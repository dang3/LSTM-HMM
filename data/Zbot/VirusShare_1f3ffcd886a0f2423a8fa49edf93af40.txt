push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
pop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
shlb
pop
add
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
jmp
ret
xor
mov
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
jmp
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
je
add
lret
add
add
mov
and
add
and
add
and
add
and
add
add
add
and
add
add
jle
add
mov
and
add
add
mov
add
lcall
add
add
into
and
add
add
add
add
cmp
add
add
inc
and
add
add
add
add
pusha
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jo
add
movsb
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
je
add
lret
add
add
mov
and
add
and
add
and
add
and
add
add
add
and
add
add
jle
add
mov
and
add
add
mov
add
lcall
add
add
into
and
add
add
add
add
cmp
add
add
inc
and
add
add
add
add
pusha
and
add
add
add
push
jb
jbe
je
push
jb
imul
inc
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
outsl
bound
dec
outsl
arpl
add
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
je
imul
inc
add
addl
jb
popa
je
inc
imul
jns
add
call
inc
imul
bound
gs
add
add
gs
outsl
jbe
inc
imul
jns
add
roll
dec
gs
jo
jb
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
repnz
imul
jb
je
arpl
add
movsl
add
je
gs
imul
and
gs
outsl
insl
insl
inc
jb
popa
imul
dec
add
popa
insb
inc
insb
popa
addr16
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
outsb
fs
insb
outsl
jae
add
add
je
imul
bound
gs
add
xchg
add
je
jne
jb
outsb
je
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
je
inc
jbe
outsb
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
movl
outsl
insl
gs
sbb
ja
jo
imul
or
je
jne
jae
jb
outsl
jae
add
pop
dec
jae
imul
pop
or
jae
dec
gs
popa
addr16
add
xchg
inc
gs
imul
js
push
add
int
dec
outsl
popa
fs
jne
jae
jb
add
imul
jae
popa
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
jnp
push
gs
outsl
arpl
add
push
push
inc
push
xor
cs
insb
add
or
push
push
dec
inc
imul
arpl
add
dec
inc
jb
outsl
jb
add
add
dec
inc
outsl
outsb
outsb
arpl
add
inc
popa
outsb
arpl
add
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
repnz
sti
or
mov
jae
pop
cld
scas
sub
jne
js
mov
and
cltd
int3
inc
outsb
pop
ja
out
insb
mov
mov
in
jb
repz
adc
loopne
adc
fldcw
popf
pusha
cmpsb
lcall
mov
xor
push
int3
mov
cli
inc
inc
rcrl
xchg
jp
nop
push
and
lcall
push
stos
adc
adc
nopl
add
and
test
mov
jecxz
int
adc
pop
xchg
int3
mov
lock
sub
or
xchg
out
push
push
add
fdivl
adc
push
cmp
mov
roll
loopne
inc
in
ret
cmp
xchg
sub
sbb
sub
fistpll
insl
ss
mov
pop
ljmp
cmp
jl
add
pusha
sbb
hlt
xor
sub
aas
fimuls
mov
and
fxam
add
push
int
fstps
or
sahf
push
aad
sub
or
sub
jp
jge
cmpsb
scas
xor
mov
add
cs
push
add
and
lods
in
jmp
push
push
les
mov
pop
dec
or
sub
sti
adc
addb
add
mov
mov
insl
sub
pop
mov
mov
cltd
cmc
dec
ds
and
pop
out
xchg
inc
dec
mov
ja
adc
fistpl
push
mov
mov
push
mov
clc
in
pushf
xchg
cwtl
and
pop
scas
call
outsl
stc
fdivrs
fwait
inc
mov
imul
call
into
sahf
lds
mov
les
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
imul
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
lods
lods
scas
test
stos
stos
mov
mov
lcall
jg
add
jp
lods
lods
lods
add
cmpsb
cmpsl
push
mov
mov
mov
rol
leave
leave
lret
int
rcl
in
rcl
shl
rcl
shl
lret
int
hlt
enter
enter
mov
in
mov
mov
stos
lods
lods
lea
pushf
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
lods
scas
and
mov
mov
lret
lret
rcl
sar
xlat
xlat
std
xlat
fcom
xlat
fcomp
aad
dec
ror
dec
iret
iret
aam
aad
iret
iret
sar
rol
std
mov
mov
out
lods
lods
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
scas
lods
scas
add
lods
sbb
mov
jnp
mov
sar
mov
lret
dec
rcl
fcomp
fdivr
xlat
fcom
call
aad
dec
int
dec
int
call
rcl
dec
into
int
ret
mov
mov
scas
std
movsl
cmpsb
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sar
enter
int3
into
call
aam
fcomp
fdivr
xlat
call
aad
dec
into
int3
dec
lret
lret
dec
int3
int
mov
mov
pushl
cmpsl
test
cltd
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
fs
aas
ds
sbb
sbb
or
sbb
xor
aaa
aaa
aaa
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
sar
ret
leave
dec
into
iret
call
aam
call
aad
call
ror
dec
leave
enter
inc
mov
mov
scas
lods
scas
jmp
fwait
cltd
xchg
cltd
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jp
jg
jge
jb
jb
bound
mov
cmp
cmp
pop
pop
pop
stos
insl
insl
outsl
nop
arpl
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
enter
lret
lret
lret
lret
enter
ret
ret
mov
mov
mov
mov
movsl
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
cmp
or
add
add
add
add
add
add
add
add
add
add
add
jo
outsl
add
pop
or
js
nop
lea
incb
jge
idivb
jmp
outsl
outsl
out
addr16
fdivs
jae
jle
jg
js
jns
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
ljmp
popf
pushf
call
test
decl
xchg
xchg
lahf
lahf
mov
ficomps
xchg
jle
js
pop
sub
add
push
add
add
add
add
add
add
add
add
mov
push
push
cmpb
sahf
fwait
fwait
in
mov
mov
addl
mov
mov
jg
jae
jno
je
jae
jle
jge
addb
xchg
data16
cmp
and
jle
cmp
movsb
movsl
movsb
shrb
lods
stos
sti
lods
lods
lods
stos
lods
lods
stos
test
std
movsb
mov
lcall
mov
js
jns
jge
jp
xchg
xchg
movsl
movsl
cmpsb
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
movsb
out
stos
stos
call
addl
mov
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
or
dec
insl
insb
insl
jl
xchg
leave
lcall
out
cltd
cltd
cwtl
stc
nop
nop
std
mov
xchg
mov
mov
xchg
xchg
nop
lcall
test
lods
scas
lods
mov
mov
mov
mov
mov
mov
mov
fsubl
jnp
lods
cmpsb
cmpsb
add
adc
stos
stos
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
pushf
sahf
popf
std
mov
mov
xchg
in
xchg
xchg
nop
in
test
jne
femms
dec
add
add
or
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
mov
xchg
call
popf
jmp
stos
pushl
test
mov
std
ret
std
ret
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
ret
mov
xchg
decl
mov
mov
xchg
xchg
xchg
xchg
sahf
popf
sahf
movsl
cmpsb
cmpsb
stos
test
movsl
cmpsb
movsl
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jae
jbe
jl
jle
addb
xchg
in
nop
xchg
notl
lea
lcall
mov
pushl
jne
mov
pop
dec
mov
cmp
mov
test
mov
stos
stos
mov
movsl
add
mov
add
pop
adc
mov
ljmp
cwtl
decl
xchg
nop
call
xchg
call
cwtl
xchg
lcall
mov
mov
mov
out
nop
xchg
xchg
xchg
les
xchg
cltd
in
xchg
cwtl
out
xchg
lea
stc
xchg
test
std
xchg
jae
fwait
imul
movsb
pop
dec
ljmp
aaa
pushl
sub
push
ljmp
push
or
stos
and
mov
mov
lods
pushf
movsl
movsl
movsb
and
add
mov
pop
pop
adc
mov
ljmp
lcall
xchg
xchg
lcall
pushf
pushf
lcall
popf
popf
lcall
xchg
xchg
call
cwtl
xchg
call
lcall
lcall
popf
mov
xchg
insb
imul
pop
push
cwtl
push
dec
cwtl
inc
cmp
pushf
daa
push
mov
and
ljmp
and
ljmp
and
ljmp
and
adc
mov
adc
inc
mov
mov
scas
movsl
cmpsb
movsb
sub
mov
add
add
add
add
pop
pop
adc
mov
mov
cltd
call
pushf
popf
lcall
mov
mov
call
xchg
decl
xchg
xchg
js
cltd
outsl
outsl
lcall
call
xor
decl
sbb
call
adc
call
add
sahf
push
add
test
adc
lods
sub
pushl
das
push
pushl
xor
mov
xor
mov
push
inc
inc
cltd
xchg
mov
scas
scas
mov
lahf
mov
mov
add
add
add
pop
pop
adc
lods
lods
ljmp
cltd
lcall
mov
cmpsl
ljmp
stos
test
lcall
jle
decl
dec
inc
decl
sub
mov
sbb
incl
add
xchg
add
xchg
add
mov
add
nop
or
call
or
add
cmpsb
sbb
pushl
cmp
mov
cmp
inc
ds
les
inc
inc
cs
inc
das
dec
inc
cs
push
inc
inc
xchg
inc
mov
scas
lret
movsb
dec
mov
mov
add
add
add
stos
mov
push
adc
cmpsl
test
lcall
mov
test
lods
stos
stos
ljmp
scas
scas
pushl
mov
jno
mov
incl
adc
incl
or
incl
pop
add
mov
add
mov
add
nop
or
call
add
lahf
jmp
adc
mov
dec
aaa
inc
dec
cmp
leave
dec
aaa
dec
dec
cmp
int3
dec
cmp
into
push
cmp
rclb
call
push
cmp
rcrb
dec
xchg
xchg
lds
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
mov
jmp
cmpsb
cmpsl
ljmp
mov
pushl
mov
pushl
stos
stos
lcall
sub
decl
sbb
decl
adc
incl
push
add
decl
add
xchg
or
lcall
add
movsl
adc
ljmp
sub
cmp
lret
push
inc
dec
pop
inc
call
pop
inc
call
pop
dec
call
pop
dec
fsubs
fisubl
fsubl
fldenv
rclb
mov
fsubl
mov
add
dec
dec
adc
jl
lahf
popf
jmp
mov
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
decl
and
and
decl
sbb
decl
add
xchg
or
call
jmp
adc
ljmp
sbb
inc
cmp
dec
pop
dec
call
gs
call
push
fisubl
fsubrl
jmp
insl
pop
jmp
outsl
pop
jmp
outsb
pop
jmp
jo
call
xchg
xchg
int3
sarb
cmpsb
cmpsb
cmpsl
jne
lahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jne
sahf
fwait
cltd
jmp
mov
scas
lods
pushl
mov
mov
mov
mov
ljmp
dec
inc
call
sub
call
push
call
push
or
push
add
xchg
or
lcall
adc
jmp
adc
pushl
and
lret
call
imul
fbstp
fbstp
jecxz
jmpw
js
jmp
jl
jmp
jnp
call
jp
fcoml
mov
in
cmpsl
cmpsl
test
popf
lahf
lahf
adc
xchg
xchg
xchg
add
inc
adc
jp
xchg
xchg
call
sahf
popf
pushf
ljmp
mov
pushl
mov
mov
mov
lahf
lahf
lcall
xor
lcall
xor
sub
xchg
daa
push
call
push
add
cltd
jmp
adc
ljmp
add
mov
sub
call
push
inc
fdivrl
jmp
jg
jmp
xorb
xorl
xchg
xchg
in
xchg
mov
out
mov
out
mov
xchg
xchg
sarb
mov
lcall
sahf
add
jl
cmp
outsb
insb
js
xchg
out
cwtl
cwtl
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsb
cmpsl
lcall
aaa
xor
mov
inc
cmp
mov
sub
call
add
mov
adc
ljmp
adc
pushl
sbb
dec
xor
fisubl
jmp
xchg
jmp
nop
cmp
nop
cmp
xchg
cmp
xchg
cmp
xchg
test
hlt
xchg
test
hlt
xchg
xchg
repz
cmp
aam
mov
imulb
pushf
popf
daa
popf
popf
sahf
add
add
add
pop
add
cmp
push
pusha
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
rol
ret
pushl
jno
lcall
dec
inc
jmp
cmp
pushf
and
call
jmp
adc
ljmp
adc
mov
push
add
sarb
daa
jmp
ja
call
fwait
push
popf
push
popf
mov
icebp
lahf
push
lahf
xchg
push
mov
xchg
stc
mov
mov
out
sahf
nop
fnstcw
ret
scas
stos
mov
popf
popf
xor
pushf
pushf
add
add
add
inc
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
ret
sar
mov
jge
popf
dec
inc
jmp
push
dec
jmp
sbb
lcall
adc
jmp
adc
pushl
sbb
inc
pop
add
leave
and
fmuls
call
movsb
xchg
push
cmpsb
lcall
test
push
stos
pushf
push
stos
pushf
cli
scas
sahf
cli
scas
lahf
sti
mov
std
stos
pushf
push
cmpsb
xchg
fistpll
scas
mov
lahf
sahf
sahf
aas
mov
fwait
add
add
add
das
xor
cmp
dec
jecxz
bound
nop
nop
xchg
mov
mov
mov
mov
sar
mov
mov
inc
sarb
mov
push
push
pushl
xor
push
lcall
adc
ljmp
adc
add
ret
dec
sbb
call
daa
or
fistps
out
fwait
push
scas
mov
push
mov
stc
mov
cli
mov
cld
mov
std
mov
test
std
mov
sahf
jmp
shlb
mov
mov
popf
lahf
popf
dec
xchg
xchg
xchg
add
lcall
xor
xor
es
inc
inc
inc
bound
pop
xlat
jae
jo
mov
rol
ret
inc
rol
ret
inc
vshufps
dec
leave
lret
ret
mov
xchg
jmp
push
ljmp
sub
pushf
adc
jmp
add
mov
add
mov
sbb
dec
sbb
call
push
add
loopne
adc
in
jae
push
lods
lahf
stc
mov
mov
std
mov
mov
cld
shll
cld
lds
cld
enter
lds
jmp
ret
mov
ror
lret
mov
ficompl
xchg
xchg
or
add
add
xor
add
dec
dec
outsb
jo
mov
mov
aad
fldpi
aam
xlat
not
rcl
std
lret
int
dec
lret
lret
dec
lret
int3
lret
mov
mov
mov
ljmp
inc
cmp
sahf
sbb
jmp
adc
pushl
sbb
inc
sbb
call
sbb
add
loope
add
jmp
xchg
sti
mov
mov
cld
leave
mov
cld
int3
mov
std
int
sarb
sarb
out
mov
aam
lret
mov
jecxz
mov
xchg
or
add
add
xor
add
add
pop
or
leave
enter
in
in
jmp
test
loop
leave
loope
fdivp
xlat
cli
rcl
std
iret
rcl
mov
outsb
push
ljmp
adc
jmp
adc
add
ret
sbb
dec
sbb
call
sbb
add
jecxz
add
out
dec
das
clc
pushf
mov
sti
enter
int3
std
int
cld
rol
std
rol
rol
aad
aad
std
aad
xlat
enter
enter
mov
int3
mov
mov
xchg
adc
add
add
incl
std
incb
std
incb
repz
or
in
out
pop
in
out
out
sub
in
in
dec
jmp
jmp
ljmp
fstp
jmp
mov
jno
cmpsl
inc
cmp
mov
adc
ljmp
pop
add
mov
sbb
dec
sbb
call
and
fbld
add
out
or
hlt
bound
sti
scas
mov
std
aam
aam
call
int3
fcmove
fcmovne
fcmove
fmul
std
sti
aad
out
lret
mov
inc
cmpsl
cmpsb
cmpsb
mov
xchg
cwtl
add
add
add
std
add
std
incb
idiv
stc
add
hlt
repnz
icebp
icebp
push
out
repnz
pop
out
lock
lock
pop
loop
mov
jno
mov
adc
add
scas
adc
pushl
sbb
dec
sbb
call
sbb
add
in
add
jmp
adc
cmc
jbe
std
shlb
sti
cld
loopne
cld
loopne
std
loopne
cld
in
std
in
cld
in
cld
fcmovne
push
rol
jmp
dec
lret
test
test
xchg
xchg
xchg
and
xchg
xchg
add
cld
incb
cli
std
sti
add
sti
cld
add
div
or
aam
xor
mov
jae
fwait
daa
sbb
lahf
or
add
scas
adc
add
ret
sbb
dec
sbb
call
push
add
fsubl
add
out
add
lock
stc
lea
std
into
std
loopne
loopne
std
loope
jecxz
jmp
in
cld
out
in
out
std
out
out
cld
push
rol
jmp
fcom
dec
iret
into
clc
lods
lods
lods
lods
xchg
xchg
xchg
cs
outsb
outsl
add
add
add
loop
rol
sbb
scas
cmpb
and
mov
adc
pushl
pop
add
ret
sbb
dec
push
add
push
add
fbld
add
call
dec
sub
sti
mov
sar
in
in
cld
jecxz
loop
loope
sti
loope
loopne
std
stc
fcmovne
cli
fcmovne
stc
fxch
push
rol
out
mov
in
sar
aam
sti
mov
mov
cltd
lcall
pushf
pushf
pushf
add
rcl
add
ret
adc
scas
mov
lcall
adc
pushl
sbb
inc
sbb
call
sbb
fstps
add
ljmp
cli
stos
cwtl
std
ror
cli
lret
cli
rol
stc
iret
sar
lret
mov
push
lret
icebp
lret
in
leave
mov
jmp
lret
jmp
int
cli
jmp
cmc
fucomip
mov
mov
xchg
add
add
add
leave
int
mov
mov
xchg
loopne
aas
aaa
jmp
adc
pushl
sbb
inc
sbb
pop
call
daa
or
fsubrl
jmp
aaa
sbb
in
dec
ljmp
out
mov
in
scas
std
loop
scas
cld
fidivrs
mov
ffree
mov
ljmp
leave
fsubp
aad
shl
out
fbstp
icebp
out
out
popf
call
lret
lret
push
lods
lods
lods
adc
cmpsb
cmpsl
test
mov
rol
mov
mov
sahf
aam
push
dec
sahf
daa
sbb
movsl
sub
lods
aaa
and
std
mov
pop
inc
sti
ret
fs
stc
lret
jno
test
xchg
mov
shll
mov
rcl
ror
mov
ror
enter
into
mov
fcom
aam
fnstenv
gs
loop
out
out
in
in
out
xor
cmc
idiv
and
icebp
out
sbb
fcmovnu
or
mov
int3
add
add
add
ret
mov
mov
stos
xchg
lock
jne
mov
and
nop
mov
mov
mov
stos
mov
mov
cmpsl
enter
lret
mov
enter
int3
int3
addr16
rclb
rcl
dec
rcl
xlat
inc
rcr
xlat
xor
fcmovu
daa
xlat
fcmovu
sbb
fstp
adc
loopne
push
loope
out
out
in
pop
in
icebp
repnz
cld
cli
add
std
incl
std
add
std
incl
mov
mov
shrl
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
push
rol
inc
lret
int3
into
daa
int
shll
into
aam
sbb
aam
adc
rcl
or
fcom
push
aad
fiaddl
add
in
add
jmp
xlat
add
std
incb
mov
mov
add
ret
sub
ret
les
mov
mov
push
mov
enter
enter
int
lret
add
aad
add
xlat
xlat
add
xlat
add
xlat
xlat
add
xlat
loope
fcmovnbe
faddl
loop
fstp
loopne
in
out
lock
icebp
add
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
sub
xchg
xor
adc
adc
mov
mov
icebp
add
dec
push
cmpsl
mulb
outsb
sbb
xchg
cli
popa
pop
or
jge
or
dec
inc
popa
inc
lea
xchg
sub
out
scas
xor
adc
jecxz
pop
and
ljmp
in
repz
out
xchg
xor
push
mov
stos
hlt
clc
push
orl
add
in
outsl
dec
and
inc
sarb
mov
icebp
mov
popf
xchg
data16
cmp
xor
pop
push
jne
outsb
add
add
xchg
mov
sahf
aam
xlat
and
add
insb
rorl
leave
imull
jle
cwtl
push
mov
shrb
out
adc
xor
push
xor
lahf
mov
ljmp
out
adc
cmp
xor
sbb
dec
lods
rol
loope
sbb
jns
and
mov
cmp
cltd
out
or
in
mov
add
and
ljmp
sub
mov
out
jno
lods
jle
insl
imul
pop
negb
or
push
movsl
adc
mov
in
mov
subl
sub
cs
idiv
imul
add
cld
out
daa
dec
loopne
sbb
iret
mov
fdivs
repz
scas
jns
int
mov
nop
cmp
mov
pop
and
fwait
lret
ret
xchg
jp
and
jp
pop
xchg
fstpt
cmpsl
xor
leave
xchg
movsb
sub
mov
inc
popa
add
test
arpl
xchg
jb
mov
jmp
lods
into
andb
jbe
call
add
and
add
lock
sub
les
pop
sarb
mov
outsb
mov
inc
mov
xchg
pop
std
clc
push
dec
xchg
test
mov
cmpsb
jne
and
and
movsl
jecxz
jbe
mov
xor
stos
sub
cs
mov
xchg
pop
xchg
mov
clc
xchg
test
decb
mov
outsb
pop
sar
int
push
inc
adc
xchg
inc
fistps
xchg
inc
xchg
pop
add
pusha
shlb
dec
pop
ja
cmp
push
and
adc
lock
sbb
or
sub
mov
lahf
cmp
xchg
aas
push
push
in
mov
sbb
ret
sarl
lret
jne
push
sub
jb
lcall
frstor
mov
mov
inc
sarl
push
loope
lods
shlb
mov
push
aaa
or
pop
add
test
dec
fsts
ret
ficoms
inc
adc
lcall
loop
add
sahf
shlb
jecxz
cltd
dec
or
inc
in
dec
repz
adc
fsubr
out
fldl
orb
lds
inc
ret
jae
adc
jmp
sbb
push
jg
jae
add
cltd
cmp
inc
adc
loopne
add
loop
sbbb
jp
push
int
add
call
or
aad
fwait
cmp
or
mov
data16
nop
and
ret
cmp
aad
and
pop
popf
inc
sub
scas
adc
and
sar
mov
movl
cmp
mov
inc
push
push
sub
fwait
and
scas
movsl
notb
dec
movsl
cmp
sub
data16
pushf
jge
cltd
adc
test
stc
inc
xor
mov
sbb
rcrb
shlb
adc
bswap
add
jge
xor
sub
cmp
mov
or
sub
cmpsb
call
test
aam
pusha
bound
adc
jge
ret
stos
loop
xchg
sub
adc
loope,pn
imul
xchg
arpl
sub
outsb
sti
cwtl
das
cmpsl
cmp
and
xchg
leave
push
inc
push
hlt
pop
mov
cmc
in
popa
cmc
cmp
adcl
xor
rorb
jl
lcall
xor
adcl
imul
lock
int
push
int
push
xor
jg
xchg
cmp
sti
adc
gs
jno
jbe
in
sbb
lock
cli
pop
add
sti
test
xchg
call
cli
ja
mov
inc
push
cmpsl
loopne
insl
sbb
stos
in
push
stc
repnz
movsl
ljmp
shl
add
xor
pusha
push
jne
dec
sbb
sub
stc
lret
mov
and
aas
leave
in
pop
inc
mov
cmpsl
xor
popw
ret
gs
bound
push
lock
insb
arpl
mov
jecxz
mov
or
arpl
test
not
call
fsubrs
js
mov
ja
ja
pop
mov
mov
xlat
xor
and
push
mov
sub
ret
adc
mov
fcoml
push
gs
dec
loop
adc
imul
ja
pop
inc
fimull
insl
dec
inc
ss
test
enter
aam
xor
adc
mov
or
movd
push
push
push
fbstp
fs
test
dec
les
incb
loop
cwtl
lcall
mov
sub
sbb
rcrb
mov
pushf
xor
push
ja
int
stos
andb
lea
inc
jle
xor
add
imul
aas
mov
repnz
and
int
in
pop
push
movsb
lock
cli
dec
xor
insb
adc
clc
cmp
or
jae
xor
hlt
mov
pop
scas
inc
push
push
adc
lods
iret
test
xlat
inc
fdiv
mov
and
lret
inc
add
jle
and
shrb
jp
adc
dec
in
xor
insb
add
mov
pop
or
das
in
popa
dec
pop
jp
add
mov
loope
mov
push
cli
movsl
iret
pop
jae
in
movsb
sbb
jae
fcoms
shll
dec
mov
jb
pop
mov
test
and
xorl
push
aam
psrad
out
aas
jecxz
add
inc
cmpsl
fstps
mov
inc
pop
mov
push
out
aad
jbe
dec
outsb
add
pop
fwait
mov
int
sbb
and
cmp
incl
pop
jae
pop
out
push
xchg
out
jb
or
sbb
xchg
sub
cmp
mov
dec
mov
mov
fstpl
push
shr
repnz
jl
popa
adc
movsl
inc
sbbb
xchg
aad
dec
pop
mov
insl
pop
or
cmp
hlt
mov
into
adc
loop
xor
aas
dec
dec
repnz
and
cmp
adc
out
add
fcomip
movsb
push
cld
or
xor
jmp
lcall
and
and
sti
in
and
stc
popf
jecxz
sbb
fdivrs
or
jmp
cmp
lcall
in
test
leave
rcr
mov
fld
int
insl
inc
mov
jmp
aaa
cmpsl
imul
jle
and
jecxz
adc
jbe
add
leave
sbbl
mov
fsubrs
cmp
lea
pop
repnz
xchg
adc
ret
adc
xchg
add
push
out
and
add
cmpsb
fisttpl
cli
cs
inc
pusha
sbb
cmpsl
dec
or
lds
rorb
add
pop
adc
inc
jns
mov
xchg
lret
inc
mov
test
mov
jbe
dec
in
xchg
in
test
lret
cld
ljmp
inc
cmp
jmp
in
jg
iret
data16
rol
push
clc
loope
or
hlt
adcb
arpl
into
js
mov
dec
or
mov
sbb
mov
repz
push
adcb
shrl
gs
mov
inc
sub
jb
jns
imul
xchg
sub
lock
imull
lret
or
in
and
lods
inc
inc
cmp
ss
jne
push
sti
xchg
dec
xor
outsl
pushw
fcomps
fbstp
jl
push
outsb
fidivrs
push
add
jb
xchg
mov
cmpb
incb
out
cmp
adc
pop
dec
mov
adc
jo
mov
loopne
addb
repz
push
adc
inc
xchg
lock
mov
pop
cmp
movsl
stos
stc
or
mov
loopne
sbb
movsl
aad
loop
or
cmpsb
mov
push
ljmp
inc
xlat
or
mov
std
xchg
fwait
negb
insb
das
mov
dec
loop
mov
cmp
xorb
and
push
xchg
xchg
hlt
mov
das
sbb
pop
lret
or
jl
and
xorb
aam
push
aas
inc
inc
lret
bound
lea
adc
mov
xlat
das
mov
jle
lret
add
xchg
cwtl
in
lds
xor
test
mov
aaa
dec
pushf
xor
sub
loop
push
inc
pop
call
gs
outsl
mov
dec
in
nop
daa
mov
mov
pusha
fbstp
mov
push
es
pusha
mov
inc
cmpsl
jge,pt
push
in
dec
sbb
inc
imul
out
imul
push
out
outsl
mov
in
addl
int3
arpl
inc
sub
mov
pushf
xor
es
adc
in
mov
and
insl
xor
push
xchg
jg
sub
cld
xchg
pusha
xchg
xor
add
xor
dec
and
mov
jecxz
movsb
sub
dec
loop
dec
test
cmp
and
jl
fs
mov
dec
pop
lock
cmpl
pop
push
fwait
xor
stos
imul
mov
mov
rcrb
cmp
cmp
mov
adc
idivl
jmp
or
mov
jp
cvtps2pd
outsb
lcall
xor
out
mov
or
fldt
adc
mov
xor
in
jb
test
cmp
outsl
outsb
mov
and
mov
mov
out
out
repnz
mov
mov
pop
sub
mov
sbb
out
and
jne
repz
sub
push
repnz
lods
inc
test
lret
mov
faddl
push
push
pusha
mul
add
lea
add
adc
xchg
sub
push
cmpsb
sbb
cwtl
jp
push
mov
dec
data16
jae
mov
ds
js
pop
cmpsl
ds
rcll
add
mov
pop
in
test
testb
lds
test
inc
fisubrl
jno
jg
inc
fcmovb
adc
jg
shr
jbe
push
cmc
es
call
test
mov
xchg
sub
xor
mov
sbbl
inc
out
aas
add
jnp
pop
mov
sub
lea
mov
xchg
rorb
pushf
pop
insl
xchg
xor
imul
pushf
xor
flds
dec
dec
mov
push
pop
insb
fidivl
mov
jne
jno
jle
loopne
cmpsb
cmp
mov
fs
xchg
pop
cmpsb
cmp
sub
jl
jo
mov
cmp
ja
inc
pop
insb
add
xchg
sub
jo
test
mov
pop
mov
je
xor
adc
add
cmpsl
cmp
sbb
mov
or
lret
test
adc
adc
in
mov
sub
dec
cltd
and
pop
sub
outsb
sahf
mov
pushf
xor
jb
push
scas
push
push
popf
inc
inc
xchg
sub
fs
push
sbb
imul
addr16
cld
mov
jg
sbb
cmpsb
cmp
and
jae
inc
mov
sub
inc
pop
xor
popa
addr16
pop
adc
pop
cmp
pop
imul
add
std
fwait
pop
repz
mov
cmp
and
fisttps
es
jmp
dec
frstor
push
adc
vhsubpd
outsb
jae
lret
test
dec
in
dec
inc
fnstenv
pusha
notl
mov
call
or
mov
xor
dec
cmp
into
push
sti
pop
cmc
mov
inc
jecxz
movsl
mov
pop
add
jbe
data16
xchg
pop
adc
cmp
adc
mov
aaa
test
xchg
dec
inc
into
test
arpl
les
jle
imull
mov
inc
nop
shlb
hlt
mov
push
xchg
rcll
push
mov
in
test
dec
imul
xchg
fwait
xor
pop
mov
mov
jno
push
arpl
xchg
movsb
push
pop
xchg
sub
stos
fnsave
jge
or
shrl
mov
bound
or
ljmp
jge
je
int
add
lea
popf
xor
cmp
adc
and
push
enter
repz
data16
sti
std
xchg
in
jbe
jmp
push
call
shll
add
arpl
shll
lret
bound
fsts
xor
imul
sbb
xchg
sub
out
cmp
adc
mov
sbbl
xchg
cmp
and
cld
xchg
mov
fidivrs
shrb
sbb
loop
leave
pusha
mov
push
push
out
nop
xchg
pop
scas
pop
and
loope
lcall
imul
adc
push
mov
fnstenv
bound
pushf
xchg
mov
sub
imul
ret
mov
cmp
pop
lods
or
xor
cmp
mov
push
in
cli
sarl
scas
mov
dec
test
fucomi
add
cmp
push
call
fwait
repnz
cs
movsl
lahf
inc
repnz
sub
imul
or
enter
in
rcll
inc
fmull
adc
rcrl
loop
in
or
loop
leave
and
movsl
dec
shrb
rolb
cltd
push
fdivl
pop
xlat
inc
jg
jns
mov
and
lret
bound
inc
fnsave
mov
push
push
push
ss
je
and
icebp
mov
shlb
xor
fwait
xor
add
mov
dec
outsl
push
outsl
jne
subb
inc
decb
test
movsb
push
movsl
lret
jbe
out
xor
push
and
imul
mov
addl
xchg
sub
aad
loope
xor
mov
jo
push
call
and
mov
push
insl
jp
aaa
jne
jno
pop
cwtl
sbb
cmc
mov
and
mov
lods
inc
adc
lret
xor
jne
sti
xchg
xchg
test
xorl
or
lds
sub
fwait
iret
sbb
sahf
js
pushw
testb
mov
pop
repnz
dec
cli
xchg
cmp
icebp
mov
dec
gs
aas
cmp
and
xchg
adc
push
das
out
jl
pop
mov
inc
ja
sbb
popa
xchg
sub
data16
mov
loopne
xchg
bound
aaa
mov
ja
pop
cmp
mov
xchg
subb
fbld
sbb
pop
sarb
dec
repz
and
inc
stos
inc
push
pop
and
test
sbb
sti
cmp
fsubl
popa
cmp
pop
insl
jo
pop
call
icebp
sahf
cmp
loopne
mov
jge
cmp
xchg
push
sub
jae
xchg
push
sahf
in
test
mov
insl
mov
xchg
jbe
sarb
popa
jno
sti
xchg
push
mov
pusha
idivl
push
incb
and
mov
push
and
rcl
xor
pop
pop
dec
inc
xorb
sbb
ffreep
scas
into
sarl
cmpsl
adc
aaa
mov
xchg
push
arpl
movsl
dec
push
or
into
fbstp
push
sub
cmp
iret
pop
cmpsb
lret
js
ljmp
aaa
in
mov
cli
outsl
cltd
stos
add
or
cs
daa
pusha
sbb
in
cmp
idivl
add
push
pushf
ret
pop
push
mov
leave
add
xorb
sbb
push
xchg
xchg
and
adc
jl
lods
xchg
repnz
pop
add
inc
jecxz
cs
mov
mov
mov
cmpsl
ds
rol
pop
out
lock
hlt
adc
lea
push
inc
ljmp
push
mov
xchg
sub
dec
jecxz
insl
and
mov
test
pop
testb
sbb
sahf
roll
cltd
mov
adc
inc
pop
popf
xor
xorb
and
push
lods
inc
cmpsb
or
xchg
xchg
mov
xlat
mov
push
repz
cmpsl
ficoms
jno
incl
cwtl
xor
jp
leave
das
mov
movsb
sbb
fildll
pop
sahf
ja
push
call
lret
push
test
lret
ljmp
pop
mov
rcrl
roll
testb
mov
add
mov
in
cld
xchg
jge
test
mov
pop
mov
in
jge
jno
ret
or
stc
add
sbb
ja
mov
fnstenv
fsubl
jae
ds
cmpsb
dec
mov
pop
repz
out
and
inc
fidivl
xchg
mov
push
in
inc
pop
cmp
xchg
andl
dec
stc
dec
loope
mov
add
jmp
fnstenv
in
inc
xlat
fstpl
in
test
lcall
into
xchg
cli
xchg
out
or
mov
in
push
cli
mov
std
and
inc
stos
call
sbb
mov
fstpt
xor
mov
xlat
lds
shr
jg
sub
dec
hlt
loope
mov
xchg
shll
sbb
cmp
loope
sti
icebp
mov
adc
addl
aam
fs
cs
and
ret
icebp
mov
pop
push
out
pop
push
popf
pop
sub
xchg
xlat
jns
inc
ficoms
aam
push
std
pop
out
sub
inc
fidivrs
jbe
scas
push
les
in
sahf
mov
sub
mov
gs
mov
push
xchg
arpl
js
pop
dec
dec
xchg
sub
xor
push
push
loop
ret
fsubp
inc
ficoml
push
call
dec
or
out
pop
xlat
nop
daa
enter
jne
dec
in
mov
aam
int
outsb
add
dec
stos
std
xchg
sbb
xor
mov
dec
loope
push
movsl
enter
and
sub
test
lret
iret
xchg
pop
movsl
idivl
test
in
mov
sbb
xchg
fs
sub
and
pop
inc
push
jmp
jne
jo
inc
mov
ret
pop
xchg
mov
pop
sti
nop
imul
lret
mov
negl
inc
add
iret
cwtl
sbbl
sbb
sbbb
popa
lea
lods
inc
xlat
jge
lds
sbb
inc
test
stc
and
mov
repnz
ja
in
fnstenv
lret
lds
and
pop
jl
les
dec
xor
push
insb
xor
ss
or
push
aaa
addr16
push
dec
inc
xlat
jg
subb
push
movsl
sbbb
out
stc
push
mov
cmpsl
jae
jae
enter
push
cli
xchg
sbb
mov
test
stc
fidivrl
cli
xchg
jno
adcb
xchg
jle
sub
cli
xchg
rorl
fs
add
push
mov
ss
mov
pop
hlt
pop
xchg
xchg
mov
movsb
cmp
test
jae
or
mov
scas
pop
dec
out
rcr
jo
jp
lods
stos
stc
testl
loope
daa
mov
xchg
arpl
cmp
pop
lock
mov
sbb
dec
loope
cmp
mov
sbb
fidivs
pop
mov
fnsave
cld
pop
lods
inc
cwtl
sbb
mov
loope
and
pop
mov
or
int
mov
in
mov
fstpl
push
iret
and
jge
dec
out
sahf
and
in
and
ds
ds
pop
fs
imul
pop
repz
sub
bound
push
in
nop
addl
or
jo
test
adc
popf
sahf
xor
sub
jne
rorb
insb
loope
xchg
aam
or
cmp
mov
add
mov
jb
or
push
out
or
repz
mov
insl
cmp
nop
lahf
or
add
rorl
scas
arpl
aam
mov
fs
daa
rclb
repz
or
jae
jg
adc
pushf
xor
jmp
jne
jno
add
les
and
push
mov
jnp
test
lahf
ss
fnsave
loopne
mov
mov
xchg
pop
sbb
js
outsl
int3
add
out
add
adc
ss
mov
call
sti
std
xchg
movsb
add
mov
mov
sbb
hlt
out
add
mov
movsb
dec
push
out
inc
in
push
lods
fists
mov
cltd
repz
xchg
sub
inc
lahf
xor
jo
mov
dec
and
test
jb
mov
sti
xchg
scas
dec
shrl
pop
popf
xor
sbb
xchg
and
out
xchg
jp
or
ljmp
jbe
adc
fbstp
adc
in
test
js
mov
scas
out
test
jmp
mov
mov
adc
sahf
inc
into
push
lods
push
popf
fidivrs
jl
data16
push
stos
xor
sub
mov
stos
aas
or
les
cli
pop
lock
mov
adc
mov
lds
xlat
sbbl
mov
mov
xchg
jnp
cmpsb
daa
mov
popa
aam
enter
xlat
or
xchg
jmp
xchg
sub
cmp
rep
adc
push
push
out
mov
add
fwait
mov
cli
xchg
inc
movsb
movsb
cmp
push
fs
test
cli
xchg
and
inc
xlat
mov
adc
rol
sbbl
sti
ffree
pop
sbb
cltd
xor
std
xchg
adc
or
ret
jns
je
cmpsl
imul
in
sbb
lahf
loope
inc
rcrb
mov
ffreep
xchg
sub
add
lea
mov
jmp
sub
test
test
xchg
cli
aas
jmp
pop
decb
lds
cli
xchg
out
dec
jecxz
adc
mov
ljmp
and
imul
js
or
mov
xorb
icebp
mov
mov
cs
push
cmp
rorb
xchg
test
sbb
mov
jmp
test
inc
movsl
mov
and
movsl
fcmovne
pop
mov
or
fildl
xchg
lock
and
xchg
test
jmp
sub
mov
lret
push
lods
cld
jno
add
iret
test
pop
leave
pusha
mov
fisubs
dec
scas
lock
jae
mov
test
das
roll
sahf
or
gs
call
cwtl
pushl
std
sbb
sub
test
lea
jns
mov
daa
and
mov
jle
mov
xorl
dec
fbstp
mov
fwait
adc
or
mov
lock
aas
cmp
insl
sub
push
ja
jae
mov
data16
ss
xchg
push
loope
mov
rcr
mov
cmp
sbb
dec
in
xchg
enter
sbb
das
aad
imul
lods
push
lcall
and
dec
aam
xchg
js
shrb
inc
mov
pop
or
xor
ja
cmpl
mov
sbb
out
cmp
or
add
mov
mov
adc
lods
int3
cwtl
imul
insb
pop
ret
fisttps
loope
or
push
les
xor
fiadds
add
mov
pop
adc
repnz
dec
sahf
popa
aaa
in
andb
lods
jae
fiaddl
aaa
dec
sarl
xor
mov
std
dec
rorb
fnstcw
pop
dec
fmul
dec
fmull
pop
jnp
cmp
push
es
pop
jnp
rorl
sub
dec
movsl
fiaddl
aam
push
dec
cmp
sub
lcall
into
bound
arpl
mov
mov
imul
adc
push
jmp
mov
push
out
add
add
mov
ret
repz
mov
mov
pop
hlt
rolb
ds
xchg
fisttpll
std
sbb
daa
stos
add
push
fistps
xlat
pusha
dec
cmp
pop
shl
jbe
pop
data16
fisttpll
daa
mov
int3
lea
daa
mov
mov
fstpt
or
repz
outsl
inc
in
sbb
sub
xchg
outsl
sub
dec
pusha
xchg
sub
mov
push
dec
mov
loop
mov
mov
sub
scas
sub
mov
sbb
inc
add
mov
inc
je
mov
addr16
adc
pop
push
out
call
or
pop
mov
adc
and
jl
repnz
add
add
aam
dec
xorb
mov
lret
negl
jmp
pop
push
jecxz
fidivrs
dec
scas
sbb
repnz
std
xchg
cmpl
adc
mov
das
shll
add
xchg
call
in
call
test
in
xchg
cmc
sbb
mov
pushf
sbbb
jl
pop
shlb
mov
push
adc
scas
cmpsl
fs
sti
iret
inc
sbb
mov
repz
ror
data16
sti
repnz
lea
clc
imul
movsl
dec
mov
pushf
push
gs
popl
daa
xor
push
jmp
xchg
into
adc
xchg
test
xchg
sub
jae
shll
into
adc
dec
loopne
dec
shll
dec
clc
jmp
add
jge
outsl
mov
inc
xchg
je
adc
repnz
xor
adc
pop
dec
jecxz
into
clc
cmp
subl
mov
fdivr
xchg
push
inc
in
sti
mov
call
jb
xor
ret
inc
jnp
mov
mov
xor
push
rorb
adc
xor
and
mov
aas
mov
mov
xor
ds
cmp
cmp
shrb
mov
int
pushf
test
xchg
sub
leave
and
lahf
cmp
lds
divb
sub
xor
xor
js
outsl
inc
fisubs
ljmp
addr16
mov
adc
mov
jmp
xor
pop
mov
cltd
and
mov
and
pop
hlt
repnz
repz
ja
aad
pop
jno
mov
lea
out
nop
in
pusha
mov
xchg
arpl
cmp
scas
cmc
cmp
test
out
repnz
inc
and
mov
xlat
popf
mov
repz
lret
cld
in
nop
xchg
sbb
mov
sbb
mov
pop
or
push
jge
aas
ss
inc
ja
xchg
mov
mov
jb
mov
pop
pop
ret
xchg
push
sbb
testl
pop
jl
mov
shll
cmp
xor
aas
ret
xchg
adcl
jnp
lcall
aad
pop
dec
push
mov
lods
pcmpgtw
jp
jle
adc
inc
repz
adc
xchg
sub
dec
mov
daa
mov
lock
lret
aam
inc
push
cmp
jne
outsb
cs
repz
push
loop
imul
nop
arpl
cmp
dec
andl
add
jo
popf
adc
pusha
mov
dec
mov
int
sbb
decl
rcl
sub
out
add
mov
popa
lock
adc
mov
mov
xchg
inc
pop
cltd
ret
xor
imulb
scas
pop
in
xlat
fidivl
ljmp
leave
andl
xlat
inc
clc
pop
fstpl
pop
imul
jmp
xchg
lret
iret
outsl
test
das
xchg
cs
iret
cld
push
adcl
mov
push
sub
sbb
sbb
adc
pop
add
or
dec
test
es
clc
push
dec
jo
and
into
pop
lock
jmp
sub
xchg
in
dec
dec
cmp
cmp
arpl
arpl
xchg
xor
mov
shr
and
ja
daa
cmp
jbe
dec
or
mov
flds
aas
mov
rol
repz
or
mov
jbe
stos
sbb
insl
xor
out
imul
mov
mov
js
mov
push
in
fadd
fimull
sub
js
clc
mov
je
jmp
xchg
or
loope
test
sbbl
jb
cmpsl
xchg
pop
lock
sbb
jb
mul
js
sbb
inc
push
adc
das
xor
xchg
or
push
jmp
xor
jge
cmp
daa
je
cmp
aam
gs
mov
pop
imull
mov
int
xchg
inc
test
jg
aaa
and
jb
aas
and
sbb
ja
or
xor
sbb
or
inc
fcmovbe
call
popa
out
insl
inc
sbb
popf
jge
aas
cmpb
mov
hlt
push
xchg
rcl
jns
sbb
cs
adc
dec
cmp
add
sbb
insb
in
and
and
inc
adc
xor
cmp
pop
add
rcrb
pusha
adc
shrl
inc
je
mov
mov
inc
sahf
push
daa
sbb
movsl
jg
jbe
idivb
shlb
inc
lods
push
xchg
mov
ret
cmc
add
or
add
enter
sbb
jbe
and
sbb
adc
jecxz
fbstp
or
mov
and
and
jne
cmp
jecxz
sub
loope
jo
jnp
push
push
sbb
xlat
outsl
outsb
mov
sub
dec
nop
adc
adc
test
xchg
jle
or
adc
fbld
ret
push
mov
sbb
jno
jp
pop
lea
enter
xchg
out
sub
rcrl
cmp
ljmp
ja
inc
int
cmp
jo
nop
fwait
testb
bound
and
inc
xchg
mov
sbb
clc
dec
cmp
add
mov
icebp
jno
and
pop
test
dec
in
out
testl
decb
shrl
phsubw
sbb
push
add
fidivl
xor
push
sbb
cmp
lods
dec
insb
cmc
pusha
gs
shlb
aas
lret
xor
xor
call
popa
dec
xlat
pop
push
movsl
idivl
lods
xor
test
cltd
pop
lret
push
das
pop
in
push
sub
pop
push
cmp
xchg
mov
xor
adc
jl
sbbl
mov
mov
mov
les
jecxz
addr16
sbb
outsb
je
mov
imul
test
rolb
loop
addr16
repnz
or
popa
lods
rclb
sbb
sub
sti
dec
loop
lock
add
in
clc
jmp
ds
add
pop
pop
sbbl
jp
jle
cmp
pop
sbb
jecxz
add
or
inc
fdivs
xor
xchg
ret
push
lea
cmpsb
scas
fnstenv
jp
notb
mov
aas
xchg
scas
cli
int3
push
mov
fldenv
dec
call
les
es
jmp
popf
xor
pop
leave
pop
jg
cmpsl
inc
jne
loopne
mov
mov
std
mov
jbe
loope
xchg
inc
scas
inc
jns
push
sub
pop
dec
jnp
add
or
and
mov
rolb
imull
or
jno
pop
jl
stos
jae
cmp
shlb
loopew
js
push
out
mov
aas
sahf
jns
mov
ret
outsl
pop
enter
imul
rolb
adc
push
loop
mov
jnp
stc
test
pushf
or
std
or
or
mov
sbb
sbb
dec
dec
aaa
ja
dec
lcall
dec
lods
inc
nop
push
sub
mov
inc
popf
fcmovnb
pop
sahf
icebp
cld
bound
fidivs
lds
and
movsb
lods
jno
ffreep
rcll
shrb
shll
mov
xor
popa
xor
das
push
jo
inc
push
imul
addr16
push
call
mov
pop
les
pop
add
adc
push
into
pusha
push
call
in
or
repz
jo
adc
sbb
mov
mov
xchg
dec
dec
ret
fidivrs
test
mov
xchg
pop
and
xchg
sub
mov
jne
pusha
xchg
push
mov
lcall
scas
int
mov
loopne
push
hlt
fs
addb
fcoml
jp
lahf
dec
jp
inc
pop
xor
xchg
and
push
flds
cld
push
aad
int
pop
les
into
je
js
jmp
popf
add
loope
inc
rorb
jl
and
sub
cmpb
imul
adc
xor
imul
mov
popf
xorb
sbb
outsb
movsl
je
fdivs
insl
push
xorb
js
push
test
or
push
insb
pop
and
push
mov
pop
xchg
loope
push
test
jmp
push
in
cwtl
int
test
and
mov
mov
lret
fbstp
fcmovb
jno
add
in
mov
xchg
push
add
mov
mov
xchg
sub
cmpsl
mov
ljmp
push
jmp
cmp
pusha
repz
out
dec
push
es
fsubrl
and
cld
cli
xchg
cs
cmp
inc
js
mov
imul
test
pop
les
mov
cmpb
divb
add
inc
jns
test
dec
jg
pusha
mov
aad
jns
xchg
mov
mov
loopne
push
push
sub
add
clc
ljmp
dec
adc
xchg
xorl
xor
pop
mov
xchg
xchg
push
sti
mov
mov
out
add
push
fadds
xchg
sub
pop
pop
mov
dec
imul
adc
jg
push
jmp
jle
inc
fld
lahf
xor
into
gs
push
ret
outsl
push
mulb
xlat
insl
repnz
jo
mov
lea
add
pop
cmpsl
out
sbb
jmp
movb
jl
push
add
lods
pop
mov
or
push
imul
jae
mov
jb
and
pop
cmp
or
into
shl
pop
sub
ss
lods
fwait
das
mov
fldt
inc
pop
loope
pushf
fstl
cmp
mov
add
in
add
xor
mov
lret
dec
out
mov
push
inc
shrb
mov
xor
pop
mov
inc
mov
or
pop
dec
loopne
sub
push
in
int
mov
dec
add
lret
inc
pusha
mov
dec
outsb
jg
stc
push
ss
stos
test
pop
mov
mov
dec
rcrl
xchg
fwait
lods
sub
ljmp
adc
mov
add
mov
mov
daa
add
inc
shll
cltd
sbb
and
push
xor
mov
cmp
outsl
ja
insb
pop
test
pop
push
cmpl
xchg
rclb
pusha
mov
xor
enter
pushf
aaa
xor
cmp
dec
cmp
test
xchg
scas
inc
leave
mov
cmp
push
sub
arpl
lret
bound
sbb
ficoml
cmp
sub
adc
push
dec
xor
movsb
xchg
adc
pop
jb
cmp
insl
lret
subb
repz
xchg
pop
cli
sbbb
aas
push
divl
leave
and
and
mov
pushf
sbb
bound
pusha
out
mov
outsl
xlat
push
in
xorb
test
imul
mov
aas
mov
pop
mov
or
cmc
outsl
sbb
es
aad
ret
sbb
mov
xchg
lahf
xchg
add
ret
and
stc
scas
add
mov
loop
jmp
lahf
mov
xchg
dec
and
add
gs
ja
jne
in
int3
jne
sub
stos
stos
mov
xchg
or
repnz
inc
fsts
fstpt
push
xchg
mov
test
dec
mov
ja
scas
mov
loopne
ljmp
push
xor
sarb
fsubrs
and
jo
and
xchg
push
out
lret
fdiv
or
nop
mov
inc
mov
fs
xor
lds
popf
mov
iret
in
divb
adc
push
or
xchg
jae
mov
movsb
sub
mov
add
xor
outsb
adc
push
stos
dec
cmp
dec
js
fsubs
loop
int3
mov
push
mov
adc
adc
arpl
imul
pop
test
rcr
rcl
mov
popa
fdivrs
xchg
test
and
in
inc
or
data16
push
adc
push
daa
clc
add
ss
test
mov
dec
mov
mov
scas
jge
pusha
ss
bound
pop
mov
mov
push
mov
in
fs
outsl
inc
lock
xlat
xor
dec
in
pushf
sbb
fs
sbb
stos
mov
in
sub
ss
push
sub
outsl
dec
xchg
les
jb
push
pop
cli
sbb
cld
mov
lahf
add
fwait
insb
jne
rcll
pop
loopne
cmp
test
pop
inc
popf
bound
ljmp
or
add
xchg
loop
cli
push
pop
push
movlps
out
mov
cmp
cmp
call
stos
rcrl
jno
mov
adc
rol
imul
mov
pop
cmp
xchg
jecxz
lea
arpl
and
pop
push
inc
lcall
push
ljmp
paddusb
push
test
cmp
lret
shlb
dec
popf
test
or
mov
inc
cmpsb
insb
movsb
cmp
dec
and
mov
orl
and
ss
addr16
xchg
fsub
jmp
sub
mov
mov
ret
jns
je
mov
sbb
ss
into
push
popa
dec
roll
in
mov
push
jge
mov
sbbb
mov
xor
cmpsl
aam
xchg
inc
popf
xchg
or
gs
add
rcl
jne
dec
jle
scas
mov
je
sbb
ljmp
xor
movsl
pop
and
test
pop
xlat
mov
data16
popa
or
ljmp
rcrl
sub
add
xlat
or
mov
bound
cwtl
aas
mov
jno
adc
cli
jbe
mov
push
ds
pusha
pushf
push
cmp
jo
inc
jns
pop
xor
gs
jg
mov
test
inc
adc
mov
fucom
js
xchg
lret
stc
xchg
push
lret
std
push
mov
jne
insb
aaa
into
or
js
andb
aad
inc
repnz
shrl
mov
inc
mov
and
sbb
aas
out
roll
fs
inc
enter
js
sbb
lds
xchg
push
stos
leave
xor
sarb
das
insl
adc
out
arpl
or
pop
sahf
addr16
js
out
xor
into
mov
push
mov
inc
bound
inc
xchg
xchg
sub
arpl
inc
mov
pop
scas
or
movsl
cmp
sub
int3
scas
adc
imul
adc
and
les
xchg
mov
push
ret
mov
flds
cwtl
pop
xchg
adc
bound
mov
repnz
mov
filds
lock
aad
mov
inc
stos
mov
or
clc
jae
out
jbe
addr16
xchg
fiadds
sti
push
xor
mov
lock
imul
shl
xor
sahf
in
lret
jl
stos
inc
fcomps
jmp
pop
sbb
push
add
jge
jns
arpl
fstpl
inc
lahf
shrd
push
push
shlb
rcll
cs
mov
lods
inc
mov
or
popf
cmp
js
shl
dec
sub
clc
stos
icebp
mov
or
sub
ror
out
xor
cmp
mov
aad
addl
sbb
popl
sbb
xchg
out
call
jecxz
rclb
clc
push
ret
ret
in
sub
inc
xchg
dec
insb
add
sub
pop
add
popf
jae
mov
push
pop
sub
imul
mov
rcrb
scas
inc
xchg
cmp
rorb
test
lea
sti
jl
jecxz
rclb
test
lds
or
std
sub
mov
int3
pop
sub
jg
cwtl
mov
or
outsb
jl
mov
dec
stos
lahf
fsubrl
addr16
std
add
test
dec
and
inc
mov
sub
xchg
repz
mulb
dec
loopne
inc
jge
ja
push
xor
pop
xchg
sbb
xlat
outsb
lods
adc
sahf
inc
int
mov
and
popf
jno
xchg
ret
jp
xchg
pop
sub
xchg
pop
dec
and
jecxz
pop
rep
adc
hlt
dec
push
sbb
xchg
outsb
nop
test
pop
fdivrp
insb
ret
mov
in
sub
dec
push
inc
dec
sti
adc
mov
arpl
pop
push
mov
dec
inc
and
mov
or
cmp
movsb
inc
repz
shrb
dec
and
sub
and
sbb
clc
jae
mov
test
repnz
shl
mov
sub
jno
insl
scas
lds
cs
jecxz
or
sbb
jg
push
cmp
lcall
imul
push
imul
fistps
mov
mov
cwtl
stos
or
les
lahf
jmp
xchg
cmpl
mov
adc
daa
test
push
je
mov
inc
pshufw
dec
aad
in
dec
cwtl
iret
popa
add
rcl
lret
push
stc
nop
test
jne
ljmp
dec
mov
imul
dec
mov
sbb
scas
dec
or
xor
lods
mov
mov
jl
clc
and
sbb
mov
fdivs
rcrl
dec
sbb
pop
cmc
imul
mov
in
call
aam
bound
xorb
mov
mov
ljmp
sbb
lods
cltd
jae
lret
xchg
mov
je
mov
iret
adc
lret
mov
dec
lods
into
gs
dec
lds
sti
in
ljmp
inc
pop
mov
addr16
xchg
sbb
iret
mov
into
outsb
in
lock
cmp
and
icebp
xchg
mov
pop
inc
jae
aad
xchg
mov
adc
mov
cbtw
pop
fidivrl
xor
pmuludq
mov
adc
imul
lds
jno
outsl
into
outsl
push
adc
mov
mov
imul
inc
sbbl
pop
fsubrs
pop
shll
into
neg
repnz
out
jle
and
fdivl
jns
ds
cmpsl
in
mov
adc
popa
pop
aas
push
mov
and
stos
xchg
test
bound
cld
pop
fwait
or
xchg
outsb
setle
pop
insl
outsl
lods
out
jbe
stos
mov
popf
pop
hlt
ljmp
cmc
mov
jge
pop
in
and
jecxz
test
jbe
bndstx
sub
outsb
fildll
insb
adc
mov
sbb
mov
jmp
out
inc
popa
testl
inc
jns
ja
add
xchg
inc
xchg
cmp
cmp
cmpsb
test
push
cmp
fwait
sub
aaa
fwait
repz
into
xorl
adc
mov
push
das
dec
test
xlat
or
jle
pop
in
repz
bound
sbb
in
fucomip
shl
cmc
adc
pop
sub
jno
out
test
sbb
jne
test
mov
rclb
imul
xor
imul
in
add
arpl
inc
std
pop
mov
push
or
rorl
ret
mov
adc
scas
push
aas
loope
fwait
and
rol
xor
cwtl
lock
mov
push
xor
xchg
rcr
and
lods
cmp
test
inc
ss
hlt
addr16
repz
and
or
jl
sarl
aas
add
add
das
mov
xchg
add
mov
mov
pop
rcll
out
outsb
adc
jg
xchg
dec
packsswb
and
mov
add
or
leave
push
outsl
xchg
jmp
and
cmp
jbe
shrl
jbe
mov
adc
inc
fistl
test
stos
mov
sub
or
pusha
test
xor
loope
inc
stos
jno
aad
call
dec
cmpb
aas
stos
repz
lret
out
mov
int3
imul
mov
test
out
push
inc
xor
je
cmp
pop
popf
lds
int
into
imul
hlt
dec
aad
mov
gs
xor
ret
push
push
fsubrs
fimuls
nop
dec
addr16
aas
outsb
mov
rolb
sub
add
pushl
push
push
push
or
xor
adc
int
mov
mov
rcr
outsl
add
test
xchg
fs
pushf
pop
mov
mov
rclb
shrb
mov
xchg
and
add
jno
push
mov
cmp
push
inc
mov
inc
mov
and
filds
dec
shrb
fiadds
jbe
adc
cmpsl
inc
inc
idivl
in
xor
test
cltd
xor
outsl
mov
test
push
push
std
bswap
sub
mov
int
mov
push
aam
inc
push
pop
scas
or
jb
sysenter
aam
cmp
mov
cmp
jmp
stc
dec
xchg
pop
test
sbb
in
jecxz
test
mov
jp
jmp
mov
mov
or
push
adcb
test
es
xchg
mov
push
and
push
jbe
add
inc
fnstenv
mov
jg
pop
cwtl
push
mov
add
test
xor
std
jp
fidivl
rcrl
or
add
push
loope
mov
adc
inc
mov
aas
int
xor
pusha
pop
andb
xchg
pop
outsl
pop
in
xchg
nop
in
loop
push
and
add
lcall
ja
adcb
xor
pop
repz
jp,pt
in
push
jne
xchg
xor
and
rorl
flds
cmc
sub
sub
add
inc
jg
jmp
or
subl
adc
jl
rcl
jae
dec
jecxz
shl
push
dec
cmc
mov
ss
mov
outsl
adc
dec
imul
arpl
cmpsb
xchg
mov
ficoml
fidivrs
gs
inc
repnz
cmp
pop
cwtl
lret
sub
nop
imul
pop
jbe
jmp
scas
or
sub
mov
rcrb
inc
fisubrs
cmc
push
mov
iret
fnstsw
xchg
scas
xor
xchg
xor
adc
mov
iret
adc
stos
cs
andl
cmpsb
inc
int3
sti
mov
int
jbe
pushf
cmpsl
xchg
sbb
lods
lea
pop
jge
clc
popa
add
jecxz
std
lods
cmp
push
ss
inc
aas
sarl
enter
test
es
fwait
or
mov
arpl
pop
cmp
mov
inc
imulb
mov
cmp
sub
aas
ficoml
sti
xchg
cmc
shlb
outsl
ficomps
and
xchg
testb
call
or
xor
aam
inc
es
fdiv
or
scas
inc
push
mov
out
or
cmp
xchg
sub
xchg
xor
mov
mov
or
sbbb
cmp
push
or
adc
push
js
insl
les
sarb
dec
push
mov
lock
cltd
push
push
mov
push
movsb
iret
int3
xchg
mov
or
icebp
into
add
in
adc
clc
dec
mov
adc
adc
push
lret
call
pusha
mull
fidivrs
jne
jle
scas
jae
repz
repnz
and
mov
pop
xchg
sbb
scas
nop
mov
jmp
jmp
out
imulb
cmp
dec
loopne
add
imul
arpl
loop
mov
jae
imul
dec
sbb
sub
shrl
push
or
sti
stos
sbb
mov
sbb
jbe
pop
inc
ljmp
dec
cltd
pop
mov
adc
gs
xor
test
fwait
mov
ret
repz
xchg
jns
mov
lods
adc
lods
and
xchg
fildl
cmp
pushf
mov
imul
popf
mov
arpl
out
mov
test
jb
or
sahf
push
jae
lahf
pop
sbb
and
pusha
pop
int
je
mov
adc
push
cwtl
fnsave
inc
aaa
decb
mov
mov
ficoms
ja
mov
and
mov
lock
lods
movsb
push
roll
jne
push
pop
out
fcomi
subb
shr
sti
lahf
xor
xchg
pop
jle
test
ja
mov
cmp
pop
sbb
jmp
and
lret
and
loope
push
shll
inc
in
shrl
iret
xor
xchg
into
hlt
dec
jbe
insb
mov
imul
test
inc
in
mov
adc
or
gs
sub
pop
iret
pushw
cli
push
cmp
adc
loope
out
jmp
cwtl
lahf
mov
repnz
test
and
cwtl
js
lret
popa
sub
mov
xchg
pop
jns
lret
xor
fistpll
mov
loop
out
lods
or
insl
andl
enter
adc
add
cli
mov
xchg
in
xchg
pop
push
hlt
leave
push
les
icebp
pop
sbb
lea
aaa
push
mov
ss
lods
inc
stc
int3
inc
jo
sbb
arpl
sub
mov
cs
int
jno
dec
imul
push
mov
push
fidivs
leave
lret
or
and
jle
sub
inc
insl
and
push
and
je
aad
dec
mov
stos
ds
ficompl
mov
inc
fldenv
ret
pusha
pop
sbb
aad
xchg
mov
repnz
xchg
daa
dec
lea
mov
pop
cmpsb
lret
fldcw
dec
jecxz
add
push
pop
in
jnp
push
lods
insb
mov
std
jmp
xorl
hlt
inc
aam
js
sub
or
in
pushf
adc
insb
loope
insb
sbbl
pop
jecxz
sbb
cmp
imul
fwait
xchg
pop
stos
cmpl
or
sbb
xlat
push
jnp
cmp
fwait
scas
sub
pop
shlb
jg
add
xchg
insb
cmp
sub
push
fidivl
loopne
lock
and
negl
push
mov
pop
mov
lea
adc
imul
movsl
adc
shl
bnd
aad
mov
pop
repz
rol
jne
jnp
mov
cltd
or
cmp
or
jb
in
adc
pop
inc
incb
or
in
gs
das
and
inc
fwait
cmpsl
mov
mov
fsub
jnp
sti
es
jl
lahf
fbstp
mov
data16
mov
push
call
or
pop
cmp
or
sub
sbb
inc
dec
xchg
test
hlt
leave
test
sbb
sahf
repz
add
adc
std
inc
pavgw
fisttpl
add
and
jae
mov
stc
inc
and
or
push
das
pop
xchg
sarl
mov
mov
mov
sub
out
aad
fdivrl
in
add
xor
jmp
or
push
cmpsb
sbb
inc
negl
inc
sahf
mov
lret
inc
fadds
dec
xchg
sub
lock
push
mov
xchg
sub
dec
xor
insl
imul
jl
into
xchg
ss
fcoms
adc
ss
pusha
loop
add
cmp
jmp
insl
iret
test
rcrb
idiv
popw
out
pushf
jl
lret
and
mov
nop
sti
or
test
arpl
xchg
and
and
inc
add
xchg
je
cmp
push
push
mov
cmp
cmpsl
lock
dec
pop
negl
pop
cmp
inc
xchg
mov
fsubs
sbb
and
test
sbb
rcrb
xchg
mov
in
shlb
xchg
or
jae
add
or
cmpsb
cmp
pop
call
cmpb
je
mov
int3
push
pop
xlat
jmp
or
pop
pop
in
arpl
sub
dec
push
aas
inc
scas
mov
adc
jbe
jecxz
pop
repnz
insl
jnp
subb
cmp
jb
cmpb
xchg
andl
test
ds
stos
arpl
jge
mov
pop
nop
jae
push
mov
pop
push
fsubs
cmp
negb
xchg
push
xchg
jo
lea
sbb
lret
cmp
dec
popa
push
sbb
aas
pop
fwait
roll
cs
movsl
lods
xchg
sub
push
and
adc
mov
dec
xchg
mov
xchg
jo
xchg
and
sbb
cmp
jg
rcrb
nop
arpl
sub
mov
pop
imulb
mov
pop
cmp
inc
imul
sbbl
or
insb
add
pop
push
mov
sti
icebp
jmp
and
mov
push
leave
and
xor
xchg
inc
push
fisubl
and
mov
cmp
and
push
roll
jns
pop
or
mov
rcrb
mov
aaa
int
mov
xor
dec
add
icebp
jmp
and
xor
es
push
jne
xchg
lret
and
cmpsl
call
add
negb
inc
or
push
and
cmp
sti
xor
data16
mov
fbld
xor
test
orl
add
adc
jmp
andl
mov
inc
or
xchg
ret
cs
adc
push
mov
enter
mov
push
xchg
std
xchg
icebp
cmpsl
pop
jp
or
mov
mov
mov
nopl
stos
mov
sbb
push
mov
les
xlat
dec
or
xor
sbbb
cmp
ljmp
cmp
sbb
mov
push
sbb
cs
out
ficomps
xor
inc
sub
jmp
pop
outsb
xor
fbld
sub
or
lret
fdiv
mov
enter
add
ret
ficomps
fidivs
mov
test
bound
xchg
data16
loop
stos
push
in
lcall
mov
out
mov
or
call
popa
pushf
dec
outsb
into
inc
mov
mov
imul
hlt
fsubr
sar
push
xor
loope
dec
push
std
cltd
dec
mov
leave
jo
push
jmp
push
xchg
and
lods
in
mov
mov
adc
stos
lds
mov
dec
xchg
lahf
bound
mov
rorb
sub
cs
pop
mov
pop
sub
push
cli
xchg
test
inc
sahf
fiadds
jmp
rcrl
icebp
mov
add
pop
shlb
pop
jo
sbb
sub
pop
jmp
mov
bound
and
leave
sub
jbe
xor
ret
jp
leave
sahf
jp
and
dec
cmc
xorl
xchg
insb
push
pop
test
pop
insb
sbb
aaa
mov
aad
mov
jb
xor
lret
popf
hlt
lock
test
dec
ljmp
inc
in
adc
pop
pop
inc
dec
sub
movsl
scas
dec
mov
mov
adc
lcall
movsb
pop
dec
gs
das
xchg
dec
testb
aam
mov
xlat
fisttps
std
sarl
mov
dec
jge
jg
pop
cmp
sbb
dec
testb
shrl
cmp
mov
addr16
fldl
clc
xor
daa
int3
pop
xchg
pop
sbb
jbe
inc
xchg
jb
adc
push
pushl
push
test
sbb
das
push
aam
lods
shrl
mov
pop
jge
push
mov
stos
xchg
cmp
push
sub
inc
xlat
jne
xchg
inc
out
pop
mov
mov
adc
movsl
mov
shrb
dec
sbb
popf
mov
test
and
jae
std
push
cwtl
neg
arpl
subb
cli
sbb
out
in
fdivrp
push
pop
xor
fwait
xor
fs
lea
xor
dec
jnp
mov
sbb
xor
xchg
fdivp
push
inc
sar
sbb
jo
sbb
xor
cmp
aaa
jmp
or
push
push
out
jo
inc
mov
enter
add
repz
push
push
out
sbb
mov
iret
popf
inc
pop
inc
or
cmpsb
cmp
lcall
jp
mov
adc
sti
jbe
lcall
iret
cmp
aam
arpl
or
push
xchg
in
scas
jp
insl
addr16
and
fwait
lods
fwait
into
mov
adc
jo
adc
mov
ja
outsb
sbb
aam
mov
push
xor
push
fnsave
popf
push
sar
pusha
fistpl
mov
pop
jno
mov
cmp
push
dec
pop
or
sub
jmp
or
nop
mov
fcompl
scas
or
cs
cmc
sti
aad
sbb
sbb
sbb
andb
xchg
fistl
dec
into
adc
pusha
push
stc
mov
push
je
xor
cmp
popa
sub
add
push
xor
pop
and
inc
jecxz
jns
jae
xchg
adc
rolb
in
push
xchg
adc
push
icebp
leave
ja
test
pop
jbe
inc
lock
add
xchg
adc
xor
and
lahf
adc
imul
mov
push
mov
xchg
je
leave
test
sbb
mov
inc
iret
mov
fcompl
mov
cmp
aad
push
jne
pop
jo
pop
xchg
sahf
mov
ret
fdivrs
jmp
adcl
mov
clc
jae
pop
cwtl
das
mov
push
pop
xor
mov
fstpl
inc
nop
jle
call
sbb
in
inc
pop
aas
add
mov
jge
rorl
stos
pop
icebp
push
in
xor
mov
xchg
ret
leave
xchg
xor
insb
mov
sahf
cmp
repnz
sbb
outsb
add
stos
inc
fstp
fbld
xor
xor
aam
es
fcoml
ljmp
popf
xor
inc
mov
sahf
sub
ljmp
jnp
movsb
shl
or
adc
cltd
inc
aam
xchg
push
gs
adc
test
inc
push
das
inc
gs
daa
mov
xchg
and
mov
mov
pop
dec
mull
jne
idivb
rcl
repz
inc
sbb
push
xor
pushf
fwait
xchg
mov
bound
pop
sub
jge
sbb
cs
sahf
xor
mov
roll
repz
cli
push
xchg
cli
arpl
mov
inc
inc
repnz
das
out
ds
dec
in
mov
adc
aad
les
mov
ja
mov
dec
sahf
test
xchg
addr16
sbb
add
jmp
mov
rclb
dec
clc
pop
mov
jmp
lock
add
es
fistpll
leave
scas
insb
cmp
cmp
pop
rcrl
and
ret
pop
sbb
and
mov
jb
cmc
pop
pop
mov
test
sbb
xor
jmp
and
push
sbb
mov
dec
mov
scas
outsl
outsl
xor
mov
inc
pusha
out
xor
ljmp
inc
and
inc
notl
ljmp
ja
fwait
imul
mov
jge
lock
outsb
sahf
mov
sbb
out
aad
dec
cmc
sub
std
xchg
sbb
mov
sbb
call
fbld
loope
push
add
push
pop
ret
mov
xor
xchg
add
push
int3
adc
fisubl
daa
mov
add
mov
mov
in
mov
scas
outsb
sarl
mov
insl
hlt
xorb
cmp
mov
adc
mov
xchg
out
push
or
mov
daa
cmc
cmp
dec
lds
movsl
cld
pop
jno
clc
xor
inc
imulb
jge
hlt
cli
xchg
or
jb
cmp
shrl
inc
cmp
std
ja
inc
push
xchg
fwait
lods
test
scas
cmpb
sub
adc
jmp
loope
mov
jno
cld
sbb
lock
es
push
hlt
mov
jecxz
lret
and
pop
scas
incl
inc
leave
add
sub
ficompl
das
cmp
mov
ss
and
jb
ss
mov
lret
push
push
movb
and
or
aaa
inc
xchg
jne
call
movsl
mov
cmp
add
xchg
pop
lds
xchg
dec
mov
push
sti
mov
and
aad
mov
pushf
mov
cli
jne
cwtl
xor
andl
pop
cmp
sbb
push
dec
xor
outsl
dec
das
sbb
pushf
in
and
jge
popa
mov
cmpsl
les
inc
xchg
outsl
cld
mov
rorb
push
or
ss
and
inc
int3
cmp
sarb
pop
icebp
mov
fst
pop
adc
jno
cmp
mov
rorb
scas
clc
pop
mov
mov
xchg
jno
test
ljmp
insl
xchg
dec
popa
adcl
jbe
icebp
push
out
ret
mov
divb
std
pop
lods
mov
sbb
sub
in
icebp
pop
jb
pop
divb
stos
jecxz
pop
lahf
xlat
aam
pushf
mov
jl
dec
repz
push
and
jno
sub
movsl
dec
pop
pop
mov
leave
ret
out
repz
mov
int3
lret
adc
outsb
xchg
add
mov
imul
jge
cmp
push
movsl
icebp
xor
inc
scas
shl
and
std
fnsave
test
test
mov
cmpsb
jno
push
fidivrl
dec
cmp
xchg
iret
add
sbb
insb
add
js
xchg
and
cmp
sub
jg
pushf
frstor
ja
push
test
pop
pop
xor
int3
and
leave
pop
test
loopne
das
mov
pop
xor
iret
or
shl
cmp
arpl
mov
stos
fbld
subl
ret
rolb
or
scas
movsl
push
pop
pushf
xor
lret
cmpsl
fstpl
into
dec
jb
jl
in
scas
sub
dec
andb
push
push
push
jb
pop
xchg
cmpsl
jno
inc
cmp
adc
stc
int
mov
jne
pusha
mov
lret
and
jb
mov
pop
icebp
xor
pusha
out
js
mov
fnstenv
fwait
and
hlt
addr16
pop
addl
or
jmp
enter
dec
in
orb
in
mov
shll
mov
sub
inc
sti
or
outsl
ja
bound
xchg
dec
sbb
dec
sarl
in
cmp
insl
cmp
adc
sahf
adc
add
mov
aas
mov
rcl
sub
push
pushf
test
fisubrl
scas
stc
fld
inc
arpl
adc
adc
nop
cmpps
test
dec
jmp
mov
push
mov
sbb
mov
stos
loope
push
je
inc
jge
loopne
and
push
loope
jmp
aad
addl
aaa
hlt
xor
sbb
dec
dec
xchg
aad
addr16
adc
jno
icebp
insl
lcall
out
lods
xchg
shll
in
ret
mov
ret
sub
dec
call
mov
add
arpl
cmpsb
xchg
ss
outsl
mov
imul
inc
jo
mov
lods
test
rcll
push
jae
xchg
cli
lods
shrl
xchg
xor
dec
mov
xchg
mov
add
pusha
xchg
inc
or
add
push
mov
mov
in
imul
ljmp
inc
in
fwait
mov
mov
in
ljmp
loope
enter
pop
fistpll
inc
xlat
mov
pop
in
inc
clc
add
and
mov
test
push
in
shl
pop
pop
out
cltd
cmp
lods
mov
stc
xor
mov
jb
mov
rcrl
inc
pop
loope
xor
mov
cmc
jne
adc
dec
pusha
push
jae
call
out
ljmp
fstl
jmp
loopne
inc
mov
mov
loopne
mov
xorb
push
adc
cmp
xor
xchg
dec
sub
mov
pusha
divl
add
leave
lret
add
xchg
addb
adc
jmp
lea
or
xlat
inc
mov
popa
and
mov
mov
insb
fwait
xchg
add
in
push
in
cmp
fimull
jmp
int3
pop
mov
fidivrs
out
jo
test
test
push
out
mov
lods
popf
mov
inc
rorb
outsl
pushf
faddl
and
lret
lahf
push
icebp
cmc
movb
add
iret
inc
pop
add
and
imulb
jae
inc
movsb
xchg
add
or
sbb
fisubl
push
decb
loopne
clc
inc
test
test
xchg
cmc
into
es
dec
out
std
or
cmp
addl
or
jno
out
lcall
loope
sub
push
pop
mov
lea
inc
xchg
adc
dec
dec
in
das
nop
jecxz
push
out
lock
xor
cli
popl
bound
sbb
xor
jns
mov
add
es
pop
icebp
lds
mov
cmp
jmp
cltd
cmc
add
shr
and
addps
inc
sub
pop
or
mov
or
push
ljmp
and
cmc
dec
stc
and
xchg
addb
xchg
mov
pusha
xchg
ret
gs
es
jmp
jo
aas
in
ss
je
fnstenv
dec
pusha
stc
fcom
in
add
jle
and
xchg
mov
mov
mov
cmp
js
add
pushf
push
jns
das
test
or
xor
lds
jb
and
mov
inc
sbb
enter
mov
mov
mov
or
aaa
or
cmp
sbb
movsb
xor
cmp
cmp
loope
arpl
push
pop
sbb
jmp
inc
jp
xchg
mov
add
sbb
clc
sahf
stos
movsl
dec
inc
call
fsubrl
dec
gs
inc
push
int3
sub
jo
ljmp
cmpsl
sub
dec
daa
sbb
insl
pop
and
mov
mov
loop
mov
mov
mov
lret
shrl
jno
repz
cmpsb
and
out
jp
jno
lds
mov
subl
fs
pop
scas
insl
add
jnp
fcom
mov
fisttpll
dec
scas
dec
push
pop
adc
mov
ficoms
mov
mov
mov
sbb
mov
xchg
lret
pop
cmp
loop
jnp
sub
pop
push
ret
sub
notb
gs
cltd
xchg
bound
inc
fs
cmpsb
int
push
test
andl
ja
aam
adc
mov
adc
es
bound
xor
push
or
insb
js
cs
add
sbb
test
xor
cmp
inc
push
fimull
sub
dec
or
scas
cltd
mov
in
cmpb
or
icebp
inc
stc
nop
jae
xor
pop
push
cmp
aad
stos
pop
sbb
sub
in
mov
xorb
ror
mov
cwtl
and
cltd
sti
xchg
or
mov
cltd
das
add
pop
sbb
sub
ret
push
lahf
fucom
sub
inc
fidivs
dec
or
jns
std
aad
inc
cmp
jl
mov
insl
imul
fwait
sbb
jge
dec
in
lds
cltd
in
cmpsl
inc
lcall
xchg
and
shlb
mov
dec
add
jge
data16
add
scas
jo
xor
and
shrl
inc
mov
imul
rcrl
testl
mov
aam
push
adc
xchg
jb
movsb
cmpsl
iret
loop
test
popa
mov
mov
or
cwtl
push
sub
or
mov
ja
pop
xchg
sbbl
adc
mov
sbb
orl
loop
cwtl
dec
shll
pop
or
aas
icebp
scas
repnz
inc
adc
fildl
aad
fstpl
mov
jl
jg
push
andb
repnz
jmp
xchg
fdivrl
xchg
cli
sbb
xor
fisubs
scas
mov
xchg
aad
insl
insb
data16
jg
in
movsl
movsl
push
add
cli
fcmovne
add
stc
xor
movsl
dec
mov
rcll
cmp
icebp
aaa
es
or
xchg
mov
lock
push
lods
add
cmpl
fdivrl
or
mov
data16
mov
or
repz
dec
xchg
jge
mov
fistps
mov
xchg
lret
push
mov
jb
jne
loope
jecxz
and
adc
insl
sahf
mov
mov
sahf
daa
mov
or
jb
mov
xor
dec
sbb
push
imul
movb
icebp
pop
pushl
adc
adc
adc
pop
je
mov
jns
lods
inc
jmp
mov
scas
mov
adc
andl
imul
mov
pop
dec
idivl
popf
in
rcll
adc
pop
popa
jno
cmp
push
add
test
lcall
out
pop
dec
scas
push
inc
fistps
dec
pushf
inc
pop
and
fimull
jns
xchg
outsl
aaa
fs
call
cmp
cmc
mov
aam
dec
and
inc
mov
mov
mov
push
and
jle
jns
ret
stos
les
and
dec
test
jle
xchg
fcomps
mov
fxch
and
xor
in
dec
pop
cmp
cmp
or
rcrb
xchg
in
cmp
lods
sbb
addr16
xor
das
outsl
jo
inc
cmpsl
nop
dec
mov
lcall
adcb
insb
dec
mov
or
mov
pop
nop
das
shll
loop
dec
in
lret
jns
cmc
mov
cwtl
jmp
nopl
dec
es
dec
sahf
stc
fnstcw
cmp
jae
stos
rclb
jnp
mov
clc
mov
inc
push
stos
pop
jbe
xlat
jne
lret
test
loopne
into
lret
cmpsl
sti
xor
xor
lahf
pop
movsl
push
pushf
mov
call
push
int
mov
test
xlat
outsb
loopne
lcall
sbb
int
out
xchg
sub
outsl
mov
pop
stc
sahf
rcrl
call
push
sbb
sub
stos
mov
lret
shll
dec
mov
push
mov
or
cmp
dec
xor
xchg
mov
dec
push
inc
or
push
adcb
adc
fiadds
add
sub
push
testl
mov
push
push
jle
dec
lar
rolb
out
add
sbb
ss
andb
stc
xor
call
lret
aam
push
or
xchg
jbe,pt
add
stos
mov
xchg
stos
mov
pop
in
mov
pop
ficoms
rsm
sahf
jns
jb
mov
cli
jne
inc
out
aas
mov
les
out
jp
ficomps
neg
push
lcall
jle
test
aas
or
xchg
sub
rcrb
dec
cmp
cwtl
lock
mov
testb
enter
ret
out
push
mov
ret
aaa
fnsave
mov
jns
jle
sbb
fldenv
cmp
test
cmp
xor
das
pop
pop
testb
jle
inc
mov
ja
into
test
mov
bndstx
adc
fldl
pop
lock
test
loop
movl
adc
dec
fadds
fdivrl
lret
or
fs
pop
lds
dec
gs
add
bound
push
ljmp
inc
dec
aam
cmpsb
dec
cmpsl
fstpt
test
jnp
inc
flds
xor
stos
fstpt
or
test
in
add
daa
ds
jecxz
in
adc
jno
call
orb
orb
in
lods
ficomps
iret
arpl
es
fdivr
mov
add
jo
fwait
mov
outsb
in
sub
out
arpl
jb
mov
stc
nop
sti
push
pushf
int
movsb
in
std
aad
ss
jne
mov
frstor
ret
pop
sbb
or
xor
push
movsl
dec
push
fwait
pop
fildll
scas
mov
popf
mov
lcall
mov
adc
stos
sub
jne
stc
mov
fisubrl
dec
pusha
lods
cmp
jno
hlt
daa
mov
insb
cmpl
aas
jo
fnstenv
sarl
jae
stc
cmpsb
inc
lods
mov
adc
lcall
jbe
lods
hlt
xor
xchg
out
nop
sbb
mov
loopne
jae
scas
insl
das
mov
sbb
sub
xorb
xorb
scas
inc
and
push
adc
or
cmpl
lret
add
into
sub
mov
xor
rol
aam
sbbb
push
xchg
pop
loopne
mov
cwtl
cmp
jl
clc
movsl
sbb
dec
movb
dec
dec
push
rcll
inc
mov
test
and
mov
lods
pop
and
xchg
xchg
push
dec
jbe
in
jns
mov
jle
sbb
cmpsb
addr16
into
mov
push
dec
scas
mov
ret
xchg
xor
pop
add
pop
xchg
mov
aam
ja
lahf
jo
shrb
xor
jnp
mov
ljmp
or
movsl
xchg
subl
stos
popa
jecxz
mov
mov
dec
pop
xchg
and
rcrl
sub
cmp
jge
add
fwait
mov
pop
jbe
and
popa
fsubrs
rcl
pop
sub
aaa
stos
adc
inc
pop
ja
mov
push
lcall
out
xor
int3
xchg
imul
fldcw
ljmp
pop
mov
cmpsb
call
dec
test
jge
sar
pop
mov
repnz
cmc
xor
pop
insl
in
mov
lahf
mov
cmc
test
cmp
lock
mov
pop
jae
pop
repnz
testb
aas
test
inc
jmp
scas
popf
xor
in
mull
ja
nop
test
cli
jmp
or
xchg
dec
test
push
loop
pop
gs
jl
fldt
mov
mov
sbb
lods
dec
cld
ds
xor
xlat
lds
loop
lahf
jecxz
aad
in
push
aas
idiv
dec
lods
xchg
adc
roll
neg
pusha
test
fdivl
pop
push
lds
gs
mov
loope
lods
adc
ss
cmp
sub
test
dec
pop
lcall
popa
enter
sbb
cmp
movsl
cmp
shrb
jle
and
idivl
adc
test
adc
stos
sbbb
rclb
sub
mov
sti
ja
sarb
mov
gs
mov
jae
cmp
adc
imul
out
sbbb
jno
out
mov
out
push
int
jo
jp
and
add
lods
push
lods
movb
or
push
jecxz
test
popa
inc
dec
mov
cs
or
add
std
testl
sub
in
filds
rorb
movsb
call
lcall
mov
lds
jge
nop
enter
fdivl
cmp
stos
orl
je
sbb
addl
hlt
jge
shlb
rcl
or
clc
adc
xchg
mov
jecxz
dec
xor
add
mov
dec
pop
xlat
jnp
lods
dec
add
sbb
aas
imul
mov
loope
lds
les
mov
mov
cmp
loop
xor
int3
insl
int3
jg
bound
subl
jbe
std
cltd
and
js
adc
fcoms
pop
xorb
jo
mov
addr16
in
xchg
cwtl
xchg
sub
sbb
enter
shr
inc
fstp
in
icebp
shl
and
xchg
aas
mov
arpl
rorb
stc
sub
push
jle
aaa
add
fisubrl
push
lods
push
arpl
push
or
pushf
scas
mov
dec
mov
jg
inc
daa
push
aaa
add
mov
push
pxor
dec
jle
fcmovnb
in
mov
out
xor
pop
mov
sbb
fs
sub
aas
jp
pop
popa
enter
pop
out
mov
xchg
jmp
rol
arpl
add
pushf
cmpsl
inc
cmp
pop
sbbl
mov
jbe
sub
xor
repz
dec
sahf
cmp
sbb
mov
xchg
mov
fldl
mov
loop
popf
inc
fwait
mov
fisubl
into
push
lods
inc
mov
jo
int
or
insl
xor
dec
mov
cmpl
int3
scas
lea
in
pop
repz
lock
inc
jnp
dec
jno
mov
xchg
xor
scas
stc
xchg
shll
xor
jle
pop
dec
or
pop
out
dec
sub
push
repz
jmp
fcoms
lea
popa
popa
cmp
out
sbb
sbb
idivb
inc
shlb
cmp
pop
mov
ss
scas
icebp
or
sub
adc
and
iret
shlb
imul
xchg
pop
icebp
xlat
lods
cmc
sbb
mov
mov
push
adc
test
xor
mov
or
mov
mov
test
test
dec
push
clc
cwtl
pop
xor
push
insl
or
adc
hlt
sbb
mov
push
cmc
into
mov
push
lds
or
inc
hlt
fs
pop
add
add
cwtl
pop
das
inc
push
mov
push
push
movsl
xorb
les
or
enter
lcall
sbb
jecxz
pop
xor
icebp
push
inc
push
filds
mov
dec
add
pop
jecxz
rolb
push
or
push
adc
sub
pop
or
cs
rcl
push
mov
call
jmp
icebp
shrb
pushf
outsl
sbb
inc
lahf
sbb
mov
clc
push
enter
lock
cltd
sub
and
shl
dec
ja
cmc
pop
ret
xchg
dec
dec
dec
xchg
call
addr16
or
roll
out
cmp
and
pop
sbb
ds
rorl
xor
dec
pop
gs
jbe
stos
jmp
jl
subb
and
lock
sti
mov
cmpsl
loope
ficoms
leave
scas
inc
std
arpl
mov
adc
mov
mov
inc
fdivl
mov
pushf
fdivrs
or
stos
cmp
mov
js
int
mov
test
dec
mov
push
cmpsb
sub
and
xor
lahf
ds
enter
push
xchg
dec
dec
add
fldl
adc
cmp
inc
push
sub
cmp
movsb
rol
push
push
adc
shrl
dec
cmp
rclb
insb
sbb
hlt
dec
mov
jne
dec
enter
stos
cmp
out
pop
ret
shrb
pop
ds
adc
js
out
test
std
mov
daa
aaa
and
das
shll
shlb
arpl
jmp
sub
scas
stos
aas
pop
push
dec
dec
loopne
in
in
pop
pop
pop
loope
fdivrs
test
mov
mov
mov
cwtl
test
rorb
lds
ret
jl
jnp
sbb
or
sub
dec
sub
aam
pop
fildl
dec
mov
xchg
mov
mov
cmp
cmp
int3
jg
outsb
add
add
adc
push
xlat
mov
icebp
cld
and
sub
addr16
add
inc
mov
push
mov
shl
stos
push
int
jo
and
iret
pop
jle
je
jg
or
popf
jo
push
mov
xor
push
or
sarb
daa
mov
mov
test
or
lea
xor
outsb
dec
mov
fdivr
mov
pop
cmp
push
rcr
sbb
repz
add
jp
sbb
fwait
push
add
adc
and
pop
mov
dec
scas
insl
sti
mov
jnp
sbb
data16
mov
or
inc
les
iret
cmp
push
push
loope
sub
xor
and
sub
sub
dec
push
jmp
cmp
adc
ret
pop
push
xor
stc
incb
test
out
test
inc
mov
jne
enter
shr
dec
sub
leave
pop
imul
out
test
lds
jae
pop
cmp
lock
or
or
cmp
adc
xor
push
test
push
int3
lcall
mov
lret
push
repnz
scas
cmp
cmp
mov
mov
push
cwtl
push
or
cmp
push
in
iret
and
dec
push
or
xchg
test
and
xchg
ja
push
pop
lock
call
jg
cltd
pop
dec
sti
push
mov
subl
icebp
push
fildll
xor
ljmp
enter
and
mov
and
jge
into
inc
rolb
lock
faddl
inc
in
loope
adcb
addr16
mov
enter
xor
lahf
cli
dec
fs
add
mov
sbbb
lret
test
addr16
pop
leave
in
or
and
pop
sbb
add
lock
mov
js
arpl
xor
jmp
or
xchg
out
scas
push
xor
test
inc
nop
sbb
int
xchg
pop
dec
mov
xor
dec
cld
mov
les
cwtl
mov
add
jo
push
cmp
jnp
lock
loope
push
or
pop
cmp
insb
outsb
insb
xchg
adc
movsb
outsb
fdivrs
jl
mov
adc
sahf
sbb
cmpl
mov
sbb
ret
je
ret
xor
mov
pop
in
dec
cmp
cmp
sbb
xchg
in
mov
insb
bound
sbb
lods
cmp
push
aam
push
popf
or
dec
mov
imul
aam
push
jb
decb
mov
lock
into
add
and
pushf
popa
insb
dec
or
aad
pop
leave
pop
lahf
pop
aas
push
mov
icebp
xor
push
add
cltd
xor
and
lods
add
pop
sbb
lods
subb
jle
add
sub
jge
and
pop
hlt
sti
xchg
mov
test
and
xchg
test
xchg
mov
pushf
insl
xlat
outsb
mov
push
imul
lea
into
shll
pop
sub
lock
xchg
push
js
mov
mull
mov
and
jle
pop
imul
aaa
cs
xor
orl
xor
pushf
or
mov
sbb
mov
pop
dec
adc
jle
mov
and
mov
pop
push
cmp
ficomps
test
sbb
mov
cmpsl
pop
cmp
hlt
push
out
int
mov
in
in
dec
mov
push
dec
jecxz
adc
ret
xchg
subb
popa
iret
ss
aad
push
repnz
outsl
pop
add
inc
shrb
test
lret
cmp
adc
dec
jecxz
cmpsl
sub
mov
out
or
xchg
fwait
inc
enter
iret
adc
adc
add
cmc
xor
loop
std
adc
test
lret
jae
imul
pop
mov
sbb
xchg
hlt
mov
rcll
loope
cmp
xor
imul
fwait
lock
fnstenv
rol
sub
lcall
bound
fldl2t
or
cli
jb
lcall
lods
cmp
push
clc
fdivrs
adc
in
imul
dec
outsb
jle
enter
mov
adc
ret
mov
ret
popa
xor
inc
pop
lock
xchg
pop
sub
fdivp
inc
dec
dec
in
dec
lea
mov
ret
pop
addl
mov
push
sub
rcrb
icebp
push
fisubrs
test
cmpsb
inc
pop
imul
push
repz
sti
mov
adc
dec
inc
call
adc
push
repnz
out
mov
shll
sub
inc
and
lret
or
mov
and
mov
bound
mov
dec
jecxz
aad
adc
les
push
ficoms
in
lahf
popa
out
xchg
shlb
lret
jnp
jmp
loopne
mov
jp
das
or
mov
cmpl
movsb
adc
lahf
fisttpl
je
or
lock
lahf
add
mov
xchg
in
mov
je
mov
inc
int3
mov
testl
shrb
lret
push
gs
scas
jp
subb
sahf
mov
mov
push
cmp
xor
jg
or
mov
jp
push
mov
cwtl
scas
or
out
sub
add
pop
test
or
xor
push
dec
or
xor
inc
sbb
dec
pushf
add
repnz
rcll
mov
or
les
pop
push
and
popa
shl
rorb
mov
lcall
push
jo
clc
push
popf
sub
jne
lods
shll
int
xchg
rorl
add
pop
popf
arpl
xchg
sub
pop
adc
inc
push
cmc
jmp
pushf
xor
out
das
mov
decb
jo
shrb
push
sub
push
js
std
cmp
adc
xchg
xor
and
adcl
dec
aam
testl
jns
xor
adc
jno
stc
push
mov
mov
cmp
cmp
adcl
adc
lods
inc
lret
mov
jmp
in
mov
xlat
xchg
pop
scas
xchg
xor
in
and
jno
and
pop
sbb
insb
dec
jnp
mov
pop
pop
sub
int
or
fcoml
xchg
das
shrl
jmp
add
mov
out
and
movsb
cli
pusha
or
fadd
je
daa
inc
cmp
pusha
add
or
sbb
adc
loope
fnsave
inc
pop
std
dec
lea
lret
push
inc
andb
fs
mov
inc
adc
imull
lods
notb
cmp
out
or
inc
mov
cmc
mov
movsl
stc
lret
jmp
mov
sub
repz
xchg
and
dec
pop
jecxz
imul
ss
xor
and
jge
scas
add
aad
mov
pop
call
mov
ss
xchg
jle
or
cmc
lods
ljmp
pop
cmp
cmp
or
push
subl
dec
pop
mov
gs
enter
push
lock
fisttps
cmpsl
sbb
scas
sbb
xchg
jne
dec
dec
xchg
sbb
ds
push
shrb
andl
cltd
push
push
xor
pop
xor
add
fdivl
cltd
icebp
adc
test
mov
mov
sbb
adc
rolb
jmp
fisubs
ret
fdivrl
lret
mov
mov
ret
xor
adc
jg
imul
mov
cld
adc
aad
jle
mov
test
loopne
sbb
pop
outsb
hlt
mov
movsb
inc
ret
or
dec
iret
inc
mov
add
in
push
adc
pop
cmp
out
std
popa
mov
cmpsl
sbb
add
ror
fimuls
mov
mov
and
rcrb
push
pop
lsl
cmpsb
cmp
mov
les
rcl
imul
cli
jg
lcall
mov
cmpsl
scas
aam
out
in
loop
addr16
pop
cs
rclb
gs
xor
test
sub
adc
dec
mov
xchg
inc
shlb
jb
jl
sub
push
sub
xor
jnp
fnsave
pusha
xchg
cmpl
psubsb
xor
popa
fs
cmpsb
popf
leave
xor
or
outsb
data16
pop
mov
mov
sbb
shl
inc
mov
data16
in
push
divb
jg
leave
mov
push
dec
imul
add
pop
fsubrl
lahf
xlat
cmp
aaa
push
mov
std
popa
mov
xor
rcrb
mov
ds
xor
and
shlb
enter
int
sub
push
test
roll
roll
pop
je
rcrb
loop
aaa
fwait
jbe
popa
shlb
aad
ficompl
xchg
testb
dec
popf
xor
aad
cmp
or
fisubl
pushl
lods
and
pop
xor
fcmovb
pop
loop
das
add
xchg
dec
subl
movsb
call
fisttpll
pop
sub
mov
lods
insl
loopne
scas
sti
push
lahf
pop
jbe
repz
jnp
decb
mov
cwtl
sbb
syscall
fwait
jne
int
pop
mov
mov
jo
inc
fs
shufps
mov
lea
cmpsb
or
sub
daa
mov
aaa
lea
rcr
mov
xor
xchg
mov
push
xchg
inc
and
cmc
mov
int
por
sbb
ja
ss
push
push
sti
xor
inc
idivl
jae
xor
xchg
lea
aad
popf
nop
jecxz
out
inc
pop
sub
xlat
insl
add
push
dec
dec
or
pop
pop
iret
es
and
push
jo
pop
lret
push
mov
or
lock
dec
lahf
add
or
push
jg
mov
sbb
or
jmp
xor
js
mov
loop
imul
popa
in
adcl
inc
mov
pusha
int
sbb
or
movsl
xchg
mov
dec
inc
loope
ja
xchg
fsts
pop
scas
cli
sbb
outsb
fst
mov
push
fidivl
lret
in
pop
scas
dec
mov
jle
pop
mov
cmp
dec
jns
cmpsb
pop
imul
ss
and
mov
int
imul
repnz
add
sbb
rcl
jmp
adcl
mov
outsl
adc
sbb
cmp
adc
push
and
mov
lahf
mov
sarb
lods
xchg
or
int3
and
sub
hlt
add
icebp
rorl
mov
pop
outsl
pop
mov
mov
ret
out
cmp
jae
mulb
daa
cmpsb
jge
jo
sbb
or
mov
dec
push
ljmp
fcoms
inc
inc
add
push
dec
push
frstor
xor
xchg
dec
mov
sbb
js
fcompl
cltd
stos
mov
shlb
fistl
push
insb
or
push
cmp
subb
mov
push
mov
rorb
push
dec
push
js
inc
inc
faddp
aad
fs
xlat
data16
jle
xlat
adc
les
push
faddp
jle
out
icebp
push
rorb
pushf
cli
icebp
xchg
gs
xchg
pmullw
je
xor
stos
sub
adc
xchg
cli
mov
push
jge
gs
adc
jg
arpl
jl
cmp
orb
push
xor
xor
int
sub
jo
pop
ljmp
push
mov
xor
ljmp
push
sub
rclb
lret
dec
jmp
ds
cmp
out
jmp
push
mov
add
aaa
inc
add
sahf
jge
leave
scas
shlb
xlat
inc
lcall
and
in
vmovupd
jmp
fldt
cmp
out
rcrl
jle
push
popa
xchg
imul
xor
out
jecxz
dec
xlat
pop
jbe
outsb
dec
dec
pop
xor
daa
call
or
cmpsb
inc
xchg
adcl
and
lea
mov
fdivrl
ltr
ss
jge
cli
cltd
ret
in
hlt
cli
outsl
mov
xchg
test
clc
pop
dec
loope
add
add
jecxz
jp
jp
pop
mov
in
loopne
out
pop
cmp
or
bound
pushw
cltd
mov
sbb
adc
add
outsl
or
je
cmp
or
cmpsl
xchg
push
xor
pop
icebp
sub
mov
dec
iret
mov
mov
stos
mov
int3
enter
pop
dec
ja
call
movsb
mov
cmpsl
sbb
andb
jae
sbb
mov
les
mov
sub
cmp
xor
cli
scas
dec
std
out
push
stc
fwait
adc
and
add
push
std
xlat
rcll
xchg
push
imul
push
mov
pop
das
cmp
int3
add
outsl
idivl
scas
nop
xchg
and
sti
das
mov
cmp
shrb
xor
xchg
and
fcomps
aas
mov
lea
sub
xor
rolb
scas
jb
sub
push
inc
lahf
movsb
sub
mov
mov
mov
fldcw
pop
mov
mul
jg
lods
or
sti
clc
xlat
fldcw
cld
mov
in
xor
sbb
movl
test
push
inc
sub
xor
mov
inc
push
imul
aaa
sbb
push
push
pop
movsb
jle
sbb
inc
cwtl
lods
das
data16
jg
pop
pop
dec
mov
aam
in
js
roll
xchg
mov
sub
imul
addl
jae
arpl
inc
pop
add
cmpsb
xchg
pop
adc
xchg
jb
cwtl
les
inc
mov
adc
push
int3
addl
in
jmp
repnz
xor
xchg
inc
mov
out
jne
aam
int
xchg
mov
and
mov
jae
mov
dec
call
mov
push
ss
mov
es
scas
rcrl
inc
adc
insb
sub
jnp
lock
aad
shrl
repnz
pop
pop
pop
mov
push
and
pop
or
lods
pop
lret
mov
in
outsl
into
and
jo
cli
test
xor
or
dec
decb
lds
mov
gs
int3
iret
pop
ljmp
push
cmpsb
push
cmpsb
push
cmp
pop
arpl
mov
sub
mov
pop
inc
daa
popa
sbb
lock
arpl
inc
mov
cmp
push
sbb
bound
inc
jmp
inc
push
daa
sti
jbe
sti
cmp
aaa
mov
imul
dec
jecxz
add
xor
fs
xor
bound
int
ja
jle
aam
sub
mov
std
mov
jae
rclb
fdivrp
push
and
dec
je
cmc
cmp
cmpsb
jbe
jbe
dec
push
mov
fadds
and
sbb
idivb
xchg
popa
dec
push
cwtl
sahf
shrl
inc
mov
jns
jl
sbb
call
lcall
cmpsb
cmp
popf
clc
cmp
push
insl
mov
jmp
ss
test
inc
fdivs
inc
fidivs
shll
je
jmp
add
mov
mov
movsb
lods
stos
call
loopne
push
lahf
lods
push
push
xchg
jl
or
out
pop
xor
jns
jecxz
push
push
fists
add
dec
or
cmp
mov
sbb
mov
loopne
pop
or
stos
pop
lock
loopne
mov
aam
or
pop
add
es
push
sbb
pop
inc
mov
jne
jle
fcmovb
insb
test
and
push
ret
outsl
sub
mov
sbb
sti
stos
jle
push
jbe
call
sub
add
xor
jg
scas
sub
push
adc
sahf
sbb
lds
jge
insb
push
jo
jnp
rcll
in
lds
cwtl
xor
xor
xchg
imul
popa
hlt
mov
les
pop
shll
jg
rcll
shrl
shl
ficomps
mov
divl
fwait
rorb
rcrb
test
pop
cld
xchg
into
push
stc
pop
sub
negl
and
pop
push
inc
push
data16
pop
les
psubd
xchg
test
inc
out
lret
sub
ret
insl
testb
ret
ds
mov
ljmp
rcr
mov
dec
stc
data16
out
imul
xor
aaa
scas
xor
orl
dec
lods
adc
fldl
aaa
je
mov
inc
jo
mov
test
jp
cli
mov
sub
jnp
dec
and
std
xchg
jae
jle
sbb
popf
lods
aaa
or
mov
pop
repnz
ret
sub
mulb
loop
sub
lods
and
clc
push
inc
cmp
mov
jbe
fstpt
out
stos
jmp
in
outsl
mov
dec
and
pop
por
les
pop
in
divl
je
rcrl
xlat
movsl
mov
xchg
adc
aam
xor
out
adc
cmpsb
inc
mov
lods
mov
outsb
stos
int3
push
xchg
leave
pop
cs
lret
outsl
dec
mov
push
add
xor
cmpsl
or
pop
jl
lcall
jmp
mov
lods
push
add
cmp
xlat
int3
ret
and
movb
insb
lods
push
out
sub
scas
pop
or
call
scas
stos
jo
mov
dec
dec
cs
repz
dec
decl
jnp
and
dec
mov
arpl
push
mov
shlb
popl
in
enter
pop
fs
mov
dec
in
dec
repnz
arpl
jb
es
sbb
mov
rorl
pop
mov
loop
dec
pop
mov
xchg
sub
loope
das
dec
pop
test
xor
sbb
dec
js
jmp
fadd
jo
imul
sbb
fcomps
mov
xchg
scas
out
aad
outsb
cmp
push
push
ret
add
and
ret
cmc
das
add
pop
shr
jge
mov
idivb
pop
sub
outsl
push
xchg
mov
insl
mov
push
add
xchg
fimuls
orl
aad
orl
push
fs
ja
inc
ljmp
mov
in
sbb
push
mov
pop
stc
xor
ja
fidivrs
xor
adc
pop
popf
rcrb
push
rcrb
out
mov
mov
xlat
daa
outsl
pop
stos
sub
aad
xchg
xor
cmp
push
adc
adc
movsb
aas
fistl
imul
and
mov
fisubs
rcr
inc
pop
fs
inc
enter
das
orb
or
mov
aas
add
xchg
jns
sub
fsubrs
or
adc
and
insl
pop
imul
xchg
xchg
aad
lock
in
movsl
icebp
stos
scas
dec
cmpsb
cltd
ret
or
shrb
outsb
popa
daa
jmp
mov
ljmp
inc
jbe
push
pop
int3
stos
xorl
or
add
cmp
sahf
clc
jecxz
lret
mov
imul
add
clc
stc
push
sub
ficompl
cmp
int
sub
das
aad
mov
xchg
mov
xchg
mov
repz
in
cltd
mov
fdivrp
mov
jge
das
lock
xchg
cmc
mov
mov
dec
es
dec
in
mov
mov
sahf
pusha
in
iret
sahf
pop
xchg
shlb
in
cmp
lahf
jmp
or
idivl
out
pop
mov
dec
xchg
inc
popf
pop
inc
lods
sti
orl
or
in
stc
xchg
dec
jp
cld
mov
jp
fxam
jl
fildll
fisubrl
sbb
cld
mov
fs
outsb
xor
sub
ret
hlt
and
out
mov
xor
sub
xchg
aas
ret
mov
es
mov
stc
or
sub
lret
sub
push
add
les
sub
ret
daa
xor
xor
ficompl
cwtl
jnp
and
push
pop
repnz
call
leave
aam
jb
in
sbb
mov
bound
add
movsb
cmp
lods
enter
sti
fidivrs
test
test
cmp
dec
in
pop
adc
lock
fsubr
xchg
adc
adc
shl
bswap
leave
mov
mov
cmpsb
mov
or
outsl
popa
lret
mov
inc
imul
xor
xor
mov
push
ds
mov
fcomps
or
les
push
fisttpl
or
jg
pushf
cld
aaa
and
insb
inc
mov
notl
adc
insb
loopne
mov
mov
xchg
addb
cs
stos
add
push
cmp
cld
out
dec
scas
jbe
pusha
test
sub
jae
out
lock
dec
out
data16
pop
mov
dec
mov
sub
fcompp
mov
mov
push
jb
fmull
sbb
hlt
lods
push
jmp
mov
lods
stc
xchg
push
jecxz
pop
xlat
jbe
add
cld
mov
add
adc
xorl
cmc
mov
das
cmpsl
mov
inc
mov
adc
or
jb
nop
cwtl
cli
mov
and
push
inc
inc
or
jae
ljmp
loope
xlat
adc
in
mov
dec
pop
ret
jnp
imul
lods
dec
scas
lock
data16
les
lea
cwtl
lahf
inc
pop
shrl
fs
lods
icebp
mov
xor
loope
stc
out
psrld
xor
add
sbb
rcll
dec
jle
stos
ss
mov
gs
dec
lock
mov
push
sub
pushf
jg
imul
int3
iret
enter
cs
cmp
pop
out
fdivl
lea
movsb
lock
ret
push
jbe
jne
ss
push
call
push
lret
sub
mov
add
sahf
sbb
sbbl
mov
dec
xchg
mov
inc
outsl
cmp
sbb
outsb
jl
cmp
mov
ret
sub
mov
movsb
add
pop
dec
cmp
cld
xchg
inc
mov
fcomps
mov
jno
inc
fstpt
loope
dec
inc
shll
aad
inc
stos
mov
lea
lds
add
pushf
adc
sarb
and
pushf
xorl
mov
aad
adc
dec
cltd
mov
mov
ds
adc
sbb
rolb
xorl
pop
lea
mov
push
mov
push
mov
push
and
or
bound
nop
sub
ret
pop
push
cmp
cmc
xchg
shrb
dec
and
ss
scas
iret
sbbb
rorb
movsl
xchg
jnp
aaa
inc
jo
repnz
mov
pushf
or
mov
xchg
sub
sti
negl
sti
mov
sbb
iret
jb
mov
cmp
inc
sub
xor
cmc
ds
dec
ss
sub
fsubl
into
pop
fs
daa
mov
mov
push
movsl
enter
mov
and
ficoml
push
and
int3
sub
xchg
adc
daa
test
vpsllq
inc
insb
adc
mov
lahf
je
movsb
pop
jnp
sbb
jg
andl
add
data16
jmp
lret
scas
jae
sbb
mov
shrl
pop
dec
scas
movsl
outsb
adc
cmp
int
es
push
or
push
leave
daa
inc
sti
xor
and
sub
mov
inc
sub
mov
testl
orl
or
adc
cwtl
lahf
mov
int3
adcl
lret
rcl
movsl
imul
mov
bound
ljmp
lahf
ss
mov
push
inc
mov
in
nop
pop
xor
adc
insb
movsb
mov
lret
test
iret
xor
mov
jecxz
stos
rcrb
jbe
es
rcl
push
outsb
sub
xor
adc
adc
mov
mov
adc
xor
or
in
adc
mov
xchg
imul
jns
inc
pop
mov
cwtl
filds
test
xchg
add
cltd
push
inc
es
push
sub
mov
stos
xchg
enter
hlt
lret
inc
call
and
mov
lds
shlb
call
stos
nop
outsl
push
mov
dec
cwtl
outsb
fcmove
push
xorb
pushl
push
ljmp
cmpsb
cmp
dec
cmovno
inc
lret
addb
adc
sti
out
mov
sbb
push
out
scas
int3
fisubs
adc
mov
popf
ret
or
test
push
in
pushf
test
repnz
pop
stos
lcall
lret
lret
xor
jo
pop
push
iret
lcall
lea
mov
cmpsl
mov
adc
mov
incb
cmp
dec
mov
cmp
js
ret
push
fisttpll
cltd
std
je
cmp
push
fsub
test
sub
scas
fs
add
adc
or
mov
adc
add
xchg
fldcw
into
aad
cmp
cmp
fdivrs
push
mov
dec
pop
movsl
test
std
loope
mov
jmp
jmp
dec
cmpsl
xchg
test
out
ret
lock
add
mov
and
mov
sub
jno
mov
andl
dec
bound
out
xchg
hlt
xchg
jge
lods
xlat
outsb
fcomip
dec
push
mov
jae
mov
aam
mov
movsl
out
push
jo
xchg
stos
xchg
jne
sub
mov
mov
dec
in
int3
arpl
outsl
stc
xchg
pop
mov
sub
es
andb
adc
mov
int
push
call
je
lods
mov
pop
and
xchg
add
notb
scas
ljmp
fiadds
xor
or
mov
xchg
add
mov
inc
mov
ljmp
jb
outsl
push
adcb
or
mov
mov
scas
push
out
cltd
movsl
xor
pop
sbb
adc
arpl
jge
xchg
bound
cmc
jge
cmp
adc
add
xor
mov
filds
pop
jae
sti
pop
push
xchg
cmp
std
mov
shl
xchg
jp
xchg
push
jmp
mov
test
mov
jge
adc
and
out
inc
mov
cmp
sub
gs
repnz
or
jne
dec
popf
dec
adc
cmp
enter
repnz
andps
hlt
mov
pop
push
inc
popa
dec
cmpsl
mov
cld
cwtl
stos
mov
jp
and
loopne
and
jno
jp
sbb
cld
pusha
lret
in
in
push
mov
lar
pushf
aaa
test
mov
sbb
popf
or
xlat
mov
outsb
idivb
ficomps
xchg
cmp
jmp
add
push
or
inc
aad
ja
cmpsb
xor
sbb
pop
pusha
fwait
dec
dec
ret
and
fsubs
mov
paddsb
mulb
call
dec
cltd
dec
add
jge
pop
inc
ss
iret
push
jnp
mov
sahf
sbb
dec
leave
push
ror
add
sbb
out
sub
mov
imul
cmc
fst
xlat
push
mov
cmp
repnz
iret
ss
jo
cmp
in
push
pop
aam
cli
push
jbe
idivb
in
cmp
or
push
sub
in
mov
jp
int3
push
clc
mov
sub
inc
rorb
aas
fwait
pop
in
movsl
inc
adc
sub
add
js
rclb
and
fsubr
pop
shrl
add
push
pusha
sbb
cmpsb
leave
sub
add
add
mov
and
dec
push
rorl
cmpsl
ds
fwait
decb
scas
mov
mov
in
mov
lret
int3
jp
repz
cmpsl
mov
cmp
test
xor
jl
insb
out
je
mov
lods
mul
jp
pop
lds
push
or
cmc
or
sub
cmp
xor
lods
jle
cld
aaa
jecxz
adc
or
xchg
push
lods
push
pop
sbb
movsb
sti
xor
cltd
rclb
dec
inc
push
dec
add
sub
ja
or
movsb
imul
add
add
cs
sbbl
in
pop
add
cmp
mov
stos
mov
pushf
pop
push
cmpsb
lcall
or
or
insl
outsl
rcrl
ljmp
ja
sub
cwtl
cwtl
lods
leave
lret
int3
cmp
pop
fstpl
or
lret
movsb
pop
enter
gs
clc
jmp
clc
adc
xchg
sub
fimuls
pop
sbb
loop
xor
shrb
int
xchg
dec
imul
subl
inc
push
sbb
loopne
imul
lea
repz
addr16
mov
iret
shrb
in
add
imul
stos
test
and
test
int
xor
aad
add
cmc
mov
sbb
push
sarl
out
add
sbb
cwtl
adc
dec
pushf
clc
adc
jo
lahf
or
iret
mov
fimull
inc
sbb
cmp
push
loopne
dec
mov
push
imul
pushf
nop
imul
fnsave
jne
sbb
test
sbb
jmp
cmpsl
xchg
scas
push
mov
jecxz
lcall
sbb
lock
cmp
imul
xchg
das
repnz
sbb
xchg
inc
inc
sbb
mov
add
into
ret
addr16
adc
daa
ret
add
mov
fisubrl
cmpsl
mov
and
mov
cmc
movsl
rcr
movsb
imul
mov
jae
mov
test
push
push
int
aas
sbb
in
inc
push
push
inc
adc
mov
outsb
adc
ret
pop
mov
ret
loope
mov
cmp
inc
jl
movsb
fsubrs
push
pop
sub
iret
testl
jo
dec
cmp
inc
ficoms
jbe
add
sbb
loop
pop
sahf
clc
lcall
xor
mov
lcall
adc
data16
pop
dec
loope
enter
or
sub
jmp
mov
daa
in
outsb
insb
add
fs
pop
int
icebp
mov
insb
xchg
add
pop
ds
cmp
jbe
adc
mov
test
jmp
fnsave
push
in
add
rcrl
imul
add
push
mov
add
dec
ds
scas
clc
enter
clc
sub
xchg
mov
dec
jle
jmp
shrl
or
push
test
lret
xchg
sub
xlat
xor
sbb
clc
outsl
push
ljmp
and
add
cmp
fstp
adc
add
xor
incb
sub
insl
xor
xor
sub
aad
add
repnz
or
mov
pop
sub
stos
cmp
stc
dec
rcrl
or
sbb
fs
mov
sub
jl
inc
xlat
xor
mov
mov
pop
dec
add
dec
loopne
aad
repz
push
gs
pop
cmpsl
sti
push
mov
dec
data16
mov
mov
lcall
cmpsb
jns
xor
subb
fs
int3
pop
ljmp
clc
jl
stos
inc
pop
xchg
jle
lods
push
push
fdivp
add
and
push
cmpsb
push
in
cwtl
xchg
pop
in
out
stc
sti
mov
aad
sub
into
stos
xor
fldenv
cmp
es
push
filds
and
inc
and
testl
mov
inc
push
movsl
jae
mov
out
push
adc
mov
pop
xchg
pop
jno
mov
or
adc
lret
mov
xor
xlat
pushf
cmpsb
xchg
push
cmp
mov
sbb
cmp
pop
outsl
add
and
fcomps
outsb
inc
iret
sub
dec
sbb
sbb
rsm
inc
mov
sbb
push
mov
pop
adc
pop
dec
loop
dec
pop
mov
push
shlb
repz
cmp
lret
push
mov
out
mov
shll
inc
addr16
aaa
js
imul
jmp
xchg
mov
popa
add
fnstcw
push
imul
adc
pop
inc
fdivrs
clc
imul
montmul
cmpsb
pop
shlb
adc
mov
loopne
sbb
test
mov
jecxz
or
cmp
jg
in
pop
cmp
lods
outsb
stc
mov
fildl
fwait
sub
lret
cld
enter
sbb
test
iret
add
cmp
mov
ljmp
jno
jg
sbb
cltd
xlat
cs
and
adc
adc
xor
push
xchg
call
rcll
pop
repz
sub
scas
das
push
jge
jg
shll
pop
lea
sub
mov
or
cmp
imull
add
dec
push
pushf
xor
idivb
or
and
push
aam
in
fisubrs
popf
mov
and
xlat
and
dec
mov
inc
jmp
stos
fwait
jmp
cs
dec
xchg
popa
gs
inc
xchg
sbbb
ret
aam
and
push
stos
and
bound
jb
cwtl
sub
leave
add
fxch
push
out
jae
cltd
pusha
inc
inc
inc
int
jecxz
jle
popa
xchg
mov
les
in
sub
out
test
das
xchg
cmpsb
enter
sbb
ficomps
je
push
mov
enter
imul
add
mov
rolb
jbe
aam
stos
jae
adcb
cmp
into
mov
dec
jp
jo
imul
int
inc
fcmove
out
lret
sub
dec
sbbb
ljmp
pusha
jecxz
xor
push
mov
mov
jnp
imul
mov
lds
inc
xlat
jno
int
in
dec
mov
fwait
push
outsb
cmc
movsb
gs
or
movsb
sub
xorl
arpl
pop
jmp
xor
inc
mov
popf
testb
cmp
push
filds
lods
mov
add
test
lods
dec
adc
scas
sub
iret
cli
movsb
cmp
fcmovbe
and
nop
push
xor
xchg
push
or
xor
cmp
mov
lds
shlb
fistl
sahf
and
sbb
inc
cmpb
mov
rorl
or
fst
lea
out
mov
mov
pop
pop
mov
add
and
push
xchg
and
add
pop
cmp
ret
sarl
sub
pop
inc
mov
lods
cmp
adc
shlb
mov
orl
cmp
enter
mov
mov
sarl
fldenv
fidivrs
mov
xchg
movsl
shl
mov
sub
mov
and
enter
add
cmp
in
jecxz
push
sub
sbb
add
adc
pop
imul
fisttpll
outsl
cli
repnz
push
mov
sub
sbb
test
jmp
or
inc
daa
sub
pop
and
dec
mov
popf
mov
jae
pop
movsl
jno
inc
in
cmpsb
mov
movsb
pop
roll
ja
push
xor
fwait
ret
sbb
sbb
push
pop
pop
scas
sub
in
popa
jmp
addr16
and
sub
loope
daa
push
add
jge
sub
dec
pop
and
out
inc
xlat
cmp
hlt
int
mov
sbb
jle
aas
les
rcrl
fnsave
bound
xchg
mov
adc
sbb
ret
mov
movsl
ljmp
mov
fwait
bswap
decb
xchg
cmp
mov
cmp
repnz
sub
xor
div
movsb
cmp
scas
inc
add
fildll
mov
pop
add
enter
add
mov
xchg
cmpsb
out
das
iret
jp
sbb
adc
in
test
shll
cmp
scas
push
lods
push
lods
aad
scas
lock
inc
lods
test
out
inc
adc
inc
ret
inc
or
bound
xchg
and
mov
inc
or
inc
clc
adc
loopne
mov
or
pop
pop
jle
ljmp
jno
pop
sbb
bnd
stc
pop
movsb
addr16
fstl
in
adc
inc
andl
hlt
jl
call
mov
cmp
add
lret
and
push
lods
les
scas
xor
mov
jle
inc
lcall
clc
inc
mov
icebp
adc
mov
mov
mov
ss
addr16
adc
cs
hlt
jge
push
imul
imul
mov
test
repnz
jmp
hlt
popf
mov
movsb
inc
or
lcall
sahf
sub
lret
cmp
femms
pusha
cmp
cmp
outsb
aad
test
adc
cmp
or
push
xor
sbb
xchg
repnz
cmp
jnp
or
mov
ss
adc
mov
push
ret
add
inc
adc
mov
test
fmulp
ss
arpl
adc
jp
push
inc
in
xlat
shlb
ljmp
jp
jmp
inc
cmp
xchg
jecxz
subl
shlb
or
mov
mov
dec
fsubrs
mov
shlb
adc
push
lret
dec
mov
adc
gs
cmc
arpl
jne
shlb
lret
cld
test
leave
stc
nop
jge
lods
mov
xor
jnp
xchg
cltd
pop
mov
dec
push
hlt
js
inc
mov
daa
push
adc
stos
js
mov
popf
cmp
std
add
mov
pop
stos
fcmovb
testl
xchg
hlt
or
test
jg
mov
es
pushf
pop
and
decb
inc
push
aam
sbb
xor
lcall
xor
jl
cmp
dec
jns
mov
and
fnstsw
mov
ficompl
ss
mov
repnz
mov
pop
sti
rcll
sbb
out
push
movsb
mov
jmp
add
or
addl
test
sbb
jmp
gs
or
fwait
xor
scas
int3
cmp
lods
sbb
test
cmp
testl
fstps
adc
mov
add
add
or
cmp
sbb
mov
and
and
cs
push
mov
sub
push
xlat
rorb
out
push
aam
cmp
jo
adc
aad
jl
data16
les
add
xchg
xor
sub
sub
popf
fbstp
sub
outsb
dec
imul
inc
fmul
sahf
mov
scas
inc
xchg
xor
or
mov
fwait
enter
mov
or
mov
cld
cltd
jbe
push
and
and
iret
arpl
push
shr
mov
in
pop
adcb
scas
ret
leave
xchg
push
lods
inc
pop
xor
lods
xchg
adc
cmp
sbb
mov
jp
jbe
fisttpl
or
scas
scas
and
sub
out
int
loope
pop
je
sbb
push
mov
fmull
leave
pusha
ljmp
push
mov
xchg
xchg
rcll
lahf
pop
imul
ret
cmp
popf
icebp
and
arpl
cmp
mov
inc
icebp
xchg
sub
push
cltd
movl
in
push
jne
stos
xchg
mov
repnz
adc
fstp
fnsave
mov
pop
sti
xchg
nop
les
aaa
lcall
push
push
imul
mov
and
and
pop
cmpsl
aaa
cld
xchg
test
scas
xchg
cmc
into
stc
js
mov
movsb
mov
xchg
dec
dec
pusha
dec
xchg
sarl
js
outsb
cmp
jb
imul
dec
xor
repz
sbbl
ds
das
xchg
ss
adc
jne
cltd
push
lea
pop
mov
fsub
decl
dec
xor
jnp
int
sub
in
test
fsts
jmp
sarl
jo
scas
ret
cmpsb
cld
mov
dec
xchg
pop
pop
into
clc
mov
mov
or
inc
and
xchg
adc
dec
js
pushf
pop
cs
insl
insl
xor
clc
dec
push
mul
xor
sub
ret
dec
inc
dec
sub
ficompl
jmp
rcrl
mov
mov
cmp
xlat
mov
pushl
sub
dec
xchg
nop
xchg
pop
dec
leave
icebp
push
jmp
insb
jnp
push
cld
out
stos
push
inc
fimull
daa
mov
mov
incl
push
insb
cli
call
mov
pop
std
push
and
stos
xchg
in
cmc
mov
mov
pop
pop
mov
daa
cwtl
arpl
xor
into
ss
loopne
and
test
aaa
push
inc
loope
cwtl
cli
or
add
sub
push
push
ret
mov
and
inc
hlt
jnp
mov
lods
in
lcall
ljmp
mov
cmp
mov
jne
pop
mov
adc
test
xchg
xchg
ret
jmp
push
and
and
xchg
jecxz
lds
xor
das
mov
jns
fnsave
sbb
out
fisttpll
xorb
dec
gs
sub
insb
stos
jb
xchg
xchg
outsb
pusha
pop
lcall
scas
sbb
in
cltd
jp
lea
adc
cmpsb
lock
movl
gs
sahf
fsubr
cltd
pusha
outsl
leave
pop
dec
jle
jb
cmp
enter
outsl
daa
mov
pop
mov
push
mov
imul
imul
aam
push
jmp
fcomps
insb
mov
mov
and
dec
psllq
xor
xchg
dec
pop
test
repnz
ret
xor
ja
add
sbb
cmc
inc
sub
pop
stos
out
jl
fmull
mov
icebp
in
inc
jmp
inc
je
mov
push
std
loop
out
mov
popa
or
mov
xor
xor
mov
icebp
pop
ss
fisubs
pop
out
pop
pop
addl
mov
lods
inc
xor
fs
inc
push
adc
jecxz
insb
mov
pop
dec
ficoml
das
mov
adc
or
push
mov
push
je
jmp
gs
mov
psubsw
adc
jno
jle
sbb
pop
mov
sub
out
adc
add
mov
lret
adc
adc
ja
out
lock
jg
sub
testl
data16
xchg
pop
pop
sub
hlt
sub
dec
in
fwait
mov
mov
shlb
lahf
adc
enter
es
in
inc
frstor
pop
jne
mov
push
test
add
popa
dec
scas
movsl
mov
cmp
cmp
cmp
das
mov
pop
les
mov
pop
cs
fnstenv
fists
dec
enter
data16
stos
xchg
testl
push
loope
arpl
aaa
icebp
cmp
ljmp
icebp
pop
cmpsb
pop
cmp
test
adc
hlt
add
stos
sahf
inc
push
adc
or
leave
cmp
pushf
scas
fcoms
xor
scas
mov
adc
xchg
xlat
outsb
enter
xor
cmc
mov
xor
pushl
push
dec
dec
aam
jle
fmulp
mov
rcl
push
push
xor
in
sbb
fcoms
mov
ds
jp
aas
inc
xchg
ret
pop
adc
xor
and
mov
es
js
or
lods
sub
push
outsb
inc
bound
cltd
cmp
push
push
mov
mov
mov
movsl
jecxz
jl
shl
ljmp
pushf
dec
pop
pusha
pop
out
mov
sbb
scas
sarb
sbb
test
jp
dec
mov
ss
cwtl
das
mov
cmp
enter
mov
fildll
xchg
jb
enter
push
jns
shlb
mov
pop
inc
dec
adc
push
push
sbb
push
xchg
les
leave
addr16
xor
cmp
movsl
sub
sbb
add
mov
jecxz
mov
sarl
xchg
dec
movsl
out
in
xchg
fdivrs
lret
push
push
sbb
cmp
push
push
scas
cmp
shrl
lds
mov
push
icebp
add
mov
js
push
out
cltd
push
call
mov
notl
push
jmp
mov
mov
decl
sti
pop
hlt
cmp
fcomip
mov
pop
lock
push
jge
in
adc
test
mov
stos
dec
xchg
rorb
into
sbb
xor
fsubrp
std
xchg
mov
inc
cld
pusha
mov
decb
mov
testl
repnz
or
jnp
jle
mov
movsl
fs
pop
xchg
call
and
enter
jmp
cmp
sbb
cmpsb
pop
push
fs
xor
sbb
fidivl
or
daa
inc
sub
adc
adc
nop
mov
shl
icebp
addr16
icebp
shr
das
js
outsb
stos
dec
dec
add
dec
mov
or
dec
aad
out
mov
and
test
rorl
jge
inc
sti
jmp
fnstcw
or
cmp
pusha
scas
cwtl
das
loopne
rorb
or
mov
and
inc
fnstenv
adc
or
adc
insb
shrl
cmp
nop
or
leave
dec
imulb
gs
pushf
jmp
daa
xor
mov
jb
mov
sbb
call
scas
cld
sbb
flds
lods
pop
addb
add
test
cs
pop
fs
sbb
mov
or
enter
insl
mov
ds
inc
dec
pop
sbb
or
dec
mov
movsb
xchg
lods
pushf
xor
popa
lds
push
ljmp
loope
cmpl
add
xorl
or
into
inc
sbb
jns
jo
ficomps
sar
push
sbb
xchg
test
nop
dec
cwtl
dec
mov
inc
lret
cli
sti
mov
mov
adc
fldl
push
incl
push
push
adc
popa
enter
pop
fdivrl
pop
scas
sbb
js
decb
ficompl
xor
rcrb
mov
in
jne
adc
xchg
sarb
dec
popf
sub
xor
dec
jnp
std
cld
sbb
fsubl
push
test
mov
loope
fucomi
dec
add
push
dec
enter
add
cmp
std
mov
mov
mov
pop
pop
add
das
mov
int
mov
inc
dec
mov
inc
adcl
jle
mov
dec
jnp
in
insb
xchg
sub
and
sub
cmp
jg
dec
xchg
add
jnp
rolb
or
jle
sbb
cmc
cmpsl
xchg
loope
or
xchg
cmp
pop
fistpll
lds
pop
pop
test
xchg
mull
or
call
jge
cmp
stos
insl
inc
sbb
xchg
mov
ds
add
insl
cmp
xor
mov
int
sub
push
mov
add
xor
stos
sbbl
outsb
inc
or
or
push
sbb
mov
cli
xor
mov
in
inc
inc
fdivl
jecxz
mov
loopne
pop
jno
sbb
inc
aas
scas
ljmp
insb
shlb
mov
cmpb
sub
pop
push
jno
mov
or
into
enter
addb
mov
and
dec
cltd
add
aam
jecxz
pop
icebp
dec
jnp
jge
movsb
sbb
add
fsubl
mov
sub
mov
xor
insl
jnp
mov
lds
cwtl
mov
loopne
mov
add
in
lret
adc
hlt
push
jmp
add
mov
mov
mov
or
sti
jb
push
mov
jp
out
les
fldlg2
loop
cld
inc
jmp
jbe
xchg
lcall
loopne
dec
add
shrb
popa
loope
arpl
mov
push
pslld
adc
mov
inc
add
stos
xor
or
cmp
pop
incb
cltd
dec
adc
fwait
jmp
xchg
sbb
int
hlt
das
test
jmp
in
daa
hlt
xchg
imul
adc
jns
pop
pop
lock
mov
cmpsb
fcmovnu
jno
aad
into
or
jnp
popa
sub
fdivl
sbb
push
pop
cmp
outsb
out
lods
sbbb
mov
inc
xor
out
jge
xchg
int
repz
dec
sbb
lcall
inc
nop
ret
test
jnp
mov
mov
mov
mov
imul
push
or
mov
xor
cltd
or
inc
shrl
ljmp
test
rcll
shll
aad
je
xor
mov
push
dec
xor
fwait
sbb
and
loope
lahf
sub
xchg
sbb
fsubrl
psadbw
out
jle
push
cs
inc
dec
sbbb
arpl
ja
sub
les
inc
test
jae
stc
cmp
test
lahf
mov
ljmp
cmp
sub
movsb
dec
pop
iret
int
add
mov
lock
mov
test
sbb
ja
dec
fs
inc
sub
push
frstpm(287
ja
fidivl
pop
es
push
push
icebp
inc
in
ljmp
lret
fsubr
lret
xchg
cltd
jecxz
inc
pop
lret
hlt
mov
dec
push
dec
std
xor
ret
es
or
mov
fistpll
dec
loope
or
out
jb
in
daa
pop
dec
in
pop
and
pusha
xor
pop
mov
jg
push
jp
je
test
push
sub
dec
aaa
in
pop
inc
sub
js
and
mov
push
test
aad
mov
imul
int
or
dec
les
xchg
push
xor
cmp
pop
outsb
mov
cmpsb
sbb
adc
sbb
pop
ds
cli
push
adc
inc
xchg
mov
dec
xor
aaa
pop
push
imul
xchg
mov
lahf
idiv
je
xor
xlat
repz
idivb
in
cmp
mov
add
or
xchg
mov
adc
jnp
pushf
cmpsl
and
inc
sub
fsub
dec
loop
subb
lret
ret
imul
add
es
imul
jo
and
popf
fiadds
cvtps2pi
mov
mov
inc
fidivrl
loope
sahf
popa
adc
jle
insl
gs
mov
ja
rol
mov
fsubs
or
mov
adc
mov
inc
rclb
imul
mov
pop
dec
add
scas
mov
gs
lods
xchg
inc
or
and
pop
ja
adc
ror
lods
inc
cld
outsb
mov
int3
sarl
xor
xchg
fcomip
mov
push
sub
mov
xchg
sbb
pop
fcompl
in
inc
aam
cmp
sahf
movsl
lret
jg
bound
rcrb
xchg
xchg
push
inc
fwait
xchg
sbb
lcall
lret
cmp
pop
aam
or
sbb
mov
pop
inc
std
pop
mov
ja
cltd
inc
inc
mov
jmp
xchg
push
imul
inc
or
inc
ret
jne
js
xchg
or
pop
lcall
xlat
gs
inc
sbb
jo
imul
cmp
dec
pop
adc
jb
jge
repnz
jns
aaa
data16
adc
xorl
jmp
push
imul
mov
mov
outsl
js
jnp,pn
imul
adc
inc
push
fs
fbld
sub
imul
inc
lods
fdivrs
adc
divl
test
lods
mov
scas
dec
aaa
jb
cwtl
outsl
xor
dec
add
fwait
push
fwait
fldcw
xchg
jne
fiaddl
add
dec
icebp
xchg
push
and
xchg
or
fildl
mov
lods
into
popa
sbb
mov
adc
and
imul
out
movsb
inc
cs
mov
adc
or
mov
mov
in
xchg
push
cmp
mov
adc
test
sarl
lret
scas
adc
je
adc
iret
push
fsubrl
mov
and
jecxz
scas
in
movb
repz
xor
and
or
and
lods
add
shl
mov
inc
nop
out
imul
les
bound
mov
and
mov
jnp
jns
and
xor
jle
fldenv
xlat
fstpt
aaa
push
cmp
stos
cmp
pop
lahf
les
mov
aas
fwait
ret
popa
dec
and
mov
inc
fdivl
jp
and
cld
mov
sbb
movsl
add
mov
mov
mov
xchg
xchg
xor
and
mov
insb
cmp
mov
mov
push
dec
lea
mov
addr16
hlt
dec
jp
push
mov
jge
mov
jae
cli
cmp
test
insl
xorl
shl
sub
mov
sub
and
insl
xchg
mov
loope
aaa
fs
pushf
lods
add
repnz
cmp
fwait
popa
ljmp
dec
stc
mov
pop
xor
dec
fbld
jp
push
out
fmull
xchg
and
add
mov
addr16
in
cmp
dec
dec
adc
mov
dec
sub
xorl
shrl
fldcw
sbb
sub
lods
mov
adc
or
adc
jecxz
hlt
jo
push
or
sub
pop
addr16
push
adc
mov
and
push
in
push
push
icebp
or
xor
lock
xchg
lcall
ss
and
mov
rcll
sub
cld
rcr
jo
lret
out
dec
dec
loopne
loop
ja
cmp
in
fidivl
mov
jns
mov
adc
add
nop
or
xor
or
xchg
cltd
mov
sti
mov
lcall
sbb
stos
movl
xchg
jns
xchg
dec
mov
adc
adc
push
pop
push
sub
jge
add
rorl
cld
xchg
cmpsl
sub
dec
fsubrs
xlat
insb
xchg
cwtl
mov
sub
push
stos
xchg
inc
call
xchg
xor
push
ret
jp
int
test
dec
scas
or
ds
lods
cmc
hlt
add
dec
decl
pop
decb
out
sub
test
ret
fiadds
ja
cld
xchg
push
adc
lahf
scas
cmp
data16
ret
or
lods
mov
sahf
push
lret
negl
sti
xor
dec
cmp
mov
dec
push
and
nop
imul
pop
dec
shlb
stos
rcrl
cmpsl
mov
fs
leave
sub
jle
out
add
mov
mov
adc
and
cmp
cmp
aad
mov
mov
fnsave
mov
xchg
sub
popf
repz
xlat
push
ss
jbe
loop
enter
push
dec
test
and
imul
push
dec
jge
sub
and
bound
cmc
mov
mov
js
jmp
pop
sub
adc
jge
enter
push
mov
test
adc
cwtl
dec
mov
out
dec
mov
test
outsb
fimuls
rcrl
cli
subl
icebp
fbstp
pusha
sahf
mov
mov
mov
cmp
push
cmp
or
aaa
mov
mov
jle
adc
gs
fadds
pop
sti
push
jmp
dec
add
xchg
cmp
in
cmp
fs
mov
sbb
lods
and
adc
nop
sbb
movsl
dec
cmp
mov
xchg
insl
mov
pop
hlt
xor
scas
mov
or
leave
pop
test
sahf
and
pop
jge
mov
sahf
jl
jle
mov
sbb
jle
dec
push
hlt
push
js
mov
jae
gs
mov
sbb
mov
pop
adcb
xor
xor
in
leave
pusha
lods
mov
das
repnz
pop
mov
scas
aaa
rorb
push
aam
in
sti
loopne
xor
jmp
pop
and
jbe
or
mov
mov
xchg
pop
rcrl
mov
fs
mov
bound
rorb
xchg
adc
push
addr16
dec
dec
fwait
xchg
cmp
and
adc
push
inc
mov
jnp
or
xchg
pop
insb
popf
xchg
popf
fisttpll
cltd
and
sbb
imul
mov
mov
cmpsb
lret
and
out
pop
jmp
icebp
add
jne
jae
repnz
test
mov
mov
insl
jnp
ljmp
cmpsl
mov
ja
mov
sti
es
jle
jl
sar
mov
sarl
dec
cmp
test
cmp
test
pop
stos
packuswb
inc
out
adc
sub
test
addr16
shrb
pushf
jecxz
cli
inc
cmp
popf
cmp
mov
pusha
int
and
and
dec
push
mov
mov
mov
xor
daa
mov
inc
out
mov
ljmp
imul
sbb
pop
das
stc
add
xchg
xor
pop
jns
sub
int
jmp
fsubl
add
fs
mov
pushf
out
repz
fimull
mov
and
fdivs
fdivs
fstpl
or
cs
rcrl
cmc
mov
roll
push
pop
hlt
dec
pop
sub
adc
xchg
add
ja
movsb
mov
lods
mov
push
xor
in
jg
inc
xchg
and
dec
js
push
imul
pushw
dec
sbb
jbe
and
lods
insl
rolb
test
jecxz
sahf
loope
je
mov
ljmp
mov
xor
mov
loop
lods
pop
jecxz
push
push
dec
xor
inc
das
xchg
xbegin
sbb
xor
xchg
gs
sahf
add
in
xchg
test
andl
es
push
sbb
cmp
cld
stos
push
fucomi
mov
xor
repnz
lods
stc
xchg
and
test
ljmp
mov
int3
dec
pop
into
and
bnd
dec
xor
popa
shlb
sub
lods
adc
es
add
in
push
mov
push
cmp
rol
sbb
jmp
sub
mov
lahf
sbbb
or
jp
sahf
in
fcomps
nop
sbbb
cmpsb
or
jb
in
xchg
mov
adc
cltd
inc
js
mov
rorb
sub
sbb
mov
sub
out
pop
xchg
sahf
out
push
xor
mov
cld
out
inc
pop
stos
jns
repz
pop
xchg
and
push
in
aaa
lret
mov
pop
sbb
mov
push
adc
xor
cmp
push
mov
mov
negl
add
jl
pop
cmp
lret
daa
pop
roll
inc
cmp
mov
fiaddl
pop
arpl
and
mov
lds
cld
movsb
divl
xchg
data16
mov
xchg
xor
push
push
cmc
sbb
idivb
pop
sahf
fwait
cmp
sbbl
pushf
shr
push
out
sbb
mov
sub
outsl
adcl
sub
mov
or
cld
xchg
xchg
test
cmp
mov
inc
js
lea
push
pop
xor
popf
cli
or
lcall
mov
push
dec
adcb
mov
repnz
cli
inc
mov
sub
inc
adc
dec
test
test
or
lock
mov
pop
xor
jnp
jno
pushf
ret
aad
mov
or
popaw
call
sub
sub
je
push
loope
pop
clc
adc
icebp
lcall
std
mov
mov
sub
xor
adc
push
xor
cli
in
ret
mov
out
arpl
mov
dec
in
sbbl
adc
das
popf
incl
cs
dec
inc
push
fimuls
cmp
addr16
ret
add
or
add
sti
shl
out
arpl
mov
insb
icebp
xor
les
aas
aad
out
mov
push
call
movsl
xchg
mov
leave
cs
das
aam
fninit
dec
out
cli
inc
sbb
out
dec
loop
fwait
xor
addb
sbb
je
fstpt
mov
pop
pop
add
jnp,pn
aaa
insl
pop
dec
loope
into
cmp
push
mov
in
cmpsl
sbb
mov
dec
mov
jb
pop
fs
sbb
pop
and
push
sub
inc
paddb
jg
mov
out
jne
out
mov
pop
cmp
out
mov
push
loop
pop
xor
add
int3
insl
dec
mov
sbbl
out
pop
sub
incb
jbe
loop
and
xchg
test
clc
cmpsb
popl
jbe
jmp
in
and
cmp
or
sbb
add
lods
movsb
add
popa
fisttps
rcll
cmpsl
ret
sbb
lcall
gs
js
and
mov
sbb
fst
adc
mov
or
cltd
cwtl
dec
sbb
cmpb
adc
ja
mov
mov
pop
pop
imul
or
mov
rol
sbb
into
lds
inc
lea
fldenv
cwtl
mul
pop
mov
cli
test
xchg
xchg
ljmp
inc
andb
fnsave
popf
lods
test
fidivl
or
push
scas
sti
cmp
stos
inc
xchg
lock
shrl
jno
dec
out
add
dec
add
std
fwait
cmpsl
push
sub
jmp
and
out
push
pushf
rorl
ja
loop
test
and
jo
lods
xchg
lods
mov
lret
clc
pop
pop
les
xor
gs
loop
jle
jno
scas
dec
cmp
sub
cmpsb
rcr
xlat
aad
ss
icebp
clc
pop
in
fwait
ret
or
loopne
adc
push
mov
inc
push
mov
xchg
into
sbb
clc
shrl
ss
push
in
xchg
icebp
lret
fisubl
mov
xorl
sbb
dec
movsl
pushf
aam
test
or
jb
js
rcrl
stos
aaa
pusha
sbb
js
add
adc
add
pop
adc
les
out
into
mov
fsubrp
fldt
jmp
adc
inc
fiaddl
int
loop
xor
push
push
push
imul
rolb
shrl
sbb
inc
jecxz
and
inc
mov
mov
movsb
cmp
jecxz
mov
ljmp
outsl
js
mov
pop
xchg
in
jne
push
xchg
push
bound
in
xor
mov
out
into
jmp
mov
sub
iret
or
ss
xchg
jnp
mov
lret
pushf
pop
cmp
mov
hlt
mov
inc
fsubs
imul
mov
pop
das
jmp
push
imulb
sbb
outsb
shlb
pop
mov
mov
sub
ret
xchg
jg
xchg
test
hlt
xchg
mov
or
cmp
jmp
or
or
xor
ljmp
jnp
push
mov
jge
mov
push
enter
mov
iret
adc
fstpl
mov
mov
sbb
pushf
or
cmp
hlt
lods
out
sbb
in
inc
lcall
sbb
cwtl
pop
cld
jge
clc
mov
ds
sbb
push
jb
aaa
das
xchg
out
imul
push
cmp
fwait
xchg
and
sbb
adc
outsb
js
test
sub
mov
rcl
mov
lds
jnp
xchg
jo
jo
sbb
mov
sbb
pop
adc
std
loopne
sub
push
jl
and
or
mov
push
in
mov
data16
bnd
test
ja
arpl
mov
push
mov
cmpsb
cmp
pop
insl
les
adc
addl
hlt
nop
xlat
pop
clc
enter
jb
lds
rorb
fwait
jb
adc
cmp
ds
insb
addb
out
mov
aad
xor
ljmp
jb
insb
dec
push
mov
stc
push
outsb
add
push
mov
test
sub
test
inc
adc
imul
adc
inc
inc
push
mov
cltd
enter
cmp
and
push
cmp
xchg
pop
movsl
stc
push
bound
loopne
jmp
dec
add
jb
jmp
or
mov
cmp
stos
add
jo
inc
lahf
mov
data16
mov
loop
cmp
jbe
mov
roll
popf
aaa
inc
fldenv
cmpsl
outsl
push
adc
pop
lea
lods
imul
imul
mov
out
imul
pop
sbb
or
lock
in
xchg
ss
stos
inc
xchg
call
mov
js
in
adc
fimuls
jl
inc
popf
das
and
add
sub
adc
dec
sbb
jge
xchg
and
cltd
mov
and
jmp
add
fsubrs
gs
negl
xchg
dec
aam
pusha
ret
push
jmp
adc
xor
pushf
sahf
hlt
sub
std
mov
add
push
xchg
mov
push
mov
nop
push
sbb
xchg
inc
cmp
dec
loopne
dec
pusha
adc
cwtl
or
outsb
lods
scas
push
loopne
mov
test
sub
idivl
jbe
mov
hlt
dec
xchg
mov
in
dec
ds
xor
add
pop
inc
ja
sti
addr16
addr16
mov
sbb
push
adc
sbb
jo
mov
ss
xchg
xchg
lcall
sti
int3
fucom
jl
add
inc
outsb
filds
and
xchg
pop
cmc
add
scas
faddl
addr16
je
out
mov
add
neg
out
and
push
mov
mov
mov
mov
sub
jb
mov
rorb
mov
or
adc
add
in
es
aad
inc
fldcw
dec
dec
ret
fldl2t
hlt
outsb
imul
lods
lock
mov
enter
mov
ds
adc
or
fs
cmp
or
jo
inc
lahf
pop
decl
lock
mov
add
cwtl
stos
pop
lret
lea
push
pop
mov
mov
and
leave
xlat
add
sbb
jo
and
pusha
mov
out
test
in
cwtl
je
out
ds
mov
ficompl
aad
pop
or
leave
or
cmp
or
jb
popf
in
and
shlb
mov
or
inc
mov
pop
ds
pop
loop
mov
push
sub
aaa
fdivs
dec
mov
popa
jmp
adc
mov
adc
jae
clc
mov
and
lods
addr16
stos
inc
jae
or
fsubrl
lret
popw
jbe
pop
sub
dec
in
loopne
pop
inc
loopne
cmpsl
std
push
outsl
mov
int3
movsl
ret
push
shrl
fldl
data16
pop
movsl
test
pop
outsl
mov
and
call
fdivrs
jle
cmp
fsubrl
out
lret
adc
jae
rcrl
rcrl
icebp
movsb
add
pop
aad
hlt
inc
mov
out
cmpsl
jne
jle
enter
shl
js
mov
movsb
inc
jns
std
push
sbb
dec
out
sbbl
dec
jb
fstpt
mov
lret
dec
insb
jg
in
jb
sub
inc
arpl
xlat
sub
cmc
mov
and
dec
push
shlb
imul
xchg
sbb
jmp
push
push
fiadds
or
int3
mov
add
fcmovnb
and
adc
shrb
dec
inc
jnp
xchg
pop
aam
aas
cmp
push
add
es
daa
rorl
leave
dec
sbb
hlt
popa
mov
jg
dec
xchg
dec
aaa
jnp
xorl
sub
mov
cmpsl
notl
push
cmp
and
xor
jne
adc
adc
bound
add
icebp
lds
adc
lods
insb
pusha
pop
or
adc
jl
adc
jbe
cwtl
push
std
cmp
out
xchg
mov
jbe
nop
pmulhuw
sahf
cmpsb
sub
lea
ja
xor
vaddps
mov
mov
roll
leave
xchg
inc
ss
in
cmp
inc
mov
mov
mov
cmp
mov
fwait
shr
cmpsl
jo
push
xor
mov
cld
mov
inc
inc
sbb
fdivs
dec
out
sub
push
jno
mov
call
mov
int3
and
dec
dec
inc
cld
jmp
xchg
sbb
and
mov
lock
xchg
jbe
lcall
push
stos
mov
das
add
mov
inc
pop
mov
push
inc
push
insb
out
and
jnp
mov
xchg
sub
xchg
icebp
adc
push
icebp
fwait
sbb
sti
out
js
and
sbb
daa
and
mov
arpl
addr16
ja
imul
jno
outsl
mov
mov
mov
and
les
jl
lahf
in
stos
cli
sbb
fldpi
mov
nop
xchg
jge
mov
or
ret
mov
lret
lret
lcall
daa
in
cwtl
mov
inc
subl
xchg
mov
mov
mov
rcl
test
sahf
addr16
mov
inc
dec
and
sbb
jo
push
dec
in
aad
in
push
jle
cmp
sub
adc
add
sbb
mov
jne
push
and
cmc
mov
mov
or
sub
xchg
add
repz
adc
fwait
jns
mov
icebp
xchg
jle
mov
inc
das
int
aad
sub
mov
pop
dec
push
add
cmp
jb
pushf
ds
mov
inc
jb
dec
xchg
jne
enter
xchg
or
add
stc
movaps
or
or
mov
jno
pop
and
pop
lods
or
cmp
cs
cmp
pop
in
aas
mov
xchg
mov
aad
cwtl
dec
fdivl
mov
subl
lea
xchg
sbb
test
aaa
push
push
std
push
lahf
paddusb
dec
xor
bound
out
jbe
shl
xchg
addr16
mov
or
push
ljmp
jno
cs
loopne
inc
shl
jae
push
sbb
into
fbstp
jmp
lcall
and
popf
pushf
adc
addr16
shrl
ret
xor
xor
sbb
mov
in
lcall
push
fiadds
and
or
inc
shll
repz
loope
lods
shll
and
lret
push
outsb
clc
test
movsl
cmpsl
enter
data16
xor
mov
loop
and
sbb
push
jl
test
xor
and
test
or
jl
xchg
out
je
test
out
cmp
xchg
gs
jbe
inc
in
mov
cli
jno
imul
int
sarb
jmp
pop
ret
dec
sbb
cltd
xor
push
mov
mov
ss
xlat
and
xchg
mov
or
std
sahf
mov
inc
cmpsb
push
out
shr
jl
inc
pop
jne
or
xor
scas
mov
repz
push
cmp
jne
sub
rcrb
jle
xchg
pop
dec
imul
arpl
add
in
pushf
or
xchg
adcl
call
mov
bound
ljmp
mov
push
loope
pop
mov
lds
aas
push
sbbb
aaa
shrl
mov
fsub
mov
xchg
and
push
idivb
sub
pop
sti
rcr
xacquire
pop
push
ret
mov
je
stc
or
xchg
xchg
sub
fiadds
in
dec
adc
out
lcall
mov
push
push
rcrb
xchg
inc
mov
cmp
sub
rcrl
scas
or
add
sahf
pop
cmp
xchg
adc
test
testb
lcall
push
call
jo
in
fwait
jo
push
jmp
sbb
repz
insb
push
call
xchg
push
sahf
lea
mov
lahf
in
daa
popa
out
lret
enter
imul
pop
popf
sbb
int3
dec
fs
orb
cli
mov
xor
icebp
rolb
stc
nop
mov
pop
test
jp
adc
scas
bound
bnd
adc
fisttpll
mov
sbbb
pop
push
mov
push
lods
push
out
sbb
xchg
jg
shrb
push
stos
dec
pop
imul
js
stc
and
fs
fs
pop
in
mov
addb
add
jge
mov
or
mov
push
jmp
movsl
push
jmp
adc
jo
es
jp
mov
in
fnsave
adc
cmp
outsl
mov
fcmovne
lret
cmp
sbbb
lcall
and
lea
cld
jg
sub
stos
xor
je
leave
xchg
and
vcmpsd
xor
shlb
xor
or
pop
xchg
add
xchg
sub
jae
pop
inc
jnp
test
adc
daa
mov
cmp
pop
jge
shl
adc
sbb
cmp
push
adc
mov
push
loop
adc
push
loope
sub
xor
jmp
iret
popl
lret
in
pusha
shll
push
aad
outsl
mov
jno
sbb
push
pop
or
push
ss
or
je
inc
inc
lcall
inc
lods
or
adc
push
jl
in
jg
xchg
es
dec
dec
add
arpl
in
aas
adc
stos
es
ror
or
icebp
daa
or
or
jle
push
hlt
sbb
fidivl
in
pop
pusha
mov
data16
xor
out
call
inc
popa
dec
mov
or
sbb
ret
push
fnclex
jno
push
sbb
xchg
dec
imul
outsl
sbb
mov
mov
sbb
test
test
pop
adc
push
sbb
int3
xchg
and
sub
stos
lock
nop
mov
cmp
inc
xchg
lcall
mov
jns
sub
inc
cmp
cmp
leave
dec
int3
cmp
or
and
pushf
lea
xchg
cmp
daa
bound
cli
mov
adc
cmp
inc
mov
and
es
mov
mov
jecxz
sbb
adc
push
xor
mov
xor
insl
and
cli
sti
inc
out
test
add
push
mov
adc
cmp
inc
and
cltd
xor
pop
jb
push
mov
stos
repnz
lahf
sub
sbb
decl
fdivl
jno
mov
clc
jne
mov
push
andl
shll
pop
jnp
nop
imul
movlps
sbb
nop
sub
push
cmp
pusha
stc
aam
sub
mov
cmp
sub
mov
fstpt
push
inc
call
cmp
data16
mov
arpl
ret
mov
out
pop
and
mov
loope
in
or
sub
mov
mov
ss
add
aaa
jge
or
adc
mov
push
mov
adcl
movl
xchg
enter
jno
jno
iret
pop
sbb
iret
mov
out
jl
adc
daa
mov
cmp
inc
or
pop
popa
dec
add
adcl
or
mov
clc
push
sub
push
push
cmpb
dec
pop
popa
jmp
pop
subl
sub
cltd
mov
mov
dec
jo
out
in
daa
loope
mov
and
push
mov
std
pop
cli
add
push
decb
sub
nop
sarl
scas
push
lcall
mov
sub
cmp
sub
fnsave
cmp
jge
pop
scas
faddl
test
ljmp
sub
call
mov
lcall
cmpsb
jne
fadd
loop
xor
das
jbe
push
ret
mov
or
mov
lret
jae
call
fucomi
mov
pop
inc
pop
mov
nop
outsl
push
andl
aaa
pop
movsb
sti
inc
cltd
and
ret
cmpsb
xchg
push
test
mov
ror
addr16
cmp
addl
ret
inc
int
popa
xchg
scas
push
shl
test
push
sbb
nop
mov
call
aam
out
test
sbb
int3
pop
popa
push
sarl
adc
jge
in
scas
jb
imul
shrb
mov
jbe
cmpsl
ds
xchg
xor
stos
cmp
jg,pn
fnstenv
loope
xor
orl
imul
lds
jg
imul
pop
pop
popa
adc
cmc
inc
mov
leave
int
jmp
mull
push
inc
int3
inc
ret
pop
cli
push
inc
dec
mov
outsb
mov
nop
sbb
aad
and
mov
adc
push
in
stos
fidivs
test
jmp
or
sti
push
popa
scas
cmc
or
mov
outsl
add
insb
movntq
outsb
mov
jbe
cmp
das
in
es
fdivp
cmp
jle
call
or
sub
cmpb
stc
and
jo
cmp
std
js
cs
cmp
movsl
int3
jmp
mov
mov
pop
call
mov
cmp
addb
mov
mov
sbb
xchg
arpl
cltd
fwait
jae
icebp
fisubrs
and
lret
fists
mov
into
or
sahf
testb
xchg
nop
out
jbe
roll
pshufw
shrb
scas
sbb
sbb
jne
and
inc
faddp
mov
push
sti
jnp
daa
test
jns
out
pop
cmc
int3
rolb
push
repz
add
push
sub
movsb
mov
insb
fbld
aad
pop
pop
fcmovb
gs
lods
xor
mov
gs
xchg
xchg
mov
repnz
mov
gs
cli
xchg
mov
stos
sub
cs
dec
movsl
dec
push
hlt
adc
sarb
pop
inc
or
or
stc
sahf
into
shlb
xor
xchg
repnz
aas
lea
je
addr16
jmp
cmp
pop
mov
rorb
sbb
das
dec
test
inc
orl
sarl
call
nop
scas
adc
insl
cwtl
add
sub
or
js
clc
imul
dec
lods
stc
mov
in
nop
daa
xor
imul
cmp
shrb
xor
lds
mov
test
pop
dec
fistpl
pop
idivb
cmpb
in
movhps
push
sahf
mov
hlt
push
cmpsb
and
dec
dec
addr16
call
xchg
loop
insl
and
popf
xchg
adc
imul
inc
push
adc
scas
push
mov
test
inc
push
push
mov
mov
sbb
scas
inc
adc
mov
sbb
pop
out
test
sub
fnsave
mov
je
mov
pop
jmp
gs
inc
or
and
fcompl
xorl
push
mulb
cmp
pop
add
loop
out
pop
inc
pushf
mov
cs
or
fldenv
inc
adc
aas
sbb
iret
pop
cmp
and
cs
ss
pop
repz
scas
ljmp
or
int3
pop
test
fstpl
jg
aaa
jno
je
dec
adc
xorl
mov
add
cmp
adc
jns
lea
or
push
sub
or
test
nop
inc
out
call
add
ljmp
shrl
jae
ljmp
ds
stos
sub
orb
or
pop
push
or
fdivr
dec
pop
xor
jb
add
xor
or
add
mov
loopne
push
inc
and
movsl
hlt
daa
mov
cltd
mov
addr16
and
icebp
sbb
repz
cmp
add
testb
dec
scas
cmpsl
aam
in
imul
lds
repnz
arpl
adc
js
sbbb
cs
loopne
mov
repnz
lret
inc
pop
icebp
cmp
xor
stos
push
jmp
jo
or
cmp
loop
hlt
lea
mov
sub
cmp
das
js
fstps
pusha
adc
push
ljmp
push
inc
lods
add
mov
and
cmp
int3
cli
push
decb
pop
repz
xor
push
mov
lahf
imull
lret
imul
mov
rcll
sub
lock
cmpsl
adc
shrl
sahf
xchg
pop
test
movsl
ss
cmp
mov
pop
fsts
or
mov
jge
je
repz
add
mov
jns
dec
mov
int
std
aaa
stos
jp
push
jmp
xchg
add
sub
stc
in
out
shrb
jne
scas
sbb
sti
and
inc
push
in
ja
fstl
mov
mov
or
minps
roll
loopne
push
enter
rclb
shlb
inc
pop
fwait
dec
xchg
ds
mov
inc
sbb
stos
and
das
inc
lahf
ss
scas
jmp
nop
or
stos
cmp
daa
xchg
or
mov
jae
mov
push
popa
dec
shl
dec
sbbb
adcl
pop
repz
jp
decl
mov
cld
das
mov
out
inc
jno
pop
fbld
push
mov
xchg
movsl
cmc
pop
cmp
sahf
mov
sub
mov
xchg
add
out
shr
in
mov
adc
repz
loope
aas
gs
adc
dec
and
push
aam
fst
out
sub
cmp
jbe
gs
fldl
cmpb
xchg
fidivrs
and
push
push
adc
outsl
stos
mov
jmp
xor
and
xchg
mov
sub
push
inc
push
lock
lds
mov
out
xchg
test
jns
xlat
xor
or
mov
mov
lret
fnsave
pop
fsubp
je
iret
or
scas
jg
or
ret
ret
jecxz
sub
hlt
inc
arpl
cmpsl
stos
jge
jmp
enter
sub
add
mov
std
iret
xchg
fs
fmuls
xchg
dec
insl
pop
mov
incl
aam
movsl
mov
hlt
mov
cltd
stos
arpl
andb
insl
mov
nop
dec
rcl
loop
adc
and
movsb
xor
out
iret
mov
push
aad
and
adc
js
gs
adc
sbb
bound
add
movups
test
loope
cmp
mov
mov
sbb
aam
sub
pop
dec
and
push
cmpsb
out
sub
call
std
and
iret
test
push
stos
mov
mov
cmpsl
mov
fcomip
cmc
cmpsl
in
adc
push
adc
cld
cwtl
xor
mov
int3
fwait
dec
cmp
in
in
sbbl
test
aas
movsl
icebp
mov
icebp
sbb
dec
mov
imul
push
sbb
sbb
pop
cmp
dec
shl
int
mov
mov
jbe
lods
stc
data16
push
rolb
mov
scas
subb
mov
es
loope
fsubr
xchg
mov
jg
pop
sbb
mov
sbb
pop
out
cmp
inc
pop
in
xchg
lcall
inc
test
adc
test
push
enter
outsb
pop
lret
jb
cmc
push
pop
cmc
testl
data16
inc
sahf
mov
test
lds
jmp
icebp
sbb
push
pop
mov
insl
mov
jle
sbb
xor
cli
cmp
mov
mov
fsubrs
and
shrb
stos
pop
cmp
lods
add
pop
data16
sbb
or
imul
sub
xor
xchg
cltd
cmpsl
enter
jle
imul
xchg
mov
shlb
cs
fcomp
xor
or
je
int
push
or
xlat
adcl
loop
xchg
jmp
xchg
cmpsl
dec
arpl
rorb
stc
cmpsb
adc
and
xor
cwtl
fdivp
hlt
outsl
icebp
nop
mov
mov
push
sub
sbb
ja
dec
outsb
mov
ljmp
mov
cmp
dec
mov
in
je
add
repz
in
lock
scas
cmp
xchg
fwait
pop
inc
insb
mov
sbb
movsb
push
xchg
dec
loope
push
repnz
jbe
and
pop
mov
cmpsb
mov
cwtl
mov
sub
add
xor
inc
loopne
xor
andl
nop
sbb
jno
flds
movsl
ret
clc
adc
dec
mov
fld
icebp
xor
dec
add
lret
sbb
push
mov
repz
sbb
push
sbb
mov
sub
jo
std
in
sub
sarb
cs
mov
je
jb
cmp
or
data16
mov
out
push
movsl
loop
jg
xor
mov
scas
push
lret
loope
lods
sub
xchg
shrl
jne
jbe
push
insb
int3
xor
notl
dec
or
lcall
loope
cmp
mov
pushl
sbb
int
insb
sub
push
push
in
dec
aam
insl
pop
ret
pop
mov
sub
sub
sub
pop
xor
int3
std
hlt
mov
jbe
loope,pt
adc
xchg
sti
out
rcl
and
test
mov
int3
sub
or
bound
pushf
rclb
sub
cs
test
cld
je
enter
mov
xor
fisubl
out
mov
shll
test
xor
pop
andb
or
clc
insl
pop
rcr
fld
sub
push
cltd
cmpsl
dec
inc
cli
inc
dec
push
or
aaa
xchg
mov
pop
mov
mov
clc
call
inc
negl
data16
aam
jae
cmc
push
lods
arpl
jno
sbb
jbe
hlt
in
ss
push
call
fcomps
jg
push
pop
outsl
adc
fwait
jns
shr
push
dec
and
xor
jo
pop
cmpsl
or
jecxz
inc
lret
push
int
gs
out
mov
and
cmpsl
cli
sbb
jge
out
scas
inc
sahf
daa
xor
jno
int3
pop
dec
xchg
dec
mov
scas
adc
rcl
mov
cltd
aas
jae
mov
mov
dec
jle
inc
mov
movsb
or
push
es
stos
inc
ret
and
pop
clc
dec
add
inc
sarl
adc
pop
ja
jl
fbld
sbb
notl
xlat
sub
bound
pushf
xchg
add
dec
shll
cmp
push
add
rdpmc
fldpi
xchg
addb
pusha
or
sub
je
and
fadds
dec
push
ret
clc
mov
outsl
daa
test
xor
lods
or
int3
mov
mov
mov
imul
cmp
movsb
gs
aaa
jg
movsb
sub
inc
adc
cmpsb
mov
lahf
in
add
negb
jne
sbb
dec
jg
into
mov
imul
sbb
xchg
fistpl
ret
push
push
out
xchg
pop
or
fnstenv
outsb
add
inc
mov
mov
cwtl
or
jle
hlt
cmp
scas
rolb
fldenv
mov
push
xor
jns
test
mov
mov
rcl
xor
jmp
add
arpl
jecxz
or
pushw
repnz
mov
add
aam
mov
jge
add
adc
loope
test
push
popf
imul
xchg
push
test
cmp
lds
push
fmull
outsb
lods
push
test
mov
popf
xor
jl
jne
inc
jmp
negl
lea
sbb
mov
xor
inc
push
lds
and
add
sub
xor
adc
mov
idivl
movsl
loopne
pop
movsb
shlb
mov
mov
xchg
pop
xchg
or
jmp
scas
mov
fstps
mov
mov
jecxz
insl
inc
adc
in
jnp
jmp
decb
push
imulb
out
pop
das
adc
sbb
cmpsb
dec
imul
mov
or
or
ret
mov
lds
imul
test
or
push
mov
mov
bound
mov
mov
loopne
dec
fcmovb
jmp
test
jl
cmpsb
cmp
test
or
mov
jb
mov
push
fldl
push
jae
push
mov
stos
or
sti
cmp
pop
inc
stos
xor
outsb
and
push
add
gs
dec
cmpsl
or
add
js
out
pop
lock
pop
stc
mov
cmp
dec
mov
push
cmp
pop
xchg
dec
mov
movsb
repz
stc
jae
sub
popa
xor
cmc
mov
mov
test
cltd
cli
or
rclb
shll
push
push
inc
dec
pop
test
pop
leave
fstps
outsb
pop
lcall
mov
push
jne
cmp
lds
shll
dec
repz
lret
into
int
xor
ja
lcall
daa
adc
jb
lret
push
in
loopne
adc
add
push
cwtl
jle
movb
je
out
cmc
ficomps
adc
mov
cli
xor
sub
lock
pop
and
or
outsb
sarb
faddl
jns
mov
daa
push
rolb
popa
dec
add
cmp
outsb
sub
jo
dec
jmp
jbe,pt
xchg
cmpsl
cmp
fstps
cmpsb
shl
jne
mov
fcoml
pop
push
aas
ja
sub
mov
mov
mull
lret
out
mov
inc
jle
je
sub
insl
fwait
sbb
mov
xor
mov
rclb
pop
xchg
add
fwait
sbb
mov
sbb
xor
jmp
test
scas
mov
adc
loopne
push
les
mov
and
xchg
loop
clc
lock
fsubrl
es
dec
jnp
mov
fisubrs
rclb
mov
dec
push
xchg
sub
cs
ss
jne
incl
out
inc
jo
xlat
jl
in
mov
mov
mov
inc
sbb
xchg
call
adc
xor
sub
adc
mov
xchg
lahf
ss
arpl
mov
inc
fnstenv
jno
in
sbb
idiv
adc
mov
sbb
jg
data16
mov
popa
jecxz
sbb
xchg
cs
fcmovnb
and
rolb
xchg
clc
scas
xlat
repz
icebp
xchg
push
push
mov
inc
lret
pop
scas
fs
jno
xchg
adc
adc
mov
leave
pusha
mov
imul
inc
dec
lods
mov
pushf
jns
mov
sbb
repnz
popa
and
mov
jae
mov
je
call
sub
pop
sbb
cmpl
movsl
add
shl
inc
pop
popf
stc
ljmp
loop
shrl
add
imul
mov
ja
inc
bound
jle
mov
pushf
in
ljmp
daa
fs
mov
sub
dec
clc
mov
jle
xchg
xchg
repnz
mov
mov
dec
int
cld
xchg
sub
sti
jecxz
add
or
cmp
add
xchg
mov
aam
jae
fstps
mov
mov
clc
add
xor
fldenv
arpl
mov
es
xor
add
jnp
lods
mov
xor
loope
std
adc
xor
scas
and
in
ret
out
push
aam
repnz
loope
adc
addb
push
test
sbb
mov
sbb
fadds
and
nop
push
dec
loopne
jns
cmpl
lds
fcoms
mov
pop
mov
ljmp
cmc
adc
mov
or
pop
aaa
into
aas
xlat
outsl
insb
dec
lahf
adc
sbb
stos
jp
fwait
imul
idivb
or
xchg
std
test
stos
repnz
sbb
mov
mov
clc
fbstp
dec
adc
xchg
xor
js
movsl
sub
sub
stos
pop
data16
xor
int
mov
or
in
and
lock
mov
out
pop
in
out
js
loopne
sbbb
jge
rclb
adc
mov
jno
and
mov
das
dec
in
ljmp
xchg
popf
jne
or
xor
daa
jg
pop
and
shrl
lret
cmp
in
pop
sub
repnz
shrb
pop
lret
dec
or
xor
jo
adc
clc
mov
scas
jg
and
cli
sbb
push
loopne
jnp
cwtl
loope
jne
les
dec
in
fwait
cmp
jecxz
sub
stc
enter
shll
out
fs
lret
mov
lods
shrb
pop
xlat
and
push
lods
pop
mov
hlt
addr16
push
mov
or
sub
lahf
sub
dec
or
sahf
lods
int
loopne
mov
ret
jae
test
into
sar
cli
fildl
inc
cld
pop
mov
fsubl
sti
dec
jge
and
jp
jp
xor
lods
or
push
lret
dec
std
lods
mov
mov
shrb
push
or
loope
js
fcom
push
mov
sub
sub
ds
repz
mov
xor
fistpl
clc
je
mov
test
sub
cli
inc
mov
ret
adc
ss
push
inc
subb
popf
stc
lret
and
sbb
or
out
add
push
imul
je
int
cmp
pop
adc
loope
js
or
pop
test
adc
pop
xchg
sti
sub
add
inc
push
loop
pop
fdivs
andb
cmp
inc
push
mov
and
or
sub
jnp
popf
mov
sub
xor
jmp
xchg
fimuls
fwait
jbe
adc
int
mov
js
fdivr
cmp
stc
push
popa
lods
psubsw
xor
add
pop
cmpsb
sub
rcl
inc
mov
ret
jb
roll
sbb
movsb
push
sbb
into
in
jge
arpl
add
sub
jmp
mov
loope
or
in
stos
jae
mov
sahf
mov
push
push
loope
ja
ficompl
adc
mov
sbb
fdivl
inc
mov
mov
pop
cmpsl
pop
sbb
iret
clc
mov
ja
fisubrs
adc
stc
xorl
pop
jg
inc
jae
and
rorb
xor
push
inc
fistl
xchg
adc
outsl
shll
ret
mov
subb
push
xor
ja
mov
xor
into
lcall
push
clc
iret
icebp
xor
jl
pop
mov
adc
pop
push
sub
xor
jl
in
dec
scas
mov
dec
pop
out
lcall
xchg
ret
clc
or
cmp
jbe
mov
shlb
xchg
iret
xor
pop
jns
add
inc
fwait
or
mov
jge
cmp
aaa
int3
xor
outsl
push
cmp
fcoml
mov
inc
negl
adc
fiaddl
jecxz
leave
mov
mov
cltd
cmc
cmp
pop
scas
out
sti
sub
pusha
arpl
push
rcll
jne
cmpsl
out
sbb
stc
pop
pop
push
loopne
repz
mov
jmp
lahf
lock
or
push
sbb
dec
adc
ljmp
mov
cmpsl
add
and
add
sub
scas
imul
aam
push
lock
adc
or
popa
fadd
movsl
push
fimull
rorb
add
mul
nop
rolb
gs
jle
xor
jmp
cld
sbbb
cmp
lods
fs
aaa
mov
mov
pop
xchg
mov
dec
sbb
nop
ret
rorb
pop
inc
bnd
lahf
mov
pop
outsb
inc
adc
mov
je
dec
jmp
fimull
insb
fsubs
xchg
mov
jo
imul
test
std
adc
adc
and
cs
mov
es
test
repnz
fistl
cmp
iret
pop
adc
mov
scas
bound
subl
cmp
je
jle
pushf
test
sbb
enter
xchg
loope
mov
or
adc
add
lret
sub
fdivl
movl
sub
inc
dec
pusha
pop
mov
sbb
xchg
fucom
hlt
sub
mov
and
lret
loop
cmp
test
pop
pop
lock
lcall
insb
movsl
je
mov
pop
dec
pop
jle
jnp
xlat
jnp
jg
clc
cltd
or
fwait
mov
lret
pop
cmpsl
rcrl
push
jmp
or
shll
mov
jbe
dec
add
and
scas
adc
lret
push
mov
mov
mov
xchg
pop
jae
mov
xchg
sub
push
int3
aas
lock
cs
push
adc
xlat
fidivrs
xor
sbb
out
push
cs
test
fdiv
aad
mov
mov
or
sarb
ret
and
stos
xor
or
mov
std
cltd
cltd
jl
mov
int
lret
cmpsb
sbb
push
in
or
stos
xchg
push
icebp
bound
hlt
mov
mov
je
pop
mov
jmp
push
sub
cmc
shll
outsl
jns
xchg
mov
and
xchg
lods
add
sahf
inc
scas
inc
lahf
daa
jecxz
shrb
jne
sbb
insl
jecxz
test
add
mov
test
inc
fmul
ret
mov
andl
mov
jo
scas
jg
cmp
cmp
xor
lock
and
loop
xchg
in
rcrb
cltd
imul
out
movsl
loop
and
and
leave
push
addr16
inc
inc
das
pusha
jecxz
outsl
adc
aad
mov
mov
xchg
mov
xchg
in
ret
jle
dec
in
pop
loope
add
push
jp
mov
jae
inc
sti
fdivrl
cmp
std
push
lods
inc
dec
pop
add
sahf
push
dec
lcall
inc
out
bound
adc
int
fmull
mov
jg
scas
pushf
cmpsl
inc
fcoms
shll
mov
and
outsb
push
pop
lds
sbb
adc
fs
dec
lcall
sub
xchg
mov
mov
shll
xchg
cmp
test
or
outsl
inc
in
aas
rcrb
andb
outsb
loopne
ss
mov
sbb
cmp
cs
mov
js
pop
popf
push
xor
mov
or
out
jmp
movsl
lea
ds
jnp
mov
push
fucomip
aaa
loopne
rcrb
add
out
xor
dec
mov
push
lods
mov
mov
movsl
into
and
jle
mov
mov
enter
jge
outsb
mov
lds
call
lods
sbb
fucomp
outsb
scas
xchg
es
mov
stos
aaa
mov
aaa
mov
lock
enter
xchg
nop
aad
pushf
cli
cmp
in
xor
xor
cmp
arpl
add
mov
ds
pop
fs
pop
xor
shr
mov
mov
leave
loop
jp
jns
mov
dec
xchg
pop
in
adc
xchg
gs
pushf
testl
jl
xchg
subb
cmp
mov
test
dec
inc
ljmp
xor
gs
rcrb
stos
mov
xchg
mov
fwait
push
call
enter
and
stos
mov
loope
enter
mov
mov
test
cld
xchg
out
mov
xchg
sub
jg
or
cs
sahf
add
xchg
mov
push
leave
test
sbb
lret
pop
sub
lahf
jbe
adc
sbb
sbb
into
mov
push
jb
xchg
xlat
jae
ds
jge
mov
lret
mov
rclb
mov
cltd
sub
rcl
in
call
cmp
mov
mov
mov
add
mov
sar
pop
shr
push
sbb
xorl
xchg
jns
dec
sub
imul
imul
pop
mov
out
into
leave
fwait
adc
mov
jge
push
scas
xchg
fisttps
std
jns
cmpsl
imul
popf
in
push
xchg
pop
outsb
adc
mov
fldenv
fiadds
negl
push
repnz
in
jecxz
stc
test
out
xchg
mov
bound
or
jp
dec
test
mov
adc
sub
cmp
popa
jbe
vphsubbw
dec
arpl
push
out
inc
fstp
sub
jo
test
out
lock
mov
xchg
mov
fnop
jle
mov
loopne
enter
sbb
inc
fcmovbe
sbb
test
hlt
lea
push
xchg
scas
cmp
sub
lcall
imul
insb
out
push
cmpsl
sub
movsb
out
cmp
icebp
fwait
add
js
xor
push
lahf
jbe
mov
incb
jp
std
cmp
push
cmpsb
mov
or
pusha
xchg
mov
out
jecxz
dec
xchg
movsl
xchg
aam
cmp
and
nop
xchg
in
or
sbb
lahf
push
inc
or
fdiv
xchg
aad
mov
pop
jge
rorb
fadds
sbb
loopne
adc
mov
sbb
mov
push
insl
leave
mov
jne
sahf
stos
hlt
ret
mov
sbb
inc
popa
fdivrl
or
add
and
movsl
sbb
subb
les
cltd
cwtl
mov
xchg
mov
dec
popf
sub
lods
stc
fldl
adc
clc
or
sbb
xor
xor
shl
push
mov
cltd
je
bound
mov
cmp
adc
pusha
pxor
jno
dec
aaa
adc
cwtl
or
scas
mov
push
gs
in
mov
mov
fiadds
movsb
sub
cmp
xor
jbe
mov
mov
fcomps
push
hlt
clc
cli
pop
das
and
add
cli
pop
lock
pushf
sbb
vmread
pop
scas
push
inc
frstor
dec
and
dec
push
pop
xor
push
push
dec
mov
mov
push
enter
cmc
or
fs
call
xlat
mov
cmc
dec
sub
pop
outsl
std
jo
mov
into
scas
sub
scas
dec
lods
jo
dec
fbstp
leave
stos
cli
pop
sub
dec
push
dec
sbb
test
bound
jb
addr16
sub
jge
nop
sub
fmulp
mov
jge
sbb
mov
sub
adc
icebp
adc
inc
lea
mov
mov
ja
sbb
mov
adc
push
xlat
addl
cmp
pop
push
mov
nop
and
pop
setbe
insl
aam
imul
js
lahf
lods
add
jo
mov
jp
in
sub
lock
lock
ss
push
xor
pmaddwd
jp
or
stos
mov
or
das
scas
out
lcall
and
add
push
xchg
lea
cmp
push
rcll
push
push
in
out
cmp
pop
jne
rolb
lds
pop
gs
push
dec
dec
push
lods
add
pop
sahf
sub
lods
shll
and
outsl
add
repz
fs
aam
das
mov
mov
mov
leave
xor
jmp
sub
inc
fistpl
jns
insb
mov
xor
xor
bound
dec
jl
pushf
arpl
das
nop
je
mov
pcmpgtd
adcb
cltd
jo
mov
xchg
mov
dec
adc
inc
dec
xchg
test
arpl
jg
out
pop
or
rorb
test
in
call
or
xchg
sub
cltd
outsl
imul
in
lods
mov
jae
mov
sbb
in
test
inc
or
test
ds
sbb
dec
jle
call
fisubs
sub
ss
adc
xchg
jno
ds
iret
lods
inc
add
inc
sbb
mov
popf
outsl
inc
pop
adc
test
daa
cmp
imul
fs
ss
pusha
insb
sub
pop
fsubrs
cli
loop
out
adc
inc
pop
jge
jmp
mov
movsl
pop
mov
pop
mov
jnp
out
add
ret
adc
jno
negl
fs
xor
inc
jo
aam
and
mov
pop
push
and
out
xor
push
jns
decl
xor
in
push
mov
je
sbb
mov
push
adc
mov
loope
mov
push
pop
mov
popl
rol
and
pop
mov
mov
data16
xlat
pop
jae
sub
adc
inc
cmc
arpl
fwait
xchg
push
adc
hlt
fwait
jne
aas
nop
fildll
xor
outsl
ljmp
cwtl
sub
push
xchg
cs
mov
movsb
mov
insb
adc
add
sbb
lds
jns
pop
in
sub
jbe
jns
pop
stos
and
inc
pop
pop
pop
push
jmp
sbb
popl
add
stc
lea
xchg
mov
aam
jg
ss
mov
pop
popf
jo
push
sbb
jb
ds
arpl
pop
mov
mov
cs
sbbb
adc
mov
das
inc
mov
mov
pop
lods
in
pop
adc
movsl
sbb
jge
ljmp
es
clc
mov
das
mov
in
dec
push
jl
jmp
mov
dec
push
clc
or
enter
mov
sbbl
pop
out
cmp
sbb
push
stos
mov
aam
mov
addr16
push
les
pop
push
xchg
pop
in
mov
movsb
inc
testl
sbb
rcll
mov
xchg
stc
sbb
cmp
xor
pop
int3
fisttps
stos
dec
idivb
in
push
popf
jnp
and
add
and
test
lcall
lea
outsb
fwait
xor
fistpll
adc
ja
icebp
sbb
and
inc
in
adc
mov
mov
in
inc
sub
cltd
cwtl
out
add
xchg
adc
rol
cltd
in
cmp
lods
movsl
stos
jbe
jns
ja
xchg
icebp
cmp
jmp
lock
push
xchg
jecxz
sbb
rcrb
mov
test
inc
cmpsb
mov
and
popa
decb
mov
aaa
mov
xor
jno
dec
bound
sbb
out
inc
jecxz
add
sub
xorl
or
testb
int
bound
and
lock
je
addl
push
imul
scas
mov
inc
fistl
xor
xlat
insl
lcall
mov
adc
sub
ficoms
adc
pop
cld
cmpsb
mov
pop
push
sarb
xor
cmpsb
movsl
ret
xlat
mov
jae
add
imul
insl
ljmp
adc
jnp
rolb
les
inc
push
mov
lret
mov
mov
cltd
add
into
in
adcb
push
xchg
push
push
push
ljmp
ljmp
xlat
das
fidivrs
fldenv
bound
xor
call
push
pop
cmc
jmp
ficompl
in
jnp
jge
add
xchg
pop
divb
mov
arpl
mov
push
mov
mov
test
xchg
rep
dec
loop
adc
cs
mov
xchg
sub
aas
test
in
leave
pop
iret
out
xor
sahf
add
shrb
inc
and
data16
sub
jnp
xor
ret
js
cmc
jg
outsl
sahf
mov
jb
rcrl
mov
cli
cmp
sbb
xchg
out
xchg
or
fiadds
out
cmc
fistpl
lock
pop
cmp
jo
jmp
xchg
movsl
or
lock
push
cmc
mov
xchg
movsl
jo
inc
ljmp
pop
mov
stos
shll
mov
and
cmp
mov
in
dec
pop
test
test
in
lods
sub
lcall
bound
fdivp
testb
add
xchg
ficompl
and
lahf
jg
test
adc
int3
xor
sub
test
aas
data16
fldl
inc
call
or
rolb
dec
and
fldcw
mov
fildl
push
scas
push
dec
sub
lahf
shrl
dec
dec
inc
mov
rol
int
or
cmp
push
mov
sbbb
cmp
shll
lock
cmp
dec
ret
jp
mov
scas
cwtl
shr
mov
bound
stos
adc
cmpsb
xor
stos
jge
ljmp
sbb
pop
ss
aas
mov
out
fs
aas
out
std
xchg
xor
xor
shlb
push
pop
mov
sub
mov
mov
pop
pop
xor
lea
out
mov
rolb
sarb
jnp
pop
cmpsb
lock
fsubrl
jl
add
mov
pop
jno
in
dec
imul
dec
mov
cli
xor
fnsave
mov
mov
in
sarb
sbb
or
xchg
or
in
push
jbe
daa
mov
jo
xchg
jnp
das
push
lods
push
arpl
mov
xchg
lea
jge
sbb
xchg
or
xor
push
sbb
mov
test
pop
adc
ss
lock
inc
js
ss
push
pop
rcl
pop
loop
movsb
mov
push
popf
popa
repz
dec
dec
xor
cmp
movsl
push
fwait
mov
dec
popf
ljmp
mov
in
mov
xchg
pushf
stos
sarl
pop
pop
dec
cwtl
xlat
repz
jecxz
aas
dec
and
adc
adc
mov
test
loopne
int
ja
inc
xlat
jp
fistpll
jne
jle
int3
loope
pop
push
fwait
xor
jle
popa
push
push
loop
xchg
and
sbb
fsts
jns
out
sbb
pop
pop
insb
push
mov
xchg
jns
adc
dec
dec
in
push
ljmp
inc
call
int
dec
adcb
pop
int
fwait
sbb
sahf
ror
mov
jle
mov
jl
scas
push
mov
push
jge
je
dec
mov
mov
stos
mov
jmp
add
outsb
lock
lea
inc
fnstsw
pop
xor
jae
or
dec
cmc
sub
cmp
dec
popa
adc
adc
addl
cmp
rol
insl
xor
jb
push
testb
and
cli
push
icebp
pop
imul
sub
inc
fnstcw
cmpl
inc
popf
push
sbb
jae
adc
cwtl
and
jo
test
dec
and
mov
cmpsb
cmp
bound
shr
shlb
movsl
push
nopl
sub
jno
inc
xchg
sahf
into
in
neg
mov
in
cmp
jecxz
mov
inc
lret
aad
mov
add
cmpsl
leave
leave
loopne
jp
fcom
jmp
and
cmpsl
out
lock
dec
push
scas
nop
rclb
adcb
and
and
rcrl
xchg
pop
pop
clc
mov
cmp
push
inc
out
int3
and
pop
loope
push
fwait
sbb
cmc
movsl
dec
push
dec
es
rcrl
stos
add
out
push
adcb
mov
sbb
dec
mov
fwait
cmpsl
hlt
ret
sarb
outsb
xchg
add
pop
pop
add
pop
mov
nop
sub
xor
push
cmpsl
push
nop
ret
daa
adc
int3
outsl
sbb
mov
test
addr16
or
ljmp
iret
sti
xchg
je
push
inc
aaa
dec
test
fsubrs
sub
call
aam
fidivl
pop
adc
jne
xorl
xchg
dec
sub
cmp
in
andb
mov
outsl
adc
aam
in
fneni(8087
lahf
addr16
mov
jle
mov
cmpsb
cmp
lods
nop
ret
add
outsl
ret
mov
and
scas
fnstcw
test
push
inc
movsl
icebp
popa
cmc
xor
push
push
mov
cmc
push
mov
pop
lods
fdiv
jle
fistps
out
xor
cwtl
xorb
and
mov
mov
and
push
sahf
add
jnp
push
pushf
jae
jl
pop
mov
loope
ret
adc
fwait
movl
mov
mov
and
cs
jo
loope
test
shll
loop
test
movsl
pop
mov
cmpsl
xor
sbb
lcall
sbb
insl
cltd
addr16
adc
imul
inc
test
test
sbbb
mov
int3
out
andb
mov
dec
mov
cwtl
shl
into
fisubrl
xor
dec
fs
sti
repz
pushw
data16
pop
lods
lcall
popf
add
jae
sahf
or
xchg
loop
pop
add
xchg
cmc
pop
stc
out
xchg
adc
out
lahf
cs
ja
sbb
loope
aas
das
xor
insb
add
xchg
lock
sub
cmpsl
scas
cmp
ss
or
test
mov
cmc
lds
stos
mov
shrb
or
cmc
push
mov
popf
pop
jne
inc
xor
pop
jnp
mov
mov
cmp
cmp
lea
pop
add
pop
ja
bound
mov
in
inc
cmp
arpl
arpl
xchg
or
sti
cld
sub
adc
int3
xchg
pushf
and
rorl
jl
cld
ja
stos
inc
fmuls
cmp
xor
je
adc
adc
mov
stc
shll
sub
jecxz
cmp
jo
adc
pop
adc
aad
and
inc
push
xor
out
sti
ret
xchg
outsb
pop
aaa
push
inc
cmp
mov
lods
ret
hlt
add
pop
mov
mov
pop
lret
divl
mov
ret
nop
in
outsb
test
cmp
popl
loop
movsb
and
loope
dec
add
dec
sbb
std
mov
push
insl
jnp
sbb
sbb
pusha
je
outsb
inc
pop
inc
out
xchg
mov
insb
ss
xchg
les
into
gs
das
nop
leave
mov
jge
cmc
test
andb
test
mov
ljmp
es
aas
ficoms
jns,pt
shlb
rcr
inc
mov
xchg
rolb
popa
push
popa
dec
loope
xchg
adc
xchg
ds
xor
dec
sub
in
testb
dec
xchg
call
cmp
and
das
mov
imul
movsb
arpl
pusha
inc
or
xor
jnp
sbb
add
into
mov
push
ror
cs
imul
push
ljmp
jb
sbb
xchg
push
das
sbb
xchg
dec
jp
xchg
dec
scas
adc
xchg
mov
jbe
jecxz
inc
push
test
pop
enter
mov
jmp
push
mov
dec
test
icebp
into
fwait
xor
mov
xor
mov
or
cmp
mov
in
jno
xor
sti
add
int
lahf
and
add
pop
enter
add
notl
xchg
mov
arpl
fwait
iret
sahf
outsl
cld
shll
pop
shrl
inc
out
cli
test
test
inc
pop
sbb
xlat
ja
dec
adc
cli
out
xor
outsb
ljmp
adcl
popl
dec
imul
sbb
jecxz
cs
call
in
pusha
pop
cmp
test
mov
adc
inc
aad
mov
out
aas
sahf
insl
in
ret
or
test
mov
sub
int
test
mov
out
cli
xor
movsb
out
and
pop
flds
mov
daa
lahf
ss
sbb
xlat
inc
lods
dec
loope
jecxz
jg
or
arpl
mov
jno
roll
shl
in
fs
dec
mov
testl
xchg
fs
in
add
inc
aas
frstor
es
cmp
mov
push
or
lds
mov
aas
pop
mov
cli
imul
repnz
data16
leave
cltd
subb
sub
push
fcoms
js
or
mull
mov
test
movsl
dec
fs
mov
mov
dec
xor
fisttps
adc
mov
call
jne
push
cmp
jnp
das
push
add
xchg
ja
or
js
dec
sub
scas
in
push
rorl
mov
push
sbb
jae
cmp
aas
js
in
sub
rcrl
les
and
xor
cmpsl
nop
fistpll
shlb
jns
aam
jno
add
je
sub
or
mov
movsl
lods
das
je
psubsb
xor
mov
lods
pop
jle
mov
mov
test
dec
loope
or
mov
jecxz
inc
das
movb
jecxz
add
and
popa
jns
inc
pop
loope
cmp
lahf
insl
mov
es
fistl
or
cmp
outsb
jno
pop
repnz
jbe
in
lahf
xchg
imul
repnz
jae
fs
jb
cltd
xor
jns
push
das
cwtl
sub
inc
outsb
add
jb
or
mov
icebp
dec
xlat
inc
fsubr
xor
push
out
dec
pop
add
sub
or
push
mov
mov
xchg
fnstenv
push
es
cld
and
add
mov
rcrb
ret
jnp
mov
xchg
stos
xchg
jb
cmpsl
cmp
pusha
pop
out
pop
pop
jae
mov
adc
add
shrl
pop
pop
ja
and
cmc
leave
mov
dec
rorl
movsl
ret
add
mov
and
in
push
lea
and
scas
test
js
jle
and
or
push
clc
adc
cwtl
bound
cmp
lahf
sbb
aad
jmp
outsb
loope
add
cmp
and
mov
cmp
int3
jg
roll
mov
dec
repnz
popf
outsb
adc
mov
inc
adc
xchg
xchg
mov
ljmp
push
imul
cmp
sub
pop
lock
xchg
dec
stos
stc
jae
sbb
ret
jge
sbb
sbb
int
fidivrl
imul
or
adc
pop
outsl
push
dec
fs
mov
mov
enter
int
xchg
ljmp
aaa
push
iret
mov
dec
idivl
mov
inc
mov
repnz
push
cmpsb
rcll
addb
ljmp
leave
xchg
add
pop
jo
mov
mov
data16
imul
shrl
shr
xor
inc
mov
sub
mov
or
dec
cmp
sub
ret
add
lea
adc
movsl
lds
jnp
adc
and
shrb
adc
lods
nop
pop
cwtl
test
clc
dec
xor
pop
scas
out
ljmp
insl
inc
xlat
incl
cmpsl
fwait
or
sahf
scas
xor
ret
imul
mov
ret
popf
xor
cmc
cltd
test
in
mov
mov
dec
fcomp
xchg
fsubp
orb
int
sti
iret
ss
sti
mov
mov
jle
les
lock
mov
push
ret
inc
loope
leave
jns
push
inc
icebp
mov
jae
pushf
push
add
in
and
push
aad
repz
jg
mov
push
lods
inc
jo
pusha
xlat
add
dec
and
std
inc
das
push
lcall
das
in
xchg
xchg
pop
jmp
pop
stc
sbb
lahf
and
mov
inc
ja
call
out
xchg
repz
adc
jl
ss
xchg
xchg
std
aam
mov
adc
jl
in
dec
or
daa
pop
xchg
sub
stc
add
adc
mov
xchg
xor
or
scas
xchg
test
xlat
xchg
push
imul
xchg
add
push
aas
movsl
sbb
data16
adc
ljmp
jbe
lret
xchg
adc
rcr
pushf
mov
push
sub
in
inc
xchg
cltd
mov
sbb
dec
sub
in
outsl
andl
mov
mov
mov
fcomps
or
adc
mov
mov
fcmovu
outsl
or
mov
pop
pop
mov
dec
lods
fld1
fstpt
lahf
and
mov
jbe
je
cmp
jp
fidivrl
ljmp
cmpsl
es
stos
adc
out
push
in
aaa
push
add
test
rcrl
xchg
jo
or
and
hlt
jge
sub
test
stos
jl
mov
out
cmp
sbb
add
inc
call
sub
pop
divl
cmp
and
sbb
sub
lea
adc
push
insb
ljmp
mov
lahf
sbb
or
outsb
mov
sbb
jo
mov
jne,pt
sbb
mov
xor
cmp
fsubrl
pushf
into
inc
fxtract
fbstp
fidivl
cltd
and
cmp
push
loope
sbb
xor
stc
cmpsl
jnp
loopne
scas
cmpsb
movsb
ja
scas
arpl
sub
lods
pusha
mov
add
ficoml
cmp
or
push
jo
sub
cmp
mov
mov
and
movsb
xor
shlb
dec
rorl
inc
pop
inc
sbb
sbbl
cmp
std
push
push
rcrl
fdivs
mov
cmp
jno
push
push
pusha
sahf
mov
mov
dec
dec
mov
mov
add
sbb
push
xlat
push
inc
in
sub
cli
and
and
pop
push
into
jb
xchg
stc
pop
in
sarl
pop
and
mov
test
xor
and
mov
pop
push
jo
stc
dec
adc
insl
mov
xchg
jle
scas
mov
pop
push
jg
les
popf
fs
int
pop
ds
dec
cli
movswl
inc
mov
push
mov
or
cmp
inc
ret
ja
mov
shlb
sahf
push
adc
cmc
xor
xor
and
testl
mov
xlat
ficoml
and
push
mov
leave
inc
adc
mov
add
clc
pop
imul
push
rcrb
popf
cmp
jge
stos
mov
stos
mov
daa
in
subb
push
add
or
push
sub
mov
pop
lods
pop
insb
dec
enter
lds
or
adc
in
adc
xor
pop
cld
std
dec
fisubrs
lret
mov
stc
sub
imul
decl
inc
xor
js
cmpsb
jno
and
fisttps
dec
jbe
cmpsb
ret
xor
sub
hlt
lahf
ljmp
scas
xchg
lahf
orl
insb
arpl
dec
or
lods
daa
jg
js
jno
nop
inc
push
es
pop
inc
daa
mov
dec
inc
pop
jb
pop
ret
cmpsl
cmp
mov
pmulhw
push
xchg
inc
dec
rorl
icebp
inc
lcall
and
sbb
cmp
add
cs
shrl
pusha
jg
imul
mov
adc
mov
push
les
mov
push
xchg
bound
push
push
add
fsubrp
movsl
mov
jl
repz
mov
cmp
push
mov
or
test
lret
aas
sub
rclb
loope
jbe,pt
shrb
xchg
mov
cmp
jmp
jl
aad
mov
pushf
je
and
mov
cmp
xchg
jne
push
in
sub
mov
lods
jge
inc
sarb
xchg
xor
sbb
inc
cld
aaa
ljmp
push
aam
push
mov
cld
inc
mov
pushf
aam
xor
adc
sub
lret
mov
cmc
mov
mov
adc
jmp
aaa
fistl
push
push
fbstp
outsl
add
mov
cmpb
mov
in
cwtl
xor
mov
jne
shll
pop
mov
jno
clc
mov
ret
andb
adc
push
cmpsb
rcrl
inc
lcall
out
add
lret
mov
jmp
cmpsl
hlt
inc
xlat
in
dec
or
jo
sub
inc
shlb
out
mov
lahf
mov
cld
ljmp
mov
in
xchg
dec
mov
push
stc
nop
xchg
lcall
aam
call
xchg
arpl
sbb
xchg
mov
or
pop
jno
inc
je
into
sbb
push
cmp
sbb
inc
adc
int3
int3
sbb
loop
pop
sbb
xchg
sub
clc
sub
adcb
stos
or
jl
test
xchg
sti
inc
sbb
mov
jle
int
inc
sbb
sub
rorb
push
push
lds
divl
inc
std
push
sub
pop
xor
inc
jmp
adc
push
xor
cs
adc
add
clc
cs
xlat
sbbb
or
mov
adc
xchg
sbb
lods
shrl
aam
daa
inc
call
stos
add
add
stc
and
decb
mov
xchg
dec
jbe
iret
ret
mov
popa
xor
rcr
mov
out
xor
push
test
lcall
and
fmull
sbb
add
mov
push
loop
repnz
mov
add
jae
test
mov
jns
cmc
push
insb
cmc
mov
lret
and
call
sub
xchg
repnz
scas
or
mov
push
cli
inc
sbb
pop
ficomps
xchg
repz
out
mov
jno
adc
movsb
sub
push
test
adc
mov
adc
cli
and
lahf
sbb
cs
push
clc
xor
in
bound
jo
sbb
mov
into
out
cmpsb
lock
push
add
xor
pop
push
mov
daa
out
daa
mov
push
mov
lods
jl
ja
stos
popf
jo
or
xorb
mov
pop
xchg
push
xchg
stos
sarb
mov
cmp
insb
out
sbbl
jecxz
mov
imul
sarb
push
les
mov
ficoms
pop
out
mov
popf
mov
sbb
mov
clc
jp
inc
test
sbb
adc
mov
call
in
negb
ss
gs
in
jle
sub
adc
jg
and
ficoms
in
inc
mov
inc
jno
lret
sbb
cmp
dec
jne
movsb
lret
sub
std
add
mov
pusha
fisubs
push
sbb
lock
ljmp
and
daa
sub
fdivrs
cmp
push
jle
in
sbb
aas
pop
push
iret
dec
shrl
pop
add
int
mov
sbb
jbe
jg
jo
mov
push
pop
and
dec
jp
mov
jns
into
addps
cmp
mov
mov
lret
mov
adc
enter
test
mov
mov
xor
xchg
cmp
inc
adc
fwait
mov
fsubl
jo
andb
mov
loopne
cwtl
mov
mov
pop
out
andl
faddp
mov
mov
sbb
scas
inc
hlt
and
addb
test
repnz
adc
pop
pop
or
pop
dec
nop
in
inc
push
dec
loope
cld
or
mov
stc
pop
int
sub
cwtl
pop
lods
add
xor
mov
negl
jmp
push
push
rcll
jne
cmp
dec
jmp
or
insl
lret
push
push
mov
repz
movq
notb
cmpsl
nop
sub
xchg
hlt
out
pop
sbb
push
stos
xchg
sub
je
inc
pushf
inc
adc
push
mov
movsl
adc
push
dec
lock
addl
shl
sbb
xorl
fwait
sbb
roll
add
jne
xchg
jl
dec
pushf
stc
push
fisubs
push
cld
jecxz
dec
and
dec
dec
mov
mov
pop
adc
das
lcall
dec
in
lock
fistl
scas
inc
dec
sbbb
push
and
je
xlat
insl
push
mov
hlt
mov
mov
pop
rolb
ret
in
sub
mov
loopne
pop
frstor
or
mov
cmp
repnz
stos
es
mov
int3
rclb
mov
test
pop
inc
sbb
jp
std
lret
push
inc
scas
push
stos
and
mov
lds
pop
dec
loopne
dec
jecxz
stc
mov
ja
out
stc
or
stc
adc
daa
or
pop
inc
xor
sub
stos
add
sub
mov
and
add
inc
xchg
bound
cmpsb
and
mov
shrb
les
xchg
push
test
or
out
sti
mov
in
sarl
inc
movsl
js
add
and
pmulhuw
mov
mov
or
mov
and
call
xor
push
les
mov
out
and
cmp
sbb
sbb
mov
xchg
jecxz
es
mov
sub
add
sub
inc
popa
imul
je
mov
mov
ja
pushf
iret
pop
push
pop
dec
mov
pop
out
or
fnsave
arpl
pop
hlt
fwait
mov
mov
int
push
cmp
in
xchg
mov
imul
pusha
clc
lods
xor
lret
push
inc
jb
xchg
ret
fisttps
sub
and
cmp
ja
pop
dec
mov
popf
push
std
cmp
sub
xchg
and
and
add
adc
mov
xor
inc
fs
insb
call
je
dec
out
xchg
jnp
push
dec
in
das
mov
das
or
xchg
jmp
cmpsb
push
jge
iret
pop
and
lret
vphaddwd
xchg
out
out
popa
add
ror
clc
dec
js
jo
pop
jns
test
jmp
mov
ss
popa
mov
lret
xchg
xor
dec
out
xor
xlat
mov
mov
push
test
lret
pop
inc
add
dec
mov
push
lret
push
hlt
mov
ret
pop
sub
mov
jb
jne
std
outsb
repnz
cmp
clc
mov
sbb
popf
pop
hlt
into
sub
push
lcall
jnp
scas
sub
sub
xor
call
mov
pop
jge
scas
leave
jle
push
sbb
cs
repz
mov
arpl
movups
xabort
pushf
arpl
push
adc
jnp
std
jo
adc
int3
mov
sub
push
loopne
dec
movsb
sti
stos
repnz
push
dec
loope
mov
push
push
or
mov
test
inc
shlb
cmp
push
and
cmpsb
mov
jns
jecxz
sub
mov
stos
in
ja
ss
aaa
mov
bound
imul
not
rclb
fwait
cmp
dec
xor
xchg
dec
sub
and
loop
das
int
movsl
pushf
mov
adc
out
lahf
mov
jbe
out
ja
int
dec
cmp
fstpt
sbb
sub
fisubs
shll
jo
xor
sub
xlat
cwtl
jae
inc
or
rcr
jne
pop
nop
dec
push
lods
cld
outsl
sbb
out
lock
cld
lcall
push
test
jae
mov
outsb
ss
inc
movsb
and
mov
pop
fsubr
dec
xlat
hlt
push
jno
sub
int3
scas
adc
fiaddl
mov
xor
out
dec
and
cwtl
jae
call
ficoms
fwait
mov
notl
xor
rorb
pop
sub
repnz
xchg
scas
sub
mov
cwtl
dec
xchg
les
sbb
pushf
in
test
or
push
sbb
mov
push
push
mov
mov
xchg
xchg
jmp
jb
aad
mov
jb
in
stos
and
test
adc
cwtl
xchg
xchg
data16
shr
push
sbb
adc
into
and
push
js
jo
cmpb
outsb
sub
lds
imull
adc
mov
ret
std
push
or
adc
push
in
test
jne
loopne
adc
fs
pop
mov
push
jl
or
mov
mov
pop
jo
iret
sbb
sub
dec
testb
sbb
aaa
push
test
addr16
lods
push
aas
test
imul
popa
mov
fcompl
mov
dec
cltd
mov
pop
pop
ljmp
ss
jb
in
xchg
ja
and
aaa
mov
mov
jg
push
es
lock
pop
cli
push
mov
push
notl
inc
aam
imul
out
mov
or
push
push
cmp
add
out
adc
dec
lods
add
push
jnp
mov
push
out
call
push
or
cmpsb
jns
add
enter
inc
lret
outsb
rcrl
cli
repnz
in
add
outsb
vpandn
xchg
loopne
push
push
addl
fstpl
aas
inc
es
and
jo
dec
adc
push
jmp
prefetch
es
cmpsl
mov
mov
sarb
ret
ficompl
fadd
or
add
data16
adc
mov
test
in
cmc
xor
jo
bound
mov
mov
sub
arpl
jbe
dec
add
xchg
dec
xor
sub
fldenv
out
add
cmp
sbb
cmp
in
imul
enter
push
mov
and
jecxz
xor
xchg
addr16
inc
sub
xchg
adc
push
popf
cmpsl
sub
divb
push
inc
pop
hlt
sub
fidivl
adcb
mov
clc
mov
mov
pop
adc
mov
dec
and
jne
fcoms
cmc
pushf
mov
aas
scas
add
push
xor
and
out
std
call
and
mov
add
stos
xchg
adc
stos
cld
outsb
rclb
add
daa
cs
hlt
cmp
sub
jecxz
aaa
xlat
or
dec
mov
mov
jle
xlat
ljmp
jb
sti
inc
pop
icebp
jae
addr16
btc
es
xchg
lahf
imul
mov
in
shlb
daa
ja
mov
ficoms
or
out
xchg
xor
push
nop
sub
gs
inc
gs
xor
arpl
test
mov
les
push
rorb
ljmp
jo
es
fsubs
dec
push
bound
leave
in
das
jb
in
jbe
addr16
fisubrl
sbb
xchg
loop
inc
stc
int3
push
mov
dec
push
sahf
fsubrs
in
jl
icebp
mov
pop
scas
js
and
iret
xchg
xor
in
push
jno
add
pop
add
xchg
in
std
mov
mov
aam
imul
cmpsb
ret
mov
lods
add
out
mov
inc
lods
pop
jno
sub
imulb
out
mov
sbb
mov
fcoml
sahf
push
xchg
mov
add
sub
repz
jle
cmp
jle
insb
pop
call
gs
inc
fisubrs
jno
cmpl
xchg
xchg
jae
jno
mov
ss
mov
xor
cld
lcall
jne
out
add
fidivrl
dec
in
fadds
imul
or
icebp
in
clc
repz
mov
ficomps
cmp
pop
jg
sub
es
testb
outsl
lea
push
mov
ret
ds
mov
icebp
iret
inc
test
and
inc
cmp
aad
add
loope
pop
add
pop
xchg
mov
mov
push
xor
addl
xchg
mov
add
xor
rorb
sti
xor
mov
pop
xor
in
in
push
outsb
xchg
jb
cmc
add
push
xor
fucomip
lahf
aas
mov
mov
xchg
cmp
adc
cs
scas
mov
dec
in
in
gs
xor
push
add
cmp
in
dec
or
xor
cmpsb
ja
mov
pop
inc
adc
jnp
cmp
mov
ret
ss
pop
dec
stos
add
in
pop
lock
jmp
inc
xor
scas
or
shrb
jge
and
addr16
sub
inc
pop
hlt
pop
loop
in
add
xor
fistl
xchg
inc
fs
faddl
fstl
andl
ss
lods
movsb
sbb
jmp
test
lods
loope
into
shlb
loopne
cmp
mov
mov
adc
in
mov
add
mov
mov
cmpsb
xchg
mov
fistps
push
push
pushf
subl
inc
sub
icebp
lock
out
pop
lret
ficoml
cs
stos
xchg
and
lahf
scas
dec
hlt
in
shlb
mov
adc
aas
enter
jmp
out
icebp
aas
fwait
add
mov
fimuls
ss
ds
popa
jo
inc
faddl
mov
or
jp
lret
lods
arpl
sbb
sbb
outsl
jbe
frstor
shlb
or
and
xchg
mov
dec
loop
or
out
paddb
mov
iret
xor
dec
pusha
out
sahf
mov
cmp
ss
xchg
mov
pop
dec
jle
dec
jle
into
cmpsl
and
mov
fistpl
das
stc
test
rorb
mov
jmp
push
cwtl
pop
cmpsl
fwait
add
and
gs
push
adc
push
popf
dec
add
int3
loop
push
sub
push
xor
scas
popa
aad
mov
lahf
jl
adc
push
push
lds
adc
and
decb
jmp
adc
or
push
pushf
aaa
int
sub
push
repz
add
adc
in
mov
pop
aad
aas
pop
cmp
out
imul
orb
xlat
shlb
cmpb
rclb
scas
or
outsb
or
in
or
fstpl
test
test
xchg
add
pop
dec
adc
push
popf
out
xor
xchg
add
add
lret
outsl
push
shll
cmc
stos
adc
jne
orl
adc
jecxz
into
enter
ss
sti
dec
mov
cmp
lcall
int3
pop
cltd
jbe
jp
mov
pop
lock
adc
fildll
jae
stos
movsb
dec
jle
repz
jbe
push
lcall
sbb
and
repnz
push
mov
cmp
test
iret
or
outsb
in
movhps
out
cli
test
fs
mov
mov
pop
movsl
inc
pop
int3
or
sub
mov
rolb
adc
jg
gs
lcall
and
sahf
cmc
add
fidivrl
lods
mov
add
xor
pusha
testl
cs
sub
push
xchg
add
push
adc
add
decb
scas
xor
xchg
jmp
pop
test
adc
pop
lcall
imul
xor
push
montmul
cmpsb
inc
xor
xor
movsb
push
fmull
cmpsb
insl
push
scas
xchg
mov
mov
lret
ret
ret
in
push
xor
fsubrl
leave
sbb
cli
mov
sar
in
sbb
inc
xor
js
jge
cmp
jg
push
dec
sbb
subl
mov
fidivl
adc
mov
js
in
fs
loope
push
icebp
lods
fwait
adc
jbe
mov
mov
mov
xchg
cmp
xchg
ror
sbb
mov
dec
push
sbb
lret
xchg
cmp
hlt
jp
ret
lods
clc
filds
pop
fwait
add
shlb
ror
and
xor
xchg
sti
movsl
icebp
mov
out
cmp
hlt
shrb
mov
rep
jb
xchg
mov
out
or
or
repnz
pop
jmp
add
mov
sub
mov
idivb
scas
and
mov
sub
sub
fwait
aam
xchg
sub
or
jg
inc
jecxz
xchg
sub
lahf
xor
pop
stc
push
jge
std
lods
movsb
out
xlat
pop
mov
int
inc
xor
mov
mov
aad
fidivrl
and
fisubrl
mov
pop
pop
addr16
pop
call
adc
add
in
arpl
sbb
xchg
adc
jbe
sub
arpl
xchg
cs
ret
mov
inc
mul
sahf
std
mov
lcall
pop
rcr
push
out
inc
fstp
hlt
dec
mov
dec
stos
les
imul
outsb
cmp
pusha
or
int
or
dec
mov
test
push
aam
mov
pop
imul
add
in
aas
in
pop
sbb
rcr
jmp
ret
pop
cmpsb
stc
hlt
push
insb
push
jp
push
subb
mov
mov
pop
mov
push
xchg
sub
pop
scas
in
adc
cli
movsb
push
dec
imul
mov
push
fnstcw
lret
imul
cmp
aad
cltd
lods
loope
ja
orl
clc
cmc
xchg
xchg
xlat
lretw
in
lahf
and
add
jl
dec
call
mov
out
lahf
ljmp
cmp
jae
mov
inc
add
ds
push
loope
xchg
test
cwtl
repnz
mov
fld
jl
xlat
pop
or
and
out
adc
push
scas
adc
xchg
fisttpll
cmp
push
cltd
pop
cmp
xchg
jno
push
mov
in
jg
mov
pushf
push
es
mov
in
popf
adc
out
shrb
nop
inc
sub
std
aad
sub
xchg
pusha
orl
leave
adc
lcall
xchg
in
test
cmpsl
mov
xchg
mov
or
sub
nop
sbb
push
jbe
imul
mov
lahf
xor
insl
es
mov
fstpt
mov
cld
sbb
aas
js
cmp
cmc
mov
movl
or
and
aaa
cmp
imulb
test
inc
xchg
out
jnp
mov
or
sub
insl
mov
mov
sahf
enter
xchg
mov
xchg
lret
mov
ja
adc
mov
scas
xor
mov
out
push
pop
leave
fadd
std
ljmp
mov
mov
sub
enter
pop
jg
dec
mov
fildll
lea
scas
cmp
add
or
cli
push
sbb
lods
ja
adc
mov
stos
or
jmp
sub
sahf
int3
pop
ljmp
push
in
cld
mov
mov
pop
iret
mov
dec
cmp
out
fildl
and
pop
mov
imul
stos
bound
mov
mov
mov
jbe
jno
push
and
dec
nop
inc
lret
fidivs
adc
arpl
pop
insb
ficoml
sub
jb
stos
xchg
clc
fucomp
sub
testb
dec
adc
call
push
inc
mov
lret
mov
push
fisubrl
jmp
loop
lds
mov
lcall
cld
dec
call
dec
mov
popa
sub
pop
sahf
cmp
imul
mov
push
aad
mov
pop
push
push
fnstenv
clc
adc
testl
pushf
pop
mov
mov
lds
les
jg
test
push
stc
cltd
mov
int3
mov
scas
out
push
xchg
aad
jb
icebp
mov
test
xchg
mov
pop
repnz
jg
jo
pop
push
xchg
inc
inc
mov
adcl
scas
loope
and
inc
lea
dec
lods
nop
pop
cmp
popf
je
sahf
xor
cmpsl
and
jge
pop
hlt
xor
sub
ret
sti
mov
or
xor
sahf
mov
cmp
mov
rcrl
mov
lret
push
jns
jge
repz
pop
lret
les
adc
mov
gs
mov
inc
xchg
lcall
stos
and
call
ret
jmp
jb
pop
sub
cmpsl
mov
call
int
push
or
test
push
xlat
sub
int
movsl
data16
out
push
jmp
and
jo
push
push
ret
rcrb
imull
imul
aaa
cs
and
jle
lods
mov
cmpsb
lret
roll
sub
push
mov
and
add
jb
pop
lock
hlt
xchg
sbb
lock
out
ret
aad
arpl
in
cmp
int3
sub
cmp
cmpsb
mov
loopne
add
jg
out
xchg
xchg
mov
push
dec
dec
push
xchg
subl
xchg
enter
mov
xlat
clc
mov
decl
test
xor
fwait
call
in
xchg
cmp
inc
incb
add
bound
mov
imul
cltd
sub
mov
rcll
js
adc
pop
cli
dec
mov
aad
sub
adc
lods
shlb
daa
xchg
std
and
jb
fcmovb
xchg
pop
hlt
rcr
outsl
push
sub
mov
add
push
and
cmp
push
rcrb
xchg
cmc
mov
arpl
pop
cltd
jnp
lods
mov
roll
out
cld
pop
add
fcoms
test
pop
ret
and
test
mov
mov
daa
aas
dec
fcmove
jl
scas
inc
xchg
in
pusha
repnz
dec
jb,pt
call
outsb
jbe
pop
call
sub
jbe
aaa
stos
aas
sbb
loope
nop
or
in
add
push
dec
sbb
gs
xchg
js
mov
cmp
sub
push
ljmp
mov
mov
pop
jp
push
mov
mov
ljmp
mov
icebp
enter
cmpsl
out
iret
adc
loope
pop
xchg
clc
loopne
out
mov
jns
pop
xlat
or
mov
lahf
inc
aas
mov
inc
subb
fwait
mov
rol
insb
call
aaa
add
ret
popf
ja
xchg
in
sbb
push
cmpsb
push
cmp
lock
cmc
mov
mov
stos
mov
dec
xor
jnp
lahf
and
sbbb
cs
sti
fcmovnbe
xchg
sub
std
incb
xlat
sub
and
imul
das
shlb
xchg
or
xor
push
xor
int
scas
xchg
sub
lods
addr16
ficompl
pop
mov
pop
mov
pop
push
lock
ret
scas
imul
int3
or
enter
shl
data16
out
dec
mov
cs
js
pop
jmp
mov
addb
push
test
add
sub
rclb
aas
ja
nop
sbb
fbld
dec
addr16
mov
cmpsl
push
push
mov
xor
shll
loope
fnstcw
cmp
aad
stc
pushf
mov
shrl
pop
mov
scas
ret
hlt
adc
cmp
fidivs
sub
fdivrl
cmp
mov
cmp
push
xchg
dec
adc
ficomps
loope
out
test
xor
lods
jne
flds
addb
jns
mov
jecxz
mov
sub
cld
adc
jb,pn
sbb
push
mov
dec
out
imul
insl
xchg
ficompl
loopne
aas
xchg
daa
xor
sbb
lret
lret
mov
sbb
pushl
inc
pop
dec
jne
out
scas
dec
inc
in
mov
xchg
mov
out
xor
cmp
pop
dec
dec
fisubl
mov
fldenv
xchg
cld
addr16
insl
jo
push
jecxz
andb
push
test
or
fabs
mov
push
jne
pusha
adc
adc
jns
icebp
adc
mov
in
pop
inc
dec
jno
add
cmpsb
cltd
xor
mov
ljmp
lret
mov
dec
es
inc
lods
push
negb
ficomps
enter
les
daa
fbstp
add
dec
cmp
jg
movsl
mov
in
jno
outsb
in
push
push
add
mov
repz
imul
pop
jbe
sub
and
cmpsb
adc
push
orb
mov
sbb
orl
call
test
xchg
pushf
fs
cli
cltd
flds
sbb
addr16
dec
in
add
out
nop
push
mov
mov
icebp
mov
pop
repz
out
mov
xchg
sti
lods
test
or
xchg
popa
sub
and
xchg
xchg
xchg
ljmp
push
nop
scas
xchg
xor
lods
adc
dec
mov
ret
mov
jecxz
addr16
push
xchg
sub
adcl
mov
sbb
js
cld
mov
shll
jns
and
test
sub
call
dec
inc
or
je
out
dec
mov
pop
or
adc
das
pushf
xor
pushf
pop
dec
mov
jns
adc
nop
jno
addb
inc
mov
sub
out
xchg
sbb
push
rol
sbb
ds
mov
jge
aam
stos
icebp
mov
xchg
cs
stc
sbb
cld
jo
mov
out
jbe
sub
push
in
xchg
dec
lods
dec
jg
jae
mov
adc
mov
mov
jo
shrl
mull
leave
cmp
lea
cmp
lahf
mov
push
xor
cwtl
pop
outsb
cltd
xor
out
push
push
aam
dec
or
popf
cmp
shll
push
and
cltd
icebp
sbb
pushl
pusha
scas
int
xchg
add
sar
and
pop
cmp
rcr
in
add
pop
push
xor
into
adc
cltd
pop
xchg
lcall
into
mov
inc
push
cmp
inc
dec
mov
in
fnstcw
fcoms
dec
fucomi
lcall
push
ds
xor
xor
cmc
mov
daa
je
stos
lret
imul
adc
mov
and
cmp
loope
sub
test
fmul
xchg
mov
iret
mov
xlat
xor
push
mov
cmpsb
lock
cmp
loope
mov
dec
inc
test
xlat
sub
mov
stos
dec
pop
cs
and
movb
imul
sahf
das
lods
xor
test
and
insb
add
ljmp
mov
out
incb
mov
push
in
mov
lret
and
and
pop
bound
sub
enter
add
pop
mov
test
add
subl
dec
lods
in
rcll
mov
push
sbb
mov
inc
jmp
and
push
fildl
imull
pop
js
mov
jne
loopne
loope
and
mov
inc
pushf
in
dec
xor
test
clc
mov
out
xchg
adc
outsb
or
sbb
movsl
les
js
push
jge
ljmp
cmpsb
fcomps
sub
sbb
loopne
xor
cmp
or
ss
mov
mov
adc
ret
or
inc
lret
add
rorl
sub
popf
sub
xchg
inc
sbb
es
lcall
sahf
gs
arpl
mov
or
out
push
mov
js
in
jl
xor
xorb
xor
jbe
add
inc
pop
inc
fcoml
jne
inc
es
push
cmp
les
adc
dec
in
xchg
out
mov
and
pushf
lahf
test
mov
lods
cli
adc
flds
xor
add
sub
and
andl
pop
ret
scas
xchg
xorl
imul
xor
pop
leave
xchg
pop
arpl
bound
aam
xchg
nop
sbb
rcll
lahf
lcall
pop
hlt
outsb
push
cwtl
push
leave
js
mov
addr16
mov
adc
jle
jbe
cmp
mov
push
sbb
sub
gs
add
adc
movd
mov
jecxz
lds
jl
jg
hlt
dec
pop
popa
mov
lcall
and
movsb
sbb
adc
dec
and
pop
mov
fisubrs
into
xorb
addb
lahf
jnp
pop
lock
mov
sbb
dec
jb
pop
icebp
ret
and
in
popf
add
cmp
stos
scas
xchg
sub
lret
cld
incl
rcl
xchg
fisubl
add
scas
add
xchg
cmp
push
adc
pop
addr16
inc
in
stos
adc
lock
rorb
test
xor
xchg
adc
push
or
mov
ficoms
sub
push
lcall
in
lock
stc
nop
js
pop
insl
lds
pop
in
add
push
out
xchg
adc
cs
ss
sbb
jnp
push
xchg
stc
xor
aam
lods
inc
mov
sarb
mov
or
mov
js
das
inc
cmpl
es
aad
sti
dec
fisubrl
repz
in
fsubrs
jp
pop
call
lods
repnz
adc
mov
jb
mov
cli
data16
pop
cwtl
sbb
mov
mov
sbb
push
or
mov
inc
fisttpll
xchg
dec
pop
iret
ljmp
and
es
push
cmp
out
lds
fsubrs
or
stos
mov
es
lret
cmp
sbb
jb
lahf
xchg
jecxz
jb
decb
dec
cmc
xchg
dec
mov
pop
stos
push
pop
cmc
xchg
scas
xchg
jbe
lds
pushf
dec
xchg
sbb
repnz
in
in
pop
lock
mov
orl
fucomi
loope
test
and
rolb
mov
push
stc
jmp
inc
pop
pop
mov
xchg
sbb
jl
xor
inc
jge
add
sti
dec
push
test
lret
sbb
sub
outsl
cmp
jae
xor
add
mov
sahf
loop
cmp
movsb
mov
in
mov
inc
js
jnp
leave
fnstcw
jno
dec
mov
mov
mov
enter
mov
out
mov
daa
mov
lea
outsl
mov
lcall
sub
jge
shll
adc
mov
xor
psrlw
mov
popa
clc
js
add
dec
inc
mov
js
icebp
jg
fstl
shrl
mov
pop
or
sub
insb
sub
dec
sahf
aaa
and
test
in
std
xchg
stc
cmpsl
jecxz
inc
adc
add
popa
mov
lea
mov
add
lds
in
dec
out
or
xchg
repnz
aas
insl
loop
pop
dec
xlat
mov
jmp
push
cmpl
aas
aad
mov
pop
movsl
jecxz
push
addr16
jb
mov
mov
sarl
sbb
push
rcrl
or
mov
push
fstpl
in
movsl
ljmp
inc
pop
aam
clc
xchg
cmp
gs
call
or
adc
adc
pop
mov
mov
push
or
add
cmp
mov
loopne
mov
jns
cmpsb
pop
movsb
cmp
fcmovbe
ljmp
mov
call
jl
push
sbb
test
stos
jg
shrl
sahf
mov
cmp
bts
cmpsl
mov
mov
je
js
mov
push
lea
arpl
fwait
hlt
nop
in
mov
adc
jo
jmp
and
out
int
cwtl
or
sub
jp
pop
jbe
sub
mov
in
pop
xchg
js
cmc
cltd
xor
pop
ficomps
push
aad
pop
push
or
push
pop
leave
rcrl
mov
fdivp
or
iret
jmp
push
dec
mov
rcrb
push
sub
jae
loop
add
popa
xchg
and
mov
rcl
clc
add
lcall
sub
cltd
push
lock
sbb
imul
add
xor
mov
push
es
aaa
xchg
cmp
repz
fidivs
jne
mov
push
and
loop
outsb
sbb
dec
cmpsb
pop
sti
shrl
sbbb
insl
lods
cmp
mov
fisubrl
dec
loope
push
or
in
lret
out
cmp
psubusb
inc
push
pop
cli
fbstp
std
pop
call
std
lock
das
pop
aam
pop
pop
push
fdivrp
and
adc
dec
mov
pusha
sbb
loope
xor
ret
stos
test
sbb
ffreep
sub
or
leave
imul
adc
or
sub
fwait
mov
fcoms
xor
jg
mov
test
pusha
mov
pop
insb
test
scas
scas
mov
test
sub
std
into
cmpsb
or
aaa
cld
dec
ret
pop
repz
sub
and
movsb
add
pop
push
outsl
outsb
mov
push
mov
adc
pusha
mov
xchg
jne
or
clc
xchg
dec
stos
xchg
dec
mov
daa
mov
in
mov
sbb
nop
fs
ret
pop
and
pop
cmp
xor
mov
and
add
cli
sahf
mov
jg
es
and
call
cmp
sbb
add
fld
sbb
sub
or
lods
push
popf
sbb
lock
cs
stos
sarl
lret
test
fwait
sti
push
js
mov
or
jo
xchg
jbe
out
xchg
mov
xchg
mov
pop
fisubrs
dec
sub
into
daa
lcall
lcall
mov
xchg
jmp
popf
scas
cmp
out
cmp
inc
cli
xchg
xor
and
sbb
lcall
stos
insl
cmp
jns
loopne
sub
push
mov
jb
les
fstl
push
test
push
jae
les
adcl
jne
daa
jno
jp
jle
fidivs
jle,pn
test
lea
xchg
sub
sbb
add
sbb
sub
xor
adc
stc
add
push
scas
ret
add
sbb
scas
paddsw
or
add
xor
mov
jge
jle
stos
jmp
mov
out
mov
mov
sarl
xchg
mov
and
mov
test
dec
filds
scas
sbb
xchg
cmp
mov
xchg
adc
push
adc
mov
fadds
sti
pop
in
popf
fdivrl
pushf
jno
sahf
data16
or
sahf
cld
inc
adc
jg
dec
ja
inc
mov
jb
pop
test
lock
cwtl
faddl
add
xor
loope
sti
add
push
in
push
les
or
lods
addr16
mov
mul
icebp
sbb
sub
fnstenv
inc
push
pop
in
add
fnstenv
popf
xlat
adc
popa
pop
cs
jmp
test
or
call
cmp
popa
push
std
pop
in
sbb
int3
popa
push
inc
inc
inc
dec
into
enter
cwtl
popl
cs
sti
sbb
xor
dec
bound
cmp
sti
fs
sub
mov
dec
push
push
pop
push
lds
cmp
sbb
scas
mov
jno
int3
ja
leave
and
mov
push
lds
movsl
jo
sbb
mov
pop
add
add
andb
outsb
mov
dec
xchg
mov
mov
jecxz
lods
clc
in
cmpl
sub
in
stos
mov
out
cld
scas
lcall
add
pop
mov
cmp
cmp
insb
push
sbbb
xchg
push
ds
cmp
daa
ret
out
jno
pop
enter
xchg
adc
fnstsw
pop
sub
dec
mov
stc
scas
aad
loope
add
add
sbb
xchg
ret
or
int3
inc
lods
pop
data16
xchg
sub
mov
sti
shrb
mov
lock
movsl
sbb
pop
or
xchg
sbb
push
sbb
mov
lahf
orb
out
sarb
pop
ss
dec
scas
out
mov
ljmp
cltd
adc
jne
sub
cmpsl
lds
pop
xchg
push
sahf
lds
rcrb
data16
or
pop
aas
mov
sbb
inc
test
jo
sub
in
incb
push
sti
fldpi
xor
xchg
lahf
xor
repz
or
in
mov
loopne
hlt
loope
sarb
lock
inc
xchg
int3
cmp
mov
or
ja
xchg
mov
shll
push
jecxz
and
cltd
filds
mov
push
xchg
jecxz
dec
or
dec
jmp
notb
sub
mov
sub
inc
fldcw
jo
pop
sub
dec
xchg
pop
mov
adc
sarl
jns
jecxz
lods
add
sbb
les
jle
add
push
jne
cmp
sub
nop
inc
stc
cwtl
hlt
int
pop
les
mov
dec
mov
aam
inc
cld
js
jmp
sarb
int3
test
stos
push
lods
mov
fwait
push
cmp
jmp
and
sbb
inc
mov
in
flds
addr16
cmc
xchg
pop
fs
mov
lret
in
jne
sub
idiv
fwait
iret
pop
mov
lcall
sbb
in
ret
add
inc
lret
out
shr
mov
dec
jnp
loopne
dec
orb
and
daa
arpl
push
jmp
dec
adc
inc
sbb
ret
cli
push
pop
xchg
mov
xchg
adc
or
jb
mov
fbstp
push
leave
mov
dec
pop
in
insl
pop
sub
cmc
fsubl
pusha
xchg
rorb
repz
mov
push
push
lahf
inc
mov
int3
faddl
data16
xchg
das
mov
and
push
ret
mov
jmp
sbbl
imul
xlat
xchg
xor
testl
push
jp
loop
jns
mov
jns
jb
mov
negl
loop
aad
jmp
and
lock
adc
jle
jno
shr
add
outsb
cmp
hlt
push
jns
jno
icebp
sbb
pop
les
lcall
data16
bound
jmp
and
ret
xchg
dec
cmpsb
push
ja
shrb
add
push
dec
fidivrl
adc
jno
or
dec
rol
hlt
push
cwtl
xor
gs
dec
adcl
subb
pop
data16
jns
mov
into
sbb
or
in
arpl
notb
add
mov
insb
and
int3
or
sub
mov
xchg
sub
vminsd
or
jo
dec
in
adc
and
or
in
add
mov
or
out
std
outsl
test
xchg
aad
push
or
inc
ficomps
test
inc
pop
int3
mov
das
sub
add
jb
xor
dec
stos
push
aas
or
inc
inc
sub
pop
fs
xchg
cld
pop
and
mov
notb
sti
fucomp
sbb
pusha
in
aad
mov
jns
out
xchg
jbe
fistpll
or
sub
call
push
imul
shlb
xlat
lahf
xor
ss
outsl
dec
cmp
int3
or
hlt
jo
aaa
and
int
inc
cmpsl
in
inc
ret
jns
lods
ljmp
clc
inc
dec
add
jl
jo
loopne
addr16
jp
fisubrs
sarl
mov
jle
jbe
mov
or
pop
rcrl
dec
xchg
insl
lret
leave
push
sbb
cmpsb
push
daa
pusha
sbb
sbb
push
jg
add
daa
icebp
xchg
sbb
mov
lret
fbstp
mov
adc
lcall
data16
fsubl
jg
cld
xchg
shr
pop
iret
lods
pop
je
lret
push
popl
adc
ss
push
add
jno
popf
sbb
out
stos
gs
adc
mov
dec
mov
std
adc
fsubs
and
das
ret
mov
dec
pop
popa
fmull
xchg
test
adc
sbbl
scas
lock
jl
pop
cmp
andb
shlb
xor
jl
mov
lds
arpl
fnsave
rcl
sbb
lea
push
pop
or
movsb
ja
out
sbb
xchg
dec
fimull
rcl
dec
imull
mov
add
lret
push
out
add
stc
and
dec
xchg
inc
int
pop
sbb
push
mov
sub
cmp
cmp
out
es
rcrl
mov
xor
push
insl
inc
pop
pop
ljmp
or
xchg
ds
mov
out
mov
dec
cmp
xor
rcl
pusha
aaa
pop
cld
adc
cmc
decb
addr16
rorb
call
or
shlb
cli
pushf
sbb
in
and
ds
imul
dec
ret
mov
repz
inc
sbb
out
popf
xchg
lods
mov
fistpl
in
push
cmc
mov
lahf
sarl
pop
call
sti
lcall
jns
dec
out
fidivrl
mov
lret
hlt
add
push
adc
jg
imul
push
cld
jmp
aam
out
and
das
sbb
pop
shll
test
lret
sub
or
lock
lods
xor
psubb
mov
or
add
mov
push
jg
std
inc
and
and
sbb
pop
sahf
jo
out
jne
cli
push
sub
mov
arpl
cmp
mov
out
xchg
inc
arpl
ja
into
mov
jne
mov
imul
jno
push
jge
stos
sbb
push
push
sahf
scas
cmp
int3
sub
pop
roll
out
inc
arpl
je
cmp
pop
loopne
xor
outsb
stos
inc
dec
aaa
shll
pop
fnstsw
pop
or
or
mov
or
push
outsb
fwait
push
pop
shrb
mov
or
sub
leave
popa
aad
fwait
cmp
icebp
lds
test
icebp
pop
and
lret
rclb
icebp
insb
xor
adc
xor
cli
js
in
subb
push
movsb
push
pop
divb
flds
test
pop
add
movsb
incb
repz
add
jne
sbb
notl
mov
push
add
jne
xlat
jge
fbstp
data16
mov
insb
adc
sbb
add
dec
ss
roll
pushf
shl
cmp
outsb
fisttpll
sbb
fiadds
mov
mov
lods
dec
lret
cmp
cwtl
xchg
cmp
or
xor
pop
ljmp
xchg
mov
cmc
fcomi
and
insb
adc
popf
mov
jg
subl
sub
repz
jne
jo
testl
movsb
mov
dec
ja
add
sbb
into
sbbl
add
and
loop
xchg
leave
add
dec
push
fdivp
subl
add
negl
pop
cld
or
lcall
xor
add
push
push
mov
popa
sbb
lret
pop
push
or
sub
xchg
push
arpl
or
inc
test
xchg
mov
xchg
jns
push
lock
insl
mov
or
xchg
sub
and
into
icebp
adc
cltd
pop
int3
out
popf
imulb
sub
mov
jns
in
push
hlt
xchg
int3
mov
mov
and
dec
lahf
xor
shlb
shlb
xchg
and
insl
adc
jmp
aad
outsb
add
or
fyl2x
adc
adc
aam
xchg
add
imulb
dec
mov
dec
lret
adc
in
mov
adc
mov
idivb
loope
jmp
or
pop
mov
int3
inc
out
fstl
ds
dec
fsub
dec
sti
mov
loope
rcrl
loopne
mov
lret
les
popf
jg
test
inc
mov
addb
mov
push
and
push
jl
push
inc
inc
mov
stc
dec
lret
mov
mov
dec
inc
ret
mov
rcl
in
mov
xor
xlat
xor
dec
xchg
lods
imul
test
mov
sbb
push
insl
sarb
push
lea
mov
je
adc
pop
imul
fistpll
or
add
call
mov
sbb
inc
ficompl
sub
aad
pop
xchg
ja
shlb
mov
jmp
lods
push
and
xchg
mov
fildl
insb
scas
ss
mov
test
das
inc
cmp
lea
sub
and
jg
inc
mov
negb
push
sbb
pusha
and
dec
or
frstor
addr16
pop
ds
and
test
fsubrl
lods
lret
loope
ja
cmp
lock
mov
insl
and
pop
or
loope
pop
jg
add
push
inc
insl
icebp
bswap
lock
cmpsb
cmp
jmp
in
push
mov
or
push
inc
insb
shll
aas
sbb
rcrl
fiadds
and
icebp
les
xor
testl
mov
push
out
cld
mov
cwtl
ficoml
xlat
test
icebp
and
and
push
and
imul
into
mov
ficomps
push
pop
mov
xchg
and
popa
cmpsb
sub
push
in
pop
jae
lret
call
mov
adc
dec
mov
inc
jl
xor
nop
sub
call
add
inc
push
sahf
shll
repnz
cwtl
and
arpl
fwait
mov
xor
push
push
cli
in
pop
repnz
into
push
pop
ja
add
arpl
adc
outsb
in
outsb
and
arpl
sub
inc
pop
fwait
pop
jo
pusha
add
mov
clc
sahf
push
out
inc
jmp
inc
cwtl
inc
sarl
loopne
adc
in
dec
pop
cwtl
jae
popa
adc
xchg
clc
mov
mov
pushf
nop
push
adc
pusha
xchg
adc
add
out
sub
cld
add
ljmp
addr16
imul
sub
fnstcw
test
cli
fistps
sub
mov
inc
fwait
in
bound
imul
xor
cmp
push
xchg
sub
mov
sti
mov
push
addr16
ret
div
pop
mov
movsl
cmp
mov
testb
sub
jno
es
mov
jecxz
xor
mov
jno
xor
test
loopne
jge
sarl
popf
pusha
stc
cmpsl
inc
push
mov
xor
cli
pop
mov
pop
xor
inc
daa
aaa
push
adc
cli
fdivl
aas
cmpsl
ds
cs
jg
cmp
add
iret
sub
dec
push
insl
xor
enter
movsb
pop
jno
addr16
push
xchg
loop
enter
ds
pusha
test
add
repnz
and
loopne
lcall
sahf
push
lret
addr16
jecxz
out
lret
mov
outsb
cmp
cld
jp
adc
pusha
cmpsb
outsl
daa
test
shrl
push
fnstsw
lock
daa
dec
fistps
xor
movsb
popa
adc
cmp
pop
jo
adc
jg
sub
xlat
stos
cmp
mov
cmp
mov
in
pop
push
pop
adc
jae
mov
mov
pop
cmp
outsl
out
cmpsl
rcll
jb
loopne
call
inc
stc
js
jbe
imul
dec
add
lods
dec
xchg
insb
add
insl
add
add
cmc
cmc
push
loopne
pop
mov
test
jne
cmc
js
stos
pop
jnp
out
sub
imul
jns
leave
int
fbstp
sbb
sbb
sbbb
pop
mov
out
nop
mov
mov
mov
adc
push
aaa
jge
mov
movsb
inc
mov
jne
dec
fwait
mov
xchg
arpl
insl
jne
mov
fiadds
push
popa
push
shl
pop
pop
mov
mov
mov
sbb
jecxz
push
xchg
outsl
aad
jp
dec
jae
cmp
orl
repnz
xchg
xchg
test
add
xor
jno
les
push
pop
cmp
xchg
mov
dec
dec
loopew
lret
dec
ret
sub
jecxz
mul
inc
dec
dec
flds
push
pushf
xor
in
ss
loopne
push
fnstenv
bound
mov
mov
ret
pop
jg
sub
mov
adc
outsl
pusha
dec
fidivs
xorl
xchg
int
fildl
jmp
or
push
js
popa
or
pop
data16
fbstp
sub
andb
outsl
push
sub
data16
jle
push
pop
pusha
sbb
mov
inc
ja
bound
pop
mov
xchg
cmpsb
push
mov
pop
enter
aas
ss
imul
sbb
xchg
pop
cmovs
movsb
cmp
mov
imul
out
xor
aam
popf
and
mov
mov
sbb
lds
pop
imul
mov
int
arpl
icebp
inc
in
sub
test
mov
push
mov
popf
inc
jns
sbb
sahf
or
into
ds
add
sahf
and
scas
jp
mov
jmp
mov
adc
adc
inc
idivb
jb
push
add
mov
or
mov
dec
adc
insb
adc
mov
pop
pushf
gs
or
mov
add
inc
lahf
leave
lret
xor
ret
pop
mov
xchg
fwait
or
popf
jle
dec
add
sahf
or
adc
aaa
push
pushf
call
jp
cmpsl
stos
cmp
into
mov
int3
fcomps
xchg
add
fmull
jns
stc
inc
mov
push
pop
sub
scas
mov
xlat
fwait
pop
test
lret
adc
and
mov
iret
pop
decb
test
dec
sahf
mov
mov
js
cmp
shlb
fidivrs
fsts
sarl
mov
inc
push
dec
lcall
out
push
sahf
mov
ficomps
push
push
xchg
pop
dec
dec
and
push
outsl
mov
mov
push
aas
outsl
cmp
dec
pop
inc
sub
sti
adcb
sti
jl
xchg
sub
fwait
mov
cmpsl
jb
lret
pop
sbb
or
mov
movsl
or
pop
xchg
mov
sbb
adcb
insl
mov
in
test
mov
fwait
and
adc
cmp
in
ret
dec
daa
mov
std
loop
inc
aas
imul
cmc
cmp
mov
cmpb
ficomps
daa
rolb
es
pop
add
je
push
fwait
xchg
dec
pop
fmull
xchg
sbb
nop
daa
cmp
sbb
push
mov
cwtl
add
mov
jae
loop
add
daa
or
mov
ss
iret
mov
hlt
pshufw
dec
and
or
test
or
mov
daa
sbb
inc
mov
mov
xlat
mov
pop
inc
ljmp
imul
sub
inc
rorl
xchg
ja
cmp
cmp
push
test
push
aas
pusha
mov
outsl
les
adc
cs
xor
loopne
cli
inc
fs
or
mov
mov
sbb
cmp
cli
shlb
shll
imul
push
fidivrl
mov
xlat
cmp
fs
jb
je
or
mov
inc
lcall
orb
xor
mov
enter
jle
rorl
ffree
fldcw
stos
jne
mov
mov
jmp
xchg
lret
jae
punpcklwd
dec
sbb
and
sti
cmp
lods
mov
mov
add
movsl
stos
fstl
lods
xchg
mov
mov
adc
cltd
pop
orb
and
fs
bound
jbe
add
int
mov
dec
pop
jge
cmp
or
dec
nop
daa
orl
lock
sbb
aad
decb
sub
std
or
loope
xor
aad
ss
addr16
xor
enter
jmp
or
xchg
mov
scas
push
insl
imul
fildll
outsl
mov
jnp
loop
fdivl
cmp
dec
or
cmp
int3
arpl
mov
les
or
or
cmp
sub
xlat
sbb
jno
xor
lock
mov
pop
enter
inc
iret
aaa
dec
imul
cmp
cmpsb
jb
test
mov
mov
xor
jne
bound
cmp
movsl
dec
sahf
jbe
dec
mov
xor
es
xor
mov
test
sbb
xlat
jmp
pop
jl
test
inc
subl
xchg
icebp
mov
lcall
sti
mov
mov
test
jecxz
stc
inc
cmpsl
mov
lods
or
push
mov
pop
insb
push
stos
and
push
sub
jp
dec
lods
add
repz
stc
adc
mov
push
push
cmp
mov
movsb
sarb
adc
fstpt
push
mov
sub
repz
xor
sub
jle
and
mov
dec
dec
mov
outsb
loope
mov
mov
insl
enter
lea
sahf
add
dec
loop
push
adc
insl
loopne
mov
push
scas
push
and
ljmp
mov
and
aaa
iret
adc
or
xchg
outsl
fsubrp
js
jns
je
and
mov
pop
ficoms
lret
pop
xor
je
xchg
test
in
xor
push
jmp
insb
jnp
sub
ret
add
scas
dec
cmpsl
scas
test
lock
push
or
cmpsb
pop
xchg
pop
mov
rcrl
mov
mov
lret
xorb
movsl
push
push
dec
dec
addr16
xchg
jns
pop
sub
sahf
push
pop
jb
inc
scas
negl
shll
mov
sbb
test
sub
xchg
mov
add
xchg
cmp
imul
ljmp
xchg
mov
cltd
push
popa
bound
push
lcall
cmp
jno
repnz
je
mov
jmp
cld
mov
cmp
dec
push
cmp
push
add
sbb
inc
xchg
insl
cmp
in
or
dec
inc
sub
bound
repz
stc
cmpsb
xchg
mov
pop
lock
pop
xchg
stos
lds
dec
inc
in
jne
sub
add
push
stos
mov
jbe
test
pop
movsb
cmpsb
mov
xor
gs
cmc
jne
dec
icebp
stc
or
call
mov
xchg
in
xchg
imul
fildl
push
mov
or
leave
jg
lret
insl
leave
and
dec
cmpsl
inc
jo
and
insl
fwait
hlt
lret
inc
ffree
inc
rcrl
ret
xor
sbb
fisubs
mov
inc
mul
jp
inc
pop
jae
inc
add
jno
adc
enter
xor
int
push
daa
outsl
imul
pushf
and
nop
mov
sbb
mov
xlat
adc
pop
jp
mov
and
mov
adc
out
fdivrl
xor
xchg
inc
gs
dec
icebp
hlt
outsl
cmpsl
out
inc
dec
rol
add
cld
ficompl
ss
scas
mov
or
bound
xchg
sbb
outsb
sbb
add
push
inc
popf
sbb
enter
or
lds
mov
shll
jl
pushf
scas
push
sbb
xchg
ret
or
mov
add
lods
ret
lret
nop
push
out
lods
popa
mov
addr16
push
jnp
mov
cmp
not
mov
jns
mov
das
ffreep
or
pusha
cld
dec
xor
add
fmul
mov
inc
pop
jns
xor
cmpsb
cld
dec
mov
hlt
or
stos
lea
imul
dec
out
cmp
stos
pop
imul
cmp
xchg
leave
out
cmpsl
insl
daa
mov
ss
pushf
and
push
mov
addr16
inc
dec
mov
cmp
ss
movsb
sub
jp
lods
jg
adc
push
mov
sub
cmp
orb
loop
scas
fistpl
lea
pusha
jne
pop
lock
pop
imul
xor
sub
sahf
jl
iret
push
orl
jbe
or
and
jo
out
mov
mov
pop
test
inc
lcall
loopne
or
data16
loope
push
outsb
mov
gs
sbb
int
push
jmp
and
aas
rclb
sbb
mov
test
mov
div
in
rolb
cmp
hlt
mov
push
ds
int3
cmpl
pop
xor
mov
insl
popf
push
ss
xchg
rcrb
lods
outsl
pop
xchg
loopne
lahf
stc
fdivl
push
scas
cmc
pop
push
outsb
adc
test
dec
sbb
ja
mov
xchg
mov
push
mov
les
stos
inc
pushf
inc
icebp
js
pop
cmpl
sub
loope
in
pop
iret
push
or
shll
xchg
insb
add
cmp
in
and
scas
sbb
scas
mov
js
or
sub
popf
sub
repz
sub
xchg
dec
pop
and
mov
loopne
jae
jmp
pop
insb
popa
negl
mov
das
inc
add
mov
adc
inc
adc
rclb
sub
dec
mov
mov
test
roll
fnstsw
enter
lea
clc
sub
jo
xchg
push
shrl
stc
divl
iret
dec
mov
or
add
mov
lret
push
jno
movsl
cmp
xchg
push
jbe
mov
cmpsb
std
das
stc
subl
inc
ret
push
adc
leave
sahf
mov
fdivr
add
cmp
push
sub
lahf
rcrl
fbstp
sub
cmp
jo
cld
mov
into
mov
adc
pusha
mov
ljmp
mov
andl
mov
stos
ljmp
dec
jle
mov
enter
cmp
xchg
imul
test
insl
out
inc
sbb
or
adc
in
or
add
pop
scas
movsb
mov
pop
movsb
rcl
cmc
ja
cmpsb
jge
sbb
lcall
bound
and
xchg
cltd
sahf
ss
int
inc
and
inc
aas
lea
roll
fnsave
cmp
cmp
sub
aam
cmc
push
mov
lret
mov
jge
pop
add
mov
and
popa
in
test
inc
int3
inc
loop
in
xor
out
jle
pushf
pop
repnz
orb
cli
subl
addr16
mov
iret
fstps
add
into
notl
sub
cmpsl
mov
das
mov
inc
sbb
lcall
and
pop
cmpsl
mov
stc
xchg
sbbb
sbb
sbb
sbb
and
fwait
test
ljmp
movsl
sub
sub
xchg
gs
push
addr16
into
adcl
mov
cwtl
jecxz
jp
mov
sbb
xor
insl
rolb
push
jo
dec
dec
mov
out
mov
and
mov
push
jo
mov
out
outsl
sub
jg
jns
pop
loopne
lcall
mov
fbld
mov
mov
pop
xchg
sub
ret
jp
and
inc
nop
mov
test
mov
push
enter
mov
cltd
xor
cs
out
sti
jno
add
addr16
lahf
inc
fs
inc
push
adc
mov
fidivl
jl
je
mov
hlt
and
jle
and
mov
cmpsl
aaa
mov
sbb
andl
dec
popa
xor
xchg
sub
cltd
jo
add
xchg
mov
fnstsw
push
ja
or
push
lods
inc
divl
xchg
adc
in
jmp
cmp
gs
mov
pop
std
xchg
repnz
stc
pusha
and
pop
push
adc
mov
das
push
lret
mov
mov
lret
rcrb
jle
and
out
outsb
inc
cmp
bswap
lahf
cmp
dec
and
sbb
sub
gs
movb
push
das
aaa
nop
js
add
and
mov
xchg
lcall
or
mov
negb
loopne
jno
dec
dec
in
mov
xchg
push
out
mov
and
mov
push
scas
sbb
sub
adc
mov
cwtl
sbb
adc
add
std
outsl
jge
test
mov
jl
fdivrl
pop
out
sbbb
gs
sarb
icebp
daa
in
testl
dec
inc
sbb
shl
pop
es
loop
cld
out
pop
mov
add
aas
or
bnd
subb
lods
out
stos
pop
stos
in
subl
or
sub
jmp
mov
scas
jb
das
cmp
and
jo
xchg
push
out
sub
insb
cmc
mov
jp
push
sub
jl
mov
dec
bound
les
ds
push
jae
pop
mov
popa
orl
cmpsl
clc
and
and
cwtl
dec
ret
xchg
out
dec
mov
lods
fstps
ds
xchg
dec
mov
cmp
pop
mov
inc
fisubrs
ret
cld
mov
lret
xchg
in
sti
orb
xchg
orl
sahf
push
mov
inc
sarl
es
lcall
jno
xchg
dec
lcall
imul
xorw
xchg
ja
lea
rcl
and
mov
jbe
add
jmp
test
xor
ds
fsts
aas
inc
push
dec
mov
adc
fldenv
clc
or
lods
aad
shlb
mov
dec
enter
jp
aam
xchg
imul
mov
add
scas
dec
outsl
ss
mov
into
nopl
inc
cli
mov
xor
movlps
and
outsl
adc
sbb
sub
sbb
outsl
loop
je
xor
test
incb
xor
sbb
xchg
mov
test
mov
adc
stc
addr16
dec
arpl
inc
mov
mov
aam
push
outsb
pop
push
sbb
mov
pop
loop
test
dec
pusha
aam
mov
or
mov
testb
cmp
pop
imul
inc
mov
clc
outsb
adcb
add
push
mov
fdivp
jl
pop
icebp
mov
cmc
xchg
xchg
aad
jb
jns
sbb
add
jge
and
fwait
push
mov
mov
test
pop
jnp
xchg
mov
ret
popa
pushf
xor
sahf
pop
cmp
push
mov
jno
lea
adc
data16
stos
outsl
dec
iret
gs
push
push
add
divl
cmp
stos
adc
lock
gs
icebp
pop
and
pop
repnz
pop
lds
mov
pop
inc
jg
jmp
push
mov
or
insb
lock
xlat
mov
mov
mov
push
jns
cmpsl
mov
repnz
lods
cwtl
stos
sub
add
pop
mov
jl
dec
add
shll
ficoms
rolb
jnp
ljmp
mov
data16
jg
mov
jge
pop
movsb
inc
xlat
xchg
adc
cmp
insb
fwait
push
movsl
lret
mov
sub
lcall
out
fisttps
cmp
pop
push
xchg
mov
lcall
dec
push
sbb
mov
sti
mov
jns
push
das
decb
popa
rorb
inc
push
mov
dec
fmul
cltd
mov
mov
std
push
xor
data16
cli
or
pushf
mull
cmpsb
in
sub
mov
cmc
repz
xchg
ss
pop
sub
dec
jae
loope
mov
aaa
mov
fsubrs
fistpl
mov
mov
mov
cmp
loope
mov
jmp
dec
adc
nop
out
fistpl
pop
lods
inc
cmp
pop
ljmp
popa
andl
jmp
sub
inc
lds
das
sbb
push
and
aaa
xor
add
xor
push
fstpl
mov
popf
pop
sbb
fsubrs
inc
or
fildll
call
stc
inc
xor
int
icebp
xor
out
popl
pop
insb
jp
loopne
fdivs
arpl
jns
pop
stc
add
sbb
loop
mov
fisttpl
or
inc
movsl
push
clc
push
xor
vsqrtpd
aam
xlat
push
enter
xor
xchg
push
add
fsubs
sahf
sub
addb
xchg
addr16
jnp
hlt
addr16
or
mov
fildll
test
lret
cld
push
cmp
push
xchg
or
icebp
and
fs
sub
xchg
insb
into
lds
test
repz
movsb
cmp
cmpl
negl
xor
leave
xchg
fs
add
inc
add
xchg
or
mov
mov
loopne
in
xor
cltd
data16
and
adc
xchg
lret
hlt
lea
push
jb
inc
loopne
das
xlat
jmp
shl
sbb
xchg
xor
lds
add
sub
push
adc
imul
sti
or
mov
adc
repz
ret
cmpl
pop
test
or
fs
fcmovnu
arpl
aaa
andl
sarb
and
sub
mov
rcrb
dec
pop
outsb
stos
jle
cmp
or
lock
popf
xor
lods
mov
cmpsb
mov
aad
sub
push
fmuls
cli
mov
mov
mov
sub
fucomp
dec
cwtl
mov
pop
mov
lock
xor
lahf
xor
fabs
jge
jmp
adc
adc
setnp
inc
sub
cmp
insl
or
lahf
pop
popa
clc
mov
es
popf
stc
cmpsl
mov
es
jmp
andl
adc
push
jo
mov
add
loop
mov
xchg
sub
das
add
fimuls
loopne
mov
mov
jl
pop
cmp
mov
push
int3
repnz
push
fsubr
sti
xchg
and
das
adc
fidivrl
mov
sbb
shlb
and
jb
mov
adc
sub
repnz
xlat
and
inc
cli
ljmp
push
inc
mov
in
xor
pop
dec
repnz
add
inc
pop
repz
mov
data16
nop
jae
and
cld
inc
fdivp
jae
inc
pop
lret
popf
mov
lahf
stc
or
lahf
cmp
fwait
js
push
mov
pop
loope
and
fiadds
sbb
push
sbb
std
jo
mov
out
adc
mov
in
nop
xor
push
popf
inc
scas
sub
sti
adc
xchg
repz
pop
sbb
pop
xchg
cmp
add
aad
aaa
shll
push
mov
rolb
into
gs
fadd
test
push
or
inc
dec
rcrb
mov
ds
push
sub
xchg
ljmp
mov
and
push
ret
jo
add
dec
sub
dec
xlat
mov
cmp
lock
out
dec
xchg
out
outsb
leave
cwtl
clc
hlt
aas
mov
shlb
sbb
in
push
pop
nop
sub
repz
scas
iret
lods
mov
sti
adc
inc
je
repnz
jb
push
mov
in
out
sbb
or
movsb
loopne
sbb
mov
in
push
adc
pop
sbbb
lds
out
roll
out
pop
push
es
out
addr16
mov
test
dec
lret
lock
jns
add
adc
stc
scas
or
add
xor
lahf
jmp
or
leave
pop
out
sti
popf
jl
imul
data16
mov
out
inc
mov
sbb
fsubrs
pop
sbb
push
dec
ficoml
repz
shl
or
mov
fwait
sbb
inc
mov
lahf
cmp
pop
lahf
push
jo
adc
sti
and
mov
mov
cmp
out
out
test
jnp
mov
and
sub
and
lret
scas
fwait
inc
pop
in
lods
push
movsl
mov
add
int
sbb
rol
cmp
xor
negb
xor
sbb
sbb
call
lea
aas
adc
ret
xor
repnz
loope
lea
push
inc
jecxz
mov
icebp
jl
dec
test
call
push
mov
mov
jle
test
push
inc
rorb
test
pusha
mov
xor
mov
adc
and
scas
push
inc
push
shll
ss
ja
and
jl
aas
dec
add
mov
inc
ficomps
push
ss
test
test
lea
das
lret
jno
imul
xchg
xor
in
xchg
cmc
ret
push
jbe
sbb
jo
mov
cmp
mov
xor
cmp
in
rcrl
dec
stos
rorb
xchg
mov
dec
vpavgb
pop
or
mov
shl
adc
ss
clc
xor
xchg
es
and
jns
outsl
push
outsl
jge
les
dec
lcall
inc
fwait
sub
jnp
add
dec
push
cmc
into
pop
das
push
call
xchg
push
inc
sub
jns
pop
mov
fisubrl
mov
fldt
pop
test
mov
pop
sub
fwait
icebp
test
add
je
add
jb
and
popf
jl
out
subl
sti
jnp
hlt
mov
data16
daa
mov
fisubrl
outsb
mov
fildl
mov
ret
cmp
movsb
push
rcll
orl
ficoml
lret
iret
dec
test
lret
sbb
out
js
and
out
out
ljmp
pushf
xor
or
jp
shr
clc
mov
shll
mov
stc
imul
adc
inc
push
inc
enter
popa
fdivs
dec
pop
mov
ljmp
hlt
in
int3
fsubrs
scas
xchg
adc
push
xor
es
mov
xchg
inc
lds
jb
pop
xlat
cmc
cwtl
sarb
stos
mov
mov
and
imul
push
stc
insl
cld
xchg
pop
mov
fidivrs
aam
adc
iret
mov
lea
xchg
jno
dec
add
fidivrs
push
addb
fadds
dec
cmc
inc
hlt
addr16
xor
shr
jp
popf
jo
inc
icebp
mov
test
jb
fs
mov
cmpsb
adc
mov
mov
cmp
adc
push
fwait
jbe
push
fs
pop
or
jb
xchg
xor
dec
pop
cmp
xor
out
mov
or
dec
push
lret
mov
jnp
das
outsb
jae
movsl
lea
shlb
pop
pop
lds
testb
cmp
adc
leave
inc
fsubp
mov
xchg
sub
mov
outsl
or
push
or
lock
insl
mov
popa
hlt
xchg
sahf
sbb
outsl
gs
arpl
push
sub
jae
mov
xor
cli
pushf
adc
xchg
jbe
adc
stc
adc
roll
in
and
push
into
dec
idiv
cltd
mov
dec
in
call
cmp
inc
icebp
xchg
insb
xchg
pusha
lods
mov
dec
jae
or
mov
imul
outsl
mov
repz
pop
and
xchg
in
loopne
or
lods
ljmp
popf
lods
jno
sub
cli
jnp
test
inc
pushw
daa
or
outsb
psllw
popl
mov
mov
hlt
jle
fnstenv
xchg
push
and
aam
pusha
pop
dec
jb
bnd
scas
mov
push
fnstcw
test
jmp
das
inc
dec
testb
sub
lcall
and
mov
add
lods
imul
stc
sub
push
sub
shr
cmp
inc
dec
jmp
inc
push
jo
dec
mov
jne
loop
sbb
insl
inc
sahf
mov
cs
shrb
mov
lea
push
cli
mov
push
push
xor
mov
sbbl
es
inc
adc
loop
adc
dec
mov
repz
lea
adc
fildl
lret
adc
iret
sbb
fsubp
repz
push
fidivl
pusha
cmp
xor
mov
add
inc
sti
fwait
out
xor
ja
dec
movsl
dec
popf
pop
test
jg
shlb
ret
adc
daa
cmp
mov
jne
and
inc
push
cli
leave
popf
mov
add
out
push
xchg
scas
sbb
pop
push
jle
jle
shrl
sbb
pop
lock
clc
mov
incl
sbb
pop
in
mov
shl
mov
loopne
decl
cmp
or
sub
cmp
out
loopne
push
popa
xchg
add
and
cmpsl
sub
jns
jne
inc
lcall
inc
lret
xchg
sub
lcall
mov
jmp
sbb
adc
xor
in
mov
int3
sahf
xchg
push
inc
popa
mov
inc
popa
icebp
shlb
imull
mov
push
lock
push
mov
enter
fsubrs
inc
arpl
jne
mov
jbe
test
int
pop
inc
imul
loope
pop
xchg
cmp
leave
data16
mov
mov
mov
pop
pop
and
sub
ret
xor
ffreep
ss
lock
mov
je
and
out
or
xchg
in
lahf
sub
pop
push
cltd
popa
mov
pop
nop
pop
mov
mulb
fstpl
xchg
sbb
xor
loop
mov
dec
lahf
push
inc
xchg
popa
leave
mov
rcrl
int3
jg
ja
add
out
and
rol
repnz
or
mov
out
les
repz
daa
ficomps
lret
daa
or
lock
lcall
xor
mov
icebp
ja
rcrb
pop
jle
call
mov
sbb
lcall
fwait
jmp
xlat
sbb
pop
mov
bndldx
add
aas
imul
js
pop
fbstp
adc
lods
and
lods
inc
out
push
inc
sbb
or
pop
cmc
mov
cmc
pop
pop
loop
push
and
les
xchg
mov
fsubl
imul
out
outsl
cmpsl
jbe
pop
aam
clc
pop
cmp
pop
les
cmc
inc
mov
push
lret
mov
std
daa
mov
je
sbb
xbegin
pop
cli
dec
inc
in
sbb
mov
pop
lds
cld
aaa
and
xchg
cs
push
xor
jmp
int3
dec
lds
fldcw
push
xor
daa
push
fcomps
mov
aaa
push
aam
iret
andb
shrb
xchg
or
stc
out
test
adc
jp
sbb
xor
repz
cwtl
icebp
or
andb
fists
nop
fisubl
mov
or
cs
in
mov
insb
iret
mov
cmp
mov
inc
adc
mov
in
jle
pop
mov
subb
in
loope,pn
add
dec
push
test
mov
fsts
xor
cltd
negb
and
je
add
movsl
movb
cmp
aaa
ret
dec
mov
or
testl
sub
mov
pop
insl
mov
mov
or
or
fldenv
in
mov
sub
push
outsl
adc
negb
movsl
ja
out
lret
jmp
dec
push
jmp
ljmp
mov
stc
lock
ret
pop
mov
in
test
sub
push
or
lea
dec
nop
pop
dec
fidivs
cmp
push
negl
fadd
or
push
icebp
fcmovnu
mov
icebp
popa
sbb
fdivr
inc
jmp
sti
out
xchg
inc
xor
in
mov
xchg
fistps
decb
cmpsl
jecxz
pushf
aaa
fidivrl
std
pop
insb
int
out
test
sub
adc
adc
ret
enter
sti
xchg
pop
push
shll
testl
fdiv
mov
jp
ja
cwtl
cwtl
push
xchg
out
insl
push
adc
lock
fldl
push
cli
jne
fstps
movb
arpl
cwtl
push
or
pshufw
lret
lcall
loope
test
or
bound
test
sub
lcall
and
outsl
in
outsl
push
fistps
or
test
repnz
push
stc
xor
sbb
push
test
cmp
inc
pop
pop
xchg
out
stc
sub
clc
test
ss
mov
inc
inc
in
jbe
stos
out
xchg
mov
push
lock
adc
dec
mov
vmovlps
outsl
xchg
pop
push
loope
into
ja
push
inc
pop
mov
lret
xchg
fildl
mov
jbe
push
push
pop
push
cwtl
mov
dec
xchg
popf
or
imul
pop
cwtl
daa
push
dec
test
sub
repnz
enter
mov
push
push
enter
negl
xor
int3
dec
sahf
push
fsubr
sub
loopne
cmp
sbb
inc
dec
jg
popf
es
daa
loope
xor
xchg
and
mov
jbe
cmp
sub
lcall
jmp
adc
add
je
xchg
scas
dec
sub
and
fcmovne
ja
push
xor
lgs
pop
push
fstl
jne
je
scas
pop
out
fdivl
mov
adc
mov
shrl
pop
jl
pop
push
mov
adc
xchg
mov
mov
dec
loop
or
push
push
in
adcl
js
or
mov
push
xchg
add
pop
inc
fisubrl
push
jo
inc
imul
fisubrs
icebp
lock
push
adc
push
pop
mov
pop
cmovo
and
mov
mov
mov
fst
mov
loope
push
int
push
sahf
dec
out
jmp
outsb
loope
xchg
dec
ret
jl
jg
iret
xor
nop
push
cli
add
mov
or
pop
flds
sahf
xor
cmp
xchg
cmc
movl
negb
andl
cmp
dec
jno
mov
xchg
sbb
loopne
fcompl
push
cmpb
ds
inc
addl
js
into
outsl
loop
add
inc
sbb
lea
pop
call
out
and
jne
add
pop
cmp
aaa
iret
mov
and
aam
aas
leave
rolb
test
aad
jno
mov
iret
or
pop
sahf
pop
xor
sbb
pushf
rorl
sbb
mov
stc
xchg
pop
das
inc
pop
mov
dec
pop
pop
xlat
xchg
outsb
test
clc
push
dec
xor
jmp
lea
lcall
jno
in
mov
iret
mov
and
out
push
out
data16
sub
fnstenv
mov
push
cli
fbld
shrl
cld
and
and
pop
sbbb
xchg
insb
push
enter
add
arpl
inc
cmc
test
leave
rcl
push
js
sbb
dec
pushf
jecxz
sub
arpl
cwtl
dec
leave
sbb
movsl
imul
leave
and
fistpl
mov
mov
enter
push
in
nop
xchg
mov
cmp
jns
das
mov
dec
mov
mov
push
fsubl
notb
push
jp
push
in
xchg
imul
das
xor
adc
std
cwtl
mov
mov
iret
movsb
add
push
adc
arpl
pop
lahf
inc
adc
cmc
pop
push
pushf
push
movsb
loopne
pop
lods
xchg
cmc
pop
cmp
aas
jecxz
in
aaa
jbe
ret
outsb
icebp
outsl
push
lods
enter
cwtl
push
out
shrl
out
mov
adc
xor
es
pop
lods
dec
leave
push
into
mov
inc
hlt
push
adc
aam
push
sahf
jp
jle
cld
dec
xor
mov
and
mov
inc
push
xlat
mov
shll
mov
push
mov
imul
push
xchg
lret
mov
jg
sbb
fs
jnp
push
insl
out
pop
lcall
lret
fs
sarl
and
push
dec
or
sbb
jge
aad
pusha
xchg
xchg
leave
jns
dec
jmp
pop
ja
and
invd
cmc
fdiv
inc
push
mov
inc
dec
jp
mov
add
push
xchg
cmpsl
pop
movsb
outsl
add
jbe
stos
cmp
repnz
mov
inc
enter
inc
xor
dec
fbld
les
or
push
mov
shll
dec
les
xor
leave
push
adc
inc
clc
xor
pusha
dec
mov
outsl
add
lods
jo
mov
cmc
mov
lock
aam
pop
out
dec
adc
add
add
push
mov
cmpsl
daa
dec
mov
lcall
popa
std
dec
insb
inc
movsb
xchg
lods
add
mull
and
test
nop
push
repz
outsb
or
fstpt
repnz
xor
aam
sbbl
xchg
jp
mov
add
push
add
mov
or
push
and
adc
mov
mov
cwtl
mov
aad
mov
ret
mov
adcb
orl
mov
jo
lods
cmp
adc
jge
dec
inc
fnstcw
mov
adcb
push
and
cmp
lret
filds
fsubrs
adc
jmp
xchg
mov
mov
mov
pushf
scas
jne
sbb
jno
lret
cmp
aaa
or
sarl
sbbb
notb
mov
jbe
mov
inc
mov
clc
or
pop
jno
xchg
shlb
std
or
out
mov
mov
xorb
add
mov
jns
sbb
lods
cwtl
lods
nop
mov
xor
fucomip
jg
xchg
js
push
mov
js
dec
stos
mov
dec
dec
push
xor
into
jmp
ret
mov
pop
cmp
xchg
cltd
out
dec
inc
cmp
push
addr16
cld
pop
sti
push
in
lret
jns
test
mov
dec
scas
and
adc
imul
pop
add
sbb
pop
ja
rolb
xor
test
mov
loop
cltd
jecxz
arpl
mov
mov
xlat
inc
fcmovnbe
push
add
fnstenv
out
mov
sahf
lods
mov
and
addb
push
jmp
setle
ds
outsl
sti
push
push
xchg
push
xor
push
inc
or
sub
xor
mov
jmp
cltd
vsubps
imul
data16
dec
jno
xor
in
xchg
icebp
bswap
mov
in
push
cmpsb
icebp
xchg
add
scas
aaa
or
cmc
pop
fiadds
fsubl
xchg
pop
pop
fldcw
outsl
mov
and
shl
mov
sbbl
and
mov
fnstcw
mov
fistps
xor
mov
aam
cli
fdivrl
lret
enter
in
xor
mov
pop
stos
mov
cmp
imulb
fnstsw
or
push
stos
sub
xor
jmp
fstps
mov
or
fcoms
out
cmp
and
popa
into
xchg
add
aaa
sub
lcall
fcmovnbe
aaa
add
lcall
pusha
fldt
jae
inc
movsl
pop
lds
negb
icebp
popa
jecxz
mov
cmpb
jge
ja
push
adc
adc
stos
lds
pushf
xor
aaa
dec
jmp
pop
mov
shlb
test
cmp
orl
push
sub
adc
gs
dec
mov
addr16
pop
out
and
jg
loope
xchg
insb
push
out
mov
xchg
rolb
push
cwtl
jge
or
out
and
pop
sbb
data16
bound
pop
out
test
pop
icebp
insb
inc
ds
jmp
lret
inc
test
movsb
push
mov
ja
mov
jle
adc
sahf
pop
mov
sub
sbb
fucomip
shlb
sbb
shrb
cld
mov
xchg
sub
xor
mov
pause
xchg
dec
out
inc
or
dec
push
clc
popf
imul
push
mov
mov
add
daa
fstpl
insb
sub
jg
int
sub
xor
xchg
pop
dec
jecxz
jne
fwait
mov
shlb
sbbl
dec
xor
fwait
pop
sbb
add
xchg
fwait
test
pop
leave
pushf
mov
or
lock
jno
xor
clc
sahf
notb
pop
mov
xchg
out
sub
adc
lock
and
nop
sti
jp
or
and
mov
adc
cs
addb
or
repnz
inc
cmpsb
add
and
cld
pop
ja
arpl
pushl
add
mov
cmp
and
push
out
inc
push
je
psraw
pop
leave
pop
adc
les
scas
pusha
sbbb
lret
mov
xchg
mov
mov
stc
mov
pop
cwtl
push
dec
lock
das
out
inc
xorl
sahf
lods
cs
fwait
sbb
add
pop
push
xchg
xor
clc
or
jnp
sbb
pop
xor
mul
dec
sbb
mov
push
or
lret
sub
dec
push
iret
pushf
add
out
fwait
pop
mov
je
aad
jecxz
imul
mov
lcall
dec
pop
pop
add
inc
pop
lahf
and
addr16
pop
pop
loop
ret
dec
push
loopne
subl
or
sti
pop
jb
gs
negl
std
dec
enter
cmpsb
les
in
xor
push
subl
push
filds
and
pop
mov
outsb
test
jmp
aam
inc
aaa
sbb
add
fnstcw
xchg
lds
negb
gs
add
push
addr16
pop
hlt
add
lret
sub
sbb
orb
push
clc
jl
les
push
jo
push
adc
pop
xchg
imul
cs
push
int
sub
outsb
adc
mov
imul
out
mov
call
mov
aad
adc
push
cmp
test
jbe
into
fisubrs
fstpt
mov
sbb
push
sub
out
jno
popf
mov
pop
mov
inc
pop
inc
pop
mov
jb
or
andl
dec
aam
jne
mov
shlb
add
sub
xchg
rol
shrb
mov
or
leave
shrl
add
push
mov
adc
mov
mov
mov
call
movsl
mov
push
sbb
sub
test
ret
mov
mov
ret
xchg
jmp
clc
xchg
jae
jb
mov
inc
push
or
and
jg
jp
jnp
push
lods
mov
mov
mov
or
das
adc
jbe
movsl
mov
fnstenv
add
jge
push
testl
mulb
sub
mov
xchg
sbb
pop
pop
test
js
cmc
movsl
sub
flds
fidivl
mov
mov
jmp
js
jmp
mov
dec
lcall
and
xchg
rorb
test
and
mov
pop
dec
hlt
push
pop
xor
inc
jge
jmp
jne
sbb
add
lcall
call
cmp
imul
or
xlat
dec
out
inc
inc
lods
inc
xchg
sub
or
cs
adcl
mov
lret
mov
cmp
pop
stos
insl
pop
rorl
jl
rclb
jb
fsubs
dec
adc
ljmp
mov
enter
pop
sub
loop
add
dec
mov
cmp
sub
or
sbb
cld
cld
dec
dec
stos
repnz
psllw
repz
adc
sub
fcoms
rolb
mov
inc
clc
scas
leave
loopne
test
pop
movsb
mov
mov
mov
mov
mov
mov
adc
mov
jl
sbb
add
ret
filds
adc
std
push
add
repz
cs
push
scas
lret
pop
cmp
lods
stos
ret
repz
inc
std
pusha
xor
movsl
or
adc
dec
imul
pusha
outsl
movsl
sbb
ret
mov
popa
in
pop
rcrb
adc
mov
lcall
insl
cmp
xchg
ss
mov
addr16
or
sbb
jecxz
shrb
out
mov
std
loope
fmuls
lret
rcrl
mov
in
cmp
lods
jmp
leave
jmp
jg
shlb
out
adc
push
inc
fbld
pop
idiv
cmp
sbb
icebp
xor
in
or
push
insb
jge
ss
out
sub
movsl
pop
jb
and
push
mov
dec
dec
pop
lret
sti
pop
sbb
push
or
sbb
lcall
jg
push
lahf
jg
in
mov
mov
mov
arpl
inc
fisubl
mov
stc
sub
aaa
jp
je
cmp
and
push
fdiv
xor
xor
mov
inc
mov
pushf
cli
dec
scas
test
adc
sbb
insl
xlat
jns
in
inc
xor
cmp
jae
das
movsl
shlb
test
ret
push
and
mov
cltd
xor
cmpsl
jp
fnstcw
out
ret
adc
in
das
mov
cmpsb
xchg
add
xchg
mov
sub
sbb
cmp
mov
mov
and
sbb
mov
dec
jns
inc
popl
bound
xchg
mov
ss
popf
mov
cmpsb
add
push
popa
ds
mov
sub
mov
lret
push
pop
cwtl
push
je
jns
push
enter
bound
lods
adc
inc
and
add
cld
daa
adc
and
sti
fstl
inc
mov
scas
lret
dec
cmc
cmp
sbb
pushf
fdivrs
mulb
enter
enter
push
outsb
imul
push
pushf
xchg
fs
jecxz
mov
mov
cmpsl
and
subb
jl
pop
loopne
xor
or
lods
insb
push
imul
scas
out
test
mov
xchg
add
rcrl
pusha
icebp
stos
jge
inc
fidivrl
jge
inc
pop
adc
inc
mov
leave
xchg
push
pop
fcomps
fwait
push
insl
inc
cmp
imul
inc
int3
stc
andl
aaa
pop
xchg
cli
sar
rorb
push
aaa
pop
shlb
divb
dec
stos
hlt
mov
push
loope
inc
jle
cmp
addb
aaa
pop
ret
loope
pop
inc
xlat
mov
out
inc
aaa
and
push
pusha
or
mov
fidivl
into
add
mov
mov
dec
pop
lahf
jp
jno
nop
lods
fwait
xor
mov
ficoml
and
arpl
cmp
jmp
les
dec
movsb
repz
add
add
jns
scas
pop
inc
in
push
sti
sbbb
cld
call
out
neg
pop
adc
adc
and
loop
inc
cmpsl
icebp
inc
mov
push
lock
int3
popa
xchg
add
dec
sahf
push
test
movsb
adc
pop
ucomiss
inc
jle
xor
cmp
je
fnstenv
cmp
es
add
mov
shlb
jbe
popl
jge
sub
rolb
cli
adc
jne
dec
arpl
mov
lds
rcr
cmc
jmp
adc
sub
test
xchg
dec
lods
fwait
adc
push
inc
push
mov
push
or
cmp
je
in
mov
mov
pushf
xor
movsl
bound
lods
test
scas
dec
xor
fldcw
adc
xor
mov
repnz
pop
call
mov
mov
xchg
pop
gs
cmp
scas
xor
add
fmull
cmpsb
lock
mov
aaa
lds
mov
sbb
sub
mov
or
xor
aam
ss
std
jp
and
mov
dec
lock
aad
sti
xchg
adc
dec
push
inc
mov
int3
in
xor
jo
mov
scas
int3
push
mov
adc
inc
jle
test
push
sub
fwait
cmc
mov
mov
cmp
sub
mov
testl
and
lods
mov
imul
test
lahf
in
xor
jecxz
fs
arpl
leave
pop
jle
pushf
scas
sub
pop
aam
nop
sub
popf
mov
push
pop
and
add
imull
int
popf
loopne
xchg
mov
insb
jle
pop
data16
push
aad
scas
mov
int3
lret
pop
inc
fdivr
inc
fsubrl
push
es
or
repnz
dec
add
rolb
xchg
push
loopne
jge
popl
dec
fisubl
ret
mov
fdivs
int
inc
inc
mov
pop
cmpsb
cwtl
std
inc
xchg
add
repnz
mov
cmp
das
pop
stos
sbb
and
adc
bound
and
fisubl
adc
jb
into
adc
outsb
stc
or
sarl
add
mov
mov
adc
idiv
xchg
sub
cmp
add
jg
inc
cltd
pushf
cwtl
test
fimuls
and
mov
mov
jle
inc
lock
xor
mov
es
pop
dec
push
or
push
jmp
lods
and
mov
out
shll
cltd
and
mov
xor
add
or
mov
dec
cmp
mov
mov
and
xor
xor
fistpll
or
xchg
or
fwait
cmp
mov
mov
mov
adc
dec
jecxz
je
xchg
aam
push
mov
sub
add
shrl
scas
rcl
fisttps
lock
and
or
sti
xchg
shll
fcomip
mov
lret
sti
lcall
adc
pop
lret
fldl
gs
adc
dec
ret
inc
pop
sub
xlat
bound
add
pop
xchg
insl
sti
add
arpl
sub
jl
mulb
sub
icebp
cmpsb
mov
andl
add
fiadds
fs
movsbl
fdiv
inc
bound
inc
je
and
out
add
shll
loopne
cli
adc
mov
push
or
fidivl
xlat
inc
clc
les
and
inc
sub
fildl
scas
lret
addr16
imul
sub
jp
subb
jno
cmp
sub
or
push
add
shr
mov
mov
out
jns
push
push
je
test
mov
mov
lods
insb
pop
ss
sub
add
aas
push
jo
popl
sbb
add
xchg
fldpi
and
jo
das
dec
xor
jbe
enter
fdiv
fucomi
add
xchg
movsl
aad
inc
into
pop
out
enter
stos
inc
daa
jp
andb
pop
lret
inc
in
repnz
mov
pop
mov
sbb
in
std
push
cmp
mov
lods
cld
pop
dec
scas
ret
adc
adc
mov
lcall
add
xor
mov
pop
mov
pop
jl,pn
xchg
outsl
mov
sub
rorb
cli
jne
out
shl
call
and
mov
fs
rol
pop
add
bound
sbb
cld
shll
es
mov
enter
idivb
cmp
subb
xor
cmp
popf
xor
cltd
mov
stos
loope
dec
xchg
adc
xchg
sbb
enter
pushf
ja
pop
fwait
add
inc
fidivl
xchg
out
cmpsl
stc
aad
push
loopne
mov
add
adc
mov
sti
inc
and
and
pop
add
mov
out
sti
cltd
jnp
add
sahf
push
and
or
rep
das
cmp
adc
gs
cltd
adc
negl
iret
push
mov
or
sahf
lret
rcrl
push
std
test
subl
out
data16
out
mov
push
jl,pn
mov
adc
stos
jbe
and
stc
je
mov
jmp
nop
lds
aad
mov
or
insb
mov
gs
xchg
dec
in
js
pop
cmp
aam
adc
cmpsl
sbb
xor
lds
cmp
fstpt
aas
mov
adc
mov
test
jp
or
sti
es
lahf
or
data16
push
push
fwait
add
xor
dec
scas
in
mov
jp
jp
in
mov
nop
pop
mov
test
push
in
das
pusha
rep
lds
cmp
add
xorb
cltd
call
and
sbb
in
arpl
fisubs
sub
aad
mov
dec
mov
fldcw
xchg
inc
pop
vpsllq
cmp
push
push
cmpsl
scas
inc
pop
popa
scas
mov
sub
push
push
jecxz
adc
and
rcr
pop
out
and
ss
cli
jmp
sbb
adc
mov
popa
jno
pushf
mov
jne
in
aad
mov
cmp
popf
cli
and
push
lock
mov
in
xor
pushl
push
je
dec
xor
popf
into
mov
cltd
push
dec
xor
add
add
mov
cmpsb
lahf
mov
push
dec
mov
and
and
in
xchg
pushf
mov
dec
scas
push
jmp
hlt
int
fwait
jne
ljmp
lret
ss
icebp
mov
aas
mov
in
pop
xchg
scas
xor
popa
fcoml
inc
push
mov
ror
aaa
or
add
dec
int
jg
fsubr
add
decl
dec
lcall
mov
scas
pop
dec
or
rorl
mov
add
jae
cmpps
mov
add
gs
mov
pop
push
loopne
addl
pop
aam
pop
push
aad
dec
in
lock
adc
in
xchg
xor
ljmp
mov
rcrb
sbb
sti
push
mov
mov
je
popf
cmpsl
test
jo
jne
mov
mov
jns
mov
shrl
mov
scas
mov
and
std
mov
and
sub
insb
inc
daa
fmuls
mov
sub
xchg
mov
cmp
mov
xor
aaa
fstl
outsl
das
mov
pop
pop
repz
mov
divb
cmpsb
ja
xor
mov
aad
aam
and
aam
mov
inc
lahf
das
loopne
popf
hlt
gs
lock
pop
and
enter
mov
jge
dec
lcall
out
mov
inc
out
sbb
xor
dec
sub
inc
cld
cltd
xor
arpl
ljmp
sahf
ficoml
jg
enter
jae
inc
divb
sub
loopne
xchg
push
rcr
decl
sub
mov
cltd
adc
mov
outsb
add
repnz
mov
test
daa
sub
ret
bnd
dec
cltd
lcall
in
popa
or
in
adc
or
insl
adc
notl
rcrb
mov
push
movsb
xchg
jle
pop
xor
into
aas
push
inc
test
mov
icebp
push
jp
mov
gs
xchg
cmp
sub
mov
pop
cmpsb
jns
lcall
mov
adc
mov
ss
xchg
dec
jg
dec
cltd
stos
call
out
scas
dec
cmp
inc
bound
repnz
loop
insl
std
pop
pop
inc
imul
xchg
push
jmp
lret
push
fcoml
push
int3
fsubl
movb
jae
pop
sub
les
int
add
push
movsb
push
xlat
in
mov
push
xlat
lods
cmp
mov
and
and
adc
mov
or
sub
mov
ss
push
insb
push
pop
adc
jecxz
sbb
and
addl
xor
xchg
adc
xchg
push
idivl
test
insb
rorl
push
jp
sbb
int3
xor
push
xor
dec
out
push
int
sub
dec
mov
pop
mov
mov
sub
call
adc
mov
push
mov
add
adc
shr
pop
clc
shl
sub
fcompl
push
cmp
nop
stos
test
jns
lods
pop
insl
or
sahf
stos
pushf
lcall
xchg
jne
jno
scas
mov
cli
or
into
rcrl
enter
xorb
jae
inc
out
stc
nop
push
call
movsb
dec
mov
push
jecxz
mov
cs
sahf
jg
lea
xchg
inc
fs
and
rclb
cmp
in
enter
add
insl
or
pop
xor
push
mov
adc
pop
les
pop
mov
adc
test
adc
call
jne
stos
leave
pusha
mov
and
fsts
mov
cmp
je
fsubr
xor
push
enter
daa
repz
insl
test
inc
dec
scas
or
imul
and
mov
je
jnp
cwtl
lods
pop
and
sbb
jle
in
push
or
add
xor
pop
inc
adc
outsb
insb
cmp
fisttpll
pop
imul
add
pop
or
notb
mov
sub
mov
aad
and
jl
addb
pop
adc
xchg
mov
fwait
mov
les
pop
cli
test
sti
mov
fs
dec
mov
pop
xchg
dec
pop
fsubrs
icebp
or
filds
aaa
and
xor
inc
add
out
add
adc
lea
fbld
add
push
out
repz
xchg
js
cli
frstor
je
imul
dec
stos
lds
adc
sbb
movsb
cmp
xchg
sbb
scas
and
cld
fnstenv
insl
push
out
jno
pop
add
push
jbe
dec
ret
mov
into
jns
sahf
cli
push
rorb
lret
pop
hlt
add
testl
in
fwait
xor
shll
jne
mov
call
rcl
outsl
fiaddl
test
sub
mov
mov
mov
aad
xor
dec
xor
push
jmp
inc
inc
cmpsl
popa
push
notl
xor
mov
out
pop
in
shll
mov
push
fimuls
fsubl
pop
or
bound
lods
mov
pop
int3
cmc
loop
mov
add
mov
insl
mov
out
int
and
int
call
or
mov
pop
add
mov
rcrb
sti
in
xchg
xor
insl
test
stos
stc
mov
lahf
add
adc
stc
js
mov
push
mov
in
jg
adc
pop
popa
push
inc
loop
sub
inc
pop
or
mov
push
jecxz
add
or
jecxz
imul
cli
aas
mov
or
sti
cmp
shrb
inc
clc
sahf
mov
imul
sahf
call
mov
adc
pop
sub
int3
pushf
and
adc
add
divb
fs
push
mov
and
cli
push
cli
push
dec
dec
inc
cwtl
dec
pop
lret
stos
adc
pushf
inc
sbb
push
mov
xchg
cwtl
sub
jecxz
in
bound
mov
test
mov
xchg
aas
mov
ja
add
in
inc
inc
cmpsb
hlt
repz
jge
jns
in
pusha
outsb
adc
pop
cwtl
or
or
pop
rcrl
sbb
push
or
jne
lcall
mov
aas
push
in
es
xchg
pop
sbb
xor
sub
jnp
mov
movsb
cld
int3
and
mov
or
mov
in
jp
or
push
push
and
jbe
mov
std
xchg
mov
xchg
mov
ljmp
out
cld
nop
int3
pop
pop
test
cmp
movb
add
mov
loope
mov
int3
cmc
push
add
clc
mov
orl
pop
or
xchg
stos
jmp
das
xchg
test
jne
out
dec
xchg
xchg
push
push
mov
jp
jle
xor
and
iret
das
push
inc
mov
sbb
and
sbb
bound
cs
pusha
sbb
xchg
xchg
mov
ja
rorb
mov
pusha
dec
inc
pusha
jnp
adc
cmp
sarl
inc
mov
mov
xchg
insb
push
stos
adc
inc
arpl
lret
lcall
stc
and
aam
mov
loope
mov
enter
icebp
push
lret
xor
mov
enter
inc
lods
sbb
fsubrp
cmc
lods
mov
test
xor
add
pop
sbb
lods
lcall
xor
push
push
jb
in
xchg
pop
and
lds
insl
dec
in
add
stc
mov
or
sub
cmp
push
mov
pop
inc
jns
pop
shlb
arpl
shll
shl
repnz
sub
popa
clc
ret
mov
js
mov
aam
fisubrl
into
gs
hlt
addr16
cmpsb
in
sbb
sub
jno
cmp
push
push
inc
or
in
ficomps
outsb
jmp
data16
mov
add
insl
sub
inc
sub
rorl
push
mov
repz
inc
in
and
and
push
or
fisubrl
aas
andl
clc
adc
cmp
xor
idivb
mov
js
test
add
negb
and
cmpsl
jp
xchg
jne
hlt
icebp
in
jecxz
push
sub
test
mov
imul
sbb
pop
push
jmp
lcall
and
jl
add
icebp
cli
aam
mov
pop
xor
pushl
or
iret
bound
je
inc
orb
jbe
into
push
sub
cmp
or
push
loopne
mov
in
pusha
imul
add
sub
add
imul
lret
lods
shll
into
popf
add
inc
add
cltd
push
jne
or
addr16
bound
cmp
mov
clc
mov
pop
icebp
test
and
xchg
adc
dec
out
lea
stc
lahf
mov
add
mov
jg
jae
mov
mov
call
adc
outsb
outsl
or
inc
inc
push
dec
mov
cmpsl
cmp
insb
imul
ds
repz
insb
sub
fwait
scas
dec
mov
mov
adc
mov
push
daa
mov
clc
sahf
repnz
inc
jl
jno
adc
fsubrl
push
dec
out
mov
outsb
adc
lds
divl
cmp
call
test
btr
mov
pop
out
xor
incb
lods
xchg
jecxz
jns
fstpt
sti
lcall
or
stos
and
cmpsb
lds
lret
arpl
dec
push
ds
out
push
mov
rcll
mov
jl
adc
sbb
data16
xchg
mov
test
das
ja
mov
iret
sub
jne
ds
ja
popa
clc
scas
je
out
int
jg
popa
push
adc
or
xchg
in
repz
ss
movsl
ds
jo
dec
lods
repz
lock
sbbl
adc
iret
add
popa
fcompl
adc
mov
mov
gs
adc
je
add
ja
test
jg
outsb
les
pop
stc
inc
ret
and
cli
mov
mull
lret
mov
jecxz
fildl
out
push
cmpsb
sub
adc
mov
test
xchg
fwait
pop
loop
xchg
pop
jnp
sub
jno
jmp
and
dec
xchg
dec
aaa
sahf
pop
cli
mov
xchg
xchg
test
mov
sub
or
xorb
leave
bound
outsl
bound
add
fdivr
cmpsl
or
push
dec
out
jae
int3
mov
je
iret
and
int3
or
sti
scas
xor
ss
mov
push
push
mov
xchg
jb
xor
sbb
push
xchg
adc
push
shlb
imul
push
jbe
test
adc
enter
mov
daa
push
das
mov
divl
jmp
mov
xchg
xor
pop
mov
adc
or
push
call
enter
dec
push
adc
pop
add
repnz
xor
sbb
pop
dec
xchg
push
jecxz
inc
push
sbb
pop
sarl
inc
jmp
or
pop
jae
push
ljmp
jno
outsl
push
push
push
dec
std
xorb
lahf
fadds
es
addr16
cld
outsl
adc
fsubl
add
dec
push
push
cwtl
insb
dec
lea
cmp
lret
add
xchg
xor
and
rolb
out
loopne
out
push
jmp
stos
xor
jecxz
dec
inc
pop
popf
shl
lsl
rcl
push
inc
shr
hlt
arpl
addr16
test
xor
adc
orb
push
jle
call
add
bound
aam
movsl
mov
pop
adc
stc
lea
jb
pop
test
nop
dec
jns
loope
add
cmpsl
cmp
inc
or
mov
mov
or
ljmp
cmc
xchg
call
pop
lock
mov
adc
adc
mov
data16
xchg
push
movsb
push
jbe
mov
xlat
lods
add
shrl
xchg
jge
pop
hlt
dec
mov
lret
repnz
popa
scas
arpl
adc
mov
jp
sbb
mov
sub
pushf
add
mov
lock
out
xchg
montmul
cmpsb
ret
cmp
sub
inc
subb
lret
pop
das
inc
test
insl
mov
pop
push
sbb
in
pop
aad
jb
or
xor
jp
lods
xchg
and
icebp
mov
cmp
push
xchg
push
call
repnz
adc
lret
and
lods
rolb
imul
loopne
mov
adc
out
push
daa
ljmp
inc
fadds
and
sbb
sub
je
hlt
push
lret
dec
inc
movsb
xchg
scas
fsubl
addr16
decb
enter
xchg
das
call
push
add
jge
jle
icebp
daa
cmp
movsl
inc
push
mov
shll
push
jmp
xchg
mov
lds
nop
loopne
iret
fs
in
mov
jmp
xchg
mov
or
mov
ja
cmp
xor
fldenv
inc
pop
xor
lret
movsl
fsubs
fistpl
scas
inc
sbb
mov
mov
xchg
imul
mov
scas
pop
das
push
fdiv
in
es
adc
mov
jbe
jno
sub
shll
add
xchg
jge
adc
push
and
clc
bound
test
cltd
pusha
test
push
cs
mov
pop
shlb
add
mov
rolb
ficoml
stc
push
cld
outsl
push
inc
pop
inc
mov
out
shl
cmp
fsubs
pop
xchg
insl
add
sbb
pop
in
sub
cld
scas
lods
out
mov
inc
orl
add
xchg
lea
xlat
das
pusha
jnp
dec
testl
inc
test
adc
lret
out
orb
or
cmp
dec
xchg
insl
repnz
rclb
pop
test
cmp
stos
inc
pop
in
aad
mov
pop
cmp
jl
scas
and
push
cmp
pop
test
dec
inc
sub
int3
mov
loop
push
scas
out
push
xor
jmp
aad
pinsrw
and
into
add
or
jbe
sbb
mov
inc
and
sti
negb
in
pmullw
inc
into
mov
insl
mov
xchg
icebp
xchg
pandn
mov
daa
mov
dec
add
cmpsl
rolb
xchg
jns
pop
stos
ficompl
mov
cltd
push
inc
inc
add
pushf
cli
sbb
add
stos
sub
lret
xchg
pusha
call
add
mov
out
push
adc
in
push
mov
mov
pop
aad
pop
push
jb
sub
jne
mov
dec
push
sub
or
mov
test
pusha
subb
outsb
mulb
mov
add
pop
repnz
mov
inc
push
test
movsb
mov
std
es
mov
mov
popa
sbb
je
cmp
lret
sti
sub
push
aam
stos
mov
and
mov
mov
mov
daa
mov
xor
jmp
sahf
dec
test
imul
sub
jo
xchg
dec
sahf
and
dec
mov
and
ljmp
jne
mov
mov
inc
mov
jl
out
stos
jbe
or
mov
jmp
adc
mov
andl
dec
push
aam
or
pop
lods
jmp
mov
loope
push
nop
cmpsb
add
ja
mov
gs
mov
pop
cmc
test
movsl
sbb
mov
dec
cmpsl
inc
mov
jnp
cmp
lods
xor
fwait
inc
inc
clc
bound
and
clc
add
lcall
cwtl
xor
or
pop
or
or
movsl
loopne
xlat
xchg
mov
in
xchg
push
jnp
sti
cmp
outsl
mov
inc
sbb
fs
or
cmp
cli
mov
cwtl
out
insb
testl
cs
call
cmpb
jmp
sar
adc
out
xchg
jmp
add
inc
daa
xchg
ss
xor
bound
and
add
addr16
lea
mov
mov
fbld
mov
dec
add
outsl
ficompl
inc
mov
rorl
out
inc
movsl
les
aas
outsb
jecxz
or
cld
ss
lret
out
cltd
test
jl
stos
and
dec
rcll
test
bound
shr
adc
loopne
mov
and
nop
inc
cmp
lods
mov
push
js
fcmove
push
out
push
jbe
mov
add
push
movsl
and
jmp
pop
test
adc
js
shrb
sbbb
sub
sbb
sub
add
stc
mov
sub
outsl
stc
fldenv
in
mov
mov
insb
xchg
imul
ret
test
sahf
push
stos
in
data16
in
pushf
arpl
fwait
xor
adc
mov
cmp
xor
jmp
aaa
flds
jle
movsl
inc
mov
mov
jne
pop
out
dec
es
adc
lret
inc
cmc
inc
pop
cmp
and
dec
and
mov
lcall
and
ss
jbe
popf
adc
inc
sbb
aas
push
xchg
loope
les
jb
bound
fldt
jb
lock
push
push
inc
pushf
pop
rclb
icebp
loopne
lds
aaa
push
adc
pop
repnz
and
lea
loop
or
xchg
cs
push
xor
cmc
dec
cli
flds
push
sbb
imul
outsb
sahf
mov
in
in
jmp
or
enter
ret
or
js
pop
xchg
inc
push
lcall
inc
push
sarl
xorb
xchg
mov
cltd
jbe
mov
add
xor
cli
adcb
ret
hlt
push
cmpsb
sbb
inc
pusha
sub
mov
add
fbld
pop
push
mov
cmp
sub
lea
push
add
cltd
jmp
aad
les
adc
rolb
fmuls
lret
js
dec
mov
test
sub
sbb
xlat
push
push
add
xor
push
or
and
push
mov
inc
xor
push
fmull
push
pop
leave
jo
pslld
mov
clc
xlat
push
loope
fistpl
or
cld
jmp
dec
rcrl
xor
ljmp
loopw
imul
ja
stos
leave
mov
testl
ljmp
fadd
or
jl
sti
xchg
mov
addr16
fstpl
std
repnz
mov
sub
add
inc
xor
push
mov
mov
or
repnz
enter
mov
mov
subl
int
or
mov
mov
xor
mov
or
mov
test
mov
sub
call
cmp
fisubrl
stos
xlat
sub
repnz
or
push
pop
pop
cmpsl
nop
and
adc
rorl
add
iret
jo
cmp
lret
dec
sub
call
test
sar
sub
pop
ljmp
iret
cmp
jbe
xchg
mov
ja
int3
mov
addr16
pop
loopne
cmp
lahf
pop
repz
orl
xchg
test
aad
pushf
aas
mov
pop
insb
into
incl
push
xchg
mov
addr16
stc
leave
es
push
sbb
xchg
negb
add
aaa
ret
and
and
jp
scas
sbb
xlat
popf
jmp
call
xor
fwait
test
push
mov
and
push
cmp
daa
add
fwait
loope
int3
in
inc
push
inc
inc
xchg
outsl
in
dec
sbb
test
mov
daa
mov
ficomps
and
cli
xor
sub
inc
pop
lcall
icebp
push
mov
adc
pop
lcall
and
mov
push
push
ja
push
pop
and
mov
mov
pop
xchg
lret
pop
xchg
jb
cmpsb
mov
loopne
ret
inc
mov
loopne
insb
loop
lods
ljmp
xchg
imull
shl
mov
mov
ss
and
dec
fisttpl
inc
jno
push
imul
mov
pushf
pop
lsl
mov
jns
ja
lods
int
lahf
fcoml
test
add
cmp
and
insl
test
pop
adc
pop
add
xor
aaa
mov
cmc
into
sub
push
je
test
fsubrs
std
pop
mov
loope
xor
imull
enter
mov
jae
jne
mov
add
xlat
leave
cmp
arpl
dec
pop
enter
jge
adc
xchg
sahf
nop
sbb
xor
sbb
gs
xchg
jbe
mov
jo
icebp
ja
and
sub
and
xchg
lcall
in
adcb
in
scas
dec
sbb
faddl
sbb
out
int3
or
cld
and
xor
clc
sub
out
xchg
daa
and
xchg
stos
pop
leave
scas
mov
fadds
cli
shll
jg
roll
idivl
jno
lcall
jno
xor
mov
jnp
test
ja
addr16
and
adc
mov
xchg
cmpsb
jmp
adc
sti
and
sbb
mov
xor
or
jg
mov
xchg
push
push
xchg
mov
or
jl
lret
mov
in
fcmovnb
pop
sahf
inc
loope
push
daa
jle
fldl
mov
and
adc
jb
mov
imul
rcll
je,pt
iret
movsl
jmp
out
jbe
jle
dec
mov
clc
or
and
inc
mov
or
loope
pushf
mov
ret
in
add
mov
cwtl
bound
mov
fwait
in
inc
sub
adc
xor
push
jmp
jbe
jo
cmp
data16
mov
push
push
inc
mov
xlat
xchg
adc
lret
cld
imul
rcr
or
dec
rcrl
xor
xor
outsb
push
in
mov
inc
jae
cltd
addr16
je
iret
xor
jbe
cmpsb
xchg
pop
push
pop
inc
jmp
jmp
mov
out
push
fpatan
mov
jmp
into
sub
lret
sub
lea
mov
ss
lock
inc
mov
loopne
ss
push
out
push
cs
push
mov
inc
cld
dec
fcomip
popf
lods
add
sbb
std
dec
add
std
mov
pop
mov
cmp
adc
xchg
ja
jae
adc
xchg
xchg
xor
cmp
ja
mov
bound
fbld
popa
add
out
orb
imull
push
adcb
das
out
sub
leave
popa
mov
cmpsb
gs
pop
stos
pop
mov
iret
iret
lahf
xor
loop
lock
add
adc
cld
push
mov
repnz
rorb
jae
lds
mov
arpl
and
cmp
lahf
fs
out
lods
cwtl
faddp
inc
into
jne
jmp
in
xlat
std
push
inc
and
mov
and
mov
pop
dec
push
into
mov
jno
or
adc
neg
je
fldcw
test
fiadds
test
inc
push
inc
data16
or
subb
xlat
or
sbb
pop
xor
adc
push
stos
push
mov
jae
cmp
ljmp
jb
lods
dec
adc
mov
rol
jecxz
mov
es
cli
push
mov
push
lods
shlb
add
cmp
inc
mov
fadds
je
push
aad
fistl
stos
pushf
and
jg
mov
cmpsl
cmp
push
rcll
rcr
pop
lret
ljmp
jp
xorb
sti
mov
rorb
lods
movsb
movsl
mov
addr16
jg
jo
jnp
cpuid
cmpb
ja
jmp
mov
push
enter
mov
es
fdivs
cli
mov
bound
ret
mov
mov
pop
dec
pop
test
mov
clc
xchg
add
cmpb
cs
test
dec
mov
orl
sahf
pop
jne
cmp
adc
adc
loop
jg
add
push
sub
inc
mov
rorl
hlt
mov
cwtl
xchg
lds
xchg
insl
add
jge
sub
and
inc
bnd
inc
add
test
clc
or
lcall
aam
int3
out
mov
sahf
and
push
mov
test
xlat
test
sbb
push
outsl
dec
sbb
pop
push
aaa
cli
das
repz
fsubs
hlt
cmp
dec
loope
in
test
ret
and
lock
popf
lcall
fildl
sbb
in
sbbl
movsb
outsb
lea
mov
sbb
shll
mov
jnp
cltd
sub
aam
add
sarl
dec
mov
and
sbb
adc
lods
mov
add
fcmovne
jle
out
movsb
std
xchg
sub
cltd
loope
icebp
mov
call
mov
nop
jg
std
fstl
sbb
iret
in
or
lret
aad
cmp
add
stos
xlat
push
scas
mov
push
push
ud1
incl
movsb
xor
jge
into
adc
les
outsl
cmp
mov
out
sub
or
mov
lods
pop
xchg
ret
xor
repz
jo
lock
jne
cmpsl
repz
jmp
rcll
nop
ret
inc
rcr
inc
fsubs
push
mov
pop
fstl
sahf
in
shll
fcmovbe
std
into
mov
sub
stc
shrl
outsb
daa
mov
inc
cmpsb
mov
test
inc
adc
jne
inc
pop
and
imul
xchg
xchg
arpl
fdivrl
push
and
add
or
mull
and
sbb
movsl
data16
fstl
add
aas
push
xchg
pop
repz
lods
inc
arpl
or
or
add
xor
mov
stos
xchg
call
push
adc
loopne
fstpl
mov
xchg
cs
inc
sbb
jmp
add
mov
cmp
lods
cltd
das
clc
ljmp
leave
or
int
loope
add
flds
out
add
stos
in
pop
arpl
mov
inc
sub
shrb
sub
jmp
inc
push
testl
jae
outsb
movsl
test
sub
movl
shrb
mov
and
jnp
das
data16
das
dec
cmp
out
xchg
out
or
push
in
jbe
dec
divb
mov
hlt
mov
jmp
pushf
lock
in
cmp
pushf
pop
test
enter
sbb
lock
hlt
sbb
xchg
inc
mov
mov
pcmpgtd
sub
jle
push
and
es
addr16
movsb
xchg
and
xchg
pusha
pushf
std
sbb
dec
stos
xor
adc
pop
xchg
add
push
and
sub
sbb
sbbb
xchg
movsl
inc
std
or
mov
test
hlt
or
les
or
add
sahf
add
cmp
cmp
xor
les
xor
jnp
out
jle
dec
mov
ja
mov
fimull
push
aaa
mov
jb
pop
insl
mov
addr16
rcll
cltd
test
daa
shll
insb
mov
mov
jle
sbb
ret
xchg
pop
inc
push
jl
sbb
push
mov
aaa
jne
int
call
inc
pop
mov
rorl
lock
jl
rcll
int3
fisttpll
mov
lahf
jbe
aas
call
mov
aas
xlat
fldz
xchg
das
mov
push
insb
jae
jl
xor
push
push
add
mov
pusha
stos
xor
sub
xor
push
lods
or
outsl
sub
mov
enter
add
xchg
dec
and
lock
pop
jne
add
xor
and
xchg
andb
cmp
mov
mov
xchg
sarl
fidivrl
pop
jo
xchg
iret
int3
cmc
jecxz
loope
sub
fwait
push
xchg
adc
das
and
ret
sub
scas
jecxz
pop
xor
ja
mov
ret
cmp
fisubrl
aas
dec
lock
jp
sbb
push
mov
insl
push
stos
and
cmpsl
int3
ja
jb
pop
cmp
inc
les
cli
hlt
mov
fs
pop
int
pop
jae
fisubl
out
push
inc
xchg
add
testb
orb
jo
lea
ret
push
test
jecxz
lret
in
jecxz
int
std
adc
das
aam
push
lods
inc
push
rcl
in
arpl
inc
mov
test
adc
xchg
in
xor
cmpsl
jecxz
push
jae
imul
dec
xor
jmp
cld
xchg
dec
sub
xchg
adc
in
push
testb
out
insl
call
pop
outsb
add
xchg
and
and
push
fsubrs
mov
data16
flds
xchg
mov
sbb
testl
push
mov
push
push
aas
and
fs
in
inc
rorb
and
addr16
add
rcrl
scas
xchg
ret
mov
gs
mov
cmpsb
ds
jle
dec
loopne
clc
mov
mov
pop
push
jb
test
cs
mov
cmc
and
ja
js
mov
mov
movsb
xlat
cmp
pop
cmp
mov
les
pop
push
xorl
or
add
outsl
and
xchg
mov
shl
mov
mov
mov
shr
movsl
dec
xor
jnp
jl
jmp
push
jmp
fsubl
and
aaa
adc
lahf
push
mov
xor
push
cmp
popl
decb
imul
sub
xchg
jae
pushf
push
outsb
lods
inc
pop
fisttps
lods
lods
hlt
es
ffree
dec
pop
bound
lret
mov
andl
pop
outsb
mov
pop
xchg
notl
lea
jo
jmp
notb
dec
scas
std
cmc
lods
cmp
sahf
and
ret
push
push
push
pop
shl
xor
pop
cld
jge
repnz
es
and
cmpsb
jne
jg
mov
call
xor
stos
cli
fistps
and
lods
and
push
push
sbb
fcompl
mov
in
mov
mov
je
jbe
cmpsl
push
loopne
adc
sub
jae
ret
sub
pop
clc
add
sub
mov
jnp
xor
pusha
or
mov
addr16
imul
clc
aam
jne
pop
mov
adc
or
lret
lret
push
mov
sub
mov
inc
je
out
mov
jae
clc
jb
sub
out
jp
dec
push
xchg
push
mov
lds
imull
sub
xchg
jmp
int
and
ljmp
sbb
xlat
push
mov
pop
sbb
aaa
pop
shrb
and
pop
mov
fsub
xor
xor
ss
mov
out
adc
fmull
push
cmpsb
lods
fistpl
mov
push
shrl
dec
scas
mov
arpl
mov
int
adc
sub
int
pushf
cmp
int
ja
js
leave
aam
cmpl
mov
ret
add
imul
imul
jbe
pop
into
test
bound
loopne
sub
lahf
popf
mov
mov
pop
lcall
outsl
jnp
je
xor
pop
xor
sahf
das
jle
ret
das
sub
mov
jge
andb
adc
dec
enter
sub
scas
daa
dec
mov
insl
stc
test
aaa
pop
lcall
shll
fs
mov
aad
sbb
cld
ljmp
xchg
push
and
in
push
push
dec
or
mov
imulb
pushf
sbb
dec
sahf
add
fdivs
pushf
aaa
sub
pop
test
adc
fdivrs
xchg
sub
icebp
or
mov
push
adc
out
or
and
dec
test
jbe
lcall
cmp
sahf
mov
fdivp
mov
adcb
call
mov
push
outsb
push
pop
inc
rolb
ljmp
test
dec
divl
sbb
push
inc
aad
sbb
sub
call
lcall
push
and
iret
data16
in
ljmp
js
fxch
xchg
inc
push
imul
mov
js
dec
mov
sbb
mov
mov
pushf
jp
push
mov
mov
pop
mov
fwait
out
sbb
and
movsl
ret
in
sub
loop
fstl
or
addr16
push
xchg
ss
push
rcl
dec
mov
cmc
sub
es
fwait
add
push
imul
xchg
mov
fcoml
xchg
fsubr
sbb
xor
inc
shlb
xchg
fdivr
adc
out
arpl
icebp
cmpb
jl
lods
jg
mov
pop
test
stos
fstpt
mov
mov
les
sub
clc
pushf
lods
clc
dec
fldenv
int
shl
ja
sbb
insl
bound
push
test
sbb
scas
lret
out
inc
mov
jb
mov
arpl
push
stos
pop
data16
dec
inc
lds
mov
lea
cmp
sti
aam
repnz
ljmp
push
or
rcl
mov
or
clc
sub
pushf
mov
jnp
inc
fsubr
fwait
enter
fsubl
ret
or
into
out
jne
xchg
add
aas
sahf
xorl
and
cmp
or
xlat
adc
xor
addr16
adc
sub
popa
mov
xor
movsl
fnsave
xchg
sbb
mov
jp
sti
sahf
and
sub
sub
pop
es
scas
mov
jns
adc
and
xlat
xor
sti
jmp
mov
ljmp
pop
shlb
out
insb
mov
sbbl
jb
aad
inc
int3
sub
loopne
repz
ljmp
std
cmp
das
and
mov
mov
and
cltd
out
cmpb
jge
mov
inc
mov
xchg
cld
mov
out
xchg
in
je
jl
incl
mov
inc
sbb
popf
mov
pop
nop
dec
inc
cmpsb
push
fstps
into
ljmp
sbbb
cmc
mov
push
lahf
cmpsl
loope
fcoml
leave
and
adc
mov
pop
mov
push
shl
pop
add
rorl
negl
shl
out
adc
cmp
push
jae
pop
or
ds
jae
xchg
mov
stc
cmp
aas
cmp
pop
pop
hlt
cmp
out
mov
mov
pminsw
dec
add
and
sub
xchg
gs
xchg
lret
hlt
sahf
add
mov
mov
gs
lret
enter
rcll
insb
mov
test
aam
dec
scas
sbb
popa
inc
adc
push
jae
dec
iret
imul
ret
rclb
pop
loopne
fucom
subb
lret
jge
loopne
scas
sub
test
loope
adc
xchg
mov
jns
dec
pusha
push
sbb
jmp
xchg
rorb
fdivrp
or
mov
jecxz
mov
sahf
jae
es
in
dec
movsl
mov
lea
es
je
or
adc
aas
repnz
je
out
xor
add
xchg
aam
cwtl
and
pushf
xor
cmpsl
fwait
xchg
mov
cwtl
das
setg
ss
push
pushf
add
fs
mov
stc
add
daa
mov
dec
lcall
pushf
mov
push
fisttpll
int
cmp
sub
sbb
inc
push
mov
add
and
daa
xchg
or
inc
imul
das
push
clc
push
pop
mov
or
adc
cmc
push
daa
outsb
out
std
add
movsb
ja
pop
orl
fcompl
xchg
pop
pop
mov
sub
fcoml
sub
jp
aaa
jo
scas
decl
push
fwait
jle
push
jle
iret
inc
ss
or
xor
lcall
iret
shll
mov
sarl
andb
adc
and
dec
inc
inc
in
inc
stc
or
xor
movsl
stos
pop
xor
bound
stc
in
aad
test
data16
mov
add
pop
mov
jno
in
inc
mov
imul
fmul
and
pop
lds
lahf
test
imul
pop
push
jne
xchg
and
xor
movsl
mov
push
xchg
jle
and
cltd
inc
dec
dec
or
icebp
mov
dec
and
sbbb
push
aam
dec
mov
mov
mov
js
cltd
xor
push
fistpl
sbb
imul
sub
sub
iret
pop
mul
push
mov
adc
sbb
mov
imul
adc
or
add
mov
int3
out
xchg
mov
sar
xchg
sbbl
je
pop
out
mov
cmc
jne
in
imul
jbe
sub
cmpsb
lock
shlb
fcompl
inc
or
scas
cld
repz
faddp
daa
cmp
addb
push
rcr
pop
rcl
or
les
cs
es
popl
roll
loop
jns
cmc
and
dec
adc
mov
and
jnp
iret
mov
rcrl
pop
mov
jecxz
out
adc
adc
or
pop
bswap
cmpsl
mov
test
scas
std
xor
mov
push
mov
jno
jecxz
leave
test
jne
imul
push
xchg
mov
into
mov
or
pusha
and
aas
jge
int
imul
and
shl
mov
clc
cmpsl
dec
mov
loop
pop
jo
inc
fnstenv
ret
sbb
orb
push
in
ss
adc
addr16
and
add
fidivl
das
xchg
rsm
loop
call
sub
dec
or
inc
ds
dec
testl
ja
mov
popf
fstps
daa
or
fisubrl
mov
or
pop
jg
jl
loop
mov
jno
adc
xor
arpl
mov
xor
or
popa
jb
jge
mov
int
cmpsl
pop
mov
lret
xchg
push
imul
pop
fsts
aam
fnstenvs
jp
inc
sub
imul
cli
sbb
mov
push
cmp
punpckhbw
xchg
outsb
mov
je
push
jp
cmp
loop
xlat
mov
mov
xor
push
push
sub
sbb
adc
or
cmpsl
jp
lahf
fdivrs
pop
shrb
popa
mov
shrl
adc
rcrb
push
repnz
popa
xor
mov
in
push
sbb
jg
arpl
inc
pop
addr16
and
mov
das
jns
pop
xlat
inc
adc
sahf
and
or
jb
and
movsb
mov
cmpsb
outsl
loop
leave
movsl
ret
cli
int3
lods
sbb
daa
mov
cmp
ret
sahf
fwait
es
pop
ja
cmp
enter
push
mov
testb
push
add
hlt
imul
int
addb
or
test
xchg
xchg
inc
call
vpcmpgtw
adc
pop
test
bound
sbb
push
lahf
xchg
loope
cmp
jbe
leave
ss
push
xchg
fwait
lret
lds
jle
mov
or
insl
sti
inc
jnp
or
inc
cmp
mov
add
mov
or
mov
pop
jl
xchg
pop
daa
popa
sub
jbe
sub
fidivs
jl
fbstp
cmp
xor
pop
test
xor
xor
nop
jae
in
cs
jns
in
mov
testb
das
xorl
jb
dec
fs
mov
pop
mov
dec
pop
aaa
int3
dec
out
mov
pop
outsl
add
lret
cld
stc
in
ljmp
popf
xor
dec
call
adc
hlt
or
cmp
es
adc
cmp
es
nop
mov
or
xor
in
mov
jae
mov
lods
xor
lahf
jb
je
xchg
xchg
fyl2xp1
adc
cmc
push
mov
sub
dec
push
lods
test
xor
and
mov
rcl
cmp
in
mov
gs
mov
mov
push
bound
sbb
aad
arpl
lahf
sbb
ja
lock
pop
in
lea
fstpt
xchg
mov
sahf
inc
std
jo
sbb
and
or
mov
insl
ja
or
test
pop
inc
enter
leave
jae
cmpl
xchg
rcrb
in
decl
in
mov
push
fisttps
mov
xchg
ja
call
dec
sbb
arpl
test
cmc
mov
mov
add
xor
and
push
aad
add
push
xchg
cmp
addr16
sti
test
lret
sbb
xchg
rolb
movsl
cmp
push
inc
in
stc
ret
mov
jns
test
mov
fbld
mov
ret
lcall
or
std
cmp
xlat
test
pop
fcoml
bnd
test
push
aaa
lods
leave
in
mov
in
call
xor
sbb
or
mov
mov
xor
ljmp
adc
cld
push
aaa
jge,pn
and
push
sub
cmpsb
ret
mov
hlt
pop
lds
pop
icebp
pop
bound
xchg
repz
and
cli
pop
sub
mov
add
lods
lahf
mov
clc
jns
push
rcrl
mov
je
push
inc
cmp
jae
ret
xchg
jno
and
mov
bnd
push
jecxz
add
sub
ret
jle
outsl
sbb
adc
outsl
add
xchg
leave
and
cmpsb
fldt
jl
pushf
lock
lret
and
mulb
push
jmp
pop
jne
rcr
jle
mov
cmp
dec
daa
bound
imul
xchg
pop
cmc
xor
push
jl
dec
push
add
lret
xchg
sbb
push
jmp
jne
fucomip
movsb
mov
pop
jl
test
cmp
mov
scas
fadd
xchg
mov
fsubrl
dec
pushf
mov
lea
sbbb
jmp
sbb
jge
jo
lretw
pop
stc
dec
adc
sub
lcall
adc
mov
rcrb
repnz
test
or
pop
repnz
add
repz
sub
push
sub
mov
repz
xchg
fwait
js
inc
pop
lock
cs
mov
sbb
shr
adc
sub
fdivs
or
popa
sbb
cmp
jb
sbb
or
dec
mov
push
aad
xchg
or
sub
xchg
sbb
cmp
and
aad
xor
push
push
inc
ret
test
xor
push
loop
xchg
and
call
push
mov
movsb
stos
in
popa
cli
sbb
jge
and
minps
inc
mov
xchg
in
xchg
pop
push
out
and
ficompl
or
lret
aam
popf
pop
vmovq
js
jp
inc
cwtl
push
jnp,pn
out
fcompl
jbe
xor
int3
cwtl
mov
pusha
aad
mul
push
sub
pop
loopne
sbb
jb
or
cmp
pop
imul
xor
push
add
les
and
in
jne
icebp
sub
in
push
notb
ss
inc
int
rorl
xchg
inc
push
xchg
test
lret
mov
sbb
lret
pop
lcall
mov
cmp
push
and
xchg
lea
adc
mov
lods
pop
dec
out
lock
js
stos
jmp
sbb
push
or
clc
cmpsl
and
push
dec
enter
sub
adc
out
int
jle
dec
repz
cmp
lea
insb
mov
dec
pop
negb
imul
popa
out
leave
jb
xchg
adc
int
jmp
push
jb,pn
mov
lds
add
addr16
nop
movsb
call
or
adc
lds
adc
mov
or
enter
push
aaa
fcmovnbe
jge
sbb
outsl
inc
xorl
sub
rcrb
mov
xchg
lds
jno
cmc
out
out
xlat
or
inc
dec
dec
aas
clc
jp
xlat
mov
dec
mov
pop
or
pop
push
pop
icebp
push
dec
lahf
push
jge
xchg
sub
xchg
movsb
aaa
sbb
xor
cli
mov
adc
ret
jg
jge
fisubl
mov
xor
inc
dec
pusha
push
cmp
pushf
sbb
cli
cs
fstpt
cmp
out
in
test
mov
add
movsl
pop
mov
not
mov
add
pop
cwtl
das
mov
mov
fcomp
sub
add
mov
jb
loop
ljmp
hlt
ret
mov
daa
jp
cwtl
sub
mov
sbb
imul
pop
es
outsb
aas
mov
loope
fdivrs
mov
pop
insl
popf
jle
dec
pusha
subb
js
jl
xor
xlat
pushf
adc
imul
pop
or
dec
inc
pop
push
out
sub
fsubrl
shl
xchg
arpl
das
xchg
inc
das
addr16
add
test
xchg
test
in
lret
adc
or
daa
sbb
jmp
sub
inc
xlat
push
xor
mov
shl
sub
ss
int3
cli
pop
dec
gs
loope
jbe
loop
ret
lcall
sub
pop
xchg
out
inc
fsubrs
sbb
jp
mov
cmp
adc
sbb
mov
stc
lock
jnp
adc
pop
imul
lods
and
cmp
adcb
add
mov
mov
push
add
xchg
sub
adc
push
mov
flds
rcl
mov
jp
push
mov
adc
mov
mov
lods
ljmp
pushf
dec
mov
ss
xor
rolb
adc
jg
fstps
subl
lret
shll
insb
xchg
js
or
dec
je
cmpsl
xor
fsubrl
arpl
jns
jmp
mov
test
fildl
into
ret
call
mov
and
and
js
cmc
mov
mov
cwtl
movsb
leave
jge
push
int3
sbb
pop
dec
xor
out
incb
push
cltd
orl
sbb
xor
sahf
inc
cli
imul
fdivrs
mov
cmp
inc
mov
fwait
push
sbbb
sbbl
ficomps
daa
fimull
ds
lock
ja
xchg
xor
shll
popa
and
lret
je
pop
fidivrs
cli
lret
jb
insl
add
jp
arpl
rorl
cmp
mov
clc
lea
or
cld
adc
xor
fldcw
xchg
xchg
test
and
or
fildl
orb
popa
mov
test
inc
inc
jns
sbb
pushf
mov
loope
mov
aaa
jbe
add
xor
inc
push
xchg
jae
aas
xor
shlb
inc
lods
mov
or
imul
adc
mov
mov
inc
fnstsw
adc
sahf
xchg
add
test
out
sbbl
pop
sub
push
rcrl
insl
clc
jmp
xchg
xchg
mov
xchg
jle
inc
repz
out
push
dec
dec
jecxz
lods
push
fwait
aam
xorl
mov
xchg
call
add
xor
std
lods
lods
loopne
jmp
xlat
jae
mov
jb
jg
cltd
xor
cmp
cwtl
push
pusha
clc
lfs
push
adc
enter
or
mov
fadds
push
sbb
test
lock
incl
sub
xor
les
int3
scas
cli
and
movsl
mov
ret
pop
add
jno
ja
cwtl
push
popl
filds
movsl
mov
adc
xlat
push
aas
mov
or
fstps
inc
mov
mov
ficoml
xor
mov
pop
into
ficoml
js
jecxz
sbb
loope
ret
cmp
or
xor
lds
jb
out
out
ret
out
xchg
pop
orl
dec
sti
and
out
xor
cwtl
out
icebp
push
or
jp
mov
push
xchg
mov
dec
lret
std
push
or
int
cmpb
mov
outsl
loope
jbe
cmp
xor
mov
xlat
ja
sbb
notb
pusha
mov
loope
mov
push
movsb
daa
jns
jmp
jb
clc
sub
ja
jl
xchg
dec
pop
push
adc
in
arpl
stos
inc
out
dec
test
rclb
mov
and
mov
outsb
aaa
dec
jg
mov
fs
ja
push
bound
lods
mov
outsl
je
mov
mov
mov
test
fcompl
dec
scas
add
cmp
inc
push
lsl
or
xchg
ret
and
dec
pop
xor
arpl
scas
cmp
rol
fbstp
stc
jno
in
lret
stos
xchg
mov
mov
scas
stos
test
dec
movl
add
xlat
insl
orl
mov
jae
call
jl
cmp
cmp
int3
sub
add
push
mov
xchg
lret
addr16
ja
mov
cmpxchg
push
into
xchg
leave
jmp
sub
and
fnstenv
bound
shrb
cmp
test
xor
pop
roll
dec
in
test
adc
sti
sbb
sbb
jg
ds
subl
clc
pop
out
sbb
xor
xchg
dec
lahf
mov
mov
mov
push
cmc
mov
je
push
xor
push
nop
daa
mov
fimull
or
jo
sbb
push
sbbb
sbb
pusha
sti
aam
das
arpl
sbb
ljmp
gs
mov
test
cltd
or
sub
mov
cmp
dec
inc
scas
jb
in
fwait
inc
push
push
and
fadds
mov
repz
add
cld
stos
clc
push
cmpsb
movsb
jbe
jmp
sbb
xor
bound
xchg
shrl
mov
cmp
xlat
adc
adc
pop
mov
or
inc
cwtl
lock
and
mov
ds
ret
filds
cwtl
das
int3
sti
das
or
xor
and
ds
daa
mov
sub
test
lret
js
push
stos
push
stc
nop
inc
cmpsl
mov
add
mov
mov
cld
aad
or
in
imul
mov
xor
out
dec
in
and
or
fsub
cmp
pop
test
lret
and
and
mov
jle
incl
mov
outsb
mov
xor
sub
push
mov
pop
xchg
cmp
lret
jmp
dec
call
xchg
stos
and
imul
jbe
jmp
add
ljmp
popa
cmp
cmp
cld
cmp
imul
dec
out
xchg
cmp
and
and
dec
lahf
jnp
mov
insl
sub
adc
orl
leave
sbb
fsubrs
lret
stc
inc
add
jnp
lods
iret
frstor
add
add
ljmp
sahf
mov
xchg
pop
adc
add
mov
loope
mov
insb
push
pop
rcrl
jnp
xchg
sub
sub
cmp
xor
inc
rcrl
inc
fstpl
xor
jl
xchg
mov
adc
cmp
push
scas
cmp
arpl
insl
sbb
pop
icebp
fisttpll
xchg
cmp
pusha
fst
mov
std
clc
test
sub
add
xor
out
cwtl
push
addl
adc
rolb
pushf
xor
pop
sub
addb
or
mov
push
imul
add
cmp
xor
hlt
pop
scas
mov
and
sbb
cmpsl
jle
mov
add
adcl
inc
and
lcall
test
aad
pop
ss
push
sbbb
notl
dec
movsl
mov
jmp
stos
inc
jae
les
xchg
enter
fnstsw
into
xorb
lret
nop
out
movb
cli
cwtl
bound
pop
xor
hlt
fcoms
xchg
leave
das
xchg
arpl
push
cld
in
ljmp
xchg
fwait
bound
xor
and
fs
inc
pop
out
dec
test
adc
stc
shlb
push
sti
fists
jbe
mov
outsb
andl
xlat
sbb
sub
stos
push
sbb
test
je
sti
push
mov
inc
xchg
test
adc
loopne
add
sbb
and
sub
lcall
xor
mov
dec
fs
out
jno
repz
icebp
push
fimull
sub
xchg
out
push
sahf
sbb
xchg
cmp
xor
mov
int3
mov
shll
mov
cmp
shll
and
cld
lds
and
inc
scas
jne
in
faddl
adc
sub
add
test
xchg
sub
cltd
std
in
xchg
push
and
lea
xor
and
jecxz
inc
shlb
inc
dec
data16
mov
xchg
test
call
fidivs
pop
add
sahf
push
push
lret
cmp
dec
in
cwtl
or
xchg
xchg
dec
pusha
dec
test
push
loope
es
xor
push
push
inc
xor
stc
push
inc
fcompl
adcl
outsl
push
xor
popa
push
push
lock
fs
push
mov
mov
lcall
push
inc
xlat
test
ss
scas
mov
fsubr
mov
insb
sub
les
jp
dec
test
das
jg
fnstcw
push
inc
les
dec
out
add
xchg
push
jnp
xchg
in
xchg
jge
loop
mov
pop
xchg
es
fwait
sub
and
mov
xchg
and
mov
jbe
dec
push
adc
add
pusha
pop
mov
xchg
shlb
and
pop
pop
lock
mov
mov
sbb
in
mov
gs
cwtl
mov
cmpsb
xchg
mov
lock
lcall
sbb
ret
jb
insl
jne
sbb
pop
loope
inc
and
into
imulb
lahf
insl
inc
das
popa
popa
ret
repz
jb
iret
inc
fwait
jbe
mov
sbb
xor
pop
sub
pushf
sti
xchg
rclb
cmpsb
adc
push
imul
stc
adc
into
xchg
dec
mov
sbb
add
aaa
dec
xor
aas
lock
movsb
sub
leave
mov
adc
stos
sub
subb
lcall
push
adc
mov
add
sbbl
and
inc
inc
mov
jle
out
xchg
add
stos
dec
cmp
dec
mov
cmp
adc
addr16
es
test
jo
fnstsw
aad
call
iret
mov
mov
test
shll
jge
jbe
js
mov
test
mov
jmp
movsb
test
push
js
sbb
xor
fcom
test
inc
jns
or
pop
es
fwait
bnd
in
addr16
int
sbb
add
aas
inc
lahf
push
je
test
sbb
divb
add
sbb
mov
sub
xchg
mov
mov
pop
daa
pop
sub
pop
repnz
lahf
jno
dec
jmp
icebp
sbb
jmp
mov
mov
push
fstpt
mov
mov
push
mov
xchg
xor
fs
mov
ret
xor
jge
cld
fxch
arpl
sti
xchg
xor
sub
pop
popf
adc
scas
jno
jmp
xchg
xchg
sbb
loop
in
test
movsb
cmp
jns
fnstenv
pop
mov
or
cmp
dec
cmp
cwtl
aam
lret
aaa
fisttpll
sbb
sbb
fdivrs
sbb
dec
pushf
jge
adc
rclw
mov
pop
jne
out
cmp
xchg
xchg
push
add
scas
jno
pop
pop
add
add
xchg
adc
mov
adc
inc
loop
push
shl
push
push
lods
sbb
and
jno
loopne
and
cmp
mov
pop
es
in
incb
pop
movsl
repnz
xchg
ss
mov
push
jo,pn
and
mov
xchg
test
icebp
je
test
ret
negb
xchg
sub
push
sub
mov
dec
add
shll
or
ror
ret
mov
add
das
jl
inc
int3
mov
xorb
xchg
adcl
xchg
push
shlb
out
mov
insl
cwtl
fs
xchg
loop
cltd
inc
jecxz
sub
testl
jle
shl
jp
push
dec
xchg
movsl
xchg
xchg
mov
jl
or
shll
xor
add
adc
orl
mov
shl
add
out
add
or
add
xchg
ja
imul
pop
push
in
push
mov
out
sti
ficompl
clc
push
mov
dec
idiv
push
or
lahf
repnz
std
add
stos
lahf
add
mov
les
and
sbb
out
sbb
test
jp
out
jo
cs
add
sti
jbe
test
loope
repz
shrb
addr16
pop
push
loop
nop
mov
in
or
test
sbb
mov
cmp
fsubrs
mov
or
enter
mov
push
lock
pop
arpl
mov
loop
mov
or
imul
inc
shl
xchg
shl
jg
mov
dec
out
push
das
lods
adc
jl
fwait
cli
loopne
jmp
xchg
je
cs
je
sbb
les
push
mov
movsl
popa
les
mov
pop
decb
jmp
xchg
test
xchg
sbbb
pop
xor
mov
loope
push
ljmp
jo
dec
inc
outsb
add
adcl
stos
mov
jmp
xor
icebp
mov
fdivs
imul
cmp
mov
ret
nop
mov
notb
cmpsb
inc
fsubrs
push
leave
cltd
or
adc
in
inc
dec
aad
mov
ret
rorb
mov
adc
and
addb
pop
mov
pop
cmp
push
shrl
dec
add
icebp
mov
xor
ds
lret
mov
add
push
mov
sub
je
mov
loop
xor
lds
into
into
mov
jp
movsb
fbstp
push
adc
and
xor
je
jb
cmp
jns
mov
std
shll
into
mov
fisubrs
out
fistpll
push
cmpb
out
sbb
js
mov
pop
mov
sbb
pop
push
cwtl
inc
pop
xor
je
mov
add
mov
jb
mov
push
ljmp
inc
fcom
jecxz
ss
scas
or
push
iret
lret
lcall
xor
shll
jo
inc
aad
xchg
mov
push
sbb
xchg
xchg
or
into
mov
sbb
lahf
lods
rcrb
mov
lock
push
push
hlt
addr16
mov
mov
popa
fidivrs
or
add
xchg
dec
fwait
and
jle
add
xor
test
in
test
lcall
in
ss
mov
int
loopne
out
push
subl
mov
adcl
inc
pop
jmp
mov
cmp
or
pop
adc
mov
dec
sub
xor
sbb
fwait
xor
rcl
jne
mov
ss
mov
mov
insb
ljmp
negl
ss
adc
or
mov
jmp
xchg
sub
inc
popf
xor
mov
fsubrl
xchg
repz
cs
pop
adc
lods
cltd
ja
inc
mov
inc
loope
incl
pop
xor
inc
loopne
inc
sbb
lods
cmp
pop
pop
rcl
mov
inc
mov
cmp
nop
inc
push
push
imul
scas
dec
mov
and
inc
scas
shll
or
int
ficoms
mov
and
rolb
imul
ret
dec
mov
negl
cmp
cmpl
mov
cmp
mov
call
push
out
jg
movsb
in
dec
popa
mov
loopne
lcall
std
pushf
out
xchg
dec
adc
inc
adc
mov
mov
pop
fcompl
dec
std
leave
mov
cmp
cmp
cmp
movsb
loope
push
gs
int3
arpl
push
jne
lods
icebp
ljmp
cmp
sbb
inc
lods
push
jecxz
jl
lea
add
cmpsl
mov
add
ret
xor
fwait
and
iret
addb
jb
daa
sbb
cs
mov
add
std
gs
and
pop
push
js
js
and
push
orps
sub
sbb
cmp
sub
andl
cmp
and
idivl
lret
scas
sbb
or
gs
and
in
jns
xchg
or
addr16
and
jp
push
mov
fld
test
mov
stc
nop
lret
bound
xorb
pop
dec
popf
mov
jmp
push
pushf
adc
xor
in
into
enter
xchg
mov
gs
arpl
xchg
push
jecxz
mov
jb
xchg
scas
push
lcall
xchg
cmp
sbb
sarl
loopne
pushf
dec
pop
cmpsb
mov
mov
pushf
sahf
sub
cs
mov
cs
sbb
cmp
in
pop
lds
or
ret
mov
mov
in
fcmovbe
jns
lret
mov
xor
mov
js
pop
mov
fbld
lcall
popa
pop
movsb
xchg
and
jmp
lods
pop
out
fidivrs
jbe
sbb
movsb
mov
lea
mov
ja
pushf
sub
and
pop
lds
jge
xchg
xchg
in
imul
movsl
inc
loop
and
fidivs
cmovp
dec
repz
push
mov
shr
sahf
add
cmp
mov
mov
xor
cmp
call
insl
add
jno
test
pop
inc
xlat
dec
out
repz
cmc
add
imul
fistpll
and
js
mov
movsb
bnd
dec
add
test
fildll
lds
cmp
sahf
xchg
dec
dec
lcall
sahf
xor
ljmp
and
inc
mov
adc
push
out
shll
mov
inc
xlat
mov
fstps
test
cli
repz
xchg
daa
loop
pushl
or
out
stos
inc
jmp
mov
test
das
imul
int3
mov
and
lea
mov
repz
outsl
stos
sbb
ja
cmp
fstps
aaa
push
mov
sti
xchg
insb
push
add
xchg
xor
stos
inc
inc
lods
sahf
lea
leave
xlat
loope
inc
fcoml
mov
int
insl
sbb
test
ss
scas
addr16
ljmp
ljmp
cltd
add
outsb
or
adcl
xor
ljmp
scas
inc
fsub
dec
adc
adc
adc
mov
imul
pushf
sub
ljmp
jne
shrb
ficompl
daa
popa
jl
pop
loopne
lea
repnz
decb
pop
cmp
adc
fists
pop
jle
cs
lahf
sahf
xor
scas
bound
mov
inc
in
test
or
out
imul
insl
jle
arpl
popf
stos
rcr
mov
push
jg
pop
cli
dec
add
mov
stos
inc
lret
or
leave
pop
jmp
or
jle
pop
sub
lea
mov
cmc
pop
out
dec
ficomps
dec
gs
daa
push
aam
push
lock
adc
lret
addl
or
jecxz
sub
aad
sbb
sbb
inc
inc
add
dec
push
repnz
push
and
rorl
xor
adcb
loop
jecxz
mov
add
das
test
lret
jl
pop
sbbl
js
inc
mov
cmc
sbb
test
in
mov
inc
imul
inc
fildll
push
ficomps
cmovno
dec
lahf
dec
lods
push
imul
inc
or
das
int
cmp
pop
mov
iret
mov
and
cmp
mov
ds
mov
les
testb
in
ret
cmc
rcrb
aam
sub
sbb
xchg
push
cs
lahf
shlb
in
pop
mov
push
popf
or
sub
pop
bound
pop
out
cmpsb
iret
test
dec
xchg
in
int3
leave
xor
pop
or
pop
ja
sbb
pop
sub
movsb
cmp
hlt
mov
mov
les
outsl
and
mov
out
adc
mov
mov
and
dec
add
sarl
jno
adc
pop
test
ss
inc
mov
adc
jl
xchg
inc
mov
adc
lods
jg,pt
frstor
xchg
test
mov
adc
rcrl
das
sub
arpl
jl
pop
sub
popf
cmpb
dec
push
popf
jp
out
dec
xchg
out
jmp
and
mov
add
and
xlat
add
xor
test
cmp
xchg
pop
xor
and
xchg
adc
adc
pop
jo
imul
sub
mov
movsl
add
fcoms
icebp
xchg
fcoml
lahf
stos
shlb
scas
inc
push
movsl
adc
jg
jae
xchg
mov
sbb
push
xchg
or
fmulp
sub
xor
push
int
lods
pop
paddsb
aaa
push
cmp
or
stos
push
jbe
xchg
mov
or
mov
mov
pusha
push
jge
scas
and
push
ret
mov
xor
mov
shrb
ficompl
std
xchg
repnz
mov
testl
scas
push
mov
dec
inc
nop
push
jnp
aaa
mov
enter
sbb
mov
cmpb
sub
mov
jne
xor
dec
arpl
iret
push
push
adc
cmp
in
inc
les
mov
mov
push
imul
hlt
cs
mov
jo
jecxz
popf
sub
loopne,pt
arpl
sub
out
or
or
shr
jge
cli
xchg
push
push
push
or
lcall
rol
out
mov
in
lahf
mov
mov
adc
jne
mov
nop
es
cmpsl
sbb
shrb
movb
rol
mov
fstps
xchg
and
mov
test
test
lds
jmp
test
mov
push
or
daa
adc
fnstenv
push
or
lcall
sub
mov
jle
xchg
jmp
mov
jae
nop
xor
xchg
pop
sub
mov
xchg
in
jo
test
negb
addb
sbb
lods
dec
fisubrl
fists
dec
loopne
inc
or
mulb
xchg
sbb
daa
cmpsb
add
hlt
jo
out
inc
push
push
pop
mov
sub
arpl
gs
outsb
nop
loope
sbb
aaa
call
cmp
jbe
and
rcl
addl
ds
fiadds
adc
addr16
mov
adc
and
dec
and
jo
leave
int3
pop
push
sub
push
jo
out
imul
clc
adc
lods
mov
mov
sahf
mov
in
sti
xchg
pop
das
mov
sub
mov
add
stos
xchg
int3
fistps
jmp
mov
jnp
into
inc
sub
jmp
fbld
push
pop
xor
cli
daa
dec
mov
std
aas
cmpsl
jge
fldenv
fcompl
adc
xor
mov
lret
jmp
clc
push
lahf
xchg
inc
push
and
ss
mov
fs
adc
pop
ja
adc
in
rorl
or
aas
test
pop
sbb
adc
std
sbb
imul
addr16
lods
das
mov
inc
add
int
inc
mov
mov
mov
cld
les
inc
fidivrl
repnz
in
jno
dec
mov
test
aam
push
push
inc
sbb
xchg
gs
lret
lea
mov
bound
fimull
or
cltd
mov
adc
outsb
lea
mov
adc
mov
pop
loope
cs
lret
bound
and
iret
jo
jbe
insb
push
insb
dec
push
mov
pop
stos
xor
test
inc
fwait
sbb
or
jo
fwait
mov
jle
or
sbb
sahf
icebp
lret
sbb
mov
pop
jp
aaa
scas
dec
inc
pushf
lret
inc
jle
scas
idiv
or
cli
inc
xchg
movsb
shlb
jp
jbe
mov
sub
sbb
pusha
inc
insb
jge
cmp
add
pop
loope
cs
popf
xor
pop
mov
ficompl
push
jnp
aas
aad
push
je
xchg
mov
fadds
cmp
or
lret
jb,pt
pop
out
test
and
dec
adc
fistl
nop
and
test
adc
test
pop
jo
cwtl
mov
push
fmuls
stc
inc
rorb
ficoms
rolb
pop
xor
mov
loope
lds
repz
std
aaa
aad
pop
pop
and
adc
mov
mov
ret
imulb
sub
shrb
sub
xlat
lock
incl
addr16
add
sbb
in
jns
xchg
out
xchg
mov
sahf
outsb
test
movsb
repnz
clc
add
sub
leave
stos
jg
mov
leave
or
mov
jnp
jmp
scas
lcall
insb
mov
bound
in
mov
ds
dec
xor
popf
pushf
cwtl
std
cli
movsb
loope
test
fcmovnbe
push
sbb
sub
js
fistps
sbb
mov
sahf
and
hlt
fs
pop
lock
ret
lock
insl
into
xor
rcll
push
sti
pop
cld
jb
out
fists
test
lods
mov
push
sbb
outsl
sbb
dec
loop
out
stos
sub
adc
js
decb
out
scas
lock
rcl
clc
std
jnp
xor
and
jl
cmpsl
out
movsb
aaa
int3
pop
mov
xchg
imul
pop
in
dec
and
cmpsb
clc
xchg
pop
lods
lret
data16
inc
bound
inc
push
test
xchg
and
in
std
jbe
roll
rclb
rclb
cmp
aam
inc
in
cmc
es
out
inc
inc
repnz
flds
or
mov
aas
popl
cmc
sbb
dec
and
jg
pop
cmp
push
or
das
or
lret
sbb
dec
lret
jae
in
fdivp
adc
adc
cmp
adc
iret
loop
or
cmp
jp
ficoml
nop
xchg
add
mov
test
jb
sbb
xchg
int
ja
shll
jge
jmp
sahf
popf
sub
cli
into
gs
jg
stos
push
dec
in
pushl
leave
mov
les
aaa
sub
cmp
ja
cld
and
cmpsb
push
add
insb
push
cmp
in
dec
sbb
pop
or
add
pop
xor
mov
push
mov
jno
std
jle
xor
and
push
xchg
fwait
xor
test
fsub
dec
dec
dec
inc
leave
pusha
xchg
test
push
xor
jl
and
in
lds
fistps
dec
xchg
add
fcmovnb
rcll
dec
fildll
mov
mov
and
xchg
scas
add
sub
mov
inc
inc
std
test
lret
arpl
outsb
in
jg
imul
mov
and
into
inc
mov
lds
jg
rorl
aas
test
test
and
pop
hlt
jae
mov
fists
mov
inc
daa
xchg
pop
jne
dec
or
push
adc
push
mov
lea
mov
enter
jecxz
and
mov
into
mov
mov
mov
cmp
sar
jmp
add
jns
popf
aam
dec
je
repnz
and
mov
in
movsl
iret
rcrl
cmpsl
out
inc
inc
or
cmp
inc
or
cmp
imul
push
test
dec
nop
div
ror
addr16
dec
mov
sbb
mov
daa
lahf
cmp
dec
sbb
leave
test
imul
xor
dec
push
cmpl
push
mov
pop
fdivrs
sbb
jp
pop
mov
add
push
out
mov
or
repz
aas
fwait
lods
clc
push
std
icebp
fidivl
cli
pop
ljmp
push
cmp
daa
push
insb
or
xor
mov
fcompl
movsb
ds
adc
xchg
inc
imul
push
lods
nop
popf
movsl
xlat
mov
xor
sub
inc
fiadds
sub
cld
pop
pusha
rclb
aad
mov
jne
sub
std
test
jp
pusha
xor
mov
testb
jmp
insb
inc
in
clc
in
mov
and
inc
clc
jnp
mov
jle
push
icebp
or
mov
gs
sbb
xchg
xchg
data16
mov
pushf
inc
in
add
cmc
mov
lahf
sarb
or
adc
mov
rcpps
jge
jl
or
sbb
jg
out
fcoms
lcall
adc
jns
lahf
loopne
or
cmp
cltd
test
stc
fisubrs
test
movsb
and
pop
loop
jecxz
pushfw
int
and
aad
int
sbb
sub
sub
or
adc
lahf
or
inc
int
sbb
pop
sub
lds
jle
fiadds
xchg
in
lds
scas
movsb
idivl
jecxz
push
jle
push
loop
inc
adc
ret
arpl
cmp
push
outsb
loope
stc
insb
add
mov
mov
fsubs
inc
or
jecxz
filds
in
ret
sub
fistpl
lret
inc
mov
leave
inc
iret
movsb
test
inc
xor
cmp
adc
jmp
es
int3
xor
mov
sbb
pop
ret
mov
in
sbb
iret
mov
std
push
out
mov
add
js
ss
pushf
adcb
mov
or
fsubrl
add
scas
mov
jbe
fucomp
sti
xlat
int3
pop
xor
aaa
iret
xor
add
shlb
in
xor
out
rorl
ja
mov
jle
sbb
xchg
xor
mov
jno
fistpl
push
xor
pop
jle
push
add
adc
lret
hlt
mov
push
dec
fldt
test
add
inc
out
aam
mov
test
xchg
mov
into
icebp
inc
dec
out
gs
lock
jno
adc
mov
dec
jg
pop
xchg
jg
ror
ror
insb
popf
and
fbld
in
mov
sti
fidivl
loope
dec
rcll
pusha
repnz
sbb
fldcw
mov
xchg
push
mov
push
dec
lock
inc
daa
mov
cmp
cltd
jp
pop
mov
pop
cmp
cltd
sub
jno
movsl
in
in
daa
mov
movsl
mov
jmp
subl
xor
repz
cmpsb
mov
lret
mov
filds
xchg
adcb
icebp
int3
mov
out
mov
mov
cmp
fidivl
movsl
lock
clc
jae
mov
ljmp
fdiv
pop
xor
push
fnstenv
scas
test
xchg
xchg
mov
adc
and
mov
dec
dec
jo
adc
mov
shll
icebp
or
mov
push
inc
pop
inc
sbb
and
add
mov
mov
xor
shlb
andb
push
mov
push
cmpsl
xchg
out
mov
push
cmc
xor
push
mov
inc
cli
lahf
sbb
dec
mov
cwtl
outsl
mov
xor
loopne
mov
and
pusha
cmpl
push
sbbb
pop
push
sub
lods
mov
adc
xchg
or
int3
in
mov
add
xchg
out
fcom
mov
xchg
outsb
jg
and
inc
icebp
push
fistps
sbb
outsb
pusha
fistpl
int3
es
popa
mov
add
mov
test
sub
xchg
push
cli
jne
jp
pop
fidivrs
sbb
scas
sub
push
insl
cmp
in
lret
add
and
mov
mov
jne
fstp
jae
popf
fcoms
inc
jnp
push
loop
dec
dec
inc
sub
mov
sbb
ret
mov
les
and
mov
dec
pop
ljmp
push
dec
call
outsl
nop
fsubr
add
test
sbb
fisubl
aaa
cmp
xor
out
cmp
pop
ret
rcl
adc
scas
scas
outsl
daa
mov
pop
mov
fsubs
sub
fcmove
push
or
mov
cs
lahf
mov
xor
cli
std
nop
hlt
sbb
and
sbb
ja
out
mov
mov
sbb
xchg
mov
pop
iret
mov
and
out
mov
mov
push
jp
aad
addr16
je
in
outsb
testb
out
out
std
leave
push
dec
cmp
xor
popa
ret
jp
cmp
pop
pop
loop
insl
push
push
mov
insl
jnp
mov
popf
icebp
lods
inc
inc
xchg
fwait
fs
andb
popf
mov
pop
sub
push
fld
push
gs
cmp
out
adc
rolb
dec
in
repz
test
dec
mov
xorl
adc
test
stc
adc
and
push
std
mov
cmpsb
jno
mov
adcl
or
mov
jecxz
sbb
pop
push
out
ja
lcall
mov
shlb
enter
jne
and
rcrl
lods
stos
out
push
out
fucom
lret
sti
loopne
jmp
or
sbb
stos
jmp
lahf
xchg
mov
scas
mov
call
lods
jge
cmpl
nop
aad
dec
les
jge
sub
fnsave
mov
push
inc
rcrl
stos
jle
push
mov
dec
jecxz
add
lods
sti
shrl
das
cli
push
stc
popa
xor
test
cmp
lcall
in
add
mov
jmp
or
ss
rcrl
iret
outsl
stc
je
push
aad
test
outsb
add
mov
lea
push
in
pop
in
fldcw
cli
cmc
mov
fdivp
insb
jo
xchg
mov
dec
mov
xchg
hlt
jl
sub
pop
loope
mov
enter
cmpsb
xchg
sub
ja
repnz
push
std
push
mov
adc
lock
cs
popa
int
sbb
orb
xchg
nop
rcll
in
loopne
adc
pop
cmc
xchg
cmp
push
insb
inc
cmpl
push
aaa
mov
and
sbb
jae
pop
jecxz
or
adc
adc
lods
cmp
movsl
std
mov
shrl
cld
or
fidivl
jno
mov
mov
ret
cmpsl
out
data16
call
or
mov
or
test
scas
jecxz
mov
pop
cld
mov
adc
cmp
xor
pop
addr16
push
mov
xchg
testl
push
lret
iret
jle
add
pusha
fstpt
loopne
jmp
cmp
jo
xor
adc
xor
test
jecxz
mov
fildl
rol
dec
int
xchg
push
push
cltd
jecxz
outsl
cmpsl
dec
add
inc
shrl
mov
orl
mov
fdivrs
test
fcmovu
fwait
or
cli
sub
cmp
push
ja
call
push
xchg
pop
js
loope
mov
mov
pop
jmp
sarl
test
imul
sub
push
hlt
pop
ret
inc
sub
out
cs
pop
cmp
add
sub
mov
jmp
sbb
loope
push
inc
outsb
ljmp
push
imulb
data16
dec
int
aas
adc
ret
adc
aam
fwait
nop
daa
or
aam
addl
out
cltd
or
dec
dec
fs
sub
mov
cld
fsubrp
inc
bound
add
inc
fwait
mov
adc
cltd
inc
cs
inc
fldl
add
adc
out
inc
jge
pop
stos
jle
in
jns
dec
in
inc
xorl
push
cmp
lea
sbb
lahf
push
iret
dec
pop
xchg
add
jns
lahf
lcall
not
push
loope
push
testl
jbe
orl
inc
xchg
push
fldcw
les
sbb
in
in
ror
fistpll
xor
aam
xor
sub
test
mov
inc
fldl
push
mov
xor
movsl
imul
mov
movsb
or
cmp
and
dec
dec
fdivrs
js
dec
int
popa
adc
pop
mov
popa
outsb
arpl
jns
xor
addr16
imul
jae
test
push
mov
call
sbb
push
sbb
cmp
xchg
pop
xchg
inc
lahf
gs
cwtl
outsb
fstl
adc
or
cmc
test
jb
xchg
inc
mov
loope
adcl
sub
xorl
jbe
mov
std
or
lahf
data16
cld
push
xor
pop
mov
push
add
loope
xchg
sbb
pop
mov
in
lds
vunpckhps
jnp
mov
into
jae
push
movsb
ja
popf
cli
or
inc
fidivrl
dec
aad
into
sbb
dec
lock
loope
lods
jno
jmp
pop
mov
add
jbe
leave
mov
sub
jge
jns
arpl
sbb
pop
jns
xor
cwtl
movsl
sbb
adc
dec
and
adc
insb
or
sub
insl
xor
xor
cld
cmp
mov
lods
sbb
mov
lea
push
in
mov
push
shr
pushf
inc
popf
xor
scas
loop
mov
push
push
rol
je
repz
xchg
ljmp
xor
enter
or
pop
clc
xchg
mov
pushf
jmp
sbbl
mov
fstpl
mov
insb
aad
jp
ret
adc
jne
jl
mov
lods
cmpps
push
repnz
cmp
add
aaa
xchg
mov
pop
xchg
cmp
add
loope
sbb
pop
jg
nop
push
scas
push
test
and
loop
cwtl
jge
cli
or
andl
fsubrl
mov
aad
adc
xor
mov
ljmp
lock
cmpsl
xlat
sbbb
and
inc
inc
in
out
in
dec
mov
repnz
hlt
push
push
inc
stos
sub
fsubl
xchg
jp
pop
xchg
dec
imul
lock
orb
fistpll
data16
pop
stos
push
loopne
inc
xchg
sub
shll
cmp
jnp
mov
ret
dec
aam
pop
and
inc
sub
ljmp
cmp
dec
fcomps
cltd
jne
jbe
mov
arpl
pop
movsl
sub
cmpsl
insb
inc
fnsave
or
add
enter
daa
fsubrp
cwtl
mov
dec
aam
xor
imull
sbb
adc
lock
dec
lcall
bound
shll
push
lods
or
bswap
pop
hlt
mov
pop
inc
nop
mov
lcall
and
xchg
add
xchg
pop
add
mov
arpl
test
clc
pop
daa
into
xor
je
sbb
inc
ret
and
cmpsb
pop
in
mov
insl
lea
testb
adc
xor
xlat
std
xchg
or
daa
mov
add
xchg
jmp
jg
and
aaa
dec
cli
jl
sbb
jl
jl
mov
push
mov
repnz
inc
mov
bound
xor
sbb
loop
pop
push
inc
dec
out
mov
std
aaa
inc
mov
fsubrp
sbb
shrl
pop
out
std
dec
loop
aaa
or
orb
xor
adc
mov
stc
push
into
gs
sub
mov
mov
ficoml
scas
orps
int3
xlat
cs
cmp
into
jno
orl
adc
into
gs
mov
loopne
fwait
sub
and
in
mov
ret
adc
inc
stos
add
nop
lcall
add
cwtl
push
sub
popf
mov
xchg
cmpb
aam
and
pushf
push
sbb
out
bound
lods
jb
test
sub
cs
lahf
sbb
adc
xchg
mov
jns
das
cmp
insl
push
in
mov
movsl
jle
xchg
aad
sbb
int3
lret
jb
orb
sbb
mov
leave
int
imul
mov
gs
cwtl
jbe
in
test
lahf
fcmovnu
lock
sbb
lods
pop
dec
sbb
push
inc
adc
pop
int
cmp
pushl
push
adcl
push
push
add
stos
sub
imul
pop
mov
xchg
test
ja
xor
sub
inc
push
mov
sub
push
or
lea
lret
adc
xor
mov
pavgw
lret
lret
ja
ljmp
pop
push
or
pop
dec
std
jb
add
push
test
dec
pop
sbb
nop
push
dec
test
xchg
and
jp
mov
jle
push
add
sub
insl
pop
and
xchg
jmp
cld
inc
add
jp
lock
lret
sbb
inc
inc
push
loope
inc
in
shrl
bound
jae
mov
adc
test
xchg
cmp
and
jle
adc
mov
out
in
jmp
mov
add
inc
stos
cmp
pop
repz
sub
cmp
ret
xchg
or
mov
lods
lret
fldcw
sbb
and
addr16
insl
mov
ret
sub
pop
push
xchg
jne
xchg
adc
mov
fs
nop
pusha
int3
stos
dec
roll
cmp
xchg
adc
jmp
out
pop
pop
movsl
out
ja
pusha
mov
rclb
sbb
jo
dec
xor
movsb
lret
repz
mov
stos
jp
xchg
pop
add
and
add
sbb
xor
fisubs
mov
sti
bound
inc
fdivr
mov
das
add
fs
pop
cmc
pushf
xacquire
push
and
jo
push
xor
idivl
jle
sub
mov
sahf
xor
pushf
fildl
repnz
jp
push
fsubrs
ret
das
jnp
dec
lods
and
repz
ss
add
test
and
dec
outsb
inc
mov
test
es
nop
pop
in
xchg
push
mov
fcomps
jecxz
adc
mov
sbb
or
mov
rorl
in
orl
scas
or
or
int
adc
hlt
enter
adc
add
ds
je
inc
pop
mov
shl
jg
add
adc
push
sub
test
fcompl
dec
pop
cs
sub
mov
jmp
sbb
push
icebp
rorb
loopne
push
mov
or
pop
xor
xchg
mov
adc
xchg
sub
dec
jge
mov
cmp
jecxz
rclb
loop
inc
cltd
jmp
imul
xor
sub
mov
xchg
rol
popf
push
xchg
xor
cmp
sbb
cmp
test
mov
jl
xchg
int3
fs
cli
into
fdivp
nop
or
mov
fisttps
cwtl
fbld
mov
dec
fcmovu
shrb
mov
cmp
rorl
ret
push
pusha
sbb
lahf
testl
xorb
nop
jae
out
cmc
leave
subb
dec
mov
fstl
imul
sbb
fimull
into
inc
pop
mov
arpl
js
jb
lds
sbb
sbb
sbb
adc
fs
insb
add
add
insb
icebp
mov
insb
mov
fwait
mov
or
jle
jmp
jl
adc
loopne
push
mov
dec
push
mov
cmp
push
ret
aaa
loopne
cwtl
test
inc
and
subb
sbb
mov
sub
pop
cmc
pop
pop
out
sub
cmpsl
cmp
push
dec
imul
call
mov
ss
js
rorl
jmp
ficoms
fwait
xor
ja
jae
aad
rcr
jno
leave
subb
adc
dec
dec
add
pushf
sbb
push
es
loope
cli
adc
add
das
cmp
dec
movsl
cmp
inc
cltd
or
ret
inc
inc
mull
movb
testl
je
shrb
and
push
push
std
xchg
cmp
pop
sbb
stos
cltd
cmp
sar
andb
test
pushf
adc
adcl
fstps
jp
jmp
mov
push
out
or
or
add
sbb
scas
adc
sahf
ret
push
dec
sti
jg
shlb
dec
rorb
xchg
lret
mov
mov
loope
imul
pop
cltd
stc
je
test
dec
cmp
call
pop
cmp
out
mov
andl
shlb
pop
push
mov
inc
lret
sub
enter
test
dec
loopne
push
insl
dec
adc
push
pop
inc
outsb
mov
ja
sub
or
mov
dec
icebp
std
aad
mov
shrl
fadd
xchg
push
imul
xchg
adcl
mov
pop
dec
jnp
in
stos
inc
mov
pop
mov
jmp
pop
dec
cmpsl
or
xchg
pop
add
repnz
aas
ss
incb
or
aas
jecxz
in
sub
and
sbb
dec
frstor
mov
and
aad
cmc
jnp
add
leave
pop
pop
pop
fsubs
fsub
add
lods
xlat
cli
cmpl
mov
data16
jo
pop
mov
aaa
jg
imul
stc
lahf
sub
xchg
dec
sbb
sbb
sub
and
xor
jns
test
rcrb
stos
mov
outsb
sub
fisttps
mov
lock
push
jae
mov
cli
xchg
insb
jmp
sbb
pushl
mov
leave
jl
jae
frstor
mov
jmp
rorl
mov
aad
push
ret
inc
pop
xchg
xchg
ljmp
test
fwait
inc
jmp
and
inc
shll
sub
mov
fidivrl
pushf
fcomp
out
push
inc
mov
xchg
cmp
jge
leave
fmul
test
icebp
mov
sar
nop
fisubrs
sub
jl
xchg
jns
mov
mov
and
mov
clc
sahf
xor
fucomip
jg
loop
and
xchg
ss
xor
gs
outsb
cltd
cmpb
and
sbb
add
not
imul
xorb
sub
sarl
inc
xchg
push
inc
arpl
ret
mov
xchg
fists
mov
mov
cmp
and
aaa
jp
and
sbb
push
jno
fldt
rol
pusha
mov
xlat
cs
out
les
xchg
es
xchg
dec
scas
ret
jg
shll
adc
and
sbb
inc
js
lods
imul
fldcw
pop
jae,pn
insl
int
jno
jge
hlt
mov
sbb
adc
insb
std
les
sbb
fdivrl
cld
shr
data16
repz
push
mov
jp
mov
arpl
pop
xchg
mov
add
subl
stos
mov
sub
push
mov
fidivrl
pusha
lret
mov
xchg
push
mov
mov
dec
test
cmc
shlb
mov
ret
xor
sbb
pop
arpl
es
jmp
push
sbb
mov
mov
adc
in
mov
push
cmp
push
jo
repz
dec
push
dec
pop
fst
call
and
faddl
mov
xchg
sbb
rol
iret
mov
call
pop
cmp
pop
mov
xor
push
xlat
paddsw
int
adc
jmp
shrl
cmp
and
push
or
mov
mov
adc
loopne
icebp
xchg
movsl
or
or
sub
dec
fildl
mov
inc
aaa
fs
es
ficoms
and
jnp
inc
popa
push
pushf
push
add
mov
dec
mov
decb
lea
pop
xor
scas
cwtl
lea
cmp
pop
stos
outsl
out
stc
push
xchg
pop
mov
inc
adc
jo
adc
mov
fwait
pop
mov
movsb
dec
jmp
test
out
sti
push
fwait
add
pop
xlat
addr16
loope
fisttpll
lret
and
mov
mov
cmp
nop
ja
inc
clc
push
test
ret
adc
loopne
sub
add
mov
out
hlt
xchg
and
ds
push
fwait
loope,pn
pop
cmp
adc
clc
cmp
mov
push
xchg
xchg
xchg
mov
stos
out
lds
testl
insl
cwtl
imul
lcall
and
mov
cmp
or
andb
test
shlb
dec
popa
xor
lret
pop
xor
outsb
push
les
push
mov
pop
add
mov
mov
testb
test
fxch
mov
add
ficomps
stos
mov
cmpsl
push
mov
pop
mov
imul
cmc
es
add
push
fcoms
test
and
hlt
mov
sarl
rclb
push
js
jmp
aaa
mov
loopne
add
jno
shlb
aam
pop
push
aaa
pop
filds
cmp
xor
push
mov
push
xor
icebp
cmp
inc
nop
xchg
mov
push
adc
lea
jl
dec
mov
imul
stos
push
decb
leave
scas
mov
lret
dec
add
sbb
adc
mov
cmp
sub
fdivs
repz
or
dec
testl
mov
aad
shlb
and
sbb
insl
add
rorb
jno
call
cmc
int3
repnz
sahf
fisttps
leave
cltd
mov
adc
in
pushf
pop
ja
mov
mov
cwtl
cmp
push
loopne
mov
cld
imul
loop
call
iret
gs
sahf
dec
push
push
mov
sahf
push
lock
int3
fiadds
rol
adc
mov
jns
adc
pusha
push
sub
outsb
jo
push
add
adc
dec
outsb
mov
fcomps
je
out
jbe
fidivrl
arpl
inc
jge
jmp
xlat
sbb
pop
clc
or
push
mov
cmp
lret
cld
add
push
out
mov
sbb
movsl
cmp
bound
inc
push
sub
pop
lcall
movb
lcall
sarl
mov
add
movsb
pop
xchg
call
je
sbb
jmp
cmc
test
or
cli
inc
in
mov
jb
loope
in
test
fsubs
cld
push
mov
pop
and
incb
and
es
incb
and
addr16
mov
shlb
ds
dec
push
fstl
inc
pop
add
mov
mov
lret
in
daa
sub
gs
xchg
test
cmp
addl
in
lret
mov
xor
pop
ffreep
icebp
or
add
scas
xor
sbb
shrb
sub
sub
xor
push
repz
mov
dec
pusha
int3
outsb
mov
pushl
scas
imulb
add
popa
ss
mov
orb
or
stos
daa
outsl
stos
sbb
jg
mov
dec
fiaddl
cmp
rol
iret
jge
lcall
in
jp
sub
mov
add
jo
js
scas
and
test
in
add
nop
xchg
stos
mov
les
imul
or
dec
cmpsb
mov
imul
dec
out
test
mov
repz
mov
xchg
xor
in
inc
push
pop
xchg
or
test
sub
mov
jnp
fwait
jo
push
mov
mov
xchg
sub
ss
addr16
pop
mov
fists
test
out
paddb
mov
cwtl
outsl
clc
lods
call
pop
pop
insb
pop
pop
or
sub
repnz
mov
enter
xchg
ret
push
cmpsl
out
test
mov
add
lcall
std
out
cmpsl
test
ja
mov
and
inc
dec
in
mov
out
in
insb
imul
or
mov
cmp
ds
lods
lcall
xlat
sbb
xlat
aad
in
andl
popf
movlps
cmovbe
mov
addr16
cmp
mov
jb
or
pop
into
scas
inc
push
in
out
jbe
cmp
push
cmc
jo
mov
jecxz
sub
js
subb
mov
pop
inc
lahf
sub
push
leave
pop
hlt
mov
jp
adc
jno
lahf
push
js
fwait
clc
int3
out
jecxz
xchg
mov
fisubrs
inc
push
nop
in
je
je
testb
lods
addr16
fldl
test
into
jo
add
adcl
cmp
cmp
xchg
sub
aaa
push
mov
es
stc
nop
test
enter
imul
subb
jb
mov
ds
in
rol
outsb
stos
pop
hlt
daa
insb
stc
or
jnp
insl
test
and
inc
inc
sti
mov
outsb
and
pop
jno
xor
sub
xchg
mov
mov
mov
cmp
negl
dec
jg
js
jnp
loop
in
jmp
fistps
fisttpll
fldt
movsl
dec
and
in
inc
and
dec
lahf
or
fwait
jbe
insb
outsl
ret
fprem1
jecxz
insl
add
add
idivl
add
xor
cmp
inc
xlat
mov
mov
or
daa
sahf
push
push
pushf
push
fiadds
lcall
fiaddl
into
push
dec
xchg
enter
xor
ret
cld
int3
xor
inc
ret
push
pop
outsl
ss
hlt
adc
and
push
jmp
mov
out
mov
dec
inc
push
xor
aas
mov
pop
out
cmp
sbb
pushf
in
imul
xchg
xchg
mov
mov
jne
sub
push
pop
stos
jmp
das
sub
lret
dec
lods
adc
xchg
xor
scas
mov
fidivrl
inc
or
hlt
xchg
imul
cmovne
ja
mov
mov
inc
pop
inc
push
mov
cmpsl
fists
pop
jne
das
int
popa
xchg
roll
mov
mov
imulb
add
cmp
fs
sahf
in
fwait
into
cmp
fmull
xor
adc
sbb
cld
out
enter
or
mov
movsl
std
aad
cwtl
pop
and
xor
adc
xchg
or
int
pop
movsl
add
jo
fsubrl
mov
test
rol
insb
aas
dec
mov
mov
daa
cli
vpshad
icebp
gs
addb
lret
je
and
jp
inc
rol
jne
cmp
shrb
pusha
dec
sub
pusha
filds
jmp
adc
std
mov
jo
arpl
mov
cltd
push
test
iret
in
xor
sub
stos
stos
nop
imul
pop
lock
sbb
shrb
movsl
add
add
std
sti
aaa
adc
push
inc
test
sub
outsl
xor
cmp
or
or
in
push
sbb
icebp
dec
cmpsl
aad
mov
jne
sub
daa
mov
jo
lcall
jg
dec
cwtl
xchg
jno
mov
ja
stos
pushf
lock
sbbl
xor
fsubl
or
insb
push
xchg
addr16
sub
xchg
in
lret
adc
hlt
bound
jnp
outsl
jnp
adcb
lods
incl
or
cmp
loop
nop
imul
lock
and
repnz
xchg
lahf
shrb
out
and
mov
stos
jg
cmp
jmp
ja
jo
out
bound
addb
imul
fwait
jo
pop
xchg
push
mov
dec
in
daa
icebp
dec
inc
fcmovnbe
sub
adc
rorl
dec
rclb
mov
pop
arpl
movsl
insb
or
sarl
fisttpll
repnz
mov
ss
add
pop
sbb
scas
lcall
mov
mov
std
int3
repnz
inc
or
pop
lods
pop
inc
icebp
push
xor
stos
xchg
lahf
inc
add
add
pusha
data16
sub
ja
popf
outsb
pop
pop
nop
xchg
ss
subb
dec
cltd
ja
enter
nop
imul
lock
punpckldq
loope
vmovaps
mov
rol
mov
repz
dec
mov
push
mov
jno
clc
adc
push
stos
fildll
xor
jo
leave
and
loop
arpl
out
xor
ljmp
cwtl
sbb
lea
fimull
dec
lahf
pop
or
push
push
in
es
hlt
loope
xor
faddl
mov
movsb
adc
mov
mov
fnstenv
in
mov
lods
cltd
jae
out
daa
cld
jne
push
test
lock
xor
loopne
pop
outsl
nop
imul
lock
jg
mov
sub
add
out
mov
push
mov
mov
mov
enter
sbb
aaa
lahf
out
dec
jmp
in
stos
in
out
roll
cltd
stos
ficompl
jne
push
fstps
lods
test
dec
mov
push
in
add
inc
mov
mov
lds
out
roll
arpl
outsl
push
xor
adc
xlat
mov
dec
mov
inc
lock
push
or
into
int3
lock
sbb
cmpsb
cmp
inc
jg
cmp
mov
test
dec
jmp
hlt
test
ds
outsl
ret
push
jl
mov
ret
fnsave
ljmp
xor
aas
adc
pushfw
pop
out
dec
stos
and
adc
lock
add
xchg
pushf
cvttps2pi
pop
xor
lock
inc
js
cmpsb
push
push
jecxz
adc
cmc
mov
or
mov
inc
pop
inc
mov
push
xchg
mov
xor
stc
adc
mov
pop
mov
daa
outsl
cmp
xor
sub
mov
mov
cwtl
fwait
pushf
jp
into
pop
inc
decb
sub
sub
push
insl
inc
push
sbb
mov
or
xor
outsl
mov
adc
adc
push
mov
lret
adc
mov
int3
ret
ja
jecxz
push
push
sbb
add
dec
adc
in
sbb
and
xchg
imul
shrl
mov
cld
dec
pushl
xchg
or
sbb
daa
mov
adc
cmp
push
fnstenv
dec
pop
sti
jbe
loope
xlat
adc
test
icebp
jecxz
push
insl
or
sbb
stos
adc
movb
out
push
loopne
push
popa
xchg
push
out
gs
call
fdivl
push
das
inc
xchg
sub
fwait
negb
mov
add
test
and
add
mov
mov
cmp
out
jl
jb
dec
sbb
mov
or
and
gs
add
xor
pop
aad
xchg
cmp
pop
stos
imul
cmc
mov
mov
add
ja
inc
pop
loope
or
sub
out
push
hlt
fisttps
dec
push
jge
dec
in
jp
or
fildll
cmpsl
nop
mov
test
jno
cld
jle
adc
je
sbb
aaa
dec
fdivs
inc
mov
test
push
dec
add
xorl
jge
xchg
mov
outsl
pushf
pop
xor
mov
sbb
sbb
andl
xor
mov
sub
cmp
arpl
sbb
and
adc
dec
and
or
bound
mov
inc
inc
sbb
mov
jl
xor
dec
ficompl
sahf
jb
je
jp
and
icebp
ljmp
jle
push
test
pop
push
inc
flds
popf
jns
aad
inc
ret
enter
dec
lret
fisttpl
andb
mov
jl
inc
inc
pop
es
ljmp
or
cmp
ss
int
lcall
gs
bswap
fs
imul
test
push
ljmp
jno
cwtl
mov
icebp
jns
aaa
stos
adc
xor
xlat
inc
jge
jne
sahf
xor
jecxz
xchg
xor
popa
mov
jns
dec
test
add
push
loopne
jle
ja
iret
lea
add
enter
or
dec
inc
jns
push
push
xor
mov
adc
gs
push
mov
push
lea
sbb
cmpsb
aam
popa
xchg
dec
adc
add
xor
movsb
cmpsb
dec
mov
add
and
push
pop
jnp
fadd
mov
out
fwait
jmp
pop
shrl
jle
pop
js
nop
stos
jp
mov
scas
pop
icebp
and
pushf
xor
lds
mov
adc
leave
mov
lds
adc
mov
sarb
in
icebp
cli
dec
outsb
call
adc
add
fcmovnbe
adc
jg
out
ja
mov
sbb
or
cwtl
nop
les
cwtl
hlt
jmp
add
mov
int
mov
es
sbb
add
sbb
xchg
inc
insb
dec
movsb
lock
sbb
repnz
pop
push
sbb
insb
inc
adc
mov
je
mov
in
sbb
daa
mov
jae
and
pop
push
sar
sub
xchg
sub
or
or
mov
add
iret
dec
xchg
daa
sbb
aas
xor
sbb
xchg
les
lods
mov
or
mov
dec
in
sbb
mov
jl
repz
out
test
dec
or
ja
test
scas
shlb
fnsave
imul
push
jbe
sbb
mov
cmpl
std
pop
cmp
add
jo
jp
pop
adc
das
mov
cmp
jecxz
ds
call
outsl
loop
cmp
sbb
sti
andl
sbb
sbb
cltd
test
push
xchg
in
dec
mov
call
movsb
xchg
outsb
cmpsb
push
repz
lds
leave
pop
sbb
dec
sub
out
out
cltd
idivb
add
ret
ss
adcb
xlat
dec
push
push
inc
jmp
xchg
jmp
mov
or
jl
pop
fildl
mov
es
sub
sbb
ret
inc
mov
push
fildll
jne
shl
cld
adcb
inc
jnp
dec
cmp
shlb
out
add
xor
insb
bound
outsb
outsl
and
mov
into
test
in
jo
jnp
dec
fwait
out
inc
pop
lods
push
mov
xchg
add
jae
in
jne
lret
xchg
add
mov
fsubl
out
gs
stc
xchg
add
inc
and
pop
ret
leave
lcall
fs
jne
inc
stos
mov
sbb
notb
daa
clc
xchg
dec
out
int
sarl
mov
sbb
or
dec
out
cmpsl
call
or
clc
cmp
std
cltd
and
mov
cltd
jno
test
and
mov
into
pop
aaa
adc
mov
dec
imul
xor
and
test
jecxz
pusha
lret
jae
stc
nop
push
call
pop
cli
ljmp
jmp
fnsave
fimull
push
jne
lret
sbb
cmp
cwtl
mov
sbb
das
cmp
cmp
pop
dec
inc
leave
add
push
xchg
xor
aas
loopne
pop
sbb
cmp
aam
movsb
cmp
js
adc
jae
xchg
sub
xchg
dec
out
xor
pusha
call
or
arpl
leave
cli
sti
ja
sbb
xor
mov
fisubrl
mov
pusha
and
ss
mov
xorl
shr
adc
sbb
shld
fildl
add
out
dec
lret
bound
js
pop
aaa
jo
std
std
mov
xor
pusha
ljmp
mov
add
dec
jno
stc
mov
daa
lcall
cmp
xor
daa
decl
xor
add
mov
negl
sbb
adc
mov
aad
and
xchg
je
inc
repz
jle
fcoms
dec
jmp
and
jge
adc
cmp
mov
sbb
mov
scas
sarb
lret
fistps
sub
cltd
sbb
xchg
or
mov
mov
mov
rcll
cld
ja
sarl
adc
mov
cmpsl
xchg
out
pop
call
or
ja
push
jno
ret
xor
xchg
fs
mov
xchg
mov
adc
insb
push
and
lods
lea
sbb
aas
movsb
pop
in
pusha
negl
aaa
push
push
mull
sub
cmp
jb
fldcw
adc
cmpsl
mov
ret
arpl
xchg
mov
or
cmp
mov
sti
cmp
or
sti
push
pop
dec
dec
or
mov
lret
pop
js
pop
dec
leave
test
mov
data16
jo
sarb
jg
mov
push
fidivrl
testl
cmpsl
inc
mov
and
aad
and
jg
int
ja
sbb
andl
mov
cwtl
push
test
icebp
adc
stos
popf
lret
jbe
adc
jmp
call
xor
fsubrp
jle
adc
pop
sarl
add
ljmp
jno
shr
jp
pusha
cmp
push
or
dec
xor
stos
add
mov
mov
enter
pop
jmp
test
cmp
les
test
ss
or
cmp
xorl
mov
cltd
lock
adc
imulb
nop
pop
xchg
sar
mov
std
push
sbb
jg
out
add
jnp
and
cmpsl
cmp
pop
xor
or
mov
add
or
fcmovne
movsl
dec
cmpsb
pop
add
out
roll
mov
inc
nop
pop
inc
cli
dec
cmp
dec
ret
jge
jg
dec
loop
xchg
imul
lods
push
or
pop
shrl
add
leave
aad
cli
xchg
pop
jl
testl
mov
inc
mov
ja
outsl
cmpsl
xorb
leave
testb
lea
subl
pop
sub
inc
sarl
xlat
jmp
fnstenv
push
xchg
lds
clc
adc
daa
mov
fs
outsb
shlb
lahf
jl
inc
sbb
andl
int
mov
fnstsw
enter
pop
or
mov
add
enter
test
inc
push
or
mov
dec
push
cs
xchg
inc
jle
push
out
inc
sub
xlat
pop
das
loopne
inc
scas
sbb
and
push
imul
add
xchg
icebp
inc
pushf
cld
lcall
in
inc
rolb
pop
rol
nop
testl
adc
mov
xor
xor
push
repnz
ja
ja
dec
jmp
or
jge
mov
jle
adc
mov
mov
loopne
or
mov
shl
dec
xchg
cmpsl
xchg
jge
les
sahf
sbb
mov
pusha
lret
mov
cmp
test
jno
xchg
dec
movsb
pop
idivl
mov
setle
stc
aaa
push
inc
mov
lahf
cmpsb
clc
dec
pop
sbb
mov
pop
push
mov
pop
ljmp
xchg
xor
out
cmp
ret
cmpsb
aaa
in
sub
jge
stc
and
jae
int
mov
in
test
popf
push
inc
pushl
sbb
aaa
mov
mov
icebp
nop
or
call
mov
lret
jge
or
test
and
lahf
adc
adcb
mov
dec
imul
xchg
xor
pop
xor
das
scas
jb
iret
dec
jmp
xor
sub
push
mov
cmpb
mov
push
lock
int
dec
aaa
inc
addr16
stc
lret
movsl
shrb
add
popa
vmovd
xchg
mov
cwtl
mov
mov
xchg
mov
sbb
push
movsl
insl
cmp
out
or
fiaddl
cmp
dec
and
aaa
lods
mov
popa
sahf
inc
insl
jno
adc
jb
hlt
test
dec
rclb
jl
mov
xor
xchg
lock
rcll
aaa
into
add
push
push
sub
rcrb
ja
dec
adc
lea
push
cmpsl
ds
pop
shrl
sub
xchg
test
inc
inc
inc
hlt
les
mov
cli
lahf
jne
push
outsb
pop
sahf
mov
out
sbb
jno
add
outsl
pop
jg
enter
jno
fsubs
int
in
sbb
pop
in
nop
sub
out
sarl
push
jg
es
adc
les
movsl
adc
jb
mov
jge
bound
or
pop
repnz
cmp
push
repnz
mov
popa
mov
pop
call
iret
mov
xor
xchg
ret
jno
fildll
leave
mov
outsb
mov
scas
push
cs
stc
jae
sbb
or
add
jb
scas
lret
dec
xchg
test
lods
ja
clc
and
test
inc
adcb
sub
das
les
cmpsb
dec
pop
cmpb
or
es
xchg
inc
sub
ss
push
or
xchg
sbb
add
stos
add
xchg
dec
dec
or
and
mov
cs
sub
test
push
in
rorl
xchg
and
and
pop
mov
shrl
int
or
movsl
mov
cmp
leave
xlat
adc
movsb
sub
cmp
aas
mov
adc
xchg
imul
inc
mov
and
cmpsl
mov
cmp
in
push
jmp
inc
cwtl
push
lock
jg
xor
adc
and
imul
sbb
mov
or
add
jl
gs
mov
movsl
mov
loop,pn
adc
add
das
xchg
xchg
inc
cmpsl
mov
push
call
ret
sbb
test
test
out
cmpsb
nop
xchg
ret
and
fwait
push
lock
cmp
pop
push
cltd
cmp
push
sub
outsb
pop
scas
push
cs
nop
add
mov
jl
jmp
fisubl
pushf
push
jecxz
jmp
dec
dec
add
es
movsb
push
das
mov
xlat
adc
and
bound
roll
pushf
or
ret
jecxz
subl
xchg
jl
call
fimull
mov
jbe
cmp
mov
pop
jge
movsb
cld
loopne
ret
cli
ja
filds
fucomp
stc
into
test
ja
push
sub
cmp
mov
or
adc
cmp
push
sub
fisttpll
stos
mov
ja
mov
mov
cld
lcall
jne
gs
pop
out
add
xchg
and
mov
fnstcw
and
int
pop
pop
jb
roll
cltd
or
lret
inc
repnz
mov
mov
data16
shlb
jne
jns
mov
sti
imul
mov
lret
mov
mov
add
addl
sbb
cwtl
in
enter
cs
xor
cmc
jge
pop
das
repz
lret
mov
jns
or
lret
test
push
adc
movsb
cwtl
cwtl
sahf
iret
out
dec
jns
idivb
xor
sbb
ficomps
daa
cmpsl
fsubl
or
cmp
adc
inc
leave
jno
inc
pusha
ljmp
les
insb
sarl
sbb
or
xchg
push
daa
outsl
lret
adc
add
adc
xor
xor
cli
xorl
jmp
sbbb
cmp
sbb
jnp
xlat
mov
shll
faddl
lods
mov
adc
sbb
stc
xor
mov
push
pop
sahf
lret
lcall
mov
dec
xlat
push
outsb
jg
xchg
and
add
pop
adc
loop
jp
jb
cmc
dec
pop
sub
inc
xchg
sub
sbb
test
hlt
dec
loop
hlt
or
test
cmp
mov
inc
or
rolb
div
xchg
lods
sub
lea
pop
xchg
stos
push
jmp
xor
and
inc
mov
jmp
add
enter
jmp
imul
jb
int
out
cmpsb
cmp
and
in
mov
ret
mov
push
cmpl
data16
inc
sbb
or
out
xchg
mov
xor
push
sti
inc
cwtl
sbb
jne
imul
pop
testb
pop
lock
sub
pusha
adc
xor
xor
or
push
in
orl
or
dec
out
push
and
shll
jle
gs
jne
out
jmp
or
or
push
ds
mov
adc
or
jns
jmp
std
pop
js
fxch
mov
adc
and
scas
adc
adc
cld
sub
pushf
push
sub
mov
clc
jae
js
data16
stc
cli
xchg
push
adc
jo
and
mov
loop
adcb
loope
sbb
jle
lea
mov
adc
push
jb
mov
je
movsb
mov
ret
scas
movsl
scas
inc
xlat
cmp
sbbl
in
ljmp
or
hlt
dec
xor
sbb
mov
dec
or
pop
imul
cmp
test
mov
sub
cltd
pusha
hlt
sub
sbbl
mov
test
std
jmp
out
clc
in
aaa
xchg
mov
pop
repz
xlat
cmpsb
push
pop
mov
mull
leave
pusha
jns
jp
mov
mov
inc
push
rcrb
xchg
hlt
test
ljmp
mov
adc
fistl
jbe
mov
std
xchg
mov
stos
in
notb
inc
inc
sub
insl
sub
stos
ret
mov
and
and
ljmp
data16
addr16
adc
and
loop
loop
decb
sbb
and
adc
stc
dec
out
ret
das
xchg
mov
sub
movsl
negl
xor
and
pop
inc
jmp
rcrl
repnz
pop
xchg
xor
jg
movsl
mov
pop
out
cmpsb
add
gs
dec
stc
popf
mov
cld
repz
pop
repz
cmpsb
adcl
sub
jne
jle
mov
std
adc
daa
and
shrb
cwtl
mov
mov
and
push
sbb
popa
lea
push
mov
fdiv
ljmp
cwtl
or
push
mov
xchg
push
test
or
dec
imul
popa
fwait
das
pop
orb
mov
rorb
mov
inc
sahf
iret
es
dec
adc
jp
push
jmp
xchg
icebp
das
dec
movsb
ljmp
inc
or
mov
shll
loop
test
rol
and
push
push
jge
movsb
inc
inc
loop
pop
push
xor
and
xchg
push
xor
mov
lret
jl
push
lods
daa
pop
inc
push
adc
xor
aaa
rorl
jmp
cmpsb
scas
mov
fs
adc
adc
bound
dec
iret
movsb
add
imul
lods
stos
repnz
inc
out
adc
jl
fs
xor
mov
lret
sub
fnsave
out
push
sbbb
xchg
mov
sbb
icebp
js
mov
xchg
push
jl
stos
mov
fsubl
call
inc
ret
popf
subb
andb
sub
jb
lea
js
add
dec
arpl
xchg
cwtl
xchg
sbb
and
data16
mov
movsb
and
dec
insb
cli
cmp
es
fcomps
lock
mov
or
sub
pusha
aam
push
test
lods
das
enter
jne
adc
or
test
adc
daa
and
push
dec
cmpsl
out
mov
xor
jle
pop
add
lret
dec
std
adc
sbb
add
sub
es
mov
into
xchg
lea
sbb
mov
int3
pop
mov
pop
lock
rolb
push
ja
mov
out
imul
mov
je
adc
xchg
cltd
pushf
into
or
or
fdivrs
sbb
or
inc
jae
shll
xchg
dec
fimull
out
adc
inc
lret
mov
in
jnp
mov
jns
lods
jno
jo
push
arpl
cmpb
push
icebp
outsl
xchg
scas
and
add
lret
clc
out
jnp
shlb
add
hlt
pop
in
xchg
dec
or
mov
imul
dec
pop
cld
cmp
pop
xchg
or
sbb
mov
les
negb
popa
xchg
push
test
fwait
cmpsl
sbbl
jnp
sbbb
insl
mov
aaa
mov
into
lcall
pop
sti
mov
pop
adcl
pop
and
push
pop
fsts
adc
daa
xchg
loopne
add
mov
shrb
add
xchg
mov
dec
mov
scas
mov
les
into
movsl
push
mov
orl
cltd
hlt
bsr
jnp
shlb
pop
out
rcrl
dec
dec
jl
and
cmp
ret
xchg
add
sbb
into
fmull
add
stos
lds
pop
ret
xor
popa
or
test
movb
jbe
shl
fs
shl
mov
scas
inc
pop
mov
lret
cmp
test
call
dec
int3
mov
cltd
lods
out
lret
ljmp
pushf
jg
pop
aaa
mov
inc
loop
js
sbb
inc
push
mov
adc
jb
and
xchg
inc
xchg
pushf
ljmp
mov
and
shl
add
inc
inc
dec
mov
in
mov
push
lock
jb
subl
pop
cmc
pop
test
cmp
mov
jle
inc
loop
fidivrs
aad
xor
mov
movl
or
and
iret
and
ja
add
mov
fwait
fisubrs
fnstcw
ds
repnz
xchg
stos
mov
push
or
lds
dec
test
inc
ficoms
repz
xor
mov
or
test
pop
gs
out
and
sti
xor
lret
push
mov
or
aas
push
jg
mov
mov
mov
fstp
jb
inc
mov
jne
andb
cmp
and
jg
push
cmpsl
cmp
pop
cmp
lock
in
adcl
or
adc
pop
push
in
pop
add
popf
pop
filds
cmp
add
clc
adc
pop
mov
or
cmpsb
xchg
add
repz
insl
sbb
fwait
cs
hlt
jnp
jns
push
mov
cltd
outsb
mov
cmp
pop
fs
xchg
jno
xchg
int3
lret
lods
subl
or
jb
adc
fwait
int3
ss
jns
cmp
pop
gs
mov
shlb
ds
pop
jo
cmp
leave
test
repnz
mov
ret
push
jnp
inc
loopne
mov
sbbl
ror
push
push
dec
aaa
push
mov
insb
xor
mov
mov
fs
ss
popa
lcall
dec
cltd
pop
xlat
sbb
ret
push
mull
cld
fs
inc
xchg
dec
movsb
cmp
mov
pop
ret
mov
adc
jns
ss
and
xor
jnp
sub
and
dec
push
cwtl
cmpsl
mov
andl
inc
dec
movsl
addr16
scas
push
out
mov
repz
add
imul
out
mov
jecxz
dec
lahf
rcll
arpl
or
subb
sbb
add
cwtl
mov
pop
popf
lahf
out
mov
xor
mov
jb
aaa
stos
inc
push
lret
enter
ficoms
and
adc
and
adc
mov
dec
mov
mov
nop
scas
pop
insb
cmp
iret
pop
scas
cmc
sbb
sbb
mov
jmp
in
fiaddl
or
or
or
leave
push
call
mov
or
jl
daa
outsl
mov
and
addl
cwtl
scas
mov
jb
mov
lahf
xchg
and
cmp
push
and
popa
sbb
pop
outsl
inc
sbb
jne
lods
inc
rcll
push
lock
cwtl
das
outsl
leave
stc
or
mov
xchg
les
jae
sbb
pop
aad
mov
sahf
lret
mov
stos
mov
add
push
or
push
ja
loop
inc
je
jae
iret
push
scas
jne
adc
adcb
jl
add
push
mov
mov
and
xchg
sub
ret
pusha
imull
jle
fs
cmpsb
cmp
mov
vpsraw
das
nop
mov
inc
xor
insl
jp
adc
mov
jl
call
in
fucomp
sbb
pop
pop
adc
cmpsb
loopne
inc
mov
inc
int3
ret
push
add
push
iret
das
jae
incl
cmp
lock
pushf
cmpsb
lock
push
push
fstp
in
mov
or
mov
pop
mov
sbb
out
sub
hlt
xchg
dec
add
xor
or
sarb
sub
cmp
into
in
xor
faddp
lods
inc
xorb
push
mov
setle
lock
and
add
stos
nop
cmp
dec
in
fdivs
add
cltd
xor
inc
pusha
mov
sbb
lcall
rep
and
daa
out
jle
adc
rcrl
xlat
jg
pop
sub
push
loope
jo
mov
ljmp
int
cmpsl
vpackuswb
ds
mov
pop
cwtl
orl
xor
loop,pt
lahf
adc
inc
mov
cld
dec
push
xchg
pop
dec
xchg
dec
das
icebp
minps
nop
outsb
out
jbe
gs
shr
xor
mov
xor
loop
xchg
jo
in
inc
fs
jg
pop
fdivs
clc
mov
push
ss
jne
sub
mov
xor
int3
fdivr
aaa
xor
and
pop
mov
mov
push
jecxz
xchg
dec
fcmovnu
fsubrs
jae
mov
mov
dec
lods
and
add
je
fildl
dec
sub
mov
xchg
sub
sub
push
mov
and
es
cltd
inc
fdiv
cltd
xchg
jge
sbb
or
cmp
nop
sub
sub
add
and
and
out
sbb
cmpl
ja
mov
rcrb
lds
sti
mov
popa
jg
xor
mov
mov
push
in
jb
pop
cltd
xor
cs
shll
iret
inc
subl
inc
ds
mov
dec
pop
fwait
dec
pop
cmpsl
in
xor
mov
mov
push
adcl
cs
test
rcrl
sub
inc
jmp
inc
stc
xchg
sub
cmp
jg
into
mov
ret
clc
rcl
into
cli
cmp
ss
inc
pop
lea
popa
rcll
adc
xor
pushf
scas
sbb
scas
inc
mov
add
scas
cmp
sub
pop
pop
jo
ficoml
push
scas
pop
je
mov
pop
aam
inc
or
add
loopne
mov
inc
andl
mov
sahf
mov
loope
imul
sbb
movsl
mov
outsl
sbb
mov
fwait
bound
pop
jne
inc
call
sub
xchg
sub
jno
cmp
mov
add
mov
push
jno
xor
cmp
sbb
jo
mov
fstpt
call
and
adc
fidivl
int
pop
jmp
fisttps
fisttpl
push
je
les
nop
sbb
insb
aaa
into
pop
mov
sbb
jnp
aaa
negl
cwtl
ficoml
cltd
adc
fnstenv
or
push
mov
movsl
addb
fcoms
or
fadds
pusha
fistl
call
mov
out
int
xchg
in
pop
xchg
pushl
push
call
sti
sub
sbb
lret
jge
cmp
jnp
movsl
lods
jb
cmp
sbb
cmp
cs
cmc
addr16
sbb
adc
push
xor
cmpsb
add
outsl
sub
cmpsl
push
mov
jo
push
mov
popl
jl
jnp
xchg
je
dec
das
xchg
aad
xlat
hlt
sti
mulb
pop
mov
push
movsl
ds
shll
pop
sub
cmp
xor
fs
pop
sub
scas
dec
ljmp
mov
popa
dec
and
push
shl
lods
inc
sbb
and
add
push
loop
fbstp
int3
push
adc
cmp
cmpsb
imul
hlt
lret
outsl
cmp
lahf
test
bound
jne
mov
push
or
imulb
sub
or
aam
inc
jl
pop
push
mov
movsl
andl
inc
jb
inc
cs
cmp
adc
cmc
dec
and
dec
fidivs
int
mov
xchg
jo
jo
mov
test
sub
pop
cmp
and
dec
cmp
pop
jp
pop
nop
cmc
ds
daa
mov
push
xlat
lock
push
mov
ret
mov
mov
scas
jp
hlt
xor
lock
inc
fstps
mov
cmc
mov
mov
add
push
adc
das
hlt
jno
mov
lds
rcrb
sub
add
test
ss
xor
clc
fs
mov
bound
sub
adc
out
cs
and
idivl
xor
inc
and
xchg
lods
daa
mov
sbb
ljmp
test
imul
pop
adcl
cmp
pop
jns
mov
or
inc
popa
sub
out
or
mov
ss
pop
lahf
mov
or
imul
popf
bound
push
popf
mov
and
sahf
xabort
in
lds
mov
out
adc
hlt
or
push
mov
jae
dec
fimull
divb
dec
xchg
imul
addr16
pop
popl
test
hlt
mov
sbb
pop
jge
or
and
add
dec
ficoms
xchg
pop
stc
cmp
movsl
xchg
loopne
pop
jnp
int
addb
xor
cmp
push
and
in
jle
inc
lock
cli
pop
mov
int
and
or
lahf
xchg
sbb
lret
rolb
dec
xchg
cmpsl
push
pop
push
mov
mov
cmpsb
xchg
or
push
lret
iret
and
lret
jae
xrelease
mov
jge
dec
push
in
jg
and
mov
shrl
sti
dec
iret
mov
lock
mov
adc
testl
add
add
arpl
or
pop
mov
xchg
aad
or
sbb
xchg
and
cltd
push
mov
inc
fildl
scas
imul
imull
push
mov
test
add
sbb
das
push
xor
out
icebp
mov
sbb
mov
and
fisttpll
mov
les
ret
xor
in
mov
ss
push
jl
in
daa
call
or
fildl
std
pop
xchg
cmpsb
cmp
push
lock
dec
sti
in
test
inc
test
xor
or
dec
out
loope
fsubrl
push
adc
sub
sub
and
icebp
pop
cmp
jp
cmp
jmp
jns
sub
cwtl
mov
cwtl
idivl
pop
cmc
mov
sti
add
test
sbb
not
outsb
iret
mov
out
aam
add
daa
cmp
dec
into
dec
cmp
pop
push
in
mov
dec
sbb
push
mov
mov
pop
insb
cmpl
xor
popa
scas
rcl
add
sbb
fildll
enter
cmp
rolb
pop
cmpsb
cmp
mov
lds
movsl
std
or
movsl
nop
dec
loopne
mov
sbb
cwtl
das
cmp
sub
jmp
pop
insl
pop
xor
sub
xor
sbb
outsl
adc
cmp
hlt
cltd
lods
jg
into
loope
idivl
les
jg
add
jnp
insl
and
lock
jb
mov
pop
sbb
or
mov
or
lret
pop
popf
in
add
arpl
int3
sbb
jbe
xchg
add
and
sahf
jge
rcrl
push
sub
icebp
cmpsb
push
in
mov
jo
mov
cmp
rcrb
pextrw
jnp
sarl
cmp
add
pop
loope
pop
into
fwait
dec
push
mov
push
icebp
sub
imull
inc
mov
jae
fsts
pop
sbb
mov
jno
repz
push
addl
roll
pop
lret
subl
xor
sub
inc
xchg
sub
iret
jno
ja
shr
dec
stos
in
out
leave
mov
push
out
lds
in
and
mov
pop
jno
sbb
or
cmc
pusha
mov
imul
arpl
jmp
xchg
lcall
mov
push
test
jo
jg
xchg
cmp
adc
dec
pop
adc
pop
xchg
shlb
ret
jnp
jns
cmp
jno
cmp
sbb
mov
dec
jnp
cmp
fistpl
add
inc
xor
insl
sbb
fmul
pushw
outsl
add
mov
fidivrs
fldl
ret
sbb
movsl
lcall
mov
and
mov
push
lret
cmp
into
sti
cmp
fisttpll
repz
loope
mov
dec
pop
je
pop
jle
pop
mov
adc
xor
push
icebp
or
daa
cmovb
into
inc
cmc
data16
inc
mov
mov
cmpsl
mov
dec
jg
jb
cmp
mov
ficompl
imul
cmpsl
mov
lcall
jge
xchg
call
enter
mov
addr16
sub
cmp
jne
push
in
adc
rcrb
mov
adc
add
cmpsl
mov
call
sbb
lods
fstl
aas
dec
ffreep
push
cmp
xor
and
sub
scas
test
sbb
test
pop
arpl
daa
xor
adc
repnz
fists
pop
daa
push
das
jbe
iret
adcb
gs
test
cmpsl
mov
push
into
in
add
xor
cmpsl
out
adc
ret
mov
orl
inc
pop
outsl
test
icebp
sbb
add
xchg
xchg
and
test
and
push
add
cmp
iret
cs
ss
dec
enter
sub
inc
loope
mov
jb
insb
es
les
insl
adc
fwait
jmp
fcomip
mov
mov
mov
and
push
sub
dec
test
shll
dec
xlat
scas
or
stos
and
ret
in
adc
mov
jbe
or
push
dec
ret
movsb
hlt
sub
ret
sti
rorl
xchg
cltd
sub
aam
inc
sub
jno
ja
add
das
repnz
jbe
dec
test
jb
fadds
adc
dec
add
dec
inc
es
mov
movsl
movsl
pop
enter
mov
jnp
add
or
icebp
fisubrs
mov
sbb
add
and
cmp
pop
aaa
pop
out
cmp
or
fidivl
aas
and
data16
sbb
jg
cvtpi2ps
je
xor
ret
ss
mov
jno
adc
pop
sbb
popa
xchg
repz
stos
movsl
adc
push
lock
and
xchg
data16
mov
jns
std
pop
sub
push
lods
lret
std
mov
xor
jp
xchg
fstpt
nop
insl
insb
dec
aaa
ljmp
xchg
mov
sub
fists
insl
and
inc
hlt
dec
gs
jl
mov
cmp
mov
insb
lods
ljmp
popf
cmpsl
jp
mov
arpl
xchg
mov
fidivrs
sahf
xchg
inc
in
andl
leave
loop
loope
sarb
sbb
repnz
push
int3
cmpsb
roll
jecxz
shrl
mov
push
lock
mov
test
sub
or
shrl
inc
push
sti
xchg
mov
ret
out
fwait
sub
mov
xchg
inc
or
sub
adc
adc
ljmp
mov
cld
inc
stos
mov
inc
sbb
mov
imulb
leave
mov
shl
daa
popa
push
sub
mov
pop
sub
mov
loopne
push
in
pop
push
xchg
movsl
mov
fldenv
int3
mov
jbe
add
xor
mov
or
mov
push
mov
add
es
adcb
mov
adc
shl
fiaddl
xor
and
inc
out
inc
jbe
int
mov
ret
or
dec
mov
iret
sbb
inc
andl
jo
push
mov
popa
mov
inc
cmpsb
dec
js
scas
popf
call
int
push
pop
loope
mov
cmp
xchg
bound
cmp
push
adc
pop
cwtl
gs
ret
clc
and
sbb
cmpl
cmp
push
sbbl
js
pop
xor
cltd
es
xchg
out
xor
test
pop
mov
adc
mov
jecxz
mov
add
sbb
mov
es
add
sbb
fnop
in
mov
xor
dec
and
addb
jo
mov
pop
jo
lcall
aad
and
rclb
push
adc
psrad
push
popf
mov
aas
push
in
mov
imul
cmpsb
cltd
out
pop
fcomip
cmp
sbbl
leave
popf
stc
cli
dec
inc
loopne
mov
in
daa
insl
js
mov
test
arpl
xchg
test
push
js
insl
dec
mov
inc
jne
mov
mov
add
xchg
daa
mov
or
call
sahf
stc
test
mov
fcomi
xchg
dec
push
popa
clc
or
jnp
or
dec
and
push
mov
or
div
mov
adc
add
jne
xlat
ret
pop
int
clc
loope
ljmp
jo
sbb
jge
inc
gs
dec
jno
cli
jne
adcb
push
je
lds
push
cli
xchg
gs
test
fcomps
in
scas
lea
sbb
inc
out
push
imul
leave
mov
out
sarb
fstps
in
jbe
icebp
je
insb
sub
push
insl
scas
ret
mov
xchg
dec
int3
outsb
repnz
test
mov
rorl
cmc
enter
sub
ds
mov
and
cltd
dec
das
cwtl
push
jmp
push
jns
or
fldl
sbb
mov
mov
mov
icebp
cs
xchg
scas
sub
adc
inc
jo
mov
test
jmp
es
mov
stc
or
push
in
pop
mov
sub
fnsetpm(287
pop
mov
adc
insb
in
cld
cmp
loope
mov
pop
mov
enter
cltd
loope
xlat
fwait
lock
fcoml
aam
aam
out
test
sbb
stc
mov
fmuls
xchg
aas
daa
int
inc
aad
fiaddl
and
mov
mov
jle
xor
push
mov
sbb
repz
xlat
add
mov
leave
sub
cli
sahf
or
sbb
sbb
lds
in
dec
and
pop
xchg
jns
rol
pop
insl
mov
shlb
sub
mov
fiaddl
adc
icebp
outsl
mov
mov
imulb
addr16
pop
pop
test
sbb
not
aad
repz
xlat
outsb
xchg
dec
sbbl
mov
filds
xor
xor
movsb
fucomi
popf
inc
push
mov
stos
adc
xor
sarb
push
stos
divb
adc
andl
cli
xchg
xchg
jp
and
lahf
nop
das
inc
sub
es
xchg
pop
add
rcrl
mov
test
cmp
xor
xchg
pop
aad
jb
popf
pop
pusha
mov
sar
xchg
mov
das
xchg
cmp
call
pop
mov
inc
mov
push
sbb
sbb
cmc
cmp
pop
and
push
xchg
cmp
fwait
pop
dec
jecxz
mov
or
fcoml
xchg
mov
jns
cmpsl
cli
sbb
mov
push
push
loop
jb
mov
jbe
mov
sbb
sub
dec
pop
or
push
scas
ja
lahf
xor
das
cwtl
in
xchg
sbb
add
sbb
fsubs
and
es
loop
cmp
add
pop
add
add
stos
negb
or
out
xchg
cltd
jns
iret
add
fwait
lret
fisttpll
das
int3
mov
pop
leave
sub
adc
idivl
jno
out
xor
jmp
fistl
mov
dec
aas
rol
cmc
mov
outsl
subb
adc
adc
jbe
push
out
rolb
pushf
fsubr
outsb
add
icebp
rclb
xor
xchg
addr16
pop
and
or
cwtl
fldcw
pop
rcr
mov
andl
mov
test
imul
mov
fisubl
hlt
mov
push
lods
jecxz
ficoms
shlb
lret
inc
pop
std
out
sub
cmp
daa
lret
ja
xlat
xchg
lds
insb
out
cmc
fcomps
sub
xor
fs
paddw
jb
sub
stc
or
xlat
add
test
in
stos
mov
or
rol
add
and
mov
push
pop
scas
dec
jl
and
ret
adc
push
jl
pusha
idivl
nop
fdivrs
inc
outsl
mov
fnsave
rorl
mov
jle
pop
imulb
cli
mov
dec
jge
lcall
lret
dec
cmpsb
xchg
jmp
mov
push
jmp
mov
in
xor
fstp
leave
push
and
dec
pop
xchg
or
push
decb
mov
jo
leave
cmp
push
inc
add
add
mov
shll
lods
fdivr
cwtl
stos
fdivl
lret
mov
mov
fwait
sub
mov
lahf
das
cmp
lods
imul
push
xorb
les
pop
je
and
mov
mov
jmp
mov
jmp
mov
js
aas
ljmp
into
outsb
test
pushf
test
cmpsl
cmp
sub
out
xchg
es
aaa
dec
inc
pop
addr16
rol
mov
vpmovsxbw
dec
hlt
mov
mov
mov
daa
push
ret
mov
stos
test
sahf
add
push
ror
dec
xor
stos
fwait
andl
push
adc
dec
sahf
ljmp
ret
or
push
cli
mov
inc
mov
xor
mull
cmpsl
mov
dec
adc
test
out
fucomp
cmc
lret
je
sub
and
pop
fsubl
addb
orb
jp
dec
jl
imul
outsl
xchg
in
ja
mov
es
pop
loope
fstpt
int3
mov
xlat
leave
inc
cld
shrl
lea
sub
dec
dec
xor
sbb
mov
cmp
test
mov
push
fnstsw
repz
imul
sub
pop
aad
or
xlat
push
xchg
add
dec
dec
xchg
call
fcomps
cmc
and
inc
jl
sub
mov
addr16
fildll
dec
mov
cmp
aas
xchg
scas
xor
pop
sub
dec
fnstsw
mov
sub
xchg
into
and
bound
push
cld
subl
push
out
outsl
push
jo
scas
scas
mov
mov
movsb
or
adc
jne
jl
fwait
outsb
xor
lock
mov
mov
clc
mov
jmp
or
das
dec
push
xchg
and
adc
push
bound
adc
movsb
mov
daa
mov
dec
ret
jge
cmc
popa
xchg
setae
jnp
xchg
lea
cmp
jge
adc
xchg
push
sbb
leave
pusha
repz
sub
movsl
sbb
ret
and
mov
int
dec
movsl
nop
call
cmp
arpl
andb
xchg
fidivs
inc
std
out
jl
movb
popf
je
push
pop
mov
jmp
mov
pop
or
push
mov
pop
push
fstpl
cmc
fldl
cwtl
mov
test
scas
and
es
pop
dec
clc
imul
imul
cs
and
aam
inc
cmpsl
push
idiv
xchg
test
mov
scas
xchg
inc
aaa
pop
ljmp
sysenter
dec
insb
mov
mov
push
das
mov
jl
enter
fwait
aas
inc
xorl
mov
data16
rcl
fnstsw
sub
push
inc
loope
adc
inc
jno
pop
xor
std
stc
nop
daa
daa
in
std
int
mov
fisttpll
push
xor
aas
jb
push
jb
sub
push
aad
ret
inc
loope
jae
jno
xchg
cmp
cmp
jl
jno
push
mov
idiv
pushf
xlat
movsl
push
in
add
jno
aas
xchg
cltd
jo
cwtl
mov
subl
loopne
fwait
aaa
push
test
push
dec
nop
sbb
mov
add
jno
mov
and
test
mov
sti
fwait
xorb
shrl
pop
mov
andl
sub
stos
imul
mov
setge
inc
or
stos
test
xorb
cmp
ja
pop
fbstp
es
cmp
mov
lea
jl
clc
xor
les
and
out
cmp
push
xlat
cmp
bnd
fistps
cmp
pushf
pop
xchg
in
popf
andl
mov
and
adc
mov
xchg
dec
push
pop
inc
in
idivl
out
fidivs
sbb
cmpsb
sbb
ret
push
push
sbb
or
xor
loope
jle
cmp
and
popf
lock
in
je
fwait
mov
push
insb
movsl
frstor
and
jb
shlb
pop
imul
stc
mov
hlt
call
add
jl
and
mov
mov
push
movsl
shrb
cmp
outsb
cmp
icebp
or
add
cwtl
xchg
xor
push
mov
ss
xchg
scas
push
xor
jecxz
pop
pop
sbb
icebp
shrb
xor
add
cmpsb
add
mov
movsl
sub
mov
jne
mov
add
and
test
cltd
mov
xchg
mov
push
aas
bound
add
mov
xchg
mov
mov
sbb
jmp
push
out
pop
repz
fists
jecxz
mov
fcoml
dec
add
inc
loop
sub
ss
fldenv
cli
adc
imul
rcrb
mov
mov
into
xchg
mov
int3
cli
test
xchg
xor
xchg
xor
stos
inc
scas
dec
push
cld
push
xor
or
mov
sub
jbe
test
js
adc
or
push
jmp
push
iret
adc
cmp
fisubl
jne
bound
and
int
xchg
jb
call
or
adc
xchg
and
adc
cwtl
repz
in
flds
xchg
jns
repz
push
mov
cmp
add
outsl
mov
lds
xor
std
jns
es
xchg
cmpsl
ljmp
inc
cmp
cltd
push
repz
daa
sub
dec
mov
loope
xor
pop
xchg
jns
fdivl
push
pop
mov
sub
push
movsl
xchg
sub
fistps
pop
mov
sub
gs
mov
stos
push
adc
mov
int
ds
cmp
test
aam
popa
rcrb
mov
clc
inc
mov
iret
inc
push
leave
and
movsb
shl
sub
lock
mov
dec
inc
jp
fnsave
lret
daa
or
mov
bound
pusha
and
mov
lds
in
pop
adc
pop
mov
mov
out
add
int3
test
add
mov
mov
stos
xchg
pop
ljmp
fcoms
aad
or
pusha
in
call
xchg
bound
or
es
sarb
inc
jo
cmp
jecxz
sbb
push
cmpsl
inc
push
fbld
sub
shlb
es
in
hlt
setp
mov
lcall
mov
lret
pop
add
pop
bound
jle
fcomps
pop
stos
leave
jbe
stc
mull
cmp
push
cmp
dec
adc
xor
outsl
mov
lret
pop
mov
add
mov
and
inc
xor
jmp
pop
sbb
lahf
push
scas
xchg
ljmp
lsl
sub
adcb
pop
cmp
jp,pt
mov
jp
enter
aam
leave
popa
decl
shl
dec
lea
inc
popf
in
hlt
adc
popl
cmp
iret
test
jne
inc
ja
fcompl
movsb
std
xchg
loopne
in
out
xor
nop
aaa
gs
lods
out
jbe
add
inc
pop
shrl
nopl
test
rolb
mov
pop
in
shl
inc
in
inc
xor
pusha
mov
iret
mov
sbb
jle
push
pusha
fld
outsb
aas
xchg
xor
rcrl
mov
xchg
cmp
jl
out
mov
outsb
shrl
sub
pop
ljmp
enter
scas
jmp
ss
cmp
adc
aam
mov
mov
rcll
dec
mov
lret
cwtl
or
idiv
mov
in
movsl
inc
cmpsb
pop
icebp
imul
cmc
jno
cmp
test
fs
fcompl
stos
xchg
xchg
ja
and
cmp
popf
aam
and
xor
mov
xor
iret
fstpt
push
add
add
cmpsb
ret
lea
or
jbe
negl
adc
cmp
pop
dec
in
pop
in
push
cmp
pop
scas
mov
lret
in
and
scas
scas
mov
sub
loope
aas
and
cld
sbbl
lret
daa
xor
lods
scas
jns
loope
push
lcall
in
inc
sub
jae
out
adc
cmp
or
iret
jg
fnsave
cwtl
mov
cmc
dec
push
or
xchg
jl
in
and
sub
lret
int3
movsb
repnz
dec
pop
movb
push
lret
stos
sti
jno
imul
cs
pop
out
pop
cmp
mov
out
push
adc
xchg
mov
cmc
sbb
int
call
add
push
sbb
mov
xchg
sub
lret
xor
lods
jmp
cmp
add
cmp
xchg
push
push
in
dec
mov
lret
adc
add
fsts
xchg
push
sti
stos
dec
sub
xchg
xchg
dec
nop
sbb
mov
fcomp
mov
mov
add
dec
loope
lock
jo
push
subb
mov
mov
or
push
pop
rclb
jl
xchg
xor
and
ljmp
jne
rol
push
addr16
mov
pushf
in
mov
push
loope
aam
outsb
add
js
fmuls
ljmp
andb
adc
add
aaa
mov
adc
into
cli
xchg
mov
ret
popf
sti
inc
inc
loope
aam
lret
lret
jl
dec
fwait
push
scas
xor
and
mov
popf
pop
shld
loope
xor
insl
mov
popf
stc
pop
jmp
mov
pop
adc
jge
lds
mov
daa
mov
lock
addb
or
scas
mov
or
push
xchg
push
adc
mov
dec
jae
out
sarl
xor
add
add
cli
mov
sahf
add
xchg
inc
and
mov
sbb
pop
xchg
lds
fisubl
mov
cmp
cli
jecxz
jb
rcrb
adc
out
xchg
dec
and
push
cmp
inc
inc
imul
xorb
sub
xchg
jo
and
mov
loop
out
lea
lock
sub
push
gs
call
and
sub
shlb
jmp
or
xchg
fyl2x
clc
es
sub
out
flds
xchg
js
fsubs
popf
in
ret
mov
jecxz
cli
lret
mov
lods
aas
out
jmp
dec
dec
push
loop
pop
clc
xchg
mov
fsubl
fnsave
push
orl
adc
push
pop
push
es
lods
inc
mov
out
mov
or
repnz
mov
cmpsl
sbb
imul
pop
orl
cmpsl
rorb
sar
fadds
je
loopne
int3
adc
pop
in
adc
inc
xor
imul
out
adc
orb
push
pusha
lcall
adc
inc
push
test
jno
adc
pop
cld
pop
andl
test
mov
mov
pop
lods
or
insb
sbb
cmp
xchg
add
sub
xor
cwtl
cmpl
sbb
std
aas
or
subl
rclb
dec
daa
lcall
test
in
xor
lret
subl
jnp
pop
dec
jae
sbb
add
mov
cmc
xchg
test
cmp
jge
cmp
into
jbe
lea
mov
data16
enter
or
jns
stos
sahf
clc
add
mov
mov
mov
sub
lds
bound
add
gs
out
sbb
aad
in
movsb
jg
popa
sbb
addb
lret
push
fiaddl
jns
xor
add
imul
xchg
int
xchg
inc
mov
xchg
jae
inc
ficoml
jecxz
unpckhps
aas
out
xchg
add
call
dec
cwtl
dec
push
inc
ficompl
inc
popa
push
test
mov
lds
lea
ss
int3
ss
cmp
loope
sbb
loop
cld
lcall
push
sub
hlt
pop
outsb
daa
lret
or
daa
jnp
jbe
in
jle
dec
mov
jl
add
push
or
iret
and
sub
lds
test
ret
mov
mov
iret
scas
cld
fdivs
pusha
cld
xchg
test
inc
push
int
push
dec
mov
jl
shrb
sahf
scas
out
shrl
lea
cld
inc
in
add
mov
pop
cs
test
xchg
add
scas
fistps
dec
xchg
jb
lcall
jmp
xor
xchg
dec
adc
dec
and
or
inc
mov
outsl
sbb
pusha
add
fnstenv
aaa
outsb
loope
add
push
xor
ss
push
dec
jnp
jl
in
movsl
dec
inc
pop
xorb
push
loop
or
dec
les
jle
fbld
sbb
push
xor
jb
out
dec
lcall
and
fcompl
dec
adc
je
and
test
inc
xor
mov
repnz
or
mov
jmp
lods
mov
pop
sbb
out
ds
ret
das
fwait
inc
pop
dec
loopne
test
lret
std
lret
das
xchg
sbb
mov
stos
cmpsl
add
fxch
mov
pop
hlt
mov
lahf
popa
push
pop
and
pop
lret
push
lods
fadds
repnz
adc
mov
aad
xchg
lahf
or
test
int3
out
popf
and
and
push
cli
mov
xorl
or
mov
loope
inc
es
out
test
int
push
xor
int
push
sti
jmp
cltd
xor
dec
pop
inc
push
xchg
clc
mov
lcall
aaa
scas
cmp
push
cmp
cmp
insb
xorb
xchg
jmp
add
sbb
je
push
xchg
shlb
cmpsb
mov
xchg
out
cld
sub
aas
shlb
jmp
ja
xchg
in
subl
mov
add
xor
add
jg
lcall
or
dec
jmp
adc
das
add
xor
fidivrs
or
sub
add
lret
adc
loop
push
xchg
sub
adc
jg
aas
shl
push
inc
aam
out
xchg
jp
lods
push
push
aad
sti
xchg
sbb
stc
jnp
hlt
mov
dec
sbb
pop
jge
inc
arpl
xchg
xor
lahf
jae
movsl
outsb
xor
mov
sbbl
inc
ds
dec
scas
enter
fisubrs
inc
shll
stos
mov
xchg
test
leave
fisubrl
pushf
and
fdivs
int3
hlt
mov
adc
testb
ds
mov
ljmp
repnz
das
dec
add
loopne
lock
mov
inc
mov
push
ficomps
nop
mov
push
mov
mov
test
fidivl
xchg
pop
jle
pop
insl
add
dec
sub
sub
in
aad
lds
ret
add
jg
add
nop
sub
mov
int3
sahf
scas
inc
pop
insb
mov
arpl
ror
repnz
addr16
push
add
into
cmp
and
mov
loope
out
mov
cmpsl
xchg
and
push
xchg
adc
add
scas
mov
loopne
mov
pushf
xor
sti
sbb
push
jno
jg
push
lea
mov
outsl
xor
call
mov
inc
loope
xchg
sbb
loope
call
cmpsb
mov
jne
pop
sub
addl
leave
and
push
cmp
aas
in
push
cmp
and
jae
xor
aam
jb
cmpsl
xchg
sbbb
nop
dec
pop
dec
mov
pop
push
int
mov
sti
push
push
sub
aam
push
or
stos
pop
rcrb
inc
loop
jno
in
cmpl
sbb
fsts
insl
jb
xor
jns
cmp
sbbl
ficompl
cmp
loopne
cmc
adc
ja
lods
inc
mov
add
pop
cltd
dec
shl
fidivs
or
cmp
into
and
xchg
call
outsl
scas
mov
add
into
push
stos
xchg
mov
mov
hlt
pusha
ljmp
mov
cld
xchg
add
hlt
adc
pusha
iret
sub
les
ret
push
inc
cmpb
std
movsl
sub
aas
or
push
jge
out
xor
mov
test
ss
or
mov
xorb
adc
insl
cmp
and
or
fwait
cmp
cmp
pop
and
aad
xorb
sbb
shll
add
scas
xor
jo
rcrb
add
or
inc
mov
sahf
lods
das
xchg
cmp
mov
mov
adc
pop
adc
lcall
xor
hlt
gs
add
cmp
popa
mov
imul
aad
sub
push
pop
mov
mov
fcmovbe
insb
xor
sub
lahf
and
add
mov
stc
insb
int3
data16
repz
xchg
aas
das
loopne
clc
mov
jp
sbb
xor
jge
cmp
cmp
adc
xchg
jae
bound
fistps
inc
mov
and
jo
bound
inc
fiadds
jmp
xor
pusha
push
addr16
push
cltd
aaa
clc
xor
jge
xchg
add
popf
push
jno
mov
mulb
std
pop
cmpsb
sbb
dec
ja
leave
mov
test
cltd
xor
daa
leave
aas
std
cli
dec
ljmp
mov
lahf
out
push
fldenv
cld
dec
mov
repnz
cmc
mov
dec
and
sub
sub
cmp
lea
ds
loopne
pop
jecxz
xchg
pop
imul
jo
or
out
sbb
or
jle
faddp
add
loop
pop
mov
nop
dec
fisttpll
loop
and
xchg
xchg
loop
xchg
mov
lock
jns
popa
idivb
test
dec
mov
leave
add
ret
pop
aas
inc
push
repz
shrb
xchg
lret
lds
imull
mov
lea
mov
push
pop
sahf
icebp
or
adc
pop
mov
jp
imul
or
mov
and
cmpsb
push
push
daa
pop
jb
in
aas
cmp
pop
mov
pop
stc
insl
push
jge
fcmovbe
rcll
rcl
shll
scas
mov
aam
jl
adc
xchg
sub
stos
mov
pop
xchg
or
jge
pop
sti
inc
pop
cmp
lret
jns
hlt
stos
mov
out
loope
fstpl
repnz
adc
jb
and
stos
adcl
mov
test
inc
push
add
es
add
jb
jb
pop
fcmovne
stc
rorb
adc
aad
xor
loopne
or
mov
leave
data16
lahf
cmp
dec
lds
rclb
add
repz
pop
pop
and
xchg
jl
cltd
mov
jae
ljmp
adc
mov
xchg
add
ficomps
mov
lods
fdivr
push
fsubrs
push
je
cmp
mov
mov
and
xchg
jg
xor
add
fcomps
xor
sub
mov
push
or
jecxz
pop
fpatan
lea
mov
scas
and
cmp
push
adc
inc
xchg
mov
pop
insl
dec
mov
jnp
and
push
ret
pop
scas
dec
test
cmp
inc
mov
pop
imul
loop
scas
repz
push
or
stos
adc
adcb
jg
js
jo
lods
mov
jg
test
push
lea
jl
ja
les
push
mov
xor
pusha
lcall
jno
rorl
cs
and
push
push
xlat
jno
add
bound
lock
dec
imulb
scas
fs
popf
jno
bt
xor
roll
sbb
dec
mov
and
xor
dec
jnp
shrl
mov
out
xchg
mov
cwtl
add
push
jo
cltd
push
push
imull
fcmovnbe
inc
test
cli
leave
xchg
xchg
mov
ljmp
push
mov
mov
pop
fwait
lods
inc
int
dec
fsubrl
xchg
mov
adc
dec
inc
xor
lods
jmp
dec
inc
clc
pop
mov
pop
adc
fdivl
andl
sahf
loopne
push
je
sbb
xchg
cs
mov
sarl
mov
fdivrl
movl
and
aaa
hlt
and
sbb
fcomip
adc
arpl
xor
clc
ja
dec
sbb
les
decb
adc
unpckhps
aas
xor
scas
sub
push
sti
push
insb
gs
pushl
test
test
imul
iret
mov
mov
sbb
cmp
imul
daa
fnsave
cs
cmp
fisubl
in
je
sarb
sbb
aas
mov
out
sti
adc
push
ss
add
lods
cs
xchg
negl
dec
lahf
movsb
pop
or
movsl
xchg
mov
pop
pop
dec
mov
sbbl
inc
lods
sub
fwait
and
call
cli
cmp
xor
mov
popw
out
mov
aas
fsts
bound
pop
dec
stc
mov
loope
add
jb
pop
push
int
or
mov
ret
pushl
mov
loope
sarl
jmp
out
add
jp
mov
js
jbe
das
add
pop
pop
ljmp
mov
mov
and
arpl
jno
sub
push
or
adc
cmpsw
adc
mov
js
xor
lret
lret
aad
lcall
insb
push
mov
out
movsb
lret
cli
jo
inc
pusha
jns
xor
mov
pop
test
adc
insb
xor
in
inc
mov
mov
push
outsb
stc
mov
aad
lret
sbb
cmp
cmpsb
cmp
or
jbe
mov
outsb
fistps
push
mov
fdivl
push
fbstp
out
cmp
push
andl
js
xor
push
rcrl
loop
push
push
sub
xlat
outsb
movsl
push
out
adcl
mov
icebp
jp
ficoms
into
dec
mov
inc
gs
inc
pop
adc
into
cmpb
into
pop
mov
and
not
mov
push
insb
andb
lock
std
or
pop
push
jo
aad
loopne
std
lods
cmpsl
test
mov
cmp
add
mov
and
jl
mov
or
repz
adcl
xor
sbbl
mov
out
xor
les
jb
inc
jecxz
adc
sub
jge
and
idivl
xor
pop
pop
sub
pushf
jbe
mov
test
lea
fstl
push
pop
fisubrl
inc
in
js
adc
push
hlt
clc
or
sahf
and
and
enter
sbb
aam
xor
lcall
fs
je
dec
push
es
fistps
test
mov
pushf
xorb
test
ret
lret
fbstp
add
jns,pn
int3
loopne
cmp
mov
xchg
sub
pop
lods
push
bound
mov
in
cli
inc
sbb
push
inc
or
ja
and
popf
frstor
cmpsl
test
mov
mov
dec
repnz
adc
out
jmp
call
cmp
in
mov
pop
dec
into
in
aam
shrl
stc
or
dec
shlb
push
xchg
xchg
and
sbb
or
fbstp
fwait
test
out
imul
mov
pop
fwait
dec
popa
cltd
mov
xlat
test
arpl
jb
addr16
cmpsb
inc
ret
pop
xor
add
sbb
xor
std
lods
js
cmp
mov
sbb
xchg
in
or
xorb
cmp
stos
enter
lret
sub
xchg
push
push
push
rorb
and
inc
pop
movsb
inc
test
lahf
shll
cmp
nop
xchg
pop
cwtl
ret
cmc
sbb
mov
rep
fs
mov
and
push
push
and
cmpsl
imul
clc
push
cli
xchg
sub
push
jle
dec
sbb
cwtl
or
jge
push
push
testb
arpl
sub
jnp
es
std
cmp
shrb
ja
aas
roll
dec
jecxz
push
push
mov
or
or
lds
pop
sub
or
test
or
jp
dec
mov
cld
and
mov
nop
xor
xlat
mov
nop
xchg
loope
mov
xor
in
sub
jbe
push
cs
dec
lods
mov
movb
xchg
and
sbb
cmp
sub
jg
or
push
test
nop
stos
push
std
pop
jne
jne
sub
push
movsb
cli
push
aam
test
ret
enter
out
mov
sarl
cmp
mov
jp
adc
out
lret
je
sti
push
divl
mov
fldcw
fldenv
dec
mov
push
cmp
and
xor
enter
cwtl
test
mov
lret
inc
xchg
pop
jg
into
jg
sbb
jge
sbb
fs
pushf
idivb
or
lcall
insl
and
addl
ljmp
mov
cld
and
hlt
mov
sbb
rol
je
cld
movl
and
xchg
loope
pop
sbb
mov
std
pop
dec
loopne
push
pop
mov
loope
lock
fcmovbe
mov
mov
movsl
push
add
mov
or
es
enter
add
loopne
imul
cmp
dec
and
push
cmp
jns
movsl
outsb
push
cmpsl
xchg
dec
mov
outsb
sbb
push
mov
outsl
insb
pop
es
andb
mov
xchg
scas
mov
mov
push
arpl
xchg
xchg
push
add
mov
test
pop
xchg
mov
mov
cmpsl
fldenv
das
adc
nop
es
icebp
insb
jae
pop
inc
adc
imul
rcl
es
pop
lahf
mov
jge
imul
fwait
push
icebp
inc
inc
int3
mov
ucomiss
mov
and
test
hlt
xchg
pop
fsubp
nop
sti
adc
pop
lods
jg
mov
cmpsb
cmp
mov
mov
dec
sub
mov
mov
jge
divl
xlat
out
dec
stc
and
jecxz
ret
test
icebp
and
xor
cmovge
jmp
cmp
xor
js
ljmp
dec
sbb
fcomi
ret
and
sahf
push
mov
pushf
xor
pusha
and
lea
xor
add
adc
dec
pop
mov
push
lds
stos
lods
xchg
ja
dec
lret
push
in
loope
cwtl
je
sbb
ds
xchg
jo
pop
mov
adc
int3
sarb
repnz
jmp
and
push
and
jge
lock
hlt
arpl
stc
mov
lods
inc
repnz
jnp
bnd
das
xchg
in
adc
or
fdivr
test
xor
out
adc
les
and
jg
jecxz
sarb
ds
das
mov
mov
gs
out
xor
mov
mov
test
add
movsl
dec
insl
popf
xchg
mov
xchg
jg
xchg
sub
mov
sarl
mov
mov
xchg
xor
xor
sti
icebp
pop
dec
fdivrs
pop
aad
mov
inc
lods
add
mov
shll
xchg
mov
cmp
sti
dec
sbb
xchg
lahf
mov
sarb
insb
iret
mov
loop
divb
in
jo
pop
push
sbb
mov
cltd
enter
testb
mov
push
pushf
icebp
rorb
loop
and
loop
xor
addr16
out
mov
xchg
sti
jns
imul
test
aad
es
idivl
jne
mov
jmp
in
or
add
call
int
test
jne
inc
fsts
fstpl
cld
dec
popa
sub
adc
movsl
xchg
ja
push
sarl
jnp
jmp
mov
xor
pusha
sarw
mov
sub
dec
movsl
cmp
in
stc
mull
in
mov
ret
mov
pop
mov
nop
mov
jecxz
jne
notb
and
js
and
push
dec
xchg
movsb
push
imul
mov
adc
mov
dec
push
rcrb
jbe
dec
test
insl
hlt
mov
mov
cli
test
pop
xchg
sub
xor
lods
inc
fld
out
bound
pusha
mov
dec
add
add
sub
fidivl
dec
jecxz
fwait
pop
orl
dec
aaa
and
les
test
movsb
lods
repz
loop
add
daa
jge
iret
loop
sahf
scas
inc
shlb
in
aaa
int3
int3
jae
sub
adc
xor
cwtl
push
daa
jmp
es
shrl
adc
jle
test
subl
xor
iret
xchg
mov
xchg
js,pn
mov
jl
jae
and
stos
test
cmp
sbb
pusha
nop
test
nop
lea
imul
aas
push
popa
and
rorl
add
lret
pushf
repz
xchg
fcomps
cmp
stos
rcrb
lea
cs
scas
stc
and
dec
mov
in
xchg
dec
fs
adc
imul
inc
or
mov
mov
sub
dec
aas
loop
pop
cmp
adc
iret
and
jbe
lcall
mov
sub
mov
pop
test
fwait
xchg
and
loope
int3
adc
out
int3
xchg
mov
int
cmc
clc
movsb
fcompl
jnp
push
push
xchg
push
sub
jno
sub
js
mov
xchg
aas
jo,pt
dec
test
stos
pop
xor
dec
cmp
lea
hlt
lcall
shlb
add
xor
test
jecxz
inc
pop
push
sub
loope
lcall
sub
mov
test
jmp
push
imul
test
sarb
aaa
pusha
test
mov
adc
movsb
push
fwait
xor
dec
fwait
stc
imul
add
mov
ret
xlat
outsb
xlat
xor
hlt
imul
ror
xlat
cld
add
dec
dec
xchg
dec
dec
int3
pusha
cmc
push
cmpsb
or
ja
adc
std
inc
std
pop
sbb
pop
xchg
cltd
and
mov
aam
sbbb
fwait
ret
data16
mov
or
mov
push
aad
pop
fiadds
cmp
in
mov
inc
dec
fidivl
mov
mov
mov
inc
bound
jg
test
mov
icebp
adc
pop
pop
and
mov
dec
popa
incl
add
lods
adc
outsl
push
mov
dec
xor
jl
insl
cmp
js
pop
mov
push
cmp
stos
mov
out
inc
dec
pop
enter
mov
xlat
daa
xchg
jg
mov
mov
enter
xor
lret
jae
xor
mov
testl
inc
push
int3
sbb
movsb
inc
push
dec
dec
xorb
push
mov
xchg
jg
lahf
xchg
mov
insb
andl
jnp
pop
and
js
mov
dec
jbe
je
adc
and
lahf
pop
cmc
rcrb
in
dec
sahf
cli
dec
and
sbb
xor
sbbl
popa
icebp
and
mov
lods
int3
scas
test
mov
cmp
lds
testb
xchg
inc
aam
hlt
pop
out
adc
push
jnp
in
push
sub
rcrl
xchg
mov
test
repz
sub
push
aad
pop
mov
cltd
test
add
add
sbb
inc
aas
ret
push
icebp
push
in
shl
push
push
dec
add
adc
test
xchg
push
jmp
inc
or
lds
cmp
notb
fwait
push
test
outsl
das
jmp
idivb
sbb
insl
movsl
repz
vandpd
inc
lods
inc
cmp
cld
push
xor
outsl
pop
lret
repnz
jne
mov
repnz
cmp
mov
xchg
add
rcl
sub
or
cld
lcall
ljmp
push
outsl
push
sbbl
pop
pop
or
imul
iret
mov
ds
jp
jbe
les
dec
insl
jo
mov
movsl
loopne
jmp
jne
test
cld
xchg
fwait
repnz
in
lds
test
mov
cld
inc
push
cs
sub
test
out
jne
mov
js
cmp
add
xchg
test
dec
pop
out
mov
pop
in
fs
std
xor
sbb
dec
in
pop
adc
fnstcw
xchg
test
jnp
mov
adc
sub
mov
push
sub
adc
jno
shrb
and
mov
push
adc
and
jge
insb
mov
xlat
or
or
or
mov
jge
adc
sub
aas
xor
pop
xchg
lods
nop
leave
daa
inc
and
hlt
cmp
inc
lret
jne
xor
cmc
sbb
mov
add
and
cs
sub
push
inc
clc
scas
cmp
jo
stos
mov
dec
sub
jp
cld
jnp
pop
rol
rorb
rorb
cwtl
fdivrs
sbb
arpl
xchg
xchg
add
cwtl
add
jnp
mov
pop
adc
pop
pop
inc
loop
sarl
insl
mov
cwtl
jns
in
imul
sub
xor
cltd
push
imul
sbb
sbb
test
aad
mov
pop
clc
mov
les
push
lahf
lahf
mov
outsl
in
lods
in
fimuls
inc
fbstp
inc
xchg
or
test
sbb
xchg
lcall
mov
fbstp
mov
ficomps
mov
sti
mov
cli
ss
xor
adcl
sub
xchg
dec
jmp
cmpsb
loopne
pop
lret
sbb
xor
jne
das
ss
or
ja
inc
rol
rcrl
adc
loop
xor
sbb
push
lret
sahf
push
in
jb
lcall
scas
mov
cltd
push
mov
cmc
icebp
or
push
movsl
pop
insl
movsl
js
jns
iret
and
dec
shrl
push
jo
ret
mov
inc
sarb
fyl2x
mov
les
sbbb
mov
mov
lds
lret
jns
jecxz
mov
repnz
pop
jns
xor
mov
adc
pop
or
iret
mov
bound
dec
pop
lret
sbb
stc
nop
out
popa
ss
ljmp
push
out
dec
in
cld
cmp
mov
clc
cmp
adc
je
mov
loop
nop
dec
inc
mov
cmp
out
popa
cwtl
rcr
xchg
shll
shrb
cmpsl
or
je
cmpsl
xchg
ljmp
testl
loope
dec
xchg
stc
jge
loope
jmp
sbb
out
mov
mov
inc
cmpl
jp
fcmovu
repz
mov
jp
mov
icebp
push
push
rcrl
das
outsl
fucomip
mov
test
inc
cmpsb
aas
imul
cmp
pcmpgtd
mov
add
add
int3
mov
xchg
adc
fwait
lds
mov
jae
pushf
data16
js
mov
pop
into
xor
fsubrs
push
xor
xchg
aas
lea
ljmp
mov
dec
sub
lahf
call
cwtl
mov
sbb
std
and
or
xchg
dec
mov
hlt
add
bound
push
mov
adcl
push
imul
mov
andl
or
lea
fildl
fisttps
sbb
rcr
push
add
xchg
shrl
xlat
insb
divl
hlt
mov
pop
inc
sarb
adc
in
aam
mov
inc
fwait
loopne
clc
iret
jle
inc
fcmovne
sbb
ret
stc
pop
fs
mov
repnz
fistpl
test
push
adc
stc
ja
mov
stos
jne
sbb
xchg
test
std
add
in
hlt
les
lds
arpl
jns
add
dec
sub
mov
mov
call
push
ret
or
inc
call
insl
push
mov
pop
loop
mov
sub
arpl
xchg
add
xchg
inc
shll
fidivrs
es
dec
daa
cmpsl
ds
dec
sbb
popa
in
negl
mov
dec
mov
push
cli
push
mov
and
lret
leave
int
repnz
push
enter
dec
fs
iret
jb
sbb
add
ds
and
adc
inc
jo
aas
dec
bound
clc
sahf
sub
cmp
sbb
imul
adc
pop
or
sbb
lahf
sub
fucomip
push
sub
dec
call
push
outsl
mov
fsubrl
test
dec
jle
repz
pop
outsl
mov
das
jo
stos
and
aad
dec
inc
dec
jno
enter
mov
inc
out
jb
jne
aas
xchg
inc
test
les
jb
sbb
in
out
jg
inc
mov
dec
mov
pop
lret
stos
shrl
mov
sub
xchg
pusha
add
shrl
imul
clc
je
ficompl
stos
mov
lock
out
lret
es
call
mov
pop
mov
stos
jecxz
outsl
loop
mov
in
push
jge
aas
dec
jae
inc
xlat
outsl
jns
dec
subl
loop
rcll
int3
pop
cmpsl
mov
rorl
push
imul
repnz
enter
dec
xor
negb
mov
sbb
or
dec
pop
mov
dec
push
mov
lea
lret
sarb
and
lret
lret
xchg
jmp
adc
pop
sahf
jecxz
pop
mov
icebp
stos
in
rcr
mov
enter
or
das
inc
leave
add
je
cmpsl
cli
push
fwait
pmaddwd
addps
dec
push
mov
or
les
insb
or
imul
rolb
or
jl
stc
jmp
add
pop
daa
inc
lahf
xor
xchg
stos
cmpb
cmp
fwait
xor
fnstenv
mov
ljmp
push
int3
lret
fadds
mov
mov
fldt
out
lea
xor
out
cmp
js
xchg
xor
push
sub
push
jnp
stos
pop
cld
dec
ficomps
jns
xor
xlat
mov
rcll
les
mov
lret
bound
sbb
sub
push
mov
cwtl
push
and
cmpsb
movsb
xchg
push
xchg
xlat
iret
ficomps
push
bound
out
jo
imul
push
imul
mov
loopne
pop
fwait
insl
insl
jnp
pop
mov
imul
movd
add
xor
push
sahf
cmp
mov
rolb
xchg
jp
sbb
addr16
add
pop
push
aas
and
sbb
xor
jmp
icebp
dec
loope
mov
cmpb
push
sbb
int3
mov
mov
shll
jnp
dec
outsb
jo
sub
add
add
mov
mov
sbb
or
mov
lea
inc
je
xor
xchg
fs
jne
push
adc
into
jo
movsl
mov
inc
push
adcl
and
cmp
adc
mov
out
pop
lods
push
xchg
std
std
mov
lock
cmc
loopne
or
insb
and
shl
mov
push
push
jae
outsb
shl
movsl
jp
scas
insb
jle
push
in
sti
push
adc
sbb
scas
loopne
inc
testb
test
pop
dec
dec
shlb
inc
gs
mov
test
je
pop
bound
xchg
sbb
pop
movsb
adc
loopne
xchg
jno
insl
pushf
push
jbe
pop
sbb
inc
repnz
inc
cs
loopne
fs
sub
fwait
push
mov
adc
lret
and
push
pusha
test
mov
divb
mov
pop
jg
fcoms
mov
mov
xorl
push
sub
xor
cli
mov
push
and
mov
jno
cwtl
lock
repz
data16
sbb
test
jb
test
les
rorb
lds
cmp
lahf
sub
and
sbb
push
mov
sbb
xor
shr
dec
pop
pop
out
mov
fdiv
dec
pop
aam
cmp
data16
cli
out
sub
xchg
xchg
sbb
push
adc
push
xor
pop
cmpsb
arpl
fiaddl
jp
pop
jae
outsb
adc
adc
sarl
insb
jbe
fidivrl
pushf
in
movsl
jmp
mov
stos
ret
sbb
bound
out
lahf
pop
nop
repz
and
cmpsl
nop
jmp
rcll
add
inc
inc
add
xchg
das
inc
jle
insl
sub
mov
fucomp
pusha
ja
adc
mov
loope
inc
jnp
dec
pop
xchg
push
aad
jmp
lret
addl
add
fstpl
xor
push
sub
ss
push
mov
mov
push
push
repnz
ljmp
mov
sbb
test
addr16
mov
mov
pop
mov
and
push
or
lcall
pop
jbe
aaa
dec
int3
xchg
cmp
fcomp
push
and
mov
jl
and
push
and
or
adc
pop
mov
jmp
mov
inc
ficompl
xchg
popa
sar
or
lahf
pop
cmp
cmp
inc
add
cli
daa
int3
mov
add
fcmovnu
loope
lret
jae
push
xchg
jo
add
sbb
lea
mov
add
inc
lret
xlat
xchg
push
rcll
inc
pushf
xchg
fidivl
aad
out
int3
ss
inc
push
jnp
xchg
pop
add
addr16
fildll
shll
leave
int
pushf
or
mov
mov
or
loope
leave
shlb
hlt
lret
mov
push
adc
clc
lahf
fidivl
jne
loope
push
mov
test
fstpl
mov
xor
pop
imul
in
pop
pop
mov
mov
mov
fcmove
add
lods
das
daa
test
sub
andl
cmp
sti
push
cmp
inc
gs
aad
dec
pop
mov
sub
dec
adc
sarl
mov
sub
aad
adc
and
stos
xchg
addl
aad
in
imul
mov
adc
out
orl
jo
out
je
sarb
push
scas
add
mov
sbb
mov
call
sub
out
xchg
cs
insl
cmc
jo
sub
in
mov
es
xor
pusha
cmp
pusha
mov
scas
mov
into
popa
fcmovnu
test
es
jle
enter
incl
mov
stc
jp
push
stos
out
push
rorl
mov
mov
in
pop
dec
add
addr16
stos
not
adc
in
sub
into
in
fbstp
mov
addr16
push
mov
fwait
int3
pop
cmp
adc
mov
jo
movsb
mov
push
sbbl
jecxz
loopne
mov
mov
xor
jg
xor
out
adc
mov
jbe
mov
inc
and
sbb
cli
push
loopne
jecxz
iret
mov
xlat
mov
andl
bound
mov
or
and
rorb
or
cmp
adc
fildl
pop
and
dec
add
shl
rcr
cmp
pop
imul
dec
andl
xchg
inc
adc
push
or
inc
add
outsb
push
push
scas
fldcw
loopne
mov
aam
mov
xor
movsb
out
add
adcl
sbb
nop
jle
mov
add
lret
scas
ds
add
dec
data16
ret
push
xlat
int
enter
pushf
ds
adc
xor
mov
insl
mov
movsl
and
pop
mov
dec
cltd
xorb
test
add
add
and
push
fs
stc
ror
into
push
fiadds
and
mov
xor
negl
sahf
test
push
cmp
sub
mov
aam
lea
xor
mov
adc
sbb
xor
scas
or
push
fwait
daa
or
xor
sub
les
arpl
jno
and
test
jno
enter
xlat
sbb
jne
setnp
je
pmaddwd
js
out
daa
test
ljmp
into
jb
je,pn
cmpl
pop
mov
inc
push
insb
add
jecxz
outsl
leave
repz
xor
add
insl
test
mov
adc
sub
adc
cli
xor
aas
lea
push
jmp
pop
sbbb
idivb
seto
shrb
fs
xchg
test
lea
je
and
xchg
jmp
pop
sbb
push
fwait
mov
mov
sbb
les
and
xor
adc
sub
mov
cltd
shll
ret
jb
lahf
push
and
fs
stos
xor
and
inc
in
scas
push
je
ficoms
test
mov
fnsave
cli
inc
cmpsl
testl
cmp
or
cmp
xchg
pop
out
outsb
adc
adc
add
repz
push
in
ds
int
pop
dec
lods
out
in
jmp
popa
push
jo
je
mov
or
lahf
add
pop
lea
ret
enter
fldenv
loop
cld
xchg
jge
push
mov
adc
mull
int
sbb
xlat
repnz
lcall
sti
cmpsl
or
pop
xor
sarb
jecxz
xchg
outsl
jno
mov
js
andl
cld
clc
jb
sub
xchg
lods
inc
jg
ss
sbb
nop
out
ret
or
push
out
jp
push
sub
imul
xchg
jnp
mov
lds
rol
aad
add
mov
neg
in
jge
enter
js
mov
pop
lahf
xchg
jl
adc
inc
dec
scas
inc
cmpb
out
inc
sbb
out
into
mov
adc
or
add
scas
fcomi
addb
jg
mov
shrl
lods
es
cli
je
mov
shrl
pop
pop
leave
insl
andb
stos
test
repnz
adc
in
js
cmpsl
and
sub
cmp
repnz
out
stos
cmpsl
sbb
xchg
jns
xchg
inc
inc
jle
enter
scas
test
lret
fdivrs
testb
fistps
insl
aam
imul
push
add
add
adc
mov
insl
cmp
or
mov
mov
sub
enter
cmpsl
inc
mov
scas
xchg
or
dec
cmpsb
fildll
stos
addr16
xchg
loope
sbb
sbb
xchg
adc
daa
jns
test
pushf
push
imul
sub
sub
mov
cmp
push
mov
cmp
inc
mov
sbb
leave
jb
cmp
inc
add
cmp
aas
sahf
sbb
xor
cmpsl
dec
das
xchg
clc
pop
aam
cmp
jmp
es
push
sub
fsubrs
mov
adc
add
in
pop
into
mov
inc
pop
aas
rorb
jno
lods
mov
mov
call
rcrl
int
and
adc
out
mov
mov
inc
jmp
daa
fnsave
push
push
add
out
pusha
inc
add
jecxz
inc
cwtl
movsb
cld
jecxz
rep
pop
repnz
shll
xor
jecxz
mov
sti
add
fnsave
or
ja
popf
lods
jecxz
rcll
mov
or
in
enter
mov
test
dec
jno
adcl
pop
loopnew
add
lret
insb
mov
push
sbb
flds
cli
jge
xor
xchg
pop
mov
std
xchg
out
dec
fucomi
dec
bndstx
les
dec
push
and
mov
es
call
movsb
inc
pop
adcl
ret
call
jbe
negb
jns
inc
and
shrl
push
mov
call
push
les
jle
scas
cmp
test
or
cmp
xchg
or
leave
popa
mov
adc
sbb
test
insb
ds
arpl
lock
sahf
lods
out
pusha
call
test
push
mov
int
ljmp
mov
mov
pushf
jno
aam
push
inc
and
mov
out
ds
sbb
fidivs
repz
or
call
fsubrs
mov
in
fidivs
ds
aaa
rorl
or
es
push
add
shll
aas
push
je
fnstenv
sub
add
sbb
movl
push
iret
cld
inc
mov
add
xchg
std
out
inc
sbb
fadds
ror
xor
cmp
sub
hlt
adc
stos
adc
pop
fisttps
push
fildll
ljmp
mov
fwait
hlt
cmp
pop
cmp
ss
dec
push
dec
call
mov
dec
inc
xchg
push
and
adc
or
or
jge
jmp
push
insl
lods
ficomps
dec
leave
pusha
jns
adcl
cmp
rorl
sbbb
mov
mov
push
aam
xlat
pop
shl
fsubrs
in
clc
rorl
into
insl
cli
ja
push
pusha
inc
test
dec
dec
xlat
or
addr16
jae
or
insl
fsubrl
push
mov
iret
xor
xchg
or
pop
xor
pop
jns
into
xchg
mov
sarl
nop
inc
cmp
xchg
jp
fsts
into
sbb
cmp
fdivl
dec
and
mov
push
test
mov
push
pop
or
dec
rclb
inc
xor
shlb
dec
and
rol
cmpsl
xchg
notl
mov
lock
mov
testb
lret
xor
or
push
dec
mov
pop
sbb
mov
xlat
push
sub
sub
cmp
jnp
dec
mov
xchg
in
sub
testl
push
cmp
jg
add
xchg
ja
sub
pop
or
leave
insb
xor
sahf
out
stos
xchg
ljmp
mov
mov
push
repz
cmp
scas
sub
mov
ficoml
mov
mov
inc
test
mov
stos
je
fstpt
data16
pushf
flds
lret
scas
cwtl
inc
mov
scas
fdivrs
sti
xchg
or
test
add
cmp
ret
shr
jmp
insl
aad
mov
pop
divb
cmpsl
cmp
fs
add
cmp
aaa
rorb
fadd
push
stos
fisubl
xchg
flds
rcr
out
and
nop
cmpsb
push
sbb
insl
scas
add
or
fwait
sti
mov
mov
mov
dec
in
jl
es
into
enter
fistpll
push
adc
mov
mov
add
ss
int
xor
daa
cmp
pushf
in
cli
sarl
aaa
loopne
jb
ljmp
les
add
dec
push
xor
fidivrs
shrl
adc
out
xchg
lret
jns
push
aas
rcr
or
jge
cli
sbb
inc
shr
jb
jecxz
push
iret
xchg
stos
inc
sub
cltd
xor
or
nop
xor
inc
sbb
fstpt
sti
push
jne
pushf
ret
in
aad
inc
loope
sti
push
pop
jo
int
push
fs
pop
je
pop
xor
ljmp
test
clc
xor
jle
or
push
hlt
xor
xchg
adc
xchg
sbb
out
xchg
dec
mov
int
or
lret
dec
testl
aad
sbb
sub
jo
ds
sub
mov
gs
lahf
scas
push
xchg
aad
cs
test
je
test
jae
aad
sbbb
sub
mov
sbb
mov
jno
inc
push
xchg
dec
jge
jg
sbb
fs
imul
push
mov
sub
inc
cmpsl
aas
jmp
xor
or
scas
fwait
xor
cmp
call
push
and
pop
jae
jp
in
dec
pop
xor
mov
outsl
flds
xchg
sub
pop
outsl
scas
enter
cld
and
mov
rcrb
addl
fnstenv
inc
jmp
xchg
and
ret
mov
xor
repnz
and
cmp
dec
rclb
aad
jno
add
in
rorl
iret
cmp
lock
mov
jnp
or
adc
mov
inc
fwait
test
sub
shlb
jo
push
stos
or
stc
dec
inc
fisubrl
sub
dec
mov
in
sub
rolb
je
loop
mov
or
lret
bound
js
dec
mov
push
lock
cmp
movb
aam
fstpl
cs
dec
add
fisttpll
add
in
mov
xchg
mov
aam
mov
mov
scas
pop
xchg
call
cmp
dec
cli
cmp
push
cwtl
xor
clc
push
in
adc
je
inc
mov
movsb
jecxz
lahf
mov
xchg
push
mov
inc
push
xor
mov
aaa
push
inc
cltd
pop
jge
inc
mov
pusha
jg
repz
mov
clc
shll
shll
sub
stos
arpl
and
mov
int
cmpsb
test
jnp
xchg
insl
sub
jb
into
pop
loope
pop
stc
mov
inc
icebp
xor
out
test
popf
mov
mov
shl
pop
cmc
loope
mov
hlt
repz
inc
in
into
fcompl
loop
xor
jle
add
loopne
lcall
and
movb
xchg
cltd
xchg
push
jmp
cmp
sbb
push
pop
or
pop
mov
cmpb
sbb
sbb
stc
inc
icebp
push
xchg
insl
sub
mov
ret
xlat
lock
std
sub
mov
outsl
or
fstl
push
mov
ficomps
mov
sbb
lods
loopne
scas
sub
sahf
xor
xor
jg
dec
inc
xchg
inc
scas
lahf
stos
dec
rcrb
mov
roll
in
addr16
sbb
or
out
lods
sti
loope
std
cltd
lds
shrl
jae
lods
xor
arpl
cmpsl
mov
adc
xchg
mov
shrb
stc
xor
fs
incl
xor
push
or
xlat
sub
push
pop
das
sub
loop
shl
push
sahf
and
dec
lods
in
push
fadds
cmp
mov
inc
bound
popf
xor
sbb
fucomip
aad
mov
jne
rolb
cltd
pop
shl
lods
lahf
jnp
das
lods
shlb
mov
fisubrs
ud2
ja
and
push
repz
cmp
push
fs
iret
adc
fwait
dec
push
sub
xor
jno
add
addb
jnp
loope
lcall
mov
mov
adc
push
adc
xor
sbb
shr
repz
outsl
xor
test
test
cmp
jmp
ljmp
imul
mov
hlt
adc
ss
cli
fcmovne
pop
int
shlb
es
outsb
sub
je
mov
fs
mov
mov
fnstsw
sbb
jno
ja
lahf
mov
pop
cwtl
xlat
loopne
call
jne
push
addr16
push
xchg
dec
pop
or
pop
inc
inc
ret
push
mov
inc
jnp
adc
je
fnstsw
pop
icebp
push
in
dec
fs
cmp
mov
ret
rcr
jo
notl
jge
push
scas
jecxz
mov
nop
sbb
push
pop
mov
and
insb
outsb
imul
dec
repz
and
das
xorb
bound
movsb
mov
xor
movsl
cmpsl
pop
push
push
lcall
push
inc
lahf
or
hlt
cld
cmp
mov
cltd
test
lret
jo
ljmp
xchg
sbb
jne
mov
je
iret
xor
pop
out
test
push
mov
movntq
xor
arpl
push
mov
mov
pop
xor
test
popa
ljmp
paddusw
in
mov
adc
or
mov
pop
in
push
add
stc
lret
sti
adc
mov
je
cmpl
adc
cmpsl
pop
outsb
fldcw
xor
pop
add
sbb
imul
add
jge
sbb
jg
pop
and
sub
call
sbb
mov
mov
js
dec
jae
enter
add
sub
mov
pop
mov
fmull
cmp
aam
mov
leave
sti
sarb
pop
adc
lea
xor
xlat
jbe
or
cmp
push
or
xchg
or
mov
push
inc
inc
icebp
mov
out
inc
dec
push
xor
stos
repnz
or
and
sbbb
hlt
sbb
adc
dec
mov
jns
lret
lret
or
xor
loope
out
xchg
sarb
pop
loop
push
aam
movsb
out
xor
cmpsl
xor
jmp
add
dec
inc
rorb
sub
xor
adc
push
mov
add
xchg
orl
scas
out
and
jb
pop
ss
mov
cmpsl
ds
lods
pop
je
repz
adc
jp
repnz
and
cmc
mov
inc
lcall
sbb
sahf
mov
mov
mov
bound
add
inc
pushf
lea
adc
inc
adc
pop
icebp
lcall
mov
mov
aam
mov
jb
push
jle
aaa
mov
jle
push
pop
cmc
bound
jl
xor
or
pop
mov
dec
cmpsl
and
lock
cltd
stos
mov
das
mov
cmp
shrb
jo
xor
loopne
mov
jecxz
call
dec
in
cmp
cmp
push
sbb
fbstp
or
jge
pminub
test
mov
mov
ds
into
add
pop
jmp
shll
pusha
jnp
sbb
cmp
popa
adc
inc
jp
jnp
aaa
sub
stos
vcvttps2dq
lea
clc
movsl
lods
or
ffree
push
cmc
push
push
mov
testb
mov
mov
mov
adcb
push
inc
fsubr
test
stos
or
mov
cmpsb
mov
sti
cmpsl
roll
inc
mov
pop
loop
or
mov
pop
sti
pop
ud1
dec
loopne
fldenv
scas
lds
inc
add
arpl
push
xchg
and
lock
ds
popf
icebp
push
cs
fisubl
inc
push
push
push
add
push
in
mov
pop
jae
mov
into
cmpl
pop
lret
shrl
cmp
push
push
push
loope
adc
push
cmc
mov
sbb
leave
popa
cmp
repnz
iret
add
mov
inc
mov
sbb
loope
outsl
push
pop
mov
daa
cli
xchg
nop
outsl
sbb
scas
push
mov
xchg
test
fmull
mov
popa
out
jae
jp
cmc
xchg
stos
xchg
mov
cmp
adc
and
aam
cmp
fisubl
mov
pop
cmc
push
fidivrs
jecxz
inc
imul
push
cmp
lret
test
adc
lods
lret
imul
lea
jo
mov
pushf
out
out
test
leave
cli
and
push
mov
mov
push
pop
idivb
adc
repz
mov
cmp
call
jmp
push
in
dec
inc
mov
stc
xor
lock
inc
fstl
and
jl
inc
adc
jp
add
out
sub
aad
lcall
imul
jne
aad
lahf
lret
jns
rep
jg
mov
jno
daa
mov
mov
rorb
sbb
add
pop
xlat
cwtl
stos
or
popf
popa
push
jecxz
add
cmpsl
and
lahf
leave
sti
aas
into
adc
mov
inc
push
mov
xor
or
nop
daa
es
ljmp
js
imul
int3
in
pushf
int
mov
ret
dec
add
xor
lds
dec
shll
fs
imul
push
dec
xchg
jg
sub
fstpl
cmpl
imulb
push
adc
push
mov
xlat
add
aad
mov
ljmp
cmpsl
cmp
jle
fsub
je
popl
push
lods
std
je
adc
fadd
sbb
dec
mov
pop
loope
jnp
js
sbb
ljmp
pushf
xor
mov
and
mov
or
mov
push
jle
out
push
imul
mov
mov
icebp
fsubr
inc
jnp
jns
cmpb
cmpsl
cltd
xor
out
cmc
sahf
xor
inc
add
lods
aaa
push
arpl
fists
repz
push
xor
jae
ja
gs
inc
mov
neg
push
mov
cmp
mov
push
cmp
stc
call
jmp
mov
imul
in
jns
cmp
aam
xor
push
or
sub
push
out
adc
subl
fistps
hlt
xchg
jnp
fdivp
popa
fcompl
nop
sub
cmp
stos
push
in
test
sub
mov
sar
adc
in
repz
cmp
jp
lret
sub
cld
jecxz
mov
fxch
jno
or
mov
sbb
iret
xor
test
push
sub
jmp
stc
mov
add
xor
jg
or
inc
and
dec
pop
cmpsl
mov
cltd
push
sti
pop
in
pusha
pop
or
out
out
pop
adc
dec
clc
jns
cmp
cmp
push
and
xor
xchg
inc
orl
inc
testl
aaa
xor
push
mov
xorl
fcomps
scas
adc
pop
xchg
and
mov
adcl
clc
cmp
sbb
jns
pushf
stos
das
popf
xchg
scas
arpl
jge
rcrl
mov
cli
stos
inc
fsubrl
in
std
leave
pop
xor
insb
inc
lods
movsl
adc
dec
xchg
jns
div
adc
cmp
inc
adcl
loop,pt
data16
dec
adc
jmp
jp
pop
add
jae
loop
jne
push
adc
jp
cmp
add
leave
xor
cwtl
dec
inc
pop
jno
imul
cmp
push
cmp
aad
push
lret
fwait
jmp
aad
leave
das
std
lods
mov
xchg
pop
sub
cmp
inc
inc
adc
dec
aam
ret
outsb
inc
sarl
das
push
mov
je
ja
mov
mov
mov
jno
arpl
in
fisttpll
mov
fsubrl
mov
sub
mov
push
lods
lds
mov
lret
mov
dec
sub
ret
orl
in
daa
mov
shrb
movsl
or
cmp
push
fisubl
decb
std
lods
mov
pusha
fwait
jge
or
and
add
fcom
or
jecxz
shl
not
addr16
ss
xor
das
pop
adc
push
ss
add
test
loop
adcl
sbb
adc
iret
mov
aas
add
jbe
outsl
daa
pop
adc
aas
xchg
add
adcb
or
cmpsb
shrl
sbb
scas
mov
mov
jno
xchg
inc
cmp
cmp
adc
cmpsb
adc
or
mov
sub
cmp
xor
or
xchg
aas
negb
xor
mov
movsl
xchg
push
daa
add
jge
and
mov
pop
aad
mov
inc
xor
sti
jne
adc
add
jnp
test
into
movsl
push
sub
xchg
dec
pop
add
shlb
xor
xor
enter
push
stos
inc
mov
lret
mov
mov
xor
mov
jmp
call
ret
xor
adc
ss
shr
jmp
sbb
into
mov
mov
pushf
jle
ret
fldenvs
pop
sbb
jns
cwtl
or
sar
push
sti
cmpsl
out
pop
or
pop
pop
cmp
cmc
int
int
xchg
rclb
rorb
rcr
jne
lahf
mov
jl
int
and
nop
mov
mov
jne
aaa
pop
ret
and
cs
mov
fs
sub
lahf
ss
xor
cmc
lcall
roll
sti
jle
sub
fistps
xchg
push
sub
add
sub
movsb
das
lea
stc
das
pop
xor
in
daa
fbld
aam
xchg
jne
cmpsl
cmpsb
pop
repnz
fisttpl
cmpsb
shrl
sbb
cli
mov
shl
jl
inc
jns
test
adc
push
div
cmpsb
cmp
xchg
stos
push
fsubs
shrl
insb
leave
pop
pushf
fidivrs
dec
pop
xlat
push
stos
jbe
nop
inc
stos
testl
lods
inc
or
cld
pop
xchg
adc
mov
rolb
aam
movsb
and
mov
sub
dec
add
xor
cmpl
fstl
mov
lcall
and
scas
test
out
sbb
adc
add
pushf
jmp
lea
imul
sub
mov
jp
push
xchg
les
arpl
cltd
mov
fs
cltd
dec
push
je
push
cwtl
fistpll
insb
test
test
push
mov
sub
arpl
pop
movl
sbb
dec
jge
sti
jle
xor
js
mov
adc
push
std
ret
xchg
jmp
sarb
push
in
jmp
dec
sbb
xchg
stos
mov
mov
nop
lahf
scas
lods
loopne
jp
fstpl
sub
xchg
push
push
mov
divb
push
in
xchg
repz
data16
rorl
inc
xchg
mov
jmp
xor
movsb
mov
mov
jecxz
cmpsl
ds
pop
push
dec
mov
mov
xchg
shll
xor
outsb
fs
add
cmc
ss
inc
and
mov
dec
dec
clc
dec
outsl
mov
fbld
sub
in
sar
imul
loop
int3
popf
mov
sti
mov
repnz
mov
push
aam
mov
fistl
jg
mov
mov
push
push
dec
mov
popf
xchg
scas
inc
sahf
cmp
int
xchg
es
ficomps
cmp
subb
mov
and
xor
popf
jecxz
dec
inc
mov
cmc
mov
or
cli
jae
sub
fs
push
push
adc
jae
cmp
es
loop
dec
and
jbe
test
in
mov
lods
mov
adc
movsb
gs
adc
ja
push
ffreep
shrb
movsl
sarl
fsubrl
lock
orb
shlb
push
pop
sahf
popf
add
jg
sarb
dec
push
scas
rcrb
out
cmp
lea
dec
stc
or
scas
mov
lcall
jecxz
mov
jo
xchg
push
scas
popa
stos
andl
inc
xor
xchg
cmp
jecxz
dec
enter
test
add
pop
leave
dec
pop
int3
sub
je
scas
repnz
add
inc
jg
jne
cmp
out
xor
sbb
insl
xor
testl
mov
into
sub
mov
test
or
fnstcw
inc
mov
xchg
jecxz
loopne
shlb
jle
in
clc
ret
insl
or
icebp
mov
sub
fildl
push
popa
ret
hlt
lds
mov
and
jge
pop
jmp
cmp
jg
in
mov
roll
sbbl
in
dec
stos
rcr
xor
xlat
out
cld
mov
lcall
rolb
xchg
sbb
sti
jp
adc
xor
fwait
xor
in
cltd
and
cmpsl
cli
push
add
lcall
push
sbb
fldt
and
fadd
xor
ljmp
inc
dec
js
shrb
fwait
adc
mov
mov
dec
add
scas
xor
shll
cmpb
imul
fmuls
or
push
mov
lods
mov
xchg
pop
test
pop
xchg
mov
das
lret
cmp
in
aaa
sbbb
xchg
mov
pop
dec
aaa
xchg
fs
ret
dec
es
jmp
adc
pop
stos
ret
jb
jge
ret
sub
add
mov
or
leave
cmpsl
sub
sarb
icebp
push
pop
movsb
out
mov
aam
mov
ret
rcll
cs
dec
or
maxps
or
adc
sub
data16
ret
xor
in
dec
push
mov
xchg
shrl
and
lret
mov
jb
mov
push
stos
sbb
fbstp
mov
mov
pop
loop
je
lcall
stos
sarb
push
outsb
jno
es
scas
loope
lods
popf
je
out
stos
xor
xor
mov
adc
inc
out
and
dec
arpl
cmc
jnp
fsts
push
push
in
and
jae
mov
int
mov
jge
xchg
int
mov
mov
aas
mov
jg
sub
sub
xchg
jmp
ljmp
rcll
cmp
dec
lods
lahf
aas
inc
pop
xchg
jecxz
or
and
in
or
xchg
repnz
lods
mov
nop
mov
sarl
cmp
aam
rorb
mov
js
jp
mov
sarb
rclb
add
sbb
dec
loope
cmp
in
pop
daa
insl
imul
jle
xchg
pop
mov
sub
jnp
jnp
mov
xchg
fsubs
dec
or
roll
cwtl
das
jns
and
cmp
xor
aad
jne
fnstsw
xor
jae
xchg
xchg
mov
aaa
outsb
das
addr16
mov
inc
mov
hlt
into
aad
mov
aad
cld
ljmp
sub
lret
cld
push
sub
and
pop
cs
pusha
pusha
jo
data16
test
xchg
pop
jg
mov
fdivrs
loopne
cmpsb
lcall
and
roll
jo
bound
pop
lods
and
sub
iret
pcmpeqd
xchg
add
mov
mov
pop
jne
xor
xchg
insb
shrb
out
in
pop
hlt
sbb
fs
sbb
lret
or
fidivrs
je
into
iret
push
and
pslld
xchg
dec
mov
fsub
jo
mov
xchg
int
mov
mov
popf
or
or
es
pushf
mov
add
mov
dec
call
or
repz
les
mov
dec
dec
jg
jne
aaa
popa
push
push
shll
and
mov
aam
or
loop
cmpsl
and
sbb
cmp
pushf
sub
ss
das
pop
push
or
leave
and
push
sti
inc
test
fwait
repnz
pop
add
push
dec
xchg
dec
test
cmp
les
pop
pop
jge
mov
and
mov
test
xlat
insl
and
dec
mov
sahf
cmpsl
rclb
jae
jns
adc
es
xchg
mov
sbb
xchg
inc
inc
fnstenv
mov
xor
xchg
fnstenv
cli
cld
or
outsl
mov
lock
dec
frstor
push
inc
mov
fimull
loop
mov
iret
popf
dec
or
cmp
out
sub
iret
cmp
insb
xor
imul
xchg
jbe
ret
xor
cmp
mov
xor
and
fistpl
push
test
jg
sub
push
enter
or
fstpl
mov
mov
es
and
xchg
jbe
adc
dec
xchg
lock
fcmovnu
mov
mov
shrl
pop
movsl
outsl
jmp
dec
xchg
push
mov
cs
push
adc
divl
fisubl
movsl
add
mov
ss
xchg
xchg
repz
ret
and
pop
ljmp
mov
adc
or
movsl
dec
xor
dec
addr16
cmc
nop
push
mov
testb
cwtl
gs
inc
mov
cltd
jmp
or
rolb
mov
xor
cltd
or
xchg
add
mov
push
push
scas
nop
inc
pop
scas
push
lcall
pop
jne
aas
scas
mov
and
mov
leave
jg
out
sarb
cmpsb
xchg
pop
xlat
icebp
scas
add
mov
push
cltd
push
ficoms
test
or
jns
xchg
ret
jmp
mov
push
aas
pusha
outsb
sbb
adc
or
js
loop
loopne
add
cmpsl
adc
sahf
or
jno
sub
loop
push
pop
cmp
xchg
sub
push
dec
rcr
and
cmpsb
mov
push
jl
aaa
insl
lea
lds
adc
popa
cmpsb
push
out
xlat
adcb
cmp
ljmp
cwtl
lock
orl
adc
jp
orl
daa
xor
jno
stos
mov
cmp
jno
orb
je
add
xacquire
mov
imul
js
mov
lahf
in
ljmp
and
push
sub
add
ds
add
shrl
pop
push
fs
pop
or
and
adc
xchg
mov
xor
inc
pop
sbb
call
jnp
std
call
jmp
sahf
int3
push
fldenv
push
fiaddl
sbb
mov
repnz
popf
fadds
ret
and
pop
add
enter
rcrl
and
and
xor
cmp
cmp
in
loop
jecxz
inc
add
inc
subl
push
outsl
cmp
mov
repnz
pop
loop
out
cld
cmpsl
mov
adc
stos
sub
fstp
imull
jae
mov
jmp
out
aam
pop
fsubrs
sbb
jle
mov
add
mov
movq
sbb
add
into
lahf
add
out
test
cmpsb
lock
stos
sti
inc
out
or
jg
sub
or
cli
xor
jae
add
sti
jp
dec
pushf
int
lods
incb
lret
in
negb
cmp
adc
jecxz
repnz
psrad
mov
mov
ret
inc
mov
jno
test
sti
scas
rolb
mov
gs
mov
div
adc
inc
sbb
popa
pop
adc
aaa
aam
fs
dec
mov
popa
cmp
ret
outsb
addb
jno
and
jmp
leave
int3
leave
xor
mov
xchg
sarb
cmpsl
mov
xchg
dec
mov
add
pop
sbb
test
mov
jl
fimuls
insb
pop
hlt
and
adc
ss
xor
jnp
inc
out
pop
and
pop
xchg
aad
pop
adc
fadd
fcompl
mov
jp
jne
nop
jae
mov
cli
xchg
add
sbb
and
or
adc
das
push
cmp
cmpl
xor
xchg
mov
repnz
sbbl
movsl
daa
into
movsb
stos
popa
jb
addr16
jg
push
mov
out
push
sbb
push
out
jbe
and
or
inc
jl
in
cmp
incl
cmc
cmc
cmp
fnstcw
dec
outsl
into
gs
push
dec
push
add
jne
dec
and
dec
dec
cli
mov
xchg
or
cmp
insb
insl
adc
aas
dec
sub
gs
mov
in
out
orl
cmpsb
std
xchg
sbb
cmpsb
daa
jb
push
out
int
loopne
adc
push
and
sbb
push
mov
aam
out
jo
xchg
pusha
cmp
ret
pop
xchg
cli
dec
or
out
jge
pop
sub
xchg
or
fmuls
mov
shlb
adc
insl
loopne
jb
cmp
lods
cmp
ret
out
hlt
psubb
ret
xchg
lcall
jecxz
adcb
pop
stos
arpl
push
push
mov
fnstcw
xor
pop
movsb
fldln2
cmc
mov
xchg
mov
jns
pop
rcr
scas
sbbl
pop
popa
jmp
ds
call
mov
loopne
xchg
aaa
or
shlb
pop
xchg
sub
and
imul
dec
imul
loope
aad
fsts
stos
or
sbb
mov
add
cmp
or
rcrl
pop
lahf
or
cltd
out
mov
adc
xorb
out
lds
mov
dec
xchg
adcb
enter
mov
adc
xchg
insb
ret
std
mov
sub
iret
lods
out
jnp
inc
xchg
lret
scas
pop
les
jmp
adc
or
dec
es
jbe
mov
out
lods
sub
clc
and
adc
sub
sbb
sub
push
push
and
add
add
aad
mov
fstp
pusha
mov
out
push
sub
lods
ljmp
shr
pushf
sbb
pop
sbb
movl
cmp
loopne
and
addr16
sub
ret
pop
incb
cmpsl
imul
insb
dec
adc
mov
push
xchg
ret
mov
or
roll
pop
sub
ficompl
rclb
xor
push
push
inc
ret
push
mov
inc
sub
arpl
xor
or
jne
push
in
rol
mov
ret
jecxz
out
push
or
mov
mov
jle
pop
clc
dec
sub
inc
mov
call
pop
jge
jmp
and
scas
or
jecxz
dec
inc
lods
in
rcrb
xor
movsl
mov
cli
push
jbe
sub
int3
xor
mov
lock
sub
fsubr
lahf
shl
xlat
and
inc
or
sti
xchg
and
out
mov
cmpsl
push
sbb
jl
or
push
cld
in
clc
jno
and
push
in
jne
push
mov
fs
pop
sub
add
mov
decb
jo
pusha
ror
lret
xchg
mov
mov
fsubrl
jb
dec
mov
test
sbb
dec
cli
fs
sub
inc
xchg
scas
adc
loop
js
cmpsl
ret
and
push
or
fwait
push
lea
call
fstpl
cli
xchg
sub
loope
jb
xor
push
add
mov
lret
mov
pushl
pop
cmc
lret
or
mov
lahf
cs
imul
sbb
int3
shrb
or
jo
and
cmp
xchg
pusha
addl
jmp
lods
xor
mov
xchg
jl
push
repz
sub
pop
and
push
sub
and
or
mov
out
add
mov
pop
pop
in
push
and
mov
pop
xchg
mov
out
sbb
fbstp
jle
outsb
nop
movsb
add
sarb
lea
movsb
xor
fisubs
jmp
movsl
sub
pop
adc
nop
cmc
dec
dec
push
xchg
outsb
adc
loopne
idivl
xchg
sbb
sub
aas
dec
inc
xor
inc
push
pop
sub
jp
pop
add
sub
orl
cmp
jl
sub
ja
push
popf
inc
adc
xor
pop
xor
mov
push
xchg
push
push
xchg
jl
sbb
sarb
mov
sarl
jnp
xchg
dec
mov
insl
sub
shrl
out
cld
xchg
xchg
sbb
adc
cmp
mov
mov
ficoml
inc
fsubs
fnstenv
add
mov
mov
xchg
cmp
lock
cld
into
adc
aaa
dec
and
clc
xchg
dec
mov
ret
lahf
dec
dec
inc
pop
jle
pop
ficoml
push
inc
out
xchg
xchg
cmp
movsl
jbe
or
jno
mov
mov
and
push
push
or
pop
mov
stos
mov
in
and
pop
mov
sbb
push
mov
sti
pop
in
movsl
cmp
cmpsl
ljmp
nop
addr16
addr16
add
mov
xchg
in
leave
pop
jb
fildl
sbb
mov
loope
sbb
mov
jae
sahf
lock
mov
mov
in
xchg
into
fnstsw
mov
mov
rorb
cmp
pop
pop
lret
push
int
push
and
bound
je
mov
mov
inc
popf
stos
jae
lret
das
jge
iret
dec
enter
pop
arpl
jmp
lods
sub
inc
sarl
mov
xchg
sahf
hlt
and
mov
in
mov
inc
xor
dec
sbb
add
testl
call
xor
sbb
dec
inc
add
dec
ss
andb
ss
dec
insl
pop
sahf
pop
iret
xchg
sub
mov
mov
test
dec
dec
fnstcw
in
je
cltd
fnstcw
inc
cmp
adc
sub
mov
sbb
mov
iret
jmp
mov
adc
dec
jae
bnd
cs
sarb
cmp
aad
mov
fwait
ss
xchg
insl
cmp
sbb
ret
or
imul
pop
xchg
pop
repz
icebp
jns
mul
pop
repz
inc
inc
ss
loope
jecxz
fs
ljmp
sub
push
inc
add
clc
sahf
sub
lret
scas
mov
push
mov
sbb
xor
je
sbb
mov
push
jne
cmp
into
and
or
xor
fbstp
pop
xchg
int3
and
xchg
out
rolb
cli
and
xchg
push
dec
xchg
cmp
jmp
repz
xor
or
mov
push
in
dec
frstor
jbe
add
test
jge
mov
push
iret
dec
dec
arpl
int3
pop
push
dec
dec
in
mov
pop
insb
sti
mov
test
fs
popf
call
loop
and
rcr
sbb
ret
aas
inc
bound
pop
pmulhw
jmp
cmp
and
mov
daa
popa
scas
pop
std
inc
shl
dec
push
sbb
dec
cmp
xchg
inc
insb
and
push
mov
js
sub
shrl
mov
daa
cmp
insb
fisubrl
lret
bound
outsl
loop
sbb
gs
jge
shlb
jae
mov
sub
outsl
lds
push
mov
rorl
outsl
out
and
cld
dec
jecxz
out
push
es
cli
cmp
andb
sarb
jle
add
add
mov
insl
pop
cmpsl
cmp
xchg
mov
push
xor
sub
stos
push
lea
cli
ljmp
out
xor
xchg
xchg
push
push
out
mov
lcall
cmp
popa
inc
pushf
mov
dec
mov
inc
mov
or
sbbl
sub
jle
sbb
cmp
mov
pop
testl
mov
pop
jno
and
pop
ds
ret
or
fwait
test
inc
std
aad
adc
sbb
xor
outsl
xchg
and
mov
ret
sarl
test
jp
adc
push
sbb
les
pop
fcompl
cltd
xchg
sbb
mov
dec
pop
ret
les
aaa
mov
cld
dec
out
lcall
shll
fcompl
fimuls
pop
cmp
nop
fbstp
dec
or
mov
inc
cli
and
mov
mov
fs
fcomp
xor
ficompl
pushf
cmp
mov
es
ret
mov
push
je
lds
mov
sahf
cli
add
pop
push
fdivl
repz
jg
mov
ficompl
testb
jge
mov
and
and
fsubs
into
xchg
push
mov
fdivrs
cmp
stos
in
aas
sbbl
inc
add
jp
cltd
inc
jb
inc
mov
iret
xchg
ljmp
rolb
jle
das
fs
fcmovb
dec
fcomip
mov
hlt
jle
and
scas
jo
sahf
pop
fistpll
jge
loop
mov
mov
cmp
push
xchg
jg
pop
push
popa
insb
adcb
enter
push
mov
jnp
out
cwtl
das
jb
or
aam
xor
movsb
jmp
cmpb
jp
mov
fwait
and
dec
dec
mov
sub
cmp
inc
fcmovu
jbe
test
push
push
xor
repz
mov
pushf
mov
and
cmp
pop
jne
lea
testl
mov
lock
jle
mov
mov
lods
jmp
das
xchg
out
test
add
mov
mov
push
add
dec
xchg
scas
ret
int
fucomi
std
mov
mov
jnp
aad
push
iret
incl
cltd
lahf
imul
ja
add
ficomps
out
pop
or
gs
sbb
fsubs
and
stc
cwtl
test
cmp
and
xchg
pop
dec
ret
jle
bnd
sub
testl
pop
leave
test
lahf
popa
fcoml
cli
or
cmpsl
insb
add
mov
push
lock
test
dec
popf
adc
jae
gs
cltd
mov
shl
mov
ficoms
js
or
daa
adc
dec
pusha
sub
cmc
inc
jo
or
xchg
mov
in
cs
pop
xchg
int
add
add
in
pop
mov
or
xchg
inc
mov
popa
arpl
xchg
sbb
and
sti
or
ret
test
leavew
fstps
mov
cld
nop
scas
lcall
jne
repnz
gs
fistpl
ret
mov
hlt
into
pop
or
and
jns
cmc
cltd
xchg
mov
lock
xchg
lret
lcall
lods
adc
push
into
sahf
xor
push
push
mov
cmp
or
jp
fwait
cmpsl
into
sub
iret
das
mov
insb
mov
faddp
imul
jl
sub
cwtl
sub
mov
rorb
outsl
pop
test
lock
fnsave
jl
les
mov
shlb
jle
xorb
sti
push
xlat
testb
inc
popa
mov
popf
into
xchg
stos
adc
test
pop
pop
hlt
add
out
pop
mov
insb
in
cmp
mov
jno
sbb
mov
insb
ds
ss
mov
imulb
pop
add
es
xchg
test
mov
js
push
dec
adc
mov
jp
adc
lcall
lret
mov
jp
xchg
sahf
push
or
lahf
inc
mov
call
pop
daa
dec
rorb
mov
xor
mov
fstps
cmp
inc
jl
lods
nop
mov
xchg
or
adc
pushf
out
sub
stos
and
addr16
cwtl
test
push
ret
adc
fcmovu
jl
xor
imull
scas
lret
rolb
add
mov
mov
fcmovbe
imul
imul
jno
mov
ja
js
data16
cmc
or
nop
sub
adc
shrl
dec
in
cmpb
stos
dec
sti
sarb
sub
popa
cmp
shll
inc
leave
test
aaa
sbb
dec
adc
sbbl
popa
cmpl
dec
jae
adc
cmc
sub
xchg
sub
mov
jg
adc
fs
sub
pop
dec
sbb
mov
add
cmc
rclb
push
cld
xchg
mov
pop
out
loop
enter
xchg
test
out
and
add
insl
jl
arpl
xorl
shrb
xchg
mov
pop
ret
aam
and
in
mov
jmp
and
lock
xchg
and
fcoms
mov
outsl
adc
mov
dec
push
fidivs
nop
call
lret
rep
push
repz
fdivl
inc
fbld
scas
ss
idiv
ret
xor
mov
insb
lds
dec
sub
mov
push
fdivs
mov
dec
and
sbb
cltd
bound
stos
frndint
jb
mov
pop
test
clc
ret
int3
lods
add
int
push
es
jnp
sahf
xor
mov
lcall
cmp
pop
daa
or
mov
clc
lods
test
bound
cmpsl
adc
imul
cli
adc
xor
pop
sub
mov
rorl
mov
decl
fidivrs
cmpsb
jl
lea
stos
shrl
xchg
js
jecxz
ret
in
lock
dec
sub
std
out
cld
mov
push
lcall
je
mov
sbb
jb
dec
mov
jo
sub
neg
imul
gs
cwtl
fs
and
sahf
xlat
sub
mov
insl
sub
adc
cli
cmp
sub
repz
and
sarb
adc
push
outsl
pop
jo
testl
cmp
ss
mov
decl
xchg
jb
add
xchg
push
sbb
hlt
fbstp
lcall
add
mov
pusha
xchg
enter
push
aas
or
fwait
push
daa
inc
out
inc
inc
xlat
cmp
scas
xchg
cmp
in
nopl
pop
xchg
mov
xor
push
or
adc
nop
dec
adc
aas
cmp
sub
mov
inc
lds
lcall
inc
cld
aas
jae
cmp
enter
sbb
cmpsl
loopne
jp
jge
pop
ja
orl
pop
cmp
lret
mov
push
std
xor
mov
jo
leave
bound
jp
insb
and
iret
xchg
outsb
js
icebp
mov
insl
add
dec
xlat
data16
in
out
cli
jne
sbb
mov
add
mov
xchg
push
in
pop
cmpsl
aad
inc
out
xchg
adc
popa
imul
imul
jmp
or
mov
lret
jnp
pop
pushf
js
lock
fdivl
add
ficompl
cmp
pop
or
jnp
inc
adc
mov
add
xor
scas
enter
call
fcoml
scas
arpl
outsl
popa
test
mov
jb
dec
movsb
xor
xchg
xor
sub
rorb
inc
xor
ljmp
jno
iret
xor
dec
mov
fst
hlt
addl
or
adc
inc
or
je
sbb
jp
xlat
mov
sbb
test
push
push
ja
addr16
out
adc
adc
aaa
xor
inc
pushf
loope
fdivp
xchg
cmp
add
fwait
lods
out
sti
lea
inc
mov
lret
data16
pop
fstpt
movb
dec
lahf
cmc
stos
popl
lea
aam
imul
mov
scas
repnz
jge
push
mov
push
in
test
frstor
rclb
sahf
pusha
je
cmpsb
gs
inc
lock
mov
xchg
add
or
ja
and
or
in
sub
mov
mov
ja
adc
popf
mov
cs
pusha
lds
repnz
xchg
dec
pop
clc
adc
cmpsb
inc
mov
test
sub
loop
shll
mov
rolb
in
cmpsb
enter
outsl
push
jp
add
jns
in
xchg
pop
jnp
mov
popa
xchg
icebp
sbb
rorb
and
push
fwait
aam
movsl
mov
out
push
pop
inc
push
inc
mov
jecxz
xlat
mov
insl
and
stc
sahf
push
hlt
xchg
sub
xbegin
jmp
ss
iretw
in
mov
xor
idivl
ljmp
test
sub
lahf
mov
aaa
clc
insl
adc
les
sbb
lret
jmp
xchg
sbb
jg
shll
sbb
push
dec
filds
repz
and
cwtl
lahf
ror
imul
es
sub
adcl
lret
xor
jl
cmp
sbb
dec
xchg
dec
es
sbb
ss
xchg
sub
or
mov
iret
jb
mov
lret
lock
xor
inc
lret
mov
xor
or
jnp
pusha
pop
mov
jge
dec
aad
ja
lock
roll
in
pop
popa
fdivl
out
mov
sti
xchg
pop
aam
pop
mov
inc
outsl
add
pop
xchg
mov
cli
cs
ja
jmp
lods
sti
sbb
inc
cmp
mov
pop
iret
stos
js,pt
cwtl
in
xor
push
jae
subb
cltd
or
pop
aas
mov
xchg
andl
pop
mov
rorl
mov
or
xchg
xchg
xchg
lret
lds
mov
rolb
lahf
or
mov
sti
lahf
sub
je
lds
std
dec
pop
lock
add
xor
xchg
push
ja
adcl
inc
mov
pop
ljmp
adc
pop
iret
xlat
test
lods
aad
lret
push
in
ds
mov
jg
xchg
mov
outsl
and
jge
test
popa
into
xchg
jecxz
xchg
mov
sarl
and
jp
mov
add
cmpsl
out
inc
mov
jmp
das
lahf
es
fucomp
dec
sub
in
dec
inc
jmp
in
dec
pop
ret
mov
push
dec
pcmpgtb
push
xchg
xor
sar
dec
fwait
pop
pusha
lret
das
gs
push
xor
jo
lret
mov
or
pop
shll
test
jne
movsb
pop
fdivl
push
fdivrs
mov
xor
or
das
aas
aad
inc
jne
movsb
repz
jp
sbb
xor
xor
andl
cmp
scas
or
push
sub
stc
add
cmc
movsb
mov
cmp
clc
iret
pushf
aam
push
push
sarb
aad
fnstcw
dec
dec
lret
fs
mov
test
fwait
jno
test
notl
xor
out
cmp
pop
xchg
push
jg
sbb
insl
adc
insl
inc
lea
fisubrl
insl
sub
pusha
pop
cmpsb
in
insb
in
stos
cmpsl
jl
add
mov
lods
lcall
leave
dec
in
pop
push
pop
mov
xor
pusha
jmp
shl
dec
inc
loope
sub
nop
push
pushf
faddp
scas
sbbb
test
mov
incl
sar
aam
mov
loope
or
aas
xchg
push
pop
add
or
jg
std
nop
imul
push
jbe
inc
test
loop
push
test
loop
in
xchg
rcll
pop
cmp
sbb
aad
cmp
push
mov
pop
pop
in
inc
dec
add
addr16
bound
add
xchg
xor
in
and
pushf
or
fs
popf
lods
pop
pusha
hlt
inc
jno
outsl
push
mov
push
jp
cs
pop
pop
mov
inc
lahf
scas
call
imul
mov
mov
jp
adc
dec
rorb
pop
xlat
or
fsubrl
stc
stos
rcrb
inc
dec
out
mov
iret
xchg
or
vmovups
shll
fucomp
cmc
xchg
mov
xchg
lahf
test
jnp
sub
pop
pop
mov
mov
add
pop
aas
cmpsl
aam
in
rolb
or
xchg
cwtl
rol
je
in
dec
loop
into
ja
in
jae
out
mov
insl
fidivrl
xchg
sub
subb
dec
cmp
jno
add
mov
fidivs
inc
or
jns
dec
dec
and
pop
mov
in
xchg
cmpsl
movsb
repnz
add
rcr
push
outsl
xchg
fsub
stos
or
fwait
adc
dec
cmp
jp
jg
xchg
fwait
dec
pop
jmp
out
inc
negl
lahf
cmc
mov
jae
cld
and
mov
dec
adc
xor
mov
cwtl
xchg
cmc
fxch
leave
sbb
inc
push
sub
lods
jmp
test
mov
dec
leave
xchg
dec
out
fdiv
outsb
fidivs
loopne
ja
add
or
cmc
mov
cmpl
cmp
sbb
outsl
push
lods
fwait
cmc
mov
sub
xor
dec
in
jo
xchg
dec
arpl
in
xchg
sbb
lcall
stos
sbbl
rolb
mov
js
xor
jns
dec
sub
fldenv
jns
xor
insl
push
mov
rep
add
mov
enter
lret
stc
sub
jge
shll
adc
rcl
icebp
sbb
movsl
inc
adc
push
fwait
sub
jmp
lret
xchg
jmp
lock
mov
orl
xor
dec
pop
adc
sbb
shll
fmulp
movsl
sahf
aam
rcl
lods
out
jge
lods
cltd
pop
ds
jecxz
adcl
mov
sub
cmp
pop
dec
test
push
addr16
xor
xchg
int3
sub
movsb
pop
cmpsb
inc
inc
and
int
fidivrs
add
pop
dec
mov
mov
pop
dec
pop
sbb
outsb
mov
sub
mov
in
inc
arpl
dec
fs
push
sbbl
xlat
fcomip
adc
clc
adc
js
lret
imul
call
inc
out
ja
ret
pop
flds
inc
cmp
xor
push
mov
mov
mov
jbe
cmp
sub
lcall
sub
and
inc
and
xchg
out
inc
fsts
addl
pop
pop
inc
stos
inc
je
cmp
sbb
ret
cmp
mov
mov
xor
mov
cmp
push
inc
push
movsb
mov
popa
ja
popf
jge
out
mov
sbb
pusha
ret
enter
xchg
pop
add
mov
inc
inc
adc
aas
sub
in
xor
mov
jae
mov
jnp
andb
mov
dec
loope
or
dec
push
xor
int
pop
mov
imul
pop
mov
and
popf
pop
jno
out
dec
hlt
push
clc
pop
jno
xchg
mov
stos
inc
shl
jge
adc
add
out
and
mov
dec
pushf
test
push
adc
sbb
clc
xor
xor
ret
add
imul
ret
cmp
add
inc
std
adcb
cmpsb
and
lret
lods
test
out
jo
xchg
or
cmpsb
mov
outsb
lcall
adc
xchg
negl
mov
xchg
xor
inc
adc
add
mov
stos
push
daa
lea
or
xor
mull
out
rolb
movb
nop
mov
jae
dec
jg
xor
hlt
dec
xchg
push
cmp
pop
lds
push
flds
imul
fwait
mov
cli
inc
cwtl
and
in
inc
or
pop
push
loop
jb
test
bound
jmp
rclb
cmp
sbb
lahf
test
adc
in
cwtl
pcmpeqd
inc
sbb
fldt
loop
dec
loope
xor
xchg
adc
jb,pt
outsl
jno
jne
movsl
mov
mov
xchg
test
negl
push
mov
lods
inc
test
dec
push
fmuls
bound
xchg
lret
jns
pop
inc
push
jbe
pop
xor
mov
sub
aas
ret
jb
psllw
xchg
or
stos
cwtl
incb
add
ret
push
mov
std
cmp
inc
mov
pushf
lods
fbstp
cli
jp
inc
add
lea
das
xchg
dec
aas
or
subb
in
inc
fstps
mov
divl
jle
mov
pop
dec
xor
add
or
aas
pushf
xor
mov
adc
jecxz
mov
cmp
push
jge
inc
outsb
gs
sti
inc
cltd
jmp
shl
iret
cltd
jae
lock
loop
outsl
rcll
jne
jl
mov
dec
cmp
jle
fnstenv
xchg
in
aas
xlat
mov
in
ja
mov
dec
lds
xor
dec
mov
bound
shlb
inc
pop
lock
xor
int3
add
arpl
dec
add
rclb
push
bound
shll
cmp
data16
pushf
stos
fincstp
inc
shrl
repz
and
repnz
arpl
leave
scas
jge
jl
fst
orb
pop
cmp
mov
insb
cmp
jbe
jle
vfmaddsubpd
cmp
jge
pop
ja
jmp
minps
mov
lret
adc
aas
cwtl
push
add
and
dec
dec
xchg
inc
test
mov
cmp
inc
or
dec
dec
push
imul
je
sbb
daa
stos
mov
decl
pop
mov
scas
inc
repnz
cmp
int
imul
inc
cli
inc
sub
ja
push
in
sbb
lret
fwait
cmc
adc
imul
scas
jae
mov
xor
mov
les
rcrl
push
add
fnsave
or
jns
into
in
xor
fsubrl
popf
gs
leave
in
je
jne
or
int
inc
pop
repnz
xchg
and
rcl
stc
cwtl
xchg
call
jmp
shrl
pop
test
cld
lods
cld
xchg
lret
adc
nop
popa
sbb
in
cmp
pop
icebp
into
sbb
dec
leave
cs
in
cmp
ss
aaa
cmp
or
or
xor
mov
jge
sarl
cmp
cmp
aaa
aaa
pushf
dec
lcall
dec
sub
cmp
out
shlb
lods
inc
out
rorb
movsb
loopne
push
sub
sbb
hlt
lret
mov
push
rcrb
cli
ds
test
stos
mov
jae
std
sar
xchg
xchg
sub
ds
xchg
mov
out
mov
enter
ret
mov
dec
ficompl
loope
dec
inc
sub
jl
stc
and
jle
insl
jg
xchg
insl
pop
insl
sub
jae
das
and
shlb
cmp
cmp
mov
sub
cmc
or
mov
lahf
add
std
pushf
std
jae
push
jecxz
dec
mov
pop
shlb
push
je
lock
xchg
push
xchg
cmp
fwait
shlb
pop
cmpsb
les
cli
dec
out
add
aam
insl
add
stos
das
andl
dec
and
pop
insl
mov
cmp
stc
incb
push
dec
test
pop
ljmp
jecxz
test
lea
pop
mov
mov
stc
and
mov
cmpsl
repnz
mov
sub
test
cmp
xor
stc
ret
add
and
ja
or
sub
mov
dec
xchg
mov
push
jle
pop
jg
or
mov
push
les
stc
cwtl
mov
and
js
inc
pop
ficoml
popa
popa
push
add
test
je
jecxz
add
cmp
cmpsl
sbb
inc
inc
ss
test
jbe
dec
out
leave
cmp
in
ret
pop
xchg
scas
xchg
test
ja
imull
testb
int3
es
mov
xchg
stc
or
mov
divb
pusha
repnz
or
loope
std
mov
mov
loopne
lds
add
jo
xchg
stos
mov
jmp
in
sbb
inc
cltd
xchg
mov
loopne
jnp
sbb
mov
inc
jb
or
pusha
mov
xchg
mov
stos
sbb
adc
xchg
mov
xchg
dec
or
sti
mov
call
push
test
cwtl
data16
idivl
pop
push
ret
repnz
ss
mov
adc
push
es
out
pop
and
push
sub
pushf
mov
lods
xor
and
push
pop
push
movsb
outsl
jnp
scas
mov
push
mov
dec
cmp
push
jge
pop
cmp
mov
xor
mov
je
push
sub
rorb
xchg
and
mov
sub
bnd
sbb
insb
dec
hlt
sbb
pusha
subl
stos
movsl
jno
roll
jl
xor
ss
mov
aam
mov
clc
daa
gs
adc
rcrb
xlat
lret
jp
pop
sub
sbb
int
xchg
lods
xchg
pop
scas
adc
lods
push
mov
sti
pop
xor
push
dec
pop
outsl
js
out
xchg
lcall
push
call
ficoms
add
addr16
in
rcl
loopne
fadd
divl
xchg
pop
lods
dec
stos
pop
sub
mov
pop
cwtl
fstpl
inc
cld
pop
out
out
lcall
mov
out
and
jmp
and
xchg
test
add
xchg
fnsave
or
cmc
js
push
rcl
call
adc
test
fwait
adc
cmp
or
mov
popf
or
mov
xor
adc
push
das
mov
lea
lcall
cld
jmp
loop
pop
subl
fldcw
adc
loope
dec
lods
outsb
sub
mov
mov
mov
hlt
add
scas
push
and
lcall
inc
mov
daa
dec
or
out
fnstcw
cmp
aas
outsb
idivb
mov
rclb
scas
fldcw
iret
andb
pushf
mov
lods
aas
push
test
sbb
fimuls
decl
gs
push
pop
ror
dec
dec
fsubrl
fcoms
mov
popf
arpl
and
pusha
jmp
dec
in
addl
dec
xchg
mov
lock
sub
mov
ss
cwtl
cmp
lcall
cmp
hlt
xchg
dec
loop
pop
icebp
in
shll
std
stc
scas
insl
iret
xor
clc
scas
popf
leave
into
push
jmp
mov
jnp
push
adc
ss
push
jo
mov
movb
mov
aaa
xor
fstpt
push
lret
aad
mov
pop
mov
jns
mov
adc
jg
test
pop
mov
and
cmp
mov
add
or
xor
xchg
inc
loope
or
and
out
xchg
mov
testb
out
insl
jge
cmpsb
mov
sbb
xchg
mov
xor
imul
push
add
fsubrl
add
sbb
stos
and
fmul
pop
jmp
inc
xor
xorl
inc
arpl
add
stos
dec
rcll
jle
lret
cld
lahf
repz
movsb
lcall
dec
movsl
push
push
shlb
jnp
outsb
mov
cmp
add
add
inc
or
jbe
outsl
rolb
mov
jg
push
pop
repz
repnz
push
lahf
pushf
popf
and
das
outsb
push
addr16
xor
adc
sbb
aaa
inc
jo
push
jmp
xchg
sub
pop
or
push
cld
pop
cmp
out
je
gs
and
ret
outsb
cmp
or
mull
dec
adc
add
call
adc
in
dec
mov
add
fdivp
dec
xor
jns
pop
out
inc
mov
ljmp
mov
sbb
adc
fidivs
in
push
fldt
fdivl
pop
in
adc
decl
ds
sub
ss
ds
loope
jb
out
xchg
sti
cmp
jbe
inc
dec
data16
scas
jo
xlat
loope
test
mov
dec
inc
into
jl
js
push
or
xor
mov
lock
mov
imul
adcl
xlat
cmp
push
mov
cmp
test
or
dec
mov
shrl
and
adcl
add
je
jl
imul
add
inc
into
sub
push
lds
lds
cltd
push
jb
icebp
and
int3
push
mov
dec
mov
mov
cmp
sub
jge
pop
movsb
cmp
cmp
push
gs
dec
dec
mov
dec
addb
jno
mov
pop
pop
jb
adcl
sub
jl
push
mov
mov
into
push
push
lods
dec
push
rclb
cmp
mov
sub
adc
push
jl
popf
icebp
mov
sbb
leave
dec
add
xchg
xchg
fsubrs
js
and
ret
fidivl
pop
jb
ja
aas
test
jae
frstor
inc
fs
loopne
iret
lret
leave
add
sbb
sbbl
sub
pop
fnstcw
jns
push
adc
push
daa
jae
cmp
sub
pop
sahf
pop
je
std
cwtl
mov
mov
lods
in
lahf
daa
imul
jae
daa
arpl
cmp
and
call
ficompl
push
or
fadds
test
jae
mov
sbb
in
addr16
into
js
or
jg
mov
mov
movsb
mov
or
jb
mov
cwtl
pop
sahf
leave
shrb
xor
loope
mov
in
push
int3
into
mov
push
rclb
lcall
iret
mov
xor
fcoms
xchg
sahf
inc
iret
jns
aas
ja
icebp
rclb
add
negb
adc
cld
sahf
sbb
repnz
mov
adc
bnd
or
sbb
lods
es
sub
push
dec
dec
fmuls
fldcw
adcb
ret
adc
inc
inc
pop
lods
jo
fmull
pop
dec
ljmp
test
fs
aas
stc
ficoms
call
pop
lahf
stos
mov
repz
mov
dec
inc
lahf
leave
pushf
jp
aas
push
shrl
pop
push
pop
xor
inc
mov
cmc
inc
push
cmp
mov
jl
jecxz
add
fdivrl
adc
lcall
out
and
sbbb
mov
ficompl
mov
push
jge
jp
xchg
loop
xor
lods
clc
fndisi(8087
mov
into
jmp
dec
daa
xor
outsl
testl
cli
pop
outsb
pop
sub
arpl
outsl
addb
xchg
jns
cwtl
sub
repz
add
std
das
addr16
or
inc
test
loope
in
pop
mov
mov
inc
and
push
fsubl
jae
push
push
mov
cmp
subb
inc
ss
lahf
mov
je
mov
fdivr
push
lods
mov
or
sbb
inc
mov
std
and
out
jg
mov
and
in
fstps
mov
push
mov
sbb
iret
lcall
push
scas
inc
shll
mov
sbb
xchg
inc
sub
jl
scas
pushf
movsb
je
fidivs
pop
in
pop
and
mov
jb
pop
int
decb
ja
mov
cmpsb
aad
leave
and
and
popf
lods
xchg
adcb
inc
xor
xchg
inc
xor
repz
test
mov
fldenv
sarb
lods
std
into
test
and
addr16
pop
mov
dec
mov
xchg
jp
xchg
xor
mov
xchg
mov
mov
add
ljmp
cltd
xor
aam
insl
push
sub
pop
jne
mov
not
pop
daa
cltd
fnstcw
mov
filds
lea
xchg
mov
ljmp
scas
mov
mov
testb
aas
cs
in
pop
movsl
std
xchg
adc
pop
sub
jp
lods
addr16
pusha
lahf
js
sub
decb
mov
mov
and
sbb
pop
int
outsl
pop
mov
das
push
mov
mov
int
test
popf
xor
popa
or
pop
pminub
mov
test
add
popa
push
fwait
push
popf
lock
imul
in
mov
inc
arpl
dec
ss
mov
vphsubbw
sbb
cmp
fmuls
or
aas
ret
push
mov
pop
roll
cs
shrl
lods
ss
imul
lcall
cs
pop
mov
xor
and
sub
cmp
frstor
and
cmc
data16
cmp
pop
call
pop
jle
mov
jne
outsl
or
or
push
pop
loop
pop
jg
add
mov
mov
xor
in
dec
pop
imul
jmp
pop
int
inc
add
dec
add
out
pop
jecxz
cwtl
arpl
inc
fdiv
jle
into
gs
ljmp
dec
adc
stc
mov
lahf
or
mov
repnz
add
fcoms
jge
mov
imul
repz
adc
dec
pushf
push
outsb
mov
jecxz
sahf
enter
imul
xchg
mov
ss
inc
test
inc
imulw
loope
jbe
push
std
xchg
out
leave
fnstenv
arpl
sahf
clc
cli
adc
movl
mov
jmp
jp
leave
test
stos
push
sub
call
add
clc
or
or
mov
subl
and
adc
rorl
xchg
mov
movsb
cltd
loope
fadds
data16
mov
imul
dec
cmp
imul
xchg
xchg
push
inc
add
lahf
and
adc
icebp
rorb
xchg
adc
pop
add
and
pusha
dec
mov
xchg
shrb
imul
fwait
xchg
js
clc
push
adc
std
sbb
push
dec
fsts
sub
lods
cmp
ss
iret
cmpsb
sbb
xlat
loop
out
mov
jmp
inc
adc
cmpsl
ret
insb
xchg
jns
mov
adc
push
jne
jmp
mov
sbb
xchg
movsb
fsubrl
cmp
fsubp
push
lock
inc
cld
sbb
gs
andl
bound
xor
sarb
mov
mov
cmc
jnp
fimull
cmpl
pop
rep
push
or
daa
push
pusha
pop
add
adc
gs
cltd
and
addl
cmp
shrb
or
sahf
dec
in
mov
test
popa
scas
sbb
mov
data16
adc
cmpsl
out
fxch
mov
mov
mov
cmpsl
loop
andb
jnp
test
mov
lret
jle
in
mov
push
fistl
ja
mov
out
fidivs
or
data16
mov
int
cmpsl
lods
ljmp
pushf
sub
shlb
dec
sub
jns
mov
ret
add
lods
int3
push
out
jmp
xchg
jnp
dec
dec
sub
dec
cli
out
sarl
sub
push
lahf
cmp
mov
jae
in
push
fisttps
mov
cmp
pop
insb
pop
cmpl
test
sbb
dec
pop
adc
aas
mov
cmp
stc
sbb
ret
sbb
fwait
adc
sbbl
xchg
dec
rclb
mov
adcb
or
push
iret
jb
pop
aaa
imul
outsl
cli
sbb
fs
jp
or
pop
repnz
and
cld
xchg
jge
adc
bound
or
fwait
and
popfw
xor
jae
movsb
sub
pop
mov
iret
insl
xor
je
push
inc
dec
stos
dec
pop
fldt
popf
sub
insb
es
jle
dec
fnsave
or
in
jb
ror
out
int3
mov
cs
cmp
pop
ljmp
jno
add
push
fcompl
xchg
lods
push
and
iret
mov
fs
and
outsb
lods
imul
xchg
movsl
les
fimull
popf
dec
inc
adcb
mov
daa
adc
sub
out
sahf
sub
sahf
rorb
aas
xor
or
mov
aam
lret
imul
adc
mov
add
rcr
test
sub
aad
in
xchg
stos
ljmp
push
inc
mov
fmul
call
sbb
incb
mov
cmpsl
shlb
in
xor
test
pusha
jnp
aaa
pop
imul
std
ljmp
cmovno
push
inc
lcall
icebp
out
out
faddl
aas
push
sub
and
pop
cmc
sub
sub
out
or
dec
dec
fisubrl
movsb
stc
daa
subb
mov
popa
hlt
xchg
xorb
out
push
lahf
pop
cmp
jne
push
mov
xchg
inc
push
repz
movsl
jg
dec
mov
imul
cmp
cmp
jp
cmpsb
icebp
push
mov
xor
clc
xor
loop
sbb
pop
lods
cwtl
cmp
dec
dec
testl
fmuls
or
pop
inc
dec
fdivrs
xlat
inc
push
xor
jge
roll
push
pushf
adc
aaa
and
loope
shl
add
inc
push
test
stos
jbe
pop
push
int
xchg
xchg
out
pop
aam
outsb
sub
sub
je
js
std
es
fwait
sbb
mov
and
daa
outsl
out
push
les
movsb
push
aam
add
xchg
cld
fcoml
cmp
add
mov
cmp
pusha
loop
cmp
cmp
mul
cmp
or
xchg
sbb
jmp
jecxz,pt
loopne
sub
cmpsb
hlt
rep
testl
sahf
out
jns
mov
adc
pusha
lret
pushf
xchg
mov
ret
add
int3
pop
cmp
and
cmpb
int
jg
into
enter
mov
mov
fsubl
xchg
je
in
jp
push
lret
mov
scas
mov
int3
bound
and
xor
lret
idivl
inc
cmc
cs
mov
mov
mov
and
adc
cld
test
cs
or
idivb
pop
out
sub
icebp
jge
dec
std
xchg
jb
loope
sub
push
mov
loope
xor
inc
aas
les
insb
repz
xor
out
xchg
xchg
aas
xor
call
mov
ret
add
mov
dec
mulb
sbb
insb
test
or
dec
cmp
cmp
pop
shlb
ficoml
mov
add
les
std
iret
xchg
sub
push
jl
xor
sysenter
je
adc
das
dec
pop
subb
rcrb
xor
idivb
adc
push
mov
mov
push
push
add
sub
ljmp
pusha
push
cmpsb
pop
adc
jg
in
in
xchg
push
movsl
lret
repnz
cs
fs
xchg
dec
out
push
mov
addl
xorl
rclw
jae
loope
out
dec
jmp
xchg
push
mov
mov
inc
and
xchg
mov
cmpsb
aas
aaa
scas
cmc
inc
fisttpl
arpl
xor
inc
cltd
popa
pop
mov
sub
add
leave
jo
and
xchg
outsl
lret
jl
sbb
lock
stos
nop
adc
mov
int
ss
out
push
fidivl
outsb
test
xchg
pop
jbe
mov
mov
sbb
out
jl
icebp
add
negl
mov
jecxz
xlat
push
repnz
sbb
sbbb
cmp
mov
test
ret
loop
in
aad
aaa
les
negb
stos
mov
fwait
sub
ficoms
add
test
stos
sahf
in
xor
mov
push
mov
cmc
lods
fabs
pop
sbb
addr16
jnp
xor
dec
enter
mov
jmp
movsb
scas
cmp
jo
out
fcompl
or
cmp
cmp
push
repnz
ret
cwtl
in
nop
je
inc
shrl
dec
in
jle
xchg
xor
sbb
dec
cmp
push
sahf
cld
add
rcrl
insb
pop
bnd
mov
push
adc
ss
mov
mov
aam
mov
cmp
inc
in
xor
xchg
movsb
mov
sbb
scas
jle
jge
loop
outsl
or
subl
jno
inc
xchg
sti
push
adc
fsubl
cmp
imul
jge
jb
mov
inc
sbb
or
jl
mov
and
jae
cmp
movsl
jae
imul
ficoml
out
dec
jno
into
jae
add
jne
dec
pop
adc
mov
fistps
fldl
cmp
jb
mov
or
pop
push
or
cltd
cmc
cli
xchg
jle
xchg
rcrl
or
xchg
ss
add
out
xchg
movsl
fildl
imull
jmp
xchg
mov
rcrl
pop
and
xchg
ss
fstpt
pop
test
shrl
add
cmpsb
mov
lds
gs
xor
pop
add
xchg
xor
dec
cmp
cmp
idivb
mull
movsb
enter
lds
es
adc
bound
lds
outsb
push
test
dec
push
pusha
bound
jne
dec
and
in
ljmp
add
push
mov
rorb
fmuls
in
lret
ja
cmp
cmp
out
inc
push
cmp
jnp
fisubrl
rcrb
pop
bound
add
or
sub
xchg
xchg
test
lret
add
add
sahf
cwtl
add
xor
sbb
jl
pop
ja
stos
cmp
rcl
jle
pop
push
rol
and
sti
les
jo
ljmp
insl
stc
loop
aas
dec
push
inc
insl
xor
adc
or
xor
sbb
mov
mov
js
push
mov
pop
lock
imul
pop
sbb
push
mov
mov
cmc
aam
mov
sbb
xorb
or
repnz
xchg
rorl
sarb
mov
mov
data16
jo
mov
sbbl
int
push
cmc
imul
jl
stos
pop
test
subl
sub
fdivl
jo
adc
mov
or
jne,pt
in
mov
rcrb
mov
jbe
dec
xchg
dec
imul
xor
xor
mov
mov
xchg
shlb
dec
adc
repz
mov
push
ds
mov
push
jp
jns
sbb
adc
popa
add
lods
jecxz
pushf
mov
popf
aaa
pusha
sbb
xor
add
mov
push
pop
sahf
add
scas
lock
sbb
pop
insl
xchg
add
insb
push
or
lcall
mov
inc
push
push
dec
xor
mov
das
call
fisttpl
loop
out
stos
jo,pn
ja
shrl
sub
sbb
jle
cmp
mov
ror
and
icebp
pop
filds
pushf
or
sbb
mov
mov
outsl
icebp
int
fstpt
jb
inc
sti
imul
mov
jecxz
xchg
gs
cmp
lock
or
cs
aam
loope
cmp
ja
rcl
pop
imul
xor
push
and
out
subb
jmp
nop
inc
mov
add
sub
fwait
jg
cmp
and
mov
rolb
mov
outsl
imul
cli
xchg
shr
cmp
rol
and
cmp
sbb
pop
outsl
and
push
fmuls
insb
cli
lahf
out
inc
lcall
inc
lcall
and
sbb
add
jle,pn
inc
lock
dec
dec
push
dec
out
out
add
lahf
cmpsl
push
icebp
andb
repz
mov
out
mov
sub
sbb
mov
xor
push
dec
icebp
push
jge
fdivs
sar
mov
cmp
jnp
in
xchg
dec
jmp
or
sub
gs
mov
jo
add
mov
mov
and
mov
in
dec
sahf
insl
lahf
mov
mov
loop
ret
push
nop
call
negl
leave
out
cmp
jo
inc
aas
cmp
push
mov
mov
xchg
jg
in
fdivrl
push
mov
outsl
data16
xor
adc
jno
mov
into
add
ret
jle
in
push
ret
push
sbbb
or
dec
ret
mov
adc
and
xor
insb
std
jl
mov
insb
lcall
mov
bound
add
cwtl
cmc
xchg
sbb
or
rcr
loop
mov
mov
add
lds
mov
insl
add
cwtl
xor
arpl
dec
dec
push
subl
cmp
lahf
cmpsl
sbb
jp
icebp
test
mov
or
pusha
adc
cmp
jbe
gs
mov
cs
fs
hlt
mov
jg
mov
cmp
jb
fs
popf
test
jle
cmp
ljmp
pushf
jb
xchg
add
jns
repnz
mov
push
or
sbb
pop
clc
and
mov
or
mov
divl
or
or
dec
and
push
hlt
and
ds
dec
or
shll
xchg
xor
dec
mov
movsl
fstpt
and
scas
xchg
sqrtps
in
stos
mov
push
sbb
sbb
popa
pop
sub
mov
rorb
sarl
mov
pop
shrl
test
add
adc
jmp
test
mov
popl
repnz
imul
rolb
jl
int
mov
fsubs
mov
push
jno
pop
mov
xchg
lds
jg
push
or
andl
push
add
pusha
pop
test
jb
int3
adc
xor
push
ljmp
jl
ss
in
cld
inc
xchg
lcall
sahf
add
pushf
xchg
sub
mov
cmp
pushf
leave
xor
fisttpl
or
cmp
ror
je
ret
pushf
sub
popa
xor
mov
push
mull
es
xchg
add
jmp
loope
hlt
sbb
cs
test
out
inc
sub
jl
mov
or
inc
sti
lahf
push
loope
sbb
mov
loopne
insl
push
test
frstor
jge
mov
gs
int3
in
mov
aad
popf
pop
xor
enter
fcompl
jae
add
mov
cmp
adc
dec
ja
ss
inc
mov
test
push
or
jmp
jecxz
pop
push
lods
aaa
add
mov
pop
sub
adc
popa
dec
add
adc
adc
sbb
ljmp
xlat
into
cmp
hlt
in
sub
out
mov
sbb
gs
sti
fidivrl
sbb
rolb
push
sub
js
inc
subl
inc
xchg
fisubs
mov
scas
pop
push
jmp
adc
mov
sub
hlt
cmp
adc
mov
jne
ret
xchg
mov
cld
dec
xchg
pop
test
mov
lods
ja
je
sbb
sbb
adc
xchg
lea
add
ljmp
cmp
loopne
xchg
sti
xchg
push
and
outsb
xchg
cmp
push
mov
call
fdivl
sub
jle
push
je
sub
or
das
cwtl
xchg
sub
aad
out
and
xchg
adcb
adc
cmp
insl
xchg
rorb
mull
pushf
push
and
insl
cwtl
rcll
add
or
lea
fildl
lret
icebp
or
add
ret
pop
mov
add
adc
ja
or
sarl
or
cmpsl
std
xchg
pop
std
aad
icebp
adc
subl
mov
or
aad
js
mov
sub
aam
push
lea
sub
arpl
jae
lret
bound
jge
popf
mov
test
add
pop
lock
jp
mov
leave
mov
push
imul
mov
jle
mov
scas
inc
xor
jne
xlat
xchg
dec
aad
aad
out
ss
jecxz
dec
clc
movsl
jnp
stos
push
jl
das
scas
pop
daa
movb
fdivrl
insb
add
lods
ficoms
fnstcw
cmp
mov
jno
ss
pop
pop
xchg
aas
xchg
xchg
stos
push
jg
xor
fwait
mov
dec
shll
sbb
xchg
lcall
inc
testb
mov
js
jbe
sub
ss
gs
loop
fwait
jge
and
and
popf
aam
jno
jg
cmp
out
stc
and
ds
test
out
inc
pop
or
pop
mov
sahf
add
stos
aas
pop
cmp
lods
xchg
stos
shlb
inc
insb
pop
xor
mov
in
and
leave
lahf
adc
xchg
dec
sub
pusha
cmp
fwait
cmc
sbb
cmp
push
sti
sti
je
ret
adc
or
mov
adc
dec
pusha
dec
loope
dec
sub
mov
hlt
adc
cli
jae
dec
and
jp
jns
subl
in
addb
mov
mov
je
data16
xlat
mov
pop
mov
adc
push
push
sub
popf
fs
push
push
mov
ret
push
loop
pop
in
push
xchg
cmpl
adc
jb
lds
jns
aas
insl
cli
or
jmp
ss
xchg
cmpsb
sti
jge
jmp
and
pop
fxch
xchg
push
mul
cmp
lret
push
popf
mov
push
icebp
mov
fldl2t
push
mov
push
mov
add
or
or
movsb
mov
mov
push
mov
stc
negl
lea
aam
mov
lock
jp
jmp
js
mov
mov
push
and
cmp
push
sub
push
xchg
mov
and
in
aas
das
mov
lods
pop
fsubr
push
stc
sarl
pushf
mov
push
ds
mov
std
insl
inc
inc
fwait
jae
inc
xor
mov
mulb
loope
out
and
xor
mov
sub
hlt
fidivrl
sub
sub
hlt
jb
or
inc
mov
cmpsl
sbb
fisttpl
push
push
enter
adc
or
add
das
dec
add
mov
cmp
popf
adc
rcrb
jno
outsb
sub
pop
pop
xor
push
xchg
dec
out
sahf
mov
call
lods
daa
das
lods
outsl
dec
jns
adc
lcall
jp
hlt
pop
and
dec
xchg
test
xor
fldl
in
pop
xlat
inc
data16
and
jp
push
cmpsb
xchg
pop
sbb
mov
mov
and
sahf
inc
pop
ja
insl
jno
sbb
es
bswap
xchg
dec
jnp
lcall
daa
jge
int3
xchg
aam
js
xor
push
adc
dec
xchg
popf
movsb
sti
mov
push
inc
xor
lret
fildl
push
pusha
sbb
bound
xor
push
es
mov
xchg
add
inc
cltd
cs
jp
loopne
in
xchg
shll
pop
xchg
enter
mov
dec
movsb
repnz
xor
loop
or
adc
fyl2x
xlat
in
ja
push
pushf
orw
fbstp
insl
fldt
mov
outsl
movsb
mov
int3
mov
xor
pop
ret
xchg
mov
push
inc
mull
repnz
push
mov
mov
push
orb
inc
dec
jle
xchg
mov
xlat
scas
mov
xor
or
or
push
shll
pop
pop
jmp
cmpsb
js
sub
rcrl
enter
movsb
fisubrs
xchg
and
in
loope
cwtl
call
decl
icebp
aas
popf
outsb
push
pop
mov
push
shrb
xchg
jae
inc
pop
imul
mov
dec
bound
adc
mov
stos
xchg
jae
dec
ret
sub
mov
inc
mov
hlt
cs
mov
pop
mov
shlb
out
cwtl
mull
lea
push
dec
mov
in
or
xchg
mov
cld
lcall
push
xchg
or
cmpsl
and
sub
mov
or
lcall
jne
arpl
xchg
pop
mov
xchg
lea
repnz
mov
mov
xchg
sbb
adc
idivl
add
dec
lods
pop
movsb
mov
jmp
push
shl
jnp
push
std
adcb
bound
xchg
jae
ficoml
jns
fiadds
add
cmp
imul
cmc
inc
pop
enter
mov
jns
fistpll
mov
cmp
stos
mov
ds
sti
pop
repz
les
scas
jp
loope
into
adcl
test
mov
cmp
test
insl
pop
xor
mov
scas
or
add
aas
add
jp
sbb
sub
in
out
xchg
xchg
push
dec
pop
cmp
push
sub
lods
lock
in
adc
cmp
xchg
scas
and
stos
jg
push
or
sbb
jmp
sub
rcrl
lea
dec
jmp
movsl
nopl
mov
call
in
xor
add
cltd
sub
or
aaa
cmp
jecxz
in
cld
xchg
xchg
dec
mov
sahf
add
xchg
pop
or
jo
dec
repz
cli
inc
xchg
xchg
iret
jbe
jmp
stos
push
mov
push
in
test
enter
cmp
roll
mov
xchg
int
fbld
ds
xchg
dec
or
xor
jne
ljmp
inc
bound
fistpl
mov
pop
jp
lret
bound
pop
jmp
lods
add
and
scas
sbbb
lret
inc
push
fsubrs
stc
push
mov
sahf
inc
leave
or
jmp
or
push
push
mov
fldcw
fdivrp
add
popf
aam
dec
out
scas
or
pushf
xor
cwtl
push
scas
pop
lock
cmc
outsl
push
sub
add
and
and
leave
scas
xchg
mov
lret
xchg
adcl
and
out
dec
into
and
dec
and
pop
into
inc
pop
adc
fwait
lods
xchg
subl
jecxz
dec
push
sahf
sub
and
sbb
mov
push
adc
ss
adc
je
sbb
in
test
fisttpll
jge
fmull
mov
mov
mov
mov
movsb
jns
aad
mov
add
dec
out
add
test
sbb
ds
push
pop
and
lods
rcrb
nop
dec
ja
mov
pop
lods
pop
rorl
jno
and
loop
aaa
jl
inc
repnz
and
js
ja
inc
gs
scas
adc
loope
mov
loope
ret
xchg
jmp
ret
and
ss
rcll
cmpb
add
adc
test
bound
add
arpl
movsb
int
stos
push
sbb
mov
mov
sbb
scas
imul
aaa
in
iret
test
lret
ss
les
ret
jae
dec
add
push
aad
jnp
push
rorl
and
mov
ror
cmc
insb
pop
stos
gs
test
xchg
jg
jp
push
lods
sbb
cld
movsb
fiaddl
add
popf
scas
popa
dec
pop
push
ret
in
cmc
aaa
fcomip
pusha
repnz
loope
xor
or
rclb
inc
cli
movsb
sti
inc
pop
in
inc
push
out
push
movsb
pop
je
pop
mov
inc
fiaddl
xchg
repz
and
xorb
sub
aam
iret
and
mov
and
scas
sbb
sbb
sti
jbe
mov
cmc
push
xor
sti
sub
popa
pop
mov
jbe
cmpsb
cltd
pop
sub
int3
lahf
xchg
xchg
mov
iret
jno
cmc
dec
lock
insl
es
insl
push
shrb
leave
or
sbb
mov
fs
insl
jmp
cmp
loopne
jmp
add
bound
pop
lret
call
mov
adc
sbb
dec
jmp
add
push
sub
movl
popf
xchg
xchg
sub
pop
sub
fidivrs
adc
pop
mov
jl
stc
lods
cmpsl
leave
loope
inc
cmpb
cltd
test
fsts
sub
jmp
negb
aas
lcall
inc
adc
pop
addr16
ds
leave
push
push
push
pmaxub
mov
dec
sub
popf
inc
insl
cmp
cmpb
jne
cmp
hlt
sbb
adc
cltd
mov
inc
ja
jae
adc
fwait
popf
cwtl
stos
into
mov
repz
fisubrs
ret
popa
mov
lods
cmp
fisubrl
js
in
jmp
add
lret
fisubrl
inc
pusha
pop
jnp
insb
add
out
mov
push
and
cmp
sub
cmp
mov
inc
xchg
xchg
mov
pop
adc
xchg
mov
and
addr16
add
pushf
fdivl
dec
lds
push
xchg
mov
mov
push
loopne
loope
inc
xlat
lret
outsb
gs
je
xchg
mov
mov
cmp
inc
xchg
stos
push
into
or
sub
xor
sub
aaa
lahf
dec
jne
add
fldenv
stc
pop
xor
adc
into
xchg
rcrb
xchg
mov
les
mov
in
jecxz
jb
jne
jae
add
mov
shlb
js
mov
jle
sub
call
xor
icebp
cld
test
rcrb
out
call
sub
movsb
cmp
cmp
pop
pop
jbe
mov
mov
ret
ret
into
add
inc
mov
insl
rcrl
pop
out
insb
mov
push
push
jb
pop
cmp
xchg
pusha
popa
pop
stos
inc
mov
adc
mov
push
jp
insl
test
mov
adc
mov
aaa
inc
sub
inc
aam
mov
fidivs
adc
and
addb
jno
mov
dec
jbe
ret
shr
ret
or
out
mov
and
xchg
jge
push
cmp
ss
push
push
inc
loope
sbb
cmpsl
sub
cs
and
dec
and
mov
repz
popf
cmpb
jl
pop
pop
add
xchg
fmul
test
test
mov
cmp
or
sbb
hlt
xchg
xchg
push
or
ljmp
inc
ret
fnstsw
and
xor
cmpl
cwtl
pop
jne
push
jne
and
outsl
mov
lret
xor
xchg
test
test
cmp
in
xor
xor
sbb
fcmove
pushf
adc
bnd
inc
push
push
icebp
dec
adc
mov
out
dec
shl
inc
mov
push
movsl
mov
lcall
lods
scas
insb
add
pop
push
seto
ret
sti
out
sub
sbb
dec
lods
shr
outsl
andl
cmc
cmp
push
test
dec
cmp
outsl
test
adc
call
cmp
inc
dec
cmp
dec
xchg
dec
add
insb
mov
insl
pop
dec
add
sub
dec
lods
dec
je
jo
rorl
stos
out
mov
dec
cmpsb
pop
or
xor
xchg
jg
adc
repnz
adc
movl
sub
cmp
test
in
push
repnz
adc
lcall
rcl
outsl
inc
clc
sahf
xchg
cmp
inc
fdivs
cmc
andb
add
cmp
and
adc
xchg
int
mov
insb
or
std
mov
cld
xor
dec
pop
mov
cli
xchg
inc
add
mov
jp
mov
mov
fs
insb
or
push
leave
repz
jno
xor
jge
sbb
sbb
mov
movsl
xor
mov
cltd
or
cli
jnp
mov
ja
mov
mov
mov
fdivrl
push
sub
pushf
repz
inc
xor
movsl
arpl
ss
push
inc
pop
pop
mov
and
out
adc
mov
and
inc
lods
sub
cmpsb
adc
int3
or
out
fisubrl
jg
mov
and
jg
leave
mov
popa
clc
mov
or
push
jnp
and
stc
sub
sbb
lcall
xchg
in
lret
repz
bound
daa
mov
pop
jns
or
lods
sti
push
out
jo
std
test
mov
xchg
mov
and
pop
outsb
out
js
std
cmp
pusha
and
repz
inc
leave
push
jmp
loopne
mov
sub
adc
inc
ret
ja
inc
push
clc
sbb
mov
arpl
gs
test
mov
scas
imul
cmpsb
and
sub
sarl
movsl
dec
cmpsb
ja
mov
adc
push
inc
or
daa
xor
jge
push
mov
cs
inc
sub
fcmovnbe
pop
pmullw
xchg
in
mov
int3
xchg
cmp
mov
mov
dec
stc
popf
dec
scas
jl
lock
cmpps
pop
cmp
adc
iret
es
in
lea
out
iret
push
popf
rcr
cld
cli
pusha
push
push
invd
xor
dec
fmull
or
xor
insl
push
lahf
xlat
push
cmc
inc
or
popa
mov
push
lods
push
push
imulb
push
adc
or
test
jmp
pop
push
insl
orb
imul
and
inc
andb
mov
pushf
mov
mov
inc
and
insl
inc
jp
enter
mov
test
cld
addl
cltd
jno
add
gs
stos
sbb
in
scas
push
insl
test
subl
clc
jl
repnz
out
cld
test
ss
cmp
add
in
push
mov
iret
xor
xchg
pop
dec
pop
inc
hlt
xor
out
cmp
fwait
lret
sub
push
jmp
test
or
movsl
dec
push
insb
rclb
cli
jno
mov
nop
cmpsb
add
mov
adc
jbe
fnstsw
data16
xor
sbbb
stos
popa
adc
dec
jae
adc
lock
dec
dec
push
xor
mov
bound
sbb
sbbb
inc
cmp
or
test
adc
out
or
pop
mov
mov
jae
sbb
les
mov
cltd
inc
xchg
mov
popf
push
lods
xchg
cmp
lcall
fldl
mov
fwait
pop
mov
mov
call
add
and
push
cmpsl
jnp
andl
inc
xchg
jo
jecxz
mov
pushf
push
add
aam
iret
jo
shll
inc
and
mov
xchg
xchg
sub
inc
inc
jmp
xor
mov
adc
ret
lret
loope
or
pusha
push
dec
test
jbe
repz
jg
mov
pop
out
fistpll
out
mov
cmpsb
ret
lahf
lret
xor
xchg
loopne
out
jg
int3
cmp
push
jne
jmp
out
sbb
add
cmc
or
and
mov
test
adc
lret
outsb
test
out
xchg
xor
incl
sub
xor
pop
jb
leave
xchg
sbb
fcomps
outsl
add
js
cmp
xor
dec
cmc
xchg
dec
adc
push
xor
je
xor
sub
sahf
out
jo
mov
fistl
mov
gs
fists
dec
jecxz
sub
pop
shrb
xchg
outsb
aad
in
dec
and
or
test
jno
popa
imul
dec
daa
push
nop
sub
jns
dec
dec
jl
jo
int3
xchg
ss
fdivrs
push
cld
aam
and
popf
stc
gs
nop
cmpsl
movzwl
aas
insl
psubsw
aaa
or
icebp
adc
sub
mov
add
daa
iret
xor
test
shr
lcall
adc
test
jg
jmp
xor
lea
xchg
lcall
stos
fisubs
fmul
jecxz
mov
sub
mov
mov
pop
movsb
and
push
push
shlb
pop
sbb
leave
test
call
arpl
cmpsl
push
outsb
les
imul
dec
pop
int
push
rorb
cmpsb
cmp
imul
lcall
and
es
aas
dec
xor
mov
in
cwtl
inc
mov
or
cld
inc
pop
int3
lods
xchg
mov
or
lock
bound
mov
adc
dec
and
cltd
js
dec
mov
or
jmp
lea
mov
daa
xchg
cmp
cmpsl
scas
mov
in
test
mov
das
add
push
jnp
je
lods
push
pushf
push
shrl
lods
mov
or
dec
lock
adc
xchg
aaa
out
sub
enter
add
push
mov
jle
inc
scas
popa
mov
fcomps
sub
push
jae
mov
or
jg
scas
test
ds
mov
test
aaa
ja
in
push
ret
cltd
out
fwait
xchg
mov
and
mov
pop
push
mov
cmpsl
mov
jg
bound
shrb
sub
xor
jno
popa
mov
clc
and
or
xchg
lods
inc
mov
hlt
mov
cwtl
pusha
in
adc
xor
xor
mov
mov
push
scas
mov
fbld
adc
stos
sub
mov
and
dec
mov
jl
dec
dec
and
fucomp
mov
cmp
outsb
out
lods
adcb
aas
mov
xchg
mov
mov
mov
pop
stos
movsl
dec
loopne
and
jge
jle
andl
cmp
or
mov
xchg
lods
outsl
test
mov
push
sbb
add
mov
cwtl
arpl
out
mov
outsb
daa
lcall
mov
or
cs
add
or
data16
test
aam
jnp
adc
and
add
mov
mov
mov
adc
nop
mov
sbb
inc
imul
outsl
xchg
shll
sub
or
aaa
cltd
imul
and
push
outsb
bound
push
and
ljmp
inc
push
cmp
pop
int
mov
sub
adc
xor
push
bound
ja
sbb
pop
inc
outsb
ja
pop
mov
test
outsb
std
lods
and
mov
pop
cmp
mov
rcl
sub
sbb
mov
cltd
hlt
ja
add
sub
and
iret
sub
xchg
out
imul
sub
or
mov
movsb
mov
xchg
add
push
push
xchg
dec
jo
jecxz
sarl
or
idivb
sub
jle
nop
ljmp
inc
push
and
js
ja
lods
inc
sbbl
lret
fildll
aam
adc
mov
xchg
loope
packssdw
adc
loope
stos
out
or
mov
test
testb
test
aas
inc
push
xchg
jg
enter
xchg
cmc
lret
mov
cmp
shr
imul
cmpsl
dec
push
fdivrl
add
int3
addl
fbld
in
out
ja
xchg
mov
mov
mov
adc
inc
or
arpl
into
push
pop
ret
mov
pop
mov
mov
jecxz
dec
and
les
vpaddd
pop
outsl
or
pushf
push
je
jnp
stos
jmp
mov
cmpsl
jo
fwait
cs
cmpsl
test
xlat
push
jg
rorl
pop
cwtl
std
jnp
out
pop
pop
dec
mov
sahf
cmp
xor
pop
ds
push
shlw
xchg
int
mov
popf
or
loop
test
sub
stos
jnp
or
xchg
mov
outsb
in
int3
out
aad
ffree
sub
bound
or
call
arpl
inc
movsl
test
or
xor
in
and
repz
dec
sub
inc
mov
mov
jo
movsb
lock
pop
movsl
lds
ss
fnstsw
xchg
dec
shld
movsb
jo
lahf
pusha
and
aaa
xlat
mov
ss
popf
stc
sub
inc
jge
jae
movsb
dec
arpl
mov
ficompl
add
inc
fcomps
in
cwtl
xchg
imul
jno
sub
pop
daa
leave
sar
mov
in
loope
add
push
fwait
scas
mov
andl
scas
sbb
sti
sub
mov
cld
addr16
addl
push
cmp
xlat
cmp
mov
ja
out
sbb
mov
daa
lcall
test
xchg
lods
xor
fwait
mov
or
lods
xchg
jns
xchg
mov
xor
fisttps
data16
mov
mov
xchg
jo
fld
repnz
mov
cltd
sbb
ret
int
lret
notb
rclb
pusha
adc
fidivs
repz
cmpsl
jns
jle
adc
cmp
adc
cmpsl
pop
rcr
jb
jo
jns
es
lcall
shr
inc
lret
adc
aaa
pusha
pop
les
add
mov
sbb
ss
jb
aam
jp
aas
mov
ja
push
mov
mov
stc
fnstsw
mov
push
xor
push
jnp
ret
mov
xchg
scas
out
iret
xchg
jae
xor
mov
lock
and
xor
or
or
push
call
mov
fisttps
adc
mov
mov
jecxz
fs
aad
push
in
or
push
cmpsl
xchg
xchg
jmp
aaa
sbb
sar
loopne
sub
sub
dec
xorl
ljmp
mov
aad
ret
mov
fsubrs
xchg
lock
pushf
xchg
or
out
daa
stos
push
push
jmp
pop
iret
adc
xchg
out
add
or
or
xor
xchg
pop
fisubrl
fstp
or
pushf
and
mov
inc
jmp
fisubl
scas
push
push
push
insl
outsb
jno
clc
mov
inc
jg
mov
and
jp
jae
xchg
inc
pop
sbb
and
cmpsl
xchg
js
mov
imul
mov
cld
lcall
aad
cmp
nop
inc
pop
lahf
idivl
rcrb
dec
or
ja
sub
push
mov
xlat
mov
imul
mov
shlb
and
mov
rcrl
xchg
xchg
test
lock
out
adc
pop
hlt
repnz
or
lcall
mov
add
addr16
mov
push
jns
mov
xor
and
add
ds
stos
push
and
hlt
pop
dec
pushl
cltd
adc
mov
arpl
mov
shrb
pop
jg
sub
jecxz
test
xchg
sti
pop
inc
sub
cwtl
sti
aas
ret
jo
lcall
or
out
xchg
sub
xchg
push
mov
popa
arpl
fsts
and
sub
adc
sub
in
leave
jns
jl
loop
fisubrs
aad
push
or
gs
adc
mov
adc
jle
pop
mov
sbb
add
jecxz
sub
leave
jns
mov
mov
ret
jmp
sahf
pusha
popa
inc
into
iret
mov
arpl
into
iret
gs
sbb
je
cmp
test
sbb
and
stc
lods
shrb
outsb
cmp
arpl
pop
movsl
imulb
sub
lahf
add
popf
push
out
fildl
fs
repnz
xchg
sbb
lret
push
subb
push
mov
fstl
mov
mov
sarb
ret
ja
push
repnz
sub
adc
outsl
pusha
jo
push
mov
mov
std
in
shll
cs
fistpl
jns
imul
mov
jecxz
push
mov
mov
pusha
fs
jbe
cmp
jne
fisubrs
fstpl
xchg
jmp
ja
pop
int
or
repz
lret
loopne
inc
sub
push
shll
lea
sbb
xchg
pop
dec
sbb
mov
aam
js
add
fistps
in
aas
lods
add
mov
mov
xchg
movsb
out
test
popa
dec
sbb
xchg
xchg
mov
jbe
sbb
arpl
aam
or
sbb
xlat
scas
ja
xor
inc
mov
mov
pop
pop
loopne
lret
je
push
cmpsb
in
dec
out
aam
or
adc
inc
fidivrl
xor
incb
daa
inc
xchg
lret
or
stos
or
movsb
stos
inc
push
sbb
mov
sub
xchg
xchg
into
loop
or
inc
sahf
jecxz
mov
inc
pop
push
pop
cs
aaa
lahf
ss
mov
adc
jnp
inc
mov
cwtl
das
inc
dec
lahf
sti
pop
xor
popf
ja
loop
popa
shll
push
sub
adc
dec
ja
gs
cmp
andl
sbb
sar
cmpsl
ds
xor
out
int3
popf
inc
push
hlt
xchg
or
sti
pop
leave
mov
xchg
xchg
xor
add
scas
xor
dec
adc
mov
movsl
imul
rorb
movsb
test
popf
pusha
xchg
fwait
jmp
rolb
outsb
jl
sbb
les
es
and
fdivs
jecxz
sub
notb
js
inc
js
lock
xchg
mov
dec
ja
push
mov
outsl
add
mov
and
push
inc
xchg
cli
clc
sub
insl
fdivrp
push
xchg
sbb
sbb
repnz
mov
pushf
lds
into
mov
scas
nop
fcoms
test
xchg
jg
mov
sbb
jns
push
mov
mov
dec
or
repz
cmp
call
imul
leave
loope
mov
hlt
xor
push
jae
xchg
push
fdiv
shlb
jno
in
shlb
jno
add
nop
mov
xchg
sbb
mov
push
mov
frstor
jle
jecxz
adc
lahf
test
jb
lret
rcl
std
sbb
cmc
pop
dec
sbb
call
and
xlat
dec
insl
pop
pop
scas
scas
inc
jns
sbb
jecxz
jp
adc
jp
stc
test
pop
fdivrp
or
dec
cwtl
fwait
aam
leave
in
dec
add
inc
mov
aas
mov
clc
icebp
inc
icebp
iret
dec
push
stc
push
mov
jbe
call
jle
inc
inc
adcb
test
xchg
ja
pop
sub
and
in
lea
sti
or
divl
rorl
sbb
cltd
mov
lret
cmpsl
out
pop
or
xor
fimuls
imul
fistps
xor
adc
mov
into
enter
adc
cs
fistpl
jbe
arpl
bound
inc
inc
push
xchg
cmpsl
inc
fimuls
xor
arpl
xlat
std
mov
das
stc
sub
inc
cmp
nop
ljmp
cmp
xchg
mov
or
jmp
in
popf
and
test
and
daa
jle
gs
les
ret
jns
push
in
lds
sahf
cltd
out
adc
push
cmp
and
aam
int3
push
mov
cmp
mov
mov
imul
popa
mov
sub
push
out
jg
mov
stos
shr
dec
pop
jne
cmpsb
xchg
shll
loopne
mov
inc
sub
ja
leave
data16
and
sbb
push
je
stc
inc
fisubrs
pop
js
gs
dec
push
nop
pop
xor
xchg
mov
test
loopne
das
xor
cs
ret
and
pop
fcomp
xchg
mov
rorl
inc
jae
les
lret
icebp
ds
sbb
in
pop
mov
cmpsb
jp
mov
push
jecxz
or
mov
xchg
enter
dec
jecxz
inc
cld
xchg
sub
push
out
xor
dec
jecxz
push
jne
rcl
push
xchg
dec
sbb
sub
dec
fildll
scas
jno
xchg
xor
xchg
fldl
jbe
sub
fisttps
mov
or
adc
dec
sbb
cld
mov
enter
xchg
scas
or
jno
mov
jae
mov
xorb
scas
pop
sub
xor
dec
fdiv
mov
test
mov
jns
dec
sub
dec
fadd
pop
loope
jge
jne
out
in
mov
cmp
test
cwtl
inc
push
jae
mov
sti
inc
add
mov
jno
pop
adc
sar
test
lcall
push
inc
push
pop
xor
jnp
sbb
add
shrb
les
in
dec
movb
ds
mov
xchg
jo
mov
call
mov
sbb
daa
xchg
xor
xchg
mov
jmp
or
sbbl
xor
aam
sub
mov
repnz
arpl
int
pminsw
outsb
aas
xor
or
mov
pop
rolb
add
dec
testl
xchg
cwtl
jp
in
loopne
shr
rorb
cs
or
andl
jae
mov
sbb
lret
addr16
cld
push
push
mov
es
cmpsb
std
xorb
or
int
lock
jne
scas
out
ja
xchg
xchg
ss
int3
std
xchg
pusha
inc
in
pop
ss
out
xchg
lds
outsb
clc
std
movsb
cmp
leave
ret
test
mov
rolb
aam
sub
out
test
repnz
push
pop
jo
pop
idivb
xchg
sbb
push
pop
mov
mov
pop
pop
popfw
inc
mov
into
mov
pop
es
mov
add
cmp
cmp
mull
jecxz
push
or
sub
mov
mov
sbb
gs
lods
cmpsb
in
ds
loopne
mov
cmp
and
mov
fdivl
push
test
out
mov
hlt
js
push
out
cld
xchg
out
call
mov
sahf
mov
jmp
jl
adc
std
push
mov
cmp
pop
rol
filds
test
jl
jnp
sub
dec
or
daa
inc
scas
scas
jmp
loopne
int
mov
rcr
xchg
mov
leave
hlt
fdivs
mov
add
inc
jo
test
popf
popa
push
add
fwait
scas
jmp
sbbb
imul
data16
leave
loopw
push
adc
call
outsb
cs
test
gs
inc
cmc
and
ret
cli
test
scas
add
fnstcw
xlat
mov
es
inc
fdivrp
sbb
adc
pop
data16
popa
xchg
sub
jmp
fsubrp
push
jae
call
inc
mov
inc
sysenter
xor
movsb
movsl
inc
data16
mov
ss
sahf
loop
pop
add
popw
lret
xchg
adc
fstpl
dec
add
xchg
mov
fildll
scas
enter
push
daa
stos
mov
into
fadd
dec
add
testb
xor
hlt
mov
es
cmp
in
xchg
fdivrl
inc
imul
xor
repz
mov
stos
inc
fucomp
out
sbb
ret
pop
aaa
xor
mov
lea
mov
mov
dec
out
sti
ret
sbb
jecxz
push
sti
dec
sub
and
rorb
sarb
mov
and
mov
sbb
sbb
out
xchg
lods
dec
imulb
mov
les
sub
out
mov
loopne
or
xchg
sbb
dec
xchg
mov
dec
jo
gs
jo
fidivs
push
repz
cmp
xchg
push
repnz
loop
sbb
gs
inc
or
jg
shl
mov
fidivrl
loope
xchg
inc
cmp
sarb
nop
cwtl
push
cs
mov
out
jmp
bound
pushf
call
mov
ds
stc
jecxz
cmpsb
pop
pop
movsb
aas
mov
push
leave
pushf
mov
add
push
mov
bound
dec
lret
cmp
and
and
cmp
mov
push
cli
daa
outsb
sub
int
mov
in
mov
sub
rcrb
clc
dec
data16
cmp
adc
sbb
or
lock
pop
in
mov
or
and
cli
loope
fstpt
sbb
push
out
jecxz
pop
mov
nop
xor
lods
cmp
jecxz
jno
data16
outsb
xchg
dec
and
cmp
mov
in
mov
fdivrl
loopne
push
jl
sub
dec
cmp
rol
rcrl
and
insl
dec
fs
mov
loopne
cmp
scas
call
mov
insb
fcoms
std
pop
les
xchg
shll
xchg
sub
mov
push
aad
or
xchg
cmp
scas
jae
sbb
xchg
cld
js
ds
fs
test
jmp
and
cld
rorl
arpl
dec
jns
push
jb
xchg
icebp
xchg
or
push
xchg
aad
rolb
aad
jle
lret
mov
pusha
xchg
movl
mov
inc
pop
outsb
cmp
ljmp
mov
ljmp
call
outsb
mov
in
movsl
and
in
into
into
aaa
fsubs
aas
sbb
lods
xor
mov
divl
xor
stc
out
inc
cmpsb
and
inc
loopne
cmp
inc
inc
rcl
andb
adc
mov
and
jmp
test
ds
add
fisubrs
gs
inc
ret
jmp
inc
popa
sbb
leave
jns
jns
or
push
popf
movsb
inc
push
mov
std
lret
jl
xor
sbbl
arpl
jle
pop
mov
pop
negl
stos
pop
stc
push
gs
leave
jmp
sti
test
or
and
xor
add
push
ds
outsl
out
xor
into
cmp
shrb
pop
cmp
es
lock
jo
inc
cmpsl
xchg
jns
in
repnz
sub
mov
add
push
xchg
pop
push
popf
mov
decl
xchg
out
es
fisubs
and
adc
sbbb
filds
add
sbbl
cmpsl
mov
or
add
xor
loop
loope
outsl
or
imul
das
leave
mov
cli
add
pop
lock
and
ja
imul
movsl
lds
iret
push
mov
ret
std
aam
xor
ljmp
cli
mov
fbstp
call
xchg
test
addr16
scas
nop
sbb
pop
dec
arpl
cmp
jne
cli
push
mov
mov
call
dec
sub
jmp
mov
adc
in
lock
out
mov
pop
dec
repnz
xchg
sub
xchg
ljmp
sbbl
stc
dec
add
xchg
arpl
inc
lret
cld
popa
orl
adcl
inc
cmp
xchg
pop
test
and
jns
cmp
inc
rcr
xchg
sbb
out
mov
adc
pop
mov
sub
enter
mov
and
xor
test
sub
pop
jle
xor
popf
cmp
pop
mov
xor
pop
and
stos
aam
inc
push
int
inc
mov
push
cmp
pop
repnz
jp
in
sbb
or
popf
clc
out
nop
dec
int
mov
adc
push
mov
xchg
ret
jge
xchg
sub
and
jge
or
inc
or
test
sub
dec
jg
pop
in
or
inc
pushf
xor
pop
das
lock
lahf
or
inc
push
ret
shlb
xor
add
sbb
out
pop
mov
fwait
xor
shlb
mov
push
mov
stos
inc
stos
adc
fcmovb
lret
enter
ss
mov
and
mov
push
pushf
mov
mov
and
dec
cmp
mov
idivl
mov
xor
imulb
cmp
scas
mov
fwait
lea
mov
fwait
out
test
ret
jmp
mov
mov
push
jno
mov
mov
into
pop
sub
test
gs
setp
dec
push
sbb
push
mov
fs
movsl
mov
add
dec
xor
jecxz
outsl
loope
and
inc
call
and
lock
adc
in
negl
mov
inc
addb
dec
add
jae
sbb
sbb
xchg
and
loope
xchg
mov
stc
popa
into
cmp
and
and
data16
test
mov
rorb
lret
int3
inc
jg
ljmp
popa
clc
rol
add
adc
lds
lock
out
iret
adc
ficompl
or
mov
adcb
xor
xor
mov
arpl
cli
xchg
sub
ret
mov
adcb
adc
ja
sahf
test
or
jl
popf
cs
xchg
push
fwait
or
xchg
fcomps
out
incb
das
and
aaa
jl
aam
out
adc
std
xchg
mov
cmp
inc
push
xchg
sti
adc
sbb
push
nop
mov
cli
dec
pusha
sub
jle
dec
int
sbb
aam
scas
mov
sbb
dec
fisubrs
shl
pop
in
mov
gs
pop
xor
mov
push
lret
bound
jmp
push
mov
add
pop
mov
mov
xchg
outsl
js
imull
negb
push
jne
cmp
pop
xor
lret
into
and
pop
inc
cmp
jecxz
filds
or
repnz
int3
lret
sub
ficompl
aaa
mov
pop
inc
mov
cs
jl
je
xlat
out
and
jb
movsl
insl
sub
sub
push
pop
xchg
insl
sub
stos
and
mov
jne
fwait
lods
cmp
out
lahf
ss
add
fdivl
mov
pusha
aaa
sbb
mov
cmc
sub
xchg
lahf
addr16
fidivs
push
pushf
dec
mov
lret
push
out
rolb
push
fmulp
add
cs
push
inc
popf
divl
idivl
out
add
push
pop
decl
add
out
test
sub
out
sub
cld
xchg
sub
xchg
sti
push
or
outsb
jl
inc
jge
out
pop
ret
push
pop
out
inc
pop
xor
push
ret
pop
add
es
fisttpll
mov
inc
stos
addr16
scas
movl
jp
inc
add
jg
inc
add
add
sub
and
cmpsb
loope
sub
cmpsl
imul
adc
sbb
and
ret
sbb
ret
aam
lods
loopne
clc
adc
shlb
insl
popf
sbbb
dec
push
jbe
lret
mov
imul
cmc
mov
jle
cmp
adc
add
jge
pop
scas
fwait
add
inc
loopne
sbb
pop
lds
imul
movsb
dec
jecxz
rcrl
pop
xchg
out
push
dec
pop
xor
lods
popa
shlb
int
xor
aad
movsl
and
jbe
adc
inc
and
adc
daa
cltd
xor
xor
mov
jmp
js
mov
inc
push
ljmp
jno
lret
jp
push
movsb
sub
and
jo
notl
xchg
jne
test
push
jns
loope
rcll
sub
fdivl
jbe
xchg
stos
lds
test
push
sub
repnz
pushf
xchg
ret
mov
js
dec
mov
mov
cs
ret
xchg
xchg
dec
jae
arpl
push
shr
or
int3
mov
lock
or
pusha
mov
test
andl
dec
mov
mov
subl
mov
fsubl
lea
dec
add
cmp
pop
insl
ja
sub
push
lods
push
mov
push
int3
sub
sbb
mov
adc
hlt
rcrb
mov
in
loop
out
jns
cmpl
xor
loope
out
test
negl
shlb
inc
mov
push
mov
enter
push
call
test
ljmp
mov
lods
push
dec
jg
add
jecxz
and
pop
jo
es
pop
push
or
xchg
jecxz
jl
mov
dec
push
repz
dec
fiadds
in
lock
mov
jge
pop
div
sahf
mov
in
adcl
and
lds
dec
add
popl
and
sub
or
push
mov
add
xor
xchg
inc
dec
push
aaa
push
test
mov
dec
shll
jg
jle
mov
xlat
xlat
push
jo
mov
mov
xchg
insl
or
add
pop
dec
std
dec
test
hlt
adc
or
sub
pop
mov
adcl
add
mov
dec
popa
lock
xor
or
xor
push
push
inc
or
negl
sbbl
js
shr
cmpsl
clc
jmp
mov
mov
scas
xchg
test
mov
add
and
std
nop
jo
popa
aas
xchg
das
mov
lea
add
test
xlat
sbb
pop
sahf
es
pop
mov
adc
adcl
push
and
inc
fwait
jmp
ja
pop
test
lock
stos
adc
pop
out
pop
mov
fistps
insb
inc
bound
adc
cmpsl
xchg
outsl
rcll
and
in
test
mov
xor
mov
fnstsw
mov
add
or
cmp
aaa
test
cmp
mov
clc
jge
jns
cmp
push
nop
outsl
or
std
mov
push
aaa
adc
cmp
jge
mov
or
andb
fldt
add
inc
arpl
shll
lods
sub
jbe
shll
xchg
test
pusha
mov
mov
aam
jb
xchg
jns
inc
mov
mov
aad
cmp
rcr
cmc
jle
js
shll
clc
cmpsl
xchg
enter
xlat
mov
push
frstor
test
adc
and
mov
clc
and
push
inc
sbb
and
mov
popa
dec
cmp
jl
adc
dec
sbb
jecxz
js
pop
jnp
into
inc
jp
mov
stos
add
fstpt
mov
fucomip
mov
lahf
aas
mov
cmp
adc
cmp
xlat
jl
lds
and
dec
stc
jl
pop
aaa
push
xorb
les
insb
mov
mov
lds
pop
insb
test
out
push
mov
mov
test
adc
xchg
sbb
call
rcr
sbb
cmpl
into
push
notl
xlat
les
jle
xor
push
outsb
cmpsl
outsl
push
cmp
cmc
loopne
push
aad
orb
rdtsc
inc
dec
pop
repz
dec
daa
mov
cltd
sub
je
ffree
pusha
sbb
xor
pusha
mull
enter
arpl
popa
out
out
cmp
mov
rcr
jmp
lret
lods
push
pop
out
jnp
mov
ja
aaa
sbb
sbb
push
mov
cli
push
insl
or
ja
push
test
sti
insb
fldl
stos
ja
push
mov
andl
xchg
dec
pop
movb
outsb
filds
xchg
cltd
or
dec
fnstcw
rcll
and
shrb
push
ljmp
inc
pop
mov
and
and
test
adc
adc
pushf
add
stc
orl
pop
fwait
test
cmp
jle
js
movw
out
inc
cmp
not
aam
loopne
pop
add
ds
push
inc
jno
mov
rcrl
inc
arpl
sbb
popa
mov
fwait
insl
xchg
jo
cmp
sub
push
pusha
lods
sub
adc
mov
mov
and
aad
cmp
sbb
nop
pop
nop
and
lcall
push
int
pop
hlt
inc
inc
rcrb
fs
and
mov
pop
loop
push
orb
leave
shrb
insb
mov
mov
mov
jl
add
scas
push
lods
pop
std
jne
ss
repnz
push
inc
shlb
mov
iret
aad
ss
cmp
out
divb
sbbl
in
in
pop
test
add
pop
mov
stc
jmp
xlat
shrb
or
sbb
add
sahf
ljmp
scas
dec
adc
ss
dec
dec
iret
ljmp
cmpsb
push
cmp
push
jno
jne
mov
adc
or
push
jle
out
test
mov
lock
jmp
push
adc
xlat
enter
movsl
fs
mov
or
stos
jle
cs
lret
xchg
dec
rolb
filds
sub
data16
push
mov
cmpb
add
push
sbb
adc
mov
dec
ror
jge
adc
arpl
and
mov
pop
aad
cltd
xor
notb
lcall
stc
and
mov
rorb
jp
push
sub
lods
inc
push
shrl
fstps
mov
test
pop
cmp
pusha
cltd
jmp
pop
mov
out
jecxz
push
lahf
cli
jne
mov
shrl
mov
add
push
xchg
xchg
in
movsl
aas
sahf
fildll
xor
jp
fcmovbe
sbb
fbstp
sbb
in
shl
xor
jo
jecxz
pop
scas
xchg
bound
and
lcall
lret
jns
mov
push
jmp
hlt
jo
ds
ret
insl
dec
test
inc
sbb
or
std
dec
movsb
inc
mov
int
into
sbb
push
shlb
movsb
push
mulb
jge
aam
inc
cli
cwtl
sarb
mov
jmp
mov
push
cmp
jmp
ret
stos
sahf
xor
cmp
popa
push
hlt
pop
outsb
mov
stos
mov
and
gs
and
or
mov
mov
xchg
add
cmp
push
sbbb
push
xchg
repnz
neg
jmp
mov
outsl
pop
xchg
add
push
pushf
dec
dec
dec
jo
lds
pop
xor
int
pop
push
xchg
adc
seta
xor
test
cwtl
push
pop
push
xor
dec
pop
addr16
and
or
jl
push
minps
aas
je
fisubl
push
jnp
test
sbb
ljmp
scas
jge
mov
mov
mov
push
push
out
test
xor
push
outsl
xchg
mov
xor
andb
pop
push
out
mov
jnp
cs
in
add
or
add
int3
inc
add
gs
cmp
jg
adc
scas
cmp
mov
xchg
into
fisttpl
mov
mov
outsb
imul
cmp
fisubrl
fcmovnb
dec
lds
xlat
outsb
loopne
imul
mov
xlat
fmulp
or
mov
mov
cmp
push
push
outsb
roll
jo
insl
shl
test
mov
cli
arpl
push
cmc
call
jb
lock
aad
dec
push
fs
shrl
std
data16
in
ss
lock
mov
mov
pop
adc
pop
mov
mov
and
lahf
into
leavew
pop
out
mov
inc
pop
fcomps
pop
sub
rorl
test
cmp
xor
enter
std
mov
mov
cmpsb
hlt
mov
fwait
fs
gs
push
movb
lret
xor
fdiv
in
add
xor
sbb
pop
mov
movsb
sbb
pushf
scas
ljmp
std
ror
adc
add
loopne
sbb
getsec
cmp
ss
adc
xlat
stc
lods
inc
fisttpl
jo
mov
outsl
test
jb
in
pop
push
inc
cmp
sahf
sub
push
xchg
sub
or
jb
jns
add
or
les
ljmp
es
push
adc
mov
test
and
inc
push
dec
add
and
jb
inc
mov
inc
push
loopew
gs
mov
jne
std
outsl
in
ja
into
jne
push
mov
xchg
sbb
fsubrp
int3
add
cs
imul
into
pop
add
sub
mov
pcmpeqd
and
in
push
push
push
mov
in
out
dec
xlat
mov
outsl
out
lock
mov
movsb
add
push
mov
movsl
xchg
push
mov
jne
ljmp
call
leave
test
popa
into
lods
mov
and
adc
xchg
add
lock
call
sbb
in
addb
cmpsb
es
test
mov
push
add
cmp
lea
adc
loope
fldt
cmp
aad
jecxz
cwtl
cmpsl
and
loop
dec
out
cld
xchg
andb
sub
cli
mov
mov
mov
lret
xchg
pop
cmpsb
xchg
jae
sbb
dec
push
in
out
push
ljmp
adc
jecxz
adc
sbb
add
in
inc
xor
mov
jb
call
or
add
imul
add
lods
ret
ficoms
push
pop
pop
cmp
jbe
pop
test
mov
mov
add
fistpll
fbstp
push
mov
jne
mov
adc
shl
mov
sbb
jecxz
adc
sbb
fisubrs
cmc
inc
fucom
ds
jae
adc
ret
rclb
fidivl
pop
dec
out
imul
ret
pop
or
mov
ret
shrl
mov
mov
sar
push
add
cmp
dec
subb
cmp
imul
jnp
jmp
or
fstpt
sbb
cmp
xcrypt-cbc
cmpsl
push
popf
mov
mov
inc
rcll
pop
fisubl
push
vshufpd
int3
fidivs
push
mov
xchg
daa
pop
xor
push
in
dec
dec
ds
xchg
cmp
pop
and
sbb
jnp
mov
xor
ja
and
fcmovnbe
sbb
scas
jnp
call
add
jg
ret
add
pop
or
sub
jge
pop
mov
push
out
mov
cmc
repnz
sub
pop
in
sahf
xor
xchg
aaa
sub
dec
in
hlt
lcall
dec
repz
in
cwtl
push
jl
mov
xor
test
stc
jg
mov
test
imul
divl
in
xor
das
xor
je
hlt
xor
push
cmpsl
arpl
cmpsl
jp
dec
mov
lds
mov
and
push
mov
push
sub
daa
into
xchg
push
jle
cmp
incl
pop
popa
pop
lret
push
mov
xchg
stos
and
icebp
aaa
jg
pop
insb
aaa
dec
in
insb
add
add
mov
jbe
mov
mov
add
mov
lds
daa
lret
pop
repz
mov
jp
movsl
dec
jp
xor
lcall
inc
xor
ficompl
cmp
out
push
or
stos
xchg
lods
mov
hlt
shlb
jbe
call
test
nop
rol
loop
outsb
dec
call
add
adc
sub
cmp
push
je
dec
pop
lods
and
add
dec
movsl
or
and
inc
jp
xchg
and
dec
aad
sub
dec
pop
mov
cmpsl
xchg
jo
rcll
add
xor
push
imul
shrb
cmp
pop
pop
lds
add
lods
dec
jo
pop
call
fnstenv
sub
add
xchg
xchg
jmp
inc
xchg
pop
js
adc
xor
imul
out
jae
iret
mov
xchg
imul
js
inc
repz
leave
hlt
mov
and
pop
cmp
inc
mov
das
in
lds
int
test
dec
test
mov
popf
mov
push
pop
insb
xchg
lcall
pop
cmp
pop
test
imul
repnz
shrl
push
clc
jo
sub
stos
das
xchg
pusha
lret
adc
out
add
mov
pop
xlat
cmp
scas
adc
dec
xor
test
mov
std
sbb
ret
push
pop
cld
mov
aaa
roll
lret
lock
dec
jge
pusha
scas
push
xor
shrl
jae
in
orl
sub
jg
mov
ret
mov
mov
and
aaa
mov
shl
pop
insb
xchg
shll
out
cmp
ljmp
inc
clc
sahf
dec
data16
xor
jle
inc
and
sahf
sub
mov
xor
test
adc
les
inc
out
add
mov
ret
and
cmpsb
and
enter
mov
cld
adc
hlt
dec
clc
popl
or
pop
pop
and
xchg
sub
mov
addb
ss
ss
stc
sub
jbe
fsubrl
mov
push
and
cmpsl
and
cmp
aad
mov
or
pop
int
mov
push
inc
push
clc
outsl
jnp
jb
in
fwait
das
mov
popa
outsl
loop
cwtl
dec
adc
repnz
mov
pop
pusha
mov
lds
dec
aad
imul
insb
ss
adc
fsts
lock
jge
inc
in
ret
rcrl
jne
jmp
cmp
dec
shrb
jno
ficoml
mov
push
pop
cmp
inc
xor
aaa
loopne
push
dec
cmp
ljmp
aam
rol
iret
mov
roll
mov
mov
sbb
and
add
fwait
and
cmp
xor
mov
push
inc
mov
mov
dec
sti
fwait
in
cmp
inc
dec
xchg
mov
fildl
outsl
inc
cs
js
pop
jg
lcall
cmpsb
sub
mov
jb
and
mov
cmpsl
add
push
mov
mov
ds
adc
int
lea
pop
sub
mov
dec
cmp
xor
movsb
cmp
cmpsb
insl
xorl
cmp
fldcw
clc
int
mov
jmp
pop
dec
popf
stc
in
icebp
movsl
push
test
loope
mov
push
clc
scas
add
inc
mov
in
test
aad
test
insb
cwtl
movsb
jno
pop
jl
orl
inc
hlt
jp
repz
cmp
cmp
stc
or
ret
jo
loopne
xlat
push
das
rcrb
pop
repnz
fisttpl
clc
lods
push
xchg
dec
inc
inc
mov
xchg
xor
idivl
or
sbb
mov
inc
fidivrs
mov
xor
popf
lods
xchg
ds
bound
or
push
cltd
xor
insb
add
sbb
mov
ds
in
cltd
test
dec
icebp
jl
shlb
ret
pop
and
sub
adc
inc
and
xchg
test
push
out
cmc
test
sub
add
sub
dec
dec
insl
sbbb
je
cmp
cmp
imul
adc
jmp
cmp
imul
pop
mov
leave
mov
or
xor
fldenv
scas
xchg
xchg
lods
inc
push
mov
pop
out
das
iret
pop
mov
xchg
imul
clc
loop
mov
sbb
in
dec
mov
sbb
xor
jmp
loopne
aaa
push
lahf
data16
scas
cmp
outsl
or
cltd
stos
xchg
add
daa
cmpsb
or
aam
xor
fstpl
or
jbe
shll
dec
dec
jb,pt
jo
jae
xor
popa
jnp
rcrb
pop
jl
lock
pop
test
lcall
sahf
or
daa
movsb
les
push
pop
pop
in
pop
je
xor
testl
mov
xchg
pop
adc
mov
and
js
ja
hlt
pop
shr
mov
add
int3
and
push
sub
xor
sbb
dec
sti
inc
pusha
pop
pop
xchg
mov
push
mov
mov
dec
push
jbe
sbb
ret
xchg
cmpsl
add
dec
shll
xchg
inc
scas
dec
dec
andl
retw
sbb
fsubrs
cmp
movsl
fiaddl
loopne
xor
ja
ljmp
jbe
lods
dec
sub
fwait
push
mov
mov
fmuls
pop
lock
jp
inc
les
in
jmp
mov
insb
mov
lds
adc
and
ljmp
pop
dec
mov
fst
scas
orl
push
mov
inc
sar
in
test
loop
pop
ss
xchg
sti
or
jns
dec
jl
inc
test
push
imul
incl
popf
sbb
sbb
sahf
push
jns
je
add
fcmovnb
mov
cltd
xor
pusha
inc
pushf
push
jp
dec
mov
sub
dec
jns
xor
xor
cmp
push
aaa
push
test
and
cmc
push
aaa
jl
loop
xchg
mov
adc
movsb
jne
add
jge
addr16
sub
push
loop
xor
jae
push
add
cmpb
out
lret
xchg
pop
sbb
rcll
inc
imul
pop
in
repnz
dec
addr16
pop
out
stos
mov
sbb
mov
mov
rclb
add
mov
hlt
mov
push
data16
mov
and
inc
lods
rcrb
psrad
cmpsb
dec
fs
clc
inc
pop
clc
and
sub
dec
roll
and
cld
out
das
dec
push
push
jno
push
test
cmp
cmp
push
int
lods
arpl
es
test
jo
mov
jmp
cmp
inc
mov
lock
out
in
xor
xchg
lret
mov
into
sbb
inc
adc
pop
adc
cmp
scas
and
jno
out
jecxz
leave
ret
dec
push
jne
movsl
push
jl
push
stc
cld
mov
inc
adc
jae
ret
mov
dec
jmp
out
cltd
adc
hlt
popa
push
cltd
push
pop
ss
dec
inc
dec
lods
sahf
push
cmp
xchg
popa
adc
out
jno
add
push
cmp
andl
pop
test
sbb
push
ret
test
mov
std
enter
insb
add
mov
fcomip
dec
and
xchg
xchg
cmp
lahf
scas
adc
adc
aam
xlat
pop
mov
mov
movsb
inc
hlt
jge
mov
mov
inc
repz
cmp
pop
push
cmp
push
pop
dec
mov
test
sbb
jp
test
rcrb
jecxz
movd
mov
sahf
jp
pop
loopne
fsubl
push
or
adc
out
movsb
jecxz
lahf
sub
mov
in
movsl
mov
add
rcrl
ja
sub
dec
outsl
mov
jl
or
jl
fdivrs
aaa
mov
sahf
jb
cmp
sbb
ja
rclb
xchg
push
push
xor
push
rcr
fdivl
hlt
pusha
outsl
andb
mov
fs
mov
call
cmp
lods
and
pop
mov
push
leave
adc
sti
test
or
in
mov
aad
sbb
aas
insb
and
repnz
sub
add
fdivrl
outsb
sub
xor
inc
add
fnstcw
and
mov
xlat
jmp
cmp
pop
adc
or
lds
pop
fildl
push
aaa
pusha
dec
pusha
add
es
mov
aad
pop
insb
das
add
dec
lock
mov
xchg
jns
or
shrl
xor
insl
and
xchg
hlt
in
mov
mov
add
lock
mov
or
cwtl
es
sbb
inc
pop
add
cli
push
jg
mov
loop
fdivrl
cmp
int
icebp
in
jns
cmpsb
sbb
mov
outsb
aaa
xchg
xchg
sub
xor
cltd
subb
jl
lcall
adc
lcall
cltd
jne
push
mov
pop
adc
jb
loopne
in
pop
mov
int3
inc
popa
repnz
add
test
add
add
addl
mov
mov
or
add
fsts
jmp
push
imul
xor
cltd
sbb
pop
mov
std
adcb
test
sbb
test
stc
ret
add
movsb
cmp
loop
lret
push
cmp
cmp
hlt
rorl
sbb
dec
xchg
inc
inc
repnz
push
xchg
mov
das
xchg
ds
rorb
leave
insb
mov
and
scas
loop
addr16
cld
mov
enter
pop
daa
xor
add
mov
pop
cmp
int
loope
dec
jbe
jg
mov
inc
lock
lret
sti
jbe
scas
and
push
data16
inc
popa
clc
jb
push
push
insl
inc
mov
fdivrs
pop
cmp
xchg
push
rep
jecxz
dec
stos
adc
jl
scas
adc
data16
jae
or
sbb
mov
in
push
imul
jmp
lahf
je
pop
lods
xor
mov
subl
mov
repz
push
cld
lret
or
jl
push
sbb
mov
adc
jae
cmp
adc
das
lds
cmc
cs
cltd
inc
cmp
movd
sbbb
inc
or
cli
inc
mov
mov
inc
negl
out
add
xor
xchg
cs
xor
ljmp
dec
lds
dec
push
in
icebp
push
pop
out
mov
pop
and
fiadds
out
out
or
mov
pop
sub
mov
xor
inc
push
inc
out
movsl
pop
dec
pushf
test
or
cmp
fucomi
pop
aam
gs
xchg
mov
and
ficompl
jge
jmp
push
jl
mov
or
add
movsb
les
dec
push
orb
ss
cltd
xchg
push
aas
icebp
jl
pop
jg
adc
sbb
mov
cmp
in
adc
sahf
jbe
out
mov
dec
adc
jno
jno
jbe
addr16
fildl
bound
push
or
sti
add
call
shrl
cli
xchg
leave
cltd
dec
nop
insl
sub
mov
mov
push
jnp
pop
insb
pop
loope
nop
imul
add
aaa
pop
cmp
mov
inc
int
and
subl
mov
out
and
xor
pop
pop
sbbl
cltd
mov
lret
jp
dec
add
push
rol
jo
aam
ret
movsb
aad
push
xor
dec
loop
loopne
arpl
mov
add
hlt
bound
pop
sbb
dec
loope
cli
xchg
inc
sbb
and
cpuid
jmp
decb
push
insl
aad
jnp
insl
add
xor
mov
add
add
ret
test
mov
and
int
dec
in
jg
pop
lcall
push
xchg
sti
xchg
stos
lahf
push
mov
cmp
lds
ss
push
out
in
aam
mov
xchg
mov
call
jmp
and
sbb
sub
aad
leave
fwait
ss
xor
dec
mov
mov
shr
mov
jne
mov
fnstcw
jne
mov
push
gs
scas
mov
jge
dec
add
push
fcoms
dec
lret
push
mov
xchg
scas
sub
sbb
pop
les
mov
mov
push
xor
inc
add
or
pop
push
jns
lahf
xchg
ljmp
es
sti
pop
push
mov
pop
andb
scas
xor
push
mov
mov
jb
pop
int
adc
push
out
ffreep
or
jl
sub
bound
dec
xchg
mov
repz
pop
ds
hlt
dec
aam
pop
push
outsb
jl
bndstx
dec
xor
mov
sbb
push
jne
out
lret
adc
sbb
inc
std
and
ss
lcall
sahf
or
jg
adc
ss
xchg
icebp
xchg
mov
fistpll
scas
out
sarb
add
push
lahf
bound
clc
and
push
pop
sbb
insb
fwait
jg
lock
daa
mov
cli
test
xlat
pop
or
dec
cltd
pop
jmp
push
pop
adc
aaa
sub
test
in
lret
addr16
adc
jecxz
jle
mov
fdivl
cmc
addr16
mov
jo
lods
pop
cli
imul
xor
pop
orl
xchg
out
jmp
cmp
mov
cmp
ret
icebp
xor
push
push
jno
addb
push
mov
mov
push
add
inc
mov
test
or
mov
mov
push
push
mov
cmp
divl
jp
test
mov
inc
sub
xor
lcall
iret
shlb
mov
push
stc
mov
rcr
inc
mov
inc
cs
out
fistl
push
cmpsb
cmp
out
shrb
jge
loopne
stos
cld
rolb
sub
outsl
pop
scas
pop
or
repz
rclb
mov
jae
out
adc
fldcw
insl
push
or
mov
pop
enter
inc
popf
jno
out
outsb
inc
cmp
push
roll
data16
dec
lcall
add
enter
dec
lods
mov
cmp
sub
pop
and
lea
xchg
pop
fsubr
lcall
shrl
mov
jno
xchg
xor
jmp
dec
shlb
fcomp
xchg
mov
dec
pop
je
xchg
jnp
lds
out
popa
inc
out
inc
push
insb
push
inc
aam
faddp
jmp
imul
push
les
stos
loope
jo
out
aas
test
jge
inc
leave
decl
sqrtps
je
add
sbb
and
bound
ret
xchg
xor
jbe
adc
adc
inc
cs
mov
icebp
push
jecxz
mov
lods
shll
sarl
adc
sub
lret
lods
test
or
jecxz
sbb
int
jno
outsb
adc
or
or
inc
sahf
xor
or
mov
std
or
pop
sub
js
pop
pop
mov
mov
ficoms
jbe
aas
sbb
xlat
inc
add
xor
xor
xor
xchg
mov
xchg
or
daa
adc
les
jl
pop
xor
xor
in
jecxz
into
mov
ja
adc
ds
add
lahf
pop
test
ret
xor
loop
dec
pop
js
inc
sub
pop
push
fldt
xlat
stos
lret
dec
outsb
sub
mov
dec
sbbb
mov
sub
hlt
mov
add
in
xchg
adc
push
jbe
jl
rol
pop
sub
push
jno
leave
xor
mov
cmp
arpl
scas
inc
movsl
mov
xchg
fyl2x
inc
lret
aas
ljmp
out
ret
outsl
lret
cmp
xor
xchg
nopl
js
out
je
fidivl
dec
movsl
sbb
jg
cmpsb
lea
mov
stos
inc
pop
lret
imul
test
vsqrtsd
inc
repz
pushf
dec
pop
addl
ss
xor
paddusw
outsb
in
in
fiaddl
ja
scas
ja
leave
mov
sarl
adc
sub
mov
aas
and
jge
push
popf
xchg
arpl
fnstcw
mov
sub
dec
adc
je
mov
mov
into
mov
loopne
int
cmp
sub
xchg
cmpsl
rcrb
cmc
and
in
inc
iret
xchg
fldenv
inc
pop
stos
dec
xlat
and
lds
or
and
test
bound
fisubs
mov
ficoms
mov
xchg
add
and
push
sub
repnz
fnstsw
xor
sarb
jbe
dec
cltd
std
loop
sti
inc
sbb
notl
mov
fidivrl
mov
sub
cmp
mov
dec
xor
add
mov
loope
sbb
push
jno
jmp
scas
mov
in
push
pop
sbb
dec
add
add
scas
in
and
xchg
sahf
out
arpl
push
and
or
loope
out
aas
jge
xchg
xor
sbb
scas
sbb
xlat
sti
cmp
into
xor
xor
ljmp
jbe
mov
or
es
cmp
rorl
test
repz
mov
mov
xchg
cmpsb
repnz
aas
jp
pop
popa
shl
test
pop
imul
insl
sub
popf
add
fstpt
mov
sbb
cmp
mov
fadd
push
stc
arpl
addr16
and
mov
xchg
insl
sub
ljmp
inc
pop
xor
or
imul
inc
cmp
lret
mov
leave
pushl
pusha
xor
dec
sub
xor
sti
mov
push
or
jmp
push
cmp
test
add
in
cmp
call
lahf
mov
add
rcrl
xor
subl
push
inc
aam
aam
xchg
dec
inc
fmull
sub
ret
jg
out
inc
pop
and
add
movsb
cmp
pop
outsb
adc
push
push
in
std
leave
loope
paddusw
mov
xchg
imul
xchg
stc
sahf
scas
rcll
mov
mov
and
cmc
pop
scas
and
sub
rorl
divl
out
aaa
xor
jo
sub
mov
frstor
test
pop
insl
jecxz
jb
push
ds
clc
in
jg
in
mov
andb
mov
sub
mov
je
xchg
lea
lods
jmp
adc
mov
mov
movsl
ret
xlat
daa
scas
inc
cli
rcr
jmp
popa
dec
push
push
jmp
je
or
daa
cmp
sub
mov
pushf
out
fs
jns
gs
jg
inc
movsl
sub
test
scas
xchg
xor
mov
and
clc
inc
xor
cld
or
inc
pop
enter
inc
frstor
aas
sti
ret
dec
mov
mov
jb
andb
lcall
cmpsl
loopne
pop
pop
dec
movsb
lds
add
icebp
fistpll
push
test
sarb
and
and
jg
add
push
xchg
add
and
fwait
out
push
dec
sub
push
or
cmpsl
cmp
mov
xchg
sti
adc
or
jp
fwait
mov
mov
ret
xchg
sub
sbb
lret
mov
or
jbe
add
sub
in
ljmp
mov
xchg
xchg
arpl
mov
push
mov
or
xor
mov
and
push
sub
cmpsb
mov
sbb
add
mov
scas
ljmp
sahf
fldenv
shl
xor
popf
dec
test
cli
fisubs
mov
xchg
bound
stos
divl
xchg
mov
jmp
cmp
cmc
data16
mov
or
mov
rol
inc
lods
cmp
in
xchg
mov
push
inc
stos
pop
sahf
cltd
out
lret
mov
inc
enter
cmp
jecxz
pop
ljmp
popa
mov
bound
add
pop
mov
negb
push
xchg
and
cmc
xchg
add
repnz
fwait
cmp
jle
pushf
fdivs
popf
subl
xchg
add
or
pop
js
mov
push
sub
repz
push
iret
jbe
and
stos
movb
bound
dec
in
pop
or
mov
add
xor
sbb
fwait
cmpsl
aas
pop
sbb
mov
push
cwtl
cmpl
push
mov
pop
jmp
jl
push
fsqrt
push
out
xchg
add
movsl
fisttps
and
ficompl
adc
mov
or
sbb
xor
loopne
ss
ret
iret
cmp
add
mov
call
inc
pop
clc
and
xchg
sub
lods
sti
cmp
in
into
xchg
and
rolb
call
fs
cmpsl
add
mov
mov
sbb
mov
xor
xchg
dec
sbb
out
push
inc
gs
aaa
jbe
or
push
add
rcll
mov
jmp
mov
sbb
jge
push
into
pop
mov
fidivrs
loope
sub
mov
mov
cmp
jl
push
mov
pusha
sti
mov
adc
test
jnp
pop
and
stc
inc
push
in
fcomp
rcrb
fs
loop
sbb
std
fwait
jge
mov
scas
ret
xor
jo
out
xchg
jp
iret
stos
cmp
xlat
mov
es
xor
test
loopne
add
inc
hlt
in
adc
cmc
dec
and
loope
inc
adc
mov
push
mov
gs
ljmp
or
mov
cs
dec
std
push
jbe
mov
sub
and
dec
stos
stos
dec
pop
jg
push
pop
and
mov
icebp
int
jns
and
popa
cmpsl
fs
push
daa
pop
lods
out
or
test
sbb
pop
and
pop
icebp
xchg
mov
fnstenv
xchg
ja
pop
fadds
dec
ficoml
add
and
inc
jg
ljmp
mov
dec
rorb
and
adc
xor
ret
and
pop
jno
lret
divb
insl
pop
aas
pop
addr16
sbb
ljmp
push
mov
mov
rclb
jns
sub
das
lret
mov
adcb
xor
loope
jns
popfw
daa
jnp
pop
xchg
in
push
lds
inc
rcrl
out
in
sub
and
add
je
inc
ds
dec
add
xor
push
mov
shl
jno
pushf
in
mov
imul
dec
sub
outsl
subl
sbb
pop
push
lahf
inc
clc
clc
fcmovnb
repnz
ret
sbb
pop
pop
mov
sub
dec
test
into
and
jle
lock
imul
jne
xor
insb
add
push
inc
xchg
or
jb
stc
mov
or
pop
and
xchg
add
mov
push
loop
or
int3
inc
movsl
and
jecxz
shll
std
push
test
adc
sub
stos
add
addr16
ja
mov
mov
decl
jmp
push
sbb
push
dec
mov
push
inc
xchg
lret
sub
aad
test
adc
test
add
loopne
popf
sbb
mov
dec
lret
xchg
test
push
das
and
adc
scas
add
pop
ss
lock
and
cmpsl
push
jg
lret
inc
push
pop
arpl
iret
pop
mov
fnstsw
icebp
test
cmp
sub
ja
push
imulb
fidivl
xchg
pop
mov
fistps
movsl
aad
mov
cmp
scas
inc
adc
jnp
ror
jno
push
jge
and
fisubs
mov
push
aad
and
int3
cmp
cmp
repnz
inc
inc
dec
and
pop
sahf
xchg
add
or
loope
xchg
cmp
cmc
mov
and
mov
clc
mov
and
push
lock
pushf
pop
insb
je
adc
xchg
fsubl
subb
inc
push
je
dec
sbbb
pop
inc
inc
push
adc
xor
pop
add
cld
adc
mov
stos
int3
arpl
outsb
test
sub
loop
cmpl
int3
xchg
adc
fnsave
mov
mov
mov
js
mov
inc
pushf
mov
js
movsl
adc
jle
ficoms
jmp
sti
jb
or
fldt
movsb
and
mov
insl
cmp
cmpl
adc
mov
in
adc
dec
jg
shlb
out
imul
dec
sub
xchg
jb
pop
ja
hlt
sbb
in
mov
nop
ja
pop
test
aad
imul
sahf
push
in
fstpt
mov
and
jge
mov
lret
stc
mov
mov
roll
inc
scas
pop
xlat
push
stos
add
scas
lea
jno
pop
push
or
neg
jne
mov
cld
inc
sub
addb
push
shrl
out
inc
or
and
test
ret
outsb
cmpsl
mov
jp
test
lods
jae
movsb
scas
dec
pop
cmp
pop
rcl
xchg
scas
add
xchg
cmc
rorb
adcl
mov
jae
jle
sbb
dec
mov
loopne
adc
mov
push
cld
and
fidivrs
ret
push
xchg
mov
push
bound
fsubs
sbb
test
cltd
mov
dec
mov
pop
push
repnz
mov
movsl
stc
or
leave
jbe
enter
xor
pop
jecxz
adc
out
sti
inc
mov
add
bound
orb
cwtl
push
mov
fbstp
out
fcmove
fiadds
imul
mov
cmp
lret
aam
cmp
pop
cmp
les
das
and
pop
xor
or
jge
jnp
ret
lea
adc
sbb
jg
mov
mov
outsb
cld
fdiv
sub
je
fsubs
push
mov
scas
push
cmp
enter
and
hlt
mov
popf
sahf
pop
or
roll
cli
dec
or
add
cmp
cli
ret
out
pop
mov
cmpsl
scas
inc
loope
das
insl
int3
xlat
popf
pop
and
in
out
push
in
orb
xor
mov
jmp
mov
out
inc
and
popf
sbb
int
xchg
add
xor
in
shl
mov
and
mov
gs
pop
adc
jg
pop
adc
movb
add
cmc
mov
jbe
sbb
adc
ljmp
cmpsl
mov
add
lods
cmp
pop
cwtl
xorl
and
inc
out
mulb
push
mov
pop
ja
jg
push
movsb
out
test
and
iret
pop
hlt
test
adc
jg
clc
je
cmp
jmp
sub
inc
call
repnz
adc
popf
into
loop
enter
outsl
mov
jp
insl
out
xchg
aad
or
mov
bound
xchg
lds
dec
inc
rol
jmp
mov
pop
jmp
rcrl
push
mov
jl
push
jb
or
dec
nop
lahf
clc
sbb
fimull
cmp
popf
outsl
add
fbstp
fists
mov
cmp
adc
ds
outsl
push
sbb
mov
jns
daa
and
jmp
test
ret
repz
inc
call
mov
das
ficomps
mov
or
inc
fisubl
addr16
sub
push
out
cmp
lds
out
xor
pop
dec
jecxz
fcompl
mov
clc
cmp
fldenv
loope
mov
and
pop
xchg
out
mov
fisttps
inc
inc
jg
inc
movsl
and
xchg
andl
lea
xchg
sbb
cmpsb
xchg
xchg
or
mov
lcall
and
mov
lcall
mov
call
aaa
cmp
adc
out
popa
fs
dec
dec
jns
int
xor
loopne
adc
stos
jmp
mov
out
notb
xchg
inc
addr16
into
sbb
and
xchg
cmp
orb
inc
push
cltd
sub
xchg
pop
jecxz
cmp
pop
imul
pop
cltd
scas
call
test
jmp
mov
jmp
mov
mov
mov
or
movl
jne
mov
jle
test
sub
in
sbb
mov
inc
and
push
add
pop
stc
lahf
xor
xor
ljmp
adc
mov
fnstcw
fidivs
xchg
xchg
jnp
and
repz
jns
into
mov
jg
inc
fdiv
ficoms
fcomps
or
rclb
push
loop
lret
lret
sub
popa
mov
stos
jne
pop
and
cmpsb
adc
aam
fwait
push
loope
mov
lods
xchg
sbb
rclb
mov
push
and
push
cmp
mov
enter
out
sub
adc
ret
mov
test
push
lcall
inc
arpl
xchg
cld
cmp
mov
push
les
jb
cmpsl
xchg
ljmp
cmpsb
test
sbb
stc
jns
loopne
loopne
sarl
xor
enter
adc
ret
cmp
jmp
jle
lret
ss
lock
sub
or
mov
push
jo
call
xchg
jae
sti
mov
dec
jecxz
sbb
nop
lods
aam
xor
jns
adc
mov
int
or
mov
lods
push
mov
fbstp
mov
and
iret
aam
cmpsl
outsb
jle
inc
inc
sarb
int3
jo
into
lds
add
mov
icebp
fwait
inc
sbb
adc
iret
and
dec
arpl
pop
insb
repz
ljmp
sbb
lcall
data16
daa
scas
or
fs
push
mov
push
cwtl
pop
or
rorl
pop
lods
xchg
insl
push
outsb
add
popf
nop
dec
cmpsl
pushf
ds
add
mov
add
popa
cmp
cmp
mov
or
enter
in
push
ret
fstl
sub
push
push
jnp
pop
sub
test
fistpll
mov
test
icebp
cmp
fs
into
fdiv
pop
pop
inc
add
incl
mov
push
inc
inc
out
scas
inc
out
inc
popa
mulb
jae
mov
mov
adc
dec
add
sub
arpl
testl
rcl
pushf
aam
int
dec
inc
notl
xchg
jmp
mov
iret
out
mov
stos
sbb
enter
xchg
scas
and
in
cld
xchg
lds
cwtl
pop
xor
mov
dec
jecxz
mov
sbb
in
xchg
ljmp
mov
add
adc
mov
insb
jle
sahf
scas
jmp
cld
push
ljmp
jno
sbb
es
pop
into
push
iret
je
pop
imul
and
in
das
jo
jo
fcomps
xor
das
mov
jge
out
dec
imul
adc
adcb
or
or
stc
call
add
xor
jmp
je
xchg
cmpsb
and
cld
sti
sbb
push
mov
xlat
mov
add
movsb
testb
mov
test
sbb
mov
xor
mov
rol
ret
pop
ret
sarl
sbb
dec
xchg
pushf
mov
cli
test
inc
sub
push
int
add
sbb
or
xchg
movsb
mov
and
add
icebp
inc
or
push
popf
adc
insb
dec
loopne
shlb
push
aaa
inc
and
add
cmp
mov
inc
jp
negb
pop
repz
in
and
xchg
add
mov
sbbb
pop
jecxz
rclb
mov
scas
fcoml
or
sub
mov
xlat
mov
adc
js
mov
test
popa
std
lcall
in
incb
mov
loop
adc
add
aas
push
hlt
sub
loopne
mov
sub
data16
popa
xorl
fcmovnbe
test
mov
jnp
add
xchg
cltd
cld
or
xor
mov
rep
ds
jnp
fcmovnb
shlb
stos
rcr
mov
movsl
rcll
xchg
cltd
out
cmpsl
cld
push
pop
insb
sbb
sub
or
sub
jns
out
lcall
push
inc
push
lods
in
xor
icebp
mov
pop
sbb
jns
mov
mov
or
inc
hlt
add
jg
push
jb
cmpsb
pop
test
fwait
aas
jp
mov
aad
out
jl
xchg
in
rolb
push
sbb
add
je
jp
int3
out
mov
push
dec
xchg
mov
inc
movsl
sahf
mov
mov
test
xchg
xor
dec
popf
outsb
movsb
mov
out
data16
flds
fs
inc
stc
inc
inc
inc
pop
ljmp
outsl
mov
cmp
sub
mov
pop
repz
leave
rorl
push
and
dec
pop
xor
adc
pop
and
mov
mov
jp
insb
add
lcall
push
push
and
pop
xor
mov
stos
mov
mov
ss
out
jecxz
xchg
sub
mov
mov
jp
ljmp
call
repz
aas
dec
adc
xchg
sub
cmp
fdivs
das
arpl
pushf
xchg
shll
dec
pop
outsb
icebp
std
orb
xor
icebp
mov
mov
pop
push
roll
jb
testl
sarl
rorb
mov
mov
xchg
pop
xor
and
adcb
xchg
das
cmp
les
orb
cmp
cs
cmp
out
jmp
in
clc
lahf
jg
outsb
sub
inc
cmpsb
inc
cmp
mov
adc
stos
dec
xchg
mov
enter
adc
cmp
fildll
into
jmp
repz
cmc
and
xor
test
addb
jp
cmp
scas
xor
push
insb
aad
xor
data16
loopne
xchg
push
mov
mov
push
daa
dec
mov
xor
cmp
mov
cmp
jecxz
pop
mov
jge
mov
int3
cmp
out
mov
in
xor
fwait
or
mov
sahf
int3
sub
sbb
inc
push
push
cld
mov
jbe
loop
je,pn
xchg
dec
xchg
xor
aaa
xchg
lock
sahf
lcall
and
pop
mov
pushl
add
inc
jl
pop
sbb
mov
mov
aas
adc
cmp
mov
movsb
cli
xchg
rcrb
sbb
sub
sbb
xor
sti
cmpsl
iret
push
dec
out
arpl
icebp
xor
cmp
sub
leave
cwtl
mov
scas
dec
pusha
sub
cmp
xor
out
aam
jb
pop
icebp
jle
test
inc
lds
cli
push
ffree
dec
xchg
push
jo
pop
mov
mov
push
test
rorb
xchg
pop
out
scas
or
sub
int3
ret
mov
dec
pop
outsl
cmp
mul
test
add
or
cmp
add
mov
pop
or
dec
cmp
add
jbe
mov
sti
lahf
test
sti
scas
push
insl
pop
daa
xchg
mov
repz
out
in
aaa
sbb
and
mov
fiaddl
fiaddl
aad
or
pusha
add
xchg
push
jno
dec
movsb
mov
mov
pop
in
cwtd
inc
loopne
mov
repnz
scas
mov
mov
call
je
notl
negl
lods
mov
enter
scas
jge
xchg
add
sbb
hlt
ret
push
leave
addl
faddp
pop
adc
lods
mov
jg
call
push
or
fbld
call
dec
mov
dec
pop
push
imul
insb
add
subl
push
mov
jnp
push
mov
and
sahf
imul
mov
imul
les
jne
cltd
push
sub
cmpsb
lods
push
xor
and
dec
popa
cld
mov
lcall
mov
popf
cli
cmp
shlb
in
out
jge
mov
stos
ds
insb
aas
xchg
xchg
xor
and
pop
popf
mov
xchg
pushl
sahf
xchg
call
pusha
in
jae
inc
iret
and
arpl
push
shrl
jo
cltd
test
or
out
fucomp
xor
mov
repnz
daa
pop
subl
lcall
cwtl
daa
test
sub
or
in
rcr
add
pop
or
push
test
lods
test
filds
pop
sti
imull
push
mov
cltd
push
jp
cmp
stos
icebp
sbbl
adc
jge
pop
push
and
filds
repz
xchg
call
mov
stos
data16
mov
xor
dec
les
sbb
clc
or
es
shlb
insl
stos
fistpl
push
or
jb
mov
and
push
cltd
cltd
cmp
dec
inc
xchg
push
sub
aad
out
rcrb
les
sub
sahf
jae
and
loop
pushf
stc
adc
scas
call
jmp
inc
push
xchg
loope
icebp
sbb
add
mull
outsl
dec
inc
aam
mov
fs
xchg
scas
fyl2x
fiadds
push
cmpsl
mov
push
push
shl
inc
push
dec
dec
mov
jg
pop
jne
sub
popa
roll
lcall
xor
test
inc
mov
insl
test
aad
push
pop
dec
add
fdivl
bound
cmp
stos
nop
mulb
test
push
scas
cmpsb
imul
js
cmc
ret
and
and
shll
std
xchg
rep
js
xchg
pop
push
fsts
test
insb
mov
pop
sbb
cmp
rorl
fisttps
cli
inc
push
or
lds
shrl
inc
lret
add
je
pop
mov
or
mov
sub
add
adc
jge
and
pop
fldlg2
nop
aaa
fdivl
aad
mov
pop
mov
std
fstl
mov
pop
inc
in
xor
jl
clc
pop
dec
adc
and
aaa
daa
and
xchg
jmp
mov
lret
inc
push
push
enter
and
cmp
pop
xchg
cmp
mov
aaa
in
popf
imul
lcall
testb
adc
or
in
outsl
call
shrl
and
orl
out
scas
xchg
dec
bound
sub
mov
add
sbb
jo
pop
sub
in
cmpsl
ffree
inc
push
daa
test
mov
push
jo
push
aad
sahf
fcmovnb
outsl
test
out
cmp
and
cld
adc
iret
in
mov
das
adc
jl
adc
mulb
cmp
mov
arpl
popf
fwait
cmp
sbb
fnstsw
int3
adc
pop
cmp
jae
dec
inc
and
sbb
popf
dec
add
jg
xorl
push
pushf
daa
ss
sub
and
fidivl
mov
mov
mov
subl
orb
cmp
jb
pushf
cmpsl
test
push
mov
xor
mov
xchg
cmc
pop
loop
pop
xchg
xor
sub
push
dec
test
inc
into
fdiv
add
movsl
cmp
cli
jo
insb
outsb
ret
pop
mov
test
jl
dec
and
adc
nop
dec
jae
shrl
sbb
lret
mov
fistpl
push
fcomi
out
cmpsb
pop
push
push
stc
insl
jge
je
sub
cmp
arpl
lahf
or
push
call
or
ljmp
imul
sub
rcl
mov
scas
lret
inc
repnz
and
ret
clc
push
jo
cmpxchg
rcrl
aad
sbb
mov
popa
sbb
cwtl
jns
pop
sub
mov
dec
jns
mov
inc
fs
xor
pop
adc
or
pop
fcomp
push
inc
fcoml
loop
jg
xor
adc
loope
repnz
push
inc
fsubr
jne
push
sub
insl
mov
cmp
jmp
xchg
sbb
jecxz
fwait
mov
xchg
test
or
push
mov
fisubrl
and
stos
mov
and
shlb
jns
dec
pop
pop
adc
jle
lods
mov
push
roll
lods
fcmovnbe
mov
add
fidivrl
icebp
jmp
mov
mov
rolb
jmp
dec
xchg
cmpsl
out
ds
into
mov
inc
in
mov
cmpsl
out
sti
loopne
fbstp
mov
xor
rolb
mov
xchg
lahf
repnz
js
push
icebp
mov
mov
cmpsl
in
sub
cmc
sub
push
repz
test
adc
fs
jle
cmp
notb
cmpsb
repz
add
sub
add
cmpsl
decl
lret
dec
xlat
testl
pop
jp
pop
popa
idivb
sub
ret
cmp
hlt
add
hlt
mov
push
push
fwait
out
andb
mov
or
in
jle
roll
mov
mov
bnd
and
lds
fisubrs
fxch
pop
pop
mov
sbb
in
shlb
pop
test
lret
cld
mov
or
xor
jp
cmp
fisubrl
cld
or
sub
shll
shll
sub
ret
add
test
in
sub
or
pop
push
movsb
cmp
in
inc
mov
cmp
cmc
push
scas
call
pop
jno
pushf
pop
mov
mov
hlt
push
inc
cmp
pop
lret
imul
cmp
ljmp
pusha
xor
jecxz
mov
scas
mov
shr
popf
test
data16
call
std
push
adc
inc
iret
repnz
add
daa
inc
lods
mov
sbb
jbe,pt
xchg
test
roll
xor
mov
dec
lret
fstl
aam
out
shrb
pop
fxch
nop
inc
mul
pop
gs
ficompl
into
arpl
sbb
dec
test
mov
or
pop
jl
enter
mov
push
shlb
or
std
mov
mov
mov
scas
adc
adc
shrb
pushf
test
leave
jno
mov
jg
lahf
pushf
shll
icebp
cmp
sbb
stc
aam
cmp
dec
fcmovnbe
adc
data16
imul
cmp
and
inc
cli
int3
repnz
dec
popa
dec
cmp
cmp
js
or
repnz
jo
loop
aam
mov
mov
lea
jne
pop
iret
push
jg
ficoml
xchg
add
cmpsl
mov
jp
xchg
pusha
fbld
in
sbb
and
dec
adc
jb
cltd
xor
fcom
and
cmp
inc
clc
add
jbe
int3
mov
dec
mov
outsb
add
adc
and
inc
push
jbe
add
mov
xchg
fistpl
shlb
mov
sbb
stos
or
rcl
sbb
adc
xor
jecxz
push
imul
notl
outsb
outsb
sbb
mov
fs
aaa
mov
push
or
pop
lea
aaa
cmp
mov
jmp
cmp
stc
or
pop
mov
mov
cmc
mov
or
or
mov
push
mov
into
test
lret
repz
call
sbb
out
stos
aam
lods
fsubrl
jl
jno
xchg
push
xor
cmp
fsubrs
mov
outsl
xchg
ss
aas
add
jbe
imull
sub
pop
sbb
sbb
js
push
jp
sbb
test
jo
ss
pop
sbb
ret
pop
aad
popa
and
cmpsl
cmc
shlb
fsubl
lahf
cmp
mov
and
stc
into
test
mov
aad
lods
inc
sahf
ja
adc
sbb
jecxz
fbld
adc
sub
mov
xchg
pcmpeqw
stc
pop
add
cld
push
cltd
es
jne
xor
lds
xorl
es
std
jg
arpl
dec
mov
into
cs
test
rol
shl
inc
nop
out
sub
insl
push
push
in
jecxz
leave
shl
add
xchg
sbb
or
xor
pop
mov
rcr
stos
jae
lods
mov
jns
mov
jbe
addr16
popf
and
mov
lea
dec
scas
xchg
jmp
inc
lret
lcall
lods
pop
out
fisubrs
jbe
sti
inc
and
scas
xchg
sub
and
mov
dec
adc
nop
movsb
xlat
stc
rcrb
cmp
mov
sbbb
xchg
jo
sbb
sbb
rcll
inc
sbb
pushf
and
inc
sbb
sub
ja
shlb
xor
ljmp
movsb
cmp
inc
or
das
aam
dec
leave
pop
subb
hlt
loop
pop
push
xchg
push
mov
popf
dec
aas
inc
clc
cli
jg
sub
jl
jl
add
std
adc
loopne
push
stos
inc
xchg
insl
xor
xor
in
cmp
aad
lea
cmp
imull
push
jle
ss
jle
cmc
sbb
lea
jnp
push
int
cld
xchg
ret
xchg
mov
add
adc
mov
or
cmp
jle
cmovle
imul
inc
lock
icebp
ror
jne
sbb
push
xchg
dec
fwait
dec
push
cld
cltd
inc
adc
dec
mov
insb
mov
repz
inc
mov
jbe
pop
popl
aam
inc
fcomi
adc
ror
mov
jecxz
fmul
and
lret
mov
mov
xor
fstpt
pop
jno
in
xor
add
lahf
sbb
aad
loope
bswap
pushfw
sub
jmp
inc
mov
aad
sub
nop
mov
in
mov
loope
mov
cmp
add
ds
addb
sub
adc
clc
mov
xor
jge
bnd
sahf
inc
fcmove
pop
push
mov
adc
sub
push
xor
insl
add
add
ja
mov
leave
xchg
add
xor
xchg
lock
xorb
repnz
mov
fists
mov
setp
adc
inc
push
test
xchg
pop
sub
andb
sbb
push
sahf
imul
push
jne
shlb
subb
lret
mov
call
jmp
ja
std
movsb
lock
adc
pop
repnz
sbb
cmpsb
xor
pop
scas
scas
pop
pop
lds
gs
cmp
mov
mov
nop
stos
pop
cwtl
xchg
in
shll
repnz
jb
sbb
cmp
imul
jg
and
push
rol
insb
pusha
je
hlt
popa
popa
xchg
pusha
fwait
xchg
pop
cmp
sbb
pop
dec
and
sbb
test
sbb
or
clc
mov
daa
ds
sub
imul
adc
lret
ja
dec
dec
in
mov
jge
or
mov
push
jp
mov
mulb
inc
push
movntq
out
loop
and
jl
orb
jmp
gs
mov
addl
repnz
pop
in
mov
pusha
mov
dec
rcr
jmp
insb
adc
in
dec
mov
mov
inc
lods
dec
mov
repnz
mov
mov
test
dec
mov
push
test
cld
inc
cltd
jecxz
cwtl
dec
xor
out
add
adc
and
in
add
push
xchg
faddl
adc
lret
sub
repz
icebp
sub
in
push
sub
data16
std
cltd
scas
dec
shrb
dec
in
test
outsl
jnp
rorl
int
jle
lds
mov
inc
ljmp
daa
dec
pop
fidivrs
add
jecxz
adcb
cmp
testb
mov
push
inc
dec
inc
insl
rorl
push
sti
fwait
sub
mov
xchg
mov
dec
dec
and
rorl
jns
cltd
mov
add
mov
cmc
pop
mov
cmpsb
mov
fstpl
call
out
mov
movsl
popf
pop
nop
stos
roll
cmc
aad
push
pop
cmp
mov
xchg
call
mov
push
mov
lcall
adc
frstor
and
cltd
and
push
adc
test
add
stos
mov
loopne
add
mov
and
daa
in
scas
adc
jmp
into
loop
push
fiadds
pushf
cli
xchg
cmp
mov
xlat
add
das
dec
xor
fldt
jbe
jns
mov
dec
or
push
xchg
sahf
sbb
cmp
ss
repnz
aad
ret
xor
inc
out
pusha
and
ja
sub
ficompl
jnp
lods
loope
pusha
roll
push
je
mov
repnz
jns
testl
cmp
sarl
mov
arpl
lahf
xchg
or
jl
dec
mov
push
mov
sbb
cld
mov
shrb
fcmovnbe
xchg
gs
mov
aas
mov
xchg
icebp
adc
xchg
scas
je
fs
imul
xor
mov
dec
and
sub
cmp
out
adc
mov
popf
mov
add
adc
lods
je
mov
jmp
iret
or
mov
out
dec
add
testb
es
out
jmp
icebp
sub
iret
inc
lods
sub
fisttpl
inc
cwtl
mov
int
add
xchg
add
subl
adc
sub
add
mulb
bound
jnp
mov
push
lods
cmp
aad
arpl
in
add
lret
xchg
jmp
in
mov
sbbb
add
sbb
jae
insb
movsb
mov
or
outsb
adc
add
mov
cmpb
sahf
or
pop
push
sbb
fnstenv
outsl
aaa
pop
lret
fsubs
and
cmp
jmp
xchg
pusha
nop
lods
movsb
sbb
sbb
fildl
cmp
push
daa
xlat
cmp
inc
push
loope
in
mov
xchg
mov
stos
xchg
inc
xchg
hlt
xchg
xor
inc
pop
push
in
repz
in
es
push
inc
decb
xor
cmp
pop
ret
jae
or
les
xor
jbe
sahf
inc
fcmove
push
push
push
sub
or
jl
daa
inc
inc
movsb
movsl
icebp
mov
inc
mov
or
sbb
add
pop
cmp
adc
or
pusha
sbb
mov
add
hlt
jg
xor
fldl2t
lock
cmp
mov
xor
pop
add
pusha
inc
push
lock
dec
mov
lods
adc
or
pop
fs
das
popf
test
pop
cmp
or
push
lcall
mov
iret
mov
std
dec
sub
sarb
or
mov
and
and
insb
aaa
lea
mov
fistps
aaa
dec
scas
icebp
push
jo
cld
inc
mov
sarb
mov
add
adc
mov
xchg
mov
jecxz
andb
cwtl
loope
jno
repnz
out
and
addr16
sahf
mov
test
mov
xlat
sub
lret
pop
cmp
and
mov
inc
fnstenv
inc
lds
int
test
and
adc
lret
push
lods
ja
jae
ljmp
and
mov
mov
pop
jmp
sbb
xchg
xor
loop
cmp
jg
sti
mov
sti
adc
int
pop
cmp
pop
jns
jne
jecxz
push
lods
inc
adc
shlb
jns
sbb
xor
xchg
sub
lahf
outsl
pop
xor
mov
dec
push
lods
clc
and
dec
pop
insl
push
test
xor
cmpsl
dec
jno
in
sti
xlat
push
lahf
int
jg
loop
popf
movsl
cmpsl
jge
fnstenv
mov
repnz
repz
sub
mov
or
in
nop
pop
addr16
push
hlt
pop
ret
in
push
or
and
daa
sbb
popa
xchg
test
test
mov
jns
daa
mov
lret
arpl
mov
test
cmp
pop
loopne
call
or
mov
insb
add
sbb
add
ficoms
adc
sbbl
cmp
mov
je
loopne
and
pusha
push
ss
outsl
or
in
xchg
add
or
xor
adc
inc
jge
jns
pop
daa
push
jmp
xrelease
cmp
jb
stc
jae
or
out
dec
in
pop
out
test
shl
push
mov
or
xchg
and
mov
adcl
ret
repnz
ffree
pop
inc
cmp
insb
mov
xchg
lods
sarl
or
std
or
movsl
mov
cwtl
inc
dec
cmp
jle
pop
mov
out
fs
cmp
ret
mov
push
sub
enter
jne
clc
push
xchg
push
jmp
cmp
testl
xchg
xchg
adc
pop
pop
sahf
push
pop
mov
jo
mov
call
loope
push
nop
pusha
rcrl
and
or
sub
aaa
add
inc
mov
jmp
rcrl
int
icebp
xchg
out
outsb
dec
mov
mov
stos
mov
add
outsb
add
fcompp
mov
xchg
clc
inc
stos
call
pushf
xor
sub
mov
cs
mov
lea
push
jmp
shll
inc
push
mov
popa
mov
fucomi
xor
dec
ds
test
repz
or
fsubrl
push
call
outsl
jno,pt
and
cmp
xor
and
int
aaa
pop
or
lcall
pop
lret
in
pusha
daa
sbb
mov
cmp
sub
and
mov
dec
or
mov
sub
sbb
xchg
out
popl
mov
push
stc
lods
add
addr16
push
dec
movsl
or
xchg
add
push
lret
push
pop
dec
jmp
adc
scas
fiaddl
xchg
and
cmc
adc
pop
jae
mov
sti
sbb
xchg
mov
pop
cmp
sti
dec
sbb
jns
mov
daa
cmp
adc
xor
lret
add
and
iret
pop
add
fcoml
xchg
xor
cmp
out
pop
mov
cmp
js
gs
aam
mov
ds
psubb
mov
and
and
into
in
mov
mov
add
xchg
cmp
scas
mov
fnstenv
add
add
push
out
shl
lret
int3
add
dec
test
jmp
aad
aas
push
push
mov
lret
sbb
iret
cltd
data16
xchg
insl
jbe
nop
mov
cmp
testl
xor
xor
shll
and
xor
lock
testb
pushf
and
subb
das
loopw
nop
addr16
sbb
cltd
xor
xor
cltd
mov
std
fnsave
mov
fistpll
mov
adc
enter
adc
ljmp
cltd
adc
clc
aad
gs
mov
push
lret
cmp
mov
cmp
jns
adc
mov
repnz
inc
int3
push
pop
dec
adc
xor
add
clc
inc
or
add
xor
lods
mov
sbbl
test
and
push
cwtl
aam
leave
ss
out
cmp
mov
xchg
aad
lods
pop
mov
push
dec
aam
call
mov
sti
test
leave
in
sbb
into
push
movsb
mov
es
add
lcall
js
sbb
ss
xchg
sub
jae
lock
adc
pop
xchg
cmc
ret
imul
mov
mov
sbb
push
mov
loope
xchg
or
xor
or
movsl
jae
sbb
fsubp
cmp
fwait
xor
inc
loopne
mov
cwtl
mov
dec
sbb
mov
pop
movsb
dec
adcb
and
icebp
out
sarl
jg
push
cmp
test
fdivrs
dec
cld
addr16
sbb
dec
pusha
in
cld
cltd
stos
inc
in
and
or
mov
inc
icebp
pop
das
fildll
ja
cmp
mov
loopne
or
add
test
mov
mov
fs
test
or
loopne
in
mov
add
js
leave
mov
pop
and
cmp
ret
rclb
pusha
fisubrl
mov
lods
xor
or
fldcw
dec
hlt
popa
adc
test
fucomip
in
mov
xor
xchg
popf
add
lock
pop
and
inc
lcall
adc
add
test
movsl
dec
jg
xor
sbb
mov
mov
or
xchg
rcrl
pop
lahf
dec
xor
sti
mov
add
cmp
loopne
into
das
inc
mov
addb
pop
pop
aam
stos
inc
mov
fsubr
push
fmul
int
je
xor
lock
mov
scas
mov
jne
rol
fdivr
jo
and
scas
scas
inc
ljmpw
lret
cwtl
and
cmpsl
sbb
psubusb
sub
out
mov
sbb
inc
les
mov
arpl
scas
sub
pushf
mov
testb
gs
std
xchg
pop
mov
cltd
jbe
add
push
insl
int
stos
es
shr
lea
adc
sub
sahf
inc
fs
sti
outsb
mov
xlat
test
stos
add
rorl
jecxz
ja
and
int3
cwtl
nop
scas
inc
ret
dec
insb
stos
lahf
xor
inc
mov
jns
imul
btr
insl
mov
fldenv
fnstenv
adc
inc
test
das
sahf
sbb
push
xchg
lock
addl
aad
pushf
xchg
ds
fisttpll
rcl
xchg
mov
mov
pop
or
pop
or
sbb
mov
sbb
pushf
mov
popa
sub
jb
push
add
xchg
jecxz
andl
push
mov
jo
push
shl
nop/reserved
inc
cmc
cld
inc
in
ljmp
arpl
dec
mov
lods
dec
pusha
pop
bound
rcll
mov
sbb
int
movsb
cmp
outsl
pushf
mov
movsb
xor
out
push
push
ja
adc
scas
into
aam
addr16
lock
sub
or
jbe
inc
test
shl
inc
pop
push
scas
dec
cmp
cmp
jns
or
lea
cmc
xchg
dec
push
cvtps2pd
sub
jno
inc
mov
sti
mov
inc
test
mov
push
int
push
cmpsb
out
cmp
pop
popf
cmp
add
mov
mov
mov
jecxz
pop
jb
mov
or
add
sub
inc
push
test
push
call
jb
inc
xor
lahf
stos
notb
mov
lret
xlat
imul
cwtl
and
lret
push
mov
data16
sub
adc
mov
hlt
mov
cmpsl
adc
std
mov
lcall
cltd
das
sbb
pandn
mov
repnz
ja
push
test
ror
pop
mov
add
scas
inc
mov
xor
jmp
seta
pop
addr16
jnp
test
mov
push
mov
pop
pop
mov
inc
dec
mov
idivl
or
mov
fcoml
insb
xor
xor
ret
xchg
les
dec
fwait
push
mov
dec
fsts
xorl
adc
int3
mov
xor
jp
jbe
int
sbb
lret
mov
sbb
pusha
mov
push
jns
out
in
ret
jle
mov
and
inc
jnp
out
fstp
mov
xchg
mov
movsl
mov
test
sub
push
or
mov
repnz
pop
mov
jg
cmp
and
push
add
jb
push
repnz
adc
inc
jle
js
mov
add
shrl
fldenv
fstpt
mov
dec
aaa
into
jle
cmp
xlat
insb
xor
rcrl
in
test
ror
int3
divb
pop
push
sbb
fs
xor
sub
maxps
lods
jo
test
mov
jne
pop
xchg
add
jb
adc
mov
cld
jecxz
xchg
mov
cmp
jge
fwait
pop
out
xor
les
iret
lea
push
dec
in
lods
stos
adc
test
pop
mov
call
sub
enter
xor
daa
push
lcall
dec
pop
xchg
loope
jnp
sbb
ret
xchg
pop
std
test
out
sti
xor
hlt
testb
mov
dec
adc
mov
push
dec
and
mov
push
cwtl
cmp
cmp
mov
push
mov
rorl
ret
out
lods
inc
xor
fidivl
mov
and
sarb
push
out
loopne
pusha
adc
sbbb
ds
dec
mov
xchg
call
cmp
dec
lock
or
stc
cs
mov
mov
pop
fdivs
push
push
cmpsb
fsubr
mov
je
add
imul
xor
inc
pushf
xchg
cmc
cmpsl
dec
mov
xorl
xlat
addr16
pop
mov
je
cmp
js
pop
pop
push
xchg
cmpl
or
jg
dec
pop
je
idivl
push
pop
xchg
ror
pop
sbb
in
cmp
pop
aam
mov
imul
sahf
xor
lock
mov
push
or
repnz
dec
lods
ljmp
pushf
xor
in
mov
lods
in
dec
xlat
jmp
iret
fidivl
push
push
stos
or
mov
mov
push
outsb
push
lea
mov
or
sbbb
in
mov
push
nop
push
and
iret
mov
mov
sbb
mulb
aaa
imul
push
and
adc
std
and
jecxz
clc
jl
sub
nop
jle
xor
xchg
leave
sti
pop
push
fisubs
into
lcall
mov
fucom
sub
xor
shll
jecxz
gs
fsubr
jl
mov
or
jmp
lea
mov
ss
dec
push
jp
mov
and
push
ret
adcl
push
movsb
andb
cli
mov
xchg
loop
loop
pop
add
dec
mov
iret
push
movsl
rolb
jl
aad
fiadds
mov
xchg
mov
jo
mov
ficomps
test
push
popa
pop
mov
fcmovnbe
fadds
dec
mov
add
adc
mov
mov
pop
fistpl
daa
notl
mov
sbb
cmp
testl
fnsave
adc
add
xor
mov
enter
sub
neg
mov
cmp
ret
jbe
in
rolb
fsubr
cli
lret
cli
jecxz
mov
xchg
adc
and
xor
decl
les
dec
lret
mov
sti
ret
fmul
mov
pop
push
sub
mov
dec
jecxz
mov
mov
mov
aaa
adc
mov
xor
dec
mov
and
xor
test
fidivl
lret
mov
sahf
xor
and
mov
adc
sub
pop
roll
popf
pop
repnz
lret
dec
adc
notb
xlat
int
xor
mov
sub
lcall
call
and
iret
fidivl
and
sub
sub
sbb
mov
add
leave
mov
inc
pop
mov
fsub
sub
mov
fldl
orl
sbb
mov
in
sahf
pop
scas
sub
cltd
lea
or
jge
push
popf
or
dec
mov
movsl
mov
or
add
mov
xchg
gs
dec
fsubrp
inc
mov
movsl
sbb
les
mov
sahf
iret
pop
sbb
mov
ljmp
jecxz
and
ljmp
cli
or
xchg
inc
mov
inc
cli
pushf
in
loopne
in
push
or
insl
cli
shlb
iret
lcall
sbb
in
add
pushf
std
and
xchg
sahf
xor
mov
jb
shrl
and
sub
das
leave
pop
test
jecxz
mov
hlt
mov
aad
data16
loopne
or
stos
xlat
or
add
lcall
popf
lahf
jb
jg
sub
and
sub
xor
inc
bound
push
cltd
negb
mov
sbb
xchg
rorb
jle
mulb
dec
mov
es
push
sub
shll
rclb
push
dec
push
loopne
dec
pusha
int
xchg
in
sbbl
lods
push
push
loop
or
dec
cli
mov
inc
jo
call
dec
mov
shlb
mov
roll
xchg
fs
or
add
loop
cmc
xor
cltd
out
pop
xchg
xchg
pushf
mov
iret
sti
sub
out
pop
stos
inc
movsl
mov
enter
inc
cwtl
dec
fdivs
xchg
rclb
mov
cmp
aam
mov
icebp
dec
leave
xlat
push
mov
sub
sbb
ss
shl
mov
outsl
sbb
jmp
lea
ss
cli
or
sub
ret
repnz
rorl
adc
movsl
sti
push
mov
sbb
mov
or
lcall
stc
xchg
sbb
dec
or
outsl
mov
lock
push
adcb
sub
repz
pushf
xchg
hlt
jbe
cmp
dec
mov
adcl
ja
inc
pusha
jmp
and
mov
mov
bound
popf
jg
add
xor
inc
push
fldt
cmpsb
mov
lods
xchg
jmp
and
dec
and
mov
fsubr
mov
xor
mull
out
rolb
jnp
xchg
shrl
scas
push
xchg
sub
add
imul
sbb
add
daa
pusha
les
xor
int
sub
or
rorb
push
add
and
jle
cmc
mov
pop
in
push
push
or
sub
or
sbb
jno
loope
adc
notb
mov
loope
nop
lds
mov
fistl
cmpsl
lcall
aam
cmp
sti
xchg
sbb
ficoms
fisubrl
lret
lea
pop
imul
jge
push
daa
jb
xchg
jae
jmp
scas
inc
sbb
aas
mov
aad
pop
dec
adc
and
shrl
mov
mov
mov
or
xor
out
sub
or
mov
popa
nop
jne
test
mov
mov
pop
js
dec
jmp
mov
xor
push
in
mov
leave
xchg
mov
out
or
and
ja
lods
mov
lret
std
mov
dec
adc
sbb
jmp
push
loop
icebp
pushf
aaa
or
mov
mov
fidivrs
loopne
sbb
mov
pop
repz
mov
xor
outsb
mov
stc
adc
xor
in
mov
ret
adc
mov
add
inc
out
sub
push
mov
mov
pusha
sahf
xor
push
push
mov
pop
cmp
mov
cmp
mov
fcompl
adc
scas
xorb
arpl
test
ret
push
xchg
push
mov
mov
mov
pusha
mov
pop
sub
jb
cli
out
and
std
test
int
or
sbb
push
jmp
ds
lds
out
enter
out
loopne
xchg
sub
xchg
icebp
jne
insb
cmpsl
adc
aad
shlb
dec
add
and
cmp
adc
ss
std
in
pop
xchg
mov
sub
and
inc
inc
and
adc
dec
cmp
or
mov
testb
cli
push
adc
jne
sub
lcall
mov
movsl
test
mov
mov
and
mov
clc
addr16
cltd
inc
inc
out
xor
aad
adc
xor
jae
push
and
push
xchg
jmp
mov
cmp
xor
pop
pop
inc
fs
jp
ljmp
jb
dec
adc
sub
or
cmp
arpl
je
cmp
popfw
int3
shrl
cmpsl
arpl
mov
fwait
inc
bound
adc
push
cwtl
mov
inc
aas
jge
shll
xchg
hlt
jmp
lret
push
in
adc
scas
call
pop
das
jo
popa
jns
jle
clc
popl
xlat
or
or
jo
xor
mov
and
shrl
push
scas
cmp
cmc
mov
pop
push
add
test
adc
jbe
xlat
bound
cmp
and
repnz
push
jno
push
add
push
adc
inc
inc
jno
dec
mov
aad
stos
ss
hlt
testl
mov
xor
popf
xor
inc
jp
mov
inc
cli
add
nop
movsb
dec
gs
out
rcll
push
xor
sbb
jo
push
scas
fcmovne
aaa
iret
fldt
sbb
adc
push
mov
adcl
push
fcmovnb
test
loope
pushf
lds
jmp
xorb
pop
mov
pusha
and
xchg
fmul
mov
mov
pop
and
push
jbe
cli
arpl
sti
iret
and
aad
cmp
int
lods
sub
lret
and
push
xchg
sti
aad
mov
popa
movsb
fs
lcall
fcompl
lock
or
mov
push
and
in
inc
cmp
pushf
inc
popa
xlat
push
aas
aaa
sahf
arpl
fldt
jo
enter
jp
out
adc
rcl
cld
push
movsb
dec
mov
dec
xchg
mov
xor
test
jnp
mov
jge
outsl
iret
gs
leave
pusha
xchg
cmp
call
push
mov
lcall
add
aam
xor
ds
loopne
daa
mov
repz
lods
mov
dec
test
mov
push
or
loop
push
fisubrl
int3
popa
clc
mov
mov
add
es
in
cltd
leave
cmp
or
xchg
loopew
xor
dec
mov
push
xchg
lock
out
out
cmp
jno
inc
jae
pop
jmp
das
in
mov
add
fisttpll
into
mov
aam
adc
movsb
mov
jge
out
mov
in
insl
jge
fildl
nop
inc
mov
mov
fcoms
sti
or
cmpsl
dec
jecxz
jl
or
cmpsl
mov
cmp
mov
mov
in
xchg
ja
repnz
push
mov
fwait
or
add
inc
fsubl
mov
mov
sub
repnz
xor
inc
add
scas
addb
gs
gs
push
sbb
adc
cld
push
arpl
push
out
jg
mov
fisttpll
adc
dec
xor
aad
insb
rorl
andb
fwait
loope
sub
jo
mul
xorl
daa
adc
aam
fmull
ret
ljmp
outsl
test
out
sub
inc
enter
out
inc
pop
adc
les
cmp
or
cmp
imul
pop
mov
ljmpw
push
js
repz
mov
mov
fstpl
mov
cmc
in
ljmp
enter
dec
nop
daa
cmpsb
jge
xchg
mov
push
inc
or
inc
sbb
push
adc
cli
or
mov
lret
fbstp
pop
jae
subb
fst
xchg
sub
dec
xchg
cs
xchg
adc
jle
repz
repnz
out
cmp
push
je
mov
lret
aam
jb
ret
sbb
fs
jbe
cmp
cmp
cmp
test
mov
mov
lods
inc
sub
enter
dec
test
inc
pop
in
jp
sbb
lcall
js
pop
jmp
adc
xorl
mov
inc
mov
fidivs
ja
test
jns
xor
popa
icebp
mov
sub
and
scas
idiv
or
rol
aam
pop
int3
fmuls
stos
and
out
inc
fnstcw
fisubrl
xchg
add
xchg
xor
pop
dec
repz
call
pop
mov
aam
and
push
jmp
add
lds
jmp
in
push
dec
sub
fwait
xchg
or
mov
loopne
rorl
jae
andl
aaa
subb
adcl
shld
std
fcmovnbe
outsb
std
divl
xchg
lret
jae
dec
popf
inc
popf
decl
sub
mov
pusha
insl
pop
out
test
lods
pop
imul
add
xchg
add
inc
xor
push
pop
mov
insb
mov
popa
cmpsl
les
jne
jge
scas
adc
push
mov
xor
or
enter
ds
dec
int3
aam
dec
loope
js
and
and
push
cltd
dec
pop
lret
jae
shrl
inc
arpl
lods
cmp
sub
cmp
out
pushf
stc
adcb
xchg
sbb
mov
hlt
xchg
aam
push
ljmp
cmp
inc
es
test
jo
scas
cltd
and
sbb
cli
cmp
xor
cltd
inc
mov
push
cmpsl
popa
pop
mov
leave
fstl
jecxz
cmc
sbb
jl
imul
lods
or
xchg
mov
pop
and
push
lods
mov
imul
cs
sbb
shlb
cmp
mov
jb
sub
mov
inc
mov
dec
fsts
movsb
add
mov
pop
out
and
leave
cwtl
pop
or
pop
loope
add
lds
and
std
jecxz
xor
xchg
js
adcb
push
mov
aad
clc
icebp
arpl
pop
jbe
mov
shl
aaa
mov
mov
in
sbb
popa
push
insb
stos
mov
repz
ret
xlat
inc
in
rcl
loopne
imul
fbstp
mov
lods
aam
out
inc
and
dec
mov
or
lods
fdivl
dec
ss
fisubrl
negl
add
xchg
mov
inc
push
fimull
xchg
inc
lock
adc
dec
aam
js
push
jp
pop
inc
jmp
imull
xor
inc
cs
cld
xchg
jl
shrb
or
shll
loope
mov
mov
pop
lds
in
mov
hlt
or
cwtl
push
scas
push
xchg
adc
add
jl
and
into
sarl
add
les
add
loop
mov
push
ret
add
arpl
xchg
sub
notb
rol
fwait
es
jns
mov
mov
arpl
fstps
imul
dec
test
and
filds
mov
loopne
and
icebp
or
inc
fsts
pop
test
sub
inc
fwait
mov
inc
gs
repz
scas
and
jecxz
lea
jne
sbb
dec
jp
int3
ja
sbb
out
aaa
pop
rcll
movsb
sub
cwtl
dec
ja
clc
jae
push
push
lret
sti
xchg
in
call
fnsave
test
dec
push
lods
jp
pop
lcall
dec
pop
xor
mov
testl
jne
mov
sbb
cs
jle
in
sub
call
test
incl
cs
lock
enter
pop
fbld
xchg
es
sahf
mov
xchg
flds
shlb
cmp
add
sbb
test
ja
sub
rcl
sub
pop
mov
out
dec
or
push
inc
faddl
insb
xor
xor
push
cmp
jg
ljmp
insb
fistps
and
imul
xchg
adcl
pop
test
mov
mov
test
adc
nop
cmp
data16
mov
dec
out
dec
ret
test
ret
add
adc
dec
into
sbb
jecxz
dec
cmpsb
lcall
or
cmp
fcompl
ficoml
mov
xor
js
and
xchg
add
or
test
and
dec
in
add
aas
and
dec
imul
enter
push
inc
int3
lret
mov
xchg
aam
cmpl
and
mov
push
pushf
jae
mov
cld
sbb
sub
imul
mov
mov
test
ret
ljmp
xchg
sub
js
mov
mov
imul
lods
push
cmpsb
les
cmc
test
mov
ljmp
push
mov
das
dec
jo
out
rclb
mov
fwait
sbb
repz
addl
lds
push
cmpb
fs
jb
pop
sub
inc
shrb
add
repz
pop
in
adc
std
test
add
iret
xchg
xchg
push
out
or
scas
fldcw
mov
test
add
mov
insl
adc
or
subl
out
jmp
mov
lods
cmp
mov
lods
inc
inc
pop
scas
inc
data16
ljmp
andb
inc
jne
mov
std
lcall
cwtl
arpl
js
ljmp
insl
mov
jecxz
dec
add
push
gs
popa
push
aaa
mov
imul
sub
in
movsb
dec
scas
in
push
push
cs
js
in
bnd
fimuls
push
shll
dec
clc
sbb
sub
ffree
clc
loopne
adc
ret
xor
mov
push
push
or
mov
aam
out
or
cmp
lods
push
mov
div
adcl
xchg
add
aad
sbb
push
stos
in
xor
xor
inc
loop
jle
pop
fsubs
dec
push
jmp
lcall
scas
cs
mov
scas
test
jmp
fisubrl
xlat
insl
lods
daa
or
xchg
xorl
jno
push
cmpsb
push
xchg
inc
mov
rcrb
loope
sti
sub
inc
add
arpl
fmull
cwtl
push
out
sub
cmp
and
cs
fcoml
or
xlat
test
sub
stos
sbb
fisubrl
lret
popa
cs
mov
jle
cmpsl
ljmp
fbld
out
sbb
jecxz
xor
lcall
sbb
ds
mov
mov
mov
cwtl
mov
mov
inc
pop
or
add
sbb
sbb
dec
lods
push
pop
pop
outsl
jnp
mul
mov
push
lea
adc
out
mov
arpl
mov
popa
aam
aad
add
ja
insb
mov
iret
mov
int
movsb
adc
cli
push
repnz
mov
mov
je
xor
and
out
insl
and
jmp
push
add
mov
fs
pop
mov
out
stc
leave
outsb
or
adc
sbbb
mov
cwtl
sub
scas
scas
mov
xchg
icebp
std
push
or
jns
imul
fsub
adc
fidivl
int3
xor
incb
lea
rcrl
mov
inc
stc
fldenv
pop
test
bound
adc
cmc
mov
popa
sbb
rep
lds
sbb
movsl
out
lcall
mov
popf
outsl
lret
mov
cld
nop
and
dec
icebp
adc
out
loope
dec
repz
mov
rcl
mov
and
call
fadds
and
xor
pop
add
int
in
je
cmp
ret
jb
std
jb
jmp
sbbb
push
rcrl
movsl
jbe
xchg
xchg
xchg
cltd
mov
push
sbb
and
xchg
add
pusha
pop
jo
and
and
ret
cmp
jg
mov
jno
rol
dec
jg
inc
lods
lea
xchg
or
sbb
fistpll
lret
mov
fldcw
incl
scas
push
pop
sbb
sbb
ds
sahf
jmp
jmp
mov
pop
popf
add
out
in
push
nop
insl
or
outsl
push
ds
dec
cmpsl
mov
rcrl
jmp
jecxz
mov
sub
xchg
sti
xchg
cmpsb
cmp
jg
std
push
dec
push
aad
sub
pop
push
ficompl
nop
daa
push
xchg
out
es
or
dec
mov
mov
jne
fpatan
pop
imul
push
lahf
push
pop
push
mov
ss
pop
push
sahf
add
test
mov
pop
jae
cli
mov
das
div
mov
repnz
push
in
mov
fdivp
push
mov
mov
adc
and
adc
rolb
loopne
mov
adc
cmpb
cli
std
sahf
xchg
out
adcl
out
sub
dec
or
test
in
or
jg
les
mov
xor
xchg
push
inc
popa
popa
movsb
nop
sarb
fldl2t
dec
fwait
shr
std
arpl
aaa
dec
stos
test
sbb
and
inc
sbb
jbe
push
push
ret
clc
lods
push
cld
pop
lret
jmp
xor
inc
pop
loop
jo
jno
shrb
adc
pop
fldt
mov
push
loop
out
mov
scas
rcrl
mov
and
hlt
xor
cmp
mov
sub
mov
pushf
mov
xlat
cmp
pop
sub
pop
sub
jg
jp
xchg
sbb
div
pusha
addr16
mov
mov
cmp
imul
lcall
cwtl
stos
pop
dec
adc
negb
sahf
int3
out
cmpb
or
cmpsl
push
ficoml
aas
popa
adc
inc
cwtl
stos
enter
cmc
insb
fldcw
out
enter
sti
pop
aam
jp
lods
xchg
mov
enter
jecxz
inc
enter
push
jnp
int3
and
xchg
ret
jle
cmpsb
nop
fmuls
outsl
loop
mov
ret
add
leave
adc
sub
mov
fimuls
or
gs
push
and
mov
cmpsb
repz
sbb
shrl
sbb
shll
mov
scas
inc
xor
lods
testl
sub
enter
cs
cmp
sbb
mov
or
jl
sub
or
das
aad
cmp
xor
push
mov
sbb
fdivl
dec
js
push
popf
pop
mov
fwait
or
rorl
pop
mov
and
fsubrp
and
mov
xchg
cmp
pushf
loope
add
adc
adc
mov
xchg
dec
in
dec
push
out
adc
inc
repz
jne
cmp
mov
dec
mov
ficomps
lock
sti
xor
mov
lods
cld
push
sarl
enter
pop
hlt
mov
sbb
adc
inc
inc
lods
std
mov
pop
pop
in
mov
test
addr16
rcll
ret
jp
cmp
je
push
addr16
ljmp
jg
inc
rclb
cmpsl
lods
mov
cwtl
inc
dec
js
repnz
pop
cmpsl
iret
cwtl
adc
pop
popa
xor
pop
cmp
fisubrs
stos
aaa
jg
insl
add
sub
mov
adc
adc
xor
push
add
out
stos
aas
add
push
repz
xchg
and
xor
cli
mov
dec
mov
lret
lret
in
mov
add
inc
ss
sbb
xor
les
xchg
jae
lods
inc
jnp
imul
pushf
aad
mov
pop
repz
or
pusha
mull
scas
call
scas
mov
inc
and
dec
pop
sbb
dec
jge
push
insb
add
add
outsb
lods
cmpsl
ds
jns
sbb
fdivl
sti
ja
out
ljmp
mov
sub
test
xor
sbb
inc
dec
or
lods
imul
inc
add
inc
jnp
cmp
popf
lret
iret
sub
adc
test
fnsave
sbb
fsubrl
add
aas
mov
icebp
xchg
jge
mov
inc
jmp
jb
sti
out
jo,pn
sbb
or
inc
stos
outsb
sub
test
repz
mov
cmc
mov
aam
xor
in
pop
fcomi
adc
dec
and
js
push
leave
mov
mov
and
lahf
jns
jp
add
add
xchg
scas
xchg
jb
mov
aas
adc
add
sub
in
testl
int3
xchg
inc
push
dec
cmp
vmovhps
xlat
aad
mov
add
cmp
mov
ret
aam
jecxz
jo
int3
mov
cmpb
or
std
xchg
nop
mov
sbb
outsb
fdivs
add
jo
or
cmp
adc
xor
subl
fimuls
enter
mov
outsl
dec
shlb
dec
fs
sarb
push
sbb
repnz
sub
mov
fwait
mov
fstps
mov
pop
mov
ret
mov
and
fs
xor
cmp
inc
icebp
jge
inc
dec
repz
dec
loopne
adc
push
in
or
ffreep
lock
loop
mov
inc
aam
mov
sbb
xchg
addl
sub
pop
pop
repnz
sarb
out
dec
int3
arpl
insl
xor
lods
out
fidivl
pop
xchg
mov
stos
or
scas
xchg
sbb
add
fdivl
call
or
stos
jle
ffree
mov
jecxz
and
pop
aas
jecxz
in
insl
lret
sub
lods
stos
jge
cmp
gs
jbe
add
lods
mov
sbb
sbbb
lret
jne
mov
aad
andl
sti
call
or
add
or
pushf
iret
jbe
lods
push
clc
stc
push
inc
int3
lret
inc
mov
dec
loopne
leave
movsl
add
and
rclb
mov
inc
bound
pop
jae
xlat
outsl
fs
inc
icebp
pop
jb
pop
and
fisttpll
lcall
popf
push
icebp
xchg
mov
add
xchg
fistpl
sub
pop
cmp
or
inc
mov
out
push
pop
pushf
pop
jp
add
push
outsl
mov
scas
xchg
push
fnstenv
pop
sbb
xchg
mov
rclb
lgdtl
xor
test
push
jle
fwait
lock
inc
jl
and
sub
cli
dec
lods
sub
repz
mov
jp
loopne
lods
jge
loope
mov
push
scas
mov
arpl
ss
into
sub
enter
xchg
int
in
mov
jo
in
es
push
pop
dec
and
dec
pushf
aas
dec
lcall
pop
add
push
cmp
mov
push
test
pop
fcmovnu
and
pop
mov
xchg
xor
das
hlt
pop
lock
push
call
out
inc
sbb
mov
dec
out
mov
jl
nop
or
ljmp
xor
stos
pop
xor
inc
mov
arpl
stos
pop
test
mov
sub
pop
inc
sub
adc
cmp
scas
loope
fdivl
jecxz
sub
stc
xlat
aas
loop
aas
leave
aam
movsb
jno
mov
ja
jns
lods
inc
rcrl
fucom
jecxz
cli
sub
fstp
pop
popf
das
cmp
adcb
pop
cmc
cwtl
dec
sarb
rcrb
cmp
std
xchg
fisubrl
cli
mov
andb
add
push
sub
push
lock
in
mov
push
jmp
stos
hlt
sub
mov
je
cmp
xchg
mov
sti
mov
pop
out
das
jnp
dec
lods
outsb
add
jns
xchg
cld
cltd
adc
repz
aad
cmpsl
inc
movsb
pop
stos
sub
mov
popf
cmp
mov
push
popa
cld
iret
mov
sub
xchg
fcompl
outsl
xor
stos
lret
sub
pop
popf
pop
fwait
xor
mov
es
xor
ret
jecxz
mov
push
cmpsl
popf
insl
xor
inc
fdivr
inc
cld
scas
outsb
mov
aaa
sarl
pop
pop
je
ds
sbb
push
jno
jp
aaa
pop
lock
push
mov
ret
and
aas
loope
pop
icebp
cmp
stc
mov
aad
add
jl
popl
stc
sarl
inc
fwait
lret
pop
xchg
xor
mov
aaa
push
push
push
dec
sub
lods
push
stos
xchg
inc
lock
pop
lds
add
jmp
mov
rcl
sbb
push
and
xchg
push
or
xlat
xor
cmp
add
mov
outsb
fstl
cltd
outsb
or
out
xor
je
add
jnp
gs
insl
xchg
arpl
pop
scas
adcb
cmp
xor
xor
mov
jmp
add
push
mov
pop
mov
or
gs
mov
insb
in
je
adc
xchg
into
gs
dec
sub
in
add
dec
lret
push
inc
fsubrl
xchg
cmpsb
mov
jp
jmp
jmp
jmp
sub
test
inc
das
lods
pusha
jp
push
aad
mov
mov
xor
arpl
popf
mov
sbbb
shl
push
push
mov
popa
xor
lret
out
pop
adc
sub
mov
jmp
or
ret
inc
cmp
push
into
push
pushf
es
add
mov
jbe
in
test
fisubrs
sbb
xchg
daa
addr16
xlat
sub
or
xchg
and
fucomp
mov
cwtl
stc
popf
cmp
ss
jmp
pop
adc
sbb
and
mov
je
repz
scas
and
cli
nop
xchg
enter
data16
mov
fildll
inc
pushf
das
les
addr16
gs
and
cmp
lea
mov
shll
imul
out
mov
lret
mov
aam
xchg
ds
xor
push
aas
icebp
leave
in
xchg
add
xchg
adc
aam
pop
sbb
dec
in
sub
pop
mov
shlb
cmp
sub
pop
jae
pop
stos
adc
mov
loope
mov
and
pop
adc
arpl
xchg
lea
jo
push
dec
push
jne
or
mov
push
mov
pop
pop
aas
dec
std
pop
push
mov
imul
adc
fildl
fs
es
pop
sub
addr16
ret
xchg
imul
dec
mov
jns
aam
mov
sarb
pusha
jge
dec
outsb
add
aam
repz
pushw
dec
lret
inc
rorl
and
mov
rorb
pop
xchg
imul
imul
pop
clc
pop
xchg
mov
pop
aam
lcall
dec
in
scas
dec
inc
jmp
les
jecxz
and
ret
pop
dec
ja
jne
scas
loope
loope
cld
dec
sub
popf
xor
enter
mov
outsb
imul
out
mov
push
inc
sbb
mov
cwtl
std
pusha
jecxz
into
outsb
xor
enter
ss
mov
add
ss
mov
push
movsb
out
fadds
addr16
insb
mov
dec
sub
mov
popa
test
dec
in
pop
lahf
push
aam
mov
int
push
dec
and
jns
dec
mov
lahf
jo
insb
das
fwait
shrl
dec
jecxz
pop
mov
xchg
mov
mov
test
pop
aad
gs
push
les
test
in
pop
pop
cmp
mov
jns
stos
inc
cltd
xchg
or
add
xor
es
in
lods
push
movsl
pop
mov
je
stos
push
mov
xor
aas
test
add
push
outsl
in
pop
dec
pop
or
push
js
pushf
js
push
or
loop
xor
gs
iret
pop
out
leave
cmpsb
push
dec
jbe
int3
cmpsl
jo
push
sub
lds
sbb
fcoms
add
gs
push
add
test
test
leave
enter
jmp
out
sbbb
popf
dec
in
jmp
inc
mov
addr16
icebp
pop
dec
or
pop
mov
ja
orl
subl
ret
pop
cwtl
jae
es
cmp
lods
call
mov
or
inc
sbb
mov
pop
dec
movsl
dec
pushw
mov
mov
jge
xchg
sub
pushf
push
fadds
lods
lds
push
lods
inc
out
mov
push
push
jns
repnz
cmc
or
adc
xchg
sbb
addr16
jb
or
fidivs
xor
add
movsl
and
mov
push
scas
test
mov
push
xorl
lods
and
sub
cmp
jae
mov
adc
lods
lret
outsl
lds
arpl
inc
aam
xor
mov
dec
ss
es
mov
pop
inc
sbbl
jbe
and
movsl
std
scas
adc
xlat
sub
stos
jmp
cwtl
les
xor
int3
testb
pop
xor
jle
xor
dec
dec
stc
xchg
mov
or
sbb
mov
xor
lds
xor
fsubrs
fcompl
and
xor
mov
fcomip
fdivs
push
ljmp
adc
pushf
subl
mov
stc
pop
cmp
notl
lea
pop
inc
data16
lods
andl
xchg
pop
repz
and
add
nop
xorl
shl
inc
xchg
xchg
jmp
xor
daa
push
pop
jb
in
or
icebp
jg
aas
popa
lret
fisttpl
rolb
sub
lods
test
sbb
jae
incl
movsl
bound
mov
aad
movsb
inc
xor
iret
inc
or
add
xchg
and
and
loopne
imul
inc
mov
imul
imul
xor
xchg
mov
aam
das
cs
insl
sti
out
xorl
lods
sub
sbb
les
jo
sbb
cmc
lret
lret
jno
jno
lret
pop
push
inc
call
test
test
mov
add
sub
cmp
pop
pop
adcb
jl
xchg
icebp
iret
out
mov
fists
cmpsb
mov
jne
test
fnsave
push
outsb
mov
loope
dec
nop
sub
stos
in
jg
sbb
mov
lahf
dec
jecxz
cld
addr16
popa
lock
out
dec
sbb
cmp
mov
fs
or
int
pushf
lods
imul
addr16
adc
out
mov
in
imul
mov
push
and
mov
xlat
imul
fidivrl
lret
push
xchg
xchg
aaa
inc
fstps
xor
xor
filds
int3
and
inc
adc
js
jecxz
std
faddl
movsb
arpl
mov
js
jl,pn
push
ret
inc
ds
ljmp
leave
mov
jle
mov
clc
testb
pop
pop
sub
dec
je
lahf
dec
addr16
and
int
mov
mov
pop
pop
jmp
mov
imul
enter
xchg
stos
insb
or
mov
push
hlt
subl
mov
ret
pop
fsubl
xchg
sub
pop
or
les
lock
xchg
dec
cwtl
sub
dec
loope
mov
mov
push
xchg
lock
dec
dec
cli
xor
push
mov
jbe
sbb
ret
test
out
jmp
out
pop
xchg
add
inc
addl
in
test
es
arpl
mov
es
inc
sub
cwtl
fnstsw
loop
cmp
push
fsubr
cmp
aaa
pusha
insl
xchg
mov
mov
xchg
out
icebp
push
xor
cmpl
pop
insl
mov
push
out
nop
add
shll
jne
stos
push
pop
lock
adc
dec
inc
aas
ja
dec
das
das
call
cmpsl
inc
data16
ss
je,pt
mov
and
xchg
xchg
mov
sub
inc
mov
in
mov
cmc
dec
push
or
repnz
scas
mov
lods
cmp
pushf
add
pop
jge
dec
data16
and
or
repz
push
cmp
fwait
sbb
push
inc
sbb
jne
gs
pushl
test
aad
sbb
mov
jle
enter
rolb
adc
push
pop
push
pop
add
repz
mov
fistpll
push
movsl
cmp
sbb
mov
aaa
pop
xchg
pop
shlb
and
gs
cwtl
inc
cmp
pop
negb
cmp
xlat
clc
int
mov
hlt
pop
jp
mov
imul
mov
shl
es
in
repz
loopne
ja
mov
jno
cmp
mov
mov
cmp
les
sti
rorb
mov
fs
inc
mov
js
cld
les
or
out
mov
cmp
sub
sti
add
inc
sti
enter
dec
int3
mov
mov
and
dec
xchg
clc
aaa
push
inc
mov
mov
fs
add
add
dec
or
pop
push
pop
pop
jnp
pop
out
xor
cs
push
aad
test
mov
insb
dec
out
mov
push
sub
adc
stos
jae
lret
inc
repz
das
mov
inc
mov
sub
lcall
and
lret
stos
cmp
push
aas
jbe
cmp
add
cmpsl
in
int
into
cmpsb
and
xorl
out
call
jne
pop
insb
adc
popa
movsl
pop
xchg
nop
push
xchg
cmp
and
pop
and
or
jbe
in
inc
adc
xchg
inc
cmc
jp
jbe
movsb
or
fsubrl
lea
fsubrp
inc
push
lea
mov
jne
mov
test
pushf
push
jmp
or
push
and
push
test
nop
addr16
pop
je
iret
aad
push
cmovbe
out
test
xor
lret
repz
jns
ffreep
rcr
ret
pop
repnz
fdivl
dec
out
jg
in
test
insb
sbb
cmp
sbb
cltd
jecxz
ret
scas
dec
pop
nop
scas
dec
loop
cltd
mov
adc
cld
pop
jmp
cmp
jo
push
pop
dec
push
pop
dec
sti
xchg
popf
pop
adc
xorb
stos
mov
mov
repnz
nop
data16
mov
pop
cmpsb
jp
and
mov
inc
and
xor
mov
cmp
mov
movsb
dec
imul
imul
out
xorb
repnz
dec
icebp
nop
cmp
mov
test
fcmovnbe
mov
test
mov
sti
das
addr16
or
cmc
push
dec
mov
std
mov
stos
aad
fwait
pop
inc
repnz
lds
jb
js
jge
mov
xchg
push
lods
pop
js
xchg
pop
adc
insl
shrl
mov
arpl
adc
mov
dec
loop
cwtl
cs
adc
test
popf
sub
push
mov
jle
cmpsl
jp
sub
jge
divb
jg
sahf
cltd
mov
jb
shlb
ret
adc
insl
test
sti
rcll
fwait
xor
outsl
pop
outsl
lcall
js
and
push
xchg
inc
scas
add
inc
popa
push
lods
cmpb
bndstx
fucomp
xchg
push
sub
adc
into
ret
add
push
dec
out
dec
adc
push
incb
sbb
push
xchg
frstor
dec
jle
xchg
push
inc
movsb
out
inc
out
in
sti
xor
in
sub
push
xor
add
and
int
dec
loop
sbb
mov
fidivrl
xchg
testb
jne
add
repz
sbb
push
jge
cmp
fwait
sti
stos
and
testb
je
cwtl
je
popf
leave
fs
jb
movsb
push
inc
ljmp
jb
jae
lcall
jns
in
mov
adc
mov
lea
adc
jge
imul
sbb
or
push
adc
test
gs
mov
sub
add
test
or
pop
sbb
pushf
in
mov
fwait
and
setle
jns
mov
mov
sbb
or
fistpl
xor
xor
pop
das
adc
loope
loopne
cmpsl
xchg
push
inc
rol
out
push
mov
mov
sahf
aaa
add
arpl
jae
iret
cmp
mov
mov
dec
cmp
cmp
nop
daa
aad
mov
mov
out
test
sbb
mov
fnsave
int
mov
pop
sub
dec
lret
call
jecxz
push
in
cmp
inc
fimull
les
mov
mov
mov
cmp
mov
inc
fimull
scas
inc
ficomps
fnstcw
cmp
shrb
shrb
jg
subl
and
js
dec
jecxz
pop
adc
xor
shrl
int
mov
fsubrs
xor
out
mov
pop
lods
inc
popa
ret
pushf
xor
scas
ja
and
fiaddl
hlt
sbb
mov
int3
jns
lret
out
jp
scas
ljmp
fimull
or
adc
pop
imul
lahf
xchg
aas
xchg
add
shlb
into
not
xor
movsl
sti
mov
mov
scas
xchg
mov
out
loop
adc
ret
ja
aas
xchg
mov
or
or
add
jnp
fs
sbb
rorl
pop
bound
adc
sub
xor
xor
mov
push
or
decb
fdivl
in
push
aam
jo
mull
mov
jl
jno
inc
xchg
sub
mov
rolb
jge
negb
addr16
or
shlb
iret
fucomi
dec
and
call
sub
push
mov
inc
and
js
jo
xchg
adc
enter
popa
jmp
cs
pop
adc
xor
insl
rcrl
mov
popl
pop
push
in
xchg
std
loope
bound
jne
iret
fidivl
inc
dec
fsubp
adc
inc
jl
cwtl
or
stc
sbb
std
xchg
push
jge
mov
dec
add
xor
lret
mov
fucom
mov
in
outsl
loop
jge
add
sbb
jecxz
cmp
push
push
sub
sarb
ror
xchg
test
jns
xor
mov
jge
dec
push
js
in
mov
ret
ljmp
mov
pop
mov
push
mov
xlat
orl
xchg
dec
pushf
lods
push
imul
lods
out
xor
add
push
dec
out
jp
mov
jmp
jmp
enter
inc
pushf
jbe
jge
lods
and
sahf
push
data16
imull
ret
inc
inc
mov
sti
push
cli
push
pop
jl
inc
lcall
pop
inc
cli
imul
and
xor
shrb
cmp
mov
hlt
mov
int
dec
sti
xchg
adc
repz
mov
outsb
je
jns
gs
cmp
push
sub
lret
mov
daa
push
stos
clc
push
imull
or
cmp
fxch
ficomps
push
dec
fbld
jae
adc
sub
dec
jle
fstpl
xchg
in
fs
mov
xchg
test
fadds
mov
jne
cmp
inc
sbb
mov
jl
sbbl
ret
clc
cli
adc
gs
mov
xchg
scas
push
stos
mov
lret
loope
mov
jnp
push
aaa
add
repz
sti
inc
loop
adc
mov
addb
xchg
inc
xchg
aam
and
imul
inc
xor
test
inc
loop
ja
sub
dec
xor
jg
inc
jmp
enter
rep
jmp
subb
in
mov
fidivl
dec
add
daa
mov
dec
aad
fadd
test
ja
push
mov
push
insb
add
push
out
idiv
xlat
fdiv
or
jge
pop
adc
and
jmp
and
pop
mov
xor
mov
stc
rorb
or
mov
fildll
push
add
and
jle
pop
push
push
pushf
push
sbb
cmpsb
pop
and
enter
or
push
add
loope
inc
sub
mov
push
sbb
xor
inc
xor
sbb
test
loop
xor
mov
inc
aas
mov
cmp
and
jmp
cmpsl
xchg
cmpsb
out
out
pop
int3
fidivl
mov
clc
inc
fstpl
jl
fimull
out
addr16
imul
int
testb
mov
lret
aaa
dec
int3
push
xor
mov
adc
push
mov
ds
mov
inc
add
cmpsl
cld
fildl
movsb
popa
mov
xchg
cmp
sub
test
jp
mov
sub
out
pop
dec
sub
lea
cmc
rorb
cmc
inc
and
mov
push
ss
xchg
fimuls
inc
loope
aam
push
mov
lret
iret
pop
js
mov
adc
push
jmp
jo
and
push
outsl
xor
and
dec
xchg
mov
cmpsb
pop
jecxz,pt
mov
subl
loope
dec
sbb
scas
aas
roll
jns
out
cld
call
or
outsl
loope
push
fists
sub
xchg
out
xchg
sbb
pop
sub
outsb
lahf
and
cmp
pop
mov
out
fcmovb
or
cli
and
pushf
cmp
push
mov
jg
into
cmp
aas
pop
jns
push
push
sbb
fxtract
push
icebp
ljmp
int
xor
pop
sbb
and
dec
daa
or
cmpsl
adc
popf
repnz
imul
les
sbb
ret
mov
pop
push
sub
pop
outsb
mov
mov
cmc
jb
push
sub
push
es
cmp
adc
addr16
sbb
ljmp
sub
icebp
xchg
mov
jg
jge
sbb
add
es
push
js
divps
cli
or
rcr
arpl
fldl2e
addl
or
xor
mov
xlat
push
adc
jg
inc
mov
outsl
sub
mov
dec
in
repnz
dec
ljmp
imul
sahf
pop
mov
push
xor
push
testb
loope
sahf
mov
orb
add
movlps
inc
mov
adc
sahf
adc
jge
cmp
notl
test
in
mov
testl
dec
rdtsc
adc
push
push
cltd
adc
mov
and
cmp
aam
mov
mov
insb
push
xor
add
rorb
mov
daa
aad
add
dec
test
sbb
test
cmpsl
push
shll
sbb
leave
inc
push
or
cbtw
das
cwtl
cmp
lret
lahf
mov
dec
inc
in
adc
add
fucomp
cmp
in
test
mov
movsl
xchg
sub
mov
in
xor
scas
in
pop
sbb
inc
xchg
in
call
mov
ljmp
inc
call
push
pop
movsb
loope
sbb
jp
inc
shlb
cmovge
or
out
dec
lahf
adc
pop
std
jecxz
ficompl
cmp
inc
xchg
pop
jl
add
repz
clc
or
inc
cwtl
hlt
adc
push
pop
inc
or
adc
jnp
imul
fisubl
sub
push
jbe
enter
call
fdivrs
insl
xchg
enter
in
aaa
lcall
xchg
in
outsb
sbb
pusha
idivl
or
sbb
cmp
cmp
lods
inc
ds
rcl
fmuls
push
adcb
pop
pop
sub
xor
pop
xor
adc
js
add
and
xchg
push
dec
inc
mov
rorb
push
out
shlb
jno
outsb
add
push
xlat
jne
or
je
push
jno
lods
fwait
aas
fidivrs
je
ds
xor
fsubr
mov
dec
jnp
in
clc
pop
pushf
shll
enter
iret
push
inc
lock
rcrl
lds
mov
mov
mov
negl
je
jnp
repz
mov
loopne
fdivrl
push
int3
bound
add
inc
pop
pop
cmp
subl
pop
add
push
xchg
ss
out
push
mov
stos
dec
imul
adc
dec
int3
popf
aad
stc
inc
in
dec
sbbb
xchg
icebp
xchg
lahf
jns
in
pop
lahf
push
xor
add
flds
and
xchg
sub
dec
add
iret
mov
ret
cmp
lock
test
lcall
pop
lock
insl
ljmp
cmp
inc
pop
push
or
adc
cmp
cmp
or
sti
jae
in
xchg
cmp
adc
mov
xchg
jg
cmc
push
leave
mov
fildl
fdivp
lods
fcoml
int
ss
or
push
call
inc
sbb
push
sbb
mov
dec
pushf
and
je
inc
faddl
insl
scas
pop
data16
jbe
pop
test
out
mov
jb
ja
rcrl
sti
dec
inc
adc
fmulp
ljmp
mov
dec
out
jg
mov
jbe
int3
addr16
pop
mov
fists
cmp
imul
add
cld
jg
add
fs
jnp
push
lock
int3
xchg
sub
push
mov
in
push
cmp
lret
cmc
xchg
inc
cmpsl
inc
inc
cmp
and
xor
std
cltd
xor
pop
mov
imul
aas
fwait
aad
icebp
sahf
mov
lret
in
outsb
jge
cmp
dec
mov
ficoms
xor
fwait
mov
test
xchg
xor
mov
jp
push
inc
push
addb
inc
bound
add
push
negb
out
adc
jbe
out
and
adc
sti
push
mov
ret
aad
dec
repz
scas
sbb
and
mov
push
jl
fcmovne
mov
push
mov
mov
inc
gs
xchg
arpl
mov
lods
or
cld
cmp
ds
xor
sub
fisttpl
stos
bound
push
imul
xchg
adc
and
mov
dec
mov
imul
loopne
dec
loope
hlt
loope
jbe
lahf
jecxz
shll
xor
xchg
test
das
pushf
sub
scas
sub
jmp
orl
inc
xchg
mov
jne
hlt
push
push
sbb
test
imul
out
popf
xchg
adc
xchg
xor
cmp
ret
out
add
mov
push
fiadds
pusha
sub
call
cltd
mov
add
dec
out
and
xor
pop
cmp
mov
xor
jmp
dec
cmp
xor
imul
adc
notb
notl
arpl
outsl
push
movsl
addr16
cmpsl
movsb
dec
lea
and
mov
cmovbe
jno
popa
jl
rolb
jno
insb
out
xchg
in
xchg
sbb
cmpsl
mov
nop
test
mov
mov
cmpsb
mov
loopne
and
cmp
cmp
or
mov
mov
xchg
cmp
xor
test
jne
test
rcrb
and
ljmp
sbb
mov
jne
imul
add
clc
decl
mov
mov
out
adc
xchg
data16
pop
push
pop
insb
in
mov
fsubrp
mov
dec
sbb
push
sahf
xor
rcll
loope
xchg
adc
xchg
cs
mov
sbb
in
push
jge
lea
arpl
dec
jb
lcall
cltd
fcmovne
std
or
in
sbb
add
xor
insb
add
cltd
jb
mov
sub
ret
cmp
sti
call
test
outsb
popf
rcrb
jle
push
in
fldl2t
push
jae
and
xor
mov
lcall
push
in
jmp
repz
test
jae
pop
inc
inc
inc
je
sti
fidivrl
ljmp
xlat
outsb
add
test
loopne
bound
cmpsl
add
jb
ret
fstp
jecxz
lcall
sbb
int3
sbb
rcll
test
sbb
fdivr
scas
mov
nop
jecxz
je
jne
sbb
jl
mov
mov
fwait
xor
xchg
enter
or
scas
add
xchg
mov
call
sub
stc
mov
xor
jecxz
idivl
add
mov
das
test
rolb
or
sbb
sub
in
out
add
loope
push
push
jmp
xchg
out
cmc
sbb
jb
je
cmpsb
jp
xchg
nop
daa
jl
inc
mov
ret
pop
insl
pop
or
lea
jmp
ret
jne
or
xor
fisubrl
je
call
xchg
pop
ret
add
ja
outsb
mov
fstpl
mov
pop
mov
mov
adc
xchg
outsl
mov
setle
and
ja
outsb
fwait
ss
incb
mov
xchg
adcl
jne
sti
push
sub
insb
push
rclb
popf
ret
sar
push
or
mov
push
dec
roll
iret
jae
mov
or
jge
mov
jmp
subl
sbb
mov
push
or
pushl
jmp
mov
test
ja
mov
or
mov
shll
ss
data16
pop
fidivrs
int
mov
in
jp
int
pop
xchg
jg
enter
scas
mov
scas
cmpsb
jb
push
push
cmp
xor
or
flds
test
or
lods
adc
mov
cmc
adc
inc
dec
xlat
outsb
jle
cmp
fbstp
shlb
in
xor
mov
out
xor
mov
ds
inc
lods
mov
cmp
aaa
cmp
dec
out
xchg
or
mov
hlt
dec
push
fcmovnu
imul
cmp
jae
addr16
xchg
dec
clc
mov
dec
cmp
hlt
mov
xlat
subl
divb
outsl
aam
cmp
mov
scas
mov
cmp
or
int
outsb
hlt
push
cmpsl
jns
ja
mov
cs
sub
xchg
mov
arpl
pop
push
mov
popw
xchg
jb
dec
scas
mov
and
lahf
jle
ljmp
xor
hlt
xchg
ja
mov
subl
xchg
hlt
fisubrl
ret
sub
mov
sbb
dec
jb
cli
xchg
sub
lds
mov
int
xor
adc
mov
xor
cmp
ja
xchg
mov
push
xor
mov
mov
sbb
inc
movsb
les
shr
scas
xor
add
data16
mov
pop
mov
int
leave
cmp
cmp
xor
test
iret
jp
pushf
mov
adc
inc
jb
loope
dec
fwait
movsb
ret
sarl
ljmp
mov
lahf
sahf
sub
pushf
lods
fwait
xor
pop
das
rcrb
add
pop
cmpsl
out
aaa
or
cmp
mov
and
sub
adc
mov
into
adc
adc
cmpsb
xor
sub
imul
js
jne
adc
sbb
add
xchg
jle
sub
inc
sbb
ja
lds
test
xor
popa
adc
insb
scas
test
lods
in
jmp
sub
dec
sbb
dec
jne
int3
mov
adc
cmp
and
inc
aam
addr16
jne
sbb
dec
pusha
cld
orl
das
or
fld
loop
stc
cli
mov
rorl
aaa
mov
inc
ljmp
jno
insl
lret
stc
iret
and
stos
pop
sbbl
dec
jecxz
in
lret
cmc
and
add
ror
add
dec
call
xor
adc
mov
dec
mov
jecxz
push
xor
popa
mov
mov
out
enter
adc
push
psubusb
or
inc
out
push
out
popf
loope
shll
ret
stos
pop
dec
xchg
lods
push
loop
dec
lods
cmp
mov
aam
fbstp
xchg
test
xchg
imul
add
clc
xlat
jo
or
add
xor
jno
aad
iret
jle
add
movl
push
xlat
xorl
sub
shll
hlt
lcall
mov
je
lret
push
xchg
int3
pop
sbb
sti
xchg
jo
daa
pop
jg
sbb
fsts
mov
movsb
push
fwait
xor
inc
jmp
das
or
pusha
adc
pop
mov
insb
jle
cmp
jbe
rep
rcll
sbb
mov
or
sub
fnstenv
rolb
mov
mov
mov
pushl
xchg
mov
test
enter
mov
xchg
scas
in
xchg
push
mov
inc
dec
and
dec
xchg
ret
mov
shr
cmp
mov
jp
lods
xchg
rcll
mov
mov
fstl
mov
scas
jns
mov
gs
cwtl
movsb
xor
adc
jp
pop
std
je
jge
xchg
pop
in
sbb
xor
mov
ss
rcrb
orl
pop
xchg
fildll
mov
pop
insb
adc
adc
mov
gs
xchg
sahf
mov
data16
out
mov
cmpsb
ss
bound
mov
mov
loope
arpl
pushf
xor
in
lea
mov
or
into
outsb
push
or
divl
dec
add
mov
rcr
test
fiadds
lea
lret
sub
loopne
inc
mov
xchg
cmpb
sbb
loope,pn
or
fisubrl
es
mov
imull
arpl
lods
mov
fisubrs
ficompl
mov
icebp
aam
pop
mov
sbb
enter
aad
push
jno
je
int
iret
sbb
xor
cmpsb
inc
mov
das
nop
ret
lock
aas
insl
sub
pop
cmp
stc
push
popf
fwait
mov
pop
out
and
or
dec
loop
aam
pop
dec
subb
in
sub
pop
add
adc
jl
sbb
xchg
gs
imul
mov
mov
push
cmp
stos
roll
outsb
lds
xor
fcmove
imul
xor
stc
xor
int3
fistps
xor
pop
inc
fidivrs
inc
adc
bound
cld
mov
jp
sub
cltd
stos
cli
push
addr16
lds
sub
cs
mov
mov
mov
add
in
lahf
mov
outsb
sub
dec
xor
mov
mov
add
jae
subb
push
mov
push
pop
pop
jecxz
cmp
sub
mov
or
enter
and
imul
and
mov
scas
jb
jmp
jnp
xchg
pop
clc
movsb
sbb
pop
sbb
mov
lret
icebp
or
adcb
mov
ljmp
and
cmpsl
aaa
xchg
popf
outsb
mov
aam
in
out
cmp
mov
shr
or
addr16
and
pop
push
mov
mov
xchg
jge
inc
test
mov
outsl
inc
daa
mov
push
xchg
sub
arpl
mov
aad
push
lahf
sbb
fisubl
pop
ljmp
jmp
sti
aaa
mov
jnp
fistpl
or
add
mov
push
ret
int3
push
repz
ret
jp
dec
inc
jmp
mov
out
lret
int
sub
inc
insl
int3
dec
cmp
out
push
pop
push
js
or
cmp
fcomp
movsl
pusha
hlt
dec
pop
cs
jmp
xchg
pushf
adc
fstp
cmpsl
push
outsl
push
or
xchg
in
adc
fsubs
pop
fcmovu
icebp
lock
in
xor
movsb
out
sub
xchg
popa
adcl
mov
scas
xor
push
ss
insl
mov
jnp
lret
cltd
dec
pushf
lahf
sub
out
fwait
mov
xor
scas
addr16
shll
push
icebp
js
or
ret
pop
xchg
fisubrs
lret
push
cmp
loopne
jno
lods
cwtl
dec
icebp
in
xor
fs
jo
aaa
pop
imul
lea
lahf
jl
add
cmpsb
xchg
dec
in
hlt
mov
fwait
in
lcall
sub
or
js
push
add
fstpt
lods
mov
mov
cltd
xchg
jl
and
mov
inc
lahf
rol
or
cmp
enter
mov
hlt
sbb
dec
shll
mov
andl
inc
popa
xor
cmc
mov
andb
scas
mov
lods
ret
popa
clc
inc
jge
mov
fs
adc
shl
cwtl
add
pop
hlt
or
test
mov
ss
stos
fwait
insl
xchg
push
push
sbb
lcall
pop
jg
push
xchg
lods
movsb
mov
mov
mov
out
and
movb
cmp
scas
fldcw
or
outsb
sbb
cmp
or
jno
and
push
xchg
pusha
cmp
insl
bound
xchg
mov
test
pop
pop
ret
or
clc
fsts
and
repz
sbb
push
cmp
movsl
fs
ljmp
clc
cmpsl
dec
mov
mov
dec
pop
movsl
icebp
rol
xchg
sub
jb
shll
ret
mov
dec
jne
cmpsb
insb
jne
insl
inc
in
sti
mov
mov
add
xchg
insb
sub
insb
add
dec
mov
repz
push
lods
pop
sbb
pop
sub
int3
inc
xchg
sub
cmpsl
iret
lock
sub
test
in
loope
stos
int
add
cmp
jl
mov
test
mov
clc
ret
sbbl
sub
jns
and
in
xor
pushf
loop
or
jecxz
daa
pop
jns
shlb
cltd
imul
sbb
outsl
jp
sub
or
jl
loope
cmp
sbb
dec
outsl
rol
ret
jae
ret
sub
pop
mov
jg
shrl
inc
arpl
mov
in
mov
outsl
cmp
pop
cmpsl
push
xchg
mov
or
cs
and
jne
cmpsb
sbb
xor
jmp
mov
xor
mov
out
xchg
icebp
push
sub
sbb
out
mov
xor
lahf
out
inc
mov
add
out
andl
sti
mov
sub
mov
iret
jecxz
sahf
idivb
hlt
scas
fsubl
leave
or
sbb
inc
or
cs
push
cmpsb
popa
mov
adc
sarb
repnz
out
ret
hlt
or
jmp
lcall
lcall
and
testl
js
popf
xor
pop
mov
mov
xlat
push
jl
aad
xchg
popf
xchg
xor
movsl
or
cmpsb
aad
cwtl
repnz
imulb
nop
push
mov
cltd
rol
movsl
add
scas
and
or
hlt
enter
pop
loope
iret
adc
hlt
xchg
or
testb
or
pop
or
das
jnp
leave
mov
aad
ljmp
pop
test
pop
add
mov
sahf
pop
test
bound
xchg
mov
mov
jo
sbb
xchg
mov
subl
dec
mov
fidivs
xlat
int3
mov
adc
mov
add
mov
xor
ficomps
xchg
fisttps
dec
out
add
xor
jg
inc
xchg
shll
test
popa
inc
or
or
loope
pop
pop
sbb
mov
sub
mov
out
cmpsl
lea
imul
jns
loop
ljmp
mov
push
dec
push
adc
loopne
mov
leave
ljmp
cmc
js
cmp
cmp
lret
xor
lods
inc
jnp
fadds
mov
push
fsub
lea
aam
into
mov
out
push
pop
rcrl
bound
fcmove
sbb
add
outsb
dec
fstpt
mov
mov
xor
inc
pop
loope
out
popf
out
dec
push
test
imul
sbb
out
nop
jo
mov
xchg
pop
mov
or
cltd
dec
aaa
lds
push
jo
lcall
popf
imul
pop
adc
clc
in
pop
in
fildl
jo
add
call
dec
xchg
mov
pop
repnz
mov
int3
loope
arpl
or
xorb
dec
mov
push
sub
jg
push
ljmp
imul
lahf
xchg
push
mov
lock
icebp
les
dec
push
and
leave
mov
imul
cld
lock
fs
push
sahf
iret
xchg
mov
leave
inc
out
jbe
add
jmp
icebp
cmp
int3
loop
and
adc
aas
push
add
sbb
jp
cli
xor
aaa
push
adcb
inc
xor
test
fistpl
mov
mov
push
ja
push
rclb
dec
test
fidivs
das
jp
push
dec
cld
xchg
jp
cmpsl
mov
add
sahf
pop
movsl
lods
aam
pop
cmpsb
cmp
neg
cmp
pop
inc
sbb
insl
cmc
adc
into
int3
loop
or
scas
pop
and
xchg
push
push
and
std
mov
cmc
xor
lock
shr
lea
fisubs
mov
cmpsl
jae
imul
cs
in
enter
add
add
xor
rcrl
adc
dec
dec
fstpl
dec
loopne
or
addr16
mov
jne
dec
push
ds
ret
sub
push
pop
and
fcmove
cltd
push
mov
mov
xor
or
push
dec
loop
sbb
imulb
aaa
shlb
lock
icebp
test
mov
ja
loopne
inc
lcall
pop
sub
jae
push
lods
cld
cld
loope
into
fidivl
mov
clc
sahf
jecxz
mov
pop
sbb
aas
add
xor
lea
dec
inc
insl
stc
aas
sbb
ss
xlat
dec
iret
cmp
and
mov
pop
subb
push
outsb
pop
rcrl
loop
mov
push
inc
mov
jl
push
lods
shrb
xor
mov
adc
mov
jb
das
sub
sub
mov
adc
pushf
jnp
shrb
cmp
fadds
mov
into
mov
push
jp
pop
mov
cmp
fsub
add
inc
xor
sbbw
stc
stos
shll
mov
lds
push
mov
jmp
je
sbb
cwtl
pxor
xchg
inc
call
dec
fcmove
fnstsw
shrl
add
out
mov
adc
mov
add
test
mov
icebp
mov
jmp
dec
pop
mov
pop
neg
bound
xor
outsb
ja
sar
or
notb
fistl
add
cwtl
das
inc
loope
pop
sbb
dec
add
and
mov
insl
inc
stos
adc
mov
sub
cmpsl
pop
xchg
push
in
and
in
jbe
out
xchg
pop
jecxz
dec
in
add
dec
out
mov
call
or
mov
out
lock
add
enter
jge
lock
das
ret
lret
mov
out
sub
inc
scas
js
addr16
mov
cs
mov
jno
jle
mov
mov
out
imul
lcall
xlat
imul
sub
pop
jno
mov
jno
and
lds
and
aam
xor
rclb
xchg
mov
leave
bswap
inc
xor
mov
push
inc
sub
ffreep
les
push
aas
ss
lock
inc
fisubrs
push
inc
jo
xchg
fucomp
shll
mov
inc
pushl
xor
xor
mov
xchg
or
pop
xor
addr16
jge
mov
sbb
inc
test
add
xor
mov
jne
sti
mov
outsb
cmp
lock
aas
mov
mov
popf
aaa
out
addl
subl
int3
in
push
lods
adc
in
cltd
xor
xor
adc
or
pop
shrl
xor
cld
cmp
push
push
sbb
call
repz
mov
xorl
or
and
add
data16
lods
add
jmp
cld
fucomp
mov
shl
scas
add
xor
into
adc
sbb
outsl
gs
pop
mov
push
cmpsb
mov
popa
stos
or
into
cmc
mov
sub
popa
decb
xlat
ljmp
scas
push
in
pop
ds
jo
mov
repz
sbb
fdivp
pop
mov
rclb
sahf
add
jge
xorb
mov
insb
cmpsl
into
rep
sbb
popa
push
cmpsb
mov
mov
mov
or
inc
push
or
push
hlt
call
push
xor
mov
dec
out
aad
cld
in
shrb
mov
xchg
ss
int
cmp
push
push
cmp
loop
pushf
clc
mov
sub
daa
pop
dec
das
mov
cmp
xchg
add
cmp
fidivrl
iret
and
jae
cmp
fsub
mov
hlt
scas
sub
lods
popf
sar
ret
int
adc
pusha
add
push
out
push
filds
jae
gs
addr16
in
pop
sub
and
loope
cmp
jge
mull
jle
clc
pop
add
mov
dec
pop
lea
mov
jnp
inc
inc
notl
mov
xchg
sub
test
mov
sbb
lret
dec
roll
ss
adc
mov
xchg
mov
pop
adc
xchg
daa
imul
shl
adc
insl
imul
dec
scas
dec
push
xlat
test
mov
cld
out
sbb
and
lcall
mov
xor
jmp
mov
cmpsl
jmp
out
cmp
or
cmp
addr16
out
shrb
or
aaa
mov
xchg
imul
cmpsb
mov
mov
or
cmp
push
les
lods
xor
jp
aaa
push
ljmp
jo
mov
fmull
ret
mov
fisttpl
lods
stos
inc
mov
fldt
dec
out
push
stos
inc
xchg
inc
fmull
dec
out
aad
inc
or
fisttpll
dec
out
fsubrs
aaa
xor
in
dec
in
imull
cmp
dec
lret
dec
in
gs
movsb
xor
cltd
jge
lds
stos
or
xor
loop
hlt
rorb
and
xchg
mov
jne
imul
dec
ret
addr16
cmp
dec
les
ja
lcall
dec
mov
cmp
std
iret
pop
test
cmpsb
lea
inc
fisubrl
lahf
mov
in
jmp
xor
adc
test
cmp
pop
sbb
sti
jbe
push
fmull
shrl
xchg
or
inc
mov
push
jmp
popa
mov
stos
sbb
mov
sbb
push
mov
cmp
inc
xor
jge
pusha
das
jle
add
push
sub
aam
or
lcall
call
sbb
or
mov
jns
dec
and
pop
cli
xchg
cmp
mov
rcll
push
ret
sbb
sbb
scas
imul
inc
cmpsb
sbb
xor
in
push
or
sbb
in
inc
mov
mov
ja
and
push
cs
fistps
mov
icebp
dec
sbb
les
cmp
stos
addr16
cmp
jns
les
popa
inc
push
pop
cmc
stos
cmc
sbb
das
popa
sahf
and
pushf
mov
lret
mov
xorl
cs
add
pop
rorb
cmp
hlt
cmc
push
mov
mov
dec
push
out
pop
outsl
inc
into
xchg
dec
cmp
adcb
icebp
or
inc
std
xchg
je
orb
fwait
xor
push
adc
in
push
mov
and
xlat
fbstp
pop
xor
ret
sbb
and
std
or
fbstp
call
mov
stc
enter
push
movsl
stc
xchg
pusha
mov
fdivs
mov
push
adc
mov
movsl
cmc
aas
pushf
shl
cltd
adc
int3
inc
inc
dec
testl
jo
push
xor
test
jmp
pmaxub
lcall
sarb
and
xor
cmp
cmp
or
cmp
call
es
ret
cmp
dec
imul
ret
stos
fsts
push
mov
and
lea
jno
cli
xchg
testl
and
clc
icebp
insl
sub
adc
and
lahf
push
jp
inc
lods
je
jge
mov
in
xor
xchg
add
int3
cmp
mov
aas
dec
push
push
in
mov
dec
fcoms
movl
test
mov
cmp
sar
add
mov
imul
stos
jbe
add
cmc
fsts
clc
adc
lds
add
mov
mov
xchg
aas
mov
fs
jne
or
into
xchg
cmp
push
xlat
adcl
dec
sub
fstps
pop
xor
fwait
repnz
sbb
jnp
push
sbb
in
mov
out
mov
lods
outsb
fmull
mov
mov
adc
fwait
jne
lds
sbb
mov
jle
in
out
mov
cmpsl
mov
add
insl
add
ficomps
push
popa
pop
outsl
negl
xor
jne
or
jge
jle
insl
and
xchg
xchg
and
push
jl
fidivs
test
and
jge
pop
jg
cmp
push
mov
jmp
shl
mov
insl
sbb
mov
pop
mov
sub
mov
add
push
cwtl
test
mov
into
push
mov
arpl
lea
pop
mov
cmp
rcrl
mov
dec
nop
jmp
and
ficoml
inc
in
sti
rep
sbb
xor
in
adc
mov
push
pop
aad
mov
jge
leave
dec
jno
imul
fadds
dec
or
rcll
shll
jb
repnz
dec
aaa
dec
aas
rcl
aad
fimuls
ljmp
xor
ds
arpl
sbb
hlt
mov
leave
test
mov
pop
rol
ja
test
push
ret
mov
pop
arpl
push
lods
xchg
lods
cmp
sub
lea
add
sbb
inc
xor
shll
test
cmpsl
fdivrs
mov
and
loop
mov
cmpsl
ds
adc
call
mov
lahf
mov
xchg
sub
lea
repz
stos
adc
xchg
and
push
fstps
iret
test
jge
mov
xor
lahf
jp
sbb
jge
xchg
jge
lds
repnz
stos
mov
and
mov
rcrl
dec
dec
inc
sti
imul
add
add
pop
and
outsb
mov
lods
mov
mov
in
cmpl
rolb
push
mov
stos
lods
aaa
mov
inc
test
mov
push
fstl
cmp
pop
push
mov
add
xor
sahf
push
ret
cmp
test
push
inc
sub
inc
xchg
outsb
nop
pop
mov
push
stc
xor
cmp
pop
dec
loope
testb
xchg
out
gs
aad
rcl
imul
jno
cmpsb
pushf
push
je
dec
and
js
inc
pop
in
rcrb
aad
mov
movsl
fstl
lds
xchg
aad
fisttps
jmp
lods
in
mov
cltd
addb
sub
lahf
inc
imul
cmp
jge
dec
pushf
and
and
add
add
outsb
stc
jno
lock
or
clc
mov
sahf
clc
inc
jle
testb
push
mov
stos
add
test
jge
lds
pop
sbb
lods
add
push
ret
add
push
mov
pop
adc
loope
lock
rcl
int
aaa
xchg
push
mov
pop
stos
repz
jo
sbb
popf
sbb
add
sbb
sub
jle
jae
icebp
dec
xchg
aad
cltd
lock
jecxz
inc
clc
fdivr
out
in
adc
or
shlb
fs
xchg
push
stos
fnstcw
enter
xor
mov
xlat
xor
out
cmp
sbb
mov
and
jecxz
mov
arpl
popa
mov
xchg
push
push
mov
push
dec
push
jmp
repnz
lods
aaa
pop
add
mov
mov
nop
or
mov
sbb
test
or
das
inc
stos
push
pop
cmpsb
or
lret
and
subl
int
xchg
phaddd
jmp
inc
into
adc
cmp
xchg
dec
js
lret
je
pop
sub
test
mov
hlt
loop
daa
or
mov
dec
add
mov
pop
lret
lret
loopne
shll
mov
sbbl
fldenv
adc
adc
lods
inc
or
lret
bound
sub
pop
pop
jmp
mov
add
outsb
sub
sbb
adc
jne
repz
lcall
push
and
sbb
cmp
jbe
imul
icebp
icebp
and
imul
rcl
js
push
pop
xor
into
int3
testl
xor
jle
xchg
scas
pop
rcr
push
jmp
decl
push
jo
andb
scas
imul
out
inc
les
lods
or
stc
push
jbe
ficoms
and
das
dec
dec
pushf
fisubl
pusha
cli
inc
mov
add
fwait
and
insl
jge
xchg
cltd
std
setb
js
sti
dec
dec
shl
jno
or
xchg
xchg
push
leave
pop
js
adc
cmpl
jnp
movsb
xsha256
cmpsb
test
cli
jg,pn
pop
rcrl
in
fwait
mov
iret
jge
cli
iret
icebp
pop
add
into
popf
mov
je
xchg
popa
sub
dec
sub
arpl
mov
sbb
outsl
andl
or
jbe
sti
mov
cmp
push
inc
test
fucomip
and
inc
and
jae
imul
mov
xchg
xchg
mov
lods
cli
mov
test
dec
cmp
and
sbb
xchg
popa
xchg
dec
sti
call
jno
add
mov
pop
or
inc
sub
or
cld
fwait
sbb
sbb
enter
mov
cli
insl
xchg
pop
ja
mov
insb
pop
adc
or
xchg
mov
cmp
test
ficompl
mov
xchg
icebp
arpl
mov
xchg
popa
mov
dec
rol
iret
jo
loopne
mov
lret
push
loope
mov
dec
sti
sbb
lock
lods
cmc
or
dec
mov
mov
add
cmc
cmovg
adc
xchg
outsb
xchg
stc
je
sub
orl
inc
shl
cmp
movsl
mov
aas
shrb
mov
mov
cmp
shlb
push
inc
adc
cmp
arpl
arpl
rcr
jb
popf
xor
xchg
push
inc
inc
data16
pop
mov
mov
pop
push
and
pop
xchg
dec
dec
shrb
cli
sbb
push
push
push
movl
insb
aad
ret
stos
hlt
mov
push
add
dec
fsubs
sbb
je
cmp
inc
popa
addl
aas
shl
hlt
fwait
xor
int3
xchg
sbbb
pop
pop
insb
iret
daa
imul
xor
pop
icebp
or
pop
adc
jo
ret
fmul
jae
sbbb
xchg
mov
dec
frstor
popl
out
mov
adc
sub
pop
daa
sub
mov
adcl
mov
je
xor
mov
jns
xor
push
fistl
rcl
jp
push
dec
mov
in
push
xchg
push
movsb
mov
fdivrl
out
sti
or
test
pop
sub
or
mov
rep
arpl
vunpckhps
xchg
mov
dec
sub
jbe
stos
mov
fs
xchg
or
stos
insb
mov
sarl
dec
cmp
scas
call
insl
ds
xor
xchg
add
outsl
mov
pop
cmc
fbstp
jle
xorb
icebp
adc
cmpsl
push
subb
aam
imul
std
les
jns
stc
rclb
cmp
movsb
shlb
ja
adc
add
cwtl
shlb
push
fistpll
lods
mov
outsl
xchg
inc
aas
repz
and
lea
fnstcw
push
xchg
add
sbb
movsb
jecxz
push
jmp
inc
test
jns
out
repz
mov
push
je
push
mov
imul
cmc
std
jo
ljmp
popf
test
push
xchg
insb
jb
fld
pop
movsl
jo
fstpt
rol
inc
hlt
dec
xorl
or
adc
test
ds
pop
popf
pop
stos
inc
loop
cmp
outsl
add
ss
popa
inc
pop
jnp
jge
push
xor
add
lcall
jbe
sbb
lcall
in
push
dec
icebp
ds
jmp
iret
push
insl
push
mov
jne
sti
sub
push
scas
pop
mov
in
xor
push
adc
lock
mov
std
int3
rcl
pop
in
fstl
pop
repz
xchg
aam
add
es
xchg
ss
push
adc
lahf
mov
xor
mov
hlt
dec
sub
mov
xlat
sbb
daa
jge
mov
sub
or
ds
and
dec
loop
mov
insb
jb
test
popa
mov
cltd
imul
cltd
or
inc
push
loopne
repz
fs
jp
or
sbb
mov
add
repz
aaa
ss
xchg
sti
xchg
je
or
sbb
cltd
test
fstps
push
in
sbbl
jge
shr
push
mov
scas
push
or
lahf
cwtl
out
pop
cli
cmp
out
dec
jo
fs
lods
mov
scas
mov
fdivp
scas
push
or
repz
rcl
mov
and
ret
in
hlt
ja
pop
mov
xchg
xlat
xlat
sbb
jnp
push
sbb
push
cmc
lcall
dec
pop
in
addl
mov
hlt
adc
sub
loopne
xor
cwtl
std
mov
pushf
lods
xchg
out
test
je
fists
pop
mov
addb
inc
push
hlt
push
cmp
fbstp
fisubl
in
push
sub
scas
insl
in
ja
jno
lret
cmp
std
lcall
push
pop
fldl
clc
test
sub
cmp
loop
cwtl
jmp
dec
bnd
icebp
dec
cmc
mov
shl
insb
pop
push
nop
cltd
add
fnstcw
fldt
add
scas
cltd
cmpsl
lock
pop
sub
scas
mov
inc
push
jns
sbb
cli
mov
sub
pushf
sbb
xchg
popf
jl
xchg
mov
mov
sub
xchg
adc
dec
icebp
pop
aas
out
jne
push
xor
jno
pop
cmp
mov
sub
cmp
mov
push
popf
scas
xor
dec
mov
lcall
adc
sbb
rcrl
fstpt
add
add
ret
hlt
testb
test
pcmpeqb
popf
test
jbe
xchg
rcl
sub
or
sbb
cmp
cld
mov
cmpsl
dec
push
sub
sbb
xchg
dec
ljmp
ret
sbb
push
jmp
mov
add
mov
loop
jae
pushf
repz
movsb
mov
push
nop
call
in
cmc
gs
xor
fidivs
daa
dec
inc
pop
addr16
add
mov
cmp
lods
cmc
aad
ds
pushl
sbb
lret
sbb
lret
push
aad
ja
shll
dec
mov
mov
xchg
popa
add
movsl
out
xor
lods
fmul
adc
mov
push
push
inc
adc
sahf
inc
and
pop
jnp
cwtl
es
sbb
mov
push
jae
xchg
bswap
mov
loopne
dec
xchg
dec
jecxz
and
and
pusha
or
stos
idivb
push
mov
and
cltd
out
mulb
lds
repz
inc
xchg
test
adc
mov
imul
push
inc
stos
leave
imul
mov
push
outsl
dec
cmc
shr
push
out
int3
push
divb
pop
cmpsl
fs
push
mov
nop
add
inc
xlat
mov
or
inc
popf
imul
mov
xlat
and
daa
sub
aad
and
popa
or
add
insl
jl
lock
ss
push
icebp
addb
test
cmpsb
inc
bnd
and
mov
fsubrs
pop
adc
push
testl
fsts
cmp
cmp
sub
pop
test
lahf
jb
sbb
popf
into
fdivr
dec
std
or
inc
leave
rcrb
test
sub
lods
fidivl
adc
loopne
aaa
ljmp
ljmp
xor
arpl
mov
ret
fists
enter
adc
cmp
sbb
pop
imul
jo
fnsave
lods
inc
jbe
mov
mov
popa
outsl
mov
cmc
mov
popa
push
mov
sbb
jl
sarb
mov
jle
insl
add
pop
icebp
mov
pop
pop
test
jecxz
or
loop
dec
mov
and
cmp
negl
ret
imul
dec
inc
sbb
lcall
sub
push
pop
add
xchg
imul
repnz
mov
push
pop
minps
xor
dec
out
adc
xchg
inc
fstps
jge
xor
mov
mov
lds
xor
cmp
dec
inc
sub
and
in
xchg
xor
das
mov
sbb
cli
je
sub
movsl
std
lea
das
stos
popf
sbb
cld
andb
pushf
gs
popa
xchg
mov
and
loop
jo
mov
add
popa
sub
aad
and
arpl
in
sub
add
int
imul
jl
loop
and
xor
jbe
in
repz
sub
dec
arpl
jl
sub
adc
mov
dec
xorb
shl
std
insl
cltd
aas
negb
mov
lods
imul
xor
add
mov
and
sbbl
out
cmpsb
jae
xchg
xor
mov
add
arpl
mov
ljmp
pushf
sti
pop
mov
mov
test
inc
push
stc
test
lea
stc
pusha
add
fisubs
add
push
dec
ret
jp
inc
out
and
dec
pminub
push
pop
pop
cld
pop
into
xchg
cli
xchg
add
xchg
sbb
push
popf
into
popa
mov
aam
mov
push
subl
mov
jbe
ret
orl
xorl
testb
aad
sbb
scas
or
cmc
mov
les
test
movl
push
xchg
xor
push
jne
pushf
xor
inc
sub
fildll
xchg
jae
clc
push
dec
adc
jmp
fildl
push
ret
and
mov
or
jl
out
xchg
icebp
loope
dec
das
out
xchg
movsl
add
cmpsb
jl
out
mov
push
aas
imull
adc
fwait
outsb
loope
sub
out
das
inc
push
sarl
pop
sbb
or
mov
push
iret
xorb
movsb
jp
and
testl
js
std
jmp
mov
mov
movsl
and
sbb
cmp
or
mov
loop
cli
movsb
pop
rorl
sub
lahf
and
or
or
pop
dec
addr16
lods
aaa
sahf
subb
or
aad
pcmpgtb
sar
adc
leave
pusha
and
sub
mov
add
les
cs
push
aam
popa
or
add
les
scas
dec
push
daa
mov
cltd
jne
mov
mov
xor
lret
stos
loope
fs
xchg
mov
out
jbe
inc
popf
aam
sbbl
adc
test
shrl
pop
mov
sub
xchg
add
mov
sbb
fisubrs
aaa
sarb
dec
mov
mov
ret
xorl
mov
ret
aaa
into
mov
pop
into
sbb
cs
xchg
add
test
shll
jg
lea
ret
imul
jo
xor
add
pop
xchg
mov
cmc
xlat
lock
rep
cmp
jnp
pop
sub
imul
insl
add
mov
sarb
outsl
add
scas
fdivs
lods
in
jns
in
inc
gs
jae
push
xchg
inc
loop
rorl
xchg
and
lahf
sub
add
lock
in
je
jp
or
imul
test
jo
scas
mov
daa
call
iret
push
push
inc
gs
jle
out
icebp
xchg
cwtl
rcrl
clc
xchg
mov
add
inc
mov
or
or
pop
icebp
enter
roll
mov
lret
and
imul
or
push
pop
pop
xor
lret
sub
add
push
cli
and
addr16
xchg
inc
hlt
data16
inc
popa
cmp
pop
in
add
in
pop
hlt
fcmove
ret
sarb
or
cs
mov
movsb
cli
call
push
ja
dec
xor
and
pop
fcoml
lret
pop
mov
mov
sbb
mov
xor
add
mov
push
mov
mov
or
stos
jg
jg
mov
aaa
arpl
cmpsb
nop
jmp
push
sub
jmp
iret
mov
cli
push
mov
ffree
jecxz
repnz
jge
inc
vcomisd
test
int
mov
mov
cwtl
push
push
dec
lahf
or
inc
cmp
xchg
mov
fnsave
or
cmp
mov
dec
shrl
jae
dec
cmp
fsubs
fwait
pop
stc
pop
out
push
ds
push
dec
arpl
aaa
sbb
lcall
rorb
pop
mov
cmp
xchg
popa
mov
or
cmp
and
aas
divb
faddl
in
or
pop
jnp
push
xchg
pushf
lock
or
icebp
dec
and
cmp
pop
add
pop
push
sbb
loopne
cli
jb
aaa
xchg
movsl
mov
sub
mov
cmp
stc
xchg
sarb
std
add
sub
push
pop
subl
and
xchg
xor
adc
lahf
lods
inc
popf
mov
iret
data16
dec
inc
mov
inc
aas
mov
add
add
xchg
sub
les
mov
mov
or
out
jbe
jo
loop
jge
sub
or
jge
sub
es
lds
pop
andl
and
mov
int3
arpl
cmp
cli
cmp
pop
mov
sahf
hlt
stc
or
push
mov
pop
leave
and
fcmovnb
xchg
in
cld
in
fisubs
aad
ljmp
movsl
inc
push
jmp
lea
decb
inc
ljmp
das
xchg
les
xchg
pop
fsubp
lahf
mov
shr
jae
int
pop
pop
loopne
xchg
daa
ficompl
test
std
dec
iretw
mov
cltd
sbb
xchg
lods
testl
pushf
daa
fwait
jge
xchg
inc
cmc
pop
fstpt
xchg
pop
sub
addr16
ljmp
push
xor
ss
cld
out
xchg
push
std
cmc
shlb
pop
sub
shlb
lock
jp
scas
hlt
scas
inc
shll
ljmp
inc
pop
icebp
mov
xlat
mov
fwait
xor
or
fisttpll
pusha
not
nop
mov
and
and
fs
mov
dec
in
and
insb
adc
mov
aam
ja
add
out
ja
sbb
cmp
add
adc
push
out
je
stos
xchg
sbb
movsl
icebp
repnz
xor
pusha
xchg
adc
cmp
or
pop
mov
rolb
fs
mov
mov
xchg
std
loop
inc
aad
adc
cmp
pop
lds
les
fadd
rcrb
ret
pop
jle
aam
fadds
sbbl
aaa
in
outsb
add
mov
fldl
push
mov
sub
cmpb
mov
mov
xor
inc
pop
sarb
rol
in
cmp
dec
or
jl
mov
call
sub
rol
pop
lds
loop
dec
push
es
mov
lds
inc
push
aas
sub
scas
inc
fidivs
xchg
push
jmp
fcompl
push
pop
mov
mov
cmc
and
rcll
mov
pcmpeqw
test
cmp
cmp
fwait
xor
pop
push
out
mov
jo
mov
mov
inc
inc
rcrl
jp
movd
sahf
or
hlt
lock
inc
fimull
mov
push
call
cmp
in
lret
adc
pop
cmpsl
ds
mov
lcall
and
add
addr16
fsubs
test
lret
cld
pusha
push
out
xchg
xor
arpl
imul
cmp
out
std
hlt
clc
es
push
popf
push
inc
push
lods
je
pop
mov
outsl
loopne
mov
ret
xchg
stc
sub
or
aad
push
pop
popa
xchg
sub
mov
ret
je
sahf
xor
sub
xorl
inc
into
xchg
sub
shl
mov
and
stos
pop
jno
adc
imul
mov
mov
inc
add
sbb
into
test
add
cmp
stos
test
fistpl
stc
out
movsb
mov
mov
out
es
repz
and
inc
shrl
popl
rolb
clc
adc
pop
mov
xor
push
data16
cmp
xor
lds
sahf
cltd
and
mov
add
jle
sbb
aam
mov
lahf
adc
and
test
js
gs
xchg
cwtl
sbb
lock
outsl
push
cwtl
and
adc
rcrb
negb
sbb
fldl
jo
adc
push
xor
dec
xor
mov
and
mov
jp
adc
je
or
jno
in
fmuls
cmpsb
or
imul
sub
cltd
inc
jle
je
lds
mov
jmp
dec
pop
lds
sub
mov
rcl
divl
mov
sti
xor
mov
mov
adcb
or
icebp
cmp
icebp
fidivl
add
xlat
and
clc
pop
cmc
sub
and
xor
or
sbb
jge
push
or
imul
movsb
cld
lock
in
and
movsl
cmp
clc
test
sub
jmp
sub
cli
test
sub
rcrl
popf
xor
loop
cmp
stos
cmc
mov
or
outsl
cmp
ljmp
loopne
xor
inc
xor
mov
fsubrp
adc
pop
inc
cmp
out
jo
add
aad
popa
clc
inc
inc
daa
mov
add
adc
insb
jnp
pop
icebp
add
adc
pop
arpl
leave
pusha
add
loop
dec
xor
lock
rcrb
hlt
sbb
push
push
fstpt
or
sbbl
sbb
jg
push
ficoml
cmp
sbb
xchg
sub
enter
les
repnz
xor
gs
adc
loope
lds
mov
add
mov
sbb
sub
pop
xor
test
mov
dec
in
lods
inc
push
cmp
mov
enter
sub
js
xchg
sub
stos
cmp
fldenv
pop
hlt
push
dec
mov
inc
hlt
scas
jae
fbld
jnp
push
dec
xor
jge
and
fbld
cmp
aam
lods
pop
scas
fbld
repz
test
and
fbld
aad
push
push
xchg
cs
sub
mov
es
push
push
stos
inc
xchg
sbbl
xchg
mov
lcall
arpl
std
xchg
xchg
cs
cs
pop
push
cmpsl
ds
xchg
add
test
inc
ja
push
cmpsb
shlb
add
insl
add
or
test
montmul
cmpsb
iret
test
dec
push
call
arpl
mov
sbb
xor
sub
lods
lret
xor
cld
out
xor
adc
push
scas
inc
xchg
dec
add
mov
das
and
addb
fcmovbe
xlat
add
or
arpl
sub
adc
cmp
scas
fwait
xchg
cs
xor
dec
loope
test
xchg
sub
jb
mov
scas
xchg
jns
ret
cmc
mov
add
mov
xchg
cs
popa
sub
repz
out
mov
iret
xchg
xchg
sub
xlat
mov
jle
jns
mov
xchg
mov
cmpb
addb
imul
adc
jns
sub
jbe
cmp
jns
push
lods
shll
jb
sbb
dec
daa
xchg
sub
inc
flds
shl
mov
insl
add
push
sub
dec
leave
sbb
or
push
ja
inc
iret
jno
fistps
sbb
inc
xlat
inc
or
push
xor
insb
inc
mov
repz
mov
shl
insl
lcall
sbb
pop
sub
mov
xchg
inc
mov
mov
bound
xchg
pop
and
jecxz
inc
fimull
mov
and
pop
push
jmp
xor
cmp
push
or
cmp
and
add
fimuls
lahf
jns
dec
xor
fsubrs
in
sbb
pop
stos
add
ret
insb
jmp
leave
mov
frstor
or
test
popa
icebp
dec
loopne
orb
jle
data16
push
mov
scas
inc
pop
mull
sub
cmpxchg
sbb
sbb
xchg
sub
and
loope
push
jns
out
stos
aas
jb
jno
push
std
xchg
mov
push
jbe
push
in
jae
jb
stos
cmpsl
xor
les
mov
mov
push
stc
nop
inc
loopne
inc
push
bound
or
pop
mov
mov
aad
lar
push
pop
add
xor
fs
mov
fisubrl
or
cmpl
scas
mov
jnp
rolb
add
insb
add
adc
pusha
dec
fists
mov
clc
mov
ret
mov
stc
jge
leave
mov
pushf
cmc
mov
xchg
lcall
in
out
cmc
outsl
adc
cmp
repnz
icebp
js
les
mov
jne
sub
jo
mov
and
add
mov
sbb
mov
pop
shrl
lock
int3
arpl
inc
mov
das
jae
iret
cmp
cltd
aas
imul
lcall
jp
aas
inc
gs
dec
pop
push
pushf
popa
dec
xor
insb
and
jecxz
jne
xor
adc
or
dec
sbb
ss
dec
xlat
outsb
jg
loope
mov
jmp
cwtl
nop
icebp
xor
sbb
out
test
add
inc
xchg
jns
in
dec
fnstenv
mov
gs
add
pop
cltd
mov
rcrb
lcall
sub
out
dec
out
mov
pop
cmc
mov
and
adc
cmpsl
icebp
add
stos
xchg
test
add
out
fwait
loop
inc
lds
jns
repz
ds
or
xor
xor
jnp
cld
dec
xchg
adc
pop
add
dec
nop
inc
xchg
js
das
hlt
loop
sbb
or
pop
pushf
mov
sbb
mov
stc
and
gs
sub
and
xor
or
es
lret
cmp
and
movl
or
mov
add
mov
mov
dec
cli
cwtl
mov
insl
adc
jnp
sub
movsl
push
mov
sbb
xchg
add
je
mov
jge
int
inc
lret
add
int
add
inc
test
ljmp
sbbb
outsb
adc
imul
push
addr16
xor
jg
stos
push
or
push
out
ficoml
inc
sbb
inc
fdivrl
lea
xchg
pop
jne
sbb
jae
dec
icebp
sbb
ja
ret
outsb
into
push
int
ds
dec
jle
daa
mov
sbb
fiadds
mov
inc
aam
lret
rolb
xchg
mov
or
lcall
fcoms
clc
popa
lods
dec
shl
and
out
xchg
and
loope
and
and
out
imul
leave
pusha
lret
mov
lret
lcall
outsl
push
icebp
ret
mov
cmp
xchg
pop
addr16
jo
inc
xlat
lcall
rcrl
push
adc
daa
mov
hlt
fmuls
fwait
mov
and
mov
pop
jg
popf
xchg
aaa
fwait
xor
mov
pop
iret
pop
nop
js
xor
pop
cmc
ficoms
testb
adc
jne
fsts
sub
push
cmp
jbe
add
mov
or
jne
in
sbb
cmp
fiaddl
mov
push
cld
insl
add
pop
push
mov
pusha
sbb
scas
sub
sub
aad
cwtl
je
sbb
es
icebp
out
ror
dec
loop
icebp
aad
roll
sub
stos
aad
jg
jecxz
int3
les
je
ret
aad
movsb
insl
leave
mov
popl
xchg
mov
mov
test
pop
lds
mov
iret
mov
fmul
push
out
sbb
cmp
in
test
jnp
dec
mov
aas
mov
mov
mov
jno
ficoms
cli
sub
xchg
cld
inc
mov
aas
jecxz
stos
enter
push
dec
xchg
aam
filds
addb
fdivs
shlb
addr16
mov
lea
mov
sbb
testb
stc
and
adc
cmp
call
xor
xchg
pop
lret
int
inc
lcall
bound
rep
aaa
mov
popf
and
mov
ja
test
adc
into
push
mov
sub
dec
mov
xchg
repnz
imul
jns
sahf
inc
addb
xor
xchg
pop
aam
mov
adc
cmpb
jnp
lea
dec
mov
push
out
cwtl
out
ss
inc
fmull
lods
mov
mov
mov
dec
jecxz
les
aad
add
je
movsl
daa
clc
icebp
pop
popf
mov
push
adc
das
insb
cltd
mov
je
fcompl
xchg
jp
gs
pop
mov
imulb
pop
lock
xchg
imul
ret
mov
int
sub
jp
dec
inc
sbb
orb
aaa
push
jo
icebp
ss
push
mov
dec
pop
lea
pop
in
sbb
push
decb
sub
lds
add
rorl
adc
adc
popl
gs
or
adc
sahf
test
add
cmp
jne
adc
jp
leave
imul
sbb
push
aam
xchg
xchg
jne
inc
cmp
dec
mov
jns
jo
in
dec
loope
insl
lcall
inc
imul
add
into
sbb
and
xor
sub
dec
xchg
sbb
mov
daa
loope
sbb
orl
add
sti
cld
xchg
in
jbe
xor
ljmp
out
mov
fidivrl
mov
loope
pop
rcll
xor
dec
sub
dec
add
cmpsb
pop
xor
pop
add
shl
adcb
push
pushf
lret
and
sahf
push
stos
xchg
cmp
leave
cltd
xor
lret
sub
movsl
adc
es
popf
jecxz
adc
cmp
aad
push
push
xor
push
mov
lcall
sahf
pusha
jae
adc
or
mov
inc
sub
mov
nop
jnp
std
cmp
ret
inc
xchg
lea
add
mov
and
bnd
dec
mov
pop
sahf
pop
mov
arpl
into
popa
mov
int
xchg
jl
aad
arpl
insb
mov
sbb
mov
adc
popa
fwait
xchg
cmp
mov
or
out
es
pusha
jecxz
jae
pop
fwait
xchg
inc
pop
push
scas
jnp
push
pop
cmp
fldcw
dec
ret
sbb
sarb
cmp
inc
xor
es
mov
clc
iret
mov
sbb
les
ret
call
iret
js
lret
or
mov
mov
jb
jbe
jp
sbb
xor
jmp
aas
mov
mov
sbb
xchg
sarl
dec
ret
sbb
mov
fmuls
in
aad
loop
ficompl
mov
sub
pop
cmc
in
jmp
outsb
mov
fidivs
push
das
fldt
lods
fimuls
and
frstor
push
sbb
je
lret
xchg
mov
fistpll
dec
inc
loop
gs
ficoms
sub
inc
mov
test
push
cmc
mov
lret
je
outsl
dec
fisubrl
popa
cmp
mov
jl
xchg
inc
pop
mov
mov
adc
mov
addr16
ss
les
sub
sub
or
dec
mov
sbb
cmp
ljmp
aaa
add
push
test
test
cmp
icebp
fmull
jns
imul
ja
xor
xchg
pop
int3
cmp
mov
mov
sar
xchg
jge
mov
nop
sub
sbb
and
sbb
pop
ret
nop
sar
out
sub
cmp
pop
sti
push
cmp
inc
jmp
dec
mov
sbb
pop
lret
jg
jmp
push
sar
je
lret
mov
out
lret
bound
loopne
out
mov
out
push
adc
sbb
nop
mov
stc
dec
iret
mov
jmp
enter
icebp
add
lea
push
lahf
cltd
add
and
stos
jl
outsl
call
rcrb
sub
add
in
aam
push
in
and
cmp
jae
test
mov
cmp
decl
sbb
clc
std
das
mov
enter
lahf
repnz
mov
and
rorl
mov
mov
xchg
nop
xchg
sbb
pop
scas
sbb
xchg
lcallw
ja
addl
lds
aad
inc
ret
jbe
mov
stc
lret
inc
into
mov
int3
push
ret
lcall
jecxz
in
pop
lar
pop
jae
add
test
es
xorl
mov
xchg
mov
adc
sbb
or
call
cmc
xchg
add
loopne
iret
pop
cmpsb
fucomi
adc
shl
stos
mov
adc
adc
mov
xor
xchg
divb
rcll
or
int
clc
xor
cli
loop
es
call
rcrb
lods
pusha
aad
lcall
pop
cmpb
nop
jnp
daa
lcall
xor
cli
lea
adc
xchg
or
adc
jmp
pushf
nop
xlat
fs
fcmovnu
dec
mov
in
dec
mov
cld
adc
mov
pop
sti
or
mov
jmp
popf
mov
sti
cmp
leave
aam
mov
aad
pop
test
mov
jae
sbb
aas
cmp
loope
adc
iret
lock
and
mov
sbb
add
cmp
add
push
mov
popl
pushf
nop
fcmovbe
inc
enter
mov
fisubrs
sub
mov
pop
pop
push
stos
cld
xor
out
sti
xchg
xor
xor
dec
sub
leave
orl
or
out
and
cmp
test
mov
divb
xchg
and
mov
fiaddl
add
movsl
push
jge
lods
inc
add
pop
stos
and
sti
repz
mov
movsl
push
fisttpl
mov
call
xchg
jnp
jb
hlt
inc
mov
pop
or
lods
pusha
sub
es
mov
dec
sub
push
cld
dec
out
lea
aad
mov
and
xchg
fnsave
jbe
daa
ljmp
sub
pop
adc
out
xor
mov
loope
add
add
adc
into
arpl
lods
mov
pop
adc
mov
jg
loope
push
into
lcall
std
pop
rol
push
cmpsl
mov
lret
sub
sub
out
push
mov
sbb
andl
xor
outsl
rorl
sub
mov
sbb
pushf
cmp
dec
outsb
test
idivl
mov
mov
push
repz
dec
aad
mov
das
std
dec
aaa
int3
or
mov
stos
nop
and
ja
sahf
inc
lods
sbb
ret
pop
aam
xor
nop
rclb
sub
lret
add
frstor
cmp
in
call
and
cmpsb
pop
into
popl
sbb
push
adc
inc
lods
jo
insl
cld
sbb
movsb
cmp
mov
sbb
inc
add
cmp
push
hlt
insl
sub
scas
cmp
hlt
nop
sti
jnp
sub
dec
xchg
pop
push
fstl
stos
push
pop
mov
dec
das
rcrl
and
std
jp
lahf
adcl
lahf
inc
mov
insl
lahf
dec
mov
jbe
cmp
insl
sahf
cmp
gs
sub
xor
sbb
push
mov
mov
dec
int3
jle
fbstp
cmp
aaa
or
icebp
sbb
sub
cs
xchg
adc
in
mov
into
and
fists
sub
scas
inc
mov
ret
out
cmpsb
data16
mov
std
and
jae
mov
js
jle
jecxz
mov
and
jb
insb
jecxz
outsl
mov
mov
push
lret
dec
cwtl
fbld
orb
lock
leave
adc
xor
lret
icebp
fstpt
sbb
xor
xrelease
sbb
insl
ss
lds
cmova
scas
out
inc
aam
cmp
mov
lock
mov
or
push
mov
outsb
mov
hlt
mov
stos
in
jno
lret
mov
pop
xchg
pop
ret
cs
sub
fiaddl
call
xor
inc
mov
inc
int3
mov
scas
xchg
fwait
cli
aas
repz
test
fcoms
xchg
jmp
adcl
stos
pop
fadds
ljmp
xchg
xlat
fimull
mov
pop
jb
movsl
cmc
cmp
ljmp
addb
jno
mov
lds
xchg
adc
lock
sbb
jecxz
push
or
add
out
sub
pop
roll
sub
in
daa
add
mov
pop
cli
es
gs
pusha
lret
cmp
fists
aam
inc
je
mov
popa
push
push
int
das
shrl
nop
sub
push
xor
or
hlt
mov
sbb
jecxz
ss
test
sbb
ljmp
pop
fildll
fstl
cmp
push
outsb
sti
add
shlb
and
call
fistpll
fcmovnbe
ds
fisttpll
icebp
das
shrb
ja
mov
bound
mov
mov
es
repz
std
sub
push
out
xchg
or
and
lret
inc
mov
je
das
mov
jne
mov
inc
jg
test
jmp
fwait
pusha
pushf
mov
mov
out
or
call
add
or
pop
and
xor
insb
inc
xchg
imul
mov
call
stos
stc
xor
mov
mov
fs
xchg
ret
outsl
movsl
les
pop
aam
cwtl
push
sbb
xor
shrb
mov
jp
sub
pop
rorb
enter
sub
push
mov
nop
sbb
adc
fwait
cmp
int3
pushf
fldl
out
xor
rorb
cmp
leave
dec
ret
loopne
fnstcw
std
xor
fists
imul
dec
inc
adc
gs
mov
sbb
pop
out
imull
cmp
jp
mov
shll
rorl
aam
mov
jmp
mov
out
icebp
fwait
aas
or
js
jb
ljmp
and
fistl
roll
icebp
inc
hlt
or
rorb
push
enter
daa
icebp
cmp
add
bound
das
mov
lcall
cmp
inc
mov
les
in
inc
lock
popf
mov
mov
jae
lods
push
into
or
mov
std
subl
pop
mov
cmpsb
sbb
mov
lret
mov
leave
inc
pop
out
jb
or
sbb
and
sub
ljmp
sahf
fistl
ret
pop
add
hlt
repnz
mov
clc
inc
enter
xchg
rclb
inc
testl
jbe
xor
inc
mov
lret
cmpsb
std
dec
hlt
mov
test
add
inc
movsl
js
xchg
pop
fistl
cmpsb
fistpll
lods
sahf
adc
shll
push
pop
hlt
push
mov
pop
pop
mov
jle
sub
fidivrs
xchg
mov
cmc
jns
out
add
adc
jmp
subl
inc
cwtl
mov
test
repnz
idivb
or
cmpsl
aaa
cmp
add
and
jecxz
test
mov
sbb
cs
repnz
dec
push
into
inc
pop
and
imul
mov
sbbb
dec
push
xchg
mov
inc
mov
je
inc
lds
divl
icebp
int3
pop
push
popf
cmp
adc
pop
push
mov
mul
and
and
mov
idivl
sub
in
push
mov
push
aad
inc
jns
and
lretw
inc
addr16
sbb
pop
mov
and
or
mov
stos
pop
mov
dec
pop
or
inc
pop
mov
mov
cmp
mov
imul
fcompl
loope
aas
in
add
sub
jmp
cmc
xor
iret
push
out
xorb
cmpsb
les
jb
push
in
clc
cwtl
mov
outsl
stos
mov
cmpsl
ds
insb
mov
jge
push
int
inc
clc
jae
xor
mov
adc
xor
arpl
xchg
cs
mov
xlat
inc
jbe
js
mov
sub
mov
dec
out
pop
lods
lock
into
loop
dec
mov
pop
sarb
out
cmp
xchg
xlat
inc
leave
inc
push
xlat
insl
mov
cltd
or
mov
fwait
imul
in
pop
out
fnstsw
es
fdivs
lret
leave
and
add
sbb
bound
push
idivl
dec
cmp
rorb
popa
mov
pop
mov
cmp
mov
pop
sahf
sbbl
cltd
pop
push
jno
arpl
movsl
xor
push
jns
dec
push
xor
push
dec
xor
dec
inc
and
pop
lds
adc
cmpsb
jo
movsb
xor
and
xchg
push
adc
dec
pop
test
insl
daa
stc
pop
cmp
ret
dec
sti
mov
shlb
xor
jne
adc
iret
inc
in
jb
arpl
cmp
mov
sahf
pop
test
jae
xchg
sbb
into
setnp
inc
out
cmpsb
jl
xor
and
xchg
nop
pop
daa
in
push
mov
push
in
pop
movsb
dec
gs
faddp
sahf
test
int
int
fdivrl
inc
mov
dec
push
lret
mov
lock
mov
xchg
icebp
xchg
ss
test
movsb
mov
call
sbbl
into
outsb
loop
cmp
negl
push
cmp
xchg
pop
add
clc
cmpsl
pop
push
mov
leave
push
gs
test
cmp
rclb
in
and
fistps
xor
frstor
clc
pop
iret
inc
leave
rorl
lcall
adc
mov
add
cltd
pop
adc
mov
jecxz
push
mov
call
dec
clc
int
loopne
stos
inc
stos
adc
gs
shll
arpl
sub
dec
mov
jns
mov
sbb
outsb
jb
cmp
ret
pop
pusha
pushf
pop
mov
jne
push
inc
jg
pop
subl
pop
ret
outsb
xor
dec
rol
inc
in
pop
ljmp
mov
jle
jmp
xchg
jnp
mov
xchg
sub
xchg
jb
xor
sahf
and
push
add
jg
aas
scas
push
scas
insl
mov
push
adc
inc
sarb
xchg
stc
sub
jnp
sub
jmp
jo
icebp
sub
and
shrl
adc
mov
inc
je
cmp
lea
sub
and
fnstsw
loopne
cwtl
lds
jno
aad
jp
push
mov
pop
clc
jno
lods
out
cli
addr16
inc
rcl
out
adc
movsl
inc
jbe
push
in
movsl
push
lret
inc
gs
xor
push
sbb
loopne
sti
andl
mov
inc
out
dec
add
imul
sbb
push
jns
pop
stos
mov
lds
add
ja
addr16
mov
mov
add
arpl
ss
jnp
ficoml
popf
push
loopne
sub
insb
rcl
dec
call
or
sbb
jmp
xchg
pop
push
cli
pop
mov
adc
pop
pop
repnz
aaa
lcall
xor
or
test
stos
or
sub
sbb
push
xchg
iret
mov
loope
or
pop
fsubs
call
cmpsl
je
jmp
scas
in
push
imul
cmp
stc
xor
jecxz
stc
mov
push
and
xchg
movsb
cmpsl
pop
hlt
sbb
xchg
insl
sbb
movb
jno
scas
bound
sbb
cmp
icebp
jnp
mov
mov
test
outsb
fidivl
lcall
jle
out
xchg
mov
loope
scas
out
imul
and
add
lret
push
jmp
jae
jnp
stos
aas
cltd
pushf
and
and
call
scas
dec
add
pop
insb
out
xor
hlt
sub
lret
fadds
mov
lock
mov
sbb
pusha
mov
imulb
shl
jl
mov
cmp
jge
js
inc
xor
or
inc
add
jmp
cmc
sbb
adc
lret
lods
cmpsb
pop
testl
xchg
xchg
in
stc
mov
mov
mov
cmc
lcall
lods
adcb
ljmp
sub
stc
and
arpl
xchg
lret
enter
fisttpll
test
repnz
adc
fldt
loopne
add
stos
mov
sub
xor
les
adc
pop
sahf
rep
cltd
xor
shll
xchg
adc
insl
inc
mov
hlt
mov
mov
lahf
ss
or
enter
push
loop
dec
out
add
jae
mov
add
push
cli
xchg
mov
mov
xor
push
stos
inc
mov
ss
stos
enter
push
jmp
std
out
das
mov
add
xor
repnz
lds
movsl
idiv
sub
inc
fimull
xor
cmp
xor
lahf
lcall
icebp
in
lcall
inc
mov
pop
push
insl
test
rep
cmpsb
icebp
mov
int3
jp
stc
adc
cmp
cmp
fld
jo
popa
mov
mov
mov
outsb
out
adc
mov
xor
mov
push
inc
fiadds
mov
sbb
dec
inc
fdivrl
in
test
mov
ret
adc
and
xor
jb
push
daa
lds
xchg
cs
inc
pusha
pop
in
xchg
or
lcall
and
add
mov
out
jg
push
pop
cmpsl
jle
mov
fs
add
inc
dec
cltd
aas
lret
loope
jmp
mov
sub
xchg
pop
dec
cmp
xchg
pop
xchg
sub
mov
dec
cmp
aam
adc
adc
xlat
mov
add
lahf
or
jge
mov
cmpl
arpl
ds
jbe
adc
mov
pop
shrb
pusha
pop
lcall
leave
call
es
sub
jne
movsl
fcmove
xor
inc
mov
mov
test
mov
pusha
mov
jnp
mov
sbb
iret
mov
adc
mov
push
test
sub
inc
and
out
lods
jne
xor
idiv
xchg
out
push
mov
sub
nop
sbb
fcompl
mov
out
cmpsb
mov
push
pop
test
dec
mov
in
dec
sub
mov
ret
inc
scas
sub
rorb
icebp
lods
cmc
cmp
imul
cmpsb
pop
into
push
sub
dec
mov
mov
decl
mov
and
les
rolb
push
repz
mov
mov
or
xchg
jo
push
hlt
sbb
jecxz
xor
inc
fiaddl
jle
inc
lret
and
cmp
mov
xor
or
lcall
pop
mov
leave
sub
icebp
xchg
jl
inc
or
aam
aaa
insl
mov
push
das
addl
dec
test
out
loop
xchg
jg
loopne
or
iret
push
sub
pusha
sbb
sub
mov
sub
bnd
push
mov
push
aam
addr16
repz
stc
cmpsl
xor
mov
ret
dec
dec
inc
and
adcl
inc
mov
mov
sbb
jns
push
int3
xchg
ror
inc
sub
aas
and
mov
sub
push
pop
mov
add
mov
mov
rcr
testl
fsubrs
dec
add
lret
xchg
loopne
lds
bnd
or
jle
ljmp
lret
push
sti
jo
ljmp
sti
fstpt
sbb
and
or
fisttpl
jge
jge
lcall
add
notb
aaa
jae
mov
pop
xorb
pop
push
jmp
cmp
adc
out
dec
fcomip
mov
ss
sarb
pop
pop
cmc
push
mov
call
sbb
pop
ds
sahf
enter
cwtl
das
jecxz
sbb
test
js
or
popf
dec
stos
jp
sbb
mov
ss
iret
mov
sbb
loopne
scas
rcrl
pop
repz
ljmp
fstp
jae
sbb
mov
ret
adc
js
fidivs
scas
mov
xor
rclb
out
imul
push
jno
test
test
roll
fidivrl
mov
outsl
adc
leave
mov
cmp
aam
or
xor
mov
inc
adc
inc
adc
mov
pop
es
out
adc
arpl
fmuls
push
adc
dec
addr16
mov
test
xchg
jbe
call
push
jle
sbb
jbe
sarb
mov
aaa
sahf
repz
xor
nop
or
shr
out
enter
add
int
mov
cld
push
push
int
in
sub
or
ljmp
jbe
inc
ljmp
fucomp
ret
or
data16
xchg
sarl
jl
daa
lods
sahf
outsb
mov
cmp
rolb
inc
cltd
xor
std
leave
cmp
sbb
push
addr16
popf
ljmp
mov
mov
cld
std
lret
ja
jmp
mov
or
out
push
ret
push
mov
adc
xchg
faddl
aad
add
pop
aaa
fwait
movsb
jmp
ss
es
negl
ss
adc
out
je
outsb
push
and
addr16
cmp
mov
out
cmpsl
cmpsl
sub
mov
fiadds
scas
inc
sbb
cltd
mov
adc
sub
cmp
ja
ss
mov
mov
aaa
dec
aas
test
cltd
or
xchg
mov
mov
cs
push
sub
cmpb
dec
adc
jb
clc
fs
mov
insb
addr16
sbb
aam
mov
stos
inc
or
cmpb
lahf
or
add
mov
push
mov
cmpsb
negl
aas
push
test
ret
mov
push
iret
nop
jo
push
push
enter
dec
jnp
es
aas
xor
and
dec
push
cld
out
pop
add
bnd
pop
cmp
push
aas
xchg
push
aad
sub
mov
out
adc
dec
orb
sbb
hlt
inc
push
mov
mov
stos
lods
sub
fimull
adc
mov
jmp
repnz
pop
push
sub
scas
lea
xchg
dec
xchg
aas
sbb
or
mov
pop
mov
std
pop
jg
test
fwait
xchg
xlat
out
hlt
iret
push
mov
cmc
inc
push
mov
aad
jle
jl
or
xchg
addr16
adc
cmp
sbb
dec
push
mov
mov
pop
jae
mov
push
pushf
lahf
fdivrs
xchg
std
lds
ret
adc
adc
or
push
orl
das
stos
sub
lcall
outsb
lret
xchg
pop
roll
fildl
aam
cmpsb
adc
lcall
stc
mull
mov
stc
mov
adcb
pop
ret
mov
mov
mov
push
push
jnp
jge
or
push
sti
pop
leave
push
sbb
test
jl
fxch
ljmp
jp
sbb
push
pop
shll
adcl
xor
jne
lock
test
adc
mov
cmpsb
lcall
xchg
lret
lea
mov
insl
jecxz
mov
insl
or
xchg
push
enter
repz
mov
insl
call
clc
push
loopne
aam
lea
jecxz
test
enter
das
test
mov
outsb
in
fstpt
cld
jmp
push
inc
stos
fstpt
popf
dec
or
ja
call
jnp
imul
mov
enter
fstpt
popf
leave
lea
mov
jg
imul
popf
test
popf
fnstcw
and
or
push
add
movsb
push
mov
sti
mov
dec
push
push
movsl
pop
ret
roll
das
repnz
aas
fscale
pop
ja
sbb
lret
jge
push
xor
push
sub
stc
pop
push
xchg
mov
hlt
pop
cwtl
jo,pt
add
leave
jo
jge
sbb
movsl
mov
mov
cli
pop
pop
cwtl
mov
jle
pop
mov
enter
and
xor
dec
jne
cmpsl
imul
push
pop
and
pop
cmp
fiaddl
xor
jecxz
and
xchg
lock
gs
mov
inc
shll
adc
cmp
loopne
mov
outsb
push
jae
xor
lods
arpl
pusha
mov
sub
jno
dec
adc
jnp
cs
push
jo
int3
xchg
cs
outsl
loope
xlat
jge
icebp
inc
or
and
fisubs
scas
lods
or
adc
add
fisttps
mov
push
inc
pop
adc
outsl
sub
iret
adc
inc
ret
push
xor
jnp
sbb
in
loop
idiv
pop
jmp
cmp
inc
inc
fstpt
xchg
jae
or
ret
popa
or
ds
jae
insb
sub
dec
add
xchg
sahf
stos
das
push
or
jb
test
push
clc
xlat
ret
xchg
xchg
ds
mov
aad
xorl
sbb
daa
stos
add
jns
pop
push
clc
push
and
dec
imulb
mov
pushf
icebp
pop
push
loopne
push
pop
xchg
ret
push
rcrl
int
xor
cmpl
std
add
mov
sahf
inc
push
add
das
das
mov
sub
sahf
fdivrs
or
cmpps
icebp
sarl
adc
das
mov
cmpsl
mov
lods
sub
repz
scas
hlt
roll
lods
dec
add
xor
jo
andl
and
xor
cmpps
xchg
sbb
cmp
iret
loopne
pop
pop
push
add
lds
lret
sub
xchg
mov
fstpl
lret
fldcw
cmp
push
insl
push
add
sub
pop
mov
cli
push
je
js
mov
mov
rcrl
cmp
sub
or
pop
xchg
mov
and
and
outsb
in
out
cmp
xchg
ret
jno
sbb
dec
add
jge
inc
das
ret
xor
loop
std
mov
in
mov
sbb
pop
xchg
lret
mov
les
sbb
xor
sub
jp
popa
notb
fnstsw
stc
pop
dec
inc
jge
or
int
xor
scas
das
lods
sub
sbb
or
jns
adcl
imul
add
cmp
sub
fldcw
mov
icebp
mov
test
mov
fs
cmp
sub
pop
push
popa
neg
orl
cmp
pusha
les
mov
stos
inc
or
pop
cmp
jg
push
add
jns
out
jno
outsb
jne
jae
loope
jo
outsl
repnz
jb
ss
push
jle
and
mov
mov
int
jmp
pop
std
shll
sbb
mov
mov
mov
outsb
loopne
adcl
rcrl
push
mov
sub
mov
test
and
fcoml
in
fdivrl
das
push
mov
xor
ja
jnp
pop
jge
pop
add
lcall
in
sbb
pop
sub
inc
pop
xor
int3
mov
mov
jno
mov
leave
test
cmp
jbe
xor
push
jno
mov
out
jnp
icebp
flds
cltd
push
dec
adc
int3
cwtl
inc
cltd
push
cmp
fs
test
lret
mov
mov
or
mov
jp
push
pop
mov
or
and
mov
adc
scas
mov
in
icebp
mov
cld
mov
push
hlt
pop
ds
movsb
sub
rcrl
mov
sub
mov
xchg
jmp
lcall
push
notl
shrb
pop
or
jg
lcall
addr16
cli
or
rcll
fisttpll
sbb
push
jae
ret
cmp
arpl
jae
jmp
sbb
mov
xchg
inc
mov
cmp
or
xor
xchg
xchg
fistpll
int
pop
test
jp
imul
mov
mov
jno
pop
or
push
adc
jle
lods
sub
fsubr
push
fwait
std
pop
cwtl
int
enter
ja
pop
xchg
cmp
add
mov
xchg
cmp
sub
pop
inc
cmp
mov
xor
in
push
and
cld
mov
scas
aaa
lcall
mov
pop
cmp
cwtl
rorb
hlt
pop
jno
ds
lret
inc
xlat
sbb
cmp
jge
push
in
jle
test
cld
es
sbb
js
cmp
stos
lret
arpl
bound
popa
repnz
test
mov
inc
dec
or
adc
adc
dec
or
enter
daa
push
mov
inc
cmp
push
pop
cltd
mov
fiaddl
scas
sub
inc
adc
movsb
adc
xchg
pusha
hlt
bound
lea
xchg
push
inc
jle
add
jmp
outsb
testb
call
and
mov
aam
pop
xor
je
inc
je
icebp
and
mov
out
shrl
sbb
jno
cmp
test
test
pop
mov
movsl
clc
pop
sbb
cmp
dec
adc
stos
cwtl
fnstcw
mov
les
push
dec
xchg
xchg
jl
loope
repz
les
mov
stos
pop
adc
jmp
add
pop
and
arpl
mov
addb
stc
bound
in
jbe
mov
lock
cmpsl
loop
push
fidivl
mov
push
jle
jp
and
or
pop
xchg
aaa
hlt
cmp
aad
in
mov
shrl
push
cmp
lds
xchg
mov
jle
or
mov
mov
cmp
imul
mov
enter
rorl
pop
adc
pusha
pop
mov
inc
out
cmp
jl
mov
mov
push
int3
add
push
clc
lret
mov
push
xchg
add
iret
adc
mov
scas
mov
lea
mov
push
push
dec
sbb
lea
outsb
mov
inc
rcl
jns
xchg
pop
lret
mov
scas
xchg
cmp
loopne
jb
idiv
mov
pop
icebp
jae
mov
xchg
xchg
scas
lds
mov
movsl
mov
lea
jb
rep
or
jge
jg
pop
bound
pop
pop
and
and
or
inc
lahf
cmp
aas
cltd
sbb
js
hlt
inc
add
jne
stos
sub
insl
dec
or
cmp
pop
mov
movsl
mull
pop
int
cld
push
outsb
out
in
cmp
or
js
mov
lock
iret
xchg
lock
cmc
aam
dec
pop
ljmp
leave
sub
ljmp
in
sub
cmp
mov
adcl
clc
negl
inc
sbb
dec
adc
dec
psrld
mov
adcb
iret
adc
inc
mov
lock
fs
fcompl
orl
test
lock
dec
sti
push
add
imul
adcb
push
add
mov
cmp
xchg
sub
iret
add
xor
js
cmp
in
roll
scas
sub
out
mov
dec
cmc
add
cld
cwtl
js
stc
loope
scas
mov
mov
fidivrl
outsb
mov
dec
test
mov
mov
adc
iret
pop
jbe
cs
jno
xor
je
call
sti
xchg
sub
add
or
xchg
xchg
ret
ret
jb
aam
arpl
movsl
or
pop
pop
mov
inc
push
negb
pop
adc
pusha
dec
lea
jbe
dec
sub
enter
orb
lahf
testl
insl
aam
add
outsb
ret
ret
dec
js
jecxz
je
movsl
cmp
gs
xchg
xchg
mov
and
mov
stos
jle
jnp
mov
imul
jne
lret
and
int
sub
or
cmp
push
std
pop
add
js
js
call
jnp
sub
fildl
and
sub
mov
pop
cmpsb
sub
movsl
dec
or
jp
rclb
aas
xchg
ds
aas
stos
je
xchg
push
mov
ja
xor
mov
or
daa
push
out
push
std
insb
xchg
lret
add
push
sbb
pop
sbb
jp
mov
rclb
lret
dec
aad
arpl
and
int
call
sahf
popa
loope
cwtl
mov
daa
mov
stos
xchg
inc
lret
nop
repnz
jns
sub
ljmp
pop
lds
loop
pop
icebp
inc
sbb
sbb
mov
pusha
xchg
sub
mov
imul
ret
cmp
inc
push
pop
add
or
out
movsb
daa
aam
insb
out
stc
add
or
shll
and
or
and
fisttps
scas
dec
mov
add
and
sub
jle
adc
mov
xor
inc
push
dec
mov
test
add
lcall
inc
ljmp
or
xor
mov
cmpsb
xor
out
adc
daa
mov
stos
movzbl
cli
mov
dec
adc
loopne
repnz
dec
les
dec
mov
mov
nop
stc
arpl
mov
sbb
sub
cmp
sahf
or
pop
repz
cmp
imul
sbb
mov
lods
jge,pn
push
repz
les
dec
cmpsl
mov
cwtl
xlat
adcb
push
jl
cmp
mov
hlt
arpl
sbb
mov
inc
fcmovnb
rcr
test
sbb
and
stc
push
add
pop
ljmp
push
push
incb
push
orb
in
outsl
sub
fwait
inc
aas
jmp
int
push
mov
insb
test
es
xor
aad
fwait
adc
xor
mov
fistpll
lods
inc
aad
es
test
movsb
sub
mov
mov
fwait
dec
test
nopl
lret
rclb
lahf
rorl
rorl
aas
adc
gs
xchg
pushf
je
into
or
mov
jno
dec
push
stos
xor
sub
jp
sub
adc
test
mov
orb
cmp
sub
ss
lock
dec
cld
pop
ret
pusha
add
or
clc
pop
dec
push
sahf
cmp
rclb
xchg
aas
jg
icebp
mov
insb
add
inc
js
je
ljmp
out
cmp
aad
test
gs
add
je
xchg
mov
jg
lret
stos
push
pop
xchg
inc
xchg
pop
jnp
jl
jae
fsubs
dec
and
push
stos
inc
scas
sub
mov
cmp
int
leave
mov
adc
jl
adc
out
arpl
in
in
jle
jae
insl
je
lahf
rclb
xor
fistpl
cmpsb
sub
adc
icebp
inc
sub
test
sbb
pop
nop
add
jmp
pusha
out
sub
push
lds
pop
adc
dec
xor
arpl
dec
pop
kmovw
and
and
cmp
inc
cmpsl
fdivs
movsb
in
inc
adc
cli
xchg
inc
lahf
test
add
xchg
lret
push
movb
arpl
ret
cltd
xchg
int3
cltd
inc
adc
mov
inc
mov
ja
loopne
jo
adc
inc
push
roll
fiadds
sub
fwait
inc
idivb
lcall
mov
xor
push
mov
inc
adc
loopne
or
pop
mov
loopne
push
mov
pop
div
sti
cwtl
ds
jmp
scas
sbb
pop
stos
cmp
sbb
mov
fadds
dec
int
xchg
sarl
add
insb
idiv
pusha
jnp
sbb
fistl
insb
pop
cs
xlat
jnp
sub
xor
lahf
sub
xlat
xchg
and
aas
bound
dec
push
push
pop
jge
in
shrb
cld
test
leave
mov
inc
adc
mov
mov
mov
stc
rcrl
repnz
mov
sub
push
adc
xchg
inc
ljmp
xor
xchg
sbb
aas
mov
mov
lods
cmpsl
sub
enter
xchg
mov
dec
add
pop
std
pop
flds
pushf
cmp
movsl
das
xor
sub
pop
xchg
insb
add
fcoml
into
iret
pusha
repnz
add
or
push
jge
jmp
push
fcmovnb
mov
lcall
and
adc
dec
and
lcall
xchg
inc
jae
inc
adc
insb
jle
call
icebp
test
fcomip
xor
push
pop
xlat
test
mov
adc
and
cmp
movsl
mov
push
push
fsubrs
or
shr
daa
mov
in
xor
and
cmp
mov
mov
sub
lds
xlat
aas
movsl
pop
jne
inc
scas
cs
mov
xor
jb
cs
bound
add
rcll
lock
jecxz
jecxz
jbe
xchg
jg
fsub
in
ljmp
cmp
movsl
loopne
xchg
inc
pop
mov
mov
lock
sti
data16
imul
ljmp
mov
stos
mov
sbb
mov
jnp
fadds
fstl
inc
push
mov
push
stc
andb
xor
mov
jmpw
sub
pop
movsb
cltd
inc
aad
xor
dec
movsb
adc
jb
cli
sbb
push
add
imul
fistps
sbb
ljmp
or
cmp
dec
dec
jbe
add
cld
popa
sub
cmp
xchg
ds
or
arpl
stc
out
jne
icebp
push
stc
sub
std
aaa
sub
cmp
mov
push
add
scas
mov
sub
out
add
out
sti
push
sub
stos
sub
push
scas
pop
sti
out
inc
lock
jae
movsl
daa
mov
mov
int3
mov
push
incl
xor
mov
shl
call
and
popa
call
mov
mov
ss
pop
mov
xchg
js
rclb
ljmp
aam
push
pushf
movsl
out
sbb
cmp
push
and
and
xchg
inc
movsb
faddp
xchg
stos
mov
outsl
push
in
add
sub
and
jle
mov
push
push
sbb
mov
jp
test
push
mov
jmp
and
push
cmp
cmpsb
push
pop
repnz
lods
loop
out
mov
lea
sbb
sarb
mov
mov
imul
loope
cmp
popa
sub
cmp
mov
adc
mov
dec
call
pop
xor
cmp
pop
outsb
inc
out
cmpb
popf
fsubr
jb
lret
xlat
ja
out
pop
add
test
mov
out
and
lods
xor
mov
pop
adc
inc
scas
dec
mov
es
out
jg,pn
mov
cmp
dec
test
sbb
notl
dec
sbb
xor
orl
data16
loopne
sub
sbb
jne
xchg
sbb
or
popa
fidivs
mov
sub
ss
mov
insl
add
jg
or
adc
dec
pop
clc
and
sub
es
gs
int
sbb
cmp
fnstsw
stc
pop
cli
push
and
push
sub
adcl
adc
lds
in
sbb
sbb
bound
and
sbb
or
fs
nop
cmp
ja
sub
mov
or
jp
pop
ret
sub
xorl
stc
xchg
das
cld
bound
xor
mov
jmp
adc
hlt
sahf
ds
cmp
add
lcall
push
mov
adcl
inc
push
add
shrl
mov
or
push
ja
add
enter
and
pop
mov
les
mov
sub
pop
cmpsl
ds
adc
xchg
sbb
dec
mov
popa
push
cwtl
inc
outsl
test
pop
mov
fstpt
stos
cmc
arpl
mov
lea
pop
jg
xchg
montmul
cmpsb
inc
mov
rcl
xchg
dec
adc
or
rcl
xor
les
push
repz
or
mov
movsb
xchg
mov
sub
cmp
test
sbb
lods
mov
sbb
xchg
push
mov
jle
inc
test
cmp
jns
nop
xor
push
in
insl
lea
scas
and
mov
sbb
enter
out
xchg
cmp
test
mov
adc
push
mov
mov
mov
jl
andl
inc
scas
das
mov
enter
inc
jno
in
imul
mov
and
std
pop
sbb
jnp
ret
xchg
ret
inc
iret
sbb
pop
gs
out
jmp
hlt
data16
jg
rcl
cmpsl
xor
mov
in
insl
outsb
jnp
mov
jbe
mov
loopne
push
dec
push
adc
jmp
push
in
ret
pop
sub
jae
push
dec
jg
mov
push
and
inc
or
sbb
cmpb
rolb
leave
dec
sub
shlb
enter
int3
xchg
aam
mov
or
fs
adc
popa
or
orl
cmp
cmc
push
jbe
add
inc
or
test
push
inc
sbb
aad
xchg
xchg
or
es
xchg
lods
int3
neg
jge
adc
mov
data16
fdivrs
dec
push
mov
test
inc
and
jg
mov
cmp
inc
adc
fdivr
xchg
push
cmp
sbb
scas
repz
mov
jecxz
insl
lds
pop
mov
mov
cmc
pop
mov
push
mov
or
cmp
pop
push
fsubrs
jp
ds
xor
jbe
mov
negb
aam
mov
dec
sbb
les
lea
and
test
roll
aad
mov
inc
adc
enter
xchg
aas
dec
pop
pop
std
add
hlt
bound
jle
adc
outsl
jl
das
icebp
jnp
and
cltd
xchg
xor
push
out
ret
cmp
imul
out
sbb
fdivp
mov
aaa
adc
push
pop
mov
mov
cld
inc
xchg
adc
cli
cwtl
mov
adc
fwait
aaa
cltd
or
mov
mov
mov
xchg
js
fiadds
icebp
inc
xchg
inc
mov
jmp
leave
xlat
add
aaa
adc
das
dec
pop
jle
sub
xchg
jp
imul
xor
mov
or
out
scas
xchg
inc
sub
adc
dec
sbb
lret
into
stc
push
dec
or
cmpsl
rorb
aas
mov
lcall
jbe
mov
push
std
mov
mov
je
mov
inc
or
fidivrs
sarb
mov
ficompl
xchg
jmp
sbb
pop
or
sar
jbe
mov
mov
xchg
dec
in
jp
inc
xchg
cld
pop
pop
pushf
push
add
pop
fwait
cmp
inc
lods
sub
jl
into
xchg
shufps
push
in
cmpsb
pusha
rolb
rcrl
or
ljmp
out
mov
mov
jge
js
fldl
push
fisttps
fimuls
fwait
inc
arpl
and
test
jno
call
repnz
mov
jle
fcompl
jp
push
test
mov
fnstenv
mov
stos
rorl
xchg
sarl
pop
es
call
notb
es
jecxz
aam
jns
cs
bound
push
aad
ljmp
je
cmpsb
and
pushf
sti
cmp
dec
or
iret
lea
mov
jl
pop
aas
lcall
sub
push
rclb
sub
sbb
pop
stc
aas
inc
dec
or
and
sarl
movsl
jmp
cmp
imul
sub
jl
jl
sub
loop
ficoms
push
mov
xorl
aam
aam
imul
sub
gs
cmpsl
cmp
xor
sub
in
and
dec
dec
add
sub
stos
sub
lcall
mov
outsl
es
lods
sub
inc
jbe
std
push
sub
iret
in
mov
notb
mov
adc
mov
orb
mov
scas
push
ret
faddl
enter
xor
movsb
cmp
das
test
fwait
ret
loopne
sbb
cmp
movsb
imul
repz
flds
bswap
sbb
and
loop
xchg
mov
test
xchg
inc
imul
mov
mov
in
sbb
imul
xor
xor
scas
or
flds
filds
in
popf
cmp
ljmp
cmpsb
jmp
mov
cmpsl
iret
mov
jae
loope
sbb
popf
push
jno
pop
insb
hlt
mov
jmp
dec
wbinvd
mov
mov
test
mov
sahf
sub
les
int
sub
pop
ds
loope
xor
push
xor
fwait
lahf
dec
ret
nop
sti
jl
xchg
loop
dec
arpl
out
imul
xor
pop
out
je
cmpl
stos
aas
in
cs
cmpsl
in
and
adc
and
push
mov
ljmp
fidivs
movsl
push
xor
inc
lea
fwait
push
mov
jnp
and
inc
in
ds
iret
cs
xor
test
xor
cltd
add
jecxz
daa
scas
arpl
pop
cmc
das
xchg
ss
push
mov
pop
push
cld
xchg
mov
outsb
inc
vcvtss2sd
xchg
or
or
pop
lea
stos
ret
aaa
xchg
popf
aad
jb
and
fwait
out
daa
lods
loopne
orl
sbb
jmp
repz
ss
xor
addl
and
pop
sub
adc
stc
popa
into
std
pusha
or
adc
movsb
add
mov
pop
inc
and
sbb
jb
xchg
ss
popf
les
lods
int3
jle
jmp
dec
or
push
orl
push
push
add
mov
cmpsl
cmp
daa
hlt
arpl
cmp
or
nop
inc
arpl
les
rclb
add
pop
rcll
stc
nop
fistpll
jecxz
jnp
int3
sti
xchg
add
cltd
jae
pop
jmp
inc
push
test
sub
data16
pop
lahf
cmp
mov
xchg
test
add
and
aaa
mov
into
mov
xor
mov
call
mov
lds
sarl
test
cmp
scas
ss
sub
hlt
lahf
orb
lods
loopne
xchg
cmp
jns
mov
stos
jmp
gs
jnp
push
jle
js
pop
jmp
lea
sbb
cmp
sub
mov
fbstp
mov
shlb
ret
adc
cmpsb
inc
loopne
cmp
and
xchg
test
sub
or
adc
jae
xchg
push
scas
xor
ret
adc
dec
or
dec
jmp
out
outsb
mulb
sbb
cs
push
add
pop
in
mov
add
sbb
mov
loope
mov
les
cltd
xchg
jle
pop
lds
js
jp
mov
orl
add
mov
scas
or
das
mov
out
hlt
cltd
loop
sarl
or
push
lds
jne
int
imul
sbb
mov
imul
or
ss
sub
lcall
lods
xor
pop
mov
repz
dec
adc
mov
pusha
out
movsb
out
sarb
mov
push
mov
add
repnz
mov
loope
rclb
repz
pop
ss
cmp
lret
or
popf
inc
add
sub
cmp
jmp
xchg
xchg
cmp
cwtl
inc
adc
aam
xor
jmp
jmp
imul
sbb
je
jo
pop
jle
repz
sbbl
xchg
pop
cmc
push
and
mov
cmp
cmpsb
push
inc
adc
mov
aam
into
adc
rorb
sub
orb
add
fbstp
decl
lret
loope
push
push
adc
aam
roll
loop
jne
insl
stc
push
add
js
mov
mov
aam
cmp
xchg
pop
xchg
popa
or
mov
decb
sbb
push
decb
push
jae
enter
aam
pop
pushf
aaa
cmpl
push
loope
push
jge
inc
push
lds
stos
mov
mov
mov
mov
jl
rcll
popa
mov
mov
push
mov
stos
test
mov
xor
negb
test
jbe
add
cmp
iret
sub
mov
mov
mov
inc
dec
dec
fistpll
inc
pushf
xchg
add
adc
jmp
aas
pushf
cmp
rolb
push
cld
data16
xor
dec
adc
add
outsl
hlt
mov
mov
adc
mov
loope
test
xchg
inc
adcl
aam
xor
adc
push
jmp
jae
js
pop
mov
je
xchg
fildl
call
cli
jb
jle
jnp
jecxz
jmp
xlat
repz
dec
pop
xor
and
call
adc
filds
icebp
dec
adc
fsubrl
mov
ficoms
mov
mov
jmp
pop
xlat
fcoms
mov
add
fwait
icebp
adcl
jmp
add
mov
mov
arpl
push
nop
jecxz
push
add
je
push
clc
xchg
xchg
mov
stos
xor
movsb
lcall
xchg
enter
push
and
mov
movsl
sub
and
rclb
outsb
hlt
lea
pop
ret
leave
xor
jecxz
inc
or
icebp
jecxz
xchg
pop
psrlq
sarl
adc
jnp
ret
movsb
pop
add
mov
aas
mov
pushf
pop
negl
shrl
mov
inc
push
aam
jb
jg
adc
push
inc
test
test
xchg
cli
xor
sub
dec
in
or
mov
sahf
insb
add
pop
cmp
icebp
mov
and
test
jbe
jbe
xor
xchg
sub
test
dec
fidivrl
shlb
nop
and
and
aad
mov
pop
repz
sub
and
inc
dec
fbstp
cwtl
das
or
data16
lret
dec
pop
jmp
sbb
mov
mov
xchg
rclb
adc
pop
jp
lds
int3
dec
jecxz
mov
mov
push
imul
fnstsw
iret
push
jb
and
cmpsl
testl
xchg
sub
insb
in
sahf
daa
mov
pop
mov
into
lods
adc
mov
jmp
xchg
and
mov
out
sub
mov
les
cmc
pop
lcall
lods
mov
sbb
mov
cmc
mov
cmpsb
adc
xchg
clc
xor
sub
dec
out
or
cmp
rorl
lods
pop
out
fiadds
inc
je
jbe
xor
xchg
sub
mov
fdivrs
lcall
and
jle
aas
adc
pop
hlt
fs
and
dec
fbstp
cltd
xor
xchg
data16
enter
pop
jmp
aad
mov
mov
mov
adc
adc
ss
xchg
push
mov
mov
sbb
cmp
or
mov
mov
les
or
rclb
jl
and
add
stos
adc
mov
std
bound
xchg
push
or
in
sub
mov
ret
repz
fwait
xor
lods
mov
sbb
mov
cmc
mov
adc
xchg
divl
enter
xchg
out
dec
out
pop
sbb
cmp
cmp
mov
mov
and
inc
jae
jbe
xor
xchg
sub
movsl
mov
xlat
cmp
lcall
and
jge
aas
adc
pop
hlt
arpl
sub
and
dec
fbstp
xor
xchg
data16
sub
sbb
jg
insb
mov
mov
mov
rclb
adc
adc
das
test
lret
sti
mov
mov
sbb
add
cmp
or
and
ret
test
cmc
jle
or
rcll
jl
and
inc
push
mov
into
gs
lret
cld
popa
inc
xlat
xchg
sbb
pop
cmc
in
sub
mov
roll
pop
fwait
xor
stos
mov
sbb
mov
cmc
mov
movsb
adc
xchg
divb
enter
xchg
in
dec
out
push
sbb
aaa
lcall
mov
mov
pop
stos
pop
out
faddl
inc
jb
jbe
das
xchg
pop
push
xchg
sub
movsb
mov
cmp
lcall
and
jl
aas
adc
pop
hlt
lock
and
fbstp
cltd
xor
xchg
data16
sub
sbb
jle
insb
mov
mov
mov
mov
push
shlb
push
loope
jne
ja
test
cld
xchg
leavew
dec
in
xchg
mov
sbb
fnstcw
iret
or
and
ret
hlt
jge
or
rclb
jl
and
lcall
and
sti
pusha
inc
xlat
xchg
sbb
mov
jecxz
sub
lahf
add
adc
rolb
push
fwait
xor
stos
mov
sbb
mov
cmc
mov
mov
fbstp
cmc
xor
es
xchg
in
dec
out
add
insl
add
push
cmp
mov
mov
push
stos
pop
out
fstpt
test
or
lds
sub
mov
add
sub
test
aas
setge
into
xor
popa
out
sub
and
dec
fbstp
cltd
xor
xchg
data16
lds
mov
pop
out
sbb
jge
insb
scas
cmp
mov
rclb
adc
adc
cmpsl
xor
xchg
gs
xchg
mov
sbb
fdivrs
iret
or
and
shrl
scas
adc
pop
inc
iret
xchg
sub
push
mov
push
mov
into
cmpsl
or
in
cmp
inc
xlat
nop
sbb
mov
loop
sub
sahf
add
xor
push
fwait
xor
test
test
xchg
cld
xlat
outsb
cs
cmp
dec
cmc
mov
mov
fbstp
hlt
xor
and
inc
dec
out
add
mov
cwtl
insl
add
push
cmp
xchg
mov
sbb
ds
or
les
sub
mov
add
daa
mov
mov
jp
aas
push
pushf
or
int
pop
hlt
pusha
out
sub
pop
cmpb
inc
dec
fbstp
cltd
xor
xchg
data16
les
mov
pop
in
sbb
jl
insb
scas
cmp
mov
mov
push
mov
jne
jne
cmpsb
xor
xchg
fs
dec
in
test
mov
sbb
xlat
cmp
or
and
shrb
lods
adc
pop
inc
into
xchg
sub
addr16
cltd
and
lcall
and
stc
pop
inc
xlat
sbb
mov
loope
sub
popf
add
xor
inc
fsubrp
push
fwait
xor
test
push
fisubl
sbb
mov
mov
mov
fbstp
repz
and
std
xchg
loop
dec
out
add
xor
insl
add
push
cmp
xchg
mov
sbb
pop
out
fnstcw
jbe
sub
pop
ret
dec
xchg
sub
in
push
mov
add
mov
mov
jns
aas
or
cs
hlt
pop
in
sub
push
cmpl
jo
cltd
xor
xchg
data16
ret
daa
mov
pop
in
sbb
jnp
insb
lods
aaa
mov
mov
mov
push
mov
jne
je
movsl
xor
xchg
arpl
dec
in
test
mov
sbb
cmp
pop
insb
mov
sahf
sub
pop
mov
je
lods
adc
pop
inc
int
sub
gs
xchg
and
lcall
and
clc
pop
inc
xlat
lea
or
dec
scas
pop
cmc
fildll
rcrl
fucomip
push
fwait
xor
cmpsb
mov
sbb
stc
xlat
outsb
sub
cmc
mov
ret
lahf
adc
icebp
xor
and
dec
out
add
add
push
cmp
test
mov
sbb
test
push
sub
xchg
sub
loop
jl
mov
add
and
inc
out
xchg
aas
or
pop
hlt
pop
in
sub
sbb
ds
loopne
rcrb
inc
and
test
mov
mov
mov
pop
mov
jbe
jb
mov
les
cmc
sbbb
mov
insl
add
aam
rolb
es
out
push
mov
jne
stos
adc
pop
inc
lret
xchg
sub
arpl
jge
push
mov
push
mov
fwait
out
shlb
or
mov
negb
fmuls
lods
pop
neg
imul
adc
mov
fwait
xor
movsb
mov
sbb
sub
mov
pop
cmp
loope
mov
xor
and
dec
out
add
mov
xchg
insl
add
push
cmp
test
mov
sbb
test
cvtpi2ps
xchg
sub
adc
add
and
and
ja
aas
or
pop
hlt
pop
jmp
ret
sbb
jnp
scas
cmp
cltd
xor
nop
push
dec
push
loop
sbb
test
lret
cld
mov
pop
mov
fneni(8087
ja
jo
mov
ret
repz
inc
sarl
roll
mov
lcall
inc
in
ja
or
inc
lret
cld
popa
out
xchg
sbb
add
in
shrl
push
and
cmc
pop
inc
fmuls
stos
pop
neg
push
jge
cs
fwait
xor
mov
xchg
xchg
cmc
xlat
outsb
daa
mov
cmp
dec
cmc
mov
les
fwait
adc
mov
xor
push
scas
add
jo
pop
mov
xchg
insl
add
push
cmp
and
movsl
pop
repnz
aaa
test
adc
mov
pop
mov
fsubp
jl
sahf
mov
shlb
add
and
mov
aas
pop
cwtl
xsha1
cmpsb
leave
sub
pop
ljmp
lods
cmp
loop
into
cltd
xor
vphaddbw
mov
push
loop
push
adc
aad
cmpsl
xor
repz
mov
pop
mov
fndisi(8087
js
outsb
xor
lahf
call
icebp
sbbl
rolb
mov
cwtl
and
test
push
test
lret
cld
pop
out
xchg
sbb
add
jecxz
shrb
add
mov
cmc
push
inc
fadds
test
neg
push
jge
sub
dec
loop
dec
fwait
xor
push
aas
mov
mov
xchg
repz
outsb
and
inc
cmc
mov
lds
adc
mov
xor
sbb
add
outsb
add
mov
insl
add
push
ds
loop
and
test
adc
mov
pop
mov
fsub
jl
sahf
mov
shrb
add
and
repnz
aas
add
es
hlt
push
ljmp
stos
cmp
jecxz
int3
cltd
xor
mov
rcrb
dec
push
loope
pop
adc
insl
movsl
xor
cmp
clc
xchg
pop
mov
jns
insb
xor
popf
sub
dec
out
jg
mov
adc
inc
sarl
add
xchg
and
push
mov
inc
jmp
or
pusha
cmp
xchg
sub
sbb
pushf
loope
shrl
add
xor
icebp
mov
push
inc
flds
cmpsb
pusha
not
lds
mov
pushf
xor
imul
sahf
mov
and
mov
ds
testb
xchg
adc
enter
mov
xor
sbb
out
and
rclb
and
pop
repz
stos
inc
data16
jp
daa
mov
pop
mov
jge
pushf
mov
into
cs
pop
out
aam
and
repnz
xlat
add
adc
push
call
jl
stos
cmp
lret
lcall
push
mov
pop
adc
outsb
movsb
xor
mov
test
pop
mov
adc
dec
fsub
jns
imul
pushf
sub
xchg
pop
mov
push
mov
movq
inc
iret
cmp
add
and
and
push
mov
inc
call
or
popa
cmp
xchg
sub
mov
mov
dec
scas
push
popf
loopne
shrl
add
mov
push
inc
fiaddl
popa
clc
fs
mov
jecxz
dec
popf
xor
or
cmp
mov
mov
fnstenv
mov
loop,pt
testl
push
in
mov
xor
sbb
push
call
sub
dec
ds
loopne
and
mov
stos
inc
gs
and
inc
cwtl
das
js
out
or
mov
int3
sub
aam
pop
andb
mov
repnz
inc
fadds
xchg
adc
push
out
lds
ja
adc
cmp
lret
cld
mov
mov
fisttpll
outsl
mov
testb
pop
adc
jns
push
lret
add
in
jnp
mov
push
jo
inc
int
sar
popa
mov
push
mov
inc
out
jns
mov
les
orb
sahf
fisubrs
imul
mov
push
inc
fiaddl
mov
das
xchg
cmc
jg
daa
mov
in
dec
popf
xor
or
fwait
mov
and
scas
test
loope
testl
lds
jl
out
lret
add
imul
outsl
push
mov
fimuls
hlt
shll
stos
inc
arpl
jnp
and
leave
pusha
mov
cltd
xor
out
or
add
insb
push
jle
mov
jno
inc
fadds
xchg
adc
push
in
push
jne
adc
aaa
dec
in
enter
mov
mov
fmull
outsl
mov
ret
hlt
add
mov
adc
jp
push
add
jmp
pop
mov
or
pop
ds
cmp
and
dec
mov
inc
in
jp
mov
ret
cwtl
das
cmc
pop
jmp
dec
dec
stos
pop
sahf
fsubrl
insb
fwait
std
and
mov
dec
inc
fiaddl
mov
xor
xchg
repz
and
inc
popf
xor
pop
insl
add
cltd
mov
and
test
mov
enter
adc
jge
in
lret
add
fnstenv
push
call
sub
inc
xlat
jge
lea
lahf
pop
cmc
shrb
stos
inc
popa
icebp
jl
and
lcall
cwtl
mov
pushf
pop
jmp
insl
sbb
ds
mov
inc
fdivr
xchg
adc
push
jecxz
adc
jle
movsl
xor
pushf
xor
xchg
sbb
and
test
pop
shl
repnz
mov
push
lods
inc
shl
jnp
data16
xchg
add
jmp
or
cmp
ds
pop
es
sbb
hlt
dec
mov
inc
loop
jnp
mov
rcrl
mov
dec
inc
test
insl
cltd
sti
es
in
dec
inc
fstpt
adc
shlb
enter
pop
and
sahf
xor
aaa
xchg
mov
and
lods
stos
inc
fidivrs
enter
push
lods
ret
jge
jecxz
lret
adc
add
xlat
xor
and
mov
fisttpl
cmc
into
lods
inc
pusha
out
jl
and
lcall
xchg
mov
popf
pop
jmp
and
lods
cmp
mov
inc
fsin
adc
push
loope
adc
push
movsb
xor
lds
add
fmuls
jno
sub
icebp
jle
pop
mov
pop
scas
inc
shl
jnp
gs
cltd
push
mov
ljmp
jb
cmp
ds
pop
nop
daa
mov
pop
hlt
dec
scas
scas
inc
loope
jnp
sahf
add
fs
cltd
xor
push
jmp
xchg
mov
mov
xchg
cli
daa
mov
jmp
inc
fdivrl
adc
iret
pop
xor
lock
loop
lahf
ss
outsb
add
enter
mov
stos
stos
inc
fdivrl
nop
outsb
std
enter
pop
scas
rcll
and
int3
adc
ljmp
jno
mov
fimull
cmc
int3
sub
jl
pop
or
xor
jmp
dec
daa
pop
sahf
pop
out
insl
sbb
mov
insb
int3
inc
lea
test
dec
fbstp
adc
pop
mov
les
add
mov
or
jb
sub
nop
lock
pop
scas
adc
scas
inc
iret
in
add
xchg
and
cltd
push
mov
jmp
je
mov
or
cmp
ds
pop
xchg
sub
scas
scas
inc
loopne
jnp
pushf
add
xor
in
addl
or
xchg
stc
sub
jmp
or
stos
cmp
xor
out
sbbb
scas
dec
out
inc
mov
add
push
mov
xchg
fdivl
test
inc
fidivrl
cli
xchg
insl
sti
enter
sbb
and
int
mov
push
jmp
hlt
and
mov
fsts
cmc
lret
inc
pop
jmp
adc
ds
xchg
mov
lahf
push
in
insl
pop
jns
mov
push
inc
mov
test
dec
fnsave
push
jo
sbb
ret
lahf
ss
subl
aam
and
push
jae
daa
test
pop
mov
pop
lods
adc
mov
int
jnp
bound
into
xchg
and
lcall
and
cmp
aas
cmc
pop
xchg
sub
lods
mov
fisubrs
adc
mov
in
addl
mov
xchg
imull
pushf
xor
fstps
test
out
pop
mov
ficoml
add
jmp
mov
fisubl
or
out
sbb
xor
je
cmp
mov
loop
adc
scas
inc
in
add
push
hlt
ljmp
adc
cmpsb
aad
dec
xchg
adc
mov
mov
push
pop
sti
test
jno
das
cmp
data16
icebp
mov
jge
dec
mov
imul
sti
stos
mull
or
push
jp,pn
pop
xchg
insl
nop
xor
add
mov
and
test
imul
popf
xchg
pop
inc
daa
jecxz
xlat
sbb
jmp
pop
fmul
sub
loop
mov
clc
adcb
cld
mov
js
xlat
xchg
sub
dec
mov
dec
jmp
mov
xchg
mov
cltd
sahf
icebp
mov
rcrb
gs
sub
jge
shlb
stc
dec
mov
mov
jns
and
or
xchg
push
das
addr16
sbb
cmp
test
hlt
movsb
cmp
dec
rorl
push
adc
jb
cmc
pop
fnsave
adc
mov
lret
nop
daa
cmp
into
xor
fdivrs
sub
mov
mov
dec
loop
jnp
add
inc
pop
dec
in
scas
adc
mov
fldenv
sti
sbbl
cmp
adc
mov
and
sub
rcrb
sub
push
in
ds
js
into
push
jne
mov
sbb
and
mov
test
dec
push
dec
or
or
xor
push
out
xlat
mov
pop
mov
cmpsl
stos
push
test
flds
cmp
cmp
imul
call
call
and
popa
test
les
cwtl
gs
jmp
adc
add
add
add
xor
add
add
and
test
add
add
inc
push
pusha
cmc
cmp
dec
or
imul
lock
xor
loop
int
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
cmp
outsl
les
jle
loope
lods
jbe
loope
cmpsl
fisttps
loopne
push
pop
orb
test
cmp
and
sbb
