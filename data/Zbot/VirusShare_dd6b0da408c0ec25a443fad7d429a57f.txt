pusha
xor
add
pop
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
add
add
pop
add
add
add
xor
add
xor
add
add
add
xor
add
xor
add
pop
add
xor
add
add
add
add
pop
add
pop
add
pop
add
add
movsb
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
xor
add
add
add
add
add
push
mov
push
ds
mov
cs
cld
repnz
mov
push
ds
mov
aam
inc
pop
inc
mov
into
daa
inc
sbb
sbb
inc
sbb
push
rolb
sub
sbb
xor
sbb
inc
sub
scas
into
into
into
into
into
faddl
lahf
cs
cs
dec
aas
lcall
cs
adc
dec
xor
repz
dec
lods
inc
sub
inc
mov
je
inc
mov
leave
xor
cs
cmp
cs
enter
pop
aad
das
add
sbb
aad
fidivs
ljmp
cmpsb
cmp
dec
inc
sub
dec
cs
stos
xor
cs
xor
xchg
inc
sub
test
out
fwait
lods
inc
or
sar
inc
lret
je
xor
dec
push
enter
xor
cs
mov
icebp
xor
sbb
mov
inc
or
jmp
cs
mov
and
inc
ret
adc
and
xor
xor
add
les
cs
in
loop
loop
sub
mov
xchg
cs
mov
cs
xor
cs
fisubs
xor
daa
test
out
sbb
xor
xor
xchg
daa
addl
xor
cs
and
cs
sbb
push
fs
idiv
or
cs
sbb
push
inc
inc
sbb
inc
enter
iret
inc
enter
xlat
inc
enter
filds
out
in
loopne
incb
cs
ds
rcr
cmpsb
cmp
mov
xor
xor
inc
or
ljmp
push
inc
mov
mov
xor
roll
ljmp
inc
or
xor
xor
sbb
mov
mov
xor
loopne,pt
ds
cs
cs
movl
xor
cs
enter
scas
inc
or
cs
mov
xor
divl
xor
xor
enter
adc
xor
inc
sub
scas
scas
add
out
xor
cs
or
cs
mov
inc
enter
out
and
adc
xor
or
xor
lahf
lea
cs
out
mov
mov
add
jns
cs
call
mov
lret
lahf
mov
cs
mov
clc
out
add
ljmp
or
lcall
xor
xor
sub
sar
lret
add
inc
enter
xor
daa
inc
mov
mov
sbb
fdivrs
andl
inc
sub
dec
fwait
shld
dec
xor
sub
cs
inc
fsubrs
sbb
test
pop
inc
xchg
inc
fadds
sub
mov
mov
cs
xor
adc
mov
cmc
fiaddl
pop
movsb
sbb
testl
xchg
out
inc
sbb
ljmp
scas
mov
ss
pushl
add
xor
mov
or
test
xor
adc
inc
jbe
mov
jbe
movsb
jbe
adc
inc
push
sub
cmc
ds
jbe
inc
lds
cs
inc
dec
ret
mov
pop
inc
loope
cs
mov
cmp
xor
cs
dec
push
jbe
mov
add
add
outsb
test
cli
sbb
xor
xor
jbe
mov
inc
pop
rolb
inc
mov
mov
into
ss
inc
inc
into
ds
inc
inc
shlb
sub
sub
dec
popf
rcrb
mov
mov
cs
push
inc
inc
scas
sahf
mov
shll
inc
cs
inc
mov
ficoms
call
inc
mov
inc
mov
add
mov
cs
call
dec
mov
sub
and
pop
xor
cs
call
divb
cs
call
inc
scas
mov
mov
scas
inc
inc
mov
dec
enter
push
inc
mov
inc
mov
inc
sbb
dec
enter
push
fs
cs
mov
inc
ds
mov
inc
cs
mov
shlb
fsubs
inc
push
add
sub
cs
das
aas
cs
into
sub
daa
inc
sub
inc
mov
mov
push
mov
mov
cli
mov
jmp
cs
inc
mov
inc
pushl
pop
cs
mov
mov
sub
inc
push
mov
mov
call
fs
sub
shld
inc
sub
inc
push
mov
mov
call
fs
sub
cmovne
inc
sbb
xchg
scas
dec
fmul
decl
cs
sub
ds
pop
add
xchg
scas
add
fcoms
fs
sbb
into
xchg
scas
dec
pop
push
sub
fs
sub
xor
mov
inc
mov
movsb
mov
mov
enter
push
cmp
add
sub
dec
mov
outsb
cs
pop
movsb
and
cs
sub
int
mov
mov
into
mov
aam
aas
call
mov
out
stos
xchg
xor
movsb
cmovl
xchg
cs
and
adc
inc
mov
mov
cs
mov
inc
scas
mov
or
cs
into
push
add
mov
cs
inc
mov
aam
into
push
inc
mov
aaa
jne
cs
mov
aaa
gs
enter
sbb
cli
mov
dec
mov
xor
sub
dec
into
fiaddl
scas
inc
call
sub
cs
mov
inc
scas
mov
fisubrl
daa
inc
scas
mov
cs
cs
call
sub
pop
inc
sub
inc
mov
sbb
sub
daa
sub
lahf
into
inc
mov
sub
inc
scas
mov
sub
or
and
daa
inc
scas
mov
cs
cs
sub
in
mov
inc
pop
xor
mov
inc
sub
cs
inc
mov
inc
mov
mov
dec
shr
cli
inc
enter
ret
cli
inc
enter
ja
enter
inc
cli
inc
enter
daa
fiaddl
cli
inc
sbb
paddusb
inc
sbb
sub
cs
sub
inc
sub
and
inc
sub
pop
cli
inc
mov
inc
mov
inc
mov
inc
mov
cli
inc
mov
inc
mov
dec
ret
inc
enter
and
inc
enter
cli
inc
enter
pop
cli
inc
enter
sub
mov
inc
enter
jne
inc
mov
cs
inc
enter
sub
and
cli
inc
enter
sub
mov
inc
and
cli
inc
sub
sub
cld
stc
cs
or
cli
inc
enter
ret
cld
cmp
sub
add
inc
sub
fdivs
jnp
cs
dec
cmp
sub
mov
inc
mov
sub
sub
pop
dec
fcomps
sub
cs
dec
cmp
add
dec
mov
outsb
inc
scas
inc
sub
sub
out
mov
sub
test
sub
and
pop
and
mov
cs
mov
inc
mov
inc
enter
inc
dec
inc
scas
ss
pop
cmp
sbb
mov
jmp
mov
cs
cmpsb
inc
mov
scas
push
movsb
inc
mov
sub
inc
scas
sahf
xor
outsb
sbb
outsb
inc
shlb
sub
xor
cs
das
xor
cs
ds
mov
jb
cs
cmp
scas
dec
cmp
cs
mov
mov
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
push
cs
inc
cmp
sub
dec
cs
inc
cmp
sub
outsl
cs
inc
cmp
sub
jge
cs
inc
cmp
sub
sub
cs
inc
imul
mov
sub
sub
sub
inc
mov
sub
cs
cmp
dec
cmp
sub
xor
out
sub
mov
sub
sub
pop
cmp
bound
push
clc
jne,pn
bound
xchg
jmp
mov
js
cs
jmp
and
sbb
mov
cs
into
inc
mov
mov
inc
mov
inc
mov
and
cs
into
inc
mov
sub
sub
pop
inc
inc
inc
dec
inc
enter
incl
dec
enter
enter
xor
shrb
data16
inc
mov
cs
into
inc
mov
sub
sub
scas
cmp
daa
cs
js
fsubs
enter
inc
mov
enter
inc
enter
xor
inc
enter
int3
into
adc
add
inc
mov
xor
inc
push
jle
aas
outsl
cs
xor
test
testl
mov
cs
roll
inc
fmuls
push
out
dec
sarb
inc
fdivr
inc
fmuls
inc
fmuls
inc
fdivr
dec
popf
push
inc
fsubr
xor
sub
fmul
inc
fsubr
mov
inc
xor
xchg
and
or
inc
push
xor
iret
xor
xor
push
push
inc
sub
inc
inc
xor
xor
iret
inc
fsubs
cmpsb
push
inc
enter
xlat
xor
enter
inc
fcoms
xor
pop
inc
fadds
movsb
dec
ja
cs
xor
pop
inc
shlb
inc
fcoms
inc
enter
dec
cmp
sub
out
inc
enter
xor
shrb
outsb
sub
xor
add
into
inc
mov
sub
sub
outsb
inc
das
iret
xor
cs
daa
inc
enter
inc
mov
xor
cs
cs
cs
pop
mov
sub
sub
mov
inc
mov
inc
mov
inc
mov
nop
dec
mov
insb
inc
xchg
inc
mov
push
pushf
into
inc
mov
adc
inc
nop
inc
ds
push
test
xor
inc
dec
in
ljmp
inc
pop
inc
scas
ss
fimull
xor
cs
dec
aaa
sub
cs
dec
aaa
sbb
cs
xor
cs
cs
cs
dec
aaa
fldt
cs
adc
lds
cs
ret
test
xor
dec
popf
into
inc
inc
enter
mov
aaa
mov
cs
mov
ljmp
fdivrl
nop
push
sub
push
xor
dec
popf
and
popf
loop
xor
push
add
push
inc
enter
push
mov
inc
xor
lret
xor
dec
popf
and
popf
loopne
xor
push
test
push
inc
sub
inc
sub
inc
lods
cmp
divl
data16
popf
and
popf
loopne
sub
daa
ds
mov
dec
popf
and
popf
loop
inc
enter
pop
xor
inc
enter
pop
adc
enter
into
dec
dec
popf
push
inc
sub
ds
inc
enter
cmovl
lock
xchg
scas
scas
add
shll
push
inc
les
ficoml
nop
dec
aaa
sub
cs
mov
cs
das
das
cs
mov
scas
add
cs
fdivrs
dec
inc
dec
inc
enter
xor
dec
dec
aaa
lods
cs
and
and
pop
movsb
mov
inc
mov
xor
xor
mov
fisubrl
cmp
mov
sub
pop
cmp
pop
pushl
cs
mov
into
jbe
sub
aas
push
cs
sub
xchg
scas
inc
mov
rolb
inc
fadds
xchg
sarl
push
xor
inc
dec
inc
cmp
rcll
and
mov
popf
rcl
sbb
sub
inc
fdivrs
inc
les
into
sub
cmp
daa
add
mov
mov
xor
sahf
xor
xor
fdivrs
inc
enter
add
scas
mov
push
scas
add
shll
xor
sbb
xchg
scas
shll
mov
cmp
in
xor
test
mov
into
ss
fcoms
cmp
push
loopne
inc
fcoms
xor
push
mov
ds
sbb
inc
fmuls
inc
fsubs
dec
popf
push
inc
adc
sub
and
cmp
dec
xor
xor
xor
enter
inc
fcoms
xor
pop
inc
sbb
movsb
xchg
mov
adc
xor
inc
into
ss
fcoms
cmp
sbb
scas
shll
dec
inc
scas
ss
cs
fmull
cs
fadds
rorl
cs
ds
scas
scas
add
adc
xor
ds
mov
xor
ds
lret
sub
call
inc
enter
sbb
inc
sub
xchg
roll
mov
add
movsb
lret
ss
popf
inc
mov
mov
sub
movsb
sub
lret
es
movsb
and
inc
mov
sbb
mov
mov
inc
scas
sub
int
push
dec
cs
dec
inc
scas
mov
sub
push
dec
sub
dec
inc
shlb
pop
inc
mov
cmp
pop
inc
mov
enter
pop
dec
xor
sub
in
ljmp
inc
pop
xor
ds
xchg
sub
sub
mov
sub
test
sub
and
mov
cs
int
aaa
sub
cs
sbb
cs
or
cs
mov
xor
cs
and
loop
cmp
xor
cs
mov
xor
inc
mov
dec
aaa
shlb
cs
mov
inc
ds
mov
fiaddl
cmpsb
xor
inc
sbb
mov
cs
fiadds
push
cli
inc
mov
cli
inc
mov
mov
cli
inc
mov
call
inc
mov
inc
mov
rolb
pop
mov
adc
or
mov
push
adc
mov
adc
notb
clc
cli
mov
sub
mov
fdivrs
ds
enter
inc
sub
mov
nop
inc
inc
inc
into
pop
inc
mov
push
inc
cs
mov
push
inc
inc
push
pop
inc
shll
pop
movsb
push
sbb
ss
fidivrl
push
inc
into
inc
xor
sahf
movsb
sub
mov
enter
enter
mov
mov
shrb
into
inc
mov
test
decl
mov
inc
sahf
inc
mov
sub
sbb
cs
sbb
xor
sbb
xchg
rorl
outsb
cli
movsb
lret
lock
mov
inc
dec
inc
mov
push
dec
inc
lret
mov
sbb
mov
xor
into
inc
mov
xor
into
call
ss
mov
cmp
push
pop
rolb
inc
xor
ds
scas
shlb
cs
mov
xor
inc
dec
popf
mov
adc
xor
sahf
sbb
enter
enter
mov
mov
rolb
pop
sub
into
cmp
cs
incl
scas
push
sub
fcmovu
dec
daa
sub
adc
inc
lret
inc
adc
scas
push
repnz
sub
inc
xor
sahf
sbb
mov
dec
enter
sbb
inc
enter
fsubrl
jle
mov
xor
xor
sub
cmpsb
sub
sahf
pop
mov
cli
inc
fsubrl
xor
cs
fildl
inc
mov
inc
xor
mov
scas
in
in
mov
fadds
dec
popf
sarb
dec
popf
mov
aam
xchg
sub
cmp
push
insb
inc
mov
mov
inc
fidivrs
xor
xor
mov
xor
and
icebp
xchg
scas
in
in
mov
fadds
xor
pop
sub
sub
cs
inc
mov
cli
inc
mov
sub
fiaddl
ds
inc
mov
fdivr
inc
mov
aaa
test
cs
aaa
jo
cs
mov
xor
mov
add
sub
inc
call
xor
cs
aaa
lahf
cs
sub
xchg
pop
dec
popf
cmpsl
sub
ret
inc
sub
inc
sub
xchg
pop
dec
popf
cmpsl
and
ret
inc
sub
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
movsb
sub
sbb
xor
inc
xor
ds
sub
xchg
pop
cli
xor
cs
cmp
sub
xchg
pop
cli
inc
cmpsl
sub
ret
inc
jecxz
test
sub
cs
movsb
sub
insb
inc
sub
xchg
pop
inc
mov
push
out
cs
test
movsb
mov
add
in
ljmp
inc
pop
sar
inc
fisubrl
cli
test
stos
mov
cs
xchg
lret
stos
sub
cs
sub
sub
push
call
shrl
mov
sub
cs
movsb
lds
xor
fsubs
dec
fdivl
xchg
fildl
xchg
sub
inc
inc
push
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
in
and
or
xchg
lret
dec
aaa
mov
ljmp
fcmovu
mov
sub
sub
sub
cmp
nop
xchg
in
cmpsb
dec
push
lock
mov
sub
cs
inc
movsl
mov
cs
test
cs
xchg
mov
mov
cs
movsb
mov
xor
sbb
dec
adc
xchg
adc
xchg
rorl
fsub
ret
inc
pop
das
add
das
and
mov
or
xchg
mov
sar
inc
mov
inc
mov
fadds
rcr
mov
sub
sub
sub
mov
cli
test
mov
cli
xchg
ret
mov
cli
movsb
ret
push
fmull
mov
lods
mov
sub
cs
movsb
lds
xor
sbb
dec
adc
xchg
sbb
cli
inc
inc
into
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
or
push
cmp
scas
ljmp
inc
mov
fimull
shrl
sub
cs
cs
fsubs
cli
movsb
mov
test
xor
mov
xor
cmpsb
dec
inc
int
mov
xchg
sub
cli
movsb
pop
sbb
xchg
scas
in
cli
inc
xor
daa
ljmp
pop
inc
mov
rolb
cmp
ds
dec
inc
enter
dec
inc
inc
aas
ds
fadds
inc
mov
rolb
cmp
ds
inc
mov
call
inc
pop
xor
mov
sub
or
pop
mov
xchg
adc
xor
movsb
sbb
xor
aam
inc
mov
inc
mov
mov
cmp
mov
mov
cmp
mov
mov
cmovl
dec
cs
mov
mov
mov
jecxz
sub
sub
cmovno
cli
inc
mov
xchg
loope
mov
aaa
pop
out
cs
call
jecxz
rcrl
inc
call
loope
push
out
cs
call
mov
js
cs
aad
mov
fcoms
dec
lea
mov
xchg
mov
rorl
dec
mov
cs
mov
mov
cs
mov
mov
cmp
cmp
call
stos
scas
das
adc
das
mov
xchg
filds
daa
xchg
mov
xchg
cmp
insb
movsb
sbb
xor
sub
mov
fadds
xor
pop
sub
cmovno
daa
inc
enter
daa
das
adc
inc
enter
mov
ds
dec
inc
enter
mov
mov
aas
ds
enter
mov
shll
xchg
aam
sub
inc
mov
daa
or
out
lods
mov
js
xor
out
and
jg
cs
mov
and
out
mov
mov
sub
sub
mull
or
fidivs
cs
pop
xchg
sbb
bsr
sub
or
xor
cs
mov
mov
unpcklps
inc
mov
pop
xchg
in
ss
dec
fwait
scas
mov
inc
mov
xchg
cmp
mov
xchg
mov
cmp
lds
cmovne
movsb
mov
mov
pop
xchg
mov
mov
cmovne
lret
test
xlat
inc
mov
pop
xchg
in
ss
aas
mov
inc
enter
dec
pop
das
adc
das
mov
xchg
mov
mov
iret
test
inc
enter
xor
inc
mov
into
add
inc
enter
xor
inc
inc
enter
iret
inc
mov
cmp
sub
inc
enter
dec
aaa
xor
enter
dec
pop
das
adc
das
mov
dec
fwait
roll
test
int
lds
cmovl
dec
xor
inc
mov
mov
lea
inc
enter
pop
xchg
mov
mov
cs
mov
pop
or
lret
sub
xchg
mov
dec
dec
cmp
enter
pop
xchg
mov
mov
cs
mov
pop
or
and
sub
inc
mov
int
aaa
mov
cs
mov
pop
or
subb
sub
mov
fadds
xor
pop
sub
or
daa
inc
enter
pop
mov
sub
pop
or
iret
sbb
xlat
pop
or
fists
mov
sub
or
divl
mov
sub
inc
mov
inc
enter
mov
xchg
mov
cs
xor
xchg
rcrl
xchg
lret
xor
inc
mov
xor
inc
call
cs
enter
inc
xchg
mov
inc
enter
pop
inc
mov
filds
daa
xchg
lret
xchg
mov
daa
xchg
lret
test
dec
inc
push
mov
movsb
mov
cs
mov
xchg
mov
xor
xchg
rcrl
xchg
fildl
inc
mov
mov
mov
inc
fdivr
inc
mov
filds
daa
xchg
mov
inc
mov
mov
enter
xchg
fildl
sbb
xchg
mov
test
inc
enter
daa
xchg
mov
test
movsb
rcrl
pop
inc
mov
filds
daa
xchg
mov
xor
movsb
iret
adc
inc
mov
lds
adc
inc
mov
lds
mov
fists
dec
mov
movsb
mov
push
mov
filds
call
mov
xor
sar
mulb
sub
xchg
mov
sub
inc
mov
mov
daa
dec
xor
xchg
mov
sub
daa
xor
pop
xchg
mov
pop
dec
xor
in
ljmp
pop
xor
movaps
pop
daa
or
mov
sub
mov
cmp
iret
jo
ds
lods
mov
sbb
mov
sub
or
pop
leave
or
pop
xchg
lret
xor
sbb
xchg
mov
inc
mov
mov
call
mov
mov
xor
xor
cs
sub
jmp
sub
xor
cs
mov
mov
sub
sub
mov
sub
inc
enter
xor
aas
enter
daa
inc
mov
cs
enter
xor
dec
lea
enter
cmovne
call
sbb
dec
fcoms
in
das
mov
xor
aas
enter
daa
dec
fcoms
xor
dec
lea
test
add
dec
fcoms
test
test
aas
fcoms
out
inc
fcoms
mov
mov
rol
aas
fcoms
daa
inc
fsubs
xchg
lret
xor
dec
lea
dec
iret
inc
push
bound
daa
xchg
lret
xor
dec
lea
enter
push
xchg
lret
xor
dec
lea
enter
xor
dec
lea
mov
xchg
mov
js
cs
mov
pop
cmp
mov
sub
xor
pop
leave
or
sub
or
sub
inc
mov
lret
dec
aaa
mov
cs
mov
jmp
cmp
ljmp
pop
xor
xor
fiaddl
cmp
sbb
xchg
scas
add
cmp
lcall
sub
inc
pushf
inc
filds
incl
sbb
pop
sub
sub
inc
dec
cmp
sub
sub
dec
cmp
sub
pop
sub
dec
inc
lcall
in
in
shll
add
xor
xor
cs
scas
cmp
push
nop
inc
push
add
sar
inc
push
mov
scas
inc
push
ds
rcrl
pop
xchg
sar
inc
mov
dec
cmp
sub
ds
sub
ss
inc
mov
xor
fcmovu
dec
aaa
lea
cs
cs
popf
scas
outsb
inc
mov
shll
pop
lahf
mov
cs
mov
cs
enter
daa
cs
roll
in
cli
movsb
enter
dec
xchg
shrl
sub
popf
enter
inc
dec
inc
inc
cli
mov
dec
popf
inc
lods
sub
cs
movsb
int
inc
inc
call
das
cmpsb
insb
cs
mov
ds
popf
and
dec
stos
cmpsb
insb
movsl
mov
cs
test
movsb
int
push
add
sub
enter
enter
add
add
inc
sbb
dec
popf
ret
das
cmpsb
nop
cs
push
mov
sub
sub
in
ljmp
enter
shrl
sub
xchg
scas
cli
movsb
enter
scas
add
xor
pop
inc
mov
sbb
scas
add
xchg
sbb
into
inc
mov
dec
mov
dec
cmp
inc
mov
cs
mov
cs
mov
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
cs
inc
mov
iret
sub
cmp
cs
mov
push
xor
xor
inc
sub
lret
fisubrl
ljmp
inc
sub
mov
pop
inc
fdiv
inc
sub
movsb
and
pop
xchg
in
call
sbb
add
inc
sub
dec
popf
cmpsb
in
movsb
ljmp
adc
inc
data16
ds
cmpsb
mov
fmuls
test
ds
cs
fsub
inc
fsubs
xor
inc
mov
aam
sbb
enter
push
cmp
daa
inc
sahf
inc
mov
ss
inc
call
jmp
in
shll
inc
mov
sub
xor
inc
xchg
shll
mov
inc
dec
fbstp
cs
push
cwtl
mov
cmp
inc
xor
xor
movsl
sub
cs
movsb
mov
out
xchg
scas
cli
inc
xor
fbstp
cs
faddl
inc
cmp
xor
cs
ds
add
das
mov
aas
ds
mov
inc
das
and
or
cmp
xor
cs
in
mov
inc
pop
xor
cs
ss
mov
push
inc
roll
xor
outsb
xor
roll
int3
sbb
inc
inc
cmp
daa
sub
xor
cs
fwait
inc
xchg
mov
cs
ds
aaa
dec
cs
sub
std
sbb
fadds
xor
push
inc
scas
ss
ds
loopne
xor
inc
aam
inc
mov
inc
xor
inc
call
cmp
sahf
dec
mov
mov
mov
cmp
pop
inc
mov
enter
movsb
mov
xor
fsubrl
add
inc
sbb
mov
mov
sub
outsb
inc
enter
inc
test
inc
push
dec
xor
movsb
lret
adc
test
pop
add
add
sub
scas
into
pushl
clc
imull
mov
sub
sub
mov
sub
inc
mov
mov
cs
aas
mov
inc
mov
cs
fcoms
xchg
fnsave
dec
roll
pop
scas
aas
enter
pop
inc
fdiv
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
scas
dec
fsubrs
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
scas
inc
fcomp
inc
fcoms
xchg
fnsave
dec
roll
pop
scas
inc
enter
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
scas
sub
inc
enter
xor
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
scas
sub
enter
dec
aaa
xor
mov
mov
cs
ds
scas
call
sub
push
ds
xor
add
sbb
dec
mov
adc
inc
scas
mov
add
add
enter
iret
add
cs
mov
sub
mov
sub
mov
mov
call
add
cs
fcoms
xchg
fnsave
dec
roll
pop
xchg
enter
pop
inc
fmul
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
xchg
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
xchg
out
fcoms
xchg
fnsave
dec
roll
pop
xchg
out
push
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
xchg
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
xchg
inc
inc
enter
dec
aaa
xor
mov
mov
cs
ds
cmpsl
inc
mov
into
inc
mov
into
jmp
sub
inc
scas
mov
inc
enter
add
sub
iret
add
cmpsl
xor
mov
xor
ds
sub
mov
sub
inc
enter
xor
aas
enter
pop
inc
call
inc
mov
movsb
enter
add
cs
fcoms
xchg
fnsave
dec
roll
xor
enter
pop
inc
fadd
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
inc
mov
cs
rorl
xor
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
inc
mov
cs
shll
inc
fsub
inc
fcoms
xchg
fnsave
dec
roll
xor
out
push
inc
enter
xor
dec
push
mov
cs
ret
sub
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
fcoms
xchg
fisttpll
mov
cs
dec
ret
sub
inc
enter
dec
addr16
mov
cs
in
xchg
in
dec
inc
mov
movsb
enter
pop
sub
lahf
inc
enter
add
sub
inc
jmp
enter
dec
xor
xor
pop
inc
call
movsb
mov
and
mov
mov
fadds
rcl
inc
mov
mov
cs
sub
inc
mov
aam
pop
inc
mov
inc
ds
mov
inc
cs
cmpsb
inc
enter
mov
rclb
mov
cs
sub
cs
mov
cmp
mov
sbb
call
and
inc
mov
push
ds
mov
inc
xor
daa
shll
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
mov
sub
cmp
mov
mov
sbb
mov
cmp
mov
mov
sbb
movzbl
mov
xor
mov
leave
ret
push
mov
sub
mov
mov
add
mov
mov
movzwl
or
mov
cmp
mov
mov
adc
mov
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
mov
or
mov
cmp
mov
mov
adc
mov
leave
ret
push
mov
sub
test
mov
mov
sbb
mov
movzwl
mov
and
mov
cmp
mov
mov
sbb
mov
leave
ret
push
mov
sub
cmp
mov
mov
adc
mov
movzbl
mov
or
cmp
mov
mov
sbb
leave
ret
push
mov
sub
movzbl
mov
or
mov
mov
sub
cmp
mov
movzbl
sbb
mov
leave
ret
push
mov
sub
movzbl
mov
and
mov
mov
movzwl
and
mov
mov
mov
or
leave
ret
push
mov
sub
test
mov
mov
adc
mov
test
mov
movzwl
adc
movzbl
mov
add
leave
ret
movl
movl
movl
movl
mov
ret
push
mov
sub
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
movl
cmpl
jg
mov
mov
push
mov
rolb
push
mov
cmp
mov
sbb
xor
mov
add
cmp
je
lea
mov
mov
movzbl
xor
mov
mov
mov
andl
subl
xorl
xor
add
cmp
je
mov
mov
addb
mov
mov
mov
mov
mov
add
cmpl
movl
movb
je
lea
mov
mov
mov
and
mov
mov
xor
add
mov
mov
xor
mov
mov
xor
sub
mov
sub
sub
mov
pushl
pushl
mov
mov
pushl
call
mov
mov
mov
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
call
jmp
mov
xor
add
mov
mov
jmp
movl
cmpl
jge
mov
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movl
cmpl
jl
mov
push
lea
and
mov
mov
sub
mov
mov
imul
imul
mov
lea
and
mov
or
xor
mov
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
sub
mov
mov
mov
xor
xor
lea
xor
movzwl
mov
sub
mov
mov
imul
mov
and
mov
xor
add
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
push
movl
call
cmp
je
push
mov
cmp
jae
test
je
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
div
lea
mov
jmp
test
jne
mov
jmp
dec
mov
cmp
jne
pop
ret
push
mov
sub
movl
movl
cmp
movzwl
mov
adc
mov
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
lea
mov
mov
movzwl
or
mov
movl
cmpl
jae
mov
mov
xor
movzwl
mov
or
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
adc
mov
mov
xor
mov
or
push
mov
add
test
mov
mov
adc
mov
mov
mov
mov
push
pop
sub
add
cmpl
mov
mov
pop
jne
mov
mov
xor
mov
xor
add
leave
ret
push
mov
sub
movl
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
movl
cmpl
jae
mov
add
mov
movzbl
adc
mov
mov
xor
xor
mov
add
mov
movl
cmp
mov
sbb
mov
xor
add
mov
mov
mov
or
mov
mov
lea
push
mov
mov
addb
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
mov
mov
movl
cmpl
jg
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
call
jmp
incl
mov
mov
shl
push
mov
movzbl
add
mov
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
and
mov
mov
mov
shl
movl
cmpl
jae
mov
sub
mov
movzbl
shl
mov
mov
mov
mov
or
mov
mov
mov
mov
cmp
mov
mov
adc
mov
mov
dec
not
and
mov
mov
lea
mov
mov
mov
mov
sub
mov
jmp
mov
sub
mov
mov
or
mov
mov
mov
mov
mov
sub
xor
cmp
mov
jne
mov
mov
pop
leave
ret
push
mov
sub
mov
mov
push
movl
cmpl
jl
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
push
movl
mov
movzwl
and
mov
mov
add
movl
mov
mov
mov
mov
or
mov
xor
add
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
and
lea
mov
mov
rclb
lea
mov
mov
or
lea
mov
lea
cmp
mov
adc
mov
mov
lea
mov
lea
mov
lea
mov
mov
add
mov
lea
mov
lea
mov
inc
mov
mov
lea
mov
mov
mov
sub
mov
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
movzwl
not
mov
mov
mov
movl
cmpl
jbe
mov
sbb
mov
mov
adc
mov
mov
mov
mov
mov
mov
cmp
mov
sbb
mov
mov
lea
lea
mov
lea
mov
lea
mov
cmp
sbbl
orl
lea
mov
lea
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
and
movl
mov
mov
movzwl
and
mov
movl
mov
pushl
mov
push
push
lea
push
mov
mov
sub
mov
mov
pushl
pushl
call
push
push
lea
push
movl
cmpl
jb
mov
adcb
movzwl
sub
mov
adc
mov
mov
pushl
pushl
call
mov
mov
mov
mov
xor
xor
lea
add
cmp
je
mov
mov
movzwl
or
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
mov
xor
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmp
mov
adc
mov
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
ja
movzbl
or
mov
mov
orb
mov
or
mov
sub
mov
push
push
mov
xor
mov
add
mov
movl
call
test
je
call
mov
mov
cmp
mov
sbb
xor
add
mov
mov
mov
xor
mov
movl
mov
movl
mov
mov
xor
add
mov
mov
xor
mov
mov
xor
mov
add
mov
cmp
je
mov
movzwl
or
mov
mov
xor
add
imul
cmp
mov
sbb
mov
mov
mov
mov
xor
add
cmp
jne
movzbl
movl
cmpl
jg
movzbl
sub
mov
movzbl
xor
add
cmp
sbbl
add
mov
mov
mov
sub
mov
mov
movzbl
xor
add
imul
movzbl
sub
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
xor
sub
mov
mov
xor
sub
mov
mov
cmpl
jle
mov
mov
sub
jmp
mov
mov
or
mov
mov
or
mov
xor
add
ror
cmpl
jbe
mov
ror
mov
jmp
movzbl
sbb
mov
movzwl
sub
mov
mov
movl
cmpl
jae
movzbl
and
mov
mov
and
movzbl
xor
mov
mov
xor
add
imul
xor
add
imul
mov
xor
mov
xor
add
imul
incb
test
movzbl
mov
sbb
mov
mov
mov
xor
add
imul
add
mov
xor
add
imul
decb
mov
mov
xor
lea
test
sbbl
xorl
xor
xor
mov
add
cmp
jne
mov
mov
add
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
push
pop
mov
test
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
xor
add
mov
inc
cmp
jb
push
push
push
push
xor
call
test
jne
mov
mov
cmp
jne
call
movl
cmpl
jne
lea
mov
mov
mov
sub
lea
mov
mov
mov
or
mov
cmp
mov
mov
adc
mov
mov
xor
cmp
mov
mov
adc
lea
mov
lea
mov
mov
mov
and
mov
mov
xor
mov
add
mov
inc
movzwl
xor
mov
cmp
jne
test
je
push
pop
mov
mov
mov
and
mov
mov
sub
sub
mov
xor
add
mov
dec
jne
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
inc
mov
cmp
je
mov
cmp
jbe
dec
mov
jmp
test
jne
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xor
mov
div
lea
mov
cmp
jne
push
push
call
mov
add
cmp
jne
pop
ret
push
mov
push
push
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
movl
movl
cmpl
jl
mov
mov
mov
mov
mov
mov
mov
cmp
andl
sbbl
addl
mov
mov
movzbl
neg
mov
pushl
mov
mov
pushl
lea
push
call
call
test
je
mov
mov
sub
mov
addl
jmp
mov
mov
mov
xor
mov
mov
mov
lea
mov
mov
cmpl
jb
mov
or
jmp
mov
sub
mov
shlb
add
mov
mov
mov
leave
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
push
movl
cmpl
jb
movzwl
add
mov
push
mov
push
lea
mov
subl
orl
subl
pushl
pushl
call
mov
mov
xor
cmp
movzwl
sbb
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
call
lea
mov
mov
movzbl
mov
and
mov
mov
add
test
mov
mov
sbb
mov
xor
pop
add
pop
pop
leave
ret
push
mov
sub
push
push
cmp
adcl
andl
andl
movl
lea
movl
push
mov
call
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
cmp
mov
mov
sbb
mov
mov
movl
cmpl
ja
mov
mov
or
mov
movl
mov
mov
mov
test
jne
mov
mov
cmpl
je
push
push
add
push
pushl
pushl
call
add
mov
mov
test
je
movl
mov
jmp
cmp
je
mov
mov
xor
xor
xor
add
lea
div
push
push
shl
addl
mov
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
cmpl
jbe
mov
xor
jmp
mov
or
mov
mov
adc
mov
pop
movl
cmpl
jne
mov
adcb
mov
sbb
mov
mov
add
pop
test
je
mov
pushl
push
push
push
push
pushl
pushl
call
add
mov
movl
cmp
jne
mov
mov
push
pushl
mov
call
mov
jmp
cmp
jne
mov
mov
push
push
push
push
push
pushl
call
add
mov
sub
mov
mov
dec
cmp
mov
mov
sbbb
xor
mov
xor
mov
add
jne
movl
cmpl
jbe
mov
mov
add
mov
mov
mov
xor
xor
xor
add
add
div
shl
mov
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
xor
mov
mov
or
mov
mov
push
cmp
mov
sbb
xor
pop
div
cmp
jbe
mov
xor
inc
xor
mov
cmp
jne
pop
xor
pop
inc
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
je
cmpl
jne
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
cmp
jo
mov
mov
sbb
mov
jmp
mov
movzwl
sbb
mov
movzwl
and
mov
mov
movl
cmpl
je
mov
and
mov
mov
and
mov
mov
mov
sbb
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
lea
mov
mov
mov
or
mov
mov
mov
mov
add
pop
mov
rcr
mov
mov
mov
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
movl
cmpl
jl
mov
mov
xor
movzwl
sbb
mov
mov
xor
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
xor
add
leave
ret
push
mov
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
pushl
call
jmp
xor
movl
cmpl
jb
mov
pop
div
cmp
je
cmp
je
mov
mov
or
mov
push
xor
mov
mov
or
mov
mov
pop
div
cmp
jae
cmp
je
mov
mov
sub
push
xor
mov
pop
div
cmp
ja
cmp
je
xor
add
mov
div
cmp
je
cmp
jne
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
addl
xorl
add
mov
mov
xorl
addl
orl
add
mov
jmp
movl
cmpl
jae
mov
mov
and
mov
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
push
push
call
cmp
jle
xor
leave
ret
push
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
lea
call
movl
cmpl
jle
mov
mov
sbb
mov
mov
mov
addb
push
pop
push
mov
pop
push
mov
mov
or
pop
push
mov
mov
cmp
mov
mov
adcb
mov
mov
cmp
jle
movzwl
mov
or
mov
jmp
mov
mov
add
mov
lea
mov
mov
mov
xor
pop
push
mov
mov
pop
push
mov
mov
add
mov
mov
pop
mov
and
mov
push
mov
pop
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
pop
mov
movl
cmpl
jle
mov
push
mov
mov
mov
mov
cmp
mov
sar
mov
mov
pop
push
mov
pop
push
mov
pop
mov
orl
mov
xor
push
push
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
lea
mov
push
mov
mov
mov
mov
call
add
lea
push
call
test
je
lea
lea
call
xor
movzbl
xor
mov
call
mov
call
movl
cmpl
jl
mov
call
mov
call
lea
mov
mov
xor
mov
mov
lea
call
mov
rcrb
mov
mov
call
mov
mov
xor
mov
mov
call
mov
mov
orl
call
mov
mov
addl
call
mov
mov
call
cmp
adcl
orl
addl
call
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
call
cmpl
jb
pop
pop
test
je
call
mov
mov
mov
mov
cmp
mov
mov
adc
mov
mov
mov
xor
mov
mov
movzwl
sub
mov
mov
add
mov
mov
jmp
push
call
push
mov
sub
movl
lea
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
call
test
je
push
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
movl
cmpl
jle
mov
sbb
mov
add
jmp
cmp
jne
lea
mov
call
mov
mov
mov
cmp
mov
sbb
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
jmp
push
mov
sub
mov
mov
movl
movl
mov
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
movl
cmpl
je
mov
mov
xor
mov
and
mov
mov
push
mov
mov
and
push
mov
mov
xor
mov
mov
sub
xor
sub
mov
mov
mov
mov
movzbl
add
mov
movl
mov
xor
mov
add
mov
sub
mov
push
mov
mov
orl
mov
imul
cmp
mov
mov
sbb
mov
movl
addl
mov
mov
xor
lea
mov
mov
xor
mov
add
mov
xor
movzwl
add
cmp
ja
cmpl
jo
mov
mov
or
jmp
lea
mov
mov
mov
sub
movzbl
mov
sbb
mov
movl
mov
add
mov
cmp
mov
mov
sbb
mov
mov
mov
xor
mov
add
mov
movzwl
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
mov
movl
cmpl
je
mov
xor
add
imul
mov
mov
mov
push
call
test
je
mov
xor
mov
mov
xor
add
movzbl
mov
rclb
push
mov
mov
xor
add
imul
mov
and
mov
mov
call
test
jne
mov
movzwl
add
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
movzwl
push
mov
mov
call
test
jne
movl
mov
mov
xor
lea
mov
xor
xor
xor
xor
cmp
subl
xorl
sbbl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jb
mov
add
movzwl
cmp
mov
jbe
jmp
movl
cmpl
jbe
mov
mov
orb
movl
mov
cmpl
jo
mov
neg
mov
jmp
mov
add
mov
mov
sbbb
mov
xor
xor
lea
movzwl
or
mov
xor
mov
xorl
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
andl
mov
xor
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
add
mov
test
mov
mov
adc
mov
imul
mov
jmp
mov
xor
sub
cmp
mov
mov
adc
add
movl
cmpl
ja
mov
sub
mov
addl
mov
mov
xor
add
cmp
je
addl
jmp
mov
mov
or
mov
mov
mov
xor
lea
mov
jmp
orl
mov
mov
or
mov
imul
mov
mov
xor
cmp
mov
adc
mov
add
xor
cmp
pop
pop
pop
je
mov
xor
add
mov
cmp
mov
jne
mov
or
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
push
lea
push
mov
mov
mov
push
mov
movl
mov
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
pushl
push
pushl
push
push
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
add
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
cmp
adcl
andl
subl
push
lea
push
lea
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
jae
mov
shlb
movzwl
and
mov
mov
add
mov
mov
add
xor
cmp
je
mov
cmp
jne
mov
xor
add
cmp
jb
mov
addl
mov
cmp
jae
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
orl
movzwl
mov
dec
cmp
ja
addl
mov
andl
mov
cmp
mov
sarb
xor
mov
add
imul
movzwl
mov
lea
push
mov
xor
mov
xor
add
mov
imul
mov
add
push
mov
add
pushl
mov
call
cmpl
je
mov
xor
inc
xor
mov
jmp
movl
cmpl
jb
mov
mov
mov
add
mov
mov
add
xor
mov
mov
cmp
je
mov
xor
lea
mov
mov
mov
xor
mov
add
mov
mov
imul
mov
test
mov
mov
sbb
mov
mov
mov
mov
mov
imul
orl
sbbl
xchg
dec
dec
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
pushl
call
cmpl
jb
mov
mov
mov
mov
addb
mov
xor
test
mov
mov
sbb
mov
lea
mov
movl
cmpl
jb
mov
xor
add
mov
mov
add
dec
jne
jmp
cmp
mov
adc
mov
mov
mov
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
xor
add
leave
ret
push
mov
sub
mov
mov
sub
movzbl
movzwl
sub
mov
mov
movzwl
or
mov
leave
ret
push
mov
sub
cmp
mov
movzbl
sbb
mov
mov
movzbl
or
mov
mov
add
mov
leave
ret
push
mov
sub
mov
mov
and
mov
mov
mov
and
mov
mov
mov
xor
mov
leave
ret
push
mov
sub
movzbl
mov
sub
mov
mov
mov
and
mov
mov
and
leave
ret
pop
dec
inc
xor
push
je
add
dec
xor
xor
pop
ja
dec
dec
js
xor
dec
dec
add
xor
and
and
inc
push
xor
nop
adc
xor
add
inc
add
inc
add
add
sub
add
add
inc
add
add
inc
add
jo
add
adc
mov
add
add
add
add
inc
add
add
ljmp
add
or
cld
fdivrp
sti
cli
stc
clc
push
push
push
push
dec
call
inc
add
inc
add
add
nop
jo
add
jo
add
jno
add
inc
add
jge
add
call
jne
add
jne
add
jne
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
add
add
add
add
std
std
xor
cli
push
std
hlt
sbb
icebp
cmp
into
std
dec
fsts
fcoms
idiv
ss
std
xor
cli
push
std
hlt
sbb
icebp
incb
std
into
std
dec
fldenv
fsubs
idiv
ss
std
decb
std
idiv
imul
std
dec
fnstenv
fdivs
sub
inc
aaa
push
ss
clc
xor
std
xor
stc
imul
cmp
repnz
std
icebp
flds
inc
sub
push
aaa
pusha
ss
xor
std
xor
stc
imul
incb
std
repnz
std
icebp
fsts
push
sub
pusha
aaa
jo
ja
incb
std
std
imul
idiv
outsb
std
repz
std
icebp
fldenv
bound
jno
jo
xorb
clc
incb
std
std
imul
idiv
sbb
hlt
std
repnz
fnstenv
jb
andl
xchg
clc
incb
std
std
imul
idiv
imul
iret
flds
daa
nop
aaa
mov
pop
std
std
imul
idiv
imul
std
icebp
fsts
daa
mov
clc
decb
std
std
sbb
cli
insl
std
stc
std
clc
fldenv
daa
mov
shlb
aaa
shlb
xlat
stc
cmp
std
adc
sti
decb
std
hlt
std
repnz
fld
fadd
sub
daa
shlb
loopne
out
incb
add
jno
add
jno
add
inc
add
add
jne
add
xchg
gs
add
add
add
in
pop
inc
add
fs
push
or
add
cmp
sbb
add
pop
jne
sbb
push
add
gs
push
add
inc
add
jne
push
add
add
inc
add
dec
add
add
add
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
sbb
inc
sbb
adc
add
add
add
add
imul
add
add
add
dec
add
add
add
add
jns
add
jns
add
imul
outsl
add
dec
add
inc
add
imul
add
add
add
inc
je
add
out
jmp
inc
add
out
lcall
add
out
js
inc
add
out
decl
and
push
std
incb
add
or
xchg
add
pop
add
pop
add
or
and
add
sbb
push
popa
insl
dec
insb
insb
push
imul
add
data16
std
imul
adc
stc
imul
idiv
push
std
cmc
std
hlt
fsts
fcoms
idiv
add
add
add
fs
bound
add
add
inc
add
push
add
pop
add
inc
add
push
add
push
add
add
add
popa
add
ja
jae
js
add
add
data16
add
add
jne
gs
xor
add
inc
push
imul
jne
imul
inc
imul
inc
dec
add
add
jbe
add
adc
xchg
or
add
jbe
jae
add
push
imul
inc
std
jle
incb
pop
idiv
mov
std
pop
mov
pop
sub
add
addr16
add
std
sbb
imul
std
sbb
adc
sub
sub
std
incb
add
std
sbb
adc
sub
sub
std
push
adc
std
sbb
insl
std
adc
std
decb
xor
inc
or
arpl
jae
orl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
jns
pop
xchg
xor
or
cmp
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
xchg
xchg
test
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
add
add
xor
xor
cmp
imul
and
jb
push
dec
aas
xor
xor
dec
outsb
add
push
inc
xor
xor
dec
add
and
arpl
sub
xor
and
aaa
add
fs
add
je
sub
and
push
cmp
jae
data16
xor
xor
push
sub
xor
xor
sub
xor
add
and
imul
add
inc
xor
push
xor
pop
gs
xor
add
dec
push
xor
ja
xor
pop
dec
inc
je
ja
gs
xor
jae
and
push
add
add
and
add
push
gs
push
dec
and
outsl
push
add
and
and
xor
popa
xor
xor
add
push
push
and
push
add
jae
cmp
xor
xor
outsb
xor
cmp
xor
imul
and
add
inc
cmp
aas
ja
xor
add
add
add
add
add
add
add
add
add
adc
in
cmc
add
out
aad
jne
jno
nop
push
pop
nop
nop
mov
test
or
push
sub
cmp
xlat
push
in
mov
cmpsl
jmp
stc
or
sbb
pop
push
inc
pop
outsb
fs
ds
pop
stos
pop
dec
xchg
push
mov
add
enter
xor
pop
subl
push
cmp
rclb
jmp
push
push
jne
add
pusha
fstpl
xor
xchg
xchg
pop
sbb
fldenv
push
cmp
loop
push
pusha
jmp
mov
andb
inc
xlat
jae
pop
sbb
push
icebp
out
sbbb
lods
outsl
ss
popa
xor
push
dec
lcall
dec
aam
pop
daa
das
dec
xor
and
sbbb
stos
mulb
fs
add
stc
sub
addr16
testb
add
repz
xchg
movsb
cmp
dec
lahf
push
pop
adc
push
push
or
inc
and
aas
scas
hlt
xchg
push
insl
imul
sbb
mov
rol
repnz
adc
sub
in
jecxz
leave
cmp
jmp
xor
jge
xchg
jns
dec
mov
in
mov
test
movsb
movsb
cmpsb
aam
ss
and
add
mov
int
dec
paddsb
int3
std
mov
jl
scas
stc
dec
push
rclb
int3
out
mov
inc
ficoml
mov
fwait
sub
mov
add
and
dec
iret
scas
dec
xchg
sbb
xchg
jns
mov
cmp
stos
ret
bnd
roll
pop
jmp
int
sti
ja
dec
aad
arpl
or
dec
adcl
jae
es
dec
dec
stos
sbb
outsl
add
out
pop
inc
inc
fildll
sahf
inc
mov
mov
fsubl
mov
xlat
leave
and
out
jg
pop
cs
jne
sub
sub
mov
fs
lock
add
mov
mov
outsb
cmc
pop
xor
daa
pop
in
inc
das
mov
jns
and
adc
stos
loop
push
xor
arpl
jle
push
pop
push
test
and
xchg
sbb
shll
lret
test
xchg
or
jne
xor
outsb
mov
ficompl
popa
mov
xchg
repnz
fdivl
jg
cmp
dec
xchg
fildll
push
push
lods
mov
xor
stos
push
dec
jmp
out
repz
push
xorb
pop
pop
adc
mov
add
dec
xlat
sbb
lret
mov
in
sbb
iret
and
push
out
fisttps
mov
fs
lods
and
outsl
lock
jge
aaa
mov
jae
insb
ss
test
fsubl
adc
sub
fidivrs
mov
cmp
loop
outsl
cmp
subl
inc
or
inc
outsl
enter
pusha
sarb
mov
fiaddl
roll
sub
repnz
mov
adc
ss
mov
mov
cmpsb
sbb
add
dec
pop
sub
scas
lret
aaa
mov
ret
addl
adc
fucom
xor
inc
inc
ja
mov
in
out
pusha
mov
and
mov
cmp
xchg
push
jg
mov
imul
clc
cmp
das
mov
sbb
test
jb
or
adc
je
jmp
push
aam
fbstp
scas
push
orb
xor
sub
pop
and
clc
jb
and
mov
push
jge
pop
ds
fwait
repz
out
aad
or
lret
fistl
sub
sub
sahf
push
cmp
pop
leave
data16
roll
mov
sub
inc
sub
or
jmp
jbe
pusha
push
in
int3
jo
jl
jecxz
popa
out
adc
cld
test
jb
out
cmp
addr16
push
cmpsb
push
mov
dec
ret
jg
pop
mov
fsubrl
fmul
inc
push
daa
mov
sub
pop
adc
out
test
les
cltd
and
dec
arpl
cmc
aam
loope
mov
inc
leave
pusha
jg
out
call
sbb
jae
dec
aad
sbb
sbb
cmp
mov
daa
and
adc
leave
jb
or
jb
int3
shrb
outsb
jge
inc
fdivl
pushf
inc
lret
jb
int3
ret
fbld
jg
fistpll
ss
popf
jne
in
pop
pop
lcall
pushf
mov
lret
cmp
xor
dec
dec
pop
enter
sub
sbb
add
dec
sub
jo
leave
inc
incl
fstps
pop
mov
cmc
sub
imul
fsubrl
and
and
pop
xor
out
lods
in
sbb
stc
nop
es
add
test
sbb
scas
push
cmp
cmp
sub
mov
mov
adc
add
mov
jo
dec
inc
xchg
sarb
imul
pushf
xor
inc
cli
cltd
lret
push
xor
aaa
pop
push
add
gs
mov
mov
mov
decb
enter
stos
or
dec
mov
cmp
cmp
cmp
test
and
pop
ljmp
mov
or
nop
mov
aas
or
leave
hlt
sub
cmp
cwtl
xchg
test
sub
sbb
push
mov
test
mov
shlb
scas
arpl
pop
xor
or
ljmp
into
cmp
lret
adc
adc
sbbb
inc
ret
inc
sub
nop
mov
outsb
out
or
cli
mov
ficoms
or
aam
loope
rcll
sbb
inc
xchg
movsb
loop
cs
push
add
movsb
cmp
inc
mov
push
sbb
arpl
inc
dec
out
cmp
sub
lahf
out
or
or
inc
les
sbb
mov
movsb
mov
out
mov
sub
das
sub
sbb
les
into
xlat
sub
inc
sub
test
test
mov
mov
pop
hlt
sbb
das
jle
xchg
pop
bound
or
xor
jecxz
or
dec
inc
inc
sbb
jo
inc
imul
arpl
cmpsb
push
xchg
test
inc
xor
testb
xchg
aaa
mov
mov
call
ljmp
aam
inc
mov
outsb
mov
popa
mov
mov
mov
mov
xchg
cltd
jb
mov
push
mov
or
ret
cltd
jge
xchg
je
xchg
mov
lea
ljmp
ja
xor
xor
repnz
xchg
cwtl
jmp
inc
xor
and
je,pn
pop
lock
mov
in
adc
dec
push
sub
jge
sbb
out
add
add
daa
jmp
test
mov
stc
push
outsl
gs
adc
xchg
inc
jbe
ds
sub
sbb
lcall
fnstenv
add
xchg
dec
sub
dec
jle
mov
arpl
sbb
push
dec
pushf
dec
xor
cs
inc
out
push
idivb
shlb
stos
std
xlat
xchg
out
jno
xor
jno
and
adc
jno
xchg
mov
xchg
repz
ss
sub
fwait
js
jge
or
xchg
mov
rol
jmp
out
jns
add
testl
jmp
outsl
push
or
xor
ja
lock
mov
js
lods
add
inc
stos
adc
cmpsl
push
mov
mov
test
jno
mov
jl
sub
pushf
movsl
xor
xchg
enter
cmp
int3
and
inc
outsl
add
dec
mov
aam
mov
inc
loope
jle
ds
lcall
stc
jo
movsl
add
loopne
lahf
cmp
mov
xor
or
or
loop
jl
out
cmp
mov
and
not
bnd
sbb
dec
in
lds
jns
pop
idivl
lds
orl
cmc
inc
mov
push
pop
fldcw
mov
mov
or
xor
add
dec
inc
inc
cld
bound
cmp
les
xor
dec
mov
out
in
pop
ds
repz
ljmp
jl
pop
sbb
insb
mov
adc
dec
mov
mov
test
fwait
pushf
test
pop
cmpsb
pop
sbb
xlat
pusha
lea
int
pusha
fwait
outsb
mov
sar
into
lret
inc
mov
adc
std
pop
inc
fs
jl
xchg
lcall
jle
orb
jns
cltd
jo
ljmp
mov
adc
inc
adc
mov
cmp
stc
sbb
sub
ret
jmp
xchg
scas
ljmp
cltd
out
mov
aaa
xor
mov
cmp
and
sbb
pop
jo
ss
arpl
xor
mov
mov
std
sbb
sbb
ficompl
and
andb
shll
push
imull
sbb
call
mov
push
cli
scas
cvtps2pd
pop
stos
in
mov
stos
mov
sub
push
mov
sarb
pop
add
dec
xchg
sbb
mov
stc
jb
and
xchg
or
sbb
lcall
inc
sub
mov
pop
cli
fisubrl
hlt
xlat
in
testl
sbb
insl
mov
pop
jbe
and
xchg
aaa
mov
mov
mov
dec
fsubs
cmp
mov
mov
lods
out
rcrb
mov
scas
sub
outsl
out
loope
cltd
pop
inc
adc
or
xchg
imul
jmp
adc
rorb
add
add
xchg
inc
loope
xchg
sub
test
inc
mov
inc
inc
push
or
pop
add
push
andb
xor
xchg
test
add
inc
add
mov
pop
pop
push
xor
aad
adcl
xchg
pushf
addb
pop
mov
pop
mov
mov
mov
pop
dec
lods
and
aad
adcl
sbb
mov
cmp
mov
sub
pushf
aaa
and
pop
outsb
inc
das
sti
cmp
les
add
pusha
sub
and
mov
mov
fisttpll
cwtl
cmp
andb
sub
test
jo
pop
adc
push
inc
xchg
inc
xor
fsub
push
int3
mov
mov
outsb
flds
push
dec
scas
xor
mov
add
push
stos
push
or
dec
icebp
test
xchg
ret
xor
adc
jle
lods
mov
call
out
imul
lahf
loop
ficompl
jge
sub
cld
lds
addr16
cs
add
jge
xchg
pop
cmp
aaa
filds
aaa
mov
data16
lods
loopne
xchg
pop
pop
cwtl
sub
push
stos
mov
out
dec
push
or
out
test
js
cmp
out
push
push
test
xorb
ret
das
loopne
mov
or
leave
xchg
push
ljmp
mov
out
sahf
push
inc
lds
ja
das
mov
fidivs
cmp
lahf
pop
sbb
div
insl
sbb
lock
cmp
imul
xor
insl
clc
sarb
push
cmp
jae
dec
sti
in
push
lods
add
xor
stos
jne
sub
test
dec
fidivs
sbb
movsl
test
xchg
jmp
mov
data16
scas
mov
xchg
xor
mov
bound
and
or
or
lret
sbb
loopne
or
shrl
pop
xor
inc
in
dec
lods
ret
sbb
sbb
xchg
push
in
nop
mov
test
or
xlat
push
enter
test
sti
mov
in
jmp
pushl
xchg
jle,pt
ljmp
pop
aas
js
add
fisubrl
pushf
inc
mov
outsl
out
mov
lock
daa
cmpsl
add
jmp
jp
mov
dec
hlt
repz
jle
pop
sahf
das
addr16
bound
push
mov
rcrl
cmpl
andb
fdivs
imul
mov
add
pop
xchg
test
push
lock
cmp
jl
add
and
stos
rcrl
xor
mov
inc
dec
adc
das
rorl
std
inc
iret
xor
xchg
push
push
sub
cltd
jl
std
fisubrs
out
or
jno
mov
mov
in
sbb
pop
cmp
xchg
cmp
dec
out
pop
ljmp
loope
mov
jmp
fimull
xlat
sbb
dec
aam
mov
fldcw
fnstcw
cli
xlat
or
in
sbb
push
mov
mov
dec
dec
adc
adcb
leave
cld
repz
call
xchg
adc
adc
lods
and
xchg
xchg
bound
cmp
and
pop
shr
push
adc
push
push
and
jo
cld
cli
dec
pushf
inc
xchg
jle
xor
mov
sbb
xorl
lods
cli
push
stos
cmp
fwait
mov
push
rep
ret
pop
push
sub
jo
arpl
sbb
pop
pop
xchg
adc
aaa
arpl
pop
mov
jecxz
shl
mov
fldlg2
bound
hlt
fistpll
out
add
and
lods
stos
aaa
pop
sub
lods
sub
decb
int
movsl
add
xchg
insb
jns
fadds
ss
dec
ret
push
cli
add
lock
push
shlb
push
sub
adc
ja
mov
fwait
rcll
sbb
clc
and
fnstsw
ds
mov
dec
pop
rcrb
add
mov
sub
add
mov
inc
fcoml
pop
xchg
inc
jl
xlat
jle
inc
mov
fldlg2
mov
or
stos
push
push
cmp
int3
or
movsb
dec
push
loope
xor
jae
loope
iret
loop
push
jg
repnz
out
leave
mov
std
aas
sbbb
add
rcrl
pop
aad
and
out
lods
outsl
std
mov
imul
mov
and
mov
js
loop
leave
adc
or
dec
inc
aaa
adc
push
xchg
leave
pop
jg
lret
iret
mov
mov
dec
stos
cltd
repz
push
lds
xorl
lea
mov
push
and
stos
icebp
out
fldcw
roll
mov
cmc
inc
pop
insl
and
ret
loop
mov
jg
data16
sar
mov
mov
cmpsb
sbb
mov
and
hlt
vpmulhuw
fwait
sbb
call
addr16
mov
or
repz
neg
nop
in
mov
mov
jg
jmp
iret
test
cld
cmpsb
xchg
faddl
test
adc
test
movl
mov
out
mov
pop
loopne
call
popf
and
dec
loope
xchg
cltd
repz
in
mov
mov
sbb
add
nop
jg
fsubl
into
xor
xlat
and
int
movsl
xchg
inc
rcll
xor
clc
xor
pop
fnstenv
dec
jbe
loop
sbb
ljmp
adc
push
sub
out
dec
add
mov
test
or
in
ss
mov
mov
or
lods
and
fiaddl
gs
fstps
in
fidivrl
outsl
icebp
mov
cmp
testb
mov
lock
test
cli
repnz
xor
lea
cmp
sbb
adc
sbb
mov
pop
js
out
pop
rcrb
scas
push
xor
jmp
into
jns
mov
sbb
jno
sub
mov
sbb
movsb
sub
push
es
bound
mov
les
imul
add
ja
repnz
pop
scas
shl
dec
push
or
sahf
into
ja
inc
fidivl
es
and
jb
fidivrs
insl
sbb
rorb
test
pop
cltd
push
pop
out
pop
cwtl
fisttpll
mov
in
inc
dec
idivb
sub
in
movsb
fsubs
xchg
xchg
adc
iret
ss
je
adc
or
repz
fildl
xchg
enter
xchg
pop
mov
aad
dec
out
xor
pop
xchg
jmp
leave
es
and
push
push
je
xchg
lods
icebp
cld
xor
add
test
mulb
hlt
pop
in
je
jmp
js
add
scas
mov
mov
mov
sbb
ss
push
push
loopne
inc
dec
sarl
fisttpl
mov
sub
mov
insb
cmp
adc
mov
cld
mov
adc
mov
mov
lret
mov
or
aad
xor
enter
sub
xlat
scas
insl
dec
mov
and
fnsave
add
cmp
jbe
sub
dec
sbb
ljmp
pop
mov
stos
push
mov
jp
inc
aad
or
mulb
pop
in
rolb
jo
dec
add
pop
call
push
cmpsl
mov
mov
iret
shrb
adc
stos
pop
xchg
jne
sub
aam
aaa
pop
clc
mov
pop
rcr
bound
and
fcoms
adc
cmovo
les
xchg
jno
or
pop
push
dec
xor
inc
jecxz
sbb
mov
push
lea
sbb
mov
mov
es
subb
push
scas
sub
xchg
pop
jmp
mov
test
test
mov
xchg
pop
sub
or
ret
jl
push
push
test
rorb
mov
in
inc
lahf
test
sbb
xor
jp
push
les
mov
rorb
into
mov
push
adc
add
cs
sbb
popaw
ljmp
orl
sub
mov
cmp
sar
pop
mov
js
lods
fucomip
repnz
add
sub
mov
fs
cmc
mov
inc
test
mov
ret
push
enter
sbb
rcrl
int
lcall
mov
mov
pop
xor
and
fiaddl
rcrl
aad
aas
repz
jge
or
cmpsl
mov
adc
mov
lret
inc
stos
cmp
dec
pop
inc
ja
ljmp
mov
mov
and
movsl
and
das
push
mov
int
mov
test
xchg
push
inc
inc
jle
or
loopne
out
lods
cmp
fldpi
pop
push
push
pushf
mov
cltd
adcl
ds
jo
cwtl
xchg
add
xor
mov
xchg
xchg
sbb
cmpsb
cmp
clc
and
inc
add
cmpsb
pop
pop
jp
in
popf
repz
mov
ja
fdivl
inc
mov
and
lret
or
jo
out
ljmp
lods
adc
clc
add
cmp
aad
dec
xor
iret
mov
fsts
add
les
sub
push
jmp
daa
lcall
inc
xchg
insb
loopne
xor
jmp
movhps
sbb
mov
mov
sbb
mov
fnstcw
stos
sub
sbb
enter
mov
mov
cmp
push
out
popf
lds
add
sub
xchg
sbb
push
mov
dec
stos
pusha
cmpsl
fnsave
push
out
cs
xchg
aaa
inc
mov
imul
push
rcl
mov
cltd
outsl
pusha
sbb
popf
pop
mov
add
ljmp
repz
cmc
idivl
mov
mov
andl
xor
arpl
inc
icebp
lock
push
sbb
xchg
repz
shrl
push
dec
cmp
or
test
aas
mov
js
cmp
scas
mov
rcr
sti
cli
popa
sbb
mov
ljmp
dec
mov
cmp
mov
andl
in
push
cmpsb
cwtl
lds
dec
lret
cmc
adc
lods
push
cmpsb
mov
cmp
idivb
jmp
enter
xchg
cmp
arpl
push
fxch
in
adc
mov
idivb
mov
sti
cmp
mov
aaa
inc
push
push
loope
movsl
scas
or
push
bound
lret
mov
leave
xor
pop
scas
in
and
jp
and
aam
sub
inc
pop
lcall
insb
lds
cmp
test
cltd
jg
mov
call
dec
xor
xchg
pusha
cmpsl
lods
jmp
adc
xor
mov
inc
in
xlat
imul
pop
fimull
inc
inc
loope
cmp
mov
arpl
mov
inc
pusha
mov
xchg
into
push
sub
lods
scas
outsl
int
rcrb
cmpsl
iret
inc
xor
rcrb
add
pop
mov
imul
je
jbe
loopne
mov
and
xchg
xchg
lds
and
loopne
cltd
mov
inc
or
push
mov
lahf
outsb
xrelease
orb
sbb
cltd
int
push
sub
aam
inc
adc
scas
mov
imul
pop
mov
loopne
xor
lcall
xor
movsl
ffreep
xor
mov
mov
dec
fwait
adcb
cmpsb
loope
aas
outsb
dec
cmp
adc
arpl
in
cmp
dec
push
mov
and
hlt
cli
mov
lea
ret
std
mov
inc
daa
cmp
fwait
xchg
stc
scas
repnz
mov
mov
inc
lret
push
pop
mov
movl
jge
cmp
out
andb
add
movl
nop
lahf
xchg
or
fbld
xchg
dec
std
stos
xor
sub
stos
ret
es
repz
xchg
shrb
pop
aas
xchg
movsb
mov
cwtl
movsl
inc
lock
xchg
lar
adc
adc
push
mov
pop
loope
xor
lcall
pushf
ljmp
andb
push
adc
mov
push
jp
or
into
mov
xorb
jbe
jle
jge
pop
cwtl
mov
xchg
pop
xchg
mov
popa
aad
mov
aam
sbb
add
in
sbb
dec
ljmp
inc
mov
push
mov
lods
pop
add
pop
jns
hlt
inc
adc
mov
cmp
mov
mov
jl
inc
insb
popf
ja
mov
xchg
mov
stos
lods
and
push
sbb
scas
leave
jge
cmp
cmp
push
and
movsl
fs
jp
cmp
mov
mov
add
mov
mov
adcl
adc
jae
mov
inc
fwait
xchg
inc
pop
out
xchg
mov
push
pop
out
and
cmp
jo
jmp
sbb
jbe
push
pusha
inc
add
cli
fsubp
sbb
cmp
pop
jb
cmpsl
popf
sbb
pop
mov
add
in
sbb
jg
mov
jne
inc
inc
push
adc
cltd
cwtl
mov
lods
mov
je
cmpsb
mov
or
fs
push
or
into
mov
mov
mov
xor
sub
enter
xor
movsb
lcall
dec
ds
int
inc
nop
and
insl
dec
iret
cmp
ljmp
sbb
fstpt
imul
mov
or
cmp
xchg
sbb
and
fnstsw
lock
outsb
mov
ljmp
into
lret
xchg
dec
push
adc
inc
movsb
or
or
add
lret
nop
adc
fisubrs
jno
inc
cmp
add
jb
or
sub
call
insl
fimull
lea
adc
cltd
repz
cld
mov
and
xlat
mov
fbstp
jp
cli
aas
mov
rcl
sub
add
loop
sub
push
test
xor
loop
mov
mov
dec
nop
cli
adc
push
mov
mov
insl
imul
jmp
arpl
std
pop
sbb
je
adc
sbb
push
lods
push
xchg
test
cld
das
sti
inc
inc
sbb
and
and
push
xchg
and
push
push
xchg
es
mov
pop
js
push
aas
xchg
sti
inc
cld
in
gs
xor
adcl
dec
test
imul
push
inc
ss
inc
addr16
enter
sbb
je
ficompl
daa
sbb
fxam
pop
push
in
test
push
adc
imul
lds
mov
imul
jne
shl
sub
pushf
add
inc
repz
stc
sub
dec
fs
or
insl
repnz
xor
jmp
or
mov
lahf
mov
shl
push
inc
addb
pop
xchg
mov
stos
in
push
cmp
mov
jae
hlt
bound
mov
test
inc
mov
push
xlat
xor
lds
mov
daa
jae
pop
outsb
ret
sub
nop
jne
mov
mov
mov
icebp
lds
lahf
gs
sub
cmpsl
ret
jecxz
repnz
jae
xor
dec
imulb
or
js
adc
stos
mov
das
adc
aas
mov
jmp
jbe
lret
add
test
add
jo
xchg
icebp
dec
add
mov
out
adc
test
je
hlt
loop
pop
adc
mov
in
test
adc
lds
sbb
mov
push
bound
cmp
pop
mov
negb
cmp
inc
fsubr
iret
dec
jecxz
aaa
push
scas
repnz
stos
movsb
int3
inc
cld
mov
out
jmp
imul
das
fidivrs
fnsave
jns
adc
mov
jg
or
dec
test
mov
imul
add
adc
cwtl
shrb
sub
mov
xchg
push
cmp
outsl
int3
mov
lods
push
sbb
sbb
clc
jnp
inc
stc
mov
or
or
dec
cli
adcl
xorl
adc
and
jns
pop
outsl
mov
insl
loop
in
fnsave
shrb
inc
jge
mov
or
sbb
lcall
scas
aam
jmp
jg
push
inc
scas
mov
mov
fneni(8087
fisubrs
lcall
lcall
in
push
push
mov
fists
mov
outsb
fdivrl
stos
insb
aaa
loopne
dec
add
lods
fcomps
pop
cmp
inc
sub
cmp
pop
mov
fcoml
aas
repnz
pop
incl
mov
jecxz
sbb
lahf
push
mov
sub
cld
add
xchg
push
lcall
lahf
cmp
out
enter
xor
stc
ds
fldcw
inc
mov
fisubl
shrl
add
inc
das
xchg
or
lods
mov
and
std
mov
pop
adc
cmpsb
push
sub
pop
stc
fnsave
jnp
jp
cmpsb
jl
stos
cmp
flds
xchg
aas
shrl
push
mov
andl
outsl
jo
icebp
test
xor
mov
or
adc
cld
shlb
inc
rcrb
gs
adc
fwait
cmp
mov
dec
test
jae
and
lods
jae
stos
inc
cmp
pop
mov
data16
outsl
jl
inc
test
xchg
and
xchg
out
jo
add
sub
sar
dec
mov
in
xchg
jl
jg
pop
inc
ja
mov
lods
rolb
stc
lods
push
lret
mov
aaa
in
adc
jg
nop
fadds
subb
push
sahf
jecxz
xor
mov
es
sbb
jp
add
jae
ret
jns
fs
push
mov
add
jne
fcoml
mov
jge
xor
inc
cs
xorb
xor
je
enter
sub
jg
cltd
cmpsb
add
cmp
test
mov
xchg
jae
cltd
push
mov
clc
xchg
sub
fldt
sub
into
jle,pn
push
movsb
call
std
xchg
xor
mov
inc
mov
jo
stos
loop
cmp
iret
push
lahf
and
mov
stc
adc
lock
mov
pop
inc
mul
xor
push
mov
movsb
jne
xchg
pop
push
and
mov
dec
mov
mov
arpl
cmpsl
out
call
push
add
mov
and
pop
cmovl
imul
fiaddl
dec
popf
fidivrl
in
daa
aam
rorb
outsb
movsb
jge
cmp
mov
aad
jecxz
test
jbe
push
leave
inc
adc
daa
jns
ss
in
xchg
xor
outsl
aaa
faddp
outsl
les
or
lret
inc
les
nop
lods
addl
stos
inc
cmp
rcrb
add
add
sbb
in
loop
or
dec
movsb
pop
sbbl
adc
sarb
cmpsl
mov
fidivl
pop
cmp
mov
mov
loopne
es
cwtl
add
pop
lret
mov
mov
cmp
push
push
add
test
mov
push
and
loop
mov
lock
hlt
lcall
xor
in
div
xchg
push
subb
xor
hlt
or
cmpsb
jne
push
aad
popf
int
add
rclb
ljmp
or
jo
and
xchg
xor
push
or
dec
dec
outsl
mov
rcrl
pop
push
pop
mov
inc
dec
sbb
mov
test
inc
xor
xchg
je
inc
in
pop
clc
lret
lds
dec
stos
int
pop
push
adc
stos
enter
mov
dec
in
leave
wrmsr
addr16
fs
aaa
mov
int
sti
lret
outsl
lcall
pop
fwait
out
popa
les
pop
sahf
fistpl
mov
mov
addr16
aad
add
dec
addr16
orb
int
divl
xor
jg
ficoml
lock
xchg
addr16
jbe
lock
sbb
cmp
xor
les
jl
icebp
in
mov
jle
dec
imul
mov
call
cmp
mov
cwtl
repnz
loopne
xchg
jp
hlt
xchg
dec
add
gs
push
cmpsl
dec
outsl
cmp
pop
shrb
fwait
dec
ret
inc
mov
sub
aaa
inc
adc
sub
inc
fistps
rcrl
movsl
out
adc
in
jmp
xor
mov
xlat
stos
pushf
mov
fsub
popa
xor
sbb
popa
sahf
je
jp
push
xchg
cmp
mull
rcrb
jno
mov
push
out
call
pop
cmc
xorl
or
cmp
pushf
gs
mov
mov
add
int3
clc
jnp
mov
push
or
push
dec
add
push
push
jo
imul
cmp
stc
addl
mov
or
push
sub
pushf
jl
add
mov
jmp
popf
cltd
jnp
or
in
mov
sbb
pop
sbb
imulb
lods
jnp
and
xchg
sub
das
pop
xchg
popf
jp
sbb
mov
inc
add
test
mov
out
testb
cmp
xchg
mov
xchg
add
mov
fnstsw
add
popa
es
mov
pavgw
or
loopne
testl
ss
push
and
out
or
int3
pusha
mov
sub
loope
fiadds
jg
jbe
das
pushf
jecxz
push
sub
mov
sub
popa
loop
insb
dec
pavgw
leave
xor
repz
clc
mov
mov
or
cmp
test
jg
push
nop
rol
push
iret
lahf
mov
jp
js
ds
jmp
push
gs
hlt
in
mov
jmp
imul
sti
xor
int3
frstor
xchg
cmp
cld
aaa
stos
movsl
lahf
cs
push
pushf
pop
ret
jmp
in
push
orb
jns
dec
add
xchg
gs
xor
aaa
dec
jns
or
adc
sbb
mov
arpl
cli
pop
icebp
arpl
push
jns
ljmp
stos
stos
adc
mov
xchg
lret
jl
xchg
add
pushf
aam
xchg
inc
xlat
lock
push
fneni(8087
addr16
jns
inc
aas
dec
aad
out
inc
push
xchg
ficomps
add
inc
dec
insl
sbb
inc
adc
cmc
call
inc
cmpsl
mov
pop
test
cs
sub
fcmovbe
icebp
arpl
mov
pop
daa
push
out
int
lea
int3
ret
inc
adc
mull
mov
sahf
push
adc
outsb
adc
pop
nop
shll
inc
jle
les
xchg
sbb
loopne
inc
add
frstor
iret
aaa
xchg
sbb
insl
stos
and
push
push
push
adc
mov
mov
popf
mov
jecxz
inc
xchg
adc
subb
add
ljmp
daa
push
jns
pop
push
imul
repnz
out
outsl
jne
popl
insl
pushf
icebp
ja
pop
into
push
jnp
into
insb
push
or
mov
mov
inc
sbb
push
dec
pop
cld
dec
insl
add
arpl
mov
sti
sbb
test
stc
jge
jns
or
mov
insb
dec
inc
inc
and
out
repnz
push
sahf
mov
add
sub
sbb
ja
or
mov
out
adc
push
int3
insb
popa
push
dec
pop
pop
lret
arpl
push
and
addb
ljmp
cmp
xchg
cmpb
sbb
mov
test
stos
inc
sub
fcomp
rcll
add
pop
push
xor
shrb
cltd
popf
negb
mov
dec
nop
pushf
bound
cwtl
sbb
hlt
sbb
cmp
xlat
jnp
lea
push
aaa
andl
xchg
dec
and
or
adc
mov
cs
fcoms
mov
in
iret
adc
sahf
test
mov
cwtl
jle
cmc
cli
dec
inc
mov
mov
mov
xchg
adc
ss
in
push
andw
sahf
arpl
loop
shll
mov
xor
iret
cmpsl
sub
mov
cmp
or
or
ret
ret
add
sbb
mov
push
repz
dec
loopne
in
call
push
or
xorl
add
in
sub
xor
jg
sub
mov
jns
mov
inc
cmc
push
or
insl
mov
mov
or
mov
leave
clc
loop
sub
test
notl
mov
xchg
jecxz
fucomip
dec
sub
xor
inc
sti
adc
pop
jo
sbb
jl
xor
mov
xor
jmp
mov
mov
push
andl
in
xchg
iret
sub
inc
les
inc
cli
lds
or
xchg
xor
fnstsw
xlat
jmp
iret
push
stc
xor
leave
cmpsl
outsl
mov
sti
out
outsb
popa
loope
jl
in
pop
jp
testl
mov
mov
je
pop
jmp
jle
jb
aad
sbb
lods
out
sahf
jnp
jmp
lcall
or
mov
sub
or
jo
jb
mov
roll
push
inc
call
decl
into
pop
xchg
shlb
orb
aaa
pop
iret
add
popa
mov
hlt
jns
mov
cmpsl
bound
ror
and
mov
fnstenv
cmp
jmp
mov
int
test
sbb
jno
sbb
mov
in
jnp
notb
pop
fwait
lods
sbb
dec
arpl
movb
xchg
jae
or
in
or
lea
roll
sub
xchg
loop
and
xor
cmp
push
add
jno
lds
testb
mov
pop
xor
outsl
or
gs
mov
in
dec
cmp
cmpsb
repz
or
mov
fimuls
icebp
mov
out
out
ret
mov
sti
ss
jo
imul
adc
stos
mov
stos
jne
xchg
jo
push
or
jge
rcrb
leave
add
jo
rep
flds
sbb
loopne
inc
adc
das
dec
push
cwtl
test
test
subl
orl
aam
ret
mov
add
aas
xor
xchg
les
mov
dec
cmp
adc
fsubp
lock
xor
sahf
in
sub
shlb
mov
mov
mov
enter
mov
mov
orb
mov
into
sub
jecxz
stos
xchg
nop
xor
rclb
xor
or
push
mov
mull
pushf
pop
jg
pop
out
pop
jnp
lcall
lahf
lcall
popa
jae
push
push
test
subl
mov
mov
ljmp
jl
push
mov
repnz
and
jmp
fmuls
push
stos
dec
ss
mov
mov
addl
fmuls
inc
in
gs
pop
sahf
dec
mov
lcall
rcrl
pop
ja
pop
mov
cmp
call
test
scas
xchg
aam
negb
adc
hlt
inc
push
vmovaps
mov
fs
out
cmpsb
mov
jo
dec
in
mov
fmull
mov
lods
mov
adc
pop
or
push
xchg
xor
or
dec
push
lods
pop
jmp
ret
push
mov
addr16
push
inc
jno
mov
cwtl
push
js
enter
test
stc
jo
push
repz
adc
bound
pushf
add
mov
pop
push
lods
in
jne
stos
sbb
dec
or
add
push
lret
faddp
int
repz
stc
aad
in
cmpsb
cmp
and
lods
int3
push
cmpsl
test
inc
push
insl
push
mov
leave
sbb
ja
in
push
jg,pn
loopne
fcompl
xchg
pop
dec
sbb
cwtl
test
sub
in
ja
adc
cmp
sub
sbb
test
push
sub
cltd
mov
ss
lret
adc
xor
daa
movsb
in
repz
int3
sar
cli
loopne
repnz
pop
fists
loop
jae
mov
ret
jno
jnp
stos
mov
pop
add
jne
jae
pop
jecxz
mov
mov
jle
pop
mov
mov
push
mov
bound
xlat
mov
push
ljmp
out
lahf
and
lcall
mov
jmp
int
sub
push
cwtl
stos
push
push
sub
sub
shll
das
mov
arpl
dec
insl
pop
fidivs
push
shll
sub
push
pop
pushf
nop
mov
cltd
sarl
xor
dec
stos
jb
pushf
push
pop
sub
iret
sub
dec
xchg
ret
pop
std
daa
mov
fisubs
jo
cmp
xchg
dec
repnz
jb
shll
mov
mov
mov
sbb
and
sbb
push
shrl
and
mov
or
mov
testb
jb
xor
das
inc
arpl
negb
pop
dec
lods
adc
pop
pop
sahf
imul
mov
pop
cmp
shrl
lahf
pusha
and
jbe
mov
mov
leave
rcrb
push
std
inc
dec
fisttpl
dec
call
jmp
push
sub
mov
frstor
sbb
loop
int
inc
or
xchg
leave
rorl
dec
sbb
mov
dec
das
xchg
or
lds
inc
std
fiaddl
je
iret
int3
lcall
jne
insb
jae
sarb
add
incb
sub
pop
repnz
daa
sbb
leave
sub
pop
in
jmp
mov
mov
fucomp
in
stos
and
xor
in
mov
rorb
into
leave
popa
arpl
rcl
es
add
adc
outsb
addl
sbb
jmp
mov
sarl
sbb
mov
movsl
push
mov
xchg
push
adc
notl
sub
jns
popf
lea
fwait
and
jmp
inc
sarl
xchg
andb
ret
or
and
cmp
and
cli
jmp
rclb
iret
push
sbb
add
or
or
icebp
jp
sub
pop
and
xor
sbb
xchg
in
shrl
pop
cmp
stc
ds
rcrb
ss
sti
fldl
mov
dec
xchg
mov
xchg
sbb
cmpsb
negl
ds
fimull
nop
dec
lock
dec
or
cmpsl
popa
outsl
rorb
dec
mov
aad
cmp
lea
add
push
imulb
sbb
jne
sbb
inc
push
dec
add
push
mov
test
cld
lds
or
ss
jecxz
test
push
mov
cmc
xchg
mov
cld
xor
fisubrl
sub
popf
dec
push
fbstp
addr16
aad
add
jl
inc
push
dec
xlat
pusha
loopne
and
jmp
into
es
mov
fldl
cli
roll
outsl
int
adc
in
mov
lock
out
subb
test
cmp
mov
add
clc
cmp
fisubs
cld
shrl
mov
mov
adc
lds
repz
mov
mov
daa
int
popf
seto
lret
or
pop
shlb
sub
std
cmp
jle
aam
shrb
push
dec
mov
in
pop
xor
inc
ret
mov
lds
mov
jns
cmp
int
inc
sbb
adc
cwtl
int
out
adc
das
int
xchg
movsb
daa
pop
lret
loope
clc
sub
mov
inc
repnz
leave
mov
fwait
test
fsts
add
or
inc
pop
inc
lahf
push
jg
dec
adc
stos
add
gs
pop
cmp
gs
sub
fadds
dec
and
popf
lcall
popf
xorb
jns
imul
xor
sub
pop
in
sub
pusha
mov
sbb
push
das
mov
mov
sbbb
cmp
lea
or
les
push
cwtl
repz
mov
jl
ja
and
insl
rcl
xor
mov
pop
lods
pop
and
cmp
test
and
mov
arpl
out
inc
mov
icebp
inc
mov
cmp
daa
dec
or
aad
pop
addb
aas
into
jl
lds
mov
repnz
daa
or
lahf
ljmp
call
or
and
lret
incb
jmp
adcl
inc
xor
out
ret
or
sarl
aam
gs
jb
imulb
sub
sub
pop
pop
mov
adc
pusha
out
fbstp
js
push
cmpsl
scas
dec
jae
mov
push
mov
insl
add
pop
test
inc
adc
dec
mov
fdivrs
xor
scas
testl
pushf
ss
mov
filds
cmp
aas
popf
xor
arpl
mull
or
cs
out
pusha
lods
rcll
ret
sti
das
fwait
pop
pusha
sbb
ret
imul
or
pop
cmpsl
sti
js
jbe
or
adc
mov
std
xchg
mov
fimull
mov
inc
decl
movsl
test
mov
push
lds
sbb
jg
jl
or
push
xchg
and
shll
mov
and
nop
fwait
mov
mov
xchg
xor
in
stos
push
inc
mov
sti
aad
int
xor
in
inc
mov
inc
sbb
outsb
xor
lret
mov
out
xchg
in
leave
cmpsl
jo
cltd
jge
iret
cmp
fists
mov
sub
xchg
adc
xor
stc
mov
or
and
hlt
add
sbb
jno
addr16
fisttps
ret
dec
stos
mov
fs
xchg
xchg
arpl
add
mov
mov
push
jns
into
sbb
dec
mov
push
push
sbb
into
das
adc
aas
scas
dec
inc
mov
leave
jnp
or
lcall
inc
jmp
repnz
mov
mov
sbb
mov
xchg
fists
sbb
fiaddl
pop
xor
das
sub
dec
push
out
loopne
mov
enter
shl
cmp
push
sbb
jl
in
push
leave
fs
push
ds
jge
inc
cmpsl
hlt
sbbl
ljmp
leave
inc
std
sub
or
xlat
adc
push
add
sti
adc
in
mov
je
cmp
pop
and
and
mov
and
push
mov
mov
or
mov
sbb
xchg
lock
mov
mov
xlat
and
loope
pushf
scas
ja
inc
cmpsl
mov
xchg
xor
and
inc
or
gs
mov
addr16
mov
idivl
pop
leave
enter
xchg
outsb
shr
int
adc
aam
inc
jne
dec
out
fcmovnbe
inc
xchg
xchg
das
movsb
xor
ret
addb
mov
cmp
out
shll
mov
mov
or
mov
out
aaa
mov
mov
push
cmp
xor
sahf
mov
lods
rorb
push
stos
idivl
inc
xor
fcmovnbe
push
movsl
imul
jb
test
and
add
add
add
add
add
add
add
add
xchg
adc
cmp
std
cld
sti
das
or
push
add
nop
nop
sub
pop
cltd
in
mov
xchg
jmp
xchg
pop
push
and
lret
jnp
cs
das
int3
or
mov
jbe
mov
test
es
xor
movsb
mov
fistps
mov
nop
lea
ret
out
in
daa
mov
shrb
sub
jp
pop
or
cmp
addr16
jge
ljmp
xchg
sti
mov
inc
sub
decl
push
subl
call
mov
inc
lods
bound
ljmp
cmp
inc
int3
pushf
shrb
fsubl
out
dec
push
jge,pt
bound
xor
sub
movsl
dec
and
movsb
pop
adc
jne
es
mov
push
fsubrs
cmp
aas
enter
cmc
hlt
push
cmp
push
sbb
cmc
mov
sbb
dec
leave
in
push
hlt
aaa
cltd
cmp
fistl
dec
xlat
fdivs
cvtps2pi
inc
mov
xor
mov
adc
mov
add
xchg
push
mov
adc
and
loope
test
xchg
fsubp
cmp
cmp
popa
je
dec
arpl
cltd
or
je,pt
pop
mov
xchg
stos
mov
in
mov
subl
add
scas
pop
ret
popf
and
leavew
mov
jg
or
pop
pop
dec
in
adcl
icebp
xchg
les
leave
push
fstp
lea
fidivl
xchg
lahf
sti
fnstenv
push
push
addr16
sub
lods
mov
and
dec
int3
mov
sbb
cmp
adc
jp
fldt
push
lret
pop
pop
sbb
rorb
mov
int
iret
xor
mov
sub
mov
movsl
sbb
nop
cmpsl
mov
jns
pop
test
adc
push
or
xor
xchg
stc
pop
dec
pop
lret
js
das
pop
aam
cli
pop
adc
sbb
cmp
add
mov
sub
dec
inc
movsl
cmpsb
xor
jae
sbb
inc
divb
out
mov
add
stos
ss
xor
jae
inc
lret
xchg
stos
jo
ljmp
add
cld
jmp
xchg
js
cmp
addr16
xorl
je
mov
push
pushw
les
push
dec
jno
faddl
dec
pop
mov
add
push
enter
or
scas
adc
call
sub
into
inc
dec
addr16
leave
lods
ds
jns
jbe
adc
enter
lcall
and
sub
mov
mov
idiv
out
dec
inc
notb
push
or
aas
push
out
inc
push
adc
and
push
fnstcw
dec
mov
adc
xor
popa
cltd
stos
out
shrl
je
cmp
pop
stos
push
sub
inc
arpl
pusha
jnp
in
aam
mov
shrb
mov
lds
jae
data16
jo
adc
push
aas
sub
js
hlt
push
xchg
aad
imul
andl
jp
add
in
dec
jns
cwtl
cmp
jns
jl
sub
mov
popa
aad
adc
ljmp
pop
mov
mov
in
sub
dec
adc
mov
add
je
outsl
mov
nop
sar
xchg
lret
cmp
stc
dec
pop
mov
fcomp
insl
arpl
mov
xor
sbb
xor
leave
out
or
into
out
push
jbe
mov
xchg
mov
loopne
jmp
inc
pushf
xchg
sbb
js
es
ss
xchg
repnz
cld
push
pusha
xchg
test
mov
and
sbb
and
jmp
pushf
popl
dec
setnp
pop
bound
std
jle
test
mov
push
xor
std
fldl
xchg
jnp
fsubrs
or
pop
lock
rcll
xor
pusha
adc
int3
les
jp
je
mov
clc
sbb
sbb
arpl
or
jge
adc
sahf
add
xchg
adc
sti
outsl
in
sub
sahf
dec
bound
jnp
idivl
cli
xor
test
xor
xchg
das
ljmp
fwait
sahf
jb
shll
std
loope
sti
mov
dec
inc
shrb
outsl
cmp
inc
sbb
les
adc
scas
scas
enter
or
adc
jmp
lock
cli
jmp
jnp
in
test
push
ss
mov
jne
adc
add
add
pop
out
push
cmp
dec
dec
fsubrs
jle
loop
mov
jge
mov
movsl
insb
add
cli
imul
sbb
jo
adc
fstps
lds
leave
roll
jae
inc
push
pusha
mov
inc
adc
rcrl
push
cmpl
fstpl
sub
mov
push
int3
jecxz
lret
xchg
sbb
jg
jmp
sbb
jb
dec
push
aam
sbb
sbb
xor
pop
stc
and
adc
insl
bound
inc
and
mov
sub
cli
sub
lock
cli
pusha
sbb
xchg
pop
add
jno
dec
xchg
adc
fdivl
push
push
cli
addl
adc
mov
jecxz
ja
xor
cld
push
push
test
or
adc
cmp
push
or
or
bound
ret
mov
jo
nop
mov
and
or
movb
sahf
pop
cli
pop
inc
dec
mov
imul
cmpb
jle
stos
jno
cmp
mov
sub
stos
dec
jbe
xchg
addb
xor
pop
enter
add
fwait
roll
in
testl
dec
adcl
mov
popf
repnz
pop
pop
cmpsl
jmp
mov
mov
mov
mov
movsb
dec
fcmove
sub
add
rol
jae
pop
mov
rcrl
push
push
mov
imul
ss
addr16
push
xor
pop
test
push
gs
adc
pusha
pop
leave
and
fisubs
fsubs
jno
pop
push
popf
push
xlat
pushf
aas
mov
cmc
pop
mov
and
test
lret
cmpsl
test
fsubrl
arpl
movsb
sti
dec
cmp
repz
pop
loopne
test
mov
jecxz
ds
push
fprem
adc
push
ds
push
mov
jne
repnz
movsb
mov
popa
sbb
push
sbb
or
movsb
in
xchg
stos
jae
stos
dec
test
nop
adcb
mov
push
add
cld
cld
out
add
sbbl
pop
fcompl
icebp
loopne
jbe
jecxz
push
fsubrs
hlt
xor
js
cmp
das
inc
cmp
out
xor
push
and
sub
jne
sbb
insb
lcall
addl
outsb
sub
sbb
sub
sti
pop
xor
not
ds
sti
mov
rcl
push
testb
daa
ret
cmp
dec
push
rcr
pop
push
daa
mov
insl
stos
ret
jb
in
stc
cwtl
adc
in
repnz
mulb
jmp
and
fbstp
movsl
mov
out
and
dec
and
mov
aam
pop
adc
xlat
ret
ret
fiadds
fwait
mov
fbstp
jmp
testl
inc
aaa
lds
mov
daa
mov
mov
jns
and
xor
pusha
xor
outsb
inc
or
fidivrs
shlb
call
aaa
subl
mov
mov
push
je
fsts
mov
pop
or
sbb
push
cmpl
repz
and
clc
xor
cmc
and
fs
jl
cltd
cld
pop
out
push
lahf
or
mov
jb,pn
mov
pop
mov
sbb
popf
pop
xor
outsl
add
lret
fsub
je
aam
std
inc
cld
or
dec
mov
insl
ljmp
nop
xor
inc
jo
sbb
mov
fcmovnbe
sbb
dec
jbe
adc
lea
sti
sahf
mov
fdivr
scas
xor
decb
adc
fnsave
inc
jle
je
sbb
nop
jns
xchg
repz
mov
lahf
add
and
not
ljmp
jmp
hlt
ret
clc
cwtl
jp
pop
in
pop
sub
in
cmp
es
js
clc
test
arpl
add
jae
cmp
add
repz
pop
stos
and
mov
jecxz
sahf
inc
les
test
cwtl
sbb
aas
push
mov
iret
or
es
fistl
ja,pn
sbb
cs
je
push
mov
mov
cmp
xor
sbb
mov
sub
xchg
cmp
test
cmp
test
mov
std
pop
movsb
mov
dec
pop
nop
push
adc
or
xchg
dec
pop
add
lahf
jnp
pop
int
jae
push
movsb
inc
jl
imul
stos
pop
rcrl
pop
or
push
out
addr16
inc
cmpsb
jns
jecxz
lea
lea
mov
out
jb
movsb
cltd
call
sbb
shr
sbbb
popa
cwtl
inc
pop
push
pop
inc
out
or
out
outsl
roll
inc
or
mov
popf
nop
push
inc
push
add
daa
lret
ficompl
or
xchg
pop
call
jmp
das
vpsraw
dec
cmp
stos
mov
hlt
dec
in
add
xchg
and
ljmp
mov
stos
and
xchg
jne
hlt
mov
and
mov
into
xor
mov
jne
aas
mov
repnz
xor
jnp
mov
scas
pop
xchg
dec
push
pop
mov
push
fucom
shrl
mov
je
ja
std
fwait
lock
addl
adcl
xchg
sub
movsb
adc
mov
or
insb
rorb
imul
lret
les
mov
fcomip
das
push
xchg
cld
imul
mov
lods
mov
mov
sbb
lds
int
lds
in
je
les
pushf
loop
adc
cmp
mov
pop
jmp
cmpsb
stos
xlat
outsb
fidivl
xchg
imul
lret
lock
cmp
mov
sbb
outsl
or
lea
xchg
scas
dec
mov
xchg
into
mov
xchg
outsb
lcall
xlat
mov
mov
call
faddl
out
or
cmp
mov
inc
sub
pop
cmc
mov
sub
sub
lea
std
shll
shll
push
jmp
dec
pop
iret
stos
mov
dec
test
push
sbb
cmc
fisttpl
mov
jle
mov
sbb
push
lret
dec
dec
dec
add
jl
push
orl
out
cmpsl
jle
pusha
adc
out
icebp
cmc
jl
aam
pop
or
or
add
pushf
aaa
scas
xchg
cltd
jl
mov
repnz
mov
pop
shlb
gs
mov
cmp
gs
jne
fsubrs
push
mov
adc
cmp
dec
shlb
push
int
jns
loopne
or
lret
outsl
hlt
push
int
test
dec
in
push
pop
or
cmp
mov
sub
adc
int3
and
stos
in
vsubss
mov
aam
inc
xor
push
clc
out
push
movsl
push
push
in
loope
outsl
add
sub
xor
add
lock
xchg
xor
and
icebp
in
cmpsl
xchg
int
in
sub
mov
xor
sbb
iret
mov
cmp
notl
cs
xchg
fsubp
mov
ss
daa
and
sub
jo
roll
fidivrs
push
pop
test
pop
and
loope
or
ja
cmpsb
jo
pop
mov
jmp
mov
sti
rcrl
je
jge
sbb
fadd
scas
xor
mov
dec
dec
fidivrl
lea
cmp
fbld
lcall
jb
ljmp
push
pop
jp
repz
add
and
in
and
push
xchg
xchg
sbb
dec
jb
cmp
add
pop
xchg
sahf
pushf
mov
hlt
add
sarl
xchg
push
lcall
sub
push
mov
in
dec
cmc
inc
out
imul
pop
inc
in
xor
sbb
div
testl
in
repz
lock
pop
jae
inc
lahf
icebp
rcll
cmp
shr
mov
mov
jnp
repz
pushf
push
mov
add
mov
ret
push
add
jbe
cmpsb
push
push
jge
outsl
adc
adc
cmc
pusha
fdivr
push
ljmp
dec
or
pop
lock
gs
subb
pop
dec
jp
or
inc
inc
neg
inc
and
subb
int3
and
pop
repz
rcl
rcl
adc
or
stc
push
adcb
int3
jno
sbb
imull
sbb
dec
gs
jp
cli
jo
sub
jae
ficompl
mov
lahf
jno
in
inc
iret
scas
leave
sbb
jl
sahf
cmp
fsubrp
ljmp
adc
nop
std
xchg
pop
out
push
fsub
sbb
pop
mov
mov
add
pop
cmc
or
stos
fldt
inc
out
and
add
add
in
loopne
out
mov
jbe
push
out
cmp
jae
repz
adc
push
mov
ja
push
scas
or
in
pop
cltd
pop
push
add
push
fmull
int
add
add
jns
cmpsl
jo
or
dec
scas
xchg
shr
mov
or
lods
xlat
fucompp
mov
outsb
sbb
loopne
push
andl
aad
jns
mov
in
aaa
xor
pop
mov
cmp
mov
sbb
mov
push
sub
bnd
sbb
jle
pusha
push
cwtl
imul
cwtl
mov
jns
call
xor
add
xor
fsubr
inc
rorb
mov
test
push
fdivs
dec
or
sub
jnp
mov
jns
and
fwait
or
sub
js
pop
cmp
test
mov
ret
imul
into
adc
movsb
mov
sbbl
jbe
jnp
jl
sbb
lahf
xor
inc
sub
cmp
std
rcl
dec
cld
subl
in
cmp
mulb
ss
inc
leave
xchg
jmp
stos
mov
inc
pop
pop
inc
ds
and
jmp
adc
pushf
aam
stos
inc
gs
fcomp
imul
dec
mov
sub
imull
jns
call
sti
mov
aam
cmc
mov
dec
es
jb
jb
ja
sbb
out
pop
clc
add
jns
test
inc
ret
sbb
dec
outsb
push
jmp
mov
cmpsb
push
test
cmp
aas
jae
jmp
rcr
pusha
lock
mov
xchg
lahf
cmp
adc
sbb
cmp
lods
into
cwtl
or
repz
les
sarb
mulb
add
jne
into
in
push
sub
sti
xor
push
movsl
mov
sub
roll
ret
mov
xlat
sti
clc
out
fucomp
jno
pop
adc
test
xchg
dec
mov
out
mov
jo
cmp
jbe
cmc
mov
sub
ds
div
subb
push
cmp
gs
xor
push
dec
xchg
stos
mov
pushf
push
sub
aaa
lcall
lret
sbb
sub
inc
shl
jp
cmc
dec
push
cmp
into
pusha
sbb
or
aam
mov
cs
sbbl
adc
xorb
jge
in
fwait
fs
mov
adc
and
or
in
mov
sti
testl
ja
mov
aaa
lods
arpl
jg
fsubrl
lock
mov
dec
xlat
adc
xchg
pusha
stos
dec
and
or
aas
cmpsb
frstor
pop
sbb
xchg
cld
sbb
fadd
mov
push
fisubl
cmpl
add
js
adc
mov
jb
push
dec
dec
mov
shlb
dec
cmp
cmc
ficompl
cmp
jbe
inc
in
pop
mov
aaa
add
or
sub
aad
mov
outsb
cltd
test
sbb
fmulp
sti
adc
loop
rcrb
shlb
jp
in
mull
add
ret
sbb
inc
jno
mov
mov
iret
sbb
xor
mov
push
fidivrs
pusha
clc
movsl
shrl
sar
or
adcb
fs
xor
xchg
cmpsl
arpl
xchg
xchg
cmp
pushf
testl
mov
addr16
push
sbbl
jne
je
addr16
lock
shrl
stc
cwtl
jbe
add
xchg
cmp
lret
mov
js
adc
in
fmull
out
push
jne
pop
inc
pushf
imul
pop
in
cmpsb
test
fnsave
or
mov
lret
or
push
push
in
movsl
xbegin
enter
xchg
jno
je
popa
popa
add
sub
inc
daa
cltd
js
sarb
jo
push
jg
insb
xor
add
hlt
mov
xor
adc
xchg
dec
mov
ret
leave
shll
jb
ror
xchg
sub
and
incl
push
cmp
jl
cmc
cltd
outsl
xchg
add
into
push
add
ljmp
jl
icebp
add
push
xor
shl
or
jl
jns
les
popf
adc
jle
mov
addl
std
mov
int3
xor
mov
sub
mov
mov
mov
movsb
cmpsl
andl
dec
adc
cmp
mov
dec
fwait
sub
call
repz
mov
cmp
in
pop
setle
pop
mov
data16
dec
shl
roll
mov
or
shll
push
push
cmpsl
leave
cltd
jne
or
insl
out
add
outsb
test
rolb
push
call
mov
hlt
jp
mov
roll
and
in
sbb
adc
call
fisubrl
mov
ss
mov
sahf
xchg
jecxz
jle
jl
mov
ud1
sahf
jmp
jo
sub
lcall
out
cltd
mov
arpl
out
fimuls
stos
dec
and
in
pop
or
add
div
adc
xlat
ja
dec
inc
sub
push
add
adc
push
ss
inc
cmp
mov
imulb
lods
int
fidivs
mov
dec
mov
mov
xchg
clc
dec
jae
test
dec
add
enter
out
pop
testl
jge
call
out
outsb
xor
push
sbb
nop
mov
int
lods
ds
pop
jl
outsl
cmc
fnsave
pop
xchg
js
fsub
js
addr16
in
gs
add
fistl
jl
insb
jp
sbb
loop
add
shlb
clc
into
popa
mov
cmp
adc
les
push
mov
dec
mov
push
add
pop
xchg
imul
dec
aam
in
pop
push
mov
lea
xor
test
mov
mov
inc
adc
daa
stc
dec
adc
mov
push
call
loop
jl
sub
movsl
test
stos
add
out
lock
loopne
shl
and
xchg
mov
mov
adc
pop
andl
adc
jo
jbe
sbb
mov
loopne
jl
daa
test
ljmp
lret
mov
dec
cltd
jnp
pop
arpl
dec
or
lcall
add
lock
xchg
repz
adc
dec
add
loopne
push
subb
sbb
cli
inc
cld
jnp
push
xchg
sbb
das
fbld
push
cli
arpl
enter
sub
imul
or
ja
insb
and
fimuls
mov
dec
mov
cmp
adc
xchg
xor
pop
lods
fadd
jno
test
dec
mov
inc
inc
pushf
inc
into
mov
ja
push
mov
test
shrl
pop
aad
fidivrs
clc
mov
sbb
and
movsb
inc
call
lret
jl
push
mul
cwtl
xchg
adc
dec
dec
adc
ss
test
xchg
and
or
cmp
imul
imulb
icebp
sti
or
fidivrs
push
into
rorb
xor
jp
cmp
outsl
and
popf
add
popa
dec
push
sahf
in
and
cmc
mov
push
push
adc
mov
jb
pop
xchg
lret
arpl
jns
sub
pop
scas
pop
inc
xor
or
xchg
int3
pusha
in
les
mov
xchg
popf
push
mov
mov
pop
sub
fmuls
lds
jnp
arpl
add
dec
inc
imul
es
adc
lds
xor
orl
mov
jmp
inc
sbb
in
jnp
movsb
dec
pop
out
loopne
das
xchg
jo
outsb
std
sbb
mov
dec
jecxz
add
je
sub
push
jle
std
roll
inc
icebp
bound
enter
adc
jle
sahf
test
sbbb
cmpsl
lcall
ljmp
xchg
cwtl
outsb
jmp
inc
push
mov
cmp
mov
pop
xor
rcrb
xchg
add
cmp
cmpsl
jle
add
jle
shl
inc
jae
jno
cmpsb
mov
outsl
leave
jno
xlat
push
shrb
jle
mov
or
outsl
retw
sbb
fcoml
push
push
sti
add
push
loopne
das
mov
pop
scas
push
iret
sbb
lret
dec
fistpll
movsl
data16
ja
leave
dec
and
add
out
mov
or
pop
cmp
push
xor
adc
movsb
adc
lock
inc
cltd
outsl
mov
sti
xlat
loopne
add
ds
fidivrl
mov
add
sub
adcl
adc
cmp
lock
xlat
mov
mov
push
or
mov
mov
or
out
lret
sbb
notrack
js
addr16
lea
int3
push
xchg
and
rcll
enter
jnp
adc
iret
test
push
popa
cmp
adc
mov
push
push
orl
mov
icebp
std
and
outsl
cmp
and
lea
mov
jbe
mov
sbb
and
lods
aas
popa
xchg
mov
pop
dec
mov
pop
adc
pop
push
sub
xchg
leave
jb
or
shll
jae
mov
inc
insb
mov
xchg
ret
outsb
push
popa
mov
or
ficomps
shlb
addr16
dec
dec
iret
sub
mov
je
sbb
dec
sti
cli
arpl
mov
dec
fisubl
lds
pop
mov
and
scas
outsb
mov
mov
sub
aaa
xchg
hlt
fmuls
mov
nop
inc
loope
dec
rcrl
arpl
fnstsw
dec
inc
and
adc
push
pushf
lret
cld
rorl
sbb
pushf
subb
data16
ret
or
stc
cmpsb
sbb
pop
cmp
mov
mov
add
cli
jl
xchg
mov
scas
cmp
jo
dec
movsl
pop
and
mov
mov
cmp
clc
cmp
shl
cmp
push
cmp
xor
add
add
enter
or
mov
mov
jl
cmp
mov
xchg
mov
mov
mov
les
sub
aam
not
lods
imul
xlat
mov
ss
imul
pop
and
clc
fcos
cmp
inc
mov
in
daa
out
in
out
in
adc
pop
imul
cs
mov
shl
fwait
loope
mov
addr16
ret
out
inc
mov
repz
dec
mov
xchg
pop
adc
jne
sbb
daa
icebp
jo
xor
add
shl
shlb
xchg
mov
mov
repz
mov
dec
les
sbb
mov
sbb
popf
push
fistpl
jle
cmp
stc
shl
and
mov
xor
pop
fsub
jle
or
xchg
jecxz
enter
or
popf
mov
cmp
add
inc
arpl
jg
inc
flds
leave
les
ja
jmp
mov
pop
lods
sub
mov
pop
mov
jne
imulw
jp
cmpsb
fistpl
push
xor
pop
jg
jmp
xor
fs
les
bound
dec
jnp
cltd
rol
les
pop
pop
cmpsb
out
cmc
mov
fwait
add
sarb
xchg
add
sub
sbb
test
aaa
sub
cmp
mov
dec
fsubs
jmp
jae
or
outsb
inc
sbb
jge
mov
das
and
lahf
shll
test
adc
stos
mul
or
cli
lahf
push
gs
mov
loope
push
mov
push
push
pop
mov
cmp
les
ss
mov
inc
dec
mov
jns
inc
inc
outsb
pop
mov
push
mov
mov
xchg
xor
mov
fldt
adc
out
xor
jbe
outsl
jle
icebp
jae
lods
roll
and
pop
jmp
pusha
add
sbb
push
xor
sub
or
sub
pop
xor
cmpb
jns
int
pop
pop
pop
push
jo
jno
in
adc
lods
jle
jecxz
iret
jecxz
sbb
aam
add
or
clc
imul
in
dec
pop
xorb
dec
lea
aad
ljmp
xor
in
sub
sbb
sbb
scas
stos
jbe
mov
add
lea
test
mov
mov
jge
arpl
movlps
or
pop
dec
jecxz
out
test
leave
popf
fldl
js
lods
sub
fdivrl
out
ja
xchg
or
push
xor
or
mov
aaa
imulb
or
lcall
mov
fdivrp
movsb
int
push
loopne
outsl
rorl
das
in
and
add
out
scas
and
mov
or
pop
leave
testb
nop
xchg
xchg
sahf
dec
mov
leave
repz
aas
jp
imul
js
mov
shrl
fwait
les
shll
outsb
jecxz
sbb
rcr
pop
sub
call
pop
ficoms
push
push
push
jnp
and
push
call
push
out
orb
std
fiadds
jp
or
fidivrs
mov
lret
jl
pop
icebp
call
xor
insl
aam
outsl
sub
mov
cs
int
hlt
sbb
dec
testl
xchg
mov
push
and
inc
data16
mov
nop
sub
jecxz
add
and
rcl
adc
mov
lcall
mov
addr16
sub
jmp
cmc
int3
dec
push
jmp
inc
int3
insb
and
push
inc
fcmovbe
inc
loope
xchg
imul
popf
cmp
mov
mov
xchg
cmpsb
andl
movsl
std
xor
xchg
fstpt
loopne
stos
cltd
test
lock
push
xlat
jne
pop
mov
mov
adc
les
mov
inc
iret
or
xchg
xchg
pop
movsb
sbb
jge
data16
jno
sub
mov
es
cli
lahf
cmp
loop
fildl
imul
xchg
jge
dec
xchg
pop
and
lods
jg
loope
xor
sub
je
in
repnz
and
sahf
out
cld
and
lahf
push
dec
dec
dec
sub
cs
decl
popf
std
mov
cld
sti
inc
dec
mov
sub
out
pop
lds
cmc
and
sbb
cmp
or
scas
pushl
mov
pop
decb
dec
les
data16
xchg
hlt
mov
cmp
push
arpl
push
dec
inc
not
lods
pop
sbb
push
sub
add
xchg
sti
push
int
sbb
mov
data16
icebp
jo
jg
jl
inc
pop
movsb
dec
mov
bsr
lret
cs
add
enter
and
movsl
or
in
andb
ljmp
insl
push
jne
xchg
div
scas
ret
jmp
and
dec
jo
mov
call
push
negb
pop
aaa
jo
jns
cmp
out
pop
mov
test
out
and
sub
pop
fisubl
mov
push
pop
cmp
adc
and
popa
and
pop
sub
lods
hlt
push
or
push
inc
fstps
sub
js
mov
jecxz
and
dec
mov
mov
into
add
and
jmp
bound
lahf
ljmp
xor
gs
jo
das
icebp
cmpsb
xorl
jl
fnstsw
jno
push
les
cmpb
cmpb
daa
cwtl
std
cmp
jmp
xchg
std
fdivrl
jne
test
mov
mov
int
cmp
dec
xchg
and
mov
scas
xchg
jg
stos
sub
int
nop
mov
adc
aaa
lods
add
hlt
in
sub
xchg
int3
dec
jmp
frstor
jp
movsb
xor
repnz
sahf
mov
or
jae
inc
test
out
jno
jnp
sbb
fmuls
xchg
cmp
ret
mov
add
addl
fisttps
gs
cs
fisubs
add
push
or
nop
xlat
inc
lock
lds
dec
jge
xchg
ficompl
mov
adc
fst
pop
shrb
loope
fidivrs
cwtl
push
pop
jns
mov
xor
xor
mov
xchg
scas
pushf
in
xchg
imul
test
add
and
inc
cmpsb
xor
popf
subb
mov
in
leave
sahf
lea
data16
dec
out
xor
mov
nop
sbb
push
cmpsb
insb
scas
mov
lods
jmp
mov
sarb
mov
das
inc
sbb
dec
rorl
out
jle
pushf
scas
out
adc
mov
inc
add
push
add
daa
inc
movsb
outsl
cs
mov
dec
pop
mov
jno
je
movsl
inc
out
in
dec
je
xor
in
adc
inc
mull
inc
jns
out
mov
call
lds
or
cmp
xor
mov
jns
cltd
arpl
stos
mov
mov
popa
pusha
inc
lds
mov
nop
inc
fisttpll
mov
inc
xor
outsw
hlt
add
sbb
dec
loope
aad
bnd
je
jb
fadds
pop
sti
adc
mov
insl
arpl
pop
leave
fstl
aam
lods
xchg
mov
jmp
ljmp
pop
iret
cwtl
add
in
fdivs
add
pop
int3
sbb
mov
xchg
lea
rorb
pop
pop
cwtl
dec
pop
cmp
or
icebp
mov
addl
dec
xor
movsb
in
outsb
cmc
jbe
mov
or
jp
popf
lds
std
loopne
aaa
repnz
test
out
mov
unpckhps
cmp
fistpl
loop
dec
loope
xchg
add
push
lcall
cmp
aas
aad
data16
int
in
pop
mov
fnstcw
push
push
inc
outsb
into
cmp
jmp
mov
mov
fisttpl
cld
xor
mov
aas
pop
push
roll
mov
ljmp
mov
and
je
leave
push
mov
ret
xor
or
shll
xchg
aam
les
jmp
cmpsl
xlat
push
divb
fwait
sub
popf
mov
fs
sub
xor
cmp
and
or
pop
ret
xor
ret
dec
cmpsb
lcall
push
js
pop
fwait
imull
sti
cmovns
cmp
into
fwait
into
out
dec
fcomps
ja
xchg
push
fdivrs
or
mov
adc
shr
aad
sub
popf
sar
outsl
add
sbb
daa
adc
add
lods
push
lds
xchg
mov
outsb
hlt
ret
fdivrl
outsb
sbb
in
mov
xchg
scas
jge
sbb
mov
sti
ds
stos
xchg
or
jle
in
xor
push
jl
in
ret
jns
mov
dec
add
mull
jg
lcall
xlat
gs
xor
jecxz
leave
les
sub
push
mov
inc
mov
imul
jno
or
lods
adc
jbe
mov
mov
ret
sub
arpl
mov
sarb
movsb
stc
sbb
inc
add
inc
dec
add
xor
lret
mov
and
and
push
jno
push
cmc
jo
inc
pop
cs
xchg
filds
and
in
mov
repnz
inc
stc
push
ret
xchg
dec
mov
jmp
int3
sbb
pop
icebp
aam
test
addr16
jge
shufps
insl
sub
dec
cld
and
mov
cs
out
rorl
fwait
int
sbb
mov
sub
lock
push
test
and
sbb
xchg
scas
and
xor
ret
dec
lds
push
insl
cli
rolb
fidivs
and
arpl
fldcw
dec
or
inc
mov
mov
das
lods
dec
lgs
mov
jl
movsb
lock
pop
dec
shrb
push
lea
pushf
jg
dec
jp
jb
addb
cli
pop
clc
jp
outsl
das
cli
pop
arpl
xor
jmp
jp
mov
ljmp
push
mov
outsb
inc
dec
fucomip
aas
aam
lods
mov
adc
aas
nop
ss
pop
flds
push
mov
pop
into
das
jbe
cmpsl
pop
pop
or
dec
xor
popl
mov
loope
cmp
icebp
icebp
int
stc
rcll
xchg
add
stos
push
ja
out
fistl
push
adc
adc
lods
xlat
jle
and
pop
popa
and
jp
mov
imulb
and
xchg
cmpl
lods
inc
xor
out
in
leave
shrb
clc
test
repnz
add
out
adc
lods
dec
sarl
mov
or
test
jg,pt
xor
out
jb
mov
aaa
cmp
sbb
push
and
popf
int
aad
push
sahf
mov
mov
lahf
sbb
lahf
push
ss
stc
movl
int
push
sbb
jbe
gs
mov
insl
or
jns
lea
mov
mov
xor
sub
stos
pop
call
loop
push
mov
adcl
fs
push
repz
add
mov
test
pusha
and
filds
int
cli
add
jp
xchg
adc
jmp
push
mov
aas
inc
in
jg
int3
jne
cld
xor
dec
pusha
xor
ret
cwtl
push
imul
ret
jl
push
add
sub
adc
jp
sub
sub
and
mov
push
lds
rsm
scas
ret
pop
fidivl
ja
cli
pop
mov
jge
outsl
mov
jl
jecxz
mov
inc
cmp
sub
push
dec
lds
aas
imul
and
pop
pusha
xchg
lods
push
push
push
lea
sub
insl
or
iret
cmpsl
push
mov
orb
mov
loop
repnz
enter
jge
add
call
cmp
ret
lods
jnp
push
int3
fsubrl
and
mov
enter
fsts
mov
sbb
jno
cmpsb
xchg
or
insb
imul
jae
bound
int
repz
or
mov
icebp
mov
testl
sbb
mov
and
in
aas
xchg
sub
scas
call
ss
mov
adc
fcoms
mov
xor
and
or
das
into
fwait
push
push
sub
xor
mov
fwait
mov
mov
mov
mov
jmp
jae
push
std
sahf
or
icebp
inc
xchg
loopne
stc
lahf
pop
lea
jge
test
fadd
sub
xor
ja
lods
bound
cli
push
std
xor
jne
dec
aad
movsl
hlt
add
js
jmp
mov
loop
push
daa
fidivrs
add
cmp
xchg
aas
movaps
rclb
jnp
loopne
jb
dec
outsl
cwtl
test
fistps
mov
sbb
fwait
mull
add
push
or
int3
push
mov
cmp
mov
jle,pn
pop
cmp
in
jecxz
dec
dec
jnp
insl
push
incl
mov
es
add
mov
dec
push
and
out
js
shll
loop
fldt
xor
shl
jae
xchg
inc
in
or
mov
test
dec
and
shr
cli
mov
xchg
xchg
xchg
sub
or
sbb
pop
ss
or
xor
data16
xor
jae
leave
inc
and
fistpl
cwtl
in
std
inc
xor
cmpb
xor
in
xor
lret
inc
push
add
push
enter
jbe
and
cwtl
sbb
js
push
fs
jmp
pushf
jb
jp
loopne
lahf
pop
arpl
and
hlt
les
inc
imul
jge
stc
lods
push
out
jbe
jns
xchg
lret
push
mov
dec
or
xor
ja
inc
das
outsl
in
ret
fldenv
push
iret
and
aad
sub
cmp
or
icebp
jne
add
jecxz
in
add
cwtl
ljmp
xchg
mov
dec
fdivrs
shr
xor
and
lock
fisubrl
pushf
add
pop
xor
cmc
and
vmovntdq
push
fscale
sti
jg
rclb
cmpsb
popa
loopne,pt
in
imulb
jle
push
iret
cmp
pusha
into
push
cli
xchg
lahf
lcall
push
cltd
lods
lds
fwait
sbb
aad
jo
lret
pop
pop
arpl
xchg
jo
out
push
cs
or
mov
lcall
shll
cmp
jbe
jo
int3
ss
pusha
test
dec
imul
mov
pop
jnp
dec
xor
arpl
sahf
mov
cmp
sbb
xchg
pop
stos
mov
test
push
incl
test
add
stos
mov
mov
adc
mov
std
das
arpl
mov
push
push
mov
mov
mov
push
sbb
test
jns
out
sbb
mov
adc
jg
clc
shrl
inc
adc
repz
jl
dec
dec
xchg
push
mov
insl
repnz
gs
mov
xchg
subb
gs
xchg
and
pushf
xor
or
mov
out
mov
mov
cwtl
clc
test
mov
and
cmpsb
sbb
std
push
cmp
sub
mov
cwtl
mov
sub
dec
test
movsb
call
jl
cld
add
xchg
lcall
push
arpl
aad
pop
xchg
mov
stc
sub
mov
fwait
pop
lret
xor
xchg
adc
fldl
or
ja
and
add
adc
test
in
and
daa
icebp
mov
jo
pop
movb
shl
and
daa
pop
gs
je
scas
jnp
adc
insb
inc
xchg
mov
pop
cmpsb
fiaddl
std
pop
lret
lds
fidivrl
aam
or
cmp
lret
test
xor
xlat
rcrb
mov
xorl
lret
pop
pusha
js
adc
mov
sarb
dec
sub
inc
sub
fistps
mov
mov
cmc
enter
or
xor
jae
sbb
popf
add
sbb
scas
test
mov
shl
push
clc
push
popf
jl
fidivl
mov
mov
jbe
aas
and
arpl
es
pop
and
mov
dec
add
push
push
js
adc
dec
xor
std
lcall
fstpl
into
inc
rolb
nop
and
cmpsb
jp
sub
aad
push
je
lret
lcall
ja
sbb
mov
scas
cmp
loope
cmpsl
add
lods
insb
adc
nop
fs
andl
inc
lods
stos
xor
dec
pop
sub
out
popa
icebp
test
cmp
leave
jge
sub
lods
push
push
mov
dec
cmp
enter
mov
mov
in
lahf
or
loop
movsl
imul
ret
jb
fs
jnp
out
in
scas
clc
ret
dec
inc
stos
cs
test
rol
inc
or
jo
addr16
dec
nop
mov
cmp
rclb
jbe
mov
sub
in
out
call
iret
cs
fmull
xchg
inc
cmpsl
sub
pop
sahf
imul
stc
add
add
les
das
fwait
pop
mov
xchg
pop
adc
nop
nop
nop
nop
mov
es
daa
jo
push
bound
addl
add
xlat
das
mov
aaa
xor
out
push
add
inc
jmp
lds
int3
cmp
jb
and
xchg
popa
stos
jp
ja
mov
dec
cmpsb
notb
and
repnz
cmp
int
clc
sub
adc
push
mov
roll
add
stc
push
dec
mov
sarl
dec
data16
ret
cli
test
cmp
pusha
addr16
inc
pusha
add
lret
xchg
xlat
bound
push
add
push
add
mov
jmp
adc
sub
mov
test
mov
sti
stos
sbb
jne
fadd
inc
xchg
mov
loopne
xlat
add
sbbb
fs
lret
aaa
cmc
fsubr
mov
cwtl
mov
cmpsb
push
pop
movsb
pop
lods
divb
sahf
iret
mov
and
lock
cli
pop
jge
jb
adc
pop
ss
mov
mov
es
pop
fwait
or
inc
inc
movsb
xchg
xchg
add
jmp
mov
xchg
mov
sarl
jg
sub
sub
scas
fidivl
push
xchg
push
stos
jl
xor
push
orl
mov
add
adc
enter
pop
cli
out
add
xchg
lds
cmp
test
lds
adc
ljmp
jl
pop
daa
scas
iret
mov
aam
mov
mov
sbb
shlb
fiaddl
and
pop
cmpl
xchg
push
loope
mov
scas
and
xlat
or
and
mov
addb
mov
int
mov
xor
lock
xchg
push
xchg
test
cld
scas
stos
pop
pop
xchg
sbbb
rcll
test
adcl
mov
loopne
xor
data16
hlt
lods
sarb
orl
iret
mov
dec
push
pop
xchg
xor
xchg
in
inc
push
add
andb
je
inc
inc
pushl
out
mov
scas
push
test
dec
pop
add
xchg
pushf
jno
rcll
shr
xor
mov
jae
sbb
sub
leave
sub
xchg
mov
xor
out
std
and
mov
andb
or
jnp
xchg
mov
xchg
dec
aam
mov
mov
push
and
ret
test
rcrb
mov
sbb
or
and
jp
ret
in
xchg
popf
insl
fwait
cmp
add
xor
scas
insb
jo
mov
xchg
in
movsl
ficoml
subl
or
mov
sbb
mul
ret
icebp
loop
xor
outsb
lea
pop
and
pushf
fimull
pop
jmp
push
cmp
fwait
pop
mull
xor
pusha
lret
outsb
addr16
xchg
lahf
push
xchg
fadds
jmp
inc
adc
pop
xor
pop
test
or
pop
adc
movsl
jl
jge
push
inc
fimuls
test
clc
sbb
add
stc
lret
xchg
sbb
push
les
mov
stos
push
pop
gs
and
stos
icebp
xchg
enter
inc
dec
fsubl
sub
out
add
ja
dec
lea
mov
sub
mov
pop
lock
add
je
cltd
add
nop
sbb
and
lahf
orb
jl
and
mov
pop
mov
movsl
jne
push
inc
and
nop
mov
jl
fldt
sbb
rclb
fsubr
bound
add
jle
jge
sub
insl
les
sbb
sub
std
shlb
mov
out
das
mov
push
bound
sub
das
sbb
jge
pop
push
enter
clc
fcom
movsb
xor
aaa
imul
cmp
sub
pop
roll
xchg
dec
cmp
ror
stc
out
adc
push
mov
movsb
insl
mull
inc
jo
pop
je
loope
rcr
mov
cltd
mov
xorb
xchg
insl
out
adc
xchg
into
and
inc
dec
movsb
fcompl
dec
push
xchg
push
push
fs
mov
cmc
in
iret
fs
adc
dec
insb
and
and
push
lcall
ds
lcall
pushf
mov
sub
fildl
or
xor
ror
add
mov
mov
or
inc
cmp
jo
stc
out
ja
or
jno
rcrl
insl
push
das
imul
je
xchg
adc
addl
cmp
mov
and
xchg
loope
jns
shrb
push
mov
out
ja
loope
mov
aaa
loop
mov
call
repz
mov
pop
cmc
in
dec
pop
inc
icebp
lret
xchg
jae
imul
inc
mov
adc
scas
jbe
pop
sub
clc
xor
sbb
or
mov
xchg
mov
push
negb
out
add
sub
nop
mov
jp
cmp
mov
lea
js
scas
out
cli
add
mov
pushf
xchg
in
sbbb
jbe
mov
mov
out
scas
lds
xor
je
sub
xor
adc
push
cli
adc
lahf
aas
xor
cmp
lcall
ja
sub
jo
stos
lcall
call
rol
jecxz
jns
aas
sub
out
hlt
divl
lock
mov
xor
lods
xor
jae
jmp
inc
sbbb
fnstenv
mov
fdivp
mov
test
int
fimull
push
xor
mov
iret
inc
imul
insl
cmp
cli
outsb
lds
js
cmpb
loop
iret
clc
pop
inc
mov
inc
adc
push
aas
outsl
or
add
outsb
hlt
dec
jmp
jnp
pushf
or
mov
popf
scas
arpl
outsb
jb
add
pop
cs
aam
orl
test
cmp
cltd
inc
mov
dec
add
pop
xchg
lcall
jg
sub
std
hlt
and
xchg
mov
aas
pop
je
mov
jae
xor
loopne
aad
cli
sbb
adc
adc
and
jnp
cmp
movsl
push
call
xchg
sbb
jge
in
push
ljmp
jecxz
sub
fisttps
jecxz
sbb
xor
add
mov
pushf
push
jp
aas
imul
incl
mov
mov
cmpsl
adc
sub
aaa
jmp
divb
in
xchg
cmc
faddl
cmp
and
jg
xorl
shlb
pushf
stos
inc
inc
push
ds
imul
push
mov
push
mov
cmp
in
ret
out
xchg
pop
jae
xor
lock
jge
fstps
jle
add
movsb
sbb
jo
xor
test
add
push
sti
loope
mov
loope
push
adc
fisubrl
dec
mov
sub
imul
lock
repnz
inc
xor
insb
sbb
sbb
popa
pop
test
out
dec
mov
push
aam
xor
jg
pop
das
adc
cmp
js
or
jne
ja
sbb
in
adc
popa
jl
fsubl
and
imul
dec
sbb
hlt
push
in
sbb
mov
repnz
rcrl
mov
mov
mov
rcr
lcall
push
jecxz
jge
cmc
xchg
orb
cmpsb
test
sahf
xor
adc
movsl
xor
data16
inc
sub
mov
fildll
add
pop
imul
inc
in
xor
push
test
sbb
fadd
push
das
hlt
out
into
ljmp
pop
push
pop
cmp
jns
rcrl
add
pusha
loope
pushf
fdiv
sub
mov
int
jne
adc
cwtl
loope
lds
ss
xor
bnd
test
fcoms
pushl
ret
xchg
xchg
jbe
cld
xchg
sbb
adc
push
je
push
daa
pop
xchg
push
adc
aas
inc
mov
adc
cmp
mov
out
test
adc
mov
jbe
enter
jo
fisttps
push
inc
mov
pushf
cmp
mov
dec
test
mov
push
outsb
dec
cmp
push
jecxz
test
shr
adc
lcall
mov
je
pop
je
inc
mov
loopne
push
sar
fcoms
adc
push
or
int
pop
ja
js
lods
shlb
hlt
xchg
repz
rcr
sbbb
out
out
cwtl
xor
popf
fisttps
dec
push
ljmp
or
add
scas
shl
hlt
jne
jp
mov
je
inc
shlb
int
mov
stc
pop
sub
popa
cmpl
pop
sbb
jl
clc
push
sbb
fidivl
mov
dec
rolb
cmp
cmp
lahf
mov
ret
adc
in
lahf
orl
mov
jle
inc
xor
cld
adc
pop
cmp
es
in
and
int
or
mov
ljmp
out
pop
xchg
push
mov
dec
dec
in
push
sbb
pop
les
jmp
inc
movsb
sbb
pop
cmc
or
pusha
xchg
add
xchg
dec
xchg
cmp
push
pop
push
pop
fcomip
jne
dec
cmpsl
cmpsl
shr
fdivl
std
cmpsb
cwtl
xor
push
cli
add
jge
out
enter
shll
sub
rcr
ficomps
clc
in
cs
jmp
cmp
scas
dec
into
pop
insb
nop
jbe
jle
inc
iret
mov
test
mov
xchg
pusha
sbb
fwait
jl
and
cmp
jg
stos
shll
dec
push
cmp
cli
sub
dec
cmpsb
outsb
inc
in
data16
lahf
jp
hlt
mov
je
lds
sub
in
push
loope
xor
cmpsb
adc
mov
popf
xchg
jge
or
push
in
jmp
pop
dec
mov
jge
cmp
dec
test
push
sbb
les
push
dec
aaa
sahf
or
adc
sub
lods
loop
dec
push
js
sbb
lahf
xor
aam
out
xor
js
mov
sub
insl
xchg
out
sbb
scas
shrb
mov
add
xor
pop
or
rolb
sbb
inc
push
cwtl
imulb
std
xchg
adc
push
leave
dec
fnstcw
jne
mov
stc
idivb
inc
add
loop
rclb
leave
mov
scas
sub
mov
ret
sub
xchg
mov
lret
xor
aaa
fsubrl
lods
std
mov
pop
dec
les
not
jp
movsb
mov
inc
int3
leave
adc
ret
mov
xor
sbb
mov
scas
sbb
mov
dec
or
sub
mov
sbb
hlt
scas
ds
mov
jnp
popf
jge
xchg
mov
push
aaa
dec
imul
subb
and
lds
pop
and
mov
push
repnz
and
shr
lret
js
aas
mov
push
jp
xchg
stos
pop
lods
mov
mov
sti
adc
pop
jne
adc
ret
nop
aam
outsl
bts
and
popf
adc
outsl
mov
bound
mov
or
sbb
lret
mov
or
or
dec
cmp
push
sub
sbb
shll
sbb
add
pop
lds
jbe
dec
push
cmpsb
jp
inc
testb
test
scas
push
ja
xchg
aam
pusha
xchg
lock
xor
sbb
push
cmp
push
out
sti
xor
les
lock
fcomps
and
shrl
pop
sbb
fbld
ja
mov
scas
sarb
cmp
pop
into
iret
bnd
mov
mov
pop
sbb
pop
inc
fimuls
mov
push
push
ret
fcoml
cmc
cmp
push
outsl
andb
xlat
sbbl
mov
mov
jecxz
lea
push
xor
pop
add
loope
sbb
dec
stc
adc
fucomip
xlat
jbe
shrl
in
jg
jns
jo
cltd
mov
mov
aam
mov
lea
lahf
pusha
incl
adc
outsb
jle
pop
popf
scas
scas
sbb
pop
xor
push
mov
mov
and
mov
outsl
add
nop
iret
mov
repnz
lret
das
in
daa
adc
jo
and
jmp
add
xchg
out
out
out
push
mov
xor
mov
imul
mov
ret
and
push
dec
or
mov
inc
inc
push
sbb
cmpsb
dec
sbb
fmull
add
jp
popa
mov
dec
xchg
jnp
push
inc
jb
les
jbe
test
ds
cmp
sub
fnstenv
fists
mov
je
arpl
mov
sbbl
dec
arpl
xchg
je
int
das
gs
jno
dec
nop
cmp
pop
icebp
icebp
testb
mov
add
ret
or
addr16
xchg
sub
das
cwtl
inc
repnz
popf
mov
cmp
repz
push
pop
adc
dec
mov
loop
sub
adc
push
test
in
push
push
das
clc
test
push
int
adc
mov
cmpsb
dec
sbb
push
sahf
int
int
sbb
push
mov
push
jbe
xchg
aas
imul
jns
stos
push
neg
insl
inc
pop
xchg
lds
cwtl
push
ja
inc
lret
sub
shrb
mov
mov
or
and
ljmp
mov
sahf
jne
in
cwtl
and
call
jbe
push
inc
les
std
and
movsb
push
xlat
cmp
and
out
movsb
push
cmpsb
mov
dec
hlt
sbb
fmull
mov
cmp
mov
xchg
jns
fld1
aad
sub
dec
mov
pop
push
jnp
inc
xor
test
inc
jecxz,pn
or
aam
push
dec
xchg
add
sbb
xlat
jno
push
pop
inc
and
orb
mov
add
aas
iret
daa
je
mov
sub
adc
sub
and
addr16
shll
and
or
jne
mov
aam
cmp
nop
cmp
xchg
cmp
add
aas
test
lods
push
mov
mov
inc
idivb
rcll
mov
in
or
mov
jecxz
inc
pop
dec
mov
out
sbbl
push
in
jae
mov
sbb
adcl
es
cmc
push
xor
jbe
je
fs
push
pop
pop
loop
sub
xchg
sub
pop
lahf
faddl
mov
test
jg
jmp
xchg
and
aas
fs
sbb
mov
cmc
jg
into
sbb
sub
cwtl
sbb
call
push
fcoms
jmp
jno
sbb
cli
mov
lods
clc
mov
xchg
dec
dec
gs
dec
fcmovnb
pop
stos
sbb
pop
jb
and
loopne
and
pop
cltd
int
les
in
stc
je
dec
xchg
inc
addr16
push
sbb
bnd
cltd
stos
cmp
cltd
ljmp
sub
mov
xchg
out
ds
xchg
jbe
imull
dec
add
mov
add
mov
sub
pop
pop
add
or
xchg
fmulp
xor
xor
int
xchg
xor
jbe
fwait
movsl
pop
lods
loop
or
and
leave
insb
add
mov
dec
dec
cmp
jne
aam
mov
test
cmp
inc
and
push
lcall
das
xchg
shll
jl
add
je
pop
out
adc
sub
sub
cmp
mov
push
cmp
imul
lods
psrlq
jae
xchg
ret
popa
pop
mov
fs
in
divb
cmp
lret
in
cmp
dec
inc
pop
push
sbbl
mov
ss
movsl
js
insb
xchg
push
cmpsb
mov
xor
add
ja
sbb
push
mov
in
xchg
xchg
cmp
xchg
adcl
ja
nop
xchg
or
lods
gs
push
dec
fstps
lcall
or
or
sub
in
das
dec
test
lock
shrl
pop
adc
dec
imulb
adc
stos
push
into
lcall
cmp
daa
shrb
scas
or
ficomps
inc
add
cmpsb
adc
push
jnp
mov
mov
xor
or
cmc
sbb
sbb
test
cli
push
mov
xor
push
leave
sbbb
mov
test
idivb
int3
dec
sbb
test
out
lock
mov
imul
xor
jne
loop
lret
push
push
les
scas
pop
jb
xchg
orl
dec
inc
pop
or
out
and
repnz
cmp
add
jnp
pop
xchg
sbb
and
sbb
cmp
mov
push
or
rorl
push
jne
adc
adc
mov
shl
in
call
xor
fnstcw
xchg
outsl
cmp
lea
inc
pop
push
stc
dec
inc
test
mov
sbb
or
add
adc
lds
xchg
pop
mov
or
dec
mov
push
ficoms
cmp
ss
push
xchg
dec
adc
mov
vcvtpd2psy
xorb
xlat
aaa
ds
mov
lods
inc
stc
push
jbe
dec
cmp
mov
add
insl
cltd
insb
mov
test
inc
loop
sub
pop
aas
insb
xchg
call
sub
xlat
sar
cltd
mov
mov
pop
mov
mov
xor
xchg
pop
cld
in
mov
mov
gs
sar
xchg
mov
xorb
push
leave
pusha
or
inc
outsl
bound
ror
jle
or
outsl
fnsetpm(287
xor
push
jle
shll
xchg
dec
imul
pop
dec
shll
jl
xchg
lahf
les
or
lea
aas
pop
sbb
xor
repnz
and
xor
mov
add
xchg
lea
push
outsl
cs
movsb
adc
push
mov
dec
fidivl
cmp
fcoml
xor
mov
inc
popa
pop
in
mov
movsb
and
mov
fcomps
ret
cmpsl
inc
mov
divb
and
mov
test
sbb
fmuls
cmp
inc
mov
test
hlt
roll
cmpsl
insl
add
enter
push
enter
push
iret
dec
sbb
xlat
jp
add
rcrl
push
xlat
add
xchg
testl
push
add
push
ja
loopne
dec
movsl
dec
ss
dec
inc
fisubs
std
pop
and
lock
pop
addb
lahf
sbbl
xchg
pusha
xor
insb
mov
pusha
mov
in
jo
mov
daa
xor
push
out
pop
sub
or
jge
std
inc
inc
pop
fisttpll
mov
inc
test
cmovae
mov
stc
fists
or
rcl
lahf
fsubr
sbbb
push
sbb
movsb
sti
push
fmuls
push
jle
mov
popa
xchg
xchg
or
and
xchg
cmp
xor
ss
insl
rclb
and
xchg
add
mov
int3
mov
xlat
imul
xor
xchg
pop
outsb
lcall
jae
ret
mov
cmp
inc
xchg
cs
fwait
push
lods
mov
push
sbb
xchg
mov
fs
imul
jl
sub
pop
cmp
mov
mov
pop
pop
jae
leavew
mov
xor
dec
test
mov
xchg
pushf
push
mov
pop
push
xchg
clc
mov
int3
jo
sub
xor
and
stos
mov
out
and
xchg
mov
addr16
inc
lret
mov
sbb
fsubr
dec
jle
and
inc
out
xlat
add
xor
clc
sti
xchg
js
repnz
pop
call
stc
sbb
jns
dec
arpl
call
mov
cmc
adc
fld
mov
mov
jmp
xchg
xlat
pop
js
mov
inc
shlb
test
and
jl
push
mov
loopne
push
out
sub
out
dec
lret
jns
sbb
push
aad
out
inc
mov
mov
mov
push
daa
or
ret
add
shrl
mul
mov
cmp
fsubrp
lods
lret
and
cmp
or
lahf
push
mov
iret
in
aad
cmpsb
inc
enter
push
hlt
popf
repnz
and
mov
rorl
aas
add
mov
loopne
and
adc
add
xchg
ret
test
insl
negb
push
jb
scas
cli
shll
ds
jns
cmp
andl
mov
jp
lods
call
pop
addb
mov
xor
jmp
jp
in
outsb
test
xor
xchg
fimull
cli
mov
test
pop
mov
push
sub
inc
mov
fsts
lock
mov
push
pop
out
or
pop
inc
mov
or
inc
mov
jno
outsb
mov
inc
jle
std
dec
push
and
jo
ret
popa
sbb
adc
lods
push
push
add
push
mov
hlt
pop
xchg
dec
data16
pop
pop
ficomps
push
test
xchg
loop
sti
adc
ficoms
insb
pop
rolb
imul
mov
or
fcomps
test
outsb
enter
mov
les
add
xlat
call
out
cmpsl
das
sub
ret
in
dec
rcrl
add
into
cs
sti
mov
adc
movsl
pop
mov
dec
test
jmpw
mov
mov
ret
js
cmp
jbe
jl
fiaddl
inc
sub
repz
jne
into
jne
js
jle
mov
cmp
mov
inc
mov
push
test
adc
xor
dec
fisubl
dec
insb
xchg
adc
and
mov
inc
movsb
sub
pop
shlb
cmp
mov
mov
mov
fs
mov
cmpsl
and
fstpt
stc
nop
pop
hlt
xchg
roll
fld
les
mov
data16
xor
xchg
das
out
sbb
ja
xor
fnstcw
push
add
pop
xchg
ja
add
and
mov
sbb
enter
int3
icebp
push
mov
clc
pop
jb
jg
stos
jo
xor
push
and
das
cmp
rol
sub
cli
xor
movsb
sub
xor
dec
xchg
mov
mov
and
fldenv
in
movsl
lock
sub
or
decl
cmpsl
jg
fs
mov
jge
dec
sub
push
out
test
mov
adc
jmp
push
mov
xor
mov
rol
mov
mov
mov
movsb
in
mov
xorb
push
out
data16
loopne
or
sbb
cltd
jnp
fnstcw
clc
xorb
pop
mov
ja
jbe
add
or
push
loopne
rcrb
gs
pop
xor
and
mov
cli
popa
adc
daa
adc
icebp
push
ds
into
push
jno
inc
sar
push
rorl
push
push
test
stos
cltd
imul
mov
and
adc
mov
sahf
imul
cmp
mov
dec
xlat
sti
sti
movsl
push
callw
jg
test
in
movsl
imul
arpl
ds
pop
adc
out
cmp
mov
push
mov
dec
repz
sbb
into
arpl
xor
cmpsb
mov
dec
jbe
xor
push
xor
dec
dec
mov
insl
nop
or
int
call
mov
mov
or
cmpsl
cmp
jb
mov
ja
cmp
leave
out
stos
cs
mov
cmp
or
loop
mov
cmp
iret
lcall
xchg
divb
int3
mov
push
fs
sbb
xchg
adc
cmc
push
stos
adc
adc
hlt
outsb
pop
test
push
pop
cmp
dec
shrl
xchg
xchg
shll
cmc
aad
inc
xchg
repnz
pop
ss
sub
xchg
int
cmp
call
inc
hlt
nop
push
push
shrb
mov
rep
test
aam
xchg
mov
addr16
push
fcmovne
loop
add
mov
pusha
insl
xchg
rorl
loop
cmc
fcoms
jbe
sbb
int
mov
cmp
sub
jae
pop
jl
xchg
lea
xor
push
call
ds
jno
jae
inc
pusha
pop
inc
mov
jle
push
dec
icebp
dec
mov
sti
cs
scas
dec
cmc
or
mov
push
js
gs
push
ja
bound
adcb
ficoms
bnd
fistps
or
sbb
and
xor
cwtl
dec
std
test
adc
dec
aas
mov
and
sub
cltd
inc
jbe
or
lods
fsubp
cmp
cmp
sbb
dec
movsb
jbe
mov
jno
mov
xchg
sbb
icebp
and
sbb
nop
mov
sar
test
xor
pop
add
push
fsubrl
cmp
aad
jle
pop
cmc
imul
mov
aad
mov
lahf
mov
inc
and
jns
hlt
add
sahf
in
and
cld
aad
loope
mov
jle
data16
xchg
insl
scas
sub
inc
jecxz
jnp
cwtl
dec
fidivl
push
jl
std
fisttpll
push
clc
cmpsl
imul
mov
push
cmpb
mov
and
fdivp
sub
push
pop
dec
das
push
and
fs
pusha
clc
dec
repz
push
adc
outsb
outsb
in
cmc
aam
sbb
leave
push
js
xor
scas
xchg
push
cmc
mov
imul
xor
bound
hlt
or
jo
repz
mov
mov
inc
cwtl
cs
pusha
sbb
jmp
or
push
push
jg
test
rolb
hlt
lods
das
mov
ds
icebp
adc
xor
in
pop
stos
jns
mov
mov
or
sbb
push
push
xchg
movsl
ja
loopne
jae
loopne
and
mov
es
adcb
xor
xchg
out
popa
cs
mov
enter
mov
ret
sub
inc
pop
dec
movsb
cmp
dec
mov
mov
ljmp
mov
mov
je
jne
pop
shl
mov
inc
pop
mov
add
mov
dec
and
scas
addr16
add
jecxz
fstpl
cmc
dec
pop
int3
icebp
out
push
cmp
push
or
xor
jg
int3
int3
jge
push
nop
mov
sbbl
mov
mov
add
xor
push
daa
push
cli
mov
sub
or
push
xchg
movsl
aad
dec
inc
and
hlt
pop
push
pmaddwd
pop
cli
movsb
lds
sbb
push
push
clc
inc
jge
ljmp
inc
sub
in
sti
insb
add
xor
outsb
add
cld
aas
hlt
ret
sub
cld
nop
inc
pushf
sub
jle
nop
pop
rol
jno
fsubrs
xor
push
pop
repnz
test
cld
mov
mov
shr
insb
mov
cmp
pop
cmp
in
out
mov
loope
jns
adc
sub
ret
lock
mov
cli
stc
mov
movsb
pop
rcrb
xor
xchg
sbb
xchg
push
push
hlt
adc
rcll
pop
call
addb
xchg
adc
cmp
pop
dec
loop
in
mov
xchg
mov
jno
aam
lahf
icebp
xchg
fimuls
mov
mov
xchg
outsl
int3
add
mov
and
sahf
and
daa
aad
xor
loop
test
cld
mov
out
js
or
fs
lcall
add
arpl
add
mov
xor
mov
dec
xchg
add
or
fildl
pop
mov
inc
ret
insb
xlat
out
cmp
mov
test
fsubrl
cmc
inc
pop
out
sbb
push
or
mov
jp,pt
mov
movsl
fdivrs
in
dec
adc
mov
jmp
ret
outsb
xchg
iret
out
xor
and
addr16
scas
ror
les
cmp
pop
sub
stos
mov
add
add
mov
cmc
mov
lock
lods
sub
aaa
and
mov
shl
orl
stos
int
pop
jle
rorb
jae
into
loope
mov
mov
sub
fidivrl
das
and
test
ss
repnz
icebp
fs
ss
scas
push
data16
push
cld
xchg
mov
aaa
lods
pop
jnp
sbb
mov
arpl
js
adc
sub
stos
push
inc
dec
adc
or
dec
lret
subl
int
push
add
jbe
mov
aad
in
mov
gs
clc
push
das
inc
dec
mov
mov
leave
cmp
jle
jmp
fucomip
leave
fidivs
cmpsl
cmpsl
jmp
adc
and
ss
inc
loopne
mov
or
mov
inc
inc
pop
outsb
adc
xchg
cld
xchg
push
push
push
pop
lret
mov
pop
testb
or
push
imul
inc
scas
mov
ds
mov
in
jle
ds
fmull
call
cmp
mov
adc
and
inc
test
int3
testl
test
mov
movsb
lret
xchg
js
pusha
jmp
sbb
push
sub
aas
dec
in
stos
adc
or
je
add
adc
adc
mov
inc
add
xor
ds
push
pop
sbb
jnp
in
add
std
stos
aas
int3
sub
adc
pop
stos
push
les
cmp
or
lds
mov
loopne
lock
scas
xchg
pusha
inc
notb
dec
out
iret
jp
enter
pop
inc
sbb
icebp
popf
push
lock
testl
fcompl
jmp
mov
or
mov
das
sbb
pop
mov
or
dec
mov
loop
and
scas
sbb
sarb
out
cmpsb
pop
dec
in
push
sub
mov
in
stos
jbe
xchg
mov
mov
sbb
xchg
insl
insl
subl
mov
sbb
es
xchg
stos
jns
bnd
jb
cli
fwait
stc
pop
add
seto
sbb
popa
insl
loope
imul
lcall
jo
lea
jmp
pusha
loopne
inc
jmp
dec
jle
insl
in
outsb
cmc
jo
add
cmp
adc
sbb
shrb
add
imul
or
cmc
fs
mov
movb
pop
lods
jae
iret
shlb
fisttpl
jb
pop
fcoms
mov
aaa
gs
jecxz
int
push
in
insl
cmp
fstpl
stos
push
mov
enter
sub
imul
adc
xchg
inc
cmp
dec
and
flds
push
fs
cmpsb
fldt
pop
pop
sbbb
or
jno
jmp
or
ret
jl
xor
fsubrl
push
aad
mov
in
jmp
mov
rolb
adc
pop
in
xor
mov
and
nop
imul
add
cmpsl
popa
xchg
int
jo
mov
loop
insb
flds
nop
cmp
lret
stos
jno
fdivrs
inc
xor
mov
aam
cltd
mov
push
divl
insl
repz
jge
dec
shufps
mov
les
adc
dec
loop
leave
les
xor
scas
outsb
leave
and
cwtl
and
sbb
xor
inc
sub
out
mov
neg
xor
pop
inc
jp
aam
sbb
mov
push
jne
lcall
in
and
lods
jecxz
test
jo
sub
adc
ds
gs
xchg
mov
xchg
mov
stc
inc
cmp
dec
mov
cmp
ret
lods
movsbl
popf
lret
jmp
outsb
xor
xchg
inc
je
or
repnz
movsb
adc
push
mov
mov
and
sbb
stc
test
jmp
cmp
fiadds
mov
cmp
mov
aas
out
pushf
mov
or
je
test
mov
popf
jecxz
or
cmp
insb
pushf
xchg
inc
lret
cmpsb
inc
out
test
mov
jp
cmp
loop
or
fcmovb
mov
sbb
xchg
scas
xchg
ficomps
test
scas
std
out
xor
mov
loopne
inc
xchg
adc
fisttpll
ret
cmpsl
jnp
mov
inc
sbb
inc
pop
mov
leave
xchg
sti
sbb
xorl
fsin
add
sub
fiadds
adc
push
hlt
pusha
sti
mov
or
add
mov
inc
push
in
pop
dec
ret
clc
scas
mov
mov
ret
stos
das
sarl
scas
add
or
and
and
push
out
cli
ljmp
sbb
aaa
push
cmp
dec
aas
lods
cli
sbbb
movsb
push
cmp
add
xchg
add
in
push
pushf
adc
rclb
enter
push
mov
cmp
ror
add
std
dec
jo
pop
xchg
pop
dec
insl
aaa
pop
or
dec
mov
mov
cmpb
movsl
int3
pop
sbb
sub
mov
inc
cmp
cvttps2pi
add
scas
and
fadd
and
out
insl
dec
fmuls
adc
mov
mov
jmp
lret
sub
dec
sbb
out
sahf
jae
push
jbe
mov
jmp
jp
sahf
testl
push
jno
notl
pop
loope
loopne
mov
and
shrl
mov
pop
mov
ret
mov
push
inc
scas
or
ss
pavgw
sbb
pusha
inc
xchg
sub
sbb
leave
mov
mov
fisubrs
pop
iret
das
cs
inc
adcl
faddp
cwtl
fwait
bnd
fwait
adc
cmpb
icebp
jno
sub
mov
aaa
scas
and
mov
and
aaa
lea
add
sub
push
into
cltd
js
jns
lods
xchg
or
jl
xchg
out
pusha
addb
into
adc
adc
movsl
orb
fwait
and
daa
fst
in
jge
xchg
sub
dec
pop
ds
bound
mov
pop
fs
add
outsb
stos
lods
mov
dec
pop
mov
aad
inc
into
cli
xlat
mov
xchg
out
mov
rcrl
mov
shrl
retw
js
scas
arpl
cmp
shl
pop
sar
pop
lods
push
dec
xchg
sbb
outsl
call
cli
jns
rolb
inc
insl
bound
inc
data16
push
push
divl
lret
jb
mov
movsl
xor
sti
int3
fcomps
xor
andl
out
loopne,pn
or
inc
fdivs
fiaddl
sbb
test
xchg
and
fists
pop
imul
cmpb
mov
je
or
test
fsubrl
sbb
and
bound
or
rcll
pop
int3
xor
je
lcall
cli
insl
or
and
mov
push
xchg
stos
mov
shr
pop
mov
push
add
cmpsl
imul
mov
add
movsl
vunpckhpd
fsubr
scas
xchg
jb
or
jns
push
mov
addr16
xchg
cmpsb
pop
aaa
push
add
sbb
pop
inc
xchg
dec
sbb
mov
mov
ljmp
xchg
sahf
ret
fs
pop
xchg
jge
xchg
jns
inc
xor
cmpsb
movsb
dec
dec
or
push
sbb
cmpsb
dec
mov
sub
jg
add
sarl
cmp
ret
mov
mov
pop
leave
push
xor
mov
xchg
pop
je
jmp
mov
lea
out
insl
stos
ficoml
pop
or
je
mov
jne
jo
lret
or
cmc
cmp
aad
idivl
insb
add
dec
daa
cmp
into
cmp
movsb
sbb
xchg
sub
cmp
adc
lods
fists
inc
cwtl
sbb
sub
sbb
mov
scas
aas
jmp
mov
jge
mov
add
pop
mov
mov
out
and
lock
sub
adc
test
add
pop
add
pop
lcall
adc
int
dec
push
xor
mov
pop
mov
mov
ret
jns
dec
xor
scas
js
out
insl
mov
cmp
mulb
call
and
adc
test
jg
fistpll
in
inc
sub
jecxz
shrl
adc
imul
dec
ds
fiaddl
call
inc
or
enter
in
dec
inc
mov
int3
roll
add
sub
add
push
or
adc
es
enter
jmp
subl
lods
add
xchg
mov
push
icebp
lret
out
add
mov
xchg
psraw
jge
xor
lcall
adc
stos
add
inc
and
add
add
test
sub
js
or
ret
mov
mov
loope
cwtl
and
mov
fnstcw
cmpsb
and
lea
push
stc
xor
cmp
mov
call
mov
jnp
inc
fimuls
fisttpll
jnp
push
dec
mov
test
xorb
cmpsl
int3
xchg
fldcw
lret
call
mov
dec
xchg
jmp
punpckhbw
mov
sub
xlat
xchg
pusha
jecxz
lret
lcall
nop
es
daa
ja
ja
lds
sub
xchg
sub
jle
repz
dec
or
jns
dec
dec
xor
cmp
jmp
cmp
inc
je
xor
cmp
pop
inc
add
loop
outsl
xor
and
and
mov
repnz
shrl
mov
lea
stc
lahf
shl
cwtl
jmp
or
lock
stos
fisttpl
push
mov
mov
js
mov
sbb
jno
sub
sbb
xchg
ficoms
mov
cmp
repz
lahf
loope
mov
jle
pop
int3
xchg
fcoml
pop
cwtl
enter
lret
mov
es
pushf
add
rcr
ljmp
push
push
leave
jmp
cld
add
mov
mov
xor
inc
dec
sbbb
cli
dec
mov
adc
push
and
mov
cmpsb
movsb
movsl
xlat
or
push
pop
dec
insl
mov
mov
jl
test
dec
cmc
push
out
popa
test
insl
xchg
sub
lock
dec
add
push
sbb
cmp
xchg
fcomip
pop
fcom
fiadds
xchg
pop
jb
test
dec
hlt
add
add
jmp
push
jnp
mov
sbb
ja
daa
mov
xchg
test
int3
xchg
jle
dec
int3
jo
in
sbb
ficomps
sbb
dec
fcomip
popa
imul
gs
hlt
jb
adc
test
je
aad
ss
sub
sub
pop
orb
jo
fldt
fs
cwtl
movsl
lcall
jne
add
mov
adc
ds
xchg
add
gs
cld
insl
pop
imulb
mov
mov
testb
pop
xlat
adc
lds
mov
push
std
gs
into
lock
xor
cmp
lahf
adc
sub
add
adc
mov
pop
fnstenv
fsts
add
cmp
repnz
adc
mov
es
lods
sbb
mov
pop
pop
mov
inc
lods
sysenter
xchg
fwait
pop
cmp
jb
cmp
fldl
add
mov
test
mov
lock
sub
ds
xchg
inc
es
jne
test
lahf
xlat
cmpsb
pop
insl
sub
ds
dec
mov
aaa
movsb
sub
mov
xor
mov
xchg
pop
mov
fdivs
xchg
push
out
or
es
loope
jl
mov
in
sub
xchg
mov
mov
imul
add
xchg
lret
loope
andb
shl
cmp
test
pushf
sbb
gs
or
xlat
mov
adc
in
je
pop
push
daa
push
xchg
xlat
inc
xchg
incl
movsl
inc
mov
jno
ljmp
lods
subl
cs
inc
lods
sub
and
iret
fs
mov
mov
or
in
fs
jns
push
mov
xor
dec
pop
mov
mov
aas
jg
aas
aam
inc
and
inc
data16
and
into
movsb
xchg
sub
or
xchg
mov
cmc
push
nop
mov
jne
sub
mov
sbb
mov
arpl
jmp
dec
xchg
xchg
popf
loop
sub
maskmovq
notl
pusha
pop
iret
fwait
xor
movl
stc
sti
popf
xor
push
sbb
xchg
push
pop
pop
and
pop
pop
mov
pushf
mov
or
test
push
and
pop
or
repz
xor
push
mov
and
outsb
fisubrl
iret
out
fnsave
test
fwait
lods
adc
mov
adc
aas
cmp
mov
out
dec
movsl
repz
jnp
rcl
stos
xchg
push
sbb
orb
inc
enter
bound
add
mov
lahf
add
adc
dec
mov
inc
adc
add
add
sub
add
add
add
mov
add
add
stos
mov
into
mov
nop
nop
les
mov
mov
jne
jno
shlb
gs
or
popa
out
add
loopne
jp
pusha
push
jp
aam
lock
inc
cmp
pop
xchg
es
jbe
call
aaa
jbe
out
out
add
pcmpgtb
or
lock
gs
into
ljmp
fs
xor
sti
dec
mov
cli
shll
pop
jecxz
sub
pop
lods
rclb
out
adc
popf
mov
rcll
lret
cwtl
xor
jbe
call
xchg
dec
push
fistl
sbb
aaa
lret
push
push
push
xchg
nop
cmp
fdivs
shrl
mov
fs
adc
test
out
frstor
pop
dec
testb
mov
fbstp
outsb
aad
lret
jl
ja
cmp
out
jmp
mov
jae
cmp
add
xor
pop
and
sar
mov
popl
bound
xor
aam
lds
cmp
fwait
sbb
insl
movl
cmp
mov
lcall
jb
lds
mov
ret
mov
mov
cmp
insb
mov
js
jbe
cli
sub
insl
lock
or
into
xchg
pushl
push
mov
out
pushf
jmp
adc
dec
sub
xchg
xlat
inc
mov
pop
dec
dec
incb
popa
xor
mov
dec
dec
ja
cmp
mov
icebp
sahf
inc
cmpsb
xchg
lds
add
adc
push
inc
add
sti
dec
and
xchg
push
xchg
mov
push
arpl
pushf
xor
adc
or
in
adc
rcll
fnstcw
jb
adc
dec
ffreep
mov
fistl
pop
lret
fcoms
cmp
sub
and
push
xchg
iret
ret
sub
add
ljmp
xchg
enter
test
cs
fimuls
and
cmp
adc
sub
nop
push
dec
popa
cmp
pushf
icebp
int3
mov
cmp
out
add
mov
jnp
clc
insl
aaa
push
ret
or
push
or
fbstp
cmp
adc
pushf
or
test
daa
and
mov
outsb
adc
pop
mov
dec
mov
dec
push
dec
mov
or
call
push
mov
jecxz
push
out
shll
dec
mov
insl
mov
movsb
and
out
jl
push
andl
pusha
sbb
sarl
pop
fs
call
inc
mov
xchg
arpl
movsb
insb
fwait
cld
fdivr
adc
imul
ljmp
mov
ret
mov
jmp
leave
push
add
rcrb
xchg
cmp
call
rcr
aad
scas
mov
or
push
out
stos
loop
jo
bnd
jmp
mov
sub
int3
cld
ljmp
imul
push
or
jecxz
mov
insb
mov
jo
sbb
push
inc
xchg
int
adc
fsub
rorl
mov
xchg
mov
jl
jmp
sub
int3
xor
mov
test
mov
ljmp
in
mov
pop
mov
sbb
subl
aam
push
push
ljmp
rclb
add
fnstsw
push
ja
popl
cmpsb
cld
movsl
push
mov
fwait
mov
cmc
inc
dec
inc
mov
pop
add
pop
sbb
rcrb
lods
aam
jmp
cs
sub
stos
adc
jg
ficoms
pop
jbe
push
popa
mov
or
mov
push
dec
shll
push
scas
inc
rorb
fs
mov
pop
mov
fdivp
es
scas
gs
xchg
cltd
jmp
add
mov
push
sub
jecxz
test
sar
cld
sbb
leave
dec
sub
pop
test
mov
cmpb
add
adc
mov
or
in
mov
shrb
mov
push
push
add
sub
leave
jnp
rol
cmp
ret
cwtl
adc
addr16
fidivrl
test
add
mov
push
dec
jne
stos
pop
sti
inc
repz
sbb
hlt
fcmovnbe
test
xor
icebp
sbb
imul
sbb
push
aam
push
test
xchg
in
leave
xchg
cmp
adcl
pop
xchg
arpl
call
and
xor
imul
enter
adc
ds
pusha
iret
adc
mov
mov
test
pop
fcom
mov
test
add
jns
sub
jg
sti
mov
jecxz
adc
jl
pop
dec
test
movsb
lods
jnp
fwait
fwait
hlt
xchg
push
mov
inc
sub
scas
rcrl
les
adcb
add
sbb
mov
movsb
pop
call
or
leave
test
int
add
aas
iret
mov
push
fistpl
out
sbb
jb
jl
adc
and
scas
adc
and
cmc
stos
mov
mov
jns
ss
test
dec
sti
mov
repnz
cwtl
bound
stos
sbbl
mov
and
fsubrp
aaa
lods
fdivs
notl
mov
dec
imul
jno
icebp
jle
sbb
dec
stc
jg
push
adc
lds
inc
repnz
push
stos
push
es
rcll
outsl
jb
push
lds
inc
push
xor
loope
cli
mov
insb
mov
std
dec
mov
add
mov
cltd
daa
inc
into
cmpsl
pop
mov
mov
push
stc
add
clc
shll
filds
mov
or
das
hlt
cmp
cs
mov
aaa
ds
mov
pop
add
cmp
pop
jno
mov
dec
dec
mov
aad
test
pop
xchg
jmp
jmp
inc
push
clc
adc
xor
notl
mov
cmpsb
dec
imul
jg
or
shll
xlat
shll
mov
hlt
xor
out
aaa
imul
cmp
push
fisttps
andl
cmp
mulb
sarl
add
push
mov
mov
sbb
xor
in
mov
outsl
addr16
testl
xchg
cltd
orb
scas
push
psubq
jns
repz
loopne
sbb
mov
dec
dec
inc
loopne
aaa
or
hlt
daa
jp
push
add
lcall
jmp
fwait
orl
and
lret
mov
pop
lods
xor
in
lret
and
jp
mov
adc
call
popa
cmpsw
pop
adc
add
xor
out
arpl
sub
test
stos
inc
sarl
int
jo
mov
dec
imul
mov
nop
lods
jmp
xchg
dec
cmp
push
pushf
push
xchg
mov
mov
xchg
cmp
fisubs
sub
incl
and
jne
addr16
sbb
sti
lret
inc
hlt
pshufw
aaa
pushf
sarb
pop
andb
sub
insb
cmp
or
fldt
or
jle
mov
andb
mov
cmp
pop
mov
stos
cmc
jo
mov
pop
rol
sarl
sbb
xor
mov
in
sar
loop
sbb
sub
clc
sub
sbb
jp
aas
mov
push
lods
xchg
push
aaa
fdivl
adc
xor
daa
cmp
mov
pop
inc
loope
mov
sbb
xchg
lahf
mov
adc
push
insb
in
sbbl
popa
push
mov
push
stos
jmp
cmp
ja
inc
data16
ret
inc
addb
aas
lods
mov
sti
insl
adc
mov
gs
dec
stos
xchg
push
loop
and
scas
in
push
sub
idivl
cld
clc
lea
xor
xor
add
inc
jne
mov
pop
or
jp
xor
rcll
jmp
mov
gs
das
sti
out
gs
movsl
or
enter
outsl
ja
enter
enter
in
mov
and
lods
xchg
cli
imul
cmpsl
shrb
adc
divl
divb
or
ljmp
pop
pop
repz
mov
or
fiaddl
sbb
scas
movl
divb
lret
popa
cmpsb
out
jns
xchg
fisttpll
xchg
inc
and
stc
pushf
ljmp
sub
mov
or
mov
jo
leave
int
incl
ljmp
dec
inc
leave
pop
mov
pop
jo
lds
loop
lea
adc
jg
xchg
arpl
rclb
out
imul
rcrb
sub
bsf
outsl
or
ret
popf
gs
test
mov
xor
cli
mov
imul
and
push
pop
dec
mov
mov
mov
movsl
or
bnd
out
inc
movsb
inc
mov
sti
cmp
int
mov
loopne
popa
mov
mov
outsb
das
dec
data16
xchg
xor
inc
jb
mov
xchg
jmp
or
sbb
mov
mov
xor
test
and
fldt
sub
push
orb
dec
xor
xor
nop
adc
mov
lock
scas
inc
testl
sbb
frstor
push
pushf
dec
dec
popf
jno
mov
popa
pop
sub
fidivrs
mov
xchg
ror
adc
ja
or
push
xlat
rolb
jns
clc
test
cwtl
pop
xor
insb
cmp
adc
clc
cmp
add
rclb
lret
jnp
cmp
xchg
rcr
roll
ret
adc
mov
pop
fld
insl
test
fwait
sti
and
test
adc
sti
subb
push
adc
jg
lock
push
idiv
push
popa
popa
jge
jns
mov
call
or
or
xor
aam
and
idiv
jmp
and
mov
sub
rorl
pushf
cmp
imul
xorl
or
push
es
push
movntq
xchg
sti
outsb
in
in
jae
insb
testl
inc
in
mov
data16
std
pop
or
pop
mov
xchg
xor
popa
and
xor
add
and
mov
mov
or
and
mov
xchg
dec
cmp
jns
push
das
leave
mov
in
push
push
mov
aad
pop
pop
sti
pop
pop
jnp
add
jge
xchg
std
mov
aaa
std
push
pop
and
outsl
cltd
movsb
jbe
lods
in
inc
inc
pop
xor
mov
and
cmp
les
sub
aad
jecxz
dec
add
outsl
fdivs
mov
scas
sbb
movsb
cmp
inc
sub
cmpb
xor
inc
fsubs
inc
jge
movsb
daa
negl
repz
popa
mov
test
mov
fs
sbb
int3
inc
and
xchg
repz
test
popa
scas
push
cmpl
sbb
imul
jmp
lds
out
fisubrs
jno
lods
xchg
cmp
outsl
or
mov
sbb
rorl
mov
stc
dec
ds
xor
push
jno
repz
cmp
sub
std
pop
inc
fmull
pushf
or
xchg
das
cmp
aad
insl
mov
outsb
test
loop
cli
ljmp
stos
sbb
imul
add
sub
push
or
data16
mov
pop
int3
subb
xor
outsb
mov
dec
sbb
or
popa
sub
xchg
dec
mov
test
jae
xor
add
xlat
out
mov
push
jbe
mov
push
mov
ret
mov
call
mov
jb
xchg
jecxz
das
push
jno,pn
test
sub
inc
imul
fdivs
bswap
cmp
loop
std
xor
sub
sar
mov
inc
in
xlat
sub
in
inc
and
lods
ljmp
shr
pop
fstl
cmp
mov
and
popa
sbbl
and
jbe
movsb
call
dec
adc
xchg
push
es
aaa
loope
add
lods
dec
fisttpl
mov
loopne
jg
add
jo
std
das
push
popa
out
mov
dec
lods
sbbl
mov
lods
icebp
sub
mov
shr
clc
xor
mov
mov
add
clc
mov
in
nop
sub
rcrl
pop
pop
jmp
rcll
movsb
mov
xor
sub
cwtl
cli
pop
mov
mov
fldenv
pushf
sub
and
dec
sub
fisubl
into
sahf
test
mov
push
int
hlt
dec
mov
sbb
lret
fnstenv
mov
push
xchg
push
les
jg
adc
pop
jge
xchg
leave
es
testb
ret
leave
aas
sbb
dec
inc
sbb
cld
xor
inc
clc
sbb
or
scas
push
loop
mov
cmp
sub
add
mov
or
es
inc
sbbl
and
jge
sbb
fld
xchg
outsb
push
push
mov
inc
cmpsl
repz
in
out
jl
sbb
dec
out
dec
or
cli
sub
xchg
fcompl
add
cmc
repnz
xchg
lahf
insb
outsl
adc
xlat
push
mov
or
sti
nop/reserved
insl
and
test
dec
cmp
jns
dec
into
sub
push
aaa
mov
add
lret
rep
cltd
loopne
push
das
cmp
loope
out
fwait
jae
cmp
cmp
ljmp
out
xor
aas
test
and
push
mov
lea
xchg
jg
nop
push
jg
xchg
jle
xor
aad
int3
into
and
imul
call
les
nop
inc
mov
push
jecxz
dec
stos
dec
sub
daa
jmp
xchg
loopne
inc
adc
iret
mov
jnp
mov
imul
adc
stc
mov
shlb
outsb
ss
data16
xchg
shll
mov
push
xchg
adc
test
popf
aas
or
xchg
out
pop
xchg
rol
sbb
cmp
je
scas
push
mov
in
jbe
mov
ret
or
sub
mov
lret
repnz
insl
fistpll
xchg
movsl
xor
jg
mov
and
adc
sub
jmp
cmp
popa
add
out
ss
ret
cmp
rcll
lea
mov
sub
jl
mov
dec
arpl
xor
hlt
mov
test
insl
ror
push
mov
pop
inc
cwtl
pop
popf
push
add
cmpsb
in
stos
push
das
mov
fisubs
dec
shlb
jo
pusha
mov
int3
stos
sub
out
push
bound
xchg
or
jae
xchg
mov
mov
lods
pop
sti
lea
nop
lcall
popa
mov
ds
pop
pop
add
mov
adc
enter
nop
mov
movsb
push
lock
in
pop
adc
nop
jmp
adc
mov
out
jb
push
fnsave
jnp
les
out
dec
test
in
outsl
pop
or
xor
mov
jb
sub
push
xchg
test
mov
mov
xor
pop
repnz
pop
mov
mov
fists
dec
rorb
lea
cmp
int
mov
adc
scas
xchg
add
mov
je
xorb
push
in
or
jno
pop
mov
popa
aaa
sub
leave
mov
fbstp
int3
or
adc
mov
out
mov
sbb
repz
movsb
xchg
push
mov
jle
push
push
adc
fnstenv
push
mov
nop
cmp
sbb
inc
or
adc
nop
inc
mov
ja
js
pop
mov
xchg
int3
mov
fdiv
lods
xchg
sbb
push
popa
loop
and
popa
pop
inc
aam
lret
push
or
lcall
mov
mov
mov
flds
jp
xor
rclb
aad
dec
scas
and
es
pop
xor
sti
and
mov
outsb
dec
shll
fmull
jecxz
out
xor
inc
repz
push
lods
inc
mov
sbb
mov
scas
scas
cmp
cld
pop
aaa
adc
inc
pushl
inc
in
cmp
dec
push
xchg
fs
pop
cmp
fstpt
push
sub
sbb
jmp
insl
in
jp
sub
fadd
xor
mov
mov
fildll
cwtl
movsb
xchg
mov
cmpsb
mov
sbb
or
movsb
adc
mov
pusha
inc
sub
push
sbb
lcall
push
pop
xchg
ret
ds
jecxz
dec
nop
jnp
mov
jo
sti
sarl
mov
stos
scas
ds
stos
repz
movsl
push
call
inc
fcoms
imul
ret
xor
stos
bound
cmp
xor
shll
push
movsb
jae
mov
xchg
sbb
sub
aaa
roll
dec
pop
cmp
xchg
jp
fs
jg
hlt
mov
bound
and
add
aaa
fwait
add
cld
rcrl
scas
push
jmp
sub
jecxz
mov
inc
inc
into
in
inc
or
icebp
and
fcoml
rorb
sbb
dec
insl
inc
mov
adc
xlat
cwtl
cmpsl
sbbl
lods
sbb
push
cmp
and
adc
jmp
les
dec
jb
stos
or
push
jge
mov
mov
repz
out
cli
sbb
mov
inc
cmc
pop
adc
inc
lods
cs
cwtl
icebp
pop
test
test
xchg
pop
cmp
jle
test
cli
gs
adc
stos
add
add
mov
and
rcrl
push
pop
sbb
les
mov
ss
into
push
ja
lods
popa
push
cwtl
inc
das
aaa
pop
push
sub
iret
in
shrb
inc
lock
dec
adc
loopne
gs
push
xor
cmpsb
sub
into
jp
nop
rcl
sub
jle
rcl
sub
setl
and
nop
push
sub
gs
iret
dec
mov
xchg
mov
add
iret
shrb
add
mov
jmp
inc
sarl
loop
sub
ret
inc
ret
int
outsb
dec
adc
dec
jb
pop
jmp
push
mov
mov
vlddqu
movsl
and
test
cmpsb
and
dec
xchg
mov
mov
out
xchg
sbb
jge
cltd
mov
jge
dec
fistpll
mov
imul
cmp
bound
push
inc
inc
fwait
pop
xor
aad
sub
out
mov
in
xchg
push
addb
or
out
dec
in
rcrl
xor
fcompl
push
or
cmpsb
das
xchg
outsb
mov
dec
mov
loopne
pop
xchg
jne
loopne
push
and
mov
adc
sub
imul
jbe
sti
jbe
mov
xor
or
mov
out
clc
scas
lcall
aam
xchg
aaa
movsb
inc
sti
xchg
and
enter
xor
out
stos
in
mov
repz
mov
les
gs
fs
sbb
roll
cld
pushf
out
jl
mov
decl
pop
repz
or
enter
das
cmp
mov
cmc
inc
fisubrl
lcall
xor
or
mov
inc
js
adc
mov
jbe
shl
pushl
dec
push
lea
lea
xor
cmp
push
ja
xor
jl
jae
jmp
data16
nop
cmp
cltd
mov
cmpsb
inc
lods
pop
push
xlat
test
jo
xor
xchg
or
mov
pop
mov
outsl
lock
fadd
cmc
jl
xorb
fwait
sub
cwtl
and
movsl
addr16
aad
ss
ficoms
add
jp
scas
pop
test
push
rcrl
movntps
pop
lret
cmp
imul
adcl
in
cli
orl
add
jl
pop
adc
dec
lds
or
jno
out
mov
shrl
out
inc
push
dec
inc
jnp
sbb
int
pop
mov
in
cmp
loopne
inc
sahf
add
int
jns
add
test
or
fsubrl
cwtl
jmp
aad
push
iret
pop
in
or
in
or
loope
and
lods
je
jl
adc
add
dec
notb
dec
mov
fs
outsb
in
or
test
push
movsl
outsl
jne
ret
cmp
pop
xchg
cmp
test
dec
push
faddl
push
jno
cmpsb
mov
imul
pop
jo
in
aas
xchg
mov
test
push
mov
lods
mov
fsubl
cmpsl
add
mov
mov
cmpsl
bound
xchg
repz
lds
or
dec
nop
push
add
cmp
mov
dec
push
pop
inc
xchg
loopne
cmp
mov
pusha
jge
lahf
cmp
adc
icebp
or
and
int3
mov
dec
xchg
sbb
inc
pop
cmp
jne
add
xchg
xchg
in
in
movsb
pop
clc
mov
daa
incb
adc
push
adc
in
stc
add
call
push
ljmp
mov
and
call
gs
xor
cli
mov
inc
loop
idivb
lea
xor
adc
and
fs
or
les
jb
sbb
ljmp
push
out
push
push
jp
add
stos
adc
lods
xor
in
mov
xor
rcrl
jl
xor
xchg
sti
jp
dec
mov
xor
stc
mov
stc
and
fmulp
out
mov
and
pop
jmp
fs
jns
pusha
std
outsl
sub
cmp
loopne,pt
loope
daa
out
outsl
fdiv
nop
mov
pusha
sbb
lods
dec
sbb
loopne
repnz
lods
into
mov
mov
xchg
call
dec
loopne
sub
mov
es
sbb
push
lock
push
rcll
out
insb
adcb
je
andb
nop
and
shlb
xchg
mov
test
or
in
cld
push
repnz
inc
xor
inc
push
pop
mov
psubw
mov
inc
sbb
out
sub
xchg
push
mov
leave
idiv
outsb
lods
jmp
in
fucomi
jne
adc
scas
add
add
negb
sbb
push
outsb
sarl
mov
push
imul
js
push
outsl
inc
in
scas
xor
shll
cmp
jle
js
stos
mov
in
sub
in
inc
fwait
ds
sti
lods
add
ret
dec
pop
fdivrp
iret
es
cmpsb
and
js
pop
fdivrs
inc
in
dec
push
cmp
bound
and
xchg
or
jne
lock
xchg
loopne
addr16
sarb
ljmp
aad
xchg
orl
add
outsb
add
mov
dec
lods
es
or
lods
cwtl
sub
sub
jne
mov
jp
mov
dec
imulb
pop
sbb
jno
cld
adc
jno
insb
push
adc
jecxz
xchg
cmp
mov
jno
xchg
fisubs
sbb
int3
mov
pop
cmpl
enter
int3
test
sub
sub
adc
out
adc
arpl
repz
rorl
insl
repz
addl
mov
lret
dec
dec
sub
ficomps
aaa
frstor
sarl
lods
push
bound
cmp
sub
push
and
je
cmp
push
bound
out
adc
xorl
in
xor
sti
dec
jl
addr16
mov
call
mov
sti
dec
rcrl
int3
sub
or
and
mov
inc
in
jecxz
divb
push
jnp
pop
and
xchg
push
inc
push
push
popa
rcl
cwtl
ffreep
ds
sbb
push
fs
ficoms
mov
pop
cmp
fldenv
dec
push
fnsave
int3
das
outsl
inc
pusha
inc
xor
jno
pop
rorb
dec
pushf
and
push
xorb
inc
add
dec
lret
loop
adc
fwait
int
mov
pop
push
mov
xchg
aam
xchg
out
dec
or
pop
sbb
mov
dec
pop
cmp
loopne
xchg
lds
std
jge
cwtl
repnz
sub
movsb
mov
popl
sbb
add
hlt
aas
add
das
lahf
add
inc
inc
inc
mov
lcall
cmp
add
test
jbe
inc
xchg
mov
jnp
icebp
xchg
cmp
sbb
mov
and
lods
movsb
mov
xor
mov
inc
jo,pn
fisubrl
movsb
push
jne
and
dec
dec
enter
add
and
or
mov
sbb
push
xchg
shrl
dec
inc
mov
ficoms
push
ret
fistpll
xchg
push
icebp
adc
add
xchg
js
imul
sub
mov
les
cmp
adc
test
add
movq
and
inc
add
cmc
mov
mov
fildl
shll
in
scas
ret
inc
in
andb
lahf
ficompl
outsb
cmp
fst
push
xor
cmp
push
or
es
cmp
add
mov
movsb
cmp
scas
fsubrs
mov
rorb
cmp
mov
sbb
or
adc
or
into
and
call
mov
daa
lock
ret
sub
int
mov
mov
lea
jle
addl
movsl
aaa
xor
jno
sbb
xorb
pop
push
enter
push
js
stos
mov
pop
popa
popa
loope
xor
bound
cs
dec
and
sahf
call
divb
imul
stos
xor
xor
in
mov
jno,pn
testl
frstor
out
mov
or
push
push
xor
xchg
push
outsl
mov
inc
ss
int
add
xchg
imul
adc
arpl
lcall
bound
mov
mov
xor
jle
inc
divl
xor
movsb
mov
jle
idiv
cwtl
mov
cmc
fs
jno
fisubs
cld
push
fidivrl
push
repz
sahf
fmull
sbbl
clc
movd
out
add
dec
jae
adc
lret
es
push
xchg
jbe
lock
mov
ficomps
imul
inc
lds
xchg
jbe
out
jb
iret
mov
and
adc
inc
cmp
pop
cmp
lods
mov
scas
xchg
mov
xchg
push
addr16
xchg
imul
les
and
arpl
enter
in
je
shll
pop
dec
testl
inc
test
inc
push
shll
xor
sahf
mov
int3
loop
push
and
push
push
lds
test
in
mov
out
add
arpl
dec
inc
out
add
mov
fcomps
mov
insl
insb
orl
es
mov
cmp
sbb
jnp
stc
rcll
repnz
leave
cmp
jae
dec
jb
lret
jo
shll
mov
add
daa
enter
ja
call
dec
scas
idivl
push
test
sti
call
neg
in
mov
out
and
cs
outsl
int
pusha
fnsave
aam
push
mov
scas
adc
mov
and
repnz
iret
adc
push
push
sub
repz
mov
mov
mov
stos
aas
mov
shll
in
bound
xor
push
pop
pop
adc
dec
gs
in
mov
mov
dec
inc
or
push
adc
stos
xorb
or
fisttpl
xchg
and
stos
leave
mov
aas
mov
sub
and
push
inc
mov
aaa
cld
mov
outsw
add
int
mov
mov
cmp
xor
sbb
cmpsb
xlat
push
xor
cmp
inc
xchg
push
mov
and
inc
sub
insl
lret
mov
cmp
sti
adc
xor
jae
movsb
adc
add
xchg
loop
cmp
jmp
push
rcll
jne
lcall
push
fwait
dec
jne
mov
daa
or
inc
test
pop
cmp
adc
dec
fdivp
jo
aad
stos
or
in
inc
mov
cwtl
fildll
imul
xor
mov
sbb
inc
lods
imul
fisttps
sub
shrl
push
pop
mov
out
ret
out
push
xchg
and
iret
or
sbb
mov
xchg
and
dec
mov
add
js
aaa
pop
and
pushf
nop
dec
xchg
mov
in
add
sbb
les
lods
dec
loopne
mov
cmp
xor
pop
jecxz
call
sbb
popa
std
bnd
imul
aam
pop
test
jne
add
or
pop
cmp
cmpsl
subl
jb
jg
add
push
jno
cmp
stc
and
sub
fsubl
or
test
sbb
xor
dec
test
adc
mov
jg
add
and
mov
adc
ljmp
jg
pop
mov
loop
dec
sub
incb
cmp
sti
call
inc
outsl
hlt
inc
fwait
jnp
movsl
out
cmc
int
fnstcw
mov
inc
pusha
imul
xor
and
push
jae
cmc
je
std
push
outsl
jge
jecxz
mov
pop
xchg
pop
push
jb
psubb
xchg
ret
mov
fdivrs
shrl
and
pop
mov
mov
fstps
loop
pop
pusha
mov
cmp
mov
jbe
lret
bound
stc
out
push
push
mov
mov
insl
push
aaa
lret
es
cld
lret
jb
mov
or
dec
std
pop
or
fisttpl
lret
mov
roll
adc
cmp
clc
sbb
xchg
xchg
leave
mov
dec
mov
or
sbb
aas
inc
sub
std
adc
mov
andl
inc
jmp
pop
and
das
dec
dec
popa
imul
jmp
test
and
mov
out
aas
sar
pop
mov
sbb
jbe
sbbb
jp
loop
out
add
pop
push
xor
xor
ss
sbb
pop
mov
cli
or
jne
les
and
mov
inc
xor
int
mov
sbb
popa
xchg
std
daa
xchg
mov
daa
lahf
jnp
and
fstpt
sbb
mov
in
cmc
iret
rolb
stos
jp
out
pop
popa
adc
dec
fdiv
imul
and
das
sub
popa
mov
mov
xor
xchg
inc
cmp
loopne
xor
aam
xchg
mov
sbb
mov
mov
sahf
xchg
inc
in
inc
clc
jns
cmp
dec
push
adc
xor
in
or
or
pop
add
jecxz
adc
cli
push
add
dec
xor
jbe
adc
xchg
mov
sbb
mov
cmp
adcb
xchg
xchg
xchg
mov
mov
lahf
add
loope
testl
test
test
jp
sub
pop
fistl
xchg
dec
adc
cmp
cli
lahf
daa
ss
xchg
cwtl
pop
in
movsl
enterw
mov
aaa
pop
inc
sbb
es
pop
xchg
sub
dec
out
je
movsl
in
repnz
js
adc
sub
sbb
test
scas
aam
pushf
rclb
cmp
pop
mov
mov
sbb
loopne
das
mov
pop
jle
sub
cld
inc
hlt
or
and
testl
mov
imul
sub
sub
cmp
lcall
and
subb
inc
mov
pusha
popf
pushf
mov
mov
jg
mov
mov
xchg
roll
pop
popf
outsl
inc
xchg
cltd
xchg
push
test
les
fimuls
iret
push
jo
sbb
aas
lret
out
cld
cmp
xchg
rcrl
insl
sub
pop
sub
jns
jl
pop
icebp
push
mov
and
nop
inc
pop
les
test
push
xchg
scas
pushf
in
inc
out
mov
xor
push
fsts
sarl
shr
mov
xchg
inc
adc
enter
mov
pop
jmp
cmp
push
mov
sub
adc
xor
insb
push
dec
or
in
sti
out
jne
int
bound
jmp
stc
dec
lahf
test
xlat
leave
or
sub
mov
push
mov
inc
jae
jbe
adc
mov
das
and
inc
push
and
jnp
xor
pushf
into
push
dec
mov
dec
lods
push
daa
js
out
mov
in
jnp
jge
mov
cmp
jmp
fdivrl
test
test
lds
mov
and
dec
int3
mov
aad
fildll
dec
shl
cli
cmpsb
loope
pop
mov
sbb
inc
or
inc
sbb
jno
in
xchg
dec
cmp
lock
and
add
bound
xchg
jb
pop
icebp
mov
xor
push
out
jmp
lcall
xchg
cmc
loope
lret
mov
push
cmp
sahf
jg
nop
cmpsl
outsl
mov
pop
ds
stos
andb
pop
popf
sarl
xor
cli
adc
jae
cmpsb
xchg
into
xlat
fmul
mov
jae
dec
push
add
sti
or
mov
inc
outsb
and
add
clc
mov
arpl
mov
dec
mov
ss
mov
dec
aad
andl
movsl
pop
mov
outsl
inc
push
cmp
push
inc
dec
push
adc
add
inc
jo
push
and
iret
add
pop
aad
adc
fdivrl
movsl
das
testb
mov
aaa
fbld
jecxz
sub
addr16
sub
popa
fs
ret
lods
aam
pop
mov
out
es
mov
mov
adc
or
pusha
fs
push
lods
sub
push
int3
or
mov
adc
jae
push
fsubs
jmp
popf
inc
jb
pop
movsb
or
dec
xchg
ja
mov
xor
or
jl
cwtl
pop
sbb
cmp
add
pop
mov
push
mov
and
and
inc
enter
movsb
xor
and
cmp
jmp
int
pop
jg
mov
inc
mov
or
push
push
shrl
push
stos
nop
xchg
dec
aas
daa
ljmp
cmpsl
in
aad
lods
test
push
or
dec
test
jecxz
repnz
push
jg
cmp
test
idivb
xchg
xchg
insl
frstor
pop
pusha
dec
ja
cmp
testb
popf
push
ret
stos
xchg
cmc
jp
cli
and
je
mov
and
pop
add
push
cmp
sbb
dec
lods
stos
push
mov
inc
or
loope
push
sahf
jno
sub
dec
pop
jae
push
jcxz
fnstenv
iret
jns
enter
mov
fnsave
std
pop
mov
dec
mov
adcl
pop
or
sub
sbb
xor
into
mov
lds
push
lods
or
adc
cmp
mov
inc
mov
sbb
lock
push
in
push
sub
dec
call
outsb
fsubs
loope
lds
lahf
lret
mul
sub
lcall
ds
and
inc
subb
push
imul
sbb
and
cld
pop
ja
mov
or
sub
cmp
dec
or
sbb
out
les
shl
mov
adc
adc
mov
in
cmp
pop
push
push
sbb
mov
or
fmuls
inc
jne
mov
inc
sub
adc
pop
add
xorl
mov
pop
sbb
or
ret
inc
push
adc
cld
cmp
xchg
adc
jnp
or
mov
popf
cld
xor
sbbl
leave
inc
cmp
loope
add
jno
testb
cmp
push
es
fsub
inc
pop
lock
mov
add
fiadds
neg
lock
subb
sbb
stos
fidivrs
mov
push
cmp
jne
cmp
repz
aam
pop
inc
sbb
push
xchg
inc
xchg
mov
push
test
jbe
movsb
push
inc
imul
lods
test
cmp
mov
push
das
xchg
test
xor
jb
add
je
dec
and
mov
mov
or
inc
nopl
sub
adc
fimull
cmc
and
inc
mov
sub
dec
pop
cmpb
in
mov
push
mov
inc
push
lods
popa
int
and
jge
sti
or
lods
and
sbb
scas
popf
std
or
movsb
ds
cmc
pushf
into
stos
push
and
addb
icebp
outsb
sbbl
or
sub
fmul
push
subb
ljmp
rcrb
pop
mov
jle
mov
inc
data16
es
fsts
jae
fdivrs
pop
mov
xor
cmpsl
push
aad
sub
pop
sub
mov
stos
loope
cli
fimull
sbb
mov
adc
cmp
sbb
mov
add
mov
int3
inc
sti
pusha
sub
or
mov
hlt
dec
cmc
js
inc
fildll
and
mov
mov
pop
adc
arpl
jns
mov
xchg
and
stos
jnp
daa
mov
cwtl
jge
cwtl
call
arpl
xchg
or
div
and
sub
test
rcl
dec
dec
sbb
mov
inc
rcr
push
incl
lds
pusha
in
mov
push
push
jb
ljmp
mov
test
les
inc
cmpsb
mov
les
cmpsl
in
sbb
push
xchg
stc
add
inc
sbb
in
or
movsl
add
int3
aam
pop
sbb
mov
jge
ja
dec
jae
mov
sbb
imul
mov
testl
lret
dec
mov
ljmp
loopne
push
in
jns
in
lods
and
pop
or
and
out
cmp
cmc
mov
mov
adc
lock
jne
pop
pop
fiaddl
and
leave
mov
loopne
and
mov
repnz
ret
loope
pop
out
mov
and
mov
test
pop
mov
scas
sbb
sub
push
or
scas
shr
clc
lea
ror
lods
and
insl
inc
jno
loope
xor
leave
sahf
pop
sub
mov
push
rcrl
jge
ret
ja
stos
sbb
inc
xor
xor
cmp
jbe
hlt
fistps
inc
fnsave
push
mov
ret
sbb
mull
adc
je
lret
fisubrs
xchg
insb
scas
or
jp
clc
lahf
sti
jnp
jge
dec
pop
push
pushf
inc
es
addl
mov
popf
or
gs
sbb
mov
cmp
ljmp
mov
iret
dec
movsl
cmp
mov
add
popa
mov
jbe
ja
outsb
sub
mov
cmp
lahf
out
jecxz
jne
inc
in
loopne
xchg
inc
mov
push
dec
push
xchg
ds
out
jae
aad
push
lret
loope
loope
orb
lods
sahf
cmpsl
clc
sbbl
fdiv
push
jl
xor
xchg
jmp
lds
test
scas
xchg
add
xchg
inc
cli
cmc
dec
fsts
lea
cmpsl
jnp
movsl
mov
and
mov
jmp
xchg
mov
repz
imul
jle
insb
pop
and
dec
add
ret
pop
add
dec
or
mov
mov
and
ja
push
adc
jns
loopnew
or
pop
or
imul
out
mov
mov
mov
fdivr
icebp
out
push
inc
std
xchg
push
leave
xorb
pop
pusha
int3
inc
and
mov
add
ret
fcomi
popf
lea
sbb
repz
icebp
jg
movl
and
jbe
std
test
push
inc
cmp
cmp
xchg
sti
cmp
pop
popf
test
aad
inc
inc
call
jl
mov
jge
dec
xor
pop
inc
pop
mov
aas
jg
movsb
lock
cmp
jns
or
pop
jnp
ret
shlb
pop
ret
daa
pop
sub
pop
add
fs
out
and
ljmp
test
xchg
int3
adc
sbb
mov
out
mov
mov
mov
inc
sub
jnp
jae
les
jecxz
out
rorl
leave
cltd
or
xor
movsb
dec
push
shl
jb
jecxz
pmaxsw
jbe
call
int3
pop
fs
lahf
jmp
std
xchg
outsl
push
jl
je
mov
adc
orl
or
xor
les
scas
xor
sti
mov
jg
xchg
add
pop
andb
fldt
out
call
mov
out
jge
cmp
punpcklwd
rcrb
lea
sbbb
loopne
dec
cmpsl
aam
jmp
adc
adc
lea
enter
jg
or
hlt
out
repz
mov
add
add
add
and
inc
pop
pusha
sub
cmp
nop
nop
int3
repz
in
mov
xlat
dec
adc
add
jae
inc
leave
mov
iret
pop
popf
mov
jge,pt
rcrl
lret
xchg
shll
ja
jno
lahf
and
xor
test
and
mov
sub
out
cltd
add
mov
mov
mov
jbe
jo
mov
icebp
inc
fistl
leave
sarl
clc
jae
mov
push
lock
leave
scas
mov
aaa
addr16
and
enter
fnsave
xor
cmp
and
sub
mov
pop
mov
add
lock
cli
adc
pop
xchg
inc
in
or
inc
jg
mov
mov
mov
jg
cmpsb
fwait
outsl
mov
or
jo
jl
lret
adc
cmp
loope
mov
mov
jae
je
clc
das
xchg
decb
shll
int
cmp
lret
and
or
jbe
jno
lock
aaa
and
sahf
pop
jns
mov
adc
jbe
xchg
insb
mov
push
mov
aad
lea
jl
add
push
sbb
or
or
pusha
xor
rorb
addb
stos
sub
sub
mov
inc
push
in
push
sbb
js
pushf
xchg
add
sahf
subl
add
notl
rcrl
or
jmp
sub
pop
enter
es
sub
and
ljmp
push
pop
insb
adcl
pop
ljmp
adc
add
cs
enter
xor
int3
outsb
insb
sub
and
mov
jmp
cmp
leave
dec
lret
scas
jne
inc
and
mov
aaa
addr16
pop
je
cs
push
outsb
mov
mov
std
lret
mov
mov
in
push
push
adc
pop
dec
and
sub
fdiv
mov
int3
mov
sub
std
mov
add
arpl
pop
xchg
pop
or
push
dec
cmp
mov
mov
pusha
stos
dec
js
dec
in
cmp
or
dec
into
lods
shl
insb
mov
or
rorb
aam
xorb
push
cwtl
or
pop
sub
ljmp
insb
cmove
inc
popa
mov
aaa
movzwl
loop
and
push
stc
or
sbbl
fcompl
popa
dec
jge
movsl
dec
daa
mov
lods
push
lds
xor
xchg
loopne
lahf
repnz
test
repz
inc
cwtl
roll
push
xor
arpl
in
pop
cltd
out
out
push
test
out
aam
inc
jnp
les
mull
add
push
xchg
jge
sbb
lret
jae
add
mov
adc
pop
or
mov
leave
fsub
cmp
adc
inc
and
mov
xor
pop
shlb
shrb
jl
sahf
add
mov
test
popf
xchg
push
lret
sbb
js
sbb
add
shlb
addr16
xchg
arpl
or
test
jp
pop
std
mov
mov
fcoms
rcr
outsl
call
inc
adc
lcall
mov
repz
push
sbb
jl
push
clc
aad
cmp
mov
movsb
fisubs
and
out
int3
adc
inc
movsb
test
xchg
ss
xor
in
push
cmc
into
cmp
cli
adc
out
insl
and
pop
or
pushf
sub
sub
in
stc
shlb
sti
mov
aaa
adc
mov
push
mov
push
sub
mov
lret
xlat
sti
mov
jmp
aad
push
mov
mov
or
push
mov
pusha
cld
mov
ss
jnp
mov
in
aam
lret
cmpsb
in
sbb
in
pop
jmp
andb
inc
in
pop
fwait
pop
mov
inc
jo
jbe
fistpl
pop
mov
cmp
fdivrs
jno
mov
nop
mov
fst
aaa
pop
popf
gs
dec
stos
shl
xor
pop
insb
dec
xchg
and
sahf
loopne
jge
lea
cmp
adc
stc
fcompl
enter
or
imul
cmp
pop
mov
inc
sbb
orb
cwtl
in
sub
xchg
test
fldcw
mov
sbb
out
call
stos
push
xchg
or
fmul
mov
inc
pop
lods
mov
fwait
aam
pop
mov
fistpll
inc
ds
mov
mov
mov
inc
arpl
sbb
ljmp
pop
xor
nop
leavew
insl
mov
sbb
inc
add
adc
pop
ret
and
jo
sub
sbb
xchg
sub
mov
mov
jb
mov
in
jl
mov
sub
push
mov
jo
dec
and
xchg
cmpsb
mov
cmp
fistpll
ljmp
dec
data16
cld
sti
leave
or
les
xor
mov
ljmp
adc
mov
sti
fcomps
cmp
mov
call
mov
and
cmp
jle
loop
sub
inc
pop
into
pop
xor
movsl
jbe
call
mov
push
xlat
mov
mov
dec
js
inc
add
ljmp
ljmp
push
lods
hlt
jbe
loopne
aas
aad
xchg
fcomps
cmp
imul
mov
gs
rorb
cmp
dec
leave
addl
in
test
push
out
out
loopne
jmp
xor
inc
int3
cld
push
mov
mov
mov
inc
dec
cmpsb
cmpsb
sub
xor
inc
popa
dec
mov
pop
xchg
outsb
push
subl
jo
jb
or
dec
paddusb
lea
lret
push
cmp
fwait
cmp
lcall
adc
mov
out
addr16
or
gs
mov
xor
je
push
adc
mov
xlat
adc
mov
lret
movsl
test
pop
hlt
cmp
mov
stos
mov
dec
xchg
addl
xchg
fsubrp
cmp
ljmp
cmpsb
shll
add
mov
or
pop
dec
xchg
xchg
jae
incb
gs
dec
lods
or
aas
or
scas
lcall
movsl
out
mov
dec
fs
sub
inc
loope
and
adc
iret
into
flds
test
gs
sahf
popa
idivl
push
inc
cmc
sub
jnp
mov
stos
cwtl
lcall
push
jne
cmp
jnp
sub
cld
nop
lods
inc
aaa
aas
std
inc
movsl
les
pop
push
lock
out
sti
aad
push
and
fidivrs
mov
sbb
pop
xchg
mov
ds
imul
shl
push
or
xchg
mov
cli
mov
sbbl
stc
mov
pop
orb
and
fadd
orb
ljmp
daa
sahf
cltd
frstor
into
lahf
loopne
push
loope
inc
test
das
frstor
enter
int3
fs
xchg
adc
xchg
orl
add
jmp
pop
lcall
sub
dec
xor
jbe
sub
mov
add
lock
jno
scas
jb
or
jge
fistpl
cmpsl
mov
lods
cld
mov
ret
adc
bound
arpl
or
ljmp
pop
inc
bound
movsl
jbe
fidivs
inc
mov
mov
dec
fs
and
cmc
test
xchg
cmp
sub
xchg
fsubrl
notl
leave
mov
jmp
xor
xor
nop
and
inc
sarl
pop
cld
roll
dec
cmpsb
leave
gs
adc
jo
sub
movsl
push
xor
lock
lcall
stos
mov
imul
sti
jae
mov
xchg
in
rclb
jb
and
out
mov
xchg
incl
bound
mov
fdivrp
push
mov
insb
add
xchg
pop
mov
sarb
addr16
sub
jg
xchg
adc
mov
xor
push
aaa
add
adc
cmp
stos
aaa
push
icebp
jecxz
xchg
test
es
lock
jbe
xorl
sbb
insb
mov
xor
pop
jne
cs
xchg
stos
rcrb
adc
sbb
loope
cmpsb
js
subl
sbb
dec
xchg
adc
dec
imul
or
int
fst
dec
popf
cld
mov
lds
pop
cmp
lods
int3
int
sub
outsb
push
pop
cmp
mov
jl
jge
jp
jne
and
int3
shlb
test
cwtl
leave
cmpsb
or
jne
stc
ja
mov
mul
xchg
and
mov
mov
ror
test
loopne
sub
imul
dec
addr16
leave
mov
mov
insb
mov
xorb
dec
mov
cmp
push
mov
sbb
xor
jnp
jg
pop
and
ds
insl
adc
lock
flds
push
mov
adc
sbb
aaa
xchg
mov
jmp
jp
addr16
push
mov
dec
sbb
sarb
in
scas
cmc
add
pop
push
jnp
mov
jp
mov
cmp
sub
sbb
jb
cmp
dec
add
jp
dec
and
in
push
movsl
subb
cmp
cmp
stc
jnp
test
mov
and
ret
push
and
lcall
mov
push
and
sub
and
xchg
and
cltd
imul
aaa
xor
jae
stc
mov
xchg
test
test
rolb
inc
aas
dec
cmp
imul
or
mov
cmp
ret
jo
lea
js
outsb
pop
push
daa
leave
cmpsb
loop
jne
dec
mov
scas
mov
sbb
roll
add
out
pop
xor
sahf
lea
ficomps
xlat
sbb
push
mov
divl
jge
fiadds
adc
fstpl
lods
push
push
imul
jne
inc
test
outsb
cmp
push
fmull
inc
push
ret
or
mov
sbb
fidivrs
insl
cmp
outsb
je
movsl
jg
imul
jp
push
push
lret
or
xor
fld
mov
mov
or
test
ljmp
pop
cs
aas
pop
bound
jb
or
stos
add
pop
xchg
inc
pop
shrl
sar
pop
loop
adc
or
aam
pop
fcomip
mov
xor
insb
mov
mov
test
lret
add
das
ss
push
stos
xchg
ret
lcall
popa
cmp
js
fs
lcall
dec
mov
popa
fwait
clc
ret
xchg
and
push
adc
mov
repnz
cmp
loopne
mov
mov
lea
mov
int
mov
sub
push
xchg
orl
push
cld
jmp
mov
inc
imul
and
sbb
stos
pop
lods
cs
loop
inc
cmp
bound
out
jmp
xchg
mov
xchg
rclb
mov
or
aas
mov
dec
cltd
add
pop
sbb
movsl
sbb
inc
mov
subb
pop
mov
jp
jge
pop
adc
fiaddl
in
jmp
fcomi
arpl
stos
lds
fwait
testl
nop
jns
and
movsb
inc
lahf
iret
or
push
pop
fisubs
iret
test
cmp
shll
mov
das
mov
push
push
pop
out
jmp
pop
sbb
mull
fdivrl
mov
sub
ret
inc
inc
sbb
mov
jge
push
test
push
jne
cmpsl
pushf
loop
mov
mov
je
leave
outsb
adc
dec
dec
in
scas
cmp
cli
cmc
sub
sub
dec
sub
mov
xchg
cltd
inc
in
fsincos
int
push
fdivrs
pop
iret
or
iret
test
mov
aad
scas
in
bound
cwtl
and
pop
arpl
pop
adc
adc
jno
cltd
add
pop
adcb
add
lods
cmp
shrl
mov
aaa
dec
xor
xchg
aad
push
imul
mov
pop
ret
pop
dec
xchg
and
fldl
sub
inc
aas
adc
add
or
out
pushf
mov
sbb
mov
cmpsb
pop
xlat
loop
or
sub
jl
xor
pop
xchg
jae
in
shll
and
sub
mov
mov
shl
mov
pusha
sbb
rcrb
je
les
shlb
imul
shll
and
lods
sahf
mov
push
mov
ja
xor
lahf
orb
inc
cmp
push
or
cmc
lcall
xchg
adc
int3
add
and
cmp
fcomps
aad
jmp
pop
adc
movsl
sahf
or
cmp
xorb
mov
lds
loop
ficomps
arpl
cmpsl
mov
das
insb
div
xlat
ficoms
pop
or
pop
or
int3
inc
arpl
cmp
xchg
mov
fdivs
aad
subb
pop
scas
push
ret
pop
fbstp
add
clc
push
das
test
lock
insb
mov
jle
rolb
or
adc
sub
push
mov
add
mov
xchg
hlt
mov
xchg
mov
fdivs
push
mov
push
push
cmpsl
clc
and
mov
mov
scas
nop
les
stos
and
js
mov
lahf
inc
mov
adc
lock
push
sbbl
mov
mov
pop
jl
inc
dec
insb
loope
in
adc
sub
lds
pushf
inc
enter
dec
xchg
cltd
adc
jp
and
sub
jg
cmc
sub
and
ror
sub
sahf
jns
jmp
cwtl
push
jb
test
push
aam
sarb
dec
clc
stc
dec
pop
fwait
hlt
inc
test
mov
aaa
jae
sbb
jo
rorl
test
imul
jp
in
jmp
pop
mov
daa
jno
repz
mov
dec
cmpsl
std
loope
repnz
inc
fstpt
arpl
dec
adc
xchg
mov
iret
out
mov
jle
jbe
stc
and
pop
ss
adc
sub
xchg
fisttpl
into
pop
lret
stos
jae
movb
sbb
jns
push
lret
bound
ja
bound
xchg
addb
cmp
sub
pop
sbb
call
mov
push
push
daa
and
mov
mul
jns
bound
mov
ja
jne
int3
cmp
sbb
adc
in
adc
fldenv
int
add
fsts
aad
cmpsb
loope
adc
stc
mov
out
mov
cmpsb
sarb
sbb
jno
pushl
mov
and
icebp
mov
push
jb
testl
fisttpl
mov
popa
jp
sti
jl
nop
movsl
xor
xchg
inc
lret
sbb
hlt
fisubs
xchg
sti
pop
out
outsl
mov
stos
add
inc
scas
jne
xchg
xchg
and
add
aam
fwait
fs
and
xchg
call
pop
xchg
and
aam
mov
pop
ja
dec
sbb
sbb
pop
repnz
adc
lds
mov
push
pop
js
lods
lods
jne
call
mov
adc
xchg
xchg
lds
xchg
push
inc
cmp
or
cwtl
cmpsb
sti
lahf
xchg
ficomps
mov
pushf
mov
pop
pop
or
jmp
xlat
nop
gs
dec
std
and
popa
cmc
pusha
add
cmp
aas
mov
adc
pop
stc
in
icebp
movsl
pop
ja
addb
call
je
mov
pop
dec
mov
ja
ret
inc
pop
mov
test
adc
dec
or
jle
loope
pushf
jmp
and
pusha
and
cs
into
scas
add
pusha
cmpsb
xchg
sub
fists
or
dec
sub
pop
push
inc
push
loop
mov
aaa
jge
clc
sbb
cmp
mov
and
sbb
inc
data16
inc
mov
add
dec
cwtl
movsl
mov
and
xchg
sbb
lea
cmpsb
rcrl
cwtl
ja
push
in
js
adc
xchg
repnz
imul
cwtl
sbb
cli
xor
cmp
std
push
cs
andl
sub
or
shlb
rcll
mov
insb
dec
xor
rcll
jnp
add
mov
xchg
adc
mov
sub
xchg
jo
jmp
sbb
out
in
xchg
movsb
pop
jp
adc
fistpll
addl
pop
or
and
sarl
rcrl
js
and
aad
js
ds
iret
sbb
sub
and
test
xchg
jge
jg
out
inc
add
jmp
push
jno
loop
pop
jns
imul
adcb
int
xchg
ss
fstpl
xor
cmpsb
push
ror
adc
imul
push
mov
sbb
pop
pop
mov
into
shrl
adc
and
dec
xor
dec
sti
fisttps
pop
jne
data16
das
jecxz
or
xor
and
movsb
sbb
sub
inc
andl
loopne
into
mov
pop
cmp
outsl
xor
mov
adc
adc
int
mov
mov
jmp
adc
mov
addb
lret
or
and
jae
mov
test
out
inc
sbbl
xor
dec
outsl
pop
cmp
cmc
pop
mov
jne
mov
fcomps
popa
and
aas
push
sbb
test
fdivp
mov
sahf
jns
push
test
inc
rorb
push
pushf
xchg
cld
jg
addr16
leave
mov
xlat
mov
xchg
xchg
pusha
lods
and
ljmp
shlb
dec
add
rorl
mov
and
js
push
jb
lods
ja
mov
add
in
sub
or
pop
pop
repz
xchg
and
repz
xchg
iret
das
dec
lret
stos
addr16
in
jae
outsl
xlat
adc
jmp
lahf
scas
sbbb
aad
cs
mov
jae
ss
xchg
movsl
lods
jne
jmp
or
dec
mov
lret
pop
aam
pusha
push
fdivrs
rcll
popf
clc
jl
sbb
mov
sbb
jl
movl
inc
mov
mov
enter
test
pop
cmc
push
adc
sbb
lock
sbb
aad
test
add
negb
movsl
subl
ror
add
mov
js
aas
mov
dec
ja
icebp
xor
sbb
mov
or
xor
or
xchg
or
cmpsl
mov
adc
jecxz
stos
popf
cmpsb
cmp
outsl
pop
addr16
sub
stos
pop
pop
out
mov
mov
jne
fmuls
nop
mov
push
dec
inc
ret
stc
pop
pop
subl
mov
xchg
jb
push
cmp
pop
sub
sahf
aam
sub
jo
sbb
jbe
rcl
push
rclb
cmp
lahf
dec
outsb
sbb
dec
or
call
icebp
aam
or
fucomp
fimuls
hlt
int3
add
sbb
mov
insl
mov
cmc
call
and
ja
getsec
adc
out
push
jbe
dec
cs
add
xchg
xor
cmc
jne
push
mov
frstor
addr16
mov
cltd
mov
popa
mov
mov
out
add
adc
stc
popa
cwtl
push
add
add
pop
sub
bound
into
pop
sbb
mov
in
je
mov
inc
cmc
fsts
jno
cmp
fists
jns,pt
test
out
jne
mov
cmp
xor
mov
push
and
push
vmread
mov
mov
clc
scas
jno
cmp
inc
add
add
xchg
mov
pop
mov
int
pop
jnp
xchg
pop
mov
push
cld
fimuls
mov
rolb
jae
mov
lret
jnp
pushf
mov
repz
jae
adcb
outsb
mov
adc
dec
out
in
xchg
adc
xchg
xchg
push
dec
daa
jnp
or
sub
imul
testb
sub
cmc
xor
push
cmp
int3
js
push
clc
jbe
ret
push
xchg
mov
mov
mov
lcall
xchg
testl
inc
sbb
test
sub
js
dec
out
xchg
bnd
in
and
or
push
push
xchg
mov
in
icebp
es
dec
fsts
std
and
test
pop
push
insl
cmp
sub
lret
fsubs
adc
rol
add
sub
mov
flds
add
in
popa
ret
jp
insl
mov
mov
cmp
mov
jae
or
xchg
imul
pop
mov
push
sahf
push
adc
sbb
call
hlt
sub
sarl
cltd
enter
cli
or
jecxz
xchg
mov
cmp
cwtl
push
stos
mov
movsb
adc
ljmp
es
cmp
jns
fwait
mov
call
pop
or
pop
nop
push
push
addl
sti
add
push
loopne
insb
mov
pop
xchg
test
aaa
lock
ja
cmp
mov
test
mov
fisubl
xlat
mov
xchg
movsb
movsl
out
call
repnz
insl
push
cs
xchg
aas
inc
or
xlat
mov
jg
or
das
push
sbb
sbbb
leave
mul
sbb
fcmovnbe
out
imull
dec
or
add
pop
inc
push
pop
xor
xor
push
movsb
xchg
mov
xchg
pop
sub
cmp
jecxz
mov
int3
sbb
aas
push
and
jb
inc
jbe
das
or
and
xor
xor
sub
sbb
ljmp
pushf
sbb
fs
xchg
cmp
cmc
dec
mov
movsb
jl
push
cmp
jge
push
aaa
inc
test
rolb
mov
fidivrs
xor
mov
fcom
bound
jbe
in
cwtl
push
add
add
cmp
inc
scas
sbb
mov
cmp
icebp
jl
idivl
push
out
ret
addr16
xor
int
loopne
cwtl
ficoms
sub
lcall
pusha
in
mov
ret
lahf
popf
scas
dec
leave
lods
int
jnp
jle
mov
jne
sub
push
scas
lret
xchg
jle
xchg
adc
sub
repnz
pusha
mov
cmp
dec
ss
dec
rcr
cmpsl
and
fcomps
mov
das
sub
mov
scas
lahf
jge
dec
cs
shl
lret
lret
push
xchg
pop
stos
cmpsb
sub
fcoml
divb
xor
loope
push
push
inc
push
or
and
adc
fbld
daa
xor
lea
push
xchg
pop
sarb
aas
adc
les
xchg
ret
lock
xlat
int
leave
xchg
ficoml
mov
mov
leave
sub
push
mov
or
add
xorb
sbb
pushf
imul
mov
movl
or
xor
int
pop
or
xchg
test
dec
mov
adc
inc
adc
out
jne
fwait
data16
push
js
add
notl
rcll
rolb
out
push
mov
cld
mov
bound
push
pop
jle
cmpxchg
imul
lods
aam
mov
jg
fists
mov
xor
fidivrs
push
inc
pop
test
xchg
into
adc
xlat
movsb
mov
and
ss
scas
scas
imul
ret
pop
push
cmp
mov
add
mov
mov
mov
and
xchg
inc
aas
aam
mov
jne
push
clc
xchg
rcll
push
xor
orl
and
xchg
mov
sbb
jnp
stos
cmp
push
cmpb
subl
lods
daa
add
mov
mov
mov
pop
xchg
mov
jmp
shlb
jns
xchg
lret
or
sbb
aad
faddl
test
cmp
div
into
or
xchg
inc
iret
popf
sbb
jg
icebp
xchg
sbb
fwait
sub
loop
adc
jmp
push
lahf
fwait
xchg
inc
xor
jmp
push
pop
lret
pop
push
rcl
mov
adc
clc
and
jns
jmp
fcmovnb
decb
negb
es
push
iret
adc
jbe
std
cwtl
xor
jae
pop
daa
adc
dec
push
dec
cmp
adc
out
and
fs
jmp
and
scas
adc
cli
mov
adc
imul
call
sbb
loopne
rolb
xor
idivb
shlb
jne
and
scas
fdivs
pop
mov
ds
pop
add
pop
stc
pop
mov
fsubl
add
repnz
enter
rclb
pop
jp
xor
add
sub
jne
pop
repz
sbb
push
imul
movsl
sarl
lods
add
repz
mov
ljmp
inc
adc
or
ss
jnp
inc
cmp
imul
xor
lds
mov
mov
dec
fsubrl
call
data16
pop
mov
leave
lret
shrb
jo
leave
lods
xchg
or
lcall
notb
sbb
inc
mov
loope
and
shrl
push
mov
fistpll
add
iret
andnps
lret
jp
movsl
and
xchg
pop
jge
push
jmp
push
sbb
out
push
aaa
pushf
push
ljmp
nopl
sarl
stos
mov
loope
lahf
cmc
shr
xchg
mov
testl
push
mov
into
and
repnz
shl
push
or
lret
fs
inc
xor
loop
ret
cld
push
push
mov
inc
std
adcb
lods
push
sub
cmpsb
incl
movsl
dec
data16
jecxz
insl
mov
xchg
pop
inc
xchg
mov
fwait
cwtl
adc
add
loope
int
inc
in
fldpi
pusha
sbb
scas
mov
push
enter
xor
cmpsl
xchg
mov
sti
sarb
sub
and
xor
push
xchg
add
mov
sbb
xor
xlat
arpl
in
push
negb
out
pop
aam
xor
sbb
xchg
cltd
jl
cs
mov
mov
jmp
mov
movsb
je
mov
imul
sti
pushf
adc
mov
push
adc
lods
das
push
sub
daa
es
pop
and
add
sbb
jg
jl
shr
stos
xchg
into
xor
nopl
dec
lret
cmp
dec
aas
cmp
adc
push
jl
inc
imul
lret
xchg
and
aam
movsl
mov
mov
or
cli
hlt
test
mov
cwtl
mov
jl
pop
jmp
sbb
add
cmp
mov
clc
xor
cmp
mov
and
add
jns
xchg
in
iret
mov
jg
mov
cltd
imul
int
mov
cli
jb
aam
ret
addr16
jmp
and
mov
ja
stos
lods
adc
movsb
fwait
inc
pop
std
adc
call
pop
dec
mov
sub
or
je
and
pop
xchg
out
std
test
das
push
xor
mov
push
clc
ret
rorl
inc
cmp
imul
add
or
js
mov
shrl
xchg
push
movsl
mov
jo
inc
xchg
cld
add
in
cwtl
in
pop
push
adc
pop
add
mov
pop
mov
mov
adc
add
rcrb
fs
xchg
nop
cmp
scas
mov
stc
sbb
pop
sbb
sbb
clc
sbb
pop
bnd
in
pop
dec
hlt
mov
dec
mov
sbb
and
pop
pop
pop
cmpsb
nop
rolb
aam
scas
rorb
jne
pusha
stos
jne
add
add
dec
add
fwait
xor
ret
mov
rolb
push
je
fldt
ja
out
mov
adc
ret
xor
repz
gs
mov
mov
fwait
movsl
xorl
loope
dec
sbb
dec
in
xchg
add
push
lea
or
and
lcall
in
jnp
loop
dec
push
movsb
es
mov
push
flds
rclb
int3
ficoms
sub
mov
and
cmp
mov
repz
fildll
loopne
sbb
loop
xchg
jle
xor
adcl
leave
dec
pop
cmp
stc
addr16
or
adc
dec
scas
push
inc
cmp
leave
mulb
dec
cmpxchg
mov
fisubrs
xor
sti
xlat
inc
aam
add
or
imul
aad
ja
rdpmc
mov
mov
jnp
testb
mov
adc
or
jno
mov
pop
enter
pop
jbe
out
fidivl
cmovno
je
int
inc
dec
push
ljmp
enter
lret
and
xor
ja
push
fcoms
jb
inc
pop
sbb
dec
andl
push
outsb
ret
movsb
out
sub
call
jae
jl
imul
mov
jmp
mov
movsb
or
cld
cmp
ljmp
adc
movq
subb
sub
xchg
mov
mov
test
ja
mov
rorb
adc
dec
mov
sbb
in
mov
xlat
jne
sub
js
push
or
sarb
push
mov
add
je
icebp
in
movsl
and
test
adc
cmc
mov
sub
adc
enter
icebp
add
gs
mov
int
xor
push
or
pop
cmp
sti
xor
jnp
or
add
lock
push
test
pop
xchg
call
and
cs
and
mov
push
push
inc
test
aaa
add
xor
push
es
cli
inc
outsl
lods
inc
lods
rorl
jl
fldenv
inc
and
xchg
clc
test
mov
add
push
clc
outsb
push
in
mov
dec
xchg
ret
mov
mov
ja
je
ljmp
lahf
outsb
mov
cmp
out
data16
inc
test
push
btc
xchg
adc
fcomps
sub
add
jns
clc
jno
out
sub
pop
jne
xchg
cmp
inc
xor
loop
xchg
stc
cmpsb
xor
pop
inc
loope
xor
xor
push
dec
insl
lea
push
shlb
lret
sbb
push
pop
jnp
outsl
lods
in
ds
scas
setae
push
and
aad
enter
inc
jecxz
es
imul
sbb
arpl
je
and
in
mov
jae
pop
sbb
lahf
out
inc
dec
mov
in
lds
push
push
bound
inc
add
out
push
rcl
sub
and
inc
rcll
mov
inc
loop
add
std
pop
xor
jo
xlat
jp
xchg
rcrl
and
mov
lcall
push
mov
rolb
dec
jb
cmp
dec
inc
nop
add
cwtl
scas
xchg
les
mov
outsl
test
inc
adc
fwait
xor
js
or
cmp
cmp
xor
inc
mov
pop
lahf
inc
lcall
pop
ret
adc
aas
out
or
js
add
jno
sbb
pop
add
sbb
mov
or
pop
dec
leave
stos
dec
scas
enter
or
push
in
clc
xor
daa
roll
sti
xchg
roll
dec
enter
adc
cmp
mov
add
out
sbb
dec
jmp
jo
fisttps
imul
jae
pusha
shrl
imul
testl
int
rclb
sbb
mov
movsb
dec
aam
jle
in
lods
or
jo
add
in
dec
adc
mov
ds
pop
call
xchg
jne
dec
fstl
or
or
add
fnstsw
xor
faddl
dec
jmp
and
jno
mov
rolb
dec
bound
pop
out
pop
lahf
outsb
push
inc
mov
loopne
imul
imul
cmp
pop
pusha
insl
rcl
jbe
aam
xor
dec
jmp
cmpsl
lret
lahf
push
pop
lret
sahf
bndstx
aaa
fwait
cmp
mov
jg
adc
bound
sub
les
jbe
std
pop
pushf
int
fldt
cmpsl
fucomp
cmp
jp
fwait
or
and
gs
sti
fiadds
rorl
mov
out
call
push
clc
pop
dec
mov
and
repz
insb
inc
fdivrl
push
push
jae
sarb
xchg
daa
mov
mov
or
pop
cwtl
lock
lret
fdivrs
pop
jnp
sarb
movsb
in
mov
push
jle
push
int3
dec
mov
repnz
leave
xchg
sarb
jae
xchg
sbb
mov
inc
xor
jno
outsl
mov
cmp
mov
sub
inc
push
cmp
repz
mov
nop
cmpsb
xchg
inc
xor
dec
jb
fcomps
cmpsl
push
cs
inc
dec
mov
jmp
daa
push
mov
dec
add
outsl
inc
and
lods
adc
adc
pop
cltd
mov
jle
mov
arpl
iret
ja
sbb
hlt
mov
sahf
dec
jecxz
test
pop
leave
icebp
jne
or
test
xor
or
gs
mov
sub
lea
jl
loope
shrl
xor
movl
loopne
lea
xor
jle
sbb
cmpsl
sbb
test
sub
mov
fnstenv
cmpsl
addb
outsl
push
jecxz
pushf
outsl
les
lods
out
cmc
cmp
arpl
stos
or
add
pusha
pop
data16
rcrl
insl
lret
dec
or
rcrl
and
inc
clc
in
das
into
push
pop
stos
fisubrs
push
mov
je
out
stos
inc
fcomip
sbb
push
shll
xor
cmp
fsubs
dec
mov
xchg
insb
shll
dec
sbb
sub
dec
xchg
lcall
frstor
enter
std
lea
fstl
fadd
cmp
jl
orb
adc
cmp
xorb
pop
jnp
or
loope
pop
gs
mov
mov
or
dec
in
and
adc
xchg
jp
add
call
in
push
mov
mov
xchg
sbb
inc
mov
push
lcall
loop
addb
inc
mov
outsb
nop
sti
lods
push
icebp
lds
fbld
in
out
jb
xchg
cmp
fwait
cmp
ja
shl
jge
adc
sbb
std
dec
xchg
fcompl
into
sbb
call
nop
in
sub
sbb
pop
sbb
fwait
out
cmp
pop
jge
sti
bound
or
outsl
stos
sub
aas
jbe
jbe
mov
js
or
hlt
add
mov
pop
call
push
lret
and
sbbb
dec
out
cmp
inc
sbb
push
cmp
into
repz
aad
sbb
dec
inc
and
push
mov
xor
stos
repz
in
arpl
and
mov
xor
mov
mov
jno
jge
jle
cmp
xchg
push
adc
pop
mov
jno
repz
and
out
addr16
ja
xor
lahf
cmpsb
lds
mov
and
sti
and
adc
sbb
push
aad
and
outsb
or
test
ret
sbbl
adc
jb
sub
or
dec
lahf
mov
sub
aaa
aas
lock
fmuls
rclb
pop
fmull
xlat
test
add
fcmovnbe
pop
or
lods
out
cmp
in
scas
push
and
test
ficomps
sbb
xchg
jns
je
dec
fnstsw
sbbl
mov
add
cmp
xor
std
xor
mov
jns
ffree
xchg
dec
jb
mov
arpl
xchg
xor
pop
pop
jb
into
and
clc
mov
pusha
mov
int
xchg
pop
pusha
ja
aaa
dec
outsb
mov
bound
adc
push
fisttpll
dec
cs
pop
pusha
cmpsb
jne
outsb
imul
jae
out
or
sub
imul
mov
cmpsb
movsb
movsl
sbbb
pop
in
cmp
push
std
popa
sbb
or
out
and
fildll
lcall
xor
shll
pop
ret
sahf
mov
sub
dec
jno
mov
or
adc
into
jmp
pop
cvttps2pi
ljmp
shrl
pop
outsl
mov
pop
mov
xchg
sub
xchg
insl
test
push
out
stc
cmpsl
jo
ds
pusha
dec
js
bound
fwait
and
dec
xor
pusha
add
push
or
xchg
or
sbbb
pop
loopne
xor
push
xlat
sti
repz
push
jmp
push
in
aas
dec
mov
test
cmc
xchg
adc
ja
imul
test
push
movsb
cmp
push
fbstp
sub
xor
push
ss
out
mov
dec
cmp
jnp
mov
ljmp
cmp
xor
pop
dec
dec
xchg
cmc
repz
sub
popf
int3
push
insl
push
mov
loop
mov
leave
mov
sub
nop
adc
pop
mov
mov
jnp
pop
lcall
loopne
cmp
sbb
mov
xchg
js
js
pop
xlat
stc
pop
loop
xchg
inc
cs
outsb
gs
inc
or
js
les
xchg
mov
pusha
je
xor
mov
fmull
or
and
sub
outsl
ret
add
add
sub
or
je
mov
fbld
push
xor
cmp
inc
pop
mov
test
inc
push
mov
fcmovbe
std
je
cmp
sbb
xchg
pop
repnz
xor
inc
lods
push
adc
and
jnp
dec
mov
lret
mov
out
xchg
iret
inc
sbb
xchg
cmp
lret
fcomps
call
mov
inc
pop
out
pop
stos
sub
xor
int3
and
movsl
enter
or
leave
push
mov
std
ficoms
push
and
ja
cmc
jmp
add
imul
mov
push
xchg
dec
and
mov
jecxz
or
jmp
in
adc
inc
push
imul
jae
loop
adcb
cmp
or
jp
shll
and
test
or
andb
adc
adc
in
add
pop
ds
jnp
test
cmp
mov
or
and
sbbb
mov
repz
ds
push
mov
mov
gs
xchg
mov
mov
imul
imul
rcrl
push
mov
push
xchg
mov
xchg
pop
xchg
xor
int
pop
jl
sti
sti
das
jnp
and
lds
dec
cs
jns
mov
lds
cmpb
sbb
xor
jns
call
pushf
add
pop
cld
pusha
add
fstpt
nop
test
xchg
fwait
xor
int3
mov
jmp
cmp
loope
mov
fcompl
orl
aas
jmp
add
dec
or
dec
fisubrl
mov
call
cmpsl
popa
mov
xchg
inc
out
lcall
out
mov
lea
movsb
bnd
pushl
mov
outsl
or
xor
push
pop
cli
jnp
push
cmp
in
idiv
outsb
dec
testl
loope
mov
xchg
les
xor
ret
xchg
or
lods
mov
mov
dec
xor
add
jo
add
add
add
add
add
xchg
test
add
push
out
cmpsb
mov
nop
nop
mov
mov
mov
stc
loope
insb
test
inc
mov
mov
scas
rcrl
cmp
and
or
sbb
ficoml
sub
aad
inc
dec
or
shrb
out
adc
push
lret
mov
rcr
dec
hlt
push
mov
dec
cmp
cmp
xchg
cld
sbb
fimuls
sbb
jle
sub
push
aas
inc
jmp
sbb
sub
jecxz
aaa
nop
xchg
sti
push
and
push
andl
sub
inc
cld
outsb
imul
inc
jecxz
sti
jo
hlt
cmp
pop
shll
loop
adc
lds
push
mov
fsubr
jmp
pop
pop
out
fsts
aad
lods
sarb
adc
js
add
mov
or
shlb
nop
dec
outsb
and
fcoms
lea
push
sti
repnz
dec
adc
daa
in
hlt
sbb
push
arpl
loop
cld
jge
pop
ss
jmp
xchg
adc
push
xchg
adc
or
and
clc
mov
sbbl
xlat
fdivrs
add
mov
sub
js
jp
adc
mov
push
sbb
sub
jmp
pop
cld
jl
popf
cmp
mov
jl
pop
in
adc
add
dec
and
leave
adc
jecxz
dec
sahf
es
rcl
mov
out
inc
jl
out
xchg
xchg
sub
inc
mov
inc
xor
rolb
jle
bound
out
mov
push
ds
mov
andl
ret
push
xor
call
insb
repnz
jp
cmpsl
inc
stc
sbb
stc
pushf
pop
out
mov
and
mov
cwtl
ret
aas
jmp
stos
repnz
adc
ss
adc
cmc
mov
push
xchg
in
nop
insb
jp
mov
sti
cmp
cmp
and
mov
push
inc
gs
lahf
jne
and
ret
lock
fsubrs
cmpl
or
sti
pushf
dec
fcoml
mov
call
dec
popa
gs
insl
xchg
arpl
adc
out
lcall
adc
loop
lods
sub
mov
and
push
mov
loope
pop
mov
or
inc
cmp
or
pop
in
add
roll
lods
rcr
pusha
xchg
push
ja
lea
lcall
je
and
sbb
testb
dec
cmpsb
xor
je
lret
lea
and
fcomps
xchg
scas
pusha
xor
mov
xchg
cmp
push
ss
jbe
es
add
js
or
pop
xchg
fdivrs
sub
mov
mov
aaa
cmp
inc
cmpsb
push
mov
xor
in
xor
stc
lret
jp
adc
mov
adc
push
fmull
loopne
or
xor
mov
jo
xchg
sub
into
mov
xchg
loope
sub
lret
xorl
lret
ljmp
fbld
or
jns
lahf
or
sbb
jb
aaa
arpl
fcmovnb
add
fildl
mov
push
sahf
jmp
pop
xchg
mov
test
push
pop
clc
push
dec
rol
test
mov
sti
and
neg
add
cld
or
jne
add
and
outsl
xchg
pop
push
addr16
jmp
cmp
push
mov
pop
and
repnz
mov
test
stos
and
jg
jbe
das
push
lahf
in
push
xor
add
inc
inc
js
mov
pop
das
mov
and
aad
xlat
in
lahf
data16
repnz
pop
jg
sub
sbb
xchg
add
and
lahf
fldcw
push
xor
aaa
sbb
xor
dec
pop
cld
icebp
mov
shld
fcmove
out
mov
rcrb
jp
sbbb
adc
adc
mov
repnz
nop
jb
gs
xchg
pop
and
jbe
mov
das
push
leave
sti
test
fdivrs
pop
add
bound
push
inc
xchg
mov
mov
mov
and
dec
pop
xchg
rorl
jmp
nop
ror
fbld
add
js
jmp
and
outsb
push
xchg
mov
les
pop
mov
cltd
fsubr
test
adc
mov
push
jnp
cli
insb
xchg
push
cld
aad
lock
and
jae
loopne
aad
xchg
xor
mov
jns
stc
shrl
xchg
lock
mov
push
popl
in
fisttps
int3
add
mov
adc
cs
rcrl
or
jno
mov
dec
ds
cmpsl
inc
out
addl
mov
add
sbb
clc
lea
or
dec
xchg
repz
shll
mov
add
mov
sub
clc
sub
test
cltd
and
arpl
mov
cmpsl
mov
jl
push
sub
inc
outsb
loopne
push
in
push
pop
cs
inc
mov
push
mov
pop
fcoms
mov
mov
int3
adc
jb
rcll
ret
lea
stc
mov
loope
cmpsl
adc
xchg
xchg
out
sub
jbe
cltd
insb
shlb
fwait
add
test
mov
dec
cmp
push
xlat
xor
es
sub
into
adc
and
xchg
push
and
dec
inc
sub
push
and
fs
or
xor
stos
pop
or
clc
or
sub
bnd
jmp
outsl
fisubs
ss
jmp
push
mov
pop
insb
sub
repnz
in
mov
mov
ja
jge
stos
pop
mov
xor
adc
or
add
xor
gs
lods
leave
xor
push
inc
stos
jnp
call
mov
nop
int3
ret
and
scas
loopne
pusha
es
inc
xchg
pop
ret
fcoms
loope
scas
rclb
mov
cmpsl
scas
mov
clc
negb
movsb
mov
xchg
aas
inc
mov
mov
iret
dec
or
cmp
mov
or
mov
popf
sub
jp
and
push
and
mov
divl
sahf
xchg
outsl
iret
fmul
scas
lret
outsl
mov
xchg
dec
sbb
insl
push
mov
jge
mov
test
xor
mov
cmp
cli
sub
in
int
negl
xchg
int
scas
imul
push
mov
insl
mov
sub
ficomps
icebp
mov
in
push
inc
call
or
add
xor
cmc
hlt
xor
movsb
push
adc
dec
ja
rcrb
dec
dec
int3
push
cltd
out
movsl
rol
push
testl
iret
jmp
and
es
inc
lcall
lcall
lds
stos
scas
mov
sbbl
xchg
jae
mov
jo
jp
cmp
out
add
loopne
dec
cs
fcoms
aaa
cmp
ret
pop
xchg
lret
pop
fs
pop
ror
mov
lods
or
inc
adc
shlb
mov
or
out
pusha
xchg
subl
adc
jnp
or
sub
push
es
sti
cli
cmpsb
mov
push
test
add
ds
daa
fists
xchg
or
or
mov
cmp
je
pop
mov
jbe
lea
xchg
pop
scas
cmp
jg
mov
imul
insb
xchg
enter
icebp
push
dec
adcb
cli
jo
pop
jecxz
pop
dec
mov
loopne
pop
jmp
outsl
test
rolb
and
shl
mov
nop
jne
data16
dec
sar
imul
mov
xor
jnp
mov
sbb
sti
popa
lds
sbb
cmpsb
ja
xlat
mov
cmp
inc
outsl
cltd
inc
lret
ret
rorb
mov
inc
stc
mov
scas
and
insb
dec
mov
xor
push
out
test
pop
sbb
inc
dec
sbb
sub
pop
mov
push
mov
inc
lret
fisubrs
push
popf
adc
fmul
adc
cmp
xchg
inc
or
xchg
outsb
lret
or
pop
jl
pop
mov
call
loopne
jg
cld
jmp
outsb
or
push
insl
mov
or
jo
repnz
ss
stc
nop
lea
std
mov
push
pushf
and
add
and
mov
jl
loope
cltd
jns
fistpl
in
aad
insl
addl
or
ret
dec
lock
ja
xor
mov
cmpl
loop
sbb
push
dec
jg
mov
sarl
xchg
popf
divb
std
cltd
pop
push
test
iret
pop
aam
xor
repnz
hlt
xchg
lret
lock
hlt
sbb
cmpsl
daa
call
scas
mov
and
dec
sbb
push
xor
or
push
xchg
fbstp
pop
inc
in
jb
jp
mov
jno
mov
dec
mov
in
push
xor
and
jbe
mov
or
jg
add
push
in
pop
negl
addr16
cmp
in
notl
jge
out
jo
bound
repz
iret
push
dec
int
jbe
or
add
add
pop
and
push
pop
sbb
lret
sahf
gs
aad
jne
inc
sub
std
ret
xchg
push
mov
test
mov
in
mov
hlt
add
jne
adc
or
sti
push
xchg
pop
shrl
aam
or
sbb
in
out
or
add
mov
xchg
add
js
repz
push
pop
push
fsubrs
add
jno
jae
mov
xchg
leave
in
add
int
scas
jne
imul
jle
push
push
pop
cli
das
push
xchg
test
mov
adc
nop
cmpl
xchg
mov
jne
addb
push
cmp
sbb
movsb
sbb
jnp
lret
icebp
arpl
js
xchg
pop
add
out
xor
jecxz
mov
dec
xor
or
out
or
push
addr16
fistps
pop
dec
xchg
xchg
xor
jbe
add
push
popa
outsb
cwtl
repnz
mov
imul
and
pop
stc
aaa
xchg
and
imul
movsb
jnp
pop
inc
adc
shl
mov
aas
jns
shll
into
dec
and
int
mov
outsb
mov
add
pop
dec
lret
push
push
fcoml
pop
pusha
hlt
pop
adc
int3
sub
fmuls
ret
shlb
mov
add
push
cmpsl
ret
call
aas
sbb
push
push
and
mov
cld
loope
mov
cmp
mov
pop
jae
idivb
clc
push
dec
sar
or
stos
xlat
rcl
jns
jp
dec
xchg
pop
enter
ja
push
and
call
cmpsl
mov
movsbl
mov
arpl
popa
or
jns
push
loope
sub
sbb
adc
inc
dec
cmc
inc
clc
mov
sub
mov
jns
dec
xor
dec
and
cmc
jo
imul
push
int3
push
in
adc
lods
cld
hlt
pop
fdivrs
ficomps
popa
std
dec
xchg
lahf
adc
scas
mov
clc
xchg
add
subb
sbb
jne
mov
rorb
and
mov
mov
sbb
sahf
shl
aad
nopl
push
push
add
lods
in
inc
outsb
lock
jle
movsl
daa
cwtl
mov
data16
fbstp
adc
sbb
inc
push
push
cmp
test
mov
pop
mov
cmpsl
jns
mov
and
mov
stc
dec
dec
icebp
rcrb
test
ds
test
pop
fmul
shlb
mov
aad
xor
ds
or
fcom
ja
jnp
sti
sub
xchg
clc
mov
lock
loop
std
test
leave
rorb
cmpsl
sub
sub
pop
mov
pop
add
sub
and
or
test
in
ret
push
ret
push
fwait
pop
add
inc
push
les
loope
push
ret
push
faddp
int3
push
xchg
add
bound
lods
insl
jmp
inc
insl
and
push
or
sub
cltd
ror
sub
cmp
adc
adc
out
pop
dec
repz
xchg
ljmp
mov
insl
mov
sub
or
out
inc
or
pusha
cmp
cwtl
xor
mov
cmp
push
testb
mov
lods
and
jae
and
daa
dec
xor
jb
add
add
ficoms
or
xchg
cmp
adc
cmp
jecxz
push
imulb
repz
out
sub
lea
ds
mov
addr16
insl
cmc
ja
cmp
push
jge
fcomps
dec
sbb
xchg
div
jnp
fsubrp
push
mov
xchg
push
inc
and
and
mov
mov
bound
xor
push
jb
jp
xor
cmp
cltd
je
aad
push
fisubl
adc
xchg
sbb
xchg
pop
ja
add
pop
mov
popa
push
cmp
fcoml
mov
mov
xchg
sub
push
push
jg
lods
jmp
mov
jl
movsb
pop
hlt
mov
xor
sub
push
mov
enter
push
push
xchg
cs
in
sbb
mov
test
loope
mov
xchg
jl
lahf
scas
and
cmpsb
add
add
je
insb
jecxz
or
out
sbb
nop
cmp
mov
rolb
ljmp
or
mov
xchg
xchg
mov
mov
cltd
movb
pop
xor
and
jp
mov
jge
das
jno
call
shrb
cmp
pop
sub
xchg
aam
aam
ss
clc
repz
fisttpl
outsl
lea
scas
in
dec
fisubs
and
mov
jge
jne
lea
mov
daa
lcall
push
inc
inc
sarb
add
cwtl
int
ds
cmp
mov
or
mov
add
data16
pop
sbb
dec
loop
cmp
shll
in
roll
sub
aad
mov
addr16
addr16
mov
sub
jmp
inc
or
xchg
cmp
xlat
scas
xorl
sub
out
and
and
movsl
push
pop
jp
pop
and
push
leave
pop
push
inc
inc
xor
leave
sub
pusha
fstp
mov
jo
addl
movsb
mov
xchg
dec
sub
divl
pop
subb
data16
adc
stc
dec
shrl
nop
imul
lret
jmp
xlat
cmp
dec
idivb
jae
loope
inc
cmp
sbb
mov
push
pop
enter
sbbl
leave
push
xlat
dec
xchg
or
xchg
xchg
xchg
sarl
sub
daa
xlat
loopne
xor
mov
aaa
sbb
jge
inc
out
mov
pusha
cwtl
push
test
js
fidivrl
cmp
iret
dec
push
xchg
fdivr
fisubl
mov
cmp
and
dec
call
std
adc
push
popa
xor
ljmp
inc
loopne
jge
sahf
cmp
mov
mov
xlat
adc
aad
jecxz
pusha
pop
call
into
outsl
mov
inc
mulb
or
push
push
icebp
addl
push
sbb
pop
adc
lea
cmp
sub
inc
adc
dec
mov
sub
loope
mov
xorl
pop
hlt
in
cmp
fs
je
xor
lret
dec
inc
nop
sbb
ret
add
add
adc
add
aaa
jbe
mov
xchg
pop
clc
jge
jle
sub
movsl
dec
js
ret
push
cwtl
adc
add
subb
stc
push
pop
or
lahf
pusha
cld
movsb
rcl
addl
adc
mov
add
imul
xchg
and
lods
pop
lock
outsl
jecxz
lret
test
lea
jns
cmpl
pop
mov
cmp
call
scas
xchg
cmp
mov
addr16
icebp
push
sbb
sub
xadd
imul
mov
cmpsl
arpl
mov
mov
scas
xchg
push
rcrl
mov
inc
subl
test
js
loope
adcl
sub
and
sbb
sahf
xchg
rolb
out
sub
mov
or
mov
sbbb
repz
fsts
sti
jge
mov
or
dec
mov
jns
imul
mov
push
mov
stos
jecxz
int
pop
mov
add
push
pop
shll
out
subl
test
xchg
or
xor
shr
mov
push
add
cltd
cmc
ret
fcom
imul
movsl
push
cmp
into
fdivrl
aam
loope
add
leave
fstpt
push
mov
cmpb
push
js
and
sub
sarb
pushf
mov
les
mov
xor
ss
jne
jle
lods
push
cmp
ss
xor
cmc
pop
decb
jae
lock
ss
jle
inc
sarb
sub
addr16
sbb
test
mov
movsb
xchg
mov
push
shlb
stc
dec
inc
push
imul
xchg
scas
sub
jp
pusha
push
and
cmp
shlb
ficoml
out
popa
dec
repnz
xchg
movsb
repz
call
decl
push
or
scas
test
cmc
shrb
or
mov
into
xchg
and
bound
adc
les
aam
adc
mov
jge
jmp
ja
movsb
sbb
rcll
sbb
lods
aaa
mov
lock
push
lret
sub
mov
ficoml
cmp
fcomps
and
jge
xor
inc
in
cmp
sub
add
cmp
cmp
jl
add
test
pop
pop
inc
call
mov
out
fstl
or
ss
mov
pop
das
lret
cmp
out
push
mov
addr16
movsl
mov
int3
fistpll
xor
cs
mov
pop
fwait
dec
xor
push
push
je
lret
repnz
lret
jecxz
mov
fsubl
push
into
adc
jmp
nop
push
das
popa
cmp
repnz
sub
cmp
movsl
or
mov
dec
push
sbb
adc
add
dec
ja
inc
cwtl
xchg
out
push
cmc
lods
inc
into
inc
shll
shrb
les
gs
sbb
mov
cmpsb
rcrb
cmp
stos
xchg
cmp
sbb
push
push
pushf
push
int3
loopne
out
dec
mov
mov
push
cmc
jns
lds
adc
mov
out
daa
or
xlat
pop
mov
mov
std
mov
sub
aad
pop
iret
rclb
and
pop
mov
aad
call
ret
jns
aad
mov
jp
aas
sub
mov
add
test
mov
fs
and
ljmp
xchg
loop
pop
aas
and
mov
pop
and
out
lods
pop
dec
ss
mov
popa
xchg
add
inc
xor
pushf
adc
repz
inc
push
xor
xchg
pop
add
jmp
jns
insb
push
dec
push
fidivrs
inc
cmp
rcrb
je
add
xchg
in
pop
cmpsl
inc
addr16
in
fistpll
pop
sbb
out
mov
test
clc
jnp
loop
add
outsl
adc
jns,pn
and
test
cld
jnp
sti
dec
dec
pop
cmpsb
negb
lret
pop
xor
gs
add
add
and
in
mov
std
mov
test
mov
lret
loopne
jns
or
in
jnp
aam
loopne
adc
mov
or
lods
jmp
imul
sbb
sbb
fxch
push
mov
scas
outsl
rcl
stos
pop
dec
rclb
cwtl
mov
ss
mov
aas
push
lea
in
mov
rcll
and
or
das
xor
add
jb
mov
adc
push
mov
je
and
mov
bound
dec
and
pop
xadd
sar
jo
sbb
insl
je
xor
xchg
add
and
scas
rolb
clc
dec
inc
cmc
ret
cs
cmc
pushf
sbb
xorl
idivb
aad
mov
jle
out
xchg
fs
sti
jl
mov
mov
sahf
orb
lods
xchg
or
cltd
xchg
scas
mov
mov
fisubs
stos
in
rcrb
pop
mov
xchg
xchg
in
bnd
xchg
mov
aad
sub
outsb
mov
fsubrl
outsb
lcall
loope
pushf
cwtl
xchg
ss
xchg
mov
push
ficoml
jp
in
pusha
xor
mov
cmp
mov
cld
push
or
sub
pop
outsl
jo
fimuls
xchg
jecxz
fbld
imul
fnstenv
adc
cltd
fs
jle
xchg
mov
mov
sbbb
mov
mov
call
or
mov
jle
push
inc
sbbb
xchg
int3
jl
jmp
cwtl
fld
add
mov
adc
or
or
xchg
pop
loop
popa
mul
or
mov
sahf
mov
or
cs
mov
in
clc
mov
add
adc
sbb
mov
jne
es
insb
cmpsb
push
popf
mov
jno
and
mov
pop
jmp
jl
aad
daa
jae
sbb
loopne
pushf
hlt
adc
sub
xchg
xor
pop
xor
push
rcr
mov
popa
mov
lods
imul
int3
xor
stos
lahf
test
fdivrl
push
lret
in
mov
mov
nop
adc
cmp
sbb
into
xlat
pop
sub
cltd
mov
push
in
fs
jbe
pop
test
cmp
fisubrl
sbb
loop
xchg
or
jp
out
push
lds
fcmovne
cmp
mov
cld
inc
loope
movl
jae
inc
mov
repnz
pop
loope
pop
mov
sahf
mov
jno
cmp
add
inc
div
repz
push
or
mov
mov
dec
mov
and
fildl
cmp
lret
sub
test
xchg
insb
pusha
push
pop
dec
inc
ja
bound
xlat
mov
sub
in
xor
dec
pop
pusha
pop
mov
xchg
pop
loope
dec
xchg
jmp
mov
xchg
cmpsb
jge
popa
pop
and
xchg
aas
add
pop
cmp
or
pushf
xor
fsubs
xchg
sub
popf
or
jle
push
fdivr
add
stc
push
or
ror
jb
xchg
fnstsw
scas
in
aad
out
and
into
movsb
push
mov
stos
shrb
imul
loopne
repnz
xchg
icebp
jg
push
pop
push
mov
jge
fadds
in
cmp
fcomi
cmpsb
pop
fwait
dec
mov
getsec
stos
or
jecxz
mov
mov
sbb
push
xlat
int
fwait
loope
cmpsl
inc
or
jp
int3
adc
inc
push
lods
pop
cltd
push
imul
out
inc
cs
xchg
jne
mov
or
insb
dec
repnz
xchg
test
inc
push
loop
jmp
ret
into
sub
jo
mov
xor
sarb
ret
push
pop
xor
popf
xor
jmp
ret
sti
ss
jge
push
push
cltd
ljmp
sahf
rcr
out
add
jge
clc
lahf
fmul
sahf
push
mov
mov
cmc
mov
sub
loop
lcall
and
mov
in
add
fisubl
mov
arpl
cld
xor
or
lcall
push
jg
enter
mov
xlat
and
mov
rclb
inc
jae
sub
add
loop
lea
mov
xor
adc
outsb
pop
stos
rorl
cmpsl
sbb
out
adc
in
inc
sbb
test
frndint
and
pmaxub
inc
add
cmp
das
or
xor
jns
sbb
push
dec
xor
leave
loope
pop
jle
xchg
test
push
sahf
inc
push
push
add
mov
iret
clc
testb
pop
inc
pushf
xchg
mov
push
test
add
jns
cwtl
not
stos
push
push
out
cmp
push
data16
rolb
or
cmc
vsqrtsd
ljmp
jle
push
outsl
in
fildl
mov
wrmsr
or
leave
movsb
fbstp
nop
fisttps
or
sbb
inc
popf
cmpsb
cmpsb
pop
les
aad
xor
lods
xchg
dec
enter
xchg
and
fsubrs
mov
xchg
mov
icebp
das
in
xor
and
jmp
or
loop
and
inc
and
nop
sub
mov
in
jl
pop
mov
or
mov
std
add
clc
pop
rorb
shlb
and
cwtl
add
rclb
sub
inc
and
clc
cmp
add
std
mov
mov
aaa
push
xlat
xor
pop
sub
sub
arpl
xor
pop
and
clc
into
lret
adc
pusha
fs
mov
push
cmp
mov
icebp
sbb
dec
std
lock
jge
outsb
daa
mov
aaa
sub
pop
cmp
inc
pop
cmpsl
or
dec
imulb
jmp
push
dec
fdivs
shrb
cwtl
xchg
fiadds
je
sti
outsb
mov
push
pop
mov
fsubrl
mov
iret
fnsave
ss
dec
add
jle
mov
dec
cwtl
ds
cmpb
xchg
mov
mov
in
cmpsb
add
mov
fstpl
lcall
gs
jae
mov
imul
rcrb
mov
pop
out
mov
xchg
popa
imul
pop
inc
test
aaa
lcall
pop
out
adc
mov
sub
stos
mov
sbb
leave
gs
int
and
mov
test
mov
ljmp
fcoml
arpl
xchg
sub
fcmovnb
mov
ret
subl
mov
mov
push
cmp
lret
test
mull
sub
jg
xor
fiadds
rorl
xor
pop
shlb
testb
std
add
mov
cmp
push
icebp
sbb
and
in
push
pusha
popf
popa
jmp
cmpsb
sbb
mov
dec
cmp
ret
mov
daa
and
add
adc
push
push
shlb
sbb
sub
adc
sub
mov
push
cmp
add
out
sbb
pop
push
jge
mov
repz
fisubs
arpl
ljmp
popf
pop
adc
or
lea
std
cmp
out
pop
push
mov
fnstsw
jg
fwait
mov
and
dec
fidivrl
ds
in
aas
xchg
loopne
mov
xchg
mov
cmp
dec
push
jp
dec
xchg
jo
sti
push
fisttpl
push
xchg
leave
mov
xor
cs
dec
mov
test
xchg
dec
lret
push
out
lock
rorl
push
lods
mov
pop
push
mov
mov
sub
cmpsb
cmc
std
fs
lods
or
mov
push
stos
in
pusha
lock
xor
mov
push
or
pop
std
shlb
js
mov
xor
pop
xchg
add
cmp
repnz
test
mov
adc
je
mov
pop
repz
jo
pop
cwtl
outsl
xchg
fs
leave
dec
lret
enter
jmp
mov
imul
inc
out
imul
les
icebp
add
mov
xor
and
pushf
mov
mov
mov
push
mov
jnp
xor
aam
mov
in
sbb
jb
sub
repnz
sbb
add
mov
cmp
fidivrl
cmp
add
cmpb
cmpsl
insl
xlat
std
push
pop
leave
mov
mov
insl
es
jnp
sarb
jl
push
imul
dec
js
lock
popf
jb
je
mov
lds
lods
mov
popf
adc
adc
aas
mov
mov
mov
enter
mov
shrl
ret
pushf
cmp
push
push
mov
popa
sbb
cmp
mov
xchg
and
lds
mov
clc
sbb
xchg
ret
jnp
cwtl
cmp
outsl
jno
jmp
add
test
imul
insl
mov
aaa
lcall
jb
adc
push
adc
dec
mov
mov
sbb
testb
mov
cmpsb
lock
xor
dec
test
insl
lahf
xlat
adc
push
rolb
cli
fistl
xor
xor
cmp
sub
cmp
mov
xchg
jg
std
pop
cmp
or
sub
jmp
shlb
lret
jl
xorb
ret
int3
enter
push
cmp
fidivrs
mov
mov
mov
xor
pop
insb
cmp
and
repnz
dec
enter
shr
mov
loop
cltd
cli
sbb
or
gs
dec
jb
fcmovb
out
insl
clc
jne
rcrb
push
test
xor
fstps
xchg
mov
xor
add
xor
xor
inc
adc
mov
fildl
mov
daa
std
pusha
add
lcall
sub
mov
xor
xor
sub
inc
cli
mov
enter
cli
bound
inc
jns
pop
dec
sub
fcoms
pop
adc
lods
xor
xchg
lcall
jmp
dec
mov
arpl
add
pop
mov
lret
sbb
clc
pop
xor
lea
outsb
rcrb
dec
mov
inc
cmc
enter
ss
cmp
sub
jmp
or
push
xor
orl
mov
ss
sbb
shll
addr16
fisubl
pop
fnstsw
xlat
adc
in
xor
test
sahf
js
je
fptan
jne
in
js
lea
xlat
inc
jle
adc
es
add
jnp
xor
mov
mov
in
mov
mov
mov
cmp
push
mov
xor
add
mov
dec
insb
sbb
jae
jo
lds
mov
cltd
add
dec
hlt
int
xor
popa
lcall
addl
mov
fistpl
stos
cmc
dec
inc
incl
sub
aam
xchg
es
jno
lret
call
cmp
jnp
lea
sbb
insb
ret
cwtl
sbb
arpl
cli
and
add
jp
sti
mov
leave
mov
and
rcrl
aad
out
daa
inc
out
in
pop
fwait
mov
aas
and
add
or
add
inc
out
pop
popf
cmp
imul
and
sahf
loope
fs
mov
mov
push
lds
jb
adc
stos
ss
adc
into
push
jae
orl
fcoml
mov
movsb
push
jns
aas
and
push
shrl
enter
hlt
push
in
test
mov
push
sbb
jne
cmp
xchg
lds
lods
iret
pop
inc
mov
dec
test
sub
jge
jl
fbld
pop
or
rcll
dec
pop
pop
ja
or
sub
inc
movsb
out
mov
xor
out
ficoml
stc
mov
push
mov
dec
push
inc
xor
imul
jb
mov
push
or
cmp
sbb
mov
cmp
int3
sbbl
mov
sahf
andl
push
inc
fs
insl
ror
pop
xchg
mov
push
or
das
cmp
xor
sbb
ror
sbb
push
push
rol
sti
mov
xchg
pop
mov
inc
mov
cli
mov
inc
fwait
cmc
dec
sbb
iret
test
outsb
and
fwait
mov
in
cmc
dec
in
mov
inc
fwait
xchg
std
mov
xchg
xchg
aam
mov
push
pop
xchg
lods
sti
sbb
xchg
mov
push
popf
mov
outsb
and
mov
das
fs
movsb
push
call
lea
mov
push
cli
ljmp
repnz
sbb
insl
and
adc
push
inc
mov
add
xor
sub
mov
addr16
pushf
cmpsl
add
cmp
shl
xor
jg
mov
xchg
inc
jne
adc
xchg
repnz
xor
lock
icebp
push
and
jbe
jg
or
and
and
rcr
out
test
testl
add
ret
jmp
in
leave
imul
add
and
insl
push
fs
sub
int
mov
inc
das
not
movsb
mov
cmp
mov
das
in
int3
adc
mov
mov
or
pop
mov
xor
sub
stc
cli
call
je
xchg
sub
mov
dec
imul
xchg
int
ja
in
cld
lock
jge
clc
mov
xchg
mov
dec
loopne
movsb
sbb
jg
aam
mov
int3
push
in
xchg
or
aam
mov
push
out
arpl
xchg
test
sbb
cwtl
xchg
adc
out
mov
rcrb
jb
pop
jg
into
mov
inc
in
jl
sub
jno
faddl
jbe
fs
bound
push
cmp
aad
pop
mov
jo
test
xor
mov
xchg
imul
cmc
sub
and
dec
and
add
aam
dec
or
mov
sbb
ss
jns
xor
or
push
repnz
cmp
out
rcrb
lea
dec
aas
fsubrs
lock
mov
push
fmull
sbb
pop
imul
mov
test
les
xchg
or
lds
add
adc
add
lds
lods
and
ret
pop
or
xor
les
fisttps
gs
inc
lahf
popa
push
mov
pop
xor
xorl
push
popf
sub
dec
fdiv
adc
dec
push
lods
mov
fmull
jg
popa
push
sbb
xchg
insb
jle
arpl
or
orb
cwtl
sbb
add
inc
inc
ret
or
and
pop
jecxz
imul
xchg
and
nop
sarl
mov
dec
je
shll
inc
add
scas
dec
mov
cmpsb
pop
cmp
fwait
stc
mov
test
orb
jmp
test
or
xchg
pop
push
lret
arpl
mov
xorb
ret
mov
test
push
cmp
sbb
repnz
mov
xchg
add
pop
push
cmpsl
mov
adcb
xor
mov
mov
dec
sti
clc
sbb
cmp
jno
rcrl
lret
xchg
stc
in
sub
xor
outsb
mov
jl
xor
push
cmpsl
or
xchg
xor
sbb
mov
scas
pop
sbb
fwait
in
inc
sarl
dec
cmpsl
enter
jl
outsb
mov
icebp
push
cs
ja
xlat
mov
pushf
movsb
das
cmp
pop
adc
dec
add
sub
out
loope
insl
loopne
push
push
jl
testb
dec
mov
xor
xchg
movsl
repnz
les
fcmovnu
lret
dec
test
sbb
xor
call
mov
iret
pop
sub
add
jns
sub
cmpsl
test
repz
adc
cs
hlt
adc
insb
cltd
xor
and
test
inc
push
clc
ljmp
js
and
cld
lea
sbb
mov
in
mov
add
xchg
mov
mov
mov
mov
xor
fisttpll
mov
mov
push
or
aaa
ds
cmpsl
xorb
imul
stc
pop
lret
mov
dec
mov
mov
mov
mov
xchg
fdivrl
fld
sub
mov
add
jno
sub
jne
mov
or
lahf
push
lea
daa
fbld
fidivrl
into
push
cld
insl
imul
sbbb
rcrb
pop
or
jl
xchg
mov
testb
lods
fwait
jnp
idivb
mov
push
rcrl
push
add
out
std
xorl
push
jle
sbb
mov
aad
push
xor
or
adc
mov
cmpsb
dec
add
cmp
dec
inc
addr16
adc
cmp
into
mov
fstps
jnp
mov
ja
subl
dec
dec
xor
mov
pcmpgtd
mov
mov
mov
lock
call
fidivl
in
xchg
roll
popa
movsb
add
add
jnp
imul
inc
call
pop
or
dec
mov
xchg
and
jg
and
std
mov
repz
lods
inc
dec
loopne
or
jnp
mov
out
push
and
stos
pusha
add
mov
imul
ljmp
lods
mov
fdivl
or
and
pushf
insl
or
mov
sbb
xor
push
mov
sahf
out
lock
mov
mov
ret
add
xor
inc
mov
imul
ret
jns
incb
dec
jb
sahf
fdivrs
or
in
out
mov
sub
push
aas
mov
nop
lea
test
inc
xor
xchg
jge
fisttpll
pusha
int
cmp
sbb
cwtl
jle
out
iret
divl
mov
lea
jmp
shlb
xor
insl
mov
fldenv
jmp
xchg
ljmp
cltd
push
push
sbb
pop
push
adc
fisttpl
pcmpgtd
xor
mov
mov
push
mov
adc
test
dec
test
loopne
test
xor
inc
mov
sbbl
rcll
int3
scas
fwait
push
jns
pop
pop
or
add
xchg
test
xor
xchg
add
sbb
cmp
xchg
es
push
shrb
fcompl
clc
mov
bound
xor
adc
sbb
das
jmp
stos
jg
or
jne
cmpsl
fwait
out
int
fbstp
push
or
popa
movsl
outsb
mov
push
mov
push
roll
mov
xor
repz
hlt
xchg
ret
inc
cmc
mov
jns
sbb
jg
fucomi
jmp
rcrl
or
fpatan
enter
mov
aaa
clc
xor
cli
sbb
jno
mov
mov
and
xor
test
lahf
push
hlt
sbb
inc
sub
sub
pushf
pop
nop
and
push
inc
and
xor
mov
mov
pushf
das
dec
shll
xchg
xor
mov
inc
cmp
sub
sbbb
jne
mov
int
outsb
pop
pushf
or
sub
mov
mov
cltd
pop
enter
adc
sub
incb
aaa
inc
add
add
push
pop
mov
sub
ljmp
hlt
sbb
sbb
movsb
xchg
mov
into
sbb
insb
hlt
mov
push
xchg
fcomps
iret
dec
iret
and
adc
xor
pop
dec
cmc
call
popf
mov
vorps
fsubrs
lahf
decl
sbb
sub
sub
andb
dec
adc
mov
outsb
sbb
add
mov
xor
fcomip
push
ror
shr
outsl
popf
mov
pop
iret
mov
fpatan
and
nop
mov
and
std
or
cmp
dec
roll
push
and
popf
fld
and
call
sahf
xchg
orb
dec
xor
inc
jmp
in
mov
stos
cmpsl
xchg
fcomi
add
pop
je
push
cmp
pushf
cwtl
clc
sub
shlb
frstor
jg
add
and
add
adc
fwait
lods
lods
lea
inc
mov
ds
ja
js
pop
add
jle
pop
aas
push
sbb
jmp
jnp
mov
insb
lods
sub
jb
sub
or
sub
int3
repz
out
imul
imul
sbb
sarb
xchg
mull
loopne
xchg
lods
fwait
stc
or
ret
iret
scas
jge
push
imul
out
sahf
and
cwtl
scas
pop
and
dec
popf
add
sbb
lcall
add
xlat
add
scas
jb
insl
mov
add
pop
dec
mov
nop
pop
pop
nop
nop
out
xor
inc
fsubrl
testl
dec
jnp
popa
sbb
jmp
int3
outsl
jge
push
sbb
leave
ds
pop
add
outsb
or
push
dec
dec
je
mov
mov
mov
fldt
or
jns
pop
stos
scas
aaa
bound
fs
out
les
mov
xor
or
or
lahf
arpl
push
jne
xorl
add
push
dec
xchg
xor
loop
stos
inc
lret
pop
stc
jecxz
or
jp
ljmp
xor
arpl
add
jmp
pop
fiaddl
add
mov
mov
call
pop
enter
sahf
jns
stc
pop
jg
ja
std
les
movsb
cmp
push
cs
fisttpll
mov
imul
aam
adc
pushf
out
sbb
mov
add
cmpsl
sbbb
xor
xor
test
sbb
fwait
dec
xchg
mov
loopne
rcrb
push
sarl
arpl
push
testl
lods
cmpsl
in
cmp
inc
sub
arpl
and
and
inc
out
adc
test
xchg
push
mov
imul
sbb
adc
cmpsb
hlt
sub
jl
jnp
rcrl
in
popa
push
sub
loopne
xlat
push
mov
adc
inc
pop
jo
inc
cmp
pop
mull
loopne
push
push
scas
pusha
push
or
or
xchg
sub
in
mov
pop
jle
mov
idivl
out
xchg
stos
xchg
cmp
flds
fwait
inc
mov
sub
dec
mov
je
or
mov
lahf
pop
out
and
jns
arpl
lods
and
dec
pop
sub
cmpsb
mov
ds
icebp
dec
lcall
add
cmp
or
iret
jbe
mov
push
dec
sub
decb
je
adc
mov
lcall
xchg
push
jecxz
stos
and
cltd
mov
mov
test
in
loop
insb
aam
xor
sub
pushf
cli
mov
mov
and
scas
mov
xchg
and
call
icebp
mov
loopne
cmpsb
imul
sub
shrl
jmp
inc
mov
movsb
pushf
mov
xchg
mov
leave
push
mov
push
icebp
dec
jecxz
pop
or
fwait
add
in
hlt
rorb
lea
add
inc
lahf
sub
sti
pop
push
inc
jnp
bound
scas
test
in
sbb
cmp
push
loope
push
mov
pop
ret
lea
xchg
das
inc
bt
push
lods
jle
shlb
and
imul
call
jg
das
sub
jne
mov
out
push
add
int3
xchg
cmp
xchg
adcb
and
fwait
mov
out
ss
pop
pop
push
pop
in
cwtl
dec
or
mov
push
loopne
mov
test
jge
mov
jle
sarb
insb
or
add
movsl
sub
pop
push
jns
mov
add
or
test
push
leave
daa
fsubs
jmp
sub
or
outsb
lahf
lahf
inc
lret
jp
lock
jmp
insl
or
xchg
jo
ljmp
adc
jl
or
jecxz
and
lahf
sub
sbb
in
shrl
xchg
into
repnz
add
add
pop
push
outsb
jmp
adc
dec
add
cli
ss
scas
clc
cmp
test
xor
loop
in
jge
xchg
jno
or
scas
out
jne
or
mov
xchg
mov
xor
out
in
lcall
inc
sar
lea
and
sub
mov
sbb
loope
cs
and
cld
imul
jns
pop
add
adc
inc
sub
pop
adc
pop
nop
popf
sub
xchg
mov
jns
jp
daa
xor
jle
loop
dec
push
leave
mov
mov
pop
imul
out
fnstsw
push
out
cwtl
nop
mov
jae
shrl
xor
xchg
jmp
mov
loop
xchg
repnz
mov
icebp
arpl
mov
outsl
rclb
xlat
push
add
or
loope
imull
cltd
in
jle
icebp
cmpsb
jns
loope
jmp
jl
lcall
xor
cwtl
dec
lahf
adc
icebp
dec
push
mov
or
mov
xor
shlb
cs
xchg
gs
aas
adc
mov
es
outsl
cld
pop
ret
xchg
repnz
aas
sahf
inc
int3
or
add
cmpsb
push
push
in
movsl
jae
push
adc
jnp
mov
cli
and
and
pop
cmc
and
outsb
sbb
ds
shl
cmp
add
pop
and
xor
dec
mov
mov
stos
add
sahf
mov
cmp
sub
pop
mov
fstps
push
dec
lcall
ficomps
jecxz
or
or
ja
sbb
sbbb
ret
add
call
sbb
fwait
cmpsb
push
aad
and
push
dec
shll
dec
push
sbb
ret
out
mov
jecxz
push
inc
dec
and
stc
xor
pop
je
inc
aas
push
jecxz
cmp
cltd
and
fstpl
imul
lret
arpl
sti
xor
shrl
mov
push
push
lahf
or
in
pop
xchg
nop
int
pushf
pushf
popf
mov
inc
and
push
and
nop
outsl
scas
gs
mov
sti
jns
cld
sbb
inc
push
pusha
xor
xchg
mov
lea
or
test
mov
push
test
pop
test
les
pop
mov
pop
mov
pop
out
or
das
shll
mov
icebp
push
or
mov
add
std
xchg
xor
fstl
test
xor
cmpl
pusha
and
xor
pop
movsb
shrb
scas
mov
out
xor
jne
hlt
jp
push
subl
dec
push
adc
xchg
xchg
pop
fistpl
les
mov
mov
popa
fs
testl
jnp
adc
call
scas
jp
cmp
and
sub
or
imul
cmp
or
push
imul
dec
shll
adc
sbb
pop
jp
sub
cmp
cmpb
cli
das
dec
mov
or
inc
loope
enter
cmpsb
mov
js
loope
mov
push
inc
cmc
call
popa
scas
xor
subb
loope
or
adc
sub
pop
sbb
sbb
data16
clc
pop
lahf
pop
cmc
xor
add
xchg
or
mov
cmp
mov
fwait
mov
jnp
inc
outsl
mov
jp
imul
sbb
add
shll
or
in
sub
fs
push
test
sti
ds
rcrb
sbb
andb
outsb
and
fstpl
mov
pop
clc
push
call
push
sub
sub
mov
xchg
pop
mov
jl
inc
sub
cmp
xchg
cli
subl
test
fnstsw
dec
add
jge
or
ss
mov
repz
fcoms
fucomip
gs
cltd
mov
or
mov
xchg
movsb
sarb
push
pop
lret
xor
cmp
mov
arpl
les
ret
jb
jae
idivb
or
cli
jg
nop
lods
cmp
outsb
testb
in
xchg
aas
fs
push
popa
xor
mov
sub
outsb
mov
xlat
clc
jmp
add
dec
fwait
sti
xchg
fdivrs
xor
scas
mov
jbe
arpl
cmp
add
mov
push
mov
mov
scas
jne
out
int
fs
cmc
adc
out
cmp
fists
lea
std
inc
or
and
cld
dec
dec
mov
imul
dec
and
fldenv
dec
sub
dec
fidivrs
sub
les
mov
xor
push
shrl
stos
mov
mov
pop
imul
cmc
lds
xlat
inc
cmp
enter
ljmp
pop
inc
sub
sub
mov
lret
mov
xchg
xchg
mov
jno
arpl
jno
inc
xchg
mov
and
iret
outsb
jg
pop
mov
repnz
xor
xor
loope
decl
adcl
repnz
push
mov
mov
pop
adc
xor
xor
add
cmpsb
dec
cmp
in
daa
add
sub
popa
xor
or
test
xor
adc
je
mov
ror
push
mov
mov
lods
fadds
movsb
pop
pop
sbb
in
fildl
mov
mov
lcall
in
adc
pop
push
shl
sahf
js
out
sbb
in
jmp
mov
iret
mov
mov
nop
test
xlat
mov
xlat
out
fstl
gs
sub
aam
ret
cmp
pusha
int3
call
mov
xchg
out
divl
out
sbbl
cmpb
sbb
in
fsubp
test
mov
mov
cmp
mov
mov
addr16
or
dec
or
mov
lea
addr16
subb
imul
scas
sub
fwait
and
jns
or
and
push
push
push
popf
adc
movsb
enter
xchg
inc
nop
mul
les
and
out
mov
enter
pusha
outsb
xor
test
jl
push
imul
icebp
scas
idiv
mov
pop
sub
jmp
fdivs
mov
sbb
or
xchg
push
fisttpl
or
repz
mov
lcall
rorb
ljmp
sub
adc
dec
stos
jmp
pop
mov
or
adc
jge
mov
insl
mov
loopne
fwait
cltd
arpl
in
fldcw
sbb
icebp
push
push
mov
mov
or
jmp
mov
ret
enter
je
popa
xlat
inc
push
clc
insb
jle
sub
xor
mov
or
lods
mov
outsl
mov
cs
add
test
in
jno
fs
nop
sbb
mov
mov
fmulp
jno
or
pop
or
popf
sbb
dec
inc
loope
sub
push
push
adc
mov
test
mov
push
and
cmp
mov
popa
aas
inc
jae
pop
mov
adc
jnp
stos
or
scas
clc
outsb
add
stc
in
add
lock
mov
xor
xchg
stos
movsb
aaa
xor
adc
cmpsl
mov
inc
shr
je
jns
stos
sub
push
jle
sbb
stc
pop
loopne
sti
cmp
add
cltd
sbb
pushl
sbb
inc
sbb
xchg
adc
mov
or
scas
pop
movsb
xchg
pop
mov
jnp
mov
cmp
icebp
pop
mov
xchg
hlt
add
pop
test
mov
mov
test
jno
mov
sub
dec
sub
out
ja
mov
into
sti
cmp
pop
repz
mov
lods
sub
es
pop
mov
pushf
loope
dec
mov
mov
gs
jecxz
or
or
shlb
ss
pop
cltd
xchg
push
mov
sbb
ds
testb
cmp
sbb
loopne
lret
test
push
sub
push
mov
lret
push
cmpsl
jns
negb
pop
lock
inc
inc
adc
test
xchg
pop
inc
popf
and
sbb
jle
stos
xchg
sub
jmp
arpl
scas
call
pusha
or
ja
dec
pop
cmc
adc
inc
mov
out
popf
xchg
mov
dec
mov
fwait
pop
ss
insl
sbb
xor
stc
mov
sub
xor
xchg
repz
dec
mov
bound
dec
jo
ljmp
jg
dec
leavew
outsl
ja
adc
shrl
out
hlt
jmp
mov
or
test
daa
les
cmp
popa
jo
fwait
xchg
mov
mov
jg
mov
sub
iret
je
add
dec
aas
fisttps
sti
push
push
sub
sbb
and
iret
das
test
xor
xor
stos
ljmp
mov
or
or
out
adc
call
dec
cmp
gs
adc
mov
pop
mov
push
scas
jle
ds
push
inc
out
and
movl
int
pop
xchg
or
lods
mov
mov
add
cmpsl
dec
push
and
fwait
xchg
outsb
sub
arpl
mov
test
leave
push
lea
cmp
jae
add
push
fadds
cltd
dec
dec
jl
fstpl
les
and
and
mov
test
xchg
aas
loope
js
xor
scas
push
sti
dec
xchg
lock
stc
mov
shr
notl
hlt
push
mov
andb
sub
pop
add
mov
xchg
mov
xor
xchg
int3
dec
mov
pop
fistpll
pop
roll
or
inc
pop
xchg
adc
inc
into
pop
sbb
imul
rorb
xorl
das
aaa
xor
stc
and
scas
sub
iret
jle
shlb
jl
stc
xor
aam
sub
dec
mov
sbb
xchg
xor
jo
mov
mov
fistpl
mov
mov
sub
stc
lret
mov
mov
push
test
aad
nop
mov
scas
jo
mov
or
les
jb
ja
jmp
push
cmc
jg
sbb
pop
xchg
pop
lcall
stos
mov
jmp
aaa
xchg
pop
sbb
jp
out
mov
add
ficoms
mov
fwait
sti
jmp
sbb
fcmovnu
in
imulb
mov
ror
mov
dec
pop
adcb
xchg
dec
cmp
pusha
adc
insl
movsl
ds
or
add
shll
cmpsb
push
mov
mov
test
fcoms
out
fwait
jb
cld
fst
mov
out
jl
loopne
js
sbb
negl
pusha
and
mov
or
neg
mov
mov
xchg
ljmp
sbb
add
mov
das
js
dec
sbb
in
sbb
sahf
mov
or
dec
inc
push
xchg
jecxz
and
mov
adc
mov
dec
cmp
rcl
dec
pop
rcll
lods
fmul
xchg
or
push
jl
mov
inc
inc
push
and
and
inc
pop
jl
push
push
pop
insb
jp
push
mov
icebp
or
loopne
cmp
lret
jecxz
pushl
enter
sub
in
mov
sbb
std
test
cpuid
test
in
inc
fsubrs
iret
out
mov
in
lds
jns
jl
mov
jae
adc
dec
pop
jne
mov
popa
notl
pop
ja
push
das
mov
and
es
repnz
inc
cwtl
ja
sub
jno
jo
repz
sub
das
inc
in
and
xor
lock
mov
loopne
or
dec
sub
adcb
sbbl
mov
push
stos
mov
lods
das
addr16
adc
or
pop
pusha
mov
aaa
gs
pop
or
and
cwtl
mov
mov
imul
ret
mov
pushf
mov
out
and
sub
scas
test
jg
add
dec
and
adc
adc
add
add
ja
lods
icebp
cmp
subb
mov
pop
jae
mov
repnz
dec
cs
pushf
inc
mov
dec
in
add
adc
fsubl
mov
mov
mov
xchg
pop
mov
cmp
addl
arpl
inc
mov
fsubrl
mov
add
mov
fs
js
shll
je
xlat
rorb
cmp
xlat
aaa
lea
push
stos
aas
outsb
mov
shl
mov
and
fadds
cmpsl
inc
test
lret
dec
fidivs
add
push
mov
add
adc
fistps
ja
int3
mov
cmp
mov
mov
pop
stos
hlt
mov
inc
adc
dec
inc
aas
push
pop
loope
cmpl
xor
add
push
xor
repz
lds
jb
mov
in
push
mov
and
cld
gs
stos
and
mov
bound
scas
xchg
push
cmpsl
mov
out
ret
inc
mov
push
scas
jae
clc
and
sti
sbb
and
arpl
mov
jle
popf
jo
in
jnp
push
jmp
xor
mov
inc
xchg
fs
jns
mov
cmp
mov
repz
xor
xchg
cmp
out
cmp
push
xor
repz
mov
lret
mov
and
push
jg
inc
je
imul
test
push
inc
icebp
in
sbb
or
cwtl
jno
fbld
or
imul
cmp
rorb
mov
mov
mov
mov
jno
outsl
inc
ffree
jb
outsb
out
mov
lods
sub
sbb
sbb
cld
scas
aad
stos
test
and
xchg
adc
ds
jl
jmp
xor
mov
pop
jns
push
inc
gs
ja
idivb
dec
and
fpatan
add
sub
into
cmp
dec
inc
mov
cs
sbb
lods
fcoms
insb
out
push
mov
dec
fldpi
movsb
add
cwtl
mov
fisubs
adc
hlt
gs
fmuls
jb
adc
cs
inc
ljmp
mov
pop
pop
repnz
lock
das
jge
imul
aas
nop
test
push
js
popf
jne
and
sub
pop
xchg
push
push
cmp
sbb
ret
into
test
cmpsb
or
int3
dec
shl
cmp
lcall
push
inc
adc
jne
icebp
add
add
xor
and
pushf
mov
cltd
outsb
shrl
adc
push
aas
mov
cmp
mov
jl,pt
and
cmpsl
nop
mov
insb
jo
lods
push
push
shll
xlat
xchg
hlt
adc
xchg
repz
or
out
lods
iret
iret
adc
mov
mov
add
xlat
scas
daa
cmpsl
in
clc
adc
push
pushf
jle
lea
jl
mov
cmp
adc
aad
fdivr
mov
mov
loopne
inc
cmp
mov
shrl
or
test
mov
fstpl
je
mov
ret
pop
test
xchg
cmp
push
cmp
jg
cld
add
pop
mov
jecxz
dec
int3
iret
pusha
cld
adc
jle
xchg
add
dec
pop
imul
jb
shlb
outsb
les
adc
xchg
dec
clc
mov
hlt
jmp
lds
lret
push
sbb
adc
clc
push
lock
xchg
xchg
popf
stos
lahf
push
xchg
pop
dec
hlt
leave
mov
jns
das
aam
rolb
iret
repz
mov
ljmp
push
imul
in
xor
popf
sub
push
mov
dec
mov
jo
push
ds
std
mov
sbb
repz
inc
jae
test
stos
inc
ret
shll
cli
xor
cmc
sub
sbb
xchg
cmp
movsl
enter
popf
pop
jge
mov
aas
lret
sbb
and
fisttpll
sub
push
mov
and
push
cmp
and
divl
shl
cmp
hlt
mov
jle
hlt
push
jbe
cmp
mov
mov
ret
mov
lods
pusha
jp
mov
dec
pop
jb
dec
inc
and
fldt
fimull
lods
test
dec
jo
push
outsl
mov
sbbb
or
stc
xchg
xchg
lods
aad
sti
inc
nop
fcoml
xchg
jb
and
mov
pop
push
jo
dec
or
iret
mov
xchg
repnz
stos
mov
sbb
adc
in
or
push
jo
imul
iret
xorb
js
adc
push
ljmp
das
scas
jmp
faddl
and
mov
imul
rcll
filds
sbb
pop
or
cmp
xchg
mov
repnz
in
ret
in
sbb
shrb
orb
mov
dec
dec
push
mov
add
popa
gs
negb
shlb
imul
add
lods
je
clc
ljmp
call
mov
jns
dec
dec
adc
inc
add
push
int3
push
out
loopne
je
and
addr16
adc
es
push
xor
mov
or
cmp
dec
fisubrs
mov
cmc
outsb
sahf
add
stc
arpl
ljmp
jg
adc
mov
int
xchg
dec
pop
daa
shrl
fisubrl
jmp
mov
xchg
jmp
rorl
ss
aad
mov
mov
mov
dec
movsb
inc
out
and
idivl
scas
insl
enter
andb
fisubl
insl
cmp
out
cmp
mov
loopne
or
fistpll
cmpsl
sub
outsb
jle
stos
aad
bnd
cwtl
pop
mov
test
sbb
inc
and
jnp
jle
roll
dec
jecxz
je
daa
arpl
inc
insb
mov
mov
enter
mov
pop
mov
pop
loop
mov
mov
loop
mov
sbb
shr
in
icebp
push
cmp
add
into
mov
repnz
add
cwtl
rclb
pop
aad
inc
xor
adc
stos
mov
cmpsb
shll
cmc
adc
call
dec
mov
xchg
inc
and
add
daa
jl
mov
nop
sbb
jmp
adc
inc
sti
mov
inc
lret
scas
sbb
and
fimuls
cmp
add
or
popf
lods
movsb
addl
jnp
mov
pop
aas
popa
js
sbb
pop
bound
push
sub
and
paddusw
dec
fildll
nop
cli
pop
imul
loop
and
call
push
rolb
jle
push
dec
sarl
fcoms
pop
xor
push
sub
lds
sbb
fs
ret
stos
mov
adcb
das
ret
imull
add
jne
push
and
mov
enter
mov
pop
sbb
ds
dec
faddl
fidivl
dec
jg,pt
into
adc
lds
inc
shll
xor
rcll
in
stc
pop
mov
arpl
inc
in
lods
sub
fnstcw
nop
xchg
in
jbe
adc
dec
in
lods
mov
aad
jne
sub
out
sbb
mov
enter
cmp
notl
fisubrl
add
repnz
and
insl
dec
jo
push
test
js
out
cltd
mov
xchg
ds
call
push
icebp
in
and
dec
loopne
jmp
ja
aas
sbb
fildll
mov
sti
not
shll
stos
or
insl
das
imul
outsb
js
push
jns
inc
sbb
mov
dec
fidivl
leave
add
push
push
lea
les
jo
adc
mov
or
lock
adc
dec
dec
push
mov
adc
or
nop
call
pop
cmp
mov
hlt
inc
sub
orl
shlb
add
je
data16
mov
mov
adc
cltd
orl
pop
jp
and
xchg
inc
mov
loope
icebp
inc
inc
xchg
mov
and
cmp
adc
sahf
jne
sub
shl
or
cs
aad
outsl
inc
call
aad
lock
loope
repz
and
xor
xorl
mov
push
dec
test
ret
xlat
push
fnsave
xchg
lret
pop
and
pop
sub
sub
call
lret
test
test
sub
sbb
push
popf
imul
sbb
sbb
incb
jp
mov
dec
mov
mov
jg
lock
and
jmp
out
pop
ret
addr16
push
aad
and
push
nop
dec
adc
rcrb
les
jmp
mov
adcl
inc
out
jno
sbb
jnp
pop
lahf
or
in
xchg
roll
mov
into
cltd
sub
stc
xchg
jmp
ret
mov
aas
adcl
shll
jb
mov
lods
mov
or
idivl
push
fcoml
std
jg
mov
mov
fsub
add
shrl
lods
nop
sbb
lock
pushf
lcall
push
andl
pop
xlat
or
js
cmp
pop
int3
hlt
or
mov
cmp
and
push
push
int3
inc
dec
jl
or
sbb
dec
cmp
pop
jl
les
jmp
mov
daa
mov
fadd
cmpsl
in
cmp
stc
leave
popl
test
cmc
xorb
inc
cmp
xchg
add
pop
xor
add
ss
sti
pop
push
jg
sub
js
test
mov
icebp
aaa
xchg
or
in
pusha
jl
jmp
add
ror
push
sub
cmpsl
imul
dec
push
sbb
or
test
and
lds
xchg
adc
daa
mov
fldt
mov
sbbl
cmp
lahf
lock
add
lret
adc
shl
or
sbb
and
popa
fstl
push
dec
cld
into
in
pop
jne
pop
or
clc
and
adc
test
jb
and
mov
stos
stos
pop
sbb
pop
fildl
icebp
xchg
dec
push
punpcklbw
or
fstl
mov
xorb
ds
inc
jecxz
jae
imul
outsb
push
and
adc
fld
in
mov
sub
fsubl
dec
push
out
bound
mov
inc
loope
shrl
leave
test
iret
fisubs
jno
sub
dec
bound
insl
hlt
jno
outsb
mov
jnp
cmp
xor
adc
mov
add
fbstp
incb
cltd
push
scas
adc
fists
fisttps
pusha
stos
push
adc
ret
call
push
xor
lods
js
imul
std
je
ja
stos
les
mov
pop
jecxz
mov
pop
add
bound
dec
mov
push
lea
call
jae
pop
push
inc
xchg
ret
test
mov
orb
test
stos
fnstsw
les
adc
into
repz
or
std
mov
jge
pop
bound
xchg
sbb
imul
pop
mov
add
mov
jo
jge
insl
mov
into
mov
das
insb
out
cld
adc
xchg
int
clc
xchg
push
loop
imul
lods
stos
test
cmpsb
shll
pusha
scas
test
sub
sbb
push
scas
cmp
adc
add
mov
pop
imul
cmp
pop
adc
jno
pop
mov
push
cli
inc
jmp
jg
mov
jo
pop
fldcw
cld
daa
ds
lea
pop
pop
lds
mov
and
imul
mov
adc
ljmp
jg
add
jae
push
cmp
insb
aad
mov
cli
mov
inc
mov
or
lds
dec
add
mov
pushf
jg
int3
mov
mov
hlt
pop
add
jecxz
jge
cmp
outsb
xor
lock
out
out
inc
cmp
movsb
jns
nop
xchg
in
dec
insl
ljmp
inc
sub
aad
lods
push
sbb
aas
xchg
out
loope
rclb
or
popa
sub
sbb
rorl
jp
arpl
jp
push
pop
lods
push
mov
fdivr
adc
aaa
rolb
push
mov
mov
int3
dec
push
cmpl
sub
rcll
jl
add
push
clc
mov
push
jno
les
ljmp
pop
fdivs
lds
leave
xchg
jo
mov
jb
cmp
fwait
lea
dec
push
movsb
adc
rcr
xor
add
push
repnz
jl
mov
xchg
push
cmp
push
lcall
sbb
std
subl
jmp
or
andl
addr16
lods
stc
or
jg
cld
pushl
cmp
and
rcl
and
dec
sub
dec
repnz
lcall
iret
in
test
leave
mov
sub
arpl
push
adc
adc
sbb
flds
lods
sahf
stos
cltd
dec
fisubrl
mov
orl
ljmp
sti
cmc
mov
jae
inc
int
bound
push
imull
es
hlt
aad
mov
add
dec
jae
mov
test
mov
and
sahf
add
mov
notl
push
into
out
stos
aam
adc
nop
jp
adc
mov
out
arpl
mov
adc
in
mov
scas
lods
shrl
sbb
in
loop
jecxz
fs
and
loop
dec
in
leave
sbb
xchg
add
inc
xchg
xchg
push
sub
inc
pop
pop
dec
lock
rcl
lret
xchg
inc
adc
push
pop
add
push
pop
mov
jecxz
out
jo
fs
fstpt
push
add
dec
and
push
push
scas
gs
icebp
adc
out
jg
dec
loopne
pop
pop
stos
scas
or
pop
adc
pop
xchg
pop
xchg
fidivl
iret
mov
or
pushf
sbb
mov
jbe
adc
shlb
incl
lock
ret
cmc
adc
lahf
mov
loopne
es
adc
mov
dec
fadds
scas
xchg
mov
dec
push
fs
cmp
mov
jbe
out
fmull
pop
mov
or
or
out
les
movsb
xor
lods
inc
mov
add
mov
pop
xchg
pop
mov
or
or
cmp
push
dec
insl
mov
imul
push
push
inc
cmpsl
mov
xchg
daa
mov
movsb
addr16
fwait
lret
push
movsl
jns
clc
cmp
repnz
imul
push
lcall
pop
cld
mov
pushl
xchg
scas
in
push
pop
jl
jns
cmp
or
sbb
sub
push
pop
dec
fisttpll
dec
lods
push
mov
sbb
outsl
lcall
in
xor
bound
inc
adc
cmp
pop
aaa
int
iret
hlt
leave
or
ss
cltd
fistl
inc
sbb
mov
jmp
cmp
or
pop
daa
ficoml
xchg
addb
lds
mov
inc
std
cmp
movsb
adc
inc
imul
mov
jne
and
pop
dec
mov
aaa
or
mov
or
pop
mov
sbb
sahf
and
outsb
fiaddl
xorb
sub
fdivl
and
cmpb
adc
mov
mov
stos
aas
shll
and
aad
out
mov
in
sar
jnp
shl
insl
or
imul
and
insb
insb
shlb
add
xchg
sbb
cltd
fisubl
jae
fdivrs
xchg
mov
addr16
inc
test
aaa
or
iret
push
aam
pop
inc
mov
leave
bswap
push
jl
pop
les
sbb
xor
js
js
jo
adc
loop
add
and
pop
xchg
inc
test
mov
pop
loopne
stc
ja
pushf
xchg
inc
fsts
lock
stos
sbb
jg
jp
imul
jb
dec
mov
mov
inc
mov
movb
xchg
xchg
adc
adc
cmp
fisubs
xchg
sbb
or
xor
aaa
cmp
popf
aad
std
in
js
loopne
push
and
out
and
sub
or
inc
rorl
push
mov
jp
jns
sub
sti
sti
mov
cld
sbbl
out
cmp
mov
xchg
pop
sbb
hlt
pop
lds
mov
std
test
jle
dec
ja
data16
and
cmp
mov
jl
aad
test
sahf
adc
mov
mov
lods
fcmovnb
add
repnz
dec
xlat
add
jmp
adc
iret
and
mov
cmp
daa
sub
xchg
faddl
pop
sbb
je
hlt
adc
test
repnz
aam
lret
loopne
mov
mov
jmp
mov
into
enter
leave
lods
dec
fidivs
lret
dec
xchg
xor
pop
push
je
push
scas
sub
sti
jl
fsubr
push
mov
mov
adc
dec
fs
test
fs
mov
cmpsl
in
lds
sbb
inc
adc
test
cmpsb
mov
iret
push
lcall
jb
cli
lahf
nopl
daa
lods
and
std
orl
cmp
pop
cs
inc
jae
push
popa
add
sbb
nop
add
out
mov
mov
outsl
fdivl
push
shl
xchg
and
jb
ret
and
cmp
bnd
cmp
mull
cmp
mov
out
fcmovu
jo
inc
lahf
pop
push
cmp
adc
pop
aas
sti
jg
pop
dec
dec
pushl
or
add
push
cld
jp
push
jbe
add
adc
jno
inc
or
inc
push
cli
sti
xor
jmp
xor
lret
jo
dec
fwait
repnz
or
jg
ds
or
push
pop
es
xor
divb
das
mov
push
cmpsb
loop
mov
mov
loope
push
sbb
cmp
addl
not
pop
imul
pop
mov
xchg
lcall
xchg
js
xor
fwait
cltd
and
mov
stos
ds
int3
lock
fistps
mov
cld
mov
push
inc
jbe
pop
cmpsl
dec
xchg
jg
adc
adc
pop
lahf
dec
mov
mov
mov
cwtl
or
xchg
loopne
jno
cmp
mov
aad
cmp
lods
dec
dec
add
mov
pop
fiaddl
and
dec
pop
mov
popf
cmc
or
fldcw
loop
cmp
les
fwait
inc
push
pusha
movsl
idivb
push
pop
pop
cltd
pop
testl
mov
aad
lretw
sub
cmp
sub
outsb
addb
adc
mov
fs
jp
cmp
stc
insb
add
roll
repnz
getsec
jmp
lret
outsb
mov
inc
adcb
hlt
cltd
icebp
rolb
jnp
subb
sub
pop
xchg
insl
int3
fsubs
in
or
hlt
ret
push
dec
jnp
ds
jmp
lock
lds
pop
adc
mov
xchg
dec
aas
or
xor
sub
lret
aaa
xchg
popf
jle
push
xchg
shll
stc
rcr
xlat
jbe
dec
and
mov
xor
xchg
push
push
dec
sub
mov
mov
sub
rolb
addr16
mov
lds
fwait
ret
int3
and
dec
or
adc
jl
cmp
test
or
cmp
jge
das
mov
cmp
and
adc
arpl
cmp
push
pop
scas
lds
outsl
cli
mov
or
aad
vpcmpeqw
inc
mov
testl
daa
lods
mov
mov
sbb
adc
mov
mov
dec
pop
jmp
mov
in
fstl
and
outsl
fsubs
jl
icebp
push
je
adc
insb
mov
or
aad
mov
mov
sub
jle
das
pop
cld
sbb
or
mov
cltd
std
sbb
daa
and
add
dec
lds
int
pop
out
test
notb
orb
testb
into
ja
ret
jle
aad
mov
ror
out
lock
in
xchg
push
pop
mov
and
insb
out
data16
daa
mov
jmp
add
sub
xor
aad
sub
addl
cmp
push
sbb
sahf
adc
cmp
push
shll
filds
cmpsb
xor
test
dec
xor
inc
cmpsl
fdivrp
sbb
das
push
mov
jmp
nop
aas
roll
movsl
jp
sub
jl
pushl
lret
enter
cmc
cmp
lods
iret
jmp
pop
aam
inc
testb
mov
in
lds
jae
mov
sbb
aas
adc
rcll
decb
lods
loopne
xor
and
in
dec
mov
int
jle
sub
fdivs
and
xchg
cs
fsubrl
mov
faddl
inc
ficoml
or
xchg
jnp
imul
std
xor
cwtl
dec
sbb
loopne
notb
icebp
jno
out
sbb
outsb
rol
lock
push
lods
stos
pop
and
inc
inc
in
lret
ljmp
adc
xchg
jle
mov
add
mov
mov
aas
mov
sub
cmp
push
lahf
mov
xor
xor
stc
pop
lds
lods
pop
lcall
es
jbe
sub
loopne
jb
rclb
jl
ljmp
inc
push
adc
lret
cmp
dec
icebp
jns
addr16
mov
stos
mov
stc
inc
adc
imul
cmp
inc
sbbb
mov
repnz
shlb
aaa
and
dec
rclb
gs
mov
xor
bnd
add
mov
subl
mov
shlb
lods
push
sub
ret
stos
in
pop
mov
inc
sti
movsl
push
lds
sbb
lea
add
orb
rorl
jl
sbb
outsb
push
push
cli
insl
inc
outsl
pusha
int3
jnp
jle
cmp
imul
js
add
and
cmp
add
dec
in
fimull
adcb
stc
jl
push
cwtl
jge
pop
int
mov
repnz
mov
pop
and
insb
ljmp
xchg
add
lret
test
outsb
std
cli
pop
mov
or
test
cmp
stc
ret
sbbb
inc
es
xchg
xor
mov
mov
imull
fs
jle
daa
or
sbb
repz
jp
sar
pop
mov
scas
pop
orl
cmp
ret
aaa
sbb
pushf
sbb
sti
lea
neg
dec
inc
pop
orb
pop
sbb
popf
rol
cmpsl
repz
insb
mov
iret
pop
fwait
or
dec
clc
xchg
add
imul
mov
fistps
push
mov
push
pop
imul
in
jo
data16
jns
jno
lret
aad
mov
fdivp
stos
das
data16
pop
jge
xor
pop
push
push
arpl
and
shrb
cmp
sub
lea
mov
mov
testb
jns
dec
inc
xchg
cmp
in
pop
aad
push
inc
adc
pop
jp
xchg
das
mov
or
shrb
enter
inc
xchg
inc
cmp
out
sub
and
add
movsl
jmp
cmc
stos
fmull
dec
mov
fnstcw
int3
shll
inc
aam
push
cmp
stos
imull
mov
cmp
sbb
stos
movsb
xor
push
pop
scas
icebp
loopne
sahf
insl
clc
push
cmp
gs
sub
push
orb
cmp
pop
add
cmp
ja
mov
jecxz
dec
stc
push
sarl
fcoml
push
push
jg
jl
sub
cmpsb
adc
jno
inc
sub
fsubl
test
xchg
inc
adc
xchg
cmp
xor
add
sub
lcall
mov
mov
movsb
and
or
test
sarb
mov
ljmp
and
mov
inc
xor
sub
push
inc
rorl
and
sti
rorb
aad
mov
inc
mov
sbb
movsl
and
xchg
cmp
mov
dec
push
push
or
or
mov
push
imulb
jno
cli
ljmp
sbb
push
cli
jmp
lods
or
mov
ret
arpl
dec
mov
push
jle
mov
dec
cmp
movsl
jge
push
pushf
pop
pushf
dec
lcall
adc
pop
mov
xor
out
mov
imul
mov
add
fdivs
sub
mov
cli
pop
dec
clc
rolb
outsb
lea
pop
ret
dec
jbe
mov
add
in
inc
lret
cmpb
mov
movsl
inc
jns
xor
test
and
adc
orl
adc
push
mov
mov
and
std
add
in
js
xchg
clc
mov
movsb
pusha
shrb
pop
lds
jns
pop
daa
jne
roll
xor
mov
inc
cli
pop
xor
xor
neg
pop
bound
mov
xchg
cmovns
arpl
adc
dec
popf
pop
jp
push
in
lret
es
adc
test
mov
cld
pop
mov
pop
mov
xchg
fwait
and
call
and
lcall
insl
fsubs
movsl
mov
lock
push
out
clc
or
and
sub
loop
xor
xor
jp
push
aas
movsl
push
shrl
mov
sub
insb
scas
std
mov
mov
fcomp
inc
or
mov
jmp
dec
test
or
dec
cmp
cmp
in
fndisi(8087
xchg
rcrl
mov
or
dec
mov
lcall
aaa
out
or
fsubl
stc
sbb
stc
push
fwait
rcl
popf
mov
jb
push
inc
and
hlt
cmp
xchg
mov
clc
addl
mov
shrl
adc
pop
bnd
cmpsb
sub
outsb
jb
xchg
xchg
imul
pop
shrl
push
and
or
lahf
pop
mov
dec
inc
inc
sub
add
negb
sub
lds
and
or
fwait
mov
imul
jge
das
xorb
xchg
mov
in
ret
loop
insb
loop
mov
fsubrs
push
scas
mov
pop
sbb
test
jg
mov
pop
repnz
sbb
push
stos
leave
jg
adcl
sbb
int
int3
mov
xchg
fucomip
xor
lock
aad
xor
ljmp
pushf
mov
fs
fists
cmpsl
mov
sub
cmp
sub
fnsave
jle
mov
sub
mov
outsl
cmp
ret
cmp
jne
pop
rcr
test
jl
test
jae
push
sbb
pusha
or
mov
nop
push
ds
sbb
xchg
mov
gs
xlat
fldt
mov
test
cli
dec
movsb
pop
inc
sbb
scas
icebp
mov
pop
ror
add
or
out
xor
test
add
mov
fistps
and
cmp
cmp
icebp
add
jecxz
ja
std
mov
nop
pusha
arpl
leave
test
ds
mov
icebp
and
sbb
clc
jo
xorb
lds
xor
out
mov
shl
inc
loopne
sub
dec
subb
push
mov
fwait
jmp
scas
push
jns
xchg
jb,pt
push
loopne
jg,pn
lahf
arpl
les
mov
leave
cmp
in
and
add
or
dec
inc
jmp
push
pop
mov
popl
test
lea
lods
dec
in
xlat
pop
fidivs
mov
mov
outsl
mov
inc
xchg
jge
aaa
arpl
inc
hlt
je
loop
inc
jbe
pop
cmpsb
add
push
stos
or
xchg
mov
shl
imul
clc
adc
cltd
inc
pop
lods
jmp
push
inc
and
push
xor
push
xlat
mov
aam
fnstcw
mov
push
and
movsb
pop
pop
push
dec
jle
adc
bound
push
subb
mov
sti
gs
add
imul
add
inc
mov
out
pushf
adcl
mov
xchg
xchg
sub
push
fstpl
add
sbb
and
in
add
add
add
add
add
add
add
sti
mov
sbb
jb
jg
nop
lock
and
call
mov
pop
add
addr16
xor
std
insb
mov
test
negl
mov
into
into
push
insl
scas
fsubrp
jnp
cmp
test
das
adcb
mov
add
clc
mov
mov
jmp
xor
add
and
ret
cmp
xchg
inc
add
and
mov
adc
lds
into
cmp
xor
fwait
dec
or
inc
sti
arpl
test
ds
in
xor
xchg
xchg
jbe
push
fdivrs
into
adc
or
rorb
pop
mov
in
mov
sub
inc
sub
or
rcl
jo
gs
js
stc
sidtl
jbe
mov
pusha
jecxz
cmpsl
andb
jp
or
test
and
xor
inc
out
and
cmp
cmp
jne
ljmp
push
sub
xchg
jns
ret
push
sub
cwtl
inc
cmp
sub
jp
test
pop
mov
and
jb
daa
adc
testb
test
int
jns
sub
in
fcomps
cmp
fdivrp
stc
lods
sub
xor
adc
cltd
ss
test
mov
or
sub
outsb
or
stc
in
popf
scas
mov
cmp
mov
scas
movsl
in
push
mov
mov
jecxz
xchg
add
sbb
xor
jnp
cld
xor
outsb
addr16
adcb
in
xor
nop
fcmovnbe
cmp
pop
enter
push
xchg
call
call
mov
inc
inc
sbb
xacquire
ja
push
push
xchg
push
mov
into
aaa
xor
adc
loop
pushl
push
negb
sbb
insl
xor
imul
cmpsl
pop
push
push
loopne
mov
or
mov
mov
scas
and
lret
arpl
daa
lods
lea
sbb
xor
fdivl
mov
into
jge
ret
dec
out
inc
mov
inc
xor
fs
xor
lret
dec
inc
ss
std
lock
sub
xchg
mov
lds
insb
push
push
dec
pop
enter
ljmp
rclb
into
xchg
call
out
enter
sub
cmp
in
sbb
mov
mull
repnz
cltd
mov
push
mov
jno
mov
sub
adc
test
mov
mov
pop
cmp
mov
xchg
std
in
cmp
mov
inc
mov
add
inc
ja
fsubrp
pusha
sbb
dec
mov
mov
and
add
clc
mov
jecxz
xor
jle
mov
ret
inc
lock
sub
xchg
mov
std
sbb
xchg
int3
scas
dec
movsb
loopne
stc
in
xor
std
jp
jne
add
icebp
jl
aas
data16
ret
sub
aas
lds
out
jnp
mov
dec
push
out
mov
pop
cmp
adc
pop
shl
inc
jle
jns
in
rolb
gs
dec
insl
add
push
sub
push
in
loop
push
jbe
stos
std
or
mov
out
push
roll
mov
inc
cmp
jo
test
jp
data16
ret
icebp
cmpsl
xor
outsl
push
xchg
or
cmc
pop
cmp
out
ja
fs
push
xchg
cmp
jg
nop
cltd
mov
shr
mov
adc
sbb
and
cwtl
jp
or
cmpsb
and
inc
xlat
clc
or
sub
idivl
push
or
jnp
cmp
ret
int3
inc
push
aad
mov
fldt
dec
and
das
pmullw
andl
or
sbb
jae
push
gs
xchg
imul
lds
jle
xor
mov
scas
rclb
xchg
and
mov
cmc
clc
add
xchg
lret
jno
popa
sbb
loop
push
mov
or
pop
sub
mov
sbb
roll
test
mov
xor
mov
ss
sbb
ljmp
popa
sti
xchg
fistps
pop
push
sub
call
mov
mov
push
inc
cmpsb
es
icebp
aas
xor
out
inc
adc
popf
jg
mov
mov
hlt
in
lret
int3
leave
test
lahf
dec
test
and
cli
adc
jo
sbb
xor
fcoml
movsb
push
push
movsb
leave
xorl
negb
mov
adc
popa
mulb
and
movsb
dec
push
pop
fwait
mov
test
pop
inc
pop
scas
jb
aaa
fs
xor
inc
adc
imul
or
es
mov
cmpsl
mov
adc
negl
add
mov
sbb
or
mov
push
fwait
movsl
enter
cmp
add
out
inc
iret
pop
dec
std
pusha
and
pop
loope
scas
inc
add
sbb
adc
pop
xchg
les
lock
mov
leave
lret
fimuls
jmp
pusha
scas
pop
sub
testl
adc
int
inc
sub
scas
das
adc
addr16
popf
jns
aam
push
pushf
sahf
addb
pop
sub
andb
adc
ret
sub
jle
stos
xchg
test
jb
repz
sti
pop
inc
mov
xchg
add
mov
cwtl
mov
into
nop
test
jbe
das
in
std
push
out
ret
cmp
and
sub
ficompl
xchg
ret
mov
jg
xor
int
in
into
data16
pushf
xchg
pusha
push
mov
xorl
cmp
or
mov
dec
gs
das
insb
fsubr
mov
cmpsb
mov
std
fcoms
cmp
xor
mov
xchg
adc
xchg
and
sub
lret
xchg
xchg
loope
mov
rclb
in
fwait
es
pop
add
xchg
ja
ljmp
xchg
andb
mov
mov
xchg
pop
mov
cmp
out
jnp
scas
leave
lods
add
pop
les
shl
lock
mov
scas
cmp
adc
imul
push
pop
add
dec
inc
xchg
cwtl
adc
add
sub
in
lret
repz
sub
jns
xchg
loopne
sub
push
cli
outsb
sbb
mov
pop
cmp
dec
repnz
outsl
nop
stos
xor
push
push
jmp
push
xorl
pushf
pop
xchg
inc
mov
movsl
and
or
pop
pop
shlb
cltd
cmpsb
test
adc
cltd
loop
fldl
sbb
test
in
lret
vaesdeclast
enter
xor
imul
bound
lock
push
jmp
mov
mov
xor
push
sahf
xchg
fnstenv
push
and
ss
mov
sahf
sub
cmp
sbb
imul
insb
lds
movsl
les
addr16
xchg
movb
lods
or
xchg
ljmp
cltd
pop
call
jbe
dec
arpl
mov
rorl
jno
in
mov
or
pusha
je
pop
mov
es
adcb
push
rorl
dec
ljmp
out
icebp
mov
clc
popf
push
sbb
jne
xorl
pop
jae
test
arpl
pop
leave
pop
es
add
mov
cmpb
addb
adc
pop
mov
xchg
pushf
push
add
inc
insb
dec
outsl
or
je
dec
push
jle
jnp
testl
lods
push
and
and
in
jmp
fldenv
shll
lret
fmuls
jp
pop
dec
outsb
inc
jg
mov
cmp
dec
sbb
inc
or
pop
adc
pop
sub
ror
adc
pop
pop
xchg
cwtl
in
je
in
add
add
add
add
add
add
add
add
lret
jbe
aaa
and
bound
push
aaa
jp
fs
dec
pop
outsl
insb
je
dec
xor
dec
cmp
aas
and
and
jne
jp
jns
add
jns
fs
add
push
jbe
insb
imul
and
push
add
imul
and
pop
push
inc
xor
and
xor
cmp
add
dec
push
add
cmp
and
jbe
push
dec
and
imul
add
add
push
add
aaa
bound
es
adc
inc
jbe
add
and
add
adc
xchg
jnp
add
inc
adc
shrb
add
push
adc
bound
add
add
add
adc
pop
pop
adc
shrl
adc
lds
add
je
add
sub
add
jle
add
imul
int
adc
or
add
pop
adc
sub
adc
xchg
jne
add
adc
xor
add
insl
adc
test
add
jae
add
jne
add
adc
sub
add
adc
lret
add
add
add
push
adc
arpl
adc
and
adc
bound
add
adc
adcb
insb
sub
add
adc
stc
xor
add
pop
adc
push
jb
add
dec
adc
mov
adc
cmc
dec
adc
ret
xor
add
adc
dec
insl
adc
gs
push
inc
adc
xchg
insb
adc
inc
pusha
adc
sub
add
xor
pop
dec
inc
add
xor
xor
add
dec
and
jno
imul
outsl
gs
inc
and
xor
dec
js
aaa
js
jno
and
bound
cmp
insl
arpl
xor
push
ss
xor
and
and
ja
cs
imul
jno
xor
push
data16
jno
arpl
xor
sub
add
outsb
aaa
bound
je
xor
and
cmp
and
dec
xor
jno
xor
aaa
outsl
gs
cmp
xor
jne
xor
and
push
ss
push
xor
dec
pop
jb
xor
push
add
inc
pop
xor
cmp
insl
arpl
xor
xor
bound
push
and
add
xor
and
jne
xor
xor
and
push
jo
insb
cmp
push
ss
push
insl
jb
dec
gs
cmp
push
jb
xor
add
popa
cmp
push
cmp
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
aad
add
push
cmp
xor
xor
inc
dec
dec
pop
dec
xor
push
add
pop
inc
dec
dec
cmp
pop
add
pop
pop
cmp
xor
inc
dec
add
xor
xor
inc
dec
pop
xor
push
aaa
add
pop
xor
cmp
add
pop
dec
dec
dec
inc
xor
push
cmp
xor
xor
dec
inc
push
pop
inc
xor
dec
dec
cmp
xor
dec
dec
inc
xor
push
dec
cmp
dec
pop
push
add
xor
pop
inc
xor
add
inc
ss
cmp
pop
dec
dec
dec
xor
xor
push
push
cmp
dec
push
cmp
pop
xor
dec
inc
xor
push
add
xor
dec
inc
push
xor
inc
xor
pop
pop
xor
push
inc
add
xor
xor
dec
pop
dec
push
push
add
inc
pop
cmp
xor
cmp
dec
dec
dec
pop
dec
pop
xor
add
dec
pop
aaa
xor
pop
dec
push
push
add
xor
xor
pop
add
add
aaa
add
add
add
add
inc
add
xor
pop
add
add
cmp
pop
add
aaa
add
add
dec
add
cmp
pop
add
aaa
add
aaa
add
dec
add
pop
add
aaa
add
inc
add
add
pop
add
push
add
xor
xor
xor
pop
add
inc
add
add
add
xor
add
add
dec
add
pop
add
dec
add
add
cmp
push
add
xor
add
xor
push
add
push
add
inc
push
add
add
pop
add
add
push
add
add
push
add
add
dec
add
xor
inc
add
add
add
dec
add
inc
add
push
add
push
add
add
push
add
xor
add
add
push
push
inc
push
mov
mov
and
daa
sahf
fdivrl
inc
or
add
pop
insl
insb
push
jno
pop
outsl
fs
insl
insb
pop
outsb
jno
bound
jne
je
imul
pop
outsb
push
dec
dec
inc
jo,pn
bound
xor
int3
jb
add
add
jg
mov
add
add
inc
add
mov
push
add
test
pop
add
jp
add
dec
add
or
int3
add
pop
push
mov
dec
inc
add
.byte
add
add
js
xor
xor
ss
cmp
add
dec
outsl
aaa
xor
popa
push
xor
inc
jb
aaa
and
push
cmp
jno
and
push
inc
cmp
xor
pop
dec
aaa
ss
xor
push
inc
cmp
push
dec
push
and
gs
jno
dec
inc
xor
dec
aaa
jns
bound
xor
pop
and
jp
jo
add
insl
push
xor
jns
and
push
jns
add
xor
pop
xor
xor
add
add
xor
add
add
pop
add
add
add
add
or
add
movsb
and
add
and
add
pop
add
cmp
add
cmp
add
add
mov
add
in
insb
add
cmpsb
insb
add
bound
pop
insb
add
sarb
add
cmp
add
and
add
pop
add
pop
add
and
add
and
add
and
add
and
add
and
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
data16
aaa
xor
cs
add
pop
pop
pop
pop
push
pop
inc
pop
dec
jne
outsl
addr16
pop
push
inc
inc
inc
pop
inc
push
inc
inc
push
inc
inc
pop
dec
inc
pop
add
pop
fs
jno
dec
inc
inc
pop
inc
push
inc
dec
dec
dec
inc
pop
add
dec
inc
push
push
dec
pop
arpl
outsb
inc
gs
ja
inc
push
inc
inc
inc
inc
pop
inc
push
inc
dec
push
inc
inc
inc
inc
pop
add
pop
dec
dec
pop
pop
push
pop
inc
inc
pop
inc
push
inc
pop
inc
inc
pop
add
push
pop
gs
pop
dec
inc
inc
pop
inc
push
inc
inc
push
inc
dec
inc
pop
add
insl
push
dec
pop
fs
inc
pop
inc
inc
inc
inc
pop
add
pop
jno
jo
pop
je
pop
outsb
dec
pop
push
push
pop
dec
pop
dec
pop
inc
push
dec
inc
inc
pop
inc
inc
push
inc
inc
dec
inc
pop
add
inc
inc
pop
bound
jb
imul
pop
push
push
inc
inc
inc
jp
inc
inc
pop
inc
inc
inc
push
inc
inc
inc
pop
add
dec
inc
push
inc
dec
pop
pop
imul
pop
pop
pop
insl
pop
pop
inc
inc
pop
inc
push
inc
inc
push
inc
dec
push
inc
dec
inc
pop
add
addr16
pop
imul
push
pop
inc
dec
addr16
addr16
inc
inc
inc
inc
pop
inc
dec
dec
inc
pop
add
jp
pop
dec
push
pop
pop
push
dec
insb
imul
pop
inc
push
pop
push
pop
inc
inc
pop
inc
inc
dec
inc
pop
add
inc
push
pop
ja
fs
dec
push
imul
inc
pop
inc
push
inc
dec
inc
inc
pop
add
cmp
xor
inc
add
arpl
sub
inc
imul
jb
js
add
gs
dec
push
ss
js
and
push
js
inc
push
jns
jp
aas
imul
xor
jb
and
and
and
ss
and
pop
add
pop
xor
push
add
aaa
push
inc
cs
cmp
and
dec
mov
add
add
add
add
add
mov
pop
add
xor
add
adc
add
add
add
add
mov
pop
add
add
clc
xor
add
xor
add
add
add
pop
add
xor
add
add
xor
add
adc
add
xor
add
pop
add
add
add
pop
add
pop
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
add
add
pop
add
add
add
xor
add
xor
add
add
add
xor
add
xor
add
pop
add
xor
add
add
add
add
pop
add
pop
add
pop
add
add
movsb
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
xor
add
add
add
add
add
inc
outsl
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
push
gs
popa
arpl
gs
push
add
je
inc
gs
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
dec
add
gs
add
add
imul
je
insb
insb
cs
insb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
sahf
or
je
jns
inc
outsl
insb
outsl
jb
add
fildl
inc
imul
add
push
inc
outsb
jne
push
push
push
imul
ret
or
outsl
ja
jne
jae
jb
add
push
outsb
fs
gs
popa
addr16
add
rolb
jae
imul
dec
push
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
push
inc
push
gs
add
push
inc
push
popa
imul
outsb
add
bound
inc
gs
jns
je
insl
dec
outsb
jne
xchg
push
inc
imul
dec
gs
popa
addr16
add
pop
pop
inc
gs
inc
inc
js
aaa
or
imul
popa
jae
push
add
push
push
inc
push
xor
cs
insb
add
or
push
jo
inc
add
push
popa
je
dec
popa
imul
gs
jns
add
dec
push
inc
push
dec
cs
insb
add
add
gs
je
push
outsl
outsl
insb
bound
inc
js
xor
dec
insl
popa
addr16
imul
ja
add
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
inc
push
dec
xor
cs
insb
add
loope
inc
gs
popa
jns
jne
add
add
jo
add
icebp
add
bound
arpl
add
add
fs
outsl
outsb
je
gs
jne
arpl
add
sbb
inc
outsl
outsb
je
popa
insl
imul
add
dec
xor
cs
insb
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
bound
inc
fs
je
insl
push
add
mov
je
jb
arpl
jae
cmc
add
imul
jne
jb
add
pushf
add
insb
jae
inc
jbe
outsb
je
add
add
je
popa
je
inc
outsl
jb
popa
je
add
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
inc
fs
popl
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
lds
insb
jae
jb
insl
jo
push
add
add
inc
popa
fs
gs
fs
je
add
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
push
dec
inc
dec
xor
cs
insb
add
add
add
add
add
add
and
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pop
add
addb
add
jo
add
add
add
add
add
add
add
push
push
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
inc
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
in
add
sub
add
sbb
add
add
add
add
add
add
or
add
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jae
cli
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
fmull
jb
ret
jb
ret
jb
ret
mov
jb
ret
jb
ret
jb
ret
jb
ret
sub
sbb
jb
ret
jg
shlb
ret
dec
roll
sub
addb
and
push
jecxz
and
jb
ret
jb
ret
jb
ret
jb
ret
neg
enter
out
sbb
ret
jb
ret
jae
push
dec
je
jb
ret
jb
ret
jb
ret
jb
ret
clc
cmp
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
ret
fimuls
lds
ret
jb
ret
aad
outsl
jb
ret
jb
ret
jb
ret
sbb
xchg
jb
ret
jb
ret
jb
ret
jl
fwait
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
xchg
dec
adc
ret
xor
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jl
jb
ret
jb
ret
lods
and
cmp
pop
rcll
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
shr
jmp
and
jb
ret
jb
ret
jb
ret
jae
inc
jb
ret
clc
xor
jb
ret
jb
ret
jb
ret
jb
ret
sbb
jmp
and
jb
ret
jb
ret
jb
ret
ss
jb
ret
lret
sub
jb
ret
cld
iret
sbb
and
mov
jb
ret
mov
jns
shll
ret
jb
ret
jb
ret
jb
ret
bound
mov
ljmp
ret
mov
and
jb
ret
or
push
mov
fs
pop
shlb
jb
ret
push
push
jb
ret
jb
ret
dec
xchg
adc
and
jb
ret
jb
ret
jb
ret
aaa
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
push
xor
mov
and
repz
jae
and
jb
ret
jb
ret
add
ret
jb
ret
sbb
add
and
jb
ret
jb
ret
jb
ret
xor
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
adc
and
ret
jb
ret
jb
ret
jb
ret
jb
ret
imul
and
jb
ret
jb
ret
jb
ret
jb
ret
add
ret
jb
ret
fninit
lret
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
ja
cmp
ret
popa
out
mov
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
and
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
fldenv
jge
and
jb
ret
jb
ret
in
add
and
jb
ret
mov
ret
jb
ret
jb
ret
push
mov
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
ret
mov
dec
loopne
sbb
dec
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
mov
in
and
inc
jnp
cmp
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
mov
ret
jb
ret
jb
ret
add
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
push
sub
jb
ret
xchg
sbb
jb
ret
cmp
jb
ret
jb
ret
jb
ret
jb
ret
dec
ja
test
std
hlt
push
cmpsb
jb
ret
jb
ret
jb
ret
jbe
xchg
pop
jp
sbb
and
jb
ret
jb
ret
add
jb
ret
jb
ret
jb
ret
jb
ret
fimuls
sti
lahf
jmp
and
jb
ret
mov
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
les
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
and
jb
ret
jb
ret
subb
and
jb
ret
jb
ret
aad
mov
and
jb
ret
jb
ret
sub
pop
jb
ret
jb
ret
fldln2
or
inc
lods
outsl
mov
and
jb
ret
jb
ret
jb
ret
xlat
ss
pop
dec
test
jge
jb
ret
jb
ret
jb
ret
add
ret
jb
ret
jb
ret
mov
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
push
inc
jb
ret
jb
ret
sub
loopne
adc
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
inc
arpl
jb
ret
nop
fs
jb
ret
jb
ret
jb
ret
in
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
or
jb
ret
jb
ret
jb
ret
jb
ret
xchg
das
dec
jb
ret
jb
ret
jb
ret
push
insl
adc
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
ret
jb
ret
jb
ret
jb
ret
push
gs
and
jb
ret
mov
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
arpl
jb
ret
jb
ret
jb
ret
pushf
loopne
jb
ret
jb
ret
jb
ret
xor
mov
and
imul
jb
ret
jb
ret
jb
ret
add
in
add
rolb
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
fbld
jge
stos
inc
jb
ret
jnp
imul
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
decb
je
in
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
ret
push
add
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
cmp
dec
into
in
int3
jb
ret
jb
ret
jb
ret
xor
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
mov
jb
ret
mov
stos
jb
ret
add
and
sbb
jb
ret
jb
ret
jb
ret
jb
ret
dec
or
jb
ret
test
mov
ret
jb
ret
fistpl
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
popa
stos
in
and
jb
ret
jb
ret
jb
ret
jb
ret
add
and
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
ljmp
and
jb
ret
jne
sbb
ret
jb
ret
jb
ret
rol
fnstenv
out
jb
ret
jb
ret
jb
ret
aaa
std
in
and
sbb
lret
ret
jb
ret
add
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
stos
adc
jb
ret
push
push
inc
inc
shll
ret
jb
ret
jb
ret
jb
ret
add
ret
jb
ret
sub
and
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
fstp
scas
jb
ret
jb
ret
jb
ret
lret
mov
subl
mov
ret
out
add
and
pushf
icebp
in
call
ret
imul
and
jb
ret
add
ret
hlt
gs
test
pop
jb
ret
leave
xchg
fidivs
ret
jb
ret
test
add
ret
jb
ret
insl
and
jb
ret
jb
ret
jb
ret
jb
ret
in
bound
and
jb
ret
sbb
or
or
ret
jb
ret
fldl
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
ret
jb
ret
jb
ret
jb
ret
jb
ret
sub
push
jb
ret
inc
adc
pop
mov
and
jb
ret
jb
ret
inc
dec
cmp
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
add
ret
jb
ret
jb
ret
out
mov
or
jb
ret
jb
ret
fiadds
and
arpl
and
dec
lret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
adc
jb
ret
jb
ret
jb
ret
jb
ret
cmp
xchg
add
ret
jb
ret
jb
ret
jb
ret
jb
ret
test
cmp
ret
jb
ret
fstps
jb
ret
jb
ret
jb
ret
jb
ret
add
mov
aaa
and
ret
jb
ret
std
int
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jle
insl
jb
ret
add
ret
mov
jb
ret
jb
ret
jb
ret
stc
dec
pop
fidivs
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
sbb
or
and
jb
ret
jb
ret
sti
movsl
loop
pop
clc
jb
ret
jbe
fs
ret
jb
ret
insl
push
incl
jb
ret
dec
jg
jb
ret
jb
ret
mov
jo
push
and
xchg
cmpsl
imul
and
push
ljmp
ret
jb
ret
jb
ret
jb
ret
jb
ret
rcrb
jb
ret
cs
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
scas
xchg
adc
and
jb
ret
add
movsb
or
push
jb
ret
or
ret
jb
ret
jb
ret
aaa
lcall
ret
jb
ret
jb
ret
mov
push
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
jb
ret
std
sbb
and
incl
jb
ret
int
jno
and
jb
ret
cmpsl
mov
add
add
add
xor
pop
add
dec
mov
sub
lods
add
xor
xor
outsb
lods
cmpb
pop
adcb
push
add
mov
pop
hlt
cli
orb
inc
addb
loop
adc
and
jbe
sub
cmp
sub
sbbb
inc
orb
mov
add
mov
sub
add
sbb
add
xor
add
add
sbb
add
add
rolb
add
and
and
and
and
mov
andb
mov
mov
and
and
and
and
and
jno
lret
adc
andb
andb
push
xor
mov
andb
andb
andb
mov
je
ljmp
mov
mov
and
add
and
and
sarl
and
and
and
and
and
push
mov
xchg
mov
and
and
and
mov
and
and
and
and
and
and
and
and
and
and
and
and
hlt
mov
and
adc
adc
lret
mov
andb
andb
andb
andb
andb
enter
dec
mov
and
test
mov
and
and
and
sbbb
lds
jge
andb
andb
andb
xor
mov
and
and
and
aaa
pop
mov
and
and
fwait
andnps
mov
and
cmp
andb
andb
push
dec
sbb
mov
and
and
mov
outsb
and
fcmovu
push
adc
and
and
and
mov
rcrb
mov
aas
mov
and
ror
push
mov
lahf
mov
and
and
jae
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
push
sarl
and
and
and
and
sbb
addb
and
and
and
and
and
and
and
jb
andb
andb
sub
mov
inc
mov
pop
mov
fnstcw
and
and
and
and
and
fdivrs
and
and
sti
scas
fcomip
pop
loop
andb
andb
andb
andb
andb
loope
andb
andb
andb
andb
andb
andb
fimuls
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
jae
mov
and
and
mov
and
and
and
and
and
and
cmp
and
add
and
and
and
and
and
push
icebp
cli
pop
mov
iret
neg
sahf
mov
and
and
mov
andb
andb
push
dec
mov
inc
mov
jge
andb
andb
andb
andb
faddl
andb
andb
stos
mov
andb
andb
dec
mov
andb
andb
out
add
and
jg
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
insl
mov
aam
mov
and
mov
mov
and
and
and
and
and
and
and
and
and
push
mov
and
movsl
popa
mov
and
and
and
pusha
mov
and
data16
sbb
fcomip
mov
and
bnd
andb
andb
andb
andb
andb
andb
andb
andb
andb
lods
xlat
dec
int3
out
mov
and
and
adc
mov
and
and
and
mov
and
and
imull
mov
and
popa
out
mov
and
and
and
adc
andb
andb
andb
and
ja
fs
sub
adc
andb
andb
andb
andb
mov
mov
and
or
andb
andb
andb
andb
sub
xlat
fcoms
andb
andb
andb
andb
push
jnp
fbld
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
mov
mov
and
insl
xlat
mov
and
and
and
and
sbb
fidivrs
and
and
and
mov
or
dec
in
jg
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
andb
push
pop
mov
and
daa
mov
and
and
and
and
mov
andb
andb
andb
andb
andb
stc
pop
mov
and
jg
mov
and
jp
andb
cmp
mov
and
and
and
jl
mov
and
and
and
and
stos
aad
pop
mov
and
pop
mov
add
push
sldt
add
add
add
add
pop
or
add
cmp
add
inc
dec
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
addr16
addr16
addr16
addr16
addr16
cli
pop
cmp
inc
psubsw
inc
addr16
addr16
addr16
addr16
addr16
add
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
add
jle
xchg
sbb
inc
addr16
addr16
addr16
push
lret
add
inc
push
stc
addr16
mov
ja
sub
xor
xlat
xor
addr16
add
dec
push
enter
addr16
sti
loope
addr16
addr16
addr16
addr16
addr16
leave
adc
or
les
addr16
addr16
addr16
addr16
add
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
mov
inc
addr16
addr16
addr16
add
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
mov
inc
addr16
addr16
addr16
fwait
addr16
add
and
addr16
addr16
addr16
addr16
les
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
pop
inc
xchg
addr16
addr16
add
insl
lcall
inc
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
add
addr16
fdivl
out
addr16
addr16
addr16
hlt
add
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
lods
sub
addr16
addr16
add
addr16
out
aas
sti
cs
addr16
cmp
inc
ja
mov
test
addr16
addr16
outsb
sti
std
addr16
addr16
addr16
add
push
inc
add
add
and
add
enter
aam
fdivrl
loop
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
cmp
js
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ja
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
mov
cmp
sbb
ss
inc
ds
ds
jnp,pt
xchg
ds
mov
ds
loop,pt
add
or
aas
xor
cmp
aas
aas
xchg
aas
lahf
aas
fidivrl
jecxz
add
add
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
adc
cmp
xor
outsb
xor
mov
xor
xor
xor
xor
and
sub
cmp
inc
xor
xor
xor
xor
xor
pop
xor
xorl
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jnp
xchg
xor
mov
xor
adc
push
ss
aaa
imul
ja
cmpsl
ss
ss
stc
ss
xor
inc
aaa
push
aaa
pop
aaa
insb
aaa
jb
xchg
aaa
cwtl
aaa
mov
aaa
jmp
cmp
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
adc
sbb
push
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
cmpsb
cmp
or
xor
aaa
ds
ds
fdivrl
std
or
adc
sbb
push
aas
and
sub
sub
xor
inc
aas
jae
cmpl
xchg
aas
mov
aas
fnstcw
fistpll
icebp
aas
add
add
add
add
add
xor
xor
xor
xor
cmp
inc
xor
insb
xor
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
pop
xor
jne
jp
xorl
mov
mov
xor
xor
xor
xor
adc
xor
xor
xor
xor
xor
xor
fs
movsl
xor
int3
xor
add
or
xor
inc
ss
jns
jg
test
mov
xchg
ss
ret
ss
fidivs
in
ss
ss
aaa
dec
aaa
pop
aaa
xchg
nop
aaa
popf
aaa
scas
aaa
mov
mov
aaa
and
cmp
mov
lds
push
cmp
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
mov
cmp
adc
push
and
sub
sub
ds
ds
ds
ds
jns
jge
cmpl
ds
ds
add
or
push
aas
adc
sbb
and
daa
aas
sub
aas
dec
aas
gs
xchg
aas
mov
aas
enter
sarb
in
in
aas
repz
stc
aas
add
add
add
add
xor
and
inc
xor
imul
xor
jle
test
mov
mov
xor
xor
xor
xor
xor
sub
dec
xor
jb
test
lea
ret
xor
xor
xor
xor
xor
xor
cwtl
xor
xor
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ret
xor
dec
xchg
stos
or
xorb
aaa
xchg
aaa
xchg
aaa
lds
xlat
aaa
fnsave
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmpb
cmp
cmp
jle
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
jg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
add
add
add
xor
inc
xor
xor
xor
xor
je
xorb
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
add
pop
or
adc
pop
sbb
pop
and
daa
sub
das
xor
aaa
cmp
aas
ss
ss
ss
ss
ss
ss
ss
ss
arpl
imul
ss
jnp
jg
xorl
mov
ss
ss
ss
ss
mov
ss
ss
mov
mov
ss
ss
ss
shll
xlat
fbstp
jecxz
out
jmp
out
ss
sti
pushl
add
pop
add
add
cmp
inc
.byte
