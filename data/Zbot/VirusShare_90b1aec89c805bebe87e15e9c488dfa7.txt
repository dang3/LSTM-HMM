pushl
rolb
les
and
add
cld
ja
mov
xor
dec
and
pop
insl
pop
pop
mov
cmp
call
jns
dec
lret
jmp
out
inc
shl
cmp
aas
inc
pop
jg
fiadds
jl
pushl
xchg
mov
fiadds
leave
cmpl
test
jbe
test
xchg
xchg
pop
push
test
repz
mov
fldenv
cmpsb
cmp
add
rcll
nop
mov
divl
incb
aad
push
push
out
ja
mov
mov
push
dec
sub
sub
pop
sahf
adc
loope
das
or
push
mov
mov
or
ret
dec
andl
jae
and
push
xchg
jg
std
jo
sbb
sbb
inc
xlat
mov
insl
and
icebp
and
or
std
push
adc
fstp
mov
aas
or
sub
jno
dec
mov
fwait
mov
mov
js
cltd
lcall
call
in
pushf
addr16
xor
mov
or
push
adc
in
and
ljmp
lds
dec
jmp
mov
xchg
push
jno
jae
inc
jnp
fistl
jo
pushl
push
dec
sbb
scas
lahf
jbe
sub
mov
jmp
mov
inc
mov
push
cmp
incl
mov
jp
cld
push
fstpt
ds
mov
jne
or
push
xchg
lcall
cld
sbb
push
adc
fs
movsl
xor
loopne
shl
movsl
mov
jbe
test
pushl
imul
aad
andb
in
xor
mov
push
rcl
js
pushf
cmp
jmp
hlt
cpuid
xchg
jecxz
inc
push
sbb
test
jle
cwtl
mov
jbe
pop
or
jg
dec
fcmovnb
nop
adcl
cs
and
cmovge
dec
adc
lcall
mov
mov
loope
icebp
mov
popa
add
and
pushf
cmpsb
mov
call
jne
loope
test
or
xor
dec
fsubrs
decl
pop
fbld
sub
pop
push
scas
fbstp
imulb
insb
sahf
rorb
lcall
or
aad
bnd
inc
jl
add
and
insl
ja
or
pushl
rcll
push
ret
orb
icebp
js
jne
fwait
mov
addl
je
mov
jnp
xor
jo
sub
insb
or
es
ds
jns
rclb
sbbl
outsl
out
gs
int3
loop
jg
mov
inc
movsb
cmpsb
enter
jp
mov
call
mov
repz
movsl
aam
fimuls
and
mov
loopne
pushf
movsb
push
pop
jno
cmp
jg
adc
cmp
cld
jnp
ss
movsl
and
cmp
incl
mov
and
mov
cwtl
xchg
bound
lock
pushl
mov
addb
adc
faddl
or
inc
clc
jo
pop
sub
lcall
pop
out
in
daa
mov
rclb
add
nop
cwtl
into
shlb
xchg
mov
push
aam
ss
frstor
es
and
ljmp
outsb
int3
into
repnz
adc
scas
push
push
pop
incl
and
in
cmp
and
dec
sbb
lcall
or
sar
ljmp
out
movsb
cwtl
jbe
outsl
pop
arpl
mov
mov
call
bound
pop
mov
test
jle
ljmp
mov
inc
xchg
jns
ja
clc
in
int
mov
inc
push
test
roll
lock
loopne
mov
pushl
std
cmc
push
and
add
lds
mov
sub
xor
lcall
icebp
lods
jne
in
cmp
addps
int3
cmp
push
add
in
stc
ror
loop
ljmp
add
mov
xchg
xor
inc
cmp
mov
movsb
adc
push
jo
ss
mov
sbb
or
ja
mov
imul
test
loop
test
push
imul
cmp
stos
pushl
xchg
pop
lahf
push
cs
inc
cmp
cmp
sbb
dec
nop
fisubs
call
sub
daa
aas
in
push
dec
repz
or
lret
scas
add
jg
ljmp
add
fldcw
pop
in
or
and
test
enter
decl
lds
mov
gs
jge
sbb
push
mov
outsl
aam
cwtl
scas
or
movsb
jmp
cmp
outsb
inc
mov
cmp
xor
jmp
das
jg
xchg
imul
das
sar
jg
jl
mov
cmp
push
or
gs
adc
lcall
jmp
jbe
xchg
scas
test
jnp
jne
in
int3
adc
add
pop
std
inc
inc
cltd
cltd
xchg
xor
lret
test
repz
cmpsb
aam
pop
out
fcmovnb
test
in
fsubr
jmp
and
cmc
pusha
fwait
mov
js
in
btc
jbe
adc
loopne
inc
dec
and
icebp
shrl
sbb
ljmp
cmp
jecxz
loopne
xchg
mov
sub
test
dec
add
fidivs
gs
jg
call
test
fisttps
cld
push
cmpsb
daa
gs
mov
mov
mov
iret
push
jmp
xlat
lret
pop
adc
lret
rcl
in
adc
and
mov
inc
jnp
test
mov
clc
pop
inc
mov
mov
fwait
mov
sti
dec
pop
sar
xor
insb
aas
inc
mov
data16
jg
jmp
ret
pop
repnz
push
shrb
sbb
in
dec
and
or
push
inc
adc
lcall
dec
ja
xor
lret
pop
pop
cmp
jl
add
in
dec
sbb
sub
pop
icebp
ljmp
add
mov
sub
ret
sarl
jecxz
adc
mov
loopne
fnstcw
push
ds
dec
pushf
clc
fcomip
push
inc
ret
pop
and
js
jmp
cmp
ss
pop
repz
dec
mov
bound
shll
or
jmp
lret
xchg
out
sbbb
xchg
into
pusha
mov
jge
shlb
cmc
mov
inc
pop
sub
cld
js
stc
xchg
xor
jge
pop
cmp
mov
pop
leave
sbbb
int3
jg
push
shlb
and
cli
lock
scas
cmc
stos
movsl
xchg
mov
mov
or
adc
pop
cld
repz
cld
ret
mov
push
xor
push
cli
icebp
decl
inc
loope
sbb
pop
arpl
push
mov
adc
iret
mov
arpl
push
negb
xor
lret
jno
add
push
xchg
sub
mov
xchg
inc
iret
sub
rcr
aam
loope
mov
lahf
call
mov
push
jb
fcomip
movb
stos
xchg
ret
fisttpl
jbe
stos
popa
sbb
call
pop
jmp
cmpl
stc
and
fisttps
mov
testb
jae
xor
sbb
movsl
sbb
cmp
cmp
es
dec
xchg
cltd
push
adc
lahf
lods
dec
add
mov
iret
int3
cltd
test
sbb
xor
shrl
imul
mov
fcomps
xchg
adc
cmp
jmp
clc
xchg
xlat
call
iret
fists
xchg
inc
push
and
sub
push
xor
fisubl
sbb
decl
jo
cli
push
push
xchg
mov
pop
jl
or
int
ret
lahf
mov
ljmp
cltd
orb
xchg
loop
aam
adc
leave
cwtl
inc
lcall
push
cmc
xor
cmpsb
jp
push
daa
adc
lea
notb
mov
lds
pusha
jae
sar
or
jmp
popf
or
inc
pop
push
pop
je
or
mov
ljmp
mov
gs
sub
test
in
ret
or
fisttps
cli
push
flds
inc
and
xchg
push
movsb
sbb
ljmp
and
mov
lods
int
out
popa
out
mov
mov
push
fs
movsl
lds
xor
call
push
test
in
adc
sbb
add
inc
mov
or
mov
jmp
jge
leave
mov
pop
jecxz
ss
dec
sub
iret
into
in
mov
pop
inc
call
std
scas
xor
repz
sbb
xlat
fisubl
std
je
or
jbe
popa
mov
call
add
xor
fsubrs
pop
xor
test
dec
fcomip
decl
inc
mov
ss
lret
dec
jae
push
cltd
push
jbe
cmp
out
and
jg
lcall
das
pop
leave
pop
lods
mov
shlb
push
out
dec
jo
es
in
nop
xlat
test
call
fisubrs
pop
nop
lcall
pop
sti
jp
inc
ficomps
xor
and
bound
fcomip
iret
xor
fcoml
sub
dec
mov
sbbb
sbb
icebp
xchg
lcall
jbe
cwtl
jae
inc
jge
mov
lcall
and
ret
push
call
xor
jl
mov
aam
xor
cmpsb
fs
fcoml
adc
mov
faddl
or
sbb
adc
jle
inc
loopne
sub
sbb
vpsubsw
in
cmp
in
mov
mov
xchg
loop
add
cmp
decl
in
iret
frstor
inc
sbb
testb
ds
in
pushf
imul
mov
lcall
shrb
add
inc
lret
mov
scas
mov
cmp
out
mov
inc
sti
add
xchg
jg
testb
ja
fsubl
inc
stos
outsb
pushl
cmp
repnz
mov
and
mov
inc
icebp
std
hlt
adc
and
xor
pop
push
stos
gs
in
jl
ret
lcall
mov
ljmp
lret
in
adc
xor
insb
cmc
cld
xor
dec
sbb
mov
dec
shll
or
lds
lods
in
xchg
test
aad
add
add
jge
mov
push
xor
dec
mov
popa
sbb
mov
stos
leave
adcl
out
and
lcall
shrl
mov
pop
adc
push
mov
ficoml
jecxz
outsb
aad
mov
test
inc
cltd
int3
inc
stos
or
das
cmc
adc
push
add
ljmp
push
roll
inc
lret
insb
push
adc
jg
js
xchg
adc
push
push
or
pop
mov
clc
lret
lcall
fdivp
cmp
mov
adc
popf
pushf
sti
fistps
push
out
lea
stos
sub
xlat
pop
jecxz
rol
sub
fidivrl
dec
ds
scas
xchg
jmp
mov
das
cmp
sbb
loopne
mov
xchg
repnz
sar
lcall
cmp
js
rcll
iret
sub
inc
popa
push
push
scas
add
mov
jg
sbb
push
xchg
aaa
or
sub
bound
repnz
pop
xor
ds
add
enter
scas
mov
scas
or
mov
jg
leave
es
fsubl
pop
test
sub
jnp
pop
stos
cmp
push
mov
dec
dec
scas
jecxz
cmp
mov
std
adc
or
shll
jl
fiadds
incl
xor
shr
rcll
jg
jns
cmp
mov
mov
ljmp
aad
data16
das
sbb
rorl
fcomps
movsb
loope
jmp
lods
lretw
xorb
ljmp
inc
lret
xchg
pop
icebp
sbb
orl
sar
ds
sbb
mulb
add
lcall
mov
scas
lcall
push
dec
mov
cmp
into
jo
addr16
pop
adc
jecxz
loopne
decl
xchg
ljmp
rol
cli
pop
push
shrb
mov
incl
scas
push
pop
mov
cmc
adc
pop
jo
push
pop
dec
test
cld
jb
jl
lock
xchg
in
jp
mov
mov
in
push
jns
data16
ret
add
call
or
mov
leave
adc
pop
mov
cmpsl
pusha
scas
pop
call
sbb
cmpsb
push
mov
mov
dec
sbb
push
test
dec
xor
xchg
fwait
lods
leave
cltd
clc
test
repz
jmp
mov
mov
fmuls
scas
cwtl
adc
inc
jb
insl
jmp
cmpsb
mov
in
insb
filds
iret
bound
mov
dec
xor
stc
jl
adc
push
push
jp
push
imul
pop
cli
inc
int3
repz
xor
ljmp
icebp
scas
mov
add
jl
inc
imul
leave
hlt
cltd
fs
incl
mov
or
cld
fsubs
dec
xchg
loope
fildll
clc
call
ja
xchg
in
jle
push
lock
push
push
dec
mov
or
add
test
sbb
mov
pop
mov
idivl
in
cmp
ljmp
push
push
sbb
movsb
cmpl
lock
cwtl
lahf
les
dec
or
xchg
mov
and
cmp
lret
inc
or
push
jle
inc
pop
loope
das
sar
and
or
call
cmp
and
pushl
testl
repnz
ss
sub
and
cmp
addr16
push
mov
mov
repnz
shlb
idivl
fcoml
test
incl
mov
pop
mov
les
cwtl
ret
xchg
inc
mov
jle
ljmp
mov
inc
lds
dec
pop
jl
mov
xor
sub
push
pop
sub
sub
in
sarb
das
and
out
xchg
stos
adc
sub
sub
mov
out
das
add
jns
out
adc
inc
fstp
leave
mov
sub
add
subb
js
sbb
cmovb
popf
enter
clc
subl
int
push
stc
sub
enter
call
std
lock
mov
sub
jae
and
popa
out
addl
adc
shll
inc
sub
test
or
push
push
mov
incl
cmp
push
movb
sbb
push
ja
cltd
cmp
outsl
lcall
rolb
daa
hlt
mov
mov
push
fldenv
scas
popa
pop
cli
cltd
cmp
jmp
xchg
insl
icebp
inc
sbb
adc
mov
cli
push
sbb
hlt
jge
mov
mov
sub
aad
jg
pushl
push
mov
out
inc
sti
pop
ret
mov
cmpl
cwtl
or
mov
out
outsb
xchg
mov
icebp
in
mov
add
xchg
bound
gs
test
mov
call
xor
mov
loopne
movsl
xor
inc
in
les
dec
jbe
decl
sub
mov
in
aad
sbb
inc
lds
subb
xchg
jmp
sbb
jbe
dec
les
mov
das
inc
js
mov
and
or
loope
decl
test
stc
ficoms
cmp
or
push
adcl
sub
imul
mov
les
mov
mov
int
inc
or
movb
rcr
cmp
xchg
xchg
push
sub
ja
push
fcomp
test
jnp
popa
das
ss
decl
cmpsl
push
jns
repz
dec
or
test
lea
loopne
cmp
jle
lret
lods
pushl
ljmp
add
and
dec
inc
repnz
push
sbb
pop
and
pop
incl
push
loopne
inc
add
push
imul
dec
mov
sbb
cmc
inc
test
xchg
sahf
faddp
lock
cld
push
call
dec
jns
and
lea
das
or
pop
ljmp
push
cmp
mov
mov
scas
lret
das
pop
mov
and
cli
jg
ljmp
aaa
das
incb
cli
sub
std
ljmp
gs
dec
mov
mov
mov
adcl
inc
push
leave
incl
cld
jmp
xchg
mov
cwtl
push
in
lea
int
mov
dec
mov
ficompl
dec
adc
lods
or
cmp
adc
stc
cmp
nop
push
pushl
pop
xchg
adc
xchg
add
xchg
jmp
popf
inc
test
jmp
mov
inc
iret
lock
out
in
sbb
inc
repnz
sbb
cld
lcall
hlt
mov
push
xchg
divl
mov
stos
lds
cmp
pop
rclb
lds
add
push
call
test
adc
cmp
rol
or
jns
bndldx
call
insl
popf
jmp
les
dec
dec
arpl
jne
sarl
pop
push
jo
mov
push
fldl
or
scas
inc
js
mov
cmc
mov
mov
xlat
push
pushf
aad
cmp
std
pop
mov
inc
popf
or
out
jae
cwtl
addr16
cld
add
push
inc
test
decl
icebp
jbe
lods
pop
mov
shrl
aaa
cltd
push
push
loope
xchg
and
call
pushf
cltd
decl
out
pop
test
add
jae
popf
pop
aam
xlat
sahf
not
andb
int3
aam
sub
fnstcw
ljmp
push
inc
pop
js
lcall
fucomp
jmp
pop
insl
sub
cmp
sarl
xchg
cmp
xchg
nop
stos
sbb
js
mov
shl
mov
jmp
cmp
or
std
std
fwait
hlt
and
push
out
jg
push
pop
popf
hlt
mov
xchg
arpl
jmp
pop
mov
cltd
sub
inc
sbb
adc
xchg
jge
pop
frstor
rorb
in
decl
xlat
cmpb
adc
fidivs
add
out
shrb
xor
ljmp
mov
dec
insb
push
mov
mov
adc
xchg
mov
mov
rcrl
in
movsl
jae
jns
in
pop
leave
repnz
in
bswap
call
decb
mov
js
scas
mov
outsl
cmp
xor
and
aaa
sar
lcall
push
sbb
shrb
loop
int3
cmp
leave
sub
repnz
sub
movsl
sbb
call
adc
mov
adc
cmpb
stos
lods
xchg
mov
adc
adc
std
fadds
xor
loop
stos
test
sbb
mov
jl
add
les
mov
dec
lea
push
fldcw
xchg
sbb
mov
repnz
xor
ljmp
sarl
out
jge
xchg
lcall
mov
lea
ret
loopne
xchg
or
jg
int3
mov
cmpsl
incl
or
adc
pop
shrl
cld
push
adc
out
pop
sbb
ror
push
lock
ljmp
inc
push
xchg
scas
xchg
jl
imulb
sbb
decl
dec
add
inc
sahf
jmp
fs
adc
cmp
or
outsl
dec
call
aaa
nop
pop
cs
push
cmp
pop
inc
mov
xchg
xchg
mov
ljmp
push
mov
mov
or
jmp
inc
cmc
jnp
inc
pop
or
fcmovnbe
fs
repnz
pusha
stos
scas
ret
cmp
inc
xor
sub
flds
in
mov
and
cmp
dec
inc
push
mov
mov
sub
pop
push
or
fs
cld
sbb
fs
lcall
xor
inc
jmp
xor
addl
ss
pushl
sub
sub
rclb
mov
outsb
sub
pop
adc
fsubrl
aam
dec
out
leave
ljmp
lret
jle
xor
jp
in
cmpl
inc
scas
push
mov
jmp
mov
push
leave
cmc
dec
xor
cmpl
jnp
loope
jnp
pushf
or
sbb
push
or
pushl
rorl
std
popf
mov
xor
sub
mov
adc
jg
testl
mov
sub
mov
cmp
cmp
pop
mov
mov
fmull
xor
rcrb
loopne
inc
dec
js
fistps
mov
cltd
inc
mov
lret
mov
sbb
mov
imul
mov
popf
sub
mov
cwtl
sub
addr16
jnp
xor
and
lds
or
inc
xchg
rcr
jle
out
je
lds
out
mov
mov
mov
shll
rorl
rcr
out
mov
testl
cmp
cmp
mov
mov
pop
leave
cmp
pusha
mov
mov
dec
xor
push
push
ud0
popf
sbb
add
mov
subb
jge
loope
jmp
es
loop
gs
stc
push
imull
adc
adc
push
or
mov
pusha
cmpsl
addb
rorl
repz
sbb
sub
mov
mov
xor
roll
adc
adc
mov
jmp
add
addr16
sub
or
test
into
dec
adcl
loopne
aam
iret
adc
sbb
or
test
jbe
icebp
xchg
lcall
mov
sbb
adc
and
xor
jle
fnstcw
mov
sub
cmp
bound
mov
pop
mov
sbb
inc
popf
lahf
cli
jmp
movl
jmp
iret
adc
xlat
das
movsl
iret
sub
push
adc
cmp
push
repnz
push
out
jle
jmp
push
xor
sub
lret
clc
enter
lods
shll
in
in
fistl
fisttpl
mov
mov
pop
dec
jnp
sbb
inc
inc
sbb
sti
ljmp
inc
or
pop
ds
mov
mov
jecxz
inc
adc
pop
xchg
cmp
pushf
cmp
lock
pushl
vsqrtpd
loop
inc
mov
fimuls
fsubrl
inc
mov
decl
clc
xchg
push
inc
mov
insl
stos
clc
jl
scas
mov
scas
les
out
clc
pusha
cwtd
dec
xchg
addb
in
lret
cmp
rolb
mov
add
and
fidivs
dec
mov
popa
movsb
and
sbb
mov
shlb
xchg
call
jbe
neg
lds
dec
or
jo
addb
dec
jg
mov
outsl
cli
jmp
push
mov
mov
das
cmpsb
inc
gs
push
icebp
sahf
mov
push
push
jmp
aas
xchg
nop
xchg
push
add
and
inc
repz
sahf
test
mov
lods
lret
call
sbb
xor
test
mov
fcomps
push
pusha
jge
inc
push
mov
nop
push
dec
call
inc
jne
or
mov
les
jno
pusha
fcomi
xchg
loop
insb
xor
mov
cwtl
out
xor
inc
xchg
loopne
pop
push
push
jecxz
xchg
and
enter
flds
jg
int3
out
or
iret
daa
fucomip
inc
sub
cli
push
cmpsl
mov
out
add
add
sti
pop
sub
pop
mov
das
sub
aas
cmp
das
stc
add
jecxz
inc
popa
mov
mov
mov
mov
dec
dec
clc
xchg
js
push
adc
shlb
cltd
incl
in
int3
pusha
inc
lret
and
iret
jge
add
xchg
adc
call
ss
aad
repz
cmp
add
divl
mov
cwtl
mov
push
push
decl
dec
rcl
pop
lret
lcall
rcrb
movsl
cmp
xor
jl
inc
inc
aaa
push
data16
arpl
push
lea
and
push
icebp
pop
push
nop
mov
aas
xor
jo
fs
lcall
fistpll
adc
adc
fcoms
mov
and
dec
sahf
in
xchg
hlt
sub
addr16
ljmp
lock
push
jmp
inc
outsb
pop
lcall
arpl
sbb
je
push
or
adc
fdiv
repnz
ljmp
paddw
cmp
andb
inc
mov
ljmp
clc
pushl
sarb
enter
mov
jg
jg
cmp
adc
aam
mov
jp
push
decb
fwait
xor
xchg
mov
es
push
fs
jmp
outsb
lea
dec
dec
dec
sbb
cli
les
inc
lcall
gs
mov
or
sub
inc
xor
or
jg
lock
mov
pop
dec
mov
jge
rol
xchg
and
sbb
pushl
fiadds
sub
xor
mov
and
push
xchg
pushf
jge
repz
in
repnz
push
shrb
nop
xchg
shl
out
pop
aam
stos
or
ffreep
jo
and
mov
or
loopne
xchg
pop
sbb
mov
out
xor
addr16
or
jg
repnz
divb
pop
test
pop
mov
fmull
jne
test
push
call
out
add
in
aaa
pop
insb
and
pop
cli
cmc
xchg
or
cwtl
stos
rorb
pop
jae
cmp
mov
pop
pop
mov
rorl
ficoms
daa
adc
pop
into
mov
insb
xchg
fnstenv
cmp
ret
bound
mov
imul
push
lret
push
iret
sbb
jmp
dec
adc
push
daa
mov
les
shrb
cmpsb
sbb
sti
imul
sbb
mov
xor
xor
dec
stc
sbb
cmp
in
inc
mov
lcall
pop
out
test
test
orb
scas
inc
imul
sarl
sbb
and
jb
ss
pop
test
cmp
inc
cli
cwtl
test
je
cmp
bsf
jg
dec
pop
lods
dec
std
fdiv
mov
repz
sbbb
test
lahf
fstl
call
mov
and
mov
push
cs
pop
jb
in
sbb
stc
mov
decl
lds
outsb
ljmp
dec
sbb
pop
shrl
add
xchg
jle
mov
push
mov
test
mov
mov
shlb
and
inc
adc
js
mov
in
mov
aam
mov
xor
adc
loopnew
call
add
aam
push
sbb
mov
pop
aad
aaa
mull
push
xor
stos
mov
push
xchg
sub
test
call
shrb
sub
jmp
pop
jns
jmp
popf
je
cmc
test
jp
mov
movl
pusha
out
sbb
dec
dec
lock
in
and
sub
mov
addb
push
stos
lcall
jnp
call
ficoml
jb
adc
ret
push
scas
sar
mov
ret
shrl
dec
push
jmp
inc
cmp
push
mov
xchg
es
xchg
out
iret
loop
in
ljmp
ljmp
dec
xor
push
adc
fidivl
imul
mov
or
pop
ds
inc
jmp
adcl
loope
xchg
cld
xchg
jp
jb
mov
push
lret
dec
lods
mov
loopne
pop
lret
sti
jnp
xorb
xchg
sub
fs
xor
sbb
ucomiss
pop
xchg
scas
jns
arpl
sar
sbb
mov
add
add
cs
mov
icebp
mov
mov
mov
add
add
jecxz
addl
sbb
and
mov
push
mov
out
add
fstpl
mov
and
push
and
push
pop
jb
and
or
cs
in
clc
daa
out
in
ja
dec
fisubl
or
test
pop
lret
ja
fwait
or
sub
cmp
xchg
xor
or
mov
fimull
inc
and
in
cmp
es
in
icebp
inc
cs
sub
inc
cmp
hlt
xchg
gs
xchg
pop
lret
or
add
pop
fwait
pop
lods
and
popa
adc
fbstp
fldcw
jmp
and
pop
cmc
or
das
mov
sub
imul
xor
movsl
mov
enter
ja
push
mov
insl
cmp
mov
mov
sub
mov
roll
mov
mov
dec
mov
xor
cmp
insl
adc
xchg
xchg
test
sub
loope
insl
imul
sti
rcrl
packssdw
sub
push
insb
pop
int
arpl
lods
loope
dec
jne
mov
push
mov
and
popa
mov
push
xchg
xchg
jg
mov
sub
mov
jg
lods
or
lcall
fucomp
xor
gs
and
stos
or
add
jnp
fwait
scas
pop
mov
mov
bound
mov
pop
cmpsl
sub
sub
in
adcb
por
jbe
push
out
adc
insl
sub
hlt
cmp
insb
fisttpl
jecxz
jb
fstpl
addl
dec
and
sbb
push
mov
pop
idiv
push
pusha
push
xchg
mov
jbe
pop
sub
jbe
cmp
and
inc
ret
add
fdivr
and
rolb
add
dec
dec
dec
dec
sub
call
and
popa
mov
in
mov
ret
jmp
fwait
add
push
fistpll
pop
lahf
sbb
fsts
inc
insb
mov
loopne
mov
jl
lret
mov
stc
lahf
jnp
jp
xor
icebp
mov
fcompl
into
or
adc
xchg
inc
and
cmp
insl
test
ffree
add
imul
pop
decl
repnz
clc
or
push
cli
into
xor
mov
push
sbb
test
stc
pushl
xchg
jb
sub
mov
and
xchg
adc
out
pop
test
mov
loopne,pn
xlat
jmp
jmp
adc
fidivrs
xchg
mov
sbb
jmp
test
scas
mov
call
jns
push
or
lcall
mov
mov
rcrl
sbb
ljmp
repnz
int
adc
loop
dec
shll
mov
clc
mov
sub
das
push
enter
call
inc
dec
push
scas
fisttps
dec
js
mov
icebp
or
sub
data16
lcall
sub
sbb
lock
sbb
in
das
jge
inc
repnz
push
xor
pop
ljmp
mov
iret
sbb
sub
xchg
fsubrl
adc
mov
ds
and
js
outsl
pop
or
add
bsf
xchg
cmpsb
faddl
xchg
mov
fidivl
loope
mov
out
mov
cs
lock
mov
icebp
push
out
xor
jns
loope
decl
push
lahf
fmull
insb
jae
fdivl
cmpsb
stos
aad
cwtl
push
sar
jmp
fdiv
sbb
mov
daa
outsl
lods
sbb
nop
add
in
sarl
mov
pop
test
call
cmpsb
inc
mov
xchg
adc
jp
vpshaw
add
mov
call
mov
ret
pop
jg
pop
add
and
push
aad
lds
shlb
movsl
jg
sti
dec
mov
jg
cld
mov
push
adc
scas
xchg
ljmp
clc
cmovns
mov
daa
mov
inc
test
jecxz
subb
fstl
pushf
xor
insl
mov
xor
pinsrw
mov
mov
sbb
cmp
std
push
sub
and
cwtl
push
adc
or
inc
dec
icebp
cmp
sti
cmp
fimull
sub
fadd
fidivrl
mov
daa
mov
mov
cli
push
scas
je
mov
inc
add
out
mov
mov
dec
sub
icebp
cmc
mov
das
incl
push
mov
xchg
divl
daa
pop
inc
stc
iret
cmpsl
into
pop
stos
or
lcall
ja
push
test
and
push
dec
in
sub
stc
dec
call
pop
sti
rcr
jge
pushl
std
or
in
cli
gs
andb
lahf
mov
cmp
leave
and
lcall
dec
lcall
insl
or
in
bound
adc
cld
cli
xor
xchg
pop
push
repz
lret
outsl
mov
add
jp
pop
jns
stc
mov
ficoms
push
push
fdiv
in
aaa
out
mov
shlb
jns
scas
std
addr16
xchg
setg
jo
test
dec
insb
in
sbb
lods
pop
mov
cmc
xchg
adc
xchg
clc
mov
test
and
fsubrl
jg
sbb
jbe
cmp
call
xchg
insb
pop
jo
fs
addb
clc
push
mov
ja,pn
cmp
push
jmp
add
push
pop
or
jl
loopne
addr16
mov
lock
inc
or
ljmp
test
cmp
in
mov
es
jne
mov
jo
fidivrl
inc
pusha
call
inc
into
es
lret
and
sub
shlb
push
mov
icebp
outsl
mov
jne,pt
pop
pop
pop
sub
inc
cmp
push
out
push
fmuls
ljmp
xor
mov
pop
test
aas
jg
mov
xchg
add
dec
jo
ds
and
mov
add
sti
inc
xchg
dec
addr16
int
mov
cld
push
mov
ljmp
loope
inc
or
mov
out
les
nop
idivb
or
call
outsl
or
cmpsb
push
jge
enter
lds
cmc
dec
and
outsb
dec
jmp
sub
xor
popa
mov
mov
xor
repz
incl
mov
or
ret
and
sbb
hlt
ss
adc
add
and
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
arpl
and
jo
rolb
les
and
add
jmp
cld
ja
mov
xor
dec
and
pop
insl
pop
pop
mov
adcb
lea
jmp
push
out
inc
shl
cmp
aas
inc
pop
jg
fiadds
jl
mov
and
xchg
mov
fiadds
decl
leave
cmpl
test
jbe
test
xchg
xchg
pop
push
test
repz
mov
cmpsb
cmp
add
call
push
jo
mov
divl
incb
aad
push
push
out
ja
cltd
je
shll
call
sub
pop
sahf
adc
loope
das
or
push
mov
mov
ret
dec
cmp
xchg
leave
std
repnz
jnp
or
and
push
xchg
jg
std
jo
sbb
pop
inc
xlat
mov
ljmp
subl
inc
xor
dec
std
push
adc
fstp
or
or
sub
jno
dec
mov
push
dec
leave
fwait
mov
mov
xchg
cltd
shr
pushf
addr16
xor
mov
loopne
loopne
or
push
adc
in
and
lds
dec
jmp
cmp
xchg
push
jno
jae
inc
jnp
fistl
jo
jbe
push
dec
sbb
lcall
scas
lahf
jbe
sub
mov
jmp
mov
inc
mov
push
cmp
mov
jp
cld
push
fstpt
ds
mov
jne
or
push
xchg
lcall
adc
jmp
movsl
xor
loopne
shl
movsl
mov
jbe
test
popf
imul
aad
andb
pushl
fbstp
mov
push
rcl
js
pushf
cmp
cmpsb
stos
mov
xchg
jmp
gs
push
sbb
test
jle
cwtl
mov
jbe
pop
or
fcmovnb
nop
adcl
incl
ljmp
dec
testb
cltd
into
mov
and
stos
je
cmpsb
sbb
pop
icebp
mov
popa
add
and
pushf
cmpsb
push
adc
test
jmp
outsl
or
xor
dec
fsubrs
mov
fbld
sub
decl
pop
push
scas
fbstp
imulb
insb
sahf
rorb
mov
push
aad
bnd
inc
jl
add
and
insl
ja
or
xchg
aad
mov
ljmp
lcall
icebp
js
jne
fwait
mov
addl
je
mov
jnp
xor
jo
sub
mov
ds
jns
push
jl
pushf
rclb
sbbl
gs
int3
loop
rcr
adc
mov
inc
movsb
cmpsb
enter
jp
pop
mov
fninit
mov
lock
movsl
aam
fimuls
and
mov
loopne
pushf
movsb
cmc
pop
jno
cmp
jg
call
cmp
cld
jnp
ss
movsl
and
cmp
enter
mov
push
and
mov
cwtl
xchg
bound
ja
mov
addb
adc
pop
pop
dec
faddl
or
inc
clc
jo
pop
sub
out
in
daa
decl
or
shlb
xchg
mov
push
aam
ss
frstor
es
and
mov
into
adc
int3
into
repnz
adc
scas
push
push
pop
inc
shlb
in
cmp
ljmp
mov
fsubrp
cwtl
lcall
or
sahf
pop
xor
out
movsb
cwtl
jmp
pop
arpl
mov
mov
bound
pop
mov
lcall
out
xchg
ljmp
mov
inc
xchg
jns
ja
int
mov
inc
push
test
pop
lock
roll
lock
loopne
mov
inc
in
pop
std
cmc
push
cmp
jmp
cmp
dec
xchg
jl
sbb
sub
xor
sbb
icebp
lods
jne
in
cmp
addps
int3
cmp
push
add
in
stc
ror
add
mov
mov
xor
inc
cmp
mov
movsb
adc
push
jg
xlat
pushl
ss
mov
sbb
or
je
pop
shl
call
cli
jmp
xchg
rolb
cmp
stos
mov
outsb
repnz
jmp
mov
cs
inc
cmp
cmp
sbb
dec
nop
fisubs
fidivrs
xchg
outsl
call
xor
aas
in
push
dec
repz
or
lret
scas
add
add
decl
pop
in
or
and
test
enter
mov
mov
incl
aaa
jge
sbb
push
mov
outsl
aam
cwtl
scas
or
movsb
mov
cmp
outsb
inc
jmp
cmp
xor
jmp
das
jg
xchg
imul
jg
jl
mov
lcall
cs
push
or
gs
adc
jmp
jbe
decl
scas
test
jnp
jne
in
int3
adc
add
pop
std
inc
inc
cltd
cltd
xchg
xor
jmp
aam
test
repz
cmpsb
aam
pop
out
fcmovnb
test
in
fsubr
in
push
std
cmp
das
cmc
pusha
fwait
mov
js
in
btc
jbe
notb
mov
mov
add
lods
pop
push
arpl
or
cmp
jmp
loopne
xchg
mov
sub
test
dec
add
fidivs
gs
lea
test
fisttps
cld
push
push
cmpsb
daa
gs
mov
mov
mov
iret
push
out
lret
pop
adc
lret
call
shl
cwtl
adc
and
mov
inc
jnp
test
mov
clc
pop
inc
mov
mov
decl
arpl
pop
sar
xor
insb
aas
inc
mov
data16
bound
repnz
push
jmp
sbb
in
dec
and
or
push
inc
adc
dec
ja
xor
incl
lret
pop
pop
cmp
jl
add
in
dec
sbb
sub
ljmp
in
mov
sub
ret
sarl
jecxz
adc
mov
and
push
push
mov
dec
pushf
clc
fcomip
push
inc
ret
pop
and
js
pusha
out
cmp
ss
pop
repz
stos
mov
int3
dec
mov
bound
shll
or
addr16
lret
xchg
out
cmp
lcall
lea
jge
shlb
cmc
mov
inc
pop
sub
stc
xchg
xor
outsl
clc
decl
pop
mov
pop
leave
sbbb
int3
not
mov
cbtw
mov
mov
cli
lock
scas
cmc
stos
movsl
xchg
mov
mov
aas
adc
pop
cld
repz
cld
ret
dec
push
mov
push
xor
push
cli
icebp
dec
cld
inc
loope
sbb
push
ds
arpl
push
mov
adc
iret
mov
arpl
lock
xor
lret
jno
add
push
xchg
sub
mov
xchg
inc
iret
sub
jmp
mov
inc
sbb
lahf
call
mov
push
jb
test
mov
xchg
ret
fisttpl
jbe
stos
popa
sbb
dec
xor
nop
decl
cmp
and
fisttps
mov
mov
and
pushl
repnz
movsl
sbb
cmp
cmp
es
dec
xchg
cltd
push
lods
dec
add
mov
fcmove
int3
cltd
test
sbb
xor
shrl
imul
mov
push
mov
adc
lahf
cmp
cmp
jmp
clc
xchg
test
fnstsw
scas
call
xchg
inc
push
and
sub
push
xor
fisubl
sbb
or
push
call
push
xchg
mov
pop
jl
or
int
ret
lahf
mov
sbb
xlat
cltd
orb
jg
incl
push
jl
loop
aam
adc
leave
cwtl
inc
pop
jae
push
cmc
xor
cmpsb
jp
pushl
push
daa
adc
lea
notb
mov
lds
pusha
jae
add
push
imul
lcall
lcall
inc
pop
push
pop
je
or
mov
dec
or
jge
gs
dec
fwait
jmp
test
in
ret
or
fisttps
inc
sti
inc
and
lock
hlt
fwait
xchg
push
movsb
sbb
push
push
mov
lods
dec
or
popa
out
mov
mov
push
fs
movsl
lds
xor
push
test
in
adc
lcall
sbb
add
inc
mov
or
mov
fsubrl
cmp
leave
mov
lcall
pop
jecxz
ss
dec
sub
iret
into
in
mov
pop
inc
scas
xor
repz
ljmp
sbb
xlat
fisubl
std
je
or
jbe
popa
mov
fsub
repz
js
and
pop
cld
ljmp
fsubrs
pop
xor
test
dec
inc
mov
ss
mov
fs
dec
jae
push
cltd
push
jbe
cmp
out
and
das
pop
leave
pop
lods
mov
incl
dec
push
out
dec
jo
es
in
nop
xlat
test
pop
nop
lcall
call
xor
jp
inc
ficomps
xor
and
bound
xor
cmp
xchg
xchg
loop
adc
sbbb
icebp
xchg
lcall
or
and
jae
inc
jge
mov
and
ret
push
call
out
test
xor
jl
mov
aam
xor
cmpsb
fs
fcoml
cmp
xor
push
sub
sbbb
aas
or
sbb
adc
jge
es
incl
sbb
mov
xor
mov
mov
xchg
loop
add
or
fmulp
frstor
inc
sbb
testb
ds
in
pushf
imul
mov
sub
add
inc
jg
dec
pop
aam
and
xchg
cmp
out
push
sbb
clc
pushl
leave
fisubrl
or
ja
fsubl
inc
stos
outsb
fidivrl
cmp
out
repnz
mov
and
mov
inc
icebp
std
hlt
adc
and
xor
lcall
stos
gs
in
jl
ret
lcall
mov
mov
cmp
call
mov
mov
insb
cmc
cld
xor
dec
sbb
mov
shll
or
lds
sti
lods
in
xchg
test
aad
add
add
jge
mov
dec
jg
push
push
popa
sbb
mov
stos
leave
adcl
out
and
shrl
mov
mov
adc
push
mov
ficoml
jecxz
outsb
aad
mov
test
inc
cltd
dec
inc
stos
or
das
cmc
adc
push
add
daa
cld
mov
sar
incl
inc
lret
insb
push
adc
jg
js
xchg
adc
hlt
push
or
pop
mov
pushl
clc
lret
lcall
fdivp
cmp
mov
adc
popf
pushf
sti
fistps
push
incl
lea
stos
sub
xlat
pop
jecxz
rol
sub
fidivrl
dec
ds
scas
xchg
jmp
pushl
mov
das
cmp
sbb
loopne
mov
xchg
repnz
pop
cmp
js
rcll
repz
iret
sub
inc
popa
push
push
scas
add
mov
pop
or
rclb
call
insb
imul
int3
bound
repnz
pop
xor
ds
scas
mov
stos
incl
add
or
mov
movb
cmp
fsubl
pop
ljmp
sub
jnp
pop
stos
cmp
push
mov
dec
dec
scas
jecxz
and
shr
adc
inc
incl
or
shll
jl
fiadds
cwtl
aaa
mov
jmp
call
xchg
jbe
xchg
jg
jns
cmp
mov
mov
sub
adc
push
das
sbb
stc
rorl
fcomps
movsb
loope
jmp
lods
lretw
xorb
es
in
inc
lret
xchg
pop
push
sbb
orl
sar
ds
sbb
mulb
add
push
and
jmp
fwait
inc
clc
fwait
push
dec
mov
cmp
into
jo
addr16
pop
adc
jecxz
loop
loope
xchg
ljmp
xchg
imul
rol
cli
pop
push
shrb
mov
scas
push
pop
mov
cmc
adc
lcall
jo
push
pop
dec
test
cld
jb
jl
lock
xchg
in
jp
mov
mov
pop
in
push
loopne
pop
sub
data16
ret
add
xchg
jno
jae
push
or
mov
push
leave
adc
pop
mov
cmpsl
pusha
scas
pop
call
sbb
cmpsb
push
cmp
mov
aam
jg
jmp
mov
in
fimull
xchg
fwait
lods
leave
cltd
clc
test
repz
mov
jmp
mov
mov
fmuls
scas
cwtl
adc
jmp
cmpsb
gs
call
in
insb
filds
iret
bound
mov
dec
xor
jl
adc
push
push
jp
push
imul
pop
cli
inc
int3
repz
xor
jne
or
jmp
icebp
scas
decl
ss
jl
inc
imul
leave
hlt
cltd
fs
popa
test
pushl
xor
cld
fsubs
dec
xchg
loope
fildll
shlb
xchg
in
jle
push
or
push
sbb
push
push
dec
mov
or
jmp
test
sbb
mov
pop
mov
idivl
in
cmp
push
jo
push
decl
sbb
movsb
cmpl
lock
cwtl
lahf
les
dec
or
dec
shll
incl
lds
sub
cmp
inc
or
push
jle
inc
pop
loope
and
or
call
imul
ja
testl
jmp
mov
sub
and
cmp
addr16
mov
mov
repnz
decl
ljmp
xchg
sbb
scas
test
mov
pop
mov
dec
dec
jno
les
cwtl
ret
xchg
inc
mov
jle
ljmp
add
decl
jl
mov
xor
sub
push
pop
sub
sub
in
sarb
das
and
out
xchg
stos
adc
sub
jle
sub
mov
out
das
add
jns
out
adc
inc
fstp
leave
cmp
out
lock
jg
add
subb
js
sbb
cmovb
popf
enter
std
jbe
decl
in
push
int
push
stc
sub
enter
sbbb
mov
ljmp
mov
sub
jae
and
popa
out
addl
lock
decl
sub
test
or
push
push
mov
xor
pushl
mov
push
movb
sbb
push
ja
cltd
cmp
push
rolb
daa
hlt
mov
mov
dec
cmp
push
fldenv
scas
popa
pop
cli
cltd
sub
xchg
insl
icebp
inc
sbb
adc
pushl
push
sbb
hlt
jge
mov
mov
sub
aad
jne
push
mov
out
ljmp
ret
mov
cmpl
cwtl
or
mov
outsb
xchg
mov
icebp
in
mov
add
xchg
bound
gs
test
mov
test
dec
ret
ljmp
cmp
xor
inc
in
les
dec
jbe
mov
sub
in
aad
sbb
inc
lds
subb
xchg
sbb
jbe
dec
les
xchg
out
pop
mov
das
inc
js
mov
and
or
loope
test
stc
fdivrp
call
cmp
or
push
adcl
sub
imul
inc
les
mov
incl
push
mov
dec
inc
or
movb
rcr
xchg
push
sub
incl
push
fcomp
test
jnp
popa
das
ss
cmpsl
push
jns
repz
jmp
dec
or
test
lea
loopne
cmp
jle
lret
lods
imul
out
cli
mov
push
sbb
pop
and
pop
push
loopne
inc
add
push
imul
aaa
adc
sbb
xor
sbb
cmc
inc
test
lock
cld
push
call
xchg
mov
jno
outsl
mov
loope
das
or
pop
push
cmp
mov
call
xchg
mov
scas
lret
das
pop
mov
and
ljmp
mov
andb
das
incb
cli
sub
gs
dec
mov
decl
mov
adcl
inc
push
leave
jmp
xchg
incl
in
lea
int
mov
dec
sbb
ficompl
dec
adc
lods
or
jg
cmp
adc
stc
cmp
nop
pop
xchg
adc
out
xchg
out
xchg
add
xchg
or
incl
aam
inc
test
and
inc
iret
lock
decl
in
sbb
inc
repnz
sbb
cld
lcall
xchg
divl
mov
stos
lds
cmp
pop
rclb
lds
add
push
push
daa
test
adc
dec
outsl
cmp
rol
or
jns
bndldx
push
mov
popf
jmp
les
lcall
or
jne
sarl
pop
push
jo
mov
fldl
or
scas
inc
js
decl
mov
push
mov
xlat
push
pushf
aad
out
std
pop
mov
decl
popf
or
out
jae
cwtl
addr16
cld
add
push
inc
test
or
jbe
lods
pop
mov
mov
rcrl
cltd
push
push
loope
xchg
and
call
pushf
cltd
dec
mov
out
pop
test
add
lcall
jae
popf
pop
aam
xlat
sahf
not
andb
int3
aam
sub
fnstcw
ljmp
js
lcall
inc
out
push
fucomp
jmp
pop
insl
sub
cmp
sarl
ret
cmpsl
xchg
pushf
and
lock
mov
shl
mov
jmp
cmp
or
jnp
std
std
fwait
hlt
and
push
out
jg
push
pop
popf
hlt
mov
xchg
arpl
pop
mov
cltd
sub
ljmp
inc
sbb
adc
xchg
jge
pop
frstor
rorb
in
cmpb
adc
fdivrp
pushl
add
out
shrb
xor
ljmp
testb
fistl
and
mov
mov
adc
xchg
mov
inc
sbb
rcrl
jmp
movsl
jae
jns
in
pop
leave
repnz
in
bswap
xchg
clc
push
pop
decb
mov
decl
js
scas
mov
outsl
cmp
xor
and
aaa
sar
pop
loope
push
sbb
shrb
jmp
lret
test
inc
pushf
sti
leave
sub
repnz
sub
movsl
sbb
adc
adc
mov
jnp
adc
cmpb
stos
lods
xchg
mov
adc
adc
std
fadds
xor
loop
stos
test
inc
sbb
mov
jl
add
les
mov
dec
lea
push
fldcw
xchg
sbb
decl
repnz
xor
ljmp
sarl
out
jge
xchg
pop
aad
mov
pushl
ret
ret
loopne
xchg
or
jg
int3
mov
cmpsl
pop
or
sbbb
call
fcomps
outsb
orb
push
adc
out
pop
sbb
ror
push
lock
inc
fildll
jnp
add
mov
pop
xor
lea
jl
dec
add
call
mov
popa
dec
cmp
or
outsl
dec
test
aaa
nop
pop
cs
sub
aad
push
cmp
pop
inc
mov
xchg
xchg
mov
mov
mov
cmp
sub
filds
cmc
jnp
inc
pop
or
fcmovnbe
fs
repnz
pusha
stos
ljmp
fiaddl
push
fsubrs
flds
in
mov
and
inc
push
mov
mov
call
gs
push
or
fs
cld
sbb
mov
test
lcall
xor
addl
ss
sub
sub
jmp
std
outsb
sub
pop
adc
fsubrl
aam
dec
out
leave
sub
lret
jle
xor
incl
jge
cmpl
inc
scas
push
mov
out
push
leave
cmc
dec
xor
incl
adc
jnp
loope
jnp
pushf
or
sbb
rorl
std
popf
mov
adc
jp
xor
sub
mov
adc
and
sti
decb
dec
dec
mov
sub
mov
mov
adc
mov
lds
incl
mov
pop
mov
dec
js
mov
mov
jmp
sti
push
cltd
inc
mov
add
hlt
ljmp
cmc
cmp
fldlg2
cli
sub
cmp
mov
int3
sbb
cwtl
sub
xor
std
into
mull
imul
inc
xchg
test
je
mov
add
mov
cmc
mov
pandn
ds
cmpsb
sbb
ud0
cs
lods
mov
popl
and
jne
jnp
cmp
pusha
mov
xor
inc
dec
std
dec
xor
push
push
pop
fnstsw
sbb
add
mov
sub
fsincos
pop
ret
jmp
es
loop
gs
repz
adc
adc
push
or
pop
jo
out
mov
xchg
shl
fldt
sub
jne
sbb
push
insb
pusha
add
xchg
cmp
dec
jns
rcl
add
jecxz
in
into
and
cmpsl
addb
repz
rcl
shrb
leave
lahf
popf
cmp
xchg
pop
jmp
adc
test
into
or
test
jbe
icebp
xchg
mov
sbb
adc
mov
push
xor
jle
fnstcw
mov
sub
cmp
mov
lcall
cltd
push
xlat
inc
popf
lahf
cli
jmp
movl
iret
adc
xlat
das
movsl
iret
ljmp
push
adc
cmp
push
repnz
push
out
jle
addr16
push
xor
ljmp
lret
clc
enter
lods
shll
in
in
fistl
xchg
dec
mov
incl
repnz
pop
dec
jnp
sbb
inc
inc
sbb
sti
lods
outsb
loop
pop
jle
or
call
ds
mov
mov
jecxz
inc
adc
pop
xchg
cmp
pushf
cmp
mov
pop
cmp
pop
loopne
lcall
out
dec
inc
mov
fimuls
fsubrl
inc
mov
push
inc
icebp
jmp
insl
stos
clc
jl
scas
mov
scas
les
cwtd
dec
xchg
filds
stos
in
lret
cmp
rolb
mov
add
mov
les
sub
decl
stc
push
jl
popa
movsb
and
sbb
mov
shlb
xchg
pop
xchg
movsb
call
jbe
neg
lds
dec
or
jo
addb
dec
jg
mov
push
mov
mov
das
cmpsb
fcomip
inc
gs
push
icebp
sahf
mov
push
push
addr16
aas
xchg
nop
xchg
call
add
and
inc
repz
sahf
test
mov
lods
lret
push
sbbb
or
addb
dec
ja
pop
sti
mov
fcomps
push
pusha
jge
inc
push
mov
nop
push
dec
loop
jne
or
sar
ljmp
xorl
fcomi
xchg
loop
insb
xor
pop
std
cwtl
out
pushl
inc
xchg
loopne
pop
push
push
jecxz
xchg
and
enter
flds
int3
out
or
iret
daa
out
inc
sub
cli
push
cmpsl
mov
out
add
add
pop
sub
pop
mov
das
ljmp
test
les
aas
cmp
das
stc
add
jecxz
inc
popa
mov
loopne
inc
mov
decl
clc
xchg
js
push
adc
shlb
cltd
add
in
int3
pusha
incl
lcall
add
xchg
adc
aad
repz
call
add
divl
mov
cwtl
mov
push
push
dec
mov
rcl
pop
lret
ljmp
lcall
rcrb
movsl
cmp
xor
jl
inc
inc
aaa
push
data16
arpl
decl
sub
icebp
pop
push
nop
mov
aas
xor
jo
fs
cmp
jg
pushl
adc
sahf
in
xchg
hlt
sub
addr16
iret
lock
push
jmp
xor
inc
outsb
pop
lcall
arpl
sbb
je
push
or
repnz
ljmp
xchg
adc
cs
cmp
andb
inc
mov
mov
das
mov
mov
enter
mov
jg
jg
cmp
adc
aam
add
insb
jp
jg
push
decb
fwait
xor
xchg
mov
es
push
fs
lea
dec
dec
dec
sbb
call
cli
les
inc
lcall
gs
mov
or
sub
xor
or
jg
ljmp
xor
mov
pop
dec
mov
jge
rol
xchg
and
sbb
push
ljmp
lcall
jbe
lret
mov
and
push
xchg
pushf
jge
repz
in
repnz
push
shrb
nop
xchg
sar
call
out
pop
aam
stos
or
ffreep
jo
and
mov
or
ljmp
sbb
mov
out
xor
addr16
or
shl
fwait
lea
dec
jmp
divb
pop
test
pop
mov
fmull
jne
test
push
js
add
in
aaa
pop
insb
and
pop
dec
xchg
rcrb
xchg
or
cwtl
stos
rorb
pop
jae
cmp
mov
mov
call
or
push
andl
xor
mov
insb
xchg
fnstenv
cmp
lds
mov
inc
pop
ret
imul
push
lret
push
iret
sbb
jmp
or
ficoms
ljmp
cmp
test
xor
stc
sti
imul
sbb
mov
ljmp
xor
dec
stc
sbb
cmp
in
inc
mov
lcall
test
cmp
decl
cmc
scas
inc
imul
sarl
sbb
and
xor
test
cmp
mov
pushl
cli
cwtl
test
je
cmp
bsf
loope
pop
lods
dec
std
fdiv
mov
repz
sbbb
test
lahf
fstl
add
jbe
cld
call
mov
lods
lds
xchg
pop
jb
in
sbb
stc
mov
outsb
ljmp
mov
sbb
pop
shrl
dec
mov
lcall
imul
shlb
and
inc
adc
sahf
mov
fcomip
mov
sbb
xor
adc
addr16
cmp
push
aam
push
sbb
movlps
mov
pop
aad
aaa
mull
add
inc
add
fs
jmp
mov
push
aam
scas
sub
pop
jns
popf
je
cmc
test
jp
mov
movl
pusha
out
sbb
lock
in
and
ljmp
inc
es
addb
push
stos
lcall
jnp
ficoml
jb
adc
ret
push
pushl
adc
arpl
sub
add
loop
cmp
push
mov
incl
sahf
loop
imul
in
ljmp
dec
xor
push
adc
fidivl
imul
mov
or
pop
ds
inc
adcl
loope
xchg
cld
xchg
jp
jb
mov
push
lret
dec
lods
mov
loopne
pop
lret
and
add
dec
xchg
ljmp
icebp
fs
xor
sbb
ucomiss
pop
xchg
scas
jns
arpl
aas
mov
add
sti
les
cs
mov
icebp
mov
mov
inc
test
call
subb
mov
mov
in
pop
sub
xor
push
adc
cltd
out
add
sbb
imul
push
push
dec
cs
sub
das
mov
add
daa
pop
jb
and
in
cwtl
in
mov
popa
mov
fists
sub
or
mov
cmp
out
add
xchg
xor
outsl
fwait
or
pop
fists
and
mov
adcl
in
aaa
leave
fildl
hlt
sub
mov
insl
ss
lret
lret
mov
sti
or
pop
ud2
es
lods
and
outsl
add
sub
cmpsb
and
jmp
mov
pop
cmc
or
add
mov
subl
jo
or
cmp
lods
loopne
or
imul
popa
out
mov
outsl
mov
mov
mov
das
in
or
mov
icebp
mov
or
insl
mov
pop
xor
insl
imul
movsb
cmp
pop
and
sub
or
imul
or
xchg
inc
or
mov
adc
xchg
cmp
mov
cmp
mov
arpl
jne
pusha
or
mov
imul
push
and
lcall
mov
imul
xor
adc
lods
or
shr
xor
mov
mov
pop
jae
xlat
adc
rclb
hlt
fwait
mov
mov
xchg
fcmovnu
pop
cmpsl
out
and
jecxz
mov
pop
lods
por
push
stos
sub
adc
cmp
push
in
mov
lods
dec
cmp
fwait
or
arpl
sbb
dec
mov
imul
pop
mov
sti
mov
sbb
xlat
icebp
mov
loope
xor
jne
or
cs
adc
rolb
add
pop
test
dec
sub
call
and
add
aas
ret
or
mov
ret
xchg
fwait
add
ss
cmp
es
adc
lahf
sbb
fsts
insb
mov
loopne
mov
jl
lret
decl
pop
mov
stc
lahf
jnp
jp
xor
icebp
mov
fcompl
into
or
adc
xchg
inc
and
jmp
aaa
ffree
add
imul
pop
mov
jnp
repnz
ljmp
movsl
clc
or
push
cli
into
xor
mov
push
sbb
test
stc
xor
mov
and
mov
adc
out
pop
test
mov
loopne,pn
xlat
jecxz
clc
pop
rcll
xlat
fidivrs
ljmp
xchg
mov
sbb
jmp
test
scas
mov
jnp
dec
push
or
jg
lcall
leave
insl
mov
mov
rcrl
sbb
out
int
adc
loop
decl
cmpsl
mov
clc
mov
sub
das
push
enter
push
xchg
inc
dec
push
scas
fisttps
incl
int
js
mov
icebp
or
sub
data16
sbb
js
sbb
lock
lcall
shr
das
jge
inc
repnz
push
xor
pop
sub
add
sbb
sub
dec
xchg
fsubrl
adc
mov
ds
and
adc
pop
or
add
pushl
bsf
xchg
cmpsb
faddl
xchg
mov
loope
mov
decl
mov
cs
lock
mov
icebp
push
out
xor
jns
loope
mov
out
adc
fmull
add
imul
sti
sub
xchg
cmpsb
stos
aad
cwtl
push
shlb
fdiv
sbb
mov
daa
outsl
lods
sbb
clc
decl
add
in
sarl
mov
pop
test
or
iret
inc
cmpsb
incl
adcl
vpshaw
add
mov
mov
ret
pop
jg
inc
pop
add
and
push
aad
lds
shlb
movsl
sti
dec
mov
incl
dec
jg
cld
mov
push
adc
scas
xchg
cmovns
mov
jg
mov
inc
test
jecxz
subb
fstl
jge
insl
mov
lcall
mov
inc
mov
mov
sbb
mov
cmp
sub
decl
cwtl
push
adc
or
inc
dec
icebp
cmp
sti
cmp
fimull
sub
fadd
fidivrl
mov
daa
mov
mov
cli
push
scas
je
movl
adc
in
pushl
inc
pushf
pushf
icebp
cmc
mov
das
les
das
es
ljmp
cmp
divl
daa
pop
inc
stc
iret
cmpsl
into
pop
stos
or
shlb
ja
push
test
and
ljmp
push
dec
in
sub
stc
dec
call
pop
sti
rcr
jge
or
in
cli
gs
mov
adc
lahf
mov
cmp
leave
and
mov
mov
leave
cmp
call
sub
enter
in
bound
adc
cli
xor
xchg
pop
push
mov
ljmp
lret
outsl
mov
add
cmp
out
dec
push
leave
ficoms
push
push
fdiv
in
aaa
out
mov
shlb
jns
scas
std
addr16
incl
lahf
push
jo
test
dec
insb
in
sbb
lods
pop
adc
xchg
clc
mov
test
cmpsl
arpl
push
or
mov
jae
push
pop
xchg
insb
pop
jo
fs
cmp
incl
enter
mov
ja,pn
cmp
push
and
jne
push
pop
or
incl
jl
loopne
addr16
mov
lock
inc
or
ljmp
js
cmpsb
sub
incl
mov
jne
mov
jo
fidivrl
inc
pusha
fistl
inc
into
es
lret
jmp
cmpl
jmp
jmp
cmpsl
scas
jne
push
mov
icebp
outsl
mov
jne,pt
jmp
pop
pop
pop
sub
inc
cmp
push
out
push
fmuls
sub
aas
jg
mov
xchg
add
dec
jo
ds
and
add
mov
test
jmp
inc
xchg
dec
incl
addr16
int
mov
cld
push
mov
call
inc
or
mov
mov
mov
les
nop
idivb
or
xlat
outsl
or
cmpsb
push
jmp
or
enter
lds
cmc
dec
and
outsb
dec
pusha
xchg
sub
xor
popa
jmp
mov
xor
repz
andl
ja
dec
or
call
ret
and
sbb
hlt
ss
or
inc
inc
dec
mov
add
adc
enter
nop
inc
add
decl
adc
or
outsl
mov
pushl
jge
pop
mov
call
lea
hlt
lock
xor
inc
out
mov
jmp
popf
jecxz
xchg
repz
push
dec
jno
push
fdiv
cs
enter
pop
das
ljmp
push
xor
adc
or
decl
cmpsl
mov
adc
imul
mov
cmp
nop
stos
push
bound
mov
jmp
mov
pop
mov
push
cmpsl
clc
pushf
push
jns
push
ljmp
aad
sub
or
jmp
cli
jecxz
loope,pn
je
pusha
fisubrl
cmpsb
aam
mov
sahf
xor
push
int3
inc
pop
jg
ss
add
in
lret
push
and
loope
mov
lcall
dec
aas
scas
lret
xchg
mov
pushf
icebp
sub
mov
ffreep
shlb
aas
inc
inc
add
adc
stos
mov
xchg
jp
adcl
fnstenv
stos
xor
lods
sub
adcl
and
mov
leave
inc
outsl
mov
test
fisubrs
sti
lock
nop
add
mov
cmc
jge
xchg
ret
call
loopne
incl
add
cmp
mov
sbb
xor
imul
pop
adc
fsubrs
in
sub
mov
dec
sbb
add
add
cmpl
stc
adc
cmp
pushl
les
jecxz
pop
cli
and
enter
adc
dec
adc
out
movsb
call
jbe
add
enter
inc
imul
xchg
ror
lret
adc
jecxz
push
decl
test
scas
pop
xor
je
in
push
aad
jp
mov
pop
sti
insl
jp
imul
ret
cltd
dec
jmp
jle
and
and
jg
incl
jno
mov
sarb
test
xchg
cmp
std
call
test
mov
jecxz
arpl
mov
dec
adc
inc
ds
cmpsl
outsl
ds
in
fcmovnbe
lock
aad
jb
in
xchg
lcall
pop
aad
pop
fldcw
inc
xchg
sbb
mov
mov
xlat
xor
inc
cmpsb
rclb
in
clc
mov
cmp
dec
dec
jb
push
mov
add
repz
test
inc
call
or
test
subl
adc
addb
adc
add
andb
dec
add
test
incl
push
inc
or
and
inc
incl
jl
mov
insb
popa
sarl
push
jg
pushl
pop
xor
outsl
or
xchg
sbb
sti
sbb
add
in
add
add
fstps
sbbl
inc
testl
push
aas
rcr
sbb
push
call
test
add
scas
es
nop
ret
sbb
cmc
add
in
pusha
mov
pushl
sbb
push
gs
pop
xchg
test
cltd
xchg
inc
adc
in
in
imul
subb
xchg
sub
andl
pop
adc
out
jp
out
test
dec
jmp
pushl
xchg
or
xchg
push
imul
jecxz
jno
out
scas
insb
jp
outsl
iret
inc
mov
jl
mov
or
push
scas
push
and
jne
mov
in
repnz
xchg
push
xchg
ret
leave
add
mov
push
ret
push
jl
pop
push
dec
pop
inc
cmpsb
pusha
insl
xchg
imul
dec
stos
outsl
dec
out
pushf
lcall
les
ret
std
incl
ss
stos
jbe
jmp
imul
ja
shlb
ret
fistpll
fstl
or
mov
push
in
mov
jno
jns
add
out
jo
out
xchg
mov
lahf
aaa
adc
lret
aas
pop
out
fisubl
rcll
or
imul
negl
xchg
or
loop
mov
in
jg
mov
call
iret
mov
das
clc
inc
dec
xlat
pop
push
mov
sbbl
add
hlt
dec
loop
jo
incl
in
ja
call
hlt
bound
shrl
fnstenv
sarl
loop
push
out
cltd
mov
fwait
xchg
les
xchg
dec
add
imul
js
imul
jmp
sbb
jecxz
jne
mov
dec
js
inc
inc
add
add
into
repnz
pushw
ljmp
into
js
seto
add
incl
adc
in
dec
loop
insb
jno
adc
shll
cld
dec
mov
xchg
fnstcw
pop
jnp
push
test
xchg
adc
cld
repz
add
add
sarl
in
insl
js
fs
test
mov
xchg
adc
or
push
loop
mov
pushf
negl
dec
jle
sbbb
jnp
push
mov
add
push
sbb
mov
out
movzbl
inc
ljmp
or
mov
add
incl
lcall
ret
iret
lock
negb
out
pop
int
inc
mov
or
push
imul
rcr
inc
pop
sbb
cmp
fmuls
test
incl
les
push
add
out
push
mov
add
je
or
ljmp
test
cld
icebp
cmp
or
xor
decl
jne
in
or
mov
mov
push
nop
lret
outsb
aas
js
sti
outsb
add
adc
in
push
push
fisttpll
pushl
xchg
mov
sbb
cmpsb
lds
or
or
and
push
out
nop
jbe
dec
and
and
outsl
mov
sbb
lcall
push
mov
adcl
pop
xchg
rolb
xchg
repz
repnz
iret
or
adc
fldt
sbb
aam
push
dec
insb
pop
test
lods
pop
ljmp
xchg
push
enter
cmc
incl
sbbl
push
mov
ja
or
enter
ljmp
js
mov
icebp
mov
loope
mov
xor
push
movsb
dec
insb
xorb
ljmp
jmp
push
xor
sbb
cli
add
shlb
repnz
jle
in
mov
mov
rolb
xchg
add
jb
movsl
xchg
mov
gs
sbb
incl
sub
test
rcll
fisttps
cmpsl
rcll
repnz
in
sub
std
push
clc
mov
stos
and
fdivs
insl
subl
dec
push
lahf
xchg
jns
std
push
test
ja
sub
ljmp
xchg
int3
leave
add
push
xchg
xchg
mov
insb
test
or
and
push
inc
aad
jbe
adc
pop
ret
jg
rcrl
lds
add
xor
es
push
jbe
push
sub
xchg
inc
pop
aad
mov
rolb
mov
add
fwait
dec
jecxz
sbb
insb
push
sbb
ljmp
mov
pop
shlb
jecxz
xchg
aam
cmp
xchg
std
mov
push
dec
cmp
xchg
xchg
jge
pushl
pop
mov
out
lret
mov
push
jae
call
lcall
pop
lock
lahf
sbb
mov
sbb
jmp
lds
insb
je
add
push
push
dec
js
mov
outsl
fbstp
push
pop
std
lods
jecxz
push
hlt
mov
mov
scas
push
ljmp
aaa
jmp
ss
jae
data16
mov
dec
xor
push
imul
pushf
scas
pop
mov
icebp
mov
mov
cs
divb
inc
rclb
fists
mov
inc
into
mov
ret
popf
mov
lds
fistpll
sub
pop
inc
rcll
movsl
cmp
call
jbe
lahf
scas
lds
sub
in
shrb
ss
xchg
sub
lcall
decl
push
arpl
inc
jbe
outsl
push
dec
je
dec
push
push
xor
ja
dec
dec
jns
das
clc
decl
cmp
jp
popa
inc
push
outsb
push
jno
push
js
js
push
aaa
insl
bound
pushl
jp
insb
push
pop
popa
outsb
insb
push
jp
jp
sbb
push
dec
insb
push
lcall
inc
bound
addr16
push
cmp
jbe
jns
dec
xor
aaa
inc
jno
push
gs
pop
push
inc
dec
push
inc
inc
mov
pop
outsl
jne
xor
push
aaa
js
pop
push
dec
jb
js
push
jp
cli
inc
jno
push
jbe
push
fs
dec
outsb
outsb
dec
insl
imul
push
popa
dec
push
mov
aaa
data16
push
push
imul
xor
insb
dec
pop
push
ss
cld
add
insl
pop
cs
push
inc
push
imul
jno
outsl
push
call
inc
ja
push
outsl
pop
pop
jno
jae
dec
push
push
bound
dec
outsb
cmpsb
data16
pop
insb
jp
je
xor
cmp
ja
pop
insl
push
ljmp
jl
imul
xor
dec
je
jp
jne
pop
dec
inc
aaa
push
fists
loopne
inc
inc
mov
jo
je
xor
push
dec
mov
imul
shlb
xor
pop
imul
call
inc
pop
ja
inc
popa
imul
jbe
jbe
inc
inc
jne
outsl
je
dec
push
push
jns
divb
popa
inc
dec
dec
push
js
dec
jb
dec
xor
outsl
push
inc
pop
insb
push
push
in
pushl
dec
push
inc
dec
jae
cs
insb
add
push
je
je
or
add
add
popa
add
inc
pop
and
dec
adc
orb
add
adc
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
add
fcoms
jle
push
scas
inc
xchg
cmp
jnp
push
sub
inc
pop
iret
repz
data16
xchg
mov
cmp
into
fsubr
idivb
jnp
pop
push
and
ss
push
repz
repz
jb
mov
stos
mov
fsubrp
sahf
cmpsl
stc
cmp
or
sahf
out
dec
bound
out
sahf
out
mov
repz
fsub
clc
or
push
and
repz
inc
dec
push
pop
repz
repz
mov
iret
mov
rcr
out
sahf
cmpsl
stc
cmp
adc
sahf
out
dec
pop
push
sahf
out
pushf
mov
ror
sarl
clc
add
sbb
cmp
repz
inc
push
pop
fs
repz
mov
iret
mov
lret
hlt
sahf
out
or
sahf
out
push
pusha
push
mov
jns
out
test
rcr
iret
sarl
cld
adc
iret
repz
push
pop
push
xrelease
repz
rcr
out
push
mov
out
sahf
and
inc
push
pusha
jns
out
push
xchg
sahf
mov
jns
out
enter
iret
repz
cld
or
cmp
repz
push
cmp
repz
rcr
out
ds
in
add
adc
out
sahf
xor
dec
pop
fs
sahf
out
test
jl
out
fsubr
add
iret
sub
push
pop
push
iret
repz
orb
rep
mov
sti
cmp
out
decb
mov
cmp
repz
pop
jo
cmp
pop
push
mov
mov
out
lcall
pop
sahf
out
sahf
js
stos
ret
cmp
sarl
and
push
outsb
repz
xrelease
jns
iret
adc
sub
pop
sahf
out
sahf
jo
mov
cmp
jne
push
sbb
iret
repz
push
loop
cmpsl
stc
cmp
adc
sub
jns
out
jo
sahf
mov
out
add
sbb
dec
iret
repz
bound
lods
ficompl
or
and
pop
jns
out
jb
mov
lahf
out
cld
adc
cs
iret
repz
pop
jbe
movsb
mov
cmp
add
sbb
dec
jns
out
bound
movsb
mov
shr
add
sbb
iret
repz
dec
data16
lods
ret
repz
out
or
push
cmp
out
dec
push
jl
out
loopne
adc
es
repz
inc
push
outsb
test
cmp
in
adc
sub
out
inc
push
outsb
test
mov
enter
dec
cs
pusha
jp
lods
lcall
or
and
sahf
out
cmp
push
cwtl
repz
out
fdivp
push
lret
cmp
es
push
outsb
test
mov
sbb
out
xor
jp
repz
out
rcl
or
iret
repz
and
push
push
repz
rcr
or
jns
out
and
dec
data16
jns
out
mov
fdiv
adc
into
and
or
and
sub
add
and
addb
mov
mov
xchg
idivl
repnz
int
xchg
mov
xor
jb
push
mov
ss
int
mov
shlb
stc
fists
cmp
shlb
rclb
fistl
int
ret
rol
xor
adc
idivl
fwait
int
divl
jecxz
out
ss
loopne
mov
mov
int
mov
xchg
pop
repnz
pop
xor
adc
data16
add
mov
mov
xchg
aas
repnz
ss
and
daa
xor
adc
idivl
ss
push
mov
xchg
pop
repnz
rolb
insb
jle
xor
inc
idivl
mov
fwait
int
mov
jg
arpl
xor
pusha
std
outsl
ss
mov
pushf
divb
hlt
sub
mov
dec
xchg
incb
adc
icebp
cmp
jno
mov
pop
mov
push
icebp
mov
mov
idivb
or
dec
decb
pop
xlat
push
mov
cs
jbe
data16
insl
push
push
push
divb
cld
pusha
fwait
stc
add
sti
test
cli
jecxz
pusha
xorb
ss
call
orl
mov
divb
push
inc
add
xor
incb
testb
cwtl
incb
incb
divb
adc
clc
and
incb
incb
xor
incb
incb
cwtl
rolb
push
incb
incb
pop
pusha
add
incb
incb
not
dec
pusha
ss
push
pop
imul
push
incb
incb
fsin
incl
nop
leave
xchg
cmc
shll
push
cli
addl
xor
push
push
std
out
aaa
push
push
inc
mov
jne
repnz
inc
cmpsl
cmc
rorb
stos
test
insb
mov
cs
push
incb
insb
pushl
push
xchg
lock
shl
ror
stos
popa
jne
and
int
iret
and
cmpsb
mov
ffreep
div
lret
cmc
incb
incb
subl
int
jmp
cs
adc
xor
incb
incb
pusha
add
cwtl
incb
incb
incb
add
or
cmc
iret
push
incb
incb
incb
inc
add
xor
incb
incb
add
xor
incb
incb
adc
incb
xor
dec
pusha
push
incb
cmc
leave
push
or
incb
incb
incb
xor
push
fs
push
cmc
hlt
movb
xchg
mov
incb
incb
mov
adc
incb
incb
hlt
lret
enter
push
incb
incb
and
cltd
incb
incb
incb
adc
adc
incb
sub
incb
incb
incb
xor
push
hlt
xor
push
incb
push
cwtl
rolb
incb
incb
cwtl
pop
pusha
and
push
hlt
ret
pusha
add
incb
incb
incb
xor
push
incb
xor
movl
add
incb
incb
incb
pop
pusha
add
incb
incb
hlt
les
adc
push
xor
incb
incb
sbbl
inc
add
xor
incb
incb
pusha
add
cwtl
incb
incb
incb
fwait
in
pop
hlt
fidivs
repz
ss
sbb
hlt
jecxz
dec
repz
cmp
ss
cmp
jns
insl
cmp
fldcw
inc
repz
mov
cltd
ljmp
fisubl
repz
hlt
fstpl
mov
mov
push
stc
pop
push
fnstcw
cmp
fstpl
push
fidivrl
pop
pop
mov
ljmp
stc
push
inc
and
repz
fwait
in
push
repnz
fbld
in
inc
and
out
aaa
fistps
and
repz
les
rcrb
jg
insl
jecxz
push
inc
les
fdivp
flds
ret
fldcw
in
mov
cmp
mov
sbbl
fs
sub
push
cld
pop
pop
out
cmp
fistpl
push
jl
fdivr
mov
dec
data16
sti
pop
cmp
sbb
cmc
fdivrs
repnz
fldcw
push
mov
jno
sbb
int3
jbe
cmp
pushf
fldl
jl
sub
push
data16
mov
push
pop
iret
int
mov
pushf
adc
jp
fnstsw
jb
rcrb
cld
xchg
pop
mov
xlat
pushf
xchg
cmc
xlat
jl
int
jnp
outsb
xlat
mov
cld
cmpsl
pop
rorl
int3
out
cmp
repnz
ljmp
mov
mov
ret
ds
fwait
int
repz
lahf
push
jp
fistps
lods
pop
mov
pushl
sbb
out
jge
mov
insb
fisttpll
cwtl
cmp
fwait
int
jle
pop
icebp
out
cmp
inc
icebp
repz
pop
cs
ss
pop
sti
add
repz
cmp
push
repz
lock
pop
out
mov
sti
fildll
fmuls
sahf
icebp
in
js
pop
xorl
cwtl
xlat
clc
out
mov
cld
data16
sbb
icebp
ljmp
aaa
fwait
int
scas
aaa
push
ss
mov
icebp
data16
int
out
mov
outsb
ror
imul
scas
scas
push
push
xchg
cld
negb
mov
mov
push
outsb
je
in
mov
int
mov
xchg
inc
rep
rcll
pop
cs
mov
jg
jmp
mov
scas
mov
int
ss
mov
jno
xchg
adc
push
fildll
shlb
inc
pop
pushf
lock
sti
insl
mov
ss
xor
push
roll
push
data16
in
jg
popf
mov
jae
xor
push
mov
mov
lock
inc
mov
cmpsl
push
xor
insb
push
inc
push
or
mov
pushl
call
ret
pushw
mov
jecxz
push
inc
fldcw
mov
ja
loop
mov
loop
fwait
push
sarb
mov
fsub
fldl
and
out
push
arpl
ret
adc
loopne
mov
cmpsl
insl
jae
cmp
sbb
in
aam
push
shll
fwait
int
mov
xchg
out
std
xlat
mov
int
pop
out
add
push
int
add
push
idiv
outsl
ss
cmp
sbb
or
out
idiv
ja
lock
pop
and
data16
mov
xor
cmp
clc
insl
fwait
int
adc
clc
add
add
pop
xchg
sbb
hlt
sub
std
data16
aam
xor
adc
incl
je
push
push
and
add
insb
push
cltd
sar
sub
push
push
int
mov
mov
push
jmp
stc
xchg
mov
fwait
neg
mov
cli
jns
push
dec
fs
push
pop
int
repz
ja
pop
lcall
dec
mov
data16
push
xchg
js
hlt
outsl
aam
xor
adc
data16
imul
xor
add
fwait
or
pop
pop
stc
ja
push
fildll
push
mov
leave
clc
stc
pop
push
lcall
jg
idivb
pop
test
mov
mov
mov
jmp
cltd
aam
divb
sti
lcall
stc
fbstp
sti
mov
cli
xor
push
cmp
clc
lcall
clc
jp
repz
mov
push
out
insb
ss
xchg
cmc
xchg
inc
in
int
mov
cmpsl
das
add
loop
inc
sub
add
repnz
cmp
xor
jnp
sti
pop
frstpm(287
nop
push
inc
push
testl
mov
repnz
xor
es
mov
notl
push
or
fnstenv
push
repz
insl
repz
stos
mov
adc
repz
jg
fwait
inc
rorl
hlt
xor
adc
mov
push
subb
fsts
xchg
jg
push
shll
fs
fists
outsb
ds
jae
std
push
push
add
adc
es
fwait
int
mov
daa
inc
add
push
std
ss
int
adc
inc
mov
fwait
dec
fs
push
jae
and
fwait
dec
gs
addb
cld
out
jg
cmp
jb
popf
jb
add
popf
or
xor
push
lea
test
fists
mov
adcl
enter
shr
pop
idivb
dec
adc
pushl
push
aas
call
add
push
sarl
test
out
add
sti
int3
idivl
sub
add
sbbb
in
mov
jne
mov
xchg
icebp
sbb
jg
leave
jno
pop
cwtl
negl
dec
scas
inc
cmpsb
inc
pop
pop
popf
cltd
push
and
test
mov
jge
daa
inc
pop
or
fdivrl
sub
out
mov
in
fcompl
adc
jae
cmp
das
sar
inc
mov
outsb
inc
cmovns
or
in
mov
mov
sub
call
sbb
jno
cltd
jns
inc
mov
cld
call
mov
cmp
xchg
call
cld
enter
or
nop
cmp
ss
mov
or
mov
add
adc
cld
vpaddd
cmp
cmp
in
add
mov
add
enter
clc
push
sbb
inc
ljmp
clc
add
mov
orb
adc
cld
pop
jle
push
aaa
outsl
repz
mov
cld
in
cmp
add
pop
sub
mov
insl
push
stc
push
ds
sbb
push
sbb
sarl
cld
sbb
dec
mov
mov
lahf
push
inc
outsl
mov
aaa
xchg
aas
cld
loope
xchg
cld
add
xor
cld
mov
insb
sti
mov
jg
ficoms
push
mov
sti
add
outsl
sti
mov
push
jmp
ret
jl
or
sub
and
sti
sti
iret
mov
sti
call
mov
jmp
stos
sti
or
das
cld
rorb
sti
lock
adc
ret
mov
outsl
sti
and
sti
loopne
lret
xchg
dec
cld
lods
mov
push
idiv
stc
iret
test
scas
pop
lock
outsb
aad
fs
push
out
jmp
das
es
xchg
jl
pop
cld
cmp
pop
sti
out
iret
sbb
push
scas
dec
ret
sti
push
out
fimuls
sti
das
cld
cmpsl
mov
cmc
iret
cmp
adc
mov
in
sub
stc
push
sti
add
jl
rclb
ljmp
inc
out
lods
pop
mov
out
inc
mov
jl
iret
hlt
jle
sub
pop
jle
sbb
push
addr16
cmp
imul
out
cli
adc
xchg
cli
jle
cli
pop
insl
or
jle
cli
mov
paddw
sarb
mov
sbb
and
or
or
decb
mov
add
sbb
xlat
cli
in
add
std
cli
adc
std
stos
mov
fwait
add
cli
push
cli
cs
repz
repnz
int
cli
cli
push
std
rorb
jmp
ror
cli
or
loopne
cli
fcmovnb
int3
jmp
sti
std
mov
shlb
cli
or
cmpw
cli
cli
cli
sbb
data16
jge
cli
out
pop
xor
inc
cli
xlat
cli
idiv
fdivrs
fimuls
jle
jle
sbb
or
cmp
jle
out
stc
sub
insb
ss
in
add
jle
mov
xchg
mov
paddd
sub
xor
stc
inc
sbbl
jns
pop
stc
sahf
mov
add
stc
into
int
xor
jg
add
stc
and
pop
fisttpll
int3
stc
xor
stc
sahf
lret
stc
fbstp
loop
mov
or
add
das
jg
loop
fsts
pcmpgtb
stc
push
jmp
outsl
inc
icebp
fildll
dec
sbb
and
lahf
xlat
push
or
outsl
pop
stc
fildll
mov
sub
stc
pusha
inc
fldt
das
scas
lods
push
movsb
jle
daa
ss
sub
fwait
add
jle
stc
std
dec
pop
stc
sbb
mov
outsl
inc
stc
push
dec
stc
iret
incb
jle
jle
stc
add
jle
out
clc
fdivs
or
clc
pop
decb
jle
clc
mov
ud0
or
ss
clc
inc
js
jg
mov
add
decb
mov
or
sub
clc
clc
sbb
and
clc
sahf
outsb
sahf
dec
mov
jle
clc
and
clc
inc
incl
aaa
cmp
push
mov
clc
outsl
fstpl
clc
cmp
clc
idiv
push
in
outsb
jbe
fmuls
or
clc
push
or
dec
add
ss
clc
sub
sbb
push
pusha
or
mov
or
jg
clc
repnz
pusha
iret
insb
clc
adc
dec
inc
clc
xor
int3
push
outsb
push
iret
decb
jle
jle
xor
sahf
jnp
sbb
jle
sub
xor
out
out
out
and
out
int
rcl
decb
out
ss
push
mov
sub
inc
out
out
out
aaa
fwait
inc
pop
out
out
loopne
push
sbb
loopne
out
pop
loopne
ret
aad
inc
shl
inc
out
lret
out
loopne
fildll
jno
loopne
out
out
loopne
fs
scas
push
fwait
es
out
loopne
xchg
pusha
xor
out
out
loopne
popl
out
out
push
fwait
dec
ds
loopne
mov
cmp
out
out
addr16
pusha
sahf
daa
dec
and
or
decb
aam
inc
shll
out
pop
out
incb
insb
sub
ds
out
dec
out
mov
sbb
hlt
jle
jle
sbb
sbb
and
jle
out
out
out
decb
mov
and
fwait
out
loope
and
xchg
cmpsb
mov
psraw
lret
out
ss
lcall
and
sub
decb
loope
popa
cmp
int
adc
out
loope
out
push
aad
ss
out
loope
mov
jle
loopne
out
out
loope
lcall
stos
loope,pt
outsb
out
out
sub
mov
out
loope
pop
out
lods
mov
loope
dec
out
out
xor
add
decb
out
ficoms
cwtl
fldcw
out
out
popa
rcrb
daa
incb
sarl
out
out
decb
jle
jle
sbb
jnp
sbb
jle
int
shr
out
in
in
in
loop
insb
push
insb
incb
mov
psrad
fsubrs
jno
loop
in
in
adc
pop
in
stos
in
loop
push
lods
clc
lock
push
in
in
loop
int3
mov
in
lret
in
loop
decb
push
in
in
loop
push
fwait
sbb
push
jmp
outsl
loop
xchg
stc
int
shll
in
in
loop
or
dec
mov
push
or
loop
mov
dec
inc
mov
lods
in
in
in
bound
daa
decb
xlat
insb
sub
aam
push
in
pop
in
lcall
in
dec
in
rcrb
ja
jnp
inc
sahf
add
imul
mov
in
in
fwait
in
jecxz
mov
adc
xchg
mov
pavgw
in
sbbw
push
cwtl
ror
cmp
decb
jecxz
or
arpl
sbb
in
jecxz
sbb
shrb
in
outsb
sahf
dec
jecxz
or
push
mov
in
in
jecxz
insl
jbe
sub
in
in
jmp
outsl
jecxz
fwait
add
pop
in
in
jecxz
fwait
sbb
in
or
jecxz
pusha
lds
dec
in
in
in
sbb
in
fdivrp
in
sub
rcrb
inc
in
sbb
test
xor
dec
inc
in
cmp
ret
outsb
push
iret
decb
jle
jle
jae
mov
in
imul
out
jecxz
jecxz
fwait
jecxz
mov
pusha
mov
jle
jecxz
jecxz
in
lret
jecxz
lcall
int
fidivs
arpl
jmp
jne
fs
push
fsubl
mov
arpl
rolb
cmc
stos
jecxz
cld
jmp
stos
loop
xor
mov
jecxz
push
inc
call
xchg
pusha
stos
std
pop
lock
jne
mov
xor
arpl
out
push
gs
mov
mov
pop
mov
arpl
cmc
xchg
in
imul
std
mov
sti
pop
jne
jle
ljmp
jecxz
jne
sti
insl
mov
push
mov
xchg
adc
pop
repz
push
xor
xor
pop
xchg
cmp
jae
roll
mov
push
sbb
fildll
cltd
arpl
jmp
mov
fs
xor
pop
sub
sbb
cmpsb
test
shrb
std
xchg
call
fistpll
sbb
sub
push
push
inc
and
adc
rclb
cmp
ljmp
nop
push
loopne
fwait
subb
out
hlt
mov
adc
adc
jmp
aam
mov
inc
daa
sub
popf
in
pop
div
push
fcmovnb
inc
push
pop
dec
push
test
mov
cld
decl
scas
add
enter
mov
or
fistpl
push
mov
in
stos
cld
mov
xor
sahf
push
dec
cmp
mov
push
jle
inc
lcall
jle
je
xor
push
mov
mov
lret
int3
xchg
jge
popl
decl
adc
mov
notb
icebp
aad
xchg
test
xchg
loope
call
fcomps
jns
jmp
xchg
add
cld
aam
jg
shl
lret
or
cltd
mov
xor
lods
inc
shll
pop
mov
call
jmp
push
sbb
xchg
aad
movl
jmp
cwtl
push
sbb
jmp
inc
fsubs
movsb
lret
mov
inc
xor
outsb
fldl
in
out
and
scas
pop
rclb
xlat
lcall
pop
and
xchg
push
or
pusha
fwait
stos
or
sbb
nop
inc
lret
push
cld
mov
xchg
loop
cld
push
pop
lret
sahf
sbb
arpl
call
mov
jb
or
mov
sarl
scas
orl
stc
decl
xor
mov
jo
mov
out
roll
test
and
ret
int3
cmpsl
jno
xor
and
aas
ret
push
daa
xor
scas
sarl
pop
pop
push
xchg
or
jp
jno
mov
add
shl
sub
test
loopne
arpl
fists
mov
sahf
int
decl
pop
mov
mov
jmp
mov
call
insl
into
shrb
jmp
pushw
mov
cltd
insl
pop
inc
daa
ljmp
aam
push
pop
pop
mov
inc
jmp
aas
aaa
xor
mov
sub
xlat
test
fs
pop
push
push
out
mov
mov
repz
mov
jne
lret
xchg
mov
pop
mov
incl
cld
scas
arpl
daa
lea
dec
cmp
hlt
mov
bound
cld
decl
xor
push
jne
mov
data16
test
xor
idivb
pushl
dec
mov
imul
bound
dec
call
pop
mov
cmc
lods
cmp
add
es
mov
and
stos
dec
mov
xor
lcall
in
incl
or
push
push
dec
and
pop
xor
mov
xchg
xor
test
lahf
sub
dec
and
jmp
sub
mov
jg
nop
and
and
scas
stos
sahf
xchg
adc
out
push
stos
lods
cmp
jg
ljmp
addr16
test
loop
jp
jle
cmp
int3
in
rcr
mov
lock
shrl
loopne
mov
sarb
andl
pop
lret
jle
xor
std
call
pop
dec
jg
dec
pushl
enter
mov
enter
lock
daa
repz
cmp
jmp
out
lods
stos
dec
mov
adc
stc
and
mov
incl
push
mov
cmp
mov
mov
rcl
popf
cli
dec
mov
adc
mov
inc
jp
xorb
pop
out
jl
icebp
jecxz
imul
addr16
dec
ficoml
outsb
dec
les
push
inc
fnstcw
mov
daa
aaa
xchg
adc
xchg
push
test
cld
ss
push
pop
mov
lret
ss
loope
mov
mov
sub
fistl
sub
fimuls
mov
imul
push
les
sti
aas
ljmp
pushl
add
pop
stc
push
fadd
or
test
mov
and
add
cmp
mov
or
mov
xchg
xchg
out
sbb
cld
xlat
ret
pop
ss
lock
push
pop
leave
sub
std
cld
mov
pop
xchg
ljmp
push
cmp
push
jb
adc
cmp
nop
dec
add
and
movsl
adc
ja
jmp
into
leave
mov
xor
stc
dec
in
cmp
in
pushf
out
fisttpl
insb
fimuls
xlat
mov
call
pusha
mov
loope
orl
ljmp
and
movsb
cmp
jle
xchg
sub
jmp
mov
adcb
mov
adc
enter
push
pop
movsl
decl
mov
jns
mov
cmp
mov
mov
xchg
mov
decl
adc
inc
pop
filds
cltd
inc
shl
mov
ja
aam
or
mov
jl
incl
add
push
lcall
inc
mov
les
daa
sti
insl
enter
dec
out
clc
mov
je
jo
aas
dec
cmp
xor
filds
adc
sub
out
orb
std
adc
fnstenv
int
stc
addr16
sbb
push
out
push
aas
inc
enter
jmp
inc
cmpsl
ja
mov
rcr
jns
pop
push
pop
cmc
lcall
scas
andb
addr16
dec
mov
xor
aas
test
leave
push
es
dec
aas
xor
call
std
jle
cli
fcomip
mov
xchg
dec
and
es
adc
lock
imul
or
push
xchg
leave
mov
addb
das
xchg
out
ljmp
addr16
int
cld
pop
inc
pop
push
cmc
bound
push
xchg
addr16
or
jo
mov
call
in
mov
cwtl
sarl
pop
mov
movsl
add
mov
dec
sbb
add
out
nop
cli
inc
sub
fisubrs
or
mov
aam
pushf
call
decl
inc
iret
stos
jne
inc
sbb
cmp
test
popa
mov
fwait
jmp
lcall
aam
sarl
subl
mov
fwait
enter
cld
inc
mov
popa
out
cmp
mov
add
lret
pusha
js
scas
push
or
inc
fcomps
and
addr16
pop
pop
push
add
mov
stos
mov
sbb
bnd
fcompl
incb
add
stos
movsb
inc
adc
in
push
jns
loop
inc
xor
mov
pop
ljmp
jl
cld
pop
inc
jae
in
or
ds
cmp
fidivrl
cld
adc
mov
mov
movsl
insb
dec
mov
cwtl
ret
sub
sbb
sar
mov
std
fisubl
outsb
cmc
pop
movsb
xchg
sbb
jg
in
push
xlat
cmp
dec
out
call
rcll
scas
cmc
xchg
mov
add
cli
out
xchg
mov
sub
addr16
mov
out
jb
push
push
adc
xchg
ds
push
push
mov
or
sub
addr16
lods
inc
mov
dec
and
int
decl
fwait
insl
jl
adc
rcrb
ret
cld
fisttps
mov
test
ljmp
jbe
out
dec
pop
je
sub
mov
inc
clc
cmp
mov
lods
mov
and
dec
scas
lcall
pop
ljmp
ljmp
adc
stos
cmp
es
add
shr
scas
jp
pusha
shll
loope
xchg
mov
jmp
pop
cmpsl
imull
mov
cli
outsl
clc
xchg
adc
mov
cwtl
lods
cs
cltd
lret
sub
dec
pop
pop
std
jmp
lods
xor
xor
dec
jbe
out
lcall
pushl
loopne
adcb
in
imul
inc
scas
loop
add
idivl
xchg
pushl
cld
jmp
idivl
and
mov
out
call
adc
pushl
jne
dec
xchg
hlt
shll
je
jle
repnz
jae
popf
dec
cmp
jae
xor
ljmp
lods
jl
mov
std
test
xchg
mov
jp
bound
jp
ljmp
mov
orl
sbb
shll
jg
dec
popa
lock
adc
cmp
jno
gs
push
or
aaa
cld
push
dec
sub
push
mov
call
lods
push
outsl
cli
call
ja
push
mov
gs
dec
cmp
pop
lret
xchg
jp
jg
lret
ficoml
mov
pusha
add
push
std
rcr
rcrb
imul
cmp
call
xchg
pop
jbe
cmpsb
fcoml
sub
inc
data16
lcall
fiadds
add
shll
jecxz
jg
jle
arpl
popf
push
add
push
stos
int
int3
movsl
dec
jmp
mov
dec
dec
push
arpl
dec
scas
mov
xchg
into
push
fnstcw
ljmp
xor
leave
mov
out
xchg
sti
sti
mov
dec
repz
ljmp
pop
jo
xabort
adc
push
pop
pop
sarb
push
sarb
ljmp
or
les
loope
pop
fsubr
xchg
inc
pop
jb
sti
rcr
jnp
xchg
lds
push
jp
and
aaa
lret
movsl
cwtl
push
push
pushf
sbb
in
cltd
fwait
lret
jmp
mov
movsl
clc
push
pop
jb
nop
xchg
sbb
imul
push
sbb
test
pushf
mov
dec
jmp
ljmp
jge
int3
mov
std
or
mov
or
mov
into
jae
mov
mov
xchg
sub
xor
dec
xor
xchg
imul
xchg
cli
in
scas
repnz
push
pop
xchg
ljmp
mov
jno
push
test
das
lods
das
clc
ljmp
nop
sub
cmp
sub
mov
push
stc
cs
pop
outsl
cli
lcall
leave
xchg
test
pop
in
ljmp
xchg
aaa
xorl
decl
fs
xor
adc
popf
incb
add
add
mov
decl
xchg
rorl
mov
add
shrl
sti
rolb
shl
pop
hlt
jmp
fcmovnu
push
mov
xchg
mov
mov
push
mov
ret
es
call
cmpsb
push
lock
repz
pop
lods
fcmovnu
fcmove
xchg
and
or
daa
sbb
test
pushl
sbb
cmp
popf
xchg
adc
movq
sbbl
and
decl
jae
inc
iret
push
xchg
pop
mov
xchg
in
repnz
push
mov
pop
mov
js
mov
jmp
aas
adc
xlat
ret
mov
add
cmp
xorb
mov
push
out
mov
sbb
or
push
push
addl
mov
dec
sub
out
cli
inc
lahf
cmp
jmp
cld
or
jmp
mov
test
decl
inc
xor
mov
mov
mov
test
mov
in
sar
decl
pop
push
outsl
xchg
add
adc
mov
pop
mov
inc
pop
add
ljmp
push
fisubl
rorl
sbb
cmc
cmp
jecxz
jg
cmp
repnz
icebp
jno
xor
pop
sub
mov
aam
insb
push
cli
test
sbb
test
xor
fldenv
lds
inc
dec
push
ja
push
ljmp
out
lcall
aas
mulb
shlb
xchg
mov
mov
jg
push
shll
dec
sub
pop
lods
adc
push
sbb
clc
rcl
test
incl
jg
cld
into
or
mov
aas
dec
scas
int
jbe
ja
stos
imul
stos
cmpsl
std
repz
mov
mov
aaa
xor
movsbl
pop
add
in
loope
or
dec
push
mov
inc
in
aam
shll
and
loop
pop
pop
scas
sbb
pushl
fwait
dec
test
dec
cwtl
lahf
xchg
in
out
pop
pushf
mov
mov
lods
mov
pushl
cli
sub
js
gs
std
iret
fldcw
loop
mov
jmp
add
mov
sbb
sub
faddl
bound
mov
jmp
jb
incl
push
mov
push
jg
mov
call
add
xchg
es
push
adc
and
push
sbb
mov
dec
inc
sub
adc
cmp
sbb
add
arpl
fsts
outsb
push
test
movsb
jmp
jno
xchg
out
rorb
insl
rorb
in
fsts
mov
and
cmp
call
mov
adc
and
xchg
icebp
movsl
jmp
sub
nop
outsb
inc
pop
mov
incl
outsl
rorb
pop
add
fdivr
push
int3
es
ljmp
ficompl
sahf
fidivs
in
divl
aad
xor
and
nop
repnz
mov
enter
jge
pop
aas
push
dec
sub
cmpsb
dec
inc
pop
fisttpll
repz
decl
es
push
fdivs
add
paddq
adc
mov
incl
push
punpckhwd
mov
mov
stos
push
push
stos
and
jle
addr16
lcall
mov
pop
shrb
jnp
inc
in
roll
xchg
sahf
ljmp
mov
mov
push
jge
out
fwait
jns
push
testl
stc
push
adc
pop
es
repz
xor
out
fbstp
fwait
lcall
jne
xor
repnz
xor
ljmp
nop
ss
inc
and
pop
sbb
mov
push
pop
mov
adc
sub
jmp
movsl
hlt
sbb
xchg
std
xor
pop
and
pop
sbb
daa
mov
in
sub
cli
xor
fwait
xchg
pop
mov
and
inc
shlb
sbb
sbb
mov
orl
xchg
push
dec
addr16
push
and
mov
cmp
pushl
mov
stos
cmp
push
mov
jb
outsl
lret
jle
mov
jg
ret
addr16
jo
cs
mov
ret
in
jg
pop
movsb
adc
lcall
jle
pop
cmp
pop
and
jg
push
sub
ud0
jmp
pop
dec
mov
mov
fcompl
ljmp
stc
mov
ja
incl
push
addb
addl
add
pslld
or
incl
clc
out
cwtl
sti
sub
push
cmp
jmp
aas
fnsave
pop
rcr
xchg
aad
cmc
mov
lods
push
cld
lea
pop
sbb
add
sub
popf
aaa
je
incl
std
pop
xchg
jne
js
inc
lret
sub
push
sbb
out
out
dec
mov
inc
sub
mov
ljmp
jmp
jp
xor
xchg
loopne
incl
mov
pop
out
insb
movsl
jae
jg
rcll
mov
sub
jecxz
out
hlt
incl
aaa
enter
lock
lcall
add
cld
jne
jb
fildll
push
xor
jmp
jns
mov
mov
xor
decl
aam
inc
pop
imul
rcrb
lock
std
sub
ja
pop
jb
hlt
mov
int
ret
cmc
test
sub
imul
call
hlt
inc
sbb
int3
scas
xchg
jle,pt
pop
fdivrl
inc
xchg
mov
sarb
call
xchg
jns
loope
mov
cltd
adc
mov
push
adc
pmulhuw
ljmp
js
push
jge
fsts
test
cmp
lods
xor
pop
cld
sti
lret
arpl
sahf
sub
call
cmp
jg
repz
and
cmc
repz
insb
add
cld
mov
adc
stos
xor
stos
mull
pushf
mov
xchg
cmp
inc
adc
ljmp
ljmp
xor
jl
int3
mov
clc
rep
in
xchg
mov
addr16
icebp
push
ss
ds
inc
jmp
sti
scas
sub
pop
push
cmpl
jno
and
incl
xchg
outsl
lock
xor
lret
mov
shlb
jae
pop
loop
je
pushl
adc
cld
jo
xor
push
add
add
aad
mov
adc
test
lds
fnsave
adc
stc
dec
inc
or
or
jmp
jecxz
mov
inc
pop
jbe
iret
sbb
ljmp
int
cmp
repnz
pop
hlt
jg
fldenv
rol
notb
and
ljmp
aam
xchg
xlat
jecxz
packssdw
sbb
mov
mov
clc
in
call
roll
inc
mov
inc
dec
imul
lock
fcompl
call
ja
cmp
pop
pusha
imul
stc
lods
cli
sub
mov
xchg
mov
shl
das
mov
mov
incb
jg
popf
add
ret
divb
and
jno
test
ror
popa
into
xor
sub
scas
cli
incl
in
sub
call
pop
cmpsl
jb
lahf
pop
enter
lcall
dec
scas
mov
or
push
mov
mov
leave
xchg
daa
ljmp
lret
incl
push
cmp
dec
push
sbb
adc
testl
mov
inc
dec
jecxz
mov
idiv
incl
insb
jae
adc
pop
xor
loop
dec
das
pop
lret
mov
or
cli
ljmp
and
sbb
dec
sbb
cmp
dec
nop
popf
and
jns
ret
xlat
les
lret
pop
icebp
outsb
cmpsl
xchg
das
inc
mov
loopne
push
scas
fsubrl
mov
in
push
lcall
jmp
dec
in
jle
aas
gs
pop
cmp
stc
pop
sub
sub
lock
lock
mov
outsb
jo
test
js
inc
jne
aas
sbb
into
cmp
lcall
or
jbe
xor
and
mov
xchg
sbb
sub
imul
cmp
bound
lret
push
jnp
pushf
dec
push
adc
dec
out
add
inc
lods
clc
mov
add
inc
mov
push
push
aad
xchg
push
xor
cld
xchg
and
insl
leave
dec
ret
push
jno
pop
fcomps
lret
scas
cmp
cmp
fiaddl
mov
xchg
test
mov
cmp
jb
mov
sub
cmp
xor
xor
xlat
jmp
mov
inc
mov
xor
pop
hlt
lcall
roll
pop
ss
mov
test
scas
jae
mov
inc
in
outsl
clc
lcall
loope
lret
mov
xor
pushf
out
mov
decl
mov
lcall
sub
jp
call
lods
clc
fildll
decl
aas
lock
adc
stc
shr
in
mov
adc
pop
data16
jmp
sub
enter
pop
add
pusha
dec
pop
cmpsl
mov
and
sub
mov
ljmp
lahf
leave
ret
xchg
mov
add
pop
std
jge
je
fucom
fisttpl
jecxz
incl
data16
sbb
adc
sbb
repnz
rcrb
daa
xchg
aam
ret
add
jmp
ja
and
loopne
leave
jo
fisttpl
lcall
jmp
sub
lock
jmp
push
mov
xchg
rcll
mov
push
pop
pushf
loop
xchg
adc
mov
cmpsb
arpl
scas
push
incl
mov
mov
lods
lock
cmp
cmp
mov
mov
mov
shrb
incl
cmc
ljmp
xor
iret
dec
fwait
dec
pop
add
in
lahf
push
push
test
add
inc
dec
out
dec
cwtl
mov
fcomps
insl
stos
bnd
incl
add
or
ret
mov
add
in
mov
lds
out
cli
xchg
xchg
cmpsb
movsb
sub
rcr
cmp
fs
push
xchg
add
incl
bound
js
rcrb
shlb
sbb
ds
mov
xlat
ss
lock
xor
clc
mov
notb
cmp
ds
call
and
mov
cmp
sarb
sbb
mov
ror
repnz
xchg
lcall
out
clc
repnz
add
add
pop
popl
aam
xchg
mov
xchg
aad
ljmp
incb
not
mov
mov
mov
xlat
sbb
mov
dec
jns
jmp
lahf
mov
xchg
xchg
enter
cmp
lods
nop
cmp
std
decl
xchg
cli
incb
dec
jmp
sub
mov
adc
lret
xor
pushl
mov
fwait
in
test
pop
les
fistpl
aas
subb
xchg
cmc
ds
incl
popf
jne
loop
movsl
jne
stos
sbb
xchg
jmp
and
inc
les
das
mov
test
xlat
adc
or
lret
push
inc
fisubrl
clc
ficoml
add
pushl
jnp
cmpb
out
cmp
frstor
xor
dec
fidivl
fnsave
cmpsb
ljmp
pop
jl
test
sub
movsb
lods
jecxz
jmp
fnstcw
aad
jmp
out
jmp
mov
xchg
shll
cmpsl
repz
mov
xchg
jne
mov
sar
lcall
popa
cmp
int3
cmp
mov
mov
cmp
fmul
dec
inc
push
sbb
scas
or
mov
in
sti
lds
outsb
es
lods
jmp
decl
fwait
lret
dec
xchg
jo
stos
int3
iret
mov
mov
loop
sub
mov
fcomip
cmp
push
les
push
lea
push
lds
stos
gs
out
clc
jmp
add
gs
and
dec
rol
mov
addb
das
adc
ljmp
outsl
jno
and
push
inc
insl
adc
mov
push
testl
int
lods
repnz
call
in
pop
hlt
sbb
nop
sbbb
lods
xor
jnp
outsb
pop
push
adc
incl
jl
cwtl
lret
test
cmp
jl
cwtl
add
sbbl
push
repz
or
and
lahf
ret
mov
push
mov
jp
push
aad
decl
aam
filds
sub
stos
sti
icebp
mov
mov
scas
sahf
ljmp
pop
lods
je
fistps
sbb
lea
adc
inc
mov
or
lcall
push
cmp
jg
xchg
cmp
test
outsb
lea
jno
sbb
jne
xchg
mov
pushl
loopne
in
and
fdiv
enter
ror
fucom
cmp
dec
and
jp
imul
jmp
imul
mov
stos
dec
mov
daa
push
push
mov
push
dec
pop
cltd
fadd
mov
adc
jnp
stc
repz
decl
pop
in
out
aad
shr
lret
popa
cld
push
gs
lods
push
cwtl
mov
ljmp
mov
cltd
xchg
movsl
xor
imul
out
int
cmc
and
call
sub
lret
adc
lahf
dec
push
fdivr
fisubrs
pop
test
fbstp
mov
ss
fcomip
inc
mov
xor
xchg
fs
outsl
enter
pusha
jge
jge
mov
pushl
std
cmp
cmp
mov
fstpt
ret
dec
je
adc
xor
xorb
mov
mov
mov
xrelease
int3
into
mov
push
or
lock
sub
mov
inc
fsubrl
fldl
adc
pusha
imul
jbe
daa
lods
sbb
and
test
cltd
shll
inc
out
mov
cmp
enter
fwait
call
xor
test
je
xchg
lods
rorl
xchg
xor
push
sbb
insb
inc
mov
push
cld
test
inc
or
sbb
xchg
test
imul
mov
cld
dec
incl
xor
push
push
push
and
fwait
push
mov
decl
std
lcall
ds
je
clc
dec
leave
lcall
mov
xchg
pop
cmc
jmp
adc
xchg
bound
or
sbb
add
xor
subl
fs
test
fsubr
out
inc
xor
ljmp
adc
sub
cld
and
add
popa
ds
push
mov
fsubs
dec
mov
dec
lret
ret
movsl
jp
sar
cli
jge
cmpb
in
jns
jge
aaa
in
sbb
es
fcompl
cmp
pushl
imul
mov
mov
repnz
dec
jns
es
fnstenv
ret
jae
pushf
jns
fcomip
mov
repnz
and
xchg
fidivs
int3
jne
lahf
lds
or
les
addl
mov
lret
pop
cwtl
les
lea
iret
clc
dec
pop
cmc
call
and
dec
push
in
enter
outsl
dec
popf
outsl
ds
push
push
jb
out
fistpll
aad
cmc
add
in
mov
sti
adcb
lcall
mov
fucomi
das
pop
call
call
jae
adc
ficompl
int3
test
fsubs
punpckhwd
xchg
je
jmp
in
mov
ss
pusha
loope
lret
inc
fmull
push
mov
jmp
in
aam
xor
sub
iret
sub
je
imul
jbe
ljmp
sbb
mov
addl
cmpsl
pop
bound
test
dec
lahf
call
sub
mov
mov
decl
pop
jbe
push
sbb
mov
jge
mov
pop
cmp
jae
decl
out
aas
mov
in
sbb
dec
loope
add
cmp
lcall
jb
ljmp
shlb
sbb
mov
sbb
aas
daa
xchg
push
rorl
or
decl
cmp
xchg
push
jl
ds
mov
inc
jle
and
addr16
push
mov
decl
push
add
sarl
mov
dec
cmp
in
repz
rorb
aam
dec
in
sub
les
fwait
xchg
lea
jmp
dec
push
sbb
jb
jae
jp
cwtl
sahf
xor
jmp
jmp
js
mov
push
test
push
movsb
mov
loope
repz
int3
push
pop
sbb
mov
cmp
loop
cli
test
or
in
cld
mov
xor
lret
xlat
dec
push
out
jmp
jp
sbb
xchg
push
mov
test
mov
jl
insl
adc
dec
lods
addr16
mov
scas
imul
sahf
or
xchg
push
decl
in
or
gs
fnsave
push
cs
int3
jns
jg
ljmp
or
dec
dec
aaa
push
lret
pop
dec
and
or
call
pop
and
push
sub
fstpl
sar
sub
sub
mov
or
xor
xchg
movsl
ret
pop
ja
fs
clc
mov
jns
inc
xlat
mov
aaa
inc
pop
incl
add
aas
fiadds
test
jb
xchg
sbb
lret
in
mov
fstp
add
jns
enter
adc
stos
pushf
sub
iret
pop
incb
jmp
mov
cmp
insb
int
dec
or
or
mov
daa
add
jmp
fnstcw
clc
out
xchg
out
inc
dec
fisubrs
mov
mov
aas
xchg
fs
faddl
call
hlt
cltd
mov
imul
cmp
sub
inc
out
cmp
scas
shrb
mov
dec
pusha
ja
push
clc
stos
or
mov
jmp
push
xchg
fincstp
int
adc
ljmp
inc
jmp
mov
jae
and
mov
int
scas
scas
cmp
fisttpl
cmp
stc
repnz
aaa
addr16
loop
lods
cli
in
jnp
dec
jmp
loope
daa
lcall
mov
and
les
jne
lcall
nop
pop
fimuls
das
jmp
lcall
pop
sub
xchg
pop
xor
mov
add
inc
out
jno
cmpsb
ret
and
lcall
pop
xchg
sub
repz
pop
sbb
out
pop
leave
dec
out
sub
cmp
sar
test
xchg
jp
aad
scas
jle
or
push
mov
mov
in
sti
xchg
ss
jg
decb
les
imul
inc
out
inc
dec
fs
lock
ljmp
jl
rolb
int3
ret
fcomi
lods
out
or
movzwl
cmp
fists
imul
inc
adc
daa
in
mov
push
cltd
inc
mov
pop
inc
xchg
xchg
jle
aam
stos
leave
gs
pushf
xchg
ljmp
decl
mov
cli
pushf
push
mov
ret
xor
xor
sbb
and
jnp
mov
adc
mov
popf
mov
jecxz
cmc
in
jmp
adc
ja
cmp
fiadds
jl
rcll
into
or
push
ja
sbb
inc
or
mov
subb
ljmp
mov
cmp
or
xchg
jmp
cld
in
lds
inc
divl
call
aad
icebp
xchg
and
out
fistpl
cmp
xchg
cmp
rorb
dec
jmp
jmp
cmp
rcll
je
xchg
pop
add
xchg
dec
es
add
or
fbstp
ret
pop
push
repz
roll
dec
adc
mov
int
pop
jae
push
ja
je
pop
xchg
jo
insb
pop
cmc
push
jnp
push
jae
mov
fldcw
fwait
inc
push
xchg
lahf
repz
xor
std
adc
push
push
mov
mov
repz
shll
sub
insl
jnp
lds
scas
lds
xor
aaa
adc
pop
jae
ret
pop
rol
push
xor
adc
ret
push
jae
inc
push
push
clc
insl
xchg
ljmp
push
xor
es
jae
inc
push
push
push
push
mov
push
xchg
adc
repz
pushl
push
xor
push
adc
push
jae
inc
push
push
and
mov
outsl
push
repz
push
shll
push
xor
push
rolb
jae
inc
push
push
inc
push
mov
push
incb
pusha
add
cwtl
incb
incb
incb
adc
push
incb
mov
outsl
ss
int
jg
arpl
xor
pusha
xor
sbb
outsb
push
xchg
mov
mov
repz
push
xor
push
jo
push
push
sarl
mov
mov
xchg
stc
push
lock
xor
filds
adc
push
mov
mov
mov
lock
xor
push
adc
shrl
push
xorb
rcr
insb
xor
adc
into
jo
push
dec
mov
mov
push
lock
shll
repnz
adc
xor
sub
insb
ss
outsb
mov
xchg
push
push
lock
sahf
shll
push
adc
jo
jae
push
ss
int
mov
xchg
outsb
lock
rcll
xor
fisttpl
push
push
sbb
data16
lock
cmp
insb
adc
xor
mov
push
mov
int3
push
lock
push
xchg
test
xchg
data16
int
shlb
cwtl
adc
xor
adcl
mov
xchg
cld
push
lock
push
push
insl
mov
cld
adc
push
mov
lock
jg
enter
mov
adc
push
push
cwtl
ss
int
mov
xchg
shl
sarl
int
adc
push
jo
in
xchg
sub
fldcw
rcll
sbb
pop
mov
jo
int
fldcw
mov
xchg
jl
lock
fistpll
xor
push
adc
push
or
mov
dec
mov
xchg
je
lock
shll
dec
push
adc
mov
fwait
int
gs
push
push
mov
xchg
dec
lock
mov
xor
jo
mov
mov
data16
xchg
mov
mov
shll
sahf
push
mov
insb
jle
fstpt
ret
xchg
cli
push
fistpll
int
xchg
xor
adc
push
mov
insl
ss
xchg
repnz
lock
shll
data16
sahf
xor
dec
xor
data16
cld
adc
xorl
xchg
xchg
aaa
fwait
int
cmp
mov
mov
jle
iret
insb
mov
xchg
fwait
push
repz
push
xor
aaa
aaa
adc
rorl
mov
xchg
stos
mov
xor
rcll
cld
mov
ss
int
mov
repnz
ror
insb
ss
in
jge
cmp
mov
outsl
ss
mov
xor
int
frndint
jae
mov
mov
rcrb
push
xor
jae
push
inc
mov
mov
insb
ss
loope
gs
fwait
int
jg
dec
mov
jl
adc
repz
fildll
dec
xor
adc
jns
mov
insb
ss
xchg
test
cmp
mov
xor
adc
mov
sbb
jbe
push
repz
shl
push
xor
jae
jbe
data16
shll
jnp
jnp
xchg
push
data16
int
jge
cli
mov
mov
fwait
int
xor
dec
ror
xor
loop
jne
ss
int
ds
mov
repz
fwait
int
cmp
xchg
adc
mov
les
lcall
xchg
xchg
scas
sahf
push
shlb
jg
cwtl
aas
mov
push
push
scas
mov
aaa
fwait
int
xchg
fwait
repz
shl
xor
adc
aas
xor
sub
mov
xchg
in
std
cmpsl
flds
push
shl
xor
out
nop
jae
rcrb
nop
mov
mov
push
fwait
int
adc
push
mov
xchg
das
repz
push
int
xor
inc
xchg
testl
xor
data16
cmp
aas
lea
push
fnstenv
ss
shl
stos
rclb
push
adc
mov
out
fwait
push
push
mov
xchg
dec
repnz
ror
out
fwait
mov
jp
xchg
lcall
xchg
xchg
xacquire
cltd
stc
fists
mov
add
or
test
mov
mov
outsl
ss
mov
das
sub
jg
pop
dec
push
das
push
lret
mov
mov
dec
or
inc
dec
dec
sub
dec
or
mov
cld
data16
adc
enter
push
loope
in
mov
cld
xchg
jmp
push
jb
jle
jp
fwait
int
icebp
xchg
xorb
adc
leave
mov
adc
int
xor
adc
push
and
sub
sub
xor
xor
cmp
cmp
push
inc
mov
xchg
dec
mov
insb
jle
inc
or
into
stc
int
out
loope
in
cs
outsb
icebp
mov
int
into
std
scas
stc
push
add
dec
or
jb
mov
sbb
test
std
int
jle
dec
inc
xchg
fisttpll
mov
jp
inc
lahf
pop
outsl
lcall
pushf
jbe
pop
xlat
lods
aaa
mov
ss
inc
cltd
xlat
cmp
aaa
pop
xor
xchg
ja
push
or
mov
xchg
add
cwtl
lds
push
fwait
mov
data16
insb
xchg
xchg
hlt
outsl
aam
xor
repz
int
adc
lds
je
inc
pushf
fdivr
cmp
sbb
inc
cltd
js
ss
int
pop
lret
cwtl
ret
fcomp
fildll
sbb
inc
xchg
js
pop
stos
mov
insb
cwtl
mov
pop
cmp
mov
insb
stc
push
cmp
sbb
cmp
jns
jle
fldcw
mov
out
cmp
fldl2e
fildll
sbb
cmp
jns
cmp
roll
iret
sbb
mov
into
popf
push
and
xor
inc
sbb
mov
fwait
sub
jmp
aaa
sti
aam
lods
pop
das
mov
pop
xor
pop
jle,pt
fistpll
inc
mov
aaa
jl
lds
pop
mov
xchg
sbb
pop
sbb
popf
push
jge
ret
insl
frndint
out
cmp
sub
inc
scas
cld
lock
push
cmc
inc
mov
leave
push
int3
mov
xchg
fldcw
negb
xor
mov
xchg
push
imull
pop
hlt
data16
sub
and
and
lods
xlat
mov
push
aaa
mov
mov
stos
ja
push
mov
fsts
sub
pop
xchg
adc
outsl
fcomip
out
sub
jmp
out
adc
lds
rorb
dec
xor
jb
cmp
xchg
mov
repnz
pop
push
xor
insb
ss
aam
sub
repnz
cld
data16
ret
xor
adc
lods
jb
push
out
int
xor
repnz
fwait
xlat
xor
jae
push
pop
push
mov
fwait
int
aaa
xchg
adc
pop
xor
adc
jl
int
cmp
and
insb
jle
iret
xor
adc
cmp
insb
mov
mov
cmp
rol
xor
fldcw
inc
cmp
ja
jnp
jg
stc
int
mulb
sub
cmpsb
jb
ret
data16
insb
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
push
out
mov
pop
cld
idivb
mov
mov
mov
lods
xor
ret
lock
repnz
xor
in
mov
in
decl
mov
nop
scas
dec
xor
push
idivl
movsl
mov
cmp
lcall
dec
push
call
stc
in
mov
jecxz
mov
jb
cmp
sar
xor
mov
lcall
xor
rclb
cmpsl
mov
mov
movsl
repnz
push
ljmp
fsubrs
test
rclb
bnd
ja
sbb
xor
dec
out
call
push
mov
movsb
push
dec
dec
movsb
into
inc
movsb
lcall
movsb
xor
shll
rcr
xchg
repnz
xor
cmp
inc
mov
mov
lds
jns
mov
cs
jb
sti
das
clc
inc
mov
xchg
inc
mov
fwait
push
out
pop
cld
mov
int
subl
insb
ja
lret
mov
shr
in
push
dec
out
loop
mov
les
mov
les
iret
add
packssdw
add
out
into
mov
fistpll
enter
add
jb
addb
pop
push
mov
sbb
je
add
mov
testl
add
jb
es
lds
mov
push
repnz
push
das
xor
adc
lds
inc
mov
lds
xchg
jge
mov
test
push
adc
das
adc
mov
cltd
jmp
mov
inc
jae
sub
lods
xchg
popf
in
das
sub
jb
sahf
scas
xor
mov
hlt
inc
xchg
hlt
mov
inc
mov
divb
xchg
cwtl
push
repnz
inc
mov
call
xor
mov
push
push
cmpsl
push
push
pushl
test
cwtl
hlt
mov
xchg
loopne
pushf
xor
sub
adc
push
jp
lcall
mov
fcoms
xchg
add
aad
mov
mov
or
mov
inc
dec
mov
mov
loopne
mov
sbb
push
lahf
mov
or
push
mov
cmc
stos
inc
and
scas
xchg
adc
nop
sbb
adcl
sti
movsl
sahf
sub
cmpsb
movsl
inc
aad
xor
mov
add
testb
add
mov
cld
cld
sbb
inc
inc
mov
loop
xchg
jmp
push
cltd
sub
mov
jmp
roll
std
adc
mov
into
pop
out
scas
xchg
fcoml
mov
pop
aaa
into
ss
decl
xor
ficoms
movb
xchg
out
jl
in
lods
xchg
adc
nop
jne
jg
fstps
push
sti
cld
mov
cli
push
adc
gs
xchg
out
jl
in
subb
test
sbb
imul
pop
aaa
popf
or
fdivrl
daa
or
incb
jg
inc
xor
xchg
cmp
repz
xor
push
push
xor
mov
mov
adc
mov
push
shll
and
sbb
xor
push
mov
push
mov
inc
imul
xor
sti
mov
mov
xor
xor
jae
outsb
push
mov
adc
in
insl
stc
mov
stc
xor
mov
and
mov
mov
xor
adc
mov
push
sbbl
cs
fstpt
xor
xor
mov
xor
sbb
inc
xor
hlt
pushl
dec
mov
mov
xchg
inc
mov
repz
mov
rcll
jae
lcall
push
mov
shrl
inc
mov
pop
xchg
fs
xor
sbb
sbb
mov
call
xor
ss
xor
inc
adc
les
aad
negb
adc
into
push
xchg
std
imul
call
dec
mov
push
dec
xor
xchg
dec
jne
mov
push
dec
cltd
cs
repnz
jg
divb
lock
cs
mov
xor
ljmp
mov
xor
mov
nop
out
mov
jo
xor
out
fbstp
loope
lock
mov
push
xchg
xor
nop
mov
push
mov
mov
xor
xor
adc
mov
dec
add
dec
push
cld
pushl
xor
push
popa
xor
mov
xor
inc
mov
lock
dec
shlb
or
stos
lods
pop
jbe
adc
jo
mov
aam
cmp
out
mov
lds
loope
jecxz
out
insb
xor
mov
push
cmpb
incb
xchg
xchg
mov
je
mov
in
ljmp
mov
cmp
lret
mov
mov
cmp
or
push
cmp
ss
jb
mov
xorb
xchg
sbb
cmp
mov
mov
jbe
idiv
mov
jg
pop
mov
jb
mov
mov
push
jg
call
xor
xorl
push
jne
mov
incl
adc
cmp
add
js
add
imul
or
imul
cmp
mov
imul
fistpll
mov
mov
push
cld
sarl
jo
in
mov
loopne
xchg
adc
gs
lcall
aam
xor
mov
xor
xchg
inc
xor
hlt
daa
mov
push
aaa
xor
in
xchg
aas
xor
pop
aam
je
mov
aam
cs
int3
adc
xor
hlt
sub
push
add
xor
xor
mov
xchg
outsb
iret
je
cs
mov
mov
sti
decl
xor
hlt
iret
mov
push
iret
xor
xor
mov
xchg
xor
je
mov
pop
je
pop
xchg
adc
xor
hlt
shrl
push
out
pop
in
fistl
std
outsl
clc
fidivl
mov
cmc
mov
cli
xor
sbb
mov
mov
adc
hlt
mov
xor
mov
mov
lods
je,pn
aam
mov
mov
ljmp
mov
scas
and
leave
xchg
pop
mov
icebp
push
cld
int3
jbe
xor
cmpsb
leave
mov
xor
push
push
jmp
jg
scas
mov
ss
cs
lret
jbe
xor
xor
push
xchg
mov
push
xchg
xor
xlat
mov
repz
xchg
icebp
xlat
loopne
repz
xor
pop
repz
fisttpl
lock
xor
es
aaa
out
xchg
loop
xlat
jbe
xor
pushl
mov
xor
push
lahf
mov
testb
mov
xor
push
mov
mov
in
fcmovnbe
js
shlb
insb
push
jbe
xor
pop
mov
mov
cs
jns
clc
int
fcomi
inc
xor
push
inc
mov
ss
xchg
pop
jbe
xor
push
jp
fldcw
jae,pt
xchg
jbe
or
xor
mov
add
add
push
es
pop
mov
in
push
cs
sub
and
loopne
cmp
add
add
add
ds
ja
xor
xlat
enter
leave
xor
pop
cld
push
jbe
xor
xlat
insb
jg
into
mov
mov
cs
jmp
xor
push
aam
call
fbstp
xor
push
ljmp
xchg
out
aad
lcall
mov
xor
xchg
mov
mov
testb
xor
jg
mov
mov
inc
ret
es
sub
push
ret
inc
adc
sbb
ret
shll
mov
ret
fsubrl
jb
inc
ljmp
ljmp
push
shll
mov
ret
mov
push
popf
inc
sbb
xchg
ret
mov
repnz
or
mov
mov
push
lahf
inc
sub
clc
ret
mov
inc
cmp
in
cmp
inc
cmp
cmpsb
ret
movsb
push
adc
cmp
mov
cs
mov
inc
rclb
inc
adc
mov
bnd
cs
jo
xor
inc
push
adc
adc
pop
int
push
pusha
dec
ljmp
lods
push
push
es
push
dec
pop
jb
int
rolb
xor
sub
jno
pop
sbbl
fstps
fimuls
xor
das
cmp
xchg
cmp
jnp
mov
shlb
int
jb
das
adc
cs
sbb
ljmp
and
push
adc
int
repnz
shrb
int
mov
dec
and
and
repnz
push
fmul
and
and
sub
scas
fs
das
jp
xor
cmp
lods
xor
ljmp
sub
jae
das
dec
js
sub
or
cmp
cmp
outsb
cmp
idiv
mov
xor
cs
jne
lret
cmp
punpckhwd
outsl
imul
sub
cmp
or
mov
decl
jmp
or
push
cs
in
adc
cs
sbb
ljmp
repz
mov
lds
out
or
mov
ljmp
ljmp
mov
push
insb
stc
scas
dec
dec
imulb
push
lods
hlt
scas
push
jge
call
dec
je
mov
ljmp
push
das
dec
scas
decl
or
cli
outsl
add
cs
cmp
outsl
push
mov
je
das
cs
sub
xchg
outsb
fisubs
ds
aaa
mov
sti
pushl
jne
sub
scas
and
push
into
shrl
insb
scas
shrl
ja
cmp
xor
cmp
adc
cmc
sar
outsl
roll
adc
pusha
cmp
rorl
mov
or
xchg
insl
mov
in
jg
insb
xor
jae
je
jg
jno
cmp
shrl
outsl
mov
cmp
adc
jo
pop
push
pop
mov
lret
push
xchg
push
mov
call
xor
pop
mov
repnz
std
pushl
clc
mov
adcl
stos
cs
repnz
mov
stos
pop
xchg
stc
sub
ja
sqrtps
aas
lret
or
jno
mov
clc
mov
aas
clc
xchg
hlt
sub
lock
and
stos
add
fbld
popf
sub
rcll
sub
stos
stos
and
mov
stos
cmp
stos
sub
xchg
mov
mov
roll
aas
adc
or
mov
ljmp
nop
jge
loopne
dec
lods
jp
push
aas
stos
inc
push
xchg
inc
sub
mov
jns
test
ss
lods
les
jne
in
icebp
outsl
lods
out
shrl
icebp
jg
pushl
jp
test
push
push
push
sbb
add
xchg
out
iret
mov
lcall
cld
dec
sti
in
cmpl
lods
scas
dec
ret
jbe
ds
cltd
mov
ljmp
mov
mov
mov
je
mov
mov
dec
inc
mov
lret
minps
iret
aad
and
in
cmp
out
jg
call
mov
inc
cs
mov
inc
outsb
clc
mov
scas
lret
mov
int
jmp
daa
out
sahf
into
mov
mov
and
mov
stc
incl
cmp
out
mov
cmp
push
stos
cmp
outsb
mov
sbb
jg
mov
mov
sbb
inc
into
movsb
cmp
icebp
mov
mov
or
mov
mov
repz
adc
cs
loopne
loope
or
out
cmp
xchg
in
jno
loop
call
mov
pop
adc
mov
sbb
xor
cmp
insb
aaa
fwait
jle
jno
rcr
mov
and
into
icebp
enter
fcoml
mov
xchg
lds
jno
ds
ja
push
mov
data16
adc
push
adc
insb
adc
mov
hlt
xchg
popa
jno
lcall
mov
repnz
push
push
push
mov
cmc
xchg
pop
loope
outsl
ss
rorl
mov
adc
data16
mov
add
xor
fisubrs
jno,pn
jg
int
shrl
mov
or
push
icebp
cmp
mov
mov
mov
idivl
fmulp
xchg
iret
dec
outsl
aaa
cs
mov
mov
icebp
sti
push
sarl
add
fnstsw
add
out
lock
out
int
stc
int
out
lcall
cs
xchg
jno
xchg
decb
ds
sahf
xor
xor
in
incl
adc
test
push
cs
and
test
pushl
adc
mov
mov
xor
repnz
xor
xor
js
fwait
jmp
pushl
jnp
popf
mov
mov
xor
repz
mov
xor
fwait
int
lahf
jae
sar
mov
mov
xor
hlt
repz
cld
ljmp
cmpsl
mov
xor
mov
xor
mov
xor
mov
xchg
mov
xor
jb
lcall
mov
mov
xor
insb
bnd
pop
mov
xor
xchg
push
sti
pop
add
mov
jae
xor
dec
mov
mov
adc
dec
repz
int
jg
push
jl
dec
xor
dec
xchg
je
jae
rorl
xor
mov
in
ljmp
add
pop
repz
mov
push
sbb
pop
xor
pop
xchg
adc
jae
lcall
pop
mov
mov
adc
xor
xor
mov
xchg
or
divl
dec
mov
mov
adc
xor
out
push
dec
mov
mov
xor
ret
repz
push
std
mov
mov
mov
mov
push
shr
xor
loopne
adc
xor
repz
cmp
call
gs
test
push
mov
loopne
mov
fstl
inc
lds
jecxz
shrb
sar
pushl
test
loope
arpl
fiadds
mov
sub
or
repz
enter
das
data16
sub
lahf
push
cmpsb
sbb
jae
out
lret
das
mov
push
mulb
push
repz
lret
sub
in
lods
dec
sub
fldt
testb
and
es
repz
data16
xor
filds
lret
sub
out
dec
sub
std
out
repz
data16
icebp
lret
cmpsb
adc
jae
dec
es
fldt
dec
es
leave
es
dec
es
dec
sub
push
xor
leave
sub
mov
decl
out
lret
pop
es
push
rep
dec
sub
inc
xor
mov
sub
push
out
leave
sub
repz
testb
rclb
xor
and
push
out
push
mov
fbstp
push
repz
xor
and
insl
jae
push
out
push
mov
push
sbb
repz
mov
mov
cmpsb
icebp
lret
popl
out
push
mov
push
repz
inc
and
and
xor
mov
cli
push
out
mov
push
es
lock
popaw
insl
fcmovnu
popa
push
stos
lret
imul
mov
out
push
mov
int
mov
push
es
aam
data16
fmul
cmpsb
jno
fbstp
insl
jle
ds
ds
mov
call
sub
data16
xor
aad
cmpsb
lahf
push
jae
push
out
push
mov
push
negb
push
repz
ds
xor
aad
cmpsb
lea
jle
insl
push
out
push
mov
push
es
cmp
fsubrs
and
cmp
push
out
push
mov
int
mov
push
es
add
lock
aad
cmpsb
out
pop
out
push
mov
push
es
repz
mov
mov
clc
aad
cmpsb
add
jae
push
out
push
divb
push
xor
repz
push
cmp
aas
xor
aad
cmpsb
and
jle
insl
push
out
push
mov
push
es
movsb
push
cmp
mov
fldt
lods
aad
cmpsb
add
jo
push
out
push
mov
push
outsl
mov
lock
xor
push
jo
aam
outsl
jle
cld
out
push
ss
mov
cmp
xor
cmp
xor
push
out
push
rolb
es
std
neg
outsl
push
repz
aam
mov
dec
push
cmp
xlat
cmp
lret
xchg
filds
repz
rol
xor
jg
or
adc
push
xor
mov
movsl
mov
ljmp
shlb
lods
and
mov
xor
pop
mov
test
loop
xchg
test
mov
mov
mov
mov
mov
jmp
lods
xchg
addb
adcl
lahf
int3
fists
cmpsl
fsts
or
xor
xor
inc
roll
push
data16
cld
adc
push
jae
push
ja
jnp
jg
aaa
fwait
int
arpl
xor
pusha
push
dec
jae
push
dec
push
xchg
mov
pusha
data16
sahf
push
repz
xor
jae
push
mov
fwait
int
mov
xchg
mov
xor
adc
push
xlat
mov
pop
pop
sahf
mov
push
or
add
xchg
data16
ss
xor
sub
out
inc
xlat
lret
movsl
int
add
out
fstps
push
and
or
jno
fildll
out
push
inc
lds
rcrl
data16
data16
aaa
jne
push
adc
pop
into
jno
push
out
push
inc
in
mov
pop
pop
xchg
push
dec
incb
or
incb
incb
decb
addl
incb
xor
push
incb
push
cwtl
rolb
incb
push
inc
cwtl
rolb
incb
incb
dec
pusha
add
incb
incb
incb
pusha
orw
push
dec
push
xor
incb
incb
cwtl
rolb
push
incb
incb
flds
push
push
dec
push
incb
mov
adc
xor
push
cwtl
ret
push
push
inc
push
mov
int
incb
push
push
jno
lds
push
push
push
push
mov
xchg
pusha
repnz
rcrb
fldcw
adc
push
push
mov
int
mov
mov
adc
lcall
movsb
xchg
mov
cwtl
loopne
into
inc
xor
inc
incb
incb
or
incb
incb
push
popa
pusha
data16
push
incb
incb
xor
incb
incb
xor
push
pop
push
pop
push
or
incb
incb
incb
incb
incb
push
xor
push
incb
adc
incb
incb
cwtl
pop
pusha
add
push
push
pusha
push
jg
incb
mov
rcr
xchg
pop
mov
loope
push
cmpsl
xor
sbb
fdivrs
push
mov
fdivrl
shl
addr16
frndint
mov
pop
popa
mov
test
mov
jns
leave
test
fwait
int
mov
xchg
mov
scas
mov
mov
mov
xchg
stos
aaa
fwait
int
xchg
mov
mov
rcrl
fstps
cltd
rcrb
fs
cs
data16
pop
imulb
mov
dec
outsb
cwtl
clc
les
inc
into
jb
and
je
sahf
mov
push
mov
push
cli
cmp
call
jle
jns
jo
jl
jae
jp
insb
jns
mov
push
inc
imull
jb
shrl
shrl
inc
aad
jg
xlat
outsl
sarl
data16
or
fldl
dec
push
rcl
mov
cld
jmp
in
sbb
sub
aam
ret
data16
enter
int3
test
fldcw
jecxz
loope
cmpsl
xchg
movsl
ss
int
xchg
stos
xchg
cmpsb
mov
fildll
mov
repnz
xorl
xchg
xchg
jp
mov
dec
fmul
popf
int
fstps
xchg
gs
int
mov
addr16
sbb
outsl
fldcw
mov
sahf
jae
jne
ja
fwait
int
mov
fwait
jnp
jle
jl
repnz
fldcw
xor
xchg
adc
je
jb
mov
xchg
fbstp
mov
fs
outsb
rolb
jle
aam
cli
fildll
lret
jnp
sbb
jns
sbb
jg
fistl
push
rcl
jo
enter
push
incb
incb
flds
push
insl
push
decb
mov
mov
lock
jl
call
jmp
loopne
push
sbb
mov
push
mov
xchg
adc
jae
roll
fnstenv
mov
adc
push
outsl
jae
push
aaa
push
mov
mov
aas
repz
xor
push
adc
push
insb
jae
cltd
enter
push
mov
incb
pop
fs
decb
rorl
push
imul
push
incb
xchg
jo
js
push
fcos
jae
pusha
js
lods
mov
push
push
data16
mov
push
xchg
push
fnsave
dec
pop
jne
dec
sbb
cltd
pop
fs
push
imul
push
sti
int
and
push
xchg
jno
jb
insl
out
sbb
cltd
enter
push
push
clc
jg
incb
xchg
adc
gs
pop
push
push
aaa
sbbl
xor
out
cmpsb
push
jecxz
shr
xchg
jmp
pusha
add
or
push
bound
incb
add
mov
jle
nop
pop
push
repz
shlb
xor
addr16
incb
subb
mov
push
push
lock
adc
adc
jmp
sub
jle
scas
push
fs
pop
adc
jge
mov
dec
not
jns
mov
dec
aam
js
adc
cmp
inc
mov
sub
lcall
jp
fcomps
push
sbb
pop
xlat
dec
gs
pop
jle
fwait
incb
incb
das
xor
push
pop
xorl
mov
insb
push
push
mov
mov
data16
int
cmpsl
xor
jb
push
xlat
insb
ss
int
fistl
xor
xor
pop
jge
push
incb
mov
int3
cmpsb
incb
xchg
incb
shl
cwtl
pop
pusha
add
push
pop
jp
sti
iret
jg
incb
mov
pop
pop
rorl
jp
sarl
pop
jno
es
jg
jg
scas
lret
push
xchg
gs
ret
sbb
roll
xor
outsb
cmp
jl
int
imul
push
dec
xchg
or
repz
push
sarl
sbb
inc
fcompl
pop
push
or
xor
arpl
xchg
push
mov
mov
push
pop
jbe
jbe
and
push
add
push
repz
push
and
scas
xlat
mov
sbbl
iret
xlat
out
clc
pop
loopne
sbb
int3
ljmp
add
decl
or
xor
jno
leave
mov
dec
xchg
or
test
loopne
pushl
mov
stos
add
mov
je
pop
and
mov
cwtl
pop
bound
sbb
shlb
mov
shll
cwtl
pop
ljmp
cmp
pop
fs
call
leave
sub
rcrl
repnz
outsl
dec
stos
in
mov
or
mov
out
mov
inc
add
jmp
popa
xor
das
gs
rcll
fwait
xor
mov
hlt
clc
sbb
cs
and
sbb
incl
lods
punpckhwd
lods
ljmp
popl
jbe
inc
and
pushl
push
mov
outsb
ret
inc
xorl
test
mov
or
lods
call
bound
int3
lcall
sar
xor
mov
or
es
in
cmp
xchg
add
in
scas
xor
dec
xorl
dec
xchg
mov
in
mov
dec
pop
mov
xchg
jbe
sub
enter
decl
jmp
sti
stc
pop
mov
lea
sti
cmpsb
xchg
mov
push
dec
scas
imul
ja
incl
arpl
xchg
pop
data16
ljmp
or
jmp
mov
sbb
loope
cwtl
sub
pop
in
mov
and
test
insb
dec
dec
clc
sub
out
cmpsl
cmpsb
lds
lahf
xor
pop
imul
lret
adc
test
xchg
cmc
mov
stos
fucomi
sahf
in
jecxz
into
lret
add
jecxz
inc
jl
add
movsb
adc
call
cmpsl
or
or
cmpsl
sti
dec
leave
sbb
ja
lahf
lds
jge
add
dec
rolb
ret
mov
and
sub
mov
push
cmpsb
movsl
mov
popf
push
jne
lret
lcall
mov
imul
jl
mov
mov
lock
pop
insl
fldenv
call
cmpsl
inc
or
mov
popf
xlat
inc
cmp
aaa
jge
cmp
fcoml
movd
pop
xchg
lea
testl
cmpsl
in
dec
inc
lock
scas
hlt
sub
cmp
mov
sub
or
lret
sub
sub
pusha
cmpsl
les
shll
cltd
imul
mov
lcall
lods
shll
out
shl
clts
and
cmc
int3
and
push
jmp
outsl
cmp
test
stos
push
xchg
lods
mov
in
mov
dec
and
push
js
repnz
mov
mov
mov
xlat
ret
cmpsb
loop
jo
ds
es
decl
test
mov
lret
inc
jne
mov
mov
jmp
lret
clc
mov
repnz
je
fcomip
divl
xor
ljmp
test
mov
out
fiaddl
add
lock
cmc
xchg
test
std
movsb
xchg
mov
dec
ficomps
sub
lret
pushf
jmp
pushl
dec
sub
inc
mov
xchg
pop
xchg
adc
pop
adc
stos
scas
and
and
nop
mov
fwait
ljmp
popa
lods
outsl
pop
mov
pushl
lds
ret
and
add
imul
xchg
incl
hlt
out
xor
je
inc
test
mov
pusha
out
gs
xor
pop
call
call
push
jl
xor
pushf
sub
cltd
lret
jae
mov
lahf
call
lcall
rorl
and
mov
sub
push
imul
movsb
sub
mov
rcll
pop
pop
lcall
ja
sub
ljmp
loopne
out
addr16
shll
push
cli
push
ret
fs
add
fisttpl
cmc
adc
stos
and
inc
fstpl
push
in
lea
scas
mov
es
mov
ljmp
enter
stos
dec
lock
sub
jbe
fwait
rcrl
test
decl
adc
mov
stos
loop
push
icebp
mov
shl
imul
call
xchg
icebp
adc
enter
movsb
mov
jmp
or
dec
repz
xor
xor
lcall
lret
xor
fdivrs
test
jns
test
popf
dec
in
mov
mov
fidivs
jp
repnz
sub
mov
les
sti
pop
inc
cmp
mov
clc
mov
incl
imul
lds
int
je
dec
mov
test
decl
outsl
js
mov
lods
xor
cmpsb
xor
mov
and
stos
add
sbb
adc
sub
adc
push
or
loope
arpl
jg
sbb
pop
push
scas
dec
sub
scas
fisubl
sub
imul
incl
clc
arpl
jns
pop
xchg
repz
xchg
xor
das
or
sar
jg
cmp
les
push
sti
rol
fcoms
push
xchg
dec
add
cwtl
stc
imulb
jecxz
mov
jb
popa
aam
sub
stos
inc
std
add
adc
pushl
ss
push
cmp
into
pop
dec
push
jnp
inc
and
adc
es
incl
pushf
sbb
xor
lret
xor
ss
or
fstl
and
lcall
and
icebp
fsubrs
jae
push
push
push
sub
outsl
mov
push
repz
fisubrl
rclb
xchg
mov
stos
roll
push
xor
jae
push
push
mov
push
xchg
stos
pop
popa
decl
push
sub
mov
pop
test
das
pop
sub
push
push
jg
fucomip
das
sub
pop
pop
sub
push
pop
and
dec
push
mov
fldcw
nop
inc
pop
repz
ljmp
push
clc
push
repnz
pop
movsl
shl
mov
in
jg
imul
adc
pop
adcb
mov
ja
data16
push
shll
aam
adc
adc
data16
notb
pop
cmpsl
fimuls
xchg
push
push
roll
aad
insl
repz
fistl
and
adc
cmp
movsb
xchg
push
xchg
sbb
sar
pushl
aam
adc
push
adc
and
mov
xchg
fwait
mov
data16
xor
pusha
push
adc
out
mov
push
shlb
xchg
fistps
shll
mov
push
out
in
push
out
mov
xchg
rcll
push
sarl
mov
roll
fs
fnstsw
add
dec
jecxz
xchg
push
popf
mov
fbstp
push
push
or
movsb
xchg
sub
fs
fisttpl
add
dec
fs
push
push
dec
jle
in
sahf
sbbl
xor
mov
mov
push
into
pop
rclb
outsl
push
push
in
xchg
mov
rclb
pushf
mov
mov
int
push
into
jb
mov
fs
dec
test
outsl
fistl
cltd
adc
push
iret
jg
rclb
push
in
jle
cltd
dec
outsb
jle
fs
popl
into
push
iret
xchg
in
push
loopne
fwait
lcall
in
xchg
mov
movsl
gs
movsl
in
mov
push
into
mov
cmc
dec
in
adc
test
mov
jne
gs
in
rcll
mov
xchg
sbb
xor
add
jne
in
xchg
inc
fs
mov
gs
push
or
aaa
cmc
fsub
jbe
push
xor
gs
out
in
xchg
jne
jle
dec
push
mov
in
push
jnp
jge
pop
cld
ficoms
js
xchg
jne
in
adc
mov
outsb
cmc
aas
mov
push
in
push
inc
gs
jbe
scas
mov
repz
outsb
rorb
push
mul
leave
pop
in
cmpsb
stc
int
inc
push
jo
mov
inc
xchg
mov
cltd
outsb
push
clc
fwait
out
dec
push
divb
mov
push
insb
gs
jne
lock
push
dec
push
mov
out
rorb
data16
pushl
and
mov
jb
xor
packuswb
shl
push
cmc
scas
out
adc
push
xor
data16
mov
mov
mov
mov
out
sarl
hlt
and
fisttpl
xor
dec
rorb
lods
jae
data16
sub
push
inc
push
repz
rcll
rcl
xor
mov
xchg
das
push
mov
data16
fwait
stos
repz
cld
div
out
xchg
stos
xor
data16
jae
out
outsl
lcall
iretw
rcrl
lds
dec
out
xor
outsb
push
pop
out
in
mov
int
or
mov
retw
push
hlt
jl
lret
xchg
push
push
xor
notb
mov
pop
push
push
test
adc
add
int3
push
inc
sti
mov
leave
adc
xor
out
imul
jae
ds
jle
mov
addr16
push
movsb
out
hlt
out
adc
addr16
sarl
xchg
jmp
stos
jae
lds
dec
addr16
addr16
aaa
fwait
dec
xchg
dec
xor
out
roll
test
mov
add
cld
out
push
adc
and
jecxz
fs
out
adc
stos
jb
addr16
out
out
push
pushw
bnd
scas
xchg
pop
adc
xor
fisubs
jb
outsb
mov
mov
out
push
mov
dec
push
xor
out
push
pop
insb
or
jmp
cmpsl
jae
loopnew
outsb
mov
push
push
sbb
repz
mov
xchg
push
xor
shlb
movsb
jae
out
adc
push
mov
mov
inc
repz
push
adc
es
adc
xor
outsl
inc
jae
ficoms
jp
mov
addr16
inc
adc
xor
gs
jb
out
adc
les
or
push
push
mov
pushw
xor
rclb
int
insl
mov
leave
mov
push
push
push
or
mov
push
dec
lcall
mov
sti
int
jp
mov
dec
loopne
rolb
loopne
mov
insl
adc
leave
push
pusha
loope
dec
or
pusha
int
push
dec
imul
std
shlb
mov
loopne
leave
daa
loopne
push
mov
aad
push
insl
fisttpl
cs
and
mov
loope
jb
mov
push
mov
or
adc
cld
mov
xchg
mov
fst
push
stc
int
scas
push
adc
jnp
add
fcompl
push
dec
xor
fcom
and
mov
xchg
cmp
xor
mov
repz
push
pop
or
ds
push
cs
and
loopne
imul
int
cltd
xchg
push
push
lret
fcoml
loope
or
cld
mov
dec
push
aam
mov
rorb
fwait
popa
mov
or
popa
ficoml
pushf
dec
test
rcl
xchg
loope
mov
mov
leave
in
sub
or
jg
dec
sub
aaa
rcr
mov
ret
adc
push
enter
push
push
or
loope
outsl
outsb
mov
pop
push
dec
mov
mov
dec
adc
outsl
fisttps
enter
push
test
dec
xchg
cmpsb
dec
pop
loope
sti
mov
loope
mov
popa
mov
pop
loope
push
mov
fsubrp
pushl
dec
jne
shll
popa
fcoms
mov
mov
outsb
ds
pushl
scas
adc
dec
lods
loope
sarl
rorl
mov
ror
test
push
in
or
lock
lahf
popa
out
shl
fcmovnu
out
into
mov
aam
es
leave
mov
xlat
shl
loop
or
out
mov
aam
push
rorl
cli
push
leave
test
push
inc
inc
adc
or
loop
adc
jle
pop
in
int
jno
loop
mov
push
jle
ret
push
or
mov
mov
dec
das
jle
loop
int
push
push
enter
lock
or
inc
adc
lock
add
lret
mov
out
loop
loop
outsl
mov
push
pop
jg
adc
inc
sbb
push
mov
iret
xchg
repz
push
pop
dec
rorl
nop
mov
iret
inc
or
push
mov
int3
fnstsw
loop
nop
mov
int3
adc
icebp
shl
push
pop
mov
in
dec
inc
stos
jmp
neg
sahf
push
leave
xchg
in
nop
dec
and
jecxz
pop
sub
cmpsb
mov
loop
push
cmp
mov
adc
mov
jecxz
sarb
jecxz
fimull
dec
mov
sarb
nop
into
out
enter
shlb
adc
mov
mov
enter
nop
lods
push
movl
nop
mov
rcrb
push
jecxz
xchg
pop
shll
push
push
les
adc
inc
cmpsb
arpl
insl
push
es
xchg
call
scas
push
mov
push
jne
fildll
call
daa
jecxz
shlb
pop
inc
daa
mov
mov
push
push
inc
adc
insl
mov
adc
les
outsb
shrb
sbb
in
or
cld
outsl
ss
scas
push
or
loope
push
arpl
adc
jl
insb
lahf
enter
popa
adc
shrb
jecxz
xchg
shr
push
push
insb
pop
shll
sti
rclb
jle
mov
in
push
outsb
push
int
insb
mov
in
in
push
jnp
outsl
dec
cmpsl
in
stc
push
jb
loopne
ljmp
ljmp
jbe
in
jle
loopne
lahf
insb
call
in
fisttpll
push
insl
mov
shlb
fisttpll
pushl
mov
inc
call
mov
xchg
addl
lret
pop
push
and
jno
and
into
and
stc
mov
pop
bnd
xor
add
cmp
xchg
cs
les
pop
out
pop
add
incl
or
or
data16
pushf
sbb
mov
movsl
cmp
and
movzwl
mov
jge
ds
push
icebp
pop
xchg
and
and
lods
push
dec
cmpl
jge
cltd
dec
mov
push
sub
mov
or
inc
sub
lea
xor
mov
sub
decl
dec
push
lock
dec
mov
popa
or
xor
pop
out
add
gs
cli
adc
out
ljmp
cltd
ficoms
dec
xchg
xchg
mov
sub
adc
adc
cmc
incl
mov
addr16
pop
xchg
add
gs
jbe
imul
loopne
fstl
cmpsl
sbb
repnz
ss
in
repnz
push
push
cmc
repnz
aam
ljmp
jae
int
fwait
push
push
call
push
xchg
push
mov
lods
insl
xor
dec
hlt
jne
insl
hlt
push
pop
push
mov
push
repz
mov
adc
pushl
ljmp
repz
adc
mov
insb
adc
out
pop
mov
cld
insb
xchg
decl
push
and
cvtps2pd
lods
mov
pop
lods
ljmp
lods
pop
pushf
xchg
outsb
adc
push
dec
and
pop
mov
pushf
mov
fmul
nop
movsb
imul
ljmp
mov
push
ret
cmc
cmp
mov
shrl
jle
decl
dec
xor
pop
or
out
or
push
cmp
add
ljmp
dec
mov
repz
cli
out
jecxz
ljmp
push
sbb
or
pushl
or
or
adc
or
cmpsl
mov
mov
clc
rclb
aad
decl
mov
decb
or
mov
and
movlps
mov
int
cs
fnstsw
cmpl
pop
jle
outsb
or
push
jmp
imul
out
out
push
sahf
out
add
out
or
jnp
push
test
jle
jmp
lcall
out
push
push
mov
popf
lods
jae
nop
push
repz
xchg
mov
xchg
mov
std
push
idiv
ljmp
ret
gs
mov
or
daa
mov
and
jbe
pop
push
mov
push
mov
or
int3
nop
repnz
inc
mov
adc
fcomip
dec
loop
outsl
cwtl
andl
adc
outsl
cltd
pop
fwait
std
sub
cs
or
jmp
sub
outsl
add
fstpt
in
out
pop
xor
dec
mov
sub
in
and
cli
cmc
push
cmp
cmp
cld
fstl
outsl
pop
push
cmpsl
cmpsb
andb
addr16
mov
pop
mov
pop
fs
popa
jae
sti
mov
push
add
add
jb
lcall
dec
aaa
cmp
mov
or
push
in
sarl
addr16
dec
pop
push
cmc
jg
daa
lret
jl
out
and
stc
xchg
adc
mov
loopne
je
pop
or
push
in
call
in
sti
mov
or
jo
loop
sti
xchg
in
or
gs
mov
pop
into
cld
mov
scas
lods
call
mov
shrl
sbb
paddb
xor
adc
jo
push
cmp
lret
mov
insl
mov
incl
jl
aam
add
mov
lock
ljmp
std
xchg
rcrl
cmp
loope
sbb
mov
mov
adc
jno
movsl
mov
or
pop
imul
sbb
push
mov
pop
lock
int
cmp
cltd
push
fisubs
xchg
test
call
aad
outsb
call
add
ret
pop
rcll
sub
mov
inc
fwait
decl
lcall
sbb
sbb
xchg
mov
mov
ret
jmp
jmp
nop
mov
xchg
ss
in
pop
add
add
es
incl
lods
pushf
and
and
pop
pop
sbb
jnp
inc
add
mov
aas
cld
sbb
or
or
sbb
lret
xchg
fwait
rol
lcall
imul
cmp
xchg
jg
call
lods
clc
xchg
adcb
jae
incl
ds
ja
subl
adc
inc
sub
lret
mov
divl
push
lds
ljmp
pop
int3
stc
jmp
mov
cli
add
je
mov
mov
pushl
mov
imul
adc
fdiv
adc
lret
mov
inc
dec
mov
jmp
decl
jbe
std
sbb
int
cmp
inc
jno,pt
adc
popw
jmp
mov
jle
sub
lea
lods
cli
lret
jmp
aam
adc
xchg
call
cmc
ja
ljmp
fwait
lahf
sub
testb
inc
out
outsl
jmp
inc
cmpsl
fucomip
pop
sahf
ljmp
lret
or
push
out
imul
jg
ret
lock
mov
dec
jg
jne
aad
dec
dec
xor
cmpsl
dec
incl
enter
pop
pop
in
insb
jg
bound
dec
push
jmp
dec
les
lock
in
mov
into
fdivs
outsl
push
nop
mov
jo
fistl
iret
rcl
dec
mov
fstpt
cs
jb
sbb
dec
lcall
xor
das
call
inc
popa
cmp
int3
jl
sub
gs
mov
pusha
cmp
sbb
inc
les
cmp
jle
or
jl
sub
xor
adc
mov
incl
sbb
or
ret
stos
out
mov
ss
dec
cld
mov
mov
push
call
pop
xor
addr16
pop
addr16
mov
xor
mov
sar
aas
sbb
jmp
bound
call
push
or
jge
mov
outsb
lods
jmp
sarl
or
jge
mov
ror
fsubr
sub
pushl
lods
jge
adc
xor
jp
xchg
xchg
imul
cld
ljmp
outsl
inc
push
cmpsl
dec
lret
mov
mulb
mov
jg
aad
jmp
adc
adc
bound
fisttps
sbb
mov
jmp
jmp
inc
fsubrl
pop
jle
call
mov
aad
ficomps
and
loop
dec
cld
fimuls
cmp
rcrl
test
cltd
and
and
xchg
push
out
xchg
add
popa
imul
sub
fists
cmp
imul
sub
iret
lods
test
iret
subl
rol
jo
or
icebp
push
mov
cli
ljmp
mov
and
and
ret
loop
loop
mov
push
fdivs
aaa
daa
xchg
in
aaa
mov
push
scas
xor
dec
pop
lods
hlt
lods
mov
daa
lahf
jle
mov
jg
add
push
shll
add
clc
hlt
inc
push
xchg
mov
mov
mov
nop
xchg
push
loopne
fistpll
pop
push
dec
outsb
pop
iretw
call
repnz
fimuls
xor
into
mov
leave
jbe
hlt
hlt
cmp
pop
jb
xchg
movsb
cwtl
mov
xchg
ljmp
mov
pop
jo
inc
push
les
out
pop
loop
popa
push
pop
int3
xor
push
imul
adc
lret
jo
pop
pop
in
es
int3
pop
inc
mov
int
inc
hlt
into
dec
adc
shlb
pop
hlt
cmp
push
rclb
int
jle
repz
dec
sarl
outsb
in
inc
adc
push
push
sub
popa
inc
je
cmp
addr16
rcrl
sahf
cmpsb
test
je
nop
lret
je
rcrl
adc
sub
mov
daa
sbb
push
repz
js
mov
scas
xor
incl
cmp
sbb
or
xchg
shlb
jne
sbb
test
pushl
pop
ja
or
adc
cmp
jg
or
sbb
xor
mov
jl
jne
mov
mov
dec
stos
aam
pop
add
movsl
arpl
ljmp
popf
xor
mov
incl
sub
jg
sub
in
daa
adcl
xor
leave
jnp
pushl
cld
pop
faddp
repz
lret
icebp
dec
or
std
xor
jmp
and
rclb
call
jne
pop
inc
call
aam
incl
add
pop
cmc
xor
dec
sbb
inc
mov
xchg
jmp
fdivrs
mov
iret
clc
adc
popf
pop
and
jne
call
mov
cli
push
inc
mov
jne
jnp
pushl
cwtl
testb
pop
cmpsb
jne
jg
fisttps
repz
fisubl
mov
add
test
adc
lock
push
notb
ss
add
xor
xor
mov
xchg
es
mov
lods
and
imulb
outsl
mov
jmp
inc
testb
mov
or
sahf
xor
lock
pushl
faddl
add
push
in
into
xor
xchg
xor
sbb
out
sbb
adc
rep
lea
pushl
repnz
mov
add
dec
jae
add
shlb
adc
icebp
jp
pop
mov
jae
pop
mov
testb
fmull
or
fsubr
lahf
push
jmp
cmp
loopne
out
jl
push
jnp
or
addr16
mov
mov
jp
je
outsb
mov
fisttpl
add
fs
adc
mov
popf
idivl
in
incl
mov
movsb
xor
push
repz
lea
cmp
mov
dec
dec
mov
adc
xchg
jg
push
repnz
or
or
repnz
mov
xor
jns
mov
scas
mov
sub
dec
xchg
inc
fwait
mov
lds
xchg
testb
std
xchg
popf
xor
sbb
rol
sbb
je
push
ljmp
aad
lahf
and
jge
bound
sbb
daa
daa
xor
call
stos
jmp
xor
js
inc
shll
test
std
idiv
testl
xchg
jne
xor
xchg
or
rcll
loop
push
cmovno
xchg
daa
add
mov
push
sub
sti
cwtl
scas
inc
out
sbb
push
sub
mov
movb
fcmovne
add
inc
rcll
shll
ja
sbb
xchg
lret
add
inc
outsl
push
lcall
add
lock
rcrl
in
test
adc
lock
call
jo
lods
pop
cmp
cld
fwait
xchg
sub
mov
loopne
imul
lahf
enter
std
inc
cmp
xchg
pop
mov
hlt
mov
adc
lods
or
inc
cmp
fidivrl
test
xor
bound
rcl
xor
stos
mov
stos
pushl
pop
arpl
into
roll
mov
clc
iret
outsb
pop
jo
in
pop
fs
jmp
and
pop
dec
roll
xchg
mov
and
pop
add
iret
popa
sub
rcrl
jp
adc
pop
std
pop
lock
push
cmp
xor
xlat
mov
pushl
int3
and
test
push
adc
cmc
movd
clc
pop
test
mov
or
out
clc
push
fs
lock
sbb
arpl
cmp
push
push
add
rcll
movsl
mov
mov
movsb
and
xor
inc
add
cmp
cmp
sub
fcomps
mov
scas
pop
into
mov
xor
mov
mov
push
fdivs
push
jge
nop
inc
adc
call
test
pop
or
ljmp
popf
xlat
mov
mov
pop
leave
stos
or
inc
je
or
sbb
cmp
incl
mov
imul
in
push
das
or
pop
mov
jbe
push
xchg
lock
cmp
mov
pop
sub
mov
push
cli
sbb
aas
js
mov
mov
int3
xchg
and
adc
icebp
push
push
or
push
xchg
pop
subl
jg
mov
test
mov
in
mov
inc
mov
rorl
sub
test
out
movsl
inc
stos
inc
sahf
inc
cld
cltd
dec
jns
push
outsb
jae
cmp
call
in
fisubrs
sbb
fwait
sbb
in
jl
ljmp
repnz
or
inc
loopne
dec
mov
sub
jp
mov
dec
scas
ss
pop
fwait
test
jae
lods
pop
hlt
decl
adc
inc
jno
mov
inc
movsl
inc
jg
ljmp
lret
mov
mov
push
and
ret
fs
stos
and
adc
in
dec
add
mov
xchg
push
mov
or
lcall
pop
ljmp
loop
push
sbb
pop
jl
aas
ret
add
mov
icebp
sbb
comiss
in
mov
sub
xor
lock
push
push
xchg
pop
add
mov
and
jecxz
sbb
jb
or
repz
dec
je
popf
dec
cltd
jno
jo
pop
dec
add
sti
push
std
xchg
cmc
or
cwtl
int3
or
decl
or
dec
mov
sub
xchg
xchg
or
xchg
mov
mov
cwtl
sub
in
sbb
aas
cmp
push
adc
adc
dec
adc
stos
or
aad
cli
add
adc
lcall
jae
stos
xor
repz
pop
out
mov
fsubrl
lret
sahf
inc
cs
mov
jnp
ret
test
pop
scas
in
outsl
inc
inc
push
jmp
fsubl
sti
decl
inc
movsb
mov
dec
ret
xor
pop
push
cmp
pushl
lcall
or
jae
or
rcr
insl
movsl
rcll
pushl
push
jb
inc
dec
sbb
mov
lods
pop
push
jle
jb
fstl
data16
xor
movsb
repz
decb
cmp
pop
aad
mov
xchg
mov
sub
js
xorl
outsl
dec
pop
jmp
shrl
push
jo
adc
scas
popa
and
jmp
add
push
lcall
adc
cs
aaa
cmp
add
incl
out
sub
dec
mov
ja
dec
jecxz
mov
xor
aas
dec
mov
int
inc
jl
xchg
arpl
mov
rorb
and
xlat
jnp
lcall
loope
push
das
les
cld
popa
nop
clc
or
jno
jmp
hlt
xor
lds
cmp
or
push
adc
mov
pusha
pop
mov
int
lods
xor
popa
scas
daa
ds
clc
ljmp
jg
cmpl
mov
jbe
and
fwait
sarl
xchg
sar
out
mov
adc
nop
dec
cmp
jmp
sub
insb
popl
imul
movsl
push
popa
dec
inc
sar
jb
sub
lds
loope
pop
xchg
mov
and
js
dec
cmp
movsb
push
mov
incl
jbe
add
movb
mov
inc
or
ljmp
lods
int
call
mov
aad
adc
or
mov
cmp
repz
lahf
and
mov
pushl
cs
movsb
xchg
movl
test
ficoml
sub
and
cltd
in
ds
lods
dec
push
in
xor
call
clc
add
mov
insb
sbb
inc
pslld
cmc
jbe
adc
xorb
mov
jo
dec
push
mulb
and
jae
stos
push
repnz
jg
dec
ss
cmpsb
push
clc
mov
ljmp
rcrb
out
fstl
fsubs
adc
sbb
std
out
cltd
out
jecxz
pop
mov
loope
adc
dec
movsb
pop
jns
mov
test
push
test
cmpsl
jmp
out
inc
and
jae
mov
cmp
push
icebp
mov
dec
sbb
lcall
dec
mov
nop
xor
inc
jb
dec
rcl
sbb
adc
cltd
test
lea
mov
ret
xor
rcll
push
sbbb
pop
pop
cmp
pop
mov
mov
sarb
call
sbb
push
jno
lods
mov
nop
cwtl
cld
mov
repnz
stos
jmp
push
jno
pop
add
fisttpll
sbb
call
mov
xchg
repnz
pushl
call
cmp
loopne
incb
js
not
ljmp
popf
bound
decl
mov
out
fs
stos
cwtl
xchg
mov
mov
in
inc
pop
ret
out
mov
test
adc
mov
inc
into
pop
decl
in
push
mov
rclb
sarl
test
ds
mov
add
mov
and
bound
mov
cmp
jge
in
leave
test
scas
aaa
or
call
xor
push
idiv
fildll
mov
shlb
push
je
js
addl
adc
pushl
sub
push
repnz
adc
dec
lret
add
jmp
jmp
cmp
repnz
das
icebp
cmpsl
dec
shr
push
xor
call
cmc
addb
int
dec
sub
inc
dec
flds
cli
incl
sub
push
out
ds
addb
ljmp
ss
sbb
stc
and
add
enter
fcomi
push
push
shll
aaa
bound
test
add
push
inc
adc
iret
and
mov
sub
mov
insb
mov
add
jae
fs
out
cwtl
jmp
lcall
add
inc
mov
pop
cltd
lcall
cmp
sub
jae
mov
xor
ljmp
sbb
or
pop
dec
xchg
jg
out
test
aad
mov
sbb
call
ss
cmp
in
inc
iret
pusha
cmp
enter
adc
hlt
pusha
mov
imul
sub
pop
mov
cmp
sahf
xchg
dec
lcall
inc
push
sbb
fnsave
lcall
fildl
xchg
mov
lock
popf
repnz
jns
lcall
sbb
decl
in
out
sahf
jp
mov
push
jns
xor
sar
scas
and
dec
insl
mov
mov
in
push
popf
xchg
jmp
movsl
vphadduwd
addr16
pop
lahf
cmp
push
outsl
push
pop
pushf
jae
sbb
jmp
xchg
pop
stos
pop
add
dec
inc
test
lret
movsb
ffree
pop
popa
enter
je
lea
incl
push
lret
inc
cmp
fcmovbe
lret
cltd
adc
je
xor
xchg
mov
sbb
nop
push
bnd
mov
rcpps
pop
mov
push
jecxz
jno
fwait
mull
jg
pushl
or
inc
mov
insb
cmp
imul
fimull
cwtl
mov
popf
decl
test
ds
out
xlat
cmp
in
xchg
cmpsb
cmpsl
jns
push
jae
fsubrs
ljmp
push
xchg
jae
jecxz
mov
push
testl
xchg
mov
dec
inc
inc
adc
ja
ljmp
xchg
xchg
out
cltd
push
and
sub
adc
incl
test
push
xchg
push
loope
add
xchg
xchg
push
popf
or
cmpsb
jl,pn
sub
inc
aad
add
scas
sub
incl
or
and
rolb
cmpb
repnz
lcall
or
mov
xor
pop
in
xchg
lret
lds
hlt
mov
subb
mov
cmp
pop
and
cld
and
addr16
push
shrb
mov
enter
call
je
push
push
out
mov
mov
mov
leave
test
in
cwtl
add
repnz
add
pushf
xchg
shlb
jl
fdivrp
add
mov
push
adc
push
call
insb
incl
jle
xlat
push
lock
sar
add
jl
fadds
jb
rolb
cli
test
data16
push
adc
cmp
xchg
cs
mov
push
hlt
test
in
xchg
adc
push
sub
xor
add
std
das
sar
lods
jp
sarl
test
xor
inc
add
insl
shll
jl
lock
out
dec
jg
int
sti
mov
test
push
js
les
movsb
bound
xchg
mov
scas
stos
fs
push
popf
add
push
stc
test
fildll
jno
pushf
test
xchg
xor
clc
arpl
xchg
les
jge
sbb
gs
test
mov
mov
test
add
clc
lcall
fs
aas
cmc
add
mov
jno
mov
sub
popa
test
call
test
jae
test
out
mov
fstpl
jg
hlt
add
push
out
test
add
adc
add
repz
adc
loopne
mov
sbb
shll
test
adc
push
ljmp
pushl
add
push
test
push
lock
shrl
add
mov
add
mov
xchg
or
pop
jbe
inc
add
adc
movsb
repnz
mov
ja
push
repnz
test
out
xor
adc
scas
add
pop
movsb
rcl
or
aaa
mov
daa
jno
sti
mov
push
ja
cltd
sti
cmpsb
repnz
xchg
sti
cld
int
out
mov
adc
jnp
push
test
cmpsb
sti
ret
xchg
mov
outsl
mov
push
cmp
xor
push
hlt
jnp
push
loop
mov
xchg
pop
add
loope
or
or
into
adc
push
out
mov
incl
sti
mov
push
push
or
fldpi
cmpsb
inc
ret
shl
mov
in
adc
sbb
mov
test
aad
add
sti
mov
jg
jmp
rcrl
mov
sbb
mov
inc
mov
jnp
push
das
jnp
pop
cld
mov
xchg
sbb
sti
xchg
shl
lea
fdivr
mov
add
fs
xor
adc
repnz
es
mov
pusha
jle
jnp
xchg
inc
sti
push
push
mov
fucomi
sti
pushf
xchg
push
jnp
push
push
mov
dec
sti
sahf
repz
ljmp
mov
mov
cli
lea
jp
push
mov
jp
xchg
cmp
sti
incl
ret
rcrb
shll
cli
cmpsl
xchg
mov
repnz
push
scas
jp
mov
cli
mov
mov
mov
fidivrl
push
js
scas
cli
push
xchg
das
jp
jb
jp
shrb
test
fistps
xor
cli
cmpsb
jp,pt
jb
rolb
jp
mov
cli
jle
outsl
mov
repnz
shl
jp
xor
push
adc
fildll
shll
mov
pop
std
aas
fistl
shll
mov
mov
xchg
cmp
in
out
push
cmc
push
jp
repz
adc
xchg
and
adc
cld
lcall
push
das
iret
into
cli
mov
push
inc
push
pop
pop
rclb
xor
jp
outsl
das
push
bound
inc
cli
rcll
bound
push
jo
repnz
xlat
sub
fisttpl
push
xor
shrb
or
cli
into
jae
push
cs
cwtl
stc
into
mov
fisubl
push
nop
jg
jg
cltd
pop
cs
or
js
jns
rclb
rclb
xchg
sbb
stc
test
push
lods
stc
rcl
add
stc
shlb
xchg
mov
push
jns
add
dec
xchg
rcrb
dec
inc
xchg
les
adc
test
loop
clc
lcall
mov
repnz
int
cmc
inc
popf
lret
jmp
mov
test
ret
jns
outsl
ljmp
or
test
cwtl
jle
push
inc
cmpsl
shll
addl
inc
pop
shll
inc
and
push
mov
lods
std
test
lods
cmp
push
pushf
xor
idiv
shll
or
stc
sahf
pusha
or
adc
fstpl
jns
mov
in
int3
ljmp
lods
jecxz
xchg
mov
xchg
insl
insl
inc
push
sbb
cli
push
sub
pop
cltd
pusha
push
inc
and
push
outsl
lods
mov
jns
dec
rcrl
dec
push
scas
pop
xor
lds
adcl
lds
rcll
ret
incl
sbb
lds
mov
rcrb
inc
push
lds
mov
inc
sbb
cmp
mov
cs
imul
pop
push
push
push
ljmp
loop
inc
and
push
aas
mov
daa
rolb
outsl
pop
cld
filds
cmc
cmp
mov
mov
clc
pushf
adc
js
jb
js
adc
cwtl
clc
ret
ret
or
inc
pop
incb
clc
mov
mov
js
mov
clc
xchg
sar
sub
rcr
push
mov
js
adc
jmp
jecxz
mov
je
adc
inc
mov
aas
in
xchg
add
sbb
cmp
filds
test
pop
push
xchg
outsb
pop
lds
ret
inc
inc
mov
mov
jne
in
ja
les
outsl
cmpsb
inc
orb
xchg
out
into
dec
repnz
shrl
adc
sub
lahf
ljmp
pop
inc
mov
popf
rclb
icebp
sub
cmc
call
mov
push
addl
loopne
sarl
xor
int
das
jg
mov
shl
jg
mov
jg
xchg
fdivrs
jg
push
ret
xor
fnsave
stc
call
push
rcr
jg
sub
incb
fcmovu
call
and
mov
jmp
cld
sarb
insb
xor
add
mov
xchg
mov
and
or
ljmp
sbb
bound
push
lret
and
mov
mov
hlt
loopne
jo
test
mov
xchg
sbb
mov
inc
jno
dec
inc
or
jae
pushl
adc
sbb
and
daa
das
sbbb
and
xchg
call
jp
cli
out
clc
jmp
pushl
aam
xor
in
or
pop
bnd
or
lahf
lcall
out
mov
sub
testl
mov
sbb
push
loopne
add
je
idiv
jg
adc
and
cmp
iret
pop
dec
cmp
xor
and
fldt
push
test
pop
cld
lret
out
sbb
enter
dec
fiaddl
cld
pop
mov
sub
mov
mov
mov
xchg
sub
pushf
or
mov
mull
add
mov
cmp
xchg
shlb
test
sub
incb
ljmp
nop
jl
push
pop
loope
push
xchg
aaa
add
jge
aam
decl
movl
xchg
jne
fwait
mov
xlat
jb
push
ljmp
incl
or
mov
in
je
icebp
cld
aad
repz
mov
add
mov
sbb
xorl
jo
dec
std
cli
sbb
mov
out
adc
jp
aad
aas
push
aam
or
std
outsb
ja
sbb
ud0
shrl
pop
lock
mov
out
repz
out
mov
fxtract
insl
dec
and
adc
cmpb
lret
gs
popl
in
pop
mov
std
rcrl
inc
in
sti
jecxz
in
cmp
test
xchg
out
lds
mov
push
jge
jmp
pop
std
ljmp
push
stos
leave
xorl
mov
int
sub
faddp
push
dec
jge
xor
int
xor
jo
call
fcmove
lret
scas
inc
insb
xchg
mov
jmp
pop
sbb
pop
dec
jbe
cmp
ljmp
je
adc
jp
push
jle
xor
popa
std
out
adc
add
outsb
mov
inc
pop
aam
or
mov
xchg
scas
inc
mov
cmc
cld
out
and
fsubs
jno
mov
jge
adc
roll
mov
jl
subl
xor
jne
adc
fnsave
pop
dec
adc
ja
mov
dec
push
movsl
lret
stos
xor
mov
outsl
jg
xchg
jl
rcrl
sti
pop
call
pushf
cs
test
icebp
jl
hlt
jmp
or
call
mov
inc
loop
xchg
sbb
mov
sbb
js
adc
inc
ja
push
ljmp
insb
jl
mov
mov
sub
cmc
sub
rorl
dec
push
ljmp
xor
loop
mov
add
push
cltd
ret
mov
in
dec
inc
xchg
pushl
xchg
ljmp
pop
jo
mov
fiaddl
inc
pop
jmp
inc
inc
pop
in
test
mov
test
jne
into
repz
insl
test
std
cmp
sarl
sti
icebp
add
and
add
jae
or
fisttps
shlb
pop
ljmp
sar
push
insb
sbb
wbinvd
fwait
int
ss
xchg
add
repz
fisubs
adc
jmp
pushf
cwtl
pop
mov
sti
pop
dec
sub
or
js
bound
repz
xchg
ja
rcrl
jns
mov
mov
or
push
mov
push
push
xor
int3
cld
or
incl
fists
jnp
push
xchg
inc
push
orb
push
roll
mov
pop
cld
mov
mov
inc
xor
fdivl
decb
pushl
mov
ljmp
cli
xor
mov
jns
and
or
jno
call
jge
or
xlat
or
arpl
cmp
jle
stc
or
jl
icebp
fdivrp
pushl
push
and
mov
mov
add
inc
jmp
add
ss
rclb
mov
js
repz
adc
test
add
mov
mov
mov
jb
les
aas
jl
loop
lock
mov
or
std
xor
sub
out
sbb
ljmp
call
lea
ret
mov
fbld
xchg
aam
fldenv
insl
inc
xor
ljmp
das
jae
leave
cltd
inc
jle
pop
add
test
repnz
inc
stc
pusha
rcr
pushl
mov
jo
adc
rcl
out
mov
mov
cmpsl
cmp
or
fstpt
and
mov
pop
jl
adc
fnstenv
mov
clc
pop
dec
mov
ljmp
inc
jbe
fcomi
lock
mov
dec
xchg
adc
aas
fistl
mov
mov
xchg
ljmp
shrl
push
adc
adc
jae
unpcklps
push
insb
dec
rcrl
aad
fdivl
push
dec
pop
fmuls
jg
mov
xchg
mov
arpl
push
in
lods
jecxz
leave
rcll
pop
sarb
xor
pop
dec
out
or
out
ljmp
adc
dec
or
push
out
mov
push
and
jnp
and
push
jbe
pop
sbb
dec
sar
pushl
js
popa
add
push
in
inc
dec
xchg
daa
push
mov
xchg
bound
je
rol
icebp
ljmp
lcall
push
fs
mov
push
pop
leave
insl
mov
nop
subl
jne
xchg
frstor
scas
cli
insl
mov
cltd
outsb
in
cmp
clc
out
pop
push
call
pop
jno
xchg
mov
xor
lods
xor
cmp
rcrl
int
and
fcoml
xchg
jle
and
outsl
xchg
xor
sar
ljmp
cwtl
and
dec
cmp
push
repz
jp
xchg
push
lock
icebp
adc
lds
call
sbb
adc
inc
mov
jb
mov
int3
fstl
les
in
data16
call
dec
mov
push
out
jo
cmc
xlat
xchg
push
inc
test
cmp
or
incl
mov
test
addl
jo
scas
xchg
lods
jbe
jne
pushl
jle
std
imulb
add
mov
cwtl
imulb
mov
add
pop
cmc
pushl
xchg
cmp
jmp
adc
orl
jo
xchg
stos
out
lcall
lods
das
in
lahf
jb
out
movsl
cli
in
push
insl
lds
pushl
scas
aam
inc
movsb
mov
mov
sbb
aas
push
out
fstpt
or
dec
pop
xchg
pop
lock
mov
dec
js
lds
mov
mov
les
xor
or
push
in
push
mov
and
xorb
push
and
int3
pop
incl
into
stos
adc
jle
sahf
xor
test
push
negl
in
push
jp
enter
es
call
pop
daa
popa
jbe
pop
les
push
jl
inc
shll
fisttpl
xchg
nop
mul
incl
out
nop
cmp
xor
pop
ja
jnp
ret
cltd
mov
xchg
out
mov
retw
in
add
cmp
sub
ficomps
fincstp
sub
adc
sbb
push
xchg
pusha
hlt
or
negl
cmp
out
lea
cltd
imull
lahf
fdiv
adc
mov
mov
mov
inc
push
int3
divl
faddl
add
incl
hlt
adc
push
and
xchg
pop
mov
cs
jl
movsb
push
incl
sub
repnz
mov
out
stc
mov
push
inc
incl
push
out
in
sub
call
inc
inc
jbe
xchg
arpl
lret
pop
jo
dec
push
mov
idiv
pop
fwait
push
adc
hlt
ljmp
scas
sti
negl
call
sbb
fstps
xlat
fistpl
or
cmp
shr
or
mov
ljmp
test
mov
nop
lcall
int3
mov
imul
fcomip
jl
push
aaa
outsl
dec
cmp
in
jp
push
shr
rcrl
std
nop
repz
movsb
jecxz
inc
xchg
pop
dec
jmp
cmp
rcll
negl
negb
insb
js
mov
cld
add
add
adc
loope
push
or
sbb
jmp
pop
outsb
daa
loope
xlat
cmp
fwait
xchg
add
scas
in
outsb
sarb
dec
xor
pushl
push
into
xchg
add
or
cld
xchg
sti
dec
pop
mov
shlb
or
decl
mov
xchg
out
xchg
icebp
test
pop
jo
out
or
push
jb
cmp
jmp
push
je
or
xchg
or
rcrb
jne
in
xchg
insb
or
ss
dec
ljmp
cmp
xor
cmp
add
sub
pop
mov
sarb
out
incb
popf
sahf
fiadds
clc
idivb
mov
in
cmpsb
popa
pop
ss
lock
add
leave
cmp
mov
jl
push
movsl
pop
mov
cmp
push
push
pop
adc
adc
xor
hlt
aaa
push
loop
sbb
push
lock
adc
dec
jo
jnp
cmc
or
add
daa
adc
test
mov
ds
decl
sbb
pop
clc
sub
mov
sub
lret
sub
insl
inc
mov
sti
out
bound
pop
push
pop
xchg
sti
nop
outsb
fsubrl
inc
ja
mov
inc
fs
orb
xor
mov
adc
lcall
mov
lret
hlt
sub
or
push
jae
or
push
movsl
je
cwtl
or
push
aad
cmp
adc
aaa
in
rcrb
sub
inc
push
cld
lret
cmp
push
mov
int3
xor
inc
cmp
out
and
xchg
pop
negb
pushl
outsl
adc
push
push
jl
cmp
mov
js
sub
cli
fwait
jns
daa
mov
jg
xor
dec
jmp
push
dec
cmp
push
incl
add
or
mov
lea
add
idiv
data16
cwtl
push
push
jmp
or
mov
adc
add
rorl
jmp
jmp
sub
xchg
jnp
mov
ret
or
mov
cmpsb
lahf
adc
mov
rcrl
push
icebp
inc
pop
int
mov
inc
xchg
cmp
mov
inc
inc
insl
pushf
and
mov
dec
cmp
dec
xor
xchg
ror
cld
sub
hlt
xor
mov
cwtl
jmp
ret
add
inc
mov
subl
mov
es
pop
es
inc
daa
jmp
outsl
or
pop
in
in
int
adc
mov
mov
cmp
sti
push
mov
mov
fldenv
xchg
les
cmp
add
mov
pop
pop
aad
dec
test
js
pusha
cmpsb
cmpsl
test
ljmp
sbb
stos
mov
jecxz
test
jo
cmp
psubusw
push
enter
cmpl
add
adcb
shrl
fwait
outsl
lods
std
dec
fnstcw
sbb
aaa
inc
xchg
stos
mov
push
lods
jge
cmc
sbb
cmpl
cltd
out
call
push
cmp
mov
ljmp
cs
sbbb
repnz
dec
add
jmp
ljmp
push
lret
mov
mov
jns
ljmp
movsb
pop
push
ret
inc
out
dec
test
fsub
xor
cmp
decl
mov
pop
outsb
mov
movaps
cwtl
jb
test
fimull
decl
push
adc
hlt
adc
cld
xchg
enter
jae
add
jmp
outsl
into
jge
call
stos
loopne
pop
mov
das
jmp
pusha
ja
dec
inc
ud0
and
ret
or
mov
test
outsb
test
mov
jne
or
leave
in
mov
test
cmpsb
in
into
and
adcb
test
aas
iret
pop
mov
cs
add
push
and
fcmovnbe
mov
cmpsl
sbb
fdivrs
push
and
rep
and
mov
in
push
mov
insb
fucomp
stos
mov
xor
add
mov
dec
shl
mov
push
jle
pushl
inc
fcomp
aaa
pushf
rorb
mov
shlb
xchg
imul
jae
and
call
and
aad
imul
push
movsb
stc
inc
xchg
test
inc
ljmp
or
pushl
sbb
jmp
xor
jne
inc
xchg
adc
dec
xchg
rcll
adc
insl
call
xchg
cmpsl
test
daa
fdivs
jmp
cmp
jbe
mov
pop
dec
out
adc
sbb
mov
dec
and
sbb
inc
add
arpl
decl
rcl
mov
sub
inc
push
dec
mov
mov
dec
xchg
sahf
insl
lcall
repnz
out
add
pusha
mov
sub
cmp
ds
jae
or
outsb
pop
adc
test
jg
fildll
jb
sub
xchg
call
or
mov
dec
and
xor
es
mov
dec
jne
adc
sub
ljmp
insb
cmp
pusha
add
jp
pop
lock
movl
sbb
mov
addb
push
sbb
xor
inc
push
cld
dec
aam
sbb
call
icebp
fucomip
mov
shlb
lods
ljmp
fimuls
ficoms
fs
cmp
ljmp
push
and
fildll
syscall
lods
and
add
rolb
call
sub
jg
call
stos
pop
push
roll
and
mov
insb
sub
insl
push
cld
inc
mov
mov
lcall
pop
call
dec
xor
lcall
stos
aad
and
jo
leave
popf
push
sbb
pop
adc
scas
mov
decl
inc
pop
pop
clts
into
sbb
imul
push
inc
in
jmp
popf
insb
ljmp
xchg
pop
out
out
pusha
js
ficoms
icebp
mov
fnstenv
outsl
popa
jne
clc
push
mov
jae
shr
bnd
inc
push
adc
pusha
and
clc
pop
gs
push
sbb
ljmp
and
fs
in
mov
jecxz
scas
mov
jno
imul
pop
nop
test
xor
decl
push
xchg
sub
imul
jge
adc
jge
outsl
pop
pop
js
jbe
mov
dec
je
lds
fs
inc
nop
mov
xor
mov
aam
cmp
decl
shlb
push
imul
fwait
out
pop
jo
push
pushf
nop
ja
pop
mov
outsb
sub
hlt
jo
fptan
mov
ja
shlb
fwait
xor
adc
movsl
xchg
mov
push
jge
in
cld
push
mov
pop
adc
cmpsl
jnp
mov
dec
cli
cmc
repnz
les
shrb
bound
cmp
pop
stc
imulb
xchg
test
pushf
mov
outsl
nop
frstor
mov
pop
pop
ljmp
and
mov
mov
mov
inc
add
adc
call
mov
push
lock
mov
xor
push
repnz
das
mov
cmpsb
jg
sbb
xchg
ror
pop
mov
adc
out
lcall
jp
sub
insl
es
jmp
stos
fistps
in
insl
adc
adc
sub
push
jl
in
dec
sbb
cltd
shlb
sbb
in
xchg
push
mov
jg
das
movsb
imul
lcall
mov
xor
mov
daa
jl
ljmp
mov
adcb
hlt
ljmp
lock
pop
das
mull
rolb
lcall
stc
jp
cmp
jg
lcall
xor
inc
out
cmp
jbe
in
mov
fucom
in
jo
jmp
jp
or
std
sub
shl
jp
cltd
insl
in
clc
aam
xchg
adc
lcall
in
jo
call
xchg
mov
inc
inc
jnp
je
push
mov
lock
sub
in
dec
clc
push
dec
in
pushl
addr16
jge
push
dec
and
movsb
jl
adc
mov
pop
sub
ret
and
dec
insl
iret
jp
jae
xchg
shll
into
push
dec
mov
decl
fnstcw
xor
mov
mov
popf
sahf
jbe
jnp
lods
pop
fnstenv
and
ljmp
jbe
and
dec
cwtl
jnp
enter
mov
inc
xor
sbb
mov
aad
clc
mov
fcoml
or
push
clc
in
in
imul
mov
add
insb
or
jmp
out
mov
int
pop
mov
mov
insl
psubq
fsubs
dec
xchg
dec
mov
mov
es
jge
lock
lods
push
push
ficomps
mov
cld
movsl
inc
test
sahf
adc
jo
pusha
incl
xorb
xchg
sub
fs
mov
adc
stc
push
inc
inc
dec
mov
stos
sub
add
fwait
hlt
adc
xchg
insb
lahf
dec
mov
in
push
cmp
out
jns
js
in
xor
xor
fbstp
pop
adc
sub
xchg
push
outsl
xlat
ret
add
pop
enter
jg
cmp
and
and
and
popl
bound
dec
add
push
and
cmpsb
sbb
xor
adc
ret
iret
hlt
sbb
repnz
rorb
in
loopne
jg
dec
gs
mov
lea
mov
xchg
shrb
iret
pop
push
push
iret
cwtl
xchg
in
ljmp
push
loopne
nop
fcomi
jecxz
fstp
leave
mov
push
lahf
inc
fs
push
lahf
or
arpl
ljmp
fbstp
sti
jnp
jne
data16
and
mov
jnp
cmpsb
imul
shlb
incl
sub
sti
xorb
fbld
inc
inc
add
ret
scas
pop
push
aad
mov
push
jmp
stos
insl
mov
mov
mov
push
xchg
jg
jnp
in
scas
cli
jae
jl
repnz
incl
jge
ss
into
dec
idiv
in
cmp
pop
or
lahf
mov
jg
add
xchg
jb
jmp
jp
mov
and
sub
inc
bound
lahf
lds
add
mov
or
and
lcall
ja
and
outsl
push
lds
fcoms
lahf
aad
outsb
or
jne
std
pushf
jne
call
cmp
pop
jns
jne
icebp
jnp
nop
mov
xchg
mov
cmp
pop
dec
das
into
adcb
arpl
fwait
push
mov
dec
xchg
repz
sbb
pushl
in
xchg
insl
add
popa
xchg
rorb
call
addr16
arpl
xchg
mov
jecxz
push
sub
xchg
cmp
sahf
fcompl
jecxz
xchg
push
pop
sar
call
inc
adcb
mov
mov
scas
dec
js
int
mov
xor
cmp
test
mov
jne
jl
sahf
in
test
clc
dec
fbstp
push
in
mov
inc
pusha
lock
outsb
push
fistl
loopne
subb
xchg
xlat
inc
mov
push
fimuls
cli
std
adc
cmpb
push
lds
inc
sbb
lock
jp
jg
ljmp
xorb
int3
lahf
outsl
jge
xchg
or
dec
pop
jnp
nop
cmp
repz
jecxz
call
pop
scas
ljmp
sbb
loope
jp
xor
xchg
cltd
out
adc
mov
rcr
arpl
xor
cli
je
fbstp
xchg
and
call
movsl
fdivp
push
or
popf
sbb
fsub
shll
daa
sti
loopne
mov
lods
sti
xchg
or
pusha
nop
adc
fidivs
jae
jg
outsb
push
push
add
inc
cmp
xor
push
or
scas
sub
inc
mov
xor
xchg
push
xchg
lods
or
les
xchg
pushf
dec
mov
into
pop
ljmp
or
add
loope
fs
push
insb
sbb
mov
xchg
xchg
test
out
test
push
cld
ja
subl
imul
popf
fwait
insb
insb
loopne
jae
lcall
ljmp
popf
push
imul
xchg
xchg
decl
outsl
cmp
outsl
pop
sbb
inc
jo
inc
filds
scas
movsb
inc
lock
out
les
or
loope
xchg
dec
inc
sub
push
jmp
or
xor
out
push
test
loope
scas
cs
xchg
pop
sub
xchg
lods
mov
sbb
and
lods
jl
jle
out
clc
call
xchg
add
push
es
cltd
sub
sbb
mov
xchg
in
mov
sbb
aas
sub
mov
jbe
mulb
das
int3
mov
pusha
scas
or
idiv
call
enter
outsb
inc
add
sub
ss
cmp
xchg
mov
adc
mov
nop
sub
push
les
cld
call
inc
iret
xchg
or
loopne
loopne
jg
lcall
push
cli
sub
sbb
add
jne
mov
jne
add
call
aas
push
sbb
insl
mov
inc
add
jae
loope
je
pop
addr16
cmpsl
popf
sub
lods
add
call
scas
adc
inc
das
cmc
iret
dec
xchg
rclb
cmpsl
scas
daa
sub
pop
cld
fistps
pop
scas
jbe
pop
pop
inc
sar
or
xor
lcall
inc
mov
jp
lods
push
jae
test
xchg
jle
xor
out
std
shl
je
decl
shrl
adc
imul
jecxz
or
xor
mov
jmp
stos
js
pop
push
adc
sbb
xchg
adc
outsb
ds
push
jl
test
xchg
insl
push
nop
jne
xlat
nop
call
sub
sub
push
in
loope
mov
or
popa
jg
jle
outsb
nop
scas
sti
mull
fwait
decl
sbb
out
dec
idivl
out
js
jno
int3
fisubs
or
and
stos
in
jg
clc
and
mov
adc
pop
clc
xchg
push
mov
cmpsb
pop
mov
inc
pop
dec
lahf
cmp
fwait
jmp
mov
stos
cmc
push
shrl
scas
xchg
outsl
rcrl
rclb
test
cmpsb
sbb
xchg
test
push
icebp
loopne
mov
scas
fists
bound
xor
shrl
loope
addr16
or
or
mov
cli
daa
mov
add
mov
popa
call
loopne
xchg
jb
gs
popf
shrl
adc
pop
outsb
mov
les
dec
fiadds
add
mov
jns
sbbb
dec
in
daa
xchg
lods
ljmp
out
jl
jle
jae
sub
push
pop
inc
inc
cmc
and
lds
roll
xlat
call
out
or
rcr
jnp
inc
xchg
lea
xchg
lahf
mov
fwait
jge
pushl
push
add
cmp
jmp
sahf
inc
mov
ret
xchg
nop
in
int3
outsl
data16
incl
adc
fcompl
movsl
enter
fs
outsl
orb
sub
sub
arpl
daa
js
xor
ficoml
fistpll
inc
scas
push
push
and
fadds
inc
incl
sbb
stc
fcoms
inc
push
jne
jmp
ror
push
dec
je
mov
popa
adc
cs
pushl
sbb
shll
data16
fcomi
mov
sbb
xchg
cli
fcomps
sbb
push
dec
cwtl
sahf
sub
in
mov
or
xchg
xor
cmp
or
pushl
xchg
or
lret
adc
inc
and
repnz
xor
mov
mov
mov
faddl
push
sbb
cmp
int3
rorl
test
push
adc
pushl
push
mov
outsb
jb
stos
dec
pop
jl
jae
cld
add
outsb
js
push
hlt
incl
pushf
push
std
sub
push
push
pushl
push
sub
xor
fistps
pop
jo
mov
xchg
mov
outsl
mov
movsl
dec
sub
clc
mov
fcomip
je
sub
pop
lea
cmp
push
cmp
clc
out
mov
sub
or
repnz
mov
lahf
ja
in
out
ja
scas
ret
ljmp
insb
push
repnz
lods
test
add
sti
sbb
mov
xchg
imul
sub
xchg
xchg
mov
cld
dec
cld
mov
inc
addb
sbb
rorl
shrb
ljmp
pushf
mov
lret
sub
mov
test
dec
add
adc
cmp
xchg
sub
xorb
nop
gs
or
das
rorb
cmp
cmp
xor
mov
outsl
jb
ret
pop
repz
lea
stos
sahf
fbld
ret
add
adc
aad
imul
and
pop
incl
std
sbb
test
rcrl
lods
scas
loopne
mov
repz
and
xor
hlt
and
adc
fwait
movsb
test
pop
in
push
cwtl
gs
imul
jg
mov
mov
xchg
sub
push
or
leave
sbbl
incl
adc
sub
ljmp
xchg
lock
test
inc
pop
mov
fdivr
int
ljmp
cmp
mov
int
xchg
sub
ret
pushf
fildl
mov
pop
ret
dec
mov
adc
push
mov
xchg
push
mov
int
test
out
cli
mov
pop
push
pop
mov
test
clc
ja
pushl
fcomp
rcll
in
fcmovb
hlt
in
adc
lahf
xchg
cmpsl
adc
pop
lods
push
dec
clc
das
lcall
xor
stos
out
or
or
xchg
rcl
mov
movsl
cwtl
je
push
fcos
mov
mov
std
dec
in
sub
scas
xor
lahf
sbb
test
adc
das
stos
jne
or
movsb
loopne
add
jl
cltd
test
enter
cmpsb
cli
into
mov
dec
mov
mov
mov
jne
lcall
jb
rcll
jbe
lods
test
sub
call
rcr
outsl
pop
sbbl
cltd
nop
lods
test
jns
adc
pop
jg
xor
xchg
cld
inc
mov
push
pop
mov
xchg
fstpt
test
mov
ret
adc
scas
js
mov
sub
sti
int
and
jns
fstpl
inc
cmp
mov
sub
les
lods
repnz
xor
jl
cmc
push
xchg
pushl
jmp
and
add
out
inc
sarl
sbb
push
dec
insb
mov
js
mov
fwait
inc
lods
movsl
insl
pop
ret
mov
push
fidivl
xor
daa
aaa
imul
xlat
or
push
aam
push
mov
mov
pop
lock
js
inc
dec
mov
sub
jae
cld
pop
das
scas
jmp
jp
frstor
mov
push
push
sub
jge
xchg
movnti
xor
cmpsb
pushl
test
mov
jle
xor
mov
or
xchg
hlt
outsb
loopne
adcb
into
jmp
ret
pop
lcall
lcall
xor
pop
adc
movsb
popf
cmp
scas
xchg
adc
sbb
pushf
outsb
cmp
rorb
mov
pop
jo
cmc
adc
aam
pop
lock
ljmp
sbb
out
scas
test
push
or
inc
test
call
mov
push
call
test
and
aad
lret
push
cmpb
push
js
push
ljmp
jl
push
push
leave
cltd
push
ljmp
arpl
jmp
dec
jbe
xchg
add
push
sbb
sub
fxtract
jae
movsb
dec
ja
cmp
das
daa
pop
hlt
jne
mov
rcll
in
adc
mov
lcall
rorb
out
add
dec
pusha
mov
call
mov
stos
mov
je
dec
xchg
pop
test
jnp
aas
scas
scas
cmp
mov
cltd
ljmp
xchg
decl
js
icebp
and
pop
fsubrp
xchg
adc
and
les
xlat
pop
inc
or
sbb
lahf
adc
cli
decl
loopne
daa
fdivl
aad
rorl
xor
mov
mov
jl
fsubrs
or
rclb
in
pushf
or
xchg
in
mov
dec
outsl
mov
jmp
adc
fcomps
bnd
jle
xchg
call
adc
ror
and
mov
pop
mov
sbb
mov
jmp
and
dec
sbb
outsb
roll
and
fbstp
mov
sub
sarl
mov
out
cli
pushl
rcl
insb
aad
and
cltd
lret
ds
stos
cmc
pusha
and
sbb
mov
pushl
clc
and
les
cwtl
stos
in
jne
dec
xchg
push
push
outsb
mov
cld
sar
ljmp
in
sub
lret
repz
popa
adc
fsubrs
xlat
inc
mov
call
lret
iret
mov
adc
lret
outsl
aas
and
mov
dec
outsl
jae
sub
clc
ljmp
shrb
push
inc
mov
mov
push
inc
adc
fsubp
push
out
push
aaa
in
ljmp
jmp
cmc
mov
pop
lods
lret
dec
pop
push
xor
das
outsl
incl
mov
idivl
sbb
ret
mov
sub
and
pop
lcall
jl
xchg
sahf
add
inc
adc
mov
xchg
pop
sub
leave
adc
adc
lods
mov
xchg
hlt
aaa
pop
xchg
fstl
pushf
sahf
mov
loope
dec
call
pusha
sub
add
scas
lods
call
lock
outsl
or
sub
sub
sbb
ljmp
repnz
dec
sbb
xchg
out
stos
mov
jmp
push
pop
rcll
dec
testb
fwait
addl
xchg
push
cwtl
push
ror
leave
cmp
push
adc
xor
sbb
pop
je
sbbb
adc
pop
pop
push
in
adc
xchg
ja
aas
inc
and
fcompl
movsb
push
stc
lret
cmpsb
pop
iret
fs
push
sbb
call
out
cmpsb
aad
scas
psubw
push
je
in
jg
adc
push
stos
pop
jne
cmp
loop
lcall
jecxz
out
test
xchg
xchg
stc
call
mov
jl
rcll
ds
pop
icebp
decl
gs
arpl
push
in
cmc
jle
sbb
aad
in
lcall
cmc
lods
and
imul
pop
mov
jg
addl
mov
xchg
cwtl
outsb
jg
in
enter
out
outsl
push
pop
mov
mov
subl
outsb
stos
iret
in
lods
call
add
inc
aam
inc
mov
inc
js
pushf
mov
rcrb
dec
xchg
push
sub
fwait
add
pushl
std
test
call
sub
shl
movsl
pop
xchg
add
es
ljmp
jmp
rorl
ljmp
jl
pop
popf
inc
push
sbb
mov
inc
push
cld
rclb
sub
outsb
pop
lcall
cld
js
jne
mov
cmp
push
xchg
xor
incl
cmp
xor
test
pop
jbe
cmc
js
add
mov
push
out
cmp
jae
sub
mov
jbe
out
call
divl
lock
mulb
insl
shll
and
cmp
sar
inc
mulb
sub
mov
sti
fisttpll
aas
nop
xchg
pop
jnp
xchg
add
pop
icebp
pushf
jl
icebp
fdivrp
js
mov
test
mov
jmp
dec
push
dec
mov
lret
jl
addr16
push
or
arpl
rcrl
fs
jo
jp
mov
xor
incl
insl
in
loopne
jp
mov
adc
std
lea
repnz
mov
cmp
mov
repnz
add
enter
xor
lret
pop
inc
ficoml
iret
mov
pusha
shrl
ror
das
mov
push
push
cmpsb
jmp
sbb
xlat
ret
jno
jecxz
pop
int3
push
sub
pop
push
std
loopne
test
xchg
mov
xor
xchg
push
call
and
out
push
or
rcl
pushl
jno
add
incl
sarb
cld
mov
sub
sbb
incl
jp
jne
jp
push
es
or
adc
mov
mov
and
and
add
xchg
dec
out
test
mov
sbb
incl
in
fldt
nop
lock
push
outsb
push
out
cmc
xchg
pop
push
sbb
add
test
aas
outsb
lret
inc
cmp
stc
daa
sbb
xchg
or
or
jp
push
roll
outsb
xor
and
hlt
mov
pushl
std
push
shl
xchg
mov
into
enter
mov
mov
jl
push
mov
cli
push
daa
scas
dec
mov
mov
ret
mov
sbb
sub
js
push
jo
push
stc
mov
call
fistps
adc
lods
cmp
xchg
in
mov
pop
xchg
xchg
pushf
lcall
pushl
inc
adc
jae
cld
add
into
mov
mov
pop
test
lret
adc
jmp
adc
mov
out
mov
pushf
dec
jp
clc
ljmp
inc
xor
or
call
repnz
sbb
add
out
mov
pop
shl
jg
pop
push
iret
or
mov
rdpmc
fsubrp
push
stos
sub
jg
or
sar
adc
fldlg2
repnz
pop
dec
stos
push
pushl
pop
cmpsl
dec
cltd
xor
nop
jnp
inc
pop
popa
xchg
xor
mov
aaa
xor
mov
orl
mov
push
push
sar
pop
out
outsb
jo
in
jae
or
mov
cli
aad
insb
jl
daa
scas
pushf
daa
mov
pop
push
cmp
imul
fisubs
mov
push
adc
decl
rorl
jns
loopne,pt
repnz
aas
jno
imull
enter
cmp
sti
je
mov
jmp
insb
pop
int3
stc
js
fisttps
xchg
lods
and
iret
negl
jnp
test
xchg
fsubrs
leave
jl
fistpl
outsl
push
pop
mov
cmp
lea
out
data16
fbld
fisubrl
sub
pop
mov
cld
out
jne
push
clc
xor
jmp
xor
push
add
jg
in
clc
jl
and
or
mulb
pop
shr
pop
shll
xor
add
add
adc
popf
jle
ss
jne
mov
test
fisubrl
imul
xchg
mov
xor
mov
mov
and
fisubl
int
idiv
shll
ljmp
jmp
xor
rorl
insl
nop
mov
xor
addr16
jne
sub
popa
stos
imul
in
sub
and
or
or
push
int
lock
lods
in
mov
add
cmp
mov
pop
mov
jnp
mov
iret
cmc
mov
mov
pop
push
xchg
pop
inc
call
cmp
addr16
and
std
jnp
loopnew
lods
add
push
or
test
jmp
movsl
xchg
pop
cwtl
stc
and
sti
int3
dec
mov
sub
dec
out
push
repnz
invd
and
mov
and
es
arpl
xor
je
popf
in
jo
mov
call
sbb
mov
adc
mov
ljmp
jmp
cmc
jle
or
je
pushl
adc
pop
add
aas
sub
cmp
mov
xor
xlat
dec
je,pn
repz
mov
push
les
pop
negl
out
mov
lods
fbstp
out
xor
adc
fwait
xchg
pop
movsb
inc
cmpsb
push
into
iret
and
push
cs
xchg
mov
hlt
jl
mov
lcall
sbb
leave
cmpsl
dec
ret
jge
xor
in
mov
pop
roll
and
icebp
fidivl
data16
push
fisubl
lods
ret
call
insl
adc
xchg
mov
mov
or
pop
test
xor
push
std
dec
xor
mov
clc
mov
clc
mov
inc
sub
clc
mov
jmp
jg
xorb
test
in
je
sahf
fcoml
mov
subl
inc
push
pop
movsb
sub
or
jmp
lock
lcall
and
out
test
and
add
push
xor
or
rolb
ljmp
lea
mov
sti
cmp
imul
xchg
mov
dec
jbe
ret
std
jg
cmp
sahf
maskmovq
push
jp
inc
lock
jecxz
nop
sahf
inc
cmp
leave
pop
mov
lcall
fwait
inc
mov
ss
cltd
movsb
jmp
sarl
cmp
icebp
ljmp
loopne
jb
xor
inc
es
int
pop
mov
add
stc
pop
inc
fcompl
jmp
data16
cmpsb
xchg
xchg
scas
sbb
jno
fidivl
leave
pop
push
aas
dec
mov
ror
lcall
out
cmpsb
stos
stos
lods
divb
mov
in
in
mov
cltd
ljmp
pusha
adc
fwait
outsb
or
aaa
jne
stc
mov
dec
std
scas
jne
mull
cld
leave
test
negl
sbb
xor
call
aam
xor
fdivl
mov
sbb
mov
inc
cltd
cmpsb
daa
jmp
call
adc
push
sbb
sbb
adc
fnsave
jl
clc
mov
scas
jl
push
sub
sbb
mov
mov
xor
jmp
jg
sbb
pop
jne
push
mov
sahf
and
shr
xlat
pop
je
xlat
mov
ss
ds
ja
adcb
and
test
cmc
or
fistpll
int3
xchg
sub
lods
lock
cmpsb
dec
and
mov
ljmp
ret
xchg
push
leave
sbb
jle
inc
pop
xlat
adc
inc
mov
aaa
int3
mov
mov
xchg
pop
push
sub
xchg
xor
cld
data16
cs
dec
push
js
cwtl
sub
test
ljmp
xor
xchg
imulb
xchg
stc
data16
cmp
xchg
aas
jo
xor
jecxz
mov
cmp
aam
sbb
mov
cmpsb
inc
mov
subl
push
loopne
call
imul
dec
daa
push
icebp
push
dec
dec
or
sbb
imul
mov
ja
outsb
insb
sub
mov
push
insl
jae
out
dec
cmp
sbb
sub
lret
jb
xchg
cmp
cwtl
es
cld
out
sub
jae
sub
xor
insb
in
test
aad
xor
out
aam
dec
cld
pushl
xchg
sub
hlt
and
fsubl
or
pop
dec
pop
test
aas
dec
add
in
idiv
pushl
leave
mov
adc
test
cmpsb
inc
lret
xor
scas
jg
incl
push
inc
test
sbb
sub
test
cmpsb
mov
add
jmp
aam
fisttpl
aam
out
and
lods
je
sahf
mov
aad
jg
inc
lret
or
jno
and
or
and
cld
pop
pop
cmpsl
test
cs
cmp
rcll
cs
aad
leave
dec
mov
jns
push
test
xchg
add
jb
aad
divl
jg
mov
push
jae
mov
add
hlt
jecxz
out
out
imul
rcrb
jae
stos
incl
aad
xchg
mov
or
mov
inc
jle
pop
sub
fucomip
sub
hlt
jmp
repz
aad
or
pushl
and
mov
lahf
shlb
and
shll
ds
push
call
aam
in
scas
jl
jo
shr
sub
cwtl
lock
repz
inc
shrb
lcall
jmp
repnz
cmp
ds
mov
rcr
xchg
stos
adc
aad
decl
insl
int
jbe
xchg
dec
js
aaa
cmpsb
imul
mov
cmp
inc
repz
cmc
push
movsb
add
insb
insb
mov
stos
rol
adc
js
pop
inc
inc
dec
adc
aam
loope
shrb
repz
call
dec
movsl
adc
imul
shl
repnz
push
shrl
xor
cmpsb
add
pushl
dec
and
leave
dec
mov
cmp
cmp
lret
push
jmp
or
call
out
lret
add
shll
mov
jnp
xchg
lds
mov
mov
lret
ror
xor
push
inc
and
jae
lcall
sbb
add
or
sbb
loopne
and
add
ljmp
pop
js
mov
and
out
adc
mov
fsubr
or
jp
adc
lods
fnstenv
xchg
dec
or
jmp
jne
pop
sahf
pop
mov
lret
xchg
jnp
and
loop
sub
cmc
mov
ljmp
mov
cmp
es
push
cmp
rcrl
stos
dec
cmp
shrb
pop
push
insb
dec
jmp
ds
mov
ljmp
cmp
into
and
repz
cmp
mov
jmp
pop
inc
int
cwtl
loope
out
push
clc
jecxz
sub
mov
push
cmpsb
in
mov
popf
and
pushl
ror
outsl
fcmovnbe
mov
data16
hlt
mov
lock
and
lret
call
ljmp
push
or
dec
aaa
adc
xor
pop
in
xor
and
rcl
cmp
fcomip
call
jne
rcrl
inc
dec
hlt
mov
loope
aam
adc
jp
fcomip
decl
pop
ja
mov
add
pop
pop
xchg
mov
ljmp
pushl
jbe
call
or
xor
push
jae
enter
cmp
repz
sbb
jno
icebp
std
lea
fisubrs
jmp
mov
inc
xchg
push
push
je
dec
imul
fs
and
xchg
test
dec
pop
adc
jmp
mov
pushf
imul
decl
xchg
cmc
dec
out
xchg
mov
xchg
cmc
imul
lret
test
push
add
in
fildll
aad
or
test
inc
push
jle
rclb
cli
nop
popf
scas
hlt
pop
pushf
pop
inc
lds
stc
dec
fisubl
xor
in
inc
out
inc
jmp
je
push
lods
push
push
into
fwait
xlat
leave
ds
inc
mov
sub
nop
push
lcall
lcall
test
int
cmp
sub
lock
push
and
sub
pop
decl
les
pop
and
pop
sub
enter
jge
cmc
repz
data16
dec
int
leave
es
decl
mov
inc
xchg
mov
push
adc
jae,pt
mov
push
sbb
xor
cli
cmp
adc
mov
call
imul
pop
mov
or
xchg
into
mov
lds
push
pop
rolb
addb
stos
movsl
shrb
decl
pop
in
push
mov
lods
js
push
inc
loop
in
xchg
mov
fdivs
mov
outsb
mov
dec
movb
dec
inc
mov
stos
ds
or
rclb
rol
push
lods
cmp
inc
mov
aas
lods
cmp
xchg
sub
xor
inc
push
scas
inc
inc
dec
xchg
ret
stos
test
jg
mov
mov
xchg
pop
out
filds
leave
cmp
aaa
repz
inc
test
incl
jbe
int
adc
cmc
mov
aad
jnp
loope
inc
frstor
out
addr16
mov
inc
and
lcall
dec
lcall
pop
mov
dec
pop
jne
cmpsl
add
or
fdivr
inc
fidivs
and
cld
mov
mov
data16
push
fucomp
jno
inc
dec
lock
sub
dec
arpl
call
jbe
icebp
fisttpl
jecxz
and
fmuls
pop
mov
adc
incl
cltd
sahf
mov
mov
add
fnsave
into
cs
outsl
les
add
ficoms
cmpsb
ljmp
jg
mov
mov
xor
push
cmp
dec
ljmp
and
popf
and
inc
jno
outsb
inc
in
push
pushf
cmp
mov
mov
sbb
sbb
icebp
stos
sti
add
stos
pop
or
mov
or
out
push
outsl
mov
jno
ja
decl
aad
test
jb
and
and
push
call
fcos
mov
sub
xchg
incl
xor
mov
inc
loopne
push
jo
dec
pop
shll
pushl
pop
xchg
repz
cmp
cmpsl
imul
in
jo
jo
jno
in
punpcklwd
mov
outsl
xchg
mov
sbb
jg
jbe
cmc
xor
jne
das
cmp
out
int3
cmp
inc
cmc
addps
popf
fwait
or
ds
or
mov
pop
rcrl
and
iret
out
inc
rcrl
cmp
adc
cmc
cmc
addb
sub
add
imul
and
inc
dec
sar
decl
mov
pushf
dec
push
xchg
dec
mov
xchg
roll
dec
shlb
sub
fldcw
addr16
adc
jno
mov
pop
loop
push
nop
cmc
push
adc
dec
ret
push
repz
push
xor
iret
jmp
pop
outsl
mov
push
xchg
cwtl
adc
dec
jno
dec
int3
mov
adc
jl
mov
dec
aaa
jmp
in
divl
jp,pn
adcb
push
iret
dec
in
jmp
mov
mov
mov
hlt
rclb
mov
push
or
clc
mov
push
dec
addr16
dec
dec
push
mov
inc
cmp
lods
inc
cmp
insl
pushl
pop
fbstp
mov
jae
mov
mov
dec
fwait
ljmp
scas
mov
sub
daa
inc
dec
ds
push
dec
repz
aam
mov
flds
xchg
mov
xor
out
insl
enter
dec
jae
xchg
scas
jg
lcall
aam
push
cmp
int3
int3
stc
test
ljmp
ljmp
sub
mov
jae
scas
fiaddl
out
roll
insl
dec
in
outsb
dec
mov
jg
mov
jecxz
mov
aaa
insb
xchg
jl
inc
or
push
paddusb
incl
lods
mov
adc
and
aam
jno
jp
cmp
or
lock
fnstenv
bnd
lods
rcll
jg
mov
cmp
cmpsl
int
inc
shrl
jnp
scas
fdivrp
push
jle
jg
inc
pop
cli
sub
mov
adc
add
int
rol
cmp
out
out
clc
decl
mov
ss
orw
jmp
nop
adc
jo
out
cmp
xor
adc
and
int
jb
cmp
mov
into
hlt
jg
dec
int3
jmp
je
hlt
jmp
loope
and
cmp
lods
scas
repz
adc
push
ret
add
cltd
mov
out
clc
daa
shrl
push
iret
and
imul
test
imul
decl
lea
jle
fs
mov
pop
into
addr16
mov
out
xchg
push
xlat
pop
int
int
dec
cld
aad
insb
movsl
repnz
int3
add
mov
ljmp
adc
dec
and
mov
xchg
mov
sub
call
call
mov
xchg
popf
inc
mov
inc
movsl
shr
push
mov
jle
rcrb
aaa
push
nop
pop
sarl
mov
mov
leave
push
nop
adc
jno
mov
push
shll
cmp
adc
add
movsb
or
adc
mov
fstps
decl
dec
jbe
cs
jge
and
and
inc
lock
add
push
rclb
incl
shr
jge
je
daa
push
xor
or
in
add
shl
fwait
xor
out
and
mov
sahf
frstor
jnp
out
fsubs
cld
movsb
push
lcall
es
mov
inc
sarb
fadd
xor
icebp
mov
dec
ja
test
dec
cmpsl
mov
decl
jl
xor
sbb
dec
pop
insb
ffreep
xchg
shlb
std
cld
xor
incl
lahf
addl
lock
xchg
mov
cs
mov
inc
or
call
lcall
ljmp
pop
adc
jp
divl
imul
jge
mov
jbe
dec
call
push
enter
and
mov
add
daa
inc
cmp
incl
loop
cld
int
sbbb
outsb
sub
mov
mov
lcall
dec
mov
xchg
jmp
xchg
jg
mov
mov
mov
lahf
cld
jmp
pop
das
enter
adc
xor
xchg
sub
loope
in
inc
push
sti
in
repnz
pusha
jo
mov
jb
cld
loope
push
cld
lods
xor
shrb
fstpt
mov
mov
outsl
push
ret
je
mov
push
scas
imul
jnp
inc
ja
mov
mov
paddusw
adc
iret
or
jmp
test
add
lret
test
in
xchg
mov
test
out
in
inc
fiaddl
ret
add
push
push
sysret
mov
add
push
pop
adc
ret
js
std
jmp
mov
mov
xchg
mov
rorl
dec
mov
fists
ljmp
jns
adc
mov
cld
xchg
into
sub
push
fadds
mov
add
jg
push
jle
repnz
insb
into
icebp
ret
adcl
leave
int
aas
or
mov
ljmp
cli
std
es
pop
out
fisttpl
stc
jp
push
and
and
mov
dec
incl
cs
xchg
mov
add
mov
push
dec
or
cmc
out
jne
add
insb
in
fdiv
sbb
fistl
fbstp
decl
push
push
int
dec
ljmp
adc
mov
cld
jbe
mov
xchg
jle
decl
push
inc
mov
mov
es
dec
xor
add
sub
rcrl
mov
mov
lcall
mov
xchg
push
pop
pushl
enter
icebp
dec
imul
int3
xchg
xchg
ret
mov
je
lcall
xor
in
out
divb
int
gs
sub
xchg
mov
inc
or
pushl
pop
inc
rorl
int
ljmp
out
daa
jecxz
adc
sub
loop
add
in
jne
pop
push
sbb
imul
das
adc
addr16
mov
sub
mov
inc
aas
adc
std
aas
inc
xor
xchg
push
add
decl
ljmp
lock
rcr
push
out
xchg
addl
push
addb
jle
mov
jno
jmp
aam
hlt
fistpl
mov
mov
mov
popf
or
movsb
xchg
cmp
mov
pop
jmp
adc
les
out
add
adc
push
loopne
adc
hlt
push
sahf
adc
int
pushl
mov
dec
jle
cwtl
subb
in
sub
test
fwait
xlat
lds
xchg
jmp
iret
ja
pop
sub
xor
push
mov
jecxz
push
xor
or
lcall
mov
and
movsb
mov
inc
test
and
daa
or
decl
add
mov
popf
test
jns
je
in
or
lcall
out
mov
or
or
add
inc
lcall
mov
cmp
mov
mov
fdivl
pop
je
cmp
fdivrs
mov
jl
push
dec
subb
sbb
bound
or
and
ljmp
sahf
lods
pop
outsl
pushf
xor
pop
lds
lods
or
sub
test
lcall
or
pushl
or
lods
fwait
stos
pop
int
dec
push
in
mov
jb
js
scas
fs
add
mov
dec
clc
pushl
sbb
push
outsl
repz
inc
cwtl
pushf
or
jne
dec
mov
negb
cmp
es
sbb
push
stc
xchg
dec
int
les
push
adc
inc
sbb
clc
lea
mov
push
pushf
in
incl
xor
xchg
sub
mov
xor
xchg
mov
js
hlt
mov
dec
xchg
fistps
jo
nop
fs
jecxz
stos
mov
push
xchg
jb
hlt
stos
cmpsb
mov
cmc
js
or
xor
lock
stos
int
xor
subl
pushl
mov
es
stc
push
repnz
dec
in
cmp
sbb
xchg
xor
sti
lcall
test
popa
out
mov
cli
outsb
mov
lock
call
test
call
sbb
or
pop
lea
mov
xor
fcoml
sti
shrl
jno
outsb
xchg
xchg
xchg
fimuls
and
mov
dec
notl
outsb
mov
faddl
mov
call
out
in
cvtps2pd
rorb
aad
decl
rcll
bound
jo
xor
ds
neg
mov
repz
ljmp
xchg
ds
jns
incl
xor
xor
sub
lcall
stos
mov
lret
scas
shr
ljmp
jnp
iret
push
push
dec
jl
cmpsl
insl
jbe
jo
shr
cwtl
call
xlat
jmp
mov
pop
mov
out
lock
cmpsl
dec
int3
movl
mov
pop
xor
pop
fildll
cmp
mov
jae
push
mov
int
stos
orb
call
cld
pop
cmpsb
or
out
pop
xchg
test
movsb
sub
inc
or
sbbl
mov
sub
pop
stos
add
lods
sbb
and
test
imul
mov
in
inc
xchg
jns
popf
or
scas
fucomi
aaa
jge
mov
or
mov
pop
call
mov
mov
dec
and
inc
mov
xor
cmp
mov
jbe
sub
fbld
push
mov
imul
outsl
lods
mov
jnp
mov
clc
leave
xchg
cmpsl
leave
sarl
clc
ljmp
cmp
cwtl
fadds
into
andb
mov
sub
jmp
push
cmc
jp
push
jbe
xor
mov
jno
dec
pop
cld
dec
jmp
mov
add
mov
adc
push
inc
out
inc
jns
adc
push
mov
ja
jb
fwait
call
in
scas
cmpsl
cli
test
pop
pop
popf
ds
pop
mov
pop
test
fs
mov
loope
lahf
fldenv
ret
mov
pop
test
xor
pop
insb
aaa
sbb
imul
test
dec
dec
mov
sbb
push
std
jmp
xchg
xchg
mov
loopne
jmp
xor
xor
inc
mov
insb
jae
mov
add
leave
cmp
popf
cli
rcrb
and
jne
mov
decl
out
dec
cmp
cmp
add
jle
int
out
push
mov
mov
adcb
jns
jae
outsb
mov
xchg
or
data16
add
decl
dec
xchg
mov
xadd
int3
push
xchg
pushf
faddp
dec
out
or
jmp
movsb
add
adc
jb
jns
inc
mov
xchg
add
sbb
pop
inc
mov
or
xor
dec
insl
mov
roll
xor
call
dec
lds
pop
movsl
jg
and
xchg
inc
mov
sbb
lcall
loop
ret
cmp
xchg
pop
push
inc
popf
imul
lcall
push
xchg
mov
xchg
or
inc
inc
sub
push
fdivr
aam
push
xor
incl
in
out
negb
fs
pusha
adc
incb
cwtl
jno
lds
cmp
fistps
adc
int
popf
loope
dec
and
lods
test
cli
pop
dec
fimuls
incl
fiadds
sub
mov
movsb
es
push
sti
and
aad
mov
lcall
lcall
les
repz
insl
pop
clc
dec
faddl
push
push
shll
or
fldt
clc
xor
pop
shrl
fwait
scas
int3
dec
xchg
int3
lods
lcall
lahf
fcompl
clc
pushf
jb
fistpll
adc
xchg
ret
push
fnsave
pushl
inc
pop
sub
mov
fcomip
and
push
mov
jg
por
cmp
repnz
cmp
aas
fildll
repnz
mov
ja
incl
shlb
push
pop
nop
adc
jnp
push
cmp
aaa
daa
jnp
int
pop
dec
shll
pushl
out
inc
mov
inc
add
cmp
push
pusha
push
jb
push
lcall
pop
cmp
xchg
pop
push
aaa
mov
int
lock
cwtl
sub
pop
lcall
xchg
xlat
iret
call
jnp
dec
movsb
push
iret
sub
jne
sub
adc
lock
pop
scas
nop
out
mov
or
xor
int3
pop
stos
scas
xchg
push
or
jns
xor
leave
jae
xlat
lods
gs
fcoms
dec
std
pop
xchg
dec
inc
cmp
mov
pop
inc
jne
xor
int3
gs
xor
scas
lahf
or
push
mov
cmp
stos
leave
incl
push
xor
lods
sti
ret
mov
jne
icebp
in
popf
repz
cmc
and
dec
or
or
mov
cmp
push
repnz
push
scas
fsubrl
jg
call
mov
dec
cltd
dec
pop
scas
dec
test
incl
cmpsb
dec
mov
ljmp
or
xlat
sbb
sbb
jnp
in
mov
sbb
scas
sbb
loop
dec
mov
js
dec
xchg
les
sbb
cwtl
stos
pop
jne
cltd
cmp
or
ljmp
cmp
dec
outsl
rcl
mov
or
sub
imul
pop
scas
push
pushl
xor
mov
and
xor
and
les
out
pushf
nop
outsl
leave
in
mov
cmp
adc
xchg
pop
push
add
cmp
cmpsb
mov
movsb
cmp
jns
xor
decl
pop
movsb
jo
pop
movsb
push
cmp
or
enter
lea
in
es
ljmp
lds
xor
jecxz
arpl
ljmp
lods
mov
sti
and
adc
xor
mov
jmp
push
ret
in
les
add
xor
fstpt
cmp
out
inc
into
mov
add
xchg
push
pop
jbe
dec
xor
jg
lods
sar
cmp
out
ja
repnz
xor
frstor
xor
aaa
in
rcr
movsl
rorb
js
inc
in
lcall
or
cwtl
jmp
xor
inc
jge
inc
rorl
push
mov
mov
fldt
ds
pop
cmpsb
push
push
ss
movsb
inc
movsb
sub
faddl
das
test
nop
push
jmp
in
jae
cmp
popf
movsl
sbb
pop
imul
sti
ljmp
movsb
cmc
jmp
lcall
outsb
ds
jne
lods
dec
call
jne
dec
mov
sar
mov
mov
mov
or
push
mov
rcl
cmpsb
jns
ljmp
call
inc
fnstenv
mov
insb
xchg
add
rolb
fwait
mov
aaa
jne
and
clc
jg
movsb
pusha
jo
mov
mov
mov
mov
jb
and
sar
ljmp
mov
test
das
xchg
jmp
sbb
stos
inc
cld
cld
mov
cld
jg
leave
std
aas
cmc
aad
push
in
xchg
int
mov
add
fcos
decl
shrl
fadds
loopne
add
mov
call
mov
cmp
or
sbb
lea
mov
fs
clc
or
xor
push
pop
push
mov
or
cmp
ljmp
aas
jno
jae
rsqrtps
dec
inc
leave
fcmovb
out
mov
call
lcall
or
push
in
fucom
dec
add
or
mov
movsl
mov
ds
xchg
mov
mov
jg
repnz
pop
push
std
aaa
mov
xchg
fs
mov
push
xchg
jp
pop
pop
mov
pushf
int
lods
push
dec
rcrb
mov
mov
rorb
sub
call
imul
cmp
jmp
sub
xor
xor
dec
dec
clc
scas
jg
idiv
push
int3
cmp
rclb
or
sub
xlat
incl
push
aas
ljmp
stc
xor
in
mov
cmpsb
cmp
shll
adc
fs
mov
cmp
call
cmp
inc
mov
cs
cmpb
shll
xchg
inc
xchg
sub
lea
mov
pop
icebp
pop
hlt
push
jo
push
dec
jbe
xor
call
mov
jmp
xchg
adc
xchg
call
sahf
aaa
mov
cmp
jo
movsb
data16
inc
in
jb
imul
decl
push
xchg
fwait
das
xor
xor
fs
div
call
push
xor
and
add
test
jg
test
sub
push
jae
mov
jmp
fsubrp
out
cwtl
clc
adc
adc
mov
repz
ret
mov
jle
jo
int
orb
push
movq
int
jo
fldt
dec
js
pop
cmp
mov
pop
xchg
dec
scas
inc
jg
mov
push
push
xor
mov
shrl
pop
loopne
jnp
lods
dec
adc
jnp
pop
fs
int
adc
aad
or
es
lcall
fisttpl
in
push
js
hlt
sub
mov
iret
sub
and
test
lock
xor
fnstcw
mov
stos
adc
lahf
imul
aam
pop
adc
inc
mov
icebp
ljmp
cmp
stos
fcmovnu
insl
les
mov
andb
add
cmp
out
mov
fldt
pop
adc
push
jo
test
repz
mov
add
inc
jge
adc
in
xor
lock
jae
pushl
std
sub
out
mov
mov
jo
into
test
mov
mov
push
adc
lcall
rorb
stos
inc
cs
dec
or
adc
in
mov
lds
sbb
addr16
jg
ljmp
lret
in
adc
inc
mov
pop
rcl
pop
fsubrs
ja
clc
dec
mov
inc
in
xchg
inc
sbb
xor
mov
out
lret
dec
jmp
lods
out
push
pusha
hlt
pop
cmp
add
jae
ss
jnp
inc
and
jg
push
fisubl
mov
fists
mov
xor
mov
aas
mov
arpl
jmp
inc
mov
cmpb
mov
mov
jecxz
lea
jmp
iret
call
ljmp
cmp
mov
scas
fildl
jb
mov
jb
pushf
adc
decl
imul
cli
inc
lds
nop
adc
jp
jne
shrl
inc
add
dec
incl
out
mov
loope
test
gs
sbb
lds
xor
mov
call
adc
aad
repz
dec
pop
cmp
push
stos
in
cmp
ljmp
mov
aam
push
mov
movsl
jae
insl
and
pop
sbb
push
jne
and
clc
mov
sbb
ss
lds
sbb
inc
and
cmp
push
cli
jg
out
aas
dec
scas
mov
and
push
stc
inc
dec
xor
mov
or
push
pushl
insl
bound
or
hlt
xor
loopne
push
leave
popa
sub
push
icebp
xorl
daa
in
pop
mov
pop
aas
ds
jmp
fcompl
out
jl
std
nop
pop
mov
add
lret
jg
packssdw
cli
pop
call
pop
add
adc
xor
aaa
pop
or
push
fs
sar
mov
testl
pushf
xor
fwait
cld
int3
mov
movb
pop
lcall
loope
mov
adc
dec
movl
jmp
lock
mov
std
addr16
cs
bound
shll
push
ljmp
cli
mov
push
pop
in
xor
mov
dec
xlat
sub
adc
cmovne
jo
loop
incl
mov
inc
shll
test
xor
jge
orb
cld
decl
jnp
push
push
ljmp
mov
std
scas
lret
pop
sub
insb
cmp
xor
mov
out
mov
repnz
adc
or
fwait
bound
fdivs
push
cld
decl
int3
xor
and
scas
adc
xor
sbb
jmp
mov
mov
int3
outsl
xor
pop
es
dec
sbb
sub
dec
xor
outsb
outsl
sub
out
clc
pushl
lds
in
cmp
ficoms
std
out
jae
shll
lock
icebp
aaa
jb
and
sbb
loopne
cmpsl
jb
dec
cmp
ljmp
sub
adc
mov
sbb
mov
xor
ljmp
mov
cmp
fwait
fwait
sub
add
vcvtsd2si
cs
dec
mov
ljmp
lcall
cli
sub
les
cmp
in
sub
cmp
call
lcall
fstpt
addr16
hlt
inc
out
jo
and
pop
addr16
mov
jne,pn
fdivp
jmp
aad
mov
adc
ret
in
push
push
lods
scas
xor
sti
jg
xchg
inc
push
cmc
sub
jns
loope
mov
mov
cwtl
in
xlat
inc
mov
rclb
adc
jae
cmc
ficoms
cmp
mov
jne
sti
fistps
and
dec
lcall
pop
ret
call
ret
or
and
cmpsb
xor
jmp
int
ficoml
inc
jb
lret
mov
mov
pop
pop
test
cmp
mov
and
sub
add
cli
cmp
in
mov
pop
lahf
test
movsb
call
shr
int3
mov
pop
adc
insb
outsb
ret
sub
sbb
inc
pushf
mov
in
pushl
repz
insb
mov
fsubl
or
ja
pop
dec
pushl
jmp
cmp
test
add
pop
repz
adc
outsl
or
les
dec
pusha
mov
jecxz
aas
inc
repz
lcall
leave
add
bound
ja
mov
sbb
sub
lock
mov
sub
pop
adc
inc
daa
addr16
push
pop
fstpt
cmp
lahf
mov
push
or
sarb
incl
or
jo
dec
sti
outsl
mov
mov
push
fcomi
daa
lods
movsb
sub
fiadds
fidivs
data16
js
push
fcomps
cmp
xor
xchg
jg
incl
adc
pop
fcompl
adc
inc
les
mov
call
aam
jmp
sub
adc
add
lret
cmp
mov
or
out
popf
fmul
in
decl
cmp
xor
lret
jnp
jg
sbb
imull
rcrl
lock
in
jmp
scas
push
jl
fdivr
inc
movsl
int
inc
push
xlat
repz
sub
or
lcall
jb
push
dec
adc
adc
scas
adc
jmp
mov
mov
cmp
insb
mov
test
mov
pop
inc
cmp
mov
loope
cmp
sbbl
push
xchg
aas
pop
and
cmc
mov
dec
out
scas
add
cmp
sti
fisubs
mov
mov
rol
push
mov
mov
fstpt
adc
insl
pop
stos
jb
in
repz
fisubrl
mov
dec
call
add
jne
mov
push
aas
repz
fisttpl
or
push
out
cwtl
jne
push
xor
mov
push
pushf
push
rclb
mov
out
in
lcall
xor
cmp
dec
ja
scas
fcmovnu
fsubrl
jl
jg
test
mov
rolb
mov
push
push
icebp
pop
out
shll
mov
or
pop
mov
push
cmpsb
xchg
mov
xor
jg
out
aam
inc
cmp
xchg
sub
adc
jns
inc
mov
mov
pop
dec
stos
lcall
push
int3
subl
decl
mov
push
sub
lods
cmp
pop
cs
out
shrl
ss
sbb
aaa
cmp
notl
std
mov
insb
mov
mov
sti
stos
mov
push
stos
pop
or
ret
dec
sbb
call
jo
mov
push
imul
js
xchg
inc
cmp
xchg
in
inc
dec
shlb
push
sub
mov
movsb
test
pop
inc
sub
cmp
jmp
je
xchg
cmp
ss
insl
pop
add
xchg
les
call
leave
loope
incl
mov
pop
push
fadds
outsl
stos
push
adc
movsl
int3
jp
sar
scas
push
out
lcall
pop
xchg
xchg
cltd
push
mov
mov
push
dec
push
or
fidivrs
jbe
xchg
ret
push
mov
sti
xorl
fcomip
incl
les
inc
cmpsl
jns
dec
xchg
clc
fimull
and
scas
pop
loopne
repnz
push
or
leave
cltd
lds
sti
call
sub
xchg
add
je
pop
dec
shlb
nop
paddw
jg
cmp
or
lea
or
push
mov
or
push
add
xchg
sar
call
roll
cmp
dec
fucomi
test
cld
enter
insl
pop
jl,pt
lods
dec
cmc
outsb
call
mov
mov
faddl
mov
adcb
xchg
xchg
cmpsb
mov
or
clc
decl
mov
cmp
fmull
xchg
test
jg
subb
xchg
cwtl
or
push
mov
and
into
mov
inc
shlb
dec
mov
cmpb
add
add
filds
xchg
mov
lods
addb
mov
lods
push
jae
xchg
jg
cmp
es
fstl
or
je
inc
lock
xor
or
pushl
cmp
push
fildll
test
popf
movsb
orb
mov
sbb
lods
popf
xchg
mov
push
es
lods
test
outsl
es
pop
lret
lods
mov
push
sub
lahf
pop
hlt
iret
int
out
fisubrs
arpl
fimuls
xchg
hlt
popf
hlt
inc
xor
mov
mov
dec
incl
pop
mov
xchg
scas
mov
cmc
daa
pop
icebp
cmp
ja
jg
call
rclb
or
xor
cltd
addr16
jne
add
jmp
repnz
loopne
test
mov
ret
ljmp
mov
sbb
inc
fsub
xchg
pop
inc
es
lret
sub
ja
mov
xchg
jnp
ret
shrb
hlt
xor
fisubrl
incl
cld
lcall
xor
stos
xor
subb
push
push
jb
ds
or
sbb
or
pop
pop
jmp
pop
pop
sub
mov
sar
popa
test
loop
movzbl
push
adc
and
mov
add
pop
pop
add
fstl
sbb
and
push
stos
dec
lock
push
jg
pop
sub
mov
pop
setae
inc
lret
pop
cmp
stos
das
mov
lret
dec
shlb
stos
and
mov
xlat
push
int3
push
cwtl
pop
push
adc
dec
xor
leave
stos
cmp
leave
mov
mov
or
push
pusha
daa
xor
ror
inc
es
leave
shlb
lret
fisubs
push
incl
mov
insb
int3
adc
mov
imul
xchg
cmp
mov
ficoms
sahf
pop
and
decl
mov
out
push
icebp
lea
inc
cs
in
div
fcoml
stc
push
sbb
inc
dec
cld
or
scas
jae
aam
icebp
data16
sub
pushf
jl
dec
or
pop
or
jmp
lret
fcoml
lea
push
cli
pop
call
xor
mov
imul
lret
ja
dec
addr16
xchg
pop
test
inc
xor
jmp
adc
mov
mov
sub
sbb
jno
mov
pusha
push
sti
jmp
xor
and
pusha
es
jmp
inc
push
cmp
ret
cmp
inc
into
push
imul
mov
push
sub
jmp
rcr
jo
push
ffree
insl
push
mov
pop
pop
push
scas
mov
addb
push
or
pusha
jnp
cli
cmpsb
imul
pushl
outsb
in
pshufw
pop
fidivs
jae
outsb
adc
pop
mov
mov
ljmp
push
clc
pop
out
or
adc
insl
push
int3
jecxz
mov
mov
arpl
jmp
lock
andl
out
out
outsl
inc
adc
fwait
sbbb
adc
call
nop
loopne
lea
dec
ss
add
outsl
int
jecxz
lods
cli
fimull
xchg
out
fcomip
lcall
xor
mov
out
jbe
dec
cmp
jne
sub
dec
sti
lods
pop
cld
iret
ljmp
xor
jmp
and
in
fwait
and
insl
xchg
loope
pop
or
pushl
lea
push
cmp
inc
mov
mov
int
jl
sahf
dec
adc
sahf
jnp
lods
lods
fistpl
imul
xchg
aaa
add
rorl
mov
cmp
decl
xchg
xchg
sub
scas
inc
mov
loopne
data16
mov
pop
gs
pop
iret
push
push
out
cli
call
push
dec
cmp
inc
xor
ljmp
cmpsb
idiv
decl
aaa
shrb
add
jp
mov
jmp
sbb
push
jmp
xchg
jl
inc
hlt
jmp
sub
cmp
dec
push
xchg
jmp
sub
sahf
jmp
pusha
lock
and
sub
sar
decl
mov
inc
lret
sti
les
pop
mov
jne
inc
and
jge
fsts
mov
incl
sbb
pop
jmp
pop
mov
sbb
mov
cmp
test
loop
mov
sahf
jmp
daa
jbe
stc
or
imul
pop
dec
ljmp
inc
popf
sti
cmpsl
pop
rcr
jl
dec
pop
scas
or
push
mov
mov
sbb
mov
and
cmp
sbb
outsl
lcall
fiaddl
inc
sub
imul
movl
aas
movb
lcall
cld
inc
sysexit
in
idiv
cmc
push
fildl
push
aad
mov
push
fiaddl
movsl
aam
pop
movsl
in
cmp
xor
jbe
and
add
push
ljmp
mov
ljmp
push
pushf
ficomps
sbb
lcall
mov
imul
into
call
insl
pop
into
jae
dec
test
mov
pushf
mov
sub
les
test
add
mov
lahf
sub
jns
sbb
popa
icebp
repnz
fdivs
jne
int
xor
out
mov
jmp
ret
add
outsl
loopne
popa
lret
repz
fdivrs
adc
mov
jae
dec
xor
in
xor
mov
js
add
xor
ljmp
mov
call
loope
or
fdivs
ffree
jp
xor
out
mov
cld
mov
inc
mov
aam
jb
or
pop
xor
incl
stos
lret
mov
inc
movsb
mov
xor
mov
and
lcall
xchg
out
hlt
sbb
cmp
idivl
aas
fwait
mov
cwtl
int
mov
in
lcall
ret
mov
loope
scas
mov
and
jle
jl
outsl
ds
decl
mov
cmpsl
arpl
cmp
mov
movsb
cli
loop
clc
inc
add
popf
cmp
mov
inc
jmp
jmp
sub
and
inc
cltd
or
cld
add
sahf
imul
sub
adcb
into
add
call
fxtract
add
popf
jecxz
jnp
inc
dec
aas
inc
mov
mov
popa
sbb
add
mov
cmp
test
cmp
xchg
inc
cmp
loopne
call
ret
addr16
add
cmpsb
lahf
stos
xor
test
mov
outsl
ljmp
sub
sti
shlb
outsb
pop
cmc
push
cmpl
lahf
dec
bound
or
insl
dec
or
sti
inc
mov
fcoms
xorb
inc
popa
dec
mov
es
gs
incl
xor
or
inc
cmp
or
mov
jb
jae
sbb
jle
inc
jno
jae
push
xor
or
or
fiaddl
mov
adc
push
mov
aam
sub
push
arpl
in
jne
into
cmp
in
mov
arpl
pop
xchg
push
or
decl
inc
sub
cld
jae
pushf
stc
dec
jae
ds
jns
push
std
cmp
and
or
cmpsb
not
test
xchg
mov
cld
jmp
repnz
and
insb
push
fldt
out
mov
or
mov
call
xchg
adc
dec
fcomps
xchg
inc
mov
jae
shl
cmp
ljmp
jmp
cli
and
xor
addr16
sbb
mov
inc
scas
mov
movsb
pop
inc
pop
adc
push
mov
pop
lcall
pop
fadds
push
and
sbb
mov
outsb
clc
out
cmc
mov
xlat
xchg
xor
cmp
sarb
jmp
loop
loopne
push
mov
adc
outsb
mov
lds
cmp
sarb
push
inc
mov
ljmp
js
add
xor
mov
sbb
jmp
outsl
adc
sbb
sub
xor
mov
lret
out
loope
lcall
sbb
push
shlb
push
loop
jge
push
mov
inc
mov
int
fisttps
decl
add
adcb
cld
in
cltd
sub
es
movsl
les
mov
push
adc
shl
mov
mov
call
lahf
cltd
leave
and
sbb
mov
adc
fstpl
and
sbb
push
mov
lret
mov
jecxz
rorl
xor
push
lahf
cmpsb
incl
add
adc
nop
shrb
popa
nop
sub
insb
xchg
stos
mov
mov
jmp
mov
test
add
in
fs
aas
shll
sub
lods
fsubs
lea
iret
fcmovu
or
decl
xor
jae
sub
faddl
cltd
sub
aad
mov
xchg
and
scas
push
ud0
pushl
icebp
popa
addr16
or
int3
push
lods
mov
test
sub
or
dec
mov
sbb
incl
sbb
std
insb
pop
and
push
xor
aam
mov
insl
add
mov
int3
pop
push
cwtl
into
sbb
push
pop
dec
aam
rolb
sub
decb
cmp
ljmp
mov
test
push
test
jge
icebp
inc
mov
sub
jmp
outsb
out
dec
jno
cmp
cmpsb
push
aaa
xor
jge
push
icebp
add
enter
int
call
xchg
push
xchg
lret
inc
push
adc
cmp
or
mov
mov
add
jae
incl
clc
call
xchg
lods
pushf
push
scas
mov
fsubrs
adc
iret
jp
lret
and
dec
aaa
mov
out
lahf
pop
mov
dec
xchg
leave
cmp
inc
jmp
mov
mov
fisubs
mov
jmp
or
or
adc
or
cmp
aam
stc
outsb
outsb
mov
mov
lea
lahf
jo
sub
jl
lahf
xor
movsb
inc
push
jne
and
sub
test
xor
sub
adc
jmp
mov
push
in
mov
or
not
and
sahf
shlb
and
fwait
adc
inc
scas
cmp
xor
loope
xor
js
jmp
je
negl
fwait
fcomip
and
aaa
bound
sbb
adc
aas
and
xchg
incl
cld
loope
push
sub
jo
xchg
and
cmc
shr
test
inc
or
fidivrs
cmp
repz
mov
push
stos
adc
lcall
add
daa
xchg
mov
and
lcall
push
adc
enter
and
cmp
cmpsb
cmp
int3
arpl
aam
lcall
jb
or
adc
inc
fdivl
and
add
out
sahf
pop
aam
leave
int
ljmp
xor
and
enter
in
dec
ret
or
mov
push
cmpsl
xor
mov
mov
dec
lahf
xor
ds
cmp
mov
insb
dec
pushl
mov
movsl
jle
or
cmpsl
jp
enter
xchg
outsb
adc
xchg
ljmp
fistl
fistl
enter
mov
lds
lods
mov
sub
push
call
push
pop
jbe
or
or
popf
std
daa
ret
and
sti
incl
into
and
outsl
xor
lahf
call
sub
ss
cld
push
jl
fnsave
or
sub
movsl
xor
fmuls
inc
shl
jb
repnz
adc
xor
js
mov
call
cmp
test
out
ret
daa
jae
xor
repz
inc
adc
jmp
adc
xchg
cmp
jbe
mov
and
xlat
inc
cmp
xor
push
sub
add
pop
mov
jge
leave
lock
pushf
push
divl
scas
dec
ja
xor
xlat
ljmp
clc
mov
mov
dec
dec
mov
cmp
hlt
mov
filds
call
mov
ds
xor
call
hlt
icebp
subb
sbb
or
jns
cmp
lahf
rcrl
jns
aaa
xor
int3
jg
and
lods
dec
xor
xchg
ficoms
sub
lds
aas
repz
mov
incl
add
out
negb
sbb
sbb
cmpsb
mov
jle
out
movsb
loopne
mov
cmc
shl
dec
adc
mov
daa
sub
decl
dec
outsb
adc
stos
jae
pop
xor
and
dec
jae
pop
outsl
scas
mov
push
xor
decl
inc
lods
push
mov
lcall
data16
repnz
adc
decl
xchg
fldl
mov
mov
outsl
mov
inc
leave
stos
das
push
popf
push
mov
jl
inc
push
sbb
lea
int3
out
shll
inc
dec
fwait
jp
jp
push
mov
or
daa
hlt
dec
arpl
lret
xor
mov
lcall
scas
mov
insb
sbb
in
push
inc
push
mov
gs
mov
das
or
cmp
shlb
fcoml
jp
xchg
sub
shll
inc
gs
jb
imul
ss
mov
adc
xchg
adc
out
inc
cmp
nop
stos
pop
call
lret
xor
daa
xor
sti
daa
sti
icebp
jmp
insb
clc
xchg
xchg
fs
jg
cmpsb
cmp
fwait
shrl
sbb
add
arpl
jae
fists
ljmp
repz
lret
lcall
mov
mov
fwait
and
shlb
incl
xor
cmpsb
jae
mov
mov
mov
shrb
pushl
mov
out
loope
xor
aas
mov
andl
adc
fs
decl
stc
stos
push
addr16
daa
mov
xchg
mov
mov
xor
and
lahf
mov
xchg
scas
push
xchg
dec
jne
cwtl
outsb
iret
imul
loopne
dec
fdivl
ss
iret
out
pop
adc
xchg
sbb
enter
imul
jle
sbb
call
push
shl
pop
in
jle
cs
or
inc
xchg
mov
ret
pop
into
rcl
pop
leave
test
ss
pop
icebp
pushl
inc
je
cmp
test
fucomp
pushf
bound
fdivrs
cltd
sub
adc
fcomip
mov
imul
cmpb
inc
nop
cmp
sahf
enter
push
mov
mov
decl
cmp
scas
mov
int3
or
jmp
leave
in
cltd
adc
sbb
pushl
xchg
jg
mov
dec
test
sbb
cmp
cmp
sub
idiv
pop
cld
fwait
xchg
ret
mov
pop
mov
ret
ret
cwtl
leave
repz
xchg
sbb
push
xor
fstl
cmp
rcll
sbb
rorb
test
call
add
push
adc
mov
clc
test
test
jle
jg
cmp
stos
xor
imul
outsl
les
and
cmc
daa
jp
popa
push
ds
mov
mov
mov
adc
mov
jae
call
call
xchg
lret
popf
lds
adc
mov
imul
call
lods
cwtl
xchg
push
jmp
push
xchg
mov
fisttpl
lea
inc
push
fsubrs
push
mov
push
int
or
xor
adc
repnz
rolb
mov
dec
sub
push
cmp
iret
jmp
jmp
xchg
out
decl
dec
mov
pop
sub
loope
adc
add
or
into
adc
clc
shr
incl
cli
shrb
xor
mov
in
es
cmpb
ljmp
and
popa
pop
pop
xchg
sbb
filds
into
xchg
dec
sbb
pop
jg
fbld
lcall
clc
in
fsubrl
insb
sbb
lock
add
mov
mov
jmp
or
dec
mov
and
outsb
mov
mov
incl
lcall
push
inc
xchg
push
xchg
daa
loop
call
psrlq
les
xchg
mov
lods
jb
add
fisubs
roll
out
out
scas
out
push
decl
xchg
scas
cmp
mov
into
xor
pop
fimuls
insb
daa
pop
pop
and
test
fldt
cwtl
jle
dec
adc
ljmp
mov
bound
aad
clc
dec
xor
fcmove
dec
adc
nop
mov
pusha
push
cmpsb
jg
stc
inc
and
adc
test
push
lahf
pop
cmp
or
daa
inc
adc
cli
ljmp
jo
cs
jae
jbe
in
loopne
rorb
loope
push
test
pusha
add
decl
cmp
lock
stos
jg
js
pop
cli
mov
and
cmp
ljmp
std
dec
bound
rol
cmpsl
pushf
adc
cmpsb
pop
mov
push
inc
clc
or
mov
lds
push
jmp
ljmp
mov
es
movsb
mov
ret
addr16
cld
fmuls
fcomi
ret
mov
aaa
std
ljmp
or
xchg
sahf
std
sbb
out
icebp
inc
pop
in
mov
aad
data16
cmp
mov
cmp
or
jp
adc
inc
scas
mov
add
in
mov
ljmp
shll
xchg
popa
jo
sbb
nop
cmp
push
cmp
lock
decl
aad
cwtl
nop
mov
jmp
jo
loopne
hlt
inc
lods
enter
call
jne
int3
mov
jmp
pop
inc
sbb
decl
cmp
ljmp
push
push
mov
mov
scas
pushl
cmp
xchg
inc
or
sbb
mov
mov
jmp
lods
loopne
mov
pusha
mov
cmp
imul
mov
cmp
inc
mov
push
lock
jle
imul
or
out
clc
ljmp
mov
lods
sub
fs
mov
sub
pop
lock
inc
and
push
popa
xor
pusha
insl
int
mov
sarl
cli
inc
cmp
fistl
clc
dec
decl
sbb
lea
sahf
scas
pop
aaa
jmp
out
xlat
imul
jns
test
call
cltd
jmp
shrw
out
xor
or
aam
xor
mov
adc
incl
lock
repz
and
mov
pushf
popf
test
push
pop
sub
dec
fstpt
jae
sub
movsb
js
mov
sbb
imul
push
decl
xchg
mulb
gs
adc
test
jae
scas
shrb
push
pop
std
js
cmpsl
jo
adc
sahf
mov
outsb
mull
outsl
cli
call
adc
inc
repnz
push
or
and
loope
push
xchg
data16
mov
inc
dec
jbe
push
push
mov
xchg
popa
movsb
pushf
xlat
mov
fs
je
clc
cli
sub
aaa
andl
jno
mov
popa
mov
fwait
cmp
das
cmp
push
pop
adc
icebp
mov
test
movsl
test
pop
lods
leave
outsl
and
mov
decl
aaa
lock
jno
data16
adc
adc
push
pop
xor
loop
aad
cmpsb
nop
sahf
out
lock
dec
out
dec
jge
add
cli
add
mov
loopne
popa
int3
sahf
repz
pop
inc
jg
push
lock
roll
bnd
dec
gs
xchg
sub
call
jge
notb
pop
ficompl
iret
pop
sti
into
outsb
push
cmp
ja
popa
xchg
nop
or
call
hlt
inc
pop
push
jb
and
idivb
ljmp
push
sub
test
aas
call
or
push
sbb
pop
aad
mov
xchg
shl
lcall
xor
mov
rclb
jae
dec
cli
cmp
pop
jg
sbb
inc
scas
sub
int
cli
pusha
iret
stos
test
and
dec
jb
add
adc
ljmp
lods
les
call
mov
sti
jo
mov
xor
nop
jmp
mov
popaw
adc
lcall
shlb
stos
setp
icebp
inc
cmpsb
js
addr16
mov
lcall
push
into
dec
xchg
push
jmp
or
cmp
inc
mov
jae
inc
sub
cld
lea
ljmp
lahf
jmp
test
push
inc
mov
jmp
outsb
mov
inc
sahf
rclb
pop
fldt
test
inc
movsl
inc
cmp
mov
sub
lds
imul
cmc
xor
pop
jmp
sub
or
insl
and
loop
fs
call
decl
mov
aad
push
pop
pop
sub
jg
pop
xor
jnp
sti
lcall
fldenv
repz
lahf
in
jae
stos
xlat
fidivrl
popf
test
cld
dec
stos
push
data16
jg
dec
sahf
xor
mov
test
enter
cs
ljmp
aaa
sbb
int3
sbb
or
jg
loop
add
repz
lcall
repnz
lcall
out
int3
xor
mov
xchg
repnz
jle
sti
jmp
addr16
inc
fstpl
repz
push
adc
mov
push
fisubs
pop
in
sbb
cmp
ret
je
lock
jmp
les
std
mov
lock
push
mov
in
mov
mov
gs
dec
mov
jne
jp
mov
fnsave
nop
fisubrl
jmp
sbb
imul
mov
mov
out
nop
sbb
pushl
jae
or
outsb
leave
out
in
cmp
divb
push
mov
push
adc
inc
rclb
xchg
sub
nop
mov
movsb
jp
clc
xor
push
repnz
push
jl
mov
mov
xchg
aam
adc
xchg
pop
xchg
inc
push
mov
push
cltd
imul
xchg
push
inc
sub
nop
fbld
imul
push
nop
idivb
decl
or
std
sar
inc
xchg
idiv
dec
out
aad
sub
xchg
test
call
outsl
clc
pushl
inc
clc
ret
fadds
add
xchg
jno
mov
pop
jbe
push
lods
xchg
clc
in
or
ljmp
je
lock
subb
popw
xchg
out
icebp
adc
pop
jo
js
and
mov
ficoms
fsubrp
fwait
sub
aas
push
xor
ljmp
inc
in
mov
mov
stos
push
jl
mov
bnd
xlat
fstpt
ss
decl
cmp
jo
or
jne
adc
push
xorb
mov
push
add
sbb
fildl
sbb
xchg
js
mov
out
mov
mov
xor
jae
mov
push
out
cmp
mov
adc
shlb
out
or
outsl
decl
xchg
add
sbb
cmc
mov
mov
fisttps
mov
scas
and
daa
imul
lcall
mov
fs
mov
dec
fs
dec
cltd
jae
stos
incl
mov
xchg
out
mov
bound
jmp
imul
aad
or
mov
push
popw
mov
sbb
inc
adc
or
es
push
notl
or
mov
jmp
push
push
dec
cmpsl
mov
popf
insl
ss
insl
xchg
dec
mov
pushl
mov
sub
loop
push
mov
jo
mov
jecxz
rorl
xchg
call
mov
sbb
gs
sub
inc
mov
cmpsb
pop
out
sarb
outsb
out
mov
push
mull
and
fs
or
aad
cmp
jle
mov
pushl
push
inc
shll
mov
mov
push
popl
fcompl
push
inc
jle
nop
inc
adc
pop
sub
sti
iret
or
xchg
and
es
lret
xchg
fbstp
sbb
aam
iret
mov
call
adc
addl
push
mov
jmp
aam
mov
in
icebp
incl
subb
pop
je
mov
clc
xchg
adc
sbb
out
ljmp
cmp
xchg
or
push
xchg
enter
push
das
pop
es
mov
call
sub
idivb
fcoml
leave
das
outsl
cli
xchg
push
adc
xor
push
sub
aam
push
clc
rcll
xlat
mov
cmpsb
test
daa
scas
push
in
ret
xchg
add
adc
jge
adcl
cs
cmc
push
mov
mov
dec
insl
push
popf
cmp
decl
xchg
push
rol
xor
dec
les
adc
mov
push
aad
xchg
pushl
jo
idivb
push
ja
jbe
pop
adc
test
popf
call
test
decl
in
jo
gs
shl
out
pop
jbe
ret
repnz
mov
push
decl
adc
inc
push
sub
bound
jns
das
or
arpl
call
in
jmp
out
out
fs
fs
mov
sub
sub
sarb
call
pop
jno
mov
fidivl
iret
clc
stc
jne
xchg
push
xor
nop
lods
xor
pushl
push
leave
xchg
lret
shrl
dec
jecxz
push
xor
push
lcall
ljmp
or
push
test
or
mov
pop
mov
mov
adc
loopne
mov
cmpsb
insb
icebp
xchg
jne
lock
mov
jmp
cld
mov
rorl
rcr
jnp
sub
push
adc
and
js
fcomip
ljmp
jo
cmp
pop
shrb
test
sti
cmp
adc
pushl
xchg
ficoml
inc
jecxz
mov
or
xchg
fbstp
mov
xor
pushl
lods
jne
sbb
mov
push
fwait
mov
jmp
rcrl
out
pop
std
call
outsb
shrl
sbb
lds
sbb
pop
testb
decl
pushf
or
push
nop
push
pop
xor
stc
cmp
push
xor
cld
decl
cmp
add
pop
shll
push
add
mov
add
andb
mov
push
pop
sbb
sub
jns
pusha
icebp
adc
fsubrs
popa
xor
xor
push
pop
xor
xchg
hlt
mov
mov
es
rolb
popf
cmpsb
dec
xchg
cmp
movsb
adc
mov
xor
fsubs
fldcw
movb
divl
jmp
mov
in
mov
cmpsb
sub
insl
cmp
lahf
pushf
cli
or
rcll
xor
cmp
mov
incl
xchg
and
rcll
pop
sar
jg
cwtl
mov
mov
out
jo
mov
daa
pop
xchg
in
scas
push
movsl
mov
xor
mov
adc
mov
es
repnz
xor
mov
fdivs
incl
outsb
push
push
aam
stos
lret
cld
push
cmp
jp
sti
arpl
push
xor
cwtl
mov
or
mov
dec
repz
fs
cli
push
sbb
xchg
sub
rorb
das
das
idiv
call
sbb
mov
add
sbb
sub
pop
push
lret
cli
mov
es
ljmp
lcall
or
iret
jl
jo
mov
push
mov
stos
or
pop
pusha
sti
ljmp
subl
and
push
mov
call
jp
jo
adc
mov
mov
ret
jmp
es
xchg
fimuls
out
jne
repnz
xor
or
shlb
aaa
std
mov
xorb
and
lret
xor
jmp
lods
repz
mov
xor
fsubr
xchg
sub
adc
push
psubq
in
add
mov
fxch
mov
das
fwait
jmp
lcall
out
push
mov
cs
jbe
clc
jb
cld
sub
imul
or
lea
or
sti
push
sub
sti
aas
aam
loope
lcall
push
movsb
sbb
nop
icebp
or
sub
mov
test
decl
out
mov
leave
in
in
and
movsb
jb
mov
pusha
xchg
daa
rorl
mov
mov
xchg
sbb
jl
mov
leave
js
fnstenv
lock
incl
mov
dec
in
adc
repnz
inc
adc
movsl
pop
popf
testb
xor
sbb
sbb
lcall
xchg
sahf
cmpsl
fmull
stos
std
int3
iret
mov
jle
mov
dec
incl
stos
and
adc
les
mov
cmp
mov
add
jmp
insb
mov
mov
push
icebp
push
pop
xchg
sti
add
int3
rcll
clc
push
mov
jo
mov
icebp
xchg
rclb
and
bound
dec
rclb
ja
mov
xor
in
test
sbb
inc
pop
mov
push
xchg
fs
pop
adc
popa
lret
mov
lods
jecxz
aam
push
mov
dec
xor
adc
inc
mov
lods
enter
js
cmpsb
mov
in
cmpsb
xor
mov
add
insl
movsb
test
adc
sbb
mov
bound
cmpsb
sbb
outsl
decl
pop
out
mov
mov
popa
pop
es
iret
sbb
mov
add
add
mov
inc
or
add
in
test
aad
inc
adc
ficoms
xchg
sbb
cmp
ret
pop
int3
mov
lret
mov
outsb
fadds
incl
xchg
xchg
dec
fdivs
inc
out
ja
dec
aas
mov
or
sarb
insb
mov
mov
push
push
xor
jle
or
fcomip
pop
loopne
jg
cwtl
stos
fdivl
sti
add
xchg
lcall
decb
movl
hlt
or
rorb
pop
aaa
cld
inc
repnz
jae
fs
jns
or
mov
aaa
adc
lods
test
loopne
fimuls
pop
aad
outsb
sub
in
mov
es
lret
shll
lret
mov
test
fxch
push
pop
or
mov
fldcw
divb
fisttps
fbld
jb
pop
les
xlat
shrl
or
decl
and
adc
lcall
dec
push
mov
mov
cld
pop
js
cmp
test
scas
nop
je
jl
push
add
mov
ljmp
xor
push
xor
cmp
or
or
mov
ljmp
pop
mov
pop
cmp
push
sti
push
lret
andl
rorb
dec
ret
fmul
pop
push
add
sbb
jae
nop
aaa
or
sysexit
add
and
rcrb
mov
mov
les
dec
cmpsl
out
dec
movsl
xor
jb
add
ljmp
call
mov
add
pop
int3
push
jbe
movsb
inc
cmovns
mov
fucomi
sub
incl
and
mov
add
xchg
aad
loope
in
in
stos
out
aam
cld
pop
jmp
call
movsl
rorl
pop
ja
sub
out
outsl
cmpl
loop
dec
ds
decl
inc
push
push
sahf
fisttpll
fwait
adc
daa
adc
das
stc
sahf
iret
fwait
or
cmpsl
adc
adc
cmc
idiv
ljmp
shl
repnz
inc
test
lret
lds
adcb
push
mov
iret
out
outsl
ja
inc
insb
in
mov
sub
jmp
out
fwait
hlt
xor
dec
inc
repz
movsb
mov
in
xchg
outsb
xchg
push
and
mov
lcall
int3
ret
leave
dec
cmpsb
das
mov
or
mov
outsb
enter
sub
ljmp
xchg
out
cmpsb
cmpsl
out
inc
iret
lock
insl
sub
stos
pop
xor
and
cmp
push
outsl
jno,pn
outsb
out
xchg
clc
jae
ret
in
push
adc
inc
sub
mov
mov
out
ja
mov
mov
xor
subl
mov
jmp
or
dec
aas
mov
pop
jmp
repnz
push
call
insb
mov
jecxz
sub
mov
arpl
sahf
insl
cltd
cmp
cmp
std
outsl
and
add
loopne
add
rcll
cmp
int
mov
rcrl
push
inc
adc
test
cmp
pushl
mov
adc
repz
lret
insb
cmp
inc
push
cmc
or
rorb
in
inc
shr
push
adc
jmp
push
mov
ja
popa
mov
push
repz
incl
pop
iret
ficoml
insl
cmpsb
imul
lret
xchg
fucomi
popf
xchg
xor
incl
cmp
icebp
mov
cmpsb
rol
icebp
pop
dec
fcoml
lock
std
mov
pushl
scas
mov
sbb
dec
fnstenv
lock
xchg
negl
pop
imul
cmc
ljmp
adc
cwtl
add
jbe
scas
or
in
sbb
sub
adc
xchg
mov
icebp
pop
sbb
ljmp
gs
jecxz
jnp
repnz
cmp
xchg
mov
leave
cmp
cltd
mov
into
fistl
mov
sbb
sarl
cld
incl
push
cmpsb
sahf
dec
fists
adc
jb
stc
inc
sub
or
pushf
shlb
jg
pushl
mov
sub
sbb
int3
pop
push
fisttpll
insb
jns
das
rorb
jbe
mov
decl
out
fwait
es
nop
outsb
ds
outsl
push
mov
fwait
cwtl
call
cmpsl
divl
cld
cmp
jmp
mov
jno
xchg
xor
inc
sub
insb
cwtl
xchg
enter
cmpsl
es
cmp
add
sbb
call
pushl
fidivs
push
push
sti
jl
push
xchg
mov
insl
pop
sbb
cmp
and
ljmp
movsb
fbld
addr16
dec
push
imul
mov
jae
xchg
aam
jge
push
dec
imul
call
pop
push
mov
out
jnp
lods
xchg
mov
cmp
addb
push
dec
push
das
jmp
push
ja
jge
std
fcomip
mov
xchg
xchg
dec
push
push
int3
sbb
repnz
jl
dec
cmpsb
or
mov
lret
pusha
jp
inc
sbb
fistl
jg
pusha
jns
sub
jmp
iret
fdivr
mov
negl
ds
pushw
fsubl
aas
push
mov
imul
in
jp
push
adcl
add
fidivs
int
push
std
cld
jle
cli
dec
outsb
cmpsb
in
or
sub
mov
jg
outsl
adc
int
lcall
mov
fwait
push
repnz
inc
les
or
stos
sub
add
call
jle
jmp
adc
xchg
clc
lcall
pushl
aas
dec
jmp
clc
ljmp
mov
das
lidtl
clc
or
mov
call
jo
mov
pop
jne
repnz
imul
xchg
mov
loopne
mov
lcall
jb
sub
push
or
cmpsl
sub
push
push
inc
loopne
pop
cli
pushl
cltd
test
cwtl
inc
scas
adc
arpl
push
pop
push
or
xchg
fimuls
inc
outsb
iret
sub
das
pop
adc
mov
xor
nop
hlt
push
incl
cld
rcl
push
jg
pop
mov
out
sub
sbb
mov
test
outsl
clc
push
dec
scas
adc
push
push
ljmp
in
sbb
pop
push
aad
push
movsl
test
mov
lret
out
and
clc
cs
stos
mov
mov
jecxz
mov
fwait
in
call
adc
sbb
cmp
jo
xor
sub
jmp
loop
mov
or
jne
dec
push
jmp
fcomip
jg
nop
cli
scas
push
dec
inc
inc
js
sbbl
sbb
gs
insb
lret
in
shld
and
lcall
inc
mov
outsb
and
inc
sbb
xchg
out
xor
imul
xchg
mov
data16
inc
fistl
aas
cmpsl
ret
xlat
std
inc
mov
jo
nop
adc
sub
aaa
mov
je
add
es
mov
mov
test
inc
fistl
call
cwtl
jp
cmc
lcall
mov
cmpsl
ja
lahf
sub
lcall
xor
aam
xchg
stc
xchg
sub
mov
push
mov
loope
dec
sbb
jns
aas
and
repnz
pop
pushl
mov
outsl
loope
push
pop
ss
std
ljmp
xchg
ret
mov
mov
aas
dec
pavgw
add
cmp
mov
inc
addr16
mov
jg
xor
mov
ret
or
fisubs
xor
out
cmpsb
js
add
jo
cmpl
das
mov
bnd
push
cmpsl
xor
decl
test
fwait
loopne,pn
cmp
sub
xchg
or
pop
cmpl
dec
loope
scas
in
push
push
pop
xchg
cmpsb
sub
mov
inc
clc
mov
mov
push
iret
push
jecxz
cmp
cmp
xchg
insl
pop
cmp
movsl
leave
dec
jp
jne
mov
xchg
jp
pop
outsl
fs
std
scas
inc
sahf
add
cwtl
mov
cmp
outsl
cli
out
xchg
sbbl
adc
push
jb
dec
sarb
loop
pusha
sub
mov
std
pop
cmpsb
push
xor
push
ja
inc
fs
push
in
cwtl
ds
or
pop
je
mov
clc
cld
mov
mov
int
lods
imul
scas
xor
jg
jae
xorl
sahf
out
inc
mov
addr16
adc
outsb
adc
ljmp
jno
outsl
aas
nop
bound
xchg
add
adc
adc
inc
xor
addr16
call
mov
adc
sar
xchg
xchg
push
sub
lcall
xchg
xchg
mov
sbb
decl
ret
nop
mov
and
sub
arpl
jno
inc
stc
test
aas
jno
push
cld
data16
lret
sub
xchg
icebp
lods
xor
push
mov
loopne
pop
out
mov
mov
push
mov
cmp
lcall
lret
adc
repz
or
and
js
std
and
mov
test
jg
jge
or
fst
sbb
adc
mov
mov
fcomip
mov
mov
add
rorb
push
cs
call
pop
push
outsb
sbb
fwait
cmp
cmp
jg
mov
add
rclb
adc
lock
pop
pop
std
data16
arpl
and
iret
jp
cbtw
mov
mov
movsb
dec
repz
jg
popa
xchg
gs
orl
adc
lret
adc
iret
adc
fistps
das
jmp
lret
add
lcall
xchg
imul
pop
dec
fisubl
call
std
jmp
out
mov
push
mov
les
rolb
fwait
mov
xchg
jo
push
push
xchg
adc
jg
in
mov
subl
mov
lret
cmp
pop
add
sahf
inc
cltd
outsl
test
pop
pop
fdivr
decl
in
loop
mov
mov
les
roll
fcom
repnz
pop
enter
and
out
fcompl
incl
repz
xchg
sbb
mov
cwtl
data16
test
cld
cmp
out
ss
push
fwait
xchg
into
mov
loope
test
decl
stc
mov
pop
test
inc
pushf
sub
push
divl
or
lods
or
scas
mov
xchg
lret
jbe
sti
incl
andl
push
push
mov
push
push
inc
xchg
sub
mov
mov
sbb
dec
out
cmp
jnp
test
sti
xor
lock
dec
cmc
cwtl
ljmp
test
push
and
decl
sbb
loope
outsl
mov
jne
in
inc
add
sub
xor
outsl
outsl
dec
mov
fistps
sbb
popa
mov
shl
and
adc
xor
inc
mov
pushl
popa
repnz
nop
mov
loope
call
sub
xchg
cli
loope
lcall
sahf
in
imul
push
xor
stos
in
pop
repz
add
xor
scas
and
lcall
in
xor
pop
cmp
call
in
inc
mov
or
incl
and
out
jnp
call
xor
addr16
lret
pop
std
sub
sti
pop
jg,pt
in
fcmove
sub
incl
mov
dec
out
jns
push
cmpsl
add
pop
clc
adc
adc
adc
cwtl
xchg
mov
xor
fnstcw
jbe
fisttps
cwtl
mov
inc
jp
std
addb
shlb
std
test
adc
adcb
push
xorb
loope
aas
xchg
push
adc
add
add
ljmp
movsb
xor
jb
outsl
mov
sbb
dec
negl
xchg
jb
jmp
fs
in
sub
jle
xchg
xchg
test
xchg
rolb
cltd
xor
std
pushl
iret
jmp
dec
add
xchg
jb
cmp
data16
dec
inc
std
mov
xchg
xchg
xor
scas
fcmovne
cmp
movsl
repnz
xor
outsl
inc
ja
jbe
adc
scas
mov
inc
dec
lods
xlat
orl
adc
jl
sub
fists
adc
sub
xchg
mov
jno
mov
push
mov
xorl
loop
and
outsb
push
cwtl
dec
sti
rclb
mov
pop
fs
adc
ja
aas
lcall
mov
or
xor
sahf
sbb
call
mov
mov
xor
dec
ret
mov
cltd
orb
sub
les
clc
call
arpl
sub
movsb
xlat
dec
es
jle
pop
add
int
mov
jo
add
repz
ljmp
pusha
mov
data16
add
icebp
cmc
mov
jmp
sub
pushl
dec
hlt
subl
mov
inc
mov
js
sub
pop
rcrb
sbb
call
push
add
jmp
and
adc
insl
push
cmove
in
arpl
cmp
add
mov
clc
xchg
pop
adc
je
inc
mov
pop
cld
jmp
popf
subb
loop
cltd
sbb
hlt
aas
pop
pop
stos
ror
ljmp
or
pop
or
pop
sub
rol
imul
dec
sti
mov
in
movsl
decl
hlt
jmp
xchg
push
mov
xor
mov
dec
and
movsl
and
ljmp
cmpsb
push
lcall
cli
push
call
jg
mov
mov
andb
add
jae
add
jg
dec
pop
xor
rorl
push
jmp
or
fsts
in
fs
jmp
sub
xor
sbb
xchg
inc
sbb
ds
rcrl
addb
in
dec
push
pushl
or
loope
push
loop
xchg
ror
push
sub
cmp
inc
adc
jg
push
je
mov
insl
push
push
mov
mov
pop
add
fcomip
decl
mov
fstpl
mov
ss
xchg
mov
xor
jo
lcall
cltd
loop
mov
repnz
pop
pop
mov
cmp
pushl
shl
push
orb
jecxz
inc
sahf
int
imul
enter
mov
lcall
cmpb
xor
push
adc
mov
xor
mov
movsb
scas
sbb
dec
mov
jne
cmp
addr16
sahf
enter
xchg
jb
xchg
mov
jl
xchg
jae
in
sarl
pop
cmc
pushl
adc
cmpsb
les
fiadds
into
std
jecxz
lret
test
sbb
jg
jmp
mov
jg
jmp
add
mov
les
rol
jmp
jnp
mov
push
cmp
jo
js
pushl
dec
sbb
dec
inc
sbb
push
pop
mov
push
push
pop
insl
filds
jns
lock
popa
inc
xor
mov
inc
sbb
inc
xchg
inc
test
icebp
jns
jl
cmp
rep
mov
inc
iret
push
ret
scas
in
jmp
pushf
shr
xchg
rorb
outsb
adc
mov
xchg
jle
test
aas
int
mov
js
and
mov
out
fwait
xor
mov
mov
out
mov
pop
jle
in
test
pushf
xchg
ja
push
mov
pop
nop
inc
call
in
jge
notl
jbe
notl
dec
cmp
mov
ja
mov
cmp
mov
push
lcall
pushf
jmp
sub
mov
dec
pushf
fbstp
sahf
stc
fidivrs
repz
xor
jg
hlt
ljmp
cmp
pop
hlt
aad
inc
in
cmpsb
xor
call
js
push
mov
jle
add
ljmp
imul
cld
movsl
jns
pop
scas
jl
cmp
push
popa
imul
imul
pushl
jle
popf
jne
sahf
cli
pop
push
sub
jb
enter
cwtl
mov
lock
jmp
jmp
cli
mov
flds
icebp
je
rolb
and
fistl
jbe
and
outsl
cli
fadd
push
mov
repnz
jge
repnz
movswl
popa
jge
push
iret
fisttps
shll
push
inc
js
hlt
mov
xchg
lods
es
mov
ret
mov
lret
jno
fistps
loop
ja
sbb
jmp
test
ljmp
sbb
fbld
xchg
add
jae
in
lds
mov
or
mov
fimull
mov
int
hlt
jmp
jmp
clc
xchg
add
cld
insl
popf
mov
std
je
inc
cmp
mov
incl
mov
jge
jge
sti
xor
xor
cmp
sub
jae
inc
mov
mov
ljmp
aaa
loop
cmp
cmpsl
cmp
pushf
lea
inc
in
ja
jl
xchg
mov
xor
sub
sarl
arpl
out
clc
scas
mov
add
pushf
add
mov
rcl
cwtl
push
mov
dec
fcom
repz
fbld
push
mov
fimuls
fwait
mov
mov
cld
les
jg
jg
pushl
cmp
aad
mov
clc
xor
cmp
push
clc
call
rcrb
pop
div
xor
inc
adc
push
repnz
push
out
jmp
incl
mov
rolb
mov
dec
jl
scas
mov
decl
or
cld
ret
aam
mov
ret
xor
loope
cmp
dec
int3
lahf
fs
jne
push
fimuls
les
les
dec
jl,pn
inc
jo
aam
inc
idiv
jmp
push
fs
adc
mov
fimuls
lcall
js
sub
pop
dec
cltd
in
jmp
les
popf
aas
inc
pop
mov
sub
rorb
call
jno
cmp
xchg
jnp
cmp
arpl
jp
sub
jmp
mov
jmp
stc
jl
cmpsl
mov
jnp
popf
popf
faddp
pushf
mov
push
std
popf
pop
push
sti
roll
fiadds
fistl
sub
jecxz
xchg
ret
mov
in
sub
xor
cltd
in
or
xor
lcall
ss
pop
rcll
cli
mov
xchg
add
adc
packuswb
mov
fisubs
out
fimull
push
push
es
xor
imul
call
call
cmp
or
imul
sarl
cwtl
mov
jnp
push
outsl
adc
sarb
repz
imul
fcoms
mov
call
sbb
push
cwtl
mull
in
mov
xlat
ds
jmp
add
jg
flds
enter
xchg
adc
push
sbb
call
pushf
fcomp
sub
pushf
adc
jp
xor
sub
and
push
fdivrl
lcall
jp
in
sti
sbb
mov
cmc
or
pushf
dec
out
ret
jp
pushl
mov
mov
mov
mov
lods
jp
adc
fisttps
inc
add
xchg
dec
fs
das
in
loop
lock
dec
cmp
pushf
sbb
add
push
adc
shlb
decl
jp
push
aam
mov
out
stos
xor
cmp
enter
enter
stos
pop
and
ficoml
shll
roll
jle
imul
outsl
mov
mov
dec
sbb
inc
mov
jae
incl
add
das
fs
das
mov
inc
jmp
cwtl
dec
cmp
in
ud0
call
outsl
mov
lcall
xchg
leave
push
jecxz
fisttps
lds
in
mov
test
jecxz
call
test
jae
cmp
enter
xchg
jnp
inc
sti
pop
lcall
sar
outsl
ljmp
fwait
sub
xor
add
stc
icebp
lock
addl
pop
inc
jo
ljmp
loopne
cmpsl
popa
ret
cmp
stos
cli
hlt
cltd
scas
adc
scas
jo
xor
pop
and
outsb
stos
decb
lock
cmc
hlt
enter
mov
into
nop
cmc
mov
lock
jmp
jmp
dec
adc
aam
jmp
negl
mov
mov
into
fbstp
fnstsw
outsb
xor
jns
test
fistl
fwait
not
pop
jge
add
in
repz
xlat
pushl
movsb
mov
test
push
jns
push
movsl
xchg
out
mov
add
ss
fidivs
movsl
pop
cmpsl
sub
fiaddl
das
fldcw
or
and
je
in
fwait
push
cld
ljmp
test
je
jp
jle
ljmp
lds
fsubr
fdivr
sub
js
and
jle
lahf
out
xor
js
mov
iret
inc
out
lods
sbb
cli
cmp
fbstp
lcall
fstpl
rcl
add
mov
fisubrs
cmp
lcall
test
jmp
outsl
push
cmp
mov
incb
pop
pop
stc
out
pop
out
mov
dec
mov
in
and
lock
int3
mov
cwtl
xchg
leave
out
out
sub
push
clc
rcrl
incl
js
stc
lods
xchg
cmc
xlat
clc
out
in
out
add
jb
pop
sbb
insb
adc
or
int
repnz
out
mov
add
adc
jmp
pop
cmp
mov
je
cmpb
sub
nop
lcall
xlat
es
aas
push
jnp
enter
call
out
idiv
nop
out
cli
xor
cmp
jbe
inc
add
add
mov
std
in
fisttpl
adc
ds
push
out
or
xor
jo
mov
movsb
sub
mov
test
or
push
and
mov
and
call
in
pushf
mov
fnsaves
adc
jne
outsl
sbb
pop
adc
call
pop
outsb
jnp
mov
sti
pause
xchg
jmp
adc
push
repz
decl
add
cs
mov
shl
nop
ljmp
imul
ja
push
jg
cli
adc
lods
popf
lds
out
cmp
pop
push
ljmp
inc
out
ret
fsubrs
fucomi
fwait
outsl
sbb
or
js
sbb
aas
cs
ja
daa
insb
jo
shrl
js
bound
and
popa
xor
pop
jbe
lods
inc
mov
mov
lds
sub
fistl
repz
push
fs
xchg
jne
dec
outsl
push
xchg
insb
repz
insl
shll
adc
lcall
out
jge
cltd
sub
lea
stc
xchg
adc
push
les
jns
daa
call
pushl
push
int3
insb
fcom
push
in
adc
aam
push
cmp
mov
pop
in
mov
shr
decl
call
inc
mov
dec
loope
xor
imul
call
cmp
daa
arpl
xchg
and
imulb
repnz
cmp
fstl
mov
jg
xor
pop
js
pop
out
xchg
aam
or
pop
call
sbb
dec
sbb
mov
ds
jp
xor
mov
jbe
loopne
movaps
dec
cmp
and
ljmp
jbe
clc
sti
comiss
scas
mov
sub
iret
dec
addr16
cmp
xchg
pop
mov
mov
xchg
jne
fimuls
fucomp
push
insl
xor
shrb
xor
mov
jg
shlb
jo
push
shlb
les
fsubl
shrb
movsl
fisubl
push
pop
pop
pop
hlt
decl
sahf
jne
ljmp
push
mov
je
inc
rcl
jmp
jae
xor
iret
cmp
dec
push
lret
push
pop
xor
or
ja
cld
or
jmp
insl
xchg
mov
pop
cmpsl
hlt
aad
arpl
push
jp
into
cltd
icebp
xacquire
call
or
shl
and
pop
pop
divb
cmpsb
cmp
dec
ljmp
lgs
add
cld
cmp
popf
cwtl
and
xlat
outsl
cld
cli
jg
add
mov
xchg
clc
fsubl
mov
jne
test
fwait
jb
jmp
lcall
sar
ljmp
cli
mov
sbb
jne
aad
jl
xor
pop
je
inc
adc
push
mov
dec
xchg
xlat
push
adc
dec
add
int
lock
inc
sbb
jb
cmp
mov
mov
adc
jns
shll
test
in
add
xchg
outsl
call
add
test
cwtl
test
or
out
jno
adc
pushl
test
cmp
mov
xor
leave
iret
outsb
push
sub
repnz
fs
pop
jno
mov
or
enter
mov
or
dec
push
cld
push
sbb
push
outsl
sahf
je
cmc
out
call
loopne
jg
inc
hlt
add
scas
mov
or
xor
mov
sub
call
xor
fsts
roll
mov
test
mov
fldt
jmp
mov
xor
data16
and
jp
cmpsb
lock
shlb
int3
push
out
and
int3
mov
push
push
popf
xchg
lahf
push
mov
pop
insb
xchg
inc
push
ljmp
jg
fimuls
fmulp
mov
pushl
movl
adc
mov
repz
mov
push
rep
shl
ljmp
xchg
adc
lods
xchg
repz
push
sahf
sti
mov
jecxz
je
mov
sub
fdivrs
xor
sbb
cld
xor
ljmp
decl
jg
jae
lret
scas
inc
sbb
push
pusha
cmp
or
xchg
adc
or
test
or
sub
jbe
dec
adc
sbb
push
bound
jp
and
cmc
ljmp
cmpsb
out
sub
xor
xchg
mov
das
ret
add
pusha
aas
push
fistpl
cmp
cmpsb
clc
xchg
sti
int3
and
fimull
mov
and
jae
mov
repz
inc
xor
bound
push
cs
dec
mov
adc
ss
mov
mov
shlb
incl
pop
xorb
repnz
aad
push
adc
nop
and
lret
mov
adc
jmp
adc
notb
js
and
sbb
push
ds
sbb
xchg
cmc
das
sar
shl
pop
sbb
popa
mov
push
pop
mov
cmpsb
ret
jg
xchg
xchg
push
into
inc
pop
dec
push
jmp
fwait
pop
es
sub
lods
xchg
xchg
pushl
and
adc
xor
stos
adc
push
fsubrs
jp
mov
imul
decl
push
mov
ljmp
add
sub
repnz
xor
call
xchg
icebp
nop
aas
push
sub
aas
jmp
out
cmp
mov
lods
cltd
sbb
sti
cmp
rcrl
push
fstl
jb
pop
inc
daa
loope
inc
xchg
jae
nop
inc
ja
pop
aaa
cld
incl
sub
adc
mov
out
fbld
mov
cmpsb
icebp
push
fnstenv
dec
shl
das
aaa
jg
fmul
mov
jmp
jno
jp
xor
fstps
jno
xchg
aaa
clc
psllw
xor
adc
pushl
fildll
pop
fsubp
divl
fsubrs
and
xchg
xor
cmovg
call
dec
ds
pop
in
push
cmp
push
dec
shll
or
dec
in
add
add
in
arpl
push
repnz
gs
push
shll
jo
out
xchg
jmpw
adc
xchg
or
or
sbb
sbb
inc
imul
push
or
ljmp
mov
xchg
fs
inc
lock
cld
incl
add
and
adc
lods
mov
push
and
out
sub
push
xor
loop
dec
xchg
insl
lret
lods
adc
adc
aaa
icebp
sub
jno
push
sti
in
std
cli
rorl
xchg
cmp
inc
lret
test
cmp
sub
daa
jo
cld
mov
in
cmpsl
cmp
ljmp
repnz
fwait
inc
lea
xchg
add
pop
psubb
sbb
xor
or
cmp
lock
xor
insl
push
add
ljmp
or
jg
in
cmp
xchg
cltd
in
das
mov
xchg
jp
adc
js
jb
out
int3
mov
out
push
call
pop
push
push
inc
ret
inc
decl
das
mov
subl
add
shlb
xor
ss
rep
mov
idiv
outsl
cli
call
push
adc
fwait
in
int3
dec
jp
int3
xchg
data16
xchg
add
icebp
push
jmp
push
shl
mov
dec
adc
loope
in
mov
lahf
mov
push
xchg
incl
js
fwait
dec
mov
jnp
int
nop
jecxz
pushl
jg
push
jecxz
js
or
jns
lcall
in
lock
xor
das
jecxz
jno
sub
push
movsl
pop
xchg
cs
pushl
in
int
insb
jbe
dec
mov
out
pop
xor
out
inc
push
jecxz
xor
or
jp
dec
pop
outsl
out
scas
outsb
addb
imul
dec
sbb
ljmp
test
and
mov
pop
lock
jo,pn
sub
scas
ficompl
jle
or
jmp
push
xchg
fisttpll
in
mov
and
ror
push
xchg
addr16
ja
push
hlt
decl
rcrl
or
xlat
jo
sub
rsqrtps
sub
sub
mov
aad
pop
cmp
leave
add
leave
leave
sub
pop
or
push
dec
outsl
int3
cs
cli
mov
cli
sbb
and
pop
lods
stos
cwtl
cmp
pop
leave
add
lods
lds
ljmp
jmp
push
pop
and
xchg
iret
rclb
loop
push
push
push
outsl
cmp
insb
les
mov
mov
mov
leave
jl
es
push
jne
lret
xchg
xchg
mov
xchg
mov
lret
pop
push
push
outsb
aaa
and
pop
xor
push
rorb
pop
cmc
jne
pushl
push
es
xchg
inc
mov
ljmp
fdivp
pop
fbld
outsb
mov
or
lock
ffreep
scas
lcall
incl
lods
mov
xor
lock
cld
cmpsl
in
and
sbb
js
and
mov
in
pushf
pushl
cli
popf
push
out
fldenv
adc
jae,pn
addr16
fistpl
sbb
adc
pusha
clc
sbb
jp
lcall
repnz
xor
pusha
das
fisubrs
int3
in
adc
pop
enter
adc
add
outsb
xor
push
push
xor
enter
push
aad
mov
lret
push
sti
roll
xchg
outsb
pop
dec
cmc
and
push
aam
incl
sarb
sarb
outsb
std
les
inc
jae
push
iret
push
sahf
mov
in
decl
cld
insl
dec
pop
push
mov
xor
add
add
mov
pushl
sub
mov
push
rep
adc
adc
scas
hlt
test
cmp
pushl
test
pop
in
sar
iret
nop
mov
test
es
insl
dec
push
repz
jae
shrb
cmp
pop
test
orb
bts
dec
xchg
xchg
pop
imul
in
fildl
out
cwtl
sbb
fwait
int
xchg
lret
dec
fcomps
fdivs
lcall
add
loopne
pop
mov
sub
add
dec
nop
push
stos
dec
nop
fs
fisttps
shl
jb
mov
jne
jne
shrd
sbb
dec
loopne
pop
cmpsb
jle
or
scas
cli
decl
jb
mov
nop
lock
enter
sub
jg
ljmp
add
push
mov
adc
insl
mov
push
fsubrs
cmp
call
push
sbb
pushf
lea
dec
push
ds
pop
ljmp
inc
mov
lea
ljmp
loop
jb
ficoms
pop
mov
orl
pop
mov
jne
sbb
push
inc
or
out
mov
or
insb
push
push
test
jge
bound
add
ljmp
les
xor
push
jmp
es
insl
xchg
js
fnstsw
mov
insb
or
or
push
sar
add
cwtl
xchg
push
insb
cld
mov
mov
mov
add
and
adc
jne
inc
xor
mov
inc
or
sub
jl
decl
push
push
lret
or
mov
shlb
mov
pop
inc
adc
insb
pusha
pop
in
jmp
push
insb
cmp
jg
test
and
aas
test
xchg
xor
or
cmp
pop
jo
cmpsl
sbb
fistpl
push
and
movsb
or
movsl
mov
das
mov
scas
rorb
mov
jmp
xchg
pop
imul
pop
inc
iret
or
cli
cmpsl
int
add
mov
mov
jmp
fsubl
or
popa
jecxz
cmp
sbb
lret
int
in
loopne
movsb
std
das
mov
call
sbb
pop
nop
sub
not
clc
imul
inc
cmovo
mov
and
jnp
lcall
das
lods
mov
jnp
dec
pop
fcompl
shlb
pop
cltd
and
aad
xor
lahf
and
sbb
mov
xor
stos
xchg
push
scas
or
pop
shl
cmpsl
or
mov
imul
push
int
test
mov
repnz
pop
xor
incl
pop
into
loope
cmp
pop
imul
int
gs
inc
movsb
insb
das
lods
rolb
adcl
pop
adc
mov
push
xchg
add
push
mov
int3
fwait
movsb
pop
mov
test
stos
arpl
mov
stos
pop
pop
jo
cmpsb
adc
sub
outsl
adc
and
mov
adc
in
cmpsl
adc
das
mov
mov
cwtl
in
add
repz
loop
mov
iret
push
int3
popf
add
shrl
jb
data16
add
push
mov
cmpsb
ljmp
pushf
cmp
jmp
cwtl
in
push
icebp
and
movsb
push
nopl
decl
cmpsb
in
aad
push
cmp
and
inc
fs
pop
test
ljmp
mov
sub
pop
push
lock
cld
xor
mov
push
mov
int3
lcall
std
imul
jle
pushf
mov
cmpsb
call
and
jo
fisttpll
ja
mov
mov
repnz
scas
cs
call
lods
xor
imul
outsl
ss
cmp
iret
xchg
gs
out
daa
mov
rcl
mov
outsl
adc
push
push
adc
outsb
and
imul
movsb
ds
ljmp
xchg
fistpl
jo
movsb
addr16
push
dec
outsl
je
push
inc
iret
xchg
movsl
cmp
sub
cwtl
js
pop
insb
push
and
outsb
xchg
xchg
dec
insl
fwait
push
iret
decl
hlt
cmc
fisttps
mov
movsl
call
cmp
pop
sub
scas
outsb
push
andl
mov
cmpsl
das
fldcw
frstor
pop
test
ljmp
xchg
jmp
mov
cmpsb
and
xchg
sub
sbb
cmp
insl
jae
movsl
push
mov
lcall
insl
aam
call
and
inc
repz
scas
orl
outsb
stos
cltd
ljmp
int
lods
push
dec
outsl
loopne
leave
jmp
dec
icebp
hlt
leave
dec
out
inc
imul
hlt
push
addl
call
or
movsl
mov
dec
in
sub
adc
adcb
dec
xchg
loopne
das
cli
ljmp
and
dec
iret
mov
ja
into
scas
add
mov
xchg
mov
int
imul
scas
in
push
lods
in
cmp
std
sub
jle
fwait
mov
pop
movsb
inc
aad
jmp
das
cli
jg
xadd
out
into
test
or
fs
sbb
in
das
in
std
dec
fsubs
cmp
xchg
fimuls
and
cmovnp
into
cmpsl
and
jmp
pop
adc
mov
inc
fsubs
cmp
mov
inc
inc
dec
clc
push
test
sub
repnz
mov
pop
pop
ljmp
mov
paddsw
mov
les
add
lods
adc
ljmp
mov
nop
out
push
into
rcrb
jno
and
decl
inc
pushw
xchg
lret
scas
fcmovu
lds
jns
or
pushf
mov
adc
iret
ud0
imul
ljmp
mov
adc
out
dec
cmc
and
or
enter
inc
sbb
test
jno
xchg
push
addr16
hlt
mov
call
sub
cld
rorl
icebp
popa
xchg
lcall
mov
rcrl
das
addr16
inc
mov
shlb
cli
lret
imul
xchg
xchg
mov
adc
lods
pop
test
add
jmp
insl
pop
xor
out
fwait
push
jg
mov
jo
enter
jecxz
idivb
push
mov
jp
lea
mov
inc
cs
jg
roll
incl
mov
mov
sbbl
cmpsb
test
sti
sub
ljmp
xlat
out
push
adc
js
loopne
out
cmp
push
loope
push
push
cld
data16
push
jp
sub
orl
pop
inc
pop
gs
cmp
cmp
mov
mov
pop
cli
inc
in
xor
repz
cmp
adc
popf
lahf
jg
ljmp
add
push
mov
jle
mov
aas
xor
or
repz
ljmp
aas
inc
loopne
xchg
mov
cmp
into
jg
std
dec
jg
lahf
int
push
sbb
xchg
mov
dec
in
mov
pop
incb
imul
dec
mov
and
mov
mov
decl
loop
es
jg
fldl
jg
lcall
xchg
push
dec
mov
adc
in
jl
mov
das
mov
push
int
out
xchg
inc
dec
cmc
xchg
sub
cmp
ljmp
push
addr16
adc
pushf
ficoms
inc
adc
lods
mov
outsb
dec
adc
pop
push
popa
iret
push
push
xor
decl
out
in
push
fildl
fldenv
jge
xor
les
fbld
call
and
mov
mov
mov
mov
push
mov
pop
jg
or
sahf
xchg
mov
xor
jbe
incl
cld
pmulhw
vmovntps
leave
out
dec
cmp
xchg
jae
add
sub
dec
mov
cli
das
clc
jb
enter
add
imul
cmc
arpl
shll
cld
pushl
xor
dec
movb
stos
push
sub
mov
ljmp
movsb
pop
xor
gs
jne
and
sbb
xchg
adc
stos
and
pop
and
lcall
mov
cld
xchg
das
mov
sbb
xor
and
ljmp
out
push
jl
repz
popa
pop
cmp
fwait
cltd
cli
jnp
addr16
std
outsl
ljmp
add
ret
xchg
fwait
repnz
fiadds
shrl
push
scas
les
fimuls
push
mov
jg
mov
jbe
inc
sub
dec
fs
inc
and
dec
xor
and
ljmp
xchg
test
loop
int
and
test
sub
in
push
std
sub
jbe
test
arpl
sbb
mov
xchg
sub
mov
call
xchg
pop
sti
push
pop
pop
mov
dec
add
mov
or
push
jae
fmulp
lea
scas
mov
ljmp
xchg
shl
dec
mov
mov
jo
sub
sbb
jg
int3
jb
test
xchg
push
adc
lea
testl
xchg
outsl
test
adc
mov
xor
ljmp
jg
aam
scas
mov
xor
pop
mov
cltd
enter
lcall
xchg
dec
push
xchg
mov
push
add
dec
mov
repz
jns
sahf
jle
push
out
push
incl
add
dec
cmpsb
add
insb
xor
orl
fs
into
fs
dec
and
int3
lods
inc
inc
push
sarb
pop
add
outsl
icebp
test
mov
mov
bound
jo
lea
pushf
rorl
bound
popa
ret
das
cli
cld
in
call
mov
ja
pop
cmc
in
pushf
xchg
lods
pop
sub
adc
lcall
addr16
add
cmpsl
leave
cmp
add
adc
mov
daa
incl
mov
and
cmp
andb
ja
pop
int
cwtl
dec
push
jae
adc
inc
dec
ffreep
and
movb
sub
add
xor
sbb
cmp
mov
hlt
dec
or
lahf
incb
push
sahf
or
jae
fidivl
sbbl
inc
repnz
mov
dec
dec
push
xchg
out
mov
mov
call
xchg
shrb
es
das
cmpsl
ljmp
arpl
pop
xor
shlb
out
mov
jmp
xor
mov
mov
rorl
inc
push
pop
stc
dec
inc
jae
add
xchg
arpl
mov
jns
push
sbb
mov
add
jg
jg
mov
fisttpll
jle
psrlq
sbbb
stos
test
lock
jle
cli
or
scas
cwtl
xor
fdiv
mov
decl
inc
movsl
xchg
cmc
push
mov
pop
xchg
sti
jle
adc
jae
adc
sbb
or
shl
lret
leave
xchg
pop
inc
xchg
scas
jg
push
lock
jae
sub
xchg
mov
out
mov
js
mov
xchg
lea
push
and
add
push
pusha
std
psubusb
decl
cwtl
into
arpl
mov
dec
sub
lea
out
adc
dec
leave
push
push
jmp
xchg
cwtl
cmp
fs
je
shl
cwtl
lahf
jne
cwtl
ja
adc
jle
xorl
lcall
cmpsl
sub
call
add
xchg
inc
add
aaa
xchg
daa
lods
iret
cld
incl
shlb
mov
pop
aas
dec
add
mov
iret
jbe
lods
pop
jmp
lcall
movsb
add
mov
xchg
insb
and
jg
call
addr16
scas
jns
cmp
sbb
cmp
movsl
sub
add
push
or
mov
cmpsl
je
or
mov
xchg
mov
mov
xor
sti
jg
lods
pop
push
scas
subb
sub
jb
pop
test
xor
dec
adc
decl
out
ficompl
push
inc
cmpsl
xor
mov
sbb
push
push
popa
cmpsl
hlt
sbb
lock
sbb
decl
test
jmp
xor
xchg
jp
das
jo
sahf
mov
out
outsl
or
ljmp
mov
add
pop
or
movsb
sub
dec
cltd
add
lea
leave
xchg
jb
fildl
mov
movsl
xor
jne
mov
out
mov
movsb
push
and
lock
mov
mov
add
lock
dec
push
mov
xor
cmp
fldt
jo
loope
mov
je
out
adc
sbb
je
fists
sub
or
sub
mov
test
popa
jg
rorb
xchg
mov
sbb
fwait
es
addb
incl
dec
pop
mov
repz
inc
jecxz
je
xchg
sar
lcall
sbb
or
adc
aas
sbb
and
xchg
int
jne
add
incl
pop
xor
or
fidivrs
lods
xchg
fstps
or
fisubl
sarb
adc
and
and
pop
movsb
inc
lock
faddp
fnstenv
mov
mov
ljmp
xor
cmp
stos
sti
gs
sub
nop
xor
cli
fstps
inc
mov
mov
pop
mov
movsb
das
popa
ljmp
push
cmp
into
jns
cmp
jl
aad
mov
sub
fidivrs
dec
inc
push
ret
mov
les
xor
jmp
pop
pop
adc
inc
mov
jl
inc
ret
pop
shlb
test
and
xchg
data16
das
pop
incl
les
xor
fcomps
dec
pop
push
cmp
cmp
xchg
cmp
adc
jns
sbb
jge
mov
xor
cmp
fcomip
sti
push
stos
enter
loopne
add
xor
xchg
pop
xchg
fisttpll
jle
xchg
insb
jle
incl
dec
pop
add
xchg
ficomps
fstpt
shlb
or
fistps
cmp
outsl
fistpll
mov
mov
push
adc
mov
call
sub
sub
lea
lahf
lds
inc
in
fcomip
pop
dec
push
fisubrs
jne
mov
xor
imul
or
xor
inc
cld
call
sahf
mov
xor
loop
negl
sbb
outsb
fisubrl
mov
add
dec
fists
push
adc
mov
sub
push
cmc
test
push
aad
rorl
les
pop
mov
test
xchg
daa
add
lcall
jle
push
das
call
cmc
rolb
mov
mov
lahf
xor
and
mov
stos
pop
mov
mov
pop
out
clc
icebp
clc
dec
xchg
rep
fwait
dec
xor
iret
xchg
xchg
repz
jmp
aas
cmp
js
push
push
jnp
cmpsb
jp
xchg
into
outsl
jne
xor
cltd
call
and
mov
scas
jb
sbb
enter
push
sarl
jae
adc
cli
mov
dec
add
mov
sbb
fcmovne
movsl
adc
call
ljmp
xchg
rcrb
std
adc
sbb
ds
push
sarb
pop
and
cmp
sub
sub
ss
test
dec
push
lret
ds
lods
xchg
rcrb
mov
and
sbb
out
jg
pushl
lds
es
std
repz
rep
fcomp
push
inc
aam
out
aas
enter
call
loopne
adcl
or
adc
push
inc
push
jb
mov
mov
mov
rcl
inc
jmp
rolb
popa
xchg
test
dec
rcr
mov
dec
dec
loopne,pn
lcall
mov
and
mov
popf
std
shrl
jb
ffree
cmp
lods
pmuludq
mov
sbb
pop
std
cli
push
sti
repz
loopne
fistpl
stos
jmp
fnclex
xchg
outsl
push
repnz
lahf
out
js
pop
lret
cwtl
inc
push
mov
fwait
mov
pop
leave
sbb
push
shr
sub
sub
scas
and
repz
pop
cwtl
lea
lcall
jae
cmp
mov
mov
push
adc
loop
sbb
inc
xor
jg
mov
cmp
ret
mov
popf
xlat
push
jno
or
insb
mov
aad
mov
js
fs
call
lds
out
and
pop
cmp
lock
cmp
movsl
lods
test
mov
lods
jmp
out
icebp
push
mov
jb
es
cmc
iret
loop,pt
xchg
lcall
incl
fsubl
ljmp
inc
add
xchg
cs
call
cmpsl
push
std
ljmp
sub
int
sub
outsl
and
es
adc
stos
mov
inc
mov
aam
lret
push
add
xor
es
cmp
leave
outsl
jp
in
loop
sub
test
jb
loope
data16
pop
insl
pop
incl
mov
mov
rcrb
fstpt
dec
mov
jg
pushf
adc
sbb
cmp
jns
pop
inc
sub
cmp
leave
mov
incl
xchg
je
adc
and
pop
fs
sub
insl
je
outsb
ficomps
lock
arpl
xchg
cmp
js
pop
ljmp
sti
in
jl
jae
std
jecxz
inc
sbb
das
pop
shl
cmp
daa
cmp
loopne
fstpt
sub
ret
fisubs
mov
stc
sbb
imul
stos
incl
push
nop
jbe
outsb
sub
lahf
scas
pop
mov
clc
pop
mov
mov
pop
push
call
sbb
ret
inc
cmp
jmp
scas
xchg
loopne
outsl
adc
pop
sar
pushl
popf
scas
dec
sahf
in
fidivrs
in
inc
dec
decb
pop
outsb
aaa
pop
push
push
pop
pop
outsb
lcall
out
es
push
mov
rcr
add
jno
fbstp
xchg
pushl
sbbl
push
cwtl
repz
mov
sub
xor
ljmp
ss
out
pushf
push
adc
popf
xchg
out
mov
jmp
or
cmp
adc
dec
rcrb
mov
add
add
call
in
pushf
jb
inc
je
lahf
mov
das
fimull
jmp
addr16
inc
pop
jne
push
jg
mov
pushf
pop
data16
inc
dec
fidivl
lret
mov
pusha
test
cmp
cmpsb
xchg
mov
jp
mul
pop
mov
into
enter
jmp
adc
fsts
xchg
fnstenv
cld
pop
adc
loope
popf
fisubrl
inc
add
outsl
repz
push
fcomip
call
stos
add
dec
inc
aam
es
sahf
push
cmc
mov
repnz
cs
call
rcrb
xchg
xchg
rcll
sub
mov
sbb
adc
mov
inc
nop
dec
es
das
cli
aad
xor
jno
into
ja
mov
dec
mov
lock
push
mov
std
mov
pop
in
loopne
sub
sub
cmp
fsts
stc
sub
loopne
clc
cwtl
ja
cmc
xor
loope
dec
shrl
test
negl
mov
xor
clc
adc
ret
mov
or
and
jg
out
xchg
ret
sub
dec
adc
ficoml
test
cli
out
in
xchg
repnz
xchg
push
pop
or
aam
jno
sub
in
stos
mov
decl
addr16
bound
xchg
mov
jno
sahf
jo
iret
push
sahf
hlt
cmpsb
jg
ljmp
shll
cmp
dec
sub
add
mov
pop
jp
and
jmp
or
and
insl
nop
jmp
adc
mov
sub
xchg
cmp
or
pop
mov
push
sub
jmp
sub
sbb
lods
fiadds
dec
mov
push
fimuls
adc
and
push
hlt
mov
xchg
fs
sub
pop
cltd
in
lods
mov
and
incl
sbbl
and
and
sbb
lahf
push
adc
and
inc
or
enter
in
pushf
or
jne
out
test
movsl
fistps
pop
in
fcompl
cld
jne
test
incl
movsb
or
adc
ljmp
fbld
mov
jno
cld
imul
in
mov
xor
pushl
aad
ljmp
es
lock
sbb
enter
fs
pushl
clc
das
add
data16
xchg
jno
cmp
mov
aad
xor
out
jae
clc
adc
mov
dec
lds
xchg
xor
das
pop
movsb
push
adc
mov
test
ljmp
push
aam
adc
sub
div
inc
xor
loope
bnd
lret
ljmp
cli
dec
jnp
jge
push
aas
jns
dec
jp
leave
mov
mov
push
sub
cmc
fcmovbe
clc
stos
add
call
sub
jb
insl
mov
mov
fldt
xchg
cli
push
cli
repz
push
sub
mov
ret
decl
jne
mov
orl
xor
shlb
mov
out
mov
mov
add
push
mov
ja
addb
sbb
mov
js
mov
xchg
fwait
lahf
imul
mov
in
xor
repz
lcall
decl
ja
call
shll
xchg
mov
mov
jmp
lcall
repnz
mov
adc
decl
call
in
stos
fisubrl
ljmp
nop
mov
jbe
push
xchg
jmp
ljmp
mov
push
hlt
fidivl
int3
jge
aaa
cs
pop
std
jg
je
push
ja
push
pusha
push
dec
sbb
push
jae
xlat
or
fwait
into
loopne
lock
push
inc
int
or
push
stc
xchg
push
jno
xor
in
das
in
ss
aaa
iret
negb
nop
nop
pop
and
ljmp
ret
jl
push
mov
xlat
or
push
jp
aas
push
incl
push
pop
pop
jns
inc
pop
push
jo
mov
xlat
ljmp
xchg
cmc
adc
pushl
dec
cmpsl
push
or
in
mov
mov
scas
sub
mov
xor
lock
fdivp
incl
adc
sub
xor
xchg
insb
push
mov
xchg
xor
mov
adcb
or
cmpsl
repnz
rcll
jmp
cli
arpl
or
lock
push
scas
rcrb
in
jb
sti
bound
push
aaa
lods
ss
cmp
xor
dec
clc
push
je
xchg
dec
inc
jne
jmp
es
lock
stc
shl
stos
cld
out
dec
dec
divl
adc
leave
mov
jp
adc
lea
iret
hlt
xchg
scas
sub
jmp
aam
or
push
xor
or
mov
cmp
out
outsl
cli
mov
mov
lahf
cmc
adc
ljmp
test
lret
xor
jmp
out
sbb
inc
mov
xor
aam
call
mov
sbb
xchg
mov
scas
jg
adc
adc
out
call
xchg
rorl
jb
jg
sti
xorl
popf
cmp
mov
cmp
cmpsb
mov
insb
sbb
daa
scas
sub
mov
add
cmp
pushl
xor
scas
nop
push
repz
push
dec
out
mov
adc
mov
aad
cmpsb
scas
and
into
scas
inc
xchg
mov
repnz
xor
jg
jg
and
pushf
or
mov
imul
cmpsb
fnsave
mov
jge
ss
inc
mov
push
mov
das
or
ljmp
pop
push
mov
add
pop
sub
xor
mov
xchg
mov
popa
mov
popf
scas
or
xchg
xor
sbb
incl
push
cmp
ret
jns
scas
cmp
mov
xor
aad
out
enter
jge
pushf
aam
call
data16
jnp
inc
push
sub
rclb
adc
pop
roll
ret
adc
mov
pushl
sub
cmp
sub
xor
adcb
je
jg
decl
imul
cmpsb
jg
mov
out
push
pop
into
incl
push
int
or
pushf
push
pushf
pop
imul
fisttpl
jo
loop
sub
jmp
xor
mov
rcrb
add
push
sub
popa
xor
push
jg
add
and
rorb
insb
mov
cmp
push
jecxz
xor
jmp
decl
adc
sub
pop
sbb
jg
test
dec
popa
mov
out
sahf
cwtl
in
pop
push
sbb
out
jl
in
pop
ficoms
adc
mov
and
lea
sub
sub
xchg
inc
cmp
inc
mov
and
xchg
xor
jp
xor
adc
cmpl
jl
xchg
xor
incl
sbb
repz
fs
or
jae
and
mov
aas
xor
mov
roll
pop
cmpsl
cltd
jb
mov
imul
fdivr
ljmp
repnz
movsl
adc
aas
inc
lock
sbb
shlb
ljmp
pop
loope
xor
or
xchg
shlb
or
loopne
sbb
xor
jns
add
xor
int
sbb
xchg
xchg
lahf
adc
aas
xchg
idiv
call
sbb
xchg
xor
les
push
aad
in
icebp
out
push
aas
out
push
and
inc
mov
in
mov
push
xchg
push
adc
jns
xchg
lcall
and
pushl
lods
mov
pop
cmp
das
jmp
mov
sarb
ljmp
mov
or
dec
rcl
xor
aas
and
or
push
nop
jmp
xchg
imulb
int
xor
outsb
xor
jbe
scas
aas
mov
push
jo
and
or
xor
lods
mov
mov
jecxz
mov
or
cmpsl
or
ja
cmpsb
or
pop
or
daa
scas
xor
nop
push
int3
sub
jg
adc
xchg
inc
push
or
cmc
in
jmp
out
jno
adc
xchg
cmp
test
xor
fsts
cmp
pop
mov
fwait
push
out
scas
or
out
clc
int3
rcll
push
adc
ljmp
icebp
xor
push
xor
ret
loop
or
cld
pop
mov
cli
out
xchg
aaa
xchg
jp
adc
dec
cmp
lea
out
push
xor
pushf
xchg
cmp
jbe
cmp
insb
pop
test
jno
mov
mov
repnz
mov
imul
idiv
cmp
mov
cli
pop
sub
mulb
and
cld
xor
dec
rorl
call
stos
sti
xchg
push
fst
iret
nop
adc
dec
xchg
cs
pop
or
dec
std
les
sbb
dec
repz
stos
dec
insb
jge
test
sub
xchg
ljmp
in
mov
inc
inc
cmp
out
cmpsl
adc
mov
dec
insl
adc
lcall
adc
add
repnz
jecxz
jecxz
mov
push
xor
jmp
incl
nop
test
addr16
jecxz
test
cmp
push
dec
imull
dec
cmpsb
xchg
mov
jo
and
and
xor
int
in
lcall
inc
or
mov
ds
xchg
jbe
cmpsb
es
jl
xor
xchg
sub
adc
push
xorl
mov
aaa
inc
push
int3
aam
scas
shrb
pop
imul
xchg
leave
lds
xor
mov
mov
xchg
dec
addr16
inc
mov
stos
stos
inc
xor
jae
aaa
fs
inc
outsl
clc
pop
loopne
ret
in
lret
jmp
out
test
je
into
mov
dec
xchg
popf
jno
and
loope
loop
dec
je
sub
das
jl
dec
sub
dec
les
es
pushl
js
aad
mov
pop
lods
mov
mov
xchg
iret
inc
and
jg
dec
fs
iret
inc
push
sbb
mov
mov
and
cmp
lret
lods
adc
out
fldt
fldcw
jne
push
loop
iret
dec
adc
xor
xchg
adc
push
jo
out
add
cmpsl
jg
aad
xchg
out
jb
lret
stc
lods
dec
fldenvs
sbb
xchg
dec
mov
sbb
push
dec
cmp
and
call
mov
mov
outsl
xchg
inc
mov
addb
and
xor
shlb
inc
repz
ljmp
add
enter
and
xchg
and
mov
push
lods
and
bound
push
xor
dec
lahf
jp
add
cmp
std
cs
or
out
decl
jle
shl
push
test
inc
push
lods
ror
ljmp
ret
call
push
mov
mov
inc
cwtl
mov
out
lret
ljmp
push
orb
jns
sub
jae
mov
mov
and
icebp
call
pop
add
pop
sbb
test
and
sub
push
push
fcomip
insl
shll
and
pusha
shll
cltd
test
and
mov
cmp
sbb
jl
sub
lret
mov
jl
mov
pop
lahf
xchg
mov
xchg
subl
decl
and
pop
fldenv
xor
push
lods
sbb
xor
dec
ja
ljmp
mov
out
stc
daa
insl
xor
pop
out
push
movsb
mul
sub
or
sbb
decl
cs
stos
push
sbb
xor
das
lods
mulb
cwtl
rcl
gs
sub
inc
lods
xor
jae,pt
pusha
mov
mov
cs
scas
sbb
sub
and
nop
pushl
decl
xor
jne
mov
pop
inc
pop
int3
pop
mov
xor
insw
mov
xor
pushl
syscall
call
mov
clc
dec
dec
lcall
mov
push
cmp
mov
push
inc
aam
pop
push
stos
movsl
cs
bound
xor
ljmp
movsb
sub
push
cmp
fidivrl
push
ljmp
fisttps
ss
sbb
dec
into
xor
add
shrl
mov
push
dec
dec
lcall
in
int
loope
cmc
in
enter
dec
dec
xchg
and
std
filds
push
mov
bound
into
xor
inc
jae
mov
push
jmp
decl
outsl
sti
jnp
or
lods
push
push
sub
cmpsl
mov
and
jle
mov
sub
push
sub
adc
ljmp
and
in
das
mov
test
dec
sub
jge
sub
adc
cmc
decl
add
enter
movsb
sub
mov
aaa
loop
dec
stos
scas
dec
inc
lock
lcall
shlb
fdivl
cmp
aad
rolb
arpl
decb
repz
dec
pop
testl
fmulp
jno
insb
mov
mov
and
jmp
jo
hlt
call
push
xchg
scas
pop
lret
mov
and
out
int
enter
mov
pop
pop
aad
aas
outsl
mov
scas
scas
scas
push
xchg
cmp
cmpsb
mov
sbb
enter
ret
jno
pop
scas
in
xlat
xor
adc
lcall
scas
mov
lahf
inc
lods
push
cmpsb
in
fmulp
mov
pushf
push
addb
mov
xor
pop
add
out
stc
inc
inc
cwtl
daa
insb
sub
lcall
jmp
shlb
stos
adc
cmpsl
gs
stos
daa
mov
scas
imul
dec
sub
dec
cmpsl
jo
sbb
lret
pop
fxch
adc
outsb
in
adc
imul
ljmp
repnz
inc
shrl
jmp
cmpsl
insl
scas
jmp
iret
push
cmpsb
cmpsl
push
jmp
inc
insl
push
es
test
cld
mov
sbb
lret
ror
fnstenv
lret
incl
sub
mov
push
fs
dec
insb
addr16
pop
mov
sub
js
cmpsl
jbe
dec
iret
es
and
les
and
dec
lea
jmp
ljmp
push
and
pop
xor
ds
fdivrl
outsl
mov
into
dec
cmp
outsl
clc
jmp
fsubs
outsb
sub
push
insl
mov
imul
push
sub
decl
and
xor
les
inc
call
outsb
lahf
jno
insl
lahf
push
cmp
push
scas
sub
or
pminub
xchg
cltd
dec
sub
push
mov
sbbb
cmp
pushl
ljmp
jb
test
jns
sub
cmpsl
cmp
insl
jns
addl
xchg
jo
je
imul
jp
hlt
sub
cmp
jnp
and
js
in
xchg
jb
test
mov
mov
rcll
stos
cmp
ljmp
jne
dec
jb
jno
incl
mov
insb
imul
push
lahf
xor
dec
sbb
lea
xor
lea
call
into
adc
pop
sub
dec
pop
cmp
repz
xor
repnz
jnp
add
inc
imul
jecxz
pop
dec
mov
pop
rcr
cmp
mov
pop
or
ret
inc
test
incl
das
cs
out
repz
outsl
xlat
jp
repnz
pushf
rcrl
xchg
repnz
jb
testl
jnp
imul
aad
inc
sub
xchg
fucomp
mov
out
push
stos
enter
call
adc
inc
mov
aad
jbe
or
dec
pop
out
jle
mov
dec
out
sbb
call
testl
pop
jle
mov
xchg
andl
xlat
jmp
in
adc
cmp
movsb
sub
call
cwtl
test
xchg
add
fidivs
movsl
js
adc
ljmp
das
mov
sti
ja
jmp
mov
mov
popa
jo
dec
mov
sub
out
shll
jne
out
cmp
call
jp
clc
jmp
outsb
fidivrl
push
cmp
scas
push
mov
lock
enter
dec
decl
jge
push
les
mov
dec
in
daa
dec
adc
jmp
daa
lock
dec
sub
data16
jno
loopne
je
ror
sbb
adc
je
inc
pop
icebp
incl
jne
adc
sarb
dec
push
mov
push
ljmp
add
mov
jmp
loop
and
adc
popa
subl
cli
add
nop
leave
adc
int
out
push
pop
pop
cli
pushl
inc
add
xchg
mov
xchg
inc
jns
dec
das
clc
fistl
push
xchg
mov
mov
inc
and
adc
subl
imul
xor
jp
mov
or
nop
or
leave
sub
or
push
ret
fwait
or
cld
push
adc
mov
inc
mov
push
push
arpl
out
jb
pushw
stos
loop
test
subl
and
daa
scas
xchg
jp
decl
mov
rorl
leave
and
pminsw
mov
xchg
sarl
fsts
call
xchg
out
sub
add
loopne
sbb
ret
mov
popf
adc
test
lret
subb
lcall
pop
bound
and
cwtl
sub
xchg
lcall
cmp
sbb
decl
fidivs
dec
clc
pop
inc
hlt
out
test
add
sub
mov
pop
xchg
xor
scas
incl
mov
andb
pop
pop
jnp
xchg
xor
mov
dec
cli
inc
mov
adc
adc
pop
or
cld
ljmp
adc
add
mov
scas
xor
movsb
push
inc
subb
pop
pop
sbb
cmp
incl
jae
sub
adc
in
xor
adc
sbb
sbb
cmp
adc
clc
lret
ret
rcrb
fs
mov
andb
pop
cmp
jg
sub
xor
das
mov
dec
lahf
jbe
repz
push
xor
dec
in
pop
add
cmp
adcl
aad
scas
mov
sub
pop
cmp
lcall
lock
mov
mov
and
aas
cli
cmp
adc
inc
cli
mov
fidivrs
sub
mov
or
gs
subl
mov
mov
mov
fwait
stos
xchg
sub
aaa
outsb
rolb
jg
xor
add
imul
push
fbstp
dec
call
xor
leave
sbb
xor
mov
add
out
push
adc
jns
inc
pushl
push
mov
xchg
je
stos
pop
in
jmp
cmp
dec
enter
add
mov
xor
incl
xor
push
sti
insl
loop
or
cld
mov
imul
lds
ljmp
fwait
in
mov
sub
mov
outsl
je
jmp
out
dec
and
repnz
xchg
jae
adc
ret
daa
sub
add
sbb
xor
lcall
mov
gs
adc
rcrb
dec
les
dec
orl
mov
jmp
inc
sub
int
pop
xchg
jecxz
leave
cli
xor
cmpsb
mov
repnz
pop
pushf
cmp
test
cwtl
fisttps
test
icebp
jb
aaa
adc
leave
testl
push
jmp
lods
daa
icebp
inc
js
push
mov
call
je
shr
sub
incl
shrd
jae
lcall
sub
frstor
inc
mov
mov
rorl
or
out
clc
sub
ret
add
xchg
imul
xchg
je
xchg
sbb
jg
stos
incb
push
scas
out
in
jo
xor
imul
dec
das
xchg
das
mov
add
call
inc
stos
dec
xchg
jno
mov
adc
mov
cwtl
pop
xor
xchg
mov
aam
jg
mov
mov
sub
sysenter
dec
scas
push
jbe
or
add
push
xchg
decl
rclb
into
test
xchg
jge
xchg
xchg
mov
push
xor
dec
ljmp
ljmp
xchg
dec
inc
rcr
out
sub
push
xchg
insb
mov
ret
xlat
stos
inc
jp
jbe
lods
or
scas
mov
inc
outsl
xor
mov
ljmp
sbb
xor
xchg
or
and
jb
and
into
inc
push
fiadds
ljmp
faddl
repnz
mov
enter
leave
dec
and
insl
sub
ljmp
std
das
pop
incl
push
sbb
stos
rol
fcomp
arpl
inc
jmp
sub
add
jg
jnp
test
rcrb
xchg
sbb
and
mov
popf
rolb
pusha
out
mov
faddl
scas
test
in
sub
stos
push
mov
cmpsb
enter
jp
das
mov
jmp
cmp
idiv
add
inc
das
lods
or
fnstcw
es
fldt
mov
cmp
sub
lods
push
jbe
stos
jae
mov
push
imulb
lcall
dec
mov
or
xor
pop
mov
add
scas
test
sub
push
cld
inc
jge
into
push
push
mov
sahf
outsb
ficoml
cmp
fistpll
lods
call
mull
xor
jno
sub
mov
pop
scas
lods
shlb
jp
gs
or
das
mov
sub
mov
and
std
or
mov
adc
ds
mov
scas
arpl
xchg
pop
incl
stos
leave
icebp
inc
sbb
sbb
xor
xchg
lcall
pop
xor
shrl
sbb
pop
xor
jb
xor
mov
data16
xorw
scas
pop
lock
lcall
push
insl
movsb
out
push
inc
gs
scas
cmpsl
xlat
jge
cmp
jne
sbb
mov
testl
ljmp
movsl
jae
inc
sbb
jge
adc
test
test
call
add
add
cltd
adc
sbb
hlt
sub
cwtl
pop
xlat
jle
scas
adc
jmp
sbb
and
int3
pop
scas
shlb
sbb
mov
nop
lret
xor
dec
xchg
in
jge
shll
popf
sub
sar
scas
mov
ds
cmp
scas
cmpsb
das
or
in
mov
out
xchg
outsl
movsb
mov
shr
xor
push
push
inc
lcall
aaa
roll
xchg
shl
pop
sub
adc
in
pop
cmc
sarl
inc
lcall
ret
inc
jbe
lods
test
jbe
cli
in
sbbb
mov
mov
jns
inc
nop
mov
sub
mov
lcall
jge
stos
fcoml
xbegin
fildl
pop
cmpsb
jmp
xchg
lcall
inc
clc
repz
test
mov
push
stc
push
mov
outsl
ss
movhps
xor
ret
ja
cmpsb
fdivp
inc
clc
lret
pop
js
mov
or
mull
out
jnp
sub
rorb
mov
push
add
stos
push
jmp
lcall
lods
jb
sub
xchg
iret
and
mov
xor
lds
insl
cmp
push
testl
flds
xchg
in
lret
lds
aaa
mov
lods
mov
in
das
push
das
xor
mov
mov
push
push
cltd
aaa
pop
fists
icebp
dec
sub
decl
mov
leave
xor
pop
aaa
push
mov
and
aaa
loope
jbe
jg
mov
mov
scas
outsb
cmpb
add
push
orl
loopne
clc
ljmp
xor
inc
sti
jg
out
jle
and
mov
rclb
in
lahf
lods
sub
mov
sub
stos
nop
jmp
ds
nop
sub
out
lcall
xor
out
hlt
lods
mov
or
addr16
shrl
cli
mov
leave
in
ss
fldt
push
jge
xchg
dec
jmp
mov
jp
dec
lcall
das
mov
leave
pop
ror
hlt
scas
ljmp
insl
addr16
adc
sub
call
dec
xchg
stc
les
or
inc
push
push
inc
mov
and
xor
jno
iret
test
leave
dec
das
shlb
push
leave
lds
dec
mov
test
and
mov
out
ret
insl
sub
lret
test
call
out
mov
pop
stc
sub
js
fsub
push
mov
mov
and
incl
lret
mov
aas
cmp
stc
cmp
or
repz
sbb
and
test
lcall
add
int
or
subl
mov
incl
mov
pop
ds
xor
xchg
or
rolb
cwtl
add
or
filds
jae
scas
mov
cmc
push
inc
or
mulb
mov
pushf
adc
jge
cmpsl
bound
push
xor
pop
adc
jo
insb
lret
jle
orl
cmp
mov
dec
mov
jns
lret
push
jbe
jb
idivb
mov
into
loope
fs
cmpsl
xor
cmpsl
jl
lcall
cli
cmpsb
jl
aam
scas
adc
mov
sbb
push
jae
es
out
xchg
ljmp
and
sti
cmpsb
test
leave
test
cltd
sti
testb
test
clc
mov
shrb
mov
test
test
cmpsl
shlb
xor
aam
sub
jg
mov
les
daa
cmp
mov
mov
sub
dec
ljmp
and
insl
cltd
imul
inc
jnp
or
int3
cmp
rcr
hlt
js
lods
out
jge
test
mov
push
fcompl
pmuludq
xchg
call
popa
push
pop
inc
stos
repnz
dec
test
push
mov
sti
dec
adc
pop
int3
mov
pushl
or
lods
push
pop
or
pop
insl
mov
xor
shl
mov
mov
mov
push
cld
pop
adc
xor
jge
mov
adc
mov
mov
sti
in
in
mov
push
std
aam
xchg
out
lahf
sti
push
xchg
dec
sbb
negl
test
lods
sbb
loope
jmp
inc
loop
lcall
xor
cmpsl
aas
jbe
outsl
cltd
repz
pop
repz
cwtl
dec
push
push
icebp
in
data16
enter
scas
push
clc
and
jmp
jmp
jo
push
int3
rorb
jbe
outsl
push
adc
inc
sub
mov
mov
dec
inc
xchg
imul
lcall
pop
xchg
or
rcr
fcomps
jge
repnz
iret
int3
push
lcall
clc
adc
cmpl
dec
bound
mul
or
dec
push
ss
imul
incl
test
daa
lcall
jnp
je
xorb
mov
pop
dec
insb
call
insb
out
dec
mov
clc
sti
in
sbb
xchg
sbb
int
adcb
xchg
pop
mov
dec
dec
inc
mov
inc
fucompp
nop
iret
test
sub
jno
push
jo
mov
ret
test
cmpsl
lret
mov
pushl
iret
enter
pushl
cld
mov
stos
into
push
inc
push
outsl
jle
mov
loop
ljmp
push
into
stos
stos
jo
sub
pop
aam
pop
cli
jle
ss
fnstsw
cmp
pop
popa
cmpsl
sahf
insl
sbb
mov
mov
pop
movsl
stos
scas
mov
lea
adc
cmpsl
xchg
jl
or
push
cli
in
insl
sub
rcl
js
cld
inc
aad
les
ret
jg
call
rolb
loop
pop
cltd
and
pop
int
push
ds
mov
aad
in
jp
ljmp
addb
jae
push
filds
pop
push
rcl
test
repnz
jg
test
push
add
ljmp
xchg
loop
pop
push
jb
push
pop
sbb
incl
and
adc
cs
daa
xchg
cmp
mov
enter
movsl
into
lahf
clc
dec
loopne
icebp
ret
std
pop
lock
in
lods
sub
scas
lods
cmpsb
push
cmpsb
cli
jle
push
pop
inc
lcall
or
push
push
in
xchg
adc
jno
fs
jle
jmp
scas
push
push
jp
roll
push
pop
push
jmp
mov
and
mov
rcll
lret
jle
out
cmp
incl
or
lds
incb
pop
and
imul
jmp
push
out
adc
dec
lock
test
cmp
in
nop
dec
jge
pop
ljmp
mov
repz
push
xlat
icebp
jbe
inc
shrl
enter
std
jmp
ja
sub
push
push
int
push
shll
cmc
pop
cmc
jmp
repnz
pop
sarl
pop
leave
dec
es
cli
mov
push
enter
shll
pop
nop
jae
pop
jecxz
mov
cmp
iret
popf
ljmp
pop
fs
std
push
pop
pop
imul
push
incl
sub
add
push
call
inc
orb
push
sbb
ljmp
sbb
stos
movsl
jmp
inc
cld
push
insl
jnp
rorb
push
pop
mov
fs
jecxz
dec
mov
pop
xor
and
jns
lret
push
sbb
pop
std
mov
cmc
lcall
mov
or
inc
ss
in
ljmp
dec
in
xchg
sub
push
jg
push
stc
imul
xlat
and
inc
mov
mov
sbb
mov
mov
daa
loop
mov
mov
mov
lcall
fwait
push
mov
xchg
cltd
adc
into
add
push
pushf
ljmp
int3
and
sbb
push
lods
sarl
sbb
add
call
dec
out
jl
lods
mov
out
stos
mov
aam
inc
cld
push
sbb
xchg
adc
incl
jge
pop
mov
jge
outsl
dec
add
push
in
pop
inc
mov
push
push
vmovups
filds
lock
push
cld
cli
sti
mov
push
xchg
icebp
mov
jns
mov
xor
jb
cmp
inc
xchg
and
mov
cld
jmp
or
rclb
lock
or
mov
sarb
iret
push
fstps
xor
icebp
jmp
test
adc
pop
das
push
jge
mov
out
decl
js
push
or
lret
jmp
lret
sub
aam
xor
xor
push
xor
pop
out
clc
ljmp
xor
and
imul
dec
jo
stc
out
ljmp
fbstp
jne
dec
mov
lods
lea
push
inc
dec
jbe
jg
jnp
cmp
jmp
xchg
mov
pop
pop
jge
mov
jns
add
aad
cld
dec
inc
push
pusha
and
enter
xor
push
mov
jno
lcall
push
hlt
ror
inc
repz
cmp
mov
hlt
out
adc
inc
outsl
into
inc
push
nop
nop
add
mov
push
ss
lret
xor
or
pop
pop
push
fstpl
or
imul
adc
adc
pushl
mov
js
mov
mov
and
cmp
and
insl
and
pushl
cmc
push
xchg
mov
mov
loope
arpl
aam
add
mov
push
adc
mov
int3
inc
dec
jecxz
xchg
pop
stos
hlt
es
ss
jb
xchg
stc
decl
pop
cmp
and
ror
clc
addr16
pop
lret
pop
movsl
rol
fnsave
mov
adc
adc
stos
dec
add
inc
or
adcl
in
dec
mov
je
push
xchg
push
adc
pop
push
mov
or
jns
xchg
sahf
push
or
incb
xchg
sbb
inc
add
adc
add
push
jmp
in
inc
movsl
test
shlb
fcompl
push
mov
subb
ret
psllw
out
fcoml
movsl
fs
xor
ljmp
repnz
mov
xchg
mov
sarb
aas
out
xchg
fucom
repnz
push
call
mov
sub
cwtl
push
repz
sbb
push
inc
aaa
popa
test
ljmp
out
cmp
xchg
inc
cs
or
or
sbb
sti
add
cld
push
cmpb
lods
lea
adc
in
lods
fisttpl
mov
sti
fildll
popl
insl
mov
int
push
lods
je
push
stos
fsin
mov
fsubrp
orl
das
inc
fldl
nop
push
mov
fwait
push
loope
dec
push
sub
data16
xchg
pop
push
test
insb
ss
dec
aad
faddl
mov
pushl
fwait
lret
or
or
ljmp
xlat
sub
inc
idivb
add
fidivl
es
fcmovbe
pop
push
mov
add
adc
xchg
fldenv
push
mov
push
stos
sar
cld
or
inc
hlt
sub
aam
sub
mov
int
mov
test
dec
push
dec
lret
adc
cld
outsl
cs
inc
shll
rcll
je
fildll
scas
mov
psrld
out
adc
sub
jg
inc
imul
les
sub
hlt
xchg
sub
adc
in
jp
clc
mov
pop
dec
or
adc
or
aaa
lret
mov
ljmp
and
adc
or
out
lea
in
addr16
and
jecxz
outsb
adc
push
out
and
imul
std
or
imul
jle
cmp
push
bsf
add
pop
es
xor
sbb
mov
cmc
pop
inc
repnz
mov
xchg
push
repnz
repnz
repnz
jle
int
add
lret
jo
push
push
xchg
icebp
mov
dec
mov
lock
push
aad
xor
icebp
adc
inc
in
jo
push
pop
mov
insb
ss
xchg
ljmp
fstpt
add
adc
push
push
push
push
mov
jmp
aaa
repnz
xlat
push
aaa
mov
jmp
stos
out
jb
out
fst
inc
out
outsl
ss
int
and
pusha
cmp
in
int
fistpl
ficoml
mov
mov
scas
push
fsubrs
sbb
call
dec
push
or
call
xor
or
pop
adc
push
push
pop
sub
add
jge
iret
lahf
aam
pushl
sub
cmpsb
repnz
mov
aam
dec
pusha
icebp
sbb
jno
jg
pop
insl
inc
movsl
cmp
cs
cmp
outsb
aad
mov
jle
call
mov
rclb
cmpsw
inc
pop
pop
adc
and
push
out
in
decl
adc
mov
mov
inc
repnz
lcall
jecxz
add
dec
xor
xor
int
dec
out
jp
psubusw
xor
push
test
call
push
ljmp
ds
aaa
jae
gs
fsubrs
jmp
jo
subb
test
push
dec
fdivr
pushl
jb
or
addl
xchg
xor
les
aam
mov
roll
mov
adc
fwait
testb
in
mov
incl
enter
sub
mov
cli
test
lahf
pop
pop
sub
push
incl
add
in
push
cmc
adcl
sbb
mov
xchg
adc
xor
xor
inc
nop
xor
sub
repz
push
dec
pusha
adc
call
pop
sub
sbb
fwait
mov
or
mov
cmp
lcall
cmp
adc
or
sub
aad
loope
push
lea
lahf
jg
xchg
loop
and
mov
call
sahf
shrb
iret
inc
mov
loopne
pop
sub
fwait
pop
adc
sub
std
loope
rcrb
cmp
jmp
sub
bound
mov
jle
and
test
sahf
loope
data16
sbb
xorb
jmp
scas
xchg
sbb
incl
mov
ss
lahf
inc
sbb
add
lea
lods
pop
jae
ljmp
inc
push
lds
pusha
mov
sub
inc
call
decl
xchg
sar
pop
mov
xchg
xlat
inc
fwait
adc
push
jae
rorb
ljmp
and
sbb
dec
int
repz
and
shll
sar
call
adc
hlt
aaa
aas
mov
rcrb
mov
hlt
cltd
repnz
pop
les
inc
cmpsb
test
cmpsl
jmp
adc
mov
jne
inc
movsl
leave
hlt
je
xchg
stos
pop
and
lods
sub
pop
sub
in
lcall
jl
mov
fwait
lock
jl
inc
jg
pop
jb,pn
push
rcr
jge
leave
push
lahf
dec
fcomip
aaa
cld
fistpl
xor
cmp
ret
push
repnz
lcall
call
js
dec
aam
jmp
inc
fs
mov
inc
mov
test
sbb
xchg
xlat
aam
mov
fbld
adc
pop
ds
daa
add
add
push
lock
pop
scas
loop
and
hlt
inc
out
mov
shrb
mov
ja
pushl
imul
adc
and
jecxz
insb
dec
pop
decl
jmp
adc
cmp
std
adc
push
int3
fnstsw
cmpsb
insb
pop
lcall
jmp
stos
xchg
push
nop
dec
int
in
xchg
push
shlb
mov
dec
sar
jo
inc
sarb
out
negl
sahf
cmp
push
and
mov
pop
mov
aas
ds
adc
cmp
ljmp
stos
out
xor
dec
cmp
test
mov
mov
adc
stos
xchg
jl
push
mov
jg
sbb
adc
cmp
in
shll
push
push
adc
fistps
test
inc
into
insb
repz
scas
adc
xchg
jb
mov
or
jg
test
inc
mov
ljmp
bound
sti
fcomip
repz
xor
mov
faddl
mov
mov
call
mov
inc
mov
mov
sbb
pushf
iret
xchg
imul
ja
ljmp
dec
cld
push
in
fdivl
test
cltd
insb
xchg
data16
decl
xor
xor
sub
inc
mov
sub
xchg
xchg
sbb
lcall
shll
mov
pop
xchg
push
enter
lahf
es
incl
ret
pop
hlt
testb
scas
cmp
decl
cmpsl
jle
int3
push
out
nop
mov
pop
mov
xchg
xlat
jg
sub
iret
int
push
out
mov
scas
xor
push
ret
pushf
pop
or
in
pop
xor
pushl
fs
stos
push
loop
les
ret
pop
jo
xor
fcoml
dec
inc
lock
lcall
or
push
lods
es
inc
divl
jg
xor
push
pop
push
fs
and
outsb
cmpsb
testb
pop
dec
xchg
adc
dec
mov
test
loop
in
aad
lahf
mov
ss
out
jge
pusha
rol
push
dec
mov
int3
roll
inc
and
dec
lock
inc
dec
xchg
push
aas
xchg
inc
xor
adc
sub
test
addl
lcall
pop
inc
es
and
xor
pop
int
decb
test
outsl
push
inc
push
dec
inc
push
scas
xor
push
incl
xor
push
out
test
xor
inc
sahf
xor
out
clc
sub
jl
push
rorb
stos
inc
jge
std
mov
jmp
mov
iret
sbb
xor
stos
sbb
data16
push
xor
insl
sbb
or
call
scas
aas
pop
and
xor
aaa
int
rcll
inc
jae
mov
cld
mov
pusha
int3
movsb
out
in
cmpsb
xchg
ja
xorl
pop
sbb
jle
lods
ss
mov
movsl
out
subb
ret
inc
xchg
jmp
mov
incl
lods
jmp
jmp
pop
and
je
inc
inc
inc
std
and
ja
outsl
call
ljmp
cmp
and
xor
or
inc
inc
call
push
fisubl
mov
mov
inc
jmp
pop
pop
fsts
dec
repz
and
cmp
mov
ja
cmp
sub
rcl
ret
xor
js
inc
mov
test
enter
or
jbe
pusha
cmpsb
shrl
sub
std
jp
in
add
test
push
push
dec
pop
ss
mov
out
test
cmpsb
rcll
xchg
test
ror
loop
sbb
inc
ret
pop
jmp
pop
adc
adcb
mov
decl
ss
daa
adc
inc
cli
or
and
xchg
ds
das
sub
pop
or
popa
cld
incl
popf
lret
inc
popa
in
stos
popf
push
push
inc
shr
add
jae
dec
popa
add
mov
xor
lret
aad
das
testl
dec
mov
xchg
mov
in
sub
into
pop
bound
pop
jge
add
mov
mov
mov
stos
pop
cli
pop
pop
xor
pop
push
xor
ljmp
test
fsubs
sub
pushf
sub
enter
push
lods
arpl
rclb
fildll
xchg
loope
lret
jb
fildll
lret
mov
call
push
sbb
in
dec
mov
sub
pop
and
in
xchg
daa
push
sar
out
sahf
lret
shlb
test
add
insl
push
mov
adc
push
mov
push
inc
pop
sahf
xchg
ja
lret
and
xor
xchg
push
push
into
insl
mov
outsl
cmp
xor
push
pop
xchg
mov
mov
movups
out
jbe
mov
cmp
jae
push
mov
mov
stc
in
pop
inc
adc
loop
or
push
add
pop
icebp
mov
adc
sub
mov
mov
adc
cs
das
subl
push
mov
sbb
dec
cmp
dec
pop
mov
xchg
cwtl
cmp
jae
cs
les
mov
adc
jmp
xchg
int
lcall
cmp
out
outsb
imul
pop
pop
pushl
mov
enter
in
cs
sub
es
push
dec
push
dec
stc
test
loope
push
ds
decl
mov
mov
das
lret
or
dec
fcmovnb
mov
cs
into
fidivrl
jmp
mov
aam
mov
scas
into
pop
jo
and
dec
xlat
test
rcrl
inc
adc
in
ljmp
neg
inc
xchg
into
push
mul
sbb
inc
ss
push
and
aas
jbe
pop
aas
push
inc
push
mov
push
xchg
sbb
mulb
jg
outsl
mov
push
ss
push
flds
jns
push
ja
int3
xor
jmp
mov
push
addr16
je
fldcw
add
imul
and
xor
fcompl
pop
mov
out
in
cmc
inc
outsb
std
mov
cmp
pop
gs
hlt
jg
dec
mov
add
out
fidivs
out
lds
and
jb
cmp
cmp
fucomi
cmp
mov
xor
pop
or
jmp
out
jle
and
mov
mov
cli
es
addr16
cmp
call
stos
and
in
shl
xlat
mov
jb
add
out
and
stc
pop
mov
fiaddl
mov
outsb
insl
in
scas
dec
sbbb
lock
aaa
in
cmp
aad
mov
mov
push
xchg
iret
js
push
dec
jecxz
push
push
scas
insl
scas
mov
rcrl
xor
outsl
pop
push
pop
incl
inc
arpl
test
cwtl
pop
aas
test
mov
pop
pop
xor
pushl
push
dec
cs
mov
pop
sub
push
ljmp
and
xor
lahf
loopne
lcall
call
cmp
fwait
repnz
push
pause
jmp
aaa
ljmp
daa
fcoms
sub
adc
gs
pop
mov
mov
in
in
lahf
pop
call
loopne
inc
mov
lds
cmp
cmp
inc
neg
push
std
mov
pop
insb
ret
call
fdivs
sub
fdivs
insb
jae
add
xchg
cmp
pop
cld
jo
incl
xchg
ja
xchg
stc
lret
lahf
or
mov
call
lock
in
sbb
push
dec
cmc
pop
cmp
push
mov
dec
scas
pop
jmp
insb
decl
pop
adc
out
rcrb
pop
cmpsl
and
push
aad
push
push
push
mov
mov
push
push
mov
fidivrs
push
xchg
scas
enter
fistpl
jne
iret
int
mov
dec
lods
mov
pop
imul
sub
jmp
jno
imul
sbb
lock
fisubrl
jmp
ljmp
insl
add
xlat
iret
push
jb
repz
js
add
adc
pop
or
inc
lcall
insb
fcmovnbe
popf
cmp
jl
pop
sti
sub
xor
cmc
mov
sub
push
lods
xchg
daa
pop
push
jne
fcoms
out
inc
rcrb
push
cmp
push
xchg
in
adc
mov
in
add
call
cmc
decl
shrb
jecxz
add
lock
lods
mov
cmp
jo
dec
mov
fldt
lock
cs
aam
imul
mov
push
push
inc
jbe
inc
pop
bound
lcall
ljmp
xchg
aad
fisttps
mov
mov
lret
incl
jae
cmp
lcall
out
int
stos
push
or
jbe
in
aaa
cmp
jl
sub
cmp
jne
cltd
xor
test
fiaddl
jb
cmpl
adc
pop
and
cmp
fdivrl
push
dec
or
push
xchg
lds
adc
pushl
pop
cmp
push
or
jecxz
stos
cmc
adc
lods
adc
push
mov
ljmp
and
es
and
popf
add
mov
cmp
filds
and
mov
adc
xchg
cmpsl
ss
xchg
mov
les
and
add
outsb
cmpsb
mov
push
xchg
mov
and
pusha
cmp
fwait
jecxz
icebp
dec
mov
or
mov
jmp
mov
push
iret
dec
push
add
or
call
jb
mov
push
pusha
aam
icebp
mov
cmpsl
sbb
jmp
and
push
fsubl
shrb
xor
out
aam
pop
jp
pop
les
shl
call
mov
lret
loopne
fnstenv
aad
sub
data16
lock
or
int3
jge
push
imul
adc
call
xor
adc
and
ds
lea
adc
ljmp
ja
sub
aam
add
repnz
aam
push
das
mov
mov
or
sub
decl
xor
xchg
mov
aad
stos
orl
mov
lret
aaa
cld
pop
mov
ds
dec
push
js
out
aad
adc
mov
cmp
aam
lret
sti
incl
inc
decl
clc
shrl
and
mov
rorl
fiadds
cmpsl
inc
adc
mov
dec
lock
incl
xchg
mov
cld
push
add
jp
cmp
or
push
outsl
lock
test
loope
xchg
pop
fsubl
rorb
enter
pop
shlb
pop
adc
cs
sbb
inc
out
in
xchg
adc
repz
push
pop
aam
xchg
cli
cs
or
xchg
adc
adc
adc
mov
add
xchg
sbb
icebp
shr
enter
cmpsl
std
das
sar
xor
mov
mov
cmp
xor
dec
push
jmp
cmc
jo
cmp
inc
adc
and
lcall
mov
xlat
ds
jae
aad
rcr
dec
mov
adc
aad
dec
sbb
lock
jg
jae
mov
stos
loope
rcrl
xor
jne
ljmp
loope
inc
jae
add
sbb
xor
xchg
sub
outsl
pop
jmp
nop
daa
cmpsb
out
jb
incb
push
mov
loop
stc
mov
push
sbb
pushl
push
jne
lods
dec
sahf
mov
xlat
movl
pushl
xchg
aas
push
adc
fbstp
iret
jl
lods
cmp
pop
cmp
xor
push
popf
or
dec
popf
dec
es
insb
scas
dec
cwtl
mov
nop
jae
push
leave
jmp
ljmp
sarl
jo
sub
xor
loop
or
add
and
inc
fisubs
dec
or
movsl
add
adc
xor
xor
mov
xchg
cmp
mov
bound
sub
mov
push
lods
lcall
push
inc
mov
jo
push
dec
cwtl
fadds
scas
stos
mov
sub
or
fs
repz
dec
addl
repz
xlat
addr16
incl
movsl
aad
std
leave
cltd
jg
lahf
mov
mov
xor
cmp
push
sti
jmp
push
dec
fiadds
mov
je
xchg
in
xlat
mov
and
push
shll
push
xchg
jl
adcl
cld
pop
xchg
or
mov
dec
add
into
and
jg
push
gs
jg
inc
cwtl
jae
arpl
mov
adc
xor
in
pushl
add
ds
pop
xchg
mov
sbb
fcoml
jmp
jbe
orl
xchg
int
inc
pop
sub
mov
jl
test
xlat
incl
enter
inc
xlat
mov
inc
clc
loopne
jno
dec
mov
sbb
xlat
xorb
hlt
mov
push
cmp
jbe
xchg
pop
arpl
xchg
test
and
pushl
loopne
push
test
jle
or
push
xor
aaa
lcall
scas
rclb
jle
sarb
ret
pop
call
jb
test
std
scas
mov
jo
shrl
push
xor
mov
fldl
ljmp
hlt
or
adc
jae
dec
subb
mov
rclb
mov
xchg
mov
mov
push
add
fistpll
push
dec
out
push
cmp
pop
xor
add
xchg
xor
sbb
mov
and
std
stos
and
jnp
or
out
aaa
mov
jle
pop
sbbl
enter
and
cwtl
jg
in
mov
xchg
jecxz
pop
mov
jge
aaa
sbbl
cmp
nop
add
cwtl
jno
pop
sti
cmpsl
add
jae
sub
jge
js
out
push
cmp
add
or
es
insl
pop
cmp
into
sbb
call
into
test
lock
lods
sub
push
pushl
lea
popf
push
ja
jge
movsb
insl
dec
dec
jge
sbb
cmp
iret
sbb
lcall
shlb
xchg
pusha
lret
mov
nop
xchg
faddl
rcrl
std
mov
push
fidivl
push
mov
daa
bound
shrl
sbb
aad
cmc
pushl
std
adc
xchg
bound
inc
int3
xlat
mov
cltd
sbb
sbb
dec
lcall
sub
xchg
dec
movsl
inc
push
aas
jns
pop
xor
test
les
aad
shrb
jmp
icebp
sub
push
push
fistpll
fst
jbe
mov
js
out
adc
decl
adc
aad
xor
xchg
cmp
jne
sbb
push
mov
xchg
fldt
push
aad
and
ljmp
aam
aam
or
dec
ret
out
push
jp
pop
js
call
shlb
sar
push
std
addr16
repz
jmp
mov
inc
dec
jecxz
outsb
xor
mov
aam
push
jne
fwait
sbb
lcall
test
inc
push
movsl
mov
xchg
mov
mov
xor
xchg
js
jbe
sub
dec
xor
cmpsb
cmp
push
testb
addl
ljmp
enter
mov
sbbb
es
adc
push
dec
hlt
gs
ficoms
mov
jbe
jle
cld
sbb
fsubr
mov
jae
inc
or
push
adc
lods
pushf
adcl
cli
int3
mov
fnstcw
cld
jne
or
incl
test
mov
mov
hlt
adc
std
mov
cmpl
dec
mov
js
icebp
xor
mov
out
icebp
insb
inc
push
xor
es
mov
repz
ficoms
into
jg
mov
pusha
sub
shrb
xor
iret
push
xor
xor
repz
call
lods
fs
shlb
dec
mov
fildl
test
stos
inc
lods
push
rorb
cmp
decl
dec
sarb
jg
test
mov
sbb
mov
add
add
xchg
add
call
lods
sub
and
test
das
adc
mov
int
pop
hlt
dec
pushl
popa
lods
xchg
mov
movsb
sahf
dec
mov
loop
ljmp
call
mov
mov
or
or
dec
push
pop
daa
and
shlb
cmp
test
dec
mov
bound
out
push
push
in
imul
testl
movsb
in
push
imul
test
or
jno
xorb
push
decl
rolb
out
mov
add
enter
scas
mov
rorl
or
push
ljmp
or
adc
jecxz
pop
dec
xor
jmp
int3
test
in
lahf
cs
cli
call
adc
xor
mov
jns
cmp
gs
sti
stos
and
stos
pushl
sti
jbe
cmpsb
sub
xor
in
mov
push
mov
ficomps
adc
punpckhbw
dec
inc
jmp
mov
arpl
mov
ljmp
imul
sbb
add
aaa
pop
xor
and
xchg
push
sbb
call
call
fldt
ret
popf
fs
pop
sbb
std
xchg
xor
repz
out
mov
adc
xchg
cmpsl
pop
pop
mov
icebp
jns
fcompl
icebp
pop
push
aam
test
sub
lds
push
sub
movsl
cmpsb
jb
nop
sbb
in
or
push
dec
rcrb
jg
call
jb
testl
xchg
jg
arpl
mov
call
pop
push
dec
or
mov
mov
ffreep
insb
cmp
aas
scas
pop
mov
popf
or
popf
push
call
std
std
in
insb
push
xorl
xor
andb
stos
pop
mov
decl
icebp
adc
std
jae
pop
cmp
dec
fbstp
pop
cld
fsubs
repz
pushl
push
in
xor
pop
sub
sahf
push
outsl
inc
ljmp
repz
lods
shl
es
fcomip
inc
cmp
xchg
lahf
and
mov
js
data16
faddl
and
iret
int
lock
mov
push
outsl
pushl
fcmove
xor
shr
int3
insl
jnp
or
xor
xchg
mov
jmp
in
push
push
insl
lock
je
xor
fisubrs
push
in
xchg
mov
in
xchg
adc
in
sub
mov
lods
sahf
sbb
xor
push
fsubrl
ljmp
sbbl
mov
xchg
hlt
sbb
in
scas
mov
jg
aas
inc
jmp
dec
insl
cmpsb
pop
sbb
xor
push
xchg
xlat
xchg
ficoms
mov
int3
pop
ss
xchg
push
cmc
or
incl
mov
mov
push
adc
mov
cmc
jae
out
mov
repz
cmp
incl
cmpsb
add
jae
out
xchg
test
iret
xor
pop
ret
dec
fldcw
cmp
ret
ljmp
out
lods
out
mov
xchg
icebp
adc
adc
andb
lock
shr
rcrb
decl
dec
adc
push
adc
out
lahf
pop
pop
lods
mov
fs
cld
sub
call
imul
outsb
into
xchg
out
xor
fisubl
shl
pop
lock
in
loop
cmc
pop
push
push
inc
lods
icebp
lcall
in
popa
cmpsb
out
cmpsl
pop
xchg
enterw
pop
add
mov
fmull
mov
cmp
mov
stc
nop
outsl
mov
xchg
out
and
inc
xchg
jno
xchg
jb
or
mov
jg
out
subl
adc
lock
jnp
jl
call
sbb
insl
sub
popf
imul
call
mov
mov
or
repz
jns
or
xchg
pop
clc
lret
lods
mov
out
cli
mov
xorb
xorl
jmp
push
decl
sub
pop
dec
in
xchg
jl
xor
pop
xchg
push
xchg
incl
icebp
dec
jp
and
inc
xor
cmp
sbb
outsb
pop
adc
ret
jb
pop
cmp
ss
add
push
lcall
xchg
aam
jno
add
cmp
pop
aam
mov
add
sub
mov
out
ret
push
add
adc
out
shlb
jmp
xchg
dec
jno
dec
adc
jae
out
lds
cmp
fildl
ljmp
sbb
push
jne
daa
xchg
jb
pusha
mov
psubusb
cmpsb
outsb
jg
call
xchg
sub
loopne
test
push
nop
pusha
mov
jae
mov
imul
mov
adc
js
mov
inc
dec
fists
jo
pusha
dec
cmpsb
or
cmp
dec
mov
push
jbe
jmp
leave
not
call
xor
in
outsb
cs
mov
aad
pushf
shl
ret
cmpsl
pushl
adc
or
scas
clc
pop
pop
pushf
fisubrl
mov
aas
xchg
or
fsubrl
insb
ret
out
jge
outsl
loope
cmp
lahf
roll
in
ljmp
test
int
jns
sub
xor
push
movsb
mov
jmp
stc
outsl
je
sbb
pop
repz
push
aas
out
and
fdivrs
fisubl
in
mov
jecxz
pushl
mov
mov
cs
jae
adc
imul
imul
cld
cmpsl
outsl
fcomip
fmul
push
xchg
jbe
jmp
adc
or
push
gs
jo
sbb
jmp
aad
xchg
sub
pop
mov
das
shrl
cmp
or
sub
pop
in
int
idiv
movsb
jp
mov
decb
jg
pop
jmp
sbb
sarb
cmp
pop
pop
adc
sub
or
pushl
insl
popa
in
push
jl
jmp
adc
in
mov
jo
pusha
mov
cmp
out
imul
rcll
mov
test
adc
and
jbe
mov
lds
call
adc
xchg
dec
ficomps
or
leave
imul
repz
incl
pop
or
cs
mov
mov
and
movl
xor
add
enter
or
sub
lock
push
xor
mov
fisubs
ja,pt
lods
fimull
mov
call
xor
addr16
imul
sbb
pop
clc
insl
ret
cld
lods
xchg
out
in
cld
faddp
pushf
adc
push
lods
cmp
and
gs
xor
rcll
andb
movsl
imul
fistpll
je
sub
hlt
incb
stc
sub
mov
mov
incl
push
pop
adc
data16
std
mov
xchg
push
cld
clc
lret
sub
movsl
pop
std
fcomip
fsubrl
cs
filds
sub
adc
mov
enter
call
pop
imul
cmp
xchg
cltd
scas
mov
xchg
or
inc
mov
ljmp
push
and
into
cmp
insl
orl
insb
sub
xchg
je
in
incl
incl
je
cmp
orl
call
imul
fmull
sbb
mov
dec
push
stos
jg
mov
andb
adc
lcall
xor
sti
xor
pop
je
insb
inc
sub
fbstp
sub
cmpsl
adc
dec
pop
push
xchg
arpl
addr16
cmpsb
inc
xchg
ljmp
push
lods
mov
add
test
and
xchg
or
inc
xchg
push
rclb
outsb
fs
out
and
aad
std
ljmp
pop
or
rdtsc
jmp
dec
aaa
push
test
lock
pop
jg
lcall
or
aaa
imul
push
xor
adc
xchg
xor
mov
jb
cmp
inc
int
fwait
pop
sub
loopne
imul
adc
cmp
push
cmp
lds
and
dec
es
out
add
jmp
xchg
cltd
jns
mov
fmuls
add
pushf
mov
sbb
call
xor
es
jb
xor
ljmp
inc
xchg
xchg
lret
out
stos
and
xor
loopne
fdivs
loop
ljmp
incb
ja
negl
fcoms
jle
dec
mov
inc
in
out
inc
clc
xchg
add
incl
in
mov
adc
out
in
lock
outsb
jge
dec
jns
xchg
and
dec
in
xchg
outsl
push
jp
es
adc
or
les
in
dec
loop
fnstcw
sub
xlat
ficoms
push
mov
xor
hlt
incl
shrb
or
rclb
dec
xchg
push
jnp
ss
decl
mov
nop
lret
icebp
pop
nop
jecxz
ret
add
sbb
mov
add
inc
mov
in
clc
jmp
hlt
cmpsb
ret
shll
dec
mov
sub
movsb
mov
ds
push
push
mov
dec
cltd
jg
push
lock
fsubs
sub
jmp
fcomps
int3
xlat
movsb
rolb
es
push
or
add
cmp
and
mov
je
in
inc
xchg
mov
sbb
mov
xchg
test
in
out
sub
lds
outsb
cmp
test
jg
push
cmp
inc
cmc
sbb
adc
pop
sub
lret
xchg
pop
ss
mov
incl
fcoms
mov
lret
fists
jae
std
mov
and
cmp
xlat
shll
clc
decl
cmp
mov
lds
shrb
out
inc
xchg
cmpsb
xchg
push
cld
jmp
jb
xor
in
jns
jo
cmpsb
shl
loope
dec
pop
int
mov
incl
in
mov
sbb
sahf
lods
xchg
out
pop
mul
lcall
pop
mov
sbb
jmp
mov
ficompl
mov
mov
js
jne
rcrb
decl
in
sti
outsb
lds
jmp
xchg
xor
scas
in
push
gs
pop
popa
adc
jb
cmpsb
stos
aas
jae
sub
clc
jnp
xor
decl
push
insl
nop
gs
ljmp
adc
aad
into
call
std
out
cmpsl
xor
mov
sbb
push
lea
xor
icebp
sar
fsub
adc
jo
pusha
cwtl
adc
cli
shlb
xor
adc
sbb
pushf
aad
outsl
mov
push
pop
pusha
clc
mov
lods
roll
mov
fistps
incl
push
insl
cwtl
sarb
in
int3
cmpsb
sbb
cmp
push
and
in
ds
loopne
cvtps2pi
push
xchg
aas
cmp
and
lea
dec
data16
xor
mov
stc
or
mov
lea
rorb
aad
push
loopne
sub
insb
call
mov
jle
cmp
imul
push
sar
mov
push
mov
in
jo
push
xorb
out
cmp
loopne
pop
jmp
push
push
xchg
scas
pop
push
aam
in
addb
push
mov
out
mov
orl
movsb
cmp
data16
push
mov
pop
cwtl
or
and
jnp
in
addr16
addb
pop
push
mov
out
mov
in
imul
repz
jmp
mov
dec
adc
out
popf
decl
jb
jl
sub
fsub
mov
jb
test
dec
call
sar
jno
imul
mov
addr16
adcl
jecxz
testb
mov
dec
xor
mov
mov
xlat
cmp
sub
mov
pop
jg
out
sbb
or
in
filds
mov
out
jge
es
ljmp
in
mov
adc
sarl
or
in
mov
in
data16
repz
mov
xor
lock
and
outsl
jle
dec
repz
push
out
es
out
popf
pop
adc
jmp
add
rcrl
repz
std
mov
insl
in
jmp
bound
mov
fiaddl
jmp
fwait
in
fwait
dec
nop
test
jae
xor
fwait
punpckhdq
mov
or
rcl
pop
push
mov
sbb
es
jmp
and
int3
mov
push
and
jae
loopne
jp
punpckhwd
int3
adc
jmp
adc
fs
jmp
ret
loop
mov
mov
loopne
mov
jmp
and
jg
inc
push
lea
adc
loopne
lcall
push
jg
add
in
xor
es
sbb
fs
bound
int
cmpsb
sar
in
adc
pop
addr16
xor
jmp
inc
jo
enter
insl
mov
xor
jnp
add
jmp
xorb
std
rcrl
sbb
in
stc
int
inc
pushf
jmp
dec
jg
out
mov
mov
jecxz
lcall
and
mov
loope
std
mov
pop
movsb
push
addl
or
nop
clc
pop
cmp
mov
pop
xchg
pop
idiv
incl
mov
insl
in
jg
sbb
aam
movsb
rorb
lods
lea
pop
lock
dec
cmp
fsubs
jecxz
scas
in
rcrl
xchg
lret
adc
xchg
outsb
out
cmp
stos
insb
push
and
insl
jg
adc
push
jmp
and
adc
cld
add
sbb
ret
dec
into
mov
stos
and
sbb
ljmp
push
jg
jnp
cs
mov
push
daa
rorb
cltd
sbb
or
incl
jae
lret
sbb
mov
inc
lods
push
lcall
aaa
outsl
fbstp
aaa
test
lea
adc
jmp
mov
adc
cmp
fwait
push
adc
adc
xor
sub
xor
incl
loop
mov
push
shll
adc
xor
xor
push
divl
jmp
ret
fisttps
aad
cmc
add
les
or
push
xchg
sbb
sbb
decl
mov
inc
mov
and
cmp
mov
mov
orl
and
xchg
or
inc
icebp
lcall
jb
xchg
push
lcall
push
cmp
arpl
std
dec
std
data16
nop
or
pop
xor
ret
push
xchg
ret
xchg
dec
cld
adc
bound
insb
lods
bound
into
add
jg
inc
lock
lods
pop
cmp
rclb
add
es
cli
int3
and
push
loop
cld
nop
xchg
fwait
test
out
testb
jnp
pop
inc
mov
mov
mov
and
outsb
arpl
scas
les
imul
xchg
sbb
pop
push
addr16
xor
lret
mov
cmp
outsl
repz
jle
ljmp
test
dec
push
lds
cmp
inc
mulb
nop
aas
mov
daa
inc
sub
mov
xsha256
cmpsb
adc
dec
cmp
cmp
dec
repnz
add
ss
addr16
data16
ljmp
add
lret
pop
addr16
mov
push
icebp
pop
or
shl
out
divl
iret
mov
lcall
sbb
addr16
arpl
cmc
std
mov
jmp
add
mov
sbb
call
sub
icebp
xlat
stos
pop
add
cmp
call
out
jmp
ss
imul
pushl
xchg
insl
fidivrs
dec
adc
mov
push
sti
nop
adc
push
lock
fists
xchg
cmc
nop
fists
xchg
mov
pop
ret
push
and
pop
stos
shrl
loopne
test
hlt
call
push
pop
sub
cld
std
push
popf
cld
es
mov
aaa
cli
js
fistps
adc
bound
outsl
iret
lods
repnz
add
inc
add
cld
inc
push
mov
enter
jge
push
mov
pop
xor
pop
mov
adc
pushl
and
xchg
xor
cmpsl
mov
mov
mov
fnstsw
bound
fcoml
sbb
fistl
hlt
pop
mov
inc
jg
ljmp
jnp
aad
subb
fists
sbb
mov
rorb
cmp
decl
and
adc
xchg
push
push
ja
cmpsb
out
cld
push
sti
arpl
jo
jl
mov
cmpsb
mov
mov
fnstsw
push
pop
es
mov
sbb
push
adc
cld
repnz
adc
sarb
lcall
jmp
pusha
push
sbb
dec
fdivl
jl
adc
mov
pushf
push
js
mov
das
negb
xor
xchg
je
jge
lahf
mov
sbb
jnp
sbb
mov
mov
dec
mov
xchg
sbb
cmpsb
cs
sbb
loop
cmp
xchg
mov
mov
or
dec
xchg
mov
out
sarb
mov
inc
pop
mov
sarb
ja
mov
mov
sub
xor
nop
dec
cmp
xor
and
or
ja
xchg
lret
cltd
clc
repz
das
jge
pop
cmpsb
pusha
lcall
leave
dec
int3
roll
push
jnp
inc
fildll
push
pushf
shr
push
mov
xor
jge
sub
stc
insb
adc
mov
push
bound
mov
adc
loopne
fisttpl
mov
ja
add
shll
push
popa
xor
xor
adc
into
mov
dec
fsub
or
xor
ljmp
clc
pop
mov
outsb
cwtl
mov
mov
pusha
pop
mov
and
adc
xor
push
jo
cmc
pop
fadds
xor
jnp
lods
sti
shrb
pop
cmp
clc
lds
push
jno
imul
arpl
jecxz
and
data16
scas
cli
dec
mov
push
jmp
jae
push
cld
xor
dec
or
cmp
jb
xchg
mulb
sub
loop
and
cmp
mov
enter
and
data16
fcomip
scas
add
cs
jne
fwait
loopne
inc
lods
xor
sub
cmp
pushl
fs
clc
jle
dec
lock
fidivl
mov
sub
dec
jae
sub
insb
shrl
xor
push
xchg
push
out
int3
xchg
mov
sub
in
push
sub
push
mov
jb
lock
js
dec
fistpll
mov
mov
call
xchg
rorb
inc
push
test
xchg
lcall
inc
shr
push
pushf
dec
cmpsb
adc
loope
sbbl
xchg
add
decb
leave
leave
andps
push
pushf
leave
lret
dec
roll
loop
repz
imul
in
inc
ret
jne
ss
adc
ljmp
lock
push
popa
pop
adc
push
loopne
hlt
mov
adc
jg
push
loop
stos
insl
lcall
loope
cmc
add
rolb
shl
xor
jg
adc
jle
inc
lcall
std
sub
or
cmp
aad
jo
dec
dec
dec
adc
jg
push
movsl
cld
adc
sti
xor
lcall
adc
loop
inc
dec
cmp
xor
dec
repnz
lret
lcall
dec
repnz
mov
add
dec
mov
ret
aam
jg
inc
inc
out
mov
lods
push
jg
lcall
jnp
adc
pusha
cmc
in
pop
les
jg
imul
jp
stos
mov
add
incl
fwait
dec
lea
ret
fldl
dec
les
adc
jae
pop
test
dec
decl
cmpsb
cmpsl
xchg
and
js
hlt
insb
adc
rdmsr
clc
inc
sub
lcall
or
pop
xchg
xchg
fidivrl
dec
testl
xchg
clc
dec
fdivl
jo
inc
mov
xchg
cmp
sub
and
std
js
aam
xchg
jb
out
outsb
lea
lcall
or
fs
mov
add
push
jmp
inc
lea
dec
clc
pop
add
jge
cwtl
cmovb
movsb
ljmp
mov
mov
cmp
loop
cltd
jl
pop
sbb
jb
push
minps
fwait
in
cmp
jg
push
pop
lret
jnp
stc
test
and
ficoml
pop
mul
xor
stos
js
sub
and
cwtl
cli
push
es
jnp
push
add
out
jge
or
push
rorb
aad
fcomps
es
dec
add
nop
dec
scas
xchg
sbb
push
pop
lock
ljmp
ds
cmp
imul
sub
stc
cmp
mov
mov
mov
dec
cmp
inc
dec
stos
push
jg
fsts
jb
dec
mov
das
push
fsubr
imull
push
inc
add
in
in
out
out
pop
mov
call
xchg
rcrb
stc
adcb
mov
stos
lcall
dec
mov
imul
sub
mov
mov
sbb
mov
lods
mov
pop
cmp
push
pop
dec
aad
jp
shrl
lcall
mov
lahf
adc
rol
es
lret
lock
jg
sub
jbe
lock
iret
enter
cmp
fs
mov
in
push
jns,pn
stos
pushf
inc
scas
and
enter
push
push
ljmp
out
inc
pop
ficompl
rclb
out
cmc
jbe
push
outsl
decl
jo
test
jno
movsb
mov
insb
repz
shlb
push
mov
xchg
call
xchg
push
or
in
out
ret
and
jle
cmp
incl
xor
adc
jne
cmc
aaa
mov
xor
push
pop
mov
adc
mov
mov
dec
das
fucomi
pop
push
sbb
imul
negl
scas
leave
dec
js
dec
pushl
push
shll
xor
sub
cmc
mull
arpl
xor
addr16
pushl
and
ret
xchg
es
js
into
jb
scas
jne
nop
xchg
int3
addl
add
insl
adc
call
lret
mov
rorl
out
cs
add
out
addr16
lcall
out
xchg
data16
lahf
je
inc
ffree
and
xchg
hlt
push
or
hlt
adc
add
test
adc
data16
std
leave
shll
dec
out
leave
sub
xor
lcall
push
jmp
data16
leave
aad
out
xchg
mov
push
sbb
sarb
in
lods
sbb
arpl
or
movb
icebp
cld
xor
push
stc
mov
mov
push
cld
cmp
lock
ret
adcb
push
cmp
out
insl
out
mov
imul
sti
push
pop
or
cmpsb
movsl
mov
iret
call
pushl
std
mov
das
cli
enter
sub
pop
sub
in
dec
xor
sti
cmp
jg
incl
inc
je
lea
sub
inc
or
pop
scas
dec
repz
push
leave
inc
xchg
jmp
adc
jnp
mov
loop
push
insb
dec
movsb
xchg
in
test
bound
mov
int3
fcomip
call
inc
xor
hlt
dec
loope
lock
sti
jg
dec
xor
movsl
sar
jg
decl
mov
xchg
gs
cmp
movsb
jp
jmp
std
jg
cs
test
pop
xor
and
push
ret
mov
outsb
mov
push
xor
sbb
inc
add
cld
add
mov
loope
pop
jae
xor
push
mov
std
jo
xchg
call
int
sti
or
and
mov
jnp
sbb
call
lds
es
hlt
incl
das
decb
and
add
pop
imul
scas
jmp
xchg
push
pop
jge
imul
xchg
pop
inc
into
add
push
ljmp
rorl
incb
push
push
jmp
es
cmp
sti
js
jnp
js
jo
dec
push
jg
cmp
movsb
imul
imul
call
decl
cmpsl
call
nop
xor
orl
addb
sub
inc
mov
roll
xor
sub
adc
outsb
fadds
inc
push
movsl
mov
dec
mov
or
mov
notl
sbb
cmp
out
xchg
cmp
ljmp
cli
daa
add
daa
call
or
test
inc
pop
pop
or
pop
out
mov
mov
popa
data16
mov
cli
xor
push
sub
ret
mov
lcall
std
aad
out
jne
cmc
cmp
push
mov
xchg
xor
jmp
into
insl
sar
pushl
jp
push
push
ret
in
repnz
jmp
stos
push
jg
mov
das
andl
es
jg
test
mov
push
sbb
lds
popa
jp
in
inc
push
mov
mov
sbb
jmp
xor
xor
cmp
jne
test
fst
lods
push
cmp
inc
push
pushf
sub
adc
negb
inc
adc
imul
jb
xor
dec
jne
out
jns
data16
sbb
lcall
jmp
sbb
jl
mov
mov
adcl
cwtl
push
pop
inc
mov
mov
popf
ret
cmp
jo
push
shlb
and
or
ss
sub
dec
faddp
sarb
adc
jg
jmp
mov
push
mov
sbb
adc
decw
clc
dec
lds
in
push
xchg
mov
push
incl
notb
out
push
xor
insb
mov
jb
jmp
push
jb
push
jns
mov
mov
fdivrp
bound
shll
loop
jp
cmc
or
je
scas
and
pushf
loop
cltd
test
and
xchg
out
pop
cmc
jg
es
pop
outsb
ret
push
adc
decl
push
cld
mov
jnp,pt
es
inc
pop
pop
dec
nop
add
icebp
push
jae
jb
mov
mov
lcall
test
dec
ljmp
sbb
test
xor
sbb
jmp
push
mov
lea
push
push
test
fsubr
ljmp
jbe
sub
inc
stos
sub
ljmp
in
fsubrp
adc
stc
mov
out
cmpsb
pop
sub
jg
leave
imul
incl
test
or
adc
test
cmp
push
xor
xlat
sub
je
or
insb
add
ljmp
clc
insb
or
cmp
xor
push
cmpsb
nop
imull
leave
push
imul
mov
dec
xchg
fsubrp
es
lods
mov
pusha
fisttps
in
jb
pop
push
push
lret
decl
jle
add
in
cmpsb
cmpsb
stc
popf
push
inc
or
mov
or
in
mov
jg
mov
test
nop
push
in
icebp
jle
or
cwtl
enter
mov
jmp
pop
out
mov
and
mov
mov
adcb
mov
adc
js
std
incl
addr16
and
daa
xor
add
push
xlat
icebp
and
inc
movb
loop
lcall
pop
sbb
aaa
or
sbb
test
stos
fadds
addb
cmp
repz
push
iret
loopne
testb
mov
mov
lcall
sub
jmp
cmp
inc
push
popa
sahf
jae
test
in
cmpsl
mov
iret
es
std
adc
mov
in
mov
test
pop
faddl
mov
sbb
mov
pop
pop
pushf
cmovno
ja
lock
lcall
shlb
call
enter
cld
inc
jo
ss
pop
inc
jb
movsb
xor
sub
xor
jle
lret
pushl
subb
mov
movl
das
ficomps
cmp
adc
push
lcall
fcomip
subb
sub
fiaddl
adc
jb
lods
mov
push
push
xchg
int
jmp
sub
bnd
stos
cs
je
mov
add
lcall
jns
pushl
xor
ret
xchg
adc
jae
dec
xor
pop
sub
incl
pop
cmp
mov
mov
or
lds
pop
lock
jo
sbb
fs
cld
subl
xchg
dec
and
sbb
pop
mov
movsb
pop
jmp
shrl
lret
test
inc
push
in
inc
frstor
add
mov
mov
call
sbb
mov
push
std
xor
fwait
mov
and
ds
sub
xchg
loop
data16
cld
call
out
or
jbe
js
pop
out
or
outsl
add
mov
mov
mov
jbe
mov
inc
orb
lock
lcall
call
cmpsb
pop
jecxz
or
mov
or
sbb
and
mov
call
aad
jno
mov
xor
js
mov
add
loopne
mov
mov
or
int3
aad
addb
cmp
in
out
add
jge
std
adc
sbb
pushl
xor
out
mov
rcrb
aaa
mov
sub
mov
decl
push
sar
test
movb
insb
cmp
xchg
sbb
mov
dec
das
pop
pop
push
cmpsb
psubsw
mov
testl
xor
sub
std
ljmp
mov
or
fsubrs
sub
add
pushl
adc
dec
push
xchg
adc
aad
mov
stos
mov
and
jmp
ljmp
xchg
addb
jb
call
jl
leave
or
or
cs
shl
jns
out
call
or
add
icebp
mov
pop
imul
xchg
mov
test
xchg
mov
xor
leave
repz
scas
das
scas
mov
mov
ljmp
shrl
out
das
push
xchg
push
jno
cld
stos
outsl
mov
inc
and
mov
cmp
jg
add
push
shrd
xchg
pop
or
dec
and
mov
jl
or
mov
stc
push
push
cld
movsl
dec
test
mov
inc
lock
cld
mov
xor
pop
mov
shrb
lahf
pslld
inc
lret
outsl
add
dec
push
out
pop
dec
ret
psubsb
jmp
in
inc
int3
cmpsb
sbb
xor
pushf
pop
inc
jae
xchg
lods
imul
cmpsb
dec
mov
fbstp
add
out
pop
pusha
rcll
pop
jo
pop
insl
sbb
insb
mov
adc
dec
pop
adc
rcll
andl
mull
xor
int
adc
pop
sub
cld
call
mov
int3
pop
xchg
enter
rclb
scas
aad
cmp
cltd
clc
mov
add
gs
or
xlat
gs
mov
data16
ds
ds
xor
ds
add
add
mov
or
out
rorb
idiv
int
aam
mov
lods
and
push
sub
fsqrt
cmp
repz
ljmp
sarb
cmpl
fdivrl
sbb
cli
cmp
xorb
cmc
mov
in
or
mov
cmp
fs
ljmp
or
mov
lods
cmpsb
add
test
cmp
cld
imul
jg
cmp
mov
stos
sub
lods
test
xchg
dec
jle
shll
dec
imull
test
push
mov
add
add
inc
push
fstl
daa
and
testb
call
ret
push
adc
lds
mov
loopne
add
mov
das
dec
enter
sub
mov
pusha
push
push
push
mov
sahf
nop
fbstp
test
sahf
je
adc
mov
lcall
mov
loop,pt
xchg
push
pop
aad
nop
pop
pop
lea
jmp
in
out
push
mov
inc
mov
push
js
mov
mov
sub
adc
adc
ss
call
or
cmc
adc
mov
inc
lods
sahf
aam
xor
es
cmp
dec
push
pop
adc
jge
pop
pop
inc
and
mov
sti
cwtl
imul
fldt
call
fs
fdiv
cmp
daa
sbb
inc
add
or
ret
decl
adc
movl
loope
xor
call
hlt
out
mov
jmp
xchg
pop
popa
aaa
fbld
inc
mov
adc
pop
icebp
pushl
nop
pop
insb
fs
lcall
sbb
sahf
cli
cltd
or
adc
add
aam
incl
jnp
in
fsub
dec
push
lods
add
mov
pop
xchg
test
sub
xlat
push
mov
inc
dec
sarl
push
mov
and
jle
and
sbb
fimull
mov
pop
inc
outsl
adc
adc
lock
adc
mov
or
lock
mov
sbb
sti
lcall
xchg
inc
push
sahf
xchg
and
cs
add
js
dec
xor
rorl
inc
xchg
aam
icebp
ja
add
push
das
cli
fsts
and
je
cmp
jmp
sbb
adc
cwtl
inc
aam
sub
loopne
fists
sbb
rcll
rolb
push
std
decl
mov
push
aad
hlt
adc
fbld
inc
push
push
add
rclb
mov
iret
cmp
into
jae
mov
or
cmp
xchg
test
scas
push
pop
aas
sbb
int3
cmc
in
mov
jp
scas
xor
js
or
xchg
mov
add
mov
gs
ja
cld
test
xor
iret
xchg
mov
decl
scas
mov
mov
insb
insl
sbb
xchg
subl
ljmp
xor
xchg
sub
leave
mov
icebp
xor
pop
ret
mov
xchg
or
ds
fbstp
cmp
pop
cmp
rorb
stos
mov
pop
repz
cmp
xlat
mov
adc
stc
cmp
jnp
push
push
sbb
jg
mov
es
xchg
push
inc
mov
data16
inc
mov
mov
adc
push
sti
loopne
jo
repz
add
lahf
jp
addr16
jg
loopne
inc
pop
pop
lret
idiv
jmp
repnz
popa
fs
sbb
jns
pop
nop
jo
mov
out
add
xchg
es
push
add
pushf
xor
adc
lret
lcall
mov
adc
stc
and
jl
dec
ss
in
das
jbe
repz
mov
out
cli
jmp
dec
pushl
dec
jb
mov
call
gs
jo
mov
ljmp
jo
cmp
dec
movsb
hlt
dec
es
clc
imul
sahf
dec
jge
popf
aam
pop
sbb
push
adc
jecxz
push
adc
ljmp
sub
rorl
xchg
xchg
cmc
decl
inc
data16
fidivs
in
pop
push
mov
pop
sbb
pop
adc
dec
fsub
push
mov
and
fptan
ss
push
outsl
push
cmc
ljmp
cmp
fsubp
pop
leave
fcompl
or
mov
call
push
mov
sub
out
push
movsl
sbb
inc
push
lret
test
pop
nop
add
jno
pop
roll
jnp
arpl
mov
icebp
outsb
dec
xchg
xchg
jle
dec
incl
cmp
imulb
sbb
xor
adc
push
fcos
pop
hlt
incl
jae
mov
movsb
adc
xchg
cmpsb
out
mov
mov
mov
ret
mov
xchg
call
mov
jg
mov
add
popf
inc
push
iret
mov
jl
fldenv
test
dec
incl
push
or
nop
cwtl
pushf
mov
or
lock
test
dec
ret
repz
rolb
flds
addr16
ljmp
xchg
xor
in
andl
sti
sbb
call
shl
xchg
mov
mov
pop
dec
dec
xor
xor
idiv
inc
ret
lret
dec
fsubr
inc
stos
leave
push
mov
clc
js
rcrb
shll
andl
andl
mov
rcll
jne
popa
xchg
xchg
repz
jae
add
call
test
fldcw
fcoml
outsb
push
jmp
lock
nop
and
in
divl
ds
jae
pop
adc
inc
dec
xor
sbbb
dec
ret
sar
mov
xchg
in
ja
xchg
in
jae
out
mov
jns
xor
ljmp
jbe
mov
mov
push
pop
stc
or
pop
xor
xchg
cmp
filds
lret
mov
je
jle
test
adc
std
cltd
ljmp
jmp
jbe
cmp
cs
ljmp
in
das
sub
jno
mov
and
in
test
add
imul
loopne
in
add
mov
rep
mov
cmc
and
and
adc
hlt
dec
call
aam
fcomi
lret
in
adc
jo
jecxz
fistpll
adc
cs
dec
dec
idiv
call
lea
push
pop
insb
pop
xor
stos
stos
fistl
lret
idivb
incl
loopne
in
fstl
or
cmp
loope
inc
push
cvtpi2ps
add
mov
cmp
ret
jnp
jp
mov
daa
mov
dec
add
adc
cmp
lcall
js
add
push
cmp
push
or
jge
jbe
decl
ja
roll
incl
push
test
shl
xor
mov
or
push
pop
sub
xchg
mov
mov
lcall
push
cmp
addl
jg
cmp
repz
and
jo
sbb
adc
pushf
mov
pushl
mov
fcomip
insb
mov
mov
inc
mov
lret
push
and
fcomip
pushl
jecxz
xor
jecxz
adc
xchg
js
cltd
or
xor
inc
mov
mov
dec
mov
sub
and
ror
fucomip
fsubrs
add
std
jmp
decl
aad
fsubrl
and
cld
test
pop
pop
mov
mov
shlb
outsl
add
lcall
xchg
adc
call
popf
xor
xor
das
cli
das
aaa
pop
adc
into
sbb
push
or
test
mov
or
lock
lret
jb
clc
and
inc
fdivp
push
jge
mov
out
out
cwtl
or
pop
sar
xor
add
or
jmp
pop
ficomps
adc
jmp
mov
bound
dec
stos
jmp
sbb
mov
cli
incl
icebp
rcrl
xlat
jo
adc
or
push
push
xchg
xlat
cmp
cmpsl
lcall
push
fucomip
sub
scas
add
nop
loop
nop
int3
repnz
call
ljmp
jge
cmpsl
mov
adc
rolb
mov
mov
sar
scas
lds
sub
and
out
pushl
ret
cs
incl
mov
jae
xlat
cmp
mov
or
aaa
push
in
cmc
mov
not
leave
divl
fcomip
jnp
mov
test
xchg
cmc
xchg
mov
cli
jae
mov
rclb
jbe
fistpl
mov
xor
mov
jo
icebp
nop
or
cmc
hlt
sbb
pop
push
xor
add
xchg
push
stos
dec
std
push
cld
in
scas
je
xchg
inc
fildl
fwait
jg
test
cli
mov
out
pushf
out
jle
call
mov
pushf
jo
fwait
sbb
icebp
push
pop
lock
out
push
scas
aam
mov
inc
sub
mov
sub
dec
jae
sbb
inc
xor
ljmp
jmp
decl
lods
out
and
lahf
jae
mov
sbb
das
xor
jmp
mov
divb
decl
and
inc
aad
sbb
insl
shll
in
push
xor
or
in
xchg
pushl
rol
loopne
mov
out
mov
mov
jg
ljmp
push
shl
cwtl
lcall
jne
test
cmpsb
xor
sbb
aaa
jle
or
das
add
jbe
int3
outsl
xchg
mov
ljmp
aas
les
inc
test
int3
fcomi
loope
xchg
mov
or
sbb
fisttpl
in
bnd
ljmp
mov
jl
or
xchg
lods
lcall
les
pop
lock
pushl
call
mov
sbb
push
rorb
shrl
insb
cld
add
mov
xor
sub
mov
scas
pop
sbb
mov
inc
add
ljmp
pop
int
xor
jmp
xor
outsb
lret
rolb
add
lds
sbb
jge
fcomip
frstor
loop
addr16
cs
into
xchg
sbb
addr16
mov
outsl
and
add
stc
rclb
stc
ss
push
jae
jg
pop
data16
hlt
mov
push
fstps
mov
int
iret
adc
popa
rorl
pop
sub
in
and
cwtl
insb
ud0
pushl
dec
out
add
popf
lock
sbb
sub
in
mov
mov
push
lcall
xor
push
xor
push
jnp
je
mov
xchg
or
mov
aam
data16
mov
pushl
adc
jmp
js
sub
xor
fbstp
mov
cwtl
push
push
std
pushl
add
rorb
sarb
sbb
mov
stos
sti
jae
ljmp
sarb
lea
sbb
mov
lods
testb
incl
adc
jp
and
cld
lods
or
loopne
sbb
jbe
sub
sti
xchg
mov
adc
sbb
in
sbb
in
jns
test
mov
sbb
in
mov
and
mov
ljmp
pop
std
iret
sub
sbb
repz
testb
popf
and
mov
dec
pushf
ud0
sbb
pop
adc
jbe
and
bound
pop
inc
popf
mov
sbb
or
out
pushl
in
roll
sub
jg
push
xchg
out
adc
shlb
std
pop
sub
mov
insb
sbb
jmp
jecxz
cmp
in
out
or
in
sub
sbb
ljmp
movsl
mov
jge
cltd
xchg
jbe
js
popf
fistl
lods
xchg
divl
scas
jbe
lcall
rorb
cli
std
cmp
lcall
test
aam
sbb
push
ljmp
lret
sub
mov
sub
jp
xor
pop
aam
mov
les
fdivp
pushl
scas
cli
dec
int3
repz
clc
jg
sub
cmp
xchg
into
xchg
scas
sbb
and
mov
dec
dec
popa
push
cltd
ss
pusha
xlat
std
decb
inc
stc
push
push
neg
stc
pushl
or
sbb
mov
sub
and
popf
cld
aas
loope
push
push
jb
stos
inc
lcall
lock
lods
or
lea
rorl
adc
add
mov
in
hlt
mov
mov
pushw
loop
push
push
aaa
test
xor
jg
mov
mov
mov
lea
mov
arpl
jb
dec
jmp
fdivrp
jae
loope
out
rcll
inc
outsl
sbb
ret
adc
mov
sti
das
mov
ljmp
out
mov
jge
cld
jg
jg
movsl
int
xor
xchg
popf
mov
cmp
or
sub
ljmp
or
orl
add
pop
cmp
adc
std
push
inc
or
adc
sbb
adc
test
ljmp
lahf
xchg
sbb
sub
fcompl
lods
icebp
xor
bound
in
inc
call
push
sbb
mov
flds
or
add
cli
mov
push
rorb
or
adc
lods
call
rorb
sbb
loope
lret
std
jae
jo
decl
or
or
shlb
xor
mov
loopne
insl
dec
sbb
loopne
pop
addr16
test
divb
mov
daa
daa
subl
pop
aaa
xor
stos
ficoms
jno
push
stc
adc
arpl
adc
pop
mov
out
mov
stos
xor
push
mov
mov
jmp
mov
xchg
out
or
mov
test
pop
out
call
call
aaa
dec
xchg
int3
and
cli
or
and
or
dec
movsb
shrb
notb
jg
outsl
fdivl
and
xchg
jno
lock
notl
sti
in
cmp
jns
ret
fcompl
out
mov
pop
test
or
pop
out
and
rep
xchg
jg
out
or
cld
push
xor
shll
inc
jg
aam
or
mov
sbbb
lahf
mov
decl
pop
test
push
shlb
subb
sbb
push
cmp
xlat
out
ljmp
push
test
and
sahf
xchg
jl
shrl
sbb
pushf
aad
lahf
bound
mov
jg
mov
xor
in
adc
sub
xchg
fdivrp
jg
lcall
dec
ds
dec
aad
ret
repz
and
std
scas
cld
sahf
dec
call
and
cltd
dec
push
orb
pop
test
dec
in
jl
decl
sbb
add
fsubrs
cmp
shlb
orl
imulb
push
xor
adc
jl
adc
mov
into
xor
mov
mov
data16
pop
pop
push
lea
or
insb
adc
pop
mov
ficoms
scas
pushl
mov
jle
movsb
jg
mov
add
fidivrs
mov
jge
or
subl
push
aaa
orl
lods
push
dec
cmp
mov
sbb
push
mov
sbb
push
inc
jbe
jmp
xchg
inc
mov
push
push
int3
ret
sbb
jg
jmp
sbb
jle
enter
jle
adc
add
dec
inc
in
lcall
insb
adc
dec
add
jne
clc
es
jl
push
mov
je
gs
idiv
cld
std
cmpsb
fidivrs
xchg
jg
push
sub
insl
xchg
push
inc
fadd
sbb
sarb
repnz
mov
outsl
or
sbb
std
ds
ja
cli
into
hlt
push
out
adc
decl
adc
imul
inc
jae
adc
repnz
dec
in
sub
pushl
pop
dec
hlt
jne
out
push
stc
ljmp
ds
sub
jno
jmp
in
fwait
in
pop
pop
jl
mov
jl
add
mov
sti
flds
shll
jmp
or
pushl
int
adc
inc
and
es
sbb
call
data16
sbb
push
nop
sarl
out
loop
fistpll
loop
data16
out
sbb
jmp
xchg
js
mov
mov
sbb
jg
std
inc
xchg
mov
xchg
sub
adcb
call
xchg
lock
sub
pop
mov
in
aas
and
jno
lods
rcll
loop
iret
or
clc
outsl
xchg
sarb
out
dec
and
pop
mov
cs
pop
icebp
ljmp
sub
xlat
add
lods
les
add
lock
mov
in
lcall
pop
dec
cmp
loopne
cld
repz
ror
mov
adc
and
dec
nop
pop
and
std
mov
call
lods
lret
adc
mov
xor
cmp
fs
dec
scas
add
xchg
dec
mov
pop
xor
mov
lods
mull
lret
adc
pop
popa
loope
sbb
cmp
sqrtps
rclb
push
adc
pop
lret
xchg
in
inc
sbb
dec
pop
in
aas
inc
movb
lcall
sub
aad
xchg
ja
aaa
repnz
sub
dec
inc
decb
shll
mov
decl
std
lods
jbe
push
xchg
or
clc
pushf
aas
mov
add
jmp
mov
out
and
test
pop
lret
jbe
fildll
sub
xchg
gs
icebp
mov
pop
ljmp
mov
lock
xor
iret
dec
push
out
sub
movsl
pop
and
es
ljmp
ja
xor
or
sub
jne
cltd
stc
pop
int
mov
frstor
push
jl
mov
cli
sub
xor
testb
loopne
xor
jbe
aas
movsb
sbb
sub
outsl
clc
mov
sahf
push
lock
scas
movsl
add
or
add
sbb
in
push
jne
dec
jg
negb
cmp
adc
xor
add
inc
divb
out
cs
mov
mov
clc
jmp
pop
xor
ljmp
es
adcl
je
data16
icebp
insb
les
ljmp
lahf
xchg
pop
jne
push
push
decl
mov
fldl
jmp
fsubr
test
icebp
lods
mov
popf
arpl
in
cmp
push
mov
pop
inc
lcall
inc
ret
loope
mov
daa
cmpsb
movl
xchg
xchg
fidivs
lahf
push
insl
pop
xor
add
push
mov
fsubs
insl
mov
mov
adcl
mov
xchg
call
mov
cs
add
pop
int
adc
mov
call
jb
faddl
xlat
dec
pop
and
pushf
jmp
cmpsb
icebp
sbb
pushl
std
outsl
mov
sbb
imul
test
sbb
xor
sti
sub
sub
loop
mov
sarb
notl
cld
cli
nop
adc
js
pop
xchg
pushf
icebp
imul
jecxz
xor
push
test
imul
mov
jg
aad
dec
ljmp
sub
notb
add
inc
outsl
imull
iret
leave
push
jmp
sbb
push
add
fimuls
jp
imul
frstor
outsl
cmp
test
cli
call
or
lock
fdivs
pop
push
dec
outsl
pop
adc
pushl
xor
cmpsl
insb
dec
stos
push
pop
jb
repnz
repnz
mov
sbb
movsl
shll
push
xor
data16
jmp
push
mov
add
add
lcall
push
insl
cmp
cmc
push
mov
add
push
sarb
cmp
dec
into
outsb
adc
es
ja
sub
lods
jbe
jg
fsubr
cmp
lea
iret
mov
imull
roll
pop
cld
pop
adc
insl
mov
jg
xchg
test
loopne
adc
sub
jmp
pop
jo
incl
cmpl
jmp
js
dec
xchg
xor
jl
negb
cmp
or
fwait
ja
xchg
lret
clc
lock
jmp
shr
sti
xchg
cld
rolb
mov
decl
in
jmp
or
or
mov
pop
icebp
pop
inc
xor
jae
arpl
js
or
std
ljmp
adc
bound
sub
pusha
leave
push
lcall
hlt
push
fs
cmp
or
data16
aas
ss
cmpsl
jb
lret
aam
rorb
jae
call
xchg
insb
addr16
jmp
fs
out
rep
imul
adc
incl
andl
push
mov
push
add
cltd
jmp
cli
adc
out
or
adc
call
mov
out
adc
orb
repz
adc
cmpl
loop
subb
mov
cwtl
jg
stos
pop
je
or
pop
ljmp
cli
lret
nop
and
cs
pop
dec
gs
jb
ljmp
mov
ds
adc
dec
sub
push
repz
ljmp
addr16
test
xchg
dec
icebp
sbb
shlb
adc
or
lcall
mov
aad
pushl
xchg
das
lcall
mov
les
jmp
xor
insl
xor
aad
xchg
out
call
jne
imul
bound
mov
push
and
mov
sub
decl
adc
sbbl
mov
xor
xchg
jbe
push
out
jg
and
cmc
sbb
in
jp
frstor
jle
fdivr
lcall
enter
sub
mov
lods
push
mov
xor
push
pop
sarb
xor
dec
jo
inc
jl
lret
ret
jns
adc
jmp
mov
pop
jle
call
cltd
mov
xor
insb
xchg
lea
cli
enter
jb
adc
call
adc
xor
sti
pop
rolb
pop
adc
rorl
jle
shlb
cmp
add
lret
jp
mov
ljmp
jae
js
jg
fs
push
push
shlb
ficoml
daa
fwait
or
jne
call
jecxz
aas
pop
bound
fsts
cmovl
ljmp
rcl
and
decl
add
inc
xchg
xchg
ret
cmpsl
sti
scas
push
hlt
aas
dec
mov
es
and
mov
orl
inc
rep
jns
lcall
inc
xor
cmpsb
add
jae
pop
and
or
pop
mov
or
jb
incl
adc
pop
xchg
out
sbb
js
mov
cmp
iret
lds
aaa
or
sar
ljmp
mov
cmp
rcrl
into
cmp
loop
es
cli
push
fsubl
jg
xchg
and
dec
lcall
stos
clc
mov
dec
lods
aam
jae
or
lret
shr
incl
movb
test
or
pop
cmp
xchg
sbb
mov
call
dec
cmp
lcall
push
dec
aaa
xchg
xchg
xchg
sub
daa
repnz
adc
mov
js
or
lcall
mul
nop
ja
pop
dec
sbb
push
cmp
loop
sub
fstpt
data16
out
dec
sbb
es
mov
mov
clc
mov
lcall
cmc
jae
or
dec
pop
repz
add
popa
pop
cmpsb
xchg
xchg
addr16
insl
mov
lcall
pushf
insb
mov
xchg
add
jbe
loop
mov
fsubrs
int3
fwait
insl
adc
mov
in
push
and
out
mov
js
decb
pop
dec
sbb
lcall
hlt
mov
dec
jg
jne
jnp
mov
jb
fsubr
out
pushf
in
aaa
mov
stos
imul
out
cmc
mov
push
jnp
lret
dec
pop
sub
push
call
push
jge
pop
cwtl
test
or
in
lea
nop
cmpsb
bound
add
pop
add
add
sbb
rolb
push
jg
push
push
jnp
jae
call
cmc
lea
adc
add
inc
lds
dec
call
decl
scas
push
rcll
outsl
ja
mov
push
xchg
test
and
int3
nop
cmpsl
push
xor
call
insl
xor
bound
ss
sbb
rorl
mov
pop
sbb
orl
push
loope
push
cmpsb
mov
adc
cltd
outsb
fcompl
addr16
cmc
xchg
divl
ja
cmp
scas
repnz
jnp
in
int3
dec
mov
sub
mov
xchg
mov
inc
mov
adc
jne
or
jno
cld
mov
out
clc
dec
push
and
test
mov
pop
cmp
fcom
or
repz
arpl
roll
mov
dec
push
in
ss
xor
ljmp
cmc
cwtl
cmp
xor
xchg
and
push
std
fisttpl
xor
out
xorl
lcall
pop
fucomi
movsl
and
addr16
dec
int3
insb
scas
mov
insb
adc
lret
popf
inc
jno
das
clc
push
das
cmpsb
repnz
inc
push
cltd
mov
in
test
and
pop
lcall
call
stc
imul
mov
push
xchg
adcb
adc
loope
dec
pop
mov
jno
lock
mov
mov
xchg
mov
cld
mov
pop
xlat
xchg
insl
push
mov
or
pop
mov
les
pushl
push
fidivrl
test
mov
and
daa
cmc
inc
dec
xor
call
inc
ffree
or
gs
clc
insb
push
xorl
or
sbb
sahf
jo
adc
decl
add
jns
sbb
stc
scas
lock
mov
imul
dec
lods
push
gs
decl
mov
jns
adc
popa
dec
fcomi
call
jle
cmc
sbb
test
je
jnp
aad
push
jmp
sbb
clc
cmp
push
jle
jb
in
arpl
mov
fcoml
cmpsl
ljmp
dec
ficomps
stos
xor
fcompl
or
mov
fsubl
js
pop
mov
adc
pop
pop
or
pop
cmp
pop
cwtl
or
in
arpl
adc
sbb
lahf
mov
pop
cmp
in
test
pop
sbb
cwtl
xor
xchg
nop
outsb
prefetchnta
jle
push
or
gs
loopne
sbb
jne
mov
mov
ds
decl
sbb
inc
push
in
test
pop
jno
xor
bound
adc
mov
jg
push
int3
cltd
gs
and
insb
out
daa
repz
sub
sub
lcall
dec
add
push
sbb
jnp
dec
or
xor
outsl
mov
mov
pop
nop
inc
dec
insb
push
dec
lahf
mov
fldt
std
xchg
int3
mov
push
in
lds
jae
fidivrl
inc
dec
lods
jl
fucomip
int3
dec
fstps
pushl
xor
sbb
mov
and
sarl
mov
sub
and
pushl
iret
mov
shrl
xchg
xchg
dec
aas
or
ja
inc
mov
adc
imul
hlt
jbe
mov
push
arpl
adc
sbb
push
stos
lcall
or
std
in
ret
xchg
jne
mov
out
nop
movsb
lcall
dec
push
mov
in
adc
ret
mov
inc
movsl
and
xor
sub
sub
in
jo
add
mov
pushf
sbb
pop
shrb
sahf
repz
popf
stos
jae
test
fcompl
daa
lea
repnz
cli
fisttps
push
mov
push
pushf
push
mov
mov
dec
add
icebp
xchg
dec
mov
call
repz
scas
adc
mov
pop
add
cld
xchg
lds
mov
das
hlt
sub
or
lods
adc
add
cld
idivl
test
popa
jbe
sub
sahf
shll
cmp
mov
sbb
jb
xchg
push
nop
push
cltd
jb
pushf
cmpsl
repz
icebp
cmc
fisubrl
mov
in
mov
cli
sub
ds
lcall
fwait
and
mov
jmp
cmpsl
push
test
and
mov
mov
inc
test
pop
xchg
inc
cmpl
push
sbb
aam
push
jge
cmc
test
call
ja
mov
adc
fwait
popf
movsb
dec
and
pop
in
ja
and
dec
sbb
cmpl
pushf
or
jmp
push
mov
pop
data16
sbb
aas
outsl
mov
jmp
rolb
and
insl
inc
outsb
cmp
pop
shrb
sbb
xchg
icebp
js
movsl
sar
sbb
je
repz
jae
icebp
xchg
push
mov
decl
mov
addr16
cmpsb
sbb
inc
jne
inc
xor
xchg
adc
mov
lahf
sahf
pop
mov
int3
mov
cmp
mov
cli
negb
mov
mov
adc
mov
mov
loop
mov
flds
push
mov
xor
dec
imul
dec
insb
cmpsl
mov
scas
lods
cmpb
call
and
rorl
fmull
aad
fisttpll
sub
mov
sub
insl
ljmp
push
nop
lahf
cmp
pop
adcb
and
dec
jg
loop
iret
fiaddl
decl
pushl
xchg
cld
and
addl
cltd
adc
push
mov
ror
test
xor
sbbb
stos
jle
jecxz
dec
sub
sar
ljmp
pop
xorl
xor
and
sbb
jl
or
les
and
rorb
les
aas
jne
ljmp
mov
dec
andl
popf
jo
and
jnp
scas
scas
pushl
cmpsb
les
mov
cmc
fwait
dec
mov
lret
sub
jmp
xor
test
lahf
push
xchg
push
pop
test
push
xor
stc
cld
mov
jbe
xor
imul
out
xchg
in
and
fstl
cmp
and
or
cmp
ljmp
sub
xor
inc
loope
je
movsb
shr
enter
xor
jbe
jl
inc
or
push
cmp
loop
dec
test
dec
iret
gs
xchg
pop
hlt
add
mov
adc
mov
inc
add
sbb
add
dec
scas
shlb
js
aaa
inc
aad
cmpsb
cmp
je
mov
sar
call
lret
mov
das
shlb
xor
mov
in
pop
dec
stc
sub
pushl
sbb
dec
stos
mov
loop
ret
sbb
fwait
jp
test
mov
dec
loope
pop
ljmp
pushl
mov
jns
cmp
and
xor
insb
scas
inc
mov
sub
ja
lods
ljmp
jmp
lahf
push
sub
shlb
imul
jg
inc
in
mov
adc
mov
hlt
lcall
mov
mov
mov
dec
fstpl
out
hlt
xor
xor
cmpsl
sti
xor
lock
lret
fcomip
call
add
cli
pushaw
iret
mov
int3
mov
outsl
sub
push
adc
in
icebp
int3
mov
dec
and
es
out
push
lret
movsb
shll
fidivs
pop
inc
jmp
stos
pop
push
mov
inc
out
fmull
xor
into
mov
pusha
mov
repnz
ljmp
jb,pn
mov
popa
mov
outsb
int3
xor
xlat
enter
je
and
sub
pop
mov
xor
and
shl
pop
jbe
fimull
adc
out
jle
les
ljmp
mov
xchg
rol
popf
sub
data16
inc
test
bound
dec
sub
sti
dec
sub
aam
aam
cmp
jne
mov
or
mov
and
in
mov
testl
push
adc
inc
mov
das
push
and
add
pop
xor
out
mov
inc
sbb
insl
out
dec
loop
cmpsb
ret
mov
mov
and
repz
cmpsb
adc
push
icebp
fbld
decl
cwtl
mov
inc
popa
mov
ljmp
clc
mulb
mov
sar
leave
rolb
jle
aad
mov
jno
lcall
incl
xchg
insb
lcall
add
es
iret
xchg
or
call
and
xchg
lahf
jae
mov
lcall
inc
test
push
ljmp
loopne
ret
mov
ret
subl
sbb
fsubrl
and
xorb
dec
xor
movsb
lret
mov
lret
leave
push
mov
incl
fstl
mov
test
ret
iret
les
cmpsl
inc
loop
fsubs
mov
mov
cmp
ds
add
mov
lahf
jmp
dec
and
inc
sub
dec
fdivrl
stos
mov
or
fcompl
mov
rdmsr
jno
mov
fstl
dec
mov
andl
add
push
ret
call
decl
cmp
mov
dec
jb
repz
out
add
incb
inc
and
fdivrp
and
out
fbld
mov
push
lar
sub
cmp
cmpsb
fstl
cld
mov
mov
stos
pop
cli
inc
ljmp
xor
add
lcall
in
repz
sbb
repz
imul
mov
sub
jmp
xlat
ss
movsl
int
mov
xchg
pushf
pop
pushf
imul
pushl
daa
fldlg2
lods
push
dec
jg
lds
sbb
mov
cmpsl
jge
mov
rcl
push
cmovbe
push
xchg
scas
lret
push
sarl
outsl
mov
jl
push
dec
jo
in
ljmp
int3
push
pushf
dec
aaa
stos
and
test
in
repnz
int3
xchg
pop
mov
loope
sbb
xor
das
cli
ljmp
sub
sbb
rolb
xor
stc
lds
pushf
jg
lock
inc
jg
xor
aad
int
or
int
jo
lcall
jne
insl
and
jmp
fnsave
imul
dec
shll
dec
lcall
iret
or
mov
fbstp
xchg
bound
dec
pop
mov
cmp
sub
sbb
data16
mov
jmp
aad
pushf
cmp
adc
outsl
nop
mov
fcomip
lret
ja
xchg
mov
mov
jnp
ljmp
dec
call
out
cmp
out
fdivl
adc
or
xchg
and
jo
xor
jp
push
push
sbb
adcb
or
sahf
jno
mov
add
inc
jae
jmp
ret
add
testb
add
pop
and
movsb
ja
lahf
jge
adc
shrl
mov
xlat
pop
jno
mov
call
mov
movsb
sbb
jmp
cmp
bound
sarb
and
lock
mov
xchg
ljmp
call
push
sahf
mov
mov
push
int3
fcomi
js
pop
mov
call
push
mov
cli
inc
inc
mov
mov
dec
scas
fiaddl
jmp
cld
pop
mov
lock
jg
call
mov
bound
lds
int
mov
in
pop
xchg
test
xchg
call
mov
or
scas
sbb
mulb
mov
movsl
push
loope
hlt
lcall
out
dec
and
mov
popf
std
jnp
lahf
mov
ret
jmp
out
mov
ret
inc
pop
lret
xor
incl
push
cmp
test
xor
mov
lock
ljmp
loope
cmp
jno
sbb
divl
push
or
insb
mov
dec
movsl
xchg
bnd
jecxz
push
shlb
mov
fs
andb
dec
lods
sub
decl
sbb
gs
popf
pop
dec
roll
lods
rcll
pop
and
jg
cltd
and
and
sub
mov
lods
into
into
cs
cmc
pop
in
lcall
sbb
inc
movsb
scas
popf
inc
xchg
cli
popa
inc
stos
fisubl
pop
mov
in
mov
push
add
jmp
andb
adc
out
lock
in
pop
mov
and
lcall
movsb
mov
sbb
movsl
pop
mov
adc
inc
hlt
add
gs
cmp
sub
jg
decl
inc
sub
mov
xlat
aas
add
adc
push
push
inc
fimull
cld
pop
hlt
push
sub
adc
sub
out
rclb
sub
mov
cmp
jmp
hlt
jg
add
mov
ret
sub
incl
xor
fistps
mov
sarl
aaa
push
negb
jle
incl
rcll
jge
rorb
ror
xchg
leave
xchg
xchg
test
mov
out
adc
cmp
push
cli
push
sub
repz
ficoms
mov
cmp
lcall
gs
inc
insb
into
movsl
adc
es
inc
or
scas
pusha
xor
stc
mov
jp
cmpsl
pushf
das
jg
add
lret
xor
xor
rcr
cmc
mov
call
jp
fists
push
pop
jns
push
push
dec
mov
add
pop
mov
sub
push
ljmp
nop
or
sbb
ss
stc
adc
jnp
jno
imul
sbb
cmp
mov
into
xchg
mov
xchg
jecxz
je
jg
adc
gs
adcb
ja
decl
ret
add
mov
stc
mov
sahf
jae
xchg
aam
leave
sti
jno
add
lcall
stos
push
cmp
jbe
adc
repz
add
movsb
push
rcll
dec
lahf
fisubl
js
or
test
lret
les
and
lock
jg
shr
loopne
mov
fs
xchg
mov
cmpsl
das
or
aad
adc
lcall
xor
push
mov
jne
cmp
fisttpll
in
stos
outsl
cmp
dec
mov
call
xchg
xor
out
nop
xchg
lds
inc
cli
add
and
call
xor
dec
std
xor
sub
cmc
jb
jg
inc
mov
sub
ljmp
adc
mov
ljmp
ret
inc
dec
into
add
and
lds
sub
decl
mov
or
mov
loop
outsl
mov
mov
sbb
cmp
mov
xor
movb
adc
loopne
sbb
shlb
out
iret
and
or
pop
cmc
mov
test
mov
pop
out
in
adc
mov
test
repz
call
in
sub
movsl
rclb
jmp
rorl
add
mov
lret
sbb
pop
mov
mov
ljmp
arpl
out
fwait
popf
cmpsb
push
sbb
mov
in
iret
adc
scas
xor
aam
inc
push
push
dec
sub
push
adc
dec
pop
adc
decl
sub
push
fcmovnb
clc
push
sub
out
inc
cmpsl
psubusb
xor
cmpsb
cmp
cmp
lcall
or
movsb
imul
jge
int
push
or
push
cmpsl
cmp
xor
push
lahf
int3
mov
ljmp
lcall
ljmp
insl
or
xchg
mov
ljmp
mov
xchg
xor
push
icebp
out
invd
pop
aad
lret
push
shlb
ljmp
sbb
mov
gs
xor
jp
insb
mov
inc
xchg
add
ja
jb
repz
sub
loope
mov
out
push
sub
mov
adc
js
jbe
mov
and
add
incl
gs
jle
mov
dec
mov
xchg
mov
roll
push
adc
dec
xchg
push
xchg
pusha
pop
mov
inc
mov
rorb
mov
cs
adc
mov
loopne
dec
lret
scas
and
decl
xor
mov
mov
test
and
cli
loop
lret
out
adcl
clc
icebp
fimuls
jp
jl
xor
loopne
mov
decl
mov
inc
rol
add
shrl
xchg
aas
jl
push
sbb
sbb
lcall
mov
cmp
mov
pop
cs
lock
sbb
push
leave
lock
xchg
cld
cmp
sub
mov
out
sub
decl
shlb
push
xchg
loope
xor
xchg
cwtl
add
cmp
inc
add
scas
call
js
and
shrl
add
stos
das
jecxz
js
sub
lock
fists
xor
xor
sbb
cmp
cld
ss
out
mov
and
add
lahf
scas
sbb
cmpb
js
xchg
add
sbb
scas
out
notl
lock
call
repnz
and
mov
fbld
lods
cmp
jb
test
rorl
cmpsl
xor
ljmp
jmp
sbb
lods
aam
jg
mov
dec
ljmp
mov
pop
mov
out
int
aam
scas
adc
out
cmpsb
or
das
das
inc
push
mov
cmpsb
sub
decl
pop
and
roll
lea
push
sub
push
adc
jmp
mov
dec
int3
dec
adc
mov
cmp
cmpsl
scas
rol
rorb
cmp
adc
inc
scas
ret
mov
loope
rcrb
sub
rorl
pop
jb
inc
mov
into
test
and
cs
push
rclb
sub
ljmp
or
sub
or
xchg
das
hlt
repz
fistps
imul
push
test
scas
das
mov
xor
repz
sub
lds
hlt
cmp
das
cmp
mov
dec
imul
packuswb
mov
dec
nop
dec
test
mov
jbe
xabort
mull
pop
insb
je
cld
mov
push
in
psrld
add
sub
mov
mov
xchg
int
mov
inc
sub
pushl
pushf
cld
inc
outsl
push
cmp
lea
lds
dec
test
ds
and
incl
lods
lods
sub
inc
repz
cmp
dec
inc
xor
mov
iret
lcall
les
push
mov
into
stos
dec
lods
sub
xlat
ficompl
cwtl
rcrl
aad
sub
incl
insl
pop
lret
inc
sub
pop
stos
mov
dec
mov
push
jg
lret
call
mov
sbb
sti
lea
push
xchg
lods
sub
decl
decb
jnp
cmp
push
or
sbb
gs
adc
cltd
fsub
out
incl
or
sbb
pop
xchg
insb
rcl
or
mov
movsb
addl
jge
sub
and
add
mov
lods
int3
test
test
xchg
jne
call
in
ljmp
pushl
roll
add
movsb
sub
push
push
and
mov
bound
mov
or
push
xchg
in
xor
jg
dec
pop
test
xchg
pop
movsb
xor
loopne
sub
cld
inc
repz
bound
aas
shll
ljmp
and
jmp
mov
lret
loop
mov
leave
in
xor
ljmp
mov
cmpsl
roll
movsb
sub
shlb
pop
sub
fisubl
cmpsb
leave
mov
sub
aaa
pop
mov
xor
sub
dec
inc
mov
es
insl
cmp
cs
incl
add
sub
and
scas
sub
test
into
mov
repnz
cmp
xor
inc
jg
pop
xor
rolb
dec
inc
dec
pop
xor
mov
jmp
divl
inc
repnz
add
popa
jl
xchg
inc
fdiv
in
decl
mov
inc
lahf
or
mov
xchg
data16
fsubrl
into
shlb
lahf
enter
std
in
shll
jnp
insb
or
and
pop
cmp
pop
add
sub
pushl
xor
sbb
cmp
pop
jo
mov
dec
sbb
ljmp
cli
in
ds
test
ds
cmc
int3
add
inc
dec
sbb
dec
add
jmp
jno
pop
adc
or
add
mov
cltd
xchg
push
push
mov
push
mov
jmp
cld
inc
push
int3
mov
cld
dec
mov
mov
dec
mov
push
mov
jae
call
fcmovnu
adc
outsb
and
mov
xchg
jae
xchg
push
mov
jg
lods
xchg
ds
add
push
inc
pop
add
jg
xor
xor
cmpsb
orps
push
and
dec
ljmp
mov
insb
pop
lret
jb
jo
adc
daa
std
cmp
mov
hlt
aam
js
call
leave
mov
xor
mov
push
inc
sbb
pop
push
aas
iret
pop
std
repz
cmp
mov
sub
mov
insl
pop
mov
outsl
dec
and
pop
pop
xor
std
jg
cltd
and
mov
pusha
inc
lret
es
mov
push
adc
mov
mov
rorl
lods
adc
jo
bound
xor
imul
add
std
clc
call
cld
xor
cmp
xor
inc
pop
and
test
hlt
es
mov
inc
call
xor
insb
ss
mov
ljmp
jg
cld
stos
cmp
iret
mov
push
or
mov
test
pop
outsl
mov
fdivrp
lods
jp
cmpsl
pop
xor
bound
fildll
call
cmp
in
inc
xchg
jne
inc
and
ja
in
incl
sub
and
cmpsb
ljmp
cmc
jge
push
ficoms
pop
repz
pop
and
call
or
push
mov
mov
test
jmp
push
dec
loop
inc
loopne
mov
xor
pop
daa
orb
dec
adc
push
into
sbb
fcomip
incl
pop
inc
mov
int3
popa
movsb
dec
lret
mov
and
ror
mov
fs
jg
mov
aaa
pop
cmc
pop
jl
cltd
add
mov
push
pop
jg
cmp
fstp
jl
mov
mov
shlb
rclb
imul
pop
sbb
push
push
in
mov
push
dec
jo
cmp
add
xor
cmpsl
mov
ljmp
movsl
movsb
push
lea
jg
push
pop
lea
shlb
out
cmpsb
mov
sahf
jmp
test
dec
dec
pop
xor
xor
call
dec
inc
lret
enter
or
pop
mov
movsl
mov
jb
pop
inc
ret
or
ret
mov
fisttps
fdivl
mov
inc
jae
arpl
movd
xchg
and
jg
xchg
pop
jns
gs
jo
cmp
aaa
insb
pushl
cmp
pop
ljmp
jo
push
cmpsl
popf
adc
cmp
shrl
mov
xor
ss
call
inc
pushf
pop
lods
int
decl
fwait
mov
jae
out
in
movsb
cmp
sbb
movsb
outsl
jecxz
or
push
lds
or
add
scas
xor
sbb
loopne
mov
mov
jge
cmpsb
mov
iret
adc
sbb
mov
jmp
loopne
jmp
mov
xor
lret
fwait
idiv
cmp
aaa
aas
fdivs
inc
icebp
call
inc
int3
lret
enter
pop
fisttps
incl
aas
dec
inc
xor
jns
xor
cmp
cmc
mov
mov
les
cmp
push
lods
and
or
cmp
push
mov
push
aam
mov
xchg
loopne
cwtl
pop
mov
in
ljmp
fstpl
loop
push
mov
in
insl
shll
cmp
add
add
cmp
stos
aaa
pop
inc
mov
aam
or
stc
fistl
mov
push
scas
pushl
pop
aam
cmp
sub
mov
adc
mov
mov
dec
sub
fisubs
clc
mov
jb
push
inc
and
pop
cld
pop
or
jle
repz
fnstcw
xchg
jg
cmc
ja
ja
enter
jmp
cmp
cmp
cld
fmulp
add
mov
inc
xchg
xchg
push
adc
fildll
loop
push
std
fbld
das
and
adc
jb
pushf
cli
xchg
and
cmp
xlat
insb
sahf
mov
xchg
mov
jo
mov
jns
cmpb
or
cli
mov
mov
call
cwtl
fists
aas
shrb
repz
inc
outsl
sbb
jmp
scas
mov
pop
xchg
jmp
xchg
pop
xor
push
sbb
inc
or
adc
pop
dec
pop
aaa
ljmp
inc
adc
adc
mov
xor
pop
scas
xor
ficoms
stc
std
int
lock
call
push
aad
jp
inc
cmc
ja
adc
lcall
push
ficompl
lcall
adc
cmp
outsb
mov
mov
lea
mov
cwtl
insl
xorb
out
and
jmp
out
jns
in
xor
dec
outsb
out
jo
repz
mov
jp
mov
mov
mov
aam
mov
mov
mov
mov
and
shrl
xchg
jg
mov
pop
mov
mov
jne
dec
rcll
xlat
xchg
dec
and
mov
call
jle
push
sub
xchg
icebp
imul
fwait
nop
decl
repz
add
mov
mov
incb
mov
aam
arpl
and
ljmp
xor
mov
bound
dec
mov
fisttpll
out
fisubs
sbbl
jg
int
jl
int
jl
inc
shll
leave
fiadds
mov
dec
and
cld
inc
mov
lods
mov
xor
xchg
imul
lods
icebp
sub
fcos
jg
mov
pop
push
lret
mov
in
sub
mov
xor
insl
xchg
or
in
pop
decb
das
mov
mov
sbb
pop
sbb
fs
mov
fdivr
lcall
sub
pop
sub
xor
in
xor
mov
pop
or
sti
out
push
nop
ljmp
repz
xchg
scas
enter
das
inc
mov
sub
inc
pop
sub
inc
fs
cmp
lcall
mov
mov
inc
cmpsl
ds
push
mov
xor
mov
fbstp
ljmp
inc
adc
xchg
mov
andb
subb
in
jmp
jl
mov
pop
xor
mov
adc
sbb
pop
or
sbb
xchg
cmp
or
idiv
pushl
gs
jbe
sub
xor
inc
dec
dec
pusha
pop
mov
jg
dec
add
lret
pusha
aas
rorl
mov
fimull
repz
push
and
sbb
adc
jge
mov
xor
out
cmpsb
ds
xorb
fnsave
or
jmp
sbb
out
sub
ss
imul
and
lahf
pop
fmull
xchg
repz
pop
icebp
call
mov
inc
jo
cmp
add
pop
push
push
movsb
cmpsb
aaa
stos
mov
adc
jns
in
out
lcall
mov
into
push
das
mov
int3
sbb
outsl
lcall
jae
mov
orb
das
mov
ss
std
incl
push
adc
cmp
push
adc
sub
dec
add
fwait
xor
fnstcw
pop
clc
pcmpgtw
mov
sahf
jb
mov
incb
jnp
xchg
rcrl
pushl
fdivrl
ja
dec
stc
cmp
mov
pop
int3
mov
cli
inc
out
and
call
jge
fnstenv
fdivrl
mov
pop
arpl
mov
mov
or
sub
incl
jae
test
xchg
mov
mov
inc
adc
das
test
mov
jecxz
data16
ret
incb
mov
incl
sbb
fwait
cmp
cmpsb
push
xchg
mov
pop
das
and
mov
pop
sbb
jae
cli
adc
aad
sti
clc
imul
jbe
mov
call
mov
jae
dec
sar
pop
mov
mov
sarb
jns
jns
cmp
fcomip
pushl
roll
dec
sbb
mov
hlt
adc
jg
inc
adc
popf
push
mov
clc
pushf
or
cmc
dec
rcrl
jo
call
add
push
jmp
cmp
iret
sti
je
sub
mov
outsb
adc
test
insb
call
mov
js
jae
loopne
flds
out
lcall
add
clc
push
scas
lahf
xchg
or
cmc
cmc
xor
adc
sahf
pop
nop
push
dec
pop
mov
iret
lods
mov
push
addr16
lahf
adc
mov
jae
mov
lcall
pop
inc
loop
ret
pop
jge
jmp
pop
sbb
in
mov
mov
cmp
lods
daa
adc
mov
push
clc
jecxz
xlat
jae
mov
jb
pushl
mov
pop
lcall
insb
xchg
pop
sbb
cmp
push
outsl
cmp
lods
jg
jg
sub
sarl
pop
mov
sub
nop
push
es
adc
ljmp
rorl
jno
mov
adc
mov
ja
mov
adc
repz
stos
cltd
sub
cmpsl
imul
xchg
shl
insb
pop
cmpsl
data16
cmp
jmp
cmc
mov
sbb
push
jae
dec
push
shl
call
lea
adc
insl
fstl
in
push
sbb
adc
xchg
ret
xchg
stos
xchg
je
cmpsl
subb
movsb
in
mov
nop
cmp
xchg
and
push
mov
lcall
mov
notb
cld
subl
jecxz
adc
fwait
push
pop
pop
adc
push
idiv
jmp
inc
sub
push
iret
popf
movsb
cmpsl
dec
jle
push
lcall
sbb
jo
lods
mov
lcall
dec
out
sub
and
push
dec
adc
push
mov
ja
cmp
mov
pop
inc
insl
test
fistl
lods
cwtl
aas
add
or
cmp
dec
sbb
xor
sub
test
in
mov
inc
aaa
mov
sub
mov
decl
mov
push
icebp
nop
cmp
sub
jl
or
xchg
cli
xchg
ljmp
fstps
cmpsl
push
pushf
or
pop
push
xor
cmpl
test
das
push
mov
ljmp
add
bnd
out
cmp
mov
mov
inc
mov
les
lcall
js
inc
mov
mov
ret
jb
push
or
stc
call
mov
lahf
inc
adc
and
fsubrs
dec
xor
mov
or
sbb
call
inc
sub
divb
imul
push
incl
insl
gs
cmpsb
lret
mov
out
fisubs
lret
ljmp
jae
cmp
cmp
es
jl
loope
push
mov
hlt
mov
fstpt
clc
lcall
mov
test
fwait
mov
mov
call
mov
dec
xchg
and
inc
aas
fs
nop
cli
mov
notl
xchg
popf
aas
aam
popf
xchg
cltd
icebp
hlt
push
fisubrs
ljmp
sahf
sub
fstl
cli
test
arpl
incl
ror
cmp
insb
scas
or
mov
fs
pop
mov
test
subl
decl
sbb
fdivrs
roll
lods
inc
pushw
xor
cwtl
adc
bound
decl
cld
pop
pop
ficomps
sbb
lcall
jecxz
or
fdivrs
push
cmovno
inc
push
popa
cmc
fst
xchg
movsb
or
adcb
sub
filds
xchg
xor
adc
xchg
rolb
decl
pop
std
test
daa
lock
leave
xor
out
xchg
shll
xchg
jle
inc
gs
cmpb
pop
ficoml
imul
call
xchg
adc
push
pop
jae
and
mov
push
xchg
pop
mov
xor
incl
pusha
test
pop
pop
pop
and
mov
cmp
pop
mov
lock
incl
jb
or
pop
dec
jae
and
test
jbe
ret
jle
adc
adcl
call
pop
shrb
insl
mov
cmp
fiadds
stc
clc
stos
mov
push
es
test
cld
lret
sub
or
fbstp
mov
std
push
adc
jb
mull
add
int
mov
decl
std
shl
ret
mov
loope
mov
mov
mov
ret
push
fwait
ljmp
mov
cmpsb
xor
push
cmpsb
mov
dec
lods
aas
pop
dec
xchg
mov
sar
inc
pop
sbb
sub
pushf
repnz
xor
cmp
in
adc
mov
rolb
push
sub
arpl
pop
insl
mov
mov
mov
subb
imul
js
dec
pop
mov
pushl
das
cmp
arpl
shr
mov
cmp
in
call
xchg
add
add
inc
inc
pop
shll
jae
sub
es
jmp
mov
call
dec
cmc
cmp
icebp
std
int
sub
dec
lea
pushf
mov
jecxz
pushl
add
popf
imul
popf
sbb
std
sub
pop
dec
jp
out
mov
mov
mov
iret
leave
dec
mov
dec
ds
pop
push
test
push
movsb
mov
pushl
xchg
jbe
cmc
fistl
xchg
cmp
jle
dec
das
adc
fsubrl
cmp
jmp
mov
js,pn
and
movsb
xchg
mov
fs
xchg
adc
pushl
les
pop
in
outsb
xchg
push
mov
mov
adc
roll
mov
call
cltd
sub
inc
fnclex
aad
dec
mov
stc
scas
jb
xor
es
stos
ret
mov
out
clc
fcompl
lods
dec
xor
mov
pop
fdivl
imul
call
lds
dec
or
sub
popf
pusha
cmp
rcrl
movsb
cmp
or
shl
jo
inc
cmp
out
shlb
inc
call
sub
jnp
sub
pop
ret
or
sar
or
xchg
jg
popa
cs
sub
imul
ljmp
and
inc
inc
call
sbb
jne
clc
and
cmpsb
inc
ret
jle
insb
and
call
mov
xlat
cmp
arpl
pop
mov
test
cs
orl
or
jg
jns
add
lcall
scas
add
adc
or
mov
rorb
xlat
int
lret
and
movd
sbb
jmp
mov
inc
mov
push
mov
inc
imul
xlat
and
or
inc
mov
xchg
sub
shl
or
iret
mov
cwtl
add
lret
dec
cmpsl
inc
shrl
inc
xorl
dec
shll
cli
lcall
mov
dec
sub
lods
cld
sub
inc
mov
sbb
sub
ljmp
test
lods
jo
lds
xor
add
mov
aaa
mov
lret
add
pop
aad
into
aas
push
arpl
dec
sub
jmp
scas
int3
inc
fmulp
mov
adc
inc
dec
jge
repnz
or
decl
mov
or
scas
incl
sub
push
add
stc
xor
cltd
clc
push
push
pop
lock
push
xchg
inc
mov
xchg
sub
push
sbb
mov
data16
lcall
jae
mov
lcall
lahf
inc
adc
scas
push
bound
mov
pushl
ret
inc
dec
sbb
test
pusha
inc
ror
sub
das
jbe
jbe
jg
sub
scas
dec
jbe
inc
mov
daa
popf
stos
fdivrp
jmp
lock
xchg
fildll
jge
mov
xor
mov
aad
scas
outsl
lahf
or
in
lcall
arpl
xor
mov
mov
xchg
je
adcb
popa
ret
pop
cmc
je
inc
adc
pushl
std
sub
cmpsb
dec
mov
pop
repnz
xchg
and
pop
jae
add
mov
iret
xchg
test
lahf
dec
popf
xchg
jmp
mov
getsec
int
pushf
jns
ljmp
pop
xchg
sbb
inc
repnz
fucomi
imul
hlt
sub
popa
les
leave
aaa
push
clc
mov
mov
fisubrs
mov
dec
decl
jno
inc
rcll
lods
push
push
fnstsw
xorl
lock
xor
call
pop
movsb
dec
in
ret
int3
sub
leave
shll
rol
pushl
and
sub
push
icebp
push
int
adc
sbb
decl
cmp
cmp
push
out
ret
popa
dec
repz
repnz
cld
dec
xor
pop
mov
xor
call
lahf
push
and
rol
ds
paddusw
pushf
dec
and
mov
gs
xorl
rclb
out
pop
clc
xchg
repnz
call
sub
mov
pop
loopne
out
or
ret
xor
loope
fbstp
inc
cmp
cmp
inc
cwtl
push
das
idivl
mov
mov
sbb
je
lahf
das
push
ret
movsb
inc
fidivs
jo
loop
push
sbb
dec
or
push
orl
pushl
pop
out
mov
lea
push
add
lcall
aam
cmp
testb
jecxz
inc
shll
sti
dec
loope
sub
gs
xchg
mov
in
mov
ljmp
cld
inc
lret
mov
push
jmp
out
xchg
pop
or
cs
pop
xchg
ror
lret
adc
repz
sub
test
or
xor
icebp
mov
lcall
scas
loop
jns
inc
icebp
fmuls
xor
push
sbb
shll
loopne
pushl
jno
jno
xchg
mov
mov
push
push
jnp
shll
mov
pushl
push
aaa
cltd
call
cmp
dec
mov
add
data16
aaa
sbb
mov
push
add
cmc
leave
sbb
cld
jg
mov
outsb
xchg
push
xor
roll
adc
leave
imul
xor
mov
inc
xchg
scas
stos
jo
xor
in
push
popa
push
call
ljmp
xor
adc
inc
push
ljmp
xrelease
mov
nop
in
enter
add
pop
jnp
ficompl
mov
fistpll
sub
adc
cli
std
loopne
popf
in
jmp
sbb
adc
fld
jmp
sbb
repz
andb
adc
and
imul
call
sti
fidivrs
pop
jbe
mov
pop
dec
mov
scas
das
inc
mov
shrl
repnz
jge
xchg
mov
fistpll
pop
sahf
jp
stc
loopne
rorl
scas
inc
dec
data16
ljmp
jns
aas
fs
jno
cwtl
sbb
xor
jmp
cmpsb
mov
iret
insl
repz
mov
or
sarl
outsl
pop
xor
pop
call
rcrb
in
sub
fbstp
aam
sub
in
mulb
hlt
dec
jl
jbe
fs
xchg
cld
scas
add
add
dec
aam
sar
mov
and
movsb
out
xor
es
test
in
add
movsl
jmp
inc
mov
es
ss
movsb
inc
dec
add
adc
mov
inc
push
lods
mov
fmull
aad
clc
mov
scas
push
dec
in
ror
mov
mov
iret
sub
fadds
mov
cmpl
add
test
mov
aam
fadds
sub
stc
cwtl
pusha
mov
inc
sbb
pop
stc
outsl
inc
mov
shl
lea
rcll
push
push
mov
pushf
decl
cmp
cmpsl
ret
sbb
in
xor
mov
mov
xor
mov
fwait
mov
ljmp
loopne
xchg
out
and
sub
cmp
inc
flds
adc
cmpsb
decl
sub
lcall
cmp
nop
mov
mov
pop
ja
clc
adc
fwait
je
pop
nop
mov
test
xchg
cmp
scas
insb
clc
push
mov
call
test
push
inc
inc
jmp
lahf
cmp
outsl
in
or
incb
sbb
out
push
add
mov
mov
lods
inc
in
insl
jae
incl
outsl
lds
lods
xchg
test
shrb
dec
mov
cmpsl
sti
inc
sbb
ljmp
loopne
idivb
jns
mov
scas
cld
dec
out
push
insl
adc
lcall
xchg
cli
shll
push
add
pop
adc
push
cmc
ljmp
xchg
and
adc
mov
bound
fidivrs
jbe
decl
scas
cltd
shr
cmp
js
jae
jbe
push
scas
jae
fisubs
repz
mov
xor
cmpsl
out
movsb
mov
mov
in
mov
ljmp
fs
sub
and
jnp
inc
mov
sub
and
jne
inc
ja
ljmp
std
jmp
cmp
push
pop
js
mov
sub
dec
inc
dec
cmpsb
test
pushl
or
push
push
jg
fisubrs
movsl
push
pminub
pop
data16
int3
shl
pop
fidivs
inc
in
dec
test
dec
out
mov
sbb
jb
push
adc
inc
lds
decl
sti
ljmp
cmp
data16
or
xchg
roll
fwait
ds
dec
adc
fbstp
mov
mov
jns
ja
addr16
or
into
adc
popa
outsl
jl
daa
orb
decl
pop
mov
jbe
cli
sbb
lds
fadd
dec
push
sbb
pop
jp
ficomps
inc
dec
loop
je
push
adc
mov
test
leave
or
xchg
repz
call
push
push
orb
xor
add
push
fsubrs
inc
loop
mov
sub
push
cld
repz
fists
loop
or
mov
push
push
mov
lock
fmull
push
dec
add
ljmp
xchg
push
iretw
mov
mov
imul
pop
pop
out
outsb
lret
ret
xchg
mov
pop
xor
int
repz
mov
xor
sub
ret
dec
test
pop
loopne
in
mov
and
mov
mov
adc
dec
jb
inc
fmuls
inc
sub
sti
adc
pushf
dec
cmc
enter
jmp
xchg
nop
sub
mov
movsl
mov
inc
jb
jp
out
jmp
icebp
rcl
ds
push
decl
mov
sub
loopne
test
inc
cld
test
mov
mov
imul
sub
ljmp
push
jnp
dec
frndint
aam
das
pop
enter
xchg
mov
mov
idivb
lock
adc
adc
jl
pop
adc
sbb
mov
xchg
xorb
mov
dec
popa
ds
mov
mov
cli
out
mov
mov
push
sub
cld
pop
cmp
mov
add
lock
lcall
cwtl
sbb
pushf
outsb
fcoml
sub
and
aad
shrl
jecxz
std
adc
adc
mov
enter
mov
xchg
jp
aaa
out
cmp
push
sbb
sub
call
ret
fnstenv
aam
je
inc
std
pushl
push
shlb
adcl
cld
call
sbb
push
adc
outsb
aad
adc
mov
sub
inc
cld
repnz
xor
shlb
jl
sub
mov
mov
pusha
or
mov
adc
fcomps
fists
xchg
cld
cs
or
enter
ljmp
and
iret
je
sub
pop
test
icebp
shl
inc
fcomip
lods
filds
sub
sub
fildll
pop
scas
mov
cli
pop
xlat
or
mov
call
push
bound
outsb
jb
or
popf
mov
std
adc
lock
rcl
aad
xchg
dec
mov
push
nop
pop
dec
add
lods
mov
jmp
push
das
imul
ljmp
ljmp
repnz
and
fisubrl
cmp
shlb
inc
mov
nop
xchg
incl
mov
out
mov
dec
call
fisubrl
pop
test
stos
push
adcb
sar
ljmp
push
add
out
dec
jne
aad
cmpsl
dec
cld
xchg
push
mov
lcall
push
fldcw
imulb
cwtl
hlt
push
test
orb
test
adc
movsb
mov
xchg
dec
enter
fstpl
push
das
stos
pop
outsl
pop
cs
cmpsb
push
icebp
or
sub
pop
enter
or
push
das
push
rcll
cmpsl
inc
cmpsb
xor
cwtl
cmp
sbb
call
xor
add
xchg
sbb
insb
push
pop
jae
xchg
add
pushl
fcomip
ljmp
xchg
test
dec
cli
sti
inc
dec
outsb
and
push
pushf
push
add
dec
cmpsl
sahf
lods
cmp
inc
mov
cld
sub
and
jb
cmpsl
es
sbb
rolb
pushf
adc
xor
incl
rcr
jmp
rolb
inc
outsb
jo
fcoml
loope
ljmp
xor
daa
inc
jo
push
out
std
or
pop
bound
xchg
lcall
adc
or
nop
lods
dec
test
push
jnp
add
jo
out
loop
mov
pushl
outsl
or
fldt
outsb
jmp
pop
sub
jp
cmpl
scas
push
xor
mov
adc
shrb
push
call
call
notl
mov
int
xor
sahf
movsb
fdivs
mov
in
ljmp
mov
add
jns
xchg
bound
add
xor
push
pop
dec
sbb
mov
pushl
cmpsb
jae
inc
setb
push
adc
repz
test
mov
mov
pop
insl
add
incl
jbe
dec
and
jecxz
fwait
adc
int
push
sti
jb
int
mov
xor
into
stos
aam
cmp
int3
mov
sbb
daa
nop
adc
loope
pop
adc
stc
out
cli
incl
mov
je
and
in
test
mov
adc
in
scas
pop
push
sbb
jmp
sub
cmpsl
lcall
mov
std
adc
pusha
sar
ljmp
jo
push
clc
push
mov
sti
pop
out
push
and
fdivr
mov
jne
adc
int3
iret
add
int3
rcll
adc
xor
rcrb
stos
in
dec
sbb
orb
adc
mov
scas
dec
pop
push
rcl
xchg
push
test
cmp
and
loop
out
ljmp
scas
ljmp
xor
popf
push
or
adcl
mov
rcl
xor
loopne
stc
mov
adc
cmpsb
mov
ljmp
cmpsl
mov
comiss
repz
sub
inc
push
sub
lret
mov
decl
push
aam
pop
repz
pushf
cmpsl
adc
mov
xor
push
js
pop
notb
insb
int3
xor
mov
sub
loopne
decb
xor
sahf
adc
adc
cmp
icebp
ljmp
push
das
leave
push
aad
popf
iret
jbe
sub
repnz
sub
xchg
mov
xor
add
fists
lock
iret
cltd
xchg
cmpsl
and
dec
aad
adc
je
lock
fs
ret
add
or
xor
add
jg
adc
jmp
push
ljmp
stos
cmp
call
fdiv
lahf
push
aam
bound
xchg
mov
or
decl
dec
sub
fimull
inc
cmpsl
and
mov
dec
rolb
add
add
add
adc
call
loopne
sbb
lret
sbb
out
lcall
incl
int3
or
iret
and
cmc
imul
dec
jae
xor
cmc
jbe
sub
imul
shll
inc
cltd
pop
cmp
fadds
idivl
mov
sar
incl
jno
sbb
cmp
jbe
add
sbb
sub
mov
dec
mov
mov
jmp
iret
addr16
lret
inc
dec
mov
cltd
fldenv
lcall
cmc
xor
shr
xchg
dec
lea
mov
push
les
nop
shlb
lret
pop
push
cmpsb
add
or
xor
cs
or
lcall
push
push
pop
pushf
push
push
scas
cmp
imul
aad
cvtps2pi
aas
enter
outsl
clc
jmp
fldenv
popa
jbe
add
shr
dec
cmpsl
mov
mov
add
and
lret
mov
or
adc
es
incl
push
pop
test
jmp
push
pop
jae
push
push
xor
fwait
stc
sbb
and
push
lods
xchg
add
mov
arpl
inc
das
fs
sub
xchg
push
push
add
out
out
push
arpl
lock
sub
mov
dec
call
das
aas
xchg
xor
popf
sahf
pushl
pop
adc
adc
push
cmp
jb
icebp
in
mov
rcrb
adc
jg
jne
rorb
test
sub
in
or
jmp
insl
sarb
icebp
or
xorb
mov
dec
mov
fildll
pushf
mov
dec
inc
lret
cmp
sub
inc
lcall
mov
mov
cmp
pushf
or
scas
pop
pop
or
test
fmull
fists
aad
jge
lcall
push
push
xchg
cmp
jno
adc
cmp
jmp
mov
cmp
aad
lahf
xor
shrl
and
repnz
fcomip
cmp
mov
jb
push
jl
sti
jecxz
sahf
mov
popa
ss
cli
pushl
or
sbb
cwtl
bound
add
dec
jl
sub
xchg
mov
in
pushl
rolb
jae
sti
fucomi
out
jo
movsl
pushf
mov
nop
push
decl
jle
std
jp
xchg
sti
xor
push
cmp
lods
sarb
cli
inc
push
movsb
pop
insb
fstpt
mov
out
dec
cmp
xlat
dec
xor
sarb
inc
adc
nop
cli
pushl
ror
cmp
icebp
mov
pop
adc
jmp
mov
lret
xor
icebp
jae
outsb
dec
mov
ja
pop
icebp
ljmp
push
cmp
std
js
push
aas
xor
inc
mov
repz
pushf
jmp
fidivl
mov
xor
mov
add
add
xchg
mov
mov
fmuls
outsb
inc
sbb
xor
fcomip
mov
das
sub
push
and
push
push
stc
jle
xor
out
lods
sbb
sbb
sbb
mov
popa
in
cs
outsl
cli
jg
iret
jae
dec
jae
jne
pop
pusha
aad
out
shl
mov
mov
lcall
mov
push
sbb
sbb
jns
mov
es
mov
fisttpll
out
xchg
add
pop
xchg
insb
adc
loope
cmp
incl
jo
les
mov
dec
pop
push
and
adc
jmp
ljmp
pushf
cmc
pop
pop
mov
cmp
cs
fstl
sar
jg
mov
test
pop
mov
inc
add
xchg
cmpl
rorl
xchg
mov
sahf
mov
fwait
jne
push
rorl
jmp
dec
jo
jg
popf
inc
push
jp
push
cs
insb
adc
jne
sahf
leave
or
sub
clc
sbb
lock
or
pushl
sub
pop
push
nop
pop
lods
push
mov
ret
push
icebp
icebp
das
sar
int3
aam
ffreep
pop
leave
mov
push
sbb
insb
inc
scas
scas
jns
scas
cli
scas
cmpsb
lret
xchg
mov
enter
popf
cli
out
mov
in
mov
scas
push
push
lret
adc
ljmp
sub
inc
nop
rorl
mov
push
sub
pushl
xchg
jo
imul
shr
movsb
mov
jo
mov
sub
pop
dec
or
xor
inc
jecxz
cmp
push
and
adc
mov
adc
jmp
lret
or
addr16
sub
movsl
sub
lods
sbb
cmp
adc
or
in
pop
sub
ja
mov
adc
inc
stos
add
lods
repz
insb
movb
pushl
xchg
rclb
daa
add
add
ficoms
lds
push
inc
lods
pop
xchg
mov
data16
into
incl
addr16
adc
int
xor
in
add
dec
sbb
xor
ljmp
xchg
xor
jno
fs
inc
xchg
mov
add
scas
and
ljmp
mov
push
pop
pop
iret
bound
jg
decl
push
sbb
xchg
push
loopne
int3
inc
outsl
sar
cmp
andl
call
fisttps
pop
lret
cmp
daa
ret
imul
ret
mov
inc
jnp
xchg
lock
pushf
aad
psubusw
push
cld
aaa
test
add
sub
je
bound
sub
push
mov
bound
not
scas
add
sbb
js
call
scas
in
cwtl
mov
loopne
inc
push
sar
push
push
push
movsl
out
out
push
ds
shll
cmp
sub
pusha
into
dec
jno
pop
xchg
cmp
sbb
jmp
leave
stos
push
xchg
inc
aad
jo
jno
shlb
jmp
data16
mov
jp
addr16
push
cmp
std
xchg
imul
add
mov
js
sbb
push
aam
dec
xchg
mov
clc
decl
aad
ja
dec
jecxz
inc
ret
cmp
jl
jl
imul
cmp
dec
call
xchg
out
in
icebp
push
aam
ret
mov
push
pop
push
negb
pop
inc
incl
insl
pop
xchg
popf
xor
mov
push
xchg
jp
imul
outsl
jg
ds
out
adc
aas
mov
push
inc
fwait
je
mov
xchg
lcall
aam
fidivl
es
push
sub
enter
decb
push
push
mov
adc
push
sub
xchg
adc
adc
mov
xchg
or
scas
jl
sbb
into
out
inc
into
mov
jae
shr
add
adc
inc
xor
mov
sub
cmp
imul
aad
push
aam
jmp
gs
push
dec
pop
fiadds
pushl
lods
cmp
int3
push
aad
pushl
push
rcrb
ret
sbb
jg
mov
jae
or
fsub
cwtl
jne
sbb
cmp
arpl
sbb
call
lock
sar
pop
add
es
mov
adc
adcb
pushl
adcl
xchg
sub
push
lods
jb
dec
sub
push
jno
bound
jge
test
in
divb
call
dec
dec
push
mov
dec
fs
out
or
addr16
jle
insb
out
pop
push
mov
ljmp
dec
lock
ror
std
mov
movsl
xlat
sub
loopne
jge
inc
push
dec
incl
jbe
sbb
mov
out
loopne
fnstenv
mov
aam
push
insl
stos
cmpb
out
fwait
out
mov
inc
faddl
mov
pop
std
jmp
lods
xchg
sub
push
imul
and
cli
inc
sti
push
dec
insl
repz
or
sub
pop
mov
jns
push
jmp
mov
push
push
lahf
lods
stc
out
jecxz
mov
inc
mov
iret
jmp
jp
jns
call
ret
sarb
pop
adc
movsb
xor
or
dec
mov
stc
lret
outsb
add
push
sub
adc
imul
outsl
and
xchg
ljmp
imul
gs
ljmp
jge
or
call
decl
adc
sub
test
lret
fs
sub
call
sti
pop
jne
in
inc
fsubs
aad
mov
pop
push
jae
sub
mov
into
rolb
iret
loopne
in
icebp
cmp
pushw
repnz
not
or
jecxz
jmp
enter
sub
cmp
or
jle
pusha
mov
inc
insb
shrl
int3
scas
arpl
lret
jae
push
jmp
dec
inc
xchg
push
out
shll
std
mov
aas
shl
lret
dec
rorb
pop
push
adc
incl
dec
nop
dec
call
movsb
inc
ljmp
dec
dec
imulb
jg
in
inc
push
jne
adc
adc
out
mov
lahf
aam
fdivrs
mov
pusha
push
lcall
fstpl
adc
jo
and
or
adc
xchg
leave
jle
lcall
cmp
push
push
stc
inc
mov
mov
fadds
push
sarl
inc
mov
pop
movsl
jl
adc
sub
mov
add
les
pop
fcmovbe
push
jl
hlt
pop
into
ds
inc
add
imul
or
jl
mov
shlb
push
roll
cmc
das
pop
icebp
lcall
bound
sub
cli
loope
sti
repz
push
sti
dec
aas
aas
repz
pop
aas
addl
cmp
xchg
int
jle
mov
dec
adc
pushl
stos
cmp
push
movsl
inc
push
int3
sahf
fadds
push
repnz
sub
xor
pop
jge
pop
add
addl
js
cmp
mov
pushf
pop
pop
sbb
jmp
outsb
cs
sbb
pusha
xor
jae
dec
push
sbb
int
subl
mov
add
mov
push
jno
cltd
subl
mov
sub
cwtl
mov
scas
xchg
adc
popa
lds
pop
decl
push
iret
xchg
pop
push
lahf
int3
cmp
push
ss
icebp
sub
mov
and
call
cld
fnstenv
adc
js
pop
orb
cmp
pop
pushfw
or
inc
pop
fpatan
std
dec
lea
add
mov
mov
jno
push
insl
call
adcl
cmc
jae
inc
mov
iret
ret
mov
adc
push
pop
mov
pusha
push
sbb
push
push
lods
pop
fadds
mov
lea
jecxz
jl
iret
xchg
repnz
clc
xchg
out
adc
jle
outsb
jg
ds
mov
mov
lea
nop
push
push
mov
mov
cmc
mov
pop
jne
pusha
faddl
jae
cwtl
mov
or
xchg
dec
paddb
push
inc
lea
mov
in
sub
jg
mov
pop
or
pop
fwait
push
push
add
bound
std
outsb
mov
or
cltd
lcall
sbb
lock
pop
jmp
arpl
leave
sahf
mov
xchg
push
cltd
or
sbb
xor
xchg
mov
push
cli
in
rcll
cli
call
or
pop
jae
add
out
mov
pushl
sub
pop
adc
add
sbb
adc
jae
movsl
idivb
sbb
jae
mov
or
xchg
pop
outsb
mov
lods
push
push
mov
jg
lods
xor
push
incb
adc
aad
aas
mov
arpl
jmp
push
fiaddl
ja
je
insb
mov
ret
and
rorb
jae
repnz
fs
mov
xor
inc
sbb
mov
rcrb
nop
xchg
clc
dec
mov
jg
adc
sub
inc
and
out
xchg
bound
jg
ljmp
movsb
push
xor
dec
imul
ljmp
int
push
inc
test
xor
xchg
pushf
outsl
pop
fsubp
push
cwtl
inc
mov
roll
sub
fcomps
adc
push
enter
nop
shrb
xchg
lods
adc
fistpl
pushl
adc
inc
cmpl
fnstcw
sub
adc
xchg
cmpsl
or
dec
fdivs
jne
mov
cwtl
outsl
imul
mov
adc
es
lret
dec
jo
dec
and
xchg
mov
mov
icebp
incl
outsl
mov
mov
xchg
adc
inc
add
int
dec
pop
movsl
sbb
ss
decl
popf
fidivl
shll
mov
testl
lcall
adc
in
inc
aam
addr16
mov
or
fadds
xchg
add
jnp
xchg
pushl
fsubrs
or
stos
sub
es
inc
cld
jo
dec
jg
jo
imul
xchg
dec
add
mov
nop
daa
loopne
pushl
ja
jae
test
out
movsl
imul
xchg
fildll
decl
ja
into
dec
jns
aam
popf
call
sbb
xchg
shll
push
popf
into
fcoms
jmp
pusha
push
cmp
mov
xlat
lds
loop
stos
nop
fwait
int3
xchg
and
dec
and
pusha
pop
xor
jg
jmp
subb
dec
mov
push
fcomps
into
mov
pop
push
inc
mov
push
sbb
dec
jne
movsb
lods
adc
pop
jp
fdivr
mov
xlat
stos
daa
scas
lret
cltd
fistpl
gs
mov
clc
and
mov
fiadds
inc
jge
add
stos
push
xchg
filds
frstor
mov
push
adc
mov
jo
call
fyl2xp1
push
repnz
nopl
adc
test
repnz
enter
incl
mov
rcrb
mov
clc
inc
mov
dec
pop
nop
adc
adc
lcall
mov
jmp
fwait
daa
or
pop
inc
mov
adc
and
mov
push
fstl
or
sarl
data16
jne
shrl
fcom
xor
mov
ror
cmpsl
je
or
nop
adc
lea
mov
xlat
jae
lcall
fnstenv
leave
bound
mov
ficoms
aam
jle
mov
lret
shrl
adc
xor
out
dec
cmp
out
nop
aas
sub
test
jmp
lcall
jmp
lret
clc
mov
push
sarl
push
cmp
aad
push
mov
pop
std
xor
and
clc
out
ret
ror
jl
and
loopne
orl
enter
ljmp
ljmp
repz
out
sub
incl
adc
mov
fcmovb
xchg
fcmovbe
jns
sub
cmp
fidivl
popf
test
cmpsb
mov
in
out
jo
cmpsb
sub
sarl
aam
scas
xchg
sbb
mov
jmp
inc
popf
incl
pop
dec
pop
scas
jae
sahf
mov
cmp
cmpsl
insb
xor
hlt
pop
mov
cmp
adc
mov
or
mov
popf
aas
scas
scas
mov
add
scas
jo
enter
dec
test
and
pop
mov
cmpsl
test
lods
and
stos
pop
cld
ljmp
xor
inc
jp
jne
sub
jg
mov
iret
loopne
mov
dec
and
es
mov
pushl
mov
enter
sbb
jl
and
mov
mov
jne
gs
in
clc
xor
adc
call
mov
into
cli
mov
mov
add
cmp
xor
pop
add
sub
call
les
ss
mov
sub
adc
adc
daa
push
or
inc
push
lea
cmp
or
and
xor
xchg
cmp
adc
pop
rep
incl
sbb
cmpsb
xchg
jmp
ljmp
fidivs
clc
push
test
fiadds
incl
adc
lock
pop
cmc
xchg
add
mov
xchg
push
cmp
es
or
stos
call
mov
push
addb
add
xchg
dec
push
loope
test
pop
imul
mov
jb
mov
pop
hlt
das
nop
mov
in
movsb
xchg
sub
test
mov
ficompl
pop
jl
lcall
cmp
xchg
inc
dec
sahf
leave
lahf
imul
pop
movsb
dec
jge
outsl
or
mov
rolb
fwait
scas
adc
push
popf
pop
inc
sbb
loopne
pushl
into
out
inc
cmp
dec
mov
lods
mov
shrl
and
out
cmp
out
or
sub
stos
jno
sti
adc
and
in
arpl
pop
add
jbe
jno
jecxz
call
out
dec
cmp
lods
pop
mov
mov
add
inc
pushf
scas
hlt
in
sbb
sub
jmp
sahf
lods
rorl
cld
push
test
outsb
cmp
jbe
ss
dec
mov
fildl
push
out
fnsave
dec
cmpsl
loopne
mov
fdivrl
into
dec
push
or
lods
pushl
mov
in
jo
dec
mov
mov
mov
les
fs
push
pop
mov
es
ss
jle
ret
imul
xchg
adc
shl
mov
dec
or
cli
int
add
lret
outsl
leave
ds
fadds
sahf
das
jo
lcall
or
clc
or
ret
bound
ljmp
outsb
sub
push
mov
mov
lcall
loope
repnz
sub
shl
out
cmp
mov
jge
pop
les
xchg
scas
pop
loope,pt
xchg
xlat
mov
pop
xor
rcl
out
arpl
add
pop
inc
inc
insb
mov
notl
in
jg
call
mov
mov
cwtl
or
mov
imul
std
dec
in
pushf
lahf
loop
lock
pushl
xor
mov
adcl
jl
rol
jb
xor
outsl
xchg
xor
popa
mov
test
in
bound
sbb
leave
xchg
negb
stos
push
xchg
jge
xor
cmp
loop
jge
push
lds
push
mov
push
movsl
sbb
push
adc
push
fisubrl
push
inc
lcall
aam
mov
jno
fs
imul
iret
push
mov
fdivr
cmpl
dec
imul
pop
push
cli
scas
pop
or
push
ret
ljmp
lds
xchg
fsubrp
dec
sub
lret
shl
ljmp
int3
or
pop
mov
arpl
icebp
arpl
mov
and
sbb
out
push
jae
lret
sar
dec
mov
into
mov
mov
or
andb
addr16
inc
lret
push
jmp
scas
dec
loopne
mov
add
mov
arpl
adc
and
std
outsl
pop
jne
add
decl
loopne
xor
cmp
icebp
popf
xchg
imul
hlt
arpl
ljmp
fldenv
mov
mov
das
aad
xchg
loope
inc
xor
xor
inc
das
aam
scas
push
dec
push
adc
mov
mov
ret
call
pop
jecxz
fwait
aas
add
repz
test
scas
mov
cmp
in
add
mov
cmp
iret
fwait
push
pop
fisubl
adc
test
lahf
dec
and
js
jmp
or
adc
dec
mov
cli
mov
call
cmp
push
lcall
ret
push
ret
cs
xchg
add
and
cmp
mov
inc
ljmp
adc
test
xchg
push
jae
das
add
inc
or
sub
inc
rcll
mov
decl
xor
add
inc
mov
add
xchg
outsl
dec
out
mov
int3
mov
add
ljmp
data16
push
out
scas
xchg
mov
repz
sub
inc
dec
dec
jmp
jns
cmpsl
out
cmpsb
jg
xor
inc
cmpsb
lcall
cmp
sub
idiv
pop
xchg
bound
dec
push
dec
addr16
ljmp
popl
jne
jle
iret
daa
sub
cmp
cmp
sbb
int
push
dec
insb
faddl
add
outsb
mov
js
scas
or
push
mov
cmpsb
xor
sbb
call
inc
pop
sbb
imul
in
push
mov
fwait
stos
out
mov
pop
sahf
incl
ret
test
xchg
mov
cmpsl
fsubrp
mov
mov
mov
jb
out
loopne
faddl
inc
sahf
jmp
jecxz
jb
dec
out
mov
out
pop
xlat
test
rclb
mov
xchg
lret
dec
and
scas
cli
push
mov
inc
mov
cmc
cmpsb
sbb
xchg
js
push
das
push
incl
lcall
jg
imul
sub
push
mov
test
lret
loop
jg
je
jbe
out
mov
mov
ret
push
in
fildll
call
jae
jne
in
mov
je
sar
lcall
outsl
mov
push
jno
sbb
scas
hlt
sbb
sti
rcrb
lcall
jge
mov
out
pop
std
mov
adc
fwait
iret
out
iret
aam
cmp
sbb
mov
lds
or
push
push
into
in
push
adc
mov
rolb
loope
std
clc
mov
push
shl
add
jnp
push
out
xchg
nop
jns
outsb
shl
cld
mov
inc
popa
les
pushl
cld
mov
inc
repz
repz
mov
sbb
mov
mov
sti
stc
fld1
add
or
and
jo
pop
push
cltd
bound
data16
bound
cmc
shr
mov
jo
push
adc
mov
jle
incl
rcrb
ds
test
jne
popf
jb
cmpsb
in
aam
cli
add
hlt
shll
inc
lock
lcall
int
mov
mov
out
push
xor
jmp
mov
arpl
xchg
cli
ljmp
mul
cmp
sub
adc
andb
lahf
adc
mov
aad
test
insl
xchg
sbb
adc
call
push
insb
subb
sbb
stos
out
pop
ss
jmp
cmp
imul
jmp
push
aaa
data16
les
out
fwait
xor
aam
mov
push
rolb
lock
lcall
push
or
add
das
push
xor
cmp
gs
arpl
or
out
pop
jae
dec
inc
push
dec
repnz
in
jae
out
out
sub
data16
cmpsl
cmp
out
icebp
mov
push
in
jbe
stc
pop
sub
cmp
mov
es
rep
cmp
pop
insb
lods
xchg
jmp
addr16
test
das
shll
shlb
jns,pn
enter
jmp
dec
mov
jnp
pop
or
test
sub
add
clc
ss
adc
enter
lret
rclb
test
mov
add
pop
and
mov
pop
fld
aam
sub
xchg
rorb
sbb
loop
ljmp
gs
pop
js
mov
pop
dec
push
addr16
lcall
clc
jne
leave
pop
call
repz
add
mov
and
test
cmc
jg
jmp
subl
push
daa
dec
test
and
sarb
arpl
mov
mov
dec
clc
in
pop
iret
icebp
and
pop
push
inc
adc
inc
scas
nop
ret
xchg
cmp
inc
pop
mulb
or
test
lods
ljmp
sar
pmulhuw
imul
rclb
mov
pop
and
inc
mov
add
jae
movsb
pop
push
bound
clc
iret
andb
add
dec
jecxz
in
dec
inc
arpl
xor
mov
jecxz
shr
add
cmp
bound
fcoml
jnp
inc
xlat
mov
pop
insb
dec
xchg
sbb
jmp
into
fisttpl
sbb
rclb
xchg
and
dec
stos
xor
movsl
pop
loopne
aam
movsb
subb
dec
jge
sbb
into
push
or
das
orb
sti
mov
jno
push
lahf
xor
icebp
add
shrl
gs
mov
adc
mov
decl
call
mov
xchg
repnz
sbb
int3
inc
shr
cmpsl
pushf
inc
cmc
lcall
cld
jle
inc
push
adc
fs
cmp
roll
out
stc
push
inc
sar
push
cld
das
pop
imul
push
push
orb
fsubl
pop
mov
icebp
es
aaa
sti
bound
daa
mov
pop
dec
fcmovbe
adc
scas
push
jl
inc
xchg
loope
dec
movsl
ja
dec
dec
incl
mov
aam
ret
cli
push
dec
cmp
cmp
sbb
jl
scas
jae
push
adc
push
adc
mov
pushl
sbb
shlb
jle
cld
imul
out
push
inc
jo
pop
xor
clc
dec
xor
je
push
insl
or
jmp
hlt
scas
push
jmp
sub
stos
jbe
sbb
lea
stos
lock
xchg
imul
cwtl
xor
nop
out
xchg
push
jecxz
pop
nop
mov
js
inc
hlt
pop
andnps
notb
mulb
bound
iret
test
sbb
sub
jno
cmp
mov
push
xor
incl
jecxz
iret
inc
icebp
nop
ljmp
mov
shll
fs
mov
fwait
out
sar
in
jp
mov
loopne
or
cs
mov
loopne
ljmp
daa
imul
adc
cld
and
jbe
dec
imul
std
mov
es
mov
mov
sar
mov
lret
test
or
mov
jnp
in
cmp
cmp
scas
mov
mov
or
pop
mov
adc
push
cltd
mov
lcall
xchg
fwait
loop
sarb
xor
lock
clc
decl
sbb
clc
inc
js
pop
fbstp
data16
xor
xor
sub
sti
dec
mov
fdivrp
mov
xchg
fcompp
sub
cld
and
cmp
push
lcall
lcall
iret
sbbl
clc
into
jne
repz
pop
sahf
loop
cwtd
es
ljmp
or
xchg
ret
in
mov
inc
push
lret
sub
xor
je
data16
decl
cmc
pop
mov
lods
mov
xor
lods
cld
sbb
mov
sahf
sbb
sub
call
inc
mov
push
push
je
push
jae
jmp
or
inc
mov
out
clc
sbb
testl
and
adc
sbb
scas
mov
fnstcw
push
mov
pop
jno
aad
xchg
test
int
cmpsb
mov
jbe
sub
or
sub
adc
ffree
mov
test
shl
add
call
pop
cmc
fsubr
sub
int3
pop
clc
test
xchg
or
add
or
lcall
mov
cmpsb
das
dec
fdiv
and
add
adcl
xchg
sub
decl
mov
cmp
pxor
push
xchg
sbb
mov
shrb
fists
xor
test
add
or
dec
jge
mov
xor
cmp
into
test
inc
mov
scas
mov
inc
clc
cmp
dec
or
call
xchg
shrl
mov
das
dec
push
mov
cmpsb
int3
jo
jae
ret
fisttps
mov
int3
clc
and
mov
mov
inc
outsb
pushl
cld
inc
push
add
xchg
cltd
leave
rorb
and
fwait
call
mov
jmp
subb
call
mov
loopne
mov
insb
and
cld
lods
xor
decl
xor
in
push
sub
addr16
mov
mov
loopne
push
hlt
insb
scas
adc
dec
pushf
rol
cld
call
mov
or
or
loope
pop
cmp
mov
test
fistps
punpckldq
lds
sub
or
jle
mov
push
adc
xor
or
daa
or
jle
mov
adc
in
push
xor
out
arpl
mov
das
pop
in
push
push
leave
mov
and
lcall
je
cwtl
mov
mov
cmc
jae
in
sbb
jle
ljmp
lcall
pop
mov
insl
sbb
mov
je
icebp
in
sbb
enter
lcall
mov
push
mov
insl
cli
mov
jg
sbb
in
icebp
push
das
sub
out
cli
lcall
dec
out
imull
in
sbb
push
cmp
popl
dec
cmp
decl
cmp
les
xchg
fwait
lock
cmp
add
jb
cs
xchg
and
call
div
mov
je
movsb
sarb
pop
xor
enter
jecxz
iret
inc
das
shrb
stc
dec
push
add
sub
das
mov
stos
mov
lret
call
loopne
lock
cmp
clc
test
jns
loope
dec
pushl
jmp
xchg
mov
adc
out
xor
sahf
mov
in
fwait
test
nop
dec
sar
push
repnz
das
push
adcb
cli
xchg
shrl
inc
jnp
adc
cmp
jl
push
out
xchg
and
mov
lea
inc
lret
xorl
pop
push
and
jmp
push
sbb
aas
mov
xorb
xchg
repnz
js
mov
out
fisubrs
mov
pushl
jae
das
xchg
jb
outsb
xor
mov
mov
icebp
sbb
es
add
push
lods
adc
sarb
sub
mov
das
jo
out
fdivrs
cltd
lods
xor
mov
xor
cmp
or
jb
incl
pop
lods
mov
insb
cmp
aaa
sahf
adc
in
jle
js
into
cmp
popf
xor
push
ljmp
push
test
push
cwtl
js
notb
std
pop
imul
outsl
sub
and
outsl
cmpsl
bound
inc
or
mov
sub
mov
outsl
xor
add
js
nop
pop
push
aaa
inc
outsb
or
out
je
jg
push
cmp
jo
cmp
inc
dec
insl
scas
popf
dec
cmpsl
repnz
xor
into
outsl
pop
cmp
fldt
add
dec
ja
call
outsb
addr16
jg
orl
out
mov
lret
iret
lods
in
mov
pop
jb
mov
inc
pop
lock
mov
xchg
sub
jecxz
aas
arpl
decl
das
decb
imul
outsb
jnp
cmp
rorl
jecxz
adc
fisttpll
fwait
pushl
sti
or
inc
push
jnp
insb
ret
xchg
aad
daa
in
sti
jns
push
inc
lods
sub
and
dec
in
cmpsb
xchg
decl
std
repz
jp
daa
mov
outsl
es
sub
dec
jb
adc
adc
sub
adc
ret
jg
push
popa
adc
adc
loope
aad
xchg
test
popf
mov
mov
ljmp
scas
pop
sbb
push
iret
mov
out
fdiv
outsl
repz
sbb
push
call
xor
daa
out
and
push
dec
add
lock
mov
mov
ret
jo
bound
fwait
dec
mov
sbbb
dec
push
fisubl
out
mov
adc
cld
in
loop
mov
rclb
xor
jl
mov
lcall
lods
adc
adc
mov
adc
cmp
xchg
pop
cmc
xchg
or
lcall
ss
adc
xor
sub
and
adc
xchg
icebp
cmp
stos
mov
jmp
insb
mov
and
dec
pop
int3
jge
lock
jp
cmp
rcl
xchg
insb
adc
jbe
ds
icebp
xor
pop
ret
adc
insl
and
mov
pop
cltd
cli
add
xchg
clc
jmp
jo
cmp
out
nop
adc
lods
cmp
xor
cld
mov
repnz
decl
leave
inc
jae
in
sub
decb
sbb
adc
sarb
xchg
push
xor
jl
xchg
pop
jno
xchg
mov
aaa
xor
mov
cmp
ss
cmp
adc
clc
faddp
or
clc
out
movsl
xor
xor
jmp
sub
mov
lret
imull
notb
repnz
xor
in
mov
cmp
and
aam
jno
repnz
sbb
enter
mov
pop
sar
mov
cs
insl
xor
jno
push
inc
call
push
aad
adc
repz
jg
mov
enter
addr16
mov
and
ss
jecxz
mov
mov
pop
cld
pushl
xchg
jae
ljmp
mov
in
pop
and
xor
decl
movsb
aas
xchg
shl
xchg
jno
dec
roll
dec
ljmp
xlat
push
mov
mov
enter
xor
rolb
adc
xchg
decl
in
mov
jmp
cld
test
adc
xor
lahf
adc
fsubrs
xchg
aam
or
pop
test
popa
push
jle
sbb
mov
push
mov
insb
loope
jb
not
stos
push
cmp
cwtl
inc
loop
out
inc
incl
pushl
adc
nop
dec
mov
adc
sarl
aad
dec
not
or
jp
ss
sbb
mov
jle
jo
pop
mov
xchg
jg
push
pop
mov
repnz
mov
and
mov
faddp
fs
ret
or
inc
add
jmp
mov
adc
loopne
imul
sub
mov
jb
push
mov
push
xchg
insb
jle
fwait
sbb
sub
dec
out
cmp
pop
cmp
or
push
out
and
ret
insl
inc
dec
sarb
xor
jg
add
or
adc
andl
into
mov
jg
lcall
sub
jb
outsl
fs
push
dec
fwait
decl
adc
shrl
std
in
js
jae
push
adc
mov
outsl
dec
push
cmpsl
xchg
lea
aam
into
and
into
dec
test
push
inc
cmpsb
xchg
push
ljmp
es
dec
je
in
sub
lock
leave
hlt
and
addr16
and
out
push
pop
fisubl
and
mov
push
lods
mov
sub
in
scas
mov
jo
push
decl
xchg
mov
jmp
pop
sub
xor
pushl
pop
cltd
xchg
jae
std
xor
data16
jae
or
xlat
mov
call
mov
pop
out
lds
push
jb
jns
scas
notb
fisttps
pop
out
sbb
push
dec
movsb
fildl
cs
xor
jb
xchg
adc
std
scas
pusha
mov
pusha
es
pop
fsub
pushf
scas
roll
sar
mov
fs
pop
movsb
mov
shl
hlt
pop
inc
and
xor
ljmp
in
xchg
andl
hlt
add
jae
jae
aaa
rorb
push
push
inc
mov
mov
scas
xchg
cmpsl
adc
xor
sahf
loop
loope
out
rcr
lcall
aam
mov
jp
es
jb
aam
push
jmp
out
mov
adc
in
mov
lret
jl
pop
decl
push
sub
jo
or
fmul
xor
out
dec
inc
jg
cmp
push
out
lock
adcl
or
stos
lret
aaa
rcl
divb
daa
sbbb
xchg
mov
jge
sub
sbb
mov
jno
adc
out
mov
sbb
add
insb
out
orb
push
std
cmpsl
dec
enter
int3
js
setp
scas
pop
scas
fildl
repz
rorb
icebp
mov
je
mov
mov
sahf
je
int3
lods
cld
insb
pop
inc
adc
scas
shll
or
cmc
or
sub
data16
mov
shrl
sub
inc
and
call
push
cs
aad
inc
scas
cmc
sbb
and
ds
std
sub
lcall
jne
push
testb
xchg
hlt
iret
and
mov
in
shrb
push
mov
lea
fildll
push
lret
inc
test
jmp
jne
lcall
decl
mov
cmp
popf
and
jne
xor
jne
xchg
cmp
push
sbb
andl
scas
push
popf
ja
inc
fwait
mov
fcompl
je
xor
jbe
ss
repnz
push
jg
jg
scas
jg
dec
jne
cmp
adc
xchg
or
call
pop
decl
roll
lcall
push
mov
ja
mov
xchg
fwait
loop
div
and
jg
cmc
ret
lods
jl
xchg
jo
aas
aad
adc
shrb
push
jno
sar
out
xchg
push
xlat
push
sbb
decl
mov
adc
sub
or
mov
out
iret
and
push
decl
movsb
mov
stc
pop
rcl
xchg
jbe
jg
pop
xor
push
mov
adc
incl
lock
ss
inc
push
xchg
in
mov
cli
aas
fwait
xor
decl
cld
jge
mov
mov
in
sub
jno
xor
fcomip
insb
sar
jg
mov
push
or
and
imul
stc
xor
mov
inc
sti
inc
mov
shrb
jno
and
fbstp
jne
xor
or
ja
ja
je
cwtl
sub
insl
repnz
shrl
mov
jmp
fdivrp
stos
mov
pop
mov
push
jns
xor
sub
cltd
sub
fwait
lcall
push
inc
mov
fldt
sbb
leave
jmp
subl
xor
cs
test
inc
cmc
or
sub
mov
xor
cmpsb
ja
sysexit
filds
dec
mov
mov
xor
repnz
add
push
push
outsb
insb
mov
mov
lods
add
mov
icebp
insb
jmp
push
loope
push
nop
or
jno
daa
jbe
push
imul
imul
incl
pop
leave
cltd
outsb
cmpsl
pop
adc
sub
lea
push
call
inc
adc
pop
jbe
fisttps
scas
stos
push
xor
jns
jne
ljmp
sub
jae
jge
push
xor
cmp
addr16
push
jb
mov
lock
mov
fstps
clc
sub
push
push
ja
cmp
dec
push
rorb
mov
sbb
data16
cmp
push
or
xchg
das
mov
pushl
mov
mov
mov
test
adc
arpl
push
pop
cmp
adc
js
push
mulb
mov
fcomip
call
cmpb
xchg
jns
aam
dec
jne
cmp
rep
imul
in
jmp
imul
sub
jg
xor
add
push
sar
jg
scas
test
dec
fnstcw
mov
shll
leave
imull
lret
ret
ljmp
jl
jg
sub
ja
jl
sub
push
testb
xor
decl
ljmp
xchg
fildll
push
pop
data16
js
cmp
js
jnp
pop
shll
jle
push
mov
cmp
mov
jno
je
aaa
pop
repnz
sbb
incl
in
xchg
js
fstpl
lea
stc
mov
fdivr
incl
in
in
dec
fisttpll
mul
jne
scas
and
decb
xchg
adc
push
or
jg
sar
pop
cmp
dec
jp
adc
jbe
fmull
cmp
cmpsb
xchg
pop
mov
in
jle
aad
decb
cmpsl
sbb
lods
add
ljmp
div
pusha
push
je
pushl
mov
mov
dec
pop
pusha
sbb
jne
cmp
mov
pop
outsb
pop
adc
stos
insb
jle
jns
roll
pushl
arpl
roll
test
faddl
das
pop
jle
repnz
pop
ja
adc
xor
jns
aad
or
xor
jnp
out
xchg
jbe
jge
cmp
clc
lcall
jle
in
mov
xchg
and
fsubr
xchg
push
xchg
fcompl
shl
inc
clc
test
ljmp
xor
mov
cmp
aad
dec
fcompl
adc
sbb
and
fbld
adc
mov
sub
icebp
in
icebp
pop
es
incl
int
jae
aam
pushf
mov
stos
lahf
hlt
aad
fcoml
lea
and
mov
arpl
dec
popf
sbb
test
ja
inc
std
or
cmc
mov
sbb
push
pop
inc
std
or
sub
fisttps
lods
mov
ljmp
adc
mov
jg
dec
jmp
sbb
fidivrl
xlat
dec
lcall
loopne
decl
popf
cmpl
rcr
sahf
sub
insb
lret
add
sub
scas
stc
call
cs
mov
jno
insl
jnp
push
out
outsl
jnp
or
xor
incl
pushl
jl
jbe
fwait
or
adcb
ret
outsb
cld
std
mov
jb
lcall
push
push
out
mov
nop
lods
mov
mov
inc
or
sbb
pop
pop
xchg
dec
mov
lcall
fimull
jp
nop
aam
push
inc
push
mov
cmpsl
into
sub
dec
push
jo
mov
std
pop
dec
icebp
cmpsb
xchg
sbb
mov
fnstenvs
mov
cmp
pop
sbb
incl
out
hlt
daa
ret
pop
clc
call
mov
add
mov
dec
out
cmp
mov
or
out
shll
incl
adcl
test
mov
mov
jg
lcall
xor
jmp
mov
int3
add
pop
js
mov
xchg
call
sub
iret
jnp
adc
call
mov
inc
pop
inc
les
xor
pushl
mov
mov
mov
push
pop
push
inc
incb
xor
pushf
lcall
lods
jae
out
fidivs
rcr
fldenv
cmp
xchg
test
pushl
push
xor
test
pop
cmp
iret
dec
sub
repnz
xchg
sbb
cwtl
decl
mov
es
mov
cld
adc
es
jg
add
lcall
fstps
lock
xchg
add
mov
mov
cld
inc
aad
mov
ds
cltd
mov
xchg
pop
cli
nop
in
or
stos
push
jp
cmp
fwait
fwait
lds
das
and
push
mov
mov
adc
fldenv
rcrb
daa
or
scas
mov
jnp
in
lcall
filds
mov
mov
addr16
mov
push
adc
movsl
fwait
push
xchg
daa
inc
inc
push
outsl
sbb
adc
inc
shl
sub
push
roll
sbb
ljmp
sbb
sahf
call
ds
loope
and
push
or
jmp
dec
clc
cmpsb
sbb
mov
fwait
mov
mov
subl
xchg
enter
rolb
sub
lcall
sub
jnp
scas
pop
xchg
ljmp
fs
nop
cs
xchg
push
ret
notl
push
sbb
mov
jne
mov
lcall
ja
xor
jp
fwait
aaa
outsl
clc
lcall
nop
int3
jo
adc
and
mov
inc
stos
jb
notb
dec
hlt
ljmp
pushl
sbb
in
adc
sarb
mov
inc
adc
lahf
cmp
sbb
xor
ljmp
test
scas
mov
lcall
xchg
stos
sbb
imul
adc
xchg
repz
jbe
daa
sbb
push
sub
add
fildll
push
bound
jne
cwtl
shrb
inc
jl
lcall
push
jnp
jnp
movsb
mov
daa
jl
out
sub
or
mov
xchg
ljmp
decl
xor
lcall
addr16
divb
mov
mov
lods
push
mov
push
push
pushl
xor
inc
scas
mov
scas
push
add
pop
icebp
fwait
and
adc
pop
jne
push
loop
sub
xor
jg
and
mov
cmc
mov
mov
jns
mov
jbe
xor
adc
cmp
stc
andb
popa
sahf
in
mov
dec
adc
adc
lods
mov
mov
mov
pop
pop
dec
mov
mov
cld
sarb
loope
xor
sar
call
cmpl
mov
jae
push
es
dec
sbb
std
aaa
rcrb
in
mov
popa
int
int3
sbb
aaa
jl
cld
push
pop
jbe
sub
jns
fistps
ljmp
data16
std
pop
and
insb
adc
lcall
jno
lcall
xchg
sbb
pop
sub
call
mov
pop
push
adc
mov
inc
xor
push
imull
leave
fisubs
add
das
sar
sahf
inc
fidivl
pop
adc
into
push
sbb
inc
jle
jns
lea
xchg
scas
mov
in
stos
clc
inc
sub
sub
out
clc
ljmp
mov
jge
aad
xchg
jmp
mov
inc
pop
sub
cmp
push
dec
jbe
jo
xchg
mov
jg
aam
fcmove
mov
pop
int3
lar
mov
in
test
mov
fimull
shll
inc
scas
pushf
popa
addr16
adc
sbb
xlat
into
mov
in
jg
pop
sub
mov
pop
inc
iret
push
sub
push
cmp
scas
clc
outsb
pop
iret
ljmp
sub
mov
movsl
push
mov
and
ljmp
pop
pop
mov
jmp
clc
movsb
push
jecxz
mov
test
inc
push
shrb
ds
stc
xor
sbb
push
jecxz
cmp
jo
mov
scas
jg
cmpsl
inc
adc
pushl
pop
ds
push
sbbl
inc
ret
daa
insl
outsl
cpuid
dec
sub
mov
jbe
lahf
ljmp
ljmp
ret
and
outsb
xor
inc
lock
inc
cmp
mov
inc
cmp
xchg
inc
lret
lret
jmp
xchg
add
mov
test
mov
decl
clc
js
mov
push
inc
into
mov
and
into
mov
pop
into
sub
mov
pop
shlb
cmp
jmp
mov
pop
ret
je
decb
rcr
pop
jge
div
jae
and
sub
xchg
movd
mov
jp
outsb
push
pop
mov
movl
decl
xchg
fcompl
cmpsl
push
jg
lfs
ret
mov
add
scas
add
into
lret
call
inc
test
jae
fld
mov
aas
mov
jge
imul
jns
sahf
js
sub
jmp
or
jns
fwait
inc
dec
sti
inc
ret
dec
lock
adc
inc
cmc
xchg
adcb
or
xor
jle
jle
pushf
mov
popa
jle
jg
enter
lds
jo
or
cltd
scas
cltd
int
psubw
dec
add
inc
andb
adc
stos
jnp
test
fdivr
add
jecxz
int3
lret
out
push
jmp
mov
scas
mov
test
lret
xlat
sub
leave
out
push
xor
out
jp
mov
aad
fwait
out
dec
add
aad
mov
pop
popa
mov
jmp
sub
pop
cmpsb
leave
fistpl
xchg
icebp
popf
into
mov
test
jmp
push
lock
test
sahf
push
cld
lcall
ja
xchg
or
sbb
int
xlat
ret
ja
scas
pop
xchg
ljmp
mov
jge
xchg
insl
clc
imul
scas
or
jmp
in
dec
repz
adc
scas
nop
icebp
pushl
cs
push
mov
orb
jne
push
mov
int3
ds
jmp
pop
lods
outsb
jmp
adc
jmp
sahf
in
lods
lret
or
dec
inc
in
lea
inc
jb
pop
aaa
xor
xorb
cmpsb
cli
incl
push
sub
cmpsl
lcall
bound
das
push
ljmp
push
fadds
dec
pusha
movsb
loop
mov
test
adc
inc
pushf
add
dec
mov
clc
jmp
out
testb
sbb
sub
cmp
mov
dec
add
dec
adc
subb
ja
outsl
std
lds
dec
inc
mov
sub
xchg
mov
iret
scas
adc
iret
xchg
in
inc
sub
push
xchg
out
pop
add
xchg
sar
nop
push
mov
dec
xor
xchg
ret
int3
sbb
or
inc
inc
dec
jae
or
aaa
sub
dec
mov
dec
dec
push
out
or
decl
insb
loopne
popa
stos
inc
imul
fdivl
push
or
cld
lods
and
loope
movsl
scas
je
lahf
imul
es
pushl
test
call
call
insb
shlb
cld
cmp
mov
and
mov
decl
cld
cld
nop
mov
pop
add
mov
pop
loope
movsb
lcall
mov
inc
orb
mov
call
push
test
fsubl
sub
xchg
xor
nop
jae
popa
cmpsb
repz
rdmsr
es
sbb
cli
decl
sbb
cmpsl
xorl
imul
and
push
cmpsl
decl
dec
xor
jmp
ljmp
push
jnp
push
mov
xchg
lods
jg
jns
sub
test
iret
lea
ficompl
mov
sbb
mov
adc
fnsave
stc
call
push
xchg
inc
popf
xchg
ljmp
es
xchg
inc
cmp
lock
mov
ds
in
mov
testl
add
xor
call
cmp
xor
mov
cs
pop
or
popa
scas
mov
ja
mov
stos
add
call
push
mulb
add
cs
pushl
std
push
jae
stos
test
test
add
lods
movl
lret
lcall
xchg
lcall
cmc
ret
aas
lea
cmp
mov
push
inc
push
mov
add
mov
push
imul
jecxz
xor
cwtl
mov
jg
bound
cmpsl
repz
ljmp
jno
cld
in
inc
inc
pop
dec
lods
xorb
mov
mov
jno
ficomps
lcall
inc
sub
pushf
sti
jmp
push
mov
pop
cld
ljmp
insl
sarb
bound
mov
push
das
icebp
clc
out
cmp
lcall
nop
dec
in
popf
push
sahf
pushf
xchg
scas
popa
rorb
into
cmp
cwtl
pop
lcall
leave
out
scas
inc
jno
push
fcoms
sbb
jmp
lret
aad
jae
jmp
push
jo
xchg
mov
mov
mov
aas
lahf
push
adc
in
out
cmp
mov
mov
rsqrtps
xlat
lds
mov
mov
ljmp
mov
data16
and
push
sbb
add
clc
dec
int
push
sub
popa
aad
fwait
test
add
lcall
jmp
cmpsb
neg
clc
xor
jnp
cld
dec
push
mov
jmp
mov
xchg
decl
into
das
mov
or
arpl
pushf
or
insl
call
int
clc
ja
dec
add
cmp
inc
pop
loop
pop
pop
cld
push
test
sub
or
das
cli
lcall
add
mov
adc
data16
push
sbb
mov
ljmp
nop
push
inc
jmp
inc
inc
mov
aaa
jo
rcrl
mov
xchg
xchg
test
push
mov
addr16
call
pop
mov
lds
rclb
push
lret
subl
popa
out
dec
fisttpll
mov
lcall
andb
push
pop
or
loopne
incl
mulb
fisttpll
or
sbb
loope
pop
sti
sbb
test
jno
pop
jge
cmc
mov
out
add
push
pop
hlt
push
add
cmc
and
mov
insl
mov
rorl
mov
adc
adc
add
xor
test
dec
es
jecxz
adc
aam
jns
xchg
aad
or
outsb
and
dec
data16
incl
pop
lds
xor
and
out
out
mov
fwait
add
les
sub
cltd
into
call
mov
out
push
or
mov
enter
std
push
xchg
icebp
cmc
xlat
push
pop
sar
sub
pandn
pop
fmulp
dec
xor
adcl
mov
xchg
lods
pop
sub
and
sti
mov
adc
call
jne
xchg
pop
mov
and
movsb
dec
sbb
add
dec
decb
loopne
fadds
or
aam
fsubrl
jp
mov
pusha
sub
mov
push
jg
mov
add
add
fadds
sub
lcall
xchg
insl
sbb
cmpsb
ficoml
sarb
mov
dec
sbb
pop
sbb
leave
shlb
loope
mov
test
stos
mov
call
xchg
mov
or
xor
cld
mov
pop
cwtl
lds
jg
lcall
aam
cbtw
bnd
je
insl
xchg
jne
int3
les
cmpsb
sub
inc
test
clc
cld
xor
jns
or
xchg
fisttpl
inc
outsl
hlt
icebp
sub
and
ljmp
loope
movsb
push
inc
xor
mov
cltd
fmul
mov
pop
jne
or
mov
fbstp
fdivr
clc
adc
xor
or
push
and
cld
out
sub
lret
or
sbb
cmp
xchg
into
iret
dec
lret
divb
out
fwait
loop
fs
int3
add
push
jns
xchg
scas
fsub
test
pop
std
in
insb
test
mov
jne
sub
fildll
test
rclb
inc
decl
call
xchg
fwait
sbb
hlt
enter
int
pusha
jge
adc
call
das
jbe
dec
cli
imul
pop
cmp
sub
add
std
sbb
push
repnz
jb
stos
pop
cmp
inc
es
or
adc
jmp
fsubp
jae
pop
lock
sub
sarb
fisubl
lcall
bound
push
xchg
mov
iret
adc
das
add
add
or
setg
sbb
ret
std
xor
sub
call
mov
mov
pop
mov
or
pushf
pop
lret
lcall
sub
rcrl
mov
xchg
inc
mov
jo
push
out
push
call
lcall
cld
fists
pop
inc
fsubrl
std
incl
or
addb
lcall
adc
loopne
push
dec
cld
int
mov
adc
call
mov
stos
push
jns
sub
pop
ret
pop
int3
inc
mov
mov
xor
ja
push
mov
cmp
sbb
ljmp
stc
add
jo
sahf
cltd
add
insl
scas
pop
out
sbbb
pop
lahf
or
mov
jp
pop
call
sub
adc
lods
xchg
adc
shrb
popf
dec
lcall
sbbb
es
lods
clc
dec
imul
loop
sar
jg
jmp
inc
das
call
sbb
pop
mov
mov
bound
incl
push
fisubrl
lock
jl
std
sub
or
adc
inc
jmp
decl
aaa
sub
cmp
lods
lock
mov
jmp
call
lds
pop
stc
call
imul
push
lcall
or
pusha
xor
adc
popa
adc
lock
cs
cltd
es
push
fisubs
lret
lcall
js
push
xor
push
push
das
sbb
enter
mov
cmc
dec
push
ljmp
sbb
add
pop
int
or
mov
sbb
icebp
push
or
sub
push
pushl
shlb
dec
dec
cs
leave
inc
push
test
das
fidivl
mov
dec
in
pushl
push
out
cltd
mov
cmpsb
fisttpll
pop
jno
rclb
cs
jmp
jg
decl
les
push
adc
mov
mov
add
xchg
mov
jbe
lods
push
pushl
repnz
xchg
jo
push
out
xor
cmpsl
outsl
das
test
xchg
repz
inc
cmp
or
pop
adc
fsts
cli
insb
pop
rorl
das
movsl
push
shrl
ljmp
jns
add
mov
pop
cmpsb
dec
test
dec
inc
fs
pop
das
jle
shrb
and
and
dec
jmp
push
ljmp
orl
or
push
xchg
cmp
jl
xor
push
scas
xor
adc
cli
in
ljmp
dec
dec
push
adc
sub
sarb
int3
sbb
mov
scas
adc
out
cmpsb
mov
out
out
mov
popf
mov
in
cmp
mov
or
mov
call
sub
iret
nop
push
test
xor
jecxz
pop
sar
inc
xor
cli
cld
mov
pushl
fisttps
repz
push
mov
push
mov
loopne
or
decw
xchg
xor
push
cs
rorb
pop
stos
sbb
sti
jmp
ljmp
out
adc
and
push
jbe
cwtl
out
push
bound
xchg
cs
jg
addr16
cmc
adc
mov
sbb
imul
outsl
fs
sub
filds
int3
sbb
lods
push
imul
jecxz
jnp
insb
jb
inc
loop
mov
pop
std
decl
fwait
jb
stos
xchg
sti
test
push
test
mov
lods
sbb
sub
es
ljmp
ds
sub
adc
push
fwait
sub
adc
xchg
in
rorl
pushl
mov
lods
dec
not
lock
clc
or
int3
mov
int3
cmp
decl
mov
mov
sarl
pop
or
das
stos
sub
sub
mov
pop
pop
enter
ljmp
pushf
xor
dec
pop
push
insb
test
dec
insb
xchg
cld
nop
sbb
cmp
push
std
clc
xchg
fwait
sbb
adc
mulb
inc
sbb
ja
pushl
push
jg
es
into
adc
nop
xchg
icebp
xchg
out
adc
dec
push
daa
push
or
pop
fdiv
pushl
adc
in
pusha
sbb
xorb
push
push
pushf
test
push
ljmp
cmp
or
jg
mov
xchg
xchg
mov
xor
lahf
lock
pop
jmp
lahf
jae
jmp
adc
mov
jge
mov
push
outsl
lock
dec
or
sub
adc
pushl
push
shl
pop
int3
test
cmp
lods
xchg
xchg
popf
gs
push
test
add
dec
inc
xchg
jo
mov
pop
sbb
cmp
mov
cmp
nop
insl
pop
imull
insb
cmp
inc
lods
into
sbb
incl
insl
cmpsb
dec
adc
push
dec
bound
jmp
add
mov
jmp
sbb
cmp
xchg
add
stos
loop
paddw
ds
sub
ljmp
adc
out
sub
xchg
fsts
push
popf
and
mov
hlt
imul
stc
out
call
mov
sbb
mov
push
mov
and
in
in
sub
ja
setl
adc
outsb
into
imul
ret
or
adc
hlt
roll
pushl
scas
lock
stos
outsb
xor
push
jle
outsb
aaa
mov
add
imul
stc
int
pusha
inc
imul
or
push
mov
outsl
cld
call
jg
ljmp
sub
aaa
das
mov
dec
ret
insb
lds
pop
cld
jg
adc
jae
scas
jnp
cmp
sbbb
or
lcall
mov
dec
cmpsb
lods
sbb
sbb
push
decl
sub
dec
add
ljmp
xor
mov
data16
cld
out
pop
das
push
dec
jg
sbb
daa
cwtl
jo
lahf
or
ret
ljmp
jmp
clc
sub
adc
adc
out
rorb
jno
icebp
jo
movsb
and
push
fcomip
dec
lcall
adcb
shlb
push
ljmp
shr
or
xor
bnd
es
frstor
sbbl
incl
sbb
insl
sub
push
into
push
push
mov
xor
xor
outsb
ljmp
movlhps
cmp
and
incl
cld
push
sub
cmovae
loop
sahf
or
mov
or
cmp
jbe
lea
lcall
dec
test
sbb
push
rolb
inc
push
pop
lret
xchg
js
xor
jecxz
xchg
call
jae
push
cltd
jae
xchg
and
sarl
sbb
add
sahf
call
mov
ja,pt
or
pop
negb
push
inc
lods
fdiv
and
loop
sbb
pushl
or
or
int3
sarb
dec
mov
jg
clc
fcom
test
mov
xlat
aas
xchg
pop
dec
adc
xchg
dec
lock
decl
mov
jmp
mov
xorl
pushf
pop
inc
in
call
inc
je
push
js
fwait
pop
ljmp
cmpsb
push
aaa
gs
scas
push
call
lods
pop
test
int3
xor
inc
fwait
add
lret
sbb
in
mov
insb
rcrl
mov
and
mov
adc
into
loopne
clc
pop
xor
sub
ret
adc
jg
cli
sti
pushf
push
lock
subb
movb
push
mov
mov
jne
inc
pop
mov
jmp
pushl
push
ja
nop
inc
mov
dec
movsl
aam
outsl
rorb
lcall
pop
outsl
push
gs
cmp
lods
xor
pushf
int
jmp
js
mov
pushl
mov
dec
ljmp
dec
test
in
lea
cli
out
xchg
js
jg
mov
aam
mov
jmp
cli
push
icebp
js
cmp
jns
push
mov
xor
push
shrl
pop
loop
pop
out
or
mov
sbb
pushl
pop
cmp
sarl
xchg
push
testl
pop
add
pop
test
inc
es
inc
aaa
push
repz
incl
imul
mov
cmpsb
testl
mov
mov
mov
idiv
incl
pop
add
jbe
sahf
or
aas
roll
dec
std
data16
sbb
lcall
push
cld
outsl
add
aam
lock
mov
lret
aad
ret
pop
dec
insb
js
ljmp
rorl
xor
movsb
xor
jnp
sub
test
aaa
hlt
mov
push
pop
insb
enter
shr
add
cmp
dec
call
push
lea
mov
negl
and
mov
dec
xor
ljmp
dec
scas
ljmp
dec
out
scas
fcoml
insb
push
lods
sub
cli
je
and
push
int
sti
rcl
mov
shlb
aas
cli
mov
jl
jmp
mov
sbb
inc
sub
faddl
dec
or
jmp
sbb
cli
add
inc
in
sbb
lock
cmp
pushl
mov
insl
push
lret
aam
xor
xchg
add
jmp
cmpsl
xchg
mov
inc
enter
inc
shlb
les
jg
add
icebp
ss
loopne
cltd
mov
pop
shl
jae
insb
xlat
pop
mov
cmp
sub
shl
mov
push
lret
mov
sbb
pushf
xor
inc
sarb
call
lods
fdivl
xor
xchg
subb
lods
je
inc
aad
mov
xchg
mov
ljmp
xor
jo
subl
jg
sub
in
ror
lods
lds
int3
bound
push
icebp
adc
es
or
adc
rcll
sub
push
pop
leave
sbb
push
sub
push
sar
pusha
sub
cmpsb
jg
jno
dec
inc
shlb
push
lret
jnp
clc
mov
jb
sbb
incl
repz
cmpsb
fiaddl
mov
inc
inc
mov
jb
pop
adc
nop
js
incl
les
sbb
lods
out
ror
movsl
jne
es
jmp
test
incl
dec
or
jb
jecxz
push
push
or
enter
adc
ljmp
clc
lods
cmp
jg
loope
xor
aad
cmpsl
clc
loope
mov
mov
scas
cli
jmp
outsb
repz
movsb
fistpl
sbb
jo
mov
icebp
xchg
xchg
bound
loopne
decl
rolb
or
mov
jmp
cmp
orb
and
xchg
mov
stos
fiaddl
jno
jnp
jnp,pt
ja
pop
cmc
adc
mov
out
push
mov
into
adc
ret
cmpsb
sar
pushl
js
add
push
insl
jge
ljmp
xor
xor
insb
scas
shlb
lods
mov
scas
mov
xchg
jnp
push
adc
outsb
aad
data16
outsl
jg
cs
jb
cmp
cmp
ljmp
rcrb
mov
pop
sbb
mov
xchg
cmp
cmpsb
repz
cld
decl
push
dec
je
mov
shrl
out
data16
mov
pop
mov
pushl
jle
or
adc
mov
sbb
movsb
push
lahf
xchg
xor
pusha
and
xlat
shr
mov
xchg
cmp
xchg
xor
xor
pop
ficoml
mov
data16
mov
fcom
mov
and
mov
or
cmp
jae
jno
call
rclb
pop
shrl
mov
or
push
cmpsl
pop
insb
call
dec
stc
pop
mov
or
push
and
xor
in
jle
js
insl
aam
mov
xorb
loope
ljmp
pop
out
or
xor
xchg
fcom
lahf
call
xor
push
dec
or
xchg
push
adc
int3
adc
mov
xor
push
mov
rorb
std
xchg
adc
and
stos
mov
lcall
pop
push
test
insb
cld
mov
fdivr
call
cs
in
jg
xorl
sbb
mov
nop
es
incl
jno
jg
and
popa
xor
or
jo
test
fwait
sbb
push
nop
jb
out
mov
xor
sub
xchg
inc
aas
sbb
aam
jmp
jmp
jne
push
push
pop
xchg
shrb
in
pop
lret
xor
movsl
dec
jle
and
or
lods
sbb
adc
mov
jmp
lret
push
ljmp
insb
jle,pn
pop
std
xor
ds
mov
push
dec
jns
mov
mov
ljmp
and
xor
jo
pop
aam
test
inc
xlat
lods
jno
mov
out
cmc
outsb
faddl
adc
mov
xlat
fcmovbe
subl
lock
aaa
shll
pop
clc
idiv
call
push
mov
jmp
xchg
in
js
scas
mov
push
xchg
enter
call
rolb
enter
ficoml
cs
mov
pop
and
push
jne
icebp
aad
int
add
sub
xor
in
pushl
xor
push
shr
add
sub
mov
sbb
dec
es
testb
test
jg
sti
jle
pop
push
es
mov
mov
adc
dec
jl
xor
lcall
pop
cld
je
fists
dec
lcall
fbstp
hlt
dec
lds
or
incl
xchg
jmp
jmp
sub
faddl
push
test
icebp
mov
pushl
mov
scas
loopne
in
rcrb
iret
mov
jno
jmp
fcomps
test
int3
jae
in
enter
jnp
mov
mov
mov
inc
mov
aam
ds
jno
push
insb
or
mov
dec
dec
outsb
mov
pushl
pop
jge
fs
cmpsl
jle
fists
enter
mov
outsb
inc
pop
cmp
jo
icebp
call
cs
bound
or
int3
pop
jno
sbb
decb
sbb
pushl
jl
add
or
mov
fcmovb
call
clc
jle
push
dec
das
ficomps
jbe
loopne
leave
jae
pushl
push
leave
mov
ficoml
repz
push
aad
loop
mov
fidivrl
adc
ljmp
mov
mov
jbe
jns
xlat
inc
daa
mov
cmpb
cmpsb
pop
daa
mov
data16
dec
jno
iret
ja
icebp
inc
ret
xchg
dec
lods
bnd
adc
push
rclb
int3
mov
sahf
xchg
push
sahf
jnp
pop
testb
imul
decl
cmp
scas
inc
push
sti
jae
dec
jae
js
push
lcall
xchg
aam
and
out
addr16
sti
fcomip
pushl
data16
mov
sbb
pop
and
je
addl
or
call
add
dec
rolb
pop
cmp
xchg
aam
dec
lcall
lahf
push
mov
je
lahf
ja
and
pop
in
xor
xlat
push
cli
mov
dec
jb
fisttps
jno
pop
cmc
sbb
mov
sahf
ljmp
jae
dec
ja
xchg
call
inc
jno
enter
mov
mov
std
lds
xchg
adc
pop
pop
jle
loopne
jo
fistps
sbb
xchg
xchg
or
xor
inc
mov
ds
in
stc
cld
mov
or
mov
hlt
jne
pop
jne
repz
adc
int3
je
lcall
jbe
rorb
cwtl
mov
mov
xor
cs
fcomi
repz
xchg
outsl
inc
lahf
jbe
sbb
jae
dec
or
ja
xchg
push
in
std
xor
xchg
nop
mov
into
clc
lods
push
scas
daa
push
mov
ljmp
pop
lahf
imul
fistpl
sub
mov
cld
adc
ficompl
sbb
fistl
sub
ljmp
pminsw
pop
xor
push
inc
popf
xchg
push
cmpl
mov
push
cmp
push
or
or
call
jae
pusha
xor
fldl2e
dec
in
and
popf
sahf
imul
jmp
inc
jne
ja
pusha
lods
mov
pop
xor
fdiv
jo
jne
push
sbb
int3
and
addr16
std
decl
ds
mov
sub
rcll
cmp
or
add
imul
fildll
ds
aaa
inc
xchg
jp
pop
jg
cmp
rcrb
ret
call
cmp
imul
add
sbb
push
fwait
test
pop
imul
scas
jne
xchg
pop
rcrl
pop
adc
fdivrl
lahf
dec
cmc
aas
out
adc
xchg
ljmp
ds
jo
cmp
sub
dec
mov
cwtl
shlb
call
ljmp
cmp
pop
lods
pop
jo
int
shr
fcomip
mov
adc
leave
dec
gs
push
daa
jmp
das
add
jle
pop
sub
call
ret
int
pushf
or
cmp
fwait
insb
xchg
insb
add
int3
pop
mov
dec
mov
rcrb
jne
xor
insb
add
sbb
pop
mov
xor
xchg
pop
fdivs
cmpsb
ljmp
mov
sub
pushf
lcall
stc
aas
test
jnp
incl
jae
ljmp
mov
mov
mov
inc
push
lock
dec
sarb
and
ljmp
test
in
lcall
adc
jmp
and
cwtl
mov
gs
and
jo
aaa
std
cli
leave
iret
or
jmp
mov
sbb
cmc
std
leave
xor
xchg
scas
mov
xchg
push
outsb
test
pop
dec
orb
das
stc
cmp
add
adc
mov
and
call
lcall
mov
ss
jge
leave
xchg
lcall
and
push
jno
inc
mov
jg
scas
mov
inc
lods
cmp
pop
xor
and
or
jecxz
fidivl
jge
shlb
xchg
adcl
sbb
add
xchg
pop
jb
nop
pop
subb
pushl
leave
rclb
nop
dec
sbb
pushf
push
addb
xor
lcall
xchg
pop
sbb
mulb
lcall
outsl
cmp
ljmp
adc
fwait
mov
cmc
xor
jmp
mov
mov
sahf
jb
pop
in
gs
xchg
stos
sbb
lcall
mov
xchg
in
nop
xchg
int3
cmpb
jmp
push
adc
cltd
leave
scas
cmp
lock
jnp
repnz
push
pop
cmpsb
icebp
ud0
cmp
jmp
mov
cmp
jg
jmp
sar
mov
jno
js
xor
mov
scas
and
clc
cmp
pop
enter
jbe
lcall
rcll
adc
xchg
decl
fwait
jo
ja
push
cld
mov
sets
dec
cmp
or
cld
add
pop
lds
sub
pop
cmp
enter
jg
adc
and
ret
push
xchg
mov
adc
push
mov
stc
xor
lcall
lcall
fcoml
push
es
lds
into
adc
mov
cmp
fiadds
lcall
sarb
sahf
jbe
jns
push
mov
and
xchg
fstpl
mov
lcall
mov
in
int3
loopne
aad
jo
sub
jg
es
or
mov
pop
sbb
fldenv
lcall
mov
fisubs
js
stos
call
pop
hlt
jmp
call
inc
inc
xchg
jbe
lock
inc
xor
call
xor
pop
ret
imul
icebp
into
hlt
dec
scas
xchg
out
jge
or
pop
mov
sar
sti
mov
fdivrl
sbb
adc
mov
mov
push
dec
pop
popa
out
stos
sub
pop
sub
push
bound
cs
push
icebp
jle
push
rcrb
inc
loopne
std
pushl
or
mov
pop
stos
jne
jle
xchg
adc
sbb
decl
popf
fistpll
inc
movsb
cmp
cs
push
sub
lock
mov
or
sub
mov
mov
sub
push
rcrl
pop
addr16
outsl
mov
cmp
pop
jb
cmp
in
jge
push
outsl
je
cltd
cmpsb
roll
lock
adc
decl
enter
fwait
dec
divl
fwait
adc
popa
pushl
data16
outsb
aas
sub
jnp
adc
repz
incl
pop
xor
inc
dec
stos
jae
mov
fmuls
mov
mov
loopne
mulb
test
and
and
sbb
adc
mov
nop
out
lods
in
xchg
push
aaa
inc
aas
sar
loopne
pop
jp
sub
in
inc
aam
xchg
and
and
push
inc
cmp
out
clc
imul
mov
dec
sbb
movsb
stos
int
out
push
pop
es
dec
into
add
call
nop
ja
insb
in
push
mov
mov
adc
aas
jo
jmp
push
push
lods
xchg
mov
cmp
std
daa
xor
dec
imul
inc
adc
xor
pop
mov
call
add
sbb
mov
shrb
int3
movsb
jg
mov
data16
shlb
push
adc
add
or
test
in
adc
int3
push
dec
push
dec
dec
adc
incl
out
push
mov
data16
push
push
jl
jae
jl
stos
in
pop
xchg
out
inc
in
lods
or
and
ljmp
out
mov
jno
mov
ret
push
punpckhwd
roll
jmp
mov
addps
add
mov
arpl
add
roll
sub
adc
daa
aad
loopne
and
loope
xchg
or
mov
fmull
mov
clc
mov
add
mov
dec
cld
out
cmpsl
xchg
sbb
adc
xor
test
fwait
mov
cmp
sub
xchg
out
mov
jbe
cmpsb
xchg
iret
mov
enter
clc
mov
clc
call
push
adc
sbb
std
popa
in
mov
aam
incl
jp
jno
jnp
push
sub
xor
cmpsb
pop
push
out
jns
pop
push
lods
pushf
imul
dec
cmp
test
mov
adc
cmp
out
mov
ljmp
cmp
lret
mov
lret
jnp
outsl
clc
xchg
mov
mov
cmpsb
clc
jae
jg
or
xor
xor
xor
push
push
in
pop
jne
decb
add
jmp
lds
adc
out
popf
push
push
cs
scas
es
pop
mov
scas
push
stc
loopne
je
out
pop
addr16
pop
js
mov
push
xor
mov
aas
xchg
insl
rol
jge
dec
add
fldt
dec
mov
stc
add
aad
loopne
adc
dec
stos
xchg
lcall
jmp
mov
stos
sub
aam
jo
mov
cld
repz
push
xlat
push
clc
out
in
lods
mov
andb
rolb
pop
jecxz
imul
jmp
ja
mov
mov
mov
inc
inc
cmpsb
popa
jecxz
xchg
sub
decl
test
sub
inc
xchg
push
inc
pusha
fmull
ret
repz
decl
test
lock
lods
jo
outsl
xor
test
xchg
ret
jmp
loopne
sbb
enter
shrb
jl
xchg
mov
push
incl
subb
cmpsl
cmp
xlat
xchg
jnp
outsl
and
jmp
inc
dec
outsb
popa
and
aam
mov
out
mov
pop
repnz
xor
xchg
cmc
loopne
fldt
jmp
xor
data16
cmp
sub
mov
scas
outsl
in
mov
cmp
into
in
or
movsb
movsb
dec
adc
inc
mov
xchg
mov
jmp
push
arpl
push
out
xchg
inc
xor
movsl
leave
pop
cmp
lcall
loope
xchg
mov
push
pushl
mov
out
arpl
rorl
adc
imul
pushl
ss
nop
adc
pusha
aad
loop
xchg
or
xor
jo
adc
or
mov
nop
idiv
inc
in
lcall
pusha
clc
xor
mov
and
aam
scas
clc
decl
int3
pusha
jmp
and
int
xchg
mov
or
sti
sti
gs
lret
and
dec
xor
pop
sub
adc
dec
sub
incl
push
popf
xlat
addl
cli
jg
lds
mov
in
leave
mov
incl
adc
push
jno
loope
push
jmp
jecxz
stos
loope
aam
push
adc
cld
jmp
cmc
adc
test
add
jge
call
movsb
mov
aad
xlat
and
popf
lret
in
cmp
jge
mov
mov
jno
cmp
std
call
dec
data16
push
inc
sbb
jg
jmp
lods
mov
and
xor
sbb
movsb
scas
movsb
adc
push
out
insb
std
inc
add
xchg
add
outsb
clc
loop
mov
out
sub
inc
pop
stc
in
push
sub
in
call
mov
mov
pop
fiadds
data16
mov
clc
dec
insb
push
das
mov
ljmp
xor
add
lock
iret
jle
addb
jae
cmc
push
jnp
dec
test
jg
lods
add
adc
fld
in
lcall
rol
pop
je
mov
mov
mov
adc
add
sbb
fs
pushl
mov
icebp
cmc
sub
push
bound
xchg
push
ja
sbb
push
lcall
sbb
outsl
pop
dec
imul
sbb
and
push
mov
outsl
filds
cmc
fstp
push
lret
jg
lea
add
mov
jp
int3
orl
xchg
pushl
mov
sub
xchg
mov
fnsave
fsubs
incl
xlat
maskmovq
arpl
addl
scas
mov
dec
adc
inc
sbb
js
sar
mov
dec
mov
inc
adc
xchg
mov
add
jmp
inc
jo
or
sbb
xor
cmp
lcall
adcl
mov
addr16
xor
jnp
sub
or
sahf
inc
pop
data16
cmp
mov
add
or
sbb
add
cld
jl
scas
incl
roll
ljmp
add
add
jmp
dec
rcrb
ljmp
ljmp
xchg
xchg
fidivrl
enter
push
pop
in
jne
lret
adc
cs
add
push
addr16
rcll
pop
mov
lcall
sub
fxch
ret
push
in
jl
cli
push
push
pop
cmpb
cmpsb
jg
call
in
push
jecxz
andl
jge
les
cmpsb
faddl
xor
xchg
and
jmp
push
inc
loopne
jecxz
repz
cmp
and
dec
dec
lock
xor
mov
lcall
jp
enter
pusha
dec
or
push
xchg
aad
inc
int
insl
jo
int
icebp
scas
in
popl
iret
inc
lcall
incb
movsl
push
pop
push
inc
and
sbb
dec
mov
mov
cmpsb
addb
inc
xor
and
test
mov
pop
jg
nop
loopne
mov
push
outsb
pushf
movsb
cli
push
mov
dec
imul
je
mov
sbb
in
rclb
fs
decl
insb
cmp
lds
mov
cmp
imul
scas
mov
sbb
cmp
push
sbb
in
daa
test
rorl
mov
cmp
cmp
or
mov
imul
frstor
mov
cli
or
incl
push
nop
insb
aaa
inc
pusha
push
cmp
cmc
out
shlb
fdivr
call
idivb
popa
jmp
bound
inc
std
jne
hlt
iret
popl
push
out
cmpsl
jg
pop
loope
movsb
jmp
dec
outsl
hlt
pop
mov
inc
cmp
dec
arpl
mov
mov
cmp
jo
or
cld
test
and
cmp
movsl
or
clc
cmp
ljmp
cmp
mov
out
out
aad
nop
inc
sbbl
inc
sti
adc
fildll
mov
lar
mov
imul
mov
cli
inc
ljmp
jne
fs
push
out
sub
pushf
jmp
outsl
cmp
loopne
push
mov
jl
dec
and
xor
or
decl
repz
add
xor
sti
push
pop
mov
pop
pushl
sub
lcall
ret
jnp
stos
popf
scas
add
mov
adc
push
js
fldenv
incl
xor
lods
adc
notl
mov
mov
push
call
cld
call
out
mov
es
xor
and
imul
pop
add
cld
cld
in
aam
or
push
repnz
mov
fildll
mov
inc
data16
mov
jne
std
cld
adc
add
inc
scas
fstpl
ljmp
sti
mov
jmp
dec
jne
mov
shr
bnd
xor
enter
jg
ljmp
mov
pusha
cli
mov
scas
aam
mov
popf
sbb
cli
in
jo
mov
pushf
in
cmp
das
cmp
sub
scas
hlt
push
in
jg
enter
jne
das
hlt
rcl
or
es
movsl
adc
add
fdivr
idiv
pop
fidivl
push
stc
lock
dec
addr16
xchg
enter
icebp
mov
out
clc
mov
call
add
push
cld
mov
jnp
mov
mov
push
cmp
dec
nop
mov
adc
ljmp
shll
xor
shl
mov
out
pushl
adcb
jb
or
cmp
and
push
adc
jmp
outsb
aas
jg
ljmp
adc
mov
sbb
or
nop
pop
xchg
or
rcrl
hlt
insl
mov
sbb
call
incl
daa
loopne
pop
xor
push
adc
bound
das
rcrb
mov
adc
fcomp
or
scas
inc
idivb
xor
cmpsb
jmp
aad
hlt
movsb
in
scas
mov
in
bound
xchg
pop
mov
push
mov
mov
es
das
cli
push
out
cwtl
ret
mov
push
imul
or
loope
icebp
jmp
sarb
adc
pop
push
sbb
int
mov
and
ljmp
orl
shll
imul
add
and
push
jmp
cs
cmp
dec
movb
xchg
lahf
ljmp
sar
jmp
loope
int3
jecxz
add
testb
fimuls
imul
mov
and
push
add
inc
jp
push
push
pop
call
push
stos
das
xor
pop
cmc
jb
test
rorb
adc
lods
add
pop
jp
inc
imul
push
xchg
call
mov
sbb
std
push
mov
aad
and
std
xchg
cwtl
mov
in
mov
in
dec
adc
ficoms
out
jmp
cmp
jb
lods
loop
shr
mov
or
aas
push
into
jno
sbb
imul
subb
iret
sar
ljmp
sbb
jbe
xlat
outsl
and
xor
inc
and
ljmp
incl
cmp
lods
out
pusha
dec
pop
xlat
repz
xchg
rcrb
mov
mov
lea
in
cld
shlb
push
jo
dec
pop
mov
mov
loop
scas
outsl
push
jb
inc
cmp
lcall
mov
pushf
push
adc
dec
pop
cmp
adc
mov
mov
out
sub
jle
outsl
adc
test
iret
xchg
xchg
ds
shrl
lods
or
fdivl
sub
fsubl
sbb
xchg
incb
into
xlat
jns
clc
inc
lods
add
mov
fcompl
or
push
lret
data16
inc
ja
test
gs
lods
cld
shl
test
scas
jns
mov
mov
sbb
lret
inc
inc
xchg
xlat
xor
mov
sti
sbb
adc
ret
sub
sbb
insl
mov
lcall
incl
xor
sub
popa
sub
in
sub
mov
push
xchg
mov
ror
inc
lahf
add
fcomi
std
lods
ljmp
xlat
push
sarb
or
cmc
sub
push
lock
lahf
repnz
ds
comiss
cs
sbb
ds
outsl
lds
jmp
cmc
sub
test
nop
or
dec
dec
lret
sahf
stos
movsb
imul
insl
popf
lahf
pop
adc
pushf
or
mov
dec
mov
dec
loope
shl
in
jmp
mov
or
adc
sarb
or
mov
xor
in
ljmp
sbb
mov
push
les
pop
inc
push
aas
jmp
in
fimull
and
insw
js
xchg
cli
push
pop
cs
sub
mov
shll
outsl
xchg
sti
pop
mov
pop
mov
adc
cs
mov
lcall
les
out
test
jne
gs
pop
es
imul
sub
mov
imul
lock
fsts
ret
sbb
mov
jmp
enter
sub
mov
mov
pop
push
push
dec
cld
ljmp
inc
lcall
mov
popa
ss
in
nop
jg
mov
cmp
cld
ret
imul
lret
sub
decl
jmp
out
jle
cmp
sub
cli
jecxz
adc
jo
jl
xchg
mov
cmp
inc
mov
lea
cmp
and
push
jnp
stos
xchg
jnp
inc
imul
push
fisttpll
xlat
jb
mov
fcomps
mov
shll
shrb
mov
sub
xlat
call
jno
push
jae
and
push
cmpsb
cli
mov
dec
jnp
scas
shll
shrb
jecxz
lea
push
fdivl
jno
add
xchg
insb
bound
inc
sbb
insb
cmpl
sti
scas
in
jae
lcall
cld
sti
repz
mov
push
lock
test
adc
xor
fnstsw
mov
pushl
incl
addr16
test
adc
jg
aam
test
adc
dec
lea
sbb
test
cmp
xchg
xchg
lds
test
nop
sbb
xchg
jg
cltd
test
lock
push
sbb
mov
rolb
aad
icebp
cmpsb
cld
test
je
inc
ljmp
adc
sub
push
mov
or
bnd
sub
cld
dec
ds
test
xor
jg
mov
mov
push
xchg
sub
rol
jb
lret
int3
and
lcall
adcb
sub
loope
roll
jo
sub
int
cmp
xor
ljmp
sub
cmp
push
lret
loop
pop
sub
and
nop
adc
push
stos
jmp
jo
push
lcall
cmp
push
sub
call
mov
and
leave
dec
repnz
adc
mov
adc
mov
mov
sub
lods
sub
and
repnz
arpl
aas
mov
daa
jo
push
mov
jmp
mov
and
and
add
mov
test
jae
sub
sbb
in
cwtl
mov
cs
lock
mov
lcall
sub
cmp
sub
pop
xor
movsl
dec
ret
sbb
mov
incl
test
xor
sub
and
jb
outsb
gs
jp
pop
test
mov
push
cld
in
push
or
push
std
enter
dec
inc
push
aam
out
scas
test
xor
jg
push
lock
loopne
xchg
loope
adc
sbb
inc
pop
jns
sbb
sub
mov
dec
movsb
mull
sbb
dec
adc
jmp
push
push
sub
incl
outsl
mov
mov
sub
xorl
xchg
ficoms
inc
call
ret
mov
pop
nop
mov
mov
ret
fdivrp
incl
mov
addr16
stos
cwtl
testb
mov
cld
call
sub
repz
adc
mov
dec
jmp
fbld
push
xor
nop
push
mov
dec
jl
pop
lcall
jb
mov
xor
adc
pop
adc
xchg
jmp
incl
bound
xor
xchg
or
stos
dec
aaa
cld
ljmp
xor
push
sub
lea
lcall
loope
divb
and
imul
incl
enter
dec
mov
fs
mov
clc
xchg
pop
movsl
push
aas
fildll
jmp
mov
push
add
push
jns
ffree
jmp
xchg
mov
mov
jb
mov
mov
xchg
std
incl
cmpsb
fwait
sti
pop
mov
pop
and
inc
inc
cmpsb
fistl
mov
cmp
testb
pushl
dec
xor
jmp
jg
adc
push
lret
cwtl
pusha
faddp
or
pop
push
std
push
mov
in
add
jbe
call
fisubs
sub
pop
dec
lretw
jl
inc
dec
adc
mov
sub
push
push
cli
imul
pop
int
pop
jmp
jmp
je
adc
pop
dec
rcll
adc
lret
or
arpl
xor
mov
loop
testb
jo
dec
pop
jmp
call
sub
pop
mov
jno
bound
fbstp
mov
bound
push
rcl
lcall
xorb
shll
mov
jb
mov
mov
repz
cmp
dec
test
jp
test
add
pop
sub
push
js
shll
mov
sar
ljmp
xchg
xor
cwtl
push
or
insb
xchg
push
mov
out
dec
jno
pop
test
and
or
pop
aad
pusha
daa
fs
imul
test
ljmp
ss
sbb
adc
pop
fimuls
lods
repnz
jb
pop
inc
iret
arpl
mov
test
fcmovnbe
mov
inc
xor
mov
pop
xchg
push
sbb
je
mov
sub
icebp
cmp
mov
adc
jno
xor
jae
test
jno
pop
cmc
ljmp
adc
lods
dec
jae
push
insb
clc
adc
test
inc
and
pushl
sahf
sarb
mov
push
je
mov
mov
cmp
sbb
or
daa
or
cwtl
jnp
add
jb
lahf
cli
cltd
or
mov
mov
in
incl
mov
or
adc
pop
pop
sar
xor
inc
sbb
nop
rorl
adc
clc
xor
out
push
xchg
cmp
add
lret
lret
cltd
add
cmp
jle
decl
xchg
inc
dec
sar
mov
xor
mov
shr
roll
cmc
jmp
push
xchg
fs
inc
xor
cs
or
pop
push
adc
xchg
fcomi
sub
shr
lcall
or
in
dec
mov
mov
stos
cmc
and
or
mov
ljmp
insb
inc
dec
push
test
in
das
xrelease
dec
fimuls
xor
test
adc
jno
mov
incl
ljmp
mov
jecxz
scas
pop
inc
stc
in
sub
mov
icebp
cmp
lcall
mov
pop
in
or
xchg
mov
sub
sahf
jb
call
out
cmpsb
jmp
inc
dec
add
ficomps
test
xchg
insb
scas
gs
insb
add
lock
lcall
mov
loop
adcl
hlt
call
insl
dec
in
sbb
in
push
aaa
aaa
jge
pop
mov
pop
dec
adc
out
bound
pop
sti
ljmp
adc
clc
mov
shrb
mov
push
push
pop
iret
jne
sub
lds
sub
jg
clc
jno
lods
xor
sbb
insb
mov
cmp
push
xor
add
mov
faddp
imul
and
cmpl
mov
repz
dec
jl
adc
test
mov
xchg
mov
imul
xchg
insl
clc
jmp
das
mov
shlb
scas
mov
mov
orl
or
fildll
enter
sub
out
or
pop
ljmp
ss
in
cs
es
in
movsb
fldcw
insb
jno
mov
in
mov
repz
daa
icebp
mov
push
es
hlt
int3
fdivrl
sub
cltd
sahf
mov
call
arpl
push
cmc
pusha
out
je
lea
outsb
jo
cmc
xchg
aad
cli
outsl
sbb
decl
rcr
cltd
mov
call
inc
adc
divl
stc
mov
add
repnz
mov
add
xchg
sbb
loop
jbe
fcomip
ljmp
stc
xchg
in
call
aad
xchg
test
mov
rcrl
inc
pop
adc
mov
hlt
iret
jae
scas
out
je
jg
hlt
aaa
out
xor
inc
fcmovbe
daa
mov
mov
jg
xlat
stos
mov
pop
xchg
push
sbb
dec
cs
gs
out
movsb
je
incl
pop
mov
fildl
xor
jns
in
mov
sbb
ljmp
les
xchg
nop
ret
pop
jbe
rcrb
push
dec
jmp
les
pop
sar
or
inc
and
outsb
mov
inc
mov
mov
lcall
out
sub
shlb
pusha
adc
lods
idivb
and
in
inc
push
jb
outsl
jle
mov
mov
mov
punpcklwd
lcall
lahf
je
nop
fidivs
loop
in
inc
mov
incl
enter
jbe
xlat
out
insl
popf
sbb
push
std
sub
jge
ja
pusha
jae
pop
push
pop
xor
lea
mov
sar
jg
ja
out
xor
test
lea
test
or
pushl
xorb
inc
adc
adc
out
xor
add
jmp
xchg
movsb
jge
outsb
or
inc
dec
rcll
clc
pop
inc
ret
ret
xor
dec
xchg
cmp
incl
mov
sbb
aas
pop
or
clc
xor
pop
cmp
lcall
test
fs
mov
dec
pop
jecxz
lret
lods
xor
aad
movsl
pop
repz
mov
fldt
sbb
test
out
or
shlb
repz
mov
ljmp
xor
add
icebp
std
jbe
push
jnp
movsl
inc
add
orl
jmp
xor
add
jg
pop
je
arpl
imul
mov
ja
mov
dec
inc
mov
mul
fcom
int
mov
inc
icebp
jg
call
lods
cmp
sub
in
and
xchg
adc
decl
sbb
pusha
out
inc
push
inc
mov
jbe
je
jg
xchg
das
icebp
add
jle
jmp
dec
sbb
int3
aaa
int
xor
xchg
and
xchg
or
scas
lods
pop
test
mov
decl
xlat
ret
int
lret
xor
pusha
pusha
cvtdq2ps
jo
mov
adc
inc
adcl
lcall
fwait
xor
std
dec
sub
inc
dec
mov
js
add
stc
decl
push
clc
or
int3
loop
incb
xlat
push
cwtl
pop
ss
mov
jns
repz
decl
js
std
in
push
adc
push
aaa
and
xor
inc
jecxz
push
test
dec
inc
mov
repnz
inc
fistps
lret
aad
sub
testl
push
sahf
jge
xor
cmp
dec
lods
jge
fsubs
push
fildll
call
sbb
mov
xor
mov
jb
sub
rorb
sahf
or
mov
xlat
pop
ljmp
mov
mov
insb
aad
pop
adc
jnp
aaa
incl
push
sub
xchg
sbb
sahf
mov
stos
insl
loopne
loopne
and
lock
sti
lods
clc
decl
cmpsb
sub
inc
test
adc
xchg
pusha
mov
in
cmpsl
decl
add
lods
add
bound
int3
lods
jnp
in
fwait
decb
mov
lret
pop
cmpsb
mov
xor
scas
movsb
test
pop
push
popa
xchg
out
loope
cmc
jg
push
cmpsl
pop
insb
sub
shrl
pop
data16
cltd
mov
stc
lods
outsl
mov
ljmp
call
movsb
push
js
cmpsb
xchg
dec
add
scas
clc
mov
into
pop
add
jmp
or
cmc
cli
mov
or
clc
pushf
test
mov
in
test
loope
cli
int
xchg
pop
adc
and
nopl
nop
sub
sti
push
push
clc
jg
lods
or
scas
and
ds
jnp
rcll
mov
xor
pop
mov
scas
mov
lret
lods
mov
xchg
mov
mov
add
mov
cmp
lods
cmpl
jg
pop
outsl
xor
call
xchg
int3
movsl
repnz
mov
sti
loop
fwait
jp
pop
shll
cs
scas
xchg
outsl
xchg
jge
push
out
fisttps
xchg
or
cwtl
fsub
pushf
dec
ljmp
sbb
sarl
sti
lock
mov
inc
jg
fdivrl
xor
push
mov
mov
xor
sahf
sub
scas
sbb
jmp
pushf
push
push
adc
jnp
addr16
and
aam
fucomip
jecxz
push
mov
push
fwait
mov
cmp
sbb
incl
fdivs
pop
xor
sub
ss
sbb
and
notl
cmpsb
cmp
mov
lea
pop
nop
dec
movsbl
ljmp
daa
test
sahf
insl
and
scas
sub
cmc
push
mov
lods
outsl
mov
ss
mov
mov
push
xabort
push
and
ljmp
push
cli
sbb
cmpsb
push
loopne
clc
lea
aad
fistl
cmp
mov
call
ljmp
lods
cmpsb
mov
add
orl
adc
dec
mov
adc
mov
adc
pop
inc
sar
call
je
push
sub
test
fcmovnu
andl
decl
or
fcompl
shrl
push
push
incl
sbb
xor
daa
inc
pop
push
std
lods
in
scas
add
adc
dec
add
cmpb
dec
cmp
decl
mov
test
int3
jae
ret
ds
popf
inc
xchg
fisttps
pushl
sti
inc
mov
jo
fdivs
xor
dec
mov
fistps
mov
mov
adc
inc
stos
jge
mov
jl
push
push
mov
fcomps
mov
insl
out
scas
jbe
in
nop
jge
jnp
xchg
outsb
cwtl
inc
sbb
fildl
xchg
dec
clc
test
mov
inc
lcall
mov
popa
pushl
aas
jno
inc
push
push
or
jno
push
dec
inc
lods
mov
xchg
push
pop
daa
mov
add
add
mov
negb
faddl
in
add
pop
mov
xor
xchg
in
out
pushf
sub
cwtl
idivl
loop
lcall
cmp
pop
and
xchg
in
push
sti
mov
pop
int
sub
divb
cmp
rcrl
stc
sub
subb
jmp
jmp
je
mov
scas
dec
es
fiaddl
cmp
sbb
ds
lock
inc
jbe
jbe
das
push
sub
cmp
mov
dec
lahf
inc
fwait
push
clc
inc
sti
or
in
lods
lds
aam
sub
stos
out
and
pop
incl
mov
or
mov
fimuls
push
sub
inc
sbb
adc
and
sbb
mov
divb
mull
pop
and
jg
and
pop
fistps
scas
fwait
push
stos
adc
orl
cmpsb
movsl
sub
xchg
push
or
gs
jb
call
loopne
and
test
jmp
cmpsb
pop
pusha
orl
das
dec
mov
pop
jmp
sub
aam
xor
cld
adc
add
pop
cli
jmp
fisubl
jmp
cmp
icebp
xor
std
or
stc
shrb
xchg
xor
jg
mov
fcomi
mov
shrl
xchg
add
and
xor
or
out
mov
mov
xchg
in
jmp
push
inc
xchg
test
add
jnp
push
aad
cmp
push
mov
cmpsl
sbb
inc
paddsw
sbb
icebp
decl
adc
aas
dec
xor
incl
jg
movsl
pushf
mov
push
pusha
mov
adc
jne
cmp
call
lock
cmp
jl
xchg
lock
stos
pushf
adc
lods
jae
pop
push
cmp
sahf
lods
cmp
loop
mov
addr16
push
pop
or
mov
out
test
mov
lcall
mov
je
inc
mov
cmp
dec
adc
or
call
mov
jp
out
imul
dec
movsl
and
mov
add
decl
sbb
lods
jb
rclw
mov
cmc
incb
jo
sub
jb
decl
fwait
mov
mov
cs
cmpsb
outsb
ficomps
stos
scas
xchg
jl
mov
fcmovu
xor
outsb
stos
jb
popa
scas
pop
sbb
mov
pop
mov
ljmp
jbe
or
dec
stos
stos
sar
stos
jge
mov
outsl
pushf
or
outsl
je
sub
push
sub
add
sub
mov
push
sbb
imul
mov
jge
inc
lods
push
push
out
jbe
jno
and
lea
out
push
add
ret
dec
lods
jge
jae
nop
ds
scas
pushl
mov
xchg
mov
movsb
adc
bswap
incl
daa
jae
stos
cmpsl
jae
inc
mov
and
push
xchg
xor
xchg
aaa
repz
jge
xor
jg
or
push
xor
ljmp
movsb
mov
test
sbb
pushf
dec
movsb
sbb
jnp
mov
push
push
fildll
ljmp
movsl
xchg
mov
sub
lcall
push
dec
pop
ja
cltd
fildll
pushl
push
jg
pop
sbb
jg
clc
mov
hlt
push
stos
or
cli
incl
jecxz
das
sub
mov
jnp
sahf
mov
movsl
push
push
es
out
cmp
dec
std
cld
pop
sbb
mov
shlb
out
push
mov
incl
call
clc
fcmovne
mov
xchg
adc
enter
mov
adc
in
daa
inc
dec
cmpb
or
mov
imulb
sbb
or
call
mov
adc
dec
jl
add
push
dec
int
dec
ljmp
mov
fcos
adc
adc
pop
test
loopne
decl
sbbl
xchg
add
out
push
int3
fcmovne
dec
lods
rorl
pop
xor
xchg
or
les
xor
outsl
clc
ja
mov
adcb
loopne
push
in
and
pushl
cli
sub
subb
sbb
je
jg
push
cwtl
leave
jno
jg
aam
mov
ret
add
xor
mov
sbb
or
mov
aaa
push
je
loopne
cld
xorl
jmp
das
inc
pushl
cmp
jnp
ficompl
iret
and
mov
dec
add
imul
push
ljmp
shlb
ficompl
fcmovb
xorb
adc
mov
lcall
cmp
sbb
cmp
pushf
leave
xchg
hlt
sub
sbb
out
push
mov
incl
sub
push
mov
jo
mov
in
and
jecxz
mov
mov
subb
adc
shrb
sarl
fisubl
int
inc
rorb
ljmp
incl
sbb
cmp
fisubs
scas
xlat
xchg
fcmovb
cmp
pusha
fsubrl
mov
ds
incb
pop
pop
fsubl
dec
loope
xlat
xchg
in
popf
jae
gs
test
adc
add
aaa
pop
loope
pop
add
pushl
out
loop
ds
adc
ja
push
dec
or
mov
bound
insb
mov
dec
xchg
mov
xchg
inc
jg
stc
jne
pop
test
dec
push
lahf
mov
fisttps
negb
push
adc
push
rcl
adc
call
xchg
pop
rcl
mov
rcrb
and
mov
jmp
pop
pop
mov
ljmp
sub
ret
out
jg
test
jp
dec
in
adc
or
pop
fsubrl
ljmp
sub
xor
mov
sub
add
ret
fmuls
out
jg
popa
jo
popf
mov
sbb
or
dec
lcall
rorl
cmp
repz
addr16
enter
mov
push
sub
lahf
lret
xor
aam
je
scas
cld
decl
loop
pop
xchg
pop
imul
fimuls
mov
push
mov
or
call
test
sbb
mov
in
cmpsb
xlat
lret
or
inc
fnstcw
push
pushl
loope
sbb
push
xchg
push
les
sahf
aaa
or
pusha
shr
lret
fiadds
ldmxcsr
fmuls
inc
loope
ljmp
sbb
orl
push
leave
repnz
ret
stos
decl
fimull
test
push
test
adc
std
in
mov
decl
out
or
movsl
rclb
fdivp
mov
fwait
mov
ds
xchg
xor
int3
mov
mov
sub
push
lods
ror
nop
fcmovnb
mov
ror
outsb
cmc
rorl
sub
decl
mov
out
out
or
jae
adc
aas
xor
in
insb
test
outsb
scas
or
sub
call
xor
pop
xchg
cmp
mov
data16
ror
das
scas
mov
je
mov
mov
jae
pusha
and
lods
cmp
sbbl
mov
incl
fwait
xorl
rol
scas
add
mov
and
movsl
aas
cld
incl
pop
scas
or
out
pop
cmpsl
pushf
out
mov
insb
mov
inc
push
push
int
in
decl
icebp
or
mov
incl
fisttpl
fbld
cmpsb
dec
in
xchg
in
aam
fdivrl
ret
movsl
or
popf
loopne
xchg
dec
add
jno
out
clc
push
jns
in
aad
fcomip
inc
repnz
out
mov
das
repz
ljmp
xchg
or
cmpsl
call
fwait
in
mov
leave
pop
xchg
les
xor
int3
dec
jmp
scas
sarl
into
and
inc
stos
cmp
movsb
jb
adc
scas
sbb
call
fnsave
and
in
sbb
sarl
xor
mov
cmp
decl
lock
cwtl
fisubs
out
mov
mov
xchg
xchg
test
sbb
outsb
lahf
insl
jnp
lods
cmp
push
std
adc
jo
aam
insb
mov
or
ljmp
cli
jmp
dec
rcrb
movsb
jae
add
insb
out
mov
jge
jae
xchg
out
test
pop
icebp
fistpll
sub
mov
lods
cli
xchg
sti
push
lcall
push
lcall
pop
ficompl
inc
gs
xchg
or
test
cmp
mov
mov
repz
pop
int
shll
cmpsb
sub
call
lret
mov
sub
xchg
sarb
aad
push
in
push
pop
pop
dec
cli
xor
cmpsl
mov
mov
dec
subb
jg
aad
cmp
sub
xor
enter
ja
lcall
push
cld
es
dec
fdivrl
fimull
pop
in
push
pop
incl
orb
add
rcl
adc
jo
sar
pop
es
pop
pop
stos
jg
push
repz
repz
fcmovb
repz
rep
add
sbb
sbb
ficompl
cmp
test
inc
pop
lods
popa
inc
shlb
into
call
repz
xchg
mov
jp
clc
daa
repnz
in
clc
pop
adc
inc
cmp
jle
jge
popa
pop
dec
push
sub
out
pop
int3
mov
jg
hlt
sti
mov
xor
mov
dec
insb
es
xchg
rolb
incl
ja
out
mov
xlat
mov
xor
jle
lods
pop
jae
cmp
mov
dec
pop
pusha
int
sbb
test
pop
sarb
mov
dec
or
lds
incl
jnp
pushf
adc
xchg
int
sar
pop
imul
mov
out
cs
ljmp
jnp
add
pushl
std
mov
stc
mov
jb
ja
pop
inc
jae
mov
jae
pop
and
xchg
pop
push
push
jmp
dec
fsts
les
fbstp
call
lret
pop
sub
lcall
fsubl
adc
add
xchg
scas
nop
adc
decl
imul
push
in
cmp
cmp
lcall
xchg
stos
dec
lock
or
lret
and
lock
rcll
sub
movsb
call
pop
movsb
int
movsb
stos
out
aad
adc
mov
lock
lret
fmuls
pop
lock
pop
xor
out
insl
mov
push
inc
mov
xor
xchg
push
dec
frstor
in
jne
pop
cmpsb
adc
popa
fildl
outsb
mov
jmp
cmpsb
roll
js
xchg
mov
shll
shl
adc
decl
scas
xor
or
adc
in
xchg
sub
jle
out
pop
fiaddl
imul
addr16
adc
mov
inc
pop
test
data16
movsb
xchg
add
sahf
xor
orl
jp
inc
es
push
push
in
mov
jg
mov
push
decl
pop
mov
jne
dec
push
push
or
push
push
es
add
lret
jmp
lods
jb
dec
repz
imul
das
mov
or
sti
and
jecxz
or
mov
push
or
xchg
mov
or
test
fdivr
pop
in
shll
jns
mov
jbe
or
aas
push
fbstp
adc
fidivrl
mov
orb
call
inc
jle
jge
pop
sub
dec
pop
push
adc
shrb
adc
ljmp
decl
pop
sahf
mov
mov
cmp
incl
adc
rorb
mov
ficomps
sbbl
je
hlt
mov
shll
xchg
lods
push
push
jmp
icebp
jl
xlat
orb
shll
lcall
aam
push
inc
adc
lods
test
sbb
mov
dec
xchg
mov
push
jns
jmp
adc
inc
or
arpl
sti
cmp
enter
mov
xor
ficompl
jg
call
les
jno
daa
outsl
cmp
std
out
or
ret
sub
das
sbbb
xor
pop
bnd
push
push
add
fcomip
loope
and
xor
cld
sbb
daa
push
or
pop
xchg
test
add
cli
mov
jmp
jo
shlb
adc
int
adc
push
jns
aam
adc
es
push
filds
or
ss
sti
insb
adc
loop
add
std
incl
sbb
add
in
js
enter
push
fmul
mov
mov
cmpsb
lds
scas
xchg
daa
ja
sbb
sub
mov
xor
std
enter
pushl
sbb
push
xor
pop
and
fisttpll
push
jo
rorb
call
pop
jno
or
push
fldt
pushf
fdivrp
call
cmp
pusha
lea
int
rcrl
push
repz
push
inc
mov
shlb
decl
inc
ds
sbb
inc
adc
fistl
or
xchg
fyl2xp1
call
decl
testl
or
out
push
jp
rorb
push
sbb
call
xor
mov
mov
mov
cmp
shrb
push
in
mov
jg
incl
leave
push
fidivrl
ror
xchg
sub
adc
cli
mov
fs
sti
adc
sbb
push
add
iret
out
mov
movsb
add
insl
loop
dec
jge
xchg
jb
shr
jno
rcl
test
push
mov
mov
cmpsl
dec
ljmp
decb
scas
push
dec
cwtl
mov
xchg
in
lahf
push
sbb
push
test
cld
das
pushl
xchg
add
xor
sub
and
pusha
adc
sbb
push
dec
dec
pop
push
pop
jns
add
dec
dec
pop
mov
fisttps
xor
pop
shll
xor
add
cmpl
rolb
jg
fisubrl
dec
out
sbb
inc
adc
add
outsb
pop
and
in
ljmp
shrb
aad
sbb
mov
call
sub
in
int3
shll
ss
ds
lods
push
and
int3
sbb
xchg
out
push
sub
repnz
jg
mov
les
lret
cmp
hlt
ds
dec
xor
call
jle
aaa
adc
mov
cmp
mov
mov
dec
addr16
lret
dec
xchg
push
inc
sti
nop
mov
fnstsw
mov
or
scas
dec
cltd
push
aad
inc
pop
sbb
add
lahf
push
push
dec
jns
lcall
xor
jo
mov
dec
in
in
das
adc
test
push
in
mov
cmpsl
sbb
test
popa
outsb
std
push
xor
stos
lods
dec
nop
call
les
fsubrs
mov
add
or
push
dec
fnsave
sub
sbb
popa
jmp
ljmp
cmp
std
push
mov
and
rcr
sbb
lcall
inc
pop
call
xlat
jp
cmp
sbb
idivl
stos
stc
pushf
stc
adc
inc
out
call
cmc
xchg
ds
into
les
mov
lds
jg
add
sar
in
cmpb
or
jg
sub
sbb
mov
push
test
sti
mov
out
adc
pop
jns
cwtl
sar
and
push
ret
incl
fcompl
push
mov
mov
cld
ud0
pushl
cltd
add
pusha
fistpll
add
adc
xor
fdivrs
stc
dec
call
lods
popf
push
xchg
push
andb
outsl
push
push
pushf
cld
lods
lods
bound
pusha
cwtl
incl
push
es
cltd
push
pop
outsl
fistl
fwait
sbb
aaa
adc
js
fcmovnb
pop
test
cltd
xor
pop
cmc
call
repz
dec
sub
iret
jge
jne
es
in
fistpll
cmp
loop
or
mov
mov
xchg
movsb
push
lods
adc
jl
ret
add
fildll
hlt
fisubl
das
repz
rcr
in
jmp
outsl
sti
cmp
or
jg
push
dec
out
fdivr
shrl
or
or
out
cmpsb
icebp
push
inc
std
je
push
daa
xchg
cmc
xor
push
mov
push
push
decl
imul
cmp
bswap
aad
lods
ret
pop
movsb
adc
pusha
call
push
dec
divl
cmpsl
mov
push
lcall
inc
dec
lcall
sbb
lea
fildl
fsub
inc
xchg
mov
gs
add
push
fcomip
fisttpl
and
push
jnp
xor
xor
mov
call
xor
pop
cld
movsb
arpl
xchg
dec
insb
push
mov
aad
push
cwtl
pop
pushl
nop
mov
fldt
xchg
mov
ljmp
repz
xlat
repz
mov
jg
in
mov
mov
xchg
sub
push
sbb
ret
in
insb
clc
ljmp
faddl
xor
fldt
nop
xchg
out
loope
pop
add
fldt
mov
inc
shrb
dec
rcrl
cmp
sub
dec
sub
lods
rolb
inc
enter
je
mov
das
mov
fldt
push
add
js
push
or
adc
push
repz
and
fmull
outsb
dec
cld
inc
shr
std
jmp
mov
jae
xchg
sub
ljmp
shl
into
mov
adc
test
out
insb
fiaddl
or
and
xchg
push
or
leave
mov
jb
cwtl
js
push
lret
sub
xor
pushl
subl
xor
sbb
outsb
fisubrl
negl
adc
fs
ljmp
push
stos
xchg
loope
sub
dec
mov
jno
pop
inc
sbb
mov
decl
hlt
xor
dec
mov
dec
xchg
mov
jp
adc
push
mov
pop
cmc
icebp
scas
cmp
data16
adc
loopne
push
and
add
mov
call
and
pop
stc
sub
inc
into
rclb
pop
mov
push
inc
pop
mov
ret
cmpsl
lods
push
inc
orl
data16
imul
int3
dec
subb
or
inc
nop
inc
jae
mov
mov
inc
inc
jo
xchg
dec
push
push
shrb
aaa
add
jb
jne
mov
inc
cmc
push
xorps
popa
lods
cmp
jl
push
xlat
dec
pop
push
lods
push
dec
push
sbb
je
xchg
push
std
lcall
and
jl
mov
lret
incl
dec
jl
mov
cld
pop
push
add
dec
loop,pn
loopne
inc
fisttpll
clc
call
add
add
pop
fsubrs
clc
pop
and
outsl
decl
mov
aam
cld
xlat
push
xor
lods
fsub
sarb
add
out
sub
or
lret
add
mov
out
lret
repnz
call
clc
inc
inc
data16
inc
out
test
dec
inc
push
testl
add
cmp
adc
add
lcall
dec
mov
push
inc
test
cmp
dec
dec
out
mov
pop
inc
xor
je
cmpsb
push
in
lret
lods
test
sarb
add
cmpsl
pop
dec
jmp
aad
mov
scas
les
or
jge
adc
mov
add
jnp
jle
inc
mov
imul
clc
inc
lods
sub
inc
aad
outsl
mov
mov
sub
inc
dec
int3
xchg
sbb
jnp
dec
fstpl
push
lret
in
cmpsb
push
cld
decl
hlt
add
shlb
xchg
into
daa
cmp
inc
scas
inc
lock
xor
sbb
pushl
xchg
inc
test
test
lods
les
clc
sbb
sub
popf
dec
sbb
mov
lcall
xchg
dec
push
jne
pop
mov
cmpsb
sbb
lahf
je
mov
aam
rcrb
jmp
sub
mov
test
xchg
std
mov
pushl
jae
les
xor
addr16
mov
ja
rcl
sub
sbb
dec
mov
repz
mov
adc
and
mov
je
mov
mov
clc
pushl
xorl
sbb
cli
push
mov
icebp
cmp
mov
pushl
roll
ja
push
lea
sbb
xchg
rorl
rcl
pop
mov
outsl
jle
ret
and
push
fmul
sbb
rcll
sbb
mov
xor
rclb
fucom
dec
les
out
ret
sbb
dec
pop
sub
int3
out
lock
sbb
enter
daa
inc
jecxz
les
loopne
push
movsl
sbb
pop
push
xchg
push
pusha
or
or
dec
aas
add
sbb
lcall
adc
rorb
dec
adc
and
cmp
cmpsl
add
test
adcb
movsb
fistl
jge,pn
pop
push
lock
jmp
cmpsl
mov
jmp
and
mov
inc
xchg
adc
enter
jg
and
or
sub
mov
popa
adc
jb
xchg
lcall
decl
rclb
repz
enter
push
push
aad
movb
adc
mov
stos
jg
lcall
push
pop
adc
xor
mov
movsb
push
leave
ds
call
pop
jns
enter
dec
cmp
push
push
jmp
xor
dec
rolb
sbb
outsl
jmp
fists
into
jae
shrb
mov
jne
scas
push
jnp
ret
jae
addr16
adc
ljmp
mov
inc
add
movl
aad
inc
aad
mov
inc
gs
jg
mov
clc
bound
adc
and
xrelease
or
popa
mov
cmp
jg
adc
pop
cld
jbe
es
daa
add
lock
es
call
into
sub
divl
xchg
jno
adc
in
mov
std
dec
sbb
sub
pop
arpl
xor
xor
popf
jge
jp
cmp
decl
jecxz
mov
lcall
scas
dec
mov
add
mov
inc
mov
inc
adc
rcll
fsub
repnz
xor
cwtl
lds
insb
xchg
dec
insl
mov
inc
inc
mov
mov
sub
lcall
cld
xor
in
into
shll
pop
and
pop
sub
and
add
xor
repnz
lcall
test
std
cmc
mov
xchg
pop
cmp
and
je
into
fcompl
fwait
pushl
fcom
test
push
mov
inc
pop
nop
or
xchg
mov
and
cmp
pushl
cld
lea
push
pop
xchg
mov
inc
mov
in
inc
adc
in
fsubs
adc
sub
inc
and
insb
push
xchg
fdivp
xlat
mov
rclb
sbb
xchg
rcl
call
repz
arpl
lahf
and
sarl
test
jmp
xor
add
push
push
sbb
sub
notb
fs
jo
movsl
ds
mov
jmp
xor
jae
inc
push
repnz
fxch
dec
and
mov
push
pop
xor
clc
dec
pop
mov
xor
flds
push
dec
es
bound
aaa
pop
mov
pop
lahf
lcall
add
out
xchg
dec
shl
push
jl
jno
lock
arpl
out
push
and
arpl
decl
iret
popf
pavgb
or
sbb
lret
push
xchg
sbb
lcall
dec
xlat
xchg
dec
or
jb
movsl
jb
or
scas
mov
xor
aad
inc
pop
enter
ljmp
sub
push
xchg
les
imul
mov
cmpsl
rcll
pop
lock
pop
jo
pop
inc
out
dec
push
adc
out
mov
inc
push
aam
mov
incl
fiaddl
sti
mov
inc
roll
fbstp
jbe
inc
add
insb
push
call
ds
add
outsb
cmpsb
adc
shll
out
lods
mov
cltd
dec
lret
mov
mov
call
out
push
and
add
xor
mov
pop
pop
mov
or
push
mov
mov
push
jb
push
jno
in
push
std
mov
in
outsl
decl
fwait
inc
out
mov
mov
rorl
xorl
jle
outsl
sbb
imul
test
call
lret
mov
lret
stos
pop
or
mov
ror
sbb
jnp
ljmp
jb
inc
lds
pop
or
fildll
jno
mov
xchg
in
adc
mov
jp
xchg
jns
mov
dec
mov
call
xor
mov
fidivrl
fnstenv
out
dec
add
mov
gs
repz
lcall
cmp
outsl
loope
add
in
lret
std
xlat
xor
mov
mov
fildl
ret
lret
inc
arpl
cmp
cld
incl
int3
xlat
ret
push
aaa
mov
adc
repz
imul
or
mov
pop
fisubrs
sbb
stos
in
mov
call
ljmp
jecxz
sti
lods
int
push
cmp
aam
lock
ljmp
bound
std
neg
mov
movsl
xchg
mov
jmp
cmp
inc
inc
and
ljmp
pop
or
loopne
in
nop
xor
xchg
subb
mov
push
adc
sar
push
pusha
lea
outsb
jae
push
inc
xchg
add
std
sbb
cli
jns
jp
scas
fwait
xchg
mov
fisubrs
aad
arpl
push
decl
fidivl
cmp
jno
and
repz
sub
mov
insl
add
call
pop
jge
fwait
push
add
inc
loop
into
loop
mov
mov
adcl
push
aas
stos
ljmp
dec
inc
cmpsb
pop
cmpsl
lods
mov
test
sbb
inc
xchg
or
inc
adc
pop
ret
ljmp
cltd
arpl
jg
push
xor
ret
fnstcw
sub
cltd
pop
and
das
cmp
or
cmpsb
vrcpps
je
out
and
adc
cmp
add
jl
clc
and
jnp
lcall
lock
inc
clc
xchg
sub
jp
popa
sysret
sahf
data16
js
movl
push
push
mov
scas
inc
outsl
int3
inc
in
dec
pop
inc
add
push
sub
inc
xchg
sub
cmp
aad
std
cltd
mov
int
cwtl
rcll
adc
pop
fwait
aad
or
lods
ljmp
xchg
push
mov
stos
push
sub
cmpsb
mov
int
lcall
sub
stc
mov
rcrb
pop
sub
int
shrb
push
nop
inc
sub
mov
ljmp
nop
inc
dec
data16
inc
xchg
int3
clc
jmp
adc
pushl
adc
push
ret
xchg
rol
adc
or
pop
int3
pop
push
push
jmp
mov
imul
test
lods
mov
in
cmp
inc
lods
and
push
mov
sub
push
xor
adc
dec
cs
cmc
fnstsw
sub
shrb
sub
mov
js
mov
jg
call
int3
push
mov
adc
jae
inc
mov
dec
lcall
sub
inc
inc
mov
cmpsb
int
repz
push
pop
jb
int3
jle
pushl
arpl
ds
jne
xlat
adcl
jp
int
repz
jg
push
push
adc
pop
pop
xchg
xchg
int3
mov
popf
push
int
sbb
mov
push
std
fsubrp
std
xor
push
sbb
sbb
mull
xor
mov
sbb
inc
cmp
rcrl
cmp
jmp
jp
aad
in
decb
adc
movsb
jmp
and
adc
es
ljmp
xchg
pop
sbb
lods
mov
lea
cli
dec
xor
jmp
ljmp
popf
adc
stos
cmpsb
jo
orl
rclb
enter
icebp
outsl
push
jae
shl
aas
xor
movlps
incl
fnstsw
sbb
xor
ficoml
movsb
sbb
repz
incl
fstpl
sarl
xor
lea
sub
push
cmp
into
lea
movsb
lds
push
xor
mov
push
mov
ds
dec
mov
in
dec
or
lcall
in
or
jge
cld
adc
lcall
fisttpl
xor
sbb
adc
push
cli
xchg
push
jbe
test
mov
iret
test
scas
idiv
decl
repz
xchg
push
jecxz
dec
mov
lret
and
pop
pop
xor
mov
push
frstor
xchg
ds
and
adcb
imul
pop
mov
pushl
adc
cmp
fcomp
jae
xor
mov
cs
adc
sbb
dec
pusha
dec
in
xor
rolb
inc
lock
std
jg
ja
inc
jo
call
inc
mov
enter
iret
cmp
xchg
sbb
popa
mov
or
pushf
add
push
or
es
test
lods
imul
das
sahf
mov
andl
xchg
inc
jae
xchg
mov
movsb
push
shll
mov
lcall
pop
pusha
push
mov
icebp
fbstp
xchg
in
fs
fstpl
ret
loope
mov
fistps
into
jl
loope
xchg
call
inc
mov
repz
cmp
sbb
enter
mov
fmul
jl
dec
sub
lret
inc
sbb
lcall
mull
xor
pop
shrb
xchg
out
push
dec
lcall
and
mov
adc
push
jae
fcomip
incl
dec
rolb
repz
xchg
inc
enter
xor
xchg
and
out
xor
xor
fcomp
xor
cmp
ljmp
stos
dec
and
sbb
cwtl
jb
pushf
repnz
stc
int3
push
xchg
stos
addr16
jmp
jp
lcall
je
xor
loope
jne
in
jno
dec
cmp
inc
inc
cld
jmp
enter
mov
ret
lock
cmc
jg
sbb
loopne
dec
sahf
rclb
or
lds
mov
icebp
jge
sbb
push
lock
ljmp
pop
enter
inc
fldl
jne
stc
xchg
addr16
stos
sbb
push
cmp
fnsave
inc
rol
inc
mov
pop
xchg
decl
xor
test
or
sub
imul
pop
adc
cli
jge
xchg
jnp
push
mov
lcall
callw
call
leave
jp
xchg
inc
xlat
testl
mov
movsl
pop
xchg
leave
ja
mov
xchg
adc
clc
not
cmpsb
jne
push
pop
jae
adc
out
cmpsb
push
pop
pop
or
dec
jo
xlat
inc
sahf
or
dec
cmp
aas
repz
fists
push
or
cmp
outsl
and
incl
test
dec
inc
mov
mov
or
es
cmp
jl
push
rolb
pop
jne
leave
addr16
xchg
inc
sbb
movl
dec
mov
aad
lods
mov
stos
jne
jl
xchg
xchg
jo
adc
jg
pop
and
jae
mov
sbb
clc
ret
loopne
xchg
inc
sub
ja
call
lret
arpl
pop
test
fstl
and
jnp
inc
call
push
stos
sahf
test
xchg
sbb
stc
sub
xor
xchg
sub
adc
mov
sub
jecxz
mov
or
les
xor
push
sbb
sub
lcall
or
mov
lret
and
call
mov
aad
decl
fs
and
push
lcall
xchg
mov
inc
sub
jmp
push
clc
enter
add
inc
xor
inc
add
xlat
lret
sub
xor
mov
push
in
push
pop
pop
or
mov
fnstenv
adc
lods
sub
inc
mov
xor
test
mov
lcall
and
dec
sub
inc
jge
push
push
jle
cmc
mov
les
push
xor
decl
pop
mov
fldl
jne
mov
loopne
outsb
pop
dec
mov
or
clc
jg
cmpsb
push
and
jle
lcall
stc
mov
push
repz
xchg
xchg
and
xchg
outsl
ss
cwtl
xor
enter
inc
ljmp
cld
ja
les
fidivrl
fldt
lds
pushf
lret
fdivrl
xorb
jmp
sub
mov
push
out
dec
mov
or
sub
addr16
and
ljmp
loopne
sar
incl
inc
push
xchg
mov
out
andb
nop
ret
iret
inc
inc
icebp
push
cs
into
dec
sar
loopne
jg
xchg
dec
and
int
sub
cmp
incl
cmpsl
push
loop
movsl
xor
mov
andl
mov
inc
stos
mov
clc
xchg
aam
ds
push
cmp
jnp
fisttps
ret
test
mov
mov
inc
add
mov
repnz
adc
inc
cmp
sub
pop
push
adc
lock
push
pop
fnstcw
pop
repnz
scas
xchg
out
mov
push
jp
das
cli
cmp
xchg
stos
mov
inc
lock
mov
sbb
daa
in
mov
enter
or
push
mov
sbb
data16
jne
lcall
mov
mov
lret
pop
sub
hlt
lahf
std
ret
lcall
jg
cli
jo
lods
out
cli
xor
push
sbb
mov
sub
dec
push
rcr
mov
mov
mov
mov
iret
mov
dec
dec
sbb
push
adc
push
jg
mov
add
cmp
xchg
out
jp
cs
les
std
mov
mov
aam
jle
in
pop
adc
dec
and
xor
cli
dec
ljmp
cli
incl
js
cmp
jp
shrl
iret
out
stos
jo
dec
dec
in
out
test
mov
jnp
lods
outsb
adc
lcall
mov
sbb
pushl
pop
decb
clc
cmpsb
inc
imul
xor
divl
push
dec
stos
clc
incl
fstp
jecxz
dec
dec
sti
jmp
fidivrl
rcl
mov
pushf
test
incl
shlb
data16
outsl
cli
mov
mov
cmpsl
mov
test
mov
scas
mov
jge
jg
mov
mov
testl
jge
leave
aad
dec
in
push
jnp
std
or
jecxz
xchg
cld
rorb
or
xchg
pop
outsb
cmp
hlt
mov
aaa
mov
inc
nop
inc
cmc
xchg
pop
cs
fcomip
ljmp
xor
inc
outsl
jb
jl
sarl
test
aam
daa
mov
pop
or
mov
or
push
push
mov
lods
push
out
hlt
lods
je
mov
stos
dec
adc
addr16
jg
push
push
inc
push
scas
cmp
mov
das
clc
fildll
insl
push
sarb
jb
xchg
js
sbb
push
sub
divb
out
xor
iret
cmpsb
incl
test
and
mov
clc
pop
xchg
popf
cmp
xchg
cmpsb
cmp
mov
cmp
fistl
push
adc
pop
pop
jmp
lods
clc
or
and
imul
int
call
leave
jle
dec
jae
out
sub
ljmp
rclb
cmp
or
jge
mov
or
fisttps
sbb
decl
stc
loope
and
int3
adcl
lcall
aam
call
aam
mul
sti
mov
sar
into
mov
aam
mov
out
cmp
aad
imull
sbb
shr
movsb
js
incl
xor
xchg
dec
cmp
scas
dec
cmp
lahf
stos
cmp
jne
pop
int3
jg
pop
cld
call
stc
and
lret
scas
mov
jl
jnp
inc
repz
sbb
and
xchg
imul
fisubs
mov
mov
push
clc
pushf
neg
das
cmpsb
jle
mov
imul
xchg
cmp
mov
incl
xchg
xor
in
or
loop
or
jns
xor
push
dec
mov
addr16
popf
mov
jo
mov
lock
dec
ljmp
xor
cmp
lcall
mov
cmp
or
into
adc
ficompl
incl
mov
mov
cmp
jns
or
mov
arpl
in
test
rorb
insb
in
fsubr
mull
call
xor
shll
cmp
jmp
adc
inc
lea
mov
aas
dec
out
jecxz
jl
cmp
mov
testb
stc
arpl
leave
int3
jecxz
test
aaa
enter
rcrl
jecxz
pop
xchg
add
cli
xchg
out
rorl
inc
jb
fidivrl
in
aad
xchg
lock
xor
ljmp
jno
mov
mov
dec
lods
out
jb
dec
gs
shll
add
jmp
popa
or
mov
in
shl
loop
out
cmp
ds
ds
in
outsl
mov
punpckhdq
imul
fists
clc
pop
pop
ljmp
loop
pop
test
dec
cmp
shlb
ret
xor
xchg
mull
ljmp
lcall
mov
imul
mov
push
mov
shr
movsb
out
es
add
movsb
in
enter
movsb
mull
fistpl
mov
ror
pop
mov
bound
or
in
xor
mov
jo
xchg
push
push
fistl
call
jle
shrl
pop
inc
sahf
adc
loope
out
push
push
bound
sbb
out
cli
negb
fwait
cwtl
int3
adc
sbb
movsb
icebp
fxch
or
decl
jno
in
cmp
or
ret
cld
mov
cmp
mov
mov
pop
cld
xchg
sbb
movb
lock
scas
fs
decl
push
inc
or
nop
rolb
jne
xchg
jno
push
mov
rcl
xor
repnz
in
xor
aas
call
mov
repnz
xor
fdiv
ret
inc
adc
xchg
bnd
aas
lock
cltd
dec
je
sbb
dec
adc
adc
sbb
negl
xor
xchg
nop
jmp
jl
or
scas
scas
test
xchg
mov
jno
dec
aad
dec
jmp
sbb
push
mov
lret
sub
jecxz
repz
call
jl
adc
mov
cld
int3
inc
mov
jne
and
and
fs
xor
incl
mov
insb
cld
xchg
imul
fcmovb
fs
incl
mov
push
pop
push
fisubl
xlat
sub
mov
cmpsb
sti
mov
jecxz
or
cmp
fildl
xor
cmpsb
pushl
dec
rep
xchg
jb
ja
incl
jo
nop
mov
rcrb
test
shr
xor
insb
jae
repnz
cmp
out
ss
xorl
dec
sub
dec
lods
mov
in
sub
adc
jmp
jmp
enter
inc
jo
imul
lcall
mov
arpl
shl
nop
daa
into
push
fistpll
jl
pop
pop
hlt
mov
es
repnz
mov
outsl
push
mov
lods
inc
or
lock
sar
out
clc
or
jae
push
out
and
jo
jb
cbtw
test
jecxz
ss
xchg
cmp
fs
sbb
xchg
mov
jg
sub
mov
imul
push
or
jo
inc
jge
daa
pop
sbb
fcoms
lock
std
push
sbb
int
mov
es
ljmp
adc
cmp
call
jo
sbb
adc
std
in
push
movsb
push
iret
shll
scas
bound
test
push
push
fwait
and
fdiv
out
adc
faddl
mov
jmp
leave
pushf
xor
lods
fldz
push
inc
mov
std
pop
idiv
adc
pop
mov
jg
lcall
add
push
sub
pushf
xor
pop
icebp
cmp
sti
cmp
int
mov
and
jg
xor
cmp
daa
xor
sub
decl
lock
std
data16
hlt
push
cld
cld
seto
jb
je
fcomip
std
cmpsb
js
lea
jl
sub
stos
addr16
test
icebp
push
lock
ljmp
and
xchg
jle
loope
xorb
fwait
jl
sub
cmp
inc
and
mov
repnz
cmpsl
cmpsb
push
cld
add
stos
inc
pushl
movsb
cli
pop
repnz
jno
sbb
scas
pop
cmp
les
mov
and
jle
jb
dec
mov
les
fwait
push
std
outsl
lcall
pushl
mov
xor
push
ret
push
xor
sub
ljmp
clc
clc
cld
shlb
movsl
xor
clc
shrb
push
or
push
je
adc
xchg
clc
xor
jge
rcll
lds
jg
lcall
and
mov
sbb
inc
scas
sbbb
fcoml
push
mov
mov
aad
stos
push
pop
or
iret
test
jae
sub
ret
cmp
mov
sti
repz
cmp
xor
cmpb
out
mov
incl
jp
mov
outsl
icebp
mov
out
mov
je
sbb
add
sbb
lock
mov
loope
leave
jne
loop
jo
push
jle
cli
pop
and
aam
mov
mov
inc
jl
lock
ljmp
adc
int
jbe
inc
stc
sub
mov
aaa
mov
test
jmp
mov
nop
jmp
scas
addr16
ljmp
cmpl
mov
sbb
outsb
repz
incl
xor
lahf
repnz
sbb
sbb
mov
or
shll
imul
lcall
icebp
std
jnp
mov
mov
aas
daa
mov
mov
das
divb
and
pop
aaa
in
push
mov
xchg
and
xor
fmuls
add
xchg
jb
xlat
add
cmc
mov
jns
jbe
pop
shrd
and
inc
xchg
mov
int3
push
jmp
pop
mov
add
je
xor
test
xchg
in
fcomps
pusha
mov
incl
stc
mov
rep
ja
xchg
xor
add
aam
setge
xor
and
lods
fs
lcall
pop
mov
sbb
sub
mov
xchg
dec
xor
pushl
mov
push
pop
jg
test
cli
fbstp
fs
pusha
insb
add
push
decl
adc
sbb
or
sbb
adc
decl
jo
jns
xchg
scas
bswap
or
jno
call
adc
daa
nop
mov
out
lock
lock
pop
push
xchg
cltd
jg
dec
jp
or
mov
mov
inc
mov
call
or
pop
mov
cmpsl
adc
pop
xor
test
call
xchg
sti
xchg
incl
dec
sub
cmc
aad
add
push
mov
popa
jmp
push
adc
out
mov
out
pxor
in
ljmp
xchg
sbb
repz
addr16
mov
fimull
sub
and
movsb
sub
xor
jg
and
or
enter
or
movsb
dec
sahf
or
addr16
inc
xchg
adc
push
ljmp
mov
imul
dec
cmp
sti
sub
test
test
decl
xchg
inc
xchg
push
mov
jnp
lea
mov
or
ljmp
or
int3
sti
and
cwtl
sub
mov
xchg
xchg
mov
or
decl
cmpsb
addr16
add
jg
push
cmpl
ljmp
cmpsb
mov
lods
test
cld
imul
cmc
loopne
test
push
xchg
inc
push
es
and
xchg
lock
in
lgs
cmp
dec
pushl
xor
add
in
inc
cs
mov
je
xchg
pop
inc
jno
inc
add
adc
xchg
stos
inc
and
imull
xchg
and
call
bound
mov
repnz
daa
cltd
or
xchg
mov
fisubrs
sbb
rolb
out
inc
aad
add
xchg
mov
loopne
pushl
or
jne
push
add
test
and
xchg
outsb
cmp
jmp
outsl
xor
test
jle
sub
mov
ds
data16
ss
repnz
ljmp
int
xchg
pop
lods
stos
inc
mov
lods
inc
add
test
xor
rorl
jle
xor
bound
in
xchg
and
enter
les
out
sti
stos
bound
fcomi
sub
imul
call
sbb
push
mov
mov
or
add
outsl
push
sub
mov
fwait
xchg
mov
and
sub
jmp
sti
mov
adc
je
hlt
push
ss
cmpsb
or
lcall
push
sbb
push
out
sub
test
xchg
dec
sbb
idivl
negl
jg
sub
fs
js
xor
cwtl
jg
inc
fsubrl
pop
and
pop
add
inc
or
lcall
add
jl
js
xor
ljmp
ljmp
lcall
ficoms
sti
sub
cmp
xor
sub
mov
xchg
cmp
call
mov
mov
arpl
mov
xchg
ja
pop
sti
sbb
punpcklwd
sub
sti
inc
mul
cmp
sarl
xor
pop
loop
jg
stc
cmc
clc
negl
cltd
xor
jge
adc
mov
ljmp
inc
adc
push
pop
adc
inc
ret
inc
push
xor
xor
stc
pushl
mov
andb
push
mov
fs
mov
dec
jnp
xor
je
insb
lahf
sbb
jmp
incb
push
popf
push
lods
push
mov
fmull
test
andb
mov
dec
pop
cmp
cs
lea
mov
scas
add
or
jns
inc
and
test
inc
sbb
cld
ljmp
adc
adc
hlt
cmp
cmp
pop
stos
in
hlt
inc
cmp
jmp
dec
sub
popa
cmp
cmp
mov
fsubs
stc
insw
pop
sub
add
lcall
xchg
shr
jae
pop
push
lret
jb
out
pop
jne
jp
push
fldcw
fisttpl
mov
nop
out
adc
mov
sbb
lds
sub
add
daa
data16
add
xchg
sbb
imul
push
mov
ds
sbb
pop
cmc
cld
lock
pop
and
popf
scas
xchg
mov
sub
pop
in
pop
or
decl
cmp
mov
sub
scas
js
xor
lcall
fbld
cli
xor
test
xor
lea
jg
movsb
jbe
inc
cmp
ret
xor
xchg
xchg
xor
mov
push
sti
or
imul
adc
out
in
adc
popa
je
pop
jmp
pop
add
ljmp
sbb
ficomps
add
shrl
lahf
je
xchg
cs
pop
sbb
mov
decl
insl
fs
add
call
dec
xor
pusha
ss
sti
pop
test
insl
call
mov
xor
das
push
cmp
imul
cmpsb
and
rclb
cs
std
dec
adc
sar
outsl
add
cmc
sahf
jge
sbb
aas
mov
inc
call
sub
out
sub
lds
pop
loopne
push
adc
pop
sti
and
mov
push
inc
subl
repnz
sub
out
aaa
adc
lret
cmp
incl
inc
xor
add
mov
xchg
aaa
sahf
cmp
clc
jmp
fdivl
lcall
mov
dec
add
dec
int3
stc
movswl
jno
cmp
xor
jmp
cmp
mov
in
das
and
lahf
fisubrl
dec
fildl
dec
lcall
sbb
add
push
dec
rorl
cmc
leave
scas
add
cmp
jg
or
xchg
sub
sbb
or
jle
call
adc
fisttps
repz
flds
test
ljmp
call
lods
xchg
insb
sbb
sub
cmp
loope
cli
xchg
cmc
mov
inc
jo
in
cmp
das
cli
push
shrb
push
mov
mov
jg
lcall
cmp
decl
xor
jb
push
dec
arpl
ss
ljmp
sub
sbb
lock
xor
xor
bsr
xchg
xchg
xchg
negb
data16
in
sbb
in
lcall
das
xchg
jle
test
mov
das
sub
xchg
popa
bound
sti
inc
mov
inc
bound
lcall
mov
mov
mov
pop
sbb
inc
das
mov
gs
adc
cmpsb
cmp
sarl
in
call
in
jbe
or
ja
xor
and
cmp
in
mov
out
out
pushl
jg
pop
enter
pop
push
nop
mov
incb
jo
adc
add
decl
dec
ja
push
lods
mov
add
mov
inc
lahf
mov
pushl
mov
push
mov
popf
pop
cmp
add
call
push
mov
call
dec
insl
aam
pop
in
adc
lea
push
or
mov
jg
mov
mov
add
and
jmp
test
cmp
call
outsl
add
pop
outsb
push
dec
xor
jg
xchg
xchg
mov
dec
dec
inc
mov
in
jne
jno
aaa
jns
leave
or
imul
decl
mov
pushf
shll
mov
push
jae
je
xlat
vpshad
sti
jmp
ljmp
gs
out
sub
xor
xchg
jecxz
dec
jo
popfw
or
dec
arpl
jg
xchg
push
sahf
jg
enter
jmp
fsubrl
lcall
inc
mov
shll
out
xchg
jbe
popa
jmp
lahf
insb
and
mov
jl
outsl
push
sbb
mov
push
out
imul
ljmp
sub
ds
dec
popf
outsb
enter
xchg
xor
mov
mov
adc
fisubs
jmp
cmpsb
enter
xor
cmp
push
jb
ret
pop
out
fbld
sarl
push
pop
movsl
bound
cmpsb
pusha
imul
fwait
jl
rol
out
mov
add
jg
jp
pop
or
push
xchg
daa
lcall
push
jmp
repz
push
cmp
movsl
push
rcrb
lods
test
push
fwait
and
sub
bound
mov
mov
sub
fstpt
movl
aam
daa
cmp
dec
add
pop
inc
rep
jns
sub
addr16
mov
rorb
add
mov
outsl
adc
repnz
jmp
inc
jl
add
ja
insb
les
mov
mov
cmp
mov
xor
push
and
add
sub
push
pop
aam
jb
cmpsb
jne
mov
push
pop
push
addr16
xchg
ljmp
lock
fstpl
xchg
jb
jg
call
add
mov
sub
dec
xor
in
outsl
xchg
incl
jno
or
cmpsb
cld
in
js
int
cmpsb
scas
jecxz
xorl
decl
inc
pop
cmp
lahf
scas
sbb
dec
inc
addl
cmp
call
cld
mov
rcl
add
mov
insl
dec
lret
jp
outsl
loopne
cmp
mov
mov
xchg
insl
inc
jcxz
data16
fists
lock
repz
jmp
hlt
cmp
push
jo
sti
popa
pop
sbb
in
popf
push
aad
and
pop
adc
outsb
cmp
clc
lcall
imul
loopne
adc
jp
jge
inc
and
ds
cmpsl
fcomip
push
int3
xchg
sub
jno
loopne
pushw
clc
mov
pop
loop
cld
daa
roll
ss
ja
pop
int
imul
xchg
lahf
repnz
out
cli
incl
pop
mov
mov
mov
int3
gs
add
gs
adc
mov
push
add
push
popa
mov
push
xchg
mov
pop
mov
popa
push
dec
push
sub
inc
cmp
cmp
fxch
out
arpl
mov
mov
or
pop
leave
popa
inc
adc
cmpl
ljmp
and
cmp
std
loope
rclb
inc
addl
incl
addl
inc
jnp
sub
ds
dec
jge
mov
fld
sbb
lea
into
int3
and
sti
sbbl
push
aas
nop
addr16
out
mov
or
outsb
jg
repnz
xor
outsb
inc
rcrl
clc
cmp
call
out
in
mov
sub
ja
xchg
sbb
adcb
xor
lea
mov
outsl
int3
test
popa
cld
jg
push
mov
jnp
repnz
xor
sbb
sbb
xor
mov
or
decl
cmc
mov
int3
pop
mov
lods
lret
jb
or
ret
mov
dec
mov
jmp
jg
inc
test
mov
test
mov
mov
imul
sub
sbb
scas
out
fs
clc
es
pop
cmp
mov
test
push
aam
les
loope
in
cmp
mov
jge
pop
sub
pop
insb
paddusw
in
std
jno
pop
mov
scas
pop
ljmp
jg
mov
mov
pop
jmp
test
cmp
nop
lods
gs
in
mov
and
js
leave
fisttps
add
popa
jno
clc
mov
sub
mov
movsb
test
adc
jmp
or
outsl
sub
je
lock
jle
ljmp
push
mov
or
push
popl
dec
push
vpshldvw
gs
jge
or
in
addl
inc
xor
inc
inc
xor
mov
adc
scas
popf
nop
das
punpcklwd
lcall
push
and
out
test
es
push
xor
idiv
lock
jns
pop
cmpsb
mov
xchg
jmp
dec
hlt
mov
ljmp
in
aas
scas
cltd
sub
xor
inc
stos
ss
mov
sar
cmp
in
jno
fcoml
in
ret
aaa
jmp
or
ret
sub
cld
mov
xchg
loop
stos
insl
loope
jmp
mov
jg
movsb
adc
sbbb
aas
ljmp
loop
add
cmpsl
mov
incl
push
mov
jecxz
push
mov
cmpsl
xor
in
or
out
out
jl
xchg
clc
jmp
arpl
xchg
cld
jge
push
lock
fidivs
jb
ror
call
inc
incb
data16
jne
dec
adc
call
jnp
adcl
aaa
adc
jecxz
fbld
adc
xor
xchg
cli
push
incl
add
test
cld
xor
mov
jns
and
jg
andb
sbb
mov
xor
jp
mov
jne
movsb
xor
mov
lcall
cmp
ret
push
mov
mov
lods
pusha
adc
jecxz
pop
jae
addr16
jg
dec
cmp
jg
jl
sub
mov
inc
mov
repz
mov
call
repz
and
fiaddl
shlb
xchg
xchg
pop
mov
js
nop
in
pushl
shlb
incl
jae
repz
mull
pop
xor
jge
lods
in
jg
xchg
ret
mov
add
xor
daa
mov
mov
adc
cld
decl
or
in
jg
out
xor
dec
lcall
jge
sti
push
fwait
repz
mov
mov
into
inc
dec
scas
into
cmp
into
adc
repz
scas
cld
imul
and
incl
mov
xchg
or
pop
mov
outsb
in
fwait
sbb
push
mov
ret
xchg
jg
inc
js
fildll
dec
mov
push
mov
sti
mov
fstpl
and
jmp
mov
cli
sti
incb
shr
cli
repz
mov
jg
loopne
mov
lods
fsubrl
lret
repnz
imul
decl
jns
mov
push
repz
stos
xor
pop
lcall
jnp
or
mov
xor
sti
add
jb
sub
repz
das
ljmp
stc
adc
xor
jle
add
mov
pusha
mov
and
loopne
pushl
loope
xlat
cmp
mov
test
mov
jmp
xchg
sub
mov
cmpsl
stc
movsb
ljmp
and
out
call
sti
repz
xchg
or
mov
jo
xchg
ljmp
dec
sti
mulb
cwtl
movb
mov
icebp
xchg
push
js
inc
jp
jo
mov
cld
xor
arpl
xor
arpl
adc
cmp
sti
icebp
and
enter
adc
push
push
adc
sti
adc
imul
xor
shl
repz
xchg
imul
xchg
jae
xchg
outsl
pop
inc
inc
inc
outsb
repz
outsb
es
call
sti
in
jnp
arpl
xlat
loope
rorl
sub
lret
inc
sub
or
int
xchg
mov
xorb
push
sahf
out
paddd
outsl
adc
mov
sub
mov
push
addr16
ja
arpl
or
cmp
outsl
lods
jecxz
jmp
test
xchg
push
incl
data16
xchg
icebp
popa
jmp
mov
negl
push
inc
ljmp
or
and
decl
imul
loopne
pop
push
aam
sub
push
dec
data16
pop
push
dec
fbld
lcall
scas
mov
data16
inc
jecxz
jnp
hlt
lock
aaa
sbb
jno
lock
mov
mov
pushl
cs
push
out
mov
lahf
and
push
adc
jmp
mov
push
sahf
cld
out
bnd
or
pop
hlt
in
adc
leave
jno
mov
shr
lock
jle
sub
loope
shlb
leave
rcrl
dec
jg
decl
pop
dec
lock
mov
dec
arpl
jae
std
ljmp
cld
movsl
mov
scas
outsb
sub
xor
iret
mov
fldl
pop
lock
hlt
test
lcall
and
aas
push
in
jae
xor
push
dec
xor
xor
jne
fldcw
mov
jmp
push
fdivrs
xchg
pop
jmp
jmp
lock
and
jb
push
lcall
cmp
rolb
out
enter
and
loopne
adc
sub
pushl
inc
mov
test
aad
xchg
xchg
fbld
mov
sub
dec
scas
notl
mov
mov
arpl
or
jecxz
sbb
stc
jmp
lcall
pop
pop
jnp
xor
dec
adc
cmp
pop
test
lods
stos
mov
push
pushl
addr16
xor
pusha
fwait
pop
mov
aaa
pop
add
notl
cwtl
sbb
sub
pop
hlt
decl
jecxz
repnz
shll
mov
jae
aaa
lea
shll
add
fists
repnz
movsb
or
loope
inc
sub
sbb
sti
pop
pushf
xchg
ds
sti
mov
inc
negl
test
cli
jge
aam
sahf
cmp
jge
inc
jecxz
jb
call
dec
ret
pop
mov
xchg
negl
jg
test
or
stos
sub
jge
rcrl
cmpsl
dec
mov
in
adc
xchg
notb
dec
movsl
sub
mov
mov
test
or
push
fcoms
out
jge
dec
push
negb
xor
jp
xchg
fsub
adc
rcl
lret
mov
repnz
jb
inc
pop
nop
lea
fbstp
cmp
divb
enter
fildll
cmc
fwait
in
pop
xor
xchg
das
das
movsb
cwtl
pop
add
in
push
adc
call
xchg
loopne
and
mov
ret
inc
push
xchg
jbe
jb
jbe
sub
xchg
std
stc
inc
adc
adc
mov
and
lea
ss
push
sbb
pushl
mov
mov
gs
mov
xor
cs
add
repnz
enter
incl
je
xor
jge
jae
loope
mov
push
out
in
sahf
jg
cmp
pop
mov
imul
lods
repz
cltd
push
push
jmp
mov
cli
pushl
xchg
jecxz
addr16
nop
pop
mov
fisubrs
aam
call
out
inc
test
xor
outsb
jne
add
stc
ds
loope
cld
dec
jb
in
mov
adc
push
in
xchg
mov
jne
sub
jno
xchg
adc
call
xchg
scas
mov
clc
xchg
xor
insl
incb
call
xchg
icebp
and
cli
lcall
mov
sbb
mov
mov
jns
adc
gs
mov
in
mov
ja
adc
adc
sub
sub
cmp
cli
jmp
popa
out
cmpsb
cmp
lods
inc
gs
movsb
sahf
cmc
scas
fcmove
in
decl
out
cmp
aas
mov
jmp
sbb
cmc
xorl
inc
addr16
xor
popa
cmpsb
push
mov
push
xchg
outsb
cwtl
loop
xor
mov
mov
in
sahf
adc
insl
je
jb
incl
mov
cmpsb
dec
hlt
lcall
mov
xor
sub
ja
neg
dec
shlb
je
mov
push
sbb
pop
mov
sub
pop
dec
aad
pop
repnz
xchg
js
xchg
or
cmpsl
xchg
lcall
stos
stos
jecxz
dec
xchg
jb
sti
jne
sbb
push
hlt
cltd
push
sbb
mov
mov
jg
cmp
decl
jle
data16
xor
push
push
cltd
inc
std
ret
hlt
nop
outsb
aaa
xchg
mov
sub
push
jge
jno
js
xor
enter
and
push
jmpw
scas
js
and
xchg
sub
mov
jno
js
ret
or
nop
xor
test
hlt
inc
clc
dec
mov
adc
call
pop
sbb
adc
stos
ret
rorl
rorb
xor
inc
sahf
adc
and
lcall
inc
adc
scas
shrb
mov
loop
jo
inc
xchg
xor
add
in
clc
push
or
and
mov
movsl
jle
mov
mov
xor
adc
out
xchg
push
or
outsl
mov
lods
xchg
fimull
cmpsb
sbb
jne
pushl
call
xor
mov
adc
push
mov
inc
loopne
ljmp
stc
movsw
inc
cmpsl
cmpl
pusha
iret
lcall
dec
mov
xchg
xchg
push
lcall
add
out
dec
and
jne
call
and
cmp
mov
mov
pop
call
dec
sbb
stos
push
aam
fbld
bound
add
dec
jae
sbb
int3
mov
lret
xor
mov
outsl
or
mov
push
mov
mov
incl
mov
sti
test
xchg
pop
mov
iret
jp
std
jae
lock
inc
stos
dec
lods
aad
push
movl
xchg
or
flds
mov
loopne
xchg
xor
xchg
jp
push
movsl
pusha
push
sar
hlt
dec
adc
pop
xorb
aam
pop
addr16
dec
call
mov
iret
fadd
cmp
leave
mov
test
sarb
fisttps
cmp
sbb
push
fsubp
arpl
pop
xchg
in
ds
jecxz
push
jp
cmp
jmp
mov
and
cmp
jl
cmp
mov
ror
xor
test
mov
std
pushl
adc
inc
roll
xchg
sub
push
out
stos
cmc
outsb
mov
inc
fadds
mov
mov
lcall
loop
and
sbb
push
cmp
push
ljmp
mov
out
xchg
jmp
shr
or
mov
andl
popa
mov
push
or
adc
dec
insb
or
jp
push
mov
jo
pop
cmpsb
sub
adc
xor
xlat
xor
sbb
dec
clc
jns
jge
in
cld
les
ror
sbb
lret
lcall
mov
sbb
cwtl
adc
les
push
scas
cmpl
iret
in
lcall
cmc
push
push
push
jmp
mov
adc
fldcw
push
mov
ljmp
pop
cmp
pop
stos
scas
insl
outsl
gs
popa
out
push
dec
jnp
icebp
pop
push
mov
inc
jl
sbb
lea
mov
aad
or
mov
cwtl
sbb
incl
or
push
jae
gs
les
pinsrw
lds
imul
mov
ljmp
mov
fisubrs
mov
and
dec
fstpl
add
mov
pop
movsl
das
push
ljmp
je
out
fs
pop
pop
mov
jmp
in
fadd
aas
push
push
fiaddl
mov
sbb
or
or
ljmp
or
mov
dec
push
mov
subb
xchg
jne
call
leave
aas
and
test
filds
adc
jns
lret
repz
lret
mov
mov
test
pop
test
aad
mov
mov
xchg
fidivrs
repnz
incl
mov
add
add
ja
jl
push
jl
pop
sub
and
mov
decl
mov
roll
add
xchg
mov
nop
das
or
xchg
pushl
dec
lds
cmp
repnz
jp
jb
xor
inc
mov
call
xchg
jp
in
lea
es
cs
jmp
push
in
mov
sub
imul
or
xor
add
mov
sbb
shlw
call
xchg
pop
xlat
adc
adc
inc
adc
fdivl
movsb
and
jo
in
xor
stc
test
mov
ss
mov
scas
inc
popa
ror
ret
pop
stos
xchg
jae
and
xchg
loope
mov
sbb
jp
sbb
lahf
leave
sub
xchg
movsb
sbb
pop
ljmp
pop
mov
push
mov
arpl
jge
mov
sbb
out
add
call
add
repz
iret
inc
mov
pop
psubusb
or
jg
popf
mov
iret
pop
adc
shl
push
paddusw
jecxz
sub
push
dec
jno
sub
fst
imul
cmp
adc
jge
push
shl
out
popf
push
imul
cld
dec
push
sbb
jo
mov
mov
sete
jecxz
fistl
jg
xchg
je
mov
int
mov
xor
pushf
add
movsl
addl
jg
leave
adc
out
pop
inc
out
cmp
jg
sti
les
outsb
lahf
dec
or
dec
out
mov
fnstenv
lret
test
cmp
pop
xchg
sahf
push
lods
adc
xor
call
out
fildl
and
inc
lea
push
adc
mov
push
adc
pop
dec
pop
jae
add
mov
repnz
add
rcrb
jnp
out
outsl
pop
nop
outsl
push
add
mov
and
push
incl
ror
in
int3
cltd
movl
adc
nop
xorl
pop
pop
xchg
mov
add
incl
mov
mov
and
aad
mov
aas
aas
xor
jb
push
aad
daa
jo
xchg
fnstenv
ljmp
incl
rclb
sbb
imul
add
add
das
mov
mov
add
clc
cmpsl
mov
xchg
pop
cmc
jnp
mov
mov
in
mov
mov
call
adc
sbb
loop
popf
sbb
add
adc
jg
jmp
loopne
xchg
pop
jbe
rorb
mov
dec
and
push
mov
ljmp
sti
cmp
jnp
mov
repnz
sub
xor
cmpsb
xor
out
pop
sarb
lods
out
mov
pop
sub
into
cmpsb
mov
add
and
lods
pop
loopne
ljmp
or
aam
xor
arpl
lcall
lock
jmp
mov
loop
add
pop
mov
mov
or
push
aad
icebp
filds
mov
adc
lods
push
dec
add
jmp
addr16
fstl
mov
call
adc
shrl
out
mov
inc
jb
jge
das
ljmp
lret
sbb
inc
or
sub
stc
jo
rolb
add
add
jg
jmp
mov
repnz
sti
pop
cli
inc
aas
daa
js
pusha
push
fs
pusha
sub
mov
call
repz
or
rcl
mov
adc
faddl
push
lods
clc
and
push
fsubrp
push
cmp
decl
test
shll
xchg
cmc
jle
jmp
or
and
fmuls
mov
in
in
mov
xchg
xchg
aam
pop
sahf
push
mov
in
mov
dec
or
fisubs
ljmp
mov
jmp
shrl
in
addr16
in
mov
outsb
fld
adc
push
std
in
sbb
cmpsb
push
nop
pusha
shll
adc
push
mov
adc
mov
push
out
pop
sub
call
gs
add
lret
mov
lods
cmpsl
mov
jns
scas
faddp
inc
lcall
movsl
rcrb
jbe
jle
jp
or
jle
cwtl
decl
rcll
mov
popl
adc
mov
push
inc
mov
add
sub
imul
ja
inc
push
or
adc
push
cmc
push
cld
stos
adc
call
xchg
out
jecxz
adc
inc
std
in
inc
mov
jl
jno
decl
pop
jne
jecxz
sub
sub
push
fldcw
popf
mov
movsb
cmp
jl
loope
loopne
xor
fldz
fs
loope
les
add
add
pusha
and
cmp
jmp
mov
xor
push
test
inc
adc
add
inc
cmpsl
stc
repnz
cmc
jmp
das
out
mov
jg
std
jle
add
scas
adc
or
or
js
and
jle
and
into
jne
cmp
shl
mov
pop
cmp
mov
xchg
ret
nop
inc
push
out
add
decl
aas
xchg
sbb
mov
fimull
or
or
mov
adc
in
jb
sbb
imul
addr16
popf
cs
incl
mov
mov
outsb
or
xor
push
mov
ljmp
clc
pop
faddl
add
lcall
btr
inc
jl
cmp
in
dec
or
jmp
les
call
jae
add
and
fimuls
nop
or
sbb
jg
repnz
hlt
loop
xchg
dec
addr16
mov
or
lods
lea
stos
cmp
inc
loopne
xchg
pop
adc
pop
mov
sbb
mov
out
cmp
hlt
arpl
addr16
cld
push
cmp
jmp
rolb
push
out
pusha
iret
lock
push
into
sti
mov
int
mov
call
das
movsb
pop
aad
clc
loope
jne
jecxz
dec
cmp
imulb
notb
pop
mov
add
push
xor
or
adc
int3
adc
lds
mov
mov
xchg
cmp
adc
jecxz,pt
aad
in
call
adc
sahf
or
das
lcall
aad
or
fstps
hlt
int3
mov
aad
adc
decl
flds
adc
dec
xchg
mov
adcb
out
or
aam
mov
mov
adc
incl
xchg
mov
lods
xchg
jmp
hlt
mov
xchg
aam
pop
xchg
xor
cmp
adc
lcall
lods
push
cmpsl
loop
mov
add
xchg
lods
test
cmc
mov
mov
mov
adc
push
mov
or
mov
cmc
sbb
xor
dec
pop
or
push
data16
mov
sbb
das
test
push
aam
and
mov
decb
je
push
push
add
jmp
push
inc
leave
ficomps
dec
pushw
cmp
add
pushf
jg
cmc
push
mov
adc
test
movsb
jb
icebp
dec
add
repz
adc
int3
add
pop
pop
or
pop
jae
leave
addb
jbe
hlt
jp
add
ret
clc
enter
push
mov
or
cwtl
mov
ja
jne
lahf
movsb
ljmp
cld
adc
xchg
adc
xchg
in
int
decb
ljmp
test
sub
test
pushl
adc
lcall
repnz
xchg
or
sub
lods
mov
testl
call
fldl
in
nop
xchg
sub
mov
add
push
xchg
dec
xor
pop
int
js
clc
pop
xor
ss
xchg
decb
ljmp
aas
add
and
ret
pushf
mov
or
dec
xchg
int
xchg
negl
mov
dec
jle
cmpsb
loopne
fnstsw
mov
xor
sahf
sub
mov
sub
adc
repz
and
xor
lret
jbe
incl
hlt
inc
adc
out
cmpsb
push
daa
fwait
or
das
frstor
adcb
adcl
inc
imul
mov
pop
sub
jo
scas
jg
hlt
lea
int3
cmpb
adc
test
cltd
int3
jbe
jg
enter
lods
aaa
jmp
vhsubps
mov
xor
stos
sbb
pop
icebp
ds
pop
pop
enter
cmpsl
incb
add
add
inc
xor
ljmp
js
push
pop
pop
enter
aam
daa
in
lea
cmc
mov
pop
sbb
jno
push
inc
ret
and
dec
arpl
push
arpl
pop
cmp
push
and
sub
cs
push
xchg
push
iret
and
xchg
xchg
and
inc
daa
fmuls
lret
lcall
mov
sub
adcl
jmp
hlt
push
adc
sub
inc
fiaddl
iret
adc
xchg
mov
adc
hlt
outsl
call
or
push
movsl
dec
xchg
out
adc
xchg
les
mov
dec
out
sbb
ss
pop
stos
or
add
lcall
jmp
mov
xlat
pop
mov
adc
decl
or
je
mov
mov
push
sbb
sbb
arpl
ljmp
jmp
jno
add
pop
cs
sub
cmc
ret
add
imul
push
es
jmp
add
clc
adc
mov
or
push
rcrb
and
movsl
mov
out
push
cwtl
std
dec
scas
mov
or
clc
aad
mov
lods
pop
fidivrl
dec
sar
decl
fisubrs
jecxz
mov
mov
mov
mov
xlat
dec
daa
in
test
icebp
cltd
push
cmpsb
xchg
or
pop
ret
scas
pushl
and
mov
scas
mov
sub
fdivs
call
mov
jge
push
mov
icebp
push
int
scas
lods
mov
push
mov
sbb
sub
pushl
adcb
inc
pop
icebp
pop
outsb
cltd
or
xchg
cmp
mov
push
rcr
test
xchg
jp
and
ja
ret
lods
mov
scas
enter
mov
lea
je
xchg
lcall
mov
int
mov
or
mov
int3
jmp
mov
sbb
addr16
idivb
sahf
push
push
xor
cmp
dec
int3
cmp
and
decl
dec
cmp
pusha
les
aas
loop
outsl
sub
sub
mov
rcrl
xor
add
add
pop
in
iret
rcr
sbb
scas
mov
test
insl
ljmp
jg
fiadds
dec
mov
lods
mov
push
aam
imul
sbb
xchg
call
lahf
popa
add
fistps
in
cs
inc
inc
in
into
push
jmp
in
mov
xchg
mov
mov
inc
scas
pusha
sub
faddl
ljmp
and
loope
outsb
pop
lret
xchg
adc
mov
pop
xchg
ret
ljmp
enter
jmp
cli
in
mov
enter
enter
mov
sbb
pop
movsl
jp
rcrb
fisubrl
cltd
scas
test
jo
sub
enter
mov
decl
sbb
std
pop
outsl
imul
shufps
insb
repnz
adc
sbb
mov
ljmp
and
and
push
std
mov
lds
hlt
lods
cs
dec
or
xor
test
jmp
repz
mov
and
negb
push
mov
jle
cli
jmp
mov
adcl
loopne
std
dec
clc
decl
lock
loop
sbb
mov
add
dec
data16
inc
mov
ja
incl
dec
es
push
sahf
shrl
mov
andl
fucomi
xchg
mull
cltd
cmpsb
stc
mov
push
popa
cmp
jge
pop
sbb
gs
fcmovb
push
pushf
or
mov
nop
mov
xor
out
xchg
adc
lcall
inc
adc
icebp
orl
push
sub
fwait
decl
hlt
ud0
jg
stc
push
xor
addr16
ret
call
sub
in
cmpl
fstpl
popa
xchg
rolb
rorb
cld
leave
test
push
decl
dec
daa
out
rcll
mov
jne
fwait
aas
xor
xchg
bnd
divb
lcall
ja
and
jle
stos
sbbb
xor
jecxz
push
mov
pusha
xchg
mov
ror
call
fnsave
data16
pop
gs
loopne
pop
lods
xchg
or
or
test
jne
cld
test
into
dec
inc
and
push
push
push
mov
pusha
mov
push
fwait
mov
xchg
cld
js
out
adc
xchg
es
rolb
mov
lret
xchg
xchg
sahf
cld
push
jge
inc
mov
mov
pop
add
mov
sub
jge
mov
insb
lds
add
fwait
dec
mov
dec
jnp
adc
arpl
xchg
push
cld
ret
nop
xchg
stos
scas
out
mov
pop
aas
in
xor
dec
sbb
jmp
mov
dec
adc
cs
sbb
dec
outsl
iret
jbe
cmp
fsubp
in
sub
push
out
call
xor
mov
lcall
sbb
incl
pop
in
sbb
nop
pop
gs
inc
fs
test
adc
movsb
adc
jg
push
cmc
add
inc
mov
jg
cmp
pushl
cwtl
sbb
lock
mov
push
movsl
call
inc
push
adc
push
int3
push
jne
dec
mov
call
psubsb
mov
and
jle
outsb
js
inc
nop
jecxz
add
std
push
add
push
mov
inc
jge
pop
xchg
pop
lods
push
rorl
lock
push
stc
test
dec
sbb
push
stos
aad
pushf
pop
lcall
enter
lahf
les
adc
push
mov
out
daa
jbe
mov
addr16
mov
pop
arpl
fcomip
scas
shlb
and
dec
gs
push
in
xchg
or
test
fisttpll
enter
decl
or
xlat
test
xor
inc
lds
adc
int3
cli
ror
jg
scas
loope
ljmp
rclb
adc
arpl
incl
push
cmp
movsb
aam
mov
mov
mov
xor
push
outsb
insb
jp
fists
mov
push
xchg
lock
and
xor
xchg
lret
dec
and
xchg
sub
inc
push
into
iret
jne
adc
push
push
push
mov
lea
jno
push
mov
decl
leave
push
and
sbb
mov
xchg
xor
xchg
sub
popa
test
int
call
dec
push
xchg
adcl
in
cmp
test
mov
xor
cli
mov
pop
or
xlat
call
out
jg
mov
sub
int
out
dec
rcrl
out
cwtl
icebp
decl
push
cli
pmaxsw
std
xor
mov
adc
xor
ret
out
fsubl
out
adc
mov
jnp
pop
xor
or
jmp
or
fdivrp
pushl
pop
test
dec
lret
push
cmpsb
push
mov
adc
jno
pop
pop
leave
xlat
movsb
jge
jns
cwtl
incl
ficompl
lods
add
cld
outsb
cmp
int3
lcall
push
push
and
lcall
push
cld
mov
xchg
push
fdiv
push
ljmp
sar
inc
cli
mov
push
jae
jmp
push
cmp
aas
fdivrp
call
pusha
sub
shlb
stos
inc
popa
adc
inc
loop
xor
shl
call
call
inc
xchg
cmp
cmp
test
les
test
push
add
mov
pushl
add
pop
push
ret
out
add
stos
xchg
xchg
or
insb
add
clc
or
mov
ds
orb
incl
sbbl
dec
bnd
inc
sub
fldcw
fs
ljmp
adc
push
dec
pop
or
pop
ds
mov
aam
pop
scas
sub
dec
push
inc
imul
or
push
sbb
repnz
inc
call
xchg
lahf
sub
ds
adc
adc
out
clc
push
gs
cmp
ds
out
decl
push
aam
mov
les
cmp
inc
pusha
sbb
popf
dec
jmp
testb
pusha
inc
js
push
jns
or
ret
ljmp
mov
mov
out
xorb
fmuls
mov
loope
xchg
add
orb
cmp
call
xchg
sub
gs
pop
test
cld
fnstcw
sbb
jmp
popf
negl
adc
incl
mov
rolb
out
mov
push
popa
in
or
lcall
iretw
rcl
xchg
sbb
aad
out
orb
lea
adc
outsl
push
push
jo
hlt
push
jmp
xchg
jp
sbb
adc
lock
sbb
lcall
fbstp
inc
fsts
mov
xchg
xor
or
mov
cmc
std
dec
jge
push
cli
mov
xchg
push
push
int
mov
fisttpl
adc
or
push
mov
pop
cld
incl
and
push
pop
cld
imul
sbb
lret
orb
sbb
jg
or
insb
jne
xchg
mov
sbb
cltd
push
gs
fwait
pushl
sti
jge
push
rorb
les
repnz
mov
xchg
sbb
outsb
mov
push
movlhps
push
jo
dec
iret
sub
lcall
into
js
or
mov
sbb
sub
mov
icebp
pushf
sbb
stc
bound
lcall
stos
movsl
orb
pop
lea
incl
inc
lcall
adc
add
xor
call
cli
in
cs
sti
je
and
jns
shlb
pusha
out
shr
adc
xlat
sub
incl
xlat
hlt
jp
inc
fldl
cli
imul
test
pop
inc
arpl
mov
js
jns
pushf
pusha
xchg
push
cmc
push
out
into
divl
ret
add
ja
ret
sti
out
mov
incl
orl
imul
adcl
and
lret
jbe
mov
shrb
lcall
inc
add
dec
ja
sub
into
out
jg
cmc
lcall
cmpsl
subb
mov
dec
popa
iret
push
fldenv
push
insl
xchg
xchg
sete
dec
test
pop
cmp
or
dec
lsl
outsb
xor
incl
inc
mov
testb
divl
mov
filds
or
loopne
add
jns
incl
imul
in
dec
pop
jmp
shrb
clc
scas
jl
jle
enter
dec
xchg
aad
in
aaa
mov
insl
rclb
sarl
aad
push
nop
adc
dec
js
xchg
pop
mov
mov
mov
and
imul
movsb
hlt
pop
insl
push
lea
sub
out
movsb
push
sbbb
hlt
and
jl
or
dec
out
cmc
fwait
pop
outsl
jle
ja
add
call
mov
push
insb
shrb
mov
adcl
enter
and
xchg
test
lcall
sar
sub
orb
rclb
mov
shrl
lock
iret
inc
or
mov
mov
xchg
adc
jnp
adc
in
add
call
pop
cmp
dec
jno
dec
cld
and
pushw
push
js
div
leave
jbe
out
jae
mov
xchg
adc
repnz
pcmpeqd
xchg
jge
cs
adc
call
inc
lods
cmc
lret
lret
jae
jae
jbe
xor
jo
stos
jo
incl
sbb
push
repnz
jb
fidivrs
push
insb
inc
das
cli
ljmp
fdivl
push
int3
pusha
rclb
push
jnp
xchg
repnz
push
adc
lret
mov
dec
adc
xchg
repnz
xchg
xchg
ja
push
je
xchg
stc
or
dec
pop
push
in
lods
or
xchg
lds
ja
adc
stc
mov
call
inc
fdivr
repz
pop
repnz
addl
mov
push
sbb
adc
or
call
inc
ja
adc
lcall
add
jo
repz
push
js
sbb
cmp
testl
ljmp
scas
mov
psubq
push
push
xlat
aad
daa
cmp
and
xor
stos
in
bound
jecxz
or
cmp
or
fwait
jge
shll
sbb
mov
jle
stos
sub
cmc
dec
cmp
jnp
ljmp
jnp
cmp
adc
cld
or
jp
iret
push
cmovne
mov
sbb
push
pop
loopne
pushl
add
xchg
mov
cli
ja
inc
les
pushl
sbbl
mov
jae
fisubl
xor
xchg
pop
test
jg
or
xchg
lcall
mov
push
or
shlb
test
jmp
pop
cwtl
cli
jnp
jb
popf
xchg
dec
xor
mov
mov
jb
add
in
ds
inc
xchg
inc
fucom
adc
pop
btr
inc
mov
lcall
cmp
dec
xor
cs
xor
sahf
xor
adc
pop
xchg
ficoml
leave
cld
jno
orb
scas
xchg
int3
mov
mov
mov
ucomiss
scas
pushl
push
pop
jl
sub
dec
hlt
and
hlt
mov
mov
sbb
scas
imul
cmp
jo
adc
dec
jbe
fiaddl
mov
mov
rcll
hlt
mov
sbb
push
cld
push
mov
scas
dec
pop
add
fistpl
dec
adc
call
aam
subl
inc
dec
xchg
dec
push
inc
lds
call
imul
les
jne
nop
test
lods
add
push
xor
sbb
xor
push
jge
xor
mov
loopne
pop
mov
test
push
pushf
push
xor
dec
or
sub
andl
push
push
jp
or
lock
push
xchg
sbb
pushf
adc
incl
cmpsl
cld
inc
addb
add
fstpt
mov
xchg
jne
ljmp
icebp
mov
cmc
jmp
and
outsl
dec
int
add
ret
mov
mov
mov
sub
or
mov
xchg
scas
test
or
mov
jle
insl
orb
cwtl
pop
dec
jae
mov
mov
aam
adc
push
xchg
pop
dec
lods
sar
jg
incl
hlt
and
inc
fmull
nop
repnz
cmp
mov
add
inc
es
roll
push
add
push
xor
jl
lods
mov
pop
rcrl
movb
aad
fwait
or
sahf
mov
jb
scas
lds
hlt
fdivrl
dec
and
test
cmp
sbb
insb
mov
add
sub
cltd
mov
popf
lahf
mov
mov
xchg
sbb
cmp
out
lcall
mov
xchg
jno
imull
sbb
imul
or
mov
or
dec
lret
sub
pop
popf
test
push
cmp
sarl
jg
adc
jae
loop
push
leave
loope
mov
pop
and
test
jg
jmp
xchg
aaa
pop
es
insb
test
jle
stos
xchg
lea
outsb
mov
xchg
push
pusha
dec
js
push
mov
xor
imul
jecxz
xor
add
cld
fists
cmp
fnstsw
add
mov
jmp
pop
sbb
stos
add
mov
cmp
movsl
scas
jns
ljmp
fsubp
test
inc
push
test
movd
mov
cltd
lock
mov
pop
xor
cmpsb
sbb
mov
mulps
mov
jmp
clc
mov
inc
inc
scas
sbb
enter
fistl
dec
sbb
lcall
xchg
popa
pop
mov
push
loope
push
cmpsb
pop
enter
in
ja
scas
pop
popf
shlb
pop
ljmp
roll
popf
push
push
adc
dec
out
or
test
xor
pop
xchg
push
cmpsb
xchg
cmp
in
adc
or
xchg
xchg
sub
in
daa
xchg
add
ss
test
arpl
jp
xchg
out
sub
mov
iret
call
shll
bound
mov
push
orb
jb
push
cld
mov
mov
add
bnd
mov
pusha
or
in
dec
push
in
pop
jle
add
in
pop
xor
xchg
push
sub
mov
adc
out
es
add
mov
mov
pushf
ret
jmp
fsubl
lods
negb
pop
cli
xchg
subl
dec
pushl
adc
mov
sub
nop
stc
xorb
jle
pop
jno
xor
mov
stos
xchg
and
hlt
test
mov
pusha
cmp
fldcw
or
push
cwtl
mov
jae
push
push
negb
jecxz
and
cli
pop
or
jl
mov
push
lahf
dec
shlb
sub
pushl
in
imul
pop
cs
jae
push
dec
xchg
xchg
cmpl
push
call
dec
inc
repnz
lea
and
inc
addr16
scas
jecxz
mov
push
out
repz
hlt
pop
jae
cld
ja
popf
adc
inc
sahf
sbb
into
push
pusha
xchg
hlt
mov
sbb
aad
iret
icebp
jbe
mov
xchg
movsb
xchg
pop
jmp
fwait
mov
stos
lcall
lock
stos
xchg
add
lods
mov
pushl
int
adc
xchg
mov
jo
mov
xchg
leave
out
and
mov
fbld
push
sub
iret
repz
push
add
mov
push
insl
xor
sbb
push
push
cmp
adc
in
sub
rcrb
sbb
in
push
jne
adc
pushl
sbb
xchg
adc
and
or
push
dec
adc
ret
xor
ljmp
cs
xchg
cmpsl
aam
in
mov
jne
in
shll
or
sbb
pop
fisttpl
adc
mov
dec
rcrl
pop
pop
push
mov
mov
dec
jb
xchg
cmpsb
roll
pop
ds
mov
je
mov
push
xchg
ret
shr
cli
aaa
xlat
lods
lret
add
cmc
or
adc
xchg
xchg
dec
ret
fdivrl
push
mov
std
mov
repnz
lretw
mov
sbb
fldl
pusha
aas
aaa
data16
mov
dec
dec
sub
daa
jo
mov
jg
add
pop
and
sbbl
cmp
push
lret
js
ljmp
mov
fidivrs
xchg
gs
mov
lea
or
cmc
sti
add
cmp
aas
xor
or
jg
mov
inc
push
adc
push
out
inc
cmc
mov
add
cmp
adc
or
incl
in
sub
cmp
push
mov
int3
lock
mov
pop
inc
pop
and
loopne
xchg
push
cltd
mov
leave
js
cmp
mov
mov
fwait
mov
lock
dec
inc
or
out
ljmp
iret
and
addr16
push
or
push
sub
inc
rorb
push
mov
xor
fcomip
jmp
dec
scas
fwait
pop
adc
and
mov
sbb
push
cmp
jo
dec
adc
aad
mov
xor
xor
lcall
mov
adc
mov
dec
ljmp
jle
add
pop
mov
test
push
clc
and
mov
jmp
les
scas
mov
int3
jecxz
mov
push
push
ret
hlt
mov
out
sub
xchg
cmp
cmp
mov
mov
fucomp
int3
add
test
xchg
sub
or
pushl
std
fdiv
mov
aam
cmp
jae
shrb
cmp
jg
decl
cs
mov
cld
testl
xor
sub
dec
jle
cld
pushl
les
xchg
ror
mov
mov
mov
ljmp
enter
and
fisttps
sub
pop
inc
inc
jae
roll
call
sahf
test
pop
lods
xchg
sub
test
int
aas
fcoms
xchg
pop
adc
dec
arpl
ljmp
shrb
cmp
mov
lret
outsl
jne
dec
les
enter
sbb
ret
decb
js
cltd
leave
xor
or
jg
insl
cmp
sbb
and
into
mov
aas
lret
repnz
dec
cld
ja
push
lock
xchg
icebp
add
rcl
mov
sub
or
mov
call
and
aam
push
in
enter
jge
adc
dec
outsb
add
fwait
loop
hlt
cld
jg
fstps
push
and
mov
nop
or
dec
mov
or
mov
stos
pop
sbb
xchg
shrl
mov
nop
jg
add
jle
cmp
inc
lds
faddl
decl
fs
dec
sbb
enter
xor
movsl
pop
adc
int3
repnz
jmp
ret
xor
mov
call
cmp
sbb
mulb
je
rcr
aam
push
and
std
decl
test
dec
push
mov
mov
icebp
inc
pop
fsubrl
loop
sub
adc
ret
jmp
sbb
loopne
cli
mov
leave
lock
pushl
xchg
inc
xor
clc
jb
cmp
jo
inc
loope
filds
sbb
sub
adc
test
push
mov
jg
cmp
mov
scas
das
loop
pop
sbb
and
push
mov
dec
clc
fwait
loopne
leave
fstpt
fbld
sar
inc
pop
xor
cmc
ds
aas
mov
pushl
enter
arpl
xor
fbstp
jmp
ja
cmp
push
mov
mov
icebp
pop
repnz
dec
mov
jmp
jl
leave
out
mov
in
jg
xor
push
negl
rcr
cmp
imul
push
ja
ss
jmp
fdivrl
es
bound
test
decl
ds
cmp
push
xor
xor
sbb
leave
sahf
jmp
jo
mov
mov
xchg
sbb
and
inc
pop
leave
scas
sbb
adc
ljmp
cs
push
int3
push
xchg
fldenv
or
ds
push
adc
nop
dec
pop
sbb
mov
scas
mov
repz
out
jnp
mov
icebp
mulb
jmp
pop
int
shrb
sub
fcomps
push
cmc
and
imul
push
cld
outsl
clc
jmp
into
nop
pop
xchg
mov
pop
or
adc
dec
push
pop
das
clc
cmp
sti
xchg
jo
fcomi
jbe
fcmovnbe
gs
ss
loopne
sti
mov
ljmp
mov
rcll
in
jbe
repnz
or
incl
pop
jmp
scas
cld
inc
mov
cmp
loopne
pop
mov
test
sbb
or
dec
xor
jae
add
push
push
pop
call
std
pushl
xor
push
nop
add
xlat
lods
or
mov
frstor
xchg
in
lods
ror
aam
mov
pop
dec
ljmp
decb
dec
jno
iret
in
std
cwtl
ss
jg
fcoms
cmpsb
adc
outsb
out
sub
das
aad
add
dec
cli
dec
mov
add
movsb
jg
lock
mov
mov
int
in
das
mov
push
scas
sbb
idiv
lcall
imul
int
xor
jp
xor
mov
dec
sub
adc
push
dec
call
mov
adc
sub
or
aad
jo
sbb
cmp
repnz
bnd
mov
scas
and
mov
sbb
pop
cmc
mov
sub
jmp
dec
out
mov
es
sub
xor
or
call
sbb
cmp
repnz
mov
ds
out
push
std
inc
ret
lods
ds
fnstsw
sar
adc
sub
pcmpeqw
mov
xor
dec
cmpsl
xor
pushl
in
adc
mov
cmp
rcr
dec
pop
xlat
jge
sub
jmp
nop
lret
pop
sbb
jnp
sub
addb
sub
inc
jo
sub
enter
hlt
push
jmp
xchg
scas
xchg
mov
mov
aam
xchg
ret
call
mov
xchg
mov
arpl
push
int
cli
or
call
outsl
pop
mov
jbe
addl
sbb
push
into
ds
dec
dec
call
std
lcall
icebp
push
or
loope
push
mov
je
shrb
shll
imul
popa
jmp
pop
or
std
ret
cmp
push
push
and
scas
or
pushl
xchg
mov
out
movsb
jmp
ret
jne
push
das
adc
lcall
out
dec
lret
push
sub
xorb
lock
pushl
daa
or
mov
mov
mov
xor
mov
das
cmpsb
pop
inc
ret
adc
aaa
cmp
mov
jl
repnz
push
stos
fs
jae
test
lea
jmp
jmp
inc
movsl
lods
std
push
or
lock
test
loopne
scas
clc
pushl
and
setbe
xchg
mov
lea
push
mov
sub
sub
jmp
dec
lea
jl
fbld
rorb
xchg
jmp
shll
mov
lret
hlt
icebp
outsl
mov
call
or
mov
insb
inc
notl
movsb
add
imul
pop
dec
test
ss
scas
into
fdivrl
mov
and
and
mov
pushl
push
mull
mov
adcb
pushf
xor
es
add
mov
pop
pushl
or
pop
mov
jbe
mov
xchg
add
mov
fadd
iret
frstor
int3
test
decl
jp
aaa
jmp
cmp
loope
shll
int
push
mov
cmp
out
ret
xchg
and
adc
lret
stos
push
pushl
add
pop
xchg
fldt
push
cmp
add
cmc
jl
hlt
push
std
je
cmp
ret
call
xor
cs
xchg
push
es
loop
pop
pop
add
popf
les
and
nop
xlat
addl
pop
add
mov
das
outsb
push
das
stos
xor
mov
mov
lret
outsl
add
mov
jmp
aad
orl
mov
adcb
xchg
push
outsl
push
fmull
xor
incb
fcomip
jg
inc
pushf
ud1
outsb
and
sahf
ljmp
and
data16
leave
inc
cld
jns
sahf
leave
mov
jmp
mov
add
jle
sbb
sub
jge
out
mov
call
stc
inc
xor
mov
push
cmp
xor
dec
ret
in
data16
decl
push
jns
icebp
jl
fidivl
outsb
fld
and
test
xchg
into
dec
sbb
cli
pop
or
out
nop
addb
xlat
shrb
cmp
mov
ljmp
cmp
mov
xor
repz
sub
dec
subb
cs
incl
cld
incl
dec
imul
popa
and
nop
movsb
cwtl
xchg
lea
jle
jmp
out
imul
push
xlat
ja
xchg
aam
sub
ljmp
into
sar
shlb
cmpsb
xlat
and
and
jg
pop
cmpsb
loop
mov
subb
pop
cmpsb
std
in
xchg
int
ds
mov
adc
pushl
pop
lcall
or
xor
in
mov
dec
adc
lret
popa
add
xchg
or
cmp
mov
sar
subb
sub
cmc
jmp
inc
dec
mov
mov
and
push
mov
or
in
push
rorb
insb
sub
sar
jmp
rcrb
das
cmpsl
je
push
cwtl
pop
push
ret
ret
xchg
rcr
movsb
stos
addr16
aad
incl
cmc
hlt
sub
jmp
mov
mov
loop
jg
call
in
mov
push
out
clc
jg
rolb
movsl
sub
adc
call
cwtl
push
xchg
mov
adc
mov
jmp
andb
rcrl
sbb
repnz
cld
das
scas
jg
push
inc
sbb
mov
jmp
test
test
cmovne
shlb
out
lods
incl
repnz
ds
dec
cmpsb
mov
insb
stos
mov
rcll
cmp
ljmp
dec
xchg
cmp
xor
mov
pushf
jne
insl
sbb
fcomip
adc
stos
inc
or
into
cmp
ret
mov
dec
idiv
and
int3
dec
cmp
lods
or
push
rcrb
lods
inc
cld
jmp
mov
decl
fidivl
sub
mov
mov
sub
popa
push
pop
inc
jmp
jg
int3
aas
jmp
test
je
call
loopne
inc
mov
sub
loopne
out
in
push
das
fnstcw
mov
xor
stos
in
inc
or
xrelease
dec
pandn
push
pop
mov
push
in
in
decl
loop
jb
add
cmp
fcomip
jmp
repnz
cmp
cmp
adc
aad
ljmp
pop
sti
jae
mov
sarb
sbb
or
sub
flds
decl
jp
out
fdivrl
add
dec
push
shll
xlat
jmp
add
inc
push
sbb
fbld
add
out
pop
into
es
pop
xor
sbb
lods
xor
pop
cmp
push
mov
ss
test
or
jne
aam
jg
cwtl
adc
xchg
mov
push
stos
and
xor
movsl
test
adc
pop
sbb
fdivrl
repnz
jb
jmp
inc
mov
cmp
std
ds
shl
leave
and
movsl
mov
jg
mov
cmp
xchg
cmp
adcl
inc
pop
test
mov
sbb
jbe
add
scas
ljmp
push
sub
cli
push
xchg
fisubs
push
and
or
pushl
iret
fdivrs
xor
ret
mov
push
cli
and
daa
clc
jae
stc
jp
jns
cmc
xlat
pop
or
cmp
mov
sbb
jecxz
lcall
flds
dec
push
and
push
adc
divl
sub
and
pop
cmp
or
mov
push
push
loopne
pusha
cmp
sbb
mov
fdivrs
add
fs
in
rcll
stc
in
test
loope
pop
add
jmp
das
pop
cwtl
sub
repz
fiaddl
int3
popa
xor
inc
jo
js
pop
loopne
pop
int
add
adc
pop
pop
cmp
inc
pop
jnp
xor
sub
pop
push
stos
xchg
fcomip
incl
cmp
sbb
fisttpl
mov
sbb
loop
js
out
rclb
mov
ficomps
nop
mov
js
cmp
adc
mov
add
mov
sbb
ljmp
lock
xchg
lods
mov
jae
add
dec
pop
mov
push
icebp
lods
or
mov
lcall
idivl
mov
lcall
mov
aas
or
lcall
xor
outsb
repnz
aaa
les
stc
dec
das
cmp
std
dec
adc
push
rcl
and
xor
nop
imul
mov
cli
xchg
fwait
scas
orb
rcrl
out
mov
insb
xchg
and
mov
pushl
ds
pop
jp
adc
enter
adc
cmp
movsb
das
cmc
in
pushl
add
rcr
sbb
popf
cmp
pop
sbb
ret
in
pop
mov
fistpll
sub
mov
sub
cmp
ljmp
sub
incb
stos
movsl
rolb
cmp
out
roll
inc
mov
nop
shr
dec
adc
loop
pop
outsl
aaa
aaa
data16
jg
in
jp
push
dec
mov
mov
mov
test
mov
leave
push
bound
cmc
jne
mov
pop
insl
jmp
les
push
jg
out
adc
imul
cli
xchg
dec
lods
je
cld
or
incl
jmp
sub
ja
cmp
pop
mov
sbb
jbe
inc
cmpsl
stos
or
cmp
xor
sbb
and
insl
clc
das
aaa
push
imul
jg
mov
push
in
push
inc
dec
mov
push
inc
iret
cmp
sub
pushf
cltd
push
int
push
es
pushl
pop
sbb
and
aas
es
es
ljmp
xor
aaa
push
xchg
ret
xor
lret
movsb
adc
es
incl
pop
xchg
and
pop
mov
push
out
sub
es
clc
cmp
push
repnz
into
shrl
sbb
lcall
es
inc
cmp
fbstp
loopne
loopne
ret
mov
lahf
into
mov
jbe
cmp
inc
aas
pop
gs
cmp
int3
mov
data16
xchg
or
jb,pt
dec
incl
or
adc
and
xor
scas
inc
not
xor
ljmp
pop
xor
shll
rorb
aaa
jns
mov
and
mov
pop
in
or
and
fidivl
xor
repz
lcall
ds
jo
pop
xchg
xchg
mov
in
or
push
dec
ss
adc
add
icebp
mov
sbb
out
clc
jg
mov
add
ret
sbb
pop
xchg
mov
mov
dec
xor
decl
aad
sbb
mov
jmp
xlat
mov
and
mov
sub
lcall
ljmp
add
stos
jg
aas
push
mov
xor
pop
add
push
add
decl
add
xor
mov
test
dec
jno
and
jg
mov
jecxz
inc
call
enter
or
adc
or
icebp
push
mov
repz
adc
das
jb
or
pop
push
dec
inc
scas
dec
jo
mov
cmp
inc
sub
fptan
cmp
repz
fwait
mov
jns
sbb
mov
inc
cmp
aad
xchg
repnz
fwait
xchg
pop
test
int3
push
fwait
mov
dec
test
decl
arpl
lods
shll
mov
xchg
scas
scas
push
xor
das
and
mov
xor
mov
dec
mov
ret
aad
xchg
bound
hlt
mov
loop
hlt
xor
aas
xchg
cwtl
xlat
pop
arpl
lods
push
add
in
clc
jnp
fistpll
mov
pop
rclb
imul
decl
jle
jp
out
xchg
clc
dec
sub
push
cmp
cmp
mov
cmp
decl
test
test
js
stos
pushf
mov
push
jae
or
xchg
inc
or
stos
push
movsl
loop
push
sub
addr16
lods
cltd
inc
iret
mov
sarl
fcmovbe
xor
or
daa
call
mov
xor
jae
and
int
iret
pop
mov
arpl
decl
cmp
stos
mov
sub
jno
xor
sti
mov
xchg
int
je
cmp
fisttpl
pop
out
fs
popf
mov
push
cmp
cmc
popf
imulb
lret
lds
loopne
imul
jmp
das
xor
test
loop
push
inc
cltd
shlb
and
or
add
xor
cmp
arpl
inc
jne
and
cld
pop
mov
inc
or
shrl
cli
aaa
and
sub
cld
dec
jle
clc
pop
mov
mov
outsl
in
popa
add
mov
lret
or
cmp
xchg
inc
adc
ret
icebp
mov
incl
fcmovnu
inc
cld
cmp
mov
adc
out
out
call
cmp
std
pop
sub
xchg
and
sub
adc
push
pop
filds
jmp
aas
xor
ret
repz
insb
stc
cmp
cmc
inc
sub
daa
addb
aas
mov
call
jmp
push
inc
pop
mov
lcall
dec
and
jmp
push
mov
xchg
jb
mov
mov
addr16
repz
pop
add
cmp
inc
inc
gs
sub
es
cmp
pop
das
inc
cmp
sbb
xchg
leave
sar
mov
xor
stos
ss
jae
cld
push
ljmp
push
in
ds
xchg
push
xchg
cld
lods
sahf
push
push
adc
std
or
xchg
jb
popa
add
xor
hlt
ds
mov
push
repz
hlt
sbb
ljmp
out
add
adc
movsl
mov
clc
mov
cs
dec
int3
lahf
and
lret
and
bound
sub
incb
fwait
sub
ds
xchg
and
inc
cmp
cmpsl
inc
pop
enter
pop
sbbb
xor
push
test
push
mov
mov
inc
shrl
inc
sub
pushl
jae
and
and
dec
dec
jp
ds
sub
xor
inc
inc
adc
sub
shrb
loope
inc
into
fnsave
movsb
sub
cmpsb
daa
sub
or
cld
pushl
cmp
rcrl
xor
ss
pop
mov
call
in
ficoms
shll
pop
push
and
xchg
push
ds
push
xchg
inc
and
sbb
lahf
jle
mov
lds
fistl
push
aam
ds
movsb
push
adc
mov
cmp
gs
lcall
pushl
aam
mov
inc
test
pop
adc
or
pop
repz
pop
jmp
adc
fwait
test
lds
pop
sbb
cmp
xor
data16
mov
mov
cltd
adc
mov
sub
and
push
adc
mov
iret
repnz
mov
dec
repnz
out
mov
push
xor
or
lcall
je
aaa
iret
mov
aas
out
pop
lcall
sub
push
jo
inc
es
jl
aas
sub
pop
repz
stos
mov
fcoml
push
mov
ds
xor
mov
push
push
rolb
imul
insb
lahf
xchg
sbb
cmpsb
scas
call
cld
aam
pushf
sub
ljmp
loop
mov
in
pop
mov
xchg
xor
ret
movsl
mov
ret
lcall
incl
xchg
jno
push
sub
ljmp
xor
data16
cs
pop
pop
jge
data16
and
sarb
repz
inc
adc
aaa
lret
sub
mov
cld
push
xchg
loop
fcmovbe
mov
movsb
popa
out
cmp
ljmp
div
mov
sub
fimull
mov
outsb
sub
in
icebp
cmp
incl
cs
test
push
and
scas
jnp
mov
or
lods
sbb
and
outsl
inc
xor
test
inc
fsubl
jmp
ror
jb
fs
je
jg
scas
xchg
arpl
push
das
and
cmp
adc
xor
decl
imul
inc
dec
pop
ds
xor
adc
and
mov
fldenv
xchg
xchg
mov
stc
test
xchg
and
and
data16
xor
or
andb
xchg
andl
pop
push
xor
call
jmp
sar
incl
ficoml
mov
mov
cwtl
mov
push
cmp
jg
dec
data16
fadds
das
rcrb
mov
sub
shl
jg
pushl
sbb
or
mov
addr16
pusha
and
push
sbb
mov
fistl
and
push
les
enter
leave
cmpsb
adc
fisubl
enter
mov
neg
lock
stos
push
shrb
add
test
test
movsb
mov
lcall
das
mov
xchg
movsl
add
add
addl
pop
gs
in
in
jle
idiv
insl
mov
and
xor
jl,pt
nop
pop
shrl
hlt
icebp
call
pop
mov
push
mov
mov
jb
push
into
shlb
insl
mov
mov
repz
xor
jecxz
ret
xor
cmpsb
js
push
cli
stos
push
daa
mov
lcall
push
ja
adc
flds
popa
jno
mov
call
xor
rcl
leave
jle
adc
mov
jnp
jnp
rcrb
fstpt
xchg
cli
mov
fnstsw
in
xor
ret
sbb
sbb
mov
dec
adc
or
cmpsl
mov
fstpt
jne
jg
mov
sub
test
ret
cmp
inc
or
xor
inc
rolb
add
lcall
jbe
mov
pop
mov
je
ret
xchg
xchg
inc
insl
sti
jae
clc
mov
mov
sub
insl
shlb
mov
je
in
dec
push
nop
dec
dec
jae
cmp
fwait
ljmp
mov
insb
mov
xor
inc
outsb
inc
int3
push
jb
xor
out
inc
ljmp
cmp
enter
sarl
push
push
out
jmp
call
aad
repnz
pop
hlt
imul
icebp
repnz
jg
cmp
push
fwait
lods
jns
inc
pop
clc
jae
mov
cli
das
clc
adc
mov
decl
imul
es
hlt
push
fiaddl
xchg
cli
daa
inc
pop
aad
dec
cmpsb
out
sbb
jecxz
cmpsb
mov
adc
out
sarl
decl
iret
insl
pushf
leave
aam
cmp
and
lds
sbb
insl
mov
jae
sar
decl
in
adc
sbb
xchg
mov
inc
repz
cmp
xor
outsb
xor
xor
paddusw
clc
call
pushf
es
adc
scas
lock
xor
fdivr
decl
dec
add
jl
mov
or
jbe
mov
or
decl
adc
xor
jle
sbb
das
add
test
ja
ljmp
cmpsb
out
jmp
dec
dec
add
movsl
in
fcmovbe
mov
jp
push
popl
xchg
adc
jp
decl
addr16
addr16
int3
and
mov
addr16
stos
adc
add
das
or
ljmp
mov
inc
test
pusha
mov
hlt
ret
jae
or
outsb
or
bswap
pushl
fwait
jle
and
out
xchg
mov
pusha
test
mov
mov
scas
push
lods
lods
xor
mov
ljmp
lods
dec
xchg
nop
mov
fimull
or
xchg
jg
out
push
into
int3
or
call
movaps
sub
sbbb
pop
mov
in
mov
xchg
lea
call
mov
add
dec
pop
outsl
sbb
repnz
push
pop
lret
cmc
and
popa
aad
movsl
mov
mov
lcall
lods
scas
dec
repnz
mov
mov
pushf
adc
fists
dec
inc
int
mov
icebp
call
mov
js
das
out
sbb
mov
les
test
xchg
pop
pop
sub
pop
sahf
pandn
cld
push
addps
test
cs
call
push
fs
and
aas
sahf
adc
cltd
hlt
cld
adc
inc
adc
decl
mov
out
mov
dec
aam
fwait
lds
mov
xorl
ljmp
out
movsl
sbb
jg
push
sub
in
scas
out
ljmp
cs
fcmovne
adcl
xchg
int
adc
ljmp
rcr
pop
cs
mov
jl
cmp
adc
lds
lcall
mov
xor
les
adc
mov
mov
add
lcall
loope
add
out
int
mov
fsubrl
pushf
aad
pop
add
call
dec
push
ds
inc
les
mov
pop
mov
sarb
and
stc
cli
ja
aam
push
dec
outsb
call
mov
mov
mov
and
hlt
test
xor
call
imul
pop
cld
xchg
mov
xchg
or
mov
mov
cld
ret
mov
or
jmp
cmp
mov
jge
lcall
or
orb
add
or
or
test
fwait
bound
call
andb
dec
push
loopne
lea
mov
xchg
fidivs
std
mov
mov
in
pop
imul
mov
ret
inc
add
pop
inc
sahf
iret
test
mov
lea
push
cld
sub
push
or
call
call
mov
lock
je
scas
icebp
dec
mov
or
incl
fisttpll
xor
pop
shlb
cmpsl
icebp
inc
imul
inc
cmc
lcall
jo
aas
mov
inc
mov
cmpsb
sbb
fcoml
push
push
lcall
movsb
add
js
pop
mov
inc
xchg
inc
sbb
out
clc
sbb
ret
or
mov
movsl
xchg
adc
add
mov
fwait
call
mov
push
jne
cmpsl
std
push
dec
je
mov
test
flds
loopne
movsl
scas
dec
jnp
subl
inc
test
push
pop
sub
adc
pop
cld
jmp
mov
add
mov
test
jg
dec
scas
fsubl
xor
push
xor
add
inc
inc
jmp
sbb
rol
jmp
test
xlat
sub
sub
cld
enter
and
pop
mov
or
in
jmp
popa
push
outsb
add
imul
mov
fdivrs
cwtl
dec
cmpsb
and
fwait
mov
sbb
ljmp
pusha
jmp
dec
shll
xor
movsl
lcall
inc
imul
push
nop
pop
sub
fstpl
mov
lret
repnz
mov
popa
lds
cli
outsl
push
jp
mov
lock
ljmp
icebp
jmp
add
xlat
cmpsl
mov
adc
scas
adc
test
imul
sub
call
outsl
xchg
lret
xor
or
add
lcall
mov
cmpsb
mov
mov
mov
imul
clc
pushl
inc
mov
movsl
imul
call
xchg
lds
jg
lea
dec
mov
ljmp
js
sub
jbe
stos
scas
clc
gs
mov
mov
mov
es
and
int
and
pavgw
cmp
jmp
xor
shll
xchg
test
jle
outsb
data16
lcall
xchg
pop
and
pushf
jno
dec
xor
test
jge
mov
sbb
jg
inc
call
les
adc
adc
sub
xchg
inc
xchg
adc
cmpsl
sahf
std
lds
inc
jno
call
test
test
stc
fidivrs
inc
leave
dec
mov
in
pop
inc
mov
call
or
and
ljmp
sub
stos
mov
mov
and
jbe
push
inc
aad
and
jo
jns
outsl
ds
push
mov
test
loop
ljmp
xchg
fcompl
push
push
loopne
repnz
stos
push
or
or
inc
test
mov
push
xchg
and
ss
ljmp
mov
sub
xor
push
pushl
outsb
jbe
mov
call
bound
xchg
inc
loope
inc
dec
sub
scas
out
mov
inc
push
lcall
add
dec
push
sub
and
sub
jnp
pop
sbb
call
std
inc
sub
insl
sub
mov
shlb
push
fimuls
ret
in
call
nop
shrl
mov
popa
fwait
int3
add
mov
lahf
pop
push
mov
ljmp
jnp
repz
arpl
leave
mov
jne
lret
mov
in
shll
pop
sub
aad
or
cmp
addr16
dec
mov
pushf
pop
mov
test
lahf
mov
cmp
repz
and
pushl
ss
sub
test
lahf
test
dec
pop
aam
scas
clc
lcall
popf
mov
lods
cltd
shll
adc
push
mov
inc
test
dec
lcall
inc
pop
iret
jb
or
ss
pop
mov
mov
lret
inc
lods
xor
lcall
sahf
inc
ret
xor
jle
dec
mov
cmp
rorl
xor
mov
adcl
jb
or
push
sub
jge
in
into
stos
sub
test
adc
pop
and
lods
pop
xchg
cmp
xchg
fsubl
mov
lods
inc
cwtl
cmp
sbb
dec
xchg
jnp
inc
sub
sub
test
ljmp
pop
xor
loop
hlt
jmp
mov
shrb
xchg
xchg
cmp
jl
lret
cmp
or
fists
dec
mov
mov
cli
scas
add
imull
mov
adc
mov
jmp
mov
xor
insb
jne
cmp
adc
adc
lock
push
xor
mov
cmpsb
nop
push
clc
push
enter
incl
xor
pushl
fs
xor
loop
cmpsb
or
lods
adc
pop
jl
mov
jne
jg
scas
xlat
out
cs
std
mov
decb
movsl
cmpl
sbb
adc
jg
icebp
fisttps
and
xchg
nop
lahf
aas
cmp
filds
fcoms
pop
push
pop
push
dec
rcr
mov
add
fsub
in
xor
jg
cmp
cwtl
nop
lea
mov
or
in
shlb
call
push
xor
sub
test
sahf
inc
fdivrp
dec
mov
cmc
fidivrl
repz
loop
cmpsb
mov
lcall
mov
lcall
cltd
aas
push
pop
adc
push
popf
pop
fsubp
cltd
mov
xchg
sub
or
scas
mov
cli
fldt
arpl
rcrl
add
out
enter
inc
hlt
pop
aam
cld
push
ljmp
mov
enter
fsts
push
call
test
ljmp
cmp
pop
fcmove
push
mov
cltd
pop
push
cmp
adc
in
fwait
leave
pop
xor
jb
aas
pop
xlat
push
push
push
xlat
test
pusha
push
jg
push
push
fimull
inc
leave
dec
jae
out
mov
jp
ror
xchg
dec
popf
sub
dec
shl
fdiv
call
in
dec
lods
push
dec
jae
arpl
xor
push
pop
xchg
out
push
aam
jl
cmc
adc
data16
out
push
push
dec
into
mov
push
xlat
lret
fwait
push
inc
nop
fs
cmc
xor
aas
data16
call
movsb
xchg
mov
fadd
push
mov
xchg
stos
mov
pop
and
ds
int
in
jo
push
outsb
jle
jp
loopne
sarl
or
ljmp
xchg
lods
xchg
add
test
int3
or
cmp
xor
and
and
ljmp
mov
repnz
mov
xor
aas
icebp
fwait
int
gs
push
lret
mov
and
insl
and
mov
test
pop
mov
out
pop
bound
sbb
pop
ljmp
ja
insb
push
cwtl
into
bound
test
aam
call
scas
push
push
adc
sahf
fidivl
daa
adc
cmpl
into
fildll
lret
adc
out
dec
push
jae
mov
adc
pop
pop
adc
ja
decl
adc
or
lods
fxtract
ret
and
aas
and
lahf
rorl
jge
pop
outsl
jg
outsl
cwtl
leave
adcl
pop
aaa
adc
lods
lea
out
pop
popf
sahf
iret
jg
std
mov
fdivs
call
popa
fcom
inc
fucomi
dec
dec
stos
dec
call
mov
loopne
aam
fistpl
jo
and
or
mov
fst
hlt
add
sbb
sbb
daa
and
jb
insl
dec
jb
gs
hlt
push
push
pushl
mov
sbb
ljmp
adc
std
dec
xorl
sbb
cs
cmpsl
xchg
inc
adc
pusha
jns
mov
call
mov
aad
mov
jnp
lret
mov
adc
inc
loopne
sub
pop
loopne
mov
mov
outsl
mov
icebp
sbb
loopne
fidivl
adc
ret
cmpsb
jb
pop
ss
xlat
pop
clc
jmp
mov
dec
pop
enter
xchg
insb
dec
fidivl
dec
mov
pop
mov
dec
out
incl
ljmp
push
mov
hlt
inc
push
shr
test
pop
push
test
call
xor
xchg
push
xchg
mov
or
lcall
jb
dec
in
aad
pop
ljmp
sbb
cmp
scas
cli
call
pop
aam
inc
cmp
repz
cwtl
shll
mov
test
dec
repz
std
call
fiaddl
push
sar
int3
aam
add
enter
loopne
call
idiv
mov
outsl
pop
mov
xchg
fcoms
or
pop
jb
dec
out
and
jb
out
iret
mov
pop
call
fs
or
adc
arpl
fimull
outsb
cmp
xorl
into
dec
loopne
jmp
jno
fs
outsl
xlat
inc
aas
sub
fidivrl
xchg
ja
sti
xor
jno,pt
jns
sub
fprem
lock
cmpsb
adc
movsb
mov
mov
and
std
inc
pop
xchg
fs
cli
or
and
push
sub
je
cmpsb
push
gs
pop
mov
xor
std
sbb
sahf
xor
and
mov
nop
ljmp
ds
or
fsincos
out
stos
mov
es
std
lds
sti
es
pop
insl
mov
mov
mov
mov
fdivrl
call
xor
pusha
bound
push
dec
xor
sbb
mov
mov
dec
out
sarl
ss
orl
lds
xor
inc
rorl
xchg
addr16
mov
ljmp
xor
ljmp
mov
jnp
rorl
pop
push
jg
add
pop
js
inc
into
jmp
or
jmp
imul
mov
in
ljmp
jmp
rcrb
jmp
push
pop
test
xchg
inc
jl
cmp
in
rorb
push
int3
into
ljmp
xor
imul
mulb
mov
call
jnp
pop
jae
sub
jge
movsb
clc
sbb
dec
stos
fidivrl
bound
fwait
inc
loopne
or
flds
lahf
rorl
ljmp
cli
xchg
rcrl
jnp
jnp
xchg
lret
gs
clc
dec
jne
inc
mov
xchg
adc
int3
test
xor
out
mov
xchg
stos
fldcw
or
pop
inc
scas
xor
js
dec
mov
shrb
xchg
jg
xor
fwait
sub
incl
push
cli
cmp
das
je
pop
cwtl
bound
test
jnp
imul
cld
int3
out
out
clc
sbb
in
mov
ljmp
arpl
inc
mov
sti
pop
cmp
outsl
pop
gs
inc
cmpsb
popf
pop
inc
mov
or
lods
popl
ret
in
ljmpw
and
outsb
push
into
scas
cmpsb
xor
enter
fcomip
scas
scas
dec
aam
push
adc
mov
add
jl
rclb
sbb
jmp
cs
loope
xor
cmc
xor
adc
clc
jae
sbb
jp
cmp
jo
ds
rcrb
xor
push
cmpl
cmp
dec
sub
sbb
or
in
mov
sub
xor
mov
dec
sbb
sarb
push
inc
scas
ret
pop
aad
ret
enter
dec
rorb
cmpsl
add
out
pop
jle
mov
mov
sahf
and
rcl
stos
out
xor
jmp
jg
pushf
inc
push
outsl
sub
fstps
adc
sahf
rcr
into
jg
ja
lods
or
or
pop
fwait
jl
pop
iret
sbb
or
lcall
lcall
jb
jae
mov
enter
dec
pop
clts
mov
inc
mov
incl
dec
inc
leave
decl
lods
dec
in
inc
cwtl
jbe
aad
ja
add
jl
out
mov
ljmp
fucomi
sub
xchg
sub
inc
or
fnsave
mov
cmp
rcl
pusha
lahf
int
pop
jg
sarb
and
lock
fucom
sbb
mov
aas
jno
repz
inc
cmpsl
mov
fwait
xor
cmp
movsb
nop
pop
ja
cmp
xor
ljmp
jmp
sarl
dec
cmp
es
popa
test
sti
adc
nop
lods
and
std
call
mov
cmp
rclb
dec
sbb
mov
addl
mov
add
xchg
jae
aad
add
jb
inc
xchg
xchg
xor
xchg
xchg
into
repnz
inc
xchg
mov
adc
and
xchg
jae
loope
jae
mov
adc
lock
mov
push
sbb
xor
add
sahf
mov
data16
ljmp
out
sbb
fsubrs
std
int3
dec
arpl
out
das
xor
mov
push
fstpt
ljmp
insl
xchg
shrl
xchg
xor
adc
sub
rep
mov
int3
cmpsb
out
mov
pop
sub
call
adc
mov
mov
lods
test
and
lcall
lods
dec
sahf
xchg
jle
xchg
in
js
sti
movsb
pop
daa
pop
mov
adc
incl
sahf
test
test
push
sub
dec
jns
xchg
inc
je
xchg
or
or
cmp
mov
filds
std
cmp
fdivrp
cmc
arpl
leave
jbe
clc
enter
jg
inc
in
push
jg
lcall
sub
mov
fidivl
shll
push
cmpl
dec
hlt
mov
sub
scas
dec
rolb
add
ret
ret
ljmp
decl
in
lods
push
mov
and
subl
inc
cld
int
push
lock
xchg
or
mov
daa
nop
add
jmp
cs
sub
loop
adc
mov
and
mov
in
stos
mov
push
xchg
idivb
rcrb
mov
xchg
bswap
and
lcall
js
lret
test
cmp
test
dec
aam
dec
ljmp
ret
mov
lcall
loop
xchg
iret
sub
push
push
inc
xlat
iret
or
xchg
sar
imul
ret
dec
and
xor
or
push
nop
js
das
xchg
out
dec
adcb
lcall
das
push
sbb
mov
lds
vpsraw
cmp
push
sub
fistpll
lcall
mov
enter
xor
test
xor
jb
push
sub
xor
xchg
xor
in
repnz
jmp
les
incb
xchg
cmpsl
fsts
mov
fstl
scas
out
stos
fmul
mulps
mov
adc
sub
mov
clc
mov
pop
stos
out
out
sbb
jmp
sbbb
mov
inc
sub
add
jae
fisttpll
mov
mov
cmp
push
addl
test
cld
shll
lds
mov
clc
push
xchg
push
sub
arpl
dec
inc
push
xor
pop
adc
push
jmp
mov
lcall
mov
in
cmpsb
shlb
in
repnz
inc
stc
mov
js
and
push
sarb
lock
inc
hlt
cmp
ljmp
cwtl
inc
lods
cwtl
idiv
ljmp
fnstsw
cmp
fidivrs
das
movsl
and
jmp
sub
fwait
cmp
xchg
fnsave
outsb
pushl
aam
cwtl
jmp
mov
dec
nop
push
das
fistpl
dec
mov
lock
ljmp
push
push
pop
jp
lods
clc
push
xchg
mov
in
fbstp
loope
nop
jb
in
flds
fbstp
xchg
adc
test
sahf
adcb
hlt
es
lcall
xor
add
jg
lock
sub
jg
cmp
jmp
xchg
test
jl
xlat
out
fidivl
stos
daa
xlat
jp
incl
or
xchg
jne
and
mov
cli
int3
jmp
imulb
inc
sbb
xlat
das
add
dec
and
jle
xor
ja
data16
sbb
mov
mov
cwtl
xchg
mov
insl
test
push
test
fcmovnbe
jae
sbb
incl
mov
inc
call
jb
sub
rcll
test
xor
pop
repnz
vaddsd
push
cmp
pop
sbb
xor
sbb
sub
lcall
dec
fwait
lcall
loopne
dec
cmp
sbb
repz
inc
adc
incl
stos
xor
jns
mov
ds
pop
lock
pop
xor
xchg
mov
test
ja
aas
cmpb
dec
or
movsl
jg
mov
aam
cmp
xchg
pop
adc
lods
mov
jmp
int3
mov
push
xchg
lret
mov
cmc
mov
sbb
jge
outsl
faddp
pop
pusha
adc
push
cmp
mov
decl
pop
sub
and
in
cmp
and
sbb
mov
push
decl
mov
jno
icebp
or
mov
xor
mov
jae
ljmp
sbb
mov
rorb
mov
stos
in
push
jmp
cmpsl
lahf
int3
lcall
arpl
movsb
out
movsl
dec
stos
sub
push
mov
jmp
and
inc
and
ljmp
jne
fs
dec
jb
dec
nop
jp
imul
adc
leave
mov
jmp
xor
dec
cmpsl
repnz
mov
inc
daa
aaa
xchg
lcall
mov
cmp
outsb
leave
sbb
dec
cmp
pop
xchg
mov
jnp
neg
icebp
call
mov
rclb
stos
sub
cmp
scas
clc
jmp
cmp
sbb
cmpsl
pop
movsb
adc
sub
ficompl
push
incl
jae
xor
add
sti
push
xchg
jnp
test
push
pusha
push
mov
das
cs
pop
hlt
dec
dec
bound
pop
jnp
data16
out
xor
lret
mov
sar
adc
outsb
daa
jb
flds
cld
fisttpll
push
test
mov
or
incl
ja
mov
dec
dec
dec
push
popa
mov
dec
xchg
sbb
lcall
add
ljmp
repnz
sahf
mov
xchg
dec
xor
addr16
push
push
fsubr
mov
jecxz
jge
sbb
arpl
int3
cli
adc
pop
outsl
push
cmp
cmc
das
cmp
cmp
aas
pop
iret
jnp
das
shrb
dec
cld
lahf
int
subl
pop
pop
dec
out
call
rcr
mov
adc
in
mov
cmp
mov
xor
xchg
pop
mov
ljmp
pop
daa
je
add
jnp
adc
aas
and
mov
sbb
sbb
lcall
mov
dec
out
in
inc
ss
jb
adc
aaa
js
std
cmp
push
sbb
fxch
xor
xlat
xor
call
andb
mov
pop
xor
push
add
adc
iret
hlt
push
xchg
jg
inc
arpl
decl
mov
repnz
xor
dec
cli
lods
sub
cmp
cmp
xchg
mov
pushl
mov
neg
adc
dec
sub
push
jnp
pop
pop
cmp
jnp
daa
mov
std
pushl
xor
push
shll
sub
inc
sbb
and
push
push
ljmp
fdivs
xchg
pop
mov
add
and
lods
roll
jns
data16
or
fwait
mov
push
mov
mov
xchg
shr
cmp
fildll
sbb
jg
adc
jne
mov
and
movsb
xor
decl
add
test
mov
ss
aad
sub
outsl
stc
pop
push
int
icebp
call
les
sarl
ljmp
xchg
push
cwtl
mov
mov
push
sbb
xchg
sarl
or
or
rolb
dec
adcb
daa
sub
xchg
xchg
xchg
and
shrl
lcall
lahf
mov
daa
lret
pop
mov
pop
rcrl
dec
adc
dec
jb
test
push
adc
dec
jae
xor
in
out
lret
incl
pusha
jp
mov
rolb
daa
inc
push
rcrl
scas
inc
mov
mov
pop
dec
pop
ja
shrl
xchg
mov
clc
mov
lea
xchg
push
in
push
lcall
pop
fisttpl
adc
mov
pop
ds
mov
and
clc
push
pushf
fs
jge
mov
out
enter
inc
fisubrl
ljmp
pop
hlt
push
mov
lods
clc
pop
cmc
scas
loope
pusha
pusha
imul
pop
pop
lock
pushl
int3
cld
daa
dec
das
test
fisttpl
negb
pop
sub
incl
testl
shll
dec
mov
and
call
adc
pop
cli
rcl
movl
pop
mov
lahf
pop
sbb
or
xchg
adc
jg
call
or
enter
lods
loope
inc
push
lea
roll
lret
idiv
mov
out
cld
add
sbb
xchg
mov
fisubl
jo
mov
fisubrl
ljmp
adc
fildl
orb
xor
jmp
mov
outsl
aad
dec
push
scas
int
sub
shll
sar
lcall
add
sub
loop
sbb
cmp
pop
inc
in
push
fwait
xor
imul
mov
negb
mov
jno
xchg
xor
dec
jno
inc
jp
pop
filds
cmpl
data16
ja
lock
or
pop
repnz
mov
cltd
pop
add
mov
aad
pop
bnd
es
mov
out
je
outsl
cmp
outsl
jno
cmp
xor
jmp
lret
and
push
into
xchg
mov
or
incl
push
fucomip
nop
mov
aas
pop
lock
mov
sub
or
sbb
mov
sbb
popa
aaa
push
jb
call
pop
push
xor
bound
ret
rcr
jo
pop
pop
ret
jns
xorl
jo
jg
sub
cld
shll
add
adc
push
sub
mov
into
sbb
sar
ljmp
dec
add
mov
add
popl
mov
and
call
mov
cmc
adc
mov
out
or
es
mov
incl
stos
icebp
inc
mov
adc
dec
xor
adc
add
mov
pop
out
jae
decl
arpl
sub
adc
decl
ds
das
mov
xchg
sbbb
jg
xchg
ss
rclb
cmpsb
popf
jp
xor
fmul
les
test
adc
push
dec
xchg
js
and
sbbb
popf
pop
fadd
xor
les
dec
sbb
jg
incl
test
in
test
mov
xchg
ficoml
pop
frstor
in
xor
cvtps2pd
pushf
test
fnsave
js
xor
and
dec
pop
dec
cmc
sbb
movb
call
xchg
pop
repz
fcomps
lcall
nop
xchg
ror
lret
clc
incl
inc
pop
sbb
add
ds
mov
aas
in
rcll
push
decl
enter
mov
cmp
sbb
and
pop
sub
popf
mov
fdivrs
add
outsb
add
xor
pushl
test
mov
jl
sub
xlat
lock
fbstp
mov
add
push
popa
mov
nop
or
sub
dec
inc
data16
or
mov
mov
filds
jg
xchg
pop
pushf
pop
adc
push
cmp
xor
and
insb
imul
test
ljmp
mov
repz
push
test
stc
fidivs
cld
sarb
jb
pop
jb
dec
jb
xor
add
aad
sub
jg
mov
pushf
jb
mov
xor
pushl
mov
or
inc
push
cmp
fstp
lods
loope
add
xchg
and
subb
popa
cmp
xchg
out
jno
mov
mov
xchg
mov
je
sti
outsl
cli
pop
insl
push
jecxz
decb
test
repz
mov
das
sar
push
xchg
mov
ror
xchg
sub
pop
nop
mov
fs
outsb
pop
push
idiv
incl
enter
flds
imul
and
mov
cs
fcomip
call
icebp
pop
test
fiadds
arpl
cmc
clc
jae
rcll
cmp
incl
sbb
scas
jg
cmp
dec
out
pop
jl
repnz
jbe
jns
decl
scas
leave
xor
mov
and
fdivr
imul
mov
daa
mov
fidivrs
push
shlb
dec
int3
xchg
dec
out
outsl
mov
call
lds
mov
test
jg
add
les
sub
inc
push
decl
pop
sub
pusha
insl
es
push
out
pop
mov
scas
pop
inc
xchg
sbb
pop
lahf
pushl
dec
iret
xlat
sbb
xor
add
jle
add
jg
cmc
out
jmp
out
pop
or
sub
sarl
cmp
push
in
std
add
push
rol
add
xchg
xlat
jmp
fiadds
lret
enter
std
cmp
push
mov
ljmp
fcoml
nop
popa
mov
je
loope
lret
sub
mov
int3
pop
mov
fildl
push
cld
or
daa
ss
incl
int3
jb
shll
dec
and
mov
fldl
in
xlat
scas
sub
and
dec
not
jmp
mov
push
inc
adc
or
orb
cs
decl
xor
les
add
rolb
push
in
outsl
call
sbb
mov
cs
or
sub
adc
or
insl
in
sar
ljmp
push
and
adc
or
ret
cld
xchg
lea
adc
mov
push
into
or
cld
xchg
mov
jle
iret
jnp
jl
sub
test
mov
push
pop
in
ljmp
inc
nop
cmp
ret
pop
bound
xchg
or
cmp
pop
rolb
adc
jg
call
insl
stos
in
mov
loope
fidivl
xchg
jnp
lods
inc
mov
stc
int
push
mov
and
or
scas
clc
incl
cltd
xchg
je
mov
adc
rcll
mov
mov
loope
jns
sbb
cld
push
sub
pusha
and
mov
enter
inc
sub
mov
pop
xchg
in
push
pop
flds
jg
mov
cli
xor
aas
cmp
sbbb
push
xor
or
les
pushf
push
xchg
push
cs
xchg
jnp
adc
pop
jno
ja
lcall
push
arpl
mov
aad
lods
out
inc
or
cmp
jbe
in
lcall
pop
push
outsb
rcll
push
lods
and
lea
inc
pushf
or
jbe
mov
fldt
push
xor
adc
pop
push
scas
xor
push
mov
repz
push
xor
inc
enter
dec
shll
jle
scas
ljmp
mov
sarl
cmpl
dec
out
pop
sub
adc
adc
lods
mov
xor
inc
out
xchg
aas
xor
test
inc
cld
cmp
xchg
mov
pop
jb
and
xor
sub
mov
xchg
outsl
pop
xchg
out
xorb
jmp
mov
inc
pop
push
pop
pop
push
lock
int
ljmp
inc
popf
add
xor
into
dec
xor
idivb
push
jb
xor
ljmp
repnz
push
jne
rcll
mov
fildll
addr16
mov
or
aad
shrl
sbb
rorl
cmp
pusha
fcoms
xlat
incl
arpl
add
pop
add
cs
sub
movsl
xor
inc
js
add
jecxz
lcall
jns
and
or
pop
sub
fnstcw
cmpsb
xchg
sub
negb
mov
sarb
mov
scas
push
int
dec
or
lret
insb
aaa
dec
push
sbb
lock
push
stos
push
pushf
loopne,pt
push
mov
hlt
into
push
outsl
adc
jo
push
xchg
rorl
inc
adc
movsl
leave
mov
push
mov
mov
pop
insl
lods
jecxz
mov
insl
in
jmp
or
ja
cmc
xchg
test
jnp
lret
jmp
test
imul
cmp
es
rclb
or
cmp
popl
ljmp
jle
test
xchg
pushf
rcrl
adc
test
mov
call
roll
or
jge
movb
and
les
dec
out
ljmp
ret
jne
test
scas
rcrb
pop
push
pop
nop
fstl
pop
lods
inc
pusha
scas
cs
dec
mov
xor
out
inc
js
je
lcall
or
and
mov
repnz
jle
incl
xor
adc
shll
xor
xor
cwtl
cmp
dec
out
call
pop
and
inc
inc
adc
mulb
mov
decl
enter
sbb
push
mov
cmpsb
decl
lock
cs
mov
int
vhaddps
aad
cld
push
mov
cltd
outsb
clc
jl
dec
or
pop
fidivl
cmp
mov
mov
mov
call
movsb
aam
gs
cs
mov
dec
fdivrs
pusha
icebp
je
sbb
pop
sbb
sub
idiv
decl
and
pop
push
getsec
stc
cmpsl
mov
ja
stc
movsb
sbb
push
lcall
cmp
daa
das
loope
rorb
add
repz
push
test
ficompl
mov
inc
push
in
or
pop
imul
mov
ss
fwait
xchg
mov
xchg
pop
and
aam
call
ljmp
js
cs
xchg
push
inc
jns
mov
aam
mov
adc
sbb
leave
das
repz
or
inc
clc
dec
jle
popa
push
xchg
jae
xor
pushl
inc
sub
adc
dec
cli
int3
push
stos
nop
xor
mov
fstl
jl
ja
aad
mov
push
lods
adc
mov
addr16
sub
sbb
cwtl
cmp
in
mov
adc
ffreep
push
xchg
cmp
mov
in
push
mov
dec
dec
jp
std
incl
daa
enter
je
popa
adc
xor
or
jne
mov
lcall
aam
jne
cmc
sub
lods
lods
xchg
cmp
ljmp
jb
inc
ja
outsl
jl
xlat
jmp
push
test
jmp
inc
cmp
mov
cmp
repz
in
mov
cmc
mov
jo
ja
mov
mov
jns
push
adcb
jge
aam
jecxz
sub
fsubs
adc
pushl
mov
aas
mov
orl
jg
dec
lock
lods
mov
push
ljmp
repnz
je
jmp
lods
aam
dec
xchg
dec
test
adc
lock
xor
jmp
test
fdivs
dec
sti
push
nop
pop
xor
push
insl
or
pop
jmp
push
mov
bound
mov
cwtl
divb
xor
ffree
push
scas
xor
mov
cli
iret
and
mov
pop
pop
ret
fcoms
ret
pop
sbb
repz
nop
pop
les
and
mov
sbb
jbe
inc
popf
xor
xor
test
nop
dec
das
xchg
or
sub
and
xchg
or
pop
das
pop
ss
lods
jae
or
icebp
cmp
mov
dec
iret
push
jbe
ljmp
repnz
pop
cmp
xchg
das
test
decl
adc
inc
mov
pusha
cmp
xchg
fists
or
popf
jle
stos
and
testl
test
in
lea
scas
cmp
jl
mov
inc
mov
call
xchg
mov
movsb
pop
cwtl
dec
jbe
dec
or
add
cs
fs
cmpsb
dec
add
loope
mov
inc
push
xchg
mov
push
ficompl
lcall
shlb
jo
sub
xor
popa
adc
repnz
sbb
inc
xchg
enter
push
push
xor
inc
ds
fstpl
decl
mov
in
lods
or
das
or
repnz
add
fs
lcall
push
sub
pop
or
or
cmp
dec
jmp
aaa
xchg
xlat
pop
int3
cmp
mov
mov
ljmp
iret
sbbb
movsl
mov
aas
ljmp
scas
inc
xor
lcall
sub
sbb
adc
mov
test
std
xchg
aam
int3
xchg
mov
repnz
into
sub
xchg
dec
pop
aaa
mov
adc
jb
cmc
and
pushl
push
push
xchg
lock
es
insb
std
inc
roll
ret
cmp
xchg
cmp
mov
test
xchg
enter
call
cmpsl
lea
ret
pop
xor
jno
pusha
cld
addl
mov
decl
data16
and
nop
data16
jae
push
popf
mov
data16
jmp
mov
dec
ret
pushf
outsl
mov
dec
aad
lock
xor
add
push
inc
xor
sub
sub
add
jmp
mov
add
ret
fs
shll
cltd
dec
test
and
iret
sub
ja
jo
aas
lret
mov
mov
push
adc
call
mov
repnz
inc
lock
lahf
xor
xchg
push
loope
mov
and
mov
xor
pushf
mov
clc
jae
divl
lock
lret
jno
xor
inc
divb
lcall
mov
dec
aam
pop
cmp
test
pop
cmc
add
outsl
dec
aas
pop
mov
cltd
xchg
jmp
mov
xchg
cmp
fwait
push
clc
adc
xchg
iret
ljmp
mov
jmp
stos
lahf
jmp
mov
test
mov
stos
mov
icebp
cmpsb
pushl
push
jle
repz
mov
sbb
lahf
mov
dec
mov
dec
sbbb
fidivs
sub
dec
mov
sbb
add
jmp
push
std
pushl
cwtl
popa
xchg
scas
popl
xlat
or
repz
stos
mov
iret
aas
clc
out
clc
imul
push
mov
int3
jno
xchg
outsb
fisttpl
fdivl
push
outsl
mov
out
ja
sub
xor
imul
mov
jg
int
imul
sahf
daa
fdivrl
mov
rorl
cmp
add
ljmp
jb
call
jecxz
je
mov
aaa
stc
fs
in
jne
jo
fdivrs
fbstp
jo
cmc
fcompl
dec
mov
add
decl
out
sbb
add
imul
ljmp
call
mov
inc
jl
scas
imul
xor
mov
xchg
dec
ret
push
jmp
scas
xor
pushf
shr
fimull
jae
ljmp
ja
dec
xchg
pop
lret
mov
enter
jmp
cwtl
jo
pop
xchg
mov
ljmp
inc
rorb
xor
push
sbb
pop
mov
mov
ljmp
xor
dec
push
sub
mov
stc
stos
jmp
mov
out
dec
adc
cmc
cld
aas
fwait
insl
dec
dec
rolb
dec
lret
pop
lcall
movsb
mov
adc
hlt
ja
mov
in
repz
outsb
enter
inc
lock
pushl
adc
mov
push
xchg
cmc
jge
outsl
adc
push
adc
mov
sysret
jmp
movlps
in
imul
test
decl
rcrb
mov
filds
or
repnz
mov
mov
adc
xchg
mov
sbb
incl
stos
dec
xor
lcall
ljmp
aam
enter
call
pop
jl
or
ja
jo
jmp
jge
gs
mov
xlat
add
aaa
dec
inc
ret
pop
dec
or
or
ljmp
js
aam
aas
sti
xorb
xlat
xor
decl
js
pop
adc
imul
cmpl
scas
aam
es
std
in
push
sar
mov
dec
dec
adc
mov
mov
into
xchg
mov
inc
xchg
sub
inc
rcll
test
mov
cmp
ljmp
incl
lods
jae
jl
xchg
dec
in
jne
icebp
push
mov
ljmp
fmul
mov
jbe
aaa
add
pop
and
lcall
cmpsl
mov
cmpsb
icebp
jmp
rolb
pop
in
xlat
repz
dec
push
and
push
or
pop
xchg
push
incl
loop
mov
inc
fs
repz
test
xchg
mov
test
add
fldcw
push
xor
into
pop
add
push
jmp
pop
shlb
cmp
movsl
in
loope
les
lcall
xchg
cmpsl
push
shlb
pop
mov
dec
cwtl
cmpsl
test
ror
das
inc
lock
fisttps
dec
sub
mov
lock
out
in
fdivrs
aas
ret
ljmp
push
repz
sub
in
mov
push
andb
cmp
dec
in
xor
rol
jo
push
sub
push
lret
pushl
fdivl
cmp
pop
stos
addr16
lahf
imul
int
je
test
jg
dec
in
pop
push
inc
dec
mov
cld
mov
loopne
adc
lcall
nop
mov
add
mov
sub
dec
adc
in
mov
call
jg
jmp
pop
or
push
mov
nop
insl
aam
inc
in
push
xchg
icebp
pushf
hlt
test
aas
sti
decl
pop
jno
lock
mov
cmc
fwait
sub
nopl
popa
out
sbb
cld
incl
jl
dec
lahf
int3
mov
shl
sub
mov
pop
xor
fdivrl
aad
add
mov
lock
xlat
repnz
gs
push
iret
hlt
in
ficoms
inc
std
lea
mov
pop
in
push
aaa
les
mov
jmp
cmp
pushl
or
mov
pop
xor
mov
xor
push
lock
sbbb
cli
mov
outsl
shll
in
inc
ja
cmpb
dec
push
mov
gs
nop
inc
pop
mov
push
inc
insl
repz
in
subl
jp
std
test
mov
jge
and
sub
push
mov
add
inc
ljmp
rcl
lea
adc
mov
add
scas
push
clc
jmp
imul
jmp
stc
xabort
jae
test
jno
xchg
add
push
push
mov
out
movq
pushl
mov
adc
dec
les
pop
dec
xor
cmp
int3
incl
insb
add
fs
xchg
rorl
lock
outsl
repz
call
adc
dec
push
aam
jns
xchg
mov
cmp
rcrl
mov
cmc
lahf
out
int3
mov
clc
cmp
xor
cmp
ljmp
mov
mov
xchg
sbb
push
out
cs
out
sub
mov
sbb
in
pop
mov
xchg
xor
push
inc
out
ret
je
lods
fisubrs
push
cmc
xchg
pushl
int
sahf
jmp
pop
jae
mov
outsb
int3
inc
sbb
outsl
jmp
jo
xor
clc
lcall
outsl
cmp
test
mov
mov
cmp
addb
jle
pop
jecxz
push
call
popa
xor
dec
cmp
outsl
jmp
decl
and
arpl
test
mov
ja
jp
jae
sub
jne
leave
stos
icebp
decl
lcall
scas
cmc
data16
mov
in
or
int3
xchg
enter
xor
adc
out
jne
cmp
mov
cmp
andb
loope
mov
insl
sub
push
stos
daa
cmp
lock
or
fcomp
pop
stos
sbb
or
je
iret
into
loopne
xlat
iret
mov
addps
ljmp
sub
js
or
clc
pop
es
in
stc
sbb
jg
imul
lock
fistpll
stc
loope
jne
out
out
fstl
pushl
roll
out
xchg
sub
xor
in
fistps
sub
add
push
les
outsl
sub
daa
repnz
jae
jg
sub
push
sub
js
rcll
xchg
test
jecxz
jne
test
pop
pop
ja
or
lock
repnz
xchg
adc
out
mov
pusha
cld
and
jo
shlb
cmp
inc
and
and
or
fisubs
jns
add
pop
mov
incb
add
incb
pushl
jl
repz
adc
jl
es
pop
fsubrl
mov
loope
hlt
fistpll
and
iret
call
sbb
add
lds
add
jo
add
int3
xor
mov
into
ret
lret
jo
sbbl
in
xchg
rclb
es
add
jae
loopne
test
loop
jne
add
mov
jecxz
jmp
cld
aaa
into
and
sar
jg
loopne
inc
pusha
fs
jo
adc
sbb
or
mov
aas
jp
jnp
cmpsl
cmp
into
negb
jae
jl
xor
sbb
push
sub
loopne
sub
cld
fiadds
or
inc
inc
ret
and
jge
mov
cmp
fcomps
stos
aad
cmc
repnz
pop
fcmovne
adc
call
dec
add
idivl
push
pop
loope
adc
stc
rcrl
xchg
or
loope
or
pushl
and
xchg
loop
jb
dec
jp
and
cli
xchg
pushf
outsl
pop
rclb
pop
inc
jp
ss
xchg
aaa
sbb
iret
jl
mov
fnstenv
mov
fimuls
add
push
or
and
fcmovnb
sub
jle
xchg
add
shlb
adc
icebp
lods
repnz
nop
outsb
loope
mov
aas
popa
cmc
fs
adc
adc
pop
lret
cld
cmp
outsb
add
loope
mov
jnp
push
push
mov
dec
fidivs
lcall
movb
call
int3
xor
in
cmc
or
mov
mov
mov
jbe
mov
repnz
scas
frstpm(287
jo
das
push
je
bound
ds
lcall
sub
iret
xor
out
cmc
dec
icebp
ljmp
rcll
mov
test
jge
and
fs
mov
stos
pop
xchg
icebp
jecxz
lock
pushl
js
das
add
rorb
in
sbb
xor
loopne
jnp
or
icebp
stc
add
decl
add
sahf
in
jne
stos
testb
mov
scas
leave
test
std
pop
lock
pushf
repnz
and
bound
jmp
pop
rorl
push
insb
pushl
adc
lods
jae
mov
sbb
sbb
push
push
jae
jle
xor
sub
pop
xchg
incb
loop
sub
cld
cmp
inc
rcl
mov
jle
mov
jecxz
stos
xor
outsl
sbb
pop
add
fdivrs
inc
inc
mov
push
mov
pop
lahf
mov
rcl
push
or
jmp
push
jecxz
shlb
add
wbinvd
test
in
jne
xchg
sub
mov
cwtl
or
cmc
push
fldt
aam
ret
dec
cld
outsl
fisttps
icebp
loop
sub
adc
mov
pop
pop
mov
addb
mov
or
ljmp
jae
jb
dec
xchg
sub
xchg
jg
inc
jns
int3
out
aad
in
outsl
pop
enter
add
adc
add
mov
lcall
push
mov
outsl
in
lock
das
xor
sbb
aas
mov
cs
jmp
sub
jmp
icebp
xor
cwtl
into
lods
and
pop
cwtl
aas
xorl
incl
loopne
mov
and
iret
mov
mov
jmp
dec
mov
incl
ljmp
mov
inc
ja
aas
pop
in
mov
daa
mov
mov
add
std
add
mov
cli
jmp
in
push
ljmp
in
push
mov
cmp
pop
fs
in
stos
and
out
shlb
mov
mov
pop
fcomip
sti
add
in
adc
sub
loop
inc
cld
jl
xor
jns
xor
loope
mov
divb
in
inc
and
lods
sub
in
cmc
or
xchg
cld
ljmp
out
inc
hlt
mov
mov
mov
std
les
neg
int3
add
or
test
das
jbe
addr16
cmp
icebp
and
jmp
hlt
sarb
cmpsl
psadbw
sub
sbb
addr16
mov
push
aam
jns
mov
idiv
and
je
jl
nop
enter
cltd
cmp
jne
push
mov
fistps
sbb
movsb
cmc
cmp
adc
inc
xchg
bound
mov
nop
fwait
lock
ljmp
jb
cmpsb
mov
das
and
pop
or
inc
inc
sub
call
cld
jmp
adc
add
xor
mov
lcall
mov
ljmp
cmpsl
sbb
lds
or
andl
and
movsl
ss
decl
adc
dec
adc
mov
les
cltd
jo
lcall
add
es
rolb
mov
rolb
add
incl
push
xor
es
out
ss
aam
sarl
inc
popf
aas
sbb
lcall
loop
popa
adc
sub
push
in
cmpsb
xchg
adc
stc
mov
lods
insb
push
enter
jmp
shlb
xchg
adc
in
adc
addr16
mov
push
xchg
xchg
cmp
jle
push
mov
cmp
adc
jb
in
sbb
add
jae
pop
xor
xchg
outsl
ja
insb
jnp
cmpsb
mov
inc
decl
adc
jp
sub
jo
ficoml
int3
aam
jae
xchg
adcl
rcrl
aas
fs
and
pop
cmp
sub
ljmp
pusha
jle
cld
pushl
xchg
xor
jp
shlb
fists
dec
pop
mov
and
or
adc
pushl
ret
clc
or
scas
or
popf
loop
xor
sub
mov
data16
push
mov
xchg
pushw
loope
push
xchg
std
data16
jae
js
xchg
sahf
lcall
gs
leave
pop
test
fsubs
lcall
mov
sub
adc
clc
pushl
icebp
push
mov
and
jo
push
cvttps2pi
and
push
insb
lock
cld
fbld
lea
add
pop
pop
icebp
jg
je
adc
gs
xlat
jle
cmp
fists
add
stc
out
ret
or
push
ljmp
or
gs
and
or
pop
push
ficomps
mov
add
sbb
inc
mov
out
fwait
int
out
cmp
arpl
fiadds
mov
sti
dec
out
call
sub
add
dec
out
lret
fildll
cmpsl
rolb
add
out
cs
sbb
pop
out
test
mov
push
jle
addr16
push
add
and
cmpsb
jmp
jbe
sbb
lret
hlt
mov
decb
seto
lods
loopne
pop
cs
imul
ja
jle
das
adc
cmpsl
pop
sbb
scas
shll
jae
adc
lret
dec
out
in
jmp
aad
jno
stos
adc
pop
inc
leave
shlb
leave
leave
push
ds
mov
xchg
fidivrl
cmp
sbb
push
push
jecxz
int3
jl
in
movsb
in
dec
sub
adc
clc
iret
lret
ret
sar
jmp
aaa
push
or
dec
test
enter
arpl
jnp
rcll
cmp
pop
je
mov
add
xor
movsb
sbbl
jg
xchg
adc
in
rcl
js
mov
decl
jg
inc
in
add
into
mov
mov
lret
pop
std
ljmp
cmp
push
out
pop
mov
xchg
lea
aad
jmp
pusha
and
mov
cmp
stos
adc
dec
sub
add
mov
adc
cmp
mov
idiv
clc
cmp
inc
xor
add
dec
movsb
stc
dec
nop
testb
mov
jns
rorb
fcmovne
fistpl
adc
push
sahf
dec
lret
nop
xchg
add
cmpsb
fnstenv
scas
push
into
stc
push
adc
in
inc
push
mov
inc
nop
mov
add
dec
add
into
psubb
inc
mov
pop
js
push
pop
dec
push
clc
inc
nop
push
add
outsl
adc
shrb
into
sub
inc
jo
fs
inc
decl
in
and
pop
xor
fdivrl
xchg
enter
or
push
out
hlt
stos
lcall
add
xchg
ret
adc
inc
jns
jbe
push
icebp
shrb
mov
push
sti
les
stc
sub
add
add
into
xchg
clc
test
push
push
mov
push
fisubrs
add
nop
add
mov
lret
out
push
into
mov
push
mov
or
add
popa
incb
std
mov
push
push
roll
push
into
enter
push
push
bound
push
dec
incb
decb
fwait
shlb
into
out
push
decb
push
idivb
lcall
aaa
push
dec
std
clc
pop
popa
shlb
pop
adc
mov
lcall
pop
stc
sahf
pop
xchg
std
int3
hlt
xchg
aas
ds
cwtl
cmp
jp
icebp
arpl
in
pop
xor
sub
cmp
cmpsb
lret
mov
push
into
add
push
jg
mov
icebp
cmp
mov
inc
hlt
out
stc
rcl
rclb
pop
rclb
and
fidivl
mov
jp
jae
adc
mov
jp
adc
btc
cmc
int3
jg
mov
jge
dec
pop
das
nop
out
movsl
adcl
ljmp
pop
in
cli
pop
xchg
je
inc
adc
cmp
sar
loop
shlb
xor
cli
aam
cmp
or
cli
dec
mov
inc
pop
lcall
icebp
dec
lcall
or
adc
push
mov
mov
pop
jne
mov
add
push
add
jae
fldt
and
mov
into
mov
add
mov
pop
stos
cli
dec
sbb
call
int
adc
push
mov
and
xlat
fs
jns
xor
ljmp
mov
dec
push
add
gs
in
test
std
sti
shrb
mov
fwait
cmp
cmp
pop
pusha
add
pop
in
mov
clc
in
ljmp
pusha
mov
mov
push
mov
enter
sti
inc
movb
inc
inc
fs
call
push
jae
je
xchg
pop
or
jle
jmp
int
add
or
push
mov
pop
lcall
pop
in
fdivrp
inc
and
xor
adc
pusha
fsubl
sar
jmp
and
or
push
jae
je
xchg
inc
ja
cmp
inc
push
enter
push
mov
pop
add
mov
pop
je
push
sub
mov
adc
fildl
mov
jg
mov
push
pusha
sarb
sti
arpl
mov
inc
cld
aaa
call
test
cmp
and
out
test
cmp
adc
cmp
fcomip
call
in
add
aam
popa
aad
cld
call
rorl
pushl
mov
loope
fidivl
sbb
repz
cld
rcr
jae
mov
add
jmp
aad
add
jae
fdivrl
movsb
fxch
mov
dec
popl
mov
and
sbb
pop
sub
lcall
jo
loope
nop
jl
pop
mov
jg
nop
mov
cmp
cld
jmp
sbb
xor
pushf
sbb
xchg
mov
imul
xchg
pop
lret
test
ljmp
dec
mov
shlb
in
cwtl
sbb
pop
lock
or
mov
cmc
push
pusha
repnz
cld
jmp
sarl
in
aam
jp
in
cmp
arpl
dec
mov
jge
movsl
inc
mov
push
pushf
push
lods
cld
jg
nop
out
push
jle
sarb
mov
stos
sbb
jns
movsb
push
dec
jne
movsb
sbb
adc
pop
or
jg
test
popf
inc
or
push
mov
push
add
sub
jb
lock
pushl
pop
popa
xchg
xchg
std
pop
xchg
addr16
mov
jbe
pusha
cmpsb
pop
push
dec
sarb
mov
movb
cmpsb
push
and
incl
lcall
dec
push
jp
inc
insl
jp
dec
mov
sbb
mov
push
push
push
fdivp
jmp
mov
xor
mov
mov
xor
insb
push
xchg
sbb
call
out
sbb
jge
jl
inc
or
mov
jecxz
xchg
pop
and
push
adc
ret
aas
push
imul
insb
in
mov
dec
mov
cmovl
jl
sarb
cmp
test
fldcw
rcr
pushl
std
out
dec
outsb
push
push
dec
jge
mov
std
or
repnz
dec
xchg
ds
mov
aad
incl
inc
pop
jmp
xchg
or
cmp
inc
push
or
adc
mov
or
jmp
lea
jno
insb
js
fidivs
push
lods
ss
test
mov
mov
stos
fdivrs
movsb
jg
xchg
out
pop
mov
cld
out
xchg
mov
rcrb
repnz
fldcw
xor
bound
stc
jb
dec
mov
fildl
adc
mov
dec
sbb
sub
xchg
fcmovnbe
jle
cwtl
sub
sbb
xchg
sbb
stc
fwait
sub
or
mov
in
in
pop
aam
push
and
mov
data16
decl
je
cs
movsl
sbb
add
and
repz
test
fildll
fstps
xor
sarl
dec
and
lock
ljmp
jmp
rol
test
xchg
xor
loopne
fsubs
and
sub
lods
cmp
ljmp
mov
cmc
sub
test
popl
pop
cs
cli
mov
ret
mov
mov
lods
mov
movsl
jnp
sub
jb
jmp
call
into
cli
rorl
scas
out
inc
xchg
mov
xchg
ljmp
insl
ljmp
sbb
xchg
in
out
pop
dec
pop
jg
pop
fcom
jb
jg
xor
repnz
mov
inc
or
ljmp
lcall
or
mov
dec
and
clc
addr16
and
out
idiv
pushl
xor
mov
jg
cwtl
mov
psraw
ljmp
or
add
outsb
jle
into
jp
stos
xchg
arpl
pop
mov
push
pop
adc
cmp
dec
push
jl
sub
mov
imul
insl
clc
pushl
push
fidivl
sub
mov
data16
shlb
add
rolb
sbb
or
pop
mov
mov
js
push
insb
jle
inc
jl
cmpl
sahf
jl
iret
xchg
or
dec
and
cs
in
mov
mov
xor
popf
out
xor
pushl
movsl
outsb
jae
ja
mov
or
ljmp
ja
push
and
cmp
mov
xor
xchg
cmpsb
push
outsb
psubusb
cmpsb
adc
mov
incl
ret
shrb
lods
cmp
ja
in
jg
outsl
xchg
mov
pop
cmp
bound
push
jg
push
jo
fiadds
outsb
sahf
push
jmp
lcall
or
lret
sub
out
sbb
sar
xor
pushf
sub
xlat
adc
cmpsl
adc
pushf
sub
cmp
mov
jl
sbbb
in
in
stos
decb
ja
add
fsubrs
lods
or
xorb
repz
lods
inc
push
loopne
clc
pop
insb
mov
jmp
push
or
stos
aas
incl
js
jecxz
pop
enter
scas
cmp
adc
fdivrs
inc
pop
das
incl
or
divb
lock
mov
jge
add
push
dec
pop
jbe
leave
add
cmp
aas
dec
pop
jae
insb
sub
shll
mov
into
xchg
cmp
incl
lock
push
jne
popf
pop
sub
idivl
ficoml
or
sub
pop
push
fdiv
and
xor
cwtl
ljmp
cli
decl
xor
inc
insb
lods
in
ret
test
adc
mov
call
mov
int
sar
lcall
adc
pop
dec
jo
mov
scas
mov
mov
pushl
fisubs
or
aas
pop
jle
xor
jbe
nop
push
popa
es
xor
rcll
out
cmp
pop
inc
imul
cmp
ds
lcall
inc
fwait
divb
push
jbe
repz
or
jno
jo
mov
lods
add
mov
call
notb
xchg
adc
wrmsr
icebp
jecxz
repnz
pop
jo
cmp
cs
scas
leave
ljmp
negb
outsl
pop
mov
push
cmp
xor
test
xchg
jb
push
lahf
jg
mov
lock
outsl
rcll
xor
repz
aaa
mov
pop
jle
es
pushl
notl
sarl
out
scas
cwtl
icebp
out
mov
sbb
xchg
push
xorb
push
aam
movsb
shrl
call
inc
pop
and
in
xchg
repnz
std
xor
mov
sahf
fcoml
call
xor
pusha
cmp
adc
sub
es
fwait
inc
lds
data16
lods
fdivr
decl
pusha
mov
jne
xchg
push
mov
out
cmc
mov
movsb
call
cmp
call
jl
mov
mul
push
cs
inc
xchg
iret
or
xor
dec
div
inc
push
div
jp
ja
jp
fmulp
ret
pushl
shlb
cwtl
jb
jmp
jo
cwtl
pop
adc
sub
mov
and
incl
cli
pop
dec
popf
out
mov
dec
lock
mov
mov
rorb
cmp
pushf
jl
jae
fsubrs
ja
jae
nop
hlt
mov
xor
xor
push
neg
scas
repnz
int3
movsb
mov
sbb
pop
fs
icebp
adc
adc
in
adc
mov
sub
pop
xor
scas
xchg
or
scas
cmp
lods
xchg
clc
mov
push
mov
push
xchg
inc
and
add
jb
mov
icebp
sub
sbb
push
in
dec
je
repz
lods
xor
ljmp
push
sysenter
add
mov
call
movsl
leave
lret
test
xor
lret
out
lods
sub
scas
mov
dec
test
lock
pop
mov
das
out
mov
xchg
hlt
mov
idiv
xorb
in
push
or
iret
das
ljmp
insb
andb
mov
cmp
scas
pop
cmpsb
dec
inc
and
push
dec
enter
dec
out
lods
jae
fdivs
fwait
jnp
adc
aaa
cld
ljmp
sti
lret
mov
mov
or
inc
or
inc
pop
sub
mov
pushl
scas
pop
repnz
inc
ret
aaa
test
sub
jae
daa
dec
data16
mov
pushl
enter
jae
stos
xchg
fdivl
mov
xor
arpl
imul
add
push
xchg
loopne,pt
popa
repz
push
add
inc
bound
sub
sbb
or
pushl
adc
ret
int
sbb
jmp
mov
sarl
dec
in
das
cli
jg
fdivp
fisubrs
movsl
sub
in
dec
fwait
push
or
xchg
mov
in
movsl
pushl
fistps
insl
jp
sbb
adc
mov
fisubs
and
cmp
xchg
dec
lock
lcall
int3
insb
cmp
aaa
lahf
and
fsubs
movsb
pop
mov
mov
scas
insl
mov
mov
mov
jmp
mov
mov
add
mov
xchg
adc
pop
sbbb
fisubs
jb
xchg
mov
pop
add
push
pop
and
pop
scas
xorb
jg
push
lcall
sub
repnz
scas
movsb
out
push
xor
fildll
ljmp
movsb
sub
lock
push
sub
mov
xor
aam
aas
insb
push
std
decl
and
pop
int3
xor
nop
push
dec
mov
jp
jb
mov
or
decl
cmp
fisubl
ja
lock
mov
out
lds
in
decl
and
mov
pop
lret
add
jb
push
fildll
ret
jb
mov
decl
jmp
ret
push
adc
test
out
stos
jbe
pushl
lods
movsb
and
sbb
push
mov
mov
lods
jb
adc
mov
ljmp
es
jo
aam
pop
mov
add
dec
mov
daa
ss
es
ja
push
es
cmc
out
pop
fs
push
pop
hlt
jmp
jb
ljmp
push
jbe
push
mov
cmpsl
cld
mov
pop
arpl
xchg
shr
jae
cmc
dec
lods
clc
shlb
xor
xor
stos
sub
jg
dec
jne
pop
into
test
adc
fnsave
jmp
fs
mov
mov
repz
jno
sub
test
pop
mov
xchg
lea
ljmp
jno
inc
xor
dec
ja
pop
sbb
and
mov
outsl
mov
sbb
ret
jnp
insb
les
jb
jb
scas
xchg
cmpsl
xor
adc
xchg
xchg
fst
push
int3
mov
stos
loopne
pop
cld
push
scas
xor
push
in
mov
setns
rcll
outsl
inc
inc
mov
pop
int3
pushf
shll
stc
mov
xchg
or
popa
xlat
sub
dec
cmpsb
jmp
ret
pop
hlt
pushl
movl
outsb
push
nop
mov
mov
xor
xlat
test
outsb
pop
sarb
test
push
push
jo
fiadds
idivl
dec
clc
fcmovne
stc
sub
pop
adc
stos
stc
adc
jo
inc
cmpsl
jge
sbb
enter
test
data16
cmpsl
and
and
pusha
mull
sti
mov
fcomps
inc
out
push
or
lret
xchg
mov
call
mov
push
cltd
stos
mov
cmp
ljmp
sbb
movsl
mov
jo
mov
das
repz
sbb
mov
mov
jno
pop
outsb
push
int
jle
mov
repz
mov
push
pop
fstpt
jmp
pushf
cmp
push
imul
rcrl
pop
outsl
dec
cltd
fs
rcrl
jo
adc
sbb
mov
mov
push
pop
aad
rcl
mov
or
mov
cmp
lea
mov
pop
imul
aad
adc
mull
push
inc
incl
jb
jmp
fildl
xchg
lahf
mov
lret
sbb
xchg
xchg
dec
and
mov
mov
dec
cld
sarb
psubusw
scas
jns
xor
fdivrs
idiv
adc
in
int
jo
dec
cwtl
add
fwait
sbb
stc
xor
dec
cmp
ss
mov
aam
rorb
mov
mov
fwait
pop
inc
loop
xchg
mov
push
in
xor
jg
mov
mov
dec
aas
mov
add
sub
inc
sbb
sub
push
fwait
lcall
cmp
pusha
scas
ljmp
xchg
sub
cs
icebp
lret
jmp
pushl
in
shll
or
hlt
lahf
insl
daa
ret
aad
xchg
mov
mov
aaa
adc
mov
aam
fs
mov
or
push
lahf
mov
rol
jl
ret
out
imul
aad
push
jg
mov
mov
pop
jl
scas
jbe
push
int3
nop
push
mov
aaa
int
lret
fildl
fld
dec
clc
adc
iret
jg
or
aad
cs
call
pop
scas
push
mov
xchg
jmp
lahf
imul
xor
push
out
mov
out
out
dec
xchg
jge
or
sar
jne
adcb
xor
pop
paddsw
dec
mov
xorb
push
js
inc
sub
dec
ss
lcall
pop
pushf
scas
ja
test
into
push
fnstenv
notb
adc
fildl
icebp
in
inc
sbb
adc
bound
push
je
in
jae
jbe
loopne
ljmp
scas
mov
xor
mov
sub
jne
inc
adc
out
std
dec
mov
push
lea
int3
mov
int
int
inc
jb
push
je
lods
or
dec
imul
or
dec
lods
jecxz
jle
mov
js
sub
cltd
imul
push
push
std
testb
clc
rcr
xor
push
mov
hlt
ljmp
decb
push
jae
lret
imul
cli
into
into
push
mov
cs
ljmp
xor
ljmp
inc
aaa
mov
mov
lcall
jae
pushf
popa
daa
inc
pop
lret
xchg
or
jne
adc
jb
roll
das
inc
xchg
sub
push
std
lea
mov
xor
inc
push
xchg
jp
int3
pop
call
test
cmp
or
inc
mov
push
sbb
sbb
test
cltd
dec
shll
pushl
dec
hlt
dec
daa
lea
iret
jle
lret
fcoms
push
cld
lds
jae
int3
xchg
cs
loopne
cmpsl
adc
sbb
mov
push
nop
mov
push
dec
dec
jmp
std
and
clc
mov
leave
out
add
pop
shll
sbb
call
es
xor
outsb
cs
fisubrs
ret
mov
push
pushl
ret
jne
mov
adc
enter
mov
gs
call
or
xchg
push
xchg
inc
push
shr
lods
sub
aam
or
decl
ror
leave
dec
dec
mov
ret
inc
stos
xchg
mov
or
and
std
imul
adc
sub
int
mov
mov
pop
and
nop
lcall
mov
inc
repnz
in
insl
pop
pop
mov
fldt
loopne
repnz
ret
dec
inc
cmp
fmull
xchg
inc
mov
fcmovnbe
push
fistpl
jb
daa
pop
push
xchg
in
mov
andl
hlt
icebp
inc
dec
sub
fidivl
js
mov
pusha
sub
bnd
loopne
sbb
mov
mov
sub
or
cmp
lcall
jmp
mov
xchg
mov
mov
lods
into
xor
js
nop
sub
and
jno
mov
fiadds
iret
aad
movsl
jmp
sbb
or
pop
xchg
iret
push
sub
cltd
std
lcall
xor
xchg
decb
push
ljmp
dec
mov
ljmp
out
lods
mov
leave
loopne
mov
repz
cs
jecxz
test
cs
cmpsb
sub
ds
jg
scas
cmpsb
pop
mov
test
mov
and
sar
mov
movsl
dec
mov
jae
mov
push
shll
sub
adc
adc
pop
pop
jecxz
push
adc
inc
inc
loopne
je
xlat
cmpsl
cld
xchg
cmpsb
scas
and
fistps
xchg
inc
jecxz
les
es
nop
mov
xchg
push
cltd
xchg
decl
jle
lds
sarb
ret
arpl
dec
mov
aam
cltd
cmpsb
lods
mov
mov
mov
inc
flds
mov
fidivrs
rcrl
sub
into
jg
in
or
mov
adc
push
inc
sub
lods
xor
fnstenv
push
xchg
inc
cld
incl
mov
lcall
mov
jg
les
jbe
jmp
shrb
ret
jl
xchg
scas
mov
call
in
mov
jle
lods
or
cmp
xchg
sbb
push
adc
sub
aam
and
repnz
xchg
pushf
iret
addr16
mov
dec
dec
mov
cld
xor
push
push
insb
mov
mov
sub
dec
rorl
lods
sahf
push
mov
adc
outsl
int
insl
dec
cmp
adc
cmpsb
outsl
and
sbb
mov
pop
push
sbb
xchg
mov
mov
shlb
pushf
mov
cmp
ljmp
daa
inc
xor
pushl
xor
fistpll
fldt
out
inc
roll
cltd
lds
mov
lcall
call
shrb
test
push
lock
xchg
mov
sti
push
cltd
mov
jmp
jns
scas
jl
jmp
sbb
dec
dec
stos
dec
cmp
rcrl
sti
and
rcll
outsb
mov
jg
mov
frstor
push
pop
jg
mov
into
mov
clc
adc
and
fists
in
clc
adc
lods
adc
mov
ljmp
push
fmuls
mov
scas
addl
push
cmp
mov
test
call
decl
mov
aas
js
loope
adc
in
pop
xchg
gs
sbb
popa
nop
push
in
scas
pushf
dec
dec
daa
pop
adcb
mov
pop
scas
sub
ret
push
jg
mov
xor
in
sahf
sub
cwtl
sbb
aas
xor
adc
push
pop
push
pushf
mov
push
mov
scas
sbb
xchg
icebp
mov
adc
sub
mov
xor
sbb
scas
push
mov
inc
dec
lods
push
inc
xchg
push
cmp
add
pushf
das
hlt
xor
mov
pop
rorl
lea
iret
mov
jmp
lds
mov
insb
cmpxchg
lcall
aad
out
icebp
xchg
jb
dec
xchg
adc
pushl
repnz
mov
lods
sbb
rcl
cmp
mov
adc
loope
xchg
or
pop
icebp
in
nop
push
enter
xlat
xchg
add
mov
inc
in
mov
mov
dec
xor
jae
pmuludq
mov
mov
mov
dec
int
jo
aaa
xor
xchg
xor
pop
pop
lods
out
decl
mov
stc
shrb
pop
les
push
outsl
in
cmpsb
cmp
xor
jl
push
lock
lcall
xor
std
lahf
or
mov
bswap
cwtl
test
repnz
sub
outsl
fadds
movsb
into
mov
mov
mov
xchg
lret
cmp
sub
inc
sbb
jecxz
ss
rolb
rcr
sar
xchg
mov
ret
subl
jnp
jmp
ret
in
pop
mov
and
sbb
fisubrs
stos
ret
les
cmp
pop
std
mov
test
xor
fisubrs
pop
or
jnp
ret
sbb
ja
mov
sub
pop
pusha
lods
adc
pusha
inc
jno
sub
dec
loop
jb
jnp
cmp
mov
mov
cmp
mov
xchg
cli
or
mov
add
mov
int3
dec
adc
scas
mov
add
out
cli
dec
or
pusha
sub
inc
mov
xchg
xchg
adc
test
mov
cmp
add
jmp
pop
dec
nop
cmp
push
or
dec
jg
cmp
sbb
cmpsl
xchg
cmp
adc
jecxz
dec
sub
mov
aam
fmuls
jle
fsubl
lock
jnp
mov
mov
repz
fadds
xchg
adc
push
cli
cs
sti
rolb
pop
std
incl
push
shlb
mov
add
xchg
mov
cmp
ljmp
xchg
lcall
lods
lret
inc
pop
mov
mov
fildl
jg
push
cs
xchg
or
inc
xchg
mov
daa
adc
jne
push
cwtl
mov
clc
leave
out
movb
insl
lahf
sub
hlt
adc
jmp
repz
pop
and
or
fucomip
scas
mov
mov
mov
decl
xchg
lahf
ljmp
and
mov
inc
mov
inc
cs
fadd
jg
ljmp
cmp
scas
sub
push
shrl
xchg
rcrl
lea
gs
lcall
sbb
addl
mov
cli
test
icebp
jg
mov
leave
dec
mov
adc
cmc
sbb
ja
addb
fidivs
mov
add
les
out
test
cmp
outsb
push
rclb
movsl
test
ss
incl
inc
mov
insb
pop
shrb
jp
push
dec
jp
mov
push
mov
push
xchg
mov
shlb
and
repnz
scas
jae
dec
adc
xlat
sahf
mov
in
push
jnp
inc
idivb
add
lea
inc
cmpsb
ficomps
mov
mov
into
inc
mov
cld
inc
faddl
adc
xchg
add
jg
xchg
mov
mov
cmpsl
jmp
sbb
or
and
in
je
into
adc
orb
mov
mov
pop
subb
and
dec
xchg
mov
and
cmpsb
call
call
push
push
pop
gs
lods
call
ds
in
scas
mov
push
xchg
sub
lods
cmc
test
xor
leave
shlb
mov
fiaddl
mov
cs
faddl
pop
mov
test
mov
sub
adc
cmpsb
popf
mov
les
incl
out
xor
push
lret
push
push
nop
mov
test
repz
movswl
out
in
shl
lcall
incl
roll
or
in
xor
add
dec
sub
test
rcrl
fcomip
mov
loope
inc
inc
or
xor
xchg
cmc
dec
bnd
sbb
inc
loopne
decl
sbb
adc
iret
enter
jge
inc
cmp
out
dec
mov
test
mov
shll
ret
mov
test
or
adc
rcrb
inc
rol
inc
test
xchg
jp
mov
inc
jb
ret
lretw
push
add
nop
sbb
sbb
adcl
mov
xchg
fstps
jecxz
mov
movl
xchg
lcall
sub
ret
push
ret
pop
sub
rorb
push
rorb
add
hlt
sbbl
push
push
push
adc
and
repz
jae
out
jae
xor
loop
mov
iret
jmp
pop
xchg
call
ffreep
push
pop
sbb
decl
movsl
fmull
cmpb
mov
jle
mov
xchg
stos
jl
lods
scas
lcall
cli
mov
add
sub
cld
pushf
rol
add
adc
insl
lcall
cs
xchg
arpl
push
jnp
shll
push
pop
jnp
jb
and
inc
mov
or
aaa
mov
sub
pop
xorl
call
inc
lcall
test
push
js
cwtl
fidivrs
add
lahf
iret
pusha
add
icebp
addr16
xorb
les
nop
clc
ljmp
pushf
and
and
ret
pop
test
cwtl
xor
insb
mov
add
push
cmp
sbb
sahf
push
nop
mov
mov
adc
or
daa
xlat
and
inc
popa
pop
es
roll
jg
jo
jecxz
enter
mov
sbb
xchg
in
xchg
xchg
push
fidivs
add
pushl
hlt
xchg
sub
inc
dec
stc
and
mov
in
jmp
jmp
xor
pusha
sbb
mov
subb
mov
push
fs
subb
ljmp
jl
fnsave
lcall
and
call
jbe
loop
xor
or
sbb
push
mov
pop
mov
cmpb
icebp
jmp
jp
and
lods
sbb
adc
ljmp
outsl
xchg
inc
lods
jb
addr16
pop
sbb
cmp
nop
enter
das
xor
jge
dec
push
xchg
mov
and
lods
in
movsl
cmp
push
daa
sub
icebp
sbb
aaa
pusha
lds
lahf
pop
xlat
lcall
mov
pushl
andl
dec
xor
jle
jbe
cltd
inc
xchg
push
xlat
mov
inc
outsl
push
xchg
clc
and
rcl
clc
aad
repz
or
hlt
into
outsl
fsubs
mov
xchg
out
aad
jae
xchg
jg
jmp
lock
and
sub
rclb
push
lret
jg
sbb
cmpsb
insb
jae
jne
mov
int
pop
push
xchg
cli
lds
icebp
jbe
pop
into
sahf
leave
pop
ss
fsin
shlb
cmp
push
ds
mov
xchg
nop
add
sbb
insb
mov
or
push
push
lock
xchg
call
icebp
subl
jae
add
xchg
popa
jecxz
mov
rep
rorl
add
mov
pop
push
push
jns
jne
repz
int
jno
insl
inc
imul
popa
push
push
mov
sbb
adc
add
or
hlt
inc
add
pushl
add
cmp
aaa
xor
adc
push
sub
bound
inc
and
pushl
es
jns
pop
lods
loopne
xchg
pop
adc
xchg
adc
dec
lds
ror
jmp
in
stc
in
std
ljmp
mov
sbb
mov
lods
pop
and
cmpsl
push
jno
in
fnstenv
or
cli
call
fndisi(8087
clc
or
sbb
out
call
call
std
or
les
gs
ret
adc
pop
enter
decb
stos
pushl
jge
out
cltd
cli
out
popf
out
popa
hlt
popa
inc
cld
popf
push
mov
xchg
pop
ljmp
outsl
out
or
inc
ljmp
cmpb
repnz
pushl
loopne
out
stos
lret
mov
push
dec
lock
sub
mov
incl
cmpsb
aas
sub
sbbb
and
fidivs
or
mov
popf
jle
pusha
lahf
push
or
mov
mov
jge
fcomi
mov
or
sub
lock
ficoms
xchg
sbb
pop
imul
mov
movsl
lods
pop
dec
mov
mov
leave
xchg
pop
jecxz
pushl
pop
cmp
sbb
xchg
jno
out
lahf
fisttps
icebp
mov
enter
out
mov
movsb
cmp
mov
cwtl
aas
push
push
loop
pop
rorb
dec
fisttps
mov
incl
lock
repnz
pop
add
lahf
add
jle
push
and
es
fstpt
insl
lcall
or
das
imul
shll
pop
cmp
adc
insl
rol
decl
cld
fadd
pop
ds
dec
lock
mov
mov
pop
out
addr16
push
je
push
movsb
daa
mov
hlt
jmp
stos
outsl
lods
xor
jne
pusha
lcall
ret
push
mov
leave
add
push
repz
or
and
push
fcoms
fisubrl
mov
outsb
in
fwait
and
clc
out
imul
push
cld
push
loope
jno
cli
jg
dec
sub
clc
dec
rorl
pop
mov
push
in
pop
adc
cld
sahf
xor
in
fwait
mov
cmpsl
jbe
cmpsb
aaa
rcrl
adc
cmp
daa
ljmp
fbstp
adc
xorb
fistps
xor
lock
repz
inc
cltd
push
adc
xchg
xchg
iret
fisubl
mov
cmp
test
call
jmp
jg
xor
and
mov
push
xchg
dec
inc
pop
push
mov
mov
fs
aas
pop
or
lcall
rcrb
rorb
and
loopne
int3
mov
inc
sbb
or
xchg
xchg
aas
pop
or
shl
popf
push
xor
mov
jecxz
lods
mov
sbb
mov
adc
jg
pushl
cs
lods
cwtl
adc
and
inc
scas
popf
dec
push
clc
jg
insb
ljmp
xor
pushf
outsb
jl
imul
fwait
repnz
movsb
je
outsb
sbb
imul
fistl
movsb
push
hlt
fadds
cld
mov
xor
repnz
and
push
push
incl
cld
jo
fdivs
push
movsl
push
call
jns
sub
inc
adc
std
and
rcrb
cltd
or
imul
push
insb
mov
xor
or
cs
ljmp
imul
aas
pop
mov
ja
push
pop
pop
int3
inc
xchg
incl
xchg
test
into
lahf
pusha
ljmp
or
inc
bound
pusha
xchg
push
push
mov
or
lock
dec
pop
mov
jne
mov
test
mov
push
push
cmp
fbld
aaa
call
pop
xor
and
fldt
pushf
dec
mov
add
movsb
ret
pop
lret
shlb
incl
cwtl
xchg
pushf
inc
jo
jb
pusha
mov
dec
in
pop
push
jno
xor
push
fwait
jg
popf
loopne
jns
das
jae
or
rolb
jns
iret
adc
push
pushl
xchg
and
in
and
push
and
outsb
aam
fdivrl
dec
clc
fdivrl
inc
pop
bound
and
ljmp
fidivl
push
adc
popf
rcrl
push
mov
jmp
pop
loop
subl
lods
sbb
push
sub
bound
imul
mov
lods
in
ret
xchg
aaa
or
pop
aaa
idivb
outsb
popa
dec
sbb
xchg
inc
jne
inc
and
xchg
imul
int3
out
xchg
ja
arpl
sbb
mov
into
insb
mov
jne
insl
cmp
mov
shll
fwait
arpl
pop
js
jmp
ffree
inc
mov
and
in
xchg
popf
imul
pop
nop
mov
js
ffree
and
add
xchg
and
std
pop
mov
mov
push
repnz
push
add
mov
sar
mov
mov
pop
mov
cmc
fsubrl
call
xor
dec
mov
jecxz
sarb
fimuls
cmp
es
aaa
hlt
add
sar
test
outsb
and
jle,pn
push
jle
sub
leave
into
xchg
decl
movsb
dec
xchg
loop
sbb
rorl
fimuls
mov
mov
je
in
pop
es
push
mov
in
cs
ljmp
push
outsl
cmp
cmp
inc
mov
es
push
pop
push
dec
lcall
mov
add
mov
ljmp
repz
pop
rol
xor
rclb
jo
lcall
es
and
lock
mov
ds
xchg
inc
loope
dec
mov
int3
pop
cmc
jmp
jae
test
je
xchg
jg
je
ret
inc
in
mov
sar
cmp
adc
fwait
push
bswap
push
pop
jns
test
orl
dec
pop
add
fisttpl
imul
push
cltd
push
sbb
repnz
or
push
adc
push
es
ud0
incl
divb
mov
dec
das
mov
nop
add
pop
cmp
pop
decl
cmp
sbb
xor
ljmp
mov
sbb
sbb
popf
fucomp
push
test
xor
jmp
pop
add
adc
fsubrs
loope
xchg
or
nop
mov
sbb
jecxz
imul
sub
outsl
insb
fldl
adc
vmwrite
lahf
je
push
sub
out
enter
pop
and
lcall
les
repz
jns
loopne
leave
jp
xchg
and
pushl
push
lods
popa
mov
add
loopne
lcall
repz
mov
mov
cltd
jne
out
mov
idiv
pushl
dec
mov
mov
jp
loope
es
cmp
jecxz
xchg
mov
iret
cmp
xor
sbb
mov
in
repz
fmul
repnz
cwtl
test
insb
adc
incl
das
and
out
in
mov
or
js
push
or
cs
sbb
pop
ret
ljmp
insb
ja
sub
addr16
jno
or
add
jg
mov
pop
pop
mov
adc
mov
imul
cld
mov
sbb
addl
scas
cmc
jecxz
xchg
loop
ret
sub
jl
sahf
jbe
fwait
rcrl
imul
dec
es
push
jmp
pop
jg
call
cmp
loope
inc
sbb
push
cmp
jns
sbb
dec
xor
cmp
sub
leave
fdivrs
stc
ljmp
mov
inc
clc
dec
fcoml
decl
jnp
sub
xor
cltd
popa
xor
aam
jne
cwtl
inc
cwtl
adc
es
push
mov
mov
repz
dec
scas
hlt
mov
jg
das
stos
repnz
jbe
stos
lret
cmpl
inc
insb
hlt
cltd
addr16
xchg
jnp
mov
setns
js
test
mov
fcompl
push
je
mov
jo
arpl
or
loop
int
lock
pusha
cmp
fcoml
sbbb
sbb
icebp
ljmp
repz
rclb
inc
ficoml
add
imul
lcall
mov
popf
xchg
mov
pop
loope
daa
addb
or
cmp
inc
dec
pop
jnp
cmp
daa
addl
pop
xchg
push
shll
adc
notb
mov
and
jne
adc
clc
xchg
xor
cmp
iret
sub
xchg
ret
or
call
xor
jns
mov
stc
in
sarl
pop
insb
dec
decl
push
or
jns
pop
insl
rolb
sbb
pushf
adc
push
mov
jg
mov
les
push
cmp
sahf
cli
jl
lock
jb
mov
call
mov
aaa
or
cld
push
xchg
jg
int3
test
sar
lcall
ljmp
ret
fidivrl
xlat
or
xor
test
test
mov
sti
or
mov
mov
sbb
inc
rcrl
int3
pop
ds
push
jecxz
repz
jne
mov
sbb
push
mov
loope
pop
jne
xor
lds
jnp
imul
sbb
shrl
pop
cmc
stos
sub
sti
xchg
push
shlb
pop
xchg
mov
scas
push
xchg
loop
pushl
pop
mov
cld
or
jo
xor
add
pusha
cld
or
int3
or
out
movsl
mov
cltd
lock
inc
xchg
mov
ss
adc
mov
rcrl
jl
sti
mov
cmc
push
sub
in
pop
jo
adc
fisubrl
mov
ljmp
push
iret
nop
push
lgs
mov
pushl
xchg
xchg
mov
push
mov
lret
mov
outsb
mov
inc
loope
cmp
sti
ja
mov
lods
mov
fucom
dec
sti
push
xchg
repnz
push
std
jg
dec
mov
xchg
adc
sti
addr16
adc
mov
stos
xchg
nop
addr16
scas
xor
or
push
xor
mov
jae
aas
ja
shrb
pop
cs
jge
pop
jbe
das
clc
lcall
test
xorb
int
adcb
or
std
stos
mov
aad
test
incb
mov
push
les
andl
pop
shrb
andps
out
lock
inc
cmp
dec
loopne
jle
xchg
or
fcomip
sub
stc
sub
xchg
cmp
and
mov
fwait
jmp
mov
jns
jns
push
ficoms
andb
imul
mov
aam
mov
jmp
cmpb
ficoms
stos
rolb
fmull
ret
out
adc
push
pushl
jg
je
inc
das
xor
sbb
xor
cwtl
xchg
test
int
dec
jmp
push
mov
xchg
mov
mov
imul
imul
mov
jg
mov
mov
imul
imul
jge
xchg
adc
out
xchg
xchg
xchg
imul
pushfw
lock
repnz
fidivrl
mov
xorl
push
out
es
adc
repnz
cwtl
adc
popa
add
push
in
xchg
test
ds
int
jge
xchg
fs
dec
push
fnstenv
push
repnz
jmp
loope
int
jg
push
lcall
lods
adc
lahf
push
repnz
xchg
adc
bound
mov
push
js
mov
mov
xchg
jo
aam
call
ljmp
shrb
xor
adc
popf
mov
push
cwtl
mov
mov
mov
jmp
call
mov
shll
test
adc
mov
push
mov
gs
sbb
lods
mov
shrl
mov
adc
jmp
jae
mov
push
fmuls
and
int3
xchg
ror
mov
lcall
or
jae
mov
clc
mov
mov
mov
xchg
lock
xchg
shr
in
in
and
loope
cmp
mov
mov
inc
mov
mov
adc
rorl
mov
xor
adc
mov
mov
cmp
xchg
jg
xor
shrl
mov
xor
adc
mov
pop
mov
pop
mov
push
mov
xchg
push
mov
dec
rorl
stos
mov
add
clc
dec
adc
xor
into
incb
out
incb
shrl
xor
mov
popa
mov
decb
inc
cmpl
pop
mov
test
int
mov
mov
data16
and
xchg
rclb
mov
mov
cltd
push
lahf
mov
xchg
clc
fistps
ror
mov
adc
mov
push
clc
mov
mov
pusha
xchg
decb
mov
mov
mov
lea
lret
push
sbb
and
decb
decl
mov
mov
decb
fidivs
mov
push
cmp
enter
call
sub
shrb
mov
mov
mov
mov
mov
mov
xchg
push
incl
xlat
rorb
std
decb
into
bnd
cmpsl
push
js
mov
frndint
mov
mov
mov
mov
iret
repz
mov
or
inc
decb
insb
ss
push
mov
and
int
mov
sub
sub
or
popa
xor
cmp
sub
decb
mov
push
sbb
decb
in
dec
pop
loope
sbb
incb
mov
or
and
out
mov
int
aaa
mov
add
pop
mov
push
mov
fldcw
pusha
mov
pop
xchg
push
pop
cwtl
pop
xchg
push
ret
jle
push
dec
xchg
jle
stc
or
inc
decb
inc
rcl
xor
mov
mov
decb
mov
popa
pop
push
add
mov
incb
xchg
xchg
loop
dec
adcb
mov
xchg
xchg
adc
xchg
movsb
xchg
ret
mov
ret
jae
mov
push
decb
or
sar
lea
adc
mov
incb
cwtl
int3
mov
mov
mov
pusha
and
sar
mov
mov
mov
ds
mov
mov
loop
loope
mov
decb
xchg
sahf
add
sar
jle
in
repz
outsl
push
insb
xchg
decb
xor
test
mov
mov
rcrl
iret
repz
jmp
jmp
out
xchg
or
inc
mov
jl
push
cmp
mov
and
push
fmulp
data16
mov
mov
mov
mov
mov
insl
ss
sbb
xor
mov
data16
insb
mov
mov
mov
mov
ss
dec
mov
mov
adc
mov
mov
mov
fldcw
mov
mov
mov
mov
fwait
int
mov
mov
mov
scas
stos
mov
insb
ss
mov
mov
mov
ss
int
mov
mov
mov
mov
mov
data16
insb
mov
mov
mov
mov
insb
ss
int
jo
outsb
mov
mov
mov
or
fnstenv
lods
xor
push
inc
mov
inc
data16
mov
mov
stos
jb
jb
or
mov
adcb
ss
mov
mov
mov
mov
jb
add
mov
mov
cmpsl
mov
add
fwait
mov
mov
data16
mov
mov
mov
mov
mov
insb
ss
int
shlb
mov
mov
stos
shrl
stos
cmp
aaa
fwait
leave
stos
iret
stos
lds
inc
aam
ss
repnz
stos
lock
out
stos
fdivl
stos
fisubrl
out
and
pop
stos
std
stos
add
mov
sub
fistl
stos
in
stos
jmp
in
jne
pop
jo
mov
xor
adc
stos
or
cli
int
mov
stos
clc
stos
push
stos
imull
ss
les
add
cwtl
jns
push
stos
call
jnp
je
jno
jno
xchg
jb
mov
push
push
int
push
push
test
test
test
mov
insb
ss
test
test
test
ss
int
test
test
test
test
test
data16
insb
test
test
test
test
fwait
int
lds
test
test
test
pop
aad
ss
test
test
std
test
push
clc
frndint
push
cwtl
test
push
jae
test
mov
iret
shll
xor
insl
jnp
dec
loope
fimuls
ds
push
pusha
sarl
adcl
stos
mov
stos
mov
outsb
stos
xchg
rclb
push
pop
mov
stos
xchg
fldcw
xchg
repnz
shlb
data16
lcall
movsb
stos
inc
movsb
adc
fldcw
stos
mov
test
stos
scas
stos
movsl
stos
mov
mov
insb
ss
mov
stos
loop
stc
int
stos
loopne
into
test
lret
inc
aad
jb
xlat
mov
insb
ds
in
repz
fbstp
aad
lcall
add
test
test
fists
mov
mov
test
test
xchg
sarl
test
sub
or
or
cs
insb
push
test
and
pop
test
test
test
test
test
lods
xor
xor
test
ss
adc
test
test
test
push
test
inc
push
cmp
cmp
int
es
test
test
scas
push
scas
dec
data16
insb
scas
dec
scas
push
scas
sbb
sbb
sbb
subb
mov
sbb
scas
xor
and
scas
and
scas
pop
xchg
mov
insb
ss
int
xor
push
scas
push
mov
ss
scas
outsl
repz
scas
gs
cs
adc
scas
jb
in
lret
and
scas
jo
call
inc
mov
mov
scas
js
sbb
adc
scas
pop
scas
pop
out
pop
pusha
scas
push
scas
push
adc
scas
test
cmp
mov
cmp
ljmp
nop
jb
scas
mov
lods
popa
scas
lcall
scas
xchg
sar
jmp
pop
scas
xchg
scas
mov
jb
scas
cltd
push
dec
scas
lahf
mov
scas
movsl
xchg
inc
scas
push
loopne
lock
mov
lods
jne
mov
lods
subl
fldcw
mov
ss
int
lods
mov
mov
cltd
lods
lahf
lods
xchg
data16
insb
lods
fwait
lods
mov
or
sbb
and
insb
ss
dec
sub
lods
cmpsb
lods
mov
rclb
lods
shrb
mov
add
lods
mov
cmc
popf
mov
lods
jecxz
fprem
adc
lods
enter
lods
les
mov
lods
lods
lock
out
lods
in
lods
push
bound
lods
shrl
data16
scas
add
call
insb
ss
in
add
fwait
int
scas
or
or
negl
xor
scas
or
data16
mov
pop
scas
adc
insb
ss
int
and
sub
sub
data16
lods
sub
sub
fwait
xor
xor
data16
and
inc
lods
inc
lods
lods
dec
mov
insb
lods
dec
lods
dec
lods
inc
lods
aaa
int
mov
lods
dec
lods
push
lods
dec
lods
pop
lods
int
adc
lods
push
lods
bound
pusha
lods
pop
lods
pop
lods
push
push
lods
data16
lods
insl
lods
jae
imul
jne
lods
jnp
jno
push
fst
lods
push
and
lods
jl
dec
popa
lods
jp
lods
xchg
fwait
int
lods
test
lods
test
insb
lods
test
push
or
lods
xchg
nop
lods
sahf
lods
pushf
int
mov
lods
lcall
lods
inc
fs
ret
lods
test
mov
lods
movsl
lods
lock
mov
mov
insb
ss
ror
xor
adc
data16
mov
xchg
repnz
loopne
mov
insb
ficoms
iret
jb
push
lret
mov
cmp
rclw
fwait
int
lods
fsubrs
add
fwait
inc
lods
add
insb
push
fsubrl
scas
cmp
scas
or
scas
adc
clc
ss
int
scas
imulb
and
insb
scas
sbb
sbb
ss
int
pop
scas
sbb
scas
das
fildll
xor
pushf
mov
dec
xor
pop
jae
mov
mov
mov
pop
mov
mov
daa
mov
data16
mov
mov
mov
mov
ss
int
dec
mov
pop
mov
fbld
adc
mov
cmpsl
outsl
fwait
int
mov
cmpsl
imul
mov
insb
cmpsl
outsb
cmpsl
insb
cmpsl
jp
js
fwait
int
cmpsl
jbe
je
jge
cmp
fwait
pop
int
jns
cmpsl
jg
push
sub
sub
and
xchg
and
mov
push
ljmp
dec
cmpsl
inc
cmpsl
mov
inc
mov
mov
mov
je
xchg
cmpsl
stos
cmpsl
mov
cmpsl
cmpsl
cmpsl
mov
insb
ss
int
stos
cmpsb
test
mov
mov
ror
data16
cmpsb
shlb
mov
fldcw
mov
cmpsb
frstor
mov
int3
cmpsb
lret
cmpsb
cmpsb
aam
or
xor
jle
fldcw
mov
add
lock
out
insb
ss
cmpsb
std
cmpsb
add
int
mov
call
cmpsb
adc
cmpsb
push
cmpsb
or
cmc
cmpsb
sti
int
mov
cmpsb
icebp
cmpsb
mull
fldcw
sbb
push
mov
mov
and
sub
sub
sbb
sub
xchg
mov
xor
mov
inc
mov
int
dec
mov
dec
mov
fldenv
push
mov
ss
pop
mov
inc
mov
mov
pusha
mov
push
push
mov
insl
mov
bound
mov
add
jno
andb
leave
and
fwait
jl
mov
or
mov
or
mov
mov
int
int
mov
mov
fldcw
mov
mov
push
test
mov
ret
insb
ss
mov
test
mov
insb
mov
int
mov
pop
mov
xchg
repnz
fldcw
shl
xor
adc
jb
push
lcall
xchg
shl
xlat
shr
data16
jns
fdivr
mov
int
int
mov
mov
mov
cmp
mov
loope
int
lds
mov
cli
mov
insb
mov
hlt
mov
mov
sbb
add
fldcw
mov
xor
int
sub
push
movsl
adc
data16
movsl
xor
cmp
clc
int
cmp
inc
movsl
ja
jl
popf
movsl
mov
movsl
xchg
fildll
movsl
movsl
nop
mov
movsl
test
pushf
mov
scas
xor
lods
adc
mov
call
mov
mov
mov
mov
push
test
movsb
xchg
mov
mov
int3
xor
mov
mov
jb
push
mov
int
mov
inc
inc
pop
or
add
mov
add
push
add
and
dec
jns
insl
and
adc
mov
movsb
aaa
rol
les
leave
jno
rep
sbb
mov
sub
push
adc
scas
add
ss
es
mov
sbb
mull
mov
fcom
call
dec
and
add
or
stc
std
incl
fidivrs
adc
pop
mov
frstor
fldenv
add
mov
lcall
pushf
adc
mov
in
movsl
push
add
cwtl
lahf
mov
xor
or
jbe
mov
movsb
sub
xchg
add
dec
orb
daa
fdivrs
pushl
or
nop
lcall
les
pop
arpl
mov
dec
mov
cs
scas
repz
jmp
and
cli
inc
cwtl
sbb
and
mov
push
sarb
jecxz
nop
ret
dec
scas
jae
add
cmp
sub
pushl
mov
fisubl
in
fs
lods
mov
inc
and
mov
mov
pushf
ret
push
jo
and
adc
push
add
lcall
cmp
pop
int3
lret
and
jnp
mov
inc
push
jo
movsl
adcl
daa
xchg
add
xchg
hlt
std
stos
decl
push
sbb
inc
inc
data16
push
lods
and
push
inc
xor
dec
push
xchg
shl
fcomip
mov
fcoml
sbb
pop
jb
movsb
rclb
jnp
add
movl
sub
and
movsl
mov
jecxz
cld
out
ljmp
les
and
icebp
and
or
push
cmp
xchg
lods
mov
jge
and
mov
and
push
lock
jmp
adc
cmpsl
shll
fiaddl
mov
or
outsb
push
cmp
into
push
pop
and
fwait
add
dec
or
push
mov
xor
pop
push
subb
push
push
imul
sub
jmp
scas
adc
ds
add
out
aas
mov
push
decl
dec
lods
outsl
add
xor
sub
and
push
cmp
lahf
push
std
jmp
ret
and
sub
mov
cli
adc
jae
mov
or
clc
mov
lcall
xor
hlt
add
es
xchg
pop
jl
lret
dec
scas
xor
add
mov
lds
out
dec
stos
push
loop
ja
gs
stos
arpl
jae
or
lcall
enter
in
mov
mov
mov
sub
xor
shl
jb
dec
adc
cwtl
adc
lcall
imul
add
stos
imul
fwait
hlt
setb
sbb
ljmp
xchg
je
xchg
movsl
jecxz
inc
cs
sar
aas
xor
adc
leave
data16
loope
xor
sbbl
rcll
pushl
push
add
sub
mov
lcall
push
sahf
inc
fs
add
xchg
xchg
jmp
mov
pop
pusha
sbb
push
mov
add
cld
out
cli
jmp
jmp
and
add
popf
dec
cmp
lcall
xchg
cmpsl
mov
cmp
xchg
clc
in
mov
push
inc
ljmp
mov
cld
pop
sbb
cmpsb
pop
test
mov
stos
cmp
pop
int3
pop
mov
sub
call
jae
adc
sbb
inc
or
jg
or
incl
inc
into
inc
imul
sbb
jnp
xor
and
jmp
fdivrs
xor
push
cld
sub
data16
and
mov
ljmp
cmp
pop
jle
xor
je,pt
std
lcall
and
pop
adc
loop
test
sub
pop
inc
lret
clc
cmp
call
stos
lret
sbb
test
call
leave
sahf
dec
inc
fdivrs
mov
loopne
sub
roll
sbb
sti
aas
xor
xor
inc
das
sar
mov
and
in
mov
mov
int
lock
rclb
cmp
test
fiaddl
mov
xor
cmp
mov
dec
push
outsb
push
mov
lock
jmp
cld
scas
popa
insl
mov
lahf
cmp
cli
call
aas
push
lcall
mov
mov
ljmp
mov
mov
call
aas
jno
pop
push
scas
push
mov
lock
mov
sbb
pushl
add
out
mov
fcoms
sub
inc
push
mov
xor
sti
ljmp
inc
lret
adc
add
jle
cmp
push
out
mov
push
mov
adc
fcos
push
call
loopne
push
jbe
popa
mov
sub
push
xchg
sub
mov
cmp
daa
sbb
xor
push
push
mov
adc
xchg
xchg
test
lret
push
jbe
sub
ljmp
mov
test
xchg
lahf
pusha
cmpsb
mov
into
aam
pop
lcall
ds
pusha
sub
sbb
or
lahf
pushl
fwait
in
and
dec
mov
out
sub
push
push
pop
imul
and
or
and
or
push
sub
xor
jg
sub
mov
dec
cmpsb
fs
pop
leave
mov
das
sbbb
pop
add
pop
addr16
sub
test
cmp
push
in
inc
pop
pop
or
push
jg
inc
test
pop
sub
das
int
stc
fldenv
cmp
call
cs
ljmp
daa
cmp
enter
jl
xchg
push
dec
in
adc
insb
cmpsb
adc
mov
add
push
inc
push
push
leave
popf
or
ret
xchg
dec
lahf
insb
push
mov
push
mov
adc
sbb
out
cmp
mov
add
xor
out
lock
push
pop
fs
cmp
or
arpl
jg
lea
xor
inc
leave
sti
mov
pop
mov
push
decl
addr16
negb
push
lds
mov
push
iret
fstl
pop
jmp
decl
repz
pop
pop
adc
shl
mov
push
into
jle
mov
movsl
xchg
sub
or
xor
jno
push
mov
pop
pusha
pop
push
dec
lret
lahf
cs
repnz
enter
movsl
jae
mov
adc
push
push
into
push
in
dec
pop
lds
inc
filds
push
std
icebp
pop
and
notb
sbb
ljmp
jp
mov
cmp
push
jle
pop
test
scas
mov
aad
call
dec
out
jb
or
int3
adc
sub
xchg
jo
test
int
aaa
fucomi
xor
or
nop
cmpsb
sub
and
xor
test
sub
fwait
decb
jo
scas
cli
jmp
xchg
mov
pop
mov
cli
mov
xor
sub
nop
adc
add
xchg
mov
jge
dec
pop
loop
pop
movsb
xor
das
push
lock
movsb
lock
xchg
push
fstl
pop
dec
pop
mov
cmc
jg
mov
dec
adc
dec
jle
mov
fcoms
jmp
jno
cs
std
mov
xor
sbb
dec
and
xor
pop
sub
sbb
loop
mov
cmp
xor
or
push
cmp
data16
push
fsin
mov
xchg
mov
push
loopne
in
fisubs
repz
mov
jg
pop
pushf
leave
mov
adc
pop
push
stos
mov
ljmp
gs
sub
aam
sub
das
pop
ljmp
aaa
push
mov
jmp
or
cld
cmp
push
repnz
lahf
inc
cmpsl
pushl
test
dec
lret
cli
push
repz
push
fisubrl
jmp
fistpll
pop
add
pushl
mov
push
test
fs
push
mov
ljmp
cli
incl
jo
cs
insl
mov
sub
pop
xchg
data16
decl
stos
ljmp
or
push
shlb
lahf
xchg
fdivrs
adc
fdivrp
cmp
call
fstl
pop
push
negb
movsb
stos
mov
aas
and
sub
inc
mov
jnp
idivl
addr16
cmp
push
sub
shrl
xor
addr16
cmp
push
lock
ret
rcll
sbb
leave
push
add
mov
aas
out
out
cmp
mov
push
fisubl
cmp
aas
icebp
cld
ja
xor
shlb
ljmp
add
cmp
aad
dec
pop
aad
ficompl
mov
repnz
rcl
push
jno
fwait
xor
decl
push
push
mov
push
mov
pop
mov
btcl
push
jle
test
incl
xorb
cli
mov
in
mov
aas
and
call
jmp
cmp
cmp
loop
cmp
fisubl
cmp
sarb
incl
mov
xor
int3
pop
nop
jne
pop
xchg
shlb
dec
mov
xchg
xchg
push
mov
xchg
jnp
xchg
mov
mov
add
adc
shrb
cmp
inc
add
jmp
stos
imul
pop
lcall
data16
jge
aam
jp
xlat
cmp
aam
pop
int3
pop
stos
insl
adc
add
rcl
cmp
leave
cmc
js
cmc
xor
pusha
jg
das
cli
and
jg
lret
lock
add
push
push
cwtl
das
xor
cli
cmp
or
aad
out
shl
lock
in
aad
inc
aad
jae
cli
scas
clc
outsl
ss
mov
mov
es
jecxz
jo
jnp
ljmp
pop
ljmp
fimuls
mov
mov
lds
out
or
jbe
dec
cmp
leave
cmp
xor
mov
pop
adc
call
mov
sbb
xchg
outsl
ljmp
pop
push
ljmp
sti
adc
xchg
mov
loope
leave
adc
orl
adc
xchg
xor
lods
imul
ja
pop
cmp
adc
xchg
mov
and
ljmp
sub
xchg
pop
jg
xor
sti
cwtl
test
xor
test
inc
pop
sub
mov
sub
jb
ljmp
or
adc
enter
cs
clc
adc
lea
cmp
leave
pop
dec
int
or
pop
mov
imul
or
lods
adc
adc
xchg
cmp
or
pop
xchg
das
sbb
pop
mov
mov
sub
es
adc
movsl
jge
inc
xor
adc
mov
jge
or
mov
pop
sbbb
jmp
lods
mov
mov
mov
test
dec
xor
and
xor
or
pop
loopne
cltd
inc
out
inc
data16
lea
jle
mov
enter
incl
out
xor
adc
rclb
test
sub
out
xchg
dec
xchg
icebp
incl
js
sbb
and
adc
aad
inc
pop
add
push
mov
adc
sbb
fdivr
jg
jl
inc
xchg
lahf
out
pop
push
shlb
std
jecxz
mov
mov
sbb
test
mov
pushl
cld
cmp
pushf
xchg
mov
mov
minps
fcmove
and
jnp
mov
int3
mov
mov
sbb
mov
add
jne
call
ja
or
dec
daa
mov
xor
lcall
mov
xchg
outsl
xor
dec
repz
add
leave
fstps
mov
int3
sub
jmp
push
test
and
ljmp
mov
jns
js
out
fcmovnu
sti
mov
jmp
testb
sub
add
mov
lahf
pop
mov
add
mov
push
daa
pop
jp
jmp
and
arpl
ljmp
aaa
adc
loopne
xchg
jae
and
flds
rcll
jnp
ds
incl
cmp
loop
aam
pushf
imulb
bound
and
out
sbb
sub
shl
adc
adc
call
mov
je
mov
ljmp
mov
mulps
or
mov
adc
sbb
aaa
call
lcall
or
xor
iret
jns
xchg
push
cld
popl
pop
push
mov
out
aam
test
call
adcb
mov
nop
scas
test
mov
int
sti
int
mov
mov
repnz
ror
cwtl
inc
mov
mov
push
sbb
aad
push
push
fdivs
push
arpl
push
cli
enter
mov
les
adc
aam
hlt
insl
mov
xchg
lock
cmpsl
mov
xchg
mov
loope
jb
fldt
push
push
sti
cmpsl
mov
or
or
insb
daa
in
push
jle
xor
fwait
in
xchg
dec
pop
or
fistl
and
imul
mov
mov
insl
mov
repnz
sarb
add
push
sbb
jge
jbe
mov
push
js
push
test
push
cld
jp
sti
fisttpl
push
test
cmpsb
test
push
push
mov
incb
sti
bound
movsl
test
sub
lock
push
mov
push
sbb
mov
mov
dec
sbb
xchg
int
adc
cmpsb
ljmp
ss
addr16
cmp
cmp
sbb
cmpsb
cmpl
pop
rorl
jmp
fwait
dec
data16
inc
sbb
test
movsl
test
mov
insl
push
cltd
lods
push
stc
fnstcw
sbb
fstpt
push
pop
sarb
cmp
jge
inc
mov
andb
sbb
insb
in
inc
jns
sub
popf
test
jmp
mov
ljmp
push
add
jecxz
push
inc
sbb
mov
int
mov
ret
and
incb
data16
loop
or
fs
lods
push
rcrb
sbb
push
cld
sbbl
mov
jle
insb
jl
fdivrl
sahf
fwait
cmpsb
sti
push
fldt
sbb
cltd
jnp
mov
mov
dec
fwait
pop
sti
xor
idivl
pop
mov
ss
loop
in
fsubrl
cld
data16
pop
pop
or
sarl
int
or
lahf
sbb
push
cld
stos
pop
mov
push
lcall
jge
mov
jl
mov
mov
es
pop
pushf
fldcw
push
cmp
mov
mov
insb
mov
mov
lcall
mov
fldcw
int3
fisubs
jbe
cld
data16
jge
mov
jl
faddl
mov
push
fistpl
out
sbb
mov
imul
push
xor
cmp
data16
xchg
jp
int3
negb
xchg
mov
sbb
stc
int
push
fisttpl
cmp
pop
mov
dec
push
mov
insb
lahf
mov
dec
pop
add
lds
shll
mov
xchg
lock
int
icebp
fcmovnbe
std
xor
adc
mov
mov
push
xorb
push
icebp
aam
fnstenv
adc
lods
jno
mov
mov
push
xchg
or
out
scas
repnz
shrb
test
ss
ret
mov
xchg
jns
mov
mov
push
adc
mov
dec
push
bswap
data16
mov
nop
push
push
sti
pop
mov
dec
mov
mov
divb
xor
push
data16
in
jg
fucom
scas
jb
arpl
out
mov
ret
fnstenv
loop
push
inc
lods
and
mov
jmp
xchg
xchg
mov
mov
add
lods
loop
push
inc
fldcw
dec
and
mov
ret
jle
inc
stc
int
mov
add
push
inc
imul
push
sti
ss
bound
ret
scas
xor
jecxz
push
mov
int
jb
cmp
pop
mov
xchg
dec
fwait
int
mov
xchg
mov
pop
outsl
lea
daa
orb
push
mov
push
mul
aaa
ss
in
jg
das
mov
stos
pop
in
mov
repnz
insb
fcomps
movsb
mov
push
int
imul
imull
xlat
jge
mov
negb
mov
mov
cwtl
insb
jbe
fwait
insl
clc
outsb
push
fcomps
je
sbb
movsb
jns
push
insb
ss
int
xor
cmp
gs
ss
sub
pop
adc
fstps
inc
ds
pop
xor
sbb
cld
sahf
enter
adc
push
mov
xchg
cmp
jle
inc
aaa
dec
pop
mov
imul
inc
push
xchg
testl
ss
int
push
pusha
ffree
jbe
push
dec
push
mov
frndint
mov
or
rcrb
pop
push
sbb
js
pop
insl
fildll
mov
xchg
jno
negl
jg
mov
int
fwait
outsl
jge
push
fstl
mov
std
jge
fildll
cmp
cmpb
repnz
fidivrs
movsl
addb
push
out
inc
and
push
fnstsw
or
cmpsb
lock
mov
movb
fnstsw
mov
jle
cmc
movsb
scas
fidivrs
push
inc
aas
push
insl
repz
mov
movsl
sbb
mov
es
loopne,pn
popf
mov
fnsave
xchg
aaa
fwait
insl
xor
push
movsb
xchg
push
add
in
inc
fwait
pushf
data16
loopne
push
inc
push
cltd
push
xchg
sahf
push
repnz
mov
sbb
jb
pushf
mov
subl
insl
repnz
push
shlb
sbb
std
outsl
sub
ss
pop
fbstp
or
lds
fwait
int
movsl
jns
or
js
pop
and
int
mov
push
gs
push
movsl
rcrl
ss
jb
and
fdivl
mov
insb
les
movsb
aaa
add
adc
cltd
or
dec
test
xchg
stc
sbb
adc
push
test
xchg
cltd
or
ss
push
xor
lcall
decl
xchg
inc
pop
add
mov
push
mov
repz
sbb
outsl
lods
or
push
push
stc
xchg
dec
cmpsb
fbld
add
sbb
incl
xor
test
mov
mov
push
push
sbb
andl
mov
cmp
cwtl
ret
and
mov
in
jg
sbb
mov
mov
mov
xchg
or
mov
mov
outsb
pushf
jg
lcall
jle
lcall
cmpsb
push
add
inc
lcall
jmp
add
outsb
mov
shrb
stos
clc
sbb
add
sbb
in
leave
fistpll
lock
movsb
sahf
and
icebp
call
sbb
xchg
popf
sbb
mov
mov
xor
sbb
arpl
jg
pop
sub
push
mov
mov
popf
jle
fbld
lcall
ljmp
ljmp
and
push
and
out
incl
sub
fs
fistps
inc
sbb
jp
sbb
pushf
in
sbb
push
sbb
jg
ss
mov
mov
xchg
pop
lahf
insb
push
and
jo
push
lods
mov
or
sbb
std
jg
cld
push
movsb
lret
sub
mov
or
int
jae
sbb
mov
ljmp
jg
cltd
lcall
sbb
std
das
pushf
mov
lcall
sub
push
pop
lahf
repz
xchg
lds
sbb
rcr
or
fstps
xchg
cli
jecxz
call
rcrl
cmpsl
adc
frstor
pushl
mov
mov
fisubrs
aaa
movsb
push
xchg
sbb
adcl
das
jl
pop
les
jmp
push
adc
and
mov
scas
jmp
xor
fisubrs
and
or
sbb
jae
pushf
pushl
std
xchg
and
fwait
adc
jg
adc
leave
cwtl
and
loop
mov
adc
decl
lock
lret
push
jp
jle
pop
add
daa
jo
mov
jg
mov
inc
adc
pop
inc
jae
lahf
mov
mov
call
pop
xchg
mov
sahf
inc
sub
lock
mov
and
pushf
xor
mov
pop
mov
xor
mov
sbb
sti
fistps
ret
xor
sbb
rcrb
inc
out
lods
dec
pop
ficomps
incl
lds
test
jp
sub
jb
and
fadd
jb
shrl
cli
pushf
sub
jmp
pop
mov
aad
and
lcall
mov
mov
xchg
xor
cwtl
sbbl
cmp
fadd
xorb
mov
fdivr
mov
jo
jle
pop
sub
incl
and
inc
pop
sbb
mov
cld
mov
lods
inc
into
popf
and
inc
ds
pop
fimull
sahf
cmp
lcall
jne
sbb
push
test
nop
xor
incl
loopne
xor
sub
xchg
cmp
cmpsl
in
lcall
mov
and
push
test
xchg
dec
mov
sub
pushl
sub
mov
sbb
cmp
add
mov
ljmp
in
xlat
push
jne
cmp
gs
pop
stos
outsb
shll
imul
inc
ljmp
lods
ret
movsl
and
pop
push
mov
fwait
inc
insl
fstps
ret
sahf
leave
mov
pop
mov
lcall
test
lahf
push
stos
sahf
cmp
addr16
ss
popf
stos
mov
sub
loope
lcall
fcomps
lea
xor
pop
sub
and
incl
pop
cmp
pop
scas
and
and
xor
call
les
xor
inc
sahf
stos
aad
and
pushl
repnz
xor
jmp
mov
add
aas
jle
lret
adc
xor
cmp
movsl
sahf
push
cmp
mov
xor
rorb
cmpsl
dec
add
lret
ret
cmpsl
in
add
stos
sub
pop
cmp
nop
push
mov
push
adc
mov
dec
mov
mov
sub
test
jne
sbb
mov
mov
fmul
and
pop
std
mov
mov
inc
in
and
out
out
test
ret
mov
ret
sub
pop
out
xchg
push
push
xchg
loopne
into
lret
mov
jg
jg
cmp
dec
sahf
cmp
sahf
movsb
shlb
sbb
or
xchg
int
xor
ljmp
add
adc
rol
mov
daa
into
insb
xor
lea
mov
movsb
or
xchg
xchg
fwait
push
inc
jae
ds
push
push
inc
adc
leave
jg
pushl
ljmp
das
in
ret
movsb
js
xchg
xor
and
data16
sbb
fildl
push
and
icebp
sahf
inc
jmp
mov
xor
mov
mov
mov
es
call
nop
add
mov
and
pop
mov
sti
hlt
lahf
dec
adc
cmp
and
mov
insl
call
xchg
inc
cmp
mov
dec
negb
dec
sbb
dec
in
pop
out
pop
xor
or
insb
repz
pop
jb
lahf
mov
lcall
loope
push
pop
dec
repz
mov
xor
dec
cld
add
vmaxps
mov
sbb
cs
les
ret
lcall
and
loope
lahf
pop
lock
jg
cmp
addr16
dec
jne
pop
pop
stos
js
xor
xchg
std
ret
into
sahf
push
mov
ja
inc
mov
add
inc
jne
pop
inc
stos
jg
inc
or
rcrb
ljmp
mov
arpl
shl
jle
ss
adcb
aas
iret
add
daa
and
rcrl
mov
lret
into
enter
in
pushl
adc
jmp
inc
ds
daa
mov
mov
shl
or
rolb
mov
pushl
xchg
mov
dec
pop
mov
stc
push
xor
dec
push
mov
jmp
aam
adc
push
and
movsb
call
ds
js
mov
cmpsb
movsb
cmp
std
ljmp
jnp
dec
arpl
xor
cltd
xchg
aad
sub
ror
sbb
push
lods
xchg
push
les
int3
mov
push
inc
mov
ficoml
mov
push
cmp
mov
inc
test
test
jp
mov
sti
incl
int
rolb
test
repnz
popa
push
cli
mov
lods
pop
nop
fcoms
jg
fldenv
cmp
and
inc
jb
dec
mov
ficoms
dec
inc
std
jg
movsb
popf
jle
xor
add
mov
lcall
mov
sub
loop
stos
xchg
dec
dec
mov
cs
dec
mov
aas
loop
test
dec
scas
mov
test
pop
and
in
fldl
jge
inc
inc
pop
lock
or
push
mov
out
pop
inc
dec
jns
pop
and
jge
bound
leave
adc
lret
push
into
sub
mov
lock
iret
push
mov
push
mov
adc
pop
repnz
jb
daa
jecxz
and
lret
add
sub
dec
cmp
dec
push
scas
daa
fiadds
inc
pushf
push
mov
adc
pop
push
dec
xchg
enter
enter
jecxz
lret
push
call
xchg
pop
std
xchg
push
testl
pop
sahf
ljmp
dec
dec
clc
push
adc
jb
jne
sub
scas
rol
xchg
dec
test
xchg
jb
lret
cmp
out
inc
mov
adc
adc
movsl
mov
incl
xchg
movsl
pop
sahf
daa
gs
xlat
sub
xchg
ljmp
inc
inc
mov
incl
sarb
sub
push
pop
inc
cmp
and
jns
aad
rclb
inc
push
mov
les
adc
or
rol
jae
sahf
aam
loop
ficoms
add
arpl
cmpsl
imul
inc
push
add
mov
call
inc
sti
adc
lahf
aam
or
jmp
add
jmp
jb
or
decl
cs
hlt
out
xor
add
adc
fdivrl
xchg
push
fisubrs
adc
aaa
sar
xor
pusha
pop
fiadds
xchg
imul
xchg
dec
xchg
pusha
pusha
push
cmpsl
imul
insb
mov
test
pop
or
mov
push
mov
xor
lcall
ds
lods
mulb
or
push
add
repz
call
test
cmp
test
fld
sbb
and
or
xchg
decl
sub
pop
inc
mov
sahf
xor
repz
lea
push
mov
test
call
sub
pop
mov
pop
cmpl
jle
xchg
gs
nop
fistpll
decl
push
add
jae
adc
mov
pop
aas
ljmp
inc
pop
es
push
rcll
loop
cmpsb
pop
dec
cmp
xchg
sahf
or
lcall
fldt
mov
adc
mov
rcl
mov
aaa
cld
sti
loopne
cltd
mov
add
and
mov
pop
std
inc
cmc
mov
out
aas
lods
jg
jl
lret
push
into
aad
sahf
jo
ja
mov
mov
aas
gs
gs
jmp
and
add
in
pushl
into
push
sbb
jo
xchg
cmp
mov
jle
rcl
jb
decl
xlat
or
xchg
push
inc
push
cmp
sub
jb
mov
xchg
xchg
lcall
push
in
xor
cmp
cld
daa
adc
inc
push
and
push
mov
call
out
gs
and
repnz
pop
sub
pushl
insb
and
sub
sbb
adcb
push
push
imul
jmp
iret
inc
arpl
mov
imul
and
push
shll
repz
outsb
movsl
and
imul
out
add
and
std
ds
sub
push
fs
jle
cmp
fcomip
push
mov
inc
imul
push
dec
xchg
insl
xchg
jl
jo
inc
push
push
popa
and
ljmp
fs
rcrb
gs
jl
stc
xchg
repz
movsb
out
pop
push
add
imul
lods
inc
ljmp
cmp
cld
xor
pusha
bound
movsl
push
and
decl
push
adc
xchg
jp
or
out
or
adc
jg
aaa
clc
cmp
adcl
fdivr
outsl
xchg
hlt
sub
popf
pop
ljmp
sub
sub
ljmp
lea
sbb
or
jae
xchg
jle
dec
xchg
out
pop
daa
andb
in
incl
adc
mov
lret
adc
mov
call
or
push
adc
xchg
icebp
cli
fbstp
cld
lock
call
cmp
cli
jo
adc
fwait
mov
adc
rcll
stos
xchg
jbe
lock
decl
cmpsl
cmp
mov
sub
lret
push
xor
fistps
in
movsl
xchg
mov
and
out
clc
cmp
push
sar
repz
push
decl
lock
dec
jl
xchg
jl
push
push
xor
jno
out
out
and
subb
mov
in
mov
add
jne
or
sub
push
sti
lcall
push
shlb
xchg
xchg
fs
adc
xor
scas
jg
xor
data16
jnp
aaa
push
xor
and
loope
call
cmc
fistl
mov
stc
xchg
jno
push
adc
mov
rcll
adc
pop
or
std
adc
adc
cs
cmp
ljmp
add
int
and
rolb
mov
mov
push
sti
inc
in
ja
sbb
and
shll
xchg
cmp
movsl
adc
orl
xor
xchg
jb
daa
jbe
mov
addb
cmp
jo
and
add
pop
mov
lea
mov
sub
mov
cmp
add
into
sub
in
pop
adc
call
jns
ja
or
repnz
or
mov
cmp
mov
jg
mov
stc
cmp
push
incb
pop
or
or
add
nop
add
jns
test
adc
test
stos
daa
adc
dec
sbb
or
mov
jns
sub
decl
nop
sahf
push
dec
xchg
lcall
pop
dec
adc
imul
sarb
jg
adc
std
call
repnz
xor
add
jp
notb
jae
mov
or
adc
cmp
jnp
mov
sti
or
shrl
adc
mov
test
cmp
pushl
xor
adcb
adc
cwtl
and
nop
std
decl
xchg
cmc
movsl
int
clc
pop
std
push
daa
ljmp
icebp
mov
jg
cmp
jg
test
or
call
add
push
sbb
out
xchg
adc
hlt
cmp
rcrb
movsb
xchg
test
cmp
cmp
jo
lcall
push
ret
aam
loope
mov
sub
add
lcall
movsb
mov
jbe
mov
aaa
or
cmp
fwait
pusha
and
xchg
aaa
rorl
mov
hlt
mov
push
int
repnz
cmp
jp
mov
outsb
dec
or
push
insl
mov
scas
mov
dec
cmp
or
mov
mov
int
repnz
ja
insl
dec
xchg
hlt
mov
movsb
or
ljmp
into
cmp
mov
mov
xchg
mov
dec
sbb
lss
xor
lahf
mov
pop
jl
nop
push
daa
mov
mov
dec
stc
mov
inc
ljmp
in
into
pop
sahf
xor
adc
dec
add
lret
mov
movsl
jmp
rolb
pop
mov
add
dec
xor
shll
dec
xor
fwait
mov
or
cmp
daa
test
ljmp
sub
andl
add
cmp
push
sbb
cmp
sub
repnz
cmp
xor
jecxz
ret
ljmp
rcr
cmp
rorl
adc
mov
mov
mov
push
mov
jae
popa
xor
jle
mov
out
cmp
incl
das
cwtl
and
mov
adc
lods
fidivs
or
fwait
es
jmp
repnz
cmp
sub
int
adc
mov
push
pop
xor
dec
cld
jno
pushf
push
test
aad
or
add
aaa
loop
mov
xchg
in
push
out
push
bnd
mov
or
sahf
in
xchg
loope
or
push
push
ss
add
or
add
cwtl
lods
sbb
push
jecxz
cmpsb
push
int
cmp
dec
cli
rcrl
lcall
cmp
and
xchg
or
lcall
cmp
and
xor
xchg
fsubp
or
mov
xor
incb
dec
xchg
dec
leave
mov
test
aas
popf
fwait
ret
call
jecxz
pop
sub
adc
dec
dec
lcall
pop
mov
dec
mov
or
pushl
lock
popa
loopne
ds
fwait
daa
sbb
mov
sbb
clc
in
mov
and
fwait
sub
adc
and
add
das
push
push
scas
mov
loope
daa
sbb
and
lcall
cwtl
es
aas
mov
in
inc
dec
jmp
int
sbb
push
push
cld
decl
jmp
icebp
movsb
and
sub
fisttps
dec
es
daa
pop
enter
es
dec
adc
xchg
cmpsl
lahf
push
mov
xor
test
fwait
xchg
lcall
sbb
mov
sub
inc
popa
jg
pushl
xor
mov
xor
lods
lret
lock
decl
dec
int
pop
mov
cmp
stos
insb
ds
and
daa
jmp
adc
xor
cs
in
lret
mov
pushl
std
decl
arpl
inc
jp
daa
and
sbb
stos
push
xchg
orb
lret
fisttpl
pop
sub
jae
cmp
dec
lods
dec
sbb
xor
cs
cmp
dec
ljmp
clc
cmp
adc
in
jle
cmp
aas
jle
daa
xchg
inc
pop
or
push
rorl
jg
adc
push
pop
fldt
mov
dec
or
jle
into
jo
inc
or
sub
mov
pop
or
clc
mov
cwtl
int3
push
insb
or
pushl
das
sahf
xchg
leave
xor
or
xchg
add
ljmp
and
add
jmp
unpcklps
xor
xor
incl
mov
pop
nop
xorb
mov
jae
adc
push
mov
aam
inc
push
pusha
mov
lock
or
nop
pop
fidivrs
rcll
decl
cs
outsb
dec
pop
rcrl
mov
punpckhdq
pushl
mov
mov
adc
sub
sbb
and
dec
cmp
cmp
and
sahf
mov
pushl
lods
sub
pop
mov
or
out
test
pop
leave
and
ret
lea
jecxz
mov
mov
add
xor
push
repz
mov
xor
xchg
loopne
das
fnstenv
dec
lcall
xor
out
daa
js
dec
push
fidivrl
int
popf
mov
scas
loope
btr
lret
call
cmp
xor
or
and
enter
cmp
repnz
mov
pushf
movsb
enter
mov
mov
imul
jo
pushl
xor
pop
and
push
outsl
mov
aam
sub
pusha
and
jmp
mov
dec
mov
sarb
lds
vpmacsdqh
lahf
add
adc
inc
mov
mov
sub
enter
mov
mov
stos
add
cmpsl
mov
jle
dec
sub
xor
cmpsl
lea
inc
fisttpl
mov
dec
jle
shrb
movsb
inc
mov
aaa
cli
jge
and
push
enter
push
test
fs
pop
and
lds
mov
in
jg
enter
inc
nop
int
aas
lds
mov
sbb
lret
sbb
call
mov
add
enter
cmp
pop
enter
add
rclb
xor
fsubrl
and
aas
inc
mov
lea
fdivp
lret
je
dec
jle
push
inc
lock
mov
lret
and
outsl
or
xchg
incl
shlb
daa
and
add
in
or
mov
fcmovne
jb
inc
mov
jp
push
in
out
xor
shll
mov
cmp
cmp
ds
mov
inc
push
mov
ret
cmp
mov
xchg
mov
mov
les
mov
ljmp
nop
mov
lret
cmp
xor
mov
imul
outsl
sub
mov
arpl
lods
orl
xor
cmp
fdivr
jg
sub
and
sti
push
mov
iret
and
mov
ds
jno
mov
lret
insl
repz
push
scas
xor
nop
mov
mov
mov
shl
pop
lret
repz
dec
roll
mov
test
lret
imul
jb
mov
mov
lret
cmp
inc
mov
gs
cmp
ljmp
roll
decl
mov
std
fistps
hlt
lret
fnstsw
cmp
inc
mov
call
and
dec
and
xor
aaa
mov
adcb
xchg
mov
mov
dec
jae
cmp
incl
mov
sahf
mov
ljmp
inc
outsl
call
jae
xor
mov
scas
dec
ror
mov
pushl
ret
and
dec
push
fstl
fwait
jmp
rcr
repz
cmp
mov
sub
jnp
mov
iret
das
js
pushl
lret
jge
outsl
rcr
xchg
rcll
mov
inc
push
adc
aaa
fstpl
mov
lods
xchg
add
or
mov
lret
les
inc
lcall
sbb
les
cmp
mov
mov
push
out
cmpsb
repnz
xorl
jg
add
sub
xor
dec
or
aam
loopne
inc
lds
mov
call
imul
in
out
pop
enter
shll
les
inc
aas
inc
gs
xchg
fldenv
xchg
mov
add
aad
add
cmp
pop
fcoml
and
scas
clc
call
and
add
mov
dec
push
inc
jl
filds
pop
cld
pop
into
jmp
ja
xchg
and
inc
mov
jg
jnp
shll
inc
pusha
xor
cmpsb
pop
sub
or
jb,pt
imul
sarb
jmp
call
mov
pusha
pusha
and
int3
jb
sub
mov
push
loope
aad
jg
dec
pop
dec
fwait
ret
mov
xchg
nop
lods
dec
imul
dec
push
or
cmp
mov
pop
xchg
xchg
dec
repnz
pop
orb
les
mov
loop
mov
push
jg
lods
sbb
add
test
fwait
lods
pop
lret
dec
ljmp
jge
jnp
leave
add
dec
sbbb
add
or
mov
loop
les
ljmp
push
std
lods
pop
mov
push
jmp
int3
push
xor
mov
push
jmp
enter
fistpl
xchg
or
imul
les
sbb
inc
test
ftst
sahf
daa
fidivs
call
add
fiadds
aaa
mov
inc
enter
mov
outsl
mov
decb
sub
inc
dec
ss
push
addl
pusha
call
std
filds
and
sub
or
cmpsl
fidivs
sahf
inc
lods
pop
stos
out
push
dec
add
ljmp
fs
xor
dec
notb
mov
sbbb
push
in
sbb
fmuls
and
ret
dec
push
mov
fiaddl
sub
inc
dec
mov
xor
call
xchg
cltd
ss
jle
nop
inc
pushf
adcb
push
test
add
lds
jb
clc
inc
pop
cmc
decl
call
mov
arpl
cld
add
jg
outsl
es
xor
add
push
insb
pop
mov
clc
mov
cli
incl
in
js
loopne
lcall
xchg
adcl
pop
adcb
cmp
push
sub
loopne
cmp
sub
out
popa
das
xor
xlat
sub
xor
nop
sbb
push
lret
pop
mov
push
add
pop
cmp
ret
gs
cmp
out
bound
fldt
jg
fimuls
subl
cs
jp
jmp
jmp
lret
outsb
xor
xorl
or
push
jg
and
fistps
mov
jmp
ret
xchg
mov
sbb
jns
incl
add
xor
xor
and
fsubs
push
mov
cld
fsubrl
aad
adc
xor
movsl
push
pop
lea
add
scas
mov
mov
pop
and
jbe
insb
gs
pop
std
fcomip
add
cmp
add
sbb
inc
subl
mov
pop
mov
jae
add
and
inc
push
sbb
mov
mov
inc
add
push
subb
push
fstl
mov
inc
xchg
jle
fsubrs
sub
test
aas
push
add
insb
nop
mov
call
push
aaa
out
test
test
pop
mov
repnz
mov
dec
mov
fndisi(8087
pusha
mov
lods
sahf
add
or
xchg
xchg
adc
xor
js
cs
sarl
ret
push
addl
cmp
mov
ror
xor
test
incl
push
arpl
mov
lds
jb
pop
xchg
mov
mov
push
dec
lcall
xchg
aad
jo
fdivp
inc
arpl
movsw
push
xor
fadds
call
repz
xchg
jge
ljmp
pushf
arpl
in
sbb
push
mov
mov
insb
ss
adc
or
or
add
fldcw
add
pushf
jb
push
cmp
fwait
int
repnz
sub
and
and
lahf
jb
ss
int
push
pop
mov
xchg
push
repnz
rorb
or
insb
xor
sar
push
fldcw
js
je
jo
insb
shrb
xor
adc
inc
xchg
push
cwtl
push
ss
int
mov
xchg
nop
repnz
mov
test
test
push
mov
mov
xchg
mov
lods
shrb
xor
fstl
mov
outsl
ss
int
shl
int3
ror
xor
adc
rcll
std
push
clc
mov
xchg
lock
pusha
jle
call
rcll
dec
incb
incb
incb
cwtl
rolb
push
incb
incb
rolb
inc
xchg
push
incb
pusha
add
cwtl
incb
incb
incb
orw
push
incb
inc
xchg
orl
push
incb
inc
add
xor
incb
incb
add
push
cwtl
incb
inc
mov
incb
adc
incb
incb
incb
incb
std
data16
jg
lods
jb
push
or
aaa
xchg
ret
repnz
iret
call
xor
ret
push
insl
xor
enter
xchg
stos
ds
shrl
xor
insb
lcall
mov
push
les
mov
xchg
roll
clc
aaa
orl
xor
mov
scas
or
add
mov
outsl
add
push
mov
incb
adc
mov
lock
push
mov
mov
fsubrs
push
add
xorb
pop
incb
lods
jb
xchg
cmp
lods
xlat
pop
pusha
call
lods
xchg
adc
ja
mov
and
jg
jae
dec
shl
mov
sbb
sub
sbb
jmp
and
sbb
gs
fs
popf
push
xchg
sub
clc
test
cmc
pushl
pop
xchg
cmc
inc
loopne
push
cltd
dec
or
mov
xor
outsl
movsb
ds
cld
xchg
cmc
stc
repz
subl
jg
js
mov
mov
repz
or
pusha
mov
orb
push
xchg
aaa
jmp
add
dec
mov
fdivr
pop
std
das
pop
nop
aad
pop
cmpb
inc
aas
jmp
fs
or
in
popa
mov
xchg
fstpt
mov
aad
sub
ljmp
dec
xor
mov
sub
dec
sub
xchg
shlb
sbb
incl
loopne
les
jl
notb
fs
xchg
decl
add
sub
movsb
repnz
hlt
dec
push
push
je
outsb
pop
fst
xor
call
sub
insl
cs
jmp
xchg
test
sbb
dec
push
mov
xchg
in
call
mov
aad
test
lcall
daa
sbb
push
pop
mov
add
mov
maxps
mov
dec
les
xor
xchg
icebp
aas
test
sbb
mov
imul
loopne
adc
call
outsl
loop
jb
push
adc
cmc
mov
dec
pop
and
dec
xor
int3
dec
ficomps
mov
jle
in
add
das
icebp
xchg
in
push
movsb
jg
and
bound
pop
sti
jle
popa
aad
mov
sbb
cwtl
cwtl
jae
ret
daa
pop
mov
jg
fldt
popf
xor
loopne
push
shll
push
outsl
shlb
jbe
mov
call
ja
sbb
dec
ror
dec
loopne
daa
decl
lods
aaa
push
fstpt
ja
popa
push
js
pop
push
lcall
popa
jmp
test
lds
sbb
push
js
les
leave
dec
lods
in
lods
or
fidivrs
adc
pop
pop
rclb
cmp
lock
adc
orl
lds
mov
inc
xor
shl
pop
pop
imul
js
xchg
xor
push
adc
mov
mov
loopne
sbb
es
cwtl
xchg
sbb
repnz
cltd
cmpsb
xor
repnz
shlb
xchg
std
push
neg
std
mov
mov
push
push
int
decb
rcr
cs
std
xchg
jno
push
push
shlb
xchg
aam
adc
or
push
add
mov
jo
push
adc
mov
dec
push
mov
ljmp
paddw
xor
xchg
enter
sarl
xor
adc
std
insb
ss
in
xchg
jno
push
push
clc
mov
nop
mov
mov
shrb
mov
mov
jg
fnstenv
idiv
mov
ret
clc
sarl
fsubrs
or
sar
push
std
int
int
fwait
add
decb
xchg
lcall
dec
add
push
incb
adc
fwait
add
sar
incb
decb
xchg
adc
dec
add
jle
mov
add
sarb
and
sar
push
pusha
sub
fwait
decb
xchg
hlt
jle
mov
movsl
mov
push
mov
std
inc
cld
addb
push
xchg
inc
jle
mov
adc
push
push
adc
and
subb
sbb
mov
sar
push
adc
fwait
adc
incb
push
cltd
fisttps
xchg
push
lods
movsb
sub
push
rcrb
and
dec
incb
push
add
push
cli
adc
add
dec
push
incb
incb
adc
cli
push
fdivrl
xor
and
cmp
add
push
xchg
mov
stos
mov
mov
push
push
adc
int3
outsl
add
incb
decb
xchg
scas
jg
mov
outsl
orl
adc
xor
rolb
decb
xchg
fwait
ljmp
pusha
add
push
incb
adc
dec
fnstenv
orl
xchg
test
inc
int3
jmp
xor
adc
inc
repz
rolb
decb
xchg
outsb
mov
pusha
add
push
incb
adc
jmp
mov
push
incb
xchg
enter
or
pop
or
push
incb
adc
jg
add
clc
cmpsl
sarb
push
xchg
jg
cmpsl
inc
outsl
add
cwtl
sub
push
incb
adc
mov
pop
inc
incb
decb
xchg
leave
inc
inc
dec
filds
xor
push
incb
adc
jg
sarb
loopne
jmp
incb
decb
xchg
mov
mov
push
incb
adc
rcrl
push
decb
xchg
xchg
clc
rolb
adc
push
adc
clc
ret
ret
stc
dec
pusha
and
push
decb
xchg
sbb
xor
adc
clc
fwait
rcrb
incb
xchg
adc
push
inc
int3
incb
incb
dec
pusha
cmpb
clc
mov
incb
decb
xchg
xor
dec
in
incb
incb
es
mov
into
mov
incb
decb
adc
stc
mov
incb
add
push
jg
mov
clc
incb
pusha
add
push
inc
sub
push
dec
lock
jle
mov
incb
adc
lods
or
push
xchg
outsb
mov
push
dec
lock
add
push
adc
jns
ret
push
xor
mov
incb
cwtl
loopne
add
push
adc
stc
aad
push
add
add
incb
stc
mov
loopne
cwtl
rolb
push
jle
mov
cwtl
insl
adc
xchg
fstpl
inc
lods
lcall
es
jns
aaa
orl
xchg
fnstcw
sub
cld
fwait
rolb
incb
adc
test
stc
int3
outsl
add
incb
decb
xchg
pop
jns
adc
clc
aaa
orl
adc
stc
shll
add
incb
incb
xchg
jns
lret
xor
push
adc
stc
aam
fwait
rolb
decb
xchg
jbe
mov
sub
dec
pusha
add
push
incb
adc
jns
imul
pusha
outsb
rcll
repnz
push
xchg
mov
incb
adc
fldcw
incb
push
js
je
jo
insb
int
data16
push
stc
in
jae
cli
in
pop
push
push
loopne
or
ljmp
sub
decb
mov
lcall
add
out
in
out
inc
fsub
outsb
and
out
test
in
imul
cli
repz
in
cld
loopne
ja
movb
jb
dec
loope
insl
mov
pushl
leave
and
sub
out
in
out
inc
adc
or
mov
sti
fs
repz
in
test
sbb
fucomi
out
in
jg
rorl
lret
sub
in
mov
in
imul
in
test
jp
cld
jmp
xchg
jmp
push
in
sub
jns
dec
in
pushw
in
rol
lcall
in
or
ljmp
call
lret
sub
in
mov
in
imul
in
test
mov
inc
add
or
xchg
in
sub
in
imul
dec
and
cmpsb
data16
or
out
dec
mov
sub
out
push
out
add
dec
loop
ret
out
or
out
ljmp
mov
push
mov
lret
out
push
out
lret
inc
in
cmpsb
cmpsb
in
push
pop
in
out
in
incl
in
es
in
xchg
push
data16
sub
and
inc
cmpsb
inc
in
push
cmp
xor
dec
in
jecxz
incl
in
es
xchg
in
data16
loope
sbb
or
sbb
out
div
fildll
loop
repnz
ljmp
repz
repz
es
or
stos
jmp
repz
repz
decl
test
repz
lret
push
repz
adc
lea
fdivp
gs
repz
ss
sub
repz
aaa
lods
or
out
repnz
imul
pusha
dec
icebp
cmp
jg
mov
repnz
dec
repnz
ret
repnz
std
and
inc
or
sti
stos
push
std
adc
sahf
jecxz
call
jbe
lcall
jecxz
insb
stos
jecxz
int3
cmpsb
jecxz
stos
mov
into
or
jecxz
in
lcall
jmp
xchg
sub
jecxz
mov
jecxz
insb
mov
cltd
int3
xchg
jno
xchg
jecxz
or
cld
popa
call
mov
cld
push
sub
cld
inc
push
data16
xor
jb
dec
or
cld
and
pop
cld
cmp
push
insl
cld
cld
adc
inc
cld
das
mov
cld
pop
push
cld
imull
jg
shl
in
cli
out
decl
out
xlat
sub
out
ljmp
out
fcmove
pushl
pop
sti
std
xchg
lods
pusha
hlt
inc
xor
xor
rcl
out
lcall
jmp
test
lret
dec
cmpsb
int3
cmc
incl
push
hlt
cmp
sar
mov
inc
jo
pop
or
lcall
fisttpl
out
sub
outsb
jge
movsb
std
in
sahf
mov
mov
jg
or
push
push
mov
sbbb
sahf
imul
test
imul
lcall
loope
movsb
sub
jmp
mov
jmp
imul
es
int3
mov
call
mov
call
popa
sub
cmp
and
out
testb
push
xor
jge
mov
cld
pop
dec
pusha
std
or
mov
loop
in
pushl
clc
nop
loop
dec
pusha
jo
out
jecxz
outsl
mov
incl
stos
out
inc
mov
jmp
rol
js
insb
daa
aad
fiadds
pop
out
mov
inc
sub
and
imul
push
imul
dec
push
test
mov
mull
cmc
testl
cld
xor
cmpsl
outsl
scas
lret
push
outsl
mov
ret
mov
push
push
imul
pop
push
mov
les
bound
mov
jmp
icebp
jmp
adc
jg
cmc
push
test
in
push
inc
push
and
ljmp
js
fs
ljmp
mov
add
xchg
dec
out
mov
int3
call
testb
imul
sub
sub
ds
inc
call
decl
push
inc
testl
repz
push
mov
jle
out
jle
push
ljmp
jle
lret
addr16
sub
adc
inc
lcall
add
ljmp
jg
mov
js
mov
xabort
andb
ljmp
ja
mov
sbb
test
mov
jmp
leave
sub
cvtdq2ps
testb
loope
push
loope
dec
sbb
nop
sub
dec
jle
mov
loope
push
pop
in
fldt
jns
mov
loop
dec
int
in
lods
loop
jmp
pushl
into
mov
ljmp
adc
pop
loopne
mov
sahf
in
add
jmp
inc
aaa
imul
pop
jg
incl
jmp
cwtl
test
jmp
or
sub
clc
decl
cwtl
push
jmp
inc
es
adc
andl
sarb
jg
stos
sarb
mov
std
push
lret
pop
pusha
in
sub
pusha
aad
in
leave
pusha
lcall
pushl
mov
dec
cmp
in
sahf
lea
ljmp
hlt
dec
push
mov
push
popa
movsl
outsb
cmpsl
jge
dec
imul
dec
sub
imul
imul
jmp
jecxz
fadds
imul
or
mov
cwtl
dec
sub
cld
ljmp
test
call
push
imul
test
lock
inc
cmp
dec
mov
ljmp
decl
movb
stos
pop
push
mov
push
push
insl
mov
sub
in
jne
inc
jo
cld
pop
sbbb
lock
or
in
call
ljmp
xchg
lea
mov
fstpt
jg
int3
and
xlat
or
xorl
or
sub
push
or
in
incl
outsb
sub
xchg
f2xm1
push
jae
clc
jecxz
jns
sub
scas
clc
fmuls
adc
push
stos
add
and
and
enter
stc
pushf
scas
fildll
or
in
jmp
inc
insb
jl
xchg
in
imul
insl
dec
pop
or
out
fs
imul
mov
in
xor
fisubrs
test
inc
idiv
mov
and
or
lods
push
ljmp
and
es
lock
js
pop
lock
clc
fmull
clc
xchg
stos
out
push
or
loopne
call
jns
es
stc
leave
mov
push
lret
inc
cmpsl
ret
xchg
ljmp
ret
xchg
inc
out
jg
es
push
or
in
and
fucomip
push
es
adc
std
icebp
sbb
jmp
clc
jb
insl
out
mov
push
mov
in
ljmp
rclb
inc
dec
sub
sbb
and
sar
ljmp
in
lret
push
inc
dec
outsb
lret
insb
jnp
jge
push
xor
icebp
fisttps
mov
js
or
imul
popa
inc
call
repnz
call
shrb
lea
or
insb
sbb
dec
in
test
sti
ja
popa
xchg
adc
push
lret
jo
add
mov
repnz
in
pusha
es
adc
fisubrs
js
lea
dec
and
mov
xor
leave
lods
push
int
push
mov
imul
ds
xchg
insb
loopne
cwtl
int3
lock
mov
test
push
mov
sub
mov
jmp
fnstenv
fwait
ja
jnp
ds
jp
fsts
jmp
jb
pusha
data16
int
call
jmp
mov
sti
push
sub
inc
sti
sbb
sti
or
scas
push
add
xor
fdivr
std
dec
push
loope
push
clc
mov
sti
cld
mov
or
push
movsb
sti
aam
push
call
ds
loopne
push
les
fisttpl
sar
testb
into
fs
mov
push
in
inc
sti
iret
out
scas
ret
dec
fs
call
ljmp
cmpsb
lock
cmp
xor
sub
in
push
shrl
cli
cs
jg
cmp
sub
imul
pop
cli
sbb
push
sub
jp
stos
sar
jg
fidivrs
push
jnp
dec
sar
stos
aad
inc
mov
jnp
dec
mov
sti
aas
stos
sti
aaa
mov
in
dec
outsl
in
test
in
or
add
cli
aaa
inc
inc
in
in
sub
incl
shll
call
rorl
xchg
jmp
mov
fs
ljmp
nop
sub
jnp
mov
xor
jnp
enter
sub
imul
dec
xlat
add
cld
sub
mov
insl
subb
sahf
cmpsl
sub
jb
jg
arpl
jnp
inc
jmp
jae
xor
lea
push
cmp
add
daa
or
cli
or
sbb
sbb
and
ljmp
jp
into
outsb
jp
scas
mov
mov
in
test
dec
lahf
ljmp
dec
mov
dec
or
push
xor
sub
inc
out
cmc
daa
push
out
add
loop
incl
or
repnz
out
loop
xor
loopne
sbb
xchg
outsl
xchg
outsl
jmp
push
lret
call
xchg
in
cmp
in
sub
pop
repz
call
pop
test
jp
dec
jmp
jle
pop
cmpsb
jl
adc
aad
iret
jno
inc
ljmp
ljmp
aaa
es
inc
push
mov
lret
push
shll
adc
mov
jmp
in
enter
stos
xchg
fs
mov
xchg
push
in
lret
imul
mov
sti
xor
ljmp
jnp
dec
movsb
jnp
sub
aam
leave
insb
popf
jnp
lret
sti
mov
sub
ljmp
fs
enter
sub
out
jbe
insl
ljmp
ds
decl
mov
jbe
push
jbe
dec
sbb
fsubrl
pop
neg
in
je
mov
sub
and
aam
inc
in
popf
gs
int
repnz
jmp
aas
in
out
ss
into
sbb
in
push
sub
shr
cmp
lret
dec
cmp
mov
jmp
ficompl
in
int
in
lods
sbb
movsb
or
dec
decl
dec
and
lods
fsubp
fwait
lea
out
insl
es
nop
out
incl
pop
in
ljmp
push
mov
in
push
negl
inc
testl
or
push
ljmp
test
arpl
adc
mov
pop
cmc
push
push
cmp
icebp
and
out
icebp
daa
inc
sbb
daa
enter
fcomip
fdiv
xor
push
cmc
icebp
add
jecxz
pop
out
icebp
cli
inc
inc
icebp
or
jg
and
icebp
testl
add
icebp
push
in
inc
imul
les
pop
icebp
adc
loopne
ljmp
or
mov
cmpsb
push
jno
xchg
jno
sahf
xchg
es
sbb
sti
jno
enterw
xor
daa
xorb
pop
imulb
shlb
adc
call
mov
repnz
call
jg
or
fs
shll
in
dec
jo
out
lret
mov
out
mov
ds
stc
ljmp
or
subl
je
mov
je
insb
inc
out
int
jb
scas
dec
jb
xchg
bnd
call
cmc
cmc
stos
daa
imul
add
pslld
push
lock
and
lock
pushl
lock
sub
jne
push
jno
dec
jecxz
sub
shll
or
jmp
pop
repz
out
dec
fildl
out
lret
out
inc
stos
add
sub
std
ljmp
dec
pop
data16
movsb
out
or
addr16
lahf
data16
into
addr16
out
jg
push
jle
jns
enter
fdivrl
mov
es
jbe
pop
int
jns
fcomip
ljmp
stc
mov
lret
out
lods
stos
sar
lcall
outsl
lret
movsb
into
loopne
inc
stos
popa
repnz
jb
cmpsb
fidivs
push
imulb
and
shl
pop
out
enter
daa
pop
jno
and
pop
cld
xchg
push
repnz
leave
outsb
repnz
pushf
jb
push
fdivl
jmp
repnz
loopne
lock
repnz
leave
or
test
repnz
cmpsb
movsb
out
dec
inc
or
out
lret
outsb
sar
inc
out
stos
xchg
mov
cwtl
push
lcall
stos
cmp
inc
or
clc
sub
dec
sar
lods
movsb
clc
lret
mov
jecxz
ljmp
clc
mov
sub
js
or
cmc
cmp
jne
int
cmc
rep
lcall
movsb
jne
insb
mov
mov
lods
push
mov
lcall
addr16
aad
inc
dec
and
sub
out
pcmpgtb
out
out
movsl
in
dec
cltd
out
sub
call
mov
test
cmp
dec
jae
xchg
inc
out
cmpsb
add
inc
outsb
jae
movsb
mov
hlt
sub
jmp
cmp
add
and
dec
hlt
sti
or
or
or
jmp
cmp
in
jae
xchg
hlt
inc
jecxz
stc
jae
repz
dec
idiv
test
mulb
push
mov
cmc
pushf
mov
data16
call
mov
loopne
mov
pusha
add
adc
lret
or
arpl
mov
mov
loopne
sub
mov
insb
sbb
outsb
int
popa
push
sub
inc
sbb
loop
or
cmc
je
and
sbb
ficoms
xchg
xchg
repz
cmpsl
inc
pop
jae
jmp
std
jbe
mov
testb
neg
dec
xor
ja
or
out
cmc
or
jne
lock
cmc
lods
or
push
pop
jae
push
mov
loopne
or
pusha
sub
adc
or
jne
fidivrl
pushl
shll
pusha
movsb
lret
pop
jb
sub
leave
jae
insb
push
pusha
mov
dec
sub
popa
or
loope
cld
ljmp
clc
dec
mov
popf
sub
hlt
es
or
jg
sub
fs
inc
in
not
sub
or
fsin
mov
inc
mov
imul
jmp
loope
test
loope
or
sbb
int3
int
mov
push
jae
mov
cld
jae
lret
adc
lcall
jp
jb
int
jae
sub
rep
or
repz
or
dec
shl
fcomip
jmp
scas
push
cmc
popf
in
sub
test
fbstp
fs
ja
test
xorl
dec
into
hlt
inc
sub
hlt
cmp
jg
xchg
enter
push
cmpsb
xor
push
mov
loope
dec
add
mov
pop
popa
ja
clc
jle
jmp
decb
fbld
push
int3
repnz
mov
jmp
fdivs
dec
xorb
pushl
inc
out
mov
push
arpl
push
lods
test
movsl
lea
jne
les
cmc
jg
dec
cmpsb
mov
xchg
repnz
imul
in
xchg
ljmp
pop
and
clc
dec
aaa
mov
cltd
std
adc
in
sbb
std
adc
bound
dec
outsl
jecxz
sub
lock
ljmp
and
jmp
inc
sub
dec
pusha
fsubr
ja
stos
int
call
icebp
jo
fildl
addr16
arpl
icebp
negb
cwtl
dec
incl
fdivp
dec
fs
testb
jbe
and
jbe
add
jbe
sub
inc
daa
jbe
and
jbe
add
jbe
fs
inc
dec
neg
daa
xchg
test
and
hlt
mov
inc
loop
mov
cmpb
in
mov
aaa
sbb
cmp
dec
test
daa
icebp
add
inc
filds
sub
div
jmp
mull
cmp
in
adc
out
cli
jmp
jmp
bound
sub
xor
repz
data16
dec
mov
shlb
imul
xorl
aad
push
and
push
test
ja
call
std
in
ja
les
es
mov
out
ja
inc
jl
push
lcall
lahf
ds
outsb
imulb
mov
addr16
fadds
bound
mov
aam
and
cld
mov
dec
cmp
stos
sub
shl
arpl
in
push
loop
call
int3
iret
jecxz
mov
jecxz
imul
inc
stos
cli
jl
or
cld
or
jo
adc
decl
jl
lods
stos
jl
mov
jl
lret
loopne
popf
stos
fstpt
loop
call
jno
int
loop
sub
icebp
aaa
ljmp
jp
call
pop
mov
sbb
or
hlt
movsb
adc
jmp
and
xlat
sub
push
cld
dec
inc
lret
cmpsb
loop
mov
mov
inc
es
adc
pop
pop
lock
leave
imull
cmp
orb
jge
popa
insb
push
lret
jp
cmp
push
repz
or
jae
dec
aam
cmp
std
jae
jg
mov
addb
xor
fisubrs
sub
pop
call
inc
cli
rep
lret
inc
jae
push
or
sub
cmp
add
rorb
in
rorb
out
mov
in
jg
lcall
insl
and
mov
cmp
sub
xchg
jg
ret
mov
js
cmpsl
test
cmp
sbb
stc
aas
in
mov
jle
jmp
inc
or
jl
xor
adc
insb
xlat
push
jb
dec
ljmp
ljmp
lea
ljmp
in
ljmp
xor
dec
ljmp
repnz
js
out
clc
xchg
dec
cmp
pushl
or
xor
jg
leave
sbb
js
xchg
jg
addr16
stc
addr16
push
jp
xor
incl
push
adc
mov
sub
mov
test
clc
and
jmp
js
dec
lret
clc
cmc
stos
jno
lock
or
xchg
clc
leave
imul
lcall
js
mov
ljmp
test
push
or
in
aaa
enter
fistl
test
enter
ror
in
shrl
adc
jg
push
repz
or
pop
sub
in
cld
fcomip
sahf
repnz
cwtl
stos
and
push
jg
insl
or
push
stos
lea
pushl
xchg
lods
jmp
dec
sarl
sub
in
pop
sub
or
in
cmp
sub
in
sahf
insl
fsin
fs
lret
jns
cmpsl
divb
cmp
and
push
jns
inc
and
and
clc
push
xchg
jns
out
stc
xchg
nop
jle
daa
jno
hlt
mov
fs
push
dec
jle
dec
es
clc
xor
stc
gs
jmp
or
xchg
xor
pop
or
insl
and
xlat
outsb
adc
iret
outsb
or
decl
add
outsl
lret
stos
dec
outsb
mov
xor
ljmp
test
sub
fwait
or
insl
enter
sub
repz
insl
mov
test
push
fisubrs
addr16
mov
out
jmp
stos
mov
inc
mov
std
ror
dec
jl
lods
push
jl
or
cld
lcall
outsl
pusha
sub
outsl
int
lds
dec
rolb
incl
dec
cli
push
inc
jne
mulb
mov
sti
int3
data16
jmp
cld
je
shlb
add
jl
imul
movsb
add
xor
mov
sub
sbb
dec
daa
jge
and
jge
xchg
test
pop
loopne
test
pop
jnp
mov
sar
das
testb
cmp
push
js
xchg
jns
imul
in
sub
js
mov
push
jbe
mov
inc
jns
or
lea
jp
dec
test
jns
decl
imul
xchg
test
sub
mov
pop
jo
jecxz
sub
outsl
push
or
lcall
dec
stos
outsl
adc
mov
aam
arpl
push
out
cmpsl
lret
outsb
sub
idiv
decl
jle
jecxz
dec
jo
sub
jo
mov
outsb
insw
fistpll
dec
iret
std
push
jle
loop
loopne
push
mov
insl
cltd
cld
mov
adc
je
jnp
or
jnp
pop
lock
jmp
sti
xor
icebp
cmpsl
xchg
cli
fiaddl
hlt
jnp
sti
mov
sarl
pop
cmpb
push
push
jl
leave
pop
jl
call
enter
arpl
icebp
imul
cld
out
movsb
sahf
jl
xchg
cld
mov
mov
mov
call
test
insb
pop
dec
dec
jns
cmpsb
dec
stc
es
sbb
sarl
add
jns
sub
mov
clc
push
mov
movsb
sub
scas
mov
jl
mov
inc
fdivr
and
push
nop
cli
out
std
or
movsb
cmpsb
es
xlat
or
loop
fs
cmp
mov
test
out
mov
imul
pop
pop
call
jmp
mov
jmp
push
stos
pop
call
sbb
aaa
cli
mov
movsb
leave
sti
lcall
lods
jle
jmp
pop
lods
sub
pusha
cltd
imul
pushf
lcall
mov
push
ja
dec
mov
addl
xchg
jl
jmp
call
cmp
lods
jp
sub
jp
mov
jp
insb
sti
jp
int3
push
mov
mov
lods
in
fwait
jp
dec
push
movsl
sub
push
mov
int
cld
outsl
ss
lods
mov
fwait
push
ds
mov
data16
subl
ja
push
jnp
outsl
or
jae
lcall
in
imul
push
pop
outsl
mov
rcr
scas
push
dec
bswap
push
push
inc
das
ds
call
stos
dec
inc
jp
sub
mov
sub
mov
add
sub
and
jg
std
jg
ss
leave
leave
test
bound
adc
divb
imul
mov
rorb
sbb
xchg
ljmp
test
jbe
lea
test
incl
stos
out
or
jnp
push
call
fwait
mov
jnp
dec
jnp
ljmp
xor
dec
jnp
ljmp
jp
int3
sub
sub
push
jmp
sub
sub
pop
jp
jg
jmp
jp
and
sub
pop
fdivr
fsubs
sti
mov
jmp
jbe
imul
sub
add
fistpll
test
jp
clc
jns
dec
movl
lods
xchg
jg
dec
cwtl
jg
sub
cld
push
cmp
ljmp
pop
cmpsb
ljmp
jmp
dec
cld
lds
jmp
stos
scas
scas
imul
jle
gs
or
jmp
scas
jg
cmpsb
push
adc
sbb
fucomip
das
insl
scas
leave
fsubrl
xchg
push
cld
cmc
movsl
ljmp
jp
movsb
ljmp
xchg
jmp
popf
jmp
ljmp
test
hlt
stos
push
je
enter
lods
and
mov
ljmp
ljmp
rorl
sub
in
cmpsl
pushf
clc
xchg
push
jl
fists
cmp
test
jecxz
repnz
xchg
stc
mov
cmpsl
lcall
mov
add
out
cld
and
test
inc
or
test
sub
stos
xor
fwait
inc
loopne
cmc
mov
mov
push
sub
mov
and
loopne
imul
lret
dec
sub
aaa
std
call
xor
je
lret
mov
cmpsl
lods
inc
ljmp
jns
or
inc
imul
bound
data16
stc
pop
out
pop
decl
xchg
push
addr16
jle
dec
lock
xlat
std
outsl
cli
lods
jge
xchg
jmp
in
jle
sub
adc
jg
jmp
lock
cmpsb
xor
je
or
dec
enter
lods
mov
cld
pop
cld
mov
cmp
stc
xlat
dec
out
lds
mov
xlat
stc
leave
dec
call
shrb
imul
es
int
imul
imul
jmp
dec
sbb
sbb
xor
mov
xchg
js
in
jp
push
or
and
lcall
push
cli
in
mov
mov
imul
aam
and
aad
subb
push
jg
call
jle
mov
cwtl
adc
dec
enter
insl
xchg
jmp
add
lret
dec
daa
rolb
mov
decl
add
inc
and
les
add
movsb
push
ds
xor
push
push
inc
call
repz
sub
test
pop
sbb
jo
adc
add
in
mov
inc
test
push
icebp
inc
push
add
add
pushl
fildl
outsl
lret
addl
stos
lods
add
xorb
xchg
add
push
add
dec
add
xchg
out
out
add
cmc
add
test
adc
push
mov
push
cld
or
sub
mov
mov
xchg
push
mov
stos
fstpt
inc
sub
mov
cmp
jp
sub
xchg
into
sub
xchg
cld
push
xchg
daa
jl
gs
movl
mov
bound
xchg
add
daa
mov
sub
mov
or
adc
imul
iret
out
adc
stos
ljmp
ljmp
adc
sbb
das
cli
call
or
pop
pop
add
jb
cld
lret
xor
adc
or
adc
ljmp
ljmp
adc
push
mov
or
or
add
pop
push
dec
push
adc
mov
or
mov
adc
push
ljmp
test
ljmp
dec
push
sub
or
mov
or
fistpll
stc
push
shrl
jmp
mov
add
sarl
sub
lea
adc
insl
data16
int
xchg
ljmp
jb
pop
pop
ljmp
inc
sub
or
fs
or
lods
scas
pop
in
or
push
call
mov
mov
mov
into
xor
jo
sbb
out
testb
call
push
dec
loop
inc
sub
adc
mov
adc
push
pop
adc
add
nop
push
repnz
mov
test
int3
out
adc
push
mov
mov
xchg
mov
lods
shrb
int
add
push
fdivs
aam
shl
int3
ror
xor
fldcw
adc
adc
jb
push
clc
mov
xchg
lock
mov
in
shr
nop
push
adc
adc
jb
insb
ss
sbb
xchg
adc
or
les
rorb
xor
add
lods
mov
xor
xor
sub
jle
sub
and
and
iret
jb
push
pop
int
mov
mov
xchg
push
repnz
rorb
int
repz
inc
adc
lret
push
js
je
fildll
jo
insb
shrb
adc
lds
fsts
adc
push
mov
xchg
nop
or
incb
incb
decb
addl
incb
xor
push
incb
adc
rolb
incb
adc
subl
incb
incb
incb
push
pusha
add
incb
incb
adc
add
adc
push
incb
pusha
add
cwtl
incb
incb
incb
orw
push
incb
adc
orl
push
incb
inc
add
xor
incb
incb
add
push
cwtl
incb
adc
push
incb
adc
incb
incb
incb
incb
decb
dec
pusha
data16
push
incb
incb
xor
push
pushw
cwtl
rolb
push
adc
push
adc
incb
incb
or
incb
incb
test
adc
pop
incb
xor
push
incb
adc
incb
adc
push
incb
incb
or
incb
incb
dec
sub
addl
jecxz
xor
push
incb
adc
incb
incb
cwtl
ror
pop
fiadds
incb
dec
pusha
add
incb
incb
incb
sub
orl
pop
fnstenv
orl
incb
cwtl
rolb
push
incb
incb
ror
adc
push
pop
faddl
pusha
add
cwtl
incb
incb
incb
xor
incb
incb
orl
filds
incb
inc
add
xor
incb
incb
int3
add
cwtl
incb
incb
pop
fiaddl
adc
incb
incb
incb
incb
xchg
shrb
push
pop
aad
inc
add
xor
incb
incb
pusha
add
cwtl
incb
incb
incb
add
cwtl
pop
push
fadds
incb
incb
incb
incb
cltd
add
push
push
fildl
xor
push
incb
adc
incb
cmpsb
adc
pusha
push
push
incb
adc
incb
incb
or
incb
incb
cwtl
pop
inc
addl
dec
pusha
add
incb
incb
incb
xor
push
incb
xor
aam
incb
cwtl
rolb
push
incb
incb
pop
pusha
add
incb
incb
push
xlat
pusha
add
cwtl
push
incb
incb
xor
xchg
push
push
push
push
push
shll
push
push
jnp
xor
push
push
push
push
adc
ss
int
mov
xchg
nop
repz
mov
test
fwait
int
adc
push
mov
jle
fldcw
shrl
adc
mov
insb
push
fdivs
int3
data16
int
enter
rcll
insb
ss
int
hlt
xchg
lock
shr
xor
insb
fists
loope
jmp
mov
xchg
adc
data16
repz
or
add
add
data16
push
cmp
sub
int
aaa
fwait
sub
and
and
pop
mov
insb
ss
push
xchg
push
repz
rorl
inc
pusha
add
mov
incb
incb
xor
incb
incb
mov
add
incb
incb
adc
data16
push
incb
incb
xor
push
xor
call
cwtl
rolb
incb
incb
or
incb
incb
adc
dec
pusha
add
push
incb
incb
xor
push
incb
xor
adc
push
cwtl
rolb
push
incb
incb
dec
pusha
add
incb
incb
incb
rcl
or
adc
push
pusha
add
cwtl
incb
incb
incb
xor
incb
incb
add
sub
adc
push
incb
incb
incb
inc
add
xor
incb
incb
add
xor
incb
incb
adc
incb
xor
dec
pusha
push
incb
adc
push
or
incb
incb
incb
xor
push
pusha
data16
push
adc
sbb
push
xor
incb
incb
mov
add
incb
incb
sbb
rolb
push
incb
incb
pusha
add
cwtl
incb
incb
incb
add
or
sbb
push
incb
incb
incb
inc
add
xor
incb
incb
add
xor
incb
incb
adc
incb
xor
dec
pusha
push
incb
sbb
push
or
incb
incb
incb
xor
push
xor
cld
push
incb
adc
incb
incb
or
incb
incb
sbb
push
incb
dec
pusha
add
incb
incb
incb
sub
orl
sbb
adc
incb
incb
xor
incb
incb
mov
add
incb
incb
sbb
or
sbb
push
incb
incb
xor
push
xor
clc
push
incb
adc
incb
incb
or
incb
incb
sbb
dec
pusha
add
push
incb
incb
xor
push
incb
xor
sbb
push
cwtl
rolb
push
incb
incb
dec
pusha
add
incb
incb
incb
pusha
add
or
sbb
push
incb
xor
incb
incb
mov
add
incb
incb
sbb
rolb
push
incb
incb
pusha
add
cwtl
incb
incb
incb
push
add
dec
incb
sbb
add
cwtl
rolb
push
incb
incb
incb
incb
decb
int3
sub
push
sbb
push
incb
xor
push
incb
adc
incb
xor
sbb
rolb
push
incb
incb
test
sbb
rolb
push
incb
incb
pusha
add
cwtl
incb
incb
incb
add
or
sbb
push
incb
incb
incb
inc
add
xor
incb
incb
add
xor
incb
incb
adc
incb
xor
dec
pusha
push
incb
sbb
push
or
incb
incb
incb
xor
push
xor
or
incb
adc
incb
incb
or
incb
incb
sbb
dec
pusha
add
push
incb
incb
xor
push
incb
xor
sbb
push
cwtl
rolb
push
incb
incb
dec
pusha
add
incb
incb
incb
add
ss
sbb
add
cwtl
rolb
push
incb
xor
dec
pusha
push
incb
sbb
push
or
incb
incb
incb
xor
push
xor
or
incb
adc
incb
incb
or
incb
incb
sbb
dec
pusha
add
push
incb
incb
xor
push
incb
xor
sbb
push
cwtl
rolb
push
incb
incb
dec
pusha
add
incb
incb
incb
pusha
add
or
sbb
incb
xor
incb
incb
mov
push
incb
sbb
push
incb
inc
add
xor
incb
incb
int3
add
cwtl
incb
incb
sbb
add
cwtl
rolb
push
incb
incb
incb
incb
ljmp
xor
sbb
cmpsl
ds
test
sub
adc
jmp
push
pop
out
ljmp
je
cmp
mov
lret
int
push
add
add
xchg
or
xor
sahf
push
mov
decl
das
inc
movsl
gs
push
aam
fs
fsubr
xchg
fsubs
jecxz
xchg
test
jbe
and
aaa
fcmovnb
repnz
aam
sti
es
out
jno
push
aaa
repnz
leave
lcall
pushl
jae
ret
mov
ficoml
je
sbbl
push
out
fadds
adc
jle
dec
decl
push
jno
mov
mov
test
sar
inc
inc
push
or
lods
jle
cwtl
cld
adc
jle
insl
aas
push
and
adc
loop
or
ljmp
jl
aaa
push
scas
add
cld
or
into
aam
lcall
dec
sahf
mov
mov
ss
jge
mov
test
pop
lock
xchg
push
pushf
add
push
xor
sar
ljmp
xchg
insl
test
insl
fs
push
cmp
or
cmp
cmpsb
jns
imul
xor
dec
sahf
loopne
pop
cld
jbe
cli
pop
dec
jmp
daa
mov
cmp
add
mov
sub
mov
insl
lea
mov
inc
pop
sti
push
decl
daa
lock
mov
pushf
insb
push
lret
mov
adc
jbe
inc
stc
sbb
dec
adc
or
std
ljmp
stos
pop
fwait
dec
ret
test
xchg
repnz
dec
xchg
call
repz
push
inc
mov
loop
test
lods
mov
and
popa
mov
mov
inc
fnstsw
xchg
or
mov
adc
call
fidivrl
cmp
fwait
or
out
testl
xlat
lcall
add
or
inc
std
pop
into
cmp
sbb
fdivr
push
loopne
clc
fsubrs
dec
dec
mov
iret
outsb
ljmp
or
add
lea
lret
loope
lods
inc
out
fldt
mov
adc
or
sbb
stc
jg
mov
xor
sti
bound
pushf
adc
xor
js
mov
cmp
xor
pop
idivb
push
pusha
roll
mov
into
or
sbb
lcall
sub
add
mov
sbb
scas
lods
insb
fs
xchg
push
mov
mov
bound
loope
jp
enter
or
and
pushl
jnp,pt
inc
incb
jle
push
or
stos
insb
into
in
jmp
mov
xor
pop
sbb
aaa
stc
nop
js
xchg
icebp
jecxz
int
out
stc
shll
rcll
decl
jp
stc
mov
sub
leave
insb
iret
mov
in
scas
fdivl
mov
nop
jl
lahf
adc
fldl
jmp
mov
es
test
mov
imul
stc
mov
in
xchg
decl
sub
xlat
gs
or
jae
and
and
aas
pusha
lcall
mov
stos
pusha
mov
test
push
addb
cmpsb
ljmp
hlt
lods
fmuls
push
dec
test
imul
decl
lock
ja
mov
xchg
mov
incl
xchg
lods
fsubp
pop
jp
pop
andb
push
hlt
out
movsl
adc
rclb
mov
insb
ja
lcall
or
flds
inc
notl
adc
cwtl
pextrw
inc
sub
or
mov
pusha
mov
xchg
test
pop
fs
jg
add
hlt
inc
scas
mov
cmp
cld
orb
mov
test
sbb
jae
test
inc
xchg
xchg
mov
cmp
loope
xchg
cwtl
cli
scas
repnz
out
ficompl
push
push
adc
je
call
fildl
imul
adc
scas
scas
fwait
xor
pop
push
add
cld
jg
pop
addr16
das
sub
test
inc
mov
mov
jg
cmp
addr16
in
fidivrs
xchg
fsts
lds
loopne
inc
inc
fimull
call
xchg
in
sub
loop
dec
je
es
mov
lds
cld
pushf
mov
shll
clc
and
sub
cmp
mov
daa
cld
lcall
add
dec
mov
imul
xchg
stos
fnstenv
loopne
ret
jg
push
jle
outsl
and
add
rorb
cltd
fistpll
inc
scas
fdivrp
sti
lcall
mov
mov
xor
jge
gs
movsb
mov
inc
incl
insb
pop
or
add
arpl
fisttpll
mov
mov
stos
pusha
stos
add
insb
jmp
sahf
cmp
mov
mov
scas
add
dec
call
ljmp
insl
insb
icebp
loopne
inc
sahf
pop
clc
pusha
cld
js
pop
je
aaa
sub
idivl
pushl
adc
sbb
mov
cwtl
movsb
icebp
lcall
arpl
scas
mov
mov
mov
fnsave
scas
pushf
mov
xchg
rclb
mov
mov
mov
mov
cmp
sbb
lods
mov
repnz
jmp
jmp
sbb
xlat
addr16
iret
clc
insl
jecxz
insb
jle
jg
push
sahf
jl
xor
movsl
int3
jo
fs
and
pop
decl
outsl
pop
gs
and
fs
jne
pop
pushf
push
sbb
fdivrp
lcall
ljmp
clc
call
lods
addr16
push
add
lcall
adc
lcall
dec
popa
xor
into
leave
xchg
fnstenv
dec
cmpsl
pop
sbbl
mov
lahf
ret
pop
add
jg
or
inc
pop
xchg
mov
fmulp
in
mov
call
lods
arpl
neg
or
or
and
dec
adc
mov
mov
cmpb
nop
jb
sbb
sub
pop
lea
ficoml
pop
pusha
jmp
test
fsubs
inc
inc
push
insl
add
cmp
xchg
jle
and
cli
mov
je
cmc
mov
cmpsl
or
cli
int3
sbb
std
ss
adc
cmpsl
cmp
jp
aas
fsubs
repnz
add
mov
add
fptan
jnp
push
dec
leave
pushf
pushf
stc
xchg
in
add
adc
out
cli
popa
call
in
xchg
mov
les
ds
mov
inc
ror
fwait
loope
mov
sbb
icebp
incl
push
lcall
fisubl
add
fdivr
call
enter
mov
cmpsl
mov
lahf
into
xor
jmp
jecxz
faddp
dec
xchg
iret
or
cmc
aad
push
sbb
call
hlt
test
or
les
or
dec
aas
iret
mov
test
fsts
clc
jmp
cmp
cmp
int3
out
fdecstp
call
cli
dec
push
and
adc
xchg
inc
xchg
sub
popf
sub
dec
in
jmp
ret
dec
cmpsb
sub
pop
pop
lds
push
dec
xlat
sbb
fstpt
jl
fisttps
xchg
in
sbb
mov
out
xchg
aam
mov
jne
out
xchg
push
scas
popa
fwait
jle
mov
shrb
or
fcomps
push
sub
int
sbb
adc
mov
push
mov
push
inc
mov
adc
sbb
call
movsb
lock
lods
jecxz
xchg
repnz
push
xchg
push
pop
ljmp
push
fstpl
push
inc
lea
lcall
int
stos
cmp
sti
stos
push
jbe
or
mov
scas
jg
in
mov
mov
decl
pop
enter
or
mov
sbb
mov
sti
mov
fists
push
add
xchg
pop
mov
ds
sahf
icebp
iret
sar
dec
cmp
filds
and
jns
movsl
pop
adc
dec
or
fsubs
lcall
xor
dec
dec
popw
mov
pushf
iret
mov
repnz
jae
sti
mov
sarl
jb
rcr
add
push
std
adc
scas
inc
outsl
pop
mov
incl
aam
jg
rol
and
mov
in
pop
mov
and
mov
sub
cmp
jg
in
pop
push
dec
fs
std
cmc
dec
mov
fcmovnu
cltd
lds
incl
adc
or
or
sbb
xor
adc
sti
pop
lcall
call
sbb
mov
push
sbb
sbb
push
lahf
mov
xchg
popl
push
adc
cmp
icebp
push
lret
xor
dec
mov
in
jge,pn
in
mov
pop
mov
inc
mov
inc
std
in
fs
push
sbb
pop
add
add
popf
mov
outsl
mov
in
inc
add
incl
and
ret
or
push
aas
jecxz
ljmp
fdivr
lcall
xor
jp
bound
scas
pusha
sub
data16
ret
xchg
scas
clc
pushl
pavgb
dec
in
dec
je
stos
loop
gs
ret
out
sar
andb
cmp
cltd
fneni(8087
pop
add
jbe
sahf
push
scas
cli
ja
les
cmp
dec
out
jecxz
dec
adc
decl
add
xor
xor
mov
test
jg
pop
loopne
int
sbb
call
adc
cmp
xchg
dec
xchg
dec
push
or
inc
pop
add
shrl
sub
hlt
cmp
popf
sbb
fcomip
fwait
daa
cmp
push
nop
or
mov
outsb
jmp
xchg
mov
shll
call
jmp
xor
mov
mov
push
xchg
pop
fists
jg
addb
and
cmpsl
push
leave
sbb
jle
and
call
aad
movsl
jp
in
out
movsl
cmpsb
lahf
xchg
ja
push
jo
cltd
add
aaa
nop
clc
repz
insl
stos
fisubrs
dec
or
mov
dec
adc
movsl
push
dec
cwtl
push
js
adc
push
jmp
fcoms
in
jbe
ljmp
xchg
lock
insb
push
icebp
xchg
mov
jbe
popf
test
jg
incl
es
inc
out
mull
xchg
out
jge
sub
cld
add
sub
or
sub
ljmp
push
sub
jp
or
lock
xchg
xorb
lock
jnp
lcall
or
jmp
inc
shrl
out
mov
cmc
jae
mov
and
call
fs
ss
shlb
and
es
mov
lea
jl
cli
mov
gs
decl
roll
sub
call
jmp
xor
popf
out
mov
pushl
mov
cwtl
fnstcw
clc
lock
adc
jecxz
jbe
jl
jnp
outsb
sbb
clc
incl
push
ds
insb
pop
or
repnz
xchg
out
or
jp
stc
rcll
pop
and
lahf
cmp
arpl
lahf
hlt
mov
jo
cltd
int3
adc
mov
mov
jae
cmp
xchg
out
and
jno
cld
outsb
test
hlt
adc
aad
ljmp
mov
jg
sbb
ja
jmp
xchg
pop
push
pop
out
mov
cmp
cld
jmp
hlt
fmuls
push
push
jmp
lds
cmp
call
jg
fiaddl
repnz
push
and
and
add
pusha
cmp
jg,pn
xor
in
aam
push
fstpt
lret
nop
mov
sti
inc
das
pop
lret
popf
lcall
cmpsl
fisubrl
push
std
xlat
stc
lods
fildl
sbb
pushl
ret
push
sbb
pop
cmpb
inc
xchg
add
loopne
xor
movsl
jecxz
rclb
inc
decl
adc
mov
cli
and
les
sub
fcomps
ret
xchg
push
es
aam
test
push
pusha
scas
gs
xor
cwtl
push
decl
ds
loopne
stos
sbb
xchg
add
mov
pop
test
je
bound
jmp
dec
lret
mov
call
lock
cli
fbld
jns
cli
sbb
adc
pop
pushf
inc
sbb
fmul
sbb
ret
call
mov
xchg
push
lods
sub
shlb
fdivrp
push
jge
add
mov
jle
mov
aad
test
mov
and
iret
xor
and
insl
inc
pop
jle
imul
decl
xorl
sbb
lea
or
leave
and
call
lea
call
mov
stos
outsl
jle
sarl
or
mov
sahf
or
cld
movntq
out
cmc
push
sub
or
mov
hlt
jb
jb
cmp
decl
cmp
sub
dec
loopne
and
outsb
test
mov
adcb
cmp
and
stc
aad
clc
sbb
roll
outsl
xor
jmp
and
mov
call
mov
popa
hlt
adc
inc
and
and
stos
sub
scas
xchg
repnz
xchg
cmp
std
cmp
mov
fisubl
lret
cltd
cmpsb
flds
mov
mov
sbb
cmpb
cmp
in
pop
add
fisubrs
push
mov
mov
out
push
cmpsb
shll
fbld
arpl
push
mov
adc
mov
test
mov
sbb
clc
add
loopne
push
or
pushf
mov
and
mov
bound
dec
push
dec
arpl
or
jmp
xor
fcomps
and
mov
aas
scas
mov
adc
mov
into
xor
repnz
movsl
cmpsb
mov
cmp
incl
fcmovne
and
pop
pusha
sub
sub
sarl
xchg
fidivrs
andl
push
add
dec
cmp
rclb
gs
sbb
in
jns
push
ljmp
ljmp
jp
xchg
adc
mov
test
int
scas
xor
fmull
lcall
lret
fisttpl
stc
sbb
mov
outsl
pop
pop
icebp
cmp
xchg
pop
popf
std
inc
iret
mov
daa
or
jge
movsb
sub
sti
test
jne
and
lods
adc
scas
sbb
xor
sub
inc
clc
incl
testb
addl
mov
outsb
dec
xchg
decl
or
into
mov
adc
out
nop
loopne
add
sub
sar
pushl
push
fiadds
adc
sub
sub
out
pop
stc
add
pushl
sbb
test
or
subl
xchg
inc
mov
rcr
fstl
jmp
jg
mov
and
shl
andb
in
or
sbb
jmp
enter
adc
lock
xor
cwtl
dec
fstps
xchg
and
mov
outsb
mov
testl
mov
aam
mov
lods
fimull
call
ss
add
insl
adc
push
jmp
div
add
fcos
mov
pop
inc
clc
or
lods
add
jnp
xor
sbb
mov
inc
push
data16
sar
jmp
mov
push
fadds
out
add
decl
mov
cmp
sarb
cmp
repnz
addb
mov
lods
sar
incl
pop
lret
enter
addr16
daa
cld
fcoms
clc
dec
loop
ljmp
ds
mov
aaa
mov
out
mov
sbb
movsl
decl
dec
sub
add
sub
xor
lcall
stos
jae
test
sbb
dec
jns
or
in
xor
into
or
inc
cmpsb
test
ljmp
fcmovne
or
xchg
sbb
ljmp
add
cmp
or
stos
jge
jl
push
pop
pop
push
inc
or
pushl
push
repz
sbb
mov
xchg
mov
add
mov
pushl
dec
dec
aas
push
mov
iret
orl
jg
ret
and
xlat
repz
mov
cld
and
cmove
mov
adc
pop
or
xlat
cwtl
sbb
leave
add
mov
push
sub
jns
in
enter
sub
clc
push
xchg
mov
ljmp
les
sbb
inc
xchg
int
cmpl
jmp
sahf
out
mov
add
cmp
jns
mov
cs
mov
ficoms
mov
incl
pop
xchg
push
xor
ds
ja
lret
notl
push
push
and
fmuls
push
adc
pushf
xor
dec
jge
daa
or
in
pop
jge
inc
cld
fidivrs
dec
aaa
rcl
sahf
jg
das
adc
push
inc
mov
push
mov
or
les
dec
add
xchg
and
cmp
pop
mov
dec
push
insl
das
jb
mov
out
mov
or
mov
jo
jo
pop
push
jl
cmp
cmp
xor
rcrb
roll
fsub
xchg
incb
scas
hlt
dec
push
call
add
pop
mov
lods
ljmp
dec
incl
sarb
push
in
in
ret
inc
inc
push
loope
mov
scas
dec
mov
fbld
push
ljmp
adc
pop
sub
in
addr16
mov
mov
mov
dec
mov
mov
daa
fdiv
stc
xchg
movl
mov
clc
fcoms
xor
lock
test
arpl
pop
call
mov
xor
or
ja
xchg
jae
fiadds
xchg
jbe
mov
call
cltd
out
lahf
lahf
mov
out
mov
mov
mov
imul
pusha
push
jg
cmp
mov
lods
repnz
push
lcall
xchg
pop
xorb
test
push
pop
and
leave
push
out
jo
cmp
inc
ja
jle
lcall
push
scas
mov
dec
jge
dec
inc
add
add
les
daa
inc
test
push
fstpl
jbe
jle
xchg
xor
adc
dec
popa
add
dec
btc
call
out
sub
fcomps
movsb
clc
aas
push
sahf
adc
mov
sub
arpl
mov
mov
imul
xor
movnti
cmc
pushl
in
int
cmpsl
sbb
xchg
cli
jns
xor
dec
jge
mov
ljmp
fsts
fsubrl
or
rol
jb
cmc
xchg
xorl
pop
mov
andb
inc
and
mov
sbb
adc
mov
fwait
dec
mov
jg
ljmp
ds
or
jae
arpl
leave
pop
push
mov
insb
aam
or
lcall
shl
sbb
xor
ljmp
mov
pop
das
and
adc
sub
imul
sub
jg
pushl
lods
xchg
cmp
lahf
popf
lret
ret
arpl
out
popa
sarb
enter
mov
das
dec
daa
out
xor
adc
sub
cld
mov
incl
dec
js,pt
mov
xlat
inc
jmp
inc
hlt
das
arpl
cmpsl
or
test
xchg
test
shll
bound
jl
mov
jl
mov
xor
jmp
mov
mov
pop
pop
inc
in
xchg
xchg
xchg
adc
jo
dec
jnp
out
aam
lret
ss
mov
cmp
mov
push
out
nop
cld
fisttpll
xchg
add
mov
add
ss
xor
fildl
call
cmp
repnz
in
or
or
cs
cmp
lcall
data16
inc
stos
mov
dec
popf
mov
out
push
sbb
ja
into
sbb
fcomip
dec
and
test
mov
imul
cld
xor
enter
mov
jmp
or
and
mov
fucomi
sti
inc
xchg
dec
lods
enter
jge
gs
xchg
out
mov
mov
sbb
adc
jb
push
in
pop
lahf
sbb
lods
sub
sub
mov
dec
out
xchg
and
pop
enter
in
aam
mov
add
lcall
and
xor
sub
loope
push
es
mov
sbb
inc
jecxz
lcall
test
xchg
pop
sahf
call
bound
call
loop
fbld
sahf
mov
add
cmp
xchg
xchg
adc
dec
int
les
pushl
test
jge
jno
mov
jb
in
add
shlb
xchg
mov
cltd
pop
mov
test
inc
mov
in
xchg
rolb
sub
dec
add
fdivs
sub
bound
xchg
push
adc
call
adc
jmp
popf
ss
and
in
xchg
cmp
and
dec
jne
push
das
filds
je
cmp
mov
pop
cmp
rorl
std
call
xchg
outsb
adc
ds
and
out
out
cld
lds
cltd
xchg
outsb
add
call
js
mov
out
mov
pop
push
xlat
push
mov
mov
pushf
sub
testl
xchg
push
mov
decl
lahf
cmp
jge
mov
pop
mov
repnz
inc
fadds
fbld
and
add
je
popa
pop
shl
testb
aas
lock
test
push
mov
adc
jmp
insb
orl
sub
inc
lcall
call
sub
cmp
cmpsl
mov
and
inc
out
shrl
sarb
cmp
push
xchg
cli
adc
dec
testb
push
out
fisttps
enter
inc
push
and
lods
filds
rorb
sub
xchg
test
mov
pop
cld
lcall
dec
mov
lcall
cli
mov
icebp
rcll
js
mov
jp
ss
dec
xor
sbb
aaa
outsl
xor
push
jnp
cmp
cwtl
hlt
jp
pushl
cmpsl
jecxz
sbb
and
lret
insl
popf
mov
fucomp
imul
mov
mov
push
cld
lcall
mov
sub
add
xor
pop
insb
or
mov
jg
xor
inc
mov
arpl
fsubl
sbb
push
fs
dec
in
inc
push
lock
dec
test
daa
nop
bound
pop
pop
inc
inc
and
inc
out
sub
and
mov
test
mov
pop
sub
fstl
orb
outsl
sbb
or
sbb
mov
fcomip
lcall
aam
sbb
outsl
out
dec
mov
push
inc
movb
jb
push
jb
xor
pop
scas
dec
xlat
sarb
sti
mov
jns
lea
enter
inc
jg
dec
cld
lods
lea
pop
rolb
icebp
pop
dec
inc
push
nop
cld
ljmp
outsl
imul
add
lea
scas
in
mov
test
xor
xor
or
lcall
fs
mov
fst
popa
cmp
pop
outsb
int
dec
scas
push
in
xchg
cli
insl
xchg
int
fnsave
lcall
push
mov
pop
pushl
sbb
jno
pusha
add
jl
inc
lret
pop
xchg
and
iret
sub
inc
mov
jae
jg
incl
xchg
loope
jbe
push
adc
jo
in
push
in
mov
mov
cmp
inc
int3
sub
notb
ret
dec
add
decl
and
mov
inc
mov
lret
stc
imul
xchg
push
neg
mov
rcll
ret
fdivrp
lcall
mov
jo
shlb
mov
sub
and
iret
inc
ret
leave
ja
repnz
rcll
pushl
add
lret
mov
divb
data16
cmp
adcb
daa
aam
mov
jnp
nop
or
cmp
adc
stos
clc
mov
out
add
push
scas
pushf
mov
xor
push
inc
out
push
cmp
fwait
or
inc
sti
clc
xor
rcrb
cmpsb
lcall
mov
push
cli
aas
pop
aad
push
ss
fdivs
std
icebp
jle
lods
jnp
jmp
and
jle
jnp
add
add
mov
lods
add
lcall
out
arpl
pop
sub
sbb
mov
adc
out
addr16
sbb
mov
jg
cs
mov
jp
cwtl
cltd
out
dec
cmp
insb
jns
pop
in
cmc
sub
call
pusha
jo
inc
cltd
and
dec
adc
xchg
inc
in
mov
mov
mov
mov
std
test
push
cmp
cmpl
jmp
cmpb
into
and
clc
jno,pt
inc
test
pop
adc
lahf
mov
fwait
and
lods
sbb
jmp
dec
mov
bound
cld
xchg
pop
inc
fdiv
push
jo
pop
add
mov
and
push
rcl
mov
hlt
nop
push
popf
out
mov
push
sahf
push
dec
mov
scas
xor
aam
scas
or
movsb
lock
decl
mov
sti
jmp
add
cmp
ja
inc
sbb
sbb
or
mov
stos
xchg
lret
mov
jg
imul
loop
cs
or
movb
mov
pop
push
cli
jns
idiv
inc
xchg
xor
dec
dec
dec
lods
lahf
arpl
sub
dec
ret
cmp
mov
mov
lods
lcall
outsb
fwait
mov
clc
iret
dec
ficompl
mov
xor
mov
push
add
mov
push
repz
push
xor
pop
xchg
and
lock
cmp
mov
outsb
jl
push
int
data16
mov
ljmp
mov
outsb
push
out
and
or
outsl
xchg
mov
call
push
sahf
lods
pusha
imul
test
popa
xchg
jmp
sub
int
push
add
lcall
mov
les
dec
aaa
xor
push
and
push
mov
cmp
cmp
lahf
je
in
clc
incl
mov
das
insl
cmp
vmaxps
dec
dec
jns
adc
call
stos
xchg
push
hlt
sub
mov
imul
nop
add
or
add
cli
pushl
push
push
insb
cmc
cs
lret
sbb
sub
sti
mov
pop
and
aam
lock
jl
and
dec
or
sbb
jmp
test
pop
push
jns
jecxz
mov
lret
adcb
test
decl
inc
mov
repnz
ss
and
inc
ja
pop
push
nop
and
andl
cmc
dec
out
pop
add
push
and
icebp
out
jno
jp
ss
lea
incl
mov
add
insb
xchg
cmp
stos
incl
aas
leave
jmp
adc
push
add
fwait
mov
push
outsl
sbbl
call
decl
test
sbb
pusha
ds
and
push
xor
adc
cld
pushf
add
imul
and
in
pusha
fildl
shll
xchg
ja
pop
push
and
sbb
mov
rolb
xchg
jle
cmp
xor
inc
add
mov
pop
cmp
call
xor
imul
cmp
lock
xlat
jne
stc
adc
mov
sbbb
mov
cmpsb
aaa
les
adc
inc
lcall
jl
stos
xlat
call
ds
adc
push
cmc
push
and
xor
xchg
mov
popf
fmull
iret
or
nop
mov
mov
push
jmp
aaa
cmp
and
or
das
fisttps
test
pop
sbb
stc
mov
cld
jnp
inc
fidivrs
icebp
adc
ja
mov
add
adc
lcall
mov
in
rorb
paddusb
ljmp
pop
jl
test
stos
inc
sarl
shrl
call
pop
aam
pop
fdivs
jg
out
and
fldl
dec
test
lcall
mov
jne
daa
or
rcll
jne
jg
imulb
pop
sahf
frstor
cld
stos
adc
loopne
jmp
sub
ss
test
fnstenv
and
sbb
test
fwait
dec
loopne
lahf
add
jge
push
dec
mov
out
js
and
push
or
daa
incl
sti
xchg
mov
mov
push
call
incl
loope
into
int3
mov
lahf
adc
ja
imul
out
insl
and
nop
mov
call
cld
ljmp
push
mov
xor
decb
cmp
insb
xor
iret
incl
repnz
inc
insl
or
adcb
jns
aaa
mov
mov
clc
or
call
and
jg
dec
je
or
mov
and
xchg
or
std
ljmp
aaa
test
push
out
mov
std
icebp
rcrb
mov
mov
in
push
inc
pusha
xlat
pop
xchg
fildl
pop
lods
xor
push
scas
sub
jmp
cmpsl
icebp
or
ret
add
cmp
leave
sub
aam
jge
lods
addr16
dec
out
xchg
and
pushl
xor
xchg
fldl
es
inc
push
dec
out
loopne
pop
mov
xor
xor
jbe
stos
lods
inc
shlb
ret
mov
test
js
sub
inc
int
out
cli
ljmp
or
sub
or
xor
lds
fs
insb
movsb
mov
or
push
iret
mov
sbb
les
movsb
pop
mov
dec
mov
inc
xlat
pop
adc
jae
subl
ljmp
dec
dec
and
adc
xchg
inc
jge
adc
ss
sbb
add
inc
jl
or
mov
cltd
or
clc
jns
or
lret
add
xchg
ficompl
insb
and
mov
xor
outsl
stos
incl
nop
xlat
jle
fimull
fdivs
ja
jmp
aaa
push
in
rcrl
jp
rcrl
scas
xor
push
dec
int
inc
dec
ljmp
xor
jb
push
mov
mov
call
cmpsl
sti
into
gs
push
popa
movsl
mov
movsl
xor
xchg
call
sbb
ljmp
mov
jg
insb
xor
inc
and
out
sbb
loopne
ret
xchg
sbb
fsubr
lcall
mov
adc
int3
lods
adc
push
scas
mov
push
cli
pop
jp
cli
movsb
call
xchg
sub
movsl
dec
stc
lock
sbb
and
mov
mov
incl
in
inc
loope
ret
push
sbb
aad
fwait
ret
jge
pop
addr16
xchg
pushl
repnz
addr16
jg
stos
add
add
loop
and
cld
jmp
mov
jg
aam
fucom
jp
lahf
gs
mov
xchg
mov
in
xchg
pushf
dec
mov
ret
pop
jo
dec
and
jnp
add
test
mov
cmpl
fcmovnu
fistps
imul
cmp
lods
lods
fwait
adc
rol
out
andb
movsl
sbb
jl
lret
icebp
inc
or
jmp
in
lds
jp
cld
pop
mov
into
call
loopne
js
aad
repnz
add
mov
pop
push
cmpsb
scas
add
pop
iret
push
push
sub
pushl
out
jno
cwtl
icebp
inc
ret
cmc
repnz
adc
inc
fcompl
xor
mov
cmp
outsb
leave
push
in
stc
mov
clc
sbb
xchg
xlat
mov
call
andl
cltd
out
cwtl
push
adc
adc
popf
fcoml
push
les
mov
push
mov
fisttps
add
jg
call
mov
orb
or
xor
rclb
call
or
insb
inc
pop
mov
xlat
push
xor
xor
fs
xchg
jp
sub
call
bound
stc
mov
xlat
xchg
push
hlt
xchg
xor
adc
push
fdivl
inc
scas
movsb
icebp
pop
outsb
nop
add
std
xor
lcall
into
push
jecxz
add
or
rcrb
dec
dec
ljmp
bswap
inc
nop
mov
shll
addr16
dec
cmp
popf
test
arpl
sub
decl
or
cmp
rorl
sbb
shl
pushl
cmp
ret
sbb
daa
mov
ja
addr16
jle
push
daa
adc
enter
lcall
call
inc
popf
pop
pusha
pop
mov
mov
fists
inc
cmp
pop
ja
pop
pop
cld
pop
insl
jno
call
popa
int3
xchg
int
loop
sbb
sbb
lcall
push
push
mov
call
xlat
jo
mov
cmpb
rcll
pop
push
ret
dec
call
repnz
fdivl
aam
mov
push
stc
mov
cmp
pushl
mov
dec
sub
nop
sub
mov
jno
push
fucomi
addr16
mov
mov
decl
cs
andb
push
add
int
ret
jns
adc
test
jns
sub
mov
lds
sbb
out
cmpsb
adc
nop
xor
ljmp
xchg
ss
dec
mov
or
jmp
shll
mov
out
filds
add
ja
sub
cmpsb
int
mov
dec
jae
decl
sbb
mov
hlt
mov
clflush
sbb
and
mov
mov
call
dec
jbe
lock
sub
jmp
in
mov
xchg
inc
pop
push
jecxz
inc
xor
aam
jno
jmp
push
stos
mov
add
leave
xor
cmovg
or
xchg
decl
data16
and
mov
or
insb
dec
repz
lcall
mov
adc
dec
pop
sub
mov
mov
push
das
jns
mov
xchg
pop
cli
xorl
lcall
mov
push
or
inc
jl
cmp
ja
data16
push
cmp
cmp
gs
mov
clc
mov
sbb
mov
mov
push
ljmp
sbb
push
jnp
movsl
movb
jl
mov
fcoml
lret
mov
mov
mov
xchg
mov
js
jg
ljmp
or
adc
sbb
addr16
jge
hlt
or
cli
bound
sbb
lcall
sahf
sbb
in
mov
aas
in
push
dec
insb
mov
add
test
loopne
lcall
es
fisttps
mov
out
jmp
inc
dec
push
out
outsl
mov
or
dec
testl
xor
jmp
fs
or
ja
mov
pop
lret
imul
je
jg
loop
jno
sbb
cltd
inc
mov
stc
mov
add
scas
adc
leave
dec
jle
rcll
cmpsb
cmp
cmc
pushl
loop
lods
out
aas
out
xchg
or
into
jno
stc
aaa
mov
pop
cld
push
leave
ljmp
js
ljmp
out
dec
mov
dec
and
std
adc
pop
movsb
add
push
out
jns
or
test
pop
std
mov
mov
xchg
sbbl
and
testl
int3
sbb
lods
das
xchg
cli
andb
fldt
sbb
sbb
lahf
inc
sub
andb
ja
jo
sub
sbb
push
call
or
inc
pushf
xchg
ror
mov
mov
ljmp
jnp
mov
adc
pushf
jmp
jns
sbb
insb
cmpsb
or
or
mov
pop
cmp
test
stos
and
stos
mov
jo
mov
es
jg
inc
pop
movsl
scas
sub
push
pop
and
pop
jns
inc
xor
js
mov
adc
mov
add
adc
mov
cmpsb
xchg
hlt
sub
nop
rorb
ret
pop
lock
rcll
push
sti
sbbb
out
pushl
and
sbb
jnp
cmp
lahf
cmp
xchg
push
push
mov
mull
idivl
call
xorl
inc
mov
jae
leave
repnz
jmp
incl
or
insl
leave
sbb
jno
push
lea
add
xor
mov
incl
mov
pop
jnp
xorb
roll
out
fbld
or
dec
mov
shlb
orps
cmc
in
sub
and
jg
push
adc
jns
inc
test
into
jb
and
lods
add
cmp
jo
call
lcall
test
iretw
mov
fstps
fcomip
mov
outsl
add
popa
movsb
jmp
loope
mov
dec
insl
pop
fiaddl
xor
clc
decl
hlt
push
stos
mov
nop
pop
inc
and
jg
pusha
dec
push
outsl
xchg
and
mov
cmc
add
loopne
lock
nop
dec
cld
daa
sub
clc
jmp
sahf
mov
and
idivl
sbb
arpl
mov
inc
call
sub
mov
out
adc
push
or
mov
mov
movsb
xchg
or
stos
rcl
inc
push
lods
dec
push
pop
out
dec
jg
sub
addr16
idiv
pop
mov
daa
outsb
cmp
xchg
loop
mov
sbb
scas
xchg
fdivr
jmp
and
pop
lock
xchg
loopne
dec
aaa
mov
test
loopne
mov
pop
clc
mov
lods
int
jmp
push
mov
loope
jmp
popf
loop
xchg
in
adc
inc
sub
sbbb
data16
ss
adc
lcall
pop
movsb
ljmp
in
sahf
inc
into
xchg
in
dec
fsub
notb
aas
cmp
iret
pusha
push
xlat
xchg
stos
sarl
fnsave
sbb
pushf
scas
push
incl
mov
stos
js
sbb
push
xchg
pop
dec
cmp
ret
xor
rclb
stos
sbb
scas
mov
push
enter
pop
jle
and
out
movl
lods
xchg
pop
cmp
ffree
mov
cli
mov
dec
cmp
push
mov
pushl
cmp
mov
and
out
mov
jns
enter
fnstcw
cmc
decl
in
inc
pop
inc
mov
hlt
jns
std
loopne
push
fcmovnbe
xor
sbb
fildll
das
pop
mov
mov
jmp
clc
push
aaa
or
mov
fwait
mov
pop
ret
lcall
sub
xor
sbb
and
push
sbb
sahf
cmp
clc
call
dec
shll
mov
movsb
or
adc
xor
jp
cld
dec
ret
mov
mov
loop
inc
push
jg
in
lret
jmp
rclb
xchg
jb
fidivrs
div
movsl
icebp
repnz
xchg
shll
daa
lods
arpl
or
mov
cld
jmp
xchg
add
je
enter
jg
pushf
adc
stos
popf
and
sbbl
inc
pop
shlb
fdivr
lea
push
movsb
lea
pusha
in
jo
das
pop
leave
testl
push
cmc
test
jb
out
addr16
push
stos
xchg
out
dec
jmp
lcall
xlat
inc
sub
mov
xchg
sub
int3
xchg
xorl
imul
cmc
mov
push
mov
jbe
mov
pop
adc
lcall
sbb
pop
dec
test
test
fcomi
test
icebp
lret
mov
mov
cltd
sti
mov
push
js
stos
fwait
arpl
in
les
pop
and
ficomps
dec
gs
xchg
stos
or
call
mov
jecxz
sbb
aaa
cmp
pop
push
andl
mov
faddl
mov
out
repz
lods
popf
idiv
dec
test
lods
lods
scas
loopne
gs
jp
test
push
push
iret
mov
data16
outsb
cmp
in
jp
pop
pop
mov
fdivrl
iret
ja
mov
sub
mov
in
or
rcrl
call
jle
or
cmp
jl
adc
fwait
insl
aam
nop
cmp
lods
dec
xchg
pop
dec
push
enter
dec
ret
rcrl
sti
mov
push
jb
test
sub
push
xchg
adc
mov
lock
test
inc
cmp
adc
aad
sbbb
pop
mov
ljmp
mov
sub
pop
sbb
dec
jmp
popf
movsb
shl
decl
mov
xor
and
icebp
push
loope
dec
mov
cs
sbb
out
mov
call
idivb
popf
lock
sbb
lahf
push
mov
dec
loope
jo
jge
repz
andb
call
pop
fisubs
sahf
lret
dec
inc
idivl
xchg
std
imul
mov
mulb
loopne
dec
pop
popa
mov
cwtl
out
arpl
mov
xchg
mov
cmpsl
sub
rolb
inc
jmp
mov
cmpb
in
aam
and
mov
sub
movsb
dec
aam
dec
jbe
scas
push
jne
mov
lock
jg
mov
fucomi
or
mov
mov
xor
fists
out
xchg
sbb
mov
pop
ficoml
insb
insb
sub
stos
test
cmpsl
cltd
ja
inc
pushl
dec
out
xor
daa
sbb
inc
mov
in
xor
and
xor
das
push
dec
jg
adc
xor
add
fnsave
lock
mov
pushf
mov
xor
rolb
incl
loop
fwait
pop
push
cltd
sarb
sbb
and
push
dec
sbb
imul
mov
icebp
pushl
js
in
fwait
jle
pop
jl
daa
push
shll
jecxz
mov
push
jnp
insl
adc
decl
shrl
ret
pop
mov
jno
fdivl
mov
dec
push
popf
push
sub
inc
popl
loop
fucomip
ret
xchg
decl
call
xlat
dec
lock
outsb
aad
dec
nop
aam
hlt
out
pusha
sbb
dec
ds
popa
call
incl
jns
pop
out
orb
adc
dec
stos
dec
pop
insb
rcl
hlt
jp
pop
xchg
lock
std
jmp
inc
aam
in
push
or
push
jg
push
xchg
xchg
nop
jmp
in
in
pop
mov
and
mov
mov
cmpsl
arpl
add
add
cmc
pop
out
xchg
xchg
filds
mov
sub
lcall
mov
stos
cmp
xor
pop
arpl
decl
push
cmp
lods
mov
cmp
hlt
in
dec
cli
inc
add
xchg
lahf
push
nop
aam
dec
xchg
fistpll
cmc
mov
pushf
cld
pop
sub
push
and
xor
sbb
imul
clc
jg
mov
iret
lods
cmpsl
lds
jae
out
inc
filds
int3
fadd
push
push
popa
dec
inc
cmc
cld
pushl
cmp
jne
aam
pop
lods
xor
pusha
dec
xor
sahf
fisubrl
push
add
mov
add
fdivrl
jmp
loope
dec
push
rcrb
data16
jmp
test
popa
jae
mov
jg
jbe
cmp
shlb
jns
stc
mov
jno
push
sbb
dec
jno
xchg
lahf
cmp
xchg
clc
jmp
xor
enter
decl
inc
outsb
stos
push
shlb
test
loopne
jg
out
sbb
xor
cwtl
xchg
mov
push
aad
xchg
fwait
inc
pop
cmc
repz
in
cmpb
popa
xchg
cmp
cmp
clc
rcl
cmpsb
cmp
or
ss
mov
pop
int
pop
adc
jns
inc
loope
lcall
cmc
add
loopne
js
mov
negb
stos
fcmovnb
pop
outsb
jmp
lahf
xchg
mov
daa
dec
pop
mov
notl
call
rcl
jmp
push
add
nop
stos
ljmp
inc
sahf
dec
imul
sbb
iret
jnp
adc
adc
movaps
fneni(8087
mov
clc
push
test
or
inc
aam
test
jb
scas
clc
mov
xlat
mov
clc
jle
push
dec
js
fwait
dec
push
aaa
dec
or
mov
push
pushf
mov
and
mov
xorl
test
pusha
test
into
repz
incl
dec
mov
leave
lret
add
jecxz
fcoml
lahf
jns
iret
rcrl
mov
popa
mov
inc
outsl
add
scas
xchg
xchg
aas
int3
mov
imul
mull
test
jge
cmc
aam
movsb
das
cli
call
mov
out
or
or
insl
pop
mov
repz
call
lods
sbb
or
sahf
adc
movsl
in
cmp
xchg
fisttpll
mov
jmp
shlb
aas
lret
js
fsubr
push
xchg
fisubrs
ja
adc
mov
call
xchg
mov
ret
adc
dec
pop
stos
or
inc
xor
sub
les
xchg
pushl
adc
pushf
or
push
leave
or
mov
lret
clc
aad
jg
decl
aad
mov
sub
sbb
xor
mov
sbb
movsb
lcall
dec
sti
repnz
cwtl
add
cmp
add
pop
and
fbstp
jge
adc
xchg
cmp
and
pushl
hlt
aam
adc
inc
xchg
addr16
dec
call
mov
or
imulb
xchg
xor
adc
gs
shlb
mov
mov
in
iret
in
sub
push
movswl
or
clc
xor
ja
test
dec
mov
sbb
adcb
mov
dec
les
mov
lock
dec
repz
out
ljmp
cltd
dec
xchg
push
dec
pop
bound
outsb
xor
ss
cltd
xchg
cwtl
push
push
xor
sub
movsl
mov
test
mov
addb
mov
xchg
inc
lret
aas
and
xor
rorb
mov
jmp
popa
dec
mov
jbe
addr16
stos
incb
inc
mov
dec
aam
lods
cs
clc
sub
negl
sub
es
jo
test
daa
push
push
dec
out
shll
sbb
out
jns
gs
mov
inc
or
push
mov
mov
lock
into
and
add
lret
dec
stos
lcall
data16
data16
dec
pop
wrmsr
adc
xor
mov
add
add
mov
jl
das
cmpsb
mov
lods
je
adc
or
dec
out
in
and
outsb
xor
lods
jl
or
push
adc
mull
test
clc
jmp
adcb
in
jnp
jp
pop
scas
lcall
push
pop
hlt
xchg
sub
jne
mov
bound
fisubl
shlb
mov
push
xor
daa
cli
call
dec
test
jmp
jp
mov
cmpsb
pop
jns
jg
int3
test
decl
xor
jbe
pop
and
jp
outsb
jns
es
xor
je
jle
cmpsl
jno
decl
inc
or
popa
pop
xchg
and
lahf
sub
and
fmuls
xorl
fisttps
and
add
mov
cmc
xchg
insl
fists
dec
jbe
clc
pop
bound
cwtl
dec
mov
cltd
in
fbstp
push
add
decl
cmp
bound
icebp
scas
mov
mov
adc
mov
decl
jbe
jb
cmp
xlat
push
or
cld
mov
sub
xlat
xor
out
or
mov
addb
rorl
inc
data16
xchg
popf
inc
imul
test
mov
push
jp
fstl
orl
je
adc
sbb
incl
fcoms
loop
rcrl
repz
inc
pop
sub
outsl
mov
std
jbe
mov
gs
lcall
test
xchg
out
call
idivl
or
xor
adc
fs
xorb
pop
fcmovb
mov
decl
jge
sub
fld
mov
ljmp
sub
dec
mov
out
pushl
jbe
scas
dec
xor
fnstenv
add
rorb
pop
sbb
xchg
fs
adc
mov
pop
aad
dec
aam
sbb
xor
mov
insl
adc
out
popf
mov
stos
fmuls
enter
test
ror
mov
adcl
decl
mov
scas
pop
push
adc
mov
test
les
jns
aad
stc
test
cld
lock
idivl
and
js
sbb
ljmp
jne
bound
out
fiaddl
call
and
in
in
xor
cltd
jae
pop
xor
or
mov
out
push
or
repnz
int3
pushl
dec
lahf
les
stc
xchg
sub
gs
mov
pop
push
aas
sbb
je
cli
fimull
adc
jg
test
scas
scas
pushf
adcl
or
cmc
popf
clc
xlat
jge
jp
incl
outsb
sti
push
mov
aas
lret
ljmp
add
pop
inc
std
decl
imul
xchg
xor
jmp
pushl
mov
lock
inc
jnp
sub
jle
ja
ret
ret
add
push
cmp
stos
adcl
stc
push
pop
xor
xlat
ss
in
sbb
subb
pop
adc
das
insb
push
sub
loope
rorb
mov
cli
add
decb
subb
retw
and
jle
sbb
std
outsl
mov
push
jb
push
xchg
fisttps
stos
or
andb
xorl
jg
fildll
dec
lret
jbe
fsubl
call
ret
mov
xchg
test
lret
sbb
jns
dec
in
adc
push
xor
inc
fs
push
repz
sbb
push
push
clc
fbld
jmp
or
pop
fiaddl
test
inc
mov
adc
clc
pop
aaa
test
dec
add
mov
sub
xchg
ret
push
push
push
mov
sbb
or
jg
pushf
push
out
cmp
fidivl
call
out
fsubrl
ret
fstl
outsb
fmull
roll
ficomps
add
ret
loope
mov
adc
and
xchg
xor
push
xchg
lock
decl
push
xor
cltd
xor
nop
mov
scas
mov
decl
lock
inc
loope
rorl
pop
mov
movsb
enter
mov
lods
leave
lcall
add
sbb
mov
sahf
lret
pop
jecxz
xor
pop
int
imul
dec
fcompl
lods
lds
cld
mov
add
push
jae
sbb
scas
xchg
int
xor
push
movsb
xor
pusha
sbb
ds
movsl
scas
je
fisubrs
adc
and
or
dec
clc
inc
pusha
sahf
adc
mov
pop
jge
jg
lds
sub
out
jge
dec
push
test
jg
mov
jp
push
cmpsl
ljmp
jns
mov
sbb
arpl
jg
pop
or
icebp
sub
popf
mov
pop
xor
add
popf
jge
mov
das
jbe
daa
or
cmp
xor
push
lock
inc
and
inc
cltd
pop
movsl
mov
sub
sbb
rorl
in
aas
fdivl
lcall
pop
jl
mov
and
ret
xchg
mov
adc
mov
mov
inc
lahf
lods
repz
imul
xchg
sub
adc
sbb
sar
ljmp
icebp
inc
iret
xchg
inc
testb
or
sahf
sahf
xchg
cmp
ljmp
xorb
sbb
sbb
jl
movsb
inc
cwtl
mov
push
test
adc
ljmp
popf
arpl
and
aam
sbb
mov
rcrb
mov
ret
mov
pusha
xchg
xor
enter
sbb
loope
out
cmp
andb
addb
imul
push
sarb
inc
incl
xchg
test
leave
insl
mov
and
pop
cmc
lds
push
add
cmpsl
or
fistpl
mov
sarl
inc
jnp
sti
sub
pop
scas
cli
fs
jecxz
jl
mov
jmp
mov
and
outsl
hlt
fwait
pop
cmp
cmp
jae
sub
inc
aam
mov
push
pop
add
cmp
cmp
ds
push
cmpsl
pop
xor
jge
hlt
and
sbb
fbld
xchg
pushf
cmp
sahf
jb
les
out
das
xchg
mov
scas
xchg
clc
and
in
push
xor
mov
dec
dec
lret
push
sti
inc
pop
or
sbb
inc
cmp
mov
dec
mov
adc
sbb
aaa
ret
call
cwtl
jae
sub
ss
jp
jmp
cld
call
inc
mov
shlb
and
dec
jmp
mov
hlt
add
ja
ljmp
push
fdivl
hlt
mov
test
gs
dec
pop
ja
mov
and
std
frstor
mov
inc
xor
jl
lock
gs
lcall
and
js
xcrypt-ofb
cmpsl
jmp
push
popa
sub
inc
popf
cmp
cmp
pop
push
scas
push
mov
fsubs
cmp
in
icebp
pop
jmp
inc
pop
pop
call
add
xchg
adc
in
imul
in
test
pop
cli
jnp
and
repnz
pushl
sub
sub
jmp
dec
cmp
pop
adc
cmpsb
ret
dec
inc
push
pop
lret
test
imul
jns
mov
pop
adc
adc
jge
dec
out
jmp
xchg
fisttpll
cmp
dec
mov
imul
sub
cmc
daa
data16
out
cli
into
or
add
pop
push
or
dec
test
xchg
test
lock
mov
jne
insb
iret
cmp
xlat
fs
push
jp
int
jmp
into
inc
mov
push
or
sbb
jo
mov
adc
push
stc
stc
arpl
cmp
push
into
and
mov
decl
cli
sbb
sub
dec
aam
jb
xchg
pop
cmp
mov
mov
repz
in
sti
imulb
cwtl
mov
mov
add
arpl
xchg
repz
cmpb
ljmp
pop
push
insl
imul
clc
or
loope
or
dec
inc
mov
pushl
addr16
sbb
pop
nop
out
mov
fwait
subps
ja
jae
jnp
pushl
adc
jno
xor
movsb
pop
mov
or
inc
test
ljmp
pushl
dec
sbb
push
mov
sbb
adc
into
jge
cmp
incl
xor
sub
push
jb
xor
fmuls
push
test
push
dec
aam
fsubr
or
ficoms
call
popa
adc
pop
out
xor
jne
insb
leave
sahf
mov
into
fmuls
or
xchg
aas
xor
call
adc
ficoml
xchg
sbb
test
int
cmpb
jg
add
push
mov
aaa
and
jmp
sub
rcrl
xor
and
stos
lcall
xchg
pop
xor
mov
test
insw
cmp
pushl
scas
enter
mov
pop
sub
and
push
sti
inc
mov
cmp
or
pop
or
sub
dec
sub
xchg
test
add
xor
leave
test
cmp
int3
cltd
jnp
jmp
jbe
in
nop
push
cmp
sub
adc
incl
inc
inc
popa
imul
fistps
pop
xor
clc
mov
jge
pop
das
xchg
test
sahf
add
or
sub
stc
jo
out
ss
mov
add
jno
pop
inc
jne
adc
out
icebp
sbb
jecxz
dec
cmp
loope
rcrb
inc
cmc
push
daa
adc
int3
inc
dec
lahf
call
adc
imul
mov
ret
testb
clc
decl
push
imul
ret
fwait
cmp
pop
ret
lcall
ret
add
push
add
fwait
sahf
add
cmpsl
mov
mov
xor
mov
sub
pop
dec
jl
shll
xorb
ja
insb
addr16
ret
fildll
dec
into
and
cltd
or
fmul
out
mov
inc
push
push
mov
cmp
ljmp
mov
dec
test
mov
push
push
xchg
lcall
loop
lret
push
bound
pusha
jg
sbb
sbb
loopne
lock
cli
adc
jp
jmp
cli
int3
and
lock
mov
sbb
ret
adc
movsb
hlt
fsubrl
pop
lock
lcall
cli
dec
clc
ss
inc
sbb
out
fnstcw
xor
decl
movsl
mov
aad
xor
ficoml
out
jae
mov
pusha
dec
fdivr
jmp
leave
mov
mov
jbe
xchg
sub
cmp
mov
pushl
add
lss
test
xor
sbb
lret
lods
inc
push
and
pushl
fisttpl
addr16
repnz
test
mov
pop
fcmovnb
add
les
in
xchg
lcall
or
out
and
iret
mov
and
adc
rcrl
cld
imul
cmp
dec
sbb
loop
inc
adc
add
cmp
int3
xchg
mov
imul
call
lcall
adc
and
out
mov
das
hlt
inc
push
adc
bswap
outsb
test
adc
mov
call
pusha
xor
popa
loopne
push
mov
mov
insl
test
clc
ljmp
addb
adc
adc
add
push
addb
inc
adc
inc
jnp
and
cmp
mov
mov
outsl
in
xchg
sbb
push
inc
mov
lcall
cld
or
dec
add
mov
fyl2x
or
and
xchg
call
ljmp
cli
addr16
dec
dec
sarb
sub
lods
jp
xor
incl
das
imul
xor
sti
cmp
add
cmp
cmc
and
and
decl
fsubp
rorb
hlt
push
sbb
push
or
into
and
shll
insl
mov
scas
xor
xchg
fdivl
jge
push
mov
mov
dec
cld
push
xchg
mov
jne
adc
mov
jge
push
and
iret
out
pop
lcall
je
out
int3
mov
bnd
lret
aad
test
insb
dec
popa
sar
in
scas
data16
and
cmp
jae
and
cmpps
jb
fcmovnu
aaa
pop
mov
pop
push
inc
mov
imul
add
xchg
inc
xor
mov
lea
sub
div
negl
in
mov
inc
movsb
jae
addb
dec
pop
jb
outsb
or
jmp
lods
cmpsl
add
mov
insb
gs
push
inc
xor
ja
clc
jl
into
lcall
fiadds
insb
mov
test
pushl
or
inc
adc
call
fcoms
push
inc
pop
sub
inc
outsb
pushf
clc
incl
dec
and
orl
push
mov
add
mov
icebp
rcrl
xchg
adc
add
jbe
inc
xchg
outsl
cmpsb
pop
gs
decl
lcall
adc
lcall
movsb
out
adc
pop
incl
jbe
xor
js
xor
in
pop
popa
sbb
fcmove
cmp
mov
jne
andl
jmp
in
inc
pop
stos
insb
cwtl
insl
jge
stc
out
jmp
cmpsb
cmp
pop
ret
jb
mov
xor
stos
subl
dec
adc
xchg
pop
push
out
rcr
jbe
lret
lcall
mov
push
filds
mov
repz
out
jp
mov
int3
hlt
add
jmp
pextrw
imul
cmpsb
hlt
sub
xchg
loope
jo
pop
mov
sbb
jp
das
leave
xchg
mov
and
add
sub
pushl
push
adc
fistpll
pop
or
and
cmpb
call
push
jno
mov
aad
and
push
xchg
loopne
cli
and
loope
sub
sbb
dec
repz
pop
adc
mov
push
cmp
aas
pop
ljmp
mov
test
adc
cltd
jbe
mov
cmp
imul
mov
pop
xor
adc
seto
incl
cltd
and
in
mov
shll
mov
or
pop
pop
sub
xor
pushl
mov
xor
mov
out
mov
cltd
jb
mov
dec
stc
xor
std
call
data16
or
mov
mov
xor
loopne
xchg
push
xchg
cli
jmp
ds
xlat
hlt
mov
stos
add
dec
orb
mov
cltd
aas
fmuls
and
xchg
sub
orl
shlb
cwtl
xlat
pusha
lock
gs
call
loopne
pop
push
int
sbb
repz
or
inc
xor
adc
decl
or
movsl
shll
xchg
sbb
push
shlb
adc
lock
movsl
mov
lret
sbb
mov
push
mov
adc
fnstenv
js
loopne
gs
push
ljmp
cmpsb
mov
lret
jmp
inc
scas
pushf
xor
lcall
into
add
xchg
jmp
inc
mov
mov
dec
pop
subb
add
mov
mov
xor
dec
test
ljmp
lock
dec
repz
or
push
mov
rclb
bt
mov
clc
mov
ficoms
or
inc
xor
push
mov
pop
xor
xchg
xor
in
mov
rcll
inc
push
aas
cmpsb
sbb
filds
cltd
xlat
lret
inc
and
cwtl
xorb
sub
cwtl
push
hlt
lcall
bound
hlt
ja
dec
and
sbb
int3
shll
clc
add
stc
xchg
pushf
mov
sub
push
dec
rcr
jl
insl
sub
pop
push
popa
lds
jg
mov
or
inc
ret
mov
sbb
inc
movsl
xor
sub
push
mov
fbstp
inc
push
inc
inc
js
add
mov
das
mov
nop
rcr
cmp
mov
ds
je
sub
xchg
xchg
xchg
lock
pushl
add
or
mov
rcrb
jp
call
movb
lock
mov
mov
nop
pusha
cmpsb
insb
lret
rcrb
stos
mov
pushl
addr16
inc
scas
dec
sub
andb
fidivrs
aam
jnp
int
xchg
call
pop
pop
adc
call
xor
clc
xchg
fcmovbe
int
push
xchg
sub
lods
or
push
sar
decl
or
out
cmp
jne
dec
pop
mov
hlt
ljmp
cld
pushl
mov
outsb
push
or
and
sar
jg
pushf
sbb
pushf
push
cltd
adc
aaa
mov
cmpsb
in
mov
addb
xchg
fucom
pushf
test
jmp
lret
pop
movsb
ss
imul
cmpsb
push
jae
dec
xchg
out
and
push
fdivr
sbb
lcall
ja
cs
cmp
sbb
jno
xchg
push
enter
xlat
iret
xchg
pushf
ret
inc
xchg
mov
out
cli
decl
jae
imul
sbb
push
sbb
aad
js
stos
sahf
call
mov
roll
mov
cli
adc
aad
jecxz
nop
jb
popa
pushf
lret
lahf
add
lock
adc
pop
int3
xchg
sub
jnp
jmp
xchg
test
pusha
test
dec
std
mov
hlt
push
out
jl
pop
xlat
movl
sar
push
dec
shrb
imul
lock
mov
jl
rcl
dec
push
add
rol
loope
mov
adc
enter
pushf
aaa
fwait
shlb
movsl
xchg
and
call
xor
lock
fildll
lcall
fcom
stos
pushl
arpl
cmp
dec
je
pop
mov
lahf
out
cmp
mov
mov
add
jmp
leave
push
jnp
icebp
push
jecxz
cmp
dec
int
mov
loop
pop
cmpsl
mov
dec
inc
sub
ljmp
jo
xchg
or
sbb
sbb
adc
shl
inc
pusha
lcall
or
call
int3
cmp
add
dec
jae
mov
mov
xchg
gs
mov
loope
cmp
js
mov
or
outsl
fidivs
decl
arpl
jmp
push
jns
mov
jnp
fnstcw
adc
xor
adc
dec
push
inc
mov
call
mov
dec
subb
fcoms
mov
fsubl
cmp
std
and
iret
push
bound
fucom
shlb
push
incb
cmp
jmp
sbbl
lret
shl
pop
sti
sar
adc
jmp
sub
subb
leave
adc
inc
daa
xchg
sbb
jb
stos
and
mov
push
decl
cld
aaa
imul
cltd
das
inc
insb
call
adc
jo
stc
add
enter
push
mov
sbb
dec
fnsave
out
and
in
xchg
or
cmp
je
scas
call
sub
xor
popa
mov
cltd
adc
adc
sub
cwtl
ljmp
adc
xor
push
xor
sbb
fchs
filds
jmp
jnp
push
cmp
ljmp
cld
inc
add
push
lcall
adc
lret
incb
stos
or
cli
push
dec
jo
ss
jmp
mov
mov
test
sti
jnp
sub
sbb
push
push
xchg
shll
flds
scas
arpl
mov
subb
sarl
scas
cmp
adc
xchg
hlt
jno
lods
cmc
ds
cld
divb
inc
shlb
les
xchg
repz
jl
sbb
add
decl
mov
ret
xor
std
push
mov
jg
jp
ret
adc
test
push
les
push
xor
decl
insl
dec
in
iret
xchg
pop
mov
sbb
arpl
fsub
addr16
pushl
orb
mov
add
mov
dec
inc
mov
mov
push
sub
add
jns
clc
pop
sahf
or
adc
mov
repz
lods
jg
push
cwtl
icebp
push
dec
enter
and
xchg
dec
jns
int
lock
pop
ds
adc
mov
decl
popa
inc
jecxz
mov
aad
xchg
loope
loop
lods
imul
sbb
std
mov
mov
call
xchg
mov
stos
js
jb
mov
clc
das
mov
cltd
jge
cmp
add
pusha
mov
cs
or
xor
jmp
movsb
sbb
mov
bound
lahf
das
and
cld
jmp
insl
movb
sbb
lahf
rclb
lcall
stos
incl
adc
sbbl
jbe
mov
call
xor
and
jg
cli
ss
ret
cmp
movsb
and
push
lods
and
dec
inc
sub
cmp
daa
in
pop
stos
mov
lret
fs
call
xor
mov
aam
loop
or
sub
shrl
insb
inc
mov
mov
imul
adc
test
add
out
je
rol
mov
push
outsb
mov
ja
enter
clc
jg
mov
outsb
sahf
es
imul
test
jnp
or
xchg
hlt
sahf
ds
xlat
scas
sahf
lcall
lods
and
mov
and
push
ljmp
sbb
push
insb
fwait
mov
dec
push
cwtl
push
xchg
cltd
and
movsl
pusha
jg
icebp
jnp
mov
jle
cli
mull
cli
jb
call
test
dec
sarb
pop
insb
lcall
xchg
mov
sbb
mov
push
push
add
lea
and
je
sub
inc
adc
pushl
adc
repnz
jns
adc
rcrl
out
dec
cli
mov
ljmp
addr16
jb
xchg
arpl
jl
jnp
adcb
filds
and
mov
add
xchg
repz
pop
xchg
push
loop
sub
xchg
outsb
enter
lcall
cmp
arpl
xchg
arpl
inc
mov
cmc
cwtl
xchg
cli
fbld
aaa
inc
movl
mov
test
stc
test
iret
xor
or
insb
xchg
jo
push
decl
loope
lahf
push
mov
testb
mov
cld
push
iret
mov
push
ret
cmp
sub
jb
cwtl
jmp
jne
cltd
inc
dec
test
push
stc
push
xchg
incl
repz
pop
mov
jl
pop
push
pop
push
adc
add
test
xor
mov
xor
xor
pop
call
inc
mov
push
bound
xor
mov
pop
inc
jno
out
cmp
mov
sub
xchg
lret
mov
js
cli
arpl
sar
je
popf
mov
aam
in
loope
out
lcall
push
ljmp
iret
mov
push
mov
ret
out
push
or
xor
addr16
ljmp
sub
pop
mov
pop
ljmp
lret
in
test
sbb
jmp
stos
movsl
lret
mov
push
dec
sub
jl
sti
jns
pop
mov
pusha
popa
mov
jo
jbe
fistl
xor
aaa
fidivs
jg
decl
out
sbb
xchg
pop
iret
and
or
mov
ss
shr
mov
in
jbe
loopne
push
xchg
pop
stc
pusha
sbb
insl
sub
cmp
incl
insb
push
arpl
push
or
es
loope
lods
data16
outsl
jns
mov
aaa
inc
incl
data16
int
pop
cltd
fs
shrb
fbld
xchg
cmp
adc
mov
lds
lcall
mov
xchg
lcall
shrb
hlt
or
pop
decl
jmp
enter
sbb
cmp
pusha
pop
out
outsb
pop
and
aad
jg
repnz
jmp
daa
mov
in
xor
or
mov
incl
and
push
sub
and
hlt
mov
scas
fsts
repnz
push
ret
sbb
incb
add
loope
enter
dec
scas
fisubs
mov
and
cs
sbb
push
stc
into
daa
mov
jne
decl
lock
mov
sahf
scas
pop
insb
xchg
sbb
outsl
clc
lea
test
fs
sub
dec
xchg
arpl
call
fnstcw
cmp
aam
stc
sub
jae
xchg
xchg
lahf
dec
and
and
data16
inc
test
xchg
or
pop
shr
es
ja
daa
lret
pop
leave
shrb
lahf
jno
mov
push
repnz
icebp
ficomps
es
ljmp
push
data16
out
inc
cmp
out
add
idivb
rol
sbb
jmp
enter
push
shll
jne
cltd
or
dec
pcmpeqb
dec
int
or
es
cmp
js
sbb
sub
or
mov
ss
call
mov
or
cltd
dec
or
divl
mov
cli
and
mov
mov
out
pop
dec
mov
pushl
les
sbb
aaa
lahf
nop
and
lods
cld
or
adc
adc
sahf
shrb
sub
dec
daa
repnz
aaa
mov
push
mov
clc
mov
pop
xchg
ret
hlt
lret
int
sub
in
sbb
mov
push
xor
xchg
add
mov
inc
mov
push
addr16
cmp
cmp
and
stc
mov
andb
enter
sub
dec
mov
loop
or
xchg
add
sbb
cmpsb
xchg
lcall
inc
scas
test
jnp
movsl
or
clc
ja
leave
lock
mov
scas
outsb
or
fildl
pushl
faddl
stos
jmp
sahf
loop
mov
cmp
xchg
dec
cli
fwait
or
sbb
frstor
incl
or
call
cmpsl
out
push
sarl
fmull
movsl
add
jle
and
cwtl
xlat
inc
jbe
push
aas
jo
jp
add
mov
jg
xchg
es
ljmp
negb
rclb
ljmp
mov
sub
test
push
fldl2e
fisubl
sbb
imul
jecxz
pushl
pushl
pop
push
add
lea
fs
inc
imul
test
or
push
pop
pushl
inc
dec
int
jle
fdivr
fwait
jno
dec
mov
mov
clc
test
ljmp
lcall
ja
sbb
and
pop
push
movsb
xor
dec
addr16
mov
lret
pop
in
cwtl
cmpl
mov
dec
ljmp
push
dec
aaa
push
lcall
dec
and
xor
pop
jg
mov
jle
sub
in
daa
jb
cltd
pop
outsb
adc
decl
or
jo
jns
fs
clc
rcll
pop
dec
adc
data16
xchg
dec
adcb
out
mov
jmp
xchg
fwait
xor
mov
lods
and
je,pn
iret
push
in
int
arpl
rcll
jmp
inc
push
pop
movsl
int
push
jne
dec
fs
pop
push
dec
jnp
lret
xor
adcl
cwtl
xlat
dec
subl
push
cmc
js
sahf
mov
pusha
in
mov
pop
mov
stos
pushl
pushl
inc
xchg
fisttpl
mov
adc
add
xchg
hlt
shlb
call
cmpsb
mov
pop
ret
jae,pn
addr16
pop
ret
lock
xchg
inc
jle
dec
cltd
lcall
fcomip
push
add
mov
addr16
inc
sub
mov
call
imul
pop
in
pushf
lret
mov
mov
inc
or
outsb
sbb
lcall
and
mov
sbb
mov
in
leave
gs
loopne
lcall
xchg
cmpsl
pop
jne
push
and
fisubl
fwait
inc
xlat
mov
aaa
inc
mov
add
and
pop
and
add
les
fwait
inc
mov
jmp
mov
aaa
pop
cld
aad
int3
movsb
push
movsl
push
std
in
mov
jbe
scas
mov
ljmp
mov
repz
mov
inc
sub
das
jo
insl
cmpb
scas
push
add
popa
xlat
test
jmp
adc
out
or
cmp
fnstsw
loopne
lcall
dec
movsl
dec
hlt
xchg
pop
or
scas
filds
cmp
stc
test
call
ror
ret
xchg
stos
fwait
notb
cmc
fsts
lds
in
jge
aaa
sub
call
in
push
jno
pop
push
cs
adc
insb
ljmp
pop
mov
inc
cmp
xlat
das
or
adc
push
movsb
cmpsl
mov
lcall
movsl
dec
vmread
hlt
repnz
xor
clc
push
or
jmp
adc
lods
scas
cmp
pop
dec
fildll
mov
push
clc
fwait
jo
imul
cs
int
sbbl
xor
xor
sbb
adc
lcall
fsubp
adc
movsl
stos
inc
and
rcrb
cmp
call
outsl
push
jg
pop
mov
notl
idivb
loop
mov
push
cmp
rol
out
xor
jg
lods
sbb
dec
add
xchg
and
inc
jb
ljmp
ljmp
test
fidivrl
fwait
add
mov
mov
cmc
dec
je
enter
and
lret
and
pushl
gs
jl
gs
sbb
fnstcw
sbb
pop
jne
lods
xchg
push
inc
fdivr
ljmp
mov
mov
and
cmp
jg
cs
nop
dec
push
push
pushl
shr
ja
add
or
push
jnp
dec
xchg
mov
decl
push
or
lds
xchg
das
xchg
shrb
stc
dec
push
add
mov
jmp
inc
das
lea
je
mov
cmp
aad
sub
repz
jle
adc
popa
sub
or
mov
data16
incl
inc
pop
xorb
in
in
fisttps
add
hlt
xor
mov
xchg
pushl
les
and
push
ficomps
mov
ss
inc
loope
sbb
test
push
shll
call
lret
xchg
outsl
ljmp
mov
xchg
dec
mov
orb
adc
in
or
popf
push
clc
jns
je
mov
xor
test
add
pop
std
pushl
jmp
xchg
out
dec
sbb
cwtl
loopne
xor
mov
mov
cld
incl
sbbl
dec
aas
stos
std
sbbl
call
cld
xor
scas
out
imul
sub
shrl
sti
xchg
pushf
leave
ljmp
dec
pop
je
mov
test
push
and
push
mov
pop
loope
push
cli
push
mov
and
cmp
jmp
aas
mov
jnp
jae
call
fldenv
movsl
sti
or
pcmpgtw
or
xchg
jbe
insl
mov
mov
or
mov
mov
jmp
in
xchg
or
mov
jp
out
fistpll
jl
sahf
xchg
out
mov
mov
jae
or
jae
or
cmpl
adc
clc
call
pop
pop
adc
int
sti
cmp
cmp
je
ljmp
out
and
mov
xchg
or
fs
sbb
out
xor
jb
mov
dec
and
jnp
adc
adc
call
std
cmp
fnsetpm(287
in
cli
mov
xlat
pusha
mov
hlt
pop
dec
scas
pop
adc
sar
xchg
mov
push
repz
ret
fcomp
cmp
in
add
inc
lret
mov
mov
call
jae
test
iret
and
ret
pushl
mov
popf
into
in
ret
movsl
xor
std
inc
adc
mov
jp
pop
dec
idiv
ljmp
jg
mov
loopne
xchg
repz
and
add
out
stos
sbb
clc
lahf
push
imul
std
jno
and
mov
cmp
out
idiv
inc
cmpsb
sbb
ret
or
bound
mov
leave
test
push
cmpsl
cmpsb
adc
sbb
icebp
out
adc
int
cmp
and
mov
loop
pop
lock
roll
pushf
bound
dec
imul
mov
pushl
mov
xor
test
arpl
sbb
push
xor
jno
sbb
or
mov
ficoms
mov
movsl
arpl
fadds
movsl
inc
cld
mov
nop
mov
lock
lock
repz
sti
dec
push
popf
cwtl
cmc
sbb
lcall
rcl
jmp
sub
xchg
or
mov
push
in
xor
call
and
leave
shrb
push
cli
push
test
imul
inc
mov
or
jge
push
dec
mov
xchg
push
rcll
lret
mov
leave
repnz
decl
fists
jb
cmp
data16
int3
test
mov
fsts
cmpsb
lock
push
pop
insl
in
pop
xchg
scas
out
test
icebp
call
lods
repz
loopne
xchg
mul
push
decl
cmp
scas
dec
xor
movsb
and
adcb
add
cmp
in
mov
cwtl
or
das
cmp
rorl
dec
sahf
cmc
xlat
xor
sub
mov
xchg
addr16
lcall
and
inc
push
lods
xor
mov
push
stos
add
decl
or
into
ss
dec
jp
pop
mov
fs
mov
in
sti
int3
test
pushl
sbb
nop
pop
aam
cmp
jle
mov
add
mov
cld
incl
inc
test
xchg
js
push
or
ficoms
mov
mov
je
mov
sbb
mov
jmp
out
and
sub
jo
cmp
cmp
je
add
pop
and
pusha
push
push
nop
add
pop
mov
testb
decl
div
scas
outsl
mov
stos
leave
mov
pop
mov
sbb
mov
fstl
stos
push
xrelease
sub
xchg
sahf
lock
int
repnz
loop
std
xchg
sbb
inc
pushf
mov
add
aam
and
mov
loope
inc
call
in
pop
lock
xor
xor
cld
decl
mov
cmp
push
loop
push
test
xlat
movsb
std
js
sub
push
sbbb
nop
and
popf
or
jp
cmp
pushf
sbb
imul
sbb
enter
inc
sbb
rorl
es
arpl
mov
push
sarb
loop
jmp
inc
cltd
mov
mov
mov
and
test
pop
jae
rcl
aaa
mov
adc
shl
pop
leave
cmp
xchg
fs
xorl
mov
cli
decl
mov
jnp
mov
hlt
jg
xor
xchg
dec
movsb
outsb
mull
icebp
mov
nop
sbb
adc
mov
jl
sbb
daa
mov
ljmp
adc
jle
and
ljmp
hlt
jb
notl
inc
inc
ljmp
test
and
fadds
sysret
lds
adc
jmp
push
jno
js
sbb
ljmp
xchg
aas
mov
fs
mov
jmp
mov
shrb
out
xor
mov
jg
fwait
jae
push
pop
lcall
xor
pop
ss
add
imul
ljmp
test
dec
xchg
ds
jecxz
pusha
repnz
and
or
push
hlt
cli
popf
cmpb
mov
pop
outsb
in
pushf
push
divl
loope
decl
dec
mov
pop
out
rorl
iret
outsb
adc
and
push
xchg
xchg
and
ret
cmc
cs
lods
push
dec
and
inc
aad
push
sbb
decl
sub
inc
add
inc
jb
popa
je
inc
jbe
outsb
je
jg
jle
outsl
arpl
inc
and
adc
gs
adc
jg
xor
outsl
jb
and
jb
dec
imul
js
push
popa
outsb
addr16
fs
mov
imul
outsl
je
pop
jns
push
imul
push
cwtl
inc
xor
mov
std
mov
arpl
gs
outsl
imul
mov
popa
fs
imul
mov
xchg
inc
pop
arpl
mov
jns
iret
jns
push
jl
push
jnp
imul
lcall
sub
outsw
jne
jb
outsl
jae
add
outsb
sbb
insl
xor
sub
adc
mov
fs
orb
and
lret
scas
and
and
gs
sbb
mov
dec
xchg
mov
pushf
inc
or
rcll
pop
cltd
mov
pop
dec
fsts
push
add
jns
or
mov
popf
arpl
and
add
adcb
add
push
inc
test
cmpb
sarl
lea
inc
sub
popa
roll
push
inc
std
dec
fistps
inc
inc
xor
fs
mov
add
push
adc
ja
adc
dec
add
push
inc
les
pusha
or
adcb
xchg
and
or
loopne
fldl
adc
jg
inc
dec
les
popa
add
sbb
test
mov
xor
xor
add
shlb
add
push
call
mov
adc
mov
mov
push
lds
ret
fnstsw
add
add
or
insl
jo
imul
fadds
cmp
imul
repnz
mov
mov
insl
and
outsl
jb
insl
sub
push
stos
sub
push
xor
test
out
and
or
sbb
xor
add
sbbb
fwait
out
rcll
addr16
or
dec
xchg
addl
or
xchg
or
add
mov
add
gs
loop
aam
pop
add
mov
xchg
adc
sub
or
inc
add
pop
xchg
out
fsubrs
imul
push
sub
push
add
adc
lods
idivl
pop
mov
add
mov
imul
inc
push
inc
pop
add
rolb
mov
cmp
xchg
mov
and
fldt
filds
push
inc
push
dec
add
add
ret
imul
inc
pop
loopne
popl
add
sbb
data16
cmp
adc
pop
add
mov
mov
and
inc
sbb
mov
add
lea
fdivrs
mov
xor
rolb
xor
mov
in
dec
mov
and
mov
add
mov
mov
aam
popa
fs
nop
mov
sbb
add
dec
in
jb
loopne
xor
leave
leave
inc
jb
cmp
pop
shlb
mov
push
push
and
cmp
sbb
dec
fisubrl
lds
push
xor
sahf
orb
push
mov
mov
rorb
push
push
fdivl
dec
pop
push
out
push
inc
test
fisubrl
xchg
lock
add
add
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
fdivl
inc
add
add
add
add
add
add
add
add
add
add
mov
add
shlb
in
add
add
add
add
add
add
add
fadds
add
movsb
aaa
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
sub
add
insb
cmp
add
in
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
js
add
xor
inc
add
add
add
add
add
add
add
add
add
add
mov
inc
inc
add
add
add
add
add
add
add
add
add
add
enter
cld
dec
inc
add
add
add
add
add
add
add
roll
fmull
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
js
push
mov
dec
ret
icebp
test
push
xor
pop
pop
out
je
insl
dec
mov
cmp
sbb
iret
xor
and
inc
fnstsw
inc
pop
jecxz
enter
xor
insl
mov
in
xchg
or
mov
xchg
push
mov
sbb
sub
repnz
cmpsb
cwtl
rcrb
xor
pop
sub
push
mov
mov
rorb
or
icebp
outsl
fimuls
sbb
sbb
insl
loopne
sub
ret
in
lcall
sbb
jge
fwait
pusha
push
mov
pop
dec
lea
leave
shrl
fs
pusha
mov
mov
aam
jle
inc
push
cmp
push
ds
aas
clc
or
test
mov
ret
and
jne
push
jle
xchg
mov
out
sub
rclb
rorl
xchg
loope
orb
stos
scas
cmp
sbb
les
int
rcrb
push
cmp
jg
popa
sbb
ror
enter
test
adc
icebp
repnz
mov
xchg
sbb
aam
inc
notb
jae
and
cltd
xor
fidivrs
dec
cmp
in
dec
out
in
jl
push
adc
stos
sahf
ds
mov
inc
inc
ljmp
ss
jl
or
loopne
jne
mov
mov
test
or
inc
mov
mov
popl
dec
adc
pusha
sbb
cmpsl
xchg
cmpsb
loope
mov
xchg
popf
sub
sub
pop
xchg
mov
mov
dec
adc
xor
test
sti
pop
mov
push
and
lds
loop
cltd
xchg
cmp
jl
add
mov
fwait
aas
clc
push
mov
pop
les
aaa
cwtl
ret
jno
clc
test
sbb
xor
adc
jno
or
push
rcll
sub
sbb
enter
pop
jmp
sbb
push
jnp
jmp
std
sahf
sub
jo
pop
sbb
dec
mov
dec
pop
lcall
inc
je
shrl
lret
push
out
push
fidivrs
jmp
pop
cltd
push
jno
stc
lcall
fstps
xchg
add
dec
or
mov
ds
or
loop
or
jmp
and
jo
stos
mov
mov
in
inc
in
loope
mov
imul
dec
dec
mov
pop
out
pop
cmp
negb
lock
mov
scas
sbb
xchg
xchg
dec
pop
dec
in
imul
dec
out
stos
adc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
add
lret
add
add
add
dec
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jne
popa
jo
add
imul
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
jne
je
jb
outsl
fs
insb
outsl
jae
inc
outsb
jne
add
push
gs
imul
add
