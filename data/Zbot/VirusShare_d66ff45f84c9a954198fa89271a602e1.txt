call
les
mov
movb
jg
xor
pop
mov
mov
xchg
xchg
xchg
ljmp
or
and
jnp
push
jge
dec
pop
mov
mov
sti
ss
test
jmp
mov
mov
mov
test
xor
mov
in
push
fmull
fwait
incl
in
ds
inc
mov
xchg
sub
outsl
mov
push
add
cmp
in
aam
push
and
jns
mov
mov
mov
mov
stos
xor
push
test
mov
repnz
xor
and
fcmovnbe
dec
cmp
clc
jecxz
call
sub
fisttps
call
jp
cltd
xlat
xchg
push
sbb
inc
dec
ja
xchg
xor
or
cmpsl
add
add
call
jne
push
cli
push
sub
push
sbb
push
mov
adc
mov
cmp
jns
inc
push
xlat
push
and
loop
mov
test
cld
mov
pop
pushf
lods
lods
jnp
decl
cmpsb
cmp
cmp
lods
inc
mov
ja
xchg
xchg
iret
loope
cltd
lods
jns
sub
pushl
sbb
mov
cmp
hlt
call
mov
push
push
jmp
sbb
push
push
mov
leave
shrb
pop
pop
pop
out
dec
stos
stos
dec
sub
sti
dec
add
pop
jge
mov
or
jno
outsl
sbb
adc
cmp
rcrb
jmp
pop
call
pop
icebp
int
clc
sub
mov
mov
test
sbb
popa
xchg
add
call
decl
fdivrl
cmp
pusha
sub
les
sahf
jnp
mov
sbb
lcall
mov
sub
aad
mov
call
xchg
sub
jle
mov
frstor
aad
cmp
test
shrb
inc
imul
xchg
icebp
xchg
push
mov
mov
cld
add
lods
sub
lret
bound
pop
fisubrl
jg
movsb
jnp
popf
mov
jbe
cld
out
sbb
push
mov
div
push
push
in
pop
out
popa
push
loope
stos
dec
jmp
inc
out
inc
jmp
lret
inc
stos
orl
mull
into
or
cmp
pop
mov
jmp
jae
insl
ud0
mov
into
mov
add
insb
lds
je
or
sbb
pushf
scas
lcall
js
jg
xchg
outsb
pusha
aaa
outsl
ljmp
sbb
mov
pop
int3
pop
xchg
loope
imulb
arpl
fcmovb
sub
scas
mov
pushf
jg
xor
in
jge
rorl
dec
jmp
fs
idivl
and
mov
adc
xchg
or
mov
iret
pop
lcall
je
adc
mov
push
loop
cmp
incl
xchg
mov
mov
aad
or
add
outsl
ljmp
and
jo
nop
xor
add
jg
sub
mov
xchg
js
pop
jmp
push
das
lods
icebp
lea
gs
xchg
add
cltd
inc
xor
int3
outsl
pop
and
pusha
lcall
sahf
dec
stos
insl
mov
jl
aam
push
das
dec
push
cltd
pop
pop
push
call
jmp
pop
lds
sbb
sub
leave
lret
jle
cmp
enter
mov
pushl
cmp
adc
and
cmp
mov
mov
shll
mov
popa
mov
ret
and
ss
adc
ror
pop
out
jecxz
jne
inc
fidivs
mov
in
lcall
mov
outsb
insb
je
std
push
idiv
xchg
and
mov
icebp
mov
test
pushl
cwtl
sbb
loop
movsl
push
cmp
imul
xchg
cmp
pop
cli
add
movsb
dec
inc
pop
xchg
ja
mov
jae
cmpsl
loope
ds
cmp
jmp
mov
fmull
add
or
nop
std
call
sbb
lret
or
mov
int3
mov
push
roll
mov
add
xor
int
jg
loop
adc
aam
jmp
push
mov
pushl
incl
in
mov
adc
fmull
add
incb
das
mov
add
fimuls
mov
xor
mov
adc
add
in
pop
enter
push
in
in
dec
mul
mov
and
pop
in
inc
iret
mov
lock
inc
add
jnp
mov
push
pop
mov
cmp
fistl
lock
add
sub
fistps
adc
and
das
inc
imul
push
jne
xor
lods
xor
in
inc
mov
addr16
repz
jge
sub
bound
fmull
lcall
adc
jmp
in
cmpb
adc
loopne
mov
into
xor
ret
int3
out
fldt
loopne
mov
and
rcr
cwtl
add
add
adc
mov
add
sub
jne
add
push
push
lea
push
mov
or
push
add
cs
aas
mov
pop
pop
or
lret
fmul
ret
ss
xchg
fiaddl
jmp
out
sbb
jecxz
test
adc
or
add
jmp
sti
add
pop
fwait
add
lahf
adc
lcall
add
mov
push
add
and
testb
jl
je
add
idivl
add
inc
pop
or
and
and
cmovnp
outsl
outsl
ljmp
add
pushf
sbb
add
jg
insb
pushl
push
add
jne
add
mov
xchg
push
add
push
xor
fists
mov
call
lahf
ss
mov
or
add
bound
mov
dec
out
in
push
decl
lods
add
or
pop
sub
icebp
cmp
or
mov
add
sub
insl
pusha
jp
sbb
test
push
cwtl
and
in
cmp
pop
add
js
add
mov
negb
add
dec
fwait
cwtl
mov
mov
pop
add
add
sar
dec
mov
cmpsb
cmp
mov
cmp
ss
daa
sbb
test
lcall
out
out
sub
outsl
lods
mov
mov
mov
dec
mov
in
inc
pushf
or
out
add
mov
mov
adc
mov
test
neg
fnsave
jp
xchg
push
cli
push
add
adc
iret
jge
mov
dec
or
lahf
test
data16
test
movsb
fmuls
adc
inc
stc
mov
mov
popf
pushl
or
movsl
push
rcrb
ror
cmovno
sti
testb
mov
mov
dec
rcr
loop
xor
jle
xchg
test
push
ja
sub
sbb
mov
add
fdiv
filds
shll
out
adc
sbb
in
stc
lods
add
idivl
in
jge
and
loope
sbb
mov
pop
dec
bswap
das
outsb
test
loope
or
mov
mov
stos
mov
loope
cs
loopne
xor
pop
inc
iret
or
clc
xor
and
dec
and
sub
pusha
loope
jo
into
and
pushf
push
add
mov
jnp
jg
mov
mov
mov
mov
and
jmp
in
repz
mov
cmpsl
jg
jl
outsb
ret
dec
mov
or
mov
inc
jns
adc
lahf
add
or
outsl
pop
and
mov
mov
ret
inc
call
push
lcall
cmp
mov
aas
lock
bound
ja
int3
insb
add
movsb
leave
movl
cmp
hlt
add
adc
sub
xchg
sub
jg
movsb
pop
dec
adc
test
cmp
ss
adc
rorb
addr16
aaa
mov
ljmp
or
add
add
pop
loop
nop
mov
inc
or
out
mov
pop
dec
scas
xor
or
add
and
sbbb
repnz
mov
sbb
mov
fistpll
sbb
jle
mov
cmpsb
mov
add
inc
sti
fbstp
test
cmpsl
dec
test
not
mov
push
mov
cld
push
pop
bound
adc
fisubl
movsb
movsl
sub
fisttps
loop
jo
mov
mov
fcmovb
adcb
mov
outsb
cmpsb
sub
ficoms
clc
jg
je
add
orl
add
ljmp
repz
lods
adc
pop
add
xlat
xor
xchg
fisubrl
sbb
xor
add
rclb
xor
fwait
jbe
fistpl
roll
mov
negb
jo
pop
pop
pusha
loope
push
stos
mov
xchg
stos
icebp
mov
add
mov
mov
xor
testb
test
adc
cmp
mov
push
lods
jb
mov
imul
inc
popa
sbb
fmul
outsl
inc
sbb
inc
push
in
jecxz
imul
sub
add
and
add
add
add
sbb
push
fsubs
fstl
sbb
fistpll
js
mov
add
push
adc
add
or
decl
loopne
scas
pop
add
mov
mov
subb
sti
lea
add
icebp
add
fisubrl
sub
push
sti
inc
mov
inc
sub
sbb
sub
adc
js
mov
je
sub
mov
xchg
mov
aam
psrld
outsb
mov
mov
pop
dec
lods
ja
mov
add
aam
push
outsb
or
cmpsl
std
lods
cmpl
mov
cmp
insl
mov
movsl
out
int3
ljmp
jae
in
pop
mov
cmc
push
xchg
or
clc
xor
aaa
or
rcll
mov
and
ss
adc
popa
add
insb
into
fcmovnb
test
fdivrl
out
sbb
in
std
movb
pop
mul
aad
cs
shrl
mov
dec
lds
decl
xchg
pop
or
and
inc
or
push
and
fs
mov
popa
xor
daa
lret
es
outsl
insl
pop
dec
ret
mov
popf
iret
or
sbb
add
sbb
js
mov
mov
imul
add
fadd
fnstcw
pop
dec
pop
or
data16
test
sbb
inc
andb
in
push
push
or
cmc
jnp
add
bound
add
movsb
and
jo
pop
or
jmp
add
les
dec
out
fstpl
scas
and
adc
sbb
add
add
mov
test
jmp
in
ret
clc
fcomi
mov
cmp
cs
int3
sub
imulb
sub
xor
out
in
pop
out
push
sub
sbb
xor
roll
popf
cmp
scas
shl
adc
xor
push
mov
popa
and
and
pop
fisttpl
or
into
addb
fldl
jmp
jb
arpl
out
xchg
mov
out
cmp
mov
scas
adc
xor
fimull
and
aas
mov
sbb
xchg
mov
push
insl
pop
xchg
seta
in
frstor
or
inc
sahf
jbe
cmpsb
mov
test
mov
ss
and
add
jecxz
sahf
jp
mov
pop
out
cmp
arpl
clc
add
pusha
mov
je
or
aad
sti
in
mov
shlb
sbb
add
jno
adc
mov
pop
cli
fildll
adc
xor
mov
xchg
or
subb
pop
dec
sbb
xchg
insb
in
sub
insl
pop
clc
mov
lahf
clc
aam
testb
mov
sbb
ret
iret
mov
test
mov
nop
xor
push
repz
ss
push
in
mov
mov
push
pop
sbb
pushf
jl
add
test
mov
or
and
icebp
push
lds
insl
aad
adc
sbb
pop
pop
push
fs
mov
adc
enter
call
aaa
sub
jle
mov
dec
mov
mov
rcl
outsb
mov
and
test
aam
sbb
das
lods
adc
sub
inc
lock
nop
xchg
inc
jbe
or
add
mov
lret
mov
pop
mov
mov
sub
push
pcmpgtb
sahf
pop
fistpl
jmp
mov
stc
imul
jne
ret
repnz
ret
ss
xchg
arpl
sub
fstl
ljmp
sti
lock
in
jp
push
cwtl
lods
sub
movsl
out
aaa
outsb
hlt
cmpsl
adc
mov
jns
test
insb
test
stos
pop
cmpsl
in
imul
pop
mov
mov
pop
jl
imul
es
mov
sub
fistl
jmp
outsb
mov
jne
dec
inc
cmc
nop
nop
pushf
or
incb
dec
cmp
push
jnp
inc
pushf
jns
mov
and
mov
fbstp
sbb
icebp
shll
dec
repnz
enter
cmpsl
xchg
in
sarb
mov
and
dec
wbinvd
cs
mov
jb
push
je
pop
adc
pop
shll
jno
add
aas
sbb
lock
lock
out
mov
dec
xchg
out
mov
mov
mov
ljmp
add
pop
sbb
xchg
jmp
or
push
add
jno
rclb
cmp
sbb
out
popf
and
sbb
xor
test
mov
loopne
adc
xchg
pop
js
sbbb
test
jbe
loopne
test
in
test
jl
incb
pop
testb
mov
xor
cmp
add
xor
or
lret
test
mov
clc
hlt
std
lcall
cwtl
jmp
in
cmpsb
sbb
xchg
pop
xchg
xchg
xchg
jo
stc
pop
sub
adc
sub
decl
lods
or
repnz
mov
and
fildll
clc
out
push
push
adc
and
outsl
xor
stos
sub
cmp
jl
test
outsl
aad
mov
dec
jecxz
lret
cmp
and
lret
inc
mov
dec
sub
jl
sbb
mov
jno
aam
notb
cli
dec
aaa
mov
in
testl
sub
fdiv
aaa
mov
pop
or
mov
outsb
lcall
sub
xchg
das
test
xchg
xor
dec
ret
mov
push
or
jb
dec
or
bound
or
mov
xor
bnd
mov
icebp
mov
adc
xor
lcall
sub
pop
sbb
mov
pop
jecxz
das
dec
lods
jne,pn
rcrl
fs
subb
shll
cli
inc
sbb
out
or
fimull
xor
ja
imul
lock
daa
adc
aaa
daa
icebp
mov
and
mov
cmp
add
mov
ficomps
fistpl
cmpl
adc
pop
jnp
pop
sub
adc
movl
sbb
and
ret
push
imul
push
loopne
mov
fldl
xchg
mov
and
lods
jnp
pop
cmp
nop
inc
mov
cmp
rcr
or
jmp
dec
call
out
fbstp
cmp
add
cli
loopne
fucomip
or
mov
neg
xor
mov
mov
les
lret
inc
les
lods
mov
fnstsw
loopne
aas
idivl
loopne
xrelease
cltd
and
fisttps
pop
sti
xlat
jbe
jae
dec
xor
jecxz
lock
pop
test
shll
push
neg
mov
ja
clc
sbb
mov
test
fisttpl
neg
xor
and
dec
mov
int3
cs
inc
sbb
cld
mov
test
cmp
enter
shrb
cltd
xchg
add
jecxz
mov
in
aaa
popa
or
ja
shll
pop
arpl
push
adc
xor
or
pop
or
outsl
in
jmp
fdivs
push
jle
in
pop
pop
stos
dec
insb
mov
rolb
add
cmp
call
xchg
mov
in
xchg
fnstenv
push
icebp
dec
dec
adc
insl
insb
cmp
lods
add
ljmp
jbe
shl
jg
push
enter
rol
es
push
test
mov
xor
fidivrl
es
cmc
dec
inc
movsl
fsubrs
xor
pushl
mov
insb
adc
out
cmp
scas
insb
mov
sub
pop
jns
bnd
mov
pop
add
icebp
cmp
sti
in
xor
pop
fwait
mov
inc
aaa
jbe
lcall
inc
pop
or
shll
xor
arpl
loop
sbb
lds
popa
loopne
and
or
mov
mov
xor
jecxz
push
jge
andl
pop
cwtl
ret
adc
insb
add
outsl
mov
std
lret
dec
dec
add
mov
mov
fs
pop
jo
fmull
push
inc
out
adc
xor
enter
bound
shll
gs
test
outsb
aam
lods
inc
je
dec
cmp
shr
adc
or
and
mov
out
jno
or
lea
neg
sti
fucomi
loopne
ss
lds
dec
test
rorl
add
xchg
mov
jle
jb
and
sahf
out
xchg
mov
aaa
add
into
std
lods
std
or
dec
cmp
imul
and
dec
cmp
push
pop
sbb
loope
stc
mov
mov
cmp
decb
icebp
cmp
sbb
fcoms
imul
xlat
mov
adc
fldcw
xchg
adc
out
or
push
popa
inc
sti
loopne
adc
xor
cmpsl
or
pop
push
sbb
enter
call
mov
repnz
inc
sub
js
mov
arpl
pushf
sti
and
je
mov
ljmp
call
ret
pop
push
xor
inc
sbb
mov
call
jge
push
lret
mov
add
iret
lods
and
dec
cmp
fisubrs
mov
loopne
arpl
icebp
dec
ds
mov
add
pop
jbe
and
push
push
repz
pusha
push
push
or
push
jmp
outsl
in
add
add
jae
dec
ret
push
scas
loopne
in
jbe
or
lahf
lahf
fistpl
stc
pop
imul
enter
dec
lock
sti
push
fiadds
sub
clc
aas
dec
push
and
adc
mov
in
adc
out
or
ja
push
and
ljmp
jb
sub
add
push
inc
jg
xchg
lock
dec
sub
cmp
ret
xchg
js
fdivrl
roll
dec
lods
ss
mov
in
std
call
sub
adc
add
sbb
les
inc
lret
mov
addr16
shl
add
xchg
pop
into
xor
ret
mov
xor
fildl
sub
xor
sub
movsb
jnp
and
pop
clc
sbb
sub
rcrb
mov
enter
lcall
pop
scas
add
mov
cmp
jmp
mov
add
jmp
mov
cli
sub
push
and
fistpll
and
mul
in
push
test
test
in
lea
pop
in
push
xchg
jae
xchg
cs
push
incl
sbb
std
loope
and
pop
push
icebp
inc
insl
call
pusha
xor
xchg
out
jmp
ljmp
ss
or
push
sbb
jns
pop
and
dec
cmp
lahf
dec
cwtl
mov
test
jne
outsb
mov
bound
repnz
jns
xlat
xchg
andl
mov
cmp
mov
sbb
or
idivb
dec
lods
in
mov
popf
je
js
lods
lock
mov
dec
dec
sub
dec
insl
in
nop
cwtl
xor
lret
out
xlat
aaa
add
dec
shll
add
add
or
lods
shr
inc
call
or
dec
cmp
xlat
push
adc
stos
cltd
jle
ja
pushf
dec
fwait
lock
pop
pop
and
cmp
mov
jnp
loop
and
add
rolb
xor
push
std
xchg
popa
mov
sbb
cld
sub
jge
inc
mov
or
loope
lahf
dec
inc
add
inc
mov
mov
mov
ljmp
pop
sub
ret
or
push
paddd
fsubrs
lds
mov
insl
pop
xchg
jmp
inc
stc
dec
roll
cmp
add
inc
inc
cmp
loopne
sbb
and
xor
cmp
fcmove
ss
shrl
div
mov
shrl
sahf
jmp
mov
sarl
lret
or
sbb
push
call
add
ficomps
and
repnz
dec
add
shrl
sti
mov
or
leave
into
adc
add
out
xchg
push
mov
xorl
and
movsb
mull
test
je
xchg
cmc
sbb
sbb
inc
inc
out
test
int
mov
js
push
cmovns
fwait
aas
sub
add
repnz
stos
push
loop
decl
and
cli
add
into
fs
dec
push
mov
pop
jbe
mov
xor
dec
xchg
fisttpll
jl
ss
push
scas
std
or
cmp
out
arpl
add
pushf
aam
pop
pop
es
xor
jg
ljmp
mov
add
pop
aas
pop
sbb
jp
mov
dec
scas
gs
pop
les
inc
test
mov
js
addb
pusha
adc
xchg
loope
jle
sbb
mov
and
fmull
pop
lret
dec
lea
sub
push
daa
mov
lods
fcmovbe
push
sub
call
xchg
rorb
xchg
cmp
mov
cmp
pop
add
jbe
clc
inc
sbb
xor
pop
andb
xor
push
out
xor
or
sbb
jb
add
or
push
lea
push
push
push
push
sub
cli
sarl
jbe
jmp
sti
cs
pop
aas
int3
push
or
xor
pop
scas
dec
and
jb
dec
xor
cmp
push
fstl
push
inc
lods
xchg
or
outsl
mull
xchg
cmp
mov
push
cmc
xchg
pop
data16
addl
je
push
rcll
add
shrb
xchg
adc
lret
mov
hlt
ret
insl
add
sub
adc
dec
add
lret
aas
mov
push
jle
add
cmp
xor
inc
pop
jmp
aaa
adc
or
or
inc
adc
inc
jmp
sahf
mov
call
inc
xchg
and
push
dec
loop
add
sub
dec
scas
sub
sbb
imull
leave
inc
cld
or
shl
add
insb
push
movsb
imul
cmp
xchg
xor
neg
mov
out
xor
sub
pusha
cmp
aam
sahf
or
out
add
and
movsl
cmp
dec
int
adc
mov
enter
aam
adc
adc
mull
mov
rcll
mov
dec
loopne
cmp
rorl
pop
xor
add
add
xchg
jecxz
stos
adcb
movsl
lock
cmpl
mov
adc
jge
pusha
add
outsl
lock
push
push
shrl
mov
incl
shrl
adc
aam
ja
sti
dec
loop
cmp
sbb
cmp
xor
repnz
add
lcall
call
xchg
ret
shlb
cmpsb
or
andl
sbb
mov
aas
test
aam
loopne
stos
popa
cmp
loop
js
std
dec
into
pusha
mov
dec
jp
cmpsl
fadds
call
mov
adc
add
dec
shll
xchg
iret
loope
pop
mov
in
cmp
jmp
ret
dec
adc
cwtl
inc
xor
arpl
jo
sbb
pop
into
or
sbb
add
inc
add
cwtl
or
out
std
xchg
xlat
adc
cwtl
orl
sub
into
and
decb
adc
ja
pop
cmp
add
loope
dec
out
sub
or
adcl
xchg
test
lock
aas
stos
addr16
inc
add
je
jne
or
fimuls
push
lcall
mov
jge
sub
iret
inc
dec
push
inc
js
sub
idiv
and
push
fcoml
adc
or
cltd
sub
mov
xchg
or
int3
sub
sbb
sbb
jne
mov
or
jg
aas
or
insb
jae
and
jne
adc
jecxz
cmpsl
xor
shr
in
test
and
test
fucomp
add
xor
stc
ret
adc
jp
mov
fmuls
test
and
push
mov
jge
or
int
loop
sub
imul
jae
jo
in
mov
daa
xor
and
mov
push
jg
das
flds
or
or
lock
xchg
daa
push
mov
sbb
rclb
push
jne
mov
fidivl
xchg
loopne,pt
shl
hlt
les
test
push
jo
popa
in
and
stos
push
cmpsl
fs
shr
mov
adc
scas
imul
ret
roll
out
aaa
leave
les
in
sub
push
mov
xor
or
mov
fbld
pusha
jmp
sub
lcall
cmp
and
aaa
mov
flds
push
and
dec
add
jecxz
xor
mov
jne
fs
dec
push
out
mov
loope
test
jecxz
les
scas
inc
mov
mov
ljmp
or
fists
sbb
add
fldenv
je
aaa
es
rorl
rclb
xor
xchg
rcrb
jbe
shll
add
cmc
clc
cmc
jo
push
inc
add
cmc
push
and
hlt
inc
movsl
pop
call
or
mov
and
and
data16
jae
lods
inc
addl
sar
and
pop
enter
loopne
sub
and
push
lret
dec
sbb
dec
sarb
aaa
es
sbb
sub
dec
adcl
and
loop
add
pushf
dec
or
ljmp
jo
clc
lock
add
cld
ret
jge
pop
std
hlt
stos
shrl
hlt
mov
arpl
mov
and
push
flds
jnp
jg
ret
out
cli
negb
aad
loope
movsb
divl
iret
push
adc
adc
add
loopne
mov
xor
mov
sbb
data16
sbb
rorb
negb
xor
testl
mov
les
test
call
sbb
outsb
lret
daa
test
aas
sub
xor
cwtl
xor
rorl
or
cmc
xchg
push
pop
cmp
jae
and
popa
sbb
and
inc
adc
je
lret
cli
fwait
loopne
sbbl
inc
lcall
push
add
ret
pusha
xchg
sub
xor
adc
loopne
test
inc
ret
lea
xor
scas
lea
or
sub
jecxz
dec
sti
sub
add
add
inc
daa
repnz
inc
and
stc
ret
cmp
je
pop
add
pop
out
sbb
fistps
pop
cs
add
call
pusha
callw
icebp
scas
add
add
int
scas
loope
pop
mov
xchg
lea
or
ja
lret
mov
imul
xchg
sbbb
or
test
pop
mov
or
ja
cmp
xlat
fistpll
and
mov
add
movsb
xor
xor
add
outsl
push
test
xchg
sbb
outsb
loopne
mov
aam
sbb
loopne,pt
mov
ss
sbb
sbb
inc
push
arpl
call
and
pop
lods
out
ret
jle
popf
icebp
cmp
adc
addr16
out
movb
push
sub
stc
jbe
push
mov
inc
sbb
jl
je
aas
cmp
xor
xor
sub
push
adc
loope
js
add
clc
cmp
into
jmp
and
pop
daa
insl
mov
dec
inc
jns
pop
or
xor
xor
lahf
les
adc
inc
xchg
loopne
mov
lods
jmp
push
jno
fs
out
jo
and
inc
mov
popf
add
ss
sub
movhps
lock
lcall
cs
imulb
repnz
or
adc
and
lods
roll
cmp
insb
dec
aad
and
les
lret
inc
std
mov
jb
dec
call
ss
mov
mov
aaa
jae
testl
jl
test
mov
inc
out
xchg
add
cld
mov
mov
dec
popf
dec
mov
lcall
xor
popa
nop
mov
rclb
cmp
inc
sbb
cmp
mov
add
es
adc
jnp
mov
cmp
in
and
cli
pusha
in
dec
or
sub
inc
add
es
inc
dec
or
aam
out
sbb
shlb
mov
pop
mov
movsb
pop
cli
push
cmp
xor
sub
stc
shlb
adc
xor
sub
and
fadds
int
pop
addr16
mov
ret
add
fs
inc
les
xchg
jnp
outsl
ss
clc
int3
pop
ret
test
push
enter
xchg
lods
data16
jnp
in
xor
inc
mov
int3
xchg
push
sbb
les
push
adc
jmp
inc
popf
push
or
data16
jle
pop
sub
adc
stos
jae
test
and
cmp
insb
shr
sbb
mov
test
cmc
daa
test
frstor
jbe
xor
mov
fiaddl
cmc
jno
je
cmp
mov
mov
mov
push
mov
sbb
sbb
test
and
xchg
sub
jns
loop
ljmp
cmpsb
add
xor
jnp
aas
push
and
ficoms
mov
jp
scas
loop
jo
push
stos
push
mov
adc
inc
pop
arpl
pop
loop
jo
jb
pop
scas
cli
jnp
or
int3
loopne
test
pop
pushf
je
fsubr
sub
rolb
call
ret
in
addb
fcompl
aad
pop
jecxz
arpl
sbb
aam
les
cmp
stc
cmp
fbstp
les
jb
lret
aad
mov
iret
test
fisubs
loopne
lret
and
sbb
sarb
jmp
sbb
pop
xor
mov
cmpsl
popa
jne
cmp
stos
fdivp
frstpm(287
inc
and
orl
aam
shll
jg
imul
dec
pusha
ficompl
jmp
enter
addl
mov
rorl
shlb
inc
scas
xlat
xchg
or
std
call
add
and
and
lcall
jbe,pt
nop
pop
xchg
lods
push
insb
dec
call
xor
xchg
lods
sub
icebp
jo
pop
push
mov
jne
sbb
test
mov
jmp
cmp
pop
loop
leave
ret
cmpsb
stc
and
ss
ljmp
incb
or
popf
shrl
pop
and
inc
and
adc
cmpsb
add
into
adc
clc
incl
fucomi
xorb
out
inc
nop
add
subb
inc
lahf
or
std
pushl
mov
adc
daa
es
test
shlb
inc
mov
aaa
sbb
xchg
lods
xor
pop
enter
ljmp
xor
imul
jle
cmp
ret
addb
push
xchg
adc
hlt
jg
push
bound
inc
fwait
test
sub
sbb
cmp
push
insb
ret
test
push
add
icebp
jb
jo
mov
add
shll
popl
out
jbe
std
orb
push
lock
xchg
jae
test
cmp
out
mov
movb
add
or
subb
jle
dec
and
add
dec
dec
jecxz
mov
sub
pop
jle
xorb
fisubs
adcl
fcompl
out
cli
push
jge
cmp
xchg
mov
je
cmp
pop
in
outsl
push
or
iret
stc
addl
out
mov
ud0
outsb
dec
cmp
notb
aam
outsl
addr16
dec
in
fcom
pushf
sub
pushl
lock
cld
jle
std
sbb
fsubr
ffreep
sbb
sbb
fs
add
pop
insl
in
mov
inc
sarl
es
adc
daa
data16
aad
aaa
pusha
mov
jg
jl
xor
and
jl
add
push
decb
sar
mov
cmp
cld
sub
fists
loop
in
adc
pop
pop
pop
das
mov
aam
mov
ss
shll
push
mov
xchg
pop
dec
mov
cld
push
in
xchg
sub
push
adc
cld
jg
pop
scas
adc
rcr
movsl
pop
push
inc
mov
pop
inc
inc
sbb
dec
or
dec
loopne
pop
pop
sahf
add
xor
aaa
fs
cld
mov
in
pop
push
mov
aaa
pop
pusha
adcb
or
loope
testl
push
push
inc
and
mov
mov
add
cmp
shrl
or
dec
rclb
dec
rorb
mov
cli
push
aam
rcl
xchg
pushf
xor
push
sub
lcall
mov
xor
fmull
inc
out
and
lea
xchg
fmull
adc
hlt
lods
xchg
clc
gs
inc
scas
outsl
sbb
cli
cmpsl
fld1
xchg
jmp
lret
pop
mov
or
pop
aaa
inc
sub
xchg
pusha
inc
xlat
je
mov
rcrb
fdivp
inc
fsubrs
rcrb
iret
dec
in
cmpsb
cmp
inc
dec
jnp
fsubr
add
xor
insb
fcomps
add
shrl
xchg
dec
int3
jne
mov
add
mov
jo
pop
push
mov
shrl
adc
adc
idivb
or
adc
in
pushf
in
inc
neg
and
outsl
lret
sbb
add
fdivrl
jmp
out
sbb
lret
std
pop
pop
sti
jg
pop
or
addb
sub
mov
sti
inc
pop
cmp
out
cmp
inc
jbe
jmp
clc
and
and
and
and
inc
lock
sbb
ficompl
es
sbb
sbb
icebp
aad
sbb
jo
or
and
xlat
pop
or
cld
push
push
mov
sub
add
dec
int
lods
mov
js
push
sahf
repnz
xor
lcall
sub
add
ljmp
mov
es
mov
adc
adc
jp
outsl
mov
or
sub
fcomps
sbb
orb
inc
in
mov
roll
ss
mov
mov
bound
testb
mov
adc
inc
insb
outsl
mov
sbb
push
and
adc
ret
add
pop
push
adc
cmp
pop
jbe
cwtl
bound
inc
mov
or
jg
rcrb
lcall
jl
test
fnstcw
ljmp
mov
lock
ja
adc
ljmp
shrl
mov
pop
std
mov
adc
cmp
add
pop
loop
lea
leave
xchg
shrl
mov
add
pusha
andl
cmc
fidivrl
fisttpl
divb
jl
sbb
adc
mov
or
pop
jle
outsl
scas
pop
shll
inc
sbb
int
jnp
mov
pushl
mov
repz
xor
inc
das
mov
inc
jge
and
xchg
subl
loopne
movsl
or
adc
jmp
mov
and
nop
push
hlt
sbb
xchg
xor
lcall
sub
insl
add
ret
pop
ror
sub
lods
cmc
mov
lahf
sub
scas
fcmovnu
decb
test
add
mov
dec
faddl
jp
jl
stos
adc
cwtl
mov
roll
stos
push
sti
cwtl
or
data16
roll
cld
cwtl
push
pop
clc
xchg
pop
sti
sbb
nop
mov
das
add
sub
rcll
lea
sub
scas
adc
test
movsb
mov
add
decl
in
jae
add
push
lret
adc
sbb
sbb
inc
add
imul
sbb
arpl
out
add
loop
inc
ret
pop
mov
pop
ljmp
xchg
sub
jmp
aam
fsubrl
neg
jg
lahf
ljmp
add
repnz
inc
mov
ja
push
ljmp
xchg
mov
mov
inc
add
adc
inc
pop
insl
cmpl
mov
ja
sub
shlb
inc
mov
jae
dec
and
enter
mov
jae
sbb
add
lret
cmpsb
push
lods
push
jbe,pn
or
fs
mov
jmp
cli
sbb
mov
jo
mov
sub
push
daa
add
mov
gs
or
scas
into
adc
clc
xor
pop
clc
loopne
xor
fsubl
scas
dec
add
add
jae
or
and
pop
or
pop
ljmp
dec
sub
enter
push
xchg
push
ret
test
mov
add
cld
fcmovb
and
mulb
outsb
xor
aam
jle,pn
enter
pusha
clc
fimull
push
lods
add
cmpsb
fiadds
jnp
cli
fs
in
adc
inc
test
and
mov
dec
addl
add
ljmp
mov
push
push
ja
and
clc
pop
jbe
jmp
mov
mov
mov
addb
mov
push
mov
cwtl
add
push
mov
add
lahf
or
or
ja
rolb
movzwl
sbb
pusha
sub
lea
push
shlb
mov
js
fbstp
pop
or
inc
dec
inc
and
xchg
clc
int
add
push
test
ja
add
test
mov
jno
sbb
mov
pusha
xchg
adc
add
stos
dec
fnsave
add
pop
mov
fbld
outsl
and
add
and
in
out
jbe
push
lcall
adc
sbb
dec
pushf
aaa
or
jbe
push
mov
dec
sub
repz
cwtl
lock
jecxz
push
aas
faddl
jb
shr
jle
mov
out
aaa
notb
mov
adc
rclb
xor
stos
fisubl
and
xchg
test
cmp
and
cmp
clc
mov
or
popf
push
or
insb
inc
jecxz
sbb
out
or
fstps
mov
ret
fmull
movsb
jle
hlt
inc
mov
xlat
mov
clc
imul
in
jmp
js
ret
xor
cmp
pop
call
ljmp
fidivl
lcall
add
fimull
ljmp
jbe
xlat
inc
add
jnp
jmp
daa
hlt
les
mov
or
icebp
cmpsb
pop
and
push
ret
and
mov
std
cs
lods
jb
jne
popf
sahf
cld
and
add
stos
jbe
rolb
mov
rcrl
push
cmp
add
jne
xchg
inc
pop
mov
int3
sti
arpl
test
out
xor
and
jp
xlat
pushf
outsb
aad
xor
out
ljmp
rcll
dec
insb
mov
bound
pop
jbe
mov
adc
dec
sahf
mov
sbb
cmp
mov
xchg
sbb
mov
in
data16
mov
call
mov
add
add
dec
movsb
mov
jmp
xchg
and
sti
sub
in
in
add
add
arpl
ja
aas
xchg
push
sbb
or
cwtl
pop
je
aaa
fadd
popf
fisttpl
movsl
iret
xchg
mov
cmp
mov
insb
sbb
dec
minps
lgs
pop
std
adc
icebp
decl
scas
nop
adc
lods
jle
jb
add
jle
outsl
insl
decb
and
cmpsb
sub
xorl
mov
addb
lods
repnz
pushf
push
jp
ljmp
sub
or
insl
mov
mov
icebp
fucomp
lods
fsubr
bound
fistpll
sarw
sti
out
test
adc
sbb
lds
popf
xchg
xchg
add
orl
jp
jp
das
bound
into
fsts
out
push
stos
mov
dec
dec
shl
daa
xor
xlat
mov
push
xchg
fnstenv
adc
adc
mov
xchg
imul
hlt
and
lods
mov
push
mov
call
cld
in
dec
mov
roll
jp
push
pop
sub
gs
push
sub
aad
rorl
mov
mov
ss
sti
and
sbb
mov
out
into
in
inc
mov
arpl
test
in
push
or
in
adc
dec
popf
push
cmp
pop
rcr
sbb
xchg
jo
cmp
pop
jl
or
add
mov
add
jb
mov
out
add
push
popl
mov
push
mov
mov
mov
pop
jae
in
add
les
imul
pop
sbb
in
mov
push
inc
nop
js
enter
das
popa
mov
dec
dec
add
or
mov
movl
out
mov
in
ljmp
cli
insl
sti
daa
leavew
sbb
push
xor
lods
fistl
es
add
ljmp
mov
fldt
movsb
jge
xchg
jg
pop
sub
std
js
ret
and
rol
jmp
lods
test
and
lcall
and
mov
ljmp
imul
xor
add
outsb
enter
mov
andb
jmp
mov
sbb
xor
jg
mov
fs
loop
mov
loope
pusha
adc
mov
scas
cmp
std
sbb
insb
mov
nop
lcall
mov
fisubrl
inc
push
and
mov
or
outsl
inc
or
push
push
adc
or
cmpl
jle
adc
or
insb
adc
inc
sub
std
xchg
adc
push
and
negb
dec
ss
fwait
rorl
adc
mov
xchg
pop
insl
jl
lds
or
aas
repz
adc
pop
outsb
pushf
adc
push
andl
daa
cmpsb
mov
sub
in
out
scas
push
rorb
das
stos
push
fldt
mov
sahf
stos
mov
or
orb
dec
push
add
jg
test
mov
js
in
mov
adc
mov
mov
mov
mov
xor
out
lods
lcall
incl
into
mov
add
jb
test
incl
cld
call
sub
ja
movsl
cli
cmp
daa
xchg
lods
pop
scas
pop
adc
push
loop
pushf
pushf
add
push
inc
xchg
pop
lret
adc
mov
xor
icebp
sub
clc
movsb
sbb
xchg
inc
ljmp
lods
ss
xor
out
shlb
push
in
push
cmp
cmp
lahf
inc
or
sbb
xchg
dec
push
ja
push
fsubl
addl
adcb
push
mov
scas
mov
jnp
daa
xchg
popf
cmpsb
lahf
jmp
mov
sub
xor
mov
test
push
dec
push
loop
mov
push
xor
add
jp
adc
jl
and
ss
fcomip
jne
mov
clc
mov
sub
jg
jno
fnsave
pop
sbb
jns
xchg
sub
fildll
aaa
js
xchg
loope
sbb
push
push
pop
fnstenv
ja
das
stos
add
pop
dec
clc
repnz
jnp
subb
arpl
subl
loop
mov
dec
push
jae
inc
das
pop
mov
sahf
push
cmc
mov
clc
stos
xchg
cmp
fldl
jmp
adc
mov
mov
pop
daa
sub
nop
sbb
pop
pop
dec
xchg
lret
pop
das
cmp
sub
dec
adc
pop
pop
outsl
pop
push
pusha
pusha
movsb
sar
pop
push
call
das
cmc
xchg
and
mov
dec
sbb
loopne
cwtl
fadds
or
inc
dec
xchg
or
adc
xorl
aad
imul
xor
test
sub
inc
pop
inc
mov
mov
xchg
push
dec
inc
pop
mov
jb
mov
testb
lods
movsl
ljmp
test
aad
icebp
daa
cli
fmulp
sbb
sbb
std
testb
mov
es
mov
jmp
jg
cs
and
lcall
pop
xchg
call
fisttps
push
test
inc
push
leave
push
imul
inc
and
decl
lea
sarb
fdivrs
test
outsb
push
xor
js
fs
jle
shl
cmp
or
mov
out
push
arpl
pop
inc
movsl
lds
popf
mulb
fisubs
cwtl
notb
add
add
jg
inc
mov
mov
xchg
mov
shll
js
dec
and
nop
push
int3
sbb
push
test
sbb
sub
aam
lock
mov
mov
insl
fucom
insb
imul
cltd
or
cwtl
or
mov
test
inc
sub
je
ret
or
add
cmpb
inc
pushf
jle
fs
or
sbb
jbe
sub
out
dec
sbb
push
or
loopne
incl
or
push
or
mov
in
push
sbb
cmp
pop
cmp
jb
je
lods
loope
insl
mov
sbb
push
pop
pop
js
xor
test
sub
fmuls
fdiv
sbb
inc
sbb
loopne
xor
jl
dec
or
mov
jecxz
jmp
jg
insl
add
mov
push
sub
pushf
inc
mov
push
pop
or
cli
rolb
xchg
test
shlb
mov
sub
jl
test
mov
adc
or
and
cld
inc
roll
je
jnp
out
mov
mov
and
fwait
popa
hlt
cmpsb
js
jp
lds
test
or
push
add
add
je
xchg
cltd
push
ja
scas
das
push
ljmp
pop
dec
add
inc
sbb
add
out
shll
dec
pop
lcall
cmpsb
ret
je
fs
adc
mov
test
and
push
inc
cmpsb
cmpsl
xlat
js
shl
cmp
xchg
test
jecxz
xchg
and
js
sbbb
and
lea
pop
aad
jle
sub
add
and
mov
ja
pop
push
push
xor
mov
push
lock
sahf
iret
xchg
or
mov
aaa
sbb
jbe
jbe
pop
mov
xor
add
lds
shll
outsb
lahf
xchg
lods
inc
mov
mov
mov
icebp
movsl
fisttps
orb
insb
fwait
outsb
fwait
and
xor
xor
pop
jns
lea
sarb
popa
xor
push
insl
stos
or
mov
pop
push
pop
addr16
mov
aam
mov
rclb
pop
outsb
push
ficomps
sarb
sbb
repz
fistpll
sub
call
imul
sbbl
jle
stos
outsb
in
dec
cmc
inc
mov
inc
stos
push
daa
notb
and
add
mov
push
sub
icebp
arpl
add
inc
xor
stc
rol
and
fistpll
lcall
lods
orb
or
dec
out
cmpb
pushl
xchg
jle
xchg
push
test
repnz
xchg
pop
pop
and
inc
psadbw
hlt
out
fnstcw
cltd
adc
ss
and
mov
lret
scas
inc
mov
push
add
push
loopne
ficomps
int3
jg
mov
sar
outsl
pusha
popa
mov
pop
add
pop
adc
lret
pop
adc
or
lds
adc
fdivs
and
repnz
mov
and
in
movsl
mov
iret
imul
fcmovb
xchg
shrb
xlat
arpl
mov
dec
add
incb
aas
mov
dec
adc
rclb
fdivrp
mov
pop
movsb
rclb
cld
sbb
lock
nop
mov
add
push
cli
testl
popa
ds
jle
fists
fnstsw
dec
jp
inc
push
pop
sarl
add
outsb
scas
mov
and
ja
mov
add
pop
add
in
decl
rcrb
popf
mov
add
or
test
jmp
inc
or
jg
inc
icebp
mov
mov
inc
leave
loopne
in
outsb
movsb
push
mov
inc
mov
pop
outsl
and
repz
or
push
xchg
push
fwait
adc
push
xor
cmpsl
jge
sti
cmpsl
ficomps
repz
into
xchg
sahf
shlb
clc
or
and
lods
mov
cmp
lods
fs
ljmp
mov
ljmp
xchg
push
pop
out
sub
mov
roll
sub
push
stos
test
adc
and
sbb
out
mov
mov
cld
jns
negl
push
mov
rorl
clc
lcall
js
les
cmpsb
mov
fcompl
mov
enter
dec
push
adc
jg
ja
and
push
xor
test
mov
add
add
fwait
add
shrb
imul
pop
fsubs
fdivs
mov
adcb
pop
nop
rolb
and
je
bound
outsl
insb
insl
icebp
cmpsb
out
repz
adc
xchg
xchg
mov
lods
les
or
adc
loop
pop
jg
rcl
mov
xchg
cmp
loope
pop
xor
mov
loopne
int3
jmp
and
mov
cli
xchg
stos
adc
jge
jnp
jb
jg
jecxz
push
rorb
dec
es
rclb
loop
jg
adc
cld
incb
hlt
orl
push
fldt
sar
int3
dec
xchg
or
jl
mov
ficomps
jb
adc
into
in
dec
es
jge
jg
add
xor
xchg
ja
fidivrl
cld
popa
lods
mov
mov
pop
mov
repnz
ja
inc
dec
idiv
or
jge
imul
loopne
adc
das
mov
das
or
orl
xorb
add
out
cmpsb
out
inc
xor
mov
pop
std
mov
fstpl
aad
adc
mov
adc
dec
rclb
push
adc
xchg
faddl
dec
rcr
push
data16
add
das
mov
cmc
cmp
fisubrl
std
ret
adc
fldt
mov
das
cmp
push
call
xchg
push
pop
push
imul
push
lods
lea
mov
enter
loopne
icebp
mov
sub
lods
sbb
push
push
pop
andb
jno
inc
ds
aad
jle
dec
mov
fcomps
adc
sub
add
pop
inc
mov
pop
outsl
mov
add
xor
mov
add
orb
mov
test
mov
adc
mov
push
fidivs
pop
test
orb
pushf
mov
std
add
rolb
js
xor
cwtl
mov
fwait
rorl
sbb
mov
rolb
dec
scas
push
or
pop
out
push
scas
aad
leave
mov
lods
mov
mov
iret
mov
stc
dec
es
clc
mov
ficompl
add
lahf
xchg
adc
repnz
cmp
fwait
or
enter
loope
out
cmp
or
sub
adc
cltd
adc
push
push
scas
push
mov
or
pop
pop
ljmp
jno
mov
imul
or
loope
fcoms
inc
int3
xchg
mov
scas
sub
jg
mulb
mov
dec
imull
sub
lds
outsb
hlt
test
scas
dec
les
mov
pop
or
and
push
lock
mov
movsl
pop
or
push
fiadds
and
inc
ds
push
cmc
inc
aas
dec
sbb
pop
fdivs
add
add
ss
push
push
push
pop
adc
add
push
mov
pop
inc
jp
pop
outsb
rorl
push
and
mov
enter
rolb
leave
pop
cmp
mov
ja
and
push
mov
jmp
test
or
into
adcb
adc
mov
push
dec
mov
sbb
or
jo
repz
push
hlt
jnp
mov
sub
movsb
leave
sub
dec
imul
mov
inc
sbb
out
stos
xor
mov
jg
jmp
loop
xor
adc
mov
mov
jo
popa
iret
inc
sbb
dec
mov
xchg
loope
mov
div
cmp
stos
outsl
out
call
mov
xchg
add
or
jno
out
or
clc
xchg
gs
popa
jnp
into
addb
inc
inc
sbb
mov
push
jne
push
icebp
or
fildll
xchg
push
or
sbbb
cmp
stos
pop
dec
pop
mov
xchg
jnp
add
jecxz
dec
lods
mov
push
shrl
mov
and
push
cmp
dec
pop
jb
scas
fidivrl
mov
mov
dec
add
inc
testl
icebp
insl
out
negl
xchg
and
out
mov
aad
pusha
mov
jnp
mov
cmp
inc
sahf
xchg
inc
pop
jecxz
sub
pop
mov
ret
or
cmp
test
pop
fisubl
shlb
cmp
jecxz
inc
adc
lea
sbb
lahf
insb
inc
andb
mov
cmpsb
cs
cmpsb
roll
int
and
ret
mov
jg
pusha
cmp
insl
lock
dec
ds
inc
shlb
insb
sub
xchg
fsubrp
addr16
push
pop
lea
xchg
adc
sbb
pushw
mov
sbb
dec
pop
push
fildl
scas
sbb
mov
jbe
pop
test
add
or
clc
jp
mov
les
mov
xchg
pop
fnstcw
jne
or
or
in
pop
mov
xor
fcompl
xchg
cmpsl
or
cltd
lods
lcall
insl
xchg
fwait
out
adc
jle
stos
inc
mov
push
dec
adc
stos
cmp
jg
cltd
fidivs
xlat
xchg
dec
in
test
lea
cmc
cmp
xchg
or
mov
leave
cli
push
mov
adc
add
mov
lahf
sbb
mov
sub
and
or
xchg
sub
xor
push
andb
clc
test
cli
fadd
add
inc
push
push
sub
out
roll
cmp
mov
aaa
lods
lock
mov
mov
xchg
inc
lods
mov
roll
pop
cmp
lods
sub
sub
push
sbb
sub
add
inc
clc
andl
xor
pop
lock
fldenv
ret
lret
sbb
fucomp
add
mov
das
orb
push
sbb
and
in
lret
push
ljmp
fstpt
mov
xchg
adc
jns
add
icebp
aam
dec
jl
loopne
loopne
aad
and
loopne
cld
jle
mov
adc
sub
sbb
es
dec
and
mov
pop
sarl
mov
mov
xchg
movsl
pop
addb
xchg
push
and
add
cld
and
adc
mov
loopne
pop
push
adc
fmuls
cld
add
cld
pop
neg
sbb
cmp
loopne
push
icebp
cmp
adc
push
xor
inc
loop
mov
mov
mov
lds
mov
push
pop
out
mov
jp
and
xor
fs
cmp
pop
xchg
insl
xchg
dec
cs
cli
fistpll
pop
rcrb
mov
bound
cltd
adc
mov
jle
mov
call
cmc
adc
iret
rcl
movsl
rolb
mov
gs
lods
decl
inc
mov
incl
cmp
flds
leave
mov
insl
std
movsl
inc
xor
rolb
daa
pop
sub
dec
int3
push
inc
cld
lds
cwtl
cmp
test
bound
pop
cmp
jg
outsl
pop
outsb
xor
sub
mov
add
fsubrl
fcmovnu
or
mov
xchg
out
shrl
fmuls
fsts
shll
cmp
push
js
das
mov
cmp
imul
add
and
sbb
jmp
cmp
stos
lcall
das
mov
add
xor
stos
decl
ljmp
lods
mov
outsb
ss
imul
loop
test
mov
mov
xchg
das
loopne
mov
test
adcl
and
add
rolb
movsl
es
inc
fldcw
pop
test
sti
idivl
out
pop
or
sbb
and
and
sbb
dec
sbb
adc
mov
and
cld
add
clc
mov
dec
enter
sbb
aad
pop
sub
adc
xchg
pop
ss
loope
add
add
fmuls
ljmp
sub
les
xchg
mov
gs
addr16
push
pop
jg
pop
sub
mov
mov
daa
test
pop
repnz
aas
lods
push
sbbl
xchg
in
xchg
hlt
mov
pusha
rolb
fstpl
pop
test
icebp
xchg
mov
jg
and
inc
and
or
nop
orl
dec
mov
mov
sub
inc
rclb
sub
xchg
aad
test
idivl
jge
repnz
fsubl
dec
mov
dec
in
ljmp
fs
or
adc
ljmp
dec
adc
pushf
notb
sbb
mov
fistps
or
stc
les
lods
or
and
add
adc
fcmovnu
loopne
repz
mov
lds
arpl
dec
ss
stc
push
jbe
mov
xor
xor
lret
cmc
cli
mov
pop
add
add
inc
sbb
dec
frstor
mov
xchg
arpl
lret
shll
ret
movb
mov
aad
mov
jg
in
sub
push
popa
fidivrs
pop
sbb
xchg
push
movsb
dec
and
pop
aaa
xor
xchg
rorl
rorb
and
fldt
pushf
push
adc
insb
ja
hlt
jp
mov
aaa
pop
movsb
jne
inc
xchg
outsl
cmp
add
shrb
xchg
pop
push
push
sbb
jle
cmp
push
mov
outsl
ss
push
cld
push
mov
leave
inc
rorl
xadd
xchg
ret
addb
imul
out
test
cmp
push
push
test
push
test
lods
mov
out
xchg
inc
mov
jns
push
jge
mov
jp
shll
and
mov
fcoms
jl
xchg
mov
mov
filds
or
mov
pop
mov
mov
fmull
push
lret
rcr
iret
int
addr16
push
aaa
int
adc
loopne
xor
add
push
pushf
enter
decl
sub
mov
mov
inc
fcompl
cmp
insb
jp
ds
push
jo
push
cmp
inc
iret
mov
push
jae
in
push
lcall
adc
test
fdiv
xchg
push
scas
cwtl
dec
jbe
int
adc
insl
sub
les
pop
and
mov
scas
inc
or
addr16
aas
sti
addr16
pop
mov
mov
lea
jg
or
fcoms
std
mov
sbb
and
cs
fcmovbe
test
movsl
and
insb
dec
inc
jb
xchg
imulb
aas
imul
inc
mov
outsl
les
mov
pushl
out
outsb
fbstp
pop
sbb
lods
add
shr
or
mov
xchg
mov
mov
imul
jge
test
pop
test
xchg
iret
out
rcrl
xchg
and
adc
xchg
push
xor
pop
cmp
mov
sarb
push
jl
insl
insl
sti
jbe
shlb
or
mov
shrl
and
jge
dec
fdivrs
and
jmp
lcall
cmp
cld
add
int
mov
adc
add
push
push
push
mov
test
incl
in
jmp
adc
lods
cli
fdivrp
fnsave
jno
sub
mov
xchg
jecxz
shrl
xchg
sub
mov
mov
sub
or
cs
pop
mov
scas
and
lahf
or
push
sub
arpl
mov
loope
int
and
mov
aam
or
mov
push
push
repz
les
fstp
adc
adc
add
adc
adc
inc
mov
pop
roll
dec
not
lods
repnz
sbb
fsubl
or
incb
and
mov
and
add
adc
sub
or
dec
inc
push
jg
aam
sbb
cld
xor
pusha
inc
outsb
pop
pop
mov
xchg
dec
add
cmpsb
push
repz
adc
inc
arpl
add
sub
in
dec
subl
cmp
adc
and
dec
icebp
mov
mov
or
and
or
mov
add
mov
test
sub
xor
loop
jno
mov
push
in
fsts
mov
mov
call
push
out
mov
inc
pop
or
jnp
lock
hlt
jge
jns
test
jae
inc
cmp
rclb
and
push
mov
lea
push
push
sub
ja
inc
jnp
xor
out
xor
sbb
iret
sbb
mov
dec
pop
cmp
sbb
ret
lock
out
xchg
cmp
push
lds
or
xchg
xor
ffreep
out
cmp
and
out
add
js
pop
popa
bound
iret
and
xor
mov
daa
dec
inc
mov
sbb
sbb
adc
pop
sub
daa
dec
cltd
and
faddp
rolb
inc
ud2
lea
jg
sub
out
icebp
mov
xor
sbb
xor
dec
sub
mov
xchg
inc
pushf
jmp
popf
ret
in
gs
jle
or
out
data16
push
jb
idiv
push
call
push
inc
daa
das
addl
insl
inc
test
adc
insl
ja
jo
adc
cmpsb
xchg
dec
sub
dec
movsl
xchg
xchg
pop
fidivrl
push
in
shll
mov
mov
aaa
add
xchg
aad
es
mov
aad
shl
xor
sub
jl
cmp
shr
scas
xor
outsl
adc
ret
dec
xchg
mov
add
out
shrl
je
repz
mov
mov
mov
mov
mov
lahf
in
sub
xchg
and
insl
call
pop
cmp
adc
outsl
fucomip
mov
popf
cmpsl
movsl
adc
xor
icebp
or
jno
pop
leave
clc
shlb
or
in
cmp
bnd
sti
loop
or
ds
sti
inc
mov
xchg
cltd
xchg
mov
pop
in
mov
mov
les
and
in
das
les
lods
dec
wbinvd
add
cmp
cs
fwait
sub
xor
or
xchg
outsl
mov
dec
orl
and
outsl
sub
js
or
mov
sbb
xchg
and
pop
cmpsl
int
add
int
or
sbb
fstl
lds
mov
or
mov
pop
mov
mov
rorl
sbb
dec
movsb
mov
lods
or
or
pop
mov
sbb
aam
pop
add
inc
or
aad
or
push
aam
push
adc
test
incb
and
pop
mov
shrb
add
sbb
push
into
sbb
add
mov
aas
inc
mov
inc
push
xchg
les
fldl
popa
pop
fdivrp
aaa
loopne
xor
add
data16
cld
lds
enter
aad
test
xor
nop
dec
in
inc
mov
je
repz
sbb
fcoml
pop
js
push
es
out
lods
jg
test
cmp
int3
jg
dec
inc
mov
jmp
jmp
addb
sub
mov
scas
push
push
pop
fistps
xchg
push
rorb
and
push
cmc
push
dec
or
lea
fidivrl
sbb
cld
lret
repz
push
outsl
jne
andb
lcall
mov
insb
jp
fwait
ss
in
jg
dec
lock
cltd
stc
mov
pop
cmp
inc
sub
add
lret
addl
mov
sbb
mov
clc
outsb
push
dec
andb
mov
xlat
sti
lock
sbb
mov
sub
inc
gs
lea
xlat
inc
mov
ljmp
add
outsb
fildl
adc
push
sbb
aaa
cld
stos
fisubl
mov
cmp
or
rorb
repz
cltd
mov
ffreep
jmp
sbb
aaa
pusha
fnstsw
scas
pushf
adc
jb
iret
lret
ja
outsb
jg
cmp
adc
xchg
mov
ja
dec
mov
cmpsb
jecxz
xchg
xor
ja
clc
das
loope
test
jns
roll
cli
mov
in
xchg
xor
sar
faddl
push
enter
sbb
shll
es
adc
mulb
cmc
enter
or
std
movsb
sbb
cmp
enter
orl
mov
push
fcmovnb
insl
pop
dec
in
sti
negb
call
xchg
xor
add
outsb
insb
shl
cli
or
movsb
inc
push
repnz
pop
sbb
icebp
push
and
push
jo
cmp
mov
mov
xchg
andb
cltd
mov
pop
ja
jo
adc
sub
xlat
dec
in
pop
push
in
pop
ljmp
int
dec
fiadds
xchg
repz
fadds
dec
cmpsb
pop
push
add
pusha
jne
inc
das
add
fisttpl
and
cmpsb
push
mov
jg
in
lods
movsb
sbb
or
adc
test
and
mov
push
and
movsl
das
ss
cwtl
mov
or
shlb
jl
lods
xlat
popa
jno
mov
and
mov
fidivs
dec
ret
xorb
inc
movsl
inc
dec
pop
pop
rol
mov
imulb
sti
fisttpl
out
mov
popf
pop
aam
aaa
pop
cmp
push
xchg
fildl
jl
mov
mov
aad
in
mov
sub
xchg
mov
mov
sahf
cs
adcl
or
add
push
mov
mov
enter
outsl
std
outsl
cmpsb
mov
lcall
xorb
mov
and
mov
adc
cmp
clc
add
add
filds
clc
and
insb
ret
cltd
pop
mov
aaa
neg
and
sub
add
sub
add
inc
aaa
sub
inc
repz
xchg
sarb
loope
addb
test
dec
jg
sarl
sbb
cmp
ljmp
push
and
cmp
out
push
mov
movsb
orl
inc
mov
adc
dec
mov
adc
adc
pop
in
in
std
out
cwtl
out
add
jecxz
sbb
test
jne
mov
cmp
adc
hlt
clc
jecxz
cli
jle
gs
cmc
mov
and
insl
mov
xchg
sbb
roll
push
pop
lock
add
pop
add
xchg
mov
sub
adc
insl
adc
sub
push
jge
or
sub
fsts
sti
enter
lock
pop
xchg
dec
addl
andl
insb
sub
mov
cltd
jle
notl
pop
mov
add
and
in
loop
cmp
jo
add
les
sub
testb
mov
pop
inc
or
xor
mov
addb
sub
push
mov
jge
and
adcb
push
cwtl
and
push
adc
mov
xchg
in
repnz
out
add
mov
int3
adc
mov
or
ret
adc
push
push
jnp
pop
cmp
jl
inc
xor
ljmp
shlb
fisttpll
sbb
les
lods
dec
xor
aas
sub
ret
jge
sbb
repz
or
and
and
jecxz
xchg
push
cmpb
inc
lock
je
push
mov
mov
xlat
jecxz
adc
out
fdiv
inc
xor
nop
push
fiadds
cwtl
cmpl
movsl
dec
mov
addl
xor
adc
or
or
cmp
mov
mov
sbb
roll
lock
adc
cmpb
in
sbb
dec
aaa
gs
lods
jmp
hlt
ljmp
lcall
pushf
dec
daa
lahf
mov
adc
xor
stos
js
mov
imul
lea
pop
mov
icebp
insl
popa
inc
mov
cmp
xor
ja
jbe
daa
inc
xchg
and
scas
mov
mov
lods
addr16
xor
sbb
adc
or
or
push
dec
cld
or
pop
cli
out
mov
add
cmp
fsubrs
lods
adc
pop
out
lock
push
jl
pop
sbb
push
mov
ja
ffree
push
loope
push
sbb
xchg
push
cmp
sub
and
and
or
jl
test
xor
add
add
cltd
sub
inc
in
lods
insl
xor
push
lds
repnz
out
lea
fld
or
xor
cmpsb
cmp
dec
aad
jmp
jne
mov
xor
pusha
subb
and
movsb
cltd
or
clc
mov
push
fcomps
mov
lds
xor
test
add
cmp
fwait
sub
cmp
or
sbb
incb
mov
cmp
cli
test
cmp
inc
aaa
push
jmp
dec
shl
cs
lret
popf
adc
sub
hlt
mov
repz
mov
jp
repz
adc
test
mov
or
je
imul
inc
mov
jge
add
imul
loop,pn
pop
inc
and
xchg
cmp
fisttpll
std
push
out
jp
fisubs
dec
adc
inc
frstor
repnz
mov
dec
cltd
ljmp
add
mov
push
or
xchg
xchg
xchg
fstpt
sub
pop
out
fistpll
cmp
insl
hlt
int
imul
adc
mov
mov
lock
test
es
inc
jns
cwtl
mov
jnp
or
test
lret
test
mov
push
loope
cld
dec
pop
popa
cwtl
loopne
lcall
jno
mov
rcrl
mov
test
cld
aaa
incb
or
mov
inc
fildl
ja
jle
aas
add
pop
test
push
pop
sti
loope
fcompl
add
push
dec
inc
add
pop
inc
pop
cmp
loop
movsl
call
xor
call
in
andl
lods
cmp
out
adc
mov
sbb
cmp
loop
mov
pop
and
and
std
mov
pusha
insb
cwtl
dec
xchg
mov
cld
sub
or
ljmp
add
sarl
xchg
push
adc
push
mov
xor
xor
mov
xchg
mov
call
jo
dec
dec
inc
or
lahf
cmp
adc
xchg
test
rcrl
xor
pop
cmp
das
adc
fcomps
mov
push
cld
adc
test
mov
ljmp
mov
lcall
xchg
sahf
insl
xchg
movsl
enter
cmp
sarl
jle
lcall
das
bswap
mov
hlt
jg
lret
cld
cmp
push
fisubrs
cs
addb
dec
or
mov
add
mov
cltd
or
arpl
push
sbb
sbb
xchg
mov
dec
mov
mov
push
cmp
jo
jmp
mov
ljmp
dec
in
push
xchg
fistps
addb
int
outsl
daa
bound
sbbb
insl
push
inc
les
daa
in
rcll
sbb
stos
jg
out
js
sub
push
xor
push
push
or
cmpsb
mov
jne
fadd
cmp
sub
ret
std
mov
mov
cmp
bound
adc
andps
mov
stos
scas
jne
daa
and
add
clc
push
int3
mov
push
jg
xor
dec
mov
daa
sbb
shrl
shrl
xchg
sub
insl
mov
push
fmul
insl
test
jg
stos
xor
hlt
sahf
scas
sub
addr16
repz
fisttpl
jg
sbb
jg
mov
xchg
repz
cmp
out
jbe
outsl
outsl
lods
test
stos
stos
sbb
lret
inc
loop
outsl
in
ret
sbb
dec
rclb
mov
xor
mov
icebp
jecxz
push
xchg
xor
test
push
divb
ss
lret
jmp
mov
jge
inc
loope
lret
and
mov
inc
roll
call
rclb
shll
cmp
mov
andb
std
dec
inc
call
dec
rcr
cld
shl
pop
std
push
and
popf
fistpl
dec
mov
fisttps
pop
je
cmp
inc
push
cs
mov
mov
add
pop
int
jno
ret
aaa
js
cwtl
jge
stos
mov
pusha
sbb
cmc
mov
mov
outsl
cli
mov
and
imul
cltd
mov
and
pop
loopne
mov
shrl
add
stc
popf
out
mov
in
adc
xchg
jne
inc
hlt
sub
lret
test
clc
inc
lods
mov
add
pop
clc
decl
xchg
movsb
testb
dec
lods
mov
inc
dec
add
ljmp
dec
mov
shrb
inc
scas
stos
dec
aam
jg
test
lock
cwtl
bound
adc
xor
into
ljmp
or
lcall
dec
adc
in
dec
aaa
enter
sbb
jbe
mov
inc
fs
push
lahf
int
jns
xor
out
pop
mov
sbb
sub
inc
sbb
les
pop
fcomp
clc
jne
dec
mov
sub
popa
sbb
lahf
repz
movsb
or
fists
sbb
loopne
sub
iret
xchg
mov
ja
mov
mov
jbe
out
les
imul
into
negl
inc
std
nop
dec
outsl
jl
rorl
mov
inc
add
jbe
lahf
faddl
cmp
dec
mov
pop
add
pop
mov
sbb
inc
sub
dec
scas
push
add
mov
sbb
cmpsl
add
js
loope
push
xchg
mov
or
shlb
add
subb
lds
or
vmovmskpd
adc
add
rorl
dec
jecxz
lea
pop
push
pop
push
push
push
nop
popa
stc
insb
in
push
loop
outsb
dec
cmp
frstor
cli
push
push
into
pop
andb
xor
mov
cmp
cmp
push
add
fists
arpl
insl
or
out
clc
sub
dec
cmp
movsb
insb
movsb
and
fcomp
push
or
inc
popf
ds
lret
fst
insl
cmc
xor
mov
jle
jo
shrb
nop
cmp
ret
pop
push
jp
cs
sub
gs
jp
fildll
jmp
es
and
outsl
insl
rorb
dec
cmp
cmpsb
popa
add
loope
insl
and
xor
sbb
iret
dec
inc
add
or
jl
cli
xchg
pop
fadds
es
loopne
rolb
decl
sbb
es
fs
inc
jecxz
ljmp
aam
sub
rcrb
jnp
add
and
enter
add
and
dec
jae
mov
mov
cmp
out
pop
mov
or
mov
andl
fimull
das
dec
outsb
shl
jae
mov
mov
cld
jmp
stos
pop
xchg
call
fcmovu
aaa
ja
push
dec
cmc
std
aas
clc
in
in
xchg
mov
sbb
xchg
sbb
psrld
nop
icebp
iret
pop
add
mov
mov
int3
sub
add
popa
sti
dec
xchg
or
add
mov
adc
insb
jno
je
and
out
push
xchg
test
dec
shrl
cwtl
imul
mov
mov
out
lcall
add
pop
xchg
rorb
add
ret
mov
pop
cmp
lahf
inc
nop
faddl
pop
mov
mov
loopne
dec
lea
jl
in
dec
pop
les
nop
outsl
dec
inc
xchg
movsb
testl
push
cltd
call
in
in
mov
popf
dec
mov
xorl
mov
mulb
xchg
iret
scas
subl
cmp
mov
sub
clc
fistl
or
repz
jl
lds
stos
packsswb
push
out
mov
pop
add
adc
sub
insl
cld
repz
int3
lea
test
and
jecxz
xchg
mov
sub
inc
pop
call
mov
imul
xor
mov
jl
test
or
ja
xchg
movsl
cmp
jo
xchg
adc
add
insb
cld
jnp
add
pusha
jg
sbb
mov
add
jg
jo
xchg
sbb
movsl
pop
push
dec
in
jbe
incl
and
adc
cmp
mov
nop
les
das
or
mov
jg
fcmovnu
mov
nop
sbb
scas
or
lcall
lock
sahf
mov
jno
and
rcrb
sub
adc
cmp
dec
sbb
jge
sbb
sbb
rolb
push
cmpsl
addr16
dec
hlt
push
aaa
std
jl
inc
adc
xchg
jae
and
adc
lcall
int
cwtl
inc
sti
mov
jg
mov
and
sbb
loop
and
dec
bound
adc
rcl
ss
or
lret
push
popf
pop
fs
call
shlb
test
pop
lahf
sbb
mov
cmp
jecxz
scas
sub
mov
mov
xchg
sti
pusha
add
mov
vmovsldup
push
fnstsw
push
xchg
mov
pop
test
ja
inc
adc
or
jo
adc
mov
inc
and
fs
push
xchg
hlt
pop
sbb
daa
repnz
sbb
roll
xchg
popa
loope
inc
xchg
lea
push
das
rcr
flds
push
flds
dec
pop
sub
push
mov
loope
xorl
xor
cmp
std
aaa
outsb
jns
jl
sbb
jo
push
test
mov
fildl
sbb
rcll
dec
test
jnp
or
cli
arpl
push
dec
inc
lahf
jle
call
fildll
cmp
and
scas
jg
push
ret
test
or
sub
sub
mov
inc
xor
cmp
orb
mov
ret
call
ficoms
mov
add
icebp
popf
das
sub
inc
inc
fdivrs
cld
in
jle
adc
or
xorb
sbb
mov
cmp
out
mov
push
mov
sbb
inc
pop
mov
lret
and
lret
nop
dec
dec
fbstp
pop
movsb
call
dec
loopne
lock
jecxz
scas
cmc
cmp
dec
push
cmp
mov
data16
scas
xor
lea
dec
pop
jmp
test
icebp
sub
cmc
xchg
inc
mov
jne
jmp
inc
shr
mov
outsl
jo
mov
loope
fwait
jp
aas
sub
idivb
add
xchg
or
outsb
inc
jb
adc
dec
mov
and
adc
pop
jbe
or
push
inc
out
or
scas
xor
enter
mov
loope
fwait
mov
add
dec
cli
fisttpll
icebp
push
mov
mov
dec
inc
cmc
pop
pop
sub
xchg
pop
daa
add
sub
dec
add
outsb
adc
sub
movsb
xlat
push
xchg
push
mov
ret
sub
rclb
xchg
popa
or
adc
mov
jo
jno
jo
inc
or
or
scas
or
add
or
std
pop
and
subl
enter
in
jno
pop
mov
rcll
pop
push
mov
mov
jmp
add
sahf
cmp
mov
xchg
jl
and
call
adc
in
and
jbe
mov
subb
and
inc
loope
popa
cmp
fucomp
or
or
outsl
loop
ficompl
sub
push
sbb
inc
xchg
outsb
subb
incl
and
add
pop
je
psubb
xchg
pop
and
add
loopne
xchg
dec
sbb
hlt
inc
enter
insl
push
adc
adc
dec
adc
subl
lods
inc
adc
jo
jae
mov
iret
xor
jle
stos
fmul
push
xor
shlb
fnsave
cld
push
pusha
push
cmc
adc
in
insb
sbb
or
dec
sti
scas
rcrl
adc
cmp
mov
rorl
mov
daa
lods
test
mov
addl
pushf
clc
push
mov
pop
and
cmpsl
lock
dec
jge
fildll
sbb
cmp
mov
clc
dec
cld
lcall
xor
jl
push
and
ds
pop
lcall
or
mov
pop
jl
push
sti
inc
icebp
adc
aam
sbb
repnz
xorl
and
inc
lds
popf
xor
inc
jne
cli
cmp
mov
mov
arpl
jns
inc
pop
pop
push
pop
sub
dec
mov
idivl
mov
repz
int
jns
jle
andl
push
push
adc
xor
or
aad
xchg
pop
aad
and
insl
sti
cmp
aam
ret
lcall
or
jg
std
notb
popa
rclb
adcl
xchg
xchg
push
mov
push
and
sbb
stc
cwtl
add
pop
test
popf
scas
js
loopne
jle
fwait
dec
outsl
fstl
pop
adc
inc
and
clc
sub
pop
lds
dec
mov
add
aam
mov
inc
adc
in
and
sti
adc
jo
punpcklwd
inc
lock
popa
xchg
iret
and
push
scas
ret
rorl
and
stos
shlb
addr16
fisttpl
jo
aam
shl
inc
cwtl
das
xor
cs
rol
out
cld
or
pop
add
and
dec
movhps
adc
adcl
test
inc
inc
and
inc
cmp
inc
cwtl
fdivp
ljmp
dec
hlt
sbb
insb
cmp
or
push
jge
incb
pop
xor
sti
adc
adc
mov
shrl
pushf
cmp
outsl
aad
ret
push
hlt
dec
fsubrs
add
and
loope
test
out
sahf
fwait
movsb
notl
test
xchg
sub
pop
lods
std
mov
mov
mov
loopne
andb
xchg
and
imul
pop
icebp
sub
outsl
lock
mov
lock
repnz
in
lock
adc
pop
dec
rcrb
ret
jle
or
inc
cld
stos
pop
xor
decb
jns
cmpsl
mov
daa
mov
add
fcoms
loop
loope
or
fmulp
xrelease
clc
add
in
les
inc
aad
dec
sbb
lcall
xchg
or
xor
adc
filds
add
add
push
in
sub
fmull
push
lock
pop
adc
mov
cmp
inc
add
cmp
fbstp
sbb
pop
ss
inc
sub
pop
cld
int
pop
out
push
mov
stos
into
inc
pop
dec
dec
pop
lock
add
dec
xor
mov
jbe
mov
and
ret
inc
lods
push
add
loopne
push
testl
add
dec
or
jbe
in
in
jno
pop
movsl
adc
sbb
sbb
mov
push
sbb
sbb
add
ret
es
adc
stos
dec
push
das
aad
sub
popf
add
outsl
scas
popa
shrb
pop
insb
push
jecxz
fs
xchg
mov
or
adc
mov
push
dec
xchg
cmpb
xor
inc
cld
sbb
inc
fcoml
add
mov
dec
sub
testl
orb
loop
sbb
sti
push
push
sub
xchg
mov
es
inc
cmp
mov
cmpsl
adc
nop
pop
pop
enter
jnp
aas
cmpsb
sti
arpl
adc
jnp
sbb
jno
ja
or
jp
jle
push
lods
lods
punpckhdq
push
and
mov
lods
lret
adc
bound
dec
mov
rolb
fdivs
mov
mov
or
cwtl
std
sub
fs
insl
out
pop
sub
jl
lock
push
xchg
mov
std
add
inc
lods
mov
inc
addl
and
cltd
jns
aas
sti
test
icebp
inc
cmp
jo
lea
lods
mov
nop
cmc
push
jecxz
dec
push
dec
pop
jo
addr16
lret
sub
mov
into
cmpsb
roll
mov
fldt
fldt
add
test
fwait
mov
sbb
xlat
mov
dec
inc
mov
push
cmc
mov
cwtl
dec
dec
je
cli
sbb
add
adc
pop
pop
push
movsl
mov
xchg
outsb
std
mov
int3
dec
ds
pop
sbb
aaa
clc
call
pop
pop
fnstcw
dec
adc
int
popf
add
or
stos
shlb
fdivs
fmul
cli
stos
aam
pop
cltd
imul
xorb
ss
insb
sub
fs
sbb
push
cmp
xchg
push
mov
mov
cmpsb
sbb
es
pop
xchg
push
sub
or
sbb
add
divl
jo
inc
and
std
push
imul
mov
mov
imul
testl
dec
sub
jo
sbb
jge
popa
aam
scas
mov
adc
push
mov
mul
jle
enter
sahf
mov
out
mov
nop
inc
mov
cs
inc
inc
shlb
fstpl
imul
push
imulb
push
std
roll
clc
ret
stos
stos
mov
fcompl
push
rcrb
les
inc
cwtl
sub
sarb
add
mov
adc
sub
xchg
jno
jge
lea
cmp
mov
add
inc
push
xchg
mov
ds
repz
push
adc
xor
aas
mov
dec
xchg
dec
sub
subb
xor
lock
popf
push
aaa
inc
test
mov
outsb
xor
enter
jno
stos
lea
mov
in
add
jle
pop
push
push
arpl
out
cmp
not
push
mov
aam
inc
and
cmc
xchg
cli
fcmovb
jne
xor
adc
xchg
xchg
out
add
jge
xchg
push
and
and
test
sub
nop
not
and
sbb
dec
inc
push
push
subl
pop
hlt
push
dec
out
sub
dec
adc
inc
sbb
add
or
fucom
cmpsb
sbb
hlt
or
inc
and
sbb
test
push
dec
cwtl
outsb
sub
pop
mov
mov
add
jg
aaa
mov
repnz
inc
and
jmp
cmc
xchg
popa
mov
pop
movsl
jae
xor
cmp
push
lahf
test
repz
ret
addr16
enter
ljmp
xchg
lss
sbb
jge
and
push
aad
dec
imul
outsl
ret
sbb
mov
call
imul
xlat
rorb
mov
push
insl
mov
sbbb
cmpl
jge
push
hlt
mov
sbb
pop
pusha
mov
lahf
xchg
pop
fisubs
push
sbb
test
sub
in
arpl
sbb
xchg
or
xchg
js
push
sbb
mov
lods
call
mov
lret
push
xchg
out
cmp
loop
inc
xchg
pop
mov
sbb
mov
pop
and
mov
ret
aaa
or
lret
sub
mov
ror
pop
mov
sarb
outsl
and
fisubrl
sub
stos
dec
sub
push
jmp
mov
insb
movsl
ss
mov
or
dec
clc
xchg
sbb
imul
mov
nop
scas
scas
cmp
and
movb
les
or
fisubrl
int
mov
and
int3
push
cmpsb
outsl
pop
xor
movmskps
sbb
sbb
les
rolb
std
mov
inc
pop
mov
push
ja
jl
mov
cltd
ror
or
movsb
enter
cs
cli
scas
push
aam
jle
fsub
xchg
mov
out
sarb
jmp
jle
scas
inc
and
mov
inc
jl
nop
cmp
nop
jp
mov
add
lahf
test
push
mov
movsl
ljmp
dec
mov
aam
orl
xchg
xchg
inc
add
dec
pop
cmp
mov
mov
push
mov
cmp
jno
or
test
xor
out
xchg
jp
ljmp
sub
ds
jno
rcl
add
sti
xchg
mov
and
in
imul
cmpsl
push
xor
cmp
inc
xchg
jo
push
mov
and
js
push
cmpsb
mov
sbb
mov
daa
push
aas
or
dec
imul
fistpll
aas
cwtl
or
insl
or
lahf
test
pop
mov
pushaw
cmpsl
aas
rorl
test
push
je
pop
add
pop
cmpsb
pusha
pop
or
jmp
dec
jne
adc
insl
cli
mov
hlt
mov
scas
xchg
mov
push
es
das
push
inc
fmulp
mov
push
sub
fadds
dec
mov
mov
add
add
push
push
imul
ja
bound
inc
shlb
mov
notl
add
cmp
jnp
ljmp
push
push
xorb
jp
sbb
cs
lahf
add
fidivl
aas
mov
insl
inc
repnz
adc
in
jo
sarl
jb
pop
mov
pushl
push
cmpsb
push
lds
outsl
sbb
popf
sub
int3
jbe
add
aaa
outsb
lea
les
pop
mov
cs
add
cmp
add
dec
adc
test
popa
mov
add
dec
push
ljmp
outsl
mov
aaa
push
ja
or
mov
filds
jl
clc
test
aaa
loopne
cltd
stos
fidivs
fwait
mov
popf
jno
rcrl
stos
sbb
arpl
lret
jecxz
xchg
test
outsl
ret
mov
mov
and
lods
mov
cmp
mov
das
popf
mov
pop
dec
repnz
and
and
rcr
daa
mov
hlt
sbb
push
clc
fistpl
insl
dec
cld
jbe
jge
ss
fstps
fmull
rorb
sub
pop
je
mov
shll
test
jo
mov
inc
jae
pop
insb
popf
in
clc
xor
rorb
movsl
sbb
scas
mov
xlat
adc
pop
sub
mov
call
add
add
add
lret
push
pop
hlt
mov
subl
cmp
cmp
loop
imul
jne
cli
lods
repnz
rclb
mov
mov
lock
sahf
shrb
mov
pop
jmp
xorb
add
in
ret
cmp
or
push
dec
pop
jg
pusha
mov
lret
bound
mov
mov
push
push
hlt
sbb
jnp
call
dec
xchg
jo
mov
cld
inc
push
or
sti
loopne
mov
loop
test
cmp
pop
jmp
int
or
mov
cmpsb
jns
int
cmp
pop
adc
test
mov
and
call
cli
ds
inc
push
icebp
rcr
aas
mov
cwtl
pop
stos
mov
jns
dec
jecxz
lea
dec
push
inc
push
push
bound
fcmovne
jg
les
add
push
and
pusha
inc
fs
inc
push
outsl
pop
clc
dec
pop
sub
fadd
xchg
call
int
jmp
lret
aam
loope
sbb
sahf
aad
sub
cmp
out
mov
insb
mov
mov
scas
push
lcall
inc
imul
cmp
xchg
mov
iret
or
push
outsb
popa
aaa
sub
push
lahf
repz
jmp
sub
pop
out
inc
sub
dec
push
scas
addl
or
adc
mov
sub
cmp
inc
out
mov
ja
call
aas
mov
xchg
loopne
adc
fcomps
mov
jae
xorl
out
dec
xchg
pop
xor
imul
jae
jo
nop
mov
dec
dec
xor
lahf
push
xchg
push
push
xchg
pushf
mov
mov
adc
jl
push
pop
fsubrp
outsl
jp
cmpsl
test
inc
jge
movsb
jne
jns
inc
std
std
xchg
outsb
mov
addr16
sti
add
addr16
gs
mov
les
push
pop
dec
or
push
jae
mov
pop
cmpsl
fimull
pusha
cli
mulb
pmaddwd
rorb
repnz
mov
or
imul
lock
dec
arpl
or
mov
mov
mov
sahf
dec
mov
sbb
pop
mov
xor
add
notb
inc
xor
cmp
push
inc
or
aam
aam
pop
roll
es
or
add
push
fdivrl
mov
adcb
pop
int3
add
lock
and
or
mov
clc
sub
mov
sub
adc
and
jp
mov
stos
sub
add
cltd
mov
lds
jb
in
repz
mov
fdivs
mov
scas
in
add
dec
sub
js
pusha
push
faddl
push
clc
lea
xor
inc
loop
jmp
outsb
jb
pushf
dec
inc
push
push
mov
sub
adc
pop
addl
clc
outsb
xchg
or
adc
lock
cmp
bndstx
and
shrl
out
pop
lret
xor
push
jg
das
inc
jg
jo
xchg
movl
xchg
sbb
hlt
in
push
sub
rorl
sbb
add
or
rcll
xor
add
pop
mov
ss
jo
fs
push
insb
xchg
fnsave
stc
dec
sbb
mov
sahf
adc
ja
inc
lahf
dec
lock
nop
loope
push
test
ret
aas
mov
rcrl
inc
jp
repnz
and
adc
lods
fisubl
mov
faddl
push
addb
inc
push
add
add
mov
add
adc
add
sbb
cltd
adcb
xor
loopne
pop
inc
lock
repnz
xor
loop
cmc
adc
sbb
or
sbb
mov
sub
jne
xor
fistl
insb
ficompl
out
xorb
cld
adc
push
ds
out
shrb
cmp
and
sbb
int3
adc
icebp
and
inc
call
mov
into
cmp
mov
cmpsl
dec
or
ss
sbb
adc
push
cmp
xor
fcoml
mov
dec
fwait
pop
dec
push
pusha
out
mov
cli
test
jp
lret
ret
mov
or
add
jl
sub
popf
insb
loop
mov
jbe
sbb
adc
push
xor
cmp
jo
sbb
cwtl
call
cmp
out
out
ljmp
daa
insl
and
lcall
in
pop
mov
out
sub
fwait
int
in
rcll
imull
adc
xchg
mov
out
cmp
adc
and
mov
sub
pop
jae
popf
pop
test
jae
lock
pop
mov
pop
cmp
dec
cld
not
pop
jp
cwtl
stos
icebp
xor
or
bound
push
and
call
fnstcw
add
cmp
shrl
bound
cmp
xchg
adc
add
pop
push
icebp
jecxz
pop
arpl
fdivrl
fsubrl
jg
xchg
mov
push
aad
xchg
es
aas
test
push
jno
scas
scas
ja
mov
inc
mov
clc
push
push
loop
inc
ss
addl
or
mov
push
mov
rclb
popa
push
push
pop
or
dec
scas
jmp
pop
xchg
sub
or
mov
jne
jecxz
test
add
dec
mov
ds
push
sub
test
mov
leave
inc
pop
sbb
inc
sbb
repz
std
das
sarb
test
cs
add
inc
sbb
loope
aad
push
pop
in
idiv
push
mov
outsl
or
ret
test
aam
orb
test
mov
xchg
push
inc
inc
cli
aas
ret
shll
mov
push
loop
testb
out
push
inc
hlt
jnp
scas
pop
fnsave
push
xchg
fcmovu
iret
icebp
sub
pop
loopne
ret
aad
ficoms
and
add
jge
xchg
ja
mov
mov
lods
xchg
jbe
mov
xchg
adc
pop
sarl
and
dec
insb
cmc
mov
in
lods
xchg
neg
jp
fadds
push
lret
jb
xchg
in
jb
pop
scas
pop
arpl
in
pop
sbb
pop
and
pop
outsl
xor
inc
fs
inc
mov
fs
mov
sbb
adc
je
push
add
or
lods
stos
jle
mov
mov
out
fwait
mov
inc
pop
dec
mov
push
stc
clc
ljmp
jno
std
mov
shlb
cs
insl
loope
and
js
dec
mov
jbe
insb
dec
mov
push
popa
add
imulb
push
xchg
test
push
mov
sbbl
mov
lds
xchg
push
jp
mov
inc
cmp
mov
mov
push
mov
gs
loop
iret
push
lock
mov
push
adc
das
out
mov
mov
dec
rcrl
std
or
popa
or
mov
test
dec
mov
sub
add
jle
dec
and
mov
xlat
repnz
dec
xor
call
and
sbb
aad
std
filds
xchg
stos
decl
xchg
push
push
push
movups
push
dec
mov
mov
mov
adc
ja
loop
in
mov
or
stos
adc
loopne
inc
aam
mov
bound
jle
ret
mov
and
shll
je
push
jne
cmp
and
fdivrs
cmp
in
push
mov
xchg
pusha
fcmovnu
mov
add
fwait
pop
and
rcl
pop
add
push
rcr
xor
cmp
lds
rcll
mov
fistpll
sbb
jne
mov
stos
jg
cmp
pushf
stos
nop
in
jecxz
add
inc
test
pop
ljmp
leave
xchg
out
inc
cwtl
push
pop
mov
subb
dec
shlb
dec
or
ljmp
jnp
or
lods
cli
lea
push
sub
mov
sub
outsl
fisttps
repnz
cmp
sub
shlb
dec
lahf
lods
ja
mov
mov
cld
inc
insb
test
sbb
pop
or
nop
in
add
aaa
outsl
sbb
dec
cmp
xchg
cmp
dec
rorb
cld
addb
std
ret
mov
xlat
xor
subb
mov
sar
and
mov
js
adc
jg
dec
imul
xor
decl
and
fisttpl
fbstp
mov
insl
inc
gs
cmpb
cmp
and
mov
testb
mov
mov
stc
leave
mov
mov
mov
aam
fldenv
sub
add
inc
aas
pop
js
pop
mov
and
mov
jo
nop
pop
push
push
das
mov
roll
push
cmpsl
dec
loopne,pt
nop
adc
decl
mov
or
aad
inc
inc
xor
adc
pusha
and
xor
pop
pop
push
sbb
pop
mov
int
cmp
mov
mov
addl
mov
xor
enter
cmp
loop
outsb
inc
aaa
pop
out
insl
test
cmp
cmp
lret
outsb
sub
icebp
jge
jns
in
inc
pop
push
addr16
cmpb
pusha
sub
mov
movb
int3
and
xor
jmp
mov
cmp
ss
pop
inc
adc
ret
mov
mov
ja
xorb
repz
jmp
mov
mov
jns
js
lods
jg
add
jbe
stos
stc
mov
and
xor
sbb
loopne
cli
sbb
js
or
or
pop
push
addb
dec
out
mov
sub
inc
in
icebp
sub
stos
arpl
cmpsb
sub
mov
xchg
movsl
xchg
push
sahf
or
inc
fcomi
jmp
and
sti
mov
xor
sbb
lock
inc
aad
imul
in
or
pop
pop
add
imul
cmpsb
inc
push
stc
and
cld
push
insb
in
jge
loope
loop
sub
aam
dec
or
mov
je
jb
out
mov
in
je
in
call
or
outsl
dec
lds
jg
adcb
shll
ret
insb
mov
ret
dec
inc
outsb
cmp
push
cld
and
and
jne
sub
pop
mov
ljmp
cs
sub
inc
fistpll
jne
cmp
jmp
mov
enter
das
add
mov
cmp
jg
and
in
xorl
and
call
or
mov
cmp
pushf
cmovl
mov
jle
pop
cli
adc
mov
jl
jno
mov
mov
xchg
insl
mov
or
or
rorb
mov
sahf
add
mov
cli
or
call
mov
inc
pop
outsb
adc
sub
lds
jle
mov
xchg
cld
insb
sbb
xchg
pop
sub
mov
inc
cmpsl
pop
rol
sbb
clc
push
mov
jb
jo
inc
rorb
add
loop
rolb
xorl
adc
cmp
push
jl
sub
aas
inc
pop
add
fsubl
sub
mov
bound
push
cmp
outsb
pop
mov
dec
in
add
je
fnstcw
inc
jg
sbbl
pop
inc
inc
outsl
xchg
cs
es
mov
arpl
mov
xor
fadd
adc
jne
sbbb
inc
sbb
inc
dec
or
mov
add
dec
insl
mov
pop
mov
addb
inc
dec
pusha
mov
pop
fmulp
insb
loopne
pop
sbb
add
cmc
jae
push
sub
adc
cmp
xor
ljmp
mov
pop
insl
mov
js
push
in
xor
mov
lahf
sarl
orb
cmp
sahf
xor
inc
jae
jno
mov
push
jg
mov
fwait
sub
mov
testl
aaa
cmp
dec
pop
xor
andb
idiv
call
cmp
repnz
aam
arpl
jae
mov
lock
test
jg
rol
loopne
decl
push
int3
mov
adc
mov
sbb
js
pop
ljmp
mov
mov
icebp
sbbb
pushl
xchg
cmp
imul
xchg
jnp
sub
and
push
fidivs
add
cmpsb
sub
in
sub
push
aaa
mov
in
or
jo
adcl
out
in
and
mov
jo
lock
sub
test
outsl
mov
push
jg
or
jl
cmp
jg
push
outsl
ud2
xchg
xor
adc
test
cmp
pop
icebp
pop
fs
pop
mov
repnz
insb
mov
mov
stc
loop
outsl
in
push
add
inc
xchg
test
pop
pushf
add
mov
inc
sub
icebp
pop
cs
scas
and
lock
addb
push
ret
pop
call
cmp
dec
cmc
in
loope
addr16
xchg
pop
sbb
cmp
adc
lea
rorl
lods
jb
and
jbe
dec
push
jle
and
paddb
aas
and
test
add
push
or
fwait
jne
mov
dec
xor
cmp
das
and
mov
mov
loopne
in
insl
jecxz
scas
stos
int3
stos
push
or
popa
jge
ljmp
mov
sbb
fdivs
mov
out
mov
inc
inc
rcll
aaa
fdivrl
pop
adc
jnp
add
push
sub
add
ljmp
mov
iret
les
mov
mov
xchg
cli
inc
dec
mov
call
fcoms
iret
xchg
pop
sbb
dec
dec
mov
sub
pushl
inc
sbb
mov
pmaxub
out
call
fisubrl
aaa
add
sbb
mov
outsb
mov
stc
je
mov
xchg
mov
int
mov
bound
inc
jne
testb
out
sub
ljmp
inc
push
sbb
imul
sti
ss
pop
dec
add
inc
sbb
adc
rorl
sbb
xor
andb
dec
push
in
movsl
cmc
leave
cltd
mov
mov
mov
mulb
sbb
aaa
xor
pop
jge
sarl
mov
dec
mov
inc
inc
pop
fidivl
out
call
dec
mov
shrb
or
xchg
and
cmp
adc
imul
fbstp
xchg
pop
add
mov
subl
add
xchg
fs
cmp
int
test
jle
arpl
or
jnp
mov
cmc
push
xchg
js
xor
mov
mov
jg
mov
je
xor
push
aam
loopne
push
out
test
xor
lock
mov
xchg
xor
inc
cwtl
mov
cltd
add
call
jbe
rorb
movsl
scas
add
test
mov
xchg
add
test
and
fistpll
jo
lea
mov
mov
inc
imul
sbbb
ret
adc
cmp
lcall
mov
mov
movsl
xchg
imul
scas
or
fimull
ljmp
pop
push
lods
les
cmp
mov
mov
push
jo
add
lods
dec
push
lahf
sbbl
insl
push
jg
sub
xor
xor
mov
test
sub
inc
xchg
pop
mov
pop
iret
xchg
dec
dec
sbb
mov
popl
or
test
cli
lea
enter
xchg
push
mov
scas
mov
sub
lods
and
cmpsl
and
les
push
fisubs
outsb
jmp
sbb
xchg
push
aas
push
mov
or
dec
cmp
scas
pushf
inc
add
test
sbb
clc
dec
push
movsl
gs
jbe
sbb
inc
sbb
insl
dec
shrl
sbb
shr
jmp
in
mov
movsl
rcrb
lods
sub
push
push
cmp
test
and
out
aaa
sbb
sbb
push
mov
jne
outsl
or
xchg
mov
inc
xchg
outsb
loop
pop
xchg
pop
dec
shl
xor
pusha
push
les
inc
jnp
scas
push
add
neg
jge
scas
ljmp
adc
test
fldt
xor
xchg
cld
call
insl
mov
movsb
sbb
lahf
dec
or
out
repnz
fidivl
pop
ljmp
sbb
dec
push
pop
pop
sbb
mov
sti
push
cmpsl
adc
std
inc
mov
xor
jg
cmp
cwtl
rcl
or
inc
add
rol
fwait
push
lock
or
lea
xchg
mov
push
aam
xchg
add
jle
mov
xor
push
mov
add
incl
xor
mov
xchg
sbb
xchg
push
fistpll
bound
xchg
js
incl
mov
enter
cmpsl
mov
fstpl
xchg
popf
fwait
sbbb
add
fildll
divl
dec
xor
dec
jns
dec
add
or
mov
jne
add
fmuls
xlat
cmp
xorb
mov
add
popf
dec
mov
lods
sbb
sbb
push
mov
mov
mov
lret
leave
cmpsl
cwtl
adc
xor
lods
in
popl
push
aas
testb
or
int3
pop
add
and
jo
inc
fnclex
jmp
jle
clc
rolb
adc
dec
lock
inc
dec
push
dec
sbb
iret
ficomps
and
lock
jbe
and
or
adc
lahf
fld1
hlt
enter
xor
mov
fwait
jae
rclb
add
sbb
and
lea
in
xor
aad
mov
lock
inc
sub
sub
add
and
in
or
xchg
inc
mov
stc
stos
add
mov
mov
or
and
jns
or
pop
je
cmp
inc
dec
lock
stos
incl
pop
cltd
fnstsw
sub
sub
imul
bound
push
sbb
or
loop
sbb
les
lahf
xor
xchg
pop
adc
fiaddl
fwait
test
sub
lret
add
adcl
ljmp
icebp
lods
int3
mov
dec
jmp
aaa
arpl
inc
jle
pushf
fcmovnbe
push
aam
stos
faddl
sub
push
pop
rorb
jmp
and
adc
pop
xchg
call
lds
sbb
adc
xchg
into
outsl
fwait
iret
and
rcr
insb
psllw
jae
add
mov
lods
adc
dec
popf
lret
xchg
iret
adc
popf
jno
dec
mov
and
and
mov
xorl
fwait
push
add
xor
add
sub
dec
push
lods
aam
insl
jae
push
rolb
xor
add
mov
push
cmpsb
lret
aam
mov
subl
mov
int3
sbb
mov
mov
sub
dec
or
lds
add
faddl
les
push
por
jp
and
push
ret
bound
jb
push
cs
bound
sbb
test
sub
stos
sbb
inc
xor
push
fcmovnbe
std
or
fcoms
mov
cwtl
mov
mov
scas
daa
jle
cs
popf
and
dec
push
push
frstpm(287
int
add
std
dec
and
ss
add
leave
das
ffree
cmc
sti
push
lds
out
or
lcall
mov
decl
ficoms
adc
out
loopne
in
push
movsl
rcrb
mov
scas
lds
or
mov
fstps
cli
or
cmp
pop
adc
divb
lret
mov
call
mov
stos
mov
aam
sub
cmpsl
lcall
push
jle
sub
push
fiadds
xlat
and
cmpsl
mov
mov
icebp
leave
dec
adc
test
out
xor
orb
xchg
loopne
ljmp
pop
repnz
add
mov
cli
mov
pop
loop
push
xchg
call
clc
inc
int
mov
pop
mov
fwait
adc
sub
push
lods
push
jb
add
xchg
les
add
aam
movsb
push
adc
int
pop
sti
mov
mov
mov
fstpl
push
jg
push
faddl
cmp
subl
std
aas
dec
test
rcr
sub
jp
mov
mov
loop
mov
add
es
xor
sahf
lods
jne
sbb
cmc
inc
in
xor
mov
popl
aad
stos
jg
negb
das
mov
jecxz
dec
sbb
imul
fistps
outsb
out
cmp
mov
inc
loop
cmp
test
ret
adc
test
jbe
outsb
aaa
sbb
and
test
mov
jle
mov
sbb
movsb
insb
mov
nop
jno
nop
pop
xor
lahf
xor
dec
js
lret
xchg
orb
and
or
idivl
bound
mov
mov
or
ljmp
cs
sbb
cmp
subb
hlt
sti
push
pusha
inc
lret
loope
or
aam
shl
in
add
add
nop
ja
shlb
xor
fnstsw
inc
dec
or
ja
neg
mov
xacquire
lds
or
sbbl
repnz
sbb
or
sarb
je
adc
xchg
hlt
and
loope
sub
push
or
xchg
icebp
aam
push
js
loopne
add
flds
rorl
lea
jae
subb
mov
push
mov
cmc
jge
mov
test
mov
cmp
jg
aaa
das
je
push
jl
push
add
add
in
lcall
xchg
xchg
mov
jl
into
enter
jae
xchg
xor
xor
outsl
aam
cli
rol
mov
pop
mov
jmp
cld
idivb
es
cmc
cmp
orl
div
aaa
ret
add
ret
sbb
cmp
or
outsb
mov
cmp
sti
mov
inc
xorb
fstpl
adc
imul
push
mov
repnz
push
fistpll
stc
popf
insb
xor
xchg
js
decb
mov
imul
jo
mov
popa
or
jecxz
arpl
ja
das
iret
adc
sbb
adc
outsb
cwtl
subb
add
insl
ljmp
sub
push
or
lock
or
pop
stos
in
and
sub
mov
subl
dec
sub
pop
xor
pop
or
inc
bound
aaa
jg
inc
orb
inc
jnp
aas
inc
jb
jge
clc
into
testb
dec
das
xor
inc
push
lfs
sbbl
test
xor
cmp
idiv
inc
sbb
pop
inc
push
fcomp
adc
repz
push
das
adc
shlb
movsl
jo
dec
lods
pop
aaa
call
aam
inc
jg
and
pop
push
mov
adc
jg
not
rorb
sub
sti
jo
adc
fscale
xchg
inc
inc
cmp
stos
jecxz
xlat
inc
or
jns
clc
daa
cmp
cli
jecxz
xchg
cmpsl
pop
push
in
sbb
repz
mov
mov
jge
inc
xchg
inc
and
push
hlt
outsl
xor
mov
out
or
sti
adc
test
xchg
std
iret
cmp
movsb
flds
mov
cmp
jmp
cmpsb
mov
movsl
adc
sub
and
cmp
in
hlt
mov
fbld
inc
jno
shlb
fmull
cmp
shlb
roll
push
inc
jne
gs
cmpsb
mov
test
mov
inc
pop
bound
add
push
inc
sbb
mov
lea
mov
insb
pop
xchg
mov
cmpsb
pop
into
cmpb
cmp
into
addr16
xchg
mov
into
addb
dec
add
clc
notb
jns
adc
sbb
incl
jo
mov
xor
cmc
dec
outsl
mov
loop
pop
dec
pushf
pop
push
addr16
iret
cmp
jbe
cmp
adcl
dec
test
xchg
push
stos
outsb
cmp
xchg
ss
sar
mov
or
std
fistl
arpl
out
pushf
push
les
cmpl
xchg
or
das
add
aaa
adc
add
sbb
aaa
ss
lock
orb
inc
scas
fcomip
and
sbb
in
mov
mov
shlb
loop
es
adc
aaa
enter
xor
lods
mov
xchg
cli
ret
shrb
xchg
scas
data16
testb
or
mov
arpl
and
and
jge
mov
fcmovu
or
xchg
lods
stos
sbb
pop
rcl
lea
and
mov
aaa
jmp
adc
jg
mov
pop
lcall
or
scas
js
sbb
dec
pushf
push
pop
cmp
jge
stos
aad
mov
cmpsb
xchg
xlat
rcll
cmp
dec
sbb
lods
loop
cmc
testb
orl
pushw
cmp
sbb
jns
movsb
cmpb
ja
sbb
ja
pusha
rolb
sahf
inc
aam
test
pop
mov
pop
mov
je
pusha
adc
mov
inc
inc
sub
data16
ljmp
lcall
filds
adc
mov
cmpsl
xchg
xchg
or
loop
scas
sub
les
push
push
sbb
fadd
fidivl
mov
fs
rorl
cmc
ficompl
mov
loop
push
xchg
into
insb
lds
mov
mov
gs
mov
xor
or
aas
cmc
add
mov
sbb
mov
arpl
rol
addr16
pop
int
adc
mov
fimuls
and
pop
adc
subl
pop
mov
gs
aad
xor
push
pop
aaa
fcmovu
mov
mov
xor
dec
inc
cmc
movsl
fistl
ljmp
out
or
cmpsl
fcompl
and
int
dec
cmc
aam
mov
add
sarb
sbb
sbb
and
test
out
hlt
int3
push
adc
in
rorl
into
bound
add
int3
and
xchg
outsl
test
fidivl
sbb
es
cmc
test
or
pusha
test
scas
dec
xchg
int3
lret
cmp
int
dec
push
rorl
dec
push
mov
adcb
push
push
icebp
outsl
enter
fldl
pop
rorb
sbb
ret
inc
cld
xor
xor
dec
sbb
sub
inc
cmovno
fs
lock
insb
mov
inc
push
shll
push
mov
popl
repnz
or
fcmovne
jo
call
out
out
cli
and
or
add
fucomp
sbb
jmp
xor
in
lcall
ror
scas
adc
or
in
push
adc
std
repz
and
inc
push
add
jno
aam
pop
rolb
cmp
loope
call
add
test
add
call
mov
mov
and
sub
test
and
add
sbb
aad
ror
pop
lret
xchg
xor
or
add
and
or
add
cmp
stos
mov
and
rcl
int
shl
add
data16
jne
addl
sbb
outsl
jno
xchg
or
shrl
push
mov
mov
je
cmpsb
or
push
sbb
inc
jo
rorl
imul
das
push
jmp
inc
mov
addb
pop
lds
cmp
adc
mov
add
test
xor
cmc
dec
or
adc
inc
jmp
ret
and
push
xor
insb
xlat
scas
sub
in
xor
int3
cmpsl
js
lcall
push
jno
sbb
imul
jb
mov
add
and
mov
and
inc
push
cwtl
xchg
push
ds
jmp
push
scas
push
push
adcl
xchg
adc
leave
test
push
xlat
dec
add
loopne
jmp
or
nop
mov
imul
dec
nop
bound
scas
je
pop
or
sub
dec
mov
push
dec
push
test
and
jp
mov
jmp
fisttps
jno
popf
pop
dec
lock
sarb
inc
mov
dec
mov
add
pop
loop
aaa
loop
lea
outsl
mov
mov
inc
clc
shl
push
cli
outsl
mov
xchg
jmp
jne
imul
push
ffreep
fists
ret
gs
push
jae
popf
pcmpgtw
and
faddp
mov
push
hlt
enter
sub
sub
mov
push
les
cld
cmp
sbb
fs
cmp
popl
mov
xor
add
xchg
dec
inc
mov
xchg
adc
mov
add
frstor
jp
jo
pop
int3
loopne
or
lods
fwait
add
cwtl
dec
mov
lods
adc
inc
imul
in
hlt
idiv
negb
adc
xor
dec
adc
idivl
xchg
orl
ret
cmp
jbe
jecxz
pop
xchg
lret
dec
sub
aad
call
fstl
mov
jle
jp
pop
pop
test
sub
inc
sub
add
loopne
jne
mov
ret
out
nop
test
mov
out
inc
mov
mov
int
xchg
xor
into
ja
push
ffree
testb
roll
ficompl
cs
push
adc
mov
ds
jo
pop
arpl
jne
jmp
mov
test
or
ret
js
dec
dec
insl
insb
mov
shr
or
icebp
adc
push
scas
out
sub
mov
push
push
lea
or
ja
push
xchg
cmp
andl
adc
add
mov
mov
mov
push
scas
mov
loopne
cs
mov
inc
xchg
sbb
pop
add
mov
xor
fsubrs
jl
rorb
cltd
or
je
popa
sub
fdivrs
mov
and
fistl
mov
push
stc
ss
push
je,pn
mov
xor
icebp
cli
outsl
in
fistpl
int3
movsl
dec
dec
pop
mov
add
push
add
les
add
pop
cmp
cmp
cmpb
jb
sub
ret
jp
leave
lock
lea
fmul
lcall
stos
mov
mov
daa
xchg
sbb
fsubrl
add
xchg
pop
push
roll
mov
test
or
sbb
jg
testl
cmp
and
popf
push
arpl
mov
jmp
jae
cmp
pop
iret
cs
out
push
sub
mov
dec
leave
cmpsb
or
divl
in
xor
daa
lret
insl
int3
fsubrs
xabort
push
outsb
int
js
orb
js
sbb
stos
cmp
mov
test
insl
outsl
or
rcr
inc
sbb
adcb
push
adcb
jge
jg
cmp
sub
addr16
jne
fidivrl
mov
push
add
mov
cmpsb
and
fcomps
aaa
fs
lds
lea
pusha
fimuls
cmp
stos
lea
out
insl
mov
call
mov
in
les
add
cmp
mov
or
int3
and
or
pop
dec
mov
scas
mov
jp
jmp
cmpsb
sub
popa
pop
jmp
stos
mov
orl
out
sub
mov
push
xor
rorl
in
jmp
sbb
hlt
in
outsl
int
mov
or
in
add
outsl
xchg
adc
mov
orb
jne
andb
adc
mov
scas
ljmp
std
inc
pop
aaa
scas
sbb
pop
inc
pop
les
js
imul
add
repnz
jle
arpl
mov
jmp
loope
mov
cli
mov
fdivrs
dec
push
push
pop
jecxz
inc
addl
mov
aad
fisttpl
test
inc
lcall
pop
inc
lahf
jg
cmpsl
rclb
xor
sbb
enter
out
adc
xor
pop
lock
pcmpgtb
ds
outsl
out
mov
jmp
and
dec
lcall
test
push
pop
jne
ret
js
fsubl
inc
mov
ror
adc
push
sti
and
sbb
or
or
pop
sub
and
loopne
push
mov
ljmp
or
push
addl
scas
hlt
out
andb
mov
mov
push
xchg
shl
rcrl
xor
in
inc
roll
pminsw
int3
cmp
icebp
testb
sub
add
int3
pusha
idiv
fistpll
push
mov
gs
push
add
fmull
clc
pop
lock
or
jne
out
jecxz
rol
stos
xor
mov
xchg
cmpsb
aaa
sub
mov
nop
mov
imul
sub
push
xchg
loop
movsl
lods
das
ss
ljmp
fcom
jne
fsubs
loopne
and
popf
jbe
fidivl
std
lret
mov
push
fsubrs
daa
pop
pusha
push
mov
aam
jmp
mov
int3
pop
inc
pop
lcall
in
push
subb
inc
mov
push
cmp
cmpsl
jo
je
mov
push
imul
xor
mov
arpl
lea
insb
pop
xor
adc
and
les
jecxz
fidivs
adc
bound
mov
inc
pop
les
add
lock
test
cmp
movb
push
mov
inc
mov
xor
adcl
cli
or
mov
add
fstpt
xor
out
pop
cmp
inc
insb
jmp
mov
pop
fadds
mov
test
je
jge
mov
sub
dec
mov
xchg
cmp
mov
loopne
gs
adc
add
pop
ret
addl
mov
xchg
sbb
inc
mov
insl
jae
scas
push
js
sub
aas
jae
or
jo
adc
pop
and
or
and
mov
lods
insw
xchg
mov
ficoml
ficoms
in
cli
jae
std
into
sbb
push
push
clc
cmp
int3
out
hlt
pusha
pop
sarl
push
inc
cmc
test
push
jle
std
ljmp
les
dec
cmp
pop
sarb
ficoms
in
shlb
test
xchg
bound
adc
jg
adc
scas
insl
ret
jb
inc
cmpsb
clc
or
dec
stc
outsl
insb
dec
jno
loope
stos
fsubrl
inc
leave
dec
push
push
push
fs
push
sbb
jne
insl
test
or
fstpt
lahf
call
movsb
add
adcb
add
pop
xchg
mov
mov
push
lds
push
add
mov
sarl
mov
jno
and
loop
shll
pop
cld
mov
daa
and
shrl
dec
lock
lods
xlat
xor
fistpll
xor
aaa
subl
enter
mov
iret
and
or
or
cs
in
xor
lds
daa
sub
sahf
mov
ss
ds
cmp
leave
mov
shll
notl
sbbb
jge
cwtl
popa
jmp
or
nop
sub
pop
fistpll
push
mov
cli
adcb
ja
loop
je
ficoml
push
mov
push
xor
std
inc
test
mov
ja
push
and
cmc
fnstcw
cwtl
inc
push
or
pushf
lods
add
push
js
sub
aad
sti
fldl
cmp
and
sub
addr16
push
pushl
adc
jno
ret
decb
xor
insl
aam
inc
adc
push
sub
jo
add
int
ljmp
inc
and
shrl
aam
xor
or
push
frstor
pusha
lcall
mov
pop
scas
adc
push
loop,pt
xchg
push
add
loopne
dec
lcall
xor
push
and
cld
movsl
jae
xor
mov
xor
dec
jo
loop
add
sbb
adc
jae
push
mov
inc
pop
inc
push
cmp
aad
cmpsl
pop
lds
inc
xchg
jne
push
xchg
jb
cmp
inc
fidivl
jns
aad
inc
push
flds
xlat
fstpl
addr16
sub
xchg
sub
xchg
xchg
sub
xor
enter
pushf
mov
es
insl
hlt
addr16
pop
fiaddl
mov
mov
mov
push
push
jbe
dec
mov
fadd
jne
jne
mov
mov
mov
jb
lret
pop
dec
lret
pop
out
mov
out
xchg
sub
xor
imul
mov
push
sub
inc
pop
or
inc
aaa
mov
jne
or
pop
adcl
sub
mov
and
sub
loopne
movsb
lcall
shlb
das
seto
add
fldenv
and
sub
aad
dec
push
inc
and
rolb
xchg
outsb
shrb
lret
js
int3
addb
adc
push
pushf
dec
sub
sbb
movsl
rol
xlat
push
lret
inc
mov
roll
adc
inc
mov
sbb
jb,pn
js
dec
cmc
sub
mov
lods
or
dec
and
adc
push
dec
js
insb
mov
std
sarb
lods
xchg
push
and
push
lcall
jge
pop
push
cmp
mov
cmp
ficomps
js
inc
cld
outsl
filds
test
pop
cmp
jns
adc
xchg
push
or
rolb
adc
or
sub
add
inc
mov
adc
loopne
push
out
dec
pop
or
and
icebp
addr16
ror
and
add
push
into
dec
lcall
in
icebp
add
pop
or
ss
test
inc
push
pop
add
pop
bound
loope
ret
inc
jmp
and
push
iret
int
enter
lcall
xchg
push
add
mov
sub
sub
sub
xchg
xchg
aam
adcl
rorb
fildll
jnp
fisubl
add
pop
add
inc
or
sub
fcoms
cld
dec
and
or
int3
popl
subb
sub
xor
xchg
and
push
adc
mov
gs
dec
add
insl
shlb
rorl
xor
sbb
stc
add
loop
aam
push
test
add
and
dec
jb
add
lea
mov
bound
sub
or
fdivrs
mov
sub
jmp
clc
pop
mov
in
push
divl
jecxz
xor
jb
test
lock
shrb
or
adc
loope
lcall
pop
icebp
add
jecxz
loopne
out
int
sbb
mov
dec
jl
inc
dec
sbb
add
jge
out
mov
fmuls
adc
cmp
mov
mov
lods
loopne
jae
pop
xor
inc
push
in
sbb
enter
push
dec
inc
lods
cld
and
dec
push
pop
cli
pop
xchg
stos
outsb
mov
jg
fisttpll
subb
sbb
int3
and
insb
sbb
test
mov
sbb
imul
fcompl
fstl
daa
cmp
mov
push
sub
jmp
movsl
test
mov
add
add
loopne
test
jnp
sbb
dec
xor
xor
aaa
pushw
ltr
lcall
jge
lcall
cmp
shll
jg
ficomps
and
lods
push
xchg
jmp
test
jb
sub
dec
in
xor
nop
jecxz
inc
jae
xor
jb
pop
pop
pop
cld
and
call
out
sub
push
addl
f2xm1
cltd
jecxz
incb
lds
adc
hlt
xor
or
in
push
inc
jne
and
or
xchg
adc
and
or
inc
mov
xor
outsl
out
or
and
and
and
in
jmp
adc
dec
lock
das
dec
iret
lcall
xchg
lea
add
aad
pop
inc
adcl
out
stc
push
out
sub
xchg
add
sbbl
mov
daa
push
add
test
and
xchg
mov
and
dec
lock
inc
mov
pop
jb
int
or
jae
in
jl
xor
loopne
or
shrl
sbb
lock
shll
jecxz
pop
dec
shll
fnstenv
adc
cmpsb
call
dec
dec
mov
scas
push
fmuls
xchg
rorl
cli
lock
cmp
sbb
fdivrs
xchg
in
inc
aam
pop
sbb
in
dec
out
aaa
or
aam
mov
in
mul
fisubs
mov
outsl
inc
insl
xor
push
push
or
or
mov
in
xchg
pop
add
and
adc
and
and
inc
sub
sub
test
adc
add
lret
mov
cmp
adc
add
push
mov
inc
mov
movsl
dec
mov
add
mov
int
sbb
aas
icebp
mov
test
jmp
dec
or
cmpsb
and
pop
mov
add
adcl
cmp
sbb
jmp
add
add
test
xchg
mov
lcall
testl
loope
add
movsb
jnp
pushf
pop
fdivrs
or
lock
and
sub
add
sbb
and
andb
xor
adc
add
mov
mov
sub
push
mov
and
sub
push
mov
jno
jnp
mov
xchg
jg
fcmovne
nop
adc
add
xchg
xchg
rorl
icebp
ja
sbb
xor
outsb
stos
mov
mov
sbb
rcll
lds
lock
push
imul
test
cmp
sub
mov
jecxz
xlat
adcb
ljmp
jmp
adc
adc
inc
mov
xchg
mov
dec
xor
imul
pop
lds
sar
sub
or
jnp
ficoms
xchg
adc
add
dec
or
pop
js
shl
clc
dec
inc
test
pop
mov
icebp
cwtl
add
add
pop
call
aam
pop
xor
and
aaa
mov
or
cmp
pop
adc
repnz
lods
push
in
add
aaa
ljmp
cmp
mov
dec
mov
inc
mov
int
sbb
bound
and
je
adc
repz
fisubl
pause
mov
ret
and
mov
stc
cs
repnz
pop
xchg
sbb
in
or
jae
jbe
dec
cli
xchg
inc
insl
or
mov
in
xchg
jns
cmp
mov
jo
fcmove
cmpsb
aam
cmpsl
sbb
mov
and
ljmp
sbb
mov
shlb
adc
sbbl
hlt
shl
data16
dec
pushf
xlat
dec
test
push
aad
mov
shlb
icebp
adc
cmc
push
jl
testb
jg
sbb
xor
jbe
loop
dec
testb
cli
mov
mov
push
sarl
and
ja
pop
mov
jno
mov
and
cltd
add
push
test
dec
add
sub
js
sub
rorl
icebp
adc
out
or
push
adc
pop
and
repnz
cmp
fcoms
fadds
add
shlb
sub
fldt
int
lcall
test
fmul
lds
test
push
mov
stc
loope
sahf
mov
fdivr
dec
push
jno
andl
xchg
mov
mov
lret
push
leave
es
lock
dec
pushf
and
fmuls
dec
fsubrl
cld
mov
loope
inc
add
roll
loopne
push
add
adc
shrl
inc
pop
push
xchg
add
jo
or
in
mov
sbb
ret
iret
adcb
loop
pop
lret
pop
push
stos
sbb
inc
fucomp
lds
pop
fiadds
adc
loope
sub
inc
or
and
xor
dec
mov
pop
add
or
pop
call
roll
dec
rolb
fdivs
rcl
mov
mov
mov
fildl
popa
fldcw
add
add
es
repnz
shlb
dec
call
call
push
mov
addb
movsl
sub
popf
sbb
ret
sbb
fxch
mov
xor
arpl
or
push
push
add
scas
enter
pop
sbb
lret
or
and
inc
adc
testb
cmp
jp
insl
mov
lea
cmp
push
dec
in
push
sbb
add
imul
mov
bound
arpl
lock
push
cmp
insl
push
and
cmp
andb
ret
mov
popa
and
xlat
lahf
out
inc
mov
cmpsb
sbb
xchg
and
push
add
orb
fcmovu
dec
das
add
out
pushf
push
push
mov
jmp
push
loopne
lods
mov
add
and
push
jb
imul
jge
jecxz
mov
and
add
lds
in
scas
scas
pop
clc
imulb
add
ret
ds
add
jle
pusha
or
inc
sub
sub
push
mov
sbb
fbld
mov
fisubrl
ret
jns
inc
aad
push
mov
subl
add
xor
in
add
hlt
cmpsl
sub
inc
mov
enter
dec
inc
subl
call
mov
aad
ljmp
decl
scas
jle
rcl
scas
add
repz
daa
mov
fsubrl
xor
push
xor
push
mov
jg
lahf
or
adc
dec
aaa
rorb
gs
jg
push
push
mov
loop
dec
rolb
cmp
mov
insb
push
add
aaa
mov
jg
mov
dec
jb
sbb
sbb
or
mulb
pusha
pop
add
enter
ds
jmp
sbb
imul
and
lods
mov
loop
fisubrs
jae
test
incl
dec
jg
test
lods
jae
xchg
inc
jecxz
in
inc
pop
std
jl
sbb
xor
pop
cmpb
outsl
cmp
aam
icebp
cmp
addl
sarb
push
mov
add
cmc
ja
outsl
pop
cmc
add
mov
jmp
ljmp
cs
push
pop
push
bound
cmp
call
rorb
or
lret
or
and
pop
scas
mov
pop
push
ret
popa
mov
lods
out
rclb
xchg
pushf
adc
sbb
add
dec
test
pop
push
rep
shl
ret
mov
pop
push
fadds
test
pop
mov
sub
movsb
and
enter
mov
push
shrl
lock
jb
stos
aad
pusha
cli
cltd
ret
gs
adc
ljmp
mov
or
test
into
dec
mov
mov
inc
negb
add
ss
rolb
xor
incb
adc
inc
ja
fwait
cltd
fisubl
pusha
push
inc
out
enter
mov
pop
sub
jb
push
adc
jns
in
add
push
je
cmp
mov
fnstsw
add
ffree
fdivrs
push
mov
movsl
call
and
mov
mov
pop
mov
push
lods
mov
mov
push
mov
in
pop
inc
mov
adc
jmp
dec
xchg
mov
mov
outsb
sti
push
arpl
cmp
dec
xlat
or
sbb
jne
xor
loope
clc
inc
inc
inc
cmpsl
sarl
lret
push
outsl
add
add
dec
push
xchg
push
lret
mov
xchg
addl
fdivrp
fists
lock
insl
pop
push
lahf
push
loopne
pop
pop
jae
and
stos
xchg
add
loope
and
inc
jp
mov
pop
push
mov
fwait
mov
pop
push
adc
scas
jmp
push
das
lcall
shrb
push
test
mov
adc
es
mov
sbb
lahf
leave
subb
push
push
lret
add
pop
clc
inc
dec
popa
pop
mov
pop
push
or
inc
fdiv
test
add
loope
aaa
ljmp
xor
or
fildll
js
stos
lods
es
fmul
fucom
inc
cmp
ljmp
dec
aad
or
xchg
mov
aaa
cltd
xor
testl
pop
sbb
or
sbb
inc
cwtl
cmp
inc
fisttps
fildll
mov
sbb
cltd
jle
call
out
jl
push
mov
jg
mov
pop
fbld
xchg
das
mov
or
adc
cmc
push
mov
scas
lea
ljmp
jg
mov
dec
inc
mov
out
xor
pop
jbe
fisubrl
xchg
push
inc
push
jg
cmc
fildll
jp
cmpsb
ss
xchg
mov
xchg
sub
cmp
mov
jo
or
dec
adc
movsl
fisubrs
outsb
aam
bound
out
adc
cmp
lods
inc
cwtl
xchg
jo
test
faddl
adc
sbb
push
out
bound
sub
call
sbb
movsl
pushl
push
xor
fcom
push
ljmp
lods
mov
repnz
jne
inc
les
xchg
add
mov
cld
shrb
pop
hlt
popa
call
lea
enter
adc
mov
add
and
inc
leave
js
pop
mov
faddl
pop
or
jnp
lret
fcoms
mov
shlb
int
or
xor
cmp
dec
push
movsl
jl
push
sbb
mov
pop
mov
and
jp
pop
dec
inc
jg
mov
js
aad
sarb
sub
dec
fldt
push
adc
mov
cmpb
adc
fisubrs
inc
push
cwtl
xor
rol
out
jbe
dec
scas
push
cmp
cltd
xlat
mov
sbb
and
sub
bound
and
lock
sbbb
or
mov
jg
add
cmp
out
dec
pop
push
outsb
dec
cmp
cmp
pop
pop
mov
sub
xchg
jg
pop
add
mov
dec
and
mov
adc
mov
add
xor
movsbl
sti
inc
cmp
add
iret
shl
cmp
cmp
idivl
loop
sbb
movsl
loopne
inc
mov
cmpb
rorl
xlat
js
hlt
sbb
ret
lods
cwtl
std
leave
arpl
xor
fistps
inc
sbb
push
fsub
fucomi
sub
out
fldl
jp,pt
loope
sub
fdiv
and
inc
cmpsb
jo
or
out
push
leave
add
hlt
xor
lods
xchg
scas
mov
sbb
filds
mov
sub
xor
jne
push
mov
aad
jl,pn
dec
repz
xchg
call
jge
adc
dec
inc
sbb
mov
ret
popf
mov
dec
dec
adc
shrb
push
inc
fwait
jp
and
sti
pop
inc
sbb
shll
jo
mov
fistl
and
cmp
xor
in
or
push
pop
sub
pop
jo
sbb
and
sub
mov
into
into
push
call
dec
les
lahf
mov
push
adc
pop
fstpl
dec
inc
cmpsb
or
in
cld
stos
or
lret
arpl
int3
enter
mov
and
xlat
loopne
push
test
push
and
stos
jbe
pop
aaa
or
es
sub
xchg
sbb
rolb
fwait
cli
adc
adc
xchg
mov
lea
adc
push
xor
or
adc
out
and
cmpl
stos
repz
mov
cmp
and
rolb
jno
inc
mov
jmp
fildl
mov
adc
andb
aad
jp
dec
test
jae
sbb
mov
mov
inc
fstl
mov
aam
push
push
rcl
ss
lahf
mov
sbb
mov
push
add
daa
outsl
adc
dec
cmp
or
les
rorl
push
xchg
cli
adc
insb
stc
nop
iret
push
out
popa
xor
xchg
mov
int
filds
push
jnp
pop
decl
inc
cmpsb
jo
add
inc
cmp
sub
out
push
sbb
icebp
xchg
fisubl
loope
sbb
rclb
xchg
push
dec
mov
sbb
cli
and
loopne
add
mov
fs
sbb
jge
test
sub
sub
fcomps
fmull
bound
incb
into
xor
clc
lods
sub
aas
mov
call
xchg
mov
int3
push
mov
ret
push
ljmp
cmp
ret
dec
ljmp
push
mov
inc
mov
inc
cmovns
ljmp
mov
mov
xchg
push
xlat
pop
inc
xchg
shl
aaa
mov
mov
pusha
mov
mov
xor
in
ret
push
dec
mov
sahf
mov
or
sub
lret
aaa
or
adc
lods
push
push
lret
divb
mov
adc
test
dec
lds
and
cwtl
aas
mov
push
in
loopne,pn
in
shld
stos
in
fcmovnb
repz
mov
fbld
jl
fcoms
sbb
push
jns
js
lods
mov
mov
out
fstl
dec
pop
mov
xor
faddl
mov
push
clc
shl
test
pop
inc
out
sti
out
aas
xchg
and
mov
pop
shlb
sub
or
shrb
jo
xorb
cmp
jecxz
fsubs
aaa
and
rolb
clc
insl
dec
subb
push
lods
sbb
and
xchg
loope
jne
adc
mov
sub
jge
mov
fs
xor
lahf
or
xchg
mov
in
fildl
jmp
dec
data16
push
dec
xor
and
adc
test
dec
fsubrl
xor
mov
jne
ja
inc
lods
out
mov
es
jmp
sahf
adc
mov
lcall
mov
stc
shr
daa
bound
mov
or
jae
sbb
outsb
outsl
inc
mov
test
jp
xchg
mov
ljmp
ja
cmp
mov
mov
mov
or
or
jae
mov
scas
sub
jbe
cmp
sbb
cmp
cmp
adc
jae
add
aaa
pop
or
xchg
test
xor
rorb
mov
mov
jg
pop
mov
mov
push
or
aad
mov
call
jl
filds
and
mov
mov
mov
loop
jbe
rclb
mov
mov
jle
aaa
imul
pushf
mov
iret
jecxz
arpl
inc
add
les
mov
ret
sub
aas
sub
cmp
nop
fisttpll
add
in
add
push
mov
sub
mov
pop
jg
jecxz
jg
push
pushf
jmp
jg
fiadds
mov
mov
lds
add
ret
pop
jle
mov
int3
jge
fdivrs
inc
lds
mov
fisttpll
cli
out
jg
fyl2xp1
sar
in
das
mov
movl
cmp
and
jo
sbb
mov
mov
mov
es
dec
cmp
and
stos
loopne
aaa
test
int3
test
xor
dec
xchg
xor
mov
jbe
push
aas
adc
js
lret
mov
push
mov
mov
test
hlt
neg
lods
dec
lret
jle
bound
lret
sbb
shlb
fucom
cmp
add
popw
inc
inc
cmp
mov
ds
adc
xchg
xchg
or
into
mov
adc
dec
push
push
loopne
lds
xor
xchg
ret
ret
out
xor
andl
rclb
dec
xor
adc
dec
stos
xchg
cmp
adc
aaa
sub
jp
xchg
push
xorb
or
adc
push
mov
leave
aas
fs
or
icebp
aad
daa
sahf
jle
stc
jecxz
incb
popf
lds
loopne
inc
imulb
pop
aam
fbstp
stos
fld1
test
dec
add
xor
adc
into
insl
cmp
and
sub
lock
sub
adc
in
je
adc
add
mov
mov
inc
sbb
sahf
or
les
shll
sbb
stc
outsl
aam
das
xchg
sub
and
ljmp
mov
cmp
fildl
arpl
cld
ss
sub
mov
jge
sbb
aam
cwtl
add
les
mulb
aas
jo
outsb
dec
jmp
add
ljmp
fsts
icebp
add
and
cmp
xor
push
aam
and
jae
repnz
mov
pavgb
add
adc
mov
inc
or
lcall
shll
xor
mov
cmpb
xchg
mov
clc
aas
aad
loop
xchg
sbb
add
push
aam
jo
roll
daa
or
or
add
and
inc
or
and
pop
add
mov
sbb
jns
add
movsb
and
in
mov
addb
sbb
fs
enter
mov
adc
lds
test
repz
push
cli
sbb
je
add
pushl
inc
es
out
dec
xchg
test
ficompl
xor
fwait
roll
adc
mov
mov
lea
outsl
pop
ljmp
outsl
adc
adc
rcr
mov
lret
insl
rcll
mov
lods
sbb
add
dec
or
bound
mov
aaa
push
js
sbb
fldenv
lods
jmp
ror
pushf
push
ret
dec
stos
push
pop
or
pop
ljmp
adc
xchg
jge
ret
jle
stc
repz
outsl
sub
and
mov
out
mov
roll
cmp
dec
stc
cmpsb
leave
adc
stos
cmp
add
cld
push
mov
sub
adc
cli
adc
or
cmp
sbb
push
xchg
loop
inc
lock
or
inc
cmp
pop
xor
xchg
test
and
rcrb
xchg
xor
jg
dec
inc
lods
ja
push
xor
iret
jno
test
jg
popa
mov
or
leave
cli
mov
pop
cmp
jp
sti
jg
pop
push
adc
fidivrl
inc
dec
sbbb
aas
or
mov
fs
test
and
mov
add
or
mov
inc
xchg
jno
cmp
insb
mov
lcall
gs
insl
sti
mov
mov
jecxz
fs
enter
sub
push
rcl
insl
or
xchg
mov
inc
xchg
xchg
or
call
out
in
adc
ss
xor
push
dec
adc
ljmp
push
inc
sbb
jp
popa
mov
clc
jle
pop
lret
sub
xor
fildl
mov
sub
lods
mov
or
popf
cld
test
call
popa
dec
addr16
roll
rclb
mov
xchg
push
push
cmp
inc
or
cmpsl
mov
ret
jecxz
mov
sbb
arpl
shll
imul
shlb
fdivs
movsb
nopl
stc
mov
sbb
mov
lock
pop
mov
pop
dec
les
adc
repz
mov
sub
push
and
add
das
dec
xchg
adc
inc
sub
pop
bound
pop
push
les
add
out
sub
fcompl
mov
mov
scas
dec
add
and
das
adc
mov
and
lods
test
lock
in
arpl
pusha
and
mov
roll
mov
lcall
mov
mov
lock
add
rol
shr
sbb
pusha
push
lahf
mov
add
xorb
and
movsl
fisubs
xor
shlb
insl
adc
sbb
dec
in
cmp
addb
dec
add
jne
xchg
scas
xchg
mov
dec
stos
add
aam
or
lock
cmp
add
add
pop
jo
xchg
xchg
inc
sbb
int3
inc
or
repnz
push
fstpt
push
dec
mov
jno
lods
or
inc
subb
shrb
ja
data16
adc
inc
ret
fimuls
dec
jecxz
fistpl
adc
jae
adc
fdivr
into
mov
xchg
sbb
xor
and
jmp
repz
mov
iret
add
add
jp
popa
pop
lock
inc
add
cmp
pop
push
adc
inc
add
xor
lods
dec
jl
push
pop
xor
loope
repz
mov
ja
sub
add
xor
sbb
and
scas
mov
pop
shr
jne
les
dec
adc
adc
pop
je
cmc
xor
inc
push
sbb
shlb
ret
in
dec
stos
sbb
imul
cmp
ret
rolb
inc
enter
cmp
loope
xor
repz
inc
in
cmp
pxor
out
adc
sbb
jae
int
adc
and
lock
push
aad
adc
pop
sub
pop
addb
inc
add
add
sub
push
jg
dec
fld
rcll
out
add
pop
lock
inc
adc
push
test
adc
shr
and
jno
inc
and
jo
push
push
les
push
jo
and
or
push
jle
mov
mov
clc
jns
repz
loope
or
jno
inc
outsb
pop
add
sub
lock
inc
fwait
adc
test
shlb
or
sti
in
sub
roll
inc
js
ds
push
and
fbstp
aas
clc
aad
inc
aaa
and
in
sti
adc
xchg
pop
pop
adc
add
jp
in
jg
mov
cli
adc
sbb
add
lcall
insl
mov
mov
lods
sub
or
fucomip
add
mov
js
pop
dec
mov
test
jmp
mov
sub
icebp
insl
ja
lret
xchg
subb
mov
and
and
adc
push
add
adc
rol
push
into
ds
sahf
push
push
add
jle
pop
add
pop
cmp
fistpl
sub
scas
adc
outsl
xchg
nop
sahf
add
ror
push
das
inc
or
mov
rclb
test
hlt
int
pop
sbb
inc
push
add
ja
out
mov
mov
rol
in
sbb
orl
in
xor
mov
sub
push
loope
ficoml
cli
fs
xchg
popa
mov
ret
mov
jo
cmp
fbld
xchg
orl
adc
sarl
pop
int3
add
sbb
loopne
jmp
dec
xor
lea
pop
int
cmpb
lods
xor
leave
cwtl
int3
sbb
xchg
dec
dec
clc
and
in
inc
push
cmovg
mov
pop
orb
push
stos
cli
sti
call
jnp
fcmovnb
into
scas
xor
lahf
popa
xor
dec
mov
shrl
mov
cmp
pop
and
cmp
dec
rcr
mov
and
test
pop
pop
xorb
mov
aaa
insb
add
mov
repnz
hlt
cmp
sbb
inc
dec
ficoms
adc
outsb
call
add
int
imul
jg
aaa
push
dec
fidivrs
adc
ret
mov
insb
fisttpl
divl
and
mov
aas
add
add
out
lret
es
mov
aas
xchg
inc
jb
mov
pop
adc
test
sub
mov
and
xchg
test
loope
add
mov
push
xchg
mov
rorb
jmp
cmovle
mov
xchg
lahf
lods
jmp
xor
outsl
push
pop
pop
sub
jb
sub
or
jnp
xchg
jnp
jae
cwtl
and
mov
loopew
ss
xchg
mov
jge
shll
push
sbb
xor
xchg
hlt
mov
pop
lods
int
cmp
xchg
adc
jnp
and
mov
das
pop
xor
stos
push
call
insb
push
push
movsb
jl
jno
ficoms
icebp
ss
cmp
sbb
cli
decb
dec
lea
cli
fiadds
lods
leave
push
sbb
cmp
daa
jl
lods
gs
add
mov
outsb
pop
jb
int3
dec
addr16
mov
pop
sub
mov
xor
test
push
movsl
outsl
mov
xor
test
xor
mov
sbb
sub
mov
decl
push
loopne
cmp
rolb
dec
lret
mov
negb
jmp
adc
lahf
pusha
inc
mov
dec
aad
stos
push
mov
push
call
xchg
jb
inc
mov
push
cmpsb
dec
mov
daa
mov
call
fidivl
or
add
jg
outsb
push
or
xorl
inc
pop
enter
dec
push
cld
fldl
inc
push
adc
outsl
lcall
jne
xor
inc
jmp
add
ret
inc
and
dec
fadds
adc
jno
or
adc
sub
cwtl
pop
jecxz
sbb
test
adc
cltd
inc
mov
add
shlb
hlt
scas
fildll
inc
mov
loope
fs
stos
or
out
adc
cmpsl
inc
pusha
and
add
pushw
pop
mov
mov
add
negb
adc
pop
stc
test
adc
imul
cmp
fdiv
mov
imul
lods
cmp
les
aam
sbb
jbe
ljmp
inc
outsb
pop
sub
rol
adc
or
xor
xchg
in
pushl
shrl
les
jbe
adc
ficoml
or
call
les
mov
loopne
mov
scas
add
add
adc
inc
xor
xchg
mov
aam
outsl
xor
ljmp
or
xor
dec
sub
and
dec
jo
ffreep
dec
add
shr
loop
fwait
push
fwait
arpl
cwtl
orb
lahf
jle
ljmp
xor
cltd
or
pop
call
insl
popf
push
inc
add
in
cld
neg
adc
jge
dec
jp
pop
dec
add
int3
lock
or
repnz
negl
jecxz
inc
adc
jle
lds
dec
dec
sbb
icebp
pusha
xor
lock
and
and
scas
adc
test
iret
xor
or
sub
sbb
mov
inc
push
push
sbb
cs
push
add
inc
repnz
loop
mov
lea
inc
mov
jo
sub
pop
add
shl
dec
fbstp
xchg
jp
and
add
lods
push
xor
movsl
ds
xchg
mov
shr
push
and
stos
and
loop
adc
out
int
pop
adc
in
scas
or
cmp
pop
push
les
loope
icebp
dec
lds
sub
inc
fistpll
adc
add
inc
jo
adc
sbb
push
xchg
mov
pop
push
adc
mov
xchg
test
maskmovq
testl
repz
inc
mov
xchg
enter
adc
push
aaa
push
gs
push
insl
shrl
jne
sbb
adc
call
cs
call
and
or
enter
test
je
push
push
xor
movsl
popa
dec
testl
add
add
leave
das
jmp
cmp
test
jb
cmp
mov
stos
js
insl
ds
int3
sub
mov
mov
mull
mov
push
mov
int3
orb
or
pop
loopne
sbb
adc
push
lds
scas
and
scas
test
inc
sub
gs
pop
push
add
test
add
and
dec
fstpt
mov
jbe
or
add
rclb
pop
xor
add
push
dec
and
pop
or
rolb
mov
adc
xchg
xor
mov
out
ret
inc
mov
cli
aas
adc
popf
pusha
popa
pushf
fisubrl
icebp
add
rolb
insb
push
sbb
insb
push
adcw
jmp
pop
hlt
dec
inc
cli
xchg
incb
pop
jbe
sub
xchg
int3
das
je
arpl
aaa
addb
adc
add
add
popa
xchg
mov
cld
fadd
inc
pop
test
jmp
sub
orb
push
mov
cmp
and
cmp
pop
push
pop
mov
add
lret
adc
add
loopne
mov
adc
in
dec
in
push
mov
or
or
insl
pop
add
incb
cmpsl
sbb
xchg
pusha
or
popf
inc
add
mov
mov
pop
movsb
js
mov
adc
shll
push
mov
test
adc
push
inc
int3
jl
aad
outsb
xchg
addb
in
insb
dec
sub
int
jbe
mov
cmpsl
push
mov
jg
sub
xlat
sbb
mov
add
push
insb
rorb
cmpsb
and
adc
rcrl
sub
mov
aas
sub
jne
or
xchg
xor
add
xchg
mov
pop
fldt
adc
xor
hlt
xor
mov
les
addr16
fstps
mov
xchg
and
mov
fsubrs
xchg
xchg
lahf
push
sbb
push
jl
daa
outsl
dec
mov
stos
pop
xlat
pop
adc
js
ret
icebp
push
scas
inc
adc
or
call
mov
xor
addl
add
jg
sahf
mov
add
gs
adc
std
in
pop
int
jbe
push
call
mov
add
aaa
mov
push
outsb
movsl
out
adc
dec
lods
out
fbld
out
test
sub
shll
nop
fidivs
das
hlt
mov
jae,pn
ret
adc
into
and
loop
cmp
push
clc
lret
jns
lret
and
push
fucomi
xchg
push
popf
jo
push
mov
outsb
pusha
xchg
dec
add
or
ret
push
mov
lret
xchg
loope
test
lods
xchg
xor
mov
mov
jmp
mov
or
xchg
pusha
cs
sti
mov
sub
push
xorb
mov
adc
sub
fdivs
test
adc
fsubl
sub
pop
sti
inc
mov
cwtl
jbe
push
and
shrb
lea
insl
push
cmc
lahf
mov
jno
arpl
xor
push
xchg
addr16
mov
aaa
ret
div
xchg
xchg
mov
pop
mov
mov
xchg
pop
or
mov
stos
into
repz
or
enter
mov
outsl
sbb
mov
mov
and
fcomi
fistpl
cmp
mov
jmp
fadds
int
outsb
add
sbb
xchg
dec
aad
mov
adc
mov
notb
sbb
mov
icebp
jno
pop
sar
xchg
stos
fisubrs
cmc
inc
jns
std
out
cli
mov
push
pminub
insl
or
ljmp
dec
push
push
jg
pop
sbb
loopne
cli
lret
dec
mov
addl
xchg
or
push
or
pop
lds
aam
xor
or
xor
pop
jge
into
hlt
inc
cwtl
push
xor
push
inc
xor
and
adc
add
sbb
fldenv
shr
adc
inc
lahf
test
add
adc
pusha
mov
arpl
sub
xor
icebp
test
mov
leave
mov
das
ja
pop
repnz
jg
push
iret
mov
mov
mov
mov
xor
lcall
add
shl
sub
pop
icebp
mov
hlt
mov
dec
xchg
mov
push
and
mov
mull
das
xchg
test
stos
jno
loop
aas
sbb
imul
insb
mov
inc
xchg
sahf
mov
xor
or
lret
xlat
dec
sub
ljmp
fwait
jae
or
orl
mov
and
fs
ret
rcrl
testl
pusha
inc
lock
data16
shlb
loop
cli
xorb
and
lods
mov
inc
cmc
loopne
inc
fwait
rcrb
lods
adcb
loopne
mov
in
xor
insl
jge
mov
xor
fadd
push
sbb
cs
stos
or
cltd
cs
fsubs
sar
xorl
in
cmp
subl
lods
cmp
mov
and
imul
pop
in
inc
loopne
sarb
inc
dec
sub
in
insl
or
aaa
mov
out
mov
xorl
insl
imul
jecxz
xlat
mov
outsl
ljmp
dec
mov
or
cmp
ljmp
push
fucomp
or
xchg
add
fcomps
mov
movsl
pushf
lds
fistps
out
sub
adc
xchg
or
imul
push
and
mov
lock
cmp
jmp
fadds
cmpl
scas
sub
loopne
add
in
sbb
subb
push
sbb
ja
xor
divb
pop
xchg
dec
inc
scas
fstpl
mov
add
or
sbb
inc
sub
les
xchg
ret
sub
and
push
fiaddl
sub
pop
loop
mov
jg
loop
adc
jno
ret
popa
push
cmp
ja
cli
mov
mov
sbb
sub
lds
bound
in
fistps
std
inc
ss
xorb
aaa
or
mov
in
imul
mov
pop
outsb
jmp
ja
cmpb
pop
in
add
std
fsubs
out
loopne
jmp
mov
fadds
cs
adc
cmpsb
imul
scas
std
movsl
cwtl
lock
loopne
shrb
mov
cmpl
inc
push
inc
lock
pop
jp
loopne
aad
push
test
dec
mov
orl
pusha
sub
push
sub
xchg
lahf
sub
test
sub
pushl
ss
push
dec
push
pop
sbb
sbb
aas
jle
add
nop
sub
popf
popa
sub
jbe
test
ret
pop
and
xchg
std
mov
and
and
cmp
or
shll
xchg
test
outsl
ljmp
mov
je
sarl
or
cmp
mov
test
mov
test
stos
ja
fmul
dec
clc
xchg
adcb
in
sbb
sub
pushf
mov
or
xchg
pop
insl
sbb
mov
cmp
lock
insl
pop
sbb
js
aaa
insb
inc
in
dec
lods
sbb
push
pop
mov
jp
sub
ljmp
or
movsb
cld
xchg
sbb
in
jle,pt
xor
sti
imul
movsl
push
jp
aas
mov
icebp
negl
push
enter
lret
jle
push
mov
in
jle
inc
jp
mov
ja
imul
xorb
test
pop
adc
lahf
sub
loope
pop
jl
push
pop
and
sub
das
adc
mov
push
push
rcrb
cwtl
mov
sub
push
push
mov
push
in
push
inc
fistpll
inc
lcall
push
fs
jge
clc
cmp
es
jne
push
push
in
cmp
fstpl
andl
imul
std
ret
cmp
jb
repnz
mov
cld
dec
das
fldenv
cs
mov
sub
add
mov
adc
lea
adc
add
ficompl
out
sub
test
pop
sbb
cli
push
loopne
xchg
add
add
mov
test
mulb
nop
cli
mov
out
pusha
pop
sbb
push
cwtl
add
testl
adc
arpl
imul
pop
int
adc
aas
sbb
mov
jne
cwtl
add
fs
fadd
sbbb
mov
add
mov
or
dec
rcrl
das
adc
push
addr16
mov
ja
pusha
jp
and
ud0
lret
fsub
inc
ljmp
add
mov
rolb
cld
xor
icebp
or
adc
xchg
mov
mov
roll
add
push
xchg
leave
push
imul
icebp
mov
shlb
inc
lret
adc
adcb
inc
dec
sbb
mov
jno
lea
jge
or
jg
popf
js
es
sarl
ss
dec
fdivs
loope
testl
stos
add
jl
adc
je
adc
xchg
lock
sahf
push
das
rolb
fldenv
and
or
ss
cmp
xchg
repnz
lods
in
dec
cld
sbb
xor
scas
test
sahf
outsb
daa
dec
stos
push
jo
mov
cmc
idivb
pop
xchg
andl
pop
sub
icebp
sbb
or
xchg
ljmp
jno
clc
pop
add
dec
out
test
cmp
sbb
scas
rcr
shrb
xor
pop
push
xor
fbstp
cmp
imul
test
xor
sbb
dec
inc
mov
fidivrs
call
add
dec
sub
mov
jnp
mov
xlat
add
jae
adc
fcomps
adc
insl
fcmovnu
lret
movl
call
in
ret
loop
xchg
int3
adc
sub
pop
fsubrs
popf
push
mov
ficomps
jecxz
xchg
sub
cmp
aad
fistps
aad
push
jp
dec
xor
idivb
jle
push
adc
mov
stos
addl
nop
lods
mov
xchg
mov
jp
push
jb
jmp
mov
jmp
sbb
pop
jno
pop
in
into
imul
lds
cld
pushl
sub
cmp
xor
or
push
mov
addr16
out
add
rcl
das
add
pop
dec
ret
test
inc
mov
out
or
imul
fdivl
mov
test
rorl
dec
dec
add
mov
adc
les
pop
push
push
sbb
and
in
jbe
add
test
sbb
ret
sbb
fs
inc
xchg
jb
shl
and
clc
push
and
lahf
cwtl
and
and
xor
shrl
and
fwait
pushf
pop
adc
cli
shrb
mov
mov
inc
out
loope
and
and
loopne
cltd
add
fildl
movsl
or
roll
popa
cmp
enter
adc
pushl
mov
jbe
mov
stos
enter
pmuludq
andb
int
pop
lock
add
clc
loop
and
lods
lods
cltd
or
xor
stos
jle
loopne
mov
lea
jae
loop
xor
cmp
leave
cmp
mov
fwait
sbbb
xor
add
mov
mov
bound
or
lods
movsl
xor
sub
mov
roll
push
adc
mov
dec
xor
push
hlt
mov
call
cmc
pop
xchg
or
daa
sbb
dec
pop
or
dec
loopne
mov
add
repz
mov
or
xlat
orb
jmp
inc
call
add
dec
les
mov
fmuls
sbb
mov
in
stc
js
leave
int
test
add
inc
loopne
pop
xor
cli
mov
cs
push
test
movsb
mov
xchg
ret
xchg
lods
add
mov
inc
aam
mov
fs
pop
xchg
sub
lock
inc
xor
mov
xor
xchg
xor
fdivrl
push
jp
sub
stc
pop
xor
dec
inc
imul
inc
jnp
in
fdivr
xchg
or
or
jno
inc
rcrb
mov
repnz
pop
push
jo
sbb
rorb
imul
mov
arpl
xor
gs
add
sub
fucomp
outsb
inc
jmp
jp
loopne
cmpsb
dec
sahf
cltd
clc
scas
and
and
test
inc
push
jbe
orb
add
insb
call
push
and
jno
jne
rorb
jb
lods
ret
outsl
loop
outsl
repnz
je
clc
sbb
fwait
in
and
mov
and
in
xchg
pop
movsl
in
enter
and
mov
dec
add
push
lret
xchg
addr16
add
rorb
fcomi
pop
lret
xchg
dec
pop
addr16
rcr
into
fdivrs
cmp
sub
fsub
push
mov
in
xor
dec
push
jne
sbb
add
andb
scas
jp
mov
pop
arpl
jp
adc
call
les
inc
aam
and
or
mov
inc
add
mov
pop
insb
adc
add
fdivrs
imul
add
in
cmc
sbb
sub
ss
mov
lea
mov
jl
sbb
pop
add
or
mov
push
fstpt
mov
mov
or
loop
sbb
test
xor
imul
push
or
mov
jl
jecxz
xlat
outsb
mull
ret
or
sbb
lea
adc
or
pop
std
lret
and
adc
inc
ds
pop
sbb
mov
xorb
cwtl
and
xor
das
mov
adc
std
or
jecxz
sub
mov
or
adc
mov
cmp
push
add
pop
and
pusha
enter
shrw
test
jno
test
dec
inc
sub
cld
mov
mov
mov
cmp
dec
loopne
cmp
lret
mov
cmp
and
call
idiv
fsts
mov
jmp
jae
adc
sub
test
add
in
dec
setg
mov
cmpsl
rol
pusha
xor
pop
mov
cmp
sub
sub
es
lock
stos
push
dec
clc
inc
mov
push
cmp
loope
sub
fcoml
in
add
mov
mov
lret
imul
cwtl
push
dec
add
lods
push
mov
cwtl
test
repnz
insb
insb
cld
lahf
mov
shl
in
aas
mov
sbb
outsb
pop
adc
test
add
xor
sub
push
test
lods
ret
ret
xchg
push
mov
loop
mov
arpl
add
das
scas
sbb
sub
call
cld
mov
and
xchg
add
mov
mov
jb
out
cmpsl
cli
fldt
xor
push
test
inc
mov
jae
mov
das
jno
shlb
push
sti
cli
pop
call
or
test
loop
push
movsl
add
mov
dec
mov
mov
inc
fwait
adcl
fbld
jg
test
outsl
into
xor
adc
pop
push
cmp
add
adc
inc
mov
popf
cwtl
fistl
ret
push
jns
call
ret
xchg
or
or
xchg
in
shl
sub
in
incl
add
or
in
sub
add
out
jne
pushf
xor
imul
mov
sbb
insb
adc
mov
mov
and
orl
cmpsl
fimull
nop
pop
pop
mov
jge
lahf
aaa
xchg
aas
loop
mov
mov
decb
lock
mov
sub
dec
ret
das
les
xor
notl
jmp
inc
addb
fisttps
jmp
mov
mov
xor
rorb
sub
or
rorb
shl
lret
icebp
push
mov
scas
loop
ret
in
ds
and
mov
in
imulb
mov
and
orb
xlat
mov
andb
adc
cwtl
fiadds
and
sbb
xlat
gs
aad
mov
ret
cmp
sub
orb
js
jmp
lods
das
sub
mov
mov
adc
jmp
adc
ljmp
adc
mov
jg
shlb
cld
daa
out
or
push
fsubrs
leave
clc
dec
pop
testb
dec
and
jae
aaa
divl
mov
push
fbstp
jb
sahf
pusha
jle
adc
aad
loopne
or
push
incl
sbb
push
jb
fs
xchg
jle
arpl
lds
mov
mov
shlb
mov
test
ret
ds
jmp
mov
fdivrs
out
sbb
mov
negb
mov
mov
outsb
add
daa
push
imul
std
inc
lret
lds
popa
popa
sti
sbb
pop
xchg
shlb
stos
lods
pop
lods
sub
shr
cmpsl
rolb
mov
adc
aaa
adc
mov
xor
sub
scas
prefetch
sub
and
out
int
adc
or
push
sbb
test
rorb
and
hlt
xor
lea
fistpl
sbb
sub
nop
jmp
and
jp
push
add
or
sbbb
mov
mov
fbld
adc
pop
sarl
test
popa
dec
test
test
sbb
rcl
stos
lcall
in
inc
lock
scas
shlb
inc
push
testb
rorl
ficomps
clc
rol
sbb
or
out
fists
sub
movsb
loop
int
mov
and
xor
jo
sbb
sbb
jle
xor
cmp
xchg
sub
cmp
add
cwtl
inc
mov
xchg
sub
inc
mov
and
in
pop
incb
mov
mov
mov
xchg
roll
mov
mov
lar
aam
mov
or
in
adc
in
xor
mov
sti
push
ds
or
xchg
or
jo
xchg
fcom
adc
add
fsubrl
sub
aam
aam
mov
push
xorb
cmp
jp
outsl
pop
in
push
add
aam
xorl
fisubrl
rorb
dec
aam
inc
inc
pop
cld
cli
jl
pop
ljmp
cmp
push
loopne
inc
adc
xchg
cmc
cmp
sbb
call
lret
insl
aam
std
fs
jno
sbb
ror
pop
pop
push
loope
and
add
ficompl
sub
add
add
jb
js
mov
rcrl
xchg
add
pop
sbb
jnp
pusha
or
iret
add
add
fcomp
or
in
add
or
jne
cmp
push
lock
or
ljmp
aam
jecxz
sub
bndldx
es
ljmp
xchg
loopne
dec
cmpsb
push
sub
nop
sbb
test
cmc
dec
sub
inc
add
ret
jo
les
xchg
jbe
push
stos
mov
mov
pop
xchg
adc
inc
lock
mov
dec
inc
adc
stos
lock
nop
xor
pop
or
fiaddl
in
xor
out
sbb
lock
clc
and
cmp
roll
mov
rcr
cmp
loope
dec
repz
mov
inc
mov
and
inc
mov
sbb
jge
mov
xchg
aad
mov
mov
xchg
lea
push
sti
test
test
xor
sahf
imulb
mov
out
ret
lahf
rcrb
add
push
icebp
scas
xchg
add
js
mov
dec
mov
jae
dec
mov
xchg
sahf
dec
adc
mov
insl
mov
sar
pop
nop
or
push
orb
mov
clc
mov
clc
xor
jmp
sub
push
gs
sti
aam
std
pusha
mov
jne
jno
ds
adc
push
push
pop
scas
sub
mov
adc
mov
or
jmp
or
cmp
cmp
lea
jg
leave
xchg
sbb
and
insl
or
lahf
sbb
mov
and
xchg
xchg
jg
stos
mov
or
loope
jns
xchg
lcall
jnp
cli
or
jl
pop
addr16
push
bound
mov
sbb
mov
mov
jl
fisubs
subl
pop
fisttpll
dec
or
loope
jmp
add
lahf
nop
dec
xchg
sti
jns
int
push
repz
pop
scas
mov
mov
aaa
push
add
repz
outsb
test
ret
fbld
push
push
mov
imul
mov
rcrb
cmpl
mov
mov
xor
jnp
cmpsb
aaa
cld
pop
pop
lahf
xor
loopne
push
stos
add
mov
and
icebp
ja
gs
adc
jl
outsb
sbb
lea
ficompl
aas
sub
std
fs
fmuls
fsubrp
call
aam
xor
mov
jnp
filds
insb
xchg
decl
cmp
push
ds
sbb
shrb
and
dec
mov
inc
mov
mov
fdivrs
leave
push
dec
cmc
and
inc
fstps
sbb
or
fimull
fsubs
mov
sti
insl
fcoml
xchg
add
adc
mov
xorb
cltd
sub
cmp
jo
rcrl
sbb
divb
dec
iret
hlt
xchg
outsl
add
push
adc
mov
test
jle
cs
cmc
cmpsl
jecxz
lahf
rcl
mov
jecxz,pt
shll
mov
mov
popa
mov
cs
fbstp
pop
js
mov
jo
neg
mov
add
xchg
and
neg
mov
sub
add
pop
ret
adc
or
int
fwait
jno
cmp
push
fildll
out
mov
aas
mov
xor
inc
jmp
mov
mov
shrb
pop
inc
and
sarb
lods
jmp
arpl
or
rol
lret
mov
das
xor
sti
int
into
sbb
aas
icebp
scas
clc
sbb
out
jge
or
stos
push
adc
cs
fwait
and
ficoml
pop
adcb
push
int3
pop
inc
fnstcw
imul
mov
jp
testl
push
push
mov
rorb
or
xchg
aas
dec
fs
xor
insl
in
sub
push
loop
xlat
fcmovnb
repnz
adc
pushl
jl
mov
mov
mov
inc
aam
dec
pop
mov
inc
mov
ljmp
stc
aaa
jmp
add
push
sbb
shl
adc
sbb
or
add
adc
sbb
dec
push
add
add
dec
xor
or
add
aam
inc
inc
cli
inc
mov
sub
test
adc
popa
xchg
inc
rcll
mov
add
nop
lods
in
jg
addr16
cmp
cli
mov
and
push
push
xor
int3
fisubs
ljmp
dec
les
es
repz
xchg
push
push
pushf
cmpb
mov
sub
adc
mov
clc
bound
mov
in
inc
cmp
jnp
mov
sub
inc
into
andb
in
aaa
mov
xor
xchg
mov
aad
loopne
loopne
push
lea
mov
in
dec
in
mov
jae
addl
fwait
pop
and
in
add
in
push
pop
dec
push
aas
popa
push
push
inc
fcmovb
jo
and
jae
sub
icebp
or
in
sarl
repnz
mov
mov
xor
mov
push
adc
sbb
xor
hlt
pop
or
and
sub
rolb
dec
adcb
stc
ret
jae
insl
popa
inc
faddl
sarb
cwtl
fsubrs
push
dec
ficompl
addl
lcall
and
in
aam
dec
jbe
cmc
or
daa
add
dec
daa
inc
mov
ret
add
addb
lret
push
je
adc
xor
je
movsb
lock
xor
shl
pop
inc
sub
inc
and
pusha
rcll
aaa
mov
call
negb
sbb
loopne
sub
jne
subb
inc
fdivrp
inc
inc
idivl
xorb
sbb
roll
call
or
xor
aaa
aaa
push
mov
push
or
xchg
jns
out
sub
sub
call
and
cmpsl
ficoml
sbb
jg
inc
sub
stc
mov
and
cmp
dec
sar
inc
jb
jle
ljmp
jne
add
add
test
inc
cmpsb
outsb
adc
add
xlat
aam
pop
push
dec
es
add
mov
cltd
outsl
pop
lods
sbb
loop
mov
mov
lock
add
dec
mov
add
or
stos
pop
inc
jg
mov
inc
lods
mov
sbb
add
cmp
mov
inc
dec
jecxz
pop
scas
jno
mov
sbb
inc
outsl
mov
mov
sub
clc
pop
push
push
or
add
shlb
dec
cmp
mov
mov
aam
inc
mov
sarb
push
cmp
stc
mov
mov
adc
jne,pn
add
inc
sarl
lods
call
sub
dec
out
push
test
ret
cmp
jmp
cwtl
mov
pop
adc
lret
fwait
mov
cs
mov
rcrl
cmpsb
out
lret
rorl
add
push
push
sbb
xchg
inc
pandn
mov
sub
push
push
adc
xor
dec
mov
mov
clc
aam
les
add
add
lea
mov
rcrl
cmpsb
out
in
aad
adc
call
sbb
dec
test
sub
cmp
cmp
mov
jmp
shll
stos
aaa
pop
shl
or
sti
fs
addb
xor
jne
pop
ljmp
or
fnsave
xor
sub
in
sbb
jae
dec
shrb
pop
jae
push
add
sbb
jo
dec
scas
test
es
cli
lret
movsl
sbb
push
and
dec
in
push
xorl
xchg
bound
dec
js
iret
adc
enter
adc
xchg
xorb
mov
add
add
xchg
mov
or
rorl
xchg
loopne
mov
arpl
test
idivl
stos
out
addb
js
test
inc
inc
popa
xor
mov
and
mov
pop
hlt
sub
sub
sbb
mov
add
sbb
mov
out
pop
shrl
jp
stos
add
pop
cmc
adc
mov
inc
aam
test
cmp
mov
lahf
fidivrs
imulb
mov
scas
or
push
mov
xor
xchg
mov
and
mov
popa
xchg
lret
xor
scas
clc
sub
rol
mov
bound
mov
inc
scas
or
push
in
repnz
push
xor
je
and
mov
ja
pusha
dec
bound
jg
call
dec
popl
loope
mov
aaa
cli
pop
mov
aam
push
cltd
movsl
outsb
nop
pushf
jg
lret
mov
clc
imul
jno
dec
sarb
inc
ficomps
pop
push
add
or
mov
dec
pop
mov
dec
and
and
mov
fmull
test
lea
xchg
gs
pop
inc
test
mov
fiaddl
cld
test
ds
mov
mov
inc
cmpsb
fildl
in
pushl
cli
cltd
mov
xor
and
push
fistl
inc
andb
std
lods
ljmp
xlat
add
clc
lret
mov
or
dec
cld
inc
xchg
inc
test
fistpl
add
jge
test
add
repnz
popa
test
orb
mov
outsb
cmp
bound
jp
ret
sub
inc
mov
aad
pop
jns
test
and
clc
fadds
mov
lret
adc
enter
pop
ret
sbb
dec
repnz
add
mov
enter
pop
jg
xchg
cli
add
pushf
inc
in
adc
popf
lods
sbb
stos
addl
fildll
incb
sub
mov
xchg
mov
mov
nop
call
call
jge
adc
scas
adc
in
cmp
xchg
cmpb
add
xor
das
mov
dec
mov
sbb
add
push
cmpl
lock
mov
popf
jns
jo
out
stos
xchg
lods
mov
sbb
popa
and
or
mov
scas
outsl
test
adc
out
incl
sahf
sar
dec
push
mov
fdivrl
or
aam
jg
add
bound
push
ret
cmp
xchg
je
sarl
test
adc
clc
fsub
push
lock
push
push
dec
adc
push
jge
cli
mov
xor
ss
push
cmp
mov
cmp
das
pop
pushf
pop
mov
adc
adc
lea
inc
mov
cld
fwait
shlb
fisttps
inc
mov
push
inc
adcb
sbb
adc
aad
decl
ror
push
xchg
add
and
xor
push
mov
pop
mov
xor
push
lret
in
push
inc
cmpsb
call
mov
jbe
jl
lea
adc
std
out
cs
outsl
sub
add
push
push
rclb
adc
lea
shrb
jge
ret
mov
lret
dec
bound
push
fdivl
adc
sahf
ja
sub
inc
xchg
sbb
ljmp
jle
cmp
adc
xlat
push
add
int3
xchg
mov
mov
insl
cld
dec
repz
call
outsl
das
cmc
pop
pop
repz
imul
into
pop
xorl
les
fists
bound
std
mov
incl
cmpsl
les
pop
stc
lret
out
mov
sbbl
imul
adc
fnstenv
add
xor
dec
push
add
sub
sbbb
mov
lcall
lret
sbb
hlt
add
xor
sbb
mov
jae
ss
pop
cmpb
pop
addb
xchg
daa
out
sub
in
sahf
pop
dec
rdmsr
sub
or
pop
aam
or
std
in
ja
add
cld
in
pop
fcomip
cmp
fsubl
das
rclb
sub
add
inc
out
pop
push
js
fwait
mov
popf
test
stc
ret
lods
jne
.byte
.byte
push
.byte
call
les
mov
movb
jg
xor
pop
mov
mov
xchg
xchg
xchg
ljmp
or
and
jnp
push
jge
dec
pop
mov
mov
sti
ss
test
jmp
mov
mov
mov
test
xor
mov
in
push
fmull
fwait
incl
in
ds
inc
mov
xchg
sub
outsl
mov
push
add
cmp
in
aam
push
and
jns
mov
mov
mov
mov
stos
xor
push
test
mov
repnz
xor
and
fcmovnbe
dec
cmp
clc
jecxz
call
sub
fisttps
call
jp
cltd
xlat
xchg
push
sbb
inc
dec
ja
xchg
xor
or
cmpsl
add
add
call
jne
push
cli
push
sub
push
sbb
push
mov
adc
mov
cmp
jns
inc
push
xlat
push
and
loop
mov
test
cld
mov
pop
pushf
lods
lods
jnp
decl
cmpsb
cmp
cmp
lods
inc
mov
ja
xchg
xchg
iret
loope
cltd
lods
jns
sub
pushl
sbb
mov
cmp
hlt
call
mov
push
push
jmp
sbb
push
push
mov
leave
shrb
pop
pop
pop
out
dec
stos
stos
dec
sub
sti
dec
add
pop
jge
mov
or
jno
outsl
sbb
adc
cmp
rcrb
jmp
pop
call
pop
icebp
int
clc
sub
mov
mov
test
sbb
popa
xchg
add
call
decl
fdivrl
cmp
pusha
sub
les
sahf
jnp
mov
sbb
lcall
mov
sub
aad
mov
call
xchg
sub
jle
mov
frstor
aad
cmp
test
shrb
inc
imul
xchg
icebp
xchg
push
mov
mov
cld
add
lods
sub
lret
bound
pop
fisubrl
jg
movsb
jnp
popf
mov
jbe
cld
out
sbb
push
mov
div
push
push
in
pop
out
popa
push
loope
stos
dec
jmp
inc
out
inc
jmp
lret
inc
stos
orl
mull
into
or
cmp
pop
mov
jmp
jae
insl
ud0
mov
into
mov
add
insb
lds
je
or
sbb
pushf
scas
lcall
js
jg
xchg
outsb
pusha
aaa
outsl
ljmp
sbb
mov
pop
int3
pop
xchg
loope
imulb
arpl
fcmovb
sub
scas
mov
pushf
jg
xor
in
jge
rorl
dec
jmp
fs
idivl
and
mov
adc
xchg
or
mov
iret
pop
lcall
je
adc
mov
push
loop
cmp
incl
xchg
mov
mov
aad
or
add
outsl
ljmp
and
jo
nop
xor
add
jg
sub
mov
xchg
js
pop
jmp
push
das
lods
icebp
lea
gs
xchg
add
cltd
inc
xor
int3
outsl
pop
and
pusha
lcall
sahf
dec
stos
insl
mov
jl
aam
push
das
dec
push
cltd
pop
pop
push
call
jmp
pop
lds
sbb
sub
leave
lret
jle
cmp
enter
mov
pushl
cmp
adc
and
cmp
mov
mov
shll
mov
popa
mov
ret
and
ss
adc
ror
pop
out
jecxz
jne
inc
fidivs
mov
in
lcall
mov
outsb
insb
je
std
push
idiv
xchg
and
mov
icebp
mov
test
pushl
cwtl
sbb
loop
movsl
push
cmp
imul
xchg
cmp
pop
cli
add
movsb
dec
inc
pop
xchg
ja
mov
jae
cmpsl
loope
ds
cmp
jmp
mov
fmull
add
or
nop
std
call
sbb
lret
or
mov
int3
mov
push
roll
mov
add
xor
int
jg
loop
adc
aam
jmp
push
mov
pushl
incl
in
mov
adc
fmull
add
incb
das
mov
add
fimuls
mov
xor
mov
adc
add
in
pop
enter
push
in
in
dec
mul
mov
and
pop
in
inc
iret
mov
lock
inc
add
jnp
mov
push
pop
mov
cmp
fistl
lock
add
sub
fistps
adc
and
das
inc
imul
push
jne
xor
lods
xor
in
inc
mov
addr16
repz
jge
sub
bound
fmull
lcall
adc
jmp
in
cmpb
adc
loopne
mov
into
xor
ret
int3
out
fldt
loopne
mov
and
rcr
cwtl
add
add
adc
mov
add
sub
jne
add
push
push
lea
push
mov
or
push
add
cs
aas
mov
pop
pop
or
lret
fmul
ret
ss
xchg
fiaddl
jmp
out
sbb
jecxz
test
adc
or
add
jmp
sti
add
pop
fwait
add
lahf
adc
lcall
add
mov
push
add
and
testb
jl
je
add
idivl
add
inc
pop
or
and
and
cmovnp
outsl
outsl
ljmp
add
pushf
sbb
add
jg
insb
pushl
push
add
jne
add
mov
xchg
push
add
push
xor
fists
mov
call
lahf
ss
mov
or
add
bound
mov
dec
out
in
push
decl
lods
add
or
pop
sub
icebp
cmp
or
mov
add
sub
insl
pusha
jp
sbb
test
push
cwtl
and
in
cmp
pop
add
js
add
mov
negb
add
dec
fwait
cwtl
mov
mov
pop
add
add
sar
dec
mov
cmpsb
cmp
mov
cmp
ss
daa
sbb
test
lcall
out
out
sub
outsl
lods
mov
mov
mov
dec
mov
in
inc
pushf
or
out
add
mov
mov
adc
mov
test
neg
fnsave
jp
xchg
push
cli
push
add
adc
iret
jge
mov
dec
or
lahf
test
data16
test
movsb
fmuls
adc
inc
stc
mov
mov
popf
pushl
or
movsl
push
rcrb
ror
cmovno
sti
testb
mov
mov
dec
rcr
loop
xor
jle
xchg
test
push
ja
sub
sbb
mov
add
fdiv
filds
shll
out
adc
sbb
in
stc
lods
add
idivl
in
jge
and
loope
sbb
mov
pop
dec
bswap
das
outsb
test
loope
or
mov
mov
stos
mov
loope
cs
loopne
xor
pop
inc
iret
or
clc
xor
and
dec
and
sub
pusha
loope
jo
into
and
pushf
push
add
mov
jnp
jg
mov
mov
mov
mov
and
jmp
in
repz
mov
cmpsl
jg
jl
outsb
ret
dec
mov
or
mov
inc
jns
adc
lahf
add
or
outsl
pop
and
mov
mov
ret
inc
call
push
lcall
cmp
mov
aas
lock
bound
ja
int3
insb
add
movsb
leave
movl
cmp
hlt
add
adc
sub
xchg
sub
jg
movsb
pop
dec
adc
test
cmp
ss
adc
rorb
addr16
aaa
mov
ljmp
or
add
add
pop
loop
nop
mov
inc
or
out
mov
pop
dec
scas
xor
or
add
and
sbbb
repnz
mov
sbb
mov
fistpll
sbb
jle
mov
cmpsb
mov
add
inc
sti
fbstp
test
cmpsl
dec
test
not
mov
push
mov
cld
push
pop
bound
adc
fisubl
movsb
movsl
sub
fisttps
loop
jo
mov
mov
fcmovb
adcb
mov
outsb
cmpsb
sub
ficoms
clc
jg
je
add
orl
add
ljmp
repz
lods
adc
pop
add
xlat
xor
xchg
fisubrl
sbb
xor
add
rclb
xor
fwait
jbe
fistpl
roll
mov
negb
jo
pop
pop
pusha
loope
push
stos
mov
xchg
stos
icebp
mov
add
mov
mov
xor
testb
test
adc
cmp
mov
push
lods
jb
mov
imul
inc
popa
sbb
fmul
outsl
inc
sbb
inc
push
in
jecxz
imul
sub
add
and
add
add
add
sbb
push
fsubs
fstl
sbb
fistpll
js
mov
add
push
adc
add
or
decl
loopne
scas
pop
add
mov
mov
subb
sti
lea
add
icebp
add
fisubrl
sub
push
sti
inc
mov
inc
sub
sbb
sub
adc
js
mov
je
sub
mov
xchg
mov
aam
psrld
outsb
mov
mov
pop
dec
lods
ja
mov
add
aam
push
outsb
or
cmpsl
std
lods
cmpl
mov
cmp
insl
mov
movsl
out
int3
ljmp
jae
in
pop
mov
cmc
push
xchg
or
clc
xor
aaa
or
rcll
mov
and
ss
adc
popa
add
insb
into
fcmovnb
test
fdivrl
out
sbb
in
std
movb
pop
mul
aad
cs
shrl
mov
dec
lds
decl
xchg
pop
or
and
inc
or
push
and
fs
mov
popa
xor
daa
lret
es
outsl
insl
pop
dec
ret
mov
popf
iret
or
sbb
add
sbb
js
mov
mov
imul
add
fadd
fnstcw
pop
dec
pop
or
data16
test
sbb
inc
andb
in
push
push
or
cmc
jnp
add
bound
add
movsb
and
jo
pop
or
jmp
add
les
dec
out
fstpl
scas
and
adc
sbb
add
add
mov
test
jmp
in
ret
clc
fcomi
mov
cmp
cs
int3
sub
imulb
sub
xor
out
in
pop
out
push
sub
sbb
xor
roll
popf
cmp
scas
shl
adc
xor
push
mov
popa
and
and
pop
fisttpl
or
into
addb
fldl
jmp
jb
arpl
out
xchg
mov
out
cmp
mov
scas
adc
xor
fimull
and
aas
mov
sbb
xchg
mov
push
insl
pop
xchg
seta
in
frstor
or
inc
sahf
jbe
cmpsb
mov
test
mov
ss
and
add
jecxz
sahf
jp
mov
pop
out
cmp
arpl
clc
add
pusha
mov
je
or
aad
sti
in
mov
shlb
sbb
add
jno
adc
mov
pop
cli
fildll
adc
xor
mov
xchg
or
subb
pop
dec
sbb
xchg
insb
in
sub
insl
pop
clc
mov
lahf
clc
aam
testb
mov
sbb
ret
iret
mov
test
mov
nop
xor
push
repz
ss
push
in
mov
mov
push
pop
sbb
pushf
jl
add
test
mov
or
and
icebp
push
lds
insl
aad
adc
sbb
pop
pop
push
fs
mov
adc
enter
call
aaa
sub
jle
mov
dec
mov
mov
rcl
outsb
mov
and
test
aam
sbb
das
lods
adc
sub
inc
lock
nop
xchg
inc
jbe
or
add
mov
lret
mov
pop
mov
mov
sub
push
pcmpgtb
sahf
pop
fistpl
jmp
mov
stc
imul
jne
ret
repnz
ret
ss
xchg
arpl
sub
fstl
ljmp
sti
lock
in
jp
push
cwtl
lods
sub
movsl
out
aaa
outsb
hlt
cmpsl
adc
mov
jns
test
insb
test
stos
pop
cmpsl
in
imul
pop
mov
mov
pop
jl
imul
es
mov
sub
fistl
jmp
outsb
mov
jne
dec
inc
cmc
nop
nop
pushf
or
incb
dec
cmp
push
jnp
inc
pushf
jns
mov
and
mov
fbstp
sbb
icebp
shll
dec
repnz
enter
cmpsl
xchg
in
sarb
mov
and
dec
wbinvd
cs
mov
jb
push
je
pop
adc
pop
shll
jno
add
aas
sbb
lock
lock
out
mov
dec
xchg
out
mov
mov
mov
ljmp
add
pop
sbb
xchg
jmp
or
push
add
jno
rclb
cmp
sbb
out
popf
and
sbb
xor
test
mov
loopne
adc
xchg
pop
js
sbbb
test
jbe
loopne
test
in
test
jl
incb
pop
testb
mov
xor
cmp
add
xor
or
lret
test
mov
clc
hlt
std
lcall
cwtl
jmp
in
cmpsb
sbb
xchg
pop
xchg
xchg
xchg
jo
stc
pop
sub
adc
sub
decl
lods
or
repnz
mov
and
fildll
clc
out
push
push
adc
and
outsl
xor
stos
sub
cmp
jl
test
outsl
aad
mov
dec
jecxz
lret
cmp
and
lret
inc
mov
dec
sub
jl
sbb
mov
jno
aam
notb
cli
dec
aaa
mov
in
testl
sub
fdiv
aaa
mov
pop
or
mov
outsb
lcall
sub
xchg
das
test
xchg
xor
dec
ret
mov
push
or
jb
dec
or
bound
or
mov
xor
bnd
mov
icebp
mov
adc
xor
lcall
sub
pop
sbb
mov
pop
jecxz
das
dec
lods
jne,pn
rcrl
fs
subb
shll
cli
inc
sbb
out
or
fimull
xor
ja
imul
lock
daa
adc
aaa
daa
icebp
mov
and
mov
cmp
add
mov
ficomps
fistpl
cmpl
adc
pop
jnp
pop
sub
adc
movl
sbb
and
ret
push
imul
push
loopne
mov
fldl
xchg
mov
and
lods
jnp
pop
cmp
nop
inc
mov
cmp
rcr
or
jmp
dec
call
out
fbstp
cmp
add
cli
loopne
fucomip
or
mov
neg
xor
mov
mov
les
lret
inc
les
lods
mov
fnstsw
loopne
aas
idivl
loopne
xrelease
cltd
and
fisttps
pop
sti
xlat
jbe
jae
dec
xor
jecxz
lock
pop
test
shll
push
neg
mov
ja
clc
sbb
mov
test
fisttpl
neg
xor
and
dec
mov
int3
cs
inc
sbb
cld
mov
test
cmp
enter
shrb
cltd
xchg
add
jecxz
mov
in
aaa
popa
or
ja
shll
pop
arpl
push
adc
xor
or
pop
or
outsl
in
jmp
fdivs
push
jle
in
pop
pop
stos
dec
insb
mov
rolb
add
cmp
call
xchg
mov
in
xchg
fnstenv
push
icebp
dec
dec
adc
insl
insb
cmp
lods
add
ljmp
jbe
shl
jg
push
enter
rol
es
push
test
mov
xor
fidivrl
es
cmc
dec
inc
movsl
fsubrs
xor
pushl
mov
insb
adc
out
cmp
scas
insb
mov
sub
pop
jns
bnd
mov
pop
add
icebp
cmp
sti
in
xor
pop
fwait
mov
inc
aaa
jbe
lcall
inc
pop
or
shll
xor
arpl
loop
sbb
lds
popa
loopne
and
or
mov
mov
xor
jecxz
push
jge
andl
pop
cwtl
ret
adc
insb
add
outsl
mov
std
lret
dec
dec
add
mov
mov
fs
pop
jo
fmull
push
inc
out
adc
xor
enter
bound
shll
gs
test
outsb
aam
lods
inc
je
dec
cmp
shr
adc
or
and
mov
out
jno
or
lea
neg
sti
fucomi
loopne
ss
lds
dec
test
rorl
add
xchg
mov
jle
jb
and
sahf
out
xchg
mov
aaa
add
into
std
lods
std
or
dec
cmp
imul
and
dec
cmp
push
pop
sbb
loope
stc
mov
mov
cmp
decb
icebp
cmp
sbb
fcoms
imul
xlat
mov
adc
fldcw
xchg
adc
out
or
push
popa
inc
sti
loopne
adc
xor
cmpsl
or
pop
push
sbb
enter
call
mov
repnz
inc
sub
js
mov
arpl
pushf
sti
and
je
mov
ljmp
call
ret
pop
push
xor
inc
sbb
mov
call
jge
push
lret
mov
add
iret
lods
and
dec
cmp
fisubrs
mov
loopne
arpl
icebp
dec
ds
mov
add
pop
jbe
and
push
push
repz
pusha
push
push
or
push
jmp
outsl
in
add
add
jae
dec
ret
push
scas
loopne
in
jbe
or
lahf
lahf
fistpl
stc
pop
imul
enter
dec
lock
sti
push
fiadds
sub
clc
aas
dec
push
and
adc
mov
in
adc
out
or
ja
push
and
ljmp
jb
sub
add
push
inc
jg
xchg
lock
dec
sub
cmp
ret
xchg
js
fdivrl
roll
dec
lods
ss
mov
in
std
call
sub
adc
add
sbb
les
inc
lret
mov
addr16
shl
add
xchg
pop
into
xor
ret
mov
xor
fildl
sub
xor
sub
movsb
jnp
and
pop
clc
sbb
sub
rcrb
mov
enter
lcall
pop
scas
add
mov
cmp
jmp
mov
add
jmp
mov
cli
sub
push
and
fistpll
and
mul
in
push
test
test
in
lea
pop
in
push
xchg
jae
xchg
cs
push
incl
sbb
std
loope
and
pop
push
icebp
inc
insl
call
pusha
xor
xchg
out
jmp
ljmp
ss
or
push
sbb
jns
pop
and
dec
cmp
lahf
dec
cwtl
mov
test
jne
outsb
mov
bound
repnz
jns
xlat
xchg
andl
mov
cmp
mov
sbb
or
idivb
dec
lods
in
mov
popf
je
js
lods
lock
mov
dec
dec
sub
dec
insl
in
nop
cwtl
xor
lret
out
xlat
aaa
add
dec
shll
add
add
or
lods
shr
inc
call
or
dec
cmp
xlat
push
adc
stos
cltd
jle
ja
pushf
dec
fwait
lock
pop
pop
and
cmp
mov
jnp
loop
and
add
rolb
xor
push
std
xchg
popa
mov
sbb
cld
sub
jge
inc
mov
or
loope
lahf
dec
inc
add
inc
mov
mov
mov
ljmp
pop
sub
ret
or
push
paddd
fsubrs
lds
mov
insl
pop
xchg
jmp
inc
stc
dec
roll
cmp
add
inc
inc
cmp
loopne
sbb
and
xor
cmp
fcmove
ss
shrl
div
mov
shrl
sahf
jmp
mov
sarl
lret
or
sbb
push
call
add
ficomps
and
repnz
dec
add
shrl
sti
mov
or
leave
into
adc
add
out
xchg
push
mov
xorl
and
movsb
mull
test
je
xchg
cmc
sbb
sbb
inc
inc
out
test
int
mov
js
push
cmovns
fwait
aas
sub
add
repnz
stos
push
loop
decl
and
cli
add
into
fs
dec
push
mov
pop
jbe
mov
xor
dec
xchg
fisttpll
jl
ss
push
scas
std
or
cmp
out
arpl
add
pushf
aam
pop
pop
es
xor
jg
ljmp
mov
add
pop
aas
pop
sbb
jp
mov
dec
scas
gs
pop
les
inc
test
mov
js
addb
pusha
adc
xchg
loope
jle
sbb
mov
and
fmull
pop
lret
dec
lea
sub
push
daa
mov
lods
fcmovbe
push
sub
call
xchg
rorb
xchg
cmp
mov
cmp
pop
add
jbe
clc
inc
sbb
xor
pop
andb
xor
push
out
xor
or
sbb
jb
add
or
push
lea
push
push
push
push
sub
cli
sarl
jbe
jmp
sti
cs
pop
aas
int3
push
or
xor
pop
scas
dec
and
jb
dec
xor
cmp
push
fstl
push
inc
lods
xchg
or
outsl
mull
xchg
cmp
mov
push
cmc
xchg
pop
data16
addl
je
push
rcll
add
shrb
xchg
adc
lret
mov
hlt
ret
insl
add
sub
adc
dec
add
lret
aas
mov
push
jle
add
cmp
xor
inc
pop
jmp
aaa
adc
or
or
inc
adc
inc
jmp
sahf
mov
call
inc
xchg
and
push
dec
loop
add
sub
dec
scas
sub
sbb
imull
leave
inc
cld
or
shl
add
insb
push
movsb
imul
cmp
xchg
xor
neg
mov
out
xor
sub
pusha
cmp
aam
sahf
or
out
add
and
movsl
cmp
dec
int
adc
mov
enter
aam
adc
adc
mull
mov
rcll
mov
dec
loopne
cmp
rorl
pop
xor
add
add
xchg
jecxz
stos
adcb
movsl
lock
cmpl
mov
adc
jge
pusha
add
outsl
lock
push
push
shrl
mov
incl
shrl
adc
aam
ja
sti
dec
loop
cmp
sbb
cmp
xor
repnz
add
lcall
call
xchg
ret
shlb
cmpsb
or
andl
sbb
mov
aas
test
aam
loopne
stos
popa
cmp
loop
js
std
dec
into
pusha
mov
dec
jp
cmpsl
fadds
call
mov
adc
add
dec
shll
xchg
iret
loope
pop
mov
in
cmp
jmp
ret
dec
adc
cwtl
inc
xor
arpl
jo
sbb
pop
into
or
sbb
add
inc
add
cwtl
or
out
std
xchg
xlat
adc
cwtl
orl
sub
into
and
decb
adc
ja
pop
cmp
add
loope
dec
out
sub
or
adcl
xchg
test
lock
aas
stos
addr16
inc
add
je
jne
or
fimuls
push
lcall
mov
jge
sub
iret
inc
dec
push
inc
js
sub
idiv
and
push
fcoml
adc
or
cltd
sub
mov
xchg
or
int3
sub
sbb
sbb
jne
mov
or
jg
aas
or
insb
jae
and
jne
adc
jecxz
cmpsl
xor
shr
in
test
and
test
fucomp
add
xor
stc
ret
adc
jp
mov
fmuls
test
and
push
mov
jge
or
int
loop
sub
imul
jae
jo
in
mov
daa
xor
and
mov
push
jg
das
flds
or
or
lock
xchg
daa
push
mov
sbb
rclb
push
jne
mov
fidivl
xchg
loopne,pt
shl
hlt
les
test
push
jo
popa
in
and
stos
push
cmpsl
fs
shr
mov
adc
scas
imul
ret
roll
out
aaa
leave
les
in
sub
push
mov
xor
or
mov
fbld
pusha
jmp
sub
lcall
cmp
and
aaa
mov
flds
push
and
dec
add
jecxz
xor
mov
jne
fs
dec
push
out
mov
loope
test
jecxz
les
scas
inc
mov
mov
ljmp
or
fists
sbb
add
fldenv
je
aaa
es
rorl
rclb
xor
xchg
rcrb
jbe
shll
add
cmc
clc
cmc
jo
push
inc
add
cmc
push
and
hlt
inc
movsl
pop
call
or
mov
and
and
data16
jae
lods
inc
addl
sar
and
pop
enter
loopne
sub
and
push
lret
dec
sbb
dec
sarb
aaa
es
sbb
sub
dec
adcl
and
loop
add
pushf
dec
or
ljmp
jo
clc
lock
add
cld
ret
jge
pop
std
hlt
stos
shrl
hlt
mov
arpl
mov
and
push
flds
jnp
jg
ret
out
cli
negb
aad
loope
movsb
divl
iret
push
adc
adc
add
loopne
mov
xor
mov
sbb
data16
sbb
rorb
negb
xor
testl
mov
les
test
call
sbb
outsb
lret
daa
test
aas
sub
xor
cwtl
xor
rorl
or
cmc
xchg
push
pop
cmp
jae
and
popa
sbb
and
inc
adc
je
lret
cli
fwait
loopne
sbbl
inc
lcall
push
add
ret
pusha
xchg
sub
xor
adc
loopne
test
inc
ret
lea
xor
scas
lea
or
sub
jecxz
dec
sti
sub
add
add
inc
daa
repnz
inc
and
stc
ret
cmp
je
pop
add
pop
out
sbb
fistps
pop
cs
add
call
pusha
callw
icebp
scas
add
add
int
scas
loope
pop
mov
xchg
lea
or
ja
lret
mov
imul
xchg
sbbb
or
test
pop
mov
or
ja
cmp
xlat
fistpll
and
mov
add
movsb
xor
xor
add
outsl
push
test
xchg
sbb
outsb
loopne
mov
aam
sbb
loopne,pt
mov
ss
sbb
sbb
inc
push
arpl
call
and
pop
lods
out
ret
jle
popf
icebp
cmp
adc
addr16
out
movb
push
sub
stc
jbe
push
mov
inc
sbb
jl
je
aas
cmp
xor
xor
sub
push
adc
loope
js
add
clc
cmp
into
jmp
and
pop
daa
insl
mov
dec
inc
jns
pop
or
xor
xor
lahf
les
adc
inc
xchg
loopne
mov
lods
jmp
push
jno
fs
out
jo
and
inc
mov
popf
add
ss
sub
movhps
lock
lcall
cs
imulb
repnz
or
adc
and
lods
roll
cmp
insb
dec
aad
and
les
lret
inc
std
mov
jb
dec
call
ss
mov
mov
aaa
jae
testl
jl
test
mov
inc
out
xchg
add
cld
mov
mov
dec
popf
dec
mov
lcall
xor
popa
nop
mov
rclb
cmp
inc
sbb
cmp
mov
add
es
adc
jnp
mov
cmp
in
and
cli
pusha
in
dec
or
sub
inc
add
es
inc
dec
or
aam
out
sbb
shlb
mov
pop
mov
movsb
pop
cli
push
cmp
xor
sub
stc
shlb
adc
xor
sub
and
fadds
int
pop
addr16
mov
ret
add
fs
inc
les
xchg
jnp
outsl
ss
clc
int3
pop
ret
test
push
enter
xchg
lods
data16
jnp
in
xor
inc
mov
int3
xchg
push
sbb
les
push
adc
jmp
inc
popf
push
or
data16
jle
pop
sub
adc
stos
jae
test
and
cmp
insb
shr
sbb
mov
test
cmc
daa
test
frstor
jbe
xor
mov
fiaddl
cmc
jno
je
cmp
mov
mov
mov
push
mov
sbb
sbb
test
and
xchg
sub
jns
loop
ljmp
cmpsb
add
xor
jnp
aas
push
and
ficoms
mov
jp
scas
loop
jo
push
stos
push
mov
adc
inc
pop
arpl
pop
loop
jo
jb
pop
scas
cli
jnp
or
int3
loopne
test
pop
pushf
je
fsubr
sub
rolb
call
ret
in
addb
fcompl
aad
pop
jecxz
arpl
sbb
aam
les
cmp
stc
cmp
fbstp
les
jb
lret
aad
mov
iret
test
fisubs
loopne
lret
and
sbb
sarb
jmp
sbb
pop
xor
mov
cmpsl
popa
jne
cmp
stos
fdivp
frstpm(287
inc
and
orl
aam
shll
jg
imul
dec
pusha
ficompl
jmp
enter
addl
mov
rorl
shlb
inc
scas
xlat
xchg
or
std
call
add
and
and
lcall
jbe,pt
nop
pop
xchg
lods
push
insb
dec
call
xor
xchg
lods
sub
icebp
jo
pop
push
mov
jne
sbb
test
mov
jmp
cmp
pop
loop
leave
ret
cmpsb
stc
and
ss
ljmp
incb
or
popf
shrl
pop
and
inc
and
adc
cmpsb
add
into
adc
clc
incl
fucomi
xorb
out
inc
nop
add
subb
inc
lahf
or
std
pushl
mov
adc
daa
es
test
shlb
inc
mov
aaa
sbb
xchg
lods
xor
pop
enter
ljmp
xor
imul
jle
cmp
ret
addb
push
xchg
adc
hlt
jg
push
bound
inc
fwait
test
sub
sbb
cmp
push
insb
ret
test
push
add
icebp
jb
jo
mov
add
shll
popl
out
jbe
std
orb
push
lock
xchg
jae
test
cmp
out
mov
movb
add
or
subb
jle
dec
and
add
dec
dec
jecxz
mov
sub
pop
jle
xorb
fisubs
adcl
fcompl
out
cli
push
jge
cmp
xchg
mov
je
cmp
pop
in
outsl
push
or
iret
stc
addl
out
mov
ud0
outsb
dec
cmp
notb
aam
outsl
addr16
dec
in
fcom
pushf
sub
pushl
lock
cld
jle
std
sbb
fsubr
ffreep
sbb
sbb
fs
add
pop
insl
in
mov
inc
sarl
es
adc
daa
data16
aad
aaa
pusha
mov
jg
jl
xor
and
jl
add
push
decb
sar
mov
cmp
cld
sub
fists
loop
in
adc
pop
pop
pop
das
mov
aam
mov
ss
shll
push
mov
xchg
pop
dec
mov
cld
push
in
xchg
sub
push
adc
cld
jg
pop
scas
adc
rcr
movsl
pop
push
inc
mov
pop
inc
inc
sbb
dec
or
dec
loopne
pop
pop
sahf
add
xor
aaa
fs
cld
mov
in
pop
push
mov
aaa
pop
pusha
adcb
or
loope
testl
push
push
inc
and
mov
mov
add
cmp
shrl
or
dec
rclb
dec
rorb
mov
cli
push
aam
rcl
xchg
pushf
xor
push
sub
lcall
mov
xor
fmull
inc
out
and
lea
xchg
fmull
adc
hlt
lods
xchg
clc
gs
inc
scas
outsl
sbb
cli
cmpsl
fld1
xchg
jmp
lret
pop
mov
or
pop
aaa
inc
sub
xchg
pusha
inc
xlat
je
mov
rcrb
fdivp
inc
fsubrs
rcrb
iret
dec
in
cmpsb
cmp
inc
dec
jnp
fsubr
add
xor
insb
fcomps
add
shrl
xchg
dec
int3
jne
mov
add
mov
jo
pop
push
mov
shrl
adc
adc
idivb
or
adc
in
pushf
in
inc
neg
and
outsl
lret
sbb
add
fdivrl
jmp
out
sbb
lret
std
pop
pop
sti
jg
pop
or
addb
sub
mov
sti
inc
pop
cmp
out
cmp
inc
jbe
jmp
clc
and
and
and
and
inc
lock
sbb
ficompl
es
sbb
sbb
icebp
aad
sbb
jo
or
and
xlat
pop
or
cld
push
push
mov
sub
add
dec
int
lods
mov
js
push
sahf
repnz
xor
lcall
sub
add
ljmp
mov
es
mov
adc
adc
jp
outsl
mov
or
sub
fcomps
sbb
orb
inc
in
mov
roll
ss
mov
mov
bound
testb
mov
adc
inc
insb
outsl
mov
sbb
push
and
adc
ret
add
pop
push
adc
cmp
pop
jbe
cwtl
bound
inc
mov
or
jg
rcrb
lcall
jl
test
fnstcw
ljmp
mov
lock
ja
adc
ljmp
shrl
mov
pop
std
mov
adc
cmp
add
pop
loop
lea
leave
xchg
shrl
mov
add
pusha
andl
cmc
fidivrl
fisttpl
divb
jl
sbb
adc
mov
or
pop
jle
outsl
scas
pop
shll
inc
sbb
int
jnp
mov
pushl
mov
repz
xor
inc
das
mov
inc
jge
and
xchg
subl
loopne
movsl
or
adc
jmp
mov
and
nop
push
hlt
sbb
xchg
xor
lcall
sub
insl
add
ret
pop
ror
sub
lods
cmc
mov
lahf
sub
scas
fcmovnu
decb
test
add
mov
dec
faddl
jp
jl
stos
adc
cwtl
mov
roll
stos
push
sti
cwtl
or
data16
roll
cld
cwtl
push
pop
clc
xchg
pop
sti
sbb
nop
mov
das
add
sub
rcll
lea
sub
scas
adc
test
movsb
mov
add
decl
in
jae
add
push
lret
adc
sbb
sbb
inc
add
imul
sbb
arpl
out
add
loop
inc
ret
pop
mov
pop
ljmp
xchg
sub
jmp
aam
fsubrl
neg
jg
lahf
ljmp
add
repnz
inc
mov
ja
push
ljmp
xchg
mov
mov
inc
add
adc
inc
pop
insl
cmpl
mov
ja
sub
shlb
inc
mov
jae
dec
and
enter
mov
jae
sbb
add
lret
cmpsb
push
lods
push
jbe,pn
or
fs
mov
jmp
cli
sbb
mov
jo
mov
sub
push
daa
add
mov
gs
or
scas
into
adc
clc
xor
pop
clc
loopne
xor
fsubl
scas
dec
add
add
jae
or
and
pop
or
pop
ljmp
dec
sub
enter
push
xchg
push
ret
test
mov
add
cld
fcmovb
and
mulb
outsb
xor
aam
jle,pn
enter
pusha
clc
fimull
push
lods
add
cmpsb
fiadds
jnp
cli
fs
in
adc
inc
test
and
mov
dec
addl
add
ljmp
mov
push
push
ja
and
clc
pop
jbe
jmp
mov
mov
mov
addb
mov
push
mov
cwtl
add
push
mov
add
lahf
or
or
ja
rolb
movzwl
sbb
pusha
sub
lea
push
shlb
mov
js
fbstp
pop
or
inc
dec
inc
and
xchg
clc
int
add
push
test
ja
add
test
mov
jno
sbb
mov
pusha
xchg
adc
add
stos
dec
fnsave
add
pop
mov
fbld
outsl
and
add
and
in
out
jbe
push
lcall
adc
sbb
dec
pushf
aaa
or
jbe
push
mov
dec
sub
repz
cwtl
lock
jecxz
push
aas
faddl
jb
shr
jle
mov
out
aaa
notb
mov
adc
rclb
xor
stos
fisubl
and
xchg
test
cmp
and
cmp
clc
mov
or
popf
push
or
insb
inc
jecxz
sbb
out
or
fstps
mov
ret
fmull
movsb
jle
hlt
inc
mov
xlat
mov
clc
imul
in
jmp
js
ret
xor
cmp
pop
call
ljmp
fidivl
lcall
add
fimull
ljmp
jbe
xlat
inc
add
jnp
jmp
daa
hlt
les
mov
or
icebp
cmpsb
pop
and
push
ret
and
mov
std
cs
lods
jb
jne
popf
sahf
cld
and
add
stos
jbe
rolb
mov
rcrl
push
cmp
add
jne
xchg
inc
pop
mov
int3
sti
arpl
test
out
xor
and
jp
xlat
pushf
outsb
aad
xor
out
ljmp
rcll
dec
insb
mov
bound
pop
jbe
mov
adc
dec
sahf
mov
sbb
cmp
mov
xchg
sbb
mov
in
data16
mov
call
mov
add
add
dec
movsb
mov
jmp
xchg
and
sti
sub
in
in
add
add
arpl
ja
aas
xchg
push
sbb
or
cwtl
pop
je
aaa
fadd
popf
fisttpl
movsl
iret
xchg
mov
cmp
mov
insb
sbb
dec
minps
lgs
pop
std
adc
icebp
decl
scas
nop
adc
lods
jle
jb
add
jle
outsl
insl
decb
and
cmpsb
sub
xorl
mov
addb
lods
repnz
pushf
push
jp
ljmp
sub
or
insl
mov
mov
icebp
fucomp
lods
fsubr
bound
fistpll
sarw
sti
out
test
adc
sbb
lds
popf
xchg
xchg
add
orl
jp
jp
das
bound
into
fsts
out
push
stos
mov
dec
dec
shl
daa
xor
xlat
mov
push
xchg
fnstenv
adc
adc
mov
xchg
imul
hlt
and
lods
mov
push
mov
call
cld
in
dec
mov
roll
jp
push
pop
sub
gs
push
sub
aad
rorl
mov
mov
ss
sti
and
sbb
mov
out
into
in
inc
mov
arpl
test
in
push
or
in
adc
dec
popf
push
cmp
pop
rcr
sbb
xchg
jo
cmp
pop
jl
or
add
mov
add
jb
mov
out
add
push
popl
mov
push
mov
mov
mov
pop
jae
in
add
les
imul
pop
sbb
in
mov
push
inc
nop
js
enter
das
popa
mov
dec
dec
add
or
mov
movl
out
mov
in
ljmp
cli
insl
sti
daa
leavew
sbb
push
xor
lods
fistl
es
add
ljmp
mov
fldt
movsb
jge
xchg
jg
pop
sub
std
js
ret
and
rol
jmp
lods
test
and
lcall
and
mov
ljmp
imul
xor
add
outsb
enter
mov
andb
jmp
mov
sbb
xor
jg
mov
fs
loop
mov
loope
pusha
adc
mov
scas
cmp
std
sbb
insb
mov
nop
lcall
mov
fisubrl
inc
push
and
mov
or
outsl
inc
or
push
push
adc
or
cmpl
jle
adc
or
insb
adc
inc
sub
std
xchg
adc
push
and
negb
dec
ss
fwait
rorl
adc
mov
xchg
pop
insl
jl
lds
or
aas
repz
adc
pop
outsb
pushf
adc
push
andl
daa
cmpsb
mov
sub
in
out
scas
push
rorb
das
stos
push
fldt
mov
sahf
stos
mov
or
orb
dec
push
add
jg
test
mov
js
in
mov
adc
mov
mov
mov
mov
xor
out
lods
lcall
incl
into
mov
add
jb
test
incl
cld
call
sub
ja
movsl
cli
cmp
daa
xchg
lods
pop
scas
pop
adc
push
loop
pushf
pushf
add
push
inc
xchg
pop
lret
adc
mov
xor
icebp
sub
clc
movsb
sbb
xchg
inc
ljmp
lods
ss
xor
out
shlb
push
in
push
cmp
cmp
lahf
inc
or
sbb
xchg
dec
push
ja
push
fsubl
addl
adcb
push
mov
scas
mov
jnp
daa
xchg
popf
cmpsb
lahf
jmp
mov
sub
xor
mov
test
push
dec
push
loop
mov
push
xor
add
jp
adc
jl
and
ss
fcomip
jne
mov
clc
mov
sub
jg
jno
fnsave
pop
sbb
jns
xchg
sub
fildll
aaa
js
xchg
loope
sbb
push
push
pop
fnstenv
ja
das
stos
add
pop
dec
clc
repnz
jnp
subb
arpl
subl
loop
mov
dec
push
jae
inc
das
pop
mov
sahf
push
cmc
mov
clc
stos
xchg
cmp
fldl
jmp
adc
mov
mov
pop
daa
sub
nop
sbb
pop
pop
dec
xchg
lret
pop
das
cmp
sub
dec
adc
pop
pop
outsl
pop
push
pusha
pusha
movsb
sar
pop
push
call
das
cmc
xchg
and
mov
dec
sbb
loopne
cwtl
fadds
or
inc
dec
xchg
or
adc
xorl
aad
imul
xor
test
sub
inc
pop
inc
mov
mov
xchg
push
dec
inc
pop
mov
jb
mov
testb
lods
movsl
ljmp
test
aad
icebp
daa
cli
fmulp
sbb
sbb
std
testb
mov
es
mov
jmp
jg
cs
and
lcall
pop
xchg
call
fisttps
push
test
inc
push
leave
push
imul
inc
and
decl
lea
sarb
fdivrs
test
outsb
push
xor
js
fs
jle
shl
cmp
or
mov
out
push
arpl
pop
inc
movsl
lds
popf
mulb
fisubs
cwtl
notb
add
add
jg
inc
mov
mov
xchg
mov
shll
js
dec
and
nop
push
int3
sbb
push
test
sbb
sub
aam
lock
mov
mov
insl
fucom
insb
imul
cltd
or
cwtl
or
mov
test
inc
sub
je
ret
or
add
cmpb
inc
pushf
jle
fs
or
sbb
jbe
sub
out
dec
sbb
push
or
loopne
incl
or
push
or
mov
in
push
sbb
cmp
pop
cmp
jb
je
lods
loope
insl
mov
sbb
push
pop
pop
js
xor
test
sub
fmuls
fdiv
sbb
inc
sbb
loopne
xor
jl
dec
or
mov
jecxz
jmp
jg
insl
add
mov
push
sub
pushf
inc
mov
push
pop
or
cli
rolb
xchg
test
shlb
mov
sub
jl
test
mov
adc
or
and
cld
inc
roll
je
jnp
out
mov
mov
and
fwait
popa
hlt
cmpsb
js
jp
lds
test
or
push
add
add
je
xchg
cltd
push
ja
scas
das
push
ljmp
pop
dec
add
inc
sbb
add
out
shll
dec
pop
lcall
cmpsb
ret
je
fs
adc
mov
test
and
push
inc
cmpsb
cmpsl
xlat
js
shl
cmp
xchg
test
jecxz
xchg
and
js
sbbb
and
lea
pop
aad
jle
sub
add
and
mov
ja
pop
push
push
xor
mov
push
lock
sahf
iret
xchg
or
mov
aaa
sbb
jbe
jbe
pop
mov
xor
add
lds
shll
outsb
lahf
xchg
lods
inc
mov
mov
mov
icebp
movsl
fisttps
orb
insb
fwait
outsb
fwait
and
xor
xor
pop
jns
lea
sarb
popa
xor
push
insl
stos
or
mov
pop
push
pop
addr16
mov
aam
mov
rclb
pop
outsb
push
ficomps
sarb
sbb
repz
fistpll
sub
call
imul
sbbl
jle
stos
outsb
in
dec
cmc
inc
mov
inc
stos
push
daa
notb
and
add
mov
push
sub
icebp
arpl
add
inc
xor
stc
rol
and
fistpll
lcall
lods
orb
or
dec
out
cmpb
pushl
xchg
jle
xchg
push
test
repnz
xchg
pop
pop
and
inc
psadbw
hlt
out
fnstcw
cltd
adc
ss
and
mov
lret
scas
inc
mov
push
add
push
loopne
ficomps
int3
jg
mov
sar
outsl
pusha
popa
mov
pop
add
pop
adc
lret
pop
adc
or
lds
adc
fdivs
and
repnz
mov
and
in
movsl
mov
iret
imul
fcmovb
xchg
shrb
xlat
arpl
mov
dec
add
incb
aas
mov
dec
adc
rclb
fdivrp
mov
pop
movsb
rclb
cld
sbb
lock
nop
mov
add
push
cli
testl
popa
ds
jle
fists
fnstsw
dec
jp
inc
push
pop
sarl
add
outsb
scas
mov
and
ja
mov
add
pop
add
in
decl
rcrb
popf
mov
add
or
test
jmp
inc
or
jg
inc
icebp
mov
mov
inc
leave
loopne
in
outsb
movsb
push
mov
inc
mov
pop
outsl
and
repz
or
push
xchg
push
fwait
adc
push
xor
cmpsl
jge
sti
cmpsl
ficomps
repz
into
xchg
sahf
shlb
clc
or
and
lods
mov
cmp
lods
fs
ljmp
mov
ljmp
xchg
push
pop
out
sub
mov
roll
sub
push
stos
test
adc
and
sbb
out
mov
mov
cld
jns
negl
push
mov
rorl
clc
lcall
js
les
cmpsb
mov
fcompl
mov
enter
dec
push
adc
jg
ja
and
push
xor
test
mov
add
add
fwait
add
shrb
imul
pop
fsubs
fdivs
mov
adcb
pop
nop
rolb
and
je
bound
outsl
insb
insl
icebp
cmpsb
out
repz
adc
xchg
xchg
mov
lods
les
or
adc
loop
pop
jg
rcl
mov
xchg
cmp
loope
pop
xor
mov
loopne
int3
jmp
and
mov
cli
xchg
stos
adc
jge
jnp
jb
jg
jecxz
push
rorb
dec
es
rclb
loop
jg
adc
cld
incb
hlt
orl
push
fldt
sar
int3
dec
xchg
or
jl
mov
ficomps
jb
adc
into
in
dec
es
jge
jg
add
xor
xchg
ja
fidivrl
cld
popa
lods
mov
mov
pop
mov
repnz
ja
inc
dec
idiv
or
jge
imul
loopne
adc
das
mov
das
or
orl
xorb
add
out
cmpsb
out
inc
xor
mov
pop
std
mov
fstpl
aad
adc
mov
adc
dec
rclb
push
adc
xchg
faddl
dec
rcr
push
data16
add
das
mov
cmc
cmp
fisubrl
std
ret
adc
fldt
mov
das
cmp
push
call
xchg
push
pop
push
imul
push
lods
lea
mov
enter
loopne
icebp
mov
sub
lods
sbb
push
push
pop
andb
jno
inc
ds
aad
jle
dec
mov
fcomps
adc
sub
add
pop
inc
mov
pop
outsl
mov
add
xor
mov
add
orb
mov
test
mov
adc
mov
push
fidivs
pop
test
orb
pushf
mov
std
add
rolb
js
xor
cwtl
mov
fwait
rorl
sbb
mov
rolb
dec
scas
push
or
pop
out
push
scas
aad
leave
mov
lods
mov
mov
iret
mov
stc
dec
es
clc
mov
ficompl
add
lahf
xchg
adc
repnz
cmp
fwait
or
enter
loope
out
cmp
or
sub
adc
cltd
adc
push
push
scas
push
mov
or
pop
pop
ljmp
jno
mov
imul
or
loope
fcoms
inc
int3
xchg
mov
scas
sub
jg
mulb
mov
dec
imull
sub
lds
outsb
hlt
test
scas
dec
les
mov
pop
or
and
push
lock
mov
movsl
pop
or
push
fiadds
and
inc
ds
push
cmc
inc
aas
dec
sbb
pop
fdivs
add
add
ss
push
push
push
pop
adc
add
push
mov
pop
inc
jp
pop
outsb
rorl
push
and
mov
enter
rolb
leave
pop
cmp
mov
ja
and
push
mov
jmp
test
or
into
adcb
adc
mov
push
dec
mov
sbb
or
jo
repz
push
hlt
jnp
mov
sub
movsb
leave
sub
dec
imul
mov
inc
sbb
out
stos
xor
mov
jg
jmp
loop
xor
adc
mov
mov
jo
popa
iret
inc
sbb
dec
mov
xchg
loope
mov
div
cmp
stos
outsl
out
call
mov
xchg
add
or
jno
out
or
clc
xchg
gs
popa
jnp
into
addb
inc
inc
sbb
mov
push
jne
push
icebp
or
fildll
xchg
push
or
sbbb
cmp
stos
pop
dec
pop
mov
xchg
jnp
add
jecxz
dec
lods
mov
push
shrl
mov
and
push
cmp
dec
pop
jb
scas
fidivrl
mov
mov
dec
add
inc
testl
icebp
insl
out
negl
xchg
and
out
mov
aad
pusha
mov
jnp
mov
cmp
inc
sahf
xchg
inc
pop
jecxz
sub
pop
mov
ret
or
cmp
test
pop
fisubl
shlb
cmp
jecxz
inc
adc
lea
sbb
lahf
insb
inc
andb
mov
cmpsb
cs
cmpsb
roll
int
and
ret
mov
jg
pusha
cmp
insl
lock
dec
ds
inc
shlb
insb
sub
xchg
fsubrp
addr16
push
pop
lea
xchg
adc
sbb
pushw
mov
sbb
dec
pop
push
fildl
scas
sbb
mov
jbe
pop
test
add
or
clc
jp
mov
les
mov
xchg
pop
fnstcw
jne
or
or
in
pop
mov
xor
fcompl
xchg
cmpsl
or
cltd
lods
lcall
insl
xchg
fwait
out
adc
jle
stos
inc
mov
push
dec
adc
stos
cmp
jg
cltd
fidivs
xlat
xchg
dec
in
test
lea
cmc
cmp
xchg
or
mov
leave
cli
push
mov
adc
add
mov
lahf
sbb
mov
sub
and
or
xchg
sub
xor
push
andb
clc
test
cli
fadd
add
inc
push
push
sub
out
roll
cmp
mov
aaa
lods
lock
mov
mov
xchg
inc
lods
mov
roll
pop
cmp
lods
sub
sub
push
sbb
sub
add
inc
clc
andl
xor
pop
lock
fldenv
ret
lret
sbb
fucomp
add
mov
das
orb
push
sbb
and
in
lret
push
ljmp
fstpt
mov
xchg
adc
jns
add
icebp
aam
dec
jl
loopne
loopne
aad
and
loopne
cld
jle
mov
adc
sub
sbb
es
dec
and
mov
pop
sarl
mov
mov
xchg
movsl
pop
addb
xchg
push
and
add
cld
and
adc
mov
loopne
pop
push
adc
fmuls
cld
add
cld
pop
neg
sbb
cmp
loopne
push
icebp
cmp
adc
push
xor
inc
loop
mov
mov
mov
lds
mov
push
pop
out
mov
jp
and
xor
fs
cmp
pop
xchg
insl
xchg
dec
cs
cli
fistpll
pop
rcrb
mov
bound
cltd
adc
mov
jle
mov
call
cmc
adc
iret
rcl
movsl
rolb
mov
gs
lods
decl
inc
mov
incl
cmp
flds
leave
mov
insl
std
movsl
inc
xor
rolb
daa
pop
sub
dec
int3
push
inc
cld
lds
cwtl
cmp
test
bound
pop
cmp
jg
outsl
pop
outsb
xor
sub
mov
add
fsubrl
fcmovnu
or
mov
xchg
out
shrl
fmuls
fsts
shll
cmp
push
js
das
mov
cmp
imul
add
and
sbb
jmp
cmp
stos
lcall
das
mov
add
xor
stos
decl
ljmp
lods
mov
outsb
ss
imul
loop
test
mov
mov
xchg
das
loopne
mov
test
adcl
and
add
rolb
movsl
es
inc
fldcw
pop
test
sti
idivl
out
pop
or
sbb
and
and
sbb
dec
sbb
adc
mov
and
cld
add
clc
mov
dec
enter
sbb
aad
pop
sub
adc
xchg
pop
ss
loope
add
add
fmuls
ljmp
sub
les
xchg
mov
gs
addr16
push
pop
jg
pop
sub
mov
mov
daa
test
pop
repnz
aas
lods
push
sbbl
xchg
in
xchg
hlt
mov
pusha
rolb
fstpl
pop
test
icebp
xchg
mov
jg
and
inc
and
or
nop
orl
dec
mov
mov
sub
inc
rclb
sub
xchg
aad
test
idivl
jge
repnz
fsubl
dec
mov
dec
in
ljmp
fs
or
adc
ljmp
dec
adc
pushf
notb
sbb
mov
fistps
or
stc
les
lods
or
and
add
adc
fcmovnu
loopne
repz
mov
lds
arpl
dec
ss
stc
push
jbe
mov
xor
xor
lret
cmc
cli
mov
pop
add
add
inc
sbb
dec
frstor
mov
xchg
arpl
lret
shll
ret
movb
mov
aad
mov
jg
in
sub
push
popa
fidivrs
pop
sbb
xchg
push
movsb
dec
and
pop
aaa
xor
xchg
rorl
rorb
and
fldt
pushf
push
adc
insb
ja
hlt
jp
mov
aaa
pop
movsb
jne
inc
xchg
outsl
cmp
add
shrb
xchg
pop
push
push
sbb
jle
cmp
push
mov
outsl
ss
push
cld
push
mov
leave
inc
rorl
xadd
xchg
ret
addb
imul
out
test
cmp
push
push
test
push
test
lods
mov
out
xchg
inc
mov
jns
push
jge
mov
jp
shll
and
mov
fcoms
jl
xchg
mov
mov
filds
or
mov
pop
mov
mov
fmull
push
lret
rcr
iret
int
addr16
push
aaa
int
adc
loopne
xor
add
push
pushf
enter
decl
sub
mov
mov
inc
fcompl
cmp
insb
jp
ds
push
jo
push
cmp
inc
iret
mov
push
jae
in
push
lcall
adc
test
fdiv
xchg
push
scas
cwtl
dec
jbe
int
adc
insl
sub
les
pop
and
mov
scas
inc
or
addr16
aas
sti
addr16
pop
mov
mov
lea
jg
or
fcoms
std
mov
sbb
and
cs
fcmovbe
test
movsl
and
insb
dec
inc
jb
xchg
imulb
aas
imul
inc
mov
outsl
les
mov
pushl
out
outsb
fbstp
pop
sbb
lods
add
shr
or
mov
xchg
mov
mov
imul
jge
test
pop
test
xchg
iret
out
rcrl
xchg
and
adc
xchg
push
xor
pop
cmp
mov
sarb
push
jl
insl
insl
sti
jbe
shlb
or
mov
shrl
and
jge
dec
fdivrs
and
jmp
lcall
cmp
cld
add
int
mov
adc
add
push
push
push
mov
test
incl
in
jmp
adc
lods
cli
fdivrp
fnsave
jno
sub
mov
xchg
jecxz
shrl
xchg
sub
mov
mov
sub
or
cs
pop
mov
scas
and
lahf
or
push
sub
arpl
mov
loope
int
and
mov
aam
or
mov
push
push
repz
les
fstp
adc
adc
add
adc
adc
inc
mov
pop
roll
dec
not
lods
repnz
sbb
fsubl
or
incb
and
mov
and
add
adc
sub
or
dec
inc
push
jg
aam
sbb
cld
xor
pusha
inc
outsb
pop
pop
mov
xchg
dec
add
cmpsb
push
repz
adc
inc
arpl
add
sub
in
dec
subl
cmp
adc
and
dec
icebp
mov
mov
or
and
or
mov
add
mov
test
sub
xor
loop
jno
mov
push
in
fsts
mov
mov
call
push
out
mov
inc
pop
or
jnp
lock
hlt
jge
jns
test
jae
inc
cmp
rclb
and
push
mov
lea
push
push
sub
ja
inc
jnp
xor
out
xor
sbb
iret
sbb
mov
dec
pop
cmp
sbb
ret
lock
out
xchg
cmp
push
lds
or
xchg
xor
ffreep
out
cmp
and
out
add
js
pop
popa
bound
iret
and
xor
mov
daa
dec
inc
mov
sbb
sbb
adc
pop
sub
daa
dec
cltd
and
faddp
rolb
inc
ud2
lea
jg
sub
out
icebp
mov
xor
sbb
xor
dec
sub
mov
xchg
inc
pushf
jmp
popf
ret
in
gs
jle
or
out
data16
push
jb
idiv
push
call
push
inc
daa
das
addl
insl
inc
test
adc
insl
ja
jo
adc
cmpsb
xchg
dec
sub
dec
movsl
xchg
xchg
pop
fidivrl
push
in
shll
mov
mov
aaa
add
xchg
aad
es
mov
aad
shl
xor
sub
jl
cmp
shr
scas
xor
outsl
adc
ret
dec
xchg
mov
add
out
shrl
je
repz
mov
mov
mov
mov
mov
lahf
in
sub
xchg
and
insl
call
pop
cmp
adc
outsl
fucomip
mov
popf
cmpsl
movsl
adc
xor
icebp
or
jno
pop
leave
clc
shlb
or
in
cmp
bnd
sti
loop
or
ds
sti
inc
mov
xchg
cltd
xchg
mov
pop
in
mov
mov
les
and
in
das
les
lods
dec
wbinvd
add
cmp
cs
fwait
sub
xor
or
xchg
outsl
mov
dec
orl
and
outsl
sub
js
or
mov
sbb
xchg
and
pop
cmpsl
int
add
int
or
sbb
fstl
lds
mov
or
mov
pop
mov
mov
rorl
sbb
dec
movsb
mov
lods
or
or
pop
mov
sbb
aam
pop
add
inc
or
aad
or
push
aam
push
adc
test
incb
and
pop
mov
shrb
add
sbb
push
into
sbb
add
mov
aas
inc
mov
inc
push
xchg
les
fldl
popa
pop
fdivrp
aaa
loopne
xor
add
data16
cld
lds
enter
aad
test
xor
nop
dec
in
inc
mov
je
repz
sbb
fcoml
pop
js
push
es
out
lods
jg
test
cmp
int3
jg
dec
inc
mov
jmp
jmp
addb
sub
mov
scas
push
push
pop
fistps
xchg
push
rorb
and
push
cmc
push
dec
or
lea
fidivrl
sbb
cld
lret
repz
push
outsl
jne
andb
lcall
mov
insb
jp
fwait
ss
in
jg
dec
lock
cltd
stc
mov
pop
cmp
inc
sub
add
lret
addl
mov
sbb
mov
clc
outsb
push
dec
andb
mov
xlat
sti
lock
sbb
mov
sub
inc
gs
lea
xlat
inc
mov
ljmp
add
outsb
fildl
adc
push
sbb
aaa
cld
stos
fisubl
mov
cmp
or
rorb
repz
cltd
mov
ffreep
jmp
sbb
aaa
pusha
fnstsw
scas
pushf
adc
jb
iret
lret
ja
outsb
jg
cmp
adc
xchg
mov
ja
dec
mov
cmpsb
jecxz
xchg
xor
ja
clc
das
loope
test
jns
roll
cli
mov
in
xchg
xor
sar
faddl
push
enter
sbb
shll
es
adc
mulb
cmc
enter
or
std
movsb
sbb
cmp
enter
orl
mov
push
fcmovnb
insl
pop
dec
in
sti
negb
call
xchg
xor
add
outsb
insb
shl
cli
or
movsb
inc
push
repnz
pop
sbb
icebp
push
and
push
jo
cmp
mov
mov
xchg
andb
cltd
mov
pop
ja
jo
adc
sub
xlat
dec
in
pop
push
in
pop
ljmp
int
dec
fiadds
xchg
repz
fadds
dec
cmpsb
pop
push
add
pusha
jne
inc
das
add
fisttpl
and
cmpsb
push
mov
jg
in
lods
movsb
sbb
or
adc
test
and
mov
push
and
movsl
das
ss
cwtl
mov
or
shlb
jl
lods
xlat
popa
jno
mov
and
mov
fidivs
dec
ret
xorb
inc
movsl
inc
dec
pop
pop
rol
mov
imulb
sti
fisttpl
out
mov
popf
pop
aam
aaa
pop
cmp
push
xchg
fildl
jl
mov
mov
aad
in
mov
sub
xchg
mov
mov
sahf
cs
adcl
or
add
push
mov
mov
enter
outsl
std
outsl
cmpsb
mov
lcall
xorb
mov
and
mov
adc
cmp
clc
add
add
filds
clc
and
insb
ret
cltd
pop
mov
aaa
neg
and
sub
add
sub
add
inc
aaa
sub
inc
repz
xchg
sarb
loope
addb
test
dec
jg
sarl
sbb
cmp
ljmp
push
and
cmp
out
push
mov
movsb
orl
inc
mov
adc
dec
mov
adc
adc
pop
in
in
std
out
cwtl
out
add
jecxz
sbb
test
jne
mov
cmp
adc
hlt
clc
jecxz
cli
jle
gs
cmc
mov
and
insl
mov
xchg
sbb
roll
push
pop
lock
add
pop
add
xchg
mov
sub
adc
insl
adc
sub
push
jge
or
sub
fsts
sti
enter
lock
pop
xchg
dec
addl
andl
insb
sub
mov
cltd
jle
notl
pop
mov
add
and
in
loop
cmp
jo
add
les
sub
testb
mov
pop
inc
or
xor
mov
addb
sub
push
mov
jge
and
adcb
push
cwtl
and
push
adc
mov
xchg
in
repnz
out
add
mov
int3
adc
mov
or
ret
adc
push
push
jnp
pop
cmp
jl
inc
xor
ljmp
shlb
fisttpll
sbb
les
lods
dec
xor
aas
sub
ret
jge
sbb
repz
or
and
and
jecxz
xchg
push
cmpb
inc
lock
je
push
mov
mov
xlat
jecxz
adc
out
fdiv
inc
xor
nop
push
fiadds
cwtl
cmpl
movsl
dec
mov
addl
xor
adc
or
or
cmp
mov
mov
sbb
roll
lock
adc
cmpb
in
sbb
dec
aaa
gs
lods
jmp
hlt
ljmp
lcall
pushf
dec
daa
lahf
mov
adc
xor
stos
js
mov
imul
lea
pop
mov
icebp
insl
popa
inc
mov
cmp
xor
ja
jbe
daa
inc
xchg
and
scas
mov
mov
lods
addr16
xor
sbb
adc
or
or
push
dec
cld
or
pop
cli
out
mov
add
cmp
fsubrs
lods
adc
pop
out
lock
push
jl
pop
sbb
push
mov
ja
ffree
push
loope
push
sbb
xchg
push
cmp
sub
and
and
or
jl
test
xor
add
add
cltd
sub
inc
in
lods
insl
xor
push
lds
repnz
out
lea
fld
or
xor
cmpsb
cmp
dec
aad
jmp
jne
mov
xor
pusha
subb
and
movsb
cltd
or
clc
mov
push
fcomps
mov
lds
xor
test
add
cmp
fwait
sub
cmp
or
sbb
incb
mov
cmp
cli
test
cmp
inc
aaa
push
jmp
dec
shl
cs
lret
popf
adc
sub
hlt
mov
repz
mov
jp
repz
adc
test
mov
or
je
imul
inc
mov
jge
add
imul
loop,pn
pop
inc
and
xchg
cmp
fisttpll
std
push
out
jp
fisubs
dec
adc
inc
frstor
repnz
mov
dec
cltd
ljmp
add
mov
push
or
xchg
xchg
xchg
fstpt
sub
pop
out
fistpll
cmp
insl
hlt
int
imul
adc
mov
mov
lock
test
es
inc
jns
cwtl
mov
jnp
or
test
lret
test
mov
push
loope
cld
dec
pop
popa
cwtl
loopne
lcall
jno
mov
rcrl
mov
test
cld
aaa
incb
or
mov
inc
fildl
ja
jle
aas
add
pop
test
push
pop
sti
loope
fcompl
add
push
dec
inc
add
pop
inc
pop
cmp
loop
movsl
call
xor
call
in
andl
lods
cmp
out
adc
mov
sbb
cmp
loop
mov
pop
and
and
std
mov
pusha
insb
cwtl
dec
xchg
mov
cld
sub
or
ljmp
add
sarl
xchg
push
adc
push
mov
xor
xor
mov
xchg
mov
call
jo
dec
dec
inc
or
lahf
cmp
adc
xchg
test
rcrl
xor
pop
cmp
das
adc
fcomps
mov
push
cld
adc
test
mov
ljmp
mov
lcall
xchg
sahf
insl
xchg
movsl
enter
cmp
sarl
jle
lcall
das
bswap
mov
hlt
jg
lret
cld
cmp
push
fisubrs
cs
addb
dec
or
mov
add
mov
cltd
or
arpl
push
sbb
sbb
xchg
mov
dec
mov
mov
push
cmp
jo
jmp
mov
ljmp
dec
in
push
xchg
fistps
addb
int
outsl
daa
bound
sbbb
insl
push
inc
les
daa
in
rcll
sbb
stos
jg
out
js
sub
push
xor
push
push
or
cmpsb
mov
jne
fadd
cmp
sub
ret
std
mov
mov
cmp
bound
adc
andps
mov
stos
scas
jne
daa
and
add
clc
push
int3
mov
push
jg
xor
dec
mov
daa
sbb
shrl
shrl
xchg
sub
insl
mov
push
fmul
insl
test
jg
stos
xor
hlt
sahf
scas
sub
addr16
repz
fisttpl
jg
sbb
jg
mov
xchg
repz
cmp
out
jbe
outsl
outsl
lods
test
stos
stos
sbb
lret
inc
loop
outsl
in
ret
sbb
dec
rclb
mov
xor
mov
icebp
jecxz
push
xchg
xor
test
push
divb
ss
lret
jmp
mov
jge
inc
loope
lret
and
mov
inc
roll
call
rclb
shll
cmp
mov
andb
std
dec
inc
call
dec
rcr
cld
shl
pop
std
push
and
popf
fistpl
dec
mov
fisttps
pop
je
cmp
inc
push
cs
mov
mov
add
pop
int
jno
ret
aaa
js
cwtl
jge
stos
mov
pusha
sbb
cmc
mov
mov
outsl
cli
mov
and
imul
cltd
mov
and
pop
loopne
mov
shrl
add
stc
popf
out
mov
in
adc
xchg
jne
inc
hlt
sub
lret
test
clc
inc
lods
mov
add
pop
clc
decl
xchg
movsb
testb
dec
lods
mov
inc
dec
add
ljmp
dec
mov
shrb
inc
scas
stos
dec
aam
jg
test
lock
cwtl
bound
adc
xor
into
ljmp
or
lcall
dec
adc
in
dec
aaa
enter
sbb
jbe
mov
inc
fs
push
lahf
int
jns
xor
out
pop
mov
sbb
sub
inc
sbb
les
pop
fcomp
clc
jne
dec
mov
sub
popa
sbb
lahf
repz
movsb
or
fists
sbb
loopne
sub
iret
xchg
mov
ja
mov
mov
jbe
out
les
imul
into
negl
inc
std
nop
dec
outsl
jl
rorl
mov
inc
add
jbe
lahf
faddl
cmp
dec
mov
pop
add
pop
mov
sbb
inc
sub
dec
scas
push
add
mov
sbb
cmpsl
add
js
loope
push
xchg
mov
or
shlb
add
subb
lds
or
vmovmskpd
adc
add
rorl
dec
jecxz
lea
pop
push
pop
push
push
push
nop
popa
stc
insb
in
push
loop
outsb
dec
cmp
frstor
cli
push
push
into
pop
andb
xor
mov
cmp
cmp
push
add
fists
arpl
insl
or
out
clc
sub
dec
cmp
movsb
insb
movsb
and
fcomp
push
or
inc
popf
ds
lret
fst
insl
cmc
xor
mov
jle
jo
shrb
nop
cmp
ret
pop
push
jp
cs
sub
gs
jp
fildll
jmp
es
and
outsl
insl
rorb
dec
cmp
cmpsb
popa
add
loope
insl
and
xor
sbb
iret
dec
inc
add
or
jl
cli
xchg
pop
fadds
es
loopne
rolb
decl
sbb
es
fs
inc
jecxz
ljmp
aam
sub
rcrb
jnp
add
and
enter
add
and
dec
jae
mov
mov
cmp
out
pop
mov
or
mov
andl
fimull
das
dec
outsb
shl
jae
mov
mov
cld
jmp
stos
pop
xchg
call
fcmovu
aaa
ja
push
dec
cmc
std
aas
clc
in
in
xchg
mov
sbb
xchg
sbb
psrld
nop
icebp
iret
pop
add
mov
mov
int3
sub
add
popa
sti
dec
xchg
or
add
mov
adc
insb
jno
je
and
out
push
xchg
test
dec
shrl
cwtl
imul
mov
mov
out
lcall
add
pop
xchg
rorb
add
ret
mov
pop
cmp
lahf
inc
nop
faddl
pop
mov
mov
loopne
dec
lea
jl
in
dec
pop
les
nop
outsl
dec
inc
xchg
movsb
testl
push
cltd
call
in
in
mov
popf
dec
mov
xorl
mov
mulb
xchg
iret
scas
subl
cmp
mov
sub
clc
fistl
or
repz
jl
lds
stos
packsswb
push
out
mov
pop
add
adc
sub
insl
cld
repz
int3
lea
test
and
jecxz
xchg
mov
sub
inc
pop
call
mov
imul
xor
mov
jl
test
or
ja
xchg
movsl
cmp
jo
xchg
adc
add
insb
cld
jnp
add
pusha
jg
sbb
mov
add
jg
jo
xchg
sbb
movsl
pop
push
dec
in
jbe
incl
and
adc
cmp
mov
nop
les
das
or
mov
jg
fcmovnu
mov
nop
sbb
scas
or
lcall
lock
sahf
mov
jno
and
rcrb
sub
adc
cmp
dec
sbb
jge
sbb
sbb
rolb
push
cmpsl
addr16
dec
hlt
push
aaa
std
jl
inc
adc
xchg
jae
and
adc
lcall
int
cwtl
inc
sti
mov
jg
mov
and
sbb
loop
and
dec
bound
adc
rcl
ss
or
lret
push
popf
pop
fs
call
shlb
test
pop
lahf
sbb
mov
cmp
jecxz
scas
sub
mov
mov
xchg
sti
pusha
add
mov
vmovsldup
push
fnstsw
push
xchg
mov
pop
test
ja
inc
adc
or
jo
adc
mov
inc
and
fs
push
xchg
hlt
pop
sbb
daa
repnz
sbb
roll
xchg
popa
loope
inc
xchg
lea
push
das
rcr
flds
push
flds
dec
pop
sub
push
mov
loope
xorl
xor
cmp
std
aaa
outsb
jns
jl
sbb
jo
push
test
mov
fildl
sbb
rcll
dec
test
jnp
or
cli
arpl
push
dec
inc
lahf
jle
call
fildll
cmp
and
scas
jg
push
ret
test
or
sub
sub
mov
inc
xor
cmp
orb
mov
ret
call
ficoms
mov
add
icebp
popf
das
sub
inc
inc
fdivrs
cld
in
jle
adc
or
xorb
sbb
mov
cmp
out
mov
push
mov
sbb
inc
pop
mov
lret
and
lret
nop
dec
dec
fbstp
pop
movsb
call
dec
loopne
lock
jecxz
scas
cmc
cmp
dec
push
cmp
mov
data16
scas
xor
lea
dec
pop
jmp
test
icebp
sub
cmc
xchg
inc
mov
jne
jmp
inc
shr
mov
outsl
jo
mov
loope
fwait
jp
aas
sub
idivb
add
xchg
or
outsb
inc
jb
adc
dec
mov
and
adc
pop
jbe
or
push
inc
out
or
scas
xor
enter
mov
loope
fwait
mov
add
dec
cli
fisttpll
icebp
push
mov
mov
dec
inc
cmc
pop
pop
sub
xchg
pop
daa
add
sub
dec
add
outsb
adc
sub
movsb
xlat
push
xchg
push
mov
ret
sub
rclb
xchg
popa
or
adc
mov
jo
jno
jo
inc
or
or
scas
or
add
or
std
pop
and
subl
enter
in
jno
pop
mov
rcll
pop
push
mov
mov
jmp
add
sahf
cmp
mov
xchg
jl
and
call
adc
in
and
jbe
mov
subb
and
inc
loope
popa
cmp
fucomp
or
or
outsl
loop
ficompl
sub
push
sbb
inc
xchg
outsb
subb
incl
and
add
pop
je
psubb
xchg
pop
and
add
loopne
xchg
dec
sbb
hlt
inc
enter
insl
push
adc
adc
dec
adc
subl
lods
inc
adc
jo
jae
mov
iret
xor
jle
stos
fmul
push
xor
shlb
fnsave
cld
push
pusha
push
cmc
adc
in
insb
sbb
or
dec
sti
scas
rcrl
adc
cmp
mov
rorl
mov
daa
lods
test
mov
addl
pushf
clc
push
mov
pop
and
cmpsl
lock
dec
jge
fildll
sbb
cmp
mov
clc
dec
cld
lcall
xor
jl
push
and
ds
pop
lcall
or
mov
pop
jl
push
sti
inc
icebp
adc
aam
sbb
repnz
xorl
and
inc
lds
popf
xor
inc
jne
cli
cmp
mov
mov
arpl
jns
inc
pop
pop
push
pop
sub
dec
mov
idivl
mov
repz
int
jns
jle
andl
push
push
adc
xor
or
aad
xchg
pop
aad
and
insl
sti
cmp
aam
ret
lcall
or
jg
std
notb
popa
rclb
adcl
xchg
xchg
push
mov
push
and
sbb
stc
cwtl
add
pop
test
popf
scas
js
loopne
jle
fwait
dec
outsl
fstl
pop
adc
inc
and
clc
sub
pop
lds
dec
mov
add
aam
mov
inc
adc
in
and
sti
adc
jo
punpcklwd
inc
lock
popa
xchg
iret
and
push
scas
ret
rorl
and
stos
shlb
addr16
fisttpl
jo
aam
shl
inc
cwtl
das
xor
cs
rol
out
cld
or
pop
add
and
dec
movhps
adc
adcl
test
inc
inc
and
inc
cmp
inc
cwtl
fdivp
ljmp
dec
hlt
sbb
insb
cmp
or
push
jge
incb
pop
xor
sti
adc
adc
mov
shrl
pushf
cmp
outsl
aad
ret
push
hlt
dec
fsubrs
add
and
loope
test
out
sahf
fwait
movsb
notl
test
xchg
sub
pop
lods
std
mov
mov
mov
loopne
andb
xchg
and
imul
pop
icebp
sub
outsl
lock
mov
lock
repnz
in
lock
adc
pop
dec
rcrb
ret
jle
or
inc
cld
stos
pop
xor
decb
jns
cmpsl
mov
daa
mov
add
fcoms
loop
loope
or
fmulp
xrelease
clc
add
in
les
inc
aad
dec
sbb
lcall
xchg
or
xor
adc
filds
add
add
push
in
sub
fmull
push
lock
pop
adc
mov
cmp
inc
add
cmp
fbstp
sbb
pop
ss
inc
sub
pop
cld
int
pop
out
push
mov
stos
into
inc
pop
dec
dec
pop
lock
add
dec
xor
mov
jbe
mov
and
ret
inc
lods
push
add
loopne
push
testl
add
dec
or
jbe
in
in
jno
pop
movsl
adc
sbb
sbb
mov
push
sbb
sbb
add
ret
es
adc
stos
dec
push
das
aad
sub
popf
add
outsl
scas
popa
shrb
pop
insb
push
jecxz
fs
xchg
mov
or
adc
mov
push
dec
xchg
cmpb
xor
inc
cld
sbb
inc
fcoml
add
mov
dec
sub
testl
orb
loop
sbb
sti
push
push
sub
xchg
mov
es
inc
cmp
mov
cmpsl
adc
nop
pop
pop
enter
jnp
aas
cmpsb
sti
arpl
adc
jnp
sbb
jno
ja
or
jp
jle
push
lods
lods
punpckhdq
push
and
mov
lods
lret
adc
bound
dec
mov
rolb
fdivs
mov
mov
or
cwtl
std
sub
fs
insl
out
pop
sub
jl
lock
push
xchg
mov
std
add
inc
lods
mov
inc
addl
and
cltd
jns
aas
sti
test
icebp
inc
cmp
jo
lea
lods
mov
nop
cmc
push
jecxz
dec
push
dec
pop
jo
addr16
lret
sub
mov
into
cmpsb
roll
mov
fldt
fldt
add
test
fwait
mov
sbb
xlat
mov
dec
inc
mov
push
cmc
mov
cwtl
dec
dec
je
cli
sbb
add
adc
pop
pop
push
movsl
mov
xchg
outsb
std
mov
int3
dec
ds
pop
sbb
aaa
clc
call
pop
pop
fnstcw
dec
adc
int
popf
add
or
stos
shlb
fdivs
fmul
cli
stos
aam
pop
cltd
imul
xorb
ss
insb
sub
fs
sbb
push
cmp
xchg
push
mov
mov
cmpsb
sbb
es
pop
xchg
push
sub
or
sbb
add
divl
jo
inc
and
std
push
imul
mov
mov
imul
testl
dec
sub
jo
sbb
jge
popa
aam
scas
mov
adc
push
mov
mul
jle
enter
sahf
mov
out
mov
nop
inc
mov
cs
inc
inc
shlb
fstpl
imul
push
imulb
push
std
roll
clc
ret
stos
stos
mov
fcompl
push
rcrb
les
inc
cwtl
sub
sarb
add
mov
adc
sub
xchg
jno
jge
lea
cmp
mov
add
inc
push
xchg
mov
ds
repz
push
adc
xor
aas
mov
dec
xchg
dec
sub
subb
xor
lock
popf
push
aaa
inc
test
mov
outsb
xor
enter
jno
stos
lea
mov
in
add
jle
pop
push
push
arpl
out
cmp
not
push
mov
aam
inc
and
cmc
xchg
cli
fcmovb
jne
xor
adc
xchg
xchg
out
add
jge
xchg
push
and
and
test
sub
nop
not
and
sbb
dec
inc
push
push
subl
pop
hlt
push
dec
out
sub
dec
adc
inc
sbb
add
or
fucom
cmpsb
sbb
hlt
or
inc
and
sbb
test
push
dec
cwtl
outsb
sub
pop
mov
mov
add
jg
aaa
mov
repnz
inc
and
jmp
cmc
xchg
popa
mov
pop
movsl
jae
xor
cmp
push
lahf
test
repz
ret
addr16
enter
ljmp
xchg
lss
sbb
jge
and
push
aad
dec
imul
outsl
ret
sbb
mov
call
imul
xlat
rorb
mov
push
insl
mov
sbbb
cmpl
jge
push
hlt
mov
sbb
pop
pusha
mov
lahf
xchg
pop
fisubs
push
sbb
test
sub
in
arpl
sbb
xchg
or
xchg
js
push
sbb
mov
lods
call
mov
lret
push
xchg
out
cmp
loop
inc
xchg
pop
mov
sbb
mov
pop
and
mov
ret
aaa
or
lret
sub
mov
ror
pop
mov
sarb
outsl
and
fisubrl
sub
stos
dec
sub
push
jmp
mov
insb
movsl
ss
mov
or
dec
clc
xchg
sbb
imul
mov
nop
scas
scas
cmp
and
movb
les
or
fisubrl
int
mov
and
int3
push
cmpsb
outsl
pop
xor
movmskps
sbb
sbb
les
rolb
std
mov
inc
pop
mov
push
ja
jl
mov
cltd
ror
or
movsb
enter
cs
cli
scas
push
aam
jle
fsub
xchg
mov
out
sarb
jmp
jle
scas
inc
and
mov
inc
jl
nop
cmp
nop
jp
mov
add
lahf
test
push
mov
movsl
ljmp
dec
mov
aam
orl
xchg
xchg
inc
add
dec
pop
cmp
mov
mov
push
mov
cmp
jno
or
test
xor
out
xchg
jp
ljmp
sub
ds
jno
rcl
add
sti
xchg
mov
and
in
imul
cmpsl
push
xor
cmp
inc
xchg
jo
push
mov
and
js
push
cmpsb
mov
sbb
mov
daa
push
aas
or
dec
imul
fistpll
aas
cwtl
or
insl
or
lahf
test
pop
mov
pushaw
cmpsl
aas
rorl
test
push
je
pop
add
pop
cmpsb
pusha
pop
or
jmp
dec
jne
adc
insl
cli
mov
hlt
mov
scas
xchg
mov
push
es
das
push
inc
fmulp
mov
push
sub
fadds
dec
mov
mov
add
add
push
push
imul
ja
bound
inc
shlb
mov
notl
add
cmp
jnp
ljmp
push
push
xorb
jp
sbb
cs
lahf
add
fidivl
aas
mov
insl
inc
repnz
adc
in
jo
sarl
jb
pop
mov
pushl
push
cmpsb
push
lds
outsl
sbb
popf
sub
int3
jbe
add
aaa
outsb
lea
les
pop
mov
cs
add
cmp
add
dec
adc
test
popa
mov
add
dec
push
ljmp
outsl
mov
aaa
push
ja
or
mov
filds
jl
clc
test
aaa
loopne
cltd
stos
fidivs
fwait
mov
popf
jno
rcrl
stos
sbb
arpl
lret
jecxz
xchg
test
outsl
ret
mov
mov
and
lods
mov
cmp
mov
das
popf
mov
pop
dec
repnz
and
and
rcr
daa
mov
hlt
sbb
push
clc
fistpl
insl
dec
cld
jbe
jge
ss
fstps
fmull
rorb
sub
pop
je
mov
shll
test
jo
mov
inc
jae
pop
insb
popf
in
clc
xor
rorb
movsl
sbb
scas
mov
xlat
adc
pop
sub
mov
call
add
add
add
lret
push
pop
hlt
mov
subl
cmp
cmp
loop
imul
jne
cli
lods
repnz
rclb
mov
mov
lock
sahf
shrb
mov
pop
jmp
xorb
add
in
ret
cmp
or
push
dec
pop
jg
pusha
mov
lret
bound
mov
mov
push
push
hlt
sbb
jnp
call
dec
xchg
jo
mov
cld
inc
push
or
sti
loopne
mov
loop
test
cmp
pop
jmp
int
or
mov
cmpsb
jns
int
cmp
pop
adc
test
mov
and
call
cli
ds
inc
push
icebp
rcr
aas
mov
cwtl
pop
stos
mov
jns
dec
jecxz
lea
dec
push
inc
push
push
bound
fcmovne
jg
les
add
push
and
pusha
inc
fs
inc
push
outsl
pop
clc
dec
pop
sub
fadd
xchg
call
int
jmp
lret
aam
loope
sbb
sahf
aad
sub
cmp
out
mov
insb
mov
mov
scas
push
lcall
inc
imul
cmp
xchg
mov
iret
or
push
outsb
popa
aaa
sub
push
lahf
repz
jmp
sub
pop
out
inc
sub
dec
push
scas
addl
or
adc
mov
sub
cmp
inc
out
mov
ja
call
aas
mov
xchg
loopne
adc
fcomps
mov
jae
xorl
out
dec
xchg
pop
xor
imul
jae
jo
nop
mov
dec
dec
xor
lahf
push
xchg
push
push
xchg
pushf
mov
mov
adc
jl
push
pop
fsubrp
outsl
jp
cmpsl
test
inc
jge
movsb
jne
jns
inc
std
std
xchg
outsb
mov
addr16
sti
add
addr16
gs
mov
les
push
pop
dec
or
push
jae
mov
pop
cmpsl
fimull
pusha
cli
mulb
pmaddwd
rorb
repnz
mov
or
imul
lock
dec
arpl
or
mov
mov
mov
sahf
dec
mov
sbb
pop
mov
xor
add
notb
inc
xor
cmp
push
inc
or
aam
aam
pop
roll
es
or
add
push
fdivrl
mov
adcb
pop
int3
add
lock
and
or
mov
clc
sub
mov
sub
adc
and
jp
mov
stos
sub
add
cltd
mov
lds
jb
in
repz
mov
fdivs
mov
scas
in
add
dec
sub
js
pusha
push
faddl
push
clc
lea
xor
inc
loop
jmp
outsb
jb
pushf
dec
inc
push
push
mov
sub
adc
pop
addl
clc
outsb
xchg
or
adc
lock
cmp
bndstx
and
shrl
out
pop
lret
xor
push
jg
das
inc
jg
jo
xchg
movl
xchg
sbb
hlt
in
push
sub
rorl
sbb
add
or
rcll
xor
add
pop
mov
ss
jo
fs
push
insb
xchg
fnsave
stc
dec
sbb
mov
sahf
adc
ja
inc
lahf
dec
lock
nop
loope
push
test
ret
aas
mov
rcrl
inc
jp
repnz
and
adc
lods
fisubl
mov
faddl
push
addb
inc
push
add
add
mov
add
adc
add
sbb
cltd
adcb
xor
loopne
pop
inc
lock
repnz
xor
loop
cmc
adc
sbb
or
sbb
mov
sub
jne
xor
fistl
insb
ficompl
out
xorb
cld
adc
push
ds
out
shrb
cmp
and
sbb
int3
adc
icebp
and
inc
call
mov
into
cmp
mov
cmpsl
dec
or
ss
sbb
adc
push
cmp
xor
fcoml
mov
dec
fwait
pop
dec
push
pusha
out
mov
cli
test
jp
lret
ret
mov
or
add
jl
sub
popf
insb
loop
mov
jbe
sbb
adc
push
xor
cmp
jo
sbb
cwtl
call
cmp
out
out
ljmp
daa
insl
and
lcall
in
pop
mov
out
sub
fwait
int
in
rcll
imull
adc
xchg
mov
out
cmp
adc
and
mov
sub
pop
jae
popf
pop
test
jae
lock
pop
mov
pop
cmp
dec
cld
not
pop
jp
cwtl
stos
icebp
xor
or
bound
push
and
call
fnstcw
add
cmp
shrl
bound
cmp
xchg
adc
add
pop
push
icebp
jecxz
pop
arpl
fdivrl
fsubrl
jg
xchg
mov
push
aad
xchg
es
aas
test
push
jno
scas
scas
ja
mov
inc
mov
clc
push
push
loop
inc
ss
addl
or
mov
push
mov
rclb
popa
push
push
pop
or
dec
scas
jmp
pop
xchg
sub
or
mov
jne
jecxz
test
add
dec
mov
ds
push
sub
test
mov
leave
inc
pop
sbb
inc
sbb
repz
std
das
sarb
test
cs
add
inc
sbb
loope
aad
push
pop
in
idiv
push
mov
outsl
or
ret
test
aam
orb
test
mov
xchg
push
inc
inc
cli
aas
ret
shll
mov
push
loop
testb
out
push
inc
hlt
jnp
scas
pop
fnsave
push
xchg
fcmovu
iret
icebp
sub
pop
loopne
ret
aad
ficoms
and
add
jge
xchg
ja
mov
mov
lods
xchg
jbe
mov
xchg
adc
pop
sarl
and
dec
insb
cmc
mov
in
lods
xchg
neg
jp
fadds
push
lret
jb
xchg
in
jb
pop
scas
pop
arpl
in
pop
sbb
pop
and
pop
outsl
xor
inc
fs
inc
mov
fs
mov
sbb
adc
je
push
add
or
lods
stos
jle
mov
mov
out
fwait
mov
inc
pop
dec
mov
push
stc
clc
ljmp
jno
std
mov
shlb
cs
insl
loope
and
js
dec
mov
jbe
insb
dec
mov
push
popa
add
imulb
push
xchg
test
push
mov
sbbl
mov
lds
xchg
push
jp
mov
inc
cmp
mov
mov
push
mov
gs
loop
iret
push
lock
mov
push
adc
das
out
mov
mov
dec
rcrl
std
or
popa
or
mov
test
dec
mov
sub
add
jle
dec
and
mov
xlat
repnz
dec
xor
call
and
sbb
aad
std
filds
xchg
stos
decl
xchg
push
push
push
movups
push
dec
mov
mov
mov
adc
ja
loop
in
mov
or
stos
adc
loopne
inc
aam
mov
bound
jle
ret
mov
and
shll
je
push
jne
cmp
and
fdivrs
cmp
in
push
mov
xchg
pusha
fcmovnu
mov
add
fwait
pop
and
rcl
pop
add
push
rcr
xor
cmp
lds
rcll
mov
fistpll
sbb
jne
mov
stos
jg
cmp
pushf
stos
nop
in
jecxz
add
inc
test
pop
ljmp
leave
xchg
out
inc
cwtl
push
pop
mov
subb
dec
shlb
dec
or
ljmp
jnp
or
lods
cli
lea
push
sub
mov
sub
outsl
fisttps
repnz
cmp
sub
shlb
dec
lahf
lods
ja
mov
mov
cld
inc
insb
test
sbb
pop
or
nop
in
add
aaa
outsl
sbb
dec
cmp
xchg
cmp
dec
rorb
cld
addb
std
ret
mov
xlat
xor
subb
mov
sar
and
mov
js
adc
jg
dec
imul
xor
decl
and
fisttpl
fbstp
mov
insl
inc
gs
cmpb
cmp
and
mov
testb
mov
mov
stc
leave
mov
mov
mov
aam
fldenv
sub
add
inc
aas
pop
js
pop
mov
and
mov
jo
nop
pop
push
push
das
mov
roll
push
cmpsl
dec
loopne,pt
nop
adc
decl
mov
or
aad
inc
inc
xor
adc
pusha
and
xor
pop
pop
push
sbb
pop
mov
int
cmp
mov
mov
addl
mov
xor
enter
cmp
loop
outsb
inc
aaa
pop
out
insl
test
cmp
cmp
lret
outsb
sub
icebp
jge
jns
in
inc
pop
push
addr16
cmpb
pusha
sub
mov
movb
int3
and
xor
jmp
mov
cmp
ss
pop
inc
adc
ret
mov
mov
ja
xorb
repz
jmp
mov
mov
jns
js
lods
jg
add
jbe
stos
stc
mov
and
xor
sbb
loopne
cli
sbb
js
or
or
pop
push
addb
dec
out
mov
sub
inc
in
icebp
sub
stos
arpl
cmpsb
sub
mov
xchg
movsl
xchg
push
sahf
or
inc
fcomi
jmp
and
sti
mov
xor
sbb
lock
inc
aad
imul
in
or
pop
pop
add
imul
cmpsb
inc
push
stc
and
cld
push
insb
in
jge
loope
loop
sub
aam
dec
or
mov
je
jb
out
mov
in
je
in
call
or
outsl
dec
lds
jg
adcb
shll
ret
insb
mov
ret
dec
inc
outsb
cmp
push
cld
and
and
jne
sub
pop
mov
ljmp
cs
sub
inc
fistpll
jne
cmp
jmp
mov
enter
das
add
mov
cmp
jg
and
in
xorl
and
call
or
mov
cmp
pushf
cmovl
mov
jle
pop
cli
adc
mov
jl
jno
mov
mov
xchg
insl
mov
or
or
rorb
mov
sahf
add
mov
cli
or
call
mov
inc
pop
outsb
adc
sub
lds
jle
mov
xchg
cld
insb
sbb
xchg
pop
sub
mov
inc
cmpsl
pop
rol
sbb
clc
push
mov
jb
jo
inc
rorb
add
loop
rolb
xorl
adc
cmp
push
jl
sub
aas
inc
pop
add
fsubl
sub
mov
bound
push
cmp
outsb
pop
mov
dec
in
add
je
fnstcw
inc
jg
sbbl
pop
inc
inc
outsl
xchg
cs
es
mov
arpl
mov
xor
fadd
adc
jne
sbbb
inc
sbb
inc
dec
or
mov
add
dec
insl
mov
pop
mov
addb
inc
dec
pusha
mov
pop
fmulp
insb
loopne
pop
sbb
add
cmc
jae
push
sub
adc
cmp
xor
ljmp
mov
pop
insl
mov
js
push
in
xor
mov
lahf
sarl
orb
cmp
sahf
xor
inc
jae
jno
mov
push
jg
mov
fwait
sub
mov
testl
aaa
cmp
dec
pop
xor
andb
idiv
call
cmp
repnz
aam
arpl
jae
mov
lock
test
jg
rol
loopne
decl
push
int3
mov
adc
mov
sbb
js
pop
ljmp
mov
mov
icebp
sbbb
pushl
xchg
cmp
imul
xchg
jnp
sub
and
push
fidivs
add
cmpsb
sub
in
sub
push
aaa
mov
in
or
jo
adcl
out
in
and
mov
jo
lock
sub
test
outsl
mov
push
jg
or
jl
cmp
jg
push
outsl
ud2
xchg
xor
adc
test
cmp
pop
icebp
pop
fs
pop
mov
repnz
insb
mov
mov
stc
loop
outsl
in
push
add
inc
xchg
test
pop
pushf
add
mov
inc
sub
icebp
pop
cs
scas
and
lock
addb
push
ret
pop
call
cmp
dec
cmc
in
loope
addr16
xchg
pop
sbb
cmp
adc
lea
rorl
lods
jb
and
jbe
dec
push
jle
and
paddb
aas
and
test
add
push
or
fwait
jne
mov
dec
xor
cmp
das
and
mov
mov
loopne
in
insl
jecxz
scas
stos
int3
stos
push
or
popa
jge
ljmp
mov
sbb
fdivs
mov
out
mov
inc
inc
rcll
aaa
fdivrl
pop
adc
jnp
add
push
sub
add
ljmp
mov
iret
les
mov
mov
xchg
cli
inc
dec
mov
call
fcoms
iret
xchg
pop
sbb
dec
dec
mov
sub
pushl
inc
sbb
mov
pmaxub
out
call
fisubrl
aaa
add
sbb
mov
outsb
mov
stc
je
mov
xchg
mov
int
mov
bound
inc
jne
testb
out
sub
ljmp
inc
push
sbb
imul
sti
ss
pop
dec
add
inc
sbb
adc
rorl
sbb
xor
andb
dec
push
in
movsl
cmc
leave
cltd
mov
mov
mov
mulb
sbb
aaa
xor
pop
jge
sarl
mov
dec
mov
inc
inc
pop
fidivl
out
call
dec
mov
shrb
or
xchg
and
cmp
adc
imul
fbstp
xchg
pop
add
mov
subl
add
xchg
fs
cmp
int
test
jle
arpl
or
jnp
mov
cmc
push
xchg
js
xor
mov
mov
jg
mov
je
xor
push
aam
loopne
push
out
test
xor
lock
mov
xchg
xor
inc
cwtl
mov
cltd
add
call
jbe
rorb
movsl
scas
add
test
mov
xchg
add
test
and
fistpll
jo
lea
mov
mov
inc
imul
sbbb
ret
adc
cmp
lcall
mov
mov
movsl
xchg
imul
scas
or
fimull
ljmp
pop
push
lods
les
cmp
mov
mov
push
jo
add
lods
dec
push
lahf
sbbl
insl
push
jg
sub
xor
xor
mov
test
sub
inc
xchg
pop
mov
pop
iret
xchg
dec
dec
sbb
mov
popl
or
test
cli
lea
enter
xchg
push
mov
scas
mov
sub
lods
and
cmpsl
and
les
push
fisubs
outsb
jmp
sbb
xchg
push
aas
push
mov
or
dec
cmp
scas
pushf
inc
add
test
sbb
clc
dec
push
movsl
gs
jbe
sbb
inc
sbb
insl
dec
shrl
sbb
shr
jmp
in
mov
movsl
rcrb
lods
sub
push
push
cmp
test
and
out
aaa
sbb
sbb
push
mov
jne
outsl
or
xchg
mov
inc
xchg
outsb
loop
pop
xchg
pop
dec
shl
xor
pusha
push
les
inc
jnp
scas
push
add
neg
jge
scas
ljmp
adc
test
fldt
xor
xchg
cld
call
insl
mov
movsb
sbb
lahf
dec
or
out
repnz
fidivl
pop
ljmp
sbb
dec
push
pop
pop
sbb
mov
sti
push
cmpsl
adc
std
inc
mov
xor
jg
cmp
cwtl
rcl
or
inc
add
rol
fwait
push
lock
or
lea
xchg
mov
push
aam
xchg
add
jle
mov
xor
push
mov
add
incl
xor
mov
xchg
sbb
xchg
push
fistpll
bound
xchg
js
incl
mov
enter
cmpsl
mov
fstpl
xchg
popf
fwait
sbbb
add
fildll
divl
dec
xor
dec
jns
dec
add
or
mov
jne
add
fmuls
xlat
cmp
xorb
mov
add
popf
dec
mov
lods
sbb
sbb
push
mov
mov
mov
lret
leave
cmpsl
cwtl
adc
xor
lods
in
popl
push
aas
testb
or
int3
pop
add
and
jo
inc
fnclex
jmp
jle
clc
rolb
adc
dec
lock
inc
dec
push
dec
sbb
iret
ficomps
and
lock
jbe
and
or
adc
lahf
fld1
hlt
enter
xor
mov
fwait
jae
rclb
add
sbb
and
lea
in
xor
aad
mov
lock
inc
sub
sub
add
and
in
or
xchg
inc
mov
stc
stos
add
mov
mov
or
and
jns
or
pop
je
cmp
inc
dec
lock
stos
incl
pop
cltd
fnstsw
sub
sub
imul
bound
push
sbb
or
loop
sbb
les
lahf
xor
xchg
pop
adc
fiaddl
fwait
test
sub
lret
add
adcl
ljmp
icebp
lods
int3
mov
dec
jmp
aaa
arpl
inc
jle
pushf
fcmovnbe
push
aam
stos
faddl
sub
push
pop
rorb
jmp
and
adc
pop
xchg
call
lds
sbb
adc
xchg
into
outsl
fwait
iret
and
rcr
insb
psllw
jae
add
mov
lods
adc
dec
popf
lret
xchg
iret
adc
popf
jno
dec
mov
and
and
mov
xorl
fwait
push
add
xor
add
sub
dec
push
lods
aam
insl
jae
push
rolb
xor
add
mov
push
cmpsb
lret
aam
mov
subl
mov
int3
sbb
mov
mov
sub
dec
or
lds
add
faddl
les
push
por
jp
and
push
ret
bound
jb
push
cs
bound
sbb
test
sub
stos
sbb
inc
xor
push
fcmovnbe
std
or
fcoms
mov
cwtl
mov
mov
scas
daa
jle
cs
popf
and
dec
push
push
frstpm(287
int
add
std
dec
and
ss
add
leave
das
ffree
cmc
sti
push
lds
out
or
lcall
mov
decl
ficoms
adc
out
loopne
in
push
movsl
rcrb
mov
scas
lds
or
mov
fstps
cli
or
cmp
pop
adc
divb
lret
mov
call
mov
stos
mov
aam
sub
cmpsl
lcall
push
jle
sub
push
fiadds
xlat
and
cmpsl
mov
mov
icebp
leave
dec
adc
test
out
xor
orb
xchg
loopne
ljmp
pop
repnz
add
mov
cli
mov
pop
loop
push
xchg
call
clc
inc
int
mov
pop
mov
fwait
adc
sub
push
lods
push
jb
add
xchg
les
add
aam
movsb
push
adc
int
pop
sti
mov
mov
mov
fstpl
push
jg
push
faddl
cmp
subl
std
aas
dec
test
rcr
sub
jp
mov
mov
loop
mov
add
es
xor
sahf
lods
jne
sbb
cmc
inc
in
xor
mov
popl
aad
stos
jg
negb
das
mov
jecxz
dec
sbb
imul
fistps
outsb
out
cmp
mov
inc
loop
cmp
test
ret
adc
test
jbe
outsb
aaa
sbb
and
test
mov
jle
mov
sbb
movsb
insb
mov
nop
jno
nop
pop
xor
lahf
xor
dec
js
lret
xchg
orb
and
or
idivl
bound
mov
mov
or
ljmp
cs
sbb
cmp
subb
hlt
sti
push
pusha
inc
lret
loope
or
aam
shl
in
add
add
nop
ja
shlb
xor
fnstsw
inc
dec
or
ja
neg
mov
xacquire
lds
or
sbbl
repnz
sbb
or
sarb
je
adc
xchg
hlt
and
loope
sub
push
or
xchg
icebp
aam
push
js
loopne
add
flds
rorl
lea
jae
subb
mov
push
mov
cmc
jge
mov
test
mov
cmp
jg
aaa
das
je
push
jl
push
add
add
in
lcall
xchg
xchg
mov
jl
into
enter
jae
xchg
xor
xor
outsl
aam
cli
rol
mov
pop
mov
jmp
cld
idivb
es
cmc
cmp
orl
div
aaa
ret
add
ret
sbb
cmp
or
outsb
mov
cmp
sti
mov
inc
xorb
fstpl
adc
imul
push
mov
repnz
push
fistpll
stc
popf
insb
xor
xchg
js
decb
mov
imul
jo
mov
popa
or
jecxz
arpl
ja
das
iret
adc
sbb
adc
outsb
cwtl
subb
add
insl
ljmp
sub
push
or
lock
or
pop
stos
in
and
sub
mov
subl
dec
sub
pop
xor
pop
or
inc
bound
aaa
jg
inc
orb
inc
jnp
aas
inc
jb
jge
clc
into
testb
dec
das
xor
inc
push
lfs
sbbl
test
xor
cmp
idiv
inc
sbb
pop
inc
push
fcomp
adc
repz
push
das
adc
shlb
movsl
jo
dec
lods
pop
aaa
call
aam
inc
jg
and
pop
push
mov
adc
jg
not
rorb
sub
sti
jo
adc
fscale
xchg
inc
inc
cmp
stos
jecxz
xlat
inc
or
jns
clc
daa
cmp
cli
jecxz
xchg
cmpsl
pop
push
in
sbb
repz
mov
mov
jge
inc
xchg
inc
and
push
hlt
outsl
xor
mov
out
or
sti
adc
test
xchg
std
iret
cmp
movsb
flds
mov
cmp
jmp
cmpsb
mov
movsl
adc
sub
and
cmp
in
hlt
mov
fbld
inc
jno
shlb
fmull
cmp
shlb
roll
push
inc
jne
gs
cmpsb
mov
test
mov
inc
pop
bound
add
push
inc
sbb
mov
lea
mov
insb
pop
xchg
mov
cmpsb
pop
into
cmpb
cmp
into
addr16
xchg
mov
into
addb
dec
add
clc
notb
jns
adc
sbb
incl
jo
mov
xor
cmc
dec
outsl
mov
loop
pop
dec
pushf
pop
push
addr16
iret
cmp
jbe
cmp
adcl
dec
test
xchg
push
stos
outsb
cmp
xchg
ss
sar
mov
or
std
fistl
arpl
out
pushf
push
les
cmpl
xchg
or
das
add
aaa
adc
add
sbb
aaa
ss
lock
orb
inc
scas
fcomip
and
sbb
in
mov
mov
shlb
loop
es
adc
aaa
enter
xor
lods
mov
xchg
cli
ret
shrb
xchg
scas
data16
testb
or
mov
arpl
and
and
jge
mov
fcmovu
or
xchg
lods
stos
sbb
pop
rcl
lea
and
mov
aaa
jmp
adc
jg
mov
pop
lcall
or
scas
js
sbb
dec
pushf
push
pop
cmp
jge
stos
aad
mov
cmpsb
xchg
xlat
rcll
cmp
dec
sbb
lods
loop
cmc
testb
orl
pushw
cmp
sbb
jns
movsb
cmpb
ja
sbb
ja
pusha
rolb
sahf
inc
aam
test
pop
mov
pop
mov
je
pusha
adc
mov
inc
inc
sub
data16
ljmp
lcall
filds
adc
mov
cmpsl
xchg
xchg
or
loop
scas
sub
les
push
push
sbb
fadd
fidivl
mov
fs
rorl
cmc
ficompl
mov
loop
push
xchg
into
insb
lds
mov
mov
gs
mov
xor
or
aas
cmc
add
mov
sbb
mov
arpl
rol
addr16
pop
int
adc
mov
fimuls
and
pop
adc
subl
pop
mov
gs
aad
xor
push
pop
aaa
fcmovu
mov
mov
xor
dec
inc
cmc
movsl
fistl
ljmp
out
or
cmpsl
fcompl
and
int
dec
cmc
aam
mov
add
sarb
sbb
sbb
and
test
out
hlt
int3
push
adc
in
rorl
into
bound
add
int3
and
xchg
outsl
test
fidivl
sbb
es
cmc
test
or
pusha
test
scas
dec
xchg
int3
lret
cmp
int
dec
push
rorl
dec
push
mov
adcb
push
push
icebp
outsl
enter
fldl
pop
rorb
sbb
ret
inc
cld
xor
xor
dec
sbb
sub
inc
cmovno
fs
lock
insb
mov
inc
push
shll
push
mov
popl
repnz
or
fcmovne
jo
call
out
out
cli
and
or
add
fucomp
sbb
jmp
xor
in
lcall
ror
scas
adc
or
in
push
adc
std
repz
and
inc
push
add
jno
aam
pop
rolb
cmp
loope
call
add
test
add
call
mov
mov
and
sub
test
and
add
sbb
aad
ror
pop
lret
xchg
xor
or
add
and
or
add
cmp
stos
mov
and
rcl
int
shl
add
data16
jne
addl
sbb
outsl
jno
xchg
or
shrl
push
mov
mov
je
cmpsb
or
push
sbb
inc
jo
rorl
imul
das
push
jmp
inc
mov
addb
pop
lds
cmp
adc
mov
add
test
xor
cmc
dec
or
adc
inc
jmp
ret
and
push
xor
insb
xlat
scas
sub
in
xor
int3
cmpsl
js
lcall
push
jno
sbb
imul
jb
mov
add
and
mov
and
inc
push
cwtl
xchg
push
ds
jmp
push
scas
push
push
adcl
xchg
adc
leave
test
push
xlat
dec
add
loopne
jmp
or
nop
mov
imul
dec
nop
bound
scas
je
pop
or
sub
dec
mov
push
dec
push
test
and
jp
mov
jmp
fisttps
jno
popf
pop
dec
lock
sarb
inc
mov
dec
mov
add
pop
loop
aaa
loop
lea
outsl
mov
mov
inc
clc
shl
push
cli
outsl
mov
xchg
jmp
jne
imul
push
ffreep
fists
ret
gs
push
jae
popf
pcmpgtw
and
faddp
mov
push
hlt
enter
sub
sub
mov
push
les
cld
cmp
sbb
fs
cmp
popl
mov
xor
add
xchg
dec
inc
mov
xchg
adc
mov
add
frstor
jp
jo
pop
int3
loopne
or
lods
fwait
add
cwtl
dec
mov
lods
adc
inc
imul
in
hlt
idiv
negb
adc
xor
dec
adc
idivl
xchg
orl
ret
cmp
jbe
jecxz
pop
xchg
lret
dec
sub
aad
call
fstl
mov
jle
jp
pop
pop
test
sub
inc
sub
add
loopne
jne
mov
ret
out
nop
test
mov
out
inc
mov
mov
int
xchg
xor
into
ja
push
ffree
testb
roll
ficompl
cs
push
adc
mov
ds
jo
pop
arpl
jne
jmp
mov
test
or
ret
js
dec
dec
insl
insb
mov
shr
or
icebp
adc
push
scas
out
sub
mov
push
push
lea
or
ja
push
xchg
cmp
andl
adc
add
mov
mov
mov
push
scas
mov
loopne
cs
mov
inc
xchg
sbb
pop
add
mov
xor
fsubrs
jl
rorb
cltd
or
je
popa
sub
fdivrs
mov
and
fistl
mov
push
stc
ss
push
je,pn
mov
xor
icebp
cli
outsl
in
fistpl
int3
movsl
dec
dec
pop
mov
add
push
add
les
add
pop
cmp
cmp
cmpb
jb
sub
ret
jp
leave
lock
lea
fmul
lcall
stos
mov
mov
daa
xchg
sbb
fsubrl
add
xchg
pop
push
roll
mov
test
or
sbb
jg
testl
cmp
and
popf
push
arpl
mov
jmp
jae
cmp
pop
iret
cs
out
push
sub
mov
dec
leave
cmpsb
or
divl
in
xor
daa
lret
insl
int3
fsubrs
xabort
push
outsb
int
js
orb
js
sbb
stos
cmp
mov
test
insl
outsl
or
rcr
inc
sbb
adcb
push
adcb
jge
jg
cmp
sub
addr16
jne
fidivrl
mov
push
add
mov
cmpsb
and
fcomps
aaa
fs
lds
lea
pusha
fimuls
cmp
stos
lea
out
insl
mov
call
mov
in
les
add
cmp
mov
or
int3
and
or
pop
dec
mov
scas
mov
jp
jmp
cmpsb
sub
popa
pop
jmp
stos
mov
orl
out
sub
mov
push
xor
rorl
in
jmp
sbb
hlt
in
outsl
int
mov
or
in
add
outsl
xchg
adc
mov
orb
jne
andb
adc
mov
scas
ljmp
std
inc
pop
aaa
scas
sbb
pop
inc
pop
les
js
imul
add
repnz
jle
arpl
mov
jmp
loope
mov
cli
mov
fdivrs
dec
push
push
pop
jecxz
inc
addl
mov
aad
fisttpl
test
inc
lcall
pop
inc
lahf
jg
cmpsl
rclb
xor
sbb
enter
out
adc
xor
pop
lock
pcmpgtb
ds
outsl
out
mov
jmp
and
dec
lcall
test
push
pop
jne
ret
js
fsubl
inc
mov
ror
adc
push
sti
and
sbb
or
or
pop
sub
and
loopne
push
mov
ljmp
or
push
addl
scas
hlt
out
andb
mov
mov
push
xchg
shl
rcrl
xor
in
inc
roll
pminsw
int3
cmp
icebp
testb
sub
add
int3
pusha
idiv
fistpll
push
mov
gs
push
add
fmull
clc
pop
lock
or
jne
out
jecxz
rol
stos
xor
mov
xchg
cmpsb
aaa
sub
mov
nop
mov
imul
sub
push
xchg
loop
movsl
lods
das
ss
ljmp
fcom
jne
fsubs
loopne
and
popf
jbe
fidivl
std
lret
mov
push
fsubrs
daa
pop
pusha
push
mov
aam
jmp
mov
int3
pop
inc
pop
lcall
in
push
subb
inc
mov
push
cmp
cmpsl
jo
je
mov
push
imul
xor
mov
arpl
lea
insb
pop
xor
adc
and
les
jecxz
fidivs
adc
bound
mov
inc
pop
les
add
lock
test
cmp
movb
push
mov
inc
mov
xor
adcl
cli
or
mov
add
fstpt
xor
out
pop
cmp
inc
insb
jmp
mov
pop
fadds
mov
test
je
jge
mov
sub
dec
mov
xchg
cmp
mov
loopne
gs
adc
add
pop
ret
addl
mov
xchg
sbb
inc
mov
insl
jae
scas
push
js
sub
aas
jae
or
jo
adc
pop
and
or
and
mov
lods
insw
xchg
mov
ficoml
ficoms
in
cli
jae
std
into
sbb
push
push
clc
cmp
int3
out
hlt
pusha
pop
sarl
push
inc
cmc
test
push
jle
std
ljmp
les
dec
cmp
pop
sarb
ficoms
in
shlb
test
xchg
bound
adc
jg
adc
scas
insl
ret
jb
inc
cmpsb
clc
or
dec
stc
outsl
insb
dec
jno
loope
stos
fsubrl
inc
leave
dec
push
push
push
fs
push
sbb
jne
insl
test
or
fstpt
lahf
call
movsb
add
adcb
add
pop
xchg
mov
mov
push
lds
push
add
mov
sarl
mov
jno
and
loop
shll
pop
cld
mov
daa
and
shrl
dec
lock
lods
xlat
xor
fistpll
xor
aaa
subl
enter
mov
iret
and
or
or
cs
in
xor
lds
daa
sub
sahf
mov
ss
ds
cmp
leave
mov
shll
notl
sbbb
jge
cwtl
popa
jmp
or
nop
sub
pop
fistpll
push
mov
cli
adcb
ja
loop
je
ficoml
push
mov
push
xor
std
inc
test
mov
ja
push
and
cmc
fnstcw
cwtl
inc
push
or
pushf
lods
add
push
js
sub
aad
sti
fldl
cmp
and
sub
addr16
push
pushl
adc
jno
ret
decb
xor
insl
aam
inc
adc
push
sub
jo
add
int
ljmp
inc
and
shrl
aam
xor
or
push
frstor
pusha
lcall
mov
pop
scas
adc
push
loop,pt
xchg
push
add
loopne
dec
lcall
xor
push
and
cld
movsl
jae
xor
mov
xor
dec
jo
loop
add
sbb
adc
jae
push
mov
inc
pop
inc
push
cmp
aad
cmpsl
pop
lds
inc
xchg
jne
push
xchg
jb
cmp
inc
fidivl
jns
aad
inc
push
flds
xlat
fstpl
addr16
sub
xchg
sub
xchg
xchg
sub
xor
enter
pushf
mov
es
insl
hlt
addr16
pop
fiaddl
mov
mov
mov
push
push
jbe
dec
mov
fadd
jne
jne
mov
mov
mov
jb
lret
pop
dec
lret
pop
out
mov
out
xchg
sub
xor
imul
mov
push
sub
inc
pop
or
inc
aaa
mov
jne
or
pop
adcl
sub
mov
and
sub
loopne
movsb
lcall
shlb
das
seto
add
fldenv
and
sub
aad
dec
push
inc
and
rolb
xchg
outsb
shrb
lret
js
int3
addb
adc
push
pushf
dec
sub
sbb
movsl
rol
xlat
push
lret
inc
mov
roll
adc
inc
mov
sbb
jb,pn
js
dec
cmc
sub
mov
lods
or
dec
and
adc
push
dec
js
insb
mov
std
sarb
lods
xchg
push
and
push
lcall
jge
pop
push
cmp
mov
cmp
ficomps
js
inc
cld
outsl
filds
test
pop
cmp
jns
adc
xchg
push
or
rolb
adc
or
sub
add
inc
mov
adc
loopne
push
out
dec
pop
or
and
icebp
addr16
ror
and
add
push
into
dec
lcall
in
icebp
add
pop
or
ss
test
inc
push
pop
add
pop
bound
loope
ret
inc
jmp
and
push
iret
int
enter
lcall
xchg
push
add
mov
sub
sub
sub
xchg
xchg
aam
adcl
rorb
fildll
jnp
fisubl
add
pop
add
inc
or
sub
fcoms
cld
dec
and
or
int3
popl
subb
sub
xor
xchg
and
push
adc
mov
gs
dec
add
insl
shlb
rorl
xor
sbb
stc
add
loop
aam
push
test
add
and
dec
jb
add
lea
mov
bound
sub
or
fdivrs
mov
sub
jmp
clc
pop
mov
in
push
divl
jecxz
xor
jb
test
lock
shrb
or
adc
loope
lcall
pop
icebp
add
jecxz
loopne
out
int
sbb
mov
dec
jl
inc
dec
sbb
add
jge
out
mov
fmuls
adc
cmp
mov
mov
lods
loopne
jae
pop
xor
inc
push
in
sbb
enter
push
dec
inc
lods
cld
and
dec
push
pop
cli
pop
xchg
stos
outsb
mov
jg
fisttpll
subb
sbb
int3
and
insb
sbb
test
mov
sbb
imul
fcompl
fstl
daa
cmp
mov
push
sub
jmp
movsl
test
mov
add
add
loopne
test
jnp
sbb
dec
xor
xor
aaa
pushw
ltr
lcall
jge
lcall
cmp
shll
jg
ficomps
and
lods
push
xchg
jmp
test
jb
sub
dec
in
xor
nop
jecxz
inc
jae
xor
jb
pop
pop
pop
cld
and
call
out
sub
push
addl
f2xm1
cltd
jecxz
incb
lds
adc
hlt
xor
or
in
push
inc
jne
and
or
xchg
adc
and
or
inc
mov
xor
outsl
out
or
and
and
and
in
jmp
adc
dec
lock
das
dec
iret
lcall
xchg
lea
add
aad
pop
inc
adcl
out
stc
push
out
sub
xchg
add
sbbl
mov
daa
push
add
test
and
xchg
mov
and
dec
lock
inc
mov
pop
jb
int
or
jae
in
jl
xor
loopne
or
shrl
sbb
lock
shll
jecxz
pop
dec
shll
fnstenv
adc
cmpsb
call
dec
dec
mov
scas
push
fmuls
xchg
rorl
cli
lock
cmp
sbb
fdivrs
xchg
in
inc
aam
pop
sbb
in
dec
out
aaa
or
aam
mov
in
mul
fisubs
mov
outsl
inc
insl
xor
push
push
or
or
mov
in
xchg
pop
add
and
adc
and
and
inc
sub
sub
test
adc
add
lret
mov
cmp
adc
add
push
mov
inc
mov
movsl
dec
mov
add
mov
int
sbb
aas
icebp
mov
test
jmp
dec
or
cmpsb
and
pop
mov
add
adcl
cmp
sbb
jmp
add
add
test
xchg
mov
lcall
testl
loope
add
movsb
jnp
pushf
pop
fdivrs
or
lock
and
sub
add
sbb
and
andb
xor
adc
add
mov
mov
sub
push
mov
and
sub
push
mov
jno
jnp
mov
xchg
jg
fcmovne
nop
adc
add
xchg
xchg
rorl
icebp
ja
sbb
xor
outsb
stos
mov
mov
sbb
rcll
lds
lock
push
imul
test
cmp
sub
mov
jecxz
xlat
adcb
ljmp
jmp
adc
adc
inc
mov
xchg
mov
dec
xor
imul
pop
lds
sar
sub
or
jnp
ficoms
xchg
adc
add
dec
or
pop
js
shl
clc
dec
inc
test
pop
mov
icebp
cwtl
add
add
pop
call
aam
pop
xor
and
aaa
mov
or
cmp
pop
adc
repnz
lods
push
in
add
aaa
ljmp
cmp
mov
dec
mov
inc
mov
int
sbb
bound
and
je
adc
repz
fisubl
pause
mov
ret
and
mov
stc
cs
repnz
pop
xchg
sbb
in
or
jae
jbe
dec
cli
xchg
inc
insl
or
mov
in
xchg
jns
cmp
mov
jo
fcmove
cmpsb
aam
cmpsl
sbb
mov
and
ljmp
sbb
mov
shlb
adc
sbbl
hlt
shl
data16
dec
pushf
xlat
dec
test
push
aad
mov
shlb
icebp
adc
cmc
push
jl
testb
jg
sbb
xor
jbe
loop
dec
testb
cli
mov
mov
push
sarl
and
ja
pop
mov
jno
mov
and
cltd
add
push
test
dec
add
sub
js
sub
rorl
icebp
adc
out
or
push
adc
pop
and
repnz
cmp
fcoms
fadds
add
shlb
sub
fldt
int
lcall
test
fmul
lds
test
push
mov
stc
loope
sahf
mov
fdivr
dec
push
jno
andl
xchg
mov
mov
lret
push
leave
es
lock
dec
pushf
and
fmuls
dec
fsubrl
cld
mov
loope
inc
add
roll
loopne
push
add
adc
shrl
inc
pop
push
xchg
add
jo
or
in
mov
sbb
ret
iret
adcb
loop
pop
lret
pop
push
stos
sbb
inc
fucomp
lds
pop
fiadds
adc
loope
sub
inc
or
and
xor
dec
mov
pop
add
or
pop
call
roll
dec
rolb
fdivs
rcl
mov
mov
mov
fildl
popa
fldcw
add
add
es
repnz
shlb
dec
call
call
push
mov
addb
movsl
sub
popf
sbb
ret
sbb
fxch
mov
xor
arpl
or
push
push
add
scas
enter
pop
sbb
lret
or
and
inc
adc
testb
cmp
jp
insl
mov
lea
cmp
push
dec
in
push
sbb
add
imul
mov
bound
arpl
lock
push
cmp
insl
push
and
cmp
andb
ret
mov
popa
and
xlat
lahf
out
inc
mov
cmpsb
sbb
xchg
and
push
add
orb
fcmovu
dec
das
add
out
pushf
push
push
mov
jmp
push
loopne
lods
mov
add
and
push
jb
imul
jge
jecxz
mov
and
add
lds
in
scas
scas
pop
clc
imulb
add
ret
ds
add
jle
pusha
or
inc
sub
sub
push
mov
sbb
fbld
mov
fisubrl
ret
jns
inc
aad
push
mov
subl
add
xor
in
add
hlt
cmpsl
sub
inc
mov
enter
dec
inc
subl
call
mov
aad
ljmp
decl
scas
jle
rcl
scas
add
repz
daa
mov
fsubrl
xor
push
xor
push
mov
jg
lahf
or
adc
dec
aaa
rorb
gs
jg
push
push
mov
loop
dec
rolb
cmp
mov
insb
push
add
aaa
mov
jg
mov
dec
jb
sbb
sbb
or
mulb
pusha
pop
add
enter
ds
jmp
sbb
imul
and
lods
mov
loop
fisubrs
jae
test
incl
dec
jg
test
lods
jae
xchg
inc
jecxz
in
inc
pop
std
jl
sbb
xor
pop
cmpb
outsl
cmp
aam
icebp
cmp
addl
sarb
push
mov
add
cmc
ja
outsl
pop
cmc
add
mov
jmp
ljmp
cs
push
pop
push
bound
cmp
call
rorb
or
lret
or
and
pop
scas
mov
pop
push
ret
popa
mov
lods
out
rclb
xchg
pushf
adc
sbb
add
dec
test
pop
push
rep
shl
ret
mov
pop
push
fadds
test
pop
mov
sub
movsb
and
enter
mov
push
shrl
lock
jb
stos
aad
pusha
cli
cltd
ret
gs
adc
ljmp
mov
or
test
into
dec
mov
mov
inc
negb
add
ss
rolb
xor
incb
adc
inc
ja
fwait
cltd
fisubl
pusha
push
inc
out
enter
mov
pop
sub
jb
push
adc
jns
in
add
push
je
cmp
mov
fnstsw
add
ffree
fdivrs
push
mov
movsl
call
and
mov
mov
pop
mov
push
lods
mov
mov
push
mov
in
pop
inc
mov
adc
jmp
dec
xchg
mov
mov
outsb
sti
push
arpl
cmp
dec
xlat
or
sbb
jne
xor
loope
clc
inc
inc
inc
cmpsl
sarl
lret
push
outsl
add
add
dec
push
xchg
push
lret
mov
xchg
addl
fdivrp
fists
lock
insl
pop
push
lahf
push
loopne
pop
pop
jae
and
stos
xchg
add
loope
and
inc
jp
mov
pop
push
mov
fwait
mov
pop
push
adc
scas
jmp
push
das
lcall
shrb
push
test
mov
adc
es
mov
sbb
lahf
leave
subb
push
push
lret
add
pop
clc
inc
dec
popa
pop
mov
pop
push
or
inc
fdiv
test
add
loope
aaa
ljmp
xor
or
fildll
js
stos
lods
es
fmul
fucom
inc
cmp
ljmp
dec
aad
or
xchg
mov
aaa
cltd
xor
testl
pop
sbb
or
sbb
inc
cwtl
cmp
inc
fisttps
fildll
mov
sbb
cltd
jle
call
out
jl
push
mov
jg
mov
pop
fbld
xchg
das
mov
or
adc
cmc
push
mov
scas
lea
ljmp
jg
mov
dec
inc
mov
out
xor
pop
jbe
fisubrl
xchg
push
inc
push
jg
cmc
fildll
jp
cmpsb
ss
xchg
mov
xchg
sub
cmp
mov
jo
or
dec
adc
movsl
fisubrs
outsb
aam
bound
out
adc
cmp
lods
inc
cwtl
xchg
jo
test
faddl
adc
sbb
push
out
bound
sub
call
sbb
movsl
pushl
push
xor
fcom
push
ljmp
lods
mov
repnz
jne
inc
les
xchg
add
mov
cld
shrb
pop
hlt
popa
call
lea
enter
adc
mov
add
and
inc
leave
js
pop
mov
faddl
pop
or
jnp
lret
fcoms
mov
shlb
int
or
xor
cmp
dec
push
movsl
jl
push
sbb
mov
pop
mov
and
jp
pop
dec
inc
jg
mov
js
aad
sarb
sub
dec
fldt
push
adc
mov
cmpb
adc
fisubrs
inc
push
cwtl
xor
rol
out
jbe
dec
scas
push
cmp
cltd
xlat
mov
sbb
and
sub
bound
and
lock
sbbb
or
mov
jg
add
cmp
out
dec
pop
push
outsb
dec
cmp
cmp
pop
pop
mov
sub
xchg
jg
pop
add
mov
dec
and
mov
adc
mov
add
xor
movsbl
sti
inc
cmp
add
iret
shl
cmp
cmp
idivl
loop
sbb
movsl
loopne
inc
mov
cmpb
rorl
xlat
js
hlt
sbb
ret
lods
cwtl
std
leave
arpl
xor
fistps
inc
sbb
push
fsub
fucomi
sub
out
fldl
jp,pt
loope
sub
fdiv
and
inc
cmpsb
jo
or
out
push
leave
add
hlt
xor
lods
xchg
scas
mov
sbb
filds
mov
sub
xor
jne
push
mov
aad
jl,pn
dec
repz
xchg
call
jge
adc
dec
inc
sbb
mov
ret
popf
mov
dec
dec
adc
shrb
push
inc
fwait
jp
and
sti
pop
inc
sbb
shll
jo
mov
fistl
and
cmp
xor
in
or
push
pop
sub
pop
jo
sbb
and
sub
mov
into
into
push
call
dec
les
lahf
mov
push
adc
pop
fstpl
dec
inc
cmpsb
or
in
cld
stos
or
lret
arpl
int3
enter
mov
and
xlat
loopne
push
test
push
and
stos
jbe
pop
aaa
or
es
sub
xchg
sbb
rolb
fwait
cli
adc
adc
xchg
mov
lea
adc
push
xor
or
adc
out
and
cmpl
stos
repz
mov
cmp
and
rolb
jno
inc
mov
jmp
fildl
mov
adc
andb
aad
jp
dec
test
jae
sbb
mov
mov
inc
fstl
mov
aam
push
push
rcl
ss
lahf
mov
sbb
mov
push
add
daa
outsl
adc
dec
cmp
or
les
rorl
push
xchg
cli
adc
insb
stc
nop
iret
push
out
popa
xor
xchg
mov
int
filds
push
jnp
pop
decl
inc
cmpsb
jo
add
inc
cmp
sub
out
push
sbb
icebp
xchg
fisubl
loope
sbb
rclb
xchg
push
dec
mov
sbb
cli
and
loopne
add
mov
fs
sbb
jge
test
sub
sub
fcomps
fmull
bound
incb
into
xor
clc
lods
sub
aas
mov
call
xchg
mov
int3
push
mov
ret
push
ljmp
cmp
ret
dec
ljmp
push
mov
inc
mov
inc
cmovns
ljmp
mov
mov
xchg
push
xlat
pop
inc
xchg
shl
aaa
mov
mov
pusha
mov
mov
xor
in
ret
push
dec
mov
sahf
mov
or
sub
lret
aaa
or
adc
lods
push
push
lret
divb
mov
adc
test
dec
lds
and
cwtl
aas
mov
push
in
loopne,pn
in
shld
stos
in
fcmovnb
repz
mov
fbld
jl
fcoms
sbb
push
jns
js
lods
mov
mov
out
fstl
dec
pop
mov
xor
faddl
mov
push
clc
shl
test
pop
inc
out
sti
out
aas
xchg
and
mov
pop
shlb
sub
or
shrb
jo
xorb
cmp
jecxz
fsubs
aaa
and
rolb
clc
insl
dec
subb
push
lods
sbb
and
xchg
loope
jne
adc
mov
sub
jge
mov
fs
xor
lahf
or
xchg
mov
in
fildl
jmp
dec
data16
push
dec
xor
and
adc
test
dec
fsubrl
xor
mov
jne
ja
inc
lods
out
mov
es
jmp
sahf
adc
mov
lcall
mov
stc
shr
daa
bound
mov
or
jae
sbb
outsb
outsl
inc
mov
test
jp
xchg
mov
ljmp
ja
cmp
mov
mov
mov
or
or
jae
mov
scas
sub
jbe
cmp
sbb
cmp
cmp
adc
jae
add
aaa
pop
or
xchg
test
xor
rorb
mov
mov
jg
pop
mov
mov
push
or
aad
mov
call
jl
filds
and
mov
mov
mov
loop
jbe
rclb
mov
mov
jle
aaa
imul
pushf
mov
iret
jecxz
arpl
inc
add
les
mov
ret
sub
aas
sub
cmp
nop
fisttpll
add
in
add
push
mov
sub
mov
pop
jg
jecxz
jg
push
pushf
jmp
jg
fiadds
mov
mov
lds
add
ret
pop
jle
mov
int3
jge
fdivrs
inc
lds
mov
fisttpll
cli
out
jg
fyl2xp1
sar
in
das
mov
movl
cmp
and
jo
sbb
mov
mov
mov
es
dec
cmp
and
stos
loopne
aaa
test
int3
test
xor
dec
xchg
xor
mov
jbe
push
aas
adc
js
lret
mov
push
mov
mov
test
hlt
neg
lods
dec
lret
jle
bound
lret
sbb
shlb
fucom
cmp
add
popw
inc
inc
cmp
mov
ds
adc
xchg
xchg
or
into
mov
adc
dec
push
push
loopne
lds
xor
xchg
ret
ret
out
xor
andl
rclb
dec
xor
adc
dec
stos
xchg
cmp
adc
aaa
sub
jp
xchg
push
xorb
or
adc
push
mov
leave
aas
fs
or
icebp
aad
daa
sahf
jle
stc
jecxz
incb
popf
lds
loopne
inc
imulb
pop
aam
fbstp
stos
fld1
test
dec
add
xor
adc
into
insl
cmp
and
sub
lock
sub
adc
in
je
adc
add
mov
mov
inc
sbb
sahf
or
les
shll
sbb
stc
outsl
aam
das
xchg
sub
and
ljmp
mov
cmp
fildl
arpl
cld
ss
sub
mov
jge
sbb
aam
cwtl
add
les
mulb
aas
jo
outsb
dec
jmp
add
ljmp
fsts
icebp
add
and
cmp
xor
push
aam
and
jae
repnz
mov
pavgb
add
adc
mov
inc
or
lcall
shll
xor
mov
cmpb
xchg
mov
clc
aas
aad
loop
xchg
sbb
add
push
aam
jo
roll
daa
or
or
add
and
inc
or
and
pop
add
mov
sbb
jns
add
movsb
and
in
mov
addb
sbb
fs
enter
mov
adc
lds
test
repz
push
cli
sbb
je
add
pushl
inc
es
out
dec
xchg
test
ficompl
xor
fwait
roll
adc
mov
mov
lea
outsl
pop
ljmp
outsl
adc
adc
rcr
mov
lret
insl
rcll
mov
lods
sbb
add
dec
or
bound
mov
aaa
push
js
sbb
fldenv
lods
jmp
ror
pushf
push
ret
dec
stos
push
pop
or
pop
ljmp
adc
xchg
jge
ret
jle
stc
repz
outsl
sub
and
mov
out
mov
roll
cmp
dec
stc
cmpsb
leave
adc
stos
cmp
add
cld
push
mov
sub
adc
cli
adc
or
cmp
sbb
push
xchg
loop
inc
lock
or
inc
cmp
pop
xor
xchg
test
and
rcrb
xchg
xor
jg
dec
inc
lods
ja
push
xor
iret
jno
test
jg
popa
mov
or
leave
cli
mov
pop
cmp
jp
sti
jg
pop
push
adc
fidivrl
inc
dec
sbbb
aas
or
mov
fs
test
and
mov
add
or
mov
inc
xchg
jno
cmp
insb
mov
lcall
gs
insl
sti
mov
mov
jecxz
fs
enter
sub
push
rcl
insl
or
xchg
mov
inc
xchg
xchg
or
call
out
in
adc
ss
xor
push
dec
adc
ljmp
push
inc
sbb
jp
popa
mov
clc
jle
pop
lret
sub
xor
fildl
mov
sub
lods
mov
or
popf
cld
test
call
popa
dec
addr16
roll
rclb
mov
xchg
push
push
cmp
inc
or
cmpsl
mov
ret
jecxz
mov
sbb
arpl
shll
imul
shlb
fdivs
movsb
nopl
stc
mov
sbb
mov
lock
pop
mov
pop
dec
les
adc
repz
mov
sub
push
and
add
das
dec
xchg
adc
inc
sub
pop
bound
pop
push
les
add
out
sub
fcompl
mov
mov
scas
dec
add
and
das
adc
mov
and
lods
test
lock
in
arpl
pusha
and
mov
roll
mov
lcall
mov
mov
lock
add
rol
shr
sbb
pusha
push
lahf
mov
add
xorb
and
movsl
fisubs
xor
shlb
insl
adc
sbb
dec
in
cmp
addb
dec
add
jne
xchg
scas
xchg
mov
dec
stos
add
aam
or
lock
cmp
add
add
pop
jo
xchg
xchg
inc
sbb
int3
inc
or
repnz
push
fstpt
push
dec
mov
jno
lods
or
inc
subb
shrb
ja
data16
adc
inc
ret
fimuls
dec
jecxz
fistpl
adc
jae
adc
fdivr
into
mov
xchg
sbb
xor
and
jmp
repz
mov
iret
add
add
jp
popa
pop
lock
inc
add
cmp
pop
push
adc
inc
add
xor
lods
dec
jl
push
pop
xor
loope
repz
mov
ja
sub
add
xor
sbb
and
scas
mov
pop
shr
jne
les
dec
adc
adc
pop
je
cmc
xor
inc
push
sbb
shlb
ret
in
dec
stos
sbb
imul
cmp
ret
rolb
inc
enter
cmp
loope
xor
repz
inc
in
cmp
pxor
out
adc
sbb
jae
int
adc
and
lock
push
aad
adc
pop
sub
pop
addb
inc
add
add
sub
push
jg
dec
fld
rcll
out
add
pop
lock
inc
adc
push
test
adc
shr
and
jno
inc
and
jo
push
push
les
push
jo
and
or
push
jle
mov
mov
clc
jns
repz
loope
or
jno
inc
outsb
pop
add
sub
lock
inc
fwait
adc
test
shlb
or
sti
in
sub
roll
inc
js
ds
push
and
fbstp
aas
clc
aad
inc
aaa
and
in
sti
adc
xchg
pop
pop
adc
add
jp
in
jg
mov
cli
adc
sbb
add
lcall
insl
mov
mov
lods
sub
or
fucomip
add
mov
js
pop
dec
mov
test
jmp
mov
sub
icebp
insl
ja
lret
xchg
subb
mov
and
and
adc
push
add
adc
rol
push
into
ds
sahf
push
push
add
jle
pop
add
pop
cmp
fistpl
sub
scas
adc
outsl
xchg
nop
sahf
add
ror
push
das
inc
or
mov
rclb
test
hlt
int
pop
sbb
inc
push
add
ja
out
mov
mov
rol
in
sbb
orl
in
xor
mov
sub
push
loope
ficoml
cli
fs
xchg
popa
mov
ret
mov
jo
cmp
fbld
xchg
orl
adc
sarl
pop
int3
add
sbb
loopne
jmp
dec
xor
lea
pop
int
cmpb
lods
xor
leave
cwtl
int3
sbb
xchg
dec
dec
clc
and
in
inc
push
cmovg
mov
pop
orb
push
stos
cli
sti
call
jnp
fcmovnb
into
scas
xor
lahf
popa
xor
dec
mov
shrl
mov
cmp
pop
and
cmp
dec
rcr
mov
and
test
pop
pop
xorb
mov
aaa
insb
add
mov
repnz
hlt
cmp
sbb
inc
dec
ficoms
adc
outsb
call
add
int
imul
jg
aaa
push
dec
fidivrs
adc
ret
mov
insb
fisttpl
divl
and
mov
aas
add
add
out
lret
es
mov
aas
xchg
inc
jb
mov
pop
adc
test
sub
mov
and
xchg
test
loope
add
mov
push
xchg
mov
rorb
jmp
cmovle
mov
xchg
lahf
lods
jmp
xor
outsl
push
pop
pop
sub
jb
sub
or
jnp
xchg
jnp
jae
cwtl
and
mov
loopew
ss
xchg
mov
jge
shll
push
sbb
xor
xchg
hlt
mov
pop
lods
int
cmp
xchg
adc
jnp
and
mov
das
pop
xor
stos
push
call
insb
push
push
movsb
jl
jno
ficoms
icebp
ss
cmp
sbb
cli
decb
dec
lea
cli
fiadds
lods
leave
push
sbb
cmp
daa
jl
lods
gs
add
mov
outsb
pop
jb
int3
dec
addr16
mov
pop
sub
mov
xor
test
push
movsl
outsl
mov
xor
test
xor
mov
sbb
sub
mov
decl
push
loopne
cmp
rolb
dec
lret
mov
negb
jmp
adc
lahf
pusha
inc
mov
dec
aad
stos
push
mov
push
call
xchg
jb
inc
mov
push
cmpsb
dec
mov
daa
mov
call
fidivl
or
add
jg
outsb
push
or
xorl
inc
pop
enter
dec
push
cld
fldl
inc
push
adc
outsl
lcall
jne
xor
inc
jmp
add
ret
inc
and
dec
fadds
adc
jno
or
adc
sub
cwtl
pop
jecxz
sbb
test
adc
cltd
inc
mov
add
shlb
hlt
scas
fildll
inc
mov
loope
fs
stos
or
out
adc
cmpsl
inc
pusha
and
add
pushw
pop
mov
mov
add
negb
adc
pop
stc
test
adc
imul
cmp
fdiv
mov
imul
lods
cmp
les
aam
sbb
jbe
ljmp
inc
outsb
pop
sub
rol
adc
or
xor
xchg
in
pushl
shrl
les
jbe
adc
ficoml
or
call
les
mov
loopne
mov
scas
add
add
adc
inc
xor
xchg
mov
aam
outsl
xor
ljmp
or
xor
dec
sub
and
dec
jo
ffreep
dec
add
shr
loop
fwait
push
fwait
arpl
cwtl
orb
lahf
jle
ljmp
xor
cltd
or
pop
call
insl
popf
push
inc
add
in
cld
neg
adc
jge
dec
jp
pop
dec
add
int3
lock
or
repnz
negl
jecxz
inc
adc
jle
lds
dec
dec
sbb
icebp
pusha
xor
lock
and
and
scas
adc
test
iret
xor
or
sub
sbb
mov
inc
push
push
sbb
cs
push
add
inc
repnz
loop
mov
lea
inc
mov
jo
sub
pop
add
shl
dec
fbstp
xchg
jp
and
add
lods
push
xor
movsl
ds
xchg
mov
shr
push
and
stos
and
loop
adc
out
int
pop
adc
in
scas
or
cmp
pop
push
les
loope
icebp
dec
lds
sub
inc
fistpll
adc
add
inc
jo
adc
sbb
push
xchg
mov
pop
push
adc
mov
xchg
test
maskmovq
testl
repz
inc
mov
xchg
enter
adc
push
aaa
push
gs
push
insl
shrl
jne
sbb
adc
call
cs
call
and
or
enter
test
je
push
push
xor
movsl
popa
dec
testl
add
add
leave
das
jmp
cmp
test
jb
cmp
mov
stos
js
insl
ds
int3
sub
mov
mov
mull
mov
push
mov
int3
orb
or
pop
loopne
sbb
adc
push
lds
scas
and
scas
test
inc
sub
gs
pop
push
add
test
add
and
dec
fstpt
mov
jbe
or
add
rclb
pop
xor
add
push
dec
and
pop
or
rolb
mov
adc
xchg
xor
mov
out
ret
inc
mov
cli
aas
adc
popf
pusha
popa
pushf
fisubrl
icebp
add
rolb
insb
push
sbb
insb
push
adcw
jmp
pop
hlt
dec
inc
cli
xchg
incb
pop
jbe
sub
xchg
int3
das
je
arpl
aaa
addb
adc
add
add
popa
xchg
mov
cld
fadd
inc
pop
test
jmp
sub
orb
push
mov
cmp
and
cmp
pop
push
pop
mov
add
lret
adc
add
loopne
mov
adc
in
dec
in
push
mov
or
or
insl
pop
add
incb
cmpsl
sbb
xchg
pusha
or
popf
inc
add
mov
mov
pop
movsb
js
mov
adc
shll
push
mov
test
adc
push
inc
int3
jl
aad
outsb
xchg
addb
in
insb
dec
sub
int
jbe
mov
cmpsl
push
mov
jg
sub
xlat
sbb
mov
add
push
insb
rorb
cmpsb
and
adc
rcrl
sub
mov
aas
sub
jne
or
xchg
xor
add
xchg
mov
pop
fldt
adc
xor
hlt
xor
mov
les
addr16
fstps
mov
xchg
and
mov
fsubrs
xchg
xchg
lahf
push
sbb
push
jl
daa
outsl
dec
mov
stos
pop
xlat
pop
adc
js
ret
icebp
push
scas
inc
adc
or
call
mov
xor
addl
add
jg
sahf
mov
add
gs
adc
std
in
pop
int
jbe
push
call
mov
add
aaa
mov
push
outsb
movsl
out
adc
dec
lods
out
fbld
out
test
sub
shll
nop
fidivs
das
hlt
mov
jae,pn
ret
adc
into
and
loop
cmp
push
clc
lret
jns
lret
and
push
fucomi
xchg
push
popf
jo
push
mov
outsb
pusha
xchg
dec
add
or
ret
push
mov
lret
xchg
loope
test
lods
xchg
xor
mov
mov
jmp
mov
or
xchg
pusha
cs
sti
mov
sub
push
xorb
mov
adc
sub
fdivs
test
adc
fsubl
sub
pop
sti
inc
mov
cwtl
jbe
push
and
shrb
lea
insl
push
cmc
lahf
mov
jno
arpl
xor
push
xchg
addr16
mov
aaa
ret
div
xchg
xchg
mov
pop
mov
mov
xchg
pop
or
mov
stos
into
repz
or
enter
mov
outsl
sbb
mov
mov
and
fcomi
fistpl
cmp
mov
jmp
fadds
int
outsb
add
sbb
xchg
dec
aad
mov
adc
mov
notb
sbb
mov
icebp
jno
pop
sar
xchg
stos
fisubrs
cmc
inc
jns
std
out
cli
mov
push
pminub
insl
or
ljmp
dec
push
push
jg
pop
sbb
loopne
cli
lret
dec
mov
addl
xchg
or
push
or
pop
lds
aam
xor
or
xor
pop
jge
into
hlt
inc
cwtl
push
xor
push
inc
xor
and
adc
add
sbb
fldenv
shr
adc
inc
lahf
test
add
adc
pusha
mov
arpl
sub
xor
icebp
test
mov
leave
mov
das
ja
pop
repnz
jg
push
iret
mov
mov
mov
mov
xor
lcall
add
shl
sub
pop
icebp
mov
hlt
mov
dec
xchg
mov
push
and
mov
mull
das
xchg
test
stos
jno
loop
aas
sbb
imul
insb
mov
inc
xchg
sahf
mov
xor
or
lret
xlat
dec
sub
ljmp
fwait
jae
or
orl
mov
and
fs
ret
rcrl
testl
pusha
inc
lock
data16
shlb
loop
cli
xorb
and
lods
mov
inc
cmc
loopne
inc
fwait
rcrb
lods
adcb
loopne
mov
in
xor
insl
jge
mov
xor
fadd
push
sbb
cs
stos
or
cltd
cs
fsubs
sar
xorl
in
cmp
subl
lods
cmp
mov
and
imul
pop
in
inc
loopne
sarb
inc
dec
sub
in
insl
or
aaa
mov
out
mov
xorl
insl
imul
jecxz
xlat
mov
outsl
ljmp
dec
mov
or
cmp
ljmp
push
fucomp
or
xchg
add
fcomps
mov
movsl
pushf
lds
fistps
out
sub
adc
xchg
or
imul
push
and
mov
lock
cmp
jmp
fadds
cmpl
scas
sub
loopne
add
in
sbb
subb
push
sbb
ja
xor
divb
pop
xchg
dec
inc
scas
fstpl
mov
add
or
sbb
inc
sub
les
xchg
ret
sub
and
push
fiaddl
sub
pop
loop
mov
jg
loop
adc
jno
ret
popa
push
cmp
ja
cli
mov
mov
sbb
sub
lds
bound
in
fistps
std
inc
ss
xorb
aaa
or
mov
in
imul
mov
pop
outsb
jmp
ja
cmpb
pop
in
add
std
fsubs
out
loopne
jmp
mov
fadds
cs
adc
cmpsb
imul
scas
std
movsl
cwtl
lock
loopne
shrb
mov
cmpl
inc
push
inc
lock
pop
jp
loopne
aad
push
test
dec
mov
orl
pusha
sub
push
sub
xchg
lahf
sub
test
sub
pushl
ss
push
dec
push
pop
sbb
sbb
aas
jle
add
nop
sub
popf
popa
sub
jbe
test
ret
pop
and
xchg
std
mov
and
and
cmp
or
shll
xchg
test
outsl
ljmp
mov
je
sarl
or
cmp
mov
test
mov
test
stos
ja
fmul
dec
clc
xchg
adcb
in
sbb
sub
pushf
mov
or
xchg
pop
insl
sbb
mov
cmp
lock
insl
pop
sbb
js
aaa
insb
inc
in
dec
lods
sbb
push
pop
mov
jp
sub
ljmp
or
movsb
cld
xchg
sbb
in
jle,pt
xor
sti
imul
movsl
push
jp
aas
mov
icebp
negl
push
enter
lret
jle
push
mov
in
jle
inc
jp
mov
ja
imul
xorb
test
pop
adc
lahf
sub
loope
pop
jl
push
pop
and
sub
das
adc
mov
push
push
rcrb
cwtl
mov
sub
push
push
mov
push
in
push
inc
fistpll
inc
lcall
push
fs
jge
clc
cmp
es
jne
push
push
in
cmp
fstpl
andl
imul
std
ret
cmp
jb
repnz
mov
cld
dec
das
fldenv
cs
mov
sub
add
mov
adc
lea
adc
add
ficompl
out
sub
test
pop
sbb
cli
push
loopne
xchg
add
add
mov
test
mulb
nop
cli
mov
out
pusha
pop
sbb
push
cwtl
add
testl
adc
arpl
imul
pop
int
adc
aas
sbb
mov
jne
cwtl
add
fs
fadd
sbbb
mov
add
mov
or
dec
rcrl
das
adc
push
addr16
mov
ja
pusha
jp
and
ud0
lret
fsub
inc
ljmp
add
mov
rolb
cld
xor
icebp
or
adc
xchg
mov
mov
roll
add
push
xchg
leave
push
imul
icebp
mov
shlb
inc
lret
adc
adcb
inc
dec
sbb
mov
jno
lea
jge
or
jg
popf
js
es
sarl
ss
dec
fdivs
loope
testl
stos
add
jl
adc
je
adc
xchg
lock
sahf
push
das
rolb
fldenv
and
or
ss
cmp
xchg
repnz
lods
in
dec
cld
sbb
xor
scas
test
sahf
outsb
daa
dec
stos
push
jo
mov
cmc
idivb
pop
xchg
andl
pop
sub
icebp
sbb
or
xchg
ljmp
jno
clc
pop
add
dec
out
test
cmp
sbb
scas
rcr
shrb
xor
pop
push
xor
fbstp
cmp
imul
test
xor
sbb
dec
inc
mov
fidivrs
call
add
dec
sub
mov
jnp
mov
xlat
add
jae
adc
fcomps
adc
insl
fcmovnu
lret
movl
call
in
ret
loop
xchg
int3
adc
sub
pop
fsubrs
popf
push
mov
ficomps
jecxz
xchg
sub
cmp
aad
fistps
aad
push
jp
dec
xor
idivb
jle
push
adc
mov
stos
addl
nop
lods
mov
xchg
mov
jp
push
jb
jmp
mov
jmp
sbb
pop
jno
pop
in
into
imul
lds
cld
pushl
sub
cmp
xor
or
push
mov
addr16
out
add
rcl
das
add
pop
dec
ret
test
inc
mov
out
or
imul
fdivl
mov
test
rorl
dec
dec
add
mov
adc
les
pop
push
push
sbb
and
in
jbe
add
test
sbb
ret
sbb
fs
inc
xchg
jb
shl
and
clc
push
and
lahf
cwtl
and
and
xor
shrl
and
fwait
pushf
pop
adc
cli
shrb
mov
mov
inc
out
loope
and
and
loopne
cltd
add
fildl
movsl
or
roll
popa
cmp
enter
adc
pushl
mov
jbe
mov
stos
enter
pmuludq
andb
int
pop
lock
add
clc
loop
and
lods
lods
cltd
or
xor
stos
jle
loopne
mov
lea
jae
loop
xor
cmp
leave
cmp
mov
fwait
sbbb
xor
add
mov
mov
bound
or
lods
movsl
xor
sub
mov
roll
push
adc
mov
dec
xor
push
hlt
mov
call
cmc
pop
xchg
or
daa
sbb
dec
pop
or
dec
loopne
mov
add
repz
mov
or
xlat
orb
jmp
inc
call
add
dec
les
mov
fmuls
sbb
mov
in
stc
js
leave
int
test
add
inc
loopne
pop
xor
cli
mov
cs
push
test
movsb
mov
xchg
ret
xchg
lods
add
mov
inc
aam
mov
fs
pop
xchg
sub
lock
inc
xor
mov
xor
xchg
xor
fdivrl
push
jp
sub
stc
pop
xor
dec
inc
imul
inc
jnp
in
fdivr
xchg
or
or
jno
inc
rcrb
mov
repnz
pop
push
jo
sbb
rorb
imul
mov
arpl
xor
gs
add
sub
fucomp
outsb
inc
jmp
jp
loopne
cmpsb
dec
sahf
cltd
clc
scas
and
and
test
inc
push
jbe
orb
add
insb
call
push
and
jno
jne
rorb
jb
lods
ret
outsl
loop
outsl
repnz
je
clc
sbb
fwait
in
and
mov
and
in
xchg
pop
movsl
in
enter
and
mov
dec
add
push
lret
xchg
addr16
add
rorb
fcomi
pop
lret
xchg
dec
pop
addr16
rcr
into
fdivrs
cmp
sub
fsub
push
mov
in
xor
dec
push
jne
sbb
add
andb
scas
jp
mov
pop
arpl
jp
adc
call
les
inc
aam
and
or
mov
inc
add
mov
pop
insb
adc
add
fdivrs
imul
add
in
cmc
sbb
sub
ss
mov
lea
mov
jl
sbb
pop
add
or
mov
push
fstpt
mov
mov
or
loop
sbb
test
xor
imul
push
or
mov
jl
jecxz
xlat
outsb
mull
ret
or
sbb
lea
adc
or
pop
std
lret
and
adc
inc
ds
pop
sbb
mov
xorb
cwtl
and
xor
das
mov
adc
std
or
jecxz
sub
mov
or
adc
mov
cmp
push
add
pop
and
pusha
enter
shrw
test
jno
test
dec
inc
sub
cld
mov
mov
mov
cmp
dec
loopne
cmp
lret
mov
cmp
and
call
idiv
fsts
mov
jmp
jae
adc
sub
test
add
in
dec
setg
mov
cmpsl
rol
pusha
xor
pop
mov
cmp
sub
sub
es
lock
stos
push
dec
clc
inc
mov
push
cmp
loope
sub
fcoml
in
add
mov
mov
lret
imul
cwtl
push
dec
add
lods
push
mov
cwtl
test
repnz
insb
insb
cld
lahf
mov
shl
in
aas
mov
sbb
outsb
pop
adc
test
add
xor
sub
push
test
lods
ret
ret
xchg
push
mov
loop
mov
arpl
add
das
scas
sbb
sub
call
cld
mov
and
xchg
add
mov
mov
jb
out
cmpsl
cli
fldt
xor
push
test
inc
mov
jae
mov
das
jno
shlb
push
sti
cli
pop
call
or
test
loop
push
movsl
add
mov
dec
mov
mov
inc
fwait
adcl
fbld
jg
test
outsl
into
xor
adc
pop
push
cmp
add
adc
inc
mov
popf
cwtl
fistl
ret
push
jns
call
ret
xchg
or
or
xchg
in
shl
sub
in
incl
add
or
in
sub
add
out
jne
pushf
xor
imul
mov
sbb
insb
adc
mov
mov
and
orl
cmpsl
fimull
nop
pop
pop
mov
jge
lahf
aaa
xchg
aas
loop
mov
mov
decb
lock
mov
sub
dec
ret
das
les
xor
notl
jmp
inc
addb
fisttps
jmp
mov
mov
xor
rorb
sub
or
rorb
shl
lret
icebp
push
mov
scas
loop
ret
in
ds
and
mov
in
imulb
mov
and
orb
xlat
mov
andb
adc
cwtl
fiadds
and
sbb
xlat
gs
aad
mov
ret
cmp
sub
orb
js
jmp
lods
das
sub
mov
mov
adc
jmp
adc
ljmp
adc
mov
jg
shlb
cld
daa
out
or
push
fsubrs
leave
clc
dec
pop
testb
dec
and
jae
aaa
divl
mov
push
fbstp
jb
sahf
pusha
jle
adc
aad
loopne
or
push
incl
sbb
push
jb
fs
xchg
jle
arpl
lds
mov
mov
shlb
mov
test
ret
ds
jmp
mov
fdivrs
out
sbb
mov
negb
mov
mov
outsb
add
daa
push
imul
std
inc
lret
lds
popa
popa
sti
sbb
pop
xchg
shlb
stos
lods
pop
lods
sub
shr
cmpsl
rolb
mov
adc
aaa
adc
mov
xor
sub
scas
prefetch
sub
and
out
int
adc
or
push
sbb
test
rorb
and
hlt
xor
lea
fistpl
sbb
sub
nop
jmp
and
jp
push
add
or
sbbb
mov
mov
fbld
adc
pop
sarl
test
popa
dec
test
test
sbb
rcl
stos
lcall
in
inc
lock
scas
shlb
inc
push
testb
rorl
ficomps
clc
rol
sbb
or
out
fists
sub
movsb
loop
int
mov
and
xor
jo
sbb
sbb
jle
xor
cmp
xchg
sub
cmp
add
cwtl
inc
mov
xchg
sub
inc
mov
and
in
pop
incb
mov
mov
mov
xchg
roll
mov
mov
lar
aam
mov
or
in
adc
in
xor
mov
sti
push
ds
or
xchg
or
jo
xchg
fcom
adc
add
fsubrl
sub
aam
aam
mov
push
xorb
cmp
jp
outsl
pop
in
push
add
aam
xorl
fisubrl
rorb
dec
aam
inc
inc
pop
cld
cli
jl
pop
ljmp
cmp
push
loopne
inc
adc
xchg
cmc
cmp
sbb
call
lret
insl
aam
std
fs
jno
sbb
ror
pop
pop
push
loope
and
add
ficompl
sub
add
add
jb
js
mov
rcrl
xchg
add
pop
sbb
jnp
pusha
or
iret
add
add
fcomp
or
in
add
or
jne
cmp
push
lock
or
ljmp
aam
jecxz
sub
bndldx
es
ljmp
xchg
loopne
dec
cmpsb
push
sub
nop
sbb
test
cmc
dec
sub
inc
add
ret
jo
les
xchg
jbe
push
stos
mov
mov
pop
xchg
adc
inc
lock
mov
dec
inc
adc
stos
lock
nop
xor
pop
or
fiaddl
in
xor
out
sbb
lock
clc
and
cmp
roll
mov
rcr
cmp
loope
dec
repz
mov
inc
mov
and
inc
mov
sbb
jge
mov
xchg
aad
mov
mov
xchg
lea
push
sti
test
test
xor
sahf
imulb
mov
out
ret
lahf
rcrb
add
push
icebp
scas
xchg
add
js
mov
dec
mov
jae
dec
mov
xchg
sahf
dec
adc
mov
insl
mov
sar
pop
nop
or
push
orb
mov
clc
mov
clc
xor
jmp
sub
push
gs
sti
aam
std
pusha
mov
jne
jno
ds
adc
push
push
pop
scas
sub
mov
adc
mov
or
jmp
or
cmp
cmp
lea
jg
leave
xchg
sbb
and
insl
or
lahf
sbb
mov
and
xchg
xchg
jg
stos
mov
or
loope
jns
xchg
lcall
jnp
cli
or
jl
pop
addr16
push
bound
mov
sbb
mov
mov
jl
fisubs
subl
pop
fisttpll
dec
or
loope
jmp
add
lahf
nop
dec
xchg
sti
jns
int
push
repz
pop
scas
mov
mov
aaa
push
add
repz
outsb
test
ret
fbld
push
push
mov
imul
mov
rcrb
cmpl
mov
mov
xor
jnp
cmpsb
aaa
cld
pop
pop
lahf
xor
loopne
push
stos
add
mov
and
icebp
ja
gs
adc
jl
outsb
sbb
lea
ficompl
aas
sub
std
fs
fmuls
fsubrp
call
aam
xor
mov
jnp
filds
insb
xchg
decl
cmp
push
ds
sbb
shrb
and
dec
mov
inc
mov
mov
fdivrs
leave
push
dec
cmc
and
inc
fstps
sbb
or
fimull
fsubs
mov
sti
insl
fcoml
xchg
add
adc
mov
xorb
cltd
sub
cmp
jo
rcrl
sbb
divb
dec
iret
hlt
xchg
outsl
add
push
adc
mov
test
jle
cs
cmc
cmpsl
jecxz
lahf
rcl
mov
jecxz,pt
shll
mov
mov
popa
mov
cs
fbstp
pop
js
mov
jo
neg
mov
add
xchg
and
neg
mov
sub
add
pop
ret
adc
or
int
fwait
jno
cmp
push
fildll
out
mov
aas
mov
xor
inc
jmp
mov
mov
shrb
pop
inc
and
sarb
lods
jmp
arpl
or
rol
lret
mov
das
xor
sti
int
into
sbb
aas
icebp
scas
clc
sbb
out
jge
or
stos
push
adc
cs
fwait
and
ficoml
pop
adcb
push
int3
pop
inc
fnstcw
imul
mov
jp
testl
push
push
mov
rorb
or
xchg
aas
dec
fs
xor
insl
in
sub
push
loop
xlat
fcmovnb
repnz
adc
pushl
jl
mov
mov
mov
inc
aam
dec
pop
mov
inc
mov
ljmp
stc
aaa
jmp
add
push
sbb
shl
adc
sbb
or
add
adc
sbb
dec
push
add
add
dec
xor
or
add
aam
inc
inc
cli
inc
mov
sub
test
adc
popa
xchg
inc
rcll
mov
add
nop
lods
in
jg
addr16
cmp
cli
mov
and
push
push
xor
int3
fisubs
ljmp
dec
les
es
repz
xchg
push
push
pushf
cmpb
mov
sub
adc
mov
clc
bound
mov
in
inc
cmp
jnp
mov
sub
inc
into
andb
in
aaa
mov
xor
xchg
mov
aad
loopne
loopne
push
lea
mov
in
dec
in
mov
jae
addl
fwait
pop
and
in
add
in
push
pop
dec
push
aas
popa
push
push
inc
fcmovb
jo
and
jae
sub
icebp
or
in
sarl
repnz
mov
mov
xor
mov
push
adc
sbb
xor
hlt
pop
or
and
sub
rolb
dec
adcb
stc
ret
jae
insl
popa
inc
faddl
sarb
cwtl
fsubrs
push
dec
ficompl
addl
lcall
and
in
aam
dec
jbe
cmc
or
daa
add
dec
daa
inc
mov
ret
add
addb
lret
push
je
adc
xor
je
movsb
lock
xor
shl
pop
inc
sub
inc
and
pusha
rcll
aaa
mov
call
negb
sbb
loopne
sub
jne
subb
inc
fdivrp
inc
inc
idivl
xorb
sbb
roll
call
or
xor
aaa
aaa
push
mov
push
or
xchg
jns
out
sub
sub
call
and
cmpsl
ficoml
sbb
jg
inc
sub
stc
mov
and
cmp
dec
sar
inc
jb
jle
ljmp
jne
add
add
test
inc
cmpsb
outsb
adc
add
xlat
aam
pop
push
dec
es
add
mov
cltd
outsl
pop
lods
sbb
loop
mov
mov
lock
add
dec
mov
add
or
stos
pop
inc
jg
mov
inc
lods
mov
sbb
add
cmp
mov
inc
dec
jecxz
pop
scas
jno
mov
sbb
inc
outsl
mov
mov
sub
clc
pop
push
push
or
add
shlb
dec
cmp
mov
mov
aam
inc
mov
sarb
push
cmp
stc
mov
mov
adc
jne,pn
add
inc
sarl
lods
call
sub
dec
out
push
test
ret
cmp
jmp
cwtl
mov
pop
adc
lret
fwait
mov
cs
mov
rcrl
cmpsb
out
lret
rorl
add
push
push
sbb
xchg
inc
pandn
mov
sub
push
push
adc
xor
dec
mov
mov
clc
aam
les
add
add
lea
mov
rcrl
cmpsb
out
in
aad
adc
call
sbb
dec
test
sub
cmp
cmp
mov
jmp
shll
stos
aaa
pop
shl
or
sti
fs
addb
xor
jne
pop
ljmp
or
fnsave
xor
sub
in
sbb
jae
dec
shrb
pop
jae
push
add
sbb
jo
dec
scas
test
es
cli
lret
movsl
sbb
push
and
dec
in
push
xorl
xchg
bound
dec
js
iret
adc
enter
adc
xchg
xorb
mov
add
add
xchg
mov
or
rorl
xchg
loopne
mov
arpl
test
idivl
stos
out
addb
js
test
inc
inc
popa
xor
mov
and
mov
pop
hlt
sub
sub
sbb
mov
add
sbb
mov
out
pop
shrl
jp
stos
add
pop
cmc
adc
mov
inc
aam
test
cmp
mov
lahf
fidivrs
imulb
mov
scas
or
push
mov
xor
xchg
mov
and
mov
popa
xchg
lret
xor
scas
clc
sub
rol
mov
bound
mov
inc
scas
or
push
in
repnz
push
xor
je
and
mov
ja
pusha
dec
bound
jg
call
dec
popl
loope
mov
aaa
cli
pop
mov
aam
push
cltd
movsl
outsb
nop
pushf
jg
lret
mov
clc
imul
jno
dec
sarb
inc
ficomps
pop
push
add
or
mov
dec
pop
mov
dec
and
and
mov
fmull
test
lea
xchg
gs
pop
inc
test
mov
fiaddl
cld
test
ds
mov
mov
inc
cmpsb
fildl
in
pushl
cli
cltd
mov
xor
and
push
fistl
inc
andb
std
lods
ljmp
xlat
add
clc
lret
mov
or
dec
cld
inc
xchg
inc
test
fistpl
add
jge
test
add
repnz
popa
test
orb
mov
outsb
cmp
bound
jp
ret
sub
inc
mov
aad
pop
jns
test
and
clc
fadds
mov
lret
adc
enter
pop
ret
sbb
dec
repnz
add
mov
enter
pop
jg
xchg
cli
add
pushf
inc
in
adc
popf
lods
sbb
stos
addl
fildll
incb
sub
mov
xchg
mov
mov
nop
call
call
jge
adc
scas
adc
in
cmp
xchg
cmpb
add
xor
das
mov
dec
mov
sbb
add
push
cmpl
lock
mov
popf
jns
jo
out
stos
xchg
lods
mov
sbb
popa
and
or
mov
scas
outsl
test
adc
out
incl
sahf
sar
dec
push
mov
fdivrl
or
aam
jg
add
bound
push
ret
cmp
xchg
je
sarl
test
adc
clc
fsub
push
lock
push
push
dec
adc
push
jge
cli
mov
xor
ss
push
cmp
mov
cmp
das
pop
pushf
pop
mov
adc
adc
lea
inc
mov
cld
fwait
shlb
fisttps
inc
mov
push
inc
adcb
sbb
adc
aad
decl
ror
push
xchg
add
and
xor
push
mov
pop
mov
xor
push
lret
in
push
inc
cmpsb
call
mov
jbe
jl
lea
adc
std
out
cs
outsl
sub
add
push
push
rclb
adc
lea
shrb
jge
ret
mov
lret
dec
bound
push
fdivl
adc
sahf
ja
sub
inc
xchg
sbb
ljmp
jle
cmp
adc
xlat
push
add
int3
xchg
mov
mov
insl
cld
dec
repz
call
outsl
das
cmc
pop
pop
repz
imul
into
pop
xorl
les
fists
bound
std
mov
incl
cmpsl
les
pop
stc
lret
out
mov
sbbl
imul
adc
fnstenv
add
xor
dec
push
add
sub
sbbb
mov
lcall
lret
sbb
hlt
add
xor
sbb
mov
jae
ss
pop
cmpb
pop
addb
xchg
daa
out
sub
in
sahf
pop
dec
rdmsr
sub
or
pop
aam
or
std
in
ja
add
cld
in
pop
fcomip
cmp
fsubl
das
rclb
sub
add
inc
out
pop
push
js
fwait
mov
popf
test
stc
ret
lods
jne
mov
sub
and
aas
adc
dec
adc
cmpb
dec
int
jecxz
jne
daa
inc
aas
dec
sub
xchg
arpl
xlat
stos
sbb
push
jl
outsb
and
mov
stc
sbb
fwait
add
pop
xchg
orb
popa
mov
jg
xchg
ja
adc
sub
ss
sbb
jg
data16
sbbl
fiadds
xchg
and
stos
sub
rorb
popf
mov
cld
ja
mov
and
xchg
movsb
add
cmp
or
or
mov
ds
cmp
and
push
dec
fildl
sub
mov
loop
dec
outsl
add
data16
and
sub
scas
mov
clc
pop
subb
pop
ds
pusha
and
cli
imul
xchg
push
ljmp
sbbl
inc
outsl
mov
loopne
push
test
xor
inc
insl
pop
mov
dec
dec
cld
out
ljmp
pop
hlt
sub
mov
or
sti
sahf
mov
jne
call
ljmp
xor
das
sbb
loop
mov
xor
push
int3
mov
andb
icebp
pop
pop
jb
imulb
jp
aas
pop
and
movsb
out
cwtl
inc
fildl
or
mov
lcall
out
es
sbb
das
std
lcall
pop
mov
mov
mov
xchg
mov
jo
fiaddl
popa
fidivl
inc
test
movsl
pushf
es
mov
cltd
sub
pop
push
mov
int3
adc
lods
cltd
xor
hlt
or
rcl
xchg
sub
dec
movsb
out
fisubl
inc
pop
js
outsl
push
mov
lds
cs
call
mov
fsts
cmpsl
mov
call
in
std
add
arpl
jae
fimuls
mov
fisttps
arpl
dec
test
jmp
cs
lahf
mov
sbb
mov
cltd
decl
cmp
loopne
into
inc
inc
lock
shlb
xor
adc
rorl
push
dec
cmp
push
lock
ss
sub
and
ss
sub
dec
xor
lea
add
push
push
jnp
call
pop
outsb
push
in
pop
and
cltd
xchg
and
stc
sbb
loope
fwait
pusha
cmp
sub
ficoms
dec
flds
push
mov
inc
ret
xchg
jl
pop
inc
add
lea
fwait
out
or
fwait
aas
int3
push
bound
icebp
or
cltd
scas
dec
dec
fdiv
int
push
lds
clc
adc
lock
push
or
mov
adcb
mov
test
call
ljmp
cmp
fcoms
fistl
jmp
or
dec
xchg
mov
ds
add
add
scas
dec
push
mov
rclb
aaa
add
test
push
fcmovnb
lods
insb
imul
stos
xchg
mov
aaa
bound
xchg
push
cli
cmpsl
xchg
add
ss
pop
xchg
lock
adc
loopne
mov
gs
shl
inc
xchg
push
xabort
add
add
in
aaa
inc
popf
pusha
nop
andb
stc
or
xlat
inc
xor
lret
das
mov
pop
jae
sub
insb
adc
push
or
sub
inc
push
pusha
push
jno
sub
fmuls
incl
dec
fsts
shl
xor
inc
and
push
pop
shll
dec
xor
push
push
cltd
hlt
pop
jnp
js
push
lret
xor
inc
fidivrs
ljmp
in
call
xor
push
dec
jp,pn
xor
lds
xchg
add
lock
fldcw
inc
cmpl
sbb
cld
sub
pop
pop
lods
and
mov
mov
mov
shlb
add
pop
mov
or
inc
push
stos
aaa
jle
repnz
adc
adc
call
loope
mov
dec
fcoml
add
out
orb
mov
mov
adc
sbb
inc
xorl
lahf
sbb
lods
add
push
add
pop
imul
mov
rcl
push
xchg
pusha
sub
mov
push
add
sbbb
adc
call
inc
jmp
test
je
pop
shrb
or
mov
aaa
pop
mov
shlb
jmp
sbb
pop
test
out
int
adc
mov
pop
ljmp
repnz
sub
cmc
cmp
call
clc
jo
popa
xchg
int3
adc
adc
push
lods
rclb
pushf
insb
orb
and
dec
and
fcomps
lret
or
jle
lret
mov
mov
add
jg
aad
call
imul
movb
mov
adc
and
add
cld
add
dec
jno
test
push
cwtl
cld
push
cmp
test
and
stos
dec
addb
sbb
mov
sub
pusha
mov
scas
lcall
test
xor
pop
fmull
push
push
lock
icebp
test
add
cmp
jne
fdivl
ljmp
shlb
mov
aad
mov
mov
sub
and
int3
std
icebp
xor
mov
or
cmc
pop
push
aam
pop
inc
or
add
das
or
adc
sbb
stos
mov
mov
adc
inc
dec
test
pop
xor
push
cmp
push
dec
cmpsl
sbb
scas
push
sbb
and
push
pop
lock
ret
mov
cmp
into
fdivrp
mov
mov
in
shl
xor
push
sarb
add
cwtl
jp
fdivl
sub
orl
jne
xchg
lods
mov
mov
pop
inc
int3
push
or
and
jecxz
adc
xchg
stos
js
inc
or
cmpb
fwait
pop
sahf
adcb
mov
pusha
lret
mov
pop
aad
pop
pusha
and
hlt
xor
sub
xor
sbb
xchg
push
scas
sbb
xor
and
mov
sbb
aas
test
push
mov
mov
test
adc
call
add
es
and
inc
js
add
and
mov
dec
and
xor
add
jp
dec
rol
lock
test
inc
addb
pop
xor
adc
aam
fisttpl
bound
mov
ror
mov
enter
shrl
jae
sbb
lahf
inc
je
push
clc
rol
push
mov
add
add
out
and
mov
sub
push
add
cld
stos
jnp
aam
add
mov
enter
daa
sbb
sub
repnz
icebp
dec
cmpsl
aas
inc
pushf
dec
shlb
or
scas
pop
jecxz
lahf
repnz
push
mov
popa
adc
jbe
pop
sub
pop
push
out
sbb
lods
repz
cs
das
mov
jle
sbb
jle
subb
subb
mov
sub
dec
rolb
in
xor
jge
data16
mov
pop
sub
sub
loope
add
and
pop
mov
loope
mov
push
mov
jp
mov
add
popa
ss
sbb
int
lret
xchg
je
mov
push
aas
add
test
xchg
adc
pop
mov
loop
and
add
cmp
or
rorl
cs
and
js
call
sbbl
pop
lds
mov
and
mov
add
call
add
movsl
imull
arpl
and
jg
je
incb
lock
jnp
lea
ret
aas
test
or
dec
jle
push
dec
push
int
mov
stos
push
scas
leave
incb
mull
jo
lods
clc
call
xor
jns
ficomps
and
fldenv
adc
cmpsl
inc
jnp
aaa
out
cmp
sbb
stc
xor
adc
outsb
ljmp
notb
xchg
add
sbb
cmp
dec
cmp
call
jmp
lcall
in
hlt
sbb
or
lahf
stos
iret
inc
dec
cmp
xchg
adc
scas
aaa
and
inc
inc
or
pop
cld
xor
mov
movsb
inc
inc
in
cmpsl
inc
mov
mov
sub
fisttpll
jns
adc
add
cwtl
pusha
push
lods
sar
or
mov
hlt
loopne
ret
push
jnp
and
push
push
xchg
xchg
ljmp
pop
stos
or
loope
inc
xchg
inc
mov
aad
arpl
sub
push
pop
les
fbstp
cmp
jnp
test
push
adc
outsl
movsb
inc
mov
pop
js
pop
mov
pusha
inc
pop
outsb
pop
xor
push
incl
loopne
cltd
jne
mov
pandn
rclb
add
out
stos
or
jp
call
mov
jb
lret
adc
adc
cmp
hlt
push
add
adc
outsb
in
xor
sub
pop
ss
popa
inc
lock
sub
pop
lds
les
mov
stos
outsl
adc
rcrl
add
in
les
scas
fisttps
cld
sub
adc
faddl
sbb
pusha
mov
icebp
sub
inc
adc
add
mov
repz
aad
rcr
inc
nop
add
mov
lret
adc
daa
pop
or
in
pop
push
insb
scas
sbb
stc
pop
sub
ja
pop
sub
push
xor
fs
dec
inc
pop
imul
xchg
pop
nop
mov
add
enter
add
ljmp
insl
push
clc
sub
insl
mov
in
cmp
add
mov
cwtl
enter
sti
dec
push
bnd
dec
xor
pushaw
nop
comiss
cld
inc
jg
xor
mov
popf
in
jl
add
aaa
loopne
sbb
jle
xor
iret
cs
adc
mov
xchg
daa
mov
cmp
ljmp
sbb
imul
push
jae
call
das
je
arpl
push
adc
mov
fdivrs
mov
push
idivl
add
or
aaa
mov
fildl
fiadds
enter
push
js
addr16
dec
lea
fwait
add
pop
push
lock
cli
jg
xchg
fwait
pop
pop
add
and
adc
jmp
test
fldl
mov
out
fistpl
cld
jl
out
data16
add
add
push
inc
popa
mov
les
pop
push
mov
shrb
fcmovb
fldl2e
xorb
pop
jbe
scas
sub
into
xchg
lea
mov
movsl
and
int
divb
pop
adcb
cmp
xchg
test
jp
push
add
pop
ljmp
cmp
int
cmpb
dec
lds
xlat
mov
lea
push
add
cmc
fwait
movsb
test
gs
sub
add
call
lea
lcall
test
sbb
xor
push
add
mov
xor
sub
fiadds
out
mov
mov
xchg
and
cltd
sbb
or
and
mov
pop
mov
test
aad
mov
into
sahf
jmp
add
push
add
fidivl
pop
test
xchg
inc
inc
sub
push
or
push
or
or
sti
std
mov
cmpsb
xchg
push
clc
jecxz
mov
rcrb
lcall
add
rcll
add
adc
inc
imul
sub
jl,pn
mov
dec
xchg
add
iret
fldl
and
jno
decl
sub
adc
rcrb
aas
pop
cmpsl
or
cwtl
push
fiaddl
idiv
and
rorb
xchg
das
push
fcmovnbe
mov
shrl
jmp
pop
xor
scas
dec
lock
nop
outsl
sbbb
into
sub
ret
mov
push
les
and
stos
fistl
xchg
aaa
pop
pop
repz
mov
test
sbb
pop
or
inc
and
mov
push
ret
pop
popa
xchg
out
mov
movsl
cwtl
mov
add
sahf
push
imul
adc
scas
mov
xor
inc
and
mov
push
jp
adc
int
sbb
cmpsl
or
shrb
xchg
xchg
imul
or
jb
sbb
inc
lock
shll
add
rorb
push
push
push
mov
fwait
stc
inc
adc
fstl
outsl
lods
xor
sub
jl
sub
cmp
adc
out
jo
mov
loopne
push
xlat
sbb
jne
iret
mov
data16
adc
or
jbe
xor
pop
dec
sahf
stos
jno
lahf
sbb
call
xchg
test
call
popf
and
mov
jnp
xchg
inc
jns
pop
fs
sub
cmp
mov
scas
int
push
addb
lods
mov
mov
aas
js
fisubrs
es
jmp
into
mov
push
addr16
aad
movsb
mov
jbe
pop
cmp
shrb
stos
out
ret
or
add
pushf
test
jne
and
mov
sbb
xor
xor
cmpsb
mov
movsl
fucomi
add
mov
push
add
inc
mov
inc
es
popa
addb
pop
loopne
push
leave
or
sbb
mov
cli
sbb
sar
rorb
jmp
sub
das
cld
cmc
xlat
lret
leave
sahf
push
xchg
add
pop
shl
flds
fdivrl
push
mov
jne
sahf
shrl
mov
iret
xor
fistpll
pop
testb
or
movb
stc
inc
mov
leave
std
das
rcrb
iret
pop
lea
loope
leave
out
xor
mov
out
stos
test
test
push
andb
mov
das
insb
pop
jnp
cmc
mov
loope
lea
in
mov
cs
lock
inc
add
inc
cmc
outsl
add
add
imul
ja
mov
les
adc
mov
adc
and
cmpsl
fiadds
nop
jo
mov
mov
loope
and
xor
mov
adc
and
test
mov
loop
add
lds
pop
rorb
arpl
icebp
adc
arpl
mov
lcall
mov
adc
mov
cs
jg
cmpl
push
or
push
int
and
inc
sbb
and
adc
enter
push
mov
test
pop
fmuls
lods
mov
and
repz
inc
mov
mov
pop
aaa
push
and
jecxz
or
jne
mov
sbb
sbb
inc
test
jmp
fnstsw
bound
shl
fwait
aad
sbb
cmp
and
lock
stos
std
dec
fucomi
adc
stos
mov
shr
pop
test
inc
add
push
add
sub
sarb
adc
or
lods
cmp
push
stos
insl
mov
or
es
push
loope
xchg
aas
adc
xor
es
enter
js
mov
push
inc
mov
add
fimuls
push
add
adcb
sti
stos
clc
pushf
adc
mov
cmp
cli
xchg
out
pushf
ds
push
stos
adc
sub
add
hlt
les
add
les
pop
test
ret
shrb
inc
cltd
aam
pop
push
sbb
shrb
les
aad
mov
cld
rorb
repz
arpl
push
push
inc
nop
adcb
and
adc
pop
call
stos
outsl
mov
nop
fnstenv
imul
and
add
adc
push
and
jge
add
cld
stos
add
pop
hlt
jge
out
adc
stos
lds
call
and
mov
jno
pop
and
or
inc
pop
sub
das
rcrl
xchg
xchg
ljmp
xor
ss
gs
push
pushf
sub
add
bound
mov
fsubrl
and
pop
dec
push
add
pop
sti
bound
mov
xchg
int3
or
sub
push
dec
xor
sub
je
popf
xor
xor
loopne
jo
icebp
mov
jae
aas
sbb
mov
aas
out
scas
dec
adc
adcl
adc
add
idiv
roll
inc
jl
jecxz
pop
aam
xor
inc
xchg
add
jae
adc
push
stos
flds
xor
adc
sub
es
and
jmp
xor
popf
inc
mov
jmp
xchg
or
movsb
ljmp
mov
xchg
jbe
cltd
cmp
iret
cmc
mov
shr
rorb
bound
jns
or
stc
in
cmp
popa
xor
sub
sub
adc
mov
subl
lods
mov
int3
into
push
aad
pusha
dec
sbb
enter
pop
fucomi
push
aam
aas
fisubrl
cmpsl
insl
push
cmpsb
aam
adcl
dec
inc
pop
rol
adc
push
test
dec
mov
punpcklwd
jge
xchg
inc
inc
sub
outsl
stos
sub
jb
mov
add
or
loopne
mov
add
add
jl
rclb
push
cld
lahf
imul
lock
adc
shlb
int3
pop
int3
outsb
aas
push
imul
mov
cwtl
sti
incb
or
in
or
mov
mov
and
push
jbe
ja
in
icebp
movl
sbb
pop
ret
push
add
imull
jbe
push
adc
xchg
fistpll
mov
ror
insb
mov
adc
jno
xchg
add
cltd
or
loope
in
aaa
pop
test
xchg
add
das
aam
add
xor
ss
xlat
xor
lahf
je
outsb
inc
mov
pushl
add
std
jmp
or
push
add
clc
xchg
sub
idivb
add
xor
ja
adc
sbb
xlat
mov
addl
hlt
pop
leave
or
lret
addr16
loope
adc
push
lds
jmp
repz
xor
fimull
insl
inc
pusha
cli
insl
push
shrl
inc
addr16
movsl
xor
inc
sbb
inc
outsl
ja
mov
push
push
bound
push
xchg
pusha
mov
das
cld
add
mov
or
fstpt
sarb
repnz
hlt
pop
insb
mov
add
shrl
mov
adc
fistps
push
repz
mov
jg
insl
stos
add
inc
mov
in
mov
jo
mov
pop
mov
jns
lea
mov
adc
xchg
dec
movsb
and
test
mov
push
mov
adcb
add
push
mov
adc
fistpll
mov
mov
mov
ljmp
push
jno
inc
clc
mov
or
out
mov
inc
xchg
pop
aam
hlt
popf
xchg
lods
outsl
lock
or
ret
lret
js
adc
out
popf
mov
sbb
jbe
push
mov
sar
jbe
into
sub
mov
lret
and
in
mov
cli
push
inc
pop
adc
mov
adcl
mov
jae
pushl
pop
pop
cmp
xor
loop
cltd
push
xor
scas
mov
in
popf
jbe
lods
sub
push
pop
dec
mov
ds
into
out
in
test
flds
dec
or
in
shrl
and
movb
mov
cmp
dec
call
ret
je
lcall
in
aas
mov
adc
and
sub
cmp
filds
in
adc
sub
push
lret
into
in
aaa
mov
mov
arpl
dec
pop
sbb
inc
shrl
add
cmp
fiaddl
inc
pushf
inc
mov
cmp
shrl
test
pop
xchg
fistpl
sbb
nop
call
push
fstpl
es
jl
clc
inc
stc
xchg
cld
lea
in
mov
mov
pushf
cs
inc
adc
adc
mov
inc
pop
mov
or
mov
xor
lahf
mov
shrb
push
sub
add
test
cmpsb
mov
mov
jge
jne
mov
jmp
adc
jae
bound
adc
sbb
jp
pop
push
aas
ficompl
repz
fisttps
addr16
fs
sbb
loope
test
cltd
loopne
fidivs
dec
mov
or
leave
aam
jl
pop
roll
xor
pop
rcr
xchg
sti
hlt
fldt
add
xor
fwait
mov
fstl
jg
popf
push
aam
jnp
jb
add
or
shll
in
mov
rcrl
sti
add
js
icebp
dec
sub
mov
inc
sbb
pop
clc
clc
or
lcall
notl
pop
push
jp
cld
ret
sbb
xchg
or
push
aad
xchg
mov
or
mov
mov
jg
dec
lock
dec
in
pop
rolb
outsb
push
adcb
setle
iret
dec
mov
jl
dec
gs
adc
xchg
stos
mov
inc
in
mov
stos
fidivrs
insl
push
lods
je
gs
sbb
mov
shrl
in
push
jo
lods
adc
outsb
call
lret
add
les
mov
cmc
mov
jecxz
int
std
aam
movsb
inc
movsl
mov
and
push
push
das
movsb
push
push
jge
test
mov
mov
lods
aad
pop
out
das
bound
dec
sub
repz
mov
idivl
adc
lock
fistpl
xor
jo
mov
cmp
mov
mov
mov
popa
into
add
cmp
rol
divb
std
repz
mov
sti
cs
xchg
rcr
mov
or
pop
jo
or
mov
sahf
call
sub
dec
adcl
shlb
lods
inc
jno
xchg
aaa
or
daa
mov
into
cli
dec
sbb
nop
xchg
lcall
in
pop
shrl
loopne
mov
out
cmp
mov
xchg
or
test
or
nop
and
mov
pop
icebp
ret
adc
adc
mov
imul
cwtl
icebp
into
ds
mov
mov
cmp
fs
cltd
scas
push
shll
push
jmp
jnp
jo
cwtl
in
xlat
push
jns
sub
adc
int
xor
test
pop
push
lock
xchg
pop
mov
mov
js
jle
pop
jg
sbb
in
sub
sbb
jp
ljmp
addr16
or
shrl
pop
mov
ss
insb
xchg
in
push
mov
push
xor
aaa
mov
xor
lods
ljmp
xor
popa
shrb
or
fs
repnz
jg
dec
clc
movsl
fsubp
add
jmp
orb
repz
cmc
mov
ja
negl
movsb
and
cmp
loopne
pop
mov
mov
rorb
ficompl
xor
rorb
push
into
out
sub
cmp
clc
mov
push
cld
adc
sbb
mov
and
or
inc
dec
adc
lahf
stos
xchg
fisttpl
jno
push
fwait
rolb
mov
xchg
sub
clc
pop
in
repnz
and
sub
push
pop
xchg
xor
inc
xchg
add
jo
test
sub
sub
inc
std
add
push
mov
int3
fildll
scas
cmpsl
add
inc
push
and
xor
out
stos
faddl
bound
pop
lods
aaa
inc
or
pop
sbb
or
les
divl
addb
test
test
js
pop
dec
or
dec
sub
mov
pusha
add
stos
sbb
lds
push
das
negl
mov
and
inc
cli
arpl
mov
mov
lar
cmc
jbe
imul
cmp
insb
pop
jne
addb
mov
add
dec
popa
loopne
into
mov
mov
dec
lock
jo
pop
xor
or
sub
hlt
or
add
addb
and
sub
add
adc
cmc
add
adc
jb
jnp
or
pop
cmc
outsl
test
adc
adc
gs
fiaddl
add
push
and
add
adc
je
lret
or
push
mov
jno
push
inc
lcall
aaa
in
sbb
nop
cli
iret
or
adc
popa
add
adcb
adc
nop
daa
jno
xchg
mov
jbe
shlb
cmp
cmp
aad
cmp
stos
pop
lea
mov
pop
mov
fildll
jl
dec
mov
xchg
dec
shlb
scas
inc
add
lret
cld
cmpsl
roll
add
dec
and
jecxz
sub
fcompp
add
adc
mov
outsl
xor
mov
sti
rorl
mov
lahf
hlt
cmp
jb
out
adc
loopne
je
cwtl
pop
in
push
test
mov
inc
pushl
pop
add
lods
leave
jg
add
sub
sub
sbb
insl
xchg
xor
mov
inc
mov
mov
in
inc
rolb
or
sbb
xlat
adc
dec
sbb
gs
clc
jecxz
aaa
test
mov
lahf
inc
xor
popa
orb
adc
clc
je
add
xor
mov
xchg
es
push
movsl
or
mov
mov
mov
mov
fldt
scas
jmp
arpl
loope
in
fcmovnbe
and
shlb
ret
mov
push
mov
add
cmp
pop
cmp
sbb
cmp
jo
clc
lret
and
mov
cld
jo
sbb
das
cli
lods
sbb
adcb
int
xorb
or
push
push
add
sub
loop
xchg
lds
dec
stos
sub
xchg
out
inc
je
outsb
mov
mov
mov
sub
cmp
pop
pusha
in
lahf
addr16
mov
or
loop
std
push
imul
cwtl
in
clc
and
inc
adc
lods
xchg
sub
addb
fdivl
adc
mov
fdivs
or
aam
lds
jns
pop
add
inc
stc
aas
adc
mov
fwait
push
add
shrl
mov
pop
lret
jno
xchg
aam
fisubrl
rcl
add
ds
xor
in
jbe
sbb
mov
xchg
ds
jbe
push
insb
aad
aad
mov
mov
jp
or
cmpsb
xor
call
dec
icebp
mov
add
xchg
pop
xchg
int3
orb
repz
mov
push
push
loopne
ret
dec
out
movsl
sbb
mov
clc
cs
fistl
int
stos
clc
pop
pop
xor
gs
shlb
pop
ffree
std
gs
add
adc
jo
mov
test
fwait
rolb
lock
lds
insb
imull
fidivrl
add
push
enter
mov
mov
xchg
inc
in
mov
mov
rorl
xchg
aad
loop
mov
xchg
push
lea
mov
subl
jp
ss
or
ds
aaa
fiadds
xor
test
repz
dec
xchg
push
lock
call
and
push
aam
or
push
or
dec
ljmp
sbb
push
lret
ds
or
sub
out
lods
dec
clc
insl
mov
and
lret
aas
jp
in
push
mov
outsl
out
cmpsl
stc
jp
and
int3
outsl
repz
insl
scas
mov
das
xchg
andb
adc
je
out
inc
pop
lret
hlt
out
mov
inc
dec
add
ljmp
nop
shlb
xor
cmp
dec
movsl
fsubrl
pop
and
mov
mov
in
dec
cmovl
mov
xor
adc
rcl
or
dec
shlb
enter
sub
pop
les
pop
iret
pop
and
int3
mov
lods
imul
cs
mov
neg
pop
mov
add
inc
jno
jl
push
dec
jo
cmpsl
hlt
add
lcall
addl
mov
sbb
out
push
shrb
dec
addr16
pop
or
push
mov
cmc
in
mov
rcrb
out
mov
jp
gs
sarl
mov
mov
push
div
inc
rclb
out
mov
add
add
daa
popa
mov
mov
fsub
out
cmp
mov
adc
bound
fnstcw
mov
cwtl
lds
lret
enter
popa
xor
adc
dec
jbe
out
sbb
int
mov
pop
add
jo
into
sbb
sbb
fcomip
or
jnp
push
and
popf
push
adc
rorl
mov
roll
sbb
dec
push
js
test
enter
insl
sub
mov
pop
rcl
out
jno
inc
mov
mov
mov
jge
pop
scas
out
mov
fidivl
cmc
sahf
sub
and
push
ror
or
shr
shl
inc
daa
dec
push
in
or
int
dec
sbb
sub
call
call
mov
xor
mov
adc
fildl
pop
or
jecxz
and
in
and
je
and
popl
add
lds
or
mov
aas
adc
aad
lcall
imul
fnclex
ficoml
shll
jp
fildll
int3
pusha
loope
dec
mov
mov
and
dec
popa
and
insl
adc
mov
xlat
repz
insb
xor
and
ficompl
jmp
mov
and
lods
and
in
mov
ret
inc
inc
addb
dec
lock
dec
xor
shll
sub
add
inc
jg
sbbb
sub
cmp
pop
in
cmp
sub
daa
jbe
xor
mov
fst
inc
fsubr
push
test
jbe
jmp
jp
mov
push
cmpsb
loop
sub
xor
pop
ret
ffreep
adc
add
scas
sbb
inc
dec
push
inc
fwait
adc
negl
dec
aam
fwait
xor
add
sub
xchg
adc
cmp
fwait
inc
cld
jbe
lds
jg
je
inc
pushf
stc
jg
cmpsb
int3
addl
imul
xchg
push
xchg
and
jo
jp
fdiv
aam
pop
lcall
push
cld
and
sub
adc
mov
aad
popa
in
rcl
push
push
into
inc
xchg
adc
aaa
mov
and
dec
xchg
outsb
ret
or
jecxz
mov
mov
iret
out
push
add
adc
sbb
test
push
mov
xchg
inc
andb
imul
and
mov
xor
jno
hlt
xchg
push
and
xchg
inc
dec
sub
sub
scas
pop
insb
cld
push
nop
mov
stos
int
pop
fimuls
xor
add
or
jbe
add
test
fs
xor
jge
jecxz
add
pusha
push
outsb
sub
xor
pusha
cli
pop
stos
out
or
dec
pcmpgtb
and
xchg
mov
nop
sahf
cmp
es
adc
pop
cld
jne
faddl
mov
inc
xchg
sbb
clc
or
testl
jo
jbe
dec
leave
dec
xchg
addl
fdivrs
fldcw
clc
jl
mov
outsl
pop
icebp
adc
add
jae
push
mov
inc
mov
add
ja
scas
scas
stc
or
outsl
mov
and
enter
popa
mov
sub
xor
ljmp
add
je
or
push
and
push
je
mov
jnp
pop
inc
pop
outsl
adc
lods
adc
hlt
add
or
dec
jle
loop
in
test
inc
pop
add
add
push
xchg
mov
pop
dec
ret
cmp
or
lock
pusha
jo
les
xor
ret
negl
mov
sbb
mov
out
pop
push
and
repz
mov
add
fildll
push
loopne
push
inc
and
movsl
adc
mov
das
fwait
je
les
xor
add
jnp
loopne
arpl
inc
push
jns
adc
mov
jp
repz
mov
jo
pop
call
lods
sbb
outsl
add
mov
push
jno
cld
xchg
sti
lea
sbb
std
daa
push
mov
test
icebp
lods
jne
and
movsb
hlt
or
andl
jge
outsl
call
or
fldenv
lods
dec
jb
dec
xchg
mov
sbb
adc
sbb
fisubs
scas
inc
jmp
pop
cmc
add
or
stc
stos
hlt
decl
cs
rcrl
mov
jle
lds
and
insl
xor
aad
fbld
jmp
mov
mov
ret
outsb
or
das
xchg
xchg
mov
sub
rorl
in
jg
mov
mov
xchg
dec
jle
push
pop
inc
push
jg
test
ljmp
jnp
mov
jo
sti
jg
repz
jbe
mov
cmp
ret
sub
popa
mov
cs
add
cmp
jg
outsl
pop
inc
loopne
cld
jno
insb
lcall
mov
adc
sub
jle
dec
add
lea
addr16
pusha
loopne
rcl
test
xor
mov
neg
outsl
aaa
in
inc
add
sti
xchg
loope
jbe
dec
adcb
call
sbb
xor
mov
loope
or
pop
insb
xlat
mov
dec
gs
movsb
movsl
push
push
aad
lods
mov
jno
popa
xor
jmp
jbe
shlb
inc
mov
leave
test
mov
pop
jb
add
fnstcw
enter
mov
xchg
mov
xchg
sub
adc
mov
and
incb
repz
stos
mov
icebp
cmp
mov
add
sahf
pushf
jo
in
test
ret
inc
jno
enter
rclb
rorb
incl
addb
test
jge
pop
add
lods
dec
pushl
cmp
shlb
lret
cmp
rcl
mov
stos
sar
pop
movsb
adc
bnd
mov
jmp
jb
jae
fcomps
inc
xor
inc
dec
xor
stos
pushl
rclb
or
cli
push
iret
dec
inc
jle
or
stos
jecxz
add
outsb
push
jl
inc
pop
sbb
lods
cli
ret
subb
sti
jecxz
lea
push
push
repz
mov
cmp
call
fwait
inc
mov
push
in
movsl
inc
xor
idiv
jb
dec
lcall
xor
add
push
es
aam
out
fistl
push
or
mov
cmp
rorl
inc
xchg
bound
movsb
jne
sub
cwtl
mov
sbb
lock
or
cld
ficoml
mov
lahf
in
stos
outsl
aam
out
xlat
adc
sub
mov
outsl
mov
xor
add
xchg
xor
jo
call
mov
leave
dec
add
jnp
fisubrs
xchg
jle
push
fstps
jmp
jl
dec
fsubl
shrb
dec
sarb
es
out
lcall
push
inc
in
add
xchg
sbb
cmp
cmp
ret
notl
setns
std
rcrb
push
mov
sbb
adcw
ficoml
jge
jecxz
sub
adc
pop
add
push
xor
or
inc
push
mov
lds
rorl
mov
mov
js
xor
int3
std
out
mov
mov
aaa
and
mov
scas
idiv
cmp
std
test
imul
cli
addr16
fcmovnu
icebp
mov
cmpsb
sbb
popa
xchg
sarb
pop
in
push
or
std
fistps
cltd
push
fldenv
jns
pusha
sub
cmc
sbb
inc
sbb
call
pop
cltd
das
sub
xor
mov
lock
mov
movsl
test
push
cld
hlt
pop
push
and
cmp
pop
jmp
fnstsw
andb
das
fmull
sub
push
jp
outsl
leave
cwtl
mov
mov
outsl
insl
imul
mov
imul
mov
cmpsl
inc
repnz
imul
lock
push
jnp
je
inc
mov
rcrl
jle
jg
hlt
das
outsb
dec
clc
arpl
xor
mov
jne
or
lods
mov
push
inc
lret
cmp
inc
mov
dec
xor
xor
adc
mov
rcrb
stos
jno
movl
or
mov
mov
mov
sbb
arpl
xchg
sbb
or
push
lcall
xor
push
inc
mov
pop
shll
pop
push
dec
out
packsswb
fbld
mov
sub
inc
rcr
xor
rcll
add
mov
or
fstl
inc
push
icebp
rcrl
mov
lock
clc
adc
push
fisubrl
xchg
xchg
lods
pop
inc
jo
mov
pop
call
aaa
mov
stos
jno
ret
mov
mov
add
jb
call
mov
lods
mov
mov
aaa
bound
pop
fnsave
dec
les
dec
into
push
inc
push
mov
pop
add
sbb
add
cmpl
push
adc
pop
and
or
lret
ret
hlt
mov
sub
test
xchg
push
ja
ljmp
lds
addr16
flds
inc
inc
cmp
adc
sbb
mov
jl
mov
cmpsb
aaa
jg
imul
dec
loopne
push
cs
iret
loopne
jb
inc
add
and
ret
mov
and
xor
mov
clc
mov
iret
or
test
or
mov
xchg
add
aaa
adc
sub
cvtdq2ps
sti
inc
cmpsb
mov
enter
movsl
dec
jns
jg
fcomps
loope
sbb
scas
mov
arpl
adc
push
fildll
in
movl
ja
test
insl
outsl
jo
clc
jg
stos
or
lahf
mov
test
jns
lods
add
jge
fsts
push
insb
pop
and
test
fcoml
lret
or
pop
dec
mov
mov
call
sub
mov
in
popf
rcrb
cmp
or
or
cltd
lahf
push
shl
adc
fisubs
arpl
scas
sub
sub
dec
enter
xor
inc
jmp
stos
outsl
arpl
inc
stos
pop
xchg
mov
outsl
icebp
push
inc
movl
cmpsb
pop
xchg
movsl
mov
jbe
add
mov
add
fdivrs
clc
pop
mov
jecxz
cltd
inc
pop
pop
pushf
scas
ret
test
jmp
sbb
mov
je
inc
lahf
push
xor
mov
jae
mov
xor
mov
push
mov
into
adc
cmp
pop
or
pop
in
lret
les
mov
pop
loope
loope
pop
dec
lea
xor
aas
xchg
xchg
mov
fildl
icebp
mov
out
mov
mov
adc
icebp
or
cmp
mov
cld
ret
add
jmp
cs
mov
and
pop
call
js
inc
shlb
mov
aad
mov
enter
push
push
xchg
inc
and
jae
push
add
clc
push
sub
fisubrl
in
jbe
add
jp
adc
mul
mov
imul
push
outsb
sti
jbe
adc
bound
imul
or
dec
or
out
xorl
insl
sbb
repz
cmp
js
dec
or
cmc
ja
cmp
add
xchg
mov
lds
mov
cmp
sub
or
dec
cmp
cwtl
push
movl
pop
xchg
cmpsb
push
pop
adc
enter
cld
sub
fs
jmp
nop
scas
mov
pop
pop
push
je
stos
jb
cmp
std
and
sub
dec
sub
sub
outsb
shlb
mov
loop
dec
inc
xlat
mov
outsl
mov
lret
sbb
cmc
mov
cmc
cmp
movsl
push
aad
inc
lcall
and
add
adc
mov
sub
push
push
movsl
xchg
or
and
leave
or
and
jae
adc
xor
decb
idivb
sub
fdivl
pop
cmp
mov
adc
push
push
inc
out
ss
loopne
cs
fwait
xchg
xchg
sbb
xchg
or
pop
test
adc
jo
in
pop
in
dec
jno
outsb
aad
pop
inc
mov
push
inc
mov
mov
inc
push
adc
jle
mov
divb
jnp
mov
in
cmp
mov
js
push
rcr
mov
icebp
pop
pop
sti
xchg
add
or
push
test
ljmp
mov
fcom
xchg
es
and
jno
sti
repz
shll
jecxz
jbe
pop
in
rcll
inc
pop
mov
mov
ljmp
jns
loop
cmp
subl
add
inc
popl
cwtl
xor
sub
lock
inc
shrl
call
cmp
jnp
shlb
push
xchg
icebp
nop
pop
lcall
fwait
add
lret
xchg
test
adc
lret
lcall
andb
adc
cltd
clc
mov
inc
mov
xor
push
adc
rolb
fwait
and
or
cmp
xor
mulb
mov
inc
insb
inc
pop
movsl
or
xchg
and
jne
lock
inc
out
fadds
ja
clc
mulb
orb
fldl
or
ret
and
mov
cli
adc
stos
fldcw
inc
std
pop
add
sbb
jge
sbb
sbbb
in
xor
xor
mov
rcll
push
rcrb
sbb
adc
push
pop
hlt
xchg
push
idiv
cmc
push
sti
mov
xor
shrl
and
push
out
mov
or
pop
xor
jbe
cmp
push
mov
sahf
xchg
or
ds
xor
sub
or
inc
jge
adc
daa
xor
inc
xchg
add
pop
xor
scas
dec
cmp
inc
xor
push
test
mov
in
mov
test
mul
dec
cld
and
sbb
hlt
test
mov
mov
in
inc
add
push
mov
sub
test
orl
lret
outsb
stos
pop
add
adc
arpl
pop
loopne
dec
pushf
pop
push
inc
cld
or
jmp
mov
add
int
add
sub
or
dec
cld
xchg
adc
je
cmp
mov
mov
iret
push
cmp
hlt
test
jae
push
int3
adc
fsubp
or
sbb
inc
or
pop
ja
push
dec
stos
pop
inc
adc
scas
aaa
jns
bound
fdivr
test
incl
jne
mov
sbb
insl
mov
mov
rcrl
cld
decb
aaa
add
hlt
xor
hlt
shll
cltd
hlt
sub
ds
cwtl
ret
je
sub
sbb
call
jp
call
push
es
stos
adc
fdivl
xor
xor
mov
dec
cmpsl
call
fisubrl
dec
cli
inc
or
js
xorb
mov
rcl
das
sbb
pop
jmp
cmp
jbe
pop
jle
sbb
sub
dec
sbb
mov
icebp
shlb
dec
add
stos
mov
add
mov
mov
jb
sub
pop
cmp
int3
shlb
mov
test
push
add
push
shll
call
shl
xor
hlt
shll
pop
jae
ret
or
enter
std
or
push
add
rclb
inc
sub
loopne
rcll
xchg
mov
xor
or
out
inc
fisubs
or
sub
jo
ljmp
loopne
push
pop
dec
push
or
or
jnp
dec
ljmp
test
test
ficoml
sbb
mov
insb
sub
icebp
lods
stos
sbb
and
cmp
xor
xchg
xor
push
es
loope
je
fiaddl
ds
xchg
test
aaa
adc
mov
mov
mov
ss
sbb
out
call
pop
mov
mov
and
mov
xchg
mov
or
push
ljmp
loop
ja
imul
push
sub
sub
lods
xchg
inc
mov
aad
add
jle
cmp
jg
cld
hlt
xchg
adc
or
xchg
std
inc
pop
xor
stos
jbe
add
shrb
test
mov
mov
dec
and
cmc
fimull
jg
mov
mov
out
push
fwait
dec
sahf
mov
int3
mov
outsb
mov
bound
sbb
test
ret
cmp
pop
xor
sbb
mov
jge
data16
dec
es
or
mov
and
mov
cs
addr16
or
pop
nop
jmp
iret
cld
mov
push
sbb
inc
or
js
mov
addb
ret
pop
loopne
cmp
sbbl
mov
std
fildl
pop
fmull
mov
fisubrl
inc
sub
scas
and
mov
cmpsb
es
xchg
sub
dec
shlb
dec
icebp
adc
xchg
clc
cmp
add
sbb
dec
push
loopne
xor
es
int
sbb
adc
sbb
xchg
mov
mov
and
push
getsec
adc
push
stos
push
aam
cmpsl
mov
mov
adc
int
and
test
mov
xchg
mov
repz
aas
xchg
addr16
push
or
xor
push
in
mov
or
clc
sub
aaa
icebp
notb
or
sahf
cmp
lock
stos
cltd
pop
outsb
out
or
sbbl
cli
out
add
cs
rcll
cltd
nop
pop
sbb
cli
and
add
jbe
hlt
stos
xchg
ja
inc
dec
cs
sti
pushf
and
push
sbb
lods
daa
in
push
sbb
into
jnp
xchg
movsb
xchg
xor
out
adc
inc
sbb
int3
test
cltd
faddp
mov
scas
mov
cmp
mov
in
inc
push
outsl
cmpsl
lcall
mov
jnp
rcll
cli
jbe
adc
inc
mov
ret
insl
andb
inc
rcl
or
xor
stos
inc
cld
or
inc
and
pushf
cwtl
sbb
jmp
and
mov
or
or
insl
pop
jo
jno
incl
or
fstl
movsb
sbb
insl
jg
add
mov
pop
bound
mov
mov
xor
or
mov
je
pushf
pop
cmp
bound
jae
cmp
mov
xchg
popa
add
lea
enter
cmc
adc
xchg
andb
xchg
mov
push
scas
mov
lcall
xchg
add
insl
mov
cmpsb
xorb
icebp
mov
mov
cmc
ljmp
adc
stos
fs
jge
pop
mull
or
popf
sub
fdivs
or
add
sub
inc
jne
push
inc
cmpsb
clc
inc
aam
scas
dec
push
xor
sbb
outsb
xchg
adc
mov
lcall
push
add
push
test
jns
sbbl
sub
or
adcl
adc
pop
inc
pop
out
std
mov
inc
sub
aas
cmc
fisubl
mov
and
inc
inc
push
add
stos
push
xor
loop
pushw
decb
sub
jno
and
test
mov
adc
xorb
aam
call
and
movsl
icebp
jecxz
mov
clc
stos
test
push
and
sar
dec
aaa
and
lods
and
or
jae
mov
rcrl
pop
mov
jae
outsl
sub
adc
xorl
jns
mov
loop
mov
clc
lcall
jbe
cld
in
xchg
inc
iret
push
ds
inc
aam
mov
test
add
or
je
sub
fisttps
loope
jle
cmp
in
loop
jl
sbb
jg
das
add
mov
subb
adc
sub
sbb
sti
add
addr16
or
xchg
lods
sub
or
loope
cmp
jnp
repnz
mov
les
xor
dec
pop
loope
inc
fnstenv
fistps
add
ret
rorl
adc
sub
inc
push
clc
jne
inc
mov
xor
sbb
pop
cmp
aad
sub
cmp
pop
pop
cld
orps
mov
sbb
and
xlat
pushf
stos
fsubs
mov
dec
or
mov
push
or
pop
jb
shrl
nop
push
push
push
dec
push
pop
mov
pop
xchg
sub
sbb
push
roll
jnp
loop
mov
andb
xchg
dec
mov
out
ljmp
xchg
xchg
xor
mov
cltd
cmpsl
jnp
out
out
test
pop
lcall
fnstcw
add
xor
sbb
daa
and
test
cli
popa
add
nop
dec
cmpsb
push
push
add
sub
cmpsl
xchg
cs
decb
push
jo
aaa
xlat
loope
sbb
sarb
fildll
mov
clc
pop
leave
push
jo
pop
pop
mov
cmpsb
ljmp
call
scas
in
insb
mov
or
frstor
test
addr16
aaa
vpextrw
cmc
lds
jle
pushf
movsl
ret
sub
testb
pop
das
cs
lods
pop
mov
mov
or
loop
lods
and
cltd
ret
push
cmp
pop
adc
icebp
cltd
cld
fstp
clc
add
cmp
mov
push
clc
push
movsl
pop
clc
mov
clc
aaa
adcl
pop
aas
xor
jbe
sub
add
xor
test
lods
push
xchg
into
inc
out
iret
xchg
jmp
add
out
gs
lods
or
outsl
mov
lds
nop
testl
sti
cmp
pop
andl
dec
aam
aad
icebp
xchg
pop
xchg
dec
jnp
xchg
pop
sbbb
lds
push
adc
mov
iret
xchg
or
jno
mov
pop
leave
adc
in
jb
gs
push
mov
sbb
push
stos
jg
or
or
fsubrl
xchg
xchg
pop
sbb
outsl
cwtl
dec
daa
and
cmpsb
sbb
outsl
and
adc
mov
sbb
out
sbb
outsl
cmpsb
rorb
decl
mov
gs
inc
imulb
xor
sub
pop
cmpsb
je
inc
loope
fldt
sbb
stos
jle
jnp
sbb
fistpll
andb
mov
jo
inc
aaa
test
pop
or
mov
xchg
int3
sbb
xchg
in
test
in
mov
stc
xor
inc
leave
dec
popf
push
xchg
mov
push
ret
cmp
fdivr
mov
jnp
lcall
xchg
add
fildll
sbb
jae
dec
jne
popa
fistps
mov
pushf
ljmp
cmpsb
in
or
js
sbb
cli
shll
pop
push
outsl
cwtl
mov
adc
jmp
xchg
outsb
mov
add
adc
mov
push
inc
push
mov
adc
lahf
stc
adc
dec
push
ljmp
or
dec
mov
in
outsl
xor
mov
dec
mov
lock
sub
arpl
pop
test
sbb
sahf
lods
mov
push
scas
movlhps
push
mov
outsl
ret
jg
test
shr
mov
fdivrl
clc
mov
mov
cmpsb
inc
add
pop
lods
jmp
jl
and
inc
gs
lahf
ds
mov
push
ret
xor
outsl
mov
imul
and
int
lea
adc
push
scas
rclb
aam
adc
shll
ljmp
add
pop
cld
mov
addr16
aad
sbb
cmp
repnz
fwait
push
push
xchg
outsb
mov
das
std
outsl
inc
ror
out
or
fsts
jne
pushf
mov
in
jmp
push
shl
adc
cmpsb
xchg
in
test
adc
leave
pop
or
adc
jne
mov
add
jno
jg
shll
aad
pop
scas
addr16
aad
jle
xorb
fldcw
loop
call
cmp
repnz
movzwl
add
loop
in
mov
imul
aaa
dec
ret
subl
arpl
or
mov
mov
push
push
push
xor
cmc
stc
push
pop
leave
rcrl
cltd
movsl
pop
sub
cld
sub
sbb
test
sbb
enter
and
pushf
pop
xorl
xchg
cltd
xchg
outsl
mov
shlb
jns
push
pop
pop
incb
lods
les
push
movsl
lea
mov
fwait
dec
mov
jle
loopne
insb
das
inc
push
ljmp
imul
loopne
cmp
iret
dec
xchg
pop
fsubrs
sub
pop
mov
jne
or
push
icebp
or
xchg
test
addl
push
dec
sti
pop
lahf
mov
testb
dec
mov
imul
mov
repz
sub
jb
lcall
cmp
or
je
xchg
out
add
int
cmp
push
xchg
jne
sub
arpl
loop
out
cmp
andb
xchg
sub
fs
imul
arpl
cs
push
test
push
lock
pop
pop
subl
lds
jecxz
cmp
and
rcr
out
imull
pusha
mov
mov
jo
mov
push
push
and
icebp
lcall
xchg
jl
rcl
pop
mov
lahf
int3
xor
inc
or
xlat
xlat
loop
add
aam
sbb
ret
aam
and
lcall
mov
adc
push
aad
dec
add
dec
sahf
mov
movsb
fbstp
sub
mov
movsl
jno
xchg
fisttps
scas
sahf
and
jge
adc
mov
inc
dec
into
lods
call
call
mov
sub
mov
and
jl
mov
notb
mov
arpl
mov
pusha
mov
push
call
xorb
jne
ret
jnp
aaa
add
inc
std
es
aam
out
fcom
icebp
aas
dec
or
ror
xchg
jae
outsb
ret
insl
jnp
es
lret
xor
xor
pop
mov
testl
sbb
arpl
les
jp
in
fnstsw
andl
inc
sti
aas
pop
xchg
loope
cmpsb
push
push
xchg
lcall
add
mov
push
orl
pop
dec
lea
bound
sub
pop
push
out
inc
jg
inc
pop
adc
dec
in
ja
imul
mov
cmp
mov
xor
insb
xchg
push
inc
insb
xor
mov
cmpsl
call
and
fs
jmp
mov
mov
out
rorl
cmp
jo
mov
push
repz
push
add
bound
test
shr
in
ss
in
inc
and
fiadds
in
sub
sub
inc
shrl
lds
imul
loopne
das
push
fists
mov
fsubrs
add
push
and
es
pop
rorb
pushf
movsl
xlat
sar
and
mov
and
push
out
das
test
xchg
insl
pop
fcoml
nop
add
popf
xor
xchg
fimull
fadds
pop
daa
push
sbb
xor
adc
call
divl
je
std
mov
les
adc
jnp
aaa
mov
mov
lds
or
js
adc
cmpl
sub
push
mov
mov
jo
int
sar
data16
mov
scas
loopne
jge
or
cmp
jg
or
jne
int3
mov
aaa
lock
int
xchg
pop
cmpsb
lock
outsl
sbb
dec
mov
or
pop
ror
dec
testb
ret
mov
sbb
or
push
inc
jg
sbb
xchg
and
int3
scas
mov
fildll
pop
faddl
cmpsb
jmp
in
pop
clc
mov
shrb
dec
or
push
push
adc
cmpl
push
cmpsl
mov
pop
call
sbb
cmpsb
stc
ret
pop
fstp
fnsave
pop
and
ret
or
cmp
or
ja
call
push
ja
das
push
outsb
pop
or
jp
sarb
in
pop
and
test
ss
imul
or
adc
stos
push
jg
pop
call
inc
inc
daa
mov
cmpsb
lock
inc
inc
mov
xchg
loopne
pop
pushf
fmull
xchg
loope
xchg
fdivrs
or
incl
push
negb
incl
pop
pop
ret
sub
adc
add
mov
pusha
or
push
adc
lret
cmp
cwtl
xchg
mov
mov
sar
cmpsb
pop
inc
push
call
dec
jmp
adc
xchg
dec
insl
mov
mov
pop
mov
jae
dec
mov
scas
and
push
outsb
sbb
mov
push
pop
jp
out
gs
xchg
add
mov
jl
push
xor
test
fdivl
jns
std
sbb
shll
mov
je
es
movsb
sub
push
xchg
out
pusha
leave
insl
sub
or
sub
and
cld
fwait
xchg
push
leave
fldenv
test
rorb
outsl
mov
clc
cmpsb
outsl
aas
testb
mov
adc
pop
xor
cmp
adc
subb
dec
pushf
aam
arpl
xchg
lret
ret
ffree
out
or
xchg
cmpsb
sbb
pushf
jle
push
pop
inc
dec
jne
pop
repz
shll
sbb
mov
mov
rclb
push
sbb
push
fimull
loopne
cmp
inc
ja
add
cltd
sub
outsb
jo
push
and
testl
outsb
jg
mov
push
xor
xlat
jmp
movsl
push
rcrl
mov
test
int3
jecxz
cmp
dec
pop
mov
inc
dec
adc
out
cwtl
sub
daa
and
outsb
loope
test
in
adc
xor
shrl
adc
push
sahf
inc
sti
popf
into
fwait
sub
outsb
adc
xchg
xchg
mulb
cs
jle
loope
jnp
cli
xor
js
test
inc
xor
cwtl
mov
cmp
scas
lahf
sub
hlt
dec
loopne
scas
es
rolb
lcall
add
jge
jle
int3
lea
fdivp
or
andb
dec
jbe
inc
stos
add
jb
testb
push
mov
adc
insb
cwtl
push
push
fsubs
test
clc
push
movsl
add
in
cmp
lret
aad
fs
bound
dec
pusha
imul
xor
jge
fildll
mov
push
aaa
lahf
test
mov
out
or
imul
mov
loopne
cmpl
jecxz
sub
pop
jno
adc
insb
fs
mov
inc
mov
xchg
dec
aas
mov
push
mov
sarb
add
mov
pop
hlt
aas
mov
or
cli
pop
aad
adc
pop
or
sbb
out
pop
clc
mov
and
cmc
lcall
mov
loope
loopne
push
int
lds
sbb
pop
aaa
jge
jb
xchg
or
adc
mov
int
pop
xchg
lret
rorb
fs
pushf
add
xchg
shlb
mov
orb
xor
out
jg
or
call
push
es
xchg
inc
out
scas
pusha
dec
into
or
pop
clc
add
or
gs
adc
or
jmp
mov
ss
mov
mov
xor
adc
dec
cld
inc
in
inc
sbb
sbb
imul
adc
inc
movsb
push
inc
sti
lea
movsl
pop
movsb
dec
outsl
mov
push
jle
lret
jl
lds
popa
cmpsl
fs
cmp
movsl
push
frstor
sbb
pusha
adc
insl
sub
adc
std
idivl
int3
in
das
add
adc
or
mov
cmp
lret
xchg
add
aas
inc
xchg
out
js
inc
dec
mov
mov
mov
pop
add
mov
sahf
cwtl
jecxz
fstl
loopne
push
nop
stos
dec
jbe
mov
test
inc
out
sub
adc
and
mov
decb
mov
mov
cmp
mov
jecxz
je
jo
xor
and
xorb
or
fcoms
and
rcr
or
mov
psubsb
sti
outsb
mov
sub
xlat
push
test
push
inc
mov
inc
jb
and
or
and
add
mov
leave
mov
jb
sarl
in
in
xlat
stos
and
mov
das
rclb
repz
and
inc
adc
sub
pop
fdivl
std
add
adc
ds
out
push
push
add
mov
fstps
fld
lahf
mov
lret
add
or
push
jne
mov
pop
fstp
ret
testl
imul
cli
cmp
es
test
add
sbb
sbb
and
out
or
jmp
inc
shl
adc
popf
adc
mov
aad
gs
aaa
test
test
cmp
adc
inc
out
adc
push
jl
sbb
cmp
ja
mov
test
dec
jp
push
inc
int3
xor
mov
mov
or
pop
or
push
pop
xchg
or
push
xchg
test
sahf
mov
mov
sbb
jbe
movsl
push
ds
dec
sahf
xor
fdivrs
add
fsubrs
call
movl
test
test
lcall
sbb
adc
je
mov
xor
repnz
test
jns
inc
inc
jo
push
xor
ljmp
and
pop
mov
cmp
mov
push
loope
scas
aad
or
xchg
cld
fiadds
add
add
paddd
pop
mov
loop
xchg
add
clc
cli
fsubrl
mov
pop
add
mov
daa
pusha
sti
pop
mov
in
or
push
sub
decl
lods
sub
fstpt
ljmp
lock
inc
push
test
pop
push
pop
xor
push
adc
cwtl
mov
shrb
mov
add
ljmp
and
test
leave
pop
xlat
xor
cli
inc
outsl
std
call
nop
inc
nop
loopne
push
adc
adc
add
add
jbe
scas
or
lcall
cmpl
or
push
outsb
xchg
push
jg
or
fxam
push
push
xor
fdiv
ficoml
pop
dec
or
les
jae
cmc
xor
inc
stc
ret
jne
mov
and
or
icebp
mov
loopne
push
test
pop
sbb
lock
mov
push
mov
push
add
mov
test
dec
inc
jle
aaa
clc
or
xor
lock
add
outsl
lock
test
mov
jmp
pop
loopne
andb
iret
mov
aas
push
cs
je
shrb
into
lock
mov
cli
dec
xor
subb
xor
mov
fistpl
mov
mov
xchg
jmp
add
insb
test
pusha
push
adcl
and
lods
filds
and
movsl
add
pusha
and
gs
arpl
jl
outsb
mov
repz
fsub
mov
test
lahf
shlb
mov
jge
jge
sbb
rcll
jg
decl
adc
dec
out
arpl
dec
pop
adc
rcrl
cs
icebp
inc
adc
pop
push
decl
push
adc
jns
arpl
in
sbb
fsubp
adc
xchg
clc
lods
lahf
xorl
das
xchg
fsubrl
and
add
icebp
dec
cltd
ljmp
xchg
out
les
dec
shrl
or
lea
dec
test
or
pop
adc
xchg
cmp
clc
jmp
xchg
out
nop
into
addr16
outsb
pop
xchg
and
xor
inc
pop
lods
add
jnp
push
in
mov
sub
jbe
sbb
push
lods
hlt
xlat
je
or
jae
jnp
jp
loop
sub
mov
mov
jnp
fiaddl
jns
adc
mov
cmp
sub
and
std
cmp
xchg
sub
adc
gs
pop
push
aam
insl
imul
enter
jl
inc
or
mov
dec
fists
es
ljmp
and
push
fisttpl
enter
and
dec
push
pop
push
fsubrp
sbbb
inc
xchg
pmullw
mov
shrl
jp
into
sbb
add
mov
xor
and
push
sarb
ret
ja
xor
fisubs
insl
and
mov
xor
shll
fstl
xchg
xor
insl
imul
mov
dec
pop
sar
pop
test
pop
rorl
mov
cld
cwtl
call
es
or
add
cmp
or
xor
or
das
add
and
push
pop
xchg
lods
sbb
scas
test
ljmp
test
add
dec
or
das
mov
and
loope
movsb
mov
or
or
incl
test
adc
ljmp
mov
sbb
ret
test
dec
xchg
nop
adc
add
ja
es
add
pop
push
mov
mov
pop
and
fnstenv
sub
repnz
sub
mov
lock
adc
leave
adc
test
aas
mov
adc
shl
pop
add
adc
ljmp
fdivs
int
pusha
and
mov
push
lds
mov
orl
push
roll
push
adc
es
repz
mov
dec
jno
sbb
xor
mov
push
mov
inc
add
bound
fcmove
or
push
faddl
or
aas
sbb
dec
dec
shrb
cmp
sub
sbb
push
xor
and
dec
mov
inc
adc
mov
movsb
test
in
adc
push
rorb
xlat
lret
roll
push
mov
mov
lret
add
mov
jnp
pop
scas
sub
add
jp
jge
notl
push
mov
loopne
sub
test
test
ss
sub
adcb
stc
push
sbb
xor
addl
or
div
sbb
mov
sbb
sub
push
repz
and
pop
scas
call
insb
pop
sub
add
add
adc
inc
xor
add
sbb
mov
sbb
das
push
fcomp
jae
outsb
testb
addl
inc
jmp
inc
mov
inc
add
jg
mov
or
leave
inc
arpl
add
out
add
xor
and
mov
rorb
ja
xchg
test
push
clc
in
mov
sub
lock
daa
add
sub
lods
bound
pop
add
daa
das
lods
rolb
rorl
mov
cmp
in
ja
ja
dec
jle
mov
push
xchg
loop
jbe
adc
addb
xchg
jb
mov
add
cmc
clc
sti
nop
je
push
out
leave
pop
fcmovnb
dec
cmp
cmp
jo
pop
loopne
add
sti
sbb
add
pop
cmp
outsl
or
push
sbb
mov
or
adc
jge
in
xor
popf
push
push
and
pop
mov
jg
sbb
lret
loopne
cld
or
push
nop
aas
xchg
mov
sub
sub
dec
cwtl
dec
cmp
lods
mov
sub
and
lcall
lods
jmp
pmaddwd
mov
ja
mov
sahf
loopne
pop
inc
mov
or
testb
cmp
add
cmpsl
lea
push
stos
imul
or
push
rcl
xchg
nop
mov
pop
fbstp
pop
rclb
lods
divl
enter
xchg
fdivr
cmpsb
jle
push
and
sub
cmp
out
sub
outsl
or
rcll
jg
mov
inc
xor
xchg
xchg
xchg
loopne
sub
mov
push
sub
pop
into
mov
add
fimull
stos
sbb
jg
daa
in
test
add
int
subl
sub
repnz
test
xchg
psubd
jb
fwait
and
data16
testb
xchg
popa
addl
sti
std
nop
out
stc
test
stos
mov
sub
mov
cli
sbb
popa
xor
jb
fsubrl
mov
mov
in
adc
repnz
push
push
dec
ljmp
imul
adc
jne
pop
dec
dec
inc
fdivp
add
sahf
push
not
pmaxsw
and
or
les
repnz
in
inc
or
lcall
ss
fisubrs
push
pop
xor
je
lea
shrl
add
je
stc
imul
dec
xor
and
enter
inc
test
jmp
dec
adc
mov
mov
xor
dec
jl
adc
cld
ret
jmp
adc
dec
aas
adc
inc
dec
neg
ret
add
add
ja
jno
or
adc
dec
xor
and
lods
adc
or
add
lods
mov
sub
xor
xlat
aas
xor
outsl
adc
dec
out
push
xacquire
or
inc
inc
fcmovnu
sub
sub
out
xchg
shrl
and
inc
jne
ss
cmp
mov
jo
in
and
or
push
mov
cmpb
mov
fdivs
into
push
adc
mov
subl
add
nop
pop
fisubrl
test
push
xchg
push
push
test
mov
adc
add
pop
out
ja
pop
add
or
xor
inc
mov
popa
jecxz
fnstsw
in
aam
and
aas
in
pop
inc
sub
popa
cmc
sbb
or
testb
insb
sub
sbb
and
xor
in
lods
push
cmp
shrl
push
es
pop
daa
add
sbbb
loope
push
sbbb
add
or
popa
repz
inc
mulb
xorl
aam
fldl
or
jns
daa
jl
xor
jecxz
cmp
push
mov
out
insl
jnp
mov
int3
adc
mov
xor
in
dec
mov
push
roll
jns
ret
mov
scas
fstpl
loope
ret
xchg
jae
je
fwait
stc
mov
subb
dec
ljmp
call
cmp
add
or
outsl
push
sbb
or
scas
jp
cmp
leave
sbb
testb
shlb
call
test
push
std
jno
add
ds
dec
sbb
add
call
mov
cli
cli
lahf
jp
xor
mov
test
cmpl
add
push
aad
mov
aam
or
sahf
xor
out
aaa
pop
xchg
push
sub
adc
mov
push
or
stc
ds
int
push
js
mov
cmp
cld
daa
push
push
and
or
and
add
push
dec
out
fwait
or
scas
mov
push
dec
ficomps
sub
ds
testl
mov
fwait
icebp
int
test
popa
pop
push
add
jl
add
add
in
enter
arpl
aaa
xchg
xchg
inc
mov
dec
cmc
or
inc
cmpl
sbb
nop
ss
pusha
or
movb
sbb
lret
or
sti
ret
and
add
stos
sbb
lds
inc
rcr
popa
jl
cmc
das
mov
sub
xchg
adc
movsb
add
inc
xor
pop
pop
data16
clc
andl
fcoms
aam
je
sbb
mov
icebp
sub
add
shlb
je
xor
add
xchg
pop
cmp
jle
pop
outsl
ljmp
ss
popl
aam
out
pop
fistpl
sahf
repz
add
mov
jb
mov
inc
inc
test
andb
popf
or
add
fs
inc
inc
and
jge
out
sbb
loop,pn
ror
adc
push
sub
xor
add
scas
cmc
add
adc
sbbb
or
mov
xchg
aad
and
int3
mov
xor
cmp
insb
or
sbb
sub
mov
xchg
hlt
mov
bound
es
xor
and
lods
dec
cmp
and
add
mov
dec
inc
rclb
mov
xor
or
movsl
xor
call
rorb
cltd
movsb
inc
jno
insl
pop
leave
cmpb
or
pop
testl
test
add
xor
adc
insb
sub
xor
sbb
adc
jb
sub
roll
sbb
jl
xor
inc
adc
cmp
sub
adc
stos
adc
jecxz
add
dec
sub
jge
int3
or
int3
xchg
mov
cmp
inc
add
mov
jbe
sbb
adc
fildll
mov
jecxz
sbb
inc
add
add
dec
push
mov
aad
les
in
shrl
insl
dec
fdivr
ljmp
sbb
imulb
mov
cs
fisubrs
fwait
cli
lret
imul
mov
test
inc
fistpl
mov
daa
shll
add
js
adc
adc
add
xor
arpl
stos
in
subb
inc
enter
inc
rorb
xchg
mull
insb
push
mov
lods
push
xor
pop
leave
cmc
cmpsl
cmp
insl
mov
int3
cmp
lcall
add
push
lock
pop
mov
test
lret
xorb
inc
and
out
cld
out
decl
cld
stc
pop
xchg
shll
adc
lock
jb
es
cs
test
cld
adc
mov
decb
push
insb
inc
push
idivb
sub
sbb
sbb
and
and
in
mov
jb
add
imul
clc
and
sub
adc
test
jle
xchg
rcl
push
icebp
fistps
xchg
mov
lods
mov
les
ja
fisttps
mov
mov
int
mov
ja
sbb
and
loope
or
jno
and
sbb
xchg
stos
or
dec
lock
sti
outsl
and
or
sbb
pop
aaa
add
mov
jle
add
mov
std
lods
push
xlat
insl
push
push
adc
add
scas
xor
in
test
fbstp
mov
clc
test
jno
sahf
push
shr
daa
ja
bswap
bound
mov
ja
cmp
nop
sarl
xchg
mov
pop
jge
sbb
mov
pusha
sbb
push
mov
add
mov
xchg
xchg
popl
jns
icebp
es
outsb
adc
fidivs
or
orb
insl
jl
insl
add
inc
add
cmp
and
outsl
lock
stc
push
pop
push
lret
sbb
cmp
sub
cmp
adc
popa
add
imul
jbe
xor
xchg
dec
xor
incl
sti
test
mov
subb
cltd
mov
pop
aad
and
out
cmp
je
fisubrs
mov
arpl
and
jle
push
movsl
or
or
xchg
dec
sub
push
je
inc
mov
aaa
outsb
cli
ja
add
jl
xor
ljmp
mov
sub
dec
lods
mov
scas
pop
pop
cmp
push
push
lret
xchg
inc
pop
push
adc
shll
adc
fwait
sub
loopne
sbb
js
xorl
xor
inc
xor
sub
and
addr16
pusha
jmp
rclb
mov
mov
mov
mov
out
inc
shld
icebp
jbe
pop
fcomp
add
or
inc
adc
jo
xchg
adc
lock
pusha
int
int
sahf
add
mov
cwtl
mov
add
inc
movsl
push
pop
sbb
loopne
xor
xor
push
mov
jl
mov
xor
dec
fcompp
sub
js
add
dec
out
push
decl
mov
aad
popa
dec
jae
add
sub
pop
cmpl
or
sti
xchg
push
fisttpl
mov
inc
js
test
adc
adc
pop
shlb
pop
inc
mov
sub
lods
xchg
dec
jb
add
mov
ret
sub
adc
insb
and
inc
aas
btc
pop
inc
test
sbb
cli
ja
cmp
clc
jecxz
loopne
js
push
mov
fbld
and
mov
lea
sub
adc
fimull
push
mov
adc
pop
add
and
mov
ret
cmp
jno
pop
inc
add
lds
push
cltd
sti
and
add
loopne
fmuls
pop
or
pop
fnstsw
shl
fcoms
jbe
aam
xchg
inc
rorl
add
and
mov
inc
mov
pop
in
cmp
shll
add
loop
fwait
jno
xor
shll
stos
xchg
and
mov
jno
or
addl
inc
push
xor
cmp
sub
pop
xor
pop
sub
jo
mov
cwtl
loopne
das
jae
lock
push
int
add
data16
in
xor
incl
lret
fadd
das
test
or
inc
mulb
xlat
movhps
or
sub
adc
shlb
nop
sub
sbb
mov
inc
jge
stos
adc
sbb
dec
xchg
aas
not
adc
lock
adc
mov
fs
cmp
popf
or
inc
pop
iret
fdivr
shrl
add
aas
jge
or
push
dec
sub
lahf
jb
sub
sbb
xchg
mov
lcall
pop
mov
xor
or
sbb
stc
push
push
shrl
jo
fs
sbb
orb
mov
add
cld
popa
je
sbb
push
pop
jl
decl
or
sbbb
mov
inc
mov
hlt
aas
push
arpl
pop
adc
mov
aam
rol
ja
int3
popf
js
fiadds
inc
sbb
mov
incb
bound
inc
rol
pop
add
adc
and
je
dec
jbe
add
sub
sbb
inc
mov
cmpsl
mov
testl
mov
test
movsb
mov
fsubr
xlat
inc
mov
push
xchg
lds
push
enter
add
push
adc
sbb
ljmp
xor
dec
mov
adc
inc
les
mov
and
adc
xor
dec
push
inc
int
mov
stos
cltd
or
test
cmp
aam
arpl
imul
lods
addb
test
jb
fcomip
in
fucompp
jo
xchg
pop
adc
inc
adc
ds
dec
sbb
out
ret
ret
jp
sub
lahf
int3
outsl
lock
mov
sbb
sub
dec
and
mov
jmp
inc
arpl
mov
insb
pop
fldt
sub
js
ret
mov
xor
add
rol
push
add
add
push
add
les
cltd
fsts
call
decl
out
inc
mov
adcb
setle
jmp
push
xor
clc
out
jmp
out
push
or
mov
jo
sub
and
inc
cld
cmpsl
pop
sbb
fcoml
or
jg
pop
testb
mov
sub
push
sbb
add
or
nop
xchg
sbb
out
push
pop
or
les
dec
inc
sub
adc
dec
xor
and
or
mov
out
std
jecxz
jp
fstpt
subl
popf
push
sti
aaa
cmc
test
or
in
xor
add
fists
push
imul
cmp
and
ja
add
in
mov
in
dec
adc
icebp
sub
pushf
pop
fs
insb
lds
sarl
dec
movsl
mov
aad
fwait
ja
and
mov
cmp
fnsave
pop
in
mov
fidivrl
fisttpl
inc
adc
jno
in
and
pop
iret
mov
add
dec
fnstsw
push
pop
cwtl
and
sub
mov
xchg
xchg
test
adc
lds
ljmp
push
orl
xchg
mov
sub
sub
outsl
shlb
cwtl
mov
and
inc
mov
cs
mov
lahf
jmp
cmc
scas
dec
adc
xchg
mov
mov
and
or
mov
inc
das
ss
jns
movsl
inc
xchg
mov
jnp
sub
add
xchg
add
xchg
movsb
loopne
adc
jno
push
test
into
or
inc
js
xchg
add
out
lcall
adc
jno
jp
aad
and
popf
mov
push
ljmp
xchg
inc
push
es
cmpsl
outsb
adc
ljmp
ja
push
cld
outsl
or
mov
ds
out
stc
mov
mov
insb
je
clc
outsl
frstor
xor
nop
jae
mov
dec
les
jne
loopne
xor
mov
adc
cmp
rcrl
jno
ljmp
lock
lret
insb
xor
outsl
lea
add
jp
adc
lret
sbb
je,pn
xchg
cli
out
sbb
push
xor
les
orb
shll
add
inc
and
daa
stc
jl
arpl
mov
cmp
or
cld
mov
in
inc
and
clc
or
pop
in
mov
inc
mov
pop
and
insl
stos
sbb
mov
mov
sahf
push
jge
in
stos
mov
ljmp
stos
cs
das
pop
mov
push
sti
add
gs
scas
scas
insb
fildl
add
xchg
stc
repnz
gs
add
fldt
clc
cmp
scas
lcall
inc
dec
mov
adc
xor
mov
push
mov
ja
sub
sbb
cltd
add
cmp
fs
pushf
stos
fcmove
mov
fadds
pop
insb
addb
mov
mov
adc
call
mov
and
mov
push
rorb
loop
cmpsb
es
dec
xor
inc
dec
mov
inc
daa
push
mov
fadds
adc
fsub
arpl
daa
mov
pop
gs
sub
rorb
addl
or
fdivrp
jno
pop
pop
rcrl
xor
jecxz
dec
inc
inc
mov
xchg
pop
call
movsb
inc
cmp
out
xchg
or
jbe
pop
dec
mov
push
push
adc
ret
jb
mov
hlt
das
sbb
mov
cwtl
aaa
lea
popl
xor
mov
mov
inc
sub
out
xor
or
mov
jnp
sub
insl
dec
rcll
inc
push
mov
add
inc
rcll
fwait
incl
dec
test
pop
cs
jne
mov
out
and
sti
xchg
jl
std
mov
in
dec
add
or
fucomip
loopne
popa
stos
adc
nop
ret
dec
mov
rorl
scas
pop
bound
outsl
ret
fwait
dec
pop
jg
pop
ficoml
in
test
mov
cmp
sahf
push
lahf
add
xor
jbe
pop
cmp
les
xor
mov
fldenv
repnz
push
in
cmp
or
fcompl
xchg
bnd
add
xchg
adc
mov
xor
sbb
mov
enter
pop
ss
pop
andb
je
xor
lock
test
xchg
call
jle
pop
lret
hlt
mov
arpl
inc
jecxz
addr16
dec
fists
cmc
pop
rorb
lock
inc
fs
stos
push
roll
add
fldenv
jb
xor
adc
xlat
fwait
pop
cmpb
jmp
or
mov
ficomps
or
shrl
mov
test
or
sbb
shlb
fidivl
out
neg
lock
je
cmp
xor
jg
jmp
xbegin
outsl
mov
lahf
adcb
inc
rorl
mov
stos
mov
sbb
es
mov
dec
pop
test
int3
ret
adc
xor
hlt
push
pop
subb
xor
leave
je
call
adc
ljmp
push
adc
insl
enter
lea
pop
mov
add
loope
mov
add
add
adc
mov
dec
aam
and
cld
add
or
outsl
shlb
xchg
int3
cmpb
enter
xor
cmpsl
xor
inc
mov
xchg
inc
cld
cltd
cmp
pop
test
push
aam
aam
pop
lret
cmpsb
not
or
xchg
clc
out
mov
cld
sbb
xor
call
sahf
les
inc
jno
ds
rolb
add
aaa
loop
ss
and
js,pn
cmp
and
jmp
pop
dec
mov
add
aaa
jbe
sti
or
mov
movsl
xor
int
dec
adc
dec
mov
add
pop
addl
mov
push
lea
lock
and
pop
add
sbb
xor
and
les
insb
aas
push
les
push
inc
sbb
stc
stos
push
add
inc
inc
and
inc
sub
dec
add
mull
outsl
jmp
xchg
inc
jp
test
add
repz
sub
xor
xchg
mov
push
jge
lock
in
mov
fsubr
js
lea
mov
icebp
popf
jo
dec
inc
adc
inc
mov
dec
lret
or
cld
xchg
cmc
aaa
mov
push
push
lea
and
rcll
cmp
ret
pop
fldenv
cmc
scas
adc
sub
data16
add
ret
data16
int3
outsl
mov
push
sahf
orb
lods
mov
lea
scas
mov
pop
xor
stos
or
or
and
sub
pop
ss
loop
jg
xor
notb
push
cmp
cmpsb
fnstcw
jbe
mov
push
and
push
lods
xor
stos
fdivs
sub
jbe
fistps
lock
inc
mov
push
add
sti
push
out
sub
push
pop
and
mov
adc
out
pushf
mov
js
cli
mov
sub
inc
dec
pop
sahf
inc
and
dec
mov
fildll
outsl
cltd
sti
fwait
push
loop
push
jle
les
in
mov
aaa
sub
bound
xchg
imul
sub
lret
repnz
fcompl
sbb
dec
push
cmp
cmp
jle
mov
mov
movsb
push
jecxz
push
es
sub
shlb
mov
loop
sti
xor
pop
mov
fsubrs
lods
pop
mov
das
lds
sub
iret
fs
mov
xor
leave
pop
inc
repz
lods
mov
mov
pop
or
xbegin
int
mov
mov
mov
lods
inc
cli
inc
sub
outsl
inc
mov
dec
or
lahf
outsb
add
fnstcw
daa
inc
das
aaa
lock
jne
xchg
test
orl
repz
pusha
push
mov
mov
addr16
aaa
lock
add
leave
pop
test
call
scas
pop
outsl
mov
repnz
cmp
popa
fwait
dec
shlb
inc
das
xchg
ficomps
clc
add
cli
mov
scas
mov
addl
or
adc
mov
or
insl
call
adc
add
pop
stos
outsl
cld
jg
movsb
call
and
pop
sbbb
adc
hlt
add
aam
and
incl
sbb
repnz
add
add
push
incb
inc
int
add
mov
push
mov
lcall
pop
out
and
jae
inc
inc
insl
cmpsb
and
rclw
dec
inc
filds
inc
popf
mov
pop
add
jo
and
and
out
dec
movsb
sub
xchg
cmp
dec
incb
pop
in
fldcw
xlat
outsb
das
sbb
mov
into
sub
pop
or
or
adc
or
test
inc
cmpsl
and
and
jecxz
adc
pop
or
dec
dec
jb
push
jnp
adc
repnz
jno
sbb
jo
mov
neg
dec
cmc
or
popf
or
adc
or
dec
ficoms
xor
fidivl
or
sbb
or
or
dec
pop
mov
rcrb
sti
add
xor
adc
inc
mov
es
inc
mov
lock
sbb
jns
mov
int3
fsubrs
xchg
lea
rolb
std
jle
rolb
push
jg
push
pop
push
ja
popf
inc
xchg
int3
mov
dec
cmp
xor
nop
aaa
add
push
out
mov
add
lds
add
add
sub
gs
clc
push
add
shll
dec
sub
lods
mov
or
pop
and
mov
sub
icebp
dec
gs
je
and
sbb
bound
lock
imul
cmc
push
sub
adc
mov
pop
mov
stos
enter
inc
xchg
mov
scas
jl
icebp
and
sub
jno
xchg
cmp
pop
adc
rorl
cmp
cmpsl
repz
pop
and
sub
add
xor
or
scas
rolb
jg
push
xor
xor
add
mov
lret
push
test
ja
sbb
test
inc
repz
and
inc
fwait
sarl
and
xor
loopne
mov
out
jbe
stos
and
sbbb
xchg
mov
sub
adc
ret
and
pop
js
mov
iret
in
mov
es
pop
push
jmp
jne
push
loope
cmp
pop
adc
mov
jge
clc
xor
neg
neg
cmp
xor
popf
ror
arpl
shlb
adc
or
inc
rol
dec
push
jo
pusha
ss
packuswb
cwtl
xchg
ret
sub
and
test
ljmp
pop
and
or
add
cld
or
xor
test
push
jbe
push
sbb
and
xchg
adc
ds
imul
imul
cmp
loopne
mov
ficoms
lods
pop
sbb
adc
add
inc
pop
stos
mov
insl
jo
inc
mov
inc
and
shlb
inc
iret
flds
lret
xor
xchg
inc
dec
dec
rolb
mov
add
jae
pop
outsb
scas
insb
adc
loopne
aaa
mov
or
xchg
fsubs
mov
sub
cmp
mov
mov
mov
mov
cmpsb
test
or
add
pushf
cmc
mov
cld
push
pop
jb
std
je
call
mov
jg
mov
and
jo
cmp
cmp
cmp
mov
in
xchg
xor
push
test
fdivs
rclb
inc
xchg
pop
mov
sbbl
mov
pop
xor
mov
mov
std
add
negb
jmp
fs
add
fistps
push
pop
loop
adc
pop
lock
gs
nop
dec
aas
jbe
mov
add
fcoml
loop
xchg
dec
sar
jmp
xchg
call
mov
push
pushf
add
inc
cld
adcb
daa
fstps
xchg
dec
fs
pop
xchg
cwtl
cmp
cs
mov
sbbb
repz
jo
insl
or
pushf
push
add
sub
sahf
mov
mov
adcl
mov
ja
mov
ljmp
sub
pop
add
xchg
push
rcrb
or
ret
sbbl
xlat
ljmpw
ud2
xchg
dec
push
jne
jnp
cltd
dec
jb
notb
scas
adc
minps
or
arpl
mov
dec
mov
stos
loopne
insl
ret
jo
test
orb
xchg
shrb
push
data16
push
cs
sub
fbstp
orb
inc
fcompl
cmpsl
arpl
ret
add
in
pusha
pop
lds
adc
or
add
mov
pushf
sbbb
pushf
mov
std
imul
sbb
jmp
xor
pop
dec
adc
rorb
or
push
subl
adc
jle
sub
in
test
cmc
xchg
repnz
and
bound
std
inc
sbb
loopne
loop
inc
add
inc
loopne
mov
es
cmp
jo
inc
insl
cmpsb
lahf
adc
insl
cmpsb
adc
mov
push
cmp
xor
loopne
xor
inc
sahf
dec
inc
adc
es
enter
pop
cmp
das
cmc
cmpsl
pop
xlat
movsl
pop
xchg
inc
sbb
dec
sub
inc
or
xor
fs
add
add
bound
das
pop
mov
test
lret
mov
adc
fimuls
popl
mov
and
add
lret
imul
sbb
push
out
aas
adc
xor
jmp
ljmp
mov
sub
sub
mov
sti
lock
push
mov
pop
repz
and
adc
jo
cmp
rcrb
jbe
pusha
enter
ficoms
sub
jb
js,pn
push
dec
repnz
cmp
mov
sub
das
mov
std
lret
lds
jae
push
xchg
dec
xchg
add
dec
or
jb
jae
in
outsl
jle
movsl
sub
add
lock
adc
add
mov
mov
and
daa
sbb
push
ret
xor
mov
jg
add
xor
test
nop
push
les
aaa
test
mov
inc
test
pop
jg
test
xor
or
out
call
cmpsl
pop
mov
xor
into
orl
xchg
xchg
push
in
jmp
xchg
mov
inc
mov
js
mov
adc
cmpb
aaa
dec
add
xchg
mov
jns
rep
sbb
arpl
cmp
sub
addb
pop
mov
das
adc
push
add
sbb
icebp
push
push
aas
subl
adc
push
and
inc
lods
push
jl
das
insb
les
inc
lcall
adc
out
add
jmp
xor
fldz
out
adc
incl
jnp
addb
add
pop
out
mov
cmp
adc
out
push
lds
adc
popf
mov
inc
inc
test
mov
inc
outsl
push
push
mov
mov
cld
xchg
push
adc
mov
add
popa
push
shrb
imull
fwait
and
into
jae
mov
cmp
dec
adc
xlat
and
adc
push
and
lock
mov
add
push
sub
ljmp
mov
xchg
mov
jbe
inc
lods
adc
loopne
and
mov
sbb
in
sbb
adc
xchg
sub
jns
das
je
push
inc
jp
shlb
pushf
cmp
aam
jp
push
xor
les
dec
mov
xchg
adc
test
adc
sub
mov
sbb
push
inc
test
mov
xchg
xor
xor
mov
pop
xor
mov
mov
inc
lds
rorb
mov
orb
xor
aas
mov
out
dec
and
sub
sbb
jg
out
or
loope
pop
rorb
sbb
xor
adc
push
roll
sub
pop
add
push
rorb
add
fsincos
les
add
push
dec
int
pushf
inc
cltd
cmc
xchg
adc
mov
orb
shrl
icebp
adc
adc
add
pusha
imul
bound
enter
out
add
bound
push
loop
nop
sbb
cwtl
test
mov
das
shl
andl
add
mov
xchg
or
inc
inc
es
pop
inc
xor
ja
loopne
mov
inc
mov
ds
mov
imul
rolb
or
sbb
cmpsb
push
insb
cwtl
and
add
xor
test
add
adc
sahf
mov
inc
adc
lods
repnz
xor
adcb
adc
sbb
adc
stc
movb
bound
add
fists
cld
or
addb
cld
pushf
add
aaa
cmp
dec
movhps
or
sbb
mov
js
or
sub
and
add
popa
push
rcrl
dec
aaa
add
clc
clc
and
arpl
out
adc
pop
add
outsl
jl
in
mov
andl
add
test
mov
cmp
cmp
add
shlb
add
mov
mov
fidivl
mov
xchg
fucomip
mov
mov
jg
cmp
dec
les
hlt
lea
or
fdivrl
push
fsubs
jae
in
and
sbb
pop
out
xor
push
jb
dec
std
xchg
mov
test
pop
out
loope
jne
or
into
ss
or
rorl
cmpsb
jg
lahf
add
roll
add
jge
incb
data16
pop
dec
xchg
in
repz
aaa
jle
or
cwtl
loope
and
in
sarb
mov
mov
rorb
pop
mov
fnstsw
xor
das
push
adcb
mov
sub
mov
mov
enter
push
inc
test
rol
and
mov
adc
aaa
fisubs
mov
jo
inc
push
leave
es
test
or
push
pop
jge
sbb
scas
mov
jg
push
adc
sbb
movq
push
mov
mov
mov
push
rcl
pop
push
cmp
jae
cmp
jne
popa
push
std
push
xor
in
imul
fs
jne
incb
pushl
movsb
add
xchg
mov
cwtl
sbb
es
outsl
inc
pop
mov
and
mov
add
and
push
mov
inc
sub
pop
dec
cmp
xchg
lock
ror
mov
mov
je
mov
aaa
je
xor
lahf
cmp
and
std
cmpsb
xchg
xchg
xchg
xchg
inc
xor
push
jno
sub
mov
rcl
and
sarl
scas
jnp
lock
mov
adc
outsb
jae
sbbl
mov
dec
pop
ret
lea
push
loopne
push
inc
test
mov
mov
test
add
pusha
and
dec
mov
repz
fidivs
and
cmp
xlat
loope
mov
jae
pop
jg
sbb
ud0
decl
sub
daa
add
sub
or
lock
dec
dec
or
jns
cld
call
ds
sbb
inc
cmc
js
adc
pop
sbb
lods
cmp
pop
insb
ja
inc
inc
fcoms
pop
sub
mov
mov
add
ret
and
or
pushf
cmp
lods
sbb
jbe
pushl
and
insb
sbb
cmpsb
lcall
sub
fs
gs
ljmp
inc
dec
sbb
jne
jb
cmp
les
dec
mov
or
clc
in
dec
shrb
ja
rorl
add
cmp
or
clc
inc
rorb
subb
cmp
iret
mov
decl
mov
lds
into
imul
xor
mov
outsl
ljmp
cld
nop
movl
and
aam
mov
lds
hlt
pop
cld
sub
loope
ds
fidivl
and
into
add
std
idiv
dec
dec
mov
and
andl
ret
xchg
roll
push
xchg
xchg
stos
mov
je
mov
dec
mov
jge
pop
lock
hlt
lea
add
mov
ficoms
sti
mov
pop
call
rcll
scas
cmpsl
push
cmp
jnp
loopne
and
dec
mov
cmp
inc
add
push
or
mov
pop
aad
and
add
test
inc
outsl
dec
sub
xchg
scas
sar
dec
mov
inc
movl
jl
fwait
sarl
inc
jle
push
dec
pop
cmp
subl
adcw
jns
or
mov
mov
ja
and
jp
sar
repnz
das
lock
pop
jle
xchg
fwait
mov
popa
sub
pop
jmp
es
addr16
xchg
das
inc
inc
sti
jecxz
inc
shrl
scas
arpl
or
sti
jecxz
xchg
xor
clc
mov
insl
push
in
iret
jecxz
sbb
or
scas
cmp
push
fisubs
push
push
push
xchg
inc
arpl
hlt
pop
clc
pop
mov
lods
sbb
jl
stos
in
cmp
enter
incl
mov
lret
cmp
mov
xor
repnz
mov
and
push
enter
in
xor
or
decl
adc
int3
lcall
pushl
jge
bound
mov
jmp
shr
cmp
push
and
ljmp
lds
mov
mov
and
adc
lods
mov
das
sub
xor
jmp
mov
mov
cmpsb
incl
hlt
jns
fisubs
mov
test
sub
int
repz
fcmovbe
aaa
xorb
push
or
incl
add
mov
lea
insl
addr16
push
sub
or
sbb
add
pop
sar
pop
xor
int
cwtl
out
jb
mov
cmpsb
lock
sbb
ret
dec
push
xchg
mov
cli
mov
sbb
add
pop
je
jb
adc
in
call
inc
push
xor
sub
xchg
adc
aaa
mov
sbb
or
call
andb
push
jle
pop
mov
add
add
test
dec
aad
mov
push
hlt
xchg
pop
cmpsb
test
loop
adc
or
insb
fldt
pop
adc
sbb
addb
aas
mov
cli
lods
ficompl
push
inc
outsb
jg
push
and
xchg
insl
loope
cwtl
sbb
sbb
std
in
xchg
data16
ret
daa
dec
test
push
scas
jmp
add
les
or
call
sub
push
gs
pop
movsl
enter
mov
pop
jmp
add
in
xor
idivb
stos
rolb
icebp
pusha
insb
data16
sub
arpl
popa
xlat
push
pushl
stc
int
mov
mov
lcall
cli
dec
xlat
or
adc
cmp
incb
xchg
and
pop
adc
mov
out
xchg
fs
sbb
sub
stos
jbe
inc
mov
js
sbb
sbb
push
xor
jno
rcrl
add
inc
xor
mov
mov
and
enter
in
sub
add
push
addr16
pop
and
sub
push
mov
pop
rorl
mov
mov
daa
xor
subl
mov
sub
roll
and
mov
shll
ret
popa
fisubs
int
pop
jecxz
jbe
int
outsl
rcr
shrb
les
bound
and
mov
push
dec
jecxz
in
add
push
mov
xchg
pop
or
push
sub
pop
and
ja
mov
outsb
dec
es
lret
in
icebp
shrb
xor
mov
sub
ffreep
pop
movsl
jbe
rol
popf
adc
hlt
mov
add
mov
stc
aas
sar
mov
pop
jmp
inc
fsts
je
mov
outsl
xchg
xchg
cmp
or
cmp
pop
cs
loop
xchg
pop
jmp
ss
sub
push
pop
xchg
subb
iret
mov
sarl
xchg
js
sbb
mov
jmp
aad
lret
aas
adc
push
fcomps
push
jle
scas
sti
and
push
es
inc
movsl
jmp
or
jnp
sbb
inc
inc
mov
add
lock
push
mov
cli
sub
pop
adc
stos
inc
jns
adc
fldl
sbb
incl
rclb
jns
xchg
insb
in
loope
push
shlb
aad
sbb
jmp
push
jle
outsl
inc
xchg
add
out
test
xchg
xchg
xchg
rolb
subps
mov
push
sti
mov
outsl
cld
sub
es
cmpsl
es
and
ljmp
lock
and
shrb
cld
adc
mov
push
in
mov
mov
inc
xchg
sub
mov
pop
mov
add
xor
add
jno
loope
pushf
das
inc
test
std
mov
mov
pop
enter
mov
dec
test
jnp
cmp
ss
stos
add
sub
jg
aaa
loop
adc
or
aad
movsb
mov
aaa
pop
mov
pop
mov
sbb
jmp
adc
loop
xor
sbb
aam
cmp
mov
mov
std
les
jecxz
jne
adc
pop
pop
test
aad
cmp
fwait
xchg
add
add
and
inc
push
push
cld
outsl
aaa
mov
fsts
test
mov
rclb
push
mov
lock
and
dec
push
cmovs
loop
shl
addr16
mov
loope
adc
lcall
movsb
adc
dec
fsubs
mov
movsb
popa
sti
sbb
inc
out
mov
jmp
pop
test
sbb
dec
cmpb
ret
popa
add
xchg
dec
aaa
or
pushf
test
push
xlat
ljmp
gs
dec
mov
adc
hlt
les
xchg
sbbb
ljmp
fwait
nop
mov
in
cmp
call
iret
inc
sub
sarb
fsubr
in
mov
mov
stc
fs
jno
mov
aaa
fsubp
push
lret
or
movsb
or
jbe
lds
push
rcll
stc
and
sbb
adc
lock
ja
mov
call
inc
or
adc
and
xchg
xchg
or
mov
xchg
mov
mov
or
stos
lock
aam
popa
adc
adc
inc
in
movsb
pop
jl
mov
mov
stc
mov
popf
xchg
push
sub
xchg
sbb
mov
and
gs
mov
sub
stos
push
fcomi
pushl
cmpsl
pop
inc
mov
dec
jo
test
stc
sbb
push
fsubp
sub
xchg
movsl
jmp
fnstsw
sub
ljmp
and
rcr
ret
in
or
loop
lea
cmp
test
loopne
jmp
xor
out
cmp
popa
fildll
xor
stc
arpl
les
outsl
ret
mov
icebp
lea
xor
in
out
jbe
adc
xchg
mov
mov
mov
dec
insl
test
rolb
arpl
stc
stc
in
xchg
adc
adc
fs
psllq
mov
push
or
jle
inc
xchg
fstpt
in
mov
incl
xchg
fsubp
insl
inc
xchg
stos
rcrb
dec
or
push
loopne
out
xchg
adc
bound
aam
mov
call
adc
mov
dec
ret
push
fs
das
jbe
ljmp
fimull
mov
dec
add
sub
enter
addb
jp
dec
stos
xchg
sbb
movsl
add
decl
and
jl
in
and
sub
lock
mov
mov
mov
fisubl
add
lods
cwtl
mov
push
inc
call
xchg
cwtl
out
adc
jbe
fists
aaa
loopne
xchg
mov
mov
sti
pusha
jnp
mov
fnsave
into
sub
sub
jo
mov
test
inc
mov
ja
je
jmp
sahf
or
push
cli
sub
jmp
add
inc
lahf
sub
hlt
outsl
add
mov
hlt
fisubl
and
push
stos
fadds
jg
rcrb
xor
ss
mov
cli
ja
ja
dec
sbb
mov
push
push
sti
xchg
fsubs
popa
fwait
hlt
ret
clc
push
and
sub
es
out
ret
jo
imul
sti
test
stos
rclb
dec
icebp
jg
mov
mov
jl
scas
or
scas
fisttpl
iret
cs
push
popa
push
push
int3
sub
inc
enter
jne
or
jecxz
iret
push
frstor
ret
xchg
aaa
icebp
sbb
mov
outsl
mov
les
enter
mov
sub
mov
inc
xlat
or
mov
jo
jb
add
enter
loopne
cmp
mov
movsb
outsl
es
or
rcrl
sbb
xor
mov
mov
add
dec
rorb
xchg
aaa
or
inc
xor
cld
out
ficomps
lret
insl
bound
cmp
hlt
mov
mov
std
and
fldt
pop
xchg
sub
aas
or
outsl
sbb
mov
add
aaa
subl
add
pop
mov
xor
push
xor
push
shrl
out
popf
pop
mov
sub
scas
and
xchg
aaa
loop
inc
inc
dec
in
das
dec
mov
and
inc
in
jge
cmp
ret
mov
ret
mov
pushf
inc
cmp
mov
mov
push
fdivp
xchg
loopne
push
mov
adcb
push
rclb
movsb
shll
fwait
or
out
mov
mov
roll
cmpsb
fisubs
jmp
add
inc
or
and
add
movaps
push
scas
rcll
sti
lds
sub
xor
sub
shrl
sub
push
ror
or
inc
leave
adc
mov
push
rorl
repz
dec
mov
pop
push
loope,pn
mov
xor
clc
adc
addl
dec
push
cmp
dec
clc
daa
shrb
and
xor
or
cs
jle
ret
in
sub
incb
xor
addb
add
ret
mov
aad
mov
or
push
xor
and
xchg
sub
dec
loopne
test
lock
loopne
mov
cs
shlb
icebp
mov
sub
or
jl
jns
repz
fiaddl
or
inc
inc
lea
add
fsubs
cmp
xchg
push
adc
add
sahf
test
imul
enter
fldenv
sbb
xor
fmuls
or
into
or
negl
mov
push
push
mov
bound
fldt
add
add
in
in
add
movsl
and
std
lods
fidivrl
add
sub
fiaddl
add
inc
dec
mov
lret
aas
fwait
push
in
cmp
push
ret
ljmp
and
andb
xchg
loopne
aam
xorb
add
add
or
call
outsb
push
add
ret
stos
adc
cmpsl
andb
je
inc
lahf
mov
je
add
jb
imul
dec
or
iret
inc
push
push
int3
pop
adc
adc
imul
cld
jno
add
mov
cmpsb
add
mov
or
or
xchg
jo
and
adc
and
dec
push
pandn
lcall
out
dec
test
ds
xor
xor
mov
jge
rorb
mov
xor
push
pop
in
xor
aam
loop
leave
dec
mov
loopne
push
pop
and
push
sti
adc
repnz
mov
sarb
mov
call
adc
inc
mov
sub
hlt
dec
and
icebp
dec
or
icebp
or
or
mov
adc
test
ljmp
fs
mov
push
or
mov
fnstsw
fisttpl
movsb
jae
les
push
lods
inc
xchg
adc
icebp
jl
mov
mov
addl
or
sub
sti
rcll
sbb
out
repz
dec
push
jo
imulb
sbb
add
pushf
sar
pop
jbe
push
sbb
sbb
dec
mov
add
inc
mov
stos
lcall
lds
jmp
sub
jbe
inc
adc
loopne
lds
mov
add
jge
cmp
enter
pushf
mov
push
pushf
sbb
aas
mov
adc
insl
push
inc
xchg
inc
incb
addb
jmp
test
jne
cmp
aas
mov
pop
dec
lock
xchg
push
cmc
lea
sub
into
mov
xchg
adc
or
or
mov
cmp
rolb
sub
inc
pop
add
or
mov
out
and
add
fsubs
sub
sbb
or
add
mov
push
add
pop
and
xor
incb
or
pop
loopne
inc
loopne
inc
xor
cmp
and
js
je
mov
mov
jp
loop
pop
dec
leave
pop
cmp
popa
jecxz
sub
pop
mov
lock
jge
jb
cmp
jb
and
and
mov
or
xchg
pop
push
jbe
and
lds
sbb
mov
test
in
loopne
ja
sbb
sti
jbe
and
sahf
sbb
lea
jl
adc
push
enter
add
sbb
sub
inc
add
add
sbbl
pop
lock
ficomps
fldl
mov
add
fisttpl
pop
cs
ljmp
adc
adc
push
sub
cmp
andb
jnp
jecxz
add
dec
cs
fiadds
fsubl
push
cld
or
les
add
or
xor
arpl
test
sbbl
pop
mov
sub
adc
push
ret
popf
in
sub
jecxz
and
jecxz
data16
push
xchg
sar
shlb
add
aad
xor
insl
pop
cmp
add
and
test
repz
pop
sub
sbb
push
adc
add
xchg
dec
sub
adc
or
loopne
sbb
adc
mov
test
xchg
rorl
sbb
cmp
out
pop
cmpsb
pop
rorl
out
sbb
cmp
xor
add
add
inc
addr16
rcrb
frstor
and
les
inc
xchg
push
add
pop
inc
fisubrs
jo
adc
inc
mov
inc
push
sarb
or
icebp
add
jle
mov
mov
jecxz
adc
or
imul
mov
adc
xchg
les
orl
out
mov
or
mov
sbbb
hlt
dec
dec
loop
incl
push
mov
dec
jae
add
jb
push
inc
pop
rol
push
jns
inc
loopne
aaa
js
data16
cs
pusha
cmp
fisubl
mov
cli
popa
in
or
mov
or
push
sub
mov
mov
sub
fwait
pop
and
lahf
gs
mov
dec
sbb
push
push
loope
stos
add
mov
mov
out
xchg
insb
icebp
xchg
cwtl
les
pop
or
jle
mov
cltd
shrl
push
push
or
iret
loop
inc
mov
push
cmp
gs
cmp
andb
and
mulb
adc
rcrb
lds
int3
sub
inc
pop
lods
jo
xchg
sub
xchg
jae
aam
ret
pop
cltd
inc
mov
repz
xchg
jmp
js
cmc
bound
add
rorb
jo
ret
xchg
jle
das
cmp
lcall
mov
rcrl
mov
test
mov
test
adc
enter
and
int3
mov
jb
or
add
jmp
adc
push
adc
cmp
fmuls
adc
xor
cmpsl
or
cld
jg
dec
inc
mov
sub
adc
pop
out
pop
iret
cmp
or
cmp
jmp
sub
addl
les
inc
cwtl
and
sub
pop
add
andb
mov
in
jmp
or
jl
mov
inc
sub
jp
mov
xor
dec
mov
and
add
mov
mov
adc
mov
loop
clc
sub
cli
xlat
in
pop
pop
test
lds
loop
add
jg
sbb
mov
icebp
sbb
mov
daa
xchg
push
sub
ss
jmp
cs
or
push
or
cmp
push
xor
test
out
adc
xor
push
adc
enter
pop
sbbl
and
inc
push
mov
pop
dec
dec
mov
xchg
adc
out
xor
jne
cltd
or
inc
dec
and
push
and
cmp
hlt
fs
xor
inc
cmc
insl
add
repz
pop
cmp
push
and
cltd
dec
push
pop
push
mov
add
cmp
sbb
cs
dec
jp
sbb
test
popf
mov
pop
jg
inc
sbb
add
xchg
cmc
add
jbe
mov
add
mov
ds
mov
icebp
out
int
js
mov
jbe
push
add
jge
adcb
jbe
pop
add
jg
pop
adc
sub
roll
adc
sbb
cmp
out
imul
cmpsb
inc
mov
cli
pop
xchg
ss
cmp
popf
pop
inc
imul
mov
or
xor
loope
loope
add
xchg
mov
clc
popw
ja
xor
dec
fdivs
subb
cmpsl
push
and
mov
xlat
mov
rolb
int
mov
mov
add
lock
push
inc
mov
mov
cli
sbb
and
aam
rcll
and
loope
outsl
add
hlt
mov
aam
imul
sbb
sti
push
clc
subb
test
jae
jno
jb
lock
rorl
mov
inc
rorb
pop
je
xchg
test
jecxz
aam
icebp
cmp
fbld
push
jbe
mov
mov
jp
push
ret
mov
imul
add
inc
outsl
inc
out
xor
rclb
out
in
into
lret
test
jne
lcall
mov
lds
xchg
repz
or
push
andb
add
pop
sbb
dec
add
sub
jbe
xor
mov
lock
and
inc
mov
stos
rcrl
pop
dec
cmp
pop
ret
ja
test
scas
std
mov
add
xor
sbb
inc
xor
sbb
dec
and
xchg
add
es
ljmp
push
push
xor
inc
aam
or
cmp
adc
test
test
inc
push
inc
int3
rcll
mov
push
push
mov
adc
adc
mov
cld
push
mov
mov
scas
pop
inc
jecxz
dec
das
aam
pushf
lods
mov
jle
or
sbb
loop
xor
jb
inc
xor
mov
mov
ljmp
cmpsb
fsub
adc
flds
sbb
decb
mov
add
andl
push
call
jecxz
sbb
inc
add
and
outsl
pop
aas
cwtl
rolb
ret
into
outsl
mov
mov
movsb
mov
add
sti
aas
std
ffreep
adc
push
cmp
call
repnz
inc
in
cld
inc
ja
mov
cltd
lret
bound
mov
jle
mov
xor
aas
xor
ret
xchg
xor
mov
and
andl
loopne
mov
and
lods
jae
lods
enter
sub
jno,pt
push
xor
and
sbb
pushf
or
pushf
pushf
add
cmc
shlb
aaa
add
fs
insl
jg
outsl
push
mov
xor
test
push
jg
and
ja
or
and
xchg
inc
xor
js
sbb
fldcw
pop
dec
imul
jl
sbb
mov
mov
ss
jl,pt
orl
mov
pop
push
pop
out
nop
pop
in
adc
xchg
xlat
test
cwtl
and
ljmp
sub
or
rcl
jmp
jne
mov
jnp
adc
shrl
leave
icebp
test
lcall
insb
pushf
push
cltd
mov
sub
shrb
ret
and
push
push
mov
fsubs
jg,pt
ljmp
sub
into
ja
jne,pt
and
repz
pop
clc
fs
insl
mov
loopne
shlb
cwtl
stc
or
push
mov
lods
cmp
mov
sbb
mov
jns
movsl
mov
into
mov
lock
outsl
fnclex
mov
cmp
stos
loopne
inc
add
mov
lahf
add
sbb
add
push
aam
and
inc
pushl
fidivrs
popf
xor
loopne
clc
adc
jnp
sbb
xor
test
movsl
frndint
das
cmp
sub
sbb
mov
add
push
stc
pop
pop
cs
sbb
shlb
data16
jg
pop
test
or
or
lea
push
roll
inc
cmp
jp
roll
jl
jp
fisubrl
mov
call
imul
inc
imul
pop
mov
adcb
sub
ljmp
aas
or
jl
sbb
mov
push
xor
jp
call
or
or
iret
cmp
lock
adc
pusha
push
dec
sbb
int
cmp
mov
aas
dec
outsb
push
xor
dec
sbb
sub
fistpl
cmpsl
xchg
test
pop
das
clc
mov
sub
cltd
push
push
pop
dec
add
scas
xor
testb
xor
mov
mov
andb
pop
or
xchg
dec
adc
dec
hlt
or
add
inc
or
fwait
testb
push
add
adc
jns
jle
add
fldl
iret
mov
cmp
and
mov
add
sub
repz
pmulhw
popf
rorb
dec
add
in
mov
enter
cwtl
push
push
loopne
sbbb
pop
mov
push
mov
jne
pop
loopne
js
push
xor
js
and
sbb
out
mov
mov
movsb
lret
daa
bound
dec
xchg
fsubl
rclb
insl
in
and
push
mov
mov
addb
mov
stc
shll
aad
mov
add
mov
push
inc
sub
dec
inc
adc
movsl
add
loopne
popf
sub
dec
inc
int
jne
mov
pop
popf
or
cld
or
pop
clc
push
jae
xchg
shlb
fisttps
jmp
test
jb
int
sub
cli
jge
lods
in
add
sub
pop
add
aas
mov
sub
int3
subb
xchg
fldcw
add
inc
jp
sub
iret
stos
sub
ret
inc
mov
js
hlt
push
push
ds
jnp
push
add
and
mov
mov
popf
lock
add
cmpsb
push
push
mov
aas
lea
xchg
adc
les
jbe
out
loop
cmp
push
xchg
add
call
orl
leave
enter
xor
clc
push
jo
add
movsl
xchg
pop
out
cld
inc
or
lock
js
mov
cmp
mov
mov
xchg
lret
mov
outsl
adc
or
jg
or
sub
rcrb
mov
jae
in
xchg
pushf
or
movsb
popf
sbb
or
dec
jmp
push
push
xchg
mov
jmp
adc
pop
inc
inc
ret
divb
out
stos
sub
lea
push
punpckhdq
inc
sbb
inc
push
adc
loopne
pop
popa
mov
scas
mov
mov
rorl
aad
xchg
pop
ret
rolb
stos
inc
stos
adc
rorl
inc
in
icebp
fsubl
mov
push
das
xor
sub
aaa
mov
or
jmp
aas
and
and
or
ja
add
mov
imul
add
inc
out
enter
stos
jmp
cmpsl
and
push
cmp
pop
es
ljmp
push
bound
cli
mov
es
enter
addr16
sub
insb
hlt
mov
into
xchg
cmp
je
sahf
mov
mov
adc
dec
pop
les
cld
arpl
imulb
cmpsl
stos
xor
or
notb
test
repnz
scas
mov
scas
xor
add
add
xchg
icebp
mov
mov
imul
sbb
mov
fbld
xchg
inc
mov
insl
push
rorl
fistpll
sbb
mov
add
roll
cmp
shr
das
aas
loope
outsl
cmp
mov
js
jecxz
pop
dec
mov
sbb
xor
add
out
fsubrl
out
movsl
push
test
fsubrs
fstpt
add
xor
add
in
inc
mov
xchg
inc
push
mov
xchg
roll
das
xchg
xorb
mov
je
leave
add
push
mov
and
jo
mov
rcrb
outsl
mov
nop
std
gs
add
notl
loopne
xchg
xor
add
hlt
mov
mov
mov
lret
test
lahf
hlt
int
fldt
lods
in
les
aam
xor
xor
lds
push
mov
pushl
mov
data16
mov
out
aaa
fistps
sbb
or
jl
mov
and
int
subl
pop
mov
cmpl
pop
inc
push
shrl
shll
repz
sbb
scas
hlt
std
in
push
fstpt
pop
jge
add
mov
jnp
dec
and
add
insl
shr
les
push
cmp
pop
adc
xchg
push
cmp
lock
mov
rcrb
sub
mov
shrl
cmp
xor
sub
imul
pop
sub
pop
outsb
or
in
imul
inc
mov
inc
sbb
adc
lods
mov
cmpl
jns
push
and
mov
jg
movsl
push
push
lea
xchg
jne
sbb
push
mov
ja
push
std
dec
push
mov
or
jb
loope
lretw
in
jg
scas
lret
push
jo
fistl
sbb
xor
mov
and
cmp
mov
fmul
loope
rcl
je
testb
pop
pushf
xchg
sbb
mov
and
imul
je
fstl
ss
mov
lret
in
inc
popa
dec
pop
idiv
mov
dec
adc
jmp
ss
mov
and
mov
decb
sahf
push
dec
inc
outsl
rcl
xchg
jo
mov
ja
in
xor
pop
psadbw
cmp
aad
andb
xchg
push
dec
outsb
mov
inc
loopne
sbb
mov
mov
or
cmp
mov
imulb
gs
fsubs
adc
hlt
mov
test
lret
sbb
bound
jl
jno
jno
xor
test
sub
mov
pop
push
pop
add
and
test
mov
nop
ljmp
insl
mov
das
cltd
jge
sub
inc
test
js
push
push
icebp
fucomi
inc
add
cmc
inc
jg
sub
mov
push
mov
aad
and
aam
cs
push
cmp
das
outsl
mov
xor
mov
aam
jbe
arpl
mov
or
insl
and
dec
inc
push
add
adc
sub
push
mov
add
push
or
roll
fcmovne
icebp
fistpll
clc
mov
and
jb
push
pushf
test
jnp
outsl
shlb
jp
enter
adc
inc
push
dec
ret
add
sub
sub
sti
scas
cltd
jo
fistl
in
cwtl
lods
int
mov
jmp
mov
adc
idivb
sub
aas
or
lahf
jb
push
xchg
and
jno
outsl
cld
mov
push
mov
push
pop
pusha
leave
pop
adc
test
mov
push
adc
and
or
sbb
or
push
xor
pop
adc
sub
pop
scas
jne
cli
sbb
cld
dec
incl
rolb
fldenv
cmp
movsl
fstpt
pop
mov
lret
int3
mov
shl
add
or
sbb
sub
inc
xor
xor
lock
pop
jp
dec
daa
stc
addl
je
xor
mov
lods
sti
clc
xor
jecxz
inc
mov
orl
push
mov
clc
dec
or
pop
mov
push
pop
or
std
jmp
insb
xor
jl
dec
fisubrs
push
xchg
ret
xlat
jnp
test
mov
dec
xor
add
aad
add
push
inc
xchg
fs
in
add
and
mov
stos
leave
cmc
icebp
mov
ljmp
inc
rcrw
mov
mov
stos
addl
add
lcall
inc
loopne
push
in
cmpsb
dec
add
inc
enter
jle
sarb
and
push
fimuls
outsl
in
loopne
out
jmp
pushf
and
pop
clc
lods
adc
sub
nop
aam
jmp
jbe
xor
pop
js
mov
loope
sbb
cmp
je
add
adc
pop
sbb
dec
aad
mov
xor
and
testb
rol
lahf
jno
bnd
push
aaa
mov
mov
sbb
xor
mov
sub
pop
fs
loope
imul
jge
lds
jl
push
push
xchg
and
inc
and
ljmp
jo
je
sub
roll
rolb
cmp
call
das
mov
icebp
cmp
call
jg
or
add
lds
clc
stos
int3
clc
cmp
test
outsl
and
xor
lds
loopne
mov
mov
jl
cmp
loopne
pop
das
pop
inc
pop
dec
into
imull
add
push
sub
call
mov
push
adc
out
sbbb
or
mull
pop
mov
mov
push
sbb
mov
jge
sbb
cmc
jp
ljmp
data16
cs
and
mov
mov
jge
mov
insb
out
test
bound
hlt
pop
lds
inc
pop
int
pop
cmp
adc
fildll
rclb
xchg
sub
nop
and
sub
cwtl
push
out
inc
adc
push
mov
rcrb
inc
xchg
adc
push
lock
pop
stc
xor
mov
sub
push
lds
mov
iret
push
gs
cmp
cmp
and
add
repz
orb
inc
adc
or
sbb
mov
lods
adcb
clc
dec
mov
aam
rcll
add
cmpsl
push
dec
and
mov
das
loope
out
addr16
add
stos
fld1
ss
or
add
jne
cmp
adc
ret
pop
pop
insb
push
adc
dec
pusha
push
rorb
sub
shr
shrb
inc
adc
or
add
push
push
jp
and
mov
or
mov
mov
and
xor
lcall
push
test
das
push
xor
inc
xchg
and
cld
mov
add
hlt
cmp
cmpsl
adc
inc
hlt
pop
int3
pushf
imul
enter
xor
cmpsl
mov
cltd
dec
jo
test
adc
imul
adc
fwait
jo
inc
jno
push
cmp
movb
loopne
lret
das
ret
push
jge
inc
and
inc
pop
mov
js
int3
xor
xor
cmp
and
fcoms
pop
adc
int
dec
dec
scas
mov
ljmp
cmp
jno
add
adc
loopne
and
in
pop
data16
mulb
mov
bound
pusha
inc
sbb
fst
inc
inc
psubd
pop
inc
movb
add
test
leave
mov
push
testl
fsubrs
addr16
repz
data16
adc
mov
xchg
xchg
cld
sub
int3
data16
and
lds
jnp
mov
aaa
mov
mov
lock
rcl
pop
inc
movsl
fidivrs
cmp
pop
mov
lahf
les
cmp
into
enter
or
lea
sti
add
or
dec
jmp
pop
mov
and
and
push
cld
sbb
and
test
popa
adc
jne
je
add
cltd
bound
movsl
jb
or
repnz
out
push
out
testb
xor
les
mov
shrb
addb
test
cld
add
out
sbb
sub
bound
push
mov
mov
inc
or
out
lods
mov
sbb
add
les
or
sub
sbb
inc
jae
or
jo
add
sbbb
xor
cwtl
lahf
add
mulb
xchg
fsubr
push
mov
clc
xor
dec
add
xor
adc
loopne
mov
pop
jge
mov
push
push
and
repz
movsb
cld
movsb
test
xor
cmp
mov
push
pop
dec
arpl
popa
xor
test
add
mov
mov
or
std
fdivs
mov
adc
or
jne
jge
cwtl
ret
add
bound
adc
insb
ds
xchg
push
in
pop
dec
cmc
mov
jle
lret
mov
cmpb
or
push
movsb
mov
das
push
pop
into
adc
xor
fisubrl
cmp
seta
dec
mov
add
mov
add
ljmp
test
add
cmc
mov
pop
imul
cbtw
sub
std
dec
sbb
push
jp
jno
sub
pop
xchg
lds
call
pusha
sub
in
aad
sbb
mov
jl
popa
pop
inc
lahf
sub
out
sub
mov
andb
mov
push
cmp
mov
mov
in
lcall
or
push
sub
out
aas
call
subl
and
in
stc
jl
std
or
gs
out
xchg
ljmp
lock
fnstsw
mov
adc
mov
outsb
lea
fistl
loop
sub
dec
dec
xor
daa
lock
xorl
xchg
and
fnstsw
pop
cli
ljmp
jnp
inc
mov
rcrl
lods
fs
out
push
cli
fistl
inc
inc
xlat
cs
movsb
ret
gs
shll
fsub
aad
outsb
enter
push
sbb
push
mov
xor
clc
lods
or
leave
bound
cmp
add
outsb
xor
loope
ljmp
mov
add
mov
pusha
push
sbb
fcomps
xchg
loopne
cs
pop
or
and
hlt
call
sbbl
in
xor
adc
or
int3
and
mov
stos
xor
lds
push
or
shrb
imul
dec
adc
and
xchg
mov
aad
ljmp
andb
scas
loopne
adc
nop
das
in
out
xchg
jns
xchg
lret
and
adc
sarl
jg
icebp
movsl
xor
jnp
in
mov
dec
ret
repz
jbe
fildll
pop
mov
lret
pop
and
mov
xchg
rol
pop
clc
fwait
xchg
add
add
sub
cmp
sub
out
subb
push
arpl
and
sbb
sahf
mov
mov
push
imul
jae
shll
lock
push
sbb
mov
mov
out
mov
mov
or
into
or
test
sbb
pop
cmp
push
mov
jg
insb
xchg
je
mov
xchg
movsb
push
add
data16
out
pop
sbb
loopne
loopne
mov
add
sub
add
cmp
inc
clc
incl
test
dec
js
clc
popf
mov
mov
cmp
adc
jecxz
push
imul
jno
jmp
mov
and
jl
cmc
icebp
std
add
movsl
outsl
cmc
call
mov
lahf
pop
adc
xchg
std
sbb
nop
les
mov
sahf
inc
leave
pop
xchg
mov
loop
mov
stos
add
ljmp
fiadds
inc
mov
push
mov
cmp
jg
mov
push
inc
jecxz
adc
or
xor
adc
rorb
dec
pop
push
mov
mov
inc
xchg
sub
mov
mov
mov
push
cmp
ljmp
pop
sub
pop
repnz
dec
xor
inc
cld
fs
mov
test
mov
fadds
out
mov
pop
sbb
movsb
jecxz
mov
sbb
cld
jl
sbb
add
and
cmp
loop
dec
fistpl
sbb
dec
inc
lcall
sbb
or
xchg
xor
gs
inc
pop
or
cmp
mov
das
shll
sbb
jae
hlt
mov
add
push
lock
js
aad
into
ds
lods
subl
or
push
es
bound
out
mov
mov
sub
dec
adc
cli
add
sbbb
add
aam
enter
xchg
add
xchg
sub
dec
add
pop
pop
movsb
inc
orb
jne
inc
rcrb
sarb
or
mov
arpl
inc
xor
cmpsb
jecxz
adc
sub
sbb
dec
pop
nop
outsl
jmp
jp
jbe
add
addr16
dec
mov
shlb
cld
jmp
loopne
cmp
push
data16
repz
divl
sub
mov
cmpsl
and
adc
in
mov
add
jp
push
add
je
test
lret
sahf
mov
outsl
fisttps
push
sbb
into
shl
mov
inc
push
testb
test
xor
mov
and
stos
decb
mov
rcl
jb
lret
xchg
mov
scas
sub
test
and
aaa
sub
leave
jnp
loop
ret
lods
mov
out
shrb
push
mov
std
add
movsb
xor
sbb
add
inc
pushf
push
and
scas
repnz
and
out
mov
mov
lds
xor
push
imulb
push
add
movsb
test
enter
mov
xor
fisttps
rolb
shl
sbb
sub
jge
xlat
adc
xlat
addl
iret
add
fists
mov
pushl
inc
xor
outsb
adc
add
cld
and
mov
or
and
cld
sbb
mov
cmc
xchg
addb
add
cmpsb
in
inc
pop
push
cltd
pop
xor
mov
push
push
lea
ss
and
push
loope
cmp
add
and
sbb
addb
inc
aam
and
add
test
adc
sub
imul
adc
or
add
data16
jnp
and
cmpsb
stos
inc
in
pop
in
mov
ret
inc
add
pop
sub
or
shll
andl
sub
inc
xlat
fcoml
cltd
aas
inc
scas
or
adc
sub
es
xchg
inc
iret
xchg
jp
faddl
nop
or
fsubrl
adc
mov
adc
aam
and
into
add
mov
test
cmp
inc
dec
hlt
jne
and
cwtl
or
sbb
dec
fists
fadds
faddl
push
push
jno
add
hlt
mov
push
es
or
xchg
fs
push
push
aad
loopne
inc
cli
lret
or
add
nop
in
push
hlt
or
sbb
pop
lds
loope
shrl
adc
push
pop
jo
fcoms
iret
or
loopne
out
pop
pop
mov
jmp
cwtl
mov
cld
test
xchg
inc
nop
xchg
mov
aad
pop
jno
notl
rolb
jmp
outsl
xchg
sbb
push
in
adc
std
mov
add
dec
dec
jmp
and
test
sub
add
pop
and
xor
pop
stos
adcb
sub
adc
shrb
test
dec
out
imul
mov
pop
jno
dec
cld
push
out
lahf
je
adc
push
xchg
xor
or
loop
adc
adc
je
add
divb
xor
lahf
out
and
mov
cs
dec
mov
fbstp
push
cmp
inc
dec
insb
lea
std
outsl
inc
cmc
or
cwtl
fadd
insb
lock
pop
cmpsl
add
or
pop
mov
or
aad
test
jp
xchg
add
jg
pop
add
jg
or
dec
adc
mov
sahf
add
aad
movsl
push
dec
les
mov
sub
fistps
scas
mov
add
in
add
add
jge
push
mov
fisttps
and
cwtl
mov
pushf
sbb
mov
cmc
inc
cmpb
add
pop
add
sub
add
pop
push
rcl
lret
mov
stos
divb
pop
idivb
mov
test
jo
pop
push
add
lret
mov
fucomip
mov
je
and
popfw
add
ret
mov
std
xchg
xchg
jle
dec
or
insl
sub
add
outsl
hlt
add
pop
jno
add
mov
add
sub
mov
rcrb
xor
jg
out
xor
or
jecxz
movl
jge
sbb
lods
jb
xchg
lock
cmp
inc
test
test
xchg
shll
ja
adc
mov
movb
rcr
addr16
dec
sbb
mov
es
lock
adc
ljmp
sahf
cmpsl
add
mov
aaa
mov
stc
pop
pusha
pop
mov
outsl
movsl
adc
in
mov
mov
js
fidivs
mov
pop
orb
and
push
push
mov
addr16
jl
jg
mov
pop
loop
or
fsts
xchg
cmp
xor
test
or
mov
adc
mov
testb
fisubrl
rclb
stos
dec
push
movl
inc
add
mov
jg
out
cmp
and
xchg
cltd
sub
or
cmp
mov
rolb
pushf
int3
subl
mov
mov
sub
pop
push
mov
rorb
jmp
fcmovnb
popf
and
jmp
inc
in
or
jne
out
cmp
div
inc
mov
nop
jmp
lcall
adc
lret
loop
ret
dec
test
sbb
adc
cmp
fst
test
or
push
add
pushf
add
add
mov
loope
xor
dec
push
mov
jmp
inc
fs
add
test
inc
push
addr16
in
pop
xlat
insb
incl
mov
call
or
in
or
mov
push
cwtl
cmc
add
sti
inc
mov
lcall
scas
loop
ja
nop
sbb
test
aad
mov
xchg
stos
scas
jge
mov
jle
inc
xchg
adc
adc
mov
jle
cmovne
lods
jmp
xor
pop
add
incl
enter
icebp
and
insb
cmpb
loopne
aam
add
pop
cmp
outsl
fcmovne
mov
xchg
xchg
orb
test
js
ret
inc
icebp
inc
enter
and
fistpll
push
fidivrs
mov
adc
and
push
hlt
inc
cmp
loope
xchg
sub
imul
jg
in
xchg
mov
mov
and
push
cld
mov
aaa
stc
data16
jbe
insl
adc
cmp
cld
jp
movsb
add
fdivs
pop
je
inc
pop
sbb
lcall
test
pop
xlat
outsw
into
mov
stc
insb
bound
cmp
add
std
mov
sti
cmp
iret
adc
lret
pop
clc
sbb
and
and
mov
or
cmp
notb
pop
push
popf
sbb
ret
mov
push
std
or
clc
xchg
fdivr
pop
xchg
imull
pop
and
dec
lods
mov
stc
incl
call
pop
out
pop
cmp
icebp
dec
push
jo
faddp
xchg
call
aas
jo
js
adc
imul
fwait
mov
xor
mov
outsb
and
jbe
jecxz
mov
jne
sbb
addr16
push
popa
es
imul
or
xchg
enter
mov
xlat
rcrb
inc
addb
loope
jle
jmp
pusha
jmp
std
xchg
xor
les
add
inc
test
ret
outsl
fiaddl
dec
and
nop
mov
jmp
or
xor
sbb
mov
insl
push
jo
add
in
aaa
sbb
aaa
mov
pusha
stos
mov
sub
ds
cmpsb
in
sbb
inc
lock
repz
pop
cwtl
popa
test
mov
and
inc
or
cmp
adc
jb
lock
out
jp
pop
mov
loop
push
roll
inc
filds
or
adc
mov
call
jl
jo
adc
sti
ja
push
std
pop
cmp
stc
inc
cmp
lods
lret
mov
lret
cli
insl
inc
xorl
sbb
testl
int3
js
mov
pop
clc
jo
fldenv
icebp
out
pavgw
scas
loope,pn
add
pop
int3
inc
sbb
aam
in
pop
pop
xor
stc
inc
rorb
or
or
or
inc
mov
testb
repz
and
pushl
loope
xchg
outsb
sub
loope
or
mov
mov
aas
push
cmc
inc
pop
stos
jle
cmpsb
adc
test
push
orl
or
mov
push
xchg
rsqrtps
jmp
mov
mov
fsubrp
push
sbb
into
dec
mov
mov
add
popa
sbb
push
mov
scas
sbb
cmp
jp
fimuls
mov
and
adcl
decl
adc
outsb
ret
xor
mov
fisubrs
mov
jo
rep
xor
cmpsb
cmp
pop
xchg
hlt
lods
movsb
int3
jne
out
inc
test
aam
mov
inc
stos
add
cmp
bound
pusha
clc
push
adc
fwait
jnp
or
sub
stos
add
cmp
aas
movsb
mov
dec
shll
orb
je
fbstp
ljmp
nop
fidivrl
lds
adc
fwait
mov
int3
dec
dec
mov
or
aad
ret
cmp
cmpsb
call
cltd
lds
clc
imul
clc
fildl
les
imul
jmp
pop
xchg
push
clc
addr16
cmp
mov
loopne
add
mov
imulb
and
inc
mov
negl
outsb
lock
mov
addr16
in
mov
rcrl
js
outsl
pushf
mov
dec
push
jae
cmp
and
mov
cmp
stc
mov
lods
sub
frndint
push
mov
add
sub
or
mov
orl
outsl
stos
movsb
xor
or
sbb
sbb
inc
sbb
paddb
testl
cmp
outsb
sar
or
add
inc
aaa
test
enter
test
cltd
lea
cmp
test
inc
push
add
jb
daa
mov
daa
ljmp
jecxz
les
or
adc
mov
test
cmpsl
cmpsl
pop
addl
mov
add
sti
lret
imul
jae
sti
les
xor
adc
lods
ffreep
mov
push
and
jae
arpl
push
sub
mov
or
ret
push
jl
fistpl
jl
inc
jbe
das
add
cmp
mov
std
mov
popa
xchg
pop
xchg
lock
xchg
mov
mov
jmp
xor
pushl
shrb
ret
loopne
dec
push
outsb
test
mov
testb
mov
pop
xorb
test
add
scas
test
dec
jae
movsb
jb
stos
movsl
fisttpl
pop
and
stos
mov
insl
cs
and
and
pusha
scas
mov
dec
jle
pop
test
sub
pop
movsb
push
das
sub
fcomps
lcall
dec
xchg
adc
cmc
es
sti
out
jns
adc
outsl
addl
test
lods
mov
lahf
fnstenv
jmp
sar
pop
pop
fadds
mov
add
insl
xlat
xor
push
mov
add
pop
into
or
das
in
lods
mov
lock
adc
push
mov
and
pop
fidivrl
ja
stos
jno
sbb
mov
lahf
xor
test
fsub
test
or
std
pop
out
andb
fwait
dec
stos
jp
mov
inc
dec
shr
aam
icebp
test
rorl
and
mov
mov
jmp
mov
insl
pop
jp
test
mov
mov
sub
inc
add
or
jge
je
or
fmuls
xchg
xchg
and
outsl
movsb
loope
cmp
imul
pop
int
ret
movsl
imul
js
add
add
and
pop
popa
fcmovnu
sub
loopne
add
je
inc
sub
ljmp
sbb
fdivrs
out
pushf
addr16
push
push
cli
ljmp
pop
loop
rcll
lahf
call
outsl
pop
outsl
test
dec
arpl
fidivrl
add
xorb
out
lahf
sub
jne
movsb
fdivrl
push
mov
lds
pop
pop
stc
sub
inc
outsl
lcall
pop
or
loopne
scas
or
mov
mov
fiaddl
push
or
not
loopne
ljmp
int
mov
add
mov
and
xchg
push
iret
add
decb
and
jg
fimull
icebp
jl
xchg
insl
sbb
jecxz
rcll
sti
push
andb
jbe
sbb
stc
outsb
xor
loopne
sub
sbb
adc
insb
icebp
ret
pop
push
pop
and
mov
je
sbb
incl
cmp
add
scas
scas
mov
mov
les
sbb
incb
xor
cmp
ret
leave
je
mov
out
mov
adc
adc
cmp
xchg
scas
sarb
push
insl
loope
insl
and
xchg
dec
movsb
fcomi
in
clc
pop
popa
stos
dec
stos
push
push
cwtl
pop
out
pop
mov
loope
jns
aam
cmpsl
jno,pn
loop
cwtl
cmp
jmp
cmpsb
sahf
adc
ret
lods
jbe
lock
mov
jecxz
fwait
adc
add
cs
jp
int
dec
mov
mov
popa
orl
inc
pop
and
rorl
adc
outsl
mov
scas
sbb
std
je
xchg
cli
out
aas
dec
mov
push
jno
insb
adc
jmp
or
push
xchg
push
rcl
add
mov
mov
imul
or
push
inc
cmpsl
mov
cmp
les
fcos
jmp
jmp
jo
adc
lods
mov
mov
cmp
lds
push
js
jbe
pop
cltd
mov
mov
in
rcr
mov
daa
mov
ss
sbb
or
xchg
xchg
cmp
push
cmovns
dec
mov
in
test
mov
adc
dec
aaa
ja
mov
pop
sbb
insl
call
cmp
and
sbb
inc
ljmp
xor
outsb
bound
add
push
pusha
or
loop
jmp
push
ret
in
shufps
aam
mov
es
mov
shll
push
adc
cmpsb
or
and
mov
pop
fs
push
pop
sub
test
popf
loopne
sub
mov
outsl
or
sarb
inc
inc
pusha
imul
jmp
xor
xchg
pushf
je
xor
or
mov
dec
jb
mov
xchg
push
and
inc
das
mov
insb
jb
cmp
add
mov
inc
push
aad
sbb
xchg
sbb
xorl
cmpsb
lret
js
sbb
sar
dec
stos
imul
lea
into
mov
or
sbb
jle
lods
jg
sahf
dec
jb
loopne
leave
pop
rclb
cmp
pushf
stos
adc
sbb
mov
dec
pop
mov
gs
adc
test
and
cmp
inc
repz
mov
ljmp
rcrb
mov
add
mov
dec
out
pop
sbb
test
dec
and
test
fists
xchg
mov
divb
push
stos
cmp
push
mov
jp
imul
xor
jecxz
sbb
fldcw
mov
mov
jne
rcll
addb
nop
add
inc
pop
inc
lahf
ds
or
xor
loopne
cs
sbbl
xchg
sbb
sbb
jle
push
stos
loope
sbb
mov
add
mov
or
out
ds
fcmovnbe
fmulp
and
or
xor
clc
dec
sub
mov
mov
jl,pt
push
lcall
shl
pop
or
stos
add
pop
aas
xor
push
adc
adc
fistpll
add
fistl
lea
loopne
xchg
adc
rcl
popa
in
movsl
push
call
xchg
sbb
into
push
push
aad
int
inc
cmp
imul
dec
es
jno
xchg
jmp
in
outsl
sub
pushf
adc
imul
cwtl
adc
cli
lcall
ja
dec
lcall
pop
or
jmp
pop
pushf
movsb
dec
pop
push
mov
jge
outsb
insb
aaa
push
xchg
mov
jg
pop
jg
pop
es
pop
into
ret
jno
das
push
insl
pop
push
imull
sub
inc
pop
add
lods
rol
es
leave
imul
and
loope
or
and
inc
or
mov
scas
mov
mov
shll
inc
cmp
mov
pusha
jo
and
pop
sub
out
push
pushf
enter
jne,pn
insl
push
jp
mov
and
fistps
stc
dec
and
das
sub
sbbb
mov
add
jb
into
xchg
aam
adc
scas
hlt
add
jnp
mov
dec
loop
movsl
jg
or
jg
or
iret
jo,pt
ja
outsb
and
adc
sbb
inc
into
xor
sbb
pop
mulb
mov
mov
xor
add
and
add
mov
sar
mov
shll
xchg
xlat
nop
test
push
xchg
fistpll
rorb
dec
cmp
outsl
cli
dec
xchg
inc
pusha
dec
sub
ljmp
and
clc
inc
movsl
icebp
and
fstp
xor
aaa
pop
mov
lods
mov
loope
jmp
daa
and
push
xchg
pop
pusha
jle
sub
shrl
xchg
stc
out
icebp
mov
rorb
cmp
ljmp
test
nop
in
jl
xchg
rolb
cmpsl
sarb
out
les
loope
cwtl
or
cs
mov
pop
test
pop
in
popf
daa
popf
roll
std
shrl
aaa
movsb
add
xchg
mov
cs
outsl
or
pop
pop
xchg
xorb
mov
imul
fcmove
jmp
sbb
stos
add
jecxz
or
xor
outsl
sub
mov
aad
jo
outsl
or
clc
pop
mov
and
fs
js
mov
xor
bound
ds
ret
in
std
jg
mov
out
pusha
in
loope
add
or
cmp
mov
sub
sbb
mov
pop
or
aam
sub
pop
mov
inc
adc
mov
xchg
stos
mov
jge
cmp
outsl
lcall
push
sarb
das
or
daa
movsl
mov
test
adc
cmpsb
lods
cmp
in
xor
dec
mov
call
fistpll
mov
clc
mov
and
ret
push
lock
ds
adc
push
out
orb
cld
in
or
xchg
cld
dec
pop
mov
xchg
xor
xchg
shl
loopne
pop
out
jle
jecxz
xchg
mov
xor
pop
mov
in
or
inc
in
out
or
or
pusha
adc
push
sub
aaa
pop
aam
out
in
add
inc
loop
and
addr16
inc
push
inc
dec
mov
pop
mov
lods
filds
mov
ljmp
xor
data16
ret
mov
xorb
sub
insl
mov
pop
cli
dec
mov
movb
xor
jne
sub
les
push
pop
fsubrl
lahf
sarb
sub
sub
inc
jg
outsb
mov
mov
jle
lods
scas
aaa
add
addl
push
sub
or
stc
add
mov
cmp
jns
jns
sbb
mov
iret
pop
std
jl
xor
mov
dec
aam
loope
aam
jle
cmp
push
xchg
mov
sahf
repnz
dec
push
mov
push
mov
scas
hlt
pop
and
add
xchg
andl
jne
roll
mov
mov
xchg
jb
inc
push
fidivrl
addb
adc
testb
jle
aad
dec
or
cwtl
xchg
ss
js
stos
shrb
leave
daa
cmp
shll
repz
xchg
jecxz
fdivrl
shrb
repnz
and
sti
jle
orb
or
sti
insl
rcll
mov
dec
dec
or
stos
test
aad
stc
pop
call
not
pop
cld
or
fucom
loop
sbb
testb
mov
sbb
inc
insb
mov
adc
push
stos
jecxz
nop
mov
inc
adc
jl
es
dec
push
sbb
dec
sarl
shlb
fiaddl
or
cmpl
xchg
loope
xchg
jle
add
cli
add
dec
mov
aam
or
add
js
scas
mov
into
fs
mov
test
lods
push
sarl
jo
push
andb
ret
cli
stos
sbb
icebp
in
mov
mov
jp
stos
sbb
js
das
jl
sbb
jno
dec
mov
cmp
gs
clc
mov
ret
inc
cli
cmpb
ret
dec
jne
mov
sub
sti
xor
jecxz
jg
nop
mov
cmpb
mov
xor
cmp
lds
std
fsubrs
call
mov
cmp
gs
or
jg
pop
jmp
in
mov
clc
cmpsb
push
leave
jo
jnp
push
inc
inc
bound
jl
iret
mov
xchg
fdivr
call
dec
push
icebp
jae
adc
adc
or
xor
aad
mov
jno
push
js
fildl
adc
fisttpl
dec
loopne
icebp
fwait
testb
sbb
ss
outsl
mov
xrelease
shl
test
pop
mov
mov
lock
jle
clc
inc
es
aas
xchg
jmp
je
push
xchg
idivb
push
mov
and
aam
arpl
cli
lcall
or
inc
inc
mov
cld
das
cmp
lret
rorb
push
xchg
inc
push
lea
js
stc
sahf
int3
xchg
dec
push
mov
nop
mov
call
lret
outsb
add
cld
sub
and
fcmovnu
cs
fistpll
or
lcall
dec
sbb
ss
sti
aaa
cmpsb
insb
ljmp
mov
out
add
dec
out
sub
sti
enter
mov
pop
scas
mov
jecxz
scas
cli
rcl
xor
jno
div
rcl
ret
ret
inc
cmpl
inc
subl
xor
test
stos
mov
inc
mov
mov
mov
xor
mov
or
adc
dec
push
adc
loope
push
dec
xchg
mov
hlt
lods
decb
xor
and
sub
adc
fcomi
xchg
ss
hlt
adc
stos
pop
outsb
dec
nop
mov
push
push
out
ja
push
push
add
cmp
lds
cmp
sub
push
pop
jmp
cmp
pop
rorb
mov
inc
nop
push
push
jne
ss
outsl
adc
xor
out
iret
jne
mov
test
fldcw
mov
dec
sbb
mov
sbb
nop
cmp
sbb
and
dec
pop
lcall
jg
sar
nop
inc
or
cmc
scas
jecxz
sbbl
cmp
dec
or
lods
pop
movsl
loope
push
stos
inc
or
aam
push
icebp
outsl
movsb
popa
push
xchg
jnp
aas
jae
and
xor
inc
mov
pop
push
mov
icebp
xchg
faddl
sub
push
jle
lods
cmpsb
jae
dec
cmpsb
sbb
sub
cli
or
mov
xor
adc
icebp
and
jnp
test
adc
stc
jne
outsl
sarb
lods
cld
mov
in
aaa
jl
mov
in
jo
jle
pushf
ficoml
rcrb
cli
jp
xor
ficomps
or
rcr
cmp
fsts
shrl
mov
es
mov
dec
add
hlt
movsb
jne
dec
mov
cmpb
int
add
or
push
jmp
fisubs
sbb
fstpl
or
sbb
ja
aas
xlat
inc
lret
mov
inc
insb
pusha
aam
adcb
xchg
filds
push
cmpsb
mov
into
out
jle
jae
movnti
and
pop
out
lahf
mov
dec
aaa
push
insb
mov
popa
pop
jmp
or
or
mov
sbb
add
mov
call
push
aad
add
call
sub
cmc
adc
test
loop
jp
sahf
cltd
andb
sahf
xor
jo
icebp
add
test
arpl
mov
test
subl
jp
xor
aaa
hlt
imul
xor
push
mov
push
mov
fistpl
rolb
push
inc
pop
push
sti
sbbb
aaa
fcoml
and
cmp
xor
mov
lret
adc
inc
shr
mov
sbb
dec
js
lock
vmaxps
int
push
test
lahf
rcll
dec
loope
xchg
xor
dec
les
cltd
mov
std
lahf
ss
imul
xchg
inc
sahf
arpl
jo
cwtl
daa
cmpb
dec
add
ja
sub
addr16
and
es
mov
fs
and
sub
insl
sub
push
xlat
mov
ljmp
and
pop
mov
xchg
jge
stos
push
jb
mov
pop
stos
das
mov
adc
ret
push
push
cmp
dec
mov
sub
shl
fwait
xor
clc
xchg
test
push
dec
add
add
or
and
lods
enter
fbld
int3
inc
jb
dec
jb
adc
push
mov
push
jge
test
add
dec
mov
imul
jg
faddl
cmp
repz
daa
or
sti
cs
adc
pop
jge
mov
mov
adc
mov
push
fucomip
or
mov
pop
add
fwait
mov
clc
call
pop
mov
push
inc
inc
and
add
aad
in
pop
cmc
ret
push
andl
mov
cmc
pusha
out
pop
into
fdiv
push
push
fisubrl
jecxz
adc
repnz
xchg
rcrb
inc
outsb
fildl
iret
js
repz
je
push
fnstenv
insb
movsb
mov
sbb
nop
nop
sbb
cmp
movsl
jecxz
cmpsl
aaa
jmp
add
push
jns
jmp
mov
ret
dec
out
data16
subl
mov
int3
addb
inc
or
push
lcall
popf
repnz
push
cmc
add
dec
rcl
push
ret
adc
sub
idivl
add
xor
jl
jno
ja
mov
mov
xchg
lcall
into
in
testb
pop
cmp
in
bound
jg
mov
xchg
or
pop
or
mov
inc
das
jns
adc
lods
jge
xor
sar
inc
cld
xchg
inc
xchg
mov
xor
xor
jmp
push
or
pop
lret
call
cmp
shl
hlt
mov
jecxz
mov
test
pusha
mov
in
sbb
loopne
pop
or
bound
ljmp
call
aaa
mov
mov
sbb
add
sbb
xchg
je
in
xchg
and
std
mov
pop
inc
cmpsl
mov
dec
inc
jmp
jo
lods
push
xchg
stc
aas
shlb
push
ljmp
sbb
jne
imulb
add
pop
setl
mov
jns
jmp
dec
and
jecxz
in
cmp
push
call
out
mov
sub
icebp
je
rcl
xor
mov
loope
fidivs
repz
sub
movzbl
pop
aam
cs
loope
and
and
lcall
lds
sub
jp
mov
mov
dec
add
add
sbb
loopne
add
popw
aam
pop
fwait
mov
sbb
das
pusha
push
pop
and
sti
das
call
sbb
sbb
faddl
idiv
fimuls
xor
lock
jg
add
add
mov
movsl
cltd
cli
jmp
mov
shll
sbb
fmull
cltd
in
repnz
sub
adc
push
ja
add
mov
adc
jl
aaa
insb
pusha
or
dec
repnz
mov
cmp
add
jnp
out
xchg
test
pop
ret
les
mov
stos
pop
fbld
test
jg
inc
adc
mov
push
mov
push
fildll
pop
lods
sbb
add
cmpsb
nop
xor
jne
fldt
and
aas
popf
add
ret
or
push
lahf
mov
mov
out
insl
inc
aaa
call
pusha
nop
sub
je
insl
ss
jp
sbb
pop
cmp
lods
mov
pusha
adc
cmpsl
jbe
pop
cmp
aas
mov
xlat
sbb
iret
inc
fs
jb
xorl
or
pushf
mov
sub
popa
mov
bound
mov
and
sub
shr
or
and
out
ja
loope
or
pop
or
call
ret
fcmovnb
dec
outsl
inc
fistpll
adc
sub
adc
or
mov
mov
daa
stos
iret
mov
aaa
xlat
cli
das
test
jo
inc
sub
and
push
ljmp
xchg
data16
cmpsb
or
push
dec
inc
cmp
pop
or
push
loop
mov
dec
mov
mov
and
mov
push
mov
jo
psubusw
aam
jg
pusha
je
ss
dec
sub
movsb
cmc
inc
xorl
pop
cld
cmp
sbb
repnz
lahf
scas
outsb
daa
mov
add
into
dec
dec
rcrb
test
fidivs
jmp
inc
movsb
loopne
and
test
mov
xorl
mov
js
lahf
adc
dec
stos
sub
ljmp
pop
adc
cmpsl
jg
cwtl
mov
and
adc
sbb
aam
outsb
pop
pop
clc
dec
ss
pop
xchg
and
in
je
pop
mov
mov
clc
pop
push
fdivrl
push
inc
shlb
sub
ljmp
add
pop
push
ss
lds
inc
mov
pop
or
add
add
es
clc
xor
dec
xchg
mov
jne
sbb
mov
or
aam
rclb
mov
and
lahf
mov
es
mov
jb
inc
outsb
aam
or
pop
outsb
pop
inc
ds
lret
les
pop
fadd
outsl
fwait
and
push
test
sbb
mov
je
add
gs
cli
xchg
clc
mov
and
pop
dec
mov
add
mov
mov
jbe
mov
inc
mov
push
add
insl
or
pop
push
mov
out
ffreep
orl
enter
movb
xor
cs
mov
pop
clc
push
and
jmp
bound
add
scas
outsb
jl
xchg
dec
popa
jo
inc
ret
and
pop
sti
enter
je
loop
scas
enter
inc
fisttps
push
pop
in
and
inc
movsl
sub
or
sub
mov
xchg
jl
inc
fbstp
sbb
dec
fcompl
daa
or
mov
jge
gs
mov
mov
cmp
adc
mov
lea
mov
mov
sti
jb
cmp
push
mov
mov
shlb
enter
repz
iret
repz
gs
xchg
sbb
push
faddp
scas
insl
or
adc
sti
xorl
pop
sub
std
data16
push
xchg
je
or
dec
sbb
mov
out
cmp
cmc
test
mov
push
push
pop
lea
jle
cmp
mov
adc
fstps
push
lods
pop
push
fnstcw
mov
bound
sti
pop
xchg
aaa
imul
in
jo
les
cmp
jmp
gs
sbb
cmp
push
rorb
pushf
jp
addr16
mov
test
inc
ljmp
cltd
xchg
sarb
mov
xchg
nop
cmp
incb
pusha
jo
nop
addl
add
push
outsl
push
or
jnp
adc
inc
jae
in
in
fcmovu
clc
pop
fs
into
sub
ret
adc
pop
inc
jecxz
popa
adc
cli
push
fistpl
daa
fcoms
or
mov
adc
insl
outsl
xchg
nop
dec
popf
fisubl
add
sbb
jmp
add
sbb
sbb
add
jo
icebp
test
mov
jno
cwtl
dec
push
sbb
inc
dec
and
pop
inc
call
xor
cs
ja
insl
jg
clc
jge
and
dec
outsl
mov
lret
nop
insl
mov
add
adc
or
fsubp
xor
add
push
jecxz
pop
xor
test
ret
dec
addl
pop
jmp
movsl
jecxz
xchg
rcrb
aaa
adc
adc
iret
shrb
cli
and
push
cmp
push
mov
or
sbb
scas
pushf
lahf
xor
subb
and
xor
mov
adc
and
mov
push
mov
xchg
xchg
or
xor
cmp
add
lods
cmp
mov
fwait
sub
inc
mov
outsl
loopne
jg
scas
repnz
pop
pop
jo
call
adcl
stos
push
push
and
lahf
popf
adc
testb
ljmp
mov
ret
loop
jl
jbe
iret
repnz
adc
dec
or
sbb
loopne
sbbl
push
push
mov
fidivrl
sarl
movsb
sbb
pop
filds
xor
popf
lret
lcall
outsl
cmc
popa
jb
inc
loop
out
cld
enter
lock
cli
sbb
and
test
cmp
jge
dec
std
outsl
fildll
sbb
dec
rcrl
mov
or
mov
lods
inc
std
push
xorl
dec
stos
dec
add
incl
loopne
xor
inc
sub
xor
clc
pop
mov
roll
push
jb
aaa
insb
and
repz
loope
jge
push
call
cmp
addr16
mov
mov
pop
in
lret
jae
pushf
fldl
xchg
pop
sbb
lahf
cmp
xchg
mov
inc
or
scas
testl
cmp
pop
in
dec
and
aaa
add
add
les
les
data16
fidivs
in
xor
cld
mov
pop
pusha
loope
jo
lcall
test
fistpll
pop
out
or
dec
xorb
sbb
xor
mov
lds
mov
scas
pop
pusha
lret
mov
ficoml
inc
dec
xchg
pop
cmp
jecxz
sti
mov
mov
test
fistl
fstl
push
outsl
aaa
fs
push
dec
or
mov
mov
stc
lock
xor
pop
icebp
outsl
inc
sub
ljmp
insl
jl
mov
lds
repz
dec
in
jno
dec
and
adc
jbe
inc
fbld
sbb
cwtl
repnz
push
imul
rcll
push
ficomps
inc
mov
rclb
scas
or
cli
ds
cli
outsb
cmpsb
fcompl
ret
cmp
jns
mov
lret
add
mov
dec
fwait
jmp
cmp
xor
notb
pop
mov
mov
push
push
mov
ss
pop
dec
sbb
rcll
out
loop
mov
lock
jp
pop
mov
mov
imul
jle
fnstsw
sub
faddp
lods
aad
mov
xor
sti
pop
jo
mov
insb
xor
pop
int
mov
pusha
xor
fs
mov
and
dec
sbb
mov
xor
push
aaa
test
out
add
fwait
sub
bound
mov
stos
sbb
std
mov
push
adc
mov
lcall
jmp
out
sub
xchg
data16
inc
adc
in
pop
out
loop
icebp
negb
dec
jmp
shlb
outsl
sbb
fdivrs
or
shl
push
mov
daa
inc
pop
test
jge
jo
movsb
lcall
lods
cmpsl
es
inc
lcall
incl
ror
dec
testb
adc
mov
cmp
xorb
jo
xchg
mov
lock
or
cmp
jb
inc
incl
mov
sbb
xlat
jns
roll
xor
push
sti
mov
ret
stc
mov
add
inc
push
xchg
xorl
stc
dec
cwtl
and
mov
sbbl
aad
movsl
mov
iret
sbb
loope
outsl
call
xor
lods
add
cmpsl
rcr
outsb
bound
inc
lds
adc
dec
cmpsb
js
pop
xor
sbb
pop
sbb
shrb
pop
std
aas
andb
fdivl
xchg
adcl
cmp
lock
and
adc
dec
mov
cmpl
and
sbb
data16
call
mov
sub
sbbl
inc
iret
movsl
or
movl
popf
jge
jle
push
xchg
sub
in
outsb
std
mov
scas
sbb
push
adc
loope
outsl
aam
aam
push
or
orl
add
push
sbb
popa
jmp
adc
mov
ljmp
mov
mov
fistpll
insl
xchg
ds
push
bound
aaa
push
outsl
mov
arpl
in
mov
pop
lret
jne
cbtw
dec
sub
cmpsl
cmp
out
call
dec
sbb
daa
lret
lds
or
shrl
jne
fwait
and
ret
loop
inc
mov
dec
mov
and
aas
jno
shrb
outsl
es
cmpsb
popf
sahf
sbb
or
insb
mov
pop
inc
rorl
filds
inc
dec
lea
jne
rcr
icebp
push
sub
gs
and
mov
and
mov
push
sti
popf
test
push
mov
dec
sub
insl
jge
in
insb
add
xlat
dec
ret
insl
pop
push
outsl
mov
inc
test
pop
inc
pop
jp
jb
jle
sbb
shlb
push
dec
and
sbb
or
xchg
test
mov
lahf
jno
shr
sbb
cmp
std
test
jp
inc
ja
sub
out
or
in
inc
leave
fsubrl
mov
xor
mov
xchg
aad
shrb
test
in
out
xchg
scas
dec
push
aaa
lock
aaa
xorb
xchg
mov
movsb
add
inc
push
pusha
fimull
nop
xor
pop
pusha
pop
inc
push
sti
xchg
and
and
loopne
mov
out
call
incb
pop
cmc
add
in
fbstp
mov
in
negb
xorl
bound
lahf
inc
mov
dec
add
sbb
js
adc
mov
jbe
imul
lods
sbb
ljmp
insb
pop
add
inc
out
mov
outsb
add
xor
jecxz
lret
sub
lods
add
movq
cwtl
inc
pop
jno
sbb
and
sub
fstpt
fisubrl
adc
out
inc
sti
xchg
or
adc
push
sar
mov
and
push
scas
arpl
cli
mov
mov
ret
add
imul
daa
adc
fistl
xor
pusha
and
mov
push
and
repz
test
mov
in
jg
inc
fcompl
xlat
bound
push
pop
fistps
aaa
out
ja
adc
jl
mov
les
pop
pusha
add
out
sub
test
ljmp
add
mov
out
test
ss
aam
push
and
adc
test
adc
outsl
in
ds
loopne
sbb
loopne
pop
push
data16
in
jmp
subl
push
sbb
xchg
je
lods
sub
rorb
pop
outsb
xor
mov
mov
xchg
cmpsl
lock
js
rcrb
daa
repz
mov
xor
xor
aas
jg
push
inc
cltd
xlat
cmp
add
aaa
hlt
insl
adc
loop
je
rorb
subb
insl
adc
mov
xchg
movsl
scas
inc
mov
ljmp
ret
rcr
add
add
ja
je
nop
jge
pop
inc
test
loopne
das
mov
and
stos
std
sbb
nop
mov
stos
addl
xlat
sbb
out
xchg
jno
mov
pop
cmp
aaa
sub
arpl
outsw
mov
mov
push
hlt
les
sub
pushl
mov
sbb
jl
sub
call
push
sub
in
lods
push
rorb
hlt
push
lock
stos
ds
jle
xor
sub
jbe
mov
rcll
jmp
mov
popf
popf
inc
pop
call
loop
and
pop
add
mov
lea
addr16
push
pop
out
push
push
shlb
lcall
xor
adc
ret
mov
in
cmp
mov
loop
jge
pushf
sti
sub
mov
inc
push
mov
push
pop
scas
sbb
adc
jnp
int3
dec
nop
pop
xor
scas
xor
shlb
insb
push
pop
push
in
or
or
cs
fwait
ss
mov
xor
mov
and
and
popl
fwait
js
jge
mov
clc
sbb
mov
test
icebp
dec
or
and
xchg
jo
mov
adc
adc
pop
pop
rorl
and
aaa
sti
mov
jb
repnz
shll
xor
xor
mov
jg
hlt
cltd
shll
jae
adc
or
inc
dec
and
push
outsl
imul
xlat
ljmp
loop
sahf
add
xor
xor
jl
jle
pop
jo
imul
push
loopne
mov
jle
or
adc
mov
clc
add
mov
mov
push
mov
fcoms
cmpsb
loope
mov
enter
stos
add
or
adc
in
ljmp
bound
inc
mov
fisubl
inc
xchg
pop
jmp
pop
xchg
xchg
xlat
add
or
inc
xchg
cltd
addr16
add
sarb
sbb
adc
mov
sbb
mov
push
and
xchg
shll
nop
add
loope
mov
inc
jg
push
inc
mov
xor
mov
add
mov
stc
in
aas
aaa
aas
push
or
sbb
inc
ret
jecxz
fistpll
int3
inc
jl
mov
lds
clc
fistl
imul
pushf
pop
pop
xchg
add
push
and
add
adc
adc
ficompl
mov
aas
xchg
or
and
or
xor
mov
fimull
fstpl
test
das
add
mov
filds
lds
nop
sbb
xchg
out
decl
decb
mov
jmp
cmp
or
rcr
loopne
sub
sub
mov
cmpsb
shlb
das
pop
mov
ljmp
cld
adc
xor
rol
aad
or
dec
mov
adc
outsl
incl
adc
push
imull
push
fcomp
jbe
mov
and
adc
fucomip
dec
jecxz
jne
icebp
push
hlt
xchg
pop
cmp
mov
lcall
add
add
mov
bound
movsb
movsb
je
or
inc
sbb
les
ret
pop
and
outsl
adc
xchg
jg
adc
pop
inc
insl
fcoml
adc
and
fwait
ss
cltd
lahf
xor
mov
loopne
ss
rep
dec
cmpb
jae
jp
push
cltd
cwtl
test
and
sbb
call
popl
inc
rcl
jnp
xor
sub
ror
pop
ss
pop
adc
or
push
sub
clc
dec
movsb
push
mov
sbb
gs
adc
arpl
mov
decl
adc
loop
sbb
pusha
lret
or
pop
cli
decl
adc
xor
push
or
add
sti
pop
adc
pusha
sbbb
or
test
pop
dec
js
gs
add
les
rcll
das
xchg
cmpsl
or
pop
js
mov
jecxz
ds
push
lds
jg
jp
xchg
data16
pop
int
rcrl
jnp
jg
mov
mov
mov
jle
sub
sti
mov
ss
pop
cltd
add
dec
jnp
adc
das
lds
mov
mov
addb
hlt
test
js
inc
int3
sti
ficoms
sbb
lcall
cmpsb
push
pop
mov
jge
inc
xor
std
clc
push
inc
cs
lret
fistpl
push
pusha
sub
add
push
repz
mov
test
lock
rcrl
xor
mov
les
mov
mov
arpl
jecxz
sub
sbb
and
stc
mov
mov
mov
filds
nop
shll
das
cld
add
repz
repnz
dec
imul
mov
aam
and
cmp
ret
pop
fistpl
fisttps
and
je
lret
inc
icebp
and
lods
pop
add
lcall
cld
rclb
mov
adc
dec
pop
mov
inc
cmp
mov
call
and
dec
mov
jae
pop
subb
jl
mov
adc
and
adc
mov
roll
push
das
mov
cwtl
xlat
cmc
out
out
pop
jge
mov
in
jbe
out
cmp
cli
pop
push
std
inc
cmp
js
sbb
or
out
leave
out
ljmp
or
int
aas
adc
sub
neg
push
clc
int
outsb
push
scas
adc
adc
aaa
mov
cmp
adc
packuswb
loopne
mov
jmp
sar
or
push
test
ret
inc
adc
or
hlt
sbb
jle
decl
dec
mov
mov
jmp
and
inc
stos
adc
in
xor
fsubp
mov
adc
mov
jmp
or
pushf
fsubs
mov
sbb
push
and
or
push
sub
popf
mov
or
lea
fdivrp
scas
nop
dec
adc
test
and
jg
outsl
std
mov
sti
shrw
xchg
sub
clc
jmp
mov
in
cmp
movsl
addb
ret
mov
mov
in
xchg
shlb
filds
imul
mov
das
cmc
pop
xor
adc
nop
sub
lret
movsb
xor
and
test
mov
rorl
or
sbb
cmp
addr16
fwait
mov
decl
push
outsl
fbstp
jg
ret
std
pop
arpl
xlat
xchg
ret
xlat
sub
lock
inc
stos
dec
push
lock
jmp
insl
shll
in
and
sub
and
pop
push
in
clc
sbb
jbe
out
rol
cmp
cli
ja
icebp
cmpsl
mov
stos
std
adc
pushf
mov
cli
sti
sbb
cld
movsl
ja
push
pop
dec
ret
mov
cs
jmp
jp
mov
stos
pop
inc
subb
and
mov
lods
push
and
cmp
or
stos
clc
fildl
lock
cld
orl
pop
outsb
dec
lods
add
sub
cmp
in
sub
cltd
fsubs
mov
dec
mov
mov
fisttps
push
lcall
or
mov
inc
add
and
mov
lods
mov
mov
xchg
sub
in
or
fstp
das
pop
sub
xor
inc
je
add
enter
add
mov
icebp
ds
mov
sbb
dec
add
icebp
clc
inc
or
ljmp
adc
sbb
loop
mov
das
cmp
xor
mov
ljmp
roll
rclb
insl
adc
pop
jae
dec
push
insl
in
push
fstpl
add
mov
data16
or
dec
pop
inc
jnp
add
cmp
push
push
mov
dec
adc
fwait
insl
and
mov
xchg
mov
push
arpl
fwait
lods
test
mov
rcll
add
pop
sbb
push
jo
andl
fisubrs
lret
cs
shlb
adc
mov
jo
popa
adc
add
inc
cmp
enter
mov
adc
test
insb
xchg
jne
push
cs
js
adc
push
mov
jbe
jmp
movsl
dec
aaa
fbstp
pop
jmp
filds
mov
ljmp
and
outsb
xlat
call
jg
dec
xchg
shlb
push
mov
push
js
lock
lods
int3
sub
add
jg
dec
mov
std
pop
stos
mov
imul
inc
arpl
adc
std
lock
inc
cld
lea
or
aam
into
add
leave
bound
jecxz
xchg
sbbl
inc
inc
cmovge
mov
ss
fimull
cld
mov
add
sub
in
fiaddl
hlt
add
imul
cmp
ja
jle
pushf
repz
scas
mov
js
adc
ja
sub
push
mov
pop
cmp
push
pop
shl
add
fiadds
jl
test
mov
add
sbb
in
cmp
adc
pop
push
mov
call
push
xchg
push
mull
insl
mov
cmp
fbstp
insl
cmpsb
lret
enter
fcoms
and
mov
fwait
push
mov
push
outsl
cli
outsl
sbb
cmpsl
int3
mov
mov
and
jge
mov
out
icebp
push
adc
and
push
inc
jae
mov
subl
fcoms
adc
pop
add
inc
push
xchg
daa
cli
pop
in
test
fidivs
cmp
cmp
or
add
pop
and
hlt
adc
fimull
mov
fcmovnb
pop
sbb
cmp
les
sar
add
xor
mov
jl
call
enter
cmc
xchg
push
mov
sbb
adc
and
out
xor
ljmp
mov
mov
cmpb
jbe
jo
mov
outsb
xchg
xchg
adc
lahf
sbb
xchg
inc
and
mov
push
clc
test
jp
or
stos
mov
mov
ss
idivb
fldl
jg
inc
ret
sbb
ja
xchg
shll
enter
je
xor
fidivrl
add
add
xor
push
push
fldcw
cmpsb
mov
cld
stos
cld
sub
lods
push
mov
icebp
enter
xchg
pop
inc
pop
sbb
incl
std
das
js
mov
andl
decb
jg
rcll
dec
mov
pop
popa
loop
or
sbb
inc
insb
icebp
mov
jbe
jl
jecxz
sbb
out
sti
call
sub
aaa
jne
xchg
cld
int
cmp
pop
inc
add
aas
push
and
in
lods
lea
pop
inc
and
movsl
fyl2xp1
lahf
adc
neg
incl
leave
cmp
push
cmp
push
cmp
sti
lods
mov
jb
fcoms
pop
cmp
stos
mov
sbb
pop
mull
cmpb
and
fidivrl
les
inc
cmc
fidivrs
enter
das
xor
pop
sub
pop
pop
push
and
add
mov
fisubl
roll
adc
mov
loop
jge
xor
arpl
or
pushf
inc
pop
xchg
xor
enter
cmp
pop
pop
insl
or
add
or
mov
inc
jno
std
outsl
shl
out
mov
enter
lret
sbb
fdiv
in
das
jle
mov
outsl
add
shlb
fadd
call
mov
movsl
repz
insl
adc
and
cmp
jae
leave
int
fucomp
scas
pushf
call
dec
cmp
push
mov
test
test
scas
addr16
iret
shr
in
jl
int3
stc
movsb
in
fbld
sub
es
movsl
jns
dec
into
lods
jmp
decl
jno
pushf
outsl
into
inc
mov
inc
push
push
imul
fstpt
cli
popf
mov
adcb
fwait
call
inc
scas
lahf
jecxz
pop
mov
std
pushl
adc
shlb
es
or
addb
fists
push
call
pop
adc
int
mov
adc
xlat
sarl
inc
fcmovnu
jnp
inc
inc
mov
out
cmp
or
dec
arpl
fnstsw
decl
and
inc
decb
lahf
stc
dec
bound
dec
inc
mov
pop
ret
lret
inc
push
pop
add
cmpl
cs
repz
pop
int
jb
mov
outsb
sahf
pushl
clc
stc
mov
or
jle
mov
cmp
mov
cmp
jne
jmp
movsl
das
pusha
dec
int3
daa
xor
mov
mov
inc
incl
ss
jg
sbb
cmpsl
add
dec
iret
pop
jl
xchg
lcall
mov
mov
hlt
push
xor
mov
addr16
in
aam
fisttps
cmp
sbb
inc
adc
mov
mov
bsr
mov
arpl
lcall
jle
sub
adc
xor
out
scas
int
dec
pop
cmp
orl
testb
dec
xlat
rclb
imul
das
sub
pushf
out
arpl
call
push
lea
mov
arpl
jno
mov
jecxz
and
sbb
aad
push
sar
jmp
leave
loop
js
adc
or
cmpsb
push
dec
jno
cmpsl
lods
shll
popa
jne
lock
jmp
incl
jnp
and
cmp
jmp
cmpsb
fwait
sub
cld
dec
in
jge
inc
inc
dec
lahf
xor
pop
mov
inc
fdivrp
int3
adc
sbb
sbb
dec
cs
fscale
ljmp
xor
into
mov
mov
mov
xor
std
or
xor
mov
xchg
push
pop
jp
test
mov
mov
xchg
out
es
adc
xadd
jmp
repz
push
jae
jg
dec
and
push
sbb
sbb
mov
pop
fldt
sub
sahf
das
scas
rolb
sbb
sub
in
cmp
sbb
mov
mov
int3
cltd
mov
ljmp
mov
sub
mov
jns
and
call
jecxz
mov
cltd
ret
fcompl
lock
jns
jne
cmpsl
lret
pop
mov
fldcw
pop
sbb
inc
lods
out
hlt
add
dec
mov
push
cwtl
cli
add
cmp
jno
sbb
cli
xchg
decb
push
lock
iret
xor
xor
decl
sub
cwtl
pop
je
ljmp
xor
std
mov
jbe
inc
inc
xor
push
setnp
dec
xor
xor
mov
movsb
jb
mov
out
scas
mov
or
ljmp
sbb
mov
sub
cmp
xor
rcrb
out
mul
mov
stc
add
adc
lock
xchg
or
pop
popa
roll
lahf
jns
pop
ss
repz
jg
pop
sti
cld
insb
in
stos
popf
push
repnz
lods
lock
cmp
nop
sub
fbld
and
jle
cli
nop
or
movsl
sub
mov
outsl
lds
test
sbb
xlat
insl
jmp
shrl
mov
push
sbb
sub
cld
ljmp
mov
cmp
mov
cmp
into
add
xchg
stos
fucomip
push
adc
movsl
push
and
scas
dec
jecxz
xor
fists
es
pop
roll
jb
test
pop
or
jge
sub
xchg
in
sub
jecxz
jg
decb
movsl
leave
out
sub
dec
dec
mov
cmp
addr16
aaa
call
outsl
sbb
push
dec
pop
cmc
cmpsl
pop
dec
jnp
fstpl
cmp
pop
mov
add
shl
loope
push
cmp
shrb
rcrl
jbe
sbb
inc
shlb
push
es
mov
in
ja
cmp
dec
fwait
jbe
mov
cld
adc
pop
adc
decl
mov
cld
xchg
push
aaa
ret
dec
aaa
js
jmp
mov
shll
pop
sarb
divl
sbb
mov
jl
mov
xor
mov
scas
outsb
clc
pop
cli
lcall
hlt
aaa
insl
dec
jb
mov
cli
push
xchg
jecxz
push
jbe
jnp
pop
popf
sbb
decl
lret
int
dec
dec
xchg
lahf
das
push
das
in
xchg
fisubrl
dec
rcr
js
lcall
sarl
sti
dec
lock
icebp
nop
pop
ja
icebp
add
inc
mov
cmp
scas
mov
mov
cmp
mov
xor
push
cmp
mov
push
enter
mov
ljmp
cmp
dec
sub
mov
decl
pop
mov
nop
leave
sbb
xor
out
ja
cmpsl
mov
inc
scas
cmpsb
and
push
sbb
add
xchg
fistpl
pop
mov
clc
jne
mov
mov
incl
incl
das
mov
jns
imul
fs
ret
call
scas
das
cmc
dec
hlt
cltd
scas
repz
inc
jno
pusha
xor
push
mov
clc
insl
sti
outsb
ret
mov
fistps
xor
lods
jae
ret
push
sub
inc
and
aad
in
push
ljmp
xlat
fwait
jp
sarl
or
in
mov
xor
jge
aaa
test
adc
sarl
mov
sub
jecxz
mov
scas
pop
dec
jl
std
call
dec
fs
jb
jmp
loop
fwait
adc
cli
in
aad
jno
mov
aad
rorl
sbb
ret
loope
push
decl
cs
test
adc
adc
mov
mov
es
stos
sub
mov
aaa
dec
mov
xchg
lods
sbbl
jecxz
sub
jecxz
dec
mov
ret
aaa
mov
pop
jo
jns
push
jmp
sub
or
push
lods
movb
scas
cld
fisttpl
jg
ja
aam
inc
ja
dec
imul
push
stos
stos
fwait
inc
xchg
pop
xchg
dec
fmuls
clc
incl
xor
adc
and
xlat
and
cltd
and
outsl
cld
mov
xchg
fdivrs
mov
shll
out
sti
or
loopne
dec
pushf
mov
xor
jp
jp
cmp
mov
test
js
cmp
jo
push
cmp
cwtl
lahf
xchg
mov
bound
cld
lret
lds
call
inc
lahf
fdivrs
mov
push
jae
mov
jmp
push
or
adc
mov
cmc
mov
leave
or
or
pop
xchg
push
mov
ljmp
scas
mov
lahf
xor
iret
mov
testb
dec
lock
jmp
leave
xorb
sahf
call
and
dec
mov
mov
decl
cld
pop
cld
mov
loop
dec
push
inc
cli
in
stos
scas
rdtsc
pop
mov
pop
cltd
pop
push
xchg
imul
xchg
pop
sbb
hlt
call
out
dec
test
jns
iret
jbe
push
lret
pop
es
aad
mov
mov
pusha
nop
out
adc
push
gs
mov
in
add
jge
inc
icebp
mov
popa
pop
cli
insb
push
mov
out
mov
int3
dec
shrb
xor
sub
cld
mov
xlat
push
cmc
cmp
mov
pop
sub
push
add
sub
decl
dec
pop
jns
xchg
mov
jb
sub
cltd
aam
cmp
inc
mov
push
xchg
pop
mov
cli
bound
and
push
pop
xchg
add
ljmp
add
std
pop
pop
dec
mov
popf
sub
xlat
xor
mov
icebp
jl
pop
std
icebp
mov
xorb
insb
scas
jne
aam
pop
sub
movsl
lods
sub
and
fsubl
imul
ja
sti
sti
test
inc
mov
fnstenv
and
int
roll
ret
mov
sarb
mov
push
int
mov
push
andl
xchg
jnp
hlt
rol
pushl
jae
aad
mov
loopne
mov
sub
out
inc
dec
xchg
mov
add
mov
mov
mov
aaa
cld
mov
cmp
lods
xor
aas
and
mov
mov
jl
and
ja
mov
xor
sbb
outsl
icebp
incl
outsb
inc
call
ret
cmp
xchg
movsb
lea
jmp
lock
lcall
in
cld
add
jge
xchg
or
test
pop
negb
fnstcw
mov
cmc
lcall
das
lock
pop
test
jmp
sbb
incl
pop
pusha
or
sbb
outsl
adc
lea
sbb
lcall
push
stc
sbb
stc
xchg
loope
out
mov
rol
repz
adc
xchg
or
pop
push
ljmp
push
xor
sbb
cli
fisubs
sbb
mov
or
mov
pop
repz
push
sub
icebp
xor
xchg
filds
das
adc
pop
pop
fstpt
push
stc
pop
mov
fsubrl
addr16
inc
std
in
jle
xor
push
mov
std
mov
jae
mov
pop
sub
out
cmpsb
xchg
test
movsl
or
jg
movsb
add
dec
mov
jmp
pop
pop
mov
dec
cmp
jbe
scas
je
jge
add
xchg
lock
aas
outsl
adc
mov
jmp
adc
mov
mov
imul
les
sub
xor
hlt
icebp
decl
scas
add
sbb
data16
lcall
ja
lret
inc
outsl
fsub
outsl
dec
dec
fiaddl
push
shrb
jb
ret
sbb
sbb
xor
lcall
xchg
psubq
xor
bound
sbb
outsl
adc
mov
lcall
and
call
push
loopne
test
pop
leave
and
mov
push
shll
and
fidivs
cs
sti
addr16
sbb
pop
outsb
cmp
aaa
push
cmpsb
out
test
cmp
fs
cmp
fxch
icebp
test
ljmp
incl
or
cmpl
jne
mov
loopne
icebp
call
cmp
int3
out
and
ss
adc
ljmp
shr
cli
das
movsl
add
xchg
pop
data16
addr16
xor
dec
ljmp
mov
fwait
ljmp
cltd
test
adcl
aam
aad
call
mov
scas
lcall
std
adc
adcb
add
mov
mov
lcall
mov
push
push
jmp
movsl
loope
sub
mov
push
inc
imul
call
clc
punpcklbw
xor
lock
adc
and
iret
xor
in
add
sbb
add
jb
and
lret
fdivs
xchg
cs
shlb
jg
repnz
decl
pop
testl
imul
daa
pusha
sarb
fistpl
ljmp
dec
lret
inc
rolb
push
push
into
movsl
mov
sbb
xor
test
mov
movsl
push
pop
mov
mov
xchg
push
clc
aam
decl
pop
les
lods
ret
inc
call
mov
adc
sarl
jae
adc
fstps
fbld
clc
filds
test
mov
cmp
lcall
jg
iret
mov
sbb
sahf
insl
aas
mov
mov
inc
adc
in
push
xchg
push
push
cld
push
xchg
mov
cmp
dec
movb
add
pop
rcl
int3
adc
pushl
test
or
les
mov
sub
fiaddl
xchg
dec
rolb
push
cmp
in
lcall
adc
stos
dec
pop
ja
clc
mov
js
lds
bound
mov
call
outsl
imull
add
stos
scas
push
pop
icebp
mov
sbb
lcall
pop
jecxz
inc
jmp
bound
jbe
mov
add
jecxz
mov
mov
jge
sub
push
and
mov
icebp
cltd
std
test
incl
pop
cli
lret
leave
xchg
cmp
mov
shr
mov
mov
jg
pushl
jecxz
call
mov
scas
arpl
repz
push
call
cmp
les
mov
cwtl
mov
aaa
sbb
sbb
or
das
fsubrl
popf
test
add
push
and
decl
or
adc
push
mov
lcall
or
or
cwtl
pop
jae
cltd
xchg
stos
test
add
rcl
and
jmp
sbb
mov
fwait
mov
jns
sbb
ljmp
mov
insl
inc
data16
inc
sti
dec
cmpsl
cmp
pop
adc
cli
cwtl
and
adc
sahf
inc
out
repnz
popl
mov
das
jb
popf
lea
movsb
lret
fst
xchg
and
jmp
or
jns
decb
std
call
arpl
mov
leave
int
loop
dec
lcall
or
roll
aad
fwait
jno
or
pushl
mov
adc
fstl
sbb
notb
lods
mov
pushl
arpl
lcall
pop
test
adc
loopne
rorl
mov
mov
stos
loope
bound
or
mov
stos
cwtl
ja
add
decl
lods
pushf
sub
jnp
fcomps
test
fisubrs
sar
pushl
cmpsl
mov
movsl
lods
sub
test
or
jg
sbb
fisttpl
mov
add
jg
xchg
mov
sub
mov
addr16
jbe
clc
dec
addr16
push
push
cmpsb
inc
mov
in
rorb
jmp
push
ljmp
inc
mov
repz
jge
lcall
mov
dec
pop
jmp
fldcw
out
push
mov
or
jne
hlt
inc
enter
aas
scas
pop
pop
mov
ret
inc
repnz
jl
scas
inc
cs
jb
push
pop
cmp
movsl
btc
jecxz
lcall
sub
sti
xchg
jmp
or
dec
dec
mov
sub
push
call
jle
inc
pop
cld
xchg
push
mov
inc
mov
push
and
cwtl
aam
lcall
inc
in
xchg
cmp
push
pop
mov
sarb
bound
paddb
ljmp
xor
xor
cmpsl
dec
cmp
add
stc
movsb
ret
movsb
ja
decl
xchg
in
push
xor
push
jmp
mov
cmp
fs
ficomps
xor
mov
pop
lds
mov
push
jge
or
incl
jno
cmp
sub
mov
sti
dec
add
les
push
mov
loop
sub
scas
sbb
or
inc
call
incl
retw
cld
mov
subl
xchg
mov
outsl
lock
call
adc
fildl
popw
je
push
jg
testl
incl
filds
jl
aad
jnp
sti
aam
or
fwait
jle
jp
or
pushl
imul
sbb
cmp
add
mov
das
jecxz
fsts
pushl
mov
es
mov
sub
mov
rorl
rcl
jnp
call
call
xor
out
mov
shll
xchg
jno
cld
ljmp
fnstsw
fcomp
jae
stc
jo
cmpsl
inc
and
mov
testb
bound
jg
pushl
jge
idiv
js
hlt
mov
adc
jmp
call
hlt
add
cmp
jb
out
aaa
rcll
js
and
enter
out
aad
decl
jne
std
or
mov
ljmp
sub
add
and
jmp
movsb
mov
pop
cli
decl
fdiv
xchg
push
xor
cmp
shrl
mov
decl
push
dec
loopne
lock
adc
push
scas
fsub
or
mov
frstor
sbb
mov
in
cmp
mov
incl
subb
icebp
decl
mov
insb
xlat
fsub
aad
stos
adc
add
jg
call
cli
mov
int3
in
xchg
xchg
xor
cmp
or
add
mov
cmc
or
repnz
xor
idiv
lcall
mov
lods
mov
inc
test
clc
ret
cld
adc
push
outsl
loopne
cwtl
mov
hlt
fsave
add
jae
rol
jp
or
add
or
jae
loop
xor
ljmp
sub
push
jns
adc
cmp
aad
cld
call
mov
adc
cltd
push
call
xchg
pop
cwtl
ss
jp
ljmp
mov
jecxz
daa
loope
aad
xor
loop
pushf
gs
in
sbb
jg
outsb
jmp
fs
mov
inc
imulb
fstps
inc
xor
mov
mov
sub
fcoms
in
push
jb
out
int
in
push
add
lock
dec
jge
std
and
pop
xchg
pushf
lret
out
or
incl
iret
ja
cmp
in
and
inc
repnz
inc
in
and
aas
addl
testb
or
xor
stos
sbb
dec
xchg
push
imul
push
lods
js
inc
dec
sahf
jbe
mov
shrb
jns
sahf
stos
idiv
das
inc
hlt
jmp
add
fbld
sub
jl
pop
sar
jmp
jp
js
les
xor
push
cld
push
or
mov
fistpll
jnp
mov
sub
push
js
jecxz
mov
mov
inc
pop
push
pusha
rcl
cmp
sub
addr16
sub
cmp
out
lahf
xorl
or
add
call
push
js,pt
call
loopne
sbb
mov
cld
lcall
mov
ret
test
clc
lret
adc
jl
inc
cmpsl
add
int
sub
xchg
or
ret
cmp
sbb
lea
int
decl
mov
pop
out
mov
inc
fiadds
ss
push
xchg
push
movsl
lcall
in
mov
std
jg
fcom
mov
aam
imul
push
sub
dec
orb
pop
xorps
lds
sub
jmp
dec
push
mov
push
sub
stos
repnz
push
rclb
push
mov
add
mov
mov
inc
lcall
mov
fbld
mov
push
cmp
call
incl
in
xor
out
adc
and
jnp
xchg
dec
lcall
adc
mov
mov
xchg
sub
adc
incl
imul
and
adc
cmpsb
scas
pop
cmc
or
mov
ljmp
xchg
sub
lods
adcl
ss
sbb
ljmp
insl
decl
cli
mov
loopne
rcll
jo
xorb
jno
sbb
mov
xchg
inc
ja
mov
mov
insl
mov
jg
ss
jge
dec
lret
pop
dec
pop
cwtl
mov
pop
addl
jae
ja
js
push
xchg
inc
incl
bound
xor
cmp
aam
xor
push
test
insb
mov
lret
mov
push
insl
pop
pusha
xchg
sbb
mov
mov
xor
jg
call
mov
cmc
mov
xor
push
jmp
cli
ljmp
or
pop
loop
jo
pop
mov
lock
pop
push
arpl
decl
dec
aad
mov
mov
lds
jns
and
call
pop
cmp
pushl
fists
jns
inc
aas
jno
leave
adc
inc
mov
mov
jnp
jg
sti
das
push
jle
scas
sti
cmp
sub
sub
jo
mov
lods
mov
sbb
or
push
xchg
ljmp
lds
cmp
in
xchg
jbe
std
fdivrs
call
enter
mov
leave
xchg
imul
mov
lcall
jle
mov
fsubr
ds
pop
repz
xchg
test
cmp
out
jge
push
mov
in
mov
xchg
aas
mov
push
outsb
push
push
push
pop
out
scas
push
lcall
jae
push
lret
cmp
out
inc
xor
clc
inc
call
adc
sbb
pop
push
hlt
lcall
popl
mov
jle
jg
subb
cmp
jp
outsl
lcall
scas
cmpsl
les
sub
or
mov
lcall
pop
popf
pop
js
ljmp
cli
outsl
outsl
loop
int3
repnz
and
insl
test
data16
mov
jmp
dec
cmp
inc
xor
mov
jge
cmp
ror
sub
aam
lcall
test
lds
daa
jle
mov
addr16
ljmp
lock
test
push
pop
inc
cmp
jge
lds
xlat
pop
jbe
dec
push
call
push
ljmp
out
push
pop
out
xor
fdiv
dec
mov
in
fiadds
decl
int
cwtl
jp
js
jno
setle
jmp
inc
jmp
mov
sbb
popf
pop
stos
xchg
push
sbb
cmp
xor
inc
stc
std
lcall
mov
rorb
push
xchg
lds
xchg
cmpb
push
hlt
dec
cmp
push
incl
sub
mov
dec
pop
shlb
stos
sbb
jmp
add
das
mov
cmpsb
adc
inc
jmp
into
sbb
les
cltd
cmpsb
test
fwait
mov
add
mov
inc
call
lcall
push
mov
xchg
sub
add
push
lds
mov
repz
mov
or
xor
aad
ja
out
leave
cwtl
out
cmp
popa
insb
cmp
adc
inc
scas
dec
insl
mov
mov
cmpsb
test
jnp
mov
pop
repnz
movsl
add
and
push
and
ljmp
into
js
lock
mov
rep
push
cmc
pop
xchg
shr
xchg
outsl
lock
aad
into
push
mov
in
cld
sub
add
inc
push
andl
es
jle
cmp
je
sbb
std
call
adc
inc
and
out
scas
mov
sbb
pushl
es
and
cs
pop
pushf
daa
xor
sub
aad
incl
jg
push
inc
inc
sbb
pop
add
cmp
aas
sbb
fadds
clc
movsl
scas
cmp
pop
dec
cmp
sub
ljmp
pop
nop
and
clc
add
or
pop
sbb
repnz
mov
xor
push
push
in
xchg
test
mov
sub
in
lcall
sahf
lock
loopne
add
cmp
sub
dec
arpl
pushf
add
decl
clc
mov
inc
mov
jno
fsubrl
or
aas
std
lea
in
pop
std
pushl
jb
mov
clc
and
pusha
repnz
test
or
pop
jno
cmc
out
leave
add
adc
incl
mov
lods
push
or
insb
loopne
sbb
mov
int
cmp
push
lret
stc
lea
and
call
outsb
lock
icebp
xchg
inc
enter
shll
fwait
cmp
xor
mov
shll
cltd
sahf
and
pop
icebp
lcall
mov
lahf
lahf
fs
hlt
lret
std
fildll
add
test
out
lcall
std
das
xchg
or
call
decb
mov
cld
fcos
ljmp
bnd
push
les
sub
andb
mov
out
inc
push
movsl
sar
add
and
push
dec
xchg
cmpsb
xor
popa
pop
jo
aas
pop
mov
and
sub
sbb
shl
sub
jmp
adc
jp
push
ljmp
rclb
stos
loop
shll
ljmp
stos
cmpsb
loopne
inc
dec
loope
pop
jg
jg
test
add
imul
xor
decl
cld
or
insb
inc
lahf
pop
pop
mov
mull
rcrb
or
outsl
in
inc
fiadds
pop
xchg
pop
mov
sub
push
ret
sub
jb
mov
test
retw
test
jo
out
mov
testl
aas
shl
fbld
stos
push
fldl
fistl
jle
std
mov
and
cmp
bound
sub
lds
jg
sub
pop
cmp
or
ja
adc
cwtl
pop
lods
ljmp
xchg
dec
inc
or
mov
ret
in
scas
pop
mov
fstl
push
fcmovbe
daa
fisubl
mov
add
in
pop
adc
fistpl
xlat
xorb
mov
rolb
popa
adc
clc
ljmp
fidivrl
dec
flds
jbe
scas
shr
mov
dec
push
jcxz
std
cmpsl
cs
push
mov
adc
jne
int
dec
push
jecxz
inc
mov
jbe
loop
fucomip
or
mov
xchg
xchg
sub
mov
mov
ljmp
push
loope
inc
jo
nop
push
jo
ja
push
mov
inc
lock
jmp
aas
stos
dec
or
inc
sbb
mov
call
fsub
and
jp
fcos
call
shlb
xor
int3
mov
stos
push
incl
cmpb
or
test
pushl
sbb
sahf
dec
rcrb
and
push
aaa
leave
sub
xchg
or
std
pop
mov
stc
fcomp
nop
cmc
cs
test
lcall
jmp
cmpsb
call
mov
mov
push
dec
cltd
adc
cltd
ljmp
lods
dec
lods
test
jne
inc
test
iret
lret
fidivl
in
mov
add
sub
mov
call
popa
mov
push
fnstenv
outsb
and
mov
clc
xchg
addr16
pop
ljmp
sar
push
mov
mov
pop
inc
mov
add
bound
dec
std
ljmp
mov
repz
cwtl
mov
pop
push
decl
das
icebp
adc
jecxz
in
pop
pop
pop
imul
mov
loopne
mov
imul
insb
dec
sbbb
push
jbe
adc
lcall
ret
inc
cmp
icebp
inc
ljmp
rcll
mov
add
gs
jbe
movsl
or
lcall
leave
lret
sbb
push
sahf
pop
mov
inc
mov
push
jg
incl
pop
addr16
pop
mov
inc
xchg
lahf
cld
jg
pushl
dec
jnp
mov
and
shrb
ds
ljmp
jae
aas
fistpll
jnp
cmp
jl
mov
add
push
fwait
push
sti
fucomip
jmp
or
inc
jp
jb
lcall
pop
fcompl
jg
push
mov
scas
das
stc
lahf
jl
pop
mov
daa
jo
xchg
xor
loop
aaa
inc
cmp
lcall
les
jp
ret
outsb
fwait
fs
pop
sub
dec
test
jnp
push
jmp
imul
mov
call
sarb
aaa
in
loop
leave
sub
xor
lds
ljmp
stc
mov
bound
push
fnstcw
xchg
push
xchg
sub
cmpsb
jbe
cmp
dec
pop
scas
cmp
imul
jo
sub
dec
sub
lret
ljmp
inc
ds
ss
bndldx
mov
les
lret
fadds
loope
enter
incl
mov
insb
mov
ljmp
pushl
mov
cmpsb
jge
jg
dec
pushf
in
arpl
in
call
stc
inc
shll
shr
inc
jle
sbb
insl
stc
mov
incl
bound
bound
cld
out
outsl
pop
jb
adc
jp
mov
add
pop
and
mov
inc
mov
push
push
push
arpl
fwait
mov
popf
es
mov
inc
xchg
nop
inc
or
dec
jns
push
pop
jne
jge
sub
int3
sub
jge
call
bound
cmp
pop
or
in
pop
lods
jmp
shrb
cmp
push
pushl
cld
enterw
leave
jno
push
enterw
mov
jecxz
lods
repz
push
enter
push
pop
jb
mov
mov
scas
cmp
incl
sub
dec
hlt
inc
push
mov
push
sub
pop
int3
jle
mov
ljmp
xchg
call
cs
cmpb
cmpsl
and
mov
in
or
inc
aad
dec
lret
fistpll
leave
fs
ljmp
cmp
leave
das
hlt
incl
push
mov
push
movsb
cmp
cmp
ss
sbb
dec
ljmp
mov
shrb
je
int
sub
test
cld
pop
in
pop
sub
movsb
xchg
pop
cli
ljmp
enter
jns
cmp
rorl
out
jbe
pop
stos
shlb
repnz
dec
pop
scas
mov
loop
rolb
je
add
cmpsb
cmp
icebp
ret
or
fcomp
inc
aam
xchg
bound
rcrb
push
fcoml
aad
repnz
cmpsb
and
cmp
rorl
ret
pop
test
dec
test
data16
loop
or
pushf
fildll
enter
ret
add
stos
lahf
out
mov
inc
repnz
sbb
mov
mov
xchg
dec
inc
test
pop
mov
mov
gs
inc
mov
cmpsb
push
mov
call
pusha
mov
mov
movsb
jno
jne
fadd
test
pop
and
std
push
std
out
mov
cltd
sbb
ret
and
sbb
ds
cmp
std
add
lcall
fdivs
xchg
sub
lock
negl
js
cli
pop
insl
decb
das
mov
or
lahf
add
ss
int3
lea
cmp
mov
gs
ljmp
out
data16
sarb
adc
push
std
mov
adc
imul
test
call
loop
jns
iret
add
mov
lods
ja
insl
push
mov
daa
add
aad
mov
call
out
add
add
mov
adc
mov
or
dec
mov
pop
dec
out
pop
jno
cmpsl
cmp
popa
or
mulb
decl
or
arpl
adc
xchg
xchg
insl
jecxz
sbb
jne
decl
mov
mov
cltd
mov
mov
jmp
outsb
adc
push
jmp
mov
cmc
and
sbb
rdmsr
repz
xchg
test
fsubrl
fucomip
and
sbb
inc
jns
inc
xchg
cs
lcall
aaa
mov
sar
sbb
icebp
ror
jecxz
mov
lods
xor
aaa
cli
call
and
fildll
lods
pop
movsl
sbb
xchg
lret
jae
int
pop
jg
lcall
movsb
sbb
or
and
test
cmpsb
popf
jecxz
pusha
cmpsl
pop
mov
mov
std
icebp
jnp
xlat
xchg
ficompl
inc
enter
and
decl
mov
aam
cmp
loop
push
pop
xor
jge
ss
adc
add
sbb
int
fwait
and
int
push
repnz
aad
leave
push
nop
add
push
jmp
daa
dec
push
outsl
push
insb
jmp
call
outsl
mov
ficoml
xchg
jge
lcall
inc
fnsave
jge
xchg
add
sbb
fwait
shl
cmpsl
mov
sub
lds
pop
pop
pop
call
inc
dec
jp
loopne
fucomp
push
cmpsb
sbb
or
dec
leave
daa
das
adc
or
and
jmp
sub
lods
adc
scas
inc
lods
inc
jg
cmp
enter
das
xchg
mov
movsl
popa
mov
cld
mov
dec
lock
iret
jns
or
aas
movsl
arpl
lcall
mov
sub
dec
call
ret
sub
lods
dec
cmp
pop
cmp
popa
ret
out
pop
dec
xor
jb
enter
cs
cltd
in
shrl
mov
cmp
cmp
jnp
xor
sub
daa
pop
rorb
out
clc
loope
xchg
lret
dec
mov
in
mov
cmc
inc
mov
pop
fsubr
sub
subb
js
testb
scas
test
and
dec
imul
adc
bound
stos
lods
loope
ljmp
popa
cmpsb
shrb
mov
out
test
ss
out
movsb
xchg
je
ljmp
pop
incl
mov
out
mov
hlt
mov
push
addr16
enter
imul
std
call
lods
jl
and
shll
imul
call
incb
push
lahf
cmpsb
fnstcw
sbb
adc
inc
sti
adc
and
mov
scas
fisubl
push
imul
jmp
push
mov
jg
decl
popf
shlb
pop
or
jge
pusha
pop
je
jecxz
into
add
adc
mov
push
imul
pushf
addb
push
test
insb
mov
mov
data16
push
push
pop
jg
aas
mov
pop
push
mov
dec
dec
jo
or
dec
dec
dec
dec
lods
mov
jb
mov
fwait
popf
cmpb
aaa
clc
mov
mov
adc
dec
in
mov
inc
icebp
push
mov
jmp
add
inc
add
pop
stos
jl
mov
pop
sub
jp
jmp
pusha
inc
bnd
addr16
std
stc
jle
nop
js
xchg
repnz
or
jmp
hlt
jg
sub
inc
sub
add
sbb
jle
ljmp
jp
jg
jp
into
fsubl
leave
inc
mov
push
adcb
mov
ljmp
mov
ja
push
jnp
adc
xchg
sub
inc
addr16
movsb
pop
cmp
jmp
ljmp
or
insb
push
push
adc
lds
sbb
loopne
movsl
ja
and
in
mov
xchg
enter
push
inc
pop
add
push
mov
mov
data16
adc
test
jnp
dec
outsl
add
jnp
jge
cli
ljmp
lret
outsb
jno
or
xor
jg
js
jno
outsl
mov
cmp
insl
or
mov
outsl
std
jg
lods
sahf
repnz
icebp
mov
add
bound
push
dec
add
bound
mov
mov
repz
cltd
mov
jg
ficoml
pop
cmp
cmpsb
push
mov
jmp
jle
in
in
out
mov
pushl
imul
inc
mov
cli
pop
aam
mov
xchg
add
and
sbbb
fucomip
jg
imul
mov
fsubs
sbb
sbb
cli
dec
mov
jns
and
inc
adc
push
push
ret
mov
xlat
adc
jne
int3
mov
push
push
fnstsw
xchg
adc
test
aad
cmp
mov
pop
das
sub
pop
ds
inc
lcall
lods
cmp
pop
push
lock
roll
add
lcall
nop
mov
or
dec
mov
ds
outsl
pushl
int3
mov
insb
xchg
std
loop
stos
xchg
insb
xor
mov
mov
inc
testl
pop
das
jmp
push
adc
jnp
mov
sti
jg
and
mov
icebp
mov
pop
movl
in
lahf
scas
aad
mov
adc
add
push
jmp
das
dec
jmp
sbb
mov
mov
push
ljmp
in
xor
pop
rorl
mov
push
pushl
out
into
inc
dec
jne
sbb
int3
stos
imul
out
and
cmp
adc
lcall
cmc
mov
pop
std
sbb
in
xchg
aad
xchg
pop
mov
call
adc
and
icebp
sub
push
jnp
out
mov
sbb
ss
dec
adc
insl
dec
cmp
in
pop
mov
pop
jne
push
lock
inc
pop
pop
sub
and
push
into
sbb
dec
repz
cltd
lods
dec
test
sub
ljmp
add
jae
xor
or
add
decl
xor
push
decl
insl
or
and
adc
dec
lcall
push
ss
mov
mov
mov
push
ds
sbb
fildl
jle
scas
mov
adc
push
mov
sbbb
cmp
mov
loope
mov
incl
sbb
xor
push
fldenv
cmp
jp
fstpt
rcrb
jecxz
std
pop
rolb
pushf
sbb
into
orb
mov
call
lret
test
clc
in
xchg
aam
sub
and
ljmp
hlt
pop
lock
sarl
stos
xchg
push
pop
pop
mov
dec
mov
jge
insb
mov
or
repnz
xchg
out
into
imull
repz
ja
push
xor
cld
pop
into
xor
iret
sub
gs
cmc
les
and
fisttpl
cld
incl
dec
lret
nop
or
mov
pop
cld
dec
shl
jnp
inc
incl
test
in
cs
push
in
jns
ret
iret
jmp
std
rcrl
ljmp
in
loope
sti
xlat
inc
jecxz
cli
lds
xchg
insl
pushf
mov
outsl
cmc
sub
mov
adc
scas
ja
xlat
into
sbb
loop
lcall
iret
xchg
xor
andl
push
sbb
adc
jle
mov
jmp
and
and
lcall
lods
lret
inc
aam
mov
incl
jp
into
sub
push
xor
pop
inc
jp
pop
or
sbb
mov
sar
incl
adcb
push
loopne
add
xchg
out
les
sbb
fucomip
jb
lock
dec
out
out
inc
xor
cmc
jbe
outsl
mov
dec
adcb
data16
mov
add
cmp
call
mov
incl
cli
sbb
in
adc
rcrb
cltd
test
pop
jmp
gs
ljmp
cs
adc
pop
cmpsl
adc
setno
ljmp
and
jmp
jg
call
push
mov
cmpsl
mov
inc
mov
aas
and
sbb
mov
lret
js
fcmovb
das
and
cmp
cld
test
sbb
adc
push
mov
repz
mov
stc
in
jnp
fs
xor
aam
ds
pop
fidivrs
jg
aaa
pop
loope
xchg
pop
mov
push
xchg
cmp
mov
or
pop
sbb
das
out
mov
push
shlb
lods
cmp
pop
test
test
jle
sbb
jg
sub
jbe
sub
xchg
ficoml
testb
stos
or
jmp
xchg
pop
aam
add
or
dec
pop
push
loop
sub
faddp
decl
and
lcall
ds
pop
fdivl
pop
fadds
rdpmc
xchg
incl
aaa
das
sahf
add
or
loop
sarb
insb
lock
mov
mov
filds
scas
xchg
js
dec
std
pushl
xor
cld
test
sti
mov
nopl
or
daa
mov
rorl
aaa
mov
inc
mov
push
enter
sahf
aas
xchg
popf
fdivl
and
incl
popf
sbb
and
jns
loope
push
insb
sub
mov
std
jmp
scas
pop
or
pop
orl
add
cmp
shll
rep
fdiv
mov
cmc
jecxz
push
inc
mov
aad
xchg
inc
or
sbb
xchg
cli
pop
ret
call
cmpsb
pop
je
and
and
pop
inc
push
test
or
dec
and
lods
cmp
sahf
fsts
xchg
sti
mov
loop
popf
mov
sub
adc
jmp
hlt
mov
dec
mov
pop
call
daa
shrb
mov
xchg
pop
inc
push
add
add
mov
jg
push
lcall
sbb
sbb
sbb
mov
xchg
pusha
cmpsb
or
jl
outsl
pop
xchg
sbb
movsl
icebp
sub
xor
add
mov
cmpsb
xchg
mov
insb
cld
pop
xchg
sbb
mov
xor
xchg
sub
pop
lret
lcall
cmc
in
cmp
cmp
jns
jne
scas
xchg
xchg
mov
call
and
ljmp
lcall
loop
mov
add
inc
fs
and
mov
dec
jne
nop
xchg
xor
sti
mov
push
jae
loop
adc
jmp
or
leave
mov
push
pop
push
dec
mov
mov
in
test
ja
gs
mov
dec
sbb
mov
gs
jg
ficomps
xor
mov
and
inc
jno
ret
jnp
jbe
add
lahf
xchg
ljmp
mov
stc
shll
inc
push
add
xor
fisttpll
jbe
sbb
arpl
jg
push
or
lahf
push
jo
repnz
xor
ljmp
shrb
aam
dec
gs
rclb
jle
mov
pushl
je
repnz
rorb
outsb
or
mov
pushf
push
dec
lds
call
fisttps
dec
arpl
xchg
or
dec
adc
andb
stos
mov
lock
ficoms
pusha
xorl
fisubl
pop
dec
mov
dec
popa
incl
mov
mov
mov
sti
adc
push
pushf
sbb
cmp
lcall
mov
sbb
xchg
loop
mov
push
pop
add
dec
loopne
dec
cmp
jg
dec
cbtw
incl
movsb
fidivrl
aad
dec
popf
cmp
mov
cli
rcl
dec
pop
negb
dec
cld
faddl
jbe
lahf
sbbb
mov
mov
pusha
add
xchg
fistps
test
lods
inc
pop
xchg
add
jb
pop
mov
call
pop
add
mov
inc
fidivrs
pop
sub
lods
or
dec
call
cmp
mov
shr
lcall
mov
sbb
pop
push
test
cmp
and
mov
sti
mov
jl
leave
outsb
ja
sub
addr16
mov
push
jg
xlat
xchg
repz
inc
add
fs
daa
inc
cmp
sub
jnp
mov
xor
cmp
mov
call
inc
jge
mov
push
daa
xchg
inc
inc
incl
aaa
icebp
push
mov
iret
rolb
add
inc
nop
xchg
pop
pop
pop
mov
mov
mov
outsb
dec
pop
mov
mov
mov
std
inc
cld
std
xchg
and
push
sub
sbb
leave
lcall
incl
xor
xchg
jl
inc
dec
sbb
and
test
push
or
mov
pop
test
pop
mov
push
mov
in
or
mov
xor
lea
and
add
call
gs
enter
insl
lea
loopne
cli
ret
aam
sbb
outsb
cmp
add
jmp
sbb
jg
ret
push
pop
in
jae
iret
xor
ja
shrl
sub
sub
sbbl
fildll
ljmp
movsb
mov
lcall
fistps
jmp
jecxz
push
cmc
in
inc
xor
or
xchg
ja
shl
jmp
outsl
cld
cwtl
mov
arpl
cmp
ret
mov
ljmp
cmp
xorl
jmp
sbb
int3
in
mov
pop
cld
lahf
fimull
out
outsl
hlt
inc
jmp
in
mov
pop
stos
dec
movsl
inc
inc
decl
jl
aam
inc
push
or
lcall
out
test
dec
add
les
jo
dec
insb
lret
cltd
aaa
loop
xor
xchg
iret
xbegin
fcomp
jb
outsl
mov
cli
in
jecxz
cmp
stos
rcll
sub
jge
pushl
in
push
bound
jge
pop
mov
lret
push
call
std
out
fucomip
loope,pn
imull
lret
movb
rcrl
std
sub
dec
cld
lcall
aam
fnstenv
mov
push
jmp
movsl
cs
rcrb
outsl
jb
gs
call
xor
mov
jnp
cli
call
push
in
lock
faddl
or
stc
cwtl
idiv
ljmp
add
lret
jmp
add
push
test
orl
ffreep
push
cmpsb
xchg
fcmovb
std
adc
int3
jb
mull
insl
jns
jb
lock
test
call
jno
mov
mov
mov
das
xchg
push
lcall
add
into
cs
push
lods
and
sub
cltd
xchg
cmp
inc
pusha
loopne
and
adc
loop
push
push
pop
js
pop
dec
pop
pop
popa
and
xlat
mov
xchg
add
mov
call
gs
rcrb
loop
out
pop
push
lret
out
adc
fucomp
test
inc
pop
ss
sub
push
test
pop
out
lcall
cmpsl
xlat
xlat
ljmp
les
popf
loopne
ss
dec
and
pop
rep
movb
idivb
or
mov
incl
dec
shll
call
adc
inc
or
xor
lock
daa
push
and
lret
mov
ljmp
xor
les
decl
das
mov
addb
stc
inc
jo
out
jnp
push
mov
add
push
mov
add
push
cmp
aaa
mov
mov
add
xchg
or
jo
and
lock
adc
adc
jg
fisubrl
fwait
sbb
xchg
or
inc
push
xor
and
hlt
add
ret
inc
mov
fbld
out
icebp
or
je
pop
lret
mov
stos
and
in
add
jp
stos
inc
mov
inc
ds
pop
aam
pop
test
gs
sub
push
adc
orl
lock
xor
sbb
mov
iret
pop
fcomi
int3
push
inc
dec
add
and
adc
add
jne
cli
lahf
pop
xchg
sub
call
jmp
lcall
nop
pusha
add
sbb
or
pop
mov
movsb
sbb
loop
pusha
ss
movb
mov
adc
stc
call
std
pop
and
movb
clc
outsl
jmp
orb
hlt
xor
pop
mov
mov
adc
scas
sbb
jmp
addb
fisttpll
rcll
insl
test
add
and
fdivr
sub
insl
fwait
lods
jb
int
pop
stos
mov
sarl
rorl
add
pushf
cld
xor
add
mov
add
filds
inc
int3
mov
add
arpl
xchg
mov
stos
push
loope
ret
mov
sahf
into
xchg
add
add
inc
out
mov
cmc
mov
add
inc
je
call
inc
xchg
mov
cmp
push
pop
mov
sahf
daa
jo
rcrb
cli
aaa
push
cltd
sbbl
rorb
sahf
dec
adc
jl
shlb
decb
es
mov
ret
add
out
scas
mov
or
fcmove
lcall
popa
inc
ss
dec
ja
xchg
bts
sub
mov
jbe
insl
insb
imul
popa
mov
jne
call
mov
jmp
in
cli
push
fadds
fwait
repz
pop
outsb
or
mov
inc
cmp
sti
push
dec
adc
shlb
pusha
pushf
mov
inc
cltd
mov
and
roll
mov
aaa
addl
mov
sbb
stc
imul
or
cltd
jbe
jnp
add
xorb
rcl
or
lock
imull
dec
cltd
or
inc
gs
fneni(8087
jbe
xor
dec
cld
push
jl
lea
mov
roll
and
mov
add
add
clc
mov
aaa
jmp
mov
or
dec
xchg
adcb
icebp
pop
push
push
xchg
pop
call
stos
pop
inc
sbb
inc
sbb
mov
mov
push
andb
sub
std
notb
movsl
or
scas
cmp
pop
push
stos
xchg
xor
sbb
jae
push
rcrb
add
xor
cmp
mov
push
push
outsl
insl
push
add
fwait
pop
inc
sub
add
fsubrs
sub
stc
push
add
fildll
sbb
mov
bound
jmp
inc
adc
add
mov
and
mov
icebp
add
push
mov
mov
inc
push
push
out
xchg
xor
add
pop
outsb
mov
pop
adc
or
sub
xchg
push
daa
sbb
int
adc
aad
lea
aas
inc
xor
sub
adc
pop
add
insl
mov
add
aas
cmc
negb
or
mov
call
xor
in
mov
add
xchg
push
std
test
mov
daa
mov
mov
sbb
xchg
ret
sub
push
cld
out
mov
cltd
or
xchg
adcb
jbe
aam
jbe
mov
mov
push
mov
pop
je
clc
das
aam
testb
pop
out
push
and
sarl
pop
cwtl
push
xor
add
mov
and
mov
xor
jp
test
pop
dec
push
push
inc
xor
mov
jp
jmp
sub
inc
xchg
push
mov
pop
sub
les
add
cmpsl
ja
sbb
dec
dec
cli
mov
push
imul
imul
cmp
ss
iret
add
sbb
and
test
pop
adc
xchg
mov
xlat
inc
pop
fcmovu
push
aaa
fisubrs
hlt
pop
pop
je
mov
test
scas
je
xor
mov
pop
loop
mov
mov
mov
adcl
adc
and
push
nop
sarl
leave
push
gs
adc
add
movsb
pop
pop
jecxz
mov
jp
loope
mov
xor
xlat
jbe
add
loopne
jmp
js
pop
mov
xchg
lods
and
push
pop
mov
decb
in
jecxz
xchg
cmc
iret
aad
jle
hlt
pop
xor
rolb
in
pop
xchg
mov
dec
jecxz
mov
add
rcr
sbb
movsb
fistpll
xor
lret
cwtl
jmp
outsl
mov
aam
sbb
jo
adc
loopne
loope
jg
lahf
adc
gs
mov
mov
addb
jg
enter
repnz
jmp
adc
xchg
push
mov
sub
dec
fbld
inc
or
sbb
add
inc
aad
mov
test
fs
daa
lea
mov
mov
lcall
cmp
fldl
xor
add
mov
ret
jns
sbb
mov
mov
das
testb
inc
cmpsb
cmp
cli
int
jo
arpl
mov
sub
outsb
pop
pop
and
sub
mov
push
cmp
decb
inc
in
mov
repnz
aaa
lods
ds
pavgw
adcb
ja
pop
mov
loopne
rorb
loop
orl
cld
pop
sbb
jbe
movsb
mov
aaa
or
mov
ret
xor
in
cld
mov
arpl
dec
xor
inc
xchg
sbb
les
mov
mov
push
inc
shlb
jl
mov
icebp
mov
sti
ret
or
out
mov
or
rcrl
xor
push
or
sub
xlat
lods
add
inc
sbb
sub
mov
mov
pop
insb
jle
adc
mov
stos
pop
and
adc
inc
jle
dec
dec
mov
inc
or
mov
sub
stc
mov
mov
add
push
add
jle
pop
roll
mov
mov
dec
add
int
jl
jae
lcall
ret
ljmp
outsb
jb
test
dec
fstpt
dec
add
daa
outsl
mov
test
ljmp
adc
shll
in
negl
cwtl
add
add
loopne
rorb
popa
aad
pop
jle
ja
mov
loopne
sti
ficoms
jl
loop
js
mov
cli
nop
sub
cmp
inc
test
mov
stc
ljmp
jp
push
dec
adc
fstl
push
stos
mov
push
inc
lods
fbld
push
and
mov
ss
cltd
out
ret
cmpsb
lahf
push
addl
or
xchg
scas
cmp
mov
lds
add
add
jno
js
mov
cmp
pop
sbb
cmpl
add
mov
frstor
xor
or
sub
ret
ljmp
cmovp
push
jecxz
or
mov
idivb
mov
adc
aas
and
mov
mov
inc
pop
sbb
cmp
push
mov
test
fcmovnbe
mov
push
out
les
mov
xchg
jl
dec
xchg
pop
push
mov
sbb
into
sti
inc
movsb
sub
mov
adc
aas
loopne
lret
mov
cmp
stc
xchg
add
aaa
dec
pop
int3
jno
mov
add
rorl
and
inc
rcll
and
arpl
pop
stos
sbb
jbe
fidivs
mov
enter
notb
fstp
das
lds
rolb
loope
idivb
push
pop
push
mov
test
pop
fcomps
xor
pop
and
xor
or
clc
loop
outsb
adc
test
sub
pusha
std
hlt
adc
mov
fs
lahf
push
clc
fldt
ljmp
push
adc
cmpsl
cmc
add
xchg
adc
mov
push
mov
push
push
dec
outsb
aas
inc
jb
push
mov
nop
xor
adc
mov
cmp
aam
iret
and
pop
mov
out
jmp
ljmp
iret
and
and
fisubrs
pop
imul
mov
and
pop
movsb
cs
dec
clc
fildl
popf
adc
add
inc
in
mov
test
scas
xchg
and
and
call
mov
aam
xlat
ja
mov
lahf
pop
xchg
lcall
mov
xchg
into
mov
cmpl
fsin
inc
rcr
sti
dec
sbb
mov
add
lea
xchg
ljmp
sbb
xchg
mov
in
mov
sti
int
les
into
loope
pop
cld
pop
sbb
mov
xchg
pop
or
clc
dec
pop
or
arpl
inc
icebp
pushf
mov
or
cmp
insl
es
pop
xor
fistps
mov
cmp
adc
jp
fwait
pop
lahf
mov
sbb
adc
cmovo
cli
jnp
or
movups
pusha
add
push
lret
insl
sub
jl
jo
mov
mov
push
mov
nop
and
incl
enter
xchg
add
dec
pop
js
mov
fidivl
sub
mov
movsl
sub
xchg
pop
dec
and
testl
leave
arpl
add
jp
sub
fwait
sarb
add
unpcklps
fildl
mov
int
loopne
or
daa
jge
mov
fs
pcmpgtw
xor
ljmp
out
sub
mov
outsl
and
jmp
nop
insb
out
xor
mov
jmp
or
aad
into
out
or
in
mov
nop
inc
add
inc
sub
add
mov
cli
or
pop
pop
dec
testl
inc
cmp
mov
repz
insb
repnz
rorb
sub
in
push
or
or
test
cltd
es
or
in
inc
adc
mov
popf
rcll
aam
imul
xor
add
sbb
mov
mov
and
sahf
add
xlat
cmp
push
xchg
dec
mov
sbb
repnz
arpl
jecxz
jle
mov
scas
lcall
jge
ret
pop
js
jne
fadd
out
insl
ds
inc
sub
repnz
adc
sbb
nop
mov
pusha
pop
mov
cmp
ss
enter
inc
iret
inc
mov
inc
pop
mov
cmp
fisttps
dec
test
add
or
jp
rolb
sbb
int
mov
sarl
stos
insl
mov
hlt
jg
or
cltd
addl
out
and
or
sub
xorb
aad
push
jl
push
inc
push
mov
bound
mov
mov
add
leave
sbb
call
fldt
fstpl
jmp
ja
adc
ss
fidivrs
test
mov
add
int
cmp
cmp
test
add
mov
lds
js
add
inc
imul
push
loop
mov
dec
push
cmpb
sti
mov
cwtl
xchg
jle
mov
js
jae
pop
xchg
jle
dec
je
dec
inc
mov
rcrl
enter
imul
outsb
fistpll
dec
pop
into
jmp
orb
mov
and
adc
jmp
fnstsw
imul
mov
icebp
jmp
ss
mov
and
dec
lahf
sahf
pop
mov
pop
rclb
ja
sub
or
rclb
sbb
xor
push
dec
dec
mov
xchg
xor
xchg
xchg
push
mov
stos
insl
mov
dec
daa
xlat
xchg
stos
pop
jmp
sub
inc
jge
mov
clc
popa
das
cmpsl
pop
mov
stos
inc
jb
mov
pop
out
aaa
mov
aam
test
mov
fidivl
icebp
inc
shrb
out
push
push
loop
shlb
gs
lods
pop
adc
enter
frstor
movsl
pop
mov
add
mov
lahf
and
push
js
push
repnz
xor
negl
inc
fcmovu
shlb
adc
scas
dec
call
cli
lods
in
repz
inc
shll
mov
dec
notl
xchg
out
loope
or
fistl
mov
dec
add
cmp
lods
sarb
xor
sub
divb
pushf
push
out
dec
enter
testb
rorl
sbb
mov
jmp
arpl
mov
mov
mov
fbld
ja
int
xor
lock
mov
or
scas
enter
jbe
rorl
imul
in
ljmp
dec
mov
nop
mov
add
dec
or
dec
fildl
call
mov
pop
ljmp
add
test
mov
jecxz,pt
mov
ja
and
dec
scas
inc
shll
ljmp
mov
adc
shlb
test
arpl
imul
cmc
lods
add
call
stos
decl
push
sbb
jno
mov
lea
xor
cmpb
dec
inc
xchg
cmpl
adc
jnp
adc
aas
mov
nop
mov
mov
pop
loop
mov
cld
aam
xor
les
packsswb
int3
imul
fisttpll
es
ljmp
inc
and
xor
shlb
rol
adc
mov
inc
or
dec
outsl
sbb
aad
in
cmp
dec
cmp
and
ret
aas
mov
daa
loopne
daa
testl
les
lods
sarl
pop
lea
push
add
lea
aas
popf
call
mov
mov
std
add
test
mov
inc
inc
sub
daa
ret
je
lods
leave
movsl
test
pop
dec
push
push
pop
xchg
xchg
mov
cmp
add
out
loope
shrb
jl
and
jno
xor
cli
mov
adc
lret
push
lcall
mov
lahf
inc
or
pop
popa
jo
adc
lahf
cmpsb
cld
outsl
mov
loope
mov
dec
mov
ret
gs
sub
dec
mov
dec
add
scas
lock
mov
dec
add
sti
inc
or
arpl
out
jle
or
dec
mov
sub
jle
scas
adc
xchg
sub
sbb
cmp
sarl
in
test
pop
lock
mov
in
mov
aas
adc
sbb
jle
and
mov
fdivl
dec
in
das
inc
gs
and
test
stos
inc
sti
ret
js
dec
sbb
mov
lret
aad
popf
push
les
loopne
mov
mov
pop
imul
xchg
xor
fcomip
cmpsb
mov
ret
mov
xor
cmp
sbb
or
out
jp
jns
adc
jecxz
inc
cmp
aas
sbb
mov
test
jmp
push
roll
inc
mov
scas
dec
xchg
jle
and
pusha
call
xor
pop
stos
pop
mov
in
ss
loopne
daa
aaa
dec
sti
insb
rorl
loope
in
and
adc
es
jno
xor
sbb
jae
outsl
and
lods
xchg
pop
inc
faddl
aas
sub
jp
mov
aas
xchg
add
add
hlt
mov
incl
ret
mov
fdivs
push
frstor
mov
xchg
jg
jbe
mov
mov
mov
sahf
imul
loop
gs
inc
ds
pop
aaa
cli
divb
xchg
aas
pop
adc
lods
icebp
clc
data16
inc
aam
data16
sti
pushf
jle
call
inc
and
mov
fidivrl
jecxz
xchg
int
cs
xchg
mov
std
in
jg
lods
add
cli
flds
cld
fistpl
cs
stc
aam
ret
outsl
adc
dec
pop
jo
fistpll
adc
lcall
adc
jnp
lcall
mov
pushf
dec
stc
jnp
test
stos
loopne
xchg
sub
or
or
sbb
mov
lods
or
andb
xor
mov
pop
xor
inc
or
sbb
sbb
andb
int
push
adc
insl
push
std
sbb
insl
pop
mov
call
xlat
nop
dec
test
ret
mov
sbb
push
nop
xchg
in
push
and
ja
pop
fstps
addr16
and
int
and
fnsave
jae
iret
sub
loop
and
daa
in
lds
sbb
pop
sar
or
scas
popf
sbb
mov
clc
adc
xchg
mov
clc
fisttpl
mov
push
inc
aad
sub
cmp
outsb
test
dec
dec
in
add
sub
and
movsl
outsb
out
sbb
pop
and
sub
mov
repz
or
sbb
mov
push
mov
data16
scas
push
fdivp
mov
mov
cli
cmpsb
pop
cmpsl
pop
mov
push
in
push
in
add
clc
inc
insb
scas
sbb
mov
jmp
or
fsub
sub
out
jo
addb
cwtl
cmc
mov
popa
add
add
ljmp
mov
insl
lds
pop
jg
pop
add
mov
mov
xchg
xchg
pop
sbb
add
idiv
jg
and
sub
mov
add
mov
pushf
pop
adc
fs
xchg
push
fwait
add
and
sub
fst
insl
pop
in
push
cltd
shll
andb
loopne
mov
ljmp
adc
fbstp
outsb
mov
arpl
dec
cmp
lods
xor
fnsave
mov
sub
mov
and
subb
push
out
std
mov
mov
ss
jo
ja
sub
outsl
fisttpll
add
pop
fwait
xor
enter
out
push
jg
test
sbb
jle
push
out
xchg
push
imul
jns
out
clc
xor
add
adc
xchg
mov
les
and
mov
mov
inc
sbbl
sahf
and
std
push
ja
outsl
pop
lock
in
fistpll
cs
sarl
pop
cld
or
or
or
or
add
or
xor
test
into
mov
hlt
ljmp
aas
into
adc
sub
mov
in
call
dec
dec
or
jne
pusha
sbb
cs
or
xor
das
push
int
or
test
xor
mov
mov
repnz
mov
sbb
div
clc
icebp
in
xchg
call
incb
and
inc
cmp
dec
sbb
mov
test
jle
pcmpgtw
in
sbb
push
lcall
pop
mov
jnp
insl
mov
addr16
and
rolb
xchg
fcompl
loop
mov
pop
sub
inc
es
sub
dec
mov
ffreep
dec
lahf
jbe
xor
rcll
negl
jg
in
jg
jns
jo
and
sub
cli
std
das
push
rclb
add
cmpsb
int
dec
cmp
and
fbstp
jg
dec
inc
lods
pop
and
inc
movsb
mov
mov
dec
mov
mov
test
cmp
fistpll
int3
and
in
push
jl
ds
loop
mov
sarl
rclb
jns
xor
xchg
popf
cltd
mov
sub
jg
testb
rolb
ja
in
arpl
jmp
sub
xchg
xor
jbe
test
push
cmp
xchg
call
out
add
cltd
sbb
pop
mov
adc
and
mov
arpl
repnz
inc
ret
pop
pop
and
imul
cmp
adc
sbb
cmpb
xchg
mov
cmpl
outsl
rcl
lcall
iret
add
mov
es
sar
cmp
movsl
xchg
sbb
jg
mov
pop
mov
aam
dec
rcrb
data16
or
mov
lock
aad
mov
fdivrl
repz
ret
addl
pop
cmpsl
loopne
outsb
inc
pop
cmp
roll
sub
inc
dec
cmp
pusha
sti
dec
outsl
mov
jo
insb
or
fisubrl
lock
gs
xchg
and
aad
inc
pop
mov
xchg
add
rcll
outsl
fsub
pop
or
aad
xchg
jecxz
push
shlb
cmpb
cmc
xlat
aaa
or
add
sahf
sbb
push
insl
loopne
je
or
mov
cmp
lahf
mov
pop
cwtl
sub
mov
add
xorb
cltd
icebp
jle
jg
jmp
xchg
stos
add
shll
push
inc
push
cmp
jg
add
incl
out
fsubs
add
cmc
or
push
mov
lahf
add
aas
push
sti
lret
add
fldcw
jle
add
xchg
mov
xor
xor
ret
sub
sbb
push
sub
push
add
mov
dec
out
sti
out
jle
pop
push
xorl
aad
repnz
pushl
inc
fcmovnb
dec
push
add
mov
movsl
imul
jecxz
xor
sbb
pop
and
std
push
jl
xorl
jle
fucomi
icebp
lods
mov
cmc
sbb
scas
hlt
test
fldenv
popa
rcrl
xchg
push
xor
mov
mov
nop
inc
scas
rorb
fisubrl
mov
mov
jbe
pop
cwtl
push
movswl
inc
inc
pop
mov
pop
lea
add
pop
mov
mov
das
cld
popa
popa
and
inc
dec
add
sbb
arpl
or
pop
mov
add
inc
cli
filds
mov
cmp
inc
cmpxchg8b
inc
mov
xchg
outsb
mov
lods
hlt
pop
sub
cmpsb
jecxz
daa
sahf
dec
test
ret
fidivrs
jmp
inc
call
sahf
jb
leave
or
orb
xor
fs
or
ljmp
lods
push
inc
insl
dec
hlt
mov
pop
push
pop
pusha
rol
cmp
sbb
add
pop
adc
outsl
jns
push
sarl
mov
xorl
imul
pop
mov
adc
in
mov
fisubl
in
ret
push
jp
sbbl
mov
frstor
cld
sub
jge
ljmp
xchg
mov
in
adc
movsb
pusha
aad
loop
adc
mov
and
pop
clc
sbb
and
or
insb
mov
add
ret
or
xchg
je
or
mov
mov
leave
cmpsl
xchg
mov
faddp
mov
inc
fldt
cwtl
push
int
lds
icebp
ljmp
inc
lret
aam
mov
pushf
pop
xchg
icebp
fwait
or
dec
jecxz
cs
add
mov
xchg
sub
cmp
xlat
fbld
cmp
xor
rorb
shl
das
pop
rolb
aas
ljmp
cmpsl
inc
mov
sbb
test
int3
push
andb
aam
cwtl
sbb
mov
or
jo
lock
out
flds
pop
lock
pop
fsubrs
or
pop
mov
test
fsubs
push
push
jl
xor
pop
mov
insb
andb
popa
xchg
lods
adc
pop
daa
adc
cld
xchg
leave
mov
and
push
inc
popf
cmp
cmp
and
sahf
adc
add
jle
or
cld
jne
fisttps
test
cmp
pavgb
inc
shlb
push
pop
addr16
aaa
sbb
sub
mov
rcll
jg
pop
jg
scas
add
mov
into
pop
lds
sbb
xor
adc
and
stc
mov
sbb
lea
int3
adc
xor
or
pop
sbbb
jnp
fdivrp
loop
or
fnstsw
rclb
roll
dec
mov
popa
pop
sbb
dec
xchg
ret
push
clc
incl
rcrb
adc
jp
xor
mov
mov
ret
orb
mov
cmpsb
fcomp
inc
std
mov
xchg
dec
aam
add
repz
fstp
adc
in
jl
add
and
aad
and
es
dec
call
iret
inc
fsub
addl
mov
cmp
js
movsl
xchg
scas
frstor
and
jl
push
cmpsb
icebp
and
push
pop
aad
mov
jae
outsl
call
hlt
stos
sub
ljmp
push
sbb
roll
divl
jmp
jp
sub
xchg
mov
insl
mov
cmp
jg
cmpsl
sub
or
pushf
pop
nop
jmp
outsb
das
mov
rcrb
push
inc
ret
inc
cmp
nop
push
pop
push
fcoml
fstl
idivl
cmp
fidivrl
les
fstps
aad
imull
mov
sarl
jg
lcall
outsl
loop
adc
mov
lock
inc
stos
jbe
dec
jecxz
xchg
push
shll
ficoms
pop
movsl
add
xor
fadd
cs
jg
std
les
inc
mov
xor
ffreep
inc
or
jbe
xchg
mov
xlat
inc
enter
adc
mov
aam
inc
or
mov
mov
jle
lea
xchg
adc
mov
pop
sbb
test
sub
jl
and
jne
mov
jae
jge
divb
scas
roll
fcoms
test
and
out
cmp
cli
mov
mov
daa
aas
ret
jp
icebp
out
cmpsl
mov
and
iret
xchg
arpl
sub
add
hlt
rcll
push
ljmp
sbb
call
inc
lahf
xchg
lahf
cs
movsl
loopne
loop
sbb
lods
rcrb
jmp
push
out
addl
lahf
mov
jl
push
mov
ds
mov
ss
aaa
pusha
aaa
cmp
mov
dec
jecxz
sti
add
fcmovnb
inc
mov
jns
mov
ds
xor
es
push
push
mov
xor
pop
inc
add
imul
in
xchg
push
inc
in
jo
call
std
lds
bound
les
pop
cmp
lods
sbb
fsubr
sbb
nop
ljmp
outsb
push
xchg
mov
enter
dec
std
leave
push
ja
cmpsl
adc
pop
call
push
sahf
push
mov
out
std
or
frstor
or
scas
or
orb
jl
iret
add
sbb
fxch
in
or
pop
and
mov
andb
xchg
mov
jno
lea
add
mov
int
dec
and
xor
cmpsl
xchg
pusha
in
fcmovb
push
mov
or
cmp
mov
inc
in
or
dec
cmp
mov
outsl
ret
inc
popf
movsb
pop
movsb
jb
bound
cmp
insl
cwtl
and
and
jae
inc
movsl
pop
lret
movsl
lahf
fcmovnu
adcl
cs
icebp
jl
xchg
dec
inc
fsubrs
mov
fidivs
cs
jo
add
xchg
popa
pop
fs
pop
mov
mov
mov
xchg
cli
sbb
ret
xchg
jnp
cmpl
scas
or
sbb
ficoml
mov
hlt
mov
loop
xchg
push
insl
push
push
mov
sbb
gs
and
sbb
scas
mov
leave
je
sahf
mov
insb
jge
aaa
mov
out
xor
jg
enter
mov
sub
rcrl
sbb
pusha
mov
scas
subl
add
adc
inc
pop
popf
or
aam
cmpsb
nop
xchg
fbstp
mov
addr16
aaa
lahf
cmp
sarl
cwtl
std
loopne
dec
cmp
pop
push
in
jp
dec
in
mov
popa
pop
sbb
adc
adc
ret
ret
and
xor
xchg
inc
pop
adc
jbe
cli
sub
mov
adc
shll
jae
cmp
pop
fildl
jl
push
jno
push
or
and
or
fldt
pop
xlat
xchg
hlt
sti
sub
sub
outsl
sbb
pop
pusha
inc
sub
mov
inc
add
outsb
dec
pushf
ja
mov
les
bound
dec
hlt
fninit
cmp
mov
sbb
pop
mov
loop
dec
or
in
test
mov
inc
pop
jp
pop
xor
fimull
xchg
cs
bound
stos
sbb
nop
add
stos
mov
fwait
ret
pop
add
pusha
mov
mov
insb
pop
ror
and
sub
test
push
lock
outsb
mov
test
mov
xchg
dec
cmp
jmp
enter
sahf
out
mov
mov
lock
daa
outsb
jno
dec
adc
outsb
or
test
xor
lods
xchg
cmp
sub
clc
fs
movsb
jae
cmc
mov
andb
imul
cmp
in
call
mov
cmp
jae
ds
mov
cld
lods
push
and
rcrb
lods
pcmpeqd
sbb
push
pop
rcll
sub
sbb
rcrb
mov
adc
jno
cmp
fwait
mov
or
mov
cli
outsl
push
inc
in
sbb
or
cmpb
mov
clc
mov
ror
mov
loope
cmpsb
daa
lcall
test
imul
repz
xchg
clc
push
sub
subb
sub
cld
pop
adc
push
jmp
dec
in
jp
xchg
push
jg
int3
pop
and
adc
mov
cmpsl
divb
add
pop
mov
adc
mov
or
add
dec
sbb
mov
sarl
push
lods
xchg
mov
push
cld
xchg
jb,pt
and
insl
sbb
call
or
or
repnz
enter
orb
xchg
push
push
in
mov
sub
in
fadds
sub
push
mov
jl
cltd
adc
mov
xchg
mov
outsb
fwait
sbbb
pop
jp
mov
stc
lock
fiadds
fwait
test
mov
mov
mov
aad
or
cmp
cmp
xchg
sbb
jle
cmp
aad
inc
iret
jns
or
inc
push
sub
aaa
push
and
xor
outsl
sub
stos
or
mov
lret
push
aam
xlat
xor
sub
or
dec
adc
pop
testl
mov
mov
mov
cmp
dec
flds
mov
mov
mov
jecxz
push
mov
inc
call
test
xlat
or
dec
ret
inc
pop
jbe
icebp
mov
pop
cli
sbb
mov
sbb
outsl
fistpll
xor
mov
inc
sbb
test
and
dec
cld
sahf
mov
adc
mov
or
pop
adc
push
dec
clc
mov
add
dec
repz
std
mov
shr
jmp
xor
cwtl
push
ljmp
in
repz
in
sbb
dec
in
xor
mov
push
test
loope
pop
or
sub
icebp
jno
aad
push
fsubrp
dec
add
push
add
lahf
ss
adc
jo
add
mov
mov
xchg
jmp
lods
clc
xchg
aas
dec
bnd
mov
xchg
pusha
xchg
mov
mov
sbb
sti
mov
mov
ja
jg
jge
xor
jmp
out
and
push
icebp
fs
shrl
insl
mov
pop
ds
hlt
lcall
in
mov
push
adc
lods
mulb
jb
iret
ja
addr16
lods
pop
mov
out
inc
sbb
inc
mov
cmpb
mov
sbb
das
lock
mov
add
sbb
adc
loopne
or
bound
adc
out
je,pn
nop
sbb
inc
push
xchg
mov
test
lock
fnstsw
pusha
mov
inc
push
jle
roll
stc
push
cmp
lods
pop
jbe
vcvtsd2si
cmp
push
sub
std
adc
cmpsb
clc
out
aaa
mov
icebp
insb
xor
fsts
fdivs
adc
xor
jno
sbb
fiadds
sbb
add
sbb
rorb
xchg
inc
loop
loop
pop
sahf
test
or
xchg
icebp
sub
mov
jno
test
and
lods
mov
cmp
add
mov
sbb
mov
inc
add
jb
cmp
sub
dec
and
cmp
pop
fs
jg
push
lea
xor
xor
lret
or
mov
fs
cmp
outsl
sub
mov
mov
pusha
cmpsb
in
out
xchg
cmpsb
cmp
ret
daa
mov
pop
dec
mov
sarb
loopne
cld
call
les
mov
pusha
push
jp
int
dec
outsb
mov
cli
clc
push
cmp
ss
add
mov
cmp
fnstcw
add
or
sbb
orb
sbb
mov
mov
xchg
lods
cmpsl
in
fld
inc
lods
jge
jne
movsb
loope
inc
mul
cwtl
pmullw
ljmp
mov
addl
loope
and
das
xchg
mov
dec
push
sub
fnstcw
cmp
stos
sub
mov
mov
mov
jge
sub
outsl
push
prefetch
mov
movsb
cmpsb
leave
cmp
sbb
push
fadd
cmc
data16
insl
cmp
pop
xor
mov
cmpsb
outsb
mov
cli
mov
pop
xor
sahf
clc
cmovle
mov
fs
mov
sbb
bound
cs
xchg
jg
jg
jbe
fcoml
dec
push
add
xor
inc
clc
mov
inc
sub
or
movsb
or
push
cmp
or
or
popa
jb
dec
in
jb
add
add
fisubrl
adc
bound
std
imul
jo
inc
cmp
subl
inc
das
cld
jo
mov
dec
adc
call
inc
jnp
mov
and
mov
inc
xor
add
jp
ret
ss
and
arpl
dec
lods
inc
sahf
ljmp
orb
popa
popf
jp
lcall
rorl
rolb
push
jecxz
pop
out
loop
jne
add
add
lcall
in
xor
lods
popf
aaa
pop
add
cmp
cwtl
mov
ret
xchg
repz
and
fisubrl
lock
fisttps
mov
lds
pop
js
lret
iret
in
shl
fildll
xor
das
mov
mov
jle
mov
or
mov
js
std
mov
cld
mov
jo
insl
es
add
xor
scas
loop
push
cld
pop
fistl
xchg
insl
pop
mov
mov
jl
and
jmp
push
jns
or
mov
ss
enter
sbbb
mov
subb
mov
les
cld
mov
sub
cmp
pop
inc
lods
clc
test
or
and
aam
adc
pop
or
call
jmp
xchg
or
mov
pop
lcall
mov
push
out
test
les
loopne
icebp
idiv
ds
mov
mov
adc
sbb
outsl
fisubrs
xorl
lock
rcrb
cld
mov
sub
sbb
test
mov
or
push
and
ds
push
std
or
pop
xchg
cmp
xchg
adc
sub
mov
inc
jo
or
xor
loope
xor
fsubrp
inc
or
mov
call
in
sub
clc
in
add
push
lea
stc
fs
jle
add
inc
fwait
cmp
cli
fistpl
in
iret
out
adc
aaa
cwtl
ss
dec
fistps
out
fldt
or
pop
sbb
dec
pop
adcb
lahf
mov
jmp
adc
pop
add
jp
cs
jge
mov
jg
adc
leave
pop
iret
lea
mov
dec
out
rclb
adc
sub
jle
loopne
push
les
jno
inc
adc
push
out
mov
push
call
pop
mov
adc
gs
add
pop
jl
dec
inc
js
jno
es
stos
mov
in
jmp
or
add
jg
ret
jne
and
out
ljmp
les
fnstcw
stos
mov
cmp
cmpsb
mov
ss
sub
fildll
pushl
int
jmp
adc
and
add
add
insb
or
dec
adc
cwtl
adc
into
test
inc
inc
in
das
pop
clc
push
dec
cmp
cmpsl
pop
out
roll
fsub
lcall
push
xor
scas
leave
pop
add
cmp
lods
ds
loopne
inc
add
pop
or
shll
hlt
aaa
aam
decb
jno
test
shrl
inc
adc
xchg
lock
lret
or
mov
jmp
and
inc
cltd
or
inc
rorl
cmpsb
in
cld
sbb
je
adc
sbb
fistl
es
loopne
fildll
outsb
or
loopne
adc
adc
int
dec
outsl
sarb
sahf
push
push
add
pusha
jecxz
out
and
lret
stc
ds
inc
jecxz
sub
leave
jle
cmp
cld
in
inc
sub
loopne
fnstcw
or
std
mov
out
hlt
push
cwtl
cmp
lock
cs
add
push
adc
std
repnz
jb
fbld
std
or
cmc
or
ret
dec
mov
add
xor
jl
xchg
fcmovnb
test
xor
dec
shl
mov
add
setbe
fistps
pop
push
or
imul
pop
sub
mov
add
jge
pop
fistl
push
sbb
jl
push
or
mov
cmc
jecxz
adcb
jge
pop
mov
add
xchg
adc
out
inc
ljmp
cltd
xchg
andb
push
push
push
stc
sbb
hlt
ljmp
test
add
xchg
out
pop
and
jecxz
cmp
jbe
push
aam
fidivrs
cwtl
and
lret
xchg
ror
mov
and
add
mov
mov
stos
sub
and
inc
jge
xor
xchg
xchg
movsb
mov
into
and
ja
sbb
movsb
idivl
stos
cmp
insl
rol
iret
std
pop
xor
inc
cltd
ficoml
and
hlt
jne
sbb
ficoms
add
inc
pop
xor
insb
les
or
aas
inc
mov
jg
sbb
pop
inc
sub
das
push
outsl
xor
add
lock
shrl
cmovb
sbb
jns
loop
lods
stc
pop
cmc
dec
loopne
shrb
notb
pop
rolb
jo
int
fstpt
or
cltd
dec
push
jmp
outsl
insl
pop
lahf
pop
adc
add
sti
cmpsl
pop
test
pop
inc
inc
jbe
daa
lret
add
mov
test
xchg
and
std
repz
bound
jnp
dec
ret
lahf
push
and
pop
mov
cmpsl
sbb
cli
xchg
add
xchg
and
lods
mov
mov
sahf
pop
loop
lock
add
mov
aas
pop
imull
adc
sbbb
jl
pusha
inc
ljmp
lock
adc
mov
lret
test
incl
addb
insl
test
inc
sbb
mov
mov
inc
push
scas
insl
adc
das
dec
out
scas
pop
jg
or
sbb
jne
cmpsb
mov
sbb
mov
sahf
cmp
movaps
mov
or
mov
dec
loope
outsl
loop
icebp
cmp
neg
bound
adc
mov
loope
mov
dec
not
or
add
xor
repnz
mov
mulb
add
dec
roll
or
popa
mov
cmpsl
inc
adc
pop
jmp
lock
xchg
scas
pop
es
aam
icebp
pop
push
fistpll
add
call
ftst
test
clc
sbb
and
in
xlat
icebp
inc
push
jo
clc
fists
jp
xor
inc
movsl
pop
repz
lods
rorb
popf
in
mov
ss
jb
jne
insb
xor
mov
xchg
mov
cwtl
mov
push
clc
pop
daa
xchg
jmp
pop
xchg
lret
jecxz
push
mov
test
fwait
sub
mov
mov
push
pushf
pop
push
ret
js
push
push
lcall
cld
into
imul
icebp
incb
out
sbb
jecxz
mov
aad
dec
adc
push
jp
xchg
mov
xchg
shll
bound
inc
mov
xchg
jmp
and
inc
cmc
outsl
std
shr
and
jl
cld
add
or
cld
and
ret
push
pop
mull
rorl
ljmp
ret
mov
jb
mov
dec
add
dec
call
into
or
fisubl
in
fwait
and
das
xor
sti
sbbb
adcb
jb
cmp
or
bound
pop
pop
leave
movsl
or
fwait
cwtl
test
out
test
clc
jmp
dec
loope
jg
or
add
pop
pushf
call
and
jae
sti
loop
lods
dec
mov
jmp
fisubrs
inc
jecxz
or
incl
mov
sbb
mov
mov
cs
popa
and
into
pop
xchg
scas
push
add
mov
lahf
pusha
push
in
inc
std
clc
shl
mov
rorl
adc
and
sbb
call
adc
lcall
imul
sti
lods
jb
pop
pop
push
mov
sub
lahf
mov
mov
repz
jno
fcoms
cmc
xchg
xchg
cmp
test
inc
movsl
mov
scas
lds
push
dec
adc
xor
push
mov
fcoml
ss
mov
cmp
test
push
repz
fwait
xor
ljmp
clc
ffree
ret
add
mov
lods
add
or
and
push
dec
roll
and
negb
lea
sub
pop
jae
rcrl
aaa
aad
data16
xor
xchg
imul
mov
mov
jmp
cmpsl
pop
add
cmp
pop
shrb
js
xor
cmp
mov
pop
push
clc
push
adc
add
repnz
mov
les
sahf
enter
or
mov
fisttpl
scas
aaa
insl
cmp
ret
push
dec
lea
mov
lds
insb
lea
adc
mov
sub
cmp
push
ljmp
mov
out
mov
dec
fs
mov
dec
cmpsb
pop
pop
dec
lret
xchg
jmp
jle
add
insl
in
inc
loope
jo
sbb
sub
push
mov
ds
pop
out
rcrl
adc
test
and
mov
dec
mov
loope
jge
test
mov
jnp
lds
pop
inc
mov
jmp
fists
or
pop
and
mov
clc
dec
stos
pop
call
push
clc
pop
clc
pop
inc
adcb
or
lcall
outsl
aam
pop
xor
sub
sbb
pop
stos
xor
jo
incl
and
mov
or
adc
pop
mov
mov
dec
std
ja
aaa
jmp
jge
es
rclb
mov
mulb
call
add
sbb
pop
mov
mov
lcall
xchg
and
pop
add
add
aam
dec
mov
das
adc
in
push
jno
sub
aas
xor
fwait
mov
testb
xlat
test
pop
in
out
clc
mov
in
xchg
adc
xchg
lods
mov
lock
pop
cli
cltd
rcrb
lods
adc
js
sbb
je
in
loop
lds
mov
push
adc
xchg
std
insl
adc
fs
cmp
mov
mulb
hlt
jmp
sbb
push
and
pop
mov
inc
add
or
lretw
or
scas
xchg
adc
or
fsqrt
pop
push
or
mov
xchg
aad
das
aam
and
out
sti
popf
jle
lahf
inc
mov
mov
inc
shlb
push
nopl
or
outsl
lock
inc
fs
sbb
test
inc
sbb
cli
jbe
mov
cmp
adc
aad
insb
mov
or
mov
pop
lods
in
inc
jecxz
sbbl
test
inc
pop
add
rclb
roll
add
xor
mov
cmp
push
mov
jmp
unpcklps
push
xor
stos
pushf
sarb
jl
jg
fs
jecxz
ja
pop
inc
jns
jmp
test
mov
mov
iret
and
or
xchg
je
mov
jmp
push
scas
stos
mov
loopne
dec
ds
ret
js
adc
sub
mov
sbb
inc
mov
fucomip
ds
outsl
inc
fistl
out
jl
idivl
inc
pop
xchg
clc
or
push
sbb
sub
mov
mov
pop
pop
lock
hlt
sbb
cwtl
or
sub
cmp
fstl
rcr
mov
outsl
cmp
xor
jnp
cmp
inc
pop
xchg
stc
in
jg
jbe
xlat
outsb
pop
cmp
dec
xor
call
sbb
add
pusha
adc
and
data16
test
ljmp
or
int
mov
push
pushf
xlat
jl
out
sub
js
test
lods
mov
mov
popa
ret
mov
nop
mov
shlb
add
add
test
xchg
push
xchg
test
push
xchg
or
and
fsubp
cmp
enter
mov
sbb
push
mov
decl
mov
or
jno
setp
adc
pop
shlb
and
and
cmc
cmpsl
xor
lock
pop
in
cs
mov
mov
sub
pop
aaa
mov
inc
xchg
or
movb
mov
test
out
shll
xor
stos
inc
and
daa
pop
or
nop
xor
jg
movsl
sbb
inc
inc
sub
std
lret
addb
stos
idivb
and
jmp
test
ret
jecxz
adc
cwtl
call
mov
mov
fistpll
jecxz
pop
insl
lods
xlat
adc
push
add
xor
dec
dec
adc
leave
or
push
out
je
jecxz
mov
mov
pop
xchg
sbbl
add
ficoms
das
adc
subb
dec
sbb
ffreep
mov
inc
jp
adc
mov
fisttpll
push
xchg
jne
dec
dec
inc
mov
int
das
mov
les
repz
pop
mov
shr
leave
sub
loopne
dec
sub
gs
inc
mov
mov
in
adc
mov
xor
and
mov
mov
gs
jne
mov
pop
outsl
xchg
daa
jns
jbe
mov
add
in
movsl
xchg
std
mov
shrl
push
enter
mov
and
xor
cmp
clc
sbb
int3
loop
arpl
shrl
add
cld
call
push
jae
or
in
mov
cltd
mov
aaa
adc
adcb
mov
mov
ja
dec
inc
leave
jge
ret
mov
inc
mov
adc
das
rclb
scas
cmpsb
int
push
push
pop
jg
incl
addr16
pop
jb
rcl
ds
ss
mov
cld
not
test
fidivrl
fwait
push
rcll
add
add
das
adc
xchg
pop
adc
std
out
sbb
or
subl
jb
push
leave
rcr
pusha
scas
push
lock
fcmovnb
rcll
ss
dec
loopne
adc
into
xor
dec
pop
loop
jle
test
inc
push
inc
dec
rorl
es
dec
mov
call
cmp
mov
jae
sar
jb
jg
push
cmp
sti
inc
dec
scas
sbb
pop
cld
jle
hlt
mov
push
mov
loop
je
decb
dec
aam
mov
or
mov
cwtl
jnp
negl
rol
jg
cmp
push
push
push
fscale
mov
nop
test
fcom
sub
push
dec
movsl
or
jmp
or
loopne
movsb
test
ljmp
jle
ret
out
cwtl
cli
data16
lds
daa
fucompp
rclb
cmp
ret
incl
fistl
dec
and
add
and
sbb
ja
add
mov
xor
sub
in
cmp
jg
movsl
jg
mov
insb
adc
mov
or
jmp
fisubl
inc
mov
or
push
sarl
pop
pop
add
ret
fwait
cli
pop
jno
adc
and
xorl
sbb
ljmp
mov
loopne
jmp
pop
je
mov
inc
nop
sub
shl
dec
dec
xor
mov
pop
mov
push
mov
pop
ja
mov
ret
xchg
mov
test
int
fidivrs
fwait
mov
mov
out
and
xchg
xchg
gs
loop
stos
jg
fbstp
mov
adc
cs
sub
sbbl
pop
dec
inc
inc
push
out
ljmp
outsl
shr
push
lahf
cmpsl
mov
xchg
mov
pusha
inc
inc
jmp
mov
mov
loope
cltd
sub
jg
xchg
adc
fists
sub
lret
lods
and
add
rcll
push
int
pop
and
mov
add
sbb
sub
inc
add
jbe
adc
xor
shlb
mov
je
cmp
inc
xchg
jbe
mov
jl
imul
ja
or
cmp
push
inc
sbb
inc
sbb
dec
add
jmp
ret
je
fcomip
or
outsb
dec
sub
test
sti
pusha
jbe
pop
sub
cmpsb
pop
je
pop
sub
sub
inc
or
pop
xor
inc
push
gs
push
call
mov
sub
adc
mov
jae
and
push
loop
outsb
sub
xor
orl
scas
mov
jmp
or
dec
mov
cld
movsl
push
and
insb
lret
mov
fsubrs
enter
aam
mov
cltd
lock
pop
aas
xor
lcall
sbb
jnp
xor
push
xorl
sbb
jo
movsb
mov
cmpsb
insl
mov
mov
das
xor
lea
in
mov
inc
pop
lea
icebp
sarb
mov
fdivrp
mov
jp
inc
enter
and
in
test
pop
mov
add
pop
iret
add
hlt
divb
dec
nop
add
sahf
cmp
fistpll
je
lahf
and
test
pop
ret
aad
jae
add
test
jp
lea
push
inc
test
push
ds
pop
mov
adc
inc
addr16
jo
daa
mov
mov
ds
sbb
stos
out
out
jecxz
imul
xchg
xor
or
push
or
inc
mov
push
inc
fisubrl
or
sbb
mov
mov
inc
pushf
pop
sub
adc
enter
pop
lcall
mov
or
push
jne
add
jo
mov
out
aas
push
push
and
out
jecxz
and
jbe
xor
aad
xchg
fdivrl
jae
cwtl
mov
and
or
pop
cmpl
pop
inc
gs
std
dec
outsl
mov
out
and
cmpsl
shrl
mov
pop
pop
mov
xor
daa
repz
mov
popa
out
pop
ss
adcl
icebp
data16
fsts
inc
xor
sbb
mov
ljmp
add
out
cs
fs
xorb
lods
dec
jne
xor
sbb
xor
in
faddp
aaa
mov
pop
mov
pop
scas
adc
mov
popa
in
jp
sub
lret
lcall
dec
sub
jno
adc
lahf
mov
xorb
pop
cwtl
push
xor
inc
or
mov
addb
or
push
fildll
push
jno
dec
std
xchg
push
fdivrl
pop
dec
scas
cmp
lods
test
ds
cmpl
lret
mov
mov
pop
or
or
xchg
das
in
mov
mov
and
repz
test
cmp
outsl
out
and
in
cs
push
cmpsb
leave
xchg
push
xor
mov
cmp
or
or
nopl
cmp
xchg
lods
sbb
fsubrs
test
hlt
add
shll
movsl
mov
movsl
je
mov
je
in
mov
out
stos
lcall
mov
int3
insl
push
or
add
clc
mov
repnz
pop
dec
add
or
push
add
loope
dec
imul
data16
or
imul
idivb
cs
mov
push
mov
lea
rorb
jne
call
jno
inc
scas
loope
or
lods
mov
xchg
pop
mov
jle
mov
pop
cmp
in
sahf
dec
rclb
mov
mov
sbb
call
add
mul
mov
js
xchg
ret
rcr
adc
push
mov
pop
dec
bound
or
jge
sbb
imul
outsb
mov
push
icebp
cmc
cwtl
jle
lea
push
xchg
lds
fadds
nop
fsts
jp
xrstors
add
and
stos
cs
arpl
and
popa
movsb
cmp
inc
rcrb
jno
in
sub
jl
fcomip
shrb
adc
jae
push
les
sub
sbb
sarl
insb
sub
pushl
mov
add
push
jmp
ffreep
xor
rcrl
lock
call
sub
bound
push
das
pop
call
repz
mov
mov
out
push
push
xor
mov
fcoms
lock
inc
insl
sub
cmc
lods
jl
lcall
or
sahf
add
lods
xor
sub
in
mov
cmpsb
pop
decl
ror
or
mov
and
sarb
test
hlt
push
loope
std
dec
cmpsl
dec
jg
jmp
xchg
pop
nop
call
mov
mov
adc
mov
cmp
or
jle
xchg
jle
test
sub
imul
xchg
sbb
and
pop
push
xchg
pop
ret
xorl
fisubrs
pop
mov
loop
aad
and
add
gs
or
dec
xor
mov
ficomps
fsubl
cmp
fwait
mov
push
arpl
notl
cmpsb
inc
and
js
loopne
lcall
rcrb
aaa
xor
mov
out
sbb
sbb
or
and
sbb
inc
mov
cwtl
out
cmp
imul
push
mov
stos
enter
test
xorl
jg
jle
icebp
scas
ja
jmp
das
and
add
or
mov
jecxz
fcomi
in
mov
sub
pop
stos
out
sub
ss
or
test
mov
imul
mov
dec
jecxz
jp
inc
in
lret
insl
loope
dec
loope
icebp
inc
sbb
sbb
cld
fildll
call
in
test
call
aad
test
cmp
lahf
push
std
xor
cli
mov
pop
movsb
ret
jo
inc
sub
cs
and
and
mov
stos
lds
sub
sbb
adc
ljmp
jle
imul
outsb
mov
orl
or
test
fisubrs
sbb
iret
fbld
fildl
out
xor
loop
sbb
mov
repnz
fnstsw
sarb
pop
xchg
dec
mov
stos
dec
aaa
cmp
lea
jnp
add
xchg
fwait
mov
imul
stc
cmp
std
adc
decb
js
dec
aam
cmp
lret
popf
movsb
stos
xchg
insb
sbb
mov
nop
hlt
sub
add
mov
mov
or
pop
mov
push
jl
and
jnp
mov
xchg
rcrl
pop
jmp
nop
xor
xchg
lock
xchg
jnp
cmp
lock
fwait
sbbl
fldt
mov
inc
dec
xor
daa
dec
and
push
pop
jb
and
xor
or
movaps
enter
push
and
mov
out
add
jo
add
jno
movsl
sub
icebp
jg
stos
mov
btrl
mov
pop
xor
pop
dec
hlt
inc
inc
and
and
ds
push
xchg
test
mov
push
cltd
addr16
iret
sbb
lods
inc
xchg
jne
sti
mov
aas
ljmp
adc
call
sbb
iret
in
pop
jmp
je
das
ss
sub
adc
xchg
and
adc
jmp
fwait
sbbb
aam
sti
outsl
mov
dec
or
lds
movsl
das
repz
sub
gs
aas
mov
inc
incb
mov
lea
fwait
mov
inc
mov
sub
cld
xchg
dec
adc
movsl
xor
ljmp
enter
popa
mov
jecxz
orb
lcall
mov
lret
xchg
mov
adc
adc
je
testl
mov
push
ljmp
in
push
pop
mov
das
mov
out
scas
cld
inc
fnsave
add
mov
je
or
and
aam
mov
dec
and
pop
mov
cmp
pop
es
mov
insl
call
mov
adc
or
inc
ret
aam
sti
mov
jecxz
inc
ja
and
cmp
scas
sub
ljmp
bound
iret
enter
aam
sub
fsubr
call
hlt
loopne
call
es
pusha
pop
mov
movsl
adc
loope
sti
fidivrs
push
js
enter
cmc
push
mov
pop
mov
loopne
sub
sbb
sbb
test
les
incb
fucom
push
push
incb
sub
mov
insl
cli
and
adc
data16
out
clc
rcrb
pop
pop
add
int
cli
jnp
push
loopne
les
inc
aas
cmp
mov
fildll
rcll
add
xor
stc
lahf
out
ret
xchg
xchg
pop
dec
pop
enter
outsl
jnp
mov
xchg
sub
inc
inc
sbb
ss
inc
push
add
mov
mov
dec
pop
divb
pusha
and
push
lcall
lds
sbb
iret
ja
mov
sub
scas
xchg
mov
sub
pop
mov
and
aaa
loop
test
pop
push
mov
mov
loope
mov
cmp
xor
imul
inc
and
lods
fldcw
inc
pop
call
loopne
xor
das
lds
sub
sub
jb
sarb
mov
jl
aaa
xlat
sub
test
loop
pusha
inc
and
xor
shr
aaa
ficoms
push
and
cmp
ret
jp
shl
mov
mov
or
xchg
sub
cmp
scas
in
inc
mov
je
xchg
mov
and
sbb
jo
lcall
bound
and
nop
and
dec
cs
sahf
adc
and
lret
mov
stc
sbb
int
es
scas
pop
mov
mov
push
iret
adc
cs
rol
popa
push
xchg
add
sbb
stc
or
xchg
je
push
jecxz
xorb
and
ds
xor
leave
and
push
jb
fdivl
fcmovnu
jle
std
sub
mov
mov
roll
int
push
pop
pop
hlt
loopne
adc
mov
inc
jg
jl
xor
outsl
jno
inc
sbb
in
xor
jl
call
add
xchg
int
sbb
sbb
repz
popf
xor
fsubl
lcall
imul
nop
xchg
fcomp
ficomps
cmp
jmp
out
ja
aaa
cld
mov
add
sub
push
fdivrs
loope
scas
icebp
cwtl
pop
mov
pop
fstpt
aaa
mov
popa
adc
ja
ficompl
ret
sbb
xchg
push
pop
mov
xlat
clc
xchg
add
clc
fistpl
add
fs
testb
cmp
or
jns
adc
jmp
adc
ljmp
inc
push
or
jp
test
dec
jae
mov
pop
dec
outsl
pop
adc
pop
inc
or
lea
adc
mov
repnz
test
or
clc
mov
imul
adc
jle
xchg
pusha
xor
loope
cwtl
loopne
ret
mov
gs
inc
ficompl
xchg
js
sbb
les
or
aad
mov
fucom
adc
xor
ja
or
sub
or
out
cli
push
negb
push
test
inc
imul
pop
and
loop
add
das
xor
pop
inc
movsb
aaa
mov
std
mov
mov
sbb
mov
hlt
push
out
test
mov
ficomps
ret
ficompl
mov
sbb
jne
mov
or
adc
popf
cmp
xor
push
cmp
mov
mov
imul
fwait
cs
cmp
lahf
cli
lock
in
cltd
mov
popf
fimuls
adc
adc
rclb
fbstp
mov
sub
int3
xor
sub
lcall
call
cmpsb
mov
hlt
dec
leave
mov
cmpb
push
pop
in
push
add
mov
cmpsb
add
adc
pop
or
jne
xchg
dec
dec
jg
jle
dec
and
repz
lock
pop
mov
mov
pop
pop
pop
ljmp
shlb
xchg
outsl
in
repz
cld
push
ret
outsl
repz
lret
sbb
aaa
adc
or
popa
xor
jmp
arpl
dec
jmp
ss
out
cmpsb
cli
sbb
jno
sbb
push
inc
nop
or
jg
out
fcmovnb
sub
dec
xchg
lahf
lock
xlat
pop
pop
mov
sub
xlat
pop
dec
xchg
mov
pop
pop
push
mov
and
jmp
sub
shrb
dec
lds
cmp
mov
pop
cmp
lds
into
movsl
sbb
adc
push
xchg
mov
pop
add
aaa
mov
xor
lea
mov
sahf
int
inc
in
or
cmpsb
outsb
pop
adc
inc
lods
xor
mov
out
in
and
pop
jbe
je
inc
lea
dec
xor
ds
dec
dec
movb
jnp
inc
mov
mov
loop
mov
fs
inc
lods
fists
push
je
mov
ret
xorl
mov
push
sub
ret
std
scas
and
sub
jmp
and
decb
and
mov
out
lea
cld
adc
mov
shr
aad
xchg
push
mov
dec
and
push
out
fdivr
ljmp
adc
mov
mov
jno
icebp
pushf
scas
popf
cmp
in
insb
or
sub
insl
cld
sahf
call
mov
cltd
cltd
jmp
andl
ror
sbb
decb
and
inc
aaa
dec
jge
sub
pop
dec
cld
sbb
decl
pop
and
outsb
cmp
push
push
idivb
bound
jg
sub
lds
ja
mov
push
sub
test
dec
and
jbe
pop
sarl
roll
xorb
lds
fs
rolb
xor
das
sbb
and
je
je
mov
dec
push
int3
orl
or
xor
ret
jle
popa
xor
dec
mov
adc
jle
mov
test
mov
loopne
inc
repnz
xlat
dec
mov
jle
outsb
cld
push
push
ret
mov
test
cld
scas
sub
loope
mov
rolb
in
mov
xchg
jg
rolb
push
adc
es
or
mov
inc
pop
subl
ss
mov
cmp
push
cmp
pop
adc
ljmp
jno
xchg
or
push
in
adc
pop
jne
cmpsb
sar
in
andb
xchg
lds
sbb
pop
shrb
daa
repz
mov
arpl
aam
sahf
imul
or
mov
fisubrl
es
or
cwtl
aam
push
sbb
pop
pop
adc
mov
push
push
or
movsl
pop
aaa
pop
dec
push
daa
je
or
test
xchg
sbb
pop
inc
xor
mov
cltd
icebp
cmp
test
notb
clc
and
lods
cld
out
jnp
popf
data16
stos
negb
out
jnp
fsubl
cmpsb
push
xchg
inc
sbb
stos
pop
dec
in
add
jg
push
out
data16
cmpsl
test
mov
inc
inc
xor
or
mov
les
add
jg
aad
pop
lds
push
in
mov
mov
cmpsb
xorl
inc
mov
jmp
add
dec
pop
sub
ret
push
lods
pop
cmpl
sbb
sub
mov
push
adc
loopne
decb
push
fistl
shll
dec
or
stos
jne
ret
or
push
xor
push
fdivr
orb
es
pop
std
push
xor
pop
lcall
je
mov
mov
push
decl
and
xchg
inc
or
and
iret
in
mov
inc
test
stos
pop
jae
bound
push
push
pop
mov
adc
das
std
sbbl
test
inc
inc
xchg
test
cmp
outsb
aam
cmp
xor
sbb
pop
stc
das
sbb
ja
jns
or
hlt
in
dec
lods
filds
add
repz
loopne
stos
and
sbb
and
lea
inc
xor
cmpsl
adc
cli
in
pop
push
or
fstpt
out
cld
lcall
pop
test
or
pop
sub
add
xlat
daa
or
jmp
mov
push
icebp
ja
mov
cmp
outsl
sbb
mov
push
add
je
cmp
or
lods
ljmp
inc
pushf
push
in
aad
js
or
icebp
fidivrs
in
stos
scas
jns
loopne
jl
in
xor
ret
push
fstps
clc
lea
into
mov
icebp
inc
adc
sbb
mov
icebp
ja
mov
xchg
pushf
loope
push
popa
jl
loopne
ret
fsubl
int
jae
rclb
and
scas
sbb
mov
clc
pop
test
cmpsl
pop
test
out
add
ja
push
xchg
sbb
cltd
and
shll
sbb
pop
xor
loopne
lea
lea
add
mov
lds
jo
pop
cld
mov
dec
cmp
mov
movsl
lret
xchg
neg
push
sarl
fldenv
mov
mov
js
lret
ljmp
adc
dec
test
orl
mov
scas
pop
rorl
sub
push
jg
outsl
pop
addl
adc
inc
fnstenv
test
cltd
popa
pushf
aad
add
pushl
add
sbb
adc
outsl
mov
in
stos
xlat
dec
rol
mov
daa
xorl
xlat
push
cmp
xor
jb
lods
outsb
inc
mov
je
testb
rorb
roll
xchg
mov
cmp
pop
lea
fildl
inc
outsl
cmpsb
into
ss
movsl
fildll
adc
pop
icebp
shrl
mov
arpl
aaa
loop
repz
mov
dec
jge
sub
out
adc
fs
test
lock
shlb
xor
xlat
scas
dec
mov
jnp
pop
lods
mov
addr16
push
std
fwait
das
xorl
jb
in
outsl
cwtl
test
les
mov
mov
sbb
test
js
test
cmc
in
jp
adc
mov
bound
jns
rsm
fstp
cli
repz
in
xorl
or
jae
inc
cmp
jl
pop
ret
pop
icebp
ja
mov
lahf
mov
nop
insl
add
outsl
fwait
mov
popw
inc
loopne
push
jg
pop
ljmp
dec
fld
push
xor
mov
fistpll
outsl
cltd
xchg
decb
fnstcw
push
cwtl
xchg
cmc
aad
jnp
testl
sbb
jl
cmpsl
out
adc
sti
mov
fstl
lods
push
fbld
outsl
jl
das
inc
mov
or
cmpsl
mov
aaa
pop
mov
testb
lcall
mov
loope
rclb
repz
adc
cmpsl
cli
fnstenv
iret
dec
sahf
in
mov
pop
xorl
cmp
cli
jge
xchg
ret
incl
adc
rorb
jg
adc
xchg
icebp
daa
push
je
hlt
fmul
leave
xor
adc
std
outsl
lret
or
mov
shrb
inc
aas
mov
jg
jg
dec
bnd
subb
je
mov
inc
leave
inc
rcr
aaa
call
xor
jg
lods
test
cmp
xchg
sahf
shrl
into
inc
xchg
sti
mov
je
xchg
int3
adc
add
bound
xor
call
inc
ja
jo
mov
aam
lock
cmp
cmc
cmc
lahf
out
test
pop
and
xor
js
shrb
xchg
lret
rcrb
cld
jbe
push
jne
ss
jl
cmp
ficompl
ljmp
loopne
pop
dec
in
mov
decl
sbb
bndstx
pop
add
incl
std
dec
mov
pop
repz
xchg
and
cwtl
jp
lcall
mov
insb
js
mov
fistl
pop
jae
out
mov
fists
inc
or
enter
inc
popa
xchg
test
pop
icebp
scas
mov
inc
in
pop
clc
in
dec
icebp
imul
and
pop
call
jno
xor
scas
lods
jae
jle
sub
data16
hlt
jecxz
imul
inc
dec
add
mov
sub
mov
pop
inc
mov
jnp
shl
insb
lcall
repnz
fcoml
hlt
lock
pop
in
pop
lea
add
les
icebp
dec
adc
inc
scas
dec
and
movsl
and
inc
mov
mov
rcr
lods
mov
xchg
add
mov
and
pop
sbb
cltd
pop
in
push
cmp
xor
xorl
adc
inc
mov
ljmp
fwait
stos
sbb
jmp
mov
adc
mov
lahf
sahf
fcoml
arpl
fisubrl
mov
pop
fldcw
adc
mov
xchg
popf
daa
pushf
add
das
or
push
xchg
push
sub
loope
fadds
fiaddl
addb
xchg
mov
aaa
jle
fidivrl
sub
stos
mov
or
dec
outsl
mov
cmpb
cs
xchg
dec
add
fcom
xchg
and
stos
or
pop
fnsave
fdivs
ja
rclb
dec
and
push
clc
push
ja
pop
ficoms
stos
jecxz
cwtl
pop
dec
popa
sub
or
push
scas
sub
mov
mov
repz
lock
mov
jmp
add
and
pop
shrl
leave
popa
notb
shll
xlat
lret
inc
rcr
push
dec
negl
push
sbb
mov
inc
mov
adc
dec
popl
or
pop
mov
and
add
sti
mov
aam
les
in
mov
sbb
not
or
mov
mov
shlb
adc
mov
rcl
stos
xchg
cli
repnz
incb
loop
jle
inc
xchg
xchg
cld
ret
movsb
std
pop
push
mov
push
ljmp
or
jne
and
push
mov
dec
imul
call
aaa
les
fstpl
and
into
rcll
mov
frstor
test
mov
addb
aad
add
mov
loope
dec
cmpsb
test
testl
mov
add
inc
xlat
hlt
lock
push
test
clc
pop
and
cmp
leave
out
test
cmc
jbe
sbb
out
cmp
movsl
fidivrl
xor
out
jno
lcall
inc
cmp
rorl
jne
ret
mov
pusha
mov
jp
lret
and
pop
xor
add
nop
fadd
add
add
loopne
jmp
jo
nop
inc
push
daa
add
add
scas
clc
sbb
push
mov
jl
sub
xchg
mov
inc
test
mov
jle,pn
aam
cmp
fildll
aaa
out
jp
mov
sbb
aaa
clc
xchg
fstpt
jns
or
or
push
loopne
dec
movsl
ljmp
sub
jp
jg
mov
pop
sbb
inc
hlt
decl
cmp
pushf
xchg
js
jno
or
stos
pop
adcl
jle
xchg
pop
cmp
mov
lahf
fdivrl
mov
je
add
push
mov
jl
inc
adc
push
mov
addr16
scas
jbe
popa
cld
pop
aam
mov
gs
push
adc
ljmp
push
je
hlt
and
ret
hlt
sbb
and
or
adc
adc
adc
inc
test
mov
arpl
jo
add
sub
fcomip
mov
pop
test
leave
sub
push
cwtl
adc
mov
fsubs
xor
jp
jecxz
dec
xor
cwtl
sahf
pop
jae
clc
adc
inc
lods
mov
jge
stos
insl
in
xor
mov
cmp
rcrb
or
mov
dec
out
xor
lea
jnp
xchg
cld
mov
stos
fmulp
push
dec
add
rolb
leave
mov
sub
mov
mull
jp
hlt
jmp
pop
add
cmp
xor
insb
jle
add
inc
or
mov
or
mov
pop
pop
jo
jnp
jmp
mov
sub
mov
pop
jns
mov
lods
decl
popf
push
dec
clc
repnz
mov
add
inc
dec
adc
mov
push
ja
fs
insl
sbb
mov
ss
hlt
decl
out
jne
mov
fimull
lahf
sbb
adc
dec
or
mov
pop
and
shll
push
pop
mov
shll
push
test
xor
cmc
sbb
subb
repnz
mov
mov
sub
incb
test
pop
inc
cmp
cmp
divb
pop
pop
je
cmc
std
adc
leave
fdivrs
pop
mov
mov
imul
xchg
jle
into
addr16
adc
bound
inc
jo
jle
xchg
mov
into
nop
loop
test
xchg
fsubr
test
or
mov
xchg
xchg
pop
hlt
sti
dec
push
fstpt
cmpsb
adc
cmpl
jb
or
xor
and
or
insb
mov
std
xchg
jb
js
xor
xor
fcmovnu
mov
out
imul
clc
mov
cli
mov
test
jb
or
lret
dec
or
icebp
xchg
pushf
push
mov
stos
xchg
or
push
sbb
inc
pop
sub
das
push
out
outsl
push
popl
and
inc
rcll
sti
lea
cld
test
repz
mov
jmp
add
xor
pusha
iret
adc
pop
lods
nop
fildll
mov
aas
mov
push
sarb
sbbb
je
in
std
mov
fisttps
and
sbb
push
sbb
adc
adc
mov
sbb
xor
add
mov
outsl
cmpsb
adc
cs
mov
jmp
adcl
push
arpl
shl
test
mov
inc
inc
js
jae
test
stos
adc
ret
movsb
xchg
insl
pop
mov
rcr
fstl
pop
clc
push
xchg
scas
daa
rcl
xchg
scas
sub
jbe
sbb
test
clc
out
lcall
into
test
mov
push
test
or
jo
push
add
push
inc
cmpl
vpavgw
pusha
cld
mov
das
fimull
push
repnz
mov
shl
fcompl
repz
std
sbb
inc
dec
pop
sub
and
and
cmp
popa
mov
adc
push
add
and
jge
mov
dec
jno
xlat
xor
xchg
push
push
sub
adc
repnz
test
jle
lods
dec
int
sub
pop
aam
inc
cli
scas
cmp
push
or
adc
push
scas
mov
ror
test
cs
dec
movsl
shlb
adc
sbb
std
subl
icebp
fs
imul
outsb
mov
into
cmpb
mov
jecxz
cli
add
push
shlb
or
sub
cmp
sub
inc
adc
out
inc
pop
push
jecxz
test
fwait
loope
ljmp
movsb
test
sbb
lock
andb
sub
loopne
xchg
jmp
add
clc
mov
and
sbb
pusha
mov
sub
mov
aaa
xchg
dec
arpl
inc
and
dec
sbb
mov
call
mov
mov
mov
sbb
dec
es
xor
pop
clc
movsl
or
inc
in
stc
jns
jle
dec
js
hlt
cmp
mov
adc
test
jg
clc
or
testb
xchg
inc
cmpsb
or
aad
mov
mov
test
incl
jae
aad
push
xchg
pop
dec
push
gs
add
dec
xchg
pushl
daa
lods
inc
mov
popf
clc
xchg
imul
loop
inc
push
xor
pop
pop
in
jo
insl
je
rclb
mov
ret
fstps
mov
push
sbb
fisubrs
push
jge
shll
pop
pusha
inc
mov
adc
sbb
jb
inc
mov
mov
stos
insl
mov
lods
cmpb
sub
stos
rol
xchg
mov
inc
shlb
das
cmpl
or
dec
lods
cmp
push
mov
cld
mov
jg
pop
jg
ret
push
inc
mov
inc
adc
cld
fs
pop
xor
dec
mov
push
daa
js
jno
push
pusha
or
mov
jl
fldt
testb
shrl
imulb
jae
ds
pop
mov
xor
jle
ficompl
cmpsb
aam
aam
sbb
dec
fldt
pop
inc
jle
and
sub
movsb
imulb
iret
xor
adc
movsb
inc
sti
test
outsl
std
in
adc
cmp
pop
ds
out
lcall
adc
popf
push
out
fs
call
inc
mov
inc
or
inc
aas
ljmp
sti
jle
push
xor
bound
pop
test
dec
lret
cld
sarl
addr16
lret
shl
movb
imul
sbb
inc
mov
inc
inc
or
mov
pop
loopne,pt
js
dec
ljmp
mov
clc
cwtl
repz
imul
or
pop
add
jge
adc
popl
stc
fidivs
sbbl
or
stc
aaa
insb
cltd
mov
pop
cwtl
or
outsl
pop
push
sbb
mov
in
or
and
cltd
and
cmp
mov
inc
outsl
cmpsb
xlat
dec
das
push
andl
in
fldt
lds
mov
nop
dec
cmpsb
xor
jmp
js
xorb
push
jnp
arpl
xor
or
inc
cmp
adc
cli
add
in
lret
fldt
fwait
pop
dec
push
das
cld
pushl
jg
call
push
add
and
sub
cmp
nop
jg
pop
lock
sub
fidivrs
stc
and
cs
insl
cltd
inc
fsubrl
sbb
inc
cmp
mov
pop
inc
mov
mul
clc
imul
out
ret
xchg
loope
stos
mov
pop
int3
mov
cmpsl
test
lcall
popa
aas
jno
daa
js
push
adc
hlt
mov
iret
lcall
fildl
lods
add
xchg
pop
clc
xchg
mov
jmp
inc
inc
add
js
pop
fdivrl
push
mov
dec
push
cld
sub
dec
sbb
inc
pop
jle
adc
add
add
aas
cmp
adc
or
lret
ret
lock
ret
imul
imul
shlb
sbb
push
inc
push
cmc
outsb
leave
inc
fildll
pop
mov
packsswb
fcomi
das
roll
cmpsl
sub
sti
dec
inc
aad
mov
pop
adc
popf
loope
dec
add
inc
inc
dec
mov
call
inc
mov
pop
test
or
xchg
iret
pop
sub
adc
mov
xchg
or
call
outsb
pop
sti
nop
sub
adc
lret
fstpl
jecxz
dec
movsl
jo
out
test
and
push
call
aaa
xchg
data16
divl
adc
xchg
mov
inc
and
or
loop
test
lock
out
jle
outsb
js
pop
loope
icebp
mov
rcll
xchg
scas
mov
jg
inc
inc
rcr
adc
mov
ret
aaa
hlt
fildll
and
pusha
cmp
push
in
outsb
insl
pop
push
inc
movsl
push
outsb
cs
jns
inc
rcrb
incl
filds
jbe
loop
adc
filds
repnz
push
bound
add
or
lcall
pop
inc
push
loope
pop
adc
sub
jl
jmp
cmp
xchg
lret
lods
jmp
int
sbb
push
mov
cmp
mov
mov
fcomip
test
inc
push
add
ds
daa
push
lahf
pmaddwd
push
jp
cltd
pop
mov
inc
jmp
dec
mov
or
cmpsl
aad
pop
std
pop
scas
lds
bound
push
dec
dec
inc
nop
add
fwait
mov
js
movsb
mov
rcrl
inc
mov
mov
std
pusha
sub
nop
lds
mov
xchg
dec
pop
clc
add
adc
dec
je
popf
incl
xchg
pop
mov
sub
popf
scas
add
mov
dec
xor
ljmp
dec
adc
pop
inc
push
cmp
dec
pop
adc
xor
inc
enter
mov
mov
stc
aaa
call
inc
and
in
add
push
or
adc
or
inc
add
dec
fmull
test
mov
je
cli
rorb
dec
popa
arpl
movb
adc
mov
xor
xor
dec
cwtl
stos
test
cmp
repz
mov
rorb
cmp
ljmp
imul
cltd
divl
xchg
pop
mov
fistpl
shlb
push
lahf
xchg
pop
test
xor
std
mov
mov
imul
mov
test
int
outsl
pop
test
add
mov
mov
mov
mov
adc
pop
push
and
fdivl
hlt
adc
cmp
fs
jg
lds
and
add
inc
jecxz
pop
inc
out
inc
popf
ret
aaa
negl
xchg
iret
mov
jg
mov
popa
int3
inc
add
test
fdivl
push
push
xchg
or
lret
mov
nop
frstor
in
add
je
cli
fistps
jp
es
jnp
mov
sarb
mov
aas
insl
lods
jno
cmp
add
xchg
adc
jbe
add
aam
xor
std
xchg
and
int
add
filds
call
lret
arpl
rcl
leave
inc
bound
int
inc
xchg
pop
and
in
outsb
aas
sbb
and
xor
test
inc
jae
xchg
fndisi(8087
movsb
iret
subl
out
lock
lods
insl
inc
scas
push
scas
jl
les
cli
pop
pop
jp
pop
cmp
pop
cmp
rcll
dec
xchg
push
fucomp
insl
popa
adc
in
or
sti
mov
push
insl
push
mov
lods
mov
or
std
lahf
mov
jge
pop
cli
hlt
loopne
mov
mov
lahf
movsb
jo
call
pusha
orl
or
jno
fwait
mov
test
js
cltd
stc
push
popa
jmp
pop
xor
call
out
push
shll
or
sub
gs
push
enter
icebp
jbe
push
cmpsb
push
or
int
pop
loopne
pop
ffree
jbe
call
fdiv
idivb
cli
adc
andb
dec
mov
sarb
jno
insl
xchg
push
xchg
jecxz
or
jge
popf
ss
into
or
push
addl
test
push
or
jp
ss
adc
lahf
mov
push
dec
mov
loope
mov
and
or
dec
insl
das
ljmp
scas
jp
rorl
mov
ss
sub
mov
push
add
sub
push
dec
or
fistps
stos
std
push
call
or
das
xor
push
insl
add
inc
outsb
roll
and
lret
xor
xchg
jge
sbb
pop
mov
dec
push
cmpsl
xchg
jmp
jbe
add
pop
mov
enter
shr
add
adc
push
mov
bound
sub
adc
test
jecxz
enter
imul
dec
data16
push
hlt
pop
mov
gs
or
lods
pop
imul
subl
lcall
push
jle
dec
push
pop
sub
mov
cld
aaa
inc
cmp
ljmp
arpl
js
sti
cld
movsb
add
jg
pop
cmp
data16
mov
mov
pushf
add
movsl
call
aas
iret
test
mov
sub
xchg
loope
sub
add
jmp
xchg
jle
les
call
scas
mov
fnstsw
push
fwait
adc
mov
sbb
insl
push
add
dec
adc
jb
mov
aam
jno
fwait
scas
sub
add
clc
sti
adc
fbld
sbb
and
cmp
les
fcmovu
push
loope
pop
das
adc
das
sub
jmp
shll
sub
sti
filds
jmp
pop
mov
ret
ret
scas
mov
mov
rcll
insl
leave
mov
dec
outsb
arpl
fsubrs
inc
mov
lods
push
rorb
imul
aaa
cmp
mov
sub
cmp
mov
jne
cli
pop
mov
sub
sbb
xor
lods
inc
push
adc
aam
outsl
add
test
fs
xor
fstpt
xchg
call
stos
mov
mov
mov
pop
mov
orb
jle
cmpsb
xor
das
push
lock
ret
dec
inc
sub
mov
iret
xor
mov
jecxz
cmp
lcall
out
adc
jecxz
outsl
mov
rclb
pop
push
sbb
dec
test
adc
test
outsb
pushf
sbb
stc
sub
scas
loop
loop
dec
ret
pop
or
jne
or
jmp
out
push
push
adc
outsb
jge
xchg
and
inc
inc
pop
stos
mov
sbb
pop
push
jno
inc
js
mov
jo
adc
adc
sbb
popa
fisttps
inc
mov
dec
dec
addl
jmp
mov
push
mov
xor
push
cmp
fwait
aam
mov
xchg
xchg
rcll
dec
mov
mov
jne
insb
xchg
xchg
mov
add
pop
and
xchg
outsb
pusha
jmp
mov
sbb
dec
aad
adc
fisubrs
dec
ja
mov
inc
ret
or
ret
and
inc
in
sbb
mov
jno
push
mov
iret
adc
xchg
jp
dec
or
add
inc
loope
push
cmp
iret
sbb
sub
xor
adc
insl
movsb
or
ja
lea
imul
cmp
mov
or
mov
out
iret
aaa
ljmp
add
jecxz
loopne
mov
sub
and
jnp
loop
pop
adc
scas
mov
divb
inc
cmpsb
or
adc
pop
mov
sub
das
in
inc
pop
addr16
mov
xchg
test
outsl
mov
xchg
add
pop
sub
jmp
loope
xor
rorl
jle
sbb
mov
aaa
out
mov
cmp
xchg
imull
fldt
dec
xchg
enter
jo
into
mov
hlt
push
or
repnz
js
jbe
int
inc
in
gs
push
cmp
and
insb
jne
mov
mov
mov
aaa
lods
fwait
loop
icebp
out
jns
xlat
aaa
in
mov
add
cmp
rcrb
pop
add
cwtl
shlb
jno
pop
pop
fsubrs
fsubl
xor
mov
loopne
cwtl
jnp
add
and
jecxz
shll
hlt
fistpll
push
push
lds
inc
xor
jns
add
inc
das
push
push
out
inc
ficomps
jb
mov
icebp
push
ret
mov
push
or
mov
or
movl
iret
daa
scas
add
jp
pusha
or
pop
mov
in
in
dec
loope
cmp
out
jns
jp
insb
sarl
cmp
push
popa
aam
push
sub
sbb
push
je
add
jmp
dec
jne
fisubl
xor
mov
movsl
pop
inc
mov
gs
jno
dec
pop
shrl
dec
push
mov
outsl
add
adc
xor
sarl
inc
sbb
pop
adc
int
lret
mov
in
xchg
shlb
sub
cltd
mov
lods
inc
js
movsl
das
inc
mov
push
ds
fisttpl
xchg
push
das
std
xor
adc
mov
pop
pop
subb
inc
xor
add
in
nop
xchg
test
jp
rcr
adc
or
sbb
sbb
jge
mov
add
push
sub
sbb
dec
or
push
pop
js
test
push
sub
cmc
idivl
push
insb
pop
sub
add
sub
shll
adc
pusha
add
les
mov
cmp
adc
jno
lahf
xor
mov
std
fimull
cmp
pop
jg
movsl
jg
or
lock
jb
push
mov
adc
mov
test
push
mov
mov
xorb
inc
lds
decl
pop
mov
cmp
xor
call
push
inc
xchg
loope
lret
mov
outsb
aad
push
mov
mov
mov
fcmovnbe
imul
orb
das
mov
icebp
outsl
adc
lahf
push
aam
adc
xchg
testb
add
je
mov
pusha
stos
push
xor
mov
sub
jns
xor
mov
filds
sub
xor
incl
shlb
rcrb
outsb
jnp
mov
les
inc
sbb
shlb
lcall
adc
pusha
xor
insl
test
movsl
or
sbb
cmp
aam
and
add
inc
outsl
aam
xchg
shl
cmp
xor
mov
pushf
pusha
fstps
pushf
push
mov
test
clc
scas
xchg
and
add
xorb
icebp
pop
inc
sbb
and
sub
js
mov
lret
pop
call
loop
sbb
adc
xchg
testb
jne
shrb
call
lret
pop
cli
fisttps
arpl
xchg
dec
sub
add
inc
imul
cmp
dec
push
push
lods
cmp
dec
mov
pop
lahf
xchg
push
jnp
add
fs
ret
clc
push
in
adc
sti
inc
push
loope
or
fs
out
inc
or
sahf
inc
add
push
mov
mov
sbb
push
mov
and
xchg
xor
clc
xorb
mov
stc
add
pop
in
mov
inc
hlt
fs
cmp
sbb
mov
xchg
cli
mov
inc
pop
cli
hlt
insl
loop
ja
das
jmp
data16
or
fiaddl
insb
mov
nop
mov
sbb
dec
sarl
icebp
repz
into
ret
popa
adc
dec
into
dec
push
pop
inc
sbb
out
out
or
dec
es
xchg
xchg
mov
leave
mov
cmp
xor
rcrl
and
xchg
fdivrp
jg
mov
inc
fs
loop
xor
out
pop
js
mov
enter
test
mov
fdivs
jle
pop
call
jge
cmp
or
mov
push
cmp
stc
push
mov
mov
xchg
repnz
aas
aaa
filds
or
push
sbb
scas
in
in
mov
jmp
imul
hlt
mov
jecxz
add
insl
out
stc
cmp
mov
lret
mov
jl
mov
ja
mov
jo
movl
add
add
pushf
movsb
xchg
mov
cld
pop
jecxz
testl
push
add
lods
cmp
mov
test
jns
adc
std
addr16
adc
arpl
inc
jne
dec
jnp
mov
ljmp
mov
xor
int3
loope
fwait
push
ja
das
inc
xlat
sbb
mov
rolb
and
or
mov
xchg
xchg
sbb
push
arpl
je
nop
mov
push
idivb
or
aad
adc
jl
push
call
or
or
out
int3
dec
pop
push
jge
pop
and
or
insl
mov
mov
decl
jbe
lret
add
js
dec
push
jne
add
jg
adc
or
push
fnsave
sbb
jge
ret
and
and
stos
or
dec
pop
inc
frstor
aad
or
mov
es
jmp
repz
cmpsl
mov
jae
jge
incb
jne
out
mov
jns
ss
ret
cmp
out
jmp
pop
mov
adc
ds
ljmp
or
push
cmpsb
ss
xor
push
clc
mov
inc
repnz
dec
inc
les
jo
fidivrs
adc
add
test
mov
hlt
dec
dec
pop
leave
push
jne
pop
or
orl
add
mov
pop
inc
mov
imul
add
inc
adc
repnz
jae
mov
jl
xor
cmc
push
mov
or
insb
mov
mov
xchg
ret
mov
dec
stc
jl
xor
push
inc
dec
es
xor
add
inc
xor
cld
adc
pop
daa
xor
sbbb
out
nop
popf
add
fimull
xor
mov
insl
and
push
mov
and
lea
inc
add
and
fcomi
dec
int
ret
inc
rclb
pop
jp
pop
and
shl
call
mov
jb
test
rorb
sub
outsb
jmp
lods
adc
loope
xor
scas
call
push
xor
jno
loop
test
loope
pop
loop
mov
or
sub
out
mov
cmc
xchg
pop
mov
into
dec
sbb
jge
aas
mov
out
push
out
xor
fidivrl
out
repz
std
jle
outsb
sbbl
scas
pusha
adc
in
sub
aaa
clc
adc
stos
jg
lods
push
add
lods
lods
jae
fnstenv
mull
arpl
xor
rolb
std
aam
mov
mov
rclb
or
hlt
rorb
loopne
ret
mov
sub
push
popf
rolb
movsl
sbb
dec
xor
arpl
and
dec
pushf
jle,pn
adcl
rclb
lock
jbe
mov
adc
pop
or
inc
sahf
and
jb
add
addl
je
imulb
add
incb
mov
pusha
mov
ret
inc
or
cmp
je
mov
jbe
jge
rol
aas
icebp
daa
adcb
mov
mov
xchg
jnp
fcom
orb
inc
mov
mov
rep
jbe
push
ja
lea
cmp
mov
aam
aam
add
out
aad
mov
mov
mov
sbb
mov
inc
js
arpl
das
jmp
test
pop
mov
push
vmread
fistpll
subb
pop
ljmp
testl
inc
sub
cmp
sub
dec
fcmovnbe
add
sbb
ja
orl
aas
scas
push
fildll
clc
jbe
jae
movsb
inc
int3
mov
es
in
scas
pop
and
or
push
int3
test
ja
cld
or
ret
cmc
inc
arpl
hlt
test
mov
repz
pop
fidivl
ret
or
lea
pop
loop
cmpsl
push
aas
mov
dec
cmp
mov
lret
ja
adc
push
cmp
sbb
bound
jge
daa
incl
or
xor
ljmp
int
enter
je
jp
or
xor
les
or
ja
rolb
and
ja
jmp
dec
andl
push
mov
std
scas
jmp
sub
ret
push
cmc
push
cmp
xchg
scas
mov
xchg
outsl
or
mov
inc
sbb
mov
mov
adc
lret
pop
cld
sahf
push
gs
stos
mov
push
push
xchg
mov
aaa
pop
mov
pop
sub
lret
ret
test
ljmp
je
insb
stos
fisubs
mov
ret
pop
xor
mov
jo
add
push
dec
scas
mov
xor
fcmovnu
mov
cmpb
and
loopne
test
mov
pop
inc
sbb
cwtl
mov
popf
sub
jmp
xor
sbb
es
mov
jnp
fidivrs
orb
mov
test
in
mov
or
clc
lea
mov
lea
push
and
jno
add
clc
dec
and
mov
dec
in
aad
movsb
jne
mov
and
inc
outsb
mov
inc
mov
lahf
out
sbbl
pop
mov
inc
or
dec
mov
jne
mov
dec
mov
test
cmp
cli
in
xor
jle
pusha
cwtl
inc
mov
add
outsb
lds
dec
sahf
pop
in
push
psubsw
lods
add
pop
cmp
fstpl
xchg
and
lock
adc
pop
movsb
aas
lock
inc
pop
sub
test
xchg
inc
nop
out
mov
adc
insl
xlat
pusha
add
bound
mov
dec
lcall
rcll
rep
xchg
in
mov
outsl
ja
loop
mov
inc
out
cmp
arpl
daa
bound
mov
sub
std
jle
add
movsl
or
or
clc
dec
aaa
mov
lock
aas
sbb
and
push
xchg
inc
mov
add
lea
in
or
push
mov
out
or
add
adc
dec
and
lea
insb
cs
xor
pop
push
es
sbb
mov
sub
lea
cmp
out
adc
cmp
in
mov
jb
rorb
pop
cld
jb
rcr
mov
or
fidivl
push
fidivs
iret
push
push
cs
shll
ret
test
clc
dec
dec
shr
add
mov
cmp
lods
es
in
leave
orb
pop
sub
sbb
cmp
fnstsw
xlat
dec
lods
aas
mov
push
cmc
shrb
jns
es
fdivr
lock
xlat
or
mov
xor
ret
outsl
sub
loopne
imul
insb
sbb
pop
outsl
inc
lds
rcrl
jp
faddl
ret
hlt
and
in
test
adcl
fmull
or
icebp
mov
lock
gs
pop
insb
jne
pop
jo
mov
in
add
enter
and
push
jle
and
mov
jmp
sahf
dec
call
and
stc
div
xchg
push
hlt
xchg
mov
or
ljmp
pop
and
mov
mov
mov
in
jmp
inc
sub
stos
rorb
cmp
mov
mov
leave
fisubrs
ficompl
pop
icebp
or
xor
cmp
shlb
aam
or
adc
in
mov
xor
add
inc
jno,pn
or
push
add
adc
jecxz
pop
mov
ss
int
pop
ljmp
cwtl
mov
xchg
push
adc
out
jecxz
outsl
mov
pop
mov
insl
outsl
mov
jmp
sub
jp
cmc
cli
enter
xor
jg
mov
in
and
and
and
fists
xor
divl
xchg
sub
lcall
jbe
cwtl
and
test
push
aaa
gs
faddp
and
or
loopne
pop
mov
aam
pop
push
dec
repz
lock
jno
cmp
out
sub
sbb
and
or
pop
and
and
mov
pop
jne
outsb
inc
pop
fists
stc
incb
and
inc
call
cmc
sub
mov
inc
mov
loopne
sub
rcrb
jo
cs
mov
and
mov
ret
icebp
shlb
sbbb
inc
push
std
sbb
and
mov
mov
jo
xorb
sti
movsl
mov
loopne
pop
jo
sahf
push
xor
push
mov
call
xchg
xchg
and
ret
xchg
mov
test
push
inc
mov
in
pop
cli
ja
jnp
subb
sub
or
scas
orb
jnp
sbb
xor
and
sbb
push
pop
leave
pop
adc
mov
push
test
je
adc
ja
inc
gs
ljmp
inc
mov
jp
stos
cmp
sbb
add
or
int
push
aam
pushl
cld
inc
add
pop
mov
adc
mov
and
call
dec
and
push
or
jecxz
or
jnp
scas
push
and
fcoms
fidivs
pop
push
pop
mov
cld
add
sub
cmp
mov
dec
adc
incl
mov
lcall
cmc
cmp
pusha
mov
adc
add
sarb
out
push
inc
mov
je
incl
shll
arpl
inc
xchg
push
mov
lret
mov
or
ljmp
ja
andb
mov
push
sbb
and
clc
lcall
es
bound
sub
fiadds
test
test
shrl
dec
test
test
das
jge
mov
mov
scas
adc
push
adcb
fcompl
add
repz
xor
add
call
movsb
xor
mov
stos
and
cmp
repz
add
adc
sbb
rorl
imul
aam
test
fadd
hlt
dec
hlt
or
sub
sbb
dec
shl
inc
scas
dec
iret
dec
fs
jp
test
aad
inc
sbb
rclb
add
es
cmpsl
clc
inc
add
push
jbe
jle
cli
test
insl
xchg
pushf
inc
mov
ss
inc
roll
mov
mov
push
adc
aam
xor
add
imull
into
sub
cmp
xor
mov
int3
push
fildl
mov
cmpsb
or
push
sbb
xor
xchg
xchg
mov
add
xchg
push
sbb
shlb
mov
movsl
mov
add
sbb
fiaddl
and
arpl
insl
push
cmp
jecxz
fsubl
shlb
loop
das
jbe
repnz
xchg
lock
pop
sbb
pop
testl
aaa
fimull
add
jb
push
jmp
jns
inc
sub
adc
jb
into
stos
adc
push
dec
mov
shrb
pop
add
push
aam
gs
adc
outsb
js
out
xor
ret
popa
dec
jbe
stos
add
push
aas
shlb
lock
lcall
pop
loop
ljmp
mov
fwait
ss
in
movsl
loop
xor
je
fisttps
push
xor
stos
xor
rclb
sub
outsb
and
pop
jb
mov
mov
dec
and
fs
pop
sbb
inc
rcrb
mov
dec
je
aam
test
sub
movsl
dec
dec
sbb
fistpll
mov
test
outsb
or
mov
sbb
fadd
mov
enter
jns
adc
mov
out
outsb
sbb
push
loop
pop
inc
mov
mov
out
in
or
dec
aaa
mov
loop
pop
jle
mov
push
int3
push
movsb
xchg
mov
cli
mov
and
mov
push
and
lods
adc
push
fcompl
fistps
push
mov
mov
xchg
mov
or
sub
sub
xchg
cmp
or
bound
rol
imul
mov
push
xor
adc
lds
shr
enter
add
sbb
ljmp
push
and
or
inc
inc
shll
into
mov
pop
jp
pop
xorb
inc
add
xchg
xor
xchg
sub
faddl
in
add
lea
or
mov
sbb
aad
xor
fwait
sbb
pop
cli
movsl
ljmp
push
mov
fildl
roll
stos
outsb
decl
cmp
imul
jle
dec
out
push
mov
cli
xor
ds
jo
mov
in
push
movsb
stc
divl
fisttpl
fidivl
fmuls
xor
shr
add
adc
lock
movsl
in
inc
cmp
decl
push
hlt
xchg
aaa
dec
xchg
xor
jg
mov
ret
add
aam
mov
adc
push
dec
mov
add
mov
pop
outsl
jo
sub
ret
pop
and
mov
aam
icebp
inc
xor
push
mov
adc
adc
std
lock
mov
inc
dec
adc
loopne
incb
push
sbb
cmpsb
jle
int
movsb
scas
in
mov
negb
movsl
or
or
pop
adc
hlt
ret
mov
push
aaa
test
mov
mov
imul
push
xchg
mov
jno
sahf
xchg
mov
hlt
jne
xchg
add
sbb
test
ret
jnp
mov
adc
pop
insl
mov
outsl
and
inc
or
push
movsl
loop
dec
out
xor
mov
xchg
sahf
out
push
popf
aas
call
les
or
pop
sbbb
jmp
push
cs
mov
movsl
mov
imul
icebp
or
xchg
xor
fdivrl
mov
push
sbb
mov
ret
into
psubq
sbb
add
jmp
ljmp
pop
pop
fs
jb
lahf
mov
fwait
js
lcall
and
dec
leave
or
push
and
jp
pop
mov
and
aad
cwtl
add
push
cmp
jmp
test
sbb
push
fxch
jecxz
ret
test
mov
mov
mov
xchg
pop
fistpll
xor
sub
insb
and
inc
shl
leave
clc
mov
push
mov
stc
push
stc
mov
int3
aaa
clc
push
push
loopne
fbld
test
sub
adc
push
push
and
lret
adc
mov
fcoml
clc
shrb
sbb
lcall
ret
das
push
pop
xor
icebp
scas
test
bound
mov
pop
in
mov
cmpsb
add
dec
xor
pop
hlt
sub
outsl
sti
sbb
xchg
sbb
push
or
test
mov
shlb
sbb
pop
jp
sbb
clc
fiadds
dec
into
pop
lcall
cmp
loopne
je
dec
hlt
adc
mov
lods
xor
xchg
andb
sub
push
rolb
sahf
inc
jb
les
adc
mov
xor
inc
sbb
xchg
jnp
jnp
sbb
outsb
xor
ret
add
push
jmp
mov
lds
cld
mov
jg
jp
nop
cwtl
inc
add
aam
test
sub
or
jecxz
mov
jecxz
inc
sti
or
dec
pop
in
pop
ss
xchg
es
enter
pop
and
loopne
jb
inc
mov
xchg
push
adc
rorb
add
inc
push
aaa
mov
bound
in
mov
pop
inc
mov
xor
mov
aad
fcmovu
adc
cmpsl
and
or
adc
sbb
nop
xor
xchg
mov
xchg
scas
sub
mov
push
mov
fisttps
jb,pt
mov
push
inc
das
sbb
or
les
add
mov
dec
lock
hlt
loop
clc
or
test
mov
insb
fdivl
xor
mov
xor
outsl
test
shl
pop
jle
adc
dec
sbb
cmp
fisttpl
and
cmpl
lds
mov
push
dec
popa
insl
mov
inc
lcall
or
xchg
mov
pop
push
rcrb
es
inc
pop
add
xor
ret
lcall
xchg
les
insb
dec
dec
sub
leave
js
pop
sti
scas
jp
or
cmp
lret
adc
lcall
repnz
subl
ds
pop
outsb
cld
xchg
mov
sbb
jge
rcrb
leave
pop
jle
inc
arpl
in
xchg
jnp
mov
or
lds
loopne
xorb
jle
push
aaa
sbb
dec
adc
cmp
mov
dec
mov
fistl
cs
test
int
and
lret
mov
sbb
fistl
int
mov
aas
roll
in
pop
mov
sub
outsb
fbld
jge
and
out
push
and
call
dec
pop
cmovle
divb
js
iret
xor
cmp
ret
repz
out
adc
cmp
mov
test
cmp
adc
mov
and
dec
lds
cmc
std
fstpt
aaa
push
cmpsb
into
fstpt
pop
cmpl
sbb
push
pop
sarl
or
mov
pop
cmp
push
mov
out
sahf
fisttpl
sbb
rol
cmp
mov
hlt
sub
fs
mov
pop
fsub
adcb
pop
add
or
fnstsw
jo
mov
outsb
cld
ss
test
push
sbb
adc
adc
dec
or
dec
movsl
add
ds
lds
mov
mov
add
cmp
push
inc
pop
sbb
lcall
das
mov
fisttps
jbe
nop
inc
in
ret
add
jbe
push
outsb
add
xchg
jge
cmp
push
adc
jo
fidivrl
sub
mov
add
adc
iret
test
inc
xlat
and
clc
out
pop
jl
stc
and
jbe
or
inc
xor
loop
ss
testb
lds
outsl
and
and
sbb
mov
cmp
xchg
dec
movsb
sbb
lret
aad
call
and
or
out
add
inc
xor
mov
incl
xchg
pop
mov
mov
jmp
pop
mov
mov
push
ljmp
test
mov
adc
mov
mov
popa
loop
xchg
push
inc
stc
mov
icebp
fwait
xorb
out
popf
mov
mov
jnp
sarl
sub
add
jo
or
adc
push
push
pusha
inc
loope
scas
lahf
je
insl
cld
push
or
aas
sbb
jp
xor
es
adc
jo
or
into
jl
stos
fsubr
sub
add
inc
stc
adc
fdivrs
fbld
dec
addb
cmp
divl
inc
arpl
pop
and
or
rorl
adc
jge
scas
pop
and
shrb
jmp
pop
sub
aam
or
hlt
or
mov
mov
push
adc
ja
lock
inc
sub
inc
sub
scas
xchg
or
ja
sbb
and
loopne
mov
adc
popa
pop
pop
sbb
pop
mov
cmp
ret
mov
subb
imul
fwait
add
sbb
shll
xor
push
inc
loopne
sub
arpl
outsb
xchg
xor
addr16
inc
push
dec
mov
mov
pop
int
pop
push
add
jmp
ret
lret
das
push
inc
fsts
pushf
mov
arpl
mov
bound
rcrl
jmp
ret
add
sub
xor
push
stc
xchg
and
xor
adc
xor
ljmp
stos
pop
hlt
inc
mov
inc
xor
mov
cmp
int3
jno
stc
in
movsl
push
jecxz
jae
adc
xchg
lcall
adc
iret
add
dec
outsl
in
cmp
mov
iret
fisubrl
popf
inc
cltd
mov
lods
and
mul
cmp
outsb
shl
xchg
pop
adc
inc
and
popa
icebp
imulb
cmpsb
fildll
in
and
movaps
pop
pop
adc
iret
inc
cltd
xchg
rcll
imull
mov
cld
fistl
push
cmpsb
repz
out
nop
mov
inc
ljmp
ss
clc
dec
lods
mov
ret
xor
je
cli
cmp
push
pop
fdivr
push
sub
int
xor
sbb
pop
pop
fcomps
test
test
push
movsb
inc
mov
dec
cmpsb
pop
jbe
call
dec
add
jne
jo
ja
cmc
dec
sbb
xor
jg
xor
jp
repnz
adc
ja
and
or
fcomps
jle
adc
cltd
mov
stos
xchg
push
sub
sub
add
mov
sub
xchg
pop
popa
call
lods
adc
leave
icebp
cwtl
mov
sarb
and
cld
or
pusha
adc
es
outsb
sbb
pop
pop
push
push
pop
test
sub
cmp
adcl
mov
push
sub
sbb
sbb
xchg
cld
aaa
int3
icebp
dec
jmp
mov
outsb
push
xchg
mov
sub
imul
pop
call
sbb
punpckhbw
adc
into
cltd
mov
in
mov
fsubs
dec
sbb
faddl
outsb
xor
and
cmp
orb
add
sbb
cmp
sbb
leave
mov
lods
push
xchg
mov
loopne
jne
adc
pop
xorb
inc
or
sub
cld
adc
or
fmuls
mov
out
movsl
sbb
imul
mov
fsts
int
add
push
sbb
andb
push
cmp
xor
xchg
push
and
outsb
aam
std
sub
pop
fldt
cmp
loopnew
insl
fldenv
xchg
int
sbb
mov
push
mov
or
nop
sbb
push
aaa
lahf
xor
mov
xor
divb
mov
mov
pop
addr16
nop
pop
adc
inc
or
pop
push
imul
fistps
outsl
jns
clc
sahf
or
xor
in
ret
mov
add
out
lea
mov
sub
lock
outsl
cli
movsl
das
out
clc
sti
leave
mov
and
xor
shll
mov
stos
je
jno
mov
loopne
andl
adc
xchg
mov
pop
inc
fisttps
lds
adc
mov
sbb
sbb
aaa
jl
clc
mov
std
outsl
lods
sub
or
inc
stc
jo
clc
push
out
sahf
inc
arpl
mov
jl
jbe
xor
xchg
sti
movsb
sub
xchg
iret
shll
cmp
test
in
lret
sahf
aad
outsl
insb
push
imul
mov
shl
adc
jno
imul
fcmovnu
mov
dec
adc
adc
jmp
and
cmc
out
sub
repz
or
je
dec
loope
xor
cmp
push
cmp
adc
mov
mov
pop
xor
jbe
outsl
pop
clc
neg
pop
cmp
xchg
adc
outsb
cwtl
add
outsb
cmp
out
adc
scas
sbb
inc
mov
mov
outsb
dec
xlat
aad
push
push
shll
or
filds
inc
in
sub
test
add
sub
ffreep
mov
mov
or
adc
sub
or
push
jmp
repz
icebp
jge
pop
in
mov
add
pop
jns
pop
sbb
aam
jns
xchg
leave
jo
aam
stos
popa
les
push
mov
adc
mov
mov
lea
lret
ja
xor
jp
lret
sbb
mov
cmpsb
sub
mov
inc
inc
push
mov
cs
daa
fnstenv
jle
or
pop
inc
mov
dec
pop
xor
pop
jl
pusha
repnz
or
mov
mov
adc
push
or
lahf
xor
jle
dec
test
cmp
pop
dec
stos
xchg
mov
fsubrp
mov
insl
loop
leave
inc
in
lret
cmp
inc
add
pop
je
mov
iret
and
ret
clc
cmp
xor
inc
icebp
fstl
out
dec
cltd
hlt
aaa
ret
xchg
inc
sbbb
insl
xor
scas
inc
push
das
push
push
roll
aad
mov
test
movsl
lahf
push
in
add
pop
sbb
xchg
mov
inc
loope
test
js
mov
or
and
stos
inc
sbb
push
cltd
subb
inc
gs
js
xchg
push
ss
sbb
nop
cmp
add
lret
filds
ss
dec
cmp
mov
aad
mov
lods
daa
das
jne
sbb
outsl
cmpsl
jbe
punpckhdq
mov
stos
std
lcall
pusha
xchg
test
out
cmpsl
lods
jne
dec
jno
dec
push
sbb
push
mov
mov
insl
incl
dec
loope
push
push
movsl
push
fisttpl
repnz
rol
sub
and
ret
scas
push
push
jo
cwtl
mov
cmc
lea
mov
ds
imul
lods
mov
sarl
sbb
and
dec
mov
mov
enter
incb
out
cld
adc
notl
fcoml
push
lret
loop
mov
inc
pop
sub
cwtl
add
xchg
xchg
gs
push
ss
and
adc
inc
aam
pop
sub
push
mov
cmp
inc
fldl
cmpsb
cmpsl
cs
out
bound
jp
mov
push
sub
sbb
xchg
dec
fwait
out
lcall
leave
sbb
xchg
xor
mov
pop
cmp
adc
sbb
xchg
sbb
nop
cwtl
mov
jge
subl
jb
fcmovbe
aad
gs
pop
mov
xlat
js
pop
outsb
clc
cmpsb
cmp
xor
roll
inc
mov
mov
stos
in
and
in
inc
sub
movsl
test
lret
mov
xor
loop
dec
inc
dec
rolb
pushf
sub
mov
test
outsb
icebp
lcall
jmp
fidivs
iret
test
add
in
outsl
mov
push
pop
std
or
inc
xchg
push
cmp
sub
hlt
in
sbb
xlat
pop
sti
adc
roll
repz
data16
pop
sbb
xorb
ret
fildll
sub
shl
daa
cltd
pop
mov
fisttpll
push
and
shrl
add
adc
adc
stos
sbb
cs
inc
sub
mov
aaa
clc
mov
push
movsl
jg
ja
mov
test
clc
movsl
idivb
xor
adc
push
ret
inc
pop
sub
insb
jg
pushf
cmp
add
loope
sub
add
adc
mov
push
test
insb
adc
js
inc
divb
sahf
ret
pop
pop
push
add
cmp
and
mov
mov
jb
pusha
fwait
fwait
mov
fs
xor
repnz
sarb
mov
push
push
repnz
loope
addb
js
mov
decb
sbb
xchg
add
ficoml
and
push
push
orb
sahf
lock
mov
push
shlb
out
and
rcr
sbb
xchg
jecxz
and
and
mov
push
inc
push
clc
insl
jnp
pop
hlt
add
inc
outsl
pop
dec
dec
adc
add
aad
mov
pop
xchg
mov
fwait
imul
push
ret
pusha
sbb
adc
iret
pop
sbb
mov
lret
lods
ret
adc
and
sub
fsubs
jno
lock
rol
pop
in
aad
mov
push
icebp
outsl
pusha
xchg
dec
lock
jbe
cmp
and
pop
mov
xor
popf
das
cmpsl
lods
imul
in
test
jbe
fldenv
add
inc
movsb
insb
icebp
clc
pop
lock
and
andl
mov
mov
adc
inc
scas
push
js
loop
sarl
adc
aad
xor
cltd
and
dec
push
or
fistps
add
mov
jmp
outsl
adc
sub
lods
les
stos
pop
mov
xlat
fistpll
dec
rclb
mov
xor
call
les
inc
mov
adcb
lea
lods
sub
cltd
mov
jecxz
mov
jge
mov
mov
xor
in
or
jno
enter
es
loop
sar
testl
sahf
rolb
adc
scas
or
lods
aaa
jl
andl
mov
xchg
dec
lods
xchg
mov
cld
out
lods
lret
pop
ljmp
mov
ret
cld
ret
std
xchg
sbb
out
jmp
sbb
push
push
jle
xchg
and
fiadds
fistpl
outsb
jmp
fs
dec
cmp
sahf
add
adc
adc
aaa
lock
xor
mov
es
lea
dec
shr
pop
xchg
stos
sti
cld
cld
stos
int
enter
aam
stos
mov
and
cld
dec
adc
adc
mov
popa
xchg
ljmp
std
in
or
inc
mov
add
mov
jecxz
ljmp
mov
mov
sti
sub
mov
loopne
push
mov
push
cmpsl
mov
rcr
hlt
pop
sbb
jmp
hlt
in
dec
test
xchg
jbe
mov
xchg
out
pusha
ret
ss
push
out
dec
mov
or
addb
xlat
adc
sbb
dec
mov
lods
xorb
rcr
push
inc
std
pop
roll
push
sbb
ret
scas
mulb
sub
cmp
mov
arpl
ja
push
mov
fxch
inc
or
fnsave
xchg
cli
push
ret
push
je
jg
outsl
jo
dec
mov
out
sub
sub
inc
scas
mov
cmp
stos
push
fdivs
test
test
dec
adcl
outsl
loope
clc
pop
and
xor
jl
icebp
jbe
lahf
sbb
lret
xor
fs
jo
aaa
add
pop
inc
adc
arpl
dec
ss
cmp
jae
push
adc
jnp
das
ja
scas
push
rolb
xor
in
inc
ret
js
mov
insl
adc
inc
inc
in
movsb
mov
cmc
adc
mov
cmp
ret
pushf
mov
imul
sub
pop
jmp
sarl
andl
cltd
mov
outsb
aam
fcmovb
aaa
nop
adc
mov
call
les
test
cmp
jge
push
xchg
mov
mov
adc
out
and
je
mov
push
ret
fistps
adc
das
scas
test
je
add
push
pop
das
lds
inc
popa
push
sbb
inc
cmp
decl
popa
mov
add
sbb
incl
cmpsl
andl
jno
dec
mov
insl
sub
jg
outsl
xchg
std
and
lahf
wbinvd
cmp
aad
inc
loop
jae
mov
cld
push
mov
cmp
pop
insb
arpl
jae
fbstp
cmp
or
pop
test
and
outsl
push
sub
cmpsb
aaa
cmp
leave
sti
sahf
shrb
mov
push
vpunpckhdq
test
das
inc
mov
jne
xchg
cmp
fs
fidivrl
imul
push
mulb
mov
inc
loop
sub
xor
adc
out
pop
xchg
les
data16
repnz
dec
inc
pop
imul
inc
es
insb
fidivrs
jne
xor
cmp
push
out
mov
adc
pop
and
mov
add
pop
adc
lcall
lods
adc
nop
mov
jmp
mov
pusha
loop
into
mov
jne
orb
mov
inc
pop
rol
lods
push
mov
fisttps
out
add
jne
sub
cmpsl
call
push
push
mov
xchg
jmp
xor
dec
cltd
sbbb
jg
pusha
test
push
jae
test
fdivrl
std
icebp
jecxz
pop
jmp
out
test
mov
fcompl
push
ja
rcrb
sub
jmp
fs
lcall
ss
push
xchg
and
nop
cld
lret
nop
sbb
scas
sar
test
mov
repz
or
pushf
and
xchg
dec
repnz
mov
inc
stc
or
adc
push
clc
jmp
push
jnp
fnstsw
bound
loop
clc
int
dec
dec
sbb
and
movsl
scas
test
clc
fdiv
sbb
dec
pop
scas
inc
imul
fucomip
fwait
sub
shl
neg
mov
push
test
scas
push
sbb
sbbl
add
cli
sbb
cs
add
fcom
into
inc
xchg
das
insl
sbb
add
or
aam
out
lea
sahf
cld
filds
bound
loopne
loop
xchg
push
jne
aas
mov
and
fisubs
adc
icebp
stos
test
inc
lcall
in
andl
inc
jmp
and
roll
nop
mov
add
in
add
loopne
fs
push
adc
xor
out
inc
lods
jle
insl
aaa
pop
inc
jmp
add
aas
out
dec
pop
push
xor
out
mov
jo
xchg
or
data16
jmp
dec
and
out
mov
add
popa
push
je
jne
jecxz
rorl
movsb
and
ljmp
push
fdivrl
sub
push
jbe
mov
in
mov
cmp
jno
scas
ja
outsb
loope
cmc
mov
sub
ljmp
lcall
icebp
pop
xchg
pop
cmpsl
dec
aas
iret
in
adc
mov
xchg
add
dec
or
loope
andb
mov
dec
es
mov
xorb
jle
outsb
cmc
xor
mov
ss
mov
clc
or
sbb
flds
jbe
leave
roll
scas
pop
imul
jl
rcrb
push
rclb
rorl
call
add
lds
out
cmp
xchg
xchg
push
fs
adc
test
mov
inc
or
in
out
or
push
nop
xchg
cmpsl
push
stos
mov
push
fbstp
arpl
jmp
and
jg
or
jmp
inc
aad
imull
lcall
xchg
jbe
pop
mov
xor
cmp
xchg
ja
mov
stos
mov
fwait
leave
lods
or
call
add
add
mov
dec
adc
dec
mov
and
mov
mov
call
cmp
loopne
xor
scas
cmpsb
push
icebp
enter
xchg
mov
cmp
pop
sbb
test
add
unpcklps
add
inc
add
inc
sbb
inc
push
mov
cmp
mov
adc
popa
out
mov
pop
adc
or
pop
jo
mov
lahf
loop
loope
es
cmpsb
or
jl,pt
bnd
pop
decb
outsl
je
dec
mov
rcrl
test
loopne
aam
cmpsb
stc
pop
daa
andb
push
pop
stos
out
pop
ret
mov
aas
mov
into
push
subl
cmp
bound
and
lret
adc
hlt
clc
cmpsb
aas
les
pop
mov
push
jge
and
aad
daa
xor
out
int3
in
adc
jmp
dec
push
cmpb
mov
and
mov
mov
psubusw
jnp
push
sbb
in
es
or
add
and
mov
jle
out
clc
int
sub
adcb
sbb
mov
adc
xchg
mov
adc
xor
movsl
movl
add
orl
aam
lock
pusha
mov
fs
mov
jo
xchg
call
xorb
stos
arpl
and
push
or
mov
add
sti
test
std
sbbl
mov
and
or
push
pop
pop
mov
push
hlt
ljmp
outsl
dec
jmp
loope
fwait
mov
inc
inc
dec
mov
inc
mov
out
cwtl
das
or
sbb
inc
push
imul
cmp
iret
or
cwtl
jbe
outsl
cmp
or
xor
cld
push
mov
sbbl
push
aam
iret
jb
subl
mov
jno
pop
inc
lahf
xchg
insl
icebp
or
add
pop
mov
add
outsb
aaa
insl
xor
dec
repz
mov
clc
je
mov
xchg
mov
xchg
rcrl
jg
dec
nop
push
dec
xchg
adc
cmp
sbb
fstps
inc
and
iret
jbe
lock
or
lods
pop
mov
loopne
mov
cltd
ljmp
or
lcall
movswl
xchg
insb
dec
mov
mov
into
popf
stos
lods
push
rcr
aaa
sub
ljmp
mov
push
sbbb
or
mov
fimuls
mov
adc
jge
jne
stos
stos
pop
xchg
jmp
fcmovbe
int
dec
sub
js
mov
mov
in
int3
mov
jp
sub
pop
adcb
cmp
rorl
mov
mov
int3
cmpsb
xorl
sub
fnsave
jp
sub
pushf
mov
lcall
mov
mov
ljmp
jle
cmp
scas
inc
mov
mov
pop
scas
fisttpl
and
jae
mov
and
mov
insb
mov
fbld
loop
and
clc
add
bound
jae
cld
fstl
pop
mov
push
out
dec
pop
movsb
pop
ret
inc
pop
test
stos
push
xchg
movsl
out
inc
fs
mov
dec
outsl
xchg
js
bound
xor
insb
js
es
inc
je
jbe
insl
loopne
lret
adc
sub
dec
and
fsubrl
sub
imul
div
mul
mov
outsl
std
push
pop
push
mov
rorb
push
fwait
push
and
dec
shlb
xlat
fwait
stos
fcmovu
lea
mov
push
jmp
lock
jnp
jg
std
pop
clc
movsl
rcl
sahf
pop
cli
scas
aaa
xor
testb
mov
out
mov
cmp
rorb
mov
fcoms
and
or
jle
jo
outsl
fistpll
add
sub
and
cmp
test
mov
push
stos
notl
inc
push
popf
sub
pop
mov
inc
jl
dec
or
test
and
in
lea
pushf
iret
f2xm1
fpatan
push
sub
cmp
xchg
cmp
subb
adc
andl
or
lcall
inc
sahf
into
lahf
or
lahf
test
loop
ljmp
or
push
in
or
pop
dec
mov
mov
std
int3
dec
in
mov
push
mov
fdivp
adc
clc
clc
cmp
insb
mov
and
jge
pop
push
out
jp
movsl
test
aas
repz
popa
je
sbb
jmp
jb
and
cmpsb
sub
xchg
lcall
and
dec
adcb
mov
xchg
lods
lret
sub
mov
or
andb
fidivrl
or
ds
xchg
les
mov
mov
xor
sub
xlat
aad
imul
xchg
mov
sub
fisttpl
pop
xor
or
test
mov
dec
push
xchg
out
icebp
mov
pop
inc
in
dec
push
fnstenv
dec
sarb
js
lods
cmp
movsl
push
and
mov
xor
insl
sbb
lock
xchg
cmpsl
mov
js
inc
mov
pushl
cmp
jp
aaa
out
xor
fnstsw
sbb
dec
xor
test
dec
loop
pop
inc
jae
out
notb
adc
dec
xchg
ljmp
mov
sub
in
popf
cmp
xchg
or
cs
dec
push
lret
aad
dec
shrl
decb
test
ja
and
xchg
mov
xor
sbbb
mov
inc
bound
push
adc
push
fildl
insb
fwait
mov
sub
ret
loope
int
aaa
sbb
mov
repz
add
cwtl
push
and
mov
fildl
or
xchg
jns
js
xor
rclb
test
daa
ljmp
scas
pop
mov
adc
and
fidivs
adc
pop
cmp
outsb
push
loope
pop
dec
cmc
push
test
ljmp
inc
jns
mov
sub
push
inc
sbb
mov
pop
sbb
roll
imul
mov
mov
loopne
inc
or
nop
jge
ljmp
mov
inc
xchg
inc
test
add
lods
pop
mov
add
xchg
and
or
jmp
sbb
rclb
cmp
movsl
mov
rolb
cwtl
pop
das
sarl
adc
or
loopne
ret
fcmovnu
jbe
pop
inc
jecxz
inc
vpcmpgtd
adc
push
cmp
pop
insl
add
enter
inc
jge
repz
dec
stc
xchg
xor
pop
scas
lods
jbe
or
xchg
loope
or
add
xorb
ds
out
call
mov
ret
mov
jmp
divb
outsl
jl
push
xor
cmp
mov
pop
ficoms
add
mov
xchg
xchg
mov
push
outsl
sar
mov
fistpll
mov
daa
add
adc
insl
enter
ret
pop
and
movsl
xchg
push
sbb
pop
mov
jo
push
in
data16
mov
addl
mov
aaa
push
lret
jl
pop
mov
int
or
jns
jo
ja
add
xor
mov
clc
fwait
or
adc
dec
iret
je
inc
fidivrs
jno
popf
fidivl
xor
mov
adc
cmp
ds
ss
jnp
int
cmp
loopne
add
add
rcll
push
fimull
lcall
add
fisttpll
out
mov
sbb
mov
loop
sbb
xor
pop
xchg
or
cs
jo
mov
ja
sub
or
adc
loope
cmpsb
dec
jne
orl
fistpll
mov
push
fs
push
sbb
cmp
jge
test
inc
jmp
fists
js
clc
pushf
les
lock
cli
inc
shll
push
cmp
daa
sub
inc
movsl
adc
jg
add
mulb
pushf
and
sbb
push
orl
cmc
pushl
xor
loopne
jge
shrl
add
out
test
fdivl
jp
mov
js
jo
lods
xchg
adc
push
cmp
outsl
cld
mov
test
aad
mov
jno
and
es
mov
or
mov
into
mov
pop
mov
testb
push
jae
shll
lock
bound
fdivrp
sub
ret
hlt
aas
mov
loopne
cmp
jmp
adc
movsl
mov
ljmp
jbe
nop
or
cmp
add
push
fdivrs
mov
icebp
sahf
jbe
out
lds
fisttpl
rolb
add
mov
ljmp
inc
jecxz
pop
outsb
sub
ja
pop
lret
jns
mov
jb
add
fbld
aad
add
movsb
and
push
repnz
pop
adcb
jmp
out
fisttps
inc
sbb
or
out
fimuls
adc
shrb
icebp
cmp
cltd
in
sti
stos
popf
lahf
ja
lahf
je
arpl
arpl
push
sbb
jg
outsl
loopne
inc
jl
jg
clc
in
inc
rcrl
add
mov
mov
cmp
mov
mov
out
mov
add
test
xchg
cmp
aas
mov
and
mov
mov
stos
sarb
stc
mov
sbb
lods
ss
push
loop
or
pop
sbb
xchg
add
iret
orb
add
mov
or
mov
mov
inc
test
fmuls
in
pop
push
push
imul
dec
inc
fnstsw
int
xchg
aaa
xor
push
and
push
lcall
and
lock
and
mov
mov
mov
sti
movsl
push
mov
mov
inc
popa
mov
xchg
sarb
lcall
imul
ljmp
xchg
ficoml
popf
into
mov
cmp
out
mov
icebp
testb
dec
ret
stos
xchg
and
call
jl
imul
xor
mov
jg
xchg
call
adc
mov
xchg
es
aam
sbb
imul
cmp
incb
stc
mov
mulb
pop
icebp
push
xchg
gs
aam
mov
mov
add
arpl
in
mov
cmp
lcall
insb
pop
cwtl
inc
or
add
xchg
add
stos
xchg
or
sbb
jecxz
in
adc
dec
push
adc
decb
add
jno
inc
stos
jnp
out
loop
arpl
adc
dec
mov
out
daa
cmp
mov
mov
incb
outsb
inc
mov
outsl
loop
int
enter
add
int3
jg
pop
aam
addb
pop
push
push
les
push
mov
fcoms
outsl
inc
sbb
loop
mov
ficomps
adc
cmp
jo
outsl
xchg
mov
jnp
sbb
inc
call
jge
inc
pop
mov
jle
jle
mov
jno
test
popa
pop
xchg
cmpsb
and
mov
loopne
or
and
add
or
xor
sub
pop
mov
sub
jecxz
outsl
push
mov
adc
jb
lea
add
fcomi
fs
inc
lock
pushf
popa
cmpsl
mov
lea
pop
xor
cltd
scas
das
lock
mov
popa
push
sbb
fcoml
test
adcb
cs
subb
lahf
int3
xor
push
mov
jge
mov
sub
sbb
adc
das
mov
inc
mov
punpcklbw
lds
cs
ret
push
nop
push
xor
push
sub
mov
jle
shrl
fmul
xchg
movl
je
fcoml
sbb
adc
cli
push
inc
mov
call
adc
or
adc
mov
cltd
arpl
popl
orb
mov
ss
fstl
pop
daa
es
loope
push
in
loopne
xchg
testb
or
lcall
add
scas
xor
shr
push
popf
in
ljmp
outsl
das
std
push
dec
int
out
jl
mov
shll
sub
jge
cmp
cmpl
inc
loope
fistl
loope
mov
fadds
loopne
aas
adc
clc
scas
lods
pusha
ljmp
push
aaa
insl
mov
lds
mov
pop
stos
jp
shlb
ja
push
shrb
mov
adcb
icebp
add
sbb
mov
sub
push
cli
push
sub
add
dec
pop
mov
cld
aaa
cmpb
sub
jp
ss
inc
outsl
aad
call
in
mov
in
insl
jae
xchg
xlat
sbbb
mov
clc
and
jbe
hlt
stc
movsl
lea
js
rcl
outsb
subl
xchg
adc
stos
in
ret
sbb
mov
sbbb
out
dec
bound
out
ds
call
insl
jp
das
fldt
pusha
or
sub
lock
mov
adc
mov
repnz
xchg
loopne
pusha
loope
ret
mov
inc
andl
jmp
fidivs
imul
jnp
push
lea
adc
sub
xor
inc
mov
sbb
dec
jbe
inc
vunpcklps
jmp
or
lods
lods
jo
insb
inc
push
sbb
stc
pop
in
push
lods
scas
int
jno
ljmp
inc
adc
jl
push
int3
rep
sbb
dec
lods
nop
and
lock
and
ret
lds
xchg
pop
outsl
stos
fisubrs
iret
and
mov
nopl
lds
scas
and
icebp
mov
xor
push
clc
sbb
rorb
inc
sub
jno
clc
xchg
scas
les
pop
aas
je
pop
inc
push
mov
pop
push
xchg
call
pop
sub
or
aad
sbb
ret
dec
mov
cmpsb
das
add
pop
enter
mov
aad
outsl
sub
movsb
push
out
adc
or
jnp
push
adc
mov
xor
adc
add
sbb
aaa
mov
add
adc
pop
dec
cmpsl
insb
scas
bnd
add
sub
inc
outsl
adc
loopne
lahf
push
mov
aaa
inc
call
repz
addr16
movsb
inc
push
or
test
call
add
adc
adcb
test
add
dec
incl
adc
and
test
or
sbb
lods
mov
or
or
adc
nop
divb
adc
and
add
mov
add
inc
inc
or
adc
and
outsl
test
daa
and
nop
add
adc
inc
cmp
and
outsb
insl
mov
adc
orb
jg
and
cmp
xchg
fcmovnu
nop
add
or
nop
cmp
and
outsl
dec
adc
nop
cmp
jae
imul
adc
sub
je
ja
pop
imul
or
mov
mov
or
adc
sub
pop
imul
adc
insl
xlat
insl
jae
mov
js
adc
xor
xor
test
adc
jae
inc
add
sub
inc
and
mov
or
sbb
and
lods
mov
pop
xchg
int3
lods
mov
mov
and
imul
pop
sub
push
fcmovbe
mov
sub
nop
mov
lods
mov
icebp
pop
mov
pop
fnstenv
and
mov
or
les
xchg
or
scas
adc
outsb
aas
and
push
mov
imul
nop
dec
xor
test
pop
pop
inc
orb
push
lcall
add
or
or
and
xor
push
daa
adc
imul
pop
addr16
outsb
or
adc
lcall
xor
test
adc
ljmp
lcall
cli
icebp
and
pop
sub
adc
inc
xor
push
or
jbe
lods
insl
add
adc
and
arpl
notb
pop
adc
imul
xor
cli
fimull
pop
imul
jae
shll
imul
fstps
pop
imul
inc
and
and
sbb
xchg
std
add
ret
jb
lods
xor
outsl
in
and
and
or
xor
outsl
dec
fmuls
das
cmpsl
imul
jae
adc
ljmp
sbb
and
add
add
dec
inc
mov
pop
fistpl
call
stos
data16
xor
pusha
mov
inc
push
insl
andl
or
or
or
or
cmc
jbe
lods
rcrb
pop
add
int
mov
aam
subl
mov
pop
sub
outsb
cs
xchg
fisubrl
inc
sub
mov
int
or
push
xor
sbb
insb
add
orb
sub
test
sub
xor
imul
xor
and
aam
xor
mov
inc
cmp
addr16
ljmp
aaa
outsl
jl
hlt
push
pop
xor
push
inc
mov
cmp
jae
sub
test
inc
scas
mov
or
mov
push
pop
adc
jle
sub
mov
adc
bound
mov
lcall
add
int
lds
mov
into
cmp
and
imul
xor
arpl
xor
inc
push
pushf
jb
xor
pop
fcmovnb
sbb
mov
cld
ljmp
add
mov
je
lahf
aas
js
xor
imul
and
pop
xchg
and
xor
enter
mov
adc
and
pop
and
sub
adc
clc
out
test
jbe
push
inc
mov
insl
xor
in
mov
pop
repnz
adc
scas
inc
sub
inc
jbe,pn
mov
jae
dec
cmc
adc
sub
and
ja
inc
sbb
filds
mov
es
add
rcrl
in
int
dec
in
xor
lds
shrb
test
cmp
aam
xor
and
lcall
push
nop
cltd
ss
int
cmp
xor
add
lcall
sub
add
xchg
and
mov
push
or
pop
into
mov
mov
sub
sti
push
dec
dec
scas
adc
outsl
mov
lods
mov
adc
dec
nopl
pop
lods
mov
mov
imul
xor
stos
or
mov
incl
jle
sbb
sub
roll
add
loope
add
jbe
scas
adc
and
pop
test
pop
xor
xchg
fsub
pop
pushf
pop
adc
cmp
ficompl
sbb
or
and
add
jae
xchg
xchg
or
xchg
sub
or
ret
push
arpl
cmpsb
lods
loopne
adc
je
roll
in
cmp
scas
imul
repnz
jae
dec
and
and
adc
sbb
imul
fists
std
cmp
lods
mov
inc
rcll
cmp
scas
test
gs
or
mov
fisubl
pop
test
push
xor
loope
int
mov
pop
lods
jne
dec
testb
ret
imulb
out
and
xchg
int
add
dec
jecxz
add
adc
dec
daa
push
lea
pop
hlt
andb
xchg
or
add
mov
jb
aam
or
and
mov
pop
mov
mov
test
testl
add
add
pop
and
scas
add
push
das
cmp
xchg
mov
nop
or
push
test
jb
clc
stos
push
or
inc
mov
adc
add
xor
mov
test
adc
add
add
lds
sub
push
mov
or
adc
cmpsl
mov
fbstp
add
inc
and
pop
mov
scas
aad
mov
xorb
lods
mov
xchg
mov
adc
and
lods
mov
push
sti
inc
push
or
sbb
add
addb
jb
push
or
inc
adc
push
scas
push
int
mov
pop
imul
pop
imul
xchg
and
or
imul
aaa
cmp
movsl
cs
insb
lods
add
mov
push
mov
pop
mov
adc
imul
adc
add
rcrb
add
push
frstor
push
pop
mov
mov
add
loopne
test
sub
cmp
push
imul
or
lret
push
add
pop
mov
or
add
push
sub
mov
adc
faddl
lcall
mov
mov
sub
fdivs
adc
lcall
adc
push
in
pop
add
rorb
int
pop
fadds
pushw
sti
inc
dec
lcall
stos
mov
add
sbb
adc
icebp
jo
cmpsl
or
ret
lods
rolb
pop
push
mov
sbb
adc
lret
cmp
push
push
mov
loop
test
sbb
push
push
or
jle
push
lret
mov
cmp
ret
loope
subb
jmp
imul
xchg
fistpl
push
stos
sub
test
cmp
sub
push
int
fs
imul
mov
xchg
fidivl
and
pop
imul
and
add
rcrb
cltd
xchg
add
mov
inc
movsl
adc
sbb
xor
pop
imul
cmp
lcall
leave
inc
imul
dec
inc
and
mov
rsqrtps
lods
rorb
or
inc
loope
sbb
push
mov
mov
cmp
and
inc
imul
inc
add
inc
jae
stos
push
mov
fisttpl
push
ficompl
xchg
jge
and
and
xorb
mov
lock
bnd
mov
mov
andb
mov
xchg
lret
or
and
push
inc
or
sub
bound
sub
pop
push
lock
sub
add
ss
inc
imul
sarb
xchg
adc
cld
jbe
push
rolb
push
ret
imul
mov
sbb
subb
lcall
cltd
sbb
pop
mov
pop
mov
test
jnp
rcl
and
jo
pop
jae
xchg
in
add
jo
out
mov
dec
push
andl
cmp
lods
movsl
shlb
es
jae
xchg
movb
cli
push
jl
and
jp
push
sub
loopne
subl
out
lods
fs
inc
dec
insl
or
sub
jp
add
ss
or
mov
mov
sbb
add
jmp
addl
fwait
popa
adc
test
inc
out
add
lods
js
cld
lret
add
xchg
sbbb
pop
stos
loop
into
sbb
aad
add
stos
shll
xchg
stos
adc
je
shrb
insl
xor
imul
pop
imul
jecxz
ret
insl
or
or
xchg
adc
daa
push
cmp
fucomp
add
pop
or
mov
and
mov
js
shl
dec
cltd
add
add
pop
and
sti
sbb
lods
cltd
cli
sbb
adc
sbb
cmpsl
pop
add
and
or
dec
push
cmp
mov
inc
mov
adc
mov
push
shrl
sbb
jae
sub
push
dec
dec
test
inc
idivb
mov
int
imul
sub
xchg
and
nop
inc
cmp
js
xor
stos
dec
xorb
push
sbbl
or
rcrb
iret
sbb
addb
popf
stos
fldcw
mov
push
cli
inc
inc
in
inc
mov
sub
cmp
push
push
add
mov
popa
jb
lea
and
sbb
lcall
pop
mov
pushf
addb
mov
lods
adc
push
filds
loope
mov
mov
les
scas
test
test
stos
or
push
push
push
sbb
and
rcrb
push
inc
test
and
sbb
loop
pushw
inc
sbb
or
ret
inc
idivb
mov
and
push
lret
repnz
xor
lods
iret
add
repz
jb
roll
or
mov
mov
push
xchg
lock
sbb
jo
xor
mov
dec
adc
pop
gs
mov
inc
lds
addl
je
push
inc
mov
jp
dec
out
mov
jmp
sub
xchg
js
pop
jp
xor
push
arpl
jae
daa
sub
sub
scas
mov
push
push
xor
and
dec
or
mov
or
and
pop
and
data16
inc
rcl
and
sbb
or
xchg
repnz
dec
fmulp
adc
dec
cwtl
or
scas
mov
rcrb
jns
out
call
pop
js
cltd
popa
mov
icebp
pop
loop
repnz
and
push
mov
sbb
dec
mov
mov
push
sbb
mov
push
out
test
adc
ljmp
adc
rcr
add
add
lock
pop
pop
roll
inc
cmp
rcrb
or
inc
push
mov
and
xor
rcrb
inc
sarl
popa
ret
mov
fs
add
adc
pop
xchg
add
inc
add
push
insb
jae
fistps
andb
jne
or
popa
jo
jg
imul
insb
push
jne
je
inc
jns
gs
outsl
push
imul
fbld
adc
outsl
arpl
add
outsl
jae
dec
fistpl
mov
cmp
je
outsl
jns
inc
jb
jne
inc
mov
gs
dec
imul
inc
popa
fs
outsb
jnp
outsb
sub
xor
insb
inc
arpl
mov
jb
outsb
arpl
arpl
outsl
outsb
adc
imul
call
gs
outsl
jb
popa
je
dec
outsb
xchg
jb
imul
pop
fisttpl
arpl
adc
outsl
fldt
add
push
gs
adc
int
or
xor
das
insb
jae
sbb
jge
mov
popa
dec
int
popa
addr16
js
jne
jb
popa
fistpl
push
push
pushf
inc
int
int3
sbb
and
adc
pop
add
lods
mov
jns
push
push
fwait
dec
fiadds
jb
daa
cmp
inc
test
mov
sbb
jae
mov
rcll
lahf
push
rcr
inc
pop
dec
divb
inc
insb
ss
inc
js
and
mov
test
mov
push
mov
sar
les
fildl
imul
cmp
mov
lock
mov
bound
sub
icebp
lock
stos
push
jns
add
jae
lret
jg
inc
jne
data16
dec
outsl
fs
out
adc
push
or
mov
mov
outsb
addr16
push
cmp
sub
jae
pop
sbb
rolb
or
xchg
scas
sbb
data16
xchg
mulb
adc
or
mov
push
and
inc
enter
or
fdivrp
insb
popa
arpl
popa
push
popa
pop
push
cmc
adc
das
dec
push
jp
inc
arpl
pop
and
out
lcall
fdivrs
push
andb
push
xchg
fstps
mov
xchg
pop
inc
jae
movsb
ja
push
gs
ret
xchg
jmp
push
popa
popa
out
popf
mov
je
andl
popa
cmp
inc
bound
mov
sub
fwait
jl
addr16
mov
imul
push
cmp
or
ret
cmp
inc
inc
push
loopne
push
shlb
mov
push
inc
dec
sub
stc
ja
adc
sidtl
add
add
int
data16
test
adc
add
jmp
or
test
add
out
mov
push
add
push
add
xchg
ljmp
or
add
sub
add
movhps
add
je
in
dec
jbe
je
jmp
lret
or
xchg
xor
int
in
daa
push
and
and
add
cmp
cltd
inc
shrb
sub
pop
or
mov
inc
enter
mov
and
fmull
adc
lret
out
xor
jae
es
cmp
dec
inc
adc
outsl
sbb
add
mov
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
inc
add
addb
add
or
add
add
lods
mov
add
add
pop
add
enter
sub
add
lock
orb
add
add
subb
add
add
add
add
or
add
test
add
or
add
add
add
stos
add
lcall
add
add
add
add
add
add
add
stos
add
lcall
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
lods
add
fadds
add
test
add
sub
add
popf
add
add
add
add
add
add
add
add
add
add
mov
jg
jmp
jnp
add
mov
jge
clc
jp
add
mov
std
add
cmp
add
cli
pop
add
incl
jmp
popf
add
cmp
add
jle
add
jp
add
jp
add
ds
add
ds
add
mov
cmp
add
mov
fldl
std
jnp
add
mov
fldl
cld
incl
cli
std
add
cmp
add
cmp
sti
aas
sbb
add
jg
add
jg
add
jg
jle
add
jp
add
incl
jmp
mov
aas
add
mov
mov
add
ds
add
cmp
add
jg
add
aas
add
mov
jge
jmp
jg
ljmp
add
jnp
add
sti
fldl
std
cmp
ljmp
add
ds
add
mov
popf
add
ds
add
jle
add
std
add
mov
aas
add
ds
add
mov
cmp
add
mov
cmp
add
sti
filds
cld
cmp
sti
sti
mov
add
mov
sbb
add
aas
lahf
add
mov
pop
add
mov
std
add
jle
add
cli
pop
add
jp
add
jnp
add
jg
in
fldl
ljmp
add
ds
add
jle
add
mov
jg
out
sti
std
add
mov
std
add
cmp
jmp
aas
fldl
in
mov
fldl
in
cmp
add
mov
mov
add
mov
cmp
add
ds
add
jle
add
cmp
add
cmp
add
pop
add
mov
jg
jmp
popf
add
mov
mov
add
jnp
add
jp
add
mov
filds
call
mov
mov
add
aas
filds
jmp
incl
in
cmp
cld
mov
mov
add
mov
fldl
jmp
cmp
add
incl
out
jp
add
mov
sbb
add
mov
sbb
add
ds
add
jle
add
cli
jg
jmp
jge
call
jg
add
mov
std
add
cli
pop
add
jle
add
mov
cmp
add
ds
add
jge,pt
call
aas
add
mov
pop
add
aas
add
jp
add
jle
add
mov
std
add
sti
aas
add
cmp
add
ds
add
jnp
add
mov
jg
in
mov
jge
jmp
fldl
in
jnp
add
mov
sbb
add
ds
add
jnp
add
jnp
add
jle
add
aas
pop
add
jp
add
mov
cmp
add
jg
add
jg
add
jle
add
jnp
add
sti
filds
cld
mov
jge
call
sti
jg
jmp
aas
filds
call
jp
add
cmp
add
mov
cmp
add
jle
add
mov
jge
stc
jg
add
incl
jmp
cli
mov
add
mov
mov
add
jp
add
std
add
mov
add
sti
cmp
add
jg
jmp
sbb
add
mov
sbb
add
mov
popf
add
cli
mov
add
mov
aas
add
jle
add
pop
add
aas
popf
add
std
add
jnp
add
jp
add
ret
mov
xor
cld
je
dec
mov
icebp
sbb
push
loopne
sarb
test
dec
ret
int
repnz
pop
fsubrs
and
dec
in
inc
or
adc
std
xchg
sbb
xor
add
mov
xlat
lret
xchg
push
jns
pop
dec
dec
sub
mov
je
lcall
add
xchg
sub
xor
out
das
push
push
adc
jl
add
ret
push
ss
pop
insb
xor
xor
add
ficompl
hlt
cmc
out
sub
pop
arpl
fisubrl
mov
adc
aas
jns
mov
or
sti
or
addb
xchg
scas
lods
leave
cmc
mul
les
or
mov
pop
fisubrs
mov
and
jnp
test
pusha
sbb
lea
clc
pop
cmp
push
stos
shll
inc
dec
int3
ficomps
pmuludq
add
ja
loope
cmc
mull
in
stos
adc
ret
insb
ljmp
cmp
jmp
inc
dec
daa
mov
add
lock
pop
adc
push
mov
cmp
or
push
jp
dec
sbb
fadd
fwait
lds
push
xchg
cmp
in
xchg
push
insb
mov
popf
cmpsl
gs
in
rorb
dec
xchg
shl
jmp
imul
loope
adc
int
or
mov
mov
mov
fisubs
repz
jmp
enter
jnp
sbb
lret
mov
jl
mov
push
es
or
sbb
das
adc
adc
push
add
fwait
cli
push
mov
in
mov
stos
rcll
jo
loope
jl
and
adc
rcrb
push
insl
pop
out
dec
and
mov
jb
std
ds
ret
pusha
mov
arpl
jo
out
pop
int3
fldcw
cmp
push
xlat
mov
and
sbb
insb
gs
icebp
or
mov
fstpl
sbb
or
orb
pop
aas
fnstsw
add
xor
or
xchg
lret
mov
hlt
dec
jo
pop
les
add
mov
xchg
adc
jae
pop
fucom
adc
dec
xlat
out
in
mov
ret
or
xchg
aad
loope
sub
xor
cli
lods
sub
and
sub
sbb
js
push
pop
sbb
adc
inc
stc
nop
scas
icebp
flds
popa
das
int
nop
mov
mov
fwait
sub
add
inc
arpl
inc
adc
je
outsl
je
mov
xor
in
xor
sub
sub
xchg
sub
and
mov
outsb
cmp
scas
sbb
cmpsb
ljmp
fbstp
jb
dec
in
jmp
inc
and
mov
repz
mov
mov
in
sub
bnd
mov
rorb
in
cwtl
inc
out
scas
bswap
movsb
fcompl
add
sub
mov
cwtl
jbe
xchg
stos
pop
add
jl
mov
mov
cmpl
out
icebp
les
out
pop
xchg
push
dec
sarb
paddsb
xchg
imul
jmp
adc
std
mov
xchg
mov
push
mov
xor
sbb
pop
sbb
aam
fsts
hlt
sbb
add
nop
jns
add
nop
push
sbb
inc
inc
and
and
add
pusha
and
and
add
add
or
adc
add
add
add
and
and
adc
and
adc
and
andb
adc
nop
inc
pusha
adc
and
add
jp
add
adc
add
or
add
addb
rclb
adc
adc
inc
add
fs
add
test
or
and
and
adc
add
inc
inc
andb
add
adc
add
test
adc
orb
nop
inc
or
addb
or
add
or
inc
andb
pushf
jl
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
popa
add
add
imul
and
dec
add
arpl
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insb
add
push
add
js
and
dec
add
jae
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
jae
and
push
add
insb
add
jo
and
push
add
add
add
add
pop
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
add
insl
add
and
test
add
outsb
add
add
add
insl
add
jne
jb
and
xor
cmp
cmp
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
add
jb
add
js
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
je
popa
add
add
add
jb
imul
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
scas
add
mov
add
add
scas
add
out
scas
add
scas
add
push
mov
add
add
sub
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
