push
call
ret
ret
in
xor
inc
cmp
scas
or
push
xor
insb
cmp
jmp
inc
outsb
pop
sti
pop
adc
sarb
jmp
sbb
adc
loopew
and
sahf
int
mov
add
jo
mov
test
cmp
adc
clc
pop
mov
mov
cmpsl
inc
xchg
jb
pusha
mov
ret
addr16
add
or
mov
loope
push
daa
pop
cli
mov
lahf
xor
nop
xchg
xchg
jne
mov
mov
aam
xchg
popa
inc
push
cmp
and
andb
jmp
sbb
sbb
push
xor
jp
pop
adc
sub
mov
push
repz
imul
ror
in
mov
adc
stos
add
push
mov
jle
dec
aas
scas
adc
jbe
stos
sarb
cmp
testb
test
mov
out
inc
push
into
or
and
imul
nop
bound
dec
and
daa
cmp
icebp
cs
pop
xchg
lea
insl
xor
dec
jo
or
sarl
xchg
adc
scas
inc
test
add
rclb
and
lret
cs
es
pop
js
cld
cli
mov
out
int
rcll
cmp
mov
push
test
addr16
sbb
push
or
stos
xchg
jmp
mov
sub
sub
jns
xor
xchg
fildll
push
mov
les
xchg
clc
jmp
cld
call
outsb
adc
sbb
test
push
bound
mov
mov
dec
or
lret
jns
pminub
fildll
lods
mov
enter
int
icebp
int3
or
and
xchg
mov
movsl
push
cmc
cmp
popa
outsl
fcoml
inc
inc
iret
in
pop
jno
movl
add
iret
out
add
adc
xor
in
push
jno
and
stos
pop
jmp
xor
jle
incb
adc
adc
and
sub
stos
xlat
loop
cmp
cmpsb
mov
leave
enter
pushw
push
loop
repnz
cmp
xchg
notb
xchg
jb
andnps
xor
sub
lret
sub
add
xor
out
mov
and
out
mov
loope
xchg
sub
fidivl
pushf
cmc
lret
shl
xor
pop
xor
into
cmp
clc
out
sub
outsl
mov
jo
pop
sbb
gs
outsb
jb
push
jle
mov
shl
pushf
xchg
sub
test
shll
bound
in
lsl
inc
imul
es
push
push
mov
aaa
mov
xor
and
outsb
pop
jae
jecxz
adc
sbb
in
roll
adc
inc
mov
adc
dec
push
add
mov
cmc
xchg
cmc
push
loope
jno
xchg
dec
outsb
jecxz
cli
jg
je
xchg
sub
xchg
or
arpl
fidivrs
push
mov
mov
hlt
mov
xchg
mov
pop
out
ljmp
cmp
pop
repnz
loope
rcl
leave
push
js
shlb
mov
sti
gs
fsts
and
leave
jno
rcll
ret
daa
ljmp
jnp
int3
fldcw
pop
out
xchg
mov
add
xor
jle
sbb
add
andl
into
and
jle
ss
cmp
cmp
idivb
jbe
sub
inc
shlb
jl
inc
sbb
bnd
cltd
sbb
aam
enter
pop
mov
mov
in
push
test
js
neg
sbb
cmp
adc
imul
or
jo
mov
mov
ja
int3
loope
sub
jecxz
clc
pop
add
cmpsb
xorl
cmc
and
andb
sti
or
pop
add
cmp
adc
cmc
test
sub
mov
enter
inc
and
jb
fistl
or
mov
pop
fmuls
jp
jp
in
mov
mov
fs
mov
cmp
push
jge
xchg
jp
subb
push
add
adc
xchg
cmp
pusha
ret
icebp
cmp
aad
pop
stos
leave
sub
sub
popl
mov
or
aas
pop
push
mov
push
sbb
inc
cltd
dec
mov
cmpsb
movsl
push
lahf
dec
lcall
into
cltd
pushf
fwait
mov
adc
js
dec
stc
pop
out
cs
xor
out
or
push
call
repnz
jle
repnz
or
call
out
push
out
iret
xor
pushf
repz
lret
inc
sub
push
dec
jmp
sub
adc
stos
inc
mov
shlb
dec
lcall
cwtl
cmpl
outsb
inc
xchg
jecxz
mov
ss
lds
jne
xchg
cld
test
and
xor
sub
pusha
nop
aam
push
inc
shlb
gs
cmpsb
loop
mov
pop
mov
test
fs
xlat
jbe
int
mov
lods
jle
scas
iret
test
mull
cli
xchg
mov
std
test
das
pop
shlb
js
dec
ret
loop
subl
repnz
push
or
stc
mov
lahf
or
insl
mov
inc
arpl
xchg
dec
mov
ret
cmpsl
outsb
hlt
mov
xchg
add
xchg
in
arpl
or
push
mov
test
push
xlat
ss
lret
inc
dec
stc
mov
aad
leave
movsl
add
cmpsb
xchg
fistpl
cltd
push
test
mov
out
sub
fisubrl
adc
rol
stc
lret
jns
xchg
ljmp
pushf
or
repz
inc
out
and
sbb
pop
lock
imull
mov
xchg
std
pop
sbb
repnz
push
lret
cmp
mov
pop
mov
mov
clc
stos
ret
cmp
aad
sbb
aam
jecxz
pop
mov
add
outsb
pop
push
lods
iret
add
gs
out
mov
call
adc
enter
imulb
into
adc
mov
fwait
push
push
movsl
sub
or
adc
xor
lea
in
xchg
cld
and
mov
sub
mov
imul
stos
jle
ret
cld
xor
inc
int3
xchg
dec
adc
push
in
jg
xchg
out
popf
stos
sti
in
in
add
clc
mov
mov
xor
jne
cld
sub
fldt
mov
scas
and
stos
scas
jns
mov
int
out
mov
mov
clc
xchg
jl
lea
mov
jecxz
cltd
fisubs
xlat
inc
lret
dec
scas
test
shll
xor
jae
mov
in
push
jge
sbb
push
adcl
or
mov
mov
cmpsb
insl
jnp
mov
lods
rcrb
fiaddl
cwtl
repnz
xlat
fsubr
xchg
or
dec
pop
xchg
bound
add
jns
mov
popw
insb
stos
and
push
mov
adc
or
jb
adc
jo
jb
cwtl
inc
xchg
daa
je
cmp
cmp
cmpsb
test
mov
jl
nop
sbb
loopne
jae
and
imul
jbe
rorl
aam
xchg
jnp
scas
jns
cmp
mov
roll
and
fdiv
push
jmp
adc
sub
lods
loopne
arpl
arpl
pop
sub
hlt
mov
in
leave
rolb
mov
ficoml
sbb
pcmpeqb
test
and
or
orb
xchg
mov
mulps
inc
in
xor
insb
pusha
addl
stos
mov
mov
mov
sub
sbb
mov
js
mov
mov
pop
cmp
rorb
dec
inc
pop
lods
sbb
jmp
jns
ret
ds
mov
dec
mov
pop
test
pop
add
adc
out
sar
push
std
sbb
outsb
daa
ss
jb
cli
les
adc
pop
sub
sub
cmp
lret
mov
and
sub
jmp
loope
dec
repz
cmp
je
jg
fistpl
push
xor
mov
lahf
jae
and
js
push
mov
test
shll
dec
fsts
call
nop
lods
inc
jne
jle
dec
cmp
aas
daa
pop
scas
popa
push
call
adc
xchg
adcb
sbb
adc
mov
pop
les
int3
jae
pushf
les
dec
mov
mov
or
mov
lock
sar
ret
test
popa
enter
adc
add
push
test
ss
fmuls
outsl
push
jb
rol
sbb
loop
lahf
outsl
out
jg
push
jecxz
in
data16
sbb
or
ret
fwait
mov
push
mov
cld
stos
mov
daa
outsl
pop
lds
das
inc
cltd
lahf
orl
loope
inc
jecxz
mov
xchg
pop
mov
lea
pushf
xchg
dec
and
and
out
inc
aam
jle
cltd
enter
cmp
pop
pop
sub
xor
push
arpl
and
movsb
lods
cmp
stos
inc
sbb
jge
lcall
je
dec
dec
and
mov
sbb
adc
mov
fbstp
sub
xchg
xchg
pop
xor
mov
std
fld
jns
mov
gs
incb
out
dec
add
stos
cld
cmc
xchg
push
aam
push
mov
inc
jmp
test
iret
inc
ja
mov
ss
mov
outsb
out
inc
popa
push
cmp
mov
and
jnp
xor
xorl
lea
mov
cmpsb
jb
xlat
push
xor
pop
notl
inc
int
dec
clc
push
add
in
sahf
icebp
dec
aas
test
movaps
out
cwtl
cwtl
arpl
sub
dec
pop
and
dec
or
cmpsb
mov
arpl
enter
cs
stos
dec
and
push
add
and
sub
out
sub
roll
sbb
sti
imul
mov
icebp
jmp
push
clc
sbb
xchg
fcmove
rcl
inc
cmp
pushf
cmpb
clc
inc
push
stos
mov
test
adc
insl
jo
das
in
cmpsw
ret
sbb
lea
cmp
add
lcall
out
mov
sub
or
jl
xchg
cmp
lods
pop
aas
cmpsl
je
fs
sub
mov
lahf
daa
dec
sbb
mov
xchg
xchg
xor
dec
mov
adc
pop
pop
jnp
mov
add
mov
shll
pmuludq
mov
ret
cmc
movsb
add
pop
xor
scas
ret
dec
add
cmp
dec
imul
push
cld
mov
jle
es
fucom
mov
js
fwait
pop
inc
fldt
pop
scas
mov
xchg
xchg
movsb
jne
jg
mov
test
popf
aas
fidivs
stc
pop
cmp
push
fidivs
xchg
mov
xor
ss
mov
mov
popf
out
xchg
stos
test
add
pop
sahf
outsl
adc
sub
fldcw
jmp
fiadds
lcall
aam
jno
inc
stos
mov
cmp
roll
inc
loop
jg
pusha
in
add
call
fmull
fsubrl
repnz
and
call
pop
nop
mov
push
ljmp
inc
icebp
dec
scas
lds
jae
aaa
sub
sub
ljmp
stos
dec
push
rep
pop
cmpl
inc
sti
push
insb
addr16
jecxz
fisubl
bound
ret
les
lods
mov
cmp
loope
ss
xor
cmpsb
inc
testb
jno
loope
scas
xor
lahf
pop
lcall
sbb
mov
stos
jnp
hlt
sub
cmp
les
pop
mov
lods
push
addr16
cmp
test
shrb
xchg
mov
arpl
cli
pop
mov
imul
bound
das
sub
outsl
mov
and
mov
jne
das
jg
sti
jnp
or
cmp
sbb
cmp
scas
mov
push
shlb
fcomi
movsb
jg
addl
jns
adc
divb
push
sub
mov
int
adc
mov
imulb
sti
pop
ss
rolb
xchg
out
pop
xor
cmpsb
mov
ss
mov
mov
inc
jmp
out
and
inc
add
pop
mov
inc
push
push
popaw
pop
mov
cli
push
ds
stc
xchg
push
mov
lret
xor
xor
lret
adc
in
add
sahf
xor
push
data16
test
mov
out
daa
les
iret
mov
fistpl
movsb
push
inc
ds
pop
sbb
into
in
rcr
dec
mov
out
mov
les
lock
inc
or
cwtl
push
repnz
jmp
cmpb
mov
jbe
call
xlat
dec
push
rcrl
sar
dec
cwtl
or
sub
les
jmp
js
mov
clc
sub
pusha
push
add
mov
mov
mov
clc
jmp
mov
dec
jb
leave
sub
aas
lcall
push
repnz
jmp
stos
adc
xor
inc
out
xchg
arpl
add
xor
ljmp
mov
mov
lret
add
sbb
cmp
imulb
pop
push
jno
loope
loop
jp
aaa
adc
out
cmpsl
pop
sbbb
sbb
add
arpl
lds
stc
adcb
insb
dec
ljmp
cs
pop
jg
enter
les
repnz
xor
loopne
ficomps
arpl
push
jmp
dec
fiadds
shll
jns
mov
lock
mov
xor
cld
cmp
scas
fiaddl
pusha
sub
pop
inc
sbb
fnstenv
cmp
stos
fldcw
mov
out
sub
add
or
ret
cld
insl
push
add
std
fmull
mov
lods
sub
lds
adcl
rorl
pop
dec
mov
jae
mov
inc
sbb
xor
sub
inc
data16
outsb
std
movsl
lds
add
pop
dec
aas
shl
imul
pop
xchg
fcomp
inc
out
fsubr
sarb
lahf
scas
pop
push
cmc
add
dec
mov
fimuls
imul
hlt
rolb
add
cli
out
jno
int
sarl
inc
insl
addb
loopne
es
fcomip
dec
movsb
mov
cmp
or
xchg
push
push
out
nop
enter
mov
xor
mov
inc
push
insb
pop
std
cld
push
push
mov
xor
jmp
filds
lds
mov
es
pop
js
sahf
popa
es
iret
push
scas
in
cwtl
notb
xchg
push
sub
sub
imul
push
inc
scas
jcxz
xchg
jbe
inc
jg
jbe
int3
adc
jne
mov
pop
lods
dec
or
dec
aam
pop
xor
mov
dec
leave
sbbb
cmp
jns
xchg
jae
idivb
nop
repz
and
mov
xchg
imul
pop
int
push
fildl
pop
fisubrl
outsl
lods
lahf
sbb
mov
imul
push
mov
clc
das
add
push
jnp
mov
jo
cmp
jbe
pop
fistpl
xchg
in
cmc
sbb
in
push
test
dec
add
sub
in
pushl
sub
mov
out
fcoms
push
xchg
cmp
stos
test
std
js
bound
das
and
inc
test
add
push
inc
scas
mov
in
mov
sub
mov
xor
push
jnp
addb
les
les
jecxz
mov
movsb
push
loopne
cs
mov
push
test
dec
xor
scas
mov
inc
jp
lret
jne
insb
and
xchg
mov
and
movsb
sub
std
jg
lahf
inc
and
mov
cmp
xor
jb
push
add
std
xorb
cmpl
dec
sbb
lds
sbb
lret
or
popf
test
out
fimuls
or
sub
xchg
and
cld
xor
in
mov
adc
adc
ja
mov
jae
ja
mov
push
test
xor
scas
mov
fs
out
cld
mov
icebp
cmc
add
push
mov
pop
push
ret
xchg
adc
cli
outsl
inc
adc
adc
repz
in
dec
jp
xor
dec
add
push
mov
lahf
subps
or
jnp
in
mov
notb
cmp
arpl
mov
xchg
fildll
dec
aad
inc
std
scas
sbb
xor
sub
mov
cmc
in
cli
lods
cs
jge
scas
aas
pcmpeqw
adc
dec
mov
mov
cwtl
sti
enter
jo
push
dec
jp
push
pusha
int3
add
jb
aas
sbb
out
out
insb
test
loopne
and
scas
sahf
pop
mov
data16
mov
add
adc
xchg
aaa
jb
out
div
jecxz
out
jnp
dec
fcmovnu
jae
mov
in
imull
push
xchg
push
pop
inc
pop
js
push
movsb
pop
cs
xchg
jp
dec
imul
jge
adc
mov
adc
sarb
sbb
cmp
insb
call
pop
add
call
iret
loopne
mov
daa
dec
out
data16
adc
lret
adc
add
cwtl
dec
dec
pop
cmp
add
fs
dec
xchg
ljmp
pop
std
and
fs
test
stos
fs
test
inc
jno
mov
sarl
gs
mov
out
cmpsl
jns
and
in
pop
adc
or
sub
insb
insb
out
lock
imul
push
stos
cmp
insb
push
cwtl
sbb
js
movsbl
jg
mov
dec
hlt
ss
shlb
outsl
gs
sub
dec
xchg
dec
rdpmc
pop
pop
out
adc
sbb
jnp
outsb
div
cmp
xor
hlt
sbb
xchg
cli
rolb
scas
jecxz
add
sub
lods
xor
push
or
push
mov
add
or
subl
mov
lds
inc
dec
loop
xchg
aas
push
clc
lea
sbb
pushf
mov
int
int
cmp
cli
mov
mov
jp
sbb
fs
int3
pop
movsb
in
and
cmp
repnz
js
jo
add
mov
add
ficoml
mov
xlat
sbb
add
pop
aam
fcoms
loope
icebp
ljmp
outsl
inc
test
mov
fstps
mov
ds
movsl
shll
sbb
adc
adc
mov
lods
scas
insl
dec
mov
aad
fisubrs
nop
je
cmp
cmc
jb
mov
fimull
push
int
mov
dec
add
pop
xchg
pushf
outsl
dec
cmp
sti
mov
fbstp
jp
ret
stc
mov
outsl
xchg
lods
mov
cmpsb
and
jg
adcb
sbb
ret
xchg
pop
lahf
lods
lock
add
stc
pop
xchg
jae
cmpsl
scas
sbbl
push
sbb
dec
movsb
in
jmp
inc
stos
add
sbbb
adc
lock
jmp
pop
ss
sbb
repnz
jmp
out
jno
lahf
in
cmp
jo
sub
xchg
sub
push
sub
hlt
xchg
mov
setae
mov
xchg
jnp
movsb
and
movsb
sub
incl
pop
dec
xorl
lret
mov
pop
fadds
pushf
aas
subl
dec
nop
std
cmpsl
popf
xchg
outsl
add
test
data16
pop
int
push
lahf
call
lcall
test
adc
inc
aas
add
xlat
xchg
push
xchg
jnp
pop
dec
mov
sarb
sbb
enter
popf
xchg
andl
bsr
push
inc
adc
jns
mov
lods
orl
mov
fistps
dec
mov
out
xor
inc
jnp
pop
sbb
push
in
gs
sub
push
sbb
mov
roll
out
add
jbe
xchg
inc
ds
jno
fsubrs
je
cmp
mov
jno
sub
sub
popf
sub
cmpsl
cld
jns
fstps
js
inc
cli
rcll
andb
and
jg
iret
dec
mov
ret
in
ja
or
mov
xor
scas
outsb
int3
adc
dec
sbb
mov
rcr
popa
imul
jmp
idiv
pop
cmp
sahf
and
repz
repz
in
mov
cld
xchg
jge
mov
adc
add
imul
imul
notl
popf
adc
sbb
jmp
and
insb
adc
jg
fsincos
js
sub
cmc
aad
add
adc
or
lds
je
xor
sti
cmp
dec
hlt
push
dec
inc
mov
add
repz
insl
and
xchg
sbb
mov
lret
jne
push
test
xchg
loop
sahf
test
xchg
shll
out
adc
hlt
jecxz
adc
mov
cwtl
sub
push
mov
fwait
jb
push
scas
mov
jp
xlat
ja
mov
mov
lret
cltd
sbb
mov
mov
lret
pop
test
mov
add
pop
mov
xchg
mov
mov
cmp
mov
sti
jge
std
jno
cwtl
jns
jecxz
mov
push
cltd
dec
imul
mov
xor
cmp
adc
add
pop
rorb
rcr
shlb
mov
mov
jne
xlat
pushf
cmp
jo
lds
in
in
aas
clc
aaa
xor
cltd
enter
incl
jne
jl
nop
pop
rorb
ss
outsl
xor
jle
jle
push
cmp
jae
dec
push
or
mov
pop
xor
mov
dec
xchg
add
dec
mov
jp
fildll
daa
inc
pop
cli
xchg
pop
pusha
jle
xor
out
push
sar
aaa
push
sub
sbb
out
js
mov
pop
add
mov
mov
cmp
fidivl
out
cmpxchg
xor
cmpsb
test
imulb
loope
or
fmuls
filds
mov
xor
adc
jbe
mov
jns
mov
ror
cltd
xor
pop
jg
jecxz
mov
mov
and
and
popa
sub
divl
test
cli
fs
arpl
fnstsw
xchg
push
call
sbb
outsl
aad
adc
lret
outsl
das
popf
das
into
fwait
cld
in
xchg
lea
sbb
add
push
pop
aad
mov
ds
xchg
xchg
ss
movsl
popf
arpl
fildl
xchg
and
subl
sub
sbb
xor
pop
pop
pusha
pop
dec
mov
cli
gs
loopne
fldcw
fisubs
mov
pop
add
xchg
leave
mov
jns
jo
daa
cmpsb
sbb
jg
or
test
mov
or
xchg
or
xor
push
mov
xchg
fninit
and
shlb
cld
in
cmp
lods
pop
push
cmc
cmpsb
and
mov
lfs
insb
loope
fcom
adc
out
add
pop
push
add
lret
std
mov
aad
loope
dec
fisubl
popa
shll
outsl
jno
adc
pop
fs
rolb
pop
push
dec
pop
and
adc
adc
jns
daa
or
js
int
es
sub
push
cltd
push
mov
mov
lds
je
dec
cmpsb
mul
pop
inc
ljmp
xchg
adc
sti
xchg
ja
dec
mov
out
int3
addb
icebp
mov
adc
es
mov
sub
mov
in
mov
cmp
dec
mov
push
push
insb
fs
sbb
cmp
cmp
pop
jbe
decb
push
lret
xchg
push
add
sub
pop
ljmp
hlt
xchg
cltd
xchg
jle
adc
inc
int3
push
addl
xchg
lret
stos
and
fildl
orb
aam
mov
mov
push
dec
repnz
inc
adc
les
leave
jo
in
xor
cs
add
les
add
cmp
shll
cmp
xor
xor
mov
push
mov
jecxz
mov
lret
or
lahf
das
cltd
negb
jmp
sbb
push
lret
loope
pop
adc
xlat
mov
jno
dec
fisttpll
hlt
sub
fistpl
mov
movsl
ljmp
in
test
xchg
xchg
stos
or
fwait
jbe
mov
rol
lods
add
mov
dec
lcall
push
push
inc
cmp
outsb
sar
cmpb
xor
repnz
popl
pop
repnz
pop
pushf
xlat
jl
jp
cwtl
xchg
popf
inc
xchg
add
movsl
pop
gs
adc
stc
push
iret
cmp
jo
jno
adc
fsub
xor
std
mov
push
xor
xor
xor
cld
sbb
stos
ret
fisubrs
and
pushf
xor
or
dec
test
jno
jge
je
jo
push
out
push
inc
pop
push
mov
fwait
negb
xchg
lcall
sti
pop
mov
rcrl
add
jnp
je
and
subb
cmc
shl
bound
push
rcrl
mov
loop
mov
mov
push
mov
mov
std
ljmp
lock
dec
pop
jg
mov
inc
mov
pop
sub
push
mov
das
insl
mov
movsb
xchg
lds
cld
push
xor
leave
mov
mov
int3
imul
les
jg
cli
push
clc
bound
mov
enter
xchg
cmp
sbb
push
pop
in
movsl
sub
mov
xchg
out
scas
nop
adcb
in
sub
mov
push
and
aad
jne
jne
adc
pop
adc
xor
add
push
push
mov
pop
pusha
in
fbstp
and
pop
xor
sbb
sub
je
adc
cmp
mov
and
push
clc
adc
divl
dec
xor
jp
dec
inc
xor
sub
rolb
inc
fstpl
mov
adc
iret
cmpsl
sbb
rcrl
data16
jge
loopne
rol
cmp
pop
xor
push
outsb
fsubr
in
aas
sub
into
mov
xchg
stos
aad
jmp
inc
pop
rclb
das
mov
cmpsl
push
xor
inc
fwait
mov
mov
cmc
mov
leave
sub
push
sbb
and
sarb
mov
and
outsb
loope
lahf
jmp
test
insl
pop
lcall
stc
cmpl
sarl
loope
add
mov
xor
mov
sahf
add
flds
sub
xchg
mov
int
jo
add
scas
pop
loope
xchg
test
cmc
roll
ficoms
insl
imul
insl
stos
arpl
mov
ret
lods
or
out
push
push
cli
xchg
xchg
loope
rclb
insl
test
icebp
mov
stos
movsl
xor
jb
adc
xchg
inc
pop
sbb
jmp
mov
ficoml
jle
dec
fsubl
vpshufhw
test
and
push
int
scas
mov
ss
mov
int
ret
rclb
dec
push
jmp
repz
test
jno
pop
mov
adcb
mov
call
js
aaa
ja
inc
divl
adc
testl
call
test
idiv
add
push
sub
cmp
lret
popf
test
xchg
loope
mov
push
stos
fwait
rclb
xchg
mov
daa
mov
push
stos
xchg
and
mov
dec
outsb
and
dec
adc
out
mov
dec
xor
fs
inc
je
dec
xor
ret
lods
mov
lds
sub
dec
out
mov
xchg
movsl
adc
sti
jg
dec
fistpl
sbb
add
mov
sbb
add
lcall
scas
adc
mov
rorl
andl
xor
sub
xchg
pop
dec
push
std
xchg
mov
mov
das
les
mov
shlb
in
sub
or
lret
aas
fcoml
sub
lods
cmpsb
dec
mov
andb
mov
ret
or
test
dec
dec
lret
inc
mov
imulb
inc
mov
dec
cmp
dec
or
roll
rcrl
inc
nop
mov
lret
pop
repz
decl
addr16
clc
mov
sbb
mov
sub
stos
xlat
adc
repz
cmp
std
push
cmp
jle
xor
stos
pop
cmp
and
inc
sub
daa
stc
jnp
xchg
add
mov
or
cmpl
mov
xchg
ds
xor
nop
lret
insl
lahf
jns
sbb
mov
adc
in
paddusb
cli
mov
add
mov
out
dec
dec
pop
cmp
das
pop
aaa
and
fs
insl
popf
and
popa
cmc
cld
inc
mov
pop
cld
jns
mov
cmp
pop
pop
mov
call
mov
push
call
adc
xchg
divl
cltd
test
cwtl
jo
xor
leave
stc
scas
imul
mov
into
insb
lods
lods
add
mov
jns
int
js
bound
icebp
add
out
ficoml
jnp
cmp
pop
xchg
loopne
mov
and
ret
fmull
into
mov
jae
in
hlt
dec
aad
loop
enter
ret
in
pop
rcrb
fdiv
xchg
outsb
mov
incb
sub
mov
mov
jg
shrl
dec
ss
mov
mov
jae
faddp
shlb
mov
daa
mov
xor
pop
push
xchg
dec
cwtl
mov
or
jne
sub
out
pop
mov
ret
fnstsw
adc
pop
and
or
mov
call
es
test
push
rolb
jle
adc
mov
sbb
lds
out
xor
loope
add
jecxz
lods
cmpsb
sub
sbb
push
jecxz
sub
or
movsb
sub
dec
push
mov
or
ds
or
mov
lret
sahf
xchg
fstl
cmp
xlat
cld
arpl
mov
pop
inc
jns
dec
imul
sub
cwtl
xor
add
fs
and
js
fisubrl
mov
pop
pop
jno
dec
dec
pop
jne
jmp
andl
hlt
in
xchg
jl
repz
js
cs
clc
or
cmpl
inc
lahf
pop
out
cmpsl
add
in
inc
inc
mov
cmc
in
popf
outsl
mov
xchg
roll
lcall
sub
jns
sub
pop
xchg
mov
in
cmpsl
mov
and
loope
dec
pop
pop
lahf
bound
ljmp
dec
lcall
jbe
cmpl
cwtl
mov
sbb
imul
pop
jno
stc
arpl
imul
adc
push
push
imul
lret
push
sbb
mov
cmp
mov
mov
rcll
pop
mov
add
jno
mov
inc
ret
xchg
mov
fstl
inc
mov
ds
imul
mov
shl
fists
sub
lock
lock
inc
fmul
sbb
scas
xor
xchg
aad
adc
stos
cwtl
mov
ljmp
mov
hlt
sub
test
push
fimull
movb
outsb
fisttps
mov
dec
push
pop
scas
rol
sahf
sub
cli
adc
ss
push
xor
pop
push
ffreep
xor
inc
xchg
and
mov
sub
mov
negl
jnp
out
aad
adc
fldt
jno
repz
xchg
fcomps
out
pop
mov
inc
mov
insb
inc
inc
popf
xchg
jl
push
sub
sub
pop
pop
nop
test
sbb
mov
inc
or
jns
xchg
and
jne
add
xor
dec
out
adc
call
cmc
sbb
pop
je
mov
xchg
sub
cmpb
imul
xchg
push
ds
pop
xchg
pusha
cmpsb
repz
sub
imul
out
mov
mov
mov
ljmp
imul
push
or
mov
mov
xor
adcb
cmp
sbb
icebp
insl
mov
mov
xor
sbb
add
sbb
or
adc
and
cld
movsl
invd
push
imul
shr
lods
push
test
daa
xchg
sub
test
mov
loopne
dec
xor
pop
mov
dec
adc
js
xchg
fs
cmp
lret
ret
xor
cmp
dec
fsts
pusha
inc
push
and
shl
mov
std
rclb
cld
xor
or
mov
push
xor
adc
sti
aaa
and
test
lods
push
push
xchg
scas
and
test
push
adc
or
mov
add
ss
sbbb
jg
loop
test
sbb
addb
movsl
push
push
lret
pop
repnz
jo
push
adc
daa
mov
gs
outsl
repz
or
jbe
clc
cmpsl
test
or
pop
sbb
sub
jbe
addr16
imulb
imull
cmp
mov
jne
sahf
dec
inc
push
and
daa
gs
dec
sahf
adc
mov
xor
mov
mov
jae
nop
inc
movsb
sbb
jae
mov
fs
lahf
dec
scas
cwtl
mov
iret
lds
push
mov
rcll
inc
cmp
push
gs
test
popf
ficompl
lret
leave
loop
lcall
mov
das
mov
scas
insl
ret
sbb
or
cmp
popa
in
cld
push
jnp
sub
xchg
dec
xchg
dec
push
repz
repnz
nop
or
sarl
cltd
sti
les
mov
test
dec
or
sbb
cmc
push
incb
daa
aaa
dec
cmpsl
adc
mov
roll
dec
and
stos
cli
into
dec
loopne
lock
jbe
add
popa
inc
stos
out
pop
fdivrl
in
into
stc
cs
enter
sub
cmp
lahf
jmp
xor
das
out
lds
mov
mov
xchg
sub
xchg
mov
cltd
loope
hlt
negl
fdivrs
insb
cmp
nop
jne
stc
aam
or
or
ja
adc
sbbl
cmp
and
inc
xor
pusha
xchg
jb
sbb
lods
fucom
sbb
pushf
push
mov
mov
adc
push
sbb
jle
jno
aas
ljmp
inc
sbb
fnstcw
mov
xchg
les
addb
xor
sub
fistpll
in
lds
pop
mov
popa
sbbl
outsb
sub
cs
jnp
push
mov
and
cmpl
and
jmp
enter
jo
pop
pop
cs
xor
rcrb
mov
call
or
popa
push
cmp
jmp
mov
mov
pop
cmp
cmp
popf
or
adc
cltd
or
lock
decl
jae
fisttpl
xor
cmp
andl
xchg
push
pop
outsb
repnz
inc
cmp
dec
fistl
push
cs
xor
mov
clc
jmp
cmp
cmp
inc
ljmp
jg
cs
cld
int
fcmovne
out
pop
fcoml
inc
cmp
enter
xchg
je
cmpsl
cmpsb
test
loope
filds
push
lcall
bound
or
fnstsw
mulb
inc
movl
stc
mov
test
cmpsl
ds
add
mov
add
mov
adc
subl
adc
ss
subb
xchg
pop
mov
into
jecxz
dec
add
xor
lods
pushf
jp
out
xchg
test
sub
mov
ficoms
lods
push
adc
xor
in
icebp
insl
adcl
xchg
arpl
and
mov
pop
inc
xor
add
inc
dec
inc
mov
scas
or
pushf
or
mov
cli
lock
sbb
add
xor
xchg
mov
out
outsb
inc
enter
mov
push
pop
nop
test
xor
sbb
mov
xor
jp
mov
xor
mov
sti
mov
in
push
mov
xchg
push
mov
cmpsl
adc
sarl
sub
push
add
popf
pop
push
ds
push
inc
pop
rorl
and
push
cmp
cmpsl
shll
pop
insl
lahf
fdivrp
cmp
mov
mov
xor
jmp
pushf
js
popa
xchg
push
je
mov
in
dec
int
popf
inc
fsts
and
in
and
inc
ljmp
test
arpl
inc
sbb
dec
cmpsb
xor
outsb
jb
ja
fdivrs
stos
push
lds
cli
cld
imul
rep
aaa
addr16
out
out
mov
add
pop
cmp
adc
xor
xchg
mov
inc
jns
dec
xchg
test
push
push
outsl
inc
xor
shrb
push
cmc
outsl
addr16
dec
dec
notb
sbb
cld
stos
mov
jo
ret
mov
push
xor
int
mov
adc
or
nop
jl
out
jle
xor
lahf
jne
in
test
mov
pop
ljmp
mov
leave
dec
mov
addr16
sub
mov
jne
xchg
enter
push
in
movsb
mov
jbe
mov
fs
jge
das
dec
push
lahf
and
rcl
and
addr16
test
cltd
cs
rcl
or
mov
dec
sarb
dec
mov
sub
jno
es
test
or
lods
outsb
push
repnz
mov
ss
mov
call
popa
das
out
sub
addr16
frstor
push
mov
xor
push
mov
in
or
popf
lahf
fiadds
bound
std
xorl
icebp
mov
mov
and
mov
mov
popa
adc
jl
push
push
and
test
adc
out
pop
and
stc
pop
les
cmpsl
dec
sti
shrl
ret
jae
mov
roll
int
mov
xlat
mov
subb
jo
cmpsb
int
adc
dec
aaa
repz
popf
push
xchg
mov
inc
mov
pusha
mov
into
push
and
in
pop
sub
sub
lret
lock
or
adc
mov
das
push
sub
and
pop
lea
testb
adc
ss
stos
adcl
lods
mov
out
in
jmp
xor
dec
mov
sti
pushf
outsl
lock
xlat
mov
and
and
jns
imul
or
push
xor
mov
out
mov
pop
iret
fldenv
jnp
lea
out
and
filds
movsb
pop
movsb
lahf
and
lret
xor
jo
sbb
xor
cmp
lcall
mov
sbb
test
xorl
push
fldenv
push
jnp
xor
movb
cmp
cmpsl
test
xor
cmpsl
dec
fcmovnbe
jns
fs
dec
push
sbb
bound
mov
xchg
lds
push
or
cmp
dec
mov
pushf
mov
test
mov
leave
sahf
cmpsl
in
call
popf
stos
inc
leave
rcrb
mov
sub
insb
pop
imul
pop
rorl
jne
ss
pop
fldenv
pop
xchg
push
sbb
imul
add
lds
jmp
jbe
sti
fimull
loop
pop
nop
push
icebp
stos
call
mov
and
mov
out
lret
xchg
sbb
xor
inc
arpl
cmp
rorl
add
inc
das
pusha
xchg
iret
cwtl
jmp
push
flds
daa
cwtl
jne
push
arpl
aam
int3
push
push
stos
aad
in
xchg
sub
inc
lea
pop
mov
imulb
adc
lahf
sub
adc
add
fs
dec
outsb
popf
jne
jae
jb
rolb
dec
lods
data16
jne
xorl
pop
cmp
cmpsb
pop
add
jnp
enter
lcall
insb
ja
hlt
fistps
in
lret
mov
in
fwait
dec
test
push
push
adc
cmp
jne
loopne
and
mov
xchg
add
sbb
dec
fnstsw
jge
fwait
inc
sahf
dec
cmc
or
add
push
mov
pop
xor
icebp
mov
adc
imul
sahf
stos
mov
xor
addr16
movsl
jmp
pop
pop
ret
adc
sarb
testl
icebp
cmp
cld
popa
dec
popf
sbb
and
or
shrl
xor
pop
sub
les
cmp
sub
out
das
jg
cmpsl
xchg
xchg
jge
inc
int
clc
mov
out
mov
add
jl
iret
push
jp
sub
mov
test
lods
popf
in
into
gs
ret
repnz
stc
repz
loop
test
push
inc
shrl
js
pop
pop
or
outsb
lcall
into
mov
jnp
jae
ja
push
out
or
lock
push
fists
stos
fsubrl
cmp
jnp
fnstenv
xchg
jl
lock
movsb
mov
sbb
sub
call
cmp
cmpsb
or
jns
xorb
mov
or
neg
scas
cwtl
jnp
push
mov
push
aas
and
and
xchg
std
roll
scas
repnz
imul
repnz
jns
mov
repz
dec
enter
dec
mov
adc
pop
hlt
ret
push
mov
fildll
mov
lds
orl
jnp
cwtl
jo
gs
jle
out
addb
lock
jae
cmpsl
add
movsb
popa
jle
xchg
lock
lock
cmpsl
cltd
inc
sub
enter
add
xor
adc
pop
mov
cs
or
shlb
sbb
push
xchg
repz
scas
ret
cmp
jmp
jno
mov
sti
dec
ret
jle
push
pop
sbb
xchg
in
dec
scas
pop
pushf
xlat
fcmovu
add
iret
fistpll
ss
iret
loopne
cmp
or
in
arpl
les
aam
sarb
mov
cmp
arpl
andb
adc
add
xchg
sbb
jge
or
jns
jne
out
ret
movsl
test
xor
and
xor
popa
scas
scas
idivb
inc
test
daa
out
stos
ret
xchg
repnz
adc
xchg
jnp
insl
imul
xchg
xchg
int
das
jge
pop
int
pusha
dec
sub
cmp
inc
sbb
pop
sbb
fbld
idivb
and
rsqrtps
jns
aaa
mov
xchg
frndint
notl
arpl
out
xor
testb
push
xor
adc
orl
xchg
inc
sbb
sbb
and
lds
lret
cwtl
push
mov
mov
movsb
movsb
pop
push
in
in
mov
and
rorb
in
mov
or
sbb
in
ret
test
xchg
lds
pop
sbb
out
cmp
mov
or
imul
push
adc
push
sub
xor
repnz
jle
sahf
xchg
insl
or
mov
clc
dec
push
sahf
jmp
das
mov
popl
inc
add
or
cmp
imul
pop
pop
pop
hlt
das
cltd
sub
pop
idivb
loop
sub
aad
arpl
jo
cmp
inc
jns
test
pop
mov
lret
les
add
jns
pushf
push
jmp
repnz
jnp
fisttpl
xchg
stc
pushf
ficomps
jbe
push
push
mov
adc
popa
iret
xor
ret
icebp
jmp
mov
xor
or
and
je
mov
lods
out
shrb
add
mov
add
mov
aas
ret
or
push
daa
cmpsb
hlt
or
sub
jmp
jb
jnp
jmp
jo
movsb
hlt
fwait
pushf
ljmp
pop
pop
out
xor
sti
mov
pop
enter
fstps
sarl
out
sarb
jge
lea
call
repz
int3
fwait
mov
fs
jns
push
bound
inc
call
xor
jno
inc
scas
xchg
push
fnstsw
aam
mov
jmp
xor
mov
pusha
cmp
pop
xchg
out
push
push
push
sub
je
pop
xor
mov
inc
les
mov
and
push
sub
stos
mov
jno
xchg
imul
xchg
outsb
sbb
es
shlb
cltd
inc
mov
rcr
test
pop
push
and
or
and
in
add
pusha
imul
or
out
into
push
cli
adc
rolb
dec
sub
movsl
fistps
cmpsl
lahf
leave
outsl
aad
lret
or
mov
outsl
mov
pop
pop
lods
lcall
jns
movb
mov
mov
dec
jnp
or
mov
sahf
lods
adc
lret
jle
mov
aam
ficoms
mov
jle
pop
in
xchg
in
jno
scas
jae
mov
fistpl
mov
mov
add
sub
add
cmpsb
mov
add
data16
sub
cld
dec
bound
mov
jecxz
jnp
and
xchg
orb
es
icebp
data16
data16
mov
sub
jecxz
subb
scas
add
pop
pop
lds
mov
push
xchg
pop
add
mov
sbb
push
mov
and
add
arpl
mov
test
add
scas
shrl
xchg
jb
jecxz
xchg
movsl
mov
js
adc
ja
mov
dec
pop
or
fs
scas
pop
test
lcall
push
ss
and
sbb
pop
jns
popa
adc
add
inc
mov
and
aaa
dec
xchg
fldl
sub
movsl
jo
shll
push
sbb
cmp
mov
and
push
lock
push
jge
jae
insl
inc
jge
lea
ljmp
cli
ficompl
xchg
aaa
sbb
bound
movups
mov
sub
dec
insl
mov
daa
fistpll
add
loope
pop
mov
jo
fmuls
xlat
repnz
or
jo
and
shll
inc
cmpsb
lods
test
inc
and
and
lock
cmc
mov
popf
daa
cmp
push
cmp
out
add
sahf
mov
inc
mov
push
stos
jbe
jmp
fsubrs
xchg
sarb
mov
test
test
mov
push
mov
or
sbb
mov
cmp
mov
sbb
jl
push
push
adc
scas
test
movsb
test
test
lods
lahf
jbe
dec
fwait
sahf
fidivs
dec
mov
inc
jge
and
cmp
pop
test
pop
rcl
cld
or
fimuls
ss
call
adc
mov
hlt
pop
sbb
mov
out
rcl
adcb
jg
test
xchg
stc
mov
nop
and
ret
xor
mov
cli
int3
inc
or
test
push
ret
inc
mov
lahf
call
sbb
adc
popl
fisttpl
cmpsb
sbb
pop
push
jmp
hlt
outsl
movsl
or
loopne
pop
jo
jge,pt
sahf
fstpl
sbb
bound
xchg
inc
pusha
sub
shlb
push
lds
and
or
lock
mov
xchg
icebp
or
repz
dec
bound
loopne
pop
jb
mov
idivb
iret
xor
test
incl
push
xor
or
dec
adc
jmp
lock
lods
mov
push
push
enter
mov
sub
test
adc
aaa
mov
push
pop
lea
shll
std
and
and
mov
fstl
mov
js
daa
lods
cmp
enter
das
xchg
pop
adc
sbb
repz
hlt
imul
push
insb
inc
add
sbb
or
push
xchg
inc
aas
push
sub
cmp
and
imul
lret
pop
iret
hlt
aaa
xchg
insl
mov
clc
test
movsb
mov
sarl
test
push
pushf
popa
and
sbb
add
adc
pop
sub
dec
mov
fsub
pop
xor
sysexit
test
mov
adc
pop
out
movsl
mov
int
inc
lock
and
sbb
mov
ret
mulb
xchg
es
cmp
cmc
bound
xchg
test
inc
jp
test
lods
ret
movsl
xchg
push
sahf
sbb
dec
das
scas
jbe
cmp
stos
add
lahf
addr16
insb
mov
jnp
cmp
add
inc
push
and
adc
adc
jecxz
jns
dec
shl
pushfw
inc
add
add
mov
pop
jge
inc
cld
gs
mov
lods
pop
sti
out
or
ja
sbb
add
dec
push
cld
and
pushf
adc
iret
xor
push
push
in
cmp
scas
mov
and
loopne
mov
jecxz
xor
xorl
pop
mov
pop
icebp
cmp
xchg
out
out
add
xchg
imul
mov
cmp
mov
xlat
add
push
sub
xchg
shrb
mov
push
test
loope
repnz
shll
rcl
stos
clc
movsb
sub
jo
xor
sbb
sahf
aam
xchg
cltd
inc
jmp
rorb
adc
add
in
pop
mov
test
ret
adc
inc
movsl
movsb
scas
test
mov
push
push
pop
les
scas
fcmovnbe
jmp
leave
mov
jbe
mov
ja
mov
mov
mov
add
pop
enter
stos
cld
cwtl
sti
lret
cmpsb
or
rcrl
pop
and
out
cltd
dec
sbb
or
sbb
lds
xchg
lret
out
fadd
gs
into
mov
outsl
aam
sbb
lcall
mov
jno
dec
int3
adc
insl
jge
aam
std
in
push
inc
mov
js
mov
fistpl
test
sub
pop
int
pop
mov
sub
nop
subb
push
mov
and
mov
icebp
dec
fimuls
iret
std
ljmp
ret
jmp
loop
xchg
lods
lahf
or
add
push
pop
sahf
fmuls
sub
bound
fxch
add
dec
jae
sub
adc
mov
out
sbb
call
jno
sub
xchg
push
fwait
ror
scas
or
xor
cmc
push
pop
xchg
test
inc
insl
add
fwait
add
or
insl
pop
or
adc
in
cltd
xchg
or
sub
mov
cmp
repz
xor
das
cltd
dec
jecxz
stos
dec
bound
mov
stos
jle
dec
jne
cli
enter
jne
push
xchg
cmp
in
push
cmpsb
cmp
xor
in
popf
inc
in
ret
shlb
scas
iret
push
pop
call
inc
in
dec
loope
in
lods
setno
xchg
mov
ret
jmp
mov
mov
leave
cmc
mov
aad
jns
cmp
adc
cmpsl
into
fs
std
stc
loopne
sub
jg
sub
add
dec
and
add
push
incl
popa
aas
push
xchg
popa
sti
inc
and
insb
mov
inc
dec
mov
loopne
mov
cltd
sbb
cld
in
lcall
xlat
xor
pop
mov
les
dec
mov
mov
addr16
test
aad
xor
insb
dec
jmp
das
popa
lods
add
leave
sub
adc
es
mov
sub
mov
pop
loope
jecxz
test
dec
jne
pop
xchg
call
mov
push
inc
popa
lea
xor
dec
add
adcl
cmp
jg
and
fisubrs
mov
jb
lret
addr16
xor
dec
jno
lcall
loope
ret
xor
into
std
dec
testb
cmpsl
scas
aas
mov
jne
sarb
mov
arpl
out
dec
mov
mov
sub
add
dec
mov
movsb
adc
ss
fcompl
ds
pop
dec
adcl
rolb
cmp
inc
xchg
xchg
sub
push
repz
pusha
xor
dec
clc
add
jmp
mov
dec
pop
xchg
in
icebp
add
push
jp
mov
nop
mov
adc
mov
arpl
loopne
sbb
cmpsb
jbe
stos
push
jp
sub
jg
and
mov
pop
pusha
jae
ss
jnp
jl
jecxz
mov
mulb
repz
xchg
ret
jno
inc
aam
dec
clc
push
popf
push
push
out
jp
cmp
pop
sbb
or
cltd
dec
xchg
sub
rcrb
cmp
loopne
push
mov
call
or
jp
cmp
and
lock
push
fdivrl
aam
dec
xchg
xor
std
dec
rclb
nop
push
out
clc
xchg
cmp
arpl
xchg
dec
movsl
inc
adc
cmp
mov
or
inc
pop
dec
inc
sahf
dec
pop
mov
adc
mov
dec
xchg
pop
stos
push
lcall
sub
add
pop
sbb
push
js
cmp
fstpt
xchg
mov
loope
mov
pop
or
cwtl
imul
sbb
out
adc
jl
adcb
cld
arpl
cmpsb
jge
xchg
inc
fwait
out
jno
es
ds
fnstenv
sub
jp
fnstenv
xchg
pop
jo
and
repnz
sub
mov
add
fcoms
cli
dec
or
sbb
std
add
sbb
cmp
push
lcall
mov
pop
dec
ss
bound
ljmp
inc
ds
int3
cli
add
or
sub
mov
pushf
pop
inc
lret
lcall
gs
mov
and
pop
mov
push
sub
and
neg
lods
dec
aas
imul
push
pop
pop
mov
mov
pop
xchg
not
cmp
jl
ds
push
and
mov
outsb
arpl
xor
fidivl
jb
inc
sbb
divl
push
cmp
push
or
jmp
xchg
aam
xor
into
cmpsb
push
or
and
daa
xlat
xor
adcb
dec
inc
cld
and
and
sub
mov
iret
popf
into
and
adc
dec
icebp
mov
push
fwait
loop
push
cmpsl
sarb
lcall
in
fiadds
jbe
jmp
leave
hlt
xchg
cmp
scas
pushf
and
adc
cmp
sub
push
jnp
fdivl
jbe
int
and
lds
test
cs
push
ss
pop
pop
fidivs
aas
insb
shr
mov
arpl
loop
cmp
rcr
aaa
ljmp
lods
in
sub
add
sub
dec
push
jne
inc
jo
imul
xor
leave
fistl
ret
add
add
pop
mov
scas
mov
inc
and
int3
adc
fists
out
xchg
or
xchg
sbb
aad
mov
push
adc
xchg
lcall
inc
dec
fucomi
add
mov
mov
pop
mov
adc
jp
mov
inc
fs
sbb
mov
mov
das
push
scas
cmp
sbb
mov
add
jle
inc
into
pop
lcall
add
ret
shlb
in
xor
inc
idivl
cmp
cwtl
fcmovu
jmp
leave
push
cmp
xor
adc
adc
and
lds
rcrb
aaa
mov
inc
lahf
movl
mov
mov
out
int3
mov
sarb
xor
mov
xlat
and
inc
movsl
sbb
adc
arpl
xor
mov
or
daa
mov
sub
sahf
hlt
dec
and
or
jnp
fisubl
push
mov
sbb
leave
mull
mov
sbb
dec
in
push
imul
int
pop
sub
add
inc
inc
out
out
jb
adc
mov
push
popf
imul
lock
dec
into
jmp
cmp
mov
push
and
mov
lcall
cmp
cmp
lret
idivb
push
sbb
cmpsb
es
adc
xchg
xchg
mulb
sbb
or
lods
lods
lods
dec
mov
adc
xchg
cltd
or
stc
adcl
or
inc
mov
and
dec
stc
cmc
in
fcom
loop
ret
xor
and
sub
shrl
jbe
push
lock
cmp
push
cmc
adc
jecxz
outsb
add
in
xchg
xchg
push
add
push
loope
mov
xchg
jae
in
inc
movsb
xor
push
les
cmpsb
inc
in
adc
push
pop
mov
pushf
push
adc
test
dec
je
int3
insb
mov
and
jb
int3
inc
xchg
hlt
push
fsubs
dec
inc
adc
xor
adc
cmp
push
sbb
enter
and
or
jne
add
test
mov
or
cltd
lret
test
sub
pop
jo
and
in
dec
mov
dec
mov
ficompl
push
pop
jle
adc
pop
mov
cmp
dec
fimull
pop
lret
pusha
jmp
stos
pusha
shr
wrmsr
inc
xchg
popaw
into
xor
bound
or
dec
fmull
mov
int
addr16
arpl
inc
jl
les
cli
push
nop
insb
iret
call
push
pop
sar
mov
stos
xor
or
mov
icebp
cmp
mov
fisubrs
mov
xor
shrb
add
inc
mov
scas
cmpsb
in
stc
ret
xchg
inc
cmp
jnp
sub
inc
mov
xchg
xchg
dec
jmp
repz
ja
sbb
push
outsb
pop
sub
das
out
jmp
fsubl
loop
add
and
lock
roll
adc
push
addl
jbe
cmpb
fwait
mov
and
hlt
push
add
lret
rorb
insb
dec
test
jae
push
jmp
imul
loope
xor
andb
xchg
std
and
add
les
pop
sub
out
dec
stc
movb
and
xchg
xchg
pop
sbb
fcoms
or
jg
outsl
fistps
push
sub
inc
in
dec
data16
movsb
addr16
ret
pop
pop
or
icebp
mov
popa
pop
movsw
pop
in
adcl
leave
fdivp
insb
sub
ret
cmp
add
sub
imul
push
or
sub
xchg
or
out
mov
jb
pop
leave
push
dec
and
push
and
out
mov
shll
popf
sub
sub
popl
mov
fmull
sub
sbb
pop
lds
cs
xchg
mulb
cmpsl
lock
mov
lea
mov
stc
lcall
push
ja
shl
out
cmpsb
leave
pop
clc
out
mov
xchg
or
pop
dec
test
mov
push
inc
rclb
or
imul
pop
adc
out
add
sub
or
jb,pn
ficompl
dec
sbb
push
sub
sub
jmp
dec
aas
jecxz
add
adc
mov
je
faddl
inc
mov
adc
inc
or
ja
cmp
xchg
popa
sub
push
sbbb
pop
sti
sbb
out
es
adc
aas
push
push
in
sub
mov
scas
jno
cs
cmp
iret
pop
outsb
sbbl
jo
add
mov
lret
sub
xchg
das
ljmp
out
mov
xor
and
dec
call
cli
dec
sbb
add
in
ja
scas
leave
into
ljmp
sub
ret
push
cwtl
add
sbb
mov
jo
cmp
xor
rcrl
pop
repz
sbb
mov
in
rcr
mov
arpl
xor
pop
or
neg
sub
fdivrl
jns
addb
sbb
fimull
repnz
cmp
mov
push
hlt
inc
add
push
sub
sbb
out
push
imul
pop
enter
sub
cmpsb
out
xchg
xchg
and
addl
cmp
or
dec
cmc
push
add
push
sar
out
out
pop
call
dec
subb
mov
xchg
pop
push
sbb
mov
lods
stos
jne
adc
pop
shll
jnp
mov
fs
rcrl
mov
cs
lods
test
mov
push
pop
pop
pop
pop
inc
lods
imul
fnsave
mov
mov
dec
push
xlat
fldl
add
das
mov
adc
add
pop
or
popf
xchg
das
push
leave
pushf
repz
cmp
psrlw
ss
jge
and
adc
fwait
inc
pusha
adc
jne
add
int3
or
out
out
ljmp
and
je
adc
mov
imul
roll
adc
mov
sbb
jle
movsl
cmp
jg
enter
imul
xchg
lar
test
sbb
or
in
adc
jle
int
xor
xlat
mov
xlat
inc
frstor
mov
int
sbb
out
data16
lea
sbb
out
repz
ja
jae
fsts
mov
or
jne
imul
add
xor
jge
or
es
scas
stos
sahf
pop
ss
divb
fsubs
hlt
xchg
stos
test
sahf
and
in
add
pop
ja
popa
mov
repnz
ljmp
mov
shlb
ljmp
adc
in
jns
iret
shrb
clc
add
in
push
lock
cmpsb
fs
dec
fmulp
fs
dec
loop
sub
mov
jnp
test
inc
je
adc
rcrb
inc
mov
sub
into
cmpsb
cli
lods
xor
cmp
or
mov
cmc
push
mov
jl
mov
xorl
fs
mov
cs
sub
mov
sub
jae
and
push
fs
testb
rcll
pop
sub
xor
mov
lea
mov
and
mov
scas
jp
sub
lret
in
jbe
loopne
fmull
insl
dec
add
add
lock
jno
or
push
stos
xor
dec
add
jb
mov
pusha
mov
decl
xor
loopne
std
clc
cmc
xor
mov
shlb
pusha
or
test
push
push
jmp
mov
mov
flds
movsb
xor
ret
mov
mov
repz
lret
popf
mov
scas
stos
jecxz
repnz
add
mov
dec
out
mov
inc
or
mov
jbe
cmp
dec
js
imul
or
outsl
lahf
mov
cs
push
xchg
mov
aad
shr
adc
outsl
add
mov
cmc
movsb
push
out
mov
mov
outsl
icebp
dec
imul
fmuls
add
dec
cmp
xchg
or
loop
jnp
cltd
pop
cs
dec
xchg
add
fstl
insb
jns
inc
dec
sbb
cltd
cld
test
bswap
stos
push
lcall
jo
push
inc
add
loop
xchg
arpl
fidivrl
outsl
inc
mov
mov
mov
dec
in
fiadds
test
dec
dec
push
or
int3
into
sub
in
xlat
aas
fwait
sbb
paddusw
inc
inc
push
cmc
dec
jns
adc
mov
mov
imul
fistps
adc
xor
pop
mov
addr16
imul
add
push
xchg
inc
mov
and
or
insl
push
jno
dec
sbb
xlat
std
popa
pop
cmpsb
sbb
add
mov
cld
shrl
enter
xchg
sbb
mov
jle
adc
pusha
xchg
addr16
adc
fstpt
push
test
cmp
or
shll
adc
mov
sub
push
xchg
lret
pop
and
mov
pop
xchg
int
aad
aaa
xor
push
lods
jbe
inc
dec
jns
pusha
scas
fcmovbe
sbb
or
ds
fsub
js
lods
and
ficoms
aam
adc
sub
es
inc
or
stos
std
cltd
or
imul
fisttps
and
out
jb
cmpb
sbb
outsl
out
and
pop
rorb
push
js
outsl
push
sub
call
jo
cmpsl
lock
and
jg
test
leave
cltd
or
ret
imul
mov
mov
dec
adc
push
cwtl
rcrb
pop
jecxz
adcb
cld
lcall
and
stc
mov
fistpl
push
adc
fs
push
push
repnz
ffree
stos
mov
adc
pop
cmp
cmp
lock
int
xchg
cmp
insb
adc
jno
xchg
cs
push
ret
mov
in
pushf
popa
pop
repnz
sub
fnstcw
lods
stos
std
sahf
test
xor
sub
mov
xor
in
xchg
jl
pop
setne
mov
icebp
test
frstor
stos
les
test
xchg
loopne
jne
mov
jb
or
sub
out
pusha
xchg
xchg
sbb
jb
pop
jns
out
push
push
cmc
movsl
and
inc
out
in
shl
pop
fidivl
fs
cmp
adc
stc
nop
mov
sti
cmp
loope
lock
insb
xor
jb
pop
stos
fwait
inc
insb
clc
jns
sub
loop
and
push
rorl
mov
cwtl
inc
push
shrb
std
mov
cs
shrl
push
lods
js
out
cmp
shrb
sbb
ror
pop
sub
add
in
notl
fnsave
cwtl
stos
add
stc
ja
lret
xchg
dec
cmp
shrb
scas
push
lds
xchg
jo
mov
xchg
jne
call
popa
jns
adc
lahf
mov
incb
jmp
xchg
lahf
aaa
lahf
xchg
bound
cmp
add
jbe
aam
cs
pop
mov
mov
lods
mov
fistpl
sub
out
stos
lret
loope
add
jnp
in
jns
and
repnz
cmpb
outsb
sub
sbb
cltd
dec
iret
ffree
mov
mov
js
mov
mov
jo
pop
in
xor
addl
xchg
mov
jmp
int
or
jle
in
fs
mov
jb
lret
push
mov
mov
lock
mov
test
scas
fisubl
mov
cmp
and
mov
shlb
mov
push
and
and
add
icebp
movsb
fs
sbb
inc
and
xchg
pop
rclb
add
inc
pop
fnstcw
in
std
pushl
mov
push
movsl
test
jmp
stos
push
popf
jmp
popf
mov
in
mov
xchg
cmp
iret
sub
jge
and
xor
or
test
out
xchg
mov
xchg
mov
ret
stos
into
mov
and
push
addr16
sbb
pop
or
sbb
pop
adc
pushf
inc
inc
test
jno
pop
pop
jae
xchg
push
push
add
sub
cmp
cltd
imul
and
lods
loope
repnz
jns
push
int3
jae
xor
pusha
data16
and
mov
xchg
lds
sbb
clc
or
rol
xor
je
fmull
lahf
push
mov
ss
fsts
bound
call
push
loopne
jnp
xor
aad
cmp
add
js
iret
inc
popa
pop
pop
out
aad
push
and
lcall
test
fwait
cmp
out
sahf
clc
jno
mov
push
aas
imul
push
mov
inc
mov
cmovle
je
inc
inc
push
mov
test
dec
cmc
xchg
fidivrs
mov
hlt
scas
pusha
and
push
xor
test
dec
fsubs
fsubrl
cmp
dec
fcompl
xchg
jl
pop
in
aad
fdivrp
out
jbe
push
pusha
ss
enter
pushf
fwait
stos
test
ja
scas
je
loopne
fs
or
jecxz
mov
adc
dec
lcall
lods
nop
div
push
jnp
and
dec
mov
stos
mov
push
inc
adc
shlb
cmp
or
inc
lds
or
pop
jb
mov
std
outsl
and
sub
mov
adcb
sbb
lds
xchg
call
jns
pop
shll
xchg
aaa
push
ret
adc
mov
xchg
das
nop
mov
hlt
cmp
ret
inc
jb
mov
or
jle
out
xchg
fs
mov
sbbl
in
xchg
and
js
jno
sbb
jmp
sbb
pop
out
out
sahf
adc
xchg
jb
in
mov
lret
lds
pop
outsb
repnz
es
sbb
push
sti
lea
jb
mov
cmp
scas
add
sbb
add
int3
loop
icebp
stos
lods
sbb
xor
cmp
or
in
fwait
dec
scas
xchg
pop
mov
aas
and
aad
mov
cwtl
loop
cmc
aam
shl
out
sub
sub
mov
insb
cmc
jmp
ds
push
and
inc
mov
mov
imul
sub
gs
sbb
es
mov
fs
js
adc
insb
outsb
sbb
clc
mov
lea
in
mov
cmpsl
add
repnz
test
or
sub
jg
mov
adc
in
push
mov
inc
pop
mov
mov
push
loopne
je
test
cmc
push
in
push
js
ds
xor
add
out
jl
mov
sub
nop
jecxz
lahf
jo
sub
jmp
fdivl
push
inc
in
mov
pop
jb
xor
rolb
scas
xor
or
adc
fcomps
je
dec
pop
push
and
movsl
mov
ljmp
orl
ja
push
push
xor
pop
jmp
roll
jecxz
outsb
xchg
test
sbb
pop
je
das
dec
pop
sahf
pushf
movsl
pop
or
fcmovu
push
aam
jle
callw
mov
fdivs
rorb
in
xor
std
fisttpll
dec
lock
cmp
inc
outsl
xchg
nop
je
ret
or
cmp
dec
jle
je
xchg
in
sub
cs
icebp
in
push
cmp
inc
inc
gs
jne
insl
jle
jb
cltd
dec
and
mov
fisttpl
outsb
jne
push
jae
mov
bound
cmp
shll
xchg
pop
insb
or
inc
pop
daa
mov
pop
lahf
js
flds
pcmpgtd
incb
pop
shll
adc
xchg
lcall
dec
or
jecxz
clc
lret
or
mov
fwait
lea
ficoms
add
pop
bound
scas
movsl
pusha
mov
das
cwtl
ret
inc
imul
mov
out
pop
test
out
fcmovb
mov
mov
mov
dec
inc
inc
adc
dec
or
xchg
call
scas
sbbl
pop
push
cmp
and
into
cmp
pop
sbb
cmp
jne
mov
je
repz
push
mov
shl
mov
mov
addr16
lds
jmp
addl
add
inc
adc
jle
or
arpl
test
push
mov
dec
jnp
adc
in
ror
aam
sub
cwtl
adc
lahf
xchg
movsb
fcmovu
sub
pushf
adc
add
dec
andb
jp
bound
xor
dec
movsb
sub
xor
orb
sub
lock
dec
popa
mov
and
out
xchg
mov
and
das
push
enter
mov
addl
push
xor
popf
fisttps
loopne
and
lahf
mov
popf
xor
fwait
out
out
jp
lret
mov
mov
popa
repnz
into
div
mov
cmpsb
ds
pusha
push
repnz
and
mov
outsb
lock
mov
xchg
in
cmp
pop
push
mov
jge
movsb
lea
jecxz
movsl
push
mov
pusha
je
mov
repz
ja
pop
insb
xor
into
sbb
insl
insl
bound
sarl
mov
push
and
push
inc
mov
sub
xchg
out
pop
cmp
jnp
imul
cmp
pop
imul
stos
cmpl
cmp
mov
xor
loopne
cli
imul
adc
pop
xchg
pop
cwtl
mov
lahf
fisttpl
fisubs
lock
loop
jo
jmp
and
mov
push
adc
mov
popf
popf
xchg
adcb
in
add
dec
cmp
dec
loopne
cmpsl
or
push
jge
pop
mov
rcll
imul
mov
mov
mov
addr16
and
sbb
jnp
push
sbb
pop
stos
mov
and
push
movsl
call
dec
mov
lcall
inc
movzbl
std
bound
or
test
and
fisttps
lock
adc
or
in
stos
cmp
and
sbb
jl
mov
mov
mov
jmp
jne
outsb
loopne
sub
mov
pop
dec
stos
leave
sub
int3
xchg
shlb
jmp
push
mov
pusha
mov
mov
lret
push
push
int
out
push
or
jno
dec
add
das
xchg
jge
ljmp
bound
hlt
clc
sub
mov
cmpsl
jmp
xchg
dec
gs
int
notl
sbb
add
dec
mov
lds
inc
dec
adc
imul
push
add
jbe
leave
leave
ja
xor
pusha
adc
xor
xlat
adc
mov
pushf
cmpsb
jae
outsb
push
gs
jecxz
aaa
and
fiaddl
push
movsl
in
inc
icebp
aad
outsl
jg
mov
loope
call
sbb
xchg
and
add
lock
mov
cli
data16
test
iret
xor
sbb
xchg
icebp
jnp
adc
fsubrl
mov
and
adc
nop
jmp
ss
push
sub
insb
ss
sbb
ja
and
in
arpl
dec
pop
push
push
pop
lock
dec
gs
mov
movsl
rcrl
out
les
mov
push
jae
stc
aas
cld
icebp
mov
mov
pop
dec
or
inc
pop
xor
dec
imul
or
inc
mov
lock
add
sub
fisubl
nop
test
fisubrl
das
adc
inc
outsl
ds
adc
in
lahf
adc
pop
out
mov
shl
movsb
sahf
mov
mov
leave
sbb
loope
cltd
movsl
add
add
push
fsubrs
or
jmp
imul
cwtl
fsubr
cwtl
mov
rcll
push
lret
adc
and
push
push
push
inc
sbbl
fstps
push
iret
repz
mov
push
fstl
js
jno
hlt
test
js
dec
adc
push
mov
adcb
and
mov
dec
imul
push
sub
pop
jmp
test
add
push
fimull
mov
out
sub
imul
imul
xchg
ss
xor
das
ljmp
mov
fcomi
adc
mov
cli
cmp
loop
and
roll
in
xor
test
pop
scas
fwait
mov
cli
dec
add
mov
jl
push
or
es
pop
jnp
loope
jae
mov
add
xorl
out
scas
pop
push
mul
in
adc
pop
lret
js
cld
push
test
push
jbe
add
js
jg
mov
pop
sub
xchg
pop
lods
fstl
jp
push
nop
fisubrl
shlb
xchg
int
xor
mov
and
std
rclb
les
xchg
xlat
or
out
aam
ret
popf
cmp
out
data16
inc
and
aaa
add
mov
adc
push
pop
and
or
loop
mov
scas
mov
sbb
pop
jbe
cmp
pop
pop
sbb
cmc
outsb
add
mov
mov
adc
ret
lcall
enter
xchg
push
push
cwtl
push
and
and
nop
mov
hlt
cltd
jns
sub
lods
xlat
add
out
cmpsb
pop
aad
adc
insl
dec
fdivr
mov
fisttps
and
pushf
sar
push
hlt
out
or
jg
mov
push
or
out
adc
out
adc
in
or
lcall
jmp
xchg
hlt
test
iret
mov
xchg
xchg
rorl
ror
stos
add
scas
cmp
mov
mov
pop
daa
dec
adc
mov
pushf
or
insb
xchg
xlat
popf
hlt
fs
sbb
mov
int3
lock
cld
add
insb
aas
mov
push
pop
mov
mov
and
xor
xor
xchg
aad
stc
rcl
dec
orb
outsl
fcomps
and
pop
shufps
add
rorb
cmp
xor
int
pop
inc
pop
xlat
mov
xorb
adc
aaa
movsl
leave
mov
jp
rcll
dec
mov
inc
movsl
test
dec
push
loope
pusha
or
out
pop
cmp
roll
push
pop
popa
sub
inc
les
xchg
or
xor
jle
push
cmp
ficomps
cmc
repnz
or
cmpsl
sub
gs
repnz
ja
lock
xchg
pop
mov
pop
pop
push
mov
xor
fadds
cmpsl
mov
insl
test
and
xor
push
stc
or
sub
int
push
cmp
xlat
loope
repz
pop
jns
frstor
mov
pop
jns
aam
jae
dec
xor
scas
sbb
imul
test
std
fsubl
and
and
iret
je
aas
mov
jns
ret
pop
xchg
cmpsl
enter
mov
jmp
mov
insl
stos
out
adc
ds
sub
roll
dec
mov
in
sti
lcall
add
adc
cmp
mov
imul
out
loopne
adc
mov
andl
add
push
and
jb
leave
in
mov
xor
fwait
int
push
mov
or
popf
push
mov
xchg
lret
dec
js
mov
xchg
shl
push
out
cs
les
js
int
push
daa
fsubr
insl
ss
inc
mov
iret
jae
aaa
jae
push
cmp
inc
int3
jne
aaa
out
fadds
int3
fwait
cmp
add
icebp
scas
packsswb
into
les
ja
xlat
aam
ret
ljmp
adc
stos
lcall
pusha
xchg
and
jns
cmpsb
call
ret
lods
mov
fmull
repz
pop
fstpt
add
aad
or
cmp
xlat
stos
jp
mov
rcll
inc
outsl
int3
or
fistl
lock
jne
or
jge
iret
adcl
filds
cwtl
frstor
jg
sub
sbb
and
fidivrl
sub
sub
cmp
jns
push
dec
ffree
clc
dec
fimuls
cwtl
cmpsl
inc
ja
enter
mov
repnz
cmc
scas
lret
ss
movsb
cmp
nop
lahf
push
dec
divb
shlb
sarb
xor
imul
xor
inc
scas
push
stos
push
sbb
cmp
fstpt
and
shlb
lods
outsb
lock
ret
push
pop
add
add
dec
sbb
add
fimuls
cmp
rol
add
sub
and
dec
mov
cmp
movsl
fisttpl
add
or
or
sub
scas
pop
xadd
or
daa
and
mov
dec
mov
xchg
sub
mov
sub
out
mov
xchg
adc
clc
aaa
mov
inc
xchg
sub
ljmp
push
or
aad
fdivs
gs
dec
int3
mov
push
mov
push
push
mov
cmp
imul
add
pop
inc
fcomi
push
and
xor
ds
add
lock
push
popf
frstor
sbb
jecxz
and
in
mov
aaa
out
fsts
negl
cmpb
repnz
inc
and
cmp
jl
sbb
jle
enter
sbb
pop
xor
imul
mov
pop
addr16
sbb
rcrb
fldl2e
mov
lds
jl
iret
cmpsl
pop
neg
push
mov
sar
mov
sub
in
mov
jbe
xorl
icebp
mov
adc
push
repz
xlat
lds
sahf
arpl
pop
cmpsb
dec
mov
subb
loope
leave
lcall
jno
test
hlt
mov
fwait
add
imul
push
dec
rclb
sub
into
cmpsl
das
fnsave
xchg
and
les
rcrb
ja
push
loop
mov
push
movsl
and
add
out
adcl
mov
dec
push
insl
xor
push
jbe
stos
mov
mov
push
out
shll
pop
pop
add
mov
fisubl
xorl
dec
inc
cltd
sub
inc
pop
cmp
je
test
clc
into
push
shrl
jb
mov
or
jge
push
jp
mov
mov
adc
xorb
outsl
rolb
ljmp
movsb
adc
fwait
clc
loope
xor
rcll
xchg
jno
arpl
insb
lods
mov
cli
cmp
in
jle
xchg
pop
mov
cmp
sub
scas
stc
scas
aas
cmp
add
cmp
inc
repz
iret
xor
push
ljmp
cmp
jns
and
mov
fistpll
pop
or
addb
mov
aad
sti
xchg
mov
add
popa
jbe
adc
push
push
add
dec
fsubrs
and
jmp
vpackuswb
mov
aad
jge
scas
repz
sub
outsl
push
xchg
mov
push
mov
call
jb
push
pop
cld
push
fstpl
cld
cld
mov
es
fists
rclb
mov
lods
push
stos
movsl
mov
xor
jl
rclb
cmp
dec
in
scas
iret
mov
mov
xor
pop
shrb
mov
testl
push
fistl
es
mov
sub
mov
aas
int
test
mov
iret
mov
je
mov
es
adc
das
fbld
lock
hlt
dec
xor
enter
lods
inc
idivl
xor
push
dec
adc
mov
sub
jae
mov
jmp
stos
fwait
dec
xchg
jns
jno
and
sahf
imul
flds
mov
pop
dec
movsl
gs
mov
arpl
inc
push
leave
push
dec
jl
lods
fcmovne
insb
lods
cmp
out
call
add
insl
push
rcll
je
insl
mov
sub
daa
je
stos
xor
nop
mov
jnp
hlt
call
and
cmp
clc
fisttpll
loop
rolb
push
ljmp
fsubl
cld
mov
mov
sar
pop
or
test
inc
fmul
inc
cmp
dec
aas
lahf
push
jo
jl
jb
dec
mov
xor
mov
jle
add
aas
sub
addl
test
add
stos
xlat
pop
or
dec
xchg
xchg
stos
sub
lahf
rcrl
mov
scas
inc
add
cmp
pop
loopne
in
cwtl
loope
cmpsb
repnz
lods
addr16
imul
outsl
mov
pop
xchg
mov
lods
xor
js
es
xor
adc
outsb
jmp
jne
rol
add
jle
enter
sbb
es
jo
sbb
ds
repz
jae
loopne
out
mov
or
popa
xor
and
lods
ret
out
cmp
inc
cmpb
xchg
xor
test
aam
jne
cltd
lods
je
jbe
lahf
or
outsb
stc
insl
mov
int3
pusha
sbb
ret
sbb
mov
pop
mov
or
and
mov
loopne
roll
pop
ljmp
les
aad
test
outsl
pop
enter
or
add
test
add
stos
iret
fisubrs
cmp
xchg
mov
mov
rclb
nop
jge
cmpsl
add
ret
xlat
cmpsl
pushf
repnz
inc
jl
not
jae
outsl
and
rclb
cwtl
data16
out
jl
dec
in
je
inc
mov
insb
push
xchg
out
dec
jmp
fmull
mov
sahf
push
out
xor
aaa
sub
mov
js
int
fcoms
lret
ret
loop
xchg
mov
lahf
in
mov
or
adcl
inc
sar
pop
dec
scas
test
cmc
mov
mov
cmp
mov
or
iret
lock
xor
fidivrl
movsb
ret
fdivrs
in
daa
sub
lock
aas
iret
jns
jge
xchg
mov
sbb
push
sbb
dec
lcall
les
lahf
pop
loop
outsl
test
pop
jp
rorl
decb
test
insl
add
adc
xor
mov
xlat
mov
xchg
adc
jae
in
xchg
mov
mov
mov
mov
lock
test
add
sahf
into
pop
inc
lret
xor
jne
jbe
popa
mov
jae
jge
jl
ret
es
xchg
jecxz
xchg
cs
in
iret
aas
in
mov
and
cld
inc
inc
xor
adc
test
or
insl
cmp
out
jne
lret
out
mov
jecxz
dec
xchg
negl
out
cmp
mov
mov
repnz
sub
and
ljmp
test
or
in
or
mov
push
and
sbb
arpl
out
add
or
xchg
adc
jns
cmp
stos
xchg
ffree
adc
pop
fstl
lahf
clc
add
cmp
jmp
mov
shl
or
jnp
mov
rcl
add
add
ja
arpl
add
outsb
es
jbe
addr16
add
shlb
lea
cmc
pop
adc
cmp
popa
pop
xor
xchg
inc
push
push
mov
sbb
inc
mov
test
call
mov
inc
outsb
sti
ds
testb
call
sbb
xchg
cmp
jae
push
cmp
loope
nop
out
popf
enter
sbb
jns
int
and
add
leave
push
push
repz
sar
push
ret
leave
stc
icebp
mov
movl
xor
into
jnp
pop
sbb
cltd
scas
sbb
mov
repz
xor
sub
cmc
sbb
xor
test
push
sbb
es
fsubrl
mov
push
push
add
stos
sbb
int3
call
xchg
lahf
jg
mov
cmp
call
push
stc
clc
inc
clc
mov
out
dec
and
jle
les
sbb
pop
jbe
push
inc
mov
xlat
push
mov
in
jg
cmpsb
std
imul
jb
or
inc
mov
leave
inc
and
ds
xor
cmpsl
fld
outsb
leave
dec
and
push
adc
adc
xchg
inc
jnp
push
pusha
in
or
mov
mov
or
sub
scas
inc
jae
addr16
push
add
mov
cmpsl
pusha
cmp
fstpl
xlat
pushf
and
inc
mov
dec
icebp
jbe
push
mov
or
or
sahf
cmp
movsb
push
loopne
icebp
inc
xchg
lods
hlt
stos
push
inc
inc
sbb
xchg
adc
hlt
add
mov
jecxz
iret
sub
pop
xor
lea
dec
sbb
jbe
adc
sub
lods
scas
daa
adc
mov
test
sub
outsb
adc
push
mov
hlt
add
clc
mov
int
stos
push
pop
dec
insb
mov
pop
fistps
call
rcrb
add
scas
lcall
pop
hlt
dec
or
cmp
inc
in
push
stos
repz
call
and
in
push
js
lds
xor
clc
mov
jge
in
lret
pop
mov
jle
xchg
mov
mov
mov
aad
aas
scas
test
dec
js
push
xchg
js
adc
jbe
sbb
cli
or
push
jmp
jg
xchg
mov
fs
rep
push
push
pushf
xor
fnstenv
ljmp
stc
jnp
xor
aam
jne
jns
or
inc
jno
scas
mov
mov
ja
andb
loopne
ds
xor
test
insl
xchg
out
pop
scas
into
xor
fmuls
es
cmpsb
fwait
jmp
shlb
stc
sbb
mov
and
dec
pop
sbb
insl
mulb
pop
test
or
pop
add
in
repz
loop
xchg
jbe
fisubs
lcall
xchg
or
sub
push
cmpsl
mov
jg
cld
mov
bound
enter
dec
push
jne
jo
mov
lret
ja
add
jecxz
cmpsb
jl
pop
jb
mov
add
jnp
adc
jg
inc
sti
scas
xor
mov
getsec
sti
xor
inc
scas
outsl
adc
call
xchg
mov
pop
lea
cs
jl
pop
lret
and
out
sbb
pop
cmp
lcall
cmp
cwtl
loop
jne
sbb
popa
out
xchg
dec
inc
or
popa
out
int3
cmpb
pusha
xor
leave
data16
add
push
aad
adc
pop
daa
ss
push
sub
outsb
mov
push
sbb
andl
cld
lcall
jae
pop
push
add
test
sub
fdivs
ss
loopne
inc
mov
sub
mov
ror
push
xor
lock
xchg
dec
in
pop
jne
ficoms
mov
rclb
xchg
mov
push
mov
mov
clc
sahf
pop
sub
sub
inc
cltd
inc
push
les
pop
mov
mov
xor
lret
stos
mov
stc
movsb
sbb
mov
cmp
push
test
jl
inc
test
scas
mov
push
add
test
sti
out
add
add
out
or
ret
push
enter
fiaddl
mov
or
gs
and
mov
mov
ljmp
dec
cmpb
cmp
mov
xchg
lret
add
test
mov
js
mov
xchg
lea
sbb
bound
inc
imull
sub
and
test
stc
orl
push
mov
movb
adc
leave
mov
cmp
xchg
mov
cmpsl
or
mov
fsubl
mov
leave
fldenv
inc
cmpsb
loope
xchg
dec
xor
insl
leave
push
jge
out
loopne
sbb
dec
lahf
imull
jge
cltd
cwtl
xchg
ja
and
push
std
sbb
sub
xor
fidivl
add
jecxz
roll
std
push
xchg
hlt
hlt
scas
cmp
push
repz
adc
outsw
and
sbb
sub
inc
sti
lea
mov
cli
lahf
mov
mov
scas
inc
sbb
lods
icebp
mov
sub
popf
lcall
xchg
vcvtss2sd
xchg
cmp
in
and
cltd
inc
fwait
push
mov
out
shr
scas
dec
dec
lahf
xor
xchg
out
pop
testl
inc
xchg
push
mov
enter
bnd
adc
int
dec
xor
sbb
push
mov
xor
sbb
inc
movhps
test
mov
ret
mov
jno
adc
lahf
jo
mov
pop
ljmp
test
lret
or
push
hlt
sbb
add
fnsave
out
xor
xchg
and
int
insb
lods
aas
mov
mov
pminub
adc
pop
int3
mov
xlat
popa
daa
dec
push
shlb
mov
iret
pop
or
filds
rcrl
mov
nop
stc
mov
mov
mov
lcall
popa
cmp
pop
neg
mov
sahf
testl
dec
or
popa
mov
ds
lret
mov
testb
outsl
jbe
sub
and
aaa
cmp
jne
ret
in
jg
call
xchg
out
push
les
pop
and
insl
andl
dec
and
jnp
outsb
xlat
push
movsb
sbb
jne
in
test
mov
lods
sbb
ss
movsb
mov
mov
mov
hlt
out
pop
in
add
pop
insl
add
es
bnd
les
pusha
cwtl
mov
cmp
or
ds
outsb
dec
sahf
scas
data16
inc
inc
add
hlt
mov
inc
mov
fwait
dec
mov
inc
xor
nop
mov
xor
les
icebp
pop
js
xor
mov
stos
mov
adc
mov
cmp
push
aas
imul
sub
dec
sbb
outsb
push
push
sbb
mov
ret
insb
pop
cwtl
into
in
mov
ds
imul
xchg
repz
aaa
xor
mov
mov
mov
xchg
fstp
mov
dec
sub
pop
add
cmp
xor
lcall
push
mov
inc
push
int3
xlat
insl
bound
and
mov
pop
je
mov
mov
fistps
jnp
mov
adc
rorb
mov
mov
loope
xor
dec
xlat
popf
sbb
fisubs
std
add
push
divb
mov
je
adc
andb
sti
mov
sub
mov
insb
push
fisubrs
pop
sti
je
mov
or
stos
loope
and
dec
inc
sbb
dec
push
fcmovnb
in
loopne
add
pop
into
iret
adc
lods
cld
sarb
pusha
imul
stos
pop
xorl
sub
lds
aam
lahf
dec
sub
jl
mov
scas
sbb
jmp
jl
fbld
lods
pusha
xlat
inc
aam
hlt
fadd
imul
jmp
sub
ds
test
arpl
xchg
cwtl
inc
mov
fcompl
jne
ja
add
pop
xorb
push
icebp
lea
jne
jae
icebp
mov
xchg
mov
cltd
sbb
aas
cmp
mov
cmp
sbb
add
add
add
repnz
insb
es
mov
cli
xor
cmp
add
pop
insl
xchg
dec
sub
push
popl
sbb
stos
in
or
mov
cltd
enter
dec
rorl
inc
bnd
push
jne
lcall
push
xchg
fsubrs
ljmp
push
push
cmp
lods
mov
and
pusha
mov
faddl
fs
orb
inc
outsb
int
nop
mov
mov
sub
dec
jae
movsl
xchg
mov
or
leave
mov
add
loopne
jmp
aad
rcrl
aaa
int
dec
and
aas
les
pop
push
cmpb
mov
xchg
mov
xor
dec
mov
lahf
fstps
pop
cmpsl
fnstenv
repz
inc
jns
shll
xchg
loop
cltd
mov
push
jae
sbb
fucomi
mov
roll
jmp
popa
jo
test
test
icebp
pop
sub
popa
ret
mov
lret
push
insb
push
imul
data16
cmp
mov
pop
cmpsb
push
loope
pop
cwtl
sbb
data16
lods
and
push
das
adc
xchg
jno
out
inc
outsb
pop
sbb
inc
jmp
in
mov
cmp
inc
fs
mov
gs
and
jecxz
jle
stos
push
das
cmpsl
popa
push
sbb
xor
pop
jbe
popf
cmp
adc
jnp
cmpsl
es
cmp
xchg
testb
fscale
ss
push
test
adc
or
or
js
dec
xchg
imul
xlat
imul
mov
xor
inc
cltd
cmp
push
dec
sbb
lret
xchg
or
sbb
shl
push
add
cmp
enter
fdivs
push
in
mov
adc
push
xchg
sub
int3
es
sbb
push
lds
loope
jle
leave
or
xchg
test
pop
movsb
xchg
outsl
adc
cwtl
xchg
mov
shlb
and
sbb
jmp
mov
push
adc
xor
movsb
shl
jae
xchg
es
lea
xchg
out
inc
dec
add
inc
movsb
sub
inc
mov
cmp
cmp
mov
pop
jns
sub
mov
ret
push
lods
lret
ljmp
jae
push
mov
enter
xchg
and
jg
fadds
sub
add
cmc
test
sub
xor
loope
mov
ja
push
xor
shll
jle
imul
lcall
and
sub
popf
addb
push
hlt
push
out
sub
loope
loop
and
push
addl
or
push
aam
mov
cld
imulb
sub
loopne
push
xchg
repnz
xchg
pop
cmpsb
mov
adc
stos
push
sarl
ja
push
adc
cmpsb
addr16
cwtl
mov
mov
and
bound
ret
add
adc
aam
mov
jae
dec
imul
ljmp
std
int
out
out
push
push
pop
movsb
sarl
mov
push
pop
push
int3
push
ss
movsl
inc
lcall
aaa
outsl
mov
pop
iret
xchg
mov
scas
mov
pusha
cmpl
pushf
in
dec
mov
cmp
leave
rorl
adc
aad
packuswb
enter
jp
mov
cmp
rol
push
xchg
adc
or
jno
iret
add
push
iret
adc
xor
rcl
push
imul
cmp
or
shl
ficoml
dec
cmc
aas
inc
repz
das
xlat
jecxz
or
sub
in
xchg
mov
enter
lret
ret
xor
and
mov
mov
arpl
jmp
push
aam
hlt
or
or
repnz
xchg
mov
sbb
stos
mov
mov
lret
mov
jne
dec
add
xor
cmp
jb
in
or
loop
sub
lock
push
push
pop
pop
push
jge
push
mov
mov
xchg
mov
inc
jns
incl
mov
inc
popf
test
pop
adc
push
test
negb
mov
into
lock
insb
jecxz
pop
lcall
gs
inc
popf
xor
ja
pop
call
pop
mul
xor
cmp
fcomps
xor
fisttps
xchg
and
mov
js
cmp
iret
out
in
and
push
xchg
mov
cmpsl
push
sub
out
sub
pushw
sti
add
or
jle
or
lret
pop
clc
out
loop
pop
push
cltd
mov
insb
mov
sti
push
es
repnz
stc
nop
push
cmp
out
xchg
or
sub
mov
add
xor
out
pop
iret
jp
and
loopne
inc
pop
orb
adc
and
mov
dec
cmp
push
movsl
cmp
push
mov
shlb
pushf
xchg
inc
mov
xor
subb
cli
mov
in
loope
and
int3
pop
popf
incb
add
xor
fists
jle,pn
jp
push
int
xchg
pushf
push
repz
add
out
inc
imul
fs
orb
repnz
cmp
fprem
mov
neg
addr16
ljmp
rclb
or
movsl
add
sbb
jbe
leave
insb
out
fsts
sbb
mov
subl
push
jno
jecxz
push
pop
jnp
xor
gs
imul
fwait
jne
adc
iret
aas
cmp
psllw
sbb
movsl
adc
enter
jp
and
inc
or
adc
lret
js
test
mov
and
mov
in
and
cmp
lahf
or
pushf
xchg
rcl
lahf
shlb
xor
stos
push
sub
loopne
stos
outsb
add
inc
in
pop
mov
mov
mov
mov
popa
push
mulb
jmp
imul
clc
in
xchg
pop
loope
movsb
icebp
mov
in
jnp
xchg
pop
mov
jg
push
and
xchg
or
jecxz
in
sub
rorl
aam
rcll
in
dec
inc
pop
rolb
xchg
aad
repz
shl
in
ljmp
lods
out
stos
pop
sbb
shrl
out
fcomps
inc
sub
mov
pop
adc
and
sbb
call
sub
sbb
cmp
lock
pop
pop
lcall
xchg
mov
or
xchg
les
aad
test
xchg
imul
arpl
mov
xlat
sbb
or
adc
xor
ret
aas
pusha
and
shlb
push
ja
add
mov
pop
cmp
lret
inc
test
aaa
shrb
pusha
mov
sbb
test
mov
cmpsb
ret
ds
jecxz
jb
test
sahf
push
xor
repnz
add
push
jo
shll
xor
push
fistpll
stos
mov
push
mov
fisttpll
loop
pop
negl
cld
in
loopne
movsb
adc
push
push
subl
outsl
sbb
sub
mulb
clc
imul
jmp
scas
inc
pop
mov
test
es
lret
inc
pop
push
mov
aas
scas
push
dec
inc
arpl
xchg
cmpsl
push
pop
adc
imul
pop
cmp
sub
inc
sbb
jp
inc
xor
mov
cmp
cmp
pop
adcl
pop
pop
repz
push
out
sub
xor
mov
xorl
jmp
cmp
aad
loopne
ret
jo
into
stc
rorb
shlb
mov
es
iret
repnz
notb
mov
sub
loop
shll
add
mov
je
and
jne
inc
xor
js
xchg
push
insl
shl
mov
lock
sub
ds
mov
lahf
loope
aam
cltd
push
sbb
xchg
frstor
xchg
cltd
nop
dec
ja
in
inc
fimuls
ja
xchg
insl
mov
into
jmp
adc
cmp
in
and
stc
daa
dec
sub
loop
enter
loope
cs
mov
repz
push
and
shlb
sub
pop
cmp
imul
xchg
push
push
bnd
mov
xchg
fs
push
int
push
dec
jae
shll
jno
or
std
stos
daa
lods
rol
cmp
sbb
loope
xor
lret
movl
inc
in
cmp
mov
xor
adc
sub
clc
jbe
mov
add
cmp
sub
xchg
push
mov
adc
cmp
sub
inc
adc
add
dec
xlat
mov
xchg
xor
mov
rclb
mov
fdivrs
mov
mov
dec
ret
roll
mov
sub
dec
pop
adc
in
adcb
outsl
clc
test
ret
test
mov
cmp
movsb
ja
mov
sub
or
cmp
imulb
inc
pushw
inc
push
push
insb
loopne
dec
mov
les
vpshab
dec
insb
sar
mov
add
and
rolb
jg
push
adc
daa
fsubrp
dec
mov
hlt
and
pusha
mov
pop
inc
jno
xchg
push
dec
dec
dec
icebp
fistps
xor
xchg
mov
xchg
dec
adcl
scas
jb
les
outsl
adc
mov
rolb
mov
mov
mov
push
popa
adc
mov
shr
lock
or
lret
dec
mov
push
or
mov
psubusw
mov
shll
data16
and
xchg
in
jecxz
test
or
addr16
cmp
popa
xor
mov
xchg
mov
sub
call
mov
daa
mov
loope
jbe
cmp
add
out
mov
xlat
decl
and
loopne
and
cltd
jl
subb
sbb
xor
cmp
add
shlb
xor
lcall
ss
subl
adc
in
repnz
popf
scas
xchg
lods
and
cmp
adc
sbb
faddl
jecxz
jmp
inc
pop
pusha
negb
pop
mov
dec
xor
imul
xor
ret
mov
pop
or
xchg
call
mov
jmp
xchg
mov
fcoms
test
dec
fbstp
addr16
pop
push
cwtl
leave
dec
mov
sub
outsb
xor
setbe
adc
adc
sbb
not
repz
decb
add
stos
sahf
push
loope
lret
jnp
iret
fisttpl
mov
les
rcrl
or
cmpsl
dec
sub
int
dec
xchg
push
outsb
gs
mov
aam
mov
hlt
mov
jp
cltd
je
loope
mov
xchg
movsl
push
cmpsb
scas
sbb
dec
pop
pop
jnp
mov
add
adc
mov
add
call
ret
sub
mov
cltd
out
clc
or
popf
outsl
mov
cmp
jbe
inc
iret
sbb
test
nop
shlb
ficomps
scas
in
stos
adc
pop
sub
pop
clc
xor
loope
jecxz
stos
push
xchg
mov
xchg
loope
cwtl
pop
rcr
mov
pop
loope
sbb
xchg
xchg
mov
out
sti
lret
adc
test
sbb
push
or
jnp
pop
sbb
ret
cmp
rolb
mov
xor
push
inc
in
sahf
xchg
in
ror
pop
or
push
movsb
dec
enter
iret
stc
sbb
pop
je
es
out
adc
jg
imulb
sub
xor
xchg
adc
xchg
out
out
aad
pop
negl
adc
aaa
cld
shll
fimuls
lahf
cmpsb
jbe
shll
xor
cli
shrb
sub
lcall
test
ret
call
sti
add
fbstp
sbb
aam
scas
pop
addr16
push
ja
and
or
sbb
pop
add
sub
ret
add
jno
and
fidivrs
daa
in
arpl
pop
in
pop
or
mov
xor
mov
out
jbe
int3
pop
xchg
cld
cmpsl
inc
cmp
out
inc
and
je
test
pop
jno
scas
mov
out
mov
lcallw
out
popa
or
and
xchg
es
addl
insb
cmpsb
imul
sub
lods
pop
cltd
or
jge
loope
push
jmp
aad
in
adcl
inc
fucomi
into
jmp
or
mov
jmp
jp
dec
pusha
ja
and
inc
sbb
sti
icebp
shr
add
rclb
popf
imulb
test
or
pop
adc
das
push
ret
in
std
xchg
pop
stos
es
xor
adc
dec
mov
in
adc
cmp
mov
loop
push
xchg
adc
jae
dec
addr16
sub
enter
dec
cmova
cwtl
push
and
jbe
out
adc
jg
jmp
iret
out
dec
ljmp
xchg
in
daa
jae
mov
sub
and
ret
int3
push
cmpsl
shll
mov
sub
sbb
test
push
ja
das
cld
mov
je
imul
icebp
icebp
mov
ds
cwtl
aad
add
xor
and
sti
mov
ljmp
mov
push
dec
sub
sbb
fnsave
jecxz
je
fstps
into
pusha
lcall
push
jae
mov
imul
out
mov
mov
pop
lret
jecxz
in
leave
lahf
jb
fiadds
sahf
xchg
inc
addr16
adcl
in
jne
sub
push
mov
fdiv
aas
jl
cmpsb
mov
push
lods
adc
lock
bound
loope
cwtl
int
and
ja
pop
or
stos
xor
jnp
sahf
out
sub
sti
mov
push
inc
jl
xchg
int3
pop
outsb
cmc
push
scas
cld
imul
adc
sub
pop
sbbl
mov
popl
inc
testb
mov
cld
movsl
adcl
push
inc
stos
cmp
sahf
pop
and
dec
pop
out
xor
pop
jb
fsubrl
loopne
mov
adc
gs
inc
sub
es
das
cwtl
push
dec
pusha
jl
in
pop
mov
adc
xchg
out
mov
sub
dec
mov
sub
outsb
cs
add
sahf
fstpt
fisttps
lock
les
mov
pop
faddp
inc
cld
mov
pop
test
sbbb
push
pop
sbb
and
int3
mov
outsb
into
dec
pop
lahf
mov
cmp
shl
stc
and
sti
inc
adc
int3
fistpll
cmc
call
push
fidivrl
ds
daa
shr
outsl
and
rclb
ljmp
shll
mov
inc
jl
popf
push
mov
dec
std
pop
das
dec
or
clc
add
ljmp
jne
add
mov
out
and
and
faddl
xchg
aaa
mov
bound
jmp
jns
adc
pusha
push
hlt
clc
outsb
mov
aam
inc
movsl
sub
cld
in
push
fcmovb
repz
xchg
adc
add
mov
pop
cld
stc
inc
push
xchg
lds
xchg
daa
jecxz
mov
mov
imul
loope
add
scas
mov
sbb
inc
sbb
sub
bnd
ljmp
int
shlb
and
je
xchg
lea
je
iret
fisttpl
mov
mov
movsb
cs
add
fsubs
fnsave
or
jnp
sbb
mov
scas
je
scas
jnp
scas
push
mov
mov
mov
inc
mov
push
gs
inc
pop
xor
xchg
movsb
add
push
divl
addl
and
xor
mov
xchg
lcall
frndint
mov
xchg
pop
sub
jg
in
pop
mov
outsb
out
jecxz
movsb
shll
mov
das
xchg
fcoms
and
cmp
and
adc
idivb
sbb
clc
pop
pop
imul
hlt
call
xchg
popf
pusha
les
mov
mov
in
adc
cmp
adc
jmp
push
cli
mov
repz
jg
movsb
xchg
outsl
adc
xchg
loope
cmp
cwtl
cmp
pop
adc
mov
cmp
xor
test
cmp
fistpl
sub
cwtl
orl
or
or
xchg
pop
ja
imul
add
cmpsl
push
jns
mov
mov
jle
dec
push
js
iret
sbbb
jmp
imul
rol
and
mov
add
and
data16
int
sub
sbb
pop
mov
mov
fstpl
or
sub
dec
add
jno
fwait
xchg
mov
int3
filds
push
fucomi
fwait
sti
imul
test
int
movsl
cmpsl
call
jne
call
in
xchg
jecxz
rcll
jbe
sbb
mov
sub
pop
divb
call
fwait
sahf
xchg
pop
test
lahf
xchg
or
inc
scas
aas
dec
mov
inc
pop
gs
adc
adc
sbbb
data16
fstps
cmp
mov
jne
adc
xor
inc
inc
adc
xor
sub
mov
add
mov
jns
testb
push
mov
push
insl
xchg
hlt
add
jmp
push
ds
lds
mov
inc
rorb
inc
cmpb
mov
enter
sti
mov
shrb
ljmp
and
jns
enter
mov
pop
loop
inc
mov
mov
jmp
and
sub
std
push
pop
cwtl
sbb
cmpsb
aas
push
cmpsb
jle
mov
pushf
cmp
ret
cmpsb
mov
push
dec
jecxz
mov
lahf
mov
sti
xor
cmpl
scas
scas
fmull
movsl
testb
jb
jns
sarb
adc
add
jge
and
mov
cld
inc
and
jle
aas
xchg
and
cmpsl
cmp
cmpsl
and
xchg
dec
rorl
cmp
lods
cli
fidivrl
xchg
xchg
jle
imul
mov
ljmp
push
and
arpl
adc
fdivrp
push
push
pop
pop
xor
sti
bound
dec
mov
xchg
testb
add
mov
into
addr16
and
clc
enter
xchg
jle
and
dec
das
test
fwait
xor
cmpsl
adc
cmpsb
in
pop
cmc
push
or
or
rcll
jge
jno
xchg
and
xchg
mov
cmp
lret
insb
mov
call
mov
mov
loopne
cmp
in
add
outsb
pop
repnz
mov
cwtl
sahf
imul
pop
cmp
cmpb
aam
pop
xchg
popa
test
add
test
popf
ffree
inc
pop
pop
jp
cwtl
jge
and
jle
inc
xchg
and
imul
stos
xor
push
idivl
out
adc
or
aam
dec
dec
dec
imul
dec
movsb
in
ljmp
dec
or
sbb
pusha
adc
and
mov
and
jg
xchg
or
pusha
cmpsb
lret
pop
out
imul
addl
movsl
push
pushf
sbb
lds
mov
sbb
inc
add
mov
gs
out
add
jno
scas
jecxz
bound
in
adc
jo
idiv
adc
mov
rcll
daa
lea
push
ret
add
xchg
enter
leave
cmc
lret
addr16
stc
inc
add
bound
pop
pop
mov
jge
lods
jnp
outsl
je
inc
lea
fsub
sub
dec
adc
imul
cmpsb
sbb
jge
jg
mov
pushf
add
cld
decb
out
aas
mov
fwait
rcrb
xor
adc
lret
repz
push
and
lods
arpl
dec
jno
cli
movsl
fs
out
xor
rclb
and
int3
jp
add
into
icebp
cmp
iret
lds
pop
sub
adc
les
aas
dec
inc
nop
int
push
and
mov
push
xchg
pop
and
lds
mov
sub
aas
push
push
pop
lods
inc
and
add
test
fists
cmp
jb
sbb
jns
adc
cs
fucomi
cmp
mov
xorb
loop
lret
imul
mov
mov
in
ret
mov
inc
lea
fnstsw
mov
push
mov
insb
test
pushf
cli
stos
lds
jo
cmp
bound
int
and
mov
fwait
call
mov
mov
js
cmc
or
xchg
add
das
sbb
jae
aam
dec
and
andb
pop
sbb
pop
aas
aaa
jae
and
push
clc
mov
or
out
jb
lods
xchg
xor
aam
lds
mov
push
cltd
sahf
and
lahf
into
inc
lcall
cmp
aaa
stc
popf
outsl
aas
stos
lea
repnz
bound
xchg
xchg
mov
es
jbe
xchg
jecxz
je
lea
outsl
mov
std
xchg
push
std
jns
les
xor
jns
xor
push
or
xor
arpl
lret
xor
xchg
sahf
dec
and
pushf
aaa
jne
sub
test
mov
mov
sbb
cmp
adc
sub
jle
adc
cmc
jb
dec
daa
aas
ljmp
add
xor
push
daa
cmpsb
jb
push
aam
add
iret
pop
mov
mov
jmp
in
mov
cwtl
mov
sub
js
sub
mov
imul
ficoms
add
jno
xor
and
push
fwait
jne
mov
das
dec
mov
out
imul
insb
setnp
daa
loope
inc
out
out
inc
mov
push
jns
adc
inc
xchg
into
movsb
xchg
mul
in
and
insl
call
dec
addb
jg
xor
test
insl
pop
orb
ss
shl
push
or
xchg
sub
mov
cmp
test
popf
stc
outsb
cmp
pop
or
mov
iret
cmp
scas
leave
rorb
stos
std
nop
dec
push
inc
sub
pop
and
into
arpl
enter
pop
in
push
inc
lock
imul
leave
mov
lahf
fcmovb
loope
fcomps
xchg
add
fs
xlat
dec
loope
dec
xlat
into
imul
orl
mov
popa
push
mov
pushf
ds
lea
stos
shll
cmpsb
or
faddl
shrl
dec
dec
jge
repnz
mov
leave
je
pop
push
cmp
lahf
jns
roll
out
mov
lahf
leave
cmpb
arpl
pop
jge
mov
dec
aas
aad
stc
pop
loopne
lods
fildl
sub
in
pop
jge
jg
mov
mov
or
dec
sub
push
outsb
push
lods
repz
inc
stos
mov
repz
add
popf
outsb
sub
xchg
insb
test
rol
mov
lcall
out
jae
jle
out
inc
adc
aaa
inc
sbb
ljmp
mov
fs
sbb
sub
mov
cwtl
ljmp
cmp
push
pop
inc
jnp
into
rolb
aad
mov
sub
sbb
sbb
inc
or
and
add
cmp
bound
mov
inc
icebp
popf
xchg
je
push
pop
and
or
pop
ret
mov
jp
imul
rol
xor
repz
out
cld
outsl
sub
lods
dec
xor
clc
add
in
mov
cmp
das
std
je
out
movsl
cmpsb
cmpsl
mov
pop
ds
aaa
or
lods
fildl
jae
mov
add
out
mov
arpl
aam
sbb
addr16
unpckhps
or
int3
inc
mov
inc
xchg
sub
pushf
insb
fwait
mov
jae
stc
pop
cld
lret
pop
mov
icebp
dec
daa
cmp
jp
xchg
fildl
test
mov
fildll
movsb
pusha
dec
inc
out
and
mov
scas
jo
sub
or
cmpsl
testl
fsubl
push
inc
fwait
mov
mov
xchg
jnp
addb
mov
mov
pop
daa
pop
mov
or
arpl
mov
cld
jo
jbe
mov
mov
pushf
and
stos
icebp
pop
or
insb
loopne
jno
xchg
xchg
inc
push
push
dec
sbb
pop
es
je
test
dec
arpl
cwtl
je
sbb
adc
gs
ret
xchg
popf
cmp
iret
push
jmp
push
pop
mov
test
lea
cltd
pushl
fwait
sbb
dec
jmp
dec
in
arpl
inc
pop
dec
pop
cmp
imul
push
lcall
cltd
arpl
mov
out
ret
pop
sahf
inc
inc
jge
pushf
js
ja
mov
or
sbb
lcall
icebp
xchg
sbb
push
incl
jg
pop
icebp
cmc
je
scas
loope
inc
cld
mov
movsl
popf
mov
and
dec
add
imul
sbb
push
mov
int3
mov
dec
cmpsl
scas
lret
push
iret
cmp
mov
fwait
fwait
mov
adc
xchg
sbb
insl
sub
sbb
int
and
rorl
call
fisttpll
sar
and
roll
mov
movsb
jb
imul
cmpsl
rolb
movsb
icebp
xlat
push
mov
pop
lret
cmpsl
and
push
sarl
ja
je
mov
lcall
aaa
dec
shrl
add
aam
inc
mov
dec
mov
mov
std
mull
sub
icebp
or
add
insl
test
lds
adc
xor
repnz
adc
loopne
adc
mov
inc
jnp
inc
daa
xchg
or
das
clc
cmp
cltd
js
mov
ds
and
mov
xchg
mov
mov
ret
inc
sbb
push
jp
pand
xor
mov
cmp
rolb
mov
push
inc
addb
je
fimull
ficomps
mov
mov
xchg
fisttpll
add
jns
ss
jecxz
mov
sbb
repz
test
and
pop
jp
in
xor
stc
adc
sub
mov
clc
mov
jmp
repnz
repnz
add
sub
push
xchg
bound
pop
jmp
les
xchg
ret
loope
cmp
xchg
int3
ljmp
enter
pop
adc
mov
jmp
sub
inc
mov
sub
jl
pushf
cmp
xor
movsb
jl
sbb
adc
xchg
or
divl
mul
subl
cmpsl
dec
add
inc
push
cmp
push
mov
scas
lock
pop
push
sub
push
sar
stos
push
mov
xchg
sti
rolb
insl
push
stos
xor
in
pop
sbb
cmp
addb
mov
fsubrl
inc
xchg
pop
sbb
mov
pushl
imul
sub
in
fwait
mov
or
or
aaa
mov
add
mov
jo,pt
inc
filds
data16
sar
jge
inc
fadds
aas
out
hlt
es
bound
bound
sbb
stos
add
adc
mov
test
sub
pop
push
pop
pop
push
popf
notb
ret
sbb
or
pop
mov
stc
add
aas
dec
adc
or
das
test
sbb
test
movsl
shl
ds
decb
insl
roll
arpl
enter
es
xor
xor
fs
jp
test
xchg
gs
jns,pn
sar
out
push
loopne
into
lahf
adc
add
ficoml
jecxz
inc
fs
dec
popf
push
inc
loop
pop
test
push
sbb
punpckhwd
aad
stos
aam
mov
testl
stos
push
sti
inc
test
gs
cwtl
cmc
sub
mov
jl
in
pop
jmp
pop
sub
fs
mov
mov
adc
lcall
std
pop
into
adc
in
add
sub
inc
arpl
push
iret
mov
adc
mov
lods
push
and
inc
fwait
btr
jmp
aam
cmp
sub
add
sub
je
sub
push
jns
test
fimuls
fs
repnz
in
das
cmp
fadd
xor
mov
rclb
sahf
push
shl
sti
insb
fldcw
mov
nop
fmuls
sbb
cmc
aam
cmp
mov
dec
cmp
pop
adc
xlat
push
pop
adc
aas
add
adc
push
pop
pop
push
cmp
movsb
std
sti
sbb
subb
jl
push
xor
clc
aas
adc
pop
bound
cmp
arpl
test
lret
sub
inc
in
push
shrl
pop
loop
inc
ljmp
xor
mov
das
mov
outsb
dec
aaa
nop
or
jns
imul
jecxz
xor
mov
push
mov
and
xchg
out
fidivs
pop
adc
rorl
dec
js
das
imul
sbb
es
mov
call
out
aam
push
loope
or
add
cmp
and
lods
mov
stos
jnp
loop
or
pop
sub
jne
inc
jno
mov
popf
int3
inc
inc
pmaddwd
std
lcall
ss
adc
lea
mov
into
outsb
add
jbe
jb
call
xchg
clc
outsb
fbld
pop
xchg
fistpl
mov
scas
aam
out
pop
rolb
cmp
xchg
fiaddl
pop
or
mov
push
jg
xchg
dec
leave
jle
mov
jmp
cs
mov
jae
dec
rolb
enter
int
cs
out
addr16
inc
pop
dec
les
mov
bswap
test
push
sub
insl
data16
out
lcall
or
or
push
jl
mov
in
sbb
insb
adcb
xorb
sub
xchg
xchg
xor
sub
add
lods
dec
mulb
lea
xor
push
jb
or
leave
xlat
out
outsl
ret
push
sbbb
cs
xchg
test
inc
push
cli
dec
pusha
das
jo
lods
fldl
xor
push
push
enter
fwait
pop
repnz
push
sahf
mov
std
mov
in
xor
pushf
imul
mov
mov
imul
jecxz
out
fisubrl
jb
fcmovnb
flds
cmp
add
insl
cmc
into
pop
sub
icebp
cmpl
ret
mov
inc
push
mov
pop
jmp
or
addr16
xchg
jbe,pn
icebp
and
dec
gs
mov
nop
fdivrl
xor
push
pop
jle
ljmp
aaa
fdivs
cwtl
add
mov
mov
mov
pop
mov
out
push
pushf
iret
push
cmc
rol
cmpb
divl
or
scas
jle
mov
cmp
movsl
mov
mov
sbb
fcmovne
mov
mov
lods
mov
sbb
icebp
inc
repz
xor
es
inc
shlb
lock
push
sbb
daa
jge
in
push
jnp
mov
jle
cmc
scas
dec
mov
leave
cs
movsl
daa
lock
lret
mov
ret
aas
movsl
lret
sbb
jle
xchg
aaa
jecxz
sbb
xor
inc
and
repz
hlt
add
cmpsb
movsb
mov
push
ret
xchg
lock
loope
daa
aaa
jb
cltd
ja
mov
jo
mov
xor
negb
inc
outsb
ficomps
pop
mov
dec
sbb
xchg
mov
mov
mov
jne
inc
dec
mov
lcall
js
and
xchg
sahf
pop
xor
dec
xchg
dec
xor
jg
push
push
popf
sbb
shll
cld
rcl
push
mov
jg
sub
int3
cmp
imul
lods
mov
aas
mov
push
jne
aas
shlb
dec
pop
mov
je
shrb
popf
ja
add
add
cwtl
push
cwtl
or
lcall
mov
add
mov
jnp
jb
out
sub
mov
mov
push
mov
mov
sub
rorl
scas
arpl
test
fdivl
push
jnp
inc
insl
xor
lods
pop
std
repnz
leave
outsl
in
adc
xchg
mov
and
jae
dec
adc
inc
imul
lret
lods
inc
movsl
lcall
cwtl
cmpsl
cmp
sbb
adc
inc
stos
addr16
lcall
mov
es
lea
les
ja
stos
cmp
pop
popf
mov
xor
add
cmpsl
test
cmpl
xorb
jne
xor
loope
xor
cmp
add
loope
out
sahf
push
mov
dec
jne
jg
leave
sub
jmp
and
pop
jns
xchg
adc
mov
imul
sbb
pop
ret
sbb
pop
je
test
or
sbb
pop
lret
outsb
nop
adc
cld
iret
insl
xorb
iret
xor
or
sub
aas
in
ss
sub
fwait
push
ss
enter
arpl
fdivrl
aas
xor
cmpsl
stc
psraw
lret
xchg
scas
arpl
jno
std
stc
hlt
into
add
pushf
or
sahf
mov
push
insb
or
lds
gs
aad
arpl
in
cmp
lods
iret
dec
test
and
mov
rcr
xlat
adc
mov
pushf
mov
test
sti
or
push
rorb
fidivl
jmp
fcompl
cmpsl
das
fwait
les
outsl
negl
cmp
arpl
xchg
jno
loopne
jae
pop
test
jae
push
aaa
or
xchg
or
cmp
cwtl
xlat
adc
in
cmpsb
mov
dec
sub
jbe
and
push
push
ret
ljmp
jns
inc
dec
je
addr16
lahf
add
mov
pusha
sbb
add
inc
add
fmul
mov
add
xorb
push
push
ja
ja
js
shll
jb
adc
sub
fistl
enter
sbb
mov
jge
adc
loope
mov
lcall
sub
jle
sub
test
mov
xor
lret
inc
pop
insl
mov
cmp
iret
js
outsl
adc
inc
mov
icebp
and
aaa
xchg
add
std
fsincos
bound
pop
mov
inc
rolb
dec
loopne
inc
movsb
push
aaa
pop
sbb
popf
dec
add
cmpsl
lods
jne
jbe
fs
mov
mov
mov
mov
cmp
mov
add
mov
xor
fs
shrb
push
xor
adc
rcrb
mov
scas
pop
pop
sahf
pop
out
mov
repz
out
arpl
push
jne
dec
adc
gs
pushf
out
scas
sbb
lock
test
add
jae
cld
fstpt
ljmp
mov
repz
jecxz
dec
fisubl
test
inc
jne
dec
nop
out
xchg
push
fldt
lret
nop
lea
and
and
sub
pop
pop
and
mov
shrb
jl
addr16
outsl
sbb
dec
out
imul
lods
push
push
push
mov
lds
outsl
and
cmpsl
sbb
in
inc
pusha
fstpt
mov
mov
mov
xchg
xchg
jmp
mov
sub
movsl
icebp
push
ror
imul
ja
add
cmp
daa
and
lret
daa
popf
mov
xchg
jge
mov
fdivrl
ljmp
adc
icebp
in
xor
add
mov
adc
andb
cmpsb
and
lods
push
xchg
xchg
push
es
pop
nop
nop
test
test
dec
fidivs
ficoms
push
lods
movsl
sbb
xchg
dec
lahf
int
outsb
mov
lods
pusha
push
adc
loop
mov
xchg
clc
je
shll
push
push
fninit
xchg
std
inc
mov
into
jle,pn
push
mov
and
add
js
inc
fisttpll
loop
lea
lock
xor
mov
dec
mov
je
dec
pushf
cwtl
adc
mov
jno
data16
cmp
xchg
pop
lods
xchg
push
xor
mov
jmp
jne
in
test
mov
jnp
sbb
and
movsb
inc
clc
mov
pop
add
sub
add
lods
call
js
push
pop
xchg
lds
or
jne
je
fdivl
sahf
mov
sarb
outsl
jge
mov
scas
aad
dec
dec
inc
xchg
push
or
mov
negb
sub
mov
sub
test
lret
mov
ds
dec
pop
shlb
std
and
js
stc
sarl
push
rcrb
push
jae
fcmovnbe
daa
inc
mov
sub
nop
incb
sbb
adc
mov
ja
inc
jp
xchg
icebp
pop
fcmovu
mov
sbb
pop
movsl
shll
lret
testl
or
ljmp
jle
outsb
inc
add
and
jnp
dec
repz
mov
add
ror
scas
xor
and
out
daa
test
mov
lds
jbe
push
adc
pop
pop
pop
les
dec
out
mov
les
sbb
or
pcmpgtb
popf
sbb
lds
adc
insl
cwtl
in
arpl
mov
xchg
cmp
inc
andl
scas
movb
outsb
or
insb
subb
pusha
jbe
mov
lds
pop
xlat
test
movsb
in
clc
jo
mov
xor
pop
mov
popf
aaa
mov
and
dec
mov
cmpsl
shr
mov
ljmp
xor
mov
dec
sub
lcall
or
hlt
aam
jo
jo,pt
push
in
xor
dec
sbb
jle
cmp
int3
sbb
mov
stos
xor
pop
orb
push
add
lea
and
xor
outsb
sbb
inc
cmpsl
jle
push
cmpsb
pop
or
sub
repz
jns
mov
inc
mov
out
divl
adc
pusha
and
jbe
or
or
pop
pop
xchg
jmp
dec
mov
outsb
adc
sahf
adc
pop
imul
sbb
int
dec
mov
mov
adc
andb
adc
popf
push
xor
or
int3
jl
or
sahf
push
popf
mov
fnstsw
mov
cmpsl
test
fidivl
movsl
roll
cmp
dec
lret
adc
cmpsb
ret
mov
data16
ljmp
adcb
adc
cli
ret
je
ljmp
fldl
adc
aaa
fdivs
xchg
cmpsl
icebp
xchg
jno
popa
cli
sbb
testl
cld
xor
aam
adc
jnp
insb
cmc
inc
adc
orl
jns
mov
stc
in
sbb
or
adc
out
push
xchg
cmp
stc
stos
popa
mov
out
xor
dec
inc
sbb
in
jge
cltd
imul
addl
std
stc
cltd
jmp
sbb
xchg
lahf
or
enter
adc
xor
cmp
push
lods
mov
gs
jle
sbb
pusha
mov
mov
out
in
pop
mov
or
jb
bound
cmp
mov
inc
fcoml
out
std
ret
in
lcall
add
testl
jae
mov
int3
jo
aas
adc
out
daa
xor
ret
mov
movsb
testb
add
adc
aas
out
cmp
lods
loop
stc
outsb
cld
add
pop
scas
rorb
rclb
fcomps
pop
xchg
fsubr
insb
xchg
pop
iret
mov
fidivrl
fildll
loope
mov
movsb
fdivrs
jge
ficomps
mov
repnz
lods
repnz
xor
mov
ja
js
enter
out
sbb
cmp
cmp
jne
in
pop
testb
push
xchg
repnz
call
push
je
mov
xchg
and
insb
add
dec
jb
in
lret
xchg
mov
fwait
std
mov
push
fbstp
pop
in
cwtl
call
cmp
loop
dec
sub
mov
sti
out
add
mov
call
nop
arpl
and
add
ds
mov
pusha
cltd
pushf
ljmp
in
pop
push
add
inc
and
or
popf
mov
sar
jb
inc
mov
push
in
jnp
push
clc
cwtl
mov
and
je
mov
xor
push
shll
push
shll
pop
shll
inc
xor
sbb
pop
lret
mov
add
cmpsb
out
lahf
movswl
mov
jecxz
testb
aaa
setne
clc
push
inc
add
cmpsl
adc
dec
jb
dec
xchg
mov
bound
rolb
fstpl
mov
pop
outsb
inc
push
out
push
mov
int
xor
push
stos
dec
adc
into
shrb
iret
xlat
mov
inc
push
jo
cmc
push
mov
mov
push
add
jnp
cmpsl
mov
jb
mov
ret
sub
icebp
inc
into
or
shl
cmpsl
inc
pop
loopne
ffreep
mov
mov
jecxz
stos
or
ret
pop
sub
dec
pop
pop
mov
iret
jns
jb
movl
push
dec
outsb
es
mov
pusha
in
sub
pop
inc
test
shlb
cmp
cmp
loope
cmp
sahf
sbb
je
cmp
stos
loopne
and
xor
push
mov
jecxz
out
adc
adcl
ret
imul
cmpsl
sti
lcall
add
std
cli
cmp
jle
scas
sbb
xchg
mov
mov
das
jmp
outsb
insb
cld
jge
mov
jb
rolb
loop
push
sub
and
push
cmp
cld
cmp
dec
out
xchg
mov
and
xchg
mov
fs
pushf
outsl
xlat
or
pop
ss
mov
data16
es
sub
stos
es
and
dec
pop
or
daa
sub
xchg
xchg
or
pop
sbb
push
jmp
adc
push
clc
jp
fcoms
ljmp
or
in
pop
mov
and
jge
jne
inc
xor
sbb
sbb
shl
mov
pop
and
js
jne
imul
adc
fnstcw
std
flds
adc
lods
scas
cmpsb
lret
enter
stos
push
jnp
stos
lret
out
mov
jnp
aas
dec
inc
out
jmp
inc
in
cmpsl
mov
jnp
pop
sub
ljmp
ja
movsb
ret
cmp
dec
mov
push
push
ljmp
mov
pop
inc
addb
repz
lret
xor
das
or
mov
push
ret
and
jbe
data16
pushf
pop
sbb
ljmp
mov
mov
push
inc
dec
and
push
push
xor
test
jg
adc
hlt
popf
mov
loope
mov
aam
push
xchg
data16
sub
or
add
push
scas
adc
cmp
adc
inc
cmp
pop
fs
or
aaa
in
icebp
pop
cmp
jg
filds
mov
pop
scas
ror
loopne
mov
inc
mov
pusha
je
in
stos
fbstp
push
rep
jmp
icebp
mov
shlb
xchg
jnp
std
fidivrl
sub
and
cli
cmpsb
int3
mov
stc
adc
mov
rcl
mov
add
lcall
push
into
in
mov
jl
push
push
push
sbb
cmc
pop
push
hlt
lcall
gs
ljmp
popa
movsb
stos
mov
cmpsl
sbb
xor
repz
imul
jbe
in
mov
pop
inc
cmp
mov
pop
mov
scas
cmc
pop
push
dec
xor
adc
es
sbb
mov
arpl
fidivl
les
sar
cmpb
jecxz
imul
fs
jg
dec
fwait
cli
iret
dec
adc
pop
stc
ret
fcomip
mov
push
or
jl
push
mov
cmpb
roll
or
dec
sbb
and
ljmp
or
mov
push
cmp
and
out
pop
in
gs
lret
fcompl
sti
pop
add
pop
aaa
inc
insl
and
mov
aas
jmp
xchg
jae
in
jnp
cmp
cld
lds
mov
mov
push
aaa
mov
xor
fmuls
mov
leave
sahf
inc
in
aad
int3
jmp
cmpsl
pop
bswap
push
in
in
xchg
push
add
pop
push
xchg
fidivs
mov
xor
push
stos
in
xchg
insl
or
loop
insb
sbb
scas
pop
loope
sub
and
fdecstp
xlat
xlat
mov
and
push
add
icebp
sub
cmp
js
sub
fdiv
into
cmp
ror
out
dec
outsb
sub
xchg
aad
push
out
test
xchg
out
add
mov
fldt
int3
xchg
mov
idivl
xchg
cmp
out
mov
fiaddl
cld
outsb
add
jl
into
aad
dec
push
or
cs
pushf
add
sti
or
popw
jno
fcom
jmp
std
imulb
lock
and
xlat
cli
adc
pop
clc
or
jecxz
mov
dec
inc
add
leave
mov
ret
ss
roll
sub
leave
sub
outsb
mov
pop
adc
lds
mov
dec
scas
xchg
test
jmp
xchg
sub
mov
or
cmp
pop
in
scas
cmc
fs
jbe
lcall
das
adc
outsl
mov
jp
push
lret
xchg
cmp
jne
sbb
cmpsb
lock
jb
addr16
test
xor
sbb
xor
adc
lds
insl
cmpsb
loopne
mov
push
mov
ret
dec
mov
dec
push
xor
cltd
sbb
xor
pop
hlt
je
fcompl
jnp
aam
daa
pop
jge
xchg
jo
jns
add
fnstcw
dec
movsl
push
imul
cld
clc
outsl
ror
xchg
or
in
pop
jmp
sbb
scas
aam
xchg
movsl
adc
lds
push
inc
mov
lods
jbe
push
pop
ljmp
cmp
and
test
xor
dec
gs
out
stos
mov
aad
push
jbe
jbe
add
outsl
jmp
push
sub
add
shlb
and
xchg
aam
sub
pop
jno
mov
ljmp
in
mov
ja
loope
mov
data16
jb
out
outsl
out
lret
xchg
jne
sahf
or
fscale
mov
insl
fisubs
test
cmc
test
cli
scas
out
pop
inc
aam
lock
sub
xor
mov
or
cmpb
sti
out
adc
jecxz
cmp
pop
jbe
in
int3
call
sub
xchg
popa
enter
mov
add
ret
ljmp
adc
mov
sub
jmp
pop
and
out
ds
mov
sub
pop
es
lds
add
mov
rolb
mov
lret
sub
lods
add
outsl
fiadds
stc
cwtl
pushf
pop
xor
icebp
mov
dec
enter
mov
jl
int3
sub
ss
mov
adc
es
lret
in
hlt
test
inc
lock
mov
sbb
shrb
fwait
lcall
pop
and
loope
xchg
and
bound
fidivl
jbe
mov
add
mov
dec
ret
mov
sub
lcall
cltd
sbb
mov
lods
sbb
mov
pop
cmpsb
pop
inc
dec
xchg
xchg
jns
in
inc
aaa
xchg
mov
rcrb
lds
mov
es
xchg
sub
mov
xchg
data16
pop
mov
arpl
fists
jnp
out
push
inc
lds
pop
mov
fdivp
xor
inc
push
or
cmp
addr16
lret
pop
rcll
loope
sub
lret
dec
insb
adc
push
push
leave
adc
mov
lret
pop
add
jg
push
dec
dec
adc
fsubrs
mov
pop
push
out
mov
daa
stos
loop
add
lret
gs
lret
mov
popa
dec
test
ljmp
push
sar
dec
stos
cmp
neg
push
push
rcrl
clc
shrb
xchg
idivb
ja
push
mov
es
cld
xchg
repnz
mov
adc
test
add
sbb
stos
jbe
jns
aam
bound
and
gs
and
pop
mov
sbb
fwait
add
out
fimull
mov
mov
pop
adc
leave
sbb
daa
pop
jmp
je
mov
cmp
cs
rorl
mov
mov
cld
lods
inc
add
inc
xchg
ja
cmpsl
and
mov
cmp
ret
dec
js
and
mov
sbb
jo
sbb
lcall
xchg
and
daa
push
cmc
push
test
mov
dec
pop
mov
cmp
push
xor
clc
mov
cmp
aas
xor
xchg
addb
mov
cmp
fwait
inc
mov
sub
fsubl
cmp
pop
aad
ret
pushf
imul
mov
sub
js
or
or
xor
shrl
xchg
lcall
dec
mov
lea
andb
and
push
inc
lea
xchg
or
mov
hlt
lcall
mov
cmp
and
mov
ficoms
andb
or
ljmp
push
jg
xor
mov
jo
inc
add
pxor
cli
push
rorb
ja
inc
pop
and
cmpsb
repnz
xor
cmp
and
ret
mov
xor
fdivs
xor
fimull
jno
add
cltd
cwtl
add
icebp
mov
loop
xor
mov
lock
jno
sub
push
pop
inc
xor
mov
filds
subl
sbb
dec
daa
ret
lods
jmp
pop
lock
out
adc
jge
scas
jge
in
stc
jbe
out
xchg
dec
inc
in
lcall
mov
xorl
xchg
subb
and
mov
lret
jge
mov
lret
dec
lcall
and
mov
scas
fdivr
push
mov
mov
lock
rcll
mov
xor
stos
je
mov
xor
test
das
inc
mov
dec
pop
sahf
bswap
mov
jnp
and
in
out
sub
xchg
dec
fsubrl
iret
and
daa
loopne
pop
pop
aad
cmp
mov
jg
adc
scas
leave
sbb
roll
stos
xor
pushf
sub
subl
inc
outsl
and
rcr
xchg
and
mov
dec
jbe
je
xchg
push
mov
js
nop
add
fnstcw
pop
loop
xor
lcall
sbb
add
subl
dec
ljmp
sub
xchg
bound
jb
data16
std
gs
pusha
push
out
cmp
call
shrl
xchg
ja
push
das
les
xor
mov
cmc
cld
lcall
cmp
ja
mov
loop
lahf
jle
aas
repnz
outsl
fcmovnu
xchg
pop
ljmp
icebp
mov
dec
push
pop
mov
and
push
les
sub
imull
enter
sbb
fdivrl
sbb
stos
sbb
sbb
add
pop
rcl
jnp
pop
mov
xlat
push
xchg
xchg
push
sub
pop
addl
xor
push
lahf
shrl
sti
mov
jge
mul
and
fwait
sbb
inc
arpl
test
call
fcmovnbe
data16
mov
aaa
insl
sti
cltd
mov
cmp
nop
sbb
cmp
sub
inc
add
popf
lods
in
adc
lock
mov
cld
ja
ffreep
dec
scas
mov
popf
add
int
pop
xchg
lods
fcoms
test
lds
pcmpgtb
jb
xchg
pop
call
mov
insb
pushf
movb
mov
jno
test
icebp
push
movsl
fwait
pcmpgtw
repnz
mov
loopne
ret
mov
popa
xchg
imul
aam
movsb
movsl
push
inc
in
mov
xorl
imul
push
pop
mov
cmc
xchg
jl
sub
or
and
xchg
push
pop
xor
cmp
push
sbb
push
imul
sahf
js
ret
in
mov
cmp
mov
sub
xor
sbb
clc
or
lea
add
das
outsl
mov
ss
sbb
imulb
push
xchg
sbb
pop
push
sarl
ret
mov
or
sbb
mov
add
and
add
add
mov
mov
data16
mov
sbb
sub
sub
jns
push
jmp
arpl
and
push
adc
xchg
jle
push
out
dec
inc
jp
roll
push
mov
mov
pop
lcall
add
rolb
mov
rorl
adc
or
xchg
insb
push
xchg
stos
iret
test
bound
push
jne
jg
mov
sub
or
rcl
ror
movsb
lahf
imul
popa
dec
push
or
mov
out
shr
push
sarl
add
pushf
jns
addr16
push
imul
sub
jae
push
jbe
and
movsb
fsubs
xchg
xor
cld
ja
pop
inc
dec
movsl
sti
ja
mulb
sub
inc
ja
push
pop
cmp
leave
das
push
test
ret
jne
sarl
mov
ret
insl
imul
lret
cmp
loop
mov
into
inc
rcll
lods
cltd
addr16
cli
add
sbb
adc
sub
inc
adc
sub
sarb
dec
js
outsb
pusha
push
in
scas
mov
xchg
pop
add
inc
lahf
outsl
movsb
mov
faddl
ja
push
or
cmp
cmp
icebp
pop
subl
cs
ret
stos
pop
pop
enter
addr16
das
inc
ds
xor
mov
lock
adc
mov
pop
sbb
and
leave
xchg
xor
xchg
dec
mov
dec
jecxz
push
aas
push
enter
cmpsl
jbe
xchg
in
sub
sbb
stc
xchg
or
loopne
int3
and
sar
push
in
and
inc
stos
adc
test
psrlw
fldt
shll
mov
cmp
xor
testl
cmp
or
mov
pop
cmp
jmp
mov
push
sub
xchg
or
incb
cwtl
inc
call
stos
mov
sbb
jb
out
daa
lods
aaa
add
add
int
mov
jns
mov
data16
push
stc
and
mov
mov
dec
mov
ja
enter
jg
daa
cs
xchg
fwait
stc
xlat
stos
jns
out
adc
addr16
cmp
out
pop
jl
cmp
push
or
mov
shlb
daa
scas
and
lds
scas
cs
mov
into
sarb
repz
add
ljmp
pop
xchg
or
add
fsubs
movsb
test
jp
sub
pop
lock
sub
ss
js
sub
sbbl
dec
pop
cs
push
in
sbb
and
das
mov
lods
setae
push
xor
push
xor
mov
push
mov
bound
pop
or
stc
jo
shr
add
leave
dec
mov
mov
fidivl
cli
popa
or
test
fildll
arpl
push
cli
dec
hlt
xchg
lret
les
inc
out
adc
push
cwtl
push
pop
mov
test
imul
les
push
std
outsb
andb
test
mov
pop
xchg
insb
adc
xor
cltd
popa
sbb
xor
mov
lods
jle
add
mov
mov
adc
rorb
mov
mov
ljmp
pop
aaa
mov
cli
sub
pop
fwait
cmpsl
ficoml
pop
imul
inc
fidivs
xchg
lcall
sbb
or
jp
cmpsb
repnz
les
cltd
int
mov
stos
daa
je
test
lret
mov
imul
mov
sahf
jbe
mov
push
stos
jecxz
jno
addr16
inc
inc
data16
or
lods
jnp
into
daa
repnz
cmp
xchg
jp
sub
adc
push
test
adc
shll
pop
mov
inc
push
fisubrs
cwtl
mov
ja
jl
cmp
push
mov
jns
lret
inc
mov
sub
popf
cmp
adcb
add
scas
data16
test
aam
imul
les
aas
jge
jl
jne
cltd
in
nop
std
movsb
sbbl
fstps
xchg
pop
lcall
jnp
out
and
xor
call
daa
sub
push
or
inc
cwtl
pop
shl
sub
mov
sbb
jae
jle
aas
push
hlt
movsl
push
cmp
daa
lret
aaa
insb
or
stos
shlb
pop
negb
mov
sub
xchg
loopne
push
test
xor
cltd
rorl
cltd
fnstsw
stos
push
push
jecxz
pop
stc
pop
cmpsb
mov
sub
dec
cltd
add
push
pop
xor
inc
mov
gs
int3
jp
jno
jp
out
adc
enter
jae
test
scas
vcmpps
sub
mov
mov
pop
mov
jnp
jnp
xchg
xchg
mov
cmp
fistl
scas
pop
adc
jle
cmp
test
xorb
cwtl
xor
add
pop
mov
iret
loope
sbb
fsubrs
xchg
ffreep
popa
ficoms
je
sub
aas
repz
pop
in
and
sub
xor
xor
out
lahf
insl
cs
jo
pusha
pop
arpl
and
adc
and
idivb
loope
dec
mov
sbb
negb
mov
add
pop
jp
out
mov
mov
ret
mov
push
test
cwtl
mov
dec
mov
mov
sbb
cbtw
pop
in
jp
sbb
fcoms
data16
adc
jl
adc
mov
call
push
icebp
add
rol
leave
int
mov
or
fnstenv
loope
xchg
pop
aaa
xchg
sbb
loopne
pop
int
xchg
sbb
sbb
push
cs
outsl
push
movsb
cmp
jecxz
jo
out
je
aad
cltd
mov
inc
cmp
push
ss
into
mov
pusha
movsb
cli
push
js
xchg
lock
movl
call
cs
mov
push
pusha
in
mov
push
ds
rcrb
mov
xacquire
call
sbb
addr16
ret
aad
ljmp
adcb
mov
ljmp
adc
stos
adc
mov
je
or
lods
mov
fiaddl
fdivs
push
test
shr
js
inc
jge
popf
incl
inc
lea
icebp
movsl
sti
scas
or
ljmp
or
popa
push
in
mov
sarb
and
outsb
cmp
test
jg
daa
dec
or
xor
cmp
insb
jae
pop
cs
lods
add
std
ret
and
setle
cmp
scas
rcrb
inc
mov
sub
insb
jo
mov
unpcklps
dec
hlt
cmpl
fistpll
xor
cli
sbbb
ret
mov
lahf
imul
int3
jge
scas
xor
imul
and
add
dec
icebp
or
and
jg
push
inc
sbb
jge
add
lahf
add
xchg
imul
dec
cli
or
inc
rcrl
jo
cwtl
pop
adc
push
push
pop
push
mov
mov
pop
xchg
outsb
ret
shll
xchg
insb
push
adc
or
ja
adc
inc
and
cmpsb
imul
dec
push
cmc
cwtl
icebp
inc
rorl
cmp
iret
xlat
ucomiss
push
insl
imul
insl
mov
xchg
push
mov
adc
in
inc
xor
mov
inc
mov
pop
lock
push
add
lds
call
insl
push
cmpsb
and
out
xchg
mov
fisubs
push
in
sub
stos
imul
rolb
sbb
pop
mov
in
addl
mov
rcrb
xchg
sarl
fmul
enter
dec
mov
jnp
popa
xchg
cmpl
loopne
pusha
lcall
dec
repz
pop
mov
lcall
push
pusha
roll
adc
and
jmp
or
xchg
lahf
dec
out
mov
cmp
les
in
imul
and
fists
xor
jge
pop
jne
jecxz
sbb
mov
dec
push
push
dec
sbb
cmp
jae
int3
mov
adc
in
dec
mov
fsubs
pop
mov
add
fcompl
orl
xchg
cmp
addr16
pop
jmp
lea
pop
jne
jge
jno
push
test
push
stos
fwait
dec
pop
cmp
and
loop
jbe
lods
push
push
xor
out
dec
test
jmp
fsubl
adc
xor
add
mov
mov
mov
or
dec
lahf
and
jmp
sti
js
out
mov
int
in
clc
cltd
pop
jae
jnp
lahf
in
jmp
jno
or
jns
dec
lahf
pop
and
cmc
mov
mov
repz
flds
xchg
arpl
inc
jg
xor
nop
mov
lret
sbb
xchg
test
cmc
jmp
movsb
cmp
push
rcll
imul
lahf
jo
stos
sub
icebp
std
jle
xchg
dec
mov
sub
iret
xor
jge
rcll
jo,pt
add
add
jg
xor
lahf
inc
ss
xlat
add
jle
repz
dec
rorb
leave
cld
aas
das
das
outsb
push
and
js
jl
push
add
fs
mov
jl
cltd
dec
adc
or
push
aad
or
add
or
iret
add
ljmp
jnp
pop
mov
filds
cmp
aas
lock
bound
cmp
popf
daa
je
cli
add
mov
sub
cmp
lock
xchg
xorl
frstpm(287
adc
incl
mov
or
lret
sbb
jbe
orl
mov
insl
lcall
xor
dec
aam
cld
and
sub
sbb
fucomp
xor
push
sub
daa
xchg
mov
in
lret
int
arpl
adc
das
and
jg
push
jne
xchg
sbbl
mov
jae
cmp
ret
xchg
mov
loopne
ret
cmp
popf
dec
out
rcrl
add
dec
adc
lds
out
cmp
pop
into
sub
inc
sub
pop
or
not
lret
dec
out
call
dec
xchg
jbe
outsl
cwtl
pushf
fnstcw
dec
sbb
cmp
nop
ja
in
adc
faddl
pop
cmp
add
stc
xchg
jno
xor
push
sbb
inc
xchg
or
mov
es
jle
mov
cmp
dec
test
dec
mov
mov
xor
es
out
subb
in
stos
adc
xor
push
sbb
sub
lcall
mov
test
inc
cli
fdivr
adc
adc
inc
or
test
iret
cmp
lods
lret
sub
adc
cs
dec
dec
and
idivb
xchg
and
mov
xlat
push
lcall
test
repnz
lea
jl
ss
jae
adc
push
jp
push
fisttps
insb
fisubl
add
mov
loope
jg
push
mov
sub
and
and
dec
mov
mov
or
shlb
mov
xor
aaa
repnz
push
dec
jnp
jns
cmp
in
jmp
add
push
imul
cmp
sti
stc
add
xchg
rcll
add
lock
xor
inc
xor
fdivr
and
outsb
pop
inc
les
pop
adc
ret
xchg
adc
mov
fucom
insb
cmp
imul
xchg
or
jmp
mov
lcall
in
insl
inc
mov
xchg
pop
cwtl
dec
cltd
dec
aas
xchg
out
fisubs
adc
rolb
int
popl
or
fsubrp
sub
negl
cmp
and
xchg
addl
cmpsb
push
fs
jae
movsl
mov
sub
mov
and
xor
pushf
addr16
fdivs
jge
push
jbe
push
cmp
fisttpll
xor
fisubrl
aas
fwait
dec
xchg
ret
loope
popf
enter
pop
nop
adc
pop
mov
data16
adc
mov
mov
mov
xor
adc
sbb
imul
sahf
cmp
inc
push
sub
pop
sub
repz
loop
cmp
lret
lods
fwait
lret
add
sbb
add
xchg
outsb
adc
test
ficoms
out
scas
or
pop
or
xor
decl
mov
sbb
cmp
jge
lcall
jmp
fistpl
dec
xor
pusha
sub
dec
mov
or
js
mov
push
push
int3
fistps
xchg
dec
jge
jp
cli
fisubl
cmp
daa
mov
outsl
mov
aam
sbb
xchg
adcb
in
rcll
jecxz
xchg
mov
xor
cmp
push
ficoml
in
ret
sbb
xchg
xor
pushl
nop
ja
lret
stos
sub
ret
dec
sbb
lcall
pop
sub
ja
pop
add
jo
add
cli
lea
scas
bound
jp
clc
cli
jmp
add
sbb
mov
movsb
outsl
sti
lods
mov
mov
std
xchg
dec
repz
adc
test
stc
fldl
or
cmp
stos
sahf
lret
push
out
ds
lods
push
xor
mov
push
stos
push
sbb
pop
mov
mov
jbe
leave
cmp
push
dec
jle
lods
or
inc
push
pop
push
dec
loop
fcmovnb
aas
jp
sbb
push
mov
push
jb
mov
rclb
out
leave
cmpsl
jmp
jmp
rorl
inc
mov
cmpsl
and
ja
add
test
push
insb
das
cmpsl
push
bound
sub
lret
mov
push
adc
jnp
cmp
int3
xor
adc
sahf
xor
leave
loop
jg
jmp
dec
jecxz
mov
pusha
ds
inc
mov
test
cltd
stos
mov
pop
xchg
push
in
adc
pop
mov
xchg
aaa
rcrl
sahf
inc
jae
sbb
jae
das
out
popf
out
loope
arpl
mov
fscale
sbb
or
aad
in
fcomps
push
mov
cmpsb
test
sub
lds
fxch
hlt
shrl
pop
lret
push
mov
aam
mov
xchg
jb
aad
or
adc
mov
sbb
je
mulb
pop
in
imull
stc
mov
mov
aad
shl
cmpsl
pop
sub
mov
fadds
rclb
std
aad
movsl
mov
subb
or
sar
mov
mov
leave
mov
lds
dec
dec
nop
gs
ja
mov
lds
cld
or
pop
push
outsl
cmpsl
test
out
outsl
aad
push
imul
sti
jg
mov
jle
add
rcll
mov
sbb
imul
push
jmp
ds
cs
push
fbstp
hlt
jno
ret
pusha
test
scas
xchg
fldenv
lret
rolb
mov
xor
dec
mov
xchg
call
and
in
mov
pusha
ja
jmp
xchg
xor
push
leave
jb
cld
mov
mov
mov
arpl
lds
test
jg
inc
lds
gs
pop
cmp
imul
xlat
cmp
outsl
imul
cli
fnstenv
repnz
pop
cltd
sbb
xchg
dec
lds
adc
jmp
jbe
add
xor
faddl
pop
push
jbe
add
loopne
sub
and
pushf
call
pushf
adc
sub
push
jne
out
or
xor
inc
cmpsb
or
xor
out
xchg
aam
xchg
xchg
push
add
add
pop
fwait
nop
dec
xchg
xor
cmpsw
or
dec
push
mov
insl
insb
leave
mov
push
xchg
call
cltd
out
fildl
inc
sahf
mov
xchg
bound
inc
inc
adc
jae
outsl
mov
shl
cmp
movsb
xlat
lahf
dec
loop
xchg
dec
sub
mov
bound
cli
mov
cmp
mov
outsb
jge
jecxz
inc
sbb
adc
fs
xchg
leave
jo
lods
imul
clc
jl
cmpsb
testb
sahf
push
mov
cmp
jne
push
popf
nop
cs
xlat
push
cmc
leave
leave
ret
inc
pop
out
repz
lcall
sbb
insb
cmpsb
dec
jb
push
mov
in
sbb
xor
les
or
cmpsb
ljmp
lret
iret
lret
mov
pop
dec
dec
sub
xchg
jge
add
dec
xor
xor
add
mov
shrb
movsl
ss
test
add
dec
fs
stos
incb
pop
jns
sbb
loope
pop
adc
std
pop
in
add
pop
jmp
mov
mov
jnp
sahf
jl
bound
bound
sarb
test
sbb
fnstcw
jle
ja
sub
push
sub
lahf
cli
ja
les
loop
xchg
rcrb
cmpsl
push
cmpsl
cmpsb
fsub
call
sbb
inc
add
or
andb
jg
cmp
test
xchg
loopne
int3
data16
in
rorl
jbe
ret
cmp
xchg
into
lods
repz
mov
xor
jns
push
lock
mov
and
sub
jp
mov
pushl
into
rcl
lds
shlb
xchg
ret
out
sarl
lods
add
imul
dec
inc
mov
mov
pmaxub
orl
or
add
shll
daa
push
sub
push
stos
scas
mov
xor
jmp
insb
mov
pop
fwait
ljmp
pop
and
frstor
mov
adc
inc
mov
adc
fisubl
movsb
dec
xchg
aas
sub
or
xchg
not
xor
icebp
push
jl
add
jb
imul
cs
mov
repnz
sbb
xchg
aas
out
jb
ja
and
ljmp
and
xchg
js
cmp
cwtl
mov
jo
mov
cmpsl
inc
sub
xchg
xor
and
cwtl
and
and
inc
test
or
ficompl
sub
jecxz
cmp
bound
mov
les
roll
outsl
pop
jbe
mov
jns
lds
int3
push
xchg
dec
int
pushf
addr16
pop
push
js
mov
or
sti
mov
sbb
stc
out
ljmp
je
inc
test
dec
push
pushf
lret
push
jmp
inc
fs
jbe
xor
mov
ja
lret
lods
lcall
pop
pop
sbb
pusha
data16
cmpsb
xchg
add
cmp
rcll
adc
and
inc
jns
add
rorb
pop
aam
add
repnz
je
subb
daa
in
test
je
adc
mov
or
jnp
mov
mov
cmp
cmpsb
mov
sub
mov
lods
push
mov
test
mov
push
fwait
mov
xchg
sahf
xchg
inc
and
repnz
insb
mov
sub
sbb
xchg
or
sbb
inc
aas
into
outsb
cmp
adc
mov
inc
sub
notb
imul
out
fwait
out
jns
sub
dec
js
test
pop
sbbl
rol
stc
cld
ret
ss
sub
xchg
and
pop
shlb
ja
mov
cmp
dec
lods
and
mov
rolb
adc
push
push
lds
jb
aam
repz
aaa
mov
push
inc
xor
int3
pop
test
clc
adc
scas
push
inc
stos
in
negl
mov
cld
insb
xor
int
cld
icebp
test
pop
push
lret
cwtl
sbb
cmp
jno
std
xchg
jne
shrb
xlat
xor
mov
xchg
aam
mov
addl
cmp
sub
fcompl
pop
jecxz
or
cmc
mov
lcall
push
in
jo
push
jns
push
sbbb
sbb
fcomi
add
rorb
lods
aaa
or
clc
mov
mov
insb
jl
test
add
pop
mov
fs
xorl
adc
inc
in
and
xor
leave
out
xor
call
in
inc
aas
bound
mov
std
cli
popa
stc
pusha
imul
cmp
sbb
mov
es
jge
pusha
inc
rolb
dec
or
cwtl
adc
cmc
pop
cltd
lcall
outsb
lods
fwait
adc
fdivs
pop
dec
cld
mov
jmp
xchg
xchg
adc
inc
jno
cmp
mov
mov
ffreep
popl
les
inc
mov
fld
or
shlb
push
or
and
bound
cmp
hlt
incb
mov
adc
mov
push
lea
jbe
xchg
int
mov
iret
jp
xchg
test
in
negb
mov
lahf
notb
mov
outsb
fbld
stos
ror
push
sub
outsb
add
push
rcl
xchg
adc
xchg
mov
arpl
jno
pop
sbbl
fisubl
dec
cwtl
fildl
lods
or
mov
cmpsl
push
arpl
xorb
out
mov
dec
sbb
xor
add
adc
stos
loop
shl
pop
mov
dec
jno
or
ljmp
xchg
add
bnd
jecxz
jo
orb
adc
cmp
inc
rcrl
mov
sub
imul
ret
test
xchg
pop
cmp
rcll
enter
mov
fsts
pop
loop
push
rolb
cmp
repz
inc
test
push
pusha
or
sub
xchg
or
add
cs
inc
fildll
xchg
bnd
into
adc
jns
stos
rolb
fwait
jg
icebp
inc
aam
pop
jp
enter
aas
and
inc
dec
je
xchg
mov
pop
push
into
push
test
sub
ljmp
fisttpl
adc
nop
aas
sarb
mov
jb
xchg
aam
sub
nop
lods
pop
loop
ja
and
dec
cmp
sub
fisubl
jne
shrb
push
jb
mov
dec
loop
and
mov
cmpsl
xchg
lcall
mov
xchg
pop
or
sahf
lods
xchg
pop
sbb
cmp
sbb
stos
mov
es
rep
fs
stos
insb
push
mov
mov
arpl
or
dec
test
mov
and
fdivl
call
fldt
and
bound
loopne
mov
mov
mov
das
mov
mov
repz
xor
out
or
pushf
enter
ret
dec
jno
repnz
lods
mov
jge
shrl
xorb
ds
xorl
loop
xor
mov
lret
setp
dec
iret
call
cmovns
int
std
out
push
dec
sub
adc
outsl
mov
les
fsubl
sahf
scas
in
push
clc
pop
cwtl
aad
lret
inc
sbb
outsb
outsl
push
sbb
ret
push
cmp
mov
xchg
in
jo
push
lods
mov
stos
aas
hlt
nop
mov
add
cmpsl
cwtl
mov
les
loopne
ret
push
pop
pop
push
or
mov
lods
mov
push
jge
ret
scas
cmp
fstpt
lock
icebp
jnp
push
push
mov
or
sbb
in
sub
cmp
test
js
es
fistpll
leave
test
cmp
push
popf
ljmp
jno
ret
mov
rcrl
xor
pop
push
sbb
push
jae
sbb
xchg
ss
cmp
sub
xchg
cmp
subl
pop
cmpsb
jle
out
or
stos
sub
fs
pusha
xchg
or
xor
sub
xor
push
cmc
lds
test
popf
aas
xlat
insl
hlt
cwtl
and
fistpl
jecxz
xchg
push
adc
rol
rcrb
pop
leave
stc
in
mov
push
xchg
rcll
xor
adc
lcall
xlat
jo
push
jo
bound
cltd
rorb
jae
test
test
clc
ds
notb
mov
lds
movsb
enter
loope
jbe
adc
dec
into
stos
outsl
xchg
cmp
hlt
lods
bound
sub
ret
mov
andb
repz
jp
sub
jno
xor
fsin
cwtl
testl
sti
addr16
out
dec
das
loope
pop
inc
in
push
ficoms
bound
insb
mov
mov
jmp
mov
pop
movsb
xchg
leave
mov
jge
mov
jnp
mov
lret
or
cld
xor
outsl
xlat
and
inc
inc
mov
aas
adc
cmp
repz
arpl
and
out
adc
mov
and
sarb
cmp
cmp
fwait
mov
lods
std
adc
cmc
out
mov
inc
push
sub
xor
or
mov
aas
dec
sub
pop
stos
rcr
xor
js
ja
add
js
adc
dec
leave
sbb
jno
xlat
fidivrl
aas
jl
adc
push
dec
mov
push
cmp
inc
hlt
es
mov
cmp
push
jbe
jecxz
lock
test
pushw
push
cs
dec
pop
sub
add
mov
les
xorb
adc
cmp
das
add
aam
xor
cmc
sub
out
mov
sarl
mov
nop
xor
jge
cmp
xor
mov
dec
iret
call
pop
mov
cmp
pop
fisubl
mov
dec
in
sbb
mov
jns
push
mov
push
test
mov
iret
push
jecxz
add
pop
loopne
pop
mov
dec
adc
push
pop
push
inc
dec
int
into
mov
push
ret
mov
test
dec
into
scas
add
xchg
into
xlat
jmp
jno
in
leave
cld
xchg
sti
sub
clc
arpl
and
dec
mov
or
ja
dec
adc
dec
leave
add
jo
sti
outsb
loopne
out
andb
test
outsb
jnp
rol
adc
dec
gs
out
jge
mov
mulb
inc
cwtl
mov
insb
xlat
or
imul
out
fcomp
hlt
add
mov
clts
jp
cmpsl
push
dec
mov
fsubp
scas
add
inc
leave
hlt
mov
out
in
adc
push
push
jecxz,pt
xchg
nop
pushf
xchg
sub
stos
sbb
pop
xchg
xor
cwtl
adc
and
mov
xchg
icebp
int3
adc
scas
testl
ja
cmp
clc
cmpsb
xchg
shlb
jg
jg
xchg
in
mov
mov
push
cltd
mov
call
mov
and
or
test
movsl
shrb
test
stos
mov
sub
sti
sbb
test
adc
mov
scas
imul
and
fidivl
cmp
jae
nop
jg
xor
sbb
movsl
adcb
dec
sub
jbe
sbb
and
in
xor
mov
push
dec
aaa
out
mov
jb
ret
fbstp
sbb
fsubrl
lds
sbbb
mov
mov
pop
loopne
cld
adc
cltd
pop
mov
cmc
or
pop
mov
daa
jecxz
shlb
jp
or
aad
xchg
adc
jne
je
pop
sub
jnp
add
push
popa
mov
lcall
adcb
pop
dec
dec
xor
or
add
and
inc
mov
sahf
mov
aas
std
mov
movl
push
adc
adc
mov
sub
or
jmp
out
jmp
das
push
mov
cltd
idivb
call
dec
repz
and
pusha
shrl
in
cmpl
ljmp
dec
inc
arpl
mov
adc
jmp
fstpl
sub
test
pop
dec
sbb
push
loop
sbb
in
xorb
cmp
cld
mov
add
out
xchg
jl
sbb
sbb
or
pop
rcl
aaa
push
out
xchg
insb
mov
rcll
add
jp
dec
outsb
jle
les
ja
mov
cmp
test
mov
jnp
pop
sbb
mov
clc
sbb
lock
push
je
rcrb
dec
xor
pushf
pop
xchg
test
jae
pop
jg
mov
sbb
xor
popa
push
movsb
outsb
loopne
push
push
test
pusha
mov
mov
cmp
jge
cmp
aam
push
mov
jbe
cmp
sub
push
hlt
sbb
data16
hlt
inc
or
pop
mov
mov
mov
ret
cs
jg
mov
fisubrs
addr16
mov
jo,pn
std
popf
pop
scas
mov
or
pop
xchg
stos
jmp
insb
scas
test
sbb
les
loopne
lahf
pop
sahf
mov
adc
xor
paddq
adc
dec
aas
push
cmpb
cmp
dec
pop
inc
jle
mov
mov
adc
leave
inc
mov
clc
lea
rolb
nop
mov
loopne
enter
popf
mov
jne
pop
mov
xchg
inc
cmp
push
rorb
fists
xlat
pop
daa
fisubl
jb
mov
cmp
pop
or
or
mov
cld
repz
mov
push
jbe
add
add
cmp
add
push
clc
int
sub
into
mov
fidivl
ljmp
daa
pop
ljmp
ret
scas
push
js
lock
jbe
lds
mov
push
imul
push
push
mov
inc
stos
lret
das
dec
push
inc
add
push
mov
inc
dec
shll
cs
scas
and
sub
adc
xor
mov
mov
call
les
popf
lcall
adc
sbb
cmp
fcompl
push
mov
mov
inc
cmc
pop
lds
mov
pop
mov
test
pusha
test
sub
jge
xchg
push
jmp
divb
inc
mov
cmp
mov
loope
aaa
jle
sbb
lds
push
mov
cmp
jo
and
test
mov
mov
jp
pop
out
mov
jmp
mov
sbb
hlt
push
push
xor
mov
insl
push
data16
mov
notl
int
outsb
rcrl
pop
lcall
mov
sti
cmpb
aad
iret
fwait
cmpsb
dec
shlb
dec
std
jae
loop
frstor
xchg
scas
call
adc
inc
lods
aad
loope
mov
fiadds
pop
sub
push
add
addl
jae
adc
jae
mov
fucom
cltd
mov
jmp
lea
jne
cli
popa
mov
mov
mov
mov
ds
xchg
ret
or
ss
sbb
add
xchg
cmpsb
inc
and
xor
mov
rcrb
push
mov
mov
idivb
scas
ficoms
add
xchg
movsb
or
push
push
sbb
ffree
mov
xchg
repnz
ret
icebp
or
daa
imul
pop
add
push
aas
iret
sub
ja
lcall
outsl
loopne
in
sbb
fdivs
aam
mov
jno
mov
imul
jno
jle
out
subl
xchg
ret
hlt
orb
fbld
repnz
push
jg
cwtl
mov
bound
xlat
fsts
fdivrs
adc
xchg
lret
sbb
aas
push
test
cmp
sbb
movsl
addr16
test
add
ljmp
lods
and
lahf
sbb
and
xchg
outsb
cmc
add
shlb
insl
stos
rcrb
dec
add
jl
cmp
push
insb
mov
addr16
mov
jbe
test
mov
sbb
pusha
std
pop
cmp
or
fistl
repnz
mov
repz
jmp
aas
add
int3
jno
negb
fisttpll
pop
mov
and
push
adc
and
arpl
push
rcrb
sbb
mov
xor
xor
sbb
lods
cmpsl
jmp
lret
shll
inc
jb
lcall
push
lret
pop
xor
mov
cltd
inc
inc
mulb
scas
mov
mov
lcall
sub
rolb
jecxz
dec
incb
and
out
or
inc
sbb
mull
ja
ljmp
dec
jge
mov
adcl
in
scas
aad
mov
xor
mov
dec
push
push
outsb
sti
icebp
mov
aam
out
push
sub
aaa
xor
mov
out
mov
ja
sarl
jp
sub
mov
sbb
jb
adc
lahf
xchg
jmp
and
cwtl
repnz
fbld
das
imul
fwait
mov
cli
cmp
stos
lods
cltd
or
mov
cld
xor
shlb
jb
dec
in
pop
mov
mov
mov
inc
jbe
push
mov
int3
inc
testb
cmpl
cld
fdivs
ja
push
cmpsl
divb
jmp
cmp
repnz
scas
cld
inc
in
mov
dec
mov
cmp
out
and
or
cli
jo
js
ret
dec
scas
pop
fisttpl
popa
pop
jo
fldt
and
xchg
push
aaa
sti
xchg
push
icebp
mov
sub
std
idivl
mov
jbe
jmp
ret
pusha
xchg
scas
xor
loopne
out
mov
push
dec
and
notl
cmp
repnz
cmp
jb
clc
mov
sbb
fisttps
push
lret
fcmovb
cmc
mov
xchg
sti
mov
loopne
decl
jo
test
in
mov
comiss
in
pop
push
sbb
outsl
mov
sub
in
cmc
jle
push
into
xchg
jl
adc
ss
cmp
push
in
push
lock
jnp
loopne
mov
add
cli
out
xchg
or
jmp
out
pop
frstor
cmp
inc
outsb
jae
sub
bound
sbb
stos
jl
imul
or
imul
xor
popf
cmpb
jmp
fs
popf
adc
aas
stc
mov
lret
std
adc
jecxz
jl
add
mov
mov
orb
es
lds
cmpsb
mov
adc
cltd
cmp
sbb
inc
fstpt
mov
aas
imul
cmpsb
out
shll
and
mov
dec
mov
in
cmp
mov
inc
xchg
stc
arpl
jmp
mov
xchg
js
aas
xlat
lock
subb
pop
dec
out
push
shlb
ret
cmp
jne
lock
pop
push
xor
xchg
push
out
aaa
adc
mov
xchg
pusha
repnz
test
pop
push
aad
or
inc
add
push
inc
leave
and
and
adc
mov
cli
cmpsl
jmp
jae
leave
in
orl
sub
adc
jp
stos
jnp
dec
jno
dec
push
inc
and
cmc
loope
cli
testb
xchg
in
fimuls
leave
popf
pusha
jae
push
push
inc
lea
pop
out
outsb
rolb
or
jb
int
sahf
inc
mov
popw
inc
repz
rcrb
add
stos
rcll
loope
add
cld
jge
mov
fnstsw
jge
jecxz
outsb
xchg
aad
test
and
lock
jo
push
fisubrs
pop
mov
push
outsl
sub
rcrl
push
mov
inc
sbb
mov
loop
mov
lret
insb
mov
mov
nop
sbb
outsl
pushf
icebp
jmp
jae
add
add
cmp
inc
sub
sbb
pop
nop
mov
test
outsb
es
push
ret
and
cmc
or
iret
inc
dec
and
or
in
aas
cli
jecxz
in
andl
inc
imul
xor
xchg
les
in
loop
repnz
jno
jecxz
add
mov
rol
add
inc
rorl
push
or
movsb
pop
outsb
clc
xchg
mov
sbb
xor
mov
push
mov
rcll
jmp
inc
mov
into
cli
rcrb
ds
push
movsl
scas
push
pop
inc
mov
insl
scas
push
test
orl
cltd
push
les
fnstenv
sub
sarb
sbbb
lcall
or
cmpsl
sub
dec
jnp
lret
jge
xchg
fstl
scas
mov
fwait
insl
xor
pop
test
pop
or
mov
lock
mov
mov
loop
cld
arpl
imul
fbstp
push
mov
leave
popa
pop
movsb
sbb
dec
jp
pushf
jmp
shl
cs
mov
fucom
mov
popf
or
sbb
jbe
hlt
mov
sub
addb
popa
cvtps2dq
fs
imull
jns
jl
jbe
mov
in
inc
sub
ret
dec
hlt
push
jo
in
stos
ljmp
bound
jb
shl
cld
hlt
sbb
sahf
xor
cmp
clc
ret
adc
mov
popa
popa
mov
adc
les
insb
pushf
ss
test
push
cmpsl
test
aam
dec
out
loop
dec
out
push
gs
rsm
les
clc
outsb
aam
push
inc
add
pushl
test
mov
jl
add
divb
sub
push
lret
cmpsl
popf
in
mov
pop
inc
in
jbe
mov
mov
lods
scas
sbb
mov
xor
test
mov
hlt
cmc
outsl
out
cmp
icebp
push
lret
addr16
out
cmp
sbb
or
push
icebp
sbb
repz
xchg
repz
mov
sahf
xchg
mov
lahf
notl
or
dec
ret
rcrl
or
sub
pop
inc
scas
mov
xchg
not
sbb
mov
and
inc
jmp
xchg
fdivrs
stos
clc
aas
sub
in
shr
repnz
adc
loop
shll
mov
mov
sbb
pop
movl
ljmp
insl
lcall
or
movsl
scas
in
push
mov
jne
add
push
into
and
cmp
inc
test
pushf
cmc
ret
adc
xor
cmp
fsubrl
movsl
jl
leave
je
insb
lock
rorb
divl
movups
jns
xor
sub
fsub
jbe
lock
lret
lahf
jmp
in
xchg
cmpsl
rcr
sbb
jl
lea
xchg
test
xor
mov
ja
rclb
adc
jp
mov
aam
sar
dec
js
call
into
fimuls
or
or
fwait
jno
xor
push
outsb
dec
int3
sbb
inc
push
and
addr16
ljmp
in
adc
mov
xchg
stos
or
xor
mov
or
outsb
and
loop
fcomps
sbb
jle
jno
fisubl
lcall
leave
fmul
cmp
xchg
sbb
aaa
mov
push
popf
or
lods
in
pop
outsl
cmpsb
xor
pusha
bound
xchg
in
dec
cwtl
adc
xor
vpcmpeqw
shrl
add
cmpsl
outsl
sub
or
lock
in
lret
pop
out
icebp
push
daa
nop
out
pop
iret
ja
insl
cmp
mov
inc
fnstsw
sub
jle
lds
sub
xchg
iret
cmp
shlb
or
stos
sub
or
cmp
stos
and
xor
imul
adcb
fiadds
pop
xor
mov
push
idivl
popa
aad
add
lock
andl
test
add
xlat
outsb
xchg
inc
mov
lret
jp
insl
push
pop
mov
cld
add
fs
iret
aad
xchg
sbb
xchg
adc
or
and
and
cmpsb
cmp
test
inc
mov
ljmp
cmpl
insb
fidivl
in
daa
test
jle
adc
lds
cmp
aad
mov
sbb
fwait
xor
xor
movsl
mov
xlat
cmp
shlb
xchg
sbb
icebp
dec
lods
sbb
add
lcall
sbb
xchg
stos
mov
daa
push
jge
je
sti
imul
cs
rcl
insb
add
pop
xor
mov
jle
sbb
mov
insb
xor
fwait
sahf
lock
add
jae
mov
and
or
or
mov
mov
cmp
inc
push
divw
ret
cmp
scas
idivl
dec
mov
or
lock
fstpl
fwait
daa
jle
mov
push
xchg
arpl
mov
xorl
cmp
fs
repz
orps
and
sbb
aas
dec
loopne
and
int3
pop
aas
cmp
xchg
cmp
adc
sub
xor
jl
xor
outsb
filds
push
pop
hlt
sub
xchg
ja
aad
inc
int
test
insb
in
and
inc
lea
push
insb
repnz
movsl
jns
pop
sahf
adc
shrl
ljmp
loopne
add
fwait
dec
sbbb
cmp
dec
into
movsl
enter
fists
jge
or
cmpsl
add
and
sub
pop
out
push
ja
pop
test
and
cli
sbb
and
bound
sbb
lock
stos
mov
outsl
jg
inc
sbb
ljmp
out
movsl
dec
pop
dec
jae
or
in
ljmp
lret
inc
mov
mov
adc
ja
sbbl
int3
jle
je
movsl
push
add
sub
loopne
icebp
lea
sbb
or
dec
pop
pop
mov
mov
aas
or
ss
sbbb
pop
and
test
and
sbb
and
or
test
sub
movsb
int
push
inc
sti
out
xchg
fistpl
or
mov
cmp
sub
xchg
xchg
out
and
adc
shr
stos
sti
scas
dec
cmp
xor
aas
sbbl
loopne
ficomps
sub
hlt
sub
mov
xchg
shll
push
fidivl
shl
mov
mov
pop
lahf
sub
cld
pop
pop
xor
stc
call
and
and
sarl
jae
lret
ret
ret
pop
leave
insl
subps
push
not
stos
add
sbb
inc
xor
pop
and
imul
mov
test
iret
sbb
lods
std
xchg
mov
rcrb
push
or
data16
push
test
cld
cmp
add
add
push
arpl
addr16
cmp
jne
test
fwait
cld
and
mov
mov
mov
mov
inc
cmp
movsb
lods
popa
xchg
fwait
push
mov
push
lret
inc
imul
mov
jb
sub
adc
ror
jl
jecxz
jg
pop
popf
call
fists
mov
clc
add
add
push
stos
inc
xchg
add
mov
cmp
cmpsb
mov
gs
and
fs
or
movsb
inc
aaa
jl
lret
mov
mov
mov
inc
scas
sbb
movsb
ja
mov
in
jae
mov
iret
mov
daa
arpl
xor
pop
int
mov
push
push
lods
xlat
jmp
in
xchg
shlb
shlb
sbb
xchg
mov
mov
jg
fisubrl
xchg
inc
mov
xchg
imul
adc
ss
int
clc
or
push
fisubs
push
repnz
jg
xor
push
jb
popf
inc
out
sbb
ja
test
stos
lds
data16
lret
inc
push
xchg
xor
shrl
in
xchg
imul
fmull
sti
std
sbb
ret
and
push
push
cmp
scas
mov
mov
pop
pop
hlt
mov
add
ret
movsb
jne
ds
pop
fildll
out
icebp
ljmp
xchg
jo
push
sbb
leave
dec
outsb
sbb
int3
pop
inc
inc
inc
mov
cltd
push
fisubrl
pop
scas
lahf
movl
std
gs
dec
adc
mov
daa
fdivrs
sbb
lcall
rolb
jae
std
sub
jno
cmp
lods
in
stc
lea
cltd
cmc
testb
xor
and
jmp
mov
inc
push
mov
cmpsb
repnz
cmp
jnp
push
pushf
sbb
lods
popf
mov
js
lods
add
dec
jl
aad
push
out
or
mov
pop
push
mov
mov
sub
std
or
xchg
pop
sbbl
fsubrp
mov
mov
stos
jae
inc
fs
dec
in
iret
mov
je
sbb
idivb
xchg
scas
pop
insb
fnsave
and
sbb
and
and
sbb
inc
jnp
push
xchg
mov
or
cld
addl
aaa
iret
xchg
testb
test
jb
xchg
mov
sub
dec
ffree
push
popa
push
pusha
add
xor
repnz
or
xor
aas
add
das
mov
or
dec
imul
sbb
mov
inc
imul
dec
addr16
inc
pop
mov
ljmp
bound
xchg
sbb
loop
or
jl
add
mov
jge
add
or
push
mov
ret
into
sbb
pmullw
inc
dec
icebp
gs
in
addr16
adc
xchg
leave
adc
aas
cmpsl
ja
adc
sub
rcr
or
mov
xchg
jno
rcrl
dec
jns
and
cmp
fnstcw
push
sub
mov
popf
mov
jno
lahf
sub
scas
dec
aas
fwait
scas
shrl
inc
mov
lods
pop
sub
pop
cmp
mov
fs
sub
sub
repz
or
sub
sub
inc
and
pop
pop
out
push
mov
cmp
cltd
xor
inc
test
push
and
rcll
notl
stos
mov
push
sti
inc
ret
js
mov
jnp
daa
inc
sbb
mov
adc
sbb
inc
cmpb
jns
lret
jg
inc
jae
daa
fwait
mov
cmp
mov
out
xor
jmp
jbe
jnp
lea
andl
fdivl
popa
dec
mov
imull
xor
setne
je
outsb
ret
mov
es
sti
cmp
test
pop
push
xor
jg
add
mov
sub
add
out
jnp
pop
idivl
push
gs
xchg
sti
cli
fistps
in
inc
pusha
xlat
add
mov
push
xchg
cld
pop
push
lea
pop
adc
enter
xchg
push
inc
xor
nop
gs
sbb
and
insb
int
insb
mov
fwait
or
push
scas
pusha
ret
mov
orb
repnz
jnp
sbb
call
or
mov
add
aad
movsl
lds
pop
dec
mov
inc
xchg
sbb
fs
sub
adc
ds
mov
pushf
mov
daa
mov
jns
mov
adc
lock
inc
pop
mov
mov
add
cmpsb
adc
and
decl
loope
cs
jmp
sarl
orl
xchg
addr16
lods
andb
movsb
std
and
fldcw
test
js
test
rclb
sub
ljmp
jns
mov
jmp
mov
sub
mov
mov
dec
outsl
or
lock
mov
lds
iret
adc
mov
shll
mov
inc
shrl
jle
or
mov
cmpsb
xlat
stc
pop
ljmp
out
sub
sbb
clc
cli
mov
jo
adc
push
repnz
stc
in
or
adc
jno
push
inc
cmp
loopne
pop
ret
adc
ja
mov
pop
repnz
jns
mov
xchg
out
imul
xchg
add
mov
hlt
aas
inc
mov
push
fisubl
mov
fisubrl
mov
inc
or
cmp
jae
push
adc
pusha
lock
cmp
pop
js
sub
cmp
or
mov
ds
cmpsb
sub
or
xchg
add
push
test
insb
fisubrs
cmp
out
jne
jnp
push
inc
mov
frstor
ret
inc
pop
mov
pop
xor
or
push
push
ja
fisubl
fldcw
arpl
jmp
mov
jbe
mov
xor
jmp
mov
adc
dec
mov
inc
dec
or
cmp
lret
jmp
jo
or
ret
pop
in
sub
push
neg
call
add
pop
pop
jecxz
sti
popa
fbld
js
push
bound
fisubs
imul
pusha
cmp
out
fs
cmp
je
adc
xchg
sbb
movsb
adc
cmc
daa
int3
aaa
cltd
in
lods
jne
out
sti
iret
out
iret
adc
cmp
cmpsl
in
push
jl
jmp
xchg
and
mov
cmp
pop
push
adc
push
sbb
dec
fistps
dec
je
icebp
ss
push
andl
test
cmp
dec
ror
pop
loope
mov
ds
lds
push
test
xlat
neg
dec
leave
adc
aam
mov
cld
sub
inc
adc
lds
or
in
xor
jno
jae
add
jb
cmpsb
ret
pop
jl
xor
push
movsl
mov
or
mov
dec
xor
in
loop
sbb
testl
mov
push
ret
cmc
pop
test
pusha
pushf
jecxz
jb
filds
repnz
das
adc
fsubs
call
sub
lock
in
sti
add
inc
mov
mov
fs
sub
lret
sahf
adc
ds
fidivl
xlat
data16
sub
call
xor
rorl
stos
inc
js
daa
pop
sti
lahf
jp
mov
mov
subb
and
int3
and
push
cmp
inc
popl
mov
shrb
fbld
push
in
outsl
jecxz
fcomps
loope
fidivl
jo
pop
into
fisubrs
repnz
lods
push
jmp
shrl
outsb
pop
adc
or
sub
sahf
mov
ret
pusha
jb
sbb
push
cmp
push
lcall
lret
inc
out
lea
orb
sbbl
mov
bound
pop
add
fmul
xor
mov
add
mov
loope
pop
stos
xchg
sbb
cmp
mov
add
fstps
xchg
mov
add
imul
ss
push
mov
or
pusha
std
push
clc
ret
and
xchg
test
sti
imull
mov
rcrl
gs
pop
sbb
sti
mov
sub
jo
mov
adc
ja
addr16
fisubrl
sahf
adc
mov
imul
or
popa
inc
sbb
in
jg
or
in
js
ret
add
mov
mov
repnz
rorl
out
cmp
testl
or
and
xchg
sub
shrb
xchg
ja
jno
jmp
adc
and
pop
mov
add
lock
and
lahf
push
dec
cmp
adc
ret
gs
cmp
adc
mov
cmp
ds
mov
jp
stos
push
call
jnp
add
enter
movsb
mov
in
mov
mov
pop
cwtl
mov
mov
mov
sbb
adc
inc
cmp
sti
xchg
mov
pop
loop
xchg
lods
cmp
ss
iret
ret
mov
sub
mov
mov
add
jmp
or
cmpsl
in
and
cs
jo
and
inc
addb
jp
xchg
xchg
mov
stos
adc
aam
cmp
add
inc
mov
loope
or
sbb
or
push
test
mov
jno
out
subl
popf
test
es
inc
xor
jge
cmp
movsl
and
adc
cmp
jp
pop
jo
mov
int3
fisttpl
jmp
ss
xchg
mov
fmuls
stos
das
xchg
daa
or
sbb
rclb
ret
add
push
pop
pop
add
fdivr
jnp
xchg
inc
jle
xor
pushf
dec
rorb
lods
inc
shlb
rcr
loopne
xchg
jmp
cmp
pop
add
loopne
push
xor
out
adc
imul
out
sahf
jns
andl
xor
cmp
adc
insb
dec
mov
test
faddl
cmp
call
and
shlb
popa
pop
cmp
push
test
mov
out
adc
in
adc
jo
std
or
movsb
cmpsl
ds
fistpl
cmp
inc
xchg
sbb
sub
mov
mov
outsl
aad
adc
add
jmp
add
cmp
jne
bound
in
mov
pop
lock
mov
adc
push
cmp
std
shlb
jecxz
jo
lcall
mov
loopne,pn
cltd
adc
shl
xor
movl
xor
hlt
sbb
icebp
sbb
pop
hlt
sbb
cld
cld
in
daa
inc
rcr
cmpsl
stos
loopne
and
sbb
inc
push
outsb
sub
sarl
add
orl
add
jo
popf
xchg
inc
fdivr
dec
hlt
push
fs
push
pop
xchg
jg
mov
add
pop
into
jo
jne
lcall
lea
lret
aas
js
xor
jo
in
jmp
inc
xchg
jl
cmp
lcall
int
inc
xchg
push
xchg
subw
jo
mov
mov
das
mov
aaa
or
clc
into
incl
mov
sarl
xchg
pop
jnp
and
mov
leave
notb
push
movsb
xorl
and
shrb
stos
sub
lods
add
inc
fldl
and
fimuls
and
pushf
and
xchg
call
jg
pop
or
push
fistps
out
inc
cmp
sbb
add
push
inc
sub
pop
xor
adc
xor
and
repz
sti
lret
mov
jp
mov
cmp
adc
ret
arpl
cmp
xor
jbe
xor
jo
xchg
dec
mov
adc
es
add
mov
adc
pop
test
les
add
jp
fs
iret
fnstenv
sbb
mov
stos
cli
sbb
and
jg
sbb
rorl
lods
out
lds
xchg
mov
mov
rcr
inc
bound
mov
bound
js
and
mov
stos
popf
ret
flds
dec
xor
sub
mov
mov
fildll
push
adc
pop
xor
addb
orl
xchg
jae
or
fwait
cwtl
pop
pop
push
outsl
fidivl
add
mov
mov
push
inc
or
cld
xor
jge
jle
mov
rorb
cmpsl
ja
sub
stos
mov
test
fldl
inc
sahf
inc
es
jge
clc
movsb
into
scas
push
mov
mov
pop
fcoml
ss
sbb
out
push
sub
hlt
cli
popa
push
int
jno
fsub
pop
sbb
imul
fisttps
mov
leave
jbe
inc
adc
ret
stc
jg
dec
test
push
and
fcmovnb
jp
pop
std
fldt
dec
shl
sbb
cmc
sub
mov
repz
xchg
xchg
repnz
cs
fbstp
pop
sbb
jno
out
aas
xchg
push
adc
inc
loop
cmpsl
bound
scas
stc
push
inc
push
insl
fidivs
or
sti
fimull
lock
scas
sbb
ljmp
jmp
loop
or
bound
and
push
pop
sbb
cmp
imul
fmulp
mov
sbb
sbb
xor
loopne
test
xor
pop
pop
cmp
icebp
in
lahf
lret
xchg
fbld
int
xchg
lret
push
pop
stos
mov
push
mov
push
mov
outsb
xor
sub
arpl
lahf
inc
pop
jmp
cmp
clc
es
out
sbb
jge
rcl
push
pusha
aad
scas
or
cs
or
fimuls
aad
andb
push
jp
call
dec
push
loope
pmaxsw
into
cmp
pop
ret
pop
sub
rolb
add
stos
es
daa
es
or
in
cltd
and
arpl
fldcw
subb
sub
lock
shl
mov
cmp
pop
decb
outsl
repnz
cmpsl
adc
nop
out
movsl
loopne
stc
test
lods
adc
leave
mov
outsl
ret
jns
outsl
push
sbb
cmp
pusha
push
movsl
dec
lods
lcall
test
xchg
or
test
dec
push
sbb
lret
hlt
and
sub
mov
fildl
mov
pop
mov
test
in
cwtl
fldln2
mov
inc
shrb
and
fisubs
js
pusha
push
inc
popa
les
in
adc
add
adc
addl
gs
pop
repz
and
jmp
in
das
mov
enter
mov
rorb
mov
adc
pop
pop
dec
in
repz
and
mov
fldt
add
xlat
fnstcw
xor
dec
or
das
mov
sub
xchg
inc
mov
lahf
mov
push
test
lock
xlat
mov
gs
shlb
jb
cmpb
loopne
lods
xchg
xor
xchg
push
pop
imul
bound
enter
movsb
andl
into
inc
arpl
fistl
xor
add
mov
xchg
sarb
pop
xchg
jecxz
fsubr
loope
hlt
test
mov
jbe
ljmp
mov
mov
sahf
mov
jmp
inc
fiaddl
cmp
jmp
insl
or
rorb
leave
sbb
xchg
xlat
repnz
jno
stc
imul
sub
push
xor
rorl
lds
jecxz
mov
ja
mov
inc
inc
inc
fs
add
incb
scas
test
mov
mov
jns
mov
es
push
decl
jge
sbb
mov
mov
mov
fcmovu
and
test
test
fsubrs
call
cmp
mov
cmpsb
cltd
imul
inc
mov
push
decb
adc
pop
cld
test
repz
xchg
div
out
shlb
nop
lret
adc
sub
in
jge
inc
ljmp
ja
jge
ds
bswap
push
mov
mov
inc
inc
and
lods
mov
mov
hlt
ja
adc
test
test
pop
lods
and
imul
dec
fisubrl
shll
dec
mov
pop
in
add
pop
push
and
sub
add
push
in
fdivp
lret
xor
test
cs
jo
cmp
sti
jp
push
xchg
cli
lahf
xorl
adc
pushw
and
or
int
aad
jl
pop
in
sbbb
or
and
insl
push
out
inc
movsl
sahf
cmpsl
mov
out
and
inc
cmp
xchg
xlat
xchg
mov
push
hlt
int3
sub
xchg
xchg
pushf
stos
jae
jmp
cwtl
les
adc
outsb
les
mov
add
mov
mov
push
dec
mov
jg,pt
inc
add
jmp
or
mov
fidivl
xchg
outsb
cld
movsb
dec
jnp
shrl
pusha
loope
fwait
mov
push
cli
dec
pop
pop
stc
dec
mov
dec
cmpb
ds
mov
std
lcall
push
cmc
adc
mov
xchg
xchg
in
xchg
mov
xchg
cwtl
and
pop
in
cwtl
imul
daa
icebp
rcrb
mov
xor
cmpb
and
push
in
inc
stos
or
cmp
dec
lret
cmp
xor
inc
mov
dec
fs
aam
es
mov
pcmpeqd
arpl
dec
imul
loope
fistl
dec
cmpsl
xor
inc
push
sub
cli
lcall
dec
lods
loopne
outsb
inc
dec
adc
lods
aad
pushf
push
xchg
xchg
inc
sub
pushl
ljmp
das
mov
add
dec
ret
xor
dec
adc
add
jmp
pop
pop
leave
bound
and
jmp
frstor
cltd
fstpl
lds
cmp
sub
out
jg
xchg
sub
dec
inc
dec
jge
mov
mov
mov
mov
mov
scas
dec
jns
or
idivl
mov
popf
inc
popf
ret
hlt
or
flds
pop
fsubs
sub
pop
cs
or
xor
sub
adc
add
cmp
and
js
jecxz
add
daa
cmp
add
out
jbe
push
mov
cmpl
sarb
add
inc
cltd
fcmovnb
out
shll
lahf
stos
int
into
enter
xchg
ljmp
and
leave
cmp
loope
repnz
decb
loope
stos
shll
insl
ret
insb
jnp
or
sbb
out
sbb
das
inc
das
sbb
push
dec
into
adc
shrl
mov
push
or
add
mov
push
mov
mov
lods
adc
xchg
pop
mov
decl
push
icebp
dec
popa
psadbw
scas
mov
sub
iret
test
out
inc
xor
cli
shll
je
push
test
lock
fstl
pushl
pop
lods
mov
imul
outsl
adc
lret
and
test
mov
in
loopne
push
inc
jno
sbb
mov
iret
or
jae
enter
push
pop
nop
add
cmc
and
aad
add
or
ljmp
sub
aad
sub
je
jge
roll
scas
pusha
inc
mov
push
adc
pop
cmp
popf
pop
mov
les
daa
mulb
repz
fbstp
mov
cmp
rorl
jle
inc
mov
hlt
mov
cs
clc
pop
inc
out
popa
jecxz
popf
sti
add
pop
es
jbe
cmpsl
icebp
mov
fiadds
add
ds
sahf
pop
sub
inc
loop
fdiv
in
jmp
inc
pusha
mov
mov
add
and
sub
sbb
pop
call
mov
sub
sahf
mov
dec
mov
stos
adc
and
cli
cmpsl
enter
pop
arpl
repnz
add
lret
mov
mov
popf
push
mov
ror
ret
and
jmp
sahf
pop
out
aad
clc
repz
out
loop
repz
xor
and
push
or
adc
adc
xor
pop
scas
cmp
mov
xlat
icebp
mov
ss
sub
jl
add
add
loop
sub
dec
pop
cs
pop
fsubl
push
mov
and
mov
adc
jecxz
insl
mov
jp
outsb
stc
push
ds
jle
pop
loop
xchg
daa
addr16
xchg
inc
pop
mov
and
jmp
adc
enter
addl
add
shr
push
mov
scas
popf
sahf
shll
dec
mov
push
push
rorb
fistps
push
lds
mov
ss
mov
inc
cmpsl
dec
sbb
push
arpl
or
adc
negb
ljmp
inc
mov
cmp
mov
cmp
popa
or
lock
cld
cmp
cmp
mov
and
sbb
or
stos
sub
out
pusha
sub
js
aam
dec
rol
sub
jns
cmp
pop
sbb
in
cs
pop
mov
in
ja
scas
out
push
jno
lock
xor
sarl
test
pop
xor
pushf
pop
js
dec
stc
jnp
stc
sub
sub
pop
sbb
in
or
int3
jae
add
xor
paddsb
mov
push
lahf
xchg
xorb
jmp
shl
xor
movsb
popf
aam
push
cmp
lock
cld
jmp
in
ljmp
into
push
sub
xorb
pop
dec
rorb
ss
mov
test
mov
shl
sbb
jmp
pop
cltd
test
cmc
std
jo
in
jp
scas
imul
in
sub
adc
push
cmp
dec
jns
mov
sbb
fdivrp
jno
clc
or
add
psubsb
add
test
mov
in
sbb
adc
push
js
inc
jp
mov
mov
ret
or
add
xchg
and
iret
out
pop
jb
pop
sub
lock
jle
adc
adc
mov
mov
fwait
inc
mov
fisubs
mov
xchg
movsb
mov
ficomps
rcll
mov
pop
inc
cltd
and
mov
or
dec
inc
inc
ds
mov
or
xchg
aad
pop
in
andl
mov
test
mov
lea
sub
push
dec
outsb
clc
or
mov
push
gs
jg
or
inc
mov
push
cltd
adc
mov
lea
mov
lahf
mov
bound
ljmp
mov
out
jl
mov
cwtl
cmp
icebp
cmpsl
int
call
nop
lods
dec
pusha
mov
adc
and
jl
mov
sete
popa
nop
fsubrs
dec
imulb
adc
adc
sbb
imul
loop
adc
lods
fwait
xor
aas
aaa
cli
jmp
adc
ljmp
ret
in
xchg
cmpsl
loop
fsubrl
jne
cmp
call
adc
shll
jg
xorl
fs
inc
idivb
loope
sub
fisttpl
sbb
pop
negb
jge
cmp
repnz
and
push
outsb
test
jmp
sub
xor
xchg
push
fisubrs
adc
cmpsb
popf
getsec
je
fdivr
mov
repz
mov
and
cmpsb
xchg
rcrb
lods
xor
lds
push
jle
jl
mov
sbb
dec
pop
outsb
imul
movsl
out
test
mov
stos
enter
xor
and
sub
int
fnstenv
or
xor
push
push
out
pop
outsb
jle
mov
xchg
jo
mov
xchg
push
imul
mov
test
sub
enter
push
mov
loopne
inc
test
das
mov
jo
fstps
incb
adc
in
cmpsl
mov
lea
out
mov
leave
pushf
mov
sub
sbb
inc
js
lods
in
rcll
fidivrl
dec
arpl
lods
adc
and
lahf
inc
or
push
mov
add
bound
gs
mov
push
pop
or
outsb
add
jp
outsb
es
pushf
aam
cmp
je
test
out
clc
lret
cmp
sbb
push
nop
jmp
push
xor
je
fs
jg
mov
mov
fisubrl
sarb
xor
xor
cmp
pop
jg
leave
xchg
int
xor
ja
insb
lret
mov
in
dec
push
lods
outsb
push
in
popa
xor
aad
add
lods
adc
inc
sbb
xor
cmpsb
pop
mov
mov
or
jo
xchg
gs
xchg
jmp
mov
lock
xchg
mov
in
sti
and
push
cmpsl
cltd
xchg
outsb
and
sarb
popa
ja
ret
xchg
rorb
decb
cli
das
mov
out
imul
in
inc
push
inc
out
or
insb
and
inc
cmp
out
pcmpeqb
jo
je
aad
leave
jbe
repz
nop
bound
scas
out
push
push
sti
push
icebp
push
and
xor
mov
sub
lcall
test
mov
cmp
cltd
jae
inc
inc
xor
iret
rcr
sbb
and
mov
fsubrl
inc
cmp
dec
mov
test
add
mov
mov
push
add
imul
adc
mov
les
arpl
sarb
xchg
or
test
dec
enter
sbb
fldenv
ror
outsb
sahf
cmpb
cmpsb
inc
jle
negb
sbb
leave
xorl
xchg
mov
push
adc
jl
pusha
adc
into
dec
std
xchg
cmc
js
xchg
stos
pop
and
mov
mov
mov
imulb
jge
lret
lret
mov
jne
scas
idivl
inc
fsubrs
call
mov
jl
jne
xor
mov
sbb
cmpsl
add
enter
xor
adcb
ret
ficoms
cmp
xor
jbe
pop
lods
jle
and
mov
shr
cmp
lods
mov
dec
dec
pushaw
jle
jg
xchg
sub
dec
jle
je
fiaddl
leave
mov
sbb
popa
dec
fcoms
mov
lods
push
xchg
nop
push
andb
pop
std
outsb
rorl
lock
movsb
adc
or
or
test
rcl
sti
lods
ret
push
in
pop
add
mov
mov
daa
hlt
shl
xor
dec
and
faddl
sar
dec
cld
mov
cmp
pop
xchg
mov
mov
sarb
out
add
push
popa
in
arpl
sub
mov
jg
mov
cmc
cltd
mov
outsl
sub
lahf
sbb
bound
add
out
sbb
inc
mov
adc
aam
xchg
sub
in
das
loop
and
test
in
and
jo
out
or
jp
stos
test
pusha
lret
sub
pop
leave
sub
lret
add
sub
pushf
repz
mov
xor
mov
and
cmp
xor
mov
imul
out
fs
sub
repnz
int
sbb
sub
or
inc
pop
pop
shlb
fdivrl
add
shll
adc
in
out
cmpsb
js
scas
inc
out
push
test
fidivrs
imul
out
push
and
roll
xchg
insl
sbb
shrl
jmp
mov
xchg
sahf
inc
loop
push
pop
rorb
loop
cs
jge
repz
sahf
repnz
and
scas
mov
xor
jge
dec
movb
shlb
and
pop
lods
mov
mov
es
mov
and
adc
mov
mov
push
or
fldcw
xchg
xchg
sub
adc
lret
xor
lahf
loopne
fcmovb
std
cmpsl
aaa
mov
pop
mov
cltd
fiadds
rorb
or
sub
insb
in
movsl
dec
lods
cmpl
shll
mov
sub
mov
loope
mov
out
mov
and
aad
and
andl
mov
loope
loop
aaa
xchg
mov
movnti
adc
pushf
xchg
adc
adc
imul
mov
mov
xchg
loopne
call
lds
pop
cmpsb
mov
mov
sub
cmp
imul
loope
pop
cmp
mov
inc
cmp
cmpb
sbb
mov
or
push
imul
xchg
idiv
pop
sbb
jbe
jecxz
adc
or
inc
and
nop
les
cmp
ljmp
leave
mov
mov
fnstcw
push
ss
mov
sub
jg
xchg
aad
cs
lock
pop
jmp
into
lds
movb
mov
in
call
cltd
xor
push
xchg
les
push
push
or
ja
dec
push
jg
icebp
lods
xor
call
xor
mov
mov
out
negb
mov
mov
subb
shll
jo
lret
or
sahf
push
push
and
lods
or
mov
pop
lds
jb
and
sbb
addl
mov
cwtl
mov
into
mov
jne
aad
stos
xor
imull
mov
inc
in
clc
out
jmp
insb
push
xchg
lods
fsubs
xor
fs
lds
push
pop
test
jb
test
xlat
fsts
pushf
in
iret
xor
jmp
shlb
or
call
sbb
ds
xchg
or
mov
sub
je
and
inc
cwtl
pop
dec
pop
out
loopne
mov
pop
addr16
adc
pusha
je
repnz
hlt
mov
lret
hlt
push
addr16
test
xchg
filds
jp
insb
mov
test
cmp
cmovl
push
push
adc
mov
mov
pop
cltd
fwait
movsb
fs
adc
sub
dec
push
imul
lods
push
and
add
incb
test
lahf
or
pop
push
std
out
sbb
cmpsl
rorl
sbb
mov
jge
sbb
mov
pcmpgtb
pop
jnp
not
jmp
icebp
pop
dec
cli
pop
ja
roll
pop
pop
adc
ljmp
push
test
out
repz
adc
xchg
mov
enter
rorl
and
lock
jne
pop
sbb
repnz
or
add
add
enter
or
repnz
dec
sbb
and
jnp
hlt
pusha
pop
xlat
mov
pop
ljmp
add
mov
movsl
and
sub
fidivrl
sub
iret
dec
out
int3
mov
dec
sub
cmpsl
jp
cltd
inc
imul
arpl
xchg
int3
lock
xchg
pop
xor
repz
mov
test
scas
push
pop
dec
daa
push
mov
scas
adc
xchg
movsb
stc
gs
xchg
add
pop
js
mov
push
fwait
adc
dec
out
loope
sbbl
pop
sahf
sbb
mov
xchg
cmp
cli
fiaddl
lods
push
aaa
imull
dec
jp
inc
pop
ss
jmp
xchg
loope
mov
cmp
and
lret
cmp
xchg
or
ljmp
inc
mov
xchg
mov
movsl
add
insb
jno
loope
call
mov
jae
mov
push
pop
std
push
cmpsl
lret
sbb
jmp
xchg
sbb
cmp
xor
add
sub
addl
out
cmp
insb
xor
aam
fwait
rorl
bound
mov
xlat
jle,pt
xchg
cmpsb
fcoms
insb
das
mov
adc
mov
mov
adcb
jb
movsl
and
and
sbb
xchg
xor
push
push
jp
mov
dec
rolb
movsb
inc
add
mov
or
je
fpatan
icebp
clc
dec
daa
aam
add
scas
aaa
adc
adc
inc
in
and
les
mov
pop
pop
cli
or
xchg
pop
mov
pop
fldcw
jnp
fidivrl
popf
xchg
lret
fs
leave
shlb
fbld
mov
push
fsubl
push
jp
mov
ficoml
aaa
addr16
pop
insl
mov
sub
inc
mov
inc
outsl
dec
repnz
mov
xchg
mov
jne
push
fisttpl
insw
push
stc
test
cmp
inc
aas
loopne
cmp
int
repz
das
sarb
stc
pop
mov
sub
inc
cvttps2pi
enter
popf
fistpl
mov
cmp
xor
inc
add
mov
enter
cmp
dec
and
shlb
mov
xor
jg
xchg
aam
sbb
mov
ljmp
rcll
mov
and
iret
shlb
pop
xor
insb
xor
sbb
test
cs
int
push
popf
stos
mov
dec
aad
shll
cltd
pop
xchg
xchg
jg
add
push
xchg
jnp
bound
xor
outsl
test
add
inc
xchg
fsubrs
repz
fidivs
lahf
leave
mov
adc
mov
call
loop
int
leave
ret
les
or
int3
int3
pop
push
fldl
adc
in
cmp
lret
xor
sub
pop
push
mov
jle
mov
movsl
inc
fstl
sbb
cmpsl
sub
pusha
xchg
cs
mov
add
fdivs
inc
cmp
adc
push
adc
and
jmp
pop
rcpps
pop
testb
or
add
leave
mov
jns
jne
out
popf
jl
mov
loop
dec
enter
dec
pop
leave
mov
dec
push
xchg
pop
dec
sbb
ja
adc
jmp
sub
imul
pop
push
mov
and
les
cltd
sub
sbb
lcall
mov
lret
shll
std
out
lods
mov
adc
in
sub
sti
mov
jl
sub
cmpsl
mov
pop
daa
xchg
mov
cmp
fiadds
inc
mov
sbb
addb
pop
jge
sbb
jne
das
xlat
in
out
mov
leave
mov
inc
mov
pop
xor
shl
int
lds
pop
cltd
sbb
test
and
sahf
or
push
xorl
mov
push
and
jae
jg
mov
jno
scas
xchg
scas
lahf
aam
mov
outsl
out
int3
cwtl
or
cmp
mov
xrelease
pop
inc
mov
inc
mov
or
jb
mov
lea
cli
in
out
add
cmc
sbb
ret
mov
pop
xlat
fdivs
adc
jp
jl
cld
inc
insl
outsb
rcr
test
pushf
leave
dec
cmp
psubw
ret
leave
xlat
xlat
xor
clc
inc
data16
arpl
mov
shlb
out
pusha
lahf
mov
add
sbb
mov
mov
loopne
mov
je
rolb
lahf
fcompl
je
movsb
and
int3
pop
les
push
mov
adc
mov
jnp
inc
pop
outsl
fdivrp
adc
add
pusha
mov
sbb
outsb
lods
aad
add
mov
call
scas
ljmp
cmp
mov
mov
ljmp
sub
movsb
add
mov
xor
mov
test
cmp
test
repnz
dec
inc
inc
cmpsl
js
jns
mov
cmp
stos
call
ficoms
mov
add
push
pop
mov
cs
jmp
pop
lret
jno
in
and
pop
jo
movl
cmp
popf
dec
xor
push
cmpb
ret
daa
leave
iret
dec
add
jb
mov
lahf
dec
je
shlb
push
stos
xlat
sub
jecxz
xlat
arpl
insb
mov
push
mov
lods
cmp
bsr
jmp
scas
push
dec
mov
fs
pop
push
push
mov
pusha
push
mov
aas
mov
pop
push
in
cmc
push
or
sti
call
orb
dec
mov
xchg
scas
gs
push
jmp
mov
add
jge
jo
cmp
clc
nop
or
hlt
dec
or
sub
or
fsubs
dec
mov
push
lock
pop
pop
push
icebp
aam
pushf
inc
iret
inc
lods
inc
shlb
push
mov
inc
dec
mov
test
scas
xchg
mov
add
adc
out
adc
js
mov
lret
outsb
repnz
cmp
xchg
rcll
shll
push
dec
xor
mov
stos
orl
or
mov
sar
fidivs
cmc
iret
cmp
cwtl
dec
gs
cwtl
dec
pop
dec
into
inc
jbe
es
mov
jecxz
pop
mov
push
scas
or
insl
int3
call
mov
sbb
or
push
fadd
mov
pop
mov
cs
cltd
cmc
push
inc
xor
mov
push
sub
xor
jmp
inc
xlat
js
push
ss
js
inc
filds
push
test
stos
ss
fcomps
dec
shl
fmull
add
jg
xchg
out
adc
lretw
inc
aad
pusha
pop
js
and
sub
inc
xchg
xor
test
sub
and
lock
in
push
movsl
cmp
movsl
mov
lret
out
popf
mov
push
xchg
sub
popf
movsl
xor
cmp
out
and
sub
push
in
adcl
hlt
mov
pop
loopnew
add
aam
add
sbb
arpl
adc
xchg
movsb
xor
rcrb
and
roll
ret
mov
mov
stos
rcrb
mov
out
imul
fimull
dec
jecxz
push
popf
add
imul
sti
mov
dec
sbb
push
and
mov
push
dec
cltd
sub
call
add
ja
in
inc
add
jae
xchg
lods
fwait
jno
add
or
or
negb
xor
xor
jle
hlt
pop
pop
hlt
sti
flds
hlt
mov
test
jp
and
push
xchg
sar
es
in
or
jns
test
fsubrs
int3
ljmp
stos
aam
jp
rcrb
lret
outsl
cmpsl
ss
push
cmp
push
xchg
jae
lahf
adc
lcall
pop
sbb
lret
jecxz
xchg
or
push
leave
insb
xchg
xchg
enter
mov
lock
aas
sbb
inc
add
fs
pop
adc
bnd
pop
je
or
bound
inc
addb
das
jge
mov
xchg
jg
out
mov
pop
aam
add
sbb
out
mov
nop
insb
scas
mov
push
movsl
icebp
popa
mov
xor
inc
stc
xor
mov
scas
or
or
fstps
push
arpl
adc
es
and
mov
aam
pusha
mov
push
icebp
loop
add
cli
in
mov
hlt
insl
movsl
adc
pop
or
imul
cmp
pop
push
ds
push
es
pop
imul
stos
xchg
jle
cmpsb
iret
testb
loope
enter
jns
les
adc
xchg
adc
mov
stos
fistpll
lods
xor
les
mov
cmpsb
xor
sarl
jmp
test
adc
arpl
or
inc
cwtl
push
jno
lods
push
mov
cwtl
xor
imul
test
mov
and
or
inc
stos
fimull
add
or
push
jge
ret
jne
movsb
ret
sbb
lods
in
cld
lock
and
sbb
mov
adcb
and
rorl
pop
lahf
adc
stos
and
pop
mov
xor
aad
pop
sahf
cmpsb
and
or
or
inc
scas
pop
push
scas
js
sub
inc
rcrl
jle
push
lcall
cmp
xor
rclb
or
xchg
fnsave
push
cwtl
daa
push
int3
adc
pop
lahf
jecxz
test
jb
ja
xor
fs
adc
hlt
mov
lock
ret
decl
push
sahf
test
mov
lret
stc
insl
out
push
pushf
jb
shr
adc
iret
gs
outsl
fwait
push
mov
ss
add
ja
test
sub
addb
inc
fs
dec
mov
in
clc
insb
jb
aas
pop
stc
hlt
filds
add
mov
in
stos
xchg
sbb
lds
cmc
bound
bound
or
xchg
in
push
or
push
cmp
push
fwait
mov
sub
ja
ljmp
add
orl
or
mov
subb
dec
push
imul
dec
push
dec
push
mov
arpl
dec
movsb
stc
jno
ds
cmp
mov
mov
add
data16
addr16
dec
dec
out
ret
fs
push
mov
es
into
aad
ret
mov
ja
into
lret
stc
or
inc
or
jl
aaa
mov
ja
aad
xor
sti
pop
xchg
cmpsl
jg
mov
push
loop
jnp
jbe
sub
adc
inc
inc
out
out
jno
pop
jne
mov
push
mov
pop
ljmp
nop
push
mov
mov
pop
rclb
lahf
adc
out
fmul
test
call
pop
push
in
repz
flds
out
popa
jbe
xor
mov
shlb
mov
aam
iret
adc
sbb
jns
cltd
ja
mov
jbe
dec
mov
sbb
xchg
int3
insl
and
jp
scas
pop
sub
insl
or
les
bound
dec
fcomp
cmpsb
inc
movsl
xchg
mov
pop
rcrl
inc
pop
inc
jle
std
push
jge
adc
adc
add
pop
pop
sub
jnp
sbb
xor
ss
cwtl
push
into
outsb
out
shlb
pop
push
je
jle
sub
std
push
popf
clc
mov
and
enter
subl
dec
xor
fcoml
xor
dec
rcrl
sbb
dec
cmpl
nop
pop
scas
cmp
sub
movsb
cmp
aam
sbb
inc
push
arpl
in
std
insb
das
out
popa
mov
push
cltd
call
dec
pusha
push
imul
ljmp
stos
shll
and
pop
out
adc
iret
popf
adc
arpl
sub
add
scas
xchg
sbb
mov
adc
add
aad
out
dec
mov
xor
and
sbb
stc
sti
xor
clc
xchg
sub
sti
loopne
cli
in
xor
push
in
sub
sbb
jnp
xchg
fsubrl
mov
sub
fwait
mov
mov
lock
clc
fiadds
or
lods
sbb
and
and
xor
data16
fdivl
stos
adc
aaa
fisttps
xor
sbb
cs
icebp
push
pushl
dec
stos
jmp
sbb
push
adcl
sahf
or
mov
sbb
in
mov
push
sbb
inc
add
jno
pop
pusha
inc
sub
push
mov
std
fstp
mov
fs
shlb
aad
scas
test
call
mov
out
mov
lahf
enter
popa
pop
rolb
rcl
sbb
sbb
add
sub
dec
aam
and
pop
iret
hlt
and
sar
fbld
inc
mov
jmp
mov
andl
sbb
mov
fiadds
dec
insb
lahf
mov
jne
in
and
dec
mov
clc
rcrb
dec
rolb
faddl
call
mov
test
stos
add
ffree
mov
mov
hlt
cld
push
adc
sub
xor
cmp
and
mov
xlat
dec
sbb
dec
mov
cmp
jle
mov
loopne
lcall
mov
xchg
xchg
xchg
imul
dec
lret
popa
les
dec
in
fidivrs
pusha
mov
xchg
and
mov
mov
insl
pop
push
add
popa
jp
je
mov
mov
insb
aam
mov
sti
mov
jecxz
arpl
popf
in
mov
xor
cmp
stc
test
les
daa
mov
xor
push
xlat
mov
add
mov
es
or
mov
push
pop
mov
nop
daa
add
pop
iret
jo
add
xor
dec
and
arpl
mov
jg
add
stc
cmp
lahf
loope
mov
xchg
xchg
ljmp
minps
xchg
add
ljmp
push
xor
adc
push
jnp
push
jl
or
mov
pop
pop
or
mov
stos
mov
mov
and
cmp
lret
in
movb
std
sub
rolb
mov
mov
aas
test
inc
push
add
mov
xlat
lock
shrl
cmp
pop
jmp
test
outsl
imul
hlt
daa
in
and
lcall
pusha
cmp
inc
dec
sbb
cmp
fbld
pop
pushf
or
popf
mov
fwait
aas
fadds
inc
sub
lret
mov
fstpt
add
movsb
repnz
mov
mov
cmp
fsubrs
lahf
fimuls
cmp
xchg
pxor
dec
mov
xchg
cmp
xchg
loopne
insl
mov
xchg
aaa
movb
jne
sub
push
shr
ljmp
dec
mov
aaa
mov
inc
repz
aas
imul
icebp
repnz
cmp
testl
pop
mov
js
mov
sbb
fnstcw
inc
xor
add
repnz
out
sub
xor
xchg
jge
in
imul
mov
jnp
iret
mov
lahf
daa
decl
add
mov
dec
fs
mov
lods
add
pusha
xlat
jb
add
loop
pop
les
sub
inc
ror
fistpl
mov
shrl
call
lret
cli
add
mov
or
cld
mov
mov
repnz
mov
jo
imul
test
andnps
rcrl
leave
mov
xor
or
or
inc
mov
lret
cli
leave
aaa
sub
arpl
inc
popa
sub
idivl
jbe
sub
inc
xchg
lcall
lea
xor
dec
cmp
in
push
mov
mov
js
and
adc
ret
ret
pop
scas
jg
and
mov
jmp
cltd
ljmp
push
repnz
cmpsb
xchg
push
popl
inc
pop
int3
cmpl
xor
inc
fisttpll
mov
lods
cmp
mov
hlt
mov
add
imul
push
int3
xchg
mov
into
pop
cmp
xchg
arpl
repz
add
adc
sbb
test
je
cltd
pushf
fdivrp
es
in
and
lods
mov
mov
and
add
out
mov
scas
adcb
xor
push
inc
add
mov
inc
pop
push
push
jb
in
push
cmp
ja
js
jmp
dec
dec
cmp
mov
andb
or
ljmp
mov
push
aam
aam
out
ja
out
scas
add
jmp
lahf
inc
lods
in
jmp
data16
and
lret
lret
push
addr16
push
push
iret
in
cmp
xchg
fidivrs
fbstp
ret
mov
inc
pop
add
in
pop
ja
push
mov
xchg
sbb
pop
sahf
out
inc
clc
mov
mov
sti
sti
stc
push
adc
std
lret
cltd
xchg
pop
pop
cwtl
shll
sbb
sbb
add
xor
mov
mov
scas
jge
or
fcompl
mov
mov
pop
push
outsb
xor
movsb
pop
sbb
inc
xor
aaa
and
push
dec
xor
dec
add
shrb
sub
or
inc
outsb
mov
jnp
mov
icebp
mov
in
ljmp
mov
add
gs
mov
adc
push
push
sub
movsl
sahf
ss
out
adc
imul
push
shrb
insb
repz
repz
cmpsb
mov
std
sub
sub
add
pop
add
movsl
popa
xchg
dec
jnp
adc
mov
mov
sti
mov
xor
dec
pop
jge
dec
adc
hlt
fwait
inc
in
jbe
jle
lods
pusha
push
cmc
in
inc
shlb
mov
aad
adc
iret
and
and
cmp
dec
in
sbb
iret
je
inc
push
sbb
cmpsl
lods
shll
cwtl
fsub
mov
scas
rorb
aad
movnti
mov
pop
iret
inc
cmpsb
add
mov
cmp
lods
ret
jo
les
fstp
std
fimull
lret
bound
inc
adc
cltd
call
leave
add
inc
or
pop
xchg
inc
and
int3
incb
scas
test
lahf
int3
push
aad
sub
sub
and
mov
push
pop
xchg
inc
mov
sbbb
push
mov
xchg
jne
pop
or
jb
push
insl
aaa
mov
in
xor
pushf
test
mov
inc
fs
pop
insb
sub
int
jne
jmp
mov
lret
adc
inc
cmpb
stos
aaa
imul
outsb
popf
sub
and
mov
es
push
repnz
into
lods
popa
adc
loope
adc
adc
sub
ljmp
push
rcll
cmp
mov
js
out
ror
sbb
lods
add
in
add
cmp
pop
pop
popf
lret
sub
xchg
sub
jmp
dec
sbbb
add
fcomi
ljmp
ret
xor
add
mov
ljmp
jbe
push
jbe
cmpsb
sub
xor
push
outsb
sbb
bound
fcoms
dec
xor
jno
inc
pop
lahf
fincstp
pop
add
xchg
mov
push
loopne
adc
xchg
dec
mov
mov
ljmp
xchg
inc
cmpb
outsl
inc
dec
xchg
xor
sbb
jae
shrl
loopne
jae
cld
outsb
adc
mov
jo
test
xchg
jg
dec
mov
adc
cs
sub
fs
jmp
loop
loop
aaa
pop
pop
xchg
cmp
or
jnp
jno
loopne
mov
iret
jl
jg
adc
sbb
push
cli
test
mov
adc
push
pop
add
aas
leave
push
fidivl
mov
movsb
lret
loopne
fistpll
fisttps
inc
jp
cmpsl
cmp
cli
xor
pop
in
inc
mov
sbb
imul
mov
dec
or
daa
pusha
jl
les
fs
out
movsb
push
and
iret
mov
out
repz
xor
fsubrs
test
xchg
test
ret
aaa
pop
ret
jno
sbb
push
outsl
lods
dec
stos
dec
stos
je
cltd
or
out
mov
in
add
in
icebp
pop
xchg
xor
push
fsub
aad
push
outsb
cmp
and
inc
push
mov
ret
adc
mov
ss
jae
in
cmp
jb
push
out
pusha
mov
and
and
out
pop
or
push
repz
sbb
fsub
ja
xchg
in
push
inc
mov
loope
pusha
sti
cli
ret
push
int
mov
fimull
ljmp
cltd
xchg
mov
dec
or
or
hlt
hlt
xchg
cmc
js
push
sbb
pop
aam
and
dec
punpcklbw
pop
es
cmp
hlt
dec
adc
fwait
pop
jecxz
imulb
daa
sub
loop
add
pop
in
fnstsw
fsubrs
out
sub
lods
fimuls
or
aas
push
xlat
sahf
jp
rolb
dec
dec
fsub
pop
push
idivb
push
or
add
mov
fsubrs
pop
scas
xor
xor
mov
lods
xchg
out
sarb
mov
in
pop
adc
les
dec
std
mov
in
ret
jbe
lret
dec
es
adc
push
add
mov
les
das
ret
pushf
insb
sub
sub
pushf
aaa
out
leave
mov
inc
es
imul
insl
repz
mov
xor
sub
pop
jg
cmpsl
outsl
dec
insl
fsubl
out
pop
mov
rcr
dec
xor
mov
popa
xchg
in
push
pop
addl
cmc
dec
dec
or
pushf
sub
je
and
xchg
push
pop
ret
cltd
jns
xor
inc
outsl
std
shlb
dec
fidivs
cld
push
push
cmpsl
shll
popf
fistps
mov
xor
repz
movsl
fwait
cmp
shr
mov
jnp
fisttpl
jb
dec
je
xor
xchg
cmc
add
stos
push
call
or
push
test
cmp
out
daa
mov
ficoms
sbb
jnp
insl
jns
les
imul
out
insb
fwait
gs
jl
pop
inc
cltd
dec
out
in
mov
test
or
dec
fisttps
or
and
ret
lret
out
mov
xor
xchg
out
dec
fs
ds
cmp
bound
ret
dec
cmp
lods
xchg
sub
clc
push
and
fisttpll
sub
adc
imulb
mov
push
fnstenv
add
cmpl
cmpb
xorb
fxch
inc
ret
sarl
fwait
sahf
out
dec
pop
rcrb
jnp
inc
fsubl
xchg
push
fnstcw
pop
push
bound
jae
mov
cs
mov
nop
push
pop
cmp
in
or
outsl
dec
xchg
cmp
bound
call
es
jl
dec
inc
jae
stos
into
faddl
xchg
lea
add
ret
inc
lds
leave
dec
xchg
sub
xchg
push
out
dec
mov
lea
push
dec
inc
sbb
fidivs
int3
sub
stos
add
mov
rclb
insl
jmp
loop
test
sbb
push
testb
dec
loop
jmp
pop
dec
outsb
mov
mov
insl
sbb
das
mov
sub
push
es
outsb
ds
repz
pop
inc
xchg
push
jns
mov
sub
movsb
pop
sub
push
jge
inc
push
jne
mov
repz
leave
pop
fisubrl
pop
xchg
cmp
lret
push
iret
popf
inc
mov
cmpsl
dec
pop
dec
push
ret
dec
cli
test
movsl
dec
sub
mov
adc
js
inc
mov
loop
mov
or
push
cli
repz
daa
dec
pop
repz
jecxz
ret
sbb
and
div
std
add
xor
adc
insb
outsb
xor
mov
inc
cmp
pop
push
addr16
call
sbb
notl
rorl
push
movsl
out
xor
jmp
adc
shlb
in
jno
jo
rep
sbb
repz
cmpsb
cli
push
pop
addr16
lds
test
inc
mov
pop
sub
clc
test
js
add
test
into
jb
mov
jl
call
inc
push
mov
notb
cmp
test
push
fs
dec
push
test
shrl
dec
into
js
or
test
aad
jbe
push
clc
push
mov
addl
adc
dec
or
xchg
repnz
out
xchg
or
sbb
sbb
aam
pushf
int
mov
leave
xor
fucomi
les
imul
push
push
sahf
mov
push
push
lret
test
test
data16
inc
aaa
insb
xor
xchg
push
ljmp
inc
into
jg
js
fidivs
jne
lea
lea
or
push
insb
roll
xchg
push
mov
pop
out
lahf
das
in
pop
jg
addr16
test
adc
js
push
mov
mov
scas
or
clc
gs
sub
stc
or
dec
pop
add
stc
pop
rorl
insl
leave
xor
xchg
xlat
pop
dec
repz
jne
fidivrs
lret
mov
xlat
inc
sub
sub
dec
stos
xlat
aam
lret
cmp
mov
imul
sub
cmp
lods
mov
or
and
pop
xchg
jmp
das
into
data16
cwtl
sub
dec
or
int
sbb
adc
inc
mov
or
mov
push
mov
pop
xor
int
jae
sahf
popaw
fidivs
xor
daa
rolb
cltd
pop
rolb
mov
dec
or
ret
pop
scas
fldcw
mov
jp
xchg
add
stos
ds
pause
xchg
jp
pusha
iret
sbb
xor
rcrl
sbb
adc
ss
into
mov
mov
pop
push
push
sub
xchg
inc
idivb
iret
mov
dec
mov
lahf
cmp
insb
mov
fsubrl
fcompl
adc
push
mov
dec
pop
rcll
cmp
cli
sub
shll
mov
jg
xchg
jle
or
and
push
popa
jnp
sub
out
inc
ret
popa
lea
push
adc
popa
lret
sbb
cmpsl
or
dec
aam
mov
xchg
jns
call
or
fsqrt
mov
push
lods
mov
fcompl
push
stos
es
mov
mov
popf
pop
lret
jo
jp
lret
daa
sbb
inc
dec
dec
mov
lcall
test
je
xchg
push
mov
inc
xchg
xor
sub
cmp
dec
cmp
int
inc
fwait
and
std
or
lcall
ret
add
test
popf
andl
mov
adc
sub
arpl
mov
sbb
cmc
ja
aam
mov
sub
sbb
push
jecxz
push
jecxz
negl
es
mov
mov
push
sub
dec
pop
add
adc
clc
in
movsl
pop
adc
and
sub
or
in
daa
je
or
js
test
dec
jae
test
mov
push
jp
inc
movsl
ss
iret
sub
popa
lahf
addr16
in
adc
xor
pop
push
or
xlat
cmc
sbb
call
nop
xor
inc
push
adc
clc
cmp
lret
sbb
enter
jb
rcll
pop
pop
stos
and
out
repz
push
out
adcl
dec
pop
push
enter
aaa
popa
or
in
shrl
add
cmp
sbb
daa
insl
sub
xorb
and
arpl
jo
and
loope
stc
xchg
and
sbb
cmp
jb
adc
shl
mov
add
icebp
dec
jg
shlb
pop
add
or
inc
nop
mov
mov
data16
add
sbb
mov
sbb
dec
inc
xor
pop
call
mov
jecxz
mov
and
jg
shrl
addr16
xchg
mov
test
pop
push
push
enter
out
or
jle
mov
shr
aaa
sub
mov
xchg
popa
push
xchg
push
xor
out
fadd
sbb
add
leave
mov
out
xchg
jno
lret
mov
pop
add
mov
mov
push
push
popa
jp
mulb
mov
pop
xchg
lcall
gs
fstpt
cld
ret
and
jg
into
fs
or
cmp
inc
fistps
iret
cli
xchg
jecxz
lods
and
pop
mov
mov
pushf
push
xchg
aad
add
or
out
addb
mov
sub
fistps
xchg
inc
inc
fdivl
dec
jecxz
xchg
pop
xchg
sbb
push
or
adcb
scas
pop
sub
imul
test
push
adc
adc
or
pop
mov
xchg
lret
sub
outsl
xchg
cmp
fidivs
inc
out
xor
xor
lret
jmp
les
jmp
xchg
sbb
ror
push
or
and
pushl
sbb
or
and
adc
push
movsl
mov
or
cmp
jno
xchg
mov
dec
dec
enter
repnz
cmp
movsl
insb
mov
xor
sub
aad
je,pt
orb
stos
cmp
and
mov
xor
push
sbb
mov
inc
dec
pop
dec
and
lds
into
daa
jb
insl
arpl
inc
push
inc
xchg
adc
cs
mov
dec
scas
stc
arpl
push
adc
sub
jae
lea
mov
je
arpl
cld
sub
out
pusha
pop
in
hlt
insb
lds
xchg
cli
xor
cld
sub
int
cmp
mov
add
push
xchg
and
mov
cmp
sub
push
jb
adc
sbb
fucom
rcl
xor
inc
and
inc
add
shlb
pop
rcrb
js
dec
jne
add
pop
stos
xor
xchg
and
hlt
dec
leave
and
mov
ret
push
bound
push
push
sub
jbe
or
rcrl
rclb
addr16
mov
das
decb
jle
pop
adc
jg
pop
jns
jcxz
dec
cmp
cmc
inc
cmp
test
pop
mov
sbb
mov
inc
lcall
mov
or
cmp
add
mov
push
adc
dec
sahf
cmp
pop
adc
pusha
outsl
pop
sbb
pop
pop
loopne
popa
or
out
rcrb
cmpsl
ss
sbb
pop
push
popf
fisubrl
shlb
and
cs
pop
mov
jo
sub
lock
xchg
pop
pop
or
xor
adc
or
push
fildll
jbe
xchg
push
push
add
xchg
ja
jne
cmp
mov
sub
sub
inc
mov
lret
insl
shll
cmp
lods
sbb
js
dec
out
mov
cmp
xor
ss
push
push
sbb
rolb
cld
das
mov
rcrb
xchg
in
jbe
dec
xor
fwait
sub
call
ss
sti
xor
xchg
pushf
pusha
or
sar
pop
pop
je
fimull
out
fiadds
out
call
aad
pop
jge
rcrb
insl
jl
sub
mov
sbb
dec
loop
lret
cld
sbb
popa
push
xchg
dec
scas
cmpsb
iret
xchg
gs
sahf
adc
stos
rolb
jecxz
push
popf
dec
push
ficompl
mov
out
pop
data16
push
add
sbb
mov
scas
pushf
mov
jae
pusha
push
outsl
icebp
rdmsr
fcoms
cltd
xor
scas
xchg
lret
loopne
mov
call
jle
imul
xchg
cmp
fsubrs
jne
pushf
lcall
in
and
dec
and
adc
sub
push
mov
pop
imul
push
mov
mov
cmp
pop
push
aad
or
xchg
ret
addr16
xor
pusha
data16
xor
hlt
mov
clc
fiadds
pushf
lods
hlt
retw
popa
or
ja
adc
push
cmp
movsb
pop
lock
rclb
jns
ljmp
mov
xlat
dec
ret
mov
sbb
out
lcall
jecxz
sahf
imul
push
cwtl
mov
or
or
or
icebp
fnstsw
inc
mov
in
popa
imul
mov
fwait
out
loop
jg
mov
lods
xor
stos
adc
lods
cmp
xchg
out
aad
xorb
sbb
and
decb
mov
mov
std
pop
add
adc
or
push
sub
scas
xor
dec
or
fdivrl
or
fs
andb
cmp
mov
mov
add
in
fidivrl
pop
lahf
inc
xor
in
aas
cmp
push
aas
xor
or
mov
ret
es
stc
test
ljmp
bound
psadbw
es
mov
sbb
jbe
fisubs
in
out
mov
xor
outsb
dec
mov
rcll
jne
push
push
dec
jbe
fstpl
insb
xor
mov
add
push
inc
cmp
out
fdivr
in
pop
xchg
mov
lcall
push
sti
cmp
cmpl
add
xor
sbb
cmc
xchg
xor
shl
lods
insl
ljmp
xorl
inc
les
test
movsb
out
push
ret
into
inc
inc
cmpsl
test
dec
popa
insl
pop
mov
mov
mov
shll
in
or
in
daa
es
in
fldcw
or
imul
aam
fidivrl
iret
cmp
mov
repz
sub
rolb
lods
pop
and
dec
shll
adc
xor
in
dec
xlat
mov
dec
icebp
dec
mov
adc
lock
loop
subb
and
notl
in
es
lahf
pop
or
xchg
xor
aaa
adc
mov
push
out
pop
loope
pop
dec
adc
sbb
scas
icebp
push
cmovp
mov
ret
repz
lret
rcrb
pusha
xlat
dec
pop
inc
sahf
or
mov
mov
push
ljmp
mov
subl
xchg
sub
call
roll
sub
sbb
jle
adc
jmp
imul
insl
push
push
jb
rorb
inc
jp
and
imul
and
int3
inc
sbb
inc
addl
cltd
cmp
mov
jp
sarl
ret
xor
push
jnp
and
jmp
cmp
mov
loope
dec
stos
rclb
pop
rcll
in
cmpsb
leave
mov
push
addr16
add
insl
adc
ljmp
das
inc
dec
clc
add
sbbl
mov
or
fdivrl
rol
mov
cmp
hlt
stc
fcom
jns
or
adc
std
inc
dec
shll
outsl
ret
mov
adc
dec
pop
cltd
xor
aad
xchg
test
sbb
arpl
clc
scas
loope
jecxz
lahf
xor
cmp
xor
jne
push
pop
int
data16
or
lret
mov
add
fwait
js
fwait
scas
sbbb
data16
inc
imul
out
popa
cmp
xor
mov
ss
sti
xchg
loopne
sahf
cmp
or
dec
lret
icebp
lds
dec
sbb
cltd
hlt
mov
push
test
sub
daa
divl
pop
lods
mov
add
aam
cwtl
jbe
arpl
ret
push
inc
sub
rolw
sahf
mov
daa
imul
aaa
out
fidivrs
out
lock
rcr
xor
mov
pop
xor
add
dec
sub
aaa
inc
ds
or
and
lret
cmc
mov
mov
xchg
mov
jmp
pop
mov
lret
scas
bound
jbe
pop
test
and
sub
pop
xor
es
sub
mov
imul
pop
jecxz
out
cmp
leave
sub
addr16
inc
loop
lret
sbb
repz
lods
out
movsl
and
sub
adc
or
sbb
addr16
fimuls
scas
mov
andl
loope
mov
xor
pop
pop
sbb
sbb
mov
add
fcoml
hlt
pop
push
cwtl
push
and
pop
mov
lcall
aam
mov
cmp
dec
mov
dec
aam
push
add
mov
mov
out
cmp
out
sub
out
stc
pushf
jl
jmp
mov
mov
mov
xchg
sbb
stc
jbe
mov
and
mov
je
ds
fmull
and
sbb
ljmp
or
push
loopne
dec
ds
popf
mov
or
sub
or
in
in
inc
and
addr16
and
mov
pop
adc
sbb
or
imul
inc
das
fwait
push
or
iret
fbstp
cmp
stc
mov
sbb
pusha
mov
xor
xchg
push
fwait
mov
dec
lahf
je
icebp
jbe
push
add
cmp
dec
xchg
cli
cmp
jns
dec
out
sub
jp
lret
push
cld
mov
scas
jnp
bound
fstl
jo
test
or
jne
jbe
fcoml
incl
sti
enter
sbb
dec
icebp
jle
insl
jae
pop
pop
fisubrl
call
or
cli
jne
xlat
arpl
adcb
and
stos
jg
or
push
xchg
or
jb
lock
sbb
pop
cmp
andl
pop
cld
cld
test
sbb
call
push
mov
jge
fdivrp
mov
sbb
and
xchg
enter
push
lea
mov
push
lods
pushf
filds
in
inc
test
aad
and
aas
adc
push
cmp
and
leave
mov
cmp
lds
cmc
fwait
or
sti
xor
call
jge
mov
loope
rclb
pushf
jns
mov
and
add
pop
jne
jge
cmp
inc
jp
in
test
lcall
cmp
sbb
fcompl
test
pop
push
ret
dec
dec
adc
pop
loope
cmp
mov
lods
mov
jbe
loope
push
adc
in
inc
sub
lock
push
push
add
push
in
data16
xor
fstpl
push
repnz
adc
mov
lds
cs
mov
icebp
cmpsl
inc
test
pop
popa
xchg
push
xchg
push
sub
mov
je
xchg
inc
cmp
cwtl
xchg
leave
pusha
cmp
or
lods
sub
mov
ret
nop
jle
push
rcl
jp
mov
xchg
xchg
cmp
cmp
test
sbb
cmpb
dec
les
jae
xor
popf
negl
sbb
push
inc
jne
xlat
fstl
scas
adc
into
fcomps
jb
pop
lahf
inc
cmp
xchg
pop
cli
sub
xchg
ss
lret
xor
mov
mov
mov
mov
aad
pusha
cmpsl
or
pop
sub
sbb
or
or
xor
dec
add
and
inc
jae
int
fdivrs
pop
mov
adc
ss
pop
xchg
mov
sti
fists
lock
mov
cmp
pusha
xor
cmp
dec
inc
movsb
and
rcl
push
or
dec
push
add
sub
es
fwait
and
push
mov
sbb
mov
push
push
dec
add
xor
clc
inc
mov
adc
sbb
sbb
add
mov
mov
loopne
stos
pop
cwtl
dec
out
mov
pusha
mov
gs
les
loop
mov
pop
gs
mov
sbb
movsl
int3
or
pusha
in
fbld
push
add
push
push
sbb
xor
inc
outsb
inc
push
or
pop
inc
incb
ret
cmc
fcoms
pop
ja
iret
test
stc
arpl
cmp
loop
sub
ret
mov
pusha
push
decl
loope
fdiv
mov
imulb
ja
mov
jb
sbb
pop
in
ljmp
add
adc
in
lret
rcrb
push
jb
dec
stos
xchg
insb
xor
sbb
fwait
xor
lcall
xor
into
mov
mov
pop
dec
push
icebp
mov
xor
popa
mov
rcll
jmp
addr16
lock
mov
inc
ret
mov
fildll
cmp
jnp
iret
lods
into
xchg
xchg
imul
mov
sub
call
je
adc
insb
stos
dec
push
stos
pusha
adc
stc
jnp
push
mov
adc
and
lds
stos
orb
pop
cli
stc
dec
push
mov
mov
fwait
movsl
push
test
addb
jae
inc
lock
xor
cmpl
jbe
xchg
das
nop
cmc
and
mov
lods
jb
jo
xor
push
or
mov
sbb
and
fadds
mov
lds
sub
aaa
ds
add
fimuls
jnp
je
dec
jge
push
mov
push
sbb
pop
pop
cmpb
rcrl
jbe
cmp
shrl
fnstsw
lret
aaa
mov
or
mov
and
add
push
es
push
and
dec
aas
imul
pop
pop
out
inc
enter
adc
cmp
inc
adc
int
xchg
adc
ljmp
push
cli
ja
outsl
aam
outsl
xchg
add
clc
arpl
insl
jne
pushf
sbb
mov
test
sarl
mov
adc
sbb
cmpsb
pop
push
pop
jne
pop
test
bound
and
int3
mov
lcall
std
repz
push
int
out
push
add
mov
int3
pushf
pop
mov
mov
mov
test
cmpsl
in
mov
adc
sahf
clc
push
icebp
xor
fnstcw
lds
cmp
dec
add
dec
pop
out
fcmovnb
ffreep
xor
push
xchg
push
divb
in
push
xchg
pop
out
fsubr
shrl
and
jns
or
mov
in
add
jmp
sarb
jo
add
inc
and
or
cmp
cmp
test
lcall
xor
idivb
sub
addr16
test
adc
pop
cmp
nop
xchg
mov
repnz
loope
ret
dec
pop
mov
ja
mov
cmp
sbb
gs
jnp
sub
in
jo
pop
push
test
jmp
mov
mov
ljmp
out
dec
dec
mov
fsubp
fistps
jmp
add
lahf
or
into
lret
data16
repnz
push
inc
popa
in
xchg
filds
xchg
lcall
mov
push
aam
add
sbb
xchg
push
push
fisubl
jno
lret
or
inc
inc
push
pop
imul
fucomip
stos
lcall
or
jmp
ja
lds
adcb
and
adc
cmp
mov
jae
mov
sti
mov
sub
cmp
dec
cmc
lcall
test
mov
xchg
shrl
mov
test
movsl
inc
pop
aad
enter
jb
jns
js
insb
das
inc
lret
cmp
ss
pushf
shrb
pop
mov
cmp
imul
xor
sti
jb
inc
or
mov
sti
popa
divb
jne
je
add
sub
hlt
jg
mov
and
dec
arpl
mov
jns
pop
add
mov
add
and
ljmp
out
lcall
pop
or
sbb
pop
fcmovne
and
icebp
pop
xchg
push
sbb
sub
lcall
fcomps
sbb
cmpsb
test
shl
xor
push
xchg
xchg
movsb
pop
inc
call
xor
rcl
leave
xchg
sahf
adc
aad
int
test
jns
push
jbe
and
jle
push
jp,pt
and
outsb
jb
sub
fimuls
jnp
xor
ljmp
aaa
push
scas
mov
xlat
scas
or
jns
addr16
stos
jns
je
jg
pop
pusha
mov
cli
or
adc
call
fistpll
sbb
fwait
arpl
pop
mov
add
push
mov
mov
and
fndisi(8087
ss
cmp
sub
jb
iret
sub
dec
mov
and
adc
mov
xor
and
outsb
pop
gs
xchg
xchg
mov
mov
loop
dec
pushf
inc
mov
sbb
ds
inc
xchg
dec
in
cmp
mov
iret
mov
lahf
adc
mov
mov
outsb
lock
ficoms
and
xchg
test
lods
xor
xor
repnz
roll
andb
inc
push
xchg
stos
aam
lcall
and
jl
out
mov
scas
or
mov
or
and
lret
test
jbe
or
jecxz
jo
shrb
mov
push
push
leave
movsl
mov
roll
sub
or
lret
repz
xchg
andps
ret
mov
stos
pop
push
jecxz
popf
mov
ss
or
inc
push
mov
dec
xchg
push
add
jbe
in
inc
call
orl
popf
sub
inc
pop
enter
mov
loope
inc
cmpsb
je
femms
xor
ss
dec
sub
push
pop
ret
push
aam
popa
dec
das
ljmp
push
xchg
aas
sbb
mov
or
cmpsb
in
jnp
outsl
shlb
cwtl
adc
lods
push
call
sti
xlat
or
jns
jl
lods
mov
push
xchg
mov
pusha
fildll
mov
jecxz
out
aaa
jns
stos
fidivl
repz
xor
jmp
sub
jns
gs
inc
scas
cs
movsb
repz
arpl
lret
pushf
int
cmp
in
out
and
jg
cmpl
das
adc
daa
push
jb
sarl
xor
aam
inc
cmp
cmpsl
adc
cmp
dec
hlt
arpl
cltd
cwtl
xchg
inc
mov
and
push
inc
loope
lods
sub
inc
in
or
sti
dec
in
in
or
sbb
insb
xchg
push
addr16
idiv
mov
out
xchg
cmp
mov
int
arpl
fimull
xchg
pop
movsb
dec
sub
jp
mov
mov
jo
push
outsb
mov
push
and
jmp
lds
cmc
cmp
dec
dec
es
sti
sub
icebp
repz
or
push
stos
pop
fsubp
test
fcmovne
and
or
or
enter
stos
add
cmp
mov
out
incl
and
test
sti
and
lret
aaa
jecxz
push
adc
popf
repz
das
sub
sbb
or
inc
jg
int
xor
mov
pushf
loopne
clc
jno
sub
push
adc
add
mov
push
cmp
add
idivb
lret
aam
repnz
clc
out
cmpsb
sbb
aas
into
dec
inc
lcall
jp
xchg
add
pop
adc
out
jg
cwtl
call
out
pop
int3
stc
and
mov
mov
insl
lods
std
adc
jmp
dec
push
mov
adc
and
pop
sbb
sti
fs
inc
scas
fldcw
xchg
dec
mov
xor
jle
sti
shll
jmp
enter
inc
sub
lret
add
sub
pop
add
call
arpl
aad
cwtl
sub
sub
push
movsl
pusha
xor
adc
xorb
sub
fnstenv
pop
fcmovnbe
mov
in
cmp
xchg
out
ss
mov
add
dec
cmp
add
ljmp
rcl
mov
ja
push
stos
mov
xchg
cmp
xchg
push
pop
mov
lahf
fs
push
dec
ja
dec
hlt
xchg
push
adc
out
jg
or
inc
mov
lock
mov
in
and
cltd
and
adc
sar
scas
cwtl
rclb
mov
cli
add
sbb
hlt
xchg
shll
fs
lock
mov
into
push
lret
scas
sub
fdivp
les
pop
mov
pop
add
test
sbbb
das
psadbw
dec
fwait
outsl
adc
sarl
dec
mov
xchg
cmpsl
div
and
pop
xor
dec
test
movsb
inc
into
mov
xchg
imul
mov
adc
or
ret
pop
xchg
or
test
or
ja
pop
neg
fs
push
xor
inc
push
adc
mov
movsl
jb
inc
adc
mov
add
dec
fisttps
xor
aam
aas
lods
or
fildll
xlat
stc
sbb
sub
push
push
push
test
cs
sub
cld
repnz
outsl
out
mov
or
or
shlb
mov
in
xor
loopne
arpl
or
xlat
add
ss
repz
xor
jmp
jp
pushf
insb
pop
ljmp
fistpll
out
dec
adc
sub
jb
sbb
xchg
jg
in
fwait
xor
inc
in
inc
pop
mov
jmp
jle
sbbb
bound
push
cmp
int
xchg
xor
popa
mov
xchg
lock
or
cli
cli
out
sti
pop
xor
sub
xor
add
xor
pop
xchg
pusha
std
imul
sahf
mov
xchg
dec
test
imul
fs
jne
mov
idivl
push
xor
push
icebp
dec
fcomps
mov
bound
lcall
subl
jge
clc
sbb
jo
jecxz
mov
cli
int
cmpsb
or
push
add
lea
push
pusha
out
addl
cld
mov
pop
outsl
icebp
jno
scas
mov
mov
pop
das
pop
push
in
mov
fninit
stos
push
ss
ja
in
stos
addr16
mov
xchg
mov
roll
mov
pop
in
test
movsb
loopne
addr16
dec
xchg
sub
xchg
pusha
imul
in
lret
push
test
push
jmp
cmpsl
push
pop
dec
pop
adc
popf
jae
jo
or
pop
enter
inc
mov
in
cmp
dec
sub
xchg
cmp
addr16
push
dec
mov
xor
ret
xor
jo
ss
adc
pop
imul
imul
scas
into
test
jle
loope
or
and
aad
aam
pop
cmp
and
or
das
add
sub
test
jmp
dec
rclb
push
pop
lret
mov
xor
jae
cmpsl
shrb
loop
subb
test
sbb
popf
std
clc
add
cmpl
iret
push
cmpsb
dec
pushf
jmp
cmp
out
repnz
enter
jecxz
andl
mov
jle
leave
lret
mov
sbb
push
addr16
and
xor
inc
dec
mov
mov
and
mov
mov
ret
lea
dec
bound
leave
mov
mov
insl
push
aas
inc
jecxz
in
adc
pop
mov
shlb
leave
jb
fwait
lock
xor
test
insl
push
aam
ret
mov
lods
test
leave
icebp
cltd
sbb
push
sub
inc
pop
adc
push
fwait
xorw
xor
mov
ss
sub
xor
push
in
adc
jae
lock
repnz
test
inc
lret
adc
add
cld
add
adc
sarb
fidivrs
sbbb
imul
jmp
mov
outsb
ljmp
adc
xchg
mov
je
int3
pop
out
pop
xor
test
xchg
jmp
pop
add
movsl
leave
leave
sbb
fstps
out
cwtl
ficompl
pop
or
es
dec
mov
mov
scas
xor
test
out
dec
in
je
aad
mov
aaa
or
cmp
adc
push
mov
fistpll
fidivrl
imul
or
mov
pop
lahf
cmpsl
inc
enter
insl
mov
or
add
sbb
push
dec
sahf
or
pop
xchg
xor
cmpsb
pop
xchg
in
cmp
push
pushf
sub
dec
sti
push
dec
in
mov
imul
push
jmp
loope
push
pushf
in
mov
mov
jnp
call
dec
or
xchg
sahf
std
mov
xor
pushf
push
add
jb
mov
and
fwait
jbe
into
add
push
out
ret
pop
push
sub
xchg
mov
into
fstl
es
ja
inc
subb
lret
sbb
sahf
dec
cltd
adc
cmp
mov
rclb
cli
pop
fs
sbbl
mov
mov
sbb
and
or
aam
dec
add
dec
loopne
loopne
fwait
adc
inc
cmp
jge
xlat
int3
and
lcall
cmp
call
mov
subb
movsb
pop
sbb
sbb
fidivs
iret
mov
andb
mov
mov
lahf
xchg
or
jmp
adc
testl
icebp
nop
out
xor
xor
ret
ds
insb
add
daa
lock
inc
push
pop
in
enter
int3
daa
xchg
and
inc
into
cwtl
pop
ficomps
out
mov
inc
and
js
mov
sbbl
mov
jg
xchg
fidivrs
jne
filds
mov
or
fadd
sbb
stos
and
in
cmp
mov
sbb
inc
repnz
bound
push
aaa
sub
push
in
and
xlat
aas
pop
int
cmp
adc
sbbl
push
inc
addr16
ja
xlat
popf
into
push
add
mov
pushf
push
sbb
cmp
lods
dec
xchg
dec
scas
cmp
ljmp
jle
and
add
ja
cmp
pop
sbb
jbe
rol
popf
sbb
lock
sub
icebp
or
push
int3
mov
jle
push
or
mov
dec
jno
jmp
xchg
sub
data16
mov
mov
cltd
fimull
jg
rcr
mov
lods
pop
dec
push
lods
leave
es
or
pop
and
imul
dec
out
xor
imul
dec
js
enter
sbb
or
pop
push
mov
inc
mov
cmp
scas
xchg
sbb
mov
repz
imul
dec
cwtl
jle
dec
in
xchg
arpl
lret
add
cwtl
lahf
mov
fldt
lahf
adc
dec
cmp
mov
lods
in
mov
outsl
sbb
adc
and
movsb
lcall
je
shll
je
xchg
adc
lcall
in
fldenv
adc
pushf
pop
push
sbb
loope
dec
xlat
dec
inc
and
popf
mov
add
fistpll
sub
sbb
outsb
mov
sbb
inc
imul
mov
xchg
inc
fisubl
jns
rorl
add
stc
and
xchg
loopne
or
pop
leave
int3
xchg
add
adcl
or
mov
xchg
xor
cmp
scas
mov
jg
nop
and
add
enter
or
dec
fistps
adc
loope
jmp
pusha
gs
outsl
clc
add
mov
inc
data16
xor
mov
jns
mov
pop
bound
add
in
mov
add
xor
daa
xchg
in
clc
jmp
fsubrl
cmp
xlat
jbe
pop
xchg
pop
fdivs
cmpsb
daa
inc
dec
xchg
in
pop
je
xchg
in
cmp
es
dec
cmp
mov
or
mov
sub
mov
test
xor
sbbl
pop
pop
dec
in
pop
jb
push
int3
rcr
pop
aad
pop
adc
popa
dec
addb
add
xchg
xor
sub
sar
pop
pop
xchg
jle
push
popa
sbb
inc
lods
movsb
inc
dec
jne
dec
pushf
cmpsb
aad
lods
mov
cltd
mov
jmp
or
or
inc
and
mov
jecxz
mov
push
inc
jnp
ja
aaa
jns
cmp
std
sub
push
ret
sahf
mov
ret
push
and
cmp
popa
mov
das
xchg
mov
and
je
sbb
xor
sub
test
mov
leave
mov
fidivl
add
mull
scas
jb
mov
xchg
jbe
shrl
pop
xchg
fs
pop
or
pop
pop
mov
jb
stos
pop
dec
fldenv
aad
xor
icebp
nop
out
mov
xchg
and
loope
aam
jg
sbb
xchg
xor
add
pop
jne
insb
mov
xlat
pop
jmp
push
pop
shll
cld
mov
xor
imul
daa
xor
cmp
sub
clc
insb
xchg
scas
push
mov
iret
mov
xorb
adc
xor
mov
jnp
cs
cwtl
das
adc
scas
shrl
int
xor
xchg
frstor
adc
sbb
insb
outsb
xor
repz
xchg
cmp
aas
fwait
adc
cmp
push
mov
ljmp
jl
test
sub
push
add
outsl
xor
cmp
hlt
inc
push
cmp
notl
fidivrs
negl
xchg
mov
inc
jae
sbb
fisttps
sub
mov
call
mov
mov
pop
push
jmp
out
inc
add
cmp
rol
jnp
mov
mov
stc
data16
daa
gs
repz
push
pusha
fcoml
add
aam
xchg
or
xor
lea
mov
lret
sbb
cmp
pop
sbb
or
fistps
xchg
xor
push
pop
mov
sbb
fisttpl
pop
fsubs
out
sub
push
pop
insb
cli
daa
fisubl
int
out
sahf
mov
inc
cld
dec
dec
cmp
cmp
adc
mov
cmp
insl
mov
cmpsl
sbb
fwait
adc
add
mov
mov
mov
jge
or
les
sbbl
stos
mov
adcb
lcall
cmpsb
and
push
mov
lds
scas
mov
adc
cmp
or
outsb
pop
aam
stc
orl
mov
movsl
xor
push
out
mov
sti
sub
popf
mov
jbe
push
push
push
or
add
jge
pop
push
test
out
mov
xchg
push
jae
xlat
mov
adc
sub
lock
inc
loopne,pt
fwait
sti
lret
adc
sub
in
sbb
sbbb
xchg
push
repnz
fstl
pop
push
mov
pushl
push
and
out
mov
pop
cmp
mov
dec
dec
xor
aas
lcall
aaa
adc
add
clts
cmp
out
jmp
push
rcrl
xchg
mov
lds
sbb
and
cli
std
repnz
fldcw
stc
and
xchg
jmp
cmpsb
add
in
roll
and
fs
jbe
ror
sbb
repnz
cld
jae
js
in
gs
push
jle
fwait
mov
inc
shl
inc
pop
rcll
mov
push
pop
and
data16
adc
cmp
lea
xor
xor
adc
jl
cmp
push
xor
cmp
out
popf
push
sbb
popa
aad
mov
cmp
in
dec
add
aaa
cmc
mov
adc
jnp
fcoms
imul
aaa
lcall
shl
adc
mov
adc
add
add
ljmp
jge
bound
fwait
imul
nop
gs
mov
stos
test
mov
sbb
xor
jge
dec
xor
adc
repz
sbb
xchg
fdivrs
test
mov
leave
cld
jbe
cmp
gs
shrl
inc
aam
sbb
aam
cltd
rolb
ret
inc
ficoms
fdivs
in
fsubl
push
xor
lcall
xlat
inc
add
gs
mov
sbb
jmp
aas
setae
lret
xorl
sbb
negb
inc
jecxz
es
into
push
push
arpl
xchg
mov
mov
scas
dec
scas
push
cmp
jno
nop
sub
xor
into
test
pop
fwait
and
xor
gs
in
xchg
leave
push
mov
push
call
daa
inc
js
pop
dec
shlb
fcomps
push
ret
fstpl
lea
and
pop
mov
push
lods
inc
and
loop
cmp
sub
cmp
cmpsl
mov
shll
jae
mov
mov
xchg
fldl
out
jne
add
test
mov
and
jle
ret
mov
xchg
std
jo
pop
or
xchg
xchg
enter
bound
cld
mov
inc
push
pushf
mov
sbb
push
fs
and
xchg
lods
into
jno
sbb
aas
ja
in
cmp
lahf
cld
cmp
fs
bound
enter
push
sahf
and
or
push
repnz
sbb
sbb
mov
mov
push
xor
inc
xor
ret
ret
jne
aas
sti
lods
sbb
push
dec
mov
xchg
out
add
adc
jo
mov
je
push
cmpl
mov
xchg
ljmp
imul
or
mov
pop
push
add
and
fildl
mov
mov
jns
daa
test
nop
in
sub
fsub
adc
jo
push
int
xchg
dec
shll
mov
bt
test
adc
and
mov
cmp
jecxz
adc
nop
int3
idivb
lods
push
or
jl
push
add
cmp
xchg
fbld
mov
cld
cmpsl
das
je
or
pusha
insl
cmpl
lods
inc
jo
xor
mov
ja
sbb
subb
add
push
mov
dec
mov
mov
lret
sub
outsb
pop
inc
cs
add
gs
enter
cs
cmpsl
sbb
addr16
ficompl
xor
popf
inc
add
imul
andl
pusha
cmp
js
sbb
repz
mov
jbe
out
iret
sar
jecxz
jle
fdivl
adc
hlt
jmp
movsb
pop
cmpsb
iret
lods
dec
mov
sub
pop
mov
cld
xor
es
pop
lods
xchg
add
jg
pop
ja
xor
lret
xchg
mov
es
fwait
bound
shlb
rolb
stos
xchg
mov
fcoms
shll
lcall
or
push
sbb
and
add
xchg
xchg
xchg
lea
mov
outsb
xor
jbe
mov
push
std
push
xor
jo
movsl
dec
pop
cld
jno
xchg
mov
sbb
or
ss
jb
popa
pop
sbb
stos
add
mov
xchg
shll
mov
movsl
mov
push
inc
daa
push
jecxz
cld
dec
xor
adc
mov
ret
and
popa
fsubs
lock
shl
gs
dec
shr
lret
out
cltd
jmp
pop
in
cwtl
xchg
lret
mov
sbb
mov
mov
mov
pop
lret
and
and
inc
into
imul
jns
movsl
mov
inc
addb
jo
inc
repz
pop
popf
insb
push
dec
pop
jle
cmc
ds
lret
clc
dec
mov
ret
call
push
sub
xchg
mov
pop
add
fsubs
psrlq
fisubl
int
mov
test
pusha
jecxz
dec
sarb
pop
mov
mov
cmp
inc
push
dec
and
mov
jecxz
sub
add
ja
lock
fistpl
mov
shrl
mov
jne
cmp
dec
mov
mov
rorl
inc
pushf
push
aaa
data16
sub
pop
icebp
lahf
push
mov
mov
jae
imul
pop
xor
and
insb
test
mov
hlt
jg
mov
popf
inc
insb
int
scas
and
ret
movsl
sub
cli
shrl
jb
push
clc
xchg
cmpsl
test
sahf
sbb
xor
inc
mov
adc
xor
xor
mov
js
dec
lret
shll
repz
jb
aam
jnp
inc
insb
fwait
popa
add
cmp
jp
sub
cmpsl
cmp
mov
cs
mov
aaa
mov
ret
mov
sub
sbb
xchg
add
outsb
out
enter
or
mov
dec
jp
lods
inc
stos
inc
lret
outsb
jl
xor
xor
test
movsb
xor
int
fs
xorl
mov
mov
js
jmp
push
push
mov
jb
les
or
mov
insb
dec
dec
aaa
add
jmp
cld
int3
repnz
and
jecxz
rorb
jg
jge
xor
xor
clc
cmp
hlt
mov
int3
int3
out
push
fidivrl
fstpt
stc
xacquire
insl
sbb
mov
icebp
mov
cltd
in
popf
insl
cmc
stos
dec
add
push
mov
adc
in
or
push
add
xlat
dec
inc
into
into
jle
cli
setl
sub
sar
mov
sar
xor
das
pop
inc
and
mov
enter
jecxz
push
xchg
pop
push
ja
push
gs
jo
lret
or
xor
outsl
adc
pop
mov
pusha
addr16
aaa
fsubs
and
jg
lea
xor
ret
adc
adc
jg
pusha
out
push
jg
and
sahf
jbe
dec
pop
loop
inc
fdivl
add
mov
push
and
sub
stos
pop
movsb
loope
ja
cmp
xchg
push
xor
push
ljmp
xchg
fadds
pop
and
lock
dec
ja
lock
aad
in
sti
mov
cmpsl
xor
ss
inc
aaa
inc
or
std
dec
mov
jnp
and
mov
fcoms
inc
pop
stos
cmpsl
cmpl
adc
dec
gs
fwait
jnp
inc
mov
test
in
int3
aaa
loop
insb
int
out
leave
es
shr
les
jns
imul
xchg
hlt
add
mov
pushf
push
test
jl
stos
cmpsl
xchg
mov
aad
push
out
push
jns
xor
fcomi
pop
pop
and
jb
das
mov
in
paddd
sbb
popa
push
dec
push
aad
mov
lret
icebp
lcall
daa
xor
xchg
xchg
test
iretw
scas
cltd
xor
jl
jg
cld
clc
mov
clc
add
frstor
jne
xchg
addr16
lds
jno
outsb
xlat
adc
icebp
dec
loopne
jecxz
repz
mov
fsubs
jne
add
add
mov
call
out
pop
dec
xor
es
and
arpl
add
add
xchg
pop
int
cmp
push
inc
rorl
push
xor
ret
shll
or
std
jae
lock
ljmp
ja
out
mov
inc
es
sti
inc
jns
inc
push
mov
ss
fstps
iret
push
dec
fcompl
out
sbb
adc
jmp
inc
sbb
sbb
and
mov
stc
std
xchg
std
mov
out
jno
fimuls
pop
xchg
mov
or
in
lods
fwait
xor
nop
shlb
sub
and
rcrl
sub
fiadds
in
repz
cmp
rolb
mov
sbb
sahf
and
in
test
shll
notl
ljmp
mov
mov
jnp
into
or
lret
mov
sarl
or
cmp
mov
and
pushl
add
inc
iret
leave
in
xlat
cli
cltd
mov
shll
mov
mov
xchg
popf
inc
xor
xchg
out
lods
pcmpgtd
mov
stos
neg
and
dec
sbb
xorb
add
sbb
or
cld
mov
inc
sbb
insl
sbb
cltd
cwtl
jnp
dec
mov
in
pusha
out
and
mov
pop
pop
mov
icebp
cmpsb
les
push
push
sar
popf
dec
sti
or
orb
inc
es
cmp
lret
jne
mov
imul
ret
mov
jecxz
ja
test
out
fcomps
add
sarl
cmp
xchg
and
or
std
xchg
push
inc
cmp
scas
mov
test
fldcw
lea
jns
test
add
dec
loope
mov
flds
testb
and
sbb
sahf
lods
adc
dec
aad
ja
iret
xchg
shlb
push
jae
push
pop
fimull
mov
lea
inc
cmp
cmc
mov
mov
stos
out
push
stos
pop
mov
fisubrs
mov
iret
lods
call
mov
jg
and
push
and
or
adc
aam
fistpll
jecxz
cwtl
mov
mov
out
jmp
jb
shll
sbb
enter
icebp
cmp
push
mov
ljmp
movsl
xor
pop
mov
repnz
xchg
jo
dec
test
mov
addr16
push
data16
nop
xor
in
pusha
aas
dec
adc
add
data16
int3
mov
out
mov
cmpsl
das
mov
imul
sub
popf
cmpsl
cwtl
lds
ja
loop
cmp
dec
stos
int3
dec
adc
rorl
xchg
shll
incb
jb
push
bound
mov
xlat
inc
jecxz
shlb
fsubs
stc
cmpsb
inc
sub
push
and
mov
push
jge
add
test
sub
lret
arpl
repnz
inc
das
dec
outsl
add
xchg
sarl
jae
inc
lcall
ret
dec
jb
xchg
inc
cmp
aaa
cmp
jno
enter
add
imul
loopnew
cmp
mov
inc
mov
jp
jge
xlat
mov
mov
lahf
jmp
sbbb
xchg
out
xor
dec
je
dec
std
out
pushf
add
test
in
aam
pop
insb
repnz
fwait
mov
int
push
jae
out
andl
jge
cmpsl
push
dec
jp
stos
jmp
lret
popf
pop
lock
pusha
ds
popa
pop
xchg
cmp
psubusw
push
jle
sbb
mov
jnp
movsb
push
fldt
enter
test
sahf
xchg
mov
loopne
enter
mov
ret
push
int
dec
lock
pop
xchg
lcall
or
jecxz
lock
mov
add
and
popl
test
scas
push
mov
fistpll
push
xchg
inc
lret
dec
jno
fucomp
xor
insb
jns
inc
pusha
btc
sub
fadd
pop
jecxz
dec
mov
add
fistps
popf
ja
lds
das
imul
lret
out
jle
jns
insb
ret
mov
insb
outsl
cmp
imul
push
sbb
aaa
clc
into
jae
push
and
sbb
jle
push
shlb
loop
outsl
cmpsb
push
idiv
fmulp
jnp
cmp
mov
pop
fmull
dec
outsl
ja
inc
jp
pop
or
push
push
daa
cmp
push
loop
sti
cmp
int3
out
fsts
out
divb
xchg
cs
repz
mov
les
xchg
push
int
push
mov
popw
pop
add
push
push
test
add
push
mov
mov
mov
push
rcrb
push
shrb
xor
lods
push
setno
lea
je
or
adc
xchg
insl
arpl
lahf
test
sub
imul
mov
imul
mov
pop
mov
dec
inc
loope
movsl
add
icebp
or
inc
dec
in
mov
push
adcl
outsl
xchg
std
hlt
cs
stc
fwait
mov
jp
shll
pop
movsb
mov
cltd
cmp
or
mov
movsl
mov
shrb
inc
jno
aam
das
cmp
and
outsl
daa
pop
lahf
test
hlt
outsl
cmp
xchg
fwait
mov
xchg
sub
xchg
cli
pushl
adc
movsl
int
cmpsl
arpl
or
xor
xchg
inc
push
rolb
xorl
test
adc
xchg
and
gs
inc
clc
pop
cmp
movb
sub
outsl
jo
pop
inc
divb
and
in
add
aad
pusha
rcrb
push
iret
and
mov
out
and
sbb
ret
pushf
xor
push
xchg
pop
jp
in
loop
push
xchg
or
mov
mov
scas
daa
push
fstl
call
pushf
xchg
ljmp
pop
jecxz
mov
and
icebp
ficoms
stc
jns
pop
test
fldt
and
sarl
and
loop
or
out
rcr
out
fcompl
mov
and
inc
pop
pop
lods
stos
sti
pop
popf
dec
out
pop
in
jo
mov
mov
inc
test
mov
push
pop
loope
xor
in
push
cmc
out
mull
fisubrl
ret
pop
stc
cmpsl
mov
push
inc
jno
mov
aaa
xlat
test
xchg
inc
test
lcall
mov
loopne
ret
out
ja
mov
push
or
mov
or
pop
jg
or
push
or
stos
push
add
lret
and
outsb
lods
lods
shl
cmp
jb
adc
movsl
jbe
xor
jno
adc
shrl
cs
pop
jg
lahf
jne
push
mov
mov
inc
mov
mov
subl
xor
push
dec
shll
in
dec
data16
hlt
inc
jmp
daa
loopne
stos
pusha
mov
xor
arpl
dec
pop
sbbb
clc
aas
sbbb
xchg
mov
mov
in
xchg
jno
jmp
adc
push
fstps
js
cmpsb
shl
jecxz
std
pop
pop
sbb
lds
addr16
adc
jnp
test
inc
push
into
int3
std
sub
aad
push
adc
adc
add
fdivp
sbb
cmp
push
aam
mulb
pop
fiadds
es
arpl
rcl
add
add
mul
arpl
icebp
mov
cs
lods
mov
push
xchg
popf
cli
popf
scas
inc
lret
pushf
outsl
incb
in
movsl
jge
lds
pop
push
daa
aaa
andb
jne
xchg
jb
add
dec
push
mov
es
movsl
or
cli
mov
ficomps
ret
std
mov
stc
xrelease
pop
loop
in
push
mov
push
jge
pusha
adc
aaa
or
cmp
xor
dec
inc
in
fwait
inc
mov
rcr
mov
pop
push
push
test
mov
push
pushf
mov
pextrw
test
cmp
push
jl
arpl
cmp
push
mov
mov
gs
sub
mov
and
jg
cmp
jno
nop
mov
shrb
xchg
mov
out
ja
divb
sti
sub
push
mov
cmp
mov
and
jns
notl
mov
or
mov
mov
ret
xorl
insb
and
movsl
gs
xor
pop
push
push
jns
dec
add
repnz
sbb
mov
test
or
enter
mov
dec
inc
insl
jge
lea
dec
dec
pop
sahf
es
jg
fistpll
jp
fs
and
cmp
in
lods
push
cmp
enter
mov
mov
and
neg
jb
hlt
loop
pop
jle
repnz
cmpsl
lret
rol
jno
aaa
enter
xchg
xlat
dec
sbb
sbb
mov
movl
ljmp
xchg
sub
add
inc
cld
and
add
shll
mov
lods
ja
sbb
cmp
das
inc
or
out
out
arpl
ljmp
sbb
je
jmp
mov
arpl
in
pusha
cmpsl
add
mov
jbe
xchg
mov
push
sbb
jns
mov
inc
sub
pusha
ret
sbb
ja
std
lahf
out
in
in
sti
and
xor
ret
dec
int3
clc
das
adc
je
scas
adc
test
jo
stos
sbb
xor
and
sti
leave
movsl
push
gs
and
js
pop
test
mov
sub
jns
sub
mov
jl
mov
sbb
push
lret
xor
jo
push
shr
xor
add
loope
jnp
inc
in
cmp
mov
dec
faddl
pop
mov
in
xchg
popf
cs
mov
dec
push
test
test
into
bound
pop
lret
aaa
inc
xchg
mov
xchg
dec
adc
pop
and
jo
pminsw
inc
jge
pop
pop
fwait
pop
leave
or
shl
sbb
add
loopne
adc
fs
inc
gs
lock
sbb
jnp
dec
jne
cmp
adc
push
add
xor
mov
movsb
sbb
jb
lea
xor
mov
dec
cmp
pop
int
loopne
in
mov
outsl
enter
add
push
imul
inc
sbb
out
bnd
sbb
sub
push
push
xchg
push
lret
aam
aad
orb
mov
jmp
imulb
dec
cltd
or
sbb
sub
mov
sbb
add
test
mov
int3
sahf
lahf
jne
cmc
sub
cmpsl
mov
mov
fldl
imul
fidivl
insb
jl
imul
xlat
mov
inc
add
lret
xor
pop
xchg
pop
jge
ror
add
mov
outsl
fcmovb
test
cli
mov
fstps
lret
sbb
jo
daa
dec
adc
popa
sub
sti
dec
adc
in
imul
inc
test
sbbl
cwtl
dec
lods
or
repnz
mov
jne
jp
in
xchg
pop
test
daa
xlat
in
adc
repz
pop
jecxz
pop
es
and
repnz
mov
outsb
roll
push
scas
adc
mov
push
aad
out
daa
or
fwait
sub
push
jg
call
pop
fs
pop
jle
stc
stos
dec
cmpsl
pop
xorb
cmp
and
rcl
aad
fstp
mov
gs
push
bound
add
cmp
insb
pop
push
xchg
and
mov
add
lods
fs
lahf
jmp
icebp
mov
repnz
fbstp
push
out
test
test
add
cmp
mov
cltd
mov
jle
daa
outsl
lcall
jmp
sti
loope
mov
mov
mov
rcrb
jl
shr
sbb
call
jecxz
lods
inc
out
and
insl
aas
sbb
pusha
repz
enter
inc
mov
lods
fidivs
insb
int
fwait
hlt
cmp
xlat
and
or
pop
andl
enter
jo
adc
shlb
enter
ss
xor
mov
loop
jle
fcoml
push
lret
popa
in
mov
outsb
add
jle
lods
hlt
mov
or
push
jo
test
lahf
xchg
fists
hlt
sarb
xchg
cwtl
movsl
xchg
dec
fsubl
dec
or
ljmp
dec
or
pop
pusha
pop
or
pop
mov
xor
mov
sub
or
add
clc
sahf
ret
pushw
mov
les
xor
cwtl
dec
jb
pop
stos
and
push
testb
fldcw
pop
imul
xor
jbe
pop
xchg
repz
sbb
jg
stos
lock
testl
pop
mov
cs
xchg
pop
push
sub
inc
mov
pop
ffree
pop
and
xchg
repz
jecxz
outsl
mov
jae
inc
and
or
out
pop
jne
loop
sti
js
in
push
and
mov
idivb
std
xchg
mov
add
imul
cli
cmp
jns
sbbb
sti
fisubl
mov
pop
pop
nop
and
jae
mov
xchg
sti
mov
mov
fidivl
repz
mov
xchg
mov
pusha
in
insb
cmp
das
ficoms
fmull
inc
aad
xchg
in
xor
inc
std
add
or
pop
xchg
in
pop
pop
pop
into
sub
pop
xchg
cs
or
enter
dec
adc
or
and
and
movsl
daa
xchg
lcall
lods
jae
call
sub
or
fwait
rcrl
enter
enter
cmpsl
mov
or
addl
call
jns
cmp
jno
scas
jne
dec
mov
lods
imul
mov
int3
push
je
xor
cmp
fstps
cmpsl
mov
xchg
pop
sbb
mov
int
xchg
cmpb
xchg
sub
hlt
in
cwtl
shrb
ja
ss
in
jne
fcmovb
scas
cmp
add
nop
sub
xchg
lret
ror
jle
nop
mov
cltd
sbb
adc
pushf
leave
shlb
in
aad
mov
fadds
sub
ja
shrb
je
lret
cmp
nop
mov
and
testb
fisttps
addr16
pop
xchg
jmp
adc
jp
xchg
cli
inc
pop
cwtl
push
fstpt
stos
into
xchg
xlat
sbb
push
imul
add
mov
insl
pop
ret
out
popf
push
repz
call
mov
and
mov
stc
xchg
and
dec
cmp
jp
ds
out
imul
mov
hlt
mov
sar
xor
inc
cmpsb
jno
inc
pop
xchg
cli
lods
dec
mov
int
imul
shrl
mov
loop
sub
ljmp
sub
dec
test
out
stos
adc
jmp
lea
mov
xor
popa
adc
add
insb
mov
mov
imul
lods
fsubrp
andb
out
pop
inc
mov
int3
ss
dec
movsl
or
push
cmpb
dec
push
cmpsb
jmp
pop
das
pushl
pop
push
pusha
sub
and
and
mov
lret
add
aad
inc
es
xchg
pop
mov
or
lock
nop
aam
adcb
jp
add
xchg
cmp
xchg
xor
add
xchg
call
test
fmuls
cmp
cmp
outsl
and
rcrl
test
pop
enter
mov
xchg
cmc
in
movsb
mov
mov
divb
push
push
inc
and
popa
aas
push
nop
jmp
cmpsb
dec
iret
in
or
ja
xchg
jne
mov
mov
test
fidivrs
xchg
cmpsb
es
adc
cmp
fcompl
ret
testb
mov
addr16
dec
and
sbb
out
scas
cmp
gs
in
mov
xor
mov
push
xchg
mov
int
xchg
and
inc
outsb
pop
fbstp
jge
sub
and
or
jnp
rclb
mov
inc
add
aaa
sbb
ja
mov
mov
cmpsb
sub
push
push
cmc
outsl
or
in
iret
and
pop
test
xlat
stc
loopne
jns
jg
fstps
aam
mov
inc
add
push
shll
outsl
adc
and
inc
sti
test
pop
loop
xchg
cs
adc
repnz
cmp
xor
push
imul
pop
xchg
sbb
jle
shrl
jno
repz
add
fs
dec
xchg
nop
mov
loope
dec
icebp
xchg
cli
cmp
sbb
rorb
leave
cld
shrl
pop
inc
rcll
xor
dec
cld
loope
sub
pop
dec
jg
inc
out
sub
loop
lds
jb
test
rolb
push
fwait
mov
xchg
push
pop
mov
jbe
mov
mov
pop
cli
stos
cli
push
jb
push
jbe
fcomip
cmpsl
adc
inc
mov
mov
faddl
fidivl
js
xchg
popl
xchg
rolb
repnz
dec
dec
les
pop
ror
pop
movsb
sub
cmp
stos
jmp
int
push
aas
push
daa
adc
pop
push
int
mov
jne
insl
push
dec
popf
insl
pop
push
lods
dec
mov
sbb
jbe
fidivrs
ds
out
pop
testl
in
into
cmp
movsb
es
cmpsb
loopne
subb
inc
stos
pop
popa
loop
mov
pop
subl
mov
pop
rolb
sbb
fmull
add
xchg
lcall
bound
and
sub
push
adc
repz
into
jge
in
fs
add
add
jl
stos
add
jnp
jb
dec
push
insb
mov
addr16
leave
andb
imul
aaa
pushl
or
mov
mov
enter
ret
adc
mov
int
inc
push
or
cmp
or
ss
das
cmp
cmpsl
jmp
daa
ljmp
imul
jl
dec
jo
test
add
dec
mov
cmpsb
jno
mov
pop
add
cmpsl
ret
mov
sbbl
fdivrl
add
mov
or
inc
lea
negb
pop
and
push
mov
jb
in
data16
pushf
dec
lret
pop
jns
pusha
mov
enter
xor
xchg
arpl
xchg
nop
jp
or
mov
push
lea
test
pushf
pusha
or
outsb
movsl
sub
cli
les
cmp
fildll
mov
test
icebp
arpl
stc
repnz
jb
mov
repz
xchg
push
lock
mov
push
push
sbb
data16
push
js
mov
int3
cmp
in
dec
push
sbb
repnz
jl
das
gs
fdiv
dec
xchg
add
xor
sub
cli
mov
cmp
xor
cld
sahf
in
stc
or
pop
adc
fsubl
mov
fstl
fidivl
ror
mov
addr16
mov
push
out
orb
xchg
dec
mov
dec
push
enter
inc
sub
xor
test
lret
scas
sub
in
fsubl
hlt
imul
fnstcw
sub
sti
push
orb
ja
pusha
mov
movsl
scas
push
or
lea
test
scas
lods
sub
lret
xor
iret
es
jl
out
inc
dec
xchg
pop
adc
lods
cmp
cmp
sarl
and
sbb
ds
push
pop
in
movsb
lods
imul
xlat
pushf
loope
hlt
je
push
sbb
orb
out
jbe
add
push
test
addr16
push
xchg
out
xchg
insl
jp
sti
xchg
sarb
fst
sbb
jg
shl
jno
aad
mov
sbb
xchg
push
cmp
into
xor
stc
out
xchg
xor
pop
movsl
mov
jo
and
push
jns
das
adc
les
adc
mov
popf
js
addb
fldcw
hlt
out
xchg
out
imul
cmpsl
ss
mov
mov
imul
inc
lahf
fldenv
or
or
repnz
push
rcrl
dec
or
pop
xor
fs
fdivs
test
pop
mov
jmp
fnstsw
outsb
pop
nop
xchg
cmc
test
stc
adc
inc
aas
inc
pop
fstpl
loopne
outsl
fiadds
out
call
dec
mov
js
and
add
scas
and
inc
outsb
imul
dec
add
pop
jne
xchg
xlat
add
repnz
xchg
je
icebp
and
dec
sub
jb
and
fnstenv
dec
add
cwtl
cmp
repnz
jo
push
fadd
sub
je
mov
movsb
pop
pop
dec
inc
push
test
add
fsts
shlb
xchg
adc
data16
inc
loop
jno
jb
or
scas
pop
mov
pop
sub
xorb
or
pop
out
mov
sti
dec
and
ficomps
into
rorl
and
rcl
mov
xchg
lahf
push
addl
fistl
fcomps
je
jmp
push
in
addr16
add
and
mov
sbb
repnz
mov
repz
sbb
dec
je
xor
stos
out
mov
mov
and
ljmp
int3
ds
in
dec
mov
sti
fsubp
push
push
xchg
mov
je
xlat
mov
jl
hlt
andl
ja
sub
inc
push
mov
jmp
test
jl
sbb
mov
stos
test
sbb
lods
jnp
adc
dec
jnp
cli
mov
shlb
mov
mov
lret
cltd
rorb
popa
and
jo
sbb
sub
int3
js
test
and
xchg
lds
mov
in
mov
rcrl
mov
inc
mov
sub
cmp
mov
scas
addr16
jno
xchg
mov
inc
mov
cwtl
icebp
mov
and
orl
adc
cld
push
bound
clc
out
xor
and
repnz
cmp
inc
jno
xor
arpl
add
scas
lret
sub
mov
popa
inc
sbb
daa
mov
inc
negl
pop
push
call
out
inc
pop
sub
mov
les
sbb
cmpsb
mov
test
xor
pop
in
lret
sbb
mov
xchg
xor
fs
mov
outsl
sbb
mov
div
push
dec
into
pop
scas
pop
hlt
mov
mov
lock
push
inc
out
cmp
ljmp
adc
jo
cld
icebp
out
mov
mov
lcall
hlt
add
cwtl
nop
mov
jb
sbb
push
cmp
mov
mov
dec
and
lret
lds
insb
cli
sub
lret
cmp
insl
adc
xor
push
fdivrl
and
inc
ljmp
leave
sahf
mov
xlat
mov
or
iret
cld
dec
and
jnp
test
out
lods
cmc
test
adc
nop
in
js
jecxz
add
rorb
mov
mov
dec
movsl
mov
cwtl
push
inc
inc
sbb
sbb
cmp
mov
scas
scas
cmp
or
pop
ss
sbb
test
mov
add
lods
sbb
push
sbb
cli
test
push
xchg
push
cmpsb
add
and
aam
lods
aaa
inc
inc
or
cld
jb
in
dec
inc
rclb
adc
lret
jo
pop
jnp
dec
scas
jge
out
inc
push
jge
dec
push
fdivp
and
imul
xor
pop
cmp
mov
pop
lods
cwtl
adc
cli
and
aas
adc
pusha
out
fdivrl
xor
and
pop
mov
in
cmp
insb
test
dec
and
decb
stos
inc
jg
mov
pop
mov
leave
inc
sti
or
out
out
xor
fistpll
mov
xchg
in
int
add
mov
roll
daa
mov
xor
inc
cld
cltd
dec
shrl
daa
shrb
aad
sbb
mov
or
push
xor
testb
mov
dec
mul
addr16
mov
adc
and
scas
adc
dec
fnsave
jns
mov
push
sub
and
fwait
imul
push
sub
or
ret
enter
mov
outsl
dec
into
int
mov
outsb
test
std
or
in
mov
pushf
dec
add
lret
push
and
cmp
lahf
insb
mov
adc
mov
jns
and
dec
scas
lahf
xchg
dec
dec
imull
jbe
ret
xchg
in
fmul
cmpsb
adcb
cmpl
pop
jl
push
cli
loop
repnz
mov
inc
lea
push
clc
dec
dec
mov
test
mov
xor
inc
push
mov
cwtl
notb
or
movsb
sub
hlt
popa
lret
pop
arpl
call
xchg
fmuls
ja
scas
lcall
shrl
pop
cli
mov
fstl
or
and
inc
fdivrp
sbb
cltd
ret
dec
xor
fwait
shlb
jg
sbb
sbb
jle
movsl
jmp
int
pop
or
data16
pop
push
leave
xor
pop
push
cmp
pusha
lods
xchg
sub
rcrl
fstps
rcll
movsl
sub
sub
lcall
lods
jp
sub
fidivl
push
int
and
rcll
mov
dec
hlt
or
int3
mov
and
std
dec
scas
xchg
jno
pop
test
stos
mov
jns
bound
js
decl
outsb
in
out
dec
cmp
shlb
cmp
or
insb
jo
data16
xor
fs
or
push
fcomip
cmpsl
ret
adc
out
mov
or
inc
ds
sbb
pop
loope
xor
adc
mov
into
pusha
pusha
loop
sti
nop
popa
push
in
in
push
jo
fcomip
mov
in
or
and
push
pusha
popf
push
lea
inc
std
jg
jge
mov
xor
inc
repnz
repnz
popf
in
sbb
and
loop
test
mov
cmp
mov
mov
inc
andb
cmpsb
jg
xchg
imul
add
sbb
dec
xor
dec
les
or
hlt
xchg
inc
xor
add
aam
mov
sbb
dec
stos
lahf
push
loop
jle
pshufw
fldenv
sbb
addl
jne
lahf
out
mov
jecxz
xchg
jecxz
outsl
ja
ret
pushf
xor
mov
daa
ss
in
xchg
cli
ljmp
negl
xchg
mov
jmp
mov
sbb
cmp
xchg
cmp
adc
dec
andl
lcall
stc
ficoms
lret
sub
pop
push
movsb
cmpsb
bound
inc
mov
mov
dec
popa
cwtl
jl
cli
add
mov
dec
mov
cmpsb
aaa
xchg
add
call
pop
test
push
ss
movsb
pop
cmp
jl
and
sar
sbb
rcrb
lods
dec
mov
out
jb
mov
dec
xor
cltd
mov
cs
std
neg
jg
mov
xor
lock
in
or
jl
imul
jg
push
std
cmpsl
lahf
pop
adc
adc
or
clc
test
xlat
and
xchg
ds
std
gs
js
cmp
mov
mov
mov
sti
imull
cmp
pushf
dec
aad
inc
jecxz
and
dec
ljmp
or
test
jbe
and
or
loop
hlt
mov
pushf
imulb
aas
mov
mov
mov
mov
test
outsl
int3
shll
rorl
xor
lret
sbb
cwtl
xchg
cmp
add
cmpl
js
push
xor
xor
xchg
adc
sbb
jecxz
daa
in
sub
insb
std
pop
outsl
sub
idivl
mov
adc
out
xchg
add
aas
push
loop
pop
jae
or
jne
rcrb
push
mov
filds
ret
bound
inc
cmp
add
daa
stc
jnp
in
add
leave
aaa
dec
mov
orl
pushf
test
lods
sbb
push
mov
sar
mov
popa
loop
jo
int
std
sbb
pop
clc
or
psraw
in
push
mov
sbb
mov
outsb
adc
pusha
repnz
loop
jbe
js
mov
ss
push
adc
mov
xchg
insl
fimull
adc
dec
out
push
ret
rorl
mov
or
push
fwait
imul
mov
lret
rcr
jo
das
fists
push
rcl
inc
dec
push
js
lds
je
lods
cmp
add
jnp
std
ficomps
std
jae
lds
shl
mov
lods
stos
xor
mov
jo
mov
imul
std
mov
inc
or
je
sarb
mov
sub
xor
pushf
int
sub
and
loopne
inc
add
pop
fwait
xor
fbld
ret
jge
jns
pop
jae
ret
xchg
lret
orb
mov
cli
xor
push
sbb
sub
pop
push
ds
lea
mov
sub
xor
sbb
cmpsb
repz
dec
rorb
test
cmp
cmp
clc
or
ret
jb
lret
jp
jnp
push
stos
pop
rcl
pop
repz
rcrl
cld
jle
xchg
pop
vsubss
or
push
push
dec
pop
push
inc
add
mov
mov
jo
cli
sub
cwtl
movsl
xor
in
fldenv
cltd
sbb
or
xchg
sahf
call
xchg
int
popa
jbe
or
or
xor
add
xor
xchg
je
inc
imul
repz
pop
outsb
cmc
hlt
xor
sahf
and
adc
xchg
scas
jmp
iret
sub
data16
dec
inc
scas
mov
dec
call
popa
aas
jno
enter
pop
xchg
aaa
sti
fwait
inc
pushf
frstor
mov
mov
dec
add
mov
push
int3
adcb
mov
movsb
mov
movsb
and
xchg
mov
inc
adc
ret
add
aaa
loope
push
in
test
das
adc
xor
mov
das
sub
into
mov
pop
inc
cs
dec
inc
movsl
jp
in
xchg
inc
fimull
jae
test
out
cmpsl
xor
aas
mov
clc
sbb
in
adc
dec
clc
cmp
mov
fisttps
jmp
dec
pop
add
shlb
insl
mov
adc
fisubrl
jg
and
and
adc
sub
and
loopne
ja
sbb
push
and
bound
fildll
pop
imul
inc
mov
add
mov
push
mov
push
mov
jbe
add
mov
mov
dec
cld
jns
cmp
xchg
push
decb
aaa
fwait
sbb
mov
arpl
push
lock
pop
jmp
jb
push
mov
test
fadds
fucomip
out
dec
popa
mov
dec
adc
nop
mov
insb
and
add
mov
and
lret
mov
add
gs
or
lret
cs
ja
out
pop
adc
dec
test
cmp
insl
js
cmpsl
lods
or
out
test
fstl
pop
mov
mov
bound
arpl
xlat
lods
push
pop
sbb
bound
fs
movsb
and
cs
stos
push
jecxz
insl
or
pop
jae
xchg
stos
sti
mull
pop
inc
leave
mov
fiaddl
mov
mov
insl
pop
out
jg
xchg
rclb
mov
ret
test
xchg
test
insb
lods
lret
pop
add
scas
sub
adc
cmp
sub
jno
push
push
xor
aam
scas
push
and
ss
mov
xor
add
and
lret
mov
xorb
xor
mov
sbbl
push
mov
scas
cltd
int
addr16
xor
imul
push
inc
adc
idiv
jp
push
sbb
movsb
rclb
sbb
shll
nop
cmpsl
inc
xorl
cmp
es
mov
clc
dec
add
es
xchg
je
xchg
enter
mov
xlat
jmp
push
add
sbb
insb
pop
fdiv
addr16
imul
pushf
jb
cmp
sbb
enter
imul
push
nop
dec
fs
in
ret
shll
rcll
aas
sub
call
inc
add
mov
testl
inc
fwait
dec
push
fbstp
jbe
in
pop
sbb
lcall
lods
and
pop
es
rcll
stos
shrl
out
add
jp
lods
push
cmc
int
dec
stos
mov
cli
mov
testl
aas
scas
cmp
clc
or
ljmp
xor
adc
mov
dec
pop
dec
jbe
jmp
popa
sbb
out
mov
jmp
adcb
sub
lods
loopne
jle
out
test
and
pushf
or
lods
hlt
add
add
mov
jns
nop
push
mov
xchg
pop
push
fisubl
icebp
imul
adc
je
mov
cmc
inc
in
shr
and
daa
dec
orl
adc
sbb
call
lret
test
mov
outsb
mov
cmp
int
mov
jmp
dec
cmpsl
cwtl
and
stos
repz
add
adcb
mov
adc
movsl
mov
rorb
rcr
movsl
sub
notb
cwtl
pop
sahf
mov
stos
jmp
fstpl
ds
mov
adc
sbb
sbbl
pop
inc
cltd
push
stos
subb
pop
add
xor
jne
andb
xchg
inc
das
les
xorl
int
fdiv
leave
and
fnstsw
test
fcom
pop
inc
mov
mov
arpl
sahf
sahf
xlat
andb
pop
or
sub
xchg
xchg
xchg
xchg
dec
data16
nop
mov
jmp
mov
inc
pusha
jl
loop
push
sub
fisubs
cltd
dec
push
lcall
jl
ljmp
or
cs
add
mov
cmp
hlt
enter
xchg
dec
dec
push
movsb
aas
xlat
jmp
gs
xchg
cs
xorl
adc
jp
mov
sbb
push
jecxz
dec
in
stos
add
cltd
shlb
sbb
in
cltd
insl
xor
push
outsl
push
out
ret
js
and
mov
push
push
dec
xor
jecxz
xchg
imul
xchg
sub
fsub
adc
out
mov
mov
mov
mov
ds
and
mov
bound
and
scas
sbb
xchg
mov
fidivrl
mov
popf
add
mov
adc
adc
sub
cs
cs
aad
lret
in
mov
jge
push
sahf
push
in
mov
nop
push
sub
insl
cmp
or
xor
stos
sbb
aas
insl
mov
sub
xchg
jns
fsts
mov
test
pop
sbb
stc
and
jmp
lahf
sbb
mov
inc
lock
push
nop
mov
call
stos
dec
std
test
jno
pop
inc
imul
notb
cmp
inc
lea
ret
adc
sub
lods
xchg
mov
dec
dec
negb
fstps
and
dec
mov
lret
sahf
jle
testb
cmc
sbbl
cmp
jg
push
mov
mov
lahf
gs
stos
insl
jge
shlb
das
dec
adc
arpl
adc
lods
sbb
imul
sbb
mov
dec
in
scas
outsb
cmpsl
jns
test
xor
add
ja
ljmp
in
push
inc
cmp
in
fimuls
mov
xorl
sbb
inc
xor
cmp
es
and
idivl
adc
xor
stos
adc
add
inc
xor
dec
jae
dec
xlat
orl
push
loope
stos
cli
add
call
push
add
movsl
xchg
and
pop
cmp
mov
or
xchg
mov
jbe
dec
xchg
jb
push
sub
inc
add
jmp
dec
std
enter
push
fisubl
or
jecxz
mov
das
jnp
dec
sub
inc
xor
xor
mov
ret
mov
int3
fiadds
inc
gs
out
add
lods
scas
ds
cltd
mov
sub
stos
pop
iret
sub
mov
popa
subb
jne
xchg
mov
cmpsb
mov
leave
xchg
mov
inc
sar
addr16
movsl
pushf
stos
in
mov
out
lcall
js
dec
fadds
jecxz,pn
mov
jle
movsl
or
push
cmpl
or
pop
fsub
imul
lahf
dec
data16
cmp
xchg
enter
aam
pop
pusha
or
fcmovne
and
cmpsl
in
ret
scas
inc
mov
stc
jmp
mov
jle
fldcw
int
addr16
test
xchg
mov
std
insb
mov
lods
cwtl
xchg
adc
add
stos
int
repz
jnp
mov
out
push
and
out
dec
xlat
test
push
sbb
adc
jg
fidivl
inc
and
insl
repz
xchg
mov
insl
sti
mov
ja
mov
rcl
sarb
in
hlt
mov
das
mov
adc
jno
jne
mov
mov
lret
add
out
rcrb
ljmp
fsubr
int3
cli
into
or
mov
in
in
sub
push
push
and
test
xchg
aad
arpl
lods
add
cs
in
mov
scas
mov
out
adc
ja
dec
aaa
scas
into
lds
xor
push
jne
cmp
mov
lret
icebp
rolb
xchg
sbb
jns
insb
or
int
lds
mov
andb
and
movsl
int
sbb
lahf
adc
mov
pop
out
js
jecxz
dec
or
xchg
js
xchg
repnz
test
test
mov
addr16
adc
and
scas
xor
sub
mov
push
push
cmpsb
faddl
push
mov
mov
sub
pop
xor
and
mov
clc
xlat
inc
bound
inc
sbb
lods
cmp
movsl
cltd
test
addr16
sbbl
shrb
xchg
adc
push
xchg
pusha
inc
push
rcrl
and
and
push
scas
cmp
repnz
outsb
cli
or
or
mov
pop
repnz
jb
imul
xchg
push
add
ds
pop
es
iret
adc
or
sub
shrb
cmp
mov
push
imul
lret
sub
xchg
jmp
fs
lock
or
inc
jo
cld
push
ja
jmp
fimuls
in
insl
jo
pop
add
inc
inc
in
nop
push
mov
cmc
mov
lods
mov
mov
adcl
jns
icebp
jmp
icebp
aas
pop
inc
cli
inc
jae
adc
push
lret
or
xor
orb
in
lods
cmp
pop
lds
and
inc
push
jl
inc
adc
and
push
clc
sbb
or
or
enter
aaa
sub
rcll
jb
cs
movsl
rcrl
ret
mov
and
out
mov
add
mov
push
stos
insl
jo
xchg
aas
cmp
cmc
push
push
adc
mov
loopne
cmpsb
fdivs
and
cld
bound
dec
repnz
mov
adc
cmp
iret
mov
adc
enter
cli
mov
loopne
stos
aad
addl
xchg
ror
and
inc
fisubrl
xor
push
add
xchg
sbb
in
fwait
mov
xor
shll
sub
and
lods
in
dec
lods
push
push
fmull
dec
ficompl
mov
test
mov
xor
stc
arpl
je
pop
sbb
cmp
adc
lds
or
xor
adc
dec
shlb
xor
push
push
fsubrl
jmp
mov
and
xor
or
sub
xchg
dec
in
jp
inc
rcl
movlps
adc
sbb
outsl
outsl
push
and
pop
rorb
imul
clc
hlt
je
int
add
dec
cmc
or
cmpsb
icebp
ret
mov
int
imul
imull
int3
mov
cmpsl
movsl
adc
sub
nop
lret
call
imul
sub
pushf
mov
bound
push
mov
fmull
fadds
test
nop
stos
push
push
mov
roll
lret
mov
fisubl
out
sub
bound
mov
mov
ds
stos
add
pop
insb
cmp
jns
jne
insl
lea
iret
xchg
fs
ja
pop
out
push
into
xchg
or
scas
sti
out
sub
push
aam
addr16
aad
mov
test
cmp
icebp
and
popa
int3
mov
call
gs
fistpll
leave
and
ds
daa
jmp
scas
pushf
adc
xchg
insl
nop
push
cmc
and
insb
idivl
push
cltd
fdivs
ret
mov
jb
xchg
ss
pusha
dec
jmp
xchg
and
mov
fs
inc
or
xor
loop
call
dec
test
pop
push
xor
leave
sti
out
dec
push
int3
aad
inc
pop
cmp
or
and
cmpsl
pop
jp
sahf
ss
add
arpl
repz
iret
or
dec
or
sub
jge
les
loop
sbb
jmp
fcmovbe
aam
mov
mov
mov
jbe
add
mov
or
xchg
mov
mov
sarl
jmp
lds
or
pop
lret
lock
xchg
cld
push
sbb
dec
in
sar
mov
xor
dec
lcall
in
outsb
xor
jmp
arpl
dec
cmp
or
mov
sbb
fcmovbe
fsts
adc
mov
cs
mov
clc
xor
mov
mov
pop
imul
xchg
jmp
ss
jno
xor
cmc
shlb
pop
aas
or
and
mov
jb
push
or
xchg
aas
jo
dec
adc
push
inc
mov
adc
pop
xor
repnz
jge
xchg
adc
push
add
insb
shrl
sub
ffreep
inc
xlat
mov
xor
cwtl
push
ret
mov
mov
mov
nop
pop
mov
jae
idivb
xor
loope
fmuls
add
imul
push
and
inc
stos
cmp
cmp
pop
aam
call
xchg
pop
fdivs
xor
fisttpl
stos
mov
ja
mov
push
nop
sub
push
mov
lahf
dec
iret
add
inc
sub
test
rcl
xor
pushf
mov
ds
popf
jb
pusha
mov
bound
and
aam
mov
imul
xchg
repnz
int
xchg
xor
push
mov
jns
fstl
jmp
push
shrb
dec
adc
int
es
pop
xor
cmp
mov
mov
jl
xor
lds
aad
leave
shrb
mov
stc
leave
pop
sbb
pop
or
mov
mov
xor
add
loop
sub
into
sar
sub
call
std
ret
repnz
mov
je
mov
jno
sbb
mov
pusha
jecxz
or
mov
xorl
inc
jg
inc
pushf
mov
dec
inc
mov
mov
or
adc
xchg
rorb
dec
divl
dec
mov
aaa
lock
adc
mov
add
cmp
bound
repz
jp
adc
test
mov
inc
test
jo
popf
jne
sub
repnz
ret
lock
xchg
cli
outsb
xchg
mov
mov
jae
cmp
jg
xchg
or
push
push
fld
pop
push
pop
ret
aad
jl
hlt
mov
xlat
dec
cmp
sub
shll
push
inc
or
pop
pop
lret
inc
iret
mov
xchg
stos
call
xor
mov
mov
enter
int3
repnz
push
mov
push
cmp
push
fst
mov
bound
pop
dec
lock
mov
or
jmp
or
scas
dec
cmp
lods
loopne
repnz
enter
adc
loop
add
ljmp
insl
sahf
jecxz
mov
movl
clc
out
out
lds
xchg
push
clc
mov
fisttpll
or
xor
inc
insb
fstpl
jl
mov
mov
pop
cmp
icebp
cs
dec
ss
mov
adc
jp
lods
mov
pusha
cld
cli
xchg
cmp
cld
fisubs
lods
popa
rorb
lret
and
in
sbb
push
mov
inc
inc
dec
movsl
and
fildll
in
clc
jno
mov
xchg
mov
xor
gs
push
cltd
lods
add
ss
in
mov
mov
or
mov
ja
mov
fiaddl
pushl
inc
stos
mov
test
fwait
andl
push
adc
loope
pop
mov
imul
and
rcrl
add
dec
ss
mov
push
lret
jmp
pop
imul
shr
cmp
cmc
mov
jbe
add
sarb
addl
inc
std
rcrb
jle
mov
inc
pusha
sub
add
rorb
arpl
popf
add
call
arpl
nop
mov
xchg
test
ljmp
imul
aas
daa
push
in
xlat
cmp
stos
ja
movb
adc
dec
fistps
xor
pop
cld
push
jae
xor
inc
pop
adc
add
out
scas
stc
cwtl
adc
imul
sub
inc
mov
ljmp
in
fcomps
pusha
lahf
pop
mov
addb
inc
rorb
daa
addb
fnstsw
adc
sub
inc
std
add
inc
lret
pop
pop
cmp
add
loope
xor
adc
cmc
aam
inc
sbb
sbb
mov
inc
lret
ds
inc
xchg
aad
adc
xor
test
adc
fisubrl
popa
pop
add
in
lock
pop
bound
mov
adc
dec
push
rorb
mov
hlt
adc
icebp
aam
out
pop
andb
loope
insb
fisubrl
into
xchg
mov
mov
pop
insl
test
pop
xchg
ljmp
bound
cmpsb
repnz
cmc
test
jg
lret
ret
mov
push
jne
or
and
or
insb
sub
fcoms
mov
mov
sbb
jnp
ds
fildl
les
lret
pop
movsb
adc
rolb
lret
movsb
mov
test
leave
dec
cmp
xor
pop
fwait
jmp
int
cmpsb
cmc
daa
mov
inc
mov
lea
orl
popf
mov
jp
test
cmpsl
lds
in
dec
aas
cs
data16
shl
icebp
insb
add
cmp
mov
mov
loope
addr16
push
mov
movb
sbb
add
sbb
pop
rorb
mov
cmp
enter
loopne
xchg
mov
push
pop
xor
add
aaa
icebp
jb
divb
pop
ja
clc
sbb
jmp
mov
loope
rolb
int3
push
cmpl
sub
pop
fdivs
inc
ja
xor
jmp
mov
cld
les
arpl
push
mov
add
lcall
ss
jb
inc
inc
push
jle
mov
sbb
adcb
insl
fbstp
or
das
ret
jecxz
cmc
cwtl
frstor
cmpsb
add
aas
dec
loop
mov
les
aaa
and
mov
loopne
in
js
dec
mov
sbb
xchg
sbb
pop
ljmp
xchg
sbb
push
jne
hlt
xchg
xor
jl
pop
mov
mov
sub
rcl
adc
jo
imul
mov
jmp
sub
cmp
lret
lcall
icebp
rorl
xchg
inc
mov
jl
mov
add
pop
test
jb
dec
clc
mov
mov
fisubs
sub
jle
cmp
push
push
pop
mov
mov
rolb
stc
lret
jmp
mov
ret
outsl
jo
and
hlt
add
adc
mov
loopne
adc
in
fdivrs
xor
arpl
pop
jno
je
xlat
mov
dec
mov
pop
rolb
lods
lret
stc
les
mov
mov
in
pushf
imul
push
cmp
jnp
pop
in
dec
jp
xchg
adc
js
leave
mov
mov
inc
out
flds
dec
pop
movsb
or
scas
xchg
inc
fdivs
or
sahf
xchg
or
cmc
pop
hlt
cmp
subb
into
into
xor
lds
in
lods
mov
je
pusha
aam
mov
xor
inc
add
xchg
mov
sub
cwtl
lock
nop
inc
cwtl
fstpl
ds
and
dec
mov
mov
cmp
or
adc
add
xchg
addr16
lret
flds
daa
in
xor
mov
and
dec
and
and
pop
xor
stos
into
fsubrl
icebp
incb
out
mov
addr16
mov
lahf
xchg
out
push
pop
push
popa
mov
push
dec
movsb
jne
popa
popf
jmp
lock
pop
imul
test
sbb
dec
fsubl
jle
pop
je
rorb
cmpsl
js
or
xor
or
adc
das
idivb
xor
jl
dec
mov
inc
sti
cmp
dec
fs
mov
sub
jp
nop
jno
push
cmp
cmp
stc
sub
fisubrs
cmpl
cli
sub
dec
roll
into
pop
xchg
cmp
or
or
insb
mov
xchg
leave
push
fidivrs
lret
push
je
data16
in
add
jg
ret
stos
je
movsl
jl
int
dec
or
aaa
test
jp
scas
pop
push
out
push
xchg
add
xor
or
pop
scas
out
push
adc
inc
mulb
loopne
add
movsb
out
xchg
xchg
fidivrs
inc
xchg
mov
loope,pt
js
gs
push
push
jnp
dec
mov
in
mov
jle
lds
add
inc
mov
cltd
jl
jb
pop
dec
psubusb
mov
jns
lret
repnz
fsubrp
pop
dec
or
ss
stc
jp
xchg
mov
test
mov
icebp
shrl
push
outsb
lret
sti
rorl
pushf
or
test
inc
test
outsb
jns
xor
daa
dec
add
mov
call
mov
add
fisubrs
mov
fwait
std
add
bound
out
dec
addr16
sahf
jl
mov
test
mov
jno
aad
sub
cmpsl
das
repz
into
add
loop
fimuls
push
sar
jg
mov
rcrb
lret
jmp
inc
inc
pop
ret
add
or
roll
movsl
insb
pusha
std
mov
sbb
and
shlb
das
inc
jbe
lahf
sti
mov
fcomps
leave
jae
sbb
or
int
push
fbstp
push
or
xchg
and
xlat
popf
hlt
jb
cmp
rclb
cmovge
inc
push
xor
sbb
mov
mov
jb
mov
dec
pop
fisttpll
xchg
jo
in
iret
stc
lcall
test
dec
rcll
push
jns
mov
jbe
inc
fcomps
lcall
adc
repz
mov
jno
xor
sub
push
fldt
jmp
xchg
enter
shlb
les
pop
mov
loopne
orb
ljmp
cmc
mov
sarb
fimull
int
stc
and
xchg
call
push
sarl
addr16
inc
out
mov
bound
and
repz
pop
frstor
lods
lcall
xchg
push
js
out
cwtl
mov
in
sbb
test
pushf
std
add
add
push
out
sti
outsb
call
sbb
lods
jle
xor
jb
out
jnp
jb
mov
sbb
mov
add
je
cmpsl
out
js
pop
sahf
mov
sbb
loopne
bound
int3
mov
ljmp
sbbl
mov
push
fidivrs
scas
mov
pop
jb
fldenv
pop
cmc
imul
pusha
xchg
push
imul
and
pop
xor
std
or
lea
cmpsb
push
mov
mov
lea
inc
push
push
into
xor
cli
dec
sub
outsl
mov
lods
mov
mov
xor
push
xlat
bound
dec
pop
jb
push
cwtl
and
jg
adc
mov
add
stos
test
fs
in
inc
movsb
aam
mov
mov
fsts
push
std
aam
pop
iret
and
fidivrl
dec
and
cmp
and
int
fwait
xchg
shr
add
jmp
negb
dec
dec
or
pop
ds
mov
movsl
fsub
jmp
pop
or
in
mov
xchg
lret
xchg
ja
cmpsw
or
pushf
sub
insl
ja
je
sti
or
je
daa
jg
into
loop
adc
scas
or
cltd
mov
adc
jl
or
sahf
xchg
mov
push
xchg
or
jle
lcall
add
fs
pop
mov
clc
mov
dec
subb
mov
outsl
int3
test
jbe
cmp
sbb
xor
adc
loope
sahf
leavew
sbb
shlb
dec
pusha
cmp
cld
cmp
inc
addr16
and
mov
arpl
rcrb
jbe
ljmp
add
mov
mov
int
cmp
adc
inc
jbe
pop
mov
fisubs
insl
leave
xchg
lea
out
inc
jecxz
cld
pushf
pop
sbb
sbb
test
fwait
sbb
testb
jbe
xlat
popa
mov
push
cmp
aad
add
pushf
sbb
jbe
adc
xor
mul
jecxz
cltd
out
push
into
or
sbb
push
push
xchg
xor
clc
aaa
and
repz
clc
or
cld
leave
or
and
fidivrs
mov
insb
enter
jo
in
mov
imul
lcall
fildl
inc
xor
jmp
adc
loope
pop
push
add
aad
call
lahf
add
sbb
popl
popf
push
jne
popf
fstps
jns
or
ret
pop
shll
and
negb
sbb
es
std
jns
mov
push
sub
xor
adc
icebp
jmp
inc
or
jle
test
pop
adc
adc
mov
ret
mov
inc
xor
in
inc
out
pop
bound
iret
push
sub
inc
out
sbbl
in
jae
rclb
cmp
or
int3
loopne
gs
popa
xchg
cmp
popa
mov
testl
dec
xor
dec
scas
mov
mov
imul
mov
iret
popf
inc
mov
jmp
dec
daa
dec
jl
and
push
int3
scas
pop
out
jo
std
test
xlat
test
and
lahf
aam
jmp
fldt
jmp
mov
pop
outsb
inc
sti
shll
pop
xlat
adc
mov
mov
stos
rorb
sbb
lock
jns
in
and
and
pop
lahf
idiv
push
je
mov
xorb
scas
pusha
pusha
mov
movsl
add
stc
into
xchg
gs
jnp
aaa
int3
sbb
bound
lret
mov
rolb
lods
lea
sub
jecxz
mov
xor
cmp
sub
imul
fadds
mov
cltd
dec
dec
add
sbb
je
jae
shll
add
pop
scas
cmp
or
fincstp
xchg
repnz
mul
mov
and
xchg
adc
test
or
add
loope
out
xlat
lahf
bound
inc
data16
aaa
dec
loopne
loopne
pop
int3
mov
iret
push
push
or
pop
adc
mov
in
loopne
insl
and
enter
sub
cmp
push
adc
inc
scas
cmpl
arpl
stos
mov
cmp
mov
into
mov
push
cli
outsb
enter
lret
es
xchg
xor
lock
add
mov
sub
int
xor
pushf
inc
dec
or
dec
xchg
lcall
bound
push
jle
jae
mov
adcl
push
inc
xor
dec
outsb
sahf
jg
pop
int
inc
ret
lea
xchg
cmp
ljmp
int
push
xchg
shll
jne
sarl
into
jl
mov
push
push
xchg
inc
pop
inc
xor
pop
pop
test
lds
stos
xchg
and
adc
lea
lret
or
mov
movsl
inc
cmp
jo
inc
fsubs
aam
imul
or
mov
add
cmp
xchg
pop
cmp
js
sbb
aaa
aaa
mov
test
mov
mov
or
xchg
push
movsb
movsl
and
or
push
dec
mov
cmp
rorl
hlt
repnz
mov
push
mov
xlat
into
mov
imul
fdivrs
jae
pop
clc
stc
pushf
mov
jmp
dec
adc
std
fidivl
addr16
pop
add
pop
cld
or
mov
add
lcall
insb
inc
in
mov
into
jmp
js
fisttps
and
xchg
mov
outsb
outsl
jle
jns
hlt
mov
jmp
inc
sub
dec
lods
cmp
jl
fstpt
mov
adc
lea
mov
jns
and
jb
idiv
movsb
mov
sbb
inc
mov
cld
add
test
sarl
outsb
sub
ret
and
movsl
xchg
in
and
sahf
add
pop
stos
and
push
push
shrb
cmpsb
ret
sub
push
pop
fists
pop
ficompl
dec
shr
data16
jecxz
add
pop
xor
loop
mov
icebp
add
call
stos
sbb
daa
inc
ret
mov
push
jns
insl
adc
or
fstpt
push
ljmp
outsb
sub
lods
nop
mov
mov
enter
fidivrs
ret
mov
push
je
ret
ljmp
or
mov
pushf
cli
jbe
or
mov
ja
test
xchg
out
mov
aas
lds
and
fnstenv
fsts
jo
mov
cmp
inc
pop
mov
jno
notb
lcall
loopne
popf
pop
lock
pop
sahf
cmp
iret
lret
jns
mov
addl
cld
adc
jmp
sahf
leave
lods
sub
mov
jmp
fwait
stos
test
and
ret
inc
adc
cli
mov
jg
mov
sub
cmpb
cmp
negl
lds
pop
ds
adc
sarl
sub
sub
cmp
imul
push
sbb
pushf
and
dec
std
fisubrs
xor
push
out
dec
sub
mov
ficompl
xchg
sub
out
test
sbb
mov
pop
insb
xor
fildll
icebp
or
jg
fidivrl
es
mov
into
inc
jl
loop
push
rclb
mov
pop
jns
imulb
clc
aaa
adc
insl
pop
lods
aam
lods
pop
sbb
jg
inc
stos
xlat
cmp
lods
sbb
xor
ss
rol
fstl
repz
rorb
cmp
cltd
push
jno
dec
inc
shrb
sti
arpl
lea
jae
inc
mov
test
ss
add
sbb
nop
mov
fwait
es
jno
push
imul
inc
push
adc
rcl
cwtl
dec
leave
idivl
testb
adc
dec
sbb
jmp
scas
sar
mov
popl
loope
cmp
mov
adc
pusha
xchg
mov
repnz
rcrb
or
shll
push
arpl
les
mov
int3
xor
or
push
xchg
enter
sub
shrl
rcll
es
sub
orl
push
fstl
xor
cwtl
cltd
andb
mov
je
repz
clc
outsl
imul
jne
stos
loop
imul
sbb
fs
inc
jecxz
mov
mov
jnp
add
adc
mov
xchg
sbb
dec
sub
adc
adc
pushl
push
mov
cmp
push
je
neg
xor
push
daa
call
imul
fadd
rcrb
jp
test
sbb
pop
ljmp
daa
sub
inc
dec
daa
mov
mov
rep
clc
in
pushf
jae
or
jb
mov
fcompl
push
xchg
dec
outsb
in
sub
lods
and
popa
loop
xorl
or
jbe
clc
mov
ja
int3
out
or
inc
xchg
ret
movb
mov
dec
das
ret
cmp
scas
mov
push
dec
es
jne
adc
gs
shl
inc
pop
adc
xor
cmp
xchg
cli
psubusb
jne
mov
enter
sbb
fimull
out
in
mov
popa
sub
dec
daa
das
mov
pop
rcr
pop
aas
fistpl
into
mov
inc
rcl
dec
aaa
pop
cmc
cmp
fwait
aaa
cmc
das
add
jo
jmp
cmp
jmp
jecxz
ret
xchg
jl
push
popa
in
cmpsl
adc
and
sub
outsl
loope
sbb
mov
xor
adcb
xor
lret
mov
in
or
inc
adc
leave
or
or
mov
xchg
add
mov
and
cld
aam
sti
mov
cltd
shlb
leave
aad
dec
mov
ljmp
inc
insl
jg
mov
nop
add
hlt
xchg
mov
sub
jl
into
popf
addr16
mov
xchg
push
imul
push
sub
enter
cmp
or
push
jne
and
lock
jmp
ja
stos
cwtl
adc
adc
daa
xchg
mov
push
out
roll
pop
push
sahf
insb
push
mov
scas
out
adc
sbb
mov
sarl
pop
mov
inc
testl
repnz
mov
and
es
test
push
adc
inc
out
add
mov
mov
jmp
aam
dec
sbb
das
loope
std
addr16
sbb
pop
gs
inc
jmp
loopne
mov
add
into
mov
push
cmp
cld
xchg
or
aad
mov
push
jmp
jmp
cld
cmp
cmpsl
aad
aas
out
xor
scas
scas
push
mov
pop
pop
loop
cmpsl
mov
faddl
xor
outsl
sbb
ss
in
sub
push
cmpb
aam
fldl
add
pop
fwait
sbb
mov
and
test
jp
cmp
repz
jp
scas
mov
cmp
addr16
dec
mov
pop
inc
dec
insl
fisubs
cmp
lahf
lret
enter
xchg
les
pop
bound
or
xor
and
mov
sbb
mov
xchg
fnstsw
cli
jns
fidivrs
mov
dec
sbb
stos
xchg
sub
pop
sub
cmpsl
push
and
sbb
pop
sub
addr16
pop
cmpsb
lds
pop
cmpsl
mov
sub
mov
fucompp
iret
mov
mov
out
pop
dec
jb
aaa
jp
rorl
sbb
fmuls
out
cmp
pushf
sub
into
out
push
mov
aaa
xor
sbb
jbe
push
sahf
ljmp
inc
lret
mov
leave
ss
out
je
jnp
mov
and
lret
adc
stos
outsl
push
pop
xor
and
mov
xor
jne
out
jne
dec
add
cmp
aad
mov
xchg
xchg
clc
and
loop
xor
sbb
jge
jl
cwtl
jg
mov
movb
cmp
out
fisubrl
mov
mov
jmp
dec
push
xchg
or
orl
or
dec
ljmp
push
push
and
push
jp
xchg
iret
fstl
xor
push
lea
add
cli
push
sub
and
mov
xchg
pushf
lds
imulb
pop
fwait
hlt
xchg
xchg
rcrl
loope
sub
fisubrl
adc
in
jb
out
push
out
push
pop
dec
rcrl
jmp
push
pop
je
push
push
pop
inc
cli
or
and
ss
push
sub
inc
rorb
add
in
cmp
xor
fwait
sub
mov
mov
or
cld
leave
lcall
mov
das
cmc
int
push
dec
inc
int
sahf
push
or
lret
imul
mov
mov
xchg
xchg
mov
or
mov
rorb
fmulp
jl
lea
aas
add
pop
mov
repnz
addl
inc
das
into
out
fndisi(8087
mov
and
dec
enter
test
and
arpl
daa
mov
cmp
imull
das
jne
and
ja
jge
xchg
inc
dec
adc
lret
stos
mov
or
mov
mov
ja
push
xchg
mov
pop
imul
sub
mov
fsubr
movsl
pop
pop
out
shll
push
lock
cmc
sub
inc
xchg
lret
add
push
scas
xchg
mov
cs
push
jb
or
cli
push
movsl
and
outsb
rorb
jecxz
fwait
push
mov
inc
or
mov
clc
jmp
cmc
xchg
jle
roll
mov
dec
xchg
jl
sahf
mov
stos
ret
or
cmc
or
repnz
jno
iret
jecxz
lds
aad
fisubrl
das
sahf
movsb
nop
xchg
add
push
enter
scas
subb
push
inc
test
adc
sbb
ror
decb
push
dec
leave
cmp
mov
pop
push
in
and
xor
movsb
inc
repnz
push
repnz
inc
cmpsb
lods
sbb
pusha
adc
adc
xchg
js
dec
sbb
mov
into
adcb
dec
xor
add
mov
dec
add
push
mov
adc
adc
jnp
arpl
mov
rolb
movsl
push
add
bound
cmp
insb
sub
mov
jmp
cmp
sahf
icebp
sahf
into
xor
push
xchg
xorl
pop
loope
push
xchg
push
adc
jmp
pop
adc
fidivs
enter
push
xchg
cmpb
jnp
and
rcll
cmc
mov
mov
push
mov
pusha
xor
add
push
xchg
or
cmpl
in
dec
notl
pop
mov
fbld
lcall
xorb
int
mov
sarl
test
adcl
and
lods
cmp
loop
hlt
cmp
pop
subl
mov
imul
ftst
fwait
js
sbb
mov
fs
outsb
lcall
ret
xchg
loope
lock
adc
pop
xchg
add
and
out
pop
adc
mov
js
lods
ret
cltd
sub
dec
int3
sarb
xor
sbb
dec
out
repnz
and
xchg
inc
sbb
data16
std
xchg
loopne
and
mov
adc
add
loopne
ljmp
sub
inc
call
aaa
es
loopne
push
rclb
jge
sbb
xor
out
jo
mov
lock
dec
lods
ja
push
dec
cmp
push
iret
cmp
or
pop
mov
mov
insb
test
addr16
or
or
mov
das
repnz
jb
adc
cmc
jge
bound
mov
cmp
push
fiaddl
jg
sbb
dec
sub
xor
or
add
add
lds
lods
data16
or
bound
jns
adc
xchg
pop
cmp
xchg
hlt
lret
and
xor
cltd
repz
loopne
pop
jno
fsts
xor
push
std
aad
adc
adc
xorb
dec
xor
in
pop
add
pop
jnp
fisubl
loope
sahf
lock
mov
lea
test
xchg
dec
inc
es
inc
inc
sub
mov
fnop
xchg
mov
bound
aad
out
add
das
adc
jg
sbb
shr
fwait
mov
mov
in
push
clc
cmp
pop
pop
fstpt
or
mov
push
jl
push
dec
loopne
sbb
jmp
xor
fidivl
insb
jmp
inc
fdivs
jmp
inc
cltd
xor
mov
xlat
call
or
movsl
stos
xchg
iret
mov
fs
testl
imul
adc
ds
adc
xchg
add
xchg
inc
xlat
stos
sbb
sub
sub
or
rol
mov
xor
cmpsb
sbb
pop
stc
adcl
xchg
into
out
and
gs
out
push
std
mov
cmp
add
or
roll
into
jecxz
inc
xlat
and
sbb
dec
andb
pusha
mov
pushf
dec
lea
or
sarl
loop
cmc
mov
daa
dec
jmp
js
or
sub
adc
ljmp
outsb
adcb
imul
fcoms
or
or
movsl
movsb
and
pop
jno
inc
js
shr
cwtl
xchg
cmpsb
push
lahf
int3
dec
imul
pop
or
adc
push
xor
outsb
xlat
mov
lea
add
cmp
stos
nop
aas
jmp
dec
ja
lahf
ret
pop
arpl
shrl
mov
sbb
mov
pop
jbe
into
cwtl
mov
aaa
mov
pop
mov
test
jle
inc
ret
outsb
rcrl
jbe
push
insl
mov
in
les
and
jns
mov
into
mov
sbb
push
xchg
in
stos
sahf
adc
je
inc
jle
ja
test
or
mov
mov
pop
cmp
je
lods
push
add
stos
adc
repz
repnz
sub
pop
popf
sub
cmp
sbb
and
icebp
das
adc
push
adc
cmp
repnz
sti
inc
mov
dec
movsb
sahf
pop
mov
inc
jns
sahf
outsl
test
xchg
in
andb
vdivpd
gs
jle
push
clc
xchg
fdivrp
and
sbb
jnp
push
iret
xor
imul
cmpsl
fstps
add
push
cvtpi2ps
imul
les
in
je
mov
lock
sti
dec
mov
dec
out
push
jmp
movsl
ret
xchg
out
popf
cmp
cmp
sbb
sti
xstore-rng
and
insl
adc
xchg
sbb
into
out
and
out
jnp
pop
in
call
in
insl
push
daa
sti
hlt
bnd
fucomp
mov
and
dec
add
push
mov
movl
dec
xchg
dec
adc
dec
xor
mov
mov
xlat
cmpsb
ljmp
add
xor
mov
pop
inc
dec
xor
rcrl
sbb
fs
xor
jecxz
out
sbb
xchg
jg
xor
hlt
pop
loope
push
movsb
addr16
subl
in
ret
xchg
add
mov
mov
stos
cmpb
mov
shrb
ss
and
rclb
sti
sbb
mov
pop
ds
out
and
push
fdivrs
jp
add
shlb
fmuls
jmp
je
fs
fsubrs
mov
movsb
stos
icebp
subl
xchg
or
xor
jno
push
cmp
das
lea
mov
mov
fcomi
call
push
sub
mov
pop
bound
ja
insl
inc
movsl
dec
gs
imul
loop
jb
sub
neg
or
jp
mov
sub
repnz
and
ja
ror
hlt
sbb
ljmp
mov
sbb
or
or
gs
sti
loope
clc
push
in
test
inc
aad
inc
shr
fisubrl
xor
inc
push
pop
push
cmp
fs
and
pop
jo
jecxz
xchg
fs
ja
leave
xor
lret
lock
push
or
adc
push
leave
ret
mov
out
movsl
mov
push
mov
sub
sub
mov
inc
jp
xor
cs
xchg
daa
inc
cmc
shll
sti
insb
pusha
or
inc
push
inc
push
add
or
cmp
inc
push
jl
ja
add
mov
pop
in
pop
testl
or
jle
add
lods
mov
dec
mov
enter
scas
mov
xchg
dec
mov
add
mov
cmp
enter
cmp
jl
dec
jns
loop
pop
mov
in
aaa
enter
cmpsl
cmp
int3
inc
lret
sub
dec
inc
ljmp
jb
fwait
xor
jno
mov
pop
inc
pop
leave
mov
shl
add
pop
mov
cwtl
dec
add
aad
jns
add
into
mov
bound
aas
jb
std
jg
push
xchg
cmp
ss
add
gs
andl
fwait
stc
xchg
data16
ds
mov
ds
inc
cwtl
pop
inc
add
lret
xor
adc
movsl
xchg
cmp
dec
xor
cmp
andl
pop
push
imul
pop
mov
or
sbbb
fmuls
jno
adc
mov
mov
mov
fldenv
jno
inc
pop
inc
stc
inc
cmpsb
inc
out
fcoml
les
sbb
jle
inc
in
inc
sahf
or
push
inc
lds
mov
pop
loopne
imul
fcoms
roll
mov
pop
xor
in
icebp
sub
mov
pop
call
add
xchg
aam
dec
push
cli
es
pop
pop
ret
and
fdivrl
movsl
jl
das
dec
repz
addb
jl
inc
pop
cmp
icebp
xor
outsl
mov
xor
sub
mov
lods
pop
push
mov
stc
sub
push
ret
cmp
mov
popa
std
cmp
xor
xor
xchg
lock
nop
dec
stos
push
ljmp
int
mov
cmp
mov
jl
addr16
cmp
sbb
jb
int
loopne
es
push
push
mov
outsl
sub
iret
ret
mov
inc
mov
sbb
lock
cmp
pop
xor
sbb
mov
add
pop
jge
mov
and
fnsave
popa
mov
mov
ret
sub
jg
inc
loope
sub
sub
fisubrl
adcl
lcall
mov
or
inc
outsb
shrb
cmp
sbb
mov
in
pop
xchg
rolb
test
xchg
pop
push
fnstsw
loopne
xor
mov
ficompl
mov
hlt
pop
jns
sub
mov
dec
loope
loopne
ficompl
enter
pushf
mov
jae
bound
dec
push
scas
mov
lock
jnp
js
call
std
je
cltd
mov
lea
scas
and
push
popa
fsubrs
sbb
jg
xor
or
xor
mov
sub
scas
in
fimull
movsb
imul
dec
fstpl
rolb
ljmp
xchg
inc
and
add
out
shlb
shrl
mov
sub
dec
inc
icebp
ds
xchg
loop
sbb
xchg
pop
jno
scas
cmc
mov
xor
sti
inc
push
sbb
shll
push
test
ljmp
and
mov
mov
imulb
and
insb
mov
divb
jg
cs
arpl
xchg
fsubrl
imul
notl
cmpsl
out
int
loopne
mov
repz
fimull
inc
stos
xor
out
insb
jmp
shrb
xor
cmp
insb
fadds
lret
lods
pop
xchg
lods
lcall
std
cmp
pop
fstpt
push
in
test
stos
pop
out
shl
or
scas
and
add
in
sbb
adc
xor
push
and
push
push
in
jle
dec
adc
sbb
fstpt
fdivr
rcrb
sub
xchg
movsl
xor
mov
mov
adc
loope
jo
stos
mov
mov
lahf
pop
out
lret
push
mov
pop
xchg
xchg
repz
or
subb
xchg
pop
add
lds
insb
mov
push
xchg
mov
jns
call
sub
push
xchg
add
mov
ljmp
mov
mov
inc
sub
rcr
shrb
insl
sub
dec
pop
xchg
std
aam
jp
or
aas
cwtl
mov
push
repz
dec
dec
jle
sbb
push
push
imul
jb
aaa
or
jl
sbb
das
mov
lret
xor
std
aam
pop
ja
subl
sbb
std
ret
lahf
shll
fimull
or
pop
mov
jnp
mov
ja
shlb
mov
dec
lahf
rcrl
stos
push
ja
mov
ja
sbb
inc
out
add
inc
jmp
jecxz
cwtl
dec
in
dec
jp
push
sarl
ret
hlt
add
jmp
out
jl
int
mov
adc
leave
call
loope
out
dec
in
xor
test
jg
loopne
ret
push
cltd
dec
inc
inc
pop
jp
cmp
stc
or
test
lret
mov
js
repnz
xchg
inc
call
pop
lcall
sub
call
mov
sarb
ret
pop
test
fnstsw
or
push
pop
dec
movl
in
lret
mov
mov
jbe
fnsave
adcl
sbb
jecxz
fcmovne
aaa
push
and
shll
adc
inc
cmp
lahf
sahf
xlat
adc
adc
mov
fistps
test
push
jge
aam
test
fcompl
push
or
mov
jno
mov
aas
jbe
cmp
call
outsl
or
adc
enter
cli
aam
add
fdivp
and
cmp
popa
add
pushf
dec
adc
je
sahf
jnp
push
cwtl
popa
mov
adc
rorl
loopne
or
cmc
stos
loop
add
xor
jnp
test
inc
jmp
xor
adc
bound
pop
es
jb
lea
add
rcll
jecxz
ficomps
xor
enter
and
ds
mov
test
sbb
mov
int3
repnz
lret
into
jno
push
les
int3
pop
icebp
subb
clc
pop
mov
xchg
and
repz
aad
insb
decl
xor
addr16
inc
lret
sbb
daa
ret
jmp
and
or
ljmp
pop
and
or
outsb
inc
sbb
mov
cmpsb
bound
jp
out
ret
jmp
in
call
pop
sbb
cmp
clc
pop
loopne
inc
cmp
mov
sub
inc
inc
imul
addb
popf
xchg
jo
inc
jmp
mov
cmpsb
sbbl
aad
test
xor
inc
xchg
hlt
arpl
cmp
outsl
push
or
add
pop
inc
mov
inc
arpl
fsincos
add
push
add
int3
mov
or
cmp
cmpsl
popa
out
icebp
ljmp
nop
mov
ret
outsb
mov
fstl
pop
cs
sbb
add
adc
test
ss
incb
lds
repz
out
cmp
mov
dec
push
int3
or
mov
and
xor
push
cmpsb
cmpb
lods
adc
jl
pop
xor
into
push
fdivrs
pop
in
insl
fldcw
sub
lcall
adc
add
aas
inc
add
dec
xor
and
ss
and
test
loope
popf
sarl
xchg
into
xor
fsubrs
sbb
mov
jmp
jne
pop
mov
pop
jp
out
lret
bnd
mov
push
pop
pop
andb
faddl
lea
jbe
jb
cli
xchg
jmp
inc
dec
sahf
xor
mov
cltd
xchg
mov
cwtl
mov
lret
pop
add
les
mov
or
mov
out
dec
test
mov
in
test
jno
add
lods
jbe
or
pop
adc
insl
inc
out
sub
push
loope
in
sbb
int
test
jp
pop
sbb
fldl
lret
jo
sti
cmpsl
rcl
and
push
iret
push
dec
inc
pop
and
cmpsb
in
adcb
sbb
testl
cs
nop
in
je
fcmovu
inc
push
sbb
and
mov
pusha
adc
push
imul
lret
jns
dec
mov
mov
test
sub
fistpll
std
or
dec
movsb
jmp
lods
fcoml
xchg
lea
test
in
and
cwtl
xchg
sti
aad
add
arpl
cmp
leave
pop
xchg
pop
add
aad
jl
js
aad
cmpsl
push
add
fs
adc
outsb
lock
fldenv
test
cmpsb
pop
les
loop
mov
lods
pusha
dec
mov
push
xor
push
in
sbb
jne
jmp
pushf
add
adc
adc
mov
xchg
imulb
jmp
addr16
pusha
es
cmp
rcl
mov
mov
inc
cmp
and
fdivrs
cmpb
pusha
cmp
imul
cmp
inc
jecxz
subl
pop
enter
repz
pop
aad
push
hlt
into
out
inc
in
sti
imul
pop
filds
insl
cmpl
xor
or
aam
and
add
xchg
fs
mov
lret
lods
andb
data16
lret
subl
fs
out
and
mov
clc
cwtl
inc
inc
cmp
mov
js
pop
jno
cmp
test
aad
fs
push
dec
adc
mov
les
decl
mov
outsb
mov
aad
and
xor
imul
stos
hlt
je
mov
sub
movaps
cli
jbe
in
lahf
imul
aad
flds
inc
mov
mov
jo
cmp
cltd
stos
sub
sub
filds
out
mov
das
ret
mov
push
push
cwtl
int3
and
cmp
loopne
mov
xor
jae
fwait
dec
dec
mov
mov
bound
into
mov
ja
stos
dec
rcll
popa
xchg
mov
mov
inc
insb
push
popa
ficomps
ljmp
stos
mov
pop
mov
nop
sbb
sbb
popa
xchg
mov
das
and
loope
push
in
inc
movsl
push
lods
mov
xor
jl
mov
and
push
inc
sub
movsb
mov
inc
cmp
pop
rorb
cmp
lahf
lea
nop
mov
sub
insb
jb
subl
add
mov
hlt
jne
cmpl
xchg
ja
aad
stos
pop
ss
out
push
fmul
je
mov
and
cwtl
push
pop
xor
prefetch
jecxz
imul
fdivrl
insl
add
and
mov
xchg
sub
push
mov
fs
push
aam
sub
sbb
mov
rolb
outsb
cwtl
jo
jge
mov
add
adcb
mov
lods
lcall
pop
inc
clc
sub
or
sbb
or
mov
mov
sarl
dec
add
jns
mov
fst
je
sub
xor
hlt
aad
mov
cli
repnz
insl
push
je
dec
cmp
insl
iret
sub
es
bound
icebp
into
mov
hlt
xchg
inc
sbb
push
mov
in
add
jae
or
mov
pusha
fwait
bound
outsb
cwtl
jp
pop
xchg
add
test
mov
les
psadbw
loopne
pushf
xor
or
pop
test
pop
int
dec
movsl
movsw
xchg
jnp
test
nop
mov
dec
in
lcall
lea
in
cltd
inc
lods
xor
add
lds
lds
jmp
sub
ror
adc
addl
ja
cmp
cmc
lret
mov
and
mov
push
sub
arpl
xchg
loop
fidivrs
push
pushf
pop
mov
sahf
sbb
inc
inc
and
jle
push
jg
pop
out
test
push
cltd
arpl
cmp
push
mov
cmc
mov
add
xor
xor
dec
mov
sahf
outsb
pop
push
push
mov
in
adc
outsb
les
test
xor
enter
iret
lock
push
ret
pushf
add
inc
out
sub
and
cli
repnz
or
mov
sti
mov
jmp
repz
jecxz
jmp
jecxz
push
jle
js
add
push
push
dec
cmovbe
mov
daa
add
bound
ror
jle
jnp
out
cmc
inc
clc
jle
orb
xorl
mov
cld
adc
cli
or
in
xchg
rclb
lret
rclb
loop
data16
push
xchg
fadd
lcall
cmp
push
dec
outsb
movsb
fwait
aas
inc
hlt
jo
call
xor
sbbb
adc
mov
mov
mov
pop
mov
add
mov
incl
sub
fiadds
jl
hlt
mov
mov
cmp
bound
mov
pop
jecxz
push
jno
xor
stc
lahf
dec
push
divb
je
sbb
stos
xchg
jmp
push
loopne
insb
sub
cmp
cmp
cmp
inc
adc
pop
aam
fwait
sub
ss
add
xchg
mov
add
lahf
in
mov
push
sbb
fwait
mov
cmpsl
pop
iret
mov
lcall
jae
or
adcb
cltd
cs
das
xchg
in
bound
ret
xchg
rorb
ljmp
lock
xor
jno
test
and
fisubl
pop
cltd
adc
hlt
jle
adc
jge
and
js
std
jge
pushf
add
imul
inc
insl
push
rolb
mov
xchg
rcll
je
push
dec
push
dec
into
jle
aad
xor
loopne
inc
mov
adc
insb
sbb
push
pop
popf
push
aam
leave
cmp
loope
and
cmpsb
js
cmp
and
pop
and
gs
js
loopne
xchg
sbb
sbb
mov
inc
icebp
mov
add
movsb
add
repz
mov
mov
adcb
xor
or
xor
sbb
lea
dec
fsts
jne
fists
fsubs
fistpll
pop
addr16
pusha
arpl
or
jnp
addr16
shll
or
mov
pop
ret
mov
loopne
daa
push
pop
fimull
int3
mov
in
jecxz
inc
in
push
jno
mov
bound
adc
xor
stos
or
cwtl
fsubs
mov
adc
shll
add
mov
or
or
push
cmp
clc
mov
inc
aam
popf
loope
jmp
pushf
dec
mov
dec
ret
rorl
mov
jle
outsl
lret
setle
idivl
lcall
add
scas
paddsb
insl
cmp
jmp
xor
adc
adc
stos
test
repnz
jl
jmp
das
and
icebp
push
insl
cmp
fs
and
push
mov
push
mov
push
or
adc
repz
dec
into
add
std
sarb
out
mov
lods
sbb
fldl
push
mov
lret
dec
ret
fsubrl
dec
xchg
adc
push
cs
mov
pop
xchg
cmp
cmpsb
cmp
shll
or
xlat
pop
outsl
fwait
mov
shl
sahf
dec
sbb
and
cld
mov
loope
add
imul
aam
pop
mov
fwait
or
mov
jp
sub
sub
dec
es
in
mov
mov
jmp
cs
mov
scas
and
js
and
cmovg
push
rdpmc
jne
std
dec
mov
iret
mov
sub
addr16
ja
fadd
dec
mov
xchg
imull
jg
sbb
mov
roll
addr16
cmp
mov
mov
xor
add
cli
sbb
sti
adc
sbb
inc
inc
mov
add
sub
popl
rcrb
icebp
push
mov
in
cmovo
je
loop
aam
mov
xchg
fistps
cmpl
mov
cmp
add
push
mov
mov
fbld
sub
xchg
cmpsb
es
xchg
sti
mov
repnz
fadd
sbb
mov
push
and
clc
mov
cltd
leave
out
add
lock
insb
sti
imulb
test
sbb
inc
add
sbb
mov
stos
lds
fs
add
pop
or
xorb
adc
mov
fmull
sbb
xor
dec
movsb
in
pop
outsb
jb
fs
pop
scas
fmull
pushf
pushf
es
xor
xchg
push
mov
mov
aam
aaa
pop
add
insb
pop
mov
in
std
or
subl
adc
insb
sbbb
lock
adc
dec
push
mov
push
hlt
inc
mov
ds
aad
stos
jmp
cmp
sub
add
scas
icebp
popa
cmc
in
insb
daa
mov
sbb
clc
mov
test
push
jg
fwait
nop
adc
jle
push
das
push
test
push
pop
sbb
inc
xchg
xchg
adc
dec
pop
stos
xchg
pop
pop
or
rcrl
cmp
les
xor
jae
push
js
mov
inc
fbld
popf
test
mov
mov
mov
aad
mov
xor
cmp
testl
sbb
hlt
xor
sub
inc
into
cmp
cmpsl
push
cmc
pop
push
fimull
xchg
xchg
out
sahf
push
xchg
js
adc
cmpsb
cmp
in
lea
lock
mov
aas
sub
mov
sbb
inc
aaa
add
mov
xchg
mov
inc
insb
in
ret
stos
mov
data16
bound
cmpsb
sub
jns
std
mov
mov
in
mov
add
dec
addr16
mov
std
sti
test
and
adc
pusha
cltd
mov
and
adc
jno
xchg
test
adc
js
bound
rol
inc
nop
add
out
gs
jb
loopne
pop
pop
popf
jb
push
xchg
ror
push
es
fidivrs
cld
dec
pop
out
jmp
in
lds
sbb
cmp
hlt
push
loopne
and
mov
pusha
jb
ret
mov
mov
in
jae
mov
addr16
jle
pop
fdivs
mov
fisubl
and
mov
xor
dec
ss
jg
outsl
stc
lret
arpl
inc
data16
mov
push
mov
ljmp
test
div
sub
or
sbb
lret
hlt
inc
outsb
gs
rcrl
jbe
stc
sbb
add
incb
sarb
cs
subl
and
je
pop
popf
vpunpckhqdq
sbb
ss
sub
xor
sti
fcompl
insl
stc
add
or
out
lds
aad
sub
insb
adc
je
xor
pop
sbb
or
mov
inc
or
addr16
bound
jns
clc
fdivrp
or
jnp
std
pop
xor
pusha
fidivl
cld
ret
icebp
lahf
iret
and
test
daa
mov
out
or
mov
dec
pop
ficoml
dec
test
pop
popf
sbb
xchg
das
test
or
stos
icebp
rolb
pop
lret
add
call
and
test
imul
sub
hlt
sub
cmp
iret
xchg
enter
lods
ljmp
mov
aaa
mov
std
jo
push
es
push
cmpsl
dec
xor
stos
mov
aam
adc
mov
jp
icebp
xchg
ljmp
mov
dec
fisubs
fwait
or
lcall
pop
lods
push
xchg
pop
stc
popf
stos
jge
movsl
lds
lods
jge
pop
std
shll
dec
mov
cs
mov
test
movsb
xorl
in
call
cmp
jne
add
dec
or
in
mov
in
sbb
jae
jo
hlt
cmp
shr
jmp
fidivrs
xchg
loopne
adc
out
add
fldt
jo
lret
adc
imul
inc
sbb
insb
stc
ja
lods
and
rorb
inc
sti
add
test
popa
sbb
sarb
cmp
ds
mov
outsl
sarl
repz
lret
pop
inc
jp
nopl
loope
arpl
adc
std
shrl
mov
dec
xchg
cmp
sti
adc
cld
aas
fbld
lds
imul
pushf
jp
or
xor
and
dec
xor
dec
inc
les
sbb
mov
jge
jno
push
pop
xor
xor
xchg
mov
mov
stos
ret
pop
shll
mov
popf
sbb
and
dec
int
push
leave
sub
insb
out
push
cs
jbe
or
and
mov
js
shlb
jo
lret
adc
and
sub
aam
cmp
popf
sbb
xor
ss
test
loop
int
test
fadds
bswap
mov
adc
decb
adc
imul
and
pop
mov
xor
iret
into
call
insl
jp
aad
xor
inc
enter
addl
lock
lock
out
bound
rolb
push
imul
fs
jmp
jb
pop
sbb
pop
fcomps
add
cmpsl
lods
push
shlb
or
mov
les
mov
lods
xor
pop
xlat
pop
insl
pop
sub
les
or
jp
sbb
mov
imul
add
out
dec
adc
sbb
ds
lods
hlt
inc
lret
mov
ja
ja
in
test
jb
pop
sahf
pop
adcb
and
outsl
push
or
xor
push
loop
cmpsl
ret
andl
or
imul
sti
pushf
pop
ret
push
imul
pop
fnstenv
mov
add
ja
pop
stos
xchg
dec
push
pushf
sbb
xchg
xchg
js
lcall
add
mov
and
pop
out
xor
in
jo
jne
es
mov
lea
ret
out
pop
loope
mov
ret
xlat
push
lock
je
pusha
sub
les
cmp
rcl
push
jecxz
mov
stos
std
push
movsl
push
cs
in
dec
sti
jns
xor
inc
fsubrs
sbb
std
inc
push
jo
adc
movsb
pop
mul
jns
rolb
sbb
sub
cmp
test
or
mov
push
mov
or
pop
mov
mov
sub
mov
insl
add
add
jns
push
iret
cld
push
cld
add
sbb
pop
cltd
scas
popf
mov
adc
imul
add
and
movsb
adc
cs
mov
mov
dec
test
or
mov
lea
out
lds
add
sbb
mov
js
cmp
out
xor
inc
adcl
and
pushf
sbb
ffree
shl
jo
mov
xor
xor
rcll
jl
es
and
out
jg
jle
pop
xchg
mov
pop
push
xor
xor
fcoml
push
push
test
jp
dec
test
xor
les
data16
js
js
mov
mov
ret
sti
push
ret
or
and
cmp
sbbl
mov
xchg
aam
pusha
nop
setns
pop
dec
test
or
mov
clc
xor
sbb
pop
jmp
push
cli
cmp
mov
adc
fcmovbe
jb
out
sub
adc
jecxz
sub
inc
lock
adc
adc
add
xchg
inc
xor
pop
js
call
push
or
mov
xchg
sbb
adc
popa
add
pop
arpl
fiaddl
cld
ss
ror
mov
adc
push
sbb
dec
dec
dec
lret
pop
lea
rolb
jl
or
adc
pop
aaa
inc
lahf
inc
cli
dec
nop
pushf
cltd
pop
xlat
xor
mov
or
insl
ret
sbb
jno
jp
fstpt
dec
cmp
ss
jbe
loopne
aad
addr16
adc
test
jne
adc
std
jo
and
lahf
je
or
fwait
mov
mov
dec
jne
jp
jo
mov
pop
fldl
pop
inc
push
ljmp
cltd
inc
jbe
mov
cwtl
cmp
in
std
arpl
popf
fistps
jecxz
adc
cmp
out
inc
sub
mov
ja
sub
fdivp
or
or
mov
or
xor
test
loopne
sbb
jmp
mov
sarb
popa
addr16
icebp
cltd
movsb
adc
lods
mov
mov
sbb
mov
iret
mov
icebp
add
push
pop
dec
das
xchg
sub
dec
jb
fldt
pop
xchg
or
rcll
dec
cltd
ror
mov
rcll
cmp
xchg
dec
add
movsl
rorb
sub
pop
scas
rol
mov
popf
js
sbb
mov
imul
in
enter
ja
lds
jecxz
push
movb
adc
and
iret
imul
sub
mov
add
and
mov
push
fnstsw
mov
cmp
jp
out
pop
in
inc
into
jl
add
inc
or
mov
sarl
cmpsb
jns
lahf
and
lahf
mov
xchg
mov
sub
push
ret
dec
push
xchg
push
push
bswap
in
jne
mov
xor
scas
cwtl
aas
pop
jecxz
inc
ds
xor
add
repz
aad
fstpl
push
pop
test
mov
push
add
inc
pusha
rcrb
push
lds
sbb
inc
mov
xor
nop
sbb
pop
movsl
jmp
popf
aas
jg
rcll
es
sbb
xor
gs
mov
xchg
sahf
arpl
fdivs
pop
push
pop
mov
mov
mov
sahf
mov
sub
and
cmp
loop
arpl
jg
int3
add
push
cmp
aaa
call
addr16
das
mov
adc
outsb
js
dec
push
jle
nop
dec
outsl
xlat
jmp
leave
push
stos
mov
jo
out
addr16
loope
cmp
fidivs
incl
hlt
cmc
push
js
mov
sbb
mov
mov
popa
and
inc
push
fdivr
mov
add
ds
jno
lds
add
insb
xchg
and
push
cwtl
push
fcmovu
stos
mov
xor
loop
in
addr16
outsb
fnstsw
into
or
pop
out
xor
mov
lods
mov
shl
es
pop
ss
mov
push
fcoms
mov
jle
dec
out
lods
sbb
pop
jl
push
nop
ss
outsl
push
scas
cld
cmp
fs
in
xchg
push
out
add
or
mov
dec
dec
pop
or
iret
push
orb
inc
out
mov
pusha
ljmp
cmp
cli
les
in
scas
pop
cmp
fwait
stos
inc
scas
mov
mov
cmpsb
mov
xchg
pop
xchg
ljmp
call
aas
lods
push
test
sub
cmp
cs
std
repnz
mov
imul
fs
inc
mov
fs
data16
sbb
mov
mov
and
sub
adcl
push
add
jb
int
into
imul
cli
xchg
push
insl
cmpsl
jl
lcall
mov
inc
push
das
dec
xchg
lea
inc
mov
cld
or
jge
dec
arpl
dec
cli
scas
jp
sbb
add
push
pop
je
lds
jmp
cs
push
inc
lds
in
jae
cli
inc
aas
dec
mov
outsb
enter
cmp
and
cmpsl
or
pop
fldcw
ror
sar
dec
cld
mov
test
push
fstl
push
jle
adc
push
sub
dec
jecxz
xacquire
or
pop
das
or
dec
xor
mov
mov
or
mov
pop
or
js
or
in
dec
mov
adc
lock
and
sub
inc
vpsrld
xchg
or
in
sbb
push
pushf
lahf
hlt
sbb
pop
cmpsl
invd
sub
adc
lret
pop
loopne
out
out
sub
inc
push
stos
cld
sbb
and
movsl
add
fdiv
ds
mov
jnp
lock
pusha
push
pusha
lods
pop
insb
outsb
sub
das
add
add
xchg
mov
mov
add
xlat
jne
fdivl
lret
mov
cmp
scas
dec
imul
roll
sub
xchg
repz
jo
mov
and
movd
ret
jo
jl
pop
dec
mov
adc
mov
mov
insl
lds
punpckhwd
push
add
ror
sbb
cld
xor
push
in
nop
lret
fimull
gs
divl
test
cltd
cmpsl
jle
or
xor
mov
cmpsl
mov
push
test
pop
pop
stc
or
sbb
sbbb
adc
jle
pop
and
lret
mov
jne
inc
arpl
sbb
jmp
and
sub
inc
test
pop
add
jle
int3
fs
or
adc
mov
cmpsb
and
outsl
aas
mov
mov
bound
add
out
ret
jb
add
add
jnp
filds
stos
mov
cwtl
rclb
ja
movsb
out
les
fists
pop
inc
nop
dec
adc
push
stc
mov
xor
fstpl
addr16
cmp
iret
lcall
add
mov
pop
xor
dec
insb
pop
push
scas
mov
dec
dec
sub
add
cmp
cmpsl
add
inc
rorl
xchg
cld
js
sub
sahf
stos
cmp
repz
cmpb
cli
add
jae
mov
mov
dec
into
fs
mov
mov
push
out
repnz
adc
mov
orb
insl
pop
loopne
or
mov
shrb
out
pop
mov
fdivr
lods
add
les
stc
jl
push
xchg
shrb
insl
jne
dec
mov
dec
lea
loop
pop
ds
popf
pop
and
popa
cmc
aas
into
enter
pop
adc
xchg
insb
push
movb
xchg
jge
jno
add
xor
cmpsl
in
imul
stc
inc
sub
jno
xchg
sub
inc
insl
jle
add
loopne
adc
in
mov
and
iret
jb
lods
pop
test
pop
fistpll
out
lea
idiv
inc
mov
xchg
mov
int3
test
sub
inc
imulb
sti
dec
inc
or
lock
xor
scas
lea
xchg
sub
lods
in
mov
pop
pushf
pop
cmpsb
inc
adc
mov
out
sub
pop
in
or
jg
daa
mov
sarb
mov
data16
xchg
in
leave
lods
xchg
nop
in
nop
out
iret
xchg
cmp
mov
iret
js
test
aam
enter
lods
ljmp
or
hlt
fldcw
stc
mov
adc
ljmp
ds
jge
popf
repnz
push
inc
lods
sbb
fmul
pusha
lret
mov
mov
decb
mov
xor
in
clc
outsb
ja
rclb
es
push
lret
inc
jle
in
out
iret
js
sar
lds
xor
or
rcrl
push
xor
aad
lret
mov
mov
nop
movsb
add
or
faddl
cs
scas
jge
xchg
call
test
sbb
push
out
cmp
call
and
jno
xchg
adc
adc
stos
inc
push
pop
pop
push
in
xor
lea
or
fldl
xchg
jne
adcb
xchg
sub
lcall
insl
repnz
mov
push
movsb
inc
cmp
cmp
inc
mov
xor
sub
imul
scas
mov
repz
cs
sub
fisttps
lahf
cmp
mov
and
pop
adc
jns
mov
jp
inc
inc
add
sbb
or
pop
inc
mov
mov
lds
sub
dec
push
mov
insb
or
pop
cmc
adc
adc
rcll
clc
jbe
fisubl
mov
mov
nop
repnz
out
pop
jne
nop
xor
or
push
mov
test
mov
fisttpll
or
adc
and
jnp
jp
xor
mov
mov
fwait
movsb
je
or
xchg
int
lods
scas
stc
mov
or
scas
sbb
aad
test
decb
out
cmc
fcomp
insb
or
ret
jno
aam
adc
test
push
or
mov
subl
dec
sbb
jl
mov
mov
shll
xor
mov
mov
in
push
iret
add
cmc
mov
loope
mov
inc
jg
pop
xor
pusha
pop
pop
inc
add
lock
push
dec
or
cwtl
xchg
cmp
test
xor
jge
cmc
inc
aas
mov
pop
dec
add
and
mov
dec
xchg
jno
mov
xchg
jmp
sarl
js
mov
mov
fisttpl
xchg
scas
pop
orl
fstl
sti
push
lret
mov
mov
lock
aaa
sbb
pop
push
dec
xchg
push
lods
sub
scas
shl
sbb
jae
test
sub
inc
sbb
addb
push
mov
sub
fldl
cwtl
sub
fcmovnb
cmp
ret
or
in
add
jns
add
mov
pop
cmc
fisubrl
mov
and
fmuls
sub
dec
pushf
push
lret
sub
stos
adc
inc
mov
ss
rorb
fs
jbe
imul
push
or
fwait
mov
repz
loope
stos
mov
int3
imul
mov
ret
mov
xor
jg
ljmp
insl
mov
xor
mov
insb
jle
mov
mov
add
pop
xchg
rorl
sub
fsubrs
out
cld
xchg
and
add
or
xor
cltd
out
mov
imul
orb
lods
inc
pop
fdivl
mov
test
aam
mov
in
int
inc
push
enter
fistpll
fisubrs
out
add
cmpsl
and
pop
mov
push
pop
and
clc
and
notb
aaa
mov
sbb
push
sbb
lock
fs
mov
add
pusha
and
cmp
jecxz
jb
xchg
mov
or
xor
jnp
pop
or
imul
add
dec
sub
testb
and
inc
jl
and
in
push
jns
insb
and
add
xchg
or
shl
ret
and
pop
addl
inc
fs
loope
into
dec
out
imul
data16
push
mov
sbb
mov
dec
adc
xchg
ret
aam
jmp
xchg
adcl
mov
in
inc
test
push
insl
mov
adc
or
adc
fcos
adc
test
scas
mov
mov
jae
sti
xchg
sarb
xchg
and
mov
adc
sbb
cld
aam
ror
sbb
adc
imul
xchg
cmp
sbb
xchg
jne
clc
das
jle
repz
out
mov
mov
fs
dec
cld
or
inc
fcoml
cmc
bnd
push
popa
lods
out
jl
cmp
data16
cmp
hlt
adc
iret
pop
add
cmpsb
ret
addr16
fwait
lahf
dec
mov
jbe
dec
jnp
xchg
imul
mov
lcall
and
mov
subb
and
jae
add
das
mov
dec
arpl
pop
ds
sub
scas
ds
pop
mov
mov
insb
repz
dec
xchg
addr16
cmp
dec
xchg
sub
lcall
es
xor
dec
pop
jmp
insb
xchg
mov
or
push
pop
mov
xor
iret
inc
sub
clc
xchg
mov
insb
or
fmul
adc
push
sarb
sub
sbb
shlb
add
stos
repz
mov
testl
fs
shl
pop
shrb
sbb
stos
mov
fadd
jb
das
push
lock
aad
ret
lods
and
pop
sub
insb
pop
jle
push
insb
mov
mov
jge
mov
movsl
dec
or
fsubr
push
and
sbb
inc
notb
lahf
shrb
popf
outsb
pop
leave
cmpsb
stos
mov
jmp
jle
pop
cmp
push
lock
mov
pop
mov
add
jg
xchg
imul
pop
xlat
or
mov
sarb
push
call
xchg
ljmp
pop
cmp
jb
mov
ja
xrelease
add
and
pop
xor
pushf
inc
dec
xorl
icebp
iret
mov
lds
pop
aam
outsb
in
adc
jp
ss
faddp
or
pop
in
test
sbb
and
add
mov
xchg
sbb
inc
test
push
stos
cmp
mov
mov
jmp
mov
sub
ja
xor
lds
push
pop
xchg
popf
add
leave
xor
stc
jecxz
movsl
jecxz
sub
jp
cmp
int3
rclb
fsubs
mov
jbe
mov
jl
std
jle
movsl
xchg
jbe
ret
out
sbb
movl
and
imull
js
inc
shr
xchg
cmp
stc
pop
fdivs
mov
cmp
mov
sub
sub
mov
push
xchg
popa
ret
dec
mov
movsl
out
sahf
aas
jp
in
fcomi
adc
jne
add
lods
cld
pop
test
mov
and
dec
rolb
test
int
test
rolb
xlat
js
into
adc
sbb
mov
dec
cltd
add
jne
mov
cli
xor
ja
dec
mov
incb
push
pop
xlat
mov
out
jp,pt
loop
push
pop
sub
scas
arpl
shll
pop
xlat
adc
shrl
fwait
in
cli
and
aas
lret
jo
mov
cld
test
aaa
adc
repz
icebp
es
iret
mov
push
fstpt
mov
aam
icebp
add
mov
jns
cli
loope
jge
pop
dec
xchg
js
sbb
test
movsb
enter
mov
xchg
popa
push
xchg
sti
sbb
xor
xor
push
push
dec
movsb
rcl
add
mov
and
inc
pop
out
xchg
xchg
jnp
in
add
outsb
pop
push
lods
jb
and
jae
in
ds
divb
inc
cmp
adc
adc
fsincos
mov
pop
fs
mov
jge
push
xor
sub
pop
hlt
movsl
or
mov
push
adcl
xor
jmp
jnp
sub
pop
inc
and
pop
xor
nop
mov
outsl
mov
and
sbb
adc
jp
inc
xchg
dec
mov
js
add
xchg
xor
jmp
fndisi(8087
push
inc
ret
pop
jns
mov
add
inc
push
loopne
push
add
fsubrs
outsb
aaa
mov
dec
cmp
ja
xlat
mov
inc
lret
or
adc
mov
push
xlat
lahf
pop
mov
int3
push
and
jmp
std
add
jbe
and
add
in
xor
ss
nop
push
and
and
cwtl
xor
push
jmp
ljmp
xchg
pushl
fwait
aaa
sbb
test
jbe
dec
inc
imul
inc
inc
ja
xor
divb
jnp
sub
pop
hlt
dec
or
les
xor
cld
lret
push
inc
fidivrs
or
inc
stos
sub
aas
sub
movsl
nop
fcoms
nop
sub
out
loopne
gs
outsl
iret
lret
in
xor
in
sbb
pop
cmp
cmp
sbb
xor
pop
sub
aam
push
mov
out
je
js
aam
cmp
jb
outsl
ret
xchg
stos
cmpsb
cmp
into
mov
jnp
testl
jecxz
mov
and
jb
jnp
ror
and
jb
and
icebp
mov
popa
dec
xor
adc
push
lods
fidivs
jg
mov
push
ret
jecxz
dec
inc
dec
adc
dec
aam
leave
pop
sbb
mov
xor
mov
pop
xchg
jns
cmp
sbb
inc
dec
jmp
out
jne
icebp
jb
xchg
sub
ljmp
jbe
xchg
xor
mov
jmp
xchg
scas
faddl
cmp
mov
push
mov
adc
orps
out
fnsave
insb
sbb
pop
adc
push
dec
roll
jg
lods
xchg
leave
adc
push
outsb
inc
lcall
xor
int
rol
cwtl
aas
dec
jbe
iret
xchg
outsb
fisttpll
iret
xor
mov
pop
inc
repnz
lods
nop
scas
push
cs
and
out
outsl
enter
rcrb
roll
andl
inc
popa
add
cmpsb
addb
inc
or
hlt
out
fistpl
push
mov
xchg
xchg
cli
adcb
jle
or
mov
jbe
pop
push
fmuls
leave
dec
mov
shlb
cli
cs
xor
xor
insb
dec
rol
cmp
push
ja
pop
test
or
fcompl
es
dec
adc
jae
jae
std
sbb
pusha
in
cmp
popa
ja
fistpl
push
pop
jnp
or
mov
jge
jecxz
sub
push
xchg
in
sub
addr16
sub
pop
bound
pop
inc
fwait
cs
mov
jno
out
aaa
push
cmp
test
sbb
jno
cld
sub
push
cld
pusha
xor
jge
out
push
mov
jo
js
popf
mov
sbb
push
pop
jne
cwtl
mov
mov
sti
fwait
xchg
xchg
adc
cmc
call
jo
test
xchg
rcrl
call
push
idivl
ret
and
sbb
inc
sbb
rcrb
repnz
cld
leave
jg
push
and
push
mov
hlt
xchg
adc
push
es
aas
and
inc
cmp
mov
fadds
movsl
or
ss
pop
loop
aaa
adc
pop
insb
ficoms
decb
pop
and
push
jge
arpl
out
inc
test
mov
inc
ror
cmp
int3
pop
in
cmp
add
fwait
clc
dec
roll
loop
pushf
int
cmp
mov
sbb
scas
jno
mov
scas
cld
jno
push
aam
mov
inc
xchg
xlat
cmp
stc
loopne
or
pop
pop
roll
pop
and
push
jg
mov
pop
adc
enter
xor
sbb
out
mov
jl
lahf
dec
out
dec
adc
nop
mov
out
pop
dec
lret
sbb
scas
std
push
leave
jmp
aad
imul
push
mov
dec
push
inc
out
cmp
xchg
sahf
fs
shrl
cmp
mov
push
jg
push
jecxz
cs
cmp
cmpsb
sub
lahf
out
sbb
cmp
scas
and
lcall
jg
push
pop
insb
and
mov
lods
lds
jbe
xchg
insl
or
out
inc
push
mov
adc
sbb
push
jl
push
mov
push
fstpt
mov
sub
mov
inc
add
adc
xlat
push
jge
in
add
test
dec
mov
add
push
aad
mov
dec
and
sbb
mov
xchg
mov
out
fldenv
mov
or
mov
shrb
mov
inc
jle
cmp
dec
addb
mov
or
mov
push
sbb
jecxz
push
stos
stos
test
lret
jns
aas
pushf
push
nop
lock
nop
inc
rorb
vpshlb
jae
cmp
dec
jo
push
frstor
sarl
xchg
push
cwtl
ja
incb
and
and
xchg
in
jg
lock
xor
push
stos
sub
scas
sub
jne
sbb
jb
adc
mov
add
fsubrl
das
xor
xor
sub
jno
clc
mov
cli
in
cmpsb
sub
scas
pop
pusha
mov
stos
sbb
jge
xchg
jg
lahf
lahf
sub
add
adc
adcb
jae
xor
in
inc
dec
push
and
or
aas
jp
cs
outsb
mov
test
out
xchg
xchg
stos
test
rcr
mov
add
aas
dec
xchg
imul
in
push
bound
dec
cmp
xchg
cmpsb
cwtl
cs
and
mov
lret
pop
ljmp
mov
rcrl
dec
hlt
push
inc
ja
mov
jbe
mov
sub
jo
fidivrl
cmc
repnz
fisubrl
rclb
push
adc
daa
push
shll
jmp
pop
pop
inc
and
jge
jle
inc
cmp
test
in
jmp
push
sub
dec
inc
insl
xchg
out
jl
out
jmp
xor
fnsave
push
rcrb
sub
dec
ja
cmp
sub
xor
sarl
push
insl
stc
dec
cmpb
outsl
mov
out
scas
or
xor
add
shl
and
lods
fs
xchg
mov
pop
stos
push
nop
lds
push
jae
and
add
fwait
test
pop
cmp
aam
adc
jnp
or
cmp
xor
jl
cmp
pushf
insb
or
sbb
mov
pushl
mov
pop
dec
adc
pop
repnz
dec
addr16
inc
orl
lock
xchg
jbe
jecxz
in
push
hlt
es
pop
and
repnz
jge
test
cmp
push
in
pop
jmp
push
mov
push
pop
dec
loope
popf
repnz
pop
mov
rol
pusha
mov
movsl
lods
push
cmp
aaa
pop
mov
mov
xchg
jmp
dec
and
xchg
sahf
adc
sub
or
xor
callw
popa
dec
hlt
fcmovu
aad
inc
lock
repnz
xchg
jmp
scas
gs
lods
cmp
fcom
dec
mov
outsb
clc
pop
and
cmp
int
ljmp
xor
repnz
bound
stc
add
jno
out
loopne
fisubrl
and
push
or
rcl
inc
xor
wrmsr
andb
sbb
jge
lret
or
or
cltd
scas
fistpll
pop
gs
mov
pop
mov
adc
movsb
ret
sub
mov
loopne
enter
in
in
cltd
mov
inc
pop
and
and
call
push
nop
cld
mov
out
mov
outsb
xor
les
enter
mov
pop
das
mov
sub
loop
dec
sbb
inc
outsb
rcrl
xchg
xchg
out
push
movb
dec
mov
or
lods
push
adc
mov
jmp
testb
sti
adc
mov
sbb
inc
jp
adc
adc
inc
mov
jne
stos
or
mov
popf
std
dec
jmp
dec
in
lea
dec
dec
daa
cld
aam
shl
sub
xlat
lock
loope
inc
pop
mov
mov
pushf
das
and
stc
ret
cmp
fildl
mov
mov
push
lcall
in
xor
mov
adc
inc
dec
shll
shl
mov
mov
push
pop
pusha
fldenv
fimuls
mov
fisttpl
inc
jecxz
lock
hlt
jge
je
dec
subl
dec
dec
sub
xor
fsubl
push
jae
fisubs
imul
subb
daa
and
in
mov
out
ljmp
mov
add
jns
aam
inc
push
push
divb
jge
aad
lea
dec
and
mov
or
xor
lods
mov
xor
xor
popa
push
dec
adc
adc
in
cmc
adc
dec
sbb
arpl
cwtl
fstpl
mov
pop
std
ss
ja
bound
cmpsb
mov
jge
adc
and
jns
pop
daa
fldcw
test
sbb
xchg
shlb
leave
lods
enter
imul
lods
in
sub
mov
ljmp
int
not
push
push
popf
and
sbb
ds
sbb
xchg
orb
mov
sub
sub
bound
enter
incb
mov
xchg
lret
jb
cmp
test
push
add
out
jo
repz
cmpsb
aad
scas
aaa
pop
iret
or
fwait
adc
or
push
sbb
bnd
sbb
dec
scas
sbb
push
rcll
test
mov
dec
popa
aam
ret
ljmp
pop
cwtl
andb
mov
and
scas
jnp
in
mov
jno
push
outsl
inc
add
leave
xchg
add
outsb
mov
sbb
mov
imul
subb
pop
push
mov
fcomp
das
orb
repnz
dec
or
add
mov
btc
bound
add
jecxz
or
div
mov
inc
into
decl
sahf
xchg
stc
pop
pop
dec
hlt
mov
ret
pop
and
addr16
cmpsb
lret
xchg
jecxz
mov
test
mov
sub
lods
jbe
nop
aaa
std
pop
fiaddl
jle
jmp
pop
mov
push
cs
mov
lock
jmp
xor
xchg
scas
xchg
cmp
sbb
mov
adcl
jns
jae
rorl
hlt
aaa
push
lock
jns
scas
jno
vmovss
adc
mov
push
xchg
int
hlt
cmpsl
std
aaa
into
xor
mov
mov
xchg
enter
sbb
cmp
mov
jg
dec
fiaddl
das
adc
jmp
xchg
aaa
dec
lods
jbe
shlb
pop
adc
out
movsb
cmp
pop
or
xor
or
inc
mov
ljmp
leave
cmp
cld
inc
push
lret
sub
mov
clc
xchg
imul
push
cwtl
jg
and
fs
or
stos
and
test
hlt
stc
rcrl
add
stos
mov
mov
push
add
mov
arpl
scas
mov
sub
or
cmp
sbb
fisubrl
sbb
adcl
push
je
inc
push
ljmp
push
xchg
test
shll
push
repz
inc
xor
lock
add
js
inc
scas
sub
cld
in
or
adc
aas
divl
pop
dec
movsl
sbb
adc
mov
rep
ja
nop
sub
xchg
push
test
andl
mov
std
and
sub
xor
lods
fisubrs
xlat
sub
push
sub
pop
cmp
sub
mov
ja
xchg
arpl
sub
xchg
xchg
sbb
insl
push
js
sbb
call
popa
mov
insb
mov
in
mov
or
stos
jbe
rorb
stc
sub
xor
cli
mov
fmul
aam
jg
iret
rolb
sub
mov
xchg
shrl
rolb
mov
call
add
cli
enter
jl
mov
and
or
fidivl
movsl
ret
xor
add
jnp
movsb
int
xchg
rcll
arpl
pop
cltd
mov
mov
jb
or
mov
in
jbe
pusha
mov
ret
inc
add
notl
out
clc
icebp
xor
sub
push
push
fwait
stos
add
pusha
dec
inc
push
cmp
jns
sub
clts
inc
push
adc
sub
mov
mov
into
daa
xor
fdivrl
popf
fildl
pop
or
adc
aas
rclb
lods
dec
insb
push
in
xor
jle
mov
js
add
pop
sub
out
mov
int
xchg
repz
daa
stc
push
and
push
in
rolb
pop
sahf
ret
in
inc
jge
push
dec
in
pop
lret
fidivrl
aam
addr16
bnd
add
pop
repz
das
test
inc
xchg
or
sbb
comiss
or
adc
pop
jo
sub
sbb
popf
mov
lds
ds
fcoms
adc
fisttps
sti
out
add
push
pushl
jp
push
scas
cli
aam
inc
and
mov
popf
pop
xor
lods
sub
add
xlat
sahf
scas
incl
add
push
inc
pop
or
dec
imul
mov
sub
dec
pop
icebp
or
mov
sbb
add
xchg
and
lret
sub
arpl
inc
loop
testb
lret
pop
cmp
cmc
stc
inc
popa
std
out
aam
jmp
mov
add
mov
fs
fcoml
loop
adc
dec
xchg
test
dec
adc
das
and
mov
and
fldpi
jns
iret
imul
jbe
cwtl
jb
sarl
and
mov
stos
mov
push
lret
push
mov
or
jl
pop
sti
vmread
mov
leave
mov
inc
addl
loop
fadd
sub
daa
in
movsb
jns
mov
push
cmp
mov
in
dec
add
pop
push
roll
pop
mov
add
xchg
lock
push
pop
pop
add
arpl
dec
lcall
pop
repz
mov
sbb
into
fnop
arpl
repz
aas
mov
pop
lea
jg
cmp
sbb
lret
sbbl
out
push
lcall
out
in
inc
push
cmp
or
pop
mov
jns
inc
push
inc
and
mov
negb
cmp
jb
push
mov
mov
xor
imull
out
in
mov
and
push
iret
test
push
mov
cmp
push
fwait
mov
repz
pop
jb
lods
mov
pop
mov
xchg
cli
sbb
cmp
cmp
mov
daa
idivl
xor
cmpsb
sbb
das
push
ljmp
test
rclb
and
ror
fcmovbe
je
movsb
ss
subl
dec
pop
fidivl
mov
ret
test
jmp
ror
xchg
int
pop
push
inc
dec
xchg
jecxz
jmp
cwtl
mov
out
in
or
out
fisttpl
fnstsw
pushf
and
cs
cmp
mov
jecxz
pop
sbb
jb
out
insb
jle
mov
lods
push
aas
inc
mov
jg
ret
ficompl
jge
mov
fcomi
insl
xor
ret
cs
xchg
lea
adc
rcll
lret
fldenv
push
into
and
and
test
cmpsl
int
ja
lcall
fwait
clc
call
mov
sar
jge
and
fcompl
pop
sub
jns
roll
push
xchg
stos
xchg
mulb
lea
mov
test
push
xor
ret
or
push
hlt
cmp
xlat
lret
pop
dec
dec
rcll
icebp
scas
inc
mov
fldenv
in
push
xor
test
notl
shll
add
xchg
jp
or
fdivs
mov
mov
lcall
pop
mov
push
mov
pusha
cmpsb
mov
xchg
es
imul
sbb
insl
mov
sti
out
cmc
and
aam
dec
stc
cmp
popa
pusha
fs
mov
out
and
fs
xor
push
insl
sub
sbb
jp
std
fnstsw
cmp
pop
icebp
lahf
ret
je
jmp
and
dec
dec
mov
mov
addr16
adc
add
mov
jecxz
mov
fildll
push
sub
jle
lods
xor
jecxz
xlat
sub
xor
add
mov
xor
jno
sahf
xchg
sub
inc
loopne
jno
jg
dec
dec
daa
jo
jmp
mov
jno
xlat
cli
push
int
push
push
out
dec
mov
push
xor
bound
add
add
push
decb
es
cmp
jmp
test
jns
pop
imul
lods
adc
lods
call
iret
fidivrs
adc
jnp
test
scas
add
xchg
popf
aam
cmp
pop
stc
inc
ficoms
jp
cs
adc
out
ret
or
lods
inc
mov
mov
mov
cld
or
lock
xchg
enter
sub
xor
pop
mov
jp
dec
sbb
inc
dec
xlat
mov
jg
ljmp
xchg
les
popa
push
mov
xor
pop
inc
push
stos
or
xor
shlb
in
jo
and
bts
mov
lods
pop
pop
scas
push
and
pop
mov
mov
mov
mov
addr16
sub
test
push
js
fisttpll
adcb
sbb
mov
ljmp
rclb
rol
aam
mov
into
jo
sub
inc
movsb
dec
ss
xlat
leave
cld
jl
jbe
xchg
mov
xchg
jle
jns
cwtl
movlps
jbe
adc
in
daa
mov
dec
mov
or
inc
js
arpl
ror
and
mov
rcrb
and
ror
fisubl
ja
out
cltd
addb
inc
sub
jo
and
cmp
dec
sahf
lea
push
pop
and
scas
mov
addb
or
xor
out
fcomps
shl
out
cmpl
stos
or
shl
rcll
aas
sbb
jl
movsb
ret
fists
mov
or
cwtl
out
sbb
or
mov
sti
fwait
add
mov
add
or
loope
jmp
rcll
imul
add
adc
pop
xchg
movsl
shlb
insl
fisubl
push
sbb
mov
inc
dec
push
addb
dec
nop
cmpsl
dec
int3
jmp
and
adc
nop
xchg
jp
fstl
add
cli
mov
xor
mov
pop
push
fcomp
fstpt
jne
xchg
clc
mov
clc
or
xchg
pop
xlat
repnz
jbe
stos
rorb
call
not
xchg
insb
pop
adc
loop
pop
mov
dec
pop
mov
jno
sub
ret
mov
in
and
mov
fnstsw
mov
mov
ljmp
mov
sarl
pop
pusha
lahf
mov
sbb
xchg
jns
xchg
lahf
cmc
sub
jle
imul
push
lret
dec
mov
lods
rorl
xchg
mov
idivb
pop
dec
cwtl
jb
shl
out
pop
xchg
cltd
sub
cltd
pop
rorl
mov
push
lods
arpl
pop
adc
jle
out
ljmp
loopne
push
adc
icebp
jge
xor
add
repz
data16
dec
dec
adc
popa
aam
lea
xlat
sbb
pop
inc
adc
scas
and
or
insl
cmp
push
mov
loop
sahf
dec
loopne
iret
cmp
stos
sub
cmp
push
cld
push
mov
mov
jge
jno
inc
cmpb
mov
cmp
cmp
int
mov
jo
mul
fninit
push
push
in
mov
xchg
inc
enter
es
enter
pop
inc
insb
sub
sub
fidivrl
ret
xor
sub
dec
add
and
mov
add
or
and
ss
pop
xor
jg
push
push
lret
mov
test
outsl
xchg
sti
jge
mov
jnp
std
push
inc
loopne
call
addl
imul
mov
add
pop
andb
pop
dec
add
adc
fs
stos
inc
dec
inc
movsb
mov
adc
insb
insl
push
adc
sahf
pop
xchg
pop
dec
leave
out
fucom
xor
lods
ja
mov
xchg
mov
fisubl
add
dec
movsb
ror
imul
je
scas
lods
movsb
mov
add
mov
div
arpl
ds
mov
cmp
scas
sub
dec
shrb
stos
and
sbb
and
jge
dec
sahf
inc
daa
leave
lock
sti
faddp
pushl
loope
dec
mov
mul
mov
adc
loop
sub
mov
mov
outsb
adc
dec
hlt
xchg
cmpsb
jmp
mov
pop
cmp
push
xchg
in
andb
dec
jmp
add
aam
testb
leave
pop
dec
mov
jmp
fmulp
enter
insb
out
mov
daa
pop
dec
add
push
clc
ror
cltd
inc
mov
mov
xlat
sub
sbb
jg
outsb
jno
lods
push
loope
sbb
cmp
clc
ss
cmp
cmp
cwtl
xchg
cmp
cmpl
imul
data16
mov
dec
mov
pop
mov
insb
loop
je
popa
popf
scas
pop
aaa
add
add
and
add
int3
lret
ret
jo
jecxz
cmpsb
mov
mov
or
loope
loop
lods
xchg
scas
inc
dec
jo
out
mov
cs
addr16
sbb
stc
daa
add
fidivrs
pushf
ja
push
push
and
decl
push
es
ja
and
test
add
rorb
cli
in
cmp
jno
adc
mov
notb
gs
orb
stos
adcb
addr16
stc
jns,pt
pop
icebp
or
lods
ret
or
fildl
push
jp
add
test
rcrb
cmp
fwait
cs
mov
aas
sarl
lock
rcll
aaa
and
or
int3
and
push
fsubrl
mov
int3
xor
xchg
sub
and
mov
cmp
out
cwtl
loopne
dec
push
xchg
inc
cmp
int3
adc
mov
fld
test
adc
rcr
fcmovu
das
loope
xor
insb
and
jo
add
ds
sub
sub
mov
mov
jb
pop
shll
push
aam
outsb
lock
add
fldl
xor
js
lock
aad
inc
mov
xor
pushf
inc
es
fisttpl
or
pop
lods
fwait
and
mov
push
fisttps
sub
jne
xor
cs
stos
f2xm1
jecxz
ret
arpl
fisttpl
loop
jbe
fwait
sub
popf
lock
fsubrl
out
mov
jae
xor
mov
bound
push
dec
out
cmpsb
negl
hlt
adc
test
lcall
outsl
adc
test
stos
mov
leave
cltd
leave
pop
push
data16
ds
mov
popa
cld
pop
clc
aam
adc
mov
arpl
loopne
pusha
jae
push
dec
xchg
inc
dec
insb
mov
mov
xlat
notl
or
out
jno
clc
test
mov
pop
test
cmp
add
inc
testb
push
fnstcw
mov
sbb
aas
cli
imul
in
iret
jb
push
mov
test
ds
dec
fists
cli
std
iret
daa
inc
jb
clc
or
xor
aas
in
and
orl
lods
pop
cmp
and
in
pop
test
jns
fwait
pop
pop
xor
dec
aas
cmp
insl
adc
out
sub
into
push
loop
int3
popa
rclb
outsb
outsl
jnp
jae
bound
xchg
adc
insl
stos
inc
imul
mov
icebp
js
aas
pop
or
mov
lods
dec
jo
jns
inc
or
sub
fisubs
xor
and
fsubs
icebp
xchg
mov
fs
scas
push
lods
or
stos
lret
mov
xchg
pop
mov
mov
cmp
mov
fsubr
sub
cwtl
sbb
sub
cmp
rcrl
loop
xor
mov
imul
xchg
arpl
xchg
enter
jno
cmp
movsl
cs
cltd
xchg
or
adc
pop
pop
push
and
pop
stc
lods
sub
loop
jl
push
sbb
bound
ljmp
or
push
ss
mov
or
out
jmp
into
int3
push
and
das
cld
pusha
push
movsl
xor
loop
xchg
pop
repnz
add
mov
mov
push
pop
out
std
or
aam
and
jl
mov
ja
test
add
sub
lret
das
push
clc
or
aad
jmp
insb
mov
loopne
mov
nop
sub
lahf
or
sub
mov
sahf
mov
in
jmp
dec
fisubs
mov
xchg
lods
push
test
scas
add
sub
xor
or
ret
sub
pusha
sti
jnp
enter
popa
cmc
inc
pop
js
ss
pop
pop
mov
loopne
divl
inc
xchg
std
scas
adc
jmp
icebp
or
out
add
pop
pop
push
cmpsl
pop
lea
push
hlt
and
mov
sbb
fs
aas
add
add
adc
push
push
insb
lcall
push
stos
mov
mov
sbb
jbe
js
cli
pop
je
call
xor
pop
push
mov
jo
pop
xchg
xchg
lea
andl
mov
std
in
rcrb
push
aas
jb
sbbl
repz
outsl
inc
out
mov
leave
inc
push
inc
movsb
js
mov
cmp
out
pop
in
cmp
or
jb
mov
pop
cwtl
add
xor
adc
pop
pop
nop
adc
dec
xor
popa
popa
shlb
adc
lods
xchg
jbe
mov
xor
jnp
lret
mov
or
push
add
je
jl
pop
xor
outsl
pop
bound
lahf
pop
push
aas
cld
pop
mov
stos
sub
sub
std
mov
or
mov
adc
sub
fadd
sbb
and
shl
xchg
loope
inc
inc
mov
add
adc
push
cmpsb
pop
vmovdqa
jmp
lret
push
ss
adc
mov
mov
xchg
mov
xor
mov
or
cmpsb
or
shll
loope
rcrb
add
aas
or
xor
push
pop
or
jl
ljmp
icebp
scas
sti
shr
and
adc
cmp
push
ds
ljmp
xchg
fsubrs
std
dec
mov
popa
ret
lret
push
pop
push
xchg
movsb
push
cmp
xchg
mov
in
popf
cld
push
in
hlt
jae
jg
xor
inc
aad
filds
xchg
ret
pushf
adc
pushf
xchg
lcall
gs
aam
pop
sar
inc
into
test
addr16
and
es
inc
add
inc
xor
popl
cmp
add
ljmp
ficoml
mov
fsubrs
icebp
dec
fdivrl
sub
pop
add
rcrl
mov
imul
pushf
jecxz
dec
shll
movsb
add
enter
shr
xor
ljmp
cmp
test
out
cmp
dec
pop
in
push
cld
es
or
add
adc
dec
jp
movsl
lea
add
inc
aas
addr16
icebp
loop
lods
inc
xchg
mov
and
xor
jno
les
sbb
pop
or
not
cwtl
rcrl
jl
xchg
jl
mov
imul
ficoml
test
inc
sbb
sub
xchg
test
cmpsl
xlat
ret
push
rcr
aaa
das
call
test
aaa
push
repz
xchg
sub
xlat
pusha
les
iret
pop
leave
push
aas
pop
aas
andl
popf
cmpsb
xchg
daa
xchg
jmp
rclb
cmp
adc
pop
div
rorl
sahf
or
shll
inc
pop
ss
push
jmp
and
xor
jecxz
and
inc
int
out
stc
jle
push
push
ja
repz
mov
mov
mov
loop
sbb
lret
inc
jge
js
lahf
mov
jp
clc
sub
je
lret
jne
sahf
and
gs
xorb
jmp
mov
pop
inc
lret
lret
pop
inc
push
xchg
test
xchg
dec
dec
mov
adc
dec
flds
adc
std
ss
bound
xor
inc
outsb
push
xchg
outsb
cmp
pop
inc
loopne
sub
pop
xchg
push
div
cmp
fs
mov
mov
enter
rcrl
loopne
mov
cmp
add
or
lods
pop
dec
pusha
decl
add
iret
cmpsb
imul
jl
inc
adc
mov
out
daa
add
jo
mov
mov
xor
insb
inc
dec
je
dec
stc
subl
or
and
test
loop
scas
push
pusha
xchg
cmp
into
cmp
pop
mov
das
je
sbb
rorb
and
pusha
xchg
push
push
dec
pop
iret
out
daa
xchg
cld
arpl
lods
push
sub
aas
mov
loope
stc
cmp
scas
cli
rol
cmp
imul
movb
xor
mov
jns
push
pop
js
push
sub
jne
jp
sub
inc
lahf
ret
jns
insb
sub
mov
push
aaa
cmp
xor
xchg
nop
hlt
inc
pop
xchg
cld
sub
and
loopne
push
add
lods
xor
add
jnp
cmp
cs
sbb
shll
cli
lods
fistps
and
jo
test
sub
aam
arpl
and
mov
or
enter
sbb
mov
xchg
clc
or
ret
sbb
sub
push
test
fstpl
das
ret
pop
push
pop
push
mov
in
ret
loop
punpckhdq
ljmp
daa
repz
mov
stos
xor
scas
stos
ret
mov
jecxz
or
imul
push
jae
or
jl
dec
jno
and
imul
fisttpll
ret
pop
mov
or
xlat
dec
and
int
out
push
aad
sbb
fbld
enter
sub
cli
iret
xchg
popf
ja
lcall
fidivrl
jbe
or
hlt
iret
fidivrl
push
popf
jae
movsl
movsl
aad
fwait
mov
int
roll
xchg
popa
movsl
push
insl
sub
std
mov
xchg
push
stc
and
mov
mov
in
outsl
movsb
out
xlat
jle
in
push
out
dec
ret
mov
int3
pop
test
mov
ljmp
int3
aam
and
lret
sti
mov
imul
push
imull
jnp
inc
xor
in
dec
mov
fldcw
cwtl
sub
mov
shr
fidivrl
pop
sub
pop
les
je
ja
ret
dec
jp
mov
push
inc
xlat
int3
in
out
imul
xchg
mov
repnz
or
push
xor
push
mov
rolb
mov
pop
mov
rcll
rcr
adc
mov
enter
xor
mov
cmovbe
fs
aam
out
lcall
lock
cmp
xchg
xor
test
negb
inc
inc
mov
dec
xor
mov
sub
push
movsb
loope
jae
or
adc
repz
cmp
jb
cmp
jl
fcmove
push
imul
pop
mov
leave
data16
rol
out
and
sahf
jno
les
ret
cwtl
in
pop
jne
hlt
sbb
add
mov
xchg
xchg
js
lahf
test
mov
xchg
mov
push
mov
adc
cmpb
inc
jno
jb
and
adc
in
jne
mov
mov
mov
mov
lret
dec
mov
sub
sub
cmc
sbb
cltd
loopne
test
icebp
adc
das
nop
jo
xchg
or
and
push
xor
mov
mov
ret
pop
andb
mov
mov
jno
xor
stc
sbb
ss
add
jmp
clc
pushf
dec
jns
mov
stc
or
ss
jne
dec
push
push
insb
leave
mov
sub
jmp
add
dec
sarl
enter
jne
inc
das
jae
sub
sbb
pop
mov
sbb
sbb
loop
and
cli
jmp
cmpsl
sarl
jb
popl
es
inc
fsubrs
push
out
adc
fisttps
loop
das
sub
mov
sub
mov
cld
add
jmp
jle
xchg
ficoml
pop
jecxz
ss
xlat
jo
xorl
and
aas
inc
cmp
adc
jbe
cmp
out
out
lods
out
loopne
push
lock
pop
pop
sub
idivl
in
mov
dec
adc
dec
stos
in
scas
repnz
outsl
inc
ret
or
fsubl
push
lcall
int3
ss
std
out
in
jns
xor
push
test
xchg
ja
das
push
adc
xor
in
dec
push
xchg
movsb
neg
shll
imul
lea
jno
stos
mov
and
add
cs
and
sub
popf
jp
cmp
mov
cmp
or
shll
enter
ja
outsl
cltd
call
mov
cmp
pop
in
add
mov
imul
or
mov
jmpw
fadd
jbe
jb
xchg
dec
aaa
xor
popf
test
fnstenv
adc
jmp
adc
hlt
dec
sbb
ja
hlt
daa
in
push
mov
in
push
in
push
pop
es
jb
in
lods
arpl
sarl
xchg
ret
jb
mov
mov
rorl
scas
aad
das
push
lahf
mov
jbe
sbb
mov
and
insl
mov
fbld
shl
popf
mov
cmp
lock
mov
cld
int
sbb
adc
js
pop
leave
jns
lods
pop
jbe
cs
arpl
lret
out
lods
mov
pop
mov
fdivr
push
sub
fsubrs
mov
push
test
lock
pop
inc
mov
std
adc
test
pop
fldt
fincstp
inc
enter
fsubr
sbb
adc
xchg
mov
and
sub
cmpsl
add
sub
mov
mov
fists
lret
cli
rclb
and
ret
cmpl
xor
jecxz
clc
mov
push
arpl
fisttpl
dec
iret
push
xor
sahf
pushf
lds
pop
mov
jo
jp
cmpsb
in
xchg
sbb
rclb
dec
rcr
inc
cltd
xchg
sub
cmp
sub
psubusb
loop
add
das
fisubrs
mov
dec
stc
mov
repz
loop
jmp
dec
test
mov
push
sub
hlt
bound
loopne
push
jmp
xor
adc
ret
dec
mov
jo
adc
sub
stos
pop
cmp
in
ret
sahf
insl
fsubrs
daa
inc
addr16
and
mov
mov
iret
out
lret
out
pop
insl
mov
mov
popf
mov
xor
add
xchg
mov
mov
pop
mov
rorl
pop
in
mov
adc
mov
imull
add
jne
xor
sub
clc
fadds
test
push
je
inc
std
cmp
clc
cmpsb
mov
int
lahf
clc
push
popf
add
inc
mov
pop
push
cmp
mov
pushf
fsts
inc
scas
insb
sbb
popa
ljmp
xchg
jmp
inc
xor
cmp
push
inc
jle
mov
mov
push
sbb
pop
lods
mov
ficomps
out
mov
in
pop
aam
shlb
mov
lods
mov
inc
mov
jns
inc
orl
mov
pop
push
je
add
in
sti
push
xorl
xchg
dec
je
test
push
outsb
and
adc
cmc
test
and
push
mov
js
jl
addr16
jnp
xchg
inc
mov
push
push
sub
mov
push
mov
pushf
add
cltd
dec
pop
or
ror
in
mov
sti
inc
andl
adc
jno
aam
loop
shlb
lret
sbb
fldl
out
loop
lds
in
pusha
imulb
in
xor
movsb
movsb
and
insb
adc
stos
int3
int
cs
fnstenv
bound
dec
inc
mov
in
xorb
daa
pusha
pop
push
cld
or
sub
cmpb
add
cmp
insb
sbb
int3
push
adc
cmp
mov
sub
subl
subb
adc
aaa
aad
push
dec
or
cmp
jmp
cltd
dec
fs
cmpsb
inc
jge
dec
ss
scas
test
lret
push
shrb
sbb
or
fsubl
cld
icebp
nop
cmp
rclb
insb
shrb
in
repnz
insb
mov
loopne
imul
push
loope
add
loop
push
xor
lods
cltd
push
push
mov
pushf
iret
push
loopne
pop
cmc
dec
fadd
push
xchg
rcll
shll
lea
dec
dec
jge
mov
fwait
xchg
cli
out
push
pop
mov
mov
iret
jne
sub
inc
sub
cmc
movsb
adc
xchg
daa
push
les
stos
xor
mov
imul
lods
outsb
add
jl
add
out
les
mov
add
and
cmp
test
ficompl
jne
cmpsl
push
std
push
int3
adc
jnp
inc
in
push
test
ss
lret
cli
adc
jns
rcl
icebp
lretw
lahf
into
adc
or
imul
outsl
push
test
jns
cmp
push
and
xchg
fstpt
xor
repnz
aas
inc
out
repz
out
pusha
movsb
inc
movsb
std
shll
and
repnz
lcall
dec
xchg
mov
adc
and
popf
fnsave
jno
push
cmpsb
int3
and
xor
pop
push
pop
jg
arpl
cmp
sbb
mov
mov
pop
imul
movb
das
int3
loop
push
lcall
cltd
add
loopne
std
fst
jge
fsubr
adc
test
or
push
out
stc
lods
dec
sti
test
iret
js
sub
ret
mov
lock
sub
enter
sbb
sub
arpl
arpl
jl
test
sub
dec
cltd
sahf
int3
cs
push
or
xchg
adc
and
and
add
aam
adc
pop
mov
xchg
xor
gs
mov
pushf
shlb
mov
movsl
xor
lods
das
mov
mov
scas
in
mov
cmp
jbe
dec
mov
jmp
cmpsb
mov
add
lea
call
not
lock
dec
mov
mov
imul
lods
frstpm(287
or
jb
test
pop
out
aad
add
cmp
push
cmp
loope
test
imul
push
or
mov
stc
mov
inc
popa
jnp
adc
jnp
outsl
test
adc
loopne
and
bound
dec
aaa
sti
mov
fcomp
sti
das
les
push
or
aad
mov
jg
mov
out
pop
mov
and
mov
mov
or
repnz
sbb
add
xlat
jne
mov
or
pop
xchg
inc
lret
jo
jle
xchg
mov
or
cmp
leave
push
lcall
pop
sahf
loop
lret
rcll
xlat
out
cld
sub
push
test
jp
inc
xchg
mov
jnp
cmp
push
cmp
sbb
sti
pop
enter
lret
leave
pop
or
pop
stos
add
add
daa
lds
insb
imul
loope
movsl
fbld
popf
mov
pop
push
dec
add
test
mov
int3
or
add
les
or
and
insl
dec
mov
testl
cmp
push
mov
add
lahf
cmc
stos
push
sbb
adc
clc
xchg
lods
mov
nop
jle
out
push
cmp
adc
inc
lret
iret
cmp
mov
or
lds
int
jge
pop
in
scas
in
xchg
jmp
cltd
mov
pop
xor
mov
lahf
sbb
xor
aas
orl
insb
xchg
andl
aad
jns
jae
jge
mov
fsubl
xor
insl
or
cli
shll
xchg
ja
jmp
aas
outsl
imul
mov
inc
subb
dec
in
cs
mov
and
ret
xchg
mov
shll
xlat
sub
jne
pusha
xor
mov
ret
dec
inc
mov
mov
sub
mov
xor
fdivrs
int
jo
test
leave
sub
fdivrs
pop
mov
adc
mov
test
call
loop
pop
jbe
mov
or
cmp
repz
jb
call
pusha
xor
jno
test
jmp
test
bound
sbb
loopne
aas
mov
mov
jns
imul
daa
insb
xchg
popf
sub
sub
test
lcall
das
rorl
stos
or
and
ds
icebp
jp
mov
mov
or
xchg
dec
cmp
shr
mov
ror
or
sbb
jg
cltd
stc
mov
je
mov
aas
fwait
and
cmpsb
add
jb
jle
faddl
adcl
pop
or
adc
xchg
repz
xchg
cmp
jnp
repz
jmp
es
sbb
aas
orb
jecxz
adc
cld
addb
sbb
jmp
mov
mov
jmp
leave
popf
mov
loop
cmp
movsb
add
lea
arpl
dec
loope
mov
outsb
test
popa
and
mov
stos
rcrl
xchg
das
mov
icebp
movsl
or
pop
cmp
and
xchg
sub
mov
ss
mov
add
push
jl
xchg
and
jg
int
inc
in
sub
push
pop
mov
cmpb
or
xchg
push
mov
jl
sbb
adc
mov
pushf
mov
rorb
aas
insb
sbb
push
xchg
shlb
sahf
outsl
push
pop
jp
int3
pop
rorb
xchg
push
pop
adc
mov
cmpsb
gs
adc
adc
inc
cmp
cmp
ret
cli
stc
test
sbb
into
add
dec
pusha
leave
sub
mov
ljmp
xchg
ficoml
jo
jmp
jo
adc
or
rcrl
mov
jbe
icebp
dec
push
sub
mov
std
jne
imul
test
cwtl
or
insb
xchg
shlb
lods
mov
sti
sbb
hlt
lock
mov
add
mov
cltd
cmpb
js
xor
mov
mov
adc
aad
jg
xchg
daa
cmpb
mov
inc
sbb
mov
jnp
adc
or
sbbb
dec
movl
scas
sarb
pushf
adcb
ds
push
into
add
es
lret
sar
in
push
dec
scas
pop
mov
xchg
mov
movsl
or
aam
rcll
jmp
push
jg
xchg
inc
stc
dec
stos
sahf
push
negb
or
loop
cmc
lret
jl
fwait
mov
inc
adc
xchg
jae
iret
sub
out
and
cmpsl
pop
out
mov
aad
jmp
add
mov
xchg
hlt
mov
mov
or
ret
cli
loop
testl
es
sub
lret
dec
xor
sarb
pushf
imul
rclb
imul
add
inc
pushf
mov
mov
pusha
pusha
xor
cmp
pushf
insb
arpl
insb
cltd
sti
pop
cwtl
jge
pop
out
inc
pop
in
loopne
pop
fsubrl
sbb
cs
inc
push
or
std
dec
xchg
pop
dec
jo
mov
add
sub
shrb
sti
mov
mov
and
pop
cwtl
sub
fnsave
into
add
and
jge
and
lret
fmuls
mov
mov
inc
in
pop
mov
stc
ds
mov
bound
mov
or
push
pop
mov
stos
cmp
rorb
push
jmp
and
mov
jo
int3
push
movsl
pop
fidivl
mov
fnsave
jp
sbb
cmpsl
jnp
pop
xchg
dec
shl
pop
aad
ffreep
mov
inc
cwtl
cli
mov
aad
dec
pop
shlb
push
pop
cld
pop
call
loope
sarb
mov
lds
xchg
int3
stos
es
std
cmpsl
push
out
loopne
mov
rcll
and
test
insl
out
aad
in
and
inc
push
xchg
lods
js
ljmp
xchg
xor
call
adcl
ja
shll
jbe
mov
push
cmp
xchg
push
adc
ss
jnp
scas
mov
shll
gs
enter
mov
add
outsb
int3
fimull
xor
ret
pop
test
mov
movsl
add
sti
daa
cli
add
dec
out
cltd
xchg
add
cmp
insl
test
xchg
js
adc
arpl
scas
fnsave
mov
cmp
mov
sub
push
fistpl
fisttps
es
call
dec
testb
add
movsb
out
addr16
mov
pop
mov
cmp
repnz
leave
ret
lea
iret
pop
dec
cmpsl
xchg
clc
pop
cmp
aad
sbb
fsubs
xchg
inc
out
jo
ret
outsl
fwait
scas
in
stos
mov
lret
cmp
mov
xor
daa
int
mov
fucomi
jbe
jmp
cmp
add
cmp
xchg
lods
push
or
outsb
int
jb
sbb
and
inc
in
decb
cltd
and
out
add
and
push
test
sbb
mov
rclb
fcoms
mov
push
inc
mov
and
cli
jne
mov
and
push
je
push
lods
mov
add
cmp
sub
pop
mov
push
test
into
icebp
mov
daa
cmp
inc
mov
ss
jge
dec
sub
js
shll
ss
lahf
into
mov
and
pop
test
and
aaa
push
xlat
add
sti
add
movsb
pop
xchg
pusha
push
xchg
xlat
sti
push
inc
lods
sarb
and
and
in
ret
inc
movb
jbe
dec
xor
adc
mov
adc
and
sbb
cmc
repnz
pop
pop
aam
and
and
clc
cmc
adc
out
shrl
pop
aam
in
inc
adc
dec
and
ljmp
rcrl
adc
push
fwait
int3
fs
xor
push
dec
fwait
into
pop
in
mov
xbegin
push
xchg
clc
adc
cmp
pop
loopne
test
insb
jb
pop
int3
in
mov
rorb
inc
and
dec
ficompl
sahf
adc
push
lods
es
jno
cli
jbe
add
aam
mov
pop
xchg
subl
ret
or
aad
xchg
mov
add
xor
cmp
push
adc
jp
sbb
aam
push
and
jmp
jmp
and
fcoms
add
out
mov
subl
roll
pop
xchg
test
mov
xchg
clc
pop
jno
lea
xor
pop
sub
adc
lds
inc
fidivrl
inc
inc
lahf
fidivs
add
adc
cwtl
int3
xorl
xchg
aaa
dec
lahf
mov
sbb
shlb
xchg
sarl
dec
std
xor
out
sbb
adc
and
pop
ret
mov
lods
orb
push
nop
outsl
or
push
and
clc
cli
mov
jmp
orb
sbb
push
cmp
pop
fwait
or
test
sub
movsl
push
lods
lcall
out
js
sub
fwait
pop
in
lcall
into
and
add
mov
inc
jmp
push
add
lahf
aas
sub
xchg
rcrl
mov
push
xor
repz
adc
cltd
imul
sub
cvtps2pd
inc
xchg
and
js
xchg
mov
xor
jno
push
mov
outsl
pop
adc
push
xchg
sub
es
mov
inc
insl
adc
negb
push
mov
inc
cli
shrl
push
dec
xor
jle
lret
nop
out
cmp
mov
adc
lods
fmull
mov
iret
and
sahf
fiadds
dec
gs
stos
inc
mov
xchg
filds
xchg
mov
loope
outsb
jnp
mov
out
out
mov
cmc
mov
add
fs
sub
sbb
insl
or
sub
jle
dec
addr16
loope
test
mov
jb
sbb
inc
cmc
sarb
mov
int
push
cwtl
sub
push
mov
addb
movsb
in
cmpsb
out
dec
loop
imul
cmp
jle
das
lock
shr
lea
mov
aaa
sub
enter
lods
ds
ret
lock
dec
cmp
mov
cmp
mov
outsl
in
int3
sahf
and
adc
add
stos
mov
jno
sbb
jb
push
jo
popf
or
xor
inc
iret
mov
sbb
sbb
fwait
nop
mov
jnp
aam
mov
sub
repnz
insl
mov
jle
int3
loop
fimuls
mov
mov
sbb
push
cmp
xchg
std
das
dec
mov
mov
sarl
xor
xor
aas
push
adc
mov
int3
cmpsb
mov
cmp
pop
add
adc
mull
enter
lahf
push
aam
lret
shrb
or
adc
test
cld
fdivrs
pop
mov
xor
icebp
jp
push
icebp
das
push
push
or
out
outsl
dec
jno
adc
mov
rep
xchg
mov
pop
popf
fisttpl
fsubrl
in
les
lock
sub
jbe
ret
sahf
mov
and
out
adc
in
outsl
pop
jl
mov
pop
push
jno
sbb
aad
inc
lcall
cmc
repz
aaa
mov
xchg
mov
daa
cmp
inc
leave
aaa
out
arpl
jge
pop
jbe
xchg
out
xchg
lds
sbb
push
rclb
jg
adc
aaa
mov
xor
ret
sahf
in
jl
xchg
mov
lcall
in
jecxz
out
push
fiaddl
enter
dec
xor
fst
pop
mov
in
xchg
pop
loope
and
into
lds
iret
in
insl
push
pop
jns
and
push
xchg
stos
rcll
xor
jno
cli
jle
dec
cmp
out
mov
pushf
std
fcmovne
mov
push
dec
push
and
pop
loopne
fwait
xchg
mov
rcll
pop
xchg
inc
pop
gs
out
inc
mov
nop
fidivl
pop
add
xor
ds
mov
repz
xor
xor
sar
daa
lret
push
fidivrl
mov
cmp
ficoms
sbb
nop
jge
outsb
pusha
scas
mov
or
jno
imul
leave
in
xor
imul
nop
dec
enter
stc
add
and
pop
jo
push
aaa
fisubrl
xor
aam
std
mov
shlb
xor
mov
mov
shll
pop
repz
enter
dec
mov
loope
in
icebp
xchg
push
shrl
jae
cmp
lods
insl
imul
xchg
push
jg
xor
sub
cmpsb
fcmovu
pushf
xchg
inc
lds
push
or
mov
mov
loope
cli
shl
push
push
fwait
sti
out
fnstcw
outsl
in
and
dec
cs
sbb
je
sbb
mov
inc
stos
jg
loopne
xor
add
fcomp
mov
jge
lods
cmp
inc
pop
xor
adc
es
dec
push
or
ds
and
cmpb
cltd
aas
or
loope
ret
jle
mov
add
imul
mov
sub
jl
and
ja
cli
xor
jae
cmpsb
jns
cmc
mov
pop
lods
or
xor
jae
sub
sbb
subl
shrl
int3
rorl
ret
mov
sbb
mov
into
mov
dec
int
sub
sub
jnp
out
shlb
daa
jns
xchg
insl
int
jge
test
pop
scas
mov
pop
cmp
dec
mov
ss
lock
arpl
dec
rcr
das
or
sbb
jbe
rcrb
adc
enter
push
or
lret
scas
lods
pop
dec
xchg
xchg
or
test
push
fadds
mov
clc
add
subb
shrb
sbb
jmp
xchg
outsb
call
xor
ret
cmp
cmovge
cmpsb
mov
in
mov
pop
mov
inc
out
icebp
lcall
sub
pop
dec
jnp
mov
mov
arpl
test
xchg
jbe
lret
jg
stos
pop
mov
sub
sub
mov
dec
rcrl
mov
mov
mov
jle
add
jp
enter
mov
pop
mov
mov
mov
rclb
or
jmp
and
and
push
cmc
cmpl
sbb
or
out
pop
dec
mov
or
push
xor
adc
or
jge
insl
movsb
popf
nop
push
fmul
mov
add
ds
sbb
jo
call
stc
cmc
xor
in
dec
inc
jg
mov
sub
fildll
fcmovne
stc
inc
xchg
inc
adc
cmp
mov
sbb
popa
fldcw
pop
push
loop
into
jmp
cmp
jle
out
aam
adcb
aas
mov
or
sub
movb
int3
sahf
mov
cs
inc
adc
xsaveopt
pop
loopne
mul
add
movsl
push
dec
add
inc
adc
push
pop
xchg
mov
in
pushf
loop
popf
pop
sub
push
shll
lahf
push
xor
movsb
mov
cmp
scas
ret
push
push
mov
adc
mov
mov
jg
bound
xor
and
loop
xchg
mov
popa
loopne
fistpll
add
mov
inc
jle
push
xchg
sti
lock
mov
push
cmp
loope
cmp
loopne
mov
fldt
inc
or
ljmp
mov
and
insb
mov
push
sbb
sti
pop
loope
or
js
jnp
pop
daa
in
and
jle
dec
mov
lcall
jo
out
add
jecxz
gs
rorl
and
pop
les
mov
out
pop
jnp
mov
aam
comiss
adc
cwtl
inc
loopne
cmp
inc
mov
pop
adcb
outsl
sbb
ljmp
mov
loope
out
jmp
stc
mov
out
cmp
mov
add
push
fimull
sti
adc
subb
sub
sbb
or
icebp
jg
int3
mov
test
outsl
mov
out
in
push
sub
mov
sub
jge
sbb
insb
fisubl
je
lods
pop
xor
loop
fiaddl
adc
out
fwait
out
rol
jbe
jbe,pt
and
out
rorb
popf
and
dec
inc
rcl
xor
je
mov
mov
inc
cli
fbld
sbb
and
testb
js
cli
mov
pop
xor
fistpl
sbb
ret
adc
mov
fsubs
stos
pop
dec
rol
test
adc
mov
mov
hlt
pushl
andl
sbb
popf
les
jno
pop
lds
pop
or
addb
add
xchg
xor
push
xor
arpl
in
call
push
push
imull
mov
xchg
xchg
jge
gs
push
mov
stos
or
add
pop
mov
and
push
icebp
arpl
xlat
std
and
jl
xor
cmpsb
std
sahf
ljmp
jno
cltd
xchg
xor
push
xor
mov
mov
pop
mov
test
idivl
aam
push
in
push
jo
adc
fwait
rcr
pop
add
repz
mov
ficompl
ret
sbb
mov
fcomps
fisttpll
lret
data16
push
lret
mov
mov
addr16
or
andl
lret
push
shlb
pop
mov
repz
mov
pop
int
mov
cmp
data16
div
jae
inc
xchg
jnp
in
negl
push
ret
in
mov
mov
aaa
jge
das
pop
insl
clc
sti
mov
fldcw
loopne
and
jl
xor
jno,pn
int
jns
lods
jae
iret
adc
adc
xchg
adc
cmp
adc
lea
xor
cs
mov
fcompl
into
mov
push
sti
fdiv
xor
mov
ja
iret
sub
fldenv
ja
jae
sahf
xchg
pop
sub
xchg
sbb
jb
test
sub
idiv
pop
mov
dec
aam
inc
jo
ss
cmpb
std
cmp
and
ret
cwtl
or
mov
negb
jno
inc
push
loope
fwait
mov
pusha
jp
sub
jb
mov
addb
pop
pop
mov
out
inc
cmp
test
into
dec
bound
repz
das
mov
lods
adc
mov
pop
data16
xchg
add
sahf
addl
jmp
jnp
aas
cs
push
js
int3
adc
sbb
mov
popa
cmp
jl
push
clc
shll
ss
test
mov
dec
fwait
nop
pop
push
cmp
mov
repnz
mov
fisubs
rcrb
das
and
adc
insb
sbb
fs
gs
mov
inc
push
test
aaa
cli
outsl
loope
fsubrs
inc
es
and
lret
subb
js
sti
pop
into
popf
gs
int3
jb
mov
test
mov
sbb
mov
xchg
jns
mov
clc
je
xor
dec
adc
aas
mov
stos
adcb
jbe
xor
scas
mov
pop
mov
mov
mov
inc
push
addr16
sarl
xor
jb
loopne
or
inc
sub
mov
pop
add
dec
or
add
pop
jno
in
push
mov
pop
xor
mov
mov
push
sahf
xchg
out
and
mov
pusha
push
or
enter
call
pop
jmp
inc
pusha
out
xchg
sub
mov
push
gs
push
fwait
jne
icebp
push
pop
stc
ret
int3
mov
scas
dec
xchg
pop
in
outsb
scas
cmp
xor
or
adc
addl
int
xchg
test
jl
js
jecxz
fmulp
xchg
in
int
dec
mov
aad
mov
xor
in
insl
decb
nop
repnz
cmp
dec
and
fcomps
jnp
mov
pop
clc
jne
test
imul
rol
lods
xchg
sbb
bound
xor
stos
push
fs
stos
pop
inc
push
xchg
or
and
pop
dec
pop
es
and
sbb
dec
dec
data16
std
push
pop
fimull
call
push
mov
aas
jo
and
es
sbb
sbb
imul
ja
lods
and
fsubrl
xchg
cmp
adc
sbb
xchg
in
fisubrl
push
dec
fsts
pop
call
enter
jl
pcmpeqb
xchg
xor
sub
sub
cmpsb
pop
mov
cmp
xchg
fwait
jmp
ljmp
mov
call
add
outsb
clc
fmull
mov
les
mov
sahf
lret
lods
sahf
out
enter
shll
adc
imul
lcall
add
mov
mov
test
cmp
lea
fs
jge
fdiv
es
lds
cwtl
add
shl
mov
mov
and
test
mov
lret
bnd
rorb
aas
jno
inc
adc
enter
fistps
pop
cvtdq2ps
cmp
xor
or
dec
xchg
jg
fisttpl
sub
sub
in
pop
pop
and
insb
sbb
outsl
das
scas
xor
xor
in
mov
push
decb
xor
stc
gs
jae
cmp
and
mov
sub
icebp
adc
flds
fucom
shrb
cmp
cs
jb
int
test
push
add
lock
mov
fwait
mov
xchg
decb
xchg
add
test
push
cmp
data16
push
test
mov
faddl
ror
testb
xor
xchg
iret
iret
or
fsubrl
in
and
jne
les
das
push
dec
sub
push
jbe
xor
and
loope
sbb
adc
repz
cwtl
mov
lahf
data16
inc
mov
lahf
jnp
xchg
xor
pop
and
jmp
lahf
mov
mov
and
cld
pop
xchg
sub
lret
mov
jne
leave
sti
cmp
notb
add
sub
shrb
ja
fcompl
in
fimuls
sub
xor
push
push
push
pushf
mov
mov
out
sub
xor
sub
jle
dec
mov
stc
das
mov
adc
mov
rcr
sti
sbb
sti
pop
and
jge
jmp
dec
push
in
sbb
pop
hlt
scas
dec
pushf
pop
js
pop
pop
cwtl
scas
ror
mov
stos
cmpl
movsl
jno
es
dec
stc
fistpl
pushf
stc
ljmp
aas
js
jne
sarb
cmpsl
xchg
dec
sahf
pop
mov
call
repnz
pop
not
arpl
dec
xchg
push
sub
fcompl
jl
repz
xor
jns
ret
jmp
ljmp
inc
xchg
mov
cwtl
xchg
sub
daa
shl
cld
int
xchg
mov
stc
ficoms
sub
adc
insl
and
xchg
insb
pop
pop
movsb
jl
xor
arpl
xchg
andb
shrl
add
mov
push
leave
aas
shl
jmp
loop
das
leave
inc
pop
xchg
mov
in
add
push
mov
mov
xchg
out
sub
or
push
mov
and
jge
lahf
mov
test
push
cltd
sbb
mov
add
dec
stos
lock
lret
fcomi
fcoms
orl
xchg
pusha
outsl
pop
mov
inc
xlat
sub
int
faddl
pop
scas
inc
pusha
into
jp
add
push
loopne
ror
cmc
fcoms
cltd
sahf
inc
cwtl
ret
adc
mov
pop
sarl
add
cmpsl
sbb
and
mov
jnp
out
into
in
inc
scas
insl
popf
movsb
mov
dec
mov
xchg
mov
sbbl
pop
mov
call
cmp
fbstp
leave
fs
dec
pop
mov
xor
lahf
pop
and
mov
jae
jmp
add
lods
outsb
nop
loope
mov
bound
mov
jnp
mov
mov
je,pn
xor
in
in
in
sbb
es
inc
idivl
pop
das
sub
add
xchg
lcall
cwtl
sub
xchg
mulb
xchg
dec
pop
adc
cmp
hlt
data16
lods
scas
push
cmp
xchg
stos
sbb
xorl
pop
jge
rorl
divb
push
sub
aas
fldl2t
jge
adcl
pop
stc
mov
fsts
mov
inc
mov
add
ja
and
popf
das
repz
pushl
jmp
and
jl
cwtl
insb
ret
jne
mov
loop
sbb
mov
fld
pop
lods
sti
enter
mov
sub
mov
lcall
cmc
pop
in
js
mov
dec
mov
push
push
inc
iret
lock
dec
test
dec
inc
mov
jp
cmp
psubusb
pushf
lahf
xor
fsubl
jmp
pop
shll
int3
insb
call
jns
inc
int
lds
mov
popf
scas
mov
add
push
imul
imul
mov
stos
fwait
push
lea
and
adc
dec
dec
xor
xor
jecxz
inc
lret
push
pusha
lods
add
jbe
dec
xchg
xchg
mov
leave
inc
out
test
loop
cld
push
int
and
js
jnp
xchg
int3
pop
adc
in
test
shll
mov
icebp
fcoms
mov
repz
rol
sbb
loope
jp
outsl
jae
mov
aad
and
push
mov
jp
cs
jg
mov
stc
cmc
xchg
pop
dec
fbstp
fcoml
int3
cli
out
xchg
pop
inc
xlat
or
cli
jae
add
jp
xchg
ja
or
push
pop
ss
push
cmp
lcall
subb
pop
push
adc
mov
ljmp
inc
fincstp
imul
sahf
xchg
aam
jp
inc
jmp
xor
sub
pop
repz
test
xor
and
popf
into
ret
movl
adc
sbb
push
mov
xchg
in
pop
or
cmp
xor
cwtl
pandn
icebp
ds
jl
and
xor
mov
cltd
xchg
push
adc
or
insb
add
std
out
cmp
vlddqu
add
mov
and
cmp
and
stos
dec
sbb
dec
ljmp
dec
pop
rcrb
cmp
dec
push
push
dec
je
jmp
and
inc
mov
ficompl
jb
or
push
in
adc
loopne
pop
pop
icebp
adc
imul
and
adc
mov
lret
test
jge
jne
push
push
and
nop
lds
hlt
jbe
test
icebp
hlt
jecxz
fldt
shlb
ds
fdivrl
pusha
jo
push
jmp
lahf
sbb
jmp
decl
mov
push
dec
and
push
lret
jnp
inc
sub
jns
jle
dec
pop
xchg
inc
std
pop
pushf
rorl
and
test
out
popa
adc
addb
push
push
or
imul
mov
std
cmp
outsb
in
jmp
sti
inc
jns
cmp
mov
pop
mov
loope
mov
sbb
mov
sbb
pop
push
stos
sbb
nop
dec
cli
xchg
pop
std
pop
mov
sub
jp
cmp
insb
inc
imul
jne
jg
pop
jbe
jo
jae
in
push
jmp
into
icebp
fldl
pusha
sub
int3
mov
iret
pop
push
add
xchg
jp
pop
xor
or
inc
sub
xlat
mov
pop
lahf
jmp
stos
mov
pusha
pop
add
je
mov
push
scas
push
and
dec
sub
das
out
data16
lock
mov
out
or
pop
nop
rol
mov
dec
aad
adc
cwtl
jmp
xor
jbe
pop
mov
and
ret
frstor
lcall
dec
mov
push
daa
je
mov
daa
mov
sub
inc
lret
out
or
dec
mov
lock
sbbb
pop
and
cmp
cld
ss
lock
cld
ljmp
jnp
pop
scas
xor
cltd
outsb
xchg
int
stos
xchg
sub
dec
jg
xchg
popa
cmc
xor
inc
push
addr16
pop
rclb
jmp
mov
xchg
hlt
test
push
iret
int3
inc
mov
inc
xchg
idiv
dec
or
ljmp
rolb
adc
pop
jns
aad
fnop
ret
jne
mov
fcmovbe
mov
stc
push
adc
pop
adc
xchg
add
movsl
clc
xchg
lods
add
mov
xor
arpl
into
cmp
out
aas
pop
jmp
xor
test
popa
mov
dec
shrb
xchg
jp
je
insb
push
add
pop
xchg
xorb
cld
rolb
xchg
and
iret
add
cmp
scas
add
stc
sbb
cmp
inc
xchg
in
repz
push
inc
sub
xor
enter
xchg
outsb
fidivs
ret
out
sti
inc
push
int
xchg
cmp
das
push
mov
mov
mov
add
jp
out
filds
jmp
mov
add
push
jmp
mov
jno
mov
push
xor
xor
and
dec
dec
pop
fwait
adc
push
push
jno
mov
or
xor
jle
jno
in
aaa
stos
mov
arpl
test
adc
cmp
stos
pop
cmp
outsl
fidivrl
lret
xchg
int3
or
push
adc
sarb
adc
lods
aas
cmc
lds
int3
hlt
push
das
int3
and
addr16
mov
xorb
sub
inc
leave
mov
shl
inc
jecxz
into
and
sub
popa
xchg
or
shrl
sar
sub
bnd
mov
dec
mov
ja
mov
pop
jbe
mov
lret
iret
into
mov
aaa
je
sahf
pop
cwtl
xorl
movsl
inc
test
out
out
jmp
notb
sbb
pop
mov
shl
sarb
mov
enter
sbb
in
xchg
dec
xor
and
inc
push
aas
btr
pop
stos
loope
pop
lea
jbe
scas
cwtl
aad
testl
push
jmp
cmp
in
and
jecxz
mov
cld
push
sbb
inc
lods
lea
mulb
divb
mov
je
cmp
add
lods
mov
jmp
ja
dec
mov
fisubs
mov
inc
adc
out
and
sub
xor
xlat
test
int
lods
or
sbb
test
popa
push
xchg
cmp
mov
jg
gs
xor
negb
push
and
movsb
xchg
lds
rol
sub
jne
push
pop
and
out
sbb
jb
std
jmp
mov
or
mov
mov
mov
bound
push
ret
notl
insl
sbb
dec
insl
jmp
mov
xlat
mov
xchg
dec
jl
mov
dec
cwtl
repnz
stc
cmpsb
std
pop
lcall
xor
int3
lds
jbe
ljmp
pop
out
sahf
push
lret
mov
popf
movsl
cmp
mov
cltd
enter
clc
push
adc
push
jo
xchg
pop
mov
adc
push
leave
inc
mov
ja
iret
test
jp
mov
fistl
ret
inc
sbb
xlat
push
pop
mov
xchg
pop
jmp
daa
mov
and
jnp
aam
fsubl
xor
mov
insl
out
sbb
jl
pop
rsm
cmpsb
xor
jno
lahf
fistpll
fisubrl
mov
in
xchg
adc
xor
adc
sbb
dec
dec
xlat
imul
imul
dec
xchg
lret
ds
add
iret
inc
jle
xor
sub
cmpsl
fidivrl
pop
leave
pop
adc
cmp
mov
pop
cmc
add
dec
push
adc
xor
lock
mov
hlt
pop
pop
xchg
icebp
fnstenv
popf
in
insl
jno
dec
sbb
or
dec
push
cs
and
in
mov
icebp
mov
hlt
fldcw
pop
sub
mov
out
repz
and
daa
daa
inc
mov
dec
pop
mov
sub
test
lea
cmp
sahf
sbb
push
lcall
pop
bound
mov
pusha
mov
pop
test
dec
fadds
fdivrp
lock
pop
sbb
scas
mov
std
aaa
sub
mov
stos
cmp
inc
lahf
lfs
rcl
and
pop
inc
rcrl
xor
mov
xchg
mov
xor
imul
cmp
loop
out
jbe
mov
out
loopne
sub
xchg
leave
fisubs
cmp
cmpsb
cmp
cmpsb
aam
adc
xchg
add
fcoml
dec
cs
fucomi
add
add
ficompl
hlt
xchg
sbb
out
push
cmp
mov
jge
cmp
fwait
repnz
dec
mov
repz
sbb
andb
cmp
push
out
xor
lods
and
inc
neg
xchg
clc
clc
mov
and
dec
cld
stos
mov
pop
into
js
mov
add
add
popf
lret
jp
mov
jecxz
lret
pop
mov
cli
pop
inc
lret
popa
inc
popa
cmpsb
loop
lods
inc
lret
xor
int
cltd
xchg
fs
cmp
jno
sarb
jg
mov
inc
mov
cmp
mov
sbb
les
ljmp
xor
les
dec
jns
imul
hlt
int
mov
sbb
lods
pushf
push
insb
repz
lret
cwtl
dec
push
fcmovnbe
in
inc
lea
aad
mov
mov
in
add
sub
addr16
jecxz
dec
icebp
bound
sub
jne
inc
lock
subb
inc
mov
mov
loope
adc
sbb
test
pop
imul
inc
ss
sbb
into
and
inc
popf
xlat
scas
cmpsb
test
push
loop
aaa
mov
out
add
cmp
push
pop
jno
rclb
mov
jge
jg
inc
xor
or
add
cmpsb
add
bound
rcr
jnp
mov
jo
pop
rclb
push
ficomps
mov
stc
inc
fmull
sbb
int3
popa
mov
movsl
testl
popa
stc
or
push
pop
cmp
imul
mov
pop
sbb
sub
lcall
js
add
rcrb
insb
lods
ja
mov
addr16
xchg
inc
scas
test
xchg
lods
test
dec
add
xor
mov
or
push
ret
mov
dec
loop
test
pop
inc
push
mov
fwait
xchg
mov
adc
push
xchg
arpl
cmp
mov
or
movsb
outsb
jge
loopne
scas
mov
mov
arpl
cmc
and
xor
scas
dec
or
loopne
cmp
sub
dec
minps
xchg
inc
lock
das
sahf
cmp
ret
push
sbb
leave
clc
fisubs
sub
xchg
jne
jp
or
cmp
dec
mov
pushf
mov
cs
mov
les
shlb
mov
mov
xorl
loope
xchg
and
mov
test
rclb
sahf
adc
outsb
ljmp
xchg
scas
insl
dec
inc
and
jle
adc
push
imulb
das
push
sti
sbb
aad
movl
es
sbb
iret
sbb
loopne
sbb
mov
mov
or
add
fucomip
insl
lock
jnp
stc
mov
mov
popf
jnp
pop
sub
or
pop
jo
pop
inc
scas
into
pop
mov
or
dec
sbb
sbb
dec
ja
fs
xor
insl
sbb
jne
pop
cmp
lock
sarl
push
pop
shl
xchg
fwait
sub
sub
outsl
fcomp
sahf
mov
mov
mov
push
mov
or
or
mov
mov
mov
in
fnstenv
push
jno
push
cwtl
or
daa
jg
cmc
jne
pop
xchg
mov
testl
js
jbe
push
cmp
inc
or
dec
aad
test
pop
xlat
mov
pop
mov
cmp
cmp
push
fildll
xchg
push
push
push
dec
mov
jae
sti
leave
add
out
or
je
xor
dec
imul
fisttpl
sbb
add
pop
out
cmc
test
mov
mov
add
fistpll
sub
leave
fwait
jle
xor
imul
pop
bound
daa
pop
inc
loop
pop
cmpsl
pop
loop
call
mov
mov
push
adc
mov
dec
je
add
punpcklbw
bound
cmc
inc
jge
outsl
xchg
pop
add
add
enter
in
fs
rclb
leave
and
sbb
pusha
jge
ret
pop
cs
mov
pop
sbb
icebp
sar
lahf
rorb
stos
pusha
cmp
sub
jo
mov
xchg
ficompl
sbbl
xchg
repz
pop
mov
addr16
and
stos
jmp
subl
imul
and
sti
or
fldcw
loope
insb
pop
push
mov
xchg
jbe
ret
push
iret
push
bndldx
mov
shl
insl
cmp
mov
in
push
movl
lret
jne
ljmp
pop
outsl
mov
or
out
push
push
sbb
sub
or
icebp
in
test
inc
les
cmp
pop
icebp
cmp
xchg
mov
mov
notb
rcrl
push
out
add
hlt
lcall
inc
mov
ret
fcoml
ret
testl
stos
lods
loopne
jmp
adc
sub
nop
stc
arpl
test
inc
mov
lret
jge
ret
ficompl
inc
mov
mov
cmc
fcmovu
fs
mov
icebp
outsl
jnp
into
addb
xchg
loop
rol
ss
adcb
sub
nop
or
adc
incl
icebp
mov
in
or
notb
mov
mov
das
push
cli
pop
and
aas
push
int3
jae
lret
fidivs
cwtl
cli
ss
fidivl
out
push
jnp
dec
insb
clc
cmpsb
adc
gs
daa
or
cmp
outsl
clc
nop
mov
imul
imul
movsl
and
cmp
jo
cli
subb
incb
dec
insl
out
mov
cmp
xchg
ret
pushf
sbb
push
add
lods
push
push
cmc
or
lods
iret
mov
jae
ss
jb
loopne
mov
xor
pop
scas
cmp
in
ret
mul
loopne
push
roll
sub
sbb
cmp
mov
lods
fsubrl
imul
insb
xlat
xchg
lods
ret
jg
cmpsb
mov
leave
or
mov
jns
fcom
jnp
shll
fsts
jnp
mov
dec
push
sbb
sbb
daa
sbb
js
out
fidivs
test
sub
dec
push
xchg
imul
cld
push
sbbb
jg
jns
pop
inc
mov
jno
rorb
daa
cmp
rclb
sbb
mov
ds
mov
jno
jb
mov
repz
xlat
jmp
sbb
mov
jle
iret
pushf
mov
cmpsb
sbb
sub
movsl
je
gs
call
cmp
xchg
fidivrs
pop
dec
mov
testl
enter
jg
insl
imul
test
sbbl
add
in
out
scas
mov
sti
jmp
or
cld
rep
bound
sbb
inc
lcall
sub
jecxz
dec
cli
insb
jb
es
stc
pop
imul
mov
fimuls
dec
ljmp
aam
inc
mov
shlb
pop
fcomps
cltd
and
cwtl
lret
negb
xchg
insb
dec
mov
mov
cltd
dec
mov
cmc
cs
rcr
js
mov
mov
scas
jb
push
push
push
sbb
sbb
push
daa
int
aaa
hlt
fldcw
test
push
and
mov
js
leave
clc
loop
dec
movsb
push
sbb
push
outsl
add
test
movsl
jo
pop
push
or
clc
int3
push
scas
int
xlat
das
in
jbe
or
or
call
adc
pslld
call
jl
mov
sbb
imul
xchg
lods
fsub
pop
sub
xchg
adc
shl
and
ret
call
cltd
or
test
loop
test
xor
and
out
mov
sub
enter
test
pop
ret
inc
jae
or
jecxz
sbb
mov
out
stos
xchg
cmpsl
mov
push
or
and
fsts
sahf
frstor
negl
aad
pop
mov
mov
pusha
jl
test
cmp
addl
lock
outsl
push
mov
in
out
xor
loop
sub
xchg
rcr
or
subb
cmp
hlt
jns
mov
xor
inc
pop
lcall
jl
mov
or
std
jns
jnp
popa
std
adc
imul
repnz
orl
stos
jge
test
lock
cmpsb
jb
les
xchg
iret
add
push
xchg
xchg
jbe
and
ds
shl
dec
sbb
inc
hlt
in
inc
push
cmp
jae
orl
push
in
addr16
pop
lcall
cld
xor
cld
adcl
push
imul
pop
mov
jbe
mov
mov
ficomps
jecxz
daa
testb
and
test
jl
stos
and
sbb
mov
pop
ror
cmp
or
mov
daa
pop
cmc
xlat
and
push
fs
xor
test
ljmp
ljmp
or
mov
int
rcrb
jmp
dec
lods
sbb
fwait
inc
and
lods
and
ret
imul
pop
pop
fisttps
fcmovnu
sub
das
add
xor
loope
test
rclb
or
and
repnz
pop
xor
add
call
inc
pop
jno
les
cmc
insl
in
enter
popa
jmp
push
sbb
cltd
push
mov
movd
cmpsl
ss
pop
in
sub
dec
scas
sub
mov
stc
je
aad
or
cmp
sbb
fiadds
and
dec
dec
xchg
cmp
loop
arpl
negl
mov
imul
outsb
inc
push
pop
mov
mov
aam
sbb
and
out
test
fisubs
testb
sbb
outsl
rep
leave
push
test
test
add
mov
pusha
mov
and
or
jp
aaa
in
je
push
xor
sbbl
pop
stc
outsl
mov
xor
mov
add
pop
jp
stos
stos
ret
pop
cld
add
je
cmp
gs
inc
lock
sub
or
add
and
js
add
iret
loopne
dec
repz
sub
daa
addr16
aam
dec
aas
xor
xchg
int
call
inc
test
loopne
je
push
or
pop
and
mov
mov
loopne
xor
ret
mov
ljmp
popf
lods
cmp
cmpsb
aam
les
push
sbb
ds
dec
dec
mov
loopne
cmpsb
mov
mov
pop
insl
outsl
mov
mov
jg
sbb
cmc
mov
rcr
ja
arpl
std
cmp
xchg
xchg
add
inc
push
jno
pop
les
xchg
decl
mov
push
loop
push
push
adc
mov
push
lret
add
add
jo
out
push
lock
inc
mov
adc
dec
or
cmp
push
fwait
and
iret
stos
xlat
cmp
adc
pop
pop
adc
sub
xchg
mov
sarl
sub
dec
outsb
dec
aam
je
mov
sub
jne
mov
mov
rcll
popf
xchg
test
push
pop
lock
dec
out
aas
pop
xchg
out
insl
pushl
arpl
pop
ret
lcall
sub
cmpsl
in
ja
daa
adc
call
cld
sbb
shlb
push
mov
adc
push
sub
cs
cmp
movsb
ljmp
loopne
jno
pusha
push
mov
dec
sahf
test
arpl
cmpsl
daa
daa
pop
ja
cmp
push
dec
and
test
shlb
pop
repz
lret
loopne
movsb
cmpb
sbb
adc
and
xor
mov
es
push
mov
rcr
lea
enter
mov
das
cmpsl
imul
popa
loop
or
rcll
cmc
dec
xchg
add
test
pop
jecxz
cwtl
lods
stc
cmp
xchg
sub
mov
add
push
add
arpl
cmp
aas
scas
clc
adc
in
ud0
mov
and
loop
dec
xchg
negl
mov
add
dec
add
inc
mov
sub
roll
inc
jp
imul
push
insb
ss
xchg
fisubs
sbb
inc
out
call
int
aaa
jmp
mov
insb
ret
mov
mov
inc
push
inc
es
xchg
shll
xchg
mov
push
aam
xchg
inc
xor
hlt
adc
push
adc
cld
sbb
and
in
push
xchg
inc
pop
inc
movsb
cmc
push
out
imul
movsb
and
scas
sub
aam
pop
mov
pop
push
cmp
lods
rorl
push
pop
or
cmpsl
shl
cli
repz
jo
jbe
nop
scas
leave
cltd
out
add
xchg
dec
mov
int3
and
sti
repnz
scas
in
aaa
sbb
loop
push
push
sbb
pop
push
lods
bound
in
adc
mov
pop
jns
mov
lock
shll
jo
gs
or
dec
push
sub
sbb
jne
movsb
xchg
fdiv
test
jns
sbb
pop
imul
sub
ljmp
insl
fwait
loope
jne
inc
rcl
mov
and
out
fdivrl
andl
icebp
adcb
ljmp
or
xchg
mov
fldl
add
or
sbb
fildl
or
mov
mov
jmp
clc
es
push
fcompl
lock
lret
subb
dec
popa
add
out
pushf
test
in
cmp
xor
inc
ret
add
in
movnti
sub
cmp
in
xor
mov
jae
pop
mov
mov
pop
push
shlb
inc
aad
jmp
push
das
stos
push
push
add
movsl
adc
mov
jb
inc
jae
add
imul
out
cmp
loope
or
stos
jg
jbe
stc
push
rclb
int
add
pop
jge
push
mov
jns
mov
xor
aad
out
cltd
jl
in
dec
mov
cmp
out
xchg
stc
mov
in
or
inc
call
setnp
xchg
rclb
lcall
xor
das
subb
xchg
imul
sub
pop
outsl
lods
mov
fldl
jmp
cmp
sarb
cmp
fildll
scas
dec
mov
sarl
sti
nop
pop
add
or
in
xor
mov
test
stos
sub
jg
mov
aam
shr
call
mov
inc
test
pop
shlb
rolb
pushf
je
inc
add
das
push
adc
mov
and
add
adc
inc
jg
daa
push
xchg
inc
or
sbb
add
shl
jbe
into
cmp
popf
jb
mov
pop
cmpsb
mov
bound
xor
mov
mov
push
gs
test
push
loop
pushf
pop
pop
aam
xor
mov
inc
scas
shrb
mov
sbb
cmp
ljmp
push
add
leave
xchg
sbb
outsb
xor
fcmovnu
into
enter
ficoms
movsb
cmp
and
dec
test
out
cli
out
out
idivb
bound
mov
adc
shrb
inc
dec
xor
mov
jbe
mov
into
mov
aas
push
pop
pop
xorl
sahf
movsb
sub
clc
jnp
dec
dec
outsl
leave
imul
shr
mov
mov
loop
mov
push
movsl
in
cmp
pop
hlt
mov
fwait
inc
add
sbb
arpl
pop
mov
cmp
add
xchg
shrb
jg
dec
adc
jo
mov
cmp
gs
mov
lock
jmp
rcll
or
fwait
out
fidivl
and
push
cs
repz
cld
addl
aaa
and
ljmp
push
gs
jno
push
lds
add
enter
xor
stc
add
adc
stos
mov
cmpsb
aas
out
cmp
cmpsl
and
push
repz
imul
out
mull
sub
je
pop
ljmp
in
sbb
jmp
test
and
xchg
mov
shll
add
mov
adc
stos
call
cs
cmp
lods
sbb
aas
fidivrl
or
or
adc
pop
lock
js
pop
pop
sarl
fbstp
sub
mov
lods
sbbl
dec
jl
bound
imul
lock
jno
adc
cmc
push
call
sti
cs
jg
hlt
inc
call
filds
push
xor
idiv
inc
dec
cwtl
repz
shrb
mov
sbb
add
jno
mov
push
ret
addr16
xchg
xor
rclb
or
aaa
push
scas
aas
in
lock
loope
xor
and
inc
mov
jmp
cmp
mov
lock
adc
into
test
xor
jne
and
cmp
fwait
loope
xor
adc
aas
bound
lret
mov
hlt
mov
push
cmpsl
dec
xlat
std
pop
inc
sub
inc
jb
and
leave
out
mov
ljmp
shll
adc
loop
add
sub
sbb
dec
imul
cmp
shll
jno
jnp
xchg
imul
lock
icebp
xchg
mov
ret
sub
xchg
jl
pop
xor
dec
pop
jo
imulb
adcl
mov
mov
clc
mov
lcall
movsb
adc
jne
dec
mov
push
inc
push
dec
fcomip
cli
sbb
dec
and
and
repz
or
imul
xor
test
gs
sbb
adc
mov
insb
mov
mov
iret
sub
popf
lea
add
and
iret
jo
dec
jl
jno
pop
mov
pop
enter
jg
jo
dec
jb
add
lcall
cmp
in
mov
mov
mov
pop
mov
pop
push
negl
fwait
or
mov
push
mov
cmp
push
push
fistl
jo
fldcw
cmovs
in
addr16
arpl
outsl
test
push
daa
jo
mov
mov
jmp
mov
adc
out
imul
or
lea
mov
lahf
enter
lods
xorl
mov
and
mov
jae
xchg
xchg
clc
sbb
mov
or
mov
mov
gs
movsb
test
rcrb
xor
in
clc
jae
pop
and
jno
sub
pop
out
mov
popa
xorb
or
add
notb
cmp
cmp
int
pusha
into
mov
js
sbb
dec
mov
pusha
cmp
iret
loopne
cmc
push
sub
pop
push
sbb
xor
testb
sbb
cli
dec
sub
pop
insb
leave
repz
mov
jo
inc
dec
pop
aam
loopne
lods
jle
nop
pop
call
lahf
subb
sbb
mov
mov
mov
mov
push
inc
xor
mov
jecxz
std
aaa
dec
or
sar
and
daa
addr16
ret
and
imul
bnd
mov
jecxz
outsb
enter
mov
mov
pop
push
mov
add
stos
adc
mov
repz
inc
dec
shr
cmp
mov
lea
pop
ret
movsb
lcall
dec
pushf
movsb
imul
adc
xor
sub
pop
movsl
inc
movq
add
xlat
mov
push
sub
cmp
jge
data16
repnz
jmp
inc
mov
out
sbb
mov
movsb
sub
aas
cmpsb
test
lret
xor
std
ss
aad
ret
aad
and
mov
mov
std
dec
in
xchg
dec
jge
lcall
out
add
mov
test
push
jl
push
mov
inc
dec
xor
mov
test
inc
sub
rolb
outsb
into
data16
out
pusha
xchg
cmp
lods
div
loopne
sub
dec
xchg
mov
out
data16
push
dec
fstpl
xor
aas
push
and
lea
pop
or
movsb
sub
mov
outsl
and
arpl
sub
stos
lret
stos
jg
add
shll
pop
shll
nop
cld
xor
data16
mov
cld
stos
fistpl
or
nop
ret
mov
sub
addl
inc
push
outsl
sahf
insb
jbe
ja
add
ljmp
adc
cs
or
dec
adc
pusha
mov
cmc
jecxz
pop
pop
repnz
aaa
sti
icebp
insl
imul
sub
cs
loope
add
dec
outsb
lret
test
jo
xor
repnz
jno
shlb
inc
nop
mov
cli
sub
add
in
pop
push
mov
xchg
std
mov
cmp
push
add
sbb
lahf
jb
shrb
popa
sub
imul
push
jae
xlat
aam
pop
push
aaa
dec
bnd
mov
xchg
ds
xchg
js
js
sarl
cwtl
dec
int
hlt
add
in
ret
sub
ret
mov
xchg
sbb
data16
fists
cwtl
cmp
ret
call
in
shrb
test
adc
rcrl
sub
pminsw
loopne
push
xor
xchg
scas
lret
dec
outsl
pop
mov
xor
sub
dec
mov
aam
mov
pop
ret
cld
mov
mov
jo
add
enter
jg
push
movsb
push
ret
jle
or
pop
add
clc
mov
out
sbb
roll
fcmove
lock
lods
cmpsb
push
or
pop
jge
mov
xchg
repz
lods
cmp
dec
mov
fdivp
stos
and
pushf
sbb
inc
scas
xchg
sub
sahf
enter
sbb
scas
seta
lret
jb
pop
lret
dec
sahf
lea
ds
sub
or
jo
pop
nop
adc
outsl
pop
sbb
inc
add
clc
das
rcr
jle
inc
lds
mov
out
or
arpl
subb
lret
push
fs
int3
dec
jnp
ret
xor
testl
xchg
adc
out
cltd
je
xor
mov
jecxz
cmp
stc
pop
insb
sbb
imul
xchg
imul
int
push
lahf
sub
jecxz
push
loopne
jo
cmpsb
mov
repnz
xchg
pusha
fildl
inc
jb
xor
mov
orl
pop
inc
addb
xchg
inc
jae
pop
scas
xor
pop
mov
xchg
adc
add
mov
mov
popf
roll
adc
push
lret
rcrb
add
stos
inc
popf
jecxz
sbb
loope
mov
out
adc
adc
scas
fsts
mov
lcall
mov
imul
jb
mov
aas
sahf
fdivs
inc
or
mov
add
and
int
push
iret
movsl
subb
repz
jb
call
mov
and
sbb
jmp
add
sub
stos
xchg
dec
rolb
in
cmp
add
loope
jle
testb
lret
and
xchg
repnz
imul
and
mul
adc
mov
add
inc
setbe
inc
sub
cli
shrb
adc
scas
rolb
inc
jg
pusha
je
data16
fcoms
cmpsl
es
dec
mov
cmp
sub
jmp
xchg
mov
mov
pop
mov
dec
aam
imul
dec
mov
xchg
lds
test
or
movsb
xor
xchg
inc
imul
rolb
mov
mov
fsubrs
jmp
pop
sbb
stos
pop
pushf
push
in
jne
add
imul
mov
fidivs
cltd
scas
add
loop
pushf
inc
adc
mov
adc
sub
inc
push
xor
pusha
iret
sub
out
adc
int3
call
xchg
adc
push
xchg
add
xchg
out
in
popa
insb
and
push
adcb
mov
mov
mov
xor
sub
xorl
sbb
mov
sub
adc
push
or
jbe
jg
sub
inc
cs
push
push
sbb
lds
push
or
lret
sub
clc
dec
dec
movsl
lret
sub
xchg
dec
jo
insl
in
xlat
dec
xchg
mov
mov
mov
hlt
pop
stc
jle
or
push
inc
out
in
jmp
pop
movsl
into
cmp
in
pop
or
hlt
stc
dec
rolb
mov
jge
cmp
sbb
push
push
fildl
repz
mov
loopne
xchg
inc
cli
popa
jbe
inc
xlat
or
mov
cmp
jge
pop
repnz
push
rcrb
lds
repz
fisttpll
pushf
stos
mov
jnp
mov
and
and
in
scas
push
mov
mov
mov
sti
out
sub
bound
inc
in
into
xchg
push
inc
scas
adc
adc
mov
loope
add
fwait
push
jns
cmp
pushf
sahf
xchg
sub
xor
push
pop
nop
xor
add
movsl
mov
xchg
xchg
cmpsb
xchg
cmp
jecxz
and
push
mov
mov
sti
lcall
outsl
unpckhps
leave
sub
movsb
sbb
push
leave
mov
test
inc
sub
fldpi
pop
mov
test
clc
stos
arpl
lods
call
add
jae
xlat
inc
insl
xorb
out
mov
sti
nop
ja
enter
xchg
cmpsl
jo
and
idivl
cmc
add
movsb
call
adc
repnz
fstl
mov
mov
push
cltd
mov
xchg
push
test
jo
push
cmc
jne
push
push
dec
jl
sbb
and
outsl
mov
inc
push
mov
pop
jecxz
ficoml
pop
xor
add
daa
jmp
lcall
cmc
icebp
cld
lods
lea
dec
and
scas
mov
test
stos
sub
fiaddl
adc
dec
fcmovnb
jb
dec
std
or
sbb
xchg
add
sub
mov
dec
insl
sbb
in
cmpsb
sbb
scas
popf
cs
orb
jcxz
clc
inc
aas
sbb
lret
push
lock
sbb
xor
test
or
popl
in
mov
ss
mov
sbb
dec
inc
xchg
mov
cmp
sbb
int
lock
iret
cmp
add
int3
mov
outsb
insl
mov
cmp
cmovns
stos
movl
push
jl
mov
or
idivl
jne
sahf
sub
sbbl
dec
inc
outsl
sub
or
and
pop
push
adc
and
xchg
ficomps
lret
mov
gs
and
jge
lock
add
in
repnz
sbb
inc
jge
jns
jo
cmp
out
test
cmp
repz
mov
mov
mov
and
cmp
imul
in
andl
rcll
leave
dec
cmp
mov
mov
add
push
pop
stos
roll
xchg
aaa
popl
mov
aad
push
mov
arpl
in
mov
pop
sub
lahf
xor
stc
lahf
jnp
mov
ds
mov
cmpsb
fwait
push
imul
fildll
inc
ret
cmp
lods
mov
xchg
andb
leave
mov
dec
mov
sub
push
mov
xchg
iret
shlb
sbbb
out
dec
add
dec
or
push
fnstenv
sbb
sbb
ljmp
push
negb
sahf
xchg
ds
or
and
loop
jne
pop
sti
fisubs
push
inc
repnz
les
aam
push
xchg
add
call
enter
js
aas
xchg
sti
xchg
add
mov
push
ljmp
jl
insl
add
in
jne
push
loopne
cwtl
push
inc
sbb
lock
jo
cmc
sbb
mov
xchg
mov
add
inc
ret
dec
and
cmp
fisttps
push
test
cmp
int
cld
sbb
inc
mov
repz
out
push
jecxz
push
ret
ret
arpl
add
push
leave
add
dec
or
les
mov
gs
jne
pop
movsl
mov
ror
loope
in
shll
es
push
inc
cs
lds
outsb
popf
iret
dec
and
cmp
inc
and
mov
aad
pushf
mov
push
lods
jb
stos
insl
pushf
imul
movsl
xchg
jns
jnp
out
jns
add
les
imul
push
je
or
mov
add
into
mov
sub
fdivr
pop
cmpsl
cmp
lods
outsl
dec
jecxz
xchg
dec
lea
xchg
push
jb
xor
sti
sub
call
stos
ss
out
scas
jae
adc
repnz
ds
jp
mov
push
fptan
mov
jg
mov
insl
inc
das
cmp
lahf
sub
and
sub
mov
adc
sub
push
xchg
mov
in
or
test
in
sub
pop
sub
sbb
mov
cwtl
in
or
pop
mov
jmp
div
xor
and
ret
xchg
push
sbb
xchg
movsb
punpcklwd
sub
in
or
sub
mov
mov
daa
cmpsl
aam
sbb
outsl
push
out
cmpsl
cmp
mov
sbb
pop
in
xor
in
sub
movb
inc
mov
mov
dec
and
push
xchg
lea
cmp
or
fisttpll
push
repz
in
jb
and
dec
stos
js
inc
push
or
sub
adc
nop
out
and
push
repz
mov
out
or
test
in
xchg
add
and
testl
xchg
push
or
ficompl
daa
ds
mov
xchg
loopne
or
mov
and
insb
nop
mov
addr16
push
mov
insl
add
or
rcrl
scas
insl
mov
shrl
nop
imul
cs
stos
mov
adc
and
and
in
cld
mov
mov
jo
and
push
stos
jg
icebp
pop
mov
or
adc
es
std
adc
cld
fnsave
imul
pusha
and
inc
inc
push
mov
xor
rorb
mov
sub
mov
dec
mov
mov
jne
sub
mov
pop
pop
aam
mov
fwait
je
mov
stos
in
pop
adc
das
adc
adc
dec
mov
xor
lret
jmp
repz
xchg
sub
insb
dec
jns
add
mov
pop
xchg
out
out
xchg
cwtl
test
or
jae
jmp
xchg
xor
adc
imul
push
jge
imul
jecxz
lods
test
cs
xchg
mov
xchg
mov
mov
add
or
js
test
loope
lds
repnz
jmp
mov
ss
ss
arpl
loope
mov
mov
mov
or
ror
and
pop
inc
imul
rcll
mov
jge
fstl
stos
fmulp
aam
rcrb
gs
divl
and
lret
repnz
hlt
shl
movsb
xchg
lods
dec
xchg
sbb
push
ret
or
das
pusha
das
or
out
in
cltd
pop
jne
js
jnp
repz
call
adc
shlb
mov
hlt
mov
pusha
lret
sub
test
out
clc
xchg
xor
mov
sub
test
lret
jg
add
add
jae
mov
pop
popl
arpl
fsubrs
jne
pop
test
lock
stc
sbb
pop
sbb
or
shl
fcmovbe
lods
arpl
mov
fisttpll
iret
inc
mov
pusha
sub
ja
mov
fisubl
incb
leave
mov
xorb
push
mov
dec
fidivrs
fwait
mov
loope
pusha
fstpt
mov
mov
mov
or
jo
les
pop
xchg
pop
pop
push
and
pop
pusha
call
sti
cmpsb
jo
iret
cwtl
out
push
fwait
lds
and
jno
movsb
jae
sub
shlb
xchg
mov
cmc
insb
mov
int
mov
fs
push
out
imulb
lret
rorb
je
mov
mov
mov
push
inc
pusha
jae
push
and
lea
mov
mov
sub
loop
xor
push
cmpsb
jnp
pop
daa
push
sub
mov
cmp
mov
ljmp
cwtl
push
ds
and
je
sub
jno
lds
fldt
loop
lcall
icebp
sarb
or
add
gs
mov
pushf
lret
mov
mov
cmp
stos
or
inc
xchg
mov
cs
aad
jmp
xchg
add
sahf
leave
and
sub
pop
shll
les
xor
adc
sbb
add
incb
mov
cmp
jle
or
push
mov
int
pusha
fiadds
xor
jnp
or
sub
xlat
mov
sub
leave
push
lods
push
test
jecxz
xor
int3
mov
mull
fnstsw
mov
rcll
call
jle
push
mov
jae
ss
xchg
sub
fs
lcall
addr16
pop
pop
push
mov
lods
andps
mov
mov
ds
mov
pop
sub
mov
sbb
call
int3
and
mov
popa
ror
arpl
cwtl
mov
dec
mov
mov
cmpb
rol
loop
add
ss
fwait
cld
pop
mov
xor
sbb
insl
dec
add
xchg
add
outsb
fdivrl
dec
add
insb
aas
into
pop
js
mov
subl
lret
sub
dec
std
jb
xchg
loop
jnp
sbb
adc
loopne
add
enter
xchg
shl
inc
in
fistps
test
jns
lea
mov
dec
scas
xor
xlat
mov
push
cmpsb
mov
xor
pop
cwtl
mov
jecxz
in
cmovge
repz
and
mov
fcomp
ds
popf
and
sbb
in
sub
ficomps
inc
cmpsb
mov
imul
sub
or
push
mov
ret
add
jo
pop
jmp
xor
inc
jge
jno
cmp
pop
sbb
pop
es
into
imul
mov
aas
inc
lds
mov
ss
repz
mov
adc
dec
aas
je
jbe
insl
icebp
xlat
jmp
movsl
outsb
mov
leave
cmp
or
mov
test
fcoms
mov
aaa
movsb
cmc
pop
add
adc
cmp
lock
cmpsl
icebp
mov
cld
adc
mov
push
imul
inc
imulb
dec
jbe
add
dec
mov
mov
jecxz
dec
jbe
fcmove
cmp
in
shlb
fdivs
sahf
notl
pusha
push
shll
out
mov
push
xlat
pop
clc
in
mov
in
in
push
lock
loop
pusha
dec
scas
psadbw
pop
or
aaa
xor
adc
push
pop
mov
roll
les
ds
loopne
push
push
and
in
ficompl
push
or
call
or
adc
mov
and
cltd
imul
and
out
cmp
push
xchg
out
sbb
nop
pusha
cmp
add
lcall
into
rcr
inc
lods
ja
into
sbb
xchg
hlt
jmp
popa
sarl
popa
in
pop
jo
xchg
dec
lahf
or
push
pop
mov
clc
lods
jl
cmc
lcall
cmc
adc
jbe
fs
cmpsb
jl
bound
aad
sbb
mov
inc
push
in
xor
leave
push
roll
lea
pop
cmc
les
mov
xor
fsts
xor
mov
in
nop
addr16
into
popl
add
add
sbb
xor
repnz
cmp
mov
test
dec
mov
push
loop
cmp
mov
int3
call
imul
out
xchg
cmpsl
mov
loop
loopne
mov
pop
mov
xchg
cmp
xchg
in
inc
daa
cwtl
imul
mov
fwait
inc
or
lret
shl
mov
test
pusha
rcl
pop
notl
or
lea
dec
sbb
pop
fcmove
push
and
es
jbe
mov
test
and
sbb
in
and
lahf
jb
daa
fildl
sbb
xchg
jecxz
std
test
push
movsl
add
outsl
pop
adc
lds
mov
push
popa
sub
mov
xchg
xchg
dec
ret
sub
sbb
or
dec
loop
push
out
flds
hlt
xchg
sbb
test
fisttps
mov
decb
mov
shlb
push
out
mov
and
insl
jg
inc
dec
jp
sub
xorb
and
jle
shrl
mov
mov
insb
inc
adc
mov
lcall
mov
test
push
xchg
mov
adc
push
mov
loop
cmp
and
loop
sub
sbb
negl
bound
cmp
out
fcoml
mov
clc
jecxz
pop
mov
jno
jge,pn
daa
sbb
in
jle
pop
jmp
add
jmp
jo
js
in
sub
and
repnz
in
repz
jecxz
lahf
pop
cmp
dec
mov
push
leave
test
xchg
jl
mov
aas
das
out
mov
cmpsl
pusha
xchg
push
mov
pop
les
std
lahf
lea
xor
stos
cli
lret
lahf
sub
xor
test
flds
adc
jne
addr16
xor
sbb
mov
addr16
jecxz
popf
cwtl
in
mov
lods
mov
out
inc
repz
sub
lret
cli
mov
les
or
int3
std
dec
jb
inc
cld
pop
jl
xchg
push
movsl
sti
mov
and
xchg
jecxz
jle
jne
into
scas
mov
or
mov
mov
inc
popf
push
out
or
pop
outsb
sub
movups
imul
int3
xchg
rclb
shr
inc
push
mov
subl
daa
scas
or
pop
push
insb
jmp
or
add
stc
int
test
rorb
lcall
lods
sub
jmp
lret
icebp
dec
mov
nop
pop
ret
mov
test
push
stos
cwtl
ficoms
in
std
adc
jno
cld
push
lock
mov
pop
addr16
imul
shll
push
mov
repz
add
out
hlt
xchg
cmp
adc
adc
aam
push
lock
inc
and
movsl
popf
xlat
shlb
cmp
add
sbb
push
mov
pop
int
mov
lret
das
rorb
dec
lret
stos
sahf
mov
jne
dec
xchg
in
pop
mov
icebp
iret
pusha
adc
pop
ljmp
in
fistpll
push
sbb
add
cwtl
lods
push
shl
inc
rorb
sbb
stc
cli
xchg
adc
cld
or
add
lcall
fwait
xor
cmp
fnstenv
je
mov
pop
add
pop
push
pop
out
hlt
setns
jb
loopne
loope
outsl
cmpl
xchg
cltd
fldt
idiv
rclb
pop
daa
or
pop
cld
pop
mov
ret
jecxz
bound
xor
shlb
xor
jmp
push
cmp
mov
cs
push
push
xor
in
mov
mov
push
flds
insl
dec
mov
and
int
cmc
dec
mov
aad
jnp
xor
movsb
sub
sbb
xchg
sbb
sbb
xchg
add
icebp
cs
cmc
rorl
xchg
push
push
outsl
xor
mov
das
xor
out
push
les
cmp
repz
mov
pop
out
loopne
mov
mov
jle
fdivs
xchg
sub
inc
icebp
dec
mov
lahf
cmc
sbb
mov
icebp
insb
inc
insl
cmp
xor
ret
xchg
xor
cld
aad
fwait
cmpsb
xor
data16
lock
aam
sub
aas
adc
jp
or
addr16
aas
scas
xchg
test
das
icebp
adc
jbe
orl
addr16
div
and
jge
in
insl
inc
mov
cmp
sub
push
bound
jp
cmp
aaa
inc
lea
imul
inc
nop
insl
jae
push
sbb
fstl
call
or
jl
stc
jns
cmove
xchg
sbb
loopne
jbe
mov
and
lods
sub
pushf
xchg
mov
movsb
pop
pusha
movsb
push
cs
add
popf
cmp
stos
mov
pop
sbb
sti
jo
mov
or
adc
dec
dec
and
pop
rcl
je
xchg
fisubrl
push
and
in
or
clc
test
sub
ss
add
mov
insb
hlt
icebp
fdivrs
fs
mov
jnp
xchg
cmpsb
push
inc
and
fldcw
or
xor
push
lods
in
mov
cmc
subb
test
jb
xchg
adc
mov
stos
loope
iret
jl
ljmp
pop
js
movsl
jb,pt
enter
arpl
push
adc
cmp
or
jp
add
nop
mov
bound
dec
data16
push
pop
push
into
aam
and
int3
aad
push
xchg
xchg
jb
clc
push
dec
pop
js
fcomps
add
lcall
loop
lahf
mov
cmp
dec
inc
jns
out
pop
aad
jmp
shrb
mov
and
imul
call
std
fs
fbld
shrl
dec
mov
cld
daa
or
xchg
aas
and
jb
pop
push
xchg
xchg
inc
fnsave
xor
pop
stos
daa
shlb
or
cltd
mov
mov
jmp
adc
jno
frstor
xchg
pop
adc
xchg
aas
mov
mov
xchg
xor
jle
ret
outsl
in
jno
xor
fbld
les
lods
pusha
mov
jno
sahf
movb
and
test
into
orb
ret
push
add
mov
je
into
arpl
stc
or
in
jl
loope
cwtl
loop
adc
jge
xchg
inc
xorl
scas
push
dec
fs
jmp
rolb
in
outsb
jp
stc
jg
sbb
mov
aaa
in
aas
adcl
stc
leave
stos
fwait
push
inc
lods
fsubrp
push
dec
mov
jmp
xor
arpl
stos
xor
adc
outsb
stos
mov
js
lods
out
nop
addr16
sub
pop
pusha
push
lock
dec
mov
sbb
repz
mov
adc
fadds
sub
mov
add
lock
pop
sbb
mov
sbb
sahf
pop
test
xchg
addr16
in
xchg
orb
or
dec
fidivrs
ret
dec
test
imul
mov
dec
imul
xchg
test
pop
test
stos
test
notb
inc
outsl
mov
dec
stc
aam
ret
jae
in
aas
xchg
dec
pop
cmp
das
jo
mov
call
int
add
jnp
test
in
out
xor
outsl
xor
jo
cmpsb
or
pop
or
mov
call
mov
lahf
ud1
push
pop
pop
adc
sub
jae
inc
out
or
jb
pop
jnp
mov
inc
mov
add
sub
sarl
jp
sti
cwtl
jg
mov
ja
xchg
scas
scas
or
fldcw
sbb
mov
adc
in
call
outsb
imul
pop
sub
inc
es
and
inc
or
jmp
outsl
das
lods
inc
sub
xorb
mov
pushl
cmp
fisubrs
nop
or
push
call
inc
or
mov
mov
mov
push
testb
out
out
xor
dec
xor
jne
cld
test
cmp
mov
test
mov
or
sbb
push
fwait
daa
inc
jne
inc
jmp
movsl
dec
stc
roll
jmp
fcmovnb
js
xor
and
daa
mov
cmp
and
hlt
insl
sub
dec
cli
inc
xlat
mov
cmp
je
filds
xor
push
insl
ljmp
insl
jmp
xlat
cmp
push
dec
inc
dec
inc
push
lods
ss
or
or
rcrb
pop
adc
sub
enter
enter
cli
jecxz
jg
mov
into
mov
mov
inc
popa
cwtl
insb
xlat
mov
movsl
mov
sub
xor
cs
dec
stos
jbe
xchg
adc
call
test
pop
jno
cltd
push
stos
mov
xchg
push
bound
sarl
add
add
pop
pop
cmpsl
mov
inc
jmp
imul
movsl
dec
arpl
fimull
xor
test
int
sbb
adc
xor
loope
out
xchg
negb
mov
call
in
cmp
dec
dec
jbe
fisttps
xchg
insl
adc
inc
dec
imul
xor
inc
add
lcall
test
xor
addr16
inc
and
shr
xchg
push
push
sahf
mov
cmp
xor
adc
and
xor
lods
les
std
pusha
cmpsb
mov
sub
jecxz
loope
jge,pt
and
fstpt
jns
fildll
fldcw
cmpsl
mov
scas
inc
lods
imul
dec
inc
int
lcall
pop
call
inc
add
repnz
cmp
or
scas
or
mov
push
mov
xchg
test
push
cmp
into
mov
pop
ljmp
cmc
fisttps
in
lret
loop
fcompl
jg
mov
pop
inc
jne
aas
movsb
int3
sbb
push
stos
cmpsl
cmp
sbb
mov
or
repz
adc
shll
pop
pushf
lock
push
push
jnp
pop
ret
outsl
mov
jle
mov
adc
test
dec
call
mov
aas
rcll
daa
xor
jp
xchg
cmp
or
sbb
out
cmp
addr16
jne
add
sarb
cmp
mov
mov
pop
xor
sub
fisubl
lods
sbb
stc
xor
test
jo
dec
cmpsl
push
dec
mov
lcall
pop
negl
call
jg
nop
mov
int
lcall
xor
or
cmp
pop
out
ljmp
sahf
rcrl
sub
subl
dec
aam
inc
fidivs
and
adcb
fildl
mov
sti
ret
mov
pop
pop
adc
jl
je
inc
jp
mov
clc
pop
jbe
rcrb
jne
jmp
xor
lret
mov
jbe
sbb
es
fdivr
testl
cwtl
inc
enter
popa
xchg
cmc
addl
fabs
mov
out
mov
dec
push
dec
stos
pop
test
hlt
sub
add
cmp
test
and
in
clc
sub
cmp
xchg
push
sub
inc
push
out
mov
lea
push
cmp
loope
xchg
jns
jl
loopne
sub
fwait
add
pusha
in
rcl
xchg
push
out
cmpsb
and
sbb
push
and
outsl
stc
out
nop
xor
and
xchg
call
cwtl
cs
in
dec
push
out
sbb
mov
inc
loope
cmpl
fmuls
inc
jnp
das
sub
aas
xchg
cmp
out
dec
xor
push
jge
dec
xor
jg
fsubs
fimull
js
popl
mov
jne
fwait
push
into
adc
mov
sbb
xchg
addr16
call
mov
jmp
mov
sub
lahf
jo
test
clc
inc
cmp
adc
adc
sub
or
and
decb
lcall
add
xchg
aam
adc
push
int3
inc
pop
fisttpl
pop
sbb
or
gs
nop
sti
push
push
jmp
es
sub
lcall
jns
inc
inc
inc
iret
xor
pop
mov
jg
lcall
mov
inc
cmp
inc
jb
popf
subb
clc
mov
insl
mov
jmp
push
cmp
dec
arpl
int3
or
xor
popa
push
out
daa
int3
dec
sahf
js
mov
das
aas
pop
enter
inc
lret
mov
mov
inc
mov
insb
pop
fwait
das
je
ret
lock
add
push
fs
dec
idivb
cmp
dec
lret
jae
mov
bound
shlb
mov
std
inc
mov
mov
cmpsb
mov
inc
pop
shrb
fisttpl
push
add
sub
mov
jne
xlat
out
lahf
ret
fwait
and
cmp
adc
fsubs
inc
test
imulb
mov
and
jecxz
out
xor
popa
notl
ss
int3
inc
sub
movsb
bound
aam
out
dec
iret
dec
dec
dec
adc
xlat
les
jns
sub
sub
and
add
pop
adc
push
mov
mov
xlat
sti
mov
test
inc
mov
fdivrs
jb
pavgw
lea
in
test
iret
das
cmpsl
and
ret
mov
loope
add
pop
lea
add
push
jnp
jl
jo
arpl
mov
mov
sub
popf
ljmp
dec
sbb
sahf
mov
pop
cmp
js
mov
inc
xchg
mov
push
sbb
in
lret
dec
xlat
jb
sbb
push
aam
mov
lret
and
shrb
out
rolb
maxps
rorl
test
mov
int
pop
scas
addr16
icebp
jnp
jae
mov
jno
loope
and
jl
add
shll
pop
loop
xchg
imul
inc
cmpsl
stos
lret
sarl
sbb
popf
idiv
lds
add
int
mov
insl
pop
dec
inc
in
jmp
push
xchg
rorl
and
mov
std
ror
inc
sbb
push
pop
and
movsb
jo
add
std
cmp
push
lods
cmp
sbb
mov
and
mov
push
loop
movb
sbb
xor
and
sahf
icebp
imul
in
mov
cli
sub
stos
jns
inc
gs
scas
xchg
stc
dec
lret
fwait
int3
out
sub
out
pop
je
mov
push
sub
popl
nop
adc
xchg
ss
divl
mov
and
sub
jp
push
mov
loop
and
sub
insl
xlat
sahf
or
dec
jg
loop
cld
lods
les
test
xchg
or
ja
decl
mov
or
stos
xchg
dec
bound
dec
inc
xchg
mov
lods
jmp
neg
inc
xlat
shlb
cmp
mov
iret
mov
int3
and
nop
pushf
lret
test
sub
mov
pop
xchg
or
sub
fdivp
mov
xchg
dec
pop
pop
mov
push
dec
pop
out
add
stos
subl
and
mov
das
fcomps
std
je
fisubl
stc
fsts
loopne
stc
mov
add
addl
add
add
je
push
pop
dec
push
mov
sbb
dec
mov
leave
rcrl
mov
add
adc
fldl
scas
push
push
xor
int3
xchg
push
pop
dec
pop
lock
aaa
sbb
mov
outsl
pop
add
fidivl
dec
lds
push
xchg
daa
mov
iret
push
cmp
repnz
mov
add
lea
cmp
das
into
scas
sub
push
enter
xchg
inc
and
sarb
fidivs
shlb
jno
cld
popf
rorb
cmpb
stc
test
mov
mov
shl
mov
jne
cli
enter
mov
adc
sbb
push
jo
jmp
insl
dec
push
popf
mov
cld
mov
jmp
push
incb
loopne
cs
mov
cmp
mov
movsl
fcompl
cwtl
into
mov
sub
xchg
inc
inc
in
loope
test
jb
jmp
and
popf
in
and
fs
stos
fiaddl
lahf
sub
stos
outsb
addb
loop
inc
fwait
or
or
pop
fcoml
and
inc
and
lods
mov
lds
pop
add
repnz
push
pop
inc
clc
rorl
sbb
and
jns
bound
sbb
pusha
mov
stos
int
cmpsb
mov
in
insb
fnstcw
lea
fstp
adc
ljmp
sbb
jmp
jp
jne
adc
inc
xorl
sbb
scas
in
jb
mov
sti
mov
pushf
jge
push
push
test
mov
sti
pop
addr16
adc
insl
out
sub
jbe
and
jl
or
aam
into
fildll
pop
or
mov
mov
jmp
outsb
call
cmp
jb
jp
sub
jp
cmpsl
push
xchg
push
add
mov
out
ret
or
inc
push
filds
and
jno
mov
sbb
fs
adc
inc
fiadds
loope
add
or
test
into
jne
inc
push
dec
or
ss
push
adc
dec
ljmp
pusha
cwtl
mov
mov
inc
fwait
jmp
push
xor
pop
cmpsb
cmp
stc
ljmp
lods
js
cs
xor
inc
out
lahf
sbb
or
lret
imul
add
sub
or
sbb
add
mov
xchg
jl
mov
mov
mov
insb
clc
ss
icebp
bound
scas
mov
outsl
xor
pushf
adc
mov
hlt
ret
shrl
push
inc
data16
les
sti
xchg
xchg
or
push
xor
xor
xor
and
dec
es
outsl
pop
pop
inc
xchg
cwtl
sbb
cmp
ret
adc
ret
jmp
inc
jb
outsl
pop
imul
gs
pop
mov
ljmp
inc
jno
pop
rolb
inc
xchg
mov
bound
mov
or
pop
push
out
ret
sahf
jns
push
icebp
iret
popf
out
out
mov
xor
stos
xor
push
cltd
fnstsw
fnsave
sub
sub
inc
jno
mov
cmp
fcompl
int3
sahf
lret
mov
in
pushf
inc
xor
sahf
gs
cltd
lret
sarl
in
in
adc
or
inc
and
into
push
pop
xchg
std
cmpb
cmp
test
push
das
adc
sahf
add
pop
pop
inc
lret
dec
lods
push
inc
mov
jle
movsb
inc
out
jmp
outsb
hlt
mov
rclb
and
push
jae
loopne
mov
mov
dec
and
xchg
mov
and
pop
movsb
sbb
out
nop
push
dec
sbb
sub
outsb
mov
jmp
add
sbbl
pop
out
push
movsl
icebp
jl
mov
test
adc
push
outsb
xlat
and
mov
ljmp
and
pusha
sbb
in
xchg
jno
jnp
pop
lcall
clc
movsl
push
xor
insb
popa
xor
xchg
inc
scas
mov
shl
sbb
dec
xchg
adc
lret
lret
mov
xchg
imul
ret
jae
jle
shlb
sub
xor
cmpsl
std
fldt
dec
cld
rol
push
aam
repz
ljmp
sti
pushf
les
lods
sub
loope
adc
out
lock
cmp
out
cld
repz
push
push
fwait
lret
jnp
cmc
stos
xchg
bound
cmp
insl
call
sbb
push
xchg
cltd
insb
or
pop
aam
and
out
fs
popl
pusha
repnz
xor
lcall
mov
push
mov
and
fiaddl
mov
mov
jno
out
dec
cmp
out
add
mov
mov
adc
mov
mov
xlat
in
movsl
stos
cmpsl
mov
jne
or
lods
xor
fidivl
repz
or
mov
fsqrt
test
sbb
sub
pop
jae
test
mov
or
cmpsb
test
inc
fldcw
andl
adc
mov
sub
inc
and
jp
xor
or
lods
repnz
adc
pusha
sbb
rcr
scas
mov
jne
popa
cmp
rorb
inc
sbb
loope
inc
adc
stos
xchg
loop
pop
int
inc
ret
push
and
mov
mov
das
mov
es
lcall
sbb
dec
cmpb
dec
iret
inc
in
cltd
popf
or
data16
loope
jne
sub
insl
cmp
dec
adc
ljmp
call
stos
stc
xlat
mov
sarl
push
mov
pop
or
pop
and
jp
dec
push
mov
lock
jne
adc
lret
cli
jmp
inc
cwtl
jl
into
xor
in
adc
cli
xchg
inc
xchg
clc
adc
xchg
sbb
adc
inc
outsb
fcompl
pop
nop
aas
xchg
int
bswap
popa
popf
test
jl
xchg
outsl
in
cld
xor
inc
sbb
je
test
popa
xchg
movsl
xchg
repz
lods
mov
push
sahf
fildl
andb
xchg
push
push
mov
sub
int3
fwait
in
sbb
xchg
out
inc
scas
lds
shll
pop
leave
test
jp
mov
push
or
mov
fcoml
or
cmp
xchg
jl
subb
arpl
push
add
lods
bound
mov
sbb
mov
cli
jmp
pop
push
jo
add
lods
arpl
aad
stos
enter
hlt
std
xlat
push
popf
mov
mov
dec
sub
sub
inc
dec
jbe
xor
or
test
xchg
pop
sub
test
xchg
xor
pusha
push
adc
test
xor
out
fisttpl
jle
repnz
mov
push
cld
xor
enter
repnz
call
adcl
mov
add
out
inc
fidivrs
or
cmp
inc
cmp
sub
and
push
cmp
jle
enter
sbb
dec
mov
nop
test
mov
orl
and
sbb
pusha
inc
or
mov
rcrl
rcll
or
dec
add
cmc
push
lods
test
xlat
movsl
sarl
dec
xchg
adc
cmp
in
jb,pn
mov
js
ss
std
add
popf
jne
sub
mov
lret
and
movsb
out
scas
outsb
insl
cmpsl
mov
inc
mov
xlat
inc
add
xor
aam
cmpsl
xchg
mov
les
pop
lret
mov
xchg
pusha
fsubrl
insl
pop
inc
rcll
popf
clc
ret
dec
fistpl
enter
mov
pop
mov
pop
xchg
pop
inc
scas
cmpb
incb
push
inc
je
pushf
loop
enter
cld
pop
cmp
xor
cmpsb
mov
xchg
mov
xor
mov
push
fisubrl
inc
pop
ret
popa
mov
aaa
jns
add
pop
sbb
adc
sbb
adc
imul
movsl
sbb
inc
mov
sub
add
lds
faddl
lret
ret
int
leave
dec
xor
push
clc
sbb
or
mov
sbb
clc
add
jl
xchg
sub
dec
fcmovnb
xor
lahf
dec
xchg
push
es
mov
inc
and
sti
jp
fcmovne
mov
mov
movsb
inc
loop
cltd
jb
hlt
jne
cmp
lea
negl
mov
stos
xor
ds
fiaddl
aam
sbb
je
lret
scas
pop
adc
shlb
test
imul
mov
xlat
or
ja
pop
cli
data16
dec
outsb
mov
dec
inc
cmp
push
out
incb
mov
popf
lds
mov
xor
adc
sub
ret
and
out
or
lret
push
lea
jb
lock
cmp
cmpsb
daa
push
cmp
out
xchg
fst
push
or
inc
cmp
aaa
inc
mov
add
cwtl
aad
jecxz
xchg
ljmp
sub
sti
push
or
push
loop
sbb
aas
jns
addl
repz
iret
out
dec
dec
mov
cmc
mov
adc
jns
add
and
test
icebp
out
imul
dec
push
testb
mov
sahf
test
mov
int3
and
or
lods
mov
sbb
pushf
cmp
fs
and
sbb
or
pop
outsb
push
cltd
dec
sahf
push
xchg
rcr
inc
sar
xlat
lods
and
in
ja
mov
xchg
mov
ja
xchg
into
outsl
imul
pop
repz
aaa
lock
pop
sbb
out
mov
cmp
xlat
xchg
mov
in
mov
hlt
fisttpll
test
daa
dec
call
mov
jo
hlt
push
idivl
jae
sarb
add
mov
cmpsl
scas
sbb
iret
fcoml
stos
xchg
pop
jl
or
mov
sarl
aam
mov
std
loop
cli
dec
mov
lahf
test
testb
sbb
push
jg
jecxz
fnstcw
ja
pusha
mov
mov
sbb
lahf
mov
inc
mov
mov
mov
movsl
adc
and
mov
dec
push
aad
test
ret
das
pusha
adc
sub
jbe
int3
jp
jo
sti
xchg
xchg
cltd
xchg
filds
sahf
adc
sbb
push
insb
inc
adc
loopne
mov
sub
cwtl
cwtl
jno
add
jge
je
xor
fistps
popf
or
icebp
add
sbb
adc
lret
mov
or
dec
shl
add
lcall
cmp
stos
mov
loopne
xor
fldt
cmp
lret
pop
hlt
sbb
fimull
or
in
mov
testb
or
aam
sub
mov
pop
mov
push
lret
pop
lods
jbe
in
xor
and
inc
xor
das
push
enter
jle
lock
inc
gs
push
cmp
jbe
leave
je
dec
jecxz
pop
dec
fistpll
lds
cmp
repnz
inc
test
lock
lea
out
cld
movsl
xor
xchg
inc
aaa
inc
test
arpl
jl
sbb
repz
cmp
jmp
dec
ret
fsubrs
xchg
push
scas
rorb
cmpsl
lea
pushf
test
repz
jp
inc
into
sub
int3
cmp
pop
xchg
add
push
push
rclb
lods
ljmp
ds
dec
mov
jecxz
mov
inc
sub
dec
dec
ds
jge
mov
pop
ljmp
mov
sub
jmp
pop
mov
or
jmp
fdivrs
inc
mov
xchg
bswap
adc
mov
push
inc
lds
fwait
dec
decb
rcll
jecxz
push
or
and
pop
add
mov
sarb
in
aas
mov
sub
xchg
sar
lods
dec
push
fdivrs
xor
in
pop
jmp
jno
int3
jb
cwtl
sbb
push
in
shl
fcoml
xchg
ljmp
adc
ja
cmpl
cld
pop
dec
sbb
xor
clc
ret
rcll
scas
push
loopne
out
jb
or
std
push
mov
into
jmp
push
adc
pop
mov
and
test
mov
sti
int3
push
ja
jle
inc
inc
cmp
pop
ret
push
push
pop
scas
fcmove
add
leave
mov
cmpsl
or
test
pop
nop
mov
mov
aas
inc
ret
fdivrs
in
sbbb
iret
xor
xchg
add
cli
pop
add
jle
cmp
popf
xchg
outsl
std
adc
add
fwait
mov
cmp
xchg
adcb
xchg
and
cs
cmp
enter
scas
js
push
or
jp
sahf
dec
mov
lea
xchg
adc
jecxz
push
jne
out
test
clc
je
push
or
das
pop
dec
pop
inc
sub
outsb
jbe
in
fisubl
dec
leave
daa
mov
mov
mov
aaa
lcall
sbb
xor
mov
js
jne
sbb
ljmp
in
sub
adcl
xor
cli
jmp
outsl
push
lods
fisubs
in
out
fucom
mov
or
mov
ds
pop
pop
outsl
cmpsl
lock
sub
dec
and
sub
sbb
jae
test
pop
jge
mov
rorl
iret
inc
cwtl
mov
sbb
jnp
cmp
and
mov
cld
jle
jg
scas
jb
pop
push
dec
int
cmp
xor
xchg
fisttpll
or
jecxz
xchg
push
add
fwait
jnp
test
mov
jg
mov
das
cmpb
repnz
pop
bound
int3
push
xchg
push
fstl
pop
hlt
mov
xchg
push
cmpsb
add
jbe
jns
loop
hlt
inc
inc
add
mov
in
je
mov
popf
rolb
mov
movsb
push
int
imul
imul
jg
xlat
roll
lock
sub
repz
xor
mov
xor
mov
mov
mov
lods
int3
rorl
scas
stc
or
aam
fiaddl
das
pop
es
pusha
aad
hlt
adc
jb
aam
xor
jns
sub
xor
imul
movsl
icebp
aam
pop
int
inc
cmpsb
xor
sete
fidivrs
dec
add
jnp
lods
mov
in
push
dec
aas
dec
sub
mov
jbe
and
pop
mov
jmp
mov
jo
cli
out
jne
stc
inc
sbb
push
dec
pop
and
sahf
dec
push
jmp
push
sar
mov
scas
shr
jnp
out
push
jb
ljmp
aas
mov
add
xor
ja
icebp
fiaddl
iret
mov
mov
imul
dec
inc
out
xor
mov
jmp
test
pop
scas
pop
xor
lods
lret
xor
rorl
mov
pop
sbb
push
shr
jle
inc
ds
xlat
aaa
xor
stos
mov
adc
rolb
lods
subb
mov
mov
inc
repnz
pop
repz
aad
fidivrs
xchg
mov
cmpsb
adc
rcr
and
xchg
repz
bound
bound
mov
add
insb
xor
inc
mov
arpl
add
stos
scas
in
push
shll
cmp
xor
jmp
and
leave
addl
push
les
out
jg
aas
push
lcall
push
add
scas
fwait
add
in
adc
push
out
sahf
mov
fwait
call
repz
push
xchg
repnz
mov
mov
jle
mov
out
mov
xor
sahf
test
nop
pop
push
inc
xor
into
into
mov
fdivrp
outsl
dec
inc
imulb
xchg
push
mov
cmc
mov
push
cmpsl
in
movaps
sub
daa
movsb
push
and
scas
pop
das
addr16
jne
push
popa
das
addl
xchg
push
sbb
dec
dec
xchg
test
mov
out
adc
mov
cmpsl
sbb
sub
adc
imul
mov
push
and
push
decb
fcomi
dec
sbb
push
insb
xor
inc
jo
mov
push
adc
popa
dec
mov
sar
jnp
xchg
jmp
aad
cmp
movsb
inc
enter
push
hlt
and
test
mov
in
fidivrs
inc
lahf
sbb
stos
add
xlat
sub
aam
push
inc
cltd
hlt
imul
jge
cli
shll
or
and
push
outsl
out
jo
mov
xchg
shl
cmc
mov
add
jge
mov
in
and
xor
aad
scas
mov
xchg
jp
test
pop
dec
popf
cmp
aad
or
sbb
jmp
subb
loop
imul
mov
push
loope
leave
push
imul
lds
cmp
sbb
jmp
xlat
jmp
sti
dec
mov
fildll
icebp
push
stos
xlat
pop
xchg
or
mov
xchg
pusha
stc
push
pop
and
pop
je
xchg
popa
loopne
jnp
add
add
lahf
cmp
xor
dec
xchg
and
inc
iret
loopne
mov
push
add
sbb
cmpsb
push
sbb
fldcw
jae
jge
cltd
scas
xchg
xchg
pop
iret
ficomps
in
cmp
mov
test
add
test
sub
gs
std
cmp
jne
xchg
mov
fdivs
push
jns
fiadds
rorb
hlt
cmp
test
lret
xchg
cmp
xchg
or
xchg
bound
mov
shrl
and
rol
cld
adcb
sbb
mov
faddl
cmp
fcompl
out
fcos
or
or
cmovg
mov
xchg
sub
js
mull
outsb
aad
mov
loop
dec
cmp
movsl
push
push
xchg
add
mov
ljmp
cmp
movsb
mov
mov
mov
cmpsl
sbb
sub
rol
out
inc
js
insl
hlt
mov
xchg
lret
sub
pop
das
cmp
lock
std
mov
movsb
push
ret
dec
ss
sar
xchg
in
jg
xchg
cld
xchg
mov
mov
imul
cmc
mov
imul
sti
jbe
aam
push
pop
je
push
mov
and
add
sbb
jg
outsl
jo
negb
sbb
mov
xor
mov
js
xchg
mov
clc
push
insl
push
sbb
addb
cmp
popf
fwait
jge
adc
ja
push
mov
leave
subl
push
add
cmp
jl
dec
cmpsb
clc
or
sbb
test
jno
fistps
xchg
cmc
cmp
push
ljmp
es
inc
inc
nop
ja
cmp
mov
pop
push
jae
mov
mov
int3
xor
mov
jno
stc
pop
pusha
fwait
cltd
or
mov
mov
inc
movsb
jbe
and
jb
in
in
mov
cmp
jne
nop
lock
dec
test
lea
scas
xchg
leave
jne
pop
add
add
stos
mov
pop
pop
lods
jle
add
lds
dec
fiadds
pop
iret
aad
sub
xor
imul
or
call
pop
sbb
lock
push
dec
xchg
ret
sub
push
xchg
lods
mov
jp
dec
shlb
int
add
fwait
cmp
inc
dec
pcmpeqb
and
xor
mov
dec
add
nop
mov
pop
dec
adc
sbb
push
mov
mov
sbb
negb
enter
cmp
cmp
sub
sti
dec
daa
xchg
jl
jecxz
mov
mov
lret
mov
pop
mov
sbb
cmp
inc
mov
sub
push
pop
cmp
std
pop
and
push
cld
pop
inc
mov
pop
push
shrb
adc
aad
sbb
mov
ljmp
mov
mov
push
lods
xor
sbb
push
jmp
fistps
in
out
inc
cmp
pop
stc
cmp
mov
daa
icebp
push
dec
stos
sbb
pop
call
lods
shlb
inc
shll
adc
mov
pop
jp
add
in
xor
add
inc
ja
cld
cmovl
or
stos
mov
stc
test
pop
jnp
pusha
sub
or
jmp
jns
insb
rcr
sbb
xor
scas
ret
scas
cwtl
adc
icebp
mov
pop
fdivrl
inc
jmp
jl
scas
clc
test
pop
jb
es
sub
mov
xor
call
jno
jge
out
push
stos
imul
lret
mov
xlat
enterw
iret
xor
cmp
or
sbb
sbb
lods
pop
inc
or
or
scas
and
js
insl
xchg
jle
ljmp
sub
movsb
ljmp
aas
cmpsb
cmpsl
fists
dec
xchg
xlat
jl
mov
loopne
push
xor
push
aas
outsl
mov
mov
push
mov
test
push
mov
or
aaa
push
stos
xchg
out
mov
fdivr
xlat
ret
pop
and
or
out
decl
xor
fwait
push
adc
xor
icebp
cmp
or
sbb
nop
cmp
mov
fdivl
lods
incb
mov
gs
aam
je
out
or
cmc
lods
popf
aam
jbe
inc
mov
jecxz
xchg
push
enter
mov
rol
in
inc
dec
cwtl
sti
jo
pop
lahf
fwait
mov
sub
shr
pop
mov
shrl
and
je
adc
sub
mov
jge
inc
mov
inc
shll
ret
push
jns
std
fsubrl
jle
xchg
imul
pop
int
subl
mov
cmp
mov
or
cmp
repz
data16
rcll
mov
daa
subps
push
ja
sahf
jno
leave
dec
rclb
ds
push
ss
arpl
insl
clc
sbb
leave
fistpll
jp
xor
outsl
pusha
add
dec
out
mov
daa
add
aad
inc
and
pushf
loope
mov
or
and
in
scas
clc
mov
jns
je
popf
xor
incb
lahf
dec
push
pushf
or
pop
loopne
out
movsb
divl
das
data16
cmpsl
push
jne
movsb
out
fcoms
adc
pop
push
test
aam
test
and
out
out
push
jnp
pop
imull
jbe
and
mov
cltd
fsubl
out
int
shll
sahf
mov
or
jle
popa
out
in
enter
mov
mov
push
addl
push
dec
ret
lcall
xor
sbb
arpl
xchg
das
pop
aam
pop
mov
mov
jne
jg
jns
adc
pop
arpl
outsb
int3
cmp
jecxz
inc
test
rolb
ficomps
sbbb
repnz
into
les
sbb
lds
outsb
pop
cmc
cld
mov
xchg
mov
sbb
lods
sbb
out
and
insl
fwait
cli
imul
loope
aad
push
sti
push
xchg
inc
mov
js
cmp
pop
dec
cld
shr
xchg
clc
outsb
or
dec
lods
arpl
idiv
mov
cltd
outsl
pusha
test
loope
push
sahf
stos
rcrb
pop
mov
div
dec
les
or
decb
jmp
fildll
sub
or
movsl
out
adc
les
sbb
inc
aad
into
es
mov
push
mov
outsl
push
xchg
push
dec
push
cli
mov
add
sarl
imul
lcall
hlt
pop
ljmp
lahf
push
je
rorl
ja
mov
lds
mov
push
jg
jecxz
jae
repz
gs
mov
pop
mov
in
lcall
insl
lock
outsb
and
add
out
pushf
jl
xor
enter
movsb
adc
ljmp
lds
adcb
enter
and
repnz
and
fdivrl
sbbl
push
mov
adc
cli
xchg
pop
adc
ror
in
push
das
adc
or
out
inc
arpl
and
pop
cmp
ret
in
repnz
into
mov
sub
outsb
out
loope
out
data16
lahf
jl
sub
test
jp
notl
ret
roll
or
jl
into
test
jae
xor
mov
mov
insl
rol
jmp
push
pusha
and
mov
add
jb
test
repz
cmpsl
leave
loop
aad
imul
cmpsl
push
or
aad
sub
sbb
incl
das
dec
push
jp
jo
fwait
cs
adc
push
push
rcll
push
loope
in
jmp
sbb
sub
xor
jl
loop
test
lods
pop
call
add
test
and
icebp
adc
test
push
or
int
push
lea
jecxz
lods
je
test
dec
les
dec
push
jecxz
sub
test
pop
xor
aad
aam
or
inc
leave
mov
mov
outsl
shll
mov
negl
inc
add
ss
pop
mov
mov
mov
jns
lcall
mov
mov
test
xor
push
or
cld
mov
data16
mov
dec
je
inc
xchg
xlat
sbb
sub
pop
rcrb
imul
or
out
hlt
repnz
cmpsb
aaa
test
adc
scas
add
loopne
add
cmp
adcb
pusha
mov
sub
sbb
push
add
fadd
ss
out
jmp
inc
lret
decb
in
cmp
jge
lods
push
rcll
cld
ret
ds
sbb
leave
sub
or
jno
xor
add
aad
je
ss
test
int3
out
test
xor
sub
std
adc
jle
inc
push
pusha
lahf
cwtl
xor
in
inc
inc
mov
or
icebp
push
enter
jecxz
sbb
xor
and
fwait
mov
sahf
pop
mov
xchg
aad
push
outsl
sar
pushf
adc
sbb
je
or
xchg
insb
lahf
mov
jmp
and
jmp
inc
fcmovb
fmull
les
rcrl
sahf
insl
xchg
sub
lods
dec
adc
inc
mov
ficompl
hlt
cs
push
je
sbb
cmp
divb
lods
jns
loope
or
not
dec
inc
mov
pushf
lods
mov
sbb
xor
fwait
pop
push
jp
push
inc
cmp
pop
jbe
adc
push
push
jnp
and
jnp
jg
test
imul
wbinvd
cwtl
mov
out
dec
roll
dec
sub
inc
cmpb
sub
das
imul
stos
subl
pop
sub
ljmp
push
jp
stos
xorl
test
sbb
adc
iret
rcl
jmp
pop
mov
les
in
jmp
cltd
lret
mov
mov
mov
xor
xlat
sub
cmpsb
dec
adc
hlt
dec
mov
gs
fcmovnu
fcmovnu
popa
sbb
leave
cld
ljmp
dec
and
pop
cmp
rolb
cmp
hlt
fs
adcb
lods
mov
mov
loope
adc
lahf
push
addr16
popf
pop
xor
or
xchg
into
mov
mov
xchg
scas
mov
imul
lods
xor
mov
adc
lea
repz
xchg
les
and
mov
fisubs
test
jbe
bound
ficomps
pop
inc
jg
mov
sti
cmp
mov
sub
loop
push
pop
ret
lods
dec
popa
inc
and
inc
push
je
outsb
sbb
outsb
dec
xcrypt-cfb
cmpsl
bound
xor
mov
jbe
add
out
repnz
vmovss
jae
push
mov
rcl
and
adc
push
insb
popa
sub
jmp
cmp
divl
ret
lahf
mov
loope
ror
push
fstpl
sub
inc
dec
mov
pop
jae
jno
dec
dec
cs
lret
sbbl
fs
pop
loope
popa
push
arpl
aaa
lret
mov
lea
stos
fbstp
cmp
sarb
push
movsl
sbb
or
gs
pop
cmp
mov
pop
dec
ficoml
testb
cwtl
pushf
sbb
mov
inc
insl
cmp
jmp
arpl
push
test
xchg
int
mov
icebp
jmp
adc
in
stos
ret
lods
jb
lcall
cmc
insl
xchg
lds
adc
pushf
loope
dec
and
stc
dec
das
repnz
inc
and
inc
aam
xor
or
data16
push
and
lret
dec
cld
mov
and
dec
scas
rorb
lcall
movsl
repz
enter
nop
aam
pop
ja
cmp
dec
add
filds
testb
sahf
xchg
cmp
pop
int3
cmp
in
xor
rol
lret
jbe
ds
loopne
inc
xchg
movsb
push
imul
hlt
xchg
shrb
out
mov
rolb
ret
adc
or
xchg
mov
daa
mov
call
aaa
pop
fsubr
xchg
sub
mov
push
cwtl
mov
cmpsb
sub
push
outsb
cmp
je
pop
sub
add
adc
xchg
sbb
sub
clc
and
out
daa
adc
dec
nop
push
je
mov
or
push
inc
rol
sbb
stc
sub
mov
lods
xchg
scas
mov
mov
mov
stos
rcll
orb
or
push
call
enter
jnp
adc
stos
sarb
lods
das
rorb
loope
cmc
sbb
jne
shl
das
push
mov
lods
pop
cmp
sbb
inc
rcrl
mov
add
add
gs
ds
jbe
pop
stos
ss
push
and
repnz
ljmp
and
or
popf
mov
pop
inc
mov
xor
mov
pop
jae,pt
gs
cs
cmp
xchg
jl
out
mov
aam
dec
es
xchg
stos
mov
inc
jp
push
aaa
push
push
fstl
sahf
cs
test
jle
add
sbb
pop
add
ss
pavgw
inc
jmp
das
mov
fistpl
or
jg
je
sub
lahf
shll
call
pop
popa
aam
jecxz
fcomps
mov
mov
sbbb
pop
in
mov
test
dec
mov
pusha
out
aaa
ret
mov
data16
sbb
xchg
pop
dec
ffree
cmpl
loopne
enter
fs
sahf
and
shl
dec
push
cmc
outsl
addl
cltd
subb
dec
nop
lcall
jge
xchg
xchg
and
sbb
inc
lods
sub
and
ds
cmp
inc
xchg
add
fstpt
lret
dec
imul
xchg
cltd
iret
stos
sarb
out
push
add
jl
in
pushw
enter
jge
sbb
popf
pop
xchg
test
cmp
or
push
adc
addl
push
ret
jp
mov
inc
clc
lods
test
xlat
sub
fsubl
mov
cmp
dec
jno
mov
lret
icebp
xchg
add
add
add
mov
lahf
xor
mov
fbld
or
rorb
mov
stos
cs
bound
jge
je
mov
push
xchg
fcmovu
test
mov
mov
ror
or
sarb
inc
sbb
jmp
lcall
xchg
adc
std
into
add
dec
add
and
or
pop
cs
test
cmp
ret
shl
mov
loop
sub
nop
pop
jg
aad
cmp
mov
shrl
cmp
mov
ret
clc
dec
lret
mov
xchg
add
test
or
add
mov
lret
xchg
xor
and
pop
or
fs
sub
aas
or
push
pushf
mov
inc
outsl
jo
push
pop
jl
pop
mov
out
addr16
mov
push
xor
in
test
stos
and
out
aas
rorl
add
or
jle
loopne
hlt
test
arpl
mov
dec
in
ss
mov
fmull
lods
add
pop
sub
dec
data16
mov
adc
xchg
inc
lret
sub
notl
in
fsub
outsl
in
push
push
push
mov
dec
mov
dec
push
and
cmp
sahf
mov
xorb
outsl
mov
ret
dec
dec
repnz
mov
lock
dec
inc
imulb
mov
pusha
popf
in
xchg
mov
decb
scas
out
sbb
pop
mov
ds
adc
adc
dec
popf
out
out
ljmp
xlat
shll
shll
loope
xor
and
sub
jnp
xchg
dec
inc
ja
cmpsl
or
fmull
mov
out
sub
lea
jno
jae
xchg
jne
dec
jb
add
xchg
sub
sub
das
sbb
cmp
insl
shrb
cmpsl
ret
in
aas
or
out
xchg
adc
pusha
mov
sbb
adc
jne
adc
and
dec
scas
cs
andl
bound
mov
push
out
push
xor
in
pop
sub
pop
shll
repnz
push
testl
dec
inc
xchg
cmpl
or
push
mov
sub
xchg
lahf
mov
scas
mov
mov
sbb
js
dec
cmp
test
and
or
jae
bound
jne
inc
dec
push
add
dec
adc
int
push
inc
pop
add
cmp
xchg
push
pop
inc
fs
xor
addb
pop
sbb
and
push
lods
popa
clc
mov
pop
mov
fnstcw
jl
xchg
sub
rcr
mov
rsqrtps
pop
mov
ret
loopne
inc
jo
mov
adc
and
jmp
add
mov
or
cmp
push
fnsave
xchg
and
stc
int
add
out
clc
cltd
icebp
lret
lock
orl
out
xor
cmp
dec
xlat
add
and
mov
cld
jae
add
cmp
fcomps
enter
xchg
lret
lods
xor
into
xor
and
push
dec
mov
bnd
ss
xchg
call
adc
sub
mov
clc
fstpt
repz
mov
dec
cltd
outsl
cmp
test
dec
xchg
rcrb
and
pop
sub
iret
call
bound
mov
cmp
cwtl
xor
mov
ret
adc
push
enter
jmp
jl
nop
xor
cmc
xchg
pop
int
adc
insl
mov
xor
push
scas
jnp
pop
repz
nop
ja
mov
fsubs
jno
cld
mov
stos
sahf
ret
push
inc
pop
loopne
in
je
test
iret
hlt
scas
lret
sub
out
fisubrl
mov
xor
pop
dec
push
xchg
jp
mov
mov
sbb
mov
adc
pop
addr16
pop
dec
lcall
fstp
xchg
fildl
sub
int
xor
movsl
mov
cmp
iret
and
or
dec
iret
roll
xchg
popa
mov
mov
imul
fistpl
scas
lahf
add
xchg
dec
test
or
popf
sub
aas
lcall
icebp
out
lea
sub
jno
js
test
adc
popa
test
mov
mov
sub
loopne
mov
cmpsb
or
jmp
cli
cs
std
shll
fistl
jns
inc
mov
pop
loop
mov
and
cmc
xorl
sbb
cmp
mov
mov
or
lods
lds
test
push
sub
mov
mov
pop
and
cmp
jns
and
xor
adc
test
addr16
fmul
sbb
pop
jbe
inc
xor
ficoms
jno
mov
cmp
pop
sarl
jae
jno
pushf
jae
cmpsl
out
inc
dec
xchg
xchg
dec
xor
jmp
dec
xor
lods
lds
and
addr16
push
inc
paddw
iret
xchg
test
and
or
or
sahf
fsubrp
push
data16
push
push
mov
cmp
or
push
push
push
push
and
mov
or
movsb
sub
jle
out
les
ds
das
ret
sub
sub
aaa
add
and
inc
les
xor
add
mov
jno
subb
outsb
mov
popf
jecxz
rcrl
inc
xchg
push
adc
adc
outsl
lock
sbb
fisttpl
pop
mov
into
incb
int3
fadd
push
pusha
mov
pop
je
jl
data16
xor
sar
dec
stos
loopne
cmp
mov
js
js
ret
leave
lahf
push
mov
add
dec
push
sub
dec
aam
ret
in
inc
out
add
mov
inc
mov
jmp
mov
mov
mov
cwtl
dec
out
cltd
lods
and
pop
mov
iret
in
lods
inc
icebp
and
dec
add
mov
mov
adc
cwtl
xor
push
imul
dec
add
xor
mov
lea
cmp
lret
jae
pusha
cmpsl
mov
push
inc
sbb
or
and
daa
mov
xor
imul
and
jns
jl
aad
clc
jno
mov
enter
inc
lea
sbb
dec
xor
lods
outsl
aas
pop
mov
dec
inc
pop
jge
push
in
outsb
int3
ds
mov
xchg
mov
add
dec
icebp
jne
shll
rcrl
loopne
pop
inc
pop
loope
sub
push
mov
out
pop
pop
shrl
jp
cmp
mov
sbb
dec
inc
les
jmp
jnp
dec
shrb
jae
mov
xchg
mov
sbb
lahf
aad
xchg
sbb
dec
enter
pop
popa
dec
dec
clc
adc
shl
cmp
push
dec
jp
clc
jl
pop
adc
ds
scas
xor
add
push
aam
pop
into
jmp
in
xor
aam
xlat
mov
into
fwait
push
mov
pop
cli
add
pop
or
sbb
es
dec
scas
loop
sarb
inc
imul
cmpsl
aam
movsl
lahf
adc
add
sarl
adc
lcall
scas
pop
subl
repz
in
mov
scas
enter
jno
stos
pushf
test
xchg
pop
sti
ja
clc
cmp
cmpsb
inc
dec
sbb
or
xchg
pop
sub
xchg
sbb
out
pop
mov
in
imul
je
mov
stos
inc
int3
push
lcall
int3
test
pop
popa
repz
xchg
jp
lret
fcoms
cmpsb
subb
icebp
fidivs
jecxz
mov
loopne
sbb
or
out
xchg
push
or
fdivrl
adc
lea
xchg
stos
push
mov
sti
insb
sar
int
outsl
sbb
ds
sub
in
daa
out
sbb
add
xchg
je
cs
jmp
std
frstor
mov
cmp
sbbb
xor
mov
xlat
push
xor
cmp
xchg
sbb
ret
mov
jnp
cwtl
pop
shlb
mov
xchg
and
mov
pop
popa
cli
orl
lock
ficoml
add
mov
es
xchg
xor
pop
pop
jnp
mov
das
rcrb
hlt
mov
xor
push
jbe
push
sub
xchg
in
and
add
add
pop
lret
cwtl
repnz
sti
dec
or
and
push
and
jbe
je
sti
insb
stc
mov
xchg
mov
lahf
cmp
xchg
sub
or
rclb
add
mov
sub
sbb
pop
scas
xlat
sti
nop
sbb
sahf
stos
fisttpl
jo
pop
hlt
push
pusha
or
mov
push
ds
xor
rolb
jmp
fbld
pushf
inc
rcrl
dec
jno
fcmovne
ret
add
outsb
mov
and
mov
pcmpgtb
and
cmp
add
es
jecxz
add
lods
mov
pop
pushf
xchg
aas
or
popf
fimull
fnstenv
xchg
mov
jl
xor
adc
shlb
mov
aas
cmp
xchg
xor
mov
sbb
ret
xchg
fwait
in
hlt
sub
dec
sbb
xchg
add
ret
in
inc
andl
pusha
lods
push
dec
sub
jl
push
adc
sub
cmp
movsl
ud2
xor
inc
lds
fcomps
lret
xchg
mov
add
and
lods
loope
aam
stos
movl
dec
push
les
jge
fists
mov
inc
gs
lods
push
fwait
xor
inc
pop
inc
xchg
rclb
lock
out
lods
jns
push
xor
mov
in
jg
sbb
jecxz
sarb
dec
add
in
aad
adc
adc
jns
xor
push
cltd
arpl
sub
cmpsb
sarb
dec
mov
insl
in
rorb
inc
adc
test
xchg
jl
add
dec
mov
out
test
xchg
mov
jl
jp
adc
movsl
pop
les
fnsave
sbb
sbb
adc
rcr
push
test
icebp
push
xchg
jbe
ret
add
aad
mov
add
out
fstpl
adcl
mov
mov
pop
cmp
leave
lret
dec
jnp
lcall
insb
out
in
mov
jns
xchg
gs
mov
cmp
dec
jle
lock
mov
sub
out
fucomi
cmp
and
fs
or
push
rcrb
mov
dec
enter
nop
insb
mov
dec
fildl
lea
sarl
loop
adc
add
popa
cmc
adc
hlt
imul
dec
loop
push
adc
dec
xchg
lret
lock
push
out
mov
pop
push
aad
dec
cmp
faddl
fisubrs
mov
shrd
mov
mov
inc
push
mov
push
or
inc
xchg
jecxz
stos
je
in
dec
dec
sub
mov
rorb
xchg
xchg
mov
cmp
stc
test
sbbl
mulps
stos
inc
mov
cmpsl
mov
add
inc
popa
notl
int3
les
out
lds
inc
cmpsb
cmp
inc
add
insb
add
adc
sbb
inc
and
bound
and
pop
scas
dec
push
push
adc
into
cmovns
mov
sub
int3
int
ficomps
fadds
add
stos
int3
iret
sbb
lods
inc
mov
dec
mov
test
xchg
ja
pushf
adc
bound
xchg
mov
pop
cmp
lods
mov
repnz
test
xor
in
pop
xchg
xchg
test
rolb
daa
shll
cwtl
outsb
or
lods
push
xor
je
loopne
out
jecxz
cld
cmp
imul
push
cmp
out
jno
cmp
out
in
add
add
mov
mull
in
cltd
mov
jns
cmp
push
xchg
add
daa
xlat
repz
test
pop
sub
add
pop
loop
movsl
popf
jae
inc
pop
addr16
mov
mov
out
cltd
mov
cli
popa
fsts
cmp
mov
loope
jge
and
icebp
xchg
sub
repnz
adc
sub
loopne
aad
in
test
mov
sbb
mov
cmp
int
sbb
je
std
jae
pop
push
rorl
lods
and
mov
mov
mov
cmpsl
psadbw
imul
mov
pusha
cmp
jne
cli
punpcklwd
lock
lock
inc
mov
push
jnp
rcrl
xlat
aas
mov
xchg
xorb
dec
and
adc
mov
sti
lcall
and
iret
lret
mov
add
ret
fs
test
lret
mov
loop
mov
xor
or
sbb
js
add
jb
stc
cli
add
out
daa
jp
mov
rorb
jp
enter
cmc
faddl
jbe
mov
fcompl
test
pop
push
jns
scas
sub
shrl
cs
cmp
add
dec
insl
push
repz
in
dec
das
mov
jmp
pop
add
sbbl
xchg
lock
test
movsl
push
mov
test
movl
lods
or
mov
cmp
xor
out
lcall
jecxz
int3
mov
lahf
and
dec
pop
icebp
icebp
stos
or
pop
scas
sahf
imul
mov
pop
lods
nop
dec
shrb
cmp
adc
dec
ret
xor
sbb
inc
jns
fnstcw
mov
cltd
jo
test
xchg
iret
and
lds
push
lcall
sbb
les
call
and
icebp
mov
out
lcall
daa
std
test
test
sub
push
add
adc
sub
xchg
test
jne
std
pop
cmp
fldt
popa
adc
pop
cs
aad
cmp
insl
sahf
dec
test
push
andb
dec
iret
cmpsl
repnz
les
inc
add
push
orb
cmc
jbe
cmpsb
add
cmp
std
test
rep
push
or
pop
push
shll
cld
pop
leave
add
mull
faddl
and
test
loope
add
jne
cmpsb
adc
mov
cs
push
rolb
mov
xor
xchg
cmc
fs
sahf
push
xor
mov
pop
repz
jp
out
int
je
scas
ret
xchg
enter
stos
std
cmp
inc
add
dec
ss
push
sub
inc
xchg
lods
arpl
cmpsl
cmp
mov
mov
scas
orl
data16
adc
repnz
xchg
adc
es
inc
sahf
pop
mov
inc
sub
fstps
inc
gs
daa
out
pop
cwtl
xor
or
call
lret
ds
int3
std
fidivrl
xchg
xor
mov
mov
in
into
sti
jo
push
cli
mov
dec
loope
mov
inc
inc
jae
dec
cli
mov
dec
adc
mov
dec
sub
mov
jb
idivl
pop
std
out
fcoml
sahf
mov
mov
lret
mov
cli
in
pop
bnd
sub
push
add
sarl
imul
push
xlat
pop
sub
cmp
mov
jns
cmp
push
leave
xchg
adc
daa
ja
mov
pusha
jb
in
ret
repnz
rolb
test
jmp
jae
jbe
lock
xor
ja
add
fsts
fsubs
daa
pop
mov
jmp
or
push
push
add
push
mov
cli
sti
icebp
les
cmp
jo
lea
rorb
inc
or
lods
loopne
mov
fmuls
pop
fwait
lock
test
mov
cmpb
dec
push
mov
xchg
mov
sbb
adc
imul
shl
incl
adc
pusha
daa
push
xchg
hlt
out
inc
push
sbb
pop
add
mov
cmpsl
push
mov
lcall
dec
andb
xorl
test
jle
mov
or
jb
shll
movsb
sarb
jg
ss
mov
cmp
arpl
movl
into
and
or
sbb
stos
mov
loopne
jp
aaa
cmp
push
dec
stc
sbb
adc
mov
adc
lods
mov
xor
adc
testl
ja
stos
insl
lret
push
jbe
inc
pusha
shlb
push
add
test
pop
in
add
testl
je
incl
divb
cs
sub
mov
mov
mov
jnp
addl
xchg
xchg
notb
stc
sub
xchg
cmpsl
ds
mov
ljmp
inc
cmpsb
repnz
mov
aas
lahf
sbbb
in
pop
push
fnstcw
and
mov
xlat
loope
addr16
dec
mov
mov
adc
sti
cld
adc
xor
jne
pop
add
imul
mov
mov
xchg
test
push
aas
mov
gs
push
cs
sarb
pushf
mov
inc
bndstx
rolb
xor
dec
je
mov
and
shrb
cmc
call
loop
sub
js
inc
stos
sahf
inc
test
mov
movsl
mov
pop
stos
inc
adc
push
andl
popf
loopne
adc
inc
sub
sbb
xchg
dec
push
push
out
ficoms
movsl
mov
xor
ret
fiaddl
fimuls
clc
in
cltd
mov
repz
in
pusha
pop
or
pop
fisubl
shll
cld
ficoms
adc
adc
fisttpll
pop
push
add
dec
mov
mov
icebp
sub
lret
push
cmp
inc
sbb
pop
xor
or
dec
adc
sub
fcoml
dec
hlt
sbb
stc
push
and
xor
add
loopne
mov
xchg
cmp
mov
push
cmp
dec
repnz
aaa
out
mov
call
outsl
pop
call
and
sub
ds
cmpsl
push
aas
cmpsb
or
or
mov
movsl
iret
push
cmc
xor
adc
jbe
sbb
insl
pop
mov
jle
adc
push
jge
cld
mov
pop
push
cmp
push
mov
js
xchg
mov
inc
add
jecxz
inc
ds
jae
mov
out
shl
xor
jle
mov
push
xchg
pop
dec
xchg
mov
mov
xchg
push
sub
gs
push
inc
mov
pop
testl
lahf
stos
pop
mov
lret
outsb
pop
orl
out
or
das
mov
das
movsl
loop
sbb
xchg
sub
leave
leave
add
add
repnz
std
insb
scas
fbld
lret
arpl
xor
mov
out
jo
push
loopne
fs
mov
mov
ss
mov
and
and
cltd
add
inc
fwait
adc
icebp
push
lcall
out
fisubrs
lods
add
dec
xor
divl
pop
sub
shll
shr
xchg
les
sub
dec
pop
xchg
jbe
xorl
mov
or
std
fidivl
xchg
fsubrl
sahf
xchg
lods
pop
stos
cmp
notb
mov
inc
push
ret
popf
xor
mov
push
sub
nop
aas
loop
mov
push
lret
mov
xor
gs
push
lret
test
jg
jb
pusha
fldenv
cmp
or
dec
es
lods
cmp
mov
xor
lahf
mov
pop
cli
xchg
imul
subb
insl
jp
sub
out
sub
adcl
pop
mov
leave
pop
shrl
push
movsb
das
mov
xor
loop
mov
push
add
inc
lds
repz
push
sub
mov
lds
aas
out
mov
lods
add
mov
xor
cli
bound
lds
sub
cmp
ljmp
fwait
push
xor
lock
daa
mov
pusha
fnsave
les
aam
sbb
shlb
fnstenv
lods
test
gs
sub
ljmp
shll
ja
xor
loopne
push
call
cmp
mov
lcall
cmpsl
psubusb
loope
inc
call
jle
mov
cmc
sbb
jno
scas
xchg
and
xor
cltd
pushf
xchg
inc
add
imul
mov
test
cmp
movsl
dec
shll
mov
insl
mov
fcoms
mov
xlat
mov
pop
testb
inc
inc
xor
outsl
push
loope
lcall
inc
push
fistps
sarl
adc
xlat
shlb
or
mov
pop
stos
shlb
push
adc
out
aam
cmpsl
sbb
fsubr
push
stc
or
fsubrl
std
mov
sub
fdivrp
mov
add
lret
mov
push
mov
jb
push
lods
add
sar
push
aam
mov
jmp
pop
push
loope
cmp
jnp
add
inc
pop
mull
mov
pop
ret
mov
inc
out
push
inc
dec
mov
xor
lds
test
add
into
cwtl
dec
mov
mov
mov
repz
shrb
xchg
fidivs
aam
outsb
loope
test
ret
into
jns
mov
sbb
nop
outsl
xchg
xor
out
dec
or
jns
inc
adc
cmp
mov
mov
push
ret
mov
jnp
pop
js
mov
mov
sti
xor
imul
scas
sahf
dec
stc
test
mov
add
into
popa
mov
fisttpll
mull
bound
push
dec
jnp
jmp
movsl
jecxz
lret
or
mov
fdivrs
pop
sub
mov
out
and
push
outsb
cmc
rol
xor
or
cmp
les
cmp
js
push
mov
test
and
jp
push
adc
push
dec
jb
out
mov
mov
in
mov
fldcw
push
sahf
mov
cmp
add
rorl
sti
push
inc
fisubs
mov
or
fs
sub
aam
mov
inc
lods
cmp
movl
fmul
sub
subl
out
pop
xchg
jge
fsubrs
pop
popa
nop
pop
xlat
add
mov
jnp
js
or
in
xor
pushf
pop
xor
sub
push
dec
test
stos
jl
sub
jmp
notl
cmp
out
das
add
pushl
xchg
subb
hlt
xchg
mov
push
or
and
dec
mov
jne
mov
sbb
push
lds
push
mov
fs
lahf
add
lods
rcr
push
mov
jge
sbb
je
repnz
mov
xor
test
aam
sbb
jp
sub
jg
xor
pop
aam
mov
xor
mov
jae
fldt
pop
and
xchg
jle
in
addr16
ja
mov
rcrb
dec
xor
out
testl
int3
addr16
cmc
add
xchg
dec
arpl
push
push
jno
out
daa
xchg
pop
or
jne
dec
gs
lret
cld
inc
into
lret
adc
stc
or
lock
test
rclb
pop
mov
xchg
je
sbb
inc
je
push
mov
imul
jge
sti
or
cld
shr
test
push
xor
add
mov
repnz
push
movsl
and
or
push
push
imul
scas
xlat
mov
jg
dec
insl
mov
out
test
mov
out
sub
std
sbb
loope
loopne
mov
js
mov
sbb
pop
and
sbb
xchg
jg
mov
adcl
cmp
out
push
bound
clc
sarb
pushf
cmp
xchg
dec
aad
xor
scas
pop
push
or
adc
jge
cmp
cmpb
mov
push
lock
popf
iret
jbe
loopne
and
sbb
sub
pop
fidivrl
inc
in
fwait
pop
sbbl
or
cltd
mov
or
aaa
jne
and
test
daa
push
cwtl
xor
mov
mov
inc
arpl
mov
push
js
xor
sbb
fs
daa
adc
push
sbb
or
jno
cs
jge
insb
test
gs
mov
sub
int
xor
and
jp
dec
inc
mov
es
into
out
sub
sbb
or
lock
lret
sbb
and
dec
mov
rcll
push
into
pop
inc
enter
enter
cwtl
lock
xchg
jp
jge
cmpsb
lret
lods
jae
stc
xor
adc
insl
dec
cltd
outsl
loope
sbb
jno
and
jg
add
xchg
mov
loop
ja
push
sbb
and
cmc
ret
sti
mov
stc
clc
inc
xchg
imul
jge
inc
or
fadds
out
ja
mov
mov
sti
les
pop
out
lods
repnz
lahf
xlat
ss
sub
mov
imul
pop
mov
mov
ret
dec
xchg
lods
adc
enter
aaa
sub
mov
or
out
out
shrb
or
lea
insb
cmc
loop
outsl
loope
movsl
jnp
sbb
or
add
in
cmp
in
insb
int3
push
pop
jecxz
mov
test
jl
push
cmp
xchg
mov
jns
and
nop
xor
mov
dec
hlt
sahf
xor
adc
scas
push
movsl
cltd
insl
xchg
jmp
xor
test
push
cltd
sbbb
js
out
or
jne
sub
lods
test
js
cmp
loopne
mov
sarl
fldl
cli
and
inc
cmp
push
xor
roll
adc
xchg
pop
mov
pop
and
dec
je
mov
outsl
popf
xchg
and
fwait
sahf
lret
push
imul
jnp
pop
inc
dec
adc
mov
fsts
clc
xor
dec
fistps
loope
ret
and
and
ds
sbb
nop
ja
fmuls
stc
dec
jg
jmp
in
repnz
fs
xchg
mov
loop
xchg
sub
mov
adc
jb
clc
aam
xchg
xchg
sar
inc
mov
movsl
mov
jl
add
loope
mov
js
and
cli
sub
in
sarl
cmp
or
jmp
sbb
inc
xor
xor
int3
call
mov
xchg
out
add
push
xor
loope
add
shlb
fidivrl
mov
push
cmp
and
in
xlat
loope
adc
int3
shlb
andl
cmc
pop
stos
add
sbb
push
adc
pop
cld
inc
mov
sbbl
xchg
xor
mov
adc
imul
add
mov
aas
mov
lock
fldl
mov
fsubl
push
fdivrl
mov
fcmovbe
jbe
mov
mov
xchg
sarl
push
icebp
jns
push
adc
outsl
dec
jns
adc
dec
stc
xchg
leave
pop
jb
cmc
cmp
das
int
jecxz
inc
lock
xchg
push
std
test
loopne
push
or
and
out
pop
push
xchg
jle
dec
xchg
test
lret
inc
aad
test
adc
clc
jp
mov
sub
xchg
idivb
inc
add
jecxz
testb
dec
jp
or
movsl
sbb
lods
out
jbe
lret
loop
xchg
mov
sub
push
cmpb
test
adc
pop
pop
cmp
call
addb
mov
das
stos
fwait
ret
cli
add
mov
mov
mov
inc
or
add
mov
adc
dec
xor
add
mov
in
test
lcall
andl
lret
push
sbb
addl
pusha
stos
stos
js
mov
mov
pusha
sbb
xor
jecxz
cmp
push
sub
push
in
jnp
jecxz
push
or
ds
pop
and
insl
xor
mov
jl
cmp
add
test
xchg
and
aad
sub
nop
mov
daa
test
xchg
mov
test
mov
gs
repz
inc
mov
outsw
lret
push
xor
sbb
int
lods
imul
dec
sub
sar
bound
wbinvd
mov
dec
stc
inc
and
jae
sbb
lcall
and
addr16
xor
fildll
jb
jl
add
add
sbb
sub
lods
std
in
lock
imul
aaa
clc
cli
pop
mov
or
aaa
out
stos
pop
xlat
cmpb
cmp
xor
int3
or
sub
or
or
cmp
icebp
ror
jae
and
lea
sub
cmp
movsb
cwtl
cld
jmp
inc
stc
mov
dec
in
mov
fidivrs
xchg
jmp
push
mov
insl
insl
mov
lods
mov
fisubrs
mov
sbb
xchg
jle
out
inc
cmpsl
xchg
ret
in
mov
mov
scas
mov
enter
sbb
mov
and
pop
arpl
lea
cmp
inc
aam
ffree
mov
dec
mov
dec
jmp
xor
inc
jo
adc
jecxz
ljmp
and
push
lods
out
push
add
lea
dec
mov
lds
iret
es
arpl
outsl
pop
mov
mov
xchg
ss
push
cmpsb
inc
mov
mov
push
mov
add
ja
ret
test
xor
outsl
add
das
fadds
cmp
xor
lahf
mov
es
das
stc
movsb
hlt
mov
js
scas
or
xlat
je
lcall
xor
adc
andl
hlt
push
sahf
mov
ds
mov
jp
xchg
lcall
jne
push
ret
ljmp
or
adcb
inc
jp
aaa
cmp
sub
cmpsl
stos
fisttpl
xlat
out
inc
mov
xchg
icebp
out
clc
or
pop
jmp
popf
mov
fnsave
dec
pusha
fcmove
inc
push
sbb
jo
shll
repnz
nop
and
std
sbb
out
cmpsb
enter
cmp
inc
popa
cmp
fidivrl
scas
shlb
push
fsubrl
into
pop
ds
notb
push
push
sub
mov
std
cld
dec
cmp
xchg
jmp
pop
mov
mov
clc
repnz
jo
adc
dec
pop
xorb
add
notb
or
out
mov
xchg
mov
das
xchg
test
mov
aas
dec
stc
stos
jl
cli
ds
and
imul
add
scas
cmpsb
imul
stos
aas
pop
test
int3
cmpsb
jge
sub
sub
icebp
jno
daa
mov
mov
out
popa
out
pop
lret
test
push
inc
fsubl
xchg
lods
int3
fwait
cmp
incb
add
lock
lret
sarb
add
push
mov
push
test
mov
jns
dec
or
xchg
ljmp
xor
cmpsl
fmuls
out
movsl
cmc
cltd
lcall
data16
sbb
dec
sbb
andps
adc
rcl
and
add
out
rcrl
popf
jae
mov
lock
repz
cmpb
in
scas
dec
pop
repnz
in
mov
insl
sbb
inc
pop
sub
ds
inc
arpl
add
sbb
ds
mov
pusha
sbb
xchg
adc
aad
jp
hlt
outsb
xchg
into
subb
int3
stos
popa
sub
rcr
jl
fidivl
xchg
adc
mov
scas
sub
inc
push
mov
pusha
mov
mov
sarb
add
mov
pop
in
jae
add
ss
mov
mov
mov
stc
sarl
sti
push
test
sbb
xchg
ret
xor
cli
add
out
or
lods
fiadds
idivl
dec
rclb
sub
add
cwtl
out
shlb
mov
rcrl
xorl
arpl
ja
fiadds
ja
cmpsb
jb
loope
sbb
mov
mov
ret
test
movl
cli
mov
movsb
cltd
in
sub
sub
xor
cltd
jo
jl
dec
mov
je
stos
out
cmp
aam
add
int
xchg
cld
add
mov
cli
int3
or
mov
in
mov
mov
push
cmc
or
fdivrs
ret
adc
aas
jecxz
or
dec
dec
xchg
je
cmp
scas
ljmp
adc
lcall
call
jl
push
inc
out
add
and
repz
xor
jae
xchg
adc
xchg
add
and
jecxz
divl
fsubs
xor
jg
or
jmp
jo
inc
add
roll
or
sbb
stos
jo
push
dec
cs
adc
push
popa
in
add
sub
movl
ja
inc
aam
pop
inc
mov
ja
mov
movsl
stc
xor
shrb
aas
into
aas
add
mov
adc
fldt
pop
xchg
jecxz
xor
fmull
out
addr16
adc
ret
mov
add
out
sti
and
inc
fsubrl
and
xlat
scas
inc
cmp
test
pop
daa
imul
mulb
mov
sub
mov
mov
push
fcoml
nop
rol
clc
mov
rorb
sub
jo
sbb
aad
fldcw
pop
cs
inc
iret
and
js
in
cwtl
inc
out
sbbb
rcr
mov
test
mov
inc
movsl
iret
daa
fidivl
pop
outsl
fidivrl
mov
in
adc
inc
mov
add
popa
xor
pop
repnz
in
inc
dec
leave
sbb
ficompl
adc
cmc
mov
sbb
cmp
xor
and
push
leave
adc
jle
dec
xor
push
cld
ljmp
push
fcoms
xor
sub
rolb
adc
fcmovb
cltd
pop
gs
aad
and
les
mov
mov
jae
into
pop
test
fsubrl
es
jle
addr16
scas
imul
xor
clc
mul
popa
add
stc
and
xchg
mov
incb
ret
cmp
adcb
jns,pt
push
test
add
sbb
into
pop
mov
jno
loop
jbe
addr16
insl
adc
dec
xorl
push
mov
popa
cmpxchg
pop
and
push
fwait
adc
mov
fbstp
out
lock
jo
xor
icebp
dec
pushf
jle
int3
jecxz
xchg
push
push
mov
adc
sbb
cmp
cmp
cmp
mov
jnp
mov
outsb
cmc
mov
sbb
mov
sbb
mov
mov
mov
in
inc
js,pt
movsl
mov
pushf
cmp
mov
push
nop
mov
leave
inc
and
adc
aas
push
aas
aas
bound
xor
xchg
hlt
mov
loope
sbb
frstor
pop
stos
adcb
inc
mov
add
out
repnz
pop
xor
dec
arpl
sbb
pop
ja
sbb
out
adc
adc
ret
out
es
das
or
flds
pop
xchg
push
xchg
lret
pushl
or
fidivl
and
mov
insb
xorb
mov
mov
lods
inc
push
mov
fcoml
cmp
lret
clc
add
enter
sub
call
in
cmpsl
outsb
cmovg
add
jg
mov
stos
add
add
pop
push
jle
jp
sbb
lcall
in
pop
sub
pop
add
fldt
and
push
mov
mov
adc
rcl
movsb
adcl
mov
jae
movsb
lds
pusha
or
mov
dec
jmp
popa
jno
cld
jl
pop
and
scas
push
pop
lret
inc
shlb
cltd
mov
mov
xchg
pusha
repz
mov
cli
mov
mov
and
inc
push
stc
or
rolb
mov
mov
xchg
push
enter
int3
imul
mov
push
inc
pop
pop
movsb
mov
mov
jb
and
mov
aaa
shll
jnp
fdivl
inc
out
jno
cmp
popa
mov
xlat
sbb
fildl
sbb
data16
rcll
inc
mov
das
jecxz
pop
or
xor
ja
movsb
loopne
test
cmp
cmc
jns
mov
mov
mov
loopne
fs
cli
jns
xchg
mov
sahf
scas
mov
xor
in
cmp
xor
je
add
inc
ret
cmp
xchg
scas
sbb
jb
addr16
cmp
adc
ficoml
out
xchg
inc
xchg
das
testl
sbb
leave
stc
loopne
fs
push
movsl
pop
into
or
push
ljmp
daa
and
sbb
bound
stos
in
sbb
push
fstps
leave
mov
jecxz
sub
fcmove
xchg
mov
xor
cmp
rclb
cmp
dec
jp
xchg
loopne
lcall
iret
mov
xor
mov
dec
mov
outsb
xorl
fstps
fildll
shl
add
and
popf
push
lret
aas
sub
lock
cmp
iret
loope
push
pop
or
cmp
inc
iret
cmpsl
mov
add
stc
movsb
dec
fists
dec
jb
shl
clts
es
sub
aad
and
cmp
xchg
call
or
add
out
and
jno
imul
push
fidivrs
int
pop
rclb
jae
mov
mov
add
mov
pop
xor
fisttpll
leave
int
jmp
mov
fwait
xchg
sub
out
add
in
dec
testl
loope
mov
mov
mov
push
add
sbb
sub
jl
inc
pop
push
sub
aad
mov
and
test
es
lods
rcr
cmp
add
das
inc
stos
es
divb
jno
call
pushl
or
pusha
pop
xchg
adc
sbb
dec
popf
aaa
loopne
cld
dec
dec
mov
and
out
in
scas
push
pop
jo
pop
sub
push
je
sbb
mov
outsb
cmp
es
pop
jmp
fwait
adc
cs
adc
cmpl
xor
xor
pop
call
jecxz
repz
ret
mov
mov
jno
nop
push
add
stos
leave
mov
mov
mov
inc
or
subb
sar
loope
shll
dec
or
jmp
pop
lcall
sbb
setnp
lods
fnstcw
movsl
push
ret
or
mov
jg
xor
pop
imul
jg
pushf
shl
dec
ljmp
dec
xor
or
jae
mov
cld
and
repz
mov
pop
flds
jmp
push
jp
fs
cmpsl
out
sub
loopne
xchg
call
jp
jo
pop
jl
mov
jbe
lds
fs
aaa
iret
and
sub
sub
pop
cld
jae
aad
adc
sub
scas
cmc
cmp
pusha
pop
mov
adc
out
inc
push
faddl
mov
je
fsts
jge
lds
test
inc
popa
pop
sbb
mov
imul
stos
xchg
push
push
loopne
mov
dec
mov
cmpsb
push
repz
shl
cmp
hlt
out
mov
cli
fsubp
mov
or
push
test
jnp
sub
sbb
cmc
fists
lret
mov
mov
std
sub
imul
jne
sub
jge
push
mov
sbb
imul
fsubrs
push
push
inc
addl
cltd
mov
sarl
rcr
mov
jecxz
test
push
xchg
and
push
cmp
pusha
gs
in
adc
ds
call
ret
lret
outsb
addr16
add
dec
xchg
pop
stos
shrl
inc
dec
mov
clc
nop
jg
movsb
loope
add
std
inc
xchg
scas
and
fistl
cmpsl
jno
inc
xchg
arpl
adc
mov
shlb
test
xor
cmpsb
fcmovbe
pop
mov
jbe
push
aas
mov
ret
and
icebp
lret
push
lcall
mov
stos
out
mov
add
hlt
pop
dec
mov
iret
jmp
mov
adc
xchg
mov
arpl
mov
enter
sbb
push
cli
cltd
pop
xor
test
inc
jne
leave
sbb
xchg
aaa
pop
mov
mov
negb
cmpb
jp
xor
dec
pop
pop
mov
jmp
std
xlat
sbbl
dec
adc
dec
xchg
xor
fcoms
jl
xor
mov
or
les
mov
mov
cmpsb
mov
gs
xchg
mov
hlt
push
adc
dec
cltd
mov
iret
pop
das
leave
pop
xor
pop
dec
es
in
xor
mov
ljmp
enter
add
nop
push
mov
sbb
xlat
push
jbe
xor
push
fsubrp
sub
outsl
dec
xor
rclb
cmp
and
sbb
ficoml
mov
shr
ljmp
adc
and
add
fsubs
stos
fs
pop
outsb
mov
into
or
push
or
cmp
or
dec
rcrb
shr
shll
int
imul
mov
mov
shll
cmpsb
jmp
repz
aad
jbe
fwait
rorb
mov
pop
ds
push
lods
call
or
fcmovbe
popa
ss
inc
shrb
push
mov
xorl
hlt
or
addb
mov
mov
dec
adc
std
mov
pushf
movsb
push
ljmp
dec
rcl
mov
vmptrld
push
lods
jle
inc
out
test
xchg
call
es
and
orb
icebp
fiaddl
mov
dec
repnz
mov
inc
push
popa
mov
push
mov
outsl
mov
mov
pop
repnz
gs
sahf
in
push
shll
sbb
daa
movsl
scas
mov
enter
or
push
or
leave
add
xchg
jns
ds
subl
movsl
fidivl
inc
mov
pop
pusha
dec
mov
push
in
push
loope
pop
jmp
clc
popa
rcll
bnd
std
lret
call
sti
push
imul
mov
insl
mov
hlt
stc
fs
int3
sbb
pop
dec
decb
aas
jg
imul
sahf
mov
jo
mov
push
or
test
jae
add
into
in
loop
cmp
pop
ret
cli
mov
mov
jge
xor
shr
aam
mov
xchg
dec
cmp
negl
xchg
pop
adc
xlat
sahf
repz
jno
mov
xor
mov
push
xchg
xchg
cmpsl
xor
sar
jns
pushf
hlt
mov
mov
dec
sub
sahf
inc
jo
jo
pusha
inc
cmp
clc
mov
leave
fnstcw
xorb
cmc
and
push
je
das
pop
scas
xchg
popa
mov
scas
pop
push
test
sub
pop
xchg
adc
iret
jne
cmp
xor
loope
jp
push
push
dec
jl
lret
xchg
mov
pop
pushl
xchg
xlat
lret
cmp
fs
outsb
iret
scas
test
jmp
sbb
dec
clc
gs
or
mov
sbb
shlb
cmp
mov
popa
je,pn
dec
stos
or
xorb
sahf
lods
pop
fimull
adc
jnp
pop
pop
int
out
xor
push
stos
je
arpl
gs
fidivrs
cs
adc
call
test
adc
xchg
leave
jo
sub
and
jb
mov
pop
xchg
jmp
mov
xchg
adc
push
aad
mov
pop
mov
outsb
dec
pop
mov
jge
nop
xchg
nop
sub
pop
enter
cltd
inc
scas
mov
adc
icebp
icebp
push
call
cmpsb
ja
xchg
daa
sub
fwait
mov
mov
cmp
fdivs
add
lea
outsb
pusha
push
and
dec
in
jne
jge
xchg
mov
cmp
insb
enter
sbb
div
lods
fwait
mov
les
pop
push
mov
pop
cmp
into
bnd
cmp
and
or
divb
in
sbb
mov
sti
inc
ret
in
jnp
xchg
mov
inc
dec
push
dec
dec
repnz
cmpsl
std
and
or
loopne
lret
ss
rorl
cmp
lods
arpl
aas
fsubrs
push
mov
jmp
mov
xor
cltd
xor
out
dec
lret
dec
jnp
sbb
bound
in
or
push
mov
fwait
in
insl
sbb
int3
jb
jns
sub
cmpsb
cmc
mov
mov
sahf
inc
dec
push
sbb
aam
rcr
pushf
stos
cmp
add
push
fcomps
sbb
sub
pop
out
inc
sub
and
out
cmpsb
cmpl
arpl
insb
add
call
dec
push
mov
xchg
negb
cmpsb
mov
and
add
cmp
cmpsb
bound
popa
xchg
mov
popf
stc
jno
pop
icebp
mov
fidivrs
idivl
dec
sub
sub
add
pop
bound
lea
fs
xor
lcall
jmp
adc
xor
mov
push
ss
cmp
mov
pop
or
jae
adc
mov
mov
mov
push
sub
push
nop
pop
addr16
pop
xor
xchg
iret
mov
adc
sbb
mov
aad
insb
int
xlat
mov
aaa
into
jbe
repnz
sti
gs
xchg
fidivrl
ss
add
sub
rcrb
test
or
pop
or
fildl
cmp
mov
xchg
add
sbb
pop
mov
jp
sub
inc
outsl
sbb
sbb
lods
fdivrs
cmp
or
xor
bound
add
and
pop
mov
in
jbe
mov
cmp
popa
push
add
mov
out
je
ret
icebp
leave
fldenv
repnz
mov
xor
push
mov
push
jb
add
fildl
popa
gs
cltd
adc
insl
sbb
insb
mov
cmp
jl
cmp
sahf
mov
pop
jle
or
jp
xor
pop
ja
hlt
sub
sbb
adc
subb
jbe
call
test
adc
subb
add
out
ja
mov
into
gs
mov
dec
lret
xchg
pop
in
jecxz
jmp
inc
nop
leave
roll
add
mov
out
data16
mov
rorl
adc
cmp
out
adc
dec
mov
lahf
add
idivl
in
lret
popa
insb
cmp
lods
lods
faddl
or
sbb
sbb
out
pop
push
cld
insb
sbb
adc
xor
outsb
movsl
dec
cltd
aam
shrl
and
xchg
cli
insl
hlt
int3
daa
mov
push
rclb
mov
cwtl
sbb
adc
cli
clc
mov
dec
shll
dec
in
fsubrl
mov
aad
mov
push
sarl
dec
rorb
fsubrs
cs
and
rolb
pop
loopne
pop
mov
in
pusha
aas
out
cmp
enter
imul
les
dec
shlb
pop
inc
push
leave
mov
filds
mov
aaa
pop
fbld
fildl
lcall
mov
test
mov
das
out
pop
jbe
mov
mov
repz
cmp
outsb
jne
leave
fstp
xor
pop
rclb
hlt
push
dec
sbb
popf
stos
add
add
jae
mov
outsb
cmc
sub
xchg
sti
lods
sbb
call
and
insb
pop
call
lret
jae
jno
xchg
jecxz
imul
pop
lcall
jns
dec
xor
in
jne
je
dec
mov
xchg
rcll
xchg
jbe
mov
dec
rorl
inc
mov
rclb
push
mov
xchg
add
mov
sub
xchg
mov
mov
adc
xor
test
mov
lahf
lahf
jbe
aas
push
ja
ss
cmpsl
shrl
inc
clc
cmp
rorl
loopne
mov
rcl
jo
addr16
jg
test
or
lret
fildl
jb
mov
add
pop
cmp
fidivs
push
dec
jnp
pop
pop
or
mov
and
cmp
sbb
inc
and
sub
iret
aam
xor
jmp
pop
rcrb
cmp
jg
lock
or
xchg
inc
aaa
icebp
sbbl
and
notl
std
xor
out
leave
sub
xchg
mov
divl
sub
push
inc
xchg
or
in
sahf
mov
outsb
inc
sbb
test
cmp
dec
adc
mov
cmc
dec
in
data16
scas
mov
mov
into
xchg
mov
pushf
jb
gs
adc
add
popa
imul
jle
inc
out
stc
aaa
jns
jg
pop
fmuls
andl
mov
icebp
adc
or
sbb
xor
or
lds
scas
addr16
xor
push
xchg
mov
out
xor
test
ljmp
loop
aas
out
aad
mov
fisubl
test
add
fidivs
jae
xor
sub
jge
fdivl
lahf
pop
lods
add
jle
scas
sahf
ja
arpl
aam
loope
dec
pop
rcll
inc
ljmp
cwtl
adc
jbe
js
sbb
pop
push
cmp
jmp
icebp
lea
sub
ror
out
pop
or
push
xor
push
mov
loop
push
xchg
push
xor
adc
add
jle
jecxz
fwait
ss
adc
and
loopne
adc
xor
pop
and
sbb
jl
xor
push
pop
xchg
and
lcall
jle
icebp
adc
push
nop
call
inc
jo
les
jno
in
sarl
push
and
js
sti
mov
add
ja
scas
pop
mov
mov
jecxz
pushf
or
cwtl
out
lea
mov
repz
ret
insb
push
jp
orl
mov
fidivl
test
mov
jge
cmpl
pop
jmp
loop
cmp
imul
sub
inc
sub
out
push
inc
lahf
pop
test
sbb
dec
push
inc
nop
lock
add
mov
sbb
xchg
movsb
sbb
mov
addb
movsl
in
stos
dec
jnp
mov
add
inc
enter
arpl
popa
xor
dec
mov
enter
mov
push
imul
and
out
lahf
lds
cld
movsl
es
dec
outsl
loope
xor
sbb
cmpsl
mulps
lods
fadds
pusha
push
and
inc
sbb
mov
fcomps
jbe
hlt
inc
out
jo
movsb
imul
lock
in
cmp
pop
cltd
sub
sub
and
imul
gs
push
sarl
jl
sub
faddl
in
incl
lods
dec
out
xor
pop
push
dec
push
fisttpll
or
push
inc
fldenv
mov
addr16
int
leave
ljmp
js
insb
pushf
xor
and
les
mov
inc
jnp
sub
push
icebp
sarl
cltd
dec
aas
lods
pop
cli
orb
jbe
mov
out
inc
lret
sbb
lret
in
mov
enter
insl
mov
fwait
mov
arpl
xchg
xchg
pop
cmp
lea
subl
cmp
dec
js
andb
mov
sub
add
scas
push
pushw
mov
mov
daa
stos
repz
pop
daa
lods
cli
push
jge
adc
ds
xchg
cli
ss
jmp
cld
push
cmpsl
mov
mov
into
sbb
mov
mov
aad
mov
push
mov
pop
mov
fnclex
mov
inc
xchg
push
jbe
icebp
cmpsl
or
scas
ret
dec
mov
mov
stos
sahf
inc
push
mov
mov
push
xor
mov
dec
scas
subb
inc
or
pop
mov
mov
mov
dec
cmpsl
enter
rolb
cmc
push
test
pop
add
xchg
push
add
lahf
imul
aam
pop
cmp
cmp
fnsave
mov
and
inc
cld
xchg
xor
shrb
push
out
sub
aad
xlat
or
push
popf
lret
ret
xchg
rorb
mov
mov
mov
gs
ja
repnz
jmp
push
bound
xor
mov
mov
or
push
psubsw
fnstsw
push
aas
fsubs
stos
out
push
xor
xchg
xchg
mov
sub
mov
fsubrl
mov
adc
sub
filds
lods
jno
mov
sti
aaa
xor
cltd
xchg
mov
inc
cmp
jl
dec
movl
out
inc
push
arpl
sub
cmp
mulb
push
clc
adc
mov
adc
stos
push
jecxz
aas
popa
cli
mov
fistpll
andl
mov
out
inc
cmp
mov
mov
dec
add
shll
enter
sub
hlt
aam
movsb
mov
lea
xchg
notl
das
mov
push
pop
fwait
sahf
adc
mov
push
fldl
subl
test
and
xor
or
movsl
scas
inc
pop
dec
iret
testl
jns
pop
incb
mov
gs
iret
int3
jo
sbb
pop
push
sub
or
push
xor
inc
test
out
andl
std
les
add
adc
xchg
fdivs
jg
inc
pushf
cmp
mov
xchg
lret
test
jl
mov
sti
pusha
push
sbb
adc
in
sub
xchg
inc
push
cltd
enter
jns
mov
icebp
jns
and
cld
icebp
or
nop
push
xchg
scas
mov
pop
ja
stos
aaa
subl
test
mov
fiadds
lahf
out
jg
loope
cmp
mulb
icebp
in
xor
mov
insl
cwtl
daa
insl
xchg
in
lret
test
push
or
icebp
invd
cwtl
negb
mov
ret
out
pop
daa
push
inc
pop
aad
sbb
or
cmp
sqrtps
pop
pop
pop
mov
xor
mov
ret
sub
mov
inc
pop
push
int
mov
repnz
outsl
enter
sti
and
jno
xor
push
xchg
lret
scas
jmp
cmpsb
fadd
or
adc
jle
jmp
inc
dec
popa
sub
dec
ljmp
jnp
sarb
pushf
rclb
dec
or
jne
adc
into
mov
daa
or
dec
mov
fprem
push
push
cmpsb
push
cmp
pop
mov
sbb
test
cmpsl
adc
pop
jo
enter
sarl
mov
gs
mov
adcl
jae
push
dec
pushf
iret
push
xchg
lea
scas
mov
add
popa
loope
or
popa
pop
xchg
sbb
mov
inc
push
js
icebp
lcall
adc
shrb
mov
call
or
pop
sarb
dec
pop
lea
or
push
add
push
xchg
inc
and
lea
inc
js
inc
aam
adc
aaa
jnp
inc
jmp
fs
shl
pop
sbb
jns
loope
xchg
xlat
mov
rclb
lock
pop
insb
lret
out
pop
outsb
mov
insb
adc
cwtl
lret
enter
jecxz
popa
clc
leave
shll
in
in
push
inc
or
ljmp
sbb
rcrl
sbb
pop
js
pop
mov
or
mov
or
sbb
das
pop
leave
adc
inc
leave
repz
pop
data16
xor
pop
stos
lea
ds
push
icebp
push
in
in
xchg
popf
push
sbb
int
rolb
cld
in
dec
fbstp
push
add
adc
mov
push
orl
mov
xchg
punpcklbw
lahf
push
lea
inc
inc
fld
push
aaa
mov
push
in
clc
push
std
inc
sbbl
sbb
pusha
out
cmp
loopne
out
addb
push
cli
push
sub
push
lret
add
fcmove
incl
std
jbe
ljmp
dec
and
iret
pop
out
in
stos
inc
sbb
xor
add
addr16
imul
jno
jle
cmp
pop
out
les
pop
adc
aaa
add
sub
sub
adc
xor
lds
aaa
adc
fucom
adc
and
rorl
incb
sbb
cwtl
mov
nop
dec
jns
fadd
call
stos
jns
aas
add
adc
or
mov
popl
scas
ja
add
cmc
xlat
jge
ror
xchg
or
test
sbb
imul
cmp
ret
pop
scas
clc
pop
stos
xchg
cli
out
rcll
mov
lock
ja
imul
out
pop
push
movsl
fcomi
fimull
mov
dec
push
inc
int
xor
inc
push
jge
dec
lcall
push
nop
dec
daa
fwait
ret
in
pop
push
mov
out
sti
clc
sbb
mov
pusha
add
daa
lds
push
adc
addr16
pushf
sbb
pop
les
pop
fstps
es
popf
cmp
repz
mov
push
inc
mov
or
jae
je
mov
xlat
lret
popl
sub
movsl
inc
icebp
mov
lahf
data16
rol
cmp
ss
jb
sbb
push
cmpsb
and
shlb
sbb
lret
roll
inc
adc
idiv
adc
jbe
popf
scas
sbb
push
roll
gs
ror
mov
jbe
inc
movsl
push
insl
cld
mov
daa
in
out
sbb
mov
cmc
pop
std
dec
or
jae
inc
mov
push
sub
or
push
pushf
or
mov
inc
test
sahf
mov
sub
test
add
lock
jl
mov
cmp
fdivl
sub
or
icebp
cmp
xor
cli
push
imul
fs
push
outsb
cmp
sbb
fdivp
fmuls
xor
dec
lds
dec
or
addr16
daa
lret
sbb
rcll
pop
dec
xor
mov
or
mov
xchg
test
imul
popa
push
push
and
fdivrl
xchg
repnz
cmp
xor
mov
sti
aas
mov
ss
mov
cmc
mov
xchg
sbb
add
cmpsb
dec
loopne
xchg
ja
sbb
sbbl
add
cmpl
iret
movsb
mov
jmp
ror
gs
js
dec
inc
sub
jb
sbb
insl
and
jns
adc
test
lds
inc
hlt
mov
fisttps
xchg
out
mov
clc
add
and
mov
pop
mov
lcall
add
cli
cmp
and
and
push
cwtl
push
mov
sub
mov
insl
stc
test
aad
jp
sub
leave
pusha
mov
and
dec
inc
cs
xor
insl
adc
pop
repnz
call
rol
or
xchg
xchg
cmp
or
sahf
pop
mov
nop
es
jl
xor
arpl
mov
pop
aas
in
insb
cmpsl
lods
mov
jle
shr
cwtl
lret
jge
push
cmpsl
out
lods
or
and
fistpll
mov
andw
in
xor
lea
add
nop
and
or
cli
xor
cmpsl
xchg
cmp
scas
lret
cmpb
nop
loope
dec
sbb
and
adc
aaa
inc
addr16
pop
adc
pop
inc
inc
imul
dec
scas
adc
jg
ljmp
mov
mov
js
cmp
sbb
cmp
or
loope
push
fiadds
lcall
jns
gs
loop
mov
repz
push
inc
mov
js
es
lods
and
push
shlb
xlat
jg
inc
cmpsl
ss
cwtl
jle
ds
jo
dec
mov
movsl
push
and
mov
xchg
pop
out
idivl
xor
in
dec
mov
imul
data16
rorl
arpl
shl
test
lahf
push
adc
xlat
mov
movsl
das
movsl
or
fstp
repz
cltd
or
movsl
mov
scas
xor
loopne
pop
sbb
pop
push
pop
pushf
and
aam
mov
lea
sub
push
inc
decl
sbb
loopne
pushf
stc
les
cmpsl
std
fmuls
xchg
das
notl
sub
iret
data16
jecxz
push
cmp
sbb
movsl
test
xor
mov
inc
xor
outsb
jecxz
outsb
and
repnz
cmp
fdivrp
sahf
adc
adc
test
je
sub
lcall
sbbb
or
aad
adc
jl
fwait
push
and
inc
and
sti
sbbb
mov
mov
push
and
int3
loop
cmp
jb
inc
leave
pop
cmp
add
lahf
ds
aaa
js
mov
cmp
lret
pop
outsb
jb
outsl
and
mov
pusha
sub
xchg
loopne
xlat
inc
clc
mov
pop
shll
mov
adc
arpl
or
xchg
xchg
and
push
add
mov
inc
imul
insb
mov
ds
or
mov
stos
pop
enter
jle
push
or
in
mov
test
int
cs
mov
mov
sub
jbe
mov
jae
push
inc
mov
push
xlat
mov
jmp
xchg
pop
xlat
rcrb
ss
pop
fbld
mov
xor
data16
mov
es
ret
movsl
bnd
push
fcmovb
or
inc
xchg
mov
adc
sbbl
xchg
fsubs
pop
test
loope
lea
ds
pop
inc
aas
cli
sbb
inc
mov
rcrl
lods
ds
sub
cwtl
test
mov
push
int
lret
mov
iret
lret
popa
pop
ret
jl
flds
mov
mov
int
mov
mov
mov
or
mov
cld
test
push
dec
pop
aad
fbstp
push
ljmp
mov
out
lods
ds
cltd
lea
jmp
stc
xor
je
daa
test
add
push
cs
add
mov
rcrl
test
push
push
es
jp
aaa
push
cmpsl
mov
in
mov
cmp
lahf
test
adc
jbe
pop
add
cltd
push
inc
out
adc
adc
or
sbb
ret
inc
ret
outsl
shrb
movsb
sbb
outsb
pop
pop
inc
jmp
imul
ret
in
xchg
arpl
dec
or
scas
icebp
sti
pop
mov
ret
pop
mov
andl
jge
jb
fldt
in
jo
push
outsb
ror
shll
xchg
shll
pop
dec
pop
xchg
dec
hlt
mov
stos
jp
popa
push
cs
dec
loope
mov
xchg
lock
push
repz
adc
cmp
cs
add
xchg
add
repnz
mov
cmp
pop
and
addr16
fs
jae
sub
icebp
aam
movsl
in
orb
xchg
cmpsl
hlt
and
cwtl
inc
sti
sbb
push
out
mov
sub
in
push
sub
fsub
mov
addr16
or
cmp
clc
dec
jle
in
sbb
lods
push
add
call
jno
mov
xor
mov
in
in
test
lahf
repnz
in
push
dec
jp
add
outsl
enter
lock
pop
push
dec
add
repnz
aaa
mov
mov
dec
lods
fs
inc
int
push
cmpb
xlat
mov
cmp
movsb
xor
aas
nop
icebp
mov
cmpsl
add
inc
cwtl
sbb
pop
sbb
stos
adc
jb
test
mov
rorb
mov
cmp
xor
xchg
sub
cmp
enter
push
daa
push
adc
cmp
and
mov
pop
push
fdivr
sahf
stos
int
add
arpl
jbe
lods
hlt
insl
mov
scas
pusha
xchg
iret
repz
adc
jmp
cmp
add
xchg
sub
enter
mov
mov
sub
dec
lods
pop
sbb
dec
loope
idivl
or
sub
mov
inc
add
jg
idivb
jo
sbb
iret
icebp
jns
sub
mov
add
mov
jae
aad
sahf
loopne
imul
test
jg
push
adc
push
jno
cmp
cli
pop
ljmp
sbb
inc
movsb
mov
in
dec
xor
sti
ja
jbe
jnp
lods
push
negb
inc
inc
mov
test
lcall
mov
fmul
jne
fisubl
popf
adc
sub
cmpsl
dec
cld
mov
pusha
cmp
clc
fcomp
lock
mov
lods
xor
arpl
jne
dec
jge
jb
leave
push
xchg
xchg
sbb
and
inc
in
mov
test
pop
jmp
test
repnz
test
mov
rorl
aaa
leave
inc
out
pop
enter
cmc
dec
pop
cltd
jge
sub
testl
add
dec
dec
cs
cmp
sbb
divl
sbb
and
into
inc
fwait
or
xchg
outsl
into
mov
pop
ljmp
mov
test
call
add
gs
lock
push
inc
lods
mov
pop
subb
sbb
ret
lea
jl
add
stos
push
fmuls
mov
and
push
dec
sub
pop
adc
jae
push
push
jns
hlt
pop
jmp
pushf
hlt
pop
mov
loopne
and
push
add
stos
hlt
and
mov
adc
and
mov
xchg
dec
add
or
fistps
sbb
mov
push
jno
mov
outsl
lcall
repnz
cmc
sub
fs
pop
incb
ret
mov
in
xchg
add
pop
call
jne
addb
lds
add
aam
xchg
ret
push
sub
clc
scas
out
in
inc
ss
sbb
mov
jae
push
enter
xchg
loope
adcb
add
lahf
sbbl
daa
aad
mov
xlat
push
push
mov
inc
jg
mov
jg
xchg
jne
add
mov
jg
rcrb
in
das
aaa
or
shrl
mov
pop
sub
popf
stos
call
push
insl
or
dec
cltd
xchg
hlt
lahf
imul
in
mov
inc
mov
js
loopne
dec
inc
enter
jbe
add
movsb
pop
and
pop
fstl
mov
test
mov
inc
xchg
cmp
sub
pop
mov
or
pop
xchg
enter
cmpsl
pop
mov
sbb
cltd
jp
fsubl
imul
lcall
xchg
repz
int
xchg
movsl
loop
mov
popf
dec
inc
cltd
pop
cmp
push
aad
push
fwait
lret
adc
popl
out
cmp
dec
fisubs
xchg
mov
in
pop
mov
dec
fbstp
and
inc
jnp
jbe
cli
shll
ficoml
sahf
ljmp
inc
dec
cli
and
pusha
mov
das
ror
xchg
mov
pop
mov
icebp
jo
or
inc
dec
cmpsb
jnp
pop
mov
idivb
jp
notb
lcall
push
ror
dec
in
outsl
mov
lods
testb
jo
fisttpll
inc
xchg
stc
data16
dec
jbe
xlat
imul
jg
insb
sahf
push
repnz
inc
mov
xlat
xchg
adc
movsl
int3
popa
mov
idivb
cmp
jmp
sbb
xchg
les
pop
xchg
enter
scas
daa
mov
out
daa
mov
sub
pop
mov
inc
adc
leave
or
xor
push
fistpll
cmpsb
rclb
add
mov
insl
stos
adc
rclb
sbb
cld
mov
in
ret
test
pop
aad
jle
cs
ljmp
inc
xor
ljmp
mov
pop
ljmp
lret
mov
cmpl
jg
sarl
mov
jbe
cmc
test
shll
arpl
xchg
insb
mov
shlb
pop
push
imul
xchg
mov
ds
in
push
inc
popf
pop
adc
daa
outsb
aas
pop
adc
push
jge
cmp
nop
sbb
or
outsl
mov
popf
cltd
sbb
fdivrl
mov
ret
imul
cmp
int
test
xor
in
test
xchg
daa
sti
jae
pushf
inc
leave
push
fs
test
inc
cmp
stos
ret
jge
mov
lods
adc
subl
adc
ss
mov
jg
xchg
es
and
lahf
insl
xor
notl
adc
sbb
inc
ss
or
pop
les
mov
cmpl
xor
mov
xchg
add
mov
push
loope
mov
test
push
aaa
push
ljmp
inc
movsl
cmp
cmp
int
xchg
jl
xchg
jle
int3
mov
inc
in
dec
in
aad
ss
les
addl
in
shr
mov
jmp
or
xchg
cmp
shll
add
test
lret
scas
push
push
or
push
cvtps2pi
pop
jp
shll
push
mov
pop
inc
filds
or
add
cltd
test
adcl
hlt
cmp
and
mov
mov
cmc
and
ds
ljmp
sub
pop
adc
dec
stos
mov
adc
pop
pop
insb
mov
jmp
mov
jb
add
arpl
aas
int
repnz
popa
outsl
jge
dec
xor
es
xchg
or
jns
hlt
iret
dec
dec
js
mov
ret
movsl
mov
addr16
in
pop
mov
aas
push
mov
cmp
pop
inc
jbe
ds
orb
cmp
pop
push
jl
pop
in
je
es
sahf
xor
jbe
ss
pop
sbb
xor
ds
mov
dec
orl
cmp
outsb
mov
push
jmp
mov
test
or
jb
adc
fwait
adc
xchg
pop
loop
adc
sub
test
in
cmp
je
loopne
pop
imul
lea
jne
pop
mov
mov
imul
pop
mov
jns
mov
dec
jbe
mov
add
mov
mov
nop
mov
out
xchg
leave
repnz
out
lcall
cmp
je
out
add
into
inc
not
push
jnp
mov
mov
fnstsw
je
fldenv
insl
mov
add
mov
sub
pop
mov
xor
out
adc
mov
mov
loopew
sub
push
lcall
mov
ret
pop
iret
push
add
and
sbb
mov
sbb
pusha
jl
add
push
cmp
fs
int3
mov
xchg
inc
mov
jno
mov
jle
out
mov
data16
xor
pop
pop
sub
jl
add
imul
andl
iret
daa
out
xor
jl
xchg
lods
cltd
xlat
push
cwtl
into
push
ljmp
nop
cmp
push
gs
scas
or
clc
xchg
hlt
push
leave
jecxz
loop
pushw
xor
push
mov
jno
cmp
dec
and
mov
mov
icebp
dec
mov
out
outsl
js
mov
lods
mov
fdivrs
add
add
daa
xchg
incl
and
dec
ja
jge
xor
sbb
call
mov
lods
add
dec
jnp
outsl
in
xchg
push
add
test
push
sbb
inc
xchg
dec
bound
test
fnsave
push
clc
clc
fcomps
hlt
adc
xchg
inc
xchg
outsb
dec
xor
push
insl
mov
jnp
mov
jmp
hlt
mov
pop
jmp
push
pop
push
loopne
push
arpl
mov
xor
mov
or
ret
mov
lcall
inc
test
cmpsl
in
lcall
bound
negl
leave
mov
inc
push
adc
outsl
nop
cmp
pusha
aas
add
xchg
sub
fbld
cmp
rclb
sbb
xchg
dec
lcall
int3
adc
je
add
cs
out
out
cltd
sub
lcall
mov
add
inc
lds
das
dec
cltd
insb
orb
jbe
jns
lret
jle
xchg
clc
int
mov
imul
call
sub
pop
pop
cmp
dec
dec
outsb
sti
std
nop
int3
fwait
xlat
xor
int3
jge
mov
stos
call
xchg
or
jno
aaa
dec
loopne
fwait
push
add
loopne
shll
xor
jp
inc
sub
rcl
mov
xor
mov
sarl
or
fnstcw
xor
out
push
out
pop
imul
adc
cmp
icebp
cmp
lods
popa
call
das
aas
enter
setae
xchg
data16
test
dec
into
push
mov
and
das
or
fsts
mov
and
mov
in
hlt
mov
ret
inc
mov
mov
sub
sahf
ljmp
das
fwait
or
push
dec
cmc
addb
stos
cmp
repnz
fisttpl
inc
ss
jmp
cld
xchg
cmpsb
call
das
inc
xor
mov
insb
jnp
or
xchg
mov
adc
lods
dec
dec
add
cltd
push
mov
das
pop
pop
test
mov
cmp
adc
push
outsb
fimuls
jg
mov
xchg
daa
xchg
inc
adc
lods
pop
lock
pop
cmp
pop
out
mov
stos
pop
lret
jg
sbb
lret
call
out
xor
xor
push
inc
add
jo
ja
jge
sub
popf
filds
sbbb
adc
sub
lods
cmp
rcrb
mov
xchg
jl
push
sbb
inc
stos
push
fistl
push
popf
ja
xchg
mov
pop
push
in
int3
pop
movsb
loope
and
in
ret
push
adc
mov
and
add
icebp
adc
jmp
lods
incl
lret
sub
add
jnp
sub
pop
clc
mov
ljmp
test
in
push
movsl
mov
pusha
inc
adc
lcall
inc
not
mov
add
and
ss
add
leave
pop
in
mov
cli
sub
sub
or
pop
xchg
jp
stos
inc
push
cmp
test
inc
in
or
push
mov
popf
pop
mov
or
test
pop
adc
in
jge
cmc
loope
shl
bnd
jp
mov
pop
ja
pushf
mov
repnz
stos
inc
jno
sbb
loope
push
push
scas
les
hlt
or
add
sbb
jl
jecxz
inc
cwtl
fs
adc
mov
repnz
std
jno
enter
cmp
pop
push
das
cwtl
outsb
jo
bound
fwait
stos
sub
call
and
cmpsl
cmpsl
xchg
xchg
sbb
les
push
xchg
and
fs
les
pop
mov
repnz
sub
lret
fsqrt
mov
mov
cmp
xor
dec
fwait
subb
adc
imul
clc
jl
out
jae
mull
lcall
aas
fisttpl
or
jae
shlb
mov
inc
sub
in
test
mov
add
push
pop
xchg
xor
out
data16
mov
jecxz
rcrb
jmp
stos
mov
inc
movsl
lret
inc
pushf
pop
xchg
mov
cli
cmp
xchg
and
sbb
dec
ret
notb
fisttpll
jg
sub
pop
xor
cwtl
clc
mov
shll
bound
arpl
sub
inc
lea
cmp
xchg
jnp
mov
xchg
inc
lahf
mov
pop
std
popf
pushf
in
cmpsb
mov
test
movsb
cmp
mov
push
mov
icebp
and
jb
xchg
js
cmp
mov
std
stos
cmp
xchg
imul
cs
shlb
loopne
pop
push
mov
cmp
rcrb
pop
xchg
push
adcl
sub
xor
jp
clc
scas
mov
imul
es
cmp
dec
xchg
in
movsb
scas
xor
pop
cltd
add
movsb
daa
push
sbb
je
lahf
repz
adc
cmp
subl
and
stc
xchg
sbb
das
adc
clc
pop
mov
aas
mov
mov
sahf
pop
in
negb
imul
push
add
sbb
sar
addr16
push
bound
in
ss
mov
push
pop
mov
xor
adc
mov
in
outsb
mov
lods
jnp
inc
repz
sub
add
jle
leave
mov
je
pop
imul
sti
lahf
movl
adc
add
sti
cltd
shlb
ret
pop
cmp
in
pop
shrl
adc
and
sahf
lods
cltd
push
cmpsb
add
fsubs
push
into
aam
mov
pop
sub
je
push
jae
cmpsb
mov
sbb
scas
or
fmull
stos
cmpsb
xor
cmp
je
push
mov
cmp
sti
pop
cmc
int3
xor
addb
xchg
inc
push
dec
aas
push
sub
sub
push
xor
imul
add
lods
addb
add
push
push
adc
jmp
fmul
xchg
mov
lock
mov
stc
jno
ljmp
xor
mov
inc
and
sarl
push
inc
push
inc
dec
xor
scas
cmpsl
gs
fcomps
jmp
dec
in
in
jecxz
sub
fcmove
jmp
and
dec
inc
mov
stc
push
jmp
inc
in
and
jl
adc
mov
aas
rcr
mov
and
mov
imul
inc
inc
mov
mov
mov
pop
mov
es
add
lea
jl
jp
inc
push
nop
push
mov
mov
ja
les
std
push
push
dec
adc
dec
cmp
add
in
or
push
sbb
xchg
fidivrs
adc
stos
outsl
fldenv
xlat
ds
fcmove
aas
or
pop
cmp
dec
xor
in
mov
lret
enter
jg
sbb
push
outsl
cli
ja
push
adc
push
sarb
xchg
adc
sbb
pop
or
in
outsl
es
pop
out
hlt
and
sbb
mov
cmpsl
xor
aam
imul
lods
or
repnz
leave
fldl
roll
cmc
sub
es
mov
inc
fisttps
ret
divb
repnz
fisttpl
outsb
ss
mov
cmp
xor
negb
add
xor
inc
jno
mov
mov
insb
fldl
sub
mov
push
movsl
in
pushf
stc
aas
movsl
cltd
mov
and
sub
xchg
pop
xor
add
mov
lahf
outsl
in
hlt
and
stos
loope
movsl
mov
test
es
pop
popa
push
cmp
or
cmp
lods
ja
cmpb
sbb
clc
mov
icebp
lcall
test
pop
adc
aam
sub
loopne
mov
aam
push
xchg
mov
pop
and
push
aam
in
jno
inc
jno
sbb
dec
cs
adc
and
jecxz
stos
movaps
pop
and
adc
cwtl
mov
add
cmp
or
adcl
xchg
jne
jno
push
rcl
xchg
dec
scas
jmp
push
push
push
rol
inc
je
xor
mov
in
nop
cli
mov
imul
jg
mov
fiaddl
lcall
xchg
mov
inc
test
mov
pop
clc
int3
in
xchg
fwait
xchg
iret
fistpl
push
mov
push
or
fwait
lret
adc
pop
test
adc
xchg
dec
pop
cmp
out
push
pop
xchg
cwtl
xlat
fidivrs
add
xchg
bound
pop
push
stos
sbb
ret
test
xchg
sub
out
fmul
jb
jb
push
int
mov
fwait
jmp
test
aas
or
push
mov
nop
fidivs
mov
pop
lods
icebp
or
fstps
das
cli
rcl
pop
adc
cmc
cwtl
push
out
jmp
ja
jle
push
xchg
adc
xchg
mov
sbb
jl
jg
add
mov
aaa
add
aad
jbe
push
shll
adc
les
imul
pop
ret
fimull
or
sbbl
xchg
in
sbb
jmp
daa
dec
xor
jmp
jns
repz
pushf
lds
ss
xor
jge
add
xor
lcall
std
dec
jo
pop
mov
cmp
jp
or
scas
inc
test
jl
scas
xor
and
lcall
xchg
aad
insb
fwait
dec
call
jecxz
cmp
pop
mov
daa
push
aam
loop
dec
daa
and
es
dec
xlat
lahf
cmp
sbb
in
mov
in
push
jns
push
out
cmp
mov
dec
ss
out
popa
add
test
orl
lods
adc
and
cld
cs
push
lea
sar
push
cmc
loopne
shl
inc
gs
jns
push
cld
jle
jno
jg
mov
xor
lock
lret
loopne
les
add
mov
push
sbb
lods
pop
xchg
mov
inc
push
icebp
push
mov
sub
inc
jge
mov
jnp
cmpsl
test
mov
xchg
mov
sti
or
movsl
xchg
out
adc
fbld
adc
into
adc
xor
add
stos
jns
scas
adc
js
out
pop
xchg
inc
add
in
sub
out
leave
mov
shll
fsubs
pusha
sub
repnz
aam
in
jl
push
add
or
lret
mov
jmp
push
aad
test
outsb
add
imul
decb
jp
out
test
cs
pop
push
jne
mov
aam
loop
dec
stc
daa
add
sbb
add
sub
dec
ljmp
daa
outsb
outsb
pop
les
mov
mov
jno
push
in
xor
call
add
jge
addl
or
mov
jp
xchg
mov
out
jp
shrb
and
or
jae
popf
stos
rorl
sti
fwait
lahf
sti
lret
aad
mov
es
bound
imul
pop
ja
or
or
dec
mov
pop
mov
push
dec
cld
pop
sub
add
pop
adc
or
lods
sahf
sbb
mov
cmp
ja
data16
into
pop
or
jns
fsts
loopne
imul
add
shl
push
push
and
hlt
mov
inc
sbb
mov
repnz
jle
mov
push
arpl
jae
insl
loopne
add
outsb
jno
mov
xlat
xor
stc
and
jnp
aaa
cltd
pop
int3
sub
stc
and
notl
pop
orl
adc
lods
xchg
shll
mov
notl
inc
ljmp
inc
mov
fsubs
ljmp
dec
and
hlt
js
xor
xlat
lret
cmp
aam
mov
cmpb
and
movsb
dec
lret
push
popa
add
add
adcl
fwait
enter
jecxz
sbb
loope
test
movsb
mov
pop
cltd
adc
lds
cmp
inc
cli
or
in
outsb
out
xchg
dec
gs
xor
cmpsl
mov
jns
imul
jo
nop
fstl
xchg
in
adc
mov
lret
in
hlt
bsr
aaa
jae
mov
fidivs
aas
int3
adc
push
adcl
movsb
sahf
mov
js
push
pop
add
mov
je
dec
sub
imul
mov
out
ja
test
mov
jb
mov
fsubrl
sahf
push
or
fadd
jl
cli
fcmove
sahf
or
mov
div
adc
jbe
mov
cmp
outsl
data16
out
les
add
icebp
fs
out
pusha
neg
scas
loopne
push
sti
sub
add
cmp
jp
lea
scas
xchg
mov
mov
xchg
pusha
inc
xor
pop
mov
popf
sbbl
jno
pop
lret
pop
or
and
sbb
inc
dec
or
cmovo
pusha
mov
adc
test
jge
lods
mov
inc
fstpl
test
loopne
outsb
mov
bound
dec
dec
stc
pop
add
scas
cwtl
nop
les
aam
addr16
lahf
add
aad
pop
aas
xor
stos
jge
lahf
cltd
push
push
insb
and
loope
jno
sbb
or
outsb
iret
fs
jbe
push
mov
cltd
mov
ljmp
cmp
cmc
push
mov
jo
mov
pop
int
mov
push
out
mov
fnstcw
xor
sub
adc
or
push
jb
jp
cmp
sbb
add
out
jp
push
dec
fnstsw
in
lret
incb
and
inc
dec
mov
call
pop
ljmp
cmp
xchg
in
mov
lret
push
in
out
mov
lahf
psrld
movsb
in
fistl
mov
into
push
dec
loope
iret
cli
aaa
popa
cltd
lods
popf
push
imul
seta
or
ja
adc
movsl
xor
je
aas
loop
data16
cmc
xor
dec
xchg
iret
es
xor
or
xchg
xlat
dec
and
inc
fcmovb
ja
inc
xchg
in
mov
push
cmp
cmp
sub
xchg
push
mov
bound
outsl
test
cmp
sub
xor
mov
fstp
out
imul
push
lea
xchg
shlb
inc
in
shl
mov
jle
push
test
push
jge
adc
xorb
lcall
pop
sub
pop
xchg
pop
mov
fcmovu
push
enter
add
outsb
jnp
mov
lock
sub
les
les
adc
push
or
imul
loope
push
dec
and
ja
popa
lret
xchg
xor
cmpl
jmp
and
js
push
fldcw
xor
dec
push
out
cmp
sub
insl
pop
jecxz
mov
mov
aam
idivb
les
xchg
adc
xor
sub
iret
fisttpll
fwait
inc
rcrl
or
sbb
lock
cmc
xchg
je
mov
ds
daa
mov
outsl
pop
dec
dec
lret
in
data16
mov
lret
sbbb
mov
bound
mov
in
mov
and
cli
jmp
fwait
les
pop
mov
cmp
mov
sarb
sbb
fbld
sbb
hlt
add
adc
stos
sub
insb
aad
scas
outsl
lret
mov
mov
pop
inc
sbb
xchg
inc
mov
or
nop
shrl
jge
loop
dec
lods
sub
xchg
int3
leave
popa
lret
iret
xchg
fidivl
mov
mov
cs
cmp
xor
es
push
push
push
insl
mov
addl
rclb
out
mov
cmpsl
lods
into
sub
repz
outsl
sbb
sub
fnstsw
mov
pop
xor
cmp
lahf
xchg
inc
mov
iret
jmp
stos
mov
jecxz
aaa
adcl
or
jnp
and
cwtl
mov
rcll
orb
xchg
dec
nop
pop
int
xchg
dec
inc
ret
lods
sub
cvtps2pd
test
or
fs
pop
dec
xor
hlt
cmpsb
js
sub
cwtl
movb
in
sti
call
test
test
push
jg
adc
and
fcompl
xor
cwtl
pop
and
iret
jo
insl
mov
sahf
ss
cwtl
js
inc
out
loopne
push
xlat
fimuls
mov
mov
test
jp
xchg
loope
sarl
imul
jmp
and
ss
fsubrs
mov
loopne
rcll
fwait
aaa
stos
mov
stc
mov
sub
sbb
enter
lock
stos
stc
cli
sbb
jmp
leave
push
sar
xchg
in
test
and
mov
dec
xchg
cmc
shrb
adc
mov
push
mov
out
imul
insb
xor
mov
cmp
add
cld
cmp
in
adc
insb
push
mov
or
subb
das
or
lret
pop
sbb
mov
imul
xchg
xor
sti
mov
in
mov
mulb
cld
jb
mov
adc
jle
rep
jb
stos
pop
mov
aad
push
in
adc
mov
jl
das
xchg
ja
push
sti
outsb
inc
mov
jne
iret
push
cld
inc
das
mov
mov
add
and
pop
jnp
mov
rclb
cs
xchg
movsb
in
cwtl
pop
xchg
ja
shr
lahf
daa
or
sbb
fcomip
ret
push
add
mov
mov
vcvtps2dq
mov
and
jae,pt
push
lret
push
jo
mov
ss
repnz
leave
test
popa
outsb
movsl
or
jge
iret
sbb
xor
dec
mov
inc
jae
and
loopne
and
sub
sar
inc
or
sub
ljmp
lock
ljmp
fdiv
arpl
adc
add
movsb
xchg
mov
sub
mov
movsl
xorb
cmpsb
imul
sub
push
pusha
mov
adc
loope
pop
dec
popa
and
icebp
xorl
lret
ret
jle
adc
ljmp
xor
out
jmp
pop
out
push
ja
hlt
mov
sbb
lea
xor
jo
mov
pop
leave
mov
adcl
sbb
dec
in
loop
adc
lcall
mov
jb
adc
xchg
sarb
push
mov
lock
ficoms
in
psllq
cld
sahf
cs
out
inc
loope
lret
pop
les
dec
movsl
sub
in
cld
jge
sbb
or
movl
adc
or
stos
push
xor
lock
pop
gs
icebp
test
xor
inc
sahf
push
add
inc
mov
dec
inc
jecxz
cld
out
pop
adc
mov
js
add
fadd
jge
xchg
xchg
mov
je
inc
xchg
iret
and
psrad
mov
dec
mov
testb
rorl
xchg
xchg
icebp
jb
mov
sbb
int
ret
push
push
xchg
add
dec
jg
std
adc
adc
sarb
or
adc
cltd
mov
and
mov
xor
jl
xor
xchg
push
hlt
add
mov
cmovno
int3
add
mov
fcomip
mov
cmp
das
dec
and
loop
pop
xor
outsb
iret
jae
scas
loopne
and
mov
lds
js
and
inc
cmp
call
out
cmp
fdivrs
ljmp
inc
enter
sbb
cmp
jp
adc
add
ljmp
jno
bound
adc
rolb
incl
mov
xlat
xor
xor
jmp
fsts
pop
and
rcl
mov
inc
ljmp
cs
insl
and
xor
cmp
int3
ja
sbb
out
mov
neg
xchg
push
jge
enter
jae
sub
or
inc
sub
cli
jg
fbld
jae
xchg
cmp
popf
adc
dec
inc
xchg
and
ret
imul
jle
cmp
sub
icebp
rcr
mov
arpl
outsb
push
or
movb
imul
cmp
in
lcall
and
push
xchg
xchg
outsl
pop
push
stos
je
in
mov
testl
jb
test
xlat
add
mov
loopne
or
ret
xor
cmp
fwait
dec
cmpl
jne
xchg
aam
sbbb
je
test
xchg
cli
test
ja
subl
xor
adc
sbb
ljmp
pop
xchg
outsl
jae
mov
sub
cltd
out
movsb
mov
sbb
inc
imull
adc
pop
test
sahf
inc
mov
lea
out
push
xor
ss
call
mov
sbb
jb
insl
iret
and
jge
mov
jne
push
out
test
add
push
mov
mov
pop
mov
setbe
mov
in
stos
movsl
cmp
xor
mov
sub
movhps
lods
cmp
call
sbb
pop
pop
loope
cmp
jg
cmp
ret
cmp
gs
inc
jl
pop
sbbb
xchg
icebp
fistps
daa
cmpl
out
pop
mov
addl
jg
addr16
fst
ret
mov
jo
and
sbb
lret
lods
adc
sub
test
movl
and
pop
ljmp
jns
iret
in
bound
cltd
jb
cmp
mov
fistps
cwtl
add
and
test
and
daa
stos
cmpsb
out
and
xchg
ss
pop
fstl
dec
mov
mov
sbb
mov
jl
daa
inc
xchg
inc
or
xchg
cld
pop
inc
lods
mov
cmc
sbb
or
stos
lods
ret
enter
mov
sub
ljmp
xor
sub
mov
bound
les
or
out
hlt
or
repnz
data16
repz
movsb
push
mov
sbb
jno
test
push
jecxz
lea
in
aam
bound
lcall
cmp
aam
shrb
jecxz
xlat
dec
cwtl
stos
xchg
mov
test
mov
aaa
pop
sbbb
lret
stos
push
ffreep
fstpt
adc
mov
xor
dec
imul
or
add
dec
aam
sbb
div
iret
or
lods
cmp
add
mov
out
jmp
mov
imul
int
push
shufps
es
jmp
pusha
add
enter
fsubs
pop
pop
sub
daa
jle
dec
sbb
sahf
jp
imul
insb
cmp
in
mov
shlb
and
scas
xor
sub
mov
push
ja
out
subl
lretw
mov
clc
pcmpeqd
mov
push
out
sub
xchg
and
shll
and
dec
or
inc
adc
mov
pop
inc
popa
js
jnp
add
je
sbb
mov
not
jge
jno
xor
cs
pop
push
xor
jmp
mov
test
pusha
outsl
pusha
mov
les
push
pushf
fstpt
and
pop
fists
jbe
movsb
sti
inc
mov
or
das
popl
mov
or
push
push
loope
mov
in
int3
pop
loop
mov
mov
push
add
aaa
sub
in
push
jge
inc
loopne
jo
into
repnz
int
stos
mov
ljmp
xor
aaa
inc
inc
xor
jo
negl
cmc
inc
xor
xchg
jmp
jge
in
movsl
fsubs
fstps
shll
sbb
fisubrl
mov
mov
idivb
push
mov
jl
cmp
shl
pop
stc
cmp
xor
sbb
pop
cltd
and
int3
popf
mov
out
bound
add
testb
das
dec
popa
add
mov
std
jmp
push
iret
mov
cmpsl
dec
in
cld
insb
jne
dec
xchg
scas
subl
push
rcrb
sub
out
cmp
or
sbb
mov
add
cltd
inc
and
call
cmp
lods
decl
fisubrl
push
mov
clc
sbb
int3
addl
ret
jl
pop
data16
xor
sbb
aaa
inc
xlat
test
xchg
sahf
sahf
data16
add
xchg
into
xchg
mov
fisttpll
sarb
fdivrl
loopne
lahf
or
insl
adc
xchg
or
clc
stos
mov
sbb
inc
cvtdq2ps
aas
inc
mov
dec
lcall
out
mov
add
mov
rolb
scas
add
je
movsl
add
jl
pop
sub
std
pop
in
dec
push
in
daa
jecxz
mov
xchg
dec
das
lds
mov
xor
jmp
aam
addb
lea
lret
dec
jecxz
xchg
imul
pop
pop
or
cltd
rorl
sub
test
stos
xchg
jge
lods
inc
cmp
dec
sub
je
mov
imul
inc
repnz
mov
sub
mov
sub
ja,pt
hlt
pop
xchg
inc
inc
jmp
lods
add
test
jecxz
in
xor
sub
pop
add
mov
outsl
pusha
pop
lret
fsubl
or
pop
mov
je
push
xchg
sahf
test
sub
rcll
mov
push
mov
popf
bnd
push
loope
ss
mov
das
push
lahf
jae
cmp
push
cli
sahf
aam
jp
ss
or
das
xor
hlt
xchg
pushf
mov
mov
jp
cmpsl
mov
rcr
repz
enter
call
icebp
enter
je
std
les
pop
push
pop
mov
ret
xlat
das
scas
xchg
loope
mov
mov
loope
add
mov
sbb
push
and
addb
insl
testb
inc
in
mov
fldl
mov
mov
bound
cmc
repz
idivl
xchg
fstps
fdiv
sub
fimuls
jns
xchg
mov
add
cmp
ss
or
out
dec
leave
pop
push
and
cmp
jmp
jb
stc
dec
xchg
sbbb
loope
or
jno
movsb
jle
jns
push
and
sub
adc
mov
mov
jae
cmc
decb
pushl
dec
in
inc
xchg
jg
pop
lock
adc
movb
aaa
cmpsl
rol
jmp
sub
sub
test
call
flds
lcall
scas
daa
xchg
sbb
jge
bound
js
and
mov
dec
cmp
cmp
xchg
imul
push
fidivrs
dec
pop
xchg
arpl
push
push
std
add
push
sub
and
mov
push
sahf
ss
jo
inc
adc
mov
cmpsl
mov
push
add
insl
sarw
out
push
lea
in
ja
cmp
mov
sub
sbb
daa
adc
ja
mov
pop
xchg
dec
loop
mov
add
lods
lcall
jo
push
sbb
cld
ja
xchg
fbld
pop
pop
ret
push
xor
adc
mov
jmp
mov
adc
or
das
popa
adc
adc
jle
pop
aam
scas
lods
sub
cmp
ss
adc
sub
pop
pop
fcmovne
bound
adc
adc
inc
xor
dec
adc
ljmp
sub
orb
mov
cmp
or
mov
aam
push
mov
push
inc
pop
mov
or
sbb
into
aam
push
leave
inc
enter
pop
call
or
push
int
movsl
pusha
xchg
fwait
cmp
inc
mov
test
inc
push
enter
es
adc
jp
lods
dec
pop
mov
out
int3
pusha
gs
insb
mov
js
pop
in
and
sub
ja
push
add
addb
mov
sub
add
and
cwtl
pop
inc
out
les
xlat
mov
jge
fcoml
ds
sub
loop
jnp
pop
sub
push
fcmovnb
mov
or
insl
je
adc
lods
or
repnz
xchg
mov
or
je
mov
mov
aaa
inc
mull
loopne
mov
mov
test
add
jge
xchg
mov
or
pop
cs
test
fs
inc
mov
std
insl
pop
dec
sub
cmp
pop
aaa
addb
push
lods
inc
mov
pop
pop
in
stc
pushw
jne
sub
and
jne,pn
mov
testl
je
sub
sahf
dec
jl
enter
icebp
and
push
jno
cmpsl
mov
jo
cwtl
add
or
mov
arpl
jo
int3
aad
cs
inc
arpl
cmovs
into
fs
mov
adc
das
dec
inc
aam
into
stos
sub
add
out
inc
cmp
or
sbb
pop
xchg
hlt
xor
bound
aas
js
into
mov
and
mov
add
sub
jmp
add
fisubs
jb
inc
das
dec
negb
cmp
roll
insb
jl
std
sbb
push
das
mov
outsl
pop
mov
shrl
or
outsb
roll
or
xchg
jle
iret
ficomps
repnz
push
push
and
lret
xchg
xchg
fisttpll
leave
cmpb
insl
ret
cmp
data16
pop
xchg
mov
movsl
lcall
pop
repnz
fwait
push
lea
sbb
xor
sub
test
dec
sbb
divb
xor
push
cmp
movsl
mul
jb
outsl
pop
test
dec
inc
and
adc
jg
in
cmp
sub
in
imul
repnz
pop
xchg
sub
fistpll
insl
cmp
pop
bound
sub
sbb
out
jb
add
mov
cmpsl
stc
cmp
adc
lods
in
mov
loopne
movsb
enter
dec
pop
sbb
cld
mov
push
mov
das
rolb
loope
daa
mov
mov
popa
push
fwait
out
mov
adc
and
mov
out
bound
jge
data16
scas
sbb
stos
not
mov
pop
add
jns
enter
inc
jns
insl
sub
insb
jne
jecxz
push
pop
out
jbe
cmp
in
adc
cmp
cmpsb
popl
xor
test
and
rcr
or
mov
setb
pop
stos
mov
int3
stos
cld
ret
and
xchg
movsb
push
lret
rol
enter
std
sti
repnz
jle
pop
das
pop
xchg
and
fldl
and
or
mov
je
inc
sti
out
jecxz
push
sub
pop
stos
xor
lcall
push
fs
push
lret
jns
daa
dec
sarb
hlt
call
jb
insb
iret
lock
xchg
push
popf
cmpsl
ret
ja
mov
addl
fildl
pop
jnp
mov
mov
xchg
push
pop
push
xchg
sbb
jecxz
out
arpl
jge,pn
ret
xchg
insl
cmp
mov
lcall
sub
es
ror
push
xchg
push
mov
imulb
xor
push
xchg
jmp
sbb
mov
nop
push
mov
xor
jnp
inc
in
push
cmc
cmp
gs
mov
aam
popf
lret
repz
add
stos
and
inc
call
movsb
inc
data16
stos
lcall
sub
ret
pushf
fidivrs
dec
cwtl
out
xor
stos
jo
jg
jno
inc
subl
outsl
push
dec
stos
out
in
push
inc
sbb
sub
adc
jbe
dec
std
outsb
popf
aad
stos
into
fldt
popa
cmp
mov
pop
cli
scas
pop
xchg
mov
cmpsl
push
or
movsb
std
movsb
inc
test
shrl
outsb
sub
mov
push
hlt
leave
test
out
loopne
mov
in
xchg
and
aas
testb
nop
sbb
mov
orb
jg
dec
nop
cld
push
and
addl
jae
je
push
inc
loopne
outsb
jl
popf
incl
mov
loope
mov
imul
adcl
xor
outsl
incl
test
js
sahf
in
and
xor
pop
call
xor
xorb
lret
fisttpll
jae
jmp
sbb
popa
aaa
xchg
mov
outsb
jns
inc
inc
sub
inc
pop
cs
fisttpll
scas
xorb
cmp
push
adc
jne
dec
dec
jmp
push
xchg
test
jmp
add
jmp
mov
scas
xor
mov
cmp
and
insb
pop
sarb
sub
orl
mov
dec
fmul
icebp
push
dec
lret
scas
xchg
js
subl
stc
popf
icebp
pop
test
dec
scas
out
jl
into
out
loope
lcall
fstps
and
and
in
movsl
pop
repnz
icebp
inc
scas
outsl
cmpsb
sahf
pop
mov
iret
inc
iret
and
test
cmp
pusha
adc
jnp
pop
sbb
fldcw
into
pop
jb
adc
jge
enter
hlt
jmp
loop
sbb
stc
jl
sub
std
push
ds
xchg
mov
dec
ret
dec
lret
out
pop
insb
aas
mov
lahf
sahf
cld
cmp
repz
stos
std
into
outsb
cmc
call
out
lret
dec
mull
lds
sub
xor
jg
inc
inc
inc
gs
xlat
jae
std
push
xor
xor
push
pmullw
mov
iret
pop
jnp
repnz
jno
je
clc
lock
mov
xchg
loopne
push
xchg
xor
or
mov
mov
inc
fsubp
push
call
xchg
int3
xchg
xchg
hlt
cs
push
push
adc
pop
inc
sbb
ret
jp
sub
cltd
inc
inc
and
xchg
jo
outsb
and
xchg
addl
lcall
xchg
mov
lea
jle
nop
fistl
mov
loopne
add
scas
lret
cmp
hlt
ficompl
imul
jno
fwait
cmp
shll
or
pop
daa
push
int3
mov
out
pushf
mov
xchg
cmp
fistl
rcrl
mov
adc
cltd
mov
fwait
and
insl
and
ja
push
sahf
jb
jnp
mov
dec
dec
out
addr16
xlat
cmpsl
and
mov
mov
dec
inc
out
or
fwait
rolb
or
dec
mov
ss
and
push
add
add
dec
xor
les
dec
mov
push
test
sahf
ret
sbb
daa
scas
jmp
ss
pop
pop
mov
mov
mov
ja
mov
and
addr16
cs
rolb
fdiv
or
sahf
mov
mov
dec
mov
jae
cwtl
shl
sub
or
ljmp
xorb
mov
iret
daa
int
cltd
mov
pop
lock
dec
pop
xchg
adcl
cs
mov
stos
mov
shrl
mov
fsubs
sbb
sub
mov
mov
ret
fdivr
mov
cmpb
mov
in
cltd
aas
xor
adc
aad
in
add
sub
mov
ss
test
jp
aad
jmp
lcall
cmp
and
sub
into
xchg
mov
xchg
pushf
push
inc
cmc
addb
or
mov
out
repnz
push
push
dec
and
sub
dec
bound
push
lea
xchg
pop
jne
fnstcw
push
out
mov
jnp
and
insb
popf
mov
int
and
or
orb
sub
dec
pop
enter
popf
jmp
and
idiv
loope
push
xchg
jb
mov
jns
jne
mov
movsb
jbe
xor
cs
fsts
push
xchg
push
idivl
leave
add
and
and
xor
or
mov
fwait
call
cmp
jae
jp
sub
mov
adc
pop
pop
loop
sub
enter
imul
mov
sub
jl
jae
mov
jne
adc
cs
cltd
pushf
push
insl
jbe
cli
dec
insl
pop
sub
stos
mov
xchg
pop
xchg
adc
ret
xchg
add
les
xor
data16
sti
mov
jb
inc
adc
out
movsb
or
cmp
mov
mov
divb
pop
test
sti
sub
dec
sbb
push
mov
jae
jge
jmp
jecxz
cmp
data16
sbb
stos
inc
or
nop
jecxz
and
test
mov
sub
xchg
data16
jl
cmp
mov
or
das
add
stos
arpl
adc
jle
sub
cltd
add
mov
int
mov
inc
out
test
in
shll
pop
pusha
xor
je
sub
pop
jb
mov
loope
dec
movsb
mov
sbb
int
into
lahf
and
negb
test
cs
add
aas
pop
cmp
testb
xorb
inc
mov
mov
dec
outsb
sub
xor
mov
xchg
inc
or
in
mov
cmc
mov
sbb
into
jecxz
lahf
pop
push
bound
ds
lahf
xor
imul
ljmp
push
jns
push
imul
cmpsb
push
pop
in
or
fnstsw
push
jno
pop
jle
lret
xchg
or
movsl
mov
pop
cmpsb
ja
jnp
xor
add
pop
mov
jle
push
add
mov
lock
and
lds
mov
sbb
mov
lahf
fcomps
mov
cltd
jb
xor
and
or
adc
mov
in
je
or
xchg
cmp
mov
cmp
cltd
adc
sbb
fimull
jg
hlt
jp
mov
jle
mov
xor
dec
sub
cld
mov
ds
hlt
int
int3
loopne
cmp
rcll
lahf
pop
mov
pop
lea
insb
xlat
xor
and
data16
sar
mov
jg
mov
push
imul
sbb
repz
mov
mov
cmc
xchg
xor
inc
rolb
outsb
insb
arpl
outsl
test
pop
rol
out
ss
outsb
jne
ds
pop
mov
inc
push
xorl
dec
movsl
ret
stc
sbb
mov
pop
aaa
inc
gs
es
iret
into
fscale
cmp
sbb
inc
add
sbb
int3
mov
insl
xchg
push
jne
arpl
adc
mov
xchg
scas
pop
stos
jne
xlat
xchg
jns
loopne
out
pop
out
setl
fcom
inc
lcall
lock
in
inc
mov
sbb
sbb
mov
pop
xchg
jns
sbb
lret
enter
sub
test
test
jmp
in
lretw
sub
in
cmpsl
dec
sub
adc
lock
mov
add
iret
lret
jno
mov
scas
pop
or
inc
lock
adcl
add
les
push
or
xchg
pop
mov
ljmp
loop
xor
sbb
jmp
push
jno
lea
cmc
call
xchg
js
and
sti
mov
inc
adc
and
jmp
jnp
jno
pushf
or
cmp
cmp
mov
jb
mov
xchg
xor
xchg
sahf
push
js
sarl
xchg
cld
shll
mov
es
negl
stos
sbb
xor
stos
and
mov
ret
mov
clc
and
popa
rorb
pop
push
cmp
shlb
and
nop
arpl
es
xor
xor
out
dec
inc
sub
sahf
xchg
shrb
pusha
mov
pop
push
lret
adc
cmp
pop
inc
xor
dec
inc
aam
hlt
push
js
sarl
nop
aad
cltd
dec
popa
adc
xor
sub
lahf
add
mov
xchg
jns
sbb
inc
cld
add
xchg
xchg
adcb
xor
test
mov
add
add
shl
imul
imul
lods
adc
adc
xor
fimull
sbb
mov
into
fistps
mov
xchg
int3
xchg
pop
dec
push
pop
sbb
imul
call
pop
push
add
xchg
sbb
mov
imul
sti
mov
mov
sbb
insl
jae
and
or
fwait
dec
cs
stos
aas
mov
fnstsw
jecxz
mov
mov
repnz
stc
lods
cmp
dec
in
ja
lds
shrl
gs
roll
cmp
push
stc
lret
add
sbb
fmuls
ret
insb
adc
int
jne
xchg
fsubrs
and
rcrb
adc
xchg
ja
jno
sub
imul
xchg
fsubrs
mov
adc
mov
lods
in
jns
fsubp
lret
sbb
insl
and
aam
cmp
into
xchg
cltd
sub
aas
lea
outsl
add
mov
repz
addb
lret
mov
pop
push
movb
inc
das
sub
push
lods
mov
lock
mov
out
push
push
test
push
arpl
into
mov
cli
stos
and
or
ret
pusha
rcll
xchg
fisubs
dec
lret
fs
pop
sti
int3
imul
daa
aas
pop
cmp
xorl
cmp
and
mov
mov
sbb
inc
mov
nop
xchg
mov
into
xchg
cwtl
mov
or
jl
test
dec
xrelease
adc
cmp
push
xor
rcrl
ljmp
jecxz
fcomps
xchg
stos
jp
and
mov
lret
fsubrl
jl
aas
adc
jg
or
scas
aad
dec
and
mov
stos
xchg
aas
jno
push
or
sub
or
loope
enter
imul
imul
sub
popf
inc
call
lods
in
and
rorb
aad
push
jno
push
jmp
push
rorl
fmull
ljmp
arpl
inc
or
test
testl
xchg
and
icebp
inc
lret
jae
flds
inc
xlat
adc
pop
jne
lahf
leave
call
popf
daa
lds
pusha
push
enter
or
fsubl
and
lret
dec
add
push
das
loop
in
daa
or
push
xchg
jno
iret
jae
cltd
lods
push
call
movsl
roll
or
jno
adc
pop
mov
jmp
aad
bound
push
inc
imul
mov
int
cmpsb
mov
push
je
pop
stc
rorl
dec
push
dec
int3
jb
sti
and
in
mov
enter
mov
lods
inc
mov
jecxz
lock
test
aas
cbtw
je
jae
bound
sbb
mov
pop
gs
sahf
bswap
ljmp
jge
add
mov
jnp
and
mov
dec
negb
fwait
stos
sub
cmp
in
int
xchg
push
lock
push
xorb
inc
fidivl
sbb
icebp
negb
imul
jle
notb
or
pop
in
lret
aas
pop
int3
dec
mov
daa
jp
lods
repnz
pop
push
xor
jl
fldl
xor
xchg
sub
sti
testb
les
inc
mov
bound
cmc
pop
mov
inc
mov
jmp
insl
mov
jp
mov
cmp
inc
pop
nop
add
cmp
inc
fcoms
and
andl
jl
bound
sbb
fmulp
sbb
cmpsb
push
in
jecxz
sbb
or
testb
stc
std
sub
jbe
sbb
mov
test
mov
sub
push
sub
jp
pop
jo
cmpsl
scas
pusha
mov
mov
mov
jecxz
cmp
mov
je
or
mov
bound
sub
inc
out
pushf
loop
ja
or
dec
fimull
inc
movsl
inc
outsl
adc
popa
sti
fstpl
outsb
mov
lods
mov
fadds
ljmp
xchg
mov
push
fldt
sub
add
jp,pt
xchg
push
das
lods
mov
pop
mov
xchg
movsl
lds
mov
in
sahf
mov
cmp
mov
aaa
mov
mov
sbb
pop
xchg
sub
fisubs
daa
add
test
loop
add
mov
aam
push
scas
or
jmp
ret
dec
cmp
xchg
push
in
jo
xchg
cmpsl
aad
adc
dec
cmpsb
or
dec
jns
mov
xor
jne
sbb
rorl
loopne
dec
add
fisttpll
or
mov
push
mov
popf
pop
fimuls
dec
push
test
add
sbb
dec
mov
mov
inc
pusha
fisubs
ficoml
bound
jno
mov
mov
push
cmp
stos
mov
imul
xor
movsb
cs
dec
stc
adc
cmp
dec
fmuls
insb
add
sub
add
orb
daa
mov
arpl
xorl
xor
cli
jmp
lock
push
jp
pop
lret
pop
pusha
in
dec
movsb
lahf
push
hlt
outsl
pop
add
sub
dec
mov
notb
and
ss
in
push
push
cmp
add
scas
lret
adc
jle
jnp
decl
mov
je
mov
lea
dec
pop
leave
push
sbb
mov
push
pop
dec
decb
loopne
pop
pop
mov
mov
out
insl
pop
jle
aam
inc
aam
test
jo
icebp
pop
mov
lds
test
loope
lahf
outsb
adc
push
imul
add
sub
push
push
dec
stos
and
mov
inc
pusha
mov
repnz
pop
xor
out
or
int
mov
je
jno
inc
dec
cmpsb
movb
lea
adc
cmc
mov
dec
adc
sbb
stos
in
sbb
xor
lahf
mov
adc
sbb
hlt
jp
or
sub
adc
jge
dec
repnz
cmpsb
adcb
lods
popa
repnz
jnp
jecxz
sahf
negb
jae
xchg
sub
mov
inc
lods
fsubl
xchg
mov
addl
adc
jp
das
sbb
dec
rorb
push
movsb
stc
sbb
insl
mov
jbe
out
mov
pop
pop
subb
adc
push
jnp
jge
cmc
xor
in
mov
push
xlat
mov
mov
out
sahf
fimull
mov
daa
jne
test
mov
orb
fisttpl
enter
inc
sbb
xchg
jns
mov
mov
aaa
adc
cmp
addr16
or
imul
imul
in
adc
loop
lcall
movsl
inc
out
mov
lfs
loopne
stos
xor
jae
mov
mov
pop
sub
push
je
push
cmp
xchg
imul
dec
nop
adc
xor
push
push
adc
pop
rcrb
loop
sub
ret
int3
mov
stc
sbb
into
pop
das
jo
inc
add
loopne
mov
lret
test
xor
cwtl
call
loop
cmp
xlat
pop
push
add
lea
adc
stos
dec
les
cltd
cltd
mov
pop
and
mov
fsubrl
mov
lods
xor
ljmp
xchg
insl
jmp
pop
pop
push
lods
and
add
daa
clc
loope
sub
int3
repz
fisubl
mov
in
pop
lock
adc
and
lods
lods
negb
inc
call
dec
cmp
psubsw
push
inc
xchg
movsb
adc
inc
jb
je
push
mov
or
mov
rorb
je
jnp
jecxz
clc
stc
or
lret
lea
popf
lods
aas
aad
sub
lahf
add
scas
scas
out
adc
xchg
pop
xchg
sbb
sbb
cmp
fwait
or
fistl
dec
wbinvd
fs
mov
fldcw
stos
sub
lret
in
mov
mov
aam
add
xor
repnz
mov
bound
mov
push
push
dec
sbb
aad
into
scas
mov
mov
dec
ss
insl
inc
fstpt
mov
and
cmp
dec
fistl
in
sub
or
loope
clc
sub
notb
into
mov
pop
sbbb
adc
dec
or
outsl
subl
gs
cmp
adc
mov
jne
jl
es
push
fcomps
add
adc
popa
inc
add
loope
sbb
insl
xchg
dec
push
inc
cmc
sbb
xchg
sbb
das
fcompl
push
adc
fwait
incb
push
or
jno
iret
pop
fcompl
xlat
aas
sti
and
clc
jbe
test
addr16
clc
lahf
pop
jnp
sbb
dec
pop
xchg
mov
adc
lret
push
mov
andl
out
cmpb
mov
sub
aas
xorb
mov
inc
mov
scas
or
jge
xchg
inc
add
into
daa
lahf
push
data16
rcrb
lea
std
lods
ficomps
fmull
fidivrs
imul
xchg
fmuls
cld
mov
loopne
popa
es
and
jne
adc
sarl
int3
repz
ror
xlat
in
loopne
fldenv
cmp
sbb
fs
into
daa
cs
or
outsl
mov
insl
data16
sub
int
add
xchg
fdivrl
out
adc
div
mov
mov
and
inc
mov
add
subl
aaa
out
xor
fistpll
pusha
das
adc
or
popl
push
xlat
xchg
dec
pop
loop
jnp
sub
stc
mov
xchg
lods
inc
pushf
push
out
imul
mov
cmp
inc
pop
cmp
sub
popf
clc
mov
fsts
dec
loop
neg
pavgw
js
sahf
addr16
test
je
xor
inc
push
mov
lret
xor
fimuls
push
movsl
sbb
ret
mov
hlt
xchg
dec
cmpsb
subl
rcrb
addr16
sbb
loop,pt
nop
lods
lods
and
push
xorl
aas
loopne
fstpl
aam
adcb
pop
dec
pop
lock
sub
sub
jg
das
adc
daa
lret
testb
orb
mov
jne
test
pusha
mov
in
nop
jle
in
mov
negl
mov
in
scas
xchg
mov
add
push
outsb
scas
xchg
std
cld
inc
xor
pop
loop
jle
xor
cmp
pop
cmpl
mov
adc
aaa
jle
test
shll
mov
sbb
fwait
pop
cwtl
xchg
mov
and
sbb
test
xor
stos
jp
int3
sahf
sbb
addb
adc
dec
sub
jl
mov
add
popa
js
insl
cmp
mov
inc
jg
cmc
or
jnp
xor
pop
xchg
std
xlat
pop
mov
push
popf
add
mov
adc
push
lock
sahf
mov
mov
sub
dec
xor
lret
pusha
inc
stc
insl
xchg
cld
adc
ja
subb
mov
ljmp
inc
sub
or
inc
out
movsb
inc
mov
iret
adc
outsl
js
add
inc
mov
into
imul
lret
mov
sahf
add
push
or
jae
pop
ret
and
or
in
add
pop
jbe
cmp
pushf
jb
int3
std
aad
push
jns
cmp
jae
das
sarb
adc
mov
fidivs
int3
insl
dec
dec
inc
or
inc
enter
inc
sub
subl
imul
int3
adc
add
push
ds
fisubl
ljmp
sbb
xchg
mov
loope
movsb
mov
stos
pop
in
pop
icebp
mov
xor
mov
aad
lods
jg
mov
xchg
inc
or
leave
adc
pop
insb
sbb
mov
mov
lmsw
mov
nop
aam
mov
mov
arpl
lock
loope
stos
mov
dec
push
and
mov
and
jg
dec
frstor
xor
mov
pop
sbbl
fwait
icebp
cwtl
ja
mov
je
popf
arpl
fdiv
inc
andb
mov
xor
inc
inc
pop
scas
loopne
jae
adc
jl
sbb
inc
mov
push
leave
or
mov
cmpl
jno
adc
test
mov
out
std
dec
pop
addr16
pop
dec
mov
and
cmp
add
lahf
sarl
idivb
scas
cwtl
hlt
inc
sbb
std
sbb
fadd
bound
push
add
lods
jle
ljmp
insb
cld
cmp
mov
inc
lret
pop
jb
das
mov
mov
into
mov
sbb
icebp
aas
mov
imul
fistps
or
ror
inc
mov
lods
mov
inc
mov
jnp
or
sti
scas
inc
xchg
cmpl
inc
popf
adc
into
icebp
addr16
mov
nop
stc
test
and
mov
pop
mov
addr16
loope,pt
jge
lods
fstps
adc
mov
adc
lods
jns
popa
dec
dec
test
pop
outsb
ss
push
pop
aas
rorl
negb
aas
adcb
cmpsl
call
mov
js
adc
sbbb
aaa
push
pusha
out
xchg
jb
cltd
sbb
daa
pop
or
mov
repz
rclb
popf
cmp
and
mov
pushw
mov
and
mov
or
xchg
adcl
mov
in
shrb
out
insl
cltd
mov
inc
pop
aam
cltd
aas
jnp
stc
pusha
inc
jbe
inc
mov
fwait
xchg
cwtl
push
dec
sub
jae
int3
xchg
add
xchg
sub
jmp
jecxz
out
mov
xlat
inc
adc
inc
movsb
mov
push
movsl
repnz
inc
loopne
stos
xchg
loop
inc
push
call
rcrb
in
mov
jo
pop
and
sub
ret
pusha
jae
cmp
pop
or
mov
out
outsb
test
and
cli
cmp
int
test
pop
int
sub
mov
and
adc
pop
and
xchg
aaa
push
mov
loop
or
idivl
xchg
lods
movsl
xor
mov
pop
fildl
imul
mov
ficoml
nop
rcrl
pop
jmp
dec
aad
sbb
inc
scas
loop
pop
jae
pop
dec
outsb
hlt
mov
jge
xor
xchg
jnp
or
icebp
inc
mov
daa
cltd
sbb
pop
inc
jae
movsl
adc
jb
sbb
push
mov
mov
lods
and
sub
mov
push
inc
out
jp
push
js
cmp
lret
sbb
shlb
cmpl
lret
xchg
jp
cwtl
or
roll
in
jp
jge
inc
mov
stos
push
fwait
lods
push
ja
sub
popa
movsb
pop
adc
inc
jp
pop
dec
test
mov
jge
imul
test
nop
lret
mov
lea
outsl
jb
sub
rcr
outsb
fdivrp
xchg
es
sbb
xchg
out
jle
pop
or
fxch
xor
mov
mov
sub
and
xchg
sar
push
dec
pop
repnz
mov
inc
push
and
mov
movsl
push
pop
gs
pop
push
fildll
jbe
in
push
mov
ja
cmp
mov
js
push
enter
pop
fmul
fisttps
pop
mov
or
mov
rcll
ss
mov
cmp
lcall
jae
adc
cmp
adc
and
std
nop
xlat
leave
xchg
test
mov
pop
pop
mov
loop
test
mov
sarl
in
sbb
cmp
mov
mov
lea
add
pop
inc
push
divl
sbb
and
xchg
inc
xor
leave
int3
adc
ss
mov
insb
xchg
popf
out
loop
cmp
stos
mov
insl
fwait
test
ds
fbstp
mov
inc
in
jne
lahf
add
xchg
push
jg
adc
mov
clc
int
lcall
push
mov
mov
inc
mov
aas
dec
loopne
pop
dec
xor
pop
fistps
pop
sbb
mov
and
imul
xor
hlt
jns
mov
xchg
push
pop
sahf
outsl
or
adc
es
pop
enter
mov
pop
sbb
ss
cmp
xor
ja
icebp
add
sub
pop
es
stos
jmp
imul
or
ds
pop
jae
or
xchg
cmc
stc
inc
xor
xchg
sub
dec
mov
inc
sbb
in
add
in
sbb
ret
cwtl
inc
pushf
and
push
ljmp
mov
dec
push
xlat
adc
jnp
xor
and
sub
fsubrs
xchg
aad
dec
dec
sub
pop
adc
inc
fistpll
sub
mov
inc
push
mov
adc
cmp
lcall
xor
aaa
lds
mov
cmp
xor
xor
lock
arpl
and
adc
fiadds
into
test
add
out
sar
mov
leave
jbe
testl
add
dec
mov
xchg
xor
mov
int
nop
pop
ret
inc
lds
inc
ss
cmpsb
fisubl
xorl
lret
cmp
ret
fcomip
inc
adc
popf
mov
xchg
out
sub
or
mov
out
mov
mov
pop
inc
mov
jmp
sub
cltd
cmpsl
stos
pand
jne
xchg
jno
pop
mov
cltd
data16
aad
jp
in
jl
movd
dec
mov
push
mov
mov
lods
testb
or
dec
inc
cmp
dec
pop
movsl
lods
jge
dec
mov
addr16
xchg
dec
pushf
mov
movsl
or
xor
jo
ret
or
shll
pop
fwait
inc
pop
fsin
ds
mov
add
pop
jnp
push
pop
sub
mov
jp
push
ret
rorb
xchg
pop
adc
mov
mov
hlt
cltd
ror
pop
cmc
cmp
push
ret
adc
repz
jbe
sbb
push
aad
popa
adc
lods
in
popa
jmp
and
inc
sub
es
pop
das
push
imul
icebp
and
sub
push
xor
popf
or
xor
xorb
ds
xor
in
sub
mov
std
testl
jecxz
adc
pop
fsubp
imull
das
stos
in
jge
cmp
mov
pop
mov
aas
notb
jb
into
lret
pop
inc
fldl
jae
data16
mov
mov
mov
shrb
scas
jbe
sbb
leave
jns
push
out
ret
adc
cmovae
adc
xor
sbb
jmp
jns
push
adc
shlb
xorl
xor
shlb
mov
aas
sbb
cmp
mov
xchg
rclb
dec
push
addr16
jmp
dec
add
mov
cltd
addl
jecxz
pop
enter
int3
xchg
outsl
xchg
fs
sbb
scas
push
and
jle
int3
lcall
xor
jo
or
adc
fld
sub
mov
push
adc
mov
repz
jge
and
das
fbstp
pop
cs
pop
push
or
fidivs
mov
sbb
push
int
insb
fs
test
add
dec
pusha
jnp
shll
lahf
ss
inc
pop
popa
mov
cli
mov
mov
test
inc
sbb
sub
sub
lock
xchg
adc
in
sbb
lods
repnz
mov
in
movb
mov
mov
addr16
xchg
iret
outsb
das
repnz
fdivrs
dec
push
mov
mov
js
and
je
jae
jo
push
dec
jnp
aas
xchg
lock
and
repz
imull
push
push
push
cmp
fwait
std
lcall
cmp
mov
cmp
fldenv
inc
rclb
jnp
int
cmp
xor
arpl
and
incb
out
fs
aad
pop
sbb
std
in
mov
jo
es
iret
fcmovnb
in
jae
sub
adc
cmpsl
sbbl
mov
cld
ds
xor
lods
add
hlt
lods
sti
ret
ss
jne
data16
bound
roll
adc
jg
jmp
mov
enter
lret
or
and
sub
popf
dec
mov
or
mov
in
xchg
and
sbb
sbb
jno
xchg
mov
sub
insb
mov
inc
lock
outsb
sub
jecxz
mov
loopne
test
imul
movsl
imul
sbb
cmp
and
bound
cmp
sbb
xchg
mov
or
lods
cltd
imul
in
xchg
or
sub
sbb
add
rorb
mov
push
fmull
out
ja
adc
lock
mov
hlt
inc
sub
mov
gs
test
sbb
insl
aas
repz
orl
inc
pop
adc
adc
jo
jo,pn
shrl
inc
lods
jle
cs
cld
mov
push
cmpb
int3
jne
hlt
jbe
pop
mov
sahf
into
pop
adc
inc
pop
inc
lds
out
pop
pop
and
push
fs
andl
es
dec
push
mov
mov
xchg
in
int
xchg
sub
and
jb
int
popl
cmp
imul
xor
testb
mov
jb
cli
loop
add
mov
xchg
int3
jnp
mov
mov
mov
pop
out
mov
mov
adc
cmp
xor
add
repz
xchg
inc
insb
pushf
mov
or
aaa
sub
jno
adc
xchg
mov
inc
repz
xor
sub
lods
cmp
call
pop
in
daa
clc
xchg
and
rcl
lock
je
xor
adcb
inc
data16
pop
je
andl
xchg
pop
sbb
scas
jmp
imul
outsb
add
sub
and
lret
jmp
cmpsb
test
push
imul
mov
lods
push
clc
xchg
gs
xchg
aaa
data16
out
adc
call
icebp
stc
mov
jno
pop
stc
mov
sbb
dec
and
dec
push
xor
stos
movsb
pop
fcmove
cmpsb
arpl
dec
xor
fsubl
jo
fisttpl
jp
aas
jo
outsl
int
iret
lods
mov
adc
and
adc
adc
or
jl
jae
insb
dec
push
add
std
add
mov
pop
mov
dec
dec
enter
test
das
mov
mov
insb
out
mov
imul
jbe
xchg
xlat
push
push
or
fisttpl
icebp
das
scas
inc
jns
movsl
sbb
arpl
lock
stc
les
adc
xor
mov
test
jae
add
inc
aad
imul
outsb
add
dec
push
out
cmpsb
inc
jns
outsl
lock
push
jle
or
mov
jns
jmp
sub
je
push
jbe
pusha
lods
add
lret
fdivr
mov
mov
cmp
sub
adc
icebp
inc
add
add
fbld
sbb
jl
pop
fmull
andl
jb
xchg
sbb
pushf
cmc
stc
add
inc
int3
lret
mov
mov
incl
shrl
leave
jnp
adc
hlt
sarl
aad
jmp
cmp
dec
push
icebp
mov
iret
push
data16
out
int
arpl
cmp
pop
mov
inc
mov
movsb
mov
pop
sbb
lods
lds
inc
dec
rorl
sub
add
inc
or
sti
repz
sahf
adc
cmp
inc
leave
shlb
jae
in
pop
arpl
lahf
add
sub
mov
les
data16
cmp
les
add
push
xchg
xor
inc
jo
pop
jb
jg
movsl
cmp
stos
addl
gs
xor
xchg
ficoml
add
pop
rcl
mov
dec
aad
movsl
call
xchg
orb
lahf
sbb
addr16
jle
fmuls
dec
fmuls
repz
popa
push
ss
mov
cmp
mov
fidivl
xchg
insl
mov
dec
push
dec
inc
mov
xchg
mov
shlb
push
dec
push
imul
daa
outsb
outsb
cmp
push
in
jnp
push
inc
outsb
int
and
mov
pop
dec
add
mov
shl
pop
mov
mov
jl
sarl
push
iret
add
jge
je
call
mov
jns
inc
pop
push
mov
push
and
repz
insl
lret
mov
pmaxub
aaa
cmpsl
sbb
push
cmpsb
cltd
mov
xchg
outsl
in
sub
shlb
nop
fbstp
rclb
dec
cli
mov
inc
lock
xor
jle
sub
mov
outsl
fsubrs
add
rcll
ds
popf
outsl
mov
xchg
push
add
inc
loop
shll
addl
fcoms
fistl
lahf
daa
push
pop
cs
aad
xchg
mov
push
in
push
mov
and
fildl
insb
xchg
stc
inc
jnp
lcall
xor
jbe
mov
inc
scas
sbb
mov
push
xchg
cmp
push
loopne
pop
mov
cmp
cmp
cli
mov
icebp
xchg
cli
ret
and
outsl
rol
sub
jnp
repnz
adc
lock
jbe
shll
mov
outsl
push
xchg
mov
dec
sbb
sahf
mov
dec
mov
gs
mov
loope
add
add
outsb
outsl
cld
shrl
mov
and
pusha
mov
inc
push
mov
cmp
mov
xchg
add
adc
int
scas
sbb
sarl
movsb
nop
loopne
mov
fs
out
pop
sbb
inc
and
call
jbe
movsl
jns
xor
clc
mov
pop
ret
pop
mov
jb
push
jbe
orb
shll
adcl
outsl
push
cmp
or
iret
fldl
jnp
stos
inc
mov
sbb
xor
push
sub
push
into
mov
stos
inc
and
dec
adc
pushf
mov
das
test
scas
dec
cltd
js
pop
sub
lea
push
mov
cmp
lret
stc
mov
jae
cmp
pop
xlat
dec
rolb
and
insl
bound
mov
push
aad
hlt
xor
sbb
push
inc
jp
xor
mov
pop
add
jb
xchg
xor
ret
scas
aam
jge,pt
std
popa
jno
pop
add
fadds
xchg
rorb
jl
and
cmpsl
add
mov
mov
gs
inc
and
hlt
test
mov
sub
imul
outsl
xor
repnz
aas
lahf
mov
push
and
mov
pop
jl
lea
in
into
inc
jecxz
inc
and
dec
repnz
mov
adc
mov
les
inc
insb
mov
lret
xchg
push
addr16
fisttpl
leave
xchg
push
lahf
mov
sbb
js
mov
and
dec
add
adc
cmp
add
ljmp
addr16
xchg
test
mov
popa
push
or
xlat
dec
ljmp
loopne,pn
notl
or
test
pop
and
scas
sahf
fisttps
inc
leave
push
fdivrl
jle
sti
and
sub
dec
out
das
stc
fdivrl
hlt
test
adc
mov
jmp
sahf
mov
jp
ret
aaa
inc
lret
dec
outsl
add
fcomi
scas
inc
mov
fcmovnu
fildl
push
fdivrl
rcr
fsts
shll
dec
imul
pop
jne
in
lcall
cmpb
jg
hlt
sbb
mov
mov
outsb
fistpl
fdivrs
mov
inc
daa
jno
xchg
mov
xor
xchg
addl
fnstsw
xorl
pop
cmp
fwait
roll
ljmp
movsb
mov
subl
out
stc
int
or
inc
mov
fisubrs
xchg
and
icebp
adc
addr16
mov
jp
push
enter
sarl
add
cmp
iret
mov
addb
adc
mov
popa
sub
lret
rolb
and
jb
nop
leave
xor
dec
imul
std
jmp
jne
inc
cmp
int
fmull
aam
ret
pop
add
mov
notb
lcall
push
jp
test
data16
pop
jmp
les
faddp
aad
add
out
and
sbb
stos
mov
cs
pop
jecxz
sub
stos
fisubl
je
neg
lahf
pop
xchg
loopne
rolb
fistl
outsb
xchg
into
ja
cmp
adc
push
lock
mov
movsb
dec
outsl
mov
in
mov
xchg
adc
mov
divl
push
imull
sbb
mov
sbb
or
pop
adc
adc
sub
stos
and
push
scas
enter
mov
lods
aas
les
test
lcall
pop
insl
subb
push
sub
or
incl
ss
jb
out
pop
jne
hlt
iret
cmp
repnz
mov
jmp
gs
mov
pop
inc
add
adc
rclb
sbb
push
jne
dec
flds
mov
mov
fdiv
sbb
adc
sbb
mov
pop
jecxz
icebp
cmp
into
mov
xchg
dec
inc
inc
fcomps
xchg
adc
jae
adc
mov
movsb
mov
loopne
dec
mov
faddp
mov
je
mov
add
repnz
jne
jo
sub
gs
call
xchg
daa
xchg
or
aas
or
mov
popf
push
and
xchg
push
or
sub
mov
jl
filds
add
adc
and
sbb
inc
pop
movsb
inc
pop
cmc
lods
popa
sub
xchg
sub
imul
xchg
and
jnp
jno
cmp
mov
je
push
inc
mov
and
insl
lds
pop
or
lahf
inc
pop
hlt
add
std
jg
adc
xchg
xchg
push
adc
and
scas
pop
jg
xchg
jnp
lcall
clc
iret
add
mov
pop
movsl
fimuls
je
rolb
sbb
cmp
dec
sbb
cmpsb
das
xchg
icebp
repz
shll
ret
mov
pop
push
pop
rcl
sbb
xor
inc
adc
sahf
icebp
dec
fildl
shl
adc
movsb
add
repnz
fwait
pop
nop
lcall
rolb
fwait
leave
imul
into
inc
add
fwait
ja
dec
push
pop
loopne
cmpl
ret
aad
and
je
mov
lods
mov
push
inc
shlb
mov
inc
mov
fdivr
push
jns
mov
rcl
mov
cmp
call
xor
or
jecxz
push
lods
subl
in
and
xchg
adc
lds
jle
pop
cwtl
or
out
mov
repz
daa
and
bound
sbbl
sbb
mov
out
or
xor
hlt
movsb
mov
int3
pusha
jecxz
shrl
add
mov
adc
leave
jge
pop
mov
lods
pop
sahf
repz
adc
ret
mov
addr16
xor
lock
sbb
addl
pop
lock
loope
das
popf
xor
adc
ret
sub
xor
fsubrl
jg
outsl
insb
xor
mov
lds
loope
shll
mov
pop
sbb
aad
and
imul
jne
icebp
push
lcall
imul
mov
jmp
cmc
testb
mov
sti
mov
cwtl
pop
cld
pop
push
sub
aaa
mov
dec
rcrl
bound
mov
sarl
ss
stos
xor
pop
fs
lods
fidivl
inc
shll
mov
rolb
shll
inc
fwait
xchg
push
cmp
dec
andb
cmpsb
shrl
movsb
jae
pop
dec
pop
xor
add
cmpsb
rcll
nop
sub
leave
xchg
cltd
push
jp
iret
mov
fdivl
ja
add
inc
cwtl
scas
scas
int
mov
cld
repz
pop
rcrb
fisubrs
cmpsl
leave
sarl
in
cmp
dec
push
icebp
mov
mov
clc
mov
aaa
mov
lock
inc
xor
bound
ret
cmc
aam
lods
out
popf
add
jnp
ficoml
fnstcw
cmp
je
out
call
mov
mov
aad
jbe
jge
pushf
ret
jg
into
sub
xor
push
jmp
xchg
sub
insl
lock
repz
sub
push
pop
adc
or
dec
shlb
push
jl
push
int
dec
mov
and
iret
xchg
or
pop
insl
inc
ds
dec
rcr
mov
inc
or
dec
stc
dec
pop
sub
in
jne
aaa
lods
pushf
add
mov
xchg
jb
lods
in
mov
or
xor
gs
or
gs
sbb
mov
add
cmp
rclb
lcall
cmpsb
js
aaa
add
xchg
pop
mov
inc
and
jle
inc
jno
dec
pop
rcll
into
mov
cmp
sti
jne
cwtl
ljmp
push
mov
js
mov
mov
dec
and
and
push
xchg
test
xchg
xor
lahf
idivl
xor
ja
xchg
lea
mov
scas
es
shll
pop
mov
xor
push
aaa
mov
mov
cmpsb
call
shlb
sbb
cmpsl
andl
lss
in
or
stos
mov
stos
addb
iret
fisubrl
jecxz
into
divl
les
movsl
fldcw
outsl
jno
mov
jmp
jne
daa
or
outsb
jge
push
rcrl
arpl
mov
out
inc
in
sbb
sub
into
xchg
aas
or
xchg
push
mov
ror
test
hlt
std
jb
jne
das
sbb
cltd
ret
inc
aaa
decl
in
push
fisubrl
cs
jb
xorb
and
sbb
add
movsl
add
mov
js
xor
fwait
cmp
lea
cltd
pop
push
fnstsw
inc
adc
stc
mov
and
testl
and
add
pop
pop
jno
js
test
fs
sbb
mov
ljmp
inc
dec
jp
test
mov
ret
sahf
mov
ret
bound
stc
inc
lds
pop
rcl
pop
test
xchg
test
out
cmc
jnp
cmpsb
xchg
push
add
cltd
push
push
das
in
xor
xor
xchg
sbb
jl
leave
cmpsl
mov
into
jle
adc
push
dec
pop
jae
push
lods
dec
mov
aaa
sahf
adc
ret
cwtl
in
aaa
mov
xchg
fwait
push
sub
jl
sub
cmp
flds
movsb
mov
mov
into
insl
or
cmc
clc
and
jle
inc
into
repz
dec
mov
xlat
in
outsb
mov
scas
into
inc
in
dec
mov
movb
mov
lds
cli
cltd
clc
pop
mov
mov
sbb
fstps
int3
je
jg
adc
sub
dec
push
jbe
add
dec
mov
imul
outsl
sub
and
cli
loopne
xchg
sbb
test
pop
scas
repnz
push
loopne
ja
ja
aad
jae
add
cmp
xchg
mov
mov
xchg
popf
out
push
pop
insl
aas
mov
mov
insb
fistpll
sub
dec
fbstp
lret
sbb
lds
mov
pop
sbb
js
add
popa
or
mov
out
adc
lea
cmp
ret
fnstenv
jl
inc
or
inc
push
cmp
push
sbb
cli
lret
push
rorb
mov
ja
xorl
push
push
add
mov
mov
xrelease
leave
mov
in
gs
outsb
cmc
sub
push
or
and
push
jns
in
push
jo
or
jbe
push
loopw
stos
inc
sub
cli
sbb
jcxz
or
and
andl
xor
xchg
dec
jge
add
je
jae
ret
ja
pop
xchg
inc
dec
dec
xlat
mov
pop
int3
loopne
xor
jns
xor
cmc
test
lret
pushf
test
mov
cld
dec
ds
stc
pop
or
cmp
xor
cwtl
orb
je
jle
fisubl
shl
js
in
xchg
test
hlt
popf
inc
std
and
mov
jb
mov
out
test
icebp
xchg
jmp
icebp
lods
or
data16
fsts
data16
jg
fdivrp
and
in
mov
push
aaa
dec
mov
and
mov
cmp
inc
cmpsb
addr16
je
lahf
pop
jle
push
jns
gs
add
cmp
push
push
fwait
stos
jbe
pop
xchg
aas
cmp
push
cmp
mov
in
enter
in
rcrl
push
clc
push
cmp
in
push
lods
loope
fnstenv
sbb
push
imull
add
sbb
pop
adc
insb
push
lods
pop
mov
pop
stos
push
iret
lods
jl
pop
cmpsb
dec
ret
xor
sub
push
xchg
stos
pop
ljmp
pushf
xor
int3
setb
mov
fs
stos
les
and
shll
into
cli
aas
jmp
lret
mov
iret
mov
in
push
daa
sbb
ljmp
cwtl
stos
cltd
shll
fimull
jg
scas
sub
push
add
sti
jnp
xorb
and
loopne
add
daa
js
xchg
cmp
mov
mov
add
int
loopne
ret
into
dec
stos
or
nop
or
out
cs
out
scas
enter
jo
cmp
or
fnstcw
popa
sahf
or
addr16
cmpsb
xchg
push
roll
imul
and
jp
cmp
arpl
xchg
cmc
arpl
cld
sbb
cltd
mov
mov
mov
cld
xchg
inc
dec
imul
insl
sbb
negb
scas
fdivr
rcll
lret
inc
push
cmp
push
pop
push
dec
inc
cmp
push
xchg
xchg
dec
andl
mov
xchg
sub
outsl
sti
sbb
adc
or
jmp
add
das
arpl
inc
je
popa
xlat
cmp
lock
aas
cwtl
lcall
arpl
rcll
out
shll
stos
mov
xchg
lret
or
enter
add
cltd
lods
out
jg
jns
push
pop
mov
repnz
or
gs
cwtl
out
sarb
insl
adc
mov
sub
loop
sub
arpl
cmp
jg
shl
sub
pushf
dec
mov
pop
xchg
aaa
add
jge
and
loop
cmp
gs
insl
cmp
xchg
mov
push
imul
lret
jle
cmp
ljmp
sub
sub
dec
pop
mov
arpl
cmp
or
out
jae
je
lds
aas
addr16
in
cmpb
push
gs
lock
and
pop
adcb
inc
out
loope
xchg
mov
inc
ret
roll
outsb
xchg
lahf
dec
cwtl
clc
outsb
out
repnz
imul
ffreep
pop
mov
mov
mov
ret
sub
lcall
mov
aas
jo
adc
and
outsl
das
adc
je
rcl
daa
lea
loope
fdivrs
xor
fisttpll
nop
xchg
nop
scas
pop
stos
sub
adc
push
insl
mov
je
call
popa
pop
push
dec
ljmp
aaa
out
adc
push
mov
in
adcb
cmpsb
mov
je
lret
shrl
add
test
shll
fstps
out
adc
inc
mov
add
mov
cmp
mov
out
fisubl
mov
je
popf
fwait
inc
cmpsb
bound
push
rcrb
xchg
rcrl
add
in
imul
sbb
sbb
mov
js
stc
dec
push
int3
aam
lret
jnp
test
dec
pop
imul
pop
xchg
mov
pop
mov
lock
dec
mov
mov
sarl
data16
push
or
pop
in
mov
aad
xor
je
and
xchg
pop
inc
std
jle
clc
loopne
mov
add
pusha
xchg
inc
ret
mov
inc
lcall
lret
dec
imul
xor
xchg
and
inc
mov
jae
mov
scas
jno
stc
or
in
and
push
sbb
and
add
out
pop
mov
test
shrl
dec
out
add
xchg
out
iret
cmp
int3
jg
test
cmp
mov
add
xchg
or
mov
les
push
cmpsb
xchg
sbb
lods
insl
xchg
or
sub
inc
cmpsb
jb
into
mov
jae
cli
in
out
inc
or
dec
les
sbb
cmp
sub
cmp
orb
or
xor
cmp
xor
cltd
push
enter
ljmp
sub
outsb
loop
push
les
fwait
or
xchg
mov
sub
je
sub
pop
repz
jbe
and
pop
psubw
sub
in
loop
fisubrl
fisttps
add
hlt
insb
test
mov
test
cltd
mov
xchg
shrl
cmp
scas
push
mov
lods
mov
data16
jecxz
cmpsb
xchg
adc
or
cmp
rcrb
mov
adc
and
pushl
fiadds
adc
cld
mov
idivb
or
divb
fwait
mov
jmp
das
ficoml
cmp
and
mov
dec
icebp
insb
jno
sbb
cmpsl
dec
imul
pop
and
sub
std
js
and
arpl
stos
ljmp
andl
das
in
pop
lret
fstl
pop
scas
push
xchg
xchg
inc
mov
mov
loop
in
sub
pop
aas
outsl
fwait
rolb
xor
cli
lods
jb
shl
repz
gs
or
test
shll
data16
fcmovb
xchg
push
mov
fldt
icebp
inc
cli
je
iret
cltd
sbb
std
inc
stc
or
mov
hlt
push
sub
jbe
sbb
inc
sahf
cmp
jmp
scas
push
imul
lahf
lds
cwtl
pop
sbb
rcrb
or
in
mov
push
fldt
mov
inc
push
mov
jns
jno
xor
adc
mov
popa
xchg
iret
out
lds
mov
push
jecxz
fsubrs
xchg
jbe
push
cmp
mov
push
mov
dec
adc
push
fmuls
mov
fucomi
or
std
xchg
aad
lea
and
pop
je
dec
decl
out
test
adc
enter
dec
dec
int3
xchg
dec
push
dec
in
push
inc
and
mov
test
cmp
sbbb
mov
mov
dec
into
dec
or
pop
lods
negb
sbb
jnp
hlt
icebp
clc
lods
ds
stos
loope
jmp
adc
scas
mov
clc
adc
cmc
leave
mov
xchg
rcr
xor
das
sbb
push
xchg
pop
ljmp
clc
out
aas
push
inc
insl
cs
pop
and
shlb
lds
add
cmpsb
add
push
xchg
dec
out
jg
das
fmuls
push
add
insl
repnz
lock
fldl
lock
mov
test
jo
mov
pop
out
fsts
push
xchg
clc
inc
cmp
movsl
xchg
inc
sbb
scas
xchg
add
jno
xchg
mov
dec
loopne
icebp
rolb
push
sub
fsubr
out
sub
shlw
jns
sub
pop
inc
cwtl
add
cmp
sbb
push
sar
sbb
mov
cmp
es
fstl
faddl
pushf
dec
and
ja
movsl
dec
push
push
in
mov
xor
pop
sub
or
push
inc
je
pushf
xchg
inc
test
dec
inc
mov
ljmp
cmp
dec
sbb
dec
cmp
mov
pop
or
aas
iretw
add
sarl
into
push
std
fidivrl
scas
mov
pop
sub
adc
mov
sub
jg
aas
mov
cmpsl
mov
mov
out
ljmp
mov
adc
test
outsl
repnz
sub
aas
mov
out
les
in
mov
inc
lods
mov
inc
mov
pusha
mov
sbb
call
ret
cmc
nop
dec
mov
leave
xchg
mov
jae
fdivrs
jo
mov
in
xchg
xchg
movl
nop
sbb
stos
push
cwtl
das
cmc
cld
out
jnp,pt
pop
popa
fistl
std
xchg
jle
adc
mov
mov
popf
add
les
pop
cltd
mov
movsb
imul
mov
mov
lds
mov
out
popa
insb
daa
pop
repnz
sbb
or
jmp
ds
dec
cmp
mov
add
push
sbb
dec
imul
dec
or
inc
or
jbe
data16
inc
cmpl
sbb
and
fs
xchg
push
dec
pusha
fistpll
frstor
aad
sbbb
jge
jne
jle,pt
fldt
clc
xchg
in
movsb
adcl
xor
mov
outsb
negl
insb
add
out
je
xor
fs
lds
mov
xor
movsb
add
sahf
dec
mov
daa
les
imulb
mov
push
xchg
add
dec
sbb
das
ja
jl
or
scas
and
mov
mov
sbb
loope
xchg
idiv
and
mov
popa
cmpsl
fmul
or
sub
xchg
aaa
jl
sub
mov
cltd
ret
call
cmp
dec
push
cmp
push
pop
incb
inc
sub
scas
movsl
add
cmp
rorl
imul
shll
ja
popf
pusha
das
xchg
xlat
mov
push
cmp
pushf
inc
subl
leave
test
enter
and
bound
and
ficompl
jg,pn
aad
or
jecxz
mov
pop
cmp
inc
sti
fldt
rcrl
xor
push
inc
jo
pop
pop
cmp
pop
xchg
push
cmp
fstpl
call
mov
lret
mov
ret
nop
sbb
sbb
mov
iret
loope
mov
pop
ror
stos
sub
loope
mov
out
xor
cli
sbb
pop
xor
and
push
pop
pop
add
and
in
jle,pt
pop
movsb
sub
outsb
mov
jecxz
sub
inc
aaa
lea
mov
repnz
das
aam
xchg
push
cmp
lret
lock
ja
daa
xchg
add
outsl
cli
call
inc
sub
add
mov
in
adcb
sbb
xor
or
testl
fwait
xchg
sbb
xorps
push
dec
cmp
jl
xor
xchg
shll
sbb
fisubrs
mov
lahf
add
cmp
push
es
enter
inc
cs
rcrb
push
lock
mov
jnp
clc
pop
ror
jnp
fsub
dec
test
add
fwait
stos
sbb
mov
out
aaa
add
dec
test
sub
bswap
cmp
std
jbe
icebp
out
loope
mov
pop
adc
pop
add
in
sub
pop
jns
add
cs
mov
fdivrl
xor
stc
adc
push
push
or
lea
sbb
in
fsubrs
aam
.byte
pop
.byte
add
add
add
add
add
add
xor
add
dec
add
orb
add
pusha
add
adcb
add
js
add
add
add
add
add
add
add
add
add
nop
add
addb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
xor
add
add
in
add
add
add
cwtl
fs
add
add
add
add
add
outsb
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
inc
icebp
repnz
call
ds
pop
xor
xor
adc
mov
ss
xor
bound
fbld
mov
cmp
or
iret
mov
invd
sbb
or
push
pop
cmp
sbb
sbb
mov
fbld
mov
cmp
or
int
xor
adc
push
add
add
adc
pop
xor
cmp
push
das
mov
fbld
mov
aaa
int
cmp
adc
rorb
xor
push
xor
push
cmp
adc
iret
adc
into
sbb
mov
fbld
mov
cmp
adc
int
cmp
adc
inc
or
jp
cmp
adc
int
das
mov
fbld
xchg
cmp
adc
into
push
cmp
or
add
sbb
cmp
push
cmp
pop
das
mov
fbld
push
cmp
pop
cmp
adc
jnp
sub
adc
cmp
pop
mov
cld
cld
cld
movsl
mov
sbb
sbb
and
and
and
and
sbb
sbb
ja
fdivrp
mov
push
or
add
pop
pop
mov
mov
mov
mov
mov
sahf
sahf
or
add
push
or
dec
stc
cli
clc
pushl
adc
push
or
and
fists
aas
pop
mov
stc
cli
clc
pushl
adc
push
or
and
fists
aas
pop
mov
stc
cli
clc
pushl
adc
push
or
pop
push
cld
sti
std
std
fstp
fstl
pop
sub
dec
stc
cli
clc
pushl
adc
sub
jl
jg
cld
cld
int
into
dec
push
inc
sbb
adc
inc
idiv
clc
push
div
int3
xor
sub
and
pop
and
ss
jmp
push
div
xchg
mov
das
sahf
adc
push
or
add
adc
push
cs
adc
aas
sarb
incl
add
add
shll
push
pop
xchg
adc
pop
xlat
dec
add
ds
test
sarb
jle
push
ds
sub
mov
sbb
or
sub
mov
cld
out
test
xor
arpl
xor
cli
repnz
ss
or
jg
add
mov
or
push
int
sbb
mov
in
stos
xor
sbb
pushf
addps
pop
lret
and
jns
fbld
test
mov
gs
sub
stc
or
iret
add
push
push
dec
add
dec
and
jmp
js
jmp
add
mov
fdivl
cmc
or
sbb
cmp
jo
dec
das
cmp
dec
jecxz
mov
jae
insl
aas
sub
stos
mov
xchg
lcall
push
lret
popa
push
cld
xchg
mov
cmp
imul
nop
or
xor
pop
inc
cld
stc
pop
cmpsl
in
pop
sahf
cwtl
and
jns
jnp
mov
mov
jecxz
push
inc
repz
lahf
lods
fstpt
adc
adc
enter
jae
loope
cld
xchg
sub
mov
cmp
inc
fldcw
aad
sub
xchg
adc
xor
dec
xorb
push
cmp
sar
jl
add
in
cmpb
cmc
test
pop
xchg
mov
fdivrl
fildl
mov
les
xchg
dec
add
pushf
add
outsb
sbb
mov
fcomps
xchg
mov
imul
jne
repz
test
cli
imull
stc
imul
imul
or
pop
pop
pop
push
xlat
mov
push
mov
mov
roll
into
mov
addr16
scas
sbb
cli
pop
ret
js
push
test
dec
mov
sub
and
lds
mov
cwtl
mov
jmp
mov
jp
push
cwtl
dec
mov
mov
std
or
cmp
fwait
enter
jmp
mov
or
xchg
insl
push
push
lea
or
mov
outsb
jns
pop
mov
and
dec
repnz
pop
sbb
ja
mov
add
leave
adcb
imul
inc
jge
fwait
das
ja
and
lahf
xor
addr16
or
and
dec
jmp
bound
out
std
cld
xor
test
repnz
std
or
mov
adc
lock
cs
mov
stos
mov
push
lret
xor
aaa
daa
or
push
pop
inc
pushf
xchg
or
sbb
test
xchg
fsub
push
pop
mov
adc
fcmovu
jge
xchg
xchg
lahf
insb
add
fs
or
push
aas
pop
lds
push
xor
imul
jne
mov
ud2
xchg
test
aaa
cld
into
sbb
mov
xchg
mov
scas
in
cmp
lcall
push
lea
cmc
mov
adc
popf
sti
gs
sbb
into
je
stos
in
jge
cmp
lds
sub
lahf
shl
arpl
mov
int3
shlb
and
jns
xor
and
and
fbstp
add
add
imull
fdivrs
xor
imul
orl
stc
mov
clc
xchg
es
inc
sarl
mov
add
push
lret
dec
push
jo
xchg
mov
or
mov
ljmp
pop
cmpsb
push
adc
leave
add
cmpb
ret
push
loope
push
mov
sbbl
stc
pop
cli
imul
lods
int3
clc
xchg
push
cmp
cmp
jg
test
mov
push
mov
fs
ret
push
dec
jne
mov
into
lret
pop
xor
out
lea
push
push
rorl
cmp
adc
leave
mov
add
xchg
inc
imul
adc
sbb
cmp
or
mov
dec
mov
inc
jo
das
inc
cwtl
inc
push
jns
mov
pop
outsl
inc
mov
pop
lret
fldt
dec
sete
and
lret
lahf
sbb
inc
xor
cmp
xchg
mov
inc
add
xchg
fcompl
test
pop
mov
cmpsl
sarb
into
jne
xor
xchg
bswap
lcall
push
out
sbb
test
loopne
mov
test
cmp
jne
mov
gs
xchg
xor
sub
lock
cli
push
rol
mov
rorb
and
fisttpl
push
cmp
inc
stos
mov
pop
jp
fsubs
clc
leave
rcrb
stos
xor
addb
jo
test
xor
movsl
mov
call
jl
fildll
inc
cmp
sbb
mov
out
ja
in
xchg
mov
out
jae
xlat
ret
lds
fs
out
in
mov
in
sub
xlat
das
cmp
out
mov
aas
adc
xchg
clc
fisttps
adc
cmp
push
enter
inc
call
sbb
outsb
stos
mov
mov
mov
iret
roll
sub
mov
xchg
xchg
fucom
and
sbb
or
inc
mov
sub
pop
xchg
add
loope
jb
xor
jl
int
adc
xlat
sbb
ds
sbb
fs
cmp
out
test
rcrl
and
and
stos
fwait
mov
pop
pop
xor
jo
orl
jb
inc
lcall
pop
addr16
jbe
loop
mov
enter
adc
mov
movsb
push
sbb
ret
cmp
mov
jbe
mov
mov
inc
sti
cld
test
cmp
or
jne
dec
xlat
es
mov
xor
fldt
xchg
sar
fiadds
scas
out
scas
fisubrl
sub
cmc
adc
xor
shrb
mov
lods
jp
xor
jno
xor
jns
mov
sarb
lcall
sub
push
cmp
inc
jle
jns
sbb
cs
cmp
mov
rcrl
loopne
jbe
rclb
test
inc
div
inc
sub
outsb
js
cmpsb
fsts
mov
stos
or
adc
leave
push
sbb
jns
ret
xchg
daa
jge
push
xchg
pop
in
pop
stc
push
pusha
mov
or
mov
in
scas
test
punpckhdq
notl
cs
sub
push
jno
out
movsl
mov
inc
pop
ret
into
out
jmp
jo
ret
mov
nop
xchg
and
cmp
cltd
sbb
in
jne
mov
inc
stos
fld
xor
fadds
scas
mov
lods
leave
mov
out
inc
in
push
jecxz
aad
sbb
push
mov
test
push
xchg
outsb
mov
ljmp
sub
cmp
jecxz
shll
insb
out
imul
sahf
in
pusha
mov
xchg
add
or
in
jl
adc
pcmpgtd
jecxz
xchg
add
sub
lea
out
jp
jno
dec
fmull
nop
mov
mov
inc
pop
lods
cmp
lahf
mov
cmp
xchg
inc
mov
cmp
lahf
stos
aas
clc
mov
mov
add
pop
cmp
sbb
xchg
jge
lcall
xchg
or
sub
mov
pop
jns
imul
xchg
mov
sbb
jp
or
mov
out
ret
mov
cs
adc
mov
mov
aas
xchg
xor
adc
outsl
or
data16
push
or
clc
ja
stc
out
pop
mov
cmp
fisttpl
in
lea
or
sbb
dec
pusha
int
xor
inc
push
pop
fcompl
hlt
pop
pop
sbb
pop
pop
inc
or
dec
loop
shll
xor
or
push
cltd
cmp
loope
jno
dec
mov
sub
fisubrl
inc
cmp
enter
lods
test
jnp
sti
out
ret
sub
sub
jg
mov
pop
sub
mov
push
sti
pop
dec
jne
sbb
mov
mov
pop
js
mov
cmc
and
cmp
outsb
loopne
xor
gs
pop
cld
ret
jp
fsubrs
push
inc
inc
add
add
add
adc
add
add
add
push
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
jae
popa
add
add
add
je
add
outsl
add
add
jl
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
add
add
outsl
add
and
dec
add
add
push
add
dec
add
add
add
arpl
outsl
add
outsb
add
arpl
je
and
jo
jb
outsl
add
add
je
imul
add
inc
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
add
push
add
dec
add
add
jb
outsl
add
add
je
outsl
add
add
xor
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
add
push
add
dec
add
add
jb
outsl
add
add
je
outsl
add
add
push
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
push
add
dec
add
add
jb
outsl
add
add
je
outsl
add
add
js
add
add
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
pop
pop
mov
pop
mov
pop
mov
pop
cmpb
jne
mov
pusha
lea
push
xor
pushl
mov
mov
call
jmp
mov
popl
add
popa
lea
push
call
call
jmp
popl
add
jmp
add
jb
gs
xor
cs
insb
add
cmpsl
add
add
lea
lods
or
je
mov
mov
rep
jmp
add
nop
add
add
add
sub
mov
movsl
xor
add
push
push
pushl
push
call
mov
mov
add
push
push
call
add
mov
xor
lea
and
mov
mov
addr16
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
je
mov
or
je
add
mov
add
sar
rep
add
jmp
mov
push
mov
push
mov
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
mov
mov
mov
mov
fstcw
lea
push
push
push
push
push
mov
add
push
push
push
push
call
push
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
popa
pop
ret
add
add
mov
and
add
sub
cmpw
jne
pusha
mov
mov
mov
add
add
mov
lea
lea
mov
mov
call
stos
add
cmpl
jne
popa
ret
pusha
mov
mov
add
mov
add
call
mov
cmp
je
add
jmp
sub
sub
shr
add
add
movzwl
shl
add
add
mov
add
mov
popa
ret
push
mov
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
cmpsl
push
and
cmpsl
push
add
nop
adc
out
je
jne
dec
add
add
mov
imul
inc
add
and
xor
add
push
add
or
add
ja
adc
inc
fdivrl
mov
push
sub
and
xor
fdivs
add
mov
mov
stos
inc
sub
cltd
pop
popa
inc
sub
movsb
dec
xchg
add
insb
pushf
xor
xchg
out
adc
std
adc
adc
ds
mov
pop
xchg
pop
ljmp
and
add
int
mov
sub
xor
dec
mov
mov
jnp
leave
call
mov
mov
xchg
arpl
cmp
mov
cmpsb
cmp
fisubl
xor
pop
mov
dec
mov
in
cmpsl
xchg
xor
xchg
lods
xchg
adc
lahf
stc
mov
mov
xchg
mov
test
inc
sbb
imul
add
add
add
or
add
sub
mov
push
mov
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
or
push
add
mov
inc
mov
or
push
add
mov
and
push
add
mov
cmp
push
add
popa
ja
fs
insb
add
gs
xor
fs
insb
add
insl
popa
outsb
xor
cs
insb
add
popa
jo
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
add
add
add
add
add
add
test
add
add
add
add
add
je
jne
popaw
arpl
jb
insl
inc
inc
add
add
je
inc
add
add
inc
jb
ja
add
inc
outsb
jae
jne
jb
pop
push
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
cmp
inc
and
add
fisubs
push
adc
and
dec
add
and
stos
sub
lock
push
outsl
and
loopne
lods
adcb
mov
and
inc
je
inc
dec
int3
dec
jle
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
pushf
sub
test
or
test
sbbl
subb
add
movsb
loope
inc
xor
mov
adc
add
xchg
mov
add
cmp
js
je
mov
mov
insb
jb
cmp
fs
add
xchg
push
enter
dec
jb
cmp
xorb
enter
jb
cmp
sub
sub
cld
and
loopne
fmul
fdivs
jb
sbb
push
orl
mov
outsb
call
add
inc
and
fdivl
add
mov
push
xor
pop
jmp
sub
xor
add
xor
sbb
sbb
and
rol
push
mov
adc
push
int3
push
call
mov
test
jne
xor
add
pop
lret
mov
push
add
or
rcl
ret
femms
lea
loopne
mov
nop
push
ds
addl
aas
les
xor
push
pop
nop
mov
cmp
cmp
pop
sbb
fadds
xor
add
dec
mov
mov
push
pop
or
rclb
xor
and
inc
cmp
add
push
mov
push
xchg
push
adc
mov
nop
aas
push
push
orb
call
xchg
add
inc
push
jmp
mov
inc
mov
jns
adc
jne
add
adc
cmpsl
fst
daa
xchg
aas
pusha
or
jmp
dec
add
dec
cmp
pop
aam
jge
fbstp
loope
call
test
pop
pop
pop
add
je
repnz
add
xor
jge
sbb
add
call
fmul
ja
popl
and
sbb
or
sub
add
cltd
gs
xchg
or
fdivs
add
je
fbstp
push
iret
add
sbb
sub
sahf
test
push
add
adc
sar
lock
cmpsl
sub
or
push
or
jle
jge
add
bound
fcmovbe
lock
rclb
incl
jecxz
adc
out
adc
add
push
sbb
nop
out
cmp
mov
test
cmp
or
sarl
fs
adc
and
mov
add
not
dec
clc
jp
fs
flds
sar
add
popa
add
pop
push
push
push
lds
jns
lret
and
cmp
add
movsl
fsubl
dec
adc
dec
in
or
push
data16
push
nop
sbb
jl
pop
lds
adc
rolb
push
push
and
jae
and
out
ja
dec
sbb
mov
je
push
xchg
jg
pop
fisubrs
jne
mov
dec
xchg
add
movl
filds
cwtl
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
or
add
xchg
nop
jbe
add
fldl
call
sarb
push
pop
inc
adc
sub
push
test
shrl
jmp
leave
xor
mov
mov
add
imul
xor
add
and
adc
sahf
add
add
pop
leave
cld
testl
xchg
test
add
sbb
jae
fisttpll
loope
out
fiadds
call
dec
inc
loop
adc
lods
xor
mov
add
aas
push
xchg
add
xor
pop
aam
cmp
add
sub
jl
xlat
push
add
call
ja
add
inc
arpl
test
leave
or
out
inc
fs
adc
call
and
int3
sbb
cmpsl
int
pop
movsl
and
cmp
add
aaa
and
or
pop
mov
sub
inc
aas
cmpsl
xchg
gs
add
bound
orb
jne
ja
add
mov
loopne
lea
sub
pushf
es
pop
call
icebp
push
xor
addl
mov
push
mov
and
jmp
add
push
orb
test
lcall
sub
imul
dec
rcrb
cmpsb
jp
and
cmpl
add
adc
sbb
add
adc
inc
adc
add
push
adcb
cwtl
sbb
or
jnp
push
out
cmp
add
jae
ror
push
je
add
mov
jmp
int3
inc
mov
mov
add
mov
ret
cs
pop
es
dec
add
push
cmp
lods
cmp
pop
add
mov
addl
push
fs
pushl
int3
andb
xor
add
push
jle
add
pop
xlat
out
bound
pop
sub
test
clc
sysret
mov
xchg
cmp
das
mov
add
xor
pusha
rolb
add
jo
dec
daa
sbb
repnz
movb
pop
add
add
xchg
xchg
ret
cs
jmp
mov
add
dec
stc
repnz
test
int3
test
sbb
xchg
enter
sub
out
mov
hlt
leave
adc
dec
cmp
aad
cmp
mov
in
cmp
pop
add
je
xorl
in
jne
xor
add
push
push
lret
inc
bndldx
in
fistpl
loopne
push
cmp
xchg
adcl
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
mov
add
mov
add
pop
add
add
push
cld
adc
cmp
call
add
adc
mov
addl
lock
sbb
pusha
add
adc
movl
mov
ret
or
add
cmp
leave
test
enter
or
es
add
sbb
loop
cwtl
in
add
add
adc
or
push
test
sub
rolb
and
xchg
add
loopne
dec
incb
adc
dec
fnstenv
loope
and
inc
nop
jecxz
push
out
cs
add
push
sbb
scas
add
xor
adc
ret
add
and
mov
testb
js
sbb
cmpsl
rorb
sub
cmp
push
mov
mov
call
fidivs
push
xor
mov
or
and
sti
fadds
pop
and
add
lock
pop
add
lret
push
pop
andl
movsb
mov
leave
clc
dec
rcl
mov
popaw
ror
aas
jle
add
aaa
sub
repz
xor
add
jge
push
xchg
imul
loopne
sbb
add
jmp
and
inc
jne
adc
sub
daa
in
xchg
or
ljmp
add
xor
or
or
je
imul
xabort
mov
pop
add
dec
xchg
xor
inc
cmp
pusha
shll
rcll
dec
es
mov
add
movsb
xor
dec
add
dec
nop
hlt
lcall
inc
pop
rcrl
xchg
jecxz
inc
adc
insb
add
sub
cmp
bound
or
or
adcl
jl
add
dec
sbb
mov
mov
push
jle
cmp
andl
adc
cmp
mov
add
adc
pop
add
xchg
scas
sbb
les
nop
imul
lea
cld
movsl
push
jg
cld
or
or
inc
mov
and
addr16
roll
fsubs
es
add
sub
loopne
or
add
je
nop
aas
dec
pop
pop
sbb
iret
xor
adc
cmp
dec
loopne
insl
cmc
outsl
out
push
xor
ds
pop
incb
adc
xchg
int3
leave
call
call
imul
jne
cmp
or
mov
add
sti
xor
add
xchg
mov
add
push
add
in
push
dec
subb
dec
pop
pop
ljmp
shlb
loope
je
add
addb
insb
jle
xor
dec
xlat
sbb
jg
pop
lods
add
pop
jle
out
shr
add
push
xchg
or
dec
fsubs
add
sbb
lcall
add
cmp
or
test
add
mov
mov
vucomisd
iret
mov
cmp
pusha
xchg
jmp
add
cltd
xor
xchg
add
pop
pop
xchg
dec
lret
add
repnz
mov
imul
lods
jno
test
pop
sub
xor
mov
pop
pop
movsl
or
stos
or
cltd
cld
jmp
leave
push
pop
push
xor
and
cmp
in
sti
add
mov
adc
sub
inc
test
jge
xor
adc
add
ret
cmpsl
mov
push
bnd
clc
sub
prefetch
dec
add
jl
hlt
clc
sahf
add
cmp
cs
jbe
or
push
dec
inc
cs
or
push
imul
add
call
push
rol
cmp
cmp
addb
pop
push
and
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
cmp
dec
andb
pop
test
and
add
cmp
cli
sub
sub
lea
test
and
fdivrs
add
mov
inc
add
cmc
test
add
ret
lock
movsb
inc
inc
add
jmp
cwtl
punpckhbw
and
cmp
push
add
cwtl
jmp
push
or
addr16
test
dec
aas
or
ret
inc
sbb
add
push
or
cmpsb
imul
or
cmp
sub
jno
push
adc
add
leave
inc
or
mov
imul
mov
test
add
cwtl
add
pop
add
mov
cmp
or
mov
mov
jmp
aas
inc
mov
insl
pop
xor
push
or
dec
and
add
and
lcall
sbb
pop
pop
mov
dec
in
add
out
mov
dec
jg
add
js
push
icebp
or
add
add
cmp
jl
xlat
sub
inc
pop
lds
cmp
loop
pusha
add
addr16
orl
sahf
add
sub
sbb
imul
pop
pusha
adc
add
testb
xchg
stos
push
int3
lcall
inc
fcomps
mov
sbb
push
add
push
incb
add
dec
xor
movl
xchg
addr16
cs
pop
and
ret
push
push
sbb
nop
adc
xor
add
add
xchg
sbb
adc
mov
pop
xlat
or
movsb
push
xchg
fistpll
add
js
mov
gs
cmp
lcall
and
jmp
sahf
lret
dec
orb
inc
mov
or
dec
arpl
add
xor
and
cmp
sub
cs
pusha
cmc
fadds
sub
mov
andl
jmp
add
jmp
cmpsl
xchg
mov
pop
repnz
cld
jbe
sbb
xor
andb
add
mov
add
insb
subb
inc
clc
add
ljmp
dec
add
jge
movsl
cmp
clc
adc
add
lret
xchg
call
add
dec
jle
jge
xchg
or
and
das
and
call
xlat
bound
ret
dec
test
mov
rorb
nop
mov
or
cmpb
mov
cmpsb
inc
std
add
sbb
mov
adc
push
int3
add
adc
out
dec
dec
cwtl
loopne
lock
scas
add
pop
call
add
sub
mov
and
jge
sahf
or
test
ret
es
int3
enter
je
add
into
fcmovnu
lret
add
add
loopne
jecxz
and
sub
push
and
out
mov
rcrb
leave
add
adc
psubb
add
nop
push
xor
enter
xlat
test
add
cmp
ja
je
pop
sub
vmread
rep
incb
cmpl
add
movsb
xchg
mov
jl
xchg
sbb
adc
std
sbb
pusha
lret
push
lcall
add
xchg
adc
add
nop
rorl
jns
jbe
cmpb
jne
aam
jnp
rorb
out
add
and
inc
lock
inc
push
adc
test
xorb
or
andb
cmp
int
pop
dec
into
cmc
adc
mov
or
ja
js
xor
push
push
lea
push
lods
and
ja
mov
repz
int
insl
cmp
mov
push
in
jl
and
jmp
pop
xor
xchg
add
cmpl
jae
movzwl
imul
cmp
add
add
shrb
or
mov
sbb
js
mov
in
pusha
pop
js
in
or
mov
mov
fwait
pop
pop
xlat
insb
movl
call
std
fists
pop
stos
add
je
and
outsb
mov
shlb
cmp
mov
pop
fcom
stos
mov
mov
add
aaa
aas
jp
mov
pcmpeqd
add
add
sbb
push
test
loopne
jle
cmp
push
inc
into
test
shlb
sbb
fnstenv
inc
dec
scas
jne
add
sbb
repnz
loop
fildl
sar
push
add
mov
fiaddl
mov
or
sbb
jne
push
adc
in
add
dec
out
and
and
add
sbb
mov
inc
stos
cmp
add
std
cld
or
fiadds
sbb
nop
cmp
loopne
adc
add
mov
sbb
rep
roll
adc
xor
add
jno
in
imulb
mov
xchg
cwtl
adc
jno
cld
iret
add
sub
mov
movsb
fildl
or
jns
lcall
add
mov
jae
add
mov
stc
cmp
mov
dec
mov
fnstenv
roll
mov
ret
rorb
nop
sub
imulb
mov
jmp
int3
lods
add
sbb
jl
add
add
push
inc
addb
sti
and
mov
sub
or
mov
and
add
popa
pop
pop
rcrb
xor
sub
enter
dec
test
pusha
and
jmp
add
xor
in
xor
push
ja
add
clc
subl
add
xor
or
mov
xor
sbb
pop
int
add
aam
adc
testb
add
fdivrs
cmp
sub
in
inc
push
repnz
pop
bt
je
fisttps
popa
jb
mov
add
adc
add
ret
or
mov
inc
not
jmp
test
jmp
in
je
inc
add
jne
pop
and
cli
cmp
jae
dec
add
add
inc
add
ss
fsubrs
rolb
cld
dec
cld
nop
add
mov
lods
sbb
adc
ret
je
fsubs
or
add
das
rolb
loopne
clc
add
push
push
sbb
add
and
xor
push
mov
and
fiadds
pop
jne
loop
cmpsl
or
add
sub
cwtl
add
and
pop
mov
popa
add
pop
aaa
add
xor
jae
ss
push
add
das
push
add
repz
pop
dec
adc
push
push
pushl
roll
and
inc
hlt
mov
in
push
or
mov
enter
lcall
sub
sbb
add
jno
ret
dec
xchg
clc
and
cmp
or
mov
sub
dec
add
push
inc
push
inc
pop
inc
add
outsl
jb
popa
outsb
roll
fdivl
jg
sbb
push
push
dec
cmp
add
jae
imul
push
jne
dec
rcr
mov
mov
xlat
add
jo
xor
mov
inc
add
adc
cli
jecxz
mov
xchg
testl
jge
xor
ss
mov
cli
add
sbb
add
inc
loopne
push
divb
jmp
gs
add
dec
or
dec
call
inc
or
leave
sub
popl
or
lock
cltd
insb
xchg
pop
add
mov
call
push
loop
loopne
stos
mov
and
fcomp
adc
add
cmpb
pusha
mov
in
leave
add
pusha
push
add
pop
push
sar
pop
addr16
inc
sbb
in
cmp
hlt
sbb
andl
int3
cmpsb
divb
rolb
mov
je
cmp
lea
adc
mov
push
fldenv
ret
mov
test
push
sbb
movsl
dec
shrb
jge
inc
add
nop
push
add
add
repnz
test
pop
pop
fs
ret
add
subps
cld
jns
mov
add
inc
cmp
add
inc
popl
sbb
or
pop
faddp
mov
call
pop
xor
pop
push
loope
sbb
lock
psadbw
hlt
cs
pop
add
outsb
cmp
or
cmc
or
add
pop
and
add
or
push
in
jecxz
lods
add
je
xchg
sbb
mov
aaa
xor
push
inc
and
rorl
add
push
or
jp
lret
jg
ds
mov
popa
jne
cmpb
sbb
adc
imul
cli
in
push
push
call
push
sbb
fistpl
push
push
add
push
add
mov
cltd
shl
dec
jnp
sbb
push
mov
jg
sbb
or
clc
push
adc
jl
outsl
add
inc
add
add
or
sub
add
cmpsb
add
push
loope
imul
pop
fmuls
cmp
pop
mov
adc
inc
ja
hlt
fiaddl
lock
push
addps
orb
repz
lret
xor
mov
sbb
cmpsl
add
outsb
cld
call
dec
dec
or
mov
test
push
jmp
and
out
mov
add
cmp
cli
out
push
je
pusha
stos
mov
loopne
mov
jno
ja
imul
add
sbb
add
and
mov
mov
or
sub
test
push
push
mov
movb
mov
cmc
cmp
inc
rorl
add
fstpt
sbb
stos
mov
shl
push
roll
jl
cmpsl
and
out
mov
inc
add
addb
outsl
pusha
aad
pop
add
movl
stc
or
mov
jecxz
lcall
inc
fimull
inc
sub
movsl
mov
nop
add
mov
sub
hlt
add
xorl
sbb
and
subb
call
addr16
add
mov
fiaddl
imul
je
clc
push
inc
mov
add
cmp
jne
fs
aam
push
imul
inc
add
xchg
into
sbb
add
shrb
rolb
dec
das
pusha
sub
adc
mov
fldl2t
sbb
xchg
sarb
cmp
sti
sbb
adc
andb
pop
adc
andl
adcb
mov
pop
mov
call
call
add
cmp
or
mov
dec
cs
cltd
add
pop
xor
mov
mov
call
shll
cmp
ds
push
sbbl
mov
enter
pop
dec
gs
data16
mov
andl
push
inc
or
pusha
add
xchg
lock
dec
push
mov
leave
xor
js
nop
push
cmp
adc
adc
lea
aam
pop
sub
add
inc
or
aam
mov
xorb
lods
shlb
add
xchg
mov
jo
in
stc
dec
xor
movq
pop
sub
inc
push
sub
mov
sbb
clc
jno
add
aas
orl
sub
push
cmp
adc
sub
inc
adc
push
pop
and
cmp
std
xor
push
mov
mov
enter
leave
jp
int
and
iret
call
sbb
into
sahf
adc
fcomps
or
lret
sub
lea
jecxz
add
add
and
add
es
push
cmc
loop
dec
pop
cmp
loopne
cmp
adc
andb
cmp
rclb
popl
je,pn
sbb
call
arpl
add
xchg
pop
pushf
or
aaa
add
dec
or
adc
cmp
sahf
push
and
adc
je
pop
ja
in
xchg
jecxz
push
mov
sbbb
inc
cmp
dec
jne
jo
push
add
sbbl
pushl
jg
add
cmp
mov
roll
push
xchg
cmpl
push
or
orb
jmp
test
fstpt
dec
add
xor
add
xchg
add
shlb
out
sahf
mov
pop
mov
mov
add
cmpsb
or
scas
mov
pusha
inc
mov
dec
add
xor
fcmovnbe
js
pop
add
xor
or
repz
add
add
loopne
sbb
fadd
sub
movsl
pusha
add
mov
pop
jge
mov
movsl
popl
or
test
sbb
movsb
adc
add
test
aaa
mov
jge
je
mov
jmp
loopne
sub
rcrb
add
pop
in
mov
xorb
xchg
jp
add
jno
add
jne
cli
and
ret
fxch
rcll
sub
adc
call
sub
sbb
xchg
add
push
shll
cmp
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
adc
push
xor
mov
or
push
xchg
sub
mov
decl
and
mov
push
pop
addl
andb
fs
lea
fiaddl
sbb
add
push
and
aaa
daa
add
dec
pop
sub
fcomps
mov
or
mov
or
xor
add
push
call
sarb
aaa
fiadds
add
ret
and
out
sbb
adc
xorb
and
inc
push
or
mov
mov
pop
aas
add
jmp
sbb
or
mov
jne
jo
outsb
dec
add
push
ds
add
insb
lds
or
pop
mov
inc
or
lock
and
mov
push
pop
add
cmp
cs
jns
cmp
add
pop
push
jg
and
ljmp
adc
push
sub
or
cmp
pusha
lret
mov
add
add
insb
sti
cmp
jmp
mov
outsl
jb
imul
cmp
addr16
arpl
xorl
sub
scas
lret
int3
insl
mov
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
add
fcomps
adc
mov
adc
push
sbb
add
mov
mov
pop
dec
xchg
fisubrl
push
and
push
inc
jg
addb
inc
loopne
xchg
daa
mov
dec
pop
jbe
sahf
pop
rol
mov
outsb
add
jb
inc
add
and
sub
fs
ja
add
subl
adc
pop
mov
cld
loope
adc
sub
rolb
nop
mov
mov
sub
movl
imul
push
cmp
in
sar
repz
mov
ljmp
push
and
add
dec
sti
xchg
js
sub
insb
movsb
sbb
or
push
push
push
add
jnp
nop
test
or
daa
into
add
pop
xor
in
fldenv
loop
mov
add
add
push
addb
xchg
rolb
rorl
stos
sub
push
and
cmp
or
arpl
pop
xchg
or
add
imul
inc
add
and
add
xor
cmp
or
pop
mov
push
test
add
push
les
and
mov
inc
dec
inc
adc
mov
inc
or
scas
cmp
add
pop
add
push
pop
sbb
add
and
add
repnz
mov
cld
add
aas
ds
enter
loop
movsb
xor
loope
cld
cld
iret
add
xor
cli
cmp
mov
dec
sub
dec
push
xor
jbe
add
aam
xchg
pop
dec
idiv
stos
add
cmp
or
inc
mov
pop
mov
mov
add
cwtl
dec
sbb
xor
sub
xchg
and
cld
rcrb
add
jne
and
mov
ja
push
add
arpl
push
push
sysenter
pop
pop
and
jg
aam
jno,pn
out
jmp
push
add
push
push
push
test
in
or
mov
cli
das
loop
add
cld
dec
iret
sub
xor
mov
in
cli
jle
mov
into
push
mov
add
sbb
aas
and
movsl
loopne
add
icebp
cmp
mov
lret
xor
sbbb
add
cwtl
cmpl
push
shr
dec
pushf
push
xchg
add
adc
and
pop
or
dec
add
insb
rol
fsubp
test
or
inc
dec
pop
pop
ret
xor
or
mov
jecxz
scas
loope
in
mov
add
and
add
lret
pop
adc
pop
jecxz
adc
xchg
nop
add
inc
js
add
inc
loop
cmp
jo
add
in
mov
cmp
xchg
adc
imul
flds
cmpsb
clc
bswap
mov
sbb
cmp
fidivrl
pop
sub
pusha
push
sbb
mov
add
inc
in
testb
push
adc
insb
pop
pop
sahf
add
sub
push
dec
xchg
xor
cld
dec
jl
cmpb
jle
mov
iret
aaa
add
stc
add
jl
add
jg
sti
xchg
push
lock
cli
dec
inc
dec
fists
jns
dec
mov
mov
dec
cld
addl
push
inc
cwtl
icebp
sarb
xchg
mov
lret
cmp
repz
mov
ljmp
aam
test
ljmp
lcall
scas
and
jne
cmpl
or
sbb
lock
xchg
cmp
scas
mov
cld
jns
cmp
faddl
xchg
pop
xor
sar
and
cmp
icebp
jl
jmp
jbe
add
cltd
test
aam
lret
pop
push
repz
add
ficompl
cmp
leave
add
inc
pushf
aad
cmp
adc
dec
jg
loop
mov
sbb
inc
sub
jne
xor
icebp
push
mov
lods
loop
fs
aad
add
pop
xor
mov
cltd
pushf
xor
and
push
add
adc
sbb
rcll
int
cmp
mov
pop
push
jns
add
popa
xchg
jl
push
icebp
dec
add
test
add
dec
sub
in
xchg
jl
push
dec
lock
mov
add
pop
clc
mov
push
sub
or
or
add
inc
ss
decb
pop
ud0
add
jns
cmpsl
dec
jne
lcall
cmc
add
push
or
adc
jg
add
push
cld
aad
adc
or
addb
add
dec
andb
jno
add
adc
fnstcw
add
mov
mov
int3
hlt
and
das
adc
xchg
inc
lea
stc
mov
push
add
test
inc
lock
test
inc
bound
jnp
data16
mov
int3
push
mov
or
fisttpl
jmp
push
js
pop
and
mov
das
adc
sti
add
repz
push
jo
in
add
out
fidivl
add
push
mov
cmp
cmpsb
cmp
repnz
sbb
test
and
inc
ucomiss
cmp
in
rolb
mov
inc
popa
jl
orb
mov
ss
mov
adc
push
mov
push
mov
pop
add
inc
rorb
ret
es
adc
into
mov
ds
mov
fadds
sub
fwait
hlt
or
push
stos
ja
cli
add
push
xor
sub
xor
cmc
push
sbb
or
leave
in
push
push
cmp
or
mov
sbb
jecxz
lds
ficoms
or
or
lahf
push
cmp
jb
subl
jne
sbb
add
loope
hlt
mov
sub
or
add
nop
add
cmpl
subb
jno
jge
shl
mov
daa
add
adc
add
mov
jae
pop
pop
pusha
push
jle
and
mov
dec
add
sbbl
push
adc
movd
add
xor
fnstenv
sbb
xor
movsb
mov
add
xchg
enter
add
or
jne
add
lock
into
stc
jge
loopne
mov
pop
mov
cs
lock
xor
pop
pop
inc
frstor
jge
aas
and
lret
xor
push
inc
cmp
sub
add
leave
pop
pop
aad
mov
xchg
or
add
cltd
and
jno
add
sub
popf
dec
dec
and
sub
ret
iret
call
adc
sbb
xor
push
add
mov
idivb
add
sbb
add
arpl
mov
cmp
clc
pop
cltd
inc
or
push
pusha
jmp
cmpsb
dec
mov
mov
subb
push
jge
push
mov
pushf
and
int
std
add
call
data16
dec
or
fiadds
push
add
shrl
mov
add
mov
jl
out
insl
add
fimuls
shll
xor
filds
andb
jmp
pop
cmp
add
or
pop
test
push
notl
mov
pop
xchg
add
lret
dec
xchg
or
push
add
ror
push
push
orl
or
pop
arpl
mov
into
sub
mov
test
inc
mov
dec
mov
mov
fdivrs
pushf
mov
mov
daa
stos
jl
jbe
clc
cltd
and
add
pop
fisttpll
jo
push
les
add
add
fldenv
loop
cmp
add
dec
mov
daa
xor
pop
and
dec
clc
mov
push
add
dec
add
push
or
pushf
cmp
cmpsl
or
inc
pop
xchg
je
add
loope
adc
in
push
lret
sub
inc
add
inc
jno
adc
jmp
xor
filds
push
test
push
je
add
jmp
or
or
hlt
cs
and
inc
test
out
jmp
fdiv
and
mov
push
sbb
pop
jne
add
clc
xchg
or
int3
jg
cwtl
dec
cltd
xor
mov
inc
clc
adc
add
movb
sbb
jge
test
test
mov
ja
insl
cmpsl
jb
add
imul
xor
sbb
subb
je
push
js
add
add
adc
insl
add
data16
movups
ljmp
mov
mov
pop
push
ret
cwtl
xchg
add
repz
lea
jle
or
call
stos
cmp
add
rolb
add
inc
cmp
or
das
and
sub
xor
clc
scas
dec
jo
jecxz
je
fsubp
mov
fistl
and
pop
ljmp
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
jg
jmp
xor
fists
imul
or
jb
out
pop
push
xor
andb
pop
inc
pop
fildl
push
ja
cmp
push
inc
adc
call
dec
sub
mov
inc
jo
mov
aas
dec
loopne
inc
and
faddl
and
ret
pushf
nop
inc
cmp
add
mov
inc
enter
add
fimull
jno
int3
aam
aas
outsl
test
mov
fs
lds
pop
sbb
push
std
pop
loope
aaa
inc
dec
push
jg
add
imul
repz
sub
fiadds
and
xor
cmpb
jge
in
cmp
sbb
lahf
and
pop
inc
add
mov
lock
dec
xorb
add
adc
leave
sub
inc
sbb
sub
or
push
inc
and
rolb
cwtl
and
stos
add
or
ror
xchg
dec
loopne
fsubrs
push
je
jb
gs
jg
add
std
jae
fcoms
rolb
test
or
faddl
push
dec
cli
mov
add
inc
mov
add
clc
xchg
push
cmp
and
sbb
fsubr
cmp
call
xchg
add
lret
pop
ss
pop
imul
dec
dec
lods
cmp
rolb
pop
cmp
cld
add
add
mov
inc
jmp
mov
xchg
add
in
outsl
or
mov
hlt
ljmp
lock
adc
cld
in
xor
je
loop
add
add
jge
rcrl
arpl
js
jg
jbe
cmp
or
fists
lock
add
fwait
out
or
add
js
mov
add
push
adc
push
or
lea
je
xchg
mov
xchg
in
cmc
sahf
lock
sbb
and
clc
insl
mov
push
mov
mov
leave
js
sti
jp
pop
mov
push
xor
or
inc
jmp
pop
pop
sub
aad
ljmp
jne
sbb
dec
shl
test
dec
mov
xchg
cmp
mov
sub
or
jle
add
jmp
mov
mov
cld
add
inc
sbb
dec
gs
mov
add
orb
adc
add
jecxz
or
and
dec
dec
pop
add
or
es
add
xchg
jae
push
sub
add
or
sub
cmp
jmp
add
add
push
mov
add
fstl
add
call
leave
adc
sub
lds
pop
loope
enter
lods
push
pop
sbb
mov
ja
add
test
mov
mov
dec
jne
adc
sbbb
loopne
pop
inc
add
sub
dec
pop
jecxz
adc
jmp
push
add
and
movsb
pop
pop
push
push
sbbb
call
je
xor
pop
outsl
imul
add
pop
cli
add
lock
jl
shlb
mov
jmp
mov
jbe
jnp
sbb
aam
dec
mov
sub
xchg
and
mov
push
adc
sbb
sub
and
fs
xor
push
sbb
testb
adc
int
or
dec
les
sub
pusha
in
mov
push
push
rcrl
add
push
ret
and
mov
xchg
mov
sbb
sub
push
mov
add
push
test
or
adc
jmp
xlat
cmp
adc
xchg
rolb
es
mov
jecxz
xchg
lock
adc
stc
orl
push
inc
scas
clc
test
mov
push
add
adc
cmpsb
inc
ret
jmp
loopne
jbe
add
dec
jb
mov
pop
add
sbb
inc
mov
jnp
add
pop
nop
push
inc
aas
loope
jg
mov
repz
push
idivl
and
cs
mov
repz
xchg
lds
arpl
cwtl
add
sub
add
pop
mov
inc
push
rcrb
loopne
mov
add
int3
xor
and
lahf
adc
cmp
or
pop
jmp
lods
ret
inc
cmp
xor
xchg
pop
sbb
pop
cld
inc
fwait
cmp
in
sub
adc
mov
dec
add
mov
cwtl
or
and
mov
cltd
or
sub
push
mov
pop
add
push
or
loop
push
add
mov
icebp
xchg
mov
pop
mov
repnz
mov
add
jne
cs
mov
sub
sarl
add
and
shl
movsb
cmp
test
fiaddl
cwtl
jp
rolb
pop
cmp
push
rolb
mulb
add
pop
add
je
ja
lods
pop
jno
add
addl
stc
inc
jle
sub
lock
mov
in
or
xchg
jne
es
pop
pop
add
pusha
incl
fsubrl
push
push
cmp
lret
jle
push
das
dec
cmp
enter
icebp
pop
movsb
sbb
mov
add
sub
adcb
cmp
or
jge
mov
add
mov
adc
lods
shll
daa
pop
push
loop
add
adc
push
push
nop
or
test
cmpsb
rcrl
ss
lock
mov
in
movsb
add
test
sub
sub
daa
repnz
pusha
xor
dec
sbb
pop
sub
inc
xchg
jbe
int
adc
xlat
and
dec
stos
aas
add
jl
je
xor
add
aad
lea
rcrb
fisttpl
sub
cmp
add
fmulp
shr
mov
es
sub
pop
or
ret
iret
aad
shlb
adc
test
inc
inc
add
mov
cwtl
cwtl
xor
pop
mov
enter
ret
mov
add
add
or
adcb
add
out
inc
add
jb
or
cmp
inc
push
and
adc
pop
adcb
mov
sbb
sbb
stc
add
add
mov
mov
add
aam
flds
add
adc
hlt
shl
sub
xor
cmp
or
add
mov
lds
mov
aaa
cli
jbe
cmp
or
xchg
add
jge
and
mov
mov
add
jmp
cmp
pop
mov
adc
cmp
inc
add
xchg
add
aas
push
sbb
test
int3
pop
into
sbb
ret
inc
mov
push
add
nop
sbb
enter
mov
push
mov
hlt
push
daa
lret
into
pop
ds
or
sbbl
mov
pop
pusha
fisttps
add
add
leave
repnz
bound
inc
clc
jl
cld
jp
loope
mov
add
test
lds
aad
iret
decl
js
jo
mov
push
stos
mov
out
cmp
jmp
and
test
notl
out
sbb
mov
inc
imul
cmp
jl
pop
xor
cmp
pushl
xor
pushf
popf
sti
jmp
jle
push
inc
mov
add
sbb
cld
sarb
int3
repnz
test
jge
sbb
nop
fildl
inc
add
stos
clc
scas
adc
jecxz
cmp
pushf
mov
testb
inc
aam
testl
jp
iret
shll
hlt
pop
fsub
fadds
ds
push
add
cmpsb
scas
mov
pop
add
jbe
pop
dec
dec
in
xchg
jo
in
add
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
lret
push
fwait
xchg
and
add
les
aad
bound
lret
aas
cli
dec
loopne
add
mov
adc
fs
or
mov
add
pop
loop
jo
movsl
and
push
add
mov
aad
xchg
popa
add
rcrb
or
psrld
fcmovnb
pop
adc
mov
pusha
cmpl
ss
cmp
xor
jle
mov
jmp
test
jb
add
jne
not
loopne
rolb
inc
pusha
xlat
cmp
jb
add
ja
popf
repz
addb
pop
testl
je
xor
jnp
push
jecxz
lock
mov
pusha
and
add
adc
pop
add
repnz
ret
insl
pushl
add
call
and
flds
rolb
test
adc
or
in
in
adc
roll
rorb
push
jb
hlt
cltd
mov
mov
inc
add
mov
nop
das
adc
xor
adc
and
addl
add
push
stos
push
shl
cvttps2pi
sub
loopne
incb
add
cltd
sar
add
outsl
lods
dec
ljmp
mov
out
or
call
ljmp
dec
add
dec
movsl
add
pop
aaa
in
pushf
sub
pop
sub
or
mov
or
mov
cld
ret
loopne
in
push
stc
push
cmovb
or
add
clc
pop
push
subl
and
xor
dec
out
fs
inc
aad
or
les
add
data16
std
adc
add
test
adc
xchg
mov
mov
xor
adc
jmp
fs
dec
sub
call
js
imul
push
adc
sub
push
popf
repnz
fbld
fnstenv
mov
add
and
sahf
add
mov
push
imul
mov
adc
clc
enter
lock
sbb
add
xor
inc
cmpl
jge
xor
loop
call
push
ret
inc
test
into
or
pusha
ds
push
mov
xor
mov
mov
pop
dec
andb
add
sbb
out
jg
movsl
clc
adc
push
ja
jl
xor
jge
add
or
sub
sub
sbb
mov
or
test
mov
mov
dec
adc
sar
add
sub
insl
jmp
outsb
pop
xor
pop
xor
mov
add
int3
out
add
mov
cmp
cmp
fsub
push
or
mov
mov
or
add
or
add
mov
lret
add
and
testb
dec
dec
loope
inc
push
imul
cmp
and
jle
add
fdivrs
dec
cmp
and
cltd
add
push
inc
pop
fdivs
mov
or
pusha
jmp
loope
dec
std
es
pushf
in
cmp
and
adc
enter
xchg
mov
and
test
movsb
jb
loopne
scas
nop
scas
mov
sub
jl
and
je
jo
mov
add
cmp
in
jb
cmp
sbb
int3
xorl
in
jb
or
loop
mov
call
push
clc
pusha
and
xchg
lock
call
cmpsb
adc
loopne
cltd
add
rorl
or
ret
call
mov
add
and
jnp
add
js
cmp
jae
fs
push
test
inc
femms
inc
xchg
mov
les
cmc
pop
into
mov
in
cld
sbb
pop
pop
lock
add
sbb
jl
hlt
and
cmc
xchg
test
in
jb
stc
cmp
sbb
and
cld
and
xchg
shl
enter
loop
push
cmp
out
out
call
jmp
ret
andb
out
in
jb
cmp
sbb
rolb
jl
or
and
xchg
xlat
aad
mov
sbb
sbb
and
and
ficoms
shll
cmp
inc
inc
lds
add
and
xchg
jae
add
in
jb
cmp
sbb
into
iret
xchg
push
add
jb
cmp
mov
mov
mov
and
mov
jb
cmp
mov
and
jge
add
call
out
adc
xor
add
or
insb
gs
dec
addb
push
filds
inc
jb
push
add
jle
mov
rorb
add
pop
ljmp
adc
cmp
adc
popf
push
or
std
mov
pop
rcrb
inc
js
add
jb
hlt
mov
pop
xor
mov
cmp
addb
jo
pop
loope
adc
pop
test
or
adc
dec
jne
je
dec
add
outsl
jb
cmp
andb
inc
inc
jo
jmp
or
outsb
mov
mov
add
hlt
test
or
fmuls
dec
fimull
mov
js
adc
insb
mov
inc
pop
mov
push
sub
push
add
loop
rorb
inc
je
add
jns
mov
popa
pop
hlt
pusha
and
fcoml
push
outsb
xor
shr
and
or
inc
dec
jbe
scas
data16
push
sub
mov
dec
ret
mov
cmp
push
bound
mov
popa
jmp
pusha
sbb
mov
nop
imul
mov
rol
or
decb
xchg
pop
ficoms
rcrb
jmp
insb
pop
dec
inc
cmp
and
jle
inc
pop
or
inc
push
outsb
fs
pop
nop
push
sbb
pop
mov
cmp
mov
mov
pusha
xchg
dec
ss
test
rolb
mov
hlt
cmp
xchg
add
scas
rolb
add
outsl
aam
add
mov
add
ljmp
add
mov
mov
or
repz
sub
add
mov
add
nop
fs
pop
enter
xor
arpl
mov
shrb
jo
inc
imul
sbb
das
or
push
mov
mov
pop
and
ret
jb
pop
gs
jmp
outsl
fs
pusha
and
pop
push
bound
jae
mov
addr16
sbb
or
push
cmp
push
mov
popa
loop
mov
incl
add
dec
add
cmp
shr
pop
add
repz
pop
or
cltd
add
push
adc
or
add
add
bswap
mov
mov
call
sub
add
loope
lret
pop
dec
push
xor
sub
popf
inc
jnp
ret
mov
sbb
out
dec
cmc
pop
ds
inc
xor
sub
insl
cmp
stos
adc
add
mov
xchg
mov
ret
movsl
js
scas
aaa
pop
add
emms
push
add
cmc
clc
sbb
repz
je
mov
movsb
cwtl
or
jp
ja
pop
test
sub
sub
cmp
add
movzbl
push
xlat
add
sub
pop
scas
ja
push
or
call
inc
add
sbb
pop
add
incl
and
adcb
or
jmp
fs
sub
aaa
dec
clc
insb
into
sbb
pop
shll
out
push
add
xchg
loope
push
pop
dec
hlt
cmp
fwait
cmpl
or
add
xchg
sbb
adc
fisubl
push
or
inc
movups
dec
add
clc
cld
add
lock
add
mov
fisttpl
add
je
inc
mov
xchg
cmp
sbb
js
jl
push
aas
sbb
dec
push
out
add
test
repz
test
hlt
lcall
sbb
lock
les
daa
or
test
mov
int
fstpt
push
xor
bound
jg
ss
stos
xor
pop
jmp
mov
inc
sbb
push
test
icebp
in
or
dec
das
rcll
in
dec
cwtl
insb
add
sub
and
push
cltd
inc
sub
lret
adc
push
das
adc
rcl
xor
ret
idiv
cmp
dec
pop
adc
mov
mov
sub
pop
add
xchg
flds
sbbl
push
mov
push
adc
loopne
cmpsl
mov
add
pusha
xorl
test
sbb
add
stos
lahf
into
sbb
add
push
addb
add
mov
add
sti
addr16
lahf
loopne
cmpb
adc
mov
cmp
jl
inc
push
out
mov
cmp
jne
add
test
jg
jl
add
aas
mov
jge
add
sub
popf
cmp
jne
sub
xchg
mov
sbb
pop
movsl
es
add
sbb
push
add
inc
xor
mov
push
sbb
rclb
and
inc
andl
add
xor
cmp
icebp
add
rorb
aad
cmp
pop
mov
ds
mov
add
jecxz
xor
add
push
add
loop
push
fwait
lock
add
xor
js
xchg
xchg
test
push
or
jge
adc
je
call
rolb
xchg
add
insl
clc
xor
rolb
call
sbb
add
fstpt
push
jmp
je
add
inc
or
add
enter
mov
in
adc
ret
pop
cltd
add
ds
nop
je
rcrb
mov
sbb
add
pop
cs
roll
loopne
add
lods
push
call
mov
pop
fldl
pop
dec
inc
sbb
test
subl
leave
cmp
xlat
dec
mov
repnz
inc
stc
popw
dec
fsubr
shrb
fldl
and
jl
adc
add
push
in
incb
adc
sub
mov
mov
xor
lret
lods
adc
je
jp
add
mov
decl
mov
mov
out
add
xor
aas
or
push
jb
or
call
fwait
lret
inc
lock
inc
push
sbb
push
and
cmp
dec
pop
cli
or
enter
add
pop
inc
cmpl
mov
sub
inc
push
lret
rolb
mov
pop
mov
jle
clc
orb
stos
cltd
mov
enter
and
mov
clc
cmp
add
cli
or
adc
pusha
lea
cwtl
in
addl
push
or
xor
cmp
inc
add
jno
push
push
and
xchg
pop
mov
arpl
sbb
clc
push
inc
int3
sub
jbe
jb
out
bsf
dec
in
hlt
pop
iret
sbb
push
or
call
rol
mov
lcall
fnstcw
nop
psubq
jbe
outsl
mov
fs
add
dec
add
dec
mov
add
loopne
adc
push
js
and
push
or
out
movswl
pop
mov
mov
pop
dec
into
dec
lcall
dec
fcoml
add
cmp
cltd
push
mov
xor
add
rcrl
into
add
xor
sub
xchg
add
hlt
or
pusha
out
cmp
into
pop
add
stos
jae
add
es
push
jmp
fbstp
mov
mov
addb
sbb
fisubrl
jmp
or
ljmp
adc
mov
cs
or
mov
es
lock
popa
jne
push
push
hlt
ss
add
sbb
dec
nop
mov
xor
cmpb
pop
lcall
rcll
lret
add
pop
movsl
push
es
cmpsl
pop
or
push
loopne
add
pop
movb
cmp
mov
or
sub
xor
jb
add
ja
imul
inc
in
mov
mov
sub
ret
sbbb
add
push
ja
add
rol
aam
bound
out
es
je
lods
xchg
jg
add
mov
add
sahf
push
cld
cmpb
xor
fidivs
pusha
jae
and
bound
or
add
cmpsb
enter
jnp
jb
in
or
cmp
fs
xor
dec
or
int3
and
adc
jns
add
push
jo
dec
pop
fdivrl
roll
xchg
rclb
lea
les
cltd
add
cmc
cmpsl
fs
xor
mov
sub
or
pop
jne
mov
and
testl
add
sbb
pop
add
mov
inc
add
das
push
ret
icebp
xlat
add
lea
add
leave
mov
faddl
mov
lock
cwtl
jmp
pop
lret
push
push
push
dec
inc
mov
out
add
or
jne
lea
scas
sub
icebp
xchg
dec
loopne
push
push
and
cmp
cmp
or
add
and
and
cmp
pop
or
add
testl
pop
xchg
mulb
jnp
add
hlt
bound
mov
push
js
fsts
ret
inc
jmp
push
xchg
cmp
and
push
or
lods
loopne
add
jmp
mov
dec
movsl
push
jns
sbb
push
dec
sbb
lock
ja
add
or
push
jl
or
divb
mov
loopne
add
push
add
add
pop
jecxz
iret
dec
lret
sbb
pop
inc
push
addb
inc
loopne
add
cmp
mov
add
add
xchg
mov
add
aas
push
ja
add
inc
add
loopne
add
cmc
dec
inc
call
mov
cmp
bound
loope
mov
sub
sbb
daa
adc
add
dec
cmp
mov
and
add
inc
iret
sub
movsl
xchg
add
shll
push
ret
sarl
xor
pop
adc
nop
add
jb
dec
icebp
and
fistps
sub
popa
or
pop
into
clc
xor
add
or
and
sti
add
fldcw
add
lahf
lock
dec
add
shll
cwtl
inc
add
and
adc
cmp
cli
lret
mov
rorl
sub
cmp
jecxz
add
jne
dec
outsb
shr
add
jnp
jmp
or
aas
xchg
lock
cmp
ret
shlb
pop
fildl
testb
pop
add
popa
xchg
push
inc
mov
jge
add
sub
inc
arpl
add
leave
push
xor
xor
xor
jp
or
decb
jns
xchg
in
xor
xor
push
xchg
add
or
add
lret
ja
pop
dec
sbb
mov
pop
push
pusha
adc
inc
filds
xsave
jae
sbb
add
stc
jl
add
xlat
cmp
lcall
imul
leave
pusha
imul
push
rorl
call
or
add
mov
or
pop
fwait
cmpsl
add
sbbl
add
dec
push
jo
jno
dec
add
les
add
daa
or
add
adc
shr
add
pop
call
push
cmp
xor
jne
hlt
punpckhwd
pop
clc
mov
test
enter
and
push
adc
ss
add
testb
mov
icebp
sub
imul
jl
lods
pop
clc
or
out
fdivrs
std
push
cmpsl
and
cmp
gs
loopne
lea
add
cwtl
xor
in
fiaddl
mov
jge
push
nop
cmp
push
fsubs
ja
jle
addb
out
sbb
sti
sbb
mov
ja
lret
add
sbb
pop
add
inc
loopne
negl
dec
mov
xor
imul
rcrl
sub
inc
ss
jle
loop
add
or
pop
jne
add
push
add
mov
jecxz
icebp
add
jb
bound
pop
cmp
adc
pop
clc
lock
pop
nop
xor
pushl
push
add
outsb
call
add
test
jg
push
loope
xlat
xchg
add
enter
addr16
mov
ljmp
xchg
into
dec
dec
and
or
xchg
filds
jmp
adc
ret
adc
sub
or
in
mov
add
lods
mov
xor
cmpsl
push
mov
lcall
decl
push
sub
cltd
imul
and
sub
inc
insb
add
pop
mov
add
lock
scas
push
and
add
dec
jae
sub
mov
ss
add
ret
ja
je
pushf
add
mov
mov
add
jb
mov
sbb
add
mov
add
or
push
hlt
push
and
inc
daa
push
fdivs
add
xchg
or
add
dec
mov
add
outsl
xchg
rolb
add
popf
or
push
int3
imul
xchg
jle
cwtl
shll
pop
add
daa
mov
add
fcoml
pop
sbb
sbb
add
push
add
xchg
and
sub
xlat
add
jp
xor
add
sub
xor
dec
mov
sub
mov
sqrtps
nopl
es
or
mov
push
shlb
add
push
push
add
les
add
or
mov
jmp
add
push
xchg
pop
add
xlat
jmp
testl
stos
xor
adc
xor
add
add
xchg
fidivl
inc
add
dec
shrl
adc
das
jp
call
add
xchg
pop
addl
inc
or
push
push
mov
dec
mov
sub
add
fcmovne
dec
pop
jge
add
les
cmpl
adc
jnp
jmp
sti
or
je
add
mov
add
and
mov
lcall
mov
jno
dec
jmp
add
sub
ret
and
jae
jne
pushf
xchg
mov
jp
push
aaa
gs
mov
add
je
pushw
jle
pop
mov
add
stos
and
cwtl
mov
or
das
into
or
mov
in
pop
dec
les
pop
mov
inc
sahf
dec
inc
sub
pop
rol
pop
and
xor
add
pop
mov
cmp
stos
cmp
scas
push
jbe
dec
lods
add
ja
scas
jnp
add
push
xchg
aam
mov
dec
or
scas
ss
add
sti
inc
pop
pop
outsb
je
add
dec
push
sarb
push
push
cmp
dec
adc
aam
nop
jno
xor
add
mov
sub
stos
adc
gs
adc
clc
and
mov
nop
mov
and
imul
and
or
jp
pusha
cmp
das
lds
loopne
xor
repz
add
push
mov
add
and
mov
sub
inc
rcrl
mov
bsf
mov
loopne
ja
cmpl
push
lock
add
adcl
lock
insl
pop
scas
aad
push
inc
add
mov
add
jae
arpl
and
lds
sub
dec
sbb
or
aaa
insl
mov
aad
sub
daa
pop
fs
xadd
js
jmp
push
nop
inc
test
jns
add
mov
clc
push
cli
test
lahf
dec
adc
je
inc
xor
shrb
test
jl
popa
test
les
insl
jge
lock
dec
fcompl
fs
add
add
sbb
fmuls
pop
in
add
mov
call
add
lret
jb
jo
add
test
add
mov
mov
rcl
and
in
adc
dec
add
sbb
mov
mov
out
inc
std
mov
shl
inc
pop
sub
nop
inc
ret
daa
ret
sub
mov
jmp
sub
popf
xor
mov
int3
daa
add
js
adc
inc
adc
sbb
dec
mov
pop
add
mov
adc
mov
adc
dec
sbb
mov
dec
and
fdivs
push
push
insl
add
aad
push
pop
gs
es
dec
popf
mov
cmp
test
pop
inc
push
xchg
add
adc
sub
addr16
cmp
lods
addb
es
mov
add
mov
daa
add
push
or
mov
pop
lea
push
push
add
pop
nop
pop
inc
arpl
fiadds
rcpps
add
dec
or
in
add
dec
and
call
add
mov
sbb
les
mov
ss
cmp
jmp
popf
in
sbb
hlt
inc
mov
outsb
sbb
inc
sarl
leave
fistps
lods
test
xor
mov
and
decb
nop
add
push
sub
jmp
pop
or
and
aaa
pop
dec
lods
cld
rorb
js
insl
addb
push
gs
addb
push
sahf
insl
subl
jo
sub
mov
xor
out
aas
jo
sbb
add
hlt
stc
add
dec
adc
in
mov
scas
inc
jno
fildl
sbb
js
incb
sti
add
jg
cmp
jne
icebp
push
adc
inc
call
insb
add
pop
pop
cwtl
stos
jmp
sbb
sarl
add
pop
les
orb
inc
add
or
addl
dec
je
or
ljmp
and
ja
jne
adc
pmaxsw
fcoml
sbb
xsavec
jno
pop
jmp
xor
cmp
push
cld
loop
les
in
or
popl
push
shr
addr16
mov
xor
outsb
sbb
addb
jne
pop
hlt
lock
mov
adc
inc
addb
push
mov
mov
dec
mov
sub
jne
into
mov
orb
dec
lock
dec
mov
int3
shrb
push
or
or
imul
add
sub
mov
cmp
push
adc
add
dec
jmp
inc
push
bound
cmp
pop
daa
jmp
pusha
inc
in
stc
aaa
in
add
and
jmp
das
xor
nop
mov
mov
ret
flds
add
or
adc
or
into
adc
clc
push
out
push
loopne
call
push
mov
fsub
nop
add
adc
into
add
or
add
and
jo
cs
movsb
andl
adc
adc
mov
xchg
mov
fsubs
cmp
pop
add
or
jns
add
lock
and
test
or
leave
add
je
data16
xchg
dec
cmp
cmpsb
mov
xchg
shl
cli
hlt
cmp
push
mov
call
loopne
jb
add
cmp
dec
or
pop
adc
mov
movsl
or
add
add
and
xchg
lea
dec
lret
pusha
fs
jmp
pop
aas
xchg
and
pusha
pushf
xchg
mov
test
sbb
adc
and
pop
movsb
mov
mov
cmpsl
inc
mov
mov
mov
aad
mov
cltd
movsb
jp
dec
mov
das
xchg
cld
mov
ret
add
cmp
jb
je
inc
add
or
out
add
imul
mov
scas
popf
je
fimuls
adc
mov
mulb
rcrb
xchg
add
pop
adc
leave
push
jecxz
mov
add
lock
subl
sub
or
add
lret
adc
adc
sbb
jno
xchg
pushw
les
in
leave
mov
mov
sti
mov
dec
arpl
pop
repnz
mov
push
add
adc
or
mov
xchg
sub
test
xchg
andl
test
int3
sub
inc
mov
clc
jns
lcall
dec
xchg
sbb
filds
and
sub
add
lahf
flds
xor
out
pop
sbb
inc
ljmp
and
test
inc
and
aam
push
sbb
inc
mov
jne
hlt
sbb
scas
add
mov
pop
arpl
pop
pop
movsb
add
mov
and
test
push
fmuls
lea
push
adc
add
rorl
xor
data16
add
sti
cmp
repz
inc
dec
test
add
xor
xor
idivb
add
loope
and
add
add
add
add
inc
pop
std
inc
mull
shr
adc
in
add
jnp
les
ljmp
push
dec
repnz
ja
jns
nop
xor
cli
pop
adc
shl
mov
mov
imul
add
cmpsl
jl
add
mov
xor
enter
pop
clc
mov
cmpsb
fldl
sub
jb
adc
inc
and
add
out
test
add
lea
adc
add
push
or
push
jbe
lahf
push
and
xor
dec
add
add
adc
loop
jl
add
mov
cmc
add
lret
adc
or
sub
mov
or
dec
push
and
add
pop
and
inc
cmp
inc
subb
jb
push
inc
mov
pop
cmc
xor
cwtl
dec
stos
ret
call
out
subl
cmp
add
pop
push
or
psubw
insl
gs
and
stos
cli
add
adc
dec
add
leave
ja
add
dec
adc
je
cli
sbb
in
add
mov
movsl
in
pusha
in
mov
shrb
out
je
shlb
adc
sbb
in
jle
jmp
lds
icebp
dec
add
sbb
adc
adc
std
push
cmp
test
outsb
sbb
cmp
mov
mov
nop
cmc
enter
ss
rcr
cmp
add
lahf
imul
sub
aam
mov
and
add
pop
fsubr
add
cld
sub
xchg
cmp
lds
fcomps
mov
mov
adc
mov
sub
shrb
inc
clc
idivb
hlt
cmp
enter
roll
pop
mov
dec
arpl
in
push
sub
les
aas
xchg
and
cwtl
rolb
lock
mov
add
mov
add
push
hlt
mov
pop
iret
mov
sub
sbb
ss
stc
inc
or
mov
fstpl
add
dec
xchg
mov
mov
jo
add
push
push
insl
das
fs
mov
cld
push
pop
add
or
repnz
popa
mov
push
add
and
jge
inc
xor
loopne
xchg
add
push
mov
sub
cmp
add
test
pop
add
push
mov
je
add
aam
test
add
xor
pop
mov
inc
inc
and
add
icebp
sbb
mov
mov
cmp
or
and
mov
inc
jb
add
imul
enter
popa
jle
sbb
inc
add
fld
sub
insb
xchg
push
add
adc
rorb
cmp
pusha
add
call
pop
sbb
and
dec
push
notb
push
mov
jl
and
xlat
js
xor
mov
addl
xor
and
les
inc
dec
mov
xor
es
aas
inc
xor
divps
sbb
add
mov
or
lods
push
loope
adc
je
insb
mov
xor
int3
out
push
add
cmp
sub
test
inc
inc
add
fcoml
sbb
cli
mov
sbb
enter
dec
mov
mov
hlt
rcrb
or
mov
cmp
adc
rep
scas
fsubl
test
sub
adc
xchg
or
aas
jo
aas
pushf
pop
add
lahf
cwtl
lahf
mov
nop
aaa
js
mov
dec
or
mov
test
andb
scas
pop
cmpsl
sbb
fs
je
mov
mov
lock
cmp
flds
cld
xor
cwtl
iret
adc
in
movsb
xor
repz
adc
mov
pushf
js
xorl
inc
sbb
stc
clc
andl
hlt
xchg
addb
sbb
and
aas
adc
inc
leave
inc
rolb
repnz
xchg
imul
stc
dec
das
and
push
add
je
xchg
data16
push
sub
or
and
xchg
addb
add
sti
shll
dec
pop
xchg
pop
cld
xchg
sub
xor
jae
xchg
call
sbb
nop
inc
cs
cmp
cld
jne
out
mov
pop
adc
add
add
or
mov
mov
add
popf
xor
xchg
pop
mov
mov
or
push
jb
cmp
aam
inc
inc
xchg
and
shlb
push
mov
mov
add
sbb
push
add
dec
dec
push
in
mov
cmp
std
jl
sbb
leave
xchg
sbb
sbb
push
pushf
sarb
iret
jmp
cld
ret
inc
inc
add
loop
or
or
stos
push
clc
pop
dec
cld
inc
add
stos
xorl
and
stos
pop
adc
or
rol
pop
or
mov
add
xchg
add
add
ljmp
push
pop
in
stos
add
jmp
loop
jge
andl
push
mov
mov
stos
xchg
add
popa
fdivl
divl
push
add
inc
dec
pop
or
adc
xchg
push
stos
cmp
clc
and
jae
addb
cmp
sbb
push
loop
add
add
sub
fldt
mov
dec
add
faddl
add
dec
jne
add
xor
ljmp
jecxz
aas
jae
add
add
sub
es
sbb
inc
push
add
and
and
add
cmp
jbe
jg
jmp
pushf
xchg
rclb
and
add
shlb
pop
jbe
dec
mov
jp
sub
call
not
cvtdq2ps
inc
loop
lock
pop
shlb
add
and
outsb
inc
add
and
std
es
jg
push
add
add
jge
cld
aam
sbb
jle
add
cs
inc
cmp
fidivl
jle
add
adc
sub
sub
xor
inc
pop
sub
repnz
add
imul
add
or
mov
jmp
scas
icebp
or
or
pop
push
dec
testl
shr
test
jmp
rclb
mov
das
in
sbb
or
sarl
or
stc
cmp
adc
add
push
mov
sbb
add
cmpsb
fwait
push
push
cld
xor
xchg
popa
jmp
nop
xor
sub
popa
inc
xlat
je
cmp
lock
add
test
je
or
cmp
daa
mulb
jo
and
dec
xchg
adc
sbb
add
or
add
lods
cmp
rcrb
test
jmp
sbb
add
mov
mov
push
clc
cwtl
push
and
es
xor
add
jl
in
xor
xor
gs
ss
movb
push
xlat
jmp
inc
jbe
cmp
sarl
outsl
lret
andl
cmp
scas
mov
movsb
jno
scas
xor
sub
mov
decb
insb
add
mov
xchg
pop
add
imul
add
shl
jbe
cmp
dec
add
and
ret
cmp
dec
addb
add
sarb
push
inc
jl
popa
sub
lret
sbb
inc
mov
pop
pop
ret
inc
cld
sub
push
lret
add
into
daa
cs
repz
add
push
mov
adc
and
add
es
mov
add
ja
xchg
fsubs
cld
add
or
in
and
jno
add
add
push
mov
iret
ja
mov
in
add
sub
ficoms
mov
sbb
adc
xchg
add
dec
inc
jne
jmp
mov
xor
in
add
cli
inc
mov
dec
inc
pop
push
adc
loopne
xor
and
push
loop
jne
mov
cld
jecxz
xor
mov
leave
repnz
cltd
mov
shll
add
jbe
add
adc
sub
or
add
rorb
cmc
xchg
push
or
cmp
testw
lahf
pop
adc
jle
add
adc
inc
push
in
shr
bound
aas
cmpb
adc
add
gs
mov
in
pop
loopne
fabs
call
or
fldt
add
cmpsb
test
add
addb
pop
fidivrl
fbstp
lea
add
mov
inc
sub
adc
call
sub
sub
cmpb
mov
xchg
or
add
dec
or
cmp
cmp
movlps
sbb
xor
jo
sbb
dec
js
adc
cmp
in
or
pop
data16
cmpsb
adc
xor
pop
sub
add
and
sub
mov
mov
ljmp
push
add
inc
push
mov
addr16
cs
enter
sysexit
test
push
into
mov
repz
mov
add
testb
dec
add
or
fidivl
jae
add
push
nop
rclb
add
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
mov
mov
or
out
add
and
jne
dec
out
add
add
stos
add
sbb
and
ss
xor
addr16
andl
cmpb
shl
stos
add
repnz
mov
xor
mov
push
test
pop
lock
add
fnclex
add
add
or
add
or
call
sub
jo
cmp
ret
add
sub
movsb
pop
add
add
je
push
sub
fists
jo
pop
aam
add
sbb
sbb
and
popa
xchg
loope
cwtl
div
dec
mov
push
inc
add
add
aas
jmp
fucomi
fwait
add
clc
test
popa
sahf
cmp
ffree
mov
mov
nop
add
xchg
and
add
aas
sub
dec
add
add
fimull
add
push
test
and
mov
xor
dec
mov
adc
xchg
cmp
imul
nop
pusha
es
hlt
jl
add
mov
mov
mov
hlt
push
add
push
jne
sbb
jno
mov
add
add
add
add
daa
add
in
mov
sub
xor
mov
jp
lds
adc
adc
inc
inc
and
inc
loopne
cwtl
test
add
or
or
cld
les
in
and
sub
rcrb
add
lea
mov
lds
jae
mov
push
add
xlat
and
movsb
mov
cmpb
dec
sbb
mov
cs
jo
dec
jbe
or
scas
jns
xorl
jge
or
lods
and
loopne
ret
rorb
fwait
jo
xchg
setl
and
clc
add
inc
inc
push
aam
push
or
mov
and
pusha
in
jnp
movsl
pop
dec
hlt
xor
jecxz
push
not
mov
pop
or
shl
cli
fsub
mov
or
loopne
add
push
jno
mov
out
add
mov
and
popf
push
jg
and
or
jl
add
push
ret
adc
mov
clc
mov
add
test
adc
fs
sub
shr
add
icebp
cmp
jmp
repz
pushw
and
dec
mov
clc
cmp
add
and
popf
mov
adc
cli
jae
jl
add
shlb
xchg
add
add
jmp
xchg
adc
sub
dec
jecxz
setne
loopne
jne
loope
sbb
leave
xor
inc
adc
mov
lret
nop
in
popf
lret
test
cltd
add
test
adc
add
jmp
loop
inc
pop
ds
pushf
cmc
add
daa
sbb
add
sbb
lret
push
leave
addb
jbe
and
sbb
or
in
xor
daa
or
adc
push
iret
sarb
add
add
cs
or
sub
aas
push
dec
movsl
push
loopne
popf
stc
cmp
jbe
pop
scas
xchg
popa
or
cmp
mov
add
popf
xchg
or
cmp
inc
cmp
sar
or
push
lahf
push
les
mov
push
adc
add
dec
paddsw
out
pop
add
mov
lahf
outsl
mov
js
hlt
add
in
aad
cmp
inc
inc
inc
add
add
mov
add
add
fdivp
enter
or
or
add
ljmp
dec
jne
jle
in
arpl
cmp
dec
addr16
sub
loop
pop
mov
jo
add
pusha
movsb
test
in
ret
xchg
popf
rorb
push
jl
inc
lods
xlat
dec
in
add
cwtl
add
das
loope
loopne
jns
add
hlt
loop
or
sbb
aam
shl
inc
lss
sbb
pop
lods
xlat
push
adc
push
and
add
xor
clc
push
jne
xor
add
in
jge
lock
incl
jae
aas
dec
in
adc
daa
mov
fstps
and
cmp
or
in
sarl
sbb
jl
pusha
pop
mov
incl
add
sub
jae
lods
dec
add
andb
and
decb
in
je
jge
add
sbb
xchg
sbb
cmc
shrl
insl
cmp
add
repnz
lahf
mov
inc
inc
add
inc
dec
dec
sbb
dec
dec
add
dec
push
push
push
cmp
mov
pop
add
popa
bound
jae
jo
add
imul
outsl
add
jb
je
jbe
ja
add
xor
xor
xorb
sub
add
sub
add
jge
cmp
sub
add
daa
or
add
push
call
xchg
pop
stos
add
or
add
clc
or
adc
xchg
ret
jmp
hlt
sub
cmp
repz
fsubrl
xchg
incl
data16
loope
mov
cmp
add
and
jmp
add
xchg
in
loopne
push
dec
add
pop
jle
jno
sub
test
rcrl
add
or
inc
lahf
add
xchg
andb
add
add
xor
lock
cli
adc
stos
lret
xchg
pop
pop
jle
or
dec
adc
mov
faddl
add
jg
adcb
ds
out
cmp
adc
in
jno
pop
mov
dec
inc
dec
in
call
jbe
sub
movl
roll
decl
xchg
lods
add
jle
cli
fldpi
fisubl
add
and
adc
xchg
out
cmp
push
nop
push
xchg
jnp
jo
mov
add
pop
lahf
sbb
push
movsl
cmp
xlat
test
fildll
adc
add
dec
leave
or
imul
add
add
pop
jo
and
sub
out
push
mov
insl
lods
sbb
enter
gs
fdivrs
inc
rorb
or
mov
dec
pop
inc
sub
hlt
push
push
lods
les
pushf
push
pop
or
cmp
je
xchg
sti
lea
mov
imul
xor
mov
mov
and
outsl
mov
dec
add
pop
mov
or
push
and
mov
loop
xchg
sbb
or
inc
or
cs
jb
add
push
push
inc
push
ror
loope
aad
insb
xchg
and
hlt
ljmp
aam
lods
lahf
jg
push
mov
leave
das
or
jle
or
add
mov
push
adc
mov
pop
cmp
test
daa
and
hlt
sbb
pop
adc
dec
xor
lcall
fstps
lret
add
xor
or
jl
jecxz
loopne
fld1
mov
xor
xchg
testb
add
jne
loop
add
xchg
add
test
xor
add
adc
pop
sub
and
mov
add
decb
fcompl
mov
add
shll
in
jge
add
mov
or
cmp
add
adc
pop
and
testl
mov
cmp
add
jo
lock
mov
and
add
sarl
sbb
pop
das
xchg
out
rolb
add
not
stos
cli
ja
mov
lock
ret
or
gs
push
add
idivl
push
into
inc
les
jne
or
and
push
enter
and
cmpsb
ficomps
movsl
test
pop
in
lret
jb
add
xlat
push
sarb
mov
mov
insb
movsl
mov
and
xchg
lock
sub
mov
inc
jg
add
lahf
mov
jnp
das
jns
sbb
push
hlt
push
inc
jae
xchg
adc
push
sbb
dec
add
fs
jne
or
mov
shr
rolb
xlat
arpl
or
lret
add
inc
pushf
movsb
sbb
out
jno
scas
fisttpl
pop
mov
mov
xor
cld
jno
push
mov
sub
negl
push
scas
shl
test
add
xchg
bswap
clc
daa
add
aaa
push
xor
mov
xchg
test
xor
sbb
sbb
rorb
push
add
mov
lods
out
xor
cmp
jne
lcall
sbb
imul
mov
push
push
dec
adc
add
or
push
cld
test
xchg
inc
add
mov
fs
add
mov
xchg
mov
andb
jae
in
stos
jle
lods
push
pop
test
add
adc
jne
mov
push
pop
cs
add
dec
icebp
call
xchg
sub
aaa
subb
sbb
fstpt
push
test
cmp
add
cmp
mov
ljmp
xor
test
out
js
and
in
add
test
dec
mov
mov
xor
mov
mov
xchg
fwait
adc
pop
es
sbb
clc
ljmp
add
inc
mov
inc
inc
sub
jo
stos
sarb
movsb
enter
cwtl
xchg
cld
or
fadds
add
das
rcrb
add
pop
lock
or
push
bound
je
hlt
adc
adc
sub
movsl
fs
popa
imul
push
adc
call
in
lret
add
mov
sub
add
hlt
pop
cmc
sub
mov
movsl
loop
and
cmp
pushf
dec
in
insl
mov
push
cltd
adc
dec
mov
mov
add
je
xor
repz
out
mov
js
xchg
push
xchg
in
jl
add
pop
lds
adc
pop
mov
adc
call
in
sub
lea
xor
jmp
cltd
decl
mov
xchg
pop
dec
sarb
and
lods
lds
lret
rorb
add
test
add
cmpsl
jns
mov
fldenv
pop
and
add
nop
dec
push
and
fstpl
fwait
push
shll
add
lea
cmp
add
mull
loope
outsb
fldl
in
mov
jb
cs
jae
inc
ret
and
inc
jp
cmp
mov
ja
test
cli
dec
mov
pushf
add
and
cmp
mov
sbb
inc
pop
jo
rorb
test
xor
jae,pn
push
idivb
pop
ja
outsb
xor
cmp
mov
aam
adc
inc
jb
xor
add
lret
jbe
shrb
jle
add
add
clts
fdivrs
jae
add
repz
into
jne
xor
add
fimull
aad
add
rol
iret
shr
rclb
mov
subl
add
fsubrl
out
repz
call
mov
ja
xor
cld
add
mov
sbb
mov
jo
jl
daa
xchg
aam
and
mov
loope
inc
jp
pop
in
mov
pop
cli
cmp
and
and
call
mov
sub
push
and
lods
jo
xchg
jne
add
shrl
jecxz
jmp
cmp
pop
or
add
clc
mov
cmp
rcrb
cmp
cmp
outsl
icebp
rcrl
repz
lods
mov
cmp
roll
ret
clc
dec
add
das
mov
repnz
jno
add
test
pushf
loop
ficoms
add
inc
add
adc
sbb
add
dec
stos
adc
push
dec
stc
xchg
mov
or
cmp
add
pop
cwtl
pop
lea
xchg
add
fsub
sarl
lock
scas
call
sub
mov
ljmp
jl
dec
lds
mov
dec
int
icebp
popa
jle
das
aam
mov
cmpsl
add
pusha
pop
pop
pushf
push
fidivl
xchg
adc
pop
add
xchg
stc
cmp
mov
pop
aas
add
jae
xchg
jnp
sysenter
sbbl
enter
and
loop
xchg
scas
add
add
add
adc
jbe
add
pop
and
test
cmp
addb
loop
mov
mov
sar
scas
add
sbb
jo
adc
mov
lea
rep
pcmpgtd
inc
pop
rcrl
xor
loopne
fs
cld
add
jg
les
mov
orl
subl
leave
out
add
movsb
mov
int3
stos
and
dec
mov
or
cmpb
call
in
add
add
pusha
scas
or
pop
enter
and
int3
fiadds
loopne
inc
aam
cmp
jge
rclb
and
pop
adc
imulb
pop
aam
inc
call
test
fs
push
rorb
fmul
push
add
xor
je
in
enter
push
sahf
dec
mov
lahf
sub
inc
add
in
xor
ja
dec
sahf
out
test
cmp
clc
add
dec
aam
fiadds
adc
pop
mov
rcll
iret
jle
arpl
mov
inc
popa
fildll
out
hlt
dec
test
fisubs
inc
mov
lods
cmpl
dec
mov
fdivrl
cwtl
pop
add
es
add
cli
and
aam
ja
xchg
cmp
fnstenv
sbb
loope
cs
sbb
mov
in
nop
fdivl
dec
dec
sbb
sub
mov
xchg
dec
pop
pop
jno
jmp
test
push
and
dec
mov
jb
rorb
nop
in
rcll
pop
fldenv
or
mov
jnp
push
pop
or
dec
inc
out
add
incl
add
jecxz
xchg
hlt
inc
cmp
xchg
add
sub
or
lret
test
dec
xor
xchg
loope
cmpsl
jbe
stc
and
add
cli
mov
push
or
je
mov
adc
btr
repz
sub
jo
movsl
or
sub
int3
rcrb
dec
jns
add
std
pusha
addr16
add
xchg
lret
pop
hlt
lahf
xlat
push
pop
dec
rorb
inc
sbb
aad
push
aam
xor
leave
xorl
dec
in
add
jb
ret
popa
inc
addr16
pop
cmc
mov
wrmsr
stc
icebp
pop
or
aas
or
cwtl
add
dec
inc
repz
xchg
jmp
das
out
push
sbb
push
cmp
push
add
or
bound
push
sbb
test
or
add
lods
xor
push
enter
mov
ljmp
sarb
pusha
mov
std
leave
adc
mov
add
cmp
dec
xchg
pusha
add
cld
mov
dec
add
sbb
pop
push
push
push
sub
pusha
test
add
clc
leave
push
push
vmovlps
and
sub
sbb
adc
add
mov
jmp
and
mov
or
pop
add
and
push
int3
cld
xchg
enter
pop
aas
mov
inc
mov
push
cmp
loopne
sbb
fucomi
add
push
xor
les
sub
popf
cwtl
jle
cmp
pop
sub
mov
out
mov
adc
add
add
mov
clts
clc
jecxz
cmovb
mov
mov
pop
dec
add
push
rolb
dec
call
inc
mov
add
and
cld
lcall
pop
mov
add
and
mov
xlat
orl
adc
ljmp
and
cwtl
std
push
dec
pop
push
mov
add
faddl
and
fwait
test
add
adc
rclb
enter
mov
test
sarb
mov
nop
add
jne
jg
test
icebp
outsl
inc
inc
js
popf
mov
jbe
adc
rolb
xchg
mov
xchg
add
and
imul
jl
add
loop
pop
inc
rcr
or
jae
addb
or
mov
mov
shl
lret
add
push
push
dec
stc
lahf
test
inc
add
inc
pop
xchg
xor
rorb
pushf
mov
addr16
orb
cmp
xchg
jne
pop
pop
nop
outsb
popf
mov
and
push
leave
jp
jb
dec
jge
in
ja
add
daa
or
jle
movd
push
and
and
jns
add
in
inc
insb
push
hlt
mov
mov
sub
mov
xor
xchg
loope
fsubs
sub
mov
scas
addb
mov
mov
jl
adc
sbb
mov
pop
fmull
dec
jns
insb
lret
and
mov
inc
in
fwait
mov
pop
addb
movsb
incb
popf
sbb
or
and
adc
es
out
addb
jge
push
pop
xchg
mov
inc
dec
repz
push
dec
add
mov
mov
add
ss
dec
jl
add
inc
mov
or
add
mov
inc
decb
lods
imul
sub
or
hlt
mov
pop
mov
mov
jg
mov
push
xor
shrb
adc
cltd
push
js
je
xlat
movsl
adc
adc
add
xchg
lret
iret
int
add
push
xchg
pop
cmp
mov
roll
mov
pop
nop
mov
sahf
mov
pusha
fldenv
add
add
pop
cmp
jmp
sub
pop
enter
nop
in
sbb
stc
jmp
mov
mov
jns
dec
cmp
lea
xchg
fmull
loopne
xchg
add
xchg
push
lock
or
add
sbbl
sbb
inc
sti
or
rcll
leave
fadds
push
mov
or
mov
movsb
inc
pop
mov
lods
gs
loopne
fists
mov
xchg
pop
mov
outsl
and
jo
popl
jle
mov
xchg
pusha
inc
in
mov
adc
clc
xchg
cmp
and
cmp
jle
pusha
repnz
or
adc
and
add
add
sub
jp
add
mov
pop
dec
mov
call
or
pop
mov
xor
lret
sub
inc
insb
add
jae
sbb
inc
lds
xor
add
ja
adc
and
mov
add
daa
adc
add
add
out
sbb
add
sub
sub
in
in
jl
and
ds
cltd
and
out
aam
mov
jnp
pop
outsl
lcall
mov
mov
add
daa
inc
xor
outsl
fisubl
add
and
pop
stos
jo
add
fildl
aaa
scas
lcall
mov
mov
fmul
add
leave
test
aam
jne
jnp
adc
mov
lret
scas
jge
ds
in
and
clc
xchg
ficompl
movsl
jge
xchg
dec
into
out
ds
nop
sbb
push
or
cmp
addr16
push
dec
gs
mov
add
clc
jae
or
fidivl
add
out
test
push
loop
sbb
dec
iret
mov
inc
inc
cltd
scas
std
lcall
adc
test
xchg
fdivl
stos
jecxz
and
mov
inc
xorl
int3
rcll
pop
pop
inc
dec
das
jnp
or
les
es
add
xchg
and
dec
jbe
std
dec
into
cmp
mov
push
xor
push
cmp
fadds
add
xchg
push
mov
test
stos
jne
add
out
das
js
cmp
adc
mov
rcll
pop
lods
mov
and
clc
sub
sub
jl
cli
adc
sbb
or
mov
push
add
dec
pop
inc
loop,pn
ret
cmp
adc
out
add
data16
inc
sub
inc
cld
sub
push
daa
jne
and
pop
pusha
add
jns
mov
aas
addr16
call
in
adc
push
lock
out
mov
hlt
jb
stos
add
lret
fs
sbb
scas
dec
add
out
rcrl
add
add
inc
shrb
push
dec
jb
cmp
bnd
loopne
out
das
pop
xchg
andb
xchg
clc
add
in
cld
mov
dec
repnz
lods
push
sbb
je
pop
arpl
loopne
andb
sti
or
lea
push
andl
dec
insb
mov
fimuls
pop
sub
dec
les
sub
mov
add
mov
fists
fsubrs
lahf
push
add
adc
ljmp
inc
sub
mov
or
and
mov
nop
sbb
adc
or
lock
stos
xor
jle
adc
sub
cmp
sub
adc
sbb
add
jp
cmpsb
xchg
sub
mov
cmpb
sub
jb
fdivl
vcvtsd2si
ret
cmp
inc
fcomps
add
daa
jnp
jg
jmp
fldl
repz
push
push
jmp
loop
cmp
add
jbe
ffreep
pop
pop
push
jae
jmp
icebp
or
dec
pop
and
mov
dec
daa
mov
testl
imul
aam
mov
sub
add
popf
loop
pop
push
dec
jmp
mov
rorl
add
stos
popa
xor
add
adc
data16
incb
mov
fmulp
sar
lock
add
push
add
ja
cmpsl
stos
test
movsl
fwait
or
push
bound
icebp
jl
xchg
sbb
inc
ljmp
sub
and
sub
xor
sub
in
out
fs
call
xchg
push
loop
adc
int
push
add
repnz
cmp
into
jb
cmp
jle
popa
add
pop
clc
sub
sbb
sbb
jae
pop
mov
lret
cmovne
or
add
sbb
inc
mov
in
add
cli
jbe
nop
lahf
or
ljmp
jge
cmpb
or
push
xchg
stc
sub
je
mov
ss
xchg
cmp
enter
loopne
sldt
add
add
adc
aam
or
jb
inc
jl
sub
pusha
inc
add
adc
mov
repnz
add
lret
imulb
cwtl
pop
push
push
and
add
loopne
sbb
dec
lahf
es
mov
inc
add
adc
or
aad
inc
lds
popf
push
ret
out
repnz
sti
jb
push
and
lfs
jne
adc
add
movb
xor
lds
cmpsb
rolb
adc
mov
fs
mov
cwtl
sbb
push
mov
and
enter
sub
dec
add
or
add
and
add
xor
aam
add
adc
scas
cmp
loopne
add
mov
adc
pop
inc
test
mov
clc
adc
int
cmp
add
adc
pop
aam
add
sub
cmp
jo
leave
js
add
mov
in
mov
inc
jne
adc
pop
pop
xlat
lea
call
pushw
inc
inc
inc
add
out
icebp
or
jnp
pop
and
jg
dec
push
mov
test
nop
xchg
cmp
jo
in
push
or
add
or
or
jle
rorb
xor
mov
add
cld
and
or
lret
insb
aad
xor
mov
cmp
dec
faddp
xor
add
in
je
icebp
push
je
add
inc
test
pop
adc
jle
dec
rorb
mov
rcl
data16
call
sarb
dec
push
xor
ss
pop
cmp
push
inc
std
in
and
mov
in
jbe
jo
cmp
mov
or
add
sbbb
push
sub
aas
jmp
add
sti
rol
jne
jp
or
dec
dec
bound
stc
sbb
push
lret
pop
cmc
addb
or
sub
add
movsl
jmp
mov
add
lock
leave
pop
daa
add
jnp
outsl
and
enter
sbb
add
imul
test
mov
adc
add
dec
movb
push
pop
dec
adc
test
aas
inc
push
repz
mov
add
mov
iret
add
xor
stos
add
jecxz
sbb
sti
and
mov
xchg
and
pop
or
pop
add
rol
clc
cmp
push
call
arpl
stc
and
or
lods
cmp
jno
fwait
imull
lock
or
out
adc
les
jp
add
mov
cmp
adc
fisubrl
jae
pop
cmp
je
pop
leave
mov
adc
mov
cli
jl
mov
sbb
and
add
adc
mov
mov
inc
sub
and
pop
mov
xor
and
or
mov
cmp
mov
add
outsl
stos
or
les
sub
lds
add
mov
adcb
mov
or
int
push
sub
sbb
lods
mov
xchg
stos
arpl
jmp
jne
sub
xchg
or
sub
jecxz
add
cmpsl
adc
dec
mov
loope
add
push
add
movsb
mov
lret
movups
push
mov
js
and
push
add
or
or
mov
into
roll
leave
or
sbb
sbb
repnz
inc
xor
test
mov
pusha
cli
jp
test
int3
push
and
mov
push
sub
pop
xchg
and
pushf
mov
sub
hlt
add
and
nop
cmp
cmp
add
outsb
xor
in
enter
mov
or
adc
mov
jmp
scas
add
and
dec
mov
pop
pusha
adcl
cld
cli
ret
lcall
add
cmovae
pop
xchg
push
or
mov
sub
sbb
cmp
add
inc
ficomps
jo
mov
mov
fs
sub
stos
mov
mov
rorl
adc
mov
add
sub
and
sbb
inc
les
ret
add
xlat
add
cs
jl
and
add
or
pop
inc
test
jb
adcb
daa
mov
js
dec
sti
jnp
adc
add
inc
xchg
pop
fadds
lock
nop
and
add
stos
int
out
push
pop
or
fdivrl
inc
xor
add
loope
ret
sbbl
pusha
cwtl
mov
add
int
mov
push
add
insb
nopl
shl
lods
fdecstp
add
fiadds
add
cmp
inc
test
add
jle
inc
outsl
sub
lea
pop
and
push
lods
cli
xor
lock
aam
push
test
loopne
rol
mov
jno
add
insb
pop
adc
andb
mov
les
cld
dec
push
inc
add
jmp
in
add
enter
arpl
jle
ja
outsb
xchg
add
aas
add
add
in
shlb
add
fistpll
adc
dec
or
push
jo
dec
and
fs
add
xor
sub
add
call
aam
push
add
xor
push
add
mov
in
lea
lds
push
push
cld
hlt
notl
movsb
outsb
shll
mov
xor
inc
sahf
inc
ret
sarb
aas
dec
loope
push
mov
xor
inc
mov
mov
mov
push
or
fst
jno
add
out
sbb
and
dec
or
adc
xor
out
add
sarl
loope
pop
ret
add
xor
and
jne
or
jae
add
cmc
add
or
adc
enter
movb
mov
push
and
imul
inc
xor
test
mov
add
fs
das
jno
out
fadds
cwtl
subb
enter
xlat
or
push
scas
testl
mov
cmc
sbbb
sbb
pop
jmp
testl
mov
mov
add
or
sbb
insb
mov
pop
rcll
arpl
lock
add
test
cmp
adcb
jns
mov
push
or
fs
rolb
bound
add
imul
icebp
push
sbb
inc
mov
leave
rolb
mov
jb
xor
add
push
pop
pop
cmpb
and
ret
lds
adc
cmp
stos
pushf
add
in
dec
xor
iret
fs
add
sti
flds
or
mov
sbbb
cmp
add
sbb
adcb
inc
add
cwtl
loop
lock
add
nop
out
fadds
lahf
test
cwtl
enter
out
add
mov
jmp
mov
int
and
mov
add
or
enter
pop
getsec
ret
adc
lea
jle
or
add
loop
shr
add
cmpb
and
jno
xor
add
mov
adc
or
adc
mov
mov
daa
sbb
flds
outsl
add
loope
mov
inc
xor
lea
add
mov
fisubl
dec
pushl
pop
sti
sbb
add
aad
mov
scas
rolb
jno
nop
loopne
mov
or
aad
jne
mov
popf
insl
inc
imul
je
pop
in
sbb
mov
adc
add
inc
adc
pop
mov
adc
dec
and
inc
mov
pusha
andl
repnz
xorb
jg
add
mov
jle
fwait
sub
add
fsubs
fs
out
cli
loope
ljmp
filds
into
sbb
add
and
js
add
cld
and
pop
cmp
and
fldenv
add
in
test
aad
push
jp
jl
pop
and
cmp
or
gs
lods
inc
les
inc
out
and
hlt
jge
add
mov
jb
add
add
rclb
inc
testb
pop
add
cs
xlat
bswap
jo
and
xchg
stos
rolb
add
adc
adc
add
xchg
xor
js
jnp
add
or
je
mov
add
rol
add
addb
xorb
int3
stos
xor
call
sub
jge
hlt
out
lcall
leave
mov
inc
stos
add
pop
cmp
lret
mov
jle
outsl
ljmp
subl
enter
push
test
fs
decb
adc
add
mov
add
mov
jmp
in
add
cmpb
add
mov
cmp
nop
jge
mov
xlat
sub
push
xor
roll
mov
es
outsb
popa
cmpsb
mov
stc
push
insl
arpl
aas
rcrb
add
loop
subl
xchg
pop
push
push
push
add
jl
test
call
pop
enter
fldenv
xchg
mov
push
clc
mov
and
xlat
scas
cli
testb
sub
js
push
add
and
jae
add
mov
dec
stc
mov
fimull
testb
or
ljmp
add
adc
push
cli
sub
mov
xlat
bound
lret
test
fimull
sti
sub
jmp
sub
bound
nop
xlat
xchg
jns
cld
jo
mov
mov
sbb
fmull
adc
fcmovnbe
or
and
inc
orl
pop
test
cld
sub
enter
push
push
add
fistpll
sahf
sub
xchg
adc
jg
test
mov
insb
out
inc
ror
ret
add
pop
add
xor
or
push
cmp
mov
push
scas
fsubl
faddl
jno
cmp
cmpsl
in
insb
add
insl
mov
dec
mov
fcompl
stc
and
xchg
mov
mov
out
shlb
mov
addb
or
cmp
mov
std
sub
sbb
mov
aaa
adc
test
aas
or
fstpl
adc
mov
test
sbb
and
inc
pop
aas
les
insb
add
pop
or
fdivrs
add
or
adc
mov
pop
ficomps
mov
test
or
dec
fadds
add
push
pop
or
xchg
rcrb
adc
add
in
push
and
add
lret
dec
aaa
or
in
pop
ds
movsb
add
cmp
les
stos
adc
adc
inc
clc
mov
and
or
adc
mov
je
loope
shlb
sti
add
push
add
add
jb
shll
add
fst
les
popf
cmp
mov
and
loopne
add
sbb
out
sub
sbb
daa
or
add
xor
jmp
pop
mov
aas
mov
inc
rorb
add
dec
loopne
cli
pop
call
jge
sub
jae
add
add
loope
and
or
rcrl
pop
negb
xor
cwtl
in
inc
sbb
jg
sub
movsl
cmpsl
xchg
lock
cmpsl
shll
push
jle
push
js
loope
xchg
sbb
sbbl
jl
add
sub
addr16
ret
or
test
popa
lods
movsb
mov
xor
sbb
inc
pop
adc
sbb
add
or
mov
add
mov
stc
pop
add
dec
aaa
das
or
xor
add
out
pop
out
or
xor
add
or
gs
lock
jns
call
push
push
jbe
scas
jecxz
ds
in
lcall
out
aaa
add
inc
push
adc
pop
shrl
cmp
enter
add
or
inc
push
inc
or
cld
mov
cmp
movsb
lcall
dec
movsb
lahf
add
clc
jecxz
test
sbb
add
add
push
add
data16
daa
mov
mov
inc
push
or
fcom
clc
test
add
lods
cmc
out
adc
loop
cmp
adc
mov
push
add
and
push
mov
xor
pop
outsb
rorl
cs
add
xor
fadd
add
pop
fiaddl
out
cmp
cwtl
xor
iret
add
outsb
pop
aam
mov
push
into
or
sbb
add
dec
lret
dec
outsl
cmp
xor
icebp
add
add
mov
mov
add
jp
fldenv
or
in
add
inc
lds
fldenv
xchg
cmp
into
add
xchg
add
pushf
shlb
std
and
or
add
loope
xchg
sbb
addl
sub
rol
or
add
cmp
inc
enter
sub
lea
clc
fs
shll
cmp
incl
call
test
add
mov
add
inc
pop
pop
adc
and
sbb
cld
out
mov
inc
stos
fistl
sub
mov
enter
dec
les
rcrb
mov
mov
xchg
xor
addr16
cmp
and
push
pop
add
jmp
pop
push
cmpsb
das
jo
nop
ljmp
test
xchg
sub
das
push
movb
pop
push
jmp
enter
pop
mov
fdivrs
mov
das
mov
dec
fwait
push
nop
lret
pop
sysret
xchg
loopne
enter
add
xchg
std
jmp
int3
and
cs
in
or
jnp
add
mov
jno
push
cmp
mov
add
mov
sub
je
in
inc
or
xchg
in
xor
xor
ret
xor
ror
mov
xor
add
sbb
shll
dec
pop
mov
dec
or
in
pop
cmc
mov
add
insl
les
loop
xor
or
lock
jge
jbe
add
sub
mov
jae
imulb
cmpsb
add
js
fbstp
cmp
dec
add
xchg
jnp
sbb
push
lock
add
jb
mov
cmc
and
sarl
call
das
cmp
mov
sub
add
sbb
cld
loopne
and
pushf
push
push
and
das
out
adc
mov
call
dec
sbb
push
std
xor
add
out
lret
in
jmp
pmullw
or
cmp
add
icebp
mov
inc
mov
jae
lock
jo
aam
mov
add
cmpsb
pop
xor
lahf
popa
lret
outsb
je
rclb
pop
enter
or
fs
inc
call
pusha
jo
clc
xchg
xor
adc
mov
cmc
pop
popa
pushl
add
dec
inc
jecxz
lret
test
mov
jle
js
and
dec
fs
inc
push
icebp
pusha
hlt
test
rcrb
mov
pop
add
mov
or
sub
xor
inc
in
popa
ret
xchg
test
data16
stos
sub
repnz
fs
push
pushf
and
dec
push
adc
cmc
cld
rolb
out
lahf
inc
ds
and
xor
pop
xor
mov
sar
mov
add
add
mov
push
in
add
fdivr
stos
clc
add
inc
mov
xchg
add
hlt
jle
jl
add
mov
or
dec
hlt
push
mov
lret
jmp
push
test
nop
nop
add
xor
sub
pushl
ficoms
cmp
ss
add
push
hlt
cld
ficomps
mov
adc
mov
or
cmc
inc
adc
stos
sbb
adc
and
push
add
lahf
fs
bound
and
push
push
xchg
jmp
xchg
xchg
add
out
inc
push
loopne
add
xchg
aas
and
push
inc
xor
dec
inc
add
or
and
clc
icebp
pop
rolb
or
idivb
sub
add
jae
testb
mov
xchg
in
nop
mov
outsb
in
cmpsb
or
add
enter
pop
add
or
jle
pop
rolb
cmp
push
add
hlt
and
cmp
sbbb
xor
xor
in
xor
lock
pop
imul
divb
lret
nop
xchg
inc
mov
pop
adc
lret
aam
add
push
adc
mov
test
pop
imull
cmpb
xchg
sub
ja
sbb
mov
negl
mov
clc
or
or
xchg
xor
pop
or
push
ja
sbbb
out
add
faddl
loop
addb
push
aaa
mov
fdivr
pop
add
cmp
push
pop
sub
ja
add
frstor
sbb
push
inc
sub
mov
or
add
adc
add
push
ds
xlat
and
sbb
add
xor
sbb
add
pop
je
inc
ret
xchg
or
dec
std
das
out
add
sbb
aam
addl
les
pushf
or
popa
push
push
mov
xor
pop
add
inc
cmpl
dec
mov
ss
pop
inc
push
stc
push
orl
dec
add
daa
lock
mov
cli
sub
add
rcl
cwtl
or
out
sbb
pushf
sbb
scas
jno
mov
xor
mov
xchg
faddl
push
and
sbb
mov
into
test
or
dec
fimull
adc
pop
pusha
inc
xor
dec
pop
add
out
add
and
or
sti
xor
mov
pop
jle
or
and
fwait
push
addb
add
push
or
cmpsl
int
adc
add
stc
xor
cmp
aad
add
or
xor
add
sub
xor
add
ja
jnp
add
mov
push
stos
fs
and
add
cmpsb
lcall
xor
je
inc
test
mov
add
call
jo
add
mov
sbb
out
loope
nopl
lea
cwtl
fists
cmp
inc
xor
add
cmp
fs
ds
nop
dec
jmp
dec
jle
add
lods
push
test
clc
in
cwtl
cmpsl
add
cli
mov
test
cmp
xor
scas
mov
push
idivb
fs
add
mov
add
shrl
jo
outsb
pop
push
or
js
stc
push
mov
and
sub
nop
push
mov
testb
bound
flds
cltd
out
mov
lea
cwtl
sbb
push
add
test
add
addr16
xor
movsb
add
mov
add
or
cmp
pop
outsl
sbb
loop
mov
xchg
cs
xlat
adc
add
cmp
xchg
cmp
es
out
push
add
add
jmp
mov
dec
and
add
sarb
les
jecxz
cmpb
enter
or
int3
int3
jecxz
shrb
shll
aam
mov
push
in
fdivrs
add
xor
sbb
push
inc
loopne
out
add
fisubs
sbb
mov
in
jne
inc
in
shrb
nop
lock
add
addr16
push
dec
adc
add
shll
enter
jmp
add
in
cmp
aas
cs
lret
push
xchg
incl
in
loop
adc
pop
in
jp
sbb
xor
decb
and
je
cmc
adc
and
xor
xor
and
push
dec
inc
lcall
mov
add
add
pop
jae
push
outsl
or
pop
push
lods
jmp
pop
sub
in
add
in
aas
add
out
add
add
mov
aaa
sub
sar
xor
add
and
push
aam
lock
jg
loop
or
add
ret
pop
shlb
adc
jg
push
rorb
add
jne
mov
clc
xor
shlb
addr16
loopne
add
sbb
mov
xor
adcl
xor
pop
pop
add
adc
pop
jmp
xchg
jg
add
jle
mov
add
lret
sti
push
cmp
pop
movl
sub
jle
add
ds
sbb
inc
int
xadd
sbbl
mov
add
add
rorb
orb
fstpl
sbbb
flds
sbb
pop
fildl
push
loope
enter
pop
add
jbe
cmp
push
mov
add
pusha
pop
pop
adcb
sbb
xchg
popf
adc
adc
roll
pop
add
shlb
xor
add
add
shl
repnz
jbe
sbb
loope
xchg
loopne
mov
cmc
shlb
cmp
cld
cmp
decl
sbb
xchg
popf
cmp
cmp
stc
sbbl
sub
add
inc
sub
add
sub
ljmp
jo
out
add
inc
sbb
push
in
and
pop
and
roll
and
idivb
jecxz
and
loope
and
mov
jo
mov
andl
sub
mov
movsl
shlb
out
fs
add
add
inc
scas
xchg
fldcw
test
push
js
mov
add
jp
jg
jg
js
sbb
sbb
add
mov
jl
add
out
mov
ja
mov
sbb
jb
mov
mov
jae
mov
jno
xorb
enter
adcl
push
inc
xchg
xchg
mov
adcb
jo
add
pop
and
jecxz
loopne
or
lahf
sbbl
fwait
add
cltd
rclb
sbbb
mov
dec
jo
add
mov
orl
loopne
orb
inc
mov
add
mov
add
inc
addb
ret
adc
jecxz
lock
add
sbbl
add
test
jecxz
in
pushf
es
add
xor
bound
popf
push
mov
mov
cmpsb
repnz
sbb
cld
pandn
cpuid
fneni(8087
shlb
rcrb
mov
pop
mov
stc
add
loopne
adc
dec
xor
add
lock
adc
cmpsl
nop
xorb
mov
jmp
aas
add
repz
sbb
and
mov
cmp
push
and
enter
xor
das
mov
add
mov
sahf
mov
xor
push
add
add
mov
data16
adc
add
mov
in
sbbb
push
cld
add
pushf
fbld
add
dec
or
xor
ret
fidivs
addb
mov
pop
dec
jne
dec
repz
push
push
test
das
pop
inc
cld
sub
imul
jecxz
xorb
adc
out
inc
lods
mov
add
sub
repnz
jl
jns
mov
clc
inc
ds
imul
adc
push
lods
cmp
jmp
nop
jo
call
notl
push
cmp
add
push
out
lock
movsl
movb
gs
jae
test
jbe
adc
je
add
fists
sbb
dec
add
repz
pop
in
sbb
pop
add
subb
add
lret
mov
pop
add
rcrb
add
push
add
test
sub
call
fs
out
mov
pop
add
push
stc
jge
dec
leave
enter
insb
add
stos
mov
repz
add
and
je
sahf
or
add
xchg
push
ret
add
incl
ret
xlat
sbb
fs
cmp
scas
pop
sarb
roll
shll
sbb
dec
or
mov
jno
rep
add
adc
sbb
leave
gs
cmp
mov
stc
jbe
aas
fsubp
mov
push
fld
and
cmp
add
sub
mov
test
arpl
inc
sbb
scas
and
xor
add
add
inc
sub
mov
xchg
dec
cltd
mov
mov
xchg
xor
xchg
push
adc
xchg
add
cmp
mov
add
add
push
aaa
xchg
cli
mov
and
movsl
jecxz
lock
sub
xchg
mov
hlt
sti
pop
cli
push
xor
push
clc
xchg
ret
mov
or
stos
add
sub
cmp
inc
xchg
adc
and
fiadds
movsb
xchg
or
mov
cld
and
push
xor
and
jmp
mov
inc
inc
or
xor
or
incl
and
and
repnz
leave
repz
imul
sub
sub
lock
or
fsub
repnz
cmp
pop
fs
fcmovbe
mov
sub
adc
mov
mov
inc
sub
sub
notb
pop
sbb
test
fs
sub
sbb
mov
out
xor
lods
xchg
cld
mov
nop
or
push
add
inc
xchg
lret
add
sub
pop
inc
push
and
sbb
push
cmp
lahf
xor
or
mov
das
lret
gs
or
pop
cmove
sbb
cmp
push
lea
pushf
sbb
or
aas
add
popf
pop
and
repnz
push
pop
inc
jmp
in
mov
adc
mov
mov
add
stos
mov
sub
push
mov
icebp
les
adc
and
and
inc
aas
popf
lods
addb
add
mov
cmpsl
dec
or
mov
icebp
sbb
and
inc
jbe
cmp
shlb
je
add
pop
inc
stos
add
or
add
add
add
xor
xor
ret
pop
jo
and
lar
or
add
mov
mov
sbb
test
jge
add
repnz
hlt
mov
inc
cmpsl
test
adc
loopne
pushf
add
rclb
add
mov
dec
add
ret
jg
sub
lock
mov
lret
and
pop
mov
push
fsts
out
add
push
shlb
add
test
sbb
cmp
add
cmpsb
adc
pushf
sub
shrb
xchg
aas
mov
add
ds
mov
bound
sbb
add
sbbb
or
leave
xlat
in
movsb
sarb
add
sub
jle
pop
lret
add
xchg
pop
fisubrs
xor
pusha
iret
sbb
jns
stos
sub
push
lahf
aam
jmp
aas
push
push
cmpsb
xlat
ss
or
pop
test
xchg
or
jg
dec
pop
mov
je
lcall
pop
adc
bound
lods
adcl
or
shl
icebp
and
lock
insl
sbb
push
push
lcall
inc
inc
push
test
mov
jl
ljmp
sbb
mov
add
sbb
mov
push
add
sub
adc
cld
repz
jecxz
mov
clc
jmp
xor
xor
push
push
pop
xchg
mov
repz
jp
fildl
cs
test
push
sbb
xor
and
jl
mov
sbb
fmuls
shrl
push
stc
mov
mov
insl
add
mov
pop
aaa
add
push
mov
addl
jmp
aam
mov
pop
sbb
mov
test
lahf
pop
jl
loop
add
loop
inc
in
mov
sbb
pop
cmp
ljmp
mov
dec
push
int3
add
push
add
out
add
inc
cld
pop
add
lods
push
adc
mov
orb
xor
fcompl
test
sbb
les
cs
cmp
jo
mov
cmpl
add
test
movb
add
sbb
pop
stos
pop
movsl
out
bound
add
mov
xor
add
sub
mov
testb
ficoml
push
xchg
mov
inc
add
mov
mov
add
js
je
inc
add
add
sbb
xchg
xchg
stc
add
mov
mov
fs
mov
faddl
daa
and
add
mov
paddusw
shl
add
inc
push
cmp
xorl
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
es
xor
jle
mov
rcrb
add
inc
push
push
rorb
mov
adc
jno
add
fwait
sub
paddsw
loopne
test
push
jl
add
cmp
inc
adc
fisubl
and
stos
mov
lock
jg
push
adc
rolb
test
xchg
jmp
jge
add
mov
adc
rclb
sub
inc
shlb
rolb
push
mov
jno
mov
in
add
and
pop
mov
inc
add
int
imul
push
lret
fst
sahf
hlt
xor
pop
add
cs
pop
arpl
add
dec
and
cli
inc
add
dec
push
sub
add
idivb
pop
decl
push
mov
adc
add
mov
add
inc
lock
incl
adc
les
loop
ret
push
cmpb
adc
add
scas
stos
call
inc
add
and
ljmp
mov
clc
loope
jae
add
and
negb
push
push
add
dec
jbe
push
icebp
stos
add
addr16
int
notb
mov
push
repnz
lahf
pop
add
mov
pop
jae
add
xchg
jne
pop
shll
dec
scas
inc
push
lea
mov
cmp
add
add
push
inc
add
cmp
pop
incb
jmp
lret
or
cs
push
adc
adc
push
sub
ret
mov
mov
add
adc
sbb
addb
rorb
add
dec
push
jbe
xchg
lock
xor
je
xchg
inc
add
jne
into
addb
cmpl
mov
add
cmpsb
mov
dec
push
int
sub
es
mov
dec
nop
ds
pop
fnstcw
sbb
inc
push
test
ljmp
pop
push
xchg
and
dec
cmp
or
outsb
loop
hlt
mov
roll
jns
loope
andb
jb
ret
rclb
inc
inc
cmp
ror
sbbb
inc
insb
test
sub
fdivs
jb
frstor
jmp
jge
movb
fisttpl
cld
inc
inc
lea
ficompl
dec
sbb
mov
dec
sbb
adc
int3
xor
dec
add
fildll
test
push
cmp
push
add
xlat
je
cs
inc
in
loopne
or
sub
cmc
test
call
imul
or
mov
and
push
in
inc
add
xor
xor
xchg
adc
lret
mov
cmp
movb
xor
pop
cltd
stos
add
or
push
mov
push
or
imul
mov
notb
push
cmpsb
out
mov
dec
dec
jge
andb
sbb
add
mov
loopne
add
mov
sub
mov
ljmp
pop
and
fsubs
mov
jnp
mov
pop
dec
adc
push
pop
insl
add
and
xlat
and
aam
sahf
jb
loopne
add
push
aam
int
push
rcr
add
stos
cltd
cld
fldl
std
pop
adc
mov
sti
hlt
sbb
scas
or
jno
cmpb
or
arpl
jo
add
fcomip
cmp
pop
adc
rolb
stos
in
pop
push
jo
add
mov
out
inc
ret
ret
push
mov
sahf
xor
enter
jmp
aaa
pxor
xor
sbb
jmp
sbb
dec
outsl
add
pushf
pop
call
sub
adc
push
add
xchg
dec
or
pop
xchg
jge
les
subl
je
mov
and
jo
mov
adc
cmpsl
pop
xor
inc
or
insl
add
cld
adc
add
inc
or
push
mov
adc
xor
mov
dec
adc
nop
inc
leave
mov
push
add
cmp
add
fiaddl
fdivs
add
cmp
sbb
test
idiv
enter
sbb
add
push
js
and
sti
or
add
add
std
repz
pop
cld
jne
pop
mov
stos
jmp
sbb
mov
test
add
or
pusha
and
dec
mov
mov
cwtl
pop
lds
call
mov
test
adc
mov
movsl
subl
lock
mov
shlb
pop
pop
push
add
test
mov
adc
and
xchg
mov
adc
and
mov
cwtl
sub
je
shr
ja
add
stos
or
nop
cmp
sar
add
push
pop
jne
movsl
es
pop
jmp
push
mov
add
mov
xchg
mov
pop
add
sbb
add
ret
lcall
mov
xchg
or
adc
xor
pop
push
in
mov
and
add
jecxz
loope
test
inc
fistps
xor
mov
loop
rolb
adc
dec
inc
enter
incb
mull
adc
jbe
add
add
sbb
movsl
orb
and
xchg
add
inc
loop
xor
adc
push
add
out
out
inc
sar
or
adc
mov
rorb
ds
mov
cmp
jb
sbb
add
xchg
cmp
shlb
movsl
loope
mov
neg
lret
add
xor
xor
sub
lods
test
lods
imul
and
dec
std
repnz
mov
add
or
daa
test
or
lock
stc
jne
add
or
mov
pop
inc
cli
add
call
mov
adc
jne
push
inc
mov
fistl
mov
clc
lret
add
or
add
mov
div
jno
add
pop
lret
pop
xor
repz
push
inc
add
and
sub
dec
mov
jg
xchg
addb
dec
icebp
cmp
xor
jmp
xchg
inc
add
out
cmc
testb
insb
loope
mov
aas
and
loopne
repz
add
pop
sti
rolb
xor
xchg
mov
insl
daa
addl
push
pop
pop
cmp
mov
add
add
adc
ret
or
mov
jl
rcl
repnz
xchg
test
add
inc
clc
orl
mov
dec
in
push
add
stc
fwait
adc
or
pusha
add
sub
sti
inc
push
mov
add
fcompl
add
test
and
or
push
negb
add
xor
inc
inc
out
mov
shl
stos
jecxz
pop
add
fldenv
mov
push
cld
rolb
clc
add
addl
movzwl
ljmp
adc
mov
pop
add
push
xorb
add
add
enter
or
jne
mov
lods
mov
cmp
inc
ljmp
xchg
inc
inc
aas
add
fsubrl
and
inc
cmpsl
add
cltd
mov
pop
cmp
movsb
add
xor
jne
add
push
ss
mov
int
pop
add
icebp
pop
push
xor
dec
jo
add
push
or
or
repnz
lea
shrb
lock
pop
movsl
out
push
inc
dec
pop
je
fmuls
add
cmc
dec
adc
test
pop
mov
mov
ret
mov
pusha
call
add
dec
adc
aam
cwtl
mov
sbb
fisttps
sbb
xor
add
sbb
rolb
add
jp
movsl
sub
and
int3
cld
or
mov
xor
lock
fs
cli
cmp
inc
push
xchg
sbb
test
pop
cmp
inc
mov
mov
mov
outsl
push
pusha
movsb
stos
inc
mov
pop
push
and
xorb
mov
lret
nop
cmp
popf
shl
inc
imul
dec
in
test
add
push
push
or
inc
lcall
adc
push
dec
out
in
add
xor
pusha
insb
mov
add
gs
lods
mov
jg
imul
jo
cmpsl
add
dec
push
ret
cmpsb
sub
or
lcall
add
or
std
sbb
mov
sbb
xchg
add
cli
gs
xchg
cmp
mov
sbb
roll
lds
shrb
daa
lcall
inc
jg
adc
sbb
mov
add
mov
sbb
xchg
or
add
test
notl
out
mov
in
xorb
or
pop
dec
pushf
shl
add
addr16
push
les
mov
xor
inc
popl
rcll
icebp
xor
mov
sbb
pusha
cmp
push
xor
mov
add
jp
cmc
sub
cwtl
jbe
rcll
jo,pn
add
inc
je
adc
test
es
xchg
add
add
and
nop
push
mov
add
push
imul
mov
loopne
add
in
push
add
cwtl
push
lcall
aad
mov
cli
mov
push
sbb
cmp
mov
iret
push
inc
jae
cvtpi2ps
lahf
mov
inc
dec
mov
jae
pop
lock
fadds
jbe
pop
push
pop
and
add
std
pop
mov
out
popa
rcll
jecxz
jle
add
pop
inc
sbb
add
inc
add
pop
mov
add
xchg
cs
dec
outsl
inc
add
insb
push
dec
addb
dec
xchg
pop
add
and
add
orb
add
aad
mov
dec
insb
add
mov
nop
push
loopne
add
xor
std
or
sub
adc
adcb
test
pop
add
js
into
push
cmp
add
xchg
cmp
jo
add
stc
aaa
lahf
shlb
loopne
add
scas
push
mov
add
pop
xchg
adc
stc
test
xor
add
push
iret
mov
xor
dec
in
mov
ret
add
setns
mov
add
adc
jl
in
add
insb
stos
es
cmp
decl
add
cmp
out
push
ds
pusha
xchg
repz
push
xchg
sti
pop
push
mov
lahf
inc
rclb
daa
mov
and
add
add
in
push
add
sub
pop
dec
push
xchg
lret
dec
jp
lcall
sahf
aas
int
sbb
cli
in
les
add
stos
outsb
popa
add
mov
test
dec
push
andb
mov
mov
cmova
or
jle
cld
xchg
cmp
dec
movb
pop
or
sub
mov
mov
jo
popa
test
xorb
add
call
fldcw
add
push
ja
add
mov
or
mov
lea
rcr
cmp
add
pop
mov
and
xchg
add
push
loopne
movsl
mov
sbb
outsb
jmp
rcll
add
jae
iret
loopne
add
push
sahf
int
pusha
dec
add
xbegin
pop
test
je
jo
add
push
or
loopne
add
mov
pextrw
dec
add
outsb
push
mov
scas
push
out
cmp
ljmp
fcompl
lock
add
push
and
xchg
cli
andl
mov
inc
xchg
pop
rcrb
xor
lods
insb
adc
lea
push
cmpb
adc
sub
in
pusha
jne
lret
push
xchg
test
pop
or
jne
mov
enter
lock
sbb
pop
mov
out
cli
aas
sub
sbb
sbb
pop
add
add
xor
add
pop
das
cmp
sub
xor
adc
lcall
or
add
jae
xchg
out
addb
push
aam
std
out
jp
lds
add
pop
rdtsc
sarb
rolb
je
divl
xchg
xchg
pop
mov
cwtl
aam
aaa
add
addl
lock
lock
add
sbb
jbe
out
aad
xor
or
cmpb
or
adc
fistpl
fadds
shlb
nop
mov
enter
add
lods
pop
fadds
push
push
cmpb
jg
ret
cmp
push
pop
add
call
push
aam
and
mov
dec
add
add
and
sahf
stos
and
xchg
push
adc
add
add
pop
add
fcmovb
loopne
mov
push
divb
clc
and
lock
add
stos
cmpsl
dec
addps
xlat
mov
or
sbb
xchg
sbb
add
push
add
sarb
in
xorb
lret
push
pop
push
ret
inc
add
icebp
or
les
cmp
cmp
mov
fstl
enter
pop
clc
call
add
mov
loopne
out
mov
add
add
lea
loopne
jp
mov
jmp
push
xlat
inc
add
cwtl
and
adc
add
mov
sti
cmp
subl
pop
push
and
push
mov
pop
pop
pop
cmc
inc
lret
and
sub
mov
inc
jo
jp
sti
les
pop
fadds
data16
lods
add
and
pop
and
sub
push
or
or
xor
mov
pushf
dec
add
cmp
or
adc
adc
mov
fcompl
mov
add
scas
loop
in
mov
pushf
pop
in
aam
mov
je
rolb
mov
mov
inc
es
js
testb
mov
sub
adc
cmp
into
adc
push
gs
xchg
testl
or
add
jbe
loop
inc
pop
loop
and
dec
jg
sub
add
mov
inc
leave
push
pop
pop
mov
cli
sub
or
add
or
aam
shl
mov
fsubrl
daa
or
je
jl
add
in
clc
lds
add
lea
arpl
add
insl
xchg
adcb
shll
je,pn
fnstenv
fs
or
add
and
inc
xchg
add
dec
sahf
int
aas
pop
sbb
mov
stos
aaa
xorl
push
push
mov
sbb
mov
clc
stos
std
test
pop
sub
add
add
clc
or
sbb
ja
add
mov
mov
push
repnz
add
xchg
inc
pop
push
push
mov
aam
xchg
mov
xor
mov
mov
adc
add
out
jne
push
ret
or
add
pop
outsb
sbb
jle
add
nop
xorb
add
sub
push
loop
add
test
pop
push
cmp
add
mov
adc
sbb
mov
add
and
add
or
orb
repnz
call
adc
add
lock
add
push
popf
int
push
add
sub
adc
add
mov
push
dec
sbb
xchg
orb
add
add
repnz
stos
push
int
add
add
in
xor
inc
mov
or
shlb
inc
enter
inc
cld
ret
fmuls
cmp
out
shrb
hlt
add
add
sbb
push
fadds
sub
fdivr
pop
addr16
dec
mov
roll
add
jp
push
add
lods
mov
add
fsub
ret
imul
dec
sub
ljmp
mov
les
dec
aam
push
shlb
cmp
fadds
mov
jbe
verr
mov
push
js
add
push
inc
jno
loop
lock
sub
add
add
adc
and
add
push
pop
stos
push
mov
and
mov
mov
jno
lds
stos
mov
push
sub
mov
outsb
aas
and
cmp
js
add
or
mov
xchg
js
ljmp
sub
stc
pop
loop
mov
jne
dec
dec
sarb
add
popf
sbb
call
movl
adc
movntq
cmp
clc
xchg
sysexit
push
dec
inc
loopne
stos
sub
mov
sub
js
cmp
movsl
insb
add
fs
pop
cwtl
icebp
mov
add
or
lcall
in
adc
std
xchg
loope
ret
xorb
out
xor
pop
adc
adc
test
sub
imul
or
push
or
and
cmp
mov
adc
add
sub
xlat
xchg
ljmp
pusha
fsts
mov
addr16
pop
pop
arpl
add
cs
rcrb
pop
adc
test
or
pop
xor
dec
das
add
inc
aas
nop
repnz
mov
stos
sbb
mov
roll
sub
negl
cmpsl
add
stos
xor
out
test
mov
and
xor
add
mov
std
adc
pop
adc
mov
stos
mov
jbe
in
xor
addb
mov
add
xchg
add
xor
stos
int3
jl
mov
inc
push
mov
sahf
insl
or
add
sti
in
data16
lds
stos
int3
dec
xchg
enter
repnz
add
push
pop
mov
sub
add
inc
add
loop
add
stos
xor
outsb
pop
mov
adc
or
das
adc
add
jl
push
and
jmp
jg
dec
add
stos
dec
adc
pop
int3
xchg
and
inc
or
inc
cmp
loopne
aam
push
push
add
jb
sbb
or
mov
testl
int
mov
push
jecxz
add
nop
dec
adc
add
jb
mov
sbb
dec
ds
stos
addr16
push
cmp
lods
pmaxub
push
push
push
add
aaa
adc
add
int
lldt
xchg
inc
addl
inc
jo
incl
aaa
cli
mov
xchg
push
stos
inc
jge
pop
je
sbb
pop
lock
test
push
adc
sub
int3
pop
add
sbb
cltd
push
jnp
add
xor
cmp
out
gs
aam
xchg
add
cmpsb
inc
sub
cs
loop
shlb
or
jnp
fildl
pop
inc
mov
sbb
jle
add
jge
push
sub
cmp
push
inc
ret
add
and
push
incl
cmpb
sub
inc
inc
xor
and
pop
push
sahf
flds
loope
inc
add
inc
decb
sti
jg
ret
add
add
subl
cld
dec
mov
add
or
sbb
les
cmp
adc
xor
pop
lods
sbb
add
in
out
xor
mov
push
cmp
add
pop
pop
pop
dec
jae
aas
xor
cmpb
add
mov
cmp
and
xchg
clc
data16
mov
cmpsl
xchg
es
cmp
rorl
ss
lret
movsb
or
inc
add
ret
out
add
and
fwait
aad
dec
dec
push
jno
dec
jp
mov
pop
movsb
add
inc
scas
dec
testl
xchg
add
jns
loop
jbe
imul
aaa
add
inc
pop
dec
dec
les
inc
aas
dec
fistl
aaa
pop
mov
jg
test
sbb
addb
inc
sbb
inc
jnp
mov
les
and
jge
sbb
mov
cld
adc
mov
fiaddl
shlb
and
shlb
push
ds
ret
xor
dec
ss
lcall
jmp
xor
inc
cmp
and
xor
sarb
dec
imul
add
dec
add
add
pop
enter
and
sub
pop
sbb
aad
les
add
or
sbb
add
addb
add
fisubl
pop
loop
jbe
add
cmp
movsb
in
pop
stos
pop
cmp
and
aas
test
mov
inc
into
or
cmpsl
and
dec
stos
ja
leave
add
adc
fiaddl
mov
and
stos
mov
pop
test
mov
xchg
pop
or
lcall
bound
pop
aaa
mov
fildll
test
dec
or
or
mov
or
orb
adc
addb
mov
scas
lods
inc
push
lahf
in
loopne
movsb
icebp
push
add
nop
enter
lds
inc
out
jbe
mov
jne
jnp
inc
imul
ret
rcrb
divl
lock
cmp
testl
pop
xchg
adc
shl
repz
je
mov
xchg
les
jl
dec
stos
cld
sti
pop
jo
loope
movsl
mov
xor
jecxz
add
dec
xchg
out
push
add
lods
das
aaa
stos
add
sub
or
js
xchg
pop
in
adc
ds
shlb
int
add
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
add
adc
add
push
push
cmp
add
negb
add
ja
jbe
inc
sub
xor
stos
xor
xchg
clc
push
pop
out
add
inc
mov
andb
jae
mov
mov
mov
out
test
shll
aad
gs
rolb
popf
in
xchg
mov
add
push
jb
inc
pushf
add
cmpb
dec
int
shll
pop
dec
iret
adc
fwait
cmp
push
and
add
xchg
xor
fcom
and
adc
lods
shr
repnz
aas
mov
fdivrs
movsl
sub
add
int
ds
inc
add
mov
adc
mov
inc
cwtl
popl
pop
mov
dec
mov
sbb
mov
adc
mov
inc
or
push
jno
xchg
fs
jge,pn
fidivl
out
test
inc
xchg
add
sbb
mov
add
jbe
cmp
rcpps
sub
add
pop
and
js
add
push
jns
or
aas
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
lea
jmp
pop
imul
loope
add
les
sbb
add
lock
pushf
hlt
mov
addr16
notl
scas
and
inc
add
cmp
mov
xchg
jo
inc
push
dec
and
push
insl
xchg
jnp
jo
cld
or
int3
scas
lock
mov
add
or
test
aad
mov
aas
push
movntps
popf
or
add
pop
add
test
fs
add
scas
lcall
mov
das
cmp
add
fimull
add
adc
add
add
inc
add
mov
mov
shlb
add
pushf
add
je
cmp
fsubrl
cmp
inc
test
adc
add
mov
lods
sbb
mov
arpl
ja
pop
adc
inc
stos
add
jge
dec
or
add
cld
adc
inc
adc
add
test
loope
push
push
lret
mov
and
movsb
cmc
pop
cs
mov
mov
xor
scas
int3
subb
stc
push
adc
cmpl
nop
sbb
mov
or
repz
adc
add
roll
shlb
push
es
jmp
and
cltd
add
pusha
sti
mov
sub
push
xchg
xor
xchg
add
push
ret
std
add
test
jmp
add
std
rolb
jbe
add
sub
sbb
pop
pop
mov
mov
pop
lods
jns
jge
movb
add
std
xchg
fucomp
pop
leave
adc
jne
xchg
or
and
jns
nop
cld
add
dec
test
imul
loopne
cwtl
mov
jae
push
dec
hlt
and
push
das
cli
sbb
repnz
jnp
js
jg
subb
xlat
cmp
mov
push
fdivrl
loope
pop
loopne
jle
cmp
dec
addb
testb
popf
rcrb
pusha
push
call
xor
dec
or
add
add
jle
jmp
add
jne
rolb
dec
lcall
cld
and
and
js
add
imull
test
add
cmp
push
sub
mov
pop
aaa
pop
add
test
sarl
lea
ljmp
pop
shrb
mov
push
add
push
add
inc
dec
cmp
sub
jl
or
add
and
sbb
mov
sbb
adc
pop
stos
je
testb
add
xlat
mov
fsubs
inc
inc
sarb
sbb
add
push
call
and
adc
cmp
jge
add
dec
sbb
pop
loopne
mov
cld
add
rorb
jnp
jge
lock
or
xor
jle
rorb
cmp
add
push
mov
dec
or
add
rol
js
je
jb
add
movsb
mov
arpl
sbb
dec
jb
push
push
loop
fbstp
jle
mov
mov
add
pop
xlat
mov
add
lods
std
fsubs
pop
lret
mov
adc
xchg
pop
outsb
popa
xor
sarb
jb
add
dec
pop
decb
jl
add
imul
dec
aaa
xorl
mov
and
pop
and
add
mov
xchg
cmp
jb
out
test
inc
pop
xlat
cli
push
xor
les
popl
mov
xchg
xchg
jnp
jle
cmp
test
mov
jmp
ret
jae
mov
int3
add
jmp
rcrb
ret
stos
mov
dec
mov
add
mov
push
lock
cmp
inc
fcmovb
aaa
out
add
push
stos
adc
arpl
add
clc
adc
cli
adc
pop
sub
or
std
add
mov
movups
ja
pop
xchg
loopne
xor
mov
inc
or
cmp
cmp
sbb
and
mov
cmp
mov
jo
jle
add
inc
adc
arpl
push
popa
add
data16
jae
addr16
std
cmp
adc
ja
add
sbb
jbe
jb
out
dec
ja
adc
imul
imul
push
inc
push
loopne
dec
jge
jl
inc
iret
nop
dec
nop/reserved
fisubs
in
cmp
cmp
jle
outsl
insb
add
pusha
push
out
in
jae
jge
imul
test
or
jo
das
push
fwait
xor
jae
dec
mov
add
or
insl
shl
dec
pusha
ret
bound
fs
addr16
popl
xor
mov
inc
popa
les
into
fldl
jns
inc
dec
outsb
clc
dec
add
jbe
fs
inc
add
adc
add
jae
arpl
jne
add
inc
push
push
ja
imul
arpl
mov
add
addr16
popa
loope
push
lret
inc
add
push
jno
movsl
xchg
pop
inc
push
outsb
imul
stc
and
xor
gs
imul
shr
xchg
xor
clc
pusha
add
jns
mov
dec
xor
add
push
adc
push
addr16
jbe
and
ja
andb
sub
test
ljmp
lods
add
outsl
imul
xchg
push
push
push
aaa
jbe
inc
cmpsb
inc
imul
pusha
push
sbb
jbe
and
mov
add
popa
add
rclb
jp
dec
sbb
pop
xor
cmp
add
mov
jb
cmp
subb
movups
pop
test
mov
mov
adc
adc
inc
push
add
lea
jb
sub
cmp
add
push
add
cmp
pop
ret
pop
and
push
jge
pop
sbb
xor
mov
mov
lods
adcb
sbb
push
inc
repnz
scas
cmp
mov
xor
into
add
addr16
loopne
shrl
sbb
and
adc
arpl
add
data16
dec
pop
jo
add
cli
add
add
and
sbb
xor
dec
cmp
fnsave
imul
icebp
rol
sbb
aad
add
enter
xchg
add
test
sahf
and
stos
loopne
add
sti
scas
daa
push
pop
es
push
addl
mov
mov
aas
dec
aas
xchg
or
stos
xorb
pushf
repz
add
in
addr16
pusha
push
add
push
mov
sbb
in
add
jb
push
dec
push
jae
pop
inc
dec
roll
ret
ficompl
dec
lds
nop
rorb
xor
lahf
movl
das
jecxz
jb
jo
add
pusha
xor
add
dec
cmp
loopne
xchg
jo
add
rclb
adc
jp
scas
add
inc
clc
pusha
xchg
or
js
jae
inc
mov
push
or
pop
push
clc
in
sarl
xchg
pop
add
fnsetpm(287
xor
ret
test
lahf
jnp
rclb
mov
test
add
popf
jl
dec
jp
push
sub
add
xor
outsl
cmp
sbb
jmp
jg
sbb
test
add
sbb
xor
add
cmc
stc
ds
push
in
add
pop
add
imul
gs
push
pop
lock
mov
add
cmpsb
out
stc
inc
and
add
rcrl
shlb
jmp
roll
fisttpl
cmpl
cltd
test
sub
int3
push
aad
mov
inc
arpl
loope
rdmsr
push
cmp
dec
and
add
rcl
or
or
add
mov
repz
push
pusha
cmp
aas
inc
mov
aad
add
mov
addr16
data16
xchg
pop
andl
rcrb
sbb
jmp
pop
mov
cmp
add
add
insb
jo
add
adc
stc
sar
push
sub
cmp
jo
sahf
jo
fsts
mov
sub
sub
adc
adc
pop
out
add
mov
shlb
add
fcoms
loopne
mov
nop
xchg
sti
movsb
sbb
add
cmp
addl
mov
lods
jge
enter
outsl
cmc
xorb
mov
stos
add
xchg
pop
inc
cwtl
jno
data16
scas
add
daa
imul
mov
push
mov
push
test
push
jl
inc
or
popf
or
in
sbb
lea
std
insb
add
daa
and
jge
popf
cmp
add
pop
mov
jp
sahf
and
sbb
push
les
cwtl
and
pop
dec
or
out
or
pop
dec
mov
shl
add
inc
jmp
xchg
mov
add
out
sub
lock
repnz
out
mov
push
push
add
cltd
jle
inc
stos
sbb
movsl
add
xchg
pop
dec
mov
lods
out
push
sbb
xor
adc
add
push
xchg
jge
aas
add
sbb
cmp
pop
ror
add
cmp
mov
jg
movb
pusha
cmp
loopne
add
ret
fs
jns
xor
xchg
add
adc
sub
ljmp
push
leave
stos
add
add
dec
incb
outsl
add
or
lds
add
dec
dec
jo
add
ljmp
and
insl
cmp
int
push
cmp
inc
lret
out
adc
jnp
mov
in
jno
adcb
pop
insb
adc
adc
str
rolb
movsb
in
scas
in
pop
mov
add
xlat
testb
daa
mov
sbb
je
int3
xchg
cld
lods
mov
insb
je
sub
sbb
mov
jecxz
or
add
pop
mov
js
testb
mov
jle
jmp
push
ja
add
add
pop
mov
stc
shlb
mov
inc
gs
imul
and
sbb
pop
add
add
mov
incl
rol
pop
lock
incb
push
mov
mov
adc
sti
lahf
or
sbb
pop
push
fsubr
dec
push
scas
mov
or
andb
lcall
inc
jo
add
pop
push
dec
sarb
jle
mov
add
movb
mov
ja
jb
test
or
inc
xchg
push
iret
out
or
cmp
jne
aas
jmp
push
inc
aam
fnstenv
pop
sub
add
sub
loope
fiaddl
and
mov
push
and
pop
xchg
inc
mov
add
or
cmp
or
lret
and
mov
fistpll
or
mov
or
call
mov
es
lock
add
dec
add
cmp
or
mov
cmpb
stc
sbb
jle
or
das
lods
push
mov
orb
ret
movb
lcall
jo
movsl
sbb
dec
into
es
jae
adc
adc
add
xchg
mov
add
imulb
out
fcmovne
fimuls
mov
xchg
lret
sbb
mov
in
cmp
sub
lret
push
and
or
cmp
subl
add
push
jbe
add
rolb
nop
fistl
jl
adc
push
cwtl
cli
push
repnz
mov
int
fcompl
add
mov
fsub
lock
add
sbb
push
pop
repnz
adc
push
jnp
mov
mov
and
mov
int3
add
pop
fadds
hlt
pushl
push
add
dec
leave
outsb
add
sbb
adc
adc
cmp
cmp
or
add
mov
loopne
or
pop
lret
sbb
subb
push
mov
pop
cmp
push
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
cmp
shl
loop
imul
int3
xchg
adcb
mov
pop
and
and
add
mov
lods
dec
xchg
mov
xchg
add
jle
or
clc
call
mov
xchg
fildl
adc
push
rclb
add
pop
fidivrs
dec
adc
inc
outsl
mov
xor
jmp
jl
push
add
call
or
out
jg
loopne
lods
add
mov
sub
pop
sub
test
xor
jno
mov
loopne
inc
and
sbb
js
imul
jge
rolb
pop
or
xchg
lock
sub
cmp
jl
jae
mov
in
and
push
pop
lods
sti
into
add
shrb
or
xor
fcmovnb
in
mov
adc
add
stc
cmp
sbb
rorb
fcomi
incb
jp
push
ret
jns
add
or
iret
sub
sbb
jmp
sarl
mov
pop
ret
or
xchg
jo
pop
or
push
adc
inc
es
not
add
xchg
or
and
push
add
not
and
sbb
jle
add
jo
call
adc
sub
dec
sbb
inc
sub
cmp
dec
fdivr
test
adc
sbb
pop
in
cmp
add
add
and
or
add
or
das
lock
testl
cmpsb
and
arpl
call
int3
paddsb
andl
add
aad
dec
das
adc
dec
add
in
cltd
pop
in
jge
sub
xchg
or
push
ret
rclb
add
xchg
aad
xor
add
sbb
xchg
cld
pop
xor
fists
and
nop
mov
roll
pop
xor
loope
rcr
jo
push
clc
jmp
scas
sbb
loopne
and
cmp
ret
mov
movzwl
push
push
or
adc
mov
sar
rol
add
pop
pop
sub
fildll
mov
mov
push
or
cmp
shlb
adc
xor
fs
gs
mov
push
add
cmp
jg
add
cmp
call
push
or
arpl
jmp
sub
cmp
das
xorb
movsl
call
sub
test
mov
and
jl,pn
or
fcomi
pop
push
add
fstps
jl
add
imul
adc
pop
mov
jecxz
add
xor
cwtl
fstpl
psubsb
sbb
sbb
and
clc
fildll
push
out
insb
or
xchg
dec
push
mov
push
lods
ret
sti
nop
or
imul
and
sub
or
mov
popf
add
mov
data16
dec
or
movsb
pop
inc
scas
hlt
shr
pusha
add
sti
dec
je
or
or
inc
cmpsl
es
mov
push
and
ljmp
push
imul
dec
and
jno
stc
or
push
daa
cmpb
jecxz
addr16
push
adc
int3
push
loope
xchg
in
inc
xor
add
dec
sti
test
add
aam
sub
push
sbb
inc
add
adcb
ret
push
or
test
inc
daa
and
addr16
sbb
addb
dec
or
lock
cmp
pop
add
fldl
and
or
daa
ljmp
iret
stos
arpl
dec
nop
mov
and
xchg
push
and
enter
xchg
inc
add
stos
icebp
pop
push
inc
push
pusha
add
add
cli
repnz
aad
xchg
ret
jge
mull
sbb
add
inc
add
scas
jg
jp
mov
pusha
jmp
mov
incb
lret
jecxz
adc
adc
sbb
push
fidivs
pop
sbb
lods
or
inc
or
mov
test
in
push
push
mov
inc
xlat
dec
pop
shll
loope
xor
inc
mov
push
push
add
push
in
sbb
sbb
cs
mov
inc
test
adc
pop
jbe
sbb
ljmp
pop
add
sbb
inc
xchg
and
inc
xlat
mov
or
data16
leave
pusha
hlt
addb
sti
rcr
xchg
xor
jge
cmpsb
xchg
jg
add
xor
jo
and
movsb
adc
scas
sub
sub
rclb
in
add
add
mov
jmp
movsb
aas
adc
inc
dec
pop
xchg
lods
pop
cmp
aam
add
adc
adc
je
push
or
sub
and
call
loopne
push
sti
addb
clc
jb
adc
aas
je
and
inc
stos
sub
cmp
cmp
add
add
add
test
ficoms
hlt
mov
add
xchg
fcoms
jg
mov
xchg
cmp
sahf
rolb
add
insb
ss
add
push
movsb
mov
mov
test
and
in
stos
add
adc
cmp
mov
movsb
add
popf
rorb
test
jmp
dec
sbb
xor
jns
imul
jl
add
add
pop
cli
mov
add
push
dec
push
add
cli
xor
or
add
repnz
push
sub
loop
xor
inc
cltd
add
mov
insb
sub
lea
push
leave
sbb
inc
pop
push
outsb
dec
xchg
loop
cltd
dec
mov
jbe
xor
not
std
push
cmp
add
fcoms
add
stc
mov
mov
add
int3
insl
xchg
pop
popa
add
pop
xchg
imul
and
xor
js
adc
mov
push
sub
add
nop
mov
sbb
or
test
sti
jp
add
popf
xor
stos
ffreep
add
andl
or
mov
push
and
mov
add
xor
lret
or
cltd
mov
lmsw
test
add
aaa
mov
movl
and
cmp
test
lock
push
lea
arpl
add
and
int
add
js
xchg
push
push
nop
mov
enter
rcrl
je
mov
test
mov
adc
sbb
add
test
pop
adc
fcoms
pop
sub
scas
pop
mov
add
dec
mov
adc
lods
jl
cmp
sbb
add
mov
dec
xor
xchg
popa
or
jmp
sub
cmpl
add
jb
mov
push
loope
shr
sub
jle
pop
push
and
fwait
mov
aas
enter
add
call
bound
push
add
sbb
pop
xchg
ja
sbb
mov
mov
fbstp
sub
add
and
add
ljmp
push
sbb
fs
lock
sahf
dec
xor
cmp
loop
and
xchg
inc
movhps
aam
mov
pusha
lcall
nop
movsl
xor
scas
std
cmp
cmc
jne
fisubrs
ret
dec
pop
in
rolb
and
je
push
or
xchg
je
add
pushf
jle
pop
adc
addr16
jns
cld
enter
inc
nop
xor
sarb
jl
add
hlt
addb
add
push
scas
add
or
add
ljmp
stos
addl
aaa
and
nop
push
dec
add
js
jne
xchg
mov
add
lea
int3
int
add
pop
cs
jno
sbb
lret
popa
inc
loope
mov
test
std
push
add
jns
bound
pusha
movsl
mov
push
pop
cmp
repnz
sbb
add
sub
push
xchg
jge
pop
add
and
lcall
stc
jnp,pn
int
sub
ja
insb
dec
cvtps2pd
cmpl
dec
adc
mov
push
pop
xchg
adc
cmpsb
push
jnp
dec
rcrb
into
xlat
add
mov
mov
fstl
pop
subb
aas
popf
rolb
mov
add
rcrl
add
adc
dec
add
add
inc
lods
xchg
in
add
dec
cmp
mov
jecxz
fstpt
clc
sarb
fldt
movsb
divl
repz
lret
shll
xchg
cmp
in
fcom
add
fisttpl
jnp
adc
mov
dec
ret
aam
flds
sub
adc
lods
nop
cmp
dec
and
cmp
cmp
mov
pop
mov
jecxz
leave
fistpll
mov
fwait
add
add
in
mov
dec
add
call
sub
add
testl
ret
push
mov
popa
lds
push
push
and
xchg
and
add
js
or
ret
fcmovnbe
sub
add
dec
push
test
fiaddl
stos
xchg
jle
inc
cmp
daa
and
loope
push
dec
addr16
aad
pusha
mull
inc
pop
and
movsb
aas
jns,pn
push
mov
cmp
adc
je
jp
mov
add
inc
ds
xchg
push
enter
and
call
sbb
dec
add
sub
jecxz
jo
lret
and
sub
mov
pop
or
pushf
cmpsl
add
push
cmp
int
nop
inc
test
roll
daa
stos
jns
fimuls
mov
ljmp
inc
xchg
loopne
fnstcw
xchg
icebp
add
push
xchg
pop
xchg
fidivl
sub
icebp
fadd
add
add
rclb
ljmp
daa
adcb
jmp
shrb
add
test
xchg
add
loopne
clc
push
cmpsl
movl
xor
push
mov
rorb
imul
pop
pop
jmp
add
shrb
repnz
push
cmp
add
in
inc
fstpl
add
cmpsb
in
lret
dec
sbb
repnz
stos
xor
sbb
psubw
sub
rcll
and
sti
aam
movb
xchg
inc
mov
mov
add
movsl
popf
cs
jmp
dec
mov
xchg
add
pop
mov
loopne
dec
add
ret
data16
in
stos
fildl
sub
fisubrs
add
add
mov
cli
loope
and
add
dec
dec
sahf
shrb
aas
mov
add
pop
pushf
test
mov
jae
aaa
or
xor
add
jnp
add
je
or
and
add
xor
dec
sbb
fwait
adc
pop
sub
adc
xchg
dec
mov
adc
mov
dec
hlt
dec
add
mov
movl
cmp
adc
les
and
inc
adc
sub
inc
jae
mov
mov
rcll
stos
ret
mov
fiaddl
xchg
ds
mov
sub
ljmp
sbb
mov
iret
shlb
mov
ds
adc
dec
jecxz
jmp
aam
add
push
call
sbb
mov
inc
jbe
xchg
adc
push
xchg
xchg
mov
xchg
adc
ret
add
test
add
sub
xchg
add
xlat
inc
jae
dec
rclb
push
pop
mov
fs
js
and
dec
xchg
popf
mov
and
sub
push
arpl
sbb
mov
cmp
mov
roll
jge
pop
jbe
fmuls
add
scas
jne
push
insb
fs
cmpsl
stc
je
rclb
push
push
cld
movb
adc
incl
cmovg
pop
xchg
add
shlb
add
por
jge
push
jne
sbb
mov
popa
sbb
push
and
js
pop
mov
or
or
insb
std
cmp
inc
push
ret
add
add
out
sbb
lds
pusha
add
mov
fsin
add
pop
into
and
mov
aas
lea
test
add
pop
negb
aas
mov
add
add
or
fmull
dec
add
sub
rorb
mov
push
pop
add
dec
test
sar
dec
add
rolb
push
aas
add
push
adc
mov
dec
jl
pop
rcl
jle
rolb
or
sub
add
push
inc
xchg
add
xchg
sub
aad
and
or
or
je
xchg
arpl
or
push
addr16
add
ja
movsb
cwtl
clc
aam
orl
sbb
es
adc
pop
adc
sbb
imul
push
jae
gs
aaa
push
fdivs
lock
out
inc
push
daa
ret
mov
add
or
jae
adc
shll
pop
adc
or
leave
push
hlt
or
mov
insb
repz
xchg
xor
es
sbb
pop
lret
daa
cmp
adc
add
jle
add
mov
sbb
jmp
lret
mov
add
iretw
add
or
js
or
stos
jg
movsb
add
rorl
pop
mov
xchg
shlb
add
pop
shrb
andb
xor
adc
hlt
sub
hlt
inc
add
imul
add
mov
jl
iret
aad
mov
subb
add
out
daa
cmp
popf
nop
pop
repnz
icebp
gs
frstor
xor
jbe
inc
mov
daa
push
push
aad
xchg
sub
jecxz
add
dec
add
push
cmpsb
dec
inc
enter
jmp
lock
dec
daa
add
fxch
adc
adc
lea
pop
dec
xchg
cmc
enter
inc
ret
test
str
ja
testb
add
je
mov
add
mov
cmpl
push
add
cmp
mov
jae
data16
and
cli
hlt
cmp
lahf
mov
add
inc
xor
scas
pusha
xchg
aas
mov
mul
mov
add
lret
mov
subb
imul
or
jmp
call
mov
lock
es
mov
pop
add
or
cwtl
jnp
adcb
stos
inc
jb
popa
xor
imul
dec
outsl
push
jge
inc
push
je
insl
sbb
loop
cmp
jg
orb
inc
and
out
imul
ret
dec
lods
xchg
sbb
adc
inc
aas
or
add
sbb
fbld
cmp
xchg
ret
mov
jp
push
jne
cmp
jle
addr16
lock
add
sub
popl
scas
pop
in
mov
out
rcr
add
andl
pop
and
movsl
inc
subb
inc
or
mov
push
mov
and
cwtl
or
mov
addl
push
mov
call
and
inc
lock
pusha
lret
and
pop
outsb
add
lea
and
test
int
mov
mov
leave
aam
pop
fidivrl
enter
test
inc
adc
add
inc
inc
mov
push
das
xchg
pop
cmp
sub
fwait
test
lock
cmp
ljmp
dec
stc
mul
les
inc
add
sub
add
into
in
test
sub
inc
cmp
mov
das
into
sbb
or
addl
stos
and
add
and
sbb
and
cmp
jmp
sbb
dec
add
pop
fistl
decl
and
push
bound
mov
mov
add
movb
add
add
les
mov
out
repnz
nop
sub
mov
inc
sub
popa
jp
int3
test
xorb
adc
pusha
fsubr
push
add
pop
orb
movl
pop
and
in
cmp
lahf
and
push
hlt
fwait
sbb
add
imul
unpcklps
shlb
inc
xor
xchg
sbb
or
adc
xchg
add
sub
xchg
in
xor
push
dec
arpl
or
jnp
stos
adc
mov
leave
cld
dec
ja
add
adc
js
rclb
inc
cmp
lock
jmp
mov
lods
pop
pop
push
dec
pop
jne
andb
mov
ja
add
sbb
rorb
rcrl
add
mov
dec
dec
add
test
add
and
jne
hlt
mov
and
int3
das
add
add
stos
lods
or
pop
push
push
add
xchg
out
cmc
cli
loop
clc
in
sbb
shlb
adc
lea
ljmp
fiadds
pusha
lock
push
test
cmp
pop
add
imul
add
mov
xchg
out
push
xchg
add
mov
lea
ss
add
repz
call
or
inc
sbb
sbb
xlat
xchg
and
in
mulb
fcomp
adc
mov
jnp
add
fldenv
popl
xchg
adc
cmp
add
je
and
or
push
sbb
inc
sub
cwtl
pop
push
adc
arpl
xchg
xchg
jg
jg
jg
jg
add
scas
jecxz
cmpsl
inc
jmp
xor
mov
test
repz
dec
movsb
ficoml
push
jbe
add
push
daa
inc
push
pop
bound
aas
pop
sbb
test
and
cmp
bound
and
fwait
and
cmp
mov
pop
mov
add
call
add
xorb
mov
into
push
inc
mov
add
mov
jmp
add
or
push
sub
push
clc
cmp
ror
jmp
xlat
add
xchg
add
mov
sbb
outsb
repz
add
cmp
lret
mov
xchg
add
adc
pop
jns,pt
cmpb
nop
adc
add
subl
mov
cmp
test
jne
sbb
sbbl
xchg
pop
adcl
add
loop
les
add
mov
lahf
inc
cwtl
xor
or
pop
and
dec
stos
xchg
into
and
mulb
sbb
sub
or
mov
push
cmp
or
xor
cwtl
ret
add
xchg
sub
cmp
jecxz
pop
or
pop
dec
and
cmp
xchg
dec
pop
or
jno
push
adc
decl
ret
xorl
or
or
xor
lahf
outsl
add
rclb
pop
stos
into
loopne
adc
xor
jns
cld
test
adc
mov
push
pop
ja
add
or
cmp
mov
loop
xchg
gs
dec
pop
cmp
push
sbbl
movsl
cmp
mov
adc
test
xor
add
xchg
add
jmp
mulps
and
inc
movsb
xchg
in
ret
pop
loopne
add
cmp
sbb
mov
pop
cmp
mov
insb
and
dec
ljmp
mov
int
dec
clc
adc
mov
xor
xchg
aaa
fwait
sub
fiadds
cmp
call
sbb
mov
add
jb
movzwl
lcall
push
and
das
add
cmp
dec
cwtl
iret
mov
jecxz
andb
loopne
add
incl
rorl
push
pop
push
int3
shrb
dec
cmp
int
out
orb
imul
and
in
add
aad
mov
aas
add
mov
and
push
add
sbb
in
dec
arpl
or
xor
add
inc
enter
imul
add
clc
sub
mov
push
pop
mov
popf
js
add
cmp
cmp
pop
inc
cmp
add
cmp
inc
xchg
ficompl
push
inc
into
mov
lahf
adc
pop
arpl
inc
sub
xor
shr
ret
pop
pop
jmp
mov
sbb
out
xor
push
add
cmc
outsb
gs
lock
cld
pop
movsb
add
or
data16
add
std
addb
adc
je
dec
orl
dec
sbb
repz
pop
add
es
mov
adc
xchg
xor
nop
sub
xchg
movsl
int
add
jmp
fwait
mov
mov
popf
mov
iret
sub
add
dec
push
and
jp
sbbl
hlt
lea
cmp
xor
and
in
and
add
stc
mov
xchg
and
xchg
add
insl
notb
push
adcb
add
or
adc
outsl
rolb
stos
mov
pop
adc
out
mov
hlt
mov
jbe
xchg
popf
push
xor
ret
sahf
add
mov
push
add
jne
dec
add
fcmove
or
push
dec
add
cwtl
fmull
dec
adc
dec
xchg
xchg
xchg
enter
add
mov
add
and
mov
loopne
daa
hlt
stc
cmp
add
lret
fsubs
je
repnz
mov
stos
aad
lods
rorb
add
out
sub
sub
jmp
loop
aas
mov
sub
ret
sbb
lock
cmp
jne
xchg
es
pushf
add
lods
mov
sub
iret
rolb
out
sub
push
data16
inc
arpl
cmp
out
sub
aas
push
pop
sub
xchg
mov
mov
mov
pop
xchg
lea
adc
aas
dec
aad
push
ror
sbb
sbb
movl
push
jmp
ljmp
andl
mov
sbb
fbstp
pop
add
adc
pop
dec
add
pushf
mov
inc
add
dec
add
lret
aas
dec
jl
xchg
js
leave
mov
lea
push
add
cmpsl
fisttps
and
jbe
imul
inc
pop
mull
dec
faddl
xor
sbbl
pop
inc
push
add
push
cmpsb
sbbl
dec
pop
in
fwait
inc
aas
mov
testl
push
add
inc
pop
push
and
jo
cmp
jno
and
jae
jmp
movsl
jle
je
les
pushf
add
cmpsl
into
aam
adc
int3
ss
push
mov
add
inc
or
inc
cmpsb
enter
ficoms
adc
test
sbb
mov
sbb
imul
xchg
add
jmp
or
add
mov
dec
cmpb
inc
add
lock
add
sub
xchg
test
imul
mov
cmp
ds
pop
add
lret
ds
gs
inc
mov
rorb
push
and
mov
sub
add
xor
push
add
je
imul
dec
jo
add
decb
inc
or
adcl
xor
lods
aas
pop
push
mov
push
push
gs
add
dec
push
push
inc
add
fisubl
sub
add
lahf
pop
add
mov
cmp
dec
add
jo
add
or
add
test
add
sbb
addl
pop
pop
mov
lret
cmpsl
loop
xor
test
test
and
jns
add
adc
dec
mov
lods
sub
jge
mov
mov
lahf
fimull
mov
pop
lret
jns
pusha
add
idivb
adc
fs
or
add
or
or
orb
or
xchg
enter
pop
push
push
sub
lahf
add
pop
add
std
dec
iret
push
or
add
cmc
lret
or
cmp
movb
adcl
jb
add
adc
in
cmp
cmp
xlat
sbbl
cmpsl
xchg
enter
cld
stos
add
test
cltd
add
scas
repnz
adc
push
mov
and
mov
pop
mov
push
lock
add
je
div
dec
jb
add
jbe
push
dec
cmp
pop
push
lods
xor
nop
out
rclb
inc
mov
mov
and
jne
pop
and
addb
test
jge
pop
add
adc
add
rorb
mov
lods
add
add
add
jmp
cmp
push
add
lcall
pusha
addr16
jo
call
dec
add
lcall
pop
xchg
insl
or
cmp
xchg
aad
bnd
insb
add
mov
fwait
ds
xchg
add
lods
hlt
adc
ljmp
mov
xor
cmp
push
mov
lods
xchg
repnz
lret
mov
xor
insl
int
dec
rolb
push
cwtl
test
test
xchg
gs
scas
int
xchg
mov
inc
loopne
jnp
xor
add
adc
lea
mov
testb
imul
xor
ja
mov
cmpsb
sbb
movsl
lahf
add
int
sub
mov
ja
test
push
add
pop
pop
loope
pop
aaa
sbb
inc
ja
mov
push
or
flds
shrd
add
out
mov
jmp
movsl
sbb
je
lret
sbb
inc
adc
gs
adc
aas
cmp
das
cld
jns
sub
or
wrmsr
std
cmp
mov
and
sub
push
xor
add
pop
loopne
or
sub
repz
jo
pop
add
test
rclb
add
or
ljmp
adc
ds
fldl
push
sbb
enter
out
not
dec
cli
test
dec
add
test
add
insb
push
sarb
daa
jae
push
js
dec
push
cmp
bound
pop
movsb
adc
pop
sbb
in
adc
mov
add
sub
cmpsl
xchg
ror
cmpsb
add
in
push
out
loope
lock
add
and
and
jp
nop
add
and
cmp
sub
push
pop
or
data16
jge
xchg
add
popl
dec
dec
loop
push
adc
inc
push
js
push
ljmp
add
vpmulhuw
mov
inc
sbb
xchg
xchg
and
into
aad
and
nop
add
cmp
xchg
enter
iret
icebp
pop
push
loopne
adc
and
test
mov
xchg
lea
cmp
xchg
add
dec
aaa
sbb
mov
sbbl
add
and
dec
pop
loope
out
std
and
rolb
mov
xor
push
push
cmp
addl
mov
mov
mov
fs
mov
add
shll
push
push
inc
repz
xchg
aas
mov
pop
xchg
fs
fsubr
sbb
leave
inc
adc
das
mov
add
mov
mov
repz
jne
repnz
bswap
mov
xor
adc
pop
pop
adc
add
mov
adc
add
xchg
pop
imul
pusha
mov
mov
fmuls
mov
push
mov
jno
lock
mov
nop
add
sbb
add
and
lldt
push
jmp
add
jno
and
adc
sbb
stos
push
scas
add
movsb
push
mov
call
rcrl
fistpll
push
push
pop
xchg
adc
and
push
xor
adc
roll
mov
str
sbb
mov
inc
scas
pop
mov
cmp
push
dec
dec
ja
add
ret
and
pop
inc
sbb
xchg
inc
fdiv
pop
orb
mov
jmp
ljmp
imul
mov
mov
add
stc
pop
or
add
rcrb
xchg
sbb
add
sub
outsb
mov
scas
je
add
sub
aad
push
and
or
and
and
sub
out
and
pop
test
pop
cmpsb
addl
pop
bound
jmp
clc
hlt
mov
add
aad
mov
or
and
xchg
leave
shr
or
fiaddl
les
adc
nop
mov
adc
fstpl
add
cmpsl
loopne
movsl
daa
push
ficompl
add
enter
mov
pushf
and
fprem
ret
pop
mov
cmc
fs
add
pop
mov
jmp
pushf
popa
jmp
mov
adc
fs
or
dec
and
sarl
sub
data16
mov
decb
jns
add
cmp
xchg
pop
add
gs
jb
mov
mov
sar
fcoml
repnz
sub
shrl
iret
jp
mov
cmp
das
jle
fbstp
add
orb
cmp
sbb
jne
rclb
adc
bound
or
add
xchg
fs
xor
lcall
nop
or
les
add
xor
xor
adc
xorl
mov
xchg
mov
ret
xorl
lods
cmp
imul
lds
addb
aas
sub
dec
add
pop
jge
add
adc
and
add
lret
shr
cmp
aas
pop
adcb
sbb
jns
xor
cmp
dec
inc
add
xchg
push
mov
addb
popf
cmp
cld
xor
inc
mov
gs
add
into
cmp
pop
movsl
add
ret
popf
cli
je
xor
bnd
add
mov
sbb
negb
cpuid
js
jge
add
dec
lock
ret
cmp
clc
mov
add
push
add
lcall
ja
or
mov
cmpsb
add
addl
jne
add
lods
sub
sub
add
mov
or
add
adc
les
cmp
insb
xchg
xor
push
mov
add
test
jnp
add
adc
repnz
rolb
push
adc
das
imul
ljmp
add
adc
lret
push
cmp
cmp
add
jmp
jp
mov
mov
dec
incl
gs
cli
or
sbb
lea
cmc
cwtl
bswap
push
add
push
fwait
xchg
lea
mov
inc
ds
add
aam
add
dec
jmp
test
dec
sti
in
int
add
out
iret
inc
into
or
or
movsb
cli
add
push
out
test
adc
mov
jbe
and
test
out
lret
and
insb
cwtl
ljmp
mov
pop
cmp
ret
add
or
pop
mov
pushf
add
add
add
leave
mov
or
stc
std
add
push
push
push
ss
sahf
nop
jecxz
or
das
cmp
xchg
inc
or
cmpl
push
sbb
or
dec
and
cmp
mov
add
das
repz
or
dec
or
loop
add
dec
les
rcrb
push
inc
dec
sub
jne
cmp
add
addr16
dec
pop
call
add
xor
xchg
adc
add
pop
jnp
sbb
sbb
add
int
mov
inc
add
add
adcb
sub
inc
jns
mov
mov
pop
ja
add
xlat
add
mov
cld
mov
sbb
push
std
into
jae
inc
dec
add
push
lea
sahf
xchg
fdivrs
pushf
xchg
pop
rorb
push
mov
adc
add
mov
mov
adc
lret
ret
cmp
add
cld
xchg
mov
or
add
gs
mov
cmp
aas
loopne
mov
xchg
xor
push
hlt
add
cmp
fucom
cld
nop
pop
add
cmp
mov
mov
pop
add
in
loope
into
enter
call
int
add
je
or
pop
mov
add
sbb
xorl
mov
rorb
sub
jle
add
mov
add
int3
in
jge
and
cli
pop
cvttps2pi
add
cmp
cwtl
jb
mov
fistl
divl
setb
add
ljmp
or
mov
inc
mov
xchg
rcl
out
lea
pop
cmp
fmuls
lock
add
cmp
jne
xor
add
xchg
jae
js
mov
mov
and
inc
repnz
sub
or
and
lock
add
add
jne
add
and
mov
aas
popf
arpl
add
dec
lods
cltd
ret
and
cmp
hlt
leave
pop
fcom
xchg
addb
movb
add
pop
rorb
jne
aad
mov
pop
add
jb
sbb
or
fsubr
verr
loopne
cmc
add
lods
rcr
mov
fisubs
pop
icebp
test
lret
adc
add
sub
cmp
pop
lds
xor
xchg
repz
movsb
lods
inc
dec
adc
pop
add
xchg
pop
lsl
or
sbb
push
nop
jmp
aaa
sbb
adc
or
lret
fsubrp
rorl
jge
pop
add
repz
fisttps
testb
push
call
scas
sub
jae
add
mov
lcall
add
fmuls
out
xchg
mov
out
jg
xchg
mov
push
repz
sbb
add
push
lcall
fadds
cmpl
sbb
inc
out
lahf
push
ret
jno
les
nop
dec
movsl
adc
enter
or
cwtl
lea
shll
nop
ret
push
fdivr
popf
lret
pop
pop
leave
gs
hlt
xlat
add
loop
aas
mov
jp
add
mov
push
add
pop
adc
xor
cmp
jne
mov
or
aas
dec
pop
jmp
jp
xor
xlat
stos
ficompl
xchg
dec
adc
insb
mov
es
roll
inc
add
jmp
clc
push
pop
scas
loopne
inc
dec
or
xor
or
lahf
add
ss
sbb
imul
fs
fildll
lret
roll
sbb
mov
inc
mov
icebp
inc
mov
jo
cmpl
lea
ljmp
scas
pop
popa
dec
jne
sub
jnp
add
sbb
lahf
sbb
add
dec
repz
popa
jnp
pop
inc
ljmp
cmp
repz
enter
xor
out
inc
add
pop
stos
push
es
pushf
push
add
and
mulb
negl
add
sub
xchg
xor
push
jmp
hlt
std
in
xchg
add
out
mov
fdivr
mov
pushf
and
cmp
lcall
adc
std
or
mov
mov
jg
push
faddl
add
aaa
adc
pop
inc
aam
dec
fs
add
xor
add
mov
mulb
leave
cs
fs
int3
call
mov
les
jnp
movb
ret
jne
outsb
mov
add
or
pop
or
cltd
mov
pop
pop
mov
add
adc
lret
icebp
int3
fmull
test
push
cmp
movsl
jecxz
test
das
mov
xor
inc
mov
faddp
cmp
ja
pop
scas
sahf
aas
andb
inc
add
adc
cwtl
mov
and
mov
pop
dec
jp
pop
mov
push
repnz
cmp
jb
in
lock
mov
fisttpl
pop
pop
xor
pop
add
sti
and
cwtl
adc
inc
mov
mov
jae
movsl
add
pop
fiaddl
and
add
outsb
dec
add
pop
sub
call
push
add
and
cmp
jl
jne
add
out
leave
xor
cmpb
out
je
sub
push
stc
add
cmp
xchg
jecxz,pt
push
add
test
sarl
push
add
jl
xor
add
test
test
jg
add
aas
call
into
pusha
repz
add
stos
das
pop
or
add
or
add
xchg
cmc
incl
add
fstp
orl
xchg
add
pop
pop
out
loop
cli
ret
add
xadd
jb
ljmp
sub
push
lea
push
push
testb
add
inc
sbb
add
aas
stos
or
filds
je
and
sbb
stos
fs
xor
jne
push
mov
movsb
shll
lahf
xchg
addl
add
mov
sub
mov
stos
add
mulb
or
jne
jo
add
push
push
mov
dec
roll
pop
ljmp
add
add
mov
adc
pop
jb
lds
ret
inc
sbb
and
mov
cmp
add
lock
add
pop
dec
pusha
lods
or
mov
sbb
add
push
cmp
aas
adc
inc
sbbb
dec
sti
pusha
adcl
clc
ljmp
add
adc
xor
mov
mov
inc
or
lock
add
jne
cmp
rcll
enter
int
fadds
add
test
jne
or
aad
sahf
add
fwait
push
adc
in
pop
mov
enter
jp
loop
add
mov
lock
jb
jo
rcr
inc
testb
add
jne
adc
leave
or
mul
cmp
cmc
mov
xchg
dec
pop
xorl
mov
add
addb
and
push
pop
and
sbb
add
lahf
cmp
pop
add
sbb
insb
pushf
sti
test
shlb
les
pop
mov
mov
jnp
cli
enter
dec
cltd
scas
add
js
xor
pop
xor
inc
je
pop
cmpb
sbb
test
clc
lret
xchg
je
add
ret
mov
test
add
pop
dec
xor
lock
leave
sbb
in
cmpsl
arpl
sub
fistps
sub
dec
add
cmpsl
add
nop
xchg
push
pop
add
add
sbb
sub
or
clc
or
pop
incl
das
adcb
adc
sbb
out
add
mov
cwtl
xor
nop
add
stos
and
mov
les
sbb
adc
sar
cmpsb
shlb
push
and
adc
pop
leave
shrb
cmp
pop
enter
cmp
add
mov
subb
adc
mov
sub
mov
fldt
pop
or
xor
dec
pop
add
jns
ret
push
nop
cmp
adc
push
inc
cmpl
dec
sbb
mov
or
mov
lods
lcall
pop
sub
clc
lea
mov
pusha
imul
adc
pop
pop
jne
mov
psubb
push
mov
dec
mov
cmp
add
cs
add
js
or
int
push
imul
loop
aas
and
test
aam
mov
sub
jo
pop
add
int3
ficomps
inc
jge
insb
pop
add
jne
adc
push
add
js
cld
sub
and
or
pushl
mov
into
inc
mov
out
dec
inc
adc
add
adc
adc
test
or
mov
add
mov
repnz
jne
mov
sarb
insb
cmp
add
daa
lock
ljmp
adc
mov
enter
pusha
call
popa
cltd
push
or
scas
add
sub
add
jl
push
xlat
test
mov
pop
pop
mov
sub
adc
push
cmpl
add
enter
inc
mov
sub
sub
pop
mov
xchg
or
mov
mov
cmpl
push
jae
xchg
addb
or
int3
mov
push
pop
mov
fisttps
cmp
sbb
push
push
lret
pop
and
jg
add
ljmp
cmp
xor
push
ret
mov
enter
out
int
cmc
fildl
pop
xchg
insb
dec
adc
adc
scas
push
pop
mov
adc
cmpb
shr
push
call
in
je
pop
or
add
ret
adc
fs
movsl
add
cli
shlb
movsb
adc
sub
cltd
push
add
lods
fidivs
mov
adc
in
add
movsb
pop
rep
jmp
popa
mov
add
adc
lock
inc
add
jmp
popl
pop
or
insb
add
mov
mov
rorb
mov
popa
jle
pop
in
mov
scas
add
xlat
sub
push
and
ds
rorb
pop
sub
add
nop
jg
add
push
mov
repz
add
inc
dec
xchg
loopne
add
dec
sub
mov
inc
adc
or
add
or
scas
orb
push
jo
add
call
push
loopne
add
std
or
inc
push
dec
stc
add
popa
mov
call
pop
int3
rorl
hlt
lcall
add
popf
xchg
rclb
mov
sbb
add
stos
enter
pandn
xchg
add
adc
push
jecxz
pop
mov
fadds
jl
add
sbb
js
dec
adc
lods
movsl
jle
dec
sub
fwait
pop
lds
loope
in
cmpsl
pop
sbb
jo
inc
clc
push
dec
push
add
sbb
adc
and
sub
and
push
cwtl
testb
roll
call
lret
fnstcw
popf
xchg
adc
add
push
or
adc
xor
cld
add
xchg
dec
lahf
add
jge
add
in
subb
movsl
mov
shll
push
adc
inc
jge,pt
add
js
xchg
xorl
daa
rolb
add
out
cmp
outsb
pop
das
add
push
ret
clc
pop
test
add
push
shlb
gs
stos
adc
push
jecxz
sbb
mov
inc
xlat
out
ret
cmp
into
add
ljmp
les
out
push
add
jo
mov
push
cmpsl
add
lea
ja
orl
xchg
call
adc
pop
shrl
sub
into
add
or
and
sub
loopne
test
add
add
cmp
sbb
xor
push
or
jo
push
push
jo
add
sub
dec
xorb
add
or
je
xorb
cmp
call
dec
pusha
add
jmp
inc
and
out
push
sub
scas
inc
orb
cmc
push
jne
pop
loopne
rol
sub
jns
incl
jmp
pop
daa
mov
add
dec
xor
fwait
mov
out
jp
pop
and
mov
loopne
add
lret
call
addr16
loopne
sahf
add
jp
aad
mov
inc
lret
push
shr
add
fsts
xor
pop
add
and
popf
mov
lock
sub
lcall
adc
add
jno
cmp
in
cmp
mov
hlt
inc
pop
jecxz,pn
ds
jns
add
in
push
add
repz
insb
sbb
roll
add
jge
add
push
or
sbb
aaa
add
int3
stc
push
add
or
mov
into
pop
xchg
xchg
xor
add
adc
push
filds
add
test
popa
mov
add
lods
movl
and
cli
or
xchg
test
in
add
fbstp
or
roll
dec
push
pop
in
lea
adc
lret
add
add
pop
rolb
mov
jno
fidivrl
add
and
pop
nop
in
push
xchg
jge
add
add
sti
sbb
mov
add
and
out
pop
jno
add
pop
inc
lods
sahf
sub
add
pop
fwait
mov
icebp
scas
stos
arpl
sbb
fcoml
adc
sub
xor
addl
inc
cmp
add
sbbb
outsb
movsb
or
mov
int3
cmp
add
jg
jns
adc
xchg
inc
add
shlb
add
in
inc
rcrb
mov
dec
add
dec
add
fsubl
xor
gs
adc
ret
jno
lahf
stc
bound
popf
cld
cs
fdivs
lea
jmp
or
lret
push
jge
es
add
mov
cmpsl
shlb
jns
push
inc
lahf
int
sbb
mov
xchg
mov
pop
cmpsl
repz
and
rolb
cli
adc
xchg
jb
out
sbb
pop
mov
insb
mov
inc
shll
and
sbb
pop
int3
sbbb
cmp
and
repz
je
mov
nop
xor
xor
in
loope
inc
pop
ret
stos
mov
pusha
std
mov
add
scas
mov
jno
sbb
bound
rorb
inc
xchg
leave
aad
pusha
lea
mov
adc
lock
clc
inc
ret
arpl
pop
cltd
jnp
shl
pop
jl
es
push
add
add
lea
mov
add
pop
ret
add
xor
hlt
addb
dec
pop
pop
loop
shll
add
lea
push
lahf
xchg
pusha
add
in
les
sbb
add
add
inc
test
jmp
pop
cltd
sub
add
dec
ds
jp
and
ljmp
cmp
pop
mov
int3
add
adc
xchg
jne
fwait
dec
add
lahf
xchg
xchg
xchg
adc
ss
push
ret
push
ljmp
stos
sub
cmp
iret
dec
dec
add
sub
xchg
sbb
out
mov
sbb
adc
xorb
add
fwait
leave
jns
adc
mov
inc
dec
sarb
pop
add
mov
loopne
roll
loope
mov
add
lods
xor
test
andb
push
sub
jno
ljmp
cmpsb
add
in
add
ss
push
mov
into
add
loopne
add
sbb
jecxz
roll
pusha
movl
out
orb
add
mov
roll
mov
pop
and
add
mov
add
sub
shrl
mov
inc
leave
push
insb
mov
add
gs
push
dec
xor
jge
add
insl
xor
cmp
pop
aad
mov
xor
shlb
js
ret
cmpb
push
add
push
imul
or
stos
mov
pop
and
fwait
in
arpl
cmp
mov
mov
sbb
dec
jle
lret
sub
in
push
jno
add
cmc
repz
dec
adc
add
inc
subl
push
mov
mov
inc
lods
mov
cmp
shlb
fcomi
add
fstps
pop
dec
cltd
test
mov
inc
inc
mov
adc
leave
mov
push
ret
jne
jnp
push
add
rcl
add
aas
sbb
orb
cmp
in
je
stos
pop
lock
jle
fs
lods
jge
xchg
jne
aas
xchg
inc
and
add
add
inc
addb
pop
mov
jge
add
lds
pushf
jae
dec
out
add
sub
push
pop
sbb
mov
and
dec
push
pop
sub
fs
stc
movsb
and
out
js
mov
pop
adc
fcomi
push
or
add
or
add
fnstcw
push
sub
add
enter
push
add
test
shll
or
add
add
add
sbb
loopne
cltd
sbb
aam
lods
push
lcall
cwtl
push
mov
je
xor
mov
outsl
and
jb
cs
add
mov
sbb
mov
and
inc
stos
mov
insl
jnp
or
sub
test
xor
push
inc
aaa
push
test
xor
std
sub
jmp
add
add
add
and
push
xbegin
xchg
out
add
sarb
add
adc
mov
dec
add
sub
add
mov
inc
ss
sbb
push
sub
orb
mov
or
mov
sub
rclb
loopne
loop
mov
push
clc
mov
sbb
rolb
or
mov
clc
std
xor
and
add
je
push
jcxz
mov
aaa
add
adc
cmp
dec
add
hlt
cld
push
popf
push
cwtl
mov
pushf
ja
aaa
cli
loopne
fcomi
sbb
mov
cmp
aas
push
pop
addb
jb
and
jp
fs
pusha
adc
ljmp
popf
add
jo
sub
imul
push
leave
or
outsb
mulb
test
cmp
shll
daa
xor
adc
add
out
fs
mov
mov
incl
mov
movsb
arpl
sbb
add
push
sub
dec
imulb
aaa
push
jo
loopne,pn
add
push
inc
jne
dec
mov
les
pop
push
add
or
add
lea
push
or
push
sbb
dec
mov
mov
push
or
or
loope
arpl
push
cs
dec
add
or
add
add
or
sub
jp
mov
inc
int
mov
jo
add
in
faddl
pop
jo
adc
lods
add
test
das
xchg
push
push
or
xchg
inc
cwtl
mov
insl
add
sub
add
clc
les
push
push
in
or
push
and
mov
into
ljmp
cvtps2pd
cld
dec
jg
mov
cmp
mov
insl
fsubrl
add
mov
into
inc
adc
cmp
lods
test
lahf
add
in
mov
add
lock
and
in
rolb
shlb
push
cmpsl
add
in
into
pop
inc
nop
lret
das
mov
dec
clc
sub
sbb
sub
dec
cmp
and
jo
push
mov
add
adc
and
sbb
jp
rcll
test
add
cmp
insb
add
psubb
xchg
inc
cmp
rcrl
sub
clc
cmpl
fs
or
or
mov
int
clc
add
lock
adc
dec
inc
pop
push
loope
pop
sbb
cs
fldcw
insb
mov
xchg
inc
aaa
dec
stc
cmc
sub
js
add
dec
rclb
arpl
cmp
in
cli
jg
dec
ret
sub
das
fcmovne
jne
cmp
pusha
pushf
mov
add
or
xchg
outsl
sbb
xor
pop
pop
adc
loop
mov
lret
loope
idiv
fsubrp
rol
add
inc
dec
ja
hlt
sub
mov
add
add
cwtl
ss
mov
shrb
in
out
add
cmove
xor
popa
add
ds
push
and
add
mov
and
jo
add
mov
adc
cmp
push
punpckldq
dec
xchg
popa
mov
or
int
mov
ljmp
ret
xor
jnp
add
push
inc
cmp
cmp
lods
push
mov
sahf
lret
add
dec
lcall
add
mov
push
aaa
cmp
lds
and
imul
mov
add
sbb
data16
add
std
gs
or
popl
xor
xor
jb
and
xchg
lret
and
sub
and
mov
popf
push
addb
xchg
and
sub
int3
pop
mov
mov
inc
push
insb
aam
sarl
and
mov
jecxz
jns
ror
add
fildll
cwtl
orb
push
pop
lret
insb
sbb
add
movsl
jge
add
stc
mov
or
mov
arpl
jno
cwtl
push
add
std
inc
pop
dec
shl
pushf
add
daa
mov
push
rcr
or
cmp
add
cmpsb
shlb
jne
push
add
mov
pushf
enter
cltd
popa
clc
dec
test
adc
sub
stos
add
mov
mov
cmp
loopne
add
push
imul
shrb
add
inc
mov
and
int3
mov
jbe
cmp
imul
sbb
repz
loopne
arpl
xor
mov
xor
scas
pushf
ret
push
pusha
push
inc
inc
add
mov
xchg
jae
mov
xor
int3
pop
xchg
ret
add
push
xor
hlt
sarb
in
in
add
pop
cmp
or
pop
dec
sbb
pop
sbbl
jmp
pop
and
jns
cld
loope
push
outsb
rcr
cmp
ja
jp
inc
pusha
lea
jae
add
xchg
pop
daa
cld
lock
fwait
lods
cmp
lret
and
out
add
pop
cwtl
insb
jecxz
or
mov
repz
mov
nop
inc
push
mov
add
or
jmp
pop
jl
int3
test
sahf
jo
pop
jmp
scas
iret
cmp
xor
jmp
add
jecxz
push
in
fildl
and
or
cli
les
cmp
cmc
and
stos
mov
adc
jge
movlps
mov
repz
push
lea
add
enter
mov
mov
cmp
adcb
add
mov
rcll
sub
jns
xchg
and
mov
stos
mov
adc
lret
sub
pop
out
lock
adc
and
int3
dec
add
xchg
pop
dec
imul
add
fcoml
pop
mov
les
pop
jecxz
add
sub
mov
xor
dec
cwtl
and
lock
add
xor
loopne
mov
roll
xchg
xchg
incl
sbb
xchg
addl
fbld
mov
pop
lret
sbb
mov
push
mov
aas
add
add
add
lods
enter
jne
jmp
inc
sbb
sbb
or
and
out
sbb
test
cmpsb
add
adc
fisttpll
dec
add
call
rorl
dec
mov
jbe
push
pop
in
stos
add
das
push
roll
add
add
xchg
pop
es
add
mov
clc
add
gs
add
pushf
sub
fwait
scas
les
clc
and
push
cli
push
je
jno
jg
shll
add
push
lret
stc
and
mov
popl
jmp
pop
hlt
add
dec
ret
sbb
cmp
fcoms
repnz
or
ret
adc
add
lcall
ror
adc
clc
orl
add
jne
int3
in
pushf
in
push
add
ljmp
jne
pusha
pop
jo
add
add
daa
repnz
pop
aam
and
add
xlat
mov
pop
or
into
sarb
inc
jns
jne
add
xchg
add
rclb
sub
lret
mov
pop
mov
fadds
nop
mov
push
xor
mov
pop
insb
lea
pop
sub
ret
shl
fimull
js
cs
mov
push
and
mov
sbb
push
or
mov
ltr
xchg
mov
add
lahf
sub
repnz
mov
ljmp
cmpb
loopne
inc
fs
sbb
pop
xlat
inc
adc
add
out
xchg
jmp
das
lods
cld
fwait
pushf
sub
in
add
adc
sbb
pop
outsb
or
add
push
call
subb
sub
sub
xor
adc
in
add
jg
cltd
or
add
scas
pop
ret
add
push
repz
dec
sbb
dec
cmp
push
xor
out
fildl
sahf
add
smsw
jmp
add
push
leave
pop
shlb
jns
add
lods
in
add
or
jmp
jge
add
hlt
jno
sar
mov
push
je
es
out
mov
mov
pop
mov
rcrb
or
add
movb
out
add
inc
mov
cld
enter
jo
fisttpll
inc
adc
sbb
fchs
adc
pushl
imul
cmp
iret
shrb
sgdtl
mov
testb
push
out
mov
or
sbb
sarl
add
aam
inc
push
xlat
std
add
cld
and
rorl
in
pop
ljmp
sbb
dec
add
das
pop
jne
fmul
clc
push
loop
jp
add
push
xchg
pop
xor
cmp
and
cmpl
andb
add
xchg
mov
pop
jae
test
pop
mov
lock
int
stc
add
jbe
inc
push
add
adc
lret
add
popf
sub
mov
jmp
out
mov
add
or
cmp
stc
add
aad
in
bound
jo
xor
jp
aas
sbb
add
pop
sub
addb
push
jp
in
add
inc
insl
cmp
testl
add
or
inc
vpmacssww
sbb
add
loop
shl
add
push
adc
in
addb
push
mov
push
jo
xor
das
out
or
outsb
inc
jmp
add
lods
add
int
mov
popa
pop
add
fistl
outsb
xor
imul
xchg
ds
cvtpi2ps
and
cmpsb
rcrb
mov
ret
add
orl
test
cmp
fidivl
or
pop
push
ja
jo
add
xchg
lods
fdivs
add
add
or
sub
pop
imul
add
jns
lods
mov
sub
popf
or
jbe
loopne
add
in
pop
add
shr
cwtl
fisubl
aad
add
outsb
leave
push
sarb
add
mov
cmp
adcb
je
inc
mov
pusha
subb
stos
add
jbe
mov
jo
loopne
add
or
add
js
shrl
lods
cltd
and
dec
js
jo
or
roll
cmc
inc
ja
jno
mov
sbb
inc
orb
pop
add
push
pop
aam
add
mov
push
ljmp
arpl
fisttps
lahf
call
jae
mov
and
pop
lods
filds
shrb
dec
int
pusha
and
fldl
aam
inc
xchg
jb
inc
outsl
leave
mov
fs
push
xchg
into
push
inc
mov
jnp
add
jmp
pop
sarb
add
or
push
into
push
pop
mov
xor
push
cmc
shlb
int3
pop
clc
dec
sub
add
adc
xchg
dec
lock
enter
cwtl
les
imul
aam
jbe
xor
inc
and
call
cmpb
or
lahf
jp
add
push
add
or
push
popaw
push
dec
add
adc
and
movsl
div
pop
popf
les
dec
js
add
cmpsb
dec
jo
add
lea
mov
and
jle
mov
jo
fstpl
pusha
sbb
lret
push
sbb
bound
cmp
inc
dec
xchg
cltd
jno
shrb
bound
push
add
jbe
mov
ljmp
rclb
add
pop
sbb
jo
inc
xchg
jb
mov
add
fldl
and
xchg
add
ds
push
xorb
mov
std
xchg
cli
push
inc
data16
sbb
adc
insb
add
add
ret
add
pushf
imul
sbb
idivb
cld
rolb
out
push
inc
mov
jnp
add
enter
xchg
add
add
aad
adc
inc
mov
insl
imul
pop
loopne
add
push
pop
sub
xchg
mov
in
mov
pop
add
dec
rolb
sbb
andb
les
imul
cli
enter
adc
add
lea
fisubrs
es
inc
push
add
jo
inc
pushf
dec
add
fucomi
sarl
cmpsl
addb
inc
nop
in
out
mov
arpl
add
sti
call
or
pushf
and
rorb
fucom
add
add
adcb
les
pusha
jno
jo
add
sub
iret
or
mov
or
les
add
cmp
pop
mov
add
fmull
sbb
cmpsb
jle
shll
dec
ja
add
mov
sub
push
mov
out
insl
push
mov
cmp
lds
push
adc
outsb
jo
hlt
sub
pusha
xchg
sbbb
mov
xor
add
add
fcomp
or
sbb
stos
add
or
jecxz
clc
popa
xchg
add
js
add
movsl
bts
and
and
or
jmp
mov
inc
shrb
in
stos
and
add
les
ss
inc
push
jb
adc
pop
out
fwait
add
pop
jmp
add
and
subb
inc
cld
int3
mov
xchg
jnp
lcall
jmp
jo
loopne
add
hlt
sti
loopne
imul
jo
fwait
add
push
loop
xadd
push
cmp
test
sub
sub
or
cld
sbb
add
inc
adcl
lods
idivl
sub
xor
cs
jl
les
cmp
add
add
xlat
or
sbb
out
add
dec
sub
mov
adc
xlat
add
cmp
setl
and
es
and
adc
stc
ret
cld
repz
addl
or
mov
jg
shlb
test
jmp
cmp
loop
jp
pusha
hlt
daa
aad
or
dec
and
jl
add
dec
pop
cmpsb
out
das
add
movsb
hlt
jns
xchg
cld
add
pop
dec
pop
xchg
jge
sarb
add
mov
add
scas
js
test
mov
mov
sub
ds
xchg
pop
cmp
test
pop
xchg
xchg
push
jo
add
mov
jbe
jae
mov
sub
add
xchg
negl
lock
mov
clc
add
clc
inc
cmpsb
pop
inc
repnz
add
inc
jl
push
jecxz
mov
add
add
lods
jno
nop
sbb
add
push
stos
ja
aas
std
add
mov
pop
xor
ret
bound
out
sbbb
or
push
popf
xchg
addb
popa
adc
add
jmp
inc
cmp
and
add
cmpb
sbb
add
mov
jl
loopne
add
adc
or
fidivrl
data16
mov
das
pushf
shll
add
nop
sbb
or
test
dec
jae
add
inc
sub
test
add
lret
mov
jnp
adc
inc
jbe
shll
mov
mov
sub
int
sbb
add
and
pop
das
je
add
add
push
sbb
insb
pop
popl
inc
add
out
adc
xor
add
and
aas
add
sbb
mov
andl
inc
dec
add
cmp
test
mov
out
adc
leave
mov
jno
andl
cmpsb
dec
add
mov
xchg
int3
mov
mov
jmp
test
pop
lret
fisubs
fsubl
pop
add
psrlw
jns
rcrb
pop
add
aaa
mov
mov
adc
add
imul
enter
imul
popf
nop
jp
dec
jo
mov
clc
stos
mov
loop
add
mov
ljmp
cmp
mov
jg
and
xorl
push
lods
stos
jl
cltd
sbb
push
mov
jg
test
js
add
mov
stos
addl
add
sbb
insl
in
mov
inc
xchg
fcomps
push
add
xor
outsb
in
orl
xor
enter
cwtl
lea
mov
adc
or
shlb
addb
or
adc
adc
pop
and
xor
add
pusha
jo
andb
sub
add
add
add
add
mov
addb
or
clc
adc
adc
rcll
call
dec
add
jb
push
mov
add
mov
adc
mov
pop
add
pop
jns
popf
pop
pop
mov
inc
or
loopne
add
decb
adcl
jae
lock
js
sub
shr
pushf
cli
add
mov
add
popa
mov
ds
pop
lods
add
pop
xchg
outsb
mov
xchg
push
mov
popf
shrb
mov
les
lahf
or
push
cwtl
add
push
mov
cs
xor
lea
add
stos
mov
out
bound
jge
mov
mov
mov
or
add
lds
mov
jb
mov
je
sub
or
add
decl
incb
in
nop
add
xor
adc
adcb
add
sbb
int3
loop
sub
xor
in
pop
cmp
ret
addl
mov
add
insb
jl
mov
leave
adc
mov
pushf
mov
and
sbb
and
add
call
cmpsl
push
daa
shrb
cmp
data16
jmp
lods
inc
lret
and
stos
out
jg
rolb
or
lock
pop
lret
pop
movsb
fwait
and
bound
xchg
lahf
fiaddl
std
xor
rcrb
cwtl
movsb
pop
dec
add
adc
push
cmp
mov
add
add
and
xchg
mov
test
push
hlt
insb
sub
loop
pop
ret
inc
cmp
enter
adc
leave
dec
push
rolb
cmpl
or
cli
add
add
inc
mov
add
nop
sub
loope
ds
loopne
or
push
mov
mov
mov
jae
pop
shlb
mov
sub
cmp
add
es
imul
add
xchg
mov
fxch
sbb
pop
adc
adc
pop
inc
sub
jae
adc
sbb
fiadds
xchg
aas
cld
rcll
clc
mov
mov
sbb
xchg
or
cmpl
addb
test
pxor
push
xchg
jns
adc
add
or
sbb
pop
call
inc
adc
rorl
repz
pop
xor
pop
lcall
mov
mov
mov
es
add
jp
jecxz
into
incl
add
jb
and
push
push
clc
add
inc
fdivrl
sub
nop
or
call
rolb
xchg
imul
add
pop
jmp
or
shrl
jg
add
inc
lea
pop
jg
sbb
mov
push
or
cwtl
push
cltd
add
mov
lar
push
push
rcrb
int
add
pop
cmpsb
cli
or
in
mov
add
mov
in
lea
arpl
push
ror
loop
shrb
sbb
push
push
push
stos
xor
adc
add
leave
mov
adc
adc
add
js
test
pop
pop
sbb
cmp
add
les
pop
cltd
jecxz
sbbb
mov
push
push
mov
sar
or
icebp
and
and
inc
jmp
pusha
jne
push
add
rolb
bnd
add
push
mov
xor
dec
mov
jg
jmp
nop
push
adc
sub
pop
jae
add
and
mov
mov
inc
dec
jno
movsb
call
repnz
add
stos
add
lea
add
push
das
and
icebp
adc
push
shrb
inc
xor
movb
cmpb
lods
and
add
and
and
sbb
push
mov
mov
inc
add
jne
mov
dec
xor
jl
add
nop
pop
cld
out
daa
in
add
sub
pop
mov
dec
es
mov
call
xchg
push
jns
xchg
push
jae
xor
fisttpl
push
cmpsl
add
and
jmp
add
jae
jo
add
shr
add
lea
sub
mov
cli
enter
mov
or
enter
pop
fwait
cmpsb
add
and
int3
pop
pop
add
or
lods
adc
out
adc
mov
mov
jle
sub
mov
pop
iret
add
addr16
rcrb
insl
push
fidivrl
mov
stc
pop
push
add
mov
add
adc
aad
cld
insb
and
repz
jbe
cmp
jb
repnz
mov
inc
and
std
pop
jo
push
bound
vpsrad
inc
imul
mov
mov
or
mov
xchg
mov
cmp
jae
jns
xchg
ljmp
orb
add
and
xor
mov
add
add
jmp
orl
and
mov
inc
ljmp
jno
cmp
mov
add
jmp
into
mov
cmpb
loop
mov
jmp
sbb
js
add
mov
in
pop
push
or
frstor
or
push
lock
push
adc
loopne
cmp
push
ret
cmc
add
shrb
roll
or
loopne
and
jnp
add
adc
insl
into
add
dec
push
jecxz
cmp
add
jb
push
inc
adc
std
subl
int
and
cld
insb
mov
xchg
stc
inc
test
pushf
jns
pusha
les
inc
jae
fwait
add
cmp
call
xchg
movsb
leave
jmp
dec
aad
rolb
push
xor
jl
icebp
pop
ret
push
sub
add
jp
inc
xor
add
sbb
add
clc
adc
aam
push
adc
add
push
clc
add
aam
xor
add
inc
jg
shrb
xor
repnz
pop
movsl
shlb
or
jbe
das
cmp
xchg
mov
xor
fs
jmp
enter
push
add
mov
lret
adc
cmpsb
adc
jbe
data16
shll
sub
je,pt
add
jb
pushf
jge
xchg
in
sarb
ja
cmp
sbb
fcompl
adcb
push
sbb
sbb
or
add
aas
jne
sub
cvtpi2ps
jl
lds
cmpb
repnz
dec
or
mov
rorb
add
shrb
cmp
jecxz
adc
jb
call
mov
lcall
add
mov
jns
add
pop
fildll
mov
cld
mov
pop
aam
imul
sahf
cmpb
sbb
dec
push
push
add
push
inc
push
mov
mov
mov
mov
stc
dec
add
lcall
cmp
insb
cmp
clc
mov
cmpsb
int
fstps
pusha
xchg
and
cmp
imul
cld
les
je
inc
lret
movl
cmpsb
lea
divl
cmp
sub
popf
xchg
push
ds
in
test
cmp
nop
pop
popl
stos
lds
push
jmp
lock
push
xchg
cmp
ds
stos
xlat
xchg
add
push
sbb
or
and
je
pop
mov
sbb
repz
adc
xor
push
sub
mov
pop
sub
movsl
xor
icebp
or
add
add
test
andb
jle
add
push
in
sub
push
jge
add
bound
cmp
into
pop
lret
inc
test
test
sahf
hlt
in
pop
jns
add
cmp
arpl
jl
add
jge
lods
lds
or
push
push
and
mov
pusha
aam
push
loopne
add
sub
push
mov
lock
add
outsl
ja
mov
sub
and
and
xor
sbb
icebp
dec
push
push
jp
sbb
and
or
jg
sub
repnz
xchg
sbb
dec
movsl
cmp
dec
add
cs
adc
xor
add
add
pusha
ret
add
add
test
pop
mov
xchg
call
jmp
jecxz
push
mov
push
cs
lock
xlat
stos
int
add
jmp
mov
cmp
ds
mov
jmp
dec
add
jne
adc
mov
in
out
addb
and
mov
mov
add
mov
mov
or
cmpb
jp
push
imul
test
push
adc
rorb
jmp
divb
lahf
pop
add
mov
jnp
popa
outsb
sub
jns
or
add
hlt
das
push
add
fwait
add
jnp
add
or
lods
add
jge
cmp
push
jg
inc
loope
add
pop
mov
mov
push
pop
adc
mov
call
push
fs
scas
popaw
and
sbb
pop
xor
push
push
cwtl
je
add
xchg
push
lock
or
rorl
or
or
sbbb
fsubr
sbb
sarl
arpl
rorb
fs
sbb
add
test
xor
mov
and
mov
add
pop
aaa
add
xor
pop
add
clc
repz
mov
inc
inc
xlat
pop
xor
inc
push
push
add
xor
or
les
jmp
shlb
add
addr16
clc
es
cmp
and
pop
loope
push
or
sbb
mov
push
jg
ret
je
call
andl
pop
and
in
inc
movsl
or
inc
add
das
and
push
pop
jo
ds
les
lea
test
in
mov
dec
sbb
add
add
lahf
je
add
call
cmp
sub
dec
rorl
out
add
nop
push
test
enter
cmp
cmp
and
push
add
jne
dec
add
dec
push
dec
lock
nop
or
mov
enter
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
dec
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
mov
mov
fiadds
push
mov
mov
add
scas
call
mov
bound
pop
mov
push
jmp
mov
sub
and
cwtl
movsb
cmp
add
add
pop
cld
hlt
pop
ljmp
bound
aad
js
jns
das
add
push
lahf
jae
subl
mov
outsl
or
inc
pop
or
adc
lds
dec
jo
add
jae
mov
push
mov
fmuls
dec
lock
jp
add
rorl
sbb
sub
orb
pop
xchg
mov
shlb
xor
add
ja
xor
xchg
cmp
add
jecxz
rorb
inc
add
xchg
adc
int
push
sub
and
cmpsl
add
mov
add
push
and
bswap
sub
sub
xor
xchg
test
jnp
cs
sbb
lods
push
add
out
xchg
sbb
sbb
ret
repz
mov
arpl
addr16
pop
cmp
loop
test
cmp
jmp
inc
adc
pop
cmp
sbb
stc
add
clc
lds
and
cmp
ja
pop
xorb
imul
mov
mov
and
movsl
add
add
enter
dec
cmp
dec
mov
sbb
fs
add
xchg
je
aaa
fwait
add
outsl
jb
add
je
rcrl
cli
jno
inc
fs
cld
cmp
cmp
sub
sbb
outsl
insl
jmp
adc
add
sbb
mov
jae
sub
adc
mov
xchg
add
jbe
dec
mov
cmp
jns
sbb
ds
push
cmp
and
cmpb
mov
jmp
sbb
xchg
sbb
push
add
sbb
push
sarb
mov
testl
lcall
loop
in
iret
or
jno
add
inc
push
frstor
dec
cld
les
dec
pop
xor
nop
push
inc
dec
mov
es
or
adc
mov
or
les
add
sub
fistps
mov
es
cmp
roll
add
mov
push
push
push
mov
sub
dec
add
add
and
mov
cmpb
jp
xchg
push
pop
push
cwtl
ret
int3
jne
or
sar
xchg
fldenv
jo
roll
inc
add
fnsave
fidivs
cmp
out
pop
add
cmpsl
adc
xor
and
mov
mov
inc
add
sti
sub
cmp
cmp
adc
jge
clc
enter
les
jmp
dec
sub
add
bound
push
roll
out
nop
inc
cwtl
add
loopne
out
rcr
xor
lock
xchg
fnstenv
fsubs
mov
pop
xor
pop
adc
repz
mov
imul
and
repz
lret
adc
xlat
ret
dec
add
mov
push
or
mov
test
jmp
data16
js
xchg
fmull
mov
add
outsl
and
out
aas
testb
push
mov
pop
add
lods
xorl
jg
xor
pop
mov
or
adc
jmp
mov
in
loop
adc
dec
push
arpl
add
mov
jge
sarb
xor
push
pop
inc
inc
repz
in
sub
sub
loop
pop
pop
lea
pop
in
lmsw
lret
pusha
xor
add
adc
cmp
mov
inc
add
nop
xchg
enter
pop
add
push
pop
repnz
jns
loope
dec
sbb
push
gs
add
push
fdivs
fdivrp
pop
call
jbe
pop
mov
inc
rclb
mov
push
test
dec
repnz
inc
scas
rcrb
repz
femms
jl
xor
lea
pop
sub
cltd
lock
sub
xor
xchg
adc
add
sub
inc
mov
je
jl
je
add
or
aam
addl
jmp
xchg
mov
in
add
lock
out
push
add
cli
push
jl
jl
cmove
xor
mov
add
or
add
clc
cmp
sbb
sub
mov
mov
inc
cmpsb
sbb
sub
sub
xor
arpl
mov
scas
add
inc
and
lret
insb
idivb
dec
adc
add
rcl
addb
xor
adc
mov
xchg
mov
stc
jnp
aam
push
jns
add
push
aad
add
lea
add
int3
add
push
pop
addb
cltd
pop
inc
or
dec
adc
dec
xchg
outsl
pusha
ds
mov
push
jp
jno
add
adc
add
je
js
js
cli
add
inc
dec
jne
popa
call
pop
mov
xor
je
sbb
xor
hlt
or
jmp
mov
clc
xor
mov
add
cltd
or
adc
stos
or
xor
push
sbb
pusha
pop
orb
sbb
xor
aad
add
mov
inc
add
sub
dec
xchg
lods
pushl
fnclex
add
ds
in
inc
or
in
add
stos
mov
or
add
or
or
cwtl
adc
movsb
adc
jge
xchg
push
pop
mov
test
lods
mov
call
dec
sub
sti
adc
cmp
sub
dec
inc
lret
adc
mov
pusha
or
repnz
jae
pop
push
sub
lock
dec
dec
cmpsl
add
or
pop
push
xchg
dec
enter
mov
insl
adc
adc
or
mov
jmp
push
mov
push
imull
adc
out
lods
popa
mov
dec
xchg
mov
adc
mov
add
lods
int
or
jmp
add
leave
adcb
inc
inc
add
dec
inc
jo
cmp
xchg
pop
ss
add
push
repz
add
adc
xchg
jae
add
xor
ss
pop
fcmovu
in
inc
packsswb
mov
xor
jns
xchg
add
pusha
out
ret
out
sub
pusha
jle
push
jb
imul
imul
outsb
lret
jg
aad
jmp
pusha
add
push
insb
pop
push
imul
xor
je
add
dec
inc
clc
jb
add
shlb
xor
xor
or
call
sub
fs
add
add
popf
add
push
lods
adcb
jno
inc
xor
rcl
mov
in
test
and
dec
lods
push
or
dec
jo
lock
out
and
add
jno
mov
add
repz
sub
sbb
or
adc
pop
inc
push
in
push
dec
adc
adc
push
mov
inc
mov
mov
insb
xor
mov
cmp
out
add
add
out
inc
push
jns
sbb
add
and
xor
add
inc
pop
jl
sub
es
jmp
aam
loopne
imul
or
pop
lock
xchg
xchg
mov
mov
fistl
fsts
add
int3
inc
lcall
js
push
inc
push
push
add
nop
mov
lret
jmp
js
jp
rolb
movb
pop
dec
add
cli
or
sub
cs
jmp
adc
aas
dec
daa
cmpb
dec
adc
add
dec
nop
test
loopne
dec
popl
pusha
sbb
jmp
lods
inc
nop
add
fs
sarb
in
fiadds
mov
xor
mov
psubw
add
inc
dec
inc
inc
pop
mov
mov
push
sub
cmp
jb
sbb
push
push
sub
mov
push
pslld
pop
in
das
xchg
cmp
xchg
xor
adc
and
xor
fsts
xor
mov
outsl
jne
in
and
jno
jmp
push
add
imul
sbb
sbb
sbb
mov
add
push
or
roll
adc
add
insl
gs
iret
sbb
jne
fdivrl
add
mov
and
add
inc
pop
in
pop
xchg
add
mov
add
test
ja
enter
outsl
add
xor
test
movl
test
or
pop
inc
cmc
bound
add
push
pop
push
push
push
push
add
inc
jae
xchg
ja
add
lds
xor
inc
fsubs
jle
or
ds
orb
xchg
cmpl
sub
fnstsw
cmp
cmp
pop
xchg
scas
add
jo
test
add
imul
push
cmp
xchg
and
arpl
jmp
and
call
pop
sub
popa
cmp
and
add
adc
jb
add
mov
or
or
push
add
std
rclb
xchg
mov
cmpsb
mov
aas
pop
mov
inc
js
in
call
loopne
shll
ss
mov
and
jmp
jae
lock
mull
xchg
add
lret
or
dec
in
xchg
fcomps
push
add
adcl
cs
out
adc
xor
cmpb
rcrl
fstl
push
mov
fiaddl
and
add
in
in
push
add
adcb
or
jo
add
out
sub
aad
lock
loope
inc
push
adc
loopne
add
push
cmpsl
dec
pop
and
hlt
inc
add
pop
push
cmpsb
test
push
add
enter
push
or
rolb
sbb
add
into
loopne
phsubsw
jo
push
dec
adc
dec
mul
jmp
adc
mov
mov
call
mov
inc
subl
out
or
imul
cmpsl
pmaxub
pop
pop
push
pop
pop
add
pop
mov
jbe
push
add
lods
dec
add
mov
loop
add
push
cld
jmp
add
pop
xchg
xor
jne
aas
cmpsl
add
mov
add
pop
or
add
gs
sbb
xor
adc
fsubrs
jns
cmp
push
into
adc
in
inc
call
push
lock
mov
jge
xor
cmp
mov
loopne
ss
mov
out
add
add
mov
xchg
sbb
jne
jb
xor
xchg
and
outsb
add
xchg
dec
les
jo
cmp
out
or
push
sarb
add
test
mov
adc
xorl
push
jge
pop
adc
in
mov
xchg
pop
test
or
and
movsl
push
out
add
dec
xchg
inc
and
xchg
call
enter
out
add
sbb
xchg
and
je
add
les
mov
lods
cmpsb
mov
or
enter
inc
adc
and
ja
add
add
inc
adc
and
ds
dec
xchg
pop
and
jo
jmp
jbe
add
repnz
enter
mov
in
pop
lock
adcb
dec
adc
dec
hlt
in
std
cmp
adcb
pop
cld
or
test
and
or
or
add
push
pop
dec
cmp
gs
mov
cmp
notb
adc
je
xchg
mov
add
cmp
nop
cmp
add
sub
sub
and
and
and
sbb
sub
jl
push
pop
subl
es
in
jbe
add
pop
cmp
and
add
xor
in
test
inc
jle
icebp
jp
fdivr
fiadds
or
and
jmp
sbb
add
cmp
lahf
fiadds
je
mov
adc
push
mov
add
ret
orl
imul
in
jno
jl
sub
inc
mov
ud2
add
push
pop
lods
movsl
sti
push
and
fs
add
test
jbe
mov
and
loop
jo
aam
and
ss
or
pusha
inc
mov
in
add
add
inc
or
sub
add
xchg
and
scas
sub
push
loop
push
add
mov
cmp
add
aad
scas
add
mov
aam
dec
mov
jle
outsb
jl
add
cld
dec
loopne
popa
add
mov
lret
add
sar
aam
pop
and
mov
rcll
sub
xlat
xchg
jmp
add
sub
add
add
repnz
inc
pop
xor
and
pop
adc
dec
push
cld
call
lds
clc
push
sub
and
nopl
xchg
enter
add
pop
fisttpl
add
adc
jecxz
rclb
sahf
and
addb
lods
gs
sbb
sub
inc
and
mov
jle
aas
rclb
mov
sub
add
mov
test
mov
add
movsb
adc
in
jg
shlb
push
pop
push
inc
pop
mov
pusha
xchg
movsl
insl
and
push
loope
je
pop
and
adc
pop
scas
add
and
daa
jge
cmp
inc
sbb
test
or
addl
mov
dec
sub
es
or
dec
jo
sbb
sub
add
mov
jae
or
add
push
xor
mov
mov
xor
das
sub
and
loope
clc
xor
mov
lcall
addb
or
and
add
adc
lods
aad
mov
push
or
pop
inc
loope
and
push
lds
cmp
push
fsubl
lock
fsubrs
movsl
fldl
dec
mov
dec
ficoms
ret
xor
add
pop
dec
mov
pop
in
xchg
clc
nop
stos
sahf
rclb
sub
cmp
jo
arpl
xorb
fwait
sub
inc
xor
pop
mov
and
loopne
daa
orb
inc
add
popf
push
iret
push
or
add
sbb
and
or
adc
inc
fs
sbb
sbb
add
sbb
push
jmp
sbb
mov
mov
sub
sub
add
adc
add
jae
mov
jno
adc
call
insb
nop
loopne
pushf
pop
psubw
hlt
pusha
test
dec
fnstcw
pop
jns
daa
or
jo
mov
lret
sub
test
add
push
mov
adc
add
cmpl
inc
add
jb
enter
daa
add
fnstenv
icebp
out
add
fwait
dec
push
add
add
movsb
cli
sub
push
das
push
cmp
aad
cmpsb
sbb
add
push
out
js
add
adc
add
mov
mov
lock
incb
xor
add
jnp
insb
cmc
sub
pop
and
cmp
je
xor
pop
jbe
adcl
nop
and
dec
add
or
pop
cmp
les
ja
mov
andb
stos
int3
loopne
or
or
jecxz
dec
sub
mov
std
sub
test
mov
unpckhps
inc
pop
shrb
mov
hlt
sbb
in
addr16
dec
ds
cmp
or
sar
sub
push
push
aad
fisubrs
mov
pop
cmp
lahf
rcr
add
pusha
cmp
or
addl
scas
mov
lock
add
pop
ja
jnp
inc
inc
cs
or
push
or
mov
add
add
lret
sarb
or
jbe
into
jmp
add
pop
nop
mov
shlb
sbb
int3
adc
ret
jns
adcb
shll
xchg
sub
ret
inc
daa
jmp
or
mov
add
push
stos
or
and
icebp
add
nop
insl
add
outsb
mov
add
jmp
dec
inc
sbb
addb
cli
add
xor
add
daa
sub
into
adc
add
mov
push
aas
inc
addr16
dec
sarb
and
xchg
ds
lcall
rolb
adc
jmp
das
daa
cmp
icebp
pop
adc
inc
add
cmp
cmc
adc
add
repnz
cmp
xchg
add
rorb
hlt
ljmp
pop
mov
cli
add
arpl
sub
je
or
pop
in
jecxz
in
jbe
push
mov
ljmp
dec
lds
scas
loop
xor
adc
or
clc
add
xchg
fcom
add
cld
sub
in
and
sub
enter
or
ljmp
sbb
add
mov
inc
jmp
lea
xor
or
test
dec
dec
jp
add
xor
add
popf
lds
pop
jmp
add
adcb
stos
sub
sbb
or
scas
andl
mov
add
aad
shrl
add
push
es
xlat
aad
bound
xor
leave
add
push
mov
add
mov
and
cmp
out
cmp
loop
cmp
push
pop
cmc
sahf
sbb
shl
mov
add
xor
add
add
add
sub
xchg
add
adc
adc
add
xor
mov
sbb
ljmp
cmp
xchg
and
cltd
cs
inc
sti
adc
shr
mov
push
daa
push
push
add
push
and
sub
pop
push
mov
test
clc
adc
cmpsb
jmp
call
dec
cmpsl
outsl
push
mov
hlt
adc
cmc
sbb
les
loopne
ljmp
adcl
test
ds
mov
mov
imul
pop
inc
lods
ss
push
and
lea
aam
popf
mov
cwtl
sbb
sbb
xchg
or
add
cmp
add
push
mov
push
jno
leave
jnp
add
popa
jo
subl
jne
ja
pop
push
movsl
fdivrl
add
das
adc
sbb
test
out
lret
and
out
outsb
add
lods
inc
or
mov
dec
pop
mov
add
js
cmp
hlt
rol
pop
mov
sahf
add
push
sbb
insb
mov
out
cmp
clc
outsb
add
xor
cmpsl
or
repnz
or
and
add
sahf
push
xor
cmp
jae
stc
push
mov
outsl
lods
call
cmp
push
push
in
dec
sbb
or
inc
push
jl
add
and
adc
sbb
cmp
jne
push
or
xchg
jmp
pop
lds
inc
add
and
das
add
mov
and
pop
sbb
repz
dec
sub
jns
insl
lsl
cmp
sub
daa
adc
and
cmp
adc
lods
dec
dec
pushf
loop
xor
andb
lods
add
lcall
mov
mov
sbb
lock
rclb
add
cmp
mov
inc
inc
popl
xchg
cmp
cmp
xor
adc
mov
add
dec
out
mov
clc
mov
pavgb
jmp
add
add
shlb
pop
mov
mov
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
pop
adc
add
idiv
jnp
add
mov
add
fldenv
sbb
mov
sbb
lret
fcmovb
stc
xchg
and
fildll
mov
scas
add
jl
inc
pop
xor
sub
and
scas
jne
sbb
mov
and
add
shlb
sbb
xor
add
or
push
in
cld
lods
xor
lret
pop
lcall
sbb
and
das
add
push
jle
pop
or
flds
lds
ja
mov
xchg
or
jo
push
add
push
aad
movd
adc
jge
lock
xlat
daa
add
hlt
mov
out
add
xchg
adc
inc
and
xor
mov
jnp
jo
call
pop
andl
loop
test
lret
lea
sbb
mov
lahf
js
xor
lcall
xchg
adc
pushaw
add
mov
push
fmul
into
nop
ds
js
loopne
add
or
add
add
xlat
push
jne
adc
inc
sbb
cmp
daa
clts
and
fidivrs
add
xlat
sarl
push
idiv
rolb
add
scas
sub
cmp
test
es
ss
add
rolb
sub
ret
jno
pop
xlat
sbb
shrb
test
and
adc
loope
xchg
lods
mov
test
aaa
popa
dec
push
clc
cmp
stos
push
or
ret
rolb
les
cmp
xchg
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
inc
inc
jp
fists
in
mov
xorl
pushf
xor
cmp
push
nop
fs
xchg
pop
movsb
arpl
jo
icebp
mull
in
add
addr16
lods
and
nop
sub
andb
mov
push
je
adc
and
in
fildl
scas
pop
dec
js
ss
cld
cwtl
adc
add
inc
add
or
enter
cmpsl
aad
pop
fdivrs
pop
xchg
push
aas
and
fwait
sarb
fiadds
add
pop
sbb
cmpb
add
pop
adc
add
movsb
les
add
fnstsw
or
sub
subb
pop
fs
jno
and
adc
ficomps
aas
jmp
shl
cmp
cmpsl
gs
test
mov
pop
dec
shlb
push
test
inc
hlt
ds
loop
add
mov
and
mov
sub
sbb
in
jae
jle
mov
inc
js
push
sub
es
cmpb
sbb
adc
cmp
inc
push
je
faddl
mov
jns
or
sub
sbb
push
pop
je
jmp
jne
and
bnd
add
push
adc
dec
inc
push
add
push
jae
pop
and
imul
xchg
pop
xchg
mov
or
cmp
fidivrl
jns
in
add
sbb
nop
dec
incb
loop
pop
xor
jne
clc
call
and
adc
insl
or
sbb
sub
cmp
lock
xchg
fisttpll
mov
cmp
ret
fistl
stc
pop
or
ds
inc
jl
adc
inc
cmp
mov
clc
sub
dec
testl
cmp
daa
cmp
pop
out
or
inc
sub
lret
or
add
dec
dec
and
dec
jbe
add
and
icebp
add
or
or
sub
ret
jmp
cmp
add
dec
pop
fisttpll
add
hlt
sti
imul
xchg
or
xlat
jecxz
add
lret
adc
xorb
int3
insl
cltd
add
cwtl
jge
add
cmp
inc
in
inc
ret
cwtl
aam
sub
cmpsb
sbb
inc
es
ret
mov
imul
mov
add
jmp
hlt
paddb
sahf
mov
add
repz
mov
push
add
fadds
mov
enter
xchg
cli
adc
nop
and
pop
jne
push
sbb
jge
add
sub
xor
add
nop
insb
popa
imul
push
cmpl
cmp
push
xor
hlt
inc
data16
fildl
lret
inc
call
jo
addr16
add
push
dec
in
je
add
push
and
jnp
roll
loope
cmp
test
add
adc
mov
pop
jbe
adc
sub
aaa
xlat
mov
jecxz
leave
rolb
push
mov
imul
loop
cmp
xchg
subb
or
xchg
add
push
out
ffreep
dec
sub
jne
cli
inc
cld
cmp
cmp
stos
add
pusha
adc
add
adc
clc
or
ss
or
addr16
xor
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
or
add
call
mov
adc
jecxz
out
mov
pop
pushf
popf
push
add
mov
dec
add
lcall
shrl
call
push
cmp
test
jl
add
mov
cwtl
popf
add
insl
mov
add
jo
push
jb
and
pushf
sbb
push
mov
mov
idiv
mov
cmp
mov
sub
or
inc
sbb
adc
and
sub
push
pop
xor
ljmp
lea
test
cmpl
add
dec
mov
lret
sbb
xchg
pop
push
orl
push
lea
addb
mov
dec
xor
les
xchg
lods
sub
lds
pop
pop
leave
add
cld
lock
add
shrb
sub
lret
mov
mov
jge
enter
rorb
mov
push
add
stos
test
push
mov
pop
and
add
inc
pusha
lahf
pop
cltd
sub
mov
add
xor
and
mov
mov
fisubrl
add
imul
test
pushf
and
les
xor
push
in
inc
sarb
xor
lds
mov
add
rolb
mov
push
xchg
jns
pop
cmpsl
scas
dec
jo
pop
xchg
fisubrs
lock
add
dec
into
and
ds
sbb
jmp
pop
stc
enter
shr
mov
sub
movsb
cmp
and
sub
lds
or
loopne
xchg
enter
add
xlat
paddsb
hlt
shl
add
mov
or
ret
inc
push
rcl
add
clc
add
cmp
ja
add
idivb
sbb
lock
mov
call
sub
push
lahf
jle
hlt
adc
imul
jnp
inc
or
aas
stos
mov
imul
repnz
or
mov
xchg
adc
or
movsl
push
push
gs
test
add
inc
add
jl
mov
loop
enter
outsb
and
data16
jb
xchg
add
clc
bound
sbb
repnz
dec
xor
jge
jmp
inc
mov
mov
dec
cli
faddl
and
scas
adc
sar
enter
mov
cld
adc
mov
inc
sti
mov
add
mov
mov
jnp
hlt
les
add
dec
test
ss
nop
movsb
repnz
adc
and
inc
pushf
add
in
call
pop
xor
push
lock
insb
push
or
sub
mov
inc
mov
inc
pop
pop
pop
pop
sub
lcall
and
pop
add
fs
adc
bound
push
cmp
sub
push
pop
loop
test
jne
sub
daa
add
push
mov
push
call
add
or
add
aas
mov
lock
push
mov
dec
jns
mov
cld
add
jae
add
movzbl
add
push
add
xchg
scas
add
xchg
aam
mov
call
push
dec
insl
xor
shrb
or
add
inc
inc
cmp
cmp
subb
aas
ds
add
sub
aam
jmp
cmp
cs
add
js
call
push
xchg
lock
cmp
dec
das
mov
out
js
jno
add
or
repnz
dec
mov
add
xchg
inc
ss
adc
mov
jnp
or
adc
add
add
jg
mov
and
inc
in
add
xor
mov
pop
mov
outsl
mov
add
or
inc
add
xor
mov
aas
and
gs
sbb
jno
jg
imul
or
int3
and
pop
xchg
rolb
add
add
aaa
push
mov
sbb
and
add
adc
xchg
mov
test
aaa
nop
add
mov
repz
test
or
js
add
and
or
addb
or
xchg
enter
int3
xchg
inc
shlb
mov
add
cs
aam
filds
mov
xchg
xchg
clc
dec
push
stos
add
cmp
add
call
lock
or
xchg
or
xchg
les
inc
sub
movsb
mov
add
sub
xor
push
add
push
in
push
jmp
jle
ja
dec
mov
cmp
push
jbe
jo
in
cmp
add
pop
rorb
cltd
adc
cmp
push
sub
mov
ds
and
hlt
push
adc
mov
jns
dec
test
push
in
fimull
xchg
movsb
mov
dec
or
aaa
or
cmp
pushw
inc
imul
add
jl
clc
in
movsl
mov
pusha
cmp
lahf
inc
ret
xor
xchg
adc
inc
mov
js
loopne
add
pop
jle
mov
nop
xchg
mov
rclb
push
cs
cmp
test
neg
add
xchg
push
pop
and
add
fsts
mov
add
push
inc
mov
sub
sub
sbb
jns
sarb
add
cmp
mov
subb
xor
xor
inc
jo
insb
imul
outsl
fs
sub
push
cwtl
or
rolb
dec
jge
add
jmp
inc
sbb
adc
shlb
pusha
inc
sub
mov
push
dec
cmp
sub
mov
xchg
push
jge
xchg
stos
arpl
dec
loopne
xor
jge
in
arpl
inc
sub
pop
mov
data16
lret
popa
add
dec
and
frstor
cmp
ss
loopne
enter
out
dec
add
nop
incb
pop
gs
push
mov
dec
inc
cmpsl
pop
jns
ret
dec
adc
mov
add
mov
sub
je
or
ss
and
jb
addr16
cmp
xchg
insl
sub
gs
adc
and
cmp
add
gs
push
add
addr16
jnp
adc
add
clc
test
dec
test
mov
cmp
sub
and
add
mov
adc
enter
and
adc
and
and
inc
movsl
inc
cmpb
dec
pop
testb
inc
lret
subb
push
push
fs
and
ja
jae
jo
es
sbb
jl
sub
stc
adc
pop
imul
jg
sub
jnp
sbb
push
xchg
adc
mov
loope
cmc
lock
dec
sub
nop
jle
les
and
xchg
ljmp
lea
add
enter
fcomps
stos
cwtl
icebp
jne
add
daa
push
xchg
push
es
add
enter
ret
std
hlt
sub
add
push
sbb
sbb
les
lahf
or
call
mov
iret
cli
add
je
or
inc
cmpsb
cmpl
dec
jne
add
stc
mov
jg
jmp
andl
adc
das
dec
rolb
test
pop
adc
add
push
inc
cmpb
nopl
pop
xor
std
filds
dec
ss
mov
cmp
sub
add
mov
push
adc
xchg
adc
outsb
push
pop
mov
sar
add
add
push
pop
das
mov
outsl
stos
adc
add
outsl
cmpsb
or
leave
pop
add
faddl
flds
xor
mov
push
mov
lret
and
mov
inc
mov
inc
mov
shlb
dec
out
test
enter
into
movsb
xor
adc
mov
inc
mov
adc
add
aas
cmp
cmpb
pop
or
test
or
lock
es
scas
inc
adc
mov
call
sbb
add
jmp
stc
out
push
adc
cli
shrb
cmpsl
push
xchg
add
mov
inc
cwtl
xchg
out
add
std
mov
add
mov
inc
xor
ret
mov
mov
stos
insb
lds
mov
xor
shr
inc
and
inc
add
popa
outsb
daa
je
insb
outsl
frstor
or
movsl
sbbb
ret
add
das
push
or
sahf
test
add
adc
mov
push
lea
incl
adc
orl
cli
or
jg
js
add
loope
push
call
xor
in
inc
sbb
adc
adc
idivb
dec
xchg
add
add
cwtl
lods
add
and
push
mov
inc
aaa
inc
xchg
daa
and
inc
adc
dec
dec
mov
aad
lret
pop
out
cld
add
add
and
push
jae
xor
inc
nop
jl
xchg
sbb
subl
in
jbe
adc
xchg
shlb
inc
and
inc
pop
enter
das
dec
cld
xchg
add
jne
jmp
add
or
cmp
adc
push
push
inc
adc
pop
rorb
jb
mov
lds
pop
cli
imul
jno
jmp
pop
push
fwait
or
into
cli
pop
cld
push
add
and
and
jecxz
pmulhuw
cmp
imul
out
sbb
pop
add
sbb
dec
cld
inc
enter
das
pop
mov
test
jmp
mov
pop
inc
das
incl
xor
aas
add
inc
xchg
xchg
aad
dec
mov
or
ja
cltd
add
loop
incl
inc
mov
inc
push
add
cld
cli
enter
mov
inc
lahf
hlt
jnp
cli
adc
dec
mov
inc
subl
popa
dec
lea
aas
xchg
popl
out
ret
mov
notb
xchg
or
inc
insb
add
movb
aad
add
jae
loopne
les
push
ret
xchg
adc
add
pushf
xor
cmp
or
lea
icebp
add
and
xor
push
fbstp
in
fldl
sub
adc
mov
pop
and
lret
lods
popf
stc
stos
str
cld
cmpsl
shl
loope
push
jp
cmc
mov
xchg
pop
mov
jmp
pop
fsubrl
pusha
ja
stos
add
push
push
aam
ds
inc
mov
rclb
aas
sti
push
jmp
and
mov
add
lds
movb
lods
and
push
pop
adc
xlat
out
and
stos
lret
sti
push
int3
and
out
and
daa
aas
xor
iret
orb
jae
inc
test
sub
mov
femms
outsl
pop
aam
mov
add
ljmp
add
jne
cli
xchg
cmpl
mov
in
test
add
cmpsb
into
sub
inc
movsl
punpckhwd
mov
fsub
push
test
and
inc
repnz
cwtl
add
lock
ds
push
cmc
jnp
and
rcr
lahf
int3
pop
stos
add
jl
cmp
enter
cmpsl
mov
add
pop
or
add
push
gs
loop
sub
fisttpl
mov
xchg
in
add
add
out
mov
mov
cmc
sbb
bswap
dec
ljmp
in
push
mov
push
stos
icebp
loopne
and
es
inc
xor
sbb
add
add
pop
mov
and
pop
and
cltd
add
mov
daa
pusha
push
add
fisttpl
mov
jae
adc
out
sub
mov
ss
dec
add
in
test
cmp
sbb
movsl
jge
xchg
inc
push
loope
add
ds
popf
call
into
cltd
xor
pop
add
scas
inc
inc
test
out
mov
movsl
inc
ret
insl
push
sbb
jmp
jne
mov
push
sub
dec
mov
repz
dec
or
testb
out
xor
and
imul
mov
xor
sbb
adc
cmp
pop
jmp
lahf
cmpsl
pop
mov
sahf
inc
icebp
pop
mov
nop
xchg
pop
push
jb
cmpsb
push
and
pop
inc
xorl
sub
sub
in
ret
add
repnz
push
sbbb
dec
xchg
add
cmp
mov
mov
data16
in
pop
adc
aad
cli
push
test
cmp
add
mov
mov
adc
inc
add
mov
loopne
mov
into
adc
mov
lods
sub
adc
add
bound
filds
pop
adc
mov
in
in
loopne
pushf
push
xor
leave
push
adc
sub
int
insl
test
lahf
push
add
and
pop
xchg
movsb
jbe
cs
or
mov
push
add
add
jb
movsb
pop
jbe
test
push
lret
pop
test
inc
ret
add
das
inc
les
lock
pop
inc
mov
pop
loopne
ret
add
mov
shlb
pop
shl
mov
sub
add
lea
pop
mov
xchg
enter
xor
mov
jnp
addb
add
add
fsubr
mov
ja
mov
inc
pop
and
rcrb
into
stos
dec
fstl
test
popa
push
push
add
mov
addb
mov
imul
movsl
add
sub
or
je
push
jbe
mov
add
bound
inc
and
mov
xchg
add
test
loopne
adc
add
rolb
rcrb
mov
add
or
stos
jbe
push
orl
and
test
sbb
or
mov
ficoml
sbb
clc
ljmp
or
add
dec
test
hlt
ja
sti
add
dec
ret
adc
sbb
sub
mov
push
rcrb
movsb
push
add
jnp
mov
cmpsl
cmpl
dec
or
cld
test
push
push
sti
insb
adc
push
add
ja
jne
cmp
rclb
rol
jbe
add
add
sub
pop
ret
cmc
xchg
cmc
icebp
iret
les
mov
mov
out
or
loopne
cwtl
xor
in
pop
or
ret
loopne
add
sbb
add
mov
aad
add
clc
lock
pop
lock
cmp
push
fcoml
jge
pop
add
add
dec
add
ret
adc
call
add
mov
xor
jmp
sub
push
dec
in
add
rcrl
cmp
adc
clc
add
sub
pusha
add
out
push
push
mov
adc
cmpsb
ljmp
jne
add
xor
xor
pop
xor
jne
fisttps
add
shll
jns
push
push
add
cmp
nop
push
xchg
repnz
add
dec
adc
add
adc
mov
repnz
pop
cmp
icebp
outsb
ret
or
jb
jo
fidivrs
lret
xor
or
fistl
jecxz
add
int3
repnz
sbb
fdivs
adc
jno
fldt
dec
xchg
add
testl
pop
cwtl
dec
pop
push
mov
nop
add
sbb
movb
lds
mov
jmp
pop
int
lods
xchg
js
mov
push
sub
add
jo
hlt
add
bound
add
inc
xchg
mov
dec
in
add
sbb
cmp
ja
dec
and
lret
add
roll
sub
xchg
je
dec
fwait
es
sbb
ret
jb
push
pop
dec
jp
add
push
and
clc
fs
out
add
or
push
add
lret
faddp
lods
dec
clc
add
das
mov
adc
ret
loopne
add
add
cwtl
data16
inc
add
or
sbb
dec
and
dec
inc
les
cmpsl
add
mov
addl
push
rcl
mov
imul
add
jmp
xchg
sub
fiaddl
cltd
sbb
and
pop
sub
pop
lock
mov
pop
jp
push
sbb
je
xor
add
inc
in
mov
jbe
nop
movsl
add
mov
lods
pop
test
and
mov
jle
add
mov
icebp
je
add
lcall
dec
mov
scas
and
pop
aaa
xchg
call
mov
mov
cmp
add
inc
jo
shll
out
aas
add
data16
jl,pt
subb
addr16
test
daa
dec
out
pop
mov
pop
and
dec
pop
shrb
or
sarl
cmpsl
stc
push
cli
inc
jle
add
jae
inc
lods
insl
mov
popa
pushf
adc
dec
fs
test
decl
sarb
add
ljmp
pop
sbb
add
enter
loopne
pusha
pop
subb
clc
stos
add
push
adc
push
repnz
adc
push
bswap
adc
mov
mov
jb
je
or
addb
or
add
xchg
pop
adcl
mov
out
testl
in
inc
cmp
add
xlat
dec
cmp
icebp
jbe
add
add
dec
arpl
xchg
xor
mov
test
pop
ss
sub
jge
push
test
and
add
or
mov
gs
mov
xor
into
add
rolb
jg
cld
add
insb
add
mov
mov
int3
mov
or
out
movsb
push
add
je
or
cmp
pop
mov
xchg
adc
adc
adc
test
jbe
rcr
dec
ja
out
call
rcrb
sbb
mov
mov
push
add
and
xchg
add
xchg
xchg
jno
dec
push
sbb
jmp
int3
sbb
cmp
adc
cltd
insb
and
sbb
add
sbb
sub
neg
sbb
add
cmp
add
icebp
xor
xor
das
int3
aad
adc
lock
stos
lea
add
or
ljmp
xchg
jl
add
daa
inc
push
ds
subb
add
call
rclb
xor
lea
sub
push
dec
push
fnstsw
add
movsb
jle
push
jmp
pop
sbb
out
shlb
mov
or
inc
pop
ja
cmp
mov
into
add
lret
cmpsb
add
test
call
pop
enter
add
or
push
xchg
mov
rolb
or
add
xor
cmp
adc
clc
cmp
sbb
call
cli
and
data16
jne
push
xlat
dec
lret
inc
pusha
and
cmp
add
jo
dec
inc
pop
push
pop
push
mov
mov
push
add
rorb
sub
lcall
adc
mov
mov
js
fsubrl
xchg
jmp
adc
lret
push
pop
cwtl
clc
adc
add
xchg
daa
or
add
fwait
pusha
mov
fcompl
push
inc
add
pop
int
pop
push
xorb
fadds
not
sub
add
xlat
test
stos
dec
jo
jle
dec
dec
data16
xchg
in
inc
mov
pop
mov
movsl
cmpsl
loopne
add
stos
add
sti
btc
dec
dec
fdivl
mov
pop
int3
sbb
and
jmp
and
add
outsl
xor
push
call
pushl
pusha
rcrb
rcr
lea
mov
mov
add
mov
incl
imul
shlb
sbb
out
repz
popf
mov
lods
pop
orl
jo
add
xor
inc
pop
das
cmpb
bnd
jo
or
pop
pop
dec
push
cmp
or
add
jge
jp
push
mov
sbb
mov
jg
or
sahf
lock
xchg
add
push
int
xor
and
cli
cmp
addb
in
and
sahf
sbb
stos
sbb
or
dec
je
or
jae
cmp
cmp
sbb
pop
push
adc
dec
xchg
adc
cmpsb
add
subl
sar
bound
jo
lock
hlt
mov
add
mov
test
outsl
add
call
push
addb
pop
repz
jmp
mov
and
fisttpl
and
add
push
cmp
pop
and
pop
sbb
testl
rcrb
sub
mov
rorb
mov
mov
imul
jne
loope
add
pop
mov
pop
mov
xchg
add
jno
mov
push
pop
add
aad
movsb
cli
test
cmp
std
sbb
mov
dec
or
addr16
subb
and
dec
inc
adc
imul
sbb
or
jl
push
inc
sbb
leave
xchg
inc
cwtl
jns
pop
cltd
ret
pop
sbbb
imul
inc
inc
outsl
dec
jne
loopne
add
mov
mov
sbbb
sbb
push
in
add
mov
jmp
push
add
mov
enter
add
sub
lret
or
jge
dec
ret
add
add
rolb
mov
int3
add
lock
fdivl
aam
push
jne
out
sbb
fmuls
xchg
mov
in
rcr
jne
movb
stc
leave
les
mov
jmp
mov
adc
jo
cmp
test
mov
into
addl
mov
call
pop
int3
jmp
addl
or
pop
mov
adc
data16
or
fdivrs
add
cli
je
clc
pop
popa
aas
push
add
ficoml
mov
ret
pop
outsb
mov
mov
mov
add
cwtl
inc
jmp
cmp
je
pop
into
or
test
rorb
inc
add
mov
movsl
mov
cld
push
add
xor
inc
add
test
mov
push
add
add
xor
dec
inc
adc
jbe
addr16
add
mov
jge
nop
jle
add
mov
cmc
sbb
bound
add
pop
bnd
push
call
ljmp
add
lahf
lds
jg
adc
loop
notb
add
xchg
pop
push
pop
cmp
add
mov
cld
and
lret
adc
call
push
gs
stc
dec
popl
cmp
and
add
inc
bound
inc
rsqrtps
mov
popf
shlb
movsb
adc
jnp
add
movl
nop
add
add
push
jmp
andb
dec
or
inc
fwait
dec
lcall
nop
mov
or
adc
mov
fidivl
push
push
loope
cmp
in
cmp
xor
or
jb
out
sub
loopne
cmpb
dec
add
push
mov
and
push
add
ljmp
add
jecxz
mov
jo
cmp
movsl
pop
and
jno
test
xor
xchg
mov
in
movsl
pop
push
mov
bound
pop
rol
iret
pop
les
jno
sub
xchg
adc
xchg
cmp
loop
aam
negl
rorb
xorps
and
or
in
jmp
inc
jge
movsl
and
add
test
mov
adc
pop
cli
int3
adc
movsl
stos
and
lods
add
push
sbb
add
fiadds
jo
sar
push
aam
add
mov
and
lods
cld
jae
lret
loopne
xor
and
sarl
mov
leave
stos
xor
je
js
sbb
lock
pop
or
add
icebp
add
mov
push
std
push
xchg
ret
mov
pop
enter
push
sub
sbb
daa
push
sub
mov
and
xchg
cs
pop
lock
cmp
inc
sub
xorl
inc
push
call
imul
hlt
orb
add
stos
sub
cli
ffreep
mov
and
push
ja
adc
add
pop
pop
push
mov
add
push
je
push
in
cmp
jne
mov
mov
ds
aas
rcrl
jno
dec
inc
add
mov
push
mov
add
sbb
add
push
mov
add
mov
lods
and
push
mov
movsb
sahf
in
add
movsl
add
add
inc
sbb
add
inc
sbb
inc
cmp
add
je
add
add
aas
rorb
es
dec
push
dec
in
popf
adcb
in
sti
xrelease
adc
sbb
sub
mov
jb
add
stos
or
push
cld
xchg
add
push
lcall
add
ljmp
jle
out
add
jmp
ds
cmp
add
enter
dec
lock
add
sub
cmc
push
cs
add
lock
mov
ret
sbb
imul
jl
scas
push
int3
in
int
add
mov
hlt
mov
pop
fnsave
mov
pop
push
add
and
ljmp
cmp
sub
lret
fbld
mov
stos
pop
or
sub
dec
addr16
jnp
jne
add
shlb
cs
sub
je
in
std
in
scas
jbe
add
in
or
arpl
dec
neg
pop
cld
lds
in
dec
aas
push
cmc
xchg
dec
cli
add
xchg
mov
jge
dec
adc
mov
dec
mov
roll
cwtl
inc
sub
pop
lods
test
leave
push
sub
wrmsr
cmc
add
inc
mov
or
sarb
cli
add
addb
sub
lcall
mov
pop
inc
dec
hlt
add
bound
inc
iret
push
int3
test
out
sub
xchg
mov
fcompl
add
je
jecxz
pushf
ds
add
sub
cmc
or
adc
push
mov
add
cmp
mov
xor
xchg
rolb
ja
sbb
lock
jg
add
pop
lea
mov
mov
or
mov
mov
sbb
and
mov
mov
pop
hlt
sbb
xchg
add
enter
lods
lea
add
es
add
sbb
mov
mov
pushf
imul
add
adc
inc
mov
add
cs
sahf
test
pop
push
add
adc
out
push
push
fsubrl
icebp
in
add
dec
mov
jp
push
lea
mov
and
add
mov
inc
sub
cmp
popf
push
add
ret
int3
mov
pavgb
mov
inc
mov
sbb
mov
adc
mov
add
out
sti
push
pop
sar
or
popf
nop
adcl
ljmp
clc
rorb
mov
add
flds
add
ret
or
sbb
sahf
fst
mov
add
fsubrs
cmc
enter
push
lahf
mov
clc
inc
push
add
mov
add
xlat
js
add
hlt
or
add
add
inc
test
xor
mov
outsl
push
inc
cmp
inc
cld
ficomps
mov
bound
add
xor
mov
or
or
jg
inc
rdtsc
and
push
sub
testb
psubusb
rorl
hlt
cmp
mov
ds
ja
ret
subl
push
mov
and
mov
cmp
pop
dec
pop
add
add
stc
mov
popa
add
inc
popl
sub
dec
sub
insb
jo
cli
testl
add
dec
addb
sbb
fwait
lock
add
dec
add
cmpsl
testl
sub
call
mov
stos
and
xchg
mov
lock
sub
notl
rolb
sub
add
enter
js
xchg
add
push
fs
lcall
movsb
mov
cmpsb
pop
mov
sub
jmp
lea
mov
pop
add
jae
cmpb
sub
push
jecxz
xadd
and
sbb
loopne
xchg
jne
or
add
sub
cmpsb
add
lcall
add
daa
sbb
hlt
jae
out
lahf
pop
shrb
add
call
loop
add
sbb
int3
add
bound
jae
icebp
jo
inc
sbbb
cmp
and
test
mov
inc
and
add
pop
dec
xorb
cmp
js
jbe
sbb
jne
add
cmpw
or
and
addl
or
add
and
push
sub
push
ds
imul
pop
add
pop
and
xchg
mov
rorb
orb
icebp
nop
cmp
shrb
or
mov
mov
inc
add
arpl
into
call
es
stos
inc
je
pop
cmp
push
jg
sbb
mov
push
icebp
fdivrl
add
pop
jae
lea
je
roll
jmp
jb
in
add
adc
dec
or
mov
les
cmp
js
add
and
movsb
out
push
js
or
mov
sti
leave
jbe
jp
lret
lock
inc
mov
add
inc
xor
add
sbb
add
rolb
and
xchg
test
push
add
lret
shll
xor
add
iret
push
push
or
mov
add
out
mov
mov
ja
pushf
push
inc
mov
add
rorl
jle
xor
cs
rolb
jne
push
mov
add
add
xchg
int3
mov
es
push
scas
les
test
mov
cld
enter
add
dec
inc
js
sub
rclb
in
dec
add
shl
aas
orl
mov
fs
out
xor
es
jne
xor
mov
fcomp
add
mov
add
jmp
das
mov
add
jne
mov
pop
and
add
addb
xchg
fsts
add
out
dec
xorl
adc
stc
fadds
dec
pop
push
push
sarb
test
or
cld
lds
mov
fxch
sub
hlt
jp
jae
nop
mov
mov
stc
fidivs
addb
adc
push
mov
sbb
push
into
add
lcall
add
in
cmc
xor
or
add
xor
sub
or
sbbl
sub
mov
pop
test
loopne
scas
shl
push
add
inc
or
aam
leave
add
adc
test
sub
insl
xchg
clc
push
inc
adc
add
movb
lea
ds
lods
mov
xchg
push
push
frndint
sub
fisubrl
mov
mov
xchg
ljmp
mov
scas
fisubrl
das
loopne
add
cs
call
arpl
loopne
faddl
or
cli
push
jle
cmc
xchg
sti
lahf
add
es
call
mov
sti
ljmp
vcvtsi2sdl
add
xchg
xchg
add
cmc
xchg
inc
sbb
pop
or
das
mov
and
or
dec
mov
add
xchg
push
mov
add
sub
pop
lret
repz
nop
inc
outsl
and
das
mov
inc
out
ja
sub
in
add
or
add
inc
in
sbb
jo
jl
pop
scas
and
or
test
push
and
pop
pop
add
int
mov
imul
adc
fdivp
xchg
adc
subb
add
lods
and
fcmove
sbb
xchg
nop
pop
movsl
into
add
ds
jne
sbb
push
mov
dec
rclb
pop
mov
pop
lea
mov
js
stos
adc
jge
cmp
stc
lret
mov
push
rcrb
ss
sub
add
cmp
mov
pop
popf
loop
push
addr16
rcl
stc
in
stos
add
cmp
lds
lret
lock
adc
and
dec
add
lahf
fnstcw
aas
out
into
inc
adc
jmp
and
dec
les
add
pop
adcl
sub
add
adc
jmp
push
loopne
cmpsl
add
add
mov
sub
or
push
sbb
pop
mov
and
xlat
addb
cmp
jne
adc
add
je,pn
movsl
fadds
cmp
add
mov
push
xor
ret
add
inc
nop
push
push
add
sbb
adc
or
lds
sub
arpl
push
fldcw
push
sbb
rcrb
xor
aad
in
mul
nop
add
mov
shll
inc
mov
inc
sbb
mov
sbb
in
repnz
mov
jbe
cmp
pop
lcall
hlt
adc
mov
rolb
gs
popf
fisubl
adc
ljmp
lcall
cmp
fsub
push
mov
movsl
add
test
add
sub
fbld
imul
cmpsb
mov
jno
lret
dec
lea
pop
xchg
add
mov
push
aam
mov
call
mov
clc
loopne
pop
inc
mov
mov
sub
repnz
in
testb
leave
test
add
clc
push
loop
test
add
into
or
add
push
ror
cld
pop
push
pop
adc
mov
dec
add
adc
out
mov
add
jne
push
xchg
dec
add
pop
mov
xlat
xchg
rcll
and
dec
sbb
xor
je
gs
leave
clc
out
xor
dec
loopne
sbb
push
push
mov
inc
lahf
loopne
fidivrl
dec
push
mov
cmpsl
push
add
test
jmp
xchg
sub
int3
test
add
xor
sbb
data16
xchg
sbb
rorb
pop
sbb
inc
mov
cwtl
aaa
inc
jns
dec
mov
mov
popf
lock
lea
shrl
fcmovnbe
mov
cmp
push
jae
pop
dec
add
jl
mov
add
xor
or
add
inc
gs
mov
outsl
dec
jae
and
ja
add
inc
js,pt
fldt
jae
xchg
mov
adc
or
pop
add
clc
cmp
stos
xor
aas
mov
dec
cmpsl
jns
push
cs
pop
jo
pop
mov
ror
jge
loop
js
mov
cmp
test
cmp
adc
jle
add
pop
inc
shl
aas
dec
add
je
and
jge
adc
mov
cmp
divb
cmp
lret
add
adcw
addr16
add
call
sbb
pop
xchg
cmp
les
cmpsb
pop
imul
out
push
add
cmpb
dec
dec
add
cmp
add
push
push
clc
ffreep
jae
mov
xchg
loop
add
and
push
inc
push
dec
add
push
xchg
sub
mov
add
xchg
cmpsl
test
jl
dec
push
test
jmp
lea
call
dec
add
repz
sbb
fsubs
sbb
cmp
add
ret
xchg
inc
push
fidivrl
addb
fisubrs
pop
in
jo
scas
pop
add
movsb
mov
sub
push
dec
in
dec
sub
sbbb
add
push
add
sbb
pop
push
lock
inc
clc
adc
loope
add
sbb
mov
xor
add
jp
das
add
pop
jl
pop
popa
and
cmp
daa
in
inc
stos
add
pop
add
sub
lock
push
scas
add
outsl
hlt
imul
fcoms
fucomp
jmp
daa
sub
jp
sbb
jne
cmp
pusha
ds
jo
xchg
add
and
push
hlt
add
dec
sub
loop
arpl
mov
call
add
pop
aas
sbb
add
testb
adc
pop
pop
dec
popa
out
xchg
add
fistpl
cmpsb
lock
xchg
add
xor
lods
mov
jb
jg
inc
les
sub
scas
push
pushf
test
xor
loopne
outsl
push
jp
add
add
lods
std
inc
call
mov
add
or
and
and
repnz
add
push
arpl
and
bound
xor
jne
rcrl
xlat
add
out
popa
cmp
icebp
cld
arpl
pop
cmp
add
leave
and
mov
dec
dec
sbb
push
out
rcrb
fs
lea
popf
addb
adc
xchg
jg
fidivrl
js
add
lock
popf
movsb
add
mov
cli
add
add
sub
adc
nop
mov
filds
mov
sub
jbe
push
mov
lods
insl
cmc
jg
mov
pop
lcallw
cli
xchg
rolb
xchg
cld
stos
push
xchg
mov
sbb
cmp
jmp
ds
cmpsb
adc
pop
mov
add
orb
add
fs
mov
or
sub
xchg
push
xor
mov
test
aaa
adc
inc
cmp
sbb
mov
and
sbb
lea
sbb
jle
movsl
cwtl
jno
add
enter
fldenv
loopne
test
cmp
lcall
adc
inc
rep
mov
cmp
mov
aad
jle
fdivrs
scas
inc
aas
pop
movl
cmp
out
sbb
push
lods
or
xlat
rol
sbb
or
leave
stos
in
sbb
and
xor
sbbl
test
je
pop
add
sub
pop
adc
leave
xchg
push
add
adc
inc
add
imul
xchg
xlat
arpl
in
add
in
or
jmp
add
push
adc
dec
pop
push
jmp
jge
pop
lods
inc
clc
add
mov
pop
and
mov
rol
add
iret
xorl
or
push
or
mov
pop
insb
mov
add
inc
xor
adc
push
cwtl
add
cmp
jne
movsb
bound
add
xor
add
iret
jmp
cmp
pop
in
and
push
sbb
xchg
add
xchg
insb
int3
xor
sub
dec
pop
aas
mov
ret
lret
loope
or
and
les
xchg
call
or
aas
sub
and
mov
loope
xchg
loopne
add
scas
add
pop
mov
sti
and
pop
dec
rolb
inc
xchg
stc
jmp
ss
mov
mov
test
add
call
mov
xchg
xchg
stos
popf
rclb
sbb
in
outsl
cmpb
sar
mov
insb
mov
push
inc
and
insl
in
and
inc
int3
test
jb
out
add
adc
mov
mov
dec
in
mov
aaa
out
sbb
xchg
and
mov
mov
cltd
test
es
add
jno
aad
mov
add
out
call
enter
out
and
add
xlat
in
dec
pop
fadds
mov
rcr
call
das
loopne
std
jne
add
mov
movb
cmpsb
out
inc
loopne
imul
std
xchg
mov
hlt
loop
add
pushf
loopne
sti
in
push
dec
lods
pop
adc
rolb
mov
pop
addb
dec
aaa
lods
push
out
aam
or
enter
and
test
jmp
sbb
adc
lods
add
fldcw
fiadds
clc
insb
mov
add
idiv
test
cmp
add
fisubs
les
push
std
ror
mov
add
scas
cwtl
pop
mov
sub
add
dec
push
add
add
or
pop
or
jle
mov
xchg
leave
addr16
push
out
test
ret
daa
dec
mov
mov
cmp
inc
pop
mov
pop
lea
push
xor
sub
cld
jo
add
mov
xchg
pusha
pop
push
loopne
add
rolb
cs
add
adc
scas
inc
lret
pop
lahf
push
pop
bound
popf
and
cmpsb
or
sbb
mov
xchg
jae
in
andb
test
aam
dec
add
sub
int3
pusha
and
cmpsb
daa
cli
add
movb
mov
insl
and
inc
push
add
iret
sub
add
inc
add
je
add
daa
mov
in
out
add
or
add
sbb
sbb
adc
imul
jmp
and
sbb
stos
or
sbb
rol
sbb
add
inc
sbb
push
adcb
add
xor
adc
sub
push
add
adc
fsubrl
or
cld
clc
inc
cmpb
call
aad
dec
jne
fnstcw
sub
repnz
add
call
xor
fcoml
leave
test
xor
into
push
jge
sti
mov
dec
cmp
add
xlat
mov
inc
jle
xchg
add
out
inc
mov
rol
xchg
xchg
adc
sahf
add
test
orl
scas
lock
fists
roll
add
leave
clc
push
adc
roll
xor
mull
mov
add
aaa
push
lock
std
cld
aad
int
aam
test
xlat
clc
mov
fdivrp
icebp
rol
jnp
dec
jb
xor
andl
clc
mov
incb
push
dec
insb
add
loope
inc
add
sti
sub
imul
inc
mov
add
adc
les
xor
sbb
inc
push
cmp
mov
das
sbb
push
divb
lret
or
jmp
hlt
fiaddl
ret
and
outsb
add
lods
dec
or
out
pushf
shlb
fsubr
out
popa
mov
and
add
pop
push
push
dec
imul
and
pusha
add
out
and
loop
cli
sbb
lcall
sbbb
push
jae
movsb
jnp
add
cmp
or
pushf
cwtl
sbb
push
lea
call
cmp
mov
pusha
movzbl
add
or
cmp
add
fnstenv
adc
or
dec
into
repz
adc
mov
add
jae
jo
ja
push
cmc
out
mov
daa
adc
mov
inc
inc
jecxz
cmp
mov
xchg
loop
mov
out
xor
xor
je
cmpl
insb
in
pop
enter
push
scas
add
orl
mov
enter
stc
add
jbe
hlt
push
xchg
add
je
jg
leave
fcoms
xchg
and
sbb
push
inc
scas
pop
inc
mov
dec
add
mov
adc
add
add
mov
fbld
jl
pop
nop
out
or
lods
les
leave
cs
adc
pushf
lods
sub
add
testl
lods
sbb
and
mov
and
ljmp
in
in
fmull
sahf
add
lods
clc
icebp
movsb
pop
push
and
adc
pushf
mov
mov
inc
mov
push
pop
xchg
push
or
push
push
jne,pn
mov
rcrb
enter
and
cltd
cld
fwait
add
add
and
sahf
add
or
test
cmp
test
jmp
je
inc
mov
or
inc
xchg
jo
sbb
int3
add
lock
add
inc
cwtl
sbb
or
mov
xor
pop
adc
fs
mov
nop
sbb
xor
call
xor
xor
xor
cmp
loope
ss
push
pusha
xor
mov
inc
pop
inc
pop
or
js
dec
mov
rcrb
add
add
add
ret
pop
fcomps
sbb
cwtl
in
push
test
test
and
inc
sub
jns
xchg
mov
add
adc
jg
ss
cmp
dec
adcl
mov
lds
push
cwtl
jnp
cmpsb
ret
aam
inc
xchg
dec
mov
jg
mov
adc
clc
std
add
aam
pusha
movsb
mov
arpl
test
push
cmpb
shl
mov
mov
mov
rol
or
xchg
push
adc
add
fs
dec
int3
add
and
add
popf
js
mov
push
inc
push
xor
or
add
jo
and
push
lahf
add
int3
adc
add
mov
push
lea
add
add
test
sbb
mov
cwtl
xchg
and
xor
dec
add
outsb
je
imul
outsl
pop
out
addl
loopne
xor
xchg
mov
xor
cmp
ljmp
xor
or
cli
setg
push
pushf
aam
jo
test
cld
mov
sbb
sbb
or
sbb
nop/reserved
std
shrb
add
adc
or
dec
push
pop
es
xchg
pusha
jecxz
addb
mov
lret
pop
mov
mov
shr
fsubr
loopne
call
jo
pop
or
adc
sbb
and
sub
xor
and
std
cld
jnp
push
jnp
jnp
add
jo
mov
adc
mov
add
add
inc
and
aam
call
xchg
or
and
arpl
xor
mov
and
adc
sbb
loop
xor
add
test
or
aad
pop
std
pop
pop
add
pop
pop
push
inc
in
add
inc
inc
dec
dec
rclb
bound
arpl
cmc
imul
add
jp
mov
and
xor
or
aas
mov
add
int3
lret
and
push
pop
xor
push
add
cltd
adc
pusha
loop
pop
and
dec
add
imul
psubsw
repnz
es
and
and
fsubl
clc
inc
mov
inc
cmp
pop
jo
dec
mov
or
scas
cld
xchg
pop
pop
inc
sub
mov
js
and
inc
lcall
jl
loopne
add
aas
das
cmp
imul
scas
add
adc
xchg
sbb
xchg
or
ss
mov
add
dec
or
cmc
push
add
add
daa
and
movsb
add
xchg
pushl
dec
or
rorb
pop
add
add
or
sbb
and
and
or
jmp
out
in
ljmp
sbb
xor
pusha
repnz
jo
rcl
add
cld
mov
adcl
fcomps
bswap
adc
or
sbb
jo
in
xor
les
stc
test
cld
jb
add
push
jg
test
xor
pushf
dec
test
loop
inc
fadds
in
mov
adc
js
add
adc
inc
dec
push
xchg
add
pusha
hlt
sub
push
cwtl
stc
ss
addb
mov
or
pop
or
or
push
xor
adc
pop
and
lods
mov
or
adc
dec
out
jnp
pop
clc
or
ss
xor
inc
fs
sub
add
les
fsubrl
jo
sbb
or
inc
mov
add
js
or
adc
aam
ss
mov
push
fcoml
xchg
xor
cmpsb
test
cmp
add
movsb
pop
jl
sbbl
mov
push
les
adc
xchg
xor
mov
or
cs
pop
inc
in
dec
add
popa
mov
mov
sub
aam
rolb
mov
cmp
shlb
xchg
push
int3
leave
repnz
add
enter
rorb
push
cmp
add
add
nop
rcll
xorb
xor
sub
jl
inc
xchg
test
cmp
fsubrs
ret
mov
movsb
mov
add
imul
or
pop
pop
test
rcrb
jl
xor
js
push
push
and
cmp
sbb
mov
mov
mov
loopne
lods
pop
sbb
pop
call
mov
lock
incl
test
dec
jo
xor
add
nop
mov
repz
lret
push
add
lock
cmp
inc
add
pushf
fcoms
cld
cmp
daa
adcb
xchg
sbb
nop
iret
add
dec
fadds
or
rolb
dec
in
xor
into
sub
pop
cmp
inc
push
xlat
adc
push
pushf
int3
ret
jno
hlt
cltd
mov
add
xor
adc
cwtl
xchg
add
leave
in
push
orb
jo
rcrb
rcr
pushf
jp
add
pop
sub
gs
push
shlb
testb
xor
pop
je
inc
add
cmc
add
fs
push
lahf
add
lods
adc
enter
repnz
cmovo
in
xchg
add
or
loope
call
and
ljmp
or
clc
jle
add
cwtl
and
in
int
cli
mov
jbe
repz
add
adc
add
push
in
sbb
dec
mov
and
xchg
mov
lcall
pop
faddl
cli
adc
cmp
cmp
push
std
mov
lret
pop
inc
sar
or
adc
sbb
es
sbb
or
outsb
adc
mov
lods
cmpsb
add
cmp
insb
clc
mov
add
push
sarb
adc
add
and
dec
aam
sub
or
sbb
addl
adc
xchg
xchg
mov
dec
shrb
jp
and
add
dec
push
xor
outsb
orb
sarb
mov
decb
inc
ljmp
and
dec
fs
jo
mov
mov
les
add
push
add
adc
imul
dec
scas
pop
or
in
xchg
dec
movsb
xchg
mov
scas
fdivp
mov
cmp
xor
xchg
push
mov
andl
cmpsb
enter
shl
addr16
and
in
fs
aaa
mov
ds
dec
push
mov
addl
inc
inc
cli
je
popf
sarb
cwtl
push
push
add
push
inc
mov
xor
jp
add
xchg
arpl
push
sti
add
lret
pop
jbe
pop
add
add
insl
daa
mov
xor
jmp
nop
add
xchg
outsl
packsswb
sbb
movsl
sbb
test
in
jo
push
add
push
or
mov
xor
or
jo,pn
sub
je
fidivrl
outsb
inc
push
add
arpl
mov
sbb
sbb
jb
or
inc
js
cmp
and
andb
in
out
movsl
mov
loop
outsl
dec
inc
xor
push
jb
fsubl
push
add
decb
popa
outsb
mov
movb
imul
push
aam
cmp
adcb
adc
hlt
insl
jecxz
xchg
lcall
pop
mov
cmp
mov
push
adc
add
jle
mov
aad
mov
andb
sbb
sub
cmpb
sbb
test
es
outsl
add
dec
data16
jecxz
addb
rcll
or
pop
sbb
push
cld
ljmp
fs
or
adc
jp
mov
insl
pop
push
imul
xchg
add
cmp
movsl
xor
adc
lret
int3
jns
nop
cmp
cmp
outsb
cmp
cmpsl
jmp
mov
dec
hlt
adc
dec
fildll
sbb
jle
cmp
add
pop
push
nop
xchg
rcll
dec
cmpsb
outsb
rcrb
mov
loope
add
dec
inc
insl
pshufw
mov
call
outsl
inc
sbb
out
jg
pop
and
sub
push
adc
xchg
adc
fcoms
and
out
test
push
inc
add
jbe
adc
cltd
stos
rolb
in
loope
add
aad
mov
dec
clc
adc
cli
and
inc
movsb
pusha
aam
clc
jne
cwtl
popl
ficoml
mov
jp
adc
ds
pushf
pop
or
sarb
aam
nop
ja
mov
cwtl
mov
pusha
jno
test
inc
shll
pop
add
cmc
xor
dec
jae
lret
push
pop
push
je
mov
add
repnz
repz
adc
add
or
add
push
dec
mov
push
gs
push
inc
add
sub
cmpsb
jb
xor
push
mov
add
xor
mov
scas
rcl
sahf
hlt
mov
mov
jbe
adc
jecxz
loop
inc
inc
fwait
test
xor
imul
arpl
inc
mov
lods
push
cmpsl
sbb
push
loopne
hlt
dec
sub
pop
inc
add
arpl
mov
rorb
sbb
inc
push
pop
out
jge
sbb
dec
mov
mov
dec
movsb
add
add
ds
repnz
bound
mov
pop
insb
mov
mov
add
and
dec
pop
lret
push
das
das
fs
shll
push
jecxz
push
jno
inc
xorb
mov
loop
add
push
lahf
or
cld
inc
adc
add
dec
movsb
cmpsb
pusha
ja
loopne
add
inc
cltd
mov
cs
cld
in
bound
imul
add
test
adc
and
inc
cmp
dec
sub
jo
aam
fwait
dec
pop
push
adc
mov
xchg
mov
lods
cmpsl
or
sub
movsl
or
cmp
pop
xor
add
fnstsw
dec
mov
inc
jne
push
inc
xor
pop
add
sbb
int
adc
lret
add
add
insb
pop
inc
add
push
sub
sub
adc
and
push
jns
or
add
lods
mov
push
mov
mov
jecxz
frstor
xor
jo
sbb
or
fimuls
pop
pop
or
mov
test
add
jo
movsl
add
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
incb
clc
push
xor
je
jbe
push
js
jp
jl
jle
mov
xor
popf
int
adc
inc
loopne
and
push
leave
ljmp
sbb
cmp
ret
push
aad
lahf
fistps
jmp
cmp
add
sbb
mov
scas
pop
and
setne
iret
mov
movsb
lahf
in
xor
pop
cmp
add
cmpsl
inc
push
push
fiaddl
movb
cmp
add
jg
lahf
fnstcw
jb
sbb
cmp
sbb
dec
lahf
sbb
push
jno
xchg
lahf
in
add
xchg
xchg
push
xchg
mov
adc
and
sub
jnp
xchg
icebp
scas
stc
mov
sti
addl
xchg
int3
or
pushf
xor
cmp
jge
pop
test
fwait
addr16
xchg
mov
out
out
ret
sbb
pop
push
xchg
decb
pop
dec
aas
jae
cmp
push
jle
sbb
add
xor
pop
sbb
push
mov
stc
xchg
add
or
sbb
addr16
jb
cmpsl
mov
xchg
cmp
cltd
cmp
mov
mov
leave
stos
shll
sbb
daa
jbe
js
dec
xorl
aas
mov
leave
add
push
xchg
aaa
mov
mov
sbb
add
mov
hlt
add
cmp
das
imul
cmp
mov
add
xchg
imul
roll
fsub
adc
cmp
test
orb
cmpsl
add
xor
xchg
rdtsc
push
enter
iret
je
mov
cmp
dec
jbe
js
jp
add
repnz
xor
add
pop
push
pop
adc
jae
orl
hlt
lahf
mov
mov
xor
inc
inc
addr16
mov
sbb
out
xchg
mov
cmp
cmp
lahf
jecxz
call
or
pop
add
mov
cmp
add
inc
push
push
add
xchg
push
inc
es
ds
adc
bnd
adcb
popf
loop
out
mov
leave
pop
or
pop
and
insl
cmp
mov
xlat
loope
jmp
add
cli
and
ficomps
xchg
add
cmp
cmp
roll
jb
je
in
pop
aas
lods
popf
les
xor
push
sbb
sbb
add
inc
xor
je
sbb
repz
test
xor
pusha
mov
inc
rcrl
packuswb
pause
leave
xchg
shlb
test
mov
mov
movsb
mov
mov
add
ss
xchg
push
mov
add
rorl
push
repz
leave
shrw
jbe
jle
imul
es
aaa
rcrb
dec
push
push
sarl
push
sar
cwtl
arpl
out
cwtl
icebp
cmp
adc
daa
call
lock
hlt
pop
clc
sbb
cld
push
jb
jp
sbbb
adcb
jb
pop
mov
mov
rorb
ljmp
cmp
add
adc
sbb
cmp
push
lahf
inc
and
push
cld
jno
jae
add
jb
aas
adcb
ret
mov
repz
sub
adc
dec
cli
dec
and
addr16
sub
int3
cld
inc
cmp
dec
pusha
jp
mov
cwtl
cli
jg
jb
jp
xlat
sbb
cmpl
add
sahf
and
sub
cmp
inc
in
sbb
addps
ds
cmp
nop
aas
cwtl
aas
mov
aas
mov
aas
sarb
fmuls
call
faddl
push
or
mov
cld
and
or
pop
push
inc
jl
push
xchg
mov
stos
sbb
out
popf
rcrb
add
mov
add
cmp
sbb
inc
add
cmpsl
xor
cmp
push
popf
pop
sbb
jo
js
adcb
stos
iret
mov
iret
loopne
clc
testl
and
sub
xor
pop
xor
cmp
cmp
inc
inc
inc
addr16
xchg
push
loopne
xor
mov
mov
sbb
mov
clc
lock
jb
or
or
add
jb
mov
pop
jp
jl
jle
jle
jle
jle
jle
add
xchg
mov
mov
rclb
cld
mov
mov
and
test
dec
hlt
push
jle
cld
pop
cmp
mov
insb
jbe
addr16
mov
test
mov
mov
sarl
enter
rolb
sub
xor
es
add
cmp
pop
cs
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
push
bnd
aas
les
imul
jle
jle
add
xor
jnp
rcrl
fldenv
loope
jmp
stc
xor
cld
fs
insb
shll
xlat
xchg
jl
and
loop
mov
movsb
ja
sar
aam
fdivr
fdivr
loopne
in
arpl
xorb
xchg
and
ret
jp
and
popf
aaa
popf
dec
sbb
js
jl
adcb
cmp
enter
aam
fadds
out
out
out
loopne
cmp
add
sub
xor
cmp
add
inc
repz
repnz
jmp
xorb
lahf
pushf
pop
mov
lahf
rcrb
lahf
lock
hlt
lahf
clc
cmp
test
adc
dec
or
cmp
popf
inc
shlb
insb
cmp
jb
je
jbe
gs
notl
mov
lods
xor
hlt
mov
mov
dec
or
add
adc
nop
nop
je
dec
push
das
and
xor
stc
test
cmpsb
xchg
sub
xor
in
aaa
loope
adc
adc
fstps
sbbb
icebp
and
sub
sub
inc
lret
out
xchg
jo
mov
lock
push
sbb
jb
sub
pop
mov
fidivrs
push
xchg
hlt
jo
push
cmp
add
cmp
cmp
enter
add
xchg
inc
mov
inc
sahf
jo
dec
add
push
cld
mov
cli
mov
jl
push
sbb
jge
xchg
pop
mov
add
cmp
dec
inc
push
xchg
pop
cmpsl
shrl
sbb
popa
jbe
js
ret
mov
subb
inc
popf
push
add
insb
xchg
jle
subb
cmp
insl
leave
inc
mov
mov
out
stc
sbb
add
daa
ds
insb
mov
sahf
imul
mov
bound
push
flds
dec
in
mov
dec
add
inc
dec
add
fs
mov
enter
movsl
subb
xor
popf
add
xchg
add
jns
add
out
mov
sarb
xchg
insb
sbb
cld
cmpl
and
pop
sub
add
xor
clc
cltd
add
mov
or
inc
pop
lret
stc
shl
call
out
ret
jle
add
clc
sbb
xor
rolb
cvtps2pd
arpl
pop
jne
jle
movsb
xchg
sbb
les
sub
cmp
orb
add
ret
add
cmp
iret
push
or
add
mov
mov
add
cmp
cmp
add
xchg
jnp
popf
out
pushf
xchg
jmp
loopne
push
leave
cmp
roll
gs
aam
sbbb
or
subb
hlt
jl
push
mov
inc
xchg
int3
mov
pop
fdivl
inc
inc
add
lock
out
ds
mov
or
rcrb
sbb
xchg
push
and
dec
aas
sarl
sub
add
insb
adc
outsb
mov
add
test
pop
aam
mov
and
int3
loopne
repnz
add
jb
in
adc
lret
sbb
out
leave
cmp
cmp
inc
in
dec
int
jb
pop
rclb
lahf
cmpb
add
lcall
popa
and
in
mov
loop
jns
scas
mov
xchg
movsb
sub
aam
cld
add
mov
inc
dec
fstl
xchg
and
push
or
dec
mov
in
push
add
pop
je
mov
adc
sub
test
add
push
addl
inc
and
out
fisttpl
aaa
cmp
mov
movsl
cmpsb
arpl
hlt
xchg
cmpb
js
ret
adc
loopne
in
push
mov
push
push
xor
push
iret
pop
pcmpgtw
addb
stos
iret
mov
mov
ret
and
jbe
add
jo
or
sbb
daa
aam
inc
out
cltd
and
mov
adc
xchg
jnp
add
sub
add
sbb
push
add
daa
aaa
imul
sbb
out
xor
outsb
add
cld
leave
pusha
cmp
cmp
cmp
addr16
jp
xor
jnp,pt
rcl
push
ja
test
add
in
call
clc
pop
inc
pop
rorb
sbb
faddl
add
shl
int
xor
into
push
jo,pn
sahf
add
sub
icebp
add
sti
mov
leave
dec
rorl
bound
loope
jmp
and
cld
jb
add
cmp
dec
cmp
mov
aam
cmp
je
lahf
cmpsb
es
inc
jo
lock
mov
fcompl
cmp
aaa
popf
dec
adc
dec
pushf
pusha
enter
mov
call
cmp
push
dec
outsb
xor
inc
loop
adcl
mov
jmp
and
xor
lcall
pop
or
mov
lret
pop
dec
xchg
xchg
sbb
repz
adc
jecxz
out
flds
mul
add
pop
or
push
sbb
ds
fwait
jne
inc
xchg
data16
add
cmp
add
adc
sbb
das
and
xor
js
add
cmp
cmp
ss
in
xchg
adc
jl
test
mov
mov
nop
cld
xchg
xchg
pop
adc
sarb
popf
lock
ds
iret
clc
and
fmull
cmp
add
inc
or
dec
xchg
rcrb
inc
js
dec
dec
or
push
loope
pop
cmp
pop
daa
test
cmpsb
add
dec
jmp
cs
ficoml
js
inc
cmc
or
movsb
call
dec
jmp
cmp
push
daa
and
mov
sahf
adc
xchg
bnd
rolb
pop
mov
daa
pop
xchg
jbe
push
pushf
shlb
bound
nop
add
or
hlt
push
add
mov
add
pop
imul
test
pop
dec
mov
js
add
in
add
cmp
in
call
jmp
setle
mov
test
cmp
dec
ljmp
pop
add
fwait
mov
push
rorl
xchg
repnz
add
add
test
mov
out
add
loopne
xor
mov
scas
inc
or
pop
jo
jbe
js
jp
add
add
and
test
popa
les
nop
pop
add
ds
sub
cld
push
xor
insb
dec
mov
or
xchg
loope
lock
nop
or
das
call
add
push
addr16
leave
mov
xchg
in
pushf
mov
test
mov
rorb
push
adc
mov
jl
dec
stc
cmp
add
adc
mov
inc
rorb
push
xchg
ficomps
jo
add
int3
dec
stc
cli
and
into
or
adc
and
imul
add
repz
repnz
sarb
in
mov
rcrl
xchg
in
mov
sub
add
cmp
adc
pop
pusha
hlt
cmp
mov
inc
data16
mov
aas
hlt
aam
xor
sbbl
clc
dec
push
push
arpl
pop
es
add
xor
popf
sti
pop
or
cwtl
add
or
add
bound
adc
cmp
add
mov
pop
test
pop
test
in
add
xor
cmp
push
fmuls
jle
mov
push
test
ss
roll
inc
flds
mov
pop
add
pop
in
lock
hlt
inc
xchg
mov
add
jp
jl
inc
jmp
sbbl
mov
add
ret
rorb
mov
dec
adc
sbb
xor
popf
and
mov
push
jp
push
jge
das
in
addl
jb
add
movsb
ret
cwtl
lods
rolb
push
lock
pop
bound
sub
out
xchg
xor
aam
cmp
add
fsubrp
popf
sub
ds
cmp
add
pop
dec
popa
lock
addl
inc
in
cmp
xchg
call
in
shrb
jmp
dec
sbb
sub
pop
sbb
sbb
add
cli
cmp
add
xor
jl
shll
add
mov
in
call
add
lcall
cmpsl
xchg
ret
and
in
inc
aam
pop
pop
add
xchg
xchg
cmpsl
xlat
cmp
in
not
push
or
inc
repz
add
stos
clc
pop
cwtl
sub
sub
push
rorb
and
and
js
jp
pop
pop
pop
ltr
xchg
sbb
iret
ret
xchg
adc
cmp
xchg
dec
jb
pusha
mov
add
pop
add
or
add
pop
xor
je
pop
add
jp
scas
and
fcmovu
sub
xor
mov
or
mov
jmp
pop
cli
sub
popf
jnp
pop
shlb
and
mov
fdivs
adcl
ror
mov
jecxz
int
add
and
sub
clc
sarb
or
mov
jl
add
xchg
mov
outsl
lahf
add
adc
loopne
and
call
pop
inc
fs
mov
out
pop
rolb
leave
pop
push
js
into
cmp
add
dec
stc
dec
clc
sub
adc
sub
mov
loopne
dec
test
push
idivb
ja
add
jae
jne
xchg
cmp
nop
sub
jns
add
shll
add
add
push
xchg
mov
loop
rolb
fs
cmp
push
nop
add
pop
jmp
dec
popf
outsl
add
lahf
add
xor
or
xor
dec
jnp
cs
jb
pop
je
mov
adc
js
add
xor
popf
add
sbb
in
add
loopne
icebp
cld
cmc
xchg
test
adc
mov
mov
push
in
adc
dec
rolb
adc
adc
mov
nop
pop
in
xchg
lock
hlt
mov
add
loopne
cmp
adc
add
cmp
push
jg
es
push
nop
test
cmp
daa
in
mov
cltd
mov
push
je
adc
in
push
add
aam
add
cmp
fdivs
rolb
fimull
sbb
lock
xor
xchg
pop
in
addr16
push
cmpsl
xchg
sarb
add
jbe
js
jp
add
movsb
or
lods
int
data16
cmp
mov
sub
call
repnz
scas
ja,pt
loopne
add
flds
cmp
adc
ucomiss
faddl
xchg
and
xor
add
sbb
out
and
sub
xor
popf
and
sbb
das
mov
pop
ret
cmp
repz
daa
inc
inc
inc
addr16
orb
repnz
push
call
mov
fsubs
enter
ret
add
fmul
loopne
mov
mov
add
mov
add
xchg
cmp
and
addr16
pusha
jp
movl
jbe
outsb
call
push
jmp
shlb
dec
jl
add
pop
ret
xchg
push
xchg
add
fdiv
add
add
dec
xor
xor
inc
xchg
popa
mov
add
dec
test
ror
pop
jp
add
inc
inc
inc
cmpsl
sbbb
sarb
jle
pop
jmp
push
or
xor
xor
inc
jno
add
pop
dec
fs
test
test
pop
inc
mov
push
loop
add
or
sbb
add
xchg
add
pop
loopne
out
xchg
add
cwtl
rcrb
xchg
into
pusha
out
xor
inc
repnz
shlb
cli
daa
xchg
pop
lods
fwait
out
in
test
fsub
lcall
inc
inc
pop
add
repnz
push
adc
in
lahf
add
cli
and
add
xor
inc
cmovs
dec
mov
mov
cld
aas
xchg
mov
rol
ss
and
sbb
sbb
xor
cmp
pop
inc
icebp
dec
stc
pop
and
lock
mov
cmp
outsb
stos
iret
mov
rcrl
aam
fucomp
add
cmp
or
bound
fldcw
loope
add
inc
inc
loopne
cwtl
cld
jb
je
add
pop
popa
xchg
add
pop
cmp
test
mov
popf
daa
stos
add
outsb
loopne
nop
push
dec
icebp
pop
in
pop
popa
sbb
ja
push
mov
and
lock
cld
in
push
shrl
and
xor
adc
lock
lahf
xchg
out
in
lods
mov
sub
dec
xchg
testb
test
cmpsl
arpl
les
test
jne
cmp
test
lcall
aam
leave
scas
fmuls
shlb
push
push
xor
jo
mov
push
repnz
adc
sbb
or
pushf
or
xchg
add
repnz
repz
lock
inc
nop
dec
add
loopne
jmp
arpl
ja
mov
sbb
dec
subb
add
push
fmuls
jle
nop
jno
jl
cmovb
cmc
mov
mov
or
or
push
test
call
or
rorb
int3
mov
enter
lahf
pop
into
rolb
in
clc
sarb
mulb
dec
aas
loope
subb
sarb
jmp
scas
and
loope
insb
repnz
and
bound
popa
ret
adc
dec
shlb
sub
adc
push
dec
leave
imul
ds
add
mov
mul
jg
add
leave
shll
jl
and
push
mov
mov
repnz
cmpb
pop
or
adc
dec
call
sbbl
repnz
leave
in
and
xchg
dec
enter
loope
add
roll
push
cs
pop
imul
nop
push
cmp
mov
movhlps
sti
xlat
enter
jmp
pop
cmp
add
dec
xchg
xchg
jp
out
roll
in
adc
cmp
sub
jnp
jle
mov
hlt
adc
pop
leave
lret
rorl
aad
mov
pop
and
pop
add
xor
mov
or
iret
cmp
popl
lock
adcb
mov
add
xchg
mov
inc
ret
mov
push
pop
leave
inc
je
cmp
cmp
and
lret
dec
loopne
adc
add
adc
sub
add
mov
jne
jp
andl
test
ds
aad
fbld
add
or
sbb
fnstcw
sbb
push
lods
fs
cltd
cmp
cmpsl
ficomps
add
jno
jnp
es
mov
pop
int3
xchg
shl
insb
sbb
cld
sti
addb
pop
ja
jl
cltd
and
out
std
loope
cmp
xor
test
jnp
add
daa
int
adc
mov
sub
jne
inc
add
pop
loop
jo
pop
add
aam
iret
xchg
or
lods
icebp
cmp
lret
in
dec
lcall
add
iret
add
cmpsl
movsb
loop
cwtl
xor
loopne
fmull
test
xor
mov
pop
pop
xchg
add
mov
add
cmp
adc
and
sub
and
xchg
sub
nop
int3
test
out
or
movb
ret
mov
xor
and
add
ror
or
sub
and
mov
sub
out
pop
cmp
adc
jmp
cmp
mov
icebp
inc
sti
ret
cmp
fcoms
pop
cmp
leave
mulb
ret
movsb
sarb
and
dec
xchg
add
push
lahf
pop
xchg
jbe
add
test
mov
xchg
xchg
mov
lcall
or
sbb
sbb
shlb
cmp
mov
daa
outsl
inc
mov
inc
sub
pusha
push
jb
xor
pushf
dec
test
fs
add
ret
dec
popf
add
xchg
add
jecxz
or
pop
cwtl
ret
jo
jl
xchg
add
in
add
sbb
push
add
out
adc
lock
cld
add
mov
hlt
pop
lea
jb
je
add
jno
testb
pop
mov
out
jo
push
sbb
dec
sbb
mov
xchg
pop
out
cmp
fwait
inc
xor
xchg
ljmp
xchg
and
leave
mov
cs
xor
es
mull
cmp
mov
dec
or
fildl
cmp
clc
fdivs
adc
xor
pop
ror
add
mov
add
and
sar
shl
cld
std
idivb
dec
in
pop
lock
test
cmpsb
cld
stos
leave
scas
shll
sbbb
lahf
ret
dec
into
and
aas
lahf
pop
fiadds
pushf
inc
add
movsb
movsl
ror
loopne
icebp
pop
xchg
push
sub
xor
pop
xor
cmp
xchg
out
testl
cmp
pop
in
add
cmp
and
or
sub
dec
clc
outsb
lock
hlt
ss
xchg
fimull
adcl
repz
repnz
je
pop
add
out
js
add
lock
aas
mov
add
popa
in
xchg
sub
push
in
leave
testl
insl
shlb
je
xlat
adc
aas
add
ss
xchg
sbb
mov
adc
sub
test
je
dec
imul
stos
dec
adc
cwtl
mov
pop
rcll
filds
pusha
out
jmp
add
repz
mov
add
adc
xor
pop
aaa
dec
sub
sbbl
repz
pop
mov
adc
lock
ljmp
xor
aas
push
mulb
stc
out
and
jo
add
pop
jns
add
add
mov
loopne
fmuls
ss
or
pop
adc
cmp
mov
ret
push
pop
sbb
fmull
pop
add
lods
data16
pop
scas
mov
adc
addl
mov
sbb
mov
andb
dec
addb
and
call
xchg
and
cld
sbb
push
sub
lcall
in
in
lret
mov
jno
jnp
hlt
or
outsb
cwtl
in
dec
aas
cs
ffreep
mov
xor
xchg
xor
lock
sbb
jle
subb
add
shr
cld
loop
ljmp
xor
or
push
adc
aaa
addl
cld
in
lea
push
xor
jns
addb
mov
js
je
pusha
xchg
or
nop
iret
test
aaa
xchg
add
loopnew
xchg
mov
loope
cmp
sub
add
dec
lea
jle
rcrb
cmpl
mov
push
pushf
adc
call
daa
mov
ljmp
hlt
add
cmp
jno
add
fcoms
add
jl
xchg
loopne
aas
hlt
adc
add
insb
cmp
cmp
in
inc
add
add
stc
inc
in
call
push
xchg
mov
mov
lret
sahf
sub
sub
cmp
add
push
cmp
add
inc
ret
mov
mov
pop
push
sub
dec
mov
ret
std
rorb
hlt
add
pop
push
xchg
add
mov
cld
repnz
lcall
add
lods
add
add
pop
mov
subb
cmp
subb
rcrl
or
dec
and
cmpl
dec
js
mov
mov
add
rolb
and
je
cmp
push
roll
popf
shll
add
aad
test
das
ds
sub
cmp
daa
push
mov
roll
les
lahf
adc
addb
or
lret
dec
xor
roll
ss
loope
pushf
xor
cs
push
xchg
or
cmp
addl
test
mov
jns
push
inc
add
adc
xor
dec
sub
sbb
scas
mov
pop
enter
scas
movsb
push
pop
push
cmp
inc
xorb
nop
cmp
ds
jl
add
dec
adc
push
cli
add
pop
clc
sbb
cmp
cmp
xlat
or
dec
push
invd
mov
sbb
pop
loopne
pop
add
and
inc
xor
mov
mov
add
ss
cmp
das
loop
add
jp
add
mov
pop
add
rsqrtps
rorl
imul
add
push
add
and
mov
ljmp
or
cli
les
adc
add
flds
xor
push
fstps
push
add
movsb
adc
imul
push
outsl
add
jnp
ds
fimuls
int
push
sub
test
imul
xor
shl
cld
xchg
add
sbb
popf
cmp
inc
mov
cmp
nop
out
ret
cld
or
add
enter
negb
add
cmp
xchg
add
lahf
dec
mov
leave
add
clc
pusha
dec
aad
xchg
out
add
cmc
pop
sahf
dec
add
mov
ja
adc
sbb
sarl
or
andl
mov
in
jmp
add
hlt
mov
pop
daa
enter
enter
syscall
imul
xchg
mov
dec
sbb
add
mov
mov
adc
jmp
xor
xor
jp
push
inc
push
mov
testb
pop
dec
ret
pop
push
mov
sbb
and
mov
into
clc
xor
jge
cmp
jnp
cmp
sbb
add
push
testb
adcl
inc
push
xchg
cli
aam
les
dec
test
add
xor
cmpl
push
and
inc
scas
add
test
js
mov
lods
aas
add
loope
loopne
in
jp
andb
addb
sbb
lcall
sub
xchg
xor
gs
cmp
out
loop
cmpsl
inc
add
jo
sahf
aas
js
sub
test
xor
sbbb
mov
mov
sbb
sbb
or
add
das
sub
jo
adc
add
je
mov
orb
dec
call
test
jl
add
test
sub
pop
lea
jo
fdivs
push
call
hlt
sbb
or
sbb
cs
cwtl
leave
xor
or
pop
push
add
mov
add
in
nop
fmul
cmp
movsb
fmul
jle
push
pop
mov
xchg
loopne
sbb
lcall
stos
sbb
pop
enter
lods
cld
test
mov
movsb
pop
jle
pop
mov
sahf
mov
jo
pop
pop
roll
add
mov
or
adc
xchg
add
sbb
movsb
es
lock
sub
vmread
fmull
aaa
add
add
icebp
xor
xor
ret
in
popf
sbbb
pop
inc
adc
dec
pop
or
pop
jl
adc
in
call
test
cmp
mov
xchg
adc
in
add
mov
call
mov
sbb
mov
cmovl
sub
lock
pop
dec
push
mov
orl
xor
dec
add
mov
movsb
jp
in
lods
shr
pop
mov
lock
add
lret
int3
jo
jle
aam
fmuls
push
loopne
and
push
push
and
clc
xchg
xchg
or
jb
jb
js
add
loope
ds
in
leave
cmp
xor
cmp
lods
mov
dec
dec
dec
adcb
pushf
pop
add
ret
fdivl
push
clc
js
cwtl
mov
movsb
and
inc
mov
mov
push
xchg
std
cwtl
int3
scas
pop
nop
dec
adc
stos
in
adc
clc
nop
or
inc
push
or
inc
push
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
pop
inc
stos
out
dec
test
es
jne
inc
popa
sub
push
call
enter
cmp
mov
mov
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
push
shrb
sbb
adc
or
cmp
mov
jo
stos
and
and
mov
dec
mov
or
fstpt
xchg
test
js
sbb
cmpl
sysexit
test
mov
jb
dec
jle
or
inc
sbb
in
or
repnz
cmpb
inc
add
sub
test
sub
loopne
pop
pushl
je
add
push
xlat
push
js
mov
push
stos
mov
aas
xor
or
leave
add
sbb
shr
in
add
loopne
add
in
sub
add
out
stc
mov
pop
add
pop
bound
add
add
movsl
lea
loope
jge
add
mov
sbb
jge
jp
dec
roll
out
sarb
lock
sbb
pop
sbb
shlb
mov
mov
pop
and
mov
cmpsb
mov
dec
cmpl
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
pop
les
jp
jbe
add
jle
sbb
cli
mov
or
mov
in
or
inc
loop
stos
add
mov
push
add
jne
outsl
add
imul
fsubr
cltd
adc
fsubrl
aaa
fmuls
pop
rorl
dec
shl
or
arpl
ds
jnp
aam
or
pop
rorl
cmp
adc
push
and
jo
push
sbb
dec
mov
andl
xor
dec
leave
add
add
cld
jmp
add
push
push
cmp
rolb
das
add
jne
mov
add
xchg
add
xchg
mov
mov
inc
cmp
and
jnp
testb
xor
cmp
in
rol
stc
les
pop
es
mov
inc
sbb
mov
xchg
sub
shrb
add
das
inc
jne
lret
xor
or
stos
pusha
adc
xchg
jmp
lret
aam
cltd
test
xchg
lods
inc
sub
test
add
sbb
repz
and
pusha
lcall
and
inc
push
ret
mov
jne
jp
sbb
aaa
adc
sbb
mov
cld
inc
fnsave
addb
ljmp
jl
push
add
adc
leave
add
cltd
xor
xchg
add
imul
push
add
shll
addl
and
xchg
dec
ja
sbb
lahf
push
cmp
xorb
in
pusha
xor
test
popa
lods
xchg
dec
jg
adc
xor
mov
lret
mov
icebp
in
add
or
mov
shll
jp
add
pushf
jmp
pop
inc
inc
or
pop
rclb
hlt
pop
jge
pop
mov
shll
lock
jecxz
dec
popa
leave
inc
movl
or
cmpl
push
pop
jns
sbb
jg
jo
sub
pop
or
and
jmp
add
aas
loop
xor
fadds
or
out
mov
pop
mov
dec
int3
iret
addl
pop
gs
sub
jo
fisubrl
cmovp
mov
sub
imul
sbb
inc
mov
and
add
push
lret
cld
inc
cmp
add
lds
add
inc
push
lret
add
sbb
popa
arpl
jecxz
jmp
xchg
jo
jmp
int
cmp
ror
stos
add
pusha
mov
imul
enter
dec
add
clc
mov
fs
add
popf
lret
jne
ds
pop
xchg
jb
nop
repnz
cltd
rcrl
add
gs
dec
cmp
adc
add
rcll
mov
mov
adcl
push
fadds
cmpsb
mov
jns
dec
pop
stos
jge
out
add
sbb
jbe
adc
stos
xchg
rolb
dec
and
mov
xor
call
shll
bound
push
adc
add
mov
js
loopne
add
out
xor
arpl
mov
pop
daa
js
je
les
mov
cmpsl
xchg
in
jne
add
lret
adc
inc
mov
adc
and
and
push
inc
enter
xor
mov
add
sub
in
and
imul
icebp
adc
pop
inc
add
rolb
add
repnz
add
sub
adc
ljmp
cmpsl
clc
push
cmp
aas
xchg
sahf
push
mov
inc
flds
adc
fwait
jnp
sub
andl
pusha
lods
or
cmpb
mov
mov
add
pop
inc
add
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
add
imull
cmc
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
call
ret
jns
mov
jae
insb
cmc
sub
mov
push
imul
inc
lds
outsl
arpl
inc
mov
lea
push
in
cmp
arpl
sbb
icebp
jae
cmpsl
inc
jne
mov
sub
sti
push
loope
inc
push
ja
jo
imul
dec
andb
mul
sub
ds
mov
jns
push
clc
and
cltd
sub
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
push
nop
sarl
or
or
mov
insl
add
dec
icebp
inc
std
pushl
clc
ja
shrb
pop
inc
daa
dec
outsl
imul
movsl
daa
push
stc
in
mov
mov
movsb
lods
mov
add
rolb
test
add
add
add
test
add
pop
jl
insb
enter
mov
dec
mov
rcr
or
xor
inc
mov
dec
xchg
sub
shl
aaa
jo
ds
mov
into
enter
xor
mov
mov
sar
sbb
mov
inc
push
shrb
xchg
icebp
fs
mov
mov
mov
in
and
cmp
sbb
into
mov
add
pop
pop
call
movsl
shlb
push
je
xor
cmpsb
clc
and
mov
fstp
hlt
fbstp
pop
rclb
xchg
lods
notl
bound
stos
jecxz
mov
das
fst
xor
mov
mov
mov
lods
dec
rolb
outsl
jle
les
xchg
mov
stc
ja
daa
test
ficoml
fcoml
mov
mulb
adc
cmp
fcmovne
add
push
pop
push
jmp
fadd
enter
mov
lds
out
sti
mov
aas
nop
shl
popf
cltd
xlat
jl
xchg
add
pop
fldenv
sub
data16
test
mov
add
sbb
xor
das
push
shlb
add
sahf
inc
out
cmp
mov
dec
out
in
push
or
pinsrw
pop
push
add
push
add
sbb
out
bound
fsubrl
shlb
mov
xor
add
fcoms
cmp
inc
inc
outsb
mov
outsl
mov
or
pop
cs
jg
mov
xor
push
jge
fmull
push
ror
push
xor
xchg
adc
adc
pop
loop
cmpsb
lret
push
test
in
mov
in
inc
dec
mov
and
or
sahf
or
int
xchg
sub
push
push
repz
lods
sub
cmp
les
and
adc
jnp
movsl
in
cmp
pusha
ss
cmp
lock
mov
popa
lahf
nop
mov
ficoms
cmp
xor
sarb
or
scas
test
inc
jmp
fisttpl
jb
jns
ret
iret
inc
mov
mov
es
nop
clc
call
cmp
iret
lods
iret
fdivr
xor
inc
pop
popa
dec
rcll
stos
or
or
adc
mov
push
adc
shl
pushf
repnz
ja
jle
or
push
subl
push
mov
pop
pop
imul
outsb
sbb
cmp
pop
xor
imul
add
push
xor
xor
sbb
and
dec
lds
cli
sub
jns
pop
mov
lcall
push
test
fwait
dec
ds
pop
popa
mov
aaa
cmpsl
mov
pop
iret
xor
mov
mov
mov
les
aam
fwait
mov
subl
xchg
push
mov
inc
dec
mov
xor
mov
jg
xor
adc
or
add
mov
popa
xor
push
mov
add
jle
ds
int
add
sarb
mov
or
call
push
leave
dec
int
jl
pushf
push
decb
xchg
daa
jbe
add
pop
add
push
xor
pusha
cmc
push
lcall
inc
inc
stc
jnp
jle
mov
loope
das
adc
data16
mov
xchg
jg
vmwrite
inc
imul
arpl
cmp
int
pop
push
cmpsl
daa
fdivl
insl
mov
jbe
jns
push
pushf
jns
or
mov
inc
or
cmp
add
in
hlt
push
and
mov
insl
call
test
cmp
rcrb
fcmovbe
jns
mov
sub
fldenv
sub
adc
sbb
add
bound
shlb
out
pop
data16
testl
xchg
and
dec
jp
sti
hlt
mov
push
cmp
push
clc
or
adc
addr16
cmpsl
inc
aas
fdivrp
arpl
sub
test
pop
loope
or
jecxz
inc
jecxz
loope
dec
pop
cmc
lea
in
ss
mov
mov
sub
or
push
inc
lds
stos
ret
fildl
leave
push
adc
outsl
shlb
in
popf
dec
aam
inc
jnp
mov
fadds
jge
aad
movsl
mov
clc
int3
fcomp
fs
test
push
mov
mov
enter
jne
mov
mov
js
rorl
and
jo
ficoml
sub
out
mov
outsb
sub
sbb
fiadds
fistps
lret
sub
mov
adc
sbb
mov
push
xor
or
out
cli
xchg
adc
adc
adc
mov
rcll
dec
mov
out
push
xchg
mov
aad
mov
shrb
sub
pop
cwtl
shrl
pop
sar
or
dec
icebp
dec
xor
sub
aaa
pushf
lods
add
ljmp
pop
sub
pop
mov
pop
xchg
mov
xor
shlb
outsl
and
adc
imul
in
add
aad
fimull
insl
lcall
cli
xlat
sub
xchg
pop
mov
mov
pop
mov
mov
inc
dec
test
jg
test
scas
xor
adc
rcrb
daa
rorb
fildl
mov
xor
and
push
inc
pop
decb
inc
ja
mov
pop
mov
mov
xor
xor
shl
aad
ja
jp
insl
movsb
adc
pop
or
shl
aad
andb
xchg
mov
mov
shrb
mov
mov
inc
repnz
push
clc
add
ds
cmpsb
sahf
addr16
xor
sbb
cwtl
aad
pop
adc
push
inc
lea
adc
ja
jle
mov
push
cs
dec
pop
jns
pop
lds
cmp
subb
push
insb
test
outsb
push
push
ss
movsl
cmp
or
mov
and
inc
das
iret
sbb
leave
js
cmp
adc
movsb
jg
insl
ja
push
pop
or
cmp
sub
repz
mov
pushf
ds
gs
jb
cwtl
das
lock
xchg
mov
inc
fdivl
mov
out
add
cmc
push
out
les
shlb
jp
es
icebp
ret
mov
cmpsb
aaa
jnp
std
mov
ds
mov
xor
add
aam
xchg
and
fs
cwtl
sbb
std
call
dec
mov
imul
jl
xchg
mov
addr16
jmp
pusha
repz
xchg
cld
imul
cmpsl
or
arpl
lods
add
add
adc
mov
loope
iret
adc
or
mov
stc
push
fmull
fdivs
mov
loopne
mov
test
test
adc
ljmp
adc
popl
adc
fisubs
pop
mov
pop
and
std
inc
arpl
mov
jg
outsl
adc
stos
mov
iret
sbb
and
xchg
jnp
inc
in
mov
lds
dec
movl
das
mov
mov
pushl
movsb
stos
cmp
inc
xor
nop
dec
cs
movsb
xchg
je
xor
jl
ljmp
mov
or
sarl
sbbl
mov
mov
cmpsb
shlb
xlat
scas
pop
std
xlat
ret
adc
cmpsb
jp
ret
and
ss
sarl
ss
lcall
jecxz
testl
add
rcll
push
loopne
and
xchg
jmp
in
pop
and
out
cmp
fdivs
or
cmp
mov
icebp
fistl
sbb
or
inc
jne
dec
push
pusha
sbb
loopne
in
in
dec
jb
scas
js
adc
lcall
test
popa
fidivrl
push
mov
xchg
cmp
mov
mov
jmp
sbb
cmpsl
in
out
dec
jmp
bound
clc
xchg
mov
cmp
sbb
cmp
scas
jne
dec
icebp
jne
cmpsl
in
lret
push
jbe
pusha
test
inc
out
or
mov
fwait
or
lahf
pop
hlt
dec
dec
mov
pop
sub
sbb
pop
popa
pop
repz
jbe
xor
fnstenv
sbb
push
cmp
push
cmp
ret
rolb
mov
pop
adc
mov
lds
mov
fmul
mov
dec
xchg
test
imul
xlat
mov
push
mov
xchg
and
add
mov
daa
fucomi
fwait
pushf
insb
mov
mov
xchg
and
xchg
aas
call
dec
call
fwait
iret
jnp
fs
dec
push
mov
and
mov
push
outsl
mov
pop
or
jb
sbb
pop
test
sub
sub
xor
aaa
ret
rolb
cmp
adc
out
mov
imulb
outsb
pop
lock
mov
stos
dec
jmp
xor
mov
push
cmp
or
xchg
int3
jle
leave
leave
pop
adc
idivb
fmull
sbb
scas
je
daa
or
mov
mov
lock
adc
lcall
popa
pop
jecxz
add
jnp
ljmp
xchg
dec
push
clc
jmp
fisttpll
cs
cwtl
push
push
inc
inc
cltd
ss
imul
push
push
jge
out
mov
push
aas
lcall
fisttpll
sbb
sub
repnz
xor
push
adc
pushw
je
push
jne
and
push
clc
andb
lods
cmp
push
add
and
aaa
dec
xchg
fs
mov
fidivl
loopne
je
faddl
mov
or
mov
push
sbb
jle
jbe
popf
fisubs
xchg
adc
pop
fadd
in
cmp
mov
shll
popf
popf
mov
clc
pop
mov
loop
in
stc
hlt
jb
std
cmp
inc
jg
push
sbb
mov
cmp
inc
cmp
dec
and
lock
pop
lret
push
xchg
adc
scas
cmp
nop
in
mov
out
outsl
mov
jns
and
mov
stos
mov
pop
xor
out
adcb
addr16
test
lea
int
xlat
xor
xchg
jle
int
add
lock
ja
or
ds
xor
stc
push
xor
sbb
mov
outsl
xor
lret
icebp
and
iret
dec
je
test
adc
in
sbb
pop
daa
push
jne
xchg
pop
fdivl
mov
push
xchg
jo
mov
inc
sbb
je
sub
aad
mov
mov
cmp
cmpsb
inc
dec
repnz
int3
fs
sub
push
scas
and
bound
push
inc
test
sub
rorl
push
jae
shl
aaa
movsb
pop
fstpt
outsb
mov
push
xchg
pop
insl
lret
bound
movsb
pop
inc
leave
ss
xchg
ficompl
fs
imul
ret
leave
and
lret
mov
lret
dec
push
mov
pushf
mov
jno
imulb
daa
add
inc
push
mulb
push
xchg
mov
insl
repz
pushf
pop
std
int3
mov
mov
mov
mov
adc
cltd
fdivrp
xchg
ds
xchg
pop
xchg
sub
stos
xchg
stos
in
lret
lret
sbb
loope
imul
mov
rorl
sbb
or
aas
out
mov
daa
scas
orb
fcmovbe
dec
or
out
sub
cmpsl
mov
dec
fs
xchg
push
ds
xchg
rcrb
cmp
test
or
data16
lret
xchg
out
negl
imul
seto
adc
les
or
jae
pop
icebp
mov
iret
inc
aas
xlat
xchg
push
dec
push
mov
cmp
pushf
daa
jnp
adc
add
mov
shr
add
std
xchg
add
cpuid
cltd
out
sub
push
xlat
sub
xchg
decl
lret
mov
pushl
int3
jge
push
push
xchg
jmp
scas
lret
cmpsl
fwait
pop
xchg
jns
hlt
cmc
and
repnz
mov
imul
jbe
cld
and
push
cli
mov
aas
orb
sahf
in
xchg
dec
lea
push
addr16
mov
mov
lods
mov
mov
xor
dec
push
cli
dec
xchg
fstps
out
dec
dec
leave
fcmovnu
hlt
into
mov
pop
push
jo
push
ja
mov
sub
clc
shlb
int3
daa
fldl
push
adc
out
sahf
fdivrp
xchg
cmp
movswl
jnp
enter
or
lock
int
and
dec
xchg
cltd
in
adc
jnp
mov
cmp
xchg
lcall
jae
jb
addr16
cwtl
mov
mov
adc
and
into
dec
popf
mov
xlat
push
ja
pop
js
ret
je
mov
fidivs
push
xchg
add
idivb
imul
xlat
insb
jg
lcall
inc
sbb
iret
lahf
jne
test
adc
call
sub
lahf
leave
xchg
cmp
cmp
jmp
lds
dec
inc
ljmp
adc
sbb
push
mov
lcall
adc
divl
cld
mov
aam
push
movb
xchg
fnstsw
insl
pop
xchg
pop
mov
movsl
fistps
aad
call
pop
stos
sub
in
ljmp
sub
lret
popa
inc
test
mov
lea
shl
outsl
and
push
std
xor
sbb
jae
cltd
jge
cli
inc
lods
or
imull
xchg
and
xchg
pop
inc
xchg
mov
fs
lods
gs
pop
sarb
jne
pop
fiaddl
ret
in
or
ds
js
xor
mov
and
lods
and
and
inc
add
aam
sub
ds
imul
loopne
cs
lcall
cmpsl
mov
jns
out
adc
dec
push
xor
divb
push
xor
dec
bound
mov
scas
xchg
push
and
clc
or
dec
push
mov
xchg
stos
bound
lods
sbb
bound
outsl
lret
jnp
sahf
add
hlt
mov
or
popf
andb
lret
xlat
push
loopne
fwait
or
push
loopne
jne
repz
cwtl
adc
xor
cld
fs
xchg
mov
jno
add
repz
lods
xchg
repnz
mov
sti
mov
xorb
lcall
xor
cmpsl
rorl
mov
js
inc
fwait
repz
arpl
mov
cmpsb
jge
sub
cmpsb
lock
pop
mov
aam
sbb
sub
add
lcall
aaa
pushf
add
pop
in
sbb
mov
dec
mov
leave
xchg
dec
dec
int
mov
scas
sbb
cmp
stc
mov
mov
aas
push
and
or
sbb
dec
jg
imul
xchg
cmp
mov
fstpt
scas
and
stc
loope
xchg
pop
inc
pop
add
das
mov
out
xchg
push
stos
cmpsl
rorb
aam
push
pop
ret
cltd
jbe
mov
xor
add
mov
cmp
pop
ds
mov
in
push
sar
lret
lock
pop
push
mov
fcmovnbe
mov
lahf
inc
dec
pop
ret
inc
pop
pop
or
cwtl
repz
and
call
xchg
cld
inc
push
sbb
addr16
mov
cwtl
insl
test
psraw
cli
pop
lock
xchg
insl
test
or
mov
inc
rcrl
add
cld
push
adc
out
call
push
into
add
xchg
or
test
mov
sbb
test
ret
mov
cmp
xchg
mov
iret
rorl
ficompl
cwtl
or
xor
mov
out
out
sub
mov
mov
sub
in
push
xlat
movsb
xchg
or
push
pusha
lock
out
xor
cmp
sbb
in
xchg
and
aam
dec
sub
inc
mov
mov
add
adcb
or
outsb
aaa
shrb
push
mov
out
popf
clc
loope
sub
and
mov
loope
mov
pop
test
xlat
std
ficomps
add
mov
cmpsl
push
psubusw
mov
push
mov
sub
xchg
and
add
clc
or
sbb
mov
pop
das
int3
adc
pop
adc
pop
adc
enter
push
test
insb
pop
outsb
pop
mov
jbe
add
pop
jo
subb
outsb
cmp
addr16
sbb
repz
icebp
cmp
dec
loope
pop
and
xlat
and
addl
mov
aas
mov
dec
outsb
cltd
hlt
add
pusha
imul
stos
rol
sub
mov
mov
scas
sbb
cmp
sahf
mov
bound
imul
aas
cmp
pop
nop
push
mov
jb
sahf
stos
jo
mov
decb
and
push
movsl
push
jp
push
adc
push
shl
add
cmp
lods
cmpsl
mov
mov
jl
cmpsb
cmp
stos
iret
pushf
lahf
ss
cmpl
xchg
es
pop
xor
pop
les
pop
ret
mov
or
pop
aaa
push
imul
jg
pop
or
dec
dec
addr16
xchg
inc
dec
in
push
mov
scas
stos
call
out
rep
sub
mov
sub
or
push
xchg
bound
aaa
push
lock
loope
sub
add
and
fcmovnu
data16
jo
jo
push
jge
push
or
gs
push
nop
and
xor
push
xchg
add
mov
add
sbb
cmpsl
orb
push
std
xor
imul
mov
icebp
mov
mov
in
xchg
data16
lods
mov
dec
pop
dec
jle
pop
and
inc
mov
push
lods
dec
lods
idivb
push
es
push
clc
cmp
negl
and
sti
in
test
fucom
sub
pop
insl
inc
std
repz
and
sbb
xlat
popa
in
xor
lods
or
bound
push
hlt
push
pop
jno
adc
lock
loopne
xor
loope
sub
jb
mov
inc
or
adc
fidivl
mov
xchg
mov
out
rolb
arpl
int
cwtl
rcrb
loope
or
pusha
mov
jp
popf
sbb
mov
dec
fmul
je
xor
ds
popa
daa
dec
push
cmp
fldl
scas
test
pop
dec
pop
push
mov
xchg
xchg
repnz
ret
call
jne
push
in
movsb
push
lcall
movsl
in
jmp
fidivl
xlat
pop
fs
insl
test
fsubrl
pop
xor
pop
push
mov
cmp
jle
ja
jne
cmpb
sub
xchg
lret
lods
mov
ds
fdivr
jb
add
out
lret
push
pop
jle
adc
jg
push
int
lcall
inc
and
ficoms
inc
imul
cli
lret
xor
inc
push
imul
xchg
adc
inc
shll
push
add
das
iret
mov
mov
xchg
ffreep
fadd
and
fdivrs
das
jmp
xchg
jle
xor
lahf
mov
rcll
andl
imul
lea
cwtl
mov
adc
push
xor
jbe
loop
cmpsb
sahf
sbb
movsl
lret
mov
aas
divb
or
xor
cmpb
adc
enter
jmp
xchg
mov
adc
stos
nop
or
mov
mov
xchg
rcr
cmpsl
lock
cmp
pop
pop
es
cltd
outsb
aaa
hlt
mov
les
push
stos
in
mov
and
int
out
or
cmp
jg
push
jbe
jnp
push
jae
fcoml
xorl
jae
fstpt
adc
sbb
dec
js
or
data16
inc
xor
cmp
shrl
or
mov
lcall
mov
outsb
popf
imull
gs
xlat
lahf
jne
xchg
mov
jne
mov
dec
or
clc
movl
or
aad
adc
fucomip
xchg
loop
sub
sbb
push
mov
xor
cmp
fisttpll
jl
push
movsl
stc
std
loopne
outsb
adc
mov
imul
stc
mov
adc
sbb
jl
bswap
mov
pop
and
cwtl
fidivrl
jmp
pop
out
mov
jmp
cltd
idivb
lods
mov
dec
mov
xor
and
dec
les
pop
cmp
lock
dec
xchg
pushf
and
push
xor
stc
repz
jae
mov
shl
dec
lret
lods
pop
pop
insb
js
pop
in
sbb
outsl
lahf
cmp
jnp
inc
movsl
repnz
dec
adc
mov
int
xchg
divl
mov
sub
xchg
and
cs
mov
cld
movsb
adc
or
std
pop
sub
test
or
scas
and
jne
jnp
and
daa
mov
xor
aas
out
ret
mov
mov
iret
ss
sub
lds
ret
inc
fsub
adc
dec
or
sbb
fucomip
mov
xchg
inc
mov
add
dec
dec
or
in
dec
mov
fnstcw
loop
cmc
es
les
xor
fisttpll
mov
js
imul
push
int
xor
cmpsl
cmp
xchg
lods
into
push
lea
scas
and
std
movsb
pop
lods
xchg
ds
data16
pop
inc
mov
in
or
imul
push
sbb
or
sbb
dec
pop
dec
inc
call
sub
nop
adc
xor
inc
inc
mov
pop
mov
xor
push
add
pop
sar
addr16
out
adc
out
push
mov
pop
xor
push
jg
js
xor
fwait
imull
dec
das
and
cmpsl
xor
mov
cwtl
icebp
mov
cmp
adc
adc
repz
add
or
jecxz
mov
shl
fwait
outsl
and
jp
aaa
jecxz
xchg
filds
arpl
mov
fcoml
adc
imul
bound
scas
fwait
pop
mov
fwait
insl
jge
add
popf
shll
ror
mov
inc
push
jg
push
imul
fs
mov
sarl
xchg
xor
push
pop
xchg
push
adc
cmc
ljmp
push
jb
ja
loope
push
mov
inc
mov
push
xor
mov
pop
cmp
cmp
cmpsl
sbb
mov
xlat
fcomps
ss
push
fwait
sub
push
sub
notb
push
jp
or
jp
dec
jecxz
cmp
ret
loope
hlt
cmc
je
fldenv
xchg
xchg
jg
lcall
ss
cli
ret
addr16
jae
jno
notl
gs
jae
into
sbb
scas
cld
cmp
and
fldenv
jmp
or
fsubrl
mov
incb
jb
adc
sub
xor
clc
and
into
xchg
insl
in
fldl
mov
add
pushf
bnd
inc
out
bnd
mov
cmp
lret
pop
loopne
push
out
je
fwait
ds
dec
loop
fists
sbb
call
scas
and
cli
in
ret
xor
xlat
inc
sbb
xor
xchg
xorl
sbb
xchg
push
push
xchg
ja
in
test
enter
cwtl
sub
popl
sub
sbb
jmp
pop
add
stc
imul
clc
dec
je
outsb
and
add
test
jmp
xor
pop
cltd
ss
adc
dec
ja
popf
pop
or
jg
pop
stc
insb
xchg
outsl
cmc
aam
mov
ret
mov
pop
test
jbe
mov
cs
mov
jnp
push
sub
pop
scas
jnp
scas
pop
das
repnz
outsl
mov
sub
pusha
xor
pop
or
fwait
mov
das
jnp
jp
lahf
ljmp
xorb
jp
insl
daa
or
push
imul
sub
in
cmp
push
xchg
popf
push
out
lcall
fs
cmpsb
cld
cmp
sbb
fsubr
outsl
pop
dec
add
insb
xchg
in
outsl
mov
out
dec
aad
out
insl
xchg
or
out
popa
test
jbe
push
or
insb
ja
cld
cli
in
mov
inc
insl
dec
fists
pop
cld
xchg
mov
mov
cs
stc
repnz
loopne
mov
add
insl
mov
cmpsl
loop
leave
ret
pop
xor
bound
leave
mov
dec
adc
adc
ss
sub
and
icebp
push
cmp
mov
jle
es
repnz
shlb
xchg
xchg
in
mov
inc
or
sub
mov
scas
popa
test
add
xchg
fimuls
push
cmp
mov
lret
iret
add
rorl
push
xor
daa
cmp
jecxz
push
repnz
pop
aas
ljmp
lcall
add
mov
shll
aaa
pushf
pop
mov
add
push
or
sub
mov
loop
dec
cmp
popf
scas
mov
xlat
test
dec
mov
add
mov
scas
mov
push
and
fistpl
xor
cmc
sbb
bound
test
fstpl
xchg
inc
out
lahf
inc
lods
shlb
je
push
ss
push
inc
sub
push
into
dec
or
push
dec
jnp
notl
pop
arpl
lret
pushf
or
adc
inc
push
push
popf
pop
pop
xchg
daa
das
ds
lcall
push
test
int
lods
loopne
mov
jle
and
sbbb
lcall
fisubrl
dec
stc
addr16
mov
jno
mov
loopne
sbb
push
out
pop
icebp
repz
xchg
jmp
dec
adcb
mov
daa
jmp
pop
fists
pop
outsb
loope
cmp
xchg
adc
adc
sti
loop
sub
int3
inc
int3
mov
and
push
shr
ds
ficompl
hlt
mov
pop
mov
or
dec
jl
outsl
enter
xor
out
repz
mov
test
sub
jne
into
mov
enter
call
test
sub
rdseed
pop
rclb
xorb
push
fimuls
mov
and
pop
sub
loope
addr16
jmp
popf
and
movsb
outsl
inc
add
arpl
je
movsb
lahf
dec
shrl
pop
mov
sbb
adc
inc
daa
inc
stos
loopne
fisttps
cmp
cmp
imul
sbbl
dec
sub
sbb
out
cmp
push
xchg
into
mov
mov
addl
stc
js
rcr
lcall
gs
call
pop
insb
ret
push
mov
cld
mov
mov
mov
aad
add
sbb
push
mov
in
xchg
add
outsl
xchg
pop
mov
lock
xchg
jne
insb
mov
shlb
dec
aad
sbb
sub
mov
mov
fisubl
jns
adc
ficomps
gs
test
push
cmpl
and
xchg
call
punpcklbw
scas
imul
cld
sub
pop
mov
dec
sub
add
cltd
mov
push
imul
pop
mov
pusha
cmp
lock
ds
xor
push
push
pushf
shlb
test
addr16
mov
loop
ficomps
and
je
xor
dec
jl
pop
fs
in
orb
or
fs
and
ljmp
icebp
sbb
pmuludq
push
xor
leavew
lret
add
add
add
sub
insl
mov
push
jmp
add
addr16
inc
jg
inc
pop
mov
push
dec
outsb
push
fstps
xchg
dec
xchg
xchg
mov
in
pop
jns
cmp
xor
cmc
aam
sub
je
imul
pop
cmp
xchg
movsb
adc
mov
ds
xor
mov
imul
mov
leave
les
xor
fmull
fimull
clc
stc
pop
xlat
or
call
fwait
adc
fxch
adc
rcl
jbe,pt
popa
pop
or
mov
lret
pushf
stc
sbb
xor
out
adc
out
push
mov
add
push
clc
scas
xchg
into
or
inc
mov
inc
and
mov
cmp
sub
push
stos
movsl
jp
fwait
jnp
je
pushf
loop
lahf
inc
outsl
pop
mov
sub
pushf
notb
xchg
jns
sub
out
aas
pop
je
xchg
pop
pop
imul
mov
cmpl
cmp
dec
lcall
pop
movsl
mov
es
pop
sahf
mov
clc
hlt
test
add
add
and
mov
or
addb
insl
dec
sbb
pop
lret
sub
mov
sub
lcall
inc
jno
sub
xor
imull
cmpsl
cmc
lahf
shll
popf
cmp
fstp
jle
lock
lock
sahf
test
orb
cld
lods
incl
jmp
jp
xor
lcall
push
push
dec
fs
xor
ss
jp
push
es
leave
pop
movsl
cli
push
jb
int
ret
xchg
pop
gs
test
mov
lcall
jge
or
inc
xor
repz
xchg
inc
and
pusha
dec
adc
ss
push
cmp
mov
das
jbe
jmp
ret
mov
dec
nop
jae
lahf
xchg
cmp
shlb
cmpsb
add
and
int3
add
std
into
aad
jno
mov
fildl
rcrb
cmp
loop
icebp
cmp
clc
insb
xchg
cld
mov
mov
push
sub
dec
test
cwtl
cmp
sub
daa
stos
mov
mov
push
rorb
and
mov
cmp
add
xor
xor
ss
jmp
mov
pushf
mov
stos
ret
cld
fdiv
dec
out
xor
cwtl
lret
cmpsb
sbb
enter
cmp
mov
test
xchg
and
lcall
insl
push
sbb
jmp
fwait
sbb
ret
scas
aad
fistpll
push
sub
scas
cmc
scas
or
pop
push
lcall
add
fistps
jb
lods
push
add
adc
xchg
shlb
aaa
pushf
cmpsl
out
pop
fstps
test
ror
mov
jmp
or
int
loopne
mov
arpl
pop
enter
sti
mov
scas
lods
loopne
sbb
lods
dec
idivb
inc
loopne
add
pop
adc
data16
pop
hlt
outsl
lret
das
xor
out
int
mov
inc
mov
mov
incl
cmp
xchg
cli
inc
or
xor
mov
orl
stc
xlat
outsl
and
xor
sbb
mul
fxch
mov
mov
adc
decl
stos
xor
push
repnz
inc
push
nop
stc
negl
pop
test
mov
ja
pop
lods
leave
lret
jge
push
xor
stos
xor
in
or
and
inc
add
cmp
cmp
test
in
fs
sarl
in
xor
out
cltd
mov
inc
pop
outsl
sub
jo
push
mov
fs
cmp
inc
dec
in
dec
repz
xchg
dec
sub
mov
cs
push
int
jnp
popaw
cli
dec
jecxz
clc
push
or
xchg
ret
jnp
inc
add
or
outsl
arpl
iret
fst
lahf
jle
xor
iret
jl
lea
jecxz
sub
pop
ja
jmp
addb
scas
push
inc
pop
cwtl
loopne
inc
mov
dec
jecxz
jbe
and
leave
in
bound
mov
bound
sarl
in
pop
pop
cmpsb
repz
in
mov
iret
in
adc
or
out
lods
imul
cmpsl
notb
cmp
sbb
test
daa
imul
data16
out
cltd
pop
rcrl
sub
push
push
dec
out
xchg
int3
mov
cmp
mov
jle
addr16
mov
idiv
xchg
jae
pop
jne
cmovg
ds
xor
jle
mov
aas
lea
add
xchg
or
inc
mov
xor
imul
cmp
mov
mov
mov
dec
call
rcll
out
mul
cmp
ret
and
leave
lcall
sbb
pop
xchg
mov
mov
vmaxpd
jae
enter
lea
add
aas
mov
cmp
lds
add
outsl
add
lahf
les
jmp
lcall
cmc
push
add
fistpll
sbb
test
shr
popa
gs
call
cwtl
cs
xor
mov
jg
sarl
stc
addr16
je
dec
push
mov
inc
dec
in
and
test
push
int3
gs
cmp
and
scas
sub
mov
movsb
add
mov
lcall
fisttpl
lahf
xchg
and
fdivl
repnz
fstp
sbb
push
xchg
xchg
arpl
adcl
xlat
push
pusha
xchg
shr
cmc
mov
sub
fadds
xor
xchg
mov
mov
ds
mov
push
int3
and
nop
sbb
std
adc
pop
test
xorl
idiv
push
loope
fiaddl
pop
xchg
enter
pop
ljmp
cmc
das
xor
cmp
call
mov
push
ret
mov
and
jb
cmpl
pop
inc
sub
or
xor
cli
mov
sub
mov
ficompl
flds
das
sub
ret
lcall
inc
xor
pop
aaa
lahf
or
cwtl
jmp
sbb
xor
rcll
rdtsc
daa
rolb
out
jns
lcall
inc
jg
incl
push
roll
mov
or
enter
rcr
ss
cmp
or
ss
mov
shll
lds
or
ds
mov
push
add
out
ja
xor
jb
test
sbb
cmc
mov
std
aas
dec
icebp
notrack
stos
ret
mov
testb
mov
stos
stos
fidivrs
mov
test
daa
mov
pop
shl
fsubrp
in
xchg
mov
xor
xchg
rorb
lahf
xor
orb
jno
imulb
mov
jg
loope
call
ret
sahf
hlt
inc
xchg
movsb
jae
std
dec
repz
mov
out
jno
jle
loope
aam
scas
ficompl
cmp
xorb
cmp
push
pop
xor
xchg
cld
out
mov
test
test
jp
leave
loope
sub
cmpb
iret
imul
and
leave
enter
addl
fmull
push
xor
pop
xchg
cltd
ss
adc
xor
rorl
leave
mov
mov
fnstcw
or
push
dec
repnz
sbb
jp
jns
pushfw
xchg
mov
push
jmp
cmp
fsubrs
movsl
insl
rcrb
cs
test
gs
outsb
sbb
mov
sbb
lahf
push
in
int3
xor
push
int3
mov
fbstp
pop
mov
sub
jmp
repz
inc
push
add
or
or
pop
icebp
mov
inc
sbb
mov
cwtl
xor
rorb
in
xchg
sbb
and
mov
pop
xlat
fsubl
in
fistpl
hlt
cmpsl
mov
scas
xor
fucomi
loop
xor
movsb
push
mov
pop
sub
subb
lods
and
push
lret
cmp
pop
sbb
std
inc
movb
fidivrs
sbb
test
push
sub
adc
xor
pusha
push
xor
and
jle
mov
je
sbb
lods
add
lods
mov
push
sbb
repz
mov
sti
cmp
in
sti
or
sbb
fiaddl
mov
adc
out
or
dec
xor
mov
xchg
out
jmp
and
testl
xchg
mov
cwtl
packsswb
pop
jbe
mov
sub
fimuls
outsl
jle
inc
cmp
or
add
scas
addr16
cld
xlat
enter
outsl
push
jbe
js
sbb
rcrl
sbb
dec
fstl
dec
scas
jne
mov
xor
inc
lret
fs
mov
mov
fdivrs
aaa
sub
cmp
imul
aas
bnd
jb
gs
pop
mov
stos
scas
cmpsb
jo
stos
push
mov
xlat
inc
xchg
outsl
scas
ss
xchg
dec
mov
mov
into
sbb
sub
mov
pushf
decl
mov
shll
fdivrl
call
add
pop
jno
addl
adc
inc
pop
inc
lods
lcall
lcall
in
push
pop
out
repnz
xchg
jl
adc
mov
pop
sti
sub
xor
stos
or
std
mov
adc
xchg
push
inc
insl
notl
scas
scas
out
ret
mov
xchg
cmp
sub
outsl
inc
popf
sub
pop
xchg
inc
xchg
imul
pop
imul
sub
fildll
push
ficompl
mov
adc
lods
icebp
int3
repz
in
imul
pop
adc
pusha
push
push
jae
imul
orl
cli
cmpsb
push
push
push
mov
stos
or
push
push
dec
jp
jno
ja
insl
call
hlt
cld
mov
es
xchg
dec
xor
xor
mov
inc
mov
jl
push
mov
inc
cmp
subb
jo
fdivl
inc
imul
mov
out
rep
gs
sbb
xchg
daa
and
xor
xchg
repnz
mov
aaa
lods
dec
cmp
mov
add
xchg
xorl
fnsave
inc
out
stc
dec
imul
sbb
fistl
ja
into
mov
cmp
scas
jge
jp
jge
mov
push
lcall
pusha
mov
dec
das
lret
sbbl
scas
pusha
mov
jae
ss
jne
mov
mov
lock
imulb
xchg
mov
xor
out
fldcw
lock
push
mov
jg
jg
sub
pop
loop
adc
aad
mov
icebp
shlb
arpl
lahf
adc
jae,pt
jmp
pop
sbb
mov
mov
std
xor
leave
add
xchg
and
mov
clc
lret
js
xor
icebp
pop
gs
add
fdivr
adc
jl
mov
pusha
ret
push
and
jp
jb
aaa
pop
ljmp
sbb
xor
adc
mov
push
sub
jp
adc
cltd
add
mov
lret
nop
js
push
pop
lods
inc
aam
test
negb
lds
repnz
inc
int3
fcmovne
pop
add
jecxz
js
mov
sti
dec
dec
addr16
xchg
mov
sbb
dec
cmp
xchg
push
push
cltd
stos
aas
xchg
lock
inc
pusha
dec
inc
xchg
mov
and
or
daa
xor
pop
inc
mov
rep
add
inc
dec
stos
dec
int
sbb
sbb
pushf
push
and
iret
outsl
popa
pop
aam
and
push
fs
xor
xchg
jl
push
into
dec
sti
nop
lea
xchg
pop
vaddsubps
mov
inc
mov
in
int3
popa
sbb
or
rcrl
xor
loope
call
jae
jae
movsl
sub
inc
xor
aam
jne
ds
ret
pop
dec
sbb
iret
fadd
pop
movsl
pop
pop
lcall
mov
xor
mov
cpuid
iret
mov
mov
lret
add
movsl
mov
adc
ror
lcall
push
neg
sbb
lcall
xchg
imul
cli
xlat
or
hlt
inc
mov
test
push
sub
aas
clc
les
pop
shll
mov
push
mov
pop
imul
pop
dec
iret
inc
and
std
dec
lock
and
add
push
xlat
incb
inc
jp
jl
xor
rcrb
dec
and
stos
idiv
cmp
fs
lds
xchg
lret
movsl
xchg
jmp
insb
daa
lock
clc
sbb
xchg
lcall
xchg
jp
gs
jo
mov
icebp
and
dec
cltd
popl
xchg
xchg
sub
adc
test
movsl
mov
mov
pop
sbb
js
adcl
inc
sarb
xrelease
sti
cmp
mov
cli
aaa
addr16
xchg
lods
mov
adc
pushf
add
les
mov
and
repz
roll
dec
or
movsl
ljmp
jno
out
fadd
xor
lahf
aam
dec
stos
in
popf
push
cwtl
loopne
divb
lods
sbb
aam
mov
outsl
push
icebp
sbb
and
adc
mov
xchg
sbb
and
stos
push
test
icebp
dec
inc
inc
lea
lods
jmp
mov
sbb
add
in
out
pop
ljmp
enter
sub
aas
cli
hlt
inc
pop
pop
insb
sbb
ljmp
js
mov
insl
mov
inc
mov
jp
xchg
or
cmp
filds
push
or
popf
push
lods
and
mov
mov
mov
mov
cltd
jno
insl
lret
mov
xchg
sti
and
loop
mov
mov
imul
inc
push
roll
mov
push
mov
ficoml
and
cmp
outsl
mov
lds
jnp
pushf
addb
adc
pop
ja
dec
jb
add
sbb
jle
and
out
add
cmp
or
xchg
cmpsb
shlb
xchg
lock
sahf
aam
push
jnp
adc
xchg
cmp
fisttps
loop
imul
jnp
xchg
jl
sub
mov
mov
sar
push
shl
jp
int
push
xchg
mov
divl
pop
mov
push
xchg
not
and
or
jge
mov
add
ljmp
add
or
icebp
aaa
lods
bnd
xchg
adc
into
in
inc
loop
jle
jle
sbbl
push
ret
divb
call
cltd
cmpl
jae
out
mov
mov
cli
ljmp
je
pop
mov
mov
rolb
sbb
es
clc
xchg
fsubp
ror
je
shl
jg
inc
jae
dec
pop
push
or
cmp
or
sub
test
push
callw
or
pop
test
mov
int
flds
xlat
and
xchg
jo
xor
push
pushf
arpl
pop
mov
mov
cmp
fdivr
adc
and
cmp
xor
push
jne
insb
fsubrs
cmp
push
adc
and
not
mov
jnp
andl
iret
or
pop
and
xchg
lret
adc
xchg
push
push
repnz
movb
das
ja
cwtl
xchg
add
mov
lahf
and
sub
adc
pop
scas
adc
and
jne
shlb
fwait
xor
sbb
aaa
or
mov
imul
jmp
sarl
and
mov
lret
inc
fidivs
mov
loop
mov
rcll
fcmovnbe
xor
movntps
pop
sub
mov
and
cld
enter
jns
pop
jno
jl
adc
or
add
in
cmpl
push
dec
cltd
dec
ret
jae
ret
stos
push
add
mov
bound
add
mov
ret
not
xchg
mov
cmc
mov
mov
adc
dec
outsb
xor
cmp
adc
cltd
popa
xor
movsb
fadd
hlt
sub
or
add
jae
inc
sahf
in
iret
je
stc
pushf
jnp
fstps
hlt
rcrl
lcall
repz
sub
test
adc
es
aas
cmp
mov
inc
jge
shll
push
inc
into
pop
pop
cs
add
cmp
mov
sub
pop
movsb
sub
dec
insl
movsb
pop
mov
outsl
arpl
adc
xor
aaa
jae
bound
pop
ja
cltd
mov
insb
sub
dec
sarb
xchg
cmp
sub
rorl
push
xchg
pop
insb
fcoml
adc
ja
pop
ffreep
es
negl
sbb
inc
xchg
inc
lds
push
fcompl
bound
jnp
mov
stos
pop
inc
das
and
fst
int3
push
test
xchg
jae
stos
sub
inc
and
adcl
js
cmp
in
sbb
subb
pop
add
push
add
dec
ss
mov
sub
push
mov
inc
push
insl
ret
pop
mov
inc
sbb
pop
out
xchg
out
mov
mov
filds
call
stc
clc
sti
cltd
lret
xorl
daa
lods
inc
lea
sub
arpl
enter
and
movsb
sti
xlat
sbb
mov
push
arpl
xchg
fwait
xor
cmp
xorb
xor
rorb
loop
in
stc
in
movsl
subb
xor
fstl
push
movsb
inc
rcll
dec
imul
std
cwtl
fstpl
pop
icebp
test
cmp
jl
cltd
mov
sub
movsb
mov
cmp
out
leave
daa
dec
outsl
rcll
enter
and
stos
int3
shll
fwait
or
and
xchg
in
mov
bound
mov
jns
cmp
das
hlt
xor
icebp
sbb
or
dec
shrb
or
add
push
icebp
and
cmp
pop
lods
adc
jmp
jb
std
stc
inc
sub
pop
or
imul
in
popf
rorl
mov
movsl
jb
fistl
jmp
cmpl
pop
inc
mov
das
pop
sub
pushf
bnd
negb
mov
jecxz
jg
push
cwtl
mov
fwait
cwtl
push
clc
test
jae
sub
lock
pop
loope
call
cmp
mov
shll
outsl
fistps
jmp
lock
scas
shr
sbb
xchg
daa
jmp
rol
mov
fldl2e
inc
adc
pop
fwait
jno
push
es
repz
jge
sbb
dec
in
push
testl
shll
fisubrs
insl
ja
shrl
mov
xor
cmp
xchg
in
mov
mov
add
dec
lea
jbe
fwait
xor
cwtl
shlb
mov
xchg
mov
ljmp
push
test
iret
or
lds
sti
push
loop
mov
mov
push
cmp
mov
movsl
jmp
mov
leave
push
cld
push
je
lahf
repz
mov
popa
xor
pop
xor
in
jp
movsl
mov
mov
inc
fucomp
mov
pop
jmp
pusha
popf
fldenv
in
icebp
movsb
inc
or
in
ja
insb
daa
js
sbb
inc
lcall
in
lret
inc
push
and
rolb
testl
jp
fadd
call
add
add
mov
cmpsb
jb
ret
xor
sub
aam
mov
jecxz
lds
movsl
js
aam
jl
jp
rolb
ret
xchg
sub
pop
jns
dec
sub
pop
adc
test
fmull
mov
sub
add
ret
out
pop
jp
fld
sti
inc
cli
or
cmp
and
in
aaa
loope
or
clc
imul
xor
push
or
sub
jns
push
cltd
call
mov
adc
ljmp
aaa
aaa
dec
dec
cwtl
cmp
pop
cmp
iret
aam
mov
adc
mov
dec
out
push
add
xchg
and
pop
cmpsb
pop
aam
sarl
es
mov
leave
adc
rcrl
roll
cs
int
mov
outsb
loopne
mov
inc
xchg
out
stc
jle
jl
movsb
les
xor
adc
pushl
inc
push
in
push
push
add
cmpsb
push
xor
adc
and
aaa
mov
inc
sarl
adc
inc
addr16
ljmp
mov
push
pop
add
sbb
sarl
or
inc
mov
pop
mov
inc
push
iret
loopne
mov
mov
leave
ljmp
jne
and
insl
movsl
mov
movsl
cmp
mov
mov
enter
and
sbb
xor
cli
lret
pop
jbe
stc
out
sarl
lods
out
pop
jl
jl
pusha
xor
mov
xchg
inc
fwait
push
mov
enter
mov
aad
cmp
push
inc
pusha
dec
push
ret
push
mov
mov
push
jg
mov
cmc
loopne
push
leave
rclb
jno
fldl
ljmp
js
sbb
sbb
dec
jge
adc
arpl
out
pop
adc
ret
imul
fsubr
mov
stos
repnz
xor
mov
pop
or
mov
mov
lret
scas
or
cmp
xor
or
mov
loopne
das
lea
into
jne
inc
xchg
stos
push
mov
ret
jg
xor
inc
mov
adc
mov
call
sbb
cmp
dec
mov
or
jecxz
pop
shll
rcll
jb
bound
sahf
vfrczsd
pop
push
out
sub
int
cmovb
push
sub
mov
repz
ret
sub
xlat
push
push
in
pop
jne
hlt
imull
inc
pop
mov
pop
icebp
pusha
ljmp
xorb
lret
adc
adc
lock
cmp
scas
es
sub
jae
popa
jl
jmp
dec
movl
bound
mov
insl
and
outsl
shl
repz
xchg
cmovne
in
and
dec
xchg
jae
pop
lcall
adc
popl
push
push
push
shr
aam
lret
cmp
leave
push
dec
leave
push
lds
cwtl
std
mov
addr16
sbb
pusha
data16
mov
or
inc
add
cmpsl
dec
aas
addr16
jno
cli
mov
add
movsb
pop
mov
cmp
jl
outsb
jg
shrb
adc
loope
or
aaa
sbb
add
stc
mov
and
inc
mov
lcall
cmp
sbb
push
dec
or
outsb
loop
mov
jb
jns
jbe
in
xor
mov
shl
or
cwtl
push
test
out
clc
aam
push
dec
and
nop
mov
mov
call
lret
push
cwtl
dec
mov
inc
clc
mov
sub
enter
lods
mov
dec
outsl
sahf
std
lcall
pop
mov
xchg
fimull
dec
adc
xchg
cmp
xchg
icebp
and
mov
scas
mov
sahf
sarl
fwait
sti
jp
aaa
sbb
lock
addps
and
and
adc
mov
or
lock
rcrb
inc
in
ljmp
fisubrl
int3
push
ja
inc
scas
jge
jg
sbb
shl
adc
sbb
dec
sub
mov
jle
imul
push
jecxz
push
push
jle
adc
test
or
sub
adc
cmp
out
mov
sub
rorb
popa
push
pop
adc
hlt
or
loope
incl
dec
ljmp
xor
ljmp
cmpb
push
lods
cmp
cmpb
jbe
aaa
or
lret
cmp
pushf
les
inc
dec
rorl
add
andb
mov
xchg
and
rep
push
jle
pop
stc
inc
inc
dec
sarl
mov
fidivrs
lods
lret
aaa
mov
in
mov
push
mov
xchg
jnp
iret
iret
or
and
std
cmp
pop
pop
add
inc
and
idivb
jae
inc
stos
aas
scas
mov
pop
lea
sbb
call
mov
fldcw
push
sti
cmp
xchg
jae
xchg
enter
jns
ret
mov
pop
lods
push
lea
mov
loope
bound
push
repz
add
cld
roll
mov
pop
insl
fstps
and
jg
inc
mov
sbb
lods
dec
inc
pop
pop
sbb
sbb
rcrl
mov
lret
icebp
pop
pop
stc
outsb
pop
es
sub
xor
mov
test
mov
pop
es
cmp
int3
pop
push
in
sub
daa
jle
aas
dec
scas
xchg
icebp
and
adc
shrl
jne
add
inc
popf
xor
jmp
dec
mov
mov
add
das
add
lahf
cmp
sub
jns
repnz
push
jbe
xchg
rolb
arpl
loopne
ss
pushf
nop
iret
jnp
add
filds
arpl
mov
es
lds
pop
not
mov
xor
insl
and
cli
jp
and
mov
es
addr16
mov
xchg
out
xor
or
and
sbb
mov
cmp
lods
add
test
mov
cmp
jb
and
iret
sbb
or
sub
xor
gs
lret
mov
push
inc
mov
loop,pt
jns
nop
shll
mov
sti
sub
xor
pop
test
pop
cs
sbb
jns
cmp
pop
cmp
outsb
cmp
mov
dec
movsb
cwtl
xor
mov
xchg
notb
adc
stos
lds
in
push
xor
add
inc
fmuls
sbb
shlb
sbbl
mov
outsb
mov
and
push
cli
jo
mov
lcall
pop
lods
jge
inc
mov
fsubs
pushf
and
arpl
mov
fistpl
aam
fmull
call
lcall
jl
cmp
js
dec
jg
xchg
sbbl
push
add
jae
mov
sti
hlt
jno
test
les
sbb
jbe
fnstcw
in
cltd
ret
sahf
das
outsl
idivb
mov
fneni(8087
sub
in
cwtl
cmc
loop
daa
cli
and
out
ss
out
and
je
or
lcall
js
adc
adc
in
imul
aas
sub
pop
into
sahf
scas
jg
std
mov
add
cmc
xchg
jno
sarl
notl
popa
or
dec
pop
fstpl
stc
jae
xchg
icebp
adc
leave
mov
jmp
loope
add
jg
sar
test
push
mov
les
shl
outsl
xor
fs
out
and
sbb
jge
jl
bound
icebp
addr16
xchg
and
adc
cmp
mov
add
fsts
lock
cmp
cli
xchg
sbb
testb
iret
ja
cmp
ficoml
popf
xchg
jmp
in
fabs
mov
adc
imull
xchg
outsb
insl
mov
sub
mov
int3
sahf
mov
mov
leave
pop
cmc
adc
aam
cmp
mov
shll
or
cltd
and
and
inc
jns
mov
clc
mov
das
xor
cltd
mov
andb
lahf
sub
pop
clc
ret
jmp
push
cld
adc
mov
mov
pop
pushf
int3
sahf
pop
dec
pop
pop
lret
in
mov
push
out
pop
lret
movsb
xor
sub
or
stos
imul
mov
rcl
or
add
push
out
lds
cmp
or
adc
repz
iret
adc
mov
adc
mov
pop
xor
mov
mov
dec
movsl
lret
inc
test
arpl
jns
xchg
stos
leave
mov
enter
gs
loopne
stos
pop
sahf
in
leave
mov
rcll
mov
mov
and
mov
push
add
mov
pop
stc
jle
mov
fwait
pushf
mov
jecxz
dec
and
pop
fcoms
mov
iret
xor
fwait
xchg
mov
es
lahf
mov
push
xor
in
je
repnz
pop
mov
inc
sub
or
mov
pop
pop
sahf
adc
lcall
sub
add
lahf
sbb
imul
pop
mov
adc
sahf
or
in
cmp
in
xor
shlb
enter
outsl
jecxz
adc
adc
scas
aaa
dec
jecxz
push
int3
jno
lods
mov
xchg
mov
push
rcrl
sbb
push
arpl
adc
sahf
sbb
lds
or
icebp
xlat
mov
and
test
sarl
cmovae
jae
test
sarb
and
pop
xor
mov
mov
sub
repz
push
mov
add
out
cld
or
mov
add
rorl
sub
adc
and
jecxz
xor
jnp
sub
popf
fsts
lcall
fucomip
inc
repz
or
push
pop
and
sbb
mov
sub
xchg
aas
cmp
mov
ja
push
mov
jge
jb
stos
adc
loop
pop
cli
lret
into
out
mov
mov
jno
xor
in
adc
push
ret
jg
scas
idiv
adc
mov
icebp
das
out
in
fistpll
sbb
cmpsl
loope
push
dec
push
inc
or
adc
lea
call
jmp
sub
mov
pop
or
mov
xor
ficomps
call
rclb
jnp
imul
adc
push
dec
mov
jno
cmpsb
enter
imul
mov
or
insl
mov
push
outsb
sbb
jecxz
stos
and
ret
inc
xor
push
cmp
adc
js
mov
fcos
ret
adc
loope
mov
out
or
add
and
cli
adc
and
subl
mov
stc
xchg
pop
add
hlt
fiadds
or
dec
xor
loope
sti
and
cwtl
fsubs
in
rcll
or
bts
mov
fnstenv
fildl
mov
or
cmpsb
es
movsb
mov
fdivl
int3
mov
adc
mov
or
ret
xor
fstpt
pop
repnz
adc
lcall
push
sbb
xor
xchg
adc
push
fcmovnb
or
mov
xor
nop
loop,pn
lcall
fld
push
cs
mov
call
ret
icebp
outsb
mov
inc
addl
xchg
pushf
xlat
mov
out
inc
out
push
pop
test
int3
dec
cmp
hlt
fsqrt
jne
adc
mov
adc
dec
push
pop
leave
pop
ret
mov
adc
or
bound
xchg
jb
subb
popf
jg
mov
mov
pop
je
mov
mov
dec
outsl
hlt
jo
imul
jno
jo
dec
loopne
lahf
fmuls
rcl
and
sti
mov
mov
test
addr16
ficoml
adc
punpcklbw
jecxz
fisttpl
jns
clc
sub
rcrl
shrl
jo
inc
xor
adc
test
inc
aaa
es
cmp
aad
cmc
mov
xor
std
pop
push
pop
stc
inc
mov
add
loopne
cmp
sub
sbb
cmp
out
inc
in
pusha
push
push
lret
cli
les
mov
imul
cmc
cmp
jmp
dec
dec
dec
ret
mov
mov
pop
insb
arpl
insl
mov
xor
in
xchg
fwait
or
sub
jb
js
ss
int3
int3
stos
lods
jge
pop
pop
and
xorl
std
jmp
lea
sbb
pop
inc
test
dec
or
imul
jecxz
and
std
xorl
repnz
les
jb
dec
jmp
cmp
fcoms
adc
mov
push
scas
pop
fstl
pop
sub
sahf
jmp
lea
mov
scas
or
inc
xor
and
and
sub
leave
pushf
cmp
inc
mov
in
pop
push
and
cwtl
shrl
or
mov
jmp
xor
iret
push
pop
inc
pushf
push
lods
mov
adc
cmp
ds
cmp
xchg
cmp
mov
cmp
xorb
sbb
orl
mov
int3
repnz
cmp
popa
push
aaa
dec
cmp
imul
mov
sahf
outsl
movsb
add
or
and
sarb
push
sbb
inc
mov
aas
sbb
xor
mov
and
dec
push
mov
scas
fs
jp
jmp
add
outsl
cli
daa
mov
pop
ljmp
jl
fdivrp
lret
mov
xor
call
and
push
lret
stos
jbe
pusha
inc
jno
or
push
dec
loopne
mov
dec
movsb
out
xchg
fistpll
jnp
cmp
jno
jl
cld
in
cmpsl
mov
imull
pop
cmp
fdivrs
int
sub
mov
inc
xorb
mov
push
pop
pop
mov
es
push
sub
scas
fldl
sysexit
cmc
pop
negb
test
pop
ret
sarb
sub
out
sub
ret
mov
xorb
or
popa
or
mov
fcoml
cmp
mov
iret
mov
cmpl
pop
or
lcall
in
mov
ljmp
ljmp
or
repnz
or
pop
jae
push
in
push
xorl
xchg
leave
js
jge
cmp
aaa
popa
enter
shrl
addl
mov
das
mov
jl
mov
inc
mov
popa
sbb
repz
xchg
xor
cmp
xchg
mov
bnd
ljmp
js
lock
fs
pusha
out
jbe
fstl
inc
mov
lods
notl
jmp
jmp
stos
pushf
xchg
neg
fnstcw
push
call
mov
xor
mov
and
sbb
cmpsb
pop
jae
inc
pop
adcl
adc
std
adc
inc
xor
outsb
ja
cmpsb
stos
jb
aas
not
pop
arpl
inc
add
inc
sub
les
sbb
jo
cmp
jno
xor
pop
mov
jp
ljmp
es
xor
add
push
and
or
in
pop
add
imul
jmp
mov
popa
rcrb
xchg
stos
mov
decb
xchg
and
dec
jge
push
pop
sbb
lea
imul
push
xor
sbb
out
lods
pop
mov
shl
mov
sub
in
jecxz
ror
pop
in
mov
push
add
mov
mov
adc
pop
leave
in
jns
inc
push
enter
fsubs
and
push
dec
daa
push
jmp
mov
aaa
mov
push
and
pop
lret
in
and
jl
ret
add
pusha
jp
mov
inc
mov
sub
out
and
je
jg
mov
dec
cmc
out
or
add
or
cmpsb
int3
int
mov
jmp
cmpsl
les
mov
dec
fstps
imul
xchg
cltd
push
gs
mov
push
and
and
xor
cmp
mov
jle
cmp
xchg
std
xchg
js
xchg
int3
fsubrl
leave
pusha
adc
jnp
jp
ret
sub
pop
int
xor
mov
fcomps
pop
mov
arpl
cmp
in
cmpsl
sub
push
addr16
xchg
popf
or
sbb
add
sub
push
cli
popf
mov
add
sub
test
adc
mov
pavgb
stos
xchg
add
adc
cmp
push
cld
dec
popa
cs
jo
jbe
in
mov
fmuls
push
sbb
jmp
sub
shll
pop
cmp
repz
ret
test
jp
cmp
jmp
push
inc
call
lret
push
call
pop
jbe
fisttpll
daa
inc
push
out
inc
dec
mov
mov
xchg
dec
daa
xchg
imul
push
idivl
pop
movsl
adc
mov
add
mov
xor
cmp
jnp
xchg
sbb
push
out
lds
inc
rcrl
popa
mov
loopne
dec
mov
insl
or
js
sub
mov
lret
imul
sub
xchg
jle
incb
cmp
ja
es
aad
shrl
jae
add
std
or
pop
mov
imul
sbb
push
and
mov
xlat
stos
push
adc
adc
cmpb
and
and
jg
mov
mov
xchg
pushf
push
adc
enter
cli
mov
popa
mov
es
cmp
sub
scas
shrb
or
cs
insl
mov
lret
mov
fnstsw
or
inc
sar
addr16
lea
xor
sub
mov
cmp
dec
gs
lret
add
stc
ret
or
lret
xor
cmp
mov
mov
incl
out
in
pushf
jle
or
pop
hlt
and
cli
fdivs
cmp
dec
lods
adc
ss
inc
push
xorb
lock
je
jecxz
lret
sarl
xchg
repz
lret
push
mov
sbb
ret
rcll
add
jb
dec
les
js
and
xlat
scas
stos
mov
mov
mov
inc
xor
inc
or
sbb
mov
mov
les
cmpsl
xor
xchg
xchg
mov
adcl
jnp
cltd
or
test
out
fimull
cmc
xchg
inc
in
xor
jl
rolb
out
shlb
shll
repz
test
dec
shrb
jg
mov
scas
inc
mov
bound
inc
push
cmp
sub
add
push
out
mov
pop
or
sti
in
push
popf
or
ss
cwtl
pushf
and
sub
jp
mov
lea
push
add
mov
lret
cmp
int3
mov
insl
and
xchg
mov
bound
test
sbb
push
xchg
in
dec
dec
fsubp
not
movsb
adc
clc
push
lods
push
je
or
mov
or
pop
popa
outsb
pop
and
mov
cli
jb
imul
add
fsubp
push
fidivrs
jle
scas
cmpsl
into
adcl
or
call
adc
cwtl
inc
jnp
dec
enter
in
pop
pop
popf
push
push
push
shlb
cmp
mov
loop
xorl
scas
scas
jo
lcall
in
fdivp
push
lods
jp
sub
mov
and
push
and
push
int
pop
pushf
call
sbb
pusha
outsb
push
inc
lret
adc
mov
push
add
shrb
xor
popf
add
sbb
aas
jge
imul
inc
jae
hlt
xchg
repz
inc
fneni(8087
out
jle
jae
lahf
jp
jle
cmc
scas
mov
push
outsb
sbb
mov
xchg
pop
dec
jp
ds
sub
or
stc
decb
mov
dec
pop
sahf
or
lds
outsb
add
mov
shrl
add
mov
lea
popf
ret
ja
dec
decl
fldenv
and
pop
stos
dec
inc
or
in
xchg
in
xchg
jg
pop
xor
cwtl
mov
mov
iret
add
and
pushf
mov
call
mov
sti
fldenv
or
pop
repnz
pop
sub
gs
cmc
inc
dec
stc
jbe
push
cmc
add
iret
mov
mov
into
mov
insb
dec
and
mov
xchg
stc
jbe
mov
daa
and
mov
pop
sbb
popf
daa
cmp
popf
daa
xchg
fs
loop
xor
add
jecxz
lods
je
mov
push
and
adc
dec
cs
lret
lods
push
push
pop
add
cli
mov
jmp
inc
cld
mov
mov
fadds
cmp
sub
imul
xor
pop
outsb
sbb
bound
mov
scas
jecxz
in
push
cmp
pop
or
mov
loope
insl
pop
add
cmp
enter
ret
leave
aad
cli
mov
js
stos
pop
jg
insb
jns
pop
xchg
fimuls
dec
lock
push
pop
loopne
sbb
sub
rcrl
inc
mov
dec
or
mov
inc
jg
mov
push
test
insb
sbb
xchg
fstl
int
fildl
mov
xchg
scas
sbb
sbb
cmpsl
dec
mov
cmp
push
sbb
or
xchg
sbb
mov
mov
in
cmpsl
sub
mov
xchg
or
push
ja
outsl
xorb
inc
shll
cmp
ja
sbb
nop
jae
mov
adc
rorb
and
mov
pop
je
bound
movsl
insb
pop
lret
lock
fistpll
shll
ret
sbb
mov
fistpl
push
and
sub
mov
jo
inc
mov
add
nop
mov
loop
add
adc
push
js
imul
jl
fidivl
sbb
pop
lea
loopne
and
lret
xchg
sub
push
mov
or
sbb
add
sbb
mov
loope
push
dec
jle
cmc
and
jnp
outsl
sub
xchg
add
mov
aaa
pop
push
je
adc
fidivrs
rorb
xorb
xchg
idiv
add
xor
loopne
sbb
loop
or
sbb
pop
daa
pop
mov
adc
pushf
mov
dec
aas
lods
hlt
push
decl
push
into
or
negb
push
sti
sub
pushl
aad
lock
push
sbb
and
sub
je
push
push
imulb
dec
lcall
mov
icebp
push
pusha
movsl
mov
in
addr16
jg
sub
sbbb
jl
or
clc
xchg
or
mov
icebp
cs
mov
xor
aas
mov
mov
dec
cmp
add
sbbl
mov
inc
test
mov
call
lods
add
sub
jbe
pop
mov
shufps
aas
mov
jns
pop
cmp
enter
xor
mov
ja
repz
lahf
add
sbb
mov
das
stc
dec
leave
push
xor
sbb
arpl
lock
cmp
push
test
xor
pop
or
push
test
and
fmuls
leave
shlb
insl
jae
fists
aam
jmp
add
xchg
and
cmpsb
pop
adc
lahf
data16
outsb
cmpb
pop
scas
push
push
jo
outsb
cltd
movsb
int
xor
dec
jg
ret
in
leave
cmp
enter
js
mov
sbb
popf
add
xor
movsl
xlat
fnstcw
outsb
xchg
fs
adc
jb
or
in
pop
jge
in
daa
movsb
dec
sub
jb
inc
push
fsub
comiss
xchg
pop
test
mov
add
dec
gs
mov
pop
cs
sti
je
lods
sub
adc
clc
mov
push
in
test
sbb
imul
or
jmp
add
movaps
jns
adc
in
daa
sahf
inc
fwait
jnp
loope
repnz
fldl
dec
call
or
or
sub
loop
cmp
imul
and
out
jb
pop
jb
into
setle
jl
dec
mov
pop
mov
fldenv
out
sbb
in
arpl
push
aaa
fcomps
pop
imul
insl
test
or
inc
jne
in
push
pop
lret
jecxz
mov
enter
xchg
or
push
out
xchg
rorb
or
nop
or
sub
push
stc
pushf
push
ret
icebp
lret
lock
inc
mov
mov
cmp
cmp
jae
lods
dec
ds
jmp
mov
mov
jmp
aad
mov
mov
dec
and
loope
lea
xchg
jle
cmpsl
daa
jecxz
pop
jo
mov
push
roll
cwtl
push
sbb
cmpsb
call
pusha
adc
add
test
icebp
add
mov
arpl
rep
movsl
pop
and
repz
dec
leave
nop
sti
mov
rorb
jae
mov
dec
clc
jne
out
fistps
xor
lods
sub
mov
pushf
lahf
movsl
push
lods
xchg
mov
cmp
inc
mov
loop
push
inc
shll
cli
push
jg
jne
outsb
jl
sbb
mov
add
mov
stos
test
insb
xchg
xchg
add
mov
or
sbb
or
cmp
mov
rclb
jecxz
cli
js
dec
mov
dec
insb
pop
mov
mov
mov
into
cmp
fidivrs
movsl
outsb
push
fidivrs
or
ret
repz
pop
jl
cltd
lods
insb
pop
test
das
push
out
fidivs
cmpsl
nop
adc
or
mov
pop
int3
xor
xchg
cli
fbstp
sub
aaa
xchg
mov
sub
ret
cs
ss
or
ds
arpl
dec
outsl
movb
in
iret
adc
daa
bound
mov
sarb
mov
ds
pushf
and
lock
inc
imul
and
out
addr16
dec
jb
data16
ljmp
cwtl
arpl
cmp
hlt
jle
ljmp
inc
mov
loop
test
in
ja
stos
cmp
sub
out
mov
icebp
push
mov
mov
mov
mov
out
or
popa
mov
shrl
dec
push
sub
inc
sahf
clc
mov
leave
or
xchg
insb
jmp
pusha
test
mov
dec
mov
aam
roll
cltd
leave
pop
lahf
popf
jns
mov
push
xor
inc
stos
sbb
push
mov
jne
pop
dec
pusha
add
scas
sbb
or
sbb
push
scas
sbb
fstl
lret
xchg
cld
insb
mov
aas
cmp
std
dec
test
movsl
call
mov
or
lods
pusha
pushf
or
add
adc
rcll
cmpsl
and
mov
jae
and
call
cmp
icebp
lret
mov
and
mov
mov
xor
xchg
nop
dec
fistpl
addl
pop
jo
xor
xchg
sub
mov
sahf
cwtl
adc
xor
out
jecxz
dec
mov
or
adc
sub
adc
in
test
cmp
popf
lahf
outsl
sub
lcall
in
fists
xchg
jecxz
imul
or
xchg
pop
das
faddl
pop
stos
mov
mov
mov
imul
test
cli
aas
mov
and
leave
inc
bound
stc
call
xchg
xorl
jno
and
and
push
test
ss
lret
into
inc
push
outsb
cmpsb
adc
xchg
adc
push
xor
push
imul
jno,pn
push
inc
dec
or
pop
push
pop
sbb
mov
or
dec
lahf
leave
adc
enter
cmpsb
add
adc
inc
mov
pop
sbb
and
popf
pushf
test
pushf
shll
mov
dec
enter
and
lcall
sbb
insl
ror
inc
lods
jne
pop
int3
aas
or
xor
ss
cmp
mov
movsb
adc
mov
adc
bound
jbe
stos
arpl
std
popf
cmp
cmpsl
or
popa
imul
pop
ret
jno
sub
pop
test
push
in
or
jle
sub
sbb
imul
sbb
lods
cmovs
and
scas
push
subl
sbb
lods
mov
and
ret
sarb
cmpsl
mov
xchg
mov
inc
sub
mov
fadds
rcll
imul
fldt
stos
xor
mov
jno
lcall
jbe
testl
test
cmp
xor
add
xchg
fnstsw
push
stos
ja
mov
add
andb
inc
aad
aas
bnd
data16
dec
jae
test
and
adc
pop
in
xor
loop
out
mov
les
push
test
pop
js
cwtl
sahf
dec
cmp
xchg
test
xchg
into
push
xchg
fisttpl
sub
sbb
mov
into
add
xchg
mov
out
loopne
mov
mov
push
mov
push
jb
dec
push
mov
imull
pop
sbb
inc
pop
in
add
test
mov
pop
idivl
cmp
mov
mov
and
ret
stos
jb
sbb
cmc
push
pop
cli
sbb
sbb
out
pop
lret
cmpsl
cmp
lcall
aad
aas
push
adc
in
mov
movsl
mov
int3
lcall
sbbl
loopne
jns
and
int
je
outsb
push
inc
or
mov
push
sbb
xor
adc
add
mov
add
popf
xorb
mov
or
or
sti
mov
fwait
xchg
into
xor
lret
or
dec
sbb
jno
mov
icebp
mov
testl
pop
sub
mov
pop
add
mov
cs
push
cmp
scas
mov
pop
mov
leave
int3
pop
xchg
insb
or
cltd
pop
roll
out
adc
dec
jnp
orl
jnp
xchg
jl
sarl
jl
or
cmp
stos
movsb
mov
stc
fcomps
sahf
loopne
ss
pop
loope
icebp
out
into
mov
push
adc
sub
insb
gs
cwtl
ret
rcl
xchg
fdivrp
and
inc
test
push
adc
xor
xchg
cmp
mov
xchg
cmpsb
or
leave
adc
in
adc
adc
into
pop
cmpsb
push
dec
mov
lds
loop
jns
push
push
mov
push
jae
outsb
btr
in
mov
xchg
mov
jmp
jge
loop
push
int
mov
push
adc
test
popf
pop
jge
fs
pop
filds
mov
sub
mov
fnstenv
and
mov
movsl
jmp
jecxz
cs
inc
adcl
xchg
ljmp
jbe
shlb
rorl
movsb
xchg
lcall
and
mov
adc
adc
iret
pop
rep
pusha
ror
sahf
mov
adc
stos
mov
enter
xor
subb
dec
adc
into
std
adc
movsl
adc
scas
addr16
add
add
fisttpll
test
adc
push
mov
cltd
jl
aas
cmp
dec
and
xor
sbb
ret
xchg
addb
jmp
lods
std
fists
xor
jl
dec
adc
add
dec
cmc
sarb
insl
xor
in
adc
xor
mov
mov
and
xchg
ret
fnstsw
lret
mov
add
cmp
sarb
mov
in
mov
pop
xor
daa
add
lret
pop
inc
lahf
xchg
lds
fwait
mov
rolb
sub
xlat
ftst
xor
jl
fldenv
iret
sbb
ret
out
outsl
xchg
inc
jns
xor
add
add
mov
addr16
lea
leave
fwait
pop
xor
das
fwait
and
inc
pop
stos
or
fiaddl
push
sbb
mov
sbb
or
or
cmp
pop
xchg
inc
and
add
je
jns
je
jle
shrb
mov
push
add
sbb
xor
xchg
insl
divb
push
jge
mov
psrlw
mov
addl
rclb
mov
out
or
dec
fmul
xchg
or
cmp
cmpsl
pop
and
dec
pop
adc
dec
jne
outsl
js
loopne
sub
xchg
sub
xor
add
mov
repz
in
test
scas
add
int
stos
mov
jnp
leave
mov
call
test
inc
in
lock
lret
or
scas
xchg
inc
cmpsb
pop
lret
arpl
loop
jno
adcb
ljmp
fyl2xp1
gs
jae
mov
fiadds
lcall
pop
mov
xchg
mov
test
addr16
push
aaa
sbb
or
adc
cmc
sbb
or
lret
adc
dec
loop
gs
mov
enter
js
sub
incb
xor
enter
addr16
jnp
jecxz
sahf
sahf
dec
cmp
movsl
mov
dec
testl
and
negl
shrl
xor
xchg
arpl
dec
in
pop
and
jg
xchg
setno
xlat
dec
lcall
in
ljmp
fstps
das
into
cmpsb
push
sbb
loop
xor
and
je
pop
stos
xorl
xchg
adc
push
pop
jnp
inc
call
xchg
pop
jecxz
out
inc
cmp
fs
stc
jns
stos
add
jg
mov
mov
dec
out
sub
mov
jb
ds
xchg
xchg
int
fwait
mov
fidivl
push
roll
test
mov
jbe
cmp
fdivr
cmp
mov
cli
arpl
scas
inc
iret
xchg
sbb
rolb
cs
fwait
add
mov
pop
xchg
adc
sub
inc
mov
popa
outsb
ret
call
ja
inc
adc
popf
lahf
mov
ljmp
add
lret
xchg
inc
imull
mov
out
movl
dec
jbe
sbb
jo
shl
gs
mov
inc
xchg
cmpl
cmp
idivb
sbb
mov
outsb
mov
and
test
cmp
xchg
mov
sbb
xchg
xchg
mov
mov
mov
movsb
lahf
shll
mov
mov
inc
push
add
es
add
js
cmpsb
jp
into
pop
mov
test
in
popf
hlt
sub
xchg
jb
ret
dec
lock
mov
std
shrb
xor
xchg
mov
sub
cld
mov
enter
sbb
xchg
ja
adc
sbb
and
imul
nop
movsb
lcall
mov
cmpsb
sbb
push
aaa
xor
loopne
push
adc
decb
sub
incl
leave
or
aas
jg
movsb
mov
add
adc
ss
sbb
adc
cmp
cmp
xchg
adc
add
adc
dec
fwait
sahf
fmuls
add
movsl
or
mov
sbb
jp
mov
pop
cmp
pop
and
icebp
or
incb
sub
mov
call
in
jno
dec
jge
mov
adc
mov
xlat
mov
mov
sub
mov
in
push
inc
arpl
aad
das
mov
lret
fisttpll
aaa
dec
in
cmc
lahf
cmp
lods
inc
xor
sub
fdivrs
daa
dec
movsl
out
rcrl
dec
mov
mov
xor
inc
int
fucom
inc
pop
add
shlb
push
inc
and
mov
or
fldcw
push
jnp
push
ret
adc
xor
push
mov
sbb
loopne
sahf
mov
xor
jae
add
mov
int
xchg
test
inc
mov
push
rclb
mov
cmp
fbld
daa
push
xchg
adc
inc
imul
cmp
mov
dec
shlb
aas
stos
xor
fadds
mov
loopne
popf
sbb
mov
jae
stc
add
push
cltd
aas
das
sub
lcall
outsl
clc
xchg
das
pop
in
out
xor
ss
mov
fists
xor
xlat
iret
out
pushf
in
mov
sub
sub
mov
sub
add
and
pop
dec
fistpll
movsl
decb
push
int3
jp
call
dec
jmp
stos
xchg
xchg
enter
sahf
lods
dec
js
aam
add
lock
jg
xor
xchg
cmp
or
popf
lds
inc
mov
jle
mov
cmp
lods
add
lret
jg
insl
mov
mov
or
add
or
loope
jp
loop
test
outsb
cmpl
dec
in
pop
repnz
xor
cld
das
repz
xor
mov
cmp
scas
mov
pop
jnp
jmp
arpl
fstpt
pushf
ret
sarl
js
and
xor
inc
or
xchg
sub
insb
xor
arpl
fwait
add
dec
mov
lods
enter
add
icebp
out
popf
lret
and
push
sbb
mov
int3
sbb
stos
aad
fistpll
pop
inc
repz
adc
jno
ret
dec
mov
fbld
sub
shrd
cld
fcoms
adcb
push
in
mov
mov
stc
pushf
add
shl
fdivrs
sbb
es
sbb
sub
jo
fisttps
cmp
push
ds
mov
lret
mov
mov
cmp
loopne
and
pop
ss
mov
sahf
cltd
pop
pushl
pop
clc
mov
push
mov
push
fs
lahf
mov
mov
sbb
inc
lods
adc
mov
in
mov
mov
xor
into
cmp
jl
lret
lds
arpl
and
xor
mov
addr16
mov
loop
jno
insb
imul
mov
nop
xchg
ja
xchg
scas
push
pop
das
cmp
and
xorb
push
jp
pop
repnz
xchg
mov
or
out
ljmp
pop
cmpsl
push
xchg
mov
lret
sub
sub
shl
add
push
addb
cmc
or
jge
push
testl
fnsave
push
inc
outsb
xchg
in
cs
add
sti
sub
xchg
stc
popf
test
push
adc
sbb
mov
push
sbb
mov
adc
or
lods
je
mov
into
in
stos
lods
test
pop
in
scas
out
lods
jnp
fcom
les
test
bound
stc
adc
or
jae
jo
jmp
xchg
outsl
lcall
push
pusha
in
cli
push
sub
dec
int
or
pop
xchg
repnz
sbb
test
mov
ficomps
dec
adc
sub
js
cmp
mov
cmpl
xor
push
daa
pop
add
loope
ljmp
loopne
gs
or
push
sub
xchg
xor
fldenv
pop
xchg
mov
mov
ss
jns
dec
xchg
sub
add
pusha
scas
clc
sbb
cltd
fistps
iret
mov
popa
out
ret
push
cmc
or
sub
cltd
sbb
sub
jg
in
and
daa
jo
insb
cmp
push
cli
xchg
lahf
push
out
out
or
adcl
scas
andl
pop
adc
data16
ret
xchg
fdivs
or
jecxz
cmp
jmp
int
mov
inc
jle
je
adc
push
rorb
popf
mov
mov
inc
sub
loop
jno
mov
lods
int3
sub
cli
and
out
push
xor
js
xchg
loope
jo
scas
xchg
cmp
shl
aad
add
ja
xor
stos
in
out
cmpsb
ret
pop
inc
movsb
mov
pop
sub
shll
jnp
ds
data16
inc
mov
pushf
or
pop
cmpsl
insl
adc
and
jmp
pop
scas
pop
shlb
xchg
xchg
or
mov
cmp
sub
pop
ja
mov
cmp
rcl
loopne
sub
xchg
std
cmp
pop
lock
lods
shll
adc
pop
sbb
out
lods
in
popa
sbb
aas
into
push
mov
stos
jno
fcomip
mov
xchg
movsl
cmpsb
adc
mov
call
mov
push
shrb
sub
in
xlat
adc
pop
sub
inc
ljmp
ds
cmp
push
outsb
adc
lret
pop
lcall
pop
out
movsb
addr16
adc
mov
sbb
push
mov
jae
pop
inc
pop
lods
clc
int
mov
sbb
andl
push
lret
sub
push
mov
out
jecxz
inc
das
push
cmp
mov
fcmovu
inc
pop
and
xchg
out
out
sbb
negb
sahf
dec
outsb
mov
mov
lahf
jle
popa
in
nop
clc
xor
std
xchg
xlat
cld
outsl
mov
out
xlat
leave
sub
dec
imul
sahf
cs
cmc
and
xchg
mov
pusha
add
pop
stc
rorl
inc
cmp
pop
sbb
cmp
push
cmp
add
nop
or
shr
xchg
adc
mov
rcr
clc
fstps
loope
ljmp
fs
dec
cmpsb
pop
or
test
lret
dec
fwait
pop
push
rcr
fisubrs
jno
iret
sahf
jle
jne
in
and
daa
pop
sbb
dec
fstl
cmpsl
lret
gs
sub
idivb
ret
mov
mov
jno
lahf
sbb
into
mov
cmc
push
xchg
movsb
andb
push
pop
out
roll
xorb
lcall
sahf
out
mov
xchg
add
insb
mov
or
jp
cmp
js
aad
sbb
iret
mov
out
mov
fs
dec
mov
clc
cmc
sahf
jmp
aaa
aas
mov
dec
jae
mov
lods
addr16
testl
cmp
mov
jp
cmc
movsb
ja
mov
arpl
jns
sbb
outsl
push
jo
icebp
aaa
dec
jge
fldl
fwait
movsl
xchg
xchg
cmpb
inc
clc
ss
mov
pop
inc
pop
enter
lds
mov
test
dec
pop
dec
test
add
out
mov
mov
ret
fidivl
add
imul
rorb
jb
mov
lahf
mov
or
inc
clc
adc
icebp
sub
int
call
xchg
xor
or
sbb
push
flds
sbb
lcall
test
xor
out
and
push
sub
addr16
xor
or
adc
pop
xor
and
cwtl
push
decb
mov
int
lahf
push
inc
ja
test
repz
cwtl
sbb
jmp
sbb
mov
int
in
push
lods
sub
les
xchg
ja
cmpsl
lcall
pop
jmp
and
lea
or
jge
lret
jge
lahf
push
iret
jne
pusha
sarl
push
cs
mov
pop
xchg
cmc
cmp
stos
gs
mov
dec
push
ds
mov
inc
clc
dec
jne
push
xchg
mov
adc
mov
fs
pop
jge
mov
int
sti
add
sbb
pushf
xchg
stos
ja
cmp
dec
loop
mov
push
xchg
add
aaa
and
pop
lret
cmp
mov
rorl
cmpsb
in
sub
and
mov
or
sbb
shll
adc
mov
subl
aam
hlt
cli
lcall
inc
adc
outsb
dec
in
jo
fadds
mov
pop
dec
mov
lret
jl
loop
pushl
cmp
add
lock
imull
dec
mov
lret
sbb
nop
add
push
test
sub
xchg
adc
cld
sub
mov
pop
std
push
jne
fs
or
mov
xchg
jno
pop
push
loope
cltd
xchg
sbb
outsl
xchg
ja
outsb
ret
stos
inc
xor
sbb
mov
stc
cli
out
std
cmp
pop
mov
insl
in
and
test
cmp
test
out
mov
xchg
cmp
adc
add
inc
or
fcmove
outsb
imul
push
cmpsl
mov
lret
xor
sbb
xor
xor
inc
shl
lret
in
repnz
add
aad
loope
imul
and
lret
jg
jae
xchg
jg
xchg
and
cld
roll
mov
pop
ret
xchg
lahf
mov
cmpsl
ret
add
inc
mull
add
xchg
rorb
gs
mov
push
mov
sahf
lock
or
fs
cmp
stos
fcmovnbe
push
xchg
mov
xchg
or
sub
cltd
push
or
mov
mov
and
and
decb
jge
dec
jo
mov
adcl
add
test
mov
mov
cld
imul
mov
xor
jle
icebp
xchg
leave
stos
mov
push
jle
mov
mov
jg
test
adc
rorl
mov
iret
push
testl
out
movsb
dec
mov
outsb
std
inc
mov
push
jl
cld
jbe
adc
hlt
pop
and
outsb
lahf
lcall
xchg
test
into
jge
dec
leave
pop
test
add
gs
cmp
cld
imul
xlat
push
jmp
or
and
push
shll
add
add
cmp
push
push
lock
stc
push
inc
and
rorl
and
adc
sbbl
cltd
dec
lods
lea
dec
hlt
mov
and
and
mov
repnz
sbb
sbb
and
fs
lahf
jne
push
pop
pusha
mov
dec
jb
test
ss
movsl
les
cmp
movsb
lock
pusha
adc
sbb
sbb
push
lret
out
loopne
push
cmc
call
fstpt
mov
or
or
or
and
sbb
in
aas
push
jcxz
mov
sbb
dec
daa
orl
pop
ja
out
inc
rcrb
addr16
jno
cmp
mov
add
ret
ljmp
cld
xor
push
out
inc
sbb
clc
jp
imul
rcrl
roll
xor
xor
and
push
adc
add
xchg
push
imul
mov
nop
repz
pop
fwait
ljmp
in
add
or
insb
inc
pop
sbb
mov
hlt
add
and
outsl
es
mov
in
sbb
mov
fists
hlt
jbe
dec
xchg
sbb
negb
jns
lret
mov
fadd
lret
mov
mov
mov
inc
sub
inc
dec
rclb
js
sbb
dec
jns
jl
jnp
push
mov
sub
mov
dec
sti
cmpsb
add
shl
push
aas
aaa
cwtl
cmpb
jmp
add
or
adc
out
cli
cmp
or
or
push
aas
pop
repnz
jg
js
lods
cmp
dec
scas
sub
push
mov
lret
adc
lock
popa
push
fwait
out
lock
push
push
shll
sbb
out
xor
mov
xor
jecxz
dec
sub
jne
push
inc
mov
jo
loopne
mov
andl
push
movsl
popa
inc
push
cmpsb
lock
scas
out
data16
das
rorl
stos
test
jmp
stos
test
jecxz
mov
or
xlat
imull
inc
jae
sti
or
xlat
mov
or
or
stc
pop
call
outsb
cmp
mov
push
sbb
mov
std
lcall
sbb
jo
stc
mov
or
lock
mov
push
xchg
shufps
jne
mov
push
lods
jno
lds
in
jl
mov
xchg
dec
inc
push
into
scas
fs
out
xchg
shlb
pop
aad
jns
pushl
xchg
fs
fbld
xchg
jb
inc
mov
fmuls
repnz
subb
aas
inc
sbbl
dec
out
lds
out
lds
push
ds
sgdtl
lods
jg
out
arpl
call
push
dec
dec
pop
ret
cmp
mull
sub
cmp
scas
jmp
jae
sbb
push
sbb
repz
in
inc
mov
cmp
in
jne
lock
add
int
fstps
dec
pop
sahf
mov
in
push
lret
add
push
addl
jbe,pt
mov
inc
jns
dec
or
push
nop
sbb
lea
add
mov
hlt
jo,pt
negl
fwait
sbb
mov
or
in
cmpsl
jge
out
fucom
jle
add
jne
or
cmp
cmpsb
mov
xchg
mov
iret
add
inc
ret
lods
adc
pusha
aas
mov
fs
jb
mov
pop
xlat
jbe
pop
xchg
or
cmp
cmpsl
dec
mov
addr16
xor
pushf
jb
pop
push
xchg
aam
loopne
cmp
or
sbb
lds
pushf
mov
subb
adc
fisubrs
jne
cmp
cmp
xchg
in
test
sub
lret
loop
orb
sbb
inc
xor
out
cwtl
gs
popa
jmp
or
cmpsl
lret
and
imul
lods
int
pop
cmp
add
cwtl
sub
cmp
mov
in
mov
inc
mov
clc
jb
push
or
fnstcw
hlt
loopne
cmp
or
jecxz
scas
mov
scas
dec
pop
dec
mov
out
sar
push
std
mov
mov
ljmp
test
dec
adc
dec
in
sub
mov
pop
xchg
and
lahf
popa
ds
je
and
shlb
dec
pop
aam
jp
mov
test
fisubrs
cmpb
pushf
dec
loopne
sti
mov
inc
add
xchg
dec
push
mov
jmp
add
enter
fldt
jl
out
fildl
movsb
es
fbld
test
dec
cmpl
insl
inc
testb
clc
xchg
adc
out
js
sub
data16
or
cltd
xchg
push
push
out
jp
mov
dec
repz
pusha
mov
test
pop
push
clc
lock
pop
inc
in
push
int3
xchg
xor
lods
lods
popa
insb
sbb
jnp
cmpsb
jmp
sti
sub
lahf
jae
imul
lcall
xor
addr16
push
ja
jecxz
inc
leave
clc
aaa
lret
popf
xor
lahf
fildl
pop
fwait
pop
sbb
in
popf
jg
js
lea
xchg
std
mov
aam
out
jmp
cmpl
and
fldl2t
xchg
sub
or
mov
jo
je
mov
pusha
xchg
sbb
xchg
xchg
in
mov
xchg
dec
push
daa
and
clc
adc
mov
dec
aam
aas
outsb
mov
outsl
out
bnd
inc
test
jp
inc
or
cmp
aad
pop
and
sub
fwait
mov
add
adc
cltd
lea
and
jo,pn
jo
adc
ret
dec
and
push
lds
mov
xor
mov
mov
xchg
mov
xchg
movsl
js
dec
mov
lods
icebp
or
dec
adc
xchg
jno
les
dec
ljmp
test
aam
ss
fldt
xor
or
pop
mov
jl
test
sub
xchg
jge
dec
addb
or
stos
fisubrs
ds
adc
fmul
mov
rcrb
test
lods
pop
and
into
movsb
nop
popa
xchg
lcall
pop
inc
stos
dec
pusha
push
into
test
xor
loope
jecxz
mov
xchg
mov
lods
aaa
leave
mov
and
jns
mov
xchg
lea
push
cmpsb
nop
fistl
cmpsl
xor
out
inc
fwait
aad
arpl
mov
stc
mov
mov
data16
mov
andb
fnstenv
inc
or
popa
cli
jne
add
sbbb
js
daa
sti
or
jo
cmc
push
leave
cli
push
das
mov
jge
jb
xor
xchg
in
jl
jns
xor
jecxz
lds
mov
xor
call
xchg
lcall
dec
cmp
icebp
jle
add
dec
movsl
xchg
les
fisttps
fsts
jecxz
xchg
cmp
jbe
push
aam
xor
dec
notb
fcomip
mov
in
cmp
subb
dec
pop
and
enter
aaa
push
pop
push
data16
add
jp
sbb
pushf
mov
cmp
stos
fisttpll
push
lods
shlb
pop
pop
jg
js
std
jns
pop
dec
jb
out
fbld
lret
jl
mov
push
xor
mulps
jnp
cmc
hlt
imul
xchg
or
repnz
jne
ljmp
mov
jecxz,pt
sub
fucomi
sbb
stos
xchg
shr
add
lahf
add
jnp
cmpsl
dec
fcoms
add
into
icebp
jp
or
mov
arpl
mov
jns
in
adc
fstpl
add
add
and
cmp
xchg
std
ficoml
pop
fmull
add
scas
xchg
cltd
test
lods
ds
adc
js
add
in
out
sbb
cmp
aaa
loope
inc
dec
or
gs
lcall
inc
scas
push
dec
repz
sti
das
int
mov
call
into
stc
pop
cmp
inc
mov
dec
lret
fcomi
jb
nop
call
lock
xor
sub
or
pop
xor
pop
dec
hlt
inc
arpl
sbb
pop
pop
repz
es
je
adc
xlat
add
adc
mov
test
xchg
out
shl
jecxz
in
hlt
inc
les
aam
xor
pop
js
pop
pop
pop
insl
cld
lock
arpl
cli
inc
mov
arpl
push
mov
sbb
or
and
xor
mov
lret
sub
sbb
cmp
mov
das
fnstcw
shll
mov
push
sbb
cmp
xchg
mov
mov
fcoms
lds
es
cltd
ljmp
mov
aas
icebp
jno
jecxz
xlat
sbb
es
lret
pop
or
movsb
fisubrs
jge
jp
cmp
mov
xchg
cmc
jb
shll
sbb
push
xor
filds
pop
cmp
jge
aaa
dec
xchg
xor
shr
loopne
add
ret
sbb
loopne
inc
mov
int3
int
jecxz
xchg
inc
jg
mov
sbb
and
and
scas
fldt
notb
lock
jecxz
xchg
push
xchg
repnz
adc
inc
sub
pop
fwait
mov
dec
jge
mov
pop
inc
push
push
rorb
mov
jnp
sub
lea
shrb
add
shr
push
das
xlat
faddl
sub
imul
pop
push
lahf
mov
jbe
insl
xor
adc
or
in
leave
pushl
insl
fistps
pop
lock
jo
int
jo
dec
lcall
mov
push
xchg
cmpl
jb
xor
pop
lret
xor
inc
xor
loope
adc
sarb
pop
je
xor
lret
cmp
jle
icebp
movsb
adc
fisubl
push
lcall
inc
push
dec
popa
xchg
sub
jae
jb
inc
leave
iret
call
das
push
mov
adc
adc
or
mov
sub
movsl
enter
mov
push
pop
iret
leave
inc
movsl
push
sbb
cmpsl
imul
push
jbe
sub
xchg
pop
push
adc
sub
test
mov
nop
sub
xchg
mov
push
sbb
inc
jecxz
cs
aaa
lods
adc
pop
and
cmp
test
mov
or
sub
push
pop
test
lock
enter
xchg
add
inc
shr
fstps
mov
jl
jl
test
arpl
xor
arpl
fldcw
mov
sub
pusha
push
jl
inc
pop
leave
sarb
repz
fsubrs
or
ret
addr16
and
push
cwtl
dec
loop
dec
divb
mov
mov
fucomi
pusha
shll
mov
jns
sbb
adc
pop
push
mov
xchg
pop
lods
div
adc
aaa
mov
subb
sub
mov
nop
sub
inc
es
jl
pop
jne
push
jae
pushf
xchg
mov
add
movsl
xchg
fs
jle
lds
xchg
arpl
icebp
push
sbb
push
push
cmc
mov
pushf
or
stos
icebp
in
push
movsl
xlat
push
loope
xor
shl
movsl
push
cmpsb
inc
pop
test
movsb
jg
test
lock
stos
testl
jmp
loopne
mov
sub
cmp
or
inc
adcb
xchg
or
inc
inc
jae
push
sub
leave
dec
shl
movsl
fdivrs
xchg
jno
fldl
call
fdivrl
xchg
in
jno
addb
repz
xchg
sbb
push
xchg
adc
and
push
out
adc
pop
adc
xchg
xor
dec
popf
mov
jg
in
mov
out
inc
dec
xchg
inc
rolb
and
sub
test
rcrl
in
pushf
notb
mov
out
mov
into
cmp
mov
adc
xchg
sub
pop
pop
mov
mulb
mov
repz
xorl
fidivrs
sbb
push
xlat
push
pop
fdivrs
stos
sub
jns
pop
pop
pushw
adcl
decl
mov
lahf
pop
and
xor
push
pop
js
dec
jne
jnp
fidivl
or
push
sbb
or
rorl
xor
push
mov
aad
lods
push
test
sbb
stos
jbe
fldl
sub
xor
cs
int
aas
push
lret
movsb
cmp
addl
scas
push
cwtl
sahf
mov
test
popf
xor
pop
subl
lahf
inc
imul
inc
les
in
sub
mov
fs
in
pop
mov
out
add
adc
cmpsb
xchg
push
out
aam
inc
mov
push
fisttpll
lcall
cmp
jnp
rolb
fsubs
dec
add
and
cmp
pop
out
test
aas
jnp
dec
and
vpunpckldq
push
aaa
fcoml
xor
int
and
dec
popf
mov
scas
incl
inc
leave
cli
enter
add
cmp
into
shrb
pusha
mov
dec
cmp
fs
out
mov
xchg
popa
mul
aad
mov
test
cmc
ss
aam
movsl
fs
mov
jno
sbb
rcrl
dec
jnp
ss
sub
into
xchg
adc
dec
add
mov
shrl
xor
push
pop
add
xor
icebp
fimull
out
add
cmp
inc
ficoms
rol
xchg
mov
lcall
data16
ret
push
pop
fimuls
test
popf
pop
icebp
lret
add
aam
inc
mov
fcmovb
rorb
insb
stos
pop
add
das
or
sub
xchg
or
or
scas
mov
ljmp
lods
insl
xor
xor
dec
mov
imul
mov
xchg
stos
xor
in
cltd
xor
fwait
in
js
mov
and
arpl
ret
jb,pn
jne
es
cmp
push
jns
stc
or
add
les
insb
imul
ret
out
in
js
sub
icebp
adc
aam
fmuls
cmc
fwait
adc
xchg
loopne
pushf
fdivrl
ficoml
js
xor
fadds
sub
lea
xchg
js
jecxz
not
aas
jle
cmp
or
out
sub
lods
or
outsl
orl
lahf
mulb
cmp
in
out
int3
dec
inc
hlt
dec
or
stc
mov
sub
push
out
scas
xor
jnp
cmp
or
sub
sarl
int
outsb
ret
cmc
insb
jp
sbb
xlat
jne
repz
push
fsubs
xor
sbb
cmp
xor
rclb
adc
cmp
dec
into
mov
in
lock
mov
xlat
dec
jns
adc
pop
sbb
sbb
faddl
dec
and
mov
add
mov
mov
orl
in
scas
jecxz
jp
dec
cli
jne
sbb
and
sub
jle
shl
aaa
mov
xor
add
add
sbb
lock
test
fisubrl
mov
mov
fwait
mov
sub
push
push
mov
push
push
adc
test
xchg
das
outsb
aam
out
push
in
in
push
out
stc
push
out
xchg
push
push
in
dec
rsqrtps
xor
das
lods
or
inc
inc
mov
mov
repz
push
ja
inc
insl
clc
push
hlt
push
mov
xor
iret
fincstp
pop
or
push
dec
jecxz
xor
call
pop
lret
in
mov
sub
dec
jmp
mov
push
and
pop
xor
mov
and
pop
iret
pop
test
xchg
adc
aaa
les
orl
jp
cld
cltd
pop
shlb
fisubrl
test
nop
mov
add
les
enter
mov
scas
out
ljmp
push
inc
xor
adc
out
add
and
mov
push
mull
xchg
mov
leave
xor
mov
xchg
push
cli
iret
inc
xchg
nop
iret
cmc
add
dec
int3
ret
ret
je
add
cmp
outsb
jo
js
fisubs
mov
icebp
cwtl
lods
push
push
cmp
lret
xchg
mov
aad
push
scas
sbb
movsb
mov
push
and
cltd
cli
test
mov
adc
shrl
add
insb
leave
adc
cmc
mov
inc
push
fs
out
sahf
inc
xor
rorl
add
fstps
and
repnz
cmp
xor
xchg
and
and
sti
rclb
pop
std
iret
daa
scas
add
mov
lock
sbb
xchg
ss
jns
dec
mov
imul
fadd
sbb
aam
mov
js
iret
cmpsl
mov
push
jg
outsb
sub
xor
or
add
or
pop
xchg
jnp
jl
pop
test
push
aad
subb
stos
nop
ret
jmp
sub
insb
repnz
cmp
mov
mov
ret
fs
push
push
loope
mov
adc
xchg
or
aaa
xlat
jecxz
dec
adc
mov
mov
adc
outsl
fnsave
pop
mov
mov
out
shlb
push
mov
adcb
popf
xchg
pop
jno
mov
mov
pop
xchg
sub
push
in
jae
out
sub
flds
mov
shlb
rclb
hlt
pop
cmp
xchg
jne
dec
jne
jle
scas
dec
dec
cmp
mov
movsl
popa
cmp
jl
mov
aad
push
cmp
jg
sarb
jae
fistps
out
sbb
add
jg
and
rclb
lock
mov
jne
ss
sub
mov
incb
and
lcall
sub
mov
sbb
pop
hlt
test
movb
cmp
sahf
in
adc
outsl
pop
sbb
arpl
pusha
dec
btl
xchg
and
mov
sbb
pop
rcl
pop
or
negl
sub
inc
inc
int
fwait
pop
add
inc
push
out
jg
cmp
inc
or
or
push
fsubrl
push
loop
sbb
sbb
js
pop
lea
pushf
int
aaa
sub
mov
and
jecxz
mov
jno
dec
gs
aas
jmp
imul
mov
inc
pop
divb
dec
fcompl
and
pop
popf
arpl
or
sbb
cmc
pop
test
xchg
into
jg
adc
std
pop
jno
fcoml
adc
xchg
mov
std
cmp
and
sub
push
dec
mov
rol
dec
bound
popf
xlat
ret
inc
shrl
filds
iret
push
pop
jp
add
test
repnz
jecxz
ret
xor
jmp
inc
lret
loopne
hlt
fsubr
fstpt
pop
sbb
or
pop
daa
push
sbb
push
and
stos
gs
add
jbe
pop
cmp
pop
jnp
and
and
cli
repnz
add
sbb
xor
mov
lock
push
mov
lock
jo
mov
mov
fucom
dec
mov
mov
mov
leave
insb
sbb
mov
dec
sub
fldlg2
inc
push
inc
mov
push
movsb
in
scas
cmp
adc
jp
lock
aad
mov
inc
push
cs
ja
test
fists
mov
adc
xorl
loopne
arpl
jo
sub
mov
dec
stos
decl
inc
sub
imul
pop
xchg
call
shrb
xor
jl
mov
dec
ljmp
jo
push
adc
out
jge
cwtl
arpl
push
sbb
sbb
mov
je
fidivrl
xchg
adc
lahf
loope,pt
call
xchg
mov
cli
dec
rcrl
add
cmp
fcomi
fcoml
imul
mov
jns
jno
cmp
scas
and
outsl
data16
jae
sahf
and
xor
push
negl
fcompl
cli
mov
das
pop
adc
in
ret
lcall
cmp
scas
loope
add
mov
icebp
jl
js
sbb
pop
inc
mov
push
cmp
jns
mov
cmp
xchg
faddl
and
push
cmc
xchg
dec
mov
add
and
call
dec
mov
mov
mov
sbb
and
ljmp
sbb
adc
adc
call
mov
out
xor
xor
cmp
pop
adc
sub
cmpsb
mov
dec
out
cwtl
test
jl
out
jno
jg
hlt
mov
loope
iret
inc
mov
shll
cmp
cmp
fdivp
jmp
mov
loop
out
loop
jns
rorb
mov
lea
xor
call
out
sbb
mov
mov
dec
inc
lods
jno
mov
movsw
push
lea
sbb
insb
push
in
jle
push
pop
inc
cld
xor
add
xor
push
sbb
fcom
jo
mov
mov
cli
hlt
add
mov
jmp
jns
mov
cmc
cmc
sbb
lods
rolb
scas
daa
inc
xlat
jp
push
ljmp
nop
mov
mov
mov
push
inc
mov
push
lret
pusha
pop
and
pusha
dec
fdivr
les
inc
cmp
push
pop
insl
outsl
out
jnp
cld
fsubrl
ljmp
sbb
test
push
leave
sbb
sbb
add
add
test
dec
cld
add
cwtl
aam
push
pop
push
add
sub
jmp
xchg
xor
dec
mov
mov
or
dec
leave
mov
hlt
loopne
mov
sub
fstl
sub
adc
test
inc
xchg
or
xor
push
jg
or
and
aam
mov
sahf
out
inc
mov
addr16
outsb
sub
pop
test
sub
sbb
popf
and
mov
dec
or
icebp
and
movsb
pop
pop
int3
inc
mov
lods
or
cwtl
xchg
adc
xchg
aaa
xor
fdivrl
xchg
jne
push
push
js
push
adc
push
xchg
sbb
aad
hlt
inc
mov
divl
sbb
lods
jmp
or
add
adc
push
pop
sub
sbb
sbb
add
rep
inc
mov
push
sub
mov
jge
aad
xor
jge
sub
pop
push
hlt
adc
pop
and
popf
cmp
xchg
xchg
cmp
xchg
sbbl
pop
and
mov
fcoml
sarb
cmc
je
lret
scas
xchg
push
std
hlt
mov
shrb
inc
fidivl
test
add
je
sbb
outsl
loopne
inc
shlb
xlat
xchg
mov
cltd
popf
inc
sbb
icebp
cmpsl
mov
ss
jp
dec
dec
sub
dec
pop
cmp
outsl
ficompl
out
mov
mov
pop
inc
push
mov
pop
mov
shr
adc
enter
mov
mov
shlb
dec
into
jns
das
ret
vmovss
adc
mov
mov
lret
mov
movsl
into
insb
popf
ret
xchg
jne
or
cli
sbbb
jb
xadd
scas
xchg
dec
scas
out
cld
xchg
dec
mov
ret
xchg
hlt
xor
inc
pusha
fcompl
aam
repz
and
adc
mov
xchg
ja
arpl
adc
fnstsw
notl
inc
or
adc
ja
and
inc
aaa
ffree
rclb
inc
sbb
cwtl
dec
push
xor
daa
fwait
mov
add
adc
jecxz
adc
sarb
outsb
sub
or
jg
outsl
dec
xchg
cmp
out
les
arpl
sarl
call
xor
mov
imul
loop
fists
dec
push
out
cmp
xchg
mov
xlat
mov
repnz
dec
loopne
xchg
jmp
call
test
shll
jecxz
sbb
popa
ja
in
or
stos
jl
push
mov
xchg
in
scas
jg
add
lock
mov
inc
dec
mov
sbb
mov
adcl
push
pop
and
push
leave
mov
pop
aaa
in
shlb
cwtl
mov
fisttpl
sub
aaa
push
mov
cmpsb
lea
inc
pushf
bound
pop
and
add
cmc
sub
cmp
rclb
cwtl
shll
ja
jg
push
and
lcall
cmp
mov
add
outsl
adc
dec
mov
ret
add
add
dec
pop
mov
xchg
or
loopne
mov
outsb
sub
fsts
mov
cmp
pop
cmp
mov
sub
mov
xor
fcompl
imul
cs
mov
nop
inc
ljmp
call
sub
mov
stos
inc
and
inc
repz
push
stc
and
adc
mov
or
sbb
xor
fmul
push
cwtl
cmp
xchg
lcall
in
mov
inc
clc
or
add
sbbb
dec
inc
ljmp
pop
push
aas
mov
daa
outsb
inc
cmp
mov
cld
push
insl
cmc
lods
scas
loop
xor
sahf
into
mov
pop
fld
cmpsl
lds
inc
cmp
popl
.byte
