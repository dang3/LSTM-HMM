sbb
add
push
addb
jp
and
push
negb
jbe
adc
pop
ret
mov
aad
nop
out
fisubs
add
aad
cmp
aaa
ja
add
jb
cli
dec
inc
xchg
cwtl
sbb
cmp
mov
jns
in
outsl
jnp
lods
rorb
xchg
push
faddp
or
repz
sub
adc
test
repnz
out
hlt
mov
fstps
dec
sbb
add
mov
xor
ret
decl
mov
adc
inc
jbe
into
pop
aaa
outsb
or
divb
cltd
loopne
cmp
lret
fs
into
subl
insb
cs
add
jmp
sbb
out
sbb
push
jmp
adc
xor
add
push
or
or
decb
fs
iret
test
jecxz
rcrl
mov
mov
and
inc
inc
loopne
cmp
stos
sarb
dec
shlb
cli
inc
int3
dec
rorb
mov
in
jne
add
adc
pop
mov
xchg
push
pusha
subb
in
cmpb
data16
enter
test
mov
inc
lahf
pop
sub
jmp
push
adc
push
push
pop
xchg
ss
bound
repnz
and
pop
fstl
daa
jns
xor
mov
jae
adc
mov
pop
push
dec
add
test
bound
stos
mov
pop
push
jb
fnstcw
push
aad
push
rclb
push
test
push
add
sbb
cmc
cwtl
jns
orb
das
sbb
mov
mov
mov
mov
les
es
jmp
push
xor
mov
xor
fnsave
pop
in
fs
push
cmpsl
imul
nop
mov
aam
cltd
scas
imul
push
mov
dec
sbb
xor
mov
cmp
or
jnp
cmp
cmc
loopne
pop
daa
mov
pushf
in
or
fdivs
push
sbb
jnp
sub
je
jns
cmp
pop
nop
mov
and
mov
ja
addr16
das
bound
loope
in
adc
xchg
lahf
pop
clc
mov
and
sub
mov
cltd
inc
ljmp
adc
dec
dec
push
js
insb
and
jb
adcl
inc
push
xor
mov
pusha
nop
push
stos
scas
dec
jmp
adc
es
fisubrs
lock
jns
push
and
mov
sbb
stc
pop
ss
adc
insb
add
int
mov
repnz
jne
ja
icebp
fimuls
popf
loop
cmpsb
adc
xchg
sbb
cwtl
or
xor
and
decl
test
mov
or
fsubl
orl
fmuls
jnp
in
dec
int
pop
jge
jg
dec
mov
or
scas
adc
ret
jo
or
enter
cs
fistl
sbb
das
in
nop
jp
cs
sbb
movsl
test
fisttps
fdivl
fwait
or
and
and
insl
inc
repz
sbb
adc
sti
dec
xor
mov
stc
out
sub
int
fmulp
leave
add
xor
cmpsb
mov
mov
mov
ss
shl
push
aad
rolb
fidivl
cli
sti
sti
cmpl
mov
mov
test
je
cmp
inc
in
push
sahf
xor
sbb
aaa
lret
jge
test
sti
subl
stc
xor
xlat
push
fcmovne
sahf
sbb
les
lea
into
push
insl
push
insb
or
les
mov
sbb
pop
icebp
inc
mov
push
in
popf
mov
xor
sbb
xor
cli
cmp
hlt
outsl
decb
fdivrp
and
or
iret
in
mov
jle
or
pop
or
scas
pushf
jns
add
mov
int
cmp
mov
sub
jle
fs
es
bound
js
je
sub
push
sti
xor
out
pop
mov
insl
dec
mov
nop
repnz
test
ja
lods
out
and
dec
bound
and
mov
insl
push
pop
sar
loopne
push
inc
test
nop
lahf
sub
push
stc
dec
out
inc
jle
stos
cmp
mov
in
mov
mov
nop
enter
xlat
xor
cld
in
pop
popa
lock
sbb
jg
arpl
imul
or
cmp
repz
stos
prefetchwt1
xchg
push
and
pushf
mov
mov
stos
and
or
inc
insb
inc
fstl
add
mov
lods
jbe
repnz
dec
adc
sti
adc
jl
cwtl
mov
add
cmp
push
ja
sti
mov
mov
push
das
mov
daa
cmpsl
xor
pop
mov
xchg
mov
ret
into
dec
push
sarb
imul
adc
lds
cmpsl
sbb
jae
dec
out
jno
sub
push
mov
xor
inc
xchg
iret
mov
jbe
arpl
mov
add
xlat
jp
sub
mov
rol
outsb
xor
sbb
arpl
fdivr
les
add
es
xchg
mov
leave
mov
imul
mov
daa
sahf
aad
mov
fwait
xor
gs
sbb
adc
xchg
xchg
sub
mov
sub
mov
in
add
jmp
fwait
xor
lret
cltd
gs
inc
mov
add
arpl
icebp
cli
in
xchg
adc
add
mov
fdivs
jge
mov
sub
mov
sbb
mov
out
or
cld
sub
jo
sarb
cltd
or
je
xor
jl
mov
push
adc
jle
cmp
fistpll
sbb
pop
test
out
call
mov
pushf
sub
lds
push
and
jne
add
jo
aaa
leave
push
sub
mov
push
and
mov
mov
pop
cltd
lahf
lcall
inc
out
add
adc
repnz
jl
je
dec
inc
orb
cmp
das
mov
sbb
inc
dec
adc
inc
jb
js
xlat
add
xchg
mov
out
out
lcall
jno
xchg
imul
lds
jnp
sub
add
dec
stos
aas
fwait
sub
mov
push
inc
sub
sub
or
or
pop
stc
aam
cmp
xchg
daa
jge
in
and
daa
daa
mov
sbb
dec
cli
cmp
lock
pop
xchg
loope
push
movb
loopne
pop
cmpsl
adcl
insb
or
mov
xchg
sbb
fildl
std
sbb
fwait
jb
repnz
push
cwtl
pushf
fprem
shrl
mov
test
sarb
jae
xlat
rorb
mov
fnstenv
int
pop
insl
out
pop
mov
inc
add
push
or
addl
pusha
push
in
xorl
jmp
faddp
scas
pop
add
dec
sbb
xchg
incl
push
or
inc
outsl
xchg
mov
pop
push
daa
dec
mov
lea
or
cli
inc
or
cmovge
js
loop
sbb
or
mov
cmp
push
mov
ljmp
inc
mov
dec
adc
fidivs
push
sbb
mov
adc
stc
xchg
sub
mov
sbb
add
mov
les
xor
sbb
cmp
mov
pop
push
popa
xor
sbb
and
clc
jb
fadd
in
aad
ret
and
je
in
mov
arpl
push
xor
adc
jno
sub
loopne
pop
pop
leave
mov
sub
sbb
out
addr16
and
mov
push
sub
mov
xor
push
popa
add
mov
sbb
sub
fldl
inc
push
lods
add
aaa
lods
pop
mov
insb
xor
call
push
add
out
mov
push
dec
outsb
into
movsl
gs
pop
xchg
popa
lret
xor
adc
cmpb
pop
js
sti
loop
xor
push
sub
and
pop
bound
mov
xchg
jle
lds
fimull
nop
sbb
jg
dec
cltd
stos
stc
push
adc
mov
jl,pn
push
jl
inc
dec
dec
ljmp
and
scas
sub
push
mov
xchg
leave
mov
in
dec
sub
fcompl
jge
fsubrs
xchg
leave
cmp
xchg
fidivrl
scas
push
adc
xchg
lcall
hlt
movsl
shlb
mov
es
mov
pushf
popf
xlat
dec
sbb
jnp
enter
pop
je
into
loop
insl
push
ds
rcll
les
and
fsubl
cmp
xor
lcall
fiadds
xor
pop
inc
dec
out
inc
jmp
or
in
int3
or
in
xchg
xor
xchg
cmp
add
cmp
pop
ds
cmp
mov
je
jne
fwait
jp
icebp
xchg
sub
stos
xchg
jo
dec
add
xchg
xchg
sarl
mov
sbb
xor
rorl
aam
inc
fdivrl
stos
aaa
jae
xlat
or
stc
mov
jae
xchg
pop
mov
dec
jl
int3
add
push
pushfw
mov
aad
jae
add
push
les
inc
cmc
and
mov
dec
cli
xor
mov
mov
and
fimuls
push
imul
jnp
scas
adc
mov
xchg
mov
imulb
and
pop
sub
inc
mov
push
sub
jbe
xorl
cmp
enter
aaa
scas
test
pop
mov
or
jns
leave
cmc
mov
arpl
add
jbe
pop
mov
es
pop
adc
stos
sarb
and
xlat
dec
cmc
cld
add
or
imul
repz
pop
test
mov
enter
xchg
in
ss
xchg
or
bound
and
adc
ss
xchg
icebp
jns
dec
xchg
pop
mov
sbb
add
mov
xchg
sub
aaa
add
jnp
jbe
jnp
cmpsl
xchg
cli
mov
hlt
out
ret
adc
sbbb
stc
pop
filds
mov
mov
aam
cmp
fidivs
mov
es
xor
inc
add
mov
pop
cwtl
in
sbb
sbb
clc
push
mov
movsl
mov
dec
jmp
mov
or
jns
fs
arpl
daa
inc
xor
and
inc
push
hlt
cli
out
push
push
sbb
and
insl
xor
pop
sub
out
les
mov
xchg
dec
jge
mov
mov
or
int3
sub
out
lcall
leave
dec
mov
lret
dec
jl
jb
dec
sbb
cmc
sbb
cmp
sahf
cs
or
fdivrs
test
xchg
inc
imul
xchg
cltd
sub
je
mov
popf
mov
ljmp
roll
adc
js
cmpl
pop
sub
inc
data16
mov
mov
push
dec
inc
adc
daa
pop
dec
xchg
sub
xor
jb
andl
inc
add
icebp
scas
mov
push
xor
lds
xchg
jmp
add
daa
dec
or
mov
test
adc
popf
mov
repz
bound
xchg
and
lcall
cmpb
mov
or
orb
adc
pop
push
adc
dec
mov
jae
fwait
push
xchg
imul
push
out
push
stc
js
mov
mov
ficomps
push
outsl
jecxz
xor
jbe
sbb
mov
sub
sub
imul
sbb
adc
cli
xor
lock
cli
xchg
stos
adc
mov
in
mov
push
aaa
xchg
xchg
adc
push
xor
es
fcmovnu
sub
incl
pusha
fyl2x
pop
push
add
insb
jg
xor
pop
enter
mov
adc
jbe
push
bound
jbe
mov
icebp
xor
dec
jno
push
push
cmp
and
ss
cmc
push
pop
hlt
push
sbb
or
pop
das
mov
jo
jb
bound
dec
daa
mov
inc
sbb
dec
xchg
cmp
sbb
cmp
mov
stc
push
test
or
push
xchg
pusha
jo
std
mov
ret
data16
and
out
fiadds
or
imul
add
dec
mov
repz
dec
rorl
mov
insb
lods
je
mov
mov
pop
test
inc
pusha
and
adc
repnz
jbe
pop
push
ja
cmp
jnp
repz
mov
pop
mov
gs
sti
xor
mov
xchg
adc
subl
mov
cmc
sbb
mov
cmp
arpl
mov
adc
mov
mov
cld
hlt
enter
js
push
jmp
dec
int3
mov
sub
rclb
rorl
inc
dec
subl
inc
xchg
pop
cmp
loopne
mov
nop
dec
pop
lds
stos
mov
fcmove
scas
push
fnstsw
xchg
mov
push
cwtl
in
dec
mov
aas
fs
rcl
inc
jb
adc
sbb
jno
je
repnz
pushf
addr16
adc
jo
in
push
fisubrl
push
out
xchg
sahf
sarb
mov
lods
call
jecxz
inc
cmp
pop
hlt
jne
add
pushf
or
fs
pop
cli
fcoms
pop
jno
movsl
rclb
aas
sub
ret
imul
lock
bound
cmp
mov
jae
out
dec
outsl
jge
lret
in
cmc
fcomps
mov
lock
fmuls
ret
test
mov
mov
std
mov
jne
gs
insb
call
pop
insl
mov
sti
mov
mov
and
mov
xchg
jne
repnz
sbbl
add
shlb
push
clc
and
xchg
pushf
mov
sbb
or
out
cmp
call
pusha
lea
cmp
fimull
or
aaa
push
outsl
pusha
rorb
adc
jmp
jae
mov
sub
jmp
or
or
mov
js
aas
out
loopne
jecxz
inc
scas
cld
pop
sbb
cmpsb
ret
stc
mov
sbb
xchg
push
sbb
jno
ret
or
add
arpl
mov
ret
pop
and
cmpl
fnstcw
test
inc
sub
mov
lock
test
pop
jmp
dec
scas
imul
ret
popf
pop
shl
adc
mov
xlat
mov
dec
push
pop
xor
in
mov
fmulp
jno
jbe
cmp
push
lret
mov
xchg
jo
icebp
mov
ds
ds
ja
aaa
into
cmp
sbb
mov
fdivr
push
outsb
roll
pop
rolb
out
cmpsl
stc
sub
loopne
stc
xchg
bound
add
insb
outsl
mov
fisubrl
out
sbb
insb
enter
imul
sahf
sub
pop
xlat
jno
dec
mov
mov
shl
jnp
je
sub
cli
or
add
sub
leave
lcall
movsb
add
fdivs
xchg
xchg
aam
push
xor
sbb
idiv
es
clc
adcl
in
xchg
in
and
mov
dec
int3
xlat
inc
les
inc
add
sbb
push
lcall
push
adc
in
pop
push
mov
pop
push
sub
ret
popl
sahf
enter
inc
clc
mov
sub
out
mov
dec
aas
mov
mov
or
inc
pop
push
ret
lret
adc
inc
inc
call
inc
pop
sti
icebp
xchg
dec
rcr
mov
or
push
jmp
mov
jg
xor
aam
orb
adcb
push
inc
faddl
xchg
inc
adc
xor
sarb
mov
mov
sbb
and
and
push
xchg
add
test
sbb
push
jb
dec
fmull
mov
std
cli
imul
mov
xor
dec
inc
pop
add
dec
or
adc
or
fimuls
xchg
jno
loopne
sbb
sub
out
push
popl
ja
jbe
loop
lods
icebp
cwtl
adc
push
mov
ffree
sbb
adc
push
push
rcll
loop,pt
mov
and
pop
mov
push
mov
lcall
int
dec
cmp
and
je
test
fwait
imul
jl
xor
push
in
sbb
jae
sti
movsl
mov
and
pushf
ljmp
xor
notl
cmp
sarb
or
dec
push
lret
inc
loope
cmp
iret
popa
aas
mov
icebp
out
add
cwtl
lret
aas
bnd
sub
int
dec
ret
mov
sub
shll
movsl
mov
sbb
pop
ljmp
dec
and
std
rclb
cmp
xor
or
sub
cmp
jns
cmpb
out
jne
addb
jb
test
pop
loopne
pop
int3
push
mov
push
add
test
ret
bound
cmp
adc
xchg
test
and
aaa
lahf
and
lds
data16
mov
mov
sub
inc
pop
jecxz
mov
inc
xchg
add
mov
push
lds
leave
rcll
push
xchg
in
out
or
in
add
cmp
arpl
out
push
sub
loope
lea
inc
rcrl
hlt
call
adc
lods
fnstcw
push
and
adc
xchg
in
mov
push
pop
in
jg
sarb
hlt
dec
inc
shr
repnz
jnp
jg
mov
fcomi
cmp
jb
mov
out
or
inc
je
pushl
popf
mov
addb
mov
stc
jl
jb
add
call
adc
out
movsb
ds
les
inc
jnp
push
icebp
dec
push
in
stos
pop
add
sbb
in
inc
pop
sti
or
frstor
mov
add
add
daa
sbb
adc
je
call
out
shr
jb
lods
cwtl
in
inc
inc
xor
cmc
in
mov
mov
les
loop
insl
lcall
and
iret
jl
in
pushf
fistps
repnz
sahf
lea
sbb
adc
push
ja
mov
push
jnp
jge
cwtl
inc
fdivrl
das
pushf
or
or
pop
pop
sub
out
mov
insl
movsl
lods
jp
sub
mov
lret
xchg
mov
push
adc
out
inc
adc
in
and
add
cmp
in
sbb
mov
mov
orl
iret
lds
mov
add
lds
aam
enter
push
lret
aaa
aam
je
push
rcl
inc
outsl
ljmp
adc
or
push
sub
jl
cmp
arpl
add
xor
mov
stc
mov
cmp
jbe
lcall
aas
or
cwtl
mov
clc
xor
int3
xchg
out
mov
fildll
into
push
jl
and
lret
inc
cmp
and
add
xor
incb
test
dec
add
sbb
sub
sub
dec
jnp
dec
cmp
lcall
in
sub
sbb
iret
mov
or
or
imul
in
cmpsb
stos
outsb
mov
lahf
leave
sbb
mov
xchg
or
add
aaa
stc
scas
mov
dec
sbb
pushf
test
cmpsl
mov
pop
mov
addb
pop
pop
sbb
dec
frstor
sub
dec
pop
daa
leave
incl
pushf
cmp
cmpsb
mov
cmp
dec
cs
xchg
ljmp
cmp
or
dec
xchg
mov
pushf
mov
cmp
mov
nop
in
test
mov
dec
repnz
mov
cmp
cmp
fs
fists
pop
or
and
in
jle
insb
cmpsl
jmp
mov
test
and
push
jnp
sub
mov
cmp
xchg
imul
lret
sbb
jmp
sub
xchg
jmp
jle
js
out
scas
jecxz
cmp
scas
lcall
in
lret
push
arpl
and
pop
sub
fnstsw
push
adc
fstpt
xor
andl
in
in
adc
icebp
cwtl
stos
das
mov
jge
mov
mov
notb
hlt
dec
loope
and
mov
inc
lahf
push
add
aaa
adc
push
ret
sbb
jg
inc
sbb
mov
aas
gs
mov
pop
mov
push
sbb
bound
jle
pop
mov
adc
inc
fidivs
ss
mov
cmc
sbb
sbb
ror
loopne
fwait
divb
adcb
and
jno
lods
int
arpl
cmp
stos
adcb
out
or
lret
cltd
push
loope
es
fidivrl
out
aaa
aas
lock
mov
pop
and
mov
popf
cmpsb
sub
iret
sbb
push
mov
xchg
sbb
inc
repnz
xchg
stos
shl
mov
mov
cmpsl
mov
jmp
pop
jb
imul
addr16
aas
xor
adc
pop
push
aam
inc
adc
in
mov
mov
out
fdiv
fimuls
sbb
sti
rcrb
sbb
ljmp
sub
xorb
sbb
push
cmp
dec
xchg
jno
jae
adc
outsb
and
push
int
push
inc
inc
or
gs
lds
push
and
and
or
pop
mov
enter
movsl
fistpl
mov
push
cmp
std
pushf
sti
ret
mov
mov
je
mov
adc
js
or
int
cmp
xlat
mov
push
sti
jecxz
pushf
xor
outsb
cmc
decl
sarb
shll
inc
mov
js
int3
mov
jne
push
int
cmpsl
cld
fwait
mov
push
push
sbb
pop
inc
cwtl
mov
int3
xlat
popa
mov
insl
jmp
and
das
mov
sub
cmc
jmp
rorl
lret
scas
ret
lahf
shll
insb
xor
adc
mov
push
push
pop
orl
cs
mov
pop
xchg
sub
mov
sbb
inc
push
les
hlt
pop
mov
and
pop
popw
popf
jae
in
gs
outsl
jl
fmull
push
movsb
or
xchg
mov
xchg
mov
add
popa
sub
int
jno
dec
or
test
data16
inc
rorl
pop
xchg
add
and
addr16
decl
les
fwait
xchg
mov
sbb
xchg
and
mov
sbb
jge
mov
mov
mov
js
mov
roll
cltd
mov
xchg
test
pop
fldl
test
ret
xchg
and
in
sti
enter
fnstsw
fimuls
ljmp
sub
insl
lods
iret
jle
sbb
push
andl
filds
adc
adc
das
scas
push
jne
jge
sub
cmp
add
cmp
xchg
mov
in
or
clc
pop
jo
lock
lods
ret
cwtl
add
pop
jg
fistpll
notb
sar
rcrl
mov
pop
faddl
lods
jmp
insl
push
vmwrite
dec
jg
adc
test
jg
test
test
or
push
dec
andb
dec
xor
push
int
push
fcoml
jne
hlt
push
jb
xor
jmp
push
gs
outsl
adc
jge
dec
pop
xchg
jae
loop
and
lahf
inc
iret
cli
add
dec
lds
enter
or
pusha
push
sbb
inc
decl
out
lea
and
add
inc
jecxz
ret
sbb
push
inc
xchg
cmp
fwait
aaa
call
lds
js
pop
ret
dec
dec
adc
lret
gs
add
adc
lock
loopne
imul
dec
cmp
mov
je
insb
xor
push
ds
pop
inc
divl
js
xchg
out
xlat
into
lods
mov
clc
dec
daa
push
mov
outsb
add
sub
dec
das
fidivl
cmpsl
cmp
push
xor
loope
int
outsl
add
test
or
iret
aam
jb
add
add
stos
fidivrs
loope
and
mov
mov
or
les
clc
jae
in
cmpsb
jl
jne
inc
fists
pushl
push
adc
mov
imul
adc
mov
jnp
jno
rclb
adc
sbb
fwait
xchg
dec
jle
adc
int
sub
std
lods
call
dec
mov
outsl
mov
shrb
pop
jae
mov
fildl
mov
pop
xchg
push
in
push
cmp
test
jns
pop
push
fisubs
cwtl
xlat
mov
leave
jge
push
lock
mov
jle
jnp
or
mov
and
movsb
mov
cmp
inc
cmp
test
mov
push
add
and
je
and
adc
in
mov
and
ds
iretw
pop
lret
movsb
std
lcall
inc
pop
add
ret
pop
pop
sbb
jge
notb
pop
insb
pop
fwait
dec
xor
std
pushf
out
movsl
je
repz
jo
mov
aaa
xchg
in
sub
xchg
pop
push
adc
dec
sub
imul
leave
pop
cmp
push
test
lcall
sahf
sarb
inc
jo
ja
and
pop
ljmp
idivb
xchg
test
dec
mov
aas
in
fcompl
outsl
mov
aaa
insb
dec
dec
ss
dec
mov
addl
and
test
insl
outsl
cs
xchg
lahf
jp,pn
push
mov
cmp
stos
insl
pop
xchg
addr16
imul
pop
mov
xchg
push
xchg
cmp
loop
and
dec
lods
les
push
xor
movsl
and
ret
inc
in
cmpsb
inc
mov
fdivl
pop
jmp
pop
jle
idiv
adc
rol
adc
sbb
xor
sub
sarl
lea
add
test
mov
xor
xchg
and
movsb
inc
rolb
pusha
imul
js
aad
push
inc
xor
xor
inc
jno
jl
inc
push
outsb
pop
pop
arpl
dec
xor
nop
jp
xchg
lea
scas
dec
imul
mov
add
xor
mov
or
adc
cmp
jne
jnp
shrb
xchg
and
movl
adcl
pop
imul
adcb
push
and
fmulp
js
mov
pop
mov
inc
cmovne
xor
mov
xchg
push
add
pop
fdiv
cmpl
add
ljmp
dec
pop
aas
push
test
int3
shll
sub
insb
jns
movsl
mov
ret
jb
fs
add
push
jge
leave
lods
repnz
or
sub
or
mov
sbb
lock
into
daa
cli
mov
sub
pop
push
stos
test
roll
adc
fnstenv
nop
xchg
imul
mov
mov
out
jmp
ret
mov
in
inc
stos
popf
gs
cwtl
in
jp
popf
pmulhuw
mov
mov
out
adc
icebp
cmp
inc
fistps
xchg
cmp
or
ja
out
adc
mov
cmp
or
sbb
shlb
jb
mov
xchg
call
lret
addr16
mov
imul
gs
in
dec
jbe
ljmp
mov
cmp
mov
mov
jnp
cmp
dec
mull
lret
lea
jns
idivb
sub
cmp
mov
mov
stos
sub
clc
or
stc
mov
loop
loopne
std
inc
jl
xchg
sahf
pop
std
test
pop
outsl
lods
xor
mov
lcall
mov
sbb
insl
sub
cmpsb
cmpb
std
jle
mov
call
sub
in
pop
ss
sub
insb
cmp
mov
fldl
push
loop
cmp
add
and
adc
in
dec
mov
push
push
adc
adc
das
out
sbb
jl
outsl
int3
adc
adc
out
adc
add
xorl
das
out
mov
adcb
pop
xor
inc
xchg
mov
jnp
xchg
lods
push
sbb
daa
sarl
enter
sub
mov
jo
adc
add
idivl
fiadds
cmp
adc
fnstenv
push
jmp
inc
repnz
notb
mov
scas
fstps
test
std
jo
lcall
sti
jle
shlb
leave
test
pop
fwait
mov
mov
repz
lds
xor
mov
or
sub
sahf
cmovl
inc
jne
xorl
sub
cs
nop
and
pop
add
pop
test
call
xchg
cmp
xor
pop
pop
adc
cmp
adc
lods
jp
data16
inc
push
push
out
dec
add
sahf
in
pop
addr16
lock
imul
in
daa
out
pop
mov
in
pop
idivb
outsb
xor
dec
imul
rorb
in
nop
cld
int
lea
loope
lds
int3
pop
push
outsb
xchg
fcoml
repnz
push
movsl
inc
lods
dec
push
cmp
cmp
dec
add
jp
loope
jne
cltd
repz
lret
mov
mov
add
addl
mov
mov
and
fnstsw
cwtl
dec
ds
adc
push
and
ja
adc
pop
inc
ret
outsb
and
lcall
inc
enter
mov
sbb
or
xchg
int
mov
push
mov
jge
icebp
roll
out
mov
jno
jno
jno
in
push
mov
movsl
cltd
lcall
fwait
fwait
add
ficoml
fimull
jecxz
mov
and
and
mov
cld
loope
bound
jp
and
push
ljmp
push
fcomps
mov
rorb
mov
inc
inc
sti
ljmp
push
sar
test
cltd
inc
dec
pmaddwd
xchg
adc
out
inc
jb
mov
xchg
js
and
pop
xor
dec
cmp
loopne
scas
loopne
andb
sub
test
in
push
shl
ret
in
out
std
in
insl
sbb
wrmsr
int3
ficoms
dec
pop
pop
ss
loopne
sbb
mov
gs
or
jno
test
test
mov
mov
jge
cld
out
sbb
fdivl
cmc
ret
pop
xorb
bound
pop
sar
mov
sahf
jns
les
call
daa
xchg
push
leave
stos
loope
pop
js
mov
out
aam
cmp
mov
mov
lret
xchg
xchg
test
push
cmp
pop
movsb
ffreep
loopne
sub
jne
aaa
mov
xor
int
jmp
or
push
inc
aaa
ret
mov
ror
mov
xor
jnp
inc
ja
out
and
lods
push
lods
dec
mov
cmp
jb
adc
shll
test
sub
enter
jne
int
xchg
inc
stos
inc
dec
dec
loope
aaa
repnz
add
pop
push
cltd
mov
addl
aas
mov
je
xchg
flds
adc
or
bound
je
lock
cmp
ret
xor
fistpll
push
mov
cli
xchg
cmpsb
push
lahf
jbe
jns
mov
in
xchg
and
sub
ljmp
stos
or
aas
jge
std
incb
jne
pop
das
jnp
mov
lahf
out
dec
cltd
pop
add
mov
push
xchg
push
pop
fisubrs
pushf
pop
scas
jp
xlat
push
xor
lock
in
lcall
dec
xchg
out
xor
mov
js
mov
iret
hlt
xchg
out
add
xlat
iret
push
mov
inc
xchg
inc
mov
mov
sbb
cmc
pusha
mov
mov
dec
test
push
cmp
pop
mov
push
scas
out
dec
mov
lret
sbbb
or
pop
jnp
push
out
test
loop
test
jge
xor
insb
nop
fcoms
push
aaa
pop
fistl
adc
fdivl
ficomps
mov
lods
fwait
cmp
sub
inc
jb
loope
adc
imul
rcrl
and
outsb
jle
mov
inc
in
rol
fs
aad
mov
add
xor
sub
jno
shll
mov
pop
cli
xchg
mov
cli
dec
mov
movsl
imul
js
inc
mov
arpl
addb
and
addr16
jg
rol
pop
aad
pop
ret
push
jns
inc
aas
dec
test
push
cwtl
in
mov
lcall
mov
or
out
inc
xor
andl
dec
lcall
popf
into
scas
dec
mov
mov
dec
xchg
add
lds
pop
ret
int
out
dec
je
aad
leave
sub
push
push
icebp
push
adc
mov
mov
lret
jbe
pop
or
sub
rolb
dec
and
jmp
pop
xchg
xchg
or
nop
mov
rcrb
stc
jmp
jl
adc
sub
add
push
xchg
cmpsb
mov
sbb
mov
std
xor
icebp
pop
xor
mov
mov
lds
jp
pop
mov
lcall
shl
cs
xchg
pop
xchg
jb
pop
shrl
pop
push
mov
sub
jmp
pop
jmp
bound
mov
xor
cmp
sbb
mov
xor
cmp
mov
hlt
loope
shrd
xchg
mov
les
xchg
jp
mov
je
popa
fistl
cltd
pop
mov
dec
imul
stos
mov
push
js
orl
adc
test
loope
insb
dec
leave
imul
cld
jp
xor
shl
mov
ret
adc
arpl
xor
adc
aad
mov
dec
iret
adc
fsubp
idiv
or
add
lcall
adc
jne
push
xor
call
call
test
cld
pop
loopne
ja
jge
fmul
fisttps
jl
imul
pop
arpl
add
in
out
or
lahf
nop
pop
cmp
mov
mov
hlt
mov
xchg
mov
fsubrp
sbb
sub
scas
push
cmp
jge
ljmp
adc
or
mov
cmp
cli
add
jp
jbe
sub
subl
cmp
mov
or
repz
mov
mov
pop
or
adc
cs
push
test
adc
pop
pop
into
ss
ss
js
lock
or
push
dec
or
pop
dec
pusha
sarb
cmp
push
ss
pop
cmc
add
dec
jb
add
cmpl
insl
ror
push
stos
sub
fxch
daa
mov
fdivrl
jmp
xor
test
mov
shrb
or
and
cmpsl
push
imulb
out
inc
mov
pusha
xchg
sbb
mov
push
movsl
ficoml
les
jbe
xchg
xor
ss
cs
cltd
or
add
stos
and
rolb
jecxz
and
cmp
cld
pop
adc
fnstenv
daa
mov
cmp
pop
xlat
add
inc
pop
dec
repnz
clc
jge
sti
ficompl
jne
mov
or
push
inc
dec
gs
or
sub
mov
ljmp
cli
std
int
inc
popf
xchg
mov
repz
int3
lret
push
dec
push
jbe
lea
inc
mov
imul
xor
push
pop
daa
inc
xor
push
push
daa
and
jle
xchg
das
rorl
pushf
mov
sbb
pop
call
insb
pop
test
or
jo
cld
jno
pop
jp
icebp
cmp
bound
push
dec
jne
scas
jge
imul
ljmp
inc
and
sub
aam
cwtl
jo
mov
cmc
dec
scas
push
repnz
cmp
insl
stos
mov
xchg
jp
cmpsl
stc
push
pop
aam
test
inc
popf
into
jae
jne
mov
enter
xchg
das
mov
cmp
dec
xor
pop
shrl
xor
in
call
enter
or
test
dec
sub
movsb
hlt
pop
andnps
aam
inc
popa
loopne
ret
loopne
movd
popf
ss
sub
aad
mov
jbe
sti
imul
cmc
inc
adc
dec
aaa
inc
xchg
cmpsl
loop
lcall
or
inc
arpl
mov
rcrl
add
addl
pop
xchg
sub
xor
and
test
lock
push
js
rclb
mov
jae
bound
faddl
loope
adc
pop
insl
xor
mov
mov
repnz
adc
es
rep
cmpsb
push
cltd
sbb
push
dec
insl
call
pop
or
push
adc
fdivl
jecxz
jb
sahf
jle
sub
xchg
idivb
sbb
and
loop
out
shll
rcll
test
aad
jmp
add
xchg
cmpsl
outsl
lods
shrl
ds
into
and
pop
les
imul
cmp
push
imul
fnsave
subb
inc
popa
nop
push
scas
pop
dec
push
call
rolb
in
fdivs
aad
sbb
scas
lods
xchg
xchg
out
sub
adc
xchg
cmp
mov
mov
xor
mov
jmp
imul
xchg
jp
push
mov
jns
mov
xor
jmp
jge
push
dec
aam
jmp
in
jle
push
xchg
inc
js
push
cld
xchg
inc
or
insl
fs
daa
in
stos
and
mov
scas
aaa
mov
shlb
mov
scas
rolb
xlat
js
cli
mov
lods
cli
sub
cmp
mov
ja
cltd
jo
adc
jno
fdivs
mov
jae
mov
lock
daa
push
lods
out
fistpl
out
ja
ret
stos
cmc
jnp
mov
mov
neg
sub
mov
outsb
jb
int
cli
fs
adc
or
shll
xchg
jle
hlt
repz
sahf
lret
mov
and
xor
inc
inc
out
cld
ljmp
lcall
imul
popa
and
xchg
inc
adc
mov
adc
mov
addr16
lret
cltd
xchg
pop
xor
adc
sub
jo
xor
lods
out
mov
loope
fwait
cld
into
cmp
shl
lods
in
push
fsubp
dec
cmp
inc
cs
fcomp
add
outsl
pop
ss
lods
testb
stos
sub
sbb
cmpsb
nop
cs
mov
sbb
mov
push
push
sub
shrl
pop
lret
shrb
xor
jmp
jg
adc
pop
sbb
jecxz
and
fcoml
mov
lret
fdivrl
jo
das
or
outsl
xlat
adc
dec
pop
jecxz
inc
xor
movb
ret
jne
bound
in
push
mov
fsts
jo
test
adc
jge
pushf
in
xor
xchg
push
imul
movsb
insl
aaa
pusha
andl
push
jnp
sahf
xchg
scas
inc
lods
orb
or
pop
adc
mov
dec
and
mov
leave
sbb
xchg
cmc
test
loop
loope
pop
mov
adcb
fdiv
cmpsl
pop
add
aaa
xchg
movsl
jge
jp
push
bound
jo
pop
mov
in
std
adc
insl
sbb
loop
lahf
lods
mov
and
push
roll
pop
repnz
adc
sub
sub
arpl
adc
mov
loope
rcr
rorb
in
mov
mov
sti
or
mov
mov
inc
insl
pop
sbb
ret
les
or
cmp
and
adc
push
lret
or
popa
addr16
xor
add
aad
add
std
out
fwait
or
xchg
es
cwtl
fnstenv
xchg
mov
rolb
ret
cmp
and
test
subps
pop
fwait
dec
lcall
sbb
mov
lods
lret
fidivrl
pop
jnp
out
icebp
mov
cmpsl
rclb
dec
cmp
mov
mov
outsl
rolb
and
mov
dec
scas
loope
or
movsl
subb
ret
push
adc
mov
add
jecxz
push
mov
and
into
leave
jle
sbb
movsb
dec
lahf
push
cld
cmp
jnp
aaa
pusha
or
push
into
and
dec
push
outsb
or
test
lods
sub
gs
ret
jmp
insl
cmc
je
xchg
xchg
push
fisttps
pop
cwtl
daa
cmpsl
clc
cmp
add
fwait
cld
cli
fcmovb
stos
dec
cs
pop
scas
mov
mov
mov
adc
test
jl,pn
xchg
push
in
insb
sahf
xchg
xchg
jne
idiv
cmc
loope
inc
andl
jecxz
fimull
xchg
and
inc
xor
out
das
cltd
into
pop
mov
add
hlt
or
aaa
stos
push
jmp
and
pop
imul
or
in
mov
cmpb
or
xor
jo
subl
arpl
in
mov
out
push
push
sbb
pusha
roll
shlb
in
jb
fiaddl
insl
and
int
sahf
cmp
in
ja
push
sarb
xchg
dec
push
adc
cmp
stc
adc
loopne
pusha
pop
mov
mov
nop
inc
xor
jb
shl
xor
hlt
adc
sub
lods
mov
or
js
xor
test
xlat
mov
add
cmp
cmp
insl
rcll
cmpsb
flds
mov
push
pop
ljmpw
lcall
in
xlat
nop
adc
cmpsb
mov
sbb
fildll
cmp
pushf
lea
ret
dec
xchg
lock
cli
jne
sahf
orb
paddsb
mov
imul
jae
call
test
cmpsl
dec
je
jno
and
mov
dec
out
inc
sbb
outsb
mov
sbb
inc
jns
sbb
push
mov
add
negl
dec
jae
mov
inc
xchg
inc
xchg
sti
les
lahf
sbb
repnz
dec
jecxz
mov
mov
mov
lods
loopne
or
mov
adc
mov
repz
or
loope
fbstp
mov
fucomi
ja
dec
fstpl
inc
pop
push
gs
push
pusha
xchg
sahf
mov
stos
fsubrl
mov
loopne
out
js
bound
loop
dec
inc
xor
xor
jmp
cmp
lahf
jp
clc
out
dec
mov
xor
out
sub
mov
sub
loope
jmp
hlt
xchg
sub
mov
inc
in
mov
les
mov
xchg
stos
or
lock
jns
and
or
fcomps
test
stos
add
cs
out
jg
mov
hlt
test
push
mov
push
pop
xorb
mov
dec
add
inc
fwait
std
daa
in
inc
jl
sbb
cmp
flds
lahf
dec
insl
push
jb
aad
out
js
pop
mov
test
sahf
pop
push
sti
mov
xchg
lahf
orb
cmc
iret
cs
mov
cmp
xchg
cltd
test
and
jne
adc
aad
dec
fidivl
bnd
enter
leave
loopne
enter
xor
dec
fisubs
push
mov
out
roll
cmp
insl
cld
inc
aam
add
add
dec
push
leave
push
mov
inc
shlb
dec
jle
lods
inc
push
lret
movsb
shll
push
aad
ret
dec
mov
add
cld
fstps
cmp
insb
stos
addb
sbb
pop
xchg
sahf
add
xor
jbe
jge
in
test
lret
lea
idivb
aaa
mov
push
lds
mov
inc
addr16
pop
fcompl
ds
xor
cmp
aad
addb
mov
xor
test
cmp
stos
dec
push
hlt
rol
push
flds
sbb
pop
add
icebp
out
cmpsl
das
bound
mov
cld
fidivrs
data16
adc
mov
sahf
adcl
jle
inc
mov
and
dec
mov
jmp
enter
inc
mov
inc
cmp
push
int
jae
popa
lods
lcall
insb
sti
cmpsb
push
loope
clc
cmpsl
jp
jns
fimull
xchg
loop
cli
repz
cmp
or
pop
jbe
mov
dec
adc
shrb
push
inc
sbb
dec
mov
jmp
push
adc
outsb
mov
mov
mov
jnp
loopne
push
shl
jg
sub
cmp
repz
je
mov
pop
jb
rcr
and
aaa
arpl
loop
rolb
jl
pop
das
pop
adc
lret
and
xor
mov
outsb
ljmp
int
ret
lods
sub
popa
add
xchg
leave
sbb
sub
and
lea
dec
xor
xor
jp
cmp
pusha
add
jecxz
js
jno
stos
adc
or
lcall
cmovb
ljmp
sub
xchg
sub
push
xchg
outsl
pop
xchg
scas
pop
xor
and
testb
cli
jae
imul
jae
or
add
xchg
es
jle
nop
sub
xchg
out
adc
cmp
aas
sub
out
loop
int
lea
outsl
je
and
mov
inc
pop
in
cmp
loope
pop
xchg
mov
lret
insb
sarb
and
jns
mov
pop
or
ror
push
lret
and
jb
push
orb
jle
in
shlb
xor
cmp
push
mov
aam
xchg
jnp
push
ret
xor
iret
addr16
pusha
xchg
lods
sbb
mov
jge
ret
lock
push
insl
dec
sbb
icebp
lea
enter
lret
popf
outsb
loope
insl
dec
fldenv
sub
int3
jmp
jo
xor
pop
ljmp
lea
loopne
test
pop
inc
or
das
push
mov
sub
dec
cmc
or
aam
cmpsb
or
cmp
jecxz
pop
in
mov
add
pop
sub
fstps
test
jg
push
aas
dec
xor
sahf
mov
and
jmp
imul
out
je
add
ret
enter
das
cmp
out
faddl
push
jp
emms
pop
jp
mov
inc
fmul
jns
fs
fwait
js
in
mov
mov
mov
xchg
mov
or
fdivs
and
leave
cli
push
cmpsb
rcr
ljmp
inc
push
mov
jns
ds
push
dec
out
test
push
cmp
lahf
stc
ficoms
and
inc
je
pushf
cmpsb
sub
lds
push
mov
fnsave
repz
mov
in
sub
cmpsl
dec
mov
cmp
pop
es
jo
cmc
and
nop
xchg
inc
insl
mov
fldcw
cmp
sub
call
mov
xor
pop
stos
xchg
icebp
and
fstl
mov
jae
in
pop
imulb
cmpsl
mov
jmp
lods
ss
sbb
mov
idivl
push
and
stos
lahf
push
push
sti
bound
fs
sub
lods
adc
fistpl
repz
dec
stc
jp
fnstsw
dec
or
data16
sub
add
xchg
and
cmpsl
xor
mov
jg
lods
fsub
sar
pop
daa
ljmp
insl
mov
jl
rdpmc
inc
push
aam
or
mov
repnz
add
lret
lock
in
dec
inc
cld
sbb
sub
push
cs
cmp
mov
shlb
cmpsl
mov
test
xor
xchg
or
call
pushf
roll
mov
mov
xlat
mov
adc
and
stos
mov
int
fs
adc
lret
mov
arpl
in
fistpl
mov
push
mov
jae
cmp
cmp
aam
push
and
jecxz
fwait
or
add
cmp
adc
push
aam
inc
test
fidivl
into
cmpsl
mov
out
push
pop
mov
scas
lods
in
mov
xchg
inc
xchg
in
leave
mov
jecxz
or
push
ret
dec
xor
and
pop
or
sarl
xor
addr16
pop
jp
push
outsl
mov
test
or
imul
and
cmpb
cmpb
je
outsl
mov
popf
cmc
mov
lret
xchg
add
cmp
dec
sbb
mov
enter
dec
and
mov
loopne
sub
fnstsw
add
out
ds
push
cs
insb
pushf
mov
nop
xor
into
out
mov
mov
mov
dec
xor
inc
jnp
mov
pusha
in
arpl
jge
int
cs
mov
cmp
sbb
mov
and
jne
cmp
movsl
ret
dec
data16
in
sub
add
das
adc
mov
cmpsb
ljmp
arpl
cmp
dec
shlb
cltd
push
arpl
test
lret
adc
mov
fimull
int
fisubrl
push
and
sarl
mov
pop
add
dec
cmpsb
sub
sub
gs
cmp
das
xchg
cmpsl
ljmp
clc
and
data16
mov
inc
in
jnp
mov
lahf
dec
ds
lret
sbb
or
push
cmc
xor
sub
jno
fisubrs
adc
shr
xlat
cli
imul
mov
ret
shlb
outsl
push
loop
cli
sub
jno
scas
mov
iret
mov
sbb
ds
dec
sub
sbb
jno
pop
adc
jb
scas
orb
test
lret
movsb
jge
clc
cs
or
mov
movsb
insl
cmpsl
repnz
mov
cmp
aas
mov
in
iret
fwait
xchg
test
lods
popa
inc
fcompl
mov
push
mov
fisubrl
imul
stos
adc
xchg
cmpb
sub
inc
jecxz
sbb
jns
sub
out
push
mov
repz
or
cmp
icebp
aaa
push
inc
movsl
ror
insb
aaa
jo
cmp
sti
clc
clc
loope
sub
cmp
mov
pushf
dec
add
mov
pushf
jle
push
imul
hlt
pop
iret
addr16
inc
js
pushf
add
andl
pop
mov
cmp
fists
pop
in
out
shll
pop
push
sbb
into
mov
mov
out
fistps
out
sub
stos
outsl
ret
or
xlat
repnz
inc
or
loopne
movsb
ljmp
daa
pushf
add
and
mov
shlb
mov
inc
int3
dec
push
gs
in
mov
pop
add
int
push
jae
arpl
jo
mov
pusha
jns
lock
mov
pop
cmp
dec
in
insb
ret
popf
aad
cli
ret
dec
addb
aam
test
cmpsl
cwtl
and
leave
mov
mov
movsl
imulb
cltd
aam
repnz
nop
scas
mov
sbb
rolb
pop
mov
xchg
in
std
aas
mov
or
pop
xchg
std
or
mov
jg
add
repz
xchg
or
add
or
xchg
call
shll
dec
into
fwait
add
jg
add
mov
mov
mov
pop
pusha
inc
scas
xchg
sahf
xor
inc
fistps
lcall
mov
rorl
fidivl
das
sbb
addr16
adc
mov
inc
cmp
jecxz
ljmp
pushf
fists
call
cmc
dec
scas
cmp
mov
call
push
mov
inc
inc
imul
jmp
icebp
cmc
jne
das
sub
dec
mov
sub
js
ficoml
mov
add
xchg
jne
mov
jmp
rolb
pop
subb
cmpsl
jg
xchg
faddp
add
sub
mov
inc
or
imul
cs
push
xchg
cli
fwait
mov
int
add
dec
jmp
add
jmp
lock
aaa
dec
test
dec
xor
gs
mov
jne
cli
xor
mov
int3
xor
clc
idiv
mov
in
pop
into
outsl
insl
mov
cmp
mov
gs
mov
mov
psubw
pop
or
jne
sub
sub
aaa
cld
lea
cmp
std
adc
fnstsw
sub
jle
xchg
aaa
lret
xlat
mov
enter
js
jecxz
and
enter
pushf
adc
js
add
push
sbb
leave
sbb
adc
aad
call
pushf
dec
jecxz
and
in
dec
sahf
js
add
mov
pop
xchg
inc
aas
js
scas
pop
xorb
pop
lret
dec
jmp
fisubrs
dec
mov
pop
je
fcmovnb
out
mov
mov
mov
and
mov
pushf
or
sub
dec
pop
mov
leave
cwtl
hlt
popf
loopne
aas
loope
mov
repz
int
subb
mov
cltd
jnp
test
shll
aam
jnp
pop
cs
push
in
mov
push
out
into
lret
outsl
fistpll
and
pop
xchg
stos
fs
sbb
pusha
cmpsl
pop
dec
lods
adc
test
sarb
xor
pop
dec
xchg
pop
ret
shrb
or
inc
test
cli
mov
mov
pop
sub
or
xor
mov
inc
adc
test
ds
ds
pavgw
loope
jb
push
negl
cld
ss
xor
xchg
jo
movsb
push
mov
lret
sbb
jmp
mov
jl
xor
nop
in
out
pushf
xchg
lret
es
loop
xchg
sub
xchg
push
rorb
xor
sbb
xchg
add
outsw
pop
int
adc
push
lods
or
xchg
push
push
dec
pop
dec
fistps
xchg
mov
shlb
js
jle
inc
sub
xchg
stos
out
pop
in
and
std
pop
call
pop
mov
fisubrl
fstpt
nop
lcall
lock
cs
lock
std
stc
adc
lods
and
nop
mov
stos
out
ret
enter
pop
and
iret
pop
js
jnp
adc
fsubr
mov
aam
sub
dec
jne
jnp
jno
sub
cmp
inc
mov
inc
push
jl
xchg
sahf
sarb
repz
mov
add
hlt
sub
in
iret
mov
cltd
sbb
fucomi
inc
xor
cmc
imul
lret
jo
jb
test
rcl
cmp
hlt
ds
mov
data16
xchg
or
stos
clc
dec
test
lahf
jl
lods
pop
mov
cwtl
ds
mov
outsb
gs
scas
or
push
cmpl
hlt
imul
push
mov
sub
shl
insb
cs
push
xor
mov
aad
inc
cltd
xor
fwait
push
leave
into
inc
mov
push
or
pop
or
ja
pop
shll
repz
jns
clc
imul
inc
ficoml
add
test
leave
in
fistl
push
fwait
in
lock
mov
jnp
roll
fstps
jae
xor
push
repz
test
ss
inc
out
aam
stc
inc
das
nop
stc
adc
pop
inc
repnz
fs
dec
adc
insb
rorb
shrb
cmp
movsb
loop
xor
adc
and
sbb
mov
das
cmp
aaa
mov
int3
hlt
rclb
clc
repnz
dec
fs
sub
add
inc
cmp
mov
add
enter
fldl2e
mov
lahf
shrl
adcb
mov
mov
orl
jae
mov
loop
mov
sbb
xor
lods
mov
jg
je
mov
ss
test
push
sbb
call
lock
fwait
xchg
fldl
mov
es
clc
push
inc
int3
jl
pop
and
xchg
ficoms
pop
xorb
mov
test
ja
dec
mov
xchg
rcll
mov
lods
mov
xchg
adc
add
lds
imul
lds
xor
ret
pop
popl
sbb
add
call
out
and
sbb
mov
test
out
push
jbe
xor
inc
push
mov
sbb
rolb
xchg
dec
fnsave
outsl
cmp
cmp
jno
mov
push
push
rcrb
inc
mov
or
ss
mov
test
fisttpl
pop
dec
mul
jp
inc
fimull
es
dec
ret
subl
and
xorb
or
mov
push
dec
aaa
sbb
ljmp
xchg
loopne
shrb
mov
pop
out
divl
xor
ja
cmp
push
push
dec
dec
outsb
dec
in
or
mov
sti
imul
sub
jo
sub
and
cltd
fbld
lea
mov
xchg
fistps
push
jb
xlat
mov
out
rol
jecxz
es
add
dec
arpl
mov
lcall
iret
jecxz
cli
insl
xor
out
push
sub
xor
xchg
popa
jecxz
pop
insl
icebp
sub
pop
test
into
movsb
stos
and
cmp
fsubrs
dec
loope
ds
jp
or
xor
push
mov
cmp
jne
clc
cmp
imul
in
push
inc
fnstenv
negb
fistpl
cmp
jge
scas
ja
inc
mov
mov
dec
xor
mov
push
xlat
jl
insb
mov
ja
sbb
mov
pop
fcomps
cmp
push
pop
pop
hlt
scas
popa
rcrl
mov
xchg
mov
movsb
pop
cmpsb
mov
jo
out
addr16
fs
dec
mov
jp
or
jp
add
pop
and
xchg
or
mov
or
mov
cmpsl
dec
add
mov
cmp
js
and
imul
sub
movsb
das
dec
push
xor
popf
inc
popf
pushl
push
iret
pop
add
pop
fiaddl
ja
inc
or
inc
pushf
aad
mov
push
pop
mov
test
jmp
and
push
xor
fsubrl
imull
pop
notb
int
jne
inc
in
es
notl
mov
popa
out
jae
insb
call
mov
mov
cmpsb
hlt
push
mov
lahf
mov
shll
push
xchg
shlb
sub
xor
xorb
sbb
sub
dec
das
cmp
add
jmp
lret
sbb
negb
dec
js
inc
cs
in
push
loop
or
mov
arpl
hlt
fisubs
mov
mov
mov
cmpsb
sbb
pop
mov
inc
xchg
aaa
jg
fnsave
sub
out
pop
in
ret
pop
imul
jne
add
mov
rorl
xchg
jecxz
sub
cmc
jmp
push
jb
jo
cmpsl
ret
rcrb
adc
hlt
jne
jns
call
adc
jg
lcall
movsb
loop
enter
jge
xchg
inc
daa
pusha
movsl
ret
mov
aam
jo
jecxz
adc
mov
movsb
mov
lret
cmpsb
dec
xor
push
sbb
sub
dec
loope
bts
mov
cmpb
push
fistl
sbb
dec
out
mov
fucomi
push
ficoms
pusha
adc
and
or
push
inc
les
xor
xchg
mov
outsl
push
dec
fistps
lods
das
cmp
ret
sti
xor
sbb
aad
xchg
or
mov
sub
aas
loop
xlat
pop
cld
movups
nop
cmp
jmp
jl
movsl
mov
lea
ret
xchg
add
xor
xlat
mov
fmull
sti
pop
sub
scas
in
xor
loopne
push
cmpl
stos
jno
xchg
and
shrb
pop
in
xchg
and
lock
and
sub
cmpsl
loop
sbb
cmp
mov
xor
ljmp
push
aaa
xor
mov
xchg
rcrb
xchg
je
frstor
in
jnp
lcall
cltd
mov
pop
mov
adc
shll
jmp
jp
and
fimull
pop
sub
jne
loope
pop
ret
dec
stc
sbbb
loopne
lret
inc
jg
in
mov
iret
decl
add
jnp
dec
add
push
push
inc
fidivl
jnp
shlb
ret
adc
lds
imul
push
adc
mov
jne
pause
loope
mov
cmp
jno
outsb
sbb
xchg
shrl
addl
mov
scas
loope
adc
mov
and
xchg
xchg
stos
push
shrl
push
push
ja
xchg
jp
push
rclb
mov
lods
dec
jmp
mov
inc
inc
inc
je
out
mov
cld
aaa
inc
adc
push
inc
xlat
or
mov
das
mov
outsl
pop
scas
rolb
dec
test
sarl
es
jmp
popf
iret
test
outsl
dec
mov
mov
pop
mov
inc
xchg
filds
cmpsl
add
or
sub
mov
aaa
jge
mov
pop
and
test
jno
addb
popa
jno
xchg
lcall
std
cmc
int
ret
jb
icebp
cmp
ds
lock
adc
or
jbe
rclb
fcoms
je
mov
outsl
xor
pop
xor
in
push
lods
ret
clc
mov
inc
enter
pushl
movsb
divb
gs
mov
or
jo
rclb
daa
pop
imul
inc
test
sub
and
stos
inc
inc
mov
xor
outsl
pop
push
jns
adc
cli
sbb
pop
inc
imul
jne
aam
mov
cmp
les
mov
aam
inc
shl
sub
add
jb
cli
cmpb
mov
dec
or
inc
div
movsb
push
lods
imul
add
out
sub
push
imul
jns
test
cs
mov
mov
xchg
lock
sti
rorb
mov
das
pop
lods
cmp
pusha
xchg
pusha
mov
test
sub
mov
add
out
popf
les
push
je
or
lds
jp
and
dec
mov
add
sub
lds
pop
add
test
adcb
inc
out
xor
adc
loop
in
sub
cmpsl
lret
out
xchg
fwait
jbe
adc
lret
mov
mov
cmc
sub
insl
je
gs
pusha
pop
sbb
mov
pop
or
mov
sub
jns
popa
mov
xor
dec
repz
je
out
lret
jmp
into
insl
into
xor
or
jno
and
cmp
and
sbb
inc
loope
mov
jg
mov
cmp
mov
lea
int
adc
cmpsl
xor
xchg
repz
insb
inc
pop
icebp
lret
fs
stc
jge
jns
shrl
jmp
scas
push
inc
mov
mov
cwtl
cmp
add
dec
push
push
faddl
std
hlt
jmp
xchg
inc
mov
popf
xchg
imul
push
dec
jne
mov
daa
cmpsl
sahf
lcall
pop
inc
lret
fbstp
es
mov
leave
testb
stos
jle
repnz
jae
scas
iret
xor
fidivrl
sar
jecxz
push
jp
add
mov
xchg
outsb
dec
enter
xlat
xor
lods
mov
adcl
and
xor
lds
fistl
ficompl
mov
cmpsl
test
sbb
sub
sub
adc
mov
dec
push
ja
mov
std
sbb
inc
xchg
int
pop
push
lods
push
out
or
mov
or
xchg
push
dec
or
lcall
das
test
mov
aad
xchg
insb
cld
sbb
test
insl
jnp
sub
test
daa
jecxz
mov
mov
mov
fadds
scas
repz
cltd
stos
gs
test
xchg
mov
inc
jp
add
and
sbbb
int
jmp
stos
test
add
aam
mov
pusha
jg
iret
xchg
lahf
je
into
add
dec
mov
mov
lret
arpl
cmp
push
minps
cmp
sub
std
inc
jo
incl
sub
daa
pop
sub
push
sub
push
in
popa
loope
xchg
sub
roll
lret
icebp
addb
xlat
sbb
jns
fs
test
jns
push
xor
scas
out
mov
mov
cmpsl
addb
inc
add
sahf
jmp
jbe
mov
mov
pop
sub
xlat
mov
xchg
int
mov
cli
stc
and
stos
inc
ret
mov
lds
xchg
add
push
repnz
sub
sbb
lds
sbb
sub
xchg
data16
outsb
out
xchg
test
mov
popa
gs
ja
jns
sub
addr16
sbb
ljmp
scas
push
rol
pop
add
stc
aas
xor
int
adc
push
lds
ret
sub
add
xchg
icebp
ds
cmp
loope
pop
fstps
adc
and
cmp
fwait
les
aas
sbb
add
inc
test
sub
jl
xchg
mov
inc
fdivrl
ret
adc
jb
push
push
jno
jg
cmovne
mov
pop
rolb
sbb
lret
xchg
shlb
xor
pop
sub
pop
mov
inc
cmp
push
push
shlb
adc
not
cli
in
mov
popf
lcall
jo
test
jnp
xchg
outsb
push
arpl
adc
sbb
mov
shld
push
cmpsl
xchg
imul
jo
cmpl
dec
fldenv
jbe
pop
jno
repz
pushf
jmp
nop
xchg
test
popa
sub
push
jnp
aam
pop
adc
insb
jle
xor
sbb
imul
divl
xchg
jno
out
out
or
add
outsl
fmulp
mov
sti
add
sub
ror
cmp
mov
sub
jle
xlat
cs
push
lods
mov
pop
or
xor
ja
sub
ds
jns
rclb
fstl
xchg
arpl
in
test
inc
mov
sbb
fists
jae
xchg
loope
mov
fsubr
mov
ja
mov
mov
xchg
repz
outsl
jp
push
in
push
mov
jecxz
push
sub
loopne
sub
sbb
pushf
xor
pop
in
aaa
xor
xchg
sub
ret
addl
xorl
imul
push
xchg
mov
inc
daa
push
xor
sub
fucomp
xchg
push
xchg
dec
xor
pop
pop
subb
loopne
sub
xor
mov
xchg
push
jns
xchg
push
outsl
xchg
xchg
or
stos
cld
orl
imul
mov
pop
xchg
popf
xor
lods
mov
jge
adc
xchg
cmp
mov
xlat
aad
sahf
jb
imul
dec
mov
gs
jl
aam
call
rcl
cmpsl
jge
cmc
adc
leave
ds
ja
mov
push
int3
gs
sar
mov
jl
daa
dec
call
dec
daa
outsb
lock
rorb
mov
lret
pushf
pop
cmc
movsb
sbb
cmc
subl
dec
out
testb
stos
loopne
insb
mov
xchg
mov
inc
icebp
inc
sahf
fneni(8087
aam
push
cmpsb
cmp
sahf
lcall
xchg
jmp
dec
mov
pusha
insb
inc
dec
jmp
insl
bound
fnstenv
es
leave
add
mov
add
in
sbb
sahf
fidivrs
icebp
jae
rcrb
mov
dec
push
xor
out
add
mov
mov
dec
cmpsb
jmp
sbbl
fstpt
add
out
rorb
aam
stc
mov
mov
dec
xor
movl
sub
test
push
scas
mov
out
addr16
jmp
pop
pop
dec
sub
mov
xlat
lahf
sub
cmp
dec
test
enter
xor
adc
stos
imul
xchg
mov
fnstenv
scas
fstps
sub
in
lods
jmp
jno
dec
mov
xchg
adc
mov
int
jecxz
add
mov
mov
mov
outsb
adc
popa
movsl
jbe
shll
mov
mov
inc
adc
nop
add
icebp
rcrl
pushf
or
and
xchg
leave
push
add
cmp
iret
out
out
jae
lods
cmp
mov
cmp
fdivrl
jge
test
int3
ret
push
dec
roll
sahf
sub
sub
mov
dec
or
nop
ljmp
xchg
pop
imul
fisubrs
cmp
xor
pop
xchg
pop
aaa
and
subb
shr
jmp
outsb
push
jne
ret
xchg
xorb
aas
mov
mov
aas
out
push
push
pop
sti
repnz
cmpsb
xor
pop
lods
push
mov
mov
arpl
pop
fmull
call
lods
jns
nop
jg
mov
in
out
das
mov
push
std
in
outsb
xchg
jecxz
sbb
jecxz
ret
adc
les
arpl
push
mov
push
out
push
shll
adc
outsl
mov
sbb
cmc
adc
sbb
sbb
fists
xor
jp
pop
lahf
xchg
mov
sub
leave
mov
pop
pop
popf
add
mov
scas
leave
pushf
push
orb
pop
fisubrs
in
ss
lcall
cmpsb
xor
sbb
stos
mull
jne
jg
inc
dec
fldt
jmp
movsl
xchg
pusha
push
fdiv
xchg
js
enter
jge
jecxz
dec
ficoms
cld
and
cld
add
lods
ss
mov
fs
repz
push
out
mov
jae
aas
and
xor
nop
pop
inc
and
sbb
mov
add
xchg
or
xor
shrl
inc
add
idivb
mov
pop
aam
jae
mov
fsubrl
lods
mov
or
aad
repz
aam
jns
dec
or
sbbb
cmp
mov
lock
pop
scas
mov
push
mov
pop
inc
xchg
cltd
lcall
rorb
xchg
jg
outsl
or
xor
lock
adc
int3
inc
cmp
loop
ret
or
push
xor
sahf
and
jns
xchg
push
and
mov
and
int
inc
xchg
push
shrb
jne
xchg
in
mov
xor
dec
and
cltd
fwait
mov
lds
inc
stc
jmp
push
ret
sahf
jb
mov
lods
or
jae
add
movsb
inc
sub
fldcw
hlt
mov
dec
aas
orb
mov
push
push
lds
inc
ret
outsl
fwait
mov
xor
fwait
push
mov
shll
lret
fwait
sub
mov
sub
pop
jb
iret
mov
int3
lea
es
loope
jnp
out
mov
xchg
inc
push
dec
pushf
in
loop
test
cmp
lock
pop
inc
inc
jno
xor
test
sbb
jl
or
push
clc
fs
or
and
lods
lahf
shlb
ret
aas
addr16
ljmp
adc
xor
sub
mov
adc
out
rol
inc
stos
notl
adcl
int3
xor
pop
push
loope
leave
push
xchg
shl
fsts
pushf
xchg
or
iret
mov
xlat
xor
out
scas
push
filds
rclb
or
cmp
dec
ds
bound
mov
sahf
sbb
jecxz
push
xchg
cmp
cwtl
push
inc
adc
icebp
or
add
test
sbb
sbb
rcr
xor
mov
pop
out
cmp
add
int
je
in
popf
cld
pop
pop
or
mov
jbe
leave
push
push
scas
in
or
and
cli
fcomp
and
call
mov
popf
js
jns
jmp
in
xor
push
fistps
bound
int3
push
xchg
xlat
out
jo
cli
dec
or
out
repnz
push
mov
or
add
cmpsb
lea
movsl
mov
xchg
cs
push
xor
cmp
jle
in
and
dec
inc
imul
ret
fcmovnbe
mov
scas
jae
popa
jmp
xchg
test
fiaddl
xor
jmp
enter
or
and
lcall
push
adc
test
or
mov
cli
dec
xchg
inc
mov
cmp
call
stc
or
mov
mov
outsl
mov
pop
mov
sahf
aas
lahf
hlt
xchg
jg
test
push
repz
pop
popf
lcall
rcrb
daa
lods
xchg
pop
dec
std
ffree
nop
add
mov
scas
psubq
es
scas
push
mov
setl
mov
incl
lcall
xorb
scas
pop
push
movb
aam
repnz
adc
in
bnd
xchg
and
addr16
mov
mov
xchg
pusha
mov
add
cwtl
add
push
jbe
sbb
icebp
mov
sbb
sbb
lret
push
insb
xchg
std
out
fsubl
xchg
lea
aam
sarl
fs
loop
lret
fwait
bound
cwtl
cmc
jp
mov
scas
js
jbe
add
mov
jne
shl
mov
mov
mov
add
inc
dec
out
jmp
mov
sbb
mov
push
fistl
repz
test
xchg
fwait
pop
push
push
cmp
dec
cli
jle
or
sbb
jb
dec
xor
mov
push
fisubrs
bswap
pop
stos
movsb
inc
sbb
fcmovbe
bound
inc
jg
cwtl
jbe
sti
adc
mov
sub
mov
outsl
std
dec
and
add
call
push
ljmp
insb
mov
jp
mov
rcll
sub
jl
lock
cmpl
mov
or
mov
xchg
push
dec
inc
sahf
xorl
shrb
mov
aas
sub
cltd
ds
insb
cwtl
cmp
dec
repz
jae
ror
clc
leave
rorl
cmp
aam
xor
orb
imul
out
xor
and
shrb
sbb
adc
mov
loope
subl
adcb
cwtl
sub
je
mov
mov
lds
repnz
inc
lds
xchg
in
xchg
into
jmp
fistl
lahf
adc
sbb
clc
mov
data16
pop
ror
gs
add
ficomps
addr16
lea
ja
fxch
mov
das
jp
xchg
or
testl
testl
jbe
mov
adc
mov
fadds
cmp
cli
cli
out
jmp
pop
aas
in
sub
adc
mov
add
push
test
loope
sub
dec
mov
mov
sbb
mov
test
gs
pop
jno
mov
add
stos
leave
inc
aam
inc
xchg
pusha
and
xchg
jmp
out
out
add
stos
xchg
lcall
call
loop
adc
cmc
int3
xchg
stc
sbb
mov
mov
sub
ss
adc
adc
and
xor
adc
cmp
test
test
push
and
cmp
mov
mov
push
add
iret
push
mov
js
xchg
add
push
xchg
fnstenv
scas
push
call
lea
rcll
dec
xchg
mov
pop
add
ret
imul
inc
cs
aaa
leave
push
sub
bound
mov
dec
inc
clc
mov
mov
mov
mov
cmp
test
outsb
sub
adc
das
add
xlat
rorb
adc
add
push
mov
xchg
inc
sub
pop
inc
adc
cmc
sub
and
jae
out
and
fs
pop
inc
cltd
das
int3
pop
ficoms
mov
decl
and
movsb
shlb
lods
int
leave
fcmovne
lea
sahf
fidivrl
popf
dec
push
dec
fxam
lcall
in
mov
sahf
rcl
les
repnz
aad
insl
loop
push
inc
fstpt
adc
stos
lea
jne
bound
addr16
cmc
xlat
data16
sahf
mov
and
fs
or
or
cli
sub
iret
cli
xchg
aas
mov
xchg
icebp
pop
xor
xor
jne
faddp
mov
pushl
push
mov
mov
jle
push
rorb
mov
sub
add
arpl
or
push
andb
js
xchg
jg
and
add
mov
xlat
inc
xchg
test
add
inc
cmpsb
test
mov
ficoms
lods
imul
pop
jp
inc
cli
pop
into
xchg
in
insb
jle
xor
pusha
jno
and
add
in
add
test
sbb
mov
xlat
jecxz
mov
lea
mov
adc
sbb
fisubs
adc
loopne
sbb
test
stc
dec
cli
pop
mov
xor
xchg
lock
aam
scas
popf
mov
outsb
adc
pop
lods
scas
je
cmp
xor
mov
jg
mov
rclb
xchg
dec
adc
lock
lods
mov
push
mov
push
ja
mov
mov
adc
jmp
dec
sbb
xchg
push
mov
sbb
mov
mov
imul
scas
es
jnp
pop
adc
fucomi
xchg
fistpll
pop
xor
dec
inc
scas
fdiv
iret
mov
jo
mov
lret
pusha
movsl
cmp
add
and
fstpl
popf
out
lds
mov
and
loopne
out
dec
mov
inc
jb
lea
fadd
xlat
data16
addr16
sub
add
pop
dec
cmpsl
cmc
lret
fdivs
xor
pop
daa
cmp
push
cmpsl
cmp
mov
add
subl
fs
pop
push
fsubr
mov
xor
inc
out
adc
mov
rorb
popa
xchg
pop
pop
jbe
in
add
xchg
leave
mov
jg
jle
sti
in
inc
mov
out
push
movsl
sub
clc
and
imul
out
sbb
js
push
sub
or
sub
rcll
mov
dec
cs
lods
out
mov
loop
and
lods
or
mov
sub
mov
pop
fdivl
xor
mov
scas
lock
arpl
jp
and
inc
dec
jb
bound
rolb
pop
sub
cmp
mov
int
mov
sarl
call
push
cmpb
xor
shlb
mov
jbe
notb
lret
adc
sbb
mov
mov
loope
pop
push
out
jns
std
inc
aaa
shlb
mov
cwtl
stos
in
xchg
push
inc
sub
xchg
sbb
les
dec
popf
fstpl
inc
mov
inc
bnd
addl
jge
jg,pn
cmp
rorl
cmp
xrelease
push
dec
cmp
cmc
or
mov
mov
movl
push
test
push
lcall
scas
pop
lret
sub
mov
insb
arpl
lods
push
ffreep
add
sub
mov
into
aam
jmp
lret
aas
dec
push
test
push
int
jns
mov
in
push
lock
addb
fnsave
and
jl
xchg
fistps
fildll
inc
dec
cli
sub
popl
jnp
outsl
mov
push
aad
and
sahf
jo
stos
pop
add
mov
sbb
adc
or
stos
pop
test
sbb
cs
push
popf
mov
jb
leave
ret
sbb
mov
lods
inc
cltd
push
int
pop
repnz
add
lcall
cmp
push
movsl
jbe
mov
movsb
mov
inc
int
imul
pop
roll
mov
fisubrs
loope
in
adc
imull
xor
data16
push
test
xchg
inc
and
popa
fst
and
and
jae
mov
and
inc
add
repz
add
xchg
je
mov
ds
inc
fbld
mov
ja
dec
loopne
pop
push
jp
push
in
jl
loope
movsb
sbb
lods
gs
adc
loop
scas
scas
mov
pop
aad
test
cmp
push
push
mull
sbb
add
clc
call
out
les
push
enter
rorl
test
aas
dec
aas
sarb
jl
mov
xchg
hlt
cli
cli
xlat
push
movsb
cmpsl
les
push
aad
mov
rcl
popa
lea
arpl
bound
ss
outsl
push
imul
outsl
xor
testb
adc
aaa
out
cld
data16
push
loopne
jp
leave
call
jbe
outsl
push
pop
cs
jle
out
inc
addl
mov
inc
int
pushf
sti
xlat
roll
gs
mov
add
iret
dec
adc
pop
out
sbb
sti
or
push
mov
push
cwtl
push
or
add
or
pop
ret
mov
cltd
out
jnp
outsl
pop
add
jbe
enter
push
or
mov
ret
push
mov
sub
cmp
cli
test
out
call
lods
scas
adc
push
bound
scas
popf
mov
aad
sbb
rcr
leave
mov
leave
sti
cmp
imul
dec
xchg
adc
mov
pop
lcall
sbb
cltd
lret
loop
jp
add
int
pop
in
or
lcall
fistl
dec
fsubl
or
pushl
inc
shl
ret
add
mov
jl
jmp
out
imul
loope
jbe
js
inc
and
mov
xchg
jp
add
sahf
mov
stos
imul
and
test
sub
aad
push
mov
test
or
aad
adc
hlt
sbb
inc
xchg
les
leave
addr16
adc
xchg
ret
pop
pop
inc
inc
mov
scas
cwtl
inc
jmp
in
pop
jg
pop
cmpl
pop
cwtl
outsl
rorl
in
data16
or
sub
add
stos
mov
loopne
cmp
mov
nop
inc
lock
or
cmpsl
mov
lcall
lahf
jae
push
mov
jecxz
bts
adc
mov
pcmpgtw
jg
mov
mov
loopne
sbb
in
and
loope
mov
cwtl
xor
lods
cli
cmp
xlat
sbb
cmpsb
daa
jne
sbb
xor
jecxz
popf
xchg
lret
xor
push
jge
sbb
add
xor
adc
lods
ret
popa
cmp
pop
mov
jno
jno
imul
mov
loop
jo
sub
sahf
mov
fsubr
and
stos
xchg
aas
sbb
sub
fucomi
sahf
in
mov
out
sbb
popa
sahf
add
lock
les
xlat
bswap
mov
fdivs
sub
or
sti
cld
and
dec
push
adc
pop
popf
fadds
popa
aas
repnz
dec
xor
or
pop
fstp
push
pushf
dec
push
scas
sub
test
add
ret
xor
jge
lret
jne
les
je
js
imul
les
dec
ffreep
arpl
ja
movb
mov
xlat
lods
fistpll
out
loope
push
push
sub
daa
sbb
jbe
cmpsl
and
mov
ret
out
into
sub
sbbb
pop
or
adc
mov
adcb
pop
jle
mov
inc
push
sti
cli
clc
xchg
xchg
xor
iret
add
mov
mov
lret
sub
in
pop
push
ret
xchg
pop
in
dec
jb
icebp
shll
push
data16
decb
xchg
loope
jns
adc
out
or
inc
pop
or
jns
fcoml
xor
or
test
fistpll
roll
fldenv
dec
adc
mov
rorb
push
subb
inc
in
push
int
cmp
mov
jno
mov
pop
sarb
test
mov
outsb
pop
add
imul
and
test
out
sub
jns
dec
dec
cltd
xchg
lods
cmp
js
adc
addr16
iret
mov
add
push
mov
push
mov
push
or
sub
mov
in
xor
sbb
ljmp
mov
movsl
inc
jb
pop
cmp
popa
push
test
adc
and
fninit
test
out
out
stos
testb
xchg
out
xchg
dec
jp
fbld
xchg
mov
cmc
subl
sbb
cmp
enter
xor
std
clc
lods
inc
je
and
jl
aaa
fsubrl
pop
jae
mov
dec
jle
ja
mov
lds
mov
push
ss
jecxz
bound
pop
and
push
jbe
mov
inc
jbe
js
rorl
aas
mov
hlt
call
add
sbb
xchg
arpl
fidivrs
jecxz
stos
ds
mov
pop
or
and
daa
add
mov
xchg
push
test
push
data16
mov
scas
enter
gs
mov
ds
pop
movsb
outsb
pop
stos
subb
mov
adc
xchg
sti
fstl
int3
js
int3
dec
cmp
outsb
sub
test
rcrb
nop
pop
lods
jp
ja
in
inc
clc
cmp
outsb
cmp
cmp
or
mov
int
mov
xchg
add
imul
fcomi
mov
aas
arpl
and
in
pushf
jmp
insb
lods
repz
sahf
lcall
les
mov
or
inc
fwait
xchg
adc
fwait
adc
push
and
push
psubd
popa
clc
sub
js
sub
cmc
adc
cmp
jo
inc
es
mov
inc
cs
jle
mov
cmp
xor
inc
cli
mov
lret
lds
outsl
mov
enter
loope
in
test
loopne
out
mov
sbb
mov
sbb
scas
pusha
jl
mov
jge
mov
xlat
setb
outsl
xorl
pop
cmp
mov
jle
jns
cmp
xchg
inc
imul
fwait
mov
jno
cmc
jne
mulb
mov
ds
jno
mov
and
divl
pop
pop
dec
pop
mov
sub
push
ds
dec
jb
mov
cmp
sbb
lock
mov
js
daa
jbe
push
cltd
cwtl
daa
fs
or
add
sahf
pop
xchg
xlat
pop
lods
inc
stos
xlat
fisttpl
sub
mov
inc
xchg
pop
dec
cli
roll
mov
dec
lret
outsb
dec
rclb
pop
and
push
mov
roll
mov
lcall
lock
jp
ret
pop
mov
push
cmp
outsb
loopne
push
sub
arpl
mov
sahf
hlt
mov
roll
cmp
fwait
xchg
rcll
cmpsl
sahf
mov
insl
pop
xchg
xor
insl
and
cwtl
push
mov
or
aas
das
daa
cltd
stos
pop
fldl
insl
not
mov
add
lods
jp
fnsave
sub
add
fiaddl
xor
xchg
push
jbe
addr16
ljmp
dec
fsts
sub
loope
rcl
in
add
pop
lock
fstps
xchg
pop
cmc
lahf
pop
imul
mov
cmc
inc
dec
cmc
fstps
push
fdivrs
adc
test
std
imul
jp
sbb
lods
aaa
fistpll
test
xor
arpl
loop
hlt
retw
jae
push
cld
xchg
xor
xchg
sub
shll
cmp
sub
sub
cmp
lods
mov
cmpsb
push
push
adc
test
inc
and
adc
sarb
in
and
cmp
pushf
or
add
dec
movsb
sarl
cli
sahf
aam
dec
lcall
loop
push
out
mov
xchg
inc
orl
lods
ja
out
jno
stos
mov
lods
and
inc
pop
out
repz
jg
scas
push
and
and
lds
cmp
cmp
add
lods
bound
xchg
or
movsl
sahf
mov
jo
cmpsl
test
push
sti
or
mov
mov
hlt
hlt
inc
jno
adc
sti
fiaddl
cmp
push
icebp
aad
jecxz
sbb
mov
sbb
and
scas
sbb
movsb
mov
mov
xchg
push
mov
subb
dec
mov
adc
das
sub
dec
rol
scas
sbb
out
cld
test
sub
push
add
in
inc
adc
fmul
pop
dec
cmp
imul
mov
xchg
sbb
in
adc
cmp
adc
out
cwtl
adc
mov
cmp
inc
leave
mov
in
clc
fcmovu
adc
mov
popa
lfs
lret
jo
cli
mov
or
add
rorb
addr16
dec
add
std
test
cmc
xchg
cmp
aam
mov
mov
xchg
pop
data16
mov
lcall
cmp
xchg
jne
arpl
adc
test
test
and
mov
jae
das
cmp
mov
dec
mov
push
imul
ret
rcrl
arpl
xchg
adc
rorl
jcxz
push
call
inc
lret
repnz
dec
test
add
adc
sub
das
dec
pop
mov
cmp
adc
xlat
rorl
pop
push
ljmp
pusha
test
scas
stos
test
gs
incb
scas
ret
inc
xor
pop
xchg
xchg
adc
ret
scas
fwait
or
xchg
xor
lods
xchg
fildl
hlt
dec
pop
push
lods
es
inc
shll
pop
cmp
push
push
jl
scas
addr16
into
inc
cmp
dec
and
xchg
jl
mov
bound
mov
jmp
jne
test
dec
lods
fmulp
lods
mov
mov
les
mov
push
mov
add
sub
outsl
sbbb
out
divb
imul
xchg
flds
inc
mov
rol
or
push
mov
mov
adcb
aad
sub
push
adc
loop
pusha
scas
mov
stos
xor
addr16
mov
sbb
dec
test
das
push
inc
pop
mov
xor
pop
js
xor
or
pop
rclb
lock
loop
lret
cmpsb
subb
leave
movsb
and
mov
dec
bound
mov
push
ja
lret
xorb
lods
mov
popa
popa
mov
aad
sub
rol
push
dec
dec
jmp
xor
fiadds
dec
cli
sbb
sub
adc
lret
fmulp
pop
inc
sbb
mov
hlt
xor
jbe
es
arpl
pop
scas
push
loope
pop
adc
loope
add
or
xchg
or
fisttps
adc
cmpsl
sub
push
leave
push
std
or
fmulp
add
pushf
aam
mov
popa
enter
sahf
mov
mov
cmp
repnz
dec
fwait
adc
cmc
fcompl
stos
mov
pop
add
cmp
push
cmp
les
mov
movsl
repnz
sarl
test
push
inc
stos
nop
push
loope
mov
and
insb
adc
mov
insb
jp
cmp
in
sub
shr
xchg
cmp
pop
jns
xchg
mov
push
repz
push
and
fadds
and
add
cltd
inc
pop
loop
sub
sbb
add
add
daa
hlt
and
jno
add
outsl
cs
mov
in
jp
loopne
jb
sub
cltd
dec
jmp
out
fstpl
dec
fbstp
std
popa
ja
loope
sbb
cwtl
jmp
mov
mov
xchg
add
popl
icebp
popf
repnz
push
lods
in
cmc
cld
xor
mov
jno
xchg
inc
dec
xchg
into
loope
sub
sbb
sub
sub
fnstsw
xchg
or
and
jae
int3
mov
mov
lock
jb
fldt
sahf
out
mov
add
pop
pop
in
jl
push
aas
ds
loopne
icebp
sbb
mov
and
fbstp
mov
daa
mov
jo
lds
fcompl
adc
dec
shl
in
adc
mov
fiadds
sbb
les
cwtl
dec
mov
cs
movsb
mov
sbb
cmp
imul
inc
jbe
sahf
xchg
sub
sbb
mov
lret
mov
inc
in
xor
in
jmp
sub
adc
aad
lods
das
sbb
inc
jns
fbld
pop
fistpll
fbstp
cmp
scas
lock
and
imul
fstp
mov
and
sub
out
roll
push
in
loope
test
adc
and
shrl
jo
stos
dec
pop
or
cmp
inc
icebp
xchg
or
cmc
sbbb
sti
adc
jmp
sbb
mov
adc
adc
insl
sub
loopne
push
fsubs
cs
pop
cmpsl
push
nop
mov
in
mov
ret
mov
cmc
mov
cmp
imull
out
loope
bound
push
je
ret
imul
mov
enter
adc
xor
ja
push
leave
shl
adc
rcll
fwait
or
cli
add
shrb
bnd
bound
push
popa
mov
pop
int3
or
push
cld
iret
xchg
gs
xor
mov
pop
pop
pop
cmpsl
mov
lds
and
jl
lret
int
adc
adc
or
mov
pusha
aas
pop
mov
xchg
mov
dec
jl
jbe
call
pop
and
add
cmp
out
dec
inc
sub
sub
mov
and
popf
cld
xchg
mov
xchg
leave
ret
sbb
lea
movsl
jp,pn
int
sbbl
xchg
sub
sbb
pop
outsb
mov
mov
aam
and
pushf
cmp
jo
push
or
jo
add
xor
or
dec
xchg
sub
sti
aad
inc
out
popa
clc
test
pop
arpl
xchg
xor
dec
std
cmp
jae
push
xor
pusha
jp
in
std
repz
jb
xchg
mov
push
jge
adc
jle
mov
push
inc
rclb
and
pop
cmp
xor
jle
or
shlb
mov
jl
push
aad
xor
xchg
sbb
and
mov
outsl
or
fidivl
pop
arpl
ret
mov
pop
inc
push
lods
add
aam
sub
lods
jp
aad
adcl
ja
sub
repz
arpl
sub
pop
mov
fdivl
pop
jnp
std
aad
xor
lods
mov
cwtl
roll
xor
cmpsb
pop
out
fxch
or
mov
fidivl
cmp
test
mov
xchg
xchg
repnz
roll
pop
popa
insl
out
mov
add
cmp
loop
jno
ret
dec
stc
cmp
test
and
push
jp
nopl
fwait
mov
mov
mov
xchg
cld
xchg
fsubrl
sbb
xchg
mov
push
or
mov
sbb
push
or
outsl
call
and
call
testl
xchg
or
jg
mov
sbb
fisubs
aaa
scas
aad
mov
sarl
add
sbb
cmp
shll
test
inc
fwait
xchg
sbb
lea
stos
pop
cltd
mov
pop
xchg
inc
push
mov
mov
int3
sub
lcall
fs
stc
shl
test
dec
add
enter
adc
fdivrl
mov
lcall
or
fldcw
xchg
aas
jp
mov
pop
loope
add
and
outsl
jno
popf
and
mov
dec
pop
mov
stc
sti
cli
lret
mov
insb
lea
add
popf
mov
dec
call
cmp
xor
je
sbbl
insb
xor
loopne
das
mov
lea
stos
pop
adc
cmp
or
adc
mov
cli
push
dec
cs
addr16
fimull
mov
pushf
or
rcr
ds
sar
sbb
pop
sbb
and
sbb
pop
mov
insb
cld
push
mov
push
ds
fiaddl
test
jmp
ja
cmp
mov
inc
je
sub
xchg
sub
or
add
sub
pop
mov
pop
cwtl
cmc
mov
dec
icebp
xor
pop
bnd
mov
push
test
mov
jne
les
movsl
jns
es
push
and
nop
jno
mov
cmp
dec
shlb
adc
mov
std
and
fldt
xchg
stc
fnstenv
jmp
mov
hlt
jns
aad
fldl
repz
push
je
cmpsl
repz
adc
push
mov
rcrl
and
out
daa
cmpsl
push
mov
sub
push
cmc
xor
in
pop
adc
mov
and
insl
xor
movaps
push
push
or
test
mov
inc
scas
jb
mov
push
js
nop
js
fstl
xor
xor
mov
and
and
mov
adc
add
or
pop
pop
pop
loope
dec
lahf
mov
adc
mov
aam
jle
jp
sub
push
je
pop
pop
mov
cmpsl
mov
mov
lea
xor
sub
mov
repz
aaa
divb
jbe
pop
sbb
cmp
sbb
jnp
loop
push
fistpll
lahf
or
lret
outsb
inc
insb
adc
xor
xorw
ficompl
stos
push
fmull
mov
jge
in
fwait
cmp
xchg
and
nop
xchg
int
add
lcall
jmp
add
xchg
das
jns
jno
sub
cmp
dec
call
mov
into
rcrl
and
ss
scas
add
cmp
jl
fisttps
inc
add
repz
bound
inc
push
loopne
add
inc
lcall
mov
iret
je
or
rcrl
xor
adc
cmp
mov
dec
push
pop
les
rcl
stos
imul
adc
or
sbb
psraw
pop
rcl
test
push
call
cmpsb
ljmp
repnz
pop
xor
les
outsb
mov
add
insl
adc
stos
sub
xchg
push
andl
mov
cmpsl
fcmovb
xorl
inc
sbb
mov
out
inc
push
xor
jl
inc
imul
popa
and
ror
ret
pop
cmp
aam
sub
mov
inc
int3
pop
xchg
mov
mov
mov
bound
mov
pop
xor
adc
fidivrs
pop
fnstcw
adc
mov
test
testl
out
loop
in
jns
fsts
dec
xor
inc
mov
add
jnp
add
and
sub
lds
lret
mov
jno
inc
fisttpl
jns
xor
push
mov
std
cmpsb
fbstp
mov
outsb
sahf
or
mov
stos
xchg
test
les
xor
in
mov
jmp
in
in
gs
lods
mov
and
mov
aas
push
xchg
fidivrl
mov
cmpsb
mov
dec
push
movsl
in
xchg
sbb
jae
cmp
adc
fmull
movsl
ja
pop
sub
ds
dec
fidivs
mov
subl
lods
aad
faddl
movsb
sbb
xlat
movlhps
and
add
clc
mov
dec
or
add
stos
leave
push
pop
cli
sub
pop
adc
ds
gs
jae
fsubr
add
and
mov
fdiv
sub
cmc
das
sbbl
inc
xchg
add
jno
in
test
ret
testl
and
push
jge
pop
pop
int
daa
pop
cli
mov
pop
fadd
push
loope
jp
jmp
pop
ljmp
xchg
imul
xchg
je
jle
daa
movsl
jns
xchg
stos
jae
mov
xor
cs
push
pop
dec
sub
mov
push
js
cmp
xchg
jae
inc
sub
sarl
in
mov
testl
repnz
pop
lods
scas
lock
sahf
xchg
dec
ss
sbb
and
jae
movsb
jge
pop
add
xchg
insl
mov
setb
mov
pop
stc
xchg
fstl
add
inc
push
cmp
ficomps
js
mov
test
into
mov
adc
jecxz
or
stc
stos
sbb
jmp
aas
and
imul
loop
sub
push
pusha
or
push
adc
cmpsb
in
imul
and
mov
sbb
jo
adc
les
arpl
ss
outsl
out
loope
popa
arpl
shlb
jae
add
lods
into
pop
xchg
insb
fistpl
mov
lahf
bound
je
pop
sti
mov
xor
mov
jp
in
push
dec
or
dec
or
std
call
mov
jae
dec
xchg
pop
jg
pusha
pop
fistpl
dec
push
ret
jne
mov
mov
shrl
lods
or
lods
xchg
int3
adc
adc
dec
mov
sub
int
inc
mov
stc
aam
das
pop
bound
or
or
out
xor
daa
aas
ds
xorb
bound
cmp
cmp
in
jne
test
sahf
mov
pusha
jno
stc
xor
dec
dec
add
push
sbb
jecxz
out
xor
dec
push
xor
mull
jp
cmc
imul
flds
mov
pop
jne
sbb
add
or
push
pop
arpl
dec
shl
dec
adc
rcrl
mov
insl
bound
out
pop
repnz
int
cs
aas
insb
fcmovu
inc
and
xchg
movups
mov
lret
adc
dec
sub
ja
mov
icebp
aas
loopne
pop
and
jle
mov
shll
js
pop
cmp
cmpsb
imul
sub
mov
ret
mov
sbb
es
xor
mov
leave
shll
jne
lods
xor
arpl
sarl
lods
xor
lds
inc
out
leave
jne
sub
xor
jge
leave
sub
imul
enter
lods
dec
cmpb
add
call
loopne
inc
cwtl
mov
insb
push
cwtl
orb
gs
mov
shlb
fmulp
pop
and
xchg
pop
dec
dec
mov
cli
inc
sbb
mov
mov
xlat
lcall
call
inc
aas
pop
xchg
mov
fstpt
mov
xchg
sbb
xchg
jnp
inc
dec
imul
xchg
pop
xor
enter
adc
cs
cld
sahf
loopne
clc
pop
sti
jecxz
add
mov
mov
out
jp
test
ret
out
icebp
mov
shlb
push
push
lock
test
lea
int3
negl
jne
rorb
insl
cltd
mov
out
cmp
ret
sahf
cmpsl
inc
dec
popf
dec
pop
mov
cmp
sahf
popa
fst
in
dec
push
test
lods
xchg
jns
mov
mov
jle
adc
cs
aam
jp
xor
lods
inc
xor
aaa
rolb
cs
fwait
into
lret
xchg
jno
imul
mov
xchg
jge
dec
add
in
pushfw
inc
mov
popf
call
adc
xchg
add
pop
call
test
lret
fstp
jo
push
lcall
cmpsb
mov
pop
jns
scas
mov
lods
movsl
mov
pushf
aas
sbb
dec
cmp
sub
push
pop
stos
out
jp
adc
pop
or
hlt
aad
fmuls
loope
out
int3
js
jcxz
mov
cmp
jge
mov
divb
add
popa
xchg
fnstenv
jne
cltd
mov
notb
pop
jg
or
add
dec
mov
mov
repnz
mov
mov
dec
dec
inc
sbb
or
dec
adc
fisubrl
pushf
sbb
add
jl
lods
mov
jecxz
loope
sbb
inc
pusha
faddl
pop
rol
or
mov
inc
test
xor
sbb
mov
in
fdecstp
jne
adc
inc
gs
mov
push
lods
jo
ljmp
ret
xor
jg
fists
test
cld
xchg
cmpsl
and
in
push
push
mov
push
mov
jg
jae
xor
movsb
das
sahf
mov
cld
movsl
fcoms
inc
andb
les
add
icebp
push
sub
jmp
sti
pop
out
cmp
in
sbb
pminsw
or
stos
lret
test
repnz
inc
add
gs
mov
push
movsl
mov
xchg
dec
mov
sahf
and
ret
and
lds
push
push
pop
sbb
sub
cmc
cld
jne
mov
out
mov
or
iret
mov
mov
fs
ret
xchg
cmpl
das
lock
sbb
inc
mov
adc
dec
xor
mov
test
mov
and
shl
sbb
jno
nop
icebp
cmp
sub
mov
pushf
hlt
inc
mov
inc
jmp
push
roll
pop
push
psrld
in
jbe
pop
in
je
imul
rorb
mov
enter
icebp
inc
dec
push
cmp
jmp
adc
inc
movsb
lcall
jmp
fidivrs
dec
imul
scas
cmpsl
inc
jo
push
rolb
aad
inc
sbb
gs
addr16
daa
inc
cld
push
xchg
dec
shrb
inc
xchg
xchg
loop
xor
inc
stc
jecxz
insb
mov
incb
adc
lock
add
test
dec
sarb
nop
or
enter
dec
jp
sub
cmp
fwait
aas
xor
sbb
xchg
int3
stos
stos
xchg
mov
inc
imul
cmpsb
lods
ja
push
xchg
mov
into
push
mov
mov
and
das
push
mov
cmp
jb
jae
adc
push
jecxz
cmp
sbb
adc
cmp
fidivrl
mov
ljmp
cmp
xor
jg
pushf
loop
hlt
lret
cmpsb
fs
mov
daa
add
xchg
and
push
cmp
xchg
jns
cmpsb
aas
shr
or
add
or
daa
gs
cld
lods
cmpsl
lods
inc
ljmp
dec
andb
push
adc
fwait
xor
xchg
xchg
jl
lret
mov
xchg
inc
inc
sbb
push
xor
in
repnz
repz
add
mov
cwtl
adc
pop
aaa
xor
sbbl
movsb
pop
mov
dec
imul
push
mov
outsl
pop
xchg
call
lds
pop
pop
sahf
mov
cmp
xlat
jo
out
mov
cmp
insl
test
jmp
jae
inc
arpl
mov
daa
xor
sbb
shrl
dec
cmp
imul
or
sbbb
mov
lret
sub
pop
pop
adc
loop
fs
mov
cltd
jae
xchg
push
aad
jg
cltd
movsl
inc
push
cwtl
sub
xchg
sbbl
sbb
andl
or
or
cmpl
shrb
dec
test
jge
dec
into
enter
rcrl
adc
inc
fists
jg
cmp
fwait
dec
stc
xor
adc
jb
loope
bound
or
adc
in
or
insl
sbb
mov
xchg
xchg
mov
jbe
mov
xchg
test
insl
lds
push
stc
outsb
out
scas
pop
push
fisttps
cmc
add
jl
fcoms
rorl
pop
pop
sti
push
lahf
jne
das
lcall
dec
insl
setae
mov
xchg
leave
mov
pop
xor
call
mov
xor
mov
xchg
loop
lods
clc
sti
fwait
xchg
mov
dec
aas
dec
xlat
imull
mov
inc
push
cwtl
push
push
jp
lock
push
xor
xchg
adc
mov
lcall
imul
dec
mov
jmp
mov
or
lds
enter
mov
xchg
push
lds
mov
mov
mov
xor
js
test
push
insb
jnp
cmpsl
jnp
cmp
jmp
xrelease
pop
mov
mov
xor
arpl
xlat
loope
and
hlt
cmp
aad
lods
hlt
inc
int3
jnp
mov
mov
rclb
loopne
jmp
sub
push
xor
addr16
mov
popf
xchg
xor
jbe
repnz
jne
cmpsb
xor
and
xchg
lods
pop
shll
ret
test
jns
xchg
scas
xor
and
push
test
idivb
and
fbld
dec
sti
mov
aam
pop
scas
mov
jne
fisubrl
xchg
fwait
cmpsb
mov
adc
int
aaa
mov
int
fsubrl
scas
add
fistps
mov
ficompl
loop
clc
mov
lret
mov
movsl
fildll
add
popf
dec
mov
and
xor
and
xorb
repnz
push
sub
push
testl
pop
add
je
fdivrs
rclb
daa
out
inc
in
push
addl
or
imul
test
fwait
mov
pop
cmpsl
dec
xor
das
dec
in
push
push
fldt
loop
scas
int3
mov
xchg
call
loopne
sub
xlat
xchg
pop
subl
cli
push
clc
test
mov
push
mov
lcall
movsl
or
insl
mov
mov
fcoms
jecxz
adc
xor
push
adc
mov
lods
pop
jno
test
push
stos
push
cmp
arpl
out
arpl
mov
popa
inc
push
out
lods
cmp
xor
mov
xchg
nop
cltd
mov
stc
xchg
into
les
add
pushf
or
repnz
jmp
xor
mov
mov
repnz
mov
mov
sahf
xor
loopne
pop
repnz
mov
out
mov
sbb
jmp
dec
add
stos
mov
dec
add
cmc
fdivrs
and
jae
movsb
lea
adc
fimuls
outsb
shrl
mov
dec
push
popa
mov
cmc
out
mov
roll
xor
adc
and
pusha
cmp
xor
aad
pop
das
pop
test
outsl
push
in
in
xchg
mov
js
clc
fsincos
pushf
sbb
lods
sub
fsubr
cmpsl
push
dec
std
or
iret
lock
xchg
mov
xor
or
dec
das
scas
pop
lahf
loop
call
jp
insb
js
inc
lods
leave
mov
adc
aas
ja
cmpsb
ffreep
pop
lret
dec
add
subb
push
mov
gs
ret
jno
cmp
sti
into
mov
das
sub
mov
push
push
test
cmpsb
data16
das
movsb
mov
pop
bound
push
mov
pop
scas
cmp
arpl
push
or
fcompl
inc
out
xor
roll
and
cmp
sbb
in
dec
cmovno
jns
ljmp
pop
fists
mov
xchg
cmp
mov
imul
lahf
add
outsb
add
fnstcw
popf
mov
xchg
cmc
sbb
push
outsb
mov
jae
jo
sbb
pusha
testl
fwait
xor
add
movsb
jl
stos
call
test
call
jae
dec
dec
clc
xchg
adc
add
and
insl
jle
test
xor
in
pusha
fdivrp
outsl
mov
or
pslld
mov
push
std
in
dec
and
push
stc
in
roll
ds
daa
frstor
insb
cwtl
sbb
inc
int3
xor
adc
cmp
mov
pop
jl
dec
mov
sub
int3
cwtl
mov
out
lds
mov
adc
imul
stos
push
add
punpcklbw
movsl
cmp
frstor
add
in
enter
addr16
push
jns
mov
mov
push
aam
push
mov
sub
jge
pop
pop
inc
outsl
xchg
aad
jg
and
test
sti
fadds
push
sbb
mov
or
sub
push
outsl
rol
sbb
imul
pop
sbb
test
cmp
mov
ljmp
xor
mov
icebp
push
adc
cmp
icebp
mov
stc
ss
push
xchg
pop
jg
and
addr16
pop
aam
int3
mov
cmp
mov
test
jl
gs
xor
and
movsl
out
lcall
xor
mov
sbb
inc
stos
jbe
in
repz
mov
xchg
enter
cli
inc
lock
xor
push
testb
imul
xchg
push
dec
int
push
or
les
mov
jecxz
mov
sahf
pop
pop
xor
negl
push
mov
bound
or
inc
scas
sbb
insl
out
je
mov
push
cmp
inc
push
imul
mov
xor
out
sub
xor
mov
xor
lret
stos
jo,pt
xor
add
int3
ss
subl
iret
inc
inc
jae
daa
inc
outsb
sbb
mov
insb
inc
cwtl
enter
ja
dec
dec
ljmp
out
push
mov
sub
pop
cmp
lods
fisttps
pushf
hlt
test
jo
push
mov
jecxz
cmp
repz
inc
mov
jmp
jae
mov
gs
xchg
xor
ret
push
jecxz
or
cmpl
sub
pop
xchg
cmp
jp
lea
data16
add
mov
add
decl
sbb
aaa
mov
and
movsb
inc
inc
jnp
pop
aas
dec
push
and
push
aaa
add
pop
cmp
mov
push
leave
roll
or
imul
aam
inc
mov
cmpb
sti
jo
pop
imul
mov
scas
push
fildll
loop
xlat
in
xlat
mov
jle
jne
mov
dec
cmp
jg
push
std
stos
cmp
shl
jo
xor
clc
lret
xchg
lea
mov
xor
pop
mov
xchg
sbb
lcall
int
vcvtss2si
and
cltd
add
jp
mov
cld
lds
cwtl
movsb
inc
fsubs
push
aaa
inc
push
dec
xlat
dec
ret
dec
out
mov
ljmp
andl
push
add
out
in
adc
je
pushf
xorl
pop
adc
dec
mov
dec
outsl
jmp
fcoml
stos
inc
push
lret
arpl
es
mov
inc
dec
lahf
cld
xor
jmp
mov
jmp
pop
std
movsb
xor
inc
bound
mov
andl
aaa
pop
orl
pop
xor
movsl
clc
cmp
sbb
jno
sub
into
lea
jnp
xchg
nop
pop
add
or
mov
lret
cli
loop
push
jne
push
add
mov
mov
xor
pop
adc
sbb
scas
mov
cld
or
and
inc
inc
add
cli
adc
mov
or
and
shll
jb
popf
push
fwait
adc
icebp
lret
pop
pop
mov
lds
mov
es
mov
or
into
dec
imul
xor
lea
fisttpll
out
outsl
adc
fwait
scas
lret
push
push
fisubl
add
iret
cltd
bound
fldl
push
sbb
mov
scas
cwtl
cmp
je
fdivrp
or
sbb
cmp
rcll
out
jmp
xchg
and
insl
mov
sbb
les
or
and
movsb
clc
shlb
in
inc
xor
dec
sbb
stos
push
in
mov
mov
mov
sbb
push
fcompl
or
mov
imul
in
add
mov
cmp
xchg
mov
aad
pushf
mov
xchg
outsl
mov
cmc
sti
push
stos
aam
stc
ret
mov
aaa
sbbl
aas
aas
jae
test
movsl
imul
xchg
pop
xor
adc
mov
jb
pop
mov
lock
insl
cmc
pop
adc
add
out
jae
in
mov
inc
lods
ja
mov
andb
and
xchg
push
lock
dec
lcall
dec
das
and
pushf
enter
jbe
mov
pop
test
lcall
idivb
sbb
lcall
pop
lret
adc
pop
jnp
sub
scas
insl
xchg
loope
movsb
pop
stos
cmp
xchg
fnstenv
cwtl
cmpsl
pop
lods
fstpt
cmp
hlt
aas
js
ror
inc
inc
push
dec
pop
sbb
pusha
push
mov
sub
lcall
popa
mov
ret
jae
xor
push
fcmovnu
xor
stc
xor
lds
insb
pop
mov
lods
xor
jo
cmp
xchg
ja
test
mov
icebp
shlb
in
xchg
mov
xchg
test
or
sub
and
lcall
sbb
enter
fistpll
es
mov
popa
pop
xchg
jbe
addb
sbb
inc
js
andb
out
jmp
jb
adc
push
adc
roll
cli
xor
lret
lods
xchg
lcall
dec
cmp
pop
inc
mov
dec
mulb
adc
mov
pushl
scas
fldt
movsb
sbb
push
in
pusha
hlt
add
jp
mov
icebp
lock
mov
outsl
jg
adc
insl
fistl
fcoms
insb
movb
aam
jbe
mov
xor
in
jmp
fstp
jp
mov
mov
movsb
inc
gs
or
sbb
cmp
mov
dec
outsl
dec
loopne
jbe
pop
loopne
bound
cld
sti
add
xor
rolb
rcl
rol
lods
pop
dec
idivl
cmpsb
gs
out
sub
hlt
or
cmp
mov
fmull
or
push
js
mov
es
mov
xor
call
lock
adc
sbb
test
test
sub
add
ficoml
jle
incl
pop
sub
jno
lret
mov
rorb
sub
mov
fcomps
jg
xor
sbb
fwait
out
rol
inc
xor
mov
xchg
add
cmp
add
xchg
addr16
mov
pop
daa
sub
dec
sub
lods
repnz
out
fldenv
test
aaa
adcb
and
inc
in
add
jg
bound
mov
test
aad
cmp
add
and
pop
call
cmp
push
mov
cmp
xchg
ret
clc
sub
mov
stc
test
inc
inc
mov
pop
xor
adc
xchg
push
or
frstor
and
jmp
hlt
fnstenv
or
dec
std
push
enter
iret
and
xor
sbb
sub
sub
ret
mov
bound
ljmp
iret
mov
rcrl
sub
push
ds
icebp
cmp
test
aaa
stc
dec
mov
repz
mov
mov
notb
stos
adc
cld
or
in
scas
cmp
add
in
xlat
iret
pop
xchg
cwtl
popa
call
mov
mov
jle
enter
in
in
sub
test
jne
mov
pop
ret
sub
mov
mov
enterw
jbe
repz
call
popf
movsl
push
pop
xchg
dec
int3
xchg
jmp
outsb
mov
jnp
in
incl
movsb
popf
fabs
rorb
ja
int
aaa
loopne
cmpsb
xchg
mov
repz
in
jp
pop
rcl
popa
out
pop
mov
sbb
movsb
mov
data16
mov
inc
mov
arpl
cmp
cltd
sahf
shlb
ss
outsb
cmp
insb
test
into
mov
add
jno
pop
test
out
rorb
repnz
sub
fiadds
mov
jg
cmp
sti
loop
adc
mov
addr16
mov
dec
fwait
ret
lods
addl
xor
repz
mov
sbb
pop
inc
add
dec
mov
jle
aaa
adc
lods
cld
dec
out
pop
xchg
pop
imul
sub
xchg
inc
lock
mov
aam
insl
rolb
movsb
ljmp
fs
int3
out
xchg
xchg
push
repz
outsb
lods
aas
and
jle
pop
mov
pop
outsl
cmp
iret
add
les
cmp
fstl
sbb
fbld
outsl
ljmp
mov
mov
mov
rep
xchg
fsubl
push
cwtl
in
adc
pop
int
sub
shlb
ror
or
jbe
adc
daa
sbb
and
jns
pop
push
or
mov
fisttps
in
imul
das
leave
loopne
popf
push
imul
xor
hlt
jne
aas
sbb
stos
push
arpl
pop
sub
sarl
es
mov
dec
mov
cs
mov
cmp
mov
sbb
icebp
jo
jo
mov
mov
loop
push
mov
add
loop
pop
sbb
fwait
pop
outsb
add
mov
push
das
bound
outsb
sahf
or
lret
int3
push
sahf
rcrb
jbe
jle
mov
sub
dec
es
mov
stos
jmp
xchg
test
jl
rcr
sar
xor
test
sub
push
fidivrl
push
popa
dec
xor
inc
loope
xlat
icebp
daa
push
or
test
sbb
xchg
inc
mov
cmp
dec
lods
jecxz
leave
imul
or
test
lret
movhps
cmp
mov
loope
push
jae
and
mov
ja
xor
mov
cmc
pop
lret
jl
ret
mov
push
mov
popa
push
addr16
daa
inc
inc
mov
and
js
xchg
ss
jo
pop
es
out
xor
imul
mov
mov
inc
adc
jbe
pop
xchg
add
mov
and
das
sub
int
dec
mov
jnp
add
mov
xchg
mov
jge
xchg
push
jl
sarl
mov
sub
out
inc
mov
mov
and
out
test
sbb
or
jmp
daa
xchg
aad
and
out
mov
xchg
aad
jb
int3
fiaddl
insb
mov
fldenv
cltd
pop
scas
negl
into
test
loope
test
out
sti
lret
mov
dec
sarb
rcr
cmp
mov
shrl
hlt
jg
push
or
or
call
movsl
cmpsl
cmp
cmp
in
sbb
and
stos
mov
jns
xor
and
sub
movsl
hlt
sub
or
dec
js
cmc
loopew,pn
dec
xor
iret
out
or
mov
and
scas
sti
mov
mov
mov
stos
ret
int
xchg
xchg
rcrb
aam
mov
push
sub
mov
sahf
call
movb
cmp
sub
dec
xor
sbb
or
inc
test
sahf
aaa
cld
cmp
cmp
jnp
mov
popf
loop
cmp
and
fidivrl
xlat
mov
push
cmc
or
addr16
bound
shrb
aaa
ljmp
cld
scas
push
movb
insb
jmp
arpl
sbb
mov
mov
pop
push
xchg
lcall
jmp
or
mov
mov
mov
lods
outsb
pop
pop
mov
orb
in
pushf
insl
fidivrl
cs
bound
repz
and
decl
fcompl
addr16
cmp
rorb
or
lret
aaa
arpl
stc
mov
mov
mov
cmp
fidivrl
pop
fxch
adc
inc
pop
inc
xchg
jmp
jbe,pn
xchg
ds
xchg
das
cli
icebp
jl
jp
scas
mov
sbb
icebp
loopne
imul
leave
insb
repz
jge
add
sbb
fcompl
xor
pop
dec
pop
mov
call
dec
ret
sub
shlb
int
cld
mov
lock
clc
inc
mov
nop
mov
das
push
ds
xchg
fs
outsl
sub
xor
mov
adc
or
out
dec
stos
push
pusha
ss
push
sub
add
addl
das
sbb
push
jmp
push
mov
lret
imul
push
xbegin
stc
and
shll
add
pop
movsb
les
mov
cld
xor
xor
pushf
imul
gs
int
inc
and
in
cmpsb
or
inc
jno
inc
popa
mov
scas
pusha
aam
and
pop
jg
loop
mov
mov
mov
lret
fsubrl
mov
fnstsw
jae
psrlw
push
sbb
pop
loop
cmpsl
into
add
push
mov
push
jns
popf
dec
cltd
adc
dec
lods
push
inc
add
pop
sub
out
fists
roll
or
sbb
xchg
and
cli
inc
fisubrl
or
bnd
fisttpll
repnz
fs
call
aad
cmp
cwtl
mov
loope
fwait
sbb
jecxz
adc
add
insl
pop
and
sub
and
dec
and
sahf
frstor
fucomip
faddl
ds
mov
ret
jmp
sbb
ljmp
add
jmp
adc
push
xchg
insb
imul
push
adc
cmp
pop
adc
sti
call
shlb
sti
push
rolb
sub
push
adc
es
out
xchg
dec
bound
decb
sarl
inc
out
push
sub
mov
pop
adc
retw
jo
mov
arpl
lea
jnp
xchg
sbb
mov
repnz
mov
stc
inc
imul
xchg
and
fnsave
test
inc
out
xchg
cmp
aad
repz
adc
xchg
insb
add
jecxz
mov
rcll
xor
pop
mov
pop
adc
dec
leave
xor
test
cmp
jmp
sub
and
lds
stos
cmpsl
jns
insb
fcmovu
xchg
popf
push
cs
leave
js
push
xor
sub
sub
push
mov
into
xchg
notb
scas
cmp
mov
aam
cmpsl
sub
inc
push
in
pop
in
jle
int
mov
sub
lods
addr16
push
loop
pop
rorb
ljmp
inc
gs
mov
xchg
hlt
mov
stos
push
xchg
pop
or
inc
jp
mov
mov
sti
mov
repz
dec
xlat
xchg
data16
aad
push
lret
das
pop
pushf
inc
ds
ljmp
adc
push
push
jno
ja
shlb
push
lock
mov
out
shlb
xlat
pop
mov
mov
and
icebp
bound
jae
dec
dec
mov
mov
je
or
xor
push
mov
mov
fistl
sub
mov
repz
xor
stc
cwtl
inc
add
pop
adc
stos
mov
jno
mov
movsb
test
ljmp
dec
pop
adc
jge
lret
addl
ficompl
and
push
arpl
dec
jle
jo
stos
sbb
sub
pop
mov
jno
outsb
ficompl
pop
or
pushl
jge
or
sbb
jb
xchg
xor
iret
mov
xchg
mov
dec
fidivrl
push
call
les
push
aam
sub
nop
sbb
bound
or
mov
inc
xchg
xor
in
in
leave
and
call
lods
lret
movsb
and
sub
mov
mov
out
sub
outsb
jg
out
xchg
mov
mov
mov
add
jno
xchg
xchg
aad
adc
sahf
mov
out
or
mov
push
inc
pop
int
inc
jp
repnz
mov
aas
ljmp
aas
lcall
mov
jb
jg
mov
lods
push
test
jp
jp
in
lcall
mov
ret
dec
and
mov
test
fcomp
out
int
mov
stos
and
xchg
and
xchg
cmpsl
repnz
sbb
sbb
popa
add
stc
nop
fwait
pop
lret
and
ss
aad
iret
cld
je
adc
adc
lods
movsb
lcall
movsb
jecxz
fidivrl
push
sbb
pop
lcall
enter
test
fdivrp
arpl
arpl
pop
jns
xor
pop
pop
cmovnp
pushf
sarb
in
dec
mov
jmp
mov
es
xor
pusha
enter
mov
cld
mov
jae
cmp
loope
cmp
testl
frstor
out
sub
mov
ljmp
inc
mov
cmp
mov
fs
or
sub
sahf
movsl
cmp
std
cmc
sbb
insb
inc
test
test
push
fwait
and
fidivs
imul
lods
mov
in
sbb
icebp
cltd
mov
jecxz
adc
je
sub
xor
gs
jns
or
lret
and
sbb
mov
dec
sbb
test
aam
sbb
cmp
xor
lods
jle
xlat
mov
arpl
cmp
ds
add
mov
adc
or
nop
stos
dec
out
data16
mov
xchg
inc
std
inc
or
aas
lcall
add
sti
push
push
xor
sub
inc
jg
fimull
fsubrl
into
mov
test
mov
mov
mov
xchg
xchg
xor
push
lret
dec
sub
mov
sarb
xor
xchg
xchg
pop
push
aad
fmul
jecxz
xchg
push
sbb
pop
stc
mov
cmp
mov
sarl
movsb
and
dec
ljmp
outsb
mov
inc
jo
dec
cld
daa
or
cltd
xchg
push
js
negb
mov
hlt
int
inc
add
dec
dec
cmpl
mov
mov
lock
sbb
cmp
mov
inc
push
ret
stos
lods
ds
out
mov
or
addb
mov
dec
dec
sarb
jne
notl
stc
or
ljmp
xchg
add
outsb
inc
pop
shll
add
sub
push
cmp
lds
call
dec
cs
mov
popa
mov
insl
iret
pop
pusha
cmc
movsl
push
icebp
mov
outsl
ja
add
mov
mov
jne
aas
pusha
sbb
or
call
scas
jmp
mov
pop
ja
cmpsb
push
or
loope
out
or
fadds
dec
pop
and
ficompl
out
jno
xor
or
push
pushf
xor
mov
xlat
adc
insb
or
sub
js
test
sbb
fstl
or
test
mov
sub
xor
pop
aad
jae
fst
dec
mov
push
mov
je
mov
ret
lret
addr16
fldl
jp
into
leave
jp
pop
xchg
ds
shl
pop
mov
or
lods
sub
jle
xor
in
rcll
addr16
loop
in
cwtl
shlb
aas
xchg
xchg
cmp
nop
adc
out
cmc
inc
jnp
lods
bound
addl
in
cmp
mov
xor
sub
xor
sahf
or
push
insl
dec
aad
lcall
push
xchg
jae
filds
xchg
and
add
je
arpl
mov
mov
out
add
push
add
jle
imul
sbb
test
fmull
popf
or
inc
push
lods
mov
adc
mul
xchg
mov
xchg
and
pop
decb
fmuls
sbb
cmp
leave
mov
mov
mov
push
pop
lret
mov
push
xchg
dec
xor
rcr
ret
push
hlt
lret
cmpsl
adc
jb
hlt
scas
mov
push
mov
xchg
inc
or
icebp
call
outsl
std
pop
push
faddp
push
ss
xchg
icebp
mov
loop
int3
data16
add
pop
mov
arpl
js
and
jbe
popf
fsubrl
gs
push
stos
inc
mov
inc
loop
mov
jp
xchg
sbb
cmp
lcall
add
aam
faddl
shrl
push
sahf
or
test
inc
scas
mov
nopl
lock
inc
mov
xor
adc
cmp
or
test
inc
aas
imul
mov
mov
push
add
stos
jge
adc
in
inc
cs
or
mov
jmp
cs
scas
jno
sti
jle
aad
push
test
xor
sbb
inc
cmc
ljmp
scas
inc
int
lods
mov
mov
into
les
mov
aas
inc
xchg
subb
and
test
lcall
dec
mov
inc
xor
out
xchg
aaa
jae
push
cmc
shlb
cmp
sarl
mov
inc
in
inc
sub
dec
mov
or
rcrb
out
adc
cwtl
jle
dec
push
inc
outsb
xchg
cwtl
lds
cmp
pushf
push
cmp
mov
test
into
rcr
daa
jle
add
scas
imul
push
mov
push
imulb
icebp
cwtl
dec
jmp
inc
mov
dec
ss
push
or
pushf
fnstcw
mov
cli
sub
xor
ret
sar
and
das
in
push
add
in
add
mov
icebp
mov
and
pop
cmp
ret
testb
cmp
loopne
ret
or
fisubrl
hlt
mov
sbb
stos
lock
imul
cld
mov
fists
jno
js
inc
xchg
outsb
mov
shll
testb
or
std
ja
push
mov
push
jg
sbb
xchg
daa
push
pop
scas
ds
jp
aam
outsl
or
clc
dec
nop
rorl
ffreep
lods
jne
jno
mov
es
stos
xchg
fabs
ficompl
xchg
scas
mov
imul
add
fucomp
insl
enter
mov
je
jnp
test
and
mov
jno
cltd
or
mov
pushf
repnz
enter
push
inc
jb
fildl
jle
jns
rorl
sbb
jb
je
jl
mov
pushf
inc
icebp
leave
inc
cmpsl
shrl
les
pop
or
xor
aad
movsb
ss
imul
addl
xchg
rolb
ret
jb
xchg
mov
mov
push
adc
and
cmp
lea
inc
leave
dec
mov
mov
loope
sbb
lds
mov
ds
xlat
jecxz
sbb
loope
lods
xchg
test
sub
movsl
ss
dec
mov
dec
ret
jnp
imul
sbb
cwtl
testl
jne
and
dec
or
addr16
mov
dec
push
out
addr16
sub
scas
aam
sub
pop
test
jbe
out
and
xrelease
out
aam
or
push
rorl
loope
sar
pop
inc
mov
ds
aam
enter
cmp
shlb
shl
xor
xchg
mov
in
ss
bound
test
cld
ret
mov
lock
or
fucomip
xchg
push
or
mov
adc
js
lahf
mov
inc
out
aad
add
clc
sbb
cmp
pop
sbbb
or
xor
jno
jnp
in
or
jno
xchg
insb
idivl
and
mov
jbe
cmp
sti
mov
jae
sub
cltd
inc
push
lcall
dec
loopne
in
hlt
loope
aaa
pusha
adc
aam
xchg
out
add
or
adcl
fdivrl
jmp
inc
movsb
sahf
sbb
jg
and
mov
pushf
daa
lahf
xchg
push
nop
and
mov
or
pop
push
jne
pop
popa
or
sti
mov
in
outsl
mov
icebp
pusha
jmp
sti
and
inc
or
push
subb
pop
idiv
test
push
mov
mov
test
push
shl
or
cli
loope
leave
push
dec
repnz
pop
in
mov
mov
sarl
jp
fistpl
loop
std
rorl
and
push
lret
push
ret
int
imul
int3
mov
xor
cmpsl
arpl
movsl
add
add
nop
jns
sbb
rcl
jle
add
test
in
jl
jmp
dec
pop
inc
inc
repz
iret
push
or
pop
xchg
xor
add
push
jno
pop
sub
cmpsb
mov
lcall
add
or
sub
movsl
daa
data16
testl
shr
sbbl
mov
popa
pop
inc
ds
das
mov
adc
insl
mov
cmpsb
push
mov
ljmp
shll
mov
dec
addb
mov
arpl
adcb
js
jmp
insb
mov
out
sub
sbb
lret
adc
push
ljmp
pop
fiadds
hlt
jb
xor
dec
imul
sub
call
cltd
pop
call
adc
je
outsb
lahf
dec
cmp
adc
xor
pop
clc
or
daa
repnz
nop
xor
clc
fnstcw
das
cmpsl
movsb
xor
push
add
jne
and
repnz
cmp
inc
shlb
repnz
jb
sti
es
mov
and
imul
cs
mov
jge
jb
adc
hlt
sbb
or
ret
mov
mov
xchg
mov
mov
fbstp
jo
push
dec
pop
sbb
icebp
in
je
subb
mov
dec
cs
mov
stc
fwait
and
data16
arpl
mov
ficoml
mov
xor
pop
je
aaa
sub
cmc
lahf
jmp
testb
pop
cwtl
push
shll
icebp
xor
pop
aam
and
push
pop
adc
imulb
mov
cmp
pusha
mov
sbbb
je
adcb
bound
fldenv
cli
dec
inc
std
roll
lock
fcoms
dec
cli
push
dec
mov
jmp
and
std
mov
mov
sbb
stos
hlt
push
out
push
cs
sub
fwait
push
jne
mov
xchg
and
aas
xchg
jmp
dec
xor
lret
in
pop
push
in
add
mov
lds
orl
push
rorl
scas
mov
or
sub
pop
xlat
lcall
xchg
pop
inc
fldcw
iret
jbe
or
jecxz
enter
aad
in
out
inc
rcrl
ror
sbb
mov
adc
fwait
jne
subb
lods
add
mov
xchg
add
in
ja
fldl
shlb
push
movsl
pushf
inc
out
adc
sub
jno
sbb
lods
cli
add
stos
mov
sub
dec
fadds
das
pop
jmp
xchg
shll
dec
addr16
movl
subb
ret
jle
cmp
out
outsb
xchg
pop
pop
dec
sbb
lods
dec
jno
inc
jno
push
push
adc
mov
notl
mov
mov
dec
je
mov
ds
dec
je
insl
or
outsl
dec
sbb
pusha
jl
push
fstps
pop
movsb
push
mov
push
fcoms
adc
repz
bound
adc
repnz
pop
jbe
popa
popa
inc
xor
dec
outsb
pop
xor
mov
test
mov
and
shl
scas
jns
test
ret
dec
shll
pop
sbb
insl
ret
fs
sbb
or
rorl
jns
xchg
adc
add
or
clc
sarb
lcall
mov
jmp
sahf
jae
xlat
das
sbb
int
pop
pcmpgtb
cmp
jg
mov
xchg
fldl
fiaddl
xor
divb
in
outsl
pop
rcl
jno
adc
add
shr
in
mov
lea
jae
sub
aaa
arpl
cs
xorb
add
xchg
dec
dec
js
mov
adc
lods
lds
mov
mov
loopne
inc
mov
mov
cmp
dec
xor
fimull
fiaddl
or
pop
mov
test
mov
pop
test
call
push
push
sti
sbb
jl
lock
aad
mov
leave
xor
inc
and
scas
popa
lds
addr16
stos
cmpsl
push
notl
xor
sbb
daa
pop
and
faddl
inc
mov
mov
dec
and
stos
test
rcr
xchg
sub
pusha
push
loopne
ljmp
adc
mov
pop
cmp
call
mov
lcall
xchg
pop
outsb
enter
dec
pop
jle
insl
js
lahf
jge
and
jne
inc
sti
xchg
lods
outsb
cmp
mov
mov
mulb
mov
leave
pop
sub
sbb
cmpsb
imull
push
popf
scas
push
pop
mov
and
or
dec
in
cltd
nop
mov
cmpl
mov
xor
fcomps
or
mov
pushf
test
fs
call
in
sub
mov
jb
or
mov
aam
out
push
sub
inc
sub
cmp
in
cli
aas
cmc
addl
xchg
pop
enter
jmp
icebp
incl
aam
hlt
fdivs
xlat
addr16
fnsave
or
cmp
outsl
dec
test
mov
mov
in
adc
jb
pop
xchg
mov
sarb
xchg
fnsave
inc
adc
pop
mov
iret
cmp
sbb
jle
inc
push
lret
repz
negb
mov
insw
push
out
aas
push
loopne
stos
xor
sub
int
push
mov
lods
xor
test
add
push
adc
popa
pushf
popl
push
dec
xor
lcall
mov
cmpsl
les
test
jle
pushf
dec
arpl
scas
or
loopne
in
cmp
add
loop
push
idivb
ret
xor
pop
dec
adc
xchg
adc
pop
lahf
push
repnz
xchg
ljmp
cmp
imul
or
cmp
xchg
dec
mov
call
jbe
scas
sbb
rclb
add
inc
lods
cmc
inc
ja
dec
mov
push
pop
pop
dec
pop
xor
mov
fnsave
iret
mov
jb
mov
or
fidivs
mov
andl
push
arpl
flds
inc
bsf
or
dec
mov
nop
xor
add
dec
mov
mov
gs
push
cltd
jae
or
imul
push
popa
ljmp
mov
pop
or
movsl
dec
test
insb
aad
ljmp
push
cmp
push
mov
repnz
sahf
and
add
sub
cmc
sarl
sub
out
mov
mov
xlat
sub
xlat
dec
add
movsb
js
loope
test
popa
call
std
or
inc
xor
sbb
sub
push
jl
or
mov
in
lock
movsl
pop
ret
hlt
lods
hlt
mov
imul
or
loop
xor
loop
xor
sbb
nop
jne
xchg
es
adc
in
adc
or
xchg
and
inc
es
loopne
pop
rcrl
cmpsl
test
pop
xchg
and
cmp
iret
cmpsl
pop
js
incl
or
pop
fidivrs
push
lock
call
out
jl
dec
and
cmc
roll
adc
cs
mov
test
push
mull
in
push
push
ljmp
imul
pushf
xor
ljmp
push
les
testl
fstp
shrb
ret
xchg
arpl
and
addr16
enter
aaa
mov
lret
xor
mov
jbe,pt
cmp
in
jb
pushf
jge
xchg
aam
fstpl
test
shrb
das
faddl
aaa
cmp
adc
test
mov
mov
imul
lds
orl
outsl
jno
cltd
outsl
fistpll
adc
std
jl
or
test
in
pop
cmp
xor
mov
cs
sbb
inc
jp
in
mov
push
adc
push
outsb
sbb
xor
dec
jo
shrl
fidivs
pop
sub
mov
sub
cld
cli
jnp
test
mov
mov
xor
xchg
pop
mov
dec
mov
inc
xchg
add
repz
inc
inc
movsl
dec
insb
xchg
jae
sub
mov
fsubrl
sub
inc
sti
xor
or
shlb
movsb
xchg
popf
fnstenv
call
stc
xchg
cltd
movsb
mov
jae
mov
inc
lcall
es
es
mov
fcmovne
loop
mov
dec
rcll
mov
and
push
mov
mov
inc
insl
push
mov
pusha
icebp
fdivrl
sbb
xchg
mov
push
mov
outsl
movsl
movsb
xchg
cmp
adc
xchg
push
dec
and
add
test
addr16
mov
xor
push
sub
adc
rcll
xchg
mov
xchg
cld
fwait
pop
mov
push
gs
add
mov
push
cmp
mov
lret
inc
pop
mov
stos
and
ds
sub
sbb
inc
gs
push
adc
gs
xchg
or
into
xor
es
lcall
sbb
in
daa
js
inc
ficoms
dec
testl
nop
mov
or
test
mov
sub
mov
data16
test
push
es
cmp
fstpl
push
cmp
out
js
fwait
je
lahf
fistpl
mov
rcrb
mov
sub
or
lods
lods
out
dec
insb
sbb
jle
push
int3
pop
mov
pop
xlat
repnz
jecxz
scas
cmp
test
mov
dec
xchg
in
ljmp
adc
mov
ficompl
xchg
cmpsb
les
xor
cmp
push
daa
imul
inc
lock
xor
int
int
cmc
xchg
cmp
into
jp
pop
enter
jbe
jnp
push
inc
inc
popf
call
stos
sbbl
test
sub
cld
test
cmpb
fdivrs
adc
jp
sti
mov
pop
or
push
testb
mov
es
ret
mov
iret
jmp
adc
inc
lods
mov
dec
dec
movsb
cmp
mov
in
sbb
negb
das
sbb
pop
cmp
inc
jg
lret
xchg
mov
dec
xor
dec
test
or
mov
jp
sbb
sub
imul
in
in
jbe
sti
in
push
and
repnz
mov
aas
fiaddl
jnp
inc
push
int
adc
cs
pop
shl
ss
push
js
arpl
je
cmp
insl
insb
push
adc
stos
mov
scas
mov
stos
mov
mov
imul
xchg
xlat
aam
mov
stos
fpatan
inc
mov
rorb
insl
insl
aad
fwait
rolb
gs
pop
xor
mov
ret
pop
in
push
xlat
js
mov
inc
loop
xchg
cmpsb
xor
ds
mov
and
je
popa
in
cmp
call
mov
push
jge
lock
jbe
add
push
inc
fwait
sbb
jge
and
mov
out
in
test
push
lahf
cld
scas
add
call
mov
pop
rorl
xor
pop
and
mov
jne
inc
mov
inc
int3
sbbl
add
or
fisubl
idivl
addr16
mov
ljmp
and
test
sbb
ljmp
stos
xorps
mov
lret
jl
mov
fs
fistl
dec
mov
shll
in
pop
dec
add
add
sahf
and
adc
aaa
andl
adc
out
in
enter
dec
or
lods
pop
sub
clc
adc
popa
or
leave
sub
mov
add
push
ret
imulb
xchg
sbb
xlat
mov
push
add
mov
cmc
and
and
pop
pop
mov
das
xchg
sub
xchg
pop
and
jle
es
adc
in
add
inc
fldl
ret
mov
out
insb
in
std
xor
lret
lea
mov
cs
mov
sub
jp
shll
inc
je
adc
adc
mov
cwtl
xchg
ja
shrb
jnp
daa
dec
scas
dec
bound
mov
shl
jns
scas
movsb
mov
outsb
mov
xchg
movsb
adc
xor
mov
push
call
mov
inc
xchg
push
pop
mov
xor
mov
pop
add
gs
push
ja
out
mov
aam
add
sarb
cmpsl
mov
leave
mov
and
subb
jmp
mov
pop
addr16
dec
adc
lret
adc
in
jbe
inc
ds
daa
out
add
jnp
fdivr
and
inc
test
adc
sub
sti
mov
or
push
bt
push
ds
aas
sbb
mov
aad
ficompl
pop
ljmp
push
jns
xchg
mov
xor
cmpsl
imul
test
mov
mov
std
xor
pusha
or
mov
jl
fimull
ficoml
fldl
cwtl
aas
mov
pop
jle
pop
dec
addb
loop
mov
jl
sbb
ljmp
cmp
lea
jge
leave
and
rorl
es
xor
movsb
mov
add
or
mov
lods
stos
imul
cmpb
mov
or
dec
out
cs
roll
in
jl
popf
rcll
out
dec
adc
aam
lret
sbb
sahf
dec
mov
in
sar
cmp
fisubrl
add
push
stos
push
sub
shlb
dec
pop
es
pinsrw
jl
xlat
aas
mov
jae
cli
jp
mul
add
mov
call
push
cmp
out
and
push
in
movsl
scas
sub
sbb
in
push
dec
jbe
add
call
add
jb
sbb
aas
push
pop
pop
clc
pop
loop
or
xor
lahf
cmp
cmpsb
das
into
pop
lock
sub
cmpsl
pop
lret
pop
scas
xchg
mov
push
push
mov
sub
push
les
repnz
cmp
test
das
sahf
lods
outsb
or
pop
dec
jns
push
dec
fbld
loope
dec
mov
mov
mov
lea
inc
mov
adc
dec
sahf
jnp
mov
pushf
push
imul
movsl
js
ret
adc
xchg
insb
xor
dec
dec
pop
in
into
push
jo
xchg
lods
inc
test
adc
and
aam
mov
je
fbstp
or
xchg
mov
dec
cmc
jns
les
sbb
pop
add
adc
fs
push
fidivrl
push
icebp
pop
je
ja
mov
xchg
jg
mov
or
push
push
or
in
jl
fstl
and
mov
js
dec
rorb
push
add
sub
decl
ret
std
mov
aam
cwtl
cmp
sbb
test
decb
ss
cmp
pop
add
loope
loopne
lret
cmp
inc
xchg
sub
fistpll
add
jecxz
shll
mov
push
add
add
loop
mov
push
jl
fcoms
pop
cmp
test
and
fidivrs
xor
sbb
dec
and
jl,pt
push
xor
test
hlt
mov
leave
into
stc
inc
fistpll
icebp
pop
out
xor
popa
adc
add
adc
ljmp
sub
xorl
sub
mov
xchg
lcall
stos
jo
ret
addr16
mov
test
mov
outsb
add
mov
inc
jbe
xchg
jno
push
int
inc
imull
lods
mov
sub
outsl
push
mov
and
push
mov
cs
xchg
movsl
das
mov
arpl
push
push
sar
ret
leave
imul
arpl
jle
sub
adc
ljmp
push
and
lret
cli
cmp
cmp
test
addr16
rdtsc
aam
push
mov
push
hlt
push
push
mov
cmp
loopne
das
int
push
aad
outsl
jae
rcl
or
dec
mov
cld
sub
mov
mov
and
cmpsb
push
add
movsb
and
test
push
test
cmp
sbb
mov
jge
lahf
mov
inc
pop
addb
dec
andl
push
insl
xor
sub
xchg
pop
lods
ds
xchg
in
lods
xor
adc
addr16
in
rcl
pop
repnz
jb
test
xlat
pop
add
jbe
mov
dec
mov
mov
out
leave
repnz
xchg
sub
xchg
mov
popa
sub
dec
sub
arpl
pop
mov
in
adc
in
jo
scas
mov
out
dec
add
sbb
lds
xchg
fdivl
jo,pn
and
add
ret
in
cmpsb
sti
cli
ret
in
or
jns
les
mov
inc
adc
aam
fs
lcall
imul
mov
jno
xor
in
push
xchg
sahf
or
out
popa
cmpsb
xor
insb
dec
pop
xlat
daa
xor
push
les
jle
lcall
shll
and
repz
adcl
cwtl
lock
xchg
and
js
mov
xchg
movsl
cs
dec
sbb
add
xlat
xor
mov
cmp
dec
stos
xchg
jmp
push
in
loop
mov
std
jmp
xchg
pop
lea
xor
add
dec
jnp
outsb
mov
or
sub
sbb
inc
add
xchg
rorb
add
mov
push
decl
fbstp
mov
and
out
scas
xchg
xor
inc
test
insb
inc
push
cs
mov
push
jge
add
pushf
out
jle
cmp
arpl
mov
mov
imul
jle
aas
pop
xor
jae
pop
shl
data16
dec
pusha
lea
lret
rcl
nop
stos
shlb
sbb
inc
bound
sbb
sub
ljmp
int
inc
inc
mov
std
das
adc
pop
add
add
mov
mul
pop
fsubrp
add
or
xchg
push
loopne
mov
mov
mov
inc
sbb
pop
popf
push
inc
adc
mov
in
or
dec
cmp
rclb
xor
dec
lahf
sub
fiadds
int3
push
cmp
or
imulb
std
popf
xor
pop
fstps
sahf
subl
andl
insb
add
cld
push
cmp
jno
stos
sbb
aam
dec
ret
inc
repz
cmc
sbbl
dec
cli
pop
cmc
xcrypt-ecb
cmpsl
dec
jo
xchg
ds
add
pop
sbb
faddp
fdiv
out
fdivrl
js
mov
and
popa
jae
xchg
inc
lret
cmpsb
push
int3
fchs
je
inc
enter
aad
jle
or
bound
push
fldenv
loope
fldl
stos
xchg
jg
adc
push
movsb
shll
cli
jno
loopne
fsubr
dec
shrb
fs
lret
pop
push
adc
dec
jl
mov
cwtl
push
jge
push
daa
xchg
dec
fiadds
jne
sub
and
xlat
cwtl
jmp
ljmp
sahf
lea
jl
movsl
fdivrs
aas
cs
xor
jns
xchg
adc
bnd
jg
mov
xor
sti
xchg
stos
inc
fidivrs
mov
mov
jb
pop
sub
push
dec
dec
call
push
fstpl
mov
mov
test
lods
mov
into
in
pop
jnp
push
and
jb
mov
jne
cmpsl
xorb
ret
out
jnp
cltd
dec
cltd
jmpw
and
pop
dec
sti
inc
cmp
sbb
and
prefetchw
cmpsl
or
fstps
sbb
dec
mov
in
xor
test
ret
imul
adc
into
add
mov
cmpsl
mov
ret
jmp
leave
jmp
js
sub
jg
dec
aaa
mov
sbb
mov
mov
fdivl
fmul
xchg
jns
test
add
inc
push
add
test
add
and
push
enter
jmp
ret
cmp
xlat
imul
jnp
popa
test
add
sub
mov
inc
shr
arpl
mov
test
outsb
in
or
mov
sbb
clc
test
or
mov
push
mov
cltd
push
out
xchg
push
iret
ret
insl
mov
and
sub
lcall
push
mov
fsubp
faddl
push
cld
nop
xlat
inc
scas
pop
imul
mov
lods
popa
movsl
imul
out
cmpsl
xchg
sti
dec
mov
out
sub
outsb
mov
and
push
lret
ret
test
mov
lds
addr16
sahf
jge
outsl
xchg
push
arpl
adc
enter
test
mov
jae
shll
nop
cmpl
pop
ret
jmp
push
add
add
mov
push
push
xlat
adc
gs
es
xlat
ret
pop
jno
jb
or
jnp
pop
jbe
xor
decl
outsb
repnz
cmp
push
lret
inc
dec
xchg
or
lds
sub
std
cmp
pop
mov
in
mov
shlb
loopne
scas
cmp
psadbw
push
ds
mov
shll
jno
stos
xorl
push
push
orl
jno
ret
in
out
fnstcw
pop
insl
ret
pop
or
and
jbe
enter
push
jmp
xor
xchg
mov
in
pop
insb
cmpsl
icebp
into
jnp
arpl
mov
fisttps
xchg
pop
mov
rcll
bnd
int
lods
sbb
rorl
stc
jecxz
loopne
mov
mov
sbbb
ret
push
mov
mov
cmp
xchg
or
and
push
or
cmpb
adc
imul
jns
jb
xchg
fucomp
sub
add
push
movsb
inc
lock
inc
adc
inc
inc
hlt
add
fidivl
cmp
cmpsl
stos
lahf
fadds
inc
bnd
push
roll
cmp
push
pop
sbb
inc
push
add
mov
mov
and
jg
xor
ljmp
mov
sbb
inc
ficompl
clc
mov
sbb
mov
dec
das
lea
push
push
fcoml
mov
push
adc
sub
mov
clc
fdivl
cmp
mov
and
sub
fstl
push
dec
mov
popf
shrl
adc
jmp
xor
scas
mov
outsb
and
test
xchg
scas
pop
aad
repz
rcll
push
push
in
dec
ja
out
jno
sbb
ja
bound
push
rol
jmp
ficoms
clc
lcall
push
pop
mov
mov
out
mov
and
cmpsl
pop
data16
cmp
int3
sbb
xchg
lods
fsubrl
test
mov
shll
mov
dec
addr16
ss
cmp
fs
mov
xor
test
stos
outsb
add
inc
push
xchg
in
std
or
shlb
jnp
cmpsb
out
fadd
and
cli
inc
sub
repz
cmpsb
xchg
cmpsb
mov
shrb
hlt
cld
adc
aas
push
lds
into
jnp
mov
loop
xlat
popf
xchg
out
in
iret
enter
jge
int
jecxz
leave
sarl
xchg
xor
rcrb
shlb
stos
push
xor
dec
sub
push
scas
popf
cld
and
mov
xchg
iret
imulb
fisubl
xor
leave
inc
jp
outsl
xchg
push
fs
jne
fstpl
mov
dec
mov
jp
mov
aam
sub
cli
jmp
xchg
lods
add
in
fwait
add
or
arpl
movntps
in
mov
xchg
stc
push
cmp
mov
mov
fistpl
insl
addr16
fbstp
lret
movsl
fsubrl
jmp
pop
ljmp
push
push
hlt
push
cmpsb
xor
or
cmpsb
addr16
mov
out
gs
rcrl
ds
test
cs
mov
cmp
lahf
cltd
ja
adc
jae
addr16
or
inc
or
popa
lock
shlb
sti
outsl
adc
pop
out
sbbb
aas
scas
inc
jb
insb
jno
das
mov
sbb
push
push
in
rcll
sbb
push
cld
lods
ret
sbb
mov
xor
mov
sub
inc
and
push
cli
dec
insb
xor
jns
pushf
cmp
shll
mov
arpl
shl
cmp
les
push
jne
xchg
rol
push
push
jge
sub
mov
cmp
shll
in
popf
jne
inc
and
and
mov
out
retw
mov
jecxz
jns
addb
adc
aaa
nop
in
jp
add
inc
add
sahf
test
insb
sub
sahf
pushf
loop
test
je
jae
jl
xchg
mov
bound
leave
xor
inc
pushf
jle
mov
fdivrl
ds
mov
fs
test
ja
inc
daa
shll
cld
stos
and
fwait
je
push
fnstsw
lea
push
mov
jg
mov
repz
cli
inc
in
mov
cmp
cmp
adc
sub
mov
or
xchg
jp
mov
jb
rcr
pusha
lret
and
jno
jno
push
sbb
repz
xchg
aaa
jne
jnp
sbb
bound
cmp
push
push
xchg
mov
xchg
icebp
mov
pop
dec
mov
push
adc
nop
rcll
leave
clc
pop
aad
jl
nop
xor
repnz
jb
sbb
sti
in
fldpi
sbb
mov
imulb
dec
mov
movsl
popf
aas
rcrb
or
adc
pushf
inc
leave
dec
add
sub
and
loopne
xor
orb
adc
imul
xchg
retw
mov
add
sbb
iret
cli
ret
jbe
imul
pop
pop
and
and
fadd
sti
and
stos
mov
dec
fs
xor
popf
cmp
mov
cmpsb
imul
popf
xchg
pop
mov
xchg
push
lock
jns
add
mov
jecxz
subb
lock
pop
repnz
or
outsl
add
loopne
cmp
leave
fsubrs
jbe
leave
fucom
in
push
inc
mov
mov
leave
and
in
push
subl
xlat
add
mov
jl
pop
xchg
or
faddl
lods
sub
mov
in
repz
jg
or
fwait
out
mul
xchg
dec
xor
or
xchg
psrld
xlat
test
rcrb
xor
push
int
add
mov
adc
xor
shlb
pop
fisubs
imul
hlt
insb
in
mov
dec
jecxz
dec
xchg
mov
sub
inc
iret
mov
and
xchg
or
jnp
mov
sbb
ret
movsl
push
xlat
xor
inc
fmulp
inc
loope
sbb
mov
or
xchg
sub
jge
xchg
jb
and
fistpl
or
movsl
jno
push
jp
in
dec
inc
cmpsb
sbb
mov
mov
fnsave
outsl
lea
fisubl
aas
lds
mov
pop
leave
mov
or
lods
mov
xchg
push
test
xor
sar
xchg
add
dec
cmc
cwtl
cmp
lret
xchg
int
cmp
mov
inc
movsl
or
imul
enter
mov
dec
aad
and
popa
xlat
fs
cmp
data16
jmp
xchg
es
pop
xchg
adc
push
sub
iretw
mov
nop
cmp
roll
das
xor
push
jl
stos
out
jl
push
std
int
movsb
std
dec
sbb
ret
stc
pop
ret
flds
ret
rorl
jae
xchg
addl
fwait
int
inc
or
and
mov
das
and
in
sub
addr16
add
mov
and
mov
cs
xchg
int3
pop
sub
push
lods
pop
stos
stos
xor
bound
dec
xlat
adc
pop
adc
loop
out
mov
std
ljmp
sub
rol
and
xchg
gs
incb
mov
mov
xchg
popa
cmp
icebp
cmp
and
clc
sbb
ret
ret
lods
cmp
fbstp
mov
ret
and
scas
ja
outsb
xchg
pop
icebp
ss
arpl
lahf
dec
mov
pop
inc
push
sub
jns
loope
roll
cmc
sbb
enter
mov
add
jmp
sbb
or
push
inc
sbbb
out
xor
mov
jb
xor
jbe
stos
data16
mov
das
jns
inc
sbb
or
out
pop
and
mov
fcompl
jl
mov
ret
lret
shr
push
cmc
push
pop
xchg
inc
or
xor
or
fcmovnu
push
or
push
int
add
or
mov
ret
or
inc
mov
filds
imul
lret
inc
fdivs
loop
jmp
iret
mov
cmp
aam
aas
inc
nop
xor
into
or
push
mov
or
daa
dec
rol
mov
xor
xchg
fsubrp
dec
sub
jno
add
inc
lcall
out
orb
xchg
add
sbb
or
fucomi
fisttpll
mov
mov
or
push
xchg
sbb
mov
aas
pop
cmp
mov
pop
dec
hlt
push
fisttpll
inc
adc
mov
iret
push
pushf
repnz
add
cwtl
pushf
jle
jmp
movsb
xchg
xchg
xor
push
and
imul
push
mov
push
sbb
cmpsl
xchg
out
mov
lret
or
cmp
loopne
test
pop
xor
or
les
mov
aad
shlb
std
test
cmp
inc
scas
pop
mov
xor
jge
mov
bound
or
call
push
sbb
loope
cmp
fstpt
in
cltd
rolb
jbe
pop
inc
adc
or
or
iret
sub
and
jmp
inc
fs
mov
fstpl
leave
repz
rcll
push
mov
jmp
ret
insb
inc
mov
lock
jne
mov
sahf
jecxz
sbb
inc
jmp
test
cmpsb
insb
pop
aam
mov
xchg
adc
xchg
adc
je
in
in
das
xchg
and
push
fcomip
jns
negb
cmpsb
xchg
xchg
lods
ret
cwtl
mov
popa
push
xlat
fsubl
push
push
rol
or
pop
or
sub
jmp
cmp
test
xchg
jge
and
imul
push
aas
cld
pop
and
cmpsb
cld
pop
rcr
mov
add
sbb
push
add
nop
jb
mov
mov
add
mov
andl
xchg
or
negl
mov
dec
inc
push
mov
in
stos
jle
and
scas
cmp
dec
lret
or
jecxz
call
fsubl
adc
xchg
sub
push
adc
dec
data16
sahf
push
fiaddl
jmp
fsts
and
stos
push
hlt
mov
pop
out
lock
lret
jno
test
adc
fadd
mov
cmpl
aaa
add
lahf
es
test
lea
pop
jmp
mov
rclb
inc
push
in
pop
stc
stos
cmp
loopne
lcall
or
mov
mov
js
and
sub
sarb
adc
add
lock
aaa
sub
mov
push
in
out
movl
addb
enter
test
sub
das
pop
cmp
out
xor
adc
jle
rorb
pop
movsb
imulb
iret
cmc
dec
hlt
shl
inc
push
jbe
and
or
popa
and
repnz
xor
mov
jnp
pushl
bound
mov
test
push
roll
cs
test
cld
jge
jnp
mov
movsl
cmp
dec
fists
mov
and
dec
mov
fdiv
psubb
dec
out
std
into
je
adc
inc
subb
sbb
mov
movsb
jl
push
les
xchg
and
sub
call
push
jb
dec
dec
push
mov
cmp
mov
adc
xor
nop
ret
mov
mull
pushf
xchg
leave
cmpsl
xor
lods
inc
jne
xor
lods
mov
test
stc
pop
xchg
imul
or
das
nop
stos
lds
ds
inc
std
call
ret
xor
lock
xor
ret
enter
fs
fisttps
dec
xchg
mov
and
jnp
andb
xchg
pop
jns
jmp
repnz
or
and
inc
adc
lea
cmp
lahf
dec
adc
inc
or
out
jl
and
and
out
sbb
pop
sub
xchg
das
pop
inc
scas
jae
out
mov
aas
xchg
mov
jle
cmp
in
push
int
and
int3
test
pop
inc
ficomps
and
and
mov
inc
scas
xor
sti
iret
lods
sub
mov
pop
push
jle
inc
es
pop
add
imul
cmp
stc
sub
mov
fists
cmpsl
sbb
psrld
int3
add
into
mov
test
mov
icebp
and
jbe
fnstenv
cmpsl
or
cmp
adc
out
stos
jo
cmp
fcmovu
mov
div
scas
addl
fxch
cmpsb
inc
jg
or
iret
sbb
mov
pop
push
jns
fmull
sub
xchg
outsb
ja
movsb
push
mov
aad
pusha
or
inc
mov
lcall
cmp
ret
lcall
and
mov
ss
cmpsb
and
fs
pop
mov
mov
adc
dec
inc
xchg
clc
push
inc
outsl
push
inc
mov
insl
ja
mov
test
jno
icebp
cmp
movsb
mov
loopne
pushf
mov
mov
xchg
imul
ja
in
xor
xchg
rcrb
mov
pop
cltd
inc
fstl
ss
test
jo
je
cltd
repz
ja
icebp
push
leave
stos
ds
or
out
addb
bnd
pop
imul
cmp
add
fdivl
cmp
mov
std
pop
add
movsb
popf
cmp
sbbl
jno
xor
sbb
push
loopne
push
jae
jecxz
or
push
pop
or
mov
out
mov
bound
push
stos
je
mov
outsb
push
std
test
adc
push
pop
les
js
int3
jecxz
xor
cmp
sbb
jno
jne
mov
adc
inc
fucom
lret
xor
hlt
test
aad
mov
inc
push
rcr
add
push
and
mov
scas
adc
shrl
fsubl
or
adc
xlat
mov
sbb
xchg
outsl
test
lret
cmpsl
rclb
outsl
iret
jge
xchg
jle,pt
rclb
emms
xchg
lret
mov
sub
add
ret
adc
sub
mov
cmpsb
mov
je
lods
popa
test
push
pop
imul
pop
jp
fsubs
jae
mov
fs
mov
jecxz
roll
in
push
cmp
mov
pushf
fsubrl
imul
dec
in
sbbb
xchg
push
sub
divl
or
mov
xor
out
dec
es
fsubrl
insl
push
mov
push
add
or
adc
mov
jno
cmp
jge
lcall
pop
or
hlt
sub
sbb
and
push
mov
push
out
add
ljmp
out
add
sub
movb
cltd
mov
jns
lock
jno
mov
push
int
int
add
dec
mov
jb
and
xchg
mov
addr16
sub
addl
imul
lsl
push
inc
imul
jl
stc
xchg
ficompl
clc
je
xor
xorb
shll
and
pop
test
adc
int3
imul
ss
inc
ficoml
jns
fldlg2
fs
leave
push
xor
sbb
lret
pop
int3
cmp
jge
jnp
mov
xchg
fistpll
or
rcll
cwtl
mov
ss
test
inc
inc
out
mov
scas
xchg
es
imul
dec
and
mov
rcrb
gs
mov
mov
xlat
mov
test
lds
dec
xchg
jle
mov
daa
jno
ja
push
mov
loopne
push
jb
imul
mov
add
iret
push
aas
mov
in
jbe
jg
xor
pop
add
xor
lea
mov
jae
sub
hlt
stos
jecxz
fstpt
mov
mov
cmc
dec
loop
and
add
pop
je
out
xor
jmp
or
inc
jnp
cmpsb
cmp
mov
jo
xchg
push
jecxz
mov
fstl
leave
push
arpl
imul
dec
mov
push
loopne
stc
or
mov
adc
aas
lret
out
xor
push
aam
pop
cs
mov
cltd
add
pop
loopne
xor
lcall
cld
dec
mov
imul
sbb
aad
test
xchg
mov
lea
cs
imul
pop
data16
test
xor
pop
loopne
xchg
cmp
test
inc
sbb
or
cmp
sub
popf
stos
nop
sub
push
sbb
fistl
lahf
push
push
les
into
add
rep
test
adc
int
or
ds
ret
add
cmp
pop
sbbb
ljmp
addr16
jo
notl
xor
aad
xchg
pushf
sbb
lret
or
int
xor
mov
sub
adc
daa
add
jb
dec
scas
push
or
aad
push
dec
xchg
daa
pop
je
mov
ficoml
enter
or
out
cltd
call
inc
sbb
xchg
pop
pop
push
mov
lods
movsb
mov
mov
cwtl
dec
test
ret
cmp
ljmp
jecxz
cltd
fistpll
idiv
ss
add
aaa
or
dec
mov
cmp
mov
push
or
and
push
icebp
std
push
cmp
cmc
pushf
and
mov
sar
mov
and
inc
adc
movsb
push
test
adc
xchg
gs
outsb
cmp
cmp
mov
mov
xor
in
fldcw
adc
and
pop
xchg
mov
xchg
sub
jp
cmp
lret
cwtl
xchg
inc
add
js
sbb
ja
adc
push
jle
fstl
stc
clc
ficomps
out
fldcw
inc
out
cli
fdivrl
sbb
test
push
dec
jle
ret
popa
repnz
in
sbb
xchg
lds
orl
mov
dec
fidivl
push
mov
ret
aas
push
dec
sub
test
lea
jge
repnz
daa
jle
stos
mov
gs
movsl
cmp
sub
in
lahf
call
xchg
dec
mov
mov
cs
iret
test
fsubs
jle
cwtl
mov
pushl
out
dec
jg
or
and
sub
test
jo
bnd
outsb
dec
fsts
cmp
sub
sbb
push
addr16
mov
jmp
lock
sub
xchg
cld
sub
cmpsb
jmp
mov
jmp
repnz
in
mov
hlt
mov
adc
mov
xor
shrl
sbb
cli
pop
gs
rclb
lods
adc
adc
mov
and
mov
data16
cmpl
jg
xchg
pop
out
add
inc
pop
mov
hlt
mov
notb
fs
dec
into
dec
mov
test
or
lcall
stos
mov
lret
insl
sub
inc
sub
xchg
inc
dec
sbb
loopne
xor
dec
stos
sub
jne
mov
push
add
ljmp
dec
repnz
push
or
aaa
fstpl
pop
rolb
add
lcall
mov
fwait
sahf
movsl
fdivrp
les
sbb
sbb
out
inc
int3
push
push
adc
mov
cmp
hlt
fwait
testb
mov
inc
lods
aad
jb
or
add
jecxz
xchg
rcr
push
std
jmp
in
mov
popf
arpl
inc
add
lret
dec
mov
setne
loopne
and
push
xchg
fsts
imul
and
add
stos
int
cli
iret
notb
sar
fs
rclb
mov
enter
frstpm(287
add
dec
bound
popa
mov
cmp
addb
into
ss
int3
jp
movsb
mov
cld
sub
loope
out
pop
scas
push
sti
push
and
mov
pop
push
pop
dec
into
sbb
mov
push
aad
mov
cld
sbb
cmp
mov
mov
jge
push
inc
faddl
mov
lods
rcrb
dec
mov
xchg
or
mov
ficompl
cmp
lods
mov
push
nop
mov
mov
or
xchg
sbb
imul
fcomps
mov
je
xchg
cli
or
out
jmp
xor
sti
ret
out
mov
and
or
loop
dec
repz
mov
inc
lcall
jl
loop
or
push
pop
sarl
sbb
xchg
arpl
and
pop
lcall
and
inc
aaa
inc
inc
add
or
divb
out
movsl
xchg
pop
dec
jmp
je
xchg
in
push
push
add
ret
mov
leave
dec
sub
aad
or
bound
and
inc
shlb
jecxz
fwait
mov
mov
sbb
in
cltd
sbb
xor
pop
lods
rorl
cmp
jp
sub
imul
add
into
jb
jns
in
or
hlt
cmpsl
push
aas
xor
mov
inc
loopne
inc
bound
lahf
fdivrl
lds
lock
mov
sahf
int
insl
jno,pn
mov
push
mov
adcl
pop
xor
je
dec
addr16
mov
sub
sub
fcmovne
in
sahf
push
mov
imul
out
or
adc
in
mov
lds
fbld
jl
lds
fimuls
mov
scas
mov
fisubrs
jno
dec
ret
xchg
inc
and
pop
test
lahf
push
lods
mov
adc
lods
adc
addb
xchg
mov
push
ret
adc
in
xchg
insl
in
test
test
mov
mov
subb
mov
cmp
enter
fwait
push
fldln2
sub
or
daa
cmpb
inc
xor
add
movsb
mov
cmp
and
and
ret
dec
and
addr16
push
pop
adc
xchg
scas
sub
or
adc
lret
cltd
mov
clc
inc
mov
outsl
imul
ds
in
sbb
cmp
ficoml
cld
stos
fcomps
movsl
scas
cmp
jle
fiadds
js
dec
jnp
xchg
fldenv
cltd
mov
jle
addr16
cmpsl
and
push
pushf
aam
jb
ret
xlat
popf
add
shll
jecxz
inc
ficomps
fwait
scas
pop
iret
xor
frstor
imul
inc
ja
inc
push
mov
dec
add
sub
cmpsb
gs
adc
lcall
sbb
or
lret
mov
dec
pushf
add
add
leave
test
rcrl
add
dec
add
fcompl
adc
xor
add
cmp
xor
mov
test
pop
jo
flds
jle
lcall
pop
mov
stos
ja
das
mov
pop
jno
push
fimull
in
push
test
push
dec
sub
cmp
add
lcall
xorb
cld
add
in
int3
repz
loope
mov
es
inc
cmp
xor
pop
xlat
rorl
movsl
daa
sbb
nop
dec
push
mov
mov
data16
sub
mov
fucomip
push
clc
xor
jge
add
inc
cltd
cmp
xor
mov
lods
out
cld
sbb
xor
mov
rcl
xchg
push
bound
je
pcmpgtd
xchg
inc
pop
lret
mov
imul
jbe
popa
xchg
dec
std
mov
cmc
inc
mov
fiadds
iret
sbb
mov
sbb
adc
dec
aad
jb
xchg
in
rep
jno
jmp
fildll
fiaddl
dec
pop
popa
adc
xchg
aam
test
into
nop
enter
ja
add
repz
mov
jnp
xchg
cmpsb
sbb
jg
rorl
cmp
mov
or
cmp
mov
inc
and
stos
rep
lea
xlat
adc
sahf
loop
lret
ret
int
push
inc
jg
test
sbb
jae
stos
lods
xor
int
ret
pop
xchg
pusha
int
js
sub
adc
gs
sbb
mov
xor
shll
sub
cmp
xor
mov
cmp
in
mov
loop
push
push
enter
dec
dec
dec
in
aam
lcall
or
jno
mov
jl
mov
leave
push
jne
sti
stc
aad
dec
inc
inc
cmp
fdiv
flds
cmp
std
xchg
inc
test
sqrtps
popf
test
sbb
js
popa
in
bound
decl
or
sub
sub
push
xor
sub
mov
and
out
pop
push
jae
fwait
stos
les
pop
test
add
mov
or
insl
movsb
shl
pop
push
movsl
mov
imul
int
adc
push
inc
adc
cli
test
and
mov
cwtl
pop
mov
xchg
dec
fstpt
ret
cmpsb
push
hlt
and
lahf
xor
mov
shrl
jge
add
sub
insl
pusha
or
jnp
jmp
xor
mov
movb
scas
nop
inc
dec
cwtl
xchg
add
arpl
adc
daa
jecxz
repz
dec
frstor
addl
push
popa
loopne
stos
mov
pxor
jne
sbb
js
orb
movsl
mov
inc
add
xchg
inc
call
or
or
fisttps
pop
cmp
push
mov
cwtl
mov
cwtl
popf
cld
push
xchg
mov
jbe
cmp
mov
cmc
sub
imulb
mov
pop
push
sub
sarl
fcmove
inc
dec
adc
cmp
adc
xor
xor
mov
dec
lahf
outsl
adcb
push
repnz
cltd
test
popa
sub
add
mov
xor
push
popf
mov
jmp
aaa
mov
pop
cmc
in
shlb
xor
add
pop
xor
lahf
ja
cmp
and
addr16
leave
push
adc
stos
js
xchg
push
lods
test
cmp
sub
push
iret
shlb
push
lahf
push
icebp
jb
jb
out
mov
push
int3
fbstp
insb
mov
pop
jae
push
mov
dec
inc
int3
rol
jp
call
mov
jae
popf
and
lods
loope
mov
sbb
je
adc
dec
mov
ret
repnz
adc
mov
jge
add
xor
mov
aas
jne
mov
sub
inc
xlat
jge
lock
call
sbb
fwait
sbb
data16
xchg
add
mov
shrb
jge
jp
adc
popf
inc
idivb
or
cs
or
xlat
jo
pop
movsl
adc
mov
or
shll
fwait
jns
test
lcall
or
sahf
jecxz
mov
imul
push
add
cmp
sarl
push
cmc
aas
into
xor
sbb
lea
jo
sahf
xor
stc
sarl
push
push
std
icebp
outsb
or
sbb
or
lock
clc
push
pop
sbb
movsb
or
subb
inc
rcrb
loop
sbb
xor
fnsave
push
xchg
push
enter
mov
mov
sbb
jge
in
mov
sub
inc
lea
pop
repz
cmp
push
jecxz
or
insl
sub
xchg
xchg
in
pop
inc
es
push
ret
sub
addb
inc
fnstsw
mov
inc
sarl
cmp
dec
popa
pop
push
iret
inc
inc
pushf
fcomps
lahf
pop
shlb
mov
out
cmp
aas
fldt
inc
mov
imul
adc
aad
add
sbb
adc
in
jae
arpl
jl
lahf
test
cmc
push
sbb
adc
xor
mov
out
adc
lcall
imull
add
dec
xchg
cli
test
or
cmp
scas
cmc
cmp
and
dec
int3
mov
xor
pop
or
iret
jb
mov
sbb
mov
push
cs
shll
mov
add
fs
xchg
jmp
subl
xor
jnp
jg
test
add
or
or
xchg
shlb
mov
jle
add
cmpsb
xor
fwait
sbb
add
mov
pop
movsl
push
and
daa
sbb
insl
fwait
out
jle
mov
test
cmp
mov
jle
aas
sub
mov
pop
sub
mov
insl
pop
cwtl
xchg
lahf
inc
scas
and
or
mov
pushf
pop
stos
cmpb
les
mov
push
mov
add
xchg
jo
fs
aas
cmp
sub
mov
jp
mov
call
xchg
lods
lahf
mov
inc
into
dec
divl
jb
adc
psrlw
sub
into
sub
ds
out
pop
jns
add
inc
mov
orl
les
add
je
pushf
test
ret
ljmp
mov
and
ja
mov
mov
scas
es
test
aam
into
es
popa
mov
sbb
push
and
cvtps2pd
popl
jp
mov
mov
mulb
mov
fnclex
vpmaddwd
scas
add
daa
shll
add
sbb
pop
push
lods
mov
popf
dec
into
js
aam
neg
xchg
jb
sbb
cld
fstps
sbb
andl
enter
mov
bound
in
cli
mov
ss
mov
lds
les
pop
das
cmc
sbb
sahf
xchg
fs
cli
xor
adc
test
shll
pop
lret
inc
ss
and
jecxz
pop
popa
out
xchg
fsubrs
in
pop
out
xchg
stos
movsl
arpl
push
sbb
rorb
dec
sbb
orb
push
sub
xchg
out
shl
pop
jge
lods
test
push
cld
jns
mov
adc
cmpsl
inc
and
in
stos
rcrb
mov
das
aad
mov
aad
das
and
orl
data16
mov
xor
fcoml
push
call
and
lea
jg
add
cwtl
add
mov
mov
or
push
inc
cmp
mov
jp
jg
and
testl
addr16
inc
push
int3
sarl
sti
mov
add
or
add
xchg
mov
cli
loope
out
jecxz
call
gs
jbe
mov
out
out
and
pop
and
mov
sbb
inc
xor
mov
repz
call
jecxz
or
xchg
js
xor
sbb
pop
inc
add
icebp
sarb
out
addl
repz
jae
leave
scas
int
repz
data16
dec
adc
jge
in
add
mov
ds
loop
imul
in
xor
dec
lods
inc
xchg
add
mov
stc
inc
mov
push
sub
mov
stc
shlb
inc
lahf
mov
sub
aam
nop
add
ja
sbb
in
pop
imul
mov
stos
repnz
ljmp
cltd
sahf
idivl
mov
lret
enter
jle
sbb
stos
inc
loope
aad
pop
rcl
ds
arpl
adc
jnp
push
jnp
in
stc
int3
inc
or
ja
xor
mul
cmp
nop
xor
jl
mov
add
xchg
divb
xchg
mov
xchg
in
int3
pusha
cmp
mov
shlb
lahf
jo
adc
rorb
in
xor
in
sub
testb
sbb
push
and
dec
xchg
call
iret
cwtl
cli
and
add
sub
mov
adc
int
xlat
xchg
fiaddl
fists
sahf
mov
int3
xor
aad
dec
ficomps
fsubp
adc
lds
or
add
test
cli
fwait
ret
xchg
push
lret
pop
data16
pop
cmc
pop
xlat
ja
mov
test
mov
pop
jbe
lea
sub
mov
andb
scas
adc
pop
or
pop
xor
sti
jl
inc
sub
xor
xor
jg
je
ljmp
sbb
movsb
dec
addl
mov
popa
xchg
addr16
or
sarl
scas
push
enter
pop
movsl
loop
gs
inc
int3
ret
mov
sarb
jmp
or
xor
loopne
jnp
mov
pop
pop
ret
clc
pop
mov
jg
mov
cwtl
cmp
pop
repz
lds
jge
dec
or
dec
es
and
sbb
adcl
mov
xor
das
jge
test
or
and
xor
outsl
xchg
rcrl
jmp
xor
lock
pop
enter
cmp
sbb
pop
andl
lcall
pop
imul
shlb
movsb
add
enter
data16
mov
mov
sahf
insb
jecxz
jbe
mov
mov
outsl
cmp
out
push
add
xlat
insl
push
imul
jns
fidivl
push
imul
insl
loop
out
out
das
sub
jbe
adc
mov
adc
sbb
mov
pop
xor
mov
js
sbb
mov
mov
xchg
pushf
cwtl
ja
xchg
ret
dec
pop
sti
jae
js
scas
lock
or
in
mov
jl
sbb
ljmp
sbb
cmp
shlb
jle
jl
mov
addl
jecxz
mov
inc
push
test
movl
das
mov
lock
adc
bound
pop
imul
cli
enter
popa
dec
pop
jne
sbb
or
push
sbb
add
pop
int3
ja
setno
sub
dec
mov
add
repnz
dec
icebp
pushf
sub
ret
loopne
add
mov
lcall
mov
pop
inc
add
hlt
cwtl
cmc
fidivs
imul
push
cltd
jae
scas
jae
cmp
js
dec
mov
fnstenv
add
inc
jg
xor
push
push
lods
inc
rep
mov
pushf
and
fwait
mov
inc
or
repz
or
ljmp
cmp
jmp
scas
iret
and
es
pop
or
jg
iret
in
push
sbb
dec
sub
push
or
lcall
sbb
and
jmp
loopne
ljmp
stos
test
jne
movsl
movsl
mov
shll
mov
inc
pop
jp
sbb
stc
lret
mov
mov
test
fisttpll
push
inc
mov
fsubrp
ret
and
fbld
mov
mov
addr16
mov
cmpb
popa
les
xor
imul
movsb
ret
pusha
xchg
inc
or
sti
fldenv
add
inc
pop
sti
into
sub
xchg
sub
adc
in
add
test
and
inc
mov
lret
cmpsb
sub
xor
ja
cmp
popa
mov
mov
xchg
xor
ljmp
fbstp
xchg
popf
fidivrl
pop
and
ficomps
les
add
adc
test
sbb
xchg
xor
cmp
aad
pop
mov
adc
cs
lock
lods
in
je
pop
inc
arpl
jl
je
dec
std
imul
rcr
insb
in
push
and
adc
loope
xchg
stos
clc
lods
pushl
mov
stos
ss
orb
aas
mov
out
jmp
push
test
sbb
inc
jge
idiv
push
pop
pusha
lds
stos
mov
inc
lea
push
int3
or
mov
jge
jb
mov
shrl
iret
pop
repnz
fmull
mov
jae
add
out
and
stos
mov
pop
cli
imul
xor
xchg
mov
xchg
pop
les
test
mov
mov
add
rorl
cmp
loop
xor
add
icebp
jns
xchg
sub
stos
inc
and
popf
xchg
mov
inc
push
int3
add
scas
adc
inc
lock
pop
aad
outsb
out
adc
pop
mov
adc
sub
dec
pop
push
cmp
mov
jmp
cmp
cld
test
cmp
inc
mov
aaa
sar
push
dec
jmp
jbe
cwtl
cmp
shlb
subl
loop
mov
pushf
pop
push
sti
aad
outsl
ret
pop
faddl
jbe
push
and
ficomps
jno
pushf
rclb
lods
xchg
xchg
xchg
int
jg
lret
sti
sti
test
xor
jbe
inc
rolb
sub
shl
repnz
in
bound
mov
xchg
cmp
pop
lods
adc
cmc
jb
adc
lret
push
xorb
das
jl
imul
lret
mov
and
int3
dec
pusha
fwait
sbb
sub
das
mov
test
sbb
mov
pop
mov
sub
gs
push
cmpsb
rcrb
jbe
cwtl
jecxz
cltd
sub
adc
int3
mov
in
bound
std
and
hlt
out
fs
loopne
out
fimull
adc
pop
fcompl
xor
imul
ljmp
in
lcall
dec
gs
dec
jno
lods
jmp
xchg
xchg
clc
mov
je
in
and
push
lds
outsb
ret
mov
cmpsl
repnz
push
push
in
xchg
ja
dec
lret
jb
xor
dec
cmp
dec
arpl
repnz
movsl
lret
out
jne
lcall
lods
loopne
mov
imul
test
nop
push
out
sbb
int3
sub
push
aad
xchg
sub
pop
dec
rcl
jmp
xor
popf
and
std
bound
mov
xor
imul
das
jb,pt
add
add
fptan
dec
call
fistpll
mov
imul
cwtl
insl
ss
dec
cmpsb
sahf
jl
daa
mov
sbb
enter
and
xor
sub
mov
push
xchg
mov
mov
scas
mov
sbb
cmp
dec
xchg
or
jno
push
cmp
cmp
xor
lret
fnstsw
pusha
lcall
adc
insl
repz
les
fdivrs
xor
jae
fisubrl
fcompl
std
mov
pop
xor
jecxz
hlt
jle
stos
add
ljmp
pop
inc
xchg
jne
push
shlb
xor
mov
icebp
sbb
dec
jp
mov
adc
mov
mov
daa
aam
sub
inc
mov
sub
imul
mov
add
loopne
stos
inc
ljmp
lret
mov
js
dec
leave
lcall
mov
popf
jnp
repnz
sub
shll
pop
outsb
int3
pop
sarl
mov
xchg
lret
iret
dec
dec
and
imul
aas
cmp
xor
and
ret
mov
cli
cmp
fldenv
or
lret
idiv
popa
mov
ss
dec
cmpsl
rcrb
in
imul
sub
bound
cmpsl
neg
jecxz
or
out
mov
xlat
adc
sbb
pop
mov
push
mull
enter
ds
imul
gs
rcll
or
jb
pusha
sbb
mov
ret
ds
ficomps
cld
dec
jl
scas
ficomps
sbb
loop
mov
jns
in
mov
shlb
fdivs
lahf
call
dec
pop
cmpsb
mov
subb
add
xorl
aam
fmuls
jnp
fcomi
test
add
jmp
les
cmp
push
adc
call
or
add
shlb
stos
addr16
sub
cs
mov
push
orl
or
leave
in
je
aad
adc
and
ror
inc
repnz
mov
jmp
pop
movsb
pushl
push
mov
aas
or
mov
xchg
lods
les
push
lea
leave
bsf
push
pop
lret
ds
inc
and
xchg
pop
jae
and
orb
imul
lcall
mov
or
push
push
mov
cmp
mov
addb
jns
int3
push
stos
push
xlat
ret
aam
lods
inc
push
mov
pop
sahf
mov
and
jmp
pop
pop
cmp
test
out
or
aad
scas
in
or
jno
out
mov
mov
rcl
push
pop
pusha
cmp
cmp
scas
imul
dec
lret
icebp
gs
inc
or
lods
mov
cmp
ret
mov
fistpll
int
mov
rorb
sbb
mov
adc
lret
int3
cmp
stc
and
fwait
push
xchg
rcrb
mov
dec
pop
in
rol
lret
xchg
stc
fs
dec
mov
test
mov
aam
jmp
adc
nop
dec
aaa
std
popf
and
cmp
jne
iret
fdivrl
mov
mov
arpl
clc
push
mov
sub
dec
sbb
ja
fnstenv
stos
push
dec
mov
xor
jge
sub
pop
sbbb
mov
ja
addr16
sub
sar
imul
inc
add
mov
sahf
imul
fisubs
and
xchg
fisttpll
outsl
sbb
inc
addb
add
dec
shlb
pop
sbb
sbb
dec
jl
jl
dec
jge
mov
insb
xlat
pushf
inc
je
sti
mov
test
mov
movsb
pop
stos
inc
loop
push
pop
mov
dec
inc
lds
add
pop
add
in
pop
xchg
adc
pop
dec
andb
xor
test
jo
mov
adc
and
xchg
jmp
leave
lret
pusha
lret
sub
and
out
fistpl
cmp
cmp
adc
mov
xchg
add
shrl
inc
iret
mov
lds
xchg
and
cmp
pusha
shrb
mov
test
jp
cmp
movsb
rcr
mov
pop
jg
inc
mov
jl
mov
and
sbb
jne
lods
lret
imul
push
in
inc
mov
sti
shrl
inc
fwait
lcall
fildll
shr
imul
dec
test
jge
cmp
jno
pop
sbb
ljmp
adc
pusha
lods
ret
xchg
dec
pop
enter
xor
test
push
insl
test
jle
addr16
jne
mov
xor
jp
and
scas
iret
ret
inc
cmp
push
xchg
adc
sbb
ret
insb
sub
popf
push
sub
and
je
shrb
test
cli
lods
dec
add
nop
jle
dec
ret
bound
ret
mov
cmp
imul
mov
cltd
push
aam
cld
les
adc
ret
mov
repz
in
popf
out
cwtl
das
jp
adcl
mov
adc
cs
idivl
xchg
pop
call
lods
mov
arpl
loop
mov
andb
jge
inc
fnstenv
aad
cli
lods
shl
sub
ds
popl
jnp
inc
jno
mov
xchg
out
sbb
jnp
xchg
jecxz
mov
mov
mov
out
jae
leave
popa
ss
inc
or
das
cmp
push
push
mov
andb
jecxz
add
sub
push
pop
mov
cmp
arpl
in
aaa
or
and
pushf
cwtl
ret
std
fcmovnb
int
pusha
xor
jg
ja
mov
hlt
mov
testb
data16
lea
nop
dec
lods
push
mov
jno
fs
fisubl
jno
add
aaa
loop
mov
test
xchg
gs
fucom
cmp
jno
xchg
in
sbb
and
and
stos
lret
and
insb
je
fsts
pop
js
cmovbe
gs
repnz
mov
pop
xchg
pop
sub
mov
enter
dec
mov
sahf
lock
popf
add
and
sbb
insb
andl
pop
pusha
scas
cmpsb
out
lea
cs
jp
insl
pop
xor
jge
mov
xchg
jge
out
movsl
or
push
rclb
push
add
add
ds
adc
add
sub
dec
mov
inc
je
jle
push
out
xchg
pushf
testl
dec
mov
mov
pop
insl
aaa
jle
movsb
stc
out
shll
push
je
sbb
xchg
call
scas
mov
cmpsl
pusha
fimull
jge
push
ret
jle
and
clc
cwtl
mov
repnz
int3
inc
into
sub
out
mov
mov
lds
test
or
ja
push
inc
dec
in
sbb
out
add
cmpsb
pop
nop
sbb
pop
ja
mov
sbb
xchg
xor
aad
cld
pop
pop
cmp
pop
xchg
iret
cmp
icebp
insb
adc
or
movsl
mov
repz
jge
mov
mov
adc
sub
and
int3
outsb
add
xchg
sub
movl
sti
adc
sub
sbb
stos
push
cmp
in
leave
mov
aad
movsb
inc
xor
jge
inc
jge
push
inc
fs
adcb
fdivrl
or
in
adc
ljmp
imulb
dec
test
mov
add
jno
add
dec
adc
mov
ret
leave
lea
add
or
adc
push
push
movsb
cmp
push
sub
jnp
inc
add
sub
stos
adc
test
jae
test
inc
mov
fnstenv
xor
mov
jo
mov
in
sti
mov
xchg
xchg
outsl
stos
jmp
insl
aad
jle
push
mov
daa
mov
flds
hlt
mov
dec
enter
jno
mov
xorl
movsb
xor
cmpsl
dec
mov
xchg
push
je
lcall
mov
mov
pop
in
loope
repz
out
cmp
icebp
and
pop
mov
jns
pop
in
and
pusha
push
test
mov
sbb
mov
stos
sub
xor
insb
notb
shr
cli
stos
xor
pop
aas
xor
ja
repnz
fsubrp
test
push
dec
add
enter
cmp
add
mov
push
arpl
inc
outsl
aad
ja
gs
lods
in
pop
dec
sub
mov
xchg
loopne
dec
sbb
aas
nop
jno
sbb
rcll
jnp
mov
pushf
add
inc
in
mov
repnz
adc
cmpsb
leave
dec
xchg
js
sub
adc
fdiv
jns
or
cltd
pop
xor
mov
scas
out
bound
popf
popf
data16
call
jmp
addl
jae
jp
test
jae
xor
add
jb
sahf
iret
or
imul
sbb
scas
cltd
push
cmpsl
dec
je
mov
outsl
insb
fdivrl
cmp
mov
sub
xchg
jno
mov
push
mov
xchg
push
mov
aam
jnp
in
loope
pop
aaa
iret
std
xor
mov
inc
add
mov
or
mov
lods
dec
clc
dec
cli
sti
lcall
int
xor
test
jns
fidivrs
test
outsl
pop
mov
lods
xor
jnp
loopne
scas
dec
insb
adcb
xor
into
ss
push
push
jae
shlb
data16
cmpsl
mov
xlat
jge
mov
adc
divb
out
mov
imul
jns
lock
arpl
adcl
push
outsb
or
push
jbe
or
cli
adc
mov
push
scas
or
out
test
dec
aam
jle
or
add
inc
or
xor
pop
sbb
call
shll
or
add
mov
bound
test
dec
lods
push
push
jbe
push
xchg
adc
fldenv
mov
rorl
push
int3
sti
sub
sbb
sbb
shrb
sbb
in
andb
mov
jb
int
popf
lret
add
jmp
ficoms
xor
or
mov
mov
mov
daa
jo
sbb
ljmp
dec
sub
mov
shrb
filds
test
fbstp
lret
out
imul
insb
mov
jae
fimull
std
cmc
dec
mov
shlb
out
push
jg
pop
les
enter
jnp
add
jmp
hlt
addr16
dec
fsubr
ret
std
pop
dec
cmp
sahf
jp
xchg
outsl
out
mov
mov
scas
les
push
xchg
int
addr16
adc
mov
cld
mov
inc
sti
sub
cwtl
popf
sbb
aad
push
outsb
mov
or
sbb
lahf
mov
mov
lret
lds
test
das
mov
xchg
and
jns
test
push
push
test
inc
xor
js
mov
ja
or
push
cmpsb
xchg
bound
dec
and
mov
add
loope
addr16
fptan
xlat
xor
mov
mov
inc
xchg
jno
mov
mov
and
inc
sbb
or
mov
and
pushf
icebp
jg
cmp
es
adc
loope
popa
lret
orps
mov
imul
xchg
frstor
xor
out
sti
sub
pop
jecxz
cltd
incb
gs
xor
jmp
xor
lcall
push
enter
mov
adc
mov
inc
lret
cmp
scas
add
shll
inc
jl
lds
pop
bound
add
inc
push
xchg
inc
add
mov
mov
inc
mov
pop
cli
sahf
filds
pop
cwtl
push
xchg
loop
inc
mov
mov
cwtl
in
addr16
in
add
xchg
loopne
aam
add
add
jecxz
movsl
stos
out
xchg
cmp
inc
xchg
adc
mov
mov
pmuludq
leave
dec
das
mov
sbb
out
cmp
pop
scas
pop
push
cmpsl
lret
rcrb
add
pop
leave
xchg
daa
cli
mov
jnp
cmpsb
cmp
cli
js
mov
in
rcll
lods
dec
jae
test
cli
repnz
movsb
jg
cmp
sub
push
scas
ja
dec
and
pushl
xor
mull
mov
add
push
sbb
cli
adc
lods
sbb
dec
sahf
cmp
in
mov
xor
cmc
roll
mov
jl
pop
outsb
pop
xor
insb
test
mov
jo
jle
push
adc
rcrl
inc
inc
xor
hlt
fldt
lcall
add
rorl
ret
lock
jecxz
jecxz
mov
mov
pop
push
push
dec
aam
or
inc
test
insl
add
ficoms
mov
pop
add
jl
mov
repz
jg
or
popa
jne
scas
test
ret
push
mov
popa
fwait
ret
dec
adc
aad
jmp
mull
test
mov
and
mov
inc
cmc
jno
xchg
adc
jb
sub
ja
ficomps
dec
ljmp
push
adc
loope
int
hlt
sub
mov
xor
andl
ss
stos
mov
inc
dec
lds
fsubrl
stos
addr16
or
xchg
ljmp
cmp
stc
insl
in
mov
call
lcall
out
jg
idivb
mov
pop
out
outsl
hlt
sbb
mov
hlt
push
jbe
mov
add
jne
or
cmc
dec
cli
push
push
xchg
jl
test
movsl
arpl
int3
or
adc
leave
push
xor
fstpt
mov
subl
jecxz
ret
or
cmp
jge
cmp
mov
or
scas
stc
mov
pushf
xor
adc
xor
gs
gs
push
jbe
jl
pop
loopne
ja
iret
mov
push
inc
dec
fcomps
mov
in
push
lods
int3
sbb
jl
out
test
push
xchg
lret
cmp
mov
pop
repz
and
push
jge
int3
dec
pop
imul
cmpb
jnp
cwtl
aas
mulps
push
cmc
jg
xor
pop
xchg
arpl
mov
or
pop
rol
pop
cmpsl
shrl
in
js
mov
roll
dec
arpl
lea
cs
mov
pop
hlt
sti
push
mov
fldl
sbb
data16
dec
cmp
cmp
dec
cmc
xchg
enter
lret
jae
movsb
out
test
mov
shl
and
mov
jmp
loop
into
push
mov
adc
xchg
adc
pop
out
test
sbb
cmp
lret
jg
bound
jp
inc
inc
push
mov
or
mov
sub
fimuls
jl
cmpl
push
or
and
movsl
mov
xlat
adc
shlb
out
pop
movups
ret
popa
fcoms
rcrb
push
ret
xor
push
int
ficomps
dec
dec
add
xor
call
dec
hlt
repnz
out
lea
inc
lea
scas
mov
xchg
out
xor
inc
loop
push
mov
into
mov
xchg
in
sarb
pop
inc
lods
sbb
xchg
ffreep
enter
leave
adc
stc
jne
or
gs
les
push
inc
mov
dec
jae
into
cmp
in
clc
xchg
or
lret
cmc
cmp
les
inc
sub
xchg
jnp
int3
and
daa
fwait
div
mov
and
je
xlat
aas
mov
or
loop
add
add
cmpl
lret
pop
daa
inc
ret
mov
add
pop
in
data16
jmp
inc
mov
lret
add
ret
stos
push
xchg
test
push
mov
lcall
push
out
lret
pop
jo
aaa
popf
out
adc
shlb
cli
push
scas
mov
add
or
and
dec
sbb
jbe
je
and
and
adc
and
mov
pop
adc
dec
dec
push
cmovp
outsb
or
push
fldl2e
sahf
stos
pop
push
mov
mov
lea
xor
xchg
andl
repz
sbb
xor
pop
jbe
ss
dec
cmpps
shlb
movsl
lds
pop
push
pop
sub
mov
hlt
push
jnp
and
loopne
arpl
inc
xchg
or
mov
loop
mov
push
jle
or
mov
divb
xlat
inc
jle
cld
popf
and
lock
call
shrb
mov
cmpb
cmp
fistl
xchg
xor
std
rol
insb
or
lcall
add
pop
mov
inc
iret
sub
out
jne
sti
rcl
and
sub
fistpll
dec
and
popf
lret
loope
mov
loop
gs
dec
jp
lahf
mov
jae
jo
pop
dec
mov
xchg
bnd
sbb
xor
insb
push
iret
add
jg
push
sub
js
push
mov
out
mov
add
test
inc
mov
mov
mov
jbe
nop
jge
mov
das
sub
lock
fdivrs
hlt
mov
xchg
test
inc
test
push
cmp
mov
notl
mov
pop
xor
sbb
mov
mov
fsubs
mov
adc
push
dec
pop
sbb
pop
jne
jecxz
sub
jg
shrl
in
push
jg
rcrb
dec
jb
fwait
addr16
jbe
lock
lret
cmp
aaa
xchg
xor
in
add
jo
mov
cmp
leave
rorb
mov
mov
das
pop
adc
mov
mov
xchg
ret
inc
dec
enter
lods
and
loope
dec
xchg
push
cmp
push
inc
cli
pop
push
inc
aam
or
push
daa
fimull
dec
xor
xor
nop
mov
js
test
or
mov
sub
jo
dec
leave
push
xchg
add
sbb
shll
adc
pop
outsl
xor
fs
clc
push
or
sti
js
lcall
dec
push
pop
ds
nop
pop
mov
repz
test
cmp
shl
cs
jo
out
xchg
repz
stc
xlat
repnz
aam
cli
push
xor
ja
ret
pop
dec
rcrl
in
jecxz
insl
jb
sarl
jp
pop
or
xor
aam
lcall
lods
pop
pop
pop
insb
pop
mov
inc
mov
sti
daa
loopne
cli
xchg
jbe
js
mov
mov
mov
call
mov
in
xchg
mov
mov
xchg
cmc
jbe
sub
imul
sub
mov
cmp
in
sbb
mov
inc
nop
cld
rcl
add
movsb
popf
popw
and
mov
push
int3
sub
fidivs
inc
jmp
push
lret
cltd
push
inc
repz
outsb
inc
stos
clc
or
and
push
push
xchg
pop
pushf
jp
and
lret
in
pop
add
xor
jne
xor
sbb
testb
incb
lods
nop
ljmp
jbe
iret
pop
test
pop
popa
fwait
dec
lock
mov
incb
xchg
jo
lock
ss
imul
std
cli
adc
loope
cmp
sbb
mov
mov
dec
jge
inc
xor
cs
imul
pop
loope
pop
inc
mov
inc
xor
or
or
cmp
leave
cld
sub
mov
push
push
lret
faddp
push
cmc
aad
mov
mov
jmp
pop
ds
les
and
sbb
addr16
and
xchg
mov
cmp
shlb
and
enter
jecxz
mov
addr16
or
popf
fs
mov
addr16
incb
cltd
stos
lock
in
and
xchg
sbb
sub
addl
or
xor
jge
pop
out
rcrb
add
fcomps
inc
test
loope
test
cmc
dec
add
mov
sbb
inc
imul
xchg
mov
hlt
or
sbb
lock
jg
push
sbb
sbb
add
fisubl
cs
hlt
in
lea
sub
idivb
fs
sbb
add
xchg
push
jl
test
fisttpl
mov
push
pusha
sub
insb
push
cmp
insl
push
xchg
aad
dec
dec
notl
das
sbb
mov
and
cmpsb
lea
jge
out
cmp
cwtl
cmpsl
jno
cmp
test
out
or
sub
push
ret
icebp
cmp
popa
sbb
jnp
xorb
mov
xor
jge
imul
cmp
dec
mov
hlt
mov
sbb
xor
pop
add
inc
test
shr
sbb
jno
or
dec
add
fs
and
lret
or
mov
out
lods
pop
sbb
sahf
daa
pop
in
pop
pop
fwait
pop
cwtl
sbb
lods
sbb
cmp
mov
push
jne
mov
insb
mov
push
adc
clc
mov
jmp
adc
fstl
mov
sub
inc
sbb
lret
mov
outsl
aad
das
subl
sub
add
mov
out
xchg
loope,pn
icebp
rol
outsb
xorl
cs
das
daa
sbb
xchg
imull
movsb
add
xlat
lret
and
and
sahf
add
int3
jmpw
sbb
roll
xchg
icebp
imul
jae
or
pop
shll
cmp
cmp
dec
pushl
gs
call
and
sub
jb
or
mov
lock
dec
aad
les
adc
xchg
xlat
and
mov
cmpsb
dec
xor
lcall
xor
adc
xchg
popa
mov
aas
inc
push
fidivrl
jg
enter
xorb
add
jne
dec
pushf
mov
mov
push
push
push
jle
xchg
mov
inc
inc
cmpl
add
sarl
sbb
xor
test
cmp
sbb
dec
out
loop
adcb
insl
mov
inc
sub
push
or
lods
stos
jp
dec
xchg
xor
out
xor
mov
dec
insl
ret
inc
shll
jno
pop
xchg
js
xacquire
add
cmc
xlat
in
popa
mov
aam
cmp
mov
addr16
inc
or
jge
inc
or
in
clc
aam
xchg
push
push
sbb
lea
das
in
sbb
daa
inc
lea
div
std
pop
inc
das
stos
cmp
mov
aad
and
roll
xchg
aaa
daa
pop
add
lods
adc
test
mov
add
repnz
xlat
loope
ss
idivl
pop
jle
pop
push
xchg
and
mov
dec
cmp
cmp
pop
cmp
xor
adc
jp
aad
rolb
pop
insb
mov
loop
or
loope
les
xchg
call
mov
outsl
jge
add
pop
shrb
xchg
loop
idivl
nop
sbb
fs
frstor
imul
mov
scas
ror
inc
pop
inc
cmp
out
aad
xor
cmpsl
int3
mov
out
ret
adc
push
adcb
mov
xchg
sub
jl
adc
scas
ljmp
sbb
push
and
testb
je
repz
sbb
jo
inc
js
in
cmp
pop
pop
inc
sub
inc
mov
mov
add
gs
mov
fcomps
jnp
sahf
ret
inc
adcb
sbb
lods
jbe
jl
xor
in
jecxz
imul
inc
int3
loope
icebp
das
sub
stos
sbb
dec
icebp
fucom
and
aam
dec
lea
bound
adc
push
lods
push
std
divl
or
xchg
pop
arpl
fiaddl
vpunpckhqdq
jae
pushf
ja
dec
sar
mov
aam
fs
sub
cmp
popf
test
std
sbb
add
sbb
in
out
cmpsb
push
inc
sbb
mov
jge,pn
int
mov
in
cmc
inc
in
cmp
push
xchg
fidivs
jnp
inc
cmpsl
and
iret
cmp
imul
out
pushf
adc
pop
mov
dec
inc
aaa
repnz
dec
adc
push
pop
stc
sti
movsl
gs
pop
sbb
mov
xchg
mov
inc
ss
ja
cmp
xorb
inc
cmp
jge
es
mov
test
or
nop
and
xchg
lock
add
ficoml
fs
push
repz
out
jle
push
out
inc
pop
xor
repnz
lds
xchg
add
push
cmp
test
fsubr
loopne
in
nop
repnz
jo
push
in
and
sahf
mov
jl
test
sbb
jp
cmp
cmpsl
jnp
xor
mov
sub
das
mov
aam
xor
test
test
out
inc
popa
imul
cmp
dec
mov
mov
push
sub
push
fs
inc
inc
test
jbe
sbb
rcrl
out
dec
outsb
add
mov
ret
fsubrl
push
add
hlt
jecxz
pop
repz
dec
cwtl
push
std
mov
cmp
dec
insl
mov
out
leave
xor
inc
sub
adc
mov
xchg
mov
xchg
fbstp
rclb
dec
dec
dec
lea
xchg
fwait
xchg
arpl
pop
or
imulb
sub
mov
jle
gs
jmp
addr16
sahf
mov
out
popa
and
in
popa
loop
in
js
and
test
aad
ds
mov
inc
push
push
jo
fsub
outsb
loopne
cmc
or
leave
adc
or
movsl
xchg
loopne
pop
int3
mov
jle
push
ret
hlt
dec
or
test
and
xor
mov
mov
loop
movsl
sub
mov
add
add
xor
push
test
mov
cltd
push
or
or
ss
movsl
dec
clc
ja
fwait
movsl
mov
sbb
xor
jp
pop
jl
sub
daa
cld
into
push
xchg
out
add
mulb
cmc
push
jl
xchg
inc
imul
dec
xor
sbb
inc
outsb
ss
in
arpl
test
test
and
and
pop
inc
test
aaa
mov
cmp
aas
mov
scas
inc
aas
pop
jns
inc
insb
shll
stos
mov
push
xorl
mov
jmp
or
dec
mov
jge
out
add
inc
dec
mov
fbstp
push
loop
inc
cmp
dec
sti
imul
add
mov
pop
popf
add
mov
mov
mov
orl
push
les
ret
xchg
xchg
addb
sahf
subb
std
and
jl
insl
mov
and
push
scas
call
jno
sbb
js
addr16
mov
push
negl
js
stos
rcr
sub
cmp
push
shrb
dec
push
scas
adc
mov
or
scas
dec
int
fsubl
pminsw
addr16
and
loope
lock
addr16
repz
add
and
das
lods
shrb
repz
mov
ss
and
jl
inc
call
out
mov
and
xchg
fwait
inc
lcall
inc
jle
std
mov
stc
cmp
mov
add
popa
xor
out
ss
repz
add
mov
imul
push
sub
fstps
jnp
mov
inc
jl
lods
pop
cmp
cli
dec
data16
aas
stos
fsub
icebp
shlb
adc
movsb
out
sbb
addr16
jecxz
xor
jnp
aam
cld
xchg
fsubs
xchg
scas
bnd
out
sub
out
mov
movsb
lret
push
lret
adc
repnz
aad
mov
xor
aaa
lret
adc
xlat
cmp
notl
adc
in
dec
dec
leave
or
push
or
xchg
sub
bound
xor
ret
rcrb
or
xor
iret
cmp
rorl
cmp
dec
div
pop
xchg
mov
xchg
jge
dec
daa
popf
inc
push
add
cwtl
hlt
dec
sahf
mov
push
and
js,pn
insb
jae
mov
mov
pop
lds
std
movb
aaa
xchg
cmp
cld
out
andb
sbb
sub
mov
mov
in
dec
sub
out
push
mov
data16
ret
sbb
jle
test
pop
or
andl
loope
push
adc
cmp
pop
jmp
lcall
cs
adc
pop
nop
mov
fdivp
lcall
lock
push
cmpsb
sahf
xor
scas
gs
out
das
je
stc
mov
or
jne
imul
jne
xchg
or
inc
push
sahf
pop
mov
mov
jle
pop
je
sub
lods
pop
pop
sub
or
mov
movntps
push
push
xor
leave
arpl
loope
adcl
and
sub
aaa
sbb
sub
jo
aad
aad
aam
sub
pop
inc
and
lcall
rclb
jmp
lea
jb
lock
mov
int3
push
pop
push
out
aaa
jp
xchg
push
loop
xchg
std
orl
mov
lcall
test
sub
xor
in
adc
dec
arpl
test
das
fdivp
fadd
cmp
mov
call
aas
dec
imul
mov
rcrl
daa
mov
and
inc
roll
xchg
ret
inc
jp
mov
mov
cmp
ljmp
mov
out
movsl
popl
dec
jg
xchg
imul
xor
jp
outsl
enter
iret
ljmp
xchg
lcall
adc
push
cmp
fnstsw
xchg
xchg
pop
adc
push
mov
sbb
scas
push
jb
not
jae
sub
in
xchg
lahf
and
ret
orb
xor
sarl
dec
sbb
pop
xor
ret
mov
mov
inc
push
push
out
loop
sbb
xor
sub
adc
popf
call
fcoml
cltd
arpl
add
inc
aad
mov
jns
mov
jbe
leave
rclb
aad
stos
pushf
aad
movsl
movsb
pop
pop
pushf
shll
mov
jne
jbe
mov
aam
sub
rcrl
add
das
cmp
mov
dec
into
xor
add
pop
orb
leavew
mov
movsl
adc
lret
push
sub
fcom
jo
dec
popf
jp
adc
jl
push
adc
pushf
adc
pop
aad
pop
stc
nop
mull
test
hlt
xor
test
pop
arpl
push
sub
pop
adc
aaa
sbb
iret
stos
ret
sbb
leave
loop
les
add
add
push
popa
mov
sub
mov
mov
mov
fadds
jbe
xor
dec
lods
cmp
js
xchg
and
negb
fnstenv
jecxz
test
and
aaa
inc
int3
xchg
test
aas
push
xor
jmp
enter
lret
mov
jmp
adc
aam
test
mov
add
out
jbe
aad
jno
adc
fs
insl
xchg
mov
jl
cmp
jns
push
stos
fs
and
mov
rcrb
push
iret
inc
adcl
ret
in
sub
mov
mov
and
and
mov
sahf
imulb
popf
in
push
sbb
jp
outsb
clc
sbb
add
or
divl
mov
sub
ja
mov
and
pushf
mov
cli
negl
push
mov
xchg
mov
add
fmuls
push
arpl
les
xor
mov
ss
inc
jo
or
ds
adc
inc
in
sub
fcompl
clc
or
or
scas
cmp
gs
mov
mov
call
xchg
test
adc
jmp
shll
add
icebp
cmp
das
fidivrs
dec
jne
jne
mov
and
xchg
cmp
test
xchg
sbb
stc
xchg
push
xchg
hlt
cltd
pop
imul
sub
xlat
stos
xchg
in
nop
mov
push
mov
leave
sahf
and
mov
push
cld
mov
mov
test
or
adc
loop
fwait
cltd
jp
mov
inc
ficoms
shrb
cmp
setg
lahf
jae
das
movsl
mov
adc
or
aad
adc
sbb
fdivrl
inc
fistpll
lret
or
jge
mov
negb
stos
sbb
sbb
cmc
pop
adc
aaa
cmpsl
jo
adc
dec
xchg
fisubl
cli
lods
data16
inc
push
pop
cmp
imul
insl
pop
or
std
js
inc
jle
add
jns
cmp
es
lfs
adc
mov
jge
push
cmp
pop
outsb
out
aam
jmp
lock
mov
pop
push
mov
pop
cmpsl
add
aaa
add
sub
adc
jmp
in
xchg
xor
push
sbb
call
out
or
mov
sbb
mov
jnp
jg
daa
and
cmp
inc
gs
cltd
test
gs
lea
pop
xor
cmpsl
lock
mov
pop
jle,pn
sbb
decl
xchg
add
cmp
sub
push
cmp
pop
lock
shlb
push
lods
dec
cmpsl
and
fdivr
daa
mov
and
jg
push
add
push
jl
movsb
mov
xchg
mov
sub
testl
movsb
mov
sti
scas
jbe
dec
pop
aad
test
pushf
leave
in
push
imul
fmul
roll
fcoms
add
imul
jp
sarb
adc
adcb
push
in
fwait
push
pop
add
inc
dec
stos
push
push
inc
ljmp
movsb
inc
cmp
cmpsb
ljmp
imul
jge
cmpsb
xlat
jb
jp
inc
pop
loope
jle
xchg
lahf
xor
and
and
imull
cmp
mov
in
sbb
cmp
cmp
push
xor
dec
test
notb
xor
stc
pop
sbbb
pop
cmpb
cmpsl
dec
inc
push
pop
mov
mov
pushf
pop
icebp
adc
push
push
es
inc
decb
xchg
adc
ja
stos
mov
out
vmptrld
jo
sbb
jmp
push
and
pusha
inc
lods
sub
sarl
pop
mov
into
and
bound
ficoml
inc
pop
mov
add
push
sub
add
xor
shlb
push
ss
insl
sub
add
pop
test
jae
dec
and
add
shll
shrb
lret
xchg
cmc
hlt
int3
push
pusha
and
repnz
mov
xor
insl
cltd
pop
mov
mov
mov
pop
dec
lods
rolb
sub
jl
jmp
adc
and
aam
popa
sti
in
lret
add
sbb
push
push
rorb
adc
out
pop
cs
imull
mov
call
mov
push
lock
and
mov
out
addr16
les
aam
inc
ja
icebp
jne
hlt
pop
inc
or
bound
sub
mov
xor
jge
iret
jl
incb
nop
popa
frstor
ret
cwtl
jnp
shlb
push
pop
push
sbb
sub
cmp
mov
push
mov
jmp
arpl
inc
mov
pop
xchg
repz
pop
pop
xchg
xchg
pop
rcll
inc
mov
arpl
outsl
out
scas
sbb
xor
mov
ret
in
stc
or
fldenv
push
incb
hlt
mov
imul
insb
pop
imul
cmpsb
jns
movsb
jb
cmp
push
xchg
cmp
add
stos
mov
push
push
fimuls
pusha
scas
leave
xchg
aam
sbb
sub
das
sahf
test
arpl
jns
push
sub
scas
dec
aaa
enter
mov
repnz
les
shrl
cmp
cmp
ret
xor
lods
movsl
jae
arpl
cmp
ljmp
out
inc
and
lret
clc
cmp
leave
and
mov
out
cs
mov
mov
std
sbb
idivb
lahf
fstps
mov
rcrb
fdiv
fcomip
lahf
das
mov
sahf
inc
in
fwait
xchg
je
aas
dec
push
jmp
mov
vprotd
push
adc
mov
lahf
jno
jmp
push
add
imul
sbb
cmp
and
imul
fisubl
addr16
push
movsl
aad
mov
jecxz
cmp
xor
mov
lret
cmp
int3
ret
push
xor
sbb
push
es
inc
in
imul
lahf
xor
mov
loopne
push
xchg
add
out
fidivs
inc
sahf
or
cmpb
in
mov
pop
mov
sbb
mov
push
out
jecxz
enter
mov
add
jmp
jecxz
add
push
push
imul
pop
lcall
sbb
xchg
scas
clc
push
push
xchg
repz
iret
push
sahf
sbb
inc
stos
in
loopne
mov
push
push
and
mov
aad
enter
out
push
mov
xchg
jmp
xchg
into
addl
xchg
push
mov
aas
insb
fs
repz
fimuls
loopne
or
cmc
add
inc
and
inc
std
sahf
push
mov
push
dec
das
shrl
daa
les
out
jb
or
scas
sbb
mov
xor
lock
jae
pop
sbbb
les
sbb
shld
jo
dec
call
mov
lods
adc
movsl
jle
adcl
sbb
stos
mov
mov
out
imul
push
pusha
sub
lock
xor
push
repz
pop
popa
sbb
xchg
xchg
sar
gs
sbb
leave
adc
outsl
pop
pusha
std
outsb
add
ficoml
cmpsb
test
push
xchg
xchg
xor
dec
out
imul
mov
je
and
and
cmp
add
xchg
scas
fbld
adc
pop
add
mov
mull
das
sahf
enter
push
jae
enter
xchg
xor
jp
incb
das
std
sbb
shrl
pop
sbb
in
imul
xchg
mov
ret
dec
fsubrs
sar
xchg
inc
mov
mov
repz
addr16
mov
inc
loopne
fwait
out
loopne
int
jge
mov
shr
push
ds
stc
dec
mov
xchg
rcll
dec
rcl
insb
roll
xor
add
mov
pop
and
gs
movsb
xor
out
in
adc
stos
in
ja
scas
lods
ret
mov
sub
std
mov
pop
iret
out
imul
dec
rorb
add
jge
and
insl
mov
test
sbb
pusha
push
xor
out
insb
scas
cmp
aam
pop
test
mov
leave
inc
xchg
not
mov
cld
outsb
jno
paddw
cli
repz
lock
mov
push
pop
dec
inc
or
sub
pop
inc
pop
mov
sti
add
jnp
push
add
sbb
cmp
jns
mov
pop
test
daa
inc
adc
in
test
js
out
fs
fcomps
lock
mov
mov
arpl
xlat
bnd
push
add
pop
test
and
addr16
test
pop
js
fldl
ss
imul
stos
lock
and
push
out
shlb
outsb
cs
push
xchg
ljmp
in
les
push
leave
adcl
lcall
xchg
out
sub
ss
popl
adc
cmpsb
mov
add
nop
push
pop
add
pushf
cmc
aam
mov
cld
ret
jmp
or
shlb
ja
adc
sbb
xor
xor
movsl
call
aas
mov
xchg
fdivl
or
push
data16
pushf
fidivrs
scas
and
xchg
sub
insl
mov
popa
push
sbb
adc
pop
sbb
mov
push
jmp
js
arpl
aas
lret
inc
pop
andl
mov
int
or
xor
inc
lahf
out
xor
dec
imull
sbb
or
out
loop
mov
or
mov
out
in
cwtl
mov
mov
nop
jmp
icebp
icebp
repz
add
mov
push
xchg
sbb
roll
mov
push
cmp
pop
jb
repnz
add
aas
add
lods
adc
and
fisttpl
insb
pop
lods
add
jg
pop
add
mov
mov
add
or
fs
lods
shl
lods
dec
mov
mov
fxam
mov
jle
xchg
fidivl
pushf
jle
in
lods
adc
xchg
sub
aas
fstpl
mov
mov
or
shlb
inc
cmc
xchg
xchg
aam
std
xor
sarl
pop
ret
movsl
or
mov
pop
adc
xchg
or
or
inc
jmp
jb
popf
shlb
xchg
lcall
shl
call
js
sub
pushf
ja
sti
cmp
adc
jb
arpl
jl
cs
adc
xor
pop
aad
repnz
cmpsb
sahf
rol
lahf
jo
lods
lea
sbb
or
mov
or
push
and
xchg
fcmove
adc
mov
pop
mov
addr16
shrl
ds
bound
filds
sbb
lods
mov
push
jbe
lret
fmulp
pop
push
cld
fists
out
mov
into
or
les
out
nop
push
inc
and
mov
jmp
dec
add
test
or
or
mov
mov
in
pop
cmp
pop
ljmp
jecxz
adc
lcall
xor
mov
loop
cs
test
les
repz
xlat
cmpsb
jnp
adc
add
pop
lret
arpl
jno
outsb
ss
mov
jbe
mov
fldt
xor
inc
nop
iret
mov
aas
sub
pop
mov
dec
sbb
mov
push
mov
in
iretw
inc
push
jl
push
sahf
mov
sbb
sbb
mov
nop
insb
in
shlb
negb
xchg
pop
lret
int
hlt
cmp
les
cli
int
mov
mov
xorl
inc
xchg
xchg
popa
xchg
sti
cmp
mov
cwtl
xor
push
subb
mov
in
cmp
adc
cmp
js
add
xor
nop
jp
mov
push
insl
out
push
mov
cltd
lret
aam
les
mov
aas
jmp
inc
mov
movsl
jnp
jns
dec
push
ja
and
add
dec
sbb
dec
fiadds
flds
adc
and
cltd
sbb
incl
adc
test
mov
push
add
jp
shll
pop
cmovnp
or
andb
or
mov
jle
adc
sub
stos
push
lods
out
add
add
sbb
std
and
sbb
outsl
sub
xchg
push
or
in
cs
cmp
cmp
sti
and
mov
dec
xchg
adc
fdivrp
dec
or
loop
jns
sbb
and
jns
popa
xor
imul
mov
sbb
xchg
push
daa
pusha
lret
push
sbb
xchg
mov
cld
sbb
cmp
push
push
sbb
mov
xor
push
repz
inc
xchg
xor
insb
sbb
repnz
pusha
mov
movsb
sbb
sbb
dec
lods
adc
cwtl
mov
int
or
adc
ss
or
sbb
adc
in
lods
sbb
cmpsb
notl
aad
mov
shlb
cmp
sahf
sbb
ret
mov
fs
jnp
jg
inc
decl
cld
mov
pusha
dec
fistps
sbb
sbb
jp
movsl
mov
and
ret
xchg
scas
not
sbbl
rclb
mov
popa
das
pop
and
and
in
ud2
gs
xchg
push
sbb
jno
cwtl
add
fs
mov
add
cld
jo
push
xchg
xchg
lock
or
les
mov
cmp
xchg
sbb
or
mov
sbb
fwait
or
jbe
mov
adc
fildll
xor
iret
jmp
or
imul
cmp
outsl
cltd
xlat
cmp
inc
out
sbb
cmpsl
jae
dec
gs
push
mov
xchg
add
pop
addl
ja
mov
mov
mov
lock
in
outsl
jg
push
jo
fcompl
xchg
rolb
nop
mov
adc
jp
shlb
addr16
inc
jmp
xor
pop
mov
pop
dec
jp
add
js
jge
cmp
flds
in
pop
pop
sub
mov
rcl
insb
std
lret
xchg
cwtl
add
mov
mov
lods
ror
cmp
sbb
cmc
jne
ljmp
sahf
call
sbb
pop
popa
lret
xchg
pop
mov
mov
mov
mov
cmp
xchg
ret
pop
dec
sub
stc
fdivl
sahf
mov
test
jp
xchg
cmp
pop
rcll
lods
loope
mov
mov
sub
vunpcklps
push
jne
mov
dec
cmp
lahf
mov
and
or
daa
xor
aaa
dec
mov
ret
jae
mov
dec
out
fs
adcb
cmp
xor
xor
push
sahf
cmp
lds
ljmp
gs
cmp
mov
jb
loopne
mov
movsb
mov
mov
or
add
popf
mov
adc
je
orl
mov
fisttpll
jbe
jb
icebp
pop
ds
xchg
lcall
sub
test
add
int
mulb
xor
cmp
outsl
cltd
pop
cs
bound
aas
std
es
push
adc
test
inc
hlt
dec
test
xor
arpl
mov
movsb
out
sarl
or
lock
mov
imul
mov
into
test
xorb
test
rcrb
jmp
jmp
adc
jp
std
sbb
mov
mov
jl
jg
sbb
jb
adc
pop
scas
push
xorb
fisubrl
pop
insl
cwtl
sbb
divb
jg
cli
or
adc
jnp
loope
div
bound
sbb
xor
cmpb
jl
scas
inc
and
cmp
sarl
in
fnstenv
or
adc
cmc
push
andb
push
sbb
sub
inc
sub
negb
repz
call
inc
inc
or
dec
pushl
addb
es
pop
mov
sbb
ljmp
pop
mov
test
add
mov
sub
loope
inc
mov
push
dec
sbb
cmp
adc
mov
test
adc
scas
xor
mov
sahf
pop
movsb
pop
loope
pop
in
jle
aam
sub
movl
jecxz
sub
dec
in
scas
es
mov
mov
sbb
pop
add
xor
or
into
mov
mov
cmp
mov
mov
cltd
stc
pop
and
push
xchg
mov
mov
cltd
inc
sbb
pop
shll
xchg
mov
cld
enter
incb
cmp
pop
xchg
pop
jecxz
xchg
loope
xor
pushf
add
sub
lea
rclb
or
mov
aam
and
mov
and
pop
inc
cmpsl
fisubrl
mov
pop
sti
fimuls
gs
shrb
dec
outsb
aam
or
jmp
cmp
mov
fs
dec
inc
add
jl
out
mov
aam
popf
int
shlb
andl
aad
push
leave
push
dec
and
mov
test
lods
cmp
mov
jbe
stos
lahf
shlb
pusha
ss
cmc
mov
jnp
cs
cmp
sub
negl
pop
scas
aam
aam
fistpll
test
insb
int3
cmp
mov
jnp
shll
and
fwait
jo
mov
int3
rorb
jg
mov
cld
push
ret
sarb
inc
mov
mov
adc
lahf
dec
mov
dec
leave
jb
pop
inc
push
stc
jecxz
sub
inc
jno
loopne
imul
bound
mov
xchg
mov
sbb
popf
mov
sub
int
icebp
mov
nop
nop
addb
xchg
cmpsb
out
sahf
xor
loop
sbb
cmp
jne
nop
divb
add
xor
pushf
cli
mov
into
sbb
pop
xor
push
dec
cmpsl
imul
repnz
popf
pop
nop
mov
sub
in
das
enter
xor
sub
jmp
fwait
xchg
mov
push
cmpsb
std
jnp
loope
cmpsl
cmp
or
and
cmp
push
mov
aaa
aam
addb
nop
inc
and
aaa
mov
xchg
lock
sub
daa
mov
dec
out
rol
addb
mov
fcompl
inc
jge
cmpsl
jecxz
adcb
clc
push
lods
or
xchg
mov
pop
sti
jmp
or
sti
and
add
add
cmp
adcb
mov
sub
push
mov
mov
sbb
call
js
data16
fnsave
cmp
dec
loope
bound
movsb
in
lock
adc
cmpsb
sbb
dec
dec
mov
cmc
repz
leave
cmp
scas
inc
movsb
cmp
mov
lahf
nop
fcomps
in
cltd
mov
fildl
push
daa
inc
bound
mov
xorl
adc
xchg
fists
das
and
push
pusha
cmp
cmpsb
xchg
fstpt
push
stos
xor
ds
pop
aad
cmpsl
pop
mov
shrb
sbb
fistpl
shll
lret
js
jmp
xor
xchg
xor
mov
push
or
mov
mov
push
and
or
dec
out
loop
inc
mov
das
cltd
or
scas
xchg
loop
pop
rorb
or
dec
repnz
data16
pop
add
mov
fldenv
out
adc
outsl
vorps
sbb
pushf
out
jg
aad
mov
sar
je
int3
mov
push
jmp
sub
pop
xlat
cmp
xchg
pushf
jecxz
movsb
sub
mov
std
clc
ror
xor
add
pop
or
add
xor
repnz
xlat
dec
das
or
pop
xchg
decl
mov
loopne
sbb
cmpsb
or
xor
or
sub
lock
and
call
fldt
out
dec
xlat
imul
das
rcrb
leave
pusha
mov
fldt
xchg
clc
xchg
int
add
shll
and
aam
mov
and
and
out
pop
inc
push
xrelease
mov
push
and
jle
or
outsb
adc
leave
mov
fbstp
add
fadds
dec
pop
shll
subb
hlt
sub
xchg
inc
xchg
xor
inc
and
or
outsb
loope
and
iret
fadds
xor
and
sub
mov
mov
push
test
jo
cli
add
or
xlat
mov
outsb
mov
and
stos
psrad
out
sbb
and
add
adc
jnp
into
out
rolb
sub
add
sbb
cmp
and
lcall
mov
das
adc
inc
mov
enter
xlat
and
mov
insl
cld
push
push
test
fiadds
hlt
dec
nop
imul
mov
mov
arpl
mov
cmp
and
popf
or
adc
mov
mov
stos
daa
lods
jg
stc
mov
mov
les
jge
add
ss
mov
pushf
out
and
nop
inc
rcr
jle
jg
mov
mov
fmuls
stc
cmp
or
jae
popf
jge
mov
in
fcomi
lahf
add
pop
cmp
inc
shr
out
jbe
outsl
or
dec
outsl
dec
or
leave
add
les
inc
or
cmp
ror
ss
adc
negl
jle
inc
cltd
ja
popf
adc
sarl
lahf
jp
filds
cmp
div
cs
movsb
add
add
or
cwtl
stc
xlat
mov
jg
scas
movsb
sub
push
mov
sub
call
jae
sbb
inc
mov
push
sub
sbb
dec
jbe
push
shll
jb
flds
xor
jecxz
repnz
fcmovne
and
push
cmpsb
or
notrack
push
mov
pop
pop
adc
and
sub
cs
fdivs
outsb
xlat
add
je
push
sub
push
lds
insb
sarb
xor
or
daa
outsl
test
test
ss
sub
xchg
call
mov
into
pop
imul
or
xor
jg
jb
popf
pop
mov
roll
adc
lock
hlt
inc
std
inc
pusha
pop
mov
add
jge
cli
mov
jbe
adc
jl
xchg
mov
push
sbb
mov
hlt
repnz
jecxz
test
flds
cli
cmp
sbb
popa
xchg
xor
push
ljmp
push
clc
adc
call
xor
add
or
jp
mov
cmpsl
jnp
or
test
pop
jge
icebp
adc
or
fldt
in
sub
loopne
call
int3
dec
out
xchg
nop
xor
xchg
fisttpl
jo
inc
sbb
jp
jae
or
arpl
movsb
sbb
fstpl
inc
push
dec
push
cmc
add
or
mov
cmpsb
out
cmp
out
adc
jns
adc
mov
in
push
and
lods
xchg
lods
inc
hlt
mov
adc
jmp
loopne
adc
ret
pop
or
jp
push
xchg
push
adcl
and
mov
ret
shlb
jbe
nop
icebp
mov
and
push
fcoms
mov
mulb
adc
cmp
jmp
xlat
cwtl
inc
fcoms
scas
mov
aam
jmp
pop
aas
sbbl
into
jp
jb
cmp
push
xorl
add
mov
leave
outsl
ret
les
call
loopne
jg
out
dec
jns
mov
fcomps
pushf
sbb
scas
xor
test
mov
test
cltd
test
je
mov
add
decb
sub
lock
aaa
in
and
xchg
and
sahf
xor
repz
xchg
sub
push
mov
add
vpcmpgtb
into
aad
jno
sahf
lret
xchg
dec
mov
push
or
aas
inc
mov
add
shrb
flds
jbe
movsl
jb
jae
mov
lcall
push
inc
mov
jecxz
mov
xor
sub
mov
out
and
pop
insl
enter
inc
addr16
outsb
mov
xchg
and
ja
mov
xor
cs
loope
mov
sub
or
xchg
lret
stos
jmp
jp
in
cmpsb
adc
pop
xor
out
pop
xchg
push
nop
inc
setg
jb
mov
int3
mov
or
mov
movsb
and
andb
push
test
insb
cs
cmpsl
lcall
pop
push
out
sbb
cwtl
cmp
ret
push
or
mov
push
popa
mov
jbe
aam
add
push
xchg
sbbb
cld
jns,pt
mov
mov
xchg
pushf
insb
insb
xor
mov
sub
add
xor
mov
orb
and
dec
enter
jp
lods
dec
or
jge
aad
xchg
sbb
bnd
enter
ret
adc
shlb
je
add
dec
js
dec
out
cmp
inc
arpl
rep
cltd
cmpsl
rorb
repz
jns
mov
std
in
add
mov
pop
pop
xor
dec
out
mov
movsl
dec
sarl
repnz
and
clc
pop
enter
mov
push
or
mov
dec
or
shll
bound
pop
or
adc
popa
mov
hlt
cmc
cmpsb
add
ds
lea
xchg
adc
push
sbb
sub
adc
jnp
cmpsb
xchg
and
jmp
jmp
push
sbb
push
shlb
mull
arpl
and
inc
pop
xlat
lret
sub
jae
xchg
insl
stc
sahf
mov
fcomps
mov
popf
lods
outsl
xor
jbe
test
in
int3
movsb
cmc
imul
adc
ljmp
aad
pop
mov
popf
mov
lods
outsl
lret
outsl
test
inc
nop
vmovsd
inc
xchg
adc
xor
cmp
mov
mov
push
out
xlat
mov
into
sti
fs
mov
aad
push
rclb
sub
sbb
xchg
push
push
sbb
les
xchg
test
fldcw
popa
mov
nop
addl
test
pop
popf
or
push
xor
mov
pop
or
movsb
aam
nop
pop
sub
fcoml
jnp
sbb
outsl
in
adc
stos
fdiv
mov
jg
dec
mov
loope
popf
lret
mov
mov
push
adc
fadd
jmp
fwait
sbb
lds
dec
pushf
test
and
bound
add
jl
mov
jecxz
rorb
mov
fcompl
pop
sub
push
cmp
nop
push
xchg
jnp
movsb
pop
pop
mov
dec
xchg
cs
adc
xor
leave
outsl
adc
outsl
js
iret
mov
rcrl
xor
cmp
jo
cmpl
jno
or
jge
inc
ss
lcall
mov
xor
stos
pop
pop
xor
dec
mov
dec
push
adc
cld
and
fldcw
add
cltd
fadd
das
pusha
stos
sbb
cmp
jmp
outsb
inc
lcall
nop
push
jae
ds
xchg
and
lock
gs
pop
xor
dec
enter
cltd
push
fstps
test
xor
cmp
fwait
pop
push
cli
sbb
loopne
jne
repz
add
sbb
jns
cmp
clc
test
popf
sahf
outsl
adc
cmp
lods
xchg
push
shrb
ret
test
nop
pop
and
pushf
cmp
mov
inc
leave
dec
ds
push
inc
stc
stos
sub
cmp
movsb
or
push
lcall
dec
cld
push
xchg
out
xchg
ljmp
push
inc
fidivl
dec
mov
iret
push
mov
fwait
jge
add
adc
xchg
pusha
data16
cltd
sub
jno
cmp
je
aam
movsb
pop
movsl
pop
insl
stos
xchg
test
dec
sub
in
mov
sub
cmp
shll
and
loope
enter
ljmp
int
rcrb
std
popf
and
inc
or
pop
lods
cmc
aas
or
movsb
sahf
dec
mov
fnstcw
mov
cs
stc
das
shll
lret
loop
notl
xor
shll
repnz
jmp
cmp
and
lock
lret
lsl
mov
daa
ret
jbe
and
or
xchg
lret
in
mov
or
pop
adc
ss
lret
not
mov
scas
movsb
push
loop
sbbl
add
ret
out
inc
xchg
sub
pop
lret
sub
test
mov
leave
stc
gs
js
pop
fwait
pop
sub
popf
in
outsb
icebp
or
loop
jbe
addl
and
jg
mov
or
mov
dec
mov
cmpsb
fistpl
pop
idivl
or
push
and
es
mov
or
into
xor
sbb
inc
and
pushf
fwait
adc
rcrb
seto
decb
fcmovb
or
std
pushf
sar
pcmpeqb
jmp
ficoml
sarl
cltd
aaa
movnti
jae
pop
xor
sub
iret
cmp
sahf
or
pushf
rorl
stc
jns
aam
mov
dec
sarl
xor
ret
pop
or
dec
jbe
cmp
dec
cmp
popa
pop
inc
pop
arpl
mov
push
xchg
stos
aam
cltd
pop
xor
movb
jg
in
add
sub
fcmovnb
test
jns
mov
pop
mov
pop
in
sbb
out
rol
imulb
and
lock
pop
sbb
stos
loop
sti
jg
inc
fwait
jo
sub
repnz
push
push
lock
inc
call
or
in
sub
cmpsb
mov
loop
cmp
fldenv
inc
icebp
push
adcb
xor
xlat
push
cwtl
insl
rorb
insl
mov
xchg
pop
rcrl
stc
in
shrb
shlb
lods
xor
sbb
or
inc
int
movsb
pop
jb
ds
ljmp
sub
jg
faddp
cmp
std
lods
enter
loopne
rcll
sub
incb
adc
jbe
inc
cmp
push
jno
sbb
inc
add
lea
call
sub
arpl
push
hlt
lea
push
xchg
jmp
test
mov
xchg
movsl
pop
mov
add
mov
iret
test
cmp
and
repz
loopne
jae
imul
jp
xor
inc
imul
add
sub
adcb
and
insl
cmpsl
cld
aad
xchg
mov
xchg
adc
stc
test
aad
sub
add
xchg
mov
add
push
adc
fisttpl
dec
andl
push
mov
jg
xlat
or
sarb
fsts
sti
jp
out
fdivl
mov
out
mov
xor
pop
cmp
mov
mov
incb
in
pop
push
ror
fwait
das
cmp
loope
jp
cli
cld
xchg
ficoml
mov
mov
scas
in
setp
and
sahf
mov
cli
repz
ret
cs
inc
sub
xchg
inc
add
test
in
lcall
inc
ja
hlt
jecxz
fimull
in
dec
push
jle
hlt
fnstsw
ret
xor
dec
sub
rorb
push
add
push
out
push
xlat
add
mov
jne,pt
or
bound
lea
call
add
lcall
js
outsb
mov
movsl
pushf
or
sub
xchg
incl
xchg
adc
fnstsw
mov
xchg
repnz
imull
iret
lds
sbb
call
or
out
mov
push
das
mov
sti
jae
mov
jp
stc
sub
mov
cli
adcl
iret
lret
cmc
mov
or
mov
icebp
adc
jle
imul
inc
popa
inc
sbb
pop
dec
mov
fiaddl
push
lods
jmp
test
rorb
test
dec
xor
in
pop
outsl
addb
jae
fbld
xor
cwtl
jo
in
inc
cmp
aam
push
jmp
ja
and
pop
daa
sub
clc
mov
test
stos
sub
inc
push
ret
mov
lcall
ret
mov
bnd
out
sbb
jmp
nop
in
pushf
cmp
jno
ret
inc
sub
sub
loop
xlat
aas
cld
mov
lds
jecxz
cli
fs
mov
jecxz
dec
mov
sub
lahf
mov
imul
cmp
sarb
adc
ja
jl
rcr
jb
push
mov
movsb
xlat
call
mov
fstpt
test
lret
push
insl
clc
inc
inc
test
lahf
fwait
jmp
in
xchg
cmp
adc
mov
sbb
xchg
fcomip
jnp
xor
mov
mov
push
mov
insl
lods
lds
aam
or
mov
pop
lods
lret
add
mov
scas
sub
cmp
lcall
or
pop
xchg
in
dec
enter
sahf
pop
lret
jg
in
inc
orl
dec
notb
sub
pop
adcb
jbe
mov
xor
push
fldl
out
ljmp
sbb
lcall
inc
cmp
inc
rcl
sub
shll
sti
loop
cmp
in
shrb
push
lahf
fdivrs
sbb
cmp
cltd
aam
mov
imul
fsts
push
leave
jae
out
js
jb
cltd
mov
fldt
adc
ja
add
push
aaa
pop
nop
inc
and
lret
jnp
aad
inc
push
jmp
push
xor
xchg
enter
cwtl
adc
pop
push
cltd
hlt
mov
nop
inc
stos
mov
pop
je
das
js
cli
xchg
inc
je
ret
push
enter
aaa
or
ficoml
lea
xchg
dec
imul
mov
in
push
inc
mov
cld
xor
imul
imul
sbb
sti
cmp
and
clc
xorb
scas
icebp
mov
je
daa
popa
out
mov
jnp
out
inc
rolb
stc
fnstsw
punpcklwd
ret
push
repnz
xor
xor
aas
cmp
lods
ljmp
jbe
mov
std
sahf
sbb
sub
pop
cmp
inc
fdivl
cmp
sbb
push
pusha
pop
mov
sbb
pushf
cmp
in
daa
repnz
mov
je,pn
cmp
sbb
lret
jmp
mov
mov
cltd
call
xchg
ljmp
int3
push
inc
mov
jecxz
lret
inc
cli
xchg
cmp
push
cmp
insl
idivb
dec
and
push
adc
rcrl
loopne
sub
call
repz
int3
push
sub
sub
jns
jecxz
sub
arpl
jo
aas
aam
movsb
jg
repz
jmp
mov
fwait
nop
sub
les
gs
mov
les
add
outsl
jl
add
push
sub
push
js
sub
pushf
pop
divb
inc
xchg
data16
pop
xor
mov
mov
add
fadd
jno
outsl
and
sub
xor
pop
mov
mov
ja
pop
cmp
adc
int3
pop
scas
push
aam
enter
repnz
adc
in
nop
ret
jmp
mov
dec
sarb
inc
mov
dec
gs
sub
mov
lahf
pop
or
test
decb
mov
jmp
dec
loop
add
pop
inc
rcrl
iret
insb
mov
inc
test
fcmovnbe
push
scas
repnz
ficoml
sbb
sbb
call
jl
cmp
cmp
inc
arpl
mov
push
out
nop
mov
jle
clc
xor
jmp
xor
mov
mov
adc
adc
testl
andb
rorb
jo
xchg
repz
mov
adc
std
lret
sti
jne
mov
test
ja
bound
push
das
dec
shl
jne
pop
jb
test
add
fstl
test
gs
push
lods
repnz
or
pop
pop
cwtl
sbb
cwtl
inc
mov
shrb
mov
or
push
ss
repnz
in
sub
ret
jle
nopl
dec
mov
imul
mov
out
inc
mov
call
dec
jp
clc
fwait
mov
cmp
sub
or
repz
add
data16
cmp
ficoml
inc
xor
mov
in
cmp
fcomi
icebp
mov
mov
scas
push
push
test
add
pop
test
mov
adc
call
je
inc
icebp
iret
jl
cmp
ret
mov
sti
xchg
xchg
adc
cmc
sbbl
jne
insb
inc
loope
pop
ja
inc
push
mov
sub
push
arpl
fcoml
xchg
das
mov
sbbb
out
xchg
push
mov
nop
aad
aam
ds
cmpl
adc
stc
ja
mov
inc
mov
jb
pop
test
test
cmp
bound
push
scas
movsb
fldt
sbb
cmp
das
andb
adcl
cwtl
push
cmpb
push
or
mov
popa
andl
add
stos
stos
adc
mov
data16
or
sub
aas
mov
cmpb
and
add
push
loop
inc
or
sub
xor
jb
loopne
xchg
loop
dec
push
fisubrl
and
call
sub
push
repz
int3
movsb
or
cwtl
inc
mov
movsl
jns
pop
inc
les
xchg
mov
sub
out
int
outsl
pusha
xchg
xor
inc
push
push
ljmp
loop
pop
mov
push
or
dec
pop
jns
dec
mov
xor
loop
int3
test
nop
sub
cmp
xlat
scas
aam
jl
les
add
out
loop
dec
int3
add
add
add
cmp
rcll
bound
lcall
and
repnz
jle
or
jns
adc
hlt
bswap
push
popa
clc
sub
pusha
jnp
cmp
test
inc
and
in
cmp
fs
cmpsl
jl
add
push
insl
jae
iret
pop
lea
bswap
enter
or
cmp
xchg
cld
fdiv
mov
pop
pusha
out
dec
sub
inc
or
jg
xchg
test
test
jne
add
rolb
stos
ficomps
push
repz
popa
ret
iret
pop
cld
loope
aad
sub
daa
xchg
or
push
arpl
pop
pop
xchg
hlt
and
shlb
sbb
in
or
stos
xor
adc
xchg
sbb
dec
test
mov
mov
sbb
sbbb
xchg
subl
mov
fs
lods
pushl
out
cmc
fidivl
cmc
mov
xchg
addr16
push
sbbb
fiaddl
xor
or
mov
fisttps
addl
push
mov
ss
xor
pop
mov
pusha
mov
bswap
pop
orb
mov
lcall
and
shll
loopne
lcall
cmp
icebp
mov
je
daa
std
xchg
sub
movl
and
sbb
xor
pop
pop
movsl
or
idivb
hlt
in
push
cmp
ror
rcrb
xor
sbb
insl
mov
leave
pusha
mov
jbe
lcall
xchg
rclb
ljmp
jne
mov
insl
dec
sbb
cmp
test
stos
sbb
dec
pop
call
push
ret
sbb
fnsave
and
mov
mov
in
les
mov
insl
shrl
mov
lahf
pop
xor
lret
pop
xor
popl
mov
xor
insl
data16
stos
mov
aam
mov
dec
stc
lods
movsb
jo
test
fidivrs
cmpsl
aas
out
rolb
iret
pop
sbb
loopne
pop
push
loopne
subb
lds
cmp
jg
daa
jbe
push
pop
or
push
sub
push
pop
jp
shlb
jne
jo
push
or
push
or
or
in
cvttps2pi
push
div
push
aam
push
insb
xor
nop
and
pusha
fsubrs
fs
outsb
scas
popf
cmpsb
lahf
dec
sub
and
hlt
cmpsb
repnz
adc
and
xchg
push
pop
push
out
jne
cmp
sbb
push
pop
cmp
cltd
loopne
mov
sub
addr16
sub
ficomps
lock
push
out
rcl
arpl
xchg
inc
rcll
clc
push
lret
push
insb
sub
dec
aad
push
mov
push
test
divb
dec
add
push
push
rcll
repnz
adc
movsl
mov
cmpl
fst
inc
lock
into
cs
jp
loop
imul
and
iret
xlat
shl
clc
mov
add
into
add
lea
adc
sbb
std
leave
inc
mov
out
push
aad
xchg
ja
clc
mov
ret
lcall
adc
sub
jmp
mov
stos
test
jl
push
jno
jmp
mov
mov
rorb
inc
test
lea
dec
lods
into
and
or
rclb
sti
adc
cmp
int3
sbb
jmp
xor
aaa
dec
ja
fucomip
int3
xchg
out
idivl
pop
inc
xchg
movsl
test
and
cwtl
repnz
clc
rcrb
testl
push
std
pusha
lret
xlat
adc
orl
dec
cltd
sub
inc
jbe
sti
in
jg
xor
push
fcmovnb
in
aad
icebp
imul
int3
leave
test
adc
jge
add
push
iret
call
mov
negb
fiaddl
adc
lods
pop
inc
les
mov
jae
mov
jl
cmp
or
jle
dec
jmp
roll
mov
sub
mov
push
xchg
xchg
fs
stos
add
xchg
adc
es
sahf
mov
pop
notl
mov
cmp
xchg
xchg
lret
inc
cmp
movsl
inc
test
add
adc
add
sub
pop
jne
xchg
pop
arpl
fcmovu
lret
andb
out
sub
rorb
out
inc
add
mov
call
mov
inc
dec
int3
or
jne
pop
lds
mov
jno
out
outsl
push
add
inc
pop
in
call
push
and
sbb
mov
adc
inc
push
push
sub
mov
sub
or
cmpsb
jne
mov
dec
stc
push
div
mov
or
mov
add
stc
and
loope
js
xor
mov
out
jb
in
outsl
clc
insl
xchg
xor
mov
jp
addl
jno
es
push
lods
xor
fsubs
xor
subb
push
dec
ret
sub
push
fwait
pusha
pop
cmp
lock
dec
into
mov
and
cs
mov
fwait
incl
pop
ds
adc
je
dec
shlb
inc
mov
jge
aad
adcl
xchg
inc
jbe
jbe
shlb
and
push
mov
pop
and
mov
or
cmp
mov
pop
push
imul
adc
mov
or
mov
cmp
add
aad
test
scas
mov
sbb
xchg
inc
loope
jae
shrl
pop
xor
out
cmp
fcompl
popf
hlt
mov
ja
mov
into
or
push
orb
jp
sub
push
clc
jb
aam
cmp
ljmp
mov
jno
cmp
dec
xchg
xchg
sub
xchg
in
jle
cltd
lock
shl
xchg
imul
cmp
lods
cmp
add
push
nop
cmc
pop
fmull
xor
out
subl
pop
mov
stc
rcrl
inc
xchg
cld
jmp
nop
or
rclb
mov
insb
cwtl
push
inc
stos
pusha
and
mov
popf
sbb
in
icebp
jge
mov
and
push
imul
fs
pop
fwait
mov
cli
adc
pusha
cmp
fidivl
into
xor
jo
orl
pop
lahf
and
mov
xchg
dec
in
dec
call
data16
outsb
fidivrl
subl
movsb
pop
movl
mov
push
cmpsb
pushf
inc
in
pushf
adc
in
xchg
xchg
leave
mov
imul
rcrl
lock
dec
push
dec
gs
cmp
and
push
arpl
mov
mov
inc
lock
dec
and
movsb
pop
int
iret
sahf
in
fwait
jbe
ja
dec
imul
call
lret
xor
call
gs
adc
cmp
sub
scas
jnp
jl
imul
les
lcall
jmp
js
dec
into
xchg
jmp
jle
addr16
lods
idiv
fsts
pop
popa
inc
mov
lret
jmp
mov
cwtl
sub
inc
adc
and
leave
mov
imul
ds
adc
arpl
imul
push
mov
out
push
sbb
pushf
cmp
jne
adc
add
test
repz
sub
out
sub
dec
fstl
inc
xor
mov
mov
jmp
vsubsd
inc
sub
adc
cmpb
mov
hlt
xchg
mov
xchg
gs
gs
sbb
int
add
and
cmp
pop
and
ds
or
mov
cmp
xor
lods
movsb
sahf
xchg
xor
in
cmp
repz
pop
push
test
mov
mov
xor
cwtl
inc
das
jne
jmp
mov
jne
lods
cmpsl
xchg
xchg
dec
dec
xor
popa
jmp
cwtl
xchg
push
mov
inc
shlb
stos
icebp
sub
pop
mov
mov
outsl
sbb
jo
mov
pop
adc
daa
mov
cmp
in
jmp
or
push
pop
fimuls
inc
push
out
mov
jae
cmp
dec
mov
jl
xor
xchg
add
ljmp
hlt
sbb
mov
push
push
sub
test
mov
jnp
push
enter
ret
jge
shlb
dec
xor
neg
bound
ljmp
add
push
cmp
mov
xchg
mov
les
negb
sub
out
push
xchg
push
dec
sub
subb
sbb
loopne
mov
out
xor
insb
mov
pusha
sbb
js
and
xlat
clc
adc
repz
int3
xorl
out
or
std
pusha
cli
fisttpl
test
xor
sti
into
shll
ror
push
or
dec
fwait
aaa
adc
testl
cmp
xlat
gs
xor
sarl
mov
loop
and
push
jle
add
sbb
inc
add
out
jl
jnp
movsb
fstpl
imull
xchg
shlb
lods
hlt
aas
sbbb
jb
inc
ret
loop
cmpxchg
pop
mov
push
les
pop
mov
sbb
jne
xchg
dec
test
xor
pop
dec
or
adc
insl
sbb
adc
sub
sub
adc
mov
hlt
xchg
inc
mov
cmpsb
and
mov
inc
loopne
bound
xchg
xchg
mov
mov
add
imul
adc
movsl
add
test
out
sbb
sub
dec
imul
jmp
adc
xchg
cmpsl
nop
or
pusha
imul
mov
mov
adc
ja
enter
pop
rcll
xlat
iret
cmp
mov
push
dec
out
add
jmp
pop
in
jnp
mov
xchg
cmp
jmp
and
in
popa
cltd
jb
leave
add
mov
xor
js
out
scas
pop
pop
mov
push
sbb
clc
test
std
xor
xor
xchg
stos
dec
std
mov
jnp
fimuls
punpckldq
mov
lds
enter
das
repz
aad
arpl
addr16
gs
out
jno
int3
inc
and
pop
mov
cmpsl
inc
push
and
xchg
fidivrs
adc
aad
inc
pop
mov
mov
cmpsb
loop
sub
push
es
mov
lds
adc
bound
inc
lahf
dec
mov
mov
addr16
daa
mov
fldenv
rolb
sub
movsb
insb
enter
fistpll
pop
ror
es
adc
jmp
aaa
popa
xlat
dec
or
nop
std
pop
mov
cmpsb
inc
lods
or
and
lret
dec
pusha
cmpsl
inc
mov
mov
orl
dec
xor
xchg
inc
jns
aam
movsb
sbb
lahf
gs
push
loope
push
aad
mov
arpl
jae
jbe
pop
jbe
cmp
scas
mov
xchg
xor
cmpl
test
xchg
stc
sti
lock
popl
lods
mov
rcll
js
insl
mov
fucomp
cmp
xchg
iret
scas
not
jecxz
cwtl
addl
scas
out
or
imul
and
loop
jne
push
jns
gs
aad
push
test
scas
inc
mov
sub
adc
mov
daa
adc
lret
das
insb
jns
aaa
hlt
stos
js
adc
or
adc
mov
ss
iret
or
adc
sbb
jmp
pop
notb
jle
ret
push
cmp
dec
pop
leave
add
mov
imul
xchg
lret
and
and
lret
pop
or
jp
jno
xor
or
mov
adc
lods
xor
adc
aaa
fisubl
cmp
xor
jbe
fwait
mov
and
mov
dec
into
hlt
push
rcl
inc
sbb
and
xor
adc
mov
push
jmp
ds
pushf
sbb
andb
push
jns
mov
xor
sub
stc
cld
popa
jbe
fucomip
push
iret
xor
fwait
pop
call
add
sub
mov
dec
xchg
pop
call
scas
add
xlat
jl
ja
ljmp
pop
gs
mov
icebp
xor
add
stc
jl
testl
pop
dec
arpl
out
cltd
xchg
or
mov
mov
cltd
addl
pop
adc
int
pop
cmp
punpckhbw
fmul
jmp
outsb
mov
mov
aaa
mov
stos
pop
pop
pop
mov
mov
imul
cmp
mov
clc
lret
je
add
outsb
movsb
ret
nop
into
rcrb
js
xchg
or
xor
sbb
imul
xor
push
lret
mov
mov
dec
xor
jbe,pt
sti
daa
lret
dec
js
adc
je
popf
pop
ret
or
std
ret
sub
imul
ljmp
loopne
nop
push
mov
jle
push
and
add
sarb
pop
fs
push
jb
leave
mov
sub
jbe
shrl
add
pushf
mov
jecxz
cmp
adc
add
pop
adc
out
mov
jb
adc
sbb
outsb
xor
xchg
dec
mov
add
lret
aas
scas
push
inc
insl
repz
add
fldt
jmp
xlat
mov
out
sbbl
lock
push
sbb
adc
xchg
xor
lods
jge
insl
cltd
push
push
stc
sub
push
cmp
jmp
mov
cmc
add
lcall
sbb
jns
lahf
cmp
in
jp
mov
cld
jge
scas
test
mov
subb
or
sbb
out
jmp
mov
sub
mov
loop
loopne
sbb
adc
fisttps
mov
lods
sbb
pop
in
push
adcb
mov
hlt
test
adc
dec
cltd
lods
shll
leave
pop
insl
or
xchg
adc
or
cli
stos
sub
inc
inc
mov
add
push
popa
dec
dec
sti
adc
xchg
scas
mov
mov
pop
call
insb
inc
jbe
push
fildl
shlb
xchg
cmc
pop
fistl
sbb
int
imul
xchg
jbe
outsl
addr16
sahf
in
popf
pop
jecxz
cld
into
mov
jno
push
leave
ds
inc
iret
fs
imul
mov
out
dec
cmp
pop
jg
mov
lods
mov
add
cmp
gs
sti
push
jne
arpl
jle
cli
cmp
int
mov
rcrl
sahf
cmc
js
mov
and
mov
fisttps
or
cmpsl
xor
adc
push
int3
push
mov
adcl
adc
xchg
out
je
push
sbb
cmpsb
add
jle
or
aam
fdivrp
xchg
hlt
lret
les
sub
and
std
cmpl
mov
mov
mov
mov
sbb
adc
shll
daa
jnp
pop
fstp
fldenv
jecxz
cmp
outsb
pop
or
xchg
into
ja
jl
and
jle
sub
movsl
scas
aaa
mov
jno
je
cmp
sub
pop
popf
inc
pop
jnp
mov
call
loopne
ja
add
out
pop
out
cmpsb
aaa
jo
sbb
or
or
push
dec
jecxz
xchg
shlb
roll
shl
fsts
sbb
inc
dec
lds
frstor
cmc
jns
cmp
pop
inc
sub
lea
mov
mov
loop
or
sbb
mov
rclb
lods
xchg
paddd
jb
out
xchg
stc
int3
lret
in
daa
enter
sar
mov
pop
rol
enter
cwtl
or
lahf
pop
ljmp
dec
inc
mov
mov
mov
cmp
mov
inc
xlat
loope
call
add
aam
add
jbe
push
aad
dec
scas
out
adc
push
std
and
bound
ret
int3
add
cmpsl
and
pop
roll
mov
xchg
cmp
das
pop
add
or
jnp
mov
xchg
or
jo
shl
popf
dec
ret
in
roll
adc
mov
cmp
andl
adcb
data16
subl
mov
fst
stos
adc
das
push
jae
adc
xor
mov
aaa
xchg
dec
ss
xchg
push
pop
mov
sbb
push
pop
dec
mov
ret
jle
andb
lcall
and
push
sbb
push
mov
and
xchg
cs
loope
test
sub
testl
outsl
cmp
pop
xlat
in
out
xchg
adc
jmp
mov
push
stos
mov
repnz
outsl
jno
pop
enter
mov
add
dec
shlb
pop
jl
popa
pop
lahf
xor
mov
test
pop
or
ret
sub
in
dec
mov
insl
adc
les
mov
sbb
dec
insb
in
scas
mov
mov
call
dec
and
xorb
mov
cmp
add
dec
jne
mov
subl
xor
cs
jo,pn
adc
scas
clc
jnp
jnp
cmp
push
dec
or
aam
inc
test
fstp
jns
sbb
sub
and
pop
cmpsb
rcrb
or
cmp
jae
nop
mov
adc
xor
sbb
jp
std
imul
sbb
inc
mov
push
mov
xchg
push
test
inc
test
ljmp
jecxz
mov
aas
sbb
xchg
sbb
cltd
scas
jl
mul
sbbl
xlat
rclb
lds
push
xchg
popf
testl
sbb
push
inc
inc
hlt
repz
mov
add
cli
jne
std
push
fildll
lock
add
jge
daa
arpl
aam
adc
and
adc
mov
add
push
dec
loop
and
les
mov
adc
jns
aas
ljmp
popa
sub
outsl
js
or
sbb
or
sbb
mov
cs
adc
push
stc
test
cli
test
jle
out
popf
call
mov
pop
push
add
ja
dec
lret
rorl
inc
push
xlat
sub
and
mov
lods
lds
cmp
rcrb
dec
lret
into
jl
xor
dec
sbb
cli
adc
jae
adc
into
xchg
fildll
and
sub
shrl
frstor
fstpt
mov
dec
sbb
movsl
dec
jmp
sbb
outsl
mov
scas
outsb
lods
sub
dec
jge
inc
es
cmp
cltd
xchg
pushf
outsw
mov
fnstcw
sbb
and
inc
imul
mov
xchg
xchg
or
push
xor
push
sub
outsl
mov
ja
pop
shlb
jbe
or
jb
mov
int3
les
xchg
dec
mov
loope
orb
mov
xchg
mov
imul
push
movsl
out
idivb
mov
das
jnp
imul
sub
push
mov
and
sbb
cli
test
outsl
cwtl
jl
or
lea
pop
testl
fsubrs
cmp
adc
lods
add
mov
pop
or
lret
jae
mov
enter
pop
jg
jmp
into
imul
sbb
rolb
pop
ss
inc
jge
xchg
ds
test
push
or
outsb
mov
or
mov
jle
push
cmp
lcall
scas
cmpl
mov
or
ljmp
into
loopne
mov
jg
scas
mov
aas
pushw
inc
inc
int3
inc
mov
push
and
pop
dec
inc
rcr
cmpsb
ljmp
test
sti
outsl
repnz
push
dec
jnp
in
bound
lcall
rcrb
daa
icebp
hlt
jb
cmc
pop
xchg
pop
mov
out
xlat
lods
outsb
xor
roll
fildll
rcl
cmp
mov
adcb
xchg
jns
mov
inc
and
js
mov
ljmp
add
int
xchg
ja
push
negl
mov
out
inc
mov
lods
sbb
dec
mov
pushl
xorb
addr16
cmp
pop
mov
nop
or
lods
jo
jge
in
dec
jno
mov
hlt
xchg
hlt
scas
push
fs
mov
enter
data16
sbb
jecxz
mov
dec
mov
pop
xor
inc
call
jecxz
mov
jb
pop
out
lret
shll
cli
lods
xlat
std
dec
aam
cmpsb
fwait
push
push
aaa
int
add
gs
movsl
xor
jmp
push
hlt
dec
decl
out
push
jl
and
push
xchg
es
xlat
leave
test
nop
push
add
jo
add
iret
push
sarb
push
jns
pop
sub
test
adc
aas
xchg
jo
sbb
and
cmp
add
nop
dec
test
pop
add
push
xchg
cmp
test
shll
lret
mov
iret
hlt
testl
flds
jl
or
pop
push
sbb
sbb
adc
mov
lret
arpl
dec
fs
xchg
push
mov
inc
mov
xor
push
pop
mov
cmp
mov
pop
and
add
xor
xlat
dec
pusha
loop
or
fmul
insb
mov
fdivrs
adc
loope
aad
imul
add
outsb
mov
mov
pop
adc
outsl
mov
leave
push
inc
lock
dec
imul
sarl
adc
push
imul
xchg
add
imul
mov
fnstsw
test
pop
pop
mov
xchg
outsl
and
cmc
add
sub
xchg
xchg
pop
inc
push
or
xchg
movsl
push
pop
adc
in
sub
fwait
mov
enter
or
add
clc
or
push
mov
data16
je
inc
xor
dec
lret
xor
sbb
xor
ja
push
stos
call
sub
in
sbb
sbb
aaa
push
pop
leave
aad
jmp
sbb
cs
sbb
test
mov
push
ficoml
nop
mov
imul
cmp
adc
dec
mov
or
xchg
dec
mov
lds
ljmp
xchg
imul
mov
shlb
mov
ss
mov
inc
enter
mov
sbb
jge
jo
pop
adc
fdiv
imul
mov
fdivr
lret
add
mov
adc
and
fstps
shl
inc
xchg
push
aam
mov
add
mov
mov
xchg
push
gs
xor
notb
pop
mov
dec
push
test
cwtl
nop
dec
pop
pop
sbb
insb
cmp
stc
mov
jnp
pop
fidivrl
stos
out
lods
mov
addl
subb
insl
mov
sbb
inc
stos
stc
jmp
pop
dec
xor
scas
dec
stc
xor
push
or
dec
mov
stc
mov
icebp
add
lret
mov
adc
fsubl
leave
cmp
jge
das
jae
das
rcr
or
sub
out
mov
add
sbb
sarb
enter
stos
xchg
adcb
movsb
lret
adc
sub
je
loopne
mov
jge
movsb
dec
sub
scas
mov
inc
insl
clc
repnz
sbb
das
sbb
xchg
movsl
push
xor
inc
ficoml
xlat
cld
and
push
xchg
mov
or
mov
inc
pop
stos
adc
lock
nop
cmp
mov
sub
add
dec
movsl
and
adc
or
xor
ret
add
push
push
cmpsb
adc
push
ret
popf
mov
jns
cmp
pop
shl
incl
lods
popa
jno
ja
daa
fldt
addl
out
mov
ret
mov
clc
pop
cmp
push
imul
mov
dec
roll
jp
sti
stos
xchg
adc
mov
stos
repnz
cmpsl
cltd
stc
sbb
test
gs
in
cli
push
std
adc
insl
xchg
enter
fstl
fiaddl
pop
jl
iret
aad
sti
xor
nop
fld
pusha
adcl
fdivs
lds
jb
cwtl
sahf
stos
push
jno
out
mov
adc
mov
dec
ret
pop
lcall
push
pop
dec
into
pushf
jge
pusha
lret
out
enter
scas
outsl
loop
sub
mov
lret
cmc
aam
pushf
int3
mov
cmp
pop
sbb
pushf
or
testl
pop
fisttpll
or
sub
stos
inc
cmp
stos
mov
sbb
dec
popa
jle
and
mov
xlat
xor
dec
jo
sub
sbbb
adc
stos
loop
dec
adc
lods
push
or
lahf
mov
mov
outsl
mov
jns
jecxz
xor
or
add
or
cmc
inc
inc
sub
jbe
inc
ret
mov
sub
cmp
inc
xor
lahf
jp
insl
or
out
mov
jbe
push
xchg
ja
jne
sub
pop
add
shrb
lret
xor
pusha
aas
mov
mov
mov
int
mov
arpl
test
jns
jne
add
xor
add
icebp
cmp
adc
cmp
out
ljmp
insl
int3
inc
lret
push
dec
aas
testb
dec
xchg
loope
clc
or
xchg
xchg
and
xchg
jmp
xlat
enter
jae
rolb
rolb
stos
shll
lahf
jnp
inc
push
cmp
les
inc
jb
or
idivl
cli
dec
pushf
dec
dec
dec
sbb
xchg
aaa
push
cmp
test
imul
xor
arpl
adc
fdivr
sti
inc
ds
inc
mov
orb
mov
in
sti
xchg
test
lods
clc
mov
jb
arpl
out
push
sub
mov
pusha
mov
cmova
notb
movsb
dec
pop
or
xchg
sbb
and
ret
push
mov
int
stc
ret
inc
shll
je
lods
loope
sub
lret
push
add
stos
sub
inc
lret
out
insl
pop
or
clc
mov
das
test
aam
cltd
adc
mov
dec
push
jb
loopne
stc
xor
fstcw
lret
call
or
out
sti
jge
push
loopne
pushf
xlat
ljmp
cmpsb
mov
cmp
cmc
dec
fldt
test
cltd
ljmp
test
pop
punpckhdq
adc
jp
inc
repnz
push
cmpb
push
jne
pop
push
xor
add
sub
jg
movsl
mov
in
aam
jne
jne
or
adc
add
dec
xor
sub
and
add
arpl
fs
insl
out
test
xchg
xor
add
xor
daa
mov
lcall
mov
add
and
mov
fmulp
sub
push
add
mov
add
sub
in
je
xor
jbe
jl
add
xchg
xor
push
cmc
lret
arpl
xchg
inc
mov
mov
popf
jmp
sub
cmp
divl
pop
outsb
and
push
mov
repnz
cmp
mov
and
pop
jbe
inc
sti
int
arpl
das
jp
jg
mov
cmp
punpckhwd
mov
rolb
lods
repnz
sub
mov
push
repnz
jo
xchg
pop
mov
lcall
and
dec
inc
and
nop
out
in
mov
pop
cld
iret
in
pop
adc
jecxz
cmp
mov
inc
jb
jne
sbb
cmp
ss
push
push
push
es
adc
cwtl
dec
subb
bound
xor
popa
pop
mov
cs
sub
or
ja
pop
imul
jno
cmp
add
enter
lea
fwait
leave
mov
scas
ja
cltd
insl
or
and
das
sub
repz
sub
ret
xchg
pop
xchg
lds
pop
pushf
in
push
jle
ss
cmc
pop
jbe
pop
mov
push
jne
cwtl
adc
adc
inc
repnz
aad
out
aad
inc
xor
jbe
lret
mov
mov
lret
aam
jo
cmp
dec
inc
or
fstps
xlat
mov
insl
or
xor
inc
das
loop
add
pop
out
mull
out
mov
pop
xor
cs
sub
cmp
mov
push
and
sub
add
imul
jae
ljmp
es
cmp
jg
jmp
pop
dec
loope
jns
pop
push
sahf
les
stos
test
shll
or
aas
and
test
fstpt
xor
or
int
push
push
cmpsl
jp
mov
xchg
out
xor
mov
or
in
movsl
jns
in
jmp
out
sub
clc
xor
sti
and
pop
jecxz
mov
imul
out
sub
mov
ljmp
in
sbb
sub
les
inc
call
sar
fsubrl
loop
add
fwait
imul
out
ja
push
mov
pop
out
and
mov
sbb
leave
repz
roll
jl
and
test
xchg
inc
ljmp
fisubl
incl
dec
mov
push
insl
ja
add
cld
out
xchg
out
pop
out
push
cmp
lahf
loopne
or
xor
mov
cmp
loopne
in
mov
jo
pop
pop
pop
sbb
pop
or
addr16
push
jno
push
cmpsl
scas
scas
pusha
mov
jl
xor
roll
out
out
mov
int3
push
push
and
fidivl
daa
mov
shrl
add
in
push
inc
iret
dec
or
sub
lret
jb
aad
shrl
or
xor
iret
iret
sarb
xchg
test
movsb
aad
dec
popf
mov
scas
in
push
dec
test
jmp
jp
fs
mov
imul
jg
dec
and
pop
invd
pop
out
mov
popa
sbb
out
in
jne
ljmp
stc
repnz
xlat
test
lret
adc
aad
jns
ljmp
and
cs
in
pop
lods
xorl
in
fstpl
les
sbb
call
stc
aam
imul
pop
pop
aaa
call
int3
adcl
cmp
mov
pop
mov
jnp
clc
inc
rcl
pop
loop
mov
pop
push
push
lret
inc
iret
std
testb
jns
xor
mov
loope
ret
pop
dec
or
or
inc
dec
pop
mov
adc
and
inc
jno
cmc
lods
sbb
fildl
inc
sub
mov
iret
cmpsl
popa
jecxz
mov
pop
jno
jne
std
mov
pop
xor
test
stos
jae,pn
arpl
sub
scas
push
mov
repz
dec
add
sub
sbb
mov
or
jmp
insw
adcb
out
adc
enter
mov
fbstp
ja
add
sarb
pop
xor
sub
out
aas
sbb
addl
push
ss
popa
adc
xor
mov
cs
and
jae
rcrl
and
jo
cmp
cmp
std
xor
or
aaa
sbb
bound
stos
loope
cmp
inc
mov
mov
lretw
push
mov
push
fs
ret
mov
dec
and
and
xchg
and
sti
xchg
inc
fstpl
in
imul
mov
repnz
push
mov
and
jl
or
xor
clc
addr16
lock
int3
and
fiadds
xchg
or
cmp
loop
clc
mov
or
add
dec
bound
cld
push
out
mov
sahf
and
push
jns
lcall
pop
imul
sbb
rol
and
std
push
mov
inc
push
scas
dec
neg
mov
push
out
pushf
xchg
xor
gs
mov
jg
mov
ss
fs
mulps
mov
insl
xor
les
add
inc
leave
mov
cmp
dec
or
and
mov
inc
mov
rcrl
in
lcall
pop
lock
mov
jns
mov
sub
sbb
jle
pop
lret
mov
mov
stos
fistps
ja
jle
and
inc
andl
mov
xor
dec
xchg
pop
jmp
dec
lock
nop
imul
jge
and
add
fisttps
rcll
gs
or
rclb
rorl
or
sub
jp
inc
insb
lods
decb
mov
cmp
mov
cmp
and
pop
fldt
mov
and
fwait
scas
out
dec
jge
sub
sub
stos
imul
lods
cli
adc
iret
mov
add
shll
push
sbb
icebp
push
inc
rdpmc
inc
stc
cltd
das
rcrb
fwait
add
imul
fstpl
dec
push
repz
pop
push
dec
hlt
jno
into
mov
insl
push
in
in
andb
jbe
mov
dec
or
dec
popf
jl
adc
js
sub
aas
lock
aad
cmp
fdivs
je
pop
mov
jmp
push
hlt
cmpsl
xchg
mov
in
std
sub
imul
or
cs
lret
aam
cld
test
cmp
or
mov
add
lds
xor
add
mov
je
loopne
mov
shrl
mov
mov
push
mov
push
sahf
dec
push
cmp
leave
jb
mov
scas
sti
mov
popa
repz
loopne
ja
pop
ret
lret
mov
inc
cmpsb
js
lret
inc
dec
jg
sbb
jge
mov
clc
dec
mov
jo
lret
xchg
fs
inc
jle
test
rolb
imul
pop
mov
cmp
jne
xor
aas
pop
xchg
pushf
cli
sub
cmp
push
repnz
fistl
sub
arpl
addl
fildll
cmc
adc
imul
xorb
mov
mov
push
fs
mov
loop
shlb
cli
and
mov
daa
in
std
mov
and
cld
addl
or
in
jae
movsb
fidivs
leave
lds
and
popa
adc
pushf
in
loop
out
mov
js
xor
dec
adc
shlb
int
movsl
sbb
stos
hlt
aad
sbb
adc
lcall
iret
or
cmpsl
cs
fistps
aas
jns
add
dec
mov
addl
stos
dec
mov
fsubrl
add
lods
add
sbb
incb
popf
out
cltd
sub
dec
push
sti
icebp
mov
lcall
inc
pop
imul
ljmp
push
loopne
sti
jg
adc
sbb
mov
je
loope
jg
js
test
xor
sbb
lods
xor
mov
movb
sub
xchg
adc
xor
pushf
push
add
scas
out
mov
mov
pop
sbb
or
enter
lea
push
fisubrl
inc
jmp
and
push
mov
andps
cwtl
cmp
imul
loopne
in
stos
inc
dec
jecxz
adc
jo
mov
popf
add
fadds
mov
stc
and
xchg
leave
inc
fmulp
add
jae
inc
rorl
or
sti
jne
add
outsl
ds
imul
xor
mov
and
in
sar
or
insb
fnstsw
xchg
xor
hlt
xchg
subb
scas
mov
push
int3
ret
jo,pn
mov
pushf
test
scas
sbb
ljmp
xor
clc
fldt
repnz
jmp
xchg
inc
outsb
enter
adc
hlt
mov
repnz
sub
ret
mov
add
mov
lods
bound
or
mov
sbb
int
in
test
in
aaa
xchg
jl
adc
in
in
xor
mov
lods
jp
pop
adc
lds
pushf
xor
das
sahf
mov
hlt
sbb
mov
inc
in
movsl
popa
cmp
scas
push
pusha
push
mov
jnp
rclb
lcall
xchg
cmc
aas
inc
push
adc
fisubs
repz
mov
push
and
pop
adc
dec
jno
cld
rcrl
stc
push
cmp
sub
std
pop
or
sub
imul
in
pop
xorb
loopne
mov
pusha
pop
in
xor
daa
into
jecxz
mov
push
or
pop
mov
mov
insb
sub
ds
jp
lahf
add
shll
add
int3
sub
jnp
mov
push
fildll
jae
mov
mov
sbb
mov
inc
mov
sbb
cmpsl
inc
xor
mov
add
std
fdivrs
mov
das
in
push
jne
or
cltd
xlat
lods
xor
out
test
adc
push
loopne
mov
push
jnp
fidivs
sbb
mov
add
adc
mov
bnd
adc
add
rcll
cmp
in
aas
mov
rolb
xchg
xchg
lret
test
sarb
lahf
mov
dec
xor
fwait
icebp
daa
or
mov
xchg
insb
andl
add
test
stc
adc
nop
aad
loop
xchg
or
inc
aas
pusha
rclb
sbb
mov
mov
push
sbb
jo
lcall
test
fbld
mov
testb
repnz
fdiv
pop
fdivr
fdivs
dec
push
rorl
cmpsl
xchg
add
dec
insb
adc
bound
aas
mov
push
in
mov
cmp
xor
andb
scas
sub
pop
push
fidivrl
jge
sbbb
cmp
push
mov
jnp
cmc
xor
push
mov
inc
nop
pusha
dec
mov
adc
push
test
inc
xchg
adc
xchg
lods
and
dec
xchg
scas
and
lea
leave
or
mov
push
fmul
push
push
mov
or
or
sbb
dec
or
xchg
out
addl
adc
fists
and
xchg
jecxz
idiv
sub
cmovg
or
int3
lods
fsubs
jnp
outsb
lods
inc
inc
aam
jp
mov
sbb
repnz
pop
cmpsb
bound
pop
pop
les
xchg
inc
outsb
lret
push
jb
mov
shlb
mov
jnp
nop
push
js
inc
dec
movsb
mov
xor
testb
popf
mov
mov
mov
jo
cmp
js
push
in
mov
fildll
mov
dec
ret
addr16
jmp
cwtl
pop
out
negl
xchg
stos
data16
addb
loope
pop
aam
pop
sub
add
pushf
xorb
call
inc
sbb
ljmp
push
call
ficoms
push
adc
jecxz
mov
mul
mov
arpl
push
dec
shll
ds
jno
and
inc
push
ficoml
add
pop
mov
dec
loop
inc
inc
loopne
call
sub
xor
ror
loopne
mov
xchg
cmpsl
stc
mul
mov
adc
shrb
sarl
cmp
mov
in
dec
mov
fisttps
sub
bound
in
inc
cmpsl
and
cmp
ja
inc
jne
xor
je
jae
pop
and
stc
add
mov
scas
adc
sbb
std
popa
pop
dec
mov
dec
inc
push
scas
and
adc
mov
lahf
out
inc
dec
sbb
rorb
lods
shll
out
inc
pusha
pop
repz
pop
push
fisubrs
aad
pop
stos
add
iret
inc
js
dec
mov
sbb
std
jnp
jle
in
rcrl
pop
cmc
scas
test
or
sbb
mov
mov
xor
xor
aam
jb
sub
pop
and
xchg
ja
aad
sahf
jns
mov
lods
jno
jmp
xchg
push
pop
repz
out
test
loop
std
cmpsl
cld
das
lret
out
fildl
mov
mov
push
fstpl
test
popa
std
shlb
adc
ds
xchg
add
dec
loop
or
push
rcrl
add
imul
dec
mov
adc
pop
mov
ljmp
je
mov
cmp
insl
xchg
add
pop
xor
xchg
and
sub
out
xor
jecxz
mov
mov
mov
scas
xchg
inc
fidivrs
rol
and
dec
inc
mov
xchg
or
cli
and
mov
xor
jecxz
lret
cmpsb
sub
dec
jae
shll
std
sbb
je
cs
aas
push
ret
and
xor
or
popa
out
fiadds
mov
lea
ret
je
push
mov
and
pop
pop
mov
es
cmp
sub
hlt
sbb
fildll
mov
xchg
lret
add
cld
pop
daa
fidivrs
repz
sbb
mov
lret
push
cmp
xor
mov
xor
xor
sbb
push
call
imul
movsb
jmp
push
ret
mov
addr16
push
mov
jno
cld
xchg
mov
lea
shll
fnsave
les
pop
sbb
sub
fsubl
call
sub
stos
mov
push
mov
push
lock
or
mov
mov
andl
movsb
mov
dec
bnd
adc
and
mov
jno
mov
inc
cld
stos
fucomi
in
cmp
cwtl
adc
stc
pop
lods
inc
sti
sarl
xchg
and
xlat
xor
push
mov
jp
stos
sarl
out
push
std
daa
shrl
add
jl
dec
shll
sub
pop
js
out
out
rcl
fimull
aam
xor
sub
mov
pop
and
pop
out
repnz
mov
jbe
adc
sbb
push
dec
jb
mov
mov
dec
ret
pop
mov
ja
sbb
push
gs
repz
push
sarb
in
mov
and
mov
loope
or
repnz
lcall
repz
decl
das
pop
push
sub
xor
icebp
addb
mov
sbb
mov
das
out
sbb
shl
mov
pop
inc
lcall
faddp
and
in
add
xor
mov
adc
jo
jmp
jle
fs
addr16
loopne
push
add
arpl
and
add
pop
popf
subb
sti
and
xor
push
mov
es
mov
fisttpll
mov
or
and
fcoml
call
daa
out
jno
mov
and
nop
icebp
faddl
cs
cmp
std
mov
adc
in
daa
cmp
cmpsl
adc
pusha
adcb
or
jb
push
xchg
jae
mov
insl
mov
and
dec
scas
dec
push
and
cmc
idivl
cli
stos
in
mov
or
lods
add
pusha
fwait
rclb
or
xchg
sub
pop
sbb
fsubl
inc
sub
dec
stos
cmp
xor
lods
mov
push
inc
jb
sbb
into
sbb
icebp
xor
shlb
into
pop
mov
mov
popa
fwait
cmp
sbb
mov
adc
mov
out
enter
xor
dec
pop
jle
mov
loope
js
nop
stc
add
sub
test
leave
push
pop
scas
cmp
int3
lds
sub
mov
mov
dec
jg
pop
xor
pushf
mov
test
inc
add
xor
adc
mov
mov
jo
xchg
sub
and
fdivs
imul
jge
sub
xchg
test
aam
dec
in
rcrb
test
pop
in
jo
xchg
xchg
cmp
dec
gs
xchg
pushf
loop
loopne
insb
or
or
mov
pusha
cltd
and
sbb
jg
dec
inc
cmp
popf
push
add
cwtl
ljmp
push
sbb
stos
adc
cld
push
jne
imul
or
movsb
mov
inc
mov
mov
out
adc
dec
lods
aam
fdivp
add
jmp
push
insl
outsb
pop
cmp
lods
fcoml
and
or
push
fiadds
stos
cmp
xchg
icebp
xor
je
repz
mov
and
inc
das
and
ss
test
inc
jnp
adc
sbb
shrb
sub
imul
sub
or
mov
sti
cmc
ret
push
scas
dec
repnz
xchg
fwait
cmpsl
jns
out
call
icebp
add
jae
and
xor
adc
jl
adc
mov
or
int
imul
jp
cmp
out
pop
xorl
rcl
das
cmp
add
pop
nop
rcll
adc
fdivrl
pop
popa
in
movsl
adc
pushf
or
movhps
inc
mov
jbe
pushf
popf
add
lcall
ficomps
into
push
mov
push
mov
cmp
fwait
jl
add
mov
ss
lock
into
sub
mov
shll
cltd
fcoml
push
orl
xchg
ja
or
add
fnstenv
jmp
into
shrl
xor
pop
sbb
je
add
gs
dec
push
xchg
or
and
loope
push
jp
inc
test
pop
pop
dec
es
inc
jmp
fwait
add
jbe
shll
mov
shrb
mov
setge
mov
lret
es
jne
xorb
test
jg
mov
std
xchg
cmp
les
shr
pop
rcll
addr16
test
jns
imul
aad
push
and
mov
inc
xchg
sbb
fwait
cmc
gs
dec
pop
jg
pop
fbstp
mov
cmpsb
es
adc
cmc
pop
push
imul
std
mov
mov
out
cli
sahf
rcl
xor
div
pop
mov
push
scas
imul
scas
popf
push
adc
pop
mov
dec
sahf
jg
push
add
in
stos
jbe
xchg
rcrb
xor
jecxz
sub
shll
mov
xor
das
pop
push
dec
cmp
fwait
pop
or
pop
xchg
xchg
jb
or
dec
push
mov
outsl
add
loop
test
sub
jbe
xchg
aam
lods
sbb
adc
jecxz
scas
clc
mov
insb
adc
pop
outsb
cmp
cmpsb
gs
scas
orb
mov
push
mov
aaa
fsubrl
and
mov
stos
sub
xchg
mov
lea
addb
adc
jno
dec
imul
cmpb
clc
jp
mov
lret
add
add
adc
cmpsb
dec
jne
or
out
ret
mov
jne
pop
sarb
fnstenv
fistl
fwait
pusha
push
jne
xchg
rcr
sbb
pusha
pushf
outsb
out
pop
pop
mov
enter
into
pop
xchg
mov
loope
jl
xchg
or
and
insl
stos
jmp
jne
and
sbb
call
or
loopne
sub
gs
push
arpl
push
and
pop
cmp
sub
imul
mov
clc
jb
push
sti
xor
sub
jb
stos
push
jo
lret
enter
int
in
mov
test
mov
in
mov
loop
adc
push
out
or
out
ds
lahf
pop
fs
test
lea
pop
adc
lcall
dec
mov
fwait
hlt
daa
inc
dec
sub
bound
pushf
add
test
pop
cmp
leave
xor
adc
cmp
aaa
fiaddl
push
or
fadd
xacquire
pop
mov
lahf
jnp
jbe
sub
adc
das
into
lea
mov
push
dec
mov
pop
mov
insl
aaa
das
lret
movsl
jl
repnz
dec
or
loopne
sahf
cmpsl
cmp
pop
into
cmp
ret
addr16
jle
sbb
cs
stos
push
jne
repnz
test
mull
mov
adc
test
popf
loope
jbe
inc
shl
rorl
and
mov
daa
mov
inc
sbb
bound
and
add
shll
clc
sbb
popl
or
adcb
mov
push
pop
jne
xor
mov
sti
jge
ret
addl
add
add
inc
mov
mov
cli
dec
lcall
mov
and
add
orl
loope
push
sub
cmp
clc
fisubrs
pop
inc
mov
fcoms
movsb
and
xchg
xor
push
outsl
dec
sbb
pop
add
repz
push
pop
sti
xor
fcomps
mov
repnz
movsl
xor
movsb
mov
xchg
sbb
sub
add
decb
push
fs
int
mov
add
jne
bnd
fwait
push
and
fld
fstpl
dec
adc
scas
xor
les
add
movsb
mov
jg
pop
pop
hlt
jns
add
mov
in
jb
and
cwtl
xchg
xor
test
xchg
fisubrl
jp
repnz
jne
or
movb
test
adc
jb
int
mov
movsb
lods
orl
int
xchg
xor
aam
enter
inc
or
int
imul
sub
dec
mov
das
bound
shll
ja
dec
xchg
add
xchg
dec
clc
ret
cmp
stc
mov
lds
lcall
pushf
daa
adc
sbbb
divb
aad
ss
mov
mov
pop
stc
flds
rorl
jg
add
les
ljmp
pop
mov
mov
cmpsb
nop
fucomi
jbe
and
push
pop
movsb
push
inc
call
add
sub
insb
xor
jo
imul
test
sbb
xor
push
cmpb
stos
or
mov
mov
xchg
or
cmpsb
mov
xor
lret
sub
dec
add
mov
xchg
inc
test
mov
in
outsl
popf
push
cmp
pop
adc
andb
xchg
outsl
std
push
mov
jl
aad
push
push
nop
cs
and
testl
mulb
push
xchg
outsb
xor
lds
icebp
mov
ficomps
inc
mov
scas
jb
mov
scas
js
mov
push
mov
out
mov
inc
and
jb
sub
push
aas
mov
fwait
add
mov
les
lock
pop
jo
xor
std
jne
incb
inc
mov
fdivs
sub
leave
sub
arpl
cld
inc
pop
mov
fisubrl
xchg
mov
push
mov
lods
sbb
call
pop
and
pop
adc
push
cltd
repnz
push
rorl
jnp
push
repnz
mov
mov
stos
cld
jge
repz
inc
pop
out
scas
mov
lods
mov
stos
jbe
divl
adc
sahf
rcr
into
jge
jp
je
divl
sub
sub
mov
loopne
or
mov
xor
stos
jae
nopl
inc
inc
jo
fcompl
stc
mov
pop
jg
mov
fildl
stos
scas
sbb
sub
or
stos
pop
pushf
inc
call
loopne
lcall
pop
sub
xor
fimull
push
dec
cltd
mov
int
insl
add
cld
outsl
arpl
mov
fwait
popl
or
push
adc
sbb
jns
in
into
pop
jno
lds
fwait
jbe
jo
clc
or
push
cwtl
dec
adc
sub
fstps
in
xchg
sub
lods
ss
mov
mov
sahf
mov
insl
fdivrl
xor
dec
xchg
xchg
pop
cmpsl
lret
lret
sub
mov
sub
scas
test
repz
add
mov
test
adc
jae
cwtl
dec
nop
outsl
jo
adc
sahf
aaa
inc
inc
or
jb
adc
inc
into
rclb
inc
rcrl
mov
pop
fisttpll
imul
addl
loop
fstl
enter
sub
add
loope
mov
mov
or
jl
push
xchg
mov
add
scas
out
xorb
mov
xor
cmovno
rorl
pop
cmp
out
jge
cli
mov
iret
sbb
clc
outsl
std
cmp
push
outsb
sbb
lahf
insl
sbb
pop
in
and
mov
leave
push
clc
inc
inc
movsl
inc
push
pop
cmp
cmp
in
and
sahf
mov
int
jo
pop
mov
cmpsb
aaa
and
orl
arpl
fcoml
shl
popa
in
cs
jg
xchg
pop
mov
sbb
xor
loop
and
mov
mov
dec
pop
fistpll
xor
movsb
pop
sbb
sbb
loope
inc
iret
sub
xor
push
pop
loopne
es
dec
sbb
dec
adc
adc
push
addr16
insb
and
pop
mov
insb
or
sbb
jb
lret
outsb
adcl
ds
xchg
fistps
jne
ss
jl
jne
sub
add
jno
stc
out
sbb
lret
inc
pop
aam
das
sbb
loop
push
aad
mull
jl
push
rclb
stos
xchg
dec
ss
mov
ret
push
xchg
imul
ret
mov
inc
jp
adc
adc
cmpsl
jmp
sub
nop
aad
jle
popa
ficoml
sub
jle
out
rcrl
sbb
jg
dec
sbb
push
add
jg
push
xchg
add
sti
adc
out
jo
cs
test
pop
cwtl
push
cld
sbb
imul
fnstsw
popa
mov
sub
mov
cmp
inc
or
hlt
push
mov
les
jne
adc
inc
std
mov
cmp
into
notb
ret
push
fstpt
inc
and
sub
test
insl
or
dec
mov
fidivl
cwtl
and
adc
mov
sbb
aaa
leave
xlat
push
loopne
ja
push
not
scas
inc
jp
daa
out
shl
or
movsb
lods
cld
cmp
popl
out
lea
mov
dec
xor
mov
stos
fs
dec
insl
add
pop
pop
xor
hlt
rclb
cmp
add
sbb
out
add
test
clc
aam
cltd
push
dec
mov
xlat
adc
ret
dec
mov
sbb
sub
das
pop
roll
repz
xor
aas
pop
xorb
out
cmpsl
out
jbe
xor
scas
out
jg
push
js
jne
cmp
xchg
in
mov
mov
dec
clc
iret
inc
shrb
mov
enter
es
scas
jnp
jmp
outsb
mulb
insl
cs
xor
mov
push
and
push
jecxz
xchg
dec
pop
lea
fcmovnb
fistpl
ficompl
popf
mov
das
fmulp
dec
fsubl
jle
lock
xor
xchg
xchg
sbb
fdivrs
xlat
mov
insl
push
or
int3
sub
bound
ds
jecxz,pt
cmp
sahf
movsb
pop
sbb
add
sbb
pop
pop
fisubrs
nop
mov
notb
jb
pop
adc
icebp
or
sti
les
inc
jp
test
ljmp
jmp
mov
mov
les
hlt
cmpsl
mov
scas
mov
into
fstpt
xlat
pop
sub
pop
int3
pop
sub
in
pop
push
jnp
fidivrl
xchg
xorb
or
cmp
sbb
cmpsl
xor
push
fisubrl
jl
dec
jae,pn
sub
mov
mov
ja
mov
adc
adc
adc
lds
dec
gs
cmp
outsl
adc
xchg
and
cltd
gs
dec
sub
fbld
pop
inc
daa
xor
push
mov
sbb
lock
pop
shlb
jg
and
inc
inc
jmp
movsb
shl
call
out
mov
or
sbb
inc
push
lret
push
into
loop
scas
mov
jbe
mov
pop
sub
insb
jg
int
mov
inc
sbb
repz
mov
test
outsl
imul
loopne
mov
scas
scas
xor
mov
cmp
mov
cmc
mov
sub
scas
rcll
xchg
cmpb
mov
sbb
push
dec
and
xchg
seto
pop
add
add
lcall
addl
push
adc
popa
mov
fs
push
xchg
jge,pn
push
mov
frstor
sbb
mov
out
ja
adc
out
and
lahf
and
or
call
lods
stos
lods
call
push
pop
iret
pop
stos
cwtl
mov
pop
mov
dec
mov
stos
pop
sbb
pop
push
inc
push
xor
jg
cltd
sahf
mov
fdivrl
or
push
push
sub
dec
cmp
pushf
mov
shr
sub
and
movsb
ret
cmp
sar
push
in
pop
jae
lret
mov
out
fldl
gs
mov
pop
stos
lods
call
push
cltd
sub
mov
mov
ret
mov
sbb
inc
sub
and
ja
ss
sbb
test
inc
mov
mov
shlb
outsb
dec
nop
cwtl
ja
push
pop
clc
mov
shr
xchg
repnz
out
out
pop
mov
mov
out
mov
mov
jae
cli
or
cmp
int
nop
sub
mov
or
sub
stc
hlt
lods
cmpsl
adc
gs
mov
add
cmp
xor
dec
icebp
adc
arpl
cmpl
push
push
cwtl
push
jmp
jg
fndisi(8087
inc
jns
pop
xchg
adc
dec
adc
jno
mov
or
icebp
mov
decl
xlat
or
jmp
insb
add
cmp
and
dec
xor
cmp
inc
xor
cmp
sub
jno
leave
add
push
mov
loope
rclb
and
insb
test
das
add
outsb
xlat
xor
jl
data16
dec
iret
inc
push
sub
je
mov
sbb
and
and
jo
cli
cmc
and
or
icebp
mov
sub
aaa
stc
jmp
xchg
jno
addr16
dec
in
jl
cmpsb
inc
lods
subb
add
mov
mov
into
daa
jne
sbb
mov
insb
mov
arpl
stos
xchg
sub
loopne
cwtl
aas
daa
inc
mov
xchg
push
xchg
inc
dec
jl
mov
pushf
pop
mov
mov
push
jmp
fadd
xor
push
in
mov
jo
dec
pop
pop
push
cmp
out
es
jg
into
or
hlt
cmc
push
out
imul
dec
and
jae
adc
movsl
pop
mov
pop
and
mov
adc
call
outsb
mov
or
push
clc
mov
call
xchg
mov
xor
or
jo
push
jae
jmp
call
fldcw
in
out
jp
push
orb
sub
xchg
or
loope
dec
out
arpl
mov
jne
push
cmpsl
xchg
imull
xchg
sahf
out
out
test
jge
fcomps
repnz
adc
dec
push
movsl
cmp
aad
loop
ret
or
sub
cmp
in
mov
cmpsb
push
jg
pop
insb
stos
insb
mov
leave
pop
push
mov
push
xchg
pop
push
std
inc
movsb
adc
or
cmp
or
adc
add
mov
test
iret
jae
ss
xor
pop
lret
mov
pusha
aad
dec
xor
mov
adc
dec
int3
ljmp
xchg
roll
leave
lds
push
pop
stos
js
sahf
mov
in
adc
dec
jb
loop
mov
push
orl
or
ja
cmpsb
add
xor
shl
shll
aas
outsb
and
jmp
push
xchg
movsb
mov
sbb
lea
cli
sbb
insb
mov
loope
xchg
js
jp
mov
pop
mov
mov
negl
gs
mov
sub
clc
mov
inc
gs
xchg
mov
jno
test
pop
add
xchg
jno
into
andl
pop
test
lock
cmp
fst
cwtl
and
fstps
insl
rolb
push
gs
dec
jl
iret
insb
xchg
addr16
rol
pop
out
pushf
push
mov
bound
xlat
subb
inc
mov
test
pop
lods
or
jmp
xor
mov
mov
loopne
jg
cld
out
add
into
dec
dec
push
inc
pop
jne,pt
add
dec
jns
ss
adc
dec
bound
or
jle
subl
popa
jbe
or
bound
insl
jl
xchg
in
lcall
fists
hlt
mov
pop
pop
cmp
xchg
pop
imul
ss
mov
mov
dec
pop
xlat
push
std
xlat
aam
jno
test
adc
icebp
add
xchg
sti
mov
mov
addr16
xchg
push
dec
cld
push
cs
lock
call
adc
pusha
repz
loop
vcvtsi2ss
shrl
shlb
mov
push
cmpsl
sub
sbb
push
cmpsb
stos
push
xor
add
mov
cmp
inc
push
cmpsl
test
cmp
mov
xchg
push
lods
inc
decl
faddp
mov
test
dec
pop
mov
sahf
sub
push
insb
cli
lret
arpl
inc
cmp
dec
loope
xor
dec
stos
insb
jg
roll
js
out
scas
inc
ss
add
stos
stos
push
sti
mov
lock
addr16
fsubrl
mov
je
addr16
add
in
sub
insl
inc
movsl
mov
mov
jne
hlt
stc
or
mov
pop
je
xlat
rorw
xchg
fs
sti
mov
and
dec
push
sub
bound
mov
fstpt
pop
jne
xorb
ss
mov
lahf
ret
push
sbb
movsb
or
rolb
inc
xor
ror
lret
stos
xchg
or
daa
stos
cmp
and
mov
ljmp
loopne
push
ret
xchg
sti
xor
pusha
push
test
xchg
jmp
xor
mov
mov
pop
pop
push
adcb
xchg
rcl
dec
lret
call
popa
push
gs
mov
call
shlb
mov
xchg
mov
add
icebp
icebp
xor
ret
inc
outsb
clc
mov
xor
fdivp
sbb
jle
jne
jg
push
jge
shll
push
pop
cs
inc
lods
repz
es
ja
mov
pop
xchg
cmpl
out
adc
sbb
push
in
iret
sub
mov
or
lret
push
push
test
ljmp
xchg
mov
rcll
rcrl
lods
movsl
mov
repnz
add
loope
pop
mov
lods
dec
mov
repz
in
in
loopne
xor
insb
or
daa
out
mov
addb
push
push
sbb
jns
cltd
nop
mov
or
dec
mov
fdivrl
hlt
adcl
dec
pop
fisttpl
sbb
inc
es
mov
dec
push
divb
adcb
mov
cmp
sahf
xchg
mov
jg
xor
xchg
out
inc
je
fcoms
fsubl
lahf
mov
icebp
inc
data16
icebp
test
ror
test
dec
xor
mov
out
push
fs
aad
mov
mov
sbb
dec
pop
jae
inc
inc
nop
push
lea
jp
lds
mov
pop
push
pop
mov
jmp
imul
push
ret
cs
jns
mov
mov
repnz
aas
ret
aaa
pop
and
divl
and
adc
dec
into
negb
je
popa
xchg
nop
push
mov
cmc
pop
rcrl
jecxz
in
push
pop
icebp
and
or
ja
mov
fldcw
sbb
repnz
sbb
js
push
loope
repz
mov
faddl
jb
or
std
in
xchg
sub
pop
or
repnz
popa
sti
subl
inc
mov
movsl
fcompl
in
lret
pop
jle
lcall
mov
pop
lret
lret
je
cmp
cmpsl
outsl
fsubl
and
jl
loope
mov
imulb
bound
and
in
or
iret
fstpt
xor
bound
push
jg
jmp
pop
int
dec
lahf
xor
cmp
in
xorb
aam
dec
stc
js
call
outsl
or
xor
dec
cltd
repnz
dec
call
mov
or
mov
jl
cmp
aam
cmpb
cmp
add
sbb
dec
mov
dec
mov
sub
lcall
pop
out
icebp
cmc
jo
idivb
mov
xchg
sbb
xor
xor
mov
imul
jb
sbb
xchg
add
addb
and
fldt
mov
push
push
mov
fistpll
test
in
dec
ficompl
fildl
sub
or
stos
xlat
sahf
jns
pop
popf
sbb
sbb
dec
adc
out
jae
inc
aad
rol
les
dec
cmpsl
xor
mov
iret
arpl
sub
dec
cmp
outsl
cs
dec
stos
pop
xchg
scas
inc
xchg
out
sub
scas
rcll
jb
mov
cs
mov
pop
loopne
jb
pop
push
test
stos
out
push
push
sub
sahf
jge
and
mov
fidivrs
add
dec
dec
or
mov
std
pop
mov
jle
pushf
push
mov
xchg
mov
jnp
js
xchg
add
inc
add
or
test
adc
xchg
hlt
xor
das
call
andb
push
or
iret
add
sarl
mov
scas
push
decb
out
or
adc
inc
enter
dec
jle
test
mov
sbb
add
and
xor
test
ljmp
ljmp
push
lret
pop
in
loopne
mov
cli
push
stc
mov
sub
fwait
mov
cmpsl
jle
pop
pop
add
in
lret
sub
int
jecxz
mov
sub
mov
jmp
xor
or
inc
in
loop
pop
pop
mov
es
aaa
fwait
add
lret
xchg
mov
dec
cmpsl
cmp
adc
xchg
outsb
test
xchg
scas
sbb
ss
add
mov
push
out
hlt
push
or
cmp
jae
jecxz
nop
es
repnz
xchg
mov
dec
xchg
loopne
iret
push
movsb
mov
xorl
xchg
outsb
pop
out
fwait
dec
mov
mov
in
ret
pop
decb
push
push
cmp
fcoms
push
push
lods
aaa
mov
shrb
add
xchg
jle
xchg
mov
mov
xchg
inc
xor
xchg
ss
cmp
or
je
mov
pop
add
shr
aad
adc
mov
fists
rorl
mov
and
jno
sbb
mov
jo
bnd
mov
sbb
je
in
jecxz
aaa
in
jne
aad
cwtl
adc
adc
in
add
icebp
mov
mov
sub
add
testl
arpl
in
inc
xchg
dec
das
test
add
push
mov
pop
fdivrl
inc
leave
push
adc
pop
aaa
sub
out
shlb
dec
das
xchg
fucomp
inc
cmp
xchg
or
push
xorb
lret
imul
mov
mov
push
mov
rclb
ds
cmp
popa
out
sbb
ja
mov
fwait
xor
pop
and
mov
adc
testb
mov
pusha
inc
mov
sub
fnsave
push
fnstenv
mov
imull
push
xchg
sahf
mov
mov
pop
pop
lds
outsb
ds
lcall
inc
fstps
call
shll
jo
cmp
mov
xchg
imul
jecxz
lea
sub
repz
ss
ss
lods
lret
inc
mov
dec
orb
repz
add
rcl
mov
into
jno
imul
inc
bound
sub
lret
pop
rcrb
cli
mov
inc
int
pop
ficoml
vunpcklps
xchg
cmpsl
inc
jo
mov
out
in
cmpsl
repnz
or
push
or
mov
lahf
push
dec
negl
fistl
in
aaa
btc
xchg
or
mov
pop
loop
fsubs
sbbb
mov
sub
insb
sub
mov
dec
sub
adc
je
dec
jl
sub
ds
dec
mov
sbb
mov
sbb
adc
popf
and
adc
xchg
imul
cli
and
cmpsl
jecxz
pusha
in
push
inc
cmp
lea
cmpsb
or
fdivp
dec
das
lods
jg
lods
lcall
sahf
cwtl
add
fadds
pushf
fdivrl
ljmp
leave
arpl
jne
popa
push
mov
imul
sbb
test
rclb
jns
adc
and
cwtl
and
pop
mov
sbb
jl
clc
outsb
iret
mov
out
pop
cmp
out
lds
loop
add
sub
lahf
inc
fisttpl
lds
jb
clc
pop
mov
pushf
dec
jbe
enter
call
test
inc
pop
stc
xchg
lcall
mov
lret
cwtl
inc
dec
not
lret
std
leave
or
sbb
adc
test
xchg
mov
cmp
lahf
pop
jbe
sti
push
fisttps
sbb
int3
lahf
cmp
pop
xor
dec
push
dec
pop
or
push
cmp
imul
in
imul
into
test
in
fdivl
dec
jecxz
push
or
mov
pop
popf
jecxz
cmp
and
decb
in
sti
add
lods
cmp
movsbl
js
pusha
iret
xchg
or
popf
pop
mov
subl
mov
cmpl
or
icebp
shlb
add
nop
data16
sbb
inc
out
jae
cmpsb
bound
sub
or
sti
xor
cmc
mov
addl
into
inc
push
pop
sub
push
hlt
xchg
out
dec
shrb
cmp
add
out
mov
fisttpll
xchg
and
data16
insl
fwait
inc
mov
push
rcrl
out
stc
mov
add
aam
in
sahf
push
cmp
lods
push
addr16
lods
les
ret
bswap
stc
pop
lcall
out
push
and
mov
hlt
xchg
mov
loop
or
fstl
add
mov
sub
and
push
cli
push
mov
pushl
add
add
insb
cmpsl
mov
dec
aaa
cmp
getsec
bswap
xor
stos
cltd
mov
pop
pop
push
push
cli
pop
fcomp
push
jecxz
imul
or
xlat
mov
xchg
xchg
add
in
pop
test
call
xchg
mov
push
pop
push
lea
aad
sbb
mov
inc
lret
ja
jb
daa
ret
test
daa
xchg
aaa
xor
lcall
jl
jp
data16
pushf
rcrl
push
xchg
jg
movsl
stos
ret
aam
sub
int
imul
scas
mov
fcomi
popa
rcrb
cli
cmp
mov
and
es
lds
leave
xor
lret
ret
add
add
add
xor
xchg
inc
mov
cltd
stos
arpl
inc
test
xchg
mov
cmp
insl
mov
shll
push
mov
cli
insb
sub
or
scas
outsb
data16
lock
movsl
repnz
add
push
sub
jnp
inc
negb
loop
pop
in
push
dec
cmp
mov
push
mov
popf
xlat
stos
or
and
dec
pop
lock
mov
add
jl
dec
aaa
cs
and
ret
cmp
or
mov
mov
pop
mov
xchg
mov
and
xorb
and
movsb
cltd
aas
add
xor
push
movsl
dec
int3
sub
jecxz
sbb
pop
cs
mov
add
mov
dec
mov
lahf
adc
add
ret
pop
mov
repnz
aam
inc
push
jb
xlat
icebp
adc
fnsave
fs
dec
cld
add
jbe
movsl
mov
jle
lock
lds
fsubp
xor
add
push
popf
sub
xchg
js
push
stos
xchg
fsubrs
fbld
and
lods
and
cld
mov
les
pop
sub
push
jle
pop
ss
xchg
xchg
jecxz
xor
push
es
out
imul
mov
push
pop
mov
sbb
orl
addr16
push
xchg
iret
iret
dec
dec
push
mov
in
movsb
fstpl
jae
push
aad
adc
sti
cmp
push
loope
das
in
push
loopne
mov
lret
mov
lahf
hlt
aaa
mov
xchg
repnz
lcall
mov
int
xlat
mov
sti
jnp
push
cs
pop
pop
fbld
call
mov
or
cmp
sti
xchg
pop
sbb
aad
xor
mov
xor
mov
outsl
xchg
mov
mov
and
push
mov
iret
inc
aam
adc
mov
fcompl
xchg
push
add
sub
repnz
sub
jne
add
xor
nop
fistl
fsubl
pop
mov
loopne
psllw
jns
ss
mov
shll
mov
xchg
xorl
movsl
pop
add
pandn
xchg
cmp
mov
pop
add
mov
mov
dec
dec
cmpsb
mov
and
call
dec
mov
test
lea
xchg
imul
adc
dec
jl
lret
xchg
fisttps
testb
je
pop
ljmp
xchg
pop
dec
xor
sbb
scas
sbb
push
pop
test
out
pop
jo
lret
mov
cmp
cmc
jno
xlat
dec
xchg
jge
add
mov
or
vminps
mov
adc
lret
out
test
daa
into
cmp
insl
mov
mov
imul
nop
test
mov
jb
add
xor
arpl
xor
push
or
das
inc
lcall
mov
ret
sub
adc
nop
mov
stos
xor
add
fmulp
inc
test
mov
pop
cwtl
sar
imul
ss
jg
loop
sub
jae
xchg
sti
cld
addr16
imul
jno
stc
jbe
fs
lea
ds
es
xchg
sbb
push
bound
in
aas
push
mov
int3
xchg
popa
dec
jnp
stos
cmp
das
jp
add
pop
cmpsl
inc
pop
push
xchg
hlt
fnstcw
ss
adc
mov
dec
test
ljmp
negb
repnz
sti
or
fmuls
sub
into
sub
mov
ja
xor
lea
dec
mov
cmp
jp
lret
mov
adc
andl
popf
shrb
xor
xor
cmpsl
scas
pop
sub
or
cmp
sub
and
shlb
in
jns
lods
in
mov
mov
es
ret
add
mov
daa
outsb
fsubrp
cli
sahf
sub
mov
popf
cld
pop
lcall
xchg
aas
mov
outsb
dec
repnz
cli
out
lret
pop
xor
or
pop
cld
es
push
pop
xchg
xor
or
pop
cwtl
fnstenv
add
shrl
imul
stc
repnz
jp
sub
lea
inc
fisubrl
movsl
add
clc
xorl
sar
mov
sbb
cwtl
in
fists
mov
inc
ss
dec
xchg
bnd
mov
jmp
les
int
data16
dec
push
sarb
aas
dec
icebp
sub
inc
adc
push
or
int
ja
adc
in
mov
push
test
xchg
jae
jo
mov
sub
sbb
push
stos
mov
out
xchg
adc
ss
jbe
mov
pushf
out
sbb
sbb
or
pop
scas
jg,pn
mov
outsl
dec
mov
mov
iret
ja
pop
ss
fidivs
ja
cmpsl
shll
stos
and
es
inc
int
jno
adc
or
scas
cltd
xchg
pop
aam
xchg
gs
or
loopne
lahf
push
fldt
push
inc
and
fildll
into
xor
hlt
out
mulb
sub
mov
ret
xlat
imul
inc
aam
gs
out
adc
push
test
stos
gs
sbb
inc
or
xchg
enter
rol
movsb
stc
fildl
lods
jg
xor
push
es
and
das
aaa
enter
push
mov
test
fstl
jmp
mov
mov
imul
cld
pop
stos
push
mov
pop
rcr
jp
out
lds
push
pop
pusha
lds
push
mov
lods
dec
test
out
add
sub
ja
pop
mov
push
cmp
xchg
and
and
test
jg
cltd
je
repz
rcrb
int
fwait
dec
stos
adc
test
push
es
xor
loope
stos
daa
test
cmpsb
xor
fwait
or
add
xor
cmp
add
cmp
lret
mov
in
cmp
adc
sbb
pop
loopne
add
sub
and
cmpsb
gs
es
insb
outsb
cmp
enter
xchg
mov
push
cmp
cmp
inc
cmc
push
imul
or
inc
fimull
jmp
jo
sub
es
sub
sbb
sub
shlb
mov
jmp
lds
aad
lds
push
je
js
push
add
scas
fiaddl
fwait
add
pop
fnstcw
clc
lock
add
mov
ljmp
xchg
aas
into
sbb
test
lea
lret
mov
cmp
push
push
int3
jmp
push
stos
jl
sub
jle
aam
cwtl
adc
aad
adc
cmpsb
call
aas
pop
cmp
js
lds
sub
pop
or
xchg
jp
out
push
mov
xor
imul
imul
sbb
js
xor
add
pop
imul
fs
xlat
and
addb
and
lahf
xchg
dec
cmpsb
adcl
jg
xor
cmp
dec
inc
dec
addr16
ss
mov
lret
pop
dec
xor
or
fwait
jne
or
pop
xor
inc
daa
sbb
jno
sbb
inc
paddw
or
mov
movl
sbb
shlb
cmpsb
dec
cmp
jp
fists
cmc
add
cmpsb
dec
adc
dec
add
test
lret
rcrl
fyl2xp1
stos
sub
out
add
xor
shrl
jne
int3
dec
test
or
sbb
mov
xchg
loope
pushf
lods
fisttpl
lds
in
stos
das
stos
in
jae
jb
into
test
fldl
in
mov
imul
mov
je
fcompl
add
pop
jae
or
stc
inc
mov
in
cmp
mov
hlt
add
jg
inc
stc
iret
add
pop
or
js
xor
mov
rcrb
fisubs
pushf
test
pop
lods
sbb
testl
xor
and
jns
sub
mov
jmp
lret
mov
mov
outsb
loope
ds
icebp
xor
push
jnp
xchg
sbb
mov
mov
bswap
iret
jmp
aas
xchg
ffree
and
pop
mov
out
rorl
test
jns
xchg
jge
pop
or
xor
out
mov
sbb
and
dec
jecxz
rcl
jecxz
sahf
jle
xchg
dec
push
xor
push
jecxz
cmpb
sbb
cmp
dec
mov
call
mov
stos
jae
jb
push
xorl
test
or
jno
insb
mov
xchg
mov
test
sbb
shlb
sub
es
xor
mov
adc
fdivrp
outsl
jge
inc
push
scas
sti
or
loope
and
sbb
xor
fsubr
pop
or
test
add
mov
inc
fldenv
sbb
or
push
aam
pusha
adc
xor
push
push
fisubs
sahf
fistpl
sbb
xlat
sub
cwtl
lds
jg
adc
hlt
xchg
cmovl
sti
and
inc
dec
pop
jg
or
mov
inc
shl
xchg
rclb
push
jle
jb
xchg
test
ss
shll
ds
shrl
dec
ja
gs
cmp
jg
mov
cmpsb
fbstp
adc
mov
movsl
push
setnp
mov
shl
idivb
ret
cli
inc
add
stos
dec
call
or
jl
push
stos
fs
push
loopne
or
test
and
and
push
mov
dec
inc
addb
fwait
xchg
xchg
add
mulb
sub
cmp
jne
pop
sub
xor
sbb
negb
add
jae
dec
shll
out
fnstcw
rcrb
push
fidivrs
push
dec
pop
cmp
mov
fdivr
inc
dec
out
push
stc
and
xor
dec
dec
cld
cld
jnp
xchg
sbb
xlat
jno
test
dec
xchg
pop
mov
cmp
mov
sbb
js
fstpl
pop
xor
sub
push
out
pusha
daa
rorl
jo
dec
sbb
cs
adc
scas
leave
mov
loopne
push
pop
xchg
mov
and
sub
mov
popf
imul
inc
scas
pop
sbb
inc
rcr
and
xchg
mov
inc
fprem1
cltd
xor
add
cmpl
lahf
push
adc
jno
adc
inc
inc
sarb
and
leave
das
imul
cld
movsl
cld
int3
pop
dec
in
pop
rolb
mov
popf
mov
xchg
sub
ds
jbe
mov
mov
mov
xchg
frstor
divl
lock
xchg
xor
pop
sbb
or
sub
incb
push
jo
pop
adc
mov
jg
ja
into
sbb
stos
icebp
add
sbb
repz
data16
mov
dec
int
mov
mov
pop
rol
in
stc
add
cmp
cmp
jl
test
add
and
enter
jmp
loope
push
insb
fldl
dec
sbb
or
cmp
stc
jge
xchg
out
inc
ljmp
adc
push
and
in
inc
inc
add
dec
inc
add
fmul
lods
adc
hlt
outsl
mov
jae
jg
jmp
js
insb
fcom
inc
or
mov
ss
sub
cmpsb
popf
sbb
enter
or
adc
jae
dec
add
stos
stos
lahf
fs
or
pop
popl
and
adc
nop
inc
xchg
call
push
lock
xor
stos
shlb
loope
arpl
pop
push
loop
sbb
ljmp
in
notl
push
sbb
insl
mov
adc
stos
xchg
popa
clc
je
jns
pop
adc
hlt
icebp
xor
shl
mov
jge
add
ja
mov
fwait
push
jbe
inc
cmp
stos
mov
int
adc
adc
push
sub
or
cli
xor
mov
push
ljmp
xor
inc
jmp
popf
lret
jnp
push
or
das
mov
sub
xchg
mov
fbld
sbb
push
xor
cmp
xor
xchg
fmulp
mov
mov
movq
fstpt
std
push
mov
sti
fstl
movsb
aad
pop
mov
mov
pop
aad
mov
cli
cli
ficompl
fadds
sarb
inc
dec
mov
mov
scas
stos
inc
arpl
into
fcmovnb
enter
sbb
sbb
mov
scas
in
test
dec
repz
lahf
aam
pop
dec
arpl
mov
add
push
aam
or
call
or
inc
push
lahf
mov
int
imul
cmpsl
and
mov
xor
mov
fdivp
scas
lods
stos
arpl
xlat
out
lret
setl
jg
jbe
and
fadd
and
clc
psraw
mov
mov
inc
leave
and
xor
stos
inc
clc
in
fcmovnbe
aas
aad
dec
or
or
out
jbe
scas
out
sti
or
dec
jb
and
mov
mov
sbb
pop
push
mov
popa
xchg
ss
push
mov
ljmp
pop
pop
sbb
sbb
dec
push
repz
sub
outsl
jmp
push
mov
or
out
push
mov
push
push
lret
mov
sub
cld
push
loop
std
test
add
push
jp
pop
iret
jp
mov
cld
lcall
sbb
and
xor
and
fyl2x
mov
jmp
mov
push
dec
xor
dec
cmp
ret
mov
cwtl
and
dec
repnz
push
aas
ds
nop
data16
ljmp
push
lds
lock
lods
cli
jl
mov
aas
pop
push
mov
outsb
cld
popf
lds
aam
icebp
and
shr
aam
or
aam
lock
push
xor
mov
push
adcl
adc
into
aam
mov
fwait
call
push
xchg
jae
xorb
ja
fcompl
jb
iret
push
jo
fldl
in
ss
pop
push
pop
fcomps
cmc
and
cld
cmpsl
push
mov
add
xor
jae
cmp
xchg
int
out
cmp
xor
pop
xchg
stos
or
fists
in
mov
outsl
cld
mov
rcrb
ljmp
daa
cli
xchg
pop
xchg
push
mov
jae
mov
jnp
fstpl
imul
push
mov
sarl
stos
mov
iret
mov
xor
ds
enter
mov
ficoml
xchg
adc
mov
daa
stos
jmp
push
push
jo
mov
xchg
add
notw
test
loop
cwtl
loope
rorb
mov
xchg
icebp
adc
sub
and
cmc
lock
adc
lods
test
ljmp
in
jle
loopne
xor
fisubrs
popa
and
out
scas
xor
pop
sarb
sqrtps
pop
mov
dec
mov
mov
mov
or
or
sbb
xchg
lods
ljmp
sti
jp
and
jb
test
pop
xor
jle
or
nop
fcmove
out
popf
jmp
xchg
js
mov
cmp
jge
in
dec
imul
ret
into
dec
fldt
cmp
cltd
mov
xchg
push
dec
sub
mov
jp
scas
sub
pusha
mov
and
ds
popf
push
iret
or
pop
test
xlat
mov
sub
cmpsl
push
shr
fcoms
push
sar
dec
adcb
fucomp
in
pop
xchg
push
push
push
xchg
adc
pop
in
push
popf
ret
aaa
sub
cmp
sarl
sbb
jl
andb
pavgb
popf
push
pop
daa
faddl
outsb
xchg
push
ljmp
orb
push
inc
fldcw
popa
std
sub
scas
push
divb
jl
cmp
leave
out
mov
sbb
adc
xor
jg
lcall
stc
add
inc
fdivl
mov
inc
fwait
xchg
cmpb
dec
je
add
data16
and
push
mov
xchg
std
imul
cltd
jmp
sbb
mov
fstpt
notb
addr16
popa
push
push
in
popf
divb
test
mov
jecxz
es
and
das
xchg
imul
call
test
cmp
adc
dec
mov
sub
and
pop
call
push
sub
lret
in
xor
jl
mov
aaa
and
dec
in
lock
xor
dec
sti
add
jbe
ret
jb
mov
xor
lea
in
push
jmp
mov
inc
and
mov
push
outsl
addr16
repnz
push
jne
cmp
ret
test
inc
test
sub
loopne
xor
iret
lds
cmpsb
xchg
sub
push
xchg
in
sbb
aas
imul
decb
pop
les
into
outsb
lds
pop
in
daa
mov
push
mov
lea
xor
lahf
dec
cmpsb
add
inc
aam
rcrl
dec
pop
xlat
jo
and
or
cmpsb
ret
fadds
cwtl
sub
lcall
cmp
mov
or
jg
mov
hlt
inc
pop
xchg
js
dec
and
and
rol
inc
pop
dec
imul
mov
inc
mov
fiadds
xor
aaa
out
push
dec
add
mov
jns
and
test
sbb
fsubs
sahf
sbb
mov
mov
push
jmp
cmp
rolb
std
sarb
imul
pop
mov
adc
xchg
test
pusha
fwait
jae
and
ret
jno
adc
sbb
add
stos
fwait
es
mov
enter
dec
sub
add
push
out
push
pusha
inc
jne
ljmp
pop
icebp
mov
mov
and
mov
leave
aam
dec
mov
sbb
js
push
jb
adc
insl
inc
or
mov
add
mov
mov
mov
sbb
addr16
adc
icebp
jno
mov
int3
mov
mov
popa
jecxz
enter
sbb
sub
push
int
push
sbb
inc
int3
pusha
lea
xor
outsl
cld
cwtl
add
ja
or
stc
mov
cmpsl
add
lcall
mov
sahf
cmp
sahf
pop
fisubrs
add
test
push
cmp
scas
adc
loopne
jo
pop
stc
cmpb
divb
das
sub
fstpt
in
out
jge
mov
lea
mov
lcall
pop
int
dec
movsl
sbb
repz
mov
aaa
fldenv
mov
je
mov
into
mov
mov
arpl
mov
sbb
or
lds
lea
bound
xorb
sbb
jne
and
lcall
pop
cmp
mov
scas
call
dec
push
and
repz
mov
std
sahf
pusha
xchg
or
std
fnstsw
or
lcall
dec
popf
push
xor
sbb
repz
cmp
sti
or
mov
mov
movsl
sbb
arpl
or
dec
aad
ds
stos
push
and
sub
add
cmp
fwait
push
mov
xchg
sub
ret
aas
jmp
xchg
mov
pop
pop
ret
xchg
bound
loopne
int3
aad
mov
mov
mov
xchg
jg
test
xchg
out
xor
mov
mov
fdivrl
in
and
hlt
cmc
sbb
int3
mov
ljmp
pop
in
adc
push
cmpsb
cmc
and
movsb
cltd
fdivl
bound
or
push
cmp
mov
mov
shll
add
xor
jl
xor
pop
out
and
inc
xchg
test
lds
loop
cmp
jge
xor
decl
push
daa
inc
flds
fwait
loope
in
and
shl
adc
jmp
mov
bound
inc
adc
mov
dec
ja
in
mov
push
mov
add
cmp
imul
fists
sbb
push
mov
push
out
data16
xchg
cmpsb
sbb
fwait
popf
dec
cltd
xor
add
xor
push
test
mov
jno
and
dec
pop
mov
and
adc
insb
fmull
push
cwtl
test
mov
rol
iret
xchg
jecxz
mov
push
notl
leave
sahf
xchg
xor
mov
fs
hlt
xor
sub
test
inc
jecxz
push
mov
mov
fs
push
sub
push
movsl
stos
xor
add
dec
push
jecxz
lds
or
push
push
stos
xorb
xor
lods
outsl
cwtl
jns
mov
fiadds
mov
loop
adc
sub
int3
mov
push
stc
push
dec
frstor
jnp
cmp
xor
popa
mov
mov
jg
inc
ja
push
icebp
push
or
popa
or
sbb
outsb
dec
xchg
lcall
jmp
or
fs
imul
cmpsb
lods
or
jmp
mov
add
adc
decl
dec
jmp
hlt
fstps
out
dec
loop
pop
sub
pop
addl
out
ds
outsb
lcall
and
scas
dec
xor
fimull
or
pusha
lret
xchg
xchg
mov
roll
lret
fwait
cmpsb
ss
sub
lret
jbe
out
daa
sbb
dec
or
sub
loope
sub
mov
jg
cli
dec
movsb
sahf
mov
repnz
bound
mov
call
pushf
and
adc
dec
out
mov
push
stos
pushf
mov
loop
outsb
push
pop
xlat
pusha
dec
in
sbb
imul
mov
aam
jl
inc
in
in
out
scas
mov
mov
xlat
mov
gs
xchg
and
loopne
sbb
or
js
mov
fsubl
jns
xchg
jle
lret
xchg
mov
pop
pop
inc
or
in
sbb
mov
fbld
push
add
push
xchg
mov
shll
inc
pop
pop
jg
scas
repz
xchg
in
int
mov
push
push
sarb
in
and
lret
pop
sbb
in
ljmp
jge
shlb
mov
out
mov
icebp
sub
cmp
shlb
adcl
stc
frndint
push
jmp
inc
add
cmp
sbb
or
sbb
or
jno
mov
and
negb
cmp
addb
test
dec
xchg
jecxz
mov
mov
nop
fcoml
mov
je
js
adc
push
mov
and
sub
popf
scas
or
repnz
cli
dec
adc
fistpll
imul
ds
pop
cwtl
lods
out
xor
clc
shrb
mov
daa
xorb
fsubs
mov
jbe
out
or
push
hlt
xor
das
movsb
add
pop
push
lret
xlat
insl
ret
int3
adc
cmp
jge
sarl
adc
jmp
sbb
and
or
adc
mov
pushf
cmpl
sub
dec
mov
loop
or
addb
ret
xor
fiaddl
outsb
call
and
outsb
or
dec
ret
xor
stc
mov
cmpsl
mov
mov
sbb
leave
enter
push
xchg
dec
mov
lcall
mov
push
insb
adc
dec
cmp
mov
add
outsl
xor
insb
loop
pop
scas
cmp
xchg
mov
enter
sub
daa
mov
dec
ret
or
lods
and
xchg
xor
xchg
std
lods
and
sbb
aas
int
insl
xlat
sub
out
push
inc
jno
out
dec
in
inc
mov
cmp
adc
xchg
cmc
cld
mov
pushf
push
daa
imul
ret
cmp
incb
xor
adc
loopne
out
jl
xor
jge
popa
imul
sar
push
push
push
arpl
outsb
inc
push
stos
cmp
jg
lds
rol
scas
call
or
add
jne
out
orb
dec
mov
add
sbb
insb
push
inc
mov
addr16
push
enter
shlb
mov
and
mov
inc
mov
mov
mov
cmpsb
sub
addl
out
lcall
sbb
pop
lock
pop
inc
jmp
dec
sub
jle
jmp
jns
inc
movb
lret
call
add
hlt
sub
dec
add
cltd
cmp
sbb
xlat
popa
mov
fidivl
fbstp
stos
jmp
pop
sarl
arpl
insb
imul
jecxz
adc
inc
inc
xor
into
push
daa
mov
jmp
mov
add
test
out
inc
mov
fsubl
xor
cwtl
loop
int
jle
je
shrl
outsl
sbb
pop
pop
pop
inc
adc
xchg
jb
pop
fmull
gs
fadd
sti
and
or
dec
scas
sbb
leave
xchg
push
jg
roll
push
test
or
xchg
and
inc
pusha
mov
or
sar
mov
es
xor
pop
inc
lds
test
lods
push
aaa
cmp
push
push
test
mov
dec
jle
pop
cld
jo
dec
xchg
xor
pop
cmp
sub
sbbl
loope
dec
andb
xlat
xorb
push
sub
cmp
pop
test
push
dec
adc
add
xor
or
into
mov
push
mov
push
dec
push
enter
pop
dec
and
sbbl
testl
and
xchg
fstl
fsubrl
mov
push
jmp
jbe
and
mov
lahf
fs
jbe
cld
xchg
jmp
loopne
dec
cli
popf
gs
inc
push
pop
xchg
test
popa
ficoml
aam
or
push
mov
pop
mov
loope
mov
pop
inc
rol
test
push
add
je
cmp
mov
sbb
lret
push
es
cld
test
fiaddl
mov
iret
sub
stc
mov
lods
fldenv
or
div
adc
sti
sti
xchg
icebp
dec
xchg
cmp
cmpsl
roll
pop
push
daa
pop
push
das
mov
xchg
daa
sahf
in
das
jnp
enter
es
repz
nop
adc
and
or
fcomp
hlt
cmp
xchg
insb
and
iret
sbb
dec
popa
jo
adc
and
sub
sbb
pop
into
mov
push
and
sarl
pop
mov
data16
add
lret
js
loop
jne
dec
insb
mov
mov
pushf
sbb
mov
inc
xchg
lcall
mov
ret
mov
xchg
jns
iret
sbbb
mov
jne
xor
loopne
mov
lea
addl
aam
lret
mov
and
enter
call
and
int3
push
xlat
sub
mov
sub
clc
add
out
sbb
and
clc
xchg
test
push
sbb
sbb
mov
adc
push
stos
xchg
popw
bswap
fcoml
mov
je
and
dec
cmpsb
pop
sub
cmp
and
xor
mov
push
sbb
decb
cmc
test
sbb
jecxz
mov
outsl
jle
js
gs
mov
sub
test
and
and
jmp
jne
nop
sub
pop
insl
idivb
ss
iret
dec
arpl
inc
push
and
push
sbb
and
shr
and
repz
dec
xor
lock
push
test
adc
or
and
adc
orl
jbe
popa
repz
push
push
into
xor
cmp
sbb
icebp
jbe
jmp
clc
lahf
sbb
aaa
call
cwtl
cmp
adc
pop
lock
jl
cmpsl
cmp
mov
jmp
jmp
dec
sub
mov
popa
push
sub
sub
add
push
cmp
push
popl
pop
jb
out
mov
jo
ret
xor
inc
aaa
into
int3
dec
ror
loop
push
arpl
popf
ljmp
pop
mov
das
cmp
push
mov
add
adc
fildl
pop
adc
mov
inc
add
shlb
ftst
lods
cvtps2pi
ret
add
push
fwait
orl
cli
nop
mov
and
pop
mov
push
lret
cmp
aad
cmp
lods
je
pop
aam
neg
aaa
iret
sub
add
adc
and
shll
push
sub
iret
jbe
pop
popa
out
arpl
repnz
rolb
cltd
inc
or
mov
jb
outsb
stos
and
fistpll
cmp
push
scas
jne
stos
mov
sub
sbb
pop
lods
sbb
dec
loopne
divl
jl
dec
rcrb
mov
loope
movsb
imul
or
or
push
arpl
and
hlt
ja
setae
jne
lods
filds
gs
adc
ss
fldenv
sbb
daa
add
enter
cmpsb
sbb
popa
mov
das
mov
xchg
push
jnp
cld
add
inc
xor
xchg
mov
adc
cmpsl
and
jecxz
xor
mov
ret
pop
cmp
jbe
xor
sbb
mov
mov
cs
dec
mov
xor
rclb
in
jo
je
nop
adc
lret
pop
out
mov
inc
imul
mov
bound
jp
gs
add
mov
loopne
xor
jp
andb
stos
xchg
push
mov
std
idivb
or
or
insb
and
cmpsl
sub
mov
aad
into
sbb
fwait
or
mov
push
mov
mov
out
test
jne
mov
mov
push
sbb
sbb
jp
rcrb
adc
mov
xchg
push
out
shll
repnz
xor
adc
std
lret
fcmovbe
push
out
sub
push
sbb
lods
cmpsb
or
xchg
shl
jnp
cmp
jp
pushf
iret
or
ds
shlb
mov
mov
and
sbb
adc
sti
jbe
mov
stc
push
dec
jo
adc
pop
dec
popa
sub
sbb
mov
mov
xchg
mov
pop
dec
lea
sbb
fdivl
outsb
cmp
sub
cmpsb
sub
addr16
iret
xchg
shl
test
push
sub
jns
add
dec
jecxz
leave
cmp
xchg
sbb
movsl
fldcw
mov
insb
xlat
cmpsl
stos
mov
add
mov
jb
mov
loopne
loope
outsb
arpl
aad
divl
mov
mov
sub
cmp
cmp
sti
fxch
mov
xchg
int3
pop
mov
lret
lret
out
cmp
les
repz
xchg
xor
js
mov
mov
repnz
in
jbe
mov
hlt
xchg
ret
add
and
das
lahf
mov
shll
outsb
cwtl
jl
leave
cmp
dec
jg
xlat
fs
xor
mov
cmp
iret
popa
lret
dec
xor
test
dec
call
shrl
jns
shrl
cmp
dec
lret
in
daa
mov
add
stc
lock
dec
gs
or
inc
dec
fcoms
sbb
inc
clc
ret
or
scas
pop
mov
fwait
leave
xchg
pop
test
sub
pushf
aad
xchg
push
adc
add
pop
sub
xor
mov
xor
stc
mov
int3
and
jo
jne
orb
std
mov
xchg
icebp
adc
frstor
sti
lods
or
xor
lahf
mov
xchg
int
and
sub
cmpsb
and
and
cmp
das
dec
xor
dec
adcl
xchg
jb
mov
inc
loope
fimuls
int
add
lret
sub
scas
cmpsl
fcomps
ss
xorb
mov
ror
popf
and
mov
sub
xchg
xchg
mov
pop
pop
sbb
sahf
outsb
or
cmc
pop
sbb
jmp
loope
xor
daa
mov
lret
xchg
aam
flds
pop
faddl
mov
enter
hlt
outsb
push
lods
in
inc
adc
dec
and
xchg
clc
and
sbb
add
push
push
push
jg
xchg
pop
push
fisttpl
ljmp
mov
out
pop
decb
xor
mov
addr16
xchg
sti
mov
fsubrl
xlat
jno
xchg
jns
mov
dec
sbb
add
iret
cmp
subl
pop
imull
cmp
sbb
cmovp
popf
sub
mov
cwtl
hlt
sbb
push
cs
mov
aaa
aas
sbb
enter
movsl
bound
sub
push
push
or
test
in
aad
lea
test
fistps
aad
mov
repz
in
dec
gs
mov
xchg
outsb
add
icebp
loop
xchg
inc
xchg
push
cmpl
push
nop
mov
fcmovnb
add
fmull
or
mov
adc
lock
cmpsl
stos
push
pop
popf
aam
adc
das
or
aas
jo
aad
lahf
dec
xchg
js
pop
mov
mov
or
ret
aaa
data16
mov
sub
push
or
lods
mov
jl
pop
cli
mov
sub
das
sbb
jne
aaa
mov
sub
js
cmc
lock
adc
or
xor
add
mov
into
adc
aam
movsl
cmpl
in
pop
push
fs
outsb
xchg
pop
stos
loopne
xor
aam
insl
mov
fcoms
arpl
xchg
jae
leave
and
mov
push
fisttpll
lret
ret
pop
push
push
xor
icebp
push
jg
bound
xor
xor
repnz
test
je
xor
mov
out
push
sbb
lret
lret
xchg
int
fildl
js
inc
pop
test
gs
pop
les
xor
stos
insl
daa
lret
ja
mov
sbb
mov
in
mov
adc
inc
popf
frstor
cltd
xor
sub
add
cmpsb
xchg
sub
outsb
xor
inc
lcall
shlb
and
subl
cmpsb
sub
jmp
xor
xchg
fcoms
int3
lds
push
mov
cmp
js
push
leave
inc
dec
cs
pop
mov
arpl
ret
lret
test
mov
jns
cmp
jb
sbb
test
sbb
dec
pop
imul
shrl
push
sbb
fiaddl
in
jmp
jnp
xchg
es
xor
sbb
sub
jmp
sub
in
jge
xchg
mov
call
lods
fwait
hlt
add
ficoms
fwait
int
loopne
insb
cltd
mov
or
mov
les
sbb
pop
sbb
sub
jae
out
fsubr
loope
sub
mov
push
enter
repnz
cwtl
xchg
in
stc
fnstcw
xor
fisttpll
push
xchg
icebp
push
mov
cwtl
dec
fcoml
subl
inc
cwtl
mov
inc
adc
jns
inc
iret
lea
stos
and
or
jle
mov
bswap
pop
push
sbb
popf
mov
pushf
ds
test
mov
and
mov
push
fldcw
int3
repz
jnp
loope
cli
out
sbb
sub
or
adc
xchg
fildl
jg
movsl
xchg
out
rcll
js
sbb
or
les
mov
inc
mov
push
sbb
push
cmpsb
push
xor
adc
sub
sbb
jno
mov
and
shlb
adc
xlat
mov
cld
lock
dec
jle
ret
lcall
jmp
aad
push
pop
cwtl
insl
cmc
add
out
in
iret
imul
pusha
fistps
xor
scas
or
ljmp
bswap
in
jl
adc
mov
push
addr16
sahf
or
and
jno
mov
sbb
scas
jle
push
pop
pop
rorb
xchg
in
repnz
jle
f2xm1
cmc
enter
inc
dec
js
push
mov
xchg
dec
call
lret
mov
or
inc
mov
jg
leave
sub
pop
int3
gs
mov
lret
sbb
pushf
pop
loopne
jns
inc
lods
sarl
std
pop
jb
pop
push
mov
int
add
and
mov
sub
out
clc
rol
mov
clc
dec
fsts
fs
jbe
dec
notl
dec
cmpb
mov
aas
dec
or
inc
pushf
movb
inc
push
push
xor
ds
xlat
rcl
test
aaa
cmp
std
adc
mov
gs
mov
testb
lods
fildll
mov
loope
xor
mov
xor
add
in
shl
push
adc
pop
jge
insb
lahf
nop
inc
aam
and
test
mov
lret
jbe
fwait
cmp
into
mov
sbb
pop
or
jg
jmp
loop
cli
int3
cmpsl
fstps
mov
pop
inc
push
xchg
cmpb
lahf
sub
ficomps
or
xlat
xchg
adc
mov
mov
cwtl
outsb
aad
pushf
jl
cltd
sbb
popf
ret
cmp
mov
push
in
inc
dec
push
inc
lcall
daa
out
stc
dec
sarb
out
test
orb
aad
push
cmc
push
aad
xchg
and
mov
out
xchg
pushf
mov
in
stc
hlt
jge
testb
push
in
sbb
sti
and
mov
mov
sbb
ret
push
fcoml
add
cld
push
push
add
ja
adc
mov
icebp
fadds
je
mov
or
mov
test
adc
push
xorb
push
mov
rcr
popl
popa
sub
jl
dec
dec
std
stos
jo
mov
adc
or
push
push
ret
rol
xchg
out
adc
scas
sub
jne
not
sub
mov
aam
inc
mov
xor
pop
xorb
xor
std
out
int
jp
out
jl
inc
adc
inc
ficoml
lds
shl
cld
inc
sbb
mov
jge
and
xchg
lcall
imulb
movsb
sbb
mov
pop
sub
orb
sub
lret
jbe
mov
xchg
shlb
pop
js
cmp
xlat
inc
or
pop
ss
xchg
and
xlat
cmp
mov
mov
idivb
adc
inc
adc
mov
in
push
dec
sbb
push
pop
iret
mov
jle
cmp
sahf
xchg
pop
std
jne
cli
or
stos
xor
mov
in
sub
sub
cld
cmpsb
std
pop
push
cs
enter
push
xchg
sbbl
mov
push
jns
push
mov
jp
enter
push
lods
repnz
div
mov
push
adc
mov
int
rcrb
push
add
adc
sahf
int3
cmp
ljmp
int3
mov
aam
push
sbbb
mov
insb
jg
sub
mov
add
xchg
jo
loope
and
fs
int
je
vpsrld
inc
sti
mov
das
test
test
ret
int3
js
push
in
pop
or
mov
out
jmp
addl
cmp
fnstcw
popf
jp
push
cmp
fcmovu
js
sbb
sahf
pop
mov
xor
dec
int3
roll
inc
jae
pushf
cmp
je
aad
jmp
mov
mov
xor
loopne
gs
pop
pop
cwtl
adc
cltd
lahf
enter
add
dec
jp
fwait
jmp
insb
jne
scas
dec
ljmp
cmpsb
inc
jp
rcr
sub
les
or
xchg
adc
aam
jnp
sbb
cmp
cmp
dec
mov
or
jl
test
adc
stos
push
xchg
decl
imul
pop
lcall
pop
in
and
jl
ljmp
xchg
dec
ret
adc
sub
imul
adc
add
mov
int3
push
xor
xchg
std
and
repz
mov
or
test
dec
repnz
xchg
pop
add
sbb
inc
ja
daa
jo
repnz
add
movsb
fimull
divb
ds
fdivs
inc
in
xor
jo
mov
and
or
into
and
mov
or
add
push
wbinvd
lret
out
pop
xchg
mov
push
cmpsb
sub
and
int3
xor
in
mov
das
mov
js
out
mov
sub
cld
jae
pop
and
std
repz
push
pop
mov
mov
mov
loope
out
scas
mov
mov
mov
mov
out
cltd
imull
cwtl
xchg
arpl
outsl
fisttps
repnz
push
subb
jae
xchg
inc
dec
mov
dec
pop
rclb
outsb
dec
and
xchg
jge
lahf
push
inc
or
pop
out
fidivs
dec
ljmp
cld
xor
mov
bound
inc
test
sbb
lods
fs
jle
fstpt
cli
shrb
mov
hlt
mov
jg
xor
add
mov
imul
dec
stos
ljmp
cmp
and
fcos
div
into
jp
and
jns
in
clc
and
ljmpw
push
movsb
mov
jecxz
mov
add
hlt
pop
loope
sahf
lds
enter
testl
xchg
mov
fisubrs
push
inc
xor
xchg
mov
or
imul
hlt
add
adc
sbb
int3
test
mov
add
inc
sbb
add
xor
cltd
jl
jl
cmp
imul
xchg
push
sub
les
mov
xor
or
dec
push
cli
push
pusha
repnz
jmp
lock
call
inc
mov
jnp
stos
fisttps
sti
cmp
out
dec
mov
mov
push
ljmp
lret
mov
mov
mov
mov
push
or
and
cmp
sbb
push
test
sub
pop
cmp
mov
fdiv
push
loop
popa
das
adc
jl
pop
inc
fisubrl
out
dec
shlb
jle
scas
and
loope
mov
jo
and
xor
mov
xor
lds
lock
xchg
mov
popa
xchg
dec
stc
in
mov
cs
mov
mov
nop
xchg
clc
jl
cmc
jle
inc
scas
cmp
addb
mov
pop
sub
cmp
pop
mov
rorb
sub
movsb
xchg
les
imulb
das
jb
int3
test
enter
inc
sub
xor
sbb
cmpsl
or
loope
push
pop
cmp
ror
adc
inc
jp
js
dec
in
mov
ret
mov
adc
repz
jge
dec
fisttps
xor
les
push
iret
jae
and
scas
in
aam
lcall
or
jno
mov
aaa
in
jbe
call
xchg
loop
pop
clc
ret
cmpsl
je
inc
outsb
outsb
cmp
and
das
or
xor
iret
pushf
cmpsw
daa
adcb
out
dec
lret
mov
fdivrs
mov
mov
enter
cmc
mov
mov
cld
ret
clc
fbstp
inc
sub
repz
test
repz
jo
outsl
dec
lds
push
popf
rol
daa
rcr
gs
pusha
incl
inc
std
push
jecxz
dec
cmp
xchg
pop
pop
pop
cmp
scas
shlb
imul
out
push
dec
leave
jb
movswl
pop
or
mov
xchg
ficompl
test
lret
arpl
ja
repz
mov
movsb
inc
movsb
jmp
stc
xor
aad
ret
not
addr16
jmp
dec
shr
xchg
lods
in
fnstenv
cmp
ss
rcrb
scas
jmp
lret
arpl
inc
or
fs
cmp
bound
loope
in
cmp
out
insb
test
push
sbb
movsb
push
xchg
adc
ljmp
into
push
push
jo
into
mov
lods
inc
lea
pop
jb
sbb
and
int
out
xchg
cmp
pop
dec
jnp
sti
and
mov
xlat
sub
lcall
pop
pop
pop
push
into
arpl
push
fsts
sub
mov
into
inc
mov
sub
jo
cwtl
addr16
jl
cmp
fists
mov
ljmp
in
cmc
mov
inc
pop
popf
and
jns
pop
mov
mov
lea
and
roll
jp
jo
mov
ljmp
push
and
rcl
dec
cmpsl
outsb
jp
scas
dec
sarl
jge
aam
pop
out
mull
jnp
mov
dec
out
lcall
roll
mov
imul
pop
jge
paddw
push
pop
fwait
sub
jb
in
xchg
pop
stos
or
jne
stc
mov
xor
xchg
sbb
outsl
insb
sub
addr16
nop
xchg
pop
mov
sahf
aas
mov
movsl
ja
mov
sbb
xor
out
daa
fistpll
jae
xchg
aas
adc
je
shrb
push
pop
cmp
xchg
jns
jmp
xchg
dec
iret
xchg
pop
push
loope
lock
loop
push
les
adc
push
lret
out
jae
fdivs
fs
imulb
sub
or
adc
add
lock
and
mov
ljmp
ret
call
push
aam
and
mov
push
cmpb
hlt
sub
mov
push
aad
jae
or
mov
sahf
subb
push
mov
xchg
lea
sub
pop
xor
out
dec
aad
pop
jmp
loope
inc
xor
sti
out
std
xchg
dec
fidivrs
xchg
cltd
das
rclb
cwtl
xchg
stc
pop
sub
sub
es
dec
fcmovb
lods
push
sahf
pop
push
inc
clc
data16
mov
mov
aam
mov
jnp
enter
mov
test
fidivrl
xchg
xchg
inc
push
push
pop
mov
cs
adc
icebp
fmulp
pop
push
es
pop
sub
fisubl
pop
jl
notl
aas
adcl
rcrl
mov
out
inc
jle
xor
sarb
dec
imul
sub
adc
cmp
notl
int3
incb
out
cmp
jmp
push
gs
xor
xchg
dec
or
addb
mov
dec
lock
ja
adcl
inc
adc
xchg
sahf
stc
and
or
push
and
inc
sub
jns
out
fcomps
call
shrl
sub
push
lret
mov
pop
out
mov
pop
jnp
inc
and
fwait
adc
sbb
sarb
lahf
aaa
mov
sub
xor
mov
fadds
inc
pop
pop
cli
jnp
outsb
mov
push
sbbl
jle
dec
les
loopne
adc
sti
cld
and
cld
xchg
jbe
nop
and
cltd
and
notl
push
roll
out
add
push
loope
mov
test
cmp
stos
mov
adc
inc
mov
cld
xchg
pop
cmpl
push
mov
ret
jge
cmp
into
fisubrs
pop
pop
cmpsb
inc
add
into
adc
lods
mov
mov
lcall
nop
incb
rcll
out
insl
xor
outsb
pop
push
and
and
mov
adc
dec
or
mov
mov
jle
jmp
jmp
repz
dec
lret
mov
les
pop
jg
xor
movsb
push
sbb
xlat
jg
in
push
push
in
jne
movsl
pop
mov
rorb
lcall
pushf
out
pop
mov
test
imul
test
mov
add
add
inc
mov
pop
dec
movsb
sbb
push
mov
fisubrl
adc
es
pop
inc
push
dec
into
mov
dec
push
xchg
cmp
sub
aam
mov
test
and
lcall
sub
inc
iret
es
shr
push
push
push
pop
cld
shll
inc
sbbl
jbe
in
or
hlt
sub
lock
and
mov
push
nop
pop
decb
jae
jl
mov
xorb
outsb
jbe
ret
mov
add
push
dec
pushf
pusha
pop
xchg
fnsave
and
mov
orl
xchg
setg
sbb
adc
cmpsb
mov
inc
js
pop
pop
icebp
jb
or
add
call
sbb
sbb
cmpsb
js
push
dec
rcrb
xor
or
cs
jno
push
push
or
stos
stos
into
mov
stos
loop
out
out
cwtl
stos
mov
or
mov
rcll
xchg
inc
cmpsb
test
cmc
mov
fldt
sub
rclb
lds
subb
fs
push
gs
push
in
xchg
lret
lret
adc
in
jle
bound
fmul
jne
push
inc
cmp
pop
sub
sub
movsl
jne
mov
dec
mov
jmp
fwait
lret
test
xchg
jo
cmp
jb
pop
adc
mov
jp
ljmp
and
into
inc
mov
xor
push
les
icebp
push
sbb
xor
push
ret
movsb
jle
and
orb
dec
jle
or
or
insl
push
add
mov
dec
mov
push
lock
call
cmp
mov
xor
je
cmp
insl
hlt
inc
pop
push
hlt
mov
fcmovbe
ja
mov
push
sub
lcall
mov
pop
pop
mov
loope
mov
sti
ja
lret
mov
and
dec
mov
adc
lret
xor
movsl
sub
fisubrs
or
out
jae
adc
js
inc
sbbl
shll
aad
sahf
test
stos
negb
lods
lods
pop
cmp
pop
fcmovbe
mov
and
xor
mov
mov
mov
mov
jo
stc
nop
jno
mov
adc
xchg
xorl
mov
les
clc
std
mov
push
jne
sbb
jl
xchg
fs
int3
mov
gs
or
cmovb
stc
mov
insl
imul
repz
xchg
adcl
out
and
mov
stos
in
jnp
ficomps
xchg
outsl
pop
jmp
imull
pop
addr16
in
jne
xor
lods
popf
add
and
adcb
mov
lret
jb
mov
xchg
jle
pop
xchg
gs
add
sbb
sub
mov
pop
daa
call
fwait
bound
dec
or
orb
add
scas
xlat
lea
icebp
add
jl
mov
push
xchg
mov
add
js
dec
mov
and
repnz
pushf
dec
fists
mov
les
pop
push
or
fisttpll
jns
outsb
add
cwtl
xor
jns
cli
dec
sub
fistpll
fstpt
cmp
stos
out
mov
mov
or
pop
mov
xor
mov
jns
mov
mov
scas
out
test
rorb
arpl
inc
push
mov
pop
dec
fidivs
insl
ret
aad
outsb
xchg
imul
add
adc
jbe
fbstp
sbb
inc
pop
cmc
out
inc
es
popa
shlb
sbb
mov
sbb
add
js
outsb
cmp
test
ret
ljmp
adc
repz
shll
sbb
push
in
sub
sbb
popf
xchg
or
int3
popf
xchg
mov
imul
repnz
pop
loope
sbb
xor
xchg
in
and
sub
mov
xchg
add
faddl
cmp
ret
test
lret
or
popa
fstps
push
fstl
outsb
sbb
jp
jg
sub
mov
add
rolb
inc
pop
ds
sbb
inc
addl
mov
inc
orb
nop
or
or
cmp
push
jmp
out
mov
insl
daa
jp
add
jge
push
int
mov
incb
push
xlat
dec
stos
mov
pop
pushf
xor
xor
inc
fisubrl
stos
cld
arpl
aas
aas
xchg
in
aad
or
fwait
sub
cmp
mov
hlt
jl
jb
sub
call
std
negb
jmp
sub
dec
sub
fsubr
mov
daa
or
mov
loop
xchg
mov
fcoms
jle
xor
stos
jo
outsb
push
cld
mov
stc
aas
xor
call
xadd
arpl
and
cmpsb
mov
or
sub
xchg
int3
or
xchg
decb
jno
and
inc
mov
fnstenv
push
jo
jp
stc
inc
add
mulb
jbe
add
imul
aam
subb
or
ds
stc
sbb
mov
popa
pop
lods
mov
arpl
rcr
repnz
cli
jne
cmpsb
mov
dec
xchg
es
fwait
jecxz
stc
std
lock
idivl
mov
dec
shrl
push
iret
jno
loope
mov
in
aad
mov
ds
adc
mov
lcall
mov
cli
mov
push
mov
xchg
cmc
daa
imul
in
shlb
mov
xor
jbe
mov
mov
inc
jmp
jmp
mov
in
mov
or
xlat
cmp
jae
scas
je
sub
mov
cld
aad
loope
push
pop
or
icebp
shrb
icebp
aas
inc
jge
dec
jns
xchg
nop
cmpsl
sub
ret
mov
repnz
push
imul
dec
xor
jae
mov
add
mov
out
pop
xchg
add
pop
lret
adc
pop
lea
sub
push
pop
fimuls
nop
jno
icebp
sub
dec
jp
aam
dec
xor
andb
popf
test
std
enter
incb
in
cmovno
dec
push
lahf
imul
insl
xor
in
adc
sbb
pop
and
add
push
jns
loopne
loope
mov
andb
das
adc
bound
int3
dec
dec
cs
scas
nop
cmpsb
push
imul
test
mov
add
test
pop
loop
and
dec
inc
aad
jle
lcall
xchg
fwait
stos
mov
in
cli
jo
dec
mov
sti
cmpsb
cmpsb
in
arpl
jns
cmpsl
ret
push
ja
in
insb
xchg
outsb
cwtl
or
je
push
mov
jle
push
shrb
mov
mov
push
add
wrmsr
push
xor
aaa
lcall
adc
loopne
cmp
inc
inc
andl
push
bnd
aas
dec
mov
mov
sbb
es
pop
gs
out
dec
es
loopne
and
mov
push
int3
outsb
xchg
das
jmp
push
sub
sbb
push
fisttps
fs
rdpmc
iret
int
xchg
push
and
scas
mov
dec
cmp
rcrb
insb
inc
inc
cli
xor
loopew
add
gs
es
cmpsl
jb
scas
mov
sbb
cmp
or
fimuls
lock
cld
pop
sub
mov
out
and
sub
cmp
lret
rcll
test
xchg
push
sbb
leave
pop
daa
into
movl
jb
cmp
sbb
rcrl
cmp
mov
stos
shll
mov
fsubrl
jecxz
inc
jnp
ss
cli
arpl
test
sarl
push
scas
dec
gs
fbld
jmp
cli
in
lahf
int
pop
pop
jp
aas
rorl
jbe
movsl
xlat
hlt
std
jmp
adc
cmp
cld
mov
inc
pop
xor
lea
ret
lret
lea
ret
pop
repz
fnsave
cld
inc
fdivrl
nop
enter
rcl
add
push
mov
hlt
ja
mov
jl
or
mov
cmp
lss
stc
or
dec
sub
sub
jp
stos
ss
push
sbbb
std
pop
stos
insb
cmp
pop
jnp
arpl
dec
mov
or
cs
fwait
loope
in
mov
jne
adc
hlt
negb
out
mov
push
jns
mov
mov
or
icebp
addr16
or
jl
ret
cmp
mov
aam
sub
loop
fisubs
push
adc
mov
xlat
icebp
push
fiaddl
mov
stos
mov
xchg
cli
imul
lcall
push
ds
sub
push
fwait
lods
pop
sub
repnz
aad
cmc
xor
vpackuswb
adc
loope
fwait
push
ja
or
xchg
add
lahf
and
addr16
inc
stos
fdivrs
out
xchg
adc
loop
xchg
daa
inc
sbb
pop
dec
ja
aad
scas
jle
sahf
shl
lock
or
xchg
push
loopne
shr
cmp
test
push
in
cmpl
cmp
lcall
movsb
in
pop
mov
repz
sub
mov
mov
dec
mov
ljmp
adc
mov
les
lods
push
mov
push
push
jo
aaa
ljmp
arpl
jae
enter
lea
xor
xor
testl
movsl
adc
cmp
mov
popl
les
cmp
out
push
ficompl
popf
sbb
sub
fisttps
dec
adc
es
fidivl
mov
mov
js
mov
clc
add
cmp
pop
sahf
std
frstor
pop
movsb
mov
rclb
in
push
inc
push
dec
sahf
addr16
cltd
movsb
jge
cmp
ds
pusha
test
bound
mov
jecxz
cltd
cs
loopne
jg
sbb
sub
repnz
jl
sahf
icebp
mov
mov
negb
mov
xchg
cmp
sbb
out
pop
fbstp
lock
jg
cmp
in
shrl
ja
cld
add
clc
arpl
enter
cmpsl
xchg
iret
in
shll
push
pusha
inc
ss
test
fcmovu
pop
aam
and
dec
movsl
mov
jle
sub
mov
xchg
or
add
int3
and
cmpl
push
inc
sub
add
xchg
std
jge
pop
repnz
shrl
sub
dec
mov
notl
test
sbb
mov
xor
cmpsb
or
xchg
mov
adc
push
int
imull
jmp
push
xor
hlt
add
jge
jl
dec
mov
sub
aam
test
xchg
test
shll
pop
sbb
lods
fwait
movsb
loopne
push
loopne
mov
dec
add
dec
adc
sahf
fwait
mov
fldt
xchg
lea
pop
enter
sub
addl
and
test
mov
in
mov
or
lods
faddl
and
push
loopne
rorl
out
adc
sub
push
mov
fldcw
push
pop
ja
sbb
cmp
stos
adc
sub
and
push
mov
mov
inc
add
out
push
movsl
mov
rcrb
jecxz
mov
lods
bound
and
je
pop
pop
inc
lods
cmp
add
xor
and
lods
push
sbb
mov
or
pop
mov
int
sbb
dec
test
stos
jae
leave
std
cwtl
mov
sbb
pop
push
push
push
fwait
cmpl
popl
es
mov
outsb
jb
sbb
sbbl
shl
mov
mov
ja
ss
and
mov
in
adc
shrl
xor
add
jecxz
mov
xchg
lcall
jmp
xchg
cmp
incb
pop
ss
jecxz
sbbl
push
mov
std
or
movsl
std
adc
and
lahf
jbe
aad
add
inc
std
cmp
sbb
aas
inc
incl
je
roll
sub
sub
arpl
add
dec
sub
lds
movsl
scas
pop
pop
clc
mov
sbb
pop
mov
aam
lock
faddl
out
leave
jmp
fisttps
out
dec
mov
mov
jbe
ljmp
push
test
cld
mov
lret
dec
sbbb
imul
jle
mov
add
pop
xor
dec
pushf
rcll
clc
add
lahf
out
int3
mov
push
movsb
outsl
adc
into
sarl
in
mov
test
or
mov
adc
test
inc
or
fsts
jb
insb
in
call
cld
xor
fdivrl
jae
or
pusha
push
lock
mov
ljmp
rcll
xchg
xor
jle
jp
int
cmp
jmp
or
iret
psubd
lea
int3
xor
pusha
sti
jne
int3
inc
sub
cld
jp
lahf
dec
hlt
mov
test
movsl
stc
lahf
orl
aaa
xor
pop
dec
adc
cmpsl
stos
xchg
push
sarl
sbb
rcrl
in
xchg
xchg
in
fwait
jmp
das
or
xor
xchg
popf
fs
ret
imul
imul
pop
popa
sahf
add
sbb
or
fstpt
rorl
xchg
push
add
mov
and
cmp
lret
inc
push
faddl
xchg
mov
dec
filds
add
imul
mov
mov
inc
ja
leave
flds
pop
decl
movsb
aam
ss
pop
ficompl
add
test
ss
push
push
in
insb
mov
fdivs
out
pop
or
and
inc
add
mov
mov
sub
mov
adc
ret
dec
mov
test
hlt
andl
out
xchg
push
cmpsb
mov
sbb
aas
hlt
or
jecxz
push
mov
icebp
outsb
test
push
mov
test
mov
das
outsb
jg
fidivrl
imul
movsl
test
scas
sti
dec
lahf
movb
jle
daa
adc
daa
pop
push
pop
repnz
xchg
sub
xchg
inc
mov
dec
cmp
mov
pop
shlb
xchg
cli
cmpsb
stos
in
mov
jl
pushf
movsb
jg
xchg
push
adc
push
xchg
sarl
testb
sub
sti
mov
dec
les
das
mov
mov
xor
cld
mov
lods
cli
xchg
out
push
dec
adc
xchg
jae
and
inc
addr16
sbb
jns
sbb
push
sti
sti
adc
mov
xchg
push
std
int3
pop
sub
les
pusha
cmpb
xchg
inc
imul
je
mov
and
addr16
jge
or
adc
bound
sbb
push
pop
push
cmp
out
repz
and
movb
iret
cmc
or
push
rcl
bswap
rolb
sbb
mov
ljmp
mov
fsub
shl
test
leave
loope
hlt
pop
pop
clc
push
mov
sub
popw
mov
test
cld
cmp
dec
lods
vsubss
ljmp
test
sub
lcall
imul
xor
inc
pushf
push
stos
or
in
pop
punpcklwd
mov
inc
xchg
mov
xor
inc
fnstcw
lret
inc
scas
add
cld
bound
roll
mov
popf
dec
incl
jb
scas
sbb
faddl
idivb
xor
cmp
sti
rorl
jp
pop
cmp
loope
push
loop
cmc
arpl
pop
cmp
and
stos
sti
sbbl
xchg
shlb
jae
lods
rorb
xor
icebp
jle
pusha
test
pop
add
inc
shrl
mov
in
push
call
scas
pop
out
add
adc
or
dec
jnp
jmp
mov
add
daa
outsb
decb
sahf
sub
add
je
andl
xlat
xor
fildll
js
pop
leave
cs
inc
stc
rcr
lret
mov
mov
cmp
sahf
lret
inc
sub
fistpl
test
mov
push
int3
mov
inc
aad
push
pop
xchg
ret
clc
push
repnz
xchg
divb
jae
outsl
iret
lcall
dec
sahf
les
cmp
movsb
dec
out
in
fsubl
mov
or
xor
fisubs
lcall
pop
fadds
ja
les
cmp
or
inc
je
mov
inc
mov
cli
adc
cmpsl
mov
pop
jecxz
arpl
jmp
div
sub
xor
mov
xchg
aam
mov
sub
pop
mov
jb
lret
daa
jo
xor
fistps
xchg
lea
xlat
adc
shl
das
ss
or
iret
scas
and
orl
mulb
pop
rclb
bound
jne
xchg
sub
and
add
xor
sub
jns
dec
xor
pop
es
push
inc
jmp
dec
and
adc
scas
outsb
adc
arpl
hlt
aam
xchg
fmuls
pop
and
or
shrb
push
cwtl
js
imul
pop
mov
and
sbb
stos
fs
mov
sub
icebp
sub
mov
inc
rorl
rorl
sub
mov
insl
scas
lods
imul
pop
pushf
int
pop
pop
pop
or
xchg
push
jmp
cmp
or
push
jl
jns
push
pop
sbb
sub
out
cs
outsl
sti
fdivl
push
aam
clc
aad
aaa
enter
mov
stos
xchg
pop
adcb
into
aas
fdivs
mov
fprem1
jns
cmp
into
jge
cmp
sbb
inc
dec
stc
cmc
lds
cld
leave
mov
mov
outsl
dec
mov
repnz
push
xchg
push
or
push
xchg
insl
loope
mov
rcl
ret
push
stos
inc
lds
out
and
jmp
dec
stos
or
inc
push
subb
and
xchg
mov
cs
ja
fwait
cli
stos
pushf
movntps
jecxz
pop
int
jnp
sub
adc
clc
enter
or
xchg
movsl
pop
stc
jnp
xchg
repnz
into
adc
lock
rcll
shlb
pop
jae
pop
iret
lea
inc
idivl
movsl
add
mov
adc
daa
add
nop
je
push
cmp
std
cmp
int
out
in
dec
cmp
mov
sahf
xchg
addl
mov
into
sahf
push
xchg
cmpsb
cmp
jmp
inc
jle
adc
and
cmp
jp
push
sbb
es
push
jnp
in
jmp
imul
call
dec
loopne
xchg
push
xchg
ljmp
mov
xchg
sar
cmp
push
or
andb
dec
pop
aam
push
std
add
arpl
sbb
incl
jbe
sub
int3
add
jp
cmpsl
in
mov
in
mov
test
add
or
movsl
test
inc
lea
push
mov
fldcw
pop
xchg
lcall
jnp
pop
sahf
divl
or
mov
js
cmp
fildl
inc
mov
inc
mov
fisttpl
add
inc
inc
test
push
xchg
ss
aaa
mov
mov
incb
stos
pop
xor
inc
cmpsl
or
fstl
shrl
jle
inc
call
std
lea
mov
jo
mov
lret
mov
push
gs
int3
sub
lret
aad
ret
xchg
sarl
cmp
mov
idivl
nop
mov
sbb
xchg
cmp
enter
test
repnz
xchg
mull
ret
ljmp
insl
lahf
lds
fs
sti
ror
sbb
test
test
pop
mov
and
aaa
mov
fs
imul
xor
out
stc
in
jns
push
push
pop
sbb
lret
bound
sub
leave
lock
cwtl
adc
push
inc
add
pop
push
pop
nop
sbb
pop
sub
lods
xor
pusha
sub
xor
xchg
out
into
inc
mov
ljmp
negb
std
orl
test
cmp
mov
pop
fnstsw
lods
cmp
mov
and
adcb
pop
cmp
fcmovnb
lods
or
xchg
inc
nop
dec
popf
call
test
icebp
mov
sti
adcl
inc
pop
adc
adc
fiadds
adc
sahf
mov
stc
mov
fisttpll
pushf
jne
sti
jle
cmp
pushf
and
mov
jb
mov
cmp
das
subl
fcoml
push
adc
dec
jns
jecxz
xchg
jbe
pop
jb
movsl
cld
dec
insl
lahf
pop
mov
xchg
xchg
addr16
fs
movsl
scas
cmp
push
lret
sub
sub
sbb
jmp
push
sbb
popa
in
lret
add
int
xchg
bound
daa
or
xchg
ja
mov
cli
shl
push
xor
sub
jns
rcll
decl
push
insb
pop
adc
mov
test
dec
testl
push
cmp
cmpsl
cwtl
xchg
adc
ja
ret
aam
rclb
mov
mov
mov
js
fcmovnu
repnz
dec
stos
ljmp
inc
pusha
mov
mov
stc
cmp
xor
stc
enter
hlt
imul
cmpsb
cmp
sbb
out
mov
out
pop
mov
in
jbe
ljmp
sbb
lea
loop
cmp
out
lahf
and
xchg
shlb
and
pop
popa
insb
mov
bound
loope
dec
repnz
stc
add
sbb
js
in
xchg
mov
pop
push
cmpsl
test
popf
jnp
fcompl
pop
lods
xor
fdivrp
cmp
cmp
sbb
lea
lcall
cmp
push
fwait
data16
scas
or
insl
lds
mov
out
hlt
xor
js
lods
loop
lcall
inc
mov
xchg
adc
push
ds
gs
inc
scas
dec
sahf
sbb
add
jl
leave
mov
cmpsl
xchg
push
lret
push
dec
mov
into
addr16
popa
pop
push
push
jmp
daa
or
or
sub
and
nop
subb
jb
aad
pop
fs
cs
sub
stc
jmp
lahf
repz
cmc
cmp
mov
aaa
cli
adc
cmp
movsl
test
sbbb
push
push
jb
mov
pop
popa
sbb
testb
mov
jae,pt
test
loop
cmpsb
xor
push
or
ds
push
and
sti
shl
inc
sub
mov
fadd
pop
lret
out
mov
xchg
pop
xchg
jbe
push
pop
sub
push
rcr
fdivrs
fsincos
inc
insb
push
scas
mov
xchg
mov
aad
dec
test
xchg
cmpb
mov
sbb
and
and
ljmp
add
das
mov
scas
cmp
dec
iret
xchg
sar
mov
push
call
jmp
pop
jge
ja
fsubrl
into
std
mov
inc
fs
mov
pop
mov
xchg
lods
clc
mov
das
cltd
inc
cmp
imul
adc
mov
mov
out
push
add
sbb
aas
dec
movsb
ret
sarl
and
fdiv
jbe
jno
push
sub
push
test
mov
mov
jns
mov
cmp
ja
push
cld
sahf
fisttps
popa
push
dec
popl
bound
cmpsl
fcomip
lods
mov
or
xchg
mov
ffreep
int
nop
dec
inc
or
add
nop
or
sub
fs
sub
test
popf
nop
cli
dec
insl
mov
mov
push
xor
aas
stos
arpl
add
mov
shl
loop
push
data16
pop
pop
pop
ss
add
iret
xchg
mov
xor
push
jbe
rcll
push
cld
mov
cmpl
test
or
mov
movsb
cmp
adc
fucomi
sarl
jo
into
fidivrl
cmp
jecxz
mov
cs
scas
ds
pusha
cmc
sub
out
mov
fwait
push
mov
enter
repnz
jns
das
pop
sub
fistpl
xchg
cli
mov
iret
adc
inc
jb
sbb
cmp
dec
mov
adc
test
jecxz
xchg
fcmovnbe
lret
mov
test
add
jecxz
pop
lds
mov
es
mov
dec
sub
in
inc
mov
in
inc
inc
ret
and
dec
fwait
sbb
mov
adc
mov
in
xchg
mov
lea
loope
mov
push
cmp
dec
sbb
ret
ret
sbbl
sbb
push
cmp
pushf
cmp
cmp
dec
cmpsl
jge
inc
pop
lret
mov
mov
or
jle
jmp
out
add
jno
dec
inc
fwait
popl
sub
jl
frstor
leave
int
out
xchg
mov
lods
xchg
jb
add
loop
dec
daa
rolb
dec
cmp
je
ljmp
cmp
pop
dec
addr16
lcall
stos
popf
mov
outsb
adcb
fdivr
xor
sbb
jbe
repz
mov
push
mov
jb
inc
dec
add
stos
loop
in
push
shll
in
inc
scas
cli
sbb
xchg
stc
inc
fcmovne
mov
dec
xor
sub
out
cmp
adc
add
ret
and
bound
inc
lret
repz
mov
xor
jnp
arpl
xchg
cwtl
dec
inc
out
stos
pop
pop
xchg
xchg
lods
lret
pop
jns
push
je
aad
mov
sub
dec
mov
fbstp
and
int3
pop
repnz
push
popf
jb
in
fs
sahf
scas
xchg
and
jo
dec
iret
into
daa
push
hlt
in
or
mov
sbb
mov
pop
inc
jae
xchg
outsl
inc
test
fisttpll
jo
sbb
call
cmp
fidivs
jo
shl
inc
mov
rcll
movsb
cwtl
mov
popa
mov
inc
repz
push
push
lds
cmp
jne
push
dec
mov
fidivrl
jle
mov
in
xor
sbb
pop
testb
jmp
dec
subl
mov
xchg
bound
insb
lret
pop
movsb
int
jecxz
and
push
xchg
xchg
mov
test
aam
add
adc
shlb
pushf
and
popf
adc
frstor
mov
shll
cltd
sbb
push
push
or
pop
sub
test
daa
cwtl
js
xchg
int
jge
test
xchg
nop
push
lcall
ss
stc
aaa
lcall
cld
and
pop
and
iret
mov
push
xchg
inc
mov
jnp
std
in
outsl
xchg
xor
mov
xchg
in
push
pop
pop
cmp
bound
andl
sbb
push
pop
jge
sbb
adc
pop
lret
cmpsb
add
aaa
adcb
dec
mov
out
push
mov
cmpl
xor
mov
adc
mov
cmp
and
and
xchg
sti
adc
jnp
sbb
iret
sub
das
rcll
mov
call
and
xor
adc
xor
adc
ja
xor
cmp
test
fsubrp
or
test
js
and
lcall
leave
lcall
and
shr
stos
lret
gs
fstps
int
lret
test
jmp
pop
cmp
gs
int3
mov
xor
push
fidivrs
rorb
pushl
and
mov
sbb
jo
outsl
xchg
scas
cmp
cmp
jp
and
fldl
and
lcall
enter
or
mov
jno
cltd
incl
mov
jecxz
outsb
int3
xchg
test
popf
push
scas
movsl
cltd
xor
xchg
xchg
daa
adc
in
cmpsl
in
in
popf
cmp
popf
mov
sbb
push
inc
in
test
dec
scas
adc
pop
leave
movsl
jle
mov
arpl
frstor
icebp
neg
int
mov
movsl
jb
fcoms
std
sub
je
dec
pop
cli
out
jns
cs
in
adc
mov
sbb
jo
fidivl
loop
outsb
add
mov
das
xchg
les
clc
pop
imul
aam
stos
and
dec
and
cwtl
push
mov
xchg
jbe
outsb
into
xlat
das
sub
cmp
test
hlt
bound
out
fisubs
jnp
mov
call
mov
sub
adcb
pusha
mov
and
repz
or
adc
jns
mov
ds
push
mov
mov
jge
jmp
jle
inc
xchg
test
mov
hlt
loope
xchg
jno
or
imul
fucomi
sbb
cmpsl
ds
sbb
mov
jg
push
push
push
loope
adc
dec
adc
lods
sbb
popf
cmpsb
mov
xchg
sbb
xchg
push
aaa
mov
jecxz
lea
fstps
add
rcl
pushf
mov
pop
jge
push
outsl
cmpb
xchg
mov
ja
shll
jge
hlt
fisubrl
repz
test
call
lds
xchg
and
sbbl
pop
lcall
sbb
es
fcomps
mov
mov
xchg
sbb
ljmp
leave
stos
xchg
lahf
pusha
mov
xor
out
inc
popf
in
movsb
mov
mov
push
testl
ret
sarl
xchg
hlt
cmp
push
in
xchg
shlb
push
lahf
aad
cmc
out
gs
imul
test
xchg
test
lret
pop
xchg
push
vpsubq
push
fcom
mov
repz
sub
add
in
sub
js
aad
cmp
shrb
out
jmp
inc
pop
jae
pop
jns
dec
pop
dec
add
cmpsl
loope
dec
inc
cld
sbb
pop
jp
lcall
jo
test
std
pop
mov
xchg
jns
cmpsl
xorl
stos
mov
les
add
movsb
test
push
jge
jb
popf
test
adc
into
mov
inc
inc
mov
icebp
test
xchg
push
inc
sarl
les
mov
mov
aaa
notl
lcall
stc
xchg
add
addr16
pop
add
add
push
sub
add
jecxz
out
pop
test
test
cwtl
adc
call
rcr
push
pop
mov
push
xor
add
sub
pop
aad
and
sub
stc
push
xchg
cli
mov
cmpsb
xchg
jb
mov
dec
mov
test
xchg
or
sti
daa
scas
sub
leave
fs
inc
insb
adc
lods
or
lds
jmp
cld
pop
clc
ss
mov
sbb
ljmp
or
cmp
lods
enter
pusha
cmc
call
ja
adc
or
mov
mov
out
call
jg
fsubrl
bound
into
xor
stos
xor
cs
fs
xchg
adc
push
push
iret
aas
jecxz
filds
dec
arpl
addr16
std
mov
xor
pop
add
push
xchg
adc
mov
mov
mov
rclb
fisubs
inc
call
xchg
or
pop
decb
pop
xor
jmp
es
jae
dec
stc
fwait
out
fcomps
sahf
or
mov
lret
adc
stos
dec
xor
sti
xchg
ljmp
inc
fwait
cwtl
mov
cmpb
lea
push
pop
lahf
xchg
insl
jns
and
sbb
adc
adc
xor
push
pop
dec
out
test
rorl
inc
add
cmp
call
add
ss
sub
sub
fnstsw
jae
shrl
cmpsb
jbe
pop
and
mov
push
sbb
mov
adc
inc
xchg
enter
jbe
push
xchg
xchg
insb
push
mov
rcrb
xchg
xchg
mov
and
fisubl
sub
and
push
jb
dec
mov
jae
aaa
jb
cmp
or
jns
ss
pushf
cmpsl
dec
out
mov
pop
xchg
fldt
jmp
lds
je
mov
stos
nop
xchg
arpl
inc
add
test
push
jl
add
hlt
jnp
testl
ficoms
fcoms
in
pop
push
or
aad
mov
add
mov
xchg
lret
dec
and
aas
fildl
jne
add
sub
dec
add
ret
jne
movsl
fcomp
mov
push
test
repz
or
and
push
scas
movl
dec
pop
test
xor
adc
enter
xor
lret
mov
mov
imul
cmp
xor
stc
push
xchg
rorb
mov
insl
xor
mov
cld
stos
and
mov
cmc
stc
xorb
std
inc
or
cmc
rcrl
mov
mov
lods
mov
out
in
rorb
push
push
aaa
cmpl
xor
sub
in
and
aas
push
sbb
mov
pop
xchg
push
ljmp
les
mov
mov
js
mov
dec
inc
mov
push
jne
sbb
insb
jno
fxch
push
mov
xchg
mov
dec
inc
mov
outsb
add
mov
mov
push
adc
cmpsl
cmc
dec
add
dec
mov
sub
xlat
fwait
pop
scas
pop
nop
jecxz
in
inc
or
mov
pop
xor
mov
cmp
inc
mov
ror
sbb
add
push
aaa
jle
andb
fcmovnu
xor
cs
and
out
repnz
fwait
imul
adc
cmp
mov
enter
add
jmp
sbb
mov
andl
push
and
push
and
add
cmp
ret
sub
xchg
mov
pop
push
mov
notb
xchg
push
dec
loopne
incl
ss
inc
inc
inc
pusha
cmpsb
adc
nop
shlb
cmpb
andb
jg
je
andb
lds
pop
jg
shrl
out
pop
push
sbb
fst
call
std
into
pop
xor
mov
mov
loope
lret
xor
mov
das
jge,pn
testl
fiadds
pop
bound
out
fldt
xlat
mov
pop
or
sub
subb
mov
xorl
jecxz
ror
pop
xor
sbb
shl
cvtps2pi
cwtl
push
nop
xor
pop
adc
aad
pop
enter
mov
cmp
lcall
adcb
mov
das
sub
cmovne
or
sub
aam
or
xor
xlat
cmp
or
xchg
test
adc
cmp
ja
cmp
ret
jg
inc
int3
out
push
lcall
stos
xchg
dec
pop
sbb
adc
imull
add
repnz
mov
loope
lds
or
imull
pop
shl
leave
cmp
stc
mov
out
outsl
out
pusha
test
xchg
sbb
add
xchg
call
daa
jne
pushf
out
and
daa
mov
stc
repnz
push
rol
lahf
push
lahf
mov
add
orb
and
aaa
mov
mov
inc
jecxz
fsubs
hlt
and
inc
shrl
shl
shrb
push
int
or
fwait
subl
cmpsl
cvtps2pi
pop
fs
xor
cwtl
inc
cltd
dec
cmpsl
jne
add
movsl
push
scas
sbb
and
sbb
popw
pop
ja
lds
adc
xor
fucom
aas
loopne
cli
inc
inc
mov
clc
xchg
dec
imul
movsb
leave
out
mov
dec
add
cmp
stos
sub
imul
add
sarb
das
subb
pop
enter
push
shl
loop
cmp
jnp
or
movsl
out
fcomp
outsl
jge
mov
cli
and
popa
out
adc
inc
loope
in
cltd
mov
mov
or
or
pop
out
jns
cmp
pop
out
ljmp
cs
push
shrb
xchg
xor
xor
rclb
add
and
cwtl
imul
repz
testl
fucom
das
add
add
pop
dec
movsb
fldlg2
fsubp
ja
jns
cmp
or
stos
mov
dec
or
lods
insl
adc
stc
daa
mov
pop
jnp
cmp
movsb
sbb
insb
jae
in
jbe
ss
imul
test
lock
pop
inc
and
xor
pop
or
mov
addr16
lret
mov
jge
xor
rcrl
mov
lods
int
subb
adc
push
popa
inc
enter
mov
cmp
jne
lahf
cmpsb
cmpsb
mov
push
mov
sbb
std
jns
push
test
stc
loop
mov
lods
and
mov
ja
add
nop
and
dec
xor
subl
das
inc
mov
outsb
push
test
sub
push
ficomps
imul
cwtl
add
jg
out
inc
pop
sub
js
cmp
aaa
pushf
mov
jmp
fldcw
xchg
sahf
xor
pop
into
ljmp
add
das
pop
push
cmp
mov
dec
je
std
jo
dec
pop
ds
mov
or
sti
dec
out
inc
push
hlt
adc
adc
leave
ss
jge
push
loopne
pop
fs
leave
fsubrs
jb
stos
xor
push
sbb
in
mov
add
or
or
inc
in
dec
in
sbb
xor
rcr
jno
notb
mov
in
sahf
mov
adc
push
daa
leave
xchg
adc
daa
sti
jnp
mov
rcrl
scas
aaa
mov
out
data16
and
mov
out
mov
mov
and
rcll
ja
add
mov
mov
xor
nop
scas
adc
mov
and
cwtl
cltd
cltd
cmc
aam
and
push
in
das
ret
add
push
inc
or
stos
mov
and
sub
sub
test
xchg
pop
rolb
dec
push
jns
movsb
scas
or
in
adc
dec
rorb
dec
sti
sbb
addr16
cmp
mov
pusha
ret
sahf
dec
pusha
and
xor
lcall
rcl
mov
ljmp
push
add
ret
mov
inc
jecxz
addr16
mov
push
inc
call
or
mov
int3
lea
adc
xchg
test
sub
into
sbb
gs
aad
add
lods
int
mov
pusha
hlt
pop
inc
dec
mov
bound
push
adc
xlat
loop
pusha
push
xor
sub
fcmovne
mov
mov
out
repnz
push
in
pop
pop
std
dec
cmp
faddl
movsb
lods
jns
mov
fisttpll
popf
adc
dec
mov
and
jecxz
push
xor
lods
sub
sub
mov
loop
push
mov
xchg
and
loop
xor
mov
add
dec
xor
loop
out
addr16
pusha
add
ds
pop
inc
mov
ficoms
fsubl
ficompl
dec
sbb
pop
and
pop
add
lds
test
sbb
push
pop
sub
dec
dec
daa
mov
pop
aas
inc
pop
pop
mov
into
ret
aad
mov
jne
cwtl
pop
addr16
mov
stc
jge
test
fiadds
pop
cwtl
fstpt
cmp
dec
pop
xchg
and
inc
sub
movsb
mov
mov
dec
inc
aad
sbb
xchg
mov
mov
bound
daa
ds
faddp
add
data16
jns
jb
dec
xlat
ljmp
pusha
rorb
dec
lret
fldt
xchg
push
faddl
adc
stos
out
xchg
iret
ret
fs
jmp
aaa
ret
imul
xor
and
out
xchg
or
inc
push
pop
in
adc
fcoms
jno
mov
xchg
adc
xor
xor
mov
loopne
jnp
mov
inc
mov
cli
mov
add
push
xchg
repnz
ret
jae
loopne
frstor
es
stos
dec
loope
in
sbb
pop
stc
xor
sub
cmp
pushf
dec
ret
push
test
push
dec
xchg
ret
mov
push
aad
cltd
dec
jecxz
call
adc
dec
xchg
mov
sbb
dec
dec
xor
jl
enter
cs
lret
push
xor
xchg
xor
push
movsb
add
and
pop
aas
pop
dec
outsb
xchg
push
fsts
in
mov
mov
jne
xchg
xchg
sahf
rcl
out
cli
movsl
push
imul
xor
in
mov
iret
jmp
cmpsl
dec
push
inc
loop
or
and
cs
lods
js
cwtl
out
push
fstl
jg
les
cmc
pop
jle
aam
das
loope
arpl
in
daa
push
jmp
scas
dec
je
rcrb
addl
iret
sbb
jo
xor
sub
or
sub
push
jnp
dec
jl
stc
out
cwtl
vpsubq
loope
iret
mov
loope
test
aad
push
imul
xchg
sbb
and
clc
pop
dec
sarb
xor
int
test
sub
jne
inc
shrl
or
pop
or
mov
pop
pop
out
pop
or
pop
je
sub
popa
dec
adc
mov
orl
jae
xchg
sbb
push
push
ds
repnz
imul
repnz
and
mov
data16
lret
sub
and
stos
icebp
pop
push
insb
xor
call
das
xor
int
icebp
push
or
leave
repnz
push
js
push
sbb
xlat
cmp
fmull
xor
lea
hlt
cmp
mov
jnp
popa
push
and
sar
or
clc
and
ss
loopne
adc
inc
inc
das
dec
mov
xor
repz
pop
sbb
dec
icebp
icebp
mov
adc
int3
lret
jl
ret
lea
ja
jmp
jg
dec
loope
sub
mov
nop
mov
sub
and
imul
aam
pushf
aad
daa
iret
mov
pop
sti
push
imul
sti
shlb
in
push
push
call
jns
out
loop
sti
jl
jp
lods
enter
jo
outsb
out
es
or
sbb
or
aam
or
mov
fwait
enter
outsl
pusha
les
lds
sbb
imul
cmp
and
lret
fdivrp
test
pusha
movsl
pop
xchg
mov
das
stos
sar
cmp
out
repz
adc
or
aas
mov
jbe
scas
repz
cwtl
fcomp
pop
cmc
fsts
out
sub
cmpsb
jae
das
and
cmp
push
cmpsb
ucomiss
fstl
pop
arpl
enter
xchg
xor
repnz
dec
imul
inc
and
iret
jmp
sbb
in
jp
pop
and
rcl
repz
les
push
clc
rcrb
inc
mov
in
sbb
enter
xor
jmp
shll
xchg
mov
inc
push
push
jmp
xor
insl
call
std
jecxz
leave
mov
push
dec
fs
push
popa
aas
dec
sub
lcall
js
push
neg
jmp
pop
test
test
sub
fbstp
scas
push
adc
mov
inc
mov
push
lahf
ds
inc
inc
std
mov
cmp
sbb
push
add
mov
cmp
dec
nop
sub
sub
push
dec
jp
mov
mov
or
dec
popl
sub
out
pusha
sbb
icebp
test
and
jg
cmpsl
mov
pop
or
fwait
imul
mov
push
lahf
sahf
leave
sbb
xor
fildl
or
lea
add
pop
cmpsl
push
out
sti
adc
data16
shlb
sar
push
sbb
push
sub
inc
jg
sbb
int3
add
pop
mov
pop
mov
loop
roll
inc
sub
andb
sub
mov
dec
adc
or
mov
lea
lret
xor
sub
mov
xchg
push
mov
ds
cltd
cli
mov
ret
ljmp
pop
aaa
mov
lds
xor
xchg
out
shr
je
mov
sub
pop
sbb
out
dec
jbe
adc
ret
imul
sub
jl
push
ret
insl
or
xchg
push
fstpt
add
into
mov
push
mov
iret
adc
lods
in
lcall
adc
lock
xor
adc
mov
dec
jnp
sahf
sbb
leave
sbb
sbb
insl
mov
sub
jb
mov
cmp
and
jmp
add
dec
xlat
fbld
or
push
bound
cmpsl
jne
adc
aas
mov
mov
in
ret
stos
iret
or
shl
shlb
add
test
xor
jne
sbbl
imul
and
iret
xchg
mov
shl
dec
test
ficompl
in
aas
mov
lods
enter
adc
push
push
add
xor
std
leave
pop
cmpsl
sbb
mov
sbb
push
add
xchg
test
mov
test
pushf
repz
ljmp
rolb
sbb
xchg
mov
sbb
rorl
jb
test
xchg
and
andl
inc
gs
add
in
sub
sbb
mov
inc
addl
daa
mov
int
and
jmp
mov
xor
loop
jle
inc
sub
xchg
out
or
lret
inc
js
pop
mov
sub
insl
and
cmp
ja
cs
fldcw
push
dec
out
fwait
insl
push
adc
loop
inc
xchg
lock
cmp
test
sub
mov
sti
adc
imul
sub
add
bound
fistpll
scas
pop
je
and
sub
lahf
leave
stos
ljmp
pop
lret
sub
jae
mov
cmp
add
mov
adc
enter
imul
jp
cmp
in
sbb
lcall
fcoms
dec
stos
mov
xor
lcall
inc
xor
push
mov
sub
push
mov
jge
cmp
inc
sahf
bound
scas
inc
xchg
jae
push
add
inc
dec
jge
stc
jp
mov
and
icebp
repz
add
or
dec
push
test
pusha
shl
push
sbb
ret
inc
loopne
ss
fninit
ret
xchg
outsb
cmp
and
roll
mov
pop
stos
repnz
cli
dec
inc
adc
mov
int
call
or
ficomps
in
jg
mov
dec
pop
jns
cmp
loop
inc
mov
dec
inc
xor
jg
push
sbbl
fstpt
mov
add
jb
xor
adc
cwtl
test
int
inc
outsl
stc
adcb
jbe
roll
cmp
aam
insl
int3
out
in
or
cmpb
bound
jns
dec
xchg
lret
xchg
jae
stos
ss
or
shrl
xor
pushf
add
push
ja
jae
and
fidivl
out
insl
pop
push
lcall
imul
imul
outsl
inc
or
add
sub
mov
and
adc
shr
enter
imul
push
or
lods
jl
fistpll
push
movsb
hlt
lea
inc
push
cmp
push
fidivrl
push
jl
test
xchg
in
sub
push
xlat
xchg
and
mov
mov
mov
mov
in
call
sub
or
add
repz
push
outsb
test
pop
rcll
out
dec
nop
mov
push
push
pop
stos
fs
adc
stos
mov
pop
pop
rolb
mov
sbb
inc
lcall
or
sti
jp
mov
jecxz
loopne
jne
mov
roll
or
mov
inc
jno
add
jecxz
icebp
stos
cmp
and
jmp
movsl
xchg
xchg
jmp
push
dec
pop
cmp
and
stc
in
or
adc
cltd
jne
sbb
jns
adc
loope
nop
in
test
aaa
insl
jbe
xor
push
mov
jo
stc
outsb
jle
mov
cmp
idivb
xor
xor
jae
or
shll
icebp
loope
cmp
xchg
sbb
xor
mov
rorb
mov
popf
aas
adc
rcrl
pushf
into
leave
push
cmp
pop
add
cmpsb
test
jb
fs
sub
xor
fisttpl
pop
out
mov
mov
lds
cld
std
adc
cs
mov
dec
push
mov
sbbb
imul
cmpsb
dec
inc
stc
addr16
mov
pop
cmp
sub
hlt
popa
std
pop
jmp
jae
es
lar
arpl
mov
mov
insb
and
lret
push
adc
jo
pop
push
leave
push
inc
mov
es
out
xor
lcall
add
mov
xor
imul
mov
or
idivl
lret
movsb
jp
cmp
rorb
rcrb
testl
inc
mov
cli
and
mov
out
cwtl
jl
jp
xchg
pop
inc
sub
lahf
lock
aaa
arpl
sbb
adc
stos
mov
dec
pop
mov
xlat
cwtl
sti
les
mov
mov
clc
jmp
pop
mov
pop
mov
or
xchg
sub
lock
lea
fmull
xor
sbb
pop
loopne
gs
cmp
sahf
pop
xor
pop
xchg
lret
xchg
push
shll
outsb
dec
ss
jecxz
hlt
xor
inc
hlt
stc
pop
pop
mov
mov
loopne
shlb
cmp
add
ja
pop
sub
push
inc
fxch
stos
jo
pop
mov
xchg
std
mov
mov
popa
mov
test
pop
add
push
cmp
testb
fbstp
ret
fprem
sub
pushf
adc
push
inc
push
or
loop
jno
mov
mov
les
shr
cmpsb
shll
adc
cmc
es
mov
imul
aam
rclb
jge
add
insl
faddl
add
xchg
mov
mov
push
add
mov
nop
mov
mov
in
sbb
les
push
data16
jno
das
push
repnz
push
cmp
jge
out
mov
or
aam
xor
inc
adc
xchg
mov
mov
push
add
jg
and
fwait
test
mov
jge
jmp
imul
xchg
addr16
mov
lods
pop
fisttpll
lcall
loop
pushf
test
cld
mov
add
int
cmp
push
sbb
mov
dec
or
stos
mov
sbb
jno
inc
xor
int
push
sub
xor
cld
ret
adc
push
lock
jg
in
adc
add
aad
push
enter
cld
sbb
push
ljmp
mov
scas
pop
xchg
loopne
add
xchg
dec
mov
inc
pop
jmp
xlat
adc
pop
cmp
ret
icebp
cmp
fistpl
lds
imulb
mov
cltd
xchg
mov
cmpsl
or
mov
mov
push
mov
sub
addr16
jb
sbb
cmpsl
xchg
shll
xor
aam
inc
push
lods
inc
popw
into
loop
sahf
or
ret
pusha
xchg
add
xchg
dec
popf
adc
or
test
or
lds
add
stos
stos
daa
out
insb
loopne
cmpsb
sub
cmp
loopne
jne
pop
mov
jle
outsb
ret
in
stos
xchg
jge
jb
stc
fstl
inc
xchg
aas
outsb
int
rol
push
dec
add
loopne
inc
mov
test
and
mov
pop
xchg
insl
sbbb
roll
sub
rorb
jae
sbb
dec
push
push
icebp
les
mov
mov
pop
mov
push
jo
rcl
aam
pushf
push
cmp
repnz
gs
mov
jae
ja
jmp
inc
cli
sub
mov
mov
scas
lods
cmp
jnp
sub
dec
mov
pushf
dec
jmp
out
inc
mov
arpl
jge
jp
mov
mov
scas
push
sti
xchg
and
subb
mov
aad
stos
rolb
scas
insb
push
jge
push
pop
fwait
insb
mov
in
ficoml
add
movsl
adc
adc
icebp
test
mov
push
mov
inc
movsl
dec
adc
rolb
test
push
das
jne
push
clc
icebp
iret
stos
movsb
cmp
or
repnz
mov
es
lods
xor
jae
cmp
jg
call
cmpsb
pavgb
add
inc
and
mov
mov
imul
jecxz
jne
sub
mov
rcll
mov
sub
lahf
popa
test
sahf
inc
xchg
mov
or
pop
out
sub
add
scas
pop
in
dec
dec
or
jno
mov
mov
add
ljmp
or
sbb
fdiv
lods
and
pop
mov
imul
sub
je
cmc
jl
sbb
call
test
or
bound
pop
xor
arpl
fbld
shr
cmc
mov
and
nop
insb
push
ljmp
mov
lods
xchg
call
aad
outsl
xchg
in
flds
sub
jmp
and
rorb
mov
cli
pusha
cwtl
mov
xor
aas
arpl
sub
ss
push
movsl
mov
movsl
cs
pop
sub
cmp
push
repnz
adc
loope
hlt
out
jge
sahf
xor
loope
mov
adcl
sbbb
cmpsl
repnz
sub
dec
sahf
push
dec
inc
sti
arpl
movsl
sbb
add
loopne
dec
pop
fs
xchg
imul
inc
mov
ljmp
repnz
cli
and
cmp
add
mov
xor
clc
or
movsb
cmpsl
xchg
fwait
mov
negb
jb
jno
jne
sub
into
jl
inc
mov
fs
jecxz
test
mov
fwait
xor
inc
cld
inc
imul
push
xor
cli
iret
dec
xchg
insl
jl
shrl
dec
xor
cmpsl
fldenv
jge
sbb
mov
nop
xchg
dec
xor
xchg
stos
sbb
sbb
push
scas
shrl
test
jnp
das
jge
popf
jo
or
jno
loop
cmp
out
repz
rcl
rcr
and
sbb
mov
jp
pusha
cmp
fcmovnu
add
inc
adc
pop
gs
sbb
cmp
mov
jae
xchg
ret
addl
sub
mov
jae
mov
xchg
xor
xchg
push
cmpsb
sub
mov
or
std
and
push
pop
xchg
adc
mov
push
mov
leave
pusha
ffree
mov
mov
xor
mov
xor
cmp
fnstcw
gs
jmp
repz
pop
nop
pop
dec
cmpsl
ljmp
inc
adc
push
inc
add
mov
xor
cmpsb
pop
xchg
sub
inc
jnp
pop
mov
in
dec
push
in
mov
and
cld
pusha
stc
jle
jp
add
sub
add
push
cmp
mov
jae
in
jmp
jle
cs
popa
lea
pop
iret
xchg
inc
jecxz
pop
scas
pop
mov
cmp
sbb
das
inc
adc
lds
jmp
xchg
aaa
adc
sbb
sbb
push
push
pop
add
je
xchg
lcall
add
mov
mov
sbb
pop
daa
dec
in
mov
push
push
or
aam
ljmp
cmp
sub
push
and
jl
mov
pop
push
incl
inc
popa
jns
jp
inc
data16
mov
inc
inc
lret
gs
xor
xchg
mov
aas
loope,pn
pusha
cmp
adc
int
sub
bswap
ret
cwtl
mov
pop
xor
hlt
jmp
cld
jno
pop
out
push
xor
ljmp
mov
call
dec
fnstenv
andl
inc
xor
xor
repnz
or
jg
add
dec
mov
pop
lcall
sbb
and
dec
pop
jae
iret
adc
dec
xor
sbb
dec
and
aaa
jo
popf
test
add
and
and
jp
jns
jg
mov
sbb
jle
fstl
mov
add
sbbl
cmpsb
push
andl
inc
dec
out
pop
xchg
jae
push
in
jnp
jno
pop
xor
jg
add
int
roll
les
xchg
fbstp
call
in
sbb
add
lods
jbe
popa
push
xor
test
xchg
adc
dec
and
or
pushf
or
fwait
ljmp
jo
inc
or
test
int3
jns
sahf
out
outsl
push
adc
loopne
mov
daa
push
arpl
in
mov
cmp
sbb
ljmp
cld
pop
pop
or
shlb
arpl
xor
jnp
enter
mov
xorb
and
movsb
and
test
xor
push
cltd
ret
movsb
xchg
xlat
push
and
cmp
mov
dec
and
movsl
flds
mov
shrl
pop
mov
sub
adc
xor
jnp
std
cmp
shrb
inc
jmp
call
jbe
mov
mov
das
xlat
scas
cmp
push
add
xchg
cld
pushf
subb
dec
inc
sarl
sbb
lock
pop
xor
mov
jge
or
in
mov
daa
aam
outsl
aad
xor
inc
lcall
cli
cltd
loope
stc
in
xor
jbe
xchg
push
cmp
cmc
mov
lret
dec
lock
dec
leave
push
shrl
fsts
xchg
shlb
stos
daa
je
daa
lret
mov
lret
pop
jne
jmp
add
mov
mov
xchg
mov
mov
shr
xchg
movsb
jne
fwait
push
fistps
call
clc
out
sbbb
fcompl
mov
sub
mov
lea
cltd
jno
push
and
xchg
mov
roll
pop
hlt
insb
sub
cli
dec
cmpl
iret
and
jge
push
adc
pop
xor
xchg
mov
inc
es
xor
sbb
sub
mov
sbb
leave
out
mov
cli
push
dec
lahf
fmuls
push
push
mov
out
inc
ss
dec
sub
cs
push
cmp
gs
in
in
mov
add
cld
inc
lods
or
inc
ret
inc
inc
xor
inc
loope
adc
push
ficomps
pop
dec
adc
test
push
cwtl
adc
or
or
sti
or
jmp
add
push
mov
inc
sahf
std
xchg
cli
je
and
pop
lock
ja
cmp
rolb
add
xchg
jne
lods
or
rclb
mov
add
cmp
xor
jg
dec
rolb
push
divl
push
sbb
ud0
jne
mov
add
dec
ret
lods
xor
pusha
sbb
leave
shll
out
lds
aad
xchg
mov
repnz
aad
cmpsl
arpl
push
lret
fcmovbe
jge
pop
or
out
fs
mov
ljmp
inc
push
add
cmpsl
fldenv
out
sbb
and
mov
jnp
or
outsb
pop
add
jecxz
nop
or
addb
push
mov
sbb
lret
mov
scas
cmp
lret
or
scas
dec
dec
add
push
xchg
mov
mov
push
push
ficoms
insb
outsb
flds
loope
cmpsl
dec
mov
mov
jmp
out
dec
lret
adc
cmc
adc
cmpsl
lcall
push
xchg
js
fiaddl
scas
mov
and
and
mov
add
jb
shrb
sub
jno
fldcw
jb
loope
cmp
mov
add
mov
or
stos
pop
jns
mov
mov
sub
jns
outsl
pushf
sub
push
mov
movl
mov
insl
mov
jg
adc
test
push
repnz
jp
sarb
xchg
sub
mov
lods
lea
fildl
dec
inc
mov
or
inc
insb
sahf
lea
lock
jns
pop
cmp
fwait
pop
cmp
xlat
jmp
cld
lods
or
out
mov
xchg
inc
sbb
dec
loope
cmpsb
mov
dec
nop
inc
xor
xor
inc
jno
or
decl
mov
xchg
call
dec
jle
lahf
adc
aas
stos
mov
or
test
fcomps
dec
aas
nop
fistpl
push
inc
scas
hlt
push
xchg
inc
pop
cmpsb
xor
inc
cmp
mov
xchg
mov
cwtl
lahf
test
xor
xchg
js
lahf
mov
cli
xchg
lcall
mov
lock
test
jmp
mov
push
mov
sub
lahf
xchg
lds
outsb
sbb
cli
enter
push
jecxz
inc
cld
rorl
in
push
jp
mov
cmpsl
xchg
outsl
xchg
mov
scas
cld
popa
cmp
xchg
adc
xor
int
mov
push
insl
push
aad
test
sub
xchg
pop
cmpl
sar
popf
xlat
mov
xchg
ror
cwtl
pop
out
mov
dec
push
pop
loop
mov
and
das
xchg
into
mov
dec
xorl
mov
sub
lret
je
xor
jl
mov
imul
loope
sub
jo
or
push
psubsw
push
dec
insb
mov
pop
xorl
ljmp
je
pop
cmc
mov
ja
jb
pop
ja
mov
filds
filds
mov
mov
lcall
daa
pop
inc
lds
push
test
pop
xchg
popa
arpl
imul
rclb
lahf
xor
mov
je
cwtl
push
and
pop
mov
lods
cmp
cmp
sbb
enter
lret
xchg
shlb
das
pop
aam
pushf
mov
mov
shlb
insl
cwtl
mov
pop
sbbl
cmp
mov
sub
and
dec
mov
fimull
lret
mov
add
or
dec
nop
jnp
inc
repnz
add
inc
jecxz
loope
lcall
cmp
pop
cmp
cld
outsb
xchg
mov
adc
mov
lret
mov
mov
jmp
jo
je
pop
and
rcrb
mov
and
addb
or
inc
mov
lds
pop
aad
test
lahf
in
pop
fsubrp
adc
pop
aam
adc
add
mov
movsb
ret
push
dec
gs
or
mov
mov
lret
notb
repz
xchg
fcoms
xchg
cmpsb
out
dec
dec
sti
or
div
subb
in
mov
popa
in
je
loopne
sbb
adc
insb
jnp
cmp
cmp
inc
nop
push
sbb
fisttpll
pop
jmp
icebp
fld
jns
mov
xchg
xor
xchg
adc
push
in
add
lds
adc
sbb
push
std
fcoml
mov
push
jmp
and
outsl
ljmp
repnz
inc
data16
scas
and
lcall
push
into
xchg
in
dec
fmuls
stos
pushf
ret
add
sti
movsl
mull
dec
negb
sti
test
lret
dec
sti
in
and
mov
push
pop
and
push
pop
lock
arpl
xor
mov
and
add
push
orb
or
lret
enter
adc
pop
sub
popf
pop
popf
xlat
mov
in
mov
filds
mov
sub
add
aad
xchg
lcall
hlt
cltd
sti
or
int3
adc
int
rorl
rcll
imul
ds
jo
dec
mov
mov
xchg
mov
inc
ret
jb
inc
outsb
and
push
into
sub
sbb
or
inc
lods
test
jge
and
lahf
xchg
adc
aad
popa
sbb
push
jae
loopne
inc
push
int
jecxz
nop
lea
lret
add
shll
push
inc
pop
pop
xor
in
push
xor
aas
stos
or
sbb
sbb
mov
adc
xchg
mov
pop
add
jbe
int3
test
sub
mov
and
add
ret
adc
cmovp
cmp
jno
into
pop
scas
stos
push
cld
cmc
scas
test
cltd
sbb
ja
lods
out
cmp
sti
je
jp
imul
jl
es
fsubs
scas
gs
lret
push
mov
jbe
push
mov
jp
add
jp
sbb
test
outsb
test
mov
aaa
lret
mov
insb
adc
jl
cmc
jbe
and
loope
es
lea
jns
mov
jb
adcl
outsb
arpl
and
mov
ror
dec
or
mov
cmpsl
dec
push
cmpsl
imul
out
jmp
mov
testb
inc
neg
imul
das
insl
fstps
jp
cmp
repz
and
fstps
les
push
cmp
sti
rcll
and
pop
mov
add
xor
lds
push
cld
out
inc
cmp
add
repnz
pop
adc
xor
cmp
inc
xorb
mov
sti
xchg
lds
insb
xorb
and
dec
mov
dec
mov
or
and
jge
or
xchg
mov
inc
das
popl
ss
dec
daa
jmp
mov
mov
insb
xchg
test
stos
out
lea
dec
jae
nop
push
sahf
and
push
mov
scas
dec
movsb
mov
inc
mov
cmp
xor
cmp
lea
aam
cmp
lret
and
xchg
fs
lahf
mov
loopne
icebp
int
rclb
cmp
pop
or
movsl
mov
fwait
inc
and
sub
inc
push
cmp
mov
jbe
lahf
mov
push
xchg
sbb
out
in
add
push
or
cmp
inc
dec
cltd
mov
adc
inc
inc
mov
hlt
push
dec
push
sub
out
cmp
dec
mov
sub
xchg
adc
cld
rorl
aam
mov
imul
xor
js
or
pop
add
cs
clc
mov
popf
xor
ljmp
fisubrs
xchg
xchg
stc
movsb
xor
hlt
aaa
shrl
pushf
push
testb
les
lret
clc
stc
and
cltd
aad
or
add
cmp
aad
jecxz
sbb
dec
and
push
test
pusha
pop
xor
imul
mov
mov
les
jmp
adc
test
xor
inc
jge
cmp
add
xchg
ljmp
shl
pop
imull
push
push
call
shr
aaa
test
pop
fldcw
je
in
cmc
lret
popf
add
xor
push
pop
test
pop
jae
xchg
xchg
ja
adc
cmp
adc
scas
ss
push
pop
roll
jmp
fldenv
mov
jle
ds
xor
xorb
cmp
pop
jge
mov
insb
add
les
jge
adc
sbb
pop
fdivrl
fs
jp
mov
jmp
repz
fldt
push
pusha
lods
in
jl
mov
adc
je
xchg
cmp
lahf
dec
std
aas
xchg
and
cmp
movsb
lcall
mov
shll
xor
sbb
sub
into
mov
iret
lods
xor
addl
std
mov
cli
movb
js
pop
cs
add
push
decb
das
push
mov
aaa
add
jnp
aad
les
xor
dec
jle
jo
jns
pop
nop
add
movsb
leave
add
xchg
dec
in
add
dec
xor
cmpsb
fisttps
pop
xchg
add
popa
into
xlat
inc
sub
inc
sahf
popf
add
jecxz
xchg
test
pop
andl
jnp
xor
rclb
cmp
mov
and
ret
adc
mov
xchg
pushf
cmp
lret
mov
mov
adc
sbb
cmp
jge
jecxz
mov
pushf
adc
cld
xchg
mov
jge
push
and
leave
pop
sub
fsts
adc
dec
popf
iret
mov
out
into
iretw
adc
mov
jg
pop
pusha
mov
insl
mov
sub
inc
lods
add
push
call
cmp
cmp
jb
jb
xchg
mov
jnp
pop
cmp
xchg
push
rsqrtps
loope
jae
pop
dec
adc
dec
mov
pushf
adc
inc
inc
ret
add
mov
mov
out
scas
pop
mov
mov
pushf
inc
stos
pop
cmp
lds
lret
push
and
fldl
loopne
push
mov
and
test
fdiv
in
dec
mov
imul
or
sbb
js
adc
jbe
subl
xchg
inc
xchg
sub
push
xor
pop
mov
pusha
scas
push
fidivl
bnd
adc
dec
jl
push
or
jns
push
addb
loope
into
stos
testl
xor
sub
icebp
lret
dec
pop
or
sub
sti
xchg
sbb
push
mov
lods
pop
pop
icebp
pop
ds
mov
cli
daa
cmp
or
and
jne
push
nop
fmuls
bound
cltd
loop
int
mov
popf
and
inc
xorb
sub
mov
or
xchg
dec
sub
dec
in
lods
icebp
mov
mov
sbb
and
lock
rcll
add
aaa
cmp
in
imul
pop
stc
inc
or
dec
pop
sbb
push
mov
push
push
jnp
repnz
or
ret
daa
test
test
mov
adcb
cmp
xor
jg
ss
lcall
out
jp
fs
fsubrs
fsubs
adc
mov
sbb
idivb
dec
xchg
aad
test
aad
xor
xchg
jecxz
and
push
pop
xchg
repnz
jl
mov
add
mov
cmc
mov
or
cmp
arpl
push
hlt
xchg
jmp
dec
mov
pop
subl
mov
add
fbstp
psllq
lods
lods
in
lret
ret
ucomiss
add
mov
addl
std
loopne
add
shl
mov
inc
out
inc
pop
dec
push
xor
push
in
jb
push
pop
test
pop
mov
sbb
or
xchg
in
pop
and
sbb
jp
sub
xchg
push
movsl
repnz
test
hlt
jge
out
add
add
pop
popa
rorl
enter
andl
clc
outsb
mov
adc
dec
ljmp
mov
rcrb
cmc
jge
pop
inc
pop
leave
std
scas
arpl
or
xchg
mov
iret
jmp
sub
hlt
dec
mov
push
outsw
jle
xchg
bound
add
add
shr
fsubrs
jl
pop
dec
roll
add
mov
jl
cs
pop
mov
or
sub
mov
dec
pop
ret
in
xor
test
lret
pusha
push
or
cmc
shrb
scas
push
fcmovb
ss
stos
arpl
aad
out
xlat
stc
scas
add
dec
pop
shll
lret
xchg
ss
lcall
insb
in
cmpsl
xchg
jge
xchg
pop
lret
cmp
ret
shlb
adc
out
call
movsb
test
ja
in
jne
add
mov
push
stos
or
lods
and
dec
sbb
arpl
test
adc
mov
mov
in
imull
loop
xor
lcall
pusha
pop
lock
xor
bound
imul
inc
in
sti
push
mov
ror
xchg
lods
aas
dec
jge
sub
mov
jns
cmp
xchg
jl
adc
aad
jb
adc
adc
xor
mov
cmpsl
inc
pop
inc
idivl
lret
les
jp
imul
mov
pop
or
clc
mov
inc
stos
pop
pop
enter
pop
cli
push
movsl
xchg
mov
mov
xchg
data16
lock
lret
mov
cmc
push
call
stos
ds
ret
aas
sti
in
pop
loopne
out
hlt
lds
mov
insl
mov
pop
fwait
jbe
inc
das
cmp
inc
std
mov
mov
mov
jp
imull
fdivrs
aad
jecxz
cmp
leave
cmc
or
insb
cld
stos
lea
inc
arpl
cmp
scas
dec
jg
push
mov
stos
sub
rcll
cmovae
rclb
and
out
and
clc
lea
aam
inc
addr16
push
clc
daa
js
test
in
sbb
cmc
sub
mov
scas
les
mov
and
out
sbb
in
mov
jmp
and
jo
cmovbe
leave
push
push
push
mov
pop
movl
sti
xchg
pop
sti
movsb
inc
imul
shlb
shr
rol
aaa
xor
and
lods
cmp
push
pop
dec
mov
imul
in
js
mov
outsb
cmc
fsubrs
sahf
shrb
jb
mov
mov
scas
les
int
xor
inc
jnp
repz
lcall
dec
scas
jmp
push
insb
cltd
mov
mov
lods
xchg
clc
sub
push
adc
cmp
roll
ds
jns
sarl
mov
jns
and
clc
sub
stc
stos
aam
mov
sub
push
sbb
xchg
or
xorb
cmp
push
xchg
cmpsb
push
dec
xchg
pop
inc
fsubl
xchg
rcrl
mov
pop
cmp
cwtl
mov
lret
jecxz,pt
pop
out
scas
in
inc
mov
and
inc
std
mov
addr16
verw
dec
rcrl
stos
dec
ret
fs
mov
mov
or
ljmp
dec
jbe
inc
fsubs
es
jg
inc
int
shll
loop
stos
ljmp
icebp
cmp
incl
jne
push
cs
push
jae
and
mov
mov
cli
out
addr16
push
and
fwait
sarb
xchg
clc
test
lret
popa
push
movsb
fsts
popf
outsl
rcrl
imul
push
movl
and
mov
sub
cmp
jae
pop
das
ss
xor
dec
inc
dec
loopne
mov
pusha
idivb
mov
push
xchg
jge
xchg
in
sbb
cmp
mov
pop
popf
xor
int3
out
adc
mov
aad
js
daa
xchg
sarb
mov
sub
push
sub
push
push
push
mov
stos
jge
adc
out
mov
push
inc
mov
lahf
mov
gs
and
jbe
cmpsl
fbstp
push
stc
popa
inc
or
lret
jle
pushf
icebp
add
mov
push
es
adc
pusha
jb
xlat
ljmp
incb
aas
test
dec
sbb
pusha
imul
or
mov
jmp
mov
xchg
or
dec
in
add
js
daa
lret
and
aam
xor
adc
ljmp
ret
mov
xchg
insb
mov
fwait
mov
adc
fwait
add
and
mov
mov
mov
les
mov
lds
mov
mov
lcall
lds
add
or
mov
dec
adc
xchg
and
xchg
ret
jmp
xchg
jne
cmc
loope
add
jnp
scas
mov
add
inc
arpl
jae
xchg
and
mov
insl
mov
cli
sub
cs
hlt
xorl
out
out
inc
out
data16
bound
lea
push
xchg
fpatan
pop
pop
call
or
jbe
push
sub
or
cs
mov
inc
test
sbb
aaa
sub
mov
push
xor
inc
xor
and
add
cmp
cmp
in
out
or
aaa
mov
lret
push
out
cmp
negl
mov
inc
push
arpl
mov
adc
and
add
pop
mov
dec
mov
repz
iret
pop
lea
lcall
mov
mov
and
jecxz
xor
popa
cmc
rorb
das
jae
mov
xor
add
cli
arpl
out
lock
das
inc
xchg
mov
scas
mov
je
daa
push
in
in
int3
test
inc
test
adc
adc
test
mov
adc
cmpb
xchg
xor
and
cli
sub
popf
sub
je
cmp
mov
imul
and
sbb
mov
mov
arpl
je
jmp
sub
sbb
sbb
push
lret
or
push
pop
xchg
dec
out
mov
out
les
mov
sbb
movsb
call
cs
jns
or
lods
vpor
das
push
dec
jle
lods
push
imul
pop
xchg
fistps
decb
out
imul
shl
push
sbb
cwtl
sub
mov
inc
fs
aaa
inc
dec
fsts
push
pop
int
jl
push
pop
pop
jbe
adc
mov
jbe
or
adc
push
icebp
xchg
mov
mov
add
mov
dec
pop
stos
jecxz
push
std
push
mov
loope
inc
leave
jae
push
setnp
jecxz
out
jp
out
popf
fnstcw
imul
rol
adc
loop
mov
out
mov
aas
or
test
subb
movsl
adc
gs
dec
jp
sub
sbb
push
dec
pop
clc
lods
repz
in
pop
mov
push
outsl
int3
jne
subl
imul
push
les
xor
dec
lods
jp
xor
test
fstl
or
scas
sbb
sub
aaa
scas
outsb
cmp
js
dec
fidivrl
out
dec
fcmovnbe
sub
ds
push
push
mov
andb
xchg
cltd
jno
inc
jp
push
insb
push
dec
pop
cmpb
mov
fisttpl
xchg
das
lea
leave
fld
out
int
test
mov
sub
shr
outsb
cmc
test
shrb
jl
mov
lock
mov
mov
inc
std
jnp
xor
out
ret
xor
pop
mov
pop
pusha
cmpsb
cltd
int
sub
iret
int3
aaa
jecxz,pn
jmp
imulb
bound
rorb
mov
out
inc
jle
mull
out
daa
dec
js
adc
adc
or
sbb
add
mov
sbb
dec
insb
in
pushf
xorb
mov
inc
lea
pop
mov
inc
js
xor
mov
aam
ret
popa
movsb
mov
xor
and
mov
enter
bound
in
lods
imul
lock
or
lods
out
lods
mov
insl
dec
push
jp
add
xchg
addr16
and
dec
and
mov
insb
dec
mov
adc
mov
sahf
xchg
xor
cli
daa
push
lods
push
jecxz
out
jo
and
sbbb
sub
in
push
push
jle
xchg
nop
inc
add
dec
push
mov
test
xor
leave
fmul
mov
stos
adc
add
adc
jnp
jbe
mov
into
dec
inc
int3
in
xor
jne
mov
dec
push
cld
ds
jg
test
aam
cmpsl
icebp
or
cld
mov
cmp
dec
adcl
lds
js
aas
lock
addr16
jp
sbb
dec
cmc
sub
or
stc
insb
mov
inc
mov
shrb
and
mov
push
orb
or
stc
adc
xor
cltd
out
imull
mov
js
add
and
shlb
inc
mov
rcrb
jge
cmp
add
lea
push
adc
push
mov
xor
cltd
aad
and
das
faddl
push
sub
fidivrl
fistpll
fcoms
stos
adc
push
repz
dec
cli
xorl
fmuls
push
add
sub
inc
cmp
xlat
jle
mov
bound
sti
in
stos
aad
fsubr
stos
gs
sti
fwait
xor
push
or
cmp
push
jnp
inc
adc
aam
popf
daa
sbb
or
or
sub
xchg
fsubrl
aas
je
cmpsb
mov
sbb
jl
cmp
jne
pop
daa
jmp
divl
incl
sbb
push
sub
mov
cmp
movl
das
sar
push
mov
and
jmp
mov
loop
adc
add
dec
lods
cmp
or
sti
mov
push
jge
dec
movl
aas
push
int3
pop
inc
mov
or
rol
mov
sub
sub
cmp
push
xchg
ss
insl
cld
xor
es
push
xchg
out
inc
popf
ret
inc
stos
faddl
add
movsb
outsl
std
fildl
subl
outsb
sbb
in
ljmp
mov
lahf
es
dec
mov
and
les
repnz
fchs
pop
and
push
sbb
icebp
ds
shlb
bound
data16
jecxz
popa
aam
subl
xchg
aam
jns
jmp
rorb
lock
mov
mov
fmuls
scas
lret
mov
inc
jmp
stos
out
sbb
movsl
push
pop
pusha
mov
pop
leave
push
cmp
and
and
xlat
outsl
and
loop
lods
icebp
pop
mov
mov
pop
xor
mov
insl
adc
push
loopne
push
not
loope
inc
dec
xchg
xor
movsl
aad
add
ret
outsl
ret
dec
xor
and
add
mov
push
mov
dec
js
mov
fdivr
cmc
out
loop
jmp
js
cmp
aam
lock
pop
fidivl
nopl
mov
pop
inc
outsl
lock
add
std
stos
mov
cmpsl
inc
test
cmp
dec
inc
lcall
xchg
sub
cmpsl
lock
or
popf
lods
xchg
mov
or
or
loope
push
mov
dec
xchg
pushf
fldt
sbb
out
test
mov
sub
leave
pop
scas
or
sub
xchg
xchg
push
les
adc
cwtl
rorl
dec
rcrl
movsb
popa
adc
adc
je
add
dec
into
loopne
pop
xor
incl
sbb
sbb
push
mov
insb
js
rcr
lds
into
es
push
jbe
pop
mov
cmpsb
pusha
sub
jmp
and
inc
sahf
addr16
test
addr16
in
jle
pushf
inc
xlat
gs
enter
mov
inc
cs
sub
movb
prefetch
or
jl
mov
test
aaa
test
int
mov
hlt
out
and
hlt
dec
add
dec
arpl
mov
outsl
mov
lods
cmpsl
movsb
mov
push
sbb
ret
pop
mov
mov
fdivr
scas
lahf
cmpsb
sbb
dec
pop
pop
es
or
in
test
mov
ret
inc
mov
jb
jns
jb
pop
cmp
push
cld
fcomp
inc
ljmp
pop
lea
imul
es
rorb
movsl
fidivl
and
js
push
and
hlt
in
mov
jbe
mov
outsl
add
ja
ljmp
push
stc
in
pop
and
fidivrl
jle
out
push
add
xchg
paddusw
mov
lods
or
ljmp
data16
or
xor
ficompl
mov
or
xor
xor
test
xchg
and
or
pop
push
pop
mov
push
enter
dec
enter
aam
ljmp
leave
pop
or
mov
jp
pop
xor
xchg
push
or
movb
cmpsl
inc
fwait
cmp
aaa
call
mov
cs
xchg
pop
mov
outsl
stc
jnp
imul
out
arpl
jno
dec
jo
mov
mov
dec
or
and
dec
addr16
mov
roll
enter
js
sub
sbb
cmp
insb
add
push
sub
mov
clc
jns
jmp
aam
repnz
stc
hlt
dec
mov
std
mov
cwtl
push
mov
outsl
fisubrs
das
test
mov
pop
mov
fs
or
mov
ret
sti
inc
fnstenv
insl
and
inc
in
out
inc
xor
xchg
jo
lods
or
sbb
inc
stc
aas
mov
loope
pop
scas
cmc
bound
mov
adc
sbb
add
lahf
aas
push
rcll
sbb
stos
div
dec
insb
sub
and
jb
sub
and
push
and
popa
push
scas
sub
call
in
shlb
mov
mov
mov
dec
int3
sub
xchg
jge
or
xchg
outsl
mov
mov
outsb
ljmp
dec
mov
and
imul
test
jmp
dec
mov
jnp
shl
mov
sbb
adc
sbb
cmpsl
jle
repz
xchg
rorb
xchg
inc
mov
pop
cmp
addb
add
popf
push
mov
adc
jo
mov
fcmovnu
movsl
jmp
sub
subb
cli
arpl
cwtl
mov
xchg
push
lods
dec
jmp
clc
div
js
mov
or
imul
or
je
push
xor
imul
sarb
rcrl
and
fsubr
lea
xchg
pop
arpl
movsb
in
shll
jae
sub
cmp
lret
pop
rolb
cs
push
mov
inc
repz
bound
repnz
or
inc
subl
add
cwtl
inc
sub
mov
lret
or
es
in
xchg
cmc
push
push
push
out
cs
idivb
mov
add
imul
cwtl
ret
adc
jmp
inc
outsl
iret
lret
cmp
into
mov
mov
shll
pop
imul
dec
lock
movsl
adc
test
xchg
cmp
push
cmp
andb
enter
aam
push
test
pop
sub
imul
pop
pushf
cmpsl
or
fdivl
movsb
fistl
mov
and
ret
in
cmp
push
jmp
dec
lods
mov
inc
es
xchg
popaw
mov
aam
lret
mov
mov
nop
rol
out
mov
xchg
mov
add
mov
xor
loope
sub
xlat
mov
dec
icebp
jno
stos
in
enter
loope
imul
sub
ljmp
movsl
dec
cli
sub
sub
mov
adc
inc
push
leave
sbb
ljmp
mov
xchg
sub
jle
cmp
in
dec
xchg
inc
xor
out
std
imul
ficompl
in
scas
mov
and
xor
out
push
sbb
shlb
add
int
inc
shrl
scas
loope
sub
int
xchg
mov
xor
sti
cwtl
and
mov
lcall
dec
ficoml
fisttpl
fs
adc
push
jno
inc
push
incb
xchg
lret
idiv
movsb
xchg
adc
and
ljmp
and
lret
cmp
xchg
ljmp
inc
push
adc
lea
mov
pop
loopne
push
inc
lret
std
lea
test
andb
int
inc
and
and
xchg
mov
insl
scas
cmp
addb
cmp
in
ljmp
push
stos
dec
push
testl
test
mov
gs
push
cli
mov
out
mov
mov
and
sub
mov
mov
clc
sti
fstl
sub
rorl
jno
jle
int
push
sub
fwait
inc
ret
adc
mov
dec
out
aaa
das
dec
mov
jp
cmpsb
movsb
push
sbb
push
and
jae
adc
cmp
pusha
ljmp
sub
sub
fneni(8087
xchg
jl
push
fwait
jmp
jmp
jl
cmp
dec
push
ret
xchg
xor
mov
xchg
mov
arpl
out
test
inc
ljmp
and
imul
and
scas
dec
or
cmpsl
sbb
imul
xchg
aad
dec
jb
mov
testl
lahf
push
dec
dec
imul
cld
popa
xor
adc
pop
stc
daa
lds
or
aam
push
dec
out
adc
sub
fildl
sub
mov
in
nop
hlt
push
ja
aad
adc
popf
sbbl
loope
jmp
mov
push
and
mov
push
shlb
enter
push
xchg
clc
mov
sub
and
call
mov
mull
dec
cmp
adcl
jg
cmp
and
mov
mov
cld
inc
fsubrl
fisubs
xchg
fmuls
inc
repnz
inc
cld
shrl
mov
adc
jl
scas
add
adc
lds
les
add
rolb
mov
lods
pop
push
das
aad
cmp
clc
lcall
cmp
rcll
dec
jp
xchg
mov
dec
sub
aam
xchg
dec
or
andl
xchg
lcall
cmpb
sub
lods
aam
xchg
pop
push
jns
jl
jp
loop
das
xlat
push
daa
jecxz
fdivrp
xchg
subb
fistps
out
dec
add
xchg
push
xchg
push
outsb
jecxz
fsubr
addr16
mov
sbb
lds
fsubs
arpl
hlt
lret
ja
mov
outsl
outsl
loopne
test
cmp
and
icebp
sti
in
adc
pop
mov
jbe
xchg
mov
nop
or
jne
shll
in
cwtl
and
dec
xchg
mov
lahf
cmp
pop
iret
arpl
xchg
push
das
sbb
jo
inc
scas
jo
xchg
bound
and
popf
jno
mov
in
stos
xor
add
jo
nop
mov
orb
push
xor
clc
aaa
inc
sub
js
mov
cmpsb
mov
pop
mov
loopne
inc
lcall
aad
push
fiaddl
stos
leave
cld
movsl
xchg
divb
jge
addr16
inc
pop
cmp
mov
mov
cli
lcall
movsl
push
sub
jae
mov
or
call
mov
ror
scas
pop
xor
or
out
cld
pop
jbe
mov
inc
push
imull
inc
and
rcrl
cld
sti
pop
das
cs
addr16
insb
hlt
xor
mov
lds
jle
xlat
inc
and
jne
pop
cmpsl
pop
jnp
insl
ret
adc
xor
rcr
xchg
test
mov
cmp
inc
cmp
push
push
mov
push
mov
add
push
mov
cwtl
insb
int
imul
jl
dec
dec
jb
int3
pop
cmp
mov
enter
idiv
sbb
jb
xor
mov
icebp
mov
cmp
std
xor
jmp
aad
jae
sub
add
add
push
icebp
ss
loope
jo
das
icebp
push
ljmp
movsl
sbb
outsl
add
cli
shlb
fsubrl
sbb
or
aas
aas
sbb
in
inc
push
sub
xchg
gs
in
mov
les
cmc
movsb
push
fstl
or
mov
xor
xchg
push
popa
loopne
mov
sbb
into
es
lds
pop
jb
popa
and
inc
push
push
sbbl
fsub
and
clc
pop
mov
rcr
mov
aaa
cld
cs
pop
xchg
shl
and
xlat
movsl
mov
cmp
fiadds
sahf
out
pop
orl
cmpl
mov
imul
pop
insl
punpckhbw
das
repnz
pushf
xchg
inc
enter
fs
fnsave
dec
xchg
mov
push
xchg
dec
cmp
jae
xchg
sub
js
sti
and
int
lds
fs
out
mov
xchg
inc
push
sbb
scas
pop
cli
call
mov
inc
sbb
add
hlt
dec
push
cmp
jne
jb
ret
cmpsl
adc
sub
inc
call
sbb
mov
fldl
sub
decb
xor
movb
or
xchg
test
cmp
xchg
xchg
into
push
movsb
imull
imul
sbb
jl
imul
mov
xchg
int
jnp
cmp
pop
sub
inc
sarb
adc
aas
ds
ja
jg
push
imul
jb
shlb
jae
adc
xor
sahf
dec
dec
ja
mov
stc
fwait
bound
pusha
pop
dec
push
notb
daa
ficomps
negl
jmp
xor
mov
jno
cwtl
stos
negb
or
test
mov
push
je
shll
mov
lcall
dec
daa
int3
push
lahf
push
mov
dec
cld
and
and
sbb
xor
cmpsb
sub
lret
jnp
jns
jbe
cmp
mov
mov
push
pop
add
mov
fs
ljmp
lods
mov
aam
inc
popf
add
int
int3
iret
dec
lea
lock
push
pop
je
mov
inc
adcb
or
enter
lods
test
mov
test
movsb
orl
jo
rolb
lea
imul
or
fst
mov
gs
mov
test
into
setno
adc
xchg
sti
fmulp
jge
jmp
ljmp
inc
mov
stc
in
add
lahf
je
scas
add
int
imul
adc
cmp
in
ret
inc
jl
push
cmpsl
pop
in
jbe
sti
mov
add
jb
push
pop
inc
push
mov
adc
lcall
add
mov
sbb
dec
inc
imul
add
push
push
ss
pusha
mov
cmpsl
in
xor
stos
mov
jb
scas
and
pop
insb
pop
dec
jnp
and
fstl
imul
mov
das
dec
gs
dec
movsl
out
push
lods
sbb
mov
incb
loopne
mov
mov
sbb
out
jecxz
aad
cld
jnp
jnp
push
mul
xchg
add
dec
stc
sbb
mov
stos
inc
mov
push
push
xor
pop
cwtl
mull
insb
mov
jbe
in
pop
nop
add
cld
iret
dec
sahf
lcall
mov
pop
lods
sahf
add
icebp
fstp
icebp
cmp
mov
add
inc
dec
das
lret
sub
sti
fbld
add
mov
lahf
fldl
test
jg
out
les
mov
push
sbb
cmp
test
dec
sbb
fsts
bnd
ja
pop
aad
pushf
mov
jg
out
iret
decl
inc
sbb
subb
cmc
push
hlt
xor
scas
and
dec
and
loop
lods
es
dec
cs
xor
sbb
jb
loope
es
lea
mov
mov
fnsave
add
js
fcompl
les
mov
fnstcw
daa
inc
jo
ret
dec
cmp
and
ret
inc
xlat
jmp
lret
in
mov
lds
inc
outsb
fisttpl
in
or
aas
jg
xchg
aaa
ja
scas
mov
out
and
jb
test
mov
fidivs
int3
dec
cld
push
hlt
sbb
jb
pop
arpl
inc
and
rorl
js
cmp
nop
xor
je
pop
inc
push
jnp
jge
stos
fadds
inc
cmpsb
inc
fldenv
int3
inc
testl
mov
sub
rol
mov
sti
mov
imul
xchg
cwtl
mov
or
shl
jmp
mov
pop
rorb
add
xchg
sti
adc
scas
dec
inc
movsl
das
pop
mov
and
outsb
adc
sbb
mov
adc
fcomi
xchg
mov
es
jg
inc
cmp
movl
orb
cmp
or
loopne
mov
andl
call
mov
aaa
mov
xorb
jnp
push
mov
int3
jmp
adc
xabort
bound
lret
insb
in
inc
xchg
cmp
imul
fbld
pop
and
xor
cmpsb
sub
sbb
adc
push
cmpsl
xchg
stos
test
ficompl
mov
sbb
movsl
xchg
enter
movsl
stc
insb
xor
cli
in
xor
cmp
jno
xor
jge
stc
aas
pop
jmp
adcb
roll
sti
mov
mov
inc
es
xchg
inc
int
sbb
dec
jmp
inc
fiaddl
and
add
add
jmp
add
sbb
cmc
jge
sbb
lock
xchg
add
mov
jns
fnsave
push
xchg
inc
jle
aam
imul
popa
les
gs
leave
jo
push
add
pop
sub
mov
out
push
js
push
mov
push
xor
xor
push
pop
xchg
lock
mov
or
xchg
fcomp
pushf
mov
inc
gs
dec
cmp
xor
arpl
inc
in
cmp
mov
imul
xchg
nop
dec
mov
lea
mov
fs
mov
pop
or
out
push
outsb
movsb
pop
enter
notb
hlt
subb
or
dec
sbb
stos
dec
mov
xchg
xor
mov
cwtl
movsb
movsl
fcomip
jbe
sbb
xchg
fildl
mov
lds
fsubrs
pop
jb
cmpsl
call
jmp
mov
in
enter
adc
shlb
lea
cmp
adc
mov
sbbb
loop
pop
out
push
stc
movsl
cs
jno
sbb
mov
in
movsb
or
mov
leave
add
test
mov
fistpll
cli
sbb
push
push
cmpsb
push
mov
push
inc
xchg
mov
pop
pop
lock
outsl
pop
ret
fidivs
mov
lds
pop
cmp
fdivrs
hlt
inc
cld
adc
sub
xchg
ds
jle
add
xchg
cmp
nop
aam
pushf
hlt
sub
stc
jecxz
insl
fistpll
test
mov
jb
cmpsl
pop
dec
and
sbbb
lods
xchg
out
push
fisttpll
jb
lahf
leave
fwait
adc
ja
jge
add
adcb
xchg
stos
inc
lods
lcall
inc
dec
rcl
je
sbb
repnz
into
fnsave
ret
fsubrs
add
pop
sbb
lret
sub
cmpsb
xchg
cmc
add
sbb
fiaddl
aas
add
jmp
ja
nop
push
stos
ret
lret
pop
cwtl
xchg
inc
push
testb
mov
int3
pop
stos
lods
mov
shlb
push
fmul
adc
shr
inc
or
loope
mov
mov
lcall
lret
sbb
sbb
sbbb
sub
pushf
lcall
into
repnz
xchg
andl
cmp
mov
xchg
call
daa
cwtl
pop
adc
sbbl
push
mov
mov
mov
adc
mov
imul
xor
scas
push
lret
lods
cltd
mov
int3
inc
lock
rcll
gs
or
push
jg
test
push
xor
sub
push
test
rclb
mov
clc
xchg
sbb
subb
enter
cli
pop
cmp
aad
fstpt
or
push
jl
mov
and
movsl
ja
add
int
idivl
fisttpl
dec
xlat
fsub
or
add
adc
pop
in
jmp
sub
repnz
in
push
mov
mov
out
sbb
ficoml
mov
ds
xor
mov
mov
sbb
sub
jb
inc
mov
lock
dec
rcr
dec
push
popf
cmp
in
sbb
dec
fs
repz
mov
stc
pop
out
fmuls
or
adc
filds
repz
inc
inc
sbb
mov
adc
push
aam
jnp
xchg
vmaxss
movsb
sub
sahf
sub
lret
ja
and
dec
jbe
bnd
test
sarw
mov
aam
jns
test
js
flds
ja
negb
or
add
.byte
int
.byte
sbb
add
push
addb
jp
and
push
negb
jbe
adc
pop
ret
mov
aad
nop
out
fisubs
add
aad
cmp
aaa
ja
add
jb
cli
dec
inc
xchg
cwtl
sbb
cmp
mov
jns
in
outsl
jnp
lods
rorb
xchg
push
faddp
or
repz
sub
adc
test
repnz
out
hlt
mov
fstps
dec
sbb
add
mov
xor
ret
decl
mov
adc
inc
jbe
into
pop
aaa
outsb
or
divb
cltd
loopne
cmp
lret
fs
into
subl
insb
cs
add
jmp
sbb
out
sbb
push
jmp
adc
xor
add
push
or
or
decb
fs
iret
test
jecxz
rcrl
mov
mov
and
inc
inc
loopne
cmp
stos
sarb
dec
shlb
cli
inc
int3
dec
rorb
mov
in
jne
add
adc
pop
mov
xchg
push
pusha
subb
in
cmpb
data16
enter
test
mov
inc
lahf
pop
sub
jmp
push
adc
push
push
pop
xchg
ss
bound
repnz
and
pop
fstl
daa
jns
xor
mov
jae
adc
mov
pop
push
dec
add
test
bound
stos
mov
pop
push
jb
fnstcw
push
aad
push
rclb
push
test
push
add
sbb
cmc
cwtl
jns
orb
das
sbb
mov
mov
mov
mov
les
es
jmp
push
xor
mov
xor
fnsave
pop
in
fs
push
cmpsl
imul
nop
mov
aam
cltd
scas
imul
push
mov
dec
sbb
xor
mov
cmp
or
jnp
cmp
cmc
loopne
pop
daa
mov
pushf
in
or
fdivs
push
sbb
jnp
sub
je
jns
cmp
pop
nop
mov
and
mov
ja
addr16
das
bound
loope
in
adc
xchg
lahf
pop
clc
mov
and
sub
mov
cltd
inc
ljmp
adc
dec
dec
push
js
insb
and
jb
adcl
inc
push
xor
mov
pusha
nop
push
stos
scas
dec
jmp
adc
es
fisubrs
lock
jns
push
and
mov
sbb
stc
pop
ss
adc
insb
add
int
mov
repnz
jne
ja
icebp
fimuls
popf
loop
cmpsb
adc
xchg
sbb
cwtl
or
xor
and
decl
test
mov
or
fsubl
orl
fmuls
jnp
in
dec
int
pop
jge
jg
dec
mov
or
scas
adc
ret
jo
or
enter
cs
fistl
sbb
das
in
nop
jp
cs
sbb
movsl
test
fisttps
fdivl
fwait
or
and
and
insl
inc
repz
sbb
adc
sti
dec
xor
mov
stc
out
sub
int
fmulp
leave
add
xor
cmpsb
mov
mov
mov
ss
shl
push
aad
rolb
fidivl
cli
sti
sti
cmpl
mov
mov
test
je
cmp
inc
in
push
sahf
xor
sbb
aaa
lret
jge
test
sti
subl
stc
xor
xlat
push
fcmovne
sahf
sbb
les
lea
into
push
insl
push
insb
or
les
mov
sbb
pop
icebp
inc
mov
push
in
popf
mov
xor
sbb
xor
cli
cmp
hlt
outsl
decb
fdivrp
and
or
iret
in
mov
jle
or
pop
or
scas
pushf
jns
add
mov
int
cmp
mov
sub
jle
fs
es
bound
js
je
sub
push
sti
xor
out
pop
mov
insl
dec
mov
nop
repnz
test
ja
lods
out
and
dec
bound
and
mov
insl
push
pop
sar
loopne
push
inc
test
nop
lahf
sub
push
stc
dec
out
inc
jle
stos
cmp
mov
in
mov
mov
nop
enter
xlat
xor
cld
in
pop
popa
lock
sbb
jg
arpl
imul
or
cmp
repz
stos
prefetchwt1
xchg
push
and
pushf
mov
mov
stos
and
or
inc
insb
inc
fstl
add
mov
lods
jbe
repnz
dec
adc
sti
adc
jl
cwtl
mov
add
cmp
push
ja
sti
mov
mov
push
das
mov
daa
cmpsl
xor
pop
mov
xchg
mov
ret
into
dec
push
sarb
imul
adc
lds
cmpsl
sbb
jae
dec
out
jno
sub
push
mov
xor
inc
xchg
iret
mov
jbe
arpl
mov
add
xlat
jp
sub
mov
rol
outsb
xor
sbb
arpl
fdivr
les
add
es
xchg
mov
leave
mov
imul
mov
daa
sahf
aad
mov
fwait
xor
gs
sbb
adc
xchg
xchg
sub
mov
sub
mov
in
add
jmp
fwait
xor
lret
cltd
gs
inc
mov
add
arpl
icebp
cli
in
xchg
adc
add
mov
fdivs
jge
mov
sub
mov
sbb
mov
out
or
cld
sub
jo
sarb
cltd
or
je
xor
jl
mov
push
adc
jle
cmp
fistpll
sbb
pop
test
out
call
mov
pushf
sub
lds
push
and
jne
add
jo
aaa
leave
push
sub
mov
push
and
mov
mov
pop
cltd
lahf
lcall
inc
out
add
adc
repnz
jl
je
dec
inc
orb
cmp
das
mov
sbb
inc
dec
adc
inc
jb
js
xlat
add
xchg
mov
out
out
lcall
jno
xchg
imul
lds
jnp
sub
add
dec
stos
aas
fwait
sub
mov
push
inc
sub
sub
or
or
pop
stc
aam
cmp
xchg
daa
jge
in
and
daa
daa
mov
sbb
dec
cli
cmp
lock
pop
xchg
loope
push
movb
loopne
pop
cmpsl
adcl
insb
or
mov
xchg
sbb
fildl
std
sbb
fwait
jb
repnz
push
cwtl
pushf
fprem
shrl
mov
test
sarb
jae
xlat
rorb
mov
fnstenv
int
pop
insl
out
pop
mov
inc
add
push
or
addl
pusha
push
in
xorl
jmp
faddp
scas
pop
add
dec
sbb
xchg
incl
push
or
inc
outsl
xchg
mov
pop
push
daa
dec
mov
lea
or
cli
inc
or
cmovge
js
loop
sbb
or
mov
cmp
push
mov
ljmp
inc
mov
dec
adc
fidivs
push
sbb
mov
adc
stc
xchg
sub
mov
sbb
add
mov
les
xor
sbb
cmp
mov
pop
push
popa
xor
sbb
and
clc
jb
fadd
in
aad
ret
and
je
in
mov
arpl
push
xor
adc
jno
sub
loopne
pop
pop
leave
mov
sub
sbb
out
addr16
and
mov
push
sub
mov
xor
push
popa
add
mov
sbb
sub
fldl
inc
push
lods
add
aaa
lods
pop
mov
insb
xor
call
push
add
out
mov
push
dec
outsb
into
movsl
gs
pop
xchg
popa
lret
xor
adc
cmpb
pop
js
sti
loop
xor
push
sub
and
pop
bound
mov
xchg
jle
lds
fimull
nop
sbb
jg
dec
cltd
stos
stc
push
adc
mov
jl,pn
push
jl
inc
dec
dec
ljmp
and
scas
sub
push
mov
xchg
leave
mov
in
dec
sub
fcompl
jge
fsubrs
xchg
leave
cmp
xchg
fidivrl
scas
push
adc
xchg
lcall
hlt
movsl
shlb
mov
es
mov
pushf
popf
xlat
dec
sbb
jnp
enter
pop
je
into
loop
insl
push
ds
rcll
les
and
fsubl
cmp
xor
lcall
fiadds
xor
pop
inc
dec
out
inc
jmp
or
in
int3
or
in
xchg
xor
xchg
cmp
add
cmp
pop
ds
cmp
mov
je
jne
fwait
jp
icebp
xchg
sub
stos
xchg
jo
dec
add
xchg
xchg
sarl
mov
sbb
xor
rorl
aam
inc
fdivrl
stos
aaa
jae
xlat
or
stc
mov
jae
xchg
pop
mov
dec
jl
int3
add
push
pushfw
mov
aad
jae
add
push
les
inc
cmc
and
mov
dec
cli
xor
mov
mov
and
fimuls
push
imul
jnp
scas
adc
mov
xchg
mov
imulb
and
pop
sub
inc
mov
push
sub
jbe
xorl
cmp
enter
aaa
scas
test
pop
mov
or
jns
leave
cmc
mov
arpl
add
jbe
pop
mov
es
pop
adc
stos
sarb
and
xlat
dec
cmc
cld
add
or
imul
repz
pop
test
mov
enter
xchg
in
ss
xchg
or
bound
and
adc
ss
xchg
icebp
jns
dec
xchg
pop
mov
sbb
add
mov
xchg
sub
aaa
add
jnp
jbe
jnp
cmpsl
xchg
cli
mov
hlt
out
ret
adc
sbbb
stc
pop
filds
mov
mov
aam
cmp
fidivs
mov
es
xor
inc
add
mov
pop
cwtl
in
sbb
sbb
clc
push
mov
movsl
mov
dec
jmp
mov
or
jns
fs
arpl
daa
inc
xor
and
inc
push
hlt
cli
out
push
push
sbb
and
insl
xor
pop
sub
out
les
mov
xchg
dec
jge
mov
mov
or
int3
sub
out
lcall
leave
dec
mov
lret
dec
jl
jb
dec
sbb
cmc
sbb
cmp
sahf
cs
or
fdivrs
test
xchg
inc
imul
xchg
cltd
sub
je
mov
popf
mov
ljmp
roll
adc
js
cmpl
pop
sub
inc
data16
mov
mov
push
dec
inc
adc
daa
pop
dec
xchg
sub
xor
jb
andl
inc
add
icebp
scas
mov
push
xor
lds
xchg
jmp
add
daa
dec
or
mov
test
adc
popf
mov
repz
bound
xchg
and
lcall
cmpb
mov
or
orb
adc
pop
push
adc
dec
mov
jae
fwait
push
xchg
imul
push
out
push
stc
js
mov
mov
ficomps
push
outsl
jecxz
xor
jbe
sbb
mov
sub
sub
imul
sbb
adc
cli
xor
lock
cli
xchg
stos
adc
mov
in
mov
push
aaa
xchg
xchg
adc
push
xor
es
fcmovnu
sub
incl
pusha
fyl2x
pop
push
add
insb
jg
xor
pop
enter
mov
adc
jbe
push
bound
jbe
mov
icebp
xor
dec
jno
push
push
cmp
and
ss
cmc
push
pop
hlt
push
sbb
or
pop
das
mov
jo
jb
bound
dec
daa
mov
inc
sbb
dec
xchg
cmp
sbb
cmp
mov
stc
push
test
or
push
xchg
pusha
jo
std
mov
ret
data16
and
out
fiadds
or
imul
add
dec
mov
repz
dec
rorl
mov
insb
lods
je
mov
mov
pop
test
inc
pusha
and
adc
repnz
jbe
pop
push
ja
cmp
jnp
repz
mov
pop
mov
gs
sti
xor
mov
xchg
adc
subl
mov
cmc
sbb
mov
cmp
arpl
mov
adc
mov
mov
cld
hlt
enter
js
push
jmp
dec
int3
mov
sub
rclb
rorl
inc
dec
subl
inc
xchg
pop
cmp
loopne
mov
nop
dec
pop
lds
stos
mov
fcmove
scas
push
fnstsw
xchg
mov
push
cwtl
in
dec
mov
aas
fs
rcl
inc
jb
adc
sbb
jno
je
repnz
pushf
addr16
adc
jo
in
push
fisubrl
push
out
xchg
sahf
sarb
mov
lods
call
jecxz
inc
cmp
pop
hlt
jne
add
pushf
or
fs
pop
cli
fcoms
pop
jno
movsl
rclb
aas
sub
ret
imul
lock
bound
cmp
mov
jae
out
dec
outsl
jge
lret
in
cmc
fcomps
mov
lock
fmuls
ret
test
mov
mov
std
mov
jne
gs
insb
call
pop
insl
mov
sti
mov
mov
and
mov
xchg
jne
repnz
sbbl
add
shlb
push
clc
and
xchg
pushf
mov
sbb
or
out
cmp
call
pusha
lea
cmp
fimull
or
aaa
push
outsl
pusha
rorb
adc
jmp
jae
mov
sub
jmp
or
or
mov
js
aas
out
loopne
jecxz
inc
scas
cld
pop
sbb
cmpsb
ret
stc
mov
sbb
xchg
push
sbb
jno
ret
or
add
arpl
mov
ret
pop
and
cmpl
fnstcw
test
inc
sub
mov
lock
test
pop
jmp
dec
scas
imul
ret
popf
pop
shl
adc
mov
xlat
mov
dec
push
pop
xor
in
mov
fmulp
jno
jbe
cmp
push
lret
mov
xchg
jo
icebp
mov
ds
ds
ja
aaa
into
cmp
sbb
mov
fdivr
push
outsb
roll
pop
rolb
out
cmpsl
stc
sub
loopne
stc
xchg
bound
add
insb
outsl
mov
fisubrl
out
sbb
insb
enter
imul
sahf
sub
pop
xlat
jno
dec
mov
mov
shl
jnp
je
sub
cli
or
add
sub
leave
lcall
movsb
add
fdivs
xchg
xchg
aam
push
xor
sbb
idiv
es
clc
adcl
in
xchg
in
and
mov
dec
int3
xlat
inc
les
inc
add
sbb
push
lcall
push
adc
in
pop
push
mov
pop
push
sub
ret
popl
sahf
enter
inc
clc
mov
sub
out
mov
dec
aas
mov
mov
or
inc
pop
push
ret
lret
adc
inc
inc
call
inc
pop
sti
icebp
xchg
dec
rcr
mov
or
push
jmp
mov
jg
xor
aam
orb
adcb
push
inc
faddl
xchg
inc
adc
xor
sarb
mov
mov
sbb
and
and
push
xchg
add
test
sbb
push
jb
dec
fmull
mov
std
cli
imul
mov
xor
dec
inc
pop
add
dec
or
adc
or
fimuls
xchg
jno
loopne
sbb
sub
out
push
popl
ja
jbe
loop
lods
icebp
cwtl
adc
push
mov
ffree
sbb
adc
push
push
rcll
loop,pt
mov
and
pop
mov
push
mov
lcall
int
dec
cmp
and
je
test
fwait
imul
jl
xor
push
in
sbb
jae
sti
movsl
mov
and
pushf
ljmp
xor
notl
cmp
sarb
or
dec
push
lret
inc
loope
cmp
iret
popa
aas
mov
icebp
out
add
cwtl
lret
aas
bnd
sub
int
dec
ret
mov
sub
shll
movsl
mov
sbb
pop
ljmp
dec
and
std
rclb
cmp
xor
or
sub
cmp
jns
cmpb
out
jne
addb
jb
test
pop
loopne
pop
int3
push
mov
push
add
test
ret
bound
cmp
adc
xchg
test
and
aaa
lahf
and
lds
data16
mov
mov
sub
inc
pop
jecxz
mov
inc
xchg
add
mov
push
lds
leave
rcll
push
xchg
in
out
or
in
add
cmp
arpl
out
push
sub
loope
lea
inc
rcrl
hlt
call
adc
lods
fnstcw
push
and
adc
xchg
in
mov
push
pop
in
jg
sarb
hlt
dec
inc
shr
repnz
jnp
jg
mov
fcomi
cmp
jb
mov
out
or
inc
je
pushl
popf
mov
addb
mov
stc
jl
jb
add
call
adc
out
movsb
ds
les
inc
jnp
push
icebp
dec
push
in
stos
pop
add
sbb
in
inc
pop
sti
or
frstor
mov
add
add
daa
sbb
adc
je
call
out
shr
jb
lods
cwtl
in
inc
inc
xor
cmc
in
mov
mov
les
loop
insl
lcall
and
iret
jl
in
pushf
fistps
repnz
sahf
lea
sbb
adc
push
ja
mov
push
jnp
jge
cwtl
inc
fdivrl
das
pushf
or
or
pop
pop
sub
out
mov
insl
movsl
lods
jp
sub
mov
lret
xchg
mov
push
adc
out
inc
adc
in
and
add
cmp
in
sbb
mov
mov
orl
iret
lds
mov
add
lds
aam
enter
push
lret
aaa
aam
je
push
rcl
inc
outsl
ljmp
adc
or
push
sub
jl
cmp
arpl
add
xor
mov
stc
mov
cmp
jbe
lcall
aas
or
cwtl
mov
clc
xor
int3
xchg
out
mov
fildll
into
push
jl
and
lret
inc
cmp
and
add
xor
incb
test
dec
add
sbb
sub
sub
dec
jnp
dec
cmp
lcall
in
sub
sbb
iret
mov
or
or
imul
in
cmpsb
stos
outsb
mov
lahf
leave
sbb
mov
xchg
or
add
aaa
stc
scas
mov
dec
sbb
pushf
test
cmpsl
mov
pop
mov
addb
pop
pop
sbb
dec
frstor
sub
dec
pop
daa
leave
incl
pushf
cmp
cmpsb
mov
cmp
dec
cs
xchg
ljmp
cmp
or
dec
xchg
mov
pushf
mov
cmp
mov
nop
in
test
mov
dec
repnz
mov
cmp
cmp
fs
fists
pop
or
and
in
jle
insb
cmpsl
jmp
mov
test
and
push
jnp
sub
mov
cmp
xchg
imul
lret
sbb
jmp
sub
xchg
jmp
jle
js
out
scas
jecxz
cmp
scas
lcall
in
lret
push
arpl
and
pop
sub
fnstsw
push
adc
fstpt
xor
andl
in
in
adc
icebp
cwtl
stos
das
mov
jge
mov
mov
notb
hlt
dec
loope
and
mov
inc
lahf
push
add
aaa
adc
push
ret
sbb
jg
inc
sbb
mov
aas
gs
mov
pop
mov
push
sbb
bound
jle
pop
mov
adc
inc
fidivs
ss
mov
cmc
sbb
sbb
ror
loopne
fwait
divb
adcb
and
jno
lods
int
arpl
cmp
stos
adcb
out
or
lret
cltd
push
loope
es
fidivrl
out
aaa
aas
lock
mov
pop
and
mov
popf
cmpsb
sub
iret
sbb
push
mov
xchg
sbb
inc
repnz
xchg
stos
shl
mov
mov
cmpsl
mov
jmp
pop
jb
imul
addr16
aas
xor
adc
pop
push
aam
inc
adc
in
mov
mov
out
fdiv
fimuls
sbb
sti
rcrb
sbb
ljmp
sub
xorb
sbb
push
cmp
dec
xchg
jno
jae
adc
outsb
and
push
int
push
inc
inc
or
gs
lds
push
and
and
or
pop
mov
enter
movsl
fistpl
mov
push
cmp
std
pushf
sti
ret
mov
mov
je
mov
adc
js
or
int
cmp
xlat
mov
push
sti
jecxz
pushf
xor
outsb
cmc
decl
sarb
shll
inc
mov
js
int3
mov
jne
push
int
cmpsl
cld
fwait
mov
push
push
sbb
pop
inc
cwtl
mov
int3
xlat
popa
mov
insl
jmp
and
das
mov
sub
cmc
jmp
rorl
lret
scas
ret
lahf
shll
insb
xor
adc
mov
push
push
pop
orl
cs
mov
pop
xchg
sub
mov
sbb
inc
push
les
hlt
pop
mov
and
pop
popw
popf
jae
in
gs
outsl
jl
fmull
push
movsb
or
xchg
mov
xchg
mov
add
popa
sub
int
jno
dec
or
test
data16
inc
rorl
pop
xchg
add
and
addr16
decl
les
fwait
xchg
mov
sbb
xchg
and
mov
sbb
jge
mov
mov
mov
js
mov
roll
cltd
mov
xchg
test
pop
fldl
test
ret
xchg
and
in
sti
enter
fnstsw
fimuls
ljmp
sub
insl
lods
iret
jle
sbb
push
andl
filds
adc
adc
das
scas
push
jne
jge
sub
cmp
add
cmp
xchg
mov
in
or
clc
pop
jo
lock
lods
ret
cwtl
add
pop
jg
fistpll
notb
sar
rcrl
mov
pop
faddl
lods
jmp
insl
push
vmwrite
dec
jg
adc
test
jg
test
test
or
push
dec
andb
dec
xor
push
int
push
fcoml
jne
hlt
push
jb
xor
jmp
push
gs
outsl
adc
jge
dec
pop
xchg
jae
loop
and
lahf
inc
iret
cli
add
dec
lds
enter
or
pusha
push
sbb
inc
decl
out
lea
and
add
inc
jecxz
ret
sbb
push
inc
xchg
cmp
fwait
aaa
call
lds
js
pop
ret
dec
dec
adc
lret
gs
add
adc
lock
loopne
imul
dec
cmp
mov
je
insb
xor
push
ds
pop
inc
divl
js
xchg
out
xlat
into
lods
mov
clc
dec
daa
push
mov
outsb
add
sub
dec
das
fidivl
cmpsl
cmp
push
xor
loope
int
outsl
add
test
or
iret
aam
jb
add
add
stos
fidivrs
loope
and
mov
mov
or
les
clc
jae
in
cmpsb
jl
jne
inc
fists
pushl
push
adc
mov
imul
adc
mov
jnp
jno
rclb
adc
sbb
fwait
xchg
dec
jle
adc
int
sub
std
lods
call
dec
mov
outsl
mov
shrb
pop
jae
mov
fildl
mov
pop
xchg
push
in
push
cmp
test
jns
pop
push
fisubs
cwtl
xlat
mov
leave
jge
push
lock
mov
jle
jnp
or
mov
and
movsb
mov
cmp
inc
cmp
test
mov
push
add
and
je
and
adc
in
mov
and
ds
iretw
pop
lret
movsb
std
lcall
inc
pop
add
ret
pop
pop
sbb
jge
notb
pop
insb
pop
fwait
dec
xor
std
pushf
out
movsl
je
repz
jo
mov
aaa
xchg
in
sub
xchg
pop
push
adc
dec
sub
imul
leave
pop
cmp
push
test
lcall
sahf
sarb
inc
jo
ja
and
pop
ljmp
idivb
xchg
test
dec
mov
aas
in
fcompl
outsl
mov
aaa
insb
dec
dec
ss
dec
mov
addl
and
test
insl
outsl
cs
xchg
lahf
jp,pn
push
mov
cmp
stos
insl
pop
xchg
addr16
imul
pop
mov
xchg
push
xchg
cmp
loop
and
dec
lods
les
push
xor
movsl
and
ret
inc
in
cmpsb
inc
mov
fdivl
pop
jmp
pop
jle
idiv
adc
rol
adc
sbb
xor
sub
sarl
lea
add
test
mov
xor
xchg
and
movsb
inc
rolb
pusha
imul
js
aad
push
inc
xor
xor
inc
jno
jl
inc
push
outsb
pop
pop
arpl
dec
xor
nop
jp
xchg
lea
scas
dec
imul
mov
add
xor
mov
or
adc
cmp
jne
jnp
shrb
xchg
and
movl
adcl
pop
imul
adcb
push
and
fmulp
js
mov
pop
mov
inc
cmovne
xor
mov
xchg
push
add
pop
fdiv
cmpl
add
ljmp
dec
pop
aas
push
test
int3
shll
sub
insb
jns
movsl
mov
ret
jb
fs
add
push
jge
leave
lods
repnz
or
sub
or
mov
sbb
lock
into
daa
cli
mov
sub
pop
push
stos
test
roll
adc
fnstenv
nop
xchg
imul
mov
mov
out
jmp
ret
mov
in
inc
stos
popf
gs
cwtl
in
jp
popf
pmulhuw
mov
mov
out
adc
icebp
cmp
inc
fistps
xchg
cmp
or
ja
out
adc
mov
cmp
or
sbb
shlb
jb
mov
xchg
call
lret
addr16
mov
imul
gs
in
dec
jbe
ljmp
mov
cmp
mov
mov
jnp
cmp
dec
mull
lret
lea
jns
idivb
sub
cmp
mov
mov
stos
sub
clc
or
stc
mov
loop
loopne
std
inc
jl
xchg
sahf
pop
std
test
pop
outsl
lods
xor
mov
lcall
mov
sbb
insl
sub
cmpsb
cmpb
std
jle
mov
call
sub
in
pop
ss
sub
insb
cmp
mov
fldl
push
loop
cmp
add
and
adc
in
dec
mov
push
push
adc
adc
das
out
sbb
jl
outsl
int3
adc
adc
out
adc
add
xorl
das
out
mov
adcb
pop
xor
inc
xchg
mov
jnp
xchg
lods
push
sbb
daa
sarl
enter
sub
mov
jo
adc
add
idivl
fiadds
cmp
adc
fnstenv
push
jmp
inc
repnz
notb
mov
scas
fstps
test
std
jo
lcall
sti
jle
shlb
leave
test
pop
fwait
mov
mov
repz
lds
xor
mov
or
sub
sahf
cmovl
inc
jne
xorl
sub
cs
nop
and
pop
add
pop
test
call
xchg
cmp
xor
pop
pop
adc
cmp
adc
lods
jp
data16
inc
push
push
out
dec
add
sahf
in
pop
addr16
lock
imul
in
daa
out
pop
mov
in
pop
idivb
outsb
xor
dec
imul
rorb
in
nop
cld
int
lea
loope
lds
int3
pop
push
outsb
xchg
fcoml
repnz
push
movsl
inc
lods
dec
push
cmp
cmp
dec
add
jp
loope
jne
cltd
repz
lret
mov
mov
add
addl
mov
mov
and
fnstsw
cwtl
dec
ds
adc
push
and
ja
adc
pop
inc
ret
outsb
and
lcall
inc
enter
mov
sbb
or
xchg
int
mov
push
mov
jge
icebp
roll
out
mov
jno
jno
jno
in
push
mov
movsl
cltd
lcall
fwait
fwait
add
ficoml
fimull
jecxz
mov
and
and
mov
cld
loope
bound
jp
and
push
ljmp
push
fcomps
mov
rorb
mov
inc
inc
sti
ljmp
push
sar
test
cltd
inc
dec
pmaddwd
xchg
adc
out
inc
jb
mov
xchg
js
and
pop
xor
dec
cmp
loopne
scas
loopne
andb
sub
test
in
push
shl
ret
in
out
std
in
insl
sbb
wrmsr
int3
ficoms
dec
pop
pop
ss
loopne
sbb
mov
gs
or
jno
test
test
mov
mov
jge
cld
out
sbb
fdivl
cmc
ret
pop
xorb
bound
pop
sar
mov
sahf
jns
les
call
daa
xchg
push
leave
stos
loope
pop
js
mov
out
aam
cmp
mov
mov
lret
xchg
xchg
test
push
cmp
pop
movsb
ffreep
loopne
sub
jne
aaa
mov
xor
int
jmp
or
push
inc
aaa
ret
mov
ror
mov
xor
jnp
inc
ja
out
and
lods
push
lods
dec
mov
cmp
jb
adc
shll
test
sub
enter
jne
int
xchg
inc
stos
inc
dec
dec
loope
aaa
repnz
add
pop
push
cltd
mov
addl
aas
mov
je
xchg
flds
adc
or
bound
je
lock
cmp
ret
xor
fistpll
push
mov
cli
xchg
cmpsb
push
lahf
jbe
jns
mov
in
xchg
and
sub
ljmp
stos
or
aas
jge
std
incb
jne
pop
das
jnp
mov
lahf
out
dec
cltd
pop
add
mov
push
xchg
push
pop
fisubrs
pushf
pop
scas
jp
xlat
push
xor
lock
in
lcall
dec
xchg
out
xor
mov
js
mov
iret
hlt
xchg
out
add
xlat
iret
push
mov
inc
xchg
inc
mov
mov
sbb
cmc
pusha
mov
mov
dec
test
push
cmp
pop
mov
push
scas
out
dec
mov
lret
sbbb
or
pop
jnp
push
out
test
loop
test
jge
xor
insb
nop
fcoms
push
aaa
pop
fistl
adc
fdivl
ficomps
mov
lods
fwait
cmp
sub
inc
jb
loope
adc
imul
rcrl
and
outsb
jle
mov
inc
in
rol
fs
aad
mov
add
xor
sub
jno
shll
mov
pop
cli
xchg
mov
cli
dec
mov
movsl
imul
js
inc
mov
arpl
addb
and
addr16
jg
rol
pop
aad
pop
ret
push
jns
inc
aas
dec
test
push
cwtl
in
mov
lcall
mov
or
out
inc
xor
andl
dec
lcall
popf
into
scas
dec
mov
mov
dec
xchg
add
lds
pop
ret
int
out
dec
je
aad
leave
sub
push
push
icebp
push
adc
mov
mov
lret
jbe
pop
or
sub
rolb
dec
and
jmp
pop
xchg
xchg
or
nop
mov
rcrb
stc
jmp
jl
adc
sub
add
push
xchg
cmpsb
mov
sbb
mov
std
xor
icebp
pop
xor
mov
mov
lds
jp
pop
mov
lcall
shl
cs
xchg
pop
xchg
jb
pop
shrl
pop
push
mov
sub
jmp
pop
jmp
bound
mov
xor
cmp
sbb
mov
xor
cmp
mov
hlt
loope
shrd
xchg
mov
les
xchg
jp
mov
je
popa
fistl
cltd
pop
mov
dec
imul
stos
mov
push
js
orl
adc
test
loope
insb
dec
leave
imul
cld
jp
xor
shl
mov
ret
adc
arpl
xor
adc
aad
mov
dec
iret
adc
fsubp
idiv
or
add
lcall
adc
jne
push
xor
call
call
test
cld
pop
loopne
ja
jge
fmul
fisttps
jl
imul
pop
arpl
add
in
out
or
lahf
nop
pop
cmp
mov
mov
hlt
mov
xchg
mov
fsubrp
sbb
sub
scas
push
cmp
jge
ljmp
adc
or
mov
cmp
cli
add
jp
jbe
sub
subl
cmp
mov
or
repz
mov
mov
pop
or
adc
cs
push
test
adc
pop
pop
into
ss
ss
js
lock
or
push
dec
or
pop
dec
pusha
sarb
cmp
push
ss
pop
cmc
add
dec
jb
add
cmpl
insl
ror
push
stos
sub
fxch
daa
mov
fdivrl
jmp
xor
test
mov
shrb
or
and
cmpsl
push
imulb
out
inc
mov
pusha
xchg
sbb
mov
push
movsl
ficoml
les
jbe
xchg
xor
ss
cs
cltd
or
add
stos
and
rolb
jecxz
and
cmp
cld
pop
adc
fnstenv
daa
mov
cmp
pop
xlat
add
inc
pop
dec
repnz
clc
jge
sti
ficompl
jne
mov
or
push
inc
dec
gs
or
sub
mov
ljmp
cli
std
int
inc
popf
xchg
mov
repz
int3
lret
push
dec
push
jbe
lea
inc
mov
imul
xor
push
pop
daa
inc
xor
push
push
daa
and
jle
xchg
das
rorl
pushf
mov
sbb
pop
call
insb
pop
test
or
jo
cld
jno
pop
jp
icebp
cmp
bound
push
dec
jne
scas
jge
imul
ljmp
inc
and
sub
aam
cwtl
jo
mov
cmc
dec
scas
push
repnz
cmp
insl
stos
mov
xchg
jp
cmpsl
stc
push
pop
aam
test
inc
popf
into
jae
jne
mov
enter
xchg
das
mov
cmp
dec
xor
pop
shrl
xor
in
call
enter
or
test
dec
sub
movsb
hlt
pop
andnps
aam
inc
popa
loopne
ret
loopne
movd
popf
ss
sub
aad
mov
jbe
sti
imul
cmc
inc
adc
dec
aaa
inc
xchg
cmpsl
loop
lcall
or
inc
arpl
mov
rcrl
add
addl
pop
xchg
sub
xor
and
test
lock
push
js
rclb
mov
jae
bound
faddl
loope
adc
pop
insl
xor
mov
mov
repnz
adc
es
rep
cmpsb
push
cltd
sbb
push
dec
insl
call
pop
or
push
adc
fdivl
jecxz
jb
sahf
jle
sub
xchg
idivb
sbb
and
loop
out
shll
rcll
test
aad
jmp
add
xchg
cmpsl
outsl
lods
shrl
ds
into
and
pop
les
imul
cmp
push
imul
fnsave
subb
inc
popa
nop
push
scas
pop
dec
push
call
rolb
in
fdivs
aad
sbb
scas
lods
xchg
xchg
out
sub
adc
xchg
cmp
mov
mov
xor
mov
jmp
imul
xchg
jp
push
mov
jns
mov
xor
jmp
jge
push
dec
aam
jmp
in
jle
push
xchg
inc
js
push
cld
xchg
inc
or
insl
fs
daa
in
stos
and
mov
scas
aaa
mov
shlb
mov
scas
rolb
xlat
js
cli
mov
lods
cli
sub
cmp
mov
ja
cltd
jo
adc
jno
fdivs
mov
jae
mov
lock
daa
push
lods
out
fistpl
out
ja
ret
stos
cmc
jnp
mov
mov
neg
sub
mov
outsb
jb
int
cli
fs
adc
or
shll
xchg
jle
hlt
repz
sahf
lret
mov
and
xor
inc
inc
out
cld
ljmp
lcall
imul
popa
and
xchg
inc
adc
mov
adc
mov
addr16
lret
cltd
xchg
pop
xor
adc
sub
jo
xor
lods
out
mov
loope
fwait
cld
into
cmp
shl
lods
in
push
fsubp
dec
cmp
inc
cs
fcomp
add
outsl
pop
ss
lods
testb
stos
sub
sbb
cmpsb
nop
cs
mov
sbb
mov
push
push
sub
shrl
pop
lret
shrb
xor
jmp
jg
adc
pop
sbb
jecxz
and
fcoml
mov
lret
fdivrl
jo
das
or
outsl
xlat
adc
dec
pop
jecxz
inc
xor
movb
ret
jne
bound
in
push
mov
fsts
jo
test
adc
jge
pushf
in
xor
xchg
push
imul
movsb
insl
aaa
pusha
andl
push
jnp
sahf
xchg
scas
inc
lods
orb
or
pop
adc
mov
dec
and
mov
leave
sbb
xchg
cmc
test
loop
loope
pop
mov
adcb
fdiv
cmpsl
pop
add
aaa
xchg
movsl
jge
jp
push
bound
jo
pop
mov
in
std
adc
insl
sbb
loop
lahf
lods
mov
and
push
roll
pop
repnz
adc
sub
sub
arpl
adc
mov
loope
rcr
rorb
in
mov
mov
sti
or
mov
mov
inc
insl
pop
sbb
ret
les
or
cmp
and
adc
push
lret
or
popa
addr16
xor
add
aad
add
std
out
fwait
or
xchg
es
cwtl
fnstenv
xchg
mov
rolb
ret
cmp
and
test
subps
pop
fwait
dec
lcall
sbb
mov
lods
lret
fidivrl
pop
jnp
out
icebp
mov
cmpsl
rclb
dec
cmp
mov
mov
outsl
rolb
and
mov
dec
scas
loope
or
movsl
subb
ret
push
adc
mov
add
jecxz
push
mov
and
into
leave
jle
sbb
movsb
dec
lahf
push
cld
cmp
jnp
aaa
pusha
or
push
into
and
dec
push
outsb
or
test
lods
sub
gs
ret
jmp
insl
cmc
je
xchg
xchg
push
fisttps
pop
cwtl
daa
cmpsl
clc
cmp
add
fwait
cld
cli
fcmovb
stos
dec
cs
pop
scas
mov
mov
mov
adc
test
jl,pn
xchg
push
in
insb
sahf
xchg
xchg
jne
idiv
cmc
loope
inc
andl
jecxz
fimull
xchg
and
inc
xor
out
das
cltd
into
pop
mov
add
hlt
or
aaa
stos
push
jmp
and
pop
imul
or
in
mov
cmpb
or
xor
jo
subl
arpl
in
mov
out
push
push
sbb
pusha
roll
shlb
in
jb
fiaddl
insl
and
int
sahf
cmp
in
ja
push
sarb
xchg
dec
push
adc
cmp
stc
adc
loopne
pusha
pop
mov
mov
nop
inc
xor
jb
shl
xor
hlt
adc
sub
lods
mov
or
js
xor
test
xlat
mov
add
cmp
cmp
insl
rcll
cmpsb
flds
mov
push
pop
ljmpw
lcall
in
xlat
nop
adc
cmpsb
mov
sbb
fildll
cmp
pushf
lea
ret
dec
xchg
lock
cli
jne
sahf
orb
paddsb
mov
imul
jae
call
test
cmpsl
dec
je
jno
and
mov
dec
out
inc
sbb
outsb
mov
sbb
inc
jns
sbb
push
mov
add
negl
dec
jae
mov
inc
xchg
inc
xchg
sti
les
lahf
sbb
repnz
dec
jecxz
mov
mov
mov
lods
loopne
or
mov
adc
mov
repz
or
loope
fbstp
mov
fucomi
ja
dec
fstpl
inc
pop
push
gs
push
pusha
xchg
sahf
mov
stos
fsubrl
mov
loopne
out
js
bound
loop
dec
inc
xor
xor
jmp
cmp
lahf
jp
clc
out
dec
mov
xor
out
sub
mov
sub
loope
jmp
hlt
xchg
sub
mov
inc
in
mov
les
mov
xchg
stos
or
lock
jns
and
or
fcomps
test
stos
add
cs
out
jg
mov
hlt
test
push
mov
push
pop
xorb
mov
dec
add
inc
fwait
std
daa
in
inc
jl
sbb
cmp
flds
lahf
dec
insl
push
jb
aad
out
js
pop
mov
test
sahf
pop
push
sti
mov
xchg
lahf
orb
cmc
iret
cs
mov
cmp
xchg
cltd
test
and
jne
adc
aad
dec
fidivl
bnd
enter
leave
loopne
enter
xor
dec
fisubs
push
mov
out
roll
cmp
insl
cld
inc
aam
add
add
dec
push
leave
push
mov
inc
shlb
dec
jle
lods
inc
push
lret
movsb
shll
push
aad
ret
dec
mov
add
cld
fstps
cmp
insb
stos
addb
sbb
pop
xchg
sahf
add
xor
jbe
jge
in
test
lret
lea
idivb
aaa
mov
push
lds
mov
inc
addr16
pop
fcompl
ds
xor
cmp
aad
addb
mov
xor
test
cmp
stos
dec
push
hlt
rol
push
flds
sbb
pop
add
icebp
out
cmpsl
das
bound
mov
cld
fidivrs
data16
adc
mov
sahf
adcl
jle
inc
mov
and
dec
mov
jmp
enter
inc
mov
inc
cmp
push
int
jae
popa
lods
lcall
insb
sti
cmpsb
push
loope
clc
cmpsl
jp
jns
fimull
xchg
loop
cli
repz
cmp
or
pop
jbe
mov
dec
adc
shrb
push
inc
sbb
dec
mov
jmp
push
adc
outsb
mov
mov
mov
jnp
loopne
push
shl
jg
sub
cmp
repz
je
mov
pop
jb
rcr
and
aaa
arpl
loop
rolb
jl
pop
das
pop
adc
lret
and
xor
mov
outsb
ljmp
int
ret
lods
sub
popa
add
xchg
leave
sbb
sub
and
lea
dec
xor
xor
jp
cmp
pusha
add
jecxz
js
jno
stos
adc
or
lcall
cmovb
ljmp
sub
xchg
sub
push
xchg
outsl
pop
xchg
scas
pop
xor
and
testb
cli
jae
imul
jae
or
add
xchg
es
jle
nop
sub
xchg
out
adc
cmp
aas
sub
out
loop
int
lea
outsl
je
and
mov
inc
pop
in
cmp
loope
pop
xchg
mov
lret
insb
sarb
and
jns
mov
pop
or
ror
push
lret
and
jb
push
orb
jle
in
shlb
xor
cmp
push
mov
aam
xchg
jnp
push
ret
xor
iret
addr16
pusha
xchg
lods
sbb
mov
jge
ret
lock
push
insl
dec
sbb
icebp
lea
enter
lret
popf
outsb
loope
insl
dec
fldenv
sub
int3
jmp
jo
xor
pop
ljmp
lea
loopne
test
pop
inc
or
das
push
mov
sub
dec
cmc
or
aam
cmpsb
or
cmp
jecxz
pop
in
mov
add
pop
sub
fstps
test
jg
push
aas
dec
xor
sahf
mov
and
jmp
imul
out
je
add
ret
enter
das
cmp
out
faddl
push
jp
emms
pop
jp
mov
inc
fmul
jns
fs
fwait
js
in
mov
mov
mov
xchg
mov
or
fdivs
and
leave
cli
push
cmpsb
rcr
ljmp
inc
push
mov
jns
ds
push
dec
out
test
push
cmp
lahf
stc
ficoms
and
inc
je
pushf
cmpsb
sub
lds
push
mov
fnsave
repz
mov
in
sub
cmpsl
dec
mov
cmp
pop
es
jo
cmc
and
nop
xchg
inc
insl
mov
fldcw
cmp
sub
call
mov
xor
pop
stos
xchg
icebp
and
fstl
mov
jae
in
pop
imulb
cmpsl
mov
jmp
lods
ss
sbb
mov
idivl
push
and
stos
lahf
push
push
sti
bound
fs
sub
lods
adc
fistpl
repz
dec
stc
jp
fnstsw
dec
or
data16
sub
add
xchg
and
cmpsl
xor
mov
jg
lods
fsub
sar
pop
daa
ljmp
insl
mov
jl
rdpmc
inc
push
aam
or
mov
repnz
add
lret
lock
in
dec
inc
cld
sbb
sub
push
cs
cmp
mov
shlb
cmpsl
mov
test
xor
xchg
or
call
pushf
roll
mov
mov
xlat
mov
adc
and
stos
mov
int
fs
adc
lret
mov
arpl
in
fistpl
mov
push
mov
jae
cmp
cmp
aam
push
and
jecxz
fwait
or
add
cmp
adc
push
aam
inc
test
fidivl
into
cmpsl
mov
out
push
pop
mov
scas
lods
in
mov
xchg
inc
xchg
in
leave
mov
jecxz
or
push
ret
dec
xor
and
pop
or
sarl
xor
addr16
pop
jp
push
outsl
mov
test
or
imul
and
cmpb
cmpb
je
outsl
mov
popf
cmc
mov
lret
xchg
add
cmp
dec
sbb
mov
enter
dec
and
mov
loopne
sub
fnstsw
add
out
ds
push
cs
insb
pushf
mov
nop
xor
into
out
mov
mov
mov
dec
xor
inc
jnp
mov
pusha
in
arpl
jge
int
cs
mov
cmp
sbb
mov
and
jne
cmp
movsl
ret
dec
data16
in
sub
add
das
adc
mov
cmpsb
ljmp
arpl
cmp
dec
shlb
cltd
push
arpl
test
lret
adc
mov
fimull
int
fisubrl
push
and
sarl
mov
pop
add
dec
cmpsb
sub
sub
gs
cmp
das
xchg
cmpsl
ljmp
clc
and
data16
mov
inc
in
jnp
mov
lahf
dec
ds
lret
sbb
or
push
cmc
xor
sub
jno
fisubrs
adc
shr
xlat
cli
imul
mov
ret
shlb
outsl
push
loop
cli
sub
jno
scas
mov
iret
mov
sbb
ds
dec
sub
sbb
jno
pop
adc
jb
scas
orb
test
lret
movsb
jge
clc
cs
or
mov
movsb
insl
cmpsl
repnz
mov
cmp
aas
mov
in
iret
fwait
xchg
test
lods
popa
inc
fcompl
mov
push
mov
fisubrl
imul
stos
adc
xchg
cmpb
sub
inc
jecxz
sbb
jns
sub
out
push
mov
repz
or
cmp
icebp
aaa
push
inc
movsl
ror
insb
aaa
jo
cmp
sti
clc
clc
loope
sub
cmp
mov
pushf
dec
add
mov
pushf
jle
push
imul
hlt
pop
iret
addr16
inc
js
pushf
add
andl
pop
mov
cmp
fists
pop
in
out
shll
pop
push
sbb
into
mov
mov
out
fistps
out
sub
stos
outsl
ret
or
xlat
repnz
inc
or
loopne
movsb
ljmp
daa
pushf
add
and
mov
shlb
mov
inc
int3
dec
push
gs
in
mov
pop
add
int
push
jae
arpl
jo
mov
pusha
jns
lock
mov
pop
cmp
dec
in
insb
ret
popf
aad
cli
ret
dec
addb
aam
test
cmpsl
cwtl
and
leave
mov
mov
movsl
imulb
cltd
aam
repnz
nop
scas
mov
sbb
rolb
pop
mov
xchg
in
std
aas
mov
or
pop
xchg
std
or
mov
jg
add
repz
xchg
or
add
or
xchg
call
shll
dec
into
fwait
add
jg
add
mov
mov
mov
pop
pusha
inc
scas
xchg
sahf
xor
inc
fistps
lcall
mov
rorl
fidivl
das
sbb
addr16
adc
mov
inc
cmp
jecxz
ljmp
pushf
fists
call
cmc
dec
scas
cmp
mov
call
push
mov
inc
inc
imul
jmp
icebp
cmc
jne
das
sub
dec
mov
sub
js
ficoml
mov
add
xchg
jne
mov
jmp
rolb
pop
subb
cmpsl
jg
xchg
faddp
add
sub
mov
inc
or
imul
cs
push
xchg
cli
fwait
mov
int
add
dec
jmp
add
jmp
lock
aaa
dec
test
dec
xor
gs
mov
jne
cli
xor
mov
int3
xor
clc
idiv
mov
in
pop
into
outsl
insl
mov
cmp
mov
gs
mov
mov
psubw
pop
or
jne
sub
sub
aaa
cld
lea
cmp
std
adc
fnstsw
sub
jle
xchg
aaa
lret
xlat
mov
enter
js
jecxz
and
enter
pushf
adc
js
add
push
sbb
leave
sbb
adc
aad
call
pushf
dec
jecxz
and
in
dec
sahf
js
add
mov
pop
xchg
inc
aas
js
scas
pop
xorb
pop
lret
dec
jmp
fisubrs
dec
mov
pop
je
fcmovnb
out
mov
mov
mov
and
mov
pushf
or
sub
dec
pop
mov
leave
cwtl
hlt
popf
loopne
aas
loope
mov
repz
int
subb
mov
cltd
jnp
test
shll
aam
jnp
pop
cs
push
in
mov
push
out
into
lret
outsl
fistpll
and
pop
xchg
stos
fs
sbb
pusha
cmpsl
pop
dec
lods
adc
test
sarb
xor
pop
dec
xchg
pop
ret
shrb
or
inc
test
cli
mov
mov
pop
sub
or
xor
mov
inc
adc
test
ds
ds
pavgw
loope
jb
push
negl
cld
ss
xor
xchg
jo
movsb
push
mov
lret
sbb
jmp
mov
jl
xor
nop
in
out
pushf
xchg
lret
es
loop
xchg
sub
xchg
push
rorb
xor
sbb
xchg
add
outsw
pop
int
adc
push
lods
or
xchg
push
push
dec
pop
dec
fistps
xchg
mov
shlb
js
jle
inc
sub
xchg
stos
out
pop
in
and
std
pop
call
pop
mov
fisubrl
fstpt
nop
lcall
lock
cs
lock
std
stc
adc
lods
and
nop
mov
stos
out
ret
enter
pop
and
iret
pop
js
jnp
adc
fsubr
mov
aam
sub
dec
jne
jnp
jno
sub
cmp
inc
mov
inc
push
jl
xchg
sahf
sarb
repz
mov
add
hlt
sub
in
iret
mov
cltd
sbb
fucomi
inc
xor
cmc
imul
lret
jo
jb
test
rcl
cmp
hlt
ds
mov
data16
xchg
or
stos
clc
dec
test
lahf
jl
lods
pop
mov
cwtl
ds
mov
outsb
gs
scas
or
push
cmpl
hlt
imul
push
mov
sub
shl
insb
cs
push
xor
mov
aad
inc
cltd
xor
fwait
push
leave
into
inc
mov
push
or
pop
or
ja
pop
shll
repz
jns
clc
imul
inc
ficoml
add
test
leave
in
fistl
push
fwait
in
lock
mov
jnp
roll
fstps
jae
xor
push
repz
test
ss
inc
out
aam
stc
inc
das
nop
stc
adc
pop
inc
repnz
fs
dec
adc
insb
rorb
shrb
cmp
movsb
loop
xor
adc
and
sbb
mov
das
cmp
aaa
mov
int3
hlt
rclb
clc
repnz
dec
fs
sub
add
inc
cmp
mov
add
enter
fldl2e
mov
lahf
shrl
adcb
mov
mov
orl
jae
mov
loop
mov
sbb
xor
lods
mov
jg
je
mov
ss
test
push
sbb
call
lock
fwait
xchg
fldl
mov
es
clc
push
inc
int3
jl
pop
and
xchg
ficoms
pop
xorb
mov
test
ja
dec
mov
xchg
rcll
mov
lods
mov
xchg
adc
add
lds
imul
lds
xor
ret
pop
popl
sbb
add
call
out
and
sbb
mov
test
out
push
jbe
xor
inc
push
mov
sbb
rolb
xchg
dec
fnsave
outsl
cmp
cmp
jno
mov
push
push
rcrb
inc
mov
or
ss
mov
test
fisttpl
pop
dec
mul
jp
inc
fimull
es
dec
ret
subl
and
xorb
or
mov
push
dec
aaa
sbb
ljmp
xchg
loopne
shrb
mov
pop
out
divl
xor
ja
cmp
push
push
dec
dec
outsb
dec
in
or
mov
sti
imul
sub
jo
sub
and
cltd
fbld
lea
mov
xchg
fistps
push
jb
xlat
mov
out
rol
jecxz
es
add
dec
arpl
mov
lcall
iret
jecxz
cli
insl
xor
out
push
sub
xor
xchg
popa
jecxz
pop
insl
icebp
sub
pop
test
into
movsb
stos
and
cmp
fsubrs
dec
loope
ds
jp
or
xor
push
mov
cmp
jne
clc
cmp
imul
in
push
inc
fnstenv
negb
fistpl
cmp
jge
scas
ja
inc
mov
mov
dec
xor
mov
push
xlat
jl
insb
mov
ja
sbb
mov
pop
fcomps
cmp
push
pop
pop
hlt
scas
popa
rcrl
mov
xchg
mov
movsb
pop
cmpsb
mov
jo
out
addr16
fs
dec
mov
jp
or
jp
add
pop
and
xchg
or
mov
or
mov
cmpsl
dec
add
mov
cmp
js
and
imul
sub
movsb
das
dec
push
xor
popf
inc
popf
pushl
push
iret
pop
add
pop
fiaddl
ja
inc
or
inc
pushf
aad
mov
push
pop
mov
test
jmp
and
push
xor
fsubrl
imull
pop
notb
int
jne
inc
in
es
notl
mov
popa
out
jae
insb
call
mov
mov
cmpsb
hlt
push
mov
lahf
mov
shll
push
xchg
shlb
sub
xor
xorb
sbb
sub
dec
das
cmp
add
jmp
lret
sbb
negb
dec
js
inc
cs
in
push
loop
or
mov
arpl
hlt
fisubs
mov
mov
mov
cmpsb
sbb
pop
mov
inc
xchg
aaa
jg
fnsave
sub
out
pop
in
ret
pop
imul
jne
add
mov
rorl
xchg
jecxz
sub
cmc
jmp
push
jb
jo
cmpsl
ret
rcrb
adc
hlt
jne
jns
call
adc
jg
lcall
movsb
loop
enter
jge
xchg
inc
daa
pusha
movsl
ret
mov
aam
jo
jecxz
adc
mov
movsb
mov
lret
cmpsb
dec
xor
push
sbb
sub
dec
loope
bts
mov
cmpb
push
fistl
sbb
dec
out
mov
fucomi
push
ficoms
pusha
adc
and
or
push
inc
les
xor
xchg
mov
outsl
push
dec
fistps
lods
das
cmp
ret
sti
xor
sbb
aad
xchg
or
mov
sub
aas
loop
xlat
pop
cld
movups
nop
cmp
jmp
jl
movsl
mov
lea
ret
xchg
add
xor
xlat
mov
fmull
sti
pop
sub
scas
in
xor
loopne
push
cmpl
stos
jno
xchg
and
shrb
pop
in
xchg
and
lock
and
sub
cmpsl
loop
sbb
cmp
mov
xor
ljmp
push
aaa
xor
mov
xchg
rcrb
xchg
je
frstor
in
jnp
lcall
cltd
mov
pop
mov
adc
shll
jmp
jp
and
fimull
pop
sub
jne
loope
pop
ret
dec
stc
sbbb
loopne
lret
inc
jg
in
mov
iret
decl
add
jnp
dec
add
push
push
inc
fidivl
jnp
shlb
ret
adc
lds
imul
push
adc
mov
jne
pause
loope
mov
cmp
jno
outsb
sbb
xchg
shrl
addl
mov
scas
loope
adc
mov
and
xchg
xchg
stos
push
shrl
push
push
ja
xchg
jp
push
rclb
mov
lods
dec
jmp
mov
inc
inc
inc
je
out
mov
cld
aaa
inc
adc
push
inc
xlat
or
mov
das
mov
outsl
pop
scas
rolb
dec
test
sarl
es
jmp
popf
iret
test
outsl
dec
mov
mov
pop
mov
inc
xchg
filds
cmpsl
add
or
sub
mov
aaa
jge
mov
pop
and
test
jno
addb
popa
jno
xchg
lcall
std
cmc
int
ret
jb
icebp
cmp
ds
lock
adc
or
jbe
rclb
fcoms
je
mov
outsl
xor
pop
xor
in
push
lods
ret
clc
mov
inc
enter
pushl
movsb
divb
gs
mov
or
jo
rclb
daa
pop
imul
inc
test
sub
and
stos
inc
inc
mov
xor
outsl
pop
push
jns
adc
cli
sbb
pop
inc
imul
jne
aam
mov
cmp
les
mov
aam
inc
shl
sub
add
jb
cli
cmpb
mov
dec
or
inc
div
movsb
push
lods
imul
add
out
sub
push
imul
jns
test
cs
mov
mov
xchg
lock
sti
rorb
mov
das
pop
lods
cmp
pusha
xchg
pusha
mov
test
sub
mov
add
out
popf
les
push
je
or
lds
jp
and
dec
mov
add
sub
lds
pop
add
test
adcb
inc
out
xor
adc
loop
in
sub
cmpsl
lret
out
xchg
fwait
jbe
adc
lret
mov
mov
cmc
sub
insl
je
gs
pusha
pop
sbb
mov
pop
or
mov
sub
jns
popa
mov
xor
dec
repz
je
out
lret
jmp
into
insl
into
xor
or
jno
and
cmp
and
sbb
inc
loope
mov
jg
mov
cmp
mov
lea
int
adc
cmpsl
xor
xchg
repz
insb
inc
pop
icebp
lret
fs
stc
jge
jns
shrl
jmp
scas
push
inc
mov
mov
cwtl
cmp
add
dec
push
push
faddl
std
hlt
jmp
xchg
inc
mov
popf
xchg
imul
push
dec
jne
mov
daa
cmpsl
sahf
lcall
pop
inc
lret
fbstp
es
mov
leave
testb
stos
jle
repnz
jae
scas
iret
xor
fidivrl
sar
jecxz
push
jp
add
mov
xchg
outsb
dec
enter
xlat
xor
lods
mov
adcl
and
xor
lds
fistl
ficompl
mov
cmpsl
test
sbb
sub
sub
adc
mov
dec
push
ja
mov
std
sbb
inc
xchg
int
pop
push
lods
push
out
or
mov
or
xchg
push
dec
or
lcall
das
test
mov
aad
xchg
insb
cld
sbb
test
insl
jnp
sub
test
daa
jecxz
mov
mov
mov
fadds
scas
repz
cltd
stos
gs
test
xchg
mov
inc
jp
add
and
sbbb
int
jmp
stos
test
add
aam
mov
pusha
jg
iret
xchg
lahf
je
into
add
dec
mov
mov
lret
arpl
cmp
push
minps
cmp
sub
std
inc
jo
incl
sub
daa
pop
sub
push
sub
push
in
popa
loope
xchg
sub
roll
lret
icebp
addb
xlat
sbb
jns
fs
test
jns
push
xor
scas
out
mov
mov
cmpsl
addb
inc
add
sahf
jmp
jbe
mov
mov
pop
sub
xlat
mov
xchg
int
mov
cli
stc
and
stos
inc
ret
mov
lds
xchg
add
push
repnz
sub
sbb
lds
sbb
sub
xchg
data16
outsb
out
xchg
test
mov
popa
gs
ja
jns
sub
addr16
sbb
ljmp
scas
push
rol
pop
add
stc
aas
xor
int
adc
push
lds
ret
sub
add
xchg
icebp
ds
cmp
loope
pop
fstps
adc
and
cmp
fwait
les
aas
sbb
add
inc
test
sub
jl
xchg
mov
inc
fdivrl
ret
adc
jb
push
push
jno
jg
cmovne
mov
pop
rolb
sbb
lret
xchg
shlb
xor
pop
sub
pop
mov
inc
cmp
push
push
shlb
adc
not
cli
in
mov
popf
lcall
jo
test
jnp
xchg
outsb
push
arpl
adc
sbb
mov
shld
push
cmpsl
xchg
imul
jo
cmpl
dec
fldenv
jbe
pop
jno
repz
pushf
jmp
nop
xchg
test
popa
sub
push
jnp
aam
pop
adc
insb
jle
xor
sbb
imul
divl
xchg
jno
out
out
or
add
outsl
fmulp
mov
sti
add
sub
ror
cmp
mov
sub
jle
xlat
cs
push
lods
mov
pop
or
xor
ja
sub
ds
jns
rclb
fstl
xchg
arpl
in
test
inc
mov
sbb
fists
jae
xchg
loope
mov
fsubr
mov
ja
mov
mov
xchg
repz
outsl
jp
push
in
push
mov
jecxz
push
sub
loopne
sub
sbb
pushf
xor
pop
in
aaa
xor
xchg
sub
ret
addl
xorl
imul
push
xchg
mov
inc
daa
push
xor
sub
fucomp
xchg
push
xchg
dec
xor
pop
pop
subb
loopne
sub
xor
mov
xchg
push
jns
xchg
push
outsl
xchg
xchg
or
stos
cld
orl
imul
mov
pop
xchg
popf
xor
lods
mov
jge
adc
xchg
cmp
mov
xlat
aad
sahf
jb
imul
dec
mov
gs
jl
aam
call
rcl
cmpsl
jge
cmc
adc
leave
ds
ja
mov
push
int3
gs
sar
mov
jl
daa
dec
call
dec
daa
outsb
lock
rorb
mov
lret
pushf
pop
cmc
movsb
sbb
cmc
subl
dec
out
testb
stos
loopne
insb
mov
xchg
mov
inc
icebp
inc
sahf
fneni(8087
aam
push
cmpsb
cmp
sahf
lcall
xchg
jmp
dec
mov
pusha
insb
inc
dec
jmp
insl
bound
fnstenv
es
leave
add
mov
add
in
sbb
sahf
fidivrs
icebp
jae
rcrb
mov
dec
push
xor
out
add
mov
mov
dec
cmpsb
jmp
sbbl
fstpt
add
out
rorb
aam
stc
mov
mov
dec
xor
movl
sub
test
push
scas
mov
out
addr16
jmp
pop
pop
dec
sub
mov
xlat
lahf
sub
cmp
dec
test
enter
xor
adc
stos
imul
xchg
mov
fnstenv
scas
fstps
sub
in
lods
jmp
jno
dec
mov
xchg
adc
mov
int
jecxz
add
mov
mov
mov
outsb
adc
popa
movsl
jbe
shll
mov
mov
inc
adc
nop
add
icebp
rcrl
pushf
or
and
xchg
leave
push
add
cmp
iret
out
out
jae
lods
cmp
mov
cmp
fdivrl
jge
test
int3
ret
push
dec
roll
sahf
sub
sub
mov
dec
or
nop
ljmp
xchg
pop
imul
fisubrs
cmp
xor
pop
xchg
pop
aaa
and
subb
shr
jmp
outsb
push
jne
ret
xchg
xorb
aas
mov
mov
aas
out
push
push
pop
sti
repnz
cmpsb
xor
pop
lods
push
mov
mov
arpl
pop
fmull
call
lods
jns
nop
jg
mov
in
out
das
mov
push
std
in
outsb
xchg
jecxz
sbb
jecxz
ret
adc
les
arpl
push
mov
push
out
push
shll
adc
outsl
mov
sbb
cmc
adc
sbb
sbb
fists
xor
jp
pop
lahf
xchg
mov
sub
leave
mov
pop
pop
popf
add
mov
scas
leave
pushf
push
orb
pop
fisubrs
in
ss
lcall
cmpsb
xor
sbb
stos
mull
jne
jg
inc
dec
fldt
jmp
movsl
xchg
pusha
push
fdiv
xchg
js
enter
jge
jecxz
dec
ficoms
cld
and
cld
add
lods
ss
mov
fs
repz
push
out
mov
jae
aas
and
xor
nop
pop
inc
and
sbb
mov
add
xchg
or
xor
shrl
inc
add
idivb
mov
pop
aam
jae
mov
fsubrl
lods
mov
or
aad
repz
aam
jns
dec
or
sbbb
cmp
mov
lock
pop
scas
mov
push
mov
pop
inc
xchg
cltd
lcall
rorb
xchg
jg
outsl
or
xor
lock
adc
int3
inc
cmp
loop
ret
or
push
xor
sahf
and
jns
xchg
push
and
mov
and
int
inc
xchg
push
shrb
jne
xchg
in
mov
xor
dec
and
cltd
fwait
mov
lds
inc
stc
jmp
push
ret
sahf
jb
mov
lods
or
jae
add
movsb
inc
sub
fldcw
hlt
mov
dec
aas
orb
mov
push
push
lds
inc
ret
outsl
fwait
mov
xor
fwait
push
mov
shll
lret
fwait
sub
mov
sub
pop
jb
iret
mov
int3
lea
es
loope
jnp
out
mov
xchg
inc
push
dec
pushf
in
loop
test
cmp
lock
pop
inc
inc
jno
xor
test
sbb
jl
or
push
clc
fs
or
and
lods
lahf
shlb
ret
aas
addr16
ljmp
adc
xor
sub
mov
adc
out
rol
inc
stos
notl
adcl
int3
xor
pop
push
loope
leave
push
xchg
shl
fsts
pushf
xchg
or
iret
mov
xlat
xor
out
scas
push
filds
rclb
or
cmp
dec
ds
bound
mov
sahf
sbb
jecxz
push
xchg
cmp
cwtl
push
inc
adc
icebp
or
add
test
sbb
sbb
rcr
xor
mov
pop
out
cmp
add
int
je
in
popf
cld
pop
pop
or
mov
jbe
leave
push
push
scas
in
or
and
cli
fcomp
and
call
mov
popf
js
jns
jmp
in
xor
push
fistps
bound
int3
push
xchg
xlat
out
jo
cli
dec
or
out
repnz
push
mov
or
add
cmpsb
lea
movsl
mov
xchg
cs
push
xor
cmp
jle
in
and
dec
inc
imul
ret
fcmovnbe
mov
scas
jae
popa
jmp
xchg
test
fiaddl
xor
jmp
enter
or
and
lcall
push
adc
test
or
mov
cli
dec
xchg
inc
mov
cmp
call
stc
or
mov
mov
outsl
mov
pop
mov
sahf
aas
lahf
hlt
xchg
jg
test
push
repz
pop
popf
lcall
rcrb
daa
lods
xchg
pop
dec
std
ffree
nop
add
mov
scas
psubq
es
scas
push
mov
setl
mov
incl
lcall
xorb
scas
pop
push
movb
aam
repnz
adc
in
bnd
xchg
and
addr16
mov
mov
xchg
pusha
mov
add
cwtl
add
push
jbe
sbb
icebp
mov
sbb
sbb
lret
push
insb
xchg
std
out
fsubl
xchg
lea
aam
sarl
fs
loop
lret
fwait
bound
cwtl
cmc
jp
mov
scas
js
jbe
add
mov
jne
shl
mov
mov
mov
add
inc
dec
out
jmp
mov
sbb
mov
push
fistl
repz
test
xchg
fwait
pop
push
push
cmp
dec
cli
jle
or
sbb
jb
dec
xor
mov
push
fisubrs
bswap
pop
stos
movsb
inc
sbb
fcmovbe
bound
inc
jg
cwtl
jbe
sti
adc
mov
sub
mov
outsl
std
dec
and
add
call
push
ljmp
insb
mov
jp
mov
rcll
sub
jl
lock
cmpl
mov
or
mov
xchg
push
dec
inc
sahf
xorl
shrb
mov
aas
sub
cltd
ds
insb
cwtl
cmp
dec
repz
jae
ror
clc
leave
rorl
cmp
aam
xor
orb
imul
out
xor
and
shrb
sbb
adc
mov
loope
subl
adcb
cwtl
sub
je
mov
mov
lds
repnz
inc
lds
xchg
in
xchg
into
jmp
fistl
lahf
adc
sbb
clc
mov
data16
pop
ror
gs
add
ficomps
addr16
lea
ja
fxch
mov
das
jp
xchg
or
testl
testl
jbe
mov
adc
mov
fadds
cmp
cli
cli
out
jmp
pop
aas
in
sub
adc
mov
add
push
test
loope
sub
dec
mov
mov
sbb
mov
test
gs
pop
jno
mov
add
stos
leave
inc
aam
inc
xchg
pusha
and
xchg
jmp
out
out
add
stos
xchg
lcall
call
loop
adc
cmc
int3
xchg
stc
sbb
mov
mov
sub
ss
adc
adc
and
xor
adc
cmp
test
test
push
and
cmp
mov
mov
push
add
iret
push
mov
js
xchg
add
push
xchg
fnstenv
scas
push
call
lea
rcll
dec
xchg
mov
pop
add
ret
imul
inc
cs
aaa
leave
push
sub
bound
mov
dec
inc
clc
mov
mov
mov
mov
cmp
test
outsb
sub
adc
das
add
xlat
rorb
adc
add
push
mov
xchg
inc
sub
pop
inc
adc
cmc
sub
and
jae
out
and
fs
pop
inc
cltd
das
int3
pop
ficoms
mov
decl
and
movsb
shlb
lods
int
leave
fcmovne
lea
sahf
fidivrl
popf
dec
push
dec
fxam
lcall
in
mov
sahf
rcl
les
repnz
aad
insl
loop
push
inc
fstpt
adc
stos
lea
jne
bound
addr16
cmc
xlat
data16
sahf
mov
and
fs
or
or
cli
sub
iret
cli
xchg
aas
mov
xchg
icebp
pop
xor
xor
jne
faddp
mov
pushl
push
mov
mov
jle
push
rorb
mov
sub
add
arpl
or
push
andb
js
xchg
jg
and
add
mov
xlat
inc
xchg
test
add
inc
cmpsb
test
mov
ficoms
lods
imul
pop
jp
inc
cli
pop
into
xchg
in
insb
jle
xor
pusha
jno
and
add
in
add
test
sbb
mov
xlat
jecxz
mov
lea
mov
adc
sbb
fisubs
adc
loopne
sbb
test
stc
dec
cli
pop
mov
xor
xchg
lock
aam
scas
popf
mov
outsb
adc
pop
lods
scas
je
cmp
xor
mov
jg
mov
rclb
xchg
dec
adc
lock
lods
mov
push
mov
push
ja
mov
mov
adc
jmp
dec
sbb
xchg
push
mov
sbb
mov
mov
imul
scas
es
jnp
pop
adc
fucomi
xchg
fistpll
pop
xor
dec
inc
scas
fdiv
iret
mov
jo
mov
lret
pusha
movsl
cmp
add
and
fstpl
popf
out
lds
mov
and
loopne
out
dec
mov
inc
jb
lea
fadd
xlat
data16
addr16
sub
add
pop
dec
cmpsl
cmc
lret
fdivs
xor
pop
daa
cmp
push
cmpsl
cmp
mov
add
subl
fs
pop
push
fsubr
mov
xor
inc
out
adc
mov
rorb
popa
xchg
pop
pop
jbe
in
add
xchg
leave
mov
jg
jle
sti
in
inc
mov
out
push
movsl
sub
clc
and
imul
out
sbb
js
push
sub
or
sub
rcll
mov
dec
cs
lods
out
mov
loop
and
lods
or
mov
sub
mov
pop
fdivl
xor
mov
scas
lock
arpl
jp
and
inc
dec
jb
bound
rolb
pop
sub
cmp
mov
int
mov
sarl
call
push
cmpb
xor
shlb
mov
jbe
notb
lret
adc
sbb
mov
mov
loope
pop
push
out
jns
std
inc
aaa
shlb
mov
cwtl
stos
in
xchg
push
inc
sub
xchg
sbb
les
dec
popf
fstpl
inc
mov
inc
bnd
addl
jge
jg,pn
cmp
rorl
cmp
xrelease
push
dec
cmp
cmc
or
mov
mov
movl
push
test
push
lcall
scas
pop
lret
sub
mov
insb
arpl
lods
push
ffreep
add
sub
mov
into
aam
jmp
lret
aas
dec
push
test
push
int
jns
mov
in
push
lock
addb
fnsave
and
jl
xchg
fistps
fildll
inc
dec
cli
sub
popl
jnp
outsl
mov
push
aad
and
sahf
jo
stos
pop
add
mov
sbb
adc
or
stos
pop
test
sbb
cs
push
popf
mov
jb
leave
ret
sbb
mov
lods
inc
cltd
push
int
pop
repnz
add
lcall
cmp
push
movsl
jbe
mov
movsb
mov
inc
int
imul
pop
roll
mov
fisubrs
loope
in
adc
imull
xor
data16
push
test
xchg
inc
and
popa
fst
and
and
jae
mov
and
inc
add
repz
add
xchg
je
mov
ds
inc
fbld
mov
ja
dec
loopne
pop
push
jp
push
in
jl
loope
movsb
sbb
lods
gs
adc
loop
scas
scas
mov
pop
aad
test
cmp
push
push
mull
sbb
add
clc
call
out
les
push
enter
rorl
test
aas
dec
aas
sarb
jl
mov
xchg
hlt
cli
cli
xlat
push
movsb
cmpsl
les
push
aad
mov
rcl
popa
lea
arpl
bound
ss
outsl
push
imul
outsl
xor
testb
adc
aaa
out
cld
data16
push
loopne
jp
leave
call
jbe
outsl
push
pop
cs
jle
out
inc
addl
mov
inc
int
pushf
sti
xlat
roll
gs
mov
add
iret
dec
adc
pop
out
sbb
sti
or
push
mov
push
cwtl
push
or
add
or
pop
ret
mov
cltd
out
jnp
outsl
pop
add
jbe
enter
push
or
mov
ret
push
mov
sub
cmp
cli
test
out
call
lods
scas
adc
push
bound
scas
popf
mov
aad
sbb
rcr
leave
mov
leave
sti
cmp
imul
dec
xchg
adc
mov
pop
lcall
sbb
cltd
lret
loop
jp
add
int
pop
in
or
lcall
fistl
dec
fsubl
or
pushl
inc
shl
ret
add
mov
jl
jmp
out
imul
loope
jbe
js
inc
and
mov
xchg
jp
add
sahf
mov
stos
imul
and
test
sub
aad
push
mov
test
or
aad
adc
hlt
sbb
inc
xchg
les
leave
addr16
adc
xchg
ret
pop
pop
inc
inc
mov
scas
cwtl
inc
jmp
in
pop
jg
pop
cmpl
pop
cwtl
outsl
rorl
in
data16
or
sub
add
stos
mov
loopne
cmp
mov
nop
inc
lock
or
cmpsl
mov
lcall
lahf
jae
push
mov
jecxz
bts
adc
mov
pcmpgtw
jg
mov
mov
loopne
sbb
in
and
loope
mov
cwtl
xor
lods
cli
cmp
xlat
sbb
cmpsb
daa
jne
sbb
xor
jecxz
popf
xchg
lret
xor
push
jge
sbb
add
xor
adc
lods
ret
popa
cmp
pop
mov
jno
jno
imul
mov
loop
jo
sub
sahf
mov
fsubr
and
stos
xchg
aas
sbb
sub
fucomi
sahf
in
mov
out
sbb
popa
sahf
add
lock
les
xlat
bswap
mov
fdivs
sub
or
sti
cld
and
dec
push
adc
pop
popf
fadds
popa
aas
repnz
dec
xor
or
pop
fstp
push
pushf
dec
push
scas
sub
test
add
ret
xor
jge
lret
jne
les
je
js
imul
les
dec
ffreep
arpl
ja
movb
mov
xlat
lods
fistpll
out
loope
push
push
sub
daa
sbb
jbe
cmpsl
and
mov
ret
out
into
sub
sbbb
pop
or
adc
mov
adcb
pop
jle
mov
inc
push
sti
cli
clc
xchg
xchg
xor
iret
add
mov
mov
lret
sub
in
pop
push
ret
xchg
pop
in
dec
jb
icebp
shll
push
data16
decb
xchg
loope
jns
adc
out
or
inc
pop
or
jns
fcoml
xor
or
test
fistpll
roll
fldenv
dec
adc
mov
rorb
push
subb
inc
in
push
int
cmp
mov
jno
mov
pop
sarb
test
mov
outsb
pop
add
imul
and
test
out
sub
jns
dec
dec
cltd
xchg
lods
cmp
js
adc
addr16
iret
mov
add
push
mov
push
mov
push
or
sub
mov
in
xor
sbb
ljmp
mov
movsl
inc
jb
pop
cmp
popa
push
test
adc
and
fninit
test
out
out
stos
testb
xchg
out
xchg
dec
jp
fbld
xchg
mov
cmc
subl
sbb
cmp
enter
xor
std
clc
lods
inc
je
and
jl
aaa
fsubrl
pop
jae
mov
dec
jle
ja
mov
lds
mov
push
ss
jecxz
bound
pop
and
push
jbe
mov
inc
jbe
js
rorl
aas
mov
hlt
call
add
sbb
xchg
arpl
fidivrs
jecxz
stos
ds
mov
pop
or
and
daa
add
mov
xchg
push
test
push
data16
mov
scas
enter
gs
mov
ds
pop
movsb
outsb
pop
stos
subb
mov
adc
xchg
sti
fstl
int3
js
int3
dec
cmp
outsb
sub
test
rcrb
nop
pop
lods
jp
ja
in
inc
clc
cmp
outsb
cmp
cmp
or
mov
int
mov
xchg
add
imul
fcomi
mov
aas
arpl
and
in
pushf
jmp
insb
lods
repz
sahf
lcall
les
mov
or
inc
fwait
xchg
adc
fwait
adc
push
and
push
psubd
popa
clc
sub
js
sub
cmc
adc
cmp
jo
inc
es
mov
inc
cs
jle
mov
cmp
xor
inc
cli
mov
lret
lds
outsl
mov
enter
loope
in
test
loopne
out
mov
sbb
mov
sbb
scas
pusha
jl
mov
jge
mov
xlat
setb
outsl
xorl
pop
cmp
mov
jle
jns
cmp
xchg
inc
imul
fwait
mov
jno
cmc
jne
mulb
mov
ds
jno
mov
and
divl
pop
pop
dec
pop
mov
sub
push
ds
dec
jb
mov
cmp
sbb
lock
mov
js
daa
jbe
push
cltd
cwtl
daa
fs
or
add
sahf
pop
xchg
xlat
pop
lods
inc
stos
xlat
fisttpl
sub
mov
inc
xchg
pop
dec
cli
roll
mov
dec
lret
outsb
dec
rclb
pop
and
push
mov
roll
mov
lcall
lock
jp
ret
pop
mov
push
cmp
outsb
loopne
push
sub
arpl
mov
sahf
hlt
mov
roll
cmp
fwait
xchg
rcll
cmpsl
sahf
mov
insl
pop
xchg
xor
insl
and
cwtl
push
mov
or
aas
das
daa
cltd
stos
pop
fldl
insl
not
mov
add
lods
jp
fnsave
sub
add
fiaddl
xor
xchg
push
jbe
addr16
ljmp
dec
fsts
sub
loope
rcl
in
add
pop
lock
fstps
xchg
pop
cmc
lahf
pop
imul
mov
cmc
inc
dec
cmc
fstps
push
fdivrs
adc
test
std
imul
jp
sbb
lods
aaa
fistpll
test
xor
arpl
loop
hlt
retw
jae
push
cld
xchg
xor
xchg
sub
shll
cmp
sub
sub
cmp
lods
mov
cmpsb
push
push
adc
test
inc
and
adc
sarb
in
and
cmp
pushf
or
add
dec
movsb
sarl
cli
sahf
aam
dec
lcall
loop
push
out
mov
xchg
inc
orl
lods
ja
out
jno
stos
mov
lods
and
inc
pop
out
repz
jg
scas
push
and
and
lds
cmp
cmp
add
lods
bound
xchg
or
movsl
sahf
mov
jo
cmpsl
test
push
sti
or
mov
mov
hlt
hlt
inc
jno
adc
sti
fiaddl
cmp
push
icebp
aad
jecxz
sbb
mov
sbb
and
scas
sbb
movsb
mov
mov
xchg
push
mov
subb
dec
mov
adc
das
sub
dec
rol
scas
sbb
out
cld
test
sub
push
add
in
inc
adc
fmul
pop
dec
cmp
imul
mov
xchg
sbb
in
adc
cmp
adc
out
cwtl
adc
mov
cmp
inc
leave
mov
in
clc
fcmovu
adc
mov
popa
lfs
lret
jo
cli
mov
or
add
rorb
addr16
dec
add
std
test
cmc
xchg
cmp
aam
mov
mov
xchg
pop
data16
mov
lcall
cmp
xchg
jne
arpl
adc
test
test
and
mov
jae
das
cmp
mov
dec
mov
push
imul
ret
rcrl
arpl
xchg
adc
rorl
jcxz
push
call
inc
lret
repnz
dec
test
add
adc
sub
das
dec
pop
mov
cmp
adc
xlat
rorl
pop
push
ljmp
pusha
test
scas
stos
test
gs
incb
scas
ret
inc
xor
pop
xchg
xchg
adc
ret
scas
fwait
or
xchg
xor
lods
xchg
fildl
hlt
dec
pop
push
lods
es
inc
shll
pop
cmp
push
push
jl
scas
addr16
into
inc
cmp
dec
and
xchg
jl
mov
bound
mov
jmp
jne
test
dec
lods
fmulp
lods
mov
mov
les
mov
push
mov
add
sub
outsl
sbbb
out
divb
imul
xchg
flds
inc
mov
rol
or
push
mov
mov
adcb
aad
sub
push
adc
loop
pusha
scas
mov
stos
xor
addr16
mov
sbb
dec
test
das
push
inc
pop
mov
xor
pop
js
xor
or
pop
rclb
lock
loop
lret
cmpsb
subb
leave
movsb
and
mov
dec
bound
mov
push
ja
lret
xorb
lods
mov
popa
popa
mov
aad
sub
rol
push
dec
dec
jmp
xor
fiadds
dec
cli
sbb
sub
adc
lret
fmulp
pop
inc
sbb
mov
hlt
xor
jbe
es
arpl
pop
scas
push
loope
pop
adc
loope
add
or
xchg
or
fisttps
adc
cmpsl
sub
push
leave
push
std
or
fmulp
add
pushf
aam
mov
popa
enter
sahf
mov
mov
cmp
repnz
dec
fwait
adc
cmc
fcompl
stos
mov
pop
add
cmp
push
cmp
les
mov
movsl
repnz
sarl
test
push
inc
stos
nop
push
loope
mov
and
insb
adc
mov
insb
jp
cmp
in
sub
shr
xchg
cmp
pop
jns
xchg
mov
push
repz
push
and
fadds
and
add
cltd
inc
pop
loop
sub
sbb
add
add
daa
hlt
and
jno
add
outsl
cs
mov
in
jp
loopne
jb
sub
cltd
dec
jmp
out
fstpl
dec
fbstp
std
popa
ja
loope
sbb
cwtl
jmp
mov
mov
xchg
add
popl
icebp
popf
repnz
push
lods
in
cmc
cld
xor
mov
jno
xchg
inc
dec
xchg
into
loope
sub
sbb
sub
sub
fnstsw
xchg
or
and
jae
int3
mov
mov
lock
jb
fldt
sahf
out
mov
add
pop
pop
in
jl
push
aas
ds
loopne
icebp
sbb
mov
and
fbstp
mov
daa
mov
jo
lds
fcompl
adc
dec
shl
in
adc
mov
fiadds
sbb
les
cwtl
dec
mov
cs
movsb
mov
sbb
cmp
imul
inc
jbe
sahf
xchg
sub
sbb
mov
lret
mov
inc
in
xor
in
jmp
sub
adc
aad
lods
das
sbb
inc
jns
fbld
pop
fistpll
fbstp
cmp
scas
lock
and
imul
fstp
mov
and
sub
out
roll
push
in
loope
test
adc
and
shrl
jo
stos
dec
pop
or
cmp
inc
icebp
xchg
or
cmc
sbbb
sti
adc
jmp
sbb
mov
adc
adc
insl
sub
loopne
push
fsubs
cs
pop
cmpsl
push
nop
mov
in
mov
ret
mov
cmc
mov
cmp
imull
out
loope
bound
push
je
ret
imul
mov
enter
adc
xor
ja
push
leave
shl
adc
rcll
fwait
or
cli
add
shrb
bnd
bound
push
popa
mov
pop
int3
or
push
cld
iret
xchg
gs
xor
mov
pop
pop
pop
cmpsl
mov
lds
and
jl
lret
int
adc
adc
or
mov
pusha
aas
pop
mov
xchg
mov
dec
jl
jbe
call
pop
and
add
cmp
out
dec
inc
sub
sub
mov
and
popf
cld
xchg
mov
xchg
leave
ret
sbb
lea
movsl
jp,pn
int
sbbl
xchg
sub
sbb
pop
outsb
mov
mov
aam
and
pushf
cmp
jo
push
or
jo
add
xor
or
dec
xchg
sub
sti
aad
inc
out
popa
clc
test
pop
arpl
xchg
xor
dec
std
cmp
jae
push
xor
pusha
jp
in
std
repz
jb
xchg
mov
push
jge
adc
jle
mov
push
inc
rclb
and
pop
cmp
xor
jle
or
shlb
mov
jl
push
aad
xor
xchg
sbb
and
mov
outsl
or
fidivl
pop
arpl
ret
mov
pop
inc
push
lods
add
aam
sub
lods
jp
aad
adcl
ja
sub
repz
arpl
sub
pop
mov
fdivl
pop
jnp
std
aad
xor
lods
mov
cwtl
roll
xor
cmpsb
pop
out
fxch
or
mov
fidivl
cmp
test
mov
xchg
xchg
repnz
roll
pop
popa
insl
out
mov
add
cmp
loop
jno
ret
dec
stc
cmp
test
and
push
jp
nopl
fwait
mov
mov
mov
xchg
cld
xchg
fsubrl
sbb
xchg
mov
push
or
mov
sbb
push
or
outsl
call
and
call
testl
xchg
or
jg
mov
sbb
fisubs
aaa
scas
aad
mov
sarl
add
sbb
cmp
shll
test
inc
fwait
xchg
sbb
lea
stos
pop
cltd
mov
pop
xchg
inc
push
mov
mov
int3
sub
lcall
fs
stc
shl
test
dec
add
enter
adc
fdivrl
mov
lcall
or
fldcw
xchg
aas
jp
mov
pop
loope
add
and
outsl
jno
popf
and
mov
dec
pop
mov
stc
sti
cli
lret
mov
insb
lea
add
popf
mov
dec
call
cmp
xor
je
sbbl
insb
xor
loopne
das
mov
lea
stos
pop
adc
cmp
or
adc
mov
cli
push
dec
cs
addr16
fimull
mov
pushf
or
rcr
ds
sar
sbb
pop
sbb
and
sbb
pop
mov
insb
cld
push
mov
push
ds
fiaddl
test
jmp
ja
cmp
mov
inc
je
sub
xchg
sub
or
add
sub
pop
mov
pop
cwtl
cmc
mov
dec
icebp
xor
pop
bnd
mov
push
test
mov
jne
les
movsl
jns
es
push
and
nop
jno
mov
cmp
dec
shlb
adc
mov
std
and
fldt
xchg
stc
fnstenv
jmp
mov
hlt
jns
aad
fldl
repz
push
je
cmpsl
repz
adc
push
mov
rcrl
and
out
daa
cmpsl
push
mov
sub
push
cmc
xor
in
pop
adc
mov
and
insl
xor
movaps
push
push
or
test
mov
inc
scas
jb
mov
push
js
nop
js
fstl
xor
xor
mov
and
and
mov
adc
add
or
pop
pop
pop
loope
dec
lahf
mov
adc
mov
aam
jle
jp
sub
push
je
pop
pop
mov
cmpsl
mov
mov
lea
xor
sub
mov
repz
aaa
divb
jbe
pop
sbb
cmp
sbb
jnp
loop
push
fistpll
lahf
or
lret
outsb
inc
insb
adc
xor
xorw
ficompl
stos
push
fmull
mov
jge
in
fwait
cmp
xchg
and
nop
xchg
int
add
lcall
jmp
add
xchg
das
jns
jno
sub
cmp
dec
call
mov
into
rcrl
and
ss
scas
add
cmp
jl
fisttps
inc
add
repz
bound
inc
push
loopne
add
inc
lcall
mov
iret
je
or
rcrl
xor
adc
cmp
mov
dec
push
pop
les
rcl
stos
imul
adc
or
sbb
psraw
pop
rcl
test
push
call
cmpsb
ljmp
repnz
pop
xor
les
outsb
mov
add
insl
adc
stos
sub
xchg
push
andl
mov
cmpsl
fcmovb
xorl
inc
sbb
mov
out
inc
push
xor
jl
inc
imul
popa
and
ror
ret
pop
cmp
aam
sub
mov
inc
int3
pop
xchg
mov
mov
mov
bound
mov
pop
xor
adc
fidivrs
pop
fnstcw
adc
mov
test
testl
out
loop
in
jns
fsts
dec
xor
inc
mov
add
jnp
add
and
sub
lds
lret
mov
jno
inc
fisttpl
jns
xor
push
mov
std
cmpsb
fbstp
mov
outsb
sahf
or
mov
stos
xchg
test
les
xor
in
mov
jmp
in
in
gs
lods
mov
and
mov
aas
push
xchg
fidivrl
mov
cmpsb
mov
dec
push
movsl
in
xchg
sbb
jae
cmp
adc
fmull
movsl
ja
pop
sub
ds
dec
fidivs
mov
subl
lods
aad
faddl
movsb
sbb
xlat
movlhps
and
add
clc
mov
dec
or
add
stos
leave
push
pop
cli
sub
pop
adc
ds
gs
jae
fsubr
add
and
mov
fdiv
sub
cmc
das
sbbl
inc
xchg
add
jno
in
test
ret
testl
and
push
jge
pop
pop
int
daa
pop
cli
mov
pop
fadd
push
loope
jp
jmp
pop
ljmp
xchg
imul
xchg
je
jle
daa
movsl
jns
xchg
stos
jae
mov
xor
cs
push
pop
dec
sub
mov
push
js
cmp
xchg
jae
inc
sub
sarl
in
mov
testl
repnz
pop
lods
scas
lock
sahf
xchg
dec
ss
sbb
and
jae
movsb
jge
pop
add
xchg
insl
mov
setb
mov
pop
stc
xchg
fstl
add
inc
push
cmp
ficomps
js
mov
test
into
mov
adc
jecxz
or
stc
stos
sbb
jmp
aas
and
imul
loop
sub
push
pusha
or
push
adc
cmpsb
in
imul
and
mov
sbb
jo
adc
les
arpl
ss
outsl
out
loope
popa
arpl
shlb
jae
add
lods
into
pop
xchg
insb
fistpl
mov
lahf
bound
je
pop
sti
mov
xor
mov
jp
in
push
dec
or
dec
or
std
call
mov
jae
dec
xchg
pop
jg
pusha
pop
fistpl
dec
push
ret
jne
mov
mov
shrl
lods
or
lods
xchg
int3
adc
adc
dec
mov
sub
int
inc
mov
stc
aam
das
pop
bound
or
or
out
xor
daa
aas
ds
xorb
bound
cmp
cmp
in
jne
test
sahf
mov
pusha
jno
stc
xor
dec
dec
add
push
sbb
jecxz
out
xor
dec
push
xor
mull
jp
cmc
imul
flds
mov
pop
jne
sbb
add
or
push
pop
arpl
dec
shl
dec
adc
rcrl
mov
insl
bound
out
pop
repnz
int
cs
aas
insb
fcmovu
inc
and
xchg
movups
mov
lret
adc
dec
sub
ja
mov
icebp
aas
loopne
pop
and
jle
mov
shll
js
pop
cmp
cmpsb
imul
sub
mov
ret
mov
sbb
es
xor
mov
leave
shll
jne
lods
xor
arpl
sarl
lods
xor
lds
inc
out
leave
jne
sub
xor
jge
leave
sub
imul
enter
lods
dec
cmpb
add
call
loopne
inc
cwtl
mov
insb
push
cwtl
orb
gs
mov
shlb
fmulp
pop
and
xchg
pop
dec
dec
mov
cli
inc
sbb
mov
mov
xlat
lcall
call
inc
aas
pop
xchg
mov
fstpt
mov
xchg
sbb
xchg
jnp
inc
dec
imul
xchg
pop
xor
enter
adc
cs
cld
sahf
loopne
clc
pop
sti
jecxz
add
mov
mov
out
jp
test
ret
out
icebp
mov
shlb
push
push
lock
test
lea
int3
negl
jne
rorb
insl
cltd
mov
out
cmp
ret
sahf
cmpsl
inc
dec
popf
dec
pop
mov
cmp
sahf
popa
fst
in
dec
push
test
lods
xchg
jns
mov
mov
jle
adc
cs
aam
jp
xor
lods
inc
xor
aaa
rolb
cs
fwait
into
lret
xchg
jno
imul
mov
xchg
jge
dec
add
in
pushfw
inc
mov
popf
call
adc
xchg
add
pop
call
test
lret
fstp
jo
push
lcall
cmpsb
mov
pop
jns
scas
mov
lods
movsl
mov
pushf
aas
sbb
dec
cmp
sub
push
pop
stos
out
jp
adc
pop
or
hlt
aad
fmuls
loope
out
int3
js
jcxz
mov
cmp
jge
mov
divb
add
popa
xchg
fnstenv
jne
cltd
mov
notb
pop
jg
or
add
dec
mov
mov
repnz
mov
mov
dec
dec
inc
sbb
or
dec
adc
fisubrl
pushf
sbb
add
jl
lods
mov
jecxz
loope
sbb
inc
pusha
faddl
pop
rol
or
mov
inc
test
xor
sbb
mov
in
fdecstp
jne
adc
inc
gs
mov
push
lods
jo
ljmp
ret
xor
jg
fists
test
cld
xchg
cmpsl
and
in
push
push
mov
push
mov
jg
jae
xor
movsb
das
sahf
mov
cld
movsl
fcoms
inc
andb
les
add
icebp
push
sub
jmp
sti
pop
out
cmp
in
sbb
pminsw
or
stos
lret
test
repnz
inc
add
gs
mov
push
movsl
mov
xchg
dec
mov
sahf
and
ret
and
lds
push
push
pop
sbb
sub
cmc
cld
jne
mov
out
mov
or
iret
mov
mov
fs
ret
xchg
cmpl
das
lock
sbb
inc
mov
adc
dec
xor
mov
test
mov
and
shl
sbb
jno
nop
icebp
cmp
sub
mov
pushf
hlt
inc
mov
inc
jmp
push
roll
pop
push
psrld
in
jbe
pop
in
je
imul
rorb
mov
enter
icebp
inc
dec
push
cmp
jmp
adc
inc
movsb
lcall
jmp
fidivrs
dec
imul
scas
cmpsl
inc
jo
push
rolb
aad
inc
sbb
gs
addr16
daa
inc
cld
push
xchg
dec
shrb
inc
xchg
xchg
loop
xor
inc
stc
jecxz
insb
mov
incb
adc
lock
add
test
dec
sarb
nop
or
enter
dec
jp
sub
cmp
fwait
aas
xor
sbb
xchg
int3
stos
stos
xchg
mov
inc
imul
cmpsb
lods
ja
push
xchg
mov
into
push
mov
mov
and
das
push
mov
cmp
jb
jae
adc
push
jecxz
cmp
sbb
adc
cmp
fidivrl
mov
ljmp
cmp
xor
jg
pushf
loop
hlt
lret
cmpsb
fs
mov
daa
add
xchg
and
push
cmp
xchg
jns
cmpsb
aas
shr
or
add
or
daa
gs
cld
lods
cmpsl
lods
inc
ljmp
dec
andb
push
adc
fwait
xor
xchg
xchg
jl
lret
mov
xchg
inc
inc
sbb
push
xor
in
repnz
repz
add
mov
cwtl
adc
pop
aaa
xor
sbbl
movsb
pop
mov
dec
imul
push
mov
outsl
pop
xchg
call
lds
pop
pop
sahf
mov
cmp
xlat
jo
out
mov
cmp
insl
test
jmp
jae
inc
arpl
mov
daa
xor
sbb
shrl
dec
cmp
imul
or
sbbb
mov
lret
sub
pop
pop
adc
loop
fs
mov
cltd
jae
xchg
push
aad
jg
cltd
movsl
inc
push
cwtl
sub
xchg
sbbl
sbb
andl
or
or
cmpl
shrb
dec
test
jge
dec
into
enter
rcrl
adc
inc
fists
jg
cmp
fwait
dec
stc
xor
adc
jb
loope
bound
or
adc
in
or
insl
sbb
mov
xchg
xchg
mov
jbe
mov
xchg
test
insl
lds
push
stc
outsb
out
scas
pop
push
fisttps
cmc
add
jl
fcoms
rorl
pop
pop
sti
push
lahf
jne
das
lcall
dec
insl
setae
mov
xchg
leave
mov
pop
xor
call
mov
xor
mov
xchg
loop
lods
clc
sti
fwait
xchg
mov
dec
aas
dec
xlat
imull
mov
inc
push
cwtl
push
push
jp
lock
push
xor
xchg
adc
mov
lcall
imul
dec
mov
jmp
mov
or
lds
enter
mov
xchg
push
lds
mov
mov
mov
xor
js
test
push
insb
jnp
cmpsl
jnp
cmp
jmp
xrelease
pop
mov
mov
xor
arpl
xlat
loope
and
hlt
cmp
aad
lods
hlt
inc
int3
jnp
mov
mov
rclb
loopne
jmp
sub
push
xor
addr16
mov
popf
xchg
xor
jbe
repnz
jne
cmpsb
xor
and
xchg
lods
pop
shll
ret
test
jns
xchg
scas
xor
and
push
test
idivb
and
fbld
dec
sti
mov
aam
pop
scas
mov
jne
fisubrl
xchg
fwait
cmpsb
mov
adc
int
aaa
mov
int
fsubrl
scas
add
fistps
mov
ficompl
loop
clc
mov
lret
mov
movsl
fildll
add
popf
dec
mov
and
xor
and
xorb
repnz
push
sub
push
testl
pop
add
je
fdivrs
rclb
daa
out
inc
in
push
addl
or
imul
test
fwait
mov
pop
cmpsl
dec
xor
das
dec
in
push
push
fldt
loop
scas
int3
mov
xchg
call
loopne
sub
xlat
xchg
pop
subl
cli
push
clc
test
mov
push
mov
lcall
movsl
or
insl
mov
mov
fcoms
jecxz
adc
xor
push
adc
mov
lods
pop
jno
test
push
stos
push
cmp
arpl
out
arpl
mov
popa
inc
push
out
lods
cmp
xor
mov
xchg
nop
cltd
mov
stc
xchg
into
les
add
pushf
or
repnz
jmp
xor
mov
mov
repnz
mov
mov
sahf
xor
loopne
pop
repnz
mov
out
mov
sbb
jmp
dec
add
stos
mov
dec
add
cmc
fdivrs
and
jae
movsb
lea
adc
fimuls
outsb
shrl
mov
dec
push
popa
mov
cmc
out
mov
roll
xor
adc
and
pusha
cmp
xor
aad
pop
das
pop
test
outsl
push
in
in
xchg
mov
js
clc
fsincos
pushf
sbb
lods
sub
fsubr
cmpsl
push
dec
std
or
iret
lock
xchg
mov
xor
or
dec
das
scas
pop
lahf
loop
call
jp
insb
js
inc
lods
leave
mov
adc
aas
ja
cmpsb
ffreep
pop
lret
dec
add
subb
push
mov
gs
ret
jno
cmp
sti
into
mov
das
sub
mov
push
push
test
cmpsb
data16
das
movsb
mov
pop
bound
push
mov
pop
scas
cmp
arpl
push
or
fcompl
inc
out
xor
roll
and
cmp
sbb
in
dec
cmovno
jns
ljmp
pop
fists
mov
xchg
cmp
mov
imul
lahf
add
outsb
add
fnstcw
popf
mov
xchg
cmc
sbb
push
outsb
mov
jae
jo
sbb
pusha
testl
fwait
xor
add
movsb
jl
stos
call
test
call
jae
dec
dec
clc
xchg
adc
add
and
insl
jle
test
xor
in
pusha
fdivrp
outsl
mov
or
pslld
mov
push
std
in
dec
and
push
stc
in
roll
ds
daa
frstor
insb
cwtl
sbb
inc
int3
xor
adc
cmp
mov
pop
jl
dec
mov
sub
int3
cwtl
mov
out
lds
mov
adc
imul
stos
push
add
punpcklbw
movsl
cmp
frstor
add
in
enter
addr16
push
jns
mov
mov
push
aam
push
mov
sub
jge
pop
pop
inc
outsl
xchg
aad
jg
and
test
sti
fadds
push
sbb
mov
or
sub
push
outsl
rol
sbb
imul
pop
sbb
test
cmp
mov
ljmp
xor
mov
icebp
push
adc
cmp
icebp
mov
stc
ss
push
xchg
pop
jg
and
addr16
pop
aam
int3
mov
cmp
mov
test
jl
gs
xor
and
movsl
out
lcall
xor
mov
sbb
inc
stos
jbe
in
repz
mov
xchg
enter
cli
inc
lock
xor
push
testb
imul
xchg
push
dec
int
push
or
les
mov
jecxz
mov
sahf
pop
pop
xor
negl
push
mov
bound
or
inc
scas
sbb
insl
out
je
mov
push
cmp
inc
push
imul
mov
xor
out
sub
xor
mov
xor
lret
stos
jo,pt
xor
add
int3
ss
subl
iret
inc
inc
jae
daa
inc
outsb
sbb
mov
insb
inc
cwtl
enter
ja
dec
dec
ljmp
out
push
mov
sub
pop
cmp
lods
fisttps
pushf
hlt
test
jo
push
mov
jecxz
cmp
repz
inc
mov
jmp
jae
mov
gs
xchg
xor
ret
push
jecxz
or
cmpl
sub
pop
xchg
cmp
jp
lea
data16
add
mov
add
decl
sbb
aaa
mov
and
movsb
inc
inc
jnp
pop
aas
dec
push
and
push
aaa
add
pop
cmp
mov
push
leave
roll
or
imul
aam
inc
mov
cmpb
sti
jo
pop
imul
mov
scas
push
fildll
loop
xlat
in
xlat
mov
jle
jne
mov
dec
cmp
jg
push
std
stos
cmp
shl
jo
xor
clc
lret
xchg
lea
mov
xor
pop
mov
xchg
sbb
lcall
int
vcvtss2si
and
cltd
add
jp
mov
cld
lds
cwtl
movsb
inc
fsubs
push
aaa
inc
push
dec
xlat
dec
ret
dec
out
mov
ljmp
andl
push
add
out
in
adc
je
pushf
xorl
pop
adc
dec
mov
dec
outsl
jmp
fcoml
stos
inc
push
lret
arpl
es
mov
inc
dec
lahf
cld
xor
jmp
mov
jmp
pop
std
movsb
xor
inc
bound
mov
andl
aaa
pop
orl
pop
xor
movsl
clc
cmp
sbb
jno
sub
into
lea
jnp
xchg
nop
pop
add
or
mov
lret
cli
loop
push
jne
push
add
mov
mov
xor
pop
adc
sbb
scas
mov
cld
or
and
inc
inc
add
cli
adc
mov
or
and
shll
jb
popf
push
fwait
adc
icebp
lret
pop
pop
mov
lds
mov
es
mov
or
into
dec
imul
xor
lea
fisttpll
out
outsl
adc
fwait
scas
lret
push
push
fisubl
add
iret
cltd
bound
fldl
push
sbb
mov
scas
cwtl
cmp
je
fdivrp
or
sbb
cmp
rcll
out
jmp
xchg
and
insl
mov
sbb
les
or
and
movsb
clc
shlb
in
inc
xor
dec
sbb
stos
push
in
mov
mov
mov
sbb
push
fcompl
or
mov
imul
in
add
mov
cmp
xchg
mov
aad
pushf
mov
xchg
outsl
mov
cmc
sti
push
stos
aam
stc
ret
mov
aaa
sbbl
aas
aas
jae
test
movsl
imul
xchg
pop
xor
adc
mov
jb
pop
mov
lock
insl
cmc
pop
adc
add
out
jae
in
mov
inc
lods
ja
mov
andb
and
xchg
push
lock
dec
lcall
dec
das
and
pushf
enter
jbe
mov
pop
test
lcall
idivb
sbb
lcall
pop
lret
adc
pop
jnp
sub
scas
insl
xchg
loope
movsb
pop
stos
cmp
xchg
fnstenv
cwtl
cmpsl
pop
lods
fstpt
cmp
hlt
aas
js
ror
inc
inc
push
dec
pop
sbb
pusha
push
mov
sub
lcall
popa
mov
ret
jae
xor
push
fcmovnu
xor
stc
xor
lds
insb
pop
mov
lods
xor
jo
cmp
xchg
ja
test
mov
icebp
shlb
in
xchg
mov
xchg
test
or
sub
and
lcall
sbb
enter
fistpll
es
mov
popa
pop
xchg
jbe
addb
sbb
inc
js
andb
out
jmp
jb
adc
push
adc
roll
cli
xor
lret
lods
xchg
lcall
dec
cmp
pop
inc
mov
dec
mulb
adc
mov
pushl
scas
fldt
movsb
sbb
push
in
pusha
hlt
add
jp
mov
icebp
lock
mov
outsl
jg
adc
insl
fistl
fcoms
insb
movb
aam
jbe
mov
xor
in
jmp
fstp
jp
mov
mov
movsb
inc
gs
or
sbb
cmp
mov
dec
outsl
dec
loopne
jbe
pop
loopne
bound
cld
sti
add
xor
rolb
rcl
rol
lods
pop
dec
idivl
cmpsb
gs
out
sub
hlt
or
cmp
mov
fmull
or
push
js
mov
es
mov
xor
call
lock
adc
sbb
test
test
sub
add
ficoml
jle
incl
pop
sub
jno
lret
mov
rorb
sub
mov
fcomps
jg
xor
sbb
fwait
out
rol
inc
xor
mov
xchg
add
cmp
add
xchg
addr16
mov
pop
daa
sub
dec
sub
lods
repnz
out
fldenv
test
aaa
adcb
and
inc
in
add
jg
bound
mov
test
aad
cmp
add
and
pop
call
cmp
push
mov
cmp
xchg
ret
clc
sub
mov
stc
test
inc
inc
mov
pop
xor
adc
xchg
push
or
frstor
and
jmp
hlt
fnstenv
or
dec
std
push
enter
iret
and
xor
sbb
sub
sub
ret
mov
bound
ljmp
iret
mov
rcrl
sub
push
ds
icebp
cmp
test
aaa
stc
dec
mov
repz
mov
mov
notb
stos
adc
cld
or
in
scas
cmp
add
in
xlat
iret
pop
xchg
cwtl
popa
call
mov
mov
jle
enter
in
in
sub
test
jne
mov
pop
ret
sub
mov
mov
enterw
jbe
repz
call
popf
movsl
push
pop
xchg
dec
int3
xchg
jmp
outsb
mov
jnp
in
incl
movsb
popf
fabs
rorb
ja
int
aaa
loopne
cmpsb
xchg
mov
repz
in
jp
pop
rcl
popa
out
pop
mov
sbb
movsb
mov
data16
mov
inc
mov
arpl
cmp
cltd
sahf
shlb
ss
outsb
cmp
insb
test
into
mov
add
jno
pop
test
out
rorb
repnz
sub
fiadds
mov
jg
cmp
sti
loop
adc
mov
addr16
mov
dec
fwait
ret
lods
addl
xor
repz
mov
sbb
pop
inc
add
dec
mov
jle
aaa
adc
lods
cld
dec
out
pop
xchg
pop
imul
sub
xchg
inc
lock
mov
aam
insl
rolb
movsb
ljmp
fs
int3
out
xchg
xchg
push
repz
outsb
lods
aas
and
jle
pop
mov
pop
outsl
cmp
iret
add
les
cmp
fstl
sbb
fbld
outsl
ljmp
mov
mov
mov
rep
xchg
fsubl
push
cwtl
in
adc
pop
int
sub
shlb
ror
or
jbe
adc
daa
sbb
and
jns
pop
push
or
mov
fisttps
in
imul
das
leave
loopne
popf
push
imul
xor
hlt
jne
aas
sbb
stos
push
arpl
pop
sub
sarl
es
mov
dec
mov
cs
mov
cmp
mov
sbb
icebp
jo
jo
mov
mov
loop
push
mov
add
loop
pop
sbb
fwait
pop
outsb
add
mov
push
das
bound
outsb
sahf
or
lret
int3
push
sahf
rcrb
jbe
jle
mov
sub
dec
es
mov
stos
jmp
xchg
test
jl
rcr
sar
xor
test
sub
push
fidivrl
push
popa
dec
xor
inc
loope
xlat
icebp
daa
push
or
test
sbb
xchg
inc
mov
cmp
dec
lods
jecxz
leave
imul
or
test
lret
movhps
cmp
mov
loope
push
jae
and
mov
ja
xor
mov
cmc
pop
lret
jl
ret
mov
push
mov
popa
push
addr16
daa
inc
inc
mov
and
js
xchg
ss
jo
pop
es
out
xor
imul
mov
mov
inc
adc
jbe
pop
xchg
add
mov
and
das
sub
int
dec
mov
jnp
add
mov
xchg
mov
jge
xchg
push
jl
sarl
mov
sub
out
inc
mov
mov
and
out
test
sbb
or
jmp
daa
xchg
aad
and
out
mov
xchg
aad
jb
int3
fiaddl
insb
mov
fldenv
cltd
pop
scas
negl
into
test
loope
test
out
sti
lret
mov
dec
sarb
rcr
cmp
mov
shrl
hlt
jg
push
or
or
call
movsl
cmpsl
cmp
cmp
in
sbb
and
stos
mov
jns
xor
and
sub
movsl
hlt
sub
or
dec
js
cmc
loopew,pn
dec
xor
iret
out
or
mov
and
scas
sti
mov
mov
mov
stos
ret
int
xchg
xchg
rcrb
aam
mov
push
sub
mov
sahf
call
movb
cmp
sub
dec
xor
sbb
or
inc
test
sahf
aaa
cld
cmp
cmp
jnp
mov
popf
loop
cmp
and
fidivrl
xlat
mov
push
cmc
or
addr16
bound
shrb
aaa
ljmp
cld
scas
push
movb
insb
jmp
arpl
sbb
mov
mov
pop
push
xchg
lcall
jmp
or
mov
mov
mov
lods
outsb
pop
pop
mov
orb
in
pushf
insl
fidivrl
cs
bound
repz
and
decl
fcompl
addr16
cmp
rorb
or
lret
aaa
arpl
stc
mov
mov
mov
cmp
fidivrl
pop
fxch
adc
inc
pop
inc
xchg
jmp
jbe,pn
xchg
ds
xchg
das
cli
icebp
jl
jp
scas
mov
sbb
icebp
loopne
imul
leave
insb
repz
jge
add
sbb
fcompl
xor
pop
dec
pop
mov
call
dec
ret
sub
shlb
int
cld
mov
lock
clc
inc
mov
nop
mov
das
push
ds
xchg
fs
outsl
sub
xor
mov
adc
or
out
dec
stos
push
pusha
ss
push
sub
add
addl
das
sbb
push
jmp
push
mov
lret
imul
push
xbegin
stc
and
shll
add
pop
movsb
les
mov
cld
xor
xor
pushf
imul
gs
int
inc
and
in
cmpsb
or
inc
jno
inc
popa
mov
scas
pusha
aam
and
pop
jg
loop
mov
mov
mov
lret
fsubrl
mov
fnstsw
jae
psrlw
push
sbb
pop
loop
cmpsl
into
add
push
mov
push
jns
popf
dec
cltd
adc
dec
lods
push
inc
add
pop
sub
out
fists
roll
or
sbb
xchg
and
cli
inc
fisubrl
or
bnd
fisttpll
repnz
fs
call
aad
cmp
cwtl
mov
loope
fwait
sbb
jecxz
adc
add
insl
pop
and
sub
and
dec
and
sahf
frstor
fucomip
faddl
ds
mov
ret
jmp
sbb
ljmp
add
jmp
adc
push
xchg
insb
imul
push
adc
cmp
pop
adc
sti
call
shlb
sti
push
rolb
sub
push
adc
es
out
xchg
dec
bound
decb
sarl
inc
out
push
sub
mov
pop
adc
retw
jo
mov
arpl
lea
jnp
xchg
sbb
mov
repnz
mov
stc
inc
imul
xchg
and
fnsave
test
inc
out
xchg
cmp
aad
repz
adc
xchg
insb
add
jecxz
mov
rcll
xor
pop
mov
pop
adc
dec
leave
xor
test
cmp
jmp
sub
and
lds
stos
cmpsl
jns
insb
fcmovu
xchg
popf
push
cs
leave
js
push
xor
sub
sub
push
mov
into
xchg
notb
scas
cmp
mov
aam
cmpsl
sub
inc
push
in
pop
in
jle
int
mov
sub
lods
addr16
push
loop
pop
rorb
ljmp
inc
gs
mov
xchg
hlt
mov
stos
push
xchg
pop
or
inc
jp
mov
mov
sti
mov
repz
dec
xlat
xchg
data16
aad
push
lret
das
pop
pushf
inc
ds
ljmp
adc
push
push
jno
ja
shlb
push
lock
mov
out
shlb
xlat
pop
mov
mov
and
icebp
bound
jae
dec
dec
mov
mov
je
or
xor
push
mov
mov
fistl
sub
mov
repz
xor
stc
cwtl
inc
add
pop
adc
stos
mov
jno
mov
movsb
test
ljmp
dec
pop
adc
jge
lret
addl
ficompl
and
push
arpl
dec
jle
jo
stos
sbb
sub
pop
mov
jno
outsb
ficompl
pop
or
pushl
jge
or
sbb
jb
xchg
xor
iret
mov
xchg
mov
dec
fidivrl
push
call
les
push
aam
sub
nop
sbb
bound
or
mov
inc
xchg
xor
in
in
leave
and
call
lods
lret
movsb
and
sub
mov
mov
out
sub
outsb
jg
out
xchg
mov
mov
mov
add
jno
xchg
xchg
aad
adc
sahf
mov
out
or
mov
push
inc
pop
int
inc
jp
repnz
mov
aas
ljmp
aas
lcall
mov
jb
jg
mov
lods
push
test
jp
jp
in
lcall
mov
ret
dec
and
mov
test
fcomp
out
int
mov
stos
and
xchg
and
xchg
cmpsl
repnz
sbb
sbb
popa
add
stc
nop
fwait
pop
lret
and
ss
aad
iret
cld
je
adc
adc
lods
movsb
lcall
movsb
jecxz
fidivrl
push
sbb
pop
lcall
enter
test
fdivrp
arpl
arpl
pop
jns
xor
pop
pop
cmovnp
pushf
sarb
in
dec
mov
jmp
mov
es
xor
pusha
enter
mov
cld
mov
jae
cmp
loope
cmp
testl
frstor
out
sub
mov
ljmp
inc
mov
cmp
mov
fs
or
sub
sahf
movsl
cmp
std
cmc
sbb
insb
inc
test
test
push
fwait
and
fidivs
imul
lods
mov
in
sbb
icebp
cltd
mov
jecxz
adc
je
sub
xor
gs
jns
or
lret
and
sbb
mov
dec
sbb
test
aam
sbb
cmp
xor
lods
jle
xlat
mov
arpl
cmp
ds
add
mov
adc
or
nop
stos
dec
out
data16
mov
xchg
inc
std
inc
or
aas
lcall
add
sti
push
push
xor
sub
inc
jg
fimull
fsubrl
into
mov
test
mov
mov
mov
xchg
xchg
xor
push
lret
dec
sub
mov
sarb
xor
xchg
xchg
pop
push
aad
fmul
jecxz
xchg
push
sbb
pop
stc
mov
cmp
mov
sarl
movsb
and
dec
ljmp
outsb
mov
inc
jo
dec
cld
daa
or
cltd
xchg
push
js
negb
mov
hlt
int
inc
add
dec
dec
cmpl
mov
mov
lock
sbb
cmp
mov
inc
push
ret
stos
lods
ds
out
mov
or
addb
mov
dec
dec
sarb
jne
notl
stc
or
ljmp
xchg
add
outsb
inc
pop
shll
add
sub
push
cmp
lds
call
dec
cs
mov
popa
mov
insl
iret
pop
pusha
cmc
movsl
push
icebp
mov
outsl
ja
add
mov
mov
jne
aas
pusha
sbb
or
call
scas
jmp
mov
pop
ja
cmpsb
push
or
loope
out
or
fadds
dec
pop
and
ficompl
out
jno
xor
or
push
pushf
xor
mov
xlat
adc
insb
or
sub
js
test
sbb
fstl
or
test
mov
sub
xor
pop
aad
jae
fst
dec
mov
push
mov
je
mov
ret
lret
addr16
fldl
jp
into
leave
jp
pop
xchg
ds
shl
pop
mov
or
lods
sub
jle
xor
in
rcll
addr16
loop
in
cwtl
shlb
aas
xchg
xchg
cmp
nop
adc
out
cmc
inc
jnp
lods
bound
addl
in
cmp
mov
xor
sub
xor
sahf
or
push
insl
dec
aad
lcall
push
xchg
jae
filds
xchg
and
add
je
arpl
mov
mov
out
add
push
add
jle
imul
sbb
test
fmull
popf
or
inc
push
lods
mov
adc
mul
xchg
mov
xchg
and
pop
decb
fmuls
sbb
cmp
leave
mov
mov
mov
push
pop
lret
mov
push
xchg
dec
xor
rcr
ret
push
hlt
lret
cmpsl
adc
jb
hlt
scas
mov
push
mov
xchg
inc
or
icebp
call
outsl
std
pop
push
faddp
push
ss
xchg
icebp
mov
loop
int3
data16
add
pop
mov
arpl
js
and
jbe
popf
fsubrl
gs
push
stos
inc
mov
inc
loop
mov
jp
xchg
sbb
cmp
lcall
add
aam
faddl
shrl
push
sahf
or
test
inc
scas
mov
nopl
lock
inc
mov
xor
adc
cmp
or
test
inc
aas
imul
mov
mov
push
add
stos
jge
adc
in
inc
cs
or
mov
jmp
cs
scas
jno
sti
jle
aad
push
test
xor
sbb
inc
cmc
ljmp
scas
inc
int
lods
mov
mov
into
les
mov
aas
inc
xchg
subb
and
test
lcall
dec
mov
inc
xor
out
xchg
aaa
jae
push
cmc
shlb
cmp
sarl
mov
inc
in
inc
sub
dec
mov
or
rcrb
out
adc
cwtl
jle
dec
push
inc
outsb
xchg
cwtl
lds
cmp
pushf
push
cmp
mov
test
into
rcr
daa
jle
add
scas
imul
push
mov
push
imulb
icebp
cwtl
dec
jmp
inc
mov
dec
ss
push
or
pushf
fnstcw
mov
cli
sub
xor
ret
sar
and
das
in
push
add
in
add
mov
icebp
mov
and
pop
cmp
ret
testb
cmp
loopne
ret
or
fisubrl
hlt
mov
sbb
stos
lock
imul
cld
mov
fists
jno
js
inc
xchg
outsb
mov
shll
testb
or
std
ja
push
mov
push
jg
sbb
xchg
daa
push
pop
scas
ds
jp
aam
outsl
or
clc
dec
nop
rorl
ffreep
lods
jne
jno
mov
es
stos
xchg
fabs
ficompl
xchg
scas
mov
imul
add
fucomp
insl
enter
mov
je
jnp
test
and
mov
jno
cltd
or
mov
pushf
repnz
enter
push
inc
jb
fildl
jle
jns
rorl
sbb
jb
je
jl
mov
pushf
inc
icebp
leave
inc
cmpsl
shrl
les
pop
or
xor
aad
movsb
ss
imul
addl
xchg
rolb
ret
jb
xchg
mov
mov
push
adc
and
cmp
lea
inc
leave
dec
mov
mov
loope
sbb
lds
mov
ds
xlat
jecxz
sbb
loope
lods
xchg
test
sub
movsl
ss
dec
mov
dec
ret
jnp
imul
sbb
cwtl
testl
jne
and
dec
or
addr16
mov
dec
push
out
addr16
sub
scas
aam
sub
pop
test
jbe
out
and
xrelease
out
aam
or
push
rorl
loope
sar
pop
inc
mov
ds
aam
enter
cmp
shlb
shl
xor
xchg
mov
in
ss
bound
test
cld
ret
mov
lock
or
fucomip
xchg
push
or
mov
adc
js
lahf
mov
inc
out
aad
add
clc
sbb
cmp
pop
sbbb
or
xor
jno
jnp
in
or
jno
xchg
insb
idivl
and
mov
jbe
cmp
sti
mov
jae
sub
cltd
inc
push
lcall
dec
loopne
in
hlt
loope
aaa
pusha
adc
aam
xchg
out
add
or
adcl
fdivrl
jmp
inc
movsb
sahf
sbb
jg
and
mov
pushf
daa
lahf
xchg
push
nop
and
mov
or
pop
push
jne
pop
popa
or
sti
mov
in
outsl
mov
icebp
pusha
jmp
sti
and
inc
or
push
subb
pop
idiv
test
push
mov
mov
test
push
shl
or
cli
loope
leave
push
dec
repnz
pop
in
mov
mov
sarl
jp
fistpl
loop
std
rorl
and
push
lret
push
ret
int
imul
int3
mov
xor
cmpsl
arpl
movsl
add
add
nop
jns
sbb
rcl
jle
add
test
in
jl
jmp
dec
pop
inc
inc
repz
iret
push
or
pop
xchg
xor
add
push
jno
pop
sub
cmpsb
mov
lcall
add
or
sub
movsl
daa
data16
testl
shr
sbbl
mov
popa
pop
inc
ds
das
mov
adc
insl
mov
cmpsb
push
mov
ljmp
shll
mov
dec
addb
mov
arpl
adcb
js
jmp
insb
mov
out
sub
sbb
lret
adc
push
ljmp
pop
fiadds
hlt
jb
xor
dec
imul
sub
call
cltd
pop
call
adc
je
outsb
lahf
dec
cmp
adc
xor
pop
clc
or
daa
repnz
nop
xor
clc
fnstcw
das
cmpsl
movsb
xor
push
add
jne
and
repnz
cmp
inc
shlb
repnz
jb
sti
es
mov
and
imul
cs
mov
jge
jb
adc
hlt
sbb
or
ret
mov
mov
xchg
mov
mov
fbstp
jo
push
dec
pop
sbb
icebp
in
je
subb
mov
dec
cs
mov
stc
fwait
and
data16
arpl
mov
ficoml
mov
xor
pop
je
aaa
sub
cmc
lahf
jmp
testb
pop
cwtl
push
shll
icebp
xor
pop
aam
and
push
pop
adc
imulb
mov
cmp
pusha
mov
sbbb
je
adcb
bound
fldenv
cli
dec
inc
std
roll
lock
fcoms
dec
cli
push
dec
mov
jmp
and
std
mov
mov
sbb
stos
hlt
push
out
push
cs
sub
fwait
push
jne
mov
xchg
and
aas
xchg
jmp
dec
xor
lret
in
pop
push
in
add
mov
lds
orl
push
rorl
scas
mov
or
sub
pop
xlat
lcall
xchg
pop
inc
fldcw
iret
jbe
or
jecxz
enter
aad
in
out
inc
rcrl
ror
sbb
mov
adc
fwait
jne
subb
lods
add
mov
xchg
add
in
ja
fldl
shlb
push
movsl
pushf
inc
out
adc
sub
jno
sbb
lods
cli
add
stos
mov
sub
dec
fadds
das
pop
jmp
xchg
shll
dec
addr16
movl
subb
ret
jle
cmp
out
outsb
xchg
pop
pop
dec
sbb
lods
dec
jno
inc
jno
push
push
adc
mov
notl
mov
mov
dec
je
mov
ds
dec
je
insl
or
outsl
dec
sbb
pusha
jl
push
fstps
pop
movsb
push
mov
push
fcoms
adc
repz
bound
adc
repnz
pop
jbe
popa
popa
inc
xor
dec
outsb
pop
xor
mov
test
mov
and
shl
scas
jns
test
ret
dec
shll
pop
sbb
insl
ret
fs
sbb
or
rorl
jns
xchg
adc
add
or
clc
sarb
lcall
mov
jmp
sahf
jae
xlat
das
sbb
int
pop
pcmpgtb
cmp
jg
mov
xchg
fldl
fiaddl
xor
divb
in
outsl
pop
rcl
jno
adc
add
shr
in
mov
lea
jae
sub
aaa
arpl
cs
xorb
add
xchg
dec
dec
js
mov
adc
lods
lds
mov
mov
loopne
inc
mov
mov
cmp
dec
xor
fimull
fiaddl
or
pop
mov
test
mov
pop
test
call
push
push
sti
sbb
jl
lock
aad
mov
leave
xor
inc
and
scas
popa
lds
addr16
stos
cmpsl
push
notl
xor
sbb
daa
pop
and
faddl
inc
mov
mov
dec
and
stos
test
rcr
xchg
sub
pusha
push
loopne
ljmp
adc
mov
pop
cmp
call
mov
lcall
xchg
pop
outsb
enter
dec
pop
jle
insl
js
lahf
jge
and
jne
inc
sti
xchg
lods
outsb
cmp
mov
mov
mulb
mov
leave
pop
sub
sbb
cmpsb
imull
push
popf
scas
push
pop
mov
and
or
dec
in
cltd
nop
mov
cmpl
mov
xor
fcomps
or
mov
pushf
test
fs
call
in
sub
mov
jb
or
mov
aam
out
push
sub
inc
sub
cmp
in
cli
aas
cmc
addl
xchg
pop
enter
jmp
icebp
incl
aam
hlt
fdivs
xlat
addr16
fnsave
or
cmp
outsl
dec
test
mov
mov
in
adc
jb
pop
xchg
mov
sarb
xchg
fnsave
inc
adc
pop
mov
iret
cmp
sbb
jle
inc
push
lret
repz
negb
mov
insw
push
out
aas
push
loopne
stos
xor
sub
int
push
mov
lods
xor
test
add
push
adc
popa
pushf
popl
push
dec
xor
lcall
mov
cmpsl
les
test
jle
pushf
dec
arpl
scas
or
loopne
in
cmp
add
loop
push
idivb
ret
xor
pop
dec
adc
xchg
adc
pop
lahf
push
repnz
xchg
ljmp
cmp
imul
or
cmp
xchg
dec
mov
call
jbe
scas
sbb
rclb
add
inc
lods
cmc
inc
ja
dec
mov
push
pop
pop
dec
pop
xor
mov
fnsave
iret
mov
jb
mov
or
fidivs
mov
andl
push
arpl
flds
inc
bsf
or
dec
mov
nop
xor
add
dec
mov
mov
gs
push
cltd
jae
or
imul
push
popa
ljmp
mov
pop
or
movsl
dec
test
insb
aad
ljmp
push
cmp
push
mov
repnz
sahf
and
add
sub
cmc
sarl
sub
out
mov
mov
xlat
sub
xlat
dec
add
movsb
js
loope
test
popa
call
std
or
inc
xor
sbb
sub
push
jl
or
mov
in
lock
movsl
pop
ret
hlt
lods
hlt
mov
imul
or
loop
xor
loop
xor
sbb
nop
jne
xchg
es
adc
in
adc
or
xchg
and
inc
es
loopne
pop
rcrl
cmpsl
test
pop
xchg
and
cmp
iret
cmpsl
pop
js
incl
or
pop
fidivrs
push
lock
call
out
jl
dec
and
cmc
roll
adc
cs
mov
test
push
mull
in
push
push
ljmp
imul
pushf
xor
ljmp
push
les
testl
fstp
shrb
ret
xchg
arpl
and
addr16
enter
aaa
mov
lret
xor
mov
jbe,pt
cmp
in
jb
pushf
jge
xchg
aam
fstpl
test
shrb
das
faddl
aaa
cmp
adc
test
mov
mov
imul
lds
orl
outsl
jno
cltd
outsl
fistpll
adc
std
jl
or
test
in
pop
cmp
xor
mov
cs
sbb
inc
jp
in
mov
push
adc
push
outsb
sbb
xor
dec
jo
shrl
fidivs
pop
sub
mov
sub
cld
cli
jnp
test
mov
mov
xor
xchg
pop
mov
dec
mov
inc
xchg
add
repz
inc
inc
movsl
dec
insb
xchg
jae
sub
mov
fsubrl
sub
inc
sti
xor
or
shlb
movsb
xchg
popf
fnstenv
call
stc
xchg
cltd
movsb
mov
jae
mov
inc
lcall
es
es
mov
fcmovne
loop
mov
dec
rcll
mov
and
push
mov
mov
inc
insl
push
mov
pusha
icebp
fdivrl
sbb
xchg
mov
push
mov
outsl
movsl
movsb
xchg
cmp
adc
xchg
push
dec
and
add
test
addr16
mov
xor
push
sub
adc
rcll
xchg
mov
xchg
cld
fwait
pop
mov
push
gs
add
mov
push
cmp
mov
lret
inc
pop
mov
stos
and
ds
sub
sbb
inc
gs
push
adc
gs
xchg
or
into
xor
es
lcall
sbb
in
daa
js
inc
ficoms
dec
testl
nop
mov
or
test
mov
sub
mov
data16
test
push
es
cmp
fstpl
push
cmp
out
js
fwait
je
lahf
fistpl
mov
rcrb
mov
sub
or
lods
lods
out
dec
insb
sbb
jle
push
int3
pop
mov
pop
xlat
repnz
jecxz
scas
cmp
test
mov
dec
xchg
in
ljmp
adc
mov
ficompl
xchg
cmpsb
les
xor
cmp
push
daa
imul
inc
lock
xor
int
int
cmc
xchg
cmp
into
jp
pop
enter
jbe
jnp
push
inc
inc
popf
call
stos
sbbl
test
sub
cld
test
cmpb
fdivrs
adc
jp
sti
mov
pop
or
push
testb
mov
es
ret
mov
iret
jmp
adc
inc
lods
mov
dec
dec
movsb
cmp
mov
in
sbb
negb
das
sbb
pop
cmp
inc
jg
lret
xchg
mov
dec
xor
dec
test
or
mov
jp
sbb
sub
imul
in
in
jbe
sti
in
push
and
repnz
mov
aas
fiaddl
jnp
inc
push
int
adc
cs
pop
shl
ss
push
js
arpl
je
cmp
insl
insb
push
adc
stos
mov
scas
mov
stos
mov
mov
imul
xchg
xlat
aam
mov
stos
fpatan
inc
mov
rorb
insl
insl
aad
fwait
rolb
gs
pop
xor
mov
ret
pop
in
push
xlat
js
mov
inc
loop
xchg
cmpsb
xor
ds
mov
and
je
popa
in
cmp
call
mov
push
jge
lock
jbe
add
push
inc
fwait
sbb
jge
and
mov
out
in
test
push
lahf
cld
scas
add
call
mov
pop
rorl
xor
pop
and
mov
jne
inc
mov
inc
int3
sbbl
add
or
fisubl
idivl
addr16
mov
ljmp
and
test
sbb
ljmp
stos
xorps
mov
lret
jl
mov
fs
fistl
dec
mov
shll
in
pop
dec
add
add
sahf
and
adc
aaa
andl
adc
out
in
enter
dec
or
lods
pop
sub
clc
adc
popa
or
leave
sub
mov
add
push
ret
imulb
xchg
sbb
xlat
mov
push
add
mov
cmc
and
and
pop
pop
mov
das
xchg
sub
xchg
pop
and
jle
es
adc
in
add
inc
fldl
ret
mov
out
insb
in
std
xor
lret
lea
mov
cs
mov
sub
jp
shll
inc
je
adc
adc
mov
cwtl
xchg
ja
shrb
jnp
daa
dec
scas
dec
bound
mov
shl
jns
scas
movsb
mov
outsb
mov
xchg
movsb
adc
xor
mov
push
call
mov
inc
xchg
push
pop
mov
xor
mov
pop
add
gs
push
ja
out
mov
aam
add
sarb
cmpsl
mov
leave
mov
and
subb
jmp
mov
pop
addr16
dec
adc
lret
adc
in
jbe
inc
ds
daa
out
add
jnp
fdivr
and
inc
test
adc
sub
sti
mov
or
push
bt
push
ds
aas
sbb
mov
aad
ficompl
pop
ljmp
push
jns
xchg
mov
xor
cmpsl
imul
test
mov
mov
std
xor
pusha
or
mov
jl
fimull
ficoml
fldl
cwtl
aas
mov
pop
jle
pop
dec
addb
loop
mov
jl
sbb
ljmp
cmp
lea
jge
leave
and
rorl
es
xor
movsb
mov
add
or
mov
lods
stos
imul
cmpb
mov
or
dec
out
cs
roll
in
jl
popf
rcll
out
dec
adc
aam
lret
sbb
sahf
dec
mov
in
sar
cmp
fisubrl
add
push
stos
push
sub
shlb
dec
pop
es
pinsrw
jl
xlat
aas
mov
jae
cli
jp
mul
add
mov
call
push
cmp
out
and
push
in
movsl
scas
sub
sbb
in
push
dec
jbe
add
call
add
jb
sbb
aas
push
pop
pop
clc
pop
loop
or
xor
lahf
cmp
cmpsb
das
into
pop
lock
sub
cmpsl
pop
lret
pop
scas
xchg
mov
push
push
mov
sub
push
les
repnz
cmp
test
das
sahf
lods
outsb
or
pop
dec
jns
push
dec
fbld
loope
dec
mov
mov
mov
lea
inc
mov
adc
dec
sahf
jnp
mov
pushf
push
imul
movsl
js
ret
adc
xchg
insb
xor
dec
dec
pop
in
into
push
jo
xchg
lods
inc
test
adc
and
aam
mov
je
fbstp
or
xchg
mov
dec
cmc
jns
les
sbb
pop
add
adc
fs
push
fidivrl
push
icebp
pop
je
ja
mov
xchg
jg
mov
or
push
push
or
in
jl
fstl
and
mov
js
dec
rorb
push
add
sub
decl
ret
std
mov
aam
cwtl
cmp
sbb
test
decb
ss
cmp
pop
add
loope
loopne
lret
cmp
inc
xchg
sub
fistpll
add
jecxz
shll
mov
push
add
add
loop
mov
push
jl
fcoms
pop
cmp
test
and
fidivrs
xor
sbb
dec
and
jl,pt
push
xor
test
hlt
mov
leave
into
stc
inc
fistpll
icebp
pop
out
xor
popa
adc
add
adc
ljmp
sub
xorl
sub
mov
xchg
lcall
stos
jo
ret
addr16
mov
test
mov
outsb
add
mov
inc
jbe
xchg
jno
push
int
inc
imull
lods
mov
sub
outsl
push
mov
and
push
mov
cs
xchg
movsl
das
mov
arpl
push
push
sar
ret
leave
imul
arpl
jle
sub
adc
ljmp
push
and
lret
cli
cmp
cmp
test
addr16
rdtsc
aam
push
mov
push
hlt
push
push
mov
cmp
loopne
das
int
push
aad
outsl
jae
rcl
or
dec
mov
cld
sub
mov
mov
and
cmpsb
push
add
movsb
and
test
push
test
cmp
sbb
mov
jge
lahf
mov
inc
pop
addb
dec
andl
push
insl
xor
sub
xchg
pop
lods
ds
xchg
in
lods
xor
adc
addr16
in
rcl
pop
repnz
jb
test
xlat
pop
add
jbe
mov
dec
mov
mov
out
leave
repnz
xchg
sub
xchg
mov
popa
sub
dec
sub
arpl
pop
mov
in
adc
in
jo
scas
mov
out
dec
add
sbb
lds
xchg
fdivl
jo,pn
and
add
ret
in
cmpsb
sti
cli
ret
in
or
jns
les
mov
inc
adc
aam
fs
lcall
imul
mov
jno
xor
in
push
xchg
sahf
or
out
popa
cmpsb
xor
insb
dec
pop
xlat
daa
xor
push
les
jle
lcall
shll
and
repz
adcl
cwtl
lock
xchg
and
js
mov
xchg
movsl
cs
dec
sbb
add
xlat
xor
mov
cmp
dec
stos
xchg
jmp
push
in
loop
mov
std
jmp
xchg
pop
lea
xor
add
dec
jnp
outsb
mov
or
sub
sbb
inc
add
xchg
rorb
add
mov
push
decl
fbstp
mov
and
out
scas
xchg
xor
inc
test
insb
inc
push
cs
mov
push
jge
add
pushf
out
jle
cmp
arpl
mov
mov
imul
jle
aas
pop
xor
jae
pop
shl
data16
dec
pusha
lea
lret
rcl
nop
stos
shlb
sbb
inc
bound
sbb
sub
ljmp
int
inc
inc
mov
std
das
adc
pop
add
add
mov
mul
pop
fsubrp
add
or
xchg
push
loopne
mov
mov
mov
inc
sbb
pop
popf
push
inc
adc
mov
in
or
dec
cmp
rclb
xor
dec
lahf
sub
fiadds
int3
push
cmp
or
imulb
std
popf
xor
pop
fstps
sahf
subl
andl
insb
add
cld
push
cmp
jno
stos
sbb
aam
dec
ret
inc
repz
cmc
sbbl
dec
cli
pop
cmc
xcrypt-ecb
cmpsl
dec
jo
xchg
ds
add
pop
sbb
faddp
fdiv
out
fdivrl
js
mov
and
popa
jae
xchg
inc
lret
cmpsb
push
int3
fchs
je
inc
enter
aad
jle
or
bound
push
fldenv
loope
fldl
stos
xchg
jg
adc
push
movsb
shll
cli
jno
loopne
fsubr
dec
shrb
fs
lret
pop
push
adc
dec
jl
mov
cwtl
push
jge
push
daa
xchg
dec
fiadds
jne
sub
and
xlat
cwtl
jmp
ljmp
sahf
lea
jl
movsl
fdivrs
aas
cs
xor
jns
xchg
adc
bnd
jg
mov
xor
sti
xchg
stos
inc
fidivrs
mov
mov
jb
pop
sub
push
dec
dec
call
push
fstpl
mov
mov
test
lods
mov
into
in
pop
jnp
push
and
jb
mov
jne
cmpsl
xorb
ret
out
jnp
cltd
dec
cltd
jmpw
and
pop
dec
sti
inc
cmp
sbb
and
prefetchw
cmpsl
or
fstps
sbb
dec
mov
in
xor
test
ret
imul
adc
into
add
mov
cmpsl
mov
ret
jmp
leave
jmp
js
sub
jg
dec
aaa
mov
sbb
mov
mov
fdivl
fmul
xchg
jns
test
add
inc
push
add
test
add
and
push
enter
jmp
ret
cmp
xlat
imul
jnp
popa
test
add
sub
mov
inc
shr
arpl
mov
test
outsb
in
or
mov
sbb
clc
test
or
mov
push
mov
cltd
push
out
xchg
push
iret
ret
insl
mov
and
sub
lcall
push
mov
fsubp
faddl
push
cld
nop
xlat
inc
scas
pop
imul
mov
lods
popa
movsl
imul
out
cmpsl
xchg
sti
dec
mov
out
sub
outsb
mov
and
push
lret
ret
test
mov
lds
addr16
sahf
jge
outsl
xchg
push
arpl
adc
enter
test
mov
jae
shll
nop
cmpl
pop
ret
jmp
push
add
add
mov
push
push
xlat
adc
gs
es
xlat
ret
pop
jno
jb
or
jnp
pop
jbe
xor
decl
outsb
repnz
cmp
push
lret
inc
dec
xchg
or
lds
sub
std
cmp
pop
mov
in
mov
shlb
loopne
scas
cmp
psadbw
push
ds
mov
shll
jno
stos
xorl
push
push
orl
jno
ret
in
out
fnstcw
pop
insl
ret
pop
or
and
jbe
enter
push
jmp
xor
xchg
mov
in
pop
insb
cmpsl
icebp
into
jnp
arpl
mov
fisttps
xchg
pop
mov
rcll
bnd
int
lods
sbb
rorl
stc
jecxz
loopne
mov
mov
sbbb
ret
push
mov
mov
cmp
xchg
or
and
push
or
cmpb
adc
imul
jns
jb
xchg
fucomp
sub
add
push
movsb
inc
lock
inc
adc
inc
inc
hlt
add
fidivl
cmp
cmpsl
stos
lahf
fadds
inc
bnd
push
roll
cmp
push
pop
sbb
inc
push
add
mov
mov
and
jg
xor
ljmp
mov
sbb
inc
ficompl
clc
mov
sbb
mov
dec
das
lea
push
push
fcoml
mov
push
adc
sub
mov
clc
fdivl
cmp
mov
and
sub
fstl
push
dec
mov
popf
shrl
adc
jmp
xor
scas
mov
outsb
and
test
xchg
scas
pop
aad
repz
rcll
push
push
in
dec
ja
out
jno
sbb
ja
bound
push
rol
jmp
ficoms
clc
lcall
push
pop
mov
mov
out
mov
and
cmpsl
pop
data16
cmp
int3
sbb
xchg
lods
fsubrl
test
mov
shll
mov
dec
addr16
ss
cmp
fs
mov
xor
test
stos
outsb
add
inc
push
xchg
in
std
or
shlb
jnp
cmpsb
out
fadd
and
cli
inc
sub
repz
cmpsb
xchg
cmpsb
mov
shrb
hlt
cld
adc
aas
push
lds
into
jnp
mov
loop
xlat
popf
xchg
out
in
iret
enter
jge
int
jecxz
leave
sarl
xchg
xor
rcrb
shlb
stos
push
xor
dec
sub
push
scas
popf
cld
and
mov
xchg
iret
imulb
fisubl
xor
leave
inc
jp
outsl
xchg
push
fs
jne
fstpl
mov
dec
mov
jp
mov
aam
sub
cli
jmp
xchg
lods
add
in
fwait
add
or
arpl
movntps
in
mov
xchg
stc
push
cmp
mov
mov
fistpl
insl
addr16
fbstp
lret
movsl
fsubrl
jmp
pop
ljmp
push
push
hlt
push
cmpsb
xor
or
cmpsb
addr16
mov
out
gs
rcrl
ds
test
cs
mov
cmp
lahf
cltd
ja
adc
jae
addr16
or
inc
or
popa
lock
shlb
sti
outsl
adc
pop
out
sbbb
aas
scas
inc
jb
insb
jno
das
mov
sbb
push
push
in
rcll
sbb
push
cld
lods
ret
sbb
mov
xor
mov
sub
inc
and
push
cli
dec
insb
xor
jns
pushf
cmp
shll
mov
arpl
shl
cmp
les
push
jne
xchg
rol
push
push
jge
sub
mov
cmp
shll
in
popf
jne
inc
and
and
mov
out
retw
mov
jecxz
jns
addb
adc
aaa
nop
in
jp
add
inc
add
sahf
test
insb
sub
sahf
pushf
loop
test
je
jae
jl
xchg
mov
bound
leave
xor
inc
pushf
jle
mov
fdivrl
ds
mov
fs
test
ja
inc
daa
shll
cld
stos
and
fwait
je
push
fnstsw
lea
push
mov
jg
mov
repz
cli
inc
in
mov
cmp
cmp
adc
sub
mov
or
xchg
jp
mov
jb
rcr
pusha
lret
and
jno
jno
push
sbb
repz
xchg
aaa
jne
jnp
sbb
bound
cmp
push
push
xchg
mov
xchg
icebp
mov
pop
dec
mov
push
adc
nop
rcll
leave
clc
pop
aad
jl
nop
xor
repnz
jb
sbb
sti
in
fldpi
sbb
mov
imulb
dec
mov
movsl
popf
aas
rcrb
or
adc
pushf
inc
leave
dec
add
sub
and
loopne
xor
orb
adc
imul
xchg
retw
mov
add
sbb
iret
cli
ret
jbe
imul
pop
pop
and
and
fadd
sti
and
stos
mov
dec
fs
xor
popf
cmp
mov
cmpsb
imul
popf
xchg
pop
mov
xchg
push
lock
jns
add
mov
jecxz
subb
lock
pop
repnz
or
outsl
add
loopne
cmp
leave
fsubrs
jbe
leave
fucom
in
push
inc
mov
mov
leave
and
in
push
subl
xlat
add
mov
jl
pop
xchg
or
faddl
lods
sub
mov
in
repz
jg
or
fwait
out
mul
xchg
dec
xor
or
xchg
psrld
xlat
test
rcrb
xor
push
int
add
mov
adc
xor
shlb
pop
fisubs
imul
hlt
insb
in
mov
dec
jecxz
dec
xchg
mov
sub
inc
iret
mov
and
xchg
or
jnp
mov
sbb
ret
movsl
push
xlat
xor
inc
fmulp
inc
loope
sbb
mov
or
xchg
sub
jge
xchg
jb
and
fistpl
or
movsl
jno
push
jp
in
dec
inc
cmpsb
sbb
mov
mov
fnsave
outsl
lea
fisubl
aas
lds
mov
pop
leave
mov
or
lods
mov
xchg
push
test
xor
sar
xchg
add
dec
cmc
cwtl
cmp
lret
xchg
int
cmp
mov
inc
movsl
or
imul
enter
mov
dec
aad
and
popa
xlat
fs
cmp
data16
jmp
xchg
es
pop
xchg
adc
push
sub
iretw
mov
nop
cmp
roll
das
xor
push
jl
stos
out
jl
push
std
int
movsb
std
dec
sbb
ret
stc
pop
ret
flds
ret
rorl
jae
xchg
addl
fwait
int
inc
or
and
mov
das
and
in
sub
addr16
add
mov
and
mov
cs
xchg
int3
pop
sub
push
lods
pop
stos
stos
xor
bound
dec
xlat
adc
pop
adc
loop
out
mov
std
ljmp
sub
rol
and
xchg
gs
incb
mov
mov
xchg
popa
cmp
icebp
cmp
and
clc
sbb
ret
ret
lods
cmp
fbstp
mov
ret
and
scas
ja
outsb
xchg
pop
icebp
ss
arpl
lahf
dec
mov
pop
inc
push
sub
jns
loope
roll
cmc
sbb
enter
mov
add
jmp
sbb
or
push
inc
sbbb
out
xor
mov
jb
xor
jbe
stos
data16
mov
das
jns
inc
sbb
or
out
pop
and
mov
fcompl
jl
mov
ret
lret
shr
push
cmc
push
pop
xchg
inc
or
xor
or
fcmovnu
push
or
push
int
add
or
mov
ret
or
inc
mov
filds
imul
lret
inc
fdivs
loop
jmp
iret
mov
cmp
aam
aas
inc
nop
xor
into
or
push
mov
or
daa
dec
rol
mov
xor
xchg
fsubrp
dec
sub
jno
add
inc
lcall
out
orb
xchg
add
sbb
or
fucomi
fisttpll
mov
mov
or
push
xchg
sbb
mov
aas
pop
cmp
mov
pop
dec
hlt
push
fisttpll
inc
adc
mov
iret
push
pushf
repnz
add
cwtl
pushf
jle
jmp
movsb
xchg
xchg
xor
push
and
imul
push
mov
push
sbb
cmpsl
xchg
out
mov
lret
or
cmp
loopne
test
pop
xor
or
les
mov
aad
shlb
std
test
cmp
inc
scas
pop
mov
xor
jge
mov
bound
or
call
push
sbb
loope
cmp
fstpt
in
cltd
rolb
jbe
pop
inc
adc
or
or
iret
sub
and
jmp
inc
fs
mov
fstpl
leave
repz
rcll
push
mov
jmp
ret
insb
inc
mov
lock
jne
mov
sahf
jecxz
sbb
inc
jmp
test
cmpsb
insb
pop
aam
mov
xchg
adc
xchg
adc
je
in
in
das
xchg
and
push
fcomip
jns
negb
cmpsb
xchg
xchg
lods
ret
cwtl
mov
popa
push
xlat
fsubl
push
push
rol
or
pop
or
sub
jmp
cmp
test
xchg
jge
and
imul
push
aas
cld
pop
and
cmpsb
cld
pop
rcr
mov
add
sbb
push
add
nop
jb
mov
mov
add
mov
andl
xchg
or
negl
mov
dec
inc
push
mov
in
stos
jle
and
scas
cmp
dec
lret
or
jecxz
call
fsubl
adc
xchg
sub
push
adc
dec
data16
sahf
push
fiaddl
jmp
fsts
and
stos
push
hlt
mov
pop
out
lock
lret
jno
test
adc
fadd
mov
cmpl
aaa
add
lahf
es
test
lea
pop
jmp
mov
rclb
inc
push
in
pop
stc
stos
cmp
loopne
lcall
or
mov
mov
js
and
sub
sarb
adc
add
lock
aaa
sub
mov
push
in
out
movl
addb
enter
test
sub
das
pop
cmp
out
xor
adc
jle
rorb
pop
movsb
imulb
iret
cmc
dec
hlt
shl
inc
push
jbe
and
or
popa
and
repnz
xor
mov
jnp
pushl
bound
mov
test
push
roll
cs
test
cld
jge
jnp
mov
movsl
cmp
dec
fists
mov
and
dec
mov
fdiv
psubb
dec
out
std
into
je
adc
inc
subb
sbb
mov
movsb
jl
push
les
xchg
and
sub
call
push
jb
dec
dec
push
mov
cmp
mov
adc
xor
nop
ret
mov
mull
pushf
xchg
leave
cmpsl
xor
lods
inc
jne
xor
lods
mov
test
stc
pop
xchg
imul
or
das
nop
stos
lds
ds
inc
std
call
ret
xor
lock
xor
ret
enter
fs
fisttps
dec
xchg
mov
and
jnp
andb
xchg
pop
jns
jmp
repnz
or
and
inc
adc
lea
cmp
lahf
dec
adc
inc
or
out
jl
and
and
out
sbb
pop
sub
xchg
das
pop
inc
scas
jae
out
mov
aas
xchg
mov
jle
cmp
in
push
int
and
int3
test
pop
inc
ficomps
and
and
mov
inc
scas
xor
sti
iret
lods
sub
mov
pop
push
jle
inc
es
pop
add
imul
cmp
stc
sub
mov
fists
cmpsl
sbb
psrld
int3
add
into
mov
test
mov
icebp
and
jbe
fnstenv
cmpsl
or
cmp
adc
out
stos
jo
cmp
fcmovu
mov
div
scas
addl
fxch
cmpsb
inc
jg
or
iret
sbb
mov
pop
push
jns
fmull
sub
xchg
outsb
ja
movsb
push
mov
aad
pusha
or
inc
mov
lcall
cmp
ret
lcall
and
mov
ss
cmpsb
and
fs
pop
mov
mov
adc
dec
inc
xchg
clc
push
inc
outsl
push
inc
mov
insl
ja
mov
test
jno
icebp
cmp
movsb
mov
loopne
pushf
mov
mov
xchg
imul
ja
in
xor
xchg
rcrb
mov
pop
cltd
inc
fstl
ss
test
jo
je
cltd
repz
ja
icebp
push
leave
stos
ds
or
out
addb
bnd
pop
imul
cmp
add
fdivl
cmp
mov
std
pop
add
movsb
popf
cmp
sbbl
jno
xor
sbb
push
loopne
push
jae
jecxz
or
push
pop
or
mov
out
mov
bound
push
stos
je
mov
outsb
push
std
test
adc
push
pop
les
js
int3
jecxz
xor
cmp
sbb
jno
jne
mov
adc
inc
fucom
lret
xor
hlt
test
aad
mov
inc
push
rcr
add
push
and
mov
scas
adc
shrl
fsubl
or
adc
xlat
mov
sbb
xchg
outsl
test
lret
cmpsl
rclb
outsl
iret
jge
xchg
jle,pt
rclb
emms
xchg
lret
mov
sub
add
ret
adc
sub
mov
cmpsb
mov
je
lods
popa
test
push
pop
imul
pop
jp
fsubs
jae
mov
fs
mov
jecxz
roll
in
push
cmp
mov
pushf
fsubrl
imul
dec
in
sbbb
xchg
push
sub
divl
or
mov
xor
out
dec
es
fsubrl
insl
push
mov
push
add
or
adc
mov
jno
cmp
jge
lcall
pop
or
hlt
sub
sbb
and
push
mov
push
out
add
ljmp
out
add
sub
movb
cltd
mov
jns
lock
jno
mov
push
int
int
add
dec
mov
jb
and
xchg
mov
addr16
sub
addl
imul
lsl
push
inc
imul
jl
stc
xchg
ficompl
clc
je
xor
xorb
shll
and
pop
test
adc
int3
imul
ss
inc
ficoml
jns
fldlg2
fs
leave
push
xor
sbb
lret
pop
int3
cmp
jge
jnp
mov
xchg
fistpll
or
rcll
cwtl
mov
ss
test
inc
inc
out
mov
scas
xchg
es
imul
dec
and
mov
rcrb
gs
mov
mov
xlat
mov
test
lds
dec
xchg
jle
mov
daa
jno
ja
push
mov
loopne
push
jb
imul
mov
add
iret
push
aas
mov
in
jbe
jg
xor
pop
add
xor
lea
mov
jae
sub
hlt
stos
jecxz
fstpt
mov
mov
cmc
dec
loop
and
add
pop
je
out
xor
jmp
or
inc
jnp
cmpsb
cmp
mov
jo
xchg
push
jecxz
mov
fstl
leave
push
arpl
imul
dec
mov
push
loopne
stc
or
mov
adc
aas
lret
out
xor
push
aam
pop
cs
mov
cltd
add
pop
loopne
xor
lcall
cld
dec
mov
imul
sbb
aad
test
xchg
mov
lea
cs
imul
pop
data16
test
xor
pop
loopne
xchg
cmp
test
inc
sbb
or
cmp
sub
popf
stos
nop
sub
push
sbb
fistl
lahf
push
push
les
into
add
rep
test
adc
int
or
ds
ret
add
cmp
pop
sbbb
ljmp
addr16
jo
notl
xor
aad
xchg
pushf
sbb
lret
or
int
xor
mov
sub
adc
daa
add
jb
dec
scas
push
or
aad
push
dec
xchg
daa
pop
je
mov
ficoml
enter
or
out
cltd
call
inc
sbb
xchg
pop
pop
push
mov
lods
movsb
mov
mov
cwtl
dec
test
ret
cmp
ljmp
jecxz
cltd
fistpll
idiv
ss
add
aaa
or
dec
mov
cmp
mov
push
or
and
push
icebp
std
push
cmp
cmc
pushf
and
mov
sar
mov
and
inc
adc
movsb
push
test
adc
xchg
gs
outsb
cmp
cmp
mov
mov
xor
in
fldcw
adc
and
pop
xchg
mov
xchg
sub
jp
cmp
lret
cwtl
xchg
inc
add
js
sbb
ja
adc
push
jle
fstl
stc
clc
ficomps
out
fldcw
inc
out
cli
fdivrl
sbb
test
push
dec
jle
ret
popa
repnz
in
sbb
xchg
lds
orl
mov
dec
fidivl
push
mov
ret
aas
push
dec
sub
test
lea
jge
repnz
daa
jle
stos
mov
gs
movsl
cmp
sub
in
lahf
call
xchg
dec
mov
mov
cs
iret
test
fsubs
jle
cwtl
mov
pushl
out
dec
jg
or
and
sub
test
jo
bnd
outsb
dec
fsts
cmp
sub
sbb
push
addr16
mov
jmp
lock
sub
xchg
cld
sub
cmpsb
jmp
mov
jmp
repnz
in
mov
hlt
mov
adc
mov
xor
shrl
sbb
cli
pop
gs
rclb
lods
adc
adc
mov
and
mov
data16
cmpl
jg
xchg
pop
out
add
inc
pop
mov
hlt
mov
notb
fs
dec
into
dec
mov
test
or
lcall
stos
mov
lret
insl
sub
inc
sub
xchg
inc
dec
sbb
loopne
xor
dec
stos
sub
jne
mov
push
add
ljmp
dec
repnz
push
or
aaa
fstpl
pop
rolb
add
lcall
mov
fwait
sahf
movsl
fdivrp
les
sbb
sbb
out
inc
int3
push
push
adc
mov
cmp
hlt
fwait
testb
mov
inc
lods
aad
jb
or
add
jecxz
xchg
rcr
push
std
jmp
in
mov
popf
arpl
inc
add
lret
dec
mov
setne
loopne
and
push
xchg
fsts
imul
and
add
stos
int
cli
iret
notb
sar
fs
rclb
mov
enter
frstpm(287
add
dec
bound
popa
mov
cmp
addb
into
ss
int3
jp
movsb
mov
cld
sub
loope
out
pop
scas
push
sti
push
and
mov
pop
push
pop
dec
into
sbb
mov
push
aad
mov
cld
sbb
cmp
mov
mov
jge
push
inc
faddl
mov
lods
rcrb
dec
mov
xchg
or
mov
ficompl
cmp
lods
mov
push
nop
mov
mov
or
xchg
sbb
imul
fcomps
mov
je
xchg
cli
or
out
jmp
xor
sti
ret
out
mov
and
or
loop
dec
repz
mov
inc
lcall
jl
loop
or
push
pop
sarl
sbb
xchg
arpl
and
pop
lcall
and
inc
aaa
inc
inc
add
or
divb
out
movsl
xchg
pop
dec
jmp
je
xchg
in
push
push
add
ret
mov
leave
dec
sub
aad
or
bound
and
inc
shlb
jecxz
fwait
mov
mov
sbb
in
cltd
sbb
xor
pop
lods
rorl
cmp
jp
sub
imul
add
into
jb
jns
in
or
hlt
cmpsl
push
aas
xor
mov
inc
loopne
inc
bound
lahf
fdivrl
lds
lock
mov
sahf
int
insl
jno,pn
mov
push
mov
adcl
pop
xor
je
dec
addr16
mov
sub
sub
fcmovne
in
sahf
push
mov
imul
out
or
adc
in
mov
lds
fbld
jl
lds
fimuls
mov
scas
mov
fisubrs
jno
dec
ret
xchg
inc
and
pop
test
lahf
push
lods
mov
adc
lods
adc
addb
xchg
mov
push
ret
adc
in
xchg
insl
in
test
test
mov
mov
subb
mov
cmp
enter
fwait
push
fldln2
sub
or
daa
cmpb
inc
xor
add
movsb
mov
cmp
and
and
ret
dec
and
addr16
push
pop
adc
xchg
scas
sub
or
adc
lret
cltd
mov
clc
inc
mov
outsl
imul
ds
in
sbb
cmp
ficoml
cld
stos
fcomps
movsl
scas
cmp
jle
fiadds
js
dec
jnp
xchg
fldenv
cltd
mov
jle
addr16
cmpsl
and
push
pushf
aam
jb
ret
xlat
popf
add
shll
jecxz
inc
ficomps
fwait
scas
pop
iret
xor
frstor
imul
inc
ja
inc
push
mov
dec
add
sub
cmpsb
gs
adc
lcall
sbb
or
lret
mov
dec
pushf
add
add
leave
test
rcrl
add
dec
add
fcompl
adc
xor
add
cmp
xor
mov
test
pop
jo
flds
jle
lcall
pop
mov
stos
ja
das
mov
pop
jno
push
fimull
in
push
test
push
dec
sub
cmp
add
lcall
xorb
cld
add
in
int3
repz
loope
mov
es
inc
cmp
xor
pop
xlat
rorl
movsl
daa
sbb
nop
dec
push
mov
mov
data16
sub
mov
fucomip
push
clc
xor
jge
add
inc
cltd
cmp
xor
mov
lods
out
cld
sbb
xor
mov
rcl
xchg
push
bound
je
pcmpgtd
xchg
inc
pop
lret
mov
imul
jbe
popa
xchg
dec
std
mov
cmc
inc
mov
fiadds
iret
sbb
mov
sbb
adc
dec
aad
jb
xchg
in
rep
jno
jmp
fildll
fiaddl
dec
pop
popa
adc
xchg
aam
test
into
nop
enter
ja
add
repz
mov
jnp
xchg
cmpsb
sbb
jg
rorl
cmp
mov
or
cmp
mov
inc
and
stos
rep
lea
xlat
adc
sahf
loop
lret
ret
int
push
inc
jg
test
sbb
jae
stos
lods
xor
int
ret
pop
xchg
pusha
int
js
sub
adc
gs
sbb
mov
xor
shll
sub
cmp
xor
mov
cmp
in
mov
loop
push
push
enter
dec
dec
dec
in
aam
lcall
or
jno
mov
jl
mov
leave
push
jne
sti
stc
aad
dec
inc
inc
cmp
fdiv
flds
cmp
std
xchg
inc
test
sqrtps
popf
test
sbb
js
popa
in
bound
decl
or
sub
sub
push
xor
sub
mov
and
out
pop
push
jae
fwait
stos
les
pop
test
add
mov
or
insl
movsb
shl
pop
push
movsl
mov
imul
int
adc
push
inc
adc
cli
test
and
mov
cwtl
pop
mov
xchg
dec
fstpt
ret
cmpsb
push
hlt
and
lahf
xor
mov
shrl
jge
add
sub
insl
pusha
or
jnp
jmp
xor
mov
movb
scas
nop
inc
dec
cwtl
xchg
add
arpl
adc
daa
jecxz
repz
dec
frstor
addl
push
popa
loopne
stos
mov
pxor
jne
sbb
js
orb
movsl
mov
inc
add
xchg
inc
call
or
or
fisttps
pop
cmp
push
mov
cwtl
mov
cwtl
popf
cld
push
xchg
mov
jbe
cmp
mov
cmc
sub
imulb
mov
pop
push
sub
sarl
fcmove
inc
dec
adc
cmp
adc
xor
xor
mov
dec
lahf
outsl
adcb
push
repnz
cltd
test
popa
sub
add
mov
xor
push
popf
mov
jmp
aaa
mov
pop
cmc
in
shlb
xor
add
pop
xor
lahf
ja
cmp
and
addr16
leave
push
adc
stos
js
xchg
push
lods
test
cmp
sub
push
iret
shlb
push
lahf
push
icebp
jb
jb
out
mov
push
int3
fbstp
insb
mov
pop
jae
push
mov
dec
inc
int3
rol
jp
call
mov
jae
popf
and
lods
loope
mov
sbb
je
adc
dec
mov
ret
repnz
adc
mov
jge
add
xor
mov
aas
jne
mov
sub
inc
xlat
jge
lock
call
sbb
fwait
sbb
data16
xchg
add
mov
shrb
jge
jp
adc
popf
inc
idivb
or
cs
or
xlat
jo
pop
movsl
adc
mov
or
shll
fwait
jns
test
lcall
or
sahf
jecxz
mov
imul
push
add
cmp
sarl
push
cmc
aas
into
xor
sbb
lea
jo
sahf
xor
stc
sarl
push
push
std
icebp
outsb
or
sbb
or
lock
clc
push
pop
sbb
movsb
or
subb
inc
rcrb
loop
sbb
xor
fnsave
push
xchg
push
enter
mov
mov
sbb
jge
in
mov
sub
inc
lea
pop
repz
cmp
push
jecxz
or
insl
sub
xchg
xchg
in
pop
inc
es
push
ret
sub
addb
inc
fnstsw
mov
inc
sarl
cmp
dec
popa
pop
push
iret
inc
inc
pushf
fcomps
lahf
pop
shlb
mov
out
cmp
aas
fldt
inc
mov
imul
adc
aad
add
sbb
adc
in
jae
arpl
jl
lahf
test
cmc
push
sbb
adc
xor
mov
out
adc
lcall
imull
add
dec
xchg
cli
test
or
cmp
scas
cmc
cmp
and
dec
int3
mov
xor
pop
or
iret
jb
mov
sbb
mov
push
cs
shll
mov
add
fs
xchg
jmp
subl
xor
jnp
jg
test
add
or
or
xchg
shlb
mov
jle
add
cmpsb
xor
fwait
sbb
add
mov
pop
movsl
push
and
daa
sbb
insl
fwait
out
jle
mov
test
cmp
mov
jle
aas
sub
mov
pop
sub
mov
insl
pop
cwtl
xchg
lahf
inc
scas
and
or
mov
pushf
pop
stos
cmpb
les
mov
push
mov
add
xchg
jo
fs
aas
cmp
sub
mov
jp
mov
call
xchg
lods
lahf
mov
inc
into
dec
divl
jb
adc
psrlw
sub
into
sub
ds
out
pop
jns
add
inc
mov
orl
les
add
je
pushf
test
ret
ljmp
mov
and
ja
mov
mov
scas
es
test
aam
into
es
popa
mov
sbb
push
and
cvtps2pd
popl
jp
mov
mov
mulb
mov
fnclex
vpmaddwd
scas
add
daa
shll
add
sbb
pop
push
lods
mov
popf
dec
into
js
aam
neg
xchg
jb
sbb
cld
fstps
sbb
andl
enter
mov
bound
in
cli
mov
ss
mov
lds
les
pop
das
cmc
sbb
sahf
xchg
fs
cli
xor
adc
test
shll
pop
lret
inc
ss
and
jecxz
pop
popa
out
xchg
fsubrs
in
pop
out
xchg
stos
movsl
arpl
push
sbb
rorb
dec
sbb
orb
push
sub
xchg
out
shl
pop
jge
lods
test
push
cld
jns
mov
adc
cmpsl
inc
and
in
stos
rcrb
mov
das
aad
mov
aad
das
and
orl
data16
mov
xor
fcoml
push
call
and
lea
jg
add
cwtl
add
mov
mov
or
push
inc
cmp
mov
jp
jg
and
testl
addr16
inc
push
int3
sarl
sti
mov
add
or
add
xchg
mov
cli
loope
out
jecxz
call
gs
jbe
mov
out
out
and
pop
and
mov
sbb
inc
xor
mov
repz
call
jecxz
or
xchg
js
xor
sbb
pop
inc
add
icebp
sarb
out
addl
repz
jae
leave
scas
int
repz
data16
dec
adc
jge
in
add
mov
ds
loop
imul
in
xor
dec
lods
inc
xchg
add
mov
stc
inc
mov
push
sub
mov
stc
shlb
inc
lahf
mov
sub
aam
nop
add
ja
sbb
in
pop
imul
mov
stos
repnz
ljmp
cltd
sahf
idivl
mov
lret
enter
jle
sbb
stos
inc
loope
aad
pop
rcl
ds
arpl
adc
jnp
push
jnp
in
stc
int3
inc
or
ja
xor
mul
cmp
nop
xor
jl
mov
add
xchg
divb
xchg
mov
xchg
in
int3
pusha
cmp
mov
shlb
lahf
jo
adc
rorb
in
xor
in
sub
testb
sbb
push
and
dec
xchg
call
iret
cwtl
cli
and
add
sub
mov
adc
int
xlat
xchg
fiaddl
fists
sahf
mov
int3
xor
aad
dec
ficomps
fsubp
adc
lds
or
add
test
cli
fwait
ret
xchg
push
lret
pop
data16
pop
cmc
pop
xlat
ja
mov
test
mov
pop
jbe
lea
sub
mov
andb
scas
adc
pop
or
pop
xor
sti
jl
inc
sub
xor
xor
jg
je
ljmp
sbb
movsb
dec
addl
mov
popa
xchg
addr16
or
sarl
scas
push
enter
pop
movsl
loop
gs
inc
int3
ret
mov
sarb
jmp
or
xor
loopne
jnp
mov
pop
pop
ret
clc
pop
mov
jg
mov
cwtl
cmp
pop
repz
lds
jge
dec
or
dec
es
and
sbb
adcl
mov
xor
das
jge
test
or
and
xor
outsl
xchg
rcrl
jmp
xor
lock
pop
enter
cmp
sbb
pop
andl
lcall
pop
imul
shlb
movsb
add
enter
data16
mov
mov
sahf
insb
jecxz
jbe
mov
mov
outsl
cmp
out
push
add
xlat
insl
push
imul
jns
fidivl
push
imul
insl
loop
out
out
das
sub
jbe
adc
mov
adc
sbb
mov
pop
xor
mov
js
sbb
mov
mov
xchg
pushf
cwtl
ja
xchg
ret
dec
pop
sti
jae
js
scas
lock
or
in
mov
jl
sbb
ljmp
sbb
cmp
shlb
jle
jl
mov
addl
jecxz
mov
inc
push
test
movl
das
mov
lock
adc
bound
pop
imul
cli
enter
popa
dec
pop
jne
sbb
or
push
sbb
add
pop
int3
ja
setno
sub
dec
mov
add
repnz
dec
icebp
pushf
sub
ret
loopne
add
mov
lcall
mov
pop
inc
add
hlt
cwtl
cmc
fidivs
imul
push
cltd
jae
scas
jae
cmp
js
dec
mov
fnstenv
add
inc
jg
xor
push
push
lods
inc
rep
mov
pushf
and
fwait
mov
inc
or
repz
or
ljmp
cmp
jmp
scas
iret
and
es
pop
or
jg
iret
in
push
sbb
dec
sub
push
or
lcall
sbb
and
jmp
loopne
ljmp
stos
test
jne
movsl
movsl
mov
shll
mov
inc
pop
jp
sbb
stc
lret
mov
mov
test
fisttpll
push
inc
mov
fsubrp
ret
and
fbld
mov
mov
addr16
mov
cmpb
popa
les
xor
imul
movsb
ret
pusha
xchg
inc
or
sti
fldenv
add
inc
pop
sti
into
sub
xchg
sub
adc
in
add
test
and
inc
mov
lret
cmpsb
sub
xor
ja
cmp
popa
mov
mov
xchg
xor
ljmp
fbstp
xchg
popf
fidivrl
pop
and
ficomps
les
add
adc
test
sbb
xchg
xor
cmp
aad
pop
mov
adc
cs
lock
lods
in
je
pop
inc
arpl
jl
je
dec
std
imul
rcr
insb
in
push
and
adc
loope
xchg
stos
clc
lods
pushl
mov
stos
ss
orb
aas
mov
out
jmp
push
test
sbb
inc
jge
idiv
push
pop
pusha
lds
stos
mov
inc
lea
push
int3
or
mov
jge
jb
mov
shrl
iret
pop
repnz
fmull
mov
jae
add
out
and
stos
mov
pop
cli
imul
xor
xchg
mov
xchg
pop
les
test
mov
mov
add
rorl
cmp
loop
xor
add
icebp
jns
xchg
sub
stos
inc
and
popf
xchg
mov
inc
push
int3
add
scas
adc
inc
lock
pop
aad
outsb
out
adc
pop
mov
adc
sub
dec
pop
push
cmp
mov
jmp
cmp
cld
test
cmp
inc
mov
aaa
sar
push
dec
jmp
jbe
cwtl
cmp
shlb
subl
loop
mov
pushf
pop
push
sti
aad
outsl
ret
pop
faddl
jbe
push
and
ficomps
jno
pushf
rclb
lods
xchg
xchg
xchg
int
jg
lret
sti
sti
test
xor
jbe
inc
rolb
sub
shl
repnz
in
bound
mov
xchg
cmp
pop
lods
adc
cmc
jb
adc
lret
push
xorb
das
jl
imul
lret
mov
and
int3
dec
pusha
fwait
sbb
sub
das
mov
test
sbb
mov
pop
mov
sub
gs
push
cmpsb
rcrb
jbe
cwtl
jecxz
cltd
sub
adc
int3
mov
in
bound
std
and
hlt
out
fs
loopne
out
fimull
adc
pop
fcompl
xor
imul
ljmp
in
lcall
dec
gs
dec
jno
lods
jmp
xchg
xchg
clc
mov
je
in
and
push
lds
outsb
ret
mov
cmpsl
repnz
push
push
in
xchg
ja
dec
lret
jb
xor
dec
cmp
dec
arpl
repnz
movsl
lret
out
jne
lcall
lods
loopne
mov
imul
test
nop
push
out
sbb
int3
sub
push
aad
xchg
sub
pop
dec
rcl
jmp
xor
popf
and
std
bound
mov
xor
imul
das
jb,pt
add
add
fptan
dec
call
fistpll
mov
imul
cwtl
insl
ss
dec
cmpsb
sahf
jl
daa
mov
sbb
enter
and
xor
sub
mov
push
xchg
mov
mov
scas
mov
sbb
cmp
dec
xchg
or
jno
push
cmp
cmp
xor
lret
fnstsw
pusha
lcall
adc
insl
repz
les
fdivrs
xor
jae
fisubrl
fcompl
std
mov
pop
xor
jecxz
hlt
jle
stos
add
ljmp
pop
inc
xchg
jne
push
shlb
xor
mov
icebp
sbb
dec
jp
mov
adc
mov
mov
daa
aam
sub
inc
mov
sub
imul
mov
add
loopne
stos
inc
ljmp
lret
mov
js
dec
leave
lcall
mov
popf
jnp
repnz
sub
shll
pop
outsb
int3
pop
sarl
mov
xchg
lret
iret
dec
dec
and
imul
aas
cmp
xor
and
ret
mov
cli
cmp
fldenv
or
lret
idiv
popa
mov
ss
dec
cmpsl
rcrb
in
imul
sub
bound
cmpsl
neg
jecxz
or
out
mov
xlat
adc
sbb
pop
mov
push
mull
enter
ds
imul
gs
rcll
or
jb
pusha
sbb
mov
ret
ds
ficomps
cld
dec
jl
scas
ficomps
sbb
loop
mov
jns
in
mov
shlb
fdivs
lahf
call
dec
pop
cmpsb
mov
subb
add
xorl
aam
fmuls
jnp
fcomi
test
add
jmp
les
cmp
push
adc
call
or
add
shlb
stos
addr16
sub
cs
mov
push
orl
or
leave
in
je
aad
adc
and
ror
inc
repnz
mov
jmp
pop
movsb
pushl
push
mov
aas
or
mov
xchg
lods
les
push
lea
leave
bsf
push
pop
lret
ds
inc
and
xchg
pop
jae
and
orb
imul
lcall
mov
or
push
push
mov
cmp
mov
addb
jns
int3
push
stos
push
xlat
ret
aam
lods
inc
push
mov
pop
sahf
mov
and
jmp
pop
pop
cmp
test
out
or
aad
scas
in
or
jno
out
mov
mov
rcl
push
pop
pusha
cmp
cmp
scas
imul
dec
lret
icebp
gs
inc
or
lods
mov
cmp
ret
mov
fistpll
int
mov
rorb
sbb
mov
adc
lret
int3
cmp
stc
and
fwait
push
xchg
rcrb
mov
dec
pop
in
rol
lret
xchg
stc
fs
dec
mov
test
mov
aam
jmp
adc
nop
dec
aaa
std
popf
and
cmp
jne
iret
fdivrl
mov
mov
arpl
clc
push
mov
sub
dec
sbb
ja
fnstenv
stos
push
dec
mov
xor
jge
sub
pop
sbbb
mov
ja
addr16
sub
sar
imul
inc
add
mov
sahf
imul
fisubs
and
xchg
fisttpll
outsl
sbb
inc
addb
add
dec
shlb
pop
sbb
sbb
dec
jl
jl
dec
jge
mov
insb
xlat
pushf
inc
je
sti
mov
test
mov
movsb
pop
stos
inc
loop
push
pop
mov
dec
inc
lds
add
pop
add
in
pop
xchg
adc
pop
dec
andb
xor
test
jo
mov
adc
and
xchg
jmp
leave
lret
pusha
lret
sub
and
out
fistpl
cmp
cmp
adc
mov
xchg
add
shrl
inc
iret
mov
lds
xchg
and
cmp
pusha
shrb
mov
test
jp
cmp
movsb
rcr
mov
pop
jg
inc
mov
jl
mov
and
sbb
jne
lods
lret
imul
push
in
inc
mov
sti
shrl
inc
fwait
lcall
fildll
shr
imul
dec
test
jge
cmp
jno
pop
sbb
ljmp
adc
pusha
lods
ret
xchg
dec
pop
enter
xor
test
push
insl
test
jle
addr16
jne
mov
xor
jp
and
scas
iret
ret
inc
cmp
push
xchg
adc
sbb
ret
insb
sub
popf
push
sub
and
je
shrb
test
cli
lods
dec
add
nop
jle
dec
ret
bound
ret
mov
cmp
imul
mov
cltd
push
aam
cld
les
adc
ret
mov
repz
in
popf
out
cwtl
das
jp
adcl
mov
adc
cs
idivl
xchg
pop
call
lods
mov
arpl
loop
mov
andb
jge
inc
fnstenv
aad
cli
lods
shl
sub
ds
popl
jnp
inc
jno
mov
xchg
out
sbb
jnp
xchg
jecxz
mov
mov
mov
out
jae
leave
popa
ss
inc
or
das
cmp
push
push
mov
andb
jecxz
add
sub
push
pop
mov
cmp
arpl
in
aaa
or
and
pushf
cwtl
ret
std
fcmovnb
int
pusha
xor
jg
ja
mov
hlt
mov
testb
data16
lea
nop
dec
lods
push
mov
jno
fs
fisubl
jno
add
aaa
loop
mov
test
xchg
gs
fucom
cmp
jno
xchg
in
sbb
and
and
stos
lret
and
insb
je
fsts
pop
js
cmovbe
gs
repnz
mov
pop
xchg
pop
sub
mov
enter
dec
mov
sahf
lock
popf
add
and
sbb
insb
andl
pop
pusha
scas
cmpsb
out
lea
cs
jp
insl
pop
xor
jge
mov
xchg
jge
out
movsl
or
push
rclb
push
add
add
ds
adc
add
sub
dec
mov
inc
je
jle
push
out
xchg
pushf
testl
dec
mov
mov
pop
insl
aaa
jle
movsb
stc
out
shll
push
je
sbb
xchg
call
scas
mov
cmpsl
pusha
fimull
jge
push
ret
jle
and
clc
cwtl
mov
repnz
int3
inc
into
sub
out
mov
mov
lds
test
or
ja
push
inc
dec
in
sbb
out
add
cmpsb
pop
nop
sbb
pop
ja
mov
sbb
xchg
xor
aad
cld
pop
pop
cmp
pop
xchg
iret
cmp
icebp
insb
adc
or
movsl
mov
repz
jge
mov
mov
adc
sub
and
int3
outsb
add
xchg
sub
movl
sti
adc
sub
sbb
stos
push
cmp
in
leave
mov
aad
movsb
inc
xor
jge
inc
jge
push
inc
fs
adcb
fdivrl
or
in
adc
ljmp
imulb
dec
test
mov
add
jno
add
dec
adc
mov
ret
leave
lea
add
or
adc
push
push
movsb
cmp
push
sub
jnp
inc
add
sub
stos
adc
test
jae
test
inc
mov
fnstenv
xor
mov
jo
mov
in
sti
mov
xchg
xchg
outsl
stos
jmp
insl
aad
jle
push
mov
daa
mov
flds
hlt
mov
dec
enter
jno
mov
xorl
movsb
xor
cmpsl
dec
mov
xchg
push
je
lcall
mov
mov
pop
in
loope
repz
out
cmp
icebp
and
pop
mov
jns
pop
in
and
pusha
push
test
mov
sbb
mov
stos
sub
xor
insb
notb
shr
cli
stos
xor
pop
aas
xor
ja
repnz
fsubrp
test
push
dec
add
enter
cmp
add
mov
push
arpl
inc
outsl
aad
ja
gs
lods
in
pop
dec
sub
mov
xchg
loopne
dec
sbb
aas
nop
jno
sbb
rcll
jnp
mov
pushf
add
inc
in
mov
repnz
adc
cmpsb
leave
dec
xchg
js
sub
adc
fdiv
jns
or
cltd
pop
xor
mov
scas
out
bound
popf
popf
data16
call
jmp
addl
jae
jp
test
jae
xor
add
jb
sahf
iret
or
imul
sbb
scas
cltd
push
cmpsl
dec
je
mov
outsl
insb
fdivrl
cmp
mov
sub
xchg
jno
mov
push
mov
xchg
push
mov
aam
jnp
in
loope
pop
aaa
iret
std
xor
mov
inc
add
mov
or
mov
lods
dec
clc
dec
cli
sti
lcall
int
xor
test
jns
fidivrs
test
outsl
pop
mov
lods
xor
jnp
loopne
scas
dec
insb
adcb
xor
into
ss
push
push
jae
shlb
data16
cmpsl
mov
xlat
jge
mov
adc
divb
out
mov
imul
jns
lock
arpl
adcl
push
outsb
or
push
jbe
or
cli
adc
mov
push
scas
or
out
test
dec
aam
jle
or
add
inc
or
xor
pop
sbb
call
shll
or
add
mov
bound
test
dec
lods
push
push
jbe
push
xchg
adc
fldenv
mov
rorl
push
int3
sti
sub
sbb
sbb
shrb
sbb
in
andb
mov
jb
int
popf
lret
add
jmp
ficoms
xor
or
mov
mov
mov
daa
jo
sbb
ljmp
dec
sub
mov
shrb
filds
test
fbstp
lret
out
imul
insb
mov
jae
fimull
std
cmc
dec
mov
shlb
out
push
jg
pop
les
enter
jnp
add
jmp
hlt
addr16
dec
fsubr
ret
std
pop
dec
cmp
sahf
jp
xchg
outsl
out
mov
mov
scas
les
push
xchg
int
addr16
adc
mov
cld
mov
inc
sti
sub
cwtl
popf
sbb
aad
push
outsb
mov
or
sbb
lahf
mov
mov
lret
lds
test
das
mov
xchg
and
jns
test
push
push
test
inc
xor
js
mov
ja
or
push
cmpsb
xchg
bound
dec
and
mov
add
loope
addr16
fptan
xlat
xor
mov
mov
inc
xchg
jno
mov
mov
and
inc
sbb
or
mov
and
pushf
icebp
jg
cmp
es
adc
loope
popa
lret
orps
mov
imul
xchg
frstor
xor
out
sti
sub
pop
jecxz
cltd
incb
gs
xor
jmp
xor
lcall
push
enter
mov
adc
mov
inc
lret
cmp
scas
add
shll
inc
jl
lds
pop
bound
add
inc
push
xchg
inc
add
mov
mov
inc
mov
pop
cli
sahf
filds
pop
cwtl
push
xchg
loop
inc
mov
mov
cwtl
in
addr16
in
add
xchg
loopne
aam
add
add
jecxz
movsl
stos
out
xchg
cmp
inc
xchg
adc
mov
mov
pmuludq
leave
dec
das
mov
sbb
out
cmp
pop
scas
pop
push
cmpsl
lret
rcrb
add
pop
leave
xchg
daa
cli
mov
jnp
cmpsb
cmp
cli
js
mov
in
rcll
lods
dec
jae
test
cli
repnz
movsb
jg
cmp
sub
push
scas
ja
dec
and
pushl
xor
mull
mov
add
push
sbb
cli
adc
lods
sbb
dec
sahf
cmp
in
mov
xor
cmc
roll
mov
jl
pop
outsb
pop
xor
insb
test
mov
jo
jle
push
adc
rcrl
inc
inc
xor
hlt
fldt
lcall
add
rorl
ret
lock
jecxz
jecxz
mov
mov
pop
push
push
dec
aam
or
inc
test
insl
add
ficoms
mov
pop
add
jl
mov
repz
jg
or
popa
jne
scas
test
ret
push
mov
popa
fwait
ret
dec
adc
aad
jmp
mull
test
mov
and
mov
inc
cmc
jno
xchg
adc
jb
sub
ja
ficomps
dec
ljmp
push
adc
loope
int
hlt
sub
mov
xor
andl
ss
stos
mov
inc
dec
lds
fsubrl
stos
addr16
or
xchg
ljmp
cmp
stc
insl
in
mov
call
lcall
out
jg
idivb
mov
pop
out
outsl
hlt
sbb
mov
hlt
push
jbe
mov
add
jne
or
cmc
dec
cli
push
push
xchg
jl
test
movsl
arpl
int3
or
adc
leave
push
xor
fstpt
mov
subl
jecxz
ret
or
cmp
jge
cmp
mov
or
scas
stc
mov
pushf
xor
adc
xor
gs
gs
push
jbe
jl
pop
loopne
ja
iret
mov
push
inc
dec
fcomps
mov
in
push
lods
int3
sbb
jl
out
test
push
xchg
lret
cmp
mov
pop
repz
and
push
jge
int3
dec
pop
imul
cmpb
jnp
cwtl
aas
mulps
push
cmc
jg
xor
pop
xchg
arpl
mov
or
pop
rol
pop
cmpsl
shrl
in
js
mov
roll
dec
arpl
lea
cs
mov
pop
hlt
sti
push
mov
fldl
sbb
data16
dec
cmp
cmp
dec
cmc
xchg
enter
lret
jae
movsb
out
test
mov
shl
and
mov
jmp
loop
into
push
mov
adc
xchg
adc
pop
out
test
sbb
cmp
lret
jg
bound
jp
inc
inc
push
mov
or
mov
sub
fimuls
jl
cmpl
push
or
and
movsl
mov
xlat
adc
shlb
out
pop
movups
ret
popa
fcoms
rcrb
push
ret
xor
push
int
ficomps
dec
dec
add
xor
call
dec
hlt
repnz
out
lea
inc
lea
scas
mov
xchg
out
xor
inc
loop
push
mov
into
mov
xchg
in
sarb
pop
inc
lods
sbb
xchg
ffreep
enter
leave
adc
stc
jne
or
gs
les
push
inc
mov
dec
jae
into
cmp
in
clc
xchg
or
lret
cmc
cmp
les
inc
sub
xchg
jnp
int3
and
daa
fwait
div
mov
and
je
xlat
aas
mov
or
loop
add
add
cmpl
lret
pop
daa
inc
ret
mov
add
pop
in
data16
jmp
inc
mov
lret
add
ret
stos
push
xchg
test
push
mov
lcall
push
out
lret
pop
jo
aaa
popf
out
adc
shlb
cli
push
scas
mov
add
or
and
dec
sbb
jbe
je
and
and
adc
and
mov
pop
adc
dec
dec
push
cmovp
outsb
or
push
fldl2e
sahf
stos
pop
push
mov
mov
lea
xor
xchg
andl
repz
sbb
xor
pop
jbe
ss
dec
cmpps
shlb
movsl
lds
pop
push
pop
sub
mov
hlt
push
jnp
and
loopne
arpl
inc
xchg
or
mov
loop
mov
push
jle
or
mov
divb
xlat
inc
jle
cld
popf
and
lock
call
shrb
mov
cmpb
cmp
fistl
xchg
xor
std
rol
insb
or
lcall
add
pop
mov
inc
iret
sub
out
jne
sti
rcl
and
sub
fistpll
dec
and
popf
lret
loope
mov
loop
gs
dec
jp
lahf
mov
jae
jo
pop
dec
mov
xchg
bnd
sbb
xor
insb
push
iret
add
jg
push
sub
js
push
mov
out
mov
add
test
inc
mov
mov
mov
jbe
nop
jge
mov
das
sub
lock
fdivrs
hlt
mov
xchg
test
inc
test
push
cmp
mov
notl
mov
pop
xor
sbb
mov
mov
fsubs
mov
adc
push
dec
pop
sbb
pop
jne
jecxz
sub
jg
shrl
in
push
jg
rcrb
dec
jb
fwait
addr16
jbe
lock
lret
cmp
aaa
xchg
xor
in
add
jo
mov
cmp
leave
rorb
mov
mov
das
pop
adc
mov
mov
xchg
ret
inc
dec
enter
lods
and
loope
dec
xchg
push
cmp
push
inc
cli
pop
push
inc
aam
or
push
daa
fimull
dec
xor
xor
nop
mov
js
test
or
mov
sub
jo
dec
leave
push
xchg
add
sbb
shll
adc
pop
outsl
xor
fs
clc
push
or
sti
js
lcall
dec
push
pop
ds
nop
pop
mov
repz
test
cmp
shl
cs
jo
out
xchg
repz
stc
xlat
repnz
aam
cli
push
xor
ja
ret
pop
dec
rcrl
in
jecxz
insl
jb
sarl
jp
pop
or
xor
aam
lcall
lods
pop
pop
pop
insb
pop
mov
inc
mov
sti
daa
loopne
cli
xchg
jbe
js
mov
mov
mov
call
mov
in
xchg
mov
mov
xchg
cmc
jbe
sub
imul
sub
mov
cmp
in
sbb
mov
inc
nop
cld
rcl
add
movsb
popf
popw
and
mov
push
int3
sub
fidivs
inc
jmp
push
lret
cltd
push
inc
repz
outsb
inc
stos
clc
or
and
push
push
xchg
pop
pushf
jp
and
lret
in
pop
add
xor
jne
xor
sbb
testb
incb
lods
nop
ljmp
jbe
iret
pop
test
pop
popa
fwait
dec
lock
mov
incb
xchg
jo
lock
ss
imul
std
cli
adc
loope
cmp
sbb
mov
mov
dec
jge
inc
xor
cs
imul
pop
loope
pop
inc
mov
inc
xor
or
or
cmp
leave
cld
sub
mov
push
push
lret
faddp
push
cmc
aad
mov
mov
jmp
pop
ds
les
and
sbb
addr16
and
xchg
mov
cmp
shlb
and
enter
jecxz
mov
addr16
or
popf
fs
mov
addr16
incb
cltd
stos
lock
in
and
xchg
sbb
sub
addl
or
xor
jge
pop
out
rcrb
add
fcomps
inc
test
loope
test
cmc
dec
add
mov
sbb
inc
imul
xchg
mov
hlt
or
sbb
lock
jg
push
sbb
sbb
add
fisubl
cs
hlt
in
lea
sub
idivb
fs
sbb
add
xchg
push
jl
test
fisttpl
mov
push
pusha
sub
insb
push
cmp
insl
push
xchg
aad
dec
dec
notl
das
sbb
mov
and
cmpsb
lea
jge
out
cmp
cwtl
cmpsl
jno
cmp
test
out
or
sub
push
ret
icebp
cmp
popa
sbb
jnp
xorb
mov
xor
jge
imul
cmp
dec
mov
hlt
mov
sbb
xor
pop
add
inc
test
shr
sbb
jno
or
dec
add
fs
and
lret
or
mov
out
lods
pop
sbb
sahf
daa
pop
in
pop
pop
fwait
pop
cwtl
sbb
lods
sbb
cmp
mov
push
jne
mov
insb
mov
push
adc
clc
mov
jmp
adc
fstl
mov
sub
inc
sbb
lret
mov
outsl
aad
das
subl
sub
add
mov
out
xchg
loope,pn
icebp
rol
outsb
xorl
cs
das
daa
sbb
xchg
imull
movsb
add
xlat
lret
and
and
sahf
add
int3
jmpw
sbb
roll
xchg
icebp
imul
jae
or
pop
shll
cmp
cmp
dec
pushl
gs
call
and
sub
jb
or
mov
lock
dec
aad
les
adc
xchg
xlat
and
mov
cmpsb
dec
xor
lcall
xor
adc
xchg
popa
mov
aas
inc
push
fidivrl
jg
enter
xorb
add
jne
dec
pushf
mov
mov
push
push
push
jle
xchg
mov
inc
inc
cmpl
add
sarl
sbb
xor
test
cmp
sbb
dec
out
loop
adcb
insl
mov
inc
sub
push
or
lods
stos
jp
dec
xchg
xor
out
xor
mov
dec
insl
ret
inc
shll
jno
pop
xchg
js
xacquire
add
cmc
xlat
in
popa
mov
aam
cmp
mov
addr16
inc
or
jge
inc
or
in
clc
aam
xchg
push
push
sbb
lea
das
in
sbb
daa
inc
lea
div
std
pop
inc
das
stos
cmp
mov
aad
and
roll
xchg
aaa
daa
pop
add
lods
adc
test
mov
add
repnz
xlat
loope
ss
idivl
pop
jle
pop
push
xchg
and
mov
dec
cmp
cmp
pop
cmp
xor
adc
jp
aad
rolb
pop
insb
mov
loop
or
loope
les
xchg
call
mov
outsl
jge
add
pop
shrb
xchg
loop
idivl
nop
sbb
fs
frstor
imul
mov
scas
ror
inc
pop
inc
cmp
out
aad
xor
cmpsl
int3
mov
out
ret
adc
push
adcb
mov
xchg
sub
jl
adc
scas
ljmp
sbb
push
and
testb
je
repz
sbb
jo
inc
js
in
cmp
pop
pop
inc
sub
inc
mov
mov
add
gs
mov
fcomps
jnp
sahf
ret
inc
adcb
sbb
lods
jbe
jl
xor
in
jecxz
imul
inc
int3
loope
icebp
das
sub
stos
sbb
dec
icebp
fucom
and
aam
dec
lea
bound
adc
push
lods
push
std
divl
or
xchg
pop
arpl
fiaddl
vpunpckhqdq
jae
pushf
ja
dec
sar
mov
aam
fs
sub
cmp
popf
test
std
sbb
add
sbb
in
out
cmpsb
push
inc
sbb
mov
jge,pn
int
mov
in
cmc
inc
in
cmp
push
xchg
fidivs
jnp
inc
cmpsl
and
iret
cmp
imul
out
pushf
adc
pop
mov
dec
inc
aaa
repnz
dec
adc
push
pop
stc
sti
movsl
gs
pop
sbb
mov
xchg
mov
inc
ss
ja
cmp
xorb
inc
cmp
jge
es
mov
test
or
nop
and
xchg
lock
add
ficoml
fs
push
repz
out
jle
push
out
inc
pop
xor
repnz
lds
xchg
add
push
cmp
test
fsubr
loopne
in
nop
repnz
jo
push
in
and
sahf
mov
jl
test
sbb
jp
cmp
cmpsl
jnp
xor
mov
sub
das
mov
aam
xor
test
test
out
inc
popa
imul
cmp
dec
mov
mov
push
sub
push
fs
inc
inc
test
jbe
sbb
rcrl
out
dec
outsb
add
mov
ret
fsubrl
push
add
hlt
jecxz
pop
repz
dec
cwtl
push
std
mov
cmp
dec
insl
mov
out
leave
xor
inc
sub
adc
mov
xchg
mov
xchg
fbstp
rclb
dec
dec
dec
lea
xchg
fwait
xchg
arpl
pop
or
imulb
sub
mov
jle
gs
jmp
addr16
sahf
mov
out
popa
and
in
popa
loop
in
js
and
test
aad
ds
mov
inc
push
push
jo
fsub
outsb
loopne
cmc
or
leave
adc
or
movsl
xchg
loopne
pop
int3
mov
jle
push
ret
hlt
dec
or
test
and
xor
mov
mov
loop
movsl
sub
mov
add
add
xor
push
test
mov
cltd
push
or
or
ss
movsl
dec
clc
ja
fwait
movsl
mov
sbb
xor
jp
pop
jl
sub
daa
cld
into
push
xchg
out
add
mulb
cmc
push
jl
xchg
inc
imul
dec
xor
sbb
inc
outsb
ss
in
arpl
test
test
and
and
pop
inc
test
aaa
mov
cmp
aas
mov
scas
inc
aas
pop
jns
inc
insb
shll
stos
mov
push
xorl
mov
jmp
or
dec
mov
jge
out
add
inc
dec
mov
fbstp
push
loop
inc
cmp
dec
sti
imul
add
mov
pop
popf
add
mov
mov
mov
orl
push
les
ret
xchg
xchg
addb
sahf
subb
std
and
jl
insl
mov
and
push
scas
call
jno
sbb
js
addr16
mov
push
negl
js
stos
rcr
sub
cmp
push
shrb
dec
push
scas
adc
mov
or
scas
dec
int
fsubl
pminsw
addr16
and
loope
lock
addr16
repz
add
and
das
lods
shrb
repz
mov
ss
and
jl
inc
call
out
mov
and
xchg
fwait
inc
lcall
inc
jle
std
mov
stc
cmp
mov
add
popa
xor
out
ss
repz
add
mov
imul
push
sub
fstps
jnp
mov
inc
jl
lods
pop
cmp
cli
dec
data16
aas
stos
fsub
icebp
shlb
adc
movsb
out
sbb
addr16
jecxz
xor
jnp
aam
cld
xchg
fsubs
xchg
scas
bnd
out
sub
out
mov
movsb
lret
push
lret
adc
repnz
aad
mov
xor
aaa
lret
adc
xlat
cmp
notl
adc
in
dec
dec
leave
or
push
or
xchg
sub
bound
xor
ret
rcrb
or
xor
iret
cmp
rorl
cmp
dec
div
pop
xchg
mov
xchg
jge
dec
daa
popf
inc
push
add
cwtl
hlt
dec
sahf
mov
push
and
js,pn
insb
jae
mov
mov
pop
lds
std
movb
aaa
xchg
cmp
cld
out
andb
sbb
sub
mov
mov
in
dec
sub
out
push
mov
data16
ret
sbb
jle
test
pop
or
andl
loope
push
adc
cmp
pop
jmp
lcall
cs
adc
pop
nop
mov
fdivp
lcall
lock
push
cmpsb
sahf
xor
scas
gs
out
das
je
stc
mov
or
jne
imul
jne
xchg
or
inc
push
sahf
pop
mov
mov
jle
pop
je
sub
lods
pop
pop
sub
or
mov
movntps
push
push
xor
leave
arpl
loope
adcl
and
sub
aaa
sbb
sub
jo
aad
aad
aam
sub
pop
inc
and
lcall
rclb
jmp
lea
jb
lock
mov
int3
push
pop
push
out
aaa
jp
xchg
push
loop
xchg
std
orl
mov
lcall
test
sub
xor
in
adc
dec
arpl
test
das
fdivp
fadd
cmp
mov
call
aas
dec
imul
mov
rcrl
daa
mov
and
inc
roll
xchg
ret
inc
jp
mov
mov
cmp
ljmp
mov
out
movsl
popl
dec
jg
xchg
imul
xor
jp
outsl
enter
iret
ljmp
xchg
lcall
adc
push
cmp
fnstsw
xchg
xchg
pop
adc
push
mov
sbb
scas
push
jb
not
jae
sub
in
xchg
lahf
and
ret
orb
xor
sarl
dec
sbb
pop
xor
ret
mov
mov
inc
push
push
out
loop
sbb
xor
sub
adc
popf
call
fcoml
cltd
arpl
add
inc
aad
mov
jns
mov
jbe
leave
rclb
aad
stos
pushf
aad
movsl
movsb
pop
pop
pushf
shll
mov
jne
jbe
mov
aam
sub
rcrl
add
das
cmp
mov
dec
into
xor
add
pop
orb
leavew
mov
movsl
adc
lret
push
sub
fcom
jo
dec
popf
jp
adc
jl
push
adc
pushf
adc
pop
aad
pop
stc
nop
mull
test
hlt
xor
test
pop
arpl
push
sub
pop
adc
aaa
sbb
iret
stos
ret
sbb
leave
loop
les
add
add
push
popa
mov
sub
mov
mov
mov
fadds
jbe
xor
dec
lods
cmp
js
xchg
and
negb
fnstenv
jecxz
test
and
aaa
inc
int3
xchg
test
aas
push
xor
jmp
enter
lret
mov
jmp
adc
aam
test
mov
add
out
jbe
aad
jno
adc
fs
insl
xchg
mov
jl
cmp
jns
push
stos
fs
and
mov
rcrb
push
iret
inc
adcl
ret
in
sub
mov
mov
and
and
mov
sahf
imulb
popf
in
push
sbb
jp
outsb
clc
sbb
add
or
divl
mov
sub
ja
mov
and
pushf
mov
cli
negl
push
mov
xchg
mov
add
fmuls
push
arpl
les
xor
mov
ss
inc
jo
or
ds
adc
inc
in
sub
fcompl
clc
or
or
scas
cmp
gs
mov
mov
call
xchg
test
adc
jmp
shll
add
icebp
cmp
das
fidivrs
dec
jne
jne
mov
and
xchg
cmp
test
xchg
sbb
stc
xchg
push
xchg
hlt
cltd
pop
imul
sub
xlat
stos
xchg
in
nop
mov
push
mov
leave
sahf
and
mov
push
cld
mov
mov
test
or
adc
loop
fwait
cltd
jp
mov
inc
ficoms
shrb
cmp
setg
lahf
jae
das
movsl
mov
adc
or
aad
adc
sbb
fdivrl
inc
fistpll
lret
or
jge
mov
negb
stos
sbb
sbb
cmc
pop
adc
aaa
cmpsl
jo
adc
dec
xchg
fisubl
cli
lods
data16
inc
push
pop
cmp
imul
insl
pop
or
std
js
inc
jle
add
jns
cmp
es
lfs
adc
mov
jge
push
cmp
pop
outsb
out
aam
jmp
lock
mov
pop
push
mov
pop
cmpsl
add
aaa
add
sub
adc
jmp
in
xchg
xor
push
sbb
call
out
or
mov
sbb
mov
jnp
jg
daa
and
cmp
inc
gs
cltd
test
gs
lea
pop
xor
cmpsl
lock
mov
pop
jle,pn
sbb
decl
xchg
add
cmp
sub
push
cmp
pop
lock
shlb
push
lods
dec
cmpsl
and
fdivr
daa
mov
and
jg
push
add
push
jl
movsb
mov
xchg
mov
sub
testl
movsb
mov
sti
scas
jbe
dec
pop
aad
test
pushf
leave
in
push
imul
fmul
roll
fcoms
add
imul
jp
sarb
adc
adcb
push
in
fwait
push
pop
add
inc
dec
stos
push
push
inc
ljmp
movsb
inc
cmp
cmpsb
ljmp
imul
jge
cmpsb
xlat
jb
jp
inc
pop
loope
jle
xchg
lahf
xor
and
and
imull
cmp
mov
in
sbb
cmp
cmp
push
xor
dec
test
notb
xor
stc
pop
sbbb
pop
cmpb
cmpsl
dec
inc
push
pop
mov
mov
pushf
pop
icebp
adc
push
push
es
inc
decb
xchg
adc
ja
stos
mov
out
vmptrld
jo
sbb
jmp
push
and
pusha
inc
lods
sub
sarl
pop
mov
into
and
bound
ficoml
inc
pop
mov
add
push
sub
add
xor
shlb
push
ss
insl
sub
add
pop
test
jae
dec
and
add
shll
shrb
lret
xchg
cmc
hlt
int3
push
pusha
and
repnz
mov
xor
insl
cltd
pop
mov
mov
mov
pop
dec
lods
rolb
sub
jl
jmp
adc
and
aam
popa
sti
in
lret
add
sbb
push
push
rorb
adc
out
pop
cs
imull
mov
call
mov
push
lock
and
mov
out
addr16
les
aam
inc
ja
icebp
jne
hlt
pop
inc
or
bound
sub
mov
xor
jge
iret
jl
incb
nop
popa
frstor
ret
cwtl
jnp
shlb
push
pop
push
sbb
sub
cmp
mov
push
mov
jmp
arpl
inc
mov
pop
xchg
repz
pop
pop
xchg
xchg
pop
rcll
inc
mov
arpl
outsl
out
scas
sbb
xor
mov
ret
in
stc
or
fldenv
push
incb
hlt
mov
imul
insb
pop
imul
cmpsb
jns
movsb
jb
cmp
push
xchg
cmp
add
stos
mov
push
push
fimuls
pusha
scas
leave
xchg
aam
sbb
sub
das
sahf
test
arpl
jns
push
sub
scas
dec
aaa
enter
mov
repnz
les
shrl
cmp
cmp
ret
xor
lods
movsl
jae
arpl
cmp
ljmp
out
inc
and
lret
clc
cmp
leave
and
mov
out
cs
mov
mov
std
sbb
idivb
lahf
fstps
mov
rcrb
fdiv
fcomip
lahf
das
mov
sahf
inc
in
fwait
xchg
je
aas
dec
push
jmp
mov
vprotd
push
adc
mov
lahf
jno
jmp
push
add
imul
sbb
cmp
and
imul
fisubl
addr16
push
movsl
aad
mov
jecxz
cmp
xor
mov
lret
cmp
int3
ret
push
xor
sbb
push
es
inc
in
imul
lahf
xor
mov
loopne
push
xchg
add
out
fidivs
inc
sahf
or
cmpb
in
mov
pop
mov
sbb
mov
push
out
jecxz
enter
mov
add
jmp
jecxz
add
push
push
imul
pop
lcall
sbb
xchg
scas
clc
push
push
xchg
repz
iret
push
sahf
sbb
inc
stos
in
loopne
mov
push
push
and
mov
aad
enter
out
push
mov
xchg
jmp
xchg
into
addl
xchg
push
mov
aas
insb
fs
repz
fimuls
loopne
or
cmc
add
inc
and
inc
std
sahf
push
mov
push
dec
das
shrl
daa
les
out
jb
or
scas
sbb
mov
xor
lock
jae
pop
sbbb
les
sbb
shld
jo
dec
call
mov
lods
adc
movsl
jle
adcl
sbb
stos
mov
mov
out
imul
push
pusha
sub
lock
xor
push
repz
pop
popa
sbb
xchg
xchg
sar
gs
sbb
leave
adc
outsl
pop
pusha
std
outsb
add
ficoml
cmpsb
test
push
xchg
xchg
xor
dec
out
imul
mov
je
and
and
cmp
add
xchg
scas
fbld
adc
pop
add
mov
mull
das
sahf
enter
push
jae
enter
xchg
xor
jp
incb
das
std
sbb
shrl
pop
sbb
in
imul
xchg
mov
ret
dec
fsubrs
sar
xchg
inc
mov
mov
repz
addr16
mov
inc
loopne
fwait
out
loopne
int
jge
mov
shr
push
ds
stc
dec
mov
xchg
rcll
dec
rcl
insb
roll
xor
add
mov
pop
and
gs
movsb
xor
out
in
adc
stos
in
ja
scas
lods
ret
mov
sub
std
mov
pop
iret
out
imul
dec
rorb
add
jge
and
insl
mov
test
sbb
pusha
push
xor
out
insb
scas
cmp
aam
pop
test
mov
leave
inc
xchg
not
mov
cld
outsb
jno
paddw
cli
repz
lock
mov
push
pop
dec
inc
or
sub
pop
inc
pop
mov
sti
add
jnp
push
add
sbb
cmp
jns
mov
pop
test
daa
inc
adc
in
test
js
out
fs
fcomps
lock
mov
mov
arpl
xlat
bnd
push
add
pop
test
and
addr16
test
pop
js
fldl
ss
imul
stos
lock
and
push
out
shlb
outsb
cs
push
xchg
ljmp
in
les
push
leave
adcl
lcall
xchg
out
sub
ss
popl
adc
cmpsb
mov
add
nop
push
pop
add
pushf
cmc
aam
mov
cld
ret
jmp
or
shlb
ja
adc
sbb
xor
xor
movsl
call
aas
mov
xchg
fdivl
or
push
data16
pushf
fidivrs
scas
and
xchg
sub
insl
mov
popa
push
sbb
adc
pop
sbb
mov
push
jmp
js
arpl
aas
lret
inc
pop
andl
mov
int
or
xor
inc
lahf
out
xor
dec
imull
sbb
or
out
loop
mov
or
mov
out
in
cwtl
mov
mov
nop
jmp
icebp
icebp
repz
add
mov
push
xchg
sbb
roll
mov
push
cmp
pop
jb
repnz
add
aas
add
lods
adc
and
fisttpl
insb
pop
lods
add
jg
pop
add
mov
mov
add
or
fs
lods
shl
lods
dec
mov
mov
fxam
mov
jle
xchg
fidivl
pushf
jle
in
lods
adc
xchg
sub
aas
fstpl
mov
mov
or
shlb
inc
cmc
xchg
xchg
aam
std
xor
sarl
pop
ret
movsl
or
mov
pop
adc
xchg
or
or
inc
jmp
jb
popf
shlb
xchg
lcall
shl
call
js
sub
pushf
ja
sti
cmp
adc
jb
arpl
jl
cs
adc
xor
pop
aad
repnz
cmpsb
sahf
rol
lahf
jo
lods
lea
sbb
or
mov
or
push
and
xchg
fcmove
adc
mov
pop
mov
addr16
shrl
ds
bound
filds
sbb
lods
mov
push
jbe
lret
fmulp
pop
push
cld
fists
out
mov
into
or
les
out
nop
push
inc
and
mov
jmp
dec
add
test
or
or
mov
mov
in
pop
cmp
pop
ljmp
jecxz
adc
lcall
xor
mov
loop
cs
test
les
repz
xlat
cmpsb
jnp
adc
add
pop
lret
arpl
jno
outsb
ss
mov
jbe
mov
fldt
xor
inc
nop
iret
mov
aas
sub
pop
mov
dec
sbb
mov
push
mov
in
iretw
inc
push
jl
push
sahf
mov
sbb
sbb
mov
nop
insb
in
shlb
negb
xchg
pop
lret
int
hlt
cmp
les
cli
int
mov
mov
xorl
inc
xchg
xchg
popa
xchg
sti
cmp
mov
cwtl
xor
push
subb
mov
in
cmp
adc
cmp
js
add
xor
nop
jp
mov
push
insl
out
push
mov
cltd
lret
aam
les
mov
aas
jmp
inc
mov
movsl
jnp
jns
dec
push
ja
and
add
dec
sbb
dec
fiadds
flds
adc
and
cltd
sbb
incl
adc
test
mov
push
add
jp
shll
pop
cmovnp
or
andb
or
mov
jle
adc
sub
stos
push
lods
out
add
add
sbb
std
and
sbb
outsl
sub
xchg
push
or
in
cs
cmp
cmp
sti
and
mov
dec
xchg
adc
fdivrp
dec
or
loop
jns
sbb
and
jns
popa
xor
imul
mov
sbb
xchg
push
daa
pusha
lret
push
sbb
xchg
mov
cld
sbb
cmp
push
push
sbb
mov
xor
push
repz
inc
xchg
xor
insb
sbb
repnz
pusha
mov
movsb
sbb
sbb
dec
lods
adc
cwtl
mov
int
or
adc
ss
or
sbb
adc
in
lods
sbb
cmpsb
notl
aad
mov
shlb
cmp
sahf
sbb
ret
mov
fs
jnp
jg
inc
decl
cld
mov
pusha
dec
fistps
sbb
sbb
jp
movsl
mov
and
ret
xchg
scas
not
sbbl
rclb
mov
popa
das
pop
and
and
in
ud2
gs
xchg
push
sbb
jno
cwtl
add
fs
mov
add
cld
jo
push
xchg
xchg
lock
or
les
mov
cmp
xchg
sbb
or
mov
sbb
fwait
or
jbe
mov
adc
fildll
xor
iret
jmp
or
imul
cmp
outsl
cltd
xlat
cmp
inc
out
sbb
cmpsl
jae
dec
gs
push
mov
xchg
add
pop
addl
ja
mov
mov
mov
lock
in
outsl
jg
push
jo
fcompl
xchg
rolb
nop
mov
adc
jp
shlb
addr16
inc
jmp
xor
pop
mov
pop
dec
jp
add
js
jge
cmp
flds
in
pop
pop
sub
mov
rcl
insb
std
lret
xchg
cwtl
add
mov
mov
lods
ror
cmp
sbb
cmc
jne
ljmp
sahf
call
sbb
pop
popa
lret
xchg
pop
mov
mov
mov
mov
cmp
xchg
ret
pop
dec
sub
stc
fdivl
sahf
mov
test
jp
xchg
cmp
pop
rcll
lods
loope
mov
mov
sub
vunpcklps
push
jne
mov
dec
cmp
lahf
mov
and
or
daa
xor
aaa
dec
mov
ret
jae
mov
dec
out
fs
adcb
cmp
xor
xor
push
sahf
cmp
lds
ljmp
gs
cmp
mov
jb
loopne
mov
movsb
mov
mov
or
add
popf
mov
adc
je
orl
mov
fisttpll
jbe
jb
icebp
pop
ds
xchg
lcall
sub
test
add
int
mulb
xor
cmp
outsl
cltd
pop
cs
bound
aas
std
es
push
adc
test
inc
hlt
dec
test
xor
arpl
mov
movsb
out
sarl
or
lock
mov
imul
mov
into
test
xorb
test
rcrb
jmp
jmp
adc
jp
std
sbb
mov
mov
jl
jg
sbb
jb
adc
pop
scas
push
xorb
fisubrl
pop
insl
cwtl
sbb
divb
jg
cli
or
adc
jnp
loope
div
bound
sbb
xor
cmpb
jl
scas
inc
and
cmp
sarl
in
fnstenv
or
adc
cmc
push
andb
push
sbb
sub
inc
sub
negb
repz
call
inc
inc
or
dec
pushl
addb
es
pop
mov
sbb
ljmp
pop
mov
test
add
mov
sub
loope
inc
mov
push
dec
sbb
cmp
adc
mov
test
adc
scas
xor
mov
sahf
pop
movsb
pop
loope
pop
in
jle
aam
sub
movl
jecxz
sub
dec
in
scas
es
mov
mov
sbb
pop
add
xor
or
into
mov
mov
cmp
mov
mov
cltd
stc
pop
and
push
xchg
mov
mov
cltd
inc
sbb
pop
shll
xchg
mov
cld
enter
incb
cmp
pop
xchg
pop
jecxz
xchg
loope
xor
pushf
add
sub
lea
rclb
or
mov
aam
and
mov
and
pop
inc
cmpsl
fisubrl
mov
pop
sti
fimuls
gs
shrb
dec
outsb
aam
or
jmp
cmp
mov
fs
dec
inc
add
jl
out
mov
aam
popf
int
shlb
andl
aad
push
leave
push
dec
and
mov
test
lods
cmp
mov
jbe
stos
lahf
shlb
pusha
ss
cmc
mov
jnp
cs
cmp
sub
negl
pop
scas
aam
aam
fistpll
test
insb
int3
cmp
mov
jnp
shll
and
fwait
jo
mov
int3
rorb
jg
mov
cld
push
ret
sarb
inc
mov
mov
adc
lahf
dec
mov
dec
leave
jb
pop
inc
push
stc
jecxz
sub
inc
jno
loopne
imul
bound
mov
xchg
mov
sbb
popf
mov
sub
int
icebp
mov
nop
nop
addb
xchg
cmpsb
out
sahf
xor
loop
sbb
cmp
jne
nop
divb
add
xor
pushf
cli
mov
into
sbb
pop
xor
push
dec
cmpsl
imul
repnz
popf
pop
nop
mov
sub
in
das
enter
xor
sub
jmp
fwait
xchg
mov
push
cmpsb
std
jnp
loope
cmpsl
cmp
or
and
cmp
push
mov
aaa
aam
addb
nop
inc
and
aaa
mov
xchg
lock
sub
daa
mov
dec
out
rol
addb
mov
fcompl
inc
jge
cmpsl
jecxz
adcb
clc
push
lods
or
xchg
mov
pop
sti
jmp
or
sti
and
add
add
cmp
adcb
mov
sub
push
mov
mov
sbb
call
js
data16
fnsave
cmp
dec
loope
bound
movsb
in
lock
adc
cmpsb
sbb
dec
dec
mov
cmc
repz
leave
cmp
scas
inc
movsb
cmp
mov
lahf
nop
fcomps
in
cltd
mov
fildl
push
daa
inc
bound
mov
xorl
adc
xchg
fists
das
and
push
pusha
cmp
cmpsb
xchg
fstpt
push
stos
xor
ds
pop
aad
cmpsl
pop
mov
shrb
sbb
fistpl
shll
lret
js
jmp
xor
xchg
xor
mov
push
or
mov
mov
push
and
or
dec
out
loop
inc
mov
das
cltd
or
scas
xchg
loop
pop
rorb
or
dec
repnz
data16
pop
add
mov
fldenv
out
adc
outsl
vorps
sbb
pushf
out
jg
aad
mov
sar
je
int3
mov
push
jmp
sub
pop
xlat
cmp
xchg
pushf
jecxz
movsb
sub
mov
std
clc
ror
xor
add
pop
or
add
xor
repnz
xlat
dec
das
or
pop
xchg
decl
mov
loopne
sbb
cmpsb
or
xor
or
sub
lock
and
call
fldt
out
dec
xlat
imul
das
rcrb
leave
pusha
mov
fldt
xchg
clc
xchg
int
add
shll
and
aam
mov
and
and
out
pop
inc
push
xrelease
mov
push
and
jle
or
outsb
adc
leave
mov
fbstp
add
fadds
dec
pop
shll
subb
hlt
sub
xchg
inc
xchg
xor
inc
and
or
outsb
loope
and
iret
fadds
xor
and
sub
mov
mov
push
test
jo
cli
add
or
xlat
mov
outsb
mov
and
stos
psrad
out
sbb
and
add
adc
jnp
into
out
rolb
sub
add
sbb
cmp
and
lcall
mov
das
adc
inc
mov
enter
xlat
and
mov
insl
cld
push
push
test
fiadds
hlt
dec
nop
imul
mov
mov
arpl
mov
cmp
and
popf
or
adc
mov
mov
stos
daa
lods
jg
stc
mov
mov
les
jge
add
ss
mov
pushf
out
and
nop
inc
rcr
jle
jg
mov
mov
fmuls
stc
cmp
or
jae
popf
jge
mov
in
fcomi
lahf
add
pop
cmp
inc
shr
out
jbe
outsl
or
dec
outsl
dec
or
leave
add
les
inc
or
cmp
ror
ss
adc
negl
jle
inc
cltd
ja
popf
adc
sarl
lahf
jp
filds
cmp
div
cs
movsb
add
add
or
cwtl
stc
xlat
mov
jg
scas
movsb
sub
push
mov
sub
call
jae
sbb
inc
mov
push
sub
sbb
dec
jbe
push
shll
jb
flds
xor
jecxz
repnz
fcmovne
and
push
cmpsb
or
notrack
push
mov
pop
pop
adc
and
sub
cs
fdivs
outsb
xlat
add
je
push
sub
push
lds
insb
sarb
xor
or
daa
outsl
test
test
ss
sub
xchg
call
mov
into
pop
imul
or
xor
jg
jb
popf
pop
mov
roll
adc
lock
hlt
inc
std
inc
pusha
pop
mov
add
jge
cli
mov
jbe
adc
jl
xchg
mov
push
sbb
mov
hlt
repnz
jecxz
test
flds
cli
cmp
sbb
popa
xchg
xor
push
ljmp
push
clc
adc
call
xor
add
or
jp
mov
cmpsl
jnp
or
test
pop
jge
icebp
adc
or
fldt
in
sub
loopne
call
int3
dec
out
xchg
nop
xor
xchg
fisttpl
jo
inc
sbb
jp
jae
or
arpl
movsb
sbb
fstpl
inc
push
dec
push
cmc
add
or
mov
cmpsb
out
cmp
out
adc
jns
adc
mov
in
push
and
lods
xchg
lods
inc
hlt
mov
adc
jmp
loopne
adc
ret
pop
or
jp
push
xchg
push
adcl
and
mov
ret
shlb
jbe
nop
icebp
mov
and
push
fcoms
mov
mulb
adc
cmp
jmp
xlat
cwtl
inc
fcoms
scas
mov
aam
jmp
pop
aas
sbbl
into
jp
jb
cmp
push
xorl
add
mov
leave
outsl
ret
les
call
loopne
jg
out
dec
jns
mov
fcomps
pushf
sbb
scas
xor
test
mov
test
cltd
test
je
mov
add
decb
sub
lock
aaa
in
and
xchg
and
sahf
xor
repz
xchg
sub
push
mov
add
vpcmpgtb
into
aad
jno
sahf
lret
xchg
dec
mov
push
or
aas
inc
mov
add
shrb
flds
jbe
movsl
jb
jae
mov
lcall
push
inc
mov
jecxz
mov
xor
sub
mov
out
and
pop
insl
enter
inc
addr16
outsb
mov
xchg
and
ja
mov
xor
cs
loope
mov
sub
or
xchg
lret
stos
jmp
jp
in
cmpsb
adc
pop
xor
out
pop
xchg
push
nop
inc
setg
jb
mov
int3
mov
or
mov
movsb
and
andb
push
test
insb
cs
cmpsl
lcall
pop
push
out
sbb
cwtl
cmp
ret
push
or
mov
push
popa
mov
jbe
aam
add
push
xchg
sbbb
cld
jns,pt
mov
mov
xchg
pushf
insb
insb
xor
mov
sub
add
xor
mov
orb
and
dec
enter
jp
lods
dec
or
jge
aad
xchg
sbb
bnd
enter
ret
adc
shlb
je
add
dec
js
dec
out
cmp
inc
arpl
rep
cltd
cmpsl
rorb
repz
jns
mov
std
in
add
mov
pop
pop
xor
dec
out
mov
movsl
dec
sarl
repnz
and
clc
pop
enter
mov
push
or
mov
dec
or
shll
bound
pop
or
adc
popa
mov
hlt
cmc
cmpsb
add
ds
lea
xchg
adc
push
sbb
sub
adc
jnp
cmpsb
xchg
and
jmp
jmp
push
sbb
push
shlb
mull
arpl
and
inc
pop
xlat
lret
sub
jae
xchg
insl
stc
sahf
mov
fcomps
mov
popf
lods
outsl
xor
jbe
test
in
int3
movsb
cmc
imul
adc
ljmp
aad
pop
mov
popf
mov
lods
outsl
lret
outsl
test
inc
nop
vmovsd
inc
xchg
adc
xor
cmp
mov
mov
push
out
xlat
mov
into
sti
fs
mov
aad
push
rclb
sub
sbb
xchg
push
push
sbb
les
xchg
test
fldcw
popa
mov
nop
addl
test
pop
popf
or
push
xor
mov
pop
or
movsb
aam
nop
pop
sub
fcoml
jnp
sbb
outsl
in
adc
stos
fdiv
mov
jg
dec
mov
loope
popf
lret
mov
mov
push
adc
fadd
jmp
fwait
sbb
lds
dec
pushf
test
and
bound
add
jl
mov
jecxz
rorb
mov
fcompl
pop
sub
push
cmp
nop
push
xchg
jnp
movsb
pop
pop
mov
dec
xchg
cs
adc
xor
leave
outsl
adc
outsl
js
iret
mov
rcrl
xor
cmp
jo
cmpl
jno
or
jge
inc
ss
lcall
mov
xor
stos
pop
pop
xor
dec
mov
dec
push
adc
cld
and
fldcw
add
cltd
fadd
das
pusha
stos
sbb
cmp
jmp
outsb
inc
lcall
nop
push
jae
ds
xchg
and
lock
gs
pop
xor
dec
enter
cltd
push
fstps
test
xor
cmp
fwait
pop
push
cli
sbb
loopne
jne
repz
add
sbb
jns
cmp
clc
test
popf
sahf
outsl
adc
cmp
lods
xchg
push
shrb
ret
test
nop
pop
and
pushf
cmp
mov
inc
leave
dec
ds
push
inc
stc
stos
sub
cmp
movsb
or
push
lcall
dec
cld
push
xchg
out
xchg
ljmp
push
inc
fidivl
dec
mov
iret
push
mov
fwait
jge
add
adc
xchg
pusha
data16
cltd
sub
jno
cmp
je
aam
movsb
pop
movsl
pop
insl
stos
xchg
test
dec
sub
in
mov
sub
cmp
shll
and
loope
enter
ljmp
int
rcrb
std
popf
and
inc
or
pop
lods
cmc
aas
or
movsb
sahf
dec
mov
fnstcw
mov
cs
stc
das
shll
lret
loop
notl
xor
shll
repnz
jmp
cmp
and
lock
lret
lsl
mov
daa
ret
jbe
and
or
xchg
lret
in
mov
or
pop
adc
ss
lret
not
mov
scas
movsb
push
loop
sbbl
add
ret
out
inc
xchg
sub
pop
lret
sub
test
mov
leave
stc
gs
js
pop
fwait
pop
sub
popf
in
outsb
icebp
or
loop
jbe
addl
and
jg
mov
or
mov
dec
mov
cmpsb
fistpl
pop
idivl
or
push
and
es
mov
or
into
xor
sbb
inc
and
pushf
fwait
adc
rcrb
seto
decb
fcmovb
or
std
pushf
sar
pcmpeqb
jmp
ficoml
sarl
cltd
aaa
movnti
jae
pop
xor
sub
iret
cmp
sahf
or
pushf
rorl
stc
jns
aam
mov
dec
sarl
xor
ret
pop
or
dec
jbe
cmp
dec
cmp
popa
pop
inc
pop
arpl
mov
push
xchg
stos
aam
cltd
pop
xor
movb
jg
in
add
sub
fcmovnb
test
jns
mov
pop
mov
pop
in
sbb
out
rol
imulb
and
lock
pop
sbb
stos
loop
sti
jg
inc
fwait
jo
sub
repnz
push
push
lock
inc
call
or
in
sub
cmpsb
mov
loop
cmp
fldenv
inc
icebp
push
adcb
xor
xlat
push
cwtl
insl
rorb
insl
mov
xchg
pop
rcrl
stc
in
shrb
shlb
lods
xor
sbb
or
inc
int
movsb
pop
jb
ds
ljmp
sub
jg
faddp
cmp
std
lods
enter
loopne
rcll
sub
incb
adc
jbe
inc
cmp
push
jno
sbb
inc
add
lea
call
sub
arpl
push
hlt
lea
push
xchg
jmp
test
mov
xchg
movsl
pop
mov
add
mov
iret
test
cmp
and
repz
loopne
jae
imul
jp
xor
inc
imul
add
sub
adcb
and
insl
cmpsl
cld
aad
xchg
mov
xchg
adc
stc
test
aad
sub
add
xchg
mov
add
push
adc
fisttpl
dec
andl
push
mov
jg
xlat
or
sarb
fsts
sti
jp
out
fdivl
mov
out
mov
xor
pop
cmp
mov
mov
incb
in
pop
push
ror
fwait
das
cmp
loope
jp
cli
cld
xchg
ficoml
mov
mov
scas
in
setp
and
sahf
mov
cli
repz
ret
cs
inc
sub
xchg
inc
add
test
in
lcall
inc
ja
hlt
jecxz
fimull
in
dec
push
jle
hlt
fnstsw
ret
xor
dec
sub
rorb
push
add
push
out
push
xlat
add
mov
jne,pt
or
bound
lea
call
add
lcall
js
outsb
mov
movsl
pushf
or
sub
xchg
incl
xchg
adc
fnstsw
mov
xchg
repnz
imull
iret
lds
sbb
call
or
out
mov
push
das
mov
sti
jae
mov
jp
stc
sub
mov
cli
adcl
iret
lret
cmc
mov
or
mov
icebp
adc
jle
imul
inc
popa
inc
sbb
pop
dec
mov
fiaddl
push
lods
jmp
test
rorb
test
dec
xor
in
pop
outsl
addb
jae
fbld
xor
cwtl
jo
in
inc
cmp
aam
push
jmp
ja
and
pop
daa
sub
clc
mov
test
stos
sub
inc
push
ret
mov
lcall
ret
mov
bnd
out
sbb
jmp
nop
in
pushf
cmp
jno
ret
inc
sub
sub
loop
xlat
aas
cld
mov
lds
jecxz
cli
fs
mov
jecxz
dec
mov
sub
lahf
mov
imul
cmp
sarb
adc
ja
jl
rcr
jb
push
mov
movsb
xlat
call
mov
fstpt
test
lret
push
insl
clc
inc
inc
test
lahf
fwait
jmp
in
xchg
cmp
adc
mov
sbb
xchg
fcomip
jnp
xor
mov
mov
push
mov
insl
lods
lds
aam
or
mov
pop
lods
lret
add
mov
scas
sub
cmp
lcall
or
pop
xchg
in
dec
enter
sahf
pop
lret
jg
in
inc
orl
dec
notb
sub
pop
adcb
jbe
mov
xor
push
fldl
out
ljmp
sbb
lcall
inc
cmp
inc
rcl
sub
shll
sti
loop
cmp
in
shrb
push
lahf
fdivrs
sbb
cmp
cltd
aam
mov
imul
fsts
push
leave
jae
out
js
jb
cltd
mov
fldt
adc
ja
add
push
aaa
pop
nop
inc
and
lret
jnp
aad
inc
push
jmp
push
xor
xchg
enter
cwtl
adc
pop
push
cltd
hlt
mov
nop
inc
stos
mov
pop
je
das
js
cli
xchg
inc
je
ret
push
enter
aaa
or
ficoml
lea
xchg
dec
imul
mov
in
push
inc
mov
cld
xor
imul
imul
sbb
sti
cmp
and
clc
xorb
scas
icebp
mov
je
daa
popa
out
mov
jnp
out
inc
rolb
stc
fnstsw
punpcklwd
ret
push
repnz
xor
xor
aas
cmp
lods
ljmp
jbe
mov
std
sahf
sbb
sub
pop
cmp
inc
fdivl
cmp
sbb
push
pusha
pop
mov
sbb
pushf
cmp
in
daa
repnz
mov
je,pn
cmp
sbb
lret
jmp
mov
mov
cltd
call
xchg
ljmp
int3
push
inc
mov
jecxz
lret
inc
cli
xchg
cmp
push
cmp
insl
idivb
dec
and
push
adc
rcrl
loopne
sub
call
repz
int3
push
sub
sub
jns
jecxz
sub
arpl
jo
aas
aam
movsb
jg
repz
jmp
mov
fwait
nop
sub
les
gs
mov
les
add
outsl
jl
add
push
sub
push
js
sub
pushf
pop
divb
inc
xchg
data16
pop
xor
mov
mov
add
fadd
jno
outsl
and
sub
xor
pop
mov
mov
ja
pop
cmp
adc
int3
pop
scas
push
aam
enter
repnz
adc
in
nop
ret
jmp
mov
dec
sarb
inc
mov
dec
gs
sub
mov
lahf
pop
or
test
decb
mov
jmp
dec
loop
add
pop
inc
rcrl
iret
insb
mov
inc
test
fcmovnbe
push
scas
repnz
ficoml
sbb
sbb
call
jl
cmp
cmp
inc
arpl
mov
push
out
nop
mov
jle
clc
xor
jmp
xor
mov
mov
adc
adc
testl
andb
rorb
jo
xchg
repz
mov
adc
std
lret
sti
jne
mov
test
ja
bound
push
das
dec
shl
jne
pop
jb
test
add
fstl
test
gs
push
lods
repnz
or
pop
pop
cwtl
sbb
cwtl
inc
mov
shrb
mov
or
push
ss
repnz
in
sub
ret
jle
nopl
dec
mov
imul
mov
out
inc
mov
call
dec
jp
clc
fwait
mov
cmp
sub
or
repz
add
data16
cmp
ficoml
inc
xor
mov
in
cmp
fcomi
icebp
mov
mov
scas
push
push
test
add
pop
test
mov
adc
call
je
inc
icebp
iret
jl
cmp
ret
mov
sti
xchg
xchg
adc
cmc
sbbl
jne
insb
inc
loope
pop
ja
inc
push
mov
sub
push
arpl
fcoml
xchg
das
mov
sbbb
out
xchg
push
mov
nop
aad
aam
ds
cmpl
adc
stc
ja
mov
inc
mov
jb
pop
test
test
cmp
bound
push
scas
movsb
fldt
sbb
cmp
das
andb
adcl
cwtl
push
cmpb
push
or
mov
popa
andl
add
stos
stos
adc
mov
data16
or
sub
aas
mov
cmpb
and
add
push
loop
inc
or
sub
xor
jb
loopne
xchg
loop
dec
push
fisubrl
and
call
sub
push
repz
int3
movsb
or
cwtl
inc
mov
movsl
jns
pop
inc
les
xchg
mov
sub
out
int
outsl
pusha
xchg
xor
inc
push
push
ljmp
loop
pop
mov
push
or
dec
pop
jns
dec
mov
xor
loop
int3
test
nop
sub
cmp
xlat
scas
aam
jl
les
add
out
loop
dec
int3
add
add
add
cmp
rcll
bound
lcall
and
repnz
jle
or
jns
adc
hlt
bswap
push
popa
clc
sub
pusha
jnp
cmp
test
inc
and
in
cmp
fs
cmpsl
jl
add
push
insl
jae
iret
pop
lea
bswap
enter
or
cmp
xchg
cld
fdiv
mov
pop
pusha
out
dec
sub
inc
or
jg
xchg
test
test
jne
add
rolb
stos
ficomps
push
repz
popa
ret
iret
pop
cld
loope
aad
sub
daa
xchg
or
push
arpl
pop
pop
xchg
hlt
and
shlb
sbb
in
or
stos
xor
adc
xchg
sbb
dec
test
mov
mov
sbb
sbbb
xchg
subl
mov
fs
lods
pushl
out
cmc
fidivl
cmc
mov
xchg
addr16
push
sbbb
fiaddl
xor
or
mov
fisttps
addl
push
mov
ss
xor
pop
mov
pusha
mov
bswap
pop
orb
mov
lcall
and
shll
loopne
lcall
cmp
icebp
mov
je
daa
std
xchg
sub
movl
and
sbb
xor
pop
pop
movsl
or
idivb
hlt
in
push
cmp
ror
rcrb
xor
sbb
insl
mov
leave
pusha
mov
jbe
lcall
xchg
rclb
ljmp
jne
mov
insl
dec
sbb
cmp
test
stos
sbb
dec
pop
call
push
ret
sbb
fnsave
and
mov
mov
in
les
mov
insl
shrl
mov
lahf
pop
xor
lret
pop
xor
popl
mov
xor
insl
data16
stos
mov
aam
mov
dec
stc
lods
movsb
jo
test
fidivrs
cmpsl
aas
out
rolb
iret
pop
sbb
loopne
pop
push
loopne
subb
lds
cmp
jg
daa
jbe
push
pop
or
push
sub
push
pop
jp
shlb
jne
jo
push
or
push
or
or
in
cvttps2pi
push
div
push
aam
push
insb
xor
nop
and
pusha
fsubrs
fs
outsb
scas
popf
cmpsb
lahf
dec
sub
and
hlt
cmpsb
repnz
adc
and
xchg
push
pop
push
out
jne
cmp
sbb
push
pop
cmp
cltd
loopne
mov
sub
addr16
sub
ficomps
lock
push
out
rcl
arpl
xchg
inc
rcll
clc
push
lret
push
insb
sub
dec
aad
push
mov
push
test
divb
dec
add
push
push
rcll
repnz
adc
movsl
mov
cmpl
fst
inc
lock
into
cs
jp
loop
imul
and
iret
xlat
shl
clc
mov
add
into
add
lea
adc
sbb
std
leave
inc
mov
out
push
aad
xchg
ja
clc
mov
ret
lcall
adc
sub
jmp
mov
stos
test
jl
push
jno
jmp
mov
mov
rorb
inc
test
lea
dec
lods
into
and
or
rclb
sti
adc
cmp
int3
sbb
jmp
xor
aaa
dec
ja
fucomip
int3
xchg
out
idivl
pop
inc
xchg
movsl
test
and
cwtl
repnz
clc
rcrb
testl
push
std
pusha
lret
xlat
adc
orl
dec
cltd
sub
inc
jbe
sti
in
jg
xor
push
fcmovnb
in
aad
icebp
imul
int3
leave
test
adc
jge
add
push
iret
call
mov
negb
fiaddl
adc
lods
pop
inc
les
mov
jae
mov
jl
cmp
or
jle
dec
jmp
roll
mov
sub
mov
push
xchg
xchg
fs
stos
add
xchg
adc
es
sahf
mov
pop
notl
mov
cmp
xchg
xchg
lret
inc
cmp
movsl
inc
test
add
adc
add
sub
pop
jne
xchg
pop
arpl
fcmovu
lret
andb
out
sub
rorb
out
inc
add
mov
call
mov
inc
dec
int3
or
jne
pop
lds
mov
jno
out
outsl
push
add
inc
pop
in
call
push
and
sbb
mov
adc
inc
push
push
sub
mov
sub
or
cmpsb
jne
mov
dec
stc
push
div
mov
or
mov
add
stc
and
loope
js
xor
mov
out
jb
in
outsl
clc
insl
xchg
xor
mov
jp
addl
jno
es
push
lods
xor
fsubs
xor
subb
push
dec
ret
sub
push
fwait
pusha
pop
cmp
lock
dec
into
mov
and
cs
mov
fwait
incl
pop
ds
adc
je
dec
shlb
inc
mov
jge
aad
adcl
xchg
inc
jbe
jbe
shlb
and
push
mov
pop
and
mov
or
cmp
mov
pop
push
imul
adc
mov
or
mov
cmp
add
aad
test
scas
mov
sbb
xchg
inc
loope
jae
shrl
pop
xor
out
cmp
fcompl
popf
hlt
mov
ja
mov
into
or
push
orb
jp
sub
push
clc
jb
aam
cmp
ljmp
mov
jno
cmp
dec
xchg
xchg
sub
xchg
in
jle
cltd
lock
shl
xchg
imul
cmp
lods
cmp
add
push
nop
cmc
pop
fmull
xor
out
subl
pop
mov
stc
rcrl
inc
xchg
cld
jmp
nop
or
rclb
mov
insb
cwtl
push
inc
stos
pusha
and
mov
popf
sbb
in
icebp
jge
mov
and
push
imul
fs
pop
fwait
mov
cli
adc
pusha
cmp
fidivl
into
xor
jo
orl
pop
lahf
and
mov
xchg
dec
in
dec
call
data16
outsb
fidivrl
subl
movsb
pop
movl
mov
push
cmpsb
pushf
inc
in
pushf
adc
in
xchg
xchg
leave
mov
imul
rcrl
lock
dec
push
dec
gs
cmp
and
push
arpl
mov
mov
inc
lock
dec
and
movsb
pop
int
iret
sahf
in
fwait
jbe
ja
dec
imul
call
lret
xor
call
gs
adc
cmp
sub
scas
jnp
jl
imul
les
lcall
jmp
js
dec
into
xchg
jmp
jle
addr16
lods
idiv
fsts
pop
popa
inc
mov
lret
jmp
mov
cwtl
sub
inc
adc
and
leave
mov
imul
ds
adc
arpl
imul
push
mov
out
push
sbb
pushf
cmp
jne
adc
add
test
repz
sub
out
sub
dec
fstl
inc
xor
mov
mov
jmp
vsubsd
inc
sub
adc
cmpb
mov
hlt
xchg
mov
xchg
gs
gs
sbb
int
add
and
cmp
pop
and
ds
or
mov
cmp
xor
lods
movsb
sahf
xchg
xor
in
cmp
repz
pop
push
test
mov
mov
xor
cwtl
inc
das
jne
jmp
mov
jne
lods
cmpsl
xchg
xchg
dec
dec
xor
popa
jmp
cwtl
xchg
push
mov
inc
shlb
stos
icebp
sub
pop
mov
mov
outsl
sbb
jo
mov
pop
adc
daa
mov
cmp
in
jmp
or
push
pop
fimuls
inc
push
out
mov
jae
cmp
dec
mov
jl
xor
xchg
add
ljmp
hlt
sbb
mov
push
push
sub
test
mov
jnp
push
enter
ret
jge
shlb
dec
xor
neg
bound
ljmp
add
push
cmp
mov
xchg
mov
les
negb
sub
out
push
xchg
push
dec
sub
subb
sbb
loopne
mov
out
xor
insb
mov
pusha
sbb
js
and
xlat
clc
adc
repz
int3
xorl
out
or
std
pusha
cli
fisttpl
test
xor
sti
into
shll
ror
push
or
dec
fwait
aaa
adc
testl
cmp
xlat
gs
xor
sarl
mov
loop
and
push
jle
add
sbb
inc
add
out
jl
jnp
movsb
fstpl
imull
xchg
shlb
lods
hlt
aas
sbbb
jb
inc
ret
loop
cmpxchg
pop
mov
push
les
pop
mov
sbb
jne
xchg
dec
test
xor
pop
dec
or
adc
insl
sbb
adc
sub
sub
adc
mov
hlt
xchg
inc
mov
cmpsb
and
mov
inc
loopne
bound
xchg
xchg
mov
mov
add
imul
adc
movsl
add
test
out
sbb
sub
dec
imul
jmp
adc
xchg
cmpsl
nop
or
pusha
imul
mov
mov
adc
ja
enter
pop
rcll
xlat
iret
cmp
mov
push
dec
out
add
jmp
pop
in
jnp
mov
xchg
cmp
jmp
and
in
popa
cltd
jb
leave
add
mov
xor
js
out
scas
pop
pop
mov
push
sbb
clc
test
std
xor
xor
xchg
stos
dec
std
mov
jnp
fimuls
punpckldq
mov
lds
enter
das
repz
aad
arpl
addr16
gs
out
jno
int3
inc
and
pop
mov
cmpsl
inc
push
and
xchg
fidivrs
adc
aad
inc
pop
mov
mov
cmpsb
loop
sub
push
es
mov
lds
adc
bound
inc
lahf
dec
mov
mov
addr16
daa
mov
fldenv
rolb
sub
movsb
insb
enter
fistpll
pop
ror
es
adc
jmp
aaa
popa
xlat
dec
or
nop
std
pop
mov
cmpsb
inc
lods
or
and
lret
dec
pusha
cmpsl
inc
mov
mov
orl
dec
xor
xchg
inc
jns
aam
movsb
sbb
lahf
gs
push
loope
push
aad
mov
arpl
jae
jbe
pop
jbe
cmp
scas
mov
xchg
xor
cmpl
test
xchg
stc
sti
lock
popl
lods
mov
rcll
js
insl
mov
fucomp
cmp
xchg
iret
scas
not
jecxz
cwtl
addl
scas
out
or
imul
and
loop
jne
push
jns
gs
aad
push
test
scas
inc
mov
sub
adc
mov
daa
adc
lret
das
insb
jns
aaa
hlt
stos
js
adc
or
adc
mov
ss
iret
or
adc
sbb
jmp
pop
notb
jle
ret
push
cmp
dec
pop
leave
add
mov
imul
xchg
lret
and
and
lret
pop
or
jp
jno
xor
or
mov
adc
lods
xor
adc
aaa
fisubl
cmp
xor
jbe
fwait
mov
and
mov
dec
into
hlt
push
rcl
inc
sbb
and
xor
adc
mov
push
jmp
ds
pushf
sbb
andb
push
jns
mov
xor
sub
stc
cld
popa
jbe
fucomip
push
iret
xor
fwait
pop
call
add
sub
mov
dec
xchg
pop
call
scas
add
xlat
jl
ja
ljmp
pop
gs
mov
icebp
xor
add
stc
jl
testl
pop
dec
arpl
out
cltd
xchg
or
mov
mov
cltd
addl
pop
adc
int
pop
cmp
punpckhbw
fmul
jmp
outsb
mov
mov
aaa
mov
stos
pop
pop
pop
mov
mov
imul
cmp
mov
clc
lret
je
add
outsb
movsb
ret
nop
into
rcrb
js
xchg
or
xor
sbb
imul
xor
push
lret
mov
mov
dec
xor
jbe,pt
sti
daa
lret
dec
js
adc
je
popf
pop
ret
or
std
ret
sub
imul
ljmp
loopne
nop
push
mov
jle
push
and
add
sarb
pop
fs
push
jb
leave
mov
sub
jbe
shrl
add
pushf
mov
jecxz
cmp
adc
add
pop
adc
out
mov
jb
adc
sbb
outsb
xor
xchg
dec
mov
add
lret
aas
scas
push
inc
insl
repz
add
fldt
jmp
xlat
mov
out
sbbl
lock
push
sbb
adc
xchg
xor
lods
jge
insl
cltd
push
push
stc
sub
push
cmp
jmp
mov
cmc
add
lcall
sbb
jns
lahf
cmp
in
jp
mov
cld
jge
scas
test
mov
subb
or
sbb
out
jmp
mov
sub
mov
loop
loopne
sbb
adc
fisttps
mov
lods
sbb
pop
in
push
adcb
mov
hlt
test
adc
dec
cltd
lods
shll
leave
pop
insl
or
xchg
adc
or
cli
stos
sub
inc
inc
mov
add
push
popa
dec
dec
sti
adc
xchg
scas
mov
mov
pop
call
insb
inc
jbe
push
fildl
shlb
xchg
cmc
pop
fistl
sbb
int
imul
xchg
jbe
outsl
addr16
sahf
in
popf
pop
jecxz
cld
into
mov
jno
push
leave
ds
inc
iret
fs
imul
mov
out
dec
cmp
pop
jg
mov
lods
mov
add
cmp
gs
sti
push
jne
arpl
jle
cli
cmp
int
mov
rcrl
sahf
cmc
js
mov
and
mov
fisttps
or
cmpsl
xor
adc
push
int3
push
mov
adcl
adc
xchg
out
je
push
sbb
cmpsb
add
jle
or
aam
fdivrp
xchg
hlt
lret
les
sub
and
std
cmpl
mov
mov
mov
mov
sbb
adc
shll
daa
jnp
pop
fstp
fldenv
jecxz
cmp
outsb
pop
or
xchg
into
ja
jl
and
jle
sub
movsl
scas
aaa
mov
jno
je
cmp
sub
pop
popf
inc
pop
jnp
mov
call
loopne
ja
add
out
pop
out
cmpsb
aaa
jo
sbb
or
or
push
dec
jecxz
xchg
shlb
roll
shl
fsts
sbb
inc
dec
lds
frstor
cmc
jns
cmp
pop
inc
sub
lea
mov
mov
loop
or
sbb
mov
rclb
lods
xchg
paddd
jb
out
xchg
stc
int3
lret
in
daa
enter
sar
mov
pop
rol
enter
cwtl
or
lahf
pop
ljmp
dec
inc
mov
mov
mov
cmp
mov
inc
xlat
loope
call
add
aam
add
jbe
push
aad
dec
scas
out
adc
push
std
and
bound
ret
int3
add
cmpsl
and
pop
roll
mov
xchg
cmp
das
pop
add
or
jnp
mov
xchg
or
jo
shl
popf
dec
ret
in
roll
adc
mov
cmp
andl
adcb
data16
subl
mov
fst
stos
adc
das
push
jae
adc
xor
mov
aaa
xchg
dec
ss
xchg
push
pop
mov
sbb
push
pop
dec
mov
ret
jle
andb
lcall
and
push
sbb
push
mov
and
xchg
cs
loope
test
sub
testl
outsl
cmp
pop
xlat
in
out
xchg
adc
jmp
mov
push
stos
mov
repnz
outsl
jno
pop
enter
mov
add
dec
shlb
pop
jl
popa
pop
lahf
xor
mov
test
pop
or
ret
sub
in
dec
mov
insl
adc
les
mov
sbb
dec
insb
in
scas
mov
mov
call
dec
and
xorb
mov
cmp
add
dec
jne
mov
subl
xor
cs
jo,pn
adc
scas
clc
jnp
jnp
cmp
push
dec
or
aam
inc
test
fstp
jns
sbb
sub
and
pop
cmpsb
rcrb
or
cmp
jae
nop
mov
adc
xor
sbb
jp
std
imul
sbb
inc
mov
push
mov
xchg
push
test
inc
test
ljmp
jecxz
mov
aas
sbb
xchg
sbb
cltd
scas
jl
mul
sbbl
xlat
rclb
lds
push
xchg
popf
testl
sbb
push
inc
inc
hlt
repz
mov
add
cli
jne
std
push
fildll
lock
add
jge
daa
arpl
aam
adc
and
adc
mov
add
push
dec
loop
and
les
mov
adc
jns
aas
ljmp
popa
sub
outsl
js
or
sbb
or
sbb
mov
cs
adc
push
stc
test
cli
test
jle
out
popf
call
mov
pop
push
add
ja
dec
lret
rorl
inc
push
xlat
sub
and
mov
lods
lds
cmp
rcrb
dec
lret
into
jl
xor
dec
sbb
cli
adc
jae
adc
into
xchg
fildll
and
sub
shrl
frstor
fstpt
mov
dec
sbb
movsl
dec
jmp
sbb
outsl
mov
scas
outsb
lods
sub
dec
jge
inc
es
cmp
cltd
xchg
pushf
outsw
mov
fnstcw
sbb
and
inc
imul
mov
xchg
xchg
or
push
xor
push
sub
outsl
mov
ja
pop
shlb
jbe
or
jb
mov
int3
les
xchg
dec
mov
loope
orb
mov
xchg
mov
imul
push
movsl
out
idivb
mov
das
jnp
imul
sub
push
mov
and
sbb
cli
test
outsl
cwtl
jl
or
lea
pop
testl
fsubrs
cmp
adc
lods
add
mov
pop
or
lret
jae
mov
enter
pop
jg
jmp
into
imul
sbb
rolb
pop
ss
inc
jge
xchg
ds
test
push
or
outsb
mov
or
mov
jle
push
cmp
lcall
scas
cmpl
mov
or
ljmp
into
loopne
mov
jg
scas
mov
aas
pushw
inc
inc
int3
inc
mov
push
and
pop
dec
inc
rcr
cmpsb
ljmp
test
sti
outsl
repnz
push
dec
jnp
in
bound
lcall
rcrb
daa
icebp
hlt
jb
cmc
pop
xchg
pop
mov
out
xlat
lods
outsb
xor
roll
fildll
rcl
cmp
mov
adcb
xchg
jns
mov
inc
and
js
mov
ljmp
add
int
xchg
ja
push
negl
mov
out
inc
mov
lods
sbb
dec
mov
pushl
xorb
addr16
cmp
pop
mov
nop
or
lods
jo
jge
in
dec
jno
mov
hlt
xchg
hlt
scas
push
fs
mov
enter
data16
sbb
jecxz
mov
dec
mov
pop
xor
inc
call
jecxz
mov
jb
pop
out
lret
shll
cli
lods
xlat
std
dec
aam
cmpsb
fwait
push
push
aaa
int
add
gs
movsl
xor
jmp
push
hlt
dec
decl
out
push
jl
and
push
xchg
es
xlat
leave
test
nop
push
add
jo
add
iret
push
sarb
push
jns
pop
sub
test
adc
aas
xchg
jo
sbb
and
cmp
add
nop
dec
test
pop
add
push
xchg
cmp
test
shll
lret
mov
iret
hlt
testl
flds
jl
or
pop
push
sbb
sbb
adc
mov
lret
arpl
dec
fs
xchg
push
mov
inc
mov
xor
push
pop
mov
cmp
mov
pop
and
add
xor
xlat
dec
pusha
loop
or
fmul
insb
mov
fdivrs
adc
loope
aad
imul
add
outsb
mov
mov
pop
adc
outsl
mov
leave
push
inc
lock
dec
imul
sarl
adc
push
imul
xchg
add
imul
mov
fnstsw
test
pop
pop
mov
xchg
outsl
and
cmc
add
sub
xchg
xchg
pop
inc
push
or
xchg
movsl
push
pop
adc
in
sub
fwait
mov
enter
or
add
clc
or
push
mov
data16
je
inc
xor
dec
lret
xor
sbb
xor
ja
push
stos
call
sub
in
sbb
sbb
aaa
push
pop
leave
aad
jmp
sbb
cs
sbb
test
mov
push
ficoml
nop
mov
imul
cmp
adc
dec
mov
or
xchg
dec
mov
lds
ljmp
xchg
imul
mov
shlb
mov
ss
mov
inc
enter
mov
sbb
jge
jo
pop
adc
fdiv
imul
mov
fdivr
lret
add
mov
adc
and
fstps
shl
inc
xchg
push
aam
mov
add
mov
mov
xchg
push
gs
xor
notb
pop
mov
dec
push
test
cwtl
nop
dec
pop
pop
sbb
insb
cmp
stc
mov
jnp
pop
fidivrl
stos
out
lods
mov
addl
subb
insl
mov
sbb
inc
stos
stc
jmp
pop
dec
xor
scas
dec
stc
xor
push
or
dec
mov
stc
mov
icebp
add
lret
mov
adc
fsubl
leave
cmp
jge
das
jae
das
rcr
or
sub
out
mov
add
sbb
sarb
enter
stos
xchg
adcb
movsb
lret
adc
sub
je
loopne
mov
jge
movsb
dec
sub
scas
mov
inc
insl
clc
repnz
sbb
das
sbb
xchg
movsl
push
xor
inc
ficoml
xlat
cld
and
push
xchg
mov
or
mov
inc
pop
stos
adc
lock
nop
cmp
mov
sub
add
dec
movsl
and
adc
or
xor
ret
add
push
push
cmpsb
adc
push
ret
popf
mov
jns
cmp
pop
shl
incl
lods
popa
jno
ja
daa
fldt
addl
out
mov
ret
mov
clc
pop
cmp
push
imul
mov
dec
roll
jp
sti
stos
xchg
adc
mov
stos
repnz
cmpsl
cltd
stc
sbb
test
gs
in
cli
push
std
adc
insl
xchg
enter
fstl
fiaddl
pop
jl
iret
aad
sti
xor
nop
fld
pusha
adcl
fdivs
lds
jb
cwtl
sahf
stos
push
jno
out
mov
adc
mov
dec
ret
pop
lcall
push
pop
dec
into
pushf
jge
pusha
lret
out
enter
scas
outsl
loop
sub
mov
lret
cmc
aam
pushf
int3
mov
cmp
pop
sbb
pushf
or
testl
pop
fisttpll
or
sub
stos
inc
cmp
stos
mov
sbb
dec
popa
jle
and
mov
xlat
xor
dec
jo
sub
sbbb
adc
stos
loop
dec
adc
lods
push
or
lahf
mov
mov
outsl
mov
jns
jecxz
xor
or
add
or
cmc
inc
inc
sub
jbe
inc
ret
mov
sub
cmp
inc
xor
lahf
jp
insl
or
out
mov
jbe
push
xchg
ja
jne
sub
pop
add
shrb
lret
xor
pusha
aas
mov
mov
mov
int
mov
arpl
test
jns
jne
add
xor
add
icebp
cmp
adc
cmp
out
ljmp
insl
int3
inc
lret
push
dec
aas
testb
dec
xchg
loope
clc
or
xchg
xchg
and
xchg
jmp
xlat
enter
jae
rolb
rolb
stos
shll
lahf
jnp
inc
push
cmp
les
inc
jb
or
idivl
cli
dec
pushf
dec
dec
dec
sbb
xchg
aaa
push
cmp
test
imul
xor
arpl
adc
fdivr
sti
inc
ds
inc
mov
orb
mov
in
sti
xchg
test
lods
clc
mov
jb
arpl
out
push
sub
mov
pusha
mov
cmova
notb
movsb
dec
pop
or
xchg
sbb
and
ret
push
mov
int
stc
ret
inc
shll
je
lods
loope
sub
lret
push
add
stos
sub
inc
lret
out
insl
pop
or
clc
mov
das
test
aam
cltd
adc
mov
dec
push
jb
loopne
stc
xor
fstcw
lret
call
or
out
sti
jge
push
loopne
pushf
xlat
ljmp
cmpsb
mov
cmp
cmc
dec
fldt
test
cltd
ljmp
test
pop
punpckhdq
adc
jp
inc
repnz
push
cmpb
push
jne
pop
push
xor
add
sub
jg
movsl
mov
in
aam
jne
jne
or
adc
add
dec
xor
sub
and
add
arpl
fs
insl
out
test
xchg
xor
add
xor
daa
mov
lcall
mov
add
and
mov
fmulp
sub
push
add
mov
add
sub
in
je
xor
jbe
jl
add
xchg
xor
push
cmc
lret
arpl
xchg
inc
mov
mov
popf
jmp
sub
cmp
divl
pop
outsb
and
push
mov
repnz
cmp
mov
and
pop
jbe
inc
sti
int
arpl
das
jp
jg
mov
cmp
punpckhwd
mov
rolb
lods
repnz
sub
mov
push
repnz
jo
xchg
pop
mov
lcall
and
dec
inc
and
nop
out
in
mov
pop
cld
iret
in
pop
adc
jecxz
cmp
mov
inc
jb
jne
sbb
cmp
ss
push
push
push
es
adc
cwtl
dec
subb
bound
xor
popa
pop
mov
cs
sub
or
ja
pop
imul
jno
cmp
add
enter
lea
fwait
leave
mov
scas
ja
cltd
insl
or
and
das
sub
repz
sub
ret
xchg
pop
xchg
lds
pop
pushf
in
push
jle
ss
cmc
pop
jbe
pop
mov
push
jne
cwtl
adc
adc
inc
repnz
aad
out
aad
inc
xor
jbe
lret
mov
mov
lret
aam
jo
cmp
dec
inc
or
fstps
xlat
mov
insl
or
xor
inc
das
loop
add
pop
out
mull
out
mov
pop
xor
cs
sub
cmp
mov
push
and
sub
add
imul
jae
ljmp
es
cmp
jg
jmp
pop
dec
loope
jns
pop
push
sahf
les
stos
test
shll
or
aas
and
test
fstpt
xor
or
int
push
push
cmpsl
jp
mov
xchg
out
xor
mov
or
in
movsl
jns
in
jmp
out
sub
clc
xor
sti
and
pop
jecxz
mov
imul
out
sub
mov
ljmp
in
sbb
sub
les
inc
call
sar
fsubrl
loop
add
fwait
imul
out
ja
push
mov
pop
out
and
mov
sbb
leave
repz
roll
jl
and
test
xchg
inc
ljmp
fisubl
incl
dec
mov
push
insl
ja
add
cld
out
xchg
out
pop
out
push
cmp
lahf
loopne
or
xor
mov
cmp
loopne
in
mov
jo
pop
pop
pop
sbb
pop
or
addr16
push
jno
push
cmpsl
scas
scas
pusha
mov
jl
xor
roll
out
out
mov
int3
push
push
and
fidivl
daa
mov
shrl
add
in
push
inc
iret
dec
or
sub
lret
jb
aad
shrl
or
xor
iret
iret
sarb
xchg
test
movsb
aad
dec
popf
mov
scas
in
push
dec
test
jmp
jp
fs
mov
imul
jg
dec
and
pop
invd
pop
out
mov
popa
sbb
out
in
jne
ljmp
stc
repnz
xlat
test
lret
adc
aad
jns
ljmp
and
cs
in
pop
lods
xorl
in
fstpl
les
sbb
call
stc
aam
imul
pop
pop
aaa
call
int3
adcl
cmp
mov
pop
mov
jnp
clc
inc
rcl
pop
loop
mov
pop
push
push
lret
inc
iret
std
testb
jns
xor
mov
loope
ret
pop
dec
or
or
inc
dec
pop
mov
adc
and
inc
jno
cmc
lods
sbb
fildl
inc
sub
mov
iret
cmpsl
popa
jecxz
mov
pop
jno
jne
std
mov
pop
xor
test
stos
jae,pn
arpl
sub
scas
push
mov
repz
dec
add
sub
sbb
mov
or
jmp
insw
adcb
out
adc
enter
mov
fbstp
ja
add
sarb
pop
xor
sub
out
aas
sbb
addl
push
ss
popa
adc
xor
mov
cs
and
jae
rcrl
and
jo
cmp
cmp
std
xor
or
aaa
sbb
bound
stos
loope
cmp
inc
mov
mov
lretw
push
mov
push
fs
ret
mov
dec
and
and
xchg
and
sti
xchg
inc
fstpl
in
imul
mov
repnz
push
mov
and
jl
or
xor
clc
addr16
lock
int3
and
fiadds
xchg
or
cmp
loop
clc
mov
or
add
dec
bound
cld
push
out
mov
sahf
and
push
jns
lcall
pop
imul
sbb
rol
and
std
push
mov
inc
push
scas
dec
neg
mov
push
out
pushf
xchg
xor
gs
mov
jg
mov
ss
fs
mulps
mov
insl
xor
les
add
inc
leave
mov
cmp
dec
or
and
mov
inc
mov
rcrl
in
lcall
pop
lock
mov
jns
mov
sub
sbb
jle
pop
lret
mov
mov
stos
fistps
ja
jle
and
inc
andl
mov
xor
dec
xchg
pop
jmp
dec
lock
nop
imul
jge
and
add
fisttps
rcll
gs
or
rclb
rorl
or
sub
jp
inc
insb
lods
decb
mov
cmp
mov
cmp
and
pop
fldt
mov
and
fwait
scas
out
dec
jge
sub
sub
stos
imul
lods
cli
adc
iret
mov
add
shll
push
sbb
icebp
push
inc
rdpmc
inc
stc
cltd
das
rcrb
fwait
add
imul
fstpl
dec
push
repz
pop
push
dec
hlt
jno
into
mov
insl
push
in
in
andb
jbe
mov
dec
or
dec
popf
jl
adc
js
sub
aas
lock
aad
cmp
fdivs
je
pop
mov
jmp
push
hlt
cmpsl
xchg
mov
in
std
sub
imul
or
cs
lret
aam
cld
test
cmp
or
mov
add
lds
xor
add
mov
je
loopne
mov
shrl
mov
mov
push
mov
push
sahf
dec
push
cmp
leave
jb
mov
scas
sti
mov
popa
repz
loopne
ja
pop
ret
lret
mov
inc
cmpsb
js
lret
inc
dec
jg
sbb
jge
mov
clc
dec
mov
jo
lret
xchg
fs
inc
jle
test
rolb
imul
pop
mov
cmp
jne
xor
aas
pop
xchg
pushf
cli
sub
cmp
push
repnz
fistl
sub
arpl
addl
fildll
cmc
adc
imul
xorb
mov
mov
push
fs
mov
loop
shlb
cli
and
mov
daa
in
std
mov
and
cld
addl
or
in
jae
movsb
fidivs
leave
lds
and
popa
adc
pushf
in
loop
out
mov
js
xor
dec
adc
shlb
int
movsl
sbb
stos
hlt
aad
sbb
adc
lcall
iret
or
cmpsl
cs
fistps
aas
jns
add
dec
mov
addl
stos
dec
mov
fsubrl
add
lods
add
sbb
incb
popf
out
cltd
sub
dec
push
sti
icebp
mov
lcall
inc
pop
imul
ljmp
push
loopne
sti
jg
adc
sbb
mov
je
loope
jg
js
test
xor
sbb
lods
xor
mov
movb
sub
xchg
adc
xor
pushf
push
add
scas
out
mov
mov
pop
sbb
or
enter
lea
push
fisubrl
inc
jmp
and
push
mov
andps
cwtl
cmp
imul
loopne
in
stos
inc
dec
jecxz
adc
jo
mov
popf
add
fadds
mov
stc
and
xchg
leave
inc
fmulp
add
jae
inc
rorl
or
sti
jne
add
outsl
ds
imul
xor
mov
and
in
sar
or
insb
fnstsw
xchg
xor
hlt
xchg
subb
scas
mov
push
int3
ret
jo,pn
mov
pushf
test
scas
sbb
ljmp
xor
clc
fldt
repnz
jmp
xchg
inc
outsb
enter
adc
hlt
mov
repnz
sub
ret
mov
add
mov
lods
bound
or
mov
sbb
int
in
test
in
aaa
xchg
jl
adc
in
in
xor
mov
lods
jp
pop
adc
lds
pushf
xor
das
sahf
mov
hlt
sbb
mov
inc
in
movsl
popa
cmp
scas
push
pusha
push
mov
jnp
rclb
lcall
xchg
cmc
aas
inc
push
adc
fisubs
repz
mov
push
and
pop
adc
dec
jno
cld
rcrl
stc
push
cmp
sub
std
pop
or
sub
imul
in
pop
xorb
loopne
mov
pusha
pop
in
xor
daa
into
jecxz
mov
push
or
pop
mov
mov
insb
sub
ds
jp
lahf
add
shll
add
int3
sub
jnp
mov
push
fildll
jae
mov
mov
sbb
mov
inc
mov
sbb
cmpsl
inc
xor
mov
add
std
fdivrs
mov
das
in
push
jne
or
cltd
xlat
lods
xor
out
test
adc
push
loopne
mov
push
jnp
fidivs
sbb
mov
add
adc
mov
bnd
adc
add
rcll
cmp
in
aas
mov
rolb
xchg
xchg
lret
test
sarb
lahf
mov
dec
xor
fwait
icebp
daa
or
mov
xchg
insb
andl
add
test
stc
adc
nop
aad
loop
xchg
or
inc
aas
pusha
rclb
sbb
mov
mov
push
sbb
jo
lcall
test
fbld
mov
testb
repnz
fdiv
pop
fdivr
fdivs
dec
push
rorl
cmpsl
xchg
add
dec
insb
adc
bound
aas
mov
push
in
mov
cmp
xor
andb
scas
sub
pop
push
fidivrl
jge
sbbb
cmp
push
mov
jnp
cmc
xor
push
mov
inc
nop
pusha
dec
mov
adc
push
test
inc
xchg
adc
xchg
lods
and
dec
xchg
scas
and
lea
leave
or
mov
push
fmul
push
push
mov
or
or
sbb
dec
or
xchg
out
addl
adc
fists
and
xchg
jecxz
idiv
sub
cmovg
or
int3
lods
fsubs
jnp
outsb
lods
inc
inc
aam
jp
mov
sbb
repnz
pop
cmpsb
bound
pop
pop
les
xchg
inc
outsb
lret
push
jb
mov
shlb
mov
jnp
nop
push
js
inc
dec
movsb
mov
xor
testb
popf
mov
mov
mov
jo
cmp
js
push
in
mov
fildll
mov
dec
ret
addr16
jmp
cwtl
pop
out
negl
xchg
stos
data16
addb
loope
pop
aam
pop
sub
add
pushf
xorb
call
inc
sbb
ljmp
push
call
ficoms
push
adc
jecxz
mov
mul
mov
arpl
push
dec
shll
ds
jno
and
inc
push
ficoml
add
pop
mov
dec
loop
inc
inc
loopne
call
sub
xor
ror
loopne
mov
xchg
cmpsl
stc
mul
mov
adc
shrb
sarl
cmp
mov
in
dec
mov
fisttps
sub
bound
in
inc
cmpsl
and
cmp
ja
inc
jne
xor
je
jae
pop
and
stc
add
mov
scas
adc
sbb
std
popa
pop
dec
mov
dec
inc
push
scas
and
adc
mov
lahf
out
inc
dec
sbb
rorb
lods
shll
out
inc
pusha
pop
repz
pop
push
fisubrs
aad
pop
stos
add
iret
inc
js
dec
mov
sbb
std
jnp
jle
in
rcrl
pop
cmc
scas
test
or
sbb
mov
mov
xor
xor
aam
jb
sub
pop
and
xchg
ja
aad
sahf
jns
mov
lods
jno
jmp
xchg
push
pop
repz
out
test
loop
std
cmpsl
cld
das
lret
out
fildl
mov
mov
push
fstpl
test
popa
std
shlb
adc
ds
xchg
add
dec
loop
or
push
rcrl
add
imul
dec
mov
adc
pop
mov
ljmp
je
mov
cmp
insl
xchg
add
pop
xor
xchg
and
sub
out
xor
jecxz
mov
mov
mov
scas
xchg
inc
fidivrs
rol
and
dec
inc
mov
xchg
or
cli
and
mov
xor
jecxz
lret
cmpsb
sub
dec
jae
shll
std
sbb
je
cs
aas
push
ret
and
xor
or
popa
out
fiadds
mov
lea
ret
je
push
mov
and
pop
pop
mov
es
cmp
sub
hlt
sbb
fildll
mov
xchg
lret
add
cld
pop
daa
fidivrs
repz
sbb
mov
lret
push
cmp
xor
mov
xor
xor
sbb
push
call
imul
movsb
jmp
push
ret
mov
addr16
push
mov
jno
cld
xchg
mov
lea
shll
fnsave
les
pop
sbb
sub
fsubl
call
sub
stos
mov
push
mov
push
lock
or
mov
mov
andl
movsb
mov
dec
bnd
adc
and
mov
jno
mov
inc
cld
stos
fucomi
in
cmp
cwtl
adc
stc
pop
lods
inc
sti
sarl
xchg
and
xlat
xor
push
mov
jp
stos
sarl
out
push
std
daa
shrl
add
jl
dec
shll
sub
pop
js
out
out
rcl
fimull
aam
xor
sub
mov
pop
and
pop
out
repnz
mov
jbe
adc
sbb
push
dec
jb
mov
mov
dec
ret
pop
mov
ja
sbb
push
gs
repz
push
sarb
in
mov
and
mov
loope
or
repnz
lcall
repz
decl
das
pop
push
sub
xor
icebp
addb
mov
sbb
mov
das
out
sbb
shl
mov
pop
inc
lcall
faddp
and
in
add
xor
mov
adc
jo
jmp
jle
fs
addr16
loopne
push
add
arpl
and
add
pop
popf
subb
sti
and
xor
push
mov
es
mov
fisttpll
mov
or
and
fcoml
call
daa
out
jno
mov
and
nop
icebp
faddl
cs
cmp
std
mov
adc
in
daa
cmp
cmpsl
adc
pusha
adcb
or
jb
push
xchg
jae
mov
insl
mov
and
dec
scas
dec
push
and
cmc
idivl
cli
stos
in
mov
or
lods
add
pusha
fwait
rclb
or
xchg
sub
pop
sbb
fsubl
inc
sub
dec
stos
cmp
xor
lods
mov
push
inc
jb
sbb
into
sbb
icebp
xor
shlb
into
pop
mov
mov
popa
fwait
cmp
sbb
mov
adc
mov
out
enter
xor
dec
pop
jle
mov
loope
js
nop
stc
add
sub
test
leave
push
pop
scas
cmp
int3
lds
sub
mov
mov
dec
jg
pop
xor
pushf
mov
test
inc
add
xor
adc
mov
mov
jo
xchg
sub
and
fdivs
imul
jge
sub
xchg
test
aam
dec
in
rcrb
test
pop
in
jo
xchg
xchg
cmp
dec
gs
xchg
pushf
loop
loopne
insb
or
or
mov
pusha
cltd
and
sbb
jg
dec
inc
cmp
popf
push
add
cwtl
ljmp
push
sbb
stos
adc
cld
push
jne
imul
or
movsb
mov
inc
mov
mov
out
adc
dec
lods
aam
fdivp
add
jmp
push
insl
outsb
pop
cmp
lods
fcoml
and
or
push
fiadds
stos
cmp
xchg
icebp
xor
je
repz
mov
and
inc
das
and
ss
test
inc
jnp
adc
sbb
shrb
sub
imul
sub
or
mov
sti
cmc
ret
push
scas
dec
repnz
xchg
fwait
cmpsl
jns
out
call
icebp
add
jae
and
xor
adc
jl
adc
mov
or
int
imul
jp
cmp
out
pop
xorl
rcl
das
cmp
add
pop
nop
rcll
adc
fdivrl
pop
popa
in
movsl
adc
pushf
or
movhps
inc
mov
jbe
pushf
popf
add
lcall
ficomps
into
push
mov
push
mov
cmp
fwait
jl
add
mov
ss
lock
into
sub
mov
shll
cltd
fcoml
push
orl
xchg
ja
or
add
fnstenv
jmp
into
shrl
xor
pop
sbb
je
add
gs
dec
push
xchg
or
and
loope
push
jp
inc
test
pop
pop
dec
es
inc
jmp
fwait
add
jbe
shll
mov
shrb
mov
setge
mov
lret
es
jne
xorb
test
jg
mov
std
xchg
cmp
les
shr
pop
rcll
addr16
test
jns
imul
aad
push
and
mov
inc
xchg
sbb
fwait
cmc
gs
dec
pop
jg
pop
fbstp
mov
cmpsb
es
adc
cmc
pop
push
imul
std
mov
mov
out
cli
sahf
rcl
xor
div
pop
mov
push
scas
imul
scas
popf
push
adc
pop
mov
dec
sahf
jg
push
add
in
stos
jbe
xchg
rcrb
xor
jecxz
sub
shll
mov
xor
das
pop
push
dec
cmp
fwait
pop
or
pop
xchg
xchg
jb
or
dec
push
mov
outsl
add
loop
test
sub
jbe
xchg
aam
lods
sbb
adc
jecxz
scas
clc
mov
insb
adc
pop
outsb
cmp
cmpsb
gs
scas
orb
mov
push
mov
aaa
fsubrl
and
mov
stos
sub
xchg
mov
lea
addb
adc
jno
dec
imul
cmpb
clc
jp
mov
lret
add
add
adc
cmpsb
dec
jne
or
out
ret
mov
jne
pop
sarb
fnstenv
fistl
fwait
pusha
push
jne
xchg
rcr
sbb
pusha
pushf
outsb
out
pop
pop
mov
enter
into
pop
xchg
mov
loope
jl
xchg
or
and
insl
stos
jmp
jne
and
sbb
call
or
loopne
sub
gs
push
arpl
push
and
pop
cmp
sub
imul
mov
clc
jb
push
sti
xor
sub
jb
stos
push
jo
lret
enter
int
in
mov
test
mov
in
mov
loop
adc
push
out
or
out
ds
lahf
pop
fs
test
lea
pop
adc
lcall
dec
mov
fwait
hlt
daa
inc
dec
sub
bound
pushf
add
test
pop
cmp
leave
xor
adc
cmp
aaa
fiaddl
push
or
fadd
xacquire
pop
mov
lahf
jnp
jbe
sub
adc
das
into
lea
mov
push
dec
mov
pop
mov
insl
aaa
das
lret
movsl
jl
repnz
dec
or
loopne
sahf
cmpsl
cmp
pop
into
cmp
ret
addr16
jle
sbb
cs
stos
push
jne
repnz
test
mull
mov
adc
test
popf
loope
jbe
inc
shl
rorl
and
mov
daa
mov
inc
sbb
bound
and
add
shll
clc
sbb
popl
or
adcb
mov
push
pop
jne
xor
mov
sti
jge
ret
addl
add
add
inc
mov
mov
cli
dec
lcall
mov
and
add
orl
loope
push
sub
cmp
clc
fisubrs
pop
inc
mov
fcoms
movsb
and
xchg
xor
push
outsl
dec
sbb
pop
add
repz
push
pop
sti
xor
fcomps
mov
repnz
movsl
xor
movsb
mov
xchg
sbb
sub
add
decb
push
fs
int
mov
add
jne
bnd
fwait
push
and
fld
fstpl
dec
adc
scas
xor
les
add
movsb
mov
jg
pop
pop
hlt
jns
add
mov
in
jb
and
cwtl
xchg
xor
test
xchg
fisubrl
jp
repnz
jne
or
movb
test
adc
jb
int
mov
movsb
lods
orl
int
xchg
xor
aam
enter
inc
or
int
imul
sub
dec
mov
das
bound
shll
ja
dec
xchg
add
xchg
dec
clc
ret
cmp
stc
mov
lds
lcall
pushf
daa
adc
sbbb
divb
aad
ss
mov
mov
pop
stc
flds
rorl
jg
add
les
ljmp
pop
mov
mov
cmpsb
nop
fucomi
jbe
and
push
pop
movsb
push
inc
call
add
sub
insb
xor
jo
imul
test
sbb
xor
push
cmpb
stos
or
mov
mov
xchg
or
cmpsb
mov
xor
lret
sub
dec
add
mov
xchg
inc
test
mov
in
outsl
popf
push
cmp
pop
adc
andb
xchg
outsl
std
push
mov
jl
aad
push
push
nop
cs
and
testl
mulb
push
xchg
outsb
xor
lds
icebp
mov
ficomps
inc
mov
scas
jb
mov
scas
js
mov
push
mov
out
mov
inc
and
jb
sub
push
aas
mov
fwait
add
mov
les
lock
pop
jo
xor
std
jne
incb
inc
mov
fdivs
sub
leave
sub
arpl
cld
inc
pop
mov
fisubrl
xchg
mov
push
mov
lods
sbb
call
pop
and
pop
adc
push
cltd
repnz
push
rorl
jnp
push
repnz
mov
mov
stos
cld
jge
repz
inc
pop
out
scas
mov
lods
mov
stos
jbe
divl
adc
sahf
rcr
into
jge
jp
je
divl
sub
sub
mov
loopne
or
mov
xor
stos
jae
nopl
inc
inc
jo
fcompl
stc
mov
pop
jg
mov
fildl
stos
scas
sbb
sub
or
stos
pop
pushf
inc
call
loopne
lcall
pop
sub
xor
fimull
push
dec
cltd
mov
int
insl
add
cld
outsl
arpl
mov
fwait
popl
or
push
adc
sbb
jns
in
into
pop
jno
lds
fwait
jbe
jo
clc
or
push
cwtl
dec
adc
sub
fstps
in
xchg
sub
lods
ss
mov
mov
sahf
mov
insl
fdivrl
xor
dec
xchg
xchg
pop
cmpsl
lret
lret
sub
mov
sub
scas
test
repz
add
mov
test
adc
jae
cwtl
dec
nop
outsl
jo
adc
sahf
aaa
inc
inc
or
jb
adc
inc
into
rclb
inc
rcrl
mov
pop
fisttpll
imul
addl
loop
fstl
enter
sub
add
loope
mov
mov
or
jl
push
xchg
mov
add
scas
out
xorb
mov
xor
cmovno
rorl
pop
cmp
out
jge
cli
mov
iret
sbb
clc
outsl
std
cmp
push
outsb
sbb
lahf
insl
sbb
pop
in
and
mov
leave
push
clc
inc
inc
movsl
inc
push
pop
cmp
cmp
in
and
sahf
mov
int
jo
pop
mov
cmpsb
aaa
and
orl
arpl
fcoml
shl
popa
in
cs
jg
xchg
pop
mov
sbb
xor
loop
and
mov
mov
dec
pop
fistpll
xor
movsb
pop
sbb
sbb
loope
inc
iret
sub
xor
push
pop
loopne
es
dec
sbb
dec
adc
adc
push
addr16
insb
and
pop
mov
insb
or
sbb
jb
lret
outsb
adcl
ds
xchg
fistps
jne
ss
jl
jne
sub
add
jno
stc
out
sbb
lret
inc
pop
aam
das
sbb
loop
push
aad
mull
jl
push
rclb
stos
xchg
dec
ss
mov
ret
push
xchg
imul
ret
mov
inc
jp
adc
adc
cmpsl
jmp
sub
nop
aad
jle
popa
ficoml
sub
jle
out
rcrl
sbb
jg
dec
sbb
push
add
jg
push
xchg
add
sti
adc
out
jo
cs
test
pop
cwtl
push
cld
sbb
imul
fnstsw
popa
mov
sub
mov
cmp
inc
or
hlt
push
mov
les
jne
adc
inc
std
mov
cmp
into
notb
ret
push
fstpt
inc
and
sub
test
insl
or
dec
mov
fidivl
cwtl
and
adc
mov
sbb
aaa
leave
xlat
push
loopne
ja
push
not
scas
inc
jp
daa
out
shl
or
movsb
lods
cld
cmp
popl
out
lea
mov
dec
xor
mov
stos
fs
dec
insl
add
pop
pop
xor
hlt
rclb
cmp
add
sbb
out
add
test
clc
aam
cltd
push
dec
mov
xlat
adc
ret
dec
mov
sbb
sub
das
pop
roll
repz
xor
aas
pop
xorb
out
cmpsl
out
jbe
xor
scas
out
jg
push
js
jne
cmp
xchg
in
mov
mov
dec
clc
iret
inc
shrb
mov
enter
es
scas
jnp
jmp
outsb
mulb
insl
cs
xor
mov
push
and
push
jecxz
xchg
dec
pop
lea
fcmovnb
fistpl
ficompl
popf
mov
das
fmulp
dec
fsubl
jle
lock
xor
xchg
xchg
sbb
fdivrs
xlat
mov
insl
push
or
int3
sub
bound
ds
jecxz,pt
cmp
sahf
movsb
pop
sbb
add
sbb
pop
pop
fisubrs
nop
mov
notb
jb
pop
adc
icebp
or
sti
les
inc
jp
test
ljmp
jmp
mov
mov
les
hlt
cmpsl
mov
scas
mov
into
fstpt
xlat
pop
sub
pop
int3
pop
sub
in
pop
push
jnp
fidivrl
xchg
xorb
or
cmp
sbb
cmpsl
xor
push
fisubrl
jl
dec
jae,pn
sub
mov
mov
ja
mov
adc
adc
adc
lds
dec
gs
cmp
outsl
adc
xchg
and
cltd
gs
dec
sub
fbld
pop
inc
daa
xor
push
mov
sbb
lock
pop
shlb
jg
and
inc
inc
jmp
movsb
shl
call
out
mov
or
sbb
inc
push
lret
push
into
loop
scas
mov
jbe
mov
pop
sub
insb
jg
int
mov
inc
sbb
repz
mov
test
outsl
imul
loopne
mov
scas
scas
xor
mov
cmp
mov
cmc
mov
sub
scas
rcll
xchg
cmpb
mov
sbb
push
dec
and
xchg
seto
pop
add
add
lcall
addl
push
adc
popa
mov
fs
push
xchg
jge,pn
push
mov
frstor
sbb
mov
out
ja
adc
out
and
lahf
and
or
call
lods
stos
lods
call
push
pop
iret
pop
stos
cwtl
mov
pop
mov
dec
mov
stos
pop
sbb
pop
push
inc
push
xor
jg
cltd
sahf
mov
fdivrl
or
push
push
sub
dec
cmp
pushf
mov
shr
sub
and
movsb
ret
cmp
sar
push
in
pop
jae
lret
mov
out
fldl
gs
mov
pop
stos
lods
call
push
cltd
sub
mov
mov
ret
mov
sbb
inc
sub
and
ja
ss
sbb
test
inc
mov
mov
shlb
outsb
dec
nop
cwtl
ja
push
pop
clc
mov
shr
xchg
repnz
out
out
pop
mov
mov
out
mov
mov
jae
cli
or
cmp
int
nop
sub
mov
or
sub
stc
hlt
lods
cmpsl
adc
gs
mov
add
cmp
xor
dec
icebp
adc
arpl
cmpl
push
push
cwtl
push
jmp
jg
fndisi(8087
inc
jns
pop
xchg
adc
dec
adc
jno
mov
or
icebp
mov
decl
xlat
or
jmp
insb
add
cmp
and
dec
xor
cmp
inc
xor
cmp
sub
jno
leave
add
push
mov
loope
rclb
and
insb
test
das
add
outsb
xlat
xor
jl
data16
dec
iret
inc
push
sub
je
mov
sbb
and
and
jo
cli
cmc
and
or
icebp
mov
sub
aaa
stc
jmp
xchg
jno
addr16
dec
in
jl
cmpsb
inc
lods
subb
add
mov
mov
into
daa
jne
sbb
mov
insb
mov
arpl
stos
xchg
sub
loopne
cwtl
aas
daa
inc
mov
xchg
push
xchg
inc
dec
jl
mov
pushf
pop
mov
mov
push
jmp
fadd
xor
push
in
mov
jo
dec
pop
pop
push
cmp
out
es
jg
into
or
hlt
cmc
push
out
imul
dec
and
jae
adc
movsl
pop
mov
pop
and
mov
adc
call
outsb
mov
or
push
clc
mov
call
xchg
mov
xor
or
jo
push
jae
jmp
call
fldcw
in
out
jp
push
orb
sub
xchg
or
loope
dec
out
arpl
mov
jne
push
cmpsl
xchg
imull
xchg
sahf
out
out
test
jge
fcomps
repnz
adc
dec
push
movsl
cmp
aad
loop
ret
or
sub
cmp
in
mov
cmpsb
push
jg
pop
insb
stos
insb
mov
leave
pop
push
mov
push
xchg
pop
push
std
inc
movsb
adc
or
cmp
or
adc
add
mov
test
iret
jae
ss
xor
pop
lret
mov
pusha
aad
dec
xor
mov
adc
dec
int3
ljmp
xchg
roll
leave
lds
push
pop
stos
js
sahf
mov
in
adc
dec
jb
loop
mov
push
orl
or
ja
cmpsb
add
xor
shl
shll
aas
outsb
and
jmp
push
xchg
movsb
mov
sbb
lea
cli
sbb
insb
mov
loope
xchg
js
jp
mov
pop
mov
mov
negl
gs
mov
sub
clc
mov
inc
gs
xchg
mov
jno
test
pop
add
xchg
jno
into
andl
pop
test
lock
cmp
fst
cwtl
and
fstps
insl
rolb
push
gs
dec
jl
iret
insb
xchg
addr16
rol
pop
out
pushf
push
mov
bound
xlat
subb
inc
mov
test
pop
lods
or
jmp
xor
mov
mov
loopne
jg
cld
out
add
into
dec
dec
push
inc
pop
jne,pt
add
dec
jns
ss
adc
dec
bound
or
jle
subl
popa
jbe
or
bound
insl
jl
xchg
in
lcall
fists
hlt
mov
pop
pop
cmp
xchg
pop
imul
ss
mov
mov
dec
pop
xlat
push
std
xlat
aam
jno
test
adc
icebp
add
xchg
sti
mov
mov
addr16
xchg
push
dec
cld
push
cs
lock
call
adc
pusha
repz
loop
vcvtsi2ss
shrl
shlb
mov
push
cmpsl
sub
sbb
push
cmpsb
stos
push
xor
add
mov
cmp
inc
push
cmpsl
test
cmp
mov
xchg
push
lods
inc
decl
faddp
mov
test
dec
pop
mov
sahf
sub
push
insb
cli
lret
arpl
inc
cmp
dec
loope
xor
dec
stos
insb
jg
roll
js
out
scas
inc
ss
add
stos
stos
push
sti
mov
lock
addr16
fsubrl
mov
je
addr16
add
in
sub
insl
inc
movsl
mov
mov
jne
hlt
stc
or
mov
pop
je
xlat
rorw
xchg
fs
sti
mov
and
dec
push
sub
bound
mov
fstpt
pop
jne
xorb
ss
mov
lahf
ret
push
sbb
movsb
or
rolb
inc
xor
ror
lret
stos
xchg
or
daa
stos
cmp
and
mov
ljmp
loopne
push
ret
xchg
sti
xor
pusha
push
test
xchg
jmp
xor
mov
mov
pop
pop
push
adcb
xchg
rcl
dec
lret
call
popa
push
gs
mov
call
shlb
mov
xchg
mov
add
icebp
icebp
xor
ret
inc
outsb
clc
mov
xor
fdivp
sbb
jle
jne
jg
push
jge
shll
push
pop
cs
inc
lods
repz
es
ja
mov
pop
xchg
cmpl
out
adc
sbb
push
in
iret
sub
mov
or
lret
push
push
test
ljmp
xchg
mov
rcll
rcrl
lods
movsl
mov
repnz
add
loope
pop
mov
lods
dec
mov
repz
in
in
loopne
xor
insb
or
daa
out
mov
addb
push
push
sbb
jns
cltd
nop
mov
or
dec
mov
fdivrl
hlt
adcl
dec
pop
fisttpl
sbb
inc
es
mov
dec
push
divb
adcb
mov
cmp
sahf
xchg
mov
jg
xor
xchg
out
inc
je
fcoms
fsubl
lahf
mov
icebp
inc
data16
icebp
test
ror
test
dec
xor
mov
out
push
fs
aad
mov
mov
sbb
dec
pop
jae
inc
inc
nop
push
lea
jp
lds
mov
pop
push
pop
mov
jmp
imul
push
ret
cs
jns
mov
mov
repnz
aas
ret
aaa
pop
and
divl
and
adc
dec
into
negb
je
popa
xchg
nop
push
mov
cmc
pop
rcrl
jecxz
in
push
pop
icebp
and
or
ja
mov
fldcw
sbb
repnz
sbb
js
push
loope
repz
mov
faddl
jb
or
std
in
xchg
sub
pop
or
repnz
popa
sti
subl
inc
mov
movsl
fcompl
in
lret
pop
jle
lcall
mov
pop
lret
lret
je
cmp
cmpsl
outsl
fsubl
and
jl
loope
mov
imulb
bound
and
in
or
iret
fstpt
xor
bound
push
jg
jmp
pop
int
dec
lahf
xor
cmp
in
xorb
aam
dec
stc
js
call
outsl
or
xor
dec
cltd
repnz
dec
call
mov
or
mov
jl
cmp
aam
cmpb
cmp
add
sbb
dec
mov
dec
mov
sub
lcall
pop
out
icebp
cmc
jo
idivb
mov
xchg
sbb
xor
xor
mov
imul
jb
sbb
xchg
add
addb
and
fldt
mov
push
push
mov
fistpll
test
in
dec
ficompl
fildl
sub
or
stos
xlat
sahf
jns
pop
popf
sbb
sbb
dec
adc
out
jae
inc
aad
rol
les
dec
cmpsl
xor
mov
iret
arpl
sub
dec
cmp
outsl
cs
dec
stos
pop
xchg
scas
inc
xchg
out
sub
scas
rcll
jb
mov
cs
mov
pop
loopne
jb
pop
push
test
stos
out
push
push
sub
sahf
jge
and
mov
fidivrs
add
dec
dec
or
mov
std
pop
mov
jle
pushf
push
mov
xchg
mov
jnp
js
xchg
add
inc
add
or
test
adc
xchg
hlt
xor
das
call
andb
push
or
iret
add
sarl
mov
scas
push
decb
out
or
adc
inc
enter
dec
jle
test
mov
sbb
add
and
xor
test
ljmp
ljmp
push
lret
pop
in
loopne
mov
cli
push
stc
mov
sub
fwait
mov
cmpsl
jle
pop
pop
add
in
lret
sub
int
jecxz
mov
sub
mov
jmp
xor
or
inc
in
loop
pop
pop
mov
es
aaa
fwait
add
lret
xchg
mov
dec
cmpsl
cmp
adc
xchg
outsb
test
xchg
scas
sbb
ss
add
mov
push
out
hlt
push
or
cmp
jae
jecxz
nop
es
repnz
xchg
mov
dec
xchg
loopne
iret
push
movsb
mov
xorl
xchg
outsb
pop
out
fwait
dec
mov
mov
in
ret
pop
decb
push
push
cmp
fcoms
push
push
lods
aaa
mov
shrb
add
xchg
jle
xchg
mov
mov
xchg
inc
xor
xchg
ss
cmp
or
je
mov
pop
add
shr
aad
adc
mov
fists
rorl
mov
and
jno
sbb
mov
jo
bnd
mov
sbb
je
in
jecxz
aaa
in
jne
aad
cwtl
adc
adc
in
add
icebp
mov
mov
sub
add
testl
arpl
in
inc
xchg
dec
das
test
add
push
mov
pop
fdivrl
inc
leave
push
adc
pop
aaa
sub
out
shlb
dec
das
xchg
fucomp
inc
cmp
xchg
or
push
xorb
lret
imul
mov
mov
push
mov
rclb
ds
cmp
popa
out
sbb
ja
mov
fwait
xor
pop
and
mov
adc
testb
mov
pusha
inc
mov
sub
fnsave
push
fnstenv
mov
imull
push
xchg
sahf
mov
mov
pop
pop
lds
outsb
ds
lcall
inc
fstps
call
shll
jo
cmp
mov
xchg
imul
jecxz
lea
sub
repz
ss
ss
lods
lret
inc
mov
dec
orb
repz
add
rcl
mov
into
jno
imul
inc
bound
sub
lret
pop
rcrb
cli
mov
inc
int
pop
ficoml
vunpcklps
xchg
cmpsl
inc
jo
mov
out
in
cmpsl
repnz
or
push
or
mov
lahf
push
dec
negl
fistl
in
aaa
btc
xchg
or
mov
pop
loop
fsubs
sbbb
mov
sub
insb
sub
mov
dec
sub
adc
je
dec
jl
sub
ds
dec
mov
sbb
mov
sbb
adc
popf
and
adc
xchg
imul
cli
and
cmpsl
jecxz
pusha
in
push
inc
cmp
lea
cmpsb
or
fdivp
dec
das
lods
jg
lods
lcall
sahf
cwtl
add
fadds
pushf
fdivrl
ljmp
leave
arpl
jne
popa
push
mov
imul
sbb
test
rclb
jns
adc
and
cwtl
and
pop
mov
sbb
jl
clc
outsb
iret
mov
out
pop
cmp
out
lds
loop
add
sub
lahf
inc
fisttpl
lds
jb
clc
pop
mov
pushf
dec
jbe
enter
call
test
inc
pop
stc
xchg
lcall
mov
lret
cwtl
inc
dec
not
lret
std
leave
or
sbb
adc
test
xchg
mov
cmp
lahf
pop
jbe
sti
push
fisttps
sbb
int3
lahf
cmp
pop
xor
dec
push
dec
pop
or
push
cmp
imul
in
imul
into
test
in
fdivl
dec
jecxz
push
or
mov
pop
popf
jecxz
cmp
and
decb
in
sti
add
lods
cmp
movsbl
js
pusha
iret
xchg
or
popf
pop
mov
subl
mov
cmpl
or
icebp
shlb
add
nop
data16
sbb
inc
out
jae
cmpsb
bound
sub
or
sti
xor
cmc
mov
addl
into
inc
push
pop
sub
push
hlt
xchg
out
dec
shrb
cmp
add
out
mov
fisttpll
xchg
and
data16
insl
fwait
inc
mov
push
rcrl
out
stc
mov
add
aam
in
sahf
push
cmp
lods
push
addr16
lods
les
ret
bswap
stc
pop
lcall
out
push
and
mov
hlt
xchg
mov
loop
or
fstl
add
mov
sub
and
push
cli
push
mov
pushl
add
add
insb
cmpsl
mov
dec
aaa
cmp
getsec
bswap
xor
stos
cltd
mov
pop
pop
push
push
cli
pop
fcomp
push
jecxz
imul
or
xlat
mov
xchg
xchg
add
in
pop
test
call
xchg
mov
push
pop
push
lea
aad
sbb
mov
inc
lret
ja
jb
daa
ret
test
daa
xchg
aaa
xor
lcall
jl
jp
data16
pushf
rcrl
push
xchg
jg
movsl
stos
ret
aam
sub
int
imul
scas
mov
fcomi
popa
rcrb
cli
cmp
mov
and
es
lds
leave
xor
lret
ret
add
add
add
xor
xchg
inc
mov
cltd
stos
arpl
inc
test
xchg
mov
cmp
insl
mov
shll
push
mov
cli
insb
sub
or
scas
outsb
data16
lock
movsl
repnz
add
push
sub
jnp
inc
negb
loop
pop
in
push
dec
cmp
mov
push
mov
popf
xlat
stos
or
and
dec
pop
lock
mov
add
jl
dec
aaa
cs
and
ret
cmp
or
mov
mov
pop
mov
xchg
mov
and
xorb
and
movsb
cltd
aas
add
xor
push
movsl
dec
int3
sub
jecxz
sbb
pop
cs
mov
add
mov
dec
mov
lahf
adc
add
ret
pop
mov
repnz
aam
inc
push
jb
xlat
icebp
adc
fnsave
fs
dec
cld
add
jbe
movsl
mov
jle
lock
lds
fsubp
xor
add
push
popf
sub
xchg
js
push
stos
xchg
fsubrs
fbld
and
lods
and
cld
mov
les
pop
sub
push
jle
pop
ss
xchg
xchg
jecxz
xor
push
es
out
imul
mov
push
pop
mov
sbb
orl
addr16
push
xchg
iret
iret
dec
dec
push
mov
in
movsb
fstpl
jae
push
aad
adc
sti
cmp
push
loope
das
in
push
loopne
mov
lret
mov
lahf
hlt
aaa
mov
xchg
repnz
lcall
mov
int
xlat
mov
sti
jnp
push
cs
pop
pop
fbld
call
mov
or
cmp
sti
xchg
pop
sbb
aad
xor
mov
xor
mov
outsl
xchg
mov
mov
and
push
mov
iret
inc
aam
adc
mov
fcompl
xchg
push
add
sub
repnz
sub
jne
add
xor
nop
fistl
fsubl
pop
mov
loopne
psllw
jns
ss
mov
shll
mov
xchg
xorl
movsl
pop
add
pandn
xchg
cmp
mov
pop
add
mov
mov
dec
dec
cmpsb
mov
and
call
dec
mov
test
lea
xchg
imul
adc
dec
jl
lret
xchg
fisttps
testb
je
pop
ljmp
xchg
pop
dec
xor
sbb
scas
sbb
push
pop
test
out
pop
jo
lret
mov
cmp
cmc
jno
xlat
dec
xchg
jge
add
mov
or
vminps
mov
adc
lret
out
test
daa
into
cmp
insl
mov
mov
imul
nop
test
mov
jb
add
xor
arpl
xor
push
or
das
inc
lcall
mov
ret
sub
adc
nop
mov
stos
xor
add
fmulp
inc
test
mov
pop
cwtl
sar
imul
ss
jg
loop
sub
jae
xchg
sti
cld
addr16
imul
jno
stc
jbe
fs
lea
ds
es
xchg
sbb
push
bound
in
aas
push
mov
int3
xchg
popa
dec
jnp
stos
cmp
das
jp
add
pop
cmpsl
inc
pop
push
xchg
hlt
fnstcw
ss
adc
mov
dec
test
ljmp
negb
repnz
sti
or
fmuls
sub
into
sub
mov
ja
xor
lea
dec
mov
cmp
jp
lret
mov
adc
andl
popf
shrb
xor
xor
cmpsl
scas
pop
sub
or
cmp
sub
and
shlb
in
jns
lods
in
mov
mov
es
ret
add
mov
daa
outsb
fsubrp
cli
sahf
sub
mov
popf
cld
pop
lcall
xchg
aas
mov
outsb
dec
repnz
cli
out
lret
pop
xor
or
pop
cld
es
push
pop
xchg
xor
or
pop
cwtl
fnstenv
add
shrl
imul
stc
repnz
jp
sub
lea
inc
fisubrl
movsl
add
clc
xorl
sar
mov
sbb
cwtl
in
fists
mov
inc
ss
dec
xchg
bnd
mov
jmp
les
int
data16
dec
push
sarb
aas
dec
icebp
sub
inc
adc
push
or
int
ja
adc
in
mov
push
test
xchg
jae
jo
mov
sub
sbb
push
stos
mov
out
xchg
adc
ss
jbe
mov
pushf
out
sbb
sbb
or
pop
scas
jg,pn
mov
outsl
dec
mov
mov
iret
ja
pop
ss
fidivs
ja
cmpsl
shll
stos
and
es
inc
int
jno
adc
or
scas
cltd
xchg
pop
aam
xchg
gs
or
loopne
lahf
push
fldt
push
inc
and
fildll
into
xor
hlt
out
mulb
sub
mov
ret
xlat
imul
inc
aam
gs
out
adc
push
test
stos
gs
sbb
inc
or
xchg
enter
rol
movsb
stc
fildl
lods
jg
xor
push
es
and
das
aaa
enter
push
mov
test
fstl
jmp
mov
mov
imul
cld
pop
stos
push
mov
pop
rcr
jp
out
lds
push
pop
pusha
lds
push
mov
lods
dec
test
out
add
sub
ja
pop
mov
push
cmp
xchg
and
and
test
jg
cltd
je
repz
rcrb
int
fwait
dec
stos
adc
test
push
es
xor
loope
stos
daa
test
cmpsb
xor
fwait
or
add
xor
cmp
add
cmp
lret
mov
in
cmp
adc
sbb
pop
loopne
add
sub
and
cmpsb
gs
es
insb
outsb
cmp
enter
xchg
mov
push
cmp
cmp
inc
cmc
push
imul
or
inc
fimull
jmp
jo
sub
es
sub
sbb
sub
shlb
mov
jmp
lds
aad
lds
push
je
js
push
add
scas
fiaddl
fwait
add
pop
fnstcw
clc
lock
add
mov
ljmp
xchg
aas
into
sbb
test
lea
lret
mov
cmp
push
push
int3
jmp
push
stos
jl
sub
jle
aam
cwtl
adc
aad
adc
cmpsb
call
aas
pop
cmp
js
lds
sub
pop
or
xchg
jp
out
push
mov
xor
imul
imul
sbb
js
xor
add
pop
imul
fs
xlat
and
addb
and
lahf
xchg
dec
cmpsb
adcl
jg
xor
cmp
dec
inc
dec
addr16
ss
mov
lret
pop
dec
xor
or
fwait
jne
or
pop
xor
inc
daa
sbb
jno
sbb
inc
paddw
or
mov
movl
sbb
shlb
cmpsb
dec
cmp
jp
fists
cmc
add
cmpsb
dec
adc
dec
add
test
lret
rcrl
fyl2xp1
stos
sub
out
add
xor
shrl
jne
int3
dec
test
or
sbb
mov
xchg
loope
pushf
lods
fisttpl
lds
in
stos
das
stos
in
jae
jb
into
test
fldl
in
mov
imul
mov
je
fcompl
add
pop
jae
or
stc
inc
mov
in
cmp
mov
hlt
add
jg
inc
stc
iret
add
pop
or
js
xor
mov
rcrb
fisubs
pushf
test
pop
lods
sbb
testl
xor
and
jns
sub
mov
jmp
lret
mov
mov
outsb
loope
ds
icebp
xor
push
jnp
xchg
sbb
mov
mov
bswap
iret
jmp
aas
xchg
ffree
and
pop
mov
out
rorl
test
jns
xchg
jge
pop
or
xor
out
mov
sbb
and
dec
jecxz
rcl
jecxz
sahf
jle
xchg
dec
push
xor
push
jecxz
cmpb
sbb
cmp
dec
mov
call
mov
stos
jae
jb
push
xorl
test
or
jno
insb
mov
xchg
mov
test
sbb
shlb
sub
es
xor
mov
adc
fdivrp
outsl
jge
inc
push
scas
sti
or
loope
and
sbb
xor
fsubr
pop
or
test
add
mov
inc
fldenv
sbb
or
push
aam
pusha
adc
xor
push
push
fisubs
sahf
fistpl
sbb
xlat
sub
cwtl
lds
jg
adc
hlt
xchg
cmovl
sti
and
inc
dec
pop
jg
or
mov
inc
shl
xchg
rclb
push
jle
jb
xchg
test
ss
shll
ds
shrl
dec
ja
gs
cmp
jg
mov
cmpsb
fbstp
adc
mov
movsl
push
setnp
mov
shl
idivb
ret
cli
inc
add
stos
dec
call
or
jl
push
stos
fs
push
loopne
or
test
and
and
push
mov
dec
inc
addb
fwait
xchg
xchg
add
mulb
sub
cmp
jne
pop
sub
xor
sbb
negb
add
jae
dec
shll
out
fnstcw
rcrb
push
fidivrs
push
dec
pop
cmp
mov
fdivr
inc
dec
out
push
stc
and
xor
dec
dec
cld
cld
jnp
xchg
sbb
xlat
jno
test
dec
xchg
pop
mov
cmp
mov
sbb
js
fstpl
pop
xor
sub
push
out
pusha
daa
rorl
jo
dec
sbb
cs
adc
scas
leave
mov
loopne
push
pop
xchg
mov
and
sub
mov
popf
imul
inc
scas
pop
sbb
inc
rcr
and
xchg
mov
inc
fprem1
cltd
xor
add
cmpl
lahf
push
adc
jno
adc
inc
inc
sarb
and
leave
das
imul
cld
movsl
cld
int3
pop
dec
in
pop
rolb
mov
popf
mov
xchg
sub
ds
jbe
mov
mov
mov
xchg
frstor
divl
lock
xchg
xor
pop
sbb
or
sub
incb
push
jo
pop
adc
mov
jg
ja
into
sbb
stos
icebp
add
sbb
repz
data16
mov
dec
int
mov
mov
pop
rol
in
stc
add
cmp
cmp
jl
test
add
and
enter
jmp
loope
push
insb
fldl
dec
sbb
or
cmp
stc
jge
xchg
out
inc
ljmp
adc
push
and
in
inc
inc
add
dec
inc
add
fmul
lods
adc
hlt
outsl
mov
jae
jg
jmp
js
insb
fcom
inc
or
mov
ss
sub
cmpsb
popf
sbb
enter
or
adc
jae
dec
add
stos
stos
lahf
fs
or
pop
popl
and
adc
nop
inc
xchg
call
push
lock
xor
stos
shlb
loope
arpl
pop
push
loop
sbb
ljmp
in
notl
push
sbb
insl
mov
adc
stos
xchg
popa
clc
je
jns
pop
adc
hlt
icebp
xor
shl
mov
jge
add
ja
mov
fwait
push
jbe
inc
cmp
stos
mov
int
adc
adc
push
sub
or
cli
xor
mov
push
ljmp
xor
inc
jmp
popf
lret
jnp
push
or
das
mov
sub
xchg
mov
fbld
sbb
push
xor
cmp
xor
xchg
fmulp
mov
mov
movq
fstpt
std
push
mov
sti
fstl
movsb
aad
pop
mov
mov
pop
aad
mov
cli
cli
ficompl
fadds
sarb
inc
dec
mov
mov
scas
stos
inc
arpl
into
fcmovnb
enter
sbb
sbb
mov
scas
in
test
dec
repz
lahf
aam
pop
dec
arpl
mov
add
push
aam
or
call
or
inc
push
lahf
mov
int
imul
cmpsl
and
mov
xor
mov
fdivp
scas
lods
stos
arpl
xlat
out
lret
setl
jg
jbe
and
fadd
and
clc
psraw
mov
mov
inc
leave
and
xor
stos
inc
clc
in
fcmovnbe
aas
aad
dec
or
or
out
jbe
scas
out
sti
or
dec
jb
and
mov
mov
sbb
pop
push
mov
popa
xchg
ss
push
mov
ljmp
pop
pop
sbb
sbb
dec
push
repz
sub
outsl
jmp
push
mov
or
out
push
mov
push
push
lret
mov
sub
cld
push
loop
std
test
add
push
jp
pop
iret
jp
mov
cld
lcall
sbb
and
xor
and
fyl2x
mov
jmp
mov
push
dec
xor
dec
cmp
ret
mov
cwtl
and
dec
repnz
push
aas
ds
nop
data16
ljmp
push
lds
lock
lods
cli
jl
mov
aas
pop
push
mov
outsb
cld
popf
lds
aam
icebp
and
shr
aam
or
aam
lock
push
xor
mov
push
adcl
adc
into
aam
mov
fwait
call
push
xchg
jae
xorb
ja
fcompl
jb
iret
push
jo
fldl
in
ss
pop
push
pop
fcomps
cmc
and
cld
cmpsl
push
mov
add
xor
jae
cmp
xchg
int
out
cmp
xor
pop
xchg
stos
or
fists
in
mov
outsl
cld
mov
rcrb
ljmp
daa
cli
xchg
pop
xchg
push
mov
jae
mov
jnp
fstpl
imul
push
mov
sarl
stos
mov
iret
mov
xor
ds
enter
mov
ficoml
xchg
adc
mov
daa
stos
jmp
push
push
jo
mov
xchg
add
notw
test
loop
cwtl
loope
rorb
mov
xchg
icebp
adc
sub
and
cmc
lock
adc
lods
test
ljmp
in
jle
loopne
xor
fisubrs
popa
and
out
scas
xor
pop
sarb
sqrtps
pop
mov
dec
mov
mov
mov
or
or
sbb
xchg
lods
ljmp
sti
jp
and
jb
test
pop
xor
jle
or
nop
fcmove
out
popf
jmp
xchg
js
mov
cmp
jge
in
dec
imul
ret
into
dec
fldt
cmp
cltd
mov
xchg
push
dec
sub
mov
jp
scas
sub
pusha
mov
and
ds
popf
push
iret
or
pop
test
xlat
mov
sub
cmpsl
push
shr
fcoms
push
sar
dec
adcb
fucomp
in
pop
xchg
push
push
push
xchg
adc
pop
in
push
popf
ret
aaa
sub
cmp
sarl
sbb
jl
andb
pavgb
popf
push
pop
daa
faddl
outsb
xchg
push
ljmp
orb
push
inc
fldcw
popa
std
sub
scas
push
divb
jl
cmp
leave
out
mov
sbb
adc
xor
jg
lcall
stc
add
inc
fdivl
mov
inc
fwait
xchg
cmpb
dec
je
add
data16
and
push
mov
xchg
std
imul
cltd
jmp
sbb
mov
fstpt
notb
addr16
popa
push
push
in
popf
divb
test
mov
jecxz
es
and
das
xchg
imul
call
test
cmp
adc
dec
mov
sub
and
pop
call
push
sub
lret
in
xor
jl
mov
aaa
and
dec
in
lock
xor
dec
sti
add
jbe
ret
jb
mov
xor
lea
in
push
jmp
mov
inc
and
mov
push
outsl
addr16
repnz
push
jne
cmp
ret
test
inc
test
sub
loopne
xor
iret
lds
cmpsb
xchg
sub
push
xchg
in
sbb
aas
imul
decb
pop
les
into
outsb
lds
pop
in
daa
mov
push
mov
lea
xor
lahf
dec
cmpsb
add
inc
aam
rcrl
dec
pop
xlat
jo
and
or
cmpsb
ret
fadds
cwtl
sub
lcall
cmp
mov
or
jg
mov
hlt
inc
pop
xchg
js
dec
and
and
rol
inc
pop
dec
imul
mov
inc
mov
fiadds
xor
aaa
out
push
dec
add
mov
jns
and
test
sbb
fsubs
sahf
sbb
mov
mov
push
jmp
cmp
rolb
std
sarb
imul
pop
mov
adc
xchg
test
pusha
fwait
jae
and
ret
jno
adc
sbb
add
stos
fwait
es
mov
enter
dec
sub
add
push
out
push
pusha
inc
jne
ljmp
pop
icebp
mov
mov
and
mov
leave
aam
dec
mov
sbb
js
push
jb
adc
insl
inc
or
mov
add
mov
mov
mov
sbb
addr16
adc
icebp
jno
mov
int3
mov
mov
popa
jecxz
enter
sbb
sub
push
int
push
sbb
inc
int3
pusha
lea
xor
outsl
cld
cwtl
add
ja
or
stc
mov
cmpsl
add
lcall
mov
sahf
cmp
sahf
pop
fisubrs
add
test
push
cmp
scas
adc
loopne
jo
pop
stc
cmpb
divb
das
sub
fstpt
in
out
jge
mov
lea
mov
lcall
pop
int
dec
movsl
sbb
repz
mov
aaa
fldenv
mov
je
mov
into
mov
mov
arpl
mov
sbb
or
lds
lea
bound
xorb
sbb
jne
and
lcall
pop
cmp
mov
scas
call
dec
push
and
repz
mov
std
sahf
pusha
xchg
or
std
fnstsw
or
lcall
dec
popf
push
xor
sbb
repz
cmp
sti
or
mov
mov
movsl
sbb
arpl
or
dec
aad
ds
stos
push
and
sub
add
cmp
fwait
push
mov
xchg
sub
ret
aas
jmp
xchg
mov
pop
pop
ret
xchg
bound
loopne
int3
aad
mov
mov
mov
xchg
jg
test
xchg
out
xor
mov
mov
fdivrl
in
and
hlt
cmc
sbb
int3
mov
ljmp
pop
in
adc
push
cmpsb
cmc
and
movsb
cltd
fdivl
bound
or
push
cmp
mov
mov
shll
add
xor
jl
xor
pop
out
and
inc
xchg
test
lds
loop
cmp
jge
xor
decl
push
daa
inc
flds
fwait
loope
in
and
shl
adc
jmp
mov
bound
inc
adc
mov
dec
ja
in
mov
push
mov
add
cmp
imul
fists
sbb
push
mov
push
out
data16
xchg
cmpsb
sbb
fwait
popf
dec
cltd
xor
add
xor
push
test
mov
jno
and
dec
pop
mov
and
adc
insb
fmull
push
cwtl
test
mov
rol
iret
xchg
jecxz
mov
push
notl
leave
sahf
xchg
xor
mov
fs
hlt
xor
sub
test
inc
jecxz
push
mov
mov
fs
push
sub
push
movsl
stos
xor
add
dec
push
jecxz
lds
or
push
push
stos
xorb
xor
lods
outsl
cwtl
jns
mov
fiadds
mov
loop
adc
sub
int3
mov
push
stc
push
dec
frstor
jnp
cmp
xor
popa
mov
mov
jg
inc
ja
push
icebp
push
or
popa
or
sbb
outsb
dec
xchg
lcall
jmp
or
fs
imul
cmpsb
lods
or
jmp
mov
add
adc
decl
dec
jmp
hlt
fstps
out
dec
loop
pop
sub
pop
addl
out
ds
outsb
lcall
and
scas
dec
xor
fimull
or
pusha
lret
xchg
xchg
mov
roll
lret
fwait
cmpsb
ss
sub
lret
jbe
out
daa
sbb
dec
or
sub
loope
sub
mov
jg
cli
dec
movsb
sahf
mov
repnz
bound
mov
call
pushf
and
adc
dec
out
mov
push
stos
pushf
mov
loop
outsb
push
pop
xlat
pusha
dec
in
sbb
imul
mov
aam
jl
inc
in
in
out
scas
mov
mov
xlat
mov
gs
xchg
and
loopne
sbb
or
js
mov
fsubl
jns
xchg
jle
lret
xchg
mov
pop
pop
inc
or
in
sbb
mov
fbld
push
add
push
xchg
mov
shll
inc
pop
pop
jg
scas
repz
xchg
in
int
mov
push
push
sarb
in
and
lret
pop
sbb
in
ljmp
jge
shlb
mov
out
mov
icebp
sub
cmp
shlb
adcl
stc
frndint
push
jmp
inc
add
cmp
sbb
or
sbb
or
jno
mov
and
negb
cmp
addb
test
dec
xchg
jecxz
mov
mov
nop
fcoml
mov
je
js
adc
push
mov
and
sub
popf
scas
or
repnz
cli
dec
adc
fistpll
imul
ds
pop
cwtl
lods
out
xor
clc
shrb
mov
daa
xorb
fsubs
mov
jbe
out
or
push
hlt
xor
das
movsb
add
pop
push
lret
xlat
insl
ret
int3
adc
cmp
jge
sarl
adc
jmp
sbb
and
or
adc
mov
pushf
cmpl
sub
dec
mov
loop
or
addb
ret
xor
fiaddl
outsb
call
and
outsb
or
dec
ret
xor
stc
mov
cmpsl
mov
mov
sbb
leave
enter
push
xchg
dec
mov
lcall
mov
push
insb
adc
dec
cmp
mov
add
outsl
xor
insb
loop
pop
scas
cmp
xchg
mov
enter
sub
daa
mov
dec
ret
or
lods
and
xchg
xor
xchg
std
lods
and
sbb
aas
int
insl
xlat
sub
out
push
inc
jno
out
dec
in
inc
mov
cmp
adc
xchg
cmc
cld
mov
pushf
push
daa
imul
ret
cmp
incb
xor
adc
loopne
out
jl
xor
jge
popa
imul
sar
push
push
push
arpl
outsb
inc
push
stos
cmp
jg
lds
rol
scas
call
or
add
jne
out
orb
dec
mov
add
sbb
insb
push
inc
mov
addr16
push
enter
shlb
mov
and
mov
inc
mov
mov
mov
cmpsb
sub
addl
out
lcall
sbb
pop
lock
pop
inc
jmp
dec
sub
jle
jmp
jns
inc
movb
lret
call
add
hlt
sub
dec
add
cltd
cmp
sbb
xlat
popa
mov
fidivl
fbstp
stos
jmp
pop
sarl
arpl
insb
imul
jecxz
adc
inc
inc
xor
into
push
daa
mov
jmp
mov
add
test
out
inc
mov
fsubl
xor
cwtl
loop
int
jle
je
shrl
outsl
sbb
pop
pop
pop
inc
adc
xchg
jb
pop
fmull
gs
fadd
sti
and
or
dec
scas
sbb
leave
xchg
push
jg
roll
push
test
or
xchg
and
inc
pusha
mov
or
sar
mov
es
xor
pop
inc
lds
test
lods
push
aaa
cmp
push
push
test
mov
dec
jle
pop
cld
jo
dec
xchg
xor
pop
cmp
sub
sbbl
loope
dec
andb
xlat
xorb
push
sub
cmp
pop
test
push
dec
adc
add
xor
or
into
mov
push
mov
push
dec
push
enter
pop
dec
and
sbbl
testl
and
xchg
fstl
fsubrl
mov
push
jmp
jbe
and
mov
lahf
fs
jbe
cld
xchg
jmp
loopne
dec
cli
popf
gs
inc
push
pop
xchg
test
popa
ficoml
aam
or
push
mov
pop
mov
loope
mov
pop
inc
rol
test
push
add
je
cmp
mov
sbb
lret
push
es
cld
test
fiaddl
mov
iret
sub
stc
mov
lods
fldenv
or
div
adc
sti
sti
xchg
icebp
dec
xchg
cmp
cmpsl
roll
pop
push
daa
pop
push
das
mov
xchg
daa
sahf
in
das
jnp
enter
es
repz
nop
adc
and
or
fcomp
hlt
cmp
xchg
insb
and
iret
sbb
dec
popa
jo
adc
and
sub
sbb
pop
into
mov
push
and
sarl
pop
mov
data16
add
lret
js
loop
jne
dec
insb
mov
mov
pushf
sbb
mov
inc
xchg
lcall
mov
ret
mov
xchg
jns
iret
sbbb
mov
jne
xor
loopne
mov
lea
addl
aam
lret
mov
and
enter
call
and
int3
push
xlat
sub
mov
sub
clc
add
out
sbb
and
clc
xchg
test
push
sbb
sbb
mov
adc
push
stos
xchg
popw
bswap
fcoml
mov
je
and
dec
cmpsb
pop
sub
cmp
and
xor
mov
push
sbb
decb
cmc
test
sbb
jecxz
mov
outsl
jle
js
gs
mov
sub
test
and
and
jmp
jne
nop
sub
pop
insl
idivb
ss
iret
dec
arpl
inc
push
and
push
sbb
and
shr
and
repz
dec
xor
lock
push
test
adc
or
and
adc
orl
jbe
popa
repz
push
push
into
xor
cmp
sbb
icebp
jbe
jmp
clc
lahf
sbb
aaa
call
cwtl
cmp
adc
pop
lock
jl
cmpsl
cmp
mov
jmp
jmp
dec
sub
mov
popa
push
sub
sub
add
push
cmp
push
popl
pop
jb
out
mov
jo
ret
xor
inc
aaa
into
int3
dec
ror
loop
push
arpl
popf
ljmp
pop
mov
das
cmp
push
mov
add
adc
fildl
pop
adc
mov
inc
add
shlb
ftst
lods
cvtps2pi
ret
add
push
fwait
orl
cli
nop
mov
and
pop
mov
push
lret
cmp
aad
cmp
lods
je
pop
aam
neg
aaa
iret
sub
add
adc
and
shll
push
sub
iret
jbe
pop
popa
out
arpl
repnz
rolb
cltd
inc
or
mov
jb
outsb
stos
and
fistpll
cmp
push
scas
jne
stos
mov
sub
sbb
pop
lods
sbb
dec
loopne
divl
jl
dec
rcrb
mov
loope
movsb
imul
or
or
push
arpl
and
hlt
ja
setae
jne
lods
filds
gs
adc
ss
fldenv
sbb
daa
add
enter
cmpsb
sbb
popa
mov
das
mov
xchg
push
jnp
cld
add
inc
xor
xchg
mov
adc
cmpsl
and
jecxz
xor
mov
ret
pop
cmp
jbe
xor
sbb
mov
mov
cs
dec
mov
xor
rclb
in
jo
je
nop
adc
lret
pop
out
mov
inc
imul
mov
bound
jp
gs
add
mov
loopne
xor
jp
andb
stos
xchg
push
mov
std
idivb
or
or
insb
and
cmpsl
sub
mov
aad
into
sbb
fwait
or
mov
push
mov
mov
out
test
jne
mov
mov
push
sbb
sbb
jp
rcrb
adc
mov
xchg
push
out
shll
repnz
xor
adc
std
lret
fcmovbe
push
out
sub
push
sbb
lods
cmpsb
or
xchg
shl
jnp
cmp
jp
pushf
iret
or
ds
shlb
mov
mov
and
sbb
adc
sti
jbe
mov
stc
push
dec
jo
adc
pop
dec
popa
sub
sbb
mov
mov
xchg
mov
pop
dec
lea
sbb
fdivl
outsb
cmp
sub
cmpsb
sub
addr16
iret
xchg
shl
test
push
sub
jns
add
dec
jecxz
leave
cmp
xchg
sbb
movsl
fldcw
mov
insb
xlat
cmpsl
stos
mov
add
mov
jb
mov
loopne
loope
outsb
arpl
aad
divl
mov
mov
sub
cmp
cmp
sti
fxch
mov
xchg
int3
pop
mov
lret
lret
out
cmp
les
repz
xchg
xor
js
mov
mov
repnz
in
jbe
mov
hlt
xchg
ret
add
and
das
lahf
mov
shll
outsb
cwtl
jl
leave
cmp
dec
jg
xlat
fs
xor
mov
cmp
iret
popa
lret
dec
xor
test
dec
call
shrl
jns
shrl
cmp
dec
lret
in
daa
mov
add
stc
lock
dec
gs
or
inc
dec
fcoms
sbb
inc
clc
ret
or
scas
pop
mov
fwait
leave
xchg
pop
test
sub
pushf
aad
xchg
push
adc
add
pop
sub
xor
mov
xor
stc
mov
int3
and
jo
jne
orb
std
mov
xchg
icebp
adc
frstor
sti
lods
or
xor
lahf
mov
xchg
int
and
sub
cmpsb
and
and
cmp
das
dec
xor
dec
adcl
xchg
jb
mov
inc
loope
fimuls
int
add
lret
sub
scas
cmpsl
fcomps
ss
xorb
mov
ror
popf
and
mov
sub
xchg
xchg
mov
pop
pop
sbb
sahf
outsb
or
cmc
pop
sbb
jmp
loope
xor
daa
mov
lret
xchg
aam
flds
pop
faddl
mov
enter
hlt
outsb
push
lods
in
inc
adc
dec
and
xchg
clc
and
sbb
add
push
push
push
jg
xchg
pop
push
fisttpl
ljmp
mov
out
pop
decb
xor
mov
addr16
xchg
sti
mov
fsubrl
xlat
jno
xchg
jns
mov
dec
sbb
add
iret
cmp
subl
pop
imull
cmp
sbb
cmovp
popf
sub
mov
cwtl
hlt
sbb
push
cs
mov
aaa
aas
sbb
enter
movsl
bound
sub
push
push
or
test
in
aad
lea
test
fistps
aad
mov
repz
in
dec
gs
mov
xchg
outsb
add
icebp
loop
xchg
inc
xchg
push
cmpl
push
nop
mov
fcmovnb
add
fmull
or
mov
adc
lock
cmpsl
stos
push
pop
popf
aam
adc
das
or
aas
jo
aad
lahf
dec
xchg
js
pop
mov
mov
or
ret
aaa
data16
mov
sub
push
or
lods
mov
jl
pop
cli
mov
sub
das
sbb
jne
aaa
mov
sub
js
cmc
lock
adc
or
xor
add
mov
into
adc
aam
movsl
cmpl
in
pop
push
fs
outsb
xchg
pop
stos
loopne
xor
aam
insl
mov
fcoms
arpl
xchg
jae
leave
and
mov
push
fisttpll
lret
ret
pop
push
push
xor
icebp
push
jg
bound
xor
xor
repnz
test
je
xor
mov
out
push
sbb
lret
lret
xchg
int
fildl
js
inc
pop
test
gs
pop
les
xor
stos
insl
daa
lret
ja
mov
sbb
mov
in
mov
adc
inc
popf
frstor
cltd
xor
sub
add
cmpsb
xchg
sub
outsb
xor
inc
lcall
shlb
and
subl
cmpsb
sub
jmp
xor
xchg
fcoms
int3
lds
push
mov
cmp
js
push
leave
inc
dec
cs
pop
mov
arpl
ret
lret
test
mov
jns
cmp
jb
sbb
test
sbb
dec
pop
imul
shrl
push
sbb
fiaddl
in
jmp
jnp
xchg
es
xor
sbb
sub
jmp
sub
in
jge
xchg
mov
call
lods
fwait
hlt
add
ficoms
fwait
int
loopne
insb
cltd
mov
or
mov
les
sbb
pop
sbb
sub
jae
out
fsubr
loope
sub
mov
push
enter
repnz
cwtl
xchg
in
stc
fnstcw
xor
fisttpll
push
xchg
icebp
push
mov
cwtl
dec
fcoml
subl
inc
cwtl
mov
inc
adc
jns
inc
iret
lea
stos
and
or
jle
mov
bswap
pop
push
sbb
popf
mov
pushf
ds
test
mov
and
mov
push
fldcw
int3
repz
jnp
loope
cli
out
sbb
sub
or
adc
xchg
fildl
jg
movsl
xchg
out
rcll
js
sbb
or
les
mov
inc
mov
push
sbb
push
cmpsb
push
xor
adc
sub
sbb
jno
mov
and
shlb
adc
xlat
mov
cld
lock
dec
jle
ret
lcall
jmp
aad
push
pop
cwtl
insl
cmc
add
out
in
iret
imul
pusha
fistps
xor
scas
or
ljmp
bswap
in
jl
adc
mov
push
addr16
sahf
or
and
jno
mov
sbb
scas
jle
push
pop
pop
rorb
xchg
in
repnz
jle
f2xm1
cmc
enter
inc
dec
js
push
mov
xchg
dec
call
lret
mov
or
inc
mov
jg
leave
sub
pop
int3
gs
mov
lret
sbb
pushf
pop
loopne
jns
inc
lods
sarl
std
pop
jb
pop
push
mov
int
add
and
mov
sub
out
clc
rol
mov
clc
dec
fsts
fs
jbe
dec
notl
dec
cmpb
mov
aas
dec
or
inc
pushf
movb
inc
push
push
xor
ds
xlat
rcl
test
aaa
cmp
std
adc
mov
gs
mov
testb
lods
fildll
mov
loope
xor
mov
xor
add
in
shl
push
adc
pop
jge
insb
lahf
nop
inc
aam
and
test
mov
lret
jbe
fwait
cmp
into
mov
sbb
pop
or
jg
jmp
loop
cli
int3
cmpsl
fstps
mov
pop
inc
push
xchg
cmpb
lahf
sub
ficomps
or
xlat
xchg
adc
mov
mov
cwtl
outsb
aad
pushf
jl
cltd
sbb
popf
ret
cmp
mov
push
in
inc
dec
push
inc
lcall
daa
out
stc
dec
sarb
out
test
orb
aad
push
cmc
push
aad
xchg
and
mov
out
xchg
pushf
mov
in
stc
hlt
jge
testb
push
in
sbb
sti
and
mov
mov
sbb
ret
push
fcoml
add
cld
push
push
add
ja
adc
mov
icebp
fadds
je
mov
or
mov
test
adc
push
xorb
push
mov
rcr
popl
popa
sub
jl
dec
dec
std
stos
jo
mov
adc
or
push
push
ret
rol
xchg
out
adc
scas
sub
jne
not
sub
mov
aam
inc
mov
xor
pop
xorb
xor
std
out
int
jp
out
jl
inc
adc
inc
ficoml
lds
shl
cld
inc
sbb
mov
jge
and
xchg
lcall
imulb
movsb
sbb
mov
pop
sub
orb
sub
lret
jbe
mov
xchg
shlb
pop
js
cmp
xlat
inc
or
pop
ss
xchg
and
xlat
cmp
mov
mov
idivb
adc
inc
adc
mov
in
push
dec
sbb
push
pop
iret
mov
jle
cmp
sahf
xchg
pop
std
jne
cli
or
stos
xor
mov
in
sub
sub
cld
cmpsb
std
pop
push
cs
enter
push
xchg
sbbl
mov
push
jns
push
mov
jp
enter
push
lods
repnz
div
mov
push
adc
mov
int
rcrb
push
add
adc
sahf
int3
cmp
ljmp
int3
mov
aam
push
sbbb
mov
insb
jg
sub
mov
add
xchg
jo
loope
and
fs
int
je
vpsrld
inc
sti
mov
das
test
test
ret
int3
js
push
in
pop
or
mov
out
jmp
addl
cmp
fnstcw
popf
jp
push
cmp
fcmovu
js
sbb
sahf
pop
mov
xor
dec
int3
roll
inc
jae
pushf
cmp
je
aad
jmp
mov
mov
xor
loopne
gs
pop
pop
cwtl
adc
cltd
lahf
enter
add
dec
jp
fwait
jmp
insb
jne
scas
dec
ljmp
cmpsb
inc
jp
rcr
sub
les
or
xchg
adc
aam
jnp
sbb
cmp
cmp
dec
mov
or
jl
test
adc
stos
push
xchg
decl
imul
pop
lcall
pop
in
and
jl
ljmp
xchg
dec
ret
adc
sub
imul
adc
add
mov
int3
push
xor
xchg
std
and
repz
mov
or
test
dec
repnz
xchg
pop
add
sbb
inc
ja
daa
jo
repnz
add
movsb
fimull
divb
ds
fdivs
inc
in
xor
jo
mov
and
or
into
and
mov
or
add
push
wbinvd
lret
out
pop
xchg
mov
push
cmpsb
sub
and
int3
xor
in
mov
das
mov
js
out
mov
sub
cld
jae
pop
and
std
repz
push
pop
mov
mov
mov
loope
out
scas
mov
mov
mov
mov
out
cltd
imull
cwtl
xchg
arpl
outsl
fisttps
repnz
push
subb
jae
xchg
inc
dec
mov
dec
pop
rclb
outsb
dec
and
xchg
jge
lahf
push
inc
or
pop
out
fidivs
dec
ljmp
cld
xor
mov
bound
inc
test
sbb
lods
fs
jle
fstpt
cli
shrb
mov
hlt
mov
jg
xor
add
mov
imul
dec
stos
ljmp
cmp
and
fcos
div
into
jp
and
jns
in
clc
and
ljmpw
push
movsb
mov
jecxz
mov
add
hlt
pop
loope
sahf
lds
enter
testl
xchg
mov
fisubrs
push
inc
xor
xchg
mov
or
imul
hlt
add
adc
sbb
int3
test
mov
add
inc
sbb
add
xor
cltd
jl
jl
cmp
imul
xchg
push
sub
les
mov
xor
or
dec
push
cli
push
pusha
repnz
jmp
lock
call
inc
mov
jnp
stos
fisttps
sti
cmp
out
dec
mov
mov
push
ljmp
lret
mov
mov
mov
mov
push
or
and
cmp
sbb
push
test
sub
pop
cmp
mov
fdiv
push
loop
popa
das
adc
jl
pop
inc
fisubrl
out
dec
shlb
jle
scas
and
loope
mov
jo
and
xor
mov
xor
lds
lock
xchg
mov
popa
xchg
dec
stc
in
mov
cs
mov
mov
nop
xchg
clc
jl
cmc
jle
inc
scas
cmp
addb
mov
pop
sub
cmp
pop
mov
rorb
sub
movsb
xchg
les
imulb
das
jb
int3
test
enter
inc
sub
xor
sbb
cmpsl
or
loope
push
pop
cmp
ror
adc
inc
jp
js
dec
in
mov
ret
mov
adc
repz
jge
dec
fisttps
xor
les
push
iret
jae
and
scas
in
aam
lcall
or
jno
mov
aaa
in
jbe
call
xchg
loop
pop
clc
ret
cmpsl
je
inc
outsb
outsb
cmp
and
das
or
xor
iret
pushf
cmpsw
daa
adcb
out
dec
lret
mov
fdivrs
mov
mov
enter
cmc
mov
mov
cld
ret
clc
fbstp
inc
sub
repz
test
repz
jo
outsl
dec
lds
push
popf
rol
daa
rcr
gs
pusha
incl
inc
std
push
jecxz
dec
cmp
xchg
pop
pop
pop
cmp
scas
shlb
imul
out
push
dec
leave
jb
movswl
pop
or
mov
xchg
ficompl
test
lret
arpl
ja
repz
mov
movsb
inc
movsb
jmp
stc
xor
aad
ret
not
addr16
jmp
dec
shr
xchg
lods
in
fnstenv
cmp
ss
rcrb
scas
jmp
lret
arpl
inc
or
fs
cmp
bound
loope
in
cmp
out
insb
test
push
sbb
movsb
push
xchg
adc
ljmp
into
push
push
jo
into
mov
lods
inc
lea
pop
jb
sbb
and
int
out
xchg
cmp
pop
dec
jnp
sti
and
mov
xlat
sub
lcall
pop
pop
pop
push
into
arpl
push
fsts
sub
mov
into
inc
mov
sub
jo
cwtl
addr16
jl
cmp
fists
mov
ljmp
in
cmc
mov
inc
pop
popf
and
jns
pop
mov
mov
lea
and
roll
jp
jo
mov
ljmp
push
and
rcl
dec
cmpsl
outsb
jp
scas
dec
sarl
jge
aam
pop
out
mull
jnp
mov
dec
out
lcall
roll
mov
imul
pop
jge
paddw
push
pop
fwait
sub
jb
in
xchg
pop
stos
or
jne
stc
mov
xor
xchg
sbb
outsl
insb
sub
addr16
nop
xchg
pop
mov
sahf
aas
mov
movsl
ja
mov
sbb
xor
out
daa
fistpll
jae
xchg
aas
adc
je
shrb
push
pop
cmp
xchg
jns
jmp
xchg
dec
iret
xchg
pop
push
loope
lock
loop
push
les
adc
push
lret
out
jae
fdivs
fs
imulb
sub
or
adc
add
lock
and
mov
ljmp
ret
call
push
aam
and
mov
push
cmpb
hlt
sub
mov
push
aad
jae
or
mov
sahf
subb
push
mov
xchg
lea
sub
pop
xor
out
dec
aad
pop
jmp
loope
inc
xor
sti
out
std
xchg
dec
fidivrs
xchg
cltd
das
rclb
cwtl
xchg
stc
pop
sub
sub
es
dec
fcmovb
lods
push
sahf
pop
push
inc
clc
data16
mov
mov
aam
mov
jnp
enter
mov
test
fidivrl
xchg
xchg
inc
push
push
pop
mov
cs
adc
icebp
fmulp
pop
push
es
pop
sub
fisubl
pop
jl
notl
aas
adcl
rcrl
mov
out
inc
jle
xor
sarb
dec
imul
sub
adc
cmp
notl
int3
incb
out
cmp
jmp
push
gs
xor
xchg
dec
or
addb
mov
dec
lock
ja
adcl
inc
adc
xchg
sahf
stc
and
or
push
and
inc
sub
jns
out
fcomps
call
shrl
sub
push
lret
mov
pop
out
mov
pop
jnp
inc
and
fwait
adc
sbb
sarb
lahf
aaa
mov
sub
xor
mov
fadds
inc
pop
pop
cli
jnp
outsb
mov
push
sbbl
jle
dec
les
loopne
adc
sti
cld
and
cld
xchg
jbe
nop
and
cltd
and
notl
push
roll
out
add
push
loope
mov
test
cmp
stos
mov
adc
inc
mov
cld
xchg
pop
cmpl
push
mov
ret
jge
cmp
into
fisubrs
pop
pop
cmpsb
inc
add
into
adc
lods
mov
mov
lcall
nop
incb
rcll
out
insl
xor
outsb
pop
push
and
and
mov
adc
dec
or
mov
mov
jle
jmp
jmp
repz
dec
lret
mov
les
pop
jg
xor
movsb
push
sbb
xlat
jg
in
push
push
in
jne
movsl
pop
mov
rorb
lcall
pushf
out
pop
mov
test
imul
test
mov
add
add
inc
mov
pop
dec
movsb
sbb
push
mov
fisubrl
adc
es
pop
inc
push
dec
into
mov
dec
push
xchg
cmp
sub
aam
mov
test
and
lcall
sub
inc
iret
es
shr
push
push
push
pop
cld
shll
inc
sbbl
jbe
in
or
hlt
sub
lock
and
mov
push
nop
pop
decb
jae
jl
mov
xorb
outsb
jbe
ret
mov
add
push
dec
pushf
pusha
pop
xchg
fnsave
and
mov
orl
xchg
setg
sbb
adc
cmpsb
mov
inc
js
pop
pop
icebp
jb
or
add
call
sbb
sbb
cmpsb
js
push
dec
rcrb
xor
or
cs
jno
push
push
or
stos
stos
into
mov
stos
loop
out
out
cwtl
stos
mov
or
mov
rcll
xchg
inc
cmpsb
test
cmc
mov
fldt
sub
rclb
lds
subb
fs
push
gs
push
in
xchg
lret
lret
adc
in
jle
bound
fmul
jne
push
inc
cmp
pop
sub
sub
movsl
jne
mov
dec
mov
jmp
fwait
lret
test
xchg
jo
cmp
jb
pop
adc
mov
jp
ljmp
and
into
inc
mov
xor
push
les
icebp
push
sbb
xor
push
ret
movsb
jle
and
orb
dec
jle
or
or
insl
push
add
mov
dec
mov
push
lock
call
cmp
mov
xor
je
cmp
insl
hlt
inc
pop
push
hlt
mov
fcmovbe
ja
mov
push
sub
lcall
mov
pop
pop
mov
loope
mov
sti
ja
lret
mov
and
dec
mov
adc
lret
xor
movsl
sub
fisubrs
or
out
jae
adc
js
inc
sbbl
shll
aad
sahf
test
stos
negb
lods
lods
pop
cmp
pop
fcmovbe
mov
and
xor
mov
mov
mov
mov
jo
stc
nop
jno
mov
adc
xchg
xorl
mov
les
clc
std
mov
push
jne
sbb
jl
xchg
fs
int3
mov
gs
or
cmovb
stc
mov
insl
imul
repz
xchg
adcl
out
and
mov
stos
in
jnp
ficomps
xchg
outsl
pop
jmp
imull
pop
addr16
in
jne
xor
lods
popf
add
and
adcb
mov
lret
jb
mov
xchg
jle
pop
xchg
gs
add
sbb
sub
mov
pop
daa
call
fwait
bound
dec
or
orb
add
scas
xlat
lea
icebp
add
jl
mov
push
xchg
mov
add
js
dec
mov
and
repnz
pushf
dec
fists
mov
les
pop
push
or
fisttpll
jns
outsb
add
cwtl
xor
jns
cli
dec
sub
fistpll
fstpt
cmp
stos
out
mov
mov
or
pop
mov
xor
mov
jns
mov
mov
scas
out
test
rorb
arpl
inc
push
mov
pop
dec
fidivs
insl
ret
aad
outsb
xchg
imul
add
adc
jbe
fbstp
sbb
inc
pop
cmc
out
inc
es
popa
shlb
sbb
mov
sbb
add
js
outsb
cmp
test
ret
ljmp
adc
repz
shll
sbb
push
in
sub
sbb
popf
xchg
or
int3
popf
xchg
mov
imul
repnz
pop
loope
sbb
xor
xchg
in
and
sub
mov
xchg
add
faddl
cmp
ret
test
lret
or
popa
fstps
push
fstl
outsb
sbb
jp
jg
sub
mov
add
rolb
inc
pop
ds
sbb
inc
addl
mov
inc
orb
nop
or
or
cmp
push
jmp
out
mov
insl
daa
jp
add
jge
push
int
mov
incb
push
xlat
dec
stos
mov
pop
pushf
xor
xor
inc
fisubrl
stos
cld
arpl
aas
aas
xchg
in
aad
or
fwait
sub
cmp
mov
hlt
jl
jb
sub
call
std
negb
jmp
sub
dec
sub
fsubr
mov
daa
or
mov
loop
xchg
mov
fcoms
jle
xor
stos
jo
outsb
push
cld
mov
stc
aas
xor
call
xadd
arpl
and
cmpsb
mov
or
sub
xchg
int3
or
xchg
decb
jno
and
inc
mov
fnstenv
push
jo
jp
stc
inc
add
mulb
jbe
add
imul
aam
subb
or
ds
stc
sbb
mov
popa
pop
lods
mov
arpl
rcr
repnz
cli
jne
cmpsb
mov
dec
xchg
es
fwait
jecxz
stc
std
lock
idivl
mov
dec
shrl
push
iret
jno
loope
mov
in
aad
mov
ds
adc
mov
lcall
mov
cli
mov
push
mov
xchg
cmc
daa
imul
in
shlb
mov
xor
jbe
mov
mov
inc
jmp
jmp
mov
in
mov
or
xlat
cmp
jae
scas
je
sub
mov
cld
aad
loope
push
pop
or
icebp
shrb
icebp
aas
inc
jge
dec
jns
xchg
nop
cmpsl
sub
ret
mov
repnz
push
imul
dec
xor
jae
mov
add
mov
out
pop
xchg
add
pop
lret
adc
pop
lea
sub
push
pop
fimuls
nop
jno
icebp
sub
dec
jp
aam
dec
xor
andb
popf
test
std
enter
incb
in
cmovno
dec
push
lahf
imul
insl
xor
in
adc
sbb
pop
and
add
push
jns
loopne
loope
mov
andb
das
adc
bound
int3
dec
dec
cs
scas
nop
cmpsb
push
imul
test
mov
add
test
pop
loop
and
dec
inc
aad
jle
lcall
xchg
fwait
stos
mov
in
cli
jo
dec
mov
sti
cmpsb
cmpsb
in
arpl
jns
cmpsl
ret
push
ja
in
insb
xchg
outsb
cwtl
or
je
push
mov
jle
push
shrb
mov
mov
push
add
wrmsr
push
xor
aaa
lcall
adc
loopne
cmp
inc
inc
andl
push
bnd
aas
dec
mov
mov
sbb
es
pop
gs
out
dec
es
loopne
and
mov
push
int3
outsb
xchg
das
jmp
push
sub
sbb
push
fisttps
fs
rdpmc
iret
int
xchg
push
and
scas
mov
dec
cmp
rcrb
insb
inc
inc
cli
xor
loopew
add
gs
es
cmpsl
jb
scas
mov
sbb
cmp
or
fimuls
lock
cld
pop
sub
mov
out
and
sub
cmp
lret
rcll
test
xchg
push
sbb
leave
pop
daa
into
movl
jb
cmp
sbb
rcrl
cmp
mov
stos
shll
mov
fsubrl
jecxz
inc
jnp
ss
cli
arpl
test
sarl
push
scas
dec
gs
fbld
jmp
cli
in
lahf
int
pop
pop
jp
aas
rorl
jbe
movsl
xlat
hlt
std
jmp
adc
cmp
cld
mov
inc
pop
xor
lea
ret
lret
lea
ret
pop
repz
fnsave
cld
inc
fdivrl
nop
enter
rcl
add
push
mov
hlt
ja
mov
jl
or
mov
cmp
lss
stc
or
dec
sub
sub
jp
stos
ss
push
sbbb
std
pop
stos
insb
cmp
pop
jnp
arpl
dec
mov
or
cs
fwait
loope
in
mov
jne
adc
hlt
negb
out
mov
push
jns
mov
mov
or
icebp
addr16
or
jl
ret
cmp
mov
aam
sub
loop
fisubs
push
adc
mov
xlat
icebp
push
fiaddl
mov
stos
mov
xchg
cli
imul
lcall
push
ds
sub
push
fwait
lods
pop
sub
repnz
aad
cmc
xor
vpackuswb
adc
loope
fwait
push
ja
or
xchg
add
lahf
and
addr16
inc
stos
fdivrs
out
xchg
adc
loop
xchg
daa
inc
sbb
pop
dec
ja
aad
scas
jle
sahf
shl
lock
or
xchg
push
loopne
shr
cmp
test
push
in
cmpl
cmp
lcall
movsb
in
pop
mov
repz
sub
mov
mov
dec
mov
ljmp
adc
mov
les
lods
push
mov
push
push
jo
aaa
ljmp
arpl
jae
enter
lea
xor
xor
testl
movsl
adc
cmp
mov
popl
les
cmp
out
push
ficompl
popf
sbb
sub
fisttps
dec
adc
es
fidivl
mov
mov
js
mov
clc
add
cmp
pop
sahf
std
frstor
pop
movsb
mov
rclb
in
push
inc
push
dec
sahf
addr16
cltd
movsb
jge
cmp
ds
pusha
test
bound
mov
jecxz
cltd
cs
loopne
jg
sbb
sub
repnz
jl
sahf
icebp
mov
mov
negb
mov
xchg
cmp
sbb
out
pop
fbstp
lock
jg
cmp
in
shrl
ja
cld
add
clc
arpl
enter
cmpsl
xchg
iret
in
shll
push
pusha
inc
ss
test
fcmovu
pop
aam
and
dec
movsl
mov
jle
sub
mov
xchg
or
add
int3
and
cmpl
push
inc
sub
add
xchg
std
jge
pop
repnz
shrl
sub
dec
mov
notl
test
sbb
mov
xor
cmpsb
or
xchg
mov
adc
push
int
imull
jmp
push
xor
hlt
add
jge
jl
dec
mov
sub
aam
test
xchg
test
shll
pop
sbb
lods
fwait
movsb
loopne
push
loopne
mov
dec
add
dec
adc
sahf
fwait
mov
fldt
xchg
lea
pop
enter
sub
addl
and
test
mov
in
mov
or
lods
faddl
and
push
loopne
rorl
out
adc
sub
push
mov
fldcw
push
pop
ja
sbb
cmp
stos
adc
sub
and
push
mov
mov
inc
add
out
push
movsl
mov
rcrb
jecxz
mov
lods
bound
and
je
pop
pop
inc
lods
cmp
add
xor
and
lods
push
sbb
mov
or
pop
mov
int
sbb
dec
test
stos
jae
leave
std
cwtl
mov
sbb
pop
push
push
push
fwait
cmpl
popl
es
mov
outsb
jb
sbb
sbbl
shl
mov
mov
ja
ss
and
mov
in
adc
shrl
xor
add
jecxz
mov
xchg
lcall
jmp
xchg
cmp
incb
pop
ss
jecxz
sbbl
push
mov
std
or
movsl
std
adc
and
lahf
jbe
aad
add
inc
std
cmp
sbb
aas
inc
incl
je
roll
sub
sub
arpl
add
dec
sub
lds
movsl
scas
pop
pop
clc
mov
sbb
pop
mov
aam
lock
faddl
out
leave
jmp
fisttps
out
dec
mov
mov
jbe
ljmp
push
test
cld
mov
lret
dec
sbbb
imul
jle
mov
add
pop
xor
dec
pushf
rcll
clc
add
lahf
out
int3
mov
push
movsb
outsl
adc
into
sarl
in
mov
test
or
mov
adc
test
inc
or
fsts
jb
insb
in
call
cld
xor
fdivrl
jae
or
pusha
push
lock
mov
ljmp
rcll
xchg
xor
jle
jp
int
cmp
jmp
or
iret
psubd
lea
int3
xor
pusha
sti
jne
int3
inc
sub
cld
jp
lahf
dec
hlt
mov
test
movsl
stc
lahf
orl
aaa
xor
pop
dec
adc
cmpsl
stos
xchg
push
sarl
sbb
rcrl
in
xchg
xchg
in
fwait
jmp
das
or
xor
xchg
popf
fs
ret
imul
imul
pop
popa
sahf
add
sbb
or
fstpt
rorl
xchg
push
add
mov
and
cmp
lret
inc
push
faddl
xchg
mov
dec
filds
add
imul
mov
mov
inc
ja
leave
flds
pop
decl
movsb
aam
ss
pop
ficompl
add
test
ss
push
push
in
insb
mov
fdivs
out
pop
or
and
inc
add
mov
mov
sub
mov
adc
ret
dec
mov
test
hlt
andl
out
xchg
push
cmpsb
mov
sbb
aas
hlt
or
jecxz
push
mov
icebp
outsb
test
push
mov
test
mov
das
outsb
jg
fidivrl
imul
movsl
test
scas
sti
dec
lahf
movb
jle
daa
adc
daa
pop
push
pop
repnz
xchg
sub
xchg
inc
mov
dec
cmp
mov
pop
shlb
xchg
cli
cmpsb
stos
in
mov
jl
pushf
movsb
jg
xchg
push
adc
push
xchg
sarl
testb
sub
sti
mov
dec
les
das
mov
mov
xor
cld
mov
lods
cli
xchg
out
push
dec
adc
xchg
jae
and
inc
addr16
sbb
jns
sbb
push
sti
sti
adc
mov
xchg
push
std
int3
pop
sub
les
pusha
cmpb
xchg
inc
imul
je
mov
and
addr16
jge
or
adc
bound
sbb
push
pop
push
cmp
out
repz
and
movb
iret
cmc
or
push
rcl
bswap
rolb
sbb
mov
ljmp
mov
fsub
shl
test
leave
loope
hlt
pop
pop
clc
push
mov
sub
popw
mov
test
cld
cmp
dec
lods
vsubss
ljmp
test
sub
lcall
imul
xor
inc
pushf
push
stos
or
in
pop
punpcklwd
mov
inc
xchg
mov
xor
inc
fnstcw
lret
inc
scas
add
cld
bound
roll
mov
popf
dec
incl
jb
scas
sbb
faddl
idivb
xor
cmp
sti
rorl
jp
pop
cmp
loope
push
loop
cmc
arpl
pop
cmp
and
stos
sti
sbbl
xchg
shlb
jae
lods
rorb
xor
icebp
jle
pusha
test
pop
add
inc
shrl
mov
in
push
call
scas
pop
out
add
adc
or
dec
jnp
jmp
mov
add
daa
outsb
decb
sahf
sub
add
je
andl
xlat
xor
fildll
js
pop
leave
cs
inc
stc
rcr
lret
mov
mov
cmp
sahf
lret
inc
sub
fistpl
test
mov
push
int3
mov
inc
aad
push
pop
xchg
ret
clc
push
repnz
xchg
divb
jae
outsl
iret
lcall
dec
sahf
les
cmp
movsb
dec
out
in
fsubl
mov
or
xor
fisubs
lcall
pop
fadds
ja
les
cmp
or
inc
je
mov
inc
mov
cli
adc
cmpsl
mov
pop
jecxz
arpl
jmp
div
sub
xor
mov
xchg
aam
mov
sub
pop
mov
jb
lret
daa
jo
xor
fistps
xchg
lea
xlat
adc
shl
das
ss
or
iret
scas
and
orl
mulb
pop
rclb
bound
jne
xchg
sub
and
add
xor
sub
jns
dec
xor
pop
es
push
inc
jmp
dec
and
adc
scas
outsb
adc
arpl
hlt
aam
xchg
fmuls
pop
and
or
shrb
push
cwtl
js
imul
pop
mov
and
sbb
stos
fs
mov
sub
icebp
sub
mov
inc
rorl
rorl
sub
mov
insl
scas
lods
imul
pop
pushf
int
pop
pop
pop
or
xchg
push
jmp
cmp
or
push
jl
jns
push
pop
sbb
sub
out
cs
outsl
sti
fdivl
push
aam
clc
aad
aaa
enter
mov
stos
xchg
pop
adcb
into
aas
fdivs
mov
fprem1
jns
cmp
into
jge
cmp
sbb
inc
dec
stc
cmc
lds
cld
leave
mov
mov
outsl
dec
mov
repnz
push
xchg
push
or
push
xchg
insl
loope
mov
rcl
ret
push
stos
inc
lds
out
and
jmp
dec
stos
or
inc
push
subb
and
xchg
mov
cs
ja
fwait
cli
stos
pushf
movntps
jecxz
pop
int
jnp
sub
adc
clc
enter
or
xchg
movsl
pop
stc
jnp
xchg
repnz
into
adc
lock
rcll
shlb
pop
jae
pop
iret
lea
inc
idivl
movsl
add
mov
adc
daa
add
nop
je
push
cmp
std
cmp
int
out
in
dec
cmp
mov
sahf
xchg
addl
mov
into
sahf
push
xchg
cmpsb
cmp
jmp
inc
jle
adc
and
cmp
jp
push
sbb
es
push
jnp
in
jmp
imul
call
dec
loopne
xchg
push
xchg
ljmp
mov
xchg
sar
cmp
push
or
andb
dec
pop
aam
push
std
add
arpl
sbb
incl
jbe
sub
int3
add
jp
cmpsl
in
mov
in
mov
test
add
or
movsl
test
inc
lea
push
mov
fldcw
pop
xchg
lcall
jnp
pop
sahf
divl
or
mov
js
cmp
fildl
inc
mov
inc
mov
fisttpl
add
inc
inc
test
push
xchg
ss
aaa
mov
mov
incb
stos
pop
xor
inc
cmpsl
or
fstl
shrl
jle
inc
call
std
lea
mov
jo
mov
lret
mov
push
gs
int3
sub
lret
aad
ret
xchg
sarl
cmp
mov
idivl
nop
mov
sbb
xchg
cmp
enter
test
repnz
xchg
mull
ret
ljmp
insl
lahf
lds
fs
sti
ror
sbb
test
test
pop
mov
and
aaa
mov
fs
imul
xor
out
stc
in
jns
push
push
pop
sbb
lret
bound
sub
leave
lock
cwtl
adc
push
inc
add
pop
push
pop
nop
sbb
pop
sub
lods
xor
pusha
sub
xor
xchg
out
into
inc
mov
ljmp
negb
std
orl
test
cmp
mov
pop
fnstsw
lods
cmp
mov
and
adcb
pop
cmp
fcmovnb
lods
or
xchg
inc
nop
dec
popf
call
test
icebp
mov
sti
adcl
inc
pop
adc
adc
fiadds
adc
sahf
mov
stc
mov
fisttpll
pushf
jne
sti
jle
cmp
pushf
and
mov
jb
mov
cmp
das
subl
fcoml
push
adc
dec
jns
jecxz
xchg
jbe
pop
jb
movsl
cld
dec
insl
lahf
pop
mov
xchg
xchg
addr16
fs
movsl
scas
cmp
push
lret
sub
sub
sbb
jmp
push
sbb
popa
in
lret
add
int
xchg
bound
daa
or
xchg
ja
mov
cli
shl
push
xor
sub
jns
rcll
decl
push
insb
pop
adc
mov
test
dec
testl
push
cmp
cmpsl
cwtl
xchg
adc
ja
ret
aam
rclb
mov
mov
mov
js
fcmovnu
repnz
dec
stos
ljmp
inc
pusha
mov
mov
stc
cmp
xor
stc
enter
hlt
imul
cmpsb
cmp
sbb
out
mov
out
pop
mov
in
jbe
ljmp
sbb
lea
loop
cmp
out
lahf
and
xchg
shlb
and
pop
popa
insb
mov
bound
loope
dec
repnz
stc
add
sbb
js
in
xchg
mov
pop
push
cmpsl
test
popf
jnp
fcompl
pop
lods
xor
fdivrp
cmp
cmp
sbb
lea
lcall
cmp
push
fwait
data16
scas
or
insl
lds
mov
out
hlt
xor
js
lods
loop
lcall
inc
mov
xchg
adc
push
ds
gs
inc
scas
dec
sahf
sbb
add
jl
leave
mov
cmpsl
xchg
push
lret
push
dec
mov
into
addr16
popa
pop
push
push
jmp
daa
or
or
sub
and
nop
subb
jb
aad
pop
fs
cs
sub
stc
jmp
lahf
repz
cmc
cmp
mov
aaa
cli
adc
cmp
movsl
test
sbbb
push
push
jb
mov
pop
popa
sbb
testb
mov
jae,pt
test
loop
cmpsb
xor
push
or
ds
push
and
sti
shl
inc
sub
mov
fadd
pop
lret
out
mov
xchg
pop
xchg
jbe
push
pop
sub
push
rcr
fdivrs
fsincos
inc
insb
push
scas
mov
xchg
mov
aad
dec
test
xchg
cmpb
mov
sbb
and
and
ljmp
add
das
mov
scas
cmp
dec
iret
xchg
sar
mov
push
call
jmp
pop
jge
ja
fsubrl
into
std
mov
inc
fs
mov
pop
mov
xchg
lods
clc
mov
das
cltd
inc
cmp
imul
adc
mov
mov
out
push
add
sbb
aas
dec
movsb
ret
sarl
and
fdiv
jbe
jno
push
sub
push
test
mov
mov
jns
mov
cmp
ja
push
cld
sahf
fisttps
popa
push
dec
popl
bound
cmpsl
fcomip
lods
mov
or
xchg
mov
ffreep
int
nop
dec
inc
or
add
nop
or
sub
fs
sub
test
popf
nop
cli
dec
insl
mov
mov
push
xor
aas
stos
arpl
add
mov
shl
loop
push
data16
pop
pop
pop
ss
add
iret
xchg
mov
xor
push
jbe
rcll
push
cld
mov
cmpl
test
or
mov
movsb
cmp
adc
fucomi
sarl
jo
into
fidivrl
cmp
jecxz
mov
cs
scas
ds
pusha
cmc
sub
out
mov
fwait
push
mov
enter
repnz
jns
das
pop
sub
fistpl
xchg
cli
mov
iret
adc
inc
jb
sbb
cmp
dec
mov
adc
test
jecxz
xchg
fcmovnbe
lret
mov
test
add
jecxz
pop
lds
mov
es
mov
dec
sub
in
inc
mov
in
inc
inc
ret
and
dec
fwait
sbb
mov
adc
mov
in
xchg
mov
lea
loope
mov
push
cmp
dec
sbb
ret
ret
sbbl
sbb
push
cmp
pushf
cmp
cmp
dec
cmpsl
jge
inc
pop
lret
mov
mov
or
jle
jmp
out
add
jno
dec
inc
fwait
popl
sub
jl
frstor
leave
int
out
xchg
mov
lods
xchg
jb
add
loop
dec
daa
rolb
dec
cmp
je
ljmp
cmp
pop
dec
addr16
lcall
stos
popf
mov
outsb
adcb
fdivr
xor
sbb
jbe
repz
mov
push
mov
jb
inc
dec
add
stos
loop
in
push
shll
in
inc
scas
cli
sbb
xchg
stc
inc
fcmovne
mov
dec
xor
sub
out
cmp
adc
add
ret
and
bound
inc
lret
repz
mov
xor
jnp
arpl
xchg
cwtl
dec
inc
out
stos
pop
pop
xchg
xchg
lods
lret
pop
jns
push
je
aad
mov
sub
dec
mov
fbstp
and
int3
pop
repnz
push
popf
jb
in
fs
sahf
scas
xchg
and
jo
dec
iret
into
daa
push
hlt
in
or
mov
sbb
mov
pop
inc
jae
xchg
outsl
inc
test
fisttpll
jo
sbb
call
cmp
fidivs
jo
shl
inc
mov
rcll
movsb
cwtl
mov
popa
mov
inc
repz
push
push
lds
cmp
jne
push
dec
mov
fidivrl
jle
mov
in
xor
sbb
pop
testb
jmp
dec
subl
mov
xchg
bound
insb
lret
pop
movsb
int
jecxz
and
push
xchg
xchg
mov
test
aam
add
adc
shlb
pushf
and
popf
adc
frstor
mov
shll
cltd
sbb
push
push
or
pop
sub
test
daa
cwtl
js
xchg
int
jge
test
xchg
nop
push
lcall
ss
stc
aaa
lcall
cld
and
pop
and
iret
mov
push
xchg
inc
mov
jnp
std
in
outsl
xchg
xor
mov
xchg
in
push
pop
pop
cmp
bound
andl
sbb
push
pop
jge
sbb
adc
pop
lret
cmpsb
add
aaa
adcb
dec
mov
out
push
mov
cmpl
xor
mov
adc
mov
cmp
and
and
xchg
sti
adc
jnp
sbb
iret
sub
das
rcll
mov
call
and
xor
adc
xor
adc
ja
xor
cmp
test
fsubrp
or
test
js
and
lcall
leave
lcall
and
shr
stos
lret
gs
fstps
int
lret
test
jmp
pop
cmp
gs
int3
mov
xor
push
fidivrs
rorb
pushl
and
mov
sbb
jo
outsl
xchg
scas
cmp
cmp
jp
and
fldl
and
lcall
enter
or
mov
jno
cltd
incl
mov
jecxz
outsb
int3
xchg
test
popf
push
scas
movsl
cltd
xor
xchg
xchg
daa
adc
in
cmpsl
in
in
popf
cmp
popf
mov
sbb
push
inc
in
test
dec
scas
adc
pop
leave
movsl
jle
mov
arpl
frstor
icebp
neg
int
mov
movsl
jb
fcoms
std
sub
je
dec
pop
cli
out
jns
cs
in
adc
mov
sbb
jo
fidivl
loop
outsb
add
mov
das
xchg
les
clc
pop
imul
aam
stos
and
dec
and
cwtl
push
mov
xchg
jbe
outsb
into
xlat
das
sub
cmp
test
hlt
bound
out
fisubs
jnp
mov
call
mov
sub
adcb
pusha
mov
and
repz
or
adc
jns
mov
ds
push
mov
mov
jge
jmp
jle
inc
xchg
test
mov
hlt
loope
xchg
jno
or
imul
fucomi
sbb
cmpsl
ds
sbb
mov
jg
push
push
push
loope
adc
dec
adc
lods
sbb
popf
cmpsb
mov
xchg
sbb
xchg
push
aaa
mov
jecxz
lea
fstps
add
rcl
pushf
mov
pop
jge
push
outsl
cmpb
xchg
mov
ja
shll
jge
hlt
fisubrl
repz
test
call
lds
xchg
and
sbbl
pop
lcall
sbb
es
fcomps
mov
mov
xchg
sbb
ljmp
leave
stos
xchg
lahf
pusha
mov
xor
out
inc
popf
in
movsb
mov
mov
push
testl
ret
sarl
xchg
hlt
cmp
push
in
xchg
shlb
push
lahf
aad
cmc
out
gs
imul
test
xchg
test
lret
pop
xchg
push
vpsubq
push
fcom
mov
repz
sub
add
in
sub
js
aad
cmp
shrb
out
jmp
inc
pop
jae
pop
jns
dec
pop
dec
add
cmpsl
loope
dec
inc
cld
sbb
pop
jp
lcall
jo
test
std
pop
mov
xchg
jns
cmpsl
xorl
stos
mov
les
add
movsb
test
push
jge
jb
popf
test
adc
into
mov
inc
inc
mov
icebp
test
xchg
push
inc
sarl
les
mov
mov
aaa
notl
lcall
stc
xchg
add
addr16
pop
add
add
push
sub
add
jecxz
out
pop
test
test
cwtl
adc
call
rcr
push
pop
mov
push
xor
add
sub
pop
aad
and
sub
stc
push
xchg
cli
mov
cmpsb
xchg
jb
mov
dec
mov
test
xchg
or
sti
daa
scas
sub
leave
fs
inc
insb
adc
lods
or
lds
jmp
cld
pop
clc
ss
mov
sbb
ljmp
or
cmp
lods
enter
pusha
cmc
call
ja
adc
or
mov
mov
out
call
jg
fsubrl
bound
into
xor
stos
xor
cs
fs
xchg
adc
push
push
iret
aas
jecxz
filds
dec
arpl
addr16
std
mov
xor
pop
add
push
xchg
adc
mov
mov
mov
rclb
fisubs
inc
call
xchg
or
pop
decb
pop
xor
jmp
es
jae
dec
stc
fwait
out
fcomps
sahf
or
mov
lret
adc
stos
dec
xor
sti
xchg
ljmp
inc
fwait
cwtl
mov
cmpb
lea
push
pop
lahf
xchg
insl
jns
and
sbb
adc
adc
xor
push
pop
dec
out
test
rorl
inc
add
cmp
call
add
ss
sub
sub
fnstsw
jae
shrl
cmpsb
jbe
pop
and
mov
push
sbb
mov
adc
inc
xchg
enter
jbe
push
xchg
xchg
insb
push
mov
rcrb
xchg
xchg
mov
and
fisubl
sub
and
push
jb
dec
mov
jae
aaa
jb
cmp
or
jns
ss
pushf
cmpsl
dec
out
mov
pop
xchg
fldt
jmp
lds
je
mov
stos
nop
xchg
arpl
inc
add
test
push
jl
add
hlt
jnp
testl
ficoms
fcoms
in
pop
push
or
aad
mov
add
mov
xchg
lret
dec
and
aas
fildl
jne
add
sub
dec
add
ret
jne
movsl
fcomp
mov
push
test
repz
or
and
push
scas
movl
dec
pop
test
xor
adc
enter
xor
lret
mov
mov
imul
cmp
xor
stc
push
xchg
rorb
mov
insl
xor
mov
cld
stos
and
mov
cmc
stc
xorb
std
inc
or
cmc
rcrl
mov
mov
lods
mov
out
in
rorb
push
push
aaa
cmpl
xor
sub
in
and
aas
push
sbb
mov
pop
xchg
push
ljmp
les
mov
mov
js
mov
dec
inc
mov
push
jne
sbb
insb
jno
fxch
push
mov
xchg
mov
dec
inc
mov
outsb
add
mov
mov
push
adc
cmpsl
cmc
dec
add
dec
mov
sub
xlat
fwait
pop
scas
pop
nop
jecxz
in
inc
or
mov
pop
xor
mov
cmp
inc
mov
ror
sbb
add
push
aaa
jle
andb
fcmovnu
xor
cs
and
out
repnz
fwait
imul
adc
cmp
mov
enter
add
jmp
sbb
mov
andl
push
and
push
and
add
cmp
ret
sub
xchg
mov
pop
push
mov
notb
xchg
push
dec
loopne
incl
ss
inc
inc
inc
pusha
cmpsb
adc
nop
shlb
cmpb
andb
jg
je
andb
lds
pop
jg
shrl
out
pop
push
sbb
fst
call
std
into
pop
xor
mov
mov
loope
lret
xor
mov
das
jge,pn
testl
fiadds
pop
bound
out
fldt
xlat
mov
pop
or
sub
subb
mov
xorl
jecxz
ror
pop
xor
sbb
shl
cvtps2pi
cwtl
push
nop
xor
pop
adc
aad
pop
enter
mov
cmp
lcall
adcb
mov
das
sub
cmovne
or
sub
aam
or
xor
xlat
cmp
or
xchg
test
adc
cmp
ja
cmp
ret
jg
inc
int3
out
push
lcall
stos
xchg
dec
pop
sbb
adc
imull
add
repnz
mov
loope
lds
or
imull
pop
shl
leave
cmp
stc
mov
out
outsl
out
pusha
test
xchg
sbb
add
xchg
call
daa
jne
pushf
out
and
daa
mov
stc
repnz
push
rol
lahf
push
lahf
mov
add
orb
and
aaa
mov
mov
inc
jecxz
fsubs
hlt
and
inc
shrl
shl
shrb
push
int
or
fwait
subl
cmpsl
cvtps2pi
pop
fs
xor
cwtl
inc
cltd
dec
cmpsl
jne
add
movsl
push
scas
sbb
and
sbb
popw
pop
ja
lds
adc
xor
fucom
aas
loopne
cli
inc
inc
mov
clc
xchg
dec
imul
movsb
leave
out
mov
dec
add
cmp
stos
sub
imul
add
sarb
das
subb
pop
enter
push
shl
loop
cmp
jnp
or
movsl
out
fcomp
outsl
jge
mov
cli
and
popa
out
adc
inc
loope
in
cltd
mov
mov
or
or
pop
out
jns
cmp
pop
out
ljmp
cs
push
shrb
xchg
xor
xor
rclb
add
and
cwtl
imul
repz
testl
fucom
das
add
add
pop
dec
movsb
fldlg2
fsubp
ja
jns
cmp
or
stos
mov
dec
or
lods
insl
adc
stc
daa
mov
pop
jnp
cmp
movsb
sbb
insb
jae
in
jbe
ss
imul
test
lock
pop
inc
and
xor
pop
or
mov
addr16
lret
mov
jge
xor
rcrl
mov
lods
int
subb
adc
push
popa
inc
enter
mov
cmp
jne
lahf
cmpsb
cmpsb
mov
push
mov
sbb
std
jns
push
test
stc
loop
mov
lods
and
mov
ja
add
nop
and
dec
xor
subl
das
inc
mov
outsb
push
test
sub
push
ficomps
imul
cwtl
add
jg
out
inc
pop
sub
js
cmp
aaa
pushf
mov
jmp
fldcw
xchg
sahf
xor
pop
into
ljmp
add
das
pop
push
cmp
mov
dec
je
std
jo
dec
pop
ds
mov
or
sti
dec
out
inc
push
hlt
adc
adc
leave
ss
jge
push
loopne
pop
fs
leave
fsubrs
jb
stos
xor
push
sbb
in
mov
add
or
or
inc
in
dec
in
sbb
xor
rcr
jno
notb
mov
in
sahf
mov
adc
push
daa
leave
xchg
adc
daa
sti
jnp
mov
rcrl
scas
aaa
mov
out
data16
and
mov
out
mov
mov
and
rcll
ja
add
mov
mov
xor
nop
scas
adc
mov
and
cwtl
cltd
cltd
cmc
aam
and
push
in
das
ret
add
push
inc
or
stos
mov
and
sub
sub
test
xchg
pop
rolb
dec
push
jns
movsb
scas
or
in
adc
dec
rorb
dec
sti
sbb
addr16
cmp
mov
pusha
ret
sahf
dec
pusha
and
xor
lcall
rcl
mov
ljmp
push
add
ret
mov
inc
jecxz
addr16
mov
push
inc
call
or
mov
int3
lea
adc
xchg
test
sub
into
sbb
gs
aad
add
lods
int
mov
pusha
hlt
pop
inc
dec
mov
bound
push
adc
xlat
loop
pusha
push
xor
sub
fcmovne
mov
mov
out
repnz
push
in
pop
pop
std
dec
cmp
faddl
movsb
lods
jns
mov
fisttpll
popf
adc
dec
mov
and
jecxz
push
xor
lods
sub
sub
mov
loop
push
mov
xchg
and
loop
xor
mov
add
dec
xor
loop
out
addr16
pusha
add
ds
pop
inc
mov
ficoms
fsubl
ficompl
dec
sbb
pop
and
pop
add
lds
test
sbb
push
pop
sub
dec
dec
daa
mov
pop
aas
inc
pop
pop
mov
into
ret
aad
mov
jne
cwtl
pop
addr16
mov
stc
jge
test
fiadds
pop
cwtl
fstpt
cmp
dec
pop
xchg
and
inc
sub
movsb
mov
mov
dec
inc
aad
sbb
xchg
mov
mov
bound
daa
ds
faddp
add
data16
jns
jb
dec
xlat
ljmp
pusha
rorb
dec
lret
fldt
xchg
push
faddl
adc
stos
out
xchg
iret
ret
fs
jmp
aaa
ret
imul
xor
and
out
xchg
or
inc
push
pop
in
adc
fcoms
jno
mov
xchg
adc
xor
xor
mov
loopne
jnp
mov
inc
mov
cli
mov
add
push
xchg
repnz
ret
jae
loopne
frstor
es
stos
dec
loope
in
sbb
pop
stc
xor
sub
cmp
pushf
dec
ret
push
test
push
dec
xchg
ret
mov
push
aad
cltd
dec
jecxz
call
adc
dec
xchg
mov
sbb
dec
dec
xor
jl
enter
cs
lret
push
xor
xchg
xor
push
movsb
add
and
pop
aas
pop
dec
outsb
xchg
push
fsts
in
mov
mov
jne
xchg
xchg
sahf
rcl
out
cli
movsl
push
imul
xor
in
mov
iret
jmp
cmpsl
dec
push
inc
loop
or
and
cs
lods
js
cwtl
out
push
fstl
jg
les
cmc
pop
jle
aam
das
loope
arpl
in
daa
push
jmp
scas
dec
je
rcrb
addl
iret
sbb
jo
xor
sub
or
sub
push
jnp
dec
jl
stc
out
cwtl
vpsubq
loope
iret
mov
loope
test
aad
push
imul
xchg
sbb
and
clc
pop
dec
sarb
xor
int
test
sub
jne
inc
shrl
or
pop
or
mov
pop
pop
out
pop
or
pop
je
sub
popa
dec
adc
mov
orl
jae
xchg
sbb
push
push
ds
repnz
imul
repnz
and
mov
data16
lret
sub
and
stos
icebp
pop
push
insb
xor
call
das
xor
int
icebp
push
or
leave
repnz
push
js
push
sbb
xlat
cmp
fmull
xor
lea
hlt
cmp
mov
jnp
popa
push
and
sar
or
clc
and
ss
loopne
adc
inc
inc
das
dec
mov
xor
repz
pop
sbb
dec
icebp
icebp
mov
adc
int3
lret
jl
ret
lea
ja
jmp
jg
dec
loope
sub
mov
nop
mov
sub
and
imul
aam
pushf
aad
daa
iret
mov
pop
sti
push
imul
sti
shlb
in
push
push
call
jns
out
loop
sti
jl
jp
lods
enter
jo
outsb
out
es
or
sbb
or
aam
or
mov
fwait
enter
outsl
pusha
les
lds
sbb
imul
cmp
and
lret
fdivrp
test
pusha
movsl
pop
xchg
mov
das
stos
sar
cmp
out
repz
adc
or
aas
mov
jbe
scas
repz
cwtl
fcomp
pop
cmc
fsts
out
sub
cmpsb
jae
das
and
cmp
push
cmpsb
ucomiss
fstl
pop
arpl
enter
xchg
xor
repnz
dec
imul
inc
and
iret
jmp
sbb
in
jp
pop
and
rcl
repz
les
push
clc
rcrb
inc
mov
in
sbb
enter
xor
jmp
shll
xchg
mov
inc
push
push
jmp
xor
insl
call
std
jecxz
leave
mov
push
dec
fs
push
popa
aas
dec
sub
lcall
js
push
neg
jmp
pop
test
test
sub
fbstp
scas
push
adc
mov
inc
mov
push
lahf
ds
inc
inc
std
mov
cmp
sbb
push
add
mov
cmp
dec
nop
sub
sub
push
dec
jp
mov
mov
or
dec
popl
sub
out
pusha
sbb
icebp
test
and
jg
cmpsl
mov
pop
or
fwait
imul
mov
push
lahf
sahf
leave
sbb
xor
fildl
or
lea
add
pop
cmpsl
push
out
sti
adc
data16
shlb
sar
push
sbb
push
sub
inc
jg
sbb
int3
add
pop
mov
pop
mov
loop
roll
inc
sub
andb
sub
mov
dec
adc
or
mov
lea
lret
xor
sub
mov
xchg
push
mov
ds
cltd
cli
mov
ret
ljmp
pop
aaa
mov
lds
xor
xchg
out
shr
je
mov
sub
pop
sbb
out
dec
jbe
adc
ret
imul
sub
jl
push
ret
insl
or
xchg
push
fstpt
add
into
mov
push
mov
iret
adc
lods
in
lcall
adc
lock
xor
adc
mov
dec
jnp
sahf
sbb
leave
sbb
sbb
insl
mov
sub
jb
mov
cmp
and
jmp
add
dec
xlat
fbld
or
push
bound
cmpsl
jne
adc
aas
mov
mov
in
ret
stos
iret
or
shl
shlb
add
test
xor
jne
sbbl
imul
and
iret
xchg
mov
shl
dec
test
ficompl
in
aas
mov
lods
enter
adc
push
push
add
xor
std
leave
pop
cmpsl
sbb
mov
sbb
push
add
xchg
test
mov
test
pushf
repz
ljmp
rolb
sbb
xchg
mov
sbb
rorl
jb
test
xchg
and
andl
inc
gs
add
in
sub
sbb
mov
inc
addl
daa
mov
int
and
jmp
mov
xor
loop
jle
inc
sub
xchg
out
or
lret
inc
js
pop
mov
sub
insl
and
cmp
ja
cs
fldcw
push
dec
out
fwait
insl
push
adc
loop
inc
xchg
lock
cmp
test
sub
mov
sti
adc
imul
sub
add
bound
fistpll
scas
pop
je
and
sub
lahf
leave
stos
ljmp
pop
lret
sub
jae
mov
cmp
add
mov
adc
enter
imul
jp
cmp
in
sbb
lcall
fcoms
dec
stos
mov
xor
lcall
inc
xor
push
mov
sub
push
mov
jge
cmp
inc
sahf
bound
scas
inc
xchg
jae
push
add
inc
dec
jge
stc
jp
mov
and
icebp
repz
add
or
dec
push
test
pusha
shl
push
sbb
ret
inc
loopne
ss
fninit
ret
xchg
outsb
cmp
and
roll
mov
pop
stos
repnz
cli
dec
inc
adc
mov
int
call
or
ficomps
in
jg
mov
dec
pop
jns
cmp
loop
inc
mov
dec
inc
xor
jg
push
sbbl
fstpt
mov
add
jb
xor
adc
cwtl
test
int
inc
outsl
stc
adcb
jbe
roll
cmp
aam
insl
int3
out
in
or
cmpb
bound
jns
dec
xchg
lret
xchg
jae
stos
ss
or
shrl
xor
pushf
add
push
ja
jae
and
fidivl
out
insl
pop
push
lcall
imul
imul
outsl
inc
or
add
sub
mov
and
adc
shr
enter
imul
push
or
lods
jl
fistpll
push
movsb
hlt
lea
inc
push
cmp
push
fidivrl
push
jl
test
xchg
in
sub
push
xlat
xchg
and
mov
mov
mov
mov
in
call
sub
or
add
repz
push
outsb
test
pop
rcll
out
dec
nop
mov
push
push
pop
stos
fs
adc
stos
mov
pop
pop
rolb
mov
sbb
inc
lcall
or
sti
jp
mov
jecxz
loopne
jne
mov
roll
or
mov
inc
jno
add
jecxz
icebp
stos
cmp
and
jmp
movsl
xchg
xchg
jmp
push
dec
pop
cmp
and
stc
in
or
adc
cltd
jne
sbb
jns
adc
loope
nop
in
test
aaa
insl
jbe
xor
push
mov
jo
stc
outsb
jle
mov
cmp
idivb
xor
xor
jae
or
shll
icebp
loope
cmp
xchg
sbb
xor
mov
rorb
mov
popf
aas
adc
rcrl
pushf
into
leave
push
cmp
pop
add
cmpsb
test
jb
fs
sub
xor
fisttpl
pop
out
mov
mov
lds
cld
std
adc
cs
mov
dec
push
mov
sbbb
imul
cmpsb
dec
inc
stc
addr16
mov
pop
cmp
sub
hlt
popa
std
pop
jmp
jae
es
lar
arpl
mov
mov
insb
and
lret
push
adc
jo
pop
push
leave
push
inc
mov
es
out
xor
lcall
add
mov
xor
imul
mov
or
idivl
lret
movsb
jp
cmp
rorb
rcrb
testl
inc
mov
cli
and
mov
out
cwtl
jl
jp
xchg
pop
inc
sub
lahf
lock
aaa
arpl
sbb
adc
stos
mov
dec
pop
mov
xlat
cwtl
sti
les
mov
mov
clc
jmp
pop
mov
pop
mov
or
xchg
sub
lock
lea
fmull
xor
sbb
pop
loopne
gs
cmp
sahf
pop
xor
pop
xchg
lret
xchg
push
shll
outsb
dec
ss
jecxz
hlt
xor
inc
hlt
stc
pop
pop
mov
mov
loopne
shlb
cmp
add
ja
pop
sub
push
inc
fxch
stos
jo
pop
mov
xchg
std
mov
mov
popa
mov
test
pop
add
push
cmp
testb
fbstp
ret
fprem
sub
pushf
adc
push
inc
push
or
loop
jno
mov
mov
les
shr
cmpsb
shll
adc
cmc
es
mov
imul
aam
rclb
jge
add
insl
faddl
add
xchg
mov
mov
push
add
mov
nop
mov
mov
in
sbb
les
push
data16
jno
das
push
repnz
push
cmp
jge
out
mov
or
aam
xor
inc
adc
xchg
mov
mov
push
add
jg
and
fwait
test
mov
jge
jmp
imul
xchg
addr16
mov
lods
pop
fisttpll
lcall
loop
pushf
test
cld
mov
add
int
cmp
push
sbb
mov
dec
or
stos
mov
sbb
jno
inc
xor
int
push
sub
xor
cld
ret
adc
push
lock
jg
in
adc
add
aad
push
enter
cld
sbb
push
ljmp
mov
scas
pop
xchg
loopne
add
xchg
dec
mov
inc
pop
jmp
xlat
adc
pop
cmp
ret
icebp
cmp
fistpl
lds
imulb
mov
cltd
xchg
mov
cmpsl
or
mov
mov
push
mov
sub
addr16
jb
sbb
cmpsl
xchg
shll
xor
aam
inc
push
lods
inc
popw
into
loop
sahf
or
ret
pusha
xchg
add
xchg
dec
popf
adc
or
test
or
lds
add
stos
stos
daa
out
insb
loopne
cmpsb
sub
cmp
loopne
jne
pop
mov
jle
outsb
ret
in
stos
xchg
jge
jb
stc
fstl
inc
xchg
aas
outsb
int
rol
push
dec
add
loopne
inc
mov
test
and
mov
pop
xchg
insl
sbbb
roll
sub
rorb
jae
sbb
dec
push
push
icebp
les
mov
mov
pop
mov
push
jo
rcl
aam
pushf
push
cmp
repnz
gs
mov
jae
ja
jmp
inc
cli
sub
mov
mov
scas
lods
cmp
jnp
sub
dec
mov
pushf
dec
jmp
out
inc
mov
arpl
jge
jp
mov
mov
scas
push
sti
xchg
and
subb
mov
aad
stos
rolb
scas
insb
push
jge
push
pop
fwait
insb
mov
in
ficoml
add
movsl
adc
adc
icebp
test
mov
push
mov
inc
movsl
dec
adc
rolb
test
push
das
jne
push
clc
icebp
iret
stos
movsb
cmp
or
repnz
mov
es
lods
xor
jae
cmp
jg
call
cmpsb
pavgb
add
inc
and
mov
mov
imul
jecxz
jne
sub
mov
rcll
mov
sub
lahf
popa
test
sahf
inc
xchg
mov
or
pop
out
sub
add
scas
pop
in
dec
dec
or
jno
mov
mov
add
ljmp
or
sbb
fdiv
lods
and
pop
mov
imul
sub
je
cmc
jl
sbb
call
test
or
bound
pop
xor
arpl
fbld
shr
cmc
mov
and
nop
insb
push
ljmp
mov
lods
xchg
call
aad
outsl
xchg
in
flds
sub
jmp
and
rorb
mov
cli
pusha
cwtl
mov
xor
aas
arpl
sub
ss
push
movsl
mov
movsl
cs
pop
sub
cmp
push
repnz
adc
loope
hlt
out
jge
sahf
xor
loope
mov
adcl
sbbb
cmpsl
repnz
sub
dec
sahf
push
dec
inc
sti
arpl
movsl
sbb
add
loopne
dec
pop
fs
xchg
imul
inc
mov
ljmp
repnz
cli
and
cmp
add
mov
xor
clc
or
movsb
cmpsl
xchg
fwait
mov
negb
jb
jno
jne
sub
into
jl
inc
mov
fs
jecxz
test
mov
fwait
xor
inc
cld
inc
imul
push
xor
cli
iret
dec
xchg
insl
jl
shrl
dec
xor
cmpsl
fldenv
jge
sbb
mov
nop
xchg
dec
xor
xchg
stos
sbb
sbb
push
scas
shrl
test
jnp
das
jge
popf
jo
or
jno
loop
cmp
out
repz
rcl
rcr
and
sbb
mov
jp
pusha
cmp
fcmovnu
add
inc
adc
pop
gs
sbb
cmp
mov
jae
xchg
ret
addl
sub
mov
jae
mov
xchg
xor
xchg
push
cmpsb
sub
mov
or
std
and
push
pop
xchg
adc
mov
push
mov
leave
pusha
ffree
mov
mov
xor
mov
xor
cmp
fnstcw
gs
jmp
repz
pop
nop
pop
dec
cmpsl
ljmp
inc
adc
push
inc
add
mov
xor
cmpsb
pop
xchg
sub
inc
jnp
pop
mov
in
dec
push
in
mov
and
cld
pusha
stc
jle
jp
add
sub
add
push
cmp
mov
jae
in
jmp
jle
cs
popa
lea
pop
iret
xchg
inc
jecxz
pop
scas
pop
mov
cmp
sbb
das
inc
adc
lds
jmp
xchg
aaa
adc
sbb
sbb
push
push
pop
add
je
xchg
lcall
add
mov
mov
sbb
pop
daa
dec
in
mov
push
push
or
aam
ljmp
cmp
sub
push
and
jl
mov
pop
push
incl
inc
popa
jns
jp
inc
data16
mov
inc
inc
lret
gs
xor
xchg
mov
aas
loope,pn
pusha
cmp
adc
int
sub
bswap
ret
cwtl
mov
pop
xor
hlt
jmp
cld
jno
pop
out
push
xor
ljmp
mov
call
dec
fnstenv
andl
inc
xor
xor
repnz
or
jg
add
dec
mov
pop
lcall
sbb
and
dec
pop
jae
iret
adc
dec
xor
sbb
dec
and
aaa
jo
popf
test
add
and
and
jp
jns
jg
mov
sbb
jle
fstl
mov
add
sbbl
cmpsb
push
andl
inc
dec
out
pop
xchg
jae
push
in
jnp
jno
pop
xor
jg
add
int
roll
les
xchg
fbstp
call
in
sbb
add
lods
jbe
popa
push
xor
test
xchg
adc
dec
and
or
pushf
or
fwait
ljmp
jo
inc
or
test
int3
jns
sahf
out
outsl
push
adc
loopne
mov
daa
push
arpl
in
mov
cmp
sbb
ljmp
cld
pop
pop
or
shlb
arpl
xor
jnp
enter
mov
xorb
and
movsb
and
test
xor
push
cltd
ret
movsb
xchg
xlat
push
and
cmp
mov
dec
and
movsl
flds
mov
shrl
pop
mov
sub
adc
xor
jnp
std
cmp
shrb
inc
jmp
call
jbe
mov
mov
das
xlat
scas
cmp
push
add
xchg
cld
pushf
subb
dec
inc
sarl
sbb
lock
pop
xor
mov
jge
or
in
mov
daa
aam
outsl
aad
xor
inc
lcall
cli
cltd
loope
stc
in
xor
jbe
xchg
push
cmp
cmc
mov
lret
dec
lock
dec
leave
push
shrl
fsts
xchg
shlb
stos
daa
je
daa
lret
mov
lret
pop
jne
jmp
add
mov
mov
xchg
mov
mov
shr
xchg
movsb
jne
fwait
push
fistps
call
clc
out
sbbb
fcompl
mov
sub
mov
lea
cltd
jno
push
and
xchg
mov
roll
pop
hlt
insb
sub
cli
dec
cmpl
iret
and
jge
push
adc
pop
xor
xchg
mov
inc
es
xor
sbb
sub
mov
sbb
leave
out
mov
cli
push
dec
lahf
fmuls
push
push
mov
out
inc
ss
dec
sub
cs
push
cmp
gs
in
in
mov
add
cld
inc
lods
or
inc
ret
inc
inc
xor
inc
loope
adc
push
ficomps
pop
dec
adc
test
push
cwtl
adc
or
or
sti
or
jmp
add
push
mov
inc
sahf
std
xchg
cli
je
and
pop
lock
ja
cmp
rolb
add
xchg
jne
lods
or
rclb
mov
add
cmp
xor
jg
dec
rolb
push
divl
push
sbb
ud0
jne
mov
add
dec
ret
lods
xor
pusha
sbb
leave
shll
out
lds
aad
xchg
mov
repnz
aad
cmpsl
arpl
push
lret
fcmovbe
jge
pop
or
out
fs
mov
ljmp
inc
push
add
cmpsl
fldenv
out
sbb
and
mov
jnp
or
outsb
pop
add
jecxz
nop
or
addb
push
mov
sbb
lret
mov
scas
cmp
lret
or
scas
dec
dec
add
push
xchg
mov
mov
push
push
ficoms
insb
outsb
flds
loope
cmpsl
dec
mov
mov
jmp
out
dec
lret
adc
cmc
adc
cmpsl
lcall
push
xchg
js
fiaddl
scas
mov
and
and
mov
add
jb
shrb
sub
jno
fldcw
jb
loope
cmp
mov
add
mov
or
stos
pop
jns
mov
mov
sub
jns
outsl
pushf
sub
push
mov
movl
mov
insl
mov
jg
adc
test
push
repnz
jp
sarb
xchg
sub
mov
lods
lea
fildl
dec
inc
mov
or
inc
insb
sahf
lea
lock
jns
pop
cmp
fwait
pop
cmp
xlat
jmp
cld
lods
or
out
mov
xchg
inc
sbb
dec
loope
cmpsb
mov
dec
nop
inc
xor
xor
inc
jno
or
decl
mov
xchg
call
dec
jle
lahf
adc
aas
stos
mov
or
test
fcomps
dec
aas
nop
fistpl
push
inc
scas
hlt
push
xchg
inc
pop
cmpsb
xor
inc
cmp
mov
xchg
mov
cwtl
lahf
test
xor
xchg
js
lahf
mov
cli
xchg
lcall
mov
lock
test
jmp
mov
push
mov
sub
lahf
xchg
lds
outsb
sbb
cli
enter
push
jecxz
inc
cld
rorl
in
push
jp
mov
cmpsl
xchg
outsl
xchg
mov
scas
cld
popa
cmp
xchg
adc
xor
int
mov
push
insl
push
aad
test
sub
xchg
pop
cmpl
sar
popf
xlat
mov
xchg
ror
cwtl
pop
out
mov
dec
push
pop
loop
mov
and
das
xchg
into
mov
dec
xorl
mov
sub
lret
je
xor
jl
mov
imul
loope
sub
jo
or
push
psubsw
push
dec
insb
mov
pop
xorl
ljmp
je
pop
cmc
mov
ja
jb
pop
ja
mov
filds
filds
mov
mov
lcall
daa
pop
inc
lds
push
test
pop
xchg
popa
arpl
imul
rclb
lahf
xor
mov
je
cwtl
push
and
pop
mov
lods
cmp
cmp
sbb
enter
lret
xchg
shlb
das
pop
aam
pushf
mov
mov
shlb
insl
cwtl
mov
pop
sbbl
cmp
mov
sub
and
dec
mov
fimull
lret
mov
add
or
dec
nop
jnp
inc
repnz
add
inc
jecxz
loope
lcall
cmp
pop
cmp
cld
outsb
xchg
mov
adc
mov
lret
mov
mov
jmp
jo
je
pop
and
rcrb
mov
and
addb
or
inc
mov
lds
pop
aad
test
lahf
in
pop
fsubrp
adc
pop
aam
adc
add
mov
movsb
ret
push
dec
gs
or
mov
mov
lret
notb
repz
xchg
fcoms
xchg
cmpsb
out
dec
dec
sti
or
div
subb
in
mov
popa
in
je
loopne
sbb
adc
insb
jnp
cmp
cmp
inc
nop
push
sbb
fisttpll
pop
jmp
icebp
fld
jns
mov
xchg
xor
xchg
adc
push
in
add
lds
adc
sbb
push
std
fcoml
mov
push
jmp
and
outsl
ljmp
repnz
inc
data16
scas
and
lcall
push
into
xchg
in
dec
fmuls
stos
pushf
ret
add
sti
movsl
mull
dec
negb
sti
test
lret
dec
sti
in
and
mov
push
pop
and
push
pop
lock
arpl
xor
mov
and
add
push
orb
or
lret
enter
adc
pop
sub
popf
pop
popf
xlat
mov
in
mov
filds
mov
sub
add
aad
xchg
lcall
hlt
cltd
sti
or
int3
adc
int
rorl
rcll
imul
ds
jo
dec
mov
mov
xchg
mov
inc
ret
jb
inc
outsb
and
push
into
sub
sbb
or
inc
lods
test
jge
and
lahf
xchg
adc
aad
popa
sbb
push
jae
loopne
inc
push
int
jecxz
nop
lea
lret
add
shll
push
inc
pop
pop
xor
in
push
xor
aas
stos
or
sbb
sbb
mov
adc
xchg
mov
pop
add
jbe
int3
test
sub
mov
and
add
ret
adc
cmovp
cmp
jno
into
pop
scas
stos
push
cld
cmc
scas
test
cltd
sbb
ja
lods
out
cmp
sti
je
jp
imul
jl
es
fsubs
scas
gs
lret
push
mov
jbe
push
mov
jp
add
jp
sbb
test
outsb
test
mov
aaa
lret
mov
insb
adc
jl
cmc
jbe
and
loope
es
lea
jns
mov
jb
adcl
outsb
arpl
and
mov
ror
dec
or
mov
cmpsl
dec
push
cmpsl
imul
out
jmp
mov
testb
inc
neg
imul
das
insl
fstps
jp
cmp
repz
and
fstps
les
push
cmp
sti
rcll
and
pop
mov
add
xor
lds
push
cld
out
inc
cmp
add
repnz
pop
adc
xor
cmp
inc
xorb
mov
sti
xchg
lds
insb
xorb
and
dec
mov
dec
mov
or
and
jge
or
xchg
mov
inc
das
popl
ss
dec
daa
jmp
mov
mov
insb
xchg
test
stos
out
lea
dec
jae
nop
push
sahf
and
push
mov
scas
dec
movsb
mov
inc
mov
cmp
xor
cmp
lea
aam
cmp
lret
and
xchg
fs
lahf
mov
loopne
icebp
int
rclb
cmp
pop
or
movsl
mov
fwait
inc
and
sub
inc
push
cmp
mov
jbe
lahf
mov
push
xchg
sbb
out
in
add
push
or
cmp
inc
dec
cltd
mov
adc
inc
inc
mov
hlt
push
dec
push
sub
out
cmp
dec
mov
sub
xchg
adc
cld
rorl
aam
mov
imul
xor
js
or
pop
add
cs
clc
mov
popf
xor
ljmp
fisubrs
xchg
xchg
stc
movsb
xor
hlt
aaa
shrl
pushf
push
testb
les
lret
clc
stc
and
cltd
aad
or
add
cmp
aad
jecxz
sbb
dec
and
push
test
pusha
pop
xor
imul
mov
mov
les
jmp
adc
test
xor
inc
jge
cmp
add
xchg
ljmp
shl
pop
imull
push
push
call
shr
aaa
test
pop
fldcw
je
in
cmc
lret
popf
add
xor
push
pop
test
pop
jae
xchg
xchg
ja
adc
cmp
adc
scas
ss
push
pop
roll
jmp
fldenv
mov
jle
ds
xor
xorb
cmp
pop
jge
mov
insb
add
les
jge
adc
sbb
pop
fdivrl
fs
jp
mov
jmp
repz
fldt
push
pusha
lods
in
jl
mov
adc
je
xchg
cmp
lahf
dec
std
aas
xchg
and
cmp
movsb
lcall
mov
shll
xor
sbb
sub
into
mov
iret
lods
xor
addl
std
mov
cli
movb
js
pop
cs
add
push
decb
das
push
mov
aaa
add
jnp
aad
les
xor
dec
jle
jo
jns
pop
nop
add
movsb
leave
add
xchg
dec
in
add
dec
xor
cmpsb
fisttps
pop
xchg
add
popa
into
xlat
inc
sub
inc
sahf
popf
add
jecxz
xchg
test
pop
andl
jnp
xor
rclb
cmp
mov
and
ret
adc
mov
xchg
pushf
cmp
lret
mov
mov
adc
sbb
cmp
jge
jecxz
mov
pushf
adc
cld
xchg
mov
jge
push
and
leave
pop
sub
fsts
adc
dec
popf
iret
mov
out
into
iretw
adc
mov
jg
pop
pusha
mov
insl
mov
sub
inc
lods
add
push
call
cmp
cmp
jb
jb
xchg
mov
jnp
pop
cmp
xchg
push
rsqrtps
loope
jae
pop
dec
adc
dec
mov
pushf
adc
inc
inc
ret
add
mov
mov
out
scas
pop
mov
mov
pushf
inc
stos
pop
cmp
lds
lret
push
and
fldl
loopne
push
mov
and
test
fdiv
in
dec
mov
imul
or
sbb
js
adc
jbe
subl
xchg
inc
xchg
sub
push
xor
pop
mov
pusha
scas
push
fidivl
bnd
adc
dec
jl
push
or
jns
push
addb
loope
into
stos
testl
xor
sub
icebp
lret
dec
pop
or
sub
sti
xchg
sbb
push
mov
lods
pop
pop
icebp
pop
ds
mov
cli
daa
cmp
or
and
jne
push
nop
fmuls
bound
cltd
loop
int
mov
popf
and
inc
xorb
sub
mov
or
xchg
dec
sub
dec
in
lods
icebp
mov
mov
sbb
and
lock
rcll
add
aaa
cmp
in
imul
pop
stc
inc
or
dec
pop
sbb
push
mov
push
push
jnp
repnz
or
ret
daa
test
test
mov
adcb
cmp
xor
jg
ss
lcall
out
jp
fs
fsubrs
fsubs
adc
mov
sbb
idivb
dec
xchg
aad
test
aad
xor
xchg
jecxz
and
push
pop
xchg
repnz
jl
mov
add
mov
cmc
mov
or
cmp
arpl
push
hlt
xchg
jmp
dec
mov
pop
subl
mov
add
fbstp
psllq
lods
lods
in
lret
ret
ucomiss
add
mov
addl
std
loopne
add
shl
mov
inc
out
inc
pop
dec
push
xor
push
in
jb
push
pop
test
pop
mov
sbb
or
xchg
in
pop
and
sbb
jp
sub
xchg
push
movsl
repnz
test
hlt
jge
out
add
add
pop
popa
rorl
enter
andl
clc
outsb
mov
adc
dec
ljmp
mov
rcrb
cmc
jge
pop
inc
pop
leave
std
scas
arpl
or
xchg
mov
iret
jmp
sub
hlt
dec
mov
push
outsw
jle
xchg
bound
add
add
shr
fsubrs
jl
pop
dec
roll
add
mov
jl
cs
pop
mov
or
sub
mov
dec
pop
ret
in
xor
test
lret
pusha
push
or
cmc
shrb
scas
push
fcmovb
ss
stos
arpl
aad
out
xlat
stc
scas
add
dec
pop
shll
lret
xchg
ss
lcall
insb
in
cmpsl
xchg
jge
xchg
pop
lret
cmp
ret
shlb
adc
out
call
movsb
test
ja
in
jne
add
mov
push
stos
or
lods
and
dec
sbb
arpl
test
adc
mov
mov
in
imull
loop
xor
lcall
pusha
pop
lock
xor
bound
imul
inc
in
sti
push
mov
ror
xchg
lods
aas
dec
jge
sub
mov
jns
cmp
xchg
jl
adc
aad
jb
adc
adc
xor
mov
cmpsl
inc
pop
inc
idivl
lret
les
jp
imul
mov
pop
or
clc
mov
inc
stos
pop
pop
enter
pop
cli
push
movsl
xchg
mov
mov
xchg
data16
lock
lret
mov
cmc
push
call
stos
ds
ret
aas
sti
in
pop
loopne
out
hlt
lds
mov
insl
mov
pop
fwait
jbe
inc
das
cmp
inc
std
mov
mov
mov
jp
imull
fdivrs
aad
jecxz
cmp
leave
cmc
or
insb
cld
stos
lea
inc
arpl
cmp
scas
dec
jg
push
mov
stos
sub
rcll
cmovae
rclb
and
out
and
clc
lea
aam
inc
addr16
push
clc
daa
js
test
in
sbb
cmc
sub
mov
scas
les
mov
and
out
sbb
in
mov
jmp
and
jo
cmovbe
leave
push
push
push
mov
pop
movl
sti
xchg
pop
sti
movsb
inc
imul
shlb
shr
rol
aaa
xor
and
lods
cmp
push
pop
dec
mov
imul
in
js
mov
outsb
cmc
fsubrs
sahf
shrb
jb
mov
mov
scas
les
int
xor
inc
jnp
repz
lcall
dec
scas
jmp
push
insb
cltd
mov
mov
lods
xchg
clc
sub
push
adc
cmp
roll
ds
jns
sarl
mov
jns
and
clc
sub
stc
stos
aam
mov
sub
push
sbb
xchg
or
xorb
cmp
push
xchg
cmpsb
push
dec
xchg
pop
inc
fsubl
xchg
rcrl
mov
pop
cmp
cwtl
mov
lret
jecxz,pt
pop
out
scas
in
inc
mov
and
inc
std
mov
addr16
verw
dec
rcrl
stos
dec
ret
fs
mov
mov
or
ljmp
dec
jbe
inc
fsubs
es
jg
inc
int
shll
loop
stos
ljmp
icebp
cmp
incl
jne
push
cs
push
jae
and
mov
mov
cli
out
addr16
push
and
fwait
sarb
xchg
clc
test
lret
popa
push
movsb
fsts
popf
outsl
rcrl
imul
push
movl
and
mov
sub
cmp
jae
pop
das
ss
xor
dec
inc
dec
loopne
mov
pusha
idivb
mov
push
xchg
jge
xchg
in
sbb
cmp
mov
pop
popf
xor
int3
out
adc
mov
aad
js
daa
xchg
sarb
mov
sub
push
sub
push
push
push
mov
stos
jge
adc
out
mov
push
inc
mov
lahf
mov
gs
and
jbe
cmpsl
fbstp
push
stc
popa
inc
or
lret
jle
pushf
icebp
add
mov
push
es
adc
pusha
jb
xlat
ljmp
incb
aas
test
dec
sbb
pusha
imul
or
mov
jmp
mov
xchg
or
dec
in
add
js
daa
lret
and
aam
xor
adc
ljmp
ret
mov
xchg
insb
mov
fwait
mov
adc
fwait
add
and
mov
mov
mov
les
mov
lds
mov
mov
lcall
lds
add
or
mov
dec
adc
xchg
and
xchg
ret
jmp
xchg
jne
cmc
loope
add
jnp
scas
mov
add
inc
arpl
jae
xchg
and
mov
insl
mov
cli
sub
cs
hlt
xorl
out
out
inc
out
data16
bound
lea
push
xchg
fpatan
pop
pop
call
or
jbe
push
sub
or
cs
mov
inc
test
sbb
aaa
sub
mov
push
xor
inc
xor
and
add
cmp
cmp
in
out
or
aaa
mov
lret
push
out
cmp
negl
mov
inc
push
arpl
mov
adc
and
add
pop
mov
dec
mov
repz
iret
pop
lea
lcall
mov
mov
and
jecxz
xor
popa
cmc
rorb
das
jae
mov
xor
add
cli
arpl
out
lock
das
inc
xchg
mov
scas
mov
je
daa
push
in
in
int3
test
inc
test
adc
adc
test
mov
adc
cmpb
xchg
xor
and
cli
sub
popf
sub
je
cmp
mov
imul
and
sbb
mov
mov
arpl
je
jmp
sub
sbb
sbb
push
lret
or
push
pop
xchg
dec
out
mov
out
les
mov
sbb
movsb
call
cs
jns
or
lods
vpor
das
push
dec
jle
lods
push
imul
pop
xchg
fistps
decb
out
imul
shl
push
sbb
cwtl
sub
mov
inc
fs
aaa
inc
dec
fsts
push
pop
int
jl
push
pop
pop
jbe
adc
mov
jbe
or
adc
push
icebp
xchg
mov
mov
add
mov
dec
pop
stos
jecxz
push
std
push
mov
loope
inc
leave
jae
push
setnp
jecxz
out
jp
out
popf
fnstcw
imul
rol
adc
loop
mov
out
mov
aas
or
test
subb
movsl
adc
gs
dec
jp
sub
sbb
push
dec
pop
clc
lods
repz
in
pop
mov
push
outsl
int3
jne
subl
imul
push
les
xor
dec
lods
jp
xor
test
fstl
or
scas
sbb
sub
aaa
scas
outsb
cmp
js
dec
fidivrl
out
dec
fcmovnbe
sub
ds
push
push
mov
andb
xchg
cltd
jno
inc
jp
push
insb
push
dec
pop
cmpb
mov
fisttpl
xchg
das
lea
leave
fld
out
int
test
mov
sub
shr
outsb
cmc
test
shrb
jl
mov
lock
mov
mov
inc
std
jnp
xor
out
ret
xor
pop
mov
pop
pusha
cmpsb
cltd
int
sub
iret
int3
aaa
jecxz,pn
jmp
imulb
bound
rorb
mov
out
inc
jle
mull
out
daa
dec
js
adc
adc
or
sbb
add
mov
sbb
dec
insb
in
pushf
xorb
mov
inc
lea
pop
mov
inc
js
xor
mov
aam
ret
popa
movsb
mov
xor
and
mov
enter
bound
in
lods
imul
lock
or
lods
out
lods
mov
insl
dec
push
jp
add
xchg
addr16
and
dec
and
mov
insb
dec
mov
adc
mov
sahf
xchg
xor
cli
daa
push
lods
push
jecxz
out
jo
and
sbbb
sub
in
push
push
jle
xchg
nop
inc
add
dec
push
mov
test
xor
leave
fmul
mov
stos
adc
add
adc
jnp
jbe
mov
into
dec
inc
int3
in
xor
jne
mov
dec
push
cld
ds
jg
test
aam
cmpsl
icebp
or
cld
mov
cmp
dec
adcl
lds
js
aas
lock
addr16
jp
sbb
dec
cmc
sub
or
stc
insb
mov
inc
mov
shrb
and
mov
push
orb
or
stc
adc
xor
cltd
out
imull
mov
js
add
and
shlb
inc
mov
rcrb
jge
cmp
add
lea
push
adc
push
mov
xor
cltd
aad
and
das
faddl
push
sub
fidivrl
fistpll
fcoms
stos
adc
push
repz
dec
cli
xorl
fmuls
push
add
sub
inc
cmp
xlat
jle
mov
bound
sti
in
stos
aad
fsubr
stos
gs
sti
fwait
xor
push
or
cmp
push
jnp
inc
adc
aam
popf
daa
sbb
or
or
sub
xchg
fsubrl
aas
je
cmpsb
mov
sbb
jl
cmp
jne
pop
daa
jmp
divl
incl
sbb
push
sub
mov
cmp
movl
das
sar
push
mov
and
jmp
mov
loop
adc
add
dec
lods
cmp
or
sti
mov
push
jge
dec
movl
aas
push
int3
pop
inc
mov
or
rol
mov
sub
sub
cmp
push
xchg
ss
insl
cld
xor
es
push
xchg
out
inc
popf
ret
inc
stos
faddl
add
movsb
outsl
std
fildl
subl
outsb
sbb
in
ljmp
mov
lahf
es
dec
mov
and
les
repnz
fchs
pop
and
push
sbb
icebp
ds
shlb
bound
data16
jecxz
popa
aam
subl
xchg
aam
jns
jmp
rorb
lock
mov
mov
fmuls
scas
lret
mov
inc
jmp
stos
out
sbb
movsl
push
pop
pusha
mov
pop
leave
push
cmp
and
and
xlat
outsl
and
loop
lods
icebp
pop
mov
mov
pop
xor
mov
insl
adc
push
loopne
push
not
loope
inc
dec
xchg
xor
movsl
aad
add
ret
outsl
ret
dec
xor
and
add
mov
push
mov
dec
js
mov
fdivr
cmc
out
loop
jmp
js
cmp
aam
lock
pop
fidivl
nopl
mov
pop
inc
outsl
lock
add
std
stos
mov
cmpsl
inc
test
cmp
dec
inc
lcall
xchg
sub
cmpsl
lock
or
popf
lods
xchg
mov
or
or
loope
push
mov
dec
xchg
pushf
fldt
sbb
out
test
mov
sub
leave
pop
scas
or
sub
xchg
xchg
push
les
adc
cwtl
rorl
dec
rcrl
movsb
popa
adc
adc
je
add
dec
into
loopne
pop
xor
incl
sbb
sbb
push
mov
insb
js
rcr
lds
into
es
push
jbe
pop
mov
cmpsb
pusha
sub
jmp
and
inc
sahf
addr16
test
addr16
in
jle
pushf
inc
xlat
gs
enter
mov
inc
cs
sub
movb
prefetch
or
jl
mov
test
aaa
test
int
mov
hlt
out
and
hlt
dec
add
dec
arpl
mov
outsl
mov
lods
cmpsl
movsb
mov
push
sbb
ret
pop
mov
mov
fdivr
scas
lahf
cmpsb
sbb
dec
pop
pop
es
or
in
test
mov
ret
inc
mov
jb
jns
jb
pop
cmp
push
cld
fcomp
inc
ljmp
pop
lea
imul
es
rorb
movsl
fidivl
and
js
push
and
hlt
in
mov
jbe
mov
outsl
add
ja
ljmp
push
stc
in
pop
and
fidivrl
jle
out
push
add
xchg
paddusw
mov
lods
or
ljmp
data16
or
xor
ficompl
mov
or
xor
xor
test
xchg
and
or
pop
push
pop
mov
push
enter
dec
enter
aam
ljmp
leave
pop
or
mov
jp
pop
xor
xchg
push
or
movb
cmpsl
inc
fwait
cmp
aaa
call
mov
cs
xchg
pop
mov
outsl
stc
jnp
imul
out
arpl
jno
dec
jo
mov
mov
dec
or
and
dec
addr16
mov
roll
enter
js
sub
sbb
cmp
insb
add
push
sub
mov
clc
jns
jmp
aam
repnz
stc
hlt
dec
mov
std
mov
cwtl
push
mov
outsl
fisubrs
das
test
mov
pop
mov
fs
or
mov
ret
sti
inc
fnstenv
insl
and
inc
in
out
inc
xor
xchg
jo
lods
or
sbb
inc
stc
aas
mov
loope
pop
scas
cmc
bound
mov
adc
sbb
add
lahf
aas
push
rcll
sbb
stos
div
dec
insb
sub
and
jb
sub
and
push
and
popa
push
scas
sub
call
in
shlb
mov
mov
mov
dec
int3
sub
xchg
jge
or
xchg
outsl
mov
mov
outsb
ljmp
dec
mov
and
imul
test
jmp
dec
mov
jnp
shl
mov
sbb
adc
sbb
cmpsl
jle
repz
xchg
rorb
xchg
inc
mov
pop
cmp
addb
add
popf
push
mov
adc
jo
mov
fcmovnu
movsl
jmp
sub
subb
cli
arpl
cwtl
mov
xchg
push
lods
dec
jmp
clc
div
js
mov
or
imul
or
je
push
xor
imul
sarb
rcrl
and
fsubr
lea
xchg
pop
arpl
movsb
in
shll
jae
sub
cmp
lret
pop
rolb
cs
push
mov
inc
repz
bound
repnz
or
inc
subl
add
cwtl
inc
sub
mov
lret
or
es
in
xchg
cmc
push
push
push
out
cs
idivb
mov
add
imul
cwtl
ret
adc
jmp
inc
outsl
iret
lret
cmp
into
mov
mov
shll
pop
imul
dec
lock
movsl
adc
test
xchg
cmp
push
cmp
andb
enter
aam
push
test
pop
sub
imul
pop
pushf
cmpsl
or
fdivl
movsb
fistl
mov
and
ret
in
cmp
push
jmp
dec
lods
mov
inc
es
xchg
popaw
mov
aam
lret
mov
mov
nop
rol
out
mov
xchg
mov
add
mov
xor
loope
sub
xlat
mov
dec
icebp
jno
stos
in
enter
loope
imul
sub
ljmp
movsl
dec
cli
sub
sub
mov
adc
inc
push
leave
sbb
ljmp
mov
xchg
sub
jle
cmp
in
dec
xchg
inc
xor
out
std
imul
ficompl
in
scas
mov
and
xor
out
push
sbb
shlb
add
int
inc
shrl
scas
loope
sub
int
xchg
mov
xor
sti
cwtl
and
mov
lcall
dec
ficoml
fisttpl
fs
adc
push
jno
inc
push
incb
xchg
lret
idiv
movsb
xchg
adc
and
ljmp
and
lret
cmp
xchg
ljmp
inc
push
adc
lea
mov
pop
loopne
push
inc
lret
std
lea
test
andb
int
inc
and
and
xchg
mov
insl
scas
cmp
addb
cmp
in
ljmp
push
stos
dec
push
testl
test
mov
gs
push
cli
mov
out
mov
mov
and
sub
mov
mov
clc
sti
fstl
sub
rorl
jno
jle
int
push
sub
fwait
inc
ret
adc
mov
dec
out
aaa
das
dec
mov
jp
cmpsb
movsb
push
sbb
push
and
jae
adc
cmp
pusha
ljmp
sub
sub
fneni(8087
xchg
jl
push
fwait
jmp
jmp
jl
cmp
dec
push
ret
xchg
xor
mov
xchg
mov
arpl
out
test
inc
ljmp
and
imul
and
scas
dec
or
cmpsl
sbb
imul
xchg
aad
dec
jb
mov
testl
lahf
push
dec
dec
imul
cld
popa
xor
adc
pop
stc
daa
lds
or
aam
push
dec
out
adc
sub
fildl
sub
mov
in
nop
hlt
push
ja
aad
adc
popf
sbbl
loope
jmp
mov
push
and
mov
push
shlb
enter
push
xchg
clc
mov
sub
and
call
mov
mull
dec
cmp
adcl
jg
cmp
and
mov
mov
cld
inc
fsubrl
fisubs
xchg
fmuls
inc
repnz
inc
cld
shrl
mov
adc
jl
scas
add
adc
lds
les
add
rolb
mov
lods
pop
push
das
aad
cmp
clc
lcall
cmp
rcll
dec
jp
xchg
mov
dec
sub
aam
xchg
dec
or
andl
xchg
lcall
cmpb
sub
lods
aam
xchg
pop
push
jns
jl
jp
loop
das
xlat
push
daa
jecxz
fdivrp
xchg
subb
fistps
out
dec
add
xchg
push
xchg
push
outsb
jecxz
fsubr
addr16
mov
sbb
lds
fsubs
arpl
hlt
lret
ja
mov
outsl
outsl
loopne
test
cmp
and
icebp
sti
in
adc
pop
mov
jbe
xchg
mov
nop
or
jne
shll
in
cwtl
and
dec
xchg
mov
lahf
cmp
pop
iret
arpl
xchg
push
das
sbb
jo
inc
scas
jo
xchg
bound
and
popf
jno
mov
in
stos
xor
add
jo
nop
mov
orb
push
xor
clc
aaa
inc
sub
js
mov
cmpsb
mov
pop
mov
loopne
inc
lcall
aad
push
fiaddl
stos
leave
cld
movsl
xchg
divb
jge
addr16
inc
pop
cmp
mov
mov
cli
lcall
movsl
push
sub
jae
mov
or
call
mov
ror
scas
pop
xor
or
out
cld
pop
jbe
mov
inc
push
imull
inc
and
rcrl
cld
sti
pop
das
cs
addr16
insb
hlt
xor
mov
lds
jle
xlat
inc
and
jne
pop
cmpsl
pop
jnp
insl
ret
adc
xor
rcr
xchg
test
mov
cmp
inc
cmp
push
push
mov
push
mov
add
push
mov
cwtl
insb
int
imul
jl
dec
dec
jb
int3
pop
cmp
mov
enter
idiv
sbb
jb
xor
mov
icebp
mov
cmp
std
xor
jmp
aad
jae
sub
add
add
push
icebp
ss
loope
jo
das
icebp
push
ljmp
movsl
sbb
outsl
add
cli
shlb
fsubrl
sbb
or
aas
aas
sbb
in
inc
push
sub
xchg
gs
in
mov
les
cmc
movsb
push
fstl
or
mov
xor
xchg
push
popa
loopne
mov
sbb
into
es
lds
pop
jb
popa
and
inc
push
push
sbbl
fsub
and
clc
pop
mov
rcr
mov
aaa
cld
cs
pop
xchg
shl
and
xlat
movsl
mov
cmp
fiadds
sahf
out
pop
orl
cmpl
mov
imul
pop
insl
punpckhbw
das
repnz
pushf
xchg
inc
enter
fs
fnsave
dec
xchg
mov
push
xchg
dec
cmp
jae
xchg
sub
js
sti
and
int
lds
fs
out
mov
xchg
inc
push
sbb
scas
pop
cli
call
mov
inc
sbb
add
hlt
dec
push
cmp
jne
jb
ret
cmpsl
adc
sub
inc
call
sbb
mov
fldl
sub
decb
xor
movb
or
xchg
test
cmp
xchg
xchg
into
push
movsb
imull
imul
sbb
jl
imul
mov
xchg
int
jnp
cmp
pop
sub
inc
sarb
adc
aas
ds
ja
jg
push
imul
jb
shlb
jae
adc
xor
sahf
dec
dec
ja
mov
stc
fwait
bound
pusha
pop
dec
push
notb
daa
ficomps
negl
jmp
xor
mov
jno
cwtl
stos
negb
or
test
mov
push
je
shll
mov
lcall
dec
daa
int3
push
lahf
push
mov
dec
cld
and
and
sbb
xor
cmpsb
sub
lret
jnp
jns
jbe
cmp
mov
mov
push
pop
add
mov
fs
ljmp
lods
mov
aam
inc
popf
add
int
int3
iret
dec
lea
lock
push
pop
je
mov
inc
adcb
or
enter
lods
test
mov
test
movsb
orl
jo
rolb
lea
imul
or
fst
mov
gs
mov
test
into
setno
adc
xchg
sti
fmulp
jge
jmp
ljmp
inc
mov
stc
in
add
lahf
je
scas
add
int
imul
adc
cmp
in
ret
inc
jl
push
cmpsl
pop
in
jbe
sti
mov
add
jb
push
pop
inc
push
mov
adc
lcall
add
mov
sbb
dec
inc
imul
add
push
push
ss
pusha
mov
cmpsl
in
xor
stos
mov
jb
scas
and
pop
insb
pop
dec
jnp
and
fstl
imul
mov
das
dec
gs
dec
movsl
out
push
lods
sbb
mov
incb
loopne
mov
mov
sbb
out
jecxz
aad
cld
jnp
jnp
push
mul
xchg
add
dec
stc
sbb
mov
stos
inc
mov
push
push
xor
pop
cwtl
mull
insb
mov
jbe
in
pop
nop
add
cld
iret
dec
sahf
lcall
mov
pop
lods
sahf
add
icebp
fstp
icebp
cmp
mov
add
inc
dec
das
lret
sub
sti
fbld
add
mov
lahf
fldl
test
jg
out
les
mov
push
sbb
cmp
test
dec
sbb
fsts
bnd
ja
pop
aad
pushf
mov
jg
out
iret
decl
inc
sbb
subb
cmc
push
hlt
xor
scas
and
dec
and
loop
lods
es
dec
cs
xor
sbb
jb
loope
es
lea
mov
mov
fnsave
add
js
fcompl
les
mov
fnstcw
daa
inc
jo
ret
dec
cmp
and
ret
inc
xlat
jmp
lret
in
mov
lds
inc
outsb
fisttpl
in
or
aas
jg
xchg
aaa
ja
scas
mov
out
and
jb
test
mov
fidivs
int3
dec
cld
push
hlt
sbb
jb
pop
arpl
inc
and
rorl
js
cmp
nop
xor
je
pop
inc
push
jnp
jge
stos
fadds
inc
cmpsb
inc
fldenv
int3
inc
testl
mov
sub
rol
mov
sti
mov
imul
xchg
cwtl
mov
or
shl
jmp
mov
pop
rorb
add
xchg
sti
adc
scas
dec
inc
movsl
das
pop
mov
and
outsb
adc
sbb
mov
adc
fcomi
xchg
mov
es
jg
inc
cmp
movl
orb
cmp
or
loopne
mov
andl
call
mov
aaa
mov
xorb
jnp
push
mov
int3
jmp
adc
xabort
bound
lret
insb
in
inc
xchg
cmp
imul
fbld
pop
and
xor
cmpsb
sub
sbb
adc
push
cmpsl
xchg
stos
test
ficompl
mov
sbb
movsl
xchg
enter
movsl
stc
insb
xor
cli
in
xor
cmp
jno
xor
jge
stc
aas
pop
jmp
adcb
roll
sti
mov
mov
inc
es
xchg
inc
int
sbb
dec
jmp
inc
fiaddl
and
add
add
jmp
add
sbb
cmc
jge
sbb
lock
xchg
add
mov
jns
fnsave
push
xchg
inc
jle
aam
imul
popa
les
gs
leave
jo
push
add
pop
sub
mov
out
push
js
push
mov
push
xor
xor
push
pop
xchg
lock
mov
or
xchg
fcomp
pushf
mov
inc
gs
dec
cmp
xor
arpl
inc
in
cmp
mov
imul
xchg
nop
dec
mov
lea
mov
fs
mov
pop
or
out
push
outsb
movsb
pop
enter
notb
hlt
subb
or
dec
sbb
stos
dec
mov
xchg
xor
mov
cwtl
movsb
movsl
fcomip
jbe
sbb
xchg
fildl
mov
lds
fsubrs
pop
jb
cmpsl
call
jmp
mov
in
enter
adc
shlb
lea
cmp
adc
mov
sbbb
loop
pop
out
push
stc
movsl
cs
jno
sbb
mov
in
movsb
or
mov
leave
add
test
mov
fistpll
cli
sbb
push
push
cmpsb
push
mov
push
inc
xchg
mov
pop
pop
lock
outsl
pop
ret
fidivs
mov
lds
pop
cmp
fdivrs
hlt
inc
cld
adc
sub
xchg
ds
jle
add
xchg
cmp
nop
aam
pushf
hlt
sub
stc
jecxz
insl
fistpll
test
mov
jb
cmpsl
pop
dec
and
sbbb
lods
xchg
out
push
fisttpll
jb
lahf
leave
fwait
adc
ja
jge
add
adcb
xchg
stos
inc
lods
lcall
inc
dec
rcl
je
sbb
repnz
into
fnsave
ret
fsubrs
add
pop
sbb
lret
sub
cmpsb
xchg
cmc
add
sbb
fiaddl
aas
add
jmp
ja
nop
push
stos
ret
lret
pop
cwtl
xchg
inc
push
testb
mov
int3
pop
stos
lods
mov
shlb
push
fmul
adc
shr
inc
or
loope
mov
mov
lcall
lret
sbb
sbb
sbbb
sub
pushf
lcall
into
repnz
xchg
andl
cmp
mov
xchg
call
daa
cwtl
pop
adc
sbbl
push
mov
mov
mov
adc
mov
imul
xor
scas
push
lret
lods
cltd
mov
int3
inc
lock
rcll
gs
or
push
jg
test
push
xor
sub
push
test
rclb
mov
clc
xchg
sbb
subb
enter
cli
pop
cmp
aad
fstpt
or
push
jl
mov
and
movsl
ja
add
int
idivl
fisttpl
dec
xlat
fsub
or
add
adc
pop
in
jmp
sub
repnz
in
push
mov
mov
out
sbb
ficoml
mov
ds
xor
mov
mov
sbb
sub
jb
inc
mov
lock
dec
rcr
dec
push
popf
cmp
in
sbb
dec
fs
repz
mov
stc
pop
out
fmuls
or
adc
filds
repz
inc
inc
sbb
mov
adc
push
aam
jnp
xchg
vmaxss
movsb
sub
sahf
sub
lret
ja
and
dec
jbe
bnd
test
sarw
mov
aam
jns
test
js
flds
ja
negb
or
add
mov
push
sbb
jp,pt
push
xchg
leave
stc
sub
pop
addr16
sub
mov
jo
and
push
dec
lods
loop
mov
and
sbb
pop
inc
test
xchg
push
jns
and
inc
or
jle
mov
jae
or
outsl
ret
inc
xor
push
test
push
shlb
repnz
int3
mov
sbb
cmc
jo
or
scas
jmp
pop
insb
cmp
adcb
mov
ss
pop
pusha
lds
mov
jge
inc
xor
inc
pushf
adc
mov
lock
icebp
int
push
in
fwait
mov
mov
cwtl
push
pop
std
push
call
xor
xchg
dec
repz
xchg
cltd
xchg
filds
roll
fsubrl
xchg
mov
push
cmpsb
in
jne
or
divl
cmpb
pop
lock
cmp
stos
imul
mov
dec
sbb
movsb
cmc
fwait
xor
cmp
aam
or
dec
xchg
pop
push
fldenv
mov
add
add
int3
dec
add
js
mov
sub
mov
hlt
js
bnd
loop
cmp
sbb
dec
dec
push
adcb
inc
xchg
pop
sbb
and
add
ja
sub
sbb
loopne
adc
in
jle
mov
dec
in
fnstcw
and
loop
hlt
mov
stos
icebp
add
gs
scas
popa
cmpb
push
cmp
pop
pop
pop
loop
mov
jo
jle
daa
push
dec
push
inc
imul
ret
outsl
mov
xor
cmp
idiv
stos
fwait
dec
ljmp
sbb
fmull
cmp
iret
dec
cmp
add
rolb
mov
mov
mov
pop
inc
sub
sbb
add
pop
lret
push
push
mov
in
jp
add
jbe
fcomip
pop
and
imul
jmp
or
fs
cld
mov
mov
dec
sbb
hlt
dec
push
jp
cmovge
lret
dec
pop
sbb
lods
mov
cli
adc
or
and
push
pop
mov
and
cld
sbb
cmpsb
xor
fnstcw
mov
xchg
sbb
cs
ret
push
popf
popa
push
mov
lea
ja
js
mov
sub
fcmovu
into
lods
xor
add
fnstcw
insb
jmp
inc
mov
or
mov
out
jge
dec
fs
add
jl
xchg
sub
out
cld
ret
fistpl
xchg
cmpsl
mov
add
cmpsb
or
push
mov
lret
jg
in
push
aad
scas
shlb
cwtl
cmp
adc
sub
push
jnp
or
cmc
xor
xor
jne
xor
inc
sbb
jp
sbb
lret
add
int3
mov
pop
inc
mov
dec
in
mov
out
jge
adc
shlb
xlat
jmp
ss
aad
cmc
dec
cmp
mov
sbb
mov
dec
inc
mov
xor
cwtl
sub
fldcw
cmc
mov
and
sbbb
jo
sbb
sub
test
add
sarb
add
xor
das
scas
scas
insl
cmp
scas
jae
outsl
lret
in
fs
testl
ds
ret
inc
cmp
ret
call
mov
jae
cmp
push
clc
xlat
dec
push
and
ja
jae
mov
and
cltd
cli
lea
mov
add
push
in
daa
xchg
stc
jle
xchg
imul
push
push
cmp
cmc
push
add
mov
or
mov
push
and
stc
cwtl
mov
jmp
stc
mov
ret
dec
sub
and
out
pop
mov
cmp
sub
lahf
sahf
shrb
in
lret
lock
lcall
and
mov
push
mov
jp
sbb
int3
lret
frstor
jo
out
out
jne
mov
push
inc
popf
mov
test
adc
pop
xor
rcrb
pop
movsl
aad
xchg
sarl
clc
jg
pop
pop
inc
and
ljmp
xchg
sub
insb
xchg
add
std
push
and
pop
pop
and
push
dec
cmpsb
xlat
xchg
fxtract
out
xor
cwtl
sbb
aad
xchg
adc
shll
cmpb
imul
xor
push
mov
test
lahf
shll
jmp
sar
pop
adc
adc
push
mov
jmp
stc
mov
mov
rolb
fcomi
pop
mov
sub
test
xchg
sahf
fisubrs
push
jmp
lret
jae
mov
outsb
pop
stos
std
movsb
in
push
jb
push
cmp
aaa
cwtl
inc
push
mov
pop
stc
enter
adc
aas
push
fidivrl
nop
or
jmp
mov
lock
adc
xor
leave
js
push
push
sahf
repnz
vpsrlq
scas
or
fs
add
sahf
sti
mov
lock
pushf
orl
add
xchg
cmpsb
cmp
inc
push
fcoml
loopne
jmp
xor
mov
jp
dec
and
pusha
cmpsb
xor
out
jl
aaa
xchg
dec
enter
je
hlt
push
nop
mov
sti
adc
or
adc
pop
cltd
enter
mov
lcall
xchg
dec
cmpsb
cmp
pop
lods
ret
fs
lods
inc
mov
fprem1
cmp
cmpb
mov
out
rcrl
inc
pop
inc
dec
jl
leave
pop
xor
inc
mov
loop
int
pop
out
push
jnp
mov
mov
fistpll
jbe
loopne
lret
inc
stc
mov
fisubs
and
push
imul
mov
adc
out
mov
aad
xchg
imul
pop
add
push
std
push
adc
mov
rcrb
sahf
shrl
js
pusha
aas
jmp
push
pop
mov
aas
sete
orps
mov
je
cmp
insl
out
sti
jnp
daa
insl
push
cwtl
lock
inc
sub
push
sarl
pop
fsub
ret
mov
pop
ret
fwait
jg
push
aam
pop
mov
sbb
push
add
mov
adc
bound
aas
scas
or
cmp
ja
inc
aad
fdiv
int3
mov
aaa
mov
stc
sahf
fs
test
clc
sarb
sub
mov
pop
mov
dec
les
mov
jbe
xchg
push
pop
mov
pop
out
test
inc
xor
add
xchg
fxch
lds
arpl
mov
lods
faddp
andb
mov
xchg
popa
xchg
cli
jb
inc
or
lds
pop
cmc
in
lret
cmpsl
or
mov
push
add
fwait
xchg
cmp
push
ds
insb
mov
in
dec
sbb
scas
pop
test
fmull
dec
add
leave
loop
imul
das
lods
stos
pop
sbb
in
lahf
xchg
bound
inc
and
inc
add
sub
insb
pusha
push
and
jecxz
inc
xchg
outsb
pop
lcall
fisubrs
inc
dec
cmpsl
jmp
mov
xchg
dec
aas
loope
aam
ret
or
add
cmp
cmp
loop
loopne
sub
loop
dec
xchg
fidivs
cli
in
fldl
add
dec
imul
movsb
sub
push
pop
xchg
leave
pop
sub
cld
sbb
sbb
out
ret
mov
scas
data16
sbb
addr16
or
sub
inc
and
push
add
sbb
loop
dec
adc
dec
ja
iret
pop
mov
jne
hlt
xchg
and
mov
lock
sbb
inc
and
jg
loope
pushf
stos
cmp
std
loope
pop
lahf
sbb
pop
lock
imul
out
ret
lret
sub
lahf
lret
lret
inc
fucom
pop
loope
jne
aas
sub
rol
sbb
jo
out
loopne
cmp
jl
scas
clc
xchg
loopne
push
cmp
fs
mov
xor
popa
ja
xor
cwtl
incb
lds
ret
test
loop
out
push
xchg
mov
or
sub
mov
mov
pushf
cltd
rclb
jecxz
add
pop
mov
cmp
cmp
and
and
sbb
in
mov
sarb
mov
mov
repnz
adc
das
push
mov
cltd
adc
scas
xor
sub
mov
push
decl
xor
lods
pop
in
sbb
jmp
loop
sbb
lcall
cmpsb
in
aad
jnp
ss
xchg
sub
lret
adc
mov
mov
decl
and
xor
dec
dec
inc
jne
or
cmp
jno
sti
out
hlt
mov
xchg
or
int
outsb
jno
in
lcall
sarl
xchg
hlt
xlat
or
push
mov
mov
or
in
cmp
jns
hlt
xchg
jo
and
cwtl
rcl
sbb
cmp
inc
outsb
jo
pop
cmp
lea
fwait
lret
push
cmp
push
cmpps
add
in
sbb
leave
cs
cmp
stos
jbe
adc
mov
andl
int3
pop
mov
dec
xor
in
pop
dec
or
jnp
cmp
je
outsl
leave
cmc
mov
call
pop
xchg
stc
and
push
or
sbb
out
test
dec
pop
mov
ja
sbb
push
les
in
hlt
sbb
mov
ja
xchg
pusha
in
adc
dec
popf
sub
inc
in
icebp
ja
test
pmulhw
pop
sarl
pop
popa
int
or
adc
popa
cs
push
sbb
mull
scas
shl
or
mov
dec
data16
dec
sub
cmpsl
xchg
ja
xor
jmp
mov
lock
jp
imul
ror
xchg
pop
mov
lods
or
push
dec
nop
ds
test
test
cld
fs
ret
push
call
jecxz
popa
xlat
popa
test
dec
and
xchg
inc
inc
push
push
push
pop
or
push
jge
ds
pop
cmp
cmp
and
int
or
cltd
fsubl
movsb
inc
push
jg
xchg
mov
pusha
push
lcall
lret
xor
call
aaa
push
movsb
out
push
nop
cli
cld
push
in
adc
test
or
add
hlt
sbb
insb
ret
out
ljmp
and
insl
scas
dec
cmp
mov
sub
dec
sub
pop
pop
cmp
jmp
add
data16
inc
and
add
dec
mov
aad
inc
bound
jns
push
pop
bound
pop
cwtl
clc
movsb
mov
cmc
mov
lcall
adc
sbb
cmpb
roll
jl
jae
fidivl
dec
lea
or
mov
xchg
mov
mov
dec
inc
lahf
mov
addr16
inc
nop
gs
sarb
mov
decl
fmul
inc
adc
inc
and
int
stos
inc
fsubrl
mov
cmp
and
es
pop
xor
cs
or
ds
jge
sub
dec
push
pushl
hlt
jmp
fs
mov
out
stos
lods
imul
test
cli
mov
iret
sub
inc
jge
ljmp
lcall
jb
adc
loope
loopne
inc
sahf
xor
lahf
lds
nop
xchg
mov
sarl
cmpsb
leave
sub
xchg
pop
std
push
loopne
xor
sbb
sub
mov
testl
jae
sbb
adc
push
mov
cmp
outsl
xor
stos
inc
xchg
inc
push
loope
mov
in
popa
jno
lods
scas
xor
push
and
xlat
push
enter
mov
xchg
push
xchg
inc
movsl
iret
pop
mov
call
cmp
and
out
ss
xchg
mov
pop
pop
jae
xchg
outsl
aas
push
iret
popf
mov
push
add
push
subb
cmp
mov
fldl
enter
ja
mov
mov
add
mov
arpl
mov
mov
nop
adc
out
add
shl
inc
mov
xchg
cmp
out
jo
jl
loope
jle
cmp
ret
inc
cld
and
and
repz
mov
add
xchg
dec
mov
add
fmul
les
in
pop
push
std
outsb
sbb
dec
clc
pushf
lea
roll
shlb
lods
or
movsl
sub
aas
mov
mov
pop
add
sbb
lock
sub
sbb
stos
jae
cmp
into
out
pop
sahf
rolb
mov
and
ja
movsb
jb
dec
sub
outsl
fidivrs
aas
popf
add
sahf
xchg
pop
into
sbbl
and
loop
inc
into
sbb
or
jb
cmp
test
fdivs
inc
cltd
cwtl
ret
cli
fucom
stos
jno
cmp
sub
notl
xorl
fcmovnb
pop
lret
lcall
test
popa
lea
mov
enter
addr16
jmp
fisttpll
adc
clc
nop
popf
sub
jne
fstpl
and
mov
cld
mov
or
add
fstpt
cmp
inc
inc
cli
pop
lds
mov
push
lods
mov
pop
xchg
sbb
push
ret
xchg
push
stos
dec
fnsave
je
test
jns
push
psubsw
xor
sbb
ficoms
pushl
push
mov
sub
mov
push
push
lods
lock
fwait
adc
mov
push
xor
inc
aam
push
imul
xchg
mov
push
adc
subb
xor
cltd
mov
cwtl
ret
mov
push
in
sub
push
lcall
pop
les
jb
sahf
jb
incb
mov
lret
mov
or
outsb
stos
pop
sbb
cwtl
nop
push
pop
ljmp
shrl
or
push
aam
and
xchg
sub
push
ret
inc
outsb
cmpsl
xchg
push
mov
gs
sbb
and
pop
and
fildl
imul
cwtl
cmp
xchg
test
add
xchg
mov
cli
in
xchg
xchg
mov
adc
sub
cmp
cmp
es
push
dec
cmp
sub
mov
call
inc
cli
inc
dec
lret
sbb
rclb
xchg
fisubs
xor
rorl
scas
jge
notl
popa
cmp
inc
xchg
aad
cmpsl
mov
mov
jp
bound
lods
shl
xchg
cmp
dec
sbb
mov
push
dec
xchg
xlat
dec
and
fdivl
fs
int
sarb
pop
subb
cs
dec
sbb
sub
ljmp
jbe
fdivl
mov
sbb
push
scas
push
out
cmp
jle
stos
jmp
cmpsb
xor
dec
xor
jbe
or
dec
orl
dec
loopne
mov
or
sarb
sub
or
push
pop
push
add
push
lahf
xchg
xlat
ss
sbbl
jnp
pop
fisttps
scas
repnz
int3
mov
outsl
fcomps
pop
pop
xchg
and
addl
lret
loopne
rcrl
mov
call
ficompl
sub
rorl
loop
mov
js
mov
mov
pop
mov
push
mov
sbb
adc
scas
mov
mov
pop
add
nop
xchg
inc
sahf
fsubr
fsubrl
add
lret
ljmp
mov
jle
mov
dec
adc
lret
push
xor
adc
push
clc
xor
in
lea
cld
aaa
or
std
movsb
popf
or
clc
xor
loopne
jne
lea
cmp
filds
stos
jecxz
push
data16
aaa
push
mov
iret
gs
adc
sub
in
lock
out
testb
cli
adc
out
mov
inc
pop
loopne
loope
popa
je
adc
push
movsb
daa
sub
notl
cmc
stos
and
sub
ds
cs
cmp
scas
test
sub
push
cmp
icebp
mov
jb
and
nop
xor
filds
sbb
pop
xlat
outsb
insb
ljmp
pop
dec
std
xchg
dec
les
mov
jno
mov
std
sbb
push
in
iret
cmp
pop
ret
stos
cmp
in
or
add
or
adc
push
push
mov
test
aam
addb
push
xorl
push
aam
jo
cmp
shrb
cli
fs
int
push
cmp
andb
and
sub
cltd
addb
jb
ds
sbb
pop
inc
cmp
scas
daa
movsl
mov
and
sarb
ljmp
jb
sbb
fstps
sbb
or
mov
fsubrs
inc
xor
mov
cmpsb
cs
mov
fs
or
insl
movsb
pop
push
stos
mov
mov
or
mov
int
inc
cmp
js
unpckhps
leave
jge
imul
xor
mov
call
or
sbb
cmp
insl
lcall
pushf
jns
cmpsl
adc
loopw
sub
inc
fsub
notb
ljmp
or
or
divl
imul
mov
mov
mov
sti
xor
inc
lock
mov
dec
sub
or
lahf
jmp
cli
cwtl
jmp
pop
sbb
add
jle
loopne
dec
ds
mov
and
lea
jle
sbb
or
les
jecxz
and
leave
ss
push
ss
jae
and
push
shlb
add
icebp
aad
fisttps
sub
sarl
pop
ja
inc
jle
pop
and
adc
adc
andb
mov
mov
into
jo
out
cs
push
sub
sbb
mov
adc
loope
sbb
int
stc
push
sub
xchg
inc
mov
push
mov
imul
push
sbb
addl
mov
xor
stc
xchg
adc
rcrl
cltd
mov
mov
pop
test
jb
cld
xor
pop
xchg
fisubrl
ja
ja
cmpsl
fbstp
jle
jmp
inc
jmp
jle
leave
lods
jno
repz
cmpsb
mov
addb
out
popa
jno
xor
sbb
mov
push
pop
xor
lock
push
ficomps
repnz
outsl
leave
fstl
iret
rcrb
add
push
movntps
lds
fs
mov
stos
push
repnz
outsl
lret
add
rol
dec
jge
adc
scas
and
cmc
mov
mov
enter
ja
jo
sbb
push
sahf
mov
mov
std
fs
mov
cmpb
hlt
dec
loopne
xchg
or
pop
and
rcr
clc
mov
in
cmp
mov
mov
jmp
push
fisubrl
jge
dec
es
pop
sar
fcompl
scas
add
push
xchg
mov
dec
and
pushf
sbb
push
adc
mov
mov
add
sbbl
rcrb
incl
xlat
mov
jle
pop
mov
repnz
push
ja
cmp
mov
aaa
es
jge
dec
je
sub
stc
out
mov
fdiv
add
pop
xchg
mov
test
inc
fsubrs
push
gs
add
pop
fnstcw
add
xchg
jne
hlt
xchg
and
jge
pop
mov
mov
aaa
xchg
js
inc
or
aaa
mov
lods
mov
stc
adc
inc
mov
add
data16
mov
mov
fsubrs
jo
push
cmp
test
lcall
sbb
sub
mov
addr16
push
push
lods
or
pop
sbb
cmpsb
aas
sahf
or
int
adc
cmp
push
mov
add
es
and
data16
test
cmpsl
xchg
shll
inc
jmp
popa
push
int3
mov
gs
aaa
imul
movsl
scas
push
dec
dec
test
add
xchg
sbbb
push
xorb
push
fwait
outsb
sbb
shld
hlt
sti
cmc
inc
sub
and
cld
pop
dec
insl
rcrb
pop
aas
pop
hlt
enter
dec
sar
jo
sbbb
in
repz
sub
stos
adc
stos
mov
sub
test
cmc
mov
mov
aaa
inc
or
cmp
aas
pop
jne
dec
xor
pop
ds
adc
xor
mov
inc
mov
test
lods
stc
add
test
dec
pop
push
imul
ror
shr
insl
add
in
fwait
xor
fwait
ljmp
add
repnz
ss
out
lods
push
insb
cmp
inc
mov
ss
stc
or
xchg
pop
or
push
pop
or
pop
je
mov
cmp
call
enter
in
aad
iret
cmp
or
jmp
ljmp
aaa
sahf
jne
pop
insl
xor
pop
push
xlat
fmull
inc
mov
jecxz
push
pop
sub
movsl
pop
mov
and
mov
sbb
les
xchg
push
cmpb
aad
jmp
gs
imul
arpl
adc
sub
mov
mov
mov
bound
sbb
lret
hlt
mov
cmp
adcb
les
xor
mov
mov
dec
out
sbb
dec
or
lcall
mov
sub
xchg
add
jb
in
insl
xor
fldenv
add
push
bnd
or
dec
jo
push
and
jbe
mov
aaa
rorl
xor
inc
or
or
push
loopne
mov
xchg
clc
or
push
das
iret
push
push
sbb
ret
jge
in
loop
adc
or
adc
es
mov
jne
fucomip
push
jo
inc
lahf
push
stos
mul
sbb
inc
dec
mov
fisubrs
clc
mov
or
pop
clc
mov
fcoml
sub
and
inc
aas
shlb
rcrl
sti
pop
loope
scas
mov
cltd
fs
mov
inc
mov
shl
xor
xor
pop
adc
and
pusha
aas
scas
add
sub
lea
dec
shr
xor
movsbl
call
fisttps
xor
vmovq
aad
sub
movsb
movsb
pop
xchg
dec
lds
lahf
std
fldcw
and
push
data16
mov
pop
pop
das
mov
sub
negl
mov
test
aas
call
cmp
loope
pop
push
aas
mov
test
movsb
mov
sarb
lods
mov
lods
ds
mov
cwtl
imul
sbb
test
movb
sbb
loopne
inc
jmp
xchg
pusha
xchg
push
imulb
iret
mov
fs
jg
xchg
mov
adc
test
in
xchg
andb
cmc
fiaddl
mov
cmpl
mov
in
sti
fs
mov
add
and
cli
inc
mov
mov
cmpsl
inc
js
inc
sbb
out
push
insl
out
gs
pushf
fs
sub
pop
sbb
adc
push
into
andb
popf
aas
shrb
xor
dec
mov
add
jecxz
add
js
dec
in
leave
mov
loopne
cmp
cmp
out
mul
jbe
fldt
sub
scas
fisubrl
push
mov
push
jo
cmc
movsb
cmp
sahf
imul
js
mov
adcl
enter
pop
jl
sub
fwait
xor
and
jae
xor
xor
pop
jb
jp
adc
sub
push
sbb
pop
cmc
fsubrs
scas
repnz
int
dec
push
xchg
mov
fwait
push
insl
cmpsl
pop
shll
in
sbb
pop
dec
ss
mov
scas
adc
mov
pusha
sub
test
lcall
sbb
insl
or
inc
ljmp
lock
js
sub
test
dec
adc
adc
mov
pop
out
cmp
xor
enter
fs
ss
mov
push
xor
dec
mov
inc
out
mov
pop
stos
mov
cwtl
ds
rorb
clc
pusha
cmpb
jecxz
jmp
jmp
adc
nop
dec
inc
cwtl
jns
movb
pop
and
mov
mov
push
ret
xchg
cld
jns
cmp
js
cmp
mov
mov
pop
lcall
sti
insl
stos
pushf
in
mov
gs
add
sbb
scas
pop
les
xchg
cmp
out
aam
loope
push
cmc
pop
xor
cmp
out
sub
cli
adc
or
loopne
clc
inc
pop
push
int3
cmp
out
sbb
test
gs
mov
in
sbbl
stos
dec
pop
and
js
mov
iret
jb
repnz
dec
inc
dec
xor
clc
fbld
ljmp
mov
xor
mov
repnz
mov
xchg
fistl
lods
mov
push
lcall
adc
cli
movsb
aam
jecxz
sbb
adc
in
addr16
inc
jne
or
enter
aaa
mov
inc
jo
cmpsb
add
jp
sbbl
andb
bnd
mov
jne
test
lcall
mov
fs
pop
jne
ja
lahf
ja
daa
sbb
sahf
push
cli
mov
xchg
imul
mov
xor
sub
and
in
ljmp
mov
and
xchg
faddl
mull
add
lcall
cmp
fs
aas
adc
inc
inc
adc
or
shlb
dec
xor
test
in
in
das
out
dec
xchg
sbb
fisttpll
sbbb
in
andl
and
orl
sbb
arpl
mov
movsl
sbb
lods
mov
ds
adc
lret
jb
mov
cmc
or
lret
jb
xchg
xor
sub
cld
mov
imul
push
cli
or
fscale
movsb
sahf
sbb
sbbl
xchg
cmp
mov
ja
fcoml
int
notl
iret
in
inc
add
mov
cmp
dec
push
xchg
pop
push
cmp
in
ret
xchg
aas
sbb
push
jg
xchg
jl
gs
or
cmc
mov
test
pop
push
scas
jbe
mov
movlps
sti
add
mov
sbb
push
mov
fdivl
mov
ljmp
into
int
leave
push
stos
mov
jl
pop
sub
adc
sbb
lds
dec
cmpsb
cmp
inc
fistpl
pop
sti
ljmp
cld
xor
fmuls
adc
jo
and
lods
cld
push
cs
lods
cmc
arpl
dec
ds
and
orl
in
jecxz
inc
sahf
pusha
roll
leave
aas
push
out
cmp
daa
jge
loop
ds
cmp
xchg
xor
sub
xchg
sub
sbb
movsb
add
inc
repz
adc
mov
sub
inc
test
xor
jne
sbb
popa
shll
dec
mov
std
in
and
xor
and
mov
clc
mov
mov
bound
jle
cmp
jp
cmp
or
fisubs
rclb
xor
aam
inc
adc
cmc
and
mul
aas
fisttpll
aas
dec
push
lahf
dec
stos
frstor
repnz
daa
aad
movsl
or
mov
mov
push
pop
push
popf
fdivl
rcl
xchg
sub
mov
notb
jbe
jp
adc
rolb
pop
stc
push
jnp
mov
push
test
cs
xchg
mov
test
add
mov
xchg
pop
sti
mov
shlb
mov
mov
out
ret
es
mov
bound
mov
push
or
shll
pusha
idiv
loopne
jl
insl
add
test
push
mov
xchg
sbb
jge
fcmovu
int3
pop
aad
loope
test
jne
repz
repz
lret
mov
insl
lock
ss
dec
jle
aam
fbld
push
xchg
popf
pop
or
jae
mov
jg
mov
and
das
shll
cmpsl
push
int3
xchg
pop
int3
xor
pop
lcall
jg
in
cmp
movl
scas
add
add
mov
pop
call
cld
mov
pop
bound
out
stc
jns
arpl
xor
ja
test
xorb
xchg
adcl
bound
lock
jmp
cld
out
lods
rcrb
xchg
lods
test
in
ja
outsb
imul
stos
cli
xchg
xor
xchg
and
aad
test
pop
jb
das
cwtl
pop
aas
ret
cltd
dec
jmp
push
jo
fstpt
add
lock
xchg
mov
loope
ljmp
push
pop
lock
pop
lods
sbb
pop
adc
push
ret
push
call
in
pop
test
mov
iret
repz
imul
mov
int
in
add
dec
and
lea
jnp
jbe
mov
imul
mov
stc
inc
inc
shll
or
sbb
cmc
outsb
stos
add
lea
leave
pop
dec
mov
fimull
push
pop
or
dec
bound
or
cs
pop
dec
sub
mov
mov
repz
add
add
divl
lahf
rorl
lods
push
rorl
xor
stos
movsb
gs
push
fnstenv
lods
int3
inc
ss
outsl
mov
cmp
xchg
xchg
fsubr
test
add
inc
rclb
sti
lret
pop
jne
cmpb
adc
dec
xor
shrb
enter
stc
jecxz
or
pop
sahf
xchg
aaa
xor
shrb
sub
mov
repnz
sbb
dec
xchg
stos
pop
push
push
mov
push
cmp
cld
push
lods
pop
push
sbb
ret
lahf
pop
lods
dec
xor
inc
stos
xchg
inc
sti
int
or
pop
jl
fwait
push
dec
dec
inc
dec
rcr
dec
cmp
in
loope
cmp
scas
mov
aad
xchg
and
bound
dec
stos
dec
aas
pushf
and
inc
push
test
lea
dec
aam
lock
pusha
mov
int
inc
xor
out
jecxz
adc
inc
cmp
jnp
aam
mov
jnp
push
outsb
add
ret
rcl
into
mov
sub
and
enter
push
sbb
hlt
or
test
mov
inc
inc
push
shr
lods
nop
inc
daa
sbb
in
dec
mov
arpl
aaa
sbb
pop
loopne
adc
mov
sbb
add
sbb
sub
ss
pop
call
into
xor
outsb
push
mov
int
mov
mov
push
mov
dec
mov
push
jnp
dec
addr16
imul
aas
std
mov
jnp
jne
lahf
repz
out
mov
insl
cmp
push
xchg
sub
and
nop
sbb
into
cs
push
sbb
ljmp
sub
jne
das
cmp
fiadds
inc
int
test
push
je
stc
mov
jg
repz
lock
mov
mov
in
sbb
outsb
jge
daa
add
jo
jbe
mov
hlt
or
xor
sub
jns
inc
pushf
sub
mov
cltd
push
xor
and
pushl
or
xchg
pop
mov
pop
and
mov
test
test
sub
push
pushf
scas
inc
gs
out
pop
sahf
mov
add
inc
sub
jl
mov
and
movb
ret
ja
mov
bound
adc
dec
into
inc
jne
push
inc
mov
mov
push
sub
dec
fs
cwtl
lods
sbb
bound
pop
test
gs
outsb
push
cmp
rcrb
xchg
movl
popf
clc
rcl
mov
aam
divl
ret
lahf
pop
mov
jg
xor
adc
and
loope
sub
outsl
mov
popf
loopne
adc
cmp
rorl
lock
stc
add
test
push
test
pop
sti
daa
pop
int
aas
in
xorb
mov
pop
aaa
stc
jbe
or
in
mov
sbb
adc
push
jmp
bound
jnp
push
add
loop
mov
in
test
mov
out
unpckhps
les
or
jl
adc
jg
test
add
mov
xor
in
frstor
cmpsl
movsb
push
sbbl
lea
int3
xor
loop
push
cmp
je
xchg
lahf
jmp
cmp
sbb
stos
cmpsb
mov
mov
push
or
pop
int3
sub
fistl
mov
subb
mov
add
cmp
xchg
xlat
ret
inc
mov
test
imul
test
push
out
dec
xchg
mov
bound
mov
test
fnstcw
pop
cld
ds
testl
ds
lods
dec
out
and
inc
mov
push
or
jne
js
xor
or
mov
and
mov
push
sub
lret
fmulp
xchg
add
xor
notl
cmp
add
add
movsl
fwait
and
ss
sub
rol
mov
sbb
and
push
sbbl
and
hlt
sbb
sub
out
dec
ret
jecxz
push
repnz
mov
mov
jmp
mov
in
push
add
pop
stc
repnz
pop
xor
mov
movsb
and
mov
push
push
into
push
int3
xorl
xor
dec
notb
mov
cltd
push
in
jl
lods
xor
adc
push
or
xchg
add
mov
movsb
xor
fcompl
dec
and
orb
outsb
je
pusha
movb
dec
dec
dec
in
pop
push
xchg
call
dec
and
add
pop
in
xor
push
xchg
into
cs
in
sar
pop
jmp
mov
xor
or
and
add
dec
imul
loope
test
mov
mov
adc
pop
xor
jb
xor
mov
nop
mov
in
in
cmc
cmpsb
sbb
divl
cmp
jge
add
mov
add
andl
jge
fisubrs
xorb
lock
loop
add
xchg
add
faddl
mov
jl
in
mov
adc
jmp
in
add
sar
jmp
jno
push
adc
insb
shrb
popa
fsubrp
jo
lods
adc
inc
dec
adc
repnz
sub
or
popf
sub
fcos
pop
sub
mov
test
or
repz
add
add
xlat
aas
sub
dec
mov
imul
repnz
addb
nop
dec
scas
mov
mov
test
inc
adc
ret
add
addl
movsl
cmc
sub
in
fsqrt
stos
fisubl
inc
ret
lds
or
scas
push
cs
jne
mov
jmp
mov
pop
jae
sub
insl
push
cmp
push
add
daa
and
jmp
std
mov
inc
add
shrb
ja
enter
push
inc
jmp
sahf
adc
andb
push
icebp
mov
dec
das
ret
fs
movsb
ja
add
aam
iret
stos
imul
repnz
stos
pop
cmpsb
loopne
add
enter
inc
push
bound
push
test
dec
pop
xor
sbb
jle
repz
loop
mov
mov
ja
shlb
out
nop
mov
dec
or
mov
in
int
xchg
pop
out
arpl
sub
push
into
ret
or
movsb
sbb
shll
lock
or
mov
testb
and
or
das
push
das
sub
or
call
fs
dec
test
mov
add
scas
adc
out
sbb
push
cmp
sub
fcomps
jecxz
je
fsubr
into
xor
iret
insb
enter
inc
nop
fs
mov
add
fdivs
inc
inc
jnp
xor
jo
pop
sbb
sbb
js
loop
jno
mulb
ds
pop
jmp
push
lods
xlat
arpl
pop
dec
mov
mov
or
inc
cwtd
jl
push
push
and
pop
repnz
dec
pop
hlt
mov
inc
jbe
in
adc
mov
daa
hlt
sub
xchg
scas
addr16
sub
sub
daa
or
fdivr
lds
add
jmp
test
jnp
aad
insb
icebp
enter
inc
cli
adc
add
mov
imul
int
fdivrs
xor
mov
repz
fidivrs
jmp
xchg
xchg
js
push
out
xchg
lret
int
lcall
mov
jge
ret
pop
mull
adc
arpl
push
popaw
xchg
cmp
popf
aad
cmp
int
xchg
push
or
shlb
sbb
push
xchg
or
outsb
or
in
out
leave
cmp
sub
scas
out
inc
dec
nop
leave
xor
mov
adc
pop
aas
leave
andb
inc
sti
out
or
mov
mov
xor
lods
dec
xor
dec
push
roll
mov
sub
and
mov
dec
jae
popf
push
pushf
divb
and
sub
mov
mov
lea
mov
rep
js
cmp
xor
inc
sub
mov
push
incb
push
jne
scas
mov
test
xor
or
enter
popf
repnz
jmp
cwtl
sahf
pop
test
aad
movsb
insb
mov
pushf
and
and
push
jg
pop
cmp
dec
lods
adc
inc
xor
push
jne
lea
mov
jmp
mov
imul
sub
repz
pop
push
insl
fidivs
xchg
cmp
sub
xor
jl
mov
in
lods
adcb
in
fucomi
fwait
cmc
stos
addr16
inc
adcb
jb
aad
in
popf
mov
fidivrl
mov
sub
insb
lock
hlt
pop
push
inc
add
adc
in
test
cld
adc
dec
xchg
add
fs
inc
das
add
or
cmc
adc
sbb
cmp
xchg
xchg
dec
icebp
jge
xor
mov
xor
rcr
pop
daa
or
xchg
xor
out
push
cmp
lods
mov
push
int3
stos
or
inc
pop
push
idivl
leave
and
std
lock
xchg
jo
test
mov
jno
pop
add
pop
or
inc
in
xor
test
cmp
xchg
bound
out
adc
ds
pushf
out
orps
je
sub
inc
ljmp
sub
xor
or
push
lret
cltd
xor
inc
sahf
aad
hlt
pop
es
lock
std
rorb
aas
sub
push
arpl
inc
jnp
fucomi
inc
and
test
test
pop
addr16
mov
scas
cmp
mov
loop
repnz
adc
inc
mov
cld
cmp
subb
movl
out
aas
mov
dec
fisubl
loopne
test
and
mov
xor
testb
cmpsl
call
mov
popf
subl
cltd
mov
rolb
push
ss
adc
lret
pop
jnp
cmp
fisubl
jge
mov
movsl
divb
mov
hlt
mov
movsb
push
outsb
mov
out
cmpsb
sbb
pushf
jns
cli
push
or
insl
or
fidivrl
cmp
sub
or
pmaxsw
sub
jno
or
mov
stos
dec
dec
pop
pop
push
inc
xchg
mov
call
lret
jmp
inc
push
xchg
jbe
jecxz
sbb
jg
xchg
in
test
loop
lea
test
mov
push
ret
enter
lcall
sbb
dec
and
mov
cmc
mov
cmpsl
jne
pop
jnp
pop
cmp
push
dec
or
xchg
add
add
push
jns
push
and
push
shll
cmp
and
cld
xchg
sub
lahf
lret
dec
push
test
sbb
lahf
outsb
hlt
push
cmp
xchg
pop
mov
xchg
leave
pop
add
xchg
xchg
outsl
jo
movsl
push
dec
aas
dec
add
pop
ds
movsb
scas
ss
pop
inc
adc
sbb
negl
fimull
cmpsl
sbb
pop
cwtl
mov
jno
push
les
lds
push
pop
js
popl
or
mov
xchg
pop
dec
rclb
in
fs
rorb
js
ljmp
lea
sub
repnz
xor
scas
jle
mov
or
or
lret
or
hlt
dec
hlt
xchg
adc
lcall
fsubrs
mov
cli
and
inc
pop
adc
ds
inc
neg
dec
lea
cmp
out
add
addr16
les
aad
inc
sarb
lds
aad
mov
inc
adc
jp
push
adc
mov
shrl
out
out
bnd
xchg
jmp
mov
test
xor
cs
rorl
in
les
outsb
dec
mov
out
push
iret
int3
mov
sub
int
cmpsb
addr16
cmc
ror
and
sarb
adc
sbb
and
aad
rolb
add
mov
jbe
frstor
imul
and
or
sar
pop
or
dec
sbb
adc
sub
jge
andb
std
adcb
stos
adc
pop
fistps
adc
stos
inc
jns
xor
stos
pop
mov
xor
and
jmp
mov
subb
aad
cmpsb
pusha
int
push
jo
std
push
iret
insb
push
call
and
inc
sti
mov
cltd
xchg
and
movq
aad
xor
inc
mov
lret
add
inc
mov
xchg
ret
push
out
cmc
mov
push
cltd
jle
dec
mov
pop
ljmp
push
leave
and
mov
in
mov
xchg
sub
xchg
sub
test
test
aas
mov
popa
sarb
mov
or
sbb
xchg
addr16
xor
std
sti
jl
jl
jne
insb
sbb
and
ret
pop
adc
test
or
insb
sbb
in
ss
push
lcall
mov
push
cmpsb
fldcw
addr16
pop
mov
insb
adc
xor
sahf
out
pop
push
insl
add
sar
xchg
dec
cmpsb
inc
scas
and
jnp
movsl
fadds
cmp
inc
in
aad
xchg
sarb
in
repz
rcrb
test
add
jo
xchg
push
out
out
in
and
shrb
sbb
jp
cmp
ret
mov
mov
adc
popa
pop
out
mov
mov
clc
imul
mov
adc
mov
push
sub
loope
je
lock
jae
push
xchg
adc
pop
adc
std
ss
mov
sbb
inc
iret
call
sbb
mov
xchg
test
in
add
mov
popf
adc
jmp
push
roll
les
lcall
popf
lock
fiadds
fs
mov
shrb
fbld
dec
cmp
cmp
scas
popf
in
and
repz
rorb
push
xor
ret
movsb
dec
fldlg2
test
stos
bound
jb
jnp
adc
es
ret
int3
out
xchg
sarb
rcrl
xchg
nop
sbb
sahf
xchg
xchg
hlt
xor
rcr
int
js
loopne
push
sbb
rcl
out
add
ret
sub
loope
mov
pop
js
sbbl
and
and
jecxz
mov
push
idivb
jmp
test
cs
leave
in
xor
inc
mov
pop
inc
push
jle
jne
ficoms
jo
and
push
push
cmc
lret
aam
cs
sbb
dec
xor
or
pushf
jb
psubsw
xchg
cltd
icebp
lods
nop
pop
popf
sti
jae
jecxz
leave
add
mov
lock
xchg
add
test
add
mov
lds
notl
stc
sbb
mull
xor
pusha
fcomps
stos
inc
repz
xor
xor
mov
inc
into
jne
ss
call
loop
and
or
jns
andl
imul
sti
xchg
sub
lods
ja
push
or
jg
out
mov
pop
or
pop
adc
sbb
push
out
adc
sub
add
xlat
test
xor
popa
xchg
push
mov
ficomps
jae
icebp
adc
addr16
inc
decl
je
cmp
repz
pop
in
shrl
dec
std
test
cltd
xor
inc
shlb
jo
popa
mov
fmuls
mov
jno
mov
push
int
mov
into
or
and
loop
dec
mov
pushf
mov
in
test
repz
xor
int3
mov
je
psubusw
arpl
loope
cmp
mov
mov
leave
push
fidivrl
mov
inc
dec
fbld
xchg
cltd
jnp
ret
lret
pop
scas
scas
inc
pusha
push
aam
sub
inc
out
push
pop
sbb
jne
adc
fldl
pushf
cmc
ja
aaa
mov
stc
mov
test
faddl
dec
mov
cs
push
aad
pop
or
and
test
pop
popf
ret
ret
mov
hlt
xor
inc
orb
les
mov
fsubl
loope
xor
cld
pop
xchg
call
adc
fbstp
lock
sub
andb
push
mov
sub
ja
cmp
std
adc
mov
or
hlt
pop
mov
ss
push
adc
into
add
jle
outsb
push
jno
and
xor
jle
cmc
sub
enter
stos
sub
cmc
std
add
mov
fists
stos
sub
mov
dec
sbb
in
mov
in
inc
push
cmpsb
and
adc
ret
inc
xchg
ret
jae
sbb
shlb
rcrl
fwait
dec
pop
lret
popf
add
adc
clc
mov
push
xchg
pop
inc
sbb
mov
mov
in
sbb
fsts
ficomps
bound
xchg
in
push
mov
xlat
lret
and
push
jge
shl
adc
lds
test
mov
hlt
or
sub
test
mov
sub
pop
mov
add
in
pusha
fcmovb
dec
dec
mov
clc
test
xor
dec
insb
push
mov
test
dec
test
dec
sbb
stos
sbb
sti
into
mov
in
or
dec
mov
cmp
clc
mov
cli
jnp
lods
adc
dec
call
mov
adc
js
push
shrb
pop
jl
pusha
mov
inc
cmpsb
fildl
imul
je
mov
aad
sub
push
mov
add
pop
in
xchg
inc
jbe
ficoml
adc
push
xchg
clc
jecxz
addb
jo
dec
add
mov
nop
mov
outsb
pushl
call
mov
pushf
adc
pop
sub
movsl
mov
mov
cli
and
add
shl
stos
jne
rclb
insb
push
outsl
mov
sub
daa
les
filds
fwait
add
adc
mov
sbb
mov
mov
sbb
inc
es
sbb
sub
stos
out
xchg
gs
int
aam
ret
xchg
sbb
xchg
sbb
pusha
mov
add
mov
arpl
push
loopne
cld
inc
mov
jo
rcrl
inc
pop
popf
movsb
jmp
sbb
fcmovbe
or
mov
mov
sbb
dec
dec
adc
lea
add
out
sub
loopne
in
mov
and
mov
decl
fbstp
fcoms
out
shrl
loope
aas
sahf
lahf
jnp
xchg
fldl
cmc
cmp
pop
ljmp
xchg
mov
lds
sbb
shl
jle
pop
dec
cmp
insb
shrb
jo
jne
jmp
mov
repz
push
je
cmpsl
movsl
inc
shr
cs
or
ja,pt
ret
jp
pop
xor
push
out
mov
push
cld
int
pop
mov
lcall
pop
rolb
lods
mov
outsb
scas
inc
add
mov
dec
int3
repz
repz
mov
push
pushf
ret
pop
push
imul
insb
jge
insl
xchg
sub
sub
sub
mov
dec
sub
cmp
jmp
das
adc
pushf
pop
add
lret
lahf
dec
rorb
inc
cmp
xchg
ljmp
xchg
int
addr16
add
jnp
dec
push
jbe
mov
addr16
cmc
sbb
mov
lahf
scas
xchg
mov
icebp
out
imulb
add
adc
pop
and
into
imul
add
jp
sbb
push
ljmp
ja
les
cltd
arpl
sbb
xchg
push
dec
fdivr
pop
inc
push
js
lcall
jp
repz
repz
mov
sbb
out
jl
jno
sahf
push
imul
daa
lret
cmpl
cmpsl
dec
test
mov
push
call
push
movsb
call
dec
aas
jmp
adc
repnz
mov
push
sub
ds
imul
setg
pop
aaa
inc
pushf
arpl
pop
sbb
aaa
loopne
loope
xchg
std
fildll
dec
add
jecxz
aad
push
loop
xchg
test
adc
imul
add
aad
xchg
into
out
sbb
mov
dec
inc
or
dec
mov
dec
jnp
adc
or
mov
xchg
mov
outsb
lret
mov
adc
shrl
shll
cmp
mov
or
jmp
sub
js
xor
arpl
bound
cmc
lret
cmp
jae
aaa
xor
dec
imul
mov
shr
push
aam
xor
add
stos
cmp
jle
imul
mov
dec
cltd
adc
je
push
mov
out
cmp
addr16
jmp
aam
inc
cmpsb
xor
inc
in
in
fiaddl
mov
movsb
scas
les
movsl
rcll
loopne
pop
lret
mov
lcall
cmp
jbe
imul
decl
xchg
mov
dec
xor
mov
mov
dec
jmp
sti
fidivrl
or
mov
add
dec
push
xchg
jae
jle
test
fiadds
loope
pop
cmp
or
std
jb
repz
push
and
mov
push
movsb
xchg
xchg
adc
mov
insb
cmp
daa
xchg
xchg
imul
insl
stos
push
ret
mov
mov
add
div
mov
test
inc
xchg
mov
or
insb
jnp
test
mov
mov
dec
mov
sbbb
ret
movsb
js
or
enter
and
and
dec
mov
imul
cmp
push
mov
ret
ret
clc
jb
dec
add
mov
push
jge
divb
and
mov
aaa
pushf
js
fidivl
ldmxcsr
and
out
jp
push
mov
push
dec
mov
lret
nop
add
jge
xor
jno
lds
mov
xor
call
aas
fptan
lods
xchg
mov
mov
dec
iret
xchg
sbb
into
xor
daa
ss
into
out
jne
mov
mov
cli
fs
pop
cmp
push
mov
lcall
adc
insb
jg
xchg
mulb
cmp
shrl
push
insb
sub
orl
inc
fadds
jno
or
int
idivb
es
push
jno
xchg
jecxz
push
iret
mov
ja
aas
pop
push
fadds
clc
adc
adc
ss
ss
ds
adc
sub
jns
lcall
dec
push
xchg
push
incb
icebp
push
leave
pusha
repnz
push
xchg
xor
jge
sbb
pop
or
in
es
cmp
sahf
imul
idivb
rcrb
jg
cld
jmp
jnp
or
cmp
pop
fcompl
xchg
scas
dec
pop
lcall
mov
ds
ficompl
shlb
mov
or
sbb
jp
add
mov
cmpsb
pop
jp
and
rol
ja
imul
mov
movsl
mov
dec
mov
pop
ljmp
lods
lock
js
cli
sahf
push
push
call
sbb
rolb
loopne
mov
rcll
mov
fldz
lock
jecxz
mov
jecxz
dec
inc
push
sbb
xchg
lret
mov
inc
cmp
lret
ret
call
repz
gs
rcr
js
pop
fstl
push
dec
push
jb
sbb
imul
sti
cmp
shrb
sbb
dec
arpl
ror
ret
dec
jb
or
int3
dec
imul
mov
cmp
iretw
xchg
mov
fmull
stos
cltd
out
ret
pop
push
ds
jno
pop
xchg
aad
in
movsb
lahf
dec
or
mov
and
push
cmp
mov
fdivrs
js
jge
ret
or
or
jno
movsl
hlt
iret
out
aaa
lcall
xor
test
pop
test
push
sbb
negl
xchg
dec
mov
fcomi
push
fwait
inc
dec
jb
add
sub
add
adc
xor
movsl
bound
lahf
andl
fstps
movsl
cwtl
cmp
shll
test
sbb
xor
insb
jmp
popf
cld
jae
popf
inc
dec
enter
mov
daa
mov
add
lret
sbb
daa
pop
inc
fsubr
cmp
aas
cltd
lods
in
xor
in
sub
xchg
xchg
gs
movsl
sahf
pushw
sub
lret
push
xchg
mov
ljmp
xchg
gs
mov
push
push
lret
sbb
out
cld
cwtl
lret
inc
or
cltd
sbb
lods
popa
pop
sbb
sub
cs
cs
cwtl
hlt
jne
stos
imul
push
aad
pop
rcl
ss
fisttpll
adc
aas
stos
push
ret
mov
push
cmpsl
xchg
cmc
lret
xchg
mov
mov
push
xchg
mov
mov
in
mov
pusha
xlat
xor
loope
lahf
cmp
cmp
and
lods
and
subb
push
je
aas
push
add
adc
push
mov
fdiv
ds
cmp
imul
inc
mov
idivb
jg
fld
in
dec
idivb
add
bound
lea
shl
daa
dec
cltd
push
iret
xor
push
mov
icebp
pmullw
mov
imul
test
fwait
or
sub
shrb
dec
xchg
jnp
mov
pop
xchg
ret
cmp
push
dec
ljmp
or
dec
pop
in
push
sub
outsl
push
faddl
pop
inc
scas
in
idiv
xchg
push
pop
ds
enter
mov
push
call
mov
push
inc
xchg
mov
ja
and
mov
xlat
add
push
xchg
rorb
and
lock
add
mov
mov
bound
adc
push
addr16
jnp
shl
cmp
adc
sarb
push
xchg
outsb
fisttps
or
push
jge
jo
addb
adc
sub
sahf
adc
jbe
push
xchg
or
inc
cmp
lods
orb
adc
clc
jl
dec
in
movzwl
xor
mov
fistpl
add
adc
xchg
push
rol
sbb
sbb
ficompl
dec
fwait
sti
orb
pop
xchg
pop
rcrl
xchg
movsb
mov
dec
sahf
mov
and
jno
mov
mov
jae
xchg
std
jnp
mov
loop
fwait
push
jge
pop
fisubrs
aas
xchg
mov
aaa
jnp
lret
mov
in
arpl
sbb
sub
icebp
mov
aam
mov
push
mov
cmp
rcrb
fwait
xchg
mov
in
add
push
mov
stos
movaps
add
pop
fldcw
adc
iret
test
sbb
and
gs
fimuls
pop
mov
push
fnstcw
mov
imul
sbb
movsl
and
jg
jno
adc
xlat
inc
sbb
or
and
pushf
movsl
jns
push
loop
mov
inc
push
sar
push
push
push
pop
push
dec
bound
arpl
adc
cld
xchg
mov
lock
xchg
cltd
inc
mov
and
bound
lahf
fucomi
pop
test
adc
adc
loop
jo
ds
sub
xchg
pushf
daa
inc
in
fdivp
sbb
nop
test
inc
frstor
jae
pop
icebp
test
xchg
lock
outsl
shl
int
fucom
jns
std
inc
stos
sbb
popa
test
mov
and
pusha
hlt
out
into
pushf
icebp
es
jl
int
mov
test
fisubrs
stc
adc
addr16
push
push
jg
pop
fisubs
repz
out
adc
sub
or
lret
iret
fimull
out
or
xchg
dec
ja
cmp
scas
lods
fildl
xchg
push
push
and
rcrl
push
lcall
xor
sub
pop
jnp
xchg
or
jmp
pusha
or
dec
ljmp
mov
lds
pop
or
loope
daa
test
mov
inc
mov
fmull
daa
mov
ss
xchg
xacquire
xchg
add
mov
lods
and
ficompl
mov
adc
pop
jmp
daa
push
mov
push
push
jno
not
cmp
inc
into
cmp
jmp
and
push
or
fisttps
shrl
add
xchg
mov
hlt
or
imul
jno
pop
dec
xchg
addr16
jle
jecxz
mov
xor
movsl
push
mov
mov
xor
test
jne
js
andb
fldt
push
cwtl
notl
mov
lret
test
mov
cs
push
sub
sub
jns
add
das
cmp
or
clc
or
cld
mov
push
mov
adc
sti
push
cmp
orl
xchg
push
mov
call
mov
fwait
int3
in
push
push
mov
test
fnstsw
sub
xor
call
jb
push
idivb
lods
test
sbb
rorl
ret
push
mov
jbe
xchg
aad
mov
movsl
mov
ret
mov
or
mov
push
mov
dec
jp
cmpsl
jne
stos
xor
mov
icebp
dec
lods
push
in
sub
jmp
dec
dec
adc
rolb
adc
fidivl
sbb
lret
sub
pop
mov
loope
and
enter
das
loope
xchg
jo
dec
add
adc
fsubl
mov
test
mov
jl
mov
test
cmp
inc
and
xchg
jg
xchg
lret
dec
pop
pop
das
aad
cmp
adc
repz
and
bound
test
gs
ret
insl
bnd
in
push
andb
pop
adc
aas
xchg
xlat
push
inc
xchg
inc
imul
idiv
mov
icebp
lods
rep
adc
xor
shl
roll
and
mov
pop
push
and
push
jecxz
lods
dec
outsl
shrb
jb
inc
mov
mov
loop
lock
mov
daa
fsubrl
push
or
popf
mov
outsb
rep
and
sub
hlt
sub
js
cmp
push
test
xlat
sbb
cs
out
imul
pop
jecxz
add
pop
pop
fimull
xorl
maxps
mov
mov
ljmp
fsubs
mov
sbb
dec
imull
rcrl
dec
adcl
in
mov
fidivrl
insb
jg
movb
push
stos
dec
mov
xchg
mov
sbb
scas
sbb
push
sbb
rolb
fs
inc
or
sbb
jge
arpl
sbb
sub
cmp
adc
insl
ja
int3
mov
adc
mov
insl
leave
fistps
pop
mov
cltd
dec
xor
insb
pop
and
pop
aas
push
cs
or
bound
icebp
or
aaa
push
sbb
mov
jecxz
jns
dec
jge
cwtl
cmp
test
mov
add
pcmpeqw
jle
xor
dec
jo
xchg
scas
mov
adc
cmp
fdivrs
lret
push
mov
outsl
pushf
jo
jle
push
out
dec
filds
jne
dec
repnz
fs
sub
xchg
and
mov
ret
clc
sahf
mov
lods
cmpsb
mov
jae
test
lcall
ljmp
add
push
repnz
int3
shlb
pushf
lahf
dec
push
jbe
idivl
mov
mov
daa
sub
cmc
adc
pop
cmp
push
ss
dec
es
pop
popf
mov
cmp
loop
into
jo
inc
fcompl
and
lock
nop
cmpsb
inc
dec
mov
test
cwtl
into
inc
jge
push
inc
sbb
dec
insl
shlb
xchg
cmp
push
push
lret
insl
inc
and
xorl
or
ja
and
cmpsl
dec
mov
aaa
dec
add
sub
pop
or
movsl
jl
ja
pop
sub
fnstenv
xor
mov
mov
outsb
pop
js
jg
mov
pop
aam
enter
adc
fsubr
pop
push
inc
and
mov
mov
repnz
adcb
pop
or
jo
xor
adc
xor
rolb
mov
test
cld
cmpsb
fs
fisubrl
push
imul
pop
addb
inc
pop
inc
roll
test
mov
rolb
outsl
test
in
jl
subl
jnp
dec
add
fs
xor
pushf
dec
sub
adcb
outsb
dec
xor
push
faddl
pop
dec
je
add
mov
or
adc
pop
pop
leave
xor
jg
arpl
rcrl
jmp
ret
cmpsl
in
and
mov
adc
cwtl
push
push
add
fldcw
sarb
stos
fmull
sti
cmp
push
xchg
pop
fdivr
inc
dec
pop
mov
cld
jecxz
cmp
not
sbb
sub
cmpsl
mov
gs
movsl
fcoml
outsl
push
or
rcl
cli
call
sub
pop
cmpsb
in
and
imul
add
cs
lret
pop
mov
sbb
les
lret
adc
jo
imulb
jns
dec
mov
decb
mov
lcall
add
hlt
movsb
dec
insl
imul
xor
cmp
ret
andb
dec
add
addr16
jmp
jb
stos
push
cmp
movsb
stos
mov
jmp
sbb
cmp
iret
lods
ret
xchg
cwtl
mov
or
push
fisubrl
test
mov
lea
lock
jle
mov
mov
cs
popf
mov
pusha
pop
dec
push
stos
test
iret
pop
cmp
push
sub
and
xor
jno
rclb
cmp
add
sbbl
sub
loopne
fldl
mov
sub
out
sbb
dec
cmc
jmp
or
lcall
jb
insb
pop
mov
push
les
hlt
loope
mov
jg
rol
out
ds
lds
jecxz
push
dec
xor
les
cs
sbb
and
adc
ljmp
and
pop
add
dec
repnz
add
mov
sub
push
jle
xchg
xchg
pusha
hlt
inc
pushf
scas
loope
xchg
fcompl
dec
popa
adc
mov
out
fstpl
leave
call
rorb
mov
mov
test
jns
into
dec
ret
icebp
fstps
pusha
push
mov
jbe
test
jge
dec
outsl
stos
sub
xor
and
xor
pop
repz
push
ljmp
pop
jge
out
cmp
test
shrb
fistpl
mov
pop
sbb
pop
jb
ficoms
scas
inc
push
and
call
push
xchg
mov
or
xchg
jbe
enter
add
jbe
fwait
leave
jno
jge
aad
mov
mov
cmp
mov
loope
scas
pinsrw
pop
call
arpl
ss
jne
sub
xor
mov
sub
rolb
outsl
jo
jle
fs
cmp
mov
pusha
in
jo
scas
jecxz
stos
push
inc
pop
or
rcrb
xor
sub
push
out
inc
xchg
shll
push
popa
popa
jno
xchg
xor
mov
idivb
xchg
add
scas
out
xor
stc
push
adc
push
ds
xchg
xor
inc
icebp
jnp
push
dec
inc
jmp
imul
inc
push
or
jmp
out
cmc
stc
nop
and
in
add
or
push
xchg
pop
adc
mov
xchg
adc
inc
clc
loope
sti
sub
loopne
sub
out
mov
popa
or
xorb
pusha
pop
dec
push
inc
sub
mov
xor
sub
mov
sbb
mov
jg
and
push
fisttpll
jge
or
and
xor
adc
add
push
xchg
mov
data16
cmp
clc
jne
test
inc
push
sbb
test
pusha
or
push
mov
sub
loopne
lock
cmp
mov
lods
in
gs
xlat
pop
ss
xchg
nop
test
push
test
sub
jne
add
icebp
daa
mov
mov
sbb
ss
sub
or
cld
lods
ret
inc
roll
mov
or
vpor
jns
sbbb
sar
adc
push
ljmp
or
lds
pop
xorb
xchg
mov
movsl
sbb
bound
adc
xor
cmpsb
imul
stos
mov
sbb
mov
cmc
mov
lahf
jo
pop
jecxz
push
cmp
scas
rolb
push
cmp
lahf
mov
movsl
test
cmpl
subl
imul
iret
push
or
cli
movsl
dec
iret
or
lret
mov
add
scas
int3
inc
je
pop
xchg
mov
adc
mov
jbe
cmp
jae
jge
adc
jbe
mov
stos
je
mov
ss
jmp
cmp
cs
jl
cmp
add
mov
das
pop
loop
sbb
rcr
adc
adc
cmc
mov
jno
and
adc
and
jno
jns
dec
cmpl
adc
ret
pop
pop
dec
mov
sub
inc
ljmp
shrb
mov
stos
daa
rclb
push
icebp
inc
and
fdivp
rcll
mov
dec
inc
aam
stc
loopne
es
add
aam
arpl
stos
dec
jg
divl
es
mov
jb
ja
cmc
mov
lods
leave
sbb
xor
jmp
lret
mov
outsb
lcall
xchg
adc
mov
adc
pop
in
push
sub
std
stos
into
aas
pop
fsubl
or
out
and
pop
movsb
xor
and
cmp
sti
pop
fsubr
or
or
adcb
xor
and
cltd
loope
push
sahf
adc
mov
cs
xchg
pop
xchg
xchg
nop
outsb
xchg
sbb
jle
pop
ds
cli
dec
add
mov
dec
in
dec
in
daa
inc
jno
jge
lret
jns
shrl
imul
xchg
or
js
call
lret
jae
xchg
or
push
xor
mov
ja
insl
xchg
xchg
sbb
lahf
cmp
arpl
les
in
xchg
adc
arpl
jl
or
lods
aam
sub
aam
adc
and
mov
loope
or
in
sub
popf
mov
ds
cltd
jmp
jp
mull
jno
xchg
in
popf
and
rcl
sbb
mov
jo
jl
imul
and
sub
addr16
sti
jb
mov
addr16
fwait
push
les
cmp
cmp
daa
mov
adc
or
jne
je
add
aas
push
mov
mov
sti
add
mov
sbb
and
cld
add
inc
aas
dec
xor
leave
mov
sbb
gs
imul
ret
pop
imul
in
nop
shrl
pop
inc
or
cmp
pop
imul
or
testb
xor
incl
inc
vpslld
pop
frstor
xorl
inc
ret
and
mov
push
push
ds
dec
in
mov
pop
cmp
pop
push
dec
cmc
pushf
jae
test
xchg
xlat
push
xor
or
jno
inc
lea
shll
bound
dec
loopne
insb
imul
adc
repnz
orb
or
adc
movsb
pop
leave
mov
jge
xchg
mov
or
loope
or
rclb
rorb
mov
int3
inc
popa
push
andb
adc
aaa
or
jo
pop
dec
repz
roll
cwtl
imul
mov
and
pushf
decb
mov
and
xchg
mov
adc
xor
sbbb
adc
pusha
mov
mov
stos
scas
sub
sbb
cmp
pop
jne
xchg
sbb
stc
dec
dec
stos
fdivrp
out
sbb
test
mov
pop
repnz
addb
mov
rorb
out
sbb
mov
mov
test
xchg
aaa
roll
sbb
xchg
jmp
xchg
dec
test
or
and
repz
xchg
test
rol
js
movsl
addr16
aaa
shll
cld
cs
mov
and
stos
jno
mov
adc
sbb
loop
repz
inc
adc
mov
rcrb
and
test
pop
mov
ret
aad
or
clc
jne
movsl
push
lods
inc
push
leave
and
lcall
mov
jl
dec
cwtl
adc
jcxz
dec
or
pop
lods
sub
adc
or
lea
sbb
add
sti
sarl
pop
add
add
psadbw
cmp
lock
add
mov
lea
mov
int
and
jae
xchg
mov
xchg
xchg
out
add
xlat
fwait
add
fwait
ss
mov
je
pop
dec
mov
adc
mov
sub
sahf
fstps
fwait
data16
rolb
dec
jb
cmp
cli
popa
popa
pop
push
sub
mov
mov
cwtl
out
int3
dec
stos
or
add
aam
mov
shll
mov
mov
dec
outsl
push
adc
hlt
je
in
nop
lods
cvtdq2ps
movsb
lcall
mov
std
dec
sub
test
sub
xorl
daa
out
xor
data16
jae
sub
daa
mov
mov
inc
mov
out
mov
push
sbb
enter
divb
pusha
sahf
xchg
adc
in
sub
dec
sub
test
push
mov
mov
or
jo
stc
dec
ds
adc
ss
sti
pop
sti
stos
cmp
xchg
xchg
shll
sbb
jmp
loopne
and
addb
pop
in
loope
divl
aaa
cmpsl
je
scas
shlb
in
rcll
xchg
or
addr16
jl
mov
add
xchg
xor
mov
call
rdmsr
sub
lret
mov
mov
cmp
mov
in
data16
pop
lds
cmc
push
fimull
xchg
xor
mov
dec
cmp
mov
fmuls
add
xchg
shl
out
fistpl
inc
loop
icebp
jmp
icebp
insl
and
and
mov
xchg
mov
fldenv
or
xchg
jge
negl
fldt
jne
outsl
fstps
repnz
jmp
cli
cmc
repz
aam
pop
cvttps2pi
xchg
repz
out
or
sub
sub
sub
add
or
sbb
iret
adc
clc
ficompl
mov
outsb
shrl
add
mov
in
adc
cli
mov
lcall
inc
or
stos
add
ds
jb
mov
dec
push
into
cmp
cmp
and
and
jle
fs
mov
and
push
outsb
cmc
sbb
cmp
xchg
cwtl
out
and
imul
das
insb
push
fstpt
or
push
testl
mov
or
xor
mov
movsl
inc
fimull
arpl
pop
stos
hlt
shrl
pop
out
nop
scas
bound
or
jns
inc
pop
mov
dec
and
popa
into
dec
add
std
sub
icebp
jno
inc
ficoms
adc
movb
aas
sub
or
das
xchg
or
or
xor
jns
xlat
pop
daa
or
lret
out
addr16
fwait
out
fisubrl
pushf
ja
inc
je
bnd
lret
or
pop
adc
sub
lret
and
lahf
add
outsl
jmp
adc
xchg
push
sbb
insl
mov
sub
push
cs
sub
xchg
aaa
lods
cmpsb
jns
out
xor
mov
pusha
xchg
int3
pop
xchg
xchg
and
insl
lods
mov
inc
jmp
out
cltd
fimull
sub
in
pop
dec
jae
stc
in
jle
mov
cmp
lods
or
pop
mov
in
je
fucom
adc
cmp
out
shll
sub
inc
movsl
ljmp
cmp
imul
jns
mov
xchg
or
push
into
dec
js
sbb
inc
dec
rcl
dec
out
adc
pop
mov
loop
fcoms
sbb
push
xchg
inc
aad
cmp
dec
ss
imul
mov
iret
push
jae
addr16
test
mov
add
sub
inc
fldt
jno
in
cwtl
add
lcall
inc
inc
push
out
sbbb
jb
or
shr
pop
dec
push
loope
test
jge
lret
movsl
je
enter
subl
aam
adc
mov
and
ret
pusha
pop
cmpsb
out
testb
jbe
sahf
xlat
mov
jb
fcmovbe
xor
xchg
dec
ret
lahf
or
push
out
or
xchg
add
icebp
sub
dec
or
jmp
and
in
mov
enter
mull
pop
dec
test
je,pn
adc
sub
add
xorl
adc
pop
repz
jmp
add
repz
cmp
ret
rcrl
mov
ret
mov
call
adc
sti
fldt
or
pop
sarl
mov
sub
sub
ror
mov
test
je
out
mov
test
test
sarb
aas
je
repnz
pop
cmp
fucomp
lret
adc
ja
mov
out
fucomp
call
jno
dec
popa
cli
xlat
push
cwtl
es
sbb
js
bound
and
push
sti
call
mov
lahf
sub
rcrb
pop
push
lret
sbb
sub
outsb
sbbl
xor
ljmp
movb
dec
es
inc
inc
sbb
cmpsb
cs
popf
push
xchg
adc
fdivl
mov
imull
jae
add
inc
and
push
xor
pop
sub
xor
scas
adc
inc
sarw
lock
jmp
lea
popa
xorb
and
dec
or
and
insb
rcll
aad
push
mov
jbe
jnp
push
stos
lods
data16
cwtl
mov
in
js
ficompl
insl
movsb
cmp
sbb
lcall
or
je
lret
fmull
pop
sbb
je
cmpsl
push
imull
popf
push
je
xor
in
pushl
inc
test
or
fwait
test
jge
loop
addb
and
add
test
leave
fisttpl
or
xor
cmpb
add
and
aaa
xchg
icebp
push
push
push
hlt
in
insl
test
jecxz
mov
in
adcl
imul
cld
out
mov
nop
mov
lahf
sub
adc
sahf
pop
dec
jnp
dec
into
jle
cltd
xchg
mov
push
imul
adc
hlt
outsb
jge
mov
iret
loopne
jl
mov
sbb
xor
pushf
dec
mov
stc
fstpl
mov
jmp
xchg
pop
and
out
mov
stc
mov
or
xlat
std
cs
movsl
pushf
mov
int3
xchg
and
dec
rclb
dec
std
subb
xchg
push
jnp
movsl
cwtl
jno
and
add
scas
pop
sbb
mov
xchg
jo
and
xchg
addr16
xor
lahf
insl
scas
dec
fwait
sbb
test
int3
insl
mov
inc
popl
fimull
cld
fidivrl
jge
out
push
mov
and
jo
popa
lea
and
nop
clc
arpl
or
repnz
pop
adc
xor
push
in
mov
sarb
push
hlt
and
xor
cltd
test
mov
mov
jg
and
or
addr16
jmp
and
push
or
dec
xchg
push
sbbb
mov
mov
sahf
std
das
pop
jmp
test
lcall
dec
test
incb
cs
outsb
in
lods
aas
xor
test
movsb
repz
imul
out
pushl
pop
popf
mov
jl
enter
pop
and
in
movsl
and
inc
xchg
pop
movsb
mov
xchg
ds
pusha
lcall
sbb
push
dec
aad
push
inc
aam
lds
cmp
lods
jns
or
cmpsl
ret
jl
push
loopne
cmp
ljmp
cmp
mov
inc
mov
inc
xchg
fisubrl
fistl
adc
xchg
test
into
fcoms
sar
sbb
xchg
enter
jg
and
lea
mov
push
loope
mov
xchg
add
outsl
mov
lds
push
jns
imul
in
sub
push
mov
bound
pop
movb
and
hlt
dec
ret
or
insb
mov
push
mov
loope
or
jns
push
daa
sbb
stos
scas
movsl
hlt
into
mov
xor
dec
mov
js
andb
jle
movsb
lcall
bound
into
outsl
and
rcrb
pop
and
setnp
psubsb
movsb
cmc
dec
pop
or
into
jb
jg
mov
xchg
mov
cwtl
add
inc
loop
jge
jnp
repnz
sub
test
mull
mov
aam
add
sbbl
sub
imul
sti
mov
outsb
dec
and
test
xlat
cltd
jb
xchg
sbb
dec
cltd
jle
leave
push
mov
cltd
popf
xor
add
fld
mov
call
and
shrl
xchg
out
xor
add
add
cmc
ret
push
fwait
mov
add
por
fists
jo
cmp
sub
mov
jmp
lods
fwait
jmp
ss
pop
mov
push
out
push
fldl
cld
dec
or
jbe
dec
nop
aam
ret
scas
out
sub
xor
mov
xchg
cmp
or
std
cli
cli
inc
notl
pop
or
pop
xor
lret
push
rolb
sub
xchg
sbb
add
stc
mov
ret
test
mov
popa
shlb
lock
fistpl
cwtl
stos
call
lahf
and
cmpsb
insb
xlat
xorb
and
mov
dec
jle
add
jae
je
push
xchg
mov
clc
mov
mov
adc
pop
movsb
lods
adc
pusha
popa
call
inc
inc
jae
lahf
es
xchg
pop
lahf
and
pop
popl
jmp
inc
adc
cmpsl
jo
je
jp
addl
cmp
hlt
sti
das
shl
popa
aaa
jns
leave
icebp
sub
nop
dec
inc
cmp
jg,pt
popf
adc
lds
cs
jle
pop
xlat
cs
ret
cmc
pop
gs
xlat
lock
or
loopne
jmp
adc
outsb
mov
cmp
jle,pt
xchg
rclb
cmp
pop
loope
xchg
lock
mov
add
scas
add
xchg
aam
js
mov
mov
push
push
xor
icebp
leave
sub
xor
scas
divl
push
movsb
xchg
pop
enter
gs
pop
pop
popf
ja
lcall
out
in
push
sbb
les
clc
xchg
xchg
mov
pop
and
jl
clc
shlb
movsl
popa
inc
idivb
xchg
mov
icebp
dec
ret
mov
inc
inc
and
sbb
jne
jmp
lea
jmp
xchg
cwtl
xchg
cli
fs
xor
rorb
fwait
push
shlb
push
sbb
ja
mov
xor
aam
pop
push
cmp
jge
xor
pusha
and
add
cmp
insl
movsb
ret
or
sbb
xchg
xchg
scas
cmp
inc
insl
loopne
adcb
pop
push
sbb
decl
aas
add
dec
mov
add
mov
daa
ror
push
pop
push
imul
sti
out
mov
adc
xor
pop
les
jbe
sub
scas
out
sbb
inc
xor
adc
xchg
scas
sub
les
bound
das
iret
and
vmovsd
fisubl
outsb
insb
and
mov
sbb
into
mov
pop
cmc
cli
mov
adc
add
inc
xchg
stos
loopne
lahf
in
pusha
sbb
lahf
sub
mov
mov
imul
mov
mov
jecxz
push
hlt
pop
ja
xchg
sub
shl
dec
mov
sbb
pushl
imul
inc
bound
call
sahf
dec
stos
out
mov
pop
cmpsb
in
xchg
and
cltd
mov
leave
loop
mov
in
adc
xchg
gs
or
sbb
shl
hlt
scas
sbb
dec
stos
xor
sbb
cmp
adc
push
dec
mov
push
mov
dec
mov
addr16
out
notl
in
fists
jno
pop
fsubs
in
lock
mov
dec
inc
vpshlw
xchg
outsb
and
cs
sbb
pop
repz
shll
out
dec
in
dec
or
jo
outsl
ss
jne
jnp
pop
lcall
cmc
fsubs
test
movl
xor
mov
and
mov
test
pop
fwait
mov
loopne
mov
or
xor
pop
decb
mov
push
push
mov
push
dec
call
xchg
pop
mov
test
and
lea
movsb
scas
inc
in
addr16
aaa
in
mov
mov
ds
addr16
pop
jns
out
jae
mov
icebp
outsb
sub
call
xor
inc
xor
jne
xchg
ds
outsb
xchg
sbbb
xor
add
cltd
test
out
jne
cmp
jl
add
dec
std
push
shlb
and
imul
in
xchg
das
or
test
ljmp
in
and
jmp
sub
stc
test
cltd
pushf
test
ret
sub
popf
scas
sbb
shl
push
orb
inc
inc
test
test
pop
icebp
jl
inc
call
sub
or
or
fcompl
in
add
xchg
aas
neg
loop
test
test
xor
ret
rcrb
iret
jns
jns
call
sbb
jecxz
faddl
mov
mov
jno
mov
aas
cmp
adc
aad
push
lds
xchg
loope
lea
add
data16
or
in
pop
shll
repz
ljmp
fisubl
xlat
sbb
icebp
sbb
addr16
insb
fdiv
cmp
adc
pop
sti
lea
mov
insl
je
pop
jmp
shl
push
lret
add
and
dec
mov
dec
cmpsb
dec
test
pop
inc
mov
add
subl
add
daa
out
gs
aam
xor
dec
andl
cmpsl
fistps
mov
jne
clc
mov
pushf
les
repz
adc
testl
mov
lahf
inc
cmpl
or
iret
push
xor
cld
cli
test
xchg
gs
arpl
pop
lcall
sub
push
mov
std
pop
xchg
inc
mov
jne
mov
and
jnp
mov
xchg
arpl
shlb
outsl
clc
push
sbb
sub
fisubrs
sub
orl
mov
shl
scas
in
and
int3
fistpll
mov
outsb
movsb
and
clc
fisttpll
push
loop
xchg
aaa
bnd
jg
xor
pushf
xor
fs
rcrb
test
lock
hlt
xor
sbb
ljmp
sub
pop
dec
adc
adc
sbb
mov
es
dec
std
fmul
roll
mov
jae
or
and
inc
adc
lds
inc
mov
jne
js
jp
insb
lahf
jnp
sar
lret
inc
imul
lahf
loopne
cs
cmovo
jbe
mov
mov
fs
inc
idivb
push
xchg
dec
cmp
adc
adc
or
test
daa
pop
and
sbb
or
mov
shlb
dec
mov
adc
mov
scas
sbb
dec
mov
inc
cmp
xor
outsl
mov
pop
movsl
pop
push
inc
jbe
cs
dec
sahf
xor
les
arpl
hlt
sub
cmp
insb
pop
jp
inc
and
inc
pop
xchg
scas
mov
cmc
out
fwait
add
inc
cmc
push
cmpsl
push
mov
call
fcmovb
loopne
in
sti
addr16
loopne
ss
mov
sbb
jge
sbb
pop
mov
xchg
and
xchg
in
pop
stc
jnp
in
jo
xlat
shlb
rcrl
fstps
sbb
aaa
test
incl
outsl
insb
push
cltd
out
jg
jge
ss
iret
cmp
jp
jp
sbb
xlat
sbb
ret
lods
jb
push
outsl
lods
xorb
insb
dec
push
sbb
pop
popf
xor
sti
sbb
push
lea
enter
negb
pusha
scas
push
lods
lea
inc
xor
ljmp
in
xor
pop
outsl
jl
add
or
pusha
adcb
jmp
jecxz
pushf
rcll
lock
adc
xchg
mov
xor
inc
push
lahf
or
inc
adc
pop
cmc
fld
gs
mov
sti
dec
push
inc
add
pop
jns
inc
sub
daa
xchg
rcl
loop
fstp
add
imul
movsb
push
sahf
incl
popa
jmp
outsl
and
lret
cmp
and
or
or
push
ds
mov
dec
cmp
mov
cmp
int
or
fcmove
ljmp
pop
movsl
cmp
gs
mov
sbb
push
cmpsl
add
pop
dec
stos
pusha
decl
inc
xor
lods
mov
jg
xor
jecxz
inc
push
aaa
cli
pop
pusha
push
call
ljmp
test
push
test
sahf
xlat
mov
fisubrs
or
leave
and
pop
aas
push
push
jbe
xchg
cmp
mov
sbb
jp
shlb
or
xor
in
jnp
sbb
cmpsl
push
int3
push
cmp
lahf
sub
icebp
leave
xchg
out
idivl
mov
mov
and
push
enter
int
xchg
jmp
subl
nop
fldl
pop
xor
or
push
pop
repz
loop
xor
xor
rolb
push
xchg
cmp
xor
sub
jg
inc
repnz
loopne
jb
push
jb
imull
outsl
dec
add
jge
fwait
out
fldenv
into
ljmp
inc
aad
int3
cmp
fwait
sub
setae
iret
ror
movsb
push
mov
adcb
cli
or
rolb
xchg
add
mov
cmp
push
pop
jne
fists
fisttpll
adc
repz
cmpl
mov
xchg
iret
lcall
in
dec
push
xchg
xor
xor
addr16
push
insb
insb
pop
add
and
and
popa
inc
mov
fs
add
dec
xchg
adc
xor
insl
pop
adc
addr16
mov
and
xor
xchg
lcall
xchg
and
push
in
dec
into
inc
jecxz
sbb
shl
dec
xchg
sbb
xchg
int3
xchg
loopne
inc
popa
mov
mov
lock
mov
outsb
iret
pop
loope
sub
dec
mov
ds
in
movsl
fwait
test
fwait
fwait
xchg
dec
je
outsb
lods
jg
hlt
mov
data16
rorl
jl
stos
mov
xor
in
cmpsb
mov
sub
or
testb
push
das
cmp
cmpl
lds
sub
xor
addr16
cs
cmpsb
call
dec
lcall
xor
test
sbb
push
jl
in
jae
add
mov
int
cmp
js
outsl
idiv
incb
loopne
shrl
push
cmp
mov
into
cmp
mov
ja
sar
mov
dec
push
mov
cwtl
lods
popa
shrb
dec
addr16
sub
push
mov
cli
cmp
inc
hlt
mov
dec
cmpb
and
pop
inc
ja
push
fcom
xor
xor
mov
mov
sbb
push
sbb
add
movsl
icebp
pop
inc
and
cwtl
mov
mov
lods
push
sub
inc
loop
sub
shll
inc
pop
lea
xchg
mov
ret
ljmp
fldcw
dec
in
cld
adc
inc
inc
inc
inc
addl
mov
cwtl
sti
xchg
aas
scas
mov
movsb
xor
lret
fnstenv
ja
into
cld
xchg
mov
faddl
cmpsb
in
mov
sbb
xchg
pop
lahf
jp
fwait
test
popa
and
sarl
mov
add
test
add
rclb
test
mov
gs
inc
pop
or
pop
mov
cmp
sti
jb
test
fsts
adc
cld
into
push
jnp
and
mov
mov
cmp
xlat
pop
inc
push
repz
in
sub
call
in
aad
pop
push
enter
movsb
jecxz
lea
cld
ret
xor
sub
decb
and
xor
or
mov
sbb
rorl
or
cltd
add
fucom
pop
data16
icebp
movsl
das
lock
cmp
lea
jg
mov
inc
shrl
into
and
and
stos
mov
jne,pt
mov
outsl
push
adc
pop
test
xchg
cli
xor
ret
int3
push
mov
xor
xchg
loopne
mov
popf
hlt
int
inc
sbb
or
out
adc
push
pop
xor
shrl
xchg
push
xchg
jp
stos
repnz
sub
adc
enter
movsl
mov
mov
adc
mov
pop
mov
add
cmp
jl
xlat
aaa
dec
pop
mull
push
cmpsl
xchg
push
shlb
add
bound
imul
xor
dec
or
mov
fs
in
add
sub
pop
xchg
pop
add
hlt
loopne
nop
inc
mov
scas
repnz
ret
orl
inc
sbbl
xchg
stos
xchg
jge
pop
aas
mov
test
xlat
divl
mov
test
sbb
fisubrl
lods
jle
and
pop
mov
lret
out
pop
lahf
icebp
mov
and
mov
and
adc
inc
in
or
clc
int
shr
and
pushf
and
mov
les
cmp
adc
flds
push
cmp
sub
cmp
aam
icebp
and
mov
and
push
sbb
jnp
lcall
sbb
or
idiv
jne
je
cmp
lret
mov
push
xchg
jo
inc
push
shrb
bound
mov
jp
adcb
loopne
mov
cmpsl
outsb
adc
adcb
nop
jbe
jl
in
in
adc
pop
mov
or
repnz
dec
add
loopne
cmc
adc
mov
pop
addr16
mov
int3
ret
mov
negl
insl
mov
adc
inc
mov
icebp
jg
ds
xor
mov
mov
cmp
or
xor
je
push
pop
or
test
pop
lds
jb
mov
adc
faddl
push
ror
aam
test
xor
and
sub
push
cmpl
xchg
jno
lahf
ja
data16
je
mov
adc
scas
inc
in
sahf
mov
insl
into
movsl
mov
jnp
lret
daa
shll
insl
sbb
movsb
jmp
or
cmp
xor
repnz
mov
lea
rcll
add
pop
mov
pop
cmp
loop
push
cmpsb
inc
flds
pop
mov
jl
test
out
cld
fbld
sub
push
fstpl
test
xchg
addr16
xor
shlb
int3
add
or
xchg
dec
jnp
mov
sbb
lods
xchg
icebp
jno
je
loopne
sbb
jns
into
xchg
out
outsb
sbb
sbb
andl
clc
or
jmp
xchg
dec
pop
pop
and
rcrb
int
jmp
test
stos
cs
fmulp
mov
aad
cmpsl
push
jo
xor
mov
idiv
inc
mov
push
push
xchg
fists
cmp
xchg
iret
jg
je
mov
and
ret
shll
pop
xor
inc
addr16
or
mov
dec
cmc
mov
xor
push
lock
xor
xchg
and
add
mov
inc
cmp
gs
je
out
pop
icebp
cli
cmp
fisttpll
pop
push
jle
leave
insb
and
dec
jo
lret
or
imul
add
shlb
sbb
pop
ret
fcmovnbe
mov
mov
xchg
popa
jne
pushl
adc
pop
pushf
imul
xor
mov
pop
dec
pop
xchg
fimuls
stos
cmc
and
fimuls
jg
push
shll
inc
push
aad
mov
xchg
inc
rcrl
stos
or
cwtl
imul
popa
push
mov
xchg
mov
sbb
push
xchg
push
dec
dec
inc
pop
cld
sbb
inc
mov
sub
mov
xor
mov
add
mov
inc
repz
dec
mov
jne
dec
push
sbb
cli
and
pop
leave
fadds
push
ret
lret
mov
cld
fs
xchg
dec
in
aaa
cltd
imul
sbb
cltd
sbbb
cli
inc
xlat
testl
and
ror
mov
mov
inc
dec
mov
lods
arpl
jl
cmc
lcall
mov
pop
adc
movsb
mov
cmp
mov
es
adc
int3
pop
int3
sub
int
stc
cs
cwtl
push
add
sbb
decl
bnd
arpl
roll
push
dec
add
push
repnz
and
xor
mov
and
inc
pop
inc
dec
xlat
xchg
or
std
mov
and
dec
dec
mov
xor
mov
cli
clc
out
aam
fwait
adcl
cmp
inc
add
xor
sub
and
imulb
call
inc
xor
sbb
pop
sti
mov
test
out
shlb
leave
mov
fldz
xlat
fdivl
ficoml
inc
fcoms
aam
or
fcoml
roll
xchg
out
xlat
mov
inc
repz
xchg
mov
faddl
sbb
pop
pop
inc
push
cs
mov
ja
sbb
pop
jmp
sarl
arpl
sub
lods
mov
inc
push
cltd
mov
sbb
addr16
sbb
push
enter
mov
lock
ljmp
popa
gs
out
dec
aam
jecxz
inc
test
fbstp
fnstcw
mov
sbb
js
xchg
add
sti
stos
iret
enter
les
jle
mov
sub
popaw
jno
add
mov
std
cmc
jl
cmp
xor
inc
repz
xor
stos
nop
std
out
xor
xor
or
add
sub
pop
dec
adc
mull
xchg
mov
add
pusha
sub
das
or
dec
leave
sub
je
xor
dec
and
icebp
xchg
or
std
cwtl
mov
sub
out
lock
dec
pushf
pop
lds
mov
outsl
mov
and
dec
fidivl
push
cld
lods
lods
insb
fcom
cmp
testb
pop
and
or
sub
aas
shlb
push
cwtl
imul
in
jnp
loope
fcomi
stos
jb
xchg
sarl
sub
test
adc
mov
pop
mov
jle
xor
in
test
inc
aas
lcall
xor
int3
lods
divb
sub
push
imul
cmp
in
inc
mov
icebp
or
es
shll
dec
pop
sbb
fbld
andl
xchg
mov
mov
mov
bound
push
stc
test
push
fptan
imul
add
jno
and
pop
negl
out
lahf
cmpsb
cld
mov
sbb
mov
add
sub
cld
fxch
dec
inc
sti
dec
movsl
inc
inc
inc
inc
mov
sti
imul
lock
lcall
loope
clc
add
and
mov
addr16
mov
ljmp
push
adc
xor
push
sub
out
icebp
add
sub
push
sbb
or
add
lret
ljmp
or
add
pop
loope
lret
in
scas
shlb
shll
psubw
dec
std
jmp
or
and
xchg
xchg
bound
xchg
call
cmp
or
jl
fucom
inc
jnp
xor
mov
test
popf
in
push
cld
xchg
jl
sub
repz
inc
jp
sbb
cmpsb
fs
pop
imul
daa
inc
mov
xchg
ret
add
bound
mov
push
das
mov
jmp
scas
xor
fiaddl
xor
sti
fs
call
jmp
mov
cmp
mov
or
aam
jae
into
push
dec
pop
aas
test
sub
fwait
xchg
jge
push
add
sbb
idivb
or
scas
pop
rcrl
add
xchg
sti
add
push
jno
lock
fwait
mov
js
adc
popa
loopne
pushf
push
pop
popa
sub
xor
shll
out
pop
imul
sub
jb
mov
cli
mov
test
daa
ljmp
daa
je
iret
dec
dec
outsb
inc
fwait
mov
or
pop
sub
adc
outsl
sbb
add
or
xor
aaa
sti
dec
in
shll
mov
in
jecxz
inc
push
leave
test
push
in
mov
stc
or
es
adc
repz
push
push
dec
jle
or
lret
ret
aas
shlb
push
mov
mov
dec
cmp
jne
sbb
xchg
xchg
inc
fcoms
aaa
mov
ret
fisttpll
or
xor
pop
insb
adc
dec
adc
adc
mov
neg
push
cs
sbb
mov
pop
sbb
cmc
cwtl
into
bound
enter
lcall
pop
or
adc
xchg
pop
jp
xchg
and
insb
mov
pop
stos
imul
cmp
push
sbb
mov
clc
pop
push
mov
xor
ljmp
dec
cmp
cmp
jbe
ret
mov
xchg
aas
inc
jne
iret
mov
sbb
pop
pop
dec
push
test
int3
xor
dec
enter
xchg
mov
lea
inc
pop
jns
cmp
lods
inc
pop
sub
out
jmp
out
mov
mov
js
cmp
pop
popf
xor
mov
or
xchg
cltd
decl
cmp
adc
mov
xchg
test
out
je
mov
jmp
cmp
hlt
jmp
xchg
fcmovu
xor
push
insb
mov
imul
ficomps
mov
mov
xchg
and
in
into
mov
fstps
pop
adc
insb
loope
imul
push
xchg
stos
daa
ret
xchg
jne
fstpt
sti
insb
popf
sbb
mov
add
js
mov
pop
inc
arpl
xchg
sub
sub
jp
sbb
popa
pop
jle
dec
or
subl
push
std
cmp
in
lods
dec
dec
mov
mov
inc
test
and
xor
test
call
sub
int
add
xchg
pop
aad
xchg
mov
adc
xchg
shrb
mov
push
repz
sbbl
sbb
scas
out
fists
popa
out
push
adc
xor
inc
je
xor
sbb
pop
and
icebp
push
jle
and
lock
cmp
xlat
es
inc
pop
lods
or
dec
jg
nop
xlat
imulb
mov
into
out
push
xchg
cmpsl
xchg
sub
arpl
adc
cli
or
lods
and
jno,pt
imul
mov
fwait
xlat
push
imul
mov
jnp
lcall
dec
add
dec
fisttpll
push
imul
js
mov
cli
dec
sbb
push
or
test
repnz
cs
inc
or
lahf
jmp
or
cmp
js
ja
add
int3
sbb
dec
add
xchg
push
mov
ja
pushf
add
fisttpl
and
ja
mov
scas
pop
divb
mov
out
imul
lret
int
test
stc
bound
lret
test
push
vmread
ret
sbb
loopne
add
into
mov
lea
push
fbld
fdivs
popa
pop
pop
dec
and
dec
stos
sbb
inc
add
cs
and
xchg
sar
repz
adc
xor
pusha
jmp
mov
shl
lea
pop
outsl
pop
mov
and
mov
add
repnz
sbb
cltd
ljmp
mov
loop
aad
cmc
add
add
fdivrl
adc
cmpl
rorl
ljmp
dec
xchg
rolb
jo
rcrb
loop
push
mov
push
pop
push
xor
sub
mov
push
jbe
jle
int3
add
test
jns
dec
inc
sub
fadds
fcoml
fsubr
or
sti
jmp
sbb
or
cs
es
sub
in
mov
pop
ljmp
das
pop
ss
loop
test
jp
jp
push
xchg
push
hlt
orb
add
mov
sbb
movsb
cmpsl
cmp
sub
js
lahf
push
add
js
cmp
sub
popa
clc
sub
and
divb
mov
sbb
add
lret
insb
mov
outsl
jle
data16
fdivr
push
rcrl
call
in
daa
mov
dec
dec
cmp
ror
mov
out
call
jle
cltd
insl
ret
fs
cs
dec
ror
bound
ja
and
xchg
iret
inc
sti
adc
jns
push
pop
lahf
push
incb
iret
xchg
sahf
repz
xchg
scas
leave
jmp
push
pop
pop
add
fwait
aad
in
inc
adc
jns
mov
std
fisttpll
pop
leave
arpl
pop
and
mov
lahf
push
rcrb
test
or
inc
scas
int
and
mov
sti
gs
mov
iret
pop
leave
cmp
insb
das
xor
pushf
bound
enter
xchg
xchg
push
insl
mov
and
addl
imul
xorl
iret
jge
dec
loop
iret
aas
in
or
xchg
inc
fwait
aaa
cmp
in
mov
mov
ret
in
jae
lea
and
test
inc
add
and
movsl
push
insb
pop
pop
ljmp
jge
outsb
and
icebp
xchg
ljmp
ds
jne
pop
inc
aaa
add
lods
cmp
roll
rorb
mulb
sbb
adc
cmp
call
enter
pop
cld
bswap
jmp
scas
push
aad
mov
test
mov
jae
sub
mov
cltd
inc
decl
fimuls
adc
cmp
jp
outsb
cmp
adc
add
in
and
mov
dec
add
mov
push
xchg
cmpsl
and
add
mov
and
jnp
popf
ret
lea
nop
push
in
add
cmpb
add
jb
leave
inc
fcmovb
out
mov
jle
or
sarb
add
stos
gs
lds
pop
insl
pop
adc
imul
mov
cmp
push
xchg
loop
push
cmp
dec
or
xlat
mov
mov
inc
push
and
or
xchg
repnz
xchg
mov
test
cmp
xor
dec
arpl
cwtl
push
test
arpl
lahf
push
cmp
sub
dec
repnz
xor
iret
mov
popa
mov
pop
rclb
imul
dec
xor
aas
xchg
ja
mov
aas
xchg
shll
xor
mov
dec
mov
fimull
cltd
xchg
pop
inc
adc
jae
inc
test
pop
jecxz
xlat
call
ja
pop
add
mov
movsl
in
sbbb
xchg
jl
or
sub
hlt
xchg
out
lret
aaa
shrb
faddl
sbb
pop
imul
jp
xor
dec
mov
fwait
jecxz
ss
xor
mov
inc
lods
loop
lock
mov
mov
mov
lcall
mov
and
mov
cltd
dec
sbb
sbb
sbbb
jnp
jb
sti
xor
sbb
sub
mov
loopne
lea
mov
je
out
imul
inc
pushf
dec
insl
stos
pop
jp
icebp
adc
sub
imul
cmp
in
ds
ja
mov
test
xchg
xor
lods
and
ret
ret
sbb
pop
movsb
in
aad
add
test
popf
test
test
mov
jno
subl
add
or
adc
inc
adc
sbb
mov
xor
aaa
push
pop
or
clc
push
mov
lods
cltd
sub
repz
inc
mov
lods
rcrb
sbb
or
inc
mov
pushf
cltd
dec
mov
sub
or
stos
jmp
ret
push
jg
inc
adc
mov
stos
leave
mov
xorl
push
cmpsl
mov
inc
je
xlat
mov
jns
lea
xchg
testl
push
addr16
push
iret
lods
inc
adc
in
pop
fcoml
das
nop
inc
mov
dec
dec
inc
dec
in
mov
adc
shr
sbb
jo
pop
es
in
inc
or
mov
nop
mov
icebp
inc
sti
stc
mov
or
add
inc
loope
inc
cld
fcompl
shll
jne
push
and
test
movsb
dec
sbb
rorb
test
rolb
adc
mov
push
and
cmc
sti
cmc
les
hlt
cmp
add
pop
jecxz
mov
jecxz
stos
aad
inc
push
fwait
adc
data16
mov
lcall
sbb
push
jge
mov
cmp
out
loope
out
dec
xchg
pop
movsl
enter
or
scas
push
inc
cltd
push
data16
mov
xlat
cmc
in
add
push
ljmp
adc
and
jmp
add
jb
orb
daa
hlt
adc
push
mov
ds
iret
arpl
sahf
int3
pop
cmp
xor
xor
mov
out
ljmp
js
and
jo
cltd
adc
daa
pop
cmp
pop
sbb
xor
insl
ja
fsubs
imulb
daa
fistl
std
lds
fisttpl
inc
jle
jae
mov
andl
jb
out
inc
sub
inc
rcr
sub
mov
lret
fmul
add
push
add
pusha
in
sbb
push
ds
lds
outsb
push
ret
or
in
pop
mov
push
mov
cmp
addr16
sub
adc
imul
leave
lret
adc
inc
es
xor
add
cli
mov
ds
popf
mov
out
mov
clc
lahf
mov
popa
scas
ss
sbb
gs
adc
xlat
stos
inc
push
xchg
test
xchg
jecxz
add
leave
insb
xor
inc
add
push
fimuls
jnp
insb
mov
xlat
adc
push
fldenv
mov
int3
push
sbb
jle
xchg
testb
repnz
mov
test
xchg
pop
pop
xchg
jle
shl
scas
jle,pn
adc
mov
mov
divb
cmp
daa
sbb
jge
int
inc
sub
mov
in
mov
out
in
sbb
popa
or
js
push
mov
loope
push
lods
nop
sar
loopne
mov
fisttps
nop
and
pop
push
and
insl
sbb
jno
lds
mov
push
jl
mov
repz
hlt
ret
test
incb
or
xchg
out
das
mov
or
jno
sbbb
repz
and
mov
shrb
fisttpll
mov
pop
stc
aas
mov
mov
xchg
xchg
mov
pop
js
or
mov
test
jbe
das
xor
or
mov
shlb
jmp
cmp
andl
xchg
mov
or
sbb
dec
push
lcall
cld
test
into
xchg
cmp
mov
out
ror
jmp
sahf
pop
repnz
sbb
jns
shll
fwait
inc
ret
mov
fcmovnb
pop
mov
repz
or
fdivl
out
test
push
jne
lock
and
sbb
clc
hlt
pop
sub
sbb
jo
inc
mov
ret
cmc
cmp
sbbl
clc
mov
loopne
sbb
mov
adc
pop
std
cmc
outsb
cmp
push
push
lahf
insl
nop
aad
mov
invd
dec
shr
daa
lret
inc
xchg
jecxz
push
lahf
ja
xor
inc
lcall
pop
cs
shr
mov
jno
clc
imul
imul
int
cmc
movsb
leave
stos
add
ret
xchg
xchg
xor
stc
loope
ljmp
cli
sub
cmp
jns
dec
les
mov
outsb
push
xchg
adc
test
mov
mov
pop
mov
sbb
test
enter
jb
arpl
sbb
inc
loop
loop
outsl
out
or
or
push
cld
nop
mov
add
mov
xchg
rcrl
cmp
aas
repnz
int
and
fisttpl
dec
cmpsl
pop
and
or
dec
aad
pop
pop
mov
push
add
filds
cmpb
push
rcl
call
push
das
push
out
add
aam
pushf
int
std
fwait
roll
decb
sahf
dec
leave
and
cmpsl
out
pusha
sub
inc
ss
sbb
stos
xchg
movsb
lods
and
fisubrs
xchg
and
and
mov
pop
sub
sar
push
xor
inc
and
in
jle
jge
pop
lods
das
cwtl
bound
and
cs
movb
adc
sub
or
aas
lret
test
xor
cs
mov
inc
mov
hlt
out
jge
add
out
adc
push
mov
jb
mov
lock
dec
push
mov
pop
jecxz
mov
ja
ja
int3
add
stc
or
pop
in
stos
call
xchg
lret
in
repz
dec
jp
adc
imul
mov
out
sbb
jp
aas
mov
insb
or
inc
sub
je
push
hlt
int3
lock
cmp
jbe
mov
call
sbb
js
aam
out
repnz
push
cltd
dec
jbe
mov
movsb
or
push
dec
test
xchg
pop
ljmp
fistps
es
stc
mov
inc
mov
popa
cs
add
movsb
in
fsts
out
sahf
dec
lret
stos
fsubl
inc
add
aad
xlat
mov
xor
test
jmp
sar
outsb
mov
lods
cltd
js
shlb
adc
pop
mov
mov
aad
imul
ret
add
in
pop
repnz
das
xorl
lock
lret
cmpsb
aaa
fimull
daa
cltd
mov
push
pop
outsl
dec
or
sahf
xchg
fidivrl
xor
jae
hlt
stos
mov
aad
xorb
jno
rcrb
scas
idiv
fsubs
pop
loopne
sti
inc
aad
popl
pop
testb
ret
and
dec
arpl
add
idivl
pushf
mov
dec
loop
pop
push
add
aam
xor
jl
inc
fistpll
std
imul
push
rclw
int
outsl
jns
rcrb
jbe
sbb
test
lret
mov
scas
sub
xor
dec
aaa
or
mov
movsb
aam
mov
jl
loopne
insl
add
mov
add
enter
jno
insb
stc
or
jo
ret
jbe
mov
or
jns
popf
mov
pusha
jbe
sub
shlb
mov
push
xchg
mov
adc
adc
sbb
scas
in
mov
jb
mov
xchg
movsb
adc
push
adc
pop
cmp
hlt
lcall
mov
push
push
pop
cld
dec
test
xor
mov
sbb
pop
loope
sbb
fnsave
bnd
push
stos
pop
nop
adc
aaa
cmc
xchg
in
dec
filds
dec
jge
mov
in
stc
daa
sub
pop
jbe
inc
sub
int
pushf
data16
adc
vpmacsswd
imul
fwait
cmp
cmp
lea
xchg
sub
iret
mov
cmp
jae
outsl
cmpsl
mov
mov
ficoms
and
sub
icebp
not
xchg
repz
pop
stos
loope
popf
loopne
sbb
movsb
outsb
inc
push
and
xchg
sbb
stos
rcll
mov
mov
dec
dec
xchg
or
jo
dec
adc
mov
cmp
jnp
repz
test
lds
daa
jns
mov
stc
mov
cmp
ret
arpl
addr16
jbe
xor
pusha
mov
xchg
push
loop
and
shlb
xlat
lea
ret
popa
pop
dec
subb
lahf
imul
pushf
push
and
popa
cwtl
sbb
incb
cmp
mov
fldcw
shlb
je
insb
jle
jae
icebp
in
scas
repnz
push
lahf
pop
xor
scas
or
loopne
gs
xchg
fdivrs
xor
pop
in
jno
xorb
push
mov
xchg
rclb
add
rolb
sahf
or
mov
mov
pop
and
jo
push
add
lock
addb
outsl
mov
and
lea
imul
jp
into
imull
lahf
jb
inc
std
stos
es
in
mov
xchg
jge
xor
xor
lret
add
dec
sbb
and
sbb
enter
inc
jmp
out
incb
das
xchg
iret
push
add
daa
int
push
dec
lds
xor
addl
jecxz
lahf
cltd
jae
sub
push
mov
mov
loop
or
or
or
cmp
xor
mov
enter
sub
mov
cli
cmpsl
cwtd
ljmp
ja
inc
mov
data16
inc
inc
loop
inc
in
rolb
cld
and
ret
adc
insb
ljmp
pop
inc
les
xor
jns
into
jecxz
jge
lods
int3
jle
cs
cmp
js
rolb
mov
add
iret
shlb
xchg
hlt
push
xchg
dec
and
into
lods
sbbb
fists
cwtl
ja
and
mov
cli
cmp
sub
inc
incb
das
sbb
ljmp
fld
lock
nop
cmp
movsb
repnz
std
inc
out
jp
into
dec
cmp
push
mov
in
insw
jl
loop
mov
jecxz
cs
cmp
mov
ss
std
ds
shrb
jge
pushw
minps
adc
imul
xor
lahf
xorl
xchg
lods
mov
and
push
mov
mov
adc
iret
mov
dec
jle
xor
in
xchg
pop
sbb
js
xor
shrl
fabs
testl
in
imul
testb
xor
xor
dec
shlb
dec
arpl
add
out
scas
xchg
cmc
dec
dec
adc
add
ljmp
mov
lret
int
int
das
stos
xchg
lods
repz
xchg
stos
lret
inc
push
aad
bound
jle
xchg
xlat
xchg
or
mov
or
je
int3
xlat
fdivrl
adc
lahf
mov
arpl
mov
add
popa
jmp
or
int3
test
adc
sbb
int3
in
adc
push
jne
xor
push
and
das
jmp
pop
push
in
inc
dec
scas
scas
push
sbb
or
mov
cmpsl
xchg
enter
movsb
lahf
sbb
or
clc
adc
scas
xchg
orl
inc
es
cmp
xor
xchg
cmp
std
cmp
pop
arpl
dec
xchg
ret
icebp
fbstp
out
jne
dec
stos
insb
int3
mov
cli
sbb
sbb
jmp
shrl
shlb
fnstsw
cwtl
dec
sub
mov
sub
cmp
jb
sbb
mov
fs
std
cmpsb
imull
xchg
cmpsl
adc
sub
dec
fisubrs
repnz
mov
pusha
mov
jge
mov
and
inc
dec
xrelease
jbe
and
add
mov
pop
inc
sbb
xchg
scas
add
inc
jns
gs
fistps
sub
cmp
ljmp
or
and
or
mov
or
fcmovnbe
leave
movsl
fcomps
test
cmp
or
imul
xchg
rcrl
rcrl
sbb
or
mov
jmp
rol
add
jo
sbb
sub
test
xor
cmp
xor
stc
add
arpl
roll
icebp
or
mov
mov
je
dec
in
xchg
adc
lret
dec
jge
js
inc
cmc
mov
and
pop
outsl
ret
pop
add
mov
mov
js
stos
inc
loop
pusha
jns
push
mov
lods
sbbl
daa
dec
decl
and
lods
movsb
int3
push
std
mov
js
mov
aad
pop
test
jnp
mov
data16
push
add
xlat
int
in
or
dec
ret
lahf
inc
out
xor
bound
push
pushw
out
shl
or
jmp
cli
pushf
jno
xchg
cmp
int
rcrb
jp
or
mov
push
pusha
cmp
jbe
nop
cmpsb
adc
xor
or
add
mov
fidivrl
sahf
ljmp
nop
dec
adc
pcmpgtw
push
adc
xlat
xchg
cmp
pop
int
pushf
cmp
or
jae
jl
ret
outsl
aaa
cld
mov
jbe
sub
sbb
xchg
mov
mov
and
aam
jns
sbb
push
or
xor
dec
test
mov
fldt
dec
jnp
mov
sub
inc
and
xchg
dec
das
or
gs
aad
gs
jno
sarb
mov
cmp
xchg
js
inc
call
rcrl
daa
jmp
inc
adc
or
xchg
jecxz
cld
fwait
insb
outsl
add
xchg
mov
xor
lock
xor
sarl
mov
or
xor
xlat
push
adc
les
adc
sub
or
in
fs
jno
in
clc
cltd
and
or
sti
andb
fdivrs
inc
test
jmp
into
inc
test
mov
mov
sbb
sbb
fidivl
xchg
sbb
sarb
aam
shrl
lods
push
pop
or
inc
test
imul
sbb
out
inc
adc
clc
js
subl
jns
xchg
dec
sbb
add
test
mov
dec
push
rcr
mov
inc
dec
fnstcw
jg
cmc
out
sahf
jge
inc
popf
mov
dec
xor
lret
jge
xor
mov
out
mov
push
inc
xchg
addl
inc
fwait
movsl
ss
mov
jmp
lea
ret
and
lret
int3
mov
shr
jp
pop
pushf
push
or
rclb
hlt
or
pop
fimull
push
adc
xchg
ror
xlat
aas
out
cmp
push
sub
pop
pop
int3
pop
sub
andl
in
testb
lock
jmp
jbe
loop
adc
mov
inc
repnz
js
jmp
and
loope
repz
mov
cmp
pop
jp
jnp
mov
rcrl
push
loope
cmpl
js
jo
mov
jmp
pop
add
adc
pop
call
push
inc
sti
jno
incl
test
out
sbb
mov
jge
iret
aad
daa
push
test
sub
pop
ret
mov
jle
movsb
cmp
pop
pop
mov
stos
out
cltd
inc
push
fwait
pushf
andl
ficoms
add
insb
inc
ret
dec
jmp
mov
inc
lcall
and
mov
data16
jnp
push
cs
sub
arpl
sub
pop
cltd
dec
inc
cltd
bound
enter
repz
xor
or
test
roll
lock
into
sub
flds
outsl
push
and
push
mov
or
rcrl
fistl
xchg
push
cmp
fidivl
ds
leave
xor
ret
test
push
mov
pop
xor
repnz
cmp
imul
mov
loope
icebp
rcll
jno
call
pop
mov
xchg
je
mov
inc
aad
push
cmp
gs
iret
test
xchg
mov
into
or
add
stc
adc
jmp
vcvtsd2ss
xchg
mov
and
push
push
fimull
popa
imul
add
inc
aam
lods
cmpsl
addr16
sub
popa
pop
mov
sub
je
lret
fiaddl
lds
popf
xchg
fiadds
xor
mov
shll
das
pop
mov
stc
pop
lea
and
push
lahf
daa
sti
xchg
ret
sbb
mov
loope
pop
imul
jge
sbb
xchg
sub
outsb
movsb
inc
and
push
in
out
lock
lret
cmp
jmp
inc
cld
popa
mov
pop
jne
mov
xchg
push
cmp
and
mov
pushf
add
jne
stc
sub
cmpsl
call
stos
fildll
je
loope
mov
sub
aaa
jbe
pushf
jle
outsb
mov
push
mov
out
and
addb
inc
mov
gs
add
cltd
push
or
mov
andnps
xlat
lods
jnp
mov
data16
mov
clc
xor
rclb
fdivr
or
je,pt
adc
jl
jp
inc
mov
jb
gs
sbb
inc
cmc
cmp
jmp
je
add
sbb
cmp
faddl
leave
popa
jl
ljmp
lock
aas
xchg
int3
push
pop
ret
jbe
stos
inc
or
inc
mov
sbb
sahf
sbb
jne
push
dec
mov
popa
out
dec
jb
cli
push
insb
das
popa
in
cmp
sub
pop
cmp
je
xor
push
or
sub
inc
outsl
aam
ficoms
outsl
adc
pop
aaa
ja
hlt
mov
cwtl
jns
mov
or
sub
push
gs
test
icebp
mov
jae
cmp
sbb
sub
es
mov
sub
in
cmp
out
pushf
out
mov
push
fidivl
loop
jge
rcl
xchg
mov
sbb
lcall
dec
jle
rolb
call
push
jmp
jns
int
push
inc
mov
cmpsb
dec
xlat
push
mov
dec
cs
mov
les
xor
push
push
mov
jbe
and
inc
or
sub
or
xor
fmuls
out
push
cs
clc
jle
aaa
sub
in
cmpsb
or
scas
cmp
push
out
pushl
mov
jl
or
frstor
es
inc
add
lods
stos
sbb
sbb
cmpsb
mov
push
sub
add
cltd
decl
adc
pop
push
push
fdiv
lds
sbb
addr16
lods
pop
repnz
sahf
cwtl
cld
xor
add
shll
xor
out
gs
out
sub
add
and
pop
or
xor
xlat
adc
jo
lods
call
push
cmpsl
fld
sbb
or
sti
or
mov
jnp
cmpsl
scas
mov
jns
in
outsl
inc
rcr
mov
movsl
ret
xchg
enter
xlat
fbstp
inc
dec
xor
stos
mov
outsb
loopne
and
mov
pop
jne
mov
sub
mov
mov
pop
insb
ljmp
dec
dec
out
mov
dec
inc
xor
adc
jb
es
jge
sbb
rorb
lcall
fldcw
fwait
mov
das
jb
stc
lds
ljmp
arpl
hlt
lods
faddl
or
inc
jns
add
sub
adc
adc
sbb
outsl
js
pushf
sbb
call
call
jno
jno
push
pop
push
pusha
nop
fwait
subl
push
and
rcrl
sub
test
ficoml
test
jmp
arpl
das
mov
into
pop
cmp
pop
call
and
aam
or
mov
mov
lods
les
in
push
sub
cmp
and
xor
jo
dec
out
popf
aas
xorl
push
add
into
sub
xchg
adc
sub
xchg
sti
add
cltd
cmpsl
dec
mov
and
stc
cmpsb
lret
xchg
gs
mov
mov
and
sub
pop
cli
sbb
mov
adc
out
arpl
insl
in
pushl
shlb
or
inc
mov
xorb
cmc
pop
ljmp
lret
sbb
movsl
mov
add
lods
inc
repz
outsb
jge
clc
incb
popa
dec
mov
sti
fistpll
pop
stc
add
imul
stc
xchg
cs
add
icebp
dec
fbld
cmp
sbb
lcall
idiv
in
mov
push
and
psllq
mov
rcr
add
or
jo
dec
nop
outsb
mov
je
mov
sub
stc
fidivl
outsl
ja
jo
push
addr16
fbstp
xchg
int
inc
lcall
lds
call
bnd
push
ljmp
xchg
or
sbbb
inc
movsl
xchg
jno
mov
incl
mov
repnz
cmp
aam
adc
dec
leave
cld
rcl
lret
ret
scas
into
or
sub
mov
movsl
and
push
daa
xor
addl
sbb
ror
cs
pop
bound
add
pop
push
fldl
outsb
jns
inc
mov
mov
cmc
imul
sub
add
lret
scas
mov
lea
sti
cmpsl
sbb
pushf
inc
int
fisubs
out
adc
push
sbb
adc
insl
loopne
dec
mov
jp
dec
mov
xchg
mov
negb
xor
mov
xchg
push
inc
pop
pop
jne
aaa
cwtl
push
or
enter
inc
fsubs
stos
hlt
hlt
dec
idivb
xchg
pop
cmp
push
push
adc
shr
add
shrl
lret
dec
inc
push
fiadds
aam
popa
out
add
test
pushf
repz
and
fidivrs
xor
xchg
rcr
mov
inc
jge
aam
rcrl
jno
pop
insl
sbb
jae
and
cltd
lahf
sahf
dec
mov
repnz
inc
cmp
cmp
push
stos
add
sti
sub
pop
and
sub
and
mov
cwtl
lds
or
scas
int
popf
lcall
fstps
adc
jo
addb
fdiv
insb
inc
mov
mov
mov
and
add
setns
hlt
sbb
push
dec
iret
loop
jne
cmp
cmp
mov
push
out
cmp
test
mov
das
xchg
xor
adc
test
push
arpl
out
fs
cs
inc
adc
pushf
or
or
mov
enter
repnz
sbb
fcmovnbe
sbb
pop
push
ljmp
dec
mov
adc
inc
mov
push
add
cmp
cmp
mov
sbb
push
mov
lret
xchg
inc
cmpsl
nop
push
scas
cmp
test
lds
fldenv
jo
cmc
push
addr16
sti
xchg
inc
movsl
cmpsb
into
insl
test
push
jne
xchg
fiaddl
movl
addb
jle
dec
cld
mov
dec
xchg
adc
mov
dec
mov
pop
fsub
lahf
xlat
popa
ss
mov
jle
jg
dec
cmp
roll
int3
fwait
xchg
mov
sarb
sarl
push
repnz
jle
das
xchg
mov
lahf
test
ss
cmp
or
jmp
or
ret
mov
pusha
lahf
in
xchg
and
push
sbb
dec
fwait
push
cmp
push
leave
mov
sbb
test
in
cmp
sub
or
mov
jno
mov
lock
call
aam
dec
gs
mov
mov
push
cmpsb
cli
loop
xchg
push
and
or
jb
mov
push
nop
sub
sbb
cli
inc
jmp
add
mov
ja
loop
jmp
jns
push
dec
pop
popf
pop
jmp
sbb
in
push
push
dec
hlt
and
xchg
jle
mov
mov
int
insb
cmp
sub
rorl
dec
testl
sbb
jbe
mov
sbb
mov
in
repnz
inc
add
push
sub
push
and
jge
xor
sarb
jns
in
mov
dec
pop
popf
xor
sahf
add
xchg
shll
mov
push
sbb
dec
adc
push
mov
movsl
movsl
mov
sbb
push
jae
add
je
sarl
mov
dec
inc
xchg
movsb
ret
push
add
dec
icebp
nop
inc
adc
jmp
xor
or
in
mov
jae
in
out
add
jecxz
inc
aas
push
push
mov
out
and
sbb
mov
mov
inc
in
jae
pop
ret
cmp
push
pop
pop
add
sbbl
jnp
inc
mov
cmp
rolb
sub
mov
mov
jl
jmp
push
adc
jnp
lods
adc
or
jmp
test
out
mov
pop
iret
mov
pop
call
fisubl
mov
or
jns
jns
jecxz
pop
fimuls
pop
push
xchg
xchg
fucomi
mov
inc
jbe
hlt
fimuls
adc
aad
mov
fistpl
xor
divl
out
shlb
stos
lods
adc
jg
push
scas
jp
dec
add
push
or
enter
push
add
repz
pop
add
fistl
mov
xor
or
je
jb
icebp
push
or
mov
adc
mov
mov
and
icebp
decl
loop
mov
testb
fs
mov
add
adc
jg
das
or
aad
xchg
iret
sub
cmp
cmpsl
insb
pop
ds
inc
imul
or
and
lret
mov
movsb
mov
adc
loop
xchg
inc
sbb
dec
adcb
jno
dec
jbe
jns
mov
int3
lods
bound
enter
push
jle
enter
cmpsb
gs
loop
mov
sbb
test
add
pop
das
sub
push
lds
test
hlt
insb
fdivrs
movsb
test
ret
cwtl
outsl
movsb
pop
xor
lret
dec
sbb
cmp
into
jno
lret
add
jl
rep
les
xlat
push
jmp
inc
add
sub
aad
test
jno
fmull
xor
push
movsl
cs
lcall
adc
je
or
xchg
sbb
in
xchg
add
push
xchg
xchg
jo
and
sbb
sub
pop
mov
mov
fldcw
cmp
xchg
jo
cmp
jb
fsubrs
fimuls
or
inc
adc
jl
sbb
repnz
xor
fisubrl
adc
fistpll
pop
mov
mov
sub
lret
js
dec
inc
inc
iret
lock
mov
popf
add
xor
jl
fdivs
sbb
cs
daa
mov
psrld
fbstp
data16
jecxz
fbstp
mov
push
cmpsb
cmp
mov
aas
das
sarl
bound
push
nop
aas
sbb
stos
fs
movsb
pusha
inc
outsl
test
cli
or
int
push
jae
jns
push
sbb
movsb
ljmp
popa
pop
les
les
lcall
jo
xchg
idivl
xor
cmp
fldt
in
mov
mov
adc
insb
inc
sti
fdivr
bound
xlat
scas
push
pop
in
imul
fstp
int3
fidivrs
repz
jecxz
les
inc
mov
es
adc
into
das
pop
daa
imul
in
test
mov
pop
add
iret
mov
pop
loop
sbb
add
jg
rolb
cmp
mov
in
es
scas
jge
testb
js
lods
inc
pop
xchg
iret
jae
mov
fs
push
fwait
push
push
in
lret
cmp
clc
jns
mov
ljmp
push
mov
xor
mov
pop
jb
cmp
out
stos
sti
pop
jns
stos
jge
hlt
hlt
popf
call
pusha
lahf
sbb
jecxz
mov
repz
mov
mov
movsb
movb
in
inc
outsb
sbb
xchg
inc
jecxz
scas
aas
pop
dec
push
or
xchg
dec
adcl
sub
pop
add
insb
stc
ret
push
inc
shll
inc
jae
push
test
xor
push
sub
idivl
inc
add
arpl
les
lea
sbb
inc
mov
repz
test
jmp
adc
add
cmp
xor
loop
fucom
adc
jae
lcall
out
mov
icebp
mov
aam
mov
cmpsl
loopne
cmpsl
dec
js
pop
xor
sub
xor
enter
mov
cmp
sahf
aad
sti
sbb
inc
push
out
decl
andl
cmp
mov
and
sub
push
mov
popf
jo
push
inc
sahf
jns
cmp
cmp
lcall
push
push
mov
inc
cltd
push
iret
sbb
aas
rolb
mov
in
daa
data16
jo
mov
cmpsb
adc
std
cmp
repnz
in
xorb
lret
pop
add
sub
xor
popf
fdiv
scas
dec
mov
mov
data16
add
xchg
mov
pushf
inc
mov
lock
mov
cmp
inc
add
sbb
sub
jne
jo
test
out
and
or
push
adc
sub
repz
add
outsl
cmp
or
insb
cmp
mov
decb
shlb
cmp
es
mov
mov
sbb
pop
fstps
cmp
and
pop
pop
in
ljmp
jmp
jl
cmpsl
and
mov
add
sahf
cmp
xacquire
sbb
xchg
pop
and
dec
dec
mov
xchg
cli
lds
sub
repnz
pop
and
sub
dec
dec
or
jge
lock
in
pop
fmuls
cmp
movl
ss
push
sub
adc
fadds
in
nop
imul
or
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
nop
push
push
mov
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
or
add
add
push
add
addb
add
lock
addb
add
add
addb
add
add
add
rolb
add
mov
add
add
add
add
add
adc
add
add
mov
add
add
add
addb
add
or
add
mov
add
add
or
add
mov
add
add
or
add
add
add
mov
add
cmc
add
add
add
addb
add
or
add
add
add
add
add
adc
add
add
mov
add
mov
add
fadds
add
add
add
or
add
add
aam
add
sbb
add
or
add
mov
add
or
add
add
add
add
sbb
add
or
add
add
add
add
sbb
add
add
add
addb
add
add
mov
add
mov
add
fadds
add
add
add
or
add
add
je
add
xchg
add
or
add
add
cld
roll
pop
add
add
add
add
add
add
aad
add
add
or
add
add
add
xlat
add
faddl
add
or
add
add
add
flds
sub
add
or
add
add
cmp
add
pop
add
xor
add
addb
sub
add
test
add
add
add
or
add
add
in
fildl
jp
add
or
add
add
push
add
add
add
add
add
add
filds
js
add
or
add
add
add
add
add
add
adc
add
add
addb
add
sub
cmp
add
push
add
xor
add
js
add
add
add
or
add
add
add
add
or
add
add
je
add
cwtl
add
add
add
add
add
or
add
rolb
add
add
add
add
add
loop
add
add
add
rolb
cmp
add
clc
add
cmp
add
and
add
dec
add
add
or
add
add
add
add
add
or
add
add
add
adc
add
or
add
add
add
adc
add
or
add
add
mov
add
add
add
add
add
add
add
add
and
add
mov
add
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
in
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
push
add
outsl
add
je
ja
popa
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
add
imul
jns
and
inc
add
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
insb
add
outsb
add
add
add
jb
jns
and
push
add
outsl
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jb
je
push
add
sub
and
xor
cmp
cmp
cmp
sub
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
imul
bound
jne
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
sub
add
sub
add
sub
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
jne
push
add
inc
gs
insb
je
popa
bound
outsw
inc
