push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
pop
jmp
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
fldl
fstpl
call
fstps
movl
movl
leave
ret
nop
push
mov
sub
nop
nop
call
mov
xchg
popf
mov
and
addr16
outsl
xchg
and
movsb
inc
addr16
arpl
xchg
and
arpl
addr16
push
and
and
arpl
addr16
arpl
and
arpl
addr16
addr16
mov
bound
xchg
addr16
xchg
addr16
pop
fldl
nop
nop
leave
ret
push
mov
sub
fldl
fstpl
call
fstps
movl
movl
call
mov
mov
leave
ret
nop
push
mov
mov
call
nop
nop
call
mov
addr16
dec
daa
daa
addr16
and
addr16
and
daa
daa
addr16
dec
push
inc
outsl
mov
daa
daa
addr16
arpl
jecxz
addr16
and
in
and
ljmp
arpl
adc
addr16
and
fs
loopw
adc
xchg
out
and
mov
and
xor
addr16
nop
nop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
in
and
lahf
adc
jbe
arpl
addr16
addr16
arpl
and
in
and
and
in
and
and
in
and
arpl
pop
inc
addr16
ja
and
faddl
nop
nop
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
addr16
outsl
out
and
mov
sbb
mov
addr16
insl
inc
addr16
outsl
out
and
sbb
mov
addr16
addr16
addr16
outsl
out
and
mov
addr16
addr16
addr16
addr16
inc
popl
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
sbb
mov
and
and
in
and
adc
mov
and
addr16
outsl
addr16
arpl
addr16
cmp
addr16
ja
cmpsl
adc
and
cmp
mov
and
cmp
addr16
arpl
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
jmp
addr16
outsl
out
and
mov
sbb
mov
addr16
adc
mov
and
sbb
mov
addr16
vmread
in
outsl
out
and
mov
addr16
addr16
addr16
addr16
inc
sub
addr16
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
addr16
push
out
and
and
in
and
mov
mov
and
addr16
outsl
addr16
arpl
addr16
mov
mov
cmpsl
adc
and
movsl
jns
addr16
arpl
and
mov
mov
fucomip
fiaddl
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
xchg
jp
addr16
outsl
out
and
mov
sbb
mov
addr16
mov
mov
and
sbb
mov
addr16
mov
addr16
outsl
out
and
mov
addr16
addr16
addr16
addr16
inc
aam
addr16
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
sub
mov
and
and
in
and
and
mov
and
addr16
outsl
addr16
arpl
addr16
dec
jp
addr16
ja
cmpsl
adc
and
dec
jp
addr16
arpl
and
dec
jp
addr16
arpl
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
cmp
addr16
outsl
out
and
mov
sbb
mov
addr16
and
mov
and
sbb
mov
addr16
pop
jnp
addr16
outsl
out
and
mov
addr16
addr16
addr16
addr16
inc
jl
addr16
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
aad
addr16
push
out
and
and
in
and
int
addr16
outsl
mov
addr16
outsl
addr16
arpl
addr16
repz
addr16
ja
cmpsl
adc
and
cmc
jl
addr16
arpl
and
repz
addr16
arpl
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
mov
mov
and
mov
sbb
mov
addr16
int
addr16
outsl
out
and
sbb
mov
addr16
jge
addr16
outsl
out
and
mov
addr16
addr16
addr16
addr16
inc
in
addr16
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
jge
addr16
push
out
and
and
in
and
jne
addr16
outsl
mov
addr16
outsl
addr16
arpl
addr16
fwait
jle
addr16
ja
cmpsl
adc
and
popf
jle
addr16
arpl
and
fwait
jle
addr16
arpl
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
dec
jle
addr16
outsl
out
and
mov
sbb
mov
addr16
jne
addr16
outsl
out
and
sbb
mov
addr16
outsl
jle
addr16
outsl
out
and
mov
addr16
addr16
addr16
addr16
inc
mov
addr16
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
in
addr16
push
out
and
and
in
and
sbb
mov
and
addr16
outsl
addr16
arpl
addr16
add
addr16
ja
cmpsl
adc
and
add
mov
and
add
addr16
arpl
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
repz
addr16
outsl
out
and
mov
sbb
mov
addr16
sbb
mov
and
sbb
mov
addr16
pop
jo
addr16
outsl
out
and
mov
addr16
addr16
addr16
addr16
inc
xor
addr16
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
lea
addr16
push
out
and
and
in
and
test
addr16
outsl
mov
addr16
outsl
addr16
arpl
addr16
stos
jno
addr16
ja
cmpsl
adc
and
lods
jno
addr16
arpl
and
stos
jno
addr16
arpl
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
mov
and
and
inc
jae
addr16
outsl
addr16
push
addr16
arpl
addr16
addr16
fwait
jb
addr16
outsl
out
and
mov
sbb
mov
addr16
addr16
outsl
out
and
sbb
mov
addr16
mov
mov
and
mov
addr16
addr16
addr16
addr16
inc
fdivl
addr16
arpl
loop
adc
and
addr16
addr16
dec
addr16
and
and
mov
addr16
inc
addr16
jnp
data16
jg
addr16
addr16
and
fbld
addr16
and
mov
addr16
mov
xchg
and
and
push
push
and
arpl
addr16
xor
mov
and
and
in
and
sub
mov
and
addr16
outsl
addr16
arpl
addr16
push
jb
addr16
ja
cmpsl
adc
and
push
jb
addr16
arpl
and
push
jb
addr16
arpl
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
in
imul
in
addr16
and
addr16
ljmp
sbb
add
imul
and
sbb
and
cmpsb
fistps
out
mov
outsl
in
and
cmpsl
cmp
addr16
cmpsb
out
scas
out
and
bound
jae
addr16
je
addr16
and
add
and
sbb
and
and
and
outsl
mov
cwtl
cwtl
call
nop
nop
mov
leave
ret
nop
nop
push
mov
sub
nop
nop
call
in
and
and
and
and
and
cmpsl
jg
and
cmpsl
pop
out
and
and
in
xor
and
in
xor
and
in
xor
and
mov
addr16
addr16
and
and
mov
imul
addr16
xor
arpl
and
in
and
arpl
test
addr16
adc
and
and
ljmp
in
xor
arpl
and
addr16
call
nop
nop
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
mov
addr16
outsl
adc
and
pop
adc
and
outsl
mov
add
leave
ret
push
mov
sub
nop
nop
call
mov
addr16
and
arpl
into
cwtl
cwtl
cwtl
daa
out
and
addr16
and
jge
and
xor
imul
shll
gs
call
nop
nop
mov
leave
ret
push
mov
sub
nop
nop
call
in
and
arpl
aas
cwtl
cwtl
cwtl
out
and
addr16
and
inc
in
and
xor
imul
insb
in
and
and
lahf
cwtl
mov
roll
nop
nop
movl
mov
leave
ret
push
mov
sub
nop
nop
call
in
and
arpl
popf
cltd
cwtl
cwtl
daa
out
arpl
divb
addr16
and
adc
and
mov
and
and
in
and
bound
roll
nop
nop
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
ja
sbb
xor
and
gs
and
and
outsl
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
mov
and
push
jne
addr16
arpl
loop
cwtl
cwtl
cwtl
mov
jae
addr16
loop
cwtl
cwtl
cwtl
out
arpl
add
adc
inc
jmp
and
fs
addr16
arpl
jae
addr16
arpl
daa
lcall
cwtl
cwtl
mov
jae
addr16
loop
cwtl
cwtl
cwtl
out
arpl
inc
lcall
cwtl
cwtl
mov
jae
addr16
loop
cwtl
cwtl
cwtl
out
arpl
outsl
lcall
cwtl
cwtl
mov
jae
addr16
loop
cwtl
cwtl
cwtl
out
arpl
mov
or
inc
arpl
loop
cwtl
cwtl
cwtl
out
arpl
mov
cwtl
cwtl
out
loop
cwtl
cwtl
cwtl
mov
jae
addr16
loop
cwtl
cwtl
cwtl
out
arpl
rcrl
add
inc
arpl
loop
cwtl
cwtl
cwtl
out
arpl
lcall
pop
cwtl
cwtl
cwtl
mov
jb
addr16
loop
cwtl
cwtl
cwtl
out
arpl
sbb
cmp
inc
arpl
addr16
loop
cwtl
cwtl
cwtl
out
arpl
pop
fwait
cwtl
cwtl
out
loop
cwtl
cwtl
cwtl
in
and
and
out
sub
addr16
xor
and
in
and
addr16
addr16
outsl
and
addr16
arpl
addr16
push
cltd
cwtl
cwtl
mov
addr16
arpl
addr16
jl
cwtl
cwtl
ljmp
ljmp
mov
addr16
jg
addr16
jae
addr16
ja
addr16
imul
addr16
outsl
addr16
arpl
addr16
and
arpl
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
cmpsl
push
addr16
imul
addr16
outsl
addr16
addr16
arpl
addr16
addr16
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
and
in
and
mov
addr16
and
out
and
in
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
cmpsl
push
addr16
ja
addr16
imul
addr16
in
and
in
out
addr16
outsl
out
and
in
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
xor
and
and
out
and
in
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
and
daa
addr16
imul
addr16
and
and
in
and
and
in
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
loop
cwtl
cwtl
cwtl
in
aaa
cwtl
cwtl
cwtl
addr16
addr16
ja
addr16
and
and
in
and
and
in
loop
cwtl
cwtl
cwtl
out
and
in
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
loop
cwtl
cwtl
cwtl
addr16
and
pop
loop
cwtl
cwtl
cwtl
sbb
in
xor
sub
repnz
cmpsb
xchg
mov
xchg
bound
and
addr16
and
and
in
xor
and
outsl
in
xor
cwtl
cwtl
fs
arpl
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
loop
cwtl
cwtl
cwtl
cwtl
addr16
mov
addr16
imul
addr16
and
and
in
and
in
out
addr16
outsl
out
and
in
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
xor
in
loop
cwtl
cwtl
cwtl
out
in
addr16
cwtl
cwtl
cwtl
addr16
and
cwtl
cwtl
in
and
inc
in
loop
cwtl
cwtl
cwtl
in
jg
loop
cwtl
cwtl
cwtl
in
daa
cwtl
cwtl
cwtl
adc
loop
cwtl
cwtl
cwtl
in
daa
ja
loop
cwtl
cwtl
cwtl
mov
cwtl
addr16
loop
cwtl
cwtl
cwtl
pop
loop
cwtl
cwtl
cwtl
adc
daa
cwtl
cwtl
cwtl
cwtl
addr16
and
cwtl
out
addr16
jecxz
and
in
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
and
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
and
addr16
addr16
arpl
addr16
and
arpl
loop
cwtl
cwtl
cwtl
cwtl
mov
mov
hlt
into
add
nop
nop
leave
ret
nop
push
mov
sub
nop
nop
call
mov
addr16
addr16
addr16
and
and
cmp
addr16
xor
and
in
and
out
and
shlb
jae
and
and
and
outsl
out
mov
xchg
mov
jae
addr16
in
xor
gs
xchg
xchg
in
dec
out
and
and
and
and
imul
in
and
xor
ja
and
imul
nop
nop
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
in
and
and
out
sub
fwait
in
and
and
in
and
addr16
and
mov
mov
add
nop
nop
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
in
and
cwtl
addr16
and
dec
outsl
in
and
cwtl
addr16
and
dec
outsl
in
and
cwtl
addr16
and
dec
outsl
in
and
cwtl
addr16
and
sarb
popf
in
xor
shlb
lahf
in
jecxz
das
arpl
fs
das
out
and
shlb
xchg
in
repz
outsl
addr16
outsl
push
repz
imul
and
into
add
nop
nop
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
in
and
addr16
and
addr16
and
addr16
sbb
xor
fsubs
xchg
in
jae
ljmp
fwait
out
and
in
and
arpl
je
cwtl
cwtl
out
movsl
ljmp
fwait
out
and
and
and
daa
add
and
fwait
out
and
and
and
aaa
daa
ljmp
outsl
in
aaa
and
and
imul
fwait
out
gs
xor
and
into
add
nop
nop
leave
ret
push
mov
sub
nop
nop
call
in
and
addr16
and
addr16
and
jbe
add
sbb
xor
fsubs
xchg
in
jae
ljmp
fwait
out
and
in
and
arpl
add
cwtl
cwtl
out
movsl
ljmp
fwait
out
and
and
and
das
add
and
fwait
out
and
and
and
aaa
arpl
and
outsl
in
ja
and
imul
fwait
out
gs
xor
and
int
add
push
mov
push
sub
nop
nop
call
mov
addr16
lahf
sbb
mov
addr16
xchg
cwtl
addr16
xor
and
cmpsb
sub
xchg
and
jb
addr16
and
das
ljmp
ljmp
mov
addr16
addr16
lahf
jbe
add
addr16
addr16
xchg
sbb
and
outsl
in
and
and
mov
and
addr16
and
pusha
mov
addr16
in
sub
cmp
and
jb
addr16
arpl
ljmp
mov
addr16
addr16
addr16
lahf
jbe
pop
ljmp
ljmp
in
and
arpl
cld
lcall
xor
arpl
in
sub
xor
and
arpl
and
cmpsl
mov
addr16
lahf
sbb
addr16
xchg
cwtl
addr16
ljmp
ljmp
in
and
arpl
and
outsl
in
and
movsl
xor
and
das
in
sub
and
movsl
xor
and
sub
and
lret
ljmp
call
nop
nop
add
pop
pop
ret
push
mov
sub
nop
nop
call
mov
addr16
and
and
push
arpl
and
cmpsb
lahf
cmpsw
pop
and
fwait
cmpsb
xchg
and
cmpsl
arpl
and
in
and
and
and
in
and
arpl
ret
cwtl
ljmp
aam
scas
int3
add
nop
nop
leave
ret
push
mov
sub
nop
nop
call
mov
addr16
and
and
push
arpl
and
cmpsb
lahf
cmpsw
pop
and
fwait
cmpsb
xchg
and
cmpsl
arpl
and
in
and
and
and
in
and
arpl
mov
fwait
in
gs
call
nop
nop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
add
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
pop
mov
jmp
mov
push
mov
mov
push
movzwl
sub
mov
lea
xor
mov
mov
call
mov
mov
sub
test
jne
jmp
add
dec
js
cmpb
jne
or
add
dec
jns
cmpl
jne
mov
mov
leave
ret
mov
mov
mov
mov
movl
mov
mov
call
mov
mov
mov
mov
jmp
lea
lea
push
mov
push
push
push
sub
mov
test
je
lea
pop
pop
pop
pop
ret
movl
mov
lea
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
mov
mov
call
movzwl
sub
test
mov
jne
movl
call
test
mov
je
cld
mov
mov
mov
rep
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
sbb
and
add
add
mov
dec
jns
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
mov
lea
mov
call
movzwl
sub
test
jne
xor
test
jne
mov
call
mov
call
sub
movzwl
call
mov
mov
lea
mov
lea
mov
lea
pop
pop
pop
pop
ret
mov
call
cmp
mov
jne
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
add
mov
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
pop
jmp
nop
nop
nop
nop
nop
nop
nop
incl
aaa
inc
add
add
add
incl
add
inc
xor
and
dec
insb
and
jne
dec
ss
push
sub
add
add
inc
inc
inc
add
add
je
in
or
push
mulb
insl
fs
test
jge
test
jge
test
jge
test
jge
test
jge
mov
popf
mov
cmp
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
jge
and
loop
inc
add
clc
mov
cmpl
clc
js
loop
sti
inc
popf
insl
jmp
add
mov
mov
mov
sub
in
outsl
push
adcb
jg
adc
stc
add
jmp
adc
mov
sarb
and
adc
and
lahf
jmp
and
lahf
jmp
pop
lock
adc
jge
mov
hlt
imul
test
jge
test
jge
test
jge
scas
xchg
sub
or
cmp
jge
test
jge
test
jge
test
jge
test
jge
test
jge
mov
add
test
jge
test
jge
test
jge
enter
sub
stos
arpl
into
shlb
pop
xchg
jnp
cmp
cmp
jge
lahf
cmp
mov
out
adc
out
sbb
outsl
in
popf
and
int3
or
jnp
insl
fs
lret
xchg
xchg
and
sbb
and
xchg
mov
push
add
mov
stos
jg
xor
lds
fcmovnb
add
adc
jge
std
sbb
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
pop
cmp
mov
std
lahf
sbb
stc
sub
int
fnstsw
test
adc
fdivs
sub
push
insb
clc
and
cwtl
xchg
ffreep
mov
pop
inc
cmpsl
pop
lret
mov
xor
inc
inc
and
or
aaa
test
sbb
fisubrs
nop
xchg
ja
cmpsl
push
idivl
sbb
fildl
jns
push
sub
ret
adc
lds
xchg
pop
cmp
cld
inc
scas
inc
sbb
in
xchg
scas
jp
lods
fcomps
data16
sbb
mov
imul
adc
out
es
or
inc
adc
aad
or
in
jecxz
out
or
inc
adc
adc
ss
out
xchg
out
out
loope
out
add
cmpsb
je
mov
push
ficoml
jbe
push
cmpsl
or
mov
mov
xlat
loop
mov
cmp
nop
aad
pop
pop
out
adc
int
add
pop
aam
out
add
xor
faddl
xor
sbb
jnp
sar
insb
hlt
ret
sahf
es
cmpsl
jno
cmp
inc
dec
dec
call
cvtpi2ps
ret
fmuls
cmp
push
icebp
in
arpl
mov
mov
adc
lret
mov
leave
shrb
inc
or
and
lods
push
add
pop
adc
xlat
pop
sbb
push
jl
or
lods
add
push
cmp
jge
scas
sbb
jg
xor
addl
inc
pop
jl
xchg
pop
test
xchg
push
jl
cmp
cmp
lret
test
xchg
aad
push
cmpsb
fwait
lods
jge
inc
cmp
add
hlt
inc
jbe
push
ds
mov
xchg
jmp
outsb
div
xchg
xchg
cmp
iret
fadds
nop
mov
test
xor
clc
xchg
pop
adc
ss
xchg
fistl
mov
shlb
adc
sbb
xor
and
jl,pt
test
lcall
movsl
fisubs
mov
and
or
stos
aad
lret
fmul
fidivl
xor
add
jmp
xlat
shll
mov
jbe
nop
add
stc
adc
fwait
inc
add
cmpsb
mov
movsl
hlt
icebp
insl
pop
mov
pop
insl
dec
jl
cmpsb
inc
movq
add
xor
xchg
xchg
push
outsl
loop
aaa
and
mul
adc
in
enter
push
rorl
xor
rcll
xor
fdivl
push
sub
mov
inc
mov
sbb
test
sbb
gs
and
pop
ja
adc
mov
push
xchg
push
xchg
jecxz
testb
jb
sub
shlb
stos
div
jo
add
mov
adc
not
mov
inc
jbe
daa
mov
mov
jg
test
arpl
push
jg
sub
lds
xchg
mov
add
push
je
adc
test
push
mov
out
pop
fldl
inc
cwtl
enter
decl
jle
loopne
or
scas
mov
xchg
shrb
addr16
pop
push
cmc
pop
jg
in
loopne
int
adc
jle
rclb
xchg
mov
or
push
mov
and
inc
xchg
sub
mov
and
dec
lahf
push
jle
mov
into
xor
iret
nop
test
xor
cmc
mov
ss
jae
cld
jbe
mov
sbb
xchg
lret
mov
cld
cmp
aad
leave
arpl
rclb
mov
push
jo
fistpl
add
cmp
rclb
cmp
mov
sbb
push
and
ja
arpl
dec
jo
lcall
pop
sbb
std
cwtl
mov
adc
addl
pushl
outsb
imul
jmp
adcb
scas
sarl
cmp
sbb
jmp
js
hlt
arpl
outsb
jo
inc
test
jecxz
or
sbb
inc
aad
test
orb
push
mov
lret
adc
pop
icebp
or
xchg
xor
sub
jne
ret
lret
mov
inc
sub
push
push
sub
scas
push
xor
out
imul
mov
sbb
push
ret
adc
inc
push
xor
outsl
lods
ss
nop
ljmp
out
dec
fucomip
push
ror
dec
add
dec
ljmp
push
push
pop
mov
push
cli
fstpl
jb
jge
lods
mov
fadd
roll
jge
push
cmp
mov
arpl
mov
dec
out
je
jg
aas
sub
fisubl
pop
push
movsl
mov
pop
and
inc
pop
and
xor
dec
xor
xor
mov
mov
cli
cmp
lea
and
lods
rcrl
sti
adc
sarl
mull
std
mov
outsb
sti
shl
push
mov
xchg
mov
mov
or
jle
push
fdivl
cmp
stc
adc
idivl
cmc
sbb
sub
dec
lds
test
xor
js
jl
scas
or
scas
out
aad
cmp
enter
cmp
pop
mov
push
and
mov
lahf
lock
pop
insb
jge
cwtl
nop
mov
push
je
clc
rcrl
sbb
in
mov
outsb
stos
jl
scas
clc
ret
sbb
add
ljmp
mov
and
xchg
popa
stos
cmp
sub
and
mov
inc
loopne
fdivp
sbb
enter
insl
lock
xor
gs
push
pop
adc
mov
es
je
outsb
mov
je
out
mov
lock
cli
es
dec
loope
popl
cwtl
push
xchg
adc
pop
lods
scas
pop
imull
mov
xchg
shrb
jg
loopne
fcmovnb
jno
fldt
aam
pop
xlat
push
sub
in
out
out
testl
jae
fsubrs
or
jnp
insl
fs
lret
xchg
repnz
fiaddl
repz
add
push
dec
cmp
add
int
inc
sbb
mov
sub
push
movsb
mov
and
or
das
or
mov
mov
lods
imul
daa
in
popf
imul
pop
adc
mov
loope
mov
subb
xor
jl
enter
add
jge
push
subb
push
xlat
in
push
mov
lcall
rol
sub
adc
movsb
addl
push
test
pop
aaa
xorb
dec
lock
push
mov
insb
test
mov
sub
inc
jno
dec
loop
lock
int3
push
enter
push
jge
cmp
mov
inc
fildl
stc
insl
stos
and
push
sub
mov
jnp
loope
pop
fsubl
pop
adc
in
fisttps
add
or
scas
inc
add
push
dec
sahf
cs
and
sbb
mov
imull
jae
aam
xchg
or
repz
lea
push
rolb
aad
sbb
jo
xchg
imull
jae
aam
xchg
pop
int3
fs
lea
ss
inc
into
ss
adc
adc
push
or
sub
aam
xchg
fmull
sub
xchg
outsl
sub
aam
xchg
push
aam
pushf
mov
aaa
push
cmpsb
sbb
sarl
mov
inc
cli
xchg
add
mov
cwtl
movsb
adc
add
xchg
add
enter
fwait
aam
jbe
sub
jno
and
mov
pop
xor
int3
fsubrl
push
fs
sbb
leave
add
inc
push
xchg
sbb
stc
test
sbb
jle
inc
jl
and
daa
cmp
loope
movsb
push
test
insl
sbb
push
out
xorb
data16
fdivrs
add
inc
pcmpeqw
push
mov
cmp
imul
test
pop
rcl
repnz
sbb
xor
push
push
dec
sbb
cmp
inc
pushf
stc
mov
cwtl
cld
mov
adc
imul
xor
sbb
leave
jne
mov
scas
push
sbb
leave
test
xchg
pop
ret
fistpll
stos
insb
dec
stc
test
sbb
cmpsb
dec
das
pop
cmp
inc
cmp
pop
adc
pop
jae
mov
outsb
and
aaa
sub
inc
cli
lock
jno
dec
dec
nop
jl
add
stc
sgdtl
in
aaa
or
pop
call
sub
in
insb
std
outsb
je
dec
push
sbb
leave
test
jge
movsb
scas
lcall
pop
lahf
mov
cmp
or
xchg
in
outsl
cld
mov
adc
adc
movsb
rclb
loope
shlb
ret
pop
ds
xchg
mov
jnp
sahf
fstps
sbbl
in
fldcw
insl
mov
mov
negl
or
xchg
mov
pop
int3
dec
dec
jge
ljmp
xchg
push
fiaddl
fs
mov
cmpsl
mov
subl
inc
adc
movsb
jg
pusha
cmpsl
js
jp
repz
jo
inc
or
sahf
in
push
adc
cmpl
dec
int3
push
jecxz
mov
mov
pop
in
ret
cmpsb
push
and
rorl
fwait
aas
cmc
cmpsl
ljmp
movsb
rol
add
add
adc
movsb
dec
adc
out
mov
fstpt
mov
mov
fcoms
pop
aam
jne
xchg
mov
test
leave
pusha
mov
pop
pop
in
lret
fldcw
xor
cmp
imul
pop
mov
ficoms
rorl
data16
mov
xor
pop
in
push
sahf
std
lret
mulb
cmc
or
jne
sbb
imul
addr16
pop
xchg
in
xchg
insb
xor
int3
and
add
stos
stc
adc
pop
int
ja
sub
outsl
inc
mov
sti
cmp
pop
aam
pop
int3
ret
xchg
cmp
mov
xchg
cmpsb
xchg
mov
inc
mov
fdivl
out
shrb
jl
pop
sub
fsts
in
addr16
nop
insl
std
dec
push
cmpsl
fists
jmp
jbe
dec
push
pop
xor
sub
cmp
jecxz
ljmp
jl
rcrl
push
mov
dec
xchg
xor
test
jae
add
ljmp
jl
or
loop
sbb
imul
jg
xchg
push
mov
sbb
jno
mov
mov
mov
xor
push
fcoms
imul
pop
xor
inc
loope
aaa
xchg
loope
xchg
mov
and
mov
push
mov
cmc
mov
lret
gs
push
test
push
cmpsb
insb
inc
mov
or
repnz
adc
pop
stos
pop
in
shrl
das
shlb
imul
test
in
test
jo
sub
and
adc
cmp
push
test
jp
lock
sti
fldenv
scas
push
push
mov
mov
cmp
je
arpl
xchg
mov
sub
xchg
dec
push
cmpsb
or
loop
push
hlt
or
sbb
ret
lods
hlt
adc
fyl2x
rorb
addr16
mov
dec
cs
out
shr
movsb
pop
push
mov
sbb
or
push
pop
and
add
into
icebp
insl
xor
mov
xchg
pop
push
pop
test
sarb
jb
jns
sub
pop
jecxz
dec
jns
aad
xor
or
lret
and
int3
addr16
hlt
and
loope
outsl
dec
add
lret
or
jnp
fwait
jns
jbe
jo
aam
add
inc
clc
add
mov
sbb
lds
test
aad
adcb
out
cld
mov
sub
adc
mov
sub
into
loop
sbb
outsb
outsb
or
jno
aaa
and
xchg
call
jecxz
mov
addl
mov
pop
cmp
and
cmp
cs
or
dec
and
fidivs
ljmp
outsl
movsb
and
add
push
outsb
add
call
jb
leave
arpl
lcall
es
bound
inc
ret
fmuls
xor
jmp
mov
cmp
xor
mov
cltd
mov
hlt
fcmovnbe
int
dec
and
mov
jns
inc
js
mov
pop
stos
jb
popa
scas
movl
cmpsl
mov
subl
inc
adc
movsb
jg
addb
lock
inc
or
movsb
and
mov
jl
pop
xorb
imul
decl
mov
adc
cmp
in
adc
or
xor
imul
add
adc
aad
cs
sbb
fstpt
mov
cltd
insb
jmp
lods
pop
aam
jne
xchg
mov
test
leave
pusha
mov
mov
int
xchg
fldcw
xor
push
outsl
xlat
mulb
fimuls
mov
insb
data16
fs
and
fidivs
jp
test
hlt
mov
mulb
bound
xchg
outsl
sbb
imul
imul
in
xchg
insb
xor
int3
and
int3
movsb
out
adc
inc
stc
adc
pop
int
ja
sub
outsl
inc
mov
sti
cmp
pop
aam
dec
mov
out
mov
xchg
cmpsb
xchg
mov
test
jb
sub
shrb
jl
pop
mov
mov
sub
addr16
loop
lods
movsl
cltd
xchg
or
jmp
jb
rclb
sub
cmp
add
push
jnp
test
jl
rcrl
and
sti
dec
xchg
xor
test
jae
add
ljmp
imull
repz
sbb
imul
push
jp
or
sbb
jno
mov
cld
out
dec
scas
leave
sbb
fsubrs
rorl
pop
dec
rorl
loope
aaa
xchg
loope
daa
inc
lahf
stc
inc
xlat
cltd
sarb
push
mov
xchg
push
push
lret
sbb
gs
lods
add
xor
mov
daa
out
or
repnz
adc
pop
stos
pop
push
mov
jg
imul
test
sbb
nop
loopne
sahf
pop
sub
and
adc
cmp
mov
dec
cmp
lock
push
jp
jnp
push
stc
scas
push
push
mov
jmp
mov
clc
mov
sub
daa
xchg
dec
push
cmpsb
or
mov
xlat
ret
mov
mov
aas
fyl2x
rorb
addr16
mov
dec
cs
aas
sbb
cmc
push
mov
sbb
insb
out
lods
jno
ret
and
add
into
icebp
insl
mov
callw
push
pop
test
sarb
int3
pop
lods
ljmp
or
pop
mov
call
jge
imul
push
and
or
addr16
hlt
and
loope
pop
mov
inc
add
jnp
jnp
fwait
jns
jbe
jo
aam
add
inc
clc
add
xor
and
lds
test
mov
std
xchg
cmp
mov
cmpsb
sub
je
mov
jae
mov
or
add
and
xchg
call
popa
test
sbbl
addl
mov
and
sbb
cmp
cs
or
out
jae
je
stos
ljmp
outsl
movsb
and
add
push
outsb
cltd
push
neg
popf
lret
jb
cmp
jb
leave
arpl
push
ret
test
dec
pop
es
bound
mov
sbb
outsb
xor
jmp
mov
adc
mov
xor
mov
out
scas
sub
adc
and
xlat
int
dec
and
pop
pop
hlt
add
dec
xor
inc
pop
stos
sahf
cmp
jnp
stc
cmp
daa
mov
sbb
add
insl
std
js
mov
jno
les
push
push
lds
dec
mov
shlb
add
xchg
mov
mov
js
mov
and
cmpsb
pusha
out
adc
mov
push
cld
push
pop
roll
fsubrl
pop
in
out
idiv
sub
cltd
pop
jb
or
movsl
pop
cmp
movsb
sub
lcall
mov
repz
and
fcmovnu
fisttpll
jle
jge
jb
dec
loop
test
jge
test
jge
test
jge
test
jge
shrb
mov
inc
and
insl
sti
mov
pusha
inc
and
shrl
cmpsb
not
lods
rcrl
adc
loope
adc
and
loope
adc
and
mul
xor
mul
xor
mov
frstor
mov
push
mov
frstor
mov
push
cmpl
aad
cmp
pop
sub
xchg
fdivrp
push
or
jp
adc
jge
test
jge
shrb
mov
inc
and
shrl
cmpsb
loope
adc
and
mul
xor
mov
frstor
mov
push
and
pop
jge
xchg
push
mov
dec
push
lret
pop
xchg
pop
xor
cs
push
lret
xlat
or
sbb
sbb
in
xlat
or
or
andl
gs
jo
jmp
sub
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
pop
insl
or
and
repnz
mov
insl
inc
pop
lcall
push
data16
jns
push
mov
add
aaa
divl
mov
jmp
je
jge
mov
dec
jge
aad
stos
xor
xlat
jae
xchg
or
xchg
mov
fistpl
sub
movups
xchg
dec
sbb
jg
or
mov
mov
lret
add
mov
or
or
inc
rcll
loop
mov
mov
pop
mov
push
sub
imul
fstps
mov
test
fiadds
fstpt
frstor
mov
jmp
adc
xchg
xchg
pushf
subb
ss
push
ret
rorl
scas
pop
aaa
adc
insb
pop
test
lods
xor
or
mov
xor
cld
xchg
hlt
xchg
inc
adc
outsl
sbb
sti
xchg
mov
div
sub
in
and
les
scas
mov
addr16
or
push
mov
outsb
jl
mov
jno
adc
jne
push
mov
and
xor
adc
push
sub
sarl
icebp
gs
imul
cmp
sti
cli
xchg
adc
sahf
push
out
cmp
or
inc
imul
fnstsw
push
nop
jp
xor
daa
sub
fnsave
jno
or
xchg
js
push
cmpsl
stc
mov
mov
sub
xorl
pusha
dec
push
pusha
inc
ljmp
mov
cli
xor
aaa
xor
sub
cwtl
dec
outsb
pusha
dec
add
cwtl
jle
xchg
dec
add
xor
aam
mov
inc
dec
cmp
stc
jle
cmpsb
inc
cld
aam
xor
out
adc
adc
sub
push
cld
aaa
push
adc
jbe
pop
xchg
nop
push
leave
inc
sbb
lret
rclb
or
popa
adc
inc
scas
xchg
add
out
jns
fnstcw
in
mov
mov
push
fwait
das
pop
loopne
stos
stos
mov
in
mov
addr16
cmpsb
cltd
leave
jno
scas
pusha
loope
adc
dec
push
popf
mov
xchg
add
lods
clc
adc
jl
mov
jno
repz
cmp
stos
adc
test
cmp
xchg
inc
arpl
hlt
mov
in
or
std
pop
js
and
repz
mov
sbb
imul
dec
mov
jge
sbb
in
jl
popf
rorl
jns
pushf
push
push
mov
movsl
lret
cmp
lahf
fistpl
out
push
lahf
mov
clc
dec
adc
iret
mov
dec
mov
cli
scas
rcl
xchg
mov
push
jnp
icebp
mov
jl
or
push
ja
or
adc
cmp
testl
jle
pop
mov
ja
insl
xchg
push
hlt
lret
sti
icebp
cwtl
jne
aas
shlb
out
outsb
mov
and
dec
sahf
fbstp
les
js
dec
jb
inc
sbb
push
insl
pop
iret
cmpsb
movsl
jo
push
sbb
xor
test
mov
fists
orb
arpl
je
es
dec
cmc
dec
adc
or
jl
popa
mov
and
and
lods
add
push
adc
jne
sub
push
pop
push
lcall
xlat
adc
pop
cmp
bound
scas
stos
icebp
lahf
outsl
lcall
inc
xchg
mov
push
dec
inc
iret
iret
ds
aam
pop
sub
push
sarb
in
repnz
push
call
lock
xchg
mov
or
mov
cmp
jnp
and
fidivrs
cmp
pop
sbb
and
xchg
loope
or
or
cmpsb
out
std
lds
scas
divl
dec
adcb
std
aad
pop
xor
leave
xchg
leave
push
dec
sti
aas
je
xor
aad
es
cltd
jle
pop
cmp
mov
loope
insb
cmp
mov
dec
clc
xchg
ja
adc
dec
and
pop
add
sbb
xchg
dec
aas
jmp
mov
inc
lea
negl
aam
pop
mov
ffreep
sbb
in
mov
insl
out
cmp
repz
movsb
lock
cmp
xchg
mov
jae
jo
pop
lahf
std
mov
sbb
pushf
lret
pop
inc
shrl
cli
push
or
jno
rorb
and
clc
mov
inc
inc
mov
xchg
jno
dec
adc
popf
mov
push
or
pushw
sub
in
pop
push
push
arpl
repz
inc
repz
fwait
xchg
in
mov
push
xchg
in
mov
scas
pop
sub
ss
push
mov
in
jne
mov
in
jne
mov
dec
push
outsb
mov
dec
push
xor
mov
mov
mov
mov
pop
stc
test
negb
mov
mov
pop
stc
test
negb
mov
xorl
push
mov
xor
xorl
push
mov
xor
xorl
push
mov
xor
xorl
push
mov
xor
lock
cmp
pop
mov
mov
cmp
pop
mov
mov
cmp
pop
mov
mov
cmp
pop
mov
mov
cmp
pop
mov
mov
cmp
pop
mov
mov
cmp
pop
mov
mov
cmp
pop
inc
xchg
cld
loop
popf
mov
out
push
push
dec
adc
sub
stc
push
mov
jl
xor
fsubr
mov
inc
jge
cvtps2pd
lea
and
in
jge
in
xadd
das
push
rorb
push
rorb
push
rorb
push
popf
sti
mov
outsl
lods
outsb
popf
sti
mov
outsl
lods
outsb
popf
sti
mov
outsl
lods
outsb
popf
sti
mov
outsl
lods
outsb
jle
rolb
inc
fdiv
jb
out
add
hlt
jb
out
add
hlt
jb
out
add
hlt
jb
out
add
hlt
jb
out
add
hlt
jb
out
add
hlt
jb
out
add
hlt
jb
lahf
push
dec
mov
andl
andl
andl
andl
andl
andl
andl
andl
or
jmp
adc
inc
xchg
test
in
sbb
add
sbb
nop
jp,pt
sub
enter
leave
cmpsb
dec
pop
add
fmul
or
dec
cmpsb
push
fs
cmpsb
push
xchg
movsb
pop
xchg
movsb
adc
sub
stc
push
mov
les
out
push
mov
jl
xor
fsubr
mov
adc
in
mov
inc
jge
cvtps2pd
cvtps2pd
cvtps2pd
lea
and
in
jge
in
jge
in
jge
in
xadd
das
push
rorb
push
rorb
push
rorb
push
popf
sti
mov
outsl
lods
outsb
popf
sti
mov
outsl
lods
outsb
popf
sti
mov
outsl
lods
outsb
lea
mov
cmp
frstor
push
insl
or
and
subl
gs
jne
lret
sub
insb
insl
adc
ret
inc
std
fucomip
scas
push
adc
leave
popa
and
stc
xchg
cli
push
sti
movsl
xor
dec
and
out
or
repnz
mov
and
mov
xor
fidivrl
ja
inc
inc
mov
jnp
insl
fs
cmp
frstor
push
insl
or
and
addr16
shll
in
test
call
push
imul
test
cmp
xor
ret
dec
int
dec
cmp
mov
adc
insb
nop
out
test
test
into
dec
mov
leave
inc
pop
icebp
and
loopne
and
pop
xor
add
pop
lods
sbb
mov
push
xchg
fiadds
out
mov
shlb
int3
aas
mov
rcrb
cwtl
mov
sub
les
dec
cmp
test
outsl
loop
push
push
stc
inc
xchg
inc
cmpsb
dec
xor
mov
mov
xor
fnstsw
addl
imul
js
negb
je
in
sub
mov
or
std
mov
pop
xchg
jno
sbb
dec
out
cld
or
loop
fnstsw
inc
stos
mov
jg
rcr
fdivrl
psraw
xor
adc
mov
incb
movsb
lcall
sbb
or
jge
in
stos
push
jl
mov
pushf
fimuls
pop
mov
shl
pusha
ret
fcmovnb
gs
sbb
rorl
push
jne
jp
adc
clc
inc
push
or
mov
sbb
sub
cmp
bound
cmp
lahf
in
scas
jnp
das
aam
jb
inc
pop
idivl
add
cld
add
popa
ss
push
sbb
add
inc
mov
lods
or
jns
jge
and
fwait
xor
test
test
mov
and
aam
add
inc
cs
test
lock
xor
cwtl
mov
and
inc
adc
arpl
push
movsb
sbb
inc
jae
or
push
pop
into
sub
sub
adcb
mov
jge
shl
push
fs
add
outsb
push
out
inc
pusha
adc
addr16
dec
add
jmp
xchg
mov
jecxz
sub
pop
push
iret
and
jg
inc
mov
das
jne
out
xlat
fsubl
mov
idivl
sub
or
pusha
movsl
dec
out
outsb
inc
repz
pop
orl
test
iret
mov
out
aaa
loopne
and
jns
int
lock
arpl
arpl
fidivrs
add
cmpsl
inc
stos
and
loop
dec
jno
pop
aaa
shrl
xchg
aas
shrb
fisubrl
imul
adc
loope
mov
mov
movsl
insb
fisubrs
aaa
jbe
mov
outsl
mov
mov
stos
mov
xchg
js
sbb
shll
fmuls
lods
or
sbb
lcall
fwait
lock
insb
or
adc
inc
and
mov
add
insb
cmpsl
fisttps
sbb
cli
inc
inc
push
lea
push
in
pushf
loope
mov
into
sub
icebp
sub
inc
rorb
std
jbe
sub
push
mov
lret
pop
int3
push
nop
mov
xor
stc
sbb
dec
sahf
ret
loopne
push
mov
int
testl
enter
pop
jmp
and
orb
sub
xor
sbb
xchg
out
mov
add
shl
icebp
test
mov
fnstenv
insl
std
pop
and
test
and
les
mov
sbb
dec
outsl
cmp
jg
dec
cmp
mov
push
rclb
dec
pusha
test
jg
arpl
stos
pop
push
jmp
jno
stc
iret
push
sahf
add
sub
push
mov
popf
mov
test
daa
push
xchg
sub
adc
ret
and
repnz
mov
jle
add
aam
popa
rcrl
or
dec
or
jmp
push
jne
loop
icebp
sbb
jb
adc
scas
outsb
fadds
jns
mov
pop
dec
push
je
push
inc
or
shrl
test
js
repnz
jo
ror
bound
inc
adc
adc
xchg
hlt
lcall
and
push
jb
bound
daa
addb
pop
xor
jecxz
mov
imul
push
test
sbbl
cmp
movl
sub
adc
scas
aam
filds
mov
pop
scas
loop
mov
iret
xchg
aam
sbb
mov
and
icebp
jg
fists
jo
sbb
test
mov
popa
fisttpl
rcll
lret
mov
adc
in
rorl
imul
adc
cs
push
push
or
bound
xchg
mov
push
fnstcw
movsb
lahf
sbb
mov
rep
dec
es
loopne
push
js
mov
lcall
jg
fsubrs
cmpl
add
pop
jns
ja
add
xlat
pop
lret
jmp
push
stc
push
and
in
and
out
push
push
leave
xor
mov
inc
out
daa
addb
and
dec
mov
mov
dec
jnp
call
arpl
xchg
dec
add
pop
test
push
cmp
push
push
cmp
mov
js,pt
out
adc
lret
into
mov
arpl
ret
and
insl
mov
pushf
cs
push
imul
sbbl
mov
orb
jecxz
lods
ja
dec
jne
ss
push
jle
sahf
cmp
and
imul
push
clc
cmp
fwait
ss
jecxz
and
pop
lahf
dec
shr
fs
adc
mov
repnz
dec
sahf
loop
cwtl
push
jl
cmp
jl
test
sub
or
xor
out
je
push
repz
push
aaa
push
mov
sbbb
lds
or
cli
sbb
shlb
movsb
clc
cmp
xor
or
out
arpl
imul
adc
push
pop
jg
dec
cltd
mov
cmpsl
cltd
xchg
cmp
inc
xchg
insb
cmp
add
js
lods
rclb
mov
add
xchg
movsb
arpl
push
daa
jae
xor
cmpsl
andl
adcl
scas
mov
jmp
fnsave
mov
mov
pop
or
pop
mov
mov
and
imul
jmp
pop
xor
pushf
push
fstl
add
pop
adc
sbb
and
and
xchg
add
cmp
clc
push
test
dec
pop
sbb
dec
mov
push
leave
outsb
jne
in
in
lock
mov
aad
sub
jmp
mov
xchg
inc
push
je
lcall
fisubrl
xor
mov
xor
jno
mov
push
aaa
mov
das
enter
adc
lods
cmpl
mov
and
ret
push
xchg
or
stos
xchg
lahf
out
into
stc
cltd
inc
fwait
les
mov
mov
je
pop
jb
pop
hlt
fdivs
jp
in
sub
fnstenv
dec
aaa
add
and
or
sbb
mov
mov
pop
xchg
aas
dec
mov
leave
and
cmpsb
aam
mov
stc
xchg
xchg
mov
pop
push
lea
je
daa
xchg
pushf
xorb
sub
or
mov
es
mov
les
adc
xor
or
repnz
and
inc
jmp
dec
sub
enter
push
and
xor
or
add
mov
ret
xchg
cmp
sub
fimuls
ret
dec
gs
add
jmp
outsb
xchg
and
loop
dec
add
idivb
adc
xlat
cmp
cmp
sbb
out
or
cld
push
lock
pop
rorb
pop
xor
xchg
adc
shll
mov
sbb
adc
dec
aad
lock
pop
dec
in
hlt
arpl
in
in
lock
pushf
stos
jbe
repz
mov
les
adc
scas
sbb
sbb
jb
inc
push
inc
adc
ficoml
shl
or
sub
and
and
fs
clc
loope
jo
out
inc
int3
inc
pop
aas
shrl
dec
jno
in
xor
mov
loope
outsl
movb
sbb
jb
mov
jns
xchg
and
or
gs
das
mov
lret
nop
ficoms
mov
repnz
lret
jmp
in
mov
or
rorb
pop
add
dec
jae
scas
xor
addr16
jle
cmp
dec
popf
xchg
adc
mov
cmpb
outsb
mov
adc
fbstp
jge
add
mov
pop
in
out
push
aad
je
jle
jmp
jge
test
shl
lahf
stc
mov
inc
and
pop
xor
sbb
sbb
cmc
add
int
fistps
gs
icebp
in
pop
scas
mov
and
test
cmpl
push
adc
xchg
mov
outsl
pop
pop
sbb
sbb
es
xlat
sahf
les
in
stc
xor
xorb
fists
inc
cwtl
outsl
jmp
cmp
test
push
add
pusha
push
and
pop
cs
xor
xchg
ret
scas
pop
fwait
and
je
pop
dec
insl
in
insb
xchg
bound
cmp
sub
call
scas
flds
icebp
fcomip
fsubrs
mov
dec
jae
xchg
and
addl
xor
insl
adc
add
inc
dec
mov
and
cmp
imulb
sub
mov
dec
xchg
xor
cmp
lods
mov
adc
push
cmpsl
out
fistl
xchg
test
jae
mov
stos
mov
ja
push
add
imul
addl
ja
fwait
adc
lcall
ss
stos
xchg
fstl
pop
sbb
pushf
sub
xchg
xchg
rcll
lea
repnz
push
push
fs
sarb
pop
ror
mov
fs
test
pop
insb
push
imul
sub
mov
andb
loope
sub
sub
aaa
sub
sub
dec
or
add
and
adcb
push
bsr
clc
jnp
pusha
mov
jp
addr16
mov
je
jb
xchg
sbb
loope
mov
jb
cs
xchg
shlb
loop
pop
mov
add
pop
out
jle
xchg
push
in
pushf
jecxz
sub
add
jg
cmpsb
lock
push
std
adc
mov
sub
jo
xor
add
rcl
out
jno
inc
push
movl
das
sbb
pop
clc
pop
into
adcb
mov
cmpsl
sub
cwtl
lahf
nop
cli
pop
test
pop
scas
jb
sbbb
repz
rcrb
mov
scas
lahf
stos
fldcw
cmp
dec
popa
xchg
mov
xchg
mov
imul
mov
mov
jnp
add
popa
bound
and
lds
mov
in
sahf
push
cmp
pop
addr16
cmp
push
out
xor
mov
mov
fisubl
mov
pop
int3
int
jb
xor
sbb
pop
push
outsb
mov
loope
stos
xor
or
push
pop
ljmp
and
dec
fucomi
dec
mov
loope
sub
psubsb
cmp
out
int
pop
pop
je
jbe
negl
loopne
jae
movsb
cld
mov
mov
test
scas
cmp
movsb
jns
xchg
arpl
cmpsb
fsubrl
repnz
inc
add
ljmp
cmpsb
mov
mov
roll
mov
pop
test
sbb
fnstenv
lret
andb
out
sbb
pusha
out
cmp
test
arpl
mov
fnstcw
test
dec
test
push
push
rcll
push
mov
jno
push
js
insl
inc
movsl
sti
mov
cmpsb
shl
inc
adc
push
sahf
cs
cmp
testl
sub
in
in
loop
push
mov
cli
mov
xchg
mov
cmp
add
lods
call
sbb
aas
pop
xchg
loope
pusha
out
in
xor
or
jb
icebp
sbb
add
push
xor
xchg
cmp
mov
push
xor
pushf
dec
cmp
xchg
popf
mov
leave
cli
and
cmp
mov
inc
xchg
inc
imul
or
mov
sub
gs
jns
mov
pop
jbe
sbb
popa
mov
or
mov
es
daa
add
push
add
fcomp
enter
mov
loopne
sbb
cmpsl
dec
lds
jmp
jb
pop
outsl
cs
jmp
push
sub
cmp
inc
xchg
iret
inc
daa
lea
js
leave
repnz
lret
dec
jns
jne
sbb
cmp
aas
cmp
jge
mov
and
or
mov
jne
lea
js
jo
pop
test
pop
jl
push
shrw
lds
mov
test
pushf
test
xor
mov
mov
das
add
mov
enter
lcall
shlb
mov
mov
or
ljmp
fisttpl
sbb
lods
aas
and
sub
lock
dec
push
xor
pop
in
pusha
aad
decb
jns
push
xor
jbe
push
fsubr
orb
dec
adc
or
lods
inc
outsb
outsb
mov
mov
sub
test
repz
mov
icebp
mov
rcll
ljmp
jecxz
fadds
stos
or
cmp
mov
mov
pop
lock
adc
stos
cltd
sti
ror
sbb
mov
dec
stos
mov
shlb
jle
je
mov
outsl
add
lods
std
inc
mov
pop
fsub
or
jge
sbb
xchg
cmp
arpl
gs
call
lock
push
cmp
mov
lock
fucom
xchg
in
jge
jg
mov
push
jp
lock
xchg
xchg
and
enter
add
xchg
mov
inc
les
out
xchg
ljmp
cltd
fistpll
in
ja
add
xor
rcll
adc
cmp
push
andl
pop
scas
sbb
arpl
mov
inc
cltd
adc
xor
or
add
xor
jl
addb
xchg
sbb
jbe
jnp
hlt
push
or
mov
ret
das
adc
outsb
ret
popa
into
addl
test
add
dec
mov
popf
sbb
cmp
push
add
mov
out
pop
mov
sub
pop
fwait
mov
or
gs
lock
mov
jae
mov
sub
je
shrl
dec
imul
movsl
pushf
xchg
or
and
sti
popf
shl
xchg
add
fsubl
xchg
xor
clc
jno
sub
xchg
je
pop
pop
rcrl
push
sbb
mov
mov
nop
stos
adc
mov
cmp
mov
je
jge
cmp
out
lcall
lock
mov
imul
das
pop
loope
inc
mov
push
stos
sub
lahf
in
jne
pop
push
ss
xchg
imul
cmp
arpl
in
fwait
add
cmp
mov
bound
clc
test
mov
or
jg
sbb
enter
mov
dec
ret
lret
ljmp
mov
lock
push
in
cs
and
cmp
leave
mov
or
gs
flds
mov
jne
push
and
lds
push
popa
adc
aas
cmpsb
pop
testl
or
mov
sub
mov
arpl
lods
out
rorb
cmc
sub
and
movsl
inc
fisttps
jl
scas
mov
mov
xchg
sub
loopne
cmc
sbb
cmp
and
js
sub
repz
rep
ljmp
pop
jbe
lahf
ljmp
push
imul
lret
or
and
movsb
mov
pop
mov
ljmp
in
inc
ja
aad
nop
jb
xchg
or
or
add
popa
negb
adcb
js
xchg
testb
and
xor
fnstsw
mov
into
cltd
pop
mov
in
inc
mov
mov
xor
jns
mov
push
lret
pop
repz
pop
iret
mov
int
push
aas
xor
xchg
pusha
sub
cmp
ds
stos
pushf
pop
bswap
and
xor
fcoml
sti
rol
jge
out
cld
mov
shrl
rcll
xor
jmp
dec
xor
inc
data16
outsl
jns
popf
push
sub
pop
lcall
inc
mov
jnp
jo
popa
pop
lret
lea
adc
jne
xor
lods
mov
cmp
mov
sbb
subl
sbb
outsl
test
jl
dec
xchg
xchg
jl
xchg
cli
cmp
push
fchs
mov
testb
es
dec
lea
push
push
aad
sub
test
or
aas
scas
lea
sbb
jb
scas
mov
xor
lret
ljmp
xchg
cmp
orb
adc
mov
shlb
or
outsl
sbb
pusha
out
js
leave
test
in
inc
hlt
mov
cmpsb
icebp
daa
inc
imul
outsb
mov
outsl
adc
dec
js
cmp
jno
mov
lods
and
sub
lods
dec
pop
addr16
divl
bound
out
sarb
jnp
imul
out
xchg
and
fwait
mov
xchg
push
nopl
icebp
rol
jae
cmpl
inc
fildll
xor
add
sarb
xor
lds
xchg
inc
pop
lcall
sub
aam
dec
pop
mov
pop
dec
sbb
inc
ss
loopne
rorb
stc
inc
or
or
jl
jnp
leave
add
hlt
xlat
cltd
shlb
shlb
mov
push
fnstcw
sub
xchg
loope
pop
push
pushf
dec
jne
lret
pop
push
gs
adc
sti
pop
dec
in
bound
pop
loopne
lock
pop
ds
push
ror
sbb
jnp
pop
lock
cs
stc
mov
cld
dec
mov
lea
and
imul
cmp
mov
bnd
insl
int3
push
cmp
mov
mov
mov
sub
loopne
jnp
loope
pop
jle
mov
cs
icebp
sub
lret
pop
and
adc
xlat
repnz
aaa
mov
mov
fcmovne
fsubr
pop
lret
or
cmpsl
stos
mov
leave
jns
inc
mov
ret
jbe
sti
iret
jl
mov
and
in
ret
pop
push
lahf
aaa
sbb
mov
jbe
pop
pop
clc
mov
mov
inc
lret
clc
push
es
into
cmp
aas
or
int
out
or
xor
fwait
aas
inc
out
adc
xchg
and
jnp
lcall
sub
add
and
js
lock
sti
jno
xchg
nop
pop
lea
cmp
sub
scas
lock
lock
in
addr16
jle
bound
cmc
sbbb
scas
roll
addr16
or
xchg
mov
jae
stc
mov
fists
push
pop
iret
popl
jecxz
ret
addr16
jnp
ret
test
sub
clc
mov
movsl
mov
xchg
pop
add
pop
jb
push
dec
js
scas
push
jns
sbb
in
popf
push
xor
movsb
insl
test
rorl
cmp
dec
jne
mov
adc
inc
subb
cltd
test
test
leave
into
xchg
add
xlat
lret
push
push
push
hlt
outsb
xchg
mov
sbb
xor
push
mov
inc
push
cmc
out
lock
popf
insb
mov
lahf
mov
addr16
xchg
add
mul
fs
lcall
in
in
lds
iret
mov
xchg
aas
sub
pop
cs
fdivs
dec
sub
loopne
fwait
or
jnp
xchg
movsb
stc
mov
sbb
imul
lret
ret
mov
pop
mov
mov
xor
pop
xor
je
sbb
jns
xchg
and
jecxz
aad
aad
stos
scas
pop
iret
aas
jp
jecxz
pop
xchg
iret
push
dec
lea
pop
sahf
or
ja
movsb
mov
rol
sbb
jle
xchg
or
pop
je
push
out
int3
mov
jno
cltd
repnz
aad
aas
daa
aaa
cmp
add
ss
ficomps
in
sbb
ljmp
mov
iret
xchg
push
enter
cmp
mov
ljmp
cmpsb
js
xor
jnp
dec
shll
movsb
adc
jle
ret
cmp
inc
xchg
cmpsb
push
outsl
test
imul
push
cmpsl
xor
xor
sub
adc
arpl
adc
pop
or
and
ret
cli
adcl
mov
adc
and
mov
jle
and
mov
cmp
xchg
mov
mov
sti
push
pop
xchg
in
lahf
jmp
aam
fildll
push
fimuls
adc
popf
addl
adc
inc
test
orps
and
cwtl
dec
scas
adc
movsb
fcoml
sti
ret
pop
sub
or
ljmp
push
push
in
fldl
pop
dec
icebp
cmp
jbe
ss
sti
inc
adc
popa
sbb
imul
add
push
lret
push
lret
xchg
js
in
sbb
and
sub
lock
popf
pop
dec
cmp
pop
xchg
xchg
shrb
loope
repnz
sub
xchg
mov
cmp
pop
movsl
test
into
int
insb
jmp
pop
cli
mov
pusha
cld
xor
xchg
ret
pop
pop
pushl
xchg
inc
add
push
fstl
sahf
push
out
pushf
outsl
mov
fsubl
sbb
aaa
mov
lds
sub
fidivl
or
fs
push
jbe
loop
lods
mov
cmp
cmp
jl
xor
in
jge
pop
fsubr
or
mov
cld
push
imul
cltd
mov
sbb
cmp
arpl
ficoms
aas
testb
xor
pop
loop
repz
jge
leave
dec
es
mov
inc
inc
lods
inc
push
adc
sub
jmp
jl
test
jg
mov
sahf
xchg
pop
push
inc
jnp
ror
sub
adc
call
fadds
xchg
jnp
push
adc
mull
pop
push
push
jo
sub
and
aaa
aas
pop
aas
mov
lahf
sub
jle
jo
or
in
das
sbb
repnz
xor
sub
lods
push
push
mov
popa
lods
xchg
scas
dec
enter
xor
and
xchg
inc
adc
or
repnz
ds
cmpsb
pop
daa
pop
je
pop
mov
mov
xlat
mov
bound
shrb
inc
sbbb
jmp
stos
imul
pop
and
aas
add
push
stc
cmp
pushf
cmp
sbb
lock
movl
jne
dec
add
dec
jae
xchg
inc
xchg
outsb
js
push
and
pop
das
loopne
daa
inc
ss
clc
cmp
cwtl
jnp
push
sbb
xor
sub
sub
inc
mov
movsl
stos
imul
cld
pop
push
popf
mov
sbb
mov
addr16
in
aad
jne
aad
adc
sbb
push
xor
lods
arpl
push
daa
mov
aad
aaa
push
inc
sbb
inc
adc
xchg
cmpsl
xchg
mov
mov
lock
dec
push
push
lss
mov
data16
cmp
xchg
xor
cmpb
mov
push
arpl
pop
add
iret
data16
and
sti
ja
mov
mov
adc
add
sahf
sub
cmpb
add
stc
sbb
movsb
int
inc
mov
adc
sbb
cmpsl
or
sub
mov
cmp
rcll
cmp
imul
xor
mov
fildll
dec
inc
adc
sahf
ljmp
dec
stos
adc
xchg
adc
addr16
fistpl
xchg
dec
test
aam
mov
and
shll
push
mov
and
jne
lahf
shll
ret
aad
stos
jae
sub
mov
cwtl
xchg
inc
loope
repnz
es
mov
in
jbe
cld
outsb
shld
dec
inc
jae
xor
fwait
stos
inc
imul
or
int3
jne
movsb
mov
daa
shlb
or
pop
add
enter
outsb
mov
sub
sub
inc
jg
cmpsl
addl
jno
in
ja
fisttps
mov
dec
cli
pop
repz
jo
cmp
push
pop
or
scas
cli
pop
in
jbe
jo
ljmp
dec
ss
movsl
loope
mov
bnd
pushf
push
inc
pop
pop
jmp
repz
popf
push
mov
int3
push
mov
arpl
xchg
inc
push
in
cs
cmp
pop
arpl
rorb
jb
mov
pop
lock
pop
jno
jns
mov
scas
mov
mov
jb
jmp
icebp
fucomip
sti
in
add
out
fisttpl
mov
test
cmpsl
insl
stos
insb
jo
adc
mov
enter
and
sar
aaa
std
mov
cmp
sti
push
cmpl
imul
jecxz
fcomp
aam
out
stos
clc
sub
xlat
aam
les
xor
add
push
jb
dec
ja
xor
cmp
xor
out
stos
ss
je
bound
call
fnstenv
cmp
pop
or
lret
cmp
lods
add
fimuls
mov
adc
jecxz
out
mov
cltd
mov
push
dec
in
pop
add
dec
mov
push
stc
jne
js
lds
inc
es
mov
outsl
leave
dec
ret
jb
fistl
icebp
mov
out
push
call
xorb
or
push
jecxz
mov
mov
test
call
sub
loop
nop
adc
insb
add
mov
jecxz
popf
loop
lods
enter
insl
cs
mov
lcall
sbb
or
pop
jmp
cmp
enter
fdiv
mov
sub
push
xor
std
mov
loopne
push
add
mov
mov
into
mov
lds
jae
sbb
jge
pop
sbb
arpl
shlb
cmp
rolb
fdivr
in
dec
leave
inc
dec
daa
inc
int
in
pop
pop
mov
sti
mov
jns
shll
pop
adc
push
mov
xchg
into
mov
xchg
pop
push
push
fdivl
cwtl
stos
push
pushf
dec
ret
sbb
sub
or
or
mov
push
test
hlt
notl
mov
or
push
test
pop
adc
adc
insl
dec
pusha
test
or
cltd
cmp
jne
xchg
hlt
xchg
pusha
cmc
mov
insb
or
arpl
mov
add
push
outsb
stos
fiadds
aaa
ds
cmc
xchg
in
push
add
rorb
sbb
imul
mov
lods
lock
add
adc
pop
adc
cli
pop
fs
negl
cmpsb
sbb
cwtl
push
sub
lret
pop
cmova
test
hlt
push
sahf
adc
xchg
lea
push
jne
popa
ret
sub
and
stc
loop
pushf
and
clc
sbb
jnp
cmp
mov
fbld
jge
sub
jp
push
stos
aam
mov
mov
fwait
loope
data16
outsb
paddsb
sbb
call
lods
mov
and
sbb
xchg
add
jge
sub
xorb
mov
arpl
inc
add
call
in
cmp
jbe
in
sahf
lahf
bound
fwait
decl
leave
out
xchg
popf
loop
fnclex
aam
adc
fldz
or
stos
stc
mov
cmpsb
insb
mov
push
xor
jl
adc
shrl
sti
ret
pop
mov
xchg
push
fiadds
cs
imul
xchg
addr16
xor
out
iret
stos
outsl
and
into
pop
dec
rcrl
mov
mov
sahf
pop
les
adc
and
incb
sti
loope
cmp
out
dec
int3
jae
cmp
mov
clc
out
xchg
push
fistpll
das
dec
scas
mov
ret
or
lock
sub
mov
or
shr
leave
lret
dec
icebp
out
cmp
int
fstl
sbb
rorl
xchg
xchg
aas
mov
aad
rclb
jae
insb
push
ja
test
cmp
in
xor
xor
out
push
movsb
or
insl
pusha
mov
data16
int
aam
cmpsl
sbbb
aas
sub
test
daa
icebp
stc
mov
dec
idiv
cld
fistpll
movsb
push
pop
movsl
aaa
pop
mov
lcall
in
push
pop
cli
or
adc
je
in
stc
and
addr16
repnz
rclb
pop
and
xchg
and
aaa
and
sub
push
mov
fistl
jp
xor
loope
push
xchg
sbb
jns
dec
inc
push
mov
cltd
imul
jecxz
rorl
pop
outsl
cmp
movsl
mov
lret
cmp
subl
xchg
xorb
sbb
pop
pop
or
add
fldl
outsb
jge
dec
and
sahf
xchg
scas
movsl
popf
sbb
std
aad
test
xchg
in
and
and
xlat
pop
mov
fdivl
and
push
sub
xchg
aas
fs
inc
xor
and
stc
outsb
and
std
jbe
mov
bound
frstor
icebp
inc
push
movsb
xor
lret
and
lock
sub
out
into
js
test
lods
imul
stos
sbb
lahf
loop
outsb
mov
cmpsb
popa
sbb
pop
or
out
jno
mov
inc
dec
lds
add
sbbl
mov
btsl
das
mov
leave
fisubrl
into
jns
inc
add
mov
das
das
push
xchg
xorl
sbb
mov
sub
nop
out
in
and
movsb
test
mov
pop
fistps
ja
bound
pop
sbb
adc
mov
sbb
leave
movsl
notl
pop
cli
ret
jae
sub
mov
aad
repnz
add
test
sbb
lods
mov
lahf
outsl
mov
outsl
lea
into
roll
int3
dec
cs
add
jo
jl
jmp
movsb
xor
dec
pop
into
mov
jns
and
add
and
aam
mov
negl
cmp
icebp
push
ja
push
jbe
fwait
sub
sbb
mov
adc
jl
enter
xor
xlat
out
xor
test
fidivrl
mov
ja
pop
jo
adc
push
push
cmc
pop
sti
fstps
fistpl
test
or
mov
mov
cmpsb
jb
xchg
mov
jns
outsb
stc
fadd
stc
cmp
inc
fisubrl
adc
pop
add
mov
hlt
mov
test
fwait
push
hlt
popf
mov
lahf
push
push
cmpb
mov
pop
sar
mov
aam
add
daa
int
fsubl
notb
push
and
cs
push
adc
iret
mov
les
and
pushf
in
shrl
pop
into
clc
push
adc
outsl
iret
sub
ljmp
jne
xor
jae
mov
mov
fmull
pop
mov
inc
outsl
jle
xchg
lahf
dec
mov
xchg
xor
lea
ja
dec
movsl
adc
lret
sbb
push
cmp
pop
outsl
dec
add
aaa
pop
push
mov
call
je
dec
fcom
sbb
test
test
adc
cli
or
loopne
inc
sahf
sub
mov
mov
push
pop
mov
add
or
divb
push
jg
notl
xor
mov
out
or
subb
xor
mov
push
cmp
stc
bound
push
xchg
adc
sub
sbbl
fisttpl
mov
movsl
aas
call
or
mov
xchg
xchg
or
lds
inc
fimuls
xor
mov
out
nop
jbe
mov
addr16
shll
lret
aaa
jae
dec
push
pop
dec
cmp
je
hlt
rorb
adc
dec
dec
ficomps
dec
sbb
xchg
adcl
or
pop
sub
jne
scas
pop
mov
fisubl
ss
mov
sti
idivl
sub
mov
jbe
inc
mov
movsb
xor
mov
call
lret
or
into
dec
loopne
inc
mov
mov
ror
or
mov
cmp
xor
test
daa
and
pop
pop
mov
mov
or
arpl
add
mov
test
pop
ljmp
dec
jp
or
imul
das
jb
and
sub
adc
lret
sbb
or
and
repnz
mov
add
push
test
add
sbb
jo
out
ret
std
push
mov
and
sbb
cwtl
int
inc
sub
pop
mov
fistl
sbb
inc
and
push
ficoml
sahf
in
movsl
aas
jp
nop
inc
and
pop
pop
bound
loope
repz
cli
fwait
sub
repnz
inc
mov
sbb
lods
adc
movsb
dec
inc
and
jmp
dec
pusha
sub
push
roll
fs
bound
orl
jo
or
mov
mov
lahf
cmp
push
mov
xor
dec
faddl
jne
adc
js
insl
lods
push
out
mov
aam
cmp
or
pop
cmp
movsl
fs
mov
pop
inc
mov
out
xchg
push
ret
xor
mov
inc
enter
xchg
test
fdivp
aam
loop
imul
mov
add
cld
test
sbb
outsl
test
xchg
cmp
cwtl
xchg
rclb
mov
mov
test
dec
jp
pop
repnz
and
pop
test
in
push
inc
sub
dec
jnp
sub
pop
pop
mov
clc
mov
push
insl
push
repnz
jne
es
aas
aad
adc
dec
test
and
nop
jle
jg
push
xchg
push
fnstcw
sbb
push
cmp
ret
adc
leave
in
movsl
les
dec
adc
out
clc
xchg
scas
js
cmp
dec
les
or
pop
rcrb
mov
imulb
ret
mov
pop
cmp
fwait
and
and
shl
loop
dec
add
call
ja
sti
add
fmull
pop
outsl
mov
movsb
loopne
inc
cwtl
stc
dec
int
mov
jg
stc
xor
pop
push
cmp
or
jnp
pop
jb
mov
rcll
sub
xor
cmc
push
sbb
out
shlb
or
aad
inc
jbe
mov
mov
repz
rcr
test
mov
cmp
pop
lods
je
pop
push
jae
jo
roll
fcoms
sbb
outsb
push
daa
mov
push
or
or
adc
cltd
or
jle
addr16
lret
pushf
dec
cli
lret
scas
xchg
test
or
xor
idivb
add
add
stos
scas
loopne
cmpl
call
cs
test
inc
inc
in
movsl
les
movsl
xchg
add
pop
adc
push
jp
jo
inc
aam
jne
ret
xorl
mov
pop
outsb
inc
sub
mov
mov
dec
or
ljmp
xor
mov
push
push
in
aam
icebp
das
mov
aad
out
out
jne
xchg
pushf
test
mov
clc
jns
outsl
jo
sarb
or
adc
jecxz
sub
stos
loopne
cmpsl
push
add
pop
out
adc
cmp
or
push
pop
lock
jbe
adc
push
imul
pushf
int3
mov
lds
cli
movsl
movsb
ja
iret
fldenv
outsl
lcall
les
push
push
fistpl
adc
je
fildll
cmp
in
mov
xchg
in
push
xchg
pop
and
popa
aaa
ljmp
and
jo
cs
dec
scas
mov
cld
add
int3
jnp
push
mov
mov
pop
dec
adc
lcall
std
add
xchg
jnp
dec
in
inc
cmp
iret
xchg
shll
adc
rorl
les
pop
aaa
iret
push
add
test
lds
or
sub
inc
insb
int3
cmp
mov
jb
cmp
mov
push
pushf
std
fsubr
ds
js
int
sub
sub
repz
mov
cmp
adc
int3
sbb
sti
icebp
cld
dec
mov
fbstp
xor
mov
sbb
in
ret
lret
mov
negl
lock
push
cld
mov
in
adc
and
cltd
xchg
je
imul
rorl
daa
jae
das
inc
xor
inc
test
adc
mov
movl
cwtl
mov
cld
in
jge
sub
pop
push
insb
mov
inc
aas
inc
or
cltd
pop
out
sbb
and
inc
pop
jge
mov
mov
scas
iret
sahf
pop
repz
jle
push
inc
adc
mulps
or
daa
pop
mov
sub
jb
loopne
adc
jle
inc
fists
outsl
xor
cmp
inc
mov
aaa
add
ret
lds
adc
push
outsl
mov
stc
out
sbb
adc
sbb
dec
adc
shrb
adc
and
cmp
mov
in
mov
cmpsb
arpl
mov
mov
hlt
sub
adc
cmp
inc
cmpsb
dec
xchg
sub
movsb
or
mov
cwtl
cmpsl
sahf
push
push
jne
dec
std
insb
loop
sub
push
cltd
pop
pop
mov
jmp
or
loopne
repz
addr16
or
dec
xchg
or
cli
jmp
mov
xor
inc
sti
or
adc
aas
lods
sbb
push
dec
dec
mov
cmc
ret
push
enter
cmc
dec
adc
jge
mov
ljmp
mov
sahf
repnz
cmc
imull
add
movsb
mov
scas
jl
push
mov
push
xchg
fwait
push
adc
pop
inc
mov
cmp
aaa
jno
ret
push
leave
pop
repnz
cmp
jno
loopne
nop
aam
iret
fdivrs
cmc
pop
dec
pop
pop
ss
fwait
xchg
sar
mov
or
fsubrl
sub
stos
leave
pop
cmpsl
jns
adc
sbb
out
cltd
lds
rol
aaa
fwait
mov
mov
mov
sub
shl
popa
lret
fcom
xorl
outsl
out
or
ret
icebp
js
cld
pop
and
mov
xchg
pop
add
pop
jb
bound
outsb
pop
mov
mov
lods
xor
stos
rcrb
orb
addr16
xchg
iret
nop
mov
jbe
mov
push
fwait
sbb
std
movsl
push
mov
and
xchg
mov
ret
lock
mov
adcb
stc
ss
lcall
das
inc
jmp
scas
into
mov
test
push
push
mov
push
sbb
jno
mov
stc
negl
jmp
aam
xchg
sbb
mov
push
popf
mov
dec
cmp
jl
push
mov
cmpsb
addr16
pop
mov
lock
clc
pop
leave
xor
mov
mov
rorl
cmp
sbb
sbb
adc
mov
sbb
push
xor
and
sarl
push
fldl
in
aad
push
shll
test
push
rcr
jb
cmpsb
icebp
adc
mov
jecxz
sub
adc
sub
fsub
push
push
test
mov
loopne
iret
xchg
push
cmp
xchg
test
dec
push
inc
out
push
mov
jle
movsb
mov
jl
adc
enter
sbb
gs
mov
sbb
in
mov
fwait
push
lret
addl
push
xlat
dec
clc
cs
into
and
insl
cmp
pushfw
cmc
sub
jl
in
dec
push
int3
adc
jecxz
jmp
pop
adc
mov
sahf
je
imul
lret
dec
enter
and
jge
insl
mov
adc
pop
xor
push
fwait
add
sub
sbb
and
mov
repz
out
pop
mov
pop
std
test
das
comiss
pop
sub
inc
pop
lcall
add
inc
xor
jnp
ror
sub
mov
push
or
repnz
pop
adc
mov
sbb
out
cmp
push
lret
pop
fbld
pop
sub
mov
jecxz
mov
icebp
sbb
aaa
or
jne
repz
fwait
xchg
push
arpl
fdivp
adc
sbb
fldt
mov
or
jmp
dec
bound
dec
jle
out
fldenv
sub
cmp
mull
xor
cld
mov
jg
mov
movsb
push
inc
jg
stc
add
jge
xor
lahf
ja
mov
addl
dec
les
sbb
outsb
out
push
dec
lcall
inc
jmp
jp
sub
cld
icebp
or
test
sahf
rorl
xchg
sub
dec
add
mov
das
sbb
sbb
pop
push
inc
xor
es
cli
rcrb
jne
xor
daa
and
push
ss
xorb
rcrb
pop
and
xor
xchg
mov
sbb
inc
fistl
aad
stos
mov
insb
aaa
shll
sub
popf
and
lret
shlb
sbb
enter
pop
jmp
fstpl
push
add
inc
cmpsb
les
int3
sub
push
ret
mov
cmpl
sbb
lea
jne
cmovnp
lahf
aas
cmp
xor
sti
leave
rorl
add
and
out
test
pop
mov
xor
mov
lock
ret
xor
jb
scas
std
cmp
push
add
std
push
dec
fcmove
push
fistpl
test
sbb
mov
rclb
sbb
sarb
in
push
jl
push
or
jp
pop
orl
jge
and
push
or
loope
dec
mov
push
rcll
loop
fnstsw
adc
cmp
lods
ss
mov
popf
cli
sub
addr16
jno
inc
push
adc
scas
dec
cmp
pop
rol
jp
cmp
adc
mov
iret
aam
sbb
out
pop
xchg
pop
pusha
fisttpl
sub
ss
jne
jmp
roll
mov
mov
iret
xor
and
aad
mov
stc
adc
push
push
xlat
dec
imul
add
cs
mov
into
out
cmpsb
test
into
sbb
addr16
gs
inc
adc
mov
scas
dec
leave
test
test
push
cmpxchg
shll
mov
test
sbb
es
sbb
clc
test
xor
dec
jb
and
lods
ja
ljmp
andb
jmp
ja
sarb
push
mov
pushf
jl
inc
leave
push
jg
fs
ds
aad
adc
mov
cmp
or
push
and
fcoml
stc
popa
mull
jo
ret
jns
push
push
or
xor
push
fwait
and
fistpll
clc
loop
int3
adc
scas
push
testl
cmp
pop
int3
pop
adc
add
fucomi
xor
push
mov
test
adc
bound
push
in
lcall
pop
pop
clc
daa
push
sbb
pop
cmp
mov
inc
xchg
push
sub
push
inc
mov
jno
push
sbb
push
dec
fnstenv
int3
mov
enter
xchg
sub
int3
loop
mov
mov
ficoml
imull
and
fstpt
imul
lret
mov
lods
std
shr
cmp
jb
jmp
lock
adc
and
imul
arpl
sub
les
sub
push
iret
jns
dec
lahf
add
iret
les
aad
pop
lahf
mov
pusha
mov
mov
pop
sbb
hlt
sbb
push
jg
and
std
adc
xchg
sbb
xchg
aad
fwait
xor
sbb
sbb
or
xchg
pop
test
push
and
push
mov
cmp
das
cmp
add
pop
push
mov
jae
xor
xchg
push
jbe
jle
imul
sar
and
jmp
out
bound
jne
fucomp
cmc
fnsave
sub
inc
push
fadds
jle
sbb
add
cmp
into
dec
ret
push
scas
mov
mov
add
push
pop
or
dec
insb
stc
dec
jo
xor
lods
pop
popf
cwtl
mov
scas
loope
fstps
out
mov
xchg
mov
fmull
icebp
mov
push
xchg
mov
imul
xchg
rcrb
push
insl
pop
hlt
ss
pop
jle
add
lret
inc
in
aaa
mov
and
loop
pop
fildll
push
mov
lds
frstor
mov
daa
in
add
in
lcall
jecxz
std
movsb
sub
mov
movd
or
mov
inc
nop
ret
pop
leave
cs
xchg
jle
rcrb
js
cmpsl
lret
mov
fwait
pop
es
push
in
out
enter
pop
dec
pop
sub
shr
adc
jb
jo
pop
out
sub
orl
leave
shll
xchg
faddl
push
lock
sub
adc
fnstsw
adc
bound
out
mov
inc
loope
and
cwtl
sub
add
cmp
mov
test
scas
data16
or
mov
repz
pop
xor
mov
jl
inc
lret
push
fwait
and
nop
jo
pop
lods
stos
dec
inc
loope
aam
cli
and
jg
stos
insl
repnz
adc
sar
ret
inc
adc
add
in
fcmove
test
int3
add
add
push
pop
pop
imul
orl
lret
in
scas
jecxz
xor
or
pushf
mov
ficoml
pop
sub
pusha
mov
or
sbb
jl
mov
mov
sbb
cs
cwtl
jge
notb
cmp
out
pop
sti
jl
mov
cmp
ss
push
pop
inc
push
adc
popl
pop
mov
xchg
jmp
push
mov
jg
xchg
pop
add
jle
in
pop
repnz
pop
pop
xor
mov
lahf
inc
hlt
repz
jo
ficompl
cli
or
pusha
jmp
push
ror
mov
movsb
push
call
mov
jb
inc
das
push
popf
shl
xchg
mov
out
rorl
lret
mov
aaa
mov
sbb
push
adc
cmp
jmp
leave
adc
or
sub
xlat
cltd
and
js
push
mov
into
stc
or
iret
lods
cmp
pop
stc
xchg
cmp
jmp
jno
sbb
into
xchg
pop
imul
sbb
dec
push
adc
and
lret
pusha
ret
mov
roll
adc
inc
push
test
sub
lods
nop
fwait
pop
mov
and
into
or
adc
dec
ljmp
movb
aam
pop
movsb
inc
xor
fists
shrl
inc
mov
cwtl
cli
or
sbb
into
dec
outsl
mov
data16
enter
lds
pushf
ja
or
dec
je
int
sub
shlb
loopne
jp
mov
cld
in
sbb
aas
cmp
repz
repz
cld
or
push
sbb
xchg
clc
in
xor
sub
lds
adcl
sub
je
aam
push
pop
incl
push
in
adc
cmp
ja
or
outsl
imul
adc
xor
shlb
repnz
test
cmp
sbb
daa
cmpsl
adc
cmpsb
fldcw
jge
jp
sub
add
xchg
stos
scas
addr16
mov
cmp
xor
jno
xchg
lds
js
add
sti
sub
repnz
imul
les
js
jo
ds
dec
pop
aad
push
xor
adc
daa
in
add
sub
shlb
cmp
nop
mov
adc
mov
fisubs
push
or
jecxz
xor
sbb
or
sbb
xchg
xor
shlb
or
mov
fldcw
push
sub
cmpsb
or
repz
out
out
cmpsb
rclb
add
pop
sub
cmp
fidivs
xchg
push
and
xchg
lret
xlat
fidivs
or
cld
iret
imul
rorl
inc
xchg
mov
icebp
add
dec
xchg
addb
ret
movsb
adcb
mov
scas
cld
rcrl
fwait
call
mov
pop
sub
xchg
notb
mov
aaa
jno,pt
cmpsl
test
mov
adc
aaa
fisttpl
inc
inc
ret
clc
notb
stos
cmp
in
cmp
js
and
adc
inc
xchg
insl
cmp
mov
mov
cmp
daa
and
inc
aas
pushf
or
xchg
sub
loop
push
and
sahf
movsb
inc
ds
push
test
inc
jg
dec
into
push
mov
inc
mov
mov
mov
sbb
mov
movsl
mov
int3
sbb
pop
repz
js
dec
sub
fsts
scas
add
je
adc
jge
xlat
adc
fs
push
and
shlb
inc
jno
jbe
mov
sahf
mov
cmp
rcrb
pop
clc
cmp
movsl
lret
icebp
dec
add
jno
das
lea
movsb
sarb
inc
sbb
notl
ds
into
das
pop
sub
xchg
pop
dec
iret
add
pusha
adc
xor
fwait
cmc
mov
sub
in
cltd
lcall
je
call
stos
mov
filds
std
lret
lret
outsb
jno
cmc
stc
ss
adc
cmp
jo
aas
sub
sarb
aad
push
cli
repz
bound
xchg
adc
cmp
sbb
aas
pop
cmp
aas
mov
mov
pop
adc
mov
and
pop
iret
push
pop
push
addb
mov
cltd
out
and
shll
icebp
xor
arpl
stc
pop
imul
dec
and
shl
ds
cmpsb
cmpsl
dec
adc
shlb
sub
jmp
outsb
dec
xor
jne
out
xchg
push
ja
je
mov
add
sarl
mul
inc
ret
jb
imul
mov
fstl
mov
ret
lods
subb
jae
or
rorl
inc
push
sub
xchg
mov
test
jge
test
jge
test
jge
test
jge
dec
sbb
pop
jge
mov
or
lods
or
jno
pop
push
rol
fcompl
fwait
sbb
dec
xchg
dec
gs
mov
insb
mov
inc
fbstp
and
or
add
lods
jnp
push
inc
loop
mov
mov
inc
fbstp
and
or
sub
jnp
insl
fs
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
sbb
mov
sbb
flds
sbb
mov
sbb
flds
sbb
mov
sbb
flds
or
dec
or
xchg
lock
lret
jb
cmc
inc
xchg
loopne
sbb
flds
sbb
mov
sbb
flds
inc
xchg
loopne
sbb
flds
sbb
mov
sbb
flds
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
call
mov
cwtl
push
addb
addb
push
and
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
mov
push
jecxz
and
adc
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
clc
rorl
mov
xlat
cmp
daa
jl
sub
das
call
aad
movsl
loop
xchg
fcoms
das
jg
xor
test
lret
stc
lock
loop
fidivl
test
fsub
xor
daa
dec
es
xchg
gs
test
mov
fldl
xor
inc
rcrb
cld
in
cltd
into
pop
out
or
rcrl
int
in
inc
into
push
je
out
js
dec
mov
push
sbb
shl
sbb
xor
inc
cmp
and
into
cmp
xchg
and
xchg
dec
fwait
and
ret
jno
aam
int3
push
stc
mov
in
xor
nop
lcall
inc
jl
movsb
ja
stos
push
stos
dec
inc
cmp
jae
jmp
enter
jbe
push
mov
add
cwtl
xor
xor
leave
scas
jb
and
out
int
mov
sub
jnp
xchg
adc
xor
jbe
xor
jge
mov
lret
test
les
adc
das
cs
loope
push
sahf
xchg
test
rorl
stc
push
sbb
in
mov
adc
mov
in
sub
dec
cmp
repnz
jbe
adc
mov
dec
fnstenv
adc
fistl
aas
add
or
or
cmp
cmp
lret
jle
sbb
pop
pushf
cs
push
fistl
loop
outsl
icebp
add
shlb
push
cmp
pop
incb
mov
mov
xchg
fs
insb
mov
inc
fbstp
and
or
fidivl
inc
loop
mov
mov
inc
fbstp
and
or
mov
lock
jbe
lret
inc
mov
aas
jg
inc
std
add
movsl
subb
movsl
and
dec
jbe
aaa
pushf
test
ret
fistl
xchg
dec
xchg
or
or
mov
push
or
loope
mov
lock
mov
fsts
int3
jns
inc
push
mov
mov
fidivs
out
pop
in
xchg
add
repnz
icebp
and
push
or
or
or
cmp
cmp
lret
jle
sbb
pop
pushf
cs
push
fistl
loop
outsl
icebp
add
shlb
push
cmp
pop
incb
mov
mov
xchg
fs
insb
mov
inc
fbstp
and
or
fidivl
xchg
adc
pop
adc
dec
mov
pop
rcl
lock
jbe
lret
inc
mov
aas
jg
inc
std
add
movsl
subb
movsl
and
dec
jbe
aaa
pushf
test
ret
fistl
xchg
dec
xchg
or
or
mov
push
or
loope
mov
lock
mov
fsts
int3
jns
inc
push
mov
mov
fidivs
out
pop
in
xchg
add
repnz
icebp
and
push
or
or
sbb
insl
fs
test
jge
test
jge
mov
test
pushf
test
fdivs
adc
jge
test
jge
mov
test
test
jge
test
jge
test
jge
test
jge
in
sub
popl
fs
test
jge
test
jge
xor
xor
sub
cmpsb
mov
fs
test
jge
mov
test
leave
and
or
test
jge
test
jge
or
jmp
mov
xchg
mov
insl
fs
test
jge
push
aam
xchg
pop
mov
mov
adc
jge
test
jge
repnz
fcoms
imul
cmp
jge
test
jge
shrl
imul
je
rcrl
adc
jge
test
jge
fmul
inc
jmp
shll
cmp
out
outsl
push
fiadds
adc
jge
test
jge
xchg
lcall
out
das
out
mov
add
hlt
jb
mull
iret
sbbl
dec
enter
leave
cmpsb
dec
dec
enter
leave
cmpsb
dec
and
ja
push
jp
test
sbbl
dec
enter
leave
cmpsb
dec
dec
enter
leave
cmpsb
dec
inc
inc
sub
mov
insl
fs
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
mov
fs
mov
xchg
and
leave
adc
push
fcmovnu
jnp
sub
rorl
xchg
aas
rcl
movl
stos
popf
lods
lret
std
jp
jmp
dec
pop
sbb
aas
daa
push
push
les
jne
idivb
mov
or
cmp
aad
test
lock
xchg
js
and
out
lds
stos
dec
cmp
mov
jae
inc
dec
mov
jb
mov
repz
cmpsl
es
jge
push
mov
fisubs
dec
adc
xchg
gs
and
add
adc
in
insl
mov
add
insw
dec
fdivrs
add
xor
mov
cmp
push
pop
sbbl
xor
and
mov
xchg
dec
dec
mov
scas
test
mov
div
sbb
idivl
jge
loopne
cli
sub
fiaddl
icebp
popf
xchg
rcll
and
aaa
imul
sbb
xor
jecxz
pop
test
xor
add
scas
icebp
popf
in
dec
fwait
jnp
fisttps
stos
cli
inc
xchg
ret
aam
fimull
cmpsl
jl
ret
call
je
flds
sbb
xor
scas
adc
jl
rclb
xchg
push
sub
mov
pushf
fs
sbb
adc
xchg
add
scas
mov
lcall
daa
in
into
movsb
mov
sbb
cmp
pusha
push
pop
mov
push
nop
repnz
mov
mov
and
add
outsb
sub
lret
mov
lcall
push
enter
lret
lods
lahf
cmc
ja
inc
leave
loopne
jle
aam
lcall
insl
inc
pop
pop
aas
xchg
push
cli
sbb
stos
cmp
dec
testl
jnp
arpl
dec
sahf
movsl
sub
jle
repnz
fistl
mov
notb
das
pop
jmp
fcompl
dec
ljmp
in
and
mov
and
arpl
aam
push
xor
cld
pusha
cmp
or
dec
sbb
inc
bound
sub
into
push
xor
dec
and
cli
mov
dec
call
es
cmp
sub
mov
aad
mov
jle
cwtl
adc
ds
jno
jg
lcall
and
arpl
aas
fs
rcll
and
jl
ljmp
faddl
pop
mov
push
gs
mov
lock
and
ror
or
xchg
cltd
dec
xor
out
je
or
fldl
or
pop
sub
pop
sub
mov
int3
repnz
clc
es
xor
adc
mov
addr16
je
insl
rcrb
xchg
loop
sbb
pop
jp
fst
mov
xchg
cmp
repz
add
and
jecxz
subb
jecxz
std
inc
vphadduwd
jmp
scas
cmc
xlat
adc
and
scas
cmpsl
inc
test
jo
hlt
push
and
cmp
fldcw
push
mov
push
in
mov
pop
xchg
pop
mov
fdivs
cld
mov
addr16
xchg
in
clc
and
movsl
andb
dec
insb
cmp
cmp
inc
or
sarl
jb
fdivl
pop
push
cmc
shl
mov
or
mov
and
cmp
test
shlb
std
lods
into
pop
pop
pop
insb
sub
daa
cmc
pop
jb
pop
lret
shll
aas
stc
pop
cmp
test
fisubl
imul
outsl
in
fiaddl
xor
push
mov
pop
inc
pop
mov
inc
push
loop
adc
call
adc
lret
lods
js
lods
xor
stos
or
mov
lods
mov
outsl
dec
sbb
fnstsw
mov
enter
mov
jle
int3
imul
mov
or
fwait
test
fstpl
mov
dec
imul
or
push
sbb
or
add
pushf
test
addr16
dec
mov
in
int3
lds
cmp
push
mov
cmp
jo
je
fbstp
and
push
jmp
jb
push
push
or
mov
pop
jl
sub
push
mov
add
inc
stos
push
jecxz
xchg
jg
lods
pushf
loopne
popa
ret
jne
or
push
xor
and
js
push
jns
addb
mov
and
push
shll
cmpsl
mov
mov
inc
or
and
mov
sbb
stc
xor
jmp
fdivrl
insl
push
xchg
sub
inc
es
adc
xor
mov
das
popf
stos
dec
pushf
mov
stos
jae
xor
lds
xlat
fs
dec
imul
inc
mov
and
shlb
fiaddl
push
pop
sar
push
and
loop
mov
dec
mov
stos
dec
jg
adc
sub
mov
std
or
xchg
jae
push
sub
shll
adc
push
aas
push
call
xchg
test
mov
es
sub
dec
lret
inc
add
imul
jo
pop
and
fwait
push
in
test
xor
xlat
sbb
repnz
imul
clc
inc
icebp
imul
adc
sbb
fxch
aad
mov
and
call
inc
popa
addr16
mov
cmp
roll
mov
fst
mov
addr16
and
in
jae
gs
push
cmp
mov
dec
cmp
int3
scas
pop
dec
jbe
cmp
ss
dec
xor
mov
in
pop
or
inc
dec
xchg
in
inc
dec
mov
or
add
ja
and
test
add
test
ds
sbb
jge
stos
push
push
movsl
nop
and
push
or
dec
inc
adc
xchg
repnz
roll
mov
add
sub
push
mov
je
inc
mov
mov
xor
orl
inc
adc
and
or
jno
imul
fisubl
das
jmp
and
jle
jl
and
in
iret
sub
jecxz
std
push
add
adc
dec
mov
std
push
add
push
pushfw
movsl
sub
sub
adc
sbb
mov
mov
js
movsl
repnz
inc
mov
pop
out
hlt
push
xor
xchg
sub
test
push
mov
test
fsubs
adc
xor
push
adc
out
incb
xchg
fidivrs
jmp
sbb
inc
push
out
incb
xchg
fidivrs
push
fdivr
movsb
mov
movsbl
stos
vdivsd
sub
roll
mov
jae
incb
mov
rolb
cmpsb
jo
into
mov
icebp
inc
test
addr16
scas
and
sbb
lcall
sbb
pop
mov
mov
jbe
push
stos
sbb
sub
enter
add
shll
ror
xchg
mov
mov
lret
sub
xchg
pop
xor
mov
or
add
cmp
inc
mov
pusha
push
cmpsl
sub
pop
or
jp,pn
jnp
and
sbbl
mov
mov
or
ret
or
ret
cmpsb
sbbl
push
mov
pop
das
je
arpl
aaa
push
enter
dec
adc
xor
push
sub
int
inc
push
test
sbb
mov
unpckhps
out
test
adc
or
jp
inc
xchg
xchg
inc
jae
icebp
xor
shufps
std
ljmp
add
cmp
sbb
adc
and
cltd
adc
mov
sahf
mov
xor
daa
shl
adc
mov
mov
and
gs
xchg
pop
add
js
push
mov
xchg
cmp
sub
mov
push
xchg
insl
add
cmpb
cmp
jge
cmpsb
cwtl
insl
adc
jno
cmp
xchg
or
add
cmpsb
xorb
cwtl
dec
shll
mov
xor
andb
mov
pusha
imul
cmpsl
cmp
hlt
pop
addr16
test
sbb
xchg
cwtl
jns
test
sbb
and
sbb
sub
inc
lret
jmp
push
jmp
cmpsb
push
jbe
mov
gs
jmp
aam
cmpsb
pop
push
pop
lahf
in
sbb
fnsave
bound
scas
push
dec
and
xchg
outsl
out
mov
test
mov
rol
cld
movsb
ret
pop
repnz
add
test
icebp
cwtl
or
flds
xchg
xchg
push
fdivs
mov
insb
add
xchg
gs
leave
mov
outsl
jne
sub
repz
sub
int3
mov
pop
mov
sbb
gs
dec
movntq
jo
jae
lret
sub
cmp
mov
pop
mov
dec
movntq
jo
jae
lret
sub
into
ja
clc
add
adcl
adc
rep
or
jecxz
adc
out
mov
lock
test
xchg
loopne
lret
es
shrl
ss
mov
outsb
dec
xor
test
jmp
mov
xor
mov
lahf
negb
test
std
loope
jo
pop
dec
lahf
negb
test
mov
mov
sbb
jmp
push
xlat
cmc
mov
call
xchg
in
push
xchg
push
movsl
inc
call
jo
xchg
add
bound
cmp
inc
lret
fadd
mov
leave
xchg
push
sbb
xchg
cmp
sbb
insl
movsl
lahf
out
jp
mov
pop
add
adc
jge
mov
test
jg
cmp
ds
mov
repnz
jo
rorb
std
sub
bound
bound
ds
xor
jp
call
cmpsb
xchg
out
push
dec
out
call
fistps
mov
and
pop
loop
sub
jecxz
fsts
fucom
mov
pop
loopne
or
dec
mov
fucom
xor
test
popa
push
loopne
pop
addb
lret
xchg
lods
or
call
lret
or
gs
push
ret
mov
outsl
cli
adc
mov
test
cwtl
dec
in
and
dec
or
daa
test
xorl
cltd
dec
dec
in
insb
rcr
mov
inc
mov
inc
test
mov
adc
add
sti
or
dec
dec
inc
mov
adc
out
lods
cmp
jecxz
or
rol
mov
cmpsb
xor
or
mov
lahf
jmp
aad
in
cmpsl
in
add
and
jo
xlat
mov
sbb
jle
mov
fistpl
pusha
dec
sti
pop
jle
xor
leave
sbb
aas
rcrb
insb
cmp
mov
arpl
pop
push
mov
xor
repz
or
and
mov
lcall
into
enter
mov
repz
movsb
mov
popf
mov
and
dec
mov
and
arpl
mov
flds
jo
std
test
mov
call
and
fadds
xchg
imul
xchg
mov
push
daa
inc
mov
outsb
inc
xor
jbe
mov
out
jp
push
sub
daa
pop
dec
insb
lahf
inc
ljmp
shl
popf
and
sub
inc
fsub
and
jecxz
add
into
mov
jmp
lret
adc
inc
bnd
ret
adc
lds
jp
mov
jge
popf
mov
testl
cmp
lahf
loop
outsb
mov
lret
push
mov
xchg
nop
sarb
xor
in
cmp
ret
sbb
xchg
jmp
mov
lcall
movsb
in
repz
inc
popa
push
icebp
ret
push
add
enter
in
jns
jg
cmpsl
scas
xchg
fnclex
addr16
cmp
jb
aam
hlt
xchg
push
add
out
sarb
inc
mov
insl
inc
sbb
iret
insb
daa
repnz
scas
xor
jb
faddl
adc
mov
xchg
mov
sbb
fwait
or
lret
icebp
es
jecxz
das
repz
aaa
in
adc
mov
jnp
dec
mov
mov
int3
ljmp
in
and
pop
scas
in
dec
jmp
push
popa
pop
cmp
cmpb
sub
scas
push
push
jecxz
lods
xchg
pushf
sub
fistps
test
cs
imul
inc
jne
rolb
xchg
loop
ret
adc
dec
scas
int
sbbl
add
push
push
fsubp
mov
lcall
push
pop
pop
fstl
pop
push
mov
or
lods
scas
adc
pop
lahf
in
sbb
adc
mov
mov
cmp
scas
adc
mov
cwtl
xor
xchg
cmc
arpl
popf
lock
mov
fs
and
int3
add
jb
iret
xor
sub
push
mov
add
pop
pop
aas
cmc
aam
or
pop
pop
sbb
cmpsl
sarb
scas
sub
decl
adc
jb
pusha
in
stc
cld
orb
sub
xchg
or
sbb
fs
fs
sub
fnstenv
test
cmp
jp
push
in
mov
xlat
and
insl
pop
test
lret
in
test
or
sub
push
mov
add
mov
fs
iret
test
pop
mov
cmp
jns
xor
mov
fnsave
push
mov
and
cmp
pushf
add
es
call
pop
mov
in
sbb
add
jo
inc
inc
js
push
lcall
mov
mov
stos
push
mov
jo
shrb
xchg
and
repz
enter
push
es
adc
stos
jbe
sarb
push
in
xchg
adc
sarb
ljmp
push
int3
mov
mov
lcall
and
nop
ljmp
mov
sbb
adc
mov
sub
fisubrs
into
and
cmp
cmpsl
jl
pop
adc
push
jae
adc
or
inc
lcall
sti
cwtl
idivl
cld
sbb
pusha
or
add
imul
test
adc
ds
xor
out
push
cmp
xor
cwtl
cld
mov
icebp
and
jge
fwait
mov
dec
test
stos
add
lds
cmp
jl
jecxz
fnsave
pop
loop
adc
jecxz
js
cmc
mov
inc
outsl
sarl
push
cmpsb
mul
notl
jnp
ret
adc
xchg
mov
mov
push
mov
cmp
and
dec
int3
xor
push
push
roll
notl
inc
pop
sahf
nop
mov
lods
pusha
push
cltd
in
mov
ret
jo
ficoml
inc
push
mov
fdivs
test
test
lods
stc
adc
pop
lods
cld
mov
fwait
jecxz
add
push
cmc
push
sbb
adc
sub
jne
xor
dec
out
fsubrs
lret
pop
mov
lods
sarb
in
pslld
adc
adc
stos
sbb
jns
mov
pop
sbb
pop
mov
sbb
push
ljmp
test
imull
out
ja
push
pop
in
sub
call
fs
and
loopne
es
imulb
mov
adcb
aam
stc
sahf
mov
sbb
ficomps
xor
out
mov
xlat
shl
cmp
xchg
add
push
in
rcrl
in
test
mov
cmpb
popf
popa
xchg
adc
insb
dec
adc
outsl
push
xor
xor
inc
add
jae
sbb
inc
hlt
ss
gs
xchg
int
push
lcall
jecxz
lods
add
stos
mov
lahf
mov
xor
inc
fwait
inc
push
fistpll
sub
fsubrl
xlat
pop
pop
lods
mov
lret
nop
in
adc
inc
cmp
sbb
xor
and
fnstenv
dec
push
adc
sbb
push
jno
pop
pop
and
pop
scas
xor
add
imul
je
adcb
and
xchg
stos
repz
mov
sbb
mov
das
scas
insl
stos
daa
xlat
xchg
adc
shr
addr16
mov
pop
or
jns
js
cmpsb
cmp
jb
inc
push
lret
pop
jno
icebp
dec
or
jecxz
outsb
mov
fs
cwtl
push
pop
aam
dec
sahf
es
sti
xor
cmp
pop
repz
adc
inc
push
mov
fsubr
lret
dec
fldenv
cmp
adc
movsb
xor
or
mov
push
pop
fnsave
and
sbb
negl
pop
cmpsl
pop
pop
in
xor
adc
mov
fwait
call
sbb
arpl
bound
add
std
and
inc
fisubrl
je
repnz
sub
mov
xchg
sub
mov
mov
mov
and
scas
inc
xor
scas
cmc
xchg
lock
mov
mov
dec
fmuls
pop
mov
inc
sub
call
inc
aas
adc
adc
or
arpl
mov
fldcw
movsl
je
outsl
mov
mov
in
mov
fmul
push
enter
aaa
iret
cmp
add
and
sti
cmp
lds
xchg
sbb
add
loop,pt
pop
out
rcl
xchg
test
adc
ss
mov
push
cmc
xchg
adc
pop
jecxz
push
pop
mov
icebp
xchg
mov
cmpb
xlat
sub
pcmpeqw
jbe
pop
xchg
sub
and
dec
dec
daa
lock
adc
xor
sbb
push
cmpsb
cmc
sbb
mov
or
bound
jae
dec
dec
add
lahf
add
mov
pop
fistpll
dec
push
xchg
xchg
loopne
cmp
adc
pop
mov
lock
insl
clc
sbb
pop
push
cmp
xor
mov
stc
int
fistl
xor
dec
inc
jecxz
inc
fmul
mov
ja
jbe
loop
aaa
shll
shlb
xchg
jecxz
push
mov
add
cmpsl
mov
mov
pop
xor
mov
mov
inc
dec
rcll
xor
mov
lods
dec
pop
mov
sub
mov
cltd
ja
sub
sbb
fldenv
idiv
xchg
and
sarl
mov
sbbl
push
mov
and
push
loop
jecxz
test
mov
ds
dec
lret
sbb
xor
jl
ret
mov
push
inc
daa
dec
in
pop
movsb
xor
mov
pushf
sbb
call
xchg
test
mov
or
cmp
sbb
xchg
imul
pusha
cmpsb
jo
lahf
dec
mov
inc
xchg
or
movsl
mov
sti
push
adcb
ficompl
jecxz
lcall
dec
mov
sub
pop
jno
insb
popf
cwtl
cmpsb
jmp
daa
mov
xchg
push
stos
mov
pop
adc
rcr
outsl
int
das
xchg
popf
dec
lahf
add
repz
mov
adc
jns
in
inc
fs
sub
or
mov
scas
nop
cwtl
jg
fldcw
out
dec
and
scas
fstpt
mov
sub
fiaddl
xor
dec
gs
cltd
enter
dec
dec
jl
jl
mov
addr16
cld
ficompl
dec
seta
je
cld
ja
sbb
mov
fstpl
test
jge
sbb
je
lds
cmp
mov
loopne
dec
xchg
out
mov
leave
inc
fmull
dec
pop
das
mov
jecxz
dec
mov
sbb
sub
mov
fisubrl
xchg
sbb
pop
jb
mov
mov
aaa
dec
sub
cltd
mov
jmp
popf
push
mov
jl
sub
inc
notb
lods
fnstenv
test
fldenv
jg
push
xor
push
or
lahf
js
dec
xchg
inc
or
mov
jb
adc
fldenv
cltd
daa
sbb
sti
mov
orb
mov
fsubs
mov
inc
sbb
fadd
or
adc
sub
xor
daa
push
and
xor
ds
popf
sbb
out
shrb
pop
lds
pop
xor
test
lds
sub
int3
add
pop
aam
cmp
cmp
js
sub
pop
lcall
fs
stos
xor
dec
cli
jae
push
fists
xor
out
fldcw
out
idivl
adc
push
fisttpl
sub
dec
cmp
xor
cmpsb
mov
shlb
in
push
add
add
clc
sbb
arpl
mov
inc
ret
rolb
mov
mov
sbb
cmp
scas
push
pop
mov
sbbl
jnp
adc
jle
push
setbe
aam
xor
ret
mov
inc
cmc
and
fstp
nop
xchg
fisubs
add
and
pop
dec
xor
push
inc
and
imul
dec
xchg
data16
andb
adc
in
cmp
sbb
aam
push
adc
xor
outsb
lods
stos
mov
repnz
stc
clc
push
enter
in
pop
pop
sbb
daa
mov
inc
ds
mov
mov
sbb
lret
iret
mov
cmpb
nop
pushf
xor
stos
add
mov
mov
sub
or
mov
cs
rcl
mov
dec
gs
jle
push
jne
cs
pop
adc
icebp
and
sbb
fcmovnb
or
or
fdivrp
push
mov
scas
jns
fwait
adc
jne
outsb
cmpsb
outsl
jle
push
xchg
cmp
mov
adc
sarb
lret
xor
lds
jae
push
xor
jl
pop
push
jb
test
jne
lods
xchg
mov
mov
or
out
sub
pop
frstor
push
dec
loopne
mov
hlt
jbe
cmpsl
add
mov
mov
ret
test
xor
das
in
je
mov
push
lcall
jle
cmp
in
push
fiadds
clc
or
xchg
sbb
lret
in
dec
into
fcmove
lds
pop
xor
jle
pop
lret
clc
xor
shl
in
mov
xor
daa
push
cltd
dec
icebp
sbb
jl
push
adc
out
pop
popa
adc
in
and
lea
xor
push
ret
xchg
aam
repz
insb
pop
lds
loopne
inc
mov
aad
clc
add
mov
pop
pushf
daa
adc
fisubs
arpl
xor
or
sbb
sbb
test
and
xchg
stos
mov
cs
cld
jge
mov
pop
dec
bound
or
sbb
sbb
gs
rcr
popf
rcrb
shr
add
rcrl
add
pop
dec
xchg
sub
stos
imul
mov
popa
mov
pop
or
add
mov
add
pop
cmp
xlat
adc
pusha
dec
jns
xchg
push
push
cmp
mov
int3
mov
dec
dec
pop
in
cs
sbb
mov
push
or
dec
fstpl
bound
inc
pop
jno
rcr
cmpsb
xchg
sbb
pop
loope
xchg
pop
mov
and
clc
xchg
je
fmull
sbb
mov
pop
inc
out
cmp
xlat
jae
add
xlat
sbb
pop
in
add
test
cs
ret
ret
out
cmpsl
mov
dec
push
ret
inc
mul
mov
testl
ds
sbb
push
in
and
shl
mov
sbb
ja
data16
icebp
add
and
popf
sub
lret
lock
jo
sub
dec
xchg
and
in
fwait
adc
outsb
xchg
dec
lods
sarl
pop
or
loopne
mov
jae
dec
pop
mov
jl
mov
mov
or
clc
int
scas
in
inc
ja
xor
adc
mov
mov
mov
insb
and
inc
jl
dec
adc
ljmp
xchg
sub
jb
pop
fsub
rclb
dec
dec
scas
and
sbbb
jmp
adc
sahf
mov
fisttpll
mov
incl
push
cltd
and
dec
mov
xchg
xchg
dec
sub
mov
daa
or
sub
inc
fs
sbbb
fmull
hlt
iret
inc
inc
pop
push
sub
fildl
out
mov
mov
sub
cld
insl
jmp
in
cmpsl
imul
dec
adc
mov
xchg
pop
js
loopne
adc
leave
pop
mov
pop
movsb
sbb
inc
fsub
xor
sbb
test
imul
imul
jo
inc
push
mov
sarb
lea
cmp
int3
xchg
ja
push
les
jle
movsb
adc
loop
xchg
rorl
popa
test
into
mov
ja
dec
aam
mov
mov
mov
push
xor
sub
outsl
fcomip
daa
push
xchg
into
cmpsl
int
pop
or
push
fsub
in
or
cmp
add
scas
clc
dec
movb
jae
not
mov
cmove
scas
sub
add
push
cwtl
xorb
xor
and
xor
mov
mov
jne
xchg
inc
mov
test
sbb
int3
jne
andb
repnz
and
insl
jo
out
in
adc
jno
inc
cmp
clc
or
call
or
xor
push
dec
sahf
jae
mov
push
jl
cmpl
out
cmp
xor
cli
jecxz
pop
xchg
jno
lods
lds
scas
test
push
xchg
insl
popf
pop
sbb
test
xchg
out
mov
nop
int3
shl
subl
lahf
mov
cmp
js
lods
jmp
pushl
lea
imul
push
clc
push
cmp
inc
sub
lods
jle
mov
mov
mov
dec
mov
std
jecxz
js
mov
jbe
pop
idivb
dec
sbb
faddl
cmc
add
out
inc
fsubrs
mov
lods
jl
dec
loop
iret
popf
cmp
imul
inc
jae
dec
pop
js
push
xchg
sub
shll
std
xchg
scas
mov
loopne
cmp
insl
out
gs
cmp
pop
dec
out
pop
iret
ja
pusha
ds
dec
dec
inc
xor
popl
js
dec
pop
dec
loopne
std
lods
test
jl
jnp
outsb
loop
cmp
mov
jl
or
fmuls
sahf
fcoml
inc
mov
xor
or
lret
adc
popa
cmc
mulb
mov
xchg
xchg
int
ret
movsl
lcall
lret
jo
jecxz
loope
xchg
jae
mov
add
push
mov
jle
inc
or
xchg
ss
and
in
sbb
sar
inc
push
pop
or
mov
pop
jns
mov
popa
adc
sbb
lahf
aaa
ss
lret
push
jbe
pop
mov
ja
dec
jbe
mov
mov
mov
sti
cmp
dec
int
orb
sbb
ret
mov
adc
pop
movsb
out
mov
mov
call
ss
inc
jo
outsb
and
lock
ficoms
push
fxtract
out
mov
cs
clc
cmp
test
jo
sub
mov
xor
cwtl
lods
je
sti
jp
test
and
rolb
inc
aad
popa
ljmp
cmpsb
pop
pop
iret
stos
mov
fldenv
adc
cs
mov
fstpl
mov
in
sub
inc
push
lcall
or
lds
sbb
subl
and
mov
sbb
sbb
pop
enter
pop
pushf
aam
and
push
add
adc
adc
xor
popa
imul
iret
or
mov
jge
mov
lock
mov
mov
dec
ret
push
cmc
push
out
repz
dec
xor
cmp
or
cmp
mov
xchg
xor
jmp
std
stos
fdivrp
pop
inc
mov
xchg
pusha
das
out
lahf
and
push
pop
adcb
push
daa
push
shr
inc
pop
fyl2x
and
ret
movsl
mov
cmp
add
adc
xchg
add
mov
clc
jmp
sub
sbb
in
cmpsl
pushf
and
ljmp
add
daa
loopne
icebp
sub
inc
inc
push
loope
xchg
xchg
cmp
call
sub
frstor
mov
movsl
roll
sbb
insb
arpl
mov
adc
jge
push
inc
out
mov
mov
push
xchg
mov
lahf
xchg
popf
xchg
das
repnz
es
test
or
les
dec
imul
jne
xchg
push
lret
fs
or
inc
mov
jecxz
shll
nop
outsb
sub
add
push
mov
mov
pop
stc
inc
test
xchg
fisubl
adc
test
and
fidivs
adc
xor
or
sub
lea
movhps
push
lret
sti
scas
ficompl
roll
push
jecxz
insb
mov
cmc
es
push
idivl
cmpsl
decb
sbb
mov
xor
je
xchg
loop
loop
mov
or
cmpsb
xor
lahf
push
dec
jo
or
movsl
push
test
lahf
fiaddl
sarl
scas
dec
test
test
adc
into
lods
jecxz
jnp
leave
adc
out
cmp
into
mov
adcl
sub
int3
adc
adcl
pusha
jne
fldenv
dec
stos
push
adc
mov
adc
addl
jb
mov
sti
jl
enter
sbb
sub
pop
xchg
or
lock
sahf
push
mov
fdivs
xchg
inc
dec
push
mull
push
scas
mov
lock
adc
bound
jbe
popa
mov
jno
arpl
loop
xchg
mov
rcrl
aas
jp
stos
aam
push
add
mov
pusha
leave
and
pop
fwait
nop
data16
jmp
enter
xlat
jb
jae
out
into
mov
xor
std
sarl
mov
adc
jge
sbb
insb
ja
xor
mov
ss
cbtw
mov
push
or
sub
and
mov
es
inc
xchg
mov
shrl
shlb
xor
cmc
decb
in
or
shr
push
cs
sarl
divl
test
xor
insb
and
ss
pop
jbe
jp
sbb
push
repz
popa
das
test
sub
shlb
jne
loop
in
mov
cmp
aas
mov
out
or
mov
xchg
aaa
jo
movsl
mov
popf
inc
pop
fimull
je
dec
cmpsl
addr16
mov
repnz
and
popl
lea
fstpl
fldt
sti
push
sub
cmp
dec
testl
add
xor
aad
lcall
sub
inc
pop
cmp
stos
fisttpll
adc
jnp
sbb
or
mov
loope
jno
lods
pop
daa
mov
push
push
loope
gs
add
popa
leave
and
std
lcall
sbb
lret
fisttps
jns
xor
pop
fwait
inc
scas
stc
mov
ds
mov
and
xchg
iret
push
ljmp
xor
ror
cmpsl
fidivrs
xorb
adc
adc
mov
or
jg
movsb
cwtl
cld
pushf
and
pop
cmp
ljmp
test
fwait
cmp
rolb
xor
xlat
imul
nop
jmp
out
mov
xor
add
arpl
pop
ret
je
stos
rorb
stc
mov
add
std
jno
sahf
push
std
dec
dec
xor
cld
mov
bnd
add
scas
cmp
adc
pop
push
push
or
clc
jo
idiv
fimull
xchg
inc
popa
mov
mov
jle
cli
push
daa
fsts
lea
imul
add
stos
or
aad
xchg
mov
adc
bound
xchg
pop
adc
xor
cli
negb
add
fcomp
xor
adc
dec
lds
dec
mov
mov
cmpsb
cmp
js
imulb
loopne
test
les
mov
out
jo
and
fbld
outsl
dec
jnp
and
orl
pop
adc
dec
mov
rol
int
dec
mov
mov
xchg
sbb
cmp
sti
scas
jge
mov
clc
push
sub
ds
ja
lods
jne
jb
rorb
adc
mov
xchg
dec
or
jp
jns
adc
outsl
js
test
cmp
stos
or
jmp
adcl
mov
xlat
repnz
rcr
stos
es
aas
cmp
xchg
push
ja
mov
sub
cmp
inc
xor
and
push
fstpt
xor
aad
dec
pop
notb
jecxz
push
outsl
repz
xor
arpl
jg
adc
int
cmp
daa
dec
jmp
cli
js
cmp
iret
mov
or
jp
idiv
insb
and
xor
cmpb
daa
and
std
clc
out
jge
out
jne
cmp
jecxz
fwait
jge
mov
and
fcomip
xlat
cmp
pop
ss
test
xchg
dec
jmp
lahf
pop
hlt
dec
add
push
lods
mov
sub
frstor
shlb
insb
sbb
push
adc
xchg
sbb
mov
sub
cli
jbe
scas
pop
push
inc
lcall
pop
jno
mov
jno
scas
add
lret
test
aas
fs
pop
xchg
jl
lret
insl
mov
push
es
jg
stos
mov
shlb
and
jns
sub
push
cli
adc
mov
ljmp
pop
adc
mov
stos
jg
inc
pop
xor
xlat
mov
mov
mov
xlat
data16
adc
or
imul
lcall
push
hlt
add
dec
mov
mov
call
push
jecxz
sti
dec
xor
in
int
sbb
mov
test
pushf
jnp
cmp
enter
sbb
ret
push
xor
mov
lahf
or
push
test
jb
jo
pop
fs
cwtl
sbb
push
push
jp
jmp
or
inc
jl
or
add
push
gs
mov
xor
daa
fucom
sbb
sahf
jp
mov
sbb
aam
xchg
xchg
pop
ljmp
add
inc
xchg
sbb
lret
test
shlb
mov
inc
cli
out
in
adc
lea
mov
mov
in
mov
xor
pop
test
inc
inc
xchg
jns
xor
add
mov
jae
sub
push
sbb
call
lods
arpl
sar
add
sub
outsb
push
adc
cmp
adc
sub
shlb
lcall
push
popa
dec
jl
inc
mov
test
jle
mov
ja
popa
clc
pusha
jnp
inc
sub
mov
cltd
insl
testl
fsubl
popa
dec
js
xlat
orb
or
int
mov
data16
and
jle
cmpsl
jp
jb
pop
add
pop
js
xchg
lahf
push
cld
jo
movsl
gs
shll
inc
lock
test
insb
jo
jo
xor
insb
pushl
outsb
test
xor
mov
dec
imul
cmp
adc
pop
jmp
cmpsb
jae
pop
stos
xor
stos
mov
xchg
xchg
push
sub
pushf
push
dec
pop
jns
in
stos
and
out
pop
mov
jl
cmp
je
xchg
pop
nop
mov
push
dec
pop
sbb
and
mov
mov
mov
fwait
stos
and
xchg
scas
aad
xor
add
cmp
mov
icebp
jle
les
inc
mov
loop
ja
mov
mov
data16
bound
lds
jne
loope
mov
mov
outsb
add
cltd
ficompl
dec
xorb
rcll
sbbb
or
in
pop
cltd
lret
loopne
js
sbb
lcall
add
leave
add
ret
sbb
ja
arpl
add
std
vcmpss
shlb
movsl
stos
mov
dec
outsl
sub
aam
push
ret
lret
mov
push
lahf
and
ret
and
jbe
mov
adc
hlt
subb
xchg
and
mov
stc
pusha
cmp
sub
mov
dec
xchg
and
mov
and
jnp
sahf
sub
movsb
cld
or
adc
mov
scas
mov
pop
mov
sub
lea
aas
lock
repnz
fwait
push
ja
hlt
les
jge
cmp
inc
insb
or
es
xor
movsb
push
dec
mov
fidivrs
mov
cmpsb
mov
nop
jns
sub
dec
cmc
sahf
add
add
cmp
out
out
test
stos
sbb
dec
sub
jp
jecxz
hlt
push
inc
dec
in
jp
push
mov
cli
flds
adc
je
in
push
lret
jl
jno
out
addr16
push
cmp
inc
rcl
push
cmp
and
outsb
dec
pop
xchg
add
dec
rcll
mov
add
cmc
push
mov
dec
mov
je
jg
add
sbb
out
dec
mov
cmpsl
push
jp
insb
shrl
cld
aad
idivl
mov
fmul
enter
jns
inc
dec
xor
xor
pushf
mov
or
js
dec
inc
adc
ret
pushf
pushf
mov
pop
test
mov
test
repnz
cmc
or
ss
push
bound
or
ljmp
mov
mov
pop
rcrb
popf
in
jge
mov
pop
mov
push
into
bound
xchg
mov
das
add
rcl
pop
or
andl
xchg
lods
push
ret
test
je
cld
shll
scas
inc
call
scas
mov
fwait
in
sub
sbb
xor
dec
lds
mov
incb
mov
arpl
stos
cmp
test
sahf
lds
test
mov
addl
nop
cmp
ss
jmp
mov
and
shll
iret
or
mov
shll
dec
repnz
loope
enter
addr16
stos
test
mov
imul
inc
push
jns
mov
inc
jnp
cmp
pop
mov
sbb
pop
aad
sbb
pop
sahf
shlb
xchg
in
adc
inc
ds
xchg
data16
out
adcb
lds
push
pop
inc
lock
fsubl
ret
jmp
sahf
mov
cs
inc
stos
cmp
or
rclb
roll
in
dec
xor
cmp
or
ljmp
cmpsl
xor
jg
out
je
dec
jecxz
stc
psrlq
xor
inc
mov
inc
sbb
loop
push
add
fidivrl
js
test
daa
int3
or
pop
inc
mov
jmp
inc
mov
mov
xchg
aas
popf
xor
and
and
adcb
fst
add
and
xor
pop
adc
xor
loopne
ja
sub
icebp
test
cmp
xor
mov
add
pop
lds
sub
dec
stos
aas
scas
mov
mov
test
adc
in
inc
ret
xchg
fstpl
aam
inc
pop
aad
dec
std
jecxz
pop
shll
call
mov
fs
movsb
in
sbb
in
push
jb
mov
jg
xchg
pop
push
mov
cmpb
and
push
pop
test
lods
sahf
stos
test
test
std
inc
ds
inc
add
les
shrl
xlat
cmp
mov
out
shl
mov
pop
leave
mov
adcl
xchg
inc
dec
cmp
lcall
int3
mov
and
adc
addl
xor
mov
sahf
test
dec
and
pop
xchg
xchg
adcb
pop
movb
xchg
jp
mov
es
jo
xchg
jge
pop
cmp
sarl
daa
push
push
mov
shr
add
mov
xchg
gs
jno
aas
lret
adc
pushf
add
mov
xchg
lock
push
xchg
sub
lret
push
inc
cmp
in
jb
scas
scas
dec
xchg
xchg
push
adc
ret
clc
and
xchg
mov
jnp
fsubrl
testl
inc
mov
shll
adc
das
lcall
or
nop
in
xchg
push
add
mov
mov
lahf
cltd
ret
movsl
test
push
test
imul
out
pop
lods
mov
out
mov
out
cmpsl
pop
mov
cmpsb
adc
addb
loope
jle
movsb
out
pcmpgtd
jg
or
cmp
sub
xchg
es
dec
adc
leave
dec
sub
xchg
or
mov
jns
ficoms
dec
pop
dec
pop
mov
adc
cli
fxch
fidivl
push
xor
jmp
ret
xlat
les
imul
add
cmp
insb
jg
push
and
lock
lea
sahf
outsb
mov
xor
fstp
xchg
cmp
arpl
fs
out
shrb
hlt
xlat
dec
push
xor
xchg
bound
jmp
push
sbb
leave
jmp
out
pop
xchg
cmp
mov
imulb
dec
decb
inc
and
dec
adc
adcl
mov
orb
in
xor
mov
lret
xlat
pop
add
cltd
clc
inc
xchg
pushf
jb
jmp
test
or
pusha
mov
mov
and
imul
inc
push
sarl
das
mov
fimuls
or
mov
imul
ss
mov
inc
lock
add
in
mov
xor
lods
xor
loope
mov
pop
mov
aam
sbb
mov
into
ret
mov
pop
outsb
sbb
xor
pop
loop
lods
in
dec
insb
sub
movsb
dec
sahf
cmp
outsl
dec
xchg
in
push
adc
cmp
mov
loope
sbb
push
cmpsl
in
xchg
mov
xchg
sarl
loope
fdivr
mov
cmp
shl
int3
xchg
arpl
xor
lds
iret
out
jmp
push
push
xor
icebp
outsl
mov
sub
out
push
mov
bnd
pusha
sbb
mov
sarl
or
pop
and
imul
add
pop
cmp
cli
and
imul
shll
pop
stos
jecxz
daa
shlb
push
push
add
or
push
and
das
push
or
jmp
dec
push
ret
cwtl
fiaddl
or
sub
test
cmp
pop
jge
sbb
lret
and
pop
inc
cwtl
dec
dec
les
dec
and
xchg
mov
xchg
push
jge
rcrb
dec
insb
ret
push
loop
lods
push
repnz
dec
les
fmull
loope
jbe
mov
fisubrs
mov
xor
or
icebp
roll
push
add
or
ror
popf
push
adc
rolb
mov
enter
push
lcall
imul
test
xchg
jp
xor
aam
and
xlat
aam
mov
push
inc
cmp
sub
int
xchg
out
jbe
adc
movsl
jb
addl
cmp
out
pop
sbb
pop
inc
sbb
rol
lods
hlt
loopne
movsl
shll
xor
ss
mov
pop
adc
push
insl
jo
pop
mov
fs
pop
lret
mov
insb
roll
scas
out
andl
mov
mov
sbb
push
lcall
mov
xchg
scas
push
rcrl
push
sub
push
and
in
adc
shrl
mov
push
xchg
lods
nop
arpl
jns
mov
roll
push
mov
mov
aas
pusha
pop
jns
and
mov
push
sub
loop
or
push
mov
mov
mov
xor
xor
sub
xchg
inc
test
out
push
sbb
lock
jge
cltd
sub
mov
mov
adc
imul
xor
xchg
mov
xchg
pushf
inc
divb
jge
jle
adc
push
ds
adc
or
sbbb
dec
push
scas
imul
nop
in
or
cmp
mov
dec
push
jg
orl
mov
xor
hlt
sub
ljmp
xchg
jbe
xor
cmp
outsb
mov
dec
mov
clc
xchg
or
xchg
mov
sub
and
fnsave
cwtl
xchg
dec
inc
mov
gs
mov
lret
push
dec
pop
sbb
cltd
mov
xorb
pushf
cltd
dec
pop
push
add
insl
and
jns
inc
cltd
pop
push
ds
es
ja
add
mov
pop
mov
dec
sbb
or
xor
orl
sub
cmpsb
mov
int
mov
mov
jno
cmpsb
xchg
push
jno
loope
stos
icebp
nop
test
movsl
and
push
push
inc
lcall
add
push
push
test
aaa
loop
cli
idiv
ja
add
push
inc
out
jg
sbb
xor
push
or
mov
stos
and
push
cmpsl
stc
jno
lcall
lret
fists
push
idivl
out
out
push
push
pop
sbb
push
lods
lods
xor
ljmp
pop
add
icebp
icebp
loope
jge
push
sbb
lds
push
arpl
cmp
sahf
stos
mov
mov
stc
stc
outsl
cwtl
fisttps
mov
cmp
dec
nop
leave
pop
push
sbb
movsl
out
xchg
or
push
and
int3
roll
xor
sarl
shr
jl
dec
sbb
xchg
and
sbb
in
push
or
mov
into
test
lds
jnp
inc
mov
dec
sbb
popf
jne
test
cmpsb
and
into
adc
scas
push
jmp
mov
iret
adc
xchg
xchg
data16
stc
sub
inc
popa
fs
mov
lea
add
adc
pop
loopne
shlb
pushf
fimull
pop
adc
out
loope
jp
dec
aam
jle
ja
mov
sub
das
lahf
xor
add
jns
in
adc
mov
imul
dec
jmp
aad
mov
or
or
cli
dec
cmp
sub
mov
sub
inc
daa
mov
and
arpl
push
xchg
adc
addr16
fisttpll
add
push
cmp
and
and
scas
or
in
push
push
test
xor
aas
inc
or
lret
pop
dec
xchg
inc
popa
cmp
jg
or
lods
jg
sbb
push
add
mov
leave
test
pusha
scas
adc
xchg
jnp
jbe
cmp
shrb
add
sbb
lahf
loope
inc
shrb
mov
xor
lds
scas
cltd
xchg
sbb
je
scas
push
lcall
xor
mov
pusha
jp
stos
adc
jmp
notb
sub
in
xchg
pop
adc
cmp
mov
xchg
pushf
not
push
mov
in
mov
int3
dec
mov
mov
imul
les
lods
push
add
adc
cmp
out
fs
mov
cmp
or
pop
pushf
lret
mov
adc
jnp
es
jmp
or
rol
inc
pop
cmp
test
cld
xor
adc
dec
pop
push
adc
jne
daa
rorl
and
pop
mov
je
lds
les
xchg
sbb
mov
add
and
jns
adc
in
testb
iret
or
mov
add
xchg
aad
sarl
or
imul
sub
sub
repnz
add
cmp
stos
ret
fldl
in
rcl
mov
enter
loop
jno
into
icebp
inc
mov
jle
or
hlt
cs
movsl
rorl
ret
sbb
mov
popf
mov
scas
xchg
inc
cmp
jbe
mov
js
ja
jmp
xor
jl
imul
inc
ret
pop
push
scas
inc
and
xlat
in
pusha
lret
add
lret
daa
pop
xor
push
sarb
loopne
jle
adc
cmp
dec
punpcklwd
cmpsb
mov
jae
in
int
cltd
fisubs
stc
loope
outsl
js
test
les
and
or
and
or
sahf
xor
gs
rcll
add
or
cmp
or
loope
repz
fdivrs
maskmovq
imull
xchg
xchg
lret
lcall
jge
xor
mov
xchg
scas
stos
ja
pop
xor
fwait
test
test
pushf
ss
or
jne
loopne
sbb
jmp
sub
pop
imull
dec
sbb
test
outsl
mov
and
lahf
movsb
mov
fs
xor
or
mov
cld
andl
sbb
mov
sbb
rcll
jns
clc
loopne
cli
dec
push
sti
scas
xor
xchg
insb
xchg
mov
popa
repnz
add
shlb
and
jle
dec
stc
adc
mov
shr
test
in
test
insl
aam
cmc
fsubl
mov
mov
pop
mov
pop
jle
enter
dec
repnz
nop
loop
jbe
popf
xor
push
std
cmc
lea
es
cs
test
jnp
or
mov
lcall
pop
mov
out
out
ret
fs
push
pop
lods
pushf
sbb
mov
rolb
xchg
movsl
lret
js
std
dec
lahf
and
rorl
and
mov
pop
mov
add
leave
or
sbb
mov
xchg
jbe
pop
mov
and
enter
sahf
out
add
pushl
push
mov
in
imul
insb
xor
sub
bound
arpl
in
fs
mov
pop
pshufw
mov
test
repnz
dec
gs
enter
jbe
js
lea
je
ds
lret
test
push
pop
shll
repnz
test
outsl
inc
and
inc
xorl
cmp
push
out
mov
inc
xor
sbb
adc
xor
mov
mov
xchg
xor
cmpl
lods
lret
sub
ja
push
cmp
cmp
loope
repnz
outsl
in
addb
inc
imul
mov
arpl
sub
addl
ficomps
mov
sti
push
or
dec
dec
pop
test
fdivl
adc
cwtl
xchg
sbb
dec
push
push
pop
and
sub
call
xor
xor
movb
mov
xorl
imul
into
ss
mov
jae
mov
or
jp
adc
repz
jl
testl
xchg
mov
icebp
inc
sbb
dec
and
cmp
js
mov
mov
mov
xchg
xchg
adc
ljmp
sbb
add
sub
sub
pusha
push
and
xchg
enter
lret
xor
inc
xor
jo
push
cmpsl
lds
sbb
jb
inc
sbb
jmp
or
insl
sub
or
in
daa
jae
xchg
js
sar
inc
in
fcoms
mov
cs
sbb
and
jle
lds
ja
mov
mov
jnp
xorb
test
or
dec
pop
mov
sbb
pop
xchg
jns
outsb
daa
sub
push
je
aaa
fistl
or
sbb
les
es
mov
push
out
xor
jcxz
cmpsl
loop
outsl
mov
leave
cltd
loope
and
mov
push
pop
lcall
jbe
pop
out
xor
push
add
lret
inc
inc
lock
adc
mov
mov
add
neg
arpl
mov
sbbb
sub
xlat
cmp
add
jmp
xlat
out
scas
ret
call
ljmp
or
xchg
lods
xchg
pop
mov
xchg
pop
xor
jno
mov
sub
ljmp
xchg
aas
dec
jns
out
jecxz
gs
in
mov
sbb
loopne
xchg
fcompl
xor
mov
pushf
and
pop
pushf
call
pop
repz
scas
inc
lcall
aam
in
addl
pop
aaa
xchg
lret
pop
out
dec
pop
inc
stos
mov
imull
mov
insl
lea
mov
xchg
rorl
jno
push
sub
je
dec
mov
inc
iret
sbb
sub
pop
mov
ljmp
pushf
jbe
mov
add
aad
jnp
out
aas
pop
shr
test
std
pop
out
rcrl
out
cltd
insl
and
out
mov
in
mov
mov
cltd
and
sub
lds
push
push
mov
inc
aaa
loopne
lea
stc
add
out
rcrl
iret
mov
movsl
sbb
ss
jb
sti
pop
in
mov
ja
int3
enter
xchg
jnp
leave
adc
mov
out
add
sahf
js
pop
push
imul
inc
xchg
out
cs
fistps
in
ret
and
out
pop
loop
pop
je
dec
xor
fstpl
scas
test
test
stos
call
mov
ret
stos
insb
and
mov
aas
sbb
lahf
or
mov
push
dec
inc
icebp
xchg
imul
mov
rclb
aam
outsb
rcrl
les
dec
xor
test
jg
cmp
sub
cwtl
pop
rcrb
rcr
add
push
add
and
add
or
pop
dec
jnp
jns
js
sub
sub
push
cmp
mov
lods
pushf
push
imul
jnp
add
mov
lods
out
jne
gs
in
add
dec
ret
scas
ds
inc
push
test
pop
bound
aad
push
outsl
gs
xchg
and
inc
je
sbb
aad
rcl
int
pop
clc
loopne
insl
fwait
xchg
scas
jecxz
cs
sbb
jecxz
call
pop
lcall
jp
inc
sbb
or
data16
adc
lods
test
jl
aad
adc
imul
adc
std
popa
xchg
pop
sub
or
pop
pop
sub
inc
xchg
sbb
int3
jns
xor
cmp
dec
scas
jge
pop
cmp
xor
popf
in
and
mov
dec
xchg
out
mov
inc
mov
test
or
pop
and
jbe
pusha
in
or
leave
int
pop
cmpsb
mov
sub
sbb
bound
pop
add
inc
push
out
and
dec
pop
dec
mov
loopne
aad
xor
mov
xlat
test
movl
mov
xor
mov
cmc
std
jl
data16
adc
shlb
xchg
loop
xchg
lods
lcall
xchg
sbb
xchg
sbb
inc
pop
jp
mov
jnp
test
insb
aaa
or
test
hlt
inc
mov
data16
pop
imul
sbb
stos
rep
xor
push
movl
jle
mov
push
push
pop
push
xor
add
mov
rcr
add
rclb
es
lock
cli
or
fucom
push
out
and
dec
xchg
sub
enter
push
ficompl
sahf
pusha
subb
mov
jmp
jns
pop
dec
and
pop
lcall
jns
or
int
repnz
scas
clc
mov
rol
mov
fbld
fwait
push
cs
sub
out
sti
clc
jns
xchg
and
mov
fdivs
arpl
pop
sarb
xor
inc
cmp
test
ficoms
decl
jo
pop
outsb
repz
popa
popf
pop
rolb
ja
inc
test
sub
ret
mov
in
xchg
repz
lds
and
lret
mov
inc
xchg
adc
jmp
inc
frstor
lds
xor
push
xlat
inc
mov
movsl
insl
loop
mov
or
mov
orl
lds
cmc
les
jno
sub
ds
das
out
add
xor
or
icebp
imul
mov
lret
inc
dec
sbb
das
lods
xchg
jge
iret
imul
mov
ljmp
pop
mov
xchg
mov
or
mov
test
jno
in
adc
fidivs
jb
in
out
mull
movsb
pop
push
push
jbe
cli
cmc
lods
mov
xchg
xchg
imul
icebp
mov
cld
xlat
mov
ds
mov
lock
pop
cmp
adc
sub
adc
cmc
nop
jle
mov
dec
repnz
test
icebp
and
xchg
inc
cmp
jmp
mov
mov
mov
jo
nop
xchg
cmp
pusha
inc
and
adc
je
and
xchg
mov
aam
or
mov
hlt
jnp
addr16
jo
lods
movsb
int3
lds
mov
mov
clc
fadd
dec
xchg
push
andl
mov
aas
test
pop
cld
adc
inc
mov
xor
scas
pop
cmpsb
jne
gs
mov
lret
outsl
insb
rcrl
leave
xchg
push
jge
and
sub
mov
icebp
mov
mov
sub
call
push
test
loop
fmuls
xchg
xchg
dec
jbe
fdivrs
and
inc
sub
and
fcomp
mov
inc
ss
mov
mov
push
mov
add
sub
js
and
mov
mov
add
not
jle
and
and
or
shrb
xorb
call
and
popa
adc
cltd
pop
hlt
stos
jae
push
pop
mov
adc
sahf
ja
inc
movsb
test
pop
lret
cwtl
mov
push
pushf
push
push
sar
and
mov
sti
scas
std
push
movsb
cmp
ret
outsb
dec
dec
push
lcall
sub
pop
in
pop
rorb
sahf
sbb
pop
sub
scas
pop
bound
dec
fsubr
sub
mov
insb
jg
and
ret
push
and
xor
lcall
ja
pop
das
mov
ret
cmc
es
lods
inc
pop
icebp
mov
aam
cmc
loop
fistpll
xor
fistl
cmovg
xor
int
cli
mov
bound
sbb
inc
popa
out
popa
stc
arpl
xor
mov
cmpsl
inc
inc
aad
pop
jmp
lcall
and
cmp
icebp
dec
sahf
mov
movsb
shr
dec
mov
in
jge
nop
subl
and
mov
stos
std
jecxz
adc
fisttps
aad
lods
xchg
jo
jp
and
add
sarl
add
into
repz
inc
cwtl
outsb
lods
cmp
fcompl
jno
gs
ja
in
idivl
and
fnstenv
xchg
jbe
jo
inc
jbe
mov
mov
adc
xchg
pop
ficompl
je
imul
into
and
mov
sbb
mov
or
mov
int3
mov
enter
jb
push
pop
push
call
mov
inc
jae
int
xor
or
lock
fs
mov
cmpsb
inc
sti
dec
lea
mov
popa
aaa
test
lahf
adc
push
repnz
push
stos
rorw
ds
adc
push
nop
mov
fisttps
mov
push
sbb
test
add
xlat
mov
leave
out
aam
gs
push
in
and
mov
out
nop
mov
sarl
and
mov
sahf
lahf
xchg
sarb
addr16
jne
add
lahf
lret
xchg
mov
pop
mov
imul
repz
and
jmp
aas
movsb
bound
out
add
push
mov
jae
xchg
inc
or
ret
lret
fsts
ds
jb
add
pop
aam
push
mov
xor
mov
push
jbe
rorl
int3
mov
jo
and
or
lods
inc
mov
sub
sbb
clc
sbb
cli
cmp
add
jnp
test
subl
shr
cmpl
mov
sbb
push
ja
pop
dec
add
repnz
int
jge
orl
in
adc
gs
cmp
adc
push
sahf
inc
inc
push
or
jb
lea
shl
inc
mov
call
mov
test
mov
hlt
cmp
cmp
dec
aaa
iret
mov
push
push
sahf
mov
rcrl
cmova
inc
mov
es
jg
clc
test
pop
mov
leave
fadds
out
pusha
jp
subl
testl
cmp
sbb
mov
jno
cltd
outsb
stc
dec
rclb
js
sub
in
or
ss
jnp
mov
push
xlat
pop
nop
call
jmp
jae
lock
xchg
push
gs
cmp
sbb
lret
jl
inc
out
sbb
push
stos
cs
sub
fisttps
cmp
aam
flds
or
aaa
and
jp
xchg
xchg
pop
fnsave
cmp
pop
mov
test
cmpsl
jle
sub
pop
mov
cmp
daa
loopne
mov
xor
bound
imul
test
and
jmp
sbb
cwtl
into
movsl
inc
lahf
stos
jg
sbb
cli
cwtl
mov
lret
bound
fsubs
jge
imul
cmp
in
fmul
inc
xchg
test
in
jle
adc
adc
xchg
xchg
cmpsl
cmp
scas
jo
imul
xchg
mov
xor
stos
jmp
stos
cmp
jg
testl
ret
in
lret
fwait
pop
ds
jnp
xchg
sarb
mov
adc
jge
stc
sahf
add
enter
xor
adc
leave
mov
xchg
js
test
push
and
inc
and
hlt
lret
jle
cltd
dec
adc
ret
fsubr
in
xor
std
aas
data16
test
ret
xor
jno
dec
stos
popa
aaa
mov
popa
inc
cmc
iret
mov
fdivl
jo
scas
fcoml
adc
into
lea
and
sub
sbb
or
lahf
pop
sub
pop
pop
stc
cs
dec
adc
shll
dec
pusha
movsl
and
and
and
ficoml
inc
shll
cltd
jl
loopne
xor
xor
mov
popl
xor
push
stos
or
jns
mov
inc
xor
or
cmc
xchg
xchg
pusha
neg
shlb
xchg
ret
mov
ret
jno
add
aad
mov
test
xchg
int3
loop
lock
xchg
andb
pushf
jmp
inc
dec
unpcklps
cld
jns
outsl
or
ret
imul
movsl
mov
xchg
fucomip
xor
mov
rolb
aam
sbb
pop
mov
mov
gs
inc
push
negb
jp
dec
sarl
int
dec
jb
pop
cmp
scas
popa
inc
xor
std
icebp
in
jmp
inc
pop
mov
popa
stos
mov
jnp
sahf
mov
jle
in
ss
jmp
ss
mov
jle
loopne
loopne
and
sbb
into
rorl
adc
aaa
xchg
push
and
mov
jbe
lods
movsb
jle
push
sub
mov
sub
idiv
sarl
push
int3
mov
call
loop
xor
adc
pop
loope
push
sti
iret
hlt
jmp
sbb
mov
dec
dec
lods
mov
scas
push
fcoml
or
repnz
adc
ja
pop
cmc
pop
push
hlt
aas
and
sub
sub
xchg
iret
cld
ret
pop
or
in
push
stos
mov
mov
mov
push
call
push
mov
insb
xchg
inc
push
insl
iret
mov
and
mov
fsubr
push
mov
inc
add
dec
fs
enter
push
jb
adc
rcrb
test
and
push
bound
aas
adc
and
sub
cli
addl
add
sub
mov
xchg
pushl
push
cmpsb
cmp
inc
inc
mov
mov
repz
ja
mul
loop
outsl
xchg
cmc
xchg
adc
mov
xchg
jl
sub
adc
jecxz
int
sbb
int3
in
in
mov
idivb
out
push
das
cmp
push
xlat
int
mov
cmp
xor
mov
rcrl
mov
stc
fsubp
ds
mov
fisttps
mov
mov
fisubs
imul
inc
ja
mov
xchg
pop
mov
jecxz
xchg
sti
fdivl
mov
sti
inc
std
add
jo
lods
adc
icebp
lds
pop
jbe
and
dec
lret
sub
xchg
xchg
stos
enter
andl
jno
fnsave
jb
sub
fwait
push
and
dec
outsb
arpl
out
pushf
push
sub
xchg
add
je
jle
nop
mov
sbb
push
lahf
pop
sahf
jmp
packuswb
xchg
movsl
push
mov
cli
mov
and
adc
add
jle
insl
inc
std
inc
addr16
je
xchg
dec
loope
or
add
jmp
jb
pop
negb
inc
push
out
call
js
lret
sub
sbb
pop
mov
loop
negb
mov
or
push
dec
mov
aam
lret
mov
leave
inc
mov
sahf
mov
ss
xor
fisubrs
das
cmp
js
xor
sbb
fwait
insl
or
in
fwait
rcrl
push
scas
movsl
push
lret
add
lret
and
iret
adc
imul
and
sbb
xlat
mov
loope
xchg
insb
sbb
xchg
test
leave
pop
mov
push
out
adc
das
movsl
xor
mov
rcrb
lret
jno
pop
loopne
pop
in
fidivl
xchg
lret
jo
and
movsb
in
mov
fistpl
mov
add
das
adc
mov
or
je
insb
movsb
iret
mov
or
jb
add
mov
popa
fstpl
inc
sbb
ror
cmp
xchg
std
out
call
ss
jecxz
lret
cmp
ja
xor
xor
mov
rolb
out
and
cmpsl
xchg
xchg
adc
sbb
mov
cmp
pop
hlt
xor
or
mov
aaa
shl
add
jo
inc
inc
or
mov
das
jl,pt
outsb
dec
sub
insb
pusha
sbb
xlat
cmpsl
push
inc
popa
sub
mov
push
fwait
jne
arpl
xchg
mov
dec
xchg
xorl
xchg
mov
xchg
jp
inc
pop
adc
shrb
popf
dec
test
cmpsb
repz
xchg
adc
cmp
stos
pop
mov
add
fs
sahf
jne
insl
test
push
jp
test
ds
pop
inc
cld
aaa
outsb
and
push
push
cmp
xchg
ficompl
flds
xor
jbe
idivb
mov
insb
dec
lds
xchg
xchg
rorl
add
sti
fwait
sti
insl
adc
out
jp
leavew
ret
add
xchg
fiaddl
jbe
xor
shl
dec
rcl
loope
dec
es
sahf
mov
xor
enter
sarl
sbb
loop
jge
fnstsw
jge
adc
cmpsl
sbb
and
lds
lock
and
push
add
dec
pushf
mov
loopne
dec
mov
mov
fndisi(8087
sbb
xorb
add
mov
popf
or
jnp
in
inc
sub
mov
push
hlt
cmp
shrb
es
arpl
push
adc
and
fisttpl
idivl
mov
outsb
out
scas
jb
mov
int3
or
jecxz
jno
mov
lock
hlt
cld
sbb
push
ja
repnz
sbb
and
les
fistps
xor
add
add
mov
pop
rcrb
xchg
add
adc
fdivrs
push
inc
mov
fwait
jmp
and
out
mov
mov
hlt
fldcw
out
sbb
and
add
dec
mov
dec
es
add
data16
gs
mov
mov
pop
pop
pop
movsb
fsubs
add
or
cmp
mov
xor
shr
aam
or
sub
loopne
in
xor
lds
mov
jle
jmp
sbb
jmp
mov
push
mov
push
shll
mov
idivb
dec
push
cld
pop
out
or
mov
inc
xlat
mov
sub
inc
jb
sub
xorb
cmpxchg
aad
in
ret
repnz
dec
mov
imul
sub
and
lods
and
cmp
and
push
adcl
rcrl
loope
je
push
push
xchg
ss
sbb
sbb
push
xchg
dec
inc
mov
adc
mov
insb
cmp
mov
push
std
lret
cmp
dec
mov
mov
sub
es
shrl
sub
inc
jae
movsb
sub
adc
cmpsb
mov
add
sbb
lods
mov
lret
dec
or
sub
xor
add
mov
cmc
mov
out
arpl
into
push
push
scas
arpl
add
movsl
lcall
sbb
rol
sub
filds
xchg
xchg
and
mov
mov
clc
pop
mov
bound
test
sbb
adc
leave
js
ret
andl
call
jbe
orb
stos
dec
loope
pop
cmp
dec
push
adc
aaa
add
xchg
or
mov
nop
push
cmp
shlb
or
xchg
aam
fsubs
push
call
jne
adc
out
sub
cwtl
inc
fildll
xchg
loop
push
pop
lea
or
fidivl
sub
leave
ss
and
fcmovu
pop
push
test
lahf
cli
jmp
xchg
cli
aam
pop
mov
dec
sbb
dec
movsl
pop
and
mov
add
pushl
jno
mov
sbb
insl
int3
mov
mov
adc
in
nop
lcall
mov
cmp
inc
or
shll
out
sub
gs
popa
scas
js
jo
or
les
fsts
xlat
mov
xchg
adc
jecxz
daa
inc
cmp
fs
dec
xchg
bswap
insl
bound
jae
mov
out
pop
dec
repnz
xor
jbe
sbb
mov
adc
sbb
cmc
arpl
mov
push
pop
int3
xor
out
test
lahf
test
pop
loope
dec
push
cwtl
stos
in
sahf
xchg
cmp
ret
xchg
jae
and
dec
fwait
sbb
pop
inc
pop
xor
mov
adc
ja
out
ss
stos
jnp
les
xor
push
xchg
fsubs
cmpsl
mov
cmc
jp
lcall
xlat
and
popf
push
adc
out
push
sti
aaa
push
xor
push
call
jo
add
adc
xor
and
push
xchg
add
enter
jbe
scas
cmp
ds
neg
sub
in
mov
jmp
mov
sub
test
es
in
lret
cmp
cli
outsb
jl
scas
sub
insb
mov
test
lahf
pop
leave
dec
test
out
push
fisubrs
xchg
jmp
stos
inc
pop
inc
lea
popa
adc
rorl
mov
dec
fwait
dec
rorb
push
sub
psrld
xchg
gs
mov
js
lds
insl
aam
and
cmp
call
mov
cwtl
sub
sbb
test
mov
push
mov
aas
pop
inc
sub
mov
sbb
cli
leave
jo
xor
lcall
data16
xchg
cli
jge
mov
popa
sub
in
int
add
divl
mov
rolb
sarl
call
loop
xor
pop
and
and
jae
shlb
or
es
push
dec
cwtl
or
pop
mov
cmp
adc
push
dec
es
cmc
sub
stc
xchg
hlt
loop
mov
jg
dec
stc
mov
loop
inc
jo
jmp
ds
arpl
loop
inc
sbb
daa
xor
mov
push
cmpsb
xchg
ret
loope
dec
xor
inc
xor
xchg
mov
inc
xor
call
cmp
aas
int
and
lret
in
jecxz
shrb
sub
sbb
data16
out
out
add
ja
or
aad
pop
daa
fcoms
pop
jae
or
mov
mov
pop
mov
or
out
in
jae
mov
or
pop
mov
cmp
and
fstpt
jns
xchg
hlt
loop
mov
jg
dec
stc
mov
loop
xchg
mov
adc
ds
arpl
loop
mov
cmp
popa
adc
inc
sbb
mov
fsubrs
int3
fs
xor
shrl
imul
inc
dec
push
mov
daa
mov
pop
and
outsb
fbstp
jno
fwait
and
add
sub
stc
icebp
call
mov
inc
mov
in
jge
lods
mov
dec
mov
pop
dec
cmpsb
fldt
inc
sarb
xchg
xchg
in
jns
stos
test
daa
imul
pop
jo
popl
ret
les
sub
pop
xlat
mov
lods
aas
fists
fisubrl
lret
lcall
stc
cmp
lods
jnp
cmc
cmp
sub
sbb
sub
gs
pop
scas
and
cmp
outsb
imul
lods
mov
cmp
mov
sub
mov
dec
or
add
pop
dec
pusha
and
pop
ja
data16
adc
andb
movsl
in
mov
lcall
lock
cld
mov
ret
test
adc
xchg
add
pop
fdivr
in
mov
sbb
cli
adc
and
fwait
ret
mov
pop
movsl
cld
jmp
sbb
push
sub
sahf
inc
sbb
aad
cs
adc
mov
jle
mov
int
lea
mov
mov
xor
push
pop
or
mov
leave
cmpsl
lods
mov
adc
sarl
or
fsubrl
inc
imul
push
mov
insb
fstp
std
std
iret
jnp
loopne
and
mov
not
out
jo
subb
icebp
lods
cmpsl
lret
setbe
fimull
shlb
cmp
jmp
add
mov
lret
aas
jle
dec
mov
jle
in
mov
cs
test
adc
adc
push
clc
data16
scas
ja
xorb
or
pushf
dec
push
mov
xchg
jne
and
cmpsb
lea
shll
and
scas
xchg
jle
pop
pop
add
int
xchg
and
out
push
cmp
loope
mov
jmp
jmp
rorl
push
bnd
add
xor
insl
out
movsb
mov
xor
sbb
fwait
aad
xor
popa
pop
cltd
out
cmp
pop
mov
push
xor
inc
fcmovnu
mov
lret
fidivrs
xchg
lods
xor
pop
in
xchg
movsb
aaa
aam
xchg
loop
loopne
mov
cmp
push
mov
mul
cvtps2pi
cmpsl
jle
loop
cmp
mov
push
scas
sub
loope
fbstp
dec
outsl
dec
sbb
cmp
push
and
jne
loope
dec
lock
dec
pop
pop
jecxz
inc
ficompl
int
sub
inc
mov
cmp
int
ja
adc
cli
jmp
add
sbb
rol
and
dec
adc
mov
sub
cltd
mov
mov
jecxz
add
jg
push
mov
popa
dec
movsl
lret
stc
or
ret
fdivrl
or
jno
lods
sub
cltd
cmpsl
push
jp
mov
lock
and
mov
jecxz
lock
popa
aas
adc
sbb
sbb
push
incb
mov
std
add
or
stc
push
adcl
jg
add
sarb
and
push
jmp
and
outsb
sub
cmp
adc
xor
es
jae
roll
sti
add
insb
sub
xchg
inc
jnp
xor
testl
push
xor
inc
cmp
push
or
adcl
lret
push
fcoms
imulb
pusha
inc
push
mul
fwait
out
daa
inc
sbb
fisubrs
aam
addr16
lahf
jg
out
stc
jae
ret
dec
aas
jle
jae
cld
jle
push
xchg
mov
xor
pop
mov
enter
add
cmpb
adc
insb
shrl
data16
les
dec
xchg
repnz
shrb
pop
cmp
pop
lock
scas
into
ds
loop
add
lahf
jns
loope
es
lret
or
mov
jle
fucomip
and
outsl
sub
xchg
jbe
add
pop
cmp
push
sbb
jmp
stos
mov
and
dec
push
cmpsb
sbb
enter
mov
dec
xchg
mov
fiadds
out
cmpsb
sbb
adcl
rcr
out
addr16
repz
lret
jne
push
push
or
jecxz
mov
cmpsb
mov
outsl
dec
mov
push
pushf
call
dec
xchg
das
fnstcw
jbe
push
and
pusha
and
dec
or
add
aaa
pop
cwtl
add
stos
pop
mov
rorb
mov
mov
cltd
jle
or
adc
jmp
push
cmp
cmp
push
fisttpl
sbb
lret
jno
lret
or
sub
clc
push
sbb
push
es
xor
lods
nop
inc
dec
sub
add
iret
adc
mov
add
incb
mov
jmp
xchg
dec
fstl
aam
jg
fmull
sub
in
pushf
xchg
in
popf
arpl
daa
ds
or
fldl2e
leave
sti
xchg
outsl
sbb
inc
cli
push
push
push
mov
ss
andb
jecxz
loopne
mov
aas
out
pop
inc
js
das
xchg
pusha
sbb
ljmp
icebp
sub
enter
mov
addb
les
sub
and
mov
cltd
mov
xchg
xor
rcrb
inc
push
jmp
test
mov
fistps
pop
dec
bound
sti
mov
dec
push
adc
adcl
inc
add
pop
push
jle
mov
push
lds
sbb
ss
mov
push
cpuid
pop
xchg
cwtl
mov
pushf
cmpb
mov
int3
xchg
inc
loopne
aas
xchg
test
jmp
aas
clc
mov
lods
push
data16
mov
sub
imull
mov
loop
ficoms
sti
out
cwtl
iret
jb
push
push
xor
sbb
add
push
jge
dec
test
pop
xor
into
mov
ficoml
inc
shrb
cmpsb
in
cmc
shll
icebp
inc
bound
cltd
lea
aas
vpmaxub
repnz
sub
add
js
mov
sub
fidivrl
lods
lds
mov
movsb
adc
es
or
cmc
pop
mov
int
in
loopne
push
insb
jne
or
xor
pop
fsubl
stos
out
xor
jb
incb
add
lcall
fisubl
loopne
mov
das
mov
dec
xchg
inc
std
jle
fsubl
jb
shr
js
add
sbb
push
movsl
jl
pop
sbbl
dec
mov
nop
mov
in
xor
push
xor
cli
mov
pop
pop
mov
cmp
movsb
popf
dec
orb
into
mov
jae
cmpsb
fsubrl
push
sub
xor
xchg
push
cmp
das
int
fiadds
xorb
add
cmp
std
add
gs
cli
jnp
popa
and
fidivs
mov
aas
cmc
lock
jle
pop
xchg
pop
in
and
cli
cmp
lahf
cmpsl
dec
ret
pop
xlat
cmpsb
mov
jnp
or
add
lret
fldl
aas
xchg
pop
fninit
lret
mov
ret
pop
lret
pop
stc
movnti
iret
movsb
cmpl
lea
mov
movsl
je
je
imul
and
and
in
out
mov
aaa
int3
adc
test
rcrb
bound
mov
pop
in
cmp
or
in
cmp
add
xchg
femms
call
xor
inc
icebp
pushl
arpl
in
stc
repz
movsl
test
sbb
int
mov
add
sbb
loopne
pop
mov
addr16
sub
jae
cld
rcrl
cs
stos
in
push
sbb
fistps
pop
or
adc
into
loopne
insb
outsl
lods
inc
loope
jb
adc
popa
loop
mov
cwtl
mov
push
movsb
sbb
popa
inc
fwait
or
inc
sub
or
or
mov
jge
jg
and
stos
inc
into
mov
jnp
or
clc
scas
je
mov
mov
stc
popa
pop
cwtl
jne,pt
neg
adc
adc
repz
movsb
notl
fdiv
add
sar
cld
cmc
xor
ret
les
dec
push
xchg
ja
sub
push
lock
out
inc
aaa
stos
cmc
cld
xchg
imul
adc
loopne
in
cmp
mov
fcomps
dec
push
insb
scas
fstl
in
jp
incl
adc
dec
cmpsb
mov
das
xchg
mov
mov
fildl
cmp
loop
mov
enter
mov
pop
rolb
and
andl
test
push
int
sbb
movzbl
rcrb
mov
push
out
push
cwtd
js
movsb
sbb
mov
pop
inc
out
xor
cld
test
aas
pop
dec
dec
push
sbb
push
inc
pop
pop
jb
insb
lret
aaa
jae
push
je
sub
sbb
mov
jl
dec
fcoml
aaa
daa
xchg
and
mov
data16
dec
jb
lahf
ss
fists
das
cmp
iret
mov
push
imul
out
jno
es
push
aaa
dec
mov
lcall
mov
imul
repz
popa
push
cld
sarl
mov
lock
and
and
in
popa
cmc
gs
les
fildll
dec
ljmp
std
repz
mov
push
pop
lods
mov
mov
fwait
in
jns
or
mov
sbb
jg
fwait
incb
jb
push
xor
sarl
sbb
mov
pop
pop
pop
jp
inc
xchg
jbe
pop
faddp
fisubrl
repz
lret
inc
shlb
dec
je
sbb
or
in
lods
and
cmpb
and
pop
sar
xor
jae
fidivs
lds
ljmp
mov
in
mov
shll
pop
jne
cmp
pop
pop
push
fldt
xchg
inc
ret
lret
insb
fucomp
sub
push
int
xchg
push
lret
cmp
and
or
testl
lret
call
mov
and
rcrb
and
mov
out
mov
adc
add
jl
out
shl
mov
popf
outsl
jae
add
dec
sbb
mov
sbb
mov
sbb
cli
into
xchg
sbb
outsb
fs
xchg
sub
push
outsl
add
lods
loopne
jo
mov
test
js
adc
dec
mov
mov
jnp
or
jmp
dec
cli
mov
pop
lods
dec
loop
push
or
inc
dec
xor
movsl
sti
sbb
leave
xchg
cmc
mov
inc
iret
sbb
sbbb
sub
punpckhwd
xorb
loope
jno
imul
movsb
xchg
mov
xor
daa
pop
push
pop
adc
dec
psubd
mov
sbb
jb
inc
fiadds
sti
mov
adc
push
rclb
shr
or
cmp
and
add
sbbb
mov
mov
sub
movb
adc
adc
inc
xor
add
inc
mov
imul
push
icebp
jo
stos
stos
cmp
jmp
adc
dec
add
lock
imul
in
and
sti
fsts
mov
dec
cs
out
xchg
mov
pop
js
stos
mov
xlat
jb
dec
ja
and
test
rcrl
dec
daa
lcall
and
out
adc
jecxz
ficomps
mov
or
je
sub
sub
push
leave
sub
in
pop
adc
enter
popa
fldcw
mov
inc
idivb
lret
xchg
shr
mov
inc
loop
pop
nop
xchg
inc
shrb
lods
out
cmp
shlb
pop
dec
sub
outsb
lcall
mov
jae
or
data16
aaa
daa
mov
sti
cs
push
in
loop
stos
lea
xor
jg
shrb
sbb
scas
mov
mov
sub
das
clc
insl
sub
inc
sbb
in
sub
rcrl
lods
add
ljmp
and
test
lret
je
ljmp
jecxz
jl
inc
dec
xchg
jne
aaa
movsb
mov
push
add
in
push
js
fidivrs
shl
mov
outsb
int
scas
or
clc
push
add
std
les
push
pop
inc
mov
add
jl
push
mov
and
aaa
out
pop
mov
mov
mov
cli
pushf
cs
ror
sub
dec
pop
out
push
leave
loop
jmp
sahf
inc
inc
sbb
ror
cli
imul
add
mov
or
mov
jl
int
test
cwtl
mov
push
jb
push
or
in
ja
push
pop
dec
movsb
add
shll
jl
lret
adc
mov
ss
scas
jo
in
inc
leave
sub
stos
insl
push
xchg
test
scas
rorb
mov
jo
sbb
xchg
in
mov
ss
testl
test
sub
mov
out
add
call
xchg
jae
scas
test
mov
and
mov
int
out
arpl
pop
pusha
stos
pushf
data16
sub
and
pop
pop
xchg
rorb
stc
mov
fstl
cmpsb
test
cmc
lods
jb
push
aam
out
test
dec
xchg
lods
push
push
data16
leave
pop
stos
movsb
xchg
and
insl
fs
add
popa
pop
push
and
std
imul
jne
lock
push
sub
icebp
out
jnp
sbb
ljmp
mov
bound
ds
xor
xor
sbb
mov
or
mov
cs
lds
ljmp
cwtl
ja
loope
gs
xchg
pop
dec
xor
decb
sahf
fld1
jb
dec
faddl
ret
dec
push
out
mov
loop
lahf
lret
inc
cmp
xor
movsb
icebp
jmp
jp
sbb
out
fisubrl
lods
or
xchg
mov
cmp
lods
gs
xchg
adc
mov
stos
dec
aad
jge
out
jo
movsb
popa
test
push
jp
in
mov
lret
sbb
push
xchg
dec
push
lret
pop
movsl
lock
inc
dec
das
add
inc
push
cwtl
xchg
mov
je
push
test
and
mov
push
adc
shr
mov
int3
xor
jae
or
jl
lret
mov
fld
mov
cmp
aas
testl
and
scas
push
aas
lahf
scas
cmp
pop
ss
or
incl
cmp
inc
int3
sbb
lds
dec
loope
fstpt
pop
test
mov
test
leave
lock
dec
pop
or
sub
cltd
xchg
add
or
loopne
orl
lret
es
insb
mov
push
imul
and
nop
mov
out
xor
out
and
cmp
mov
out
shll
movsl
xchg
jnp
add
hlt
dec
pop
stos
fistps
xor
jp
hlt
xlat
mov
movsl
roll
cwtl
loopne
iret
pop
out
jns
sub
stc
fildll
int
xchg
cmpsb
daa
imul
mov
scas
aaa
pop
push
sbb
ljmp
shlb
rcll
inc
mov
mov
or
cmp
push
push
and
dec
jmp
imul
repz
pop
ds
call
xor
rolb
faddl
push
push
fisttpl
rcrb
mov
dec
mov
movsl
lock
xchg
in
push
jl
bound
xchg
das
mov
shl
scas
clc
dec
push
or
adc
mov
push
ss
jmp
in
lods
ret
jecxz
sti
jge
icebp
jl
rcll
mov
jge
stc
push
jb
push
roll
mov
push
test
arpl
stos
sbb
inc
test
lahf
cs
fdivl
xchg
pusha
and
sub
push
pop
mov
xchg
stos
mov
inc
fsubs
outsl
lods
in
adc
or
lcall
leave
ds
mov
icebp
sub
cld
push
mov
or
negl
dec
fmuls
call
mov
xchg
lahf
js
aas
mov
in
add
sbb
xchg
mov
jae
call
sti
pop
imul
adc
xchg
jo
out
push
jno
xor
xchg
cs
adc
lea
jp
mov
int
inc
out
or
popa
stos
xchg
mov
mov
jno
insl
notl
jne
push
mov
add
lds
mov
jno
js
xlat
xchg
rcrb
rcr
shrb
mov
xchg
in
pop
jge
push
mov
mov
lret
xlat
imul
dec
xchg
push
pop
add
stc
cmp
dec
jecxz
es
stos
sub
ljmp
insl
mov
mov
xchg
jle
push
cwtl
enter
out
aas
pop
shr
outsb
lds
sbb
dec
aad
add
hlt
mov
sub
sub
inc
adc
sahf
cltd
nop
enter
repnz
mov
hlt
lcall
sub
dec
out
xchg
mov
pushl
mov
scas
cmp
pop
sbbl
int
mov
test
scas
push
sub
dec
push
aas
dec
insl
mov
pop
lds
and
pop
adc
cmp
fsubrp
cmpsb
jmp
nop
add
lods
cmp
xchg
sbb
mov
ja
xchg
dec
aad
mov
icebp
push
les
push
adc
sarl
data16
in
es
xchg
dec
nop
les
arpl
or
sahf
lods
xor
insb
repnz
subl
mov
fistl
dec
arpl
xchg
shlb
or
sbb
xchg
int3
jo
push
mov
push
call
bound
mov
push
pop
cli
cmpsl
aaa
mov
test
push
inc
mov
xchg
mov
out
mov
add
pop
sub
mov
rcrb
inc
add
arpl
mov
int3
leave
lret
push
loop
into
and
xchg
aam
sub
pushw
cmp
pop
sub
test
enter
andb
mov
dec
fcmovbe
add
mov
jl
mov
sbb
das
cmp
push
or
dec
scas
notb
mov
dec
fistpll
cmp
xchg
inc
dec
dec
addr16
adc
or
loope
shrl
dec
mov
lods
push
outsb
adc
mov
sbb
lock
jmp
mov
add
scas
or
xchg
lods
aam
push
sbb
mov
fiadds
in
add
testb
push
xchg
dec
mov
rcrb
and
test
sbb
dec
xchg
test
dec
jb
call
and
jbe
outsl
lcall
fiaddl
lock
movsl
mov
aad
pop
and
into
mov
call
jae
sti
out
mov
xchg
mov
pop
adc
hlt
arpl
xlat
nop
xchg
push
push
inc
js
sub
es
mov
lock
pop
xchg
in
cmp
out
add
cmpsb
inc
lahf
and
aas
and
inc
scas
inc
iret
bound
test
push
pop
lret
jo
pop
cmp
sti
sbb
shll
dec
in
and
xchg
and
stos
stc
aaa
push
jbe
adc
cmp
cmpsb
out
sbb
or
aam
push
pop
out
xchg
clc
or
push
mov
push
daa
push
adc
jmp
adc
out
cmp
push
inc
sub
adc
and
mov
enter
ret
das
cwtl
push
push
mov
pop
cmc
scas
loopne
cmp
hlt
insb
stos
push
pop
xor
push
xor
aam
loope
pop
push
mov
in
and
and
xor
jl
xchg
cli
mov
cltd
pop
ficoml
xorb
daa
push
jmp
dec
push
jb
xor
sub
mov
jmp
push
stos
and
movsl
icebp
cltd
lds
mov
iret
es
push
adc
dec
jecxz
cltd
jge
push
mov
pop
cmp
fbld
out
insb
push
arpl
repz
fxch
mov
mov
mov
xchg
pop
dec
out
push
dec
dec
movsb
and
loop
pop
cli
and
adc
lods
and
dec
and
stos
addl
in
sub
hlt
imul
add
xchg
cld
clc
inc
push
daa
repnz
loop
pop
sub
arpl
xlat
add
shlb
dec
ljmp
call
xor
dec
push
test
fdiv
popa
cmp
loop
fistpll
jmp
jns
xchg
add
or
jmp
das
movsb
mov
push
add
mov
xchg
dec
mov
rcrl
test
and
sub
repz
ds
fstpt
ret
pop
data16
add
xchg
in
in
jecxz
jg
jo
cmp
push
or
call
or
sbb
cmp
popf
jecxz
je
push
push
stos
jecxz
sbb
stos
jmp
int3
inc
scas
sbb
inc
cld
loop
in
movsb
mov
fiaddl
and
subb
xchg
inc
mov
and
xchg
es
scas
pop
sbb
add
arpl
adc
push
orb
mov
fsubr
andb
cmp
dec
test
jg
or
push
loope
sub
xchg
and
jg
mov
out
ficoms
lcall
dec
push
scas
stc
mov
sub
pop
push
inc
inc
addl
std
aas
and
push
dec
mov
xchg
jp
xchg
push
daa
mov
ret
rorl
in
xchg
and
jge
mov
inc
add
xchg
outsb
inc
or
leave
cmpsb
fildl
jle
out
pop
jmp
or
pushf
testb
xor
mov
out
divl
in
loop
jb
mov
jb
dec
out
dec
mov
enter
lcall
pop
dec
and
cmp
xor
call
and
and
arpl
pushf
mov
sbb
leave
add
inc
loopne
lcall
push
push
inc
mov
pusha
pushf
push
lret
jbe
inc
fcompl
les
imulb
add
adc
push
cwtl
das
iret
mov
in
xacquire
mov
loop
lea
mov
mov
jp
imul
mov
pop
out
add
mov
es
cmpsl
movsl
lea
sbb
gs
cwtl
lcall
cs
bound
out
loop
xchg
iret
test
in
div
sub
pop
jp
cs
loop
pop
lret
std
inc
pop
cltd
lea
mov
cld
repz
inc
push
aaa
fldenv
stos
fists
leave
test
sti
jns
sub
push
into
js
xchg
mov
bound
cmp
and
add
mov
aaa
jecxz
sbb
cmp
sub
je
fs
dec
sub
jb
cwtl
push
mov
and
stos
sahf
rolb
cmp
repz
jno
mov
or
stc
or
mov
inc
daa
clc
jecxz
pusha
cmp
xchg
stc
sbb
add
testb
repz
out
pop
cmp
fisubrl
nop
jns
int
in
lods
mov
jmp
xor
jge
fidivs
pop
mov
jnp
insl
sub
or
bsr
mov
rcr
inc
imul
nop
sbb
jg
inc
ljmp
sbb
mov
clc
sub
jno
xchg
aaa
fwait
mov
cmpsb
cltd
dec
and
leave
or
push
dec
xor
bound
jo,pn
je
scas
test
aam
test
das
push
addr16
fsub
mov
mov
fistpl
icebp
or
xor
jbe
ret
xor
push
sbb
into
sub
call
mov
dec
xor
aad
dec
xchg
lock
cmp
mov
jg
out
mov
push
aas
test
cmp
stos
mov
push
js
or
sbb
jecxz
insl
addr16
insb
mov
jbe
xchg
sbb
movsb
imul
lcall
call
and
mov
mov
test
movq
lods
dec
inc
xor
sub
inc
lds
sub
xor
sub
sub
int
jno
sahf
scas
xor
xor
xchg
movsbl
jl
dec
or
push
xchg
movsb
test
push
add
dec
rclb
dec
and
dec
testb
add
pop
pop
push
outsl
cli
pop
or
xchg
jne
xlat
jecxz
adc
dec
dec
imul
jae
lret
or
mov
dec
inc
repnz
fdivrs
hlt
out
lds
jmp
jmp
mov
test
sub
std
in
arpl
xchg
pop
xchg
mov
cmpsb
insb
sub
insb
add
popf
xorb
mov
lock
pushf
jno
xor
sbb
xlat
mov
ja
lods
sub
cmp
push
dec
ss
sub
mov
nop
shl
add
push
sbb
call
inc
sbbb
hlt
sub
sub
in
arpl
add
mov
and
mov
push
lods
xchg
in
push
sbb
mov
pop
add
or
jns
cmp
and
imul
popf
cli
add
lock
stos
inc
lret
fxch
xor
loopne
push
loop
and
mov
cmp
jne
mov
mov
sbb
fs
lock
sbb
test
cmp
ret
movsl
push
out
aas
ret
cmc
sbb
fidivs
jle
dec
or
or
loop
mov
jne
cmp
push
push
cmp
cmc
pop
cwtl
mov
jne
setg
xchg
cs
js
stc
sub
add
mov
mov
and
adcl
mov
xor
mov
or
dec
push
es
shll
xor
scas
pop
cmp
cs
rclb
loop
cmp
mov
es
pop
arpl
stos
ror
sub
xchg
shrb
add
xorl
int
mov
test
shlb
add
xor
adc
cltd
sub
insb
xor
int3
adc
cmp
cwtl
add
daa
aad
xchg
add
and
xor
mov
bound
pop
jl
fwait
push
sub
push
mov
adc
sub
out
mov
jb
adc
aas
jae
add
out
add
pop
mov
sbb
push
fcoml
andl
cwtl
shr
sub
js
loopne
cld
lcall
scas
inc
adc
mov
mov
pop
mov
xor
dec
pop
mov
sub
mov
lahf
push
test
bound
mov
gs
lea
fildl
dec
mov
scas
call
pusha
inc
mov
mov
addl
sub
xor
lret
cs
sub
ja
das
daa
push
cmp
push
or
sub
pop
insl
pop
movb
sub
aad
jmp
xor
outsb
sbb
xor
fistps
addr16
in
xor
mov
sbbl
shrb
out
cmc
dec
test
xchg
xchg
std
mov
fs
jl
push
push
subl
xor
cwtl
fldl
pop
cmp
std
push
jp
lods
sbb
mov
cmp
or
xchg
jae
adc
push
cmp
mov
int3
pop
das
add
addr16
cltd
add
pusha
das
push
adc
mov
push
pop
outsl
push
cwtl
mov
lea
and
and
mov
mov
sbb
sub
or
cmpsb
push
out
push
fildl
inc
shll
and
jae
daa
fmull
popa
shrb
mov
loop
fcomps
mov
and
push
xor
dec
jbe
or
mov
fcomps
pop
fdivp
pop
lods
movsl
fs
mov
ss
test
clc
out
test
xor
addb
in
into
sub
mov
punpckhwd
enter
sbb
pop
jo
popa
mov
int
add
add
jecxz
mov
fistl
jmp
pop
in
jae
mov
mov
inc
mov
cli
sbb
jne
cmp
jnp
in
rcl
and
adc
mov
mov
cmpsl
or
pop
mov
repnz
movsb
repz
sbb
or
mov
cmp
jecxz
jnp
sub
fsubrl
and
fdiv
and
shr
or
or
shrl
pop
mov
inc
jmp
mov
push
cli
inc
in
cmp
inc
sbb
stos
test
jge
mov
inc
cwtl
xor
cltd
or
adc
ja
out
jle
or
add
je
mov
xor
and
adc
adc
adc
inc
and
testb
or
arpl
pshufw
pop
lret
mov
push
mov
pop
bound
scas
sbb
leave
lcall
cmpsb
or
dec
push
shll
nop
pusha
cmp
jle
pop
or
lret
cmc
mov
test
out
mov
push
orl
enter
stos
stc
ret
mov
adc
mov
incl
je
enter
jg
sbb
mov
in
xchg
push
pop
adc
push
mov
fsubs
sub
pop
cmp
mov
adc
push
into
or
cmp
push
or
sub
test
lret
push
lea
sbbl
mov
push
gs
loope
lret
cli
inc
sbb
adc
enter
outsl
cs
cs
and
mulb
hlt
and
jmp
cwtl
shlb
imul
arpl
in
adc
fsubrl
and
dec
pop
lahf
jo
sbb
cmpsl
or
pop
and
xchg
jnp
mov
stos
icebp
inc
or
jl
pop
inc
std
mov
lea
push
dec
in
bound
inc
add
lea
pushf
lret
adc
test
repnz
cmp
dec
xchg
sarl
xor
push
or
fists
stos
xchg
enter
in
loope
cmc
jnp
popf
cmp
pusha
or
adc
call
ds
sub
frstor
xchg
mov
push
daa
add
enter
push
ds
or
xor
push
xor
or
jmp
sbb
push
xchg
out
sbb
dec
int3
aam
imul
ss
int
pop
mov
ret
movsl
cmp
push
dec
xchg
mov
outsb
lods
clc
pop
push
inc
xchg
xchg
rolb
pop
test
lea
mov
xchg
insl
cs
ficoms
dec
imul
push
int3
pop
scas
ja
mov
inc
data16
dec
adc
mov
inc
dec
ja
jmp
cmp
sbb
pop
push
pop
mov
or
pop
add
pusha
clc
shlb
and
and
test
loop
mov
lds
sbb
cli
shlb
xchg
lcall
shlb
out
lock
nop
sub
cmp
dec
xor
and
popa
pop
faddp
sbb
out
ljmp
push
cmovbe
xor
and
lret
add
rcrb
xor
je
cmpsl
jp
andb
inc
nop
fimuls
movsb
lret
or
add
testb
cmpsl
gs
adc
adc
add
inc
and
aaa
mov
mulb
or
mov
fwait
mov
xorl
int
rorl
push
in
cmp
aaa
add
xor
mov
shlb
in
mov
mov
lret
fiadds
loopne
out
push
arpl
mov
mov
divps
jecxz
xchg
push
int3
xor
aam
xor
cmp
mov
fwait
je
push
mov
and
das
loop
dec
dec
insl
fsubrl
arpl
ljmp
loopne
jp
jmp
nop
mov
rcll
and
push
push
movsl
imul
pop
mov
data16
std
pop
pop
pop
mov
mov
movsl
jg
pop
push
test
mov
test
mov
insb
jge
pop
mov
es
mov
das
loope
inc
jno
or
and
adc
test
shr
es
test
jecxz
mov
cmp
dec
mov
or
aaa
cltd
testb
sub
jno
idivl
mov
bound
jae
sbb
mov
mov
cmp
sbb
mov
and
loope
decb
lcall
dec
mov
incb
stos
dec
cmp
shrb
in
je
js
outsb
xor
mov
es
jl
ds
sti
sar
adc
xchg
cmp
pop
and
jne
xor
xchg
pop
scas
jns
pop
repz
sub
cld
cwtl
ret
mov
lret
mov
and
and
cltd
xchg
lar
inc
pop
mov
mov
mov
adc
jbe
xlat
push
xchg
mov
lahf
jle
inc
insb
in
sub
das
mov
ljmp
xchg
sbb
xor
lods
xchg
cmpsl
and
adc
jbe
xlat
push
push
add
sub
nop
xlat
push
mov
test
jb
xor
jmp
and
in
cmp
jmp
clc
lret
pop
mov
jl
fisubs
push
pop
test
jb
pop
and
inc
ds
cmpsb
out
pop
mov
jge
cli
pop
loope
mov
sbb
iret
mov
test
jnp
es
lock
mov
bound
mov
call
xchg
dec
xchg
stos
jg
add
mov
test
sbb
dec
clc
jno
jmp
addr16
rol
movsb
shlb
pop
inc
call
adc
pop
int3
repz
arpl
loopne
xor
cmp
cli
mov
fnsave
mov
mov
fs
push
mov
ja
mov
or
sub
repnz
and
pop
mov
mov
or
dec
mov
mov
adc
aam
sub
add
outsl
jae
push
pop
inc
cmc
ret
sbb
mov
movsl
aaa
lods
popl
fdivrl
int3
aam
imul
lahf
out
xchg
jle
repnz
shr
dec
sub
push
mov
aam
hlt
xor
out
adc
int3
push
jge
dec
jecxz
lret
test
xchg
push
add
xor
xchg
sbb
daa
stos
mov
idivb
out
add
pop
xchg
pushf
enter
push
or
imul
jne
fisubl
int3
sub
jnp
dec
packuswb
outsb
inc
push
test
scas
pusha
jge
push
dec
test
cmc
or
push
out
inc
insl
shlb
xchg
nop
cmp
lea
dec
addr16
int
ret
push
jge
mov
icebp
clc
mov
cmc
js
inc
ss
dec
mov
imul
enter
and
xor
cmp
add
sbb
fwait
push
jmp
pusha
xchg
rclb
adc
add
dec
decl
push
cmpsl
cli
push
push
fwait
aam
loope
push
lret
jne
and
jl
ljmp
jo
fistl
mov
add
dec
sub
mov
popf
jmp
loop
mov
insl
cs
or
aad
popl
aad
mov
dec
rcrb
add
add
xchg
pop
mov
cwtl
mov
or
inc
inc
xor
mov
sub
sub
stos
movsl
out
adcl
push
xchg
insb
loop
lret
in
mov
sub
sbb
repz
shlb
es
pop
cwtl
mov
or
imul
inc
and
inc
pop
fstl
js
dec
popf
shlb
inc
mov
add
inc
mov
sbb
pop
cmpsl
sti
mov
ljmp
out
arpl
mov
aad
mov
dec
nop
sbb
jecxz
pop
cmp
jno
out
jnp
sbb
push
fdivr
sbb
clc
pusha
sahf
push
imul
push
out
and
xor
mov
rorl
jnp
adc
aas
mov
sti
popa
aam
adc
mov
push
cs
cmpsl
rorb
add
fimuls
shlb
jl
aaa
scas
addb
sarb
xchg
mov
es
andl
sarl
neg
mov
call
pop
divl
mov
rcl
cltd
rolb
aaa
cs
pushl
or
sahf
fnstcw
das
xlat
aaa
sbb
ja
fimull
hlt
fildl
dec
lcall
or
pusha
pushf
cmpsl
mov
movsb
mov
mov
imul
xchg
insb
fwait
lock
vpperm
xchg
test
mov
pop
pop
mov
fldl
test
push
mov
shlb
fwait
jle
xor
call
xor
shrb
xchg
adc
mov
mov
jno
dec
xchg
or
adc
dec
pop
or
scas
and
jbe
daa
mov
xchg
push
in
test
loopne
icebp
dec
add
push
add
jns
cmp
mov
dec
sbb
xchg
push
imul
jne
xor
mov
pop
ret
add
mov
addr16
sub
cmc
div
mov
imul
rcr
hlt
js
xlat
xchg
mov
scas
cltd
lret
lods
les
mov
dec
out
pop
movsb
inc
mov
mov
push
fsubrs
push
cmp
pop
js
test
cmp
add
push
lcall
xchg
mov
test
jg
lods
arpl
lods
inc
and
stc
jo
xchg
sub
push
mov
mov
mov
shlb
pop
pop
aas
popf
insb
add
mov
mov
inc
negb
add
xchg
movsl
sahf
or
add
mov
sbb
adc
cmp
cmpsb
pop
pop
in
pusha
scas
cmp
sub
fstpt
ret
pop
data16
jg
jns
clc
incl
push
pushf
std
xor
cmp
pop
push
push
cltd
sub
pusha
or
sahf
hlt
cmp
sbb
pop
ds
add
add
jp
mov
jnp
sbb
jl
data16
or
mov
pop
lds
rcrb
add
sub
clc
cmp
or
inc
add
imul
stos
pop
mov
sub
ss
cmp
imul
mov
sar
into
out
mov
rcrb
lahf
shlb
inc
fbld
popf
mov
push
sarl
or
inc
lcall
sbb
push
pop
dec
jmp
dec
jo
fwait
or
sub
insb
xchg
add
push
addl
rcrb
adc
dec
xor
ret
and
pop
sub
xchg
cmp
dec
sbb
mov
out
jno
or
add
and
shrl
ret
add
subb
inc
push
xchg
das
pop
fidivs
mov
jno
shlb
and
xchg
int
and
jbe
cmp
jnp
cli
lcall
into
push
imul
sbb
enter
test
sahf
fimull
push
sbb
push
adc
das
imul
cmpsl
fmul
clc
test
jp
jo
dec
fdivrs
inc
pop
sar
and
pop
leave
mov
mov
mov
jle
inc
sub
aad
jmp
xchg
adc
jge
push
hlt
mov
insl
int
testl
xor
xor
jns
nop
es
pop
mov
data16
and
iret
popa
xor
popf
jmp
ja
or
data16
sbb
pop
mov
xor
dec
mov
stos
xor
fcom
fwait
sbb
jle
push
add
out
cmpsb
push
int3
rcrb
jae
inc
popa
add
in
or
push
pushf
mov
sub
mov
sub
movsb
add
push
call
ss
pop
pop
jo
popa
arpl
mov
es
mov
sub
gs
daa
call
or
int
clc
xchg
movsb
sub
and
pop
icebp
push
cs
and
xchg
sbb
mov
pop
sub
pop
repz
adc
or
cwtl
into
sbb
lods
cwtl
jle
cld
dec
inc
add
shlb
pop
sbb
negl
scas
mov
dec
loop
dec
jno
dec
jp
insb
test
mov
es
repz
mov
cmpl
inc
jl
hlt
jno
jns
dec
xor
rcll
push
push
mov
xor
sbb
pop
push
roll
inc
mov
clc
sti
push
and
fiaddl
idivb
push
dec
push
fdiv
int
cmp
or
xchg
icebp
and
mov
stc
pusha
pop
xchg
inc
test
outsb
repnz
out
int3
pop
cli
outsb
icebp
mov
push
lock
scas
enter
cmc
idivb
jle
ficoms
jmp
pop
stc
pop
and
mov
rcr
pop
movsl
sti
iret
movsl
xorl
jmp
xchg
pop
jnp
sbb
std
stos
jmp
push
sub
jmp
inc
test
pop
mov
or
out
xor
imul
jmp
adc
mov
dec
loope
push
mov
fwait
iret
clc
sbb
xchg
adcl
cmpsl
or
pop
cmp
imul
into
xlat
xor
jl
push
inc
or
mov
adc
jle
es
pop
mov
and
push
mov
out
add
adc
lock
push
dec
loope
mov
decl
inc
sub
ss
call
out
decl
shlb
outsl
dec
js
mov
sub
cmpsb
pushf
xchg
fsubrp
ss
cmc
xchg
out
mov
ret
fadd
cmpsb
adc
cmpsb
xor
and
adc
sbb
and
add
movsl
imul
xchg
aas
into
icebp
ficoms
mov
icebp
shrl
repnz
fimull
in
popf
lahf
js
in
shl
outsb
orb
gs
xchg
lds
notb
dec
cmp
and
push
aaa
mov
jb
ss
mov
es
dec
and
jge
inc
test
cmc
andb
cmp
mov
xchg
add
call
repz
inc
sbb
inc
dec
and
xchg
in
adcb
les
jne
mov
and
hlt
aaa
mov
mov
xor
adcl
sub
fmuls
pop
in
cmpsb
push
test
pop
pushf
xor
sub
lahf
loop
les
add
movsb
push
jecxz
or
pop
stos
aad
push
sahf
mov
loopne
mov
test
lret
stos
dec
aad
jge
leave
add
push
test
push
pop
sub
bound
icebp
mov
push
xchg
fidivrs
dec
or
jecxz,pt
mov
pop
mov
inc
jo
xor
ror
and
mov
addr16
sahf
adc
lods
xor
push
dec
push
add
cmp
push
stos
add
stos
les
jno
inc
das
cmp
push
pop
das
xlat
dec
sbb
xor
ss
popa
lods
repnz
movb
nop
fsubrl
shlb
mov
fs
bnd
fcompl
fildll
xchg
mov
pop
push
in
push
lahf
lods
nop
insl
push
test
out
es
orb
add
push
and
loopne
dec
mov
xchg
inc
adc
dec
insb
jae
dec
sub
dec
dec
movsb
and
out
xor
sbb
xor
fwait
jmp
fadds
jns
mov
adc
std
jno
cmp
pop
jno
fimuls
sbb
sbb
mov
mov
cmp
pop
add
aam
shll
clc
test
xchg
cli
add
imul
pop
mov
push
cli
mov
insb
idiv
lock
into
jge
xchg
popa
inc
xor
push
lock
mov
lds
repz
jae
sub
iret
fnstcw
adc
mov
addr16
je
and
or
pop
sbb
imul
jne
out
movsl
mov
js
icebp
call
nop
or
mov
ret
jl
push
out
neg
fidivs
mov
mov
mov
vandps
mov
inc
sbb
mov
mov
fnstsw
xchg
sbb
lahf
call
lods
sarb
mov
lret
movsl
mov
or
sahf
dec
cmp
sysret
loop
das
push
pop
fiaddl
aad
adc
push
clc
roll
jnp
sbb
push
mov
dec
push
test
add
jae
xor
sub
jns
gs
test
jmp
mov
adc
jbe
sbb
xchg
sahf
cld
movsb
add
sub
les
sbb
pop
inc
lahf
cmp
inc
mov
pusha
cmp
andb
stos
fistps
push
dec
movsl
in
clc
dec
jmp
mov
xor
sub
fwait
jae
popf
in
aam
mov
les
mov
cmp
cmpsb
adc
das
aaa
imull
lods
dec
mov
aam
hlt
test
fmull
mov
fldcw
dec
dec
fidivs
pop
shlb
push
mov
inc
dec
sub
out
adc
inc
clc
cli
in
add
push
jbe
in
mov
imul
jmp
mov
or
std
jp
lds
aas
lret
xor
mov
cwtl
adcb
jno
jno
adc
int
filds
inc
add
sub
jle
cmp
sti
adc
jmp
dec
or
pop
bound
cmpb
xchg
dec
fcmove
cmp
data16
les
cmp
in
and
and
mov
aaa
xor
lret
rcll
dec
sub
or
cmp
lods
jo
cs
cmp
test
call
and
stos
cmovbe
or
lret
adc
addr16
jmp
push
js
or
xor
fcompl
scas
mov
cmp
mov
jnp
pop
mov
je
clc
and
cmpsl
jnp
nop
popa
push
into
lds
sbb
fcompl
xor
add
fdiv
insb
sub
nop
push
mov
lock
jl
push
imul
bound
movsb
divb
movsb
inc
pop
inc
mov
and
cmp
mov
ret
sub
jbe
ror
add
mov
stos
pop
loopne
pop
repnz
sub
mov
push
xchg
lods
enter
adc
adc
pop
outsb
cmpb
pop
dec
aad
pop
mov
lret
inc
push
clc
inc
push
mov
movsl
push
sub
or
lret
pushf
enterw
fnstenv
adc
sub
xchg
pusha
jae
dec
adc
out
jle
jnp
shrl
jle
cltd
sti
jns
mov
gs
stos
mov
sbb
fs
sub
jno
movsl
push
bound
or
shlb
outsl
or
cmp
adc
mov
cmc
int3
pop
mov
xor
filds
mov
insl
pop
xchg
cmp
sub
loope
lret
orl
jo
movsl
mov
cmpsb
ret
pop
fcoml
dec
scas
mov
and
vfmaddsubps
sub
adc
xchg
gs
mov
or
mov
pop
push
lods
idivl
or
cli
push
sar
data16
jecxz
pop
imul
dec
pop
push
adc
push
push
mov
aaa
out
xchg
cmp
xor
mov
ss
fsubr
xchg
jmp
rcl
mov
insl
xchg
sahf
repnz
ret
out
shlb
mov
lcall
add
jmp
xchg
pop
xchg
int3
mov
popf
inc
jne
insl
xchg
jmp
adc
push
fdivr
jmp
cmpsl
adc
push
jb
mov
insb
incb
js
dec
xchg
subb
mov
jl
or
popf
mov
pop
bound
inc
pop
cmc
in
out
dec
mov
mov
cmp
fsub
lahf
icebp
mov
lds
lods
jge
stos
lahf
sbb
fsub
cmpsb
sbb
push
pusha
xor
mov
push
std
push
mov
and
sbb
test
push
bound
lods
dec
ret
sti
push
test
test
xchg
mov
repz
push
mov
sub
push
pushf
push
fiaddl
xor
lahf
pop
add
aaa
loope
enter
pop
repz
shlb
xor
dec
push
out
insb
jnp
test
mov
jp
mov
aaa
test
das
cld
int
pop
pop
fucomip
adc
loope
ret
orl
cmc
sub
rcrb
mov
inc
repz
iret
push
jl
lcall
adc
and
stc
and
inc
mov
bound
pop
push
pop
roll
xchg
insl
inc
sahf
mov
mov
xchg
scas
enter
xchg
out
pop
jmp
mov
jb
jecxz
imul
lock
sbb
xchg
sub
and
lds
jge
dec
mov
inc
dec
jns
pusha
in
xchg
aaa
aaa
loopne
in
lret
xor
aad
mov
jg
mov
pushf
sarl
dec
or
inc
cmpsl
sub
test
add
fucomi
fistpll
jbe
mov
add
std
ret
enter
add
lretw
imul
sub
insb
pop
xchg
out
fwait
push
fisttpll
sbb
shrl
xor
adc
scas
sub
dec
inc
xor
scas
aad
jbe
imul
sbb
jmp
adc
adc
sbb
xchg
xor
xchg
dec
pop
mov
scas
xchg
inc
mov
into
aaa
test
scas
leave
shl
xor
mov
pop
mov
mov
jecxz
xchg
mov
mov
push
xchg
push
test
imul
lods
cmc
sbb
loopne
and
inc
jae
aaa
enter
lods
mov
xchg
pop
aad
movsb
dec
mov
inc
out
push
dec
push
dec
mov
loopne
aas
sub
fs
cwtl
movsl
mov
addr16
mov
mov
and
adc
mov
movsl
jle
dec
sub
cld
mov
xchg
dec
sub
jno
dec
les
movsb
mov
std
pop
stc
aas
outsl
enter
jmp
adc
or
test
sbb
sub
dec
xor
stos
rcrb
mov
not
pop
mov
pop
std
sbb
int
div
andb
testl
les
push
or
fimull
pop
jle
pop
jecxz
push
inc
mov
mov
add
or
rorb
and
daa
add
mov
lret
mov
mov
sbb
scas
movsb
or
push
or
adc
loope
pop
sarl
mov
insb
xorl
mov
xlat
sbb
std
pop
mov
andl
gs
push
repnz
cmpsl
lret
sub
cwtl
jo
push
int3
xor
xchg
aas
mov
lods
xchg
push
cmp
insl
je
push
inc
cs
jg
int
xor
xor
mov
lods
aad
insl
or
or
dec
cmp
js
mov
enter
sbb
es
ds
mov
xor
bound
lods
data16
ret
mov
ret
pop
ret
dec
lahf
xchg
dec
mov
jbe
repnz
sbb
sahf
dec
lahf
das
aam
and
pop
add
jb
popl
pop
jmp
sub
inc
cmpsb
repnz
mov
adc
dec
cmpsb
add
or
jl
pop
adc
mov
pop
sarl
divl
dec
out
aam
dec
xchg
cmpsl
push
aam
inc
insb
jge
mov
stos
cmp
and
dec
push
mov
jne
mov
mov
or
xchg
mov
in
sbb
inc
shrl
adc
add
pop
or
jle
and
sarl
cltd
and
jo
push
int3
inc
in
sahf
js
stos
jl
sbb
mov
pop
sub
push
repnz
aaa
jne
mov
inc
mov
mov
dec
loopne
or
test
adc
mov
dec
ficomps
add
add
pushf
clc
and
fisttps
fldenv
add
pop
jb
sub
xchg
and
daa
lret
pop
xor
les
out
add
ret
hlt
arpl
push
mov
xchg
mov
mov
xor
or
scas
fld
pop
fbstp
sub
loop
cmp
push
stos
and
int3
lods
nop
xor
mov
and
push
jo
fwait
lock
xchg
cmpsl
xor
mov
add
out
push
icebp
mov
repz
push
adcb
cmp
xlat
pop
mov
and
das
jl
push
sbb
loope
lret
imul
sarl
add
or
mov
outsb
jbe
cmp
xor
mov
inc
pusha
scas
mov
imul
mov
pop
dec
xchg
push
call
sarl
mov
fistpll
call
adc
test
arpl
test
rcll
in
lods
jmp
jle
sbb
ja
pushf
subb
xor
jmp
cli
mov
pop
stos
dec
sbb
pusha
shll
inc
arpl
aad
cmp
push
dec
dec
mov
mov
and
fistpl
pop
out
sbb
outsl
int3
xor
push
popf
add
add
or
add
call
mov
cmp
inc
into
dec
mov
mov
ret
rcrl
mov
dec
out
add
outsl
cld
and
add
popf
rorl
stos
pop
push
ss
mov
int3
loop
mov
jne
or
cld
sarl
sti
in
ficoms
xor
pop
mov
sbb
add
xor
push
cmp
ret
out
mov
into
popf
push
shrd
jns
data16
dec
add
in
jecxz
mov
ss
sbb
add
pop
jae
lods
or
or
dec
xchg
dec
inc
mov
and
mov
push
fs
fucomi
test
mov
and
jbe
sbbl
cwtl
out
mov
adc
adc
test
push
pop
add
notl
test
push
call
inc
mov
mov
cld
adc
xor
push
mov
lahf
out
xchg
jle
bnd
addr16
jmp
testb
es
xor
pop
dec
mov
mov
nop
daa
cmp
inc
mov
inc
in
mov
mov
cld
pop
mov
cltd
add
je
sbb
fcompl
stc
jmp
dec
popa
out
cmpsb
push
adc
into
push
push
pop
cmp
aaa
push
sub
push
mov
cmp
add
xor
mov
inc
mov
push
and
mov
icebp
insl
pop
mov
add
subl
and
in
enter
insb
xor
push
repnz
dec
les
insl
inc
outsb
mov
or
xorl
sub
push
cld
divb
std
dec
out
mov
nop
sub
cmp
popf
jo
jbe
push
iret
sbb
jp
js
lods
cs
ja
test
sbb
ret
dec
pop
jae
test
and
mov
loop
or
cs
xchg
ljmp
test
fstpt
cmp
jl
lahf
lods
jecxz
pop
lock
mov
mov
ss
mov
jl
test
jno
fstps
push
jae
std
or
jl
pop
call
jbe
out
mov
sub
sbb
into
stos
xchg
out
cmpsl
xchg
cmp
lret
or
and
xor
es
leave
jmp
test
jle
ret
mov
addb
test
je
cmp
pushf
pop
pop
or
loopne
and
lret
or
fidivrs
repz
pushaw
inc
subl
mov
jno
inc
cs
shll
adc
loopne
or
idivb
das
rcl
rcrb
sbbb
jo
mov
lea
pop
or
pusha
add
in
outsb
shlb
subb
jo
je
jmp
inc
fists
mov
mov
lret
addr16
xchg
stos
jae
mov
sub
stc
adc
cwtl
jo
adc
adc
lret
jge
push
add
scas
je
mov
push
cmp
jge
jo
sti
mov
movsl
adc
push
lds
mov
jns
push
jnp
cmp
push
dec
push
js
push
push
sub
je
subb
lock
mov
lea
hlt
adc
jge
data16
xor
pop
add
jp
fadds
rcl
adc
bound
sbb
xchg
mov
mov
fstpl
mov
sar
insb
lock
xchg
sub
neg
aaa
push
push
mov
cltd
xor
in
dec
adc
fwait
pop
xchg
les
adc
cmp
in
loope
rcrb
sbb
pusha
loope
mov
mov
mov
pop
stc
push
push
shlb
xchg
pusha
adc
in
and
cmp
ljmp
out
add
pop
mov
hlt
into
push
jmp
or
pop
dec
mov
rorl
fidivrl
dec
add
sub
fcmove
pop
pop
sarl
push
imul
pusha
sub
test
insb
push
xchg
xchg
stos
ljmp
clc
mov
and
ret
test
or
mov
enter
mov
int3
jo
jmp
rcll
std
icebp
push
imul
sbb
aaa
dec
call
hlt
pop
daa
jns
das
mov
aad
cmp
enter
mov
cld
cwtl
enter
add
xchg
pop
jmp
aaa
xor
mov
data16
dec
and
lcall
dec
iret
fidivrs
int3
xchg
adc
aaa
movsb
aaa
and
lahf
push
mov
cmpsb
sbb
faddl
loope
std
fnstcw
xlat
sbb
out
std
aas
add
shrb
pop
jmp
mov
or
jbe
mov
dec
jne
scas
xchg
std
jge
daa
jo,pn
push
jne
push
ret
adc
repz
test
cli
xor
or
aas
test
xchg
sub
mov
pop
push
enter
ret
sahf
scas
popa
fisubs
sahf
lcall
dec
pop
jmp
lods
add
jmp
ja
lea
in
add
or
icebp
aas
lods
or
jbe
fcmovnu
aaa
push
and
daa
rcr
push
add
cmp
add
pop
adc
shll
xor
mov
or
stos
dec
mov
mov
xor
and
lret
xor
cmp
add
jp
push
sub
and
and
mov
repz
fs
push
aas
test
sbb
lods
mov
and
sbb
mov
mov
pop
pop
lret
mov
push
stos
das
mov
int
mov
xchg
adc
or
outsl
mov
fcmovu
push
imul
mov
dec
mov
call
sbb
aam
scas
mov
jb
scas
xor
dec
mov
fwait
scas
push
xchg
fabs
lret
out
lret
mov
push
cmp
shll
jp
push
jo
xor
loop
xchg
mov
popf
out
and
movsl
jmp
outsl
jecxz
std
sbb
mov
test
mov
addr16
mov
sub
pop
mov
mov
dec
xor
hlt
pop
sub
into
adc
loop
xchg
inc
mov
dec
adc
loop
movsb
out
inc
cli
add
stc
ljmp
jl
addr16
lea
popf
nop
xor
rorl
lea
or
inc
dec
fnstcw
iret
fidivrs
sarb
jbe
popa
inc
insb
pop
arpl
push
dec
sub
and
cmp
stc
jno
mov
addr16
fimull
popl
imul
pop
imul
jle
aaa
jb
mov
mov
xor
outsl
dec
test
jbe
xor
icebp
iret
std
insb
add
add
mull
addb
xor
cmc
aad
cmpsb
lahf
ret
inc
mov
lods
out
mov
jp
lahf
sub
sub
pop
mov
jno
jae
clc
repz
pop
mov
pop
out
mov
mov
popf
aam
lret
mov
xchg
fsts
cli
adc
dec
xor
pop
mov
loop
in
fdivs
clc
and
mov
cmp
frstor
popa
xchg
or
int3
in
in
jecxz
int
dec
imul
inc
or
pop
inc
mov
pop
enter
dec
mov
mov
push
inc
out
shrb
mov
jg
or
pushf
es
inc
mov
jg
sbb
fadd
call
mov
sub
into
jo
mov
test
pop
push
mov
jge
xor
sbb
testl
es
push
les
or
sarb
pop
clc
inc
xor
ret
in
ret
or
pop
jle
adc
leave
insb
mov
jbe
movsb
mov
xchg
sahf
call
lods
lahf
insl
add
clc
jmp
fs
mov
sub
adc
nop
add
add
lahf
es
mov
lock
mov
into
movl
dec
gs
jns
mov
test
repz
jns
sub
das
jo
imul
ja
and
bound
aad
lea
enter
cltd
jnp
adc
xchg
mov
add
iret
mov
adc
syscall
mov
push
cmpsl
mov
rcl
or
testl
pop
or
in
aas
pop
mov
xor
sbb
bound
jnp
cmp
jb
incb
lock
fidivrs
test
push
pop
jno
daa
push
loop
sbb
stos
mov
xlat
es
pop
scas
cmc
imul
inc
xlat
pop
dec
xlat
pusha
mov
pop
push
out
mov
xchg
fisubrs
adc
and
fwait
cmp
cwtl
fstpl
sub
popa
mov
les
add
fistl
push
popa
pop
adc
jmp
arpl
mov
add
xchg
mov
pusha
test
inc
jg
adc
adc
jnp
out
or
lds
enter
push
fnstenv
test
mov
jnp
pop
int
cmp
jns
test
push
pop
or
mov
mov
mov
int3
mov
les
aad
roll
add
sbb
pop
and
mov
ljmp
into
cmp
inc
das
sbb
in
repz
movsb
loope
enter
xchg
add
lods
ljmp
xor
xorl
mov
mov
fistps
fldt
cmpsb
cmc
xor
in
lret
ds
sub
sub
aam
in
mov
cld
loop
push
push
cmp
int3
cmp
out
das
pop
bnd
dec
mov
stos
sub
mov
shl
pusha
sub
sbb
push
fisttpll
jo
das
repz
and
pushw
pop
and
mov
pop
mov
sarl
rcll
sub
mov
and
movsb
mov
lahf
cld
aaa
cmc
push
or
rcr
lahf
bound
sbb
cmp
xchg
repnz
jl
stos
mov
stos
scas
ss
cmp
mov
shrb
cltd
adc
push
cmp
dec
push
pop
xor
imul
sbb
subb
push
inc
add
push
lds
test
xchg
iret
fwait
ljmp
jns
sbb
push
jcxz
divb
enter
test
lods
loope
insb
pushaw
jp
clc
cld
lods
ja
xchg
sbb
icebp
mulb
sbb
lds
xchg
lds
cmc
jecxz
or
test
inc
jns
or
lods
add
mov
xchg
cwtl
imul
sbb
pop
sbb
add
jg
rcrl
cld
push
jecxz
inc
inc
add
and
cmpsl
xor
pushf
loop
dec
sahf
int3
lret
mov
push
stc
leave
xchg
fs
or
out
ds
dec
sbb
adc
xor
mov
mov
push
lret
out
sbb
fbld
adc
mov
fldcw
mov
stos
icebp
jle
push
jle
mov
aad
sub
jmp
jo
mov
mov
inc
cmp
sar
and
addb
test
and
fs
or
and
inc
sbb
mov
rorl
push
push
mul
lcall
std
out
xor
or
hlt
push
add
int
mov
add
pop
xchg
inc
dec
mov
add
dec
out
shll
sti
inc
and
cmpsb
mov
sbb
cmp
mov
ret
pop
sti
ss
mov
cmpsl
xor
rclb
mulb
xor
rorb
add
sbb
stos
jg
mov
adcl
pop
push
clc
and
andb
je
les
fstp
and
fst
aad
and
fs
jle
jne
mov
sbb
pop
xor
iret
movsl
lods
xor
scas
bound
adc
sarl
andb
or
pusha
mov
aaa
testl
jge
add
out
fcmove
inc
or
xchg
mov
loopne
push
inc
js
ljmp
jp
cmp
mov
jb
mov
cmp
push
dec
adc
jecxz
mov
xorl
cs
add
mov
lahf
ljmp
stos
lea
push
out
adc
dec
pop
iret
sbb
xchg
inc
sbb
push
lcall
insb
adc
inc
inc
dec
and
cwtl
repnz
push
sbb
cmp
rorl
sub
mov
fdiv
mov
aad
pop
cmp
shll
into
push
push
imul
rorl
fstpl
mov
in
cmp
lcall
dec
pop
sub
cmp
outsl
fsubs
testb
or
into
jb
hlt
and
aad
sbb
mov
fisttpl
or
cmpsb
cmpsl
sbbb
pop
fldcw
mov
lcall
lock
fadds
sbb
xchg
inc
sbb
mov
add
ret
popa
lcall
insb
adc
inc
inc
dec
dec
movsb
rolb
lret
movsl
xor
fldcw
cmp
jbe
or
inc
pop
inc
xor
outsl
push
arpl
jle
push
pop
fidivrs
sbb
shlb
dec
pop
orl
call
pop
sbb
mov
js
pushl
adc
lea
fdivs
ret
mov
mov
int
inc
and
sahf
pop
adc
data16
xor
push
cld
jle
jo
inc
cmc
pop
and
insb
dec
call
rcrb
jbe
aam
negl
sbb
pop
rcrb
std
loope
imul
sub
stos
movsl
add
ja
mov
mov
jecxz
orb
inc
sbb
rolb
mov
xlat
fs
xchg
mov
xchg
call
std
cld
dec
adc
jne
fldcw
loop
xor
das
jbe
cli
and
aas
adc
sub
ljmp
inc
inc
jno
mov
fwait
in
or
mov
les
xor
dec
xchg
insl
dec
mov
hlt
xlat
pop
test
mov
sub
cmpsl
mov
into
jmp
dec
js
negl
dec
sahf
shl
cld
scas
sub
shll
pop
xchg
and
filds
into
sti
iret
mull
les
mov
and
loope
cltd
mov
mov
and
hlt
xchg
adc
xchg
ss
push
lcall
shrl
or
sbb
mov
mov
mov
inc
jg
imul
stos
testl
mov
leave
pop
insl
push
xor
idivl
ss
or
stos
stc
xor
xor
jmp
std
inc
testl
mov
in
ja
pop
loope
sub
stos
int
adc
inc
sbb
arpl
fsts
dec
pushf
insb
gs
mov
aam
pop
out
xchg
lods
mov
popa
or
sarl
lds
jne
mov
les
test
xchg
xor
shl
mov
xor
adc
jle
fwait
pop
lcall
jmp
adc
pop
mov
aas
xor
cmp
mov
lret
xchg
and
clc
or
inc
push
mov
or
test
or
cmp
mov
add
mov
pushf
in
loop
xor
adc
loop
mov
push
aad
ret
jle
cltd
in
loop
repz
or
sub
cmpsl
das
jae
mov
dec
adc
cltd
xor
in
fistpl
jnp
les
mov
jle
mov
lcall
hlt
in
push
mov
push
or
and
sub
icebp
pop
mov
rol
leave
inc
call
jp
lods
inc
lea
test
sbb
push
sub
add
out
add
add
sub
xchg
pop
outsb
inc
xchg
pusha
rcrl
jge
add
inc
mov
loopne
dec
mov
jmp
ja
divb
into
push
dec
dec
movsb
and
jge
push
nop
insl
inc
jecxz
push
mov
push
mov
sub
push
ss
cli
cmc
test
and
jge
sub
mov
mov
push
shlb
mov
jp
sahf
adc
fdivrl
loope
sbb
and
in
aam
fs
aas
out
out
mov
pop
push
sub
inc
aaa
lods
push
std
cld
sarl
push
loop
push
inc
pop
cmc
lret
fst
adc
jl
fs
mov
adc
cwtl
mov
testl
addl
xorl
mov
pop
clc
inc
xor
sub
jbe
mov
fidivl
pop
in
cmp
pop
movsb
in
jo
aam
inc
sub
imul
xchg
inc
lods
nop
adc
mov
cmpsl
pop
mov
mov
add
mov
mov
sti
scas
xor
xlat
icebp
xlat
jns
out
mov
mov
daa
cmp
mov
stc
mov
jge
and
mov
jge
dec
jmp
aas
arpl
pop
cmpsb
into
cmpsb
cmpsl
push
push
pop
push
repz
push
xor
pop
pop
outsb
fstpt
out
sbb
inc
or
xchg
ds
pop
jno
enter
out
and
xchg
xchg
mov
xchg
repz
mov
in
ret
dec
mov
add
or
or
xorb
cwtl
in
in
insl
jg
cmp
lock
and
lcall
imul
push
testl
jl
cmp
out
push
and
add
mov
adc
arpl
add
jb
out
ret
repnz
jl
push
adc
and
int3
push
and
sbb
mov
pop
adc
movsl
jmp
and
mov
dec
cs
nop
inc
xchg
pushf
mov
fstps
jecxz
lret
stos
pop
aas
dec
fsub
adc
and
jb
jne
push
sbb
jno
mov
int
push
lea
jne
imul
leave
cs
or
scas
mov
sbb
sbb
pop
ja
push
mov
outsb
int3
cld
and
add
jno
cmp
mov
mov
icebp
rcll
xor
or
stos
test
mov
inc
jnp
or
cli
sbb
jo
or
lods
sub
xchg
jg
scas
fisttpll
dec
cmc
sub
adc
push
sti
adc
xorb
push
adc
and
mov
sbb
adc
shrl
jns
xchg
hlt
cltd
add
jns
mov
xchg
sbb
inc
jbe
mov
sub
pop
dec
dec
cltd
pop
push
pop
lret
push
or
ds
adc
adc
sub
lcall
out
int3
sbb
pop
mov
loopne
push
mov
pop
mov
and
scas
loopne
sahf
jno
les
jecxz
lret
stos
pop
dec
enter
or
xchg
das
push
in
sbb
sbb
cmp
sub
push
mov
pop
out
mov
push
movsl
push
pop
popa
dec
cld
mov
jle
dec
and
cmc
sub
pusha
pop
fwait
movsl
fldt
dec
bnd
jmp
out
xchg
pop
push
jle
and
sbb
jle
pop
jbe
jmp
dec
decl
ja
sbbb
insl
clc
xor
cmp
int3
sub
push
lods
movsb
sub
pop
fbstp
cmc
cmp
lock
adc
jns
pavgb
loope
das
inc
sahf
in
or
lods
push
ret
push
or
out
push
or
outsl
iret
jno
lret
sahf
aas
inc
sbbb
sub
cs
outsl
int
inc
jno
mov
xor
add
and
sub
test
dec
insl
xor
sarl
fisubrl
lds
cmc
xchg
jb
xchg
in
lods
mov
sub
mov
push
arpl
fsts
fs
and
mov
repz
fists
scas
jbe
or
lcall
push
xchg
pop
mov
in
not
js
cmpsl
push
pop
mov
ficompl
aas
aam
ljmp
lock
mov
negb
xor
repnz
push
in
pop
pop
daa
lea
outsl
lret
cmp
shll
cli
das
xchg
cmpsb
adc
or
lahf
subb
sub
shrl
subl
cli
scas
xchg
sub
rcl
jbe
jo
sub
dec
and
mov
lods
repz
fsubrs
xorb
call
inc
mov
dec
iret
leave
xchg
xchg
xchg
inc
xor
int3
daa
and
adc
inc
test
add
inc
lret
xchg
movsl
xchg
leave
cmp
mov
pxor
push
mov
inc
inc
shlb
pop
inc
sub
fistpll
jae
out
add
and
ja
loopne
out
pop
mov
pop
jge
push
sbb
pop
jge
ja
sti
or
cmp
add
leave
add
out
inc
mov
pusha
jo
fs
mov
sub
aam
sub
pop
nop
repz
mov
mov
push
call
jle
push
push
or
cld
aas
bound
leave
fcomip
jmp
sti
fnstenv
dec
outsl
mov
test
loopne
imul
xchg
cwtl
fs
dec
popa
lods
mov
pop
xor
lret
add
xor
xor
push
or
xorb
mov
shl
push
mov
push
imul
gs
repz
int
cs
push
gs
lret
aam
cmp
in
in
addr16
mov
addr16
lret
aad
js
mov
les
jbe
data16
or
add
xchg
insl
push
dec
gs
jb
fdivl
or
push
inc
test
adc
scas
pushf
xor
sub
ficoms
inc
punpckhwd
pop
popa
addb
adc
movsl
jae
dec
sbb
cli
in
jmp
mov
inc
lods
mov
push
in
fstpl
pop
cmp
inc
call
xchg
jb
sbb
jnp
cwtl
sbb
sbb
cmp
or
inc
jge
jle
fs
sti
jp
mov
enter
cmp
cmc
call
addl
and
dec
jmp
lahf
mov
mov
jle
dec
cmp
into
arpl
outsb
xchg
add
mov
adc
mov
in
cmp
movl
mov
adc
or
push
sub
push
inc
sahf
pop
push
xor
fs
scas
add
sub
inc
stos
shl
jns
cs
lods
inc
and
or
pop
aad
pop
mov
adc
mov
shlb
pop
test
sub
cltd
fnstsw
pop
mov
sbb
int3
sub
jbe
push
cmc
pop
aam
ss
insb
pop
cmpsb
addr16
lret
mov
cmp
leave
stc
rolb
filds
nop
cli
cltd
cwtd
pop
add
enter
cwtl
and
popf
dec
andb
sub
mov
inc
lret
aad
inc
and
push
adc
flds
mov
and
out
or
pop
add
pop
ljmp
push
and
aaa
loop
or
push
mov
jl
pop
lcall
mov
ret
jnp
jge
xor
push
and
jnp
lret
rclb
movsl
cmc
fwait
leave
fstpl
movb
pop
insl
les
int3
ret
cmpsb
les
cmp
cmc
std
cmp
shrl
test
ret
or
pusha
test
cmc
mov
fldl
loop
aas
js
jecxz
movsb
stos
mov
shrb
loopne
mov
int3
sbb
movsl
dec
test
fdivr
shll
ret
jo
adc
divb
popf
sbb
dec
jp
fildll
and
push
xchg
push
mov
loopne
jo
jp
repnz
das
or
dec
cmpsb
bound
sti
ja
sub
mov
mov
push
sahf
fwait
jge
and
fstpl
divl
inc
scas
sti
enter
inc
pop
mov
push
shr
stos
decl
xchg
inc
scas
out
push
xor
sbb
jp
sbbl
hlt
sub
outsb
xor
inc
inc
paddd
imul
out
add
iret
and
call
cwtl
inc
push
out
je
scas
or
lea
mov
mov
inc
xchg
aam
pop
ficoml
sub
fisubl
mov
xor
inc
add
pusha
and
and
and
imul
and
insl
jle
into
arpl
inc
add
inc
subb
pop
and
ja
push
out
shrb
mov
insl
xor
test
sub
movsb
mov
sub
loopne
sbb
out
movsb
cmp
fiaddl
imul
lret
and
mov
jbe
xchg
jmp
jno
push
mov
and
jge
daa
mov
xor
shlb
jae
cwtl
enter
push
in
push
repnz
jae
out
jbe
or
add
scas
sub
push
xchg
jb
scas
outsl
inc
gs
sub
sbb
fsubr
scas
jb
mov
outsb
add
dec
or
stos
jmp
xchg
jne
out
dec
mov
imul
outsl
outsb
inc
xchg
sub
scas
popa
bound
push
jp
sbb
push
add
test
adc
jge
xor
push
fs
mov
into
leave
cmp
jl
jb
rorb
mov
aad
ljmp
cld
mov
mov
mov
enter
ljmp
push
and
fiadds
out
shrb
sub
daa
or
fsubr
jns
addb
cmp
adc
mov
xor
lods
jmp
xor
sahf
adc
adc
inc
sbb
lahf
rol
lret
rolw
adc
ret
push
sbb
dec
sbb
xchg
lret
test
adc
psrlw
iret
pop
repz
lods
pop
inc
xchg
inc
sti
fwait
inc
int3
cld
mov
push
andl
adc
mov
ljmp
test
xchg
pop
movsb
jg
in
sub
xor
and
rcrb
mov
cmc
mov
stos
and
aas
and
mov
int
jge
mov
stos
mov
xchg
mov
testb
andl
lret
stc
mov
ret
cmp
daa
mov
push
loop
stos
adc
out
xchg
daa
das
inc
mov
mov
sub
popf
data16
aaa
repz
pop
cli
lret
test
sbb
lcall
adc
fcmovu
mov
sbb
dec
inc
pushf
adc
mov
mov
push
arpl
xchg
stos
xchg
imul
testl
jnp
sbb
xor
in
push
and
jge
sbb
mul
jns
or
in
pop
dec
and
sbb
and
xor
dec
mov
lock
js
cmp
and
push
divb
nop
pop
repz
pop
mov
lret
insb
push
stos
popa
or
mov
out
ds
sub
pushf
adc
jno
sbb
jb
pop
push
xchg
mov
and
pop
xchg
cli
mov
lret
fwait
sti
jae
mov
stc
shll
adc
jbe
xchg
push
sbb
scas
add
and
fbld
and
cmp
add
decl
push
in
add
or
mov
loopne
loopne
jl
pop
adc
push
mov
dec
sbb
xor
and
in
imul
gs
lret
and
loop
sub
inc
int3
lcall
cmp
sti
sbb
sub
inc
push
fldenv
rep
aaa
dec
inc
lcall
xchg
repnz
pop
mov
arpl
and
jecxz
fnstsw
popa
aaa
insb
mulb
mov
mov
insb
or
fnstenv
movsl
aad
imul
test
mov
sbb
mov
jp
jbe
push
sbb
arpl
add
jae
and
push
jns
cmp
test
mov
loope
ds
mov
inc
pop
xchg
add
stos
int3
and
xchg
and
dec
inc
int3
push
inc
iret
xor
cmp
mov
fists
and
clc
imul
push
jo
popf
cmp
adc
sbb
xor
xchg
sbb
push
frstor
loopne
jae
adc
or
push
inc
push
cmp
adc
scas
xor
dec
mov
push
xchg
and
pop
xor
xor
cmp
xchg
imull
scas
sarb
in
sahf
add
pop
push
outsb
dec
lock
add
inc
les
scas
aas
mov
push
jl
and
in
repz
shl
lods
ja
in
inc
jo
adc
add
mov
jle
scas
mov
xor
or
lods
adc
cmp
sub
sbbl
sbb
inc
add
in
mov
inc
pusha
iret
iret
aad
sbb
adc
mov
xchg
sti
push
add
movsl
mov
stc
movsl
mov
mov
movl
inc
mov
stos
adcl
aaa
aad
xchg
test
pop
push
mov
shlb
stos
and
aas
and
cmp
les
movsl
shr
arpl
mov
shr
ja
adcb
mov
fdivrl
push
sbb
int3
enter
mov
adc
dec
mov
fnstcw
jae
sub
movsl
enter
outsl
mov
test
movsl
jo
dec
xchg
sub
xor
std
and
test
movl
nop
hlt
fdivrl
je
subb
shlb
mov
push
sub
rcll
sbb
push
dec
js
sub
jmp
xor
outsb
inc
js
pop
cmc
inc
test
sahf
jo
int3
out
xor
testb
add
push
mov
rcll
xchg
in
dec
das
cld
shrb
cmp
test
fistps
inc
pop
addr16
adc
cld
shll
push
jno
or
and
mov
scas
jp
jne
pop
and
xor
imul
xor
mov
cmp
sarb
push
sbb
sbb
xchg
js
repz
int3
mov
pop
cmp
mov
fistpl
mov
sti
lods
jns
cmpsb
mov
pop
xor
pop
shrl
movsb
clc
cld
mov
adc
repz
push
or
aaa
dec
inc
cltd
mov
and
aaa
pop
add
shr
cld
pop
pop
and
shrl
mov
pop
sahf
mov
jo
stos
xchg
outsl
daa
xchg
jg
out
aam
loope
int
dec
out
stc
cld
je
fadd
test
in
sub
and
stos
mov
cmp
mov
inc
push
into
mov
in
inc
jns
push
std
popl
jp
cmp
sub
mov
lods
in
test
aaa
jp
pop
xchg
inc
jnp
jge
das
xchg
sahf
sbb
and
jle
jno
jmp
movsl
or
xor
jmp
insl
cmp
out
pop
jge
lods
push
in
std
pop
inc
cld
lock
mov
das
ret
and
xchg
dec
stos
jge
cmp
bound
jp
pop
icebp
aaa
divb
mov
jmp
das
dec
addl
dec
inc
shr
sbb
sbb
push
jle
mov
jge
adc
add
jo
xchg
ret
xchg
cmp
push
fwait
cmp
jae
jno
lret
cmp
mov
cmp
add
jne
test
xchg
mov
pop
jbe
add
mov
clc
ret
in
insl
stc
inc
mov
xor
lds
cs
fs
push
inc
adc
or
inc
or
or
std
das
cmpsl
sar
subl
loopne
mov
jp
fistpl
repz
sbb
add
mov
and
or
xor
lcall
cli
data16
out
lds
lds
addl
and
push
add
and
push
lea
adc
inc
cwtl
popf
fldt
sahf
push
rcll
lret
cmp
mov
and
nop
inc
and
clc
and
lods
sub
and
mov
adc
cmc
iret
sub
xlat
mov
sub
pop
das
xchg
pop
cmp
sub
add
and
push
lock
adc
add
roll
out
lret
rcrb
inc
enter
or
lods
sbb
sub
sbb
xchg
ja
mov
push
sar
xor
jmp
stos
stos
or
dec
dec
cld
dec
out
mov
push
and
xor
and
dec
mov
cmp
outsl
lods
add
jo
inc
into
imul
std
pop
sbb
xor
sbb
sub
sub
stc
dec
ljmp
arpl
xor
shlb
dec
lret
push
jns
hlt
mov
sbb
xchg
outsb
pop
cmp
inc
mov
stos
sahf
mov
sar
cwtl
or
into
sub
ss
fs
lock
punpcklbw
cmpsb
pop
fdivrp
jo
mov
push
sarl
sbb
fimull
adc
mov
dec
mov
jmp
xchg
test
out
in
loopne
xor
sub
insb
sti
stos
adc
ljmp
cmp
push
repz
mov
clc
rorl
dec
mov
flds
adc
jne
mov
je
enter
jmp
in
into
pop
xchg
or
mov
cmp
fnstsw
dec
leave
jno
xchg
in
stos
imul
pop
bound
inc
xchg
jecxz
dec
mov
out
js
lea
daa
out
rcrl
push
push
test
jmp
loope
mov
cmp
mov
xor
mov
cmp
jae
xor
jmp
test
loope
stos
mov
mov
loope
test
mov
jl
add
out
push
arpl
icebp
xlat
mov
and
fldenv
mov
jns
adc
jecxz
fisttpll
jmp
jmp
cmp
popf
into
jno
adc
xor
mov
pushf
inc
loop
jge
out
les
inc
popf
or
add
push
out
pop
mov
je
nop
inc
inc
add
inc
inc
mov
int
mov
mov
xchg
scas
es
int3
mov
loopne
add
mov
xlat
xchg
pop
jecxz
mov
fbld
mov
adc
mov
jbe
in
adc
fsub
mov
scas
pop
mov
lods
pop
cmc
call
sar
daa
fists
hlt
add
scas
push
cwtl
inc
push
xchg
push
or
push
push
push
add
cltd
call
in
mov
mov
mov
roll
mov
mov
dec
xchg
gs
push
sbb
push
in
xchg
pop
or
sub
stc
pop
andb
cmp
insb
push
pop
pop
and
cmc
or
push
xor
fwait
lds
sub
mov
cmpsl
lds
push
xor
addb
fsts
out
int3
mov
lret
or
push
mov
xchg
fsubrp
jl
dec
jnp
inc
ss
jmp
mov
pushf
addr16
mov
rolb
pop
cmpsb
pop
and
addr16
addr16
scas
pop
jecxz
out
imul
pushf
pusha
repnz
ja
pop
mov
aaa
aam
adc
negl
movsl
xchg
xchg
aas
lock
cmp
mov
mov
pop
push
jecxz
or
inc
push
aas
int
mov
stos
scas
or
jns
push
loop
outsl
dec
shrl
xlat
and
cmp
and
or
xchg
sahf
aam
out
imul
cmp
mov
sub
sub
cltd
int3
xor
pusha
and
mov
pop
loop
out
jne
std
mov
enter
jae
inc
jo
fdivl
stc
shr
ja
cmp
pop
into
sti
and
std
fadd
test
mov
sub
sbb
aaa
mov
out
push
xchg
or
inc
int
popf
mov
lret
shr
or
call
dec
jne
add
jo
sbb
adc
mov
movsl
int
push
lds
xor
mov
rcrl
xchg
movsb
and
pop
sbb
pop
jb
aaa
push
pusha
add
std
inc
jae
lret
ja
mov
imul
mull
out
inc
mov
push
xor
add
xchg
xchg
mov
outsl
lcall
adc
mov
sub
stos
mov
xchg
nop
jbe
popl
outsb
cmpsl
xchg
xor
push
push
mov
inc
mov
clc
out
cli
jmp
ret
jne
mov
dec
cmp
adc
jno
out
or
pop
fistl
sarl
and
lcall
enter
cmpsb
pushl
push
inc
std
sub
cmp
jo
sub
mov
pop
adc
fmulp
jo
mov
xor
aad
mov
cmpsb
sbb
pop
fsubr
leave
jae
das
push
sub
stc
aam
push
rolb
jo
xlat
imul
inc
ja
adc
sbb
int3
addb
stos
sbbl
pop
sbb
movsl
xchg
movsl
popa
aad
repnz
lds
ret
negb
shll
jns
or
xchg
sbb
sub
inc
or
out
cmp
mov
xor
andl
cs
cmpsl
push
xchg
rorb
fidivl
mov
lret
cmp
lcall
mov
jg
adc
or
cmpsl
sbb
enter
xor
dec
push
fldl
sbb
xor
adc
arpl
loop
int
mov
std
into
xchg
mov
les
shrl
jg
arpl
test
sub
jg
aaa
adc
scas
movsb
push
test
test
outsl
dec
cmp
es
mov
es
sbb
xor
adc
sub
jns
fsubl
jb
leave
cwtl
cmc
fs
push
pop
nop
mov
mov
push
inc
mov
sub
ficompl
mov
ror
into
jmp
pop
jge
sub
jg
cmpsb
cmp
jnp
movsl
xchg
bound
repz
pop
sbb
test
adc
lcall
xchg
shrb
in
push
dec
cmp
mov
sbb
fdiv
pop
push
jae
add
pop
xlat
fwait
mov
jl
bound
adcl
movsl
fdivs
jo
into
sbb
xlat
and
fwait
jecxz
mov
loop
add
sub
pop
pop
add
and
aas
or
push
pop
stos
pop
rcr
mov
imul
cwtl
and
jmp
sbb
inc
inc
jno
loop
test
cmpsb
ja
ficomps
dec
cli
in
push
dec
pop
cmp
fwait
imul
std
loop
adc
dec
out
pop
daa
test
negb
push
int3
push
lock
ja
and
push
hlt
jns
mov
ss
int3
in
xlat
enter
cs
xchg
cli
mov
repnz
pop
cmc
das
repz
fwait
inc
sbbl
or
mov
jl
data16
inc
and
sbb
mov
pop
xchg
js
mov
insb
mov
mov
jno
cmpsb
sbb
add
sub
in
cltd
inc
inc
outsl
pushf
xchg
inc
jg
inc
in
ret
cmp
or
or
push
mov
cmp
cmp
int
or
lahf
mov
push
and
sbbb
lds
andl
jle
cmp
push
test
push
inc
movsl
mov
out
inc
mov
xchg
mov
push
test
mov
mov
pop
pop
pusha
movsw
mov
sub
int3
mov
jo
or
and
xlat
xchg
vpcmpgtd
or
push
in
mov
add
leave
add
out
mov
lods
or
loopne
lock
aas
bound
scas
mov
jg
arpl
xor
movl
jbe
adc
xchg
xchg
pop
mov
cmc
adc
popf
mov
cld
and
sbb
popa
repz
xorl
mov
das
in
test
and
xlat
mov
pop
jg
jbe
xor
es
aad
out
mov
fldt
jle
test
scas
aas
jb
push
or
repz
outsl
jmp
push
xchg
lahf
cs
push
pop
inc
and
inc
fcomps
sub
inc
rcrb
invd
jge
xchg
mov
mov
pop
push
or
dec
scas
adc
cmpsb
and
dec
push
das
mov
sub
iret
lret
push
hlt
lret
test
mov
cmp
push
add
lods
add
leave
and
push
add
or
flds
jae
lret
dec
cltd
outsb
cmp
shl
cmc
pop
adc
sub
inc
push
scas
or
cmp
jecxz,pn
jns
push
lret
lahf
and
rorb
mov
xor
jecxz
mov
out
push
and
out
sub
cwtl
xor
mov
call
pop
sarb
mov
mov
test
sub
das
call
push
inc
in
jbe
add
or
or
and
cltd
fimull
xchg
fists
pushf
arpl
sub
loopne
sahf
into
push
out
cmp
sti
sar
in
jo,pt
fmul
jo
andb
rcrb
popa
jmp
cltd
inc
push
mov
jle
xchg
jno
mov
mov
jle
mov
fldt
lds
fldt
je
add
jnp
xor
sbb
cmp
shlb
push
add
cmc
mov
pop
sarl
cltd
aad
inc
xchg
lahf
xor
jno
mov
inc
movsb
push
in
ss
push
fsubl
mov
fldcw
lock
aad
out
cmp
mov
icebp
adc
out
and
pop
mov
xchg
cwtl
xor
add
inc
sbb
and
nop
jmp
lds
loopne,pn
aad
mov
push
ss
jg
jl
repnz
jnp
scas
mov
out
shll
xor
dec
into
xor
adc
outsb
shlb
push
es
dec
ret
inc
out
sub
pop
push
roll
arpl
ds
jmp
outsb
mov
test
add
stos
popa
sbb
mov
loopne
cs
test
push
mov
sbb
roll
jo
mull
add
push
out
loopne
addb
lods
imul
movsl
adc
xchg
mov
outsb
les
mov
hlt
arpl
fistpl
pop
roll
mov
dec
ret
in
sbb
inc
push
inc
push
je
xchg
dec
test
mov
fcomi
pusha
ret
mov
adcb
aad
scas
test
mov
jmp
add
shrl
sbbl
out
mov
imul
push
or
aas
sub
aad
adc
push
mov
xorb
inc
icebp
repz
movsb
add
clc
fninit
ds
stc
sub
enter
jl
mov
xchg
dec
out
push
jge
fnstenv
xchg
imul
mov
popa
xchg
in
outsb
or
pop
in
loopne
push
fwait
mov
fcmovnb
sub
mov
and
cmpsb
jno
in
aaa
enter
add
sbb
and
lret
xchg
out
enter
fs
ficompl
sub
add
push
dec
add
mov
jae
pop
push
pushf
jae
dec
sub
test
mov
mov
and
mov
fsub
scas
fwait
pop
cmp
gs
adc
and
inc
stos
xchg
imul
push
sbb
or
inc
jp
pop
push
pop
cmp
pop
enter
stos
inc
xor
cmp
jae
mov
out
inc
xchg
dec
cmp
loope
mov
jl
fs
jo
inc
sub
xchg
lock
outsb
xor
add
fisttps
into
inc
pushf
pop
fisttpll
adc
imul
and
mov
out
dec
push
xlat
stc
es
cld
iret
lahf
mov
mov
ja
stos
sar
adc
mov
push
or
into
xlat
jmp
sbb
mov
jle
pop
pop
mov
mov
out
pop
shrl
and
mov
sbb
ret
mov
add
pushf
bound
cmpsl
xchg
push
sub
mov
lds
fbld
jbe
inc
cmp
icebp
xchg
xlat
imul
sti
je
lds
sahf
test
stc
dec
jmp
push
fs
cmp
cltd
das
cmp
lods
sbb
ret
mov
into
shld
int
jmp
sub
les
aad
in
in
xchg
mov
xchg
js
pop
test
mov
loop
popa
iret
cwtl
fsts
add
jae
push
jge
dec
int
pushf
stos
mov
jecxz
push
push
jo
adc
cmpsb
gs
fnstenv
cmp
jmp
pop
pop
std
mov
outsl
mov
out
idiv
add
test
inc
shrb
xor
sub
ljmp
mov
and
repz
inc
std
jecxz
push
add
fisubl
pop
shrl
mov
jp
scas
daa
xor
scas
push
jo
test
mov
pop
inc
dec
adc
mov
fisubrs
cmp
lahf
sahf
shlb
sub
mull
sub
in
adc
out
cld
out
jns
jmp
lret
xchg
push
fistps
jb
jb
lods
jg
push
idivl
gs
cs
aam
xor
lods
out
je
add
insl
lahf
cmp
jbe
lea
cld
adc
push
mov
or
shlb
xchg
cmpsb
add
inc
inc
jp
insb
arpl
mov
int3
das
out
ret
push
in
aad
pop
cli
bound
aam
psubd
fnstcw
addr16
repnz
rcrl
ja
jmp
mov
xor
mov
ja
adc
imulb
push
lea
js
movsl
aam
int3
xchg
rolb
dec
inc
cwtl
cld
mov
pop
jbe
cli
dec
inc
sbb
mov
in
mov
je
cs
stc
adc
sub
test
xlat
movsl
jb
rol
fadd
and
mov
jmp
lret
scas
sub
push
mulb
pop
nop
pusha
test
xlat
sub
int3
push
jnp
adc
es
lods
mov
sub
aaa
les
push
pusha
addr16
and
mov
flds
or
out
repnz
mov
jno
jmp
sbb
jne
adc
add
pavgb
cli
stos
fiaddl
movsb
mov
adc
lock
dec
mov
xchg
adc
loopne
mov
int
test
mov
jne
repz
push
pop
jmp
fs
push
cld
movsl
cmp
in
repnz
xchg
into
push
in
dec
and
out
xchg
outsl
loop
into
lds
out
dec
fcomps
flds
xor
cmp
repnz
cli
add
add
jp
es
xor
or
stos
sbb
js
fldenv
aas
int3
inc
mov
aam
test
fbld
push
mov
pop
das
pop
pop
aas
cmc
aam
lods
loopne
sahf
insb
pop
push
ljmp
sbb
push
sub
pop
or
scas
add
out
lcall
popf
fbld
xchg
and
fidivs
mov
pop
ss
out
jl
or
daa
sbbl
popf
xchg
repnz
scas
mov
xor
loope
inc
push
push
outsb
rcr
repz
adc
xchg
addr16
mov
ljmp
adc
pusha
and
xor
mov
sbb
mov
jmp
fisubrl
test
pop
xlat
movsl
iret
mov
sbb
xchg
loope
shll
xchg
pusha
leave
loope
mov
leave
int
xor
pop
pop
push
xchg
dec
lea
lock
push
in
nop
aas
stc
mov
repz
mov
das
mov
mov
sub
inc
rcr
cwtl
xchg
xchg
dec
movsl
mov
pushf
call
nop
cwtl
icebp
push
mov
cmc
jnp
insb
jne
imul
add
nop
and
sar
mov
sub
fs
mov
bound
fidivrl
cmc
sbb
cmp
xlat
frstor
aas
into
xchg
fwait
shlb
cwtl
push
shrl
sub
jnp
sti
xor
jl
gs
xchg
or
lcall
scas
arpl
dec
aam
and
hlt
jp
dec
lret
jl
mov
pop
pop
mov
xor
pusha
das
jo,pt
icebp
jo
mov
cmp
shlb
inc
rcrl
ljmp
xor
repz
xchg
mov
loop
mov
mov
pop
lods
xor
xchg
lret
cmpsl
js
hlt
push
pop
sahf
or
insb
or
fidivl
movsb
xchg
pushf
fwait
vpaddw
add
insb
fdivrl
cld
sub
call
jbe
lcall
fistpl
and
sti
xchg
xchg
push
adc
aaa
mov
aaa
push
adc
xor
out
clc
and
push
sbb
std
sub
test
pop
sahf
xor
out
xchg
call
loope
repz
mov
lcall
int3
adc
int
iret
push
pop
mov
aad
call
mov
shl
rol
lods
aaa
cmpsb
inc
cld
shl
mov
mov
adc
add
imul
inc
int3
das
push
cli
mov
mov
xor
cmp
push
xchg
mov
adc
adc
out
insb
clc
pop
js
js
jp
loope
test
push
jbe
dec
xchg
cmp
add
and
incl
shrl
out
jmp
inc
fwait
sub
les
popl
inc
out
mov
adc
lahf
pop
cmpsb
mov
cwtl
inc
dec
mov
sbb
iret
f2xm1
in
test
mov
shlb
movlps
mov
sahf
shl
ret
adc
aam
pushf
insb
push
sbb
push
cmpsl
jo
cmp
mov
and
ds
orl
sbb
iret
jmp
and
and
aas
dec
mov
push
data16
push
add
lods
movsl
xor
cltd
push
inc
test
addr16
push
dec
daa
enter
mov
cld
jle
lea
or
sbb
add
mov
jecxz
xor
dec
dec
inc
dec
or
sub
hlt
mov
lds
or
mov
pushf
xlat
rol
push
add
jbe
stos
lret
outsb
fsubrl
test
nopl
dec
dec
sarl
push
lea
mov
mov
adc
pop
cld
movsl
adc
push
sub
test
lea
mov
mov
loopne
lret
shr
sti
fdivrl
and
mov
lock
adc
cmp
jb
sbb
jp
and
leave
aam
sbb
add
inc
test
cmp
jnp
xchg
sub
dec
inc
sbb
adc
jg
xchg
mov
xor
cltd
aam
stc
jbe
arpl
in
inc
cs
pop
dec
insl
mov
xchg
push
and
add
xor
lea
or
xchg
psrlq
xor
negl
lret
mov
roll
enter
dec
fwait
pushf
in
push
into
cmc
and
insb
mov
mov
inc
addl
aas
sbb
cmp
mov
fs
stc
pop
fldl
inc
sub
arpl
ret
insb
mov
mull
repnz
add
testl
xor
nop
xor
aam
add
rol
mov
xchg
jecxz
xchg
in
and
xchg
jmp
cmp
scas
push
out
scas
addr16
shrb
pop
sbb
jns
movsb
loopne
or
sub
add
mov
imul
jne
in
loop
iret
sbbl
notb
fiaddl
pop
adc
xor
pop
lds
bound
gs
bound
mov
push
das
or
enter
pop
ret
xlat
dec
push
imul
inc
cli
stos
fstpt
sub
or
cmp
jle
push
xchg
cmp
sbb
aad
in
test
sbb
jns
xchg
xor
push
out
jg
lret
cmpsb
mov
push
inc
adc
test
xlat
pop
scas
jle
sub
loopne
xor
inc
mov
cmp
dec
jb
jmp
fwait
push
inc
or
sub
push
dec
mov
out
shrb
and
scas
or
repz
inc
nop
fs
xchg
jge
push
out
rorl
outsb
out
adc
push
out
and
inc
mov
pop
xor
jne
or
pop
pop
into
adc
dec
pop
xchg
nop
fildll
nop
in
gs
push
jmp
in
xor
mov
ret
push
in
js
repnz
mov
sbb
fcomip
mov
mov
rorb
xchg
out
fists
mov
test
jae
rcl
int3
xor
pop
sbb
hlt
cs
popa
and
dec
test
xor
push
push
imul
sub
or
movsb
xor
mov
roll
shrb
sahf
cltd
xchg
inc
adc
aad
sbb
imul
loopne
cwtl
dec
lret
call
jl
test
or
in
xchg
int3
mov
xchg
rcll
sahf
cld
adcb
arpl
xchg
test
fsubrl
fmull
pop
jle
sub
mov
popf
repnz
mov
out
cmp
xchg
fidivs
xor
iret
sbb
mov
adc
sbb
sarl
in
xchg
ret
in
ret
notl
movsl
dec
orl
stc
adc
jo
xchg
lods
daa
mov
mov
insl
push
adc
stos
xchg
sub
inc
sbb
sbb
out
push
xor
inc
add
test
hlt
repz
aad
cmp
jae
inc
cmpsl
pop
adc
xor
jbe
call
mov
ds
int
mov
dec
mov
pop
int3
add
fwait
lahf
leave
xchg
inc
jmp
repz
jno
cmp
int
jg
mov
jmp
xor
flds
cwtl
cltd
ss
xchg
test
fmull
test
add
fstpt
xorb
pop
xchg
add
mov
imul
xor
in
or
addb
les
push
es
mov
stc
adc
in
pop
add
ficoml
pop
jne
call
fdivs
fistpl
jle
out
fiadds
daa
add
scas
cmpsb
jbe
outsb
lds
out
push
out
movsb
and
xchg
stos
add
sbb
pusha
mov
xchg
xchg
or
ja
addb
mov
ljmp
lret
inc
enter
ljmp
dec
adc
stos
inc
jnp
xor
notb
shl
aad
scas
fistpl
add
jo
fiadds
dec
xchg
cmp
into
pusha
and
fildl
inc
je
scas
ds
adc
mov
in
cmp
sahf
pop
in
dec
cmc
xchg
mov
mov
pop
ljmp
mov
lret
mov
andb
xchg
push
cmp
inc
mov
repnz
loopne
jae
jecxz
mov
inc
add
sub
arpl
xchg
cmc
notl
gs
jo
mov
jns
cmpsl
shl
out
lods
out
push
cmp
sub
and
rorl
sub
lcall
cwtl
push
int3
popa
jno
cmp
fs
and
aam
xchg
or
jmp
adc
lds
ret
call
addr16
mov
enter
cli
mov
daa
mull
sbb
sbb
push
cmp
pop
mov
jnp
inc
int
pop
addr16
push
mov
scas
mov
sub
fsubr
mov
sbb
scas
xchg
movsb
add
pop
sbb
xlat
fldl
mov
adc
push
mov
test
sbb
inc
aas
aaa
daa
fnstenv
xor
mov
pop
popa
repnz
mov
mov
push
mov
pop
mov
jge
jecxz
repz
and
cmp
mov
jg
mov
enter
dec
adc
sub
insl
jb
in
jg
cmpb
addr16
stos
jge
dec
mov
dec
jmp
inc
rol
pop
cmc
sub
imul
push
cmpsb
xchg
pop
inc
xchg
lcall
cmpsl
stc
hlt
push
ja
sti
mov
or
adcb
cmp
into
outsl
sbb
mov
fnstcw
das
and
or
cmp
jle
add
jecxz
dec
pop
inc
movsl
loopne
dec
cltd
mov
aad
test
inc
negl
adc
lds
pop
fwait
aaa
xor
push
movsb
out
insl
ret
add
or
jp
xchg
xchg
test
les
outsb
mov
fdivr
mov
cmp
mov
test
inc
and
rolb
aad
or
ss
jle
lods
ljmp
dec
xor
sahf
jae
jb
sbb
dec
mov
sub
popa
cmp
and
sub
fwait
mov
jno
inc
leave
movsb
mov
clc
fsts
xchg
or
add
dec
testl
cmp
imul
push
dec
std
jno
aaa
out
jecxz
push
mov
push
fldenv
mov
das
cmp
stc
jecxz
xchg
jns
rcll
call
into
jle
jb
inc
add
push
sub
dec
pop
scas
lahf
xor
xlat
push
adc
repz
ds
pop
jge
dec
dec
jg
jnp
dec
nop
xor
add
les
lret
and
lods
mov
out
mov
stos
ret
pop
mov
inc
adc
mov
pop
int3
mov
or
cli
mov
adc
push
divl
or
mov
adc
mov
inc
xchg
cmpsl
in
loop
and
sbb
shlb
inc
stc
push
push
sub
aam
sub
sub
addl
lods
repnz
decb
into
push
sbb
xor
iret
adc
mov
xor
rcrl
xor
ret
mov
cmc
cmc
dec
aaa
adc
test
push
ret
stos
in
pop
mov
jge
insb
mov
push
in
arpl
cmpsl
loope
shr
push
pop
mov
arpl
push
push
fdivrl
sbb
fmuls
into
repz
dec
sbb
mov
xchg
dec
xor
popf
cmp
xor
mov
xchg
mov
aad
jns
dec
sub
inc
popa
push
adc
scas
into
jns
jmp
xor
fwait
arpl
add
rorb
mov
sbb
dec
popf
fdivs
call
xchg
cmpsb
call
or
pop
int
iret
or
insb
rcl
cmp
fidivl
xlat
mov
xor
sub
adc
insl
sub
cmp
lds
mov
and
mov
pop
jae
adc
fdivs
inc
arpl
xchg
std
movb
mov
add
pop
push
xor
pop
ret
lahf
lds
mov
add
sbb
mov
push
ljmp
xchg
mov
imulb
inc
dec
in
out
cmpsb
je
dec
ret
dec
and
inc
test
push
xchg
out
adc
loopne
sbb
mov
jmp
xlat
add
push
or
add
inc
nop
dec
dec
jb
lcall
jle
int
mov
pop
cmp
mov
and
out
cmp
repz
jae
sub
pop
mov
les
hlt
or
imul
sub
cwtl
adc
mov
rcrl
test
jmp
sbb
stos
mov
pop
adc
lretw
push
js
clc
inc
clc
aaa
xchg
inc
and
and
or
pusha
shll
xchg
aas
fs
push
mov
aaa
mov
sub
mov
cmpsb
aam
pop
add
jo
std
pop
cmp
leave
xchg
fwait
pop
lea
addb
mov
jge
out
aam
dec
xchg
cmpsl
pop
jp
jg
rcrl
jl
or
lods
nop
out
in
mov
test
cltd
jae
mov
addr16
jne
lods
push
sti
pop
fcmovbe
xchg
nop
pop
mov
test
stc
pop
xchg
cmpl
sub
ss
mov
hlt
push
xchg
xor
jp
inc
lods
pop
and
orb
jb
aad
jne
popf
pop
idivl
xchg
cmc
cmp
hlt
and
scas
and
stos
arpl
mov
jecxz
stos
add
fisttpll
jae
push
jp
add
popf
or
jb
fcom
cmpb
push
in
neg
call
inc
addr16
xchg
sti
sub
xchg
fstl
movsl
mov
push
icebp
cli
cwtl
push
pop
push
xor
into
and
xor
daa
je
mov
jecxz
jno
or
mov
pop
push
lds
inc
mov
lret
mov
push
pop
cmp
vcvtdq2pd
cmpsl
push
inc
push
in
jne
jbe
sub
sub
jmp
fstl
loop
mov
inc
sbb
xor
adc
outsl
int3
cmc
mov
mov
rorb
xchg
in
mov
sub
xor
in
add
fnstenv
add
cmpsb
dec
fldl2t
jg
inc
sbb
fwait
inc
shrl
fnstsw
into
dec
arpl
mov
push
sub
lods
roll
xchg
sahf
mov
push
adc
stc
scas
push
mov
add
outsb
lea
dec
sub
icebp
rcrl
or
push
push
jbe
sahf
sub
jne
mov
sbb
push
loop
xor
xchg
out
pusha
push
push
jp
push
lahf
daa
mov
sbb
loop
xchg
lahf
or
movsl
pop
inc
ret
and
pop
adc
adc
es
fs
lret
xchg
loope
out
outsb
pop
pop
ss
or
in
dec
lock
mov
lcall
xchg
inc
xchg
sbb
or
push
jmp
add
loop
and
in
idivb
addb
cmp
and
lcall
arpl
sub
dec
stos
dec
push
adc
push
mov
cmpsl
sub
adc
adc
adc
sbb
xchg
daa
jno
gs
fsubrs
lsl
jbe
movsl
inc
das
pop
arpl
xor
or
imul
stos
leave
imull
out
call
adcl
and
lods
into
iret
lret
mov
push
stos
sti
lock
movsb
inc
fdivs
cwtl
inc
dec
xor
insl
jge
stos
add
insl
dec
rcl
mov
mov
bound
daa
into
das
out
stc
xor
das
xor
loopne
add
mov
pop
xchg
stos
adc
daa
insl
repz
jb
in
test
out
inc
stc
popa
aas
inc
in
call
dec
stos
das
iret
clc
out
jmp
cli
stos
ljmp
sti
mov
movsb
dec
xchg
xchg
jno
stc
and
inc
mul
loop
decb
adc
aas
inc
xor
cmpsl
lods
lcall
push
mov
mov
inc
sub
sub
clc
jmp
or
std
movsl
fsubr
imul
jecxz
popa
adc
lods
cmc
jp
jbe
pop
or
inc
ret
adc
sbb
add
pop
dec
jl
jno
ret
mov
cmp
mov
loope
cmpsl
mov
pop
or
sub
inc
push
push
or
pusha
push
lcall
add
inc
gs
arpl
fisubs
cmpsl
cmpsb
or
sub
xor
dec
movsl
lahf
dec
xchg
mov
xlat
xchg
test
addr16
fildl
ja
clc
out
in
sar
fs
xchg
pop
mov
push
add
scas
es
ljmp
aas
xchg
rcll
aad
rcrb
shlb
rclb
adc
fwait
pop
mov
mov
mov
xor
push
push
or
scas
out
inc
xor
xchg
xrelease
pop
inc
cmp
mov
sbb
adc
fwait
mov
jecxz
mov
xor
mov
aaa
jnp
testb
jecxz
mov
sbb
jg
pushf
mov
ficoms
and
add
lret
xchg
nop
mov
add
fnstcw
dec
pop
outsb
dec
jno
mov
and
lcall
loopne
faddl
xchg
xor
dec
in
adc
xchg
clc
and
push
xor
mov
int
subl
subb
outsl
jp
and
mov
gs
mov
add
xchg
and
cli
pop
adc
into
outsb
mov
out
push
mov
not
pushf
popa
mov
lahf
adc
push
mov
cmpl
jmp
icebp
inc
daa
out
and
and
lea
add
or
add
test
and
inc
loope
testb
sub
cmp
and
inc
les
inc
and
scas
cwtl
push
sub
push
and
xchg
call
cld
or
int3
xchg
loop
push
push
in
pop
sbb
inc
stos
sub
fwait
addr16
push
adc
fisubs
xchg
push
roll
cmpsl
or
dec
out
std
dec
pop
xor
scas
aaa
or
ret
addr16
xor
inc
sbb
jp
popa
movsl
pop
jmp
es
loopne
idivl
addb
cmp
lcall
cmp
test
mov
sahf
inc
inc
mov
leave
fcomip
mov
fcoml
xchg
pop
cmp
pop
adc
xor
pusha
aam
mov
xor
mov
into
in
hlt
repz
pusha
stos
pop
lods
adc
rorb
and
sti
icebp
test
movsb
cmp
call
mov
jbe
mov
cmpsl
dec
sbb
mov
lock
dec
stos
loopne
test
mov
mov
ja
lods
adc
push
or
adc
fcmovbe
ja
in
dec
lahf
inc
sbb
jmp
pop
and
xlat
in
cld
cmp
lahf
jecxz
dec
lods
mov
mov
adc
sbb
push
lods
lods
xor
test
js
cs
cmc
loopne
scas
mov
mov
xor
std
adcb
nop
sbb
shrl
push
add
idiv
inc
dec
xlat
mov
cmp
xor
cmpsb
addr16
arpl
das
mov
rcr
pushf
data16
mov
imul
arpl
mov
dec
inc
clc
mov
ss
arpl
push
ret
sbb
daa
sub
mov
adc
ss
out
push
sahf
lcall
lods
xorb
inc
lahf
mov
mov
jge
loop
daa
or
jae
or
and
add
andl
xchg
inc
lret
mov
mov
ds
push
mov
mov
sub
push
sub
and
and
and
aas
or
jl
dec
push
les
jns
ds
push
imul
xchg
xchg
movsb
pop
xchg
daa
xor
sub
push
mov
cli
push
incl
sbb
mov
dec
jbe
xchg
push
mov
mov
sub
pop
or
shrl
cltd
inc
flds
cmp
jmp
pop
pushf
and
sarb
jmp
out
or
push
jns
pop
movswl
ret
mov
mov
int
into
cmp
lds
jp
mov
mov
enter
inc
pop
sub
pop
xlat
out
shlb
jo
sbb
xchg
mov
add
dec
jl
je
and
inc
mov
mov
cmp
setne
loope
push
inc
clc
add
loopne
or
pusha
mov
out
sbb
jecxz
repnz
mov
gs
jge
xchg
mov
fwait
mov
daa
or
cmp
xor
aad
cltd
test
testl
shll
push
xchg
jo
in
lret
shlb
roll
in
pop
jb
push
add
cmc
mov
lcall
jg
xchg
imul
mov
cmp
dec
mov
shlb
stos
jne
cmp
fdivrl
ficoms
out
ss
and
call
es
in
call
mov
repz
ljmp
mov
in
cmp
mov
enter
mov
sub
pop
pop
add
dec
stc
movsl
or
int3
jo
stc
cmp
das
data16
adc
iret
jne
dec
mov
xchg
sub
mov
mov
repz
popf
xchg
sbb
mov
inc
out
xlat
cwtl
int
popf
dec
rorb
push
cmovg
xchg
pop
jb
loop
and
or
mov
out
popf
and
jbe
xchg
rclb
hlt
xor
xchg
into
pop
js
add
mov
ret
ret
call
sbb
sub
push
mov
outsl
jl
gs
or
xchg
lock
shrd
sbb
mov
push
and
or
push
ss
loop
jle
in
pop
or
int3
cmpsb
mov
rclb
test
mov
dec
mov
and
aas
hlt
out
add
inc
pop
add
lods
cltd
aam
push
mov
sti
push
nop
mov
pop
dec
andb
jge
push
lret
push
xor
push
jp
mov
or
mov
ffree
popf
push
dec
sbb
mov
andl
movsl
xchg
shl
shll
and
out
cmc
mov
jnp
jp
les
cmpsb
inc
inc
test
cmp
inc
repnz
int3
push
sub
test
xor
xor
pop
inc
or
pushf
xor
arpl
or
rol
loope
rorb
and
jno
inc
fstpt
push
loop
insl
sub
push
repnz
xor
lcall
inc
sbb
cmpsl
xor
and
sub
lcall
sub
icebp
xchg
sub
pop
dec
leave
pop
or
push
repz
jno
ret
iret
stc
inc
stos
or
sub
pop
fistl
cmpl
lcall
sahf
xchg
mov
or
inc
out
inc
fldt
mov
jo
stc
shrl
or
mov
adc
ret
lods
cmp
pop
je
xchg
mov
push
aad
fistpll
sti
jne
push
repnz
loop
jne
dec
pop
out
or
in
bswap
sbb
adcb
sarb
test
int
aas
ret
jle
daa
jle
stos
sub
xchg
dec
add
scas
add
cld
add
xor
adc
pushf
testb
fnsave
and
sbb
jmp
movsb
mov
dec
loopne
mov
mov
push
cmp
xchg
ds
fcomps
and
stos
in
and
pop
pop
out
sahf
movsb
aad
test
xchg
leave
loope
and
insb
sub
mov
aaa
scas
mov
cs
lret
stc
lods
in
pop
push
xchg
push
test
cli
lds
mov
into
sub
xchg
push
xchg
fimuls
lret
and
sbb
jnp
outsb
dec
fdivrp
add
sbb
jg
sub
mov
pop
aas
xchg
sti
mov
xchg
pop
es
syscall
sti
outsl
adc
and
xchg
xchg
inc
mov
cld
sbb
add
jb
jle
mov
mov
ljmp
mov
call
inc
mov
jle
cld
rolb
inc
movb
mov
xor
call
test
mov
pop
mov
push
inc
scas
jno
test
psrad
and
sti
pop
outsl
mov
mov
rcl
mov
sbb
dec
sbb
adc
push
xchg
inc
pushf
push
inc
push
xchg
mov
add
push
mov
nop
push
ficompl
clc
popa
aas
lods
lods
rep
out
dec
cmp
cli
cwtl
movsl
out
iret
aaa
pop
mov
sub
inc
pop
es
mov
or
ljmp
fwait
cltd
filds
inc
push
cmp
or
jmp
cmp
cmp
ret
stos
dec
dec
lret
test
lret
jle
sbb
inc
adc
pop
xor
mov
mov
cs
pop
loopne,pt
mov
outsl
out
mov
xlat
pusha
or
mov
xorl
bound
adc
push
xor
mov
sub
dec
int
sbb
and
jae
cmp
arpl
stc
cmc
arpl
xchg
and
fdivr
call
pushf
cmp
dec
pop
dec
cmp
in
jg
rorl
std
dec
gs
loop
sahf
popl
mov
mov
sub
ds
adc
lods
ljmp
mov
xor
xlat
imul
mov
sbb
hlt
push
pop
aaa
frstor
js
or
movsb
or
cmc
shlb
adc
cmc
int3
dec
divl
in
mov
sbb
push
shll
add
popf
and
test
hlt
lds
inc
rorl
pop
mov
xchg
mov
call
arpl
cmp
rolb
mov
cmp
push
call
les
add
cltd
ror
or
inc
lret
jo
lahf
push
xor
push
icebp
jo
lock
test
jns
cwtl
xor
stc
je
xor
scas
dec
ja,pn
cmp
pop
dec
mov
fistl
int3
xchg
or
rolb
mov
inc
sbb
mov
loop
xor
loop
pmaxsw
scas
rcr
xor
sub
fnsave
sub
jne
in
sub
cmpsl
ds
lods
xor
xchg
xchg
mov
out
shlb
int3
xor
pop
shll
adc
std
mov
lods
fistpll
adc
pop
mov
dec
jmp
dec
jge
pop
subl
push
inc
sbb
out
mov
jno
ret
xor
lods
sbb
popa
sub
xchg
test
xchg
mov
lods
testb
iret
cwtl
std
mov
fisttpll
xchg
mov
sarb
push
mov
mov
gs
fbstp
mov
mov
push
add
pop
mov
inc
neg
addr16
in
cmp
cmp
cmp
test
add
pop
adcl
ljmp
cwtl
sub
ja
ret
cmp
jbe
add
das
lcall
int
cwtl
xchg
lock
dec
xor
outsl
mov
mov
rcll
mov
iret
rolb
sub
in
mov
fbstp
call
add
roll
cmpl
or
pushf
aad
aaa
add
jne
addr16
xor
xchg
push
fiadds
js
rcrb
pop
lods
popa
mov
jl
jns
stos
and
pop
arpl
mov
or
mov
mov
mov
dec
mov
insl
gs
pop
leave
ds
into
loopne
xor
stos
dec
out
sub
shl
mov
loop
ljmp
sub
loop
mov
dec
jnp
push
mov
inc
sbb
mov
scas
insb
addl
insb
pop
xchg
xor
fisttpll
mov
imulb
leave
adc
fs
push
dec
pop
sub
jno
je
ss
dec
mov
jo
mov
data16
jnp
sti
repnz
jg
inc
inc
loopne
pop
fwait
mov
out
add
adc
bnd
xchg
imul
loop
and
fsubs
mov
lods
sbb
outsl
push
mov
sbb
jge
mov
arpl
mov
dec
out
sub
jno
repnz
xchg
shrl
addb
mov
leave
xor
xchg
aas
lods
addr16
cltd
xchg
mov
add
jbe
ret
jp
enter
mov
fnsave
scas
imul
aam
jno
out
icebp
jl
shl
rcl
aaa
cmpsb
adc
rcr
cwtl
dec
iret
adc
jbe
js
inc
pop
jno
dec
adc
mov
xchg
out
daa
mov
pop
xor
xchg
dec
mov
cwtl
adc
rclb
icebp
inc
bound
loop
in
or
jbe
add
clc
pop
jp
nop
stos
dec
xorl
and
lea
leave
add
cmc
aad
sbb
cltd
popa
xchg
out
repnz
cwtl
cld
mov
xor
and
fldt
test
and
add
mov
cli
dec
sub
pop
call
movsl
xor
cmc
scas
enter
xchg
push
movsl
mov
and
sbb
lahf
push
adc
or
dec
xchg
lods
add
addr16
cld
sbb
dec
out
insl
or
sbb
in
into
subl
faddl
pop
sar
xor
push
out
sbb
iret
data16
and
cmpsl
addr16
mov
cwtl
pop
inc
repnz
rol
test
sbb
pop
adc
cltd
jp
adc
lea
clc
cmpsb
mov
imul
push
mov
and
mov
daa
mov
sub
adcb
add
ds
lods
inc
clc
ljmp
cld
or
and
jo
leave
stc
sub
sti
xchg
pop
pop
jle
inc
pop
sarb
ja
mov
sbb
adc
stc
shrl
movsl
std
xchg
testb
fs
lret
scas
sbb
insb
pop
cmp
mov
pop
inc
aaa
ret
sub
testb
subb
loope
loop
sub
sbb
ss
das
aaa
and
jg
sbb
jae
mov
xchg
jns
and
andl
inc
subb
or
or
pop
dec
test
sbb
nop
fidivs
jge
and
and
nop
cmc
mov
inc
insl
fistpll
int3
imul
iret
adc
xchg
iret
add
jno
ret
insb
jo
jo
and
or
js
ljmp
inc
jb
sub
cmp
ss
dec
mov
outsb
push
or
jge
testl
sti
xchg
popa
mov
rol
or
lret
out
rorb
js
rep
xor
cmp
imul
mov
fsubl
fisubrl
sub
sbbb
fistpl
xchg
jecxz
in
sub
fidivrl
int3
dec
pusha
jge
sbb
add
push
aas
lods
sbbl
mov
sbb
int3
jle
fnsave
stos
out
test
call
cmp
movsl
stc
idivl
aam
xor
adc
pop
and
and
and
pop
mov
dec
xorb
jecxz
push
push
lock
sub
jp
or
mov
mov
fists
test
dec
les
cld
mov
dec
fldcw
cmp
arpl
push
scas
cmovno
jo
push
pop
movsl
xchg
mov
adc
dec
push
lock
pop
popl
jmp
das
clc
inc
jle
lcall
mov
jno
fnsave
ret
fdivp
and
adc
popf
aas
adc
scas
and
rclb
int
ljmp
pop
popa
std
jbe
faddp
fs
push
pop
add
repnz
dec
out
dec
inc
lds
dec
arpl
pop
or
pop
pop
xchg
dec
mov
xchg
push
push
mov
sbb
push
ja
add
scas
data16
sbb
dec
cwtl
add
or
adc
jge
dec
and
inc
aad
and
sbb
xchg
and
push
push
sub
fucomp
pushf
xchg
mov
ficoml
or
das
adc
out
mov
push
pushf
jmp
dec
test
mov
jb
lods
push
lock
popf
arpl
or
cmpsl
ds
lret
add
jle
add
lea
in
inc
lods
inc
fstpt
jl
pop
out
dec
pop
fs
ss
xor
lods
ja
mov
jne
call
int
mov
adc
adc
lret
imul
xchg
and
in
daa
sbb
mov
fsubrs
inc
out
or
mov
sbbb
nop
mov
rcll
in
movsl
ja
repz
push
dec
addr16
pop
xchg
fisubs
sub
repz
ljmp
cmpsl
dec
movsl
xorb
mov
mov
inc
clc
xlat
arpl
dec
into
cwtl
mov
je
or
lahf
pushf
jle
dec
stos
js
xor
sbb
pop
mov
mov
mov
jne
sub
adc
cmp
mov
xlat
sub
in
jno
inc
jo
sub
mov
push
inc
cli
or
add
cmp
negl
inc
rclb
aad
adc
std
jecxz
lret
adc
add
in
cltd
test
scas
push
icebp
sub
xchg
scas
hlt
mov
bound
mov
loop
clc
and
mov
lock
or
clc
adc
pop
mov
test
xor
push
xor
js
ret
push
xor
adc
rcl
aad
mov
cmp
dec
xor
mov
push
or
mov
xchg
movsb
mov
xor
inc
mulb
je
and
adc
xchg
loope
xchg
mov
xor
mov
aaa
pusha
mov
mov
in
lret
repz
or
fwait
stos
scas
daa
mov
enter
xor
cmp
inc
stos
mul
mov
jge
leave
and
push
mov
adc
mull
je
int
pop
iret
sub
xchg
sub
clc
mov
push
imul
cmp
addl
adc
scas
adc
jnp
insl
in
hlt
xor
sarl
xchg
lods
or
and
les
repnz
sub
jle
dec
sub
sub
sub
ds
ss
lds
or
mov
adc
loopne
jo
mull
cwtl
or
xor
pop
cli
inc
pop
je
cmc
fucomi
mov
add
sarb
xchg
iret
lcall
jne
fwait
test
pop
jnp
xchg
and
or
pushf
es
adc
test
adc
sbb
fadd
out
cmp
shlb
inc
cmpl
ror
pop
mov
test
lock
mov
and
or
mov
test
dec
movsb
mov
shlb
repnz
ret
mov
push
lahf
inc
data16
nop
roll
sub
ljmp
push
mov
pop
pushf
adc
fwait
popa
cmpb
cmp
sbbb
push
subl
imul
dec
mov
xchg
mov
push
enter
cld
mov
lcall
or
repnz
cmp
sub
cmp
push
aam
mov
out
xor
ljmp
jge
inc
mov
aad
lods
mov
cli
inc
call
mov
mov
and
jb
cmp
xchg
into
push
test
loop
jmp
insb
add
jle
mov
lret
mov
cwtl
dec
in
adc
mov
mull
sub
sti
cwtl
imul
jae
and
xchg
fimull
insb
test
enter
push
test
jge
cmp
lods
ljmp
and
xorb
clc
mov
test
lods
mov
mov
in
push
insl
xchg
ret
lds
iret
cmp
push
data16
lods
inc
cld
adc
push
rolb
xchg
adc
dec
fcompl
jno
cmpl
sub
jns
imull
pop
iret
push
push
in
sub
dec
or
sbb
fmuls
jno
and
aas
and
mov
lcall
gs
ja
popf
std
dec
sub
push
ret
pop
lds
cmp
ljmp
sub
push
popf
sbb
mov
xchg
test
aad
testl
rolb
cmp
loope
jmp
mov
pop
aam
ret
andl
add
sub
push
push
or
pop
lods
and
sbb
cmpsb
add
hlt
pop
clc
xor
adc
in
dec
sub
adc
push
dec
sbb
mov
or
ss
mov
pop
inc
sbb
shll
and
outsb
jo
popf
test
pop
pop
aad
or
in
rcrl
push
dec
dec
cmc
mov
aaa
inc
pop
scas
xchg
adc
gs
jno
dec
imul
fsubl
sub
imul
xchg
stos
test
mov
cmp
fadd
inc
add
cmp
in
mov
push
aad
mov
push
push
in
ljmp
jecxz
lahf
push
arpl
fisubs
mov
ret
fwait
sbb
jns
xor
push
loope
rcll
into
test
xchg
push
and
dec
cmpsb
mov
xchg
mov
outsb
outsl
and
mov
push
pop
or
xchg
bound
and
rorl
lods
std
push
and
test
sbb
pop
sbb
outsl
lods
les
mov
aaa
jle
roll
das
push
dec
mov
push
jae
adc
loop
or
mov
les
mov
pop
fcoms
aad
lret
lods
jnp
es
mov
jg
add
sub
mov
imul
ss
shrl
lahf
mov
hlt
ror
mov
pop
dec
je
lcall
adc
sar
pop
jmp
lds
push
jne
stc
jecxz
cld
popf
lods
bound
sub
aad
sbb
gs
push
icebp
pop
out
push
gs
int3
push
out
ja
fldl
int
insl
add
and
movsl
repnz
and
aaa
lahf
xor
lret
dec
dec
mov
push
lcall
mov
jo
stos
int
pop
hlt
jb
push
mov
cmp
rorl
dec
adc
sub
sub
test
nop
mov
out
imul
cwtl
jno
mov
cld
notb
ret
int
inc
jne
mov
enter
sbb
loope
mov
loop
pushf
mov
inc
adc
inc
mov
aaa
scas
add
stos
ret
dec
xchg
xchg
rolb
xor
adc
or
stos
xor
sbb
sti
mov
ss
aaa
ret
inc
ud1
ret
stos
sub
imulb
in
xor
mov
mov
movsb
js
ds
cmp
cmp
faddp
sub
dec
imul
adc
call
mov
jge
cmp
pop
bound
push
cmpsb
lcall
movsb
bnd
jl
pop
mov
repnz
sbb
lret
in
xchg
xlat
dec
xor
pusha
movsb
popa
test
pop
inc
mov
mov
mov
jae
jns
popa
movsl
daa
in
insl
dec
lret
loope
pop
mov
inc
xchg
sub
insb
jge
popa
inc
out
in
in
lret
inc
mov
cwtl
cmp
pop
mov
push
fs
xchg
aaa
sbb
aam
cmpsl
lds
add
das
pop
jmp
gs
iret
ror
scas
icebp
cmp
subl
ret
scas
mov
jnp
xor
jg
sbb
mov
int3
mov
and
xchg
test
movsb
jno
gs
cld
mov
repz
sahf
push
lea
gs
push
stc
ss
and
adc
sbb
out
cmp
fistpl
popa
stos
mov
xor
dec
lret
mov
xchg
arpl
adc
mov
push
test
mov
enter
jae
out
sub
push
orb
xchg
rorb
sbb
mov
jnp
pop
in
mov
cmp
jmp
push
add
mov
ja
mov
aam
in
cli
shll
test
cli
outsb
dec
mov
outsb
xor
int3
or
mov
push
push
mov
push
out
mov
int
stos
add
pushf
inc
jle
cmp
push
inc
bound
lret
fdecstp
mov
jg
or
insb
or
lods
or
pushl
jo
inc
mov
data16
fdivrl
repnz
ret
je
or
ja
push
mov
pop
inc
and
jp
fidivs
cmp
aas
in
stos
jecxz
aad
sti
icebp
sub
aas
jecxz
dec
pop
hlt
xor
jb
imul
in
sub
push
fistl
sub
arpl
rcrl
adc
repnz
ret
ja
pop
cmc
adc
movsb
sbbb
cs
inc
hlt
sub
sub
aas
xor
xor
adc
mov
adc
push
pop
and
jb
jl
xchg
js
jnp
xchg
jbe
insb
dec
jp
adc
push
addr16
pop
sub
jb
loopne
popa
popf
mov
mulb
jns
repnz
in
add
test
hlt
jle
test
dec
int
cmp
mov
das
mov
test
nop
mov
jmp
mov
repz
xchg
call
pcmpgtd
inc
subb
xor
cmp
sub
insb
in
push
adc
fwait
jle
sti
add
in
dec
mov
mov
fwait
das
addr16
das
ds
or
aam
aad
xchg
mov
cld
fsubr
pusha
inc
jmp
pop
aam
mov
stos
pop
mov
mov
xor
mov
popa
inc
sbb
outsl
call
jnp
xchg
out
mov
cmp
nop
pop
sub
in
popf
lock
clc
movsb
out
out
pop
movsb
pop
pop
sbb
and
pop
or
or
dec
sbb
out
cli
cmp
jne
pop
sub
cld
inc
testb
sbb
jns
aaa
jnp
jbe
sbb
or
into
push
mov
jns
lret
lock
inc
xchg
mov
mov
imul
scas
mov
xchg
jae
pusha
add
jle
sbb
lock
lret
xor
adc
lock
pop
jmp
sub
mov
in
and
or
xlat
test
lea
sbbl
lcall
or
movsl
and
jmp
pop
push
ffreep
add
pop
mov
cmp
cld
aad
cmp
mov
aam
pop
lds
cmc
xor
in
icebp
pop
lahf
lea
bound
adc
std
xchg
dec
push
mov
add
cmp
stos
test
jmp
mov
dec
rorl
mov
mov
cmpsl
imul
jae
cmpsb
test
addr16
push
mov
clc
dec
gs
sahf
inc
pop
add
and
ja
lahf
mov
sti
mov
lods
xor
pop
dec
push
das
fistpll
mov
std
in
mov
jae
push
notb
notl
push
pop
fldl
jp
fnstcw
filds
imull
sub
sbb
pop
pusha
adc
or
flds
test
jp
ja
gs
mov
add
gs
jp
into
icebp
cld
adcb
arpl
xor
cli
mov
je
add
push
sub
xchg
push
daa
cmp
rcr
clc
sbb
add
add
pop
mov
add
push
stos
mov
aam
fldl2t
pop
xor
in
ds
sub
and
sub
int
xchg
or
movsb
cmp
repz
or
mov
mov
sahf
adc
jle
shll
inc
das
cmpsb
mov
pop
inc
orl
pop
loope
loop
and
jp
icebp
cmp
arpl
push
push
xchg
orl
and
xor
pop
decb
pop
cmp
xchg
xor
test
mov
pop
xchg
xlat
les
mov
idivw
pusha
pushf
mov
arpl
arpl
rorl
xor
mov
loope
and
or
add
cmp
xor
jns
push
jmp
jle
pop
cmc
pshufw
sti
push
dec
push
lock
cmpsl
sti
out
outsb
in
sti
pop
ja
push
jmp
in
adc
in
outsl
int
lret
call
jmp
enter
mov
and
xchg
roll
inc
add
in
add
shlb
lret
fisttpll
jno
sub
dec
jae
ret
mov
ljmp
add
out
shl
lret
inc
xchg
jo
fadds
outsl
inc
loope
scas
das
jp
add
dec
jne
mov
aad
push
leave
in
xchg
push
and
fwait
rol
imul
add
mov
inc
sarl
cmpsl
jbe
rcll
jae
jg
sub
jno
outsb
imul
lret
mov
xlat
sub
jae
mov
into
adc
adc
sub
shrb
cmp
add
js
mov
cmp
pop
xor
cmpsl
mov
mov
or
pop
adc
stc
into
jo
pop
pop
mov
pop
loop
mov
mov
iret
hlt
call
out
jb
mov
jle
fistpll
sbb
pop
lahf
jmp
inc
ret
cmp
mov
pop
cli
jne
test
mov
xor
dec
dec
mov
jo
rcr
push
out
xchg
add
push
int
sbb
fcmovnu
jmp
aas
xchg
cld
dec
lahf
cmp
mov
pop
cltd
xor
mov
bound
into
movsb
dec
jg
test
mov
jmp
std
fldt
inc
fmuls
fisubrl
je
xor
in
jns
push
push
mov
fisubs
push
push
and
add
sub
insl
mov
out
and
filds
jne
in
pop
mov
cmpsb
push
and
inc
jo
ljmp
adc
mov
loope
or
dec
and
out
mov
dec
clc
das
in
fldl
push
es
mov
outsl
xchg
sbb
adc
add
sbb
lods
loop
inc
movl
lea
and
jns
movsb
lods
rcrb
xlat
cmc
mov
mov
fwait
inc
adc
add
dec
jl
out
aaa
pop
sub
cmp
mov
outsb
out
lea
ljmp
arpl
sub
xchg
sub
or
mov
mov
pop
fwait
push
dec
call
jo
dec
jns
cmp
and
xchg
adcb
adc
jnp
adc
sub
rcrb
push
pop
sbb
mov
addr16
xchg
xor
movsl
add
push
arpl
icebp
mov
pop
enter
mov
jne
scas
sbb
adc
mov
popf
mov
pop
dec
cmp
es
cmp
jl
adc
jno
sahf
jb
ret
leave
add
insl
jle
sub
rcrb
sub
xchg
std
ja
pushf
push
dec
adc
in
fiadds
fmull
xor
xchg
adc
pop
repnz
jne
cmp
jbe
and
in
jnp
mov
nop
and
leave
cmpsl
or
ljmp
push
pushf
je
das
int3
mov
cmc
into
call
cmp
adc
imul
daa
push
mov
push
xchg
into
fucomi
incb
std
inc
pop
pop
push
mov
jns
outsl
icebp
mov
or
rorb
insb
hlt
adc
xor
fld
dec
mov
jae
scas
sub
mov
push
pop
es
out
jg
lcall
push
push
xor
mov
cmp
fsts
lret
and
sub
aaa
loopne
or
sahf
cmp
mov
dec
cmp
bound
inc
xchg
jecxz
loope
fcoml
mov
pop
or
in
dec
cmp
test
cld
ds
cld
pop
xor
dec
dec
add
rorl
bound
dec
mov
jmp
xchg
xor
leave
popa
cmp
test
icebp
jae
xor
mov
jns
mov
add
push
mov
les
ja
inc
divl
rcrb
push
inc
ds
mul
sub
pop
fistpl
data16
mov
mov
dec
out
pushf
cmp
pop
mov
addr16
sar
cli
sbb
adc
jns
mov
hlt
jp
push
stos
insl
mov
inc
filds
movsb
inc
sbb
aas
adc
cmc
dec
shlb
sub
xchg
mov
dec
push
mov
dec
aas
pop
xor
sbbl
into
lods
sub
iret
adc
imulb
dec
xchg
pop
push
pop
gs
je
push
mov
data16
mov
scas
inc
clc
xor
push
push
lods
jnp
cmp
push
leave
orb
js
scas
ret
xor
jbe
cmp
jb
push
adc
xchg
mov
jb
xchg
xor
mull
ja
push
pop
addl
xchg
xlat
jno
mov
in
out
jnp
pop
xor
adc
nop
xchg
pop
jnp
cltd
and
shll
fidivrl
cmp
jmp
add
inc
add
mov
mov
jbe
gs
mov
add
dec
lods
xchg
dec
mov
push
jl
jl
ss
pop
es
nop
imul
mov
add
pop
insb
lret
test
fwait
rcrl
loopne
adc
push
stc
push
daa
in
mov
sub
adc
cmp
adc
and
sti
imul
jns
push
icebp
and
mov
cltd
xlat
mov
in
push
add
push
repnz
xorb
scas
push
scas
sub
out
imul
pop
rcrb
xor
xorb
cmp
int3
out
in
aam
popf
xchg
rcll
mov
popf
mov
sbb
cmp
inc
pop
and
decl
lods
push
sbb
add
sub
aaa
outsb
shl
xchg
fisttps
push
xlat
push
iret
cs
int
cld
jo
aam
pusha
ud0
jl
test
pop
pop
enter
loopne
xchg
stos
push
in
mov
bswap
adc
popa
sub
outsl
push
loop
icebp
xchg
call
mov
dec
inc
arpl
push
mov
sbb
popa
fsubr
shll
pop
sub
test
in
mov
adc
jb
ret
nop
adc
aam
stc
test
mov
into
cmp
lds
pop
fstl
orb
sbb
inc
pop
mov
mov
push
nop
mov
push
test
jbe
mov
pushf
push
cmp
mov
cs
test
hlt
sahf
stos
push
nop
std
ljmp
loope
xor
mov
in
jge
inc
and
inc
or
dec
fidivl
jns
pop
or
push
mov
out
pushf
xlat
sbbl
outsl
pop
iret
push
cmp
inc
pop
or
test
pop
outsl
xor
ss
aaa
jo
sbb
jmp
mov
adc
pop
jb
dec
dec
or
pop
aad
std
stos
lods
push
push
or
xchg
dec
lods
out
pop
mov
push
or
push
dec
cmp
dec
mov
enter
sbb
mov
out
jne
popa
sti
fsub
sub
jb
push
inc
mov
and
xor
xchg
test
sbb
lcall
adc
pop
dec
jne
gs
in
popa
adc
xchg
addr16
fs
scas
mov
lcall
jns
push
test
test
pop
and
js
repnz
xchg
popa
dec
mov
xlat
mov
les
push
mov
and
out
add
adc
jecxz
loop
jbe
outsb
outsb
fcoml
rcrb
sbb
out
mov
bound
sahf
push
movsb
mov
push
add
jns
mov
lods
xor
push
inc
push
or
test
xchg
test
xor
ja
dec
std
sub
out
les
gs
loop
xchg
call
push
sahf
inc
test
outsb
insl
cltd
inc
fwait
xchg
jp
jle
cmpl
cmp
es
cmp
cmc
cmp
adc
adcl
ret
sbb
mov
les
sub
int3
pop
stos
iret
mov
loopne
mov
cmp
mov
popl
mov
or
stos
out
rol
xchg
aaa
pop
call
jb
popf
test
sbbl
mov
cmp
sub
pextrw
mov
cmp
lods
cmpl
dec
je
ja
jle
aaa
mov
popf
jae
or
or
jne
in
rclb
and
pushl
shl
sahf
dec
jae
mov
xor
stos
mov
mov
mov
jecxz
movsl
aas
inc
cmp
cmpsl
test
dec
or
adc
push
or
les
out
inc
mov
sbb
shlb
fisttps
adc
fisubl
lret
pop
ret
popf
pop
adc
pop
subl
enter
movsl
inc
std
jo
fucomi
test
sbb
das
inc
adc
daa
dec
leave
and
or
or
dec
shrl
arpl
int3
mov
pop
jae
add
pop
popl
pop
mov
movsl
and
mov
cwtl
fcompl
dec
imul
mov
cmp
jge
les
insb
enter
xchg
add
add
push
out
mov
lock
cmp
cmp
aas
lret
add
iret
mov
mov
arpl
mov
and
inc
leave
jb
xor
mov
outsl
fs
cmpsl
test
push
loope
xchg
in
xchg
movsl
pop
inc
lret
cmp
lods
sbb
fsubl
loop
outsb
xchg
loopne
ret
testb
negl
orl
emms
mov
adc
mov
lret
dec
sbb
nop
xor
data16
lods
lret
sub
push
mov
jge
add
cmpsl
leave
mov
push
outsl
or
jle
jnp
int
test
pcmpgtd
data16
pop
jae
mov
iret
in
cmpsl
jo
out
int
add
lock
sub
adc
xor
dec
sbb
sub
jnp
xchg
lahf
arpl
mov
push
addr16
mov
js
xlat
int
aad
jmp
pop
lcall
push
pushf
push
push
cwtl
cmpb
in
mov
add
mov
mov
xor
jns
xchg
cmp
in
mov
out
clc
popf
xor
add
inc
xor
std
std
iret
mov
in
and
insb
sbb
mov
adc
sub
fs
lods
dec
sub
or
cltd
jb
xor
adc
mov
punpcklbw
cmpsl
adc
and
out
pop
testl
lcall
xchg
sub
mov
out
push
mov
mov
mull
mov
adc
js
inc
fwait
sbb
xor
sbb
stc
or
pushf
xchg
push
inc
xchg
je
dec
daa
mov
push
sub
pushf
xchg
enter
mov
push
cmp
xor
mov
out
in
jno
cmp
fcompl
mov
pop
lods
clc
es
jmp
push
xor
pop
mov
pop
jbe
mov
insb
pop
bound
cmp
sbb
cmpsb
test
lock
ss
js
psubq
out
stos
jnp
pusha
mov
popf
in
pop
insb
sbb
insb
adc
dec
fiaddl
imul
mov
pop
daa
push
dec
in
sub
mov
dec
leave
testl
cmp
stos
pop
jle,pn
jp
push
xchg
in
clc
outsb
push
inc
adc
int
xchg
aad
aas
push
add
inc
push
in
add
jg
call
sub
mov
roll
sub
jb
mov
and
push
sbb
cmpsb
mov
or
push
gs
lahf
xor
pop
mov
das
fbld
and
lret
roll
mov
push
mov
testl
sub
mov
jge
sarb
stos
pusha
hlt
test
xchg
test
mov
xchg
mov
adc
rorl
ja
jp
ds
jecxz
jle
mov
sbb
sti
clc
mov
bnd
mulb
jne
lea
or
mov
and
pop
out
xor
sub
mov
in
call
in
fldt
call
sub
popf
stos
ret
mov
ficoml
adc
popa
mov
call
jne
sub
cmpsb
inc
nop
ret
int3
mov
push
in
lds
cmp
push
cltd
mov
sahf
mov
jb
sbb
bound
or
shl
add
test
jmp
pop
mov
mov
gs
and
out
test
cli
jb
cltd
cmpsb
or
xchg
outsb
push
xchg
push
dec
and
jne
mov
icebp
adc
mov
cmp
test
test
adcb
call
sbb
ret
pop
stc
insb
jns
sub
and
xor
ja
mov
shll
movsb
enter
xor
and
rcl
gs
add
movsb
adc
imul
gs
push
or
gs
jns
fcomp
iret
xchg
icebp
dec
dec
cmpsl
add
and
popa
aad
and
daa
mov
jne
lret
and
push
xchg
sti
push
dec
mov
dec
inc
and
cmpsl
xor
fistps
sbb
je
sahf
add
mov
lret
xchg
les
fsubrl
cmp
mov
mulb
inc
xchg
es
sbb
lods
int3
or
dec
add
iret
ret
shl
test
addr16
and
fwait
mov
bound
adc
int3
in
xor
orb
imul
push
xlat
cmc
cmp
jno
dec
frstor
fsubr
xchg
cmp
sbb
loope
sahf
mov
out
cmp
adc
xchg
dec
inc
dec
imul
fwait
push
cmp
icebp
shr
dec
sbb
push
xchg
ja
cmc
mov
ret
loopne
int3
push
test
pushf
xchg
mov
jno
or
or
mov
icebp
xchg
mov
sub
je
or
add
shl
lcall
cmp
pop
jle
rorl
enter
xchg
jne
xchg
jl
jge
mov
idivb
add
aas
add
xchg
mov
lea
into
adc
in
add
enter
cli
cmp
pushf
jg
or
mov
das
or
mov
roll
dec
call
pop
xchg
orl
ret
int
and
iret
in
add
sti
jle
jmp
push
xchg
dec
pop
pop
sbb
or
cmp
dec
addb
inc
pop
jne
and
test
aam
aad
mov
jnp
scas
ljmp
mov
and
out
xchg
mov
icebp
in
dec
insl
call
push
out
lcall
sbb
jmp
fs
jns
jle
add
notl
or
dec
push
lret
dec
in
push
pusha
pop
or
sbb
xchg
pop
shlb
jp
out
pop
fistpl
pop
insb
imul
popfw
cmpsb
aas
and
ja
cmpsb
fnsave
jmp
in
xchg
lock
aad
sti
mov
dec
cmp
ficoml
sbb
fldenv
mov
mov
mov
xchg
jg
mov
aad
sahf
out
in
ret
imul
in
mov
push
pop
push
sbb
aam
insb
mov
sbb
sub
xchg
xchg
lea
pop
xchg
mov
jnp
mov
pusha
cltd
pop
push
and
dec
xor
lret
sbb
xchg
addl
adc
das
xor
fwait
or
sbb
push
lods
lods
xor
ljmp
mov
sbb
dec
sub
icebp
fsts
repz
mov
jo
pushf
push
lret
sbb
xchg
fneni(8087
dec
lret
or
sarb
jmp
xor
test
xchg
mov
or
js
jg
inc
iret
cmpsl
daa
in
pop
cmpsb
sub
daa
sub
lods
mov
aad
fimuls
jo
pop
sti
or
mov
aaa
fcmovb
xchg
sbb
lea
dec
push
mov
fwait
xchg
or
sub
inc
imul
ficoml
cmpsb
in
aad
test
xor
fs
cmp
lds
pop
adc
mov
in
cmc
mov
jno
pushf
jb
ss
ffree
or
and
mov
mov
popa
cmp
xor
push
add
push
dec
in
int3
inc
lret
jns
sbb
or
ljmp
lds
dec
out
cmp
test
inc
dec
out
sub
fdivrl
mov
push
mov
inc
sub
bound
loopne
push
adc
inc
ljmp
cltd
test
popf
push
cmp
pusha
mov
inc
inc
sahf
out
jno
ja,pt
pop
fnsave
push
add
or
fnsave
hlt
in
cmp
mov
out
stos
shlb
mov
in
in
insb
inc
pusha
pop
pop
imul
rclb
lahf
inc
sub
and
scas
jge
in
sub
imull
mov
jno
incl
adc
movsl
ret
mov
hlt
loopnew
xchg
inc
out
inc
jb
and
dec
jmp
ficompl
imul
mov
mov
das
push
testb
and
or
or
mov
mov
dec
stos
decb
push
std
negl
and
xchg
ficompl
or
cmp
ja
test
or
cmpsb
mov
cmp
aas
push
pushl
lret
ja
outsl
pop
jbe
sub
cmc
fcmovnbe
xor
dec
pop
popa
addr16
lock
lea
iret
ret
pop
and
loop
xor
adc
pop
cmp
scas
js
adc
stc
mov
int3
xchg
shrb
mov
in
pop
cltd
test
data16
inc
or
mov
test
sbb
mov
jnp
pop
sbb
lock
mov
ds
icebp
inc
in
push
jmp
call
fidivrs
sahf
movsb
lahf
call
enter
mov
test
sub
mov
inc
push
xor
mov
pop
into
shlb
decl
mov
out
mov
lock
sbb
shll
sbb
mov
pop
pop
inc
sub
je
sub
jb
loop
mov
jmp
cld
repnz
mov
loop
add
hlt
sbb
dec
jae
xor
fwait
xor
push
stc
scas
mov
ja
jb
jl
xor
aam
pop
xchg
aas
inc
xchg
loop
ljmp
sub
push
cmp
aaa
loopne
mov
mov
or
mov
mov
int3
mov
icebp
rcll
mov
addr16
popa
add
loop
pop
out
jbe
jo
loop
das
test
mov
mov
in
jns
and
lcall
pop
dec
mov
data16
add
shrl
inc
movb
pushf
mov
rcl
outsl
xor
and
mov
lcall
rcl
xlat
push
insl
mov
pusha
adc
repnz
mov
ja
es
repz
in
sub
les
insb
loop
jge
shll
dec
sbb
xchg
xchg
mov
cli
fwait
cmp
and
inc
pop
mov
mov
out
shrb
out
pop
andl
add
dec
and
cli
adcl
mov
jl
aaa
into
mov
sub
shlb
pop
cld
add
and
fwait
add
or
sub
jg
inc
xor
out
fs
lods
in
fcoms
jge
sahf
je
mov
mov
cmp
aam
sub
cmc
add
mov
push
cmp
scas
fs
lods
in
fcoms
in
xor
pop
insl
add
cli
jne
fstps
out
insb
and
or
stos
and
icebp
xchg
pop
pop
out
lahf
in
push
mov
fistps
jns
fcos
push
mov
sbb
insl
sub
lods
popa
mov
pop
xchg
cmpsb
lret
cmc
add
sub
adc
rcll
mov
xor
inc
rolb
mov
cld
mov
add
popa
sbbl
dec
xchg
lcall
cs
push
popf
dec
test
sub
aam
sti
shl
out
jl
cwtl
sbb
shll
pop
mov
mov
data16
xor
and
mull
imulb
mov
dec
lds
add
pop
mov
xchg
scas
add
shrl
xor
fs
out
hlt
outsb
mov
mov
cmp
test
and
sub
jmp
lock
fwait
outsb
out
int
pushf
add
cli
cmp
enter
les
pop
aad
in
mov
push
cmp
xlat
jne
push
pop
add
cmp
jo
inc
fwait
int3
rorl
pop
jbe
add
cmp
orb
dec
addr16
mov
xor
in
fwait
cld
lock
int
cld
xchg
loopne
pop
mov
imul
xlat
push
jbe
sbb
mov
stos
stos
rcr
outsb
and
hlt
mov
push
jg
jle
xchg
xchg
decb
jl
xor
orb
insb
pop
dec
stc
sbb
ss
es
push
adc
shrb
pop
lods
mov
punpcklwd
daa
and
xor
repz
fsubl
dec
jns
xlat
ret
sti
jecxz
sar
cmp
sarl
xor
and
sub
test
jns
sarl
mov
cmpb
lods
lea
jl
pushf
mov
mov
cmpsb
push
fs
add
je
jecxz
mov
fiadds
sub
pop
int3
sbb
shr
lock
dec
in
mov
jmp
jle
pop
js
cmp
clc
jecxz
push
sbb
test
out
inc
arpl
in
xchg
mov
mov
imulb
cmp
stos
mov
cmp
cwtl
shrb
pop
mov
repz
mov
add
mov
jbe
repnz
inc
mov
cmp
out
jge
test
xchg
cld
gs
mov
sbb
sbb
jo
mov
enter
rol
into
repnz
xchg
adc
cltd
mov
xlat
dec
xchg
push
sbb
test
mov
adc
mov
cld
sbb
fcmovne
shrl
mov
sahf
jg
rcrl
notb
mov
xchg
dec
inc
push
push
repnz
xorl
mov
mov
inc
inc
jmp
inc
pop
and
push
out
cmp
cwtl
mov
mov
adc
pop
loope
mov
xchg
jo
dec
dec
xchg
mov
sbb
das
shlb
lahf
jge
lcall
xor
movsl
notb
sti
out
shrb
dec
fimuls
flds
popf
jne
popa
sub
sbbl
jne
cmpl
insl
fiaddl
sbb
pusha
sbb
mov
xchg
pop
sbb
cli
and
pop
push
and
mov
mov
test
sarb
sbb
test
mov
xchg
ss
mov
mov
adc
aaa
mov
jl
or
cmp
popa
popa
testb
xchg
inc
xchg
mov
add
dec
aas
cmp
movsl
ja
dec
push
outsl
inc
rclb
cbtw
shr
push
mov
mov
jns
aaa
jg
jl
inc
iret
jne
fisubrs
std
movsl
pop
xor
das
sub
cmp
imul
push
cmc
cwtl
push
add
sbb
mov
pop
mov
js
adc
add
mov
int
inc
mov
and
jns
fs
push
push
mov
mov
mov
jno
repnz
fsubrl
adc
or
sbb
pop
jb
mov
cld
inc
in
imul
lcall
cli
ljmp
test
test
lds
mov
aas
repz
xchg
movb
pop
call
cmp
les
out
clc
imul
adcb
outsb
ja
jo
fcoml
xchg
push
mov
sbb
and
out
and
loop
and
mov
lahf
push
daa
mov
adc
shrb
mov
cli
xchg
stc
pop
icebp
cmc
xor
pop
rcrl
xchg
ja
xchg
inc
mov
stos
bound
aas
cwtl
inc
dec
adc
mov
pop
pop
decb
scas
push
cmp
cmp
clc
int3
loopne
push
and
xchg
inc
movsb
sar
lcall
rclb
mov
ftst
push
cmp
fsubr
js
pop
and
lret
jle
xchg
jnp
and
dec
adc
iret
shl
sub
aas
loop
sub
divb
daa
cld
insl
sbb
fwait
pop
xchg
pop
push
outsb
cmp
jp
adc
push
or
dec
fsubl
std
mov
testl
es
pop
ret
inc
lods
nop
inc
inc
cmc
jne
std
cli
xor
and
cmp
xchg
nop
lret
pop
xor
scas
jmp
sarb
sub
out
ds
test
sbb
enter
mov
xlat
dec
xchg
adc
mov
cmp
jecxz
xchg
lds
shrb
xchg
xchg
pop
adc
jo,pt
sbb
push
add
and
inc
mov
jl
add
lcall
inc
xor
push
jg
push
dec
jb
adc
int3
repz
jl
push
add
repz
sub
ljmp
sub
and
add
push
dec
pop
imul
fldl
add
add
repnz
mov
mov
ds
lods
push
aad
shll
xor
enter
in
int3
cmc
scas
mov
fisttpl
inc
cs
pop
jo
aad
out
enter
outsl
cli
cmp
into
lcall
adc
enter
push
mov
dec
mov
enter
lahf
dec
add
mov
lahf
cmp
scas
rcrl
xor
cmp
leave
out
lret
fwait
push
or
scas
add
sbb
fcoml
jge
dec
pop
push
cmpsb
mov
in
dec
popa
lock
sbb
ljmp
add
fwait
push
sbb
das
xchg
lcall
push
addr16
lret
ja
jo
inc
mov
repz
lret
mov
fidivs
cli
insb
lock
inc
sbb
push
inc
xchg
rcrb
or
push
cmpsb
jnp
setg
idiv
call
aam
push
fs
or
mov
pop
jg
jo
mov
push
add
push
sub
lods
add
xchg
sbb
jae
scas
out
mov
dec
dec
fnsave
inc
out
scas
into
mov
xchg
imul
test
cmp
xchg
jge
mov
pop
adc
fnstcw
imull
sub
pop
psraw
add
push
pop
clc
cmpsb
lods
enter
xor
mov
xchg
loope
test
xlat
shrb
and
fisubl
xor
outsb
xchg
sahf
pusha
or
push
dec
inc
jle
mov
adc
std
dec
mov
and
lcall
shl
ret
shlb
lcall
xchg
mov
xchg
repnz
clc
aaa
push
out
arpl
popf
pop
je
pop
xchg
aam
inc
imul
jo
pop
inc
xchg
push
cli
lahf
jmp
iret
stos
pop
mov
push
addr16
sbb
cltd
imul
and
sbb
and
cmp
inc
sti
fidivrs
dec
iret
mov
les
dec
or
mov
jae
popf
xor
out
jno
test
pop
insb
xchg
or
mov
bound
test
or
int
xor
push
addl
and
in
mov
in
inc
dec
lods
sbbl
iret
ja
aas
jecxz
jecxz
int
jl
test
mov
push
rolb
mov
stos
adc
es
dec
loop
bound
pop
or
cmp
adc
xlat
test
mov
mov
mov
sub
xchg
xor
adc
insl
add
push
mov
loope
jo
fcoml
xchg
push
mov
xchg
repnz
pop
nop
sbb
xchg
decb
mov
xor
pop
imul
fs
mov
cmp
bound
xchg
repnz
shll
dec
icebp
and
add
sbb
mov
out
fsubr
pop
xor
aaa
add
dec
leave
icebp
scas
sub
loopne
cwtl
cmpsb
in
out
daa
xor
sbb
inc
pop
pop
stos
inc
or
ds
iret
push
pop
outsb
lahf
rcl
fcoml
mov
loop
xchg
ficoms
inc
add
pop
push
lea
lret
mov
lret
and
notb
sub
test
mov
imul
xor
ret
inc
shr
lret
adc
outsb
jle
cs
or
mov
jno
dec
push
jno
pop
jg
out
hlt
mov
stos
and
cmpsl
or
call
pop
movsl
mov
cs
jl
lods
insl
mov
xchg
mov
pop
fdivrs
insl
push
cs
aas
imul
ret
jg
popl
cld
inc
mov
out
aad
lret
xchg
jp
and
push
loop
jb
sbb
insl
adc
or
jg
mov
inc
xchg
in
adc
lods
pop
or
fisubs
and
rcr
insb
fsubs
ja
notl
dec
hlt
xchg
and
mov
call
iret
jge
lret
test
repnz
adc
test
inc
pop
xorl
loopne
call
aam
ja
gs
icebp
lea
push
mov
jae
clc
mov
pop
adc
jne
fucomp
jecxz
push
ficompl
jg,pn
ret
cmc
aas
and
imul
dec
sahf
sbb
jae
clc
mov
data16
pop
mov
push
sbb
sarb
xor
popa
push
jno
sbb
aad
ljmp
push
push
xchg
rol
add
xor
loopne
inc
mov
call
push
sub
inc
cmp
popa
dec
jmp
sbb
sub
jo
sbb
push
stos
sahf
imul
mov
jle
mov
mov
push
inc
sub
xchg
sahf
std
sbb
pop
es
mov
out
loope
int
into
dec
add
mov
cmp
lods
sbb
movsl
mov
xchg
pop
and
rcrl
sub
pop
jge
mov
inc
add
addr16
xchg
test
jmp
pop
mov
scas
cli
cli
rorb
repnz
mov
sub
lods
pop
call
xchg
mov
aam
jns
mov
ret
push
xchg
insl
test
mov
pop
dec
iret
leave
lret
ja
test
les
jg
jecxz
lcall
test
mov
or
cmc
dec
lds
sbb
fldt
ret
jle
fwait
mov
add
addr16
mov
adc
jae
pop
jle
aas
xchg
mov
shll
push
mov
inc
mov
jp
cmpsl
pop
lret
loop
andb
push
pop
clc
fcoml
mov
popf
cli
xchg
push
icebp
imul
push
repnz
inc
enter
cmp
pop
shlb
addr16
mov
pop
fwait
cwtl
stos
cld
aad
cmc
notl
mov
mov
arpl
outsl
pushf
dec
clc
and
mov
adc
cmp
popa
sub
dec
enter
imul
inc
mov
lea
sbb
cltd
lods
dec
in
mov
jae
add
stc
inc
cmpsl
outsb
sub
test
and
test
test
fidivrs
fnstsw
push
cmp
jecxz
test
sbb
xchg
adc
insl
fwait
cmp
mov
mulb
cmc
push
inc
int
scas
in
ja
lods
cmp
pop
jo
xor
lcall
in
mov
aas
fwait
jg
mov
out
repz
inc
std
mov
js
push
push
lcall
mov
loop
adc
mov
inc
sub
arpl
push
fs
push
ja
mov
inc
lds
mov
mov
call
outsl
dec
inc
jecxz
decb
mov
xorl
into
icebp
outsl
cmc
jns
xor
ret
cld
sub
mov
or
insl
inc
ljmp
mov
jle
xchg
inc
adc
out
nop
jnp
and
xlat
dec
pop
stos
ret
push
jle
lahf
repnz
lods
xor
leave
pop
or
fwait
pushf
pop
lock
scas
push
test
lods
imul
js
sarl
loopne
sbb
cmpsb
push
pop
xchg
leave
imul
and
or
fstpt
nop
xchg
loope
mov
fistpll
add
jno
xor
insb
shr
inc
jl
pop
and
pop
insl
int3
popf
int3
push
inc
xchg
mov
cmp
adc
shrb
outsl
mov
mov
xchg
mov
mov
pop
lods
lcall
mov
jns
pop
jg
popa
mov
pop
stos
ffreep
cmp
push
scas
adc
push
push
mov
adc
add
pop
lret
push
ja
stos
fwait
mov
stc
add
sub
and
mov
mov
and
sahf
sub
sub
or
fldcw
and
orb
lods
aaa
psrld
loopne
mov
sub
jo
cmp
mov
add
lock
dec
sbb
les
mov
xchg
mov
dec
jecxz
test
push
pusha
sub
in
cmpb
dec
and
out
mov
pop
jne
es
das
mov
sbb
and
mov
mov
push
aam
jb
push
lods
xor
sub
mov
std
ds
daa
xchg
push
data16
xlat
cmpsl
je
sbb
xchg
dec
adc
pmuludq
fistpll
ljmp
fdivl
out
xchg
adc
movsb
lret
jl
inc
mov
add
jnp
daa
and
fstl
arpl
mov
lea
aam
xor
mov
fisubs
jl
mov
and
mov
fsubl
dec
pop
xor
movsb
xchg
fstpl
testb
xchg
xlat
jp
lret
mov
cmp
test
mov
out
add
rclb
jg
xchg
pop
pop
scas
cmp
pop
repnz
scas
xchg
aad
jo
mov
lds
ljmp
addr16
aam
and
pop
jg
pop
pop
test
push
cli
push
push
mov
jmp
jns
shll
ret
add
mov
call
imul
outsb
rep
dec
stos
nop
mov
imul
ret
imul
adcb
and
pop
add
faddl
lods
inc
insb
jle
sub
xchg
or
mov
gs
sbb
xor
cmp
xor
stos
in
loope
jle
pop
js
cld
xchg
ret
testb
test
std
xor
test
adc
fs
flds
push
xor
jg
inc
add
out
incl
fucomip
ret
into
movsl
inc
rorb
insl
xchg
adc
mov
les
lret
jge
daa
into
or
rclb
and
aam
jo
addr16
adc
pop
dec
cmp
sbb
pop
push
push
sub
jne
mov
dec
jl
push
pop
sahf
cwtl
or
mov
cmpsb
jp
mov
loopne
lods
mov
push
fistpll
add
jno
xor
insb
shr
inc
jl
pop
and
pop
insl
int3
popf
int3
int
lock
adc
mov
mov
mov
cmc
cs
push
jne
cs
mov
fdiv
xchg
mov
jmp
aam
popa
xchg
push
cmpsl
dec
push
lds
sbb
add
mov
adc
and
fisubl
lahf
push
sti
mov
and
jl
push
fisttps
adc
cwtl
dec
ss
cmpsb
pusha
testl
jp
fmull
ret
sarl
dec
push
and
int3
push
push
xchg
lea
sahf
lahf
inc
cmp
mov
imul
dec
int3
mov
test
jmp
stc
loope
mov
mov
scas
idivb
fwait
inc
std
cmpsb
bnd
push
push
fisttps
xchg
lahf
fmuls
lret
in
clc
inc
loop
js
and
cmc
jo
add
movsb
test
push
push
sti
stos
jb
jo
je
or
jb
fnstcw
xchg
mov
cmpsb
je
adcb
ja
popf
pmulhuw
insb
adc
push
stc
fmull
test
ss
push
push
mov
push
in
or
adc
jecxz
push
or
adc
jecxz
push
or
adc
jecxz
inc
sbb
xchg
adc
jmp
push
sub
mov
adc
jmp
xchg
adc
jmp
pop
imul
fstps
clc
into
out
cmpsb
or
pop
pop
sbb
leave
jmp
test
ljmp
sbb
adc
ds
cmpsb
pop
sbb
adc
adc
add
mov
cmp
sub
fstpt
lret
cmp
dec
gs
js
mov
xchg
je
movsb
out
xchg
lret
data16
stc
loop
sbb
cmp
and
cli
not
lahf
and
xchg
inc
pop
lcall
stc
ljmp
pop
mov
mov
jne
negl
adc
pop
and
sahf
mov
sub
sub
pop
adc
dec
repnz
mov
outsb
dec
mov
int3
push
fdivs
lret
jle
fs
inc
pop
daa
pop
je
lods
mov
in
xor
push
stos
xchg
enter
and
sub
and
popf
adc
fsubr
idivl
add
jae,pn
sahf
mov
pop
mov
clc
push
push
push
int3
xchg
aaa
xchg
pop
mov
push
jg
fcoms
or
rcrb
cmpsl
fmuls
cli
push
rcr
scas
push
push
js
das
fnstenv
jg
ficoml
pop
or
popa
xchg
add
setp
fimull
incb
movsl
pop
sahf
in
cmp
cmpb
and
test
les
sti
cmp
enter
ja
mov
stc
jg
out
pop
mov
add
sbb
movsb
xchg
and
jmp
outsb
ret
pop
mov
xchg
sub
jb
mov
mov
sti
ljmp
mov
popf
add
push
and
outsb
movsb
xchg
jmp
into
and
lahf
adc
divb
popa
call
gs
xor
lock
in
inc
sub
stc
out
cmp
sbb
mov
rclb
or
je
sub
sub
sbb
cmp
cmpsb
xchg
cli
lock
stos
sub
aam
add
popa
mov
repz
repz
rorl
adcl
inc
ds
and
sub
adc
in
subb
push
outsb
mov
popfw
movsl
cli
sahf
adc
or
in
sbb
jne
jb
scas
add
or
mov
pop
xlat
mov
nop
call
or
js
fldl2t
or
ja
ss
je
xor
or
loop
pop
push
sarl
inc
loope
xor
divb
adc
mov
jmp
shrb
fwait
cmp
mov
jb
push
pushf
roll
add
shll
ja
lret
fucomip
inc
mov
jb
addr16
and
dec
or
pop
sub
mov
or
sbb
popf
ljmp
negb
cmp
cmpsb
mov
out
pop
jecxz
mov
enter
mov
xchg
ja
or
mov
rolb
out
jle
aaa
sbbb
xchg
dec
ja
fisubrl
adc
pop
mov
push
push
lret
daa
and
jge
fildl
sub
mov
dec
movhps
and
inc
mov
xor
dec
imul
hlt
imul
mov
lods
ja
inc
or
sbb
cmp
sbb
cmpsl
loopne
subl
cwtl
ret
pusha
loope
mov
push
icebp
loopne
adcl
mov
inc
cmp
push
addr16
or
popa
push
daa
repz
jns
rorl
stc
push
lahf
and
outsl
xchg
sbb
shlb
xchg
jnp
cli
outsb
add
leave
xor
ret
test
rorb
xchg
scas
inc
ss
std
mov
lea
and
dec
or
jp
push
inc
adc
xor
sbb
mov
pusha
sub
xlat
xor
pop
pop
mov
lds
xor
sub
mov
mov
mov
pop
ret
jecxz
jg
fisttpll
push
or
jmp
xor
cmp
insl
mov
inc
mov
std
scas
outsb
mov
sub
in
js
xor
ljmp
adc
pop
in
loop
popf
sti
icebp
filds
mov
addr16
repz
repz
ret
iret
dec
inc
pushf
mov
or
and
std
retw
out
out
out
jp
loopne
aas
cmp
je
clc
loope
add
es
mov
mov
daa
jbe
dec
pop
test
outsl
test
dec
mov
sub
adc
stos
xchg
mov
pop
or
test
cmp
mov
test
scas
adc
push
mov
dec
xchg
xchg
inc
movsl
or
getsec
lret
and
mov
inc
aaa
pop
sub
popa
in
and
mov
mov
ja
data16
xchg
pop
pop
ret
cmpsl
cmp
xchg
lret
inc
fisubrs
imul
jp
lods
mov
lods
cmp
aam
andb
jns
inc
repnz
in
arpl
les
pop
mov
sub
mov
xlat
ret
movsl
push
stos
jl
test
sahf
lods
push
aaa
fs
mov
maskmovq
rcr
pop
adc
mov
xchg
jecxz
push
and
fsubrs
mov
repnz
loope
rcrb
loop
fisttpll
jecxz
inc
push
fldcw
push
loope
xlat
inc
add
inc
enter
pop
insb
mov
jle
adc
sti
xor
xchg
fstps
cmp
or
jecxz
inc
out
cmp
dec
mov
imull
xor
jmp
imul
je
cmpsb
test
push
mov
idivl
lret
mov
aaa
mov
sbb
ja
adc
pop
xchg
pop
jns
aam
shrb
outsl
add
adc
orb
mov
out
mov
ret
cmp
cmp
jb
inc
cmpb
imul
jmp
mov
cld
push
sub
lods
clc
popf
cmp
jae
addr16
cmp
sti
rorl
push
or
mov
cltd
xor
repnz
inc
xlat
rolb
inc
or
sub
stos
pop
xor
fcomip
insb
sbb
pop
xchg
dec
xlat
cmc
cmp
mov
mov
pusha
cmp
pop
dec
mov
mov
xor
ja
mov
rcrl
sub
out
mov
into
mov
push
sub
aas
mov
mov
xchg
xchg
cmc
and
test
arpl
ffreep
out
in
sub
inc
int
cltd
aam
arpl
push
movsl
xor
and
cmp
jp
cmp
test
inc
stc
cmp
push
cmp
jo
scas
add
cmp
and
mov
add
je
ja
jle
test
addr16
aaa
shll
cwtl
fwait
cmp
push
mov
fwait
xchg
pusha
adc
cld
in
and
mov
pop
loop
int
movsb
add
out
dec
cltd
js
lret
jne
into
pop
push
addb
and
out
loop
subb
inc
xchg
pop
out
pop
lahf
mov
mov
push
inc
inc
in
movb
mov
clc
hlt
fsubrl
cmpsl
sub
addr16
lahf
push
lahf
in
sub
mov
jno
sub
jb
sub
ret
shl
xchg
dec
mov
fisttpl
jmp
jnp
ja
inc
out
enter
rcrl
inc
inc
cli
shrl
push
out
adc
pusha
xor
idivb
mov
xor
bndstx
inc
dec
pop
mov
pushf
sbb
mov
push
jmp
cmpsb
inc
test
dec
scas
outsb
and
and
and
jbe
and
fwait
lods
jno
lods
shrb
ficompl
and
scas
aas
dec
pushf
dec
push
cmpsl
fadd
ds
mov
adc
sahf
lock
sti
hlt
in
insl
inc
cwtl
into
mov
cmp
xor
test
jbe
ret
or
xchg
xchg
test
and
inc
xlat
jnp
and
add
je
adc
in
test
daa
decl
xchg
xor
xchg
add
adc
popf
bound
mov
xor
and
aas
adc
daa
dec
cs
sbb
outsb
fistl
mov
leave
add
mov
lock
aaa
pop
sbb
mov
or
pop
or
push
icebp
pop
movb
inc
rcl
notl
pop
sbb
fldcw
clc
cmp
xchg
adc
adc
mov
fisubrs
sbb
imul
sbb
sub
fs
push
cmc
imul
and
jne
sub
dec
jno
or
jp
adc
add
imul
add
sbb
out
out
push
or
sub
add
inc
loope
fstpt
sarb
and
rcrl
jmp
push
add
dec
xor
ret
fcompl
jmp
xor
jns
insl
mov
xor
sbb
sub
pop
out
add
xchg
mov
mov
add
dec
xor
test
leave
inc
cmp
dec
jmp
xchg
mov
pop
mov
std
das
arpl
cmp
inc
popa
pop
lret
add
loope
add
aam
stos
or
lds
int3
push
outsb
inc
inc
gs
dec
fidivl
lods
jo
jge
hlt
insb
pop
stos
arpl
test
mov
inc
iret
inc
xorl
test
test
pop
in
pop
lock
shl
fcmovbe
fimull
fwait
ds
sbb
sbb
and
push
add
nop
or
test
pushf
jge
xchg
dec
mov
lahf
fstl
inc
jbe
sub
jle
movsl
push
push
mov
inc
add
stos
pop
movsb
dec
pop
ds
call
mov
adc
add
inc
add
inc
enter
scas
aad
xchg
push
push
fmulp
insl
jae
mov
mov
mov
xchg
ljmp
fwait
in
push
outsl
xchg
inc
and
xor
sub
iret
nop
adcb
jae
sbb
sbb
sahf
and
adc
fimuls
xchg
cli
mov
cmp
mov
enter
cmp
ret
mov
jno
or
enter
int3
mov
lds
lcall
pcmpeqd
mov
jbe
pop
inc
xorb
cli
gs
inc
xor
lock
scas
icebp
mov
inc
xorl
sti
jge
nop
mov
inc
inc
add
test
dec
and
jle
pop
cmp
or
cmp
push
faddp
xchg
jge
mov
mov
cmpsl
or
pop
and
cmpsb
adc
sub
popf
push
cwtl
inc
inc
push
sbb
sbb
dec
insl
add
pop
sbb
cmc
insl
es
dec
and
jo
mov
sub
xchg
stos
xlat
xor
jp
mov
mov
dec
int3
inc
divb
je
xchg
mov
jg
sbb
repnz
jbe
mov
push
insb
cmp
and
sbb
repz
jns
cli
lock
pop
lea
and
sub
fucomi
and
mov
out
aam
push
fidivrs
and
adc
sbb
xchg
pop
movsb
cmp
sahf
cmp
cmp
cld
movsl
out
pop
jno
adc
sub
nop
mov
cmp
ljmp
jne
arpl
clc
mov
sbb
stos
mov
sbb
clc
lahf
movsb
dec
xor
xor
inc
add
sti
sub
pop
ljmp
je
test
gs
pop
scas
pop
mov
inc
cmp
mov
aaa
bound
inc
or
sub
xchg
dec
clc
ljmp
dec
fwait
jb
or
push
or
je
or
mov
mov
lods
cmpsb
repz
out
lcall
xchg
fcomps
test
sub
and
push
ret
jecxz
fnstenv
rol
pop
cld
pop
mov
inc
xchg
sarb
cli
mov
cmp
fwait
fwait
jnp
ret
cmpl
or
adc
xchg
sub
in
dec
push
mov
pushf
cmp
mov
inc
push
arpl
out
sbb
sti
push
pop
lds
cmc
sbb
lret
daa
adc
fwait
push
fs
sub
pop
mov
and
out
sahf
inc
stc
sbb
cld
xchg
dec
jne
in
sti
xchg
popa
mov
lret
std
shr
xor
roll
xchg
data16
jecxz
imul
test
jo
xchg
pop
mov
and
xlat
outsl
mov
adc
bnd
push
gs
jnp
mov
pop
fisttps
js
enter
in
push
xchg
aam
test
inc
cmp
rcl
pop
cmpsb
jo
mov
faddp
pop
sub
sar
mov
pop
in
jae
ror
cmp
dec
push
inc
inc
dec
in
cwtl
jge
jae
pop
mov
lods
loopne
xor
inc
push
std
fneni(8087
cmpsb
fistpll
pop
inc
pop
add
popf
jne
jle
int3
insb
or
and
xorl
xchg
adc
adc
lods
shll
push
into
lret
or
pop
popa
into
mov
ljmp
push
xchg
fidivl
inc
shrl
rcl
push
or
sbb
in
jge
inc
scas
shr
das
leave
dec
push
and
xor
clc
mov
int3
pop
xchg
xchg
dec
imul
loopne
jle
pop
mov
shl
sub
inc
cmp
rolb
fstpl
cmp
dec
ss
in
inc
xlat
mov
xlat
sbb
jno
ja
test
push
push
fwait
add
flds
andl
inc
push
rorl
je
mov
mov
out
shlb
jle
test
mov
daa
mov
pop
xchg
inc
mov
cmp
mov
inc
sbb
or
jge
icebp
jb
sub
popa
cli
in
add
out
or
data16
jmp
sbb
adc
xchg
fiadds
add
aam
rolb
jmp
jge
rorl
inc
or
scas
stc
mov
or
pop
mov
mov
mov
jbe
or
stos
xchg
cmp
test
sbb
into
dec
je
dec
mov
frstor
lds
push
cmp
sub
push
dec
fisubs
sub
or
xchg
xchg
shll
sbb
mov
and
std
and
jbe
cmpsb
fistl
imul
arpl
jp
mov
nop
data16
push
sbb
lock
out
int3
stc
jl
and
aas
popa
rcrl
jo
into
adc
add
mov
in
aas
call
hlt
ds
add
jae
cmp
push
sub
mov
xchg
dec
insb
xchg
mov
sbb
cmp
mov
mov
sbb
sbb
mov
xor
lods
cld
loop
cmpsl
dec
ficomps
xchg
in
mov
out
fcoms
nop
add
adc
stos
aad
xchg
xor
mov
rcll
xlat
aas
pop
adc
push
fcmovu
mov
push
mov
mov
into
jb
or
jno
leave
mov
inc
ljmp
xabort
cmp
icebp
cwtl
adc
iret
push
je
cmp
push
ret
ret
jge
cltd
ss
aas
cmc
xchg
std
jo
xor
ja
mov
stos
cmp
mov
jge
inc
push
mov
pop
jge
cmpsl
and
xchg
into
lea
add
ret
imul
inc
std
push
sbb
out
cmpsb
jnp
dec
les
movsb
mov
lock
sti
fstpl
push
or
lods
cld
sbb
jno
shl
and
adc
inc
leave
sahf
cwtl
fstps
mov
stos
pop
outsb
and
adc
les
lods
jae
adc
dec
popf
dec
sub
stos
adcb
add
xor
lods
jne
mov
and
mov
fisttpll
lahf
fnstenv
xchg
outsl
imulb
lods
sti
stos
fwait
mov
out
sub
inc
rcrl
dec
fwait
out
fcoms
stos
loopne
lahf
rclb
idiv
add
xlat
dec
dec
and
test
addr16
and
jbe
inc
dec
dec
mov
sub
jae
cmpsl
adc
add
adc
mov
add
leave
into
adc
jge
xor
xchg
cmp
icebp
mov
xor
mov
mov
add
mov
enter
aad
aam
adcl
sbb
mov
push
add
scas
es
fnstenv
cld
xchg
les
in
bound
add
jmp
xlat
insl
shlb
test
in
enter
jge
dec
xor
shrb
or
not
clc
lea
mov
xchg
pop
aad
or
leave
pop
jg
cmp
andb
enter
testb
pop
pop
fsts
xchg
inc
push
enter
cmc
in
cld
loop
in
scas
rcrb
out
out
dec
add
jae
jno
out
xchg
add
sbb
cmp
jg
ds
xchg
adc
insb
cmpsb
pop
xor
mov
dec
sbb
fistpl
xchg
call
fists
outsl
push
cmpsb
mov
push
stc
mov
xchg
lods
insb
xchg
stos
mov
adc
adc
mov
mov
cmp
aam
ficoml
imul
or
push
push
xor
enter
mov
fistl
ss
jge
sbb
mov
pusha
bound
arpl
mov
jae
mov
sbbl
sub
outsl
outsl
push
pop
mov
cli
lock
ret
pop
repz
adc
popa
loope
scas
jge
in
sub
cmp
fwait
imul
into
adc
and
sbb
movsl
mov
pop
xor
mov
rorb
and
pushf
and
pushf
pop
mov
std
push
jns
mov
mov
sbb
adc
or
jmp
rcl
or
xchg
fcmovnu
pop
or
xchg
aaa
mov
jno
adc
in
push
lds
xchg
push
jge
jmp
jle
sbb
inc
push
sbb
in
int3
test
jb
jno
sbb
push
shlb
sub
mov
and
test
xchg
mov
mov
popa
xchg
jbe
out
ss
addr16
jg
in
dec
mov
cmp
aam
adc
rcrb
xchg
or
mov
test
dec
sub
xchg
and
add
mulb
lds
sub
push
imul
imul
or
ret
xor
and
mov
cmp
int3
xor
shll
inc
mov
jg
adc
pop
and
fwait
xchg
dec
call
mov
and
jge
and
shl
movsl
dec
xchg
lods
mov
mov
jecxz
pop
pushf
rcrl
test
jmp
orl
mov
pop
lds
lahf
icebp
imul
mov
inc
fcomp
mov
pop
pop
or
add
subl
jbe
mov
ds
lret
fnstsw
adc
mov
pop
scas
mov
jl
push
sbb
bound
pop
mov
not
pop
pop
pop
lcall
dec
lahf
movsb
and
xchg
enter
mov
add
mov
movsl
xchg
pop
pop
loopne
and
xchg
push
lea
sbb
push
imul
fnstsw
loop
and
jmp
adc
lds
in
data16
xchg
cmp
mov
lods
mov
sub
xchg
mov
jp
mov
aas
mov
xchg
xor
and
pushf
pop
and
inc
out
stc
ljmp
mov
lods
call
stos
sti
xor
fwait
adc
xor
mov
mov
xor
mov
lret
pusha
xor
push
pushf
cwtl
mov
hlt
pusha
cmc
out
stos
movsl
pop
ficoml
mov
xlat
mov
add
mov
add
rolb
jl
in
es
sub
or
inc
xchg
cltd
cmp
add
and
mov
xchg
cwtl
inc
mov
jmp
pop
push
xchg
fsubl
inc
in
arpl
stos
xchg
or
dec
scas
sub
dec
ds
out
arpl
adc
or
rorl
sub
pop
and
clc
fwait
sbb
sub
sahf
das
cmpsl
jmp
dec
xor
add
test
pop
jns
outsl
mov
xor
test
in
mov
and
outsl
xor
jp
sar
lods
stc
jle
mov
xor
ss
mov
repz
adc
out
enter
sub
sub
cltd
repnz
test
fsubrl
xor
push
test
sub
cld
subb
aas
movsl
or
cmpsb
inc
dec
and
mov
nop
jo
dec
adc
test
je
mov
jns
push
in
jbe
xchg
push
sub
adc
hlt
xor
jecxz
xlat
push
cmp
jbe
into
adc
xchg
mov
scas
push
cmp
fisubl
insl
inc
insl
xchg
scas
lods
jl
lahf
cld
inc
xchg
ret
xor
shl
pop
sahf
jae
sub
roll
mov
adc
enter
loopne
jns
ror
les
mov
call
popa
inc
dec
and
test
jmp
fisubl
push
inc
jns
fcmovne
lock
cld
mov
cli
fs
push
in
ljmp
test
jo
loop
push
lods
add
cmpsb
cmp
add
mov
imul
xor
loopne
sub
pop
sti
jge
arpl
mov
mov
adc
pop
and
inc
add
inc
enter
push
ret
pop
dec
insb
lods
xchg
enter
movsl
mov
aad
xor
jge
pop
dec
xor
add
add
lock
bound
rcrb
cmp
jns
push
int
sub
xchg
xorb
pop
cmpsl
inc
push
sbb
cmpsl
mov
pop
insb
enter
jne
into
data16
imul
lock
cwtl
aam
ret
icebp
movsb
pop
mov
or
mov
int3
fcmovnb
and
pop
lcall
xlat
out
leave
lods
mov
shl
mov
in
rcr
hlt
mov
andl
jle
sbb
fisubl
mov
or
imul
jno
cmp
nop
sbb
test
mov
cmp
test
xor
jg
sub
pop
xchg
andl
repz
or
iret
rorb
mov
leave
out
loope
sarl
popa
sub
jle
adc
mov
xchg
mov
inc
loop
loopne
test
ljmp
out
mov
mov
idivb
cli
lea
jl
orl
jo
aas
inc
add
out
jg
aaa
fimuls
int3
outsl
jl
adc
xchg
nop
pushf
testl
push
aad
mov
sbb
cli
mov
add
mov
nop
pusha
inc
call
fs
add
xchg
mov
sahf
call
xchg
push
daa
std
add
out
mov
scas
add
fwait
enter
sbb
stc
adc
std
push
mov
aaa
aaa
jg
sbb
mov
sub
ret
push
loopne
jb
adc
cmp
jnp
push
enter
xchg
mov
pop
aas
lcall
push
cltd
fsubrp
frndint
adc
xor
out
leave
in
ret
das
test
mov
daa
sbb
test
and
add
ss
lret
xchg
ret
fdivr
rcll
pop
loop
popf
test
iret
jno
sbb
jbe
jge
or
movsl
adc
fldcw
sahf
mov
cli
clc
pusha
push
adcl
ljmp
adc
cs
cmp
mov
das
jo
pop
in
sahf
mov
xchg
cmp
enter
jnp
mov
and
rcrb
je
mov
add
adc
rcrb
pop
sbb
aad
shl
dec
je
sbb
cmp
sub
gs
stos
cmpl
mov
add
push
cmc
pop
and
stc
adc
pop
in
iret
int
xor
leave
sub
mov
ss
push
adc
mov
outsb
mov
add
dec
cmc
cmp
mov
pop
cmp
jns
and
popa
iret
mov
sub
pop
and
aam
out
das
add
call
sub
lahf
addr16
inc
inc
das
mov
ljmp
fimull
dec
stc
mov
fs
sbb
or
imull
mov
pushf
mov
xor
sub
sub
mov
shll
xor
cmc
lods
xchg
dec
pusha
insb
xchg
int3
fisubl
clc
or
pop
rol
movsb
stos
rcrb
lahf
addr16
insl
jnp
subl
sub
push
mov
ljmp
shl
clc
sbb
add
lret
push
sbb
xor
push
cmp
jno
scas
sbb
cmp
xchg
and
mov
and
mov
ret
fisttpll
pop
mov
loop
mov
mov
mov
pop
lock
inc
popf
pop
push
sbb
aam
jbe
mov
fsincos
cmp
sbb
cmp
push
dec
jns
fldl2t
movsb
test
testb
lods
cmp
aas
xor
cwtl
sarl
shll
and
or
scas
stc
mov
stc
pusha
ljmp
inc
lahf
daa
or
popf
pop
adc
das
cld
ljmp
ret
mov
in
iret
jecxz
and
imul
imul
bound
stos
fcmove
arpl
cltd
dec
jo
mov
fstp
push
or
testb
bound
sub
fisttps
pusha
jne
arpl
inc
fisubl
xlat
in
ret
ss
rcll
scas
pop
push
jl
xor
adc
nop
clc
or
stos
stos
rcll
jecxz
pop
cmpb
dec
mov
not
adc
mov
enter
jl
or
es
jle
jae
jg
add
test
push
add
push
cmp
pop
pop
push
rclb
jmp
inc
sbb
fmul
pop
ja
lods
into
addr16
out
lods
loop
cld
les
insb
jmp
sbb
dec
push
inc
enter
cmp
mov
and
vexpandps
mov
mov
mov
outsl
adc
int
jns
test
sub
and
sbb
xor
imul
test
and
addr16
or
clc
adc
scas
outsb
into
stos
ss
xor
xchg
loop
xor
xchg
lea
or
pusha
lcall
inc
add
push
push
jae
mov
inc
rcll
add
cltd
cmpsl
popf
hlt
or
add
movsb
jge
ret
popa
outsl
xor
mov
fcoml
stos
cmp
mov
add
mov
jg
push
pop
jmp
mov
mov
popa
mov
testl
fldt
icebp
in
fbstp
test
xchg
mov
or
mov
fcmove
sarl
xor
sbb
in
out
inc
sub
dec
das
xchg
imul
mov
cmp
cli
dec
shrl
push
push
adc
mov
out
cltd
and
pop
ja
xchg
sbb
sti
mov
mov
insb
jae
xorb
pop
shlb
mov
out
ds
cmp
lods
scas
xchg
jmp
pop
lods
mov
pop
add
js
xchg
mov
push
or
mov
or
or
in
loopne
cmovle
jb
sahf
sbb
cmpl
rcrb
mov
or
and
into
jl
adc
mov
out
pop
mov
cmp
push
inc
pop
in
sar
movsl
stos
push
mov
sbb
mov
das
or
jns
nop
test
ja
pusha
in
hlt
in
insl
inc
cwtl
into
mov
mov
les
push
rcrb
int
test
and
jmp
xor
adc
mov
rcrl
and
push
adc
mov
jecxz
jb
mov
add
or
into
vmwrite
mov
ljmp
fcmovbe
push
stos
mov
cli
rclb
push
jmp
mov
mov
decl
pop
pop
and
inc
adc
sub
cwtl
sbb
cmp
add
inc
jbe
jae
jg
pushf
fsts
mov
lock
pop
das
fsubrl
add
fwait
inc
lcall
jge
popa
add
sub
loope
daa
sti
and
mov
xorb
aaa
add
adc
sub
mov
cld
xor
outsb
add
mov
shr
addb
mov
inc
fldcw
ret
pop
shl
imul
mov
jnp
sbb
mov
push
negl
pop
dec
jg
sbb
lock
lods
xchg
aas
sub
test
stc
pop
mov
pop
filds
mov
in
outsb
xchg
stos
stos
jl
rcll
fcompl
mov
ss
cmc
lods
mov
cltd
jae
aam
je
dec
sub
sbb
pop
dec
cmc
imul
jl
popl
pusha
imul
sbb
lcall
addr16
and
aaa
jae
aad
xchg
sub
popa
ret
fbstp
pushf
jne
mov
xor
inc
add
cmpsl
into
sbb
add
or
inc
ret
mov
outsb
popf
mov
xor
lds
dec
into
addr16
cltd
jmp
stos
in
cwtl
xchg
cmpl
push
shrl
enter
pop
lds
adc
cmp
test
roll
inc
int
out
add
or
ret
es
sti
imul
xchg
mov
adc
ret
mov
cmpsb
cwtl
movsl
pusha
jnp
mov
jns
and
jne
testl
aaa
cwtl
adc
jmp
stos
xor
test
xchg
dec
into
cmp
in
js
push
mov
mov
push
sbb
cmp
mov
cmp
lea
sub
pop
mov
mov
sub
fnsave
mov
inc
cmp
jae
lret
xor
inc
and
xchg
inc
ret
fimuls
jmp
js
xchg
lret
jle
and
pop
jmp
jno
lcall
mov
add
in
rolb
outsl
test
cld
aad
cs
lcall
or
adc
shrd
mov
and
dec
jne
fwait
or
out
inc
or
push
sbbb
fimuls
add
fdiv
mov
scas
mov
push
mov
push
int
xorb
and
addr16
and
aas
pop
loop
adc
outsl
cmpsb
inc
xchg
aam
in
dec
mov
subb
inc
push
cmp
inc
sahf
aaa
push
bound
jae
or
add
jb
adc
jns
dec
mov
daa
pop
inc
testl
ljmp
sbb
mov
test
stos
in
les
ljmp
scas
jne
jns
gs
sbb
divb
mov
xchg
in
or
js
stos
mov
mov
cmp
dec
and
pop
hlt
roll
mov
shlb
out
jle
mov
cmp
push
call
mov
mov
mov
inc
and
cmp
and
hlt
adc
pusha
test
notl
jo
scas
arpl
imulb
xor
imul
shlb
mov
and
mov
pushf
sub
lds
icebp
sub
nop
enter
sar
cmpsb
mov
in
mov
add
gs
clc
repnz
mov
add
jae
adc
in
jnp
outsl
inc
inc
lods
pop
pop
inc
add
cmp
sub
outsl
xor
dec
push
mov
leave
push
pop
jl
jl
gs
repnz
and
mov
push
xlat
jno
cmp
enter
push
inc
aad
pop
and
cmp
es
std
out
jns
mov
xchg
sub
stc
push
mov
icebp
dec
sbb
out
xor
add
jne,pn
mov
adc
testb
cmc
sub
fldenv
jl
mov
mov
and
arpl
sbb
mov
adc
out
aaa
in
or
push
in
jae
push
sti
push
mov
and
arpl
leave
outsl
roll
popf
rclb
sahf
insl
add
jnp
leave
stos
add
mov
cmpb
and
mov
insl
cmpsl
movsb
mov
xor
inc
jns
shl
popa
lcall
repnz
fnstcw
jmp
push
and
loope
add
nop
cmp
fs
jle
add
je
dec
mov
xor
push
dec
and
and
daa
fwait
mov
cmpsb
in
add
jae
dec
leave
pop
jo
xchg
cli
push
sub
notb
cltd
jno
xor
inc
jns
shl
popa
lcall
pop
jecxz
ljmp
arpl
ljmp
cmp
icebp
push
pop
outsb
add
mov
dec
push
jo
roll
lds
xchg
jg
lods
xor
and
insb
adc
js
movsb
push
inc
outsb
inc
neg
or
and
xchg
pusha
icebp
mov
mov
sbbb
xchg
cwtl
in
les
jnp
icebp
repnz
adcl
ja
in
pop
cli
pavgw
stc
push
dec
dec
movsb
and
addr16
jae
push
faddl
jb
mov
mov
dec
adc
das
test
pop
xlat
daa
cmpsb
dec
jns
sub
xchg
cmp
jle
scas
das
pushf
xor
push
mov
hlt
jg
mov
inc
fbstp
jp
cmp
xchg
adc
aaa
insb
aaa
push
lahf
popf
xor
jae
push
sub
out
xor
scas
mov
lret
xchg
cld
inc
scas
xor
mov
cs
adc
je
repnz
movsl
cmpl
ret
push
push
ret
pop
cltd
mov
jl
loopne
inc
adc
in
cld
sub
test
call
fucomi
lds
stc
subl
push
out
cmp
enter
das
adc
cwtl
xchg
push
add
cmc
jl
fs
jecxz
mov
inc
pause
push
or
sub
loop
jb
cwtl
mov
mov
add
dec
mov
lock
and
dec
push
imul
push
xor
cmp
xchg
imul
out
mov
inc
in
call
xchg
cmc
sahf
pusha
aas
hlt
mov
lret
cltd
addr16
push
fstpt
shrb
xchg
les
enter
and
dec
mov
leave
test
inc
cmp
rcrb
loop
and
jp
daa
push
cwtl
nop
add
movsl
adc
add
daa
mov
jno
pop
imul
jp
adc
in
pop
cld
insb
jb
and
sbb
push
sub
xor
loopne
aas
and
push
stc
cld
dec
out
cwtl
or
lea
mov
imul
adc
dec
adc
enter
clc
mov
sub
push
pop
mov
out
or
cltd
jbe
xor
cmp
sub
dec
pop
and
pop
popf
subb
lock
lea
mov
sbbl
js
cmpsb
push
mov
push
add
xchg
in
mov
jl
cmp
aas
xor
cmp
addr16
ret
ss
cmp
pop
or
es
push
lock
lea
pop
mov
stos
aaa
fcomp
mov
mov
cwtl
movsl
push
int3
add
data16
jg
push
cmovo
mov
mov
aas
xor
cmp
addr16
xchg
sarl
fcomip
into
jns
es
push
lock
mov
setns
dec
push
mov
jbe
xchg
shl
ss
cmc
push
jns
pop
push
call
fldl2e
ret
xor
in
sbb
int3
movsb
cltd
adc
idiv
leave
sbb
jne
std
dec
jmp
cmp
push
dec
lods
in
test
sub
jbe
jge
stc
pushf
inc
or
inc
in
sub
ss
cmpsl
je
jl
cmp
ror
add
dec
cmp
xorb
push
cmp
mov
push
sahf
lret
fisubrl
and
sahf
test
adc
xor
aas
daa
nop
into
dec
or
insl
cmp
lea
sub
mov
and
in
or
sub
divl
xor
popa
xchg
cli
push
push
inc
bound
and
insb
sub
fcomi
pop
inc
enter
push
adc
pop
xchg
jecxz
or
adc
pop
mov
xchg
lret
loop
test
xor
pusha
mov
ds
push
push
lcall
jle
jae
push
or
rolb
cs
lret
xchg
xchg
xlat
sub
jmp
adc
sbb
enter
clc
addr16
fdivs
jmp
fistpll
sahf
or
int3
xor
insl
adc
mov
mov
and
scas
fidivl
mov
fidivrs
ds
sub
mov
mov
xchg
xchg
sub
sti
cltd
hlt
cs
mov
sbb
adc
lods
cmp
bound
mov
cld
adcb
arpl
lret
pop
xor
lahf
sub
xchg
gs
cmp
ret
orl
jge
push
mov
cli
test
lret
mov
mov
loope
add
rcl
repnz
iret
loop
popa
mov
mov
lret
xchg
aam
js
pop
push
mov
popf
pusha
mov
mov
mov
or
cmp
xchg
test
sbb
and
cwtl
sahf
call
add
jae
xchg
je
mov
ljmp
mov
mov
and
pop
popf
ror
xchg
aas
jecxz
sbb
add
outsl
imul
adc
insb
lret
dec
int3
incl
int
adc
iret
pop
mov
inc
and
mov
dec
ficomps
out
mov
fistpl
xchg
or
jmp
cmp
fisubs
in
or
xor
xorl
pop
cld
arpl
xchg
imul
pushf
xor
stos
fsts
lret
dec
hlt
cmc
sbb
lds
imul
iret
outsb
push
test
xor
lds
es
and
pop
push
nop
pop
mov
mov
pop
sub
icebp
or
sbb
das
xchg
das
sub
fistl
xchg
rcrl
mov
in
fldl
jg
int3
inc
sub
fimuls
mov
sbb
arpl
faddp
or
nop
fsubrl
adc
and
dec
data16
mov
add
ret
jae
lock
add
hlt
or
pop
es
mov
dec
fistpl
pop
mov
or
data16
lods
in
adc
pop
fcmove
adc
push
arpl
stos
xor
push
pop
push
ds
cltd
mov
aad
xor
mov
addr16
aad
arpl
movsl
inc
xor
push
out
push
aaa
subl
sbb
xrelease
pusha
xor
push
mov
jecxz
dec
push
ficoml
iret
int
mov
mov
jmp
cmp
sbb
cmc
xor
xlat
jae
lods
xchg
ja
aad
adcl
cli
xlat
in
sub
adc
pop
int
addb
std
push
push
ljmp
imul
sbb
dec
setae
test
add
les
cmp
mov
and
std
fcoml
in
leave
lock
repz
les
hlt
jnp
sub
jle
pop
cmp
xchg
dec
mov
loop
cmp
rcrb
dec
mov
xchg
xor
scas
inc
pop
sub
mov
sbb
lock
add
sbb
mov
inc
jnp
pop
clc
mov
pop
add
shrb
fsubrl
js
adc
push
mov
out
adc
gs
dec
sbb
inc
mov
hlt
call
xchg
in
dec
adc
jbe
pop
jecxz
jb
mov
dec
and
cld
xchg
jnp
xchg
xchg
rolb
adc
mov
and
and
mov
jo
inc
scas
sub
mov
cli
addr16
inc
out
cmp
xchg
movsb
ret
aam
scas
push
xor
mov
call
aaa
cs
pop
mov
insl
pop
pusha
push
cs
jo
pop
jmp
xchg
xchg
pushf
popa
mov
cvtps2pi
popa
lea
adc
push
sbb
lret
push
outsb
mov
mov
ret
or
mov
cmpsb
jp
add
adc
fstpl
cmpsb
inc
fmull
cmp
lods
dec
dec
lret
sysenter
subb
shlb
pop
sahf
and
mov
push
adc
pop
adc
jae
dec
or
fisttps
mov
jge
stos
sbb
mov
push
push
outsb
outsl
daa
and
mulb
mov
in
rorl
fstpl
jae
cs
int3
sub
adc
out
xor
inc
or
mov
inc
pop
add
mov
fcoms
addb
mov
nop
jl
insb
insb
aam
loop
xor
pop
ss
mov
sub
pop
mov
adc
rorl
add
into
jno
es
xchg
and
flds
loopne
mov
xchg
adc
rep
test
stos
lret
and
lods
ljmp
or
pop
popf
mov
xor
inc
leave
sub
nop
pop
and
pop
push
out
xchg
clc
xor
fnstenv
jae
shrb
jno
pop
xor
loope
jno
add
movsb
dec
test
scas
shrb
je
dec
movsb
jne
lock
mov
push
dec
in
loop
cmp
lea
jmp
inc
std
jae
push
add
lret
imul
in
push
xor
sti
subb
mov
xor
cmc
jmp
fisubl
xchg
dec
mov
adc
movsl
xchg
jnp
lods
jmp
mov
in
xchg
ficompl
data16
out
dec
push
arpl
adc
ds
push
mov
sbb
test
xchg
and
out
inc
mov
push
fstpt
mov
cmp
xchg
in
adc
cmp
sbb
xchg
inc
push
fisttpl
add
fbld
xor
mov
pop
scas
pop
fiaddl
ret
xor
in
add
ds
add
jnp
test
sub
in
jl
mov
ja
xor
mov
jns
ss
cli
pop
pandn
stc
sbbl
fistl
loopne
cmpb
sbb
jp
cmpl
in
gs
jbe
bound
ja
scas
cmp
or
cmpsl
and
pop
mov
mov
aas
jne
lods
sub
sub
repnz
std
outsl
test
mov
andb
push
lcall
push
pop
jl
push
movsb
jl
jle
dec
cs
and
fistpll
icebp
outsb
add
add
inc
push
test
fs
jb
bound
and
je
adc
inc
std
call
xchg
bound
inc
inc
mov
test
sbb
lods
mov
lods
inc
sbb
lcall
jnp
cmpsb
arpl
lds
test
mov
aam
aas
cmp
mov
test
nop
push
inc
pop
sahf
fnstcw
test
test
int3
cmp
repz
pusha
lcall
xor
lock
jl
lret
xchg
or
dec
ret
lcall
mov
mov
mov
subb
fwait
xor
or
xchg
pop
int
and
cmp
jno
punpckhbw
jnp
ret
fwait
repz
stos
andb
add
add
cld
in
pop
sbb
pop
lods
sar
add
inc
jae
jg
or
inc
cmp
stc
mov
sbb
pop
fcmovu
enter
scas
jnp
cmc
lret
aas
lock
cmp
push
pop
ds
mull
das
adc
je
stc
leave
xchg
inc
jmp
add
xchg
cmc
pop
data16
mov
mov
or
and
cwtl
mov
fstpl
jb
rcrb
out
fcmovbe
fadds
sbb
jne
add
loope
mov
inc
mov
fcmove
pop
and
scas
xchg
cmp
add
out
cmp
inc
mov
insb
xor
inc
mov
popf
xchg
out
sub
fldl
sbb
or
adc
imul
xor
mov
movsb
ljmp
mov
pop
f2xm1
test
mov
mov
inc
imul
xor
sub
nop
dec
and
test
and
std
mov
mov
cmp
inc
and
dec
cmpsl
addr16
sbb
pop
cmp
sti
pop
nop
out
push
pop
add
test
scas
stos
cltd
dec
shll
mov
std
fcoml
cmp
and
mov
push
in
ljmp
repz
xor
jle
lds
mov
fs
xor
jg
add
movsl
ret
mov
inc
mov
sub
mov
sbb
in
inc
mov
rcr
and
ret
xor
aam
ja
mov
andb
inc
mov
jae
jb
add
out
xor
stos
push
lds
mov
out
iret
xor
test
scas
or
in
dec
scas
rolb
sbb
xor
pop
pop
scas
rcll
rorb
adc
sbb
pusha
sbb
cmc
rolb
or
inc
das
sbb
mov
sarl
and
jae
movsl
jl
cmpsb
cmp
push
dec
sbbb
xchg
out
test
mov
push
cld
xchg
sbb
pop
hlt
jg
cs
dec
lock
enter
cmp
sub
jmp
icebp
fwait
xor
cwtl
mov
xor
inc
push
jmp
pop
sbb
mov
cmp
testl
push
ljmp
xor
mov
inc
movsl
loop
sub
aaa
pushf
insb
in
jno
imul
mov
filds
cmp
push
xor
mov
push
xchg
shrb
and
pushf
mov
aaa
adc
push
call
and
dec
jle
or
das
bound
in
loope
mov
pop
aas
mov
add
jb
push
adc
hlt
or
mov
roll
dec
mov
sbbl
fsubs
enter
xlat
dec
jo
lcall
in
adc
adc
in
and
xor
jp
sbb
dec
xor
mov
pushl
mov
xor
insb
stos
stos
imul
lcall
fwait
stos
xor
sbb
mov
ds
aaa
in
adc
dec
iret
xchg
fwait
loop
and
jb
leave
jns
in
mov
cs
ljmp
mov
xchg
pop
and
or
inc
cmp
inc
ret
cmp
fsubs
jno
or
shrb
add
imul
cmc
test
or
das
sbb
fisubs
mov
dec
aam
mov
pop
mov
mov
cld
fwait
jp
add
xor
std
pushf
insb
cmc
mov
cmp
gs
scas
pop
test
mov
push
scas
mov
mov
bound
inc
addr16
std
sbb
aam
bound
in
fstpt
fdivs
data16
lcall
add
loope
adc
mov
sbb
lods
test
movsl
negb
xor
scas
adc
int3
mov
xor
pushf
repz
mov
adc
or
mov
or
cmp
pop
jl
stos
sub
insl
fmull
push
jg
enter
xlat
lods
and
push
pushf
pop
leave
inc
inc
ret
adc
fdivrl
add
add
inc
decb
pop
pop
mov
add
xor
push
sahf
xor
outsl
push
xor
inc
jno
lock
add
xlat
ja
cwtl
and
inc
fcmovnu
ljmp
push
lcall
dec
mov
fs
jo
fisubl
jge
add
ljmp
push
stos
fistl
sahf
push
jno
or
popf
and
icebp
arpl
push
jge
jmp
das
or
adc
dec
jecxz
mov
pop
imul
dec
iret
cmp
sarl
sarl
lds
push
filds
insl
lods
insl
in
lock
or
mov
test
pushf
xor
call
lcall
and
lahf
or
sub
xor
mov
push
pop
and
fdivrl
mov
stos
xor
adc
inc
and
mov
std
sbb
mov
mov
popa
fsubrs
loopne
inc
out
sub
adc
sahf
out
jnp
dec
push
sbb
fwait
mov
jmp
mov
cmp
in
int3
shl
mov
lret
in
pop
stos
inc
sbb
outsl
xchg
adc
mov
push
test
sub
and
rcll
sub
stc
mov
hlt
xor
mov
shll
mov
loope
dec
add
mov
call
xor
inc
jae
push
cli
mov
pop
jl
in
es
orl
push
dec
popa
sub
sub
dec
adc
mov
push
and
mov
jbe
das
adc
cmpsb
nop
add
sub
or
aas
mov
and
xor
jmp
lret
pop
notl
ja
out
sbb
mov
push
dec
fstps
mov
push
and
bound
movsl
mov
out
and
mov
pop
test
cmp
insl
js
aam
movsl
sub
cmp
pop
dec
test
fbld
jmp
xchg
sub
aam
pusha
rorb
cmp
stos
cmpsb
fadds
adc
decb
pop
push
cmp
jecxz
or
das
cld
in
mov
jge
mov
leave
adcb
sub
mov
inc
add
push
cmp
jge
cmp
ljmp
jnp
dec
adc
mov
in
pop
fistpl
fisttps
idiv
into
add
stc
push
pop
push
cmp
lcall
lea
incl
adc
movsl
ret
push
ja
pop
add
leave
xor
repnz
xchg
jmp
mov
jno,pt
cwtl
mov
add
addr16
pop
push
icebp
ret
aas
fcoml
out
xchg
push
and
movsl
jne
xchg
mov
mov
push
shrb
push
cltd
roll
and
aas
mov
adc
mov
pusha
lcall
mov
dec
repnz
aam
adc
push
xchg
ret
movsl
or
cmp
lahf
out
mov
xchg
jb
sti
cmpsb
lcall
ret
xchg
sbb
ja
push
aas
sub
fwait
add
xor
add
popl
xchg
jns
or
jp
xchg
dec
movsl
and
mov
ret
pop
xor
dec
lea
fcmovbe
fs
pop
push
or
xor
insl
fs
fisttpll
mov
mov
fs
movsb
test
ficoml
addr16
cli
outsb
adc
jo
std
pop
xchg
push
cmp
xchg
fs
mov
lea
fisttpll
bound
out
jge
mov
incb
jnp
aaa
out
dec
ret
mov
mov
sub
imul
add
mov
insb
out
push
adc
cmp
jp
lret
adc
pop
shl
gs
push
daa
mov
xchg
vmwrite
or
push
and
stos
insb
test
in
test
mov
jae
sbb
daa
es
mov
lea
not
xchg
repz
lret
push
xchg
lods
hlt
cltd
in
stos
js
enter
sbb
movsl
mov
das
sub
inc
inc
cmp
ror
fiaddl
mov
push
and
xor
sbb
sbb
stos
shlb
orl
jne
aas
adc
clc
xchg
sbb
jle
inc
xchg
sub
push
cli
lret
mov
sub
jo
adc
rcrb
lcall
mov
xchg
xchg
cmp
mov
or
lods
movsb
xor
out
repnz
pop
ret
cmc
and
nop
jb
shrb
mov
imul
jnp
mov
sub
imul
imul
pop
idivl
in
cmp
out
push
sbb
ja
and
loop
sar
enter
test
mov
dec
lea
test
xchg
and
mov
rcrl
js
aas
icebp
lods
and
mov
and
mov
push
js
leave
pop
enter
inc
test
adc
sub
xchg
pop
in
sbb
pop
cmp
sbb
test
mov
inc
insl
mov
and
lods
xor
push
popf
sbb
outsb
hlt
fsubs
data16
dec
shll
jecxz
repnz
clc
test
inc
xchg
inc
int
and
inc
jns
push
test
lcall
mov
mul
push
rorl
xchg
pop
dec
mov
sub
inc
lret
xchg
scas
and
fcmovu
pop
xchg
fdivrs
mov
pop
and
cwtl
xchg
pushf
data16
or
inc
pop
loop
repnz
xorb
into
xor
sbb
rolb
xchg
sbb
pop
int3
ja
ja
sbb
push
mov
xor
jl
adc
and
jmp
and
movb
fcoml
lods
popa
ss
fdivrs
adc
jmp
cmp
loope
fwait
adc
in
aaa
icebp
icebp
lods
cld
jecxz
lret
rcr
adc
fdivrl
cmpsb
imul
out
mov
push
dec
mov
scas
or
jg
ds
loop
and
mov
and
xchg
js
les
js
sbbb
sti
dec
dec
fcom
jo
jg
test
aas
shr
jno
add
sub
daa
pop
je
pop
stc
jb
pop
popf
enter
inc
stos
repz
call
das
into
test
cmpsl
shlb
xor
hlt
int3
lds
jmp
mov
pushf
push
stos
mov
pusha
movsl
shl
shll
xor
and
fbstp
or
mov
imul
out
sbb
dec
cmp
push
lahf
scas
aaa
dec
xchg
lahf
fsubl
dec
outsb
idivb
mov
mov
xor
xor
adc
xor
hlt
add
mov
and
js
jp
cmp
sub
pushf
gs
xchg
xor
pop
jl
dec
push
clc
inc
sbb
adc
dec
jns
sahf
dec
mov
mov
insl
xor
push
rclb
jmp
addb
enter
sub
loope
pusha
shll
les
pop
jmp
scas
movsb
pop
mov
push
test
sub
push
lods
jge
movsl
sub
xchg
fnstsw
xchg
adc
aam
psubb
pop
push
jmp
lahf
clc
es
add
xor
aaa
decb
pop
fidivrs
jmp
arpl
mov
stos
pop
inc
daa
mov
pushf
sbb
lret
scas
jmp
jmp
sti
out
aaa
jns
mov
jmp
xor
test
arpl
inc
add
push
cmp
das
pop
xchg
addb
icebp
inc
in
push
data16
cmp
scas
push
aas
lahf
scas
jbe
xchg
push
popa
and
stos
cmpsb
push
pop
stos
arpl
adc
jp
inc
leave
ret
fucomip
cmp
mov
pop
test
xchg
out
hlt
sub
hlt
jns
paddsb
ja
fistpl
or
push
scas
xchg
sub
clc
mov
test
adc
sub
or
aas
mov
fists
stos
loop
add
lahf
cmp
out
ds
cmpsl
lret
cmp
gs
pop
das
push
xchg
sbb
nop
push
je
testl
add
mov
cld
stos
dec
xor
cltd
fisubl
xchg
mov
lret
sahf
jge
dec
fxch
dec
pop
clc
je
push
repz
sti
pop
pop
addr16
or
mov
jmp
ja
fwait
jae
sub
or
inc
inc
dec
ret
call
push
pushf
dec
in
push
loope
inc
int
push
inc
sub
lea
imul
add
push
mov
lods
mov
pop
pop
push
pop
shll
or
scas
stc
mov
gs
dec
pop
filds
cmp
push
addr16
pop
mov
sbb
popa
push
jecxz
and
push
repz
cmc
push
or
jle
inc
fdivrs
test
out
jne
xor
mov
xchg
fsubrs
sbb
mov
lods
jo
cmp
les
loope
adc
adcb
orl
stos
addr16
xchg
push
pop
pop
and
add
jg
cmpsl
jno
stc
scas
pop
ret
arpl
enter
or
in
inc
cmpsl
sti
int
jno
outsl
mov
pop
dec
int3
mov
adc
addr16
mov
mov
mov
stos
in
sbb
test
xchg
repnz
daa
inc
cmc
lock
pusha
test
push
movsb
pmulhuw
mov
les
xchg
mov
mov
shll
fs
mov
xchg
jb
mov
icebp
and
pushf
scas
jge
or
icebp
cmp
bound
adc
addr16
push
loop
and
call
jle
es
clc
or
jae
xchg
or
pushf
insl
push
outsb
jle
jle
sti
in
xlat
pop
push
imull
lcall
je
mov
mov
add
push
pusha
add
loope
scas
jge
in
sub
push
mov
mov
dec
mov
ss
cmp
xchg
jnp
andl
enter
and
xor
les
aam
sbb
call
adc
push
xchg
mov
fwait
pop
data16
dec
push
sti
xlat
and
sti
fwait
ss
dec
roll
pusha
out
mov
xchg
cmp
ja
fildl
ret
sbb
rorl
add
push
lods
notl
push
out
push
pop
jae
pop
push
sahf
fisubl
mov
pop
icebp
test
nop
mov
ja
shlb
add
jl
repz
or
ljmp
int
cmc
xchg
xor
xchg
jno
mov
aad
outsb
imul
arpl
bound
nop
cmpsb
xchg
pusha
sbb
imulb
mov
lret
mov
call
adc
adc
mov
xorl
add
test
out
pusha
mov
daa
insl
mov
cmp
jmp
sbb
jl
lock
jecxz
shlb
ja
mov
in
movsb
nop
ja
testl
aaa
dec
dec
scas
and
and
addr16
int
mov
push
cmc
std
gs
pop
mov
jmp
jo
lea
jb
mov
mov
or
scas
mov
mov
daa
aam
dec
stos
pop
push
and
pop
repz
imul
popf
es
push
pop
sbb
dec
lret
ljmp
loop
lahf
pop
xchg
and
pop
dec
adc
arpl
xor
ja
xor
popa
fs
xchg
pop
inc
das
mov
fisubrl
mov
cmp
add
push
dec
cmp
rclb
repz
xor
popa
add
sub
mov
in
mov
nop
push
pusha
es
mov
dec
bound
dec
add
or
sbb
xchg
lahf
lock
dec
xor
xchg
jns
xor
mov
sbb
mov
adc
dec
sbb
lcall
cmp
lds
mov
sub
mov
mov
lcall
push
mov
jo
cmp
call
cmp
out
jbe
repz
test
je
fmulp
js
cmp
sub
loope
inc
fiadds
or
jg
cmp
xchg
mov
out
pop
aad
dec
push
stc
into
jnp
loopne
jne
iret
out
push
cmpsb
inc
pop
sub
fs
repnz
push
mov
out
mov
mov
pop
or
or
add
xor
pusha
fsubl
jae
lcall
fcomp
test
mov
outsb
mov
dec
xchg
negb
jp
clc
pop
test
or
js
rol
lea
xchg
add
pop
inc
mov
jae
fidivs
loopne
aam
adc
loopne
fwait
jnp
inc
push
mov
mov
or
pop
add
sub
out
lock
lods
insb
test
mov
mov
dec
shlb
sahf
test
jmp
jmp
cmp
iret
adc
fst
jae,pt
out
je
hlt
push
cmp
sbb
repz
ljmp
fcoms
cmp
clc
xor
sahf
xchg
in
int
mov
ret
popa
mov
xor
xchg
or
inc
clc
lahf
jg
movb
ja
imul
push
sub
in
jno
cltd
cmpsl
jb
push
movsb
aad
mov
lea
movsb
fwait
je
adc
idiv
out
aaa
out
mov
rolb
out
stos
dec
ret
in
add
adc
aas
dec
pop
push
push
jge
cltd
and
adc
cltd
daa
test
iret
imul
nop
xchg
lods
dec
dec
popf
xor
mov
jnp
pop
or
push
inc
xchg
push
pop
sub
push
clc
inc
pushf
out
imul
mov
lods
xchg
daa
jnp
or
cmp
dec
pushf
sub
iret
sbb
out
sub
ljmp
scas
jbe
mov
push
push
xlat
and
test
fimuls
loope
in
das
sti
dec
add
jmp
dec
lret
xor
in
loopne
jno
mov
jecxz
mov
or
aad
adc
fcomi
sub
dec
imul
dec
ret
jp
and
roll
ret
test
icebp
inc
sub
lods
xchg
mov
push
xchg
hlt
ds
pop
inc
into
mov
push
cmp
mov
test
sbbl
inc
cli
cmpsl
orl
mov
loopne
cmc
imul
jae
jb
dec
iret
mov
add
adc
into
scas
das
xchg
in
add
adc
cmp
jnp
lods
mov
outsb
mov
shrb
andb
or
pop
xchg
push
dec
push
mov
cs
pop
lods
ja
cvttps2pi
jge
aaa
ret
ljmp
mov
xor
adc
jmp
pop
cli
mov
shll
and
jne
or
pop
jge
jge
inc
shll
sub
subl
xchg
jnp
lds
pop
lea
cmp
or
or
aaa
mov
nop
pop
jecxz
cwtl
mov
xor
loope
add
inc
add
and
lea
pop
ret
xchg
out
test
aas
daa
xchg
inc
mov
mov
push
in
cmp
jle
and
aam
shrb
xchg
push
mov
fwait
insb
testl
xor
xchg
inc
xor
sbb
mov
jae
fadd
adc
sbb
fisttps
jns
cmc
outsb
cmp
pop
cmpsl
pop
xorl
ss
outsl
inc
cmp
dec
mov
dec
xor
sbb
lods
lahf
outsl
jl
test
inc
dec
sbb
in
sahf
xchg
lock
lret
aas
lods
pop
cld
test
mov
jno
aam
inc
movsb
sahf
das
jp
sub
repz
call
aad
in
test
cmpsl
sub
call
popa
push
push
ja
xor
or
xor
je
lahf
sbb
push
popf
push
movsl
jno
mov
fldcw
inc
dec
scas
into
jns
int
outsl
aas
push
inc
mov
in
cmpsb
push
fnstenv
xor
sti
sti
insb
cmpsb
adc
sti
lcall
xchg
movsl
aam
or
add
jge
dec
cmp
cwtl
sub
lods
cmp
out
dec
jbe
fucomi
iret
scas
lds
sbb
lods
popa
jmp
fstpt
cli
stos
mov
pushf
mov
stos
jle
sbb
in
lock
ja
and
mov
pop
movsb
or
lods
scas
sub
xlat
or
gs
loopne
pushf
adc
or
xchg
popf
inc
mov
push
scas
and
or
icebp
std
mov
cmp
sahf
stos
mov
pop
ficompl
mov
mov
les
in
stc
mov
jmp
xor
js
jle
popa
mov
xor
pcmpeqw
push
jp
push
sbb
jbe
std
fimuls
and
push
inc
sub
sub
pop
cmp
fistl
out
xchg
dec
daa
sbb
xor
add
or
pop
sti
dec
xlat
icebp
mov
out
imul
les
lahf
mov
jo
loope
test
jmp
or
push
inc
addb
rol
pushf
mov
sub
ss
lret
sahf
ret
push
out
or
imul
in
jl
shll
rol
sbbb
jae
test
cli
dec
xorl
and
out
dec
hlt
inc
clc
xlat
lret
jl
imul
xchg
dec
xor
jne
push
push
cltd
cmp
icebp
dec
aaa
mov
cltd
jne
xchg
sub
xchg
pop
xor
imul
push
loopne
mov
dec
ret
xchg
push
cltd
ja
cmpsl
outsl
sbb
outsb
cmp
iret
inc
sti
sub
dec
push
and
add
movsl
ja
daa
daa
xor
mov
jmp
jnp,pn
jge
sub
addl
mov
push
and
push
ds
xlat
cs
frstor
movsb
pop
inc
mov
cmp
add
xchg
cmpsl
rcrb
das
push
loop
stc
mov
dec
mov
sbb
xor
andl
adc
cmp
push
xor
xchg
test
enter
sbb
mov
sbb
adc
pop
pop
pop
adc
mov
xchg
addb
cmp
mov
inc
sub
jno
xchg
fstps
and
ja
fxch
mov
sbb
adc
xchg
dec
xchg
cwtl
punpckldq
lret
and
ss
movsl
jge
adc
mov
mov
inc
push
mov
jg
and
lods
ficoms
orl
daa
cmp
adc
bound
rolb
pop
icebp
ret
push
in
and
sub
aaa
adc
cmp
sbb
dec
cltd
add
imul
fidivrl
sub
push
sti
std
mov
dec
sti
cwtl
xor
mov
and
stc
sbb
lret
inc
decb
loope
sbb
repz
cmp
adc
stos
ljmp
push
jmp
dec
loopne
icebp
dec
push
js
and
cmc
jb
mov
call
clc
scas
pop
jno
addl
cmpsl
ljmp
jnp
jge
mov
fistl
rolb
sbb
daa
inc
fdivrs
sub
mov
adc
ss
mov
jg
push
outsb
mov
or
jmp
shrl
popl
mov
mov
cmp
adc
movb
or
adc
popa
push
adc
xchg
inc
ror
xorl
mov
lcall
and
mov
out
inc
lret
add
test
sbb
lcall
ret
and
pop
mov
mov
sbb
mov
and
sub
cmp
daa
push
cltd
fs
xchg
mov
add
das
lods
or
jns
dec
push
cmp
out
mov
loope
xchg
fisttps
stos
add
push
mov
mov
adc
stos
cli
push
sbb
add
lahf
inc
test
nop
jbe
sbb
jmp
es
mov
inc
test
std
dec
in
loope
mov
mov
xchg
or
int
lret
push
mov
dec
xor
popa
fisubrl
sub
adc
mov
call
cmp
hlt
or
call
inc
sub
fwait
cwtl
inc
sarl
cmc
js
xchg
out
inc
push
mov
lea
and
xor
pop
cmp
and
pop
mov
gs
ds
lahf
push
fisubrl
jge
std
sbb
pop
loop
add
popa
addl
mov
push
insb
int3
mov
test
jae
jnp
scas
xor
mov
mov
loope
cmp
and
cmp
aaa
js
int
xchg
inc
pushf
rcr
lock
aad
sub
xor
pop
adc
push
ficompl
je
push
xchg
sti
inc
inc
pop
add
jmp
add
leave
sub
insb
pop
pop
and
fidivrs
mov
add
push
dec
aaa
ret
sub
inc
arpl
mov
pusha
pop
mov
push
int3
fcmove
xor
lds
lock
fstpt
mov
mov
stos
and
mov
stos
pop
movsl
loop
cmp
jle
popf
imul
or
cmp
inc
int3
xchg
dec
fimuls
cmpb
xchg
mov
and
xchg
jb
ret
push
lret
std
xchg
cltd
adc
fistpll
lcall
xchg
dec
fimuls
adc
loopne
gs
mov
daa
jmp
jo
pop
xchg
push
xchg
inc
xchg
stos
add
xchg
dec
iret
adc
cld
jo
mov
jae
iret
arpl
jno
pop
addb
lahf
jp
sbb
lods
mov
xchg
or
or
popf
test
aad
cmp
add
add
xchg
jns
inc
mov
sbb
clc
mov
inc
dec
mov
cmp
jne
fisttpll
inc
mov
pop
dec
cmp
dec
aaa
test
mov
add
jmp
in
int
test
mov
orb
dec
jge
stos
mov
aas
scas
frstor
xchg
pop
dec
xchg
adc
xchg
arpl
mov
mov
inc
testl
jg
and
leave
aam
sub
inc
xor
ret
add
outsl
lea
cmp
mov
xchg
mov
push
repnz
xor
pop
push
sbb
loope
ljmp
scas
and
icebp
push
out
invd
or
jge
pop
cmp
arpl
scas
add
inc
roll
sub
jae
sbb
and
mov
mov
pop
test
repnz
cltd
inc
mov
dec
fstps
imulb
fsts
call
pop
mov
out
iret
lret
jp
popa
jo
inc
pop
inc
daa
shll
negl
mov
cmp
xchg
mov
repnz
test
sbb
mov
add
pop
jno
mov
mov
scas
scas
push
mov
inc
mov
mov
nop
xchg
imul
push
scas
lahf
sbb
mov
iret
and
jbe
mov
sbb
jmp
scas
out
jle
out
mov
xchg
fdivrl
sarb
mov
inc
stc
ss
pop
aas
aad
push
mov
dec
dec
sub
das
dec
ja
push
xlat
mov
dec
enter
leave
fcomip
dec
nop
fnstsw
sbb
or
push
repnz
aaa
push
pop
push
int3
fdivr
cmpsl
lods
fucomip
ffreep
dec
cmp
cmp
loope
jnp
sbb
movsl
jecxz
aad
mov
xor
jge
outsb
lret
cmp
outsb
nop
sbb
lcall
les
xlat
bound
add
jle
ret
pusha
or
jbe
and
add
test
ds
aam
fldt
sub
xchg
mov
inc
jp
add
push
and
daa
mov
mov
popl
sub
xor
popf
pmuludq
test
push
add
imul
sub
das
mov
pusha
or
push
cmpsb
loope
stc
sbb
push
xchg
mov
mov
push
fildl
sbb
arpl
lahf
aam
jo
mov
or
or
pushf
es
dec
inc
int3
mov
inc
fisttps
lds
fldenv
lods
incb
jl
cmp
push
pop
mov
mov
stos
or
sahf
outsl
les
lock
mov
test
ljmp
and
jne
mov
xchg
lahf
gs
mov
adc
rorb
lcall
or
xor
dec
aaa
cld
shlb
adc
xor
es
push
jg
pop
mov
fdivrl
xor
imul
xor
jns
aad
repnz
mov
fistpl
pop
ss
sbbl
dec
fs
fdivl
xchg
out
ja
xor
push
sub
mov
mov
js
or
and
sub
or
xor
jne
in
pop
mov
pop
sub
les
out
out
lret
mov
and
xchg
mov
stos
dec
aad
jge
cmc
outsb
popa
out
and
int
add
lahf
rcll
fs
and
nop
fisttpll
inc
xor
sarb
jb
data16
adc
mov
mov
shr
fsubs
sbb
sti
cmpsl
pop
data16
inc
in
sbb
pop
fwait
xchg
mov
aaa
shlb
add
popa
add
inc
or
mov
sahf
sbb
inc
cmc
adc
xchg
andl
pushf
lods
push
pushf
imul
xchg
popf
mov
inc
mov
push
jp
enter
orb
cmp
jo
out
pop
data16
out
cmp
and
xchg
into
jae
mov
mov
sbb
mov
mov
cmp
pop
das
adc
xchg
lret
mov
fistl
fwait
scas
add
lcall
pop
cmp
adc
arpl
and
push
aam
clc
xchg
aas
clc
xchg
in
shll
xchg
sub
int3
mov
rolb
sub
ret
out
call
adc
and
or
loop
dec
dec
mov
dec
cli
out
mov
sub
insb
lret
shrb
repnz
xor
cmp
sub
dec
jnp
out
out
mov
jge
pop
mov
sub
faddp
push
adc
xor
insl
stos
sub
sub
int
mov
xor
cmpsl
or
shlb
imul
js
push
xor
hlt
sub
scas
shrl
icebp
out
dec
insl
aad
in
movsl
adc
lret
mov
sbb
jnp
sub
sbb
or
ja
js
xchg
loope
adc
push
mov
lds
ds
dec
dec
mov
or
mov
pop
pop
push
pop
shll
and
pop
adc
add
lods
pop
int
js
or
xchg
mov
in
shlb
call
jo
hlt
rorl
repnz
int
testl
sbb
sub
std
cmpsl
hlt
mov
aad
pop
lahf
mov
fisttpl
or
sub
mov
hlt
popa
orb
add
lahf
push
xchg
push
lods
int
in
push
dec
fnsave
xchg
cmc
xchg
mov
cmpsb
dec
sbb
xor
out
mov
es
pslld
mov
mov
xchg
loop
mov
inc
clc
add
sbb
cmp
stc
sub
pop
mov
inc
getsec
xor
div
xchg
dec
adc
lahf
push
lea
cmp
mov
arpl
or
ret
int
push
mov
test
stos
dec
jne
dec
inc
fisubl
jge
push
in
sub
jno
push
mov
stos
sub
adcb
fiaddl
sub
jecxz
lret
or
shlb
sub
jg
ror
lds
pop
add
jg
sub
ror
push
push
lahf
pop
aas
out
sbb
xlat
popa
lret
repz
ret
mov
jp,pt
out
push
ret
jae
pop
adc
sbb
and
insb
inc
cmp
xrelease
push
jecxz
xorl
cmp
add
fldcw
push
sbb
cs
adc
in
mov
inc
mov
imul
inc
push
cmp
jp
call
daa
jno
and
lret
pop
mov
pop
loop
notb
in
and
mov
pop
pop
rcll
jno
pop
sub
dec
push
imul
sub
xchg
mov
cld
mov
hlt
inc
mov
cmp
je
scas
fildl
dec
and
inc
jmp
mov
repz
stos
bound
pop
push
pop
shl
mulb
pop
sub
insl
mov
cmp
movsb
and
mov
jo
mov
dec
jne
orb
fidivl
loope
push
int
repnz
mov
mov
sti
lock
out
out
push
in
mov
sbb
jmp
sub
jbe
scas
int3
sbb
xlat
lods
repz
in
cmpsl
xor
cltd
adc
es
imul
pop
jo
mov
bound
pop
push
pop
sar
mov
sub
or
loop
int3
outsl
push
mov
adc
popf
scas
sub
ffree
xor
ds
pop
repnz
pop
repz
xchg
stc
fwait
aam
mov
les
mov
sahf
sub
add
lock
sbbl
pop
or
xor
mov
sub
push
das
mov
push
xlat
inc
mov
rcl
vshufps
test
lock
sbb
inc
adc
lock
dec
adc
and
xchg
xor
sub
outsl
push
lock
sub
cmp
sub
inc
test
sarb
jmp
nop
sub
inc
sub
ljmp
jle
mov
jmp
mov
repnz
xchg
out
test
add
sub
movsl
aad
xor
mov
push
jno
cmpsb
out
cmp
in
mov
imul
jb
mov
in
sbb
int3
pop
in
fnstenv
mov
cmp
addl
push
outsl
jge
dec
mov
lret
or
mov
mov
cmp
imul
gs
mov
out
movsb
jbe
js
cmp
into
orb
xchg
lret
and
aas
mov
xor
add
int3
xlat
cmpb
mulb
push
leave
xor
xor
or
and
sbbb
hlt
push
out
add
std
inc
dec
cmp
loop
dec
dec
and
cmpsl
clc
adc
adc
mov
cmp
sub
xchg
pop
test
fsubrl
lods
stos
push
insl
xchg
cmp
daa
pop
addl
add
xchg
push
mov
jp
pop
jb
dec
xchg
cmp
mov
pop
mov
mov
imul
pop
jg
inc
dec
enter
add
cwtl
cmpsl
jge
push
sbbl
call
mov
mov
jae
hlt
testl
fisubrs
cltd
xlat
loopne
xchg
ret
xor
fstp
xchg
xchg
pop
jecxz
sub
stc
push
push
jmp
fcmovbe
out
imul
inc
negl
lcall
jbe
and
or
add
push
sub
push
pop
mov
and
std
jns
xor
push
pusha
jno
mov
mov
out
lock
fstps
fnstcw
dec
or
dec
dec
mov
or
out
pop
out
ds
pop
add
sbb
sbb
sub
repnz
leave
fwait
xchg
pop
nop
xchg
sbb
jl
adc
popa
mov
js
sahf
es
add
jbe
inc
fcmovnu
std
jnp
lods
mov
outsb
mov
pop
lret
ret
cmp
or
outsl
pop
add
dec
xchg
mov
fcmovu
cmp
nop
inc
xor
and
xchg
scas
in
nop
out
inc
pop
daa
mov
cmp
sub
pop
hlt
xchg
inc
stos
xchg
sub
mov
fcmovne
pop
ss
test
testb
leave
xor
add
xchg
pop
data16
mov
push
outsl
inc
mov
sbb
fwait
adc
pop
mov
nop
dec
mov
cwtl
sub
sub
rorl
in
or
mov
jno
xchg
sti
jle
mov
sti
scas
arpl
pop
mov
mov
cmc
aad
adc
aas
jle
jnp
mov
hlt
xor
pop
stc
add
sub
xchg
in
push
ret
enter
pop
shll
jecxz
add
fbld
out
push
mov
and
into
scas
sahf
icebp
sub
aas
xchg
ja
pop
out
inc
std
out
mov
xchg
in
in
dec
mov
mov
out
mov
and
pop
sub
in
ret
cmpb
cmp
add
call
jns
add
std
pop
cltd
xchg
push
out
mov
lret
lret
out
data16
repz
add
push
sahf
ret
push
shrl
xlat
dec
dec
mov
or
and
push
gs
add
lcall
pop
inc
mov
rclb
cmpsl
rorb
pop
push
enter
xlat
mov
or
inc
dec
sub
xor
jp
filds
sub
jbe
aad
jns
imul
mov
sti
inc
mov
inc
inc
jns
icebp
pop
adcb
repnz
add
fidivrl
mov
or
nop
adc
aam
mov
adc
push
popf
nop
fistl
test
and
mov
cmp
lods
nop
fwait
leave
call
push
popa
pusha
dec
fwait
scas
and
jl
lods
mov
sub
cmc
imul
inc
lods
sub
lods
adc
mov
pushl
jo
mov
mov
addb
jno
dec
pop
outsl
push
cmp
jle
or
incb
sub
mov
test
fsubrl
jb
fimuls
xorb
mov
inc
mov
out
sub
fists
xor
pop
inc
clc
fnsave
cmp
xor
adc
lock
std
inc
movsl
sbb
push
cld
pop
flds
adc
hlt
push
test
inc
sub
cmp
repnz
cli
jl
movsl
dec
and
pop
loopne
ss
jl
push
neg
movsl
sub
imul
ljmp
mov
pop
aas
dec
aad
or
or
add
test
push
adc
and
xchg
sub
xchg
imul
and
pop
lret
scas
ljmp
cmp
fdivrs
xchg
fimull
pusha
jg
pushf
out
lcall
xor
sahf
cmp
or
and
ja
xchg
mov
dec
lahf
jle
mov
mov
dec
jp
sub
and
inc
mov
pop
mov
mov
xor
jno
jo
loopne
addr16
shrd
das
sbb
leave
push
cmpsl
and
enter
sbb
sbb
ljmp
push
inc
mov
dec
addb
inc
cli
loopne
aaa
pop
cmp
jp
xor
sbb
pop
ret
inc
xor
cmpsl
out
push
mov
out
in
in
and
cmp
jbe
scas
subb
push
cwtl
mov
mov
push
pop
faddp
push
imul
ror
add
repnz
das
cmp
mov
clc
push
lahf
mov
adc
mov
pushf
sti
xor
jno
mov
adc
jl
std
xor
xor
jmp
lock
xor
mov
jp
mov
mov
loope
jae
ret
sub
jnp
ret
sbb
jge
mov
enter
icebp
inc
adc
pop
dec
jno
sti
sbb
les
arpl
and
repnz
push
and
sbb
stos
imul
int
pop
push
into
addr16
sarl
cmp
add
xchg
jae
lahf
out
mov
jb
cmp
aad
enter
jae
lds
leave
mov
add
push
popa
push
shll
pop
sarl
push
sbb
adc
and
fdiv
shlb
repnz
push
ds
stc
mov
cmpsl
fsts
icebp
repz
xor
imul
cmp
dec
shll
and
xchg
js
outsb
inc
out
ds
adc
test
xchg
rcr
in
mov
and
test
push
pop
pop
jae
lahf
jl
inc
aad
movsl
arpl
adc
push
xor
and
cwtl
push
mov
aam
into
fstp
nop
sbb
loop
inc
jg
into
jae
jb
outsl
inc
mov
xor
mov
call
mov
push
push
jg
jecxz
clc
xor
inc
or
outsl
push
sub
mov
dec
dec
mov
mov
xor
mov
push
mov
jecxz
jb
imul
ljmp
popa
andb
dec
int
pop
sub
inc
cmp
cmp
loop
cmpsl
add
add
mov
or
jbe
pop
popl
xchg
lds
push
loop
xor
hlt
lock
loope
adc
jmp
jno
cld
jp
inc
push
cli
movsl
jno
mov
ret
out
ds
dec
fidivs
xor
push
pop
inc
cmc
ret
sbb
fcoms
imul
ficoml
xchg
out
mov
fsubs
lcall
iret
cld
ljmp
jmp
pop
loop
dec
push
mov
fxch
jb
fwait
cmpl
mov
lds
nop
dec
mov
or
push
in
push
push
lock
fsub
mov
outsb
add
jne
test
mov
jle
add
adc
pusha
repnz
xchg
cltd
push
add
dec
mov
mov
dec
fmull
cwtl
cmp
cmp
lds
enter
js
popa
andps
movsb
dec
mov
repz
clc
and
arpl
movsl
push
fmulp
push
mov
mov
jne
enter
sbb
inc
aas
and
xchg
cmp
xchg
adc
cmpsb
cmp
enter
dec
xor
decb
jge
std
mov
dec
or
bound
push
fwait
push
cld
inc
jbe
dec
mov
pop
jp
push
mov
push
cs
mov
lret
in
mov
not
and
into
std
mov
dec
or
push
jle
and
lret
xor
lods
stos
xor
outsb
mov
adc
pushf
and
jl
cmp
mov
mov
mov
inc
mov
xor
rolb
cmpxchg
push
pop
cli
shr
pushf
jp
lods
xchg
imul
in
aas
cs
cmp
fistpll
inc
and
mov
repnz
sahf
push
sub
in
lcall
mov
inc
pop
add
mov
xchg
imul
add
inc
inc
sti
xchg
xor
in
sbb
aam
movb
mov
cmp
pusha
mov
stos
inc
add
loop
sbb
xchg
aad
mov
clc
rclb
pop
mov
shll
xchg
jnp
add
mov
outsb
inc
or
jb
fists
jecxz
loop
out
adc
and
clc
pop
adcl
clc
mov
aas
sbb
dec
adc
ljmp
bound
mov
xor
cld
movsl
jo
xchg
sarl
imulb
adc
cli
arpl
cmp
sbbl
inc
gs
and
push
not
cs
out
inc
std
lcall
cs
mov
mov
sti
insb
xor
movsb
arpl
repz
ret
adc
pop
pushf
lret
lret
push
incb
mov
jns
lahf
rclb
sbb
xchg
xor
jnp
daa
test
mov
push
jle
sub
loope
shlb
or
rcrl
sahf
das
es
stos
in
mov
mov
and
imul
mov
aad
and
clc
loope
sub
fwait
enter
mov
loope
sbb
subl
nop
stos
mov
inc
stos
andb
pop
rorb
inc
fldt
mov
lcall
lods
add
repnz
loope
mov
push
enter
mov
in
inc
cmpl
out
outsb
pushf
aas
inc
data16
je
iret
sbb
fidivs
add
add
fwait
mov
shlb
sbb
push
mov
js
mov
mov
ret
cs
or
movsl
jae
movsl
pushf
loope
sbb
sbb
imul
inc
mov
push
test
cltd
sub
cs
loopne
hlt
fwait
dec
push
xchg
push
sub
js
dec
dec
push
jo
mov
lods
pushf
scas
aam
pop
enter
cmp
sbb
iret
dec
dec
mov
or
loopne
sbb
dec
cmpb
cs
out
mov
mov
mov
call
aam
in
or
std
add
int
int3
arpl
loopne
pop
repz
imul
cmp
sub
sbb
rol
imul
clc
dec
inc
cmpsl
xchg
jae
dec
aas
or
add
clc
lret
iret
cli
sub
push
imul
out
pushf
jp
pop
daa
pop
clc
push
cltd
sub
pop
loope
xor
and
ficomps
inc
sbb
or
inc
pshufw
pop
adc
lret
pop
jb
and
dec
aam
and
xchg
cmpsl
jg
fnstsw
pop
imul
xor
into
mov
int3
xlat
inc
pop
mov
pop
data16
scas
rclb
ljmp
mov
xchg
inc
dec
push
in
out
lock
and
popa
fcom
add
inc
lcallw
pop
mov
outsl
or
int3
mov
outsl
push
inc
cmp
push
aas
es
jbe
mov
jb
scas
pop
shll
pop
cmp
push
roll
and
out
int3
bound
inc
test
mov
in
jg
mov
cmp
cld
and
rcrb
bound
test
mov
orl
insb
and
mov
lahf
flds
fisubrs
or
jnp
and
adc
inc
cmpsl
lret
xchg
sbb
inc
jb
mov
sub
in
lahf
push
sub
add
and
dec
sub
jo
mov
sub
mov
pop
dec
pop
inc
push
loope
or
xor
mov
cmp
jo
scas
push
test
push
fnstcw
pop
out
jnp
and
add
jp
xchg
stc
mov
cmp
mov
mov
mov
jnp
xorb
push
xchg
or
enter
push
jge
ljmp
insb
mov
fsubrp
inc
dec
mov
outsb
lcall
imul
cmp
fwait
cmpsl
outsl
xchg
mov
call
lahf
pop
xor
push
aad
push
sub
mov
mov
addl
jns
sub
aas
out
cmp
xor
loop
arpl
in
stc
push
inc
or
cmp
mov
jmp
sbb
adc
cmp
ds
in
mov
testb
cli
fs
arpl
mov
aam
or
sub
mov
pushf
dec
pushf
push
add
or
jo
ss
jg
sbb
pusha
lcall
negb
outsl
jl,pt
cwtl
mov
bt
clc
scas
ljmp
xchg
mov
cmpsb
mov
and
push
lret
xchg
dec
mov
xchg
fsubs
aad
dec
adc
jns
jno
shrl
and
lcall
sbb
sbb
les
sbb
xor
push
mov
inc
pop
dec
lods
fldenv
popl
aas
jbe,pt
cs
sbb
repz
notl
push
or
jns
push
popaw
je
xor
test
cmp
adc
jae
xchg
push
dec
js
fidivl
xor
jo
pop
ja
roll
iret
inc
xchg
arpl
xchg
out
xchg
arpl
sahf
fisubrs
fdivr
rolb
mov
cmp
or
jne
popa
rcr
inc
jp
sub
adc
dec
xor
in
xchg
ja
pop
lock
movsb
sbb
push
adc
jno
movsb
stos
cmpsb
mov
add
fdivl
cltd
rorl
push
mov
or
mov
cmpsl
mov
movsb
mov
add
decb
mov
push
sub
dec
daa
pop
in
es
idiv
test
orl
mov
cmp
dec
hlt
hlt
jecxz
outsl
mov
xorl
cmp
sub
imul
leave
fwait
add
jo
cwtl
xchg
into
cmp
cmp
and
nop
cmp
sub
sub
sub
enter
test
dec
rcrb
imul
or
sbb
jp
pop
hlt
mov
sbb
in
pminub
jnp
push
sti
jge
mov
sub
outsb
inc
fcomps
dec
mov
dec
sub
arpl
adc
xchg
fcomi
mov
dec
sub
lret
jno
loopne
das
adc
push
mov
sbb
movsl
pop
lret
lods
jmp
jno,pn
inc
adc
or
outsl
sub
fdivs
sti
jbe
push
inc
jbe
mov
addr16
jl
mov
inc
pop
jbe
cmp
push
fadds
arpl
movsb
fadds
mov
jb
test
jns
stc
mov
push
sbb
icebp
push
call
gs
movsl
adc
pop
movsl
sub
pop
dec
lahf
loopne
dec
ss
int3
jle
outsl
incb
cmp
loopne
shlb
xlat
fs
fidivs
and
xor
and
inc
test
xorl
dec
mov
les
cmp
mov
adc
sub
xchg
sub
int3
gs
sbb
push
mov
mov
std
inc
adc
loop
fcmovne
test
cmpsb
fisttpll
and
push
arpl
loop
push
mov
xchg
hlt
stc
jl
das
or
dec
xor
call
pushf
dec
mov
int
pop
push
ss
in
movsb
or
dec
cli
mov
das
jne
call
jnp
add
sahf
xchg
cli
push
into
xor
sbb
mov
int
hlt
sub
or
rcrl
add
xchg
ror
dec
inc
push
mov
cmc
jecxz
xchg
xchg
cmc
in
ja
jno
adc
loope
sub
and
or
scas
stc
mov
ret
stos
push
mov
or
jg
imul
bound
mov
and
adc
push
pop
lret
hlt
fs
cld
stos
dec
aad
xor
sbb
push
jae
pushf
push
sub
popa
pop
cli
dec
mov
jb
mov
push
clc
movl
xlat
ja
in
pop
testb
call
adcl
mov
std
mov
push
std
push
mov
push
stos
out
icebp
cld
jle
pop
inc
jp
test
pop
pushl
rorb
cmpsl
dec
or
jb
js
dec
cwtl
fnstenv
test
push
out
jl
fcoms
push
sarb
jne
lods
je
roll
push
push
cltd
adc
pop
xorl
popf
mov
inc
mov
lahf
jle
repz
mov
inc
adc
repnz
cwtl
insb
scas
fsubl
pop
leave
jb
imul
pop
lcall
enter
int
xchg
in
cmpsl
in
push
popa
jno
into
mov
push
xor
xchg
and
mov
fisubs
movsl
sub
ja
divl
pop
mov
fs
jno
test
inc
leave
ss
sbb
push
mov
xchg
jle
or
or
xchg
push
pushf
fidivl
lret
xchg
and
jmp
mov
in
cs
enter
and
cltd
ret
mov
ja,pt
jno
arpl
dec
arpl
je
pop
into
fstpl
mov
push
cwtl
int3
test
ret
dec
fidivrs
xor
add
out
sub
sbb
inc
add
outsb
mov
adc
aaa
inc
out
add
pushf
fidivl
sbb
aaa
dec
mov
lcall
adc
sbb
xchg
sub
sti
shlb
or
jnp
mov
sbb
loop
pop
jmp
dec
sub
sti
shlb
or
lcall
pop
test
jnp
or
inc
dec
cs
mov
inc
jle
cs
inc
jecxz
inc
ret
or
sub
dec
push
inc
rorb
addl
ficoml
jle
mov
insl
push
stos
test
add
rcl
fs
jg
repnz
arpl
or
repz
pushf
add
ret
xorb
jmp
addl
movsl
sub
sbb
test
imul
je
add
xor
repz
inc
scas
cmp
mov
mov
test
cmp
adc
ds
mov
mov
sbb
sub
or
test
pop
aaa
movsl
nop
sbb
dec
dec
jne
cs
xlat
mov
push
xchg
loope
sbb
jl
adc
popa
inc
orl
push
cmc
int3
sbb
push
mov
roll
in
push
mov
pusha
lret
mov
add
mov
movsb
rcll
mov
sub
and
xchg
mov
rcrl
mov
pop
and
dec
adc
outsl
push
cmp
cwtl
push
cmc
jbe
xchg
addr16
mov
jmp
outsb
and
enter
aaa
icebp
pop
std
jb
jp
mov
add
mov
imul
sbb
jl
xor
or
and
mov
pop
test
mov
jbe
mov
mov
mov
and
inc
xchg
cwtl
insb
in
lahf
movsb
dec
xor
xor
inc
xchg
sti
jp
mov
pop
ljmp
xchg
dec
cmp
clc
sbb
push
jg
fs
sub
mov
sarb
stos
adc
add
or
adc
and
jb
mov
sbb
push
bound
inc
in
aam
sbb
scas
push
cmp
fdivl
mov
iret
bound
pop
xchg
xchg
xor
jmp
cmp
bound
xchg
mov
pusha
out
fs
mov
shl
test
mov
pop
es
stc
enter
sub
fcoms
jne
ret
sbb
mov
push
or
mov
mov
sarl
rcrb
or
es
lahf
divb
cmp
ret
mov
lock
out
pusha
sbb
loope
loope
adc
in
push
into
or
sub
push
push
aam
stc
push
cmp
arpl
jb,pt
clc
push
ds
popf
mov
xchg
sub
out
ret
dec
fldl
in
aaa
pop
inc
shll
and
cmp
and
xor
lds
dec
flds
mov
adc
xchg
dec
xor
loopne
leave
jge
ss
sarl
inc
adc
fsubs
cwtl
popf
aam
inc
inc
and
add
push
or
inc
or
pop
inc
inc
sahf
push
inc
adc
jns,pt
push
inc
test
wbinvd
shlb
dec
xor
pop
sar
cmp
int3
js
repnz
popa
sub
jg
cmp
add
cmp
xor
out
out
scas
into
inc
arpl
mov
push
nop
dec
cmp
pop
cli
xor
ds
pop
out
mov
push
div
and
cmpsb
lret
arpl
mov
dec
pop
push
xchg
mov
mov
sahf
xor
mov
push
lock
inc
ss
xchg
orb
cmpsb
test
pop
out
or
mov
jg
sbb
divl
push
pop
scas
mov
in
xchg
insl
in
lods
das
fistpl
push
cld
dec
jl
sbb
or
xor
popa
daa
orb
dec
aam
ss
cmp
adc
sub
mov
loopne
dec
mov
jg
cmpsl
cmc
jb
lcall
sbb
xor
psrlw
leave
into
mov
sti
mov
lds
pop
out
mov
arpl
enter
jns
lret
mov
in
ret
mov
or
push
shrb
es
pop
lret
mov
inc
pop
sbb
cs
sub
xchg
rolb
inc
mov
and
inc
mov
stc
mov
clc
js
leave
lahf
fiadds
negb
nop
push
or
jl
in
lret
lea
xchg
cmp
movsl
xchg
cmp
and
pop
inc
loopne
sub
loop
jae
ror
movsl
fsubr
xor
sahf
adc
mov
jecxz
iret
cmp
bound
stc
sbbb
fisttps
popa
cltd
insl
loop
mov
xchg
cwtl
in
push
jo
insl
rcrl
ret
sahf
lret
jle
cmpl
insb
fcomps
stos
xor
test
enter
daa
jne
fbld
repz
aam
mov
bnd
xchg
imul
cmp
outsb
push
push
repnz
cmpsl
insl
mov
fs
xchg
test
push
test
push
test
xor
fs
out
pushf
scas
xchg
jge
out
aam
dec
xchg
cmpsl
jecxz
es
dec
add
pop
pop
dec
jle
cli
adc
loope
mov
push
nop
xor
pop
mov
sub
jns
inc
shlb
xor
imul
imul
andb
jo
clc
imul
lea
shll
fisubl
jno
xchg
mov
inc
sbb
or
add
dec
rcrl
add
push
jne
or
or
and
orl
jecxz
push
vpaddw
aaa
cmpsb
jb
nop
adc
cmp
das
js
add
mov
aad
and
jp
test
fstpl
aam
js
movsb
and
sub
jl
mov
sbb
sub
dec
xorl
sbb
shlb
repz
adc
loope
scas
jge
in
sub
dec
popa
push
mov
xor
mov
mov
xchg
inc
jp
roll
xchg
xor
add
fistpl
mov
enter
fldcw
mov
inc
inc
xor
imul
cmp
push
rolb
sbb
xchg
cmpsb
pop
imul
scas
xchg
insb
jno
dec
ljmp
call
cmc
cli
adc
ffreep
pop
push
cmp
xchg
xchg
cmpsb
mov
xor
sbb
fbld
insl
notl
mov
in
je
stos
sbb
inc
roll
xlat
js
push
mul
ss
lods
ror
dec
xchg
int3
lret
js
and
pop
sub
pop
mov
out
cs
sbb
test
adc
lods
jno
imul
jne
es
push
jae
leave
xor
fidivrs
dec
idivl
movsl
add
push
fdivrs
sti
and
arpl
sbb
push
xor
fsts
cld
adcl
push
out
mov
stc
xchg
add
and
sbb
mov
pop
in
int
pop
lods
xor
scas
and
mov
shrb
xor
and
pushf
pop
push
xchg
ret
dec
sbb
mov
in
sub
inc
mull
push
inc
fildll
push
sub
negl
mov
rcll
or
ds
js
lods
mov
jl
mov
mov
lret
and
flds
movsl
jmp
ljmp
sbb
popf
enter
sub
and
mov
xor
rcrl
xor
dec
and
sahf
push
int3
test
or
dec
daa
xchg
add
pop
mov
fs
xor
adc
pop
outsl
sbb
shl
scas
ja
loop
mov
jp
mov
fdivr
imul
pushf
lock
push
shll
xchg
push
push
dec
lcall
inc
mov
cmpsb
or
sbb
iret
add
lds
jmp
mov
stos
jnp
pop
or
inc
mov
hlt
stos
call
adc
inc
adc
or
push
mov
jae
sub
aad
inc
sub
loop
lea
mov
shll
out
test
rorl
test
aas
loopne
mov
sarl
fistpll
sti
push
xchg
mov
fdivl
mov
pushf
imul
xor
test
jae
adc
adc
xor
xchg
inc
stc
js
push
jg
pushf
or
rclb
sub
dec
add
adc
daa
pop
mov
jae
fisubs
cltd
add
mov
lods
ss
mov
cmp
xor
and
mov
shl
sbb
or
fldcw
sbb
pop
sub
xor
popa
test
clc
push
daa
in
jp
gs
int3
mov
pop
xor
dec
aam
push
mov
jno
inc
pop
jmp
jecxz
fldcw
sbb
mov
pop
xor
popa
test
clc
push
daa
in
jp
gs
pop
in
aam
je
mov
dec
aam
mov
ror
mov
and
pop
dec
lds
scas
push
and
or
xlat
pop
ljmp
mov
mov
test
cmp
in
jo
cwtl
stos
pop
ficoml
mov
aas
aaa
sub
sub
cmp
inc
notb
xchg
mov
inc
aam
push
enter
popf
sub
in
mov
je
loop
jne
fimuls
cmpsl
in
daa
pop
lret
cmc
adc
cmp
pop
cltd
mov
repnz
hlt
mov
addb
cmp
stc
push
add
pop
jecxz
mov
xchg
push
aas
inc
pusha
sub
xchg
js
mov
sti
loope
adc
inc
dec
jae
xchg
or
faddp
dec
rcr
jno
lret
fs
mov
push
aad
adc
adc
xchg
sub
lock
cltd
pop
mov
jmp
xchg
popf
mov
inc
hlt
into
dec
add
outsb
scas
fwait
and
push
into
pop
cli
or
adc
hlt
in
sahf
addl
dec
fs
lock
ror
daa
les
rcr
or
pushw
push
flds
test
das
mov
fcoms
arpl
fmuls
and
or
dec
mov
jl
pop
daa
xchg
sub
fcmovnu
jge
mov
mov
sarl
adcb
mov
pmovmskb
flds
movsb
mov
push
add
int
aad
sbb
push
and
mov
ficomps
xor
lret
jge
push
outsl
sbb
leave
pop
pop
rolb
sahf
aam
mov
push
add
and
mov
sbb
mov
cltd
or
lret
insl
fistl
push
xchg
mov
push
pop
push
mov
jmp
jo
orl
add
xchg
leave
inc
mov
sub
adc
andl
fisttps
jnp
dec
mov
xor
sbb
mov
ljmp
imul
inc
cltd
nop
lret
jae
push
out
pop
in
mov
fiadds
gs
outsl
sub
lret
xor
dec
add
scas
or
mov
ret
mov
dec
jecxz
dec
and
pop
rcll
mov
clc
xchg
repnz
into
cmpsl
inc
arpl
mov
jns
out
repz
fcoml
clc
add
xchg
fldt
in
jbe
cmpsl
je
push
popa
push
pop
out
inc
dec
and
xchg
cwtl
testl
ret
rcrl
lcall
cmpl
jns
int3
imul
xor
outsl
fs
sub
fidivrs
pop
fistpl
cltd
pop
repz
add
and
and
cmp
in
sub
fs
or
jmp
pop
int
add
and
cmc
js
adc
leave
dec
stc
sbb
rolb
jmp
or
subl
inc
dec
sbb
push
xlat
xchg
mov
inc
pop
paddsb
pop
push
xor
leave
ret
and
nop
xchg
push
test
movsl
pushf
out
out
jle
lahf
xchg
cmpsl
sub
xor
add
testb
add
sahf
stc
mov
daa
jp
loopne
loopne
push
gs
iret
adc
in
jne
jae
cmpsb
jl
enter
sbb
or
push
and
inc
out
mov
sbb
imul
xchg
cmp
xchg
xchg
cltd
dec
aam
xchg
or
or
pop
cmp
lcall
mov
jp
pop
scas
iret
arpl
mov
pop
mov
dec
sub
jmp
mov
fiaddl
es
call
sub
mov
adc
jo
pop
ja
lret
popa
cmp
shrb
test
dec
sub
lods
push
xchg
mov
adc
sbb
aaa
xor
stc
imul
cmpsl
push
push
clc
xchg
adc
mov
inc
daa
scas
push
in
sbb
fwait
popf
pop
dec
int
jnp
ja
stos
or
fisttpl
pushf
sub
fldt
div
jne
test
cmc
push
in
leave
sub
adc
push
inc
stos
fs
shll
repz
aad
pop
push
pop
or
inc
ret
test
jmp
repnz
cmpb
and
sbb
cmpsb
scas
push
cs
mov
xor
pop
inc
lret
and
mov
pusha
or
fcoml
cmp
jl
lods
cmp
cmp
lret
mov
fsubr
push
lret
add
enter
icebp
addr16
xor
xchg
mov
subb
or
clc
std
data16
add
mov
jecxz
cs
add
mov
popa
mov
stc
jne
in
inc
hlt
in
add
and
push
inc
xor
push
jle
pop
add
insb
dec
push
and
push
xchg
fnstenv
lret
sbb
xor
pop
stos
sbb
mov
pop
jle
cmp
jnp
pop
insb
pop
add
adc
call
sub
push
adc
orb
adc
and
jp
test
dec
sub
out
add
mov
mov
scas
movsl
cli
dec
out
push
andl
push
out
inc
or
ja
lret
xchg
aaa
cmc
mov
mov
leave
shrl
inc
arpl
lcall
lret
ficompl
stos
ljmp
and
adc
and
mov
push
mov
out
mov
jmp
add
neg
in
je
stos
mov
add
in
sar
inc
add
sbb
pop
call
sti
arpl
lock
aad
mov
bound
scas
inc
and
vfnmaddpd
not
das
clc
cmpsl
mov
jno
sub
arpl
mov
ljmp
inc
inc
sbb
ljmp
pop
jne
enter
repz
fidivl
mov
jae
push
xor
cltd
filds
shll
jmp
andl
sbb
ficoms
bnd
xchg
imul
jecxz
clc
pop
into
push
or
xchg
cmpsb
clc
dec
sub
andb
and
jp
push
mov
push
dec
sbb
adc
xchg
mov
loope
int3
movsb
sub
loope
iret
mov
shrb
cli
mov
mov
jnp
aam
cmpb
push
nop
cmp
sahf
inc
lods
ret
add
xor
call
add
sti
aas
sbbl
aas
jo
inc
jmp
inc
fistpl
cmp
or
stos
ret
inc
cmp
push
adc
popa
sahf
jnp
push
cmp
lahf
sub
pop
hlt
dec
mov
fcomi
mov
into
loop
shr
push
push
cmpsb
lock
shll
inc
ljmp
out
bound
push
xchg
insl
loopne
cmpsl
push
mov
lea
lcall
add
mov
daa
aas
adc
dec
push
cld
lock
call
data16
icebp
nop
int3
int3
xchg
sbbl
in
dec
push
pop
sbb
dec
xor
aaa
push
dec
adc
inc
adc
jo
sbb
fs
dec
int3
mov
xchg
xchg
lea
cs
repnz
add
add
insl
push
movsb
sbb
or
js
out
jg
sbb
repz
fs
or
mov
xchg
cmpsl
xlat
fisubl
mov
or
js
imul
inc
mov
jle
inc
lahf
adc
push
and
xchg
mov
ficoml
imul
fcoms
sbb
mov
cmp
push
into
aad
scas
scas
daa
sbb
sbb
mov
movsl
pop
jge
and
fwait
and
sbb
subl
repz
xor
and
xlat
add
test
xchg
or
daa
stc
bound
mov
test
stc
sub
icebp
sarl
shrb
sub
lret
dec
daa
add
and
mov
push
pop
xchg
inc
add
es
inc
aaa
bound
inc
mov
jle
adc
clc
add
dec
pop
mov
mov
lret
sub
or
fxtract
jg
mov
inc
fbstp
fwait
arpl
lret
fcmove
aaa
push
lahf
popf
xor
jae
add
pop
push
xchg
dec
push
cmp
jmp
sbb
loope
cmpsl
stc
imul
test
jg
call
or
or
push
rcrb
mov
enter
repz
mov
idivb
cmpb
sbb
fcmovnbe
pusha
ss
add
aam
pop
cwtl
sub
jmp
dec
and
mov
xor
sbb
push
add
xchg
mov
or
rclb
jns
int
imul
push
outsb
xchg
outsl
pop
cmp
sbb
movb
jge
mov
dec
cltd
xchg
xor
loop
push
fisttpll
movsb
mov
lret
jbe
out
cmp
sbb
notl
dec
and
mov
push
loop
js
mov
push
pop
inc
dec
inc
inc
cli
pop
add
filds
or
int3
adc
loop
scas
ret
sub
pop
push
jle
sbb
imul
leave
lock
test
xchg
mov
and
ror
lret
or
push
jp
or
xor
ljmp
jno
hlt
and
fs
sti
clc
mov
pop
or
fwait
xor
mov
icebp
mov
xor
push
and
pushf
pop
imul
mov
movq
mov
mov
loop
fdivrp
data16
test
mov
imul
mov
mov
and
jae
mov
subb
mov
iret
test
int
imul
sbb
insl
lods
or
cmp
mov
out
push
fwait
sub
lea
or
andb
js
in
shlb
aam
cmc
out
ds
icebp
fidivl
fdivrl
insl
inc
fstpl
and
jge
cli
test
xor
jge
out
orb
jle
loopne
in
push
in
sub
jmp
cmp
adc
fbstp
mov
hlt
loop
fldcw
sbb
mov
mov
lea
or
mov
pop
xchg
into
adc
dec
sbb
adc
stos
or
sub
xorb
dec
mov
jns
mov
add
jnp
fidivrs
mov
pop
push
xor
cmp
pop
popa
pop
test
ljmp
pop
push
std
mov
rcrb
cmp
mov
xchg
lret
jae
dec
es
or
mov
pop
lret
and
aad
jmp
scas
xlat
ret
adcb
and
add
cld
mov
push
test
je
fisttps
xor
int3
test
sti
insl
and
or
jg
std
cmp
cli
mov
push
pop
mov
add
mov
sar
out
add
mov
jp
jecxz
out
or
sbbl
cmp
push
pushf
inc
scas
pushf
lcall
dec
mov
data16
add
int
enter
int
outsl
xchg
mov
push
mov
ljmp
adcl
mov
xor
aad
adc
movsl
cmp
pop
in
jbe
or
arpl
dec
and
retw
mov
adc
les
cmp
add
inc
pop
adc
cmp
hlt
cmp
and
inc
jl
jg
in
pop
mov
stc
rcll
xchg
mov
lret
aaa
outsl
pusha
cwtl
and
ror
mull
add
mov
mov
insl
pop
mul
xchg
or
mov
push
jge
cmp
arpl
xchg
neg
adc
inc
sub
xchg
jecxz
repz
add
cs
addr16
mov
popa
xchg
ss
int
push
enter
int3
dec
cmp
mov
mov
sub
out
jg
inc
mov
push
movsl
rcr
jns
xchg
std
or
loop
data16
aad
leave
idivb
jbe
or
jecxz
stos
xor
imul
popf
xor
imul
mov
jnp
mov
test
mov
je
pushf
ss
adc
cld
sbb
je
mov
jb
sbb
int3
jle
or
iret
jnp
add
jne
cmpsb
nop
aam
lods
in
cmp
sbb
xchg
decb
xlat
mov
insl
jmp
scas
sbb
fsubrs
lock
mov
pusha
xor
cmp
mov
aas
out
imul
adc
daa
xor
sbb
cmpsl
or
push
popf
cmp
xor
outsl
outsb
pop
inc
fisttps
xor
xchg
rcrb
icebp
sbb
aad
and
xor
jns
inc
sub
neg
movsb
dec
cmpsb
mov
jecxz
mov
or
test
dec
mov
arpl
lea
adc
push
sbb
sub
and
push
mov
mov
mov
mov
aad
mov
mov
or
lret
mov
push
add
sbb
shrb
xor
mov
lds
add
lock
stos
pushf
cli
jne
jecxz
jmp
mov
in
addr16
cmp
sti
imul
les
fldenv
xchg
stc
cmc
sarl
scas
xchg
data16
xchg
stc
inc
dec
lea
scas
adc
lods
xor
addr16
inc
cmpsb
dec
stos
inc
loopne
fstl
adc
testb
add
pop
mov
sbb
xchg
test
leave
sbb
das
and
xor
and
jmp
ror
push
sarl
mov
sub
fcompl
mov
scas
arpl
lret
pop
push
inc
pop
jbe
sti
jp
iret
and
movsb
sub
jne
lods
add
cltd
shll
sbb
sbbb
out
lds
mov
sub
push
jmp
cmp
loop
enter
dec
pop
mov
pop
jp
setns
push
lods
push
ja
loop
sub
sub
pop
test
scas
test
mov
and
xor
pop
xchg
movsb
orl
and
lds
adc
sbb
add
lea
mov
sbb
cltd
jecxz
sbb
pop
pop
dec
int3
xchg
dec
adc
jmp
andb
add
sbb
push
add
pop
adc
and
push
arpl
pop
fcmovb
xor
push
xchg
mov
dec
and
jle
addb
and
std
scas
xchg
scas
loope
adc
pop
cmp
inc
jae
cmp
icebp
fisttpll
pcmpeqd
pop
jg
icebp
ds
scas
sbb
jmp
fstp
subb
cmp
dec
cmp
xor
cwtl
and
sub
xor
fcomip
andl
push
fimuls
inc
sbb
xor
ficoms
push
mov
scas
sbb
in
xor
inc
adc
push
daa
push
jo
add
xchg
out
xlat
mov
sahf
mov
mov
pop
xor
xor
and
arpl
mov
mov
or
mov
insl
jp
hlt
inc
inc
inc
inc
pop
lcall
adc
mov
xor
fldt
ret
popa
lcall
cmp
pop
imul
pop
repnz
ret
test
jo
mov
mov
cltd
xchg
flds
shlb
and
sbb
loopne
lock
jge
jg
shrl
js
movsb
stc
inc
mov
jp
fcomps
pop
mov
in
dec
leave
cmp
daa
fisttpll
pop
lret
movsb
insb
sub
stos
jo
outsb
rclb
sbb
das
mov
jae
icebp
ret
xor
inc
mov
inc
jge
sub
and
insl
sub
shlb
xor
jg
mov
std
orb
lret
sbb
cld
stos
inc
fwait
shrb
inc
push
cmp
outsb
xchg
mov
scas
pop
outsl
aad
loopne
jl
xchg
mov
and
cmp
rcrb
pop
inc
cmpsb
xchg
jp
xor
in
xor
jne
mov
fwait
call
dec
sub
int3
sbb
push
in
fnstsw
dec
mov
push
aad
das
adcl
loop
xor
mov
xchg
sbb
push
insb
movsb
mov
push
add
iret
dec
xchg
push
sub
hlt
mov
mov
out
cltd
imul
mov
dec
emms
rcrb
ljmp
inc
les
loope
xchg
cli
addr16
sub
rolb
dec
or
sub
sti
cmpb
flds
jae
out
cld
lock
test
aam
jnp
ror
jecxz
mov
jmp
pcmpgtd
push
rcll
mov
fdivs
or
xor
iret
sub
dec
nop
cltd
rorl
and
hlt
push
cmp
in
ret
push
cmpsb
daa
lahf
mov
jno
cmc
bound
cmp
jp
push
mov
and
pop
or
cltd
adc
xchg
pop
stos
xchg
loope
out
adc
push
int3
std
cmc
and
mov
inc
outsb
lahf
cmpsl
mov
aaa
fsubr
push
jno
test
xlat
jmp
cmpsl
mov
cmp
aaa
xlat
push
repz
dec
and
or
shr
mov
or
cmpsl
fcom
out
das
leave
and
lea
jns
cmpsb
out
andb
stos
flds
adcl
movsb
adc
xchg
repnz
pop
in
pop
jmp
faddl
xchg
notl
adcl
xchg
mov
nop
les
lret
sub
jb
push
rorl
mov
lods
andl
mov
inc
mov
pop
xchg
or
in
lock
mov
adcb
xor
hlt
lret
inc
xlat
dec
stc
jmp
stc
les
or
sbb
pusha
stos
mov
push
sub
jecxz
or
shll
mov
jecxz
repnz
test
jle
es
scas
sbb
mov
sbb
xor
sbb
mov
inc
popf
inc
mov
cs
inc
je
sbb
sbb
test
inc
xchg
xchg
xor
ja
cld
lds
outsl
pop
add
sbb
mov
mov
in
mov
cmpsl
cmp
aas
mov
sub
push
lea
outsb
rcl
test
and
or
mov
aaa
pop
inc
pop
fs
mov
enter
movsb
adc
mov
add
imul
cmc
jne
push
push
mov
xor
or
in
sub
nop
mov
mov
add
cwtl
repnz
ficompl
or
adc
jns
mov
cmp
jecxz
es
ret
jns
movsl
ja
xchg
pushf
lds
mov
outsl
popf
push
mov
pusha
xor
aas
sbb
aad
mov
pop
out
push
xor
arpl
dec
pop
mov
add
jno
xor
roll
inc
lea
inc
xor
cmp
dec
data16
out
jp
pushf
dec
pushf
mov
in
or
addr16
lods
or
add
sbbl
cs
sbb
and
pop
aad
outsb
adc
stc
lret
ljmp
pop
data16
sbb
or
mov
popf
pop
mov
hlt
enter
jg
leave
test
jnp
dec
xor
cmp
jns
cmp
pop
in
pop
push
das
jl
mov
in
dec
cld
push
cmc
cmp
stc
out
pop
dec
cmp
in
mov
and
jnp
adc
adc
and
inc
sti
or
je
fs
pop
insb
mov
pop
imull
mov
jb
mov
loopne
lret
or
dec
das
cmp
jmp
inc
jge
stc
add
mov
jg
xor
cmp
stos
jne
xor
jp
aad
inc
stos
shl
insb
mov
jp
push
inc
pusha
das
mov
pop
mov
pop
mov
test
sub
dec
leave
mov
in
pop
push
inc
mov
jmp
cmp
pusha
jno
pop
jmp
mov
les
pop
and
out
loopne
jp
fdivrl
add
enter
mov
push
mull
pop
insb
mov
outsl
and
sti
leave
daa
mov
mov
aam
popa
pop
ficoml
out
xchg
js
mov
push
mov
adc
and
mov
lahf
mov
outsl
pop
jmp
lods
jbe
adc
push
int
orb
int
push
push
adc
dec
loop
inc
xor
fdivrs
cmp
jno
sbb
es
adc
imul
ret
mov
mov
push
jbe
cld
pusha
push
rcpps
push
test
xor
pusha
mov
mov
insb
shll
adc
insl
orb
pop
inc
xor
push
jmp
or
pop
mov
xor
in
mov
jmp
or
divl
repnz
dec
mov
xlat
clc
jmp
mov
push
sbb
fs
jmp
les
mov
fcompl
jge
sbb
lock
xchg
out
outsl
dec
fistps
mov
sub
ds
mov
notl
pop
dec
pop
popl
cmpsb
sahf
push
fidivl
sbb
xchg
adc
lock
cltd
daa
loope
daa
in
jmp
cmpsl
clc
int
xchg
cmc
cmp
ret
add
pop
and
std
dec
pop
lahf
jns
fsub
push
repnz
in
cmpsl
sbb
iret
xor
idiv
pop
jb
mov
jge,pt
xchg
mov
das
fstp
loop
mov
inc
popf
jae
dec
dec
fisubrl
int
adc
stc
jle
lahf
add
xchg
lock
movsl
fwait
xchg
sbb
inc
fdivrl
jmp
cmpsl
aaa
lds
inc
push
rolb
jbe
cmp
inc
sti
daa
mov
lea
sub
loope
xchg
jae
shlb
mov
dec
lret
stc
push
ja
inc
mov
test
outsl
fsubr
outsb
iret
mov
incl
push
mov
shll
mov
cmp
mov
pop
push
mov
jle
xchg
sti
push
and
sbb
xor
mov
pop
adc
adc
fisttpl
xor
mov
xchg
mov
outsb
inc
mov
pushf
xor
pop
adc
mov
stos
mov
jl
inc
mov
dec
mov
mov
or
mov
inc
inc
mov
cmpsl
and
cmp
jne
adc
adc
outsb
inc
js
call
push
and
adc
roll
jmp
mov
or
sub
ljmp
arpl
and
clc
jmp
test
jb
stos
orb
mov
test
test
daa
pop
pop
sub
es
cmpsb
dec
lods
pop
out
in
cmp
fidivrs
adc
cltd
push
dec
clc
jmp
fsubl
jl
push
test
shll
gs
shrl
shll
imul
and
sub
lods
pop
lcall
pop
pop
mov
push
sbb
mov
mov
incb
int
nop
stos
loopne
lret
pop
sub
out
test
outsb
jmp
adc
xchg
cmp
mov
jnp
inc
lcall
mov
add
xchg
adc
add
lret
rorl
dec
les
lret
add
and
aad
add
sbb
pushl
lods
pop
push
andb
mov
pop
idivb
mov
pop
pop
jmp
pop
cltd
mov
notl
loop,pt
add
pop
or
push
outsb
mov
shll
nop
jae
push
lods
ss
push
sub
cltd
sbb
jg
or
cmc
dec
cld
dec
data16
negl
dec
test
cld
jne
fmul
lcall
cmc
aaa
test
push
mov
outsb
data16
pop
imul
dec
dec
xchg
scas
sti
sbb
mov
jmp
pop
jb
xchg
notl
xor
push
test
filds
inc
sti
lret
xor
arpl
adc
dec
xchg
adc
fldl
andl
fmull
push
xor
icebp
movsb
ret
repnz
lds
lds
mov
push
add
lea
mov
int
push
test
lods
mov
sub
sub
xchg
sbb
sahf
imul
shll
dec
adc
dec
imul
sbb
or
mov
test
clc
jbe
enter
and
push
adc
push
jbe
rclb
dec
sbb
inc
fld
adc
jnp
add
mov
jmp
cmc
iret
les
test
pushf
ljmp
nop
cmpsl
dec
mov
rorb
shrb
pop
xchg
xchg
add
xor
dec
cmpb
fnsave
pop
cmpsb
xchg
jecxz
inc
int
rorl
add
dec
pop
mov
jns
pop
cmp
subl
shll
leave
clc
and
rorb
std
inc
cwtl
xor
mov
loopne
scas
lret
sub
add
outsb
les
or
and
das
outsb
lret
daa
and
lds
lret
ror
add
sahf
and
add
dec
mov
add
sub
sbb
xchg
and
mov
aas
test
or
shrb
jb
sub
popa
adc
mov
or
lret
daa
test
inc
fimuls
icebp
divb
inc
pop
xchg
lret
dec
push
std
js
xor
mov
and
adc
or
and
push
push
pop
or
push
push
xor
mov
les
jg
shll
sub
aam
cmpsb
loope
pop
push
enter
scas
les
xchg
mov
dec
jb
xchg
mov
and
sbb
push
inc
rolb
xlat
daa
mov
jnp
notl
jae
sbb
xor
push
dec
or
les
mov
imul
push
mov
dec
or
xchg
int
xlat
adc
pop
movsb
fucom
pop
out
sbb
jmp
or
sahf
and
and
rol
gs
fmuls
mov
push
mov
stc
cmp
fsubs
inc
clc
xor
add
mov
adcb
daa
mov
outsl
and
jmp
sub
dec
jmp
leave
adc
loopne
nop
ds
cmp
fwait
cltd
sbb
call
jg
add
sarl
xchg
lret
out
xchg
pushf
push
inc
pop
leave
clc
mov
pop
bound
xor
out
xor
mov
add
pop
notl
and
dec
popf
ret
mov
pushf
nop
mov
push
movsl
jne
sub
add
fsubl
add
pushf
testb
xor
sbb
movsb
ds
and
popa
xor
scas
clc
dec
aad
or
xor
mov
std
mov
xor
daa
push
or
xor
and
adc
icebp
jle
movl
mov
lahf
icebp
mov
adcb
sahf
jmp
and
xlat
pusha
mov
cld
mov
jge
push
les
lret
jmp
xchg
mov
movsb
dec
push
inc
ret
dec
xlat
xlat
ds
mov
sbb
cmc
mov
push
notb
dec
stos
inc
dec
xchg
je
and
or
jle
mov
jno
and
sbb
int3
adc
mov
xchg
inc
mov
lahf
cltd
push
push
pop
pop
sub
lret
pop
test
or
jp
xor
mov
pop
lret
fistpl
cmp
cmc
mov
dec
mov
mov
mov
test
sbb
lahf
stos
xchg
negl
or
cmc
push
daa
pop
xchg
scas
adc
jecxz
fdivrl
inc
xchg
adc
xchg
orb
mov
pop
int3
and
fcomi
dec
or
add
test
adc
ja
je
hlt
cmp
nop
mov
sub
pop
dec
push
addr16
or
mov
xor
fs
mov
insb
mov
repnz
nop
ret
leave
outsl
and
and
pop
out
ja
push
int3
insl
lcall
or
cmp
mov
mov
mov
dec
or
loopne
into
or
cmpsb
pop
or
dec
aas
daa
and
shlb
inc
gs
adc
push
nop
pop
sbb
mov
jnp
loope
xor
pop
xchg
ret
rolb
pop
sub
dec
jnp
jo
xor
push
push
repnz
dec
and
add
pop
adc
scas
cli
cmp
test
ljmp
or
popa
or
dec
in
sbb
add
or
mov
dec
dec
dec
pushf
mov
imul
mov
and
xor
daa
or
push
sbb
jns
movsb
sahf
and
jae
mov
adc
or
aad
cmp
cmp
out
pop
sbb
sub
cmpb
mov
ror
mov
add
scas
scas
cmp
sbb
xchg
ds
test
xchg
jno
xchg
std
iret
jae
pop
or
jge
mov
fwait
jmp
pop
mov
in
pop
inc
mov
pop
cmp
out
ja
push
dec
fidivrs
cmovp
das
sub
sbb
jb
pop
test
loop
lds
adc
mov
in
xor
dec
inc
fsubs
sbb
xor
int
xor
in
dec
outsl
int
push
lods
out
sub
inc
xchg
js
insl
pop
push
lret
cmova
das
sbb
xchg
inc
xchg
adc
stc
xor
test
gs
setns
jno
push
mov
notl
or
pusha
in
out
in
out
push
rorw
xchg
jmp
jle
mov
insl
pop
push
in
xor
pop
jae
pop
inc
fdivrs
mov
mov
dec
mov
icebp
popf
popa
mov
lods
ret
std
mov
inc
ja
cmpsl
lock
or
cmp
adc
into
lahf
adc
mov
and
and
mov
jp
mov
xchg
mov
and
scas
adc
xchg
or
sahf
cmpsl
fistl
stc
mov
jnp
cmp
or
dec
and
lret
cmpsl
mov
or
or
dec
pusha
popl
push
adc
das
jmp
lea
cmp
lea
cmpsb
imul
sar
mov
xor
rorb
cmp
mov
in
rol
or
mov
xchg
in
inc
xor
xor
sub
pcmpeqw
xor
movsl
jmp
cmc
aam
xchg
jae
sahf
popa
js
into
jbe
shr
jp
movsb
adc
jle
cltd
push
inc
fildll
xor
rolb
pop
imul
sub
popl
aaa
push
aas
or
push
xchg
jne
fsubrs
testb
pop
loope
jnp
jg
sub
lods
in
stos
inc
mov
jmp
cli
cmpsb
and
mov
push
lock
sbb
lcall
sub
mov
insb
xchg
sahf
mov
mov
idivb
addb
cmp
mov
loop
enter
cltd
mov
xor
cltd
xchg
jge
or
roll
popa
ljmp
pop
addr16
sbb
sar
adc
cmpsb
mov
stos
add
test
adc
int3
adc
setl
cs
popf
jmp
mov
sbb
xchg
test
lods
scas
xchg
ljmp
sbb
xchg
sub
dec
es
popa
sbb
xor
push
sahf
xchg
test
inc
jp
loopne
or
test
and
or
pop
jns
xchg
pop
push
fs
push
fsubr
push
mov
test
repz
inc
cwtl
aaa
xor
push
in
adcb
push
scas
ret
enter
cmp
and
pop
or
xor
mov
add
loopne
lods
hlt
in
mov
adc
movsl
lret
xchg
into
sub
cmpsb
push
pop
adc
mov
repnz
cmpsb
add
and
push
enter
cmp
mov
fnstcw
roll
stc
adc
idiv
outsl
push
jp
and
mov
push
and
mov
mov
xchg
adc
xchg
and
jmp
ret
mov
clc
lcall
push
out
inc
add
mov
inc
or
outsb
xor
aam
push
movsl
packsswb
dec
inc
outsl
ds
inc
jg
cli
sub
and
mov
int
mov
push
cmp
fimull
aam
cmp
inc
cmp
enter
push
sti
lock
aas
out
dec
cmpsl
sub
fsubp
sub
mov
stos
lahf
dec
mov
in
ja
mov
push
jne
add
and
push
nopl
ret
pop
mov
daa
push
mov
sub
jno
je
mov
mov
or
fistps
fistpll
aaa
test
sub
stos
sti
stos
in
ljmp
jne
adc
ficoms
popa
pop
subb
mov
mov
cmp
fildll
jns
imul
int
sub
inc
xchg
jnp
repnz
sbb
mov
cli
dec
mov
cmp
je
inc
scas
std
sarb
std
subb
xchg
cmpsl
outsb
mov
repz
sahf
or
js
sub
fildl
xor
cld
or
pop
sti
loope
vpmovm2w
inc
iret
lds
mov
gs
shl
inc
xor
mov
lock
adc
insl
mov
and
pop
push
cmp
in
stc
push
hlt
xchg
roll
test
mov
dec
rcrl
inc
sub
imul
call
adc
cmp
pop
mov
imul
pusha
push
movsl
packsswb
dec
stos
out
pushf
inc
jp
xor
jle
out
stos
pop
jmp
pop
mov
pop
arpl
mov
aad
mov
add
les
pop
jnp
scas
popa
mov
imul
mov
push
out
sarl
or
shrb
out
xchg
iret
cli
inc
dec
jo
jmp
xor
mov
inc
inc
cmp
incb
pop
sbb
sbb
enter
dec
sbb
cmp
fs
dec
pushf
lods
shlb
in
fcompl
loop
jecxz
fisubl
ljmp
xor
cmc
sub
nop
out
xor
shlb
stc
sbb
mov
aas
adcl
lcall
mov
cmp
push
add
lcall
xchg
jbe
nop
adc
adc
addr16
loope
in
and
xchg
sahf
inc
hlt
mov
fstl
sbb
rcrb
or
fmuls
xchg
sub
lret
daa
pop
imul
push
sub
pop
out
add
cwtl
je
cld
pop
adc
int3
inc
push
arpl
push
pop
inc
and
packuswb
loope
inc
mov
mov
in
dec
pop
scas
call
dec
faddl
sbb
xchg
mov
sub
mov
push
adc
movb
sub
or
shrb
out
xchg
iret
popa
orl
ss
or
pop
loop
mov
xor
pop
nop
push
jecxz
roll
je
xchg
cmp
inc
aam
mov
pop
movsb
loope
scas
je
jno
arpl
push
mov
dec
cmp
mov
cmc
dec
adc
test
insb
xchg
out
movsb
cli
pop
push
cli
or
xchg
inc
int3
xchg
fwait
cmp
je
je
cmp
inc
out
inc
xlat
in
sub
gs
cmp
add
sbbl
sub
jge
adcl
mov
lret
imul
cmpsl
xchg
and
inc
mov
fildll
mov
mov
movsl
les
shll
or
out
pop
movsl
lret
cmpsl
add
xor
jmp
mov
add
ljmp
scas
bound
cmp
and
mov
out
pop
push
jbe
aad
lret
ret
jp
push
dec
popa
movsl
inc
mov
mov
pop
push
push
insb
push
jns
stos
sahf
icebp
mov
xchg
aaa
sub
xor
cli
cld
ret
push
and
dec
mov
xchg
test
in
add
cwtl
movb
popf
push
rcll
inc
ljmp
into
xor
mov
jno
repnz
jl
add
outsl
out
pop
scas
hlt
add
mov
or
insb
dec
les
push
xor
aas
rcrl
dec
jmp
imul
hlt
imul
sub
mov
xor
in
idivb
lcall
stc
xor
pop
push
xchg
dec
loope
enter
inc
add
data16
cmp
data16
cmpb
cmp
clc
and
push
js
icebp
adc
adcb
fnstenv
fptan
jo
and
ret
bound
mov
pusha
movsb
or
sbb
cmp
sbb
ficomps
push
push
das
jo
ret
mov
fcmovbe
enter
jne
xor
pusha
stos
ljmp
imul
push
enter
in
mov
shrl
in
arpl
and
pop
inc
xchg
aam
scas
mov
je
and
scas
rorl
lret
ss
cmc
rcr
xchg
cmpsl
cmp
sub
pusha
mov
pop
sbb
and
adc
in
loop
mov
out
xchg
in
cmpsb
gs
or
or
xchg
je
jge
pop
mov
mov
mov
fstl
sub
jb
insl
sbb
lret
xor
cmp
fsubr
int
lds
fldt
adc
daa
stc
mov
shrl
subb
fsubrs
mov
or
xor
push
mov
fsubrl
mov
sub
pop
les
adc
sub
stos
jo
les
call
outsl
mov
test
cs
jo
dec
add
daa
push
mov
push
icebp
shl
subl
cmc
iret
push
and
repz
sbb
mov
lret
push
mov
outsl
mulb
popf
iret
je
ljmp
test
aaa
imul
add
jecxz
sahf
out
repz
lret
stos
dec
inc
ljmp
push
sti
jp
jmp
inc
rcr
push
inc
adc
rcrl
movsb
jns
jle
stc
rep
sub
mov
and
repnz
call
daa
ret
shrl
cmp
mov
cmpsb
adc
mov
bound
ret
cwtl
fwait
cs
xor
je
mov
leave
lock
addr16
xchg
xor
jl
les
pop
cli
fisttps
sbb
push
pop
mov
rclb
cltd
jno
into
mov
xor
xchg
arpl
das
push
pop
std
cmp
arpl
fistps
adc
jmp
sub
xor
mov
mov
xchg
sbb
aas
jae
xor
adc
jl
rcll
adc
or
and
cmp
pop
jne
in
xor
xchg
stos
jmp
add
push
mov
mov
cmc
lret
je
jge
ja
dec
xchg
sbb
adc
dec
sub
int
xor
movsl
inc
adc
mov
mov
dec
leave
adc
cmpsb
push
sub
dec
xchg
xor
jmp
aam
xor
orb
fbld
fs
pop
fimuls
lahf
hlt
xor
mov
aas
adc
mov
fs
popa
loopne
sub
enter
fs
mov
std
ficoms
stos
push
leave
out
add
inc
notb
mov
and
jmp
add
shrl
leave
cmpsb
adc
pop
cmp
movsl
test
lahf
mov
divb
outsb
lret
mov
mov
outsl
test
sahf
in
leave
fisttpl
test
push
cs
imul
mov
sbb
sbb
dec
rcrb
xchg
arpl
popf
xchg
loop
fimuls
repnz
orl
movsb
enter
les
mov
into
mov
xchg
dec
sbb
orl
xor
xor
pop
jge,pt
add
push
lret
push
inc
jge
lods
add
push
out
jl
incl
dec
pop
cli
jecxz
loopne
jge
xchg
or
lahf
add
mov
push
mov
jns
mov
and
push
jl
mov
lcall
cmp
fsubl
pop
xchg
adc
mov
xor
xor
lcall
mov
mov
xlat
pusha
or
and
fidivrl
in
adc
aaa
pop
pop
adc
push
xor
jle
mov
sbb
out
push
xchg
iret
cmpsb
arpl
dec
jg
pop
xor
dec
daa
xchg
cs
stc
fisttpll
dec
push
inc
mov
push
jne
cmp
int
shrl
cmp
fldenv
fdivl
mov
pop
push
push
les
sbb
test
xchg
mov
adc
int3
dec
xor
jl
mov
enter
js
mov
pop
les
lret
in
addr16
call
and
push
loope
xor
fstpl
jno
push
fsubrp
sarb
xchg
dec
loop
xor
jp
enter
dec
sahf
mov
cmc
inc
cwtl
cmpsl
aam
jnp
xor
cwtl
je
mov
dec
mov
fidivrs
aam
lds
inc
dec
cwtl
cmpsl
insb
jbe
cmc
stos
cmp
xchg
and
mov
outsb
je
inc
ljmp
mov
jo
adc
dec
xor
adc
xor
sub
loop
out
fsubrl
dec
call
and
test
inc
maxps
ljmp
sbb
mov
fs
ss
icebp
dec
xchg
push
cmpsb
ret
sbb
jmp
adc
test
adc
data16
and
ret
outsb
jmp
push
arpl
cmpb
xlat
stos
es
sub
xor
in
sbb
lea
inc
fldt
xchg
lahf
jno
test
shlb
std
push
mov
mov
inc
aas
repz
mov
mov
pushf
xor
out
sbb
es
xor
leave
xor
xchg
mov
jb
rorb
outsl
fimull
pop
mov
sub
lret
xchg
ds
aaa
jmp
enter
sbb
xchg
and
shrl
iret
ss
das
pop
inc
adc
les
sub
jne
mov
xor
cmp
sbb
rclb
cmpl
mov
push
jbe
pop
loopne
mov
mov
mov
popa
inc
sbb
mov
fldl
addl
bound
mov
dec
jbe
push
mov
sbb
cld
push
pop
pop
pusha
inc
add
xor
iret
adc
jbe
frndint
iret
stos
mov
rorb
dec
jg
bnd
xchg
add
pushf
pop
xchg
jmp
iret
test
xchg
jge
pop
push
pop
pop
ds
xchg
add
lods
pop
add
sahf
or
mov
leave
into
movsl
mov
ss
leave
dec
cmp
adc
pop
andl
test
das
loop
lods
cli
aas
mov
jb
mov
add
mov
fldenv
cli
test
push
subb
adc
icebp
xlat
adc
and
jg
addb
popa
loope
jecxz
cmp
or
pop
and
les
mov
shll
mov
sbb
pop
das
cltd
xor
pop
jae
test
dec
mov
rcll
xchg
outsl
lahf
sub
dec
mov
loope
gs
insb
xor
ror
push
gs
outsb
add
cli
cmpsb
cld
sarl
jo
out
sbb
or
pop
mov
hlt
daa
xor
inc
out
mov
into
stos
aas
inc
or
imul
xchg
rep
push
in
ret
inc
xor
pop
in
sub
lahf
jno
bound
and
sbb
mov
cwtl
shl
sbb
test
int3
inc
sbbb
jns
xchg
mov
nop
mov
andb
mov
scas
jl
scas
cmp
mov
lea
hlt
in
mov
cmp
popf
cs
sti
movsl
mov
into
subl
cmp
xchg
xchg
out
add
frstor
repz
lock
test
inc
addb
cmp
mov
xor
fstpl
nop
and
in
push
xor
lret
sbb
adc
xchg
mov
fadd
cmpl
lret
imul
cwtl
add
pop
sbb
add
cmp
in
cld
cs
or
inc
adc
cmpl
cmpsb
mov
mov
or
push
repnz
push
cmp
sahf
imul
outsb
and
lock
iret
mov
push
js
xor
or
out
inc
daa
jmp
shl
push
mov
sbb
and
xchg
daa
xor
push
pop
out
mov
mov
gs
addb
lods
jg
sub
fs
xor
mov
or
in
incl
xchg
icebp
and
popf
cmp
adc
lret
cli
xorb
push
test
add
push
xor
mov
pop
jne
aaa
mov
xor
cwtl
lahf
imul
adc
pop
fsts
repnz
inc
push
xchg
sbb
mov
stos
fsubrs
adcl
js
xor
jl
mov
push
xor
test
pop
lock
loop
xor
loope
jecxz
mov
cmpsb
icebp
xchg
and
popl
xchg
pop
fimull
lahf
push
pop
aad
fildll
adc
and
js
ljmp
jae
fwait
pop
arpl
dec
dec
dec
jo
push
aam
in
cmc
xor
jmp
xchg
cmp
jb
fxam
out
sahf
jmp
mov
and
add
or
testb
add
lret
add
mov
xor
xor
sub
js
mov
mov
xchg
inc
lret
dec
scas
rcll
ret
push
adcb
fwait
in
pop
jno
jmp
ret
pop
jb
pop
mov
mov
outsb
pop
fsubs
cs
xor
dec
push
inc
stc
ljmp
je
jo
pop
mov
out
jp
decb
mov
in
xchg
add
roll
pop
inc
add
adc
mov
lods
jnp
push
scas
loope
popa
pop
push
sbb
aam
fxch
mov
rclb
jb
loop
mov
mov
loop
jno
jecxz
jo
mov
movsb
adc
push
push
or
les
xchg
cmc
sbb
imul
mov
mov
lea
lret
cmp
dec
push
decl
push
mov
ret
scas
lods
push
or
xchg
lock
les
push
in
je
sti
repz
inc
imul
mov
sub
lahf
fmull
adc
cmp
xchg
bound
jnp
xchg
ljmp
jmp
push
pop
lret
pusha
dec
scas
xchg
les
xchg
push
sbb
jecxz
lods
push
orl
inc
inc
jnp
push
je
mov
or
ret
dec
lock
fucompp
push
xchg
movsb
or
or
and
cmp
add
add
and
mov
cmp
cmc
pop
xchg
lret
cs
repnz
ja
adc
adcl
mov
nop
rorl
js
popf
dec
test
aad
pop
xchg
push
fldcw
and
mov
inc
std
xchg
icebp
cmp
pusha
ret
lds
dec
sbb
xor
ret
test
nop
cmp
push
lods
push
mov
and
adc
lahf
int3
jns
xor
mov
cmp
push
fnstsw
sub
mov
js
cli
test
sti
sti
xchg
push
cmp
pop
cmp
loopne
jp
dec
stos
sbb
dec
xlat
xchg
jno
fmuls
adc
repnz
js
cwtl
not
sbb
stos
adc
dec
movsl
push
xor
and
std
lcall
stc
dec
stos
sbb
and
jnp
sbb
mov
sbb
add
repz
mov
data16
sbb
incl
pop
pop
loop
dec
xchg
add
int
dec
dec
cmpsb
adc
pusha
cwtl
into
ja
das
push
sbb
sbb
add
xlat
mov
mov
pop
in
movsb
mov
lret
sbb
adc
mov
inc
jne
or
mov
das
jne
stc
lods
xchg
dec
push
fwait
aaa
mov
inc
cmp
outsb
or
jne
cld
push
into
aam
add
pop
inc
or
ja
je
stos
cmp
mov
imul
pop
and
leave
cmc
ss
js
lret
in
loope
mov
popa
add
jmp
clc
and
mov
dec
jb
jp
dec
or
sti
xor
mov
xchg
in
jne
mov
pop
popf
cmp
jnp
in
cmp
aas
mov
ret
ret
sbb
mov
cs
iret
out
push
mov
push
mov
add
jmp
daa
add
shrl
outsb
scas
mov
insl
data16
mov
lahf
arpl
in
lock
ret
dec
mov
out
rcll
aam
sbb
pop
clc
shll
mov
sbb
imul
out
inc
loop
scas
pop
icebp
enter
pop
xchg
push
cmpsl
sub
outsb
adc
cwtl
cmp
ret
pop
push
cltd
popf
jp
mov
lea
cmpb
ret
jle
jnp
imul
cld
fs
or
lods
stos
jle
dec
daa
fcoml
push
cmpsb
cld
or
stos
xchg
pop
and
inc
mov
cmp
ja
in
shl
jbe
mov
xchg
aas
pop
xchg
push
push
rcrl
in
es
jo
scas
into
jo
jo
mov
dec
dec
imul
and
sbb
jo
sbb
es
jo
push
stos
sbb
inc
popf
push
adc
adc
cmp
sbb
mov
sbb
es
jo
jb
stos
sbb
int
iret
cs
pop
mov
mov
negb
and
and
fidivl
insl
inc
sbbl
adc
adcl
push
rorl
rcr
adc
sub
rcl
stc
fbld
cmc
mov
mov
sub
les
fldt
push
jae
outsl
out
pop
scas
hlt
add
leave
sub
aaa
add
sub
mov
inc
test
dec
push
lahf
xchg
and
mov
loop
nop
cmp
push
push
movl
inc
or
sbb
or
jp,pn
leave
jbe
loopne
ret
sbb
jp
adc
test
in
jo
pop
insl
out
fs
es
push
into
add
outsb
jecxz
scas
xchg
fstpl
incl
push
mov
dec
inc
xchg
mov
icebp
roll
cwtl
testl
add
pop
ja
mov
lock
push
and
test
test
push
pusha
inc
cld
js
ret
sbb
push
in
cmc
out
xchg
cmpsb
adc
fwait
jg
pop
gs
icebp
mov
mull
inc
je
inc
test
fs
cmp
je
dec
cmp
mov
in
jo
ljmp
push
ja
fcompl
cld
pushl
lcall
inc
jp
lahf
push
cmpsl
inc
sbb
or
loope
mov
daa
scas
pop
cmp
in
xchg
dec
add
sub
flds
loop
xchg
aad
adc
incl
xchg
pop
push
push
in
push
inc
shll
idivl
xor
pop
das
movsb
or
cmp
lods
add
jp
popf
outsb
xor
xlat
imul
ltr
fstl
test
ja
cmpsb
dec
test
pop
pop
leave
mov
scas
adc
in
aad
jno
and
dec
adc
cmp
out
rclb
mov
sub
stos
jle
mov
push
push
push
mov
lds
into
fadd
es
jb
rcrb
push
jb
test
cmp
fildll
outsb
cmp
loope
dec
jbe
std
or
or
adc
pop
cmp
daa
mov
jp
mov
ret
ss
shlb
rclb
mov
or
cmc
shlb
adc
ret
je
cltd
lea
jne
cmp
push
fildll
outsb
cmp
mov
xor
inc
inc
dec
orl
mov
shl
or
cwtl
sarb
sub
adc
loope
inc
dec
sbb
movsl
pop
nop
testl
insb
jno
sbb
or
pusha
dec
pop
cmp
repz
rcrl
es
xchg
and
fmull
pop
xlat
xchg
add
repnz
out
gs
out
and
jmp
adc
xchg
mov
int3
and
push
jns
gs
mov
aaa
and
jnp
movb
push
add
inc
das
xchg
test
jno
stc
push
push
dec
hlt
rcrl
rol
xchg
jmp
sub
insl
jne
aaa
add
or
push
jmp
aam
mov
in
mov
imul
mov
push
les
lret
push
jp
cmp
xchg
xor
inc
jae
aaa
jae
add
arpl
cs
inc
or
lock
push
xchg
mov
inc
add
enter
mov
fcoml
cmp
lcall
into
or
test
fcmovnu
cmp
dec
mov
jb
aam
add
add
inc
leave
ljmp
xchg
pop
rolb
xchg
xchg
or
xchg
adc
cli
pop
adc
stos
jbe
loope
cmp
mov
and
cmpsb
std
mov
mov
gs
pusha
xchg
jo
mov
jecxz
dec
shlb
data16
sub
sub
cmp
xorb
sbb
imul
dec
sahf
xchg
std
cmp
js
icebp
pop
aas
aam
repnz
fisubl
or
rorl
push
icebp
gs
test
dec
add
lret
xchg
mov
pop
sti
or
les
inc
out
sub
adc
orb
adc
fisubrs
sbb
das
push
lods
or
pusha
scas
popf
mov
adc
jge
cld
pop
popa
test
sub
adc
out
inc
jno
data16
pop
mov
dec
call
jb
add
and
pushf
jp
xor
push
cli
pop
and
ret
aad
std
sub
aad
adc
inc
push
xorb
mov
daa
arpl
test
xchg
cmp
sub
push
enter
dec
mov
lahf
xor
push
clc
dec
and
or
cmpsb
jle
mov
ljmp
xchg
ja
mov
test
xor
mov
mov
push
jle
or
sar
pop
dec
iret
pusha
xor
shll
push
adc
fs
movsb
add
add
ljmp
xchg
stc
iret
xchg
inc
xor
iret
and
lahf
adc
insb
in
or
jl
and
cmp
xor
xchg
mov
jp
shrb
or
in
xchg
lock
or
int
jo
mov
into
jge
jecxz
loope
and
aaa
imul
sbb
std
adc
shll
lods
ljmp
xchg
push
push
pop
pushf
xchg
dec
mov
fsubrs
lret
sbb
xchg
out
ss
movsb
xor
jmp
ja
xchg
repnz
inc
repnz
int
lret
mov
cmp
mov
xor
cli
subl
gs
bndldx
fwait
jmp
and
mov
and
sbb
into
inc
ljmp
pop
cwtl
mov
sub
shl
sbb
pop
dec
jle
scas
lsl
sarb
inc
sub
fs
ss
sarb
repnz
sbb
adc
fwait
dec
adc
sbb
cmp
ficoms
hlt
lahf
ret
ret
aam
lahf
mov
popa
push
jnp
fldenv
mov
xor
fsubrl
jle
inc
shrb
ss
mov
pop
popa
add
rcrl
and
orl
mov
pop
movsb
dec
call
iret
inc
mov
jmp
insl
jbe
and
orl
nop
mov
jmp
pop
idivl
lret
ret
inc
out
jp
dec
ds
subb
insl
mov
or
or
push
dec
mov
pop
jb
lcall
mov
out
mov
push
inc
mov
lods
call
mull
out
jbe
push
out
jl
xor
nop
push
test
push
mov
stc
push
mov
adc
rol
adc
fldt
mov
ja
scas
cs
push
mov
in
mov
cmp
subb
push
inc
mov
or
cmp
add
adc
aad
cmp
ficoml
xchg
cmpsb
and
test
repnz
addb
jo
add
icebp
xchg
mov
sbb
imul
dec
aaa
xchg
mov
push
or
out
push
or
ficomps
lret
sbb
push
subb
aas
fisttpll
push
pop
pop
cmp
dec
and
push
xchg
je
and
inc
std
stc
ds
pop
adc
pop
aas
cmc
adc
cltd
push
clc
mov
mov
out
dec
addr16
je
in
rcll
arpl
mov
mov
lretw
ret
mov
push
push
adc
jb
lods
push
jne
mov
add
scas
push
repz
mov
ficoms
lods
dec
lds
into
frstor
adc
ds
test
outsb
pop
and
mov
lcall
in
notb
ret
push
inc
popl
in
dec
cmpsb
lahf
sub
jg
sbbb
mov
shrb
xor
cmp
mov
out
sub
mov
jg
sub
out
ficoml
mov
outsb
push
push
addl
sub
mov
pop
inc
push
inc
jne
inc
jg
in
pusha
push
sub
test
sbb
inc
mov
push
jmp
xchg
sub
aas
jge
sahf
icebp
pop
iret
push
push
cmpsl
shrb
add
mov
adc
inc
inc
fsubr
push
sbb
leave
pushf
push
ffreep
or
ljmp
mov
cmp
stos
jmp
xlat
push
and
hlt
xor
jb
imul
dec
jge
ret
and
dec
jb,pn
mov
cmp
pop
pop
push
hlt
sbb
jl
sti
inc
jg
insl
sub
mov
fldcw
rcrb
jge
mov
int3
or
dec
fs
mov
mov
mov
scas
lods
pop
push
push
pusha
stos
jns
lods
cmp
add
incl
movsl
sbb
dec
xchg
cmp
push
dec
pop
repz
stc
iret
cmp
dec
out
push
icebp
sarb
ja
push
adc
or
popl
mov
insb
test
xor
into
loope
mov
std
nop
pop
sub
call
lahf
cmpsb
add
notl
jae
movsl
ficompl
sahf
lahf
push
adc
cmp
add
hlt
movsl
adc
inc
jmp
rorb
ret
xchg
scas
xchg
outsb
mov
in
stos
adc
test
xchg
xchg
shrb
pop
rcll
sti
sarb
cmp
test
fsub
mov
push
mov
adc
imul
cmp
cmc
js
ret
push
adc
call
shl
das
cmpsb
push
pmulhw
inc
arpl
andb
lock
into
out
mov
leave
xchg
fdivrs
stc
add
andb
cs
imul
into
cltd
out
mov
sahf
mov
test
lds
mov
addr16
lock
xchg
jb
add
sbb
out
aam
loopne
mov
mov
pop
mov
pop
mov
fs
xchg
xchg
dec
filds
pop
cmp
in
mov
cs
out
lds
cmp
lret
iret
and
mov
dec
push
popa
xor
je
push
dec
popf
add
stos
lret
fcomps
sbb
orb
add
mov
js
cmpsb
cmp
test
arpl
fadd
fmull
cmp
jmp
add
mov
test
scas
pop
xchg
add
pop
mov
stc
mov
dec
arpl
sbb
fnstenv
jmp
nop
inc
stc
push
test
sbb
sbb
mov
pop
pop
or
cli
out
cmp
jge
mov
sahf
push
cmp
pop
fucom
sbb
sbb
out
mov
jno
lcall
or
cmpsl
stos
add
ljmp
xchg
xchg
mov
add
in
jo
mov
sbb
push
dec
outsb
xchg
les
push
jmp
mov
xor
je
negb
mov
adc
pusha
js
sub
clc
icebp
cmpsb
jg
xor
push
mov
xchg
add
sub
imul
sbb
out
out
sti
mov
push
mov
cwtl
jge
movsl
inc
mov
aas
addb
cmp
ja
xchg
ljmp
push
add
out
bound
or
cmp
sbb
inc
add
cmpsl
ror
and
addr16
xchg
ret
fcmovu
sbbl
pop
loopne
cs
push
gs
mov
sub
xlat
into
fimuls
out
pushf
gs
mov
push
jmp
jbe
int3
cmp
loope
ret
push
jp
and
pop
test
or
outsl
arpl
xor
mov
inc
adc
or
sub
push
in
fstpt
ret
pop
data16
and
and
rcl
cli
fucom
mov
xor
bound
loope
xor
xchg
add
cmp
leave
fidivl
push
sbb
rclb
mov
add
mov
mov
out
sub
push
mov
mov
divl
std
in
mov
cmp
shl
or
mov
fnstsw
xchg
in
fsubl
cmp
fstp
xor
insb
shr
std
and
insb
cmp
ja
xchg
cwtl
pop
icebp
push
out
test
outsb
push
mov
test
push
sbb
imul
je
loope
xor
fsubs
push
cwtl
pusha
cmp
mov
add
pop
push
dec
pop
or
hlt
fwait
jle
in
or
mov
cwtl
sub
inc
fcom
pop
push
mov
add
cltd
ja
mov
xchg
inc
xor
testl
in
xlat
jo
sub
shrb
scas
mov
sbb
push
in
rcrl
popa
in
jle
loop
sub
dec
jp
mull
add
movsb
cmp
stos
xchg
xchg
inc
push
jbe
sbb
push
sub
roll
xchg
lds
push
inc
sub
dec
es
cmp
jbe
pop
jno
or
xchg
jmp
jns
flds
jp
rorl
and
pushf
adc
out
mov
adc
fidivl
andb
cmp
mov
nop
fisttpl
push
aaa
and
dec
dec
lods
insl
xchg
cwtl
jecxz
and
mov
shll
daa
cmpsl
enter
lahf
scas
rcll
inc
xchg
movsb
iret
add
jmp
gs
cmpsl
and
and
pushl
pop
out
stos
xchg
sub
pop
mov
dec
fcomps
mov
es
dec
sbb
int
mov
sbb
mov
push
inc
inc
inc
lds
in
out
fwait
popa
fsubrs
aaa
pop
sub
fcmovb
fnstsw
and
lods
cmp
movsl
js
scas
cld
ret
add
in
xor
sub
push
or
inc
test
pushf
ljmp
lret
pop
in
inc
dec
das
mov
fldl
adcl
mov
mov
dec
icebp
daa
xor
das
lea
lds
sub
mov
push
arpl
andl
add
aas
jmp
sub
movsb
push
ret
or
nop
sub
addr16
je
mov
add
fidivl
push
push
and
pop
out
mov
jge
imul
xor
shl
dec
dec
int
insb
out
clc
movsb
xor
ret
enter
pop
xchg
lahf
push
xchg
push
test
jnp
mov
rcrl
outsl
mov
push
and
test
lods
fmulp
loopne
lea
adc
clc
and
ljmp
dec
jmp
test
jbe
mov
push
idivb
rcrb
out
sti
jno
pop
lock
call
push
lock
stos
lock
push
pop
in
scas
aad
bnd
push
fiaddl
enter
jl
in
mov
sbb
out
pop
scas
fcom
cmpsb
cmp
es
adc
sbb
es
andl
push
arpl
adc
mov
and
mov
or
iret
insl
in
popa
in
js
scas
fwait
test
mul
mov
je
add
clc
push
jnp
and
test
sti
rcr
ficomps
xchg
xchg
lahf
mov
dec
fildl
push
lods
inc
call
or
cmp
jb
pop
cmc
cltd
sbb
jge
xor
jb
push
stc
cmp
in
loop
jo
push
xchg
sbb
imul
loope
inc
push
jae
out
scas
andb
xor
data16
push
fnstcw
pop
scas
and
in
xchg
mov
sub
popf
cmp
into
lret
sub
in
xor
cltd
jbe
xchg
mov
dec
mov
fisttpl
dec
sbbl
insb
mov
addr16
mov
inc
mov
xlat
and
pop
push
jb
ds
xlat
stc
iret
repz
sub
mov
cltd
sarl
lgs
xchg
jmp
adc
mov
sbb
jnp
lock
es
aaa
movsb
ret
sub
shlb
out
xchg
mov
andl
push
arpl
pop
roll
aad
mov
cmp
push
jg
mov
int
xor
test
fisubrl
movsl
fcoml
hlt
add
sbb
movsb
jbe
notb
enter
mov
mov
add
push
sarb
cmp
movsb
icebp
data16
mov
xor
je
out
mov
icebp
pop
loopne
es
stos
or
rorb
fs
sub
das
jns
mov
lret
andb
push
sbb
dec
and
cmpsb
and
jmp
sub
or
cmpsl
aam
mov
es
outsb
ja
test
jns
adc
inc
lods
add
cmp
lcall
xor
xchg
mov
jb
shr
mov
iret
sti
mov
push
jl
mov
mov
dec
xchg
dec
iret
loopne
mov
xchg
mov
mov
sarl
loope
stos
mov
mov
in
xor
mov
bound
push
dec
add
mov
in
pop
xchg
xor
add
push
push
xor
push
sub
es
testl
adc
mov
into
scas
cmpsb
loop
cltd
add
repz
cli
scas
adc
lea
jo
inc
fs
adc
cmpsl
pop
xchg
fldcw
fdivrs
mov
loop
xchg
div
std
mov
ss
cmpsb
sbb
cmpsl
pop
inc
add
std
fldenv
shll
fldenv
push
rcrl
lods
add
clc
or
jmp
fs
push
push
insl
stos
cmp
mov
fbld
mov
sub
aad
iret
cmc
sarb
in
shlb
mov
aas
mul
xchg
pop
inc
call
or
cmp
jb
pop
cmc
cltd
sbb
jge
xor
sti
cmpsb
dec
or
test
pop
enter
push
jno
bound
jle
popf
mov
xor
pushf
pop
jns,pt
das
gs
call
cmc
pop
popa
inc
leave
cbtw
in
les
inc
inc
push
mov
adc
out
in
fisubrl
lret
aad
gs
iret
xchg
push
js
das
sbb
inc
add
mov
gs
addl
add
jnp
in
xor
dec
mov
dec
mov
mov
jmp
imul
sub
or
mov
xor
mov
bound
mov
int3
mov
pop
or
loopne
popa
push
add
lock
adc
xchg
sbb
in
lret
ror
stos
xor
pop
lcall
fcoms
std
cmp
out
lret
subb
xchg
fidivl
scas
les
add
aad
cmpsb
iret
push
mov
and
dec
sub
add
jge
adc
lret
mov
mov
mov
rorb
xchg
push
jg
in
adc
lret
push
dec
inc
out
imul
dec
push
sub
scas
dec
cs
cltd
lds
add
xchg
ja
cld
push
fdivrs
enter
mov
pushf
in
mov
movsb
xchg
loopne
sbb
test
xor
jne
sub
pop
push
repz
in
daa
xchg
repnz
mulb
adc
or
dec
and
push
xor
mov
and
mov
shll
addr16
dec
xchg
jb
and
xchg
mov
add
shrl
fs
lods
push
pop
clc
fidivrl
xchg
add
pop
dec
mov
or
pusha
or
jno
push
in
mov
ds
sbb
jge
orb
mov
clc
cli
push
es
sahf
jmp
imul
dec
jae
mulb
lret
out
pop
push
mov
iret
and
ds
mov
lret
icebp
mov
clc
adc
adc
mov
imul
sbb
hlt
ret
fidivrl
mov
jbe
rorb
push
adc
popf
movsl
aaa
mov
add
lods
pop
jecxz
pop
xchg
push
push
loopne
add
sbb
dec
les
js
mov
js
in
adc
bound
int3
arpl
or
clc
sub
lea
ss
push
roll
push
mov
cltd
loop
sub
pop
fldln2
cmp
jle
jne
jl
lods
cmp
fwait
scas
mov
jmp
and
jo
mov
xchg
mov
push
dec
adc
repz
xor
cld
jbe
cli
leave
lods
mov
int3
pop
xorl
mov
sahf
orb
gs
xchg
jo
xor
ret
or
inc
dec
std
add
push
xchg
movsl
mov
bound
push
mov
sbb
enter
les
jmp
sbb
mov
or
cmp
imull
mov
loopne
adc
call
jo
hlt
and
test
pop
mov
es
jbe
call
inc
adc
jnp
add
test
sub
xchg
pop
cmp
pop
jmp
adc
test
shrb
rolb
mov
xchg
test
add
inc
sar
cltd
aaa
loop
mov
je
or
mov
ret
lcall
add
mov
jp
fcom
pusha
int3
sti
add
std
in
mov
stos
mov
ret
out
outsb
ja
sbb
jp
pop
into
xchg
js
adcb
into
push
popa
push
inc
stos
movsb
rorb
aam
ficoms
pop
add
mov
jns
mov
pop
xchg
push
lods
imul
inc
add
sti
int
and
add
push
jns
pusha
mov
mov
push
cmp
xchg
sbb
xchg
int3
push
cs
test
test
lods
xchg
bound
sbb
outsl
xchg
sbbb
pop
or
stos
jmp
mov
xor
stc
jno
dec
sbb
daa
ljmp
addr16
jecxz
mov
mov
xchg
js
push
mov
jmp
fisubl
mov
cmp
and
sub
push
adc
call
jnp
clc
out
pop
loop
outsl
or
das
insl
dec
lret
es
mov
xchg
sub
jns
add
push
mov
jge
fiadds
and
inc
dec
xchg
mov
and
aam
arpl
outsb
mov
add
pop
mov
fcmovnu
cltd
push
or
in
jmp
jecxz
jne
out
testb
push
js
cmp
cltd
lods
icebp
mov
in
pop
cmp
repz
jmp
rolb
mov
fldl2t
cmp
imulb
out
movsb
imul
rcrb
inc
xlat
in
add
and
fwait
jno
iret
mov
pop
dec
xchg
shlb
push
loop
or
mov
leave
mov
aaa
roll
mov
pop
shlb
jbe
test
sbb
popf
sub
adc
push
mov
push
jmp
or
lods
mov
mov
rep
clc
fildll
pusha
loop
fnstcw
das
hlt
jle
outsl
jb
pop
loop
sbbb
addr16
jns
add
mov
adc
pop
fistps
pop
ja
cli
fldl2t
dec
es
pop
in
movsl
sbbl
jnp
scas
or
adc
outsl
stc
pop
ret
mov
and
scas
faddl
pop
sub
lea
fimuls
push
loope
pop
or
shll
mov
dec
in
into
fdivrs
mov
insb
cli
in
adc
je
push
mov
mov
add
shlb
mov
repz
xor
out
dec
icebp
fbstp
cld
cmp
dec
jmp
lods
fdivl
stc
push
divb
sbb
xorb
std
dec
std
jne
ds
pushf
insl
popf
sbbb
rol
mov
and
mov
bound
push
data16
and
in
or
subb
xor
cmp
xchg
sbb
into
jecxz
or
inc
lds
pop
mov
loop
cmc
inc
pop
jmp
pop
cltd
push
fimuls
call
dec
push
push
in
bound
xorl
push
sbb
imul
popa
inc
mov
lock
sub
jecxz
adc
mov
sub
push
mov
rcrl
cmp
dec
sub
into
dec
std
adc
ds
inc
cmp
sarb
sub
xchg
stos
loopne
pop
jge
mov
mov
jle
or
xor
pop
aad
mov
insl
iret
ret
xchg
inc
ret
jno
daa
push
fiadds
or
les
hlt
dec
dec
movsl
aas
xor
mov
std
jne
ds
pushf
insl
lods
push
add
jae
xchg
or
sarb
fcoml
add
mov
push
inc
add
cli
pop
pop
push
and
rcr
xor
mov
bound
aad
rolb
cltd
push
clc
dec
pop
outsb
inc
mov
movb
mov
sbb
ror
pop
push
lret
pop
push
ds
dec
loope
mov
xor
cmp
xor
aad
fs
sbb
jb
nopl
hlt
insb
mov
cltd
lret
lds
and
outsl
mov
int3
ficomps
mov
inc
xlat
xchg
loope
mov
mov
in
divl
xlat
adcb
jmp
and
adc
into
add
aam
cmp
jno
push
test
xor
sti
shr
or
cmc
test
lock
or
adc
out
cmp
xor
lret
sbb
xchg
sub
addr16
mov
jge
loop
jo
cmp
aad
arpl
sub
js
mov
mov
jbe
lcall
inc
jl
leave
cmp
xchg
shll
sub
push
inc
sub
pop
jo
inc
clc
lsl
push
bound
adc
mov
xchg
ds
shlb
xchg
pop
outsl
mov
sub
orl
add
xchg
outsl
adc
jle
test
fistpl
int
or
inc
data16
cli
inc
pop
or
cmc
sbbl
add
mov
pop
xchg
mov
js
xchg
pop
sub
push
push
sub
outsl
dec
arpl
jle
inc
sti
jbe
addr16
inc
fldl
stc
lcall
add
insb
add
cmp
je
stos
clc
pop
jo
push
sub
mov
imul
mov
jle
lahf
mov
cmp
lahf
bound
outsb
lds
fwait
mov
push
cmp
fimuls
cli
push
dec
dec
repz
mov
dec
xchg
call
xchg
push
xchg
loop
xlat
xor
aaa
fisubrs
and
scas
into
scas
pop
mov
hlt
call
jmp
faddl
xor
xor
scas
vmwrite
adc
loope
and
cmp
jl
inc
loopne
lret
icebp
aad
pop
mov
pushf
sub
imul
push
mov
pop
testl
or
shl
mov
rcrl
cmp
sbb
mov
and
xchg
lret
scas
jno
repnz
push
jns
mov
xchg
push
ljmp
cmp
out
andb
rclb
adc
test
fisubs
sbb
loop
or
cld
cmpsl
push
jecxz
sub
out
dec
in
ljmp
clc
mov
imul
inc
cmc
sarl
fwait
push
gs
in
sub
sbb
push
adc
lds
add
popf
push
inc
jb
pop
stc
mov
movsl
mov
in
jmp
xchg
xor
pop
pop
mov
lock
add
addr16
xchg
movsb
fisubrl
inc
sbb
mov
dec
or
sub
in
or
mov
jmp
mov
xchg
or
jbe
mov
xchg
mov
int3
addr16
mov
or
daa
cmp
ret
fcmovnb
andl
sbb
cmc
jmp
add
pop
rcr
test
cmp
mov
mov
ret
push
lret
ds
shrl
repnz
es
fwait
dec
clc
dec
xchg
mov
inc
push
adc
jnp
fdivs
pop
jle
xor
or
dec
sbb
popf
inc
fs
movsl
mov
sub
mov
cwtl
loope
xor
popa
pop
mov
lock
mov
mov
cwtl
imul
stos
mov
adc
pusha
push
nop
mov
cmp
mov
cmpsb
jmp
or
jnp
or
jge
cld
orl
push
dec
cmp
pusha
in
cmpsb
xor
push
push
pusha
ja
pop
es
sub
insb
popa
loop
mov
adc
and
outsl
mov
xor
les
mov
aaa
mov
push
push
dec
rcl
sub
inc
push
lret
daa
sub
shrl
je
fwait
mov
call
xlat
pop
stos
lret
sbb
icebp
xor
loop
push
call
mov
fdivl
pushf
or
lret
dec
shrb
cmpsb
jbe
lods
shrb
jl
mov
lods
repz
sbb
mov
leave
and
cwtl
sub
int
ret
fimuls
sahf
clc
imul
cmpsl
ss
lock
stos
je
out
jecxz
lret
add
mov
shr
les
xchg
and
les
es
adc
imul
mov
test
cmp
lcall
iret
dec
ss
and
jp
xchg
jno
sub
jbe
fstl
lret
jnp
divb
repnz
outsl
bswap
mov
insb
gs
adc
lcall
out
xchg
sbbb
sbb
xor
pop
sbb
sub
pop
lods
pop
mov
mov
mov
ja
out
cmc
add
or
in
jp
inc
cmpsb
sub
jbe
or
loope
dec
hlt
or
pop
jb
xorb
mov
mov
mov
pusha
outsb
xchg
scas
pop
adc
inc
pop
push
mov
mov
call
in
fucomip
lcall
xchg
test
xor
sub
in
pop
inc
cmp
and
push
fwait
adc
aas
mov
inc
insl
enter
add
in
scas
adc
ss
xchg
dec
jo
call
pop
sub
dec
xchg
mov
cmp
outsl
lret
pusha
rcrl
out
aas
in
lahf
xchg
je
daa
fistpll
arpl
mov
xlat
movsl
inc
out
sub
mov
pop
loope
jno
jecxz
mov
pusha
arpl
sub
dec
jbe
arpl
mov
adc
or
mov
es
je
xorb
xor
mov
add
cmp
xchg
insl
xlat
jg
and
mull
lret
cmp
jb
jge
and
outsb
mov
loop
test
hlt
int
push
lret
aas
inc
add
fildl
int3
and
rorl
push
add
sub
cmp
inc
mov
out
cmp
shlb
or
push
in
ffree
mov
aam
push
rcll
test
scas
es
or
dec
cmpl
inc
push
and
pop
adc
test
jb,pn
mov
cmp
ljmp
jmp
loop
lds
inc
mov
pushf
dec
push
fs
sarl
cltd
shll
out
outsb
mov
je
loopne
aad
loop
cmp
movsb
xchg
cmp
ret
jo
jmp
outsl
leave
jmp
aad
loope
pop
adc
mov
push
jge
dec
cmp
pop
pusha
and
sub
jb
inc
test
pop
sbb
push
movb
cld
push
subb
stos
lods
or
inc
sbb
in
lds
jge
push
sti
mov
pop
sbb
push
mov
push
loope
jmp
xchg
mov
mov
mov
jg
xchg
xchg
ja
jnp
outsb
xlat
sbbb
cmp
jno
add
and
loop
iret
loope
scas
outsb
loopne
jmp
daa
push
jg
mov
sub
test
xacquire
dec
in
cmp
jg
in
or
and
dec
orb
and
mov
adc
inc
jmp
int3
mov
xor
mov
push
cwtl
mov
test
je
std
adc
out
or
dec
and
jnp
fstps
cmpl
outsl
jge
sbb
sub
lods
jg
add
ss
jecxz
xor
jno
pop
add
inc
movsb
xchg
rclb
ret
into
dec
cli
and
out
sahf
push
cmp
andb
cld
ret
jbe
xlat
sti
xor
iret
cmpb
scas
scas
xchg
cmp
subl
add
rorl
adc
sbb
xlat
xchg
dec
sub
fwait
jne
inc
xchg
aaa
inc
roll
lcallw
loope
or
xchg
shlb
es
cmp
mov
cmpsb
mov
mov
jo
das
xchg
std
adc
mov
pop
push
push
push
jnp
sub
xlat
inc
mov
arpl
notb
sub
in
mov
pop
mov
add
mov
punpckldq
sub
es
jge
sbb
or
xor
imul
dec
icebp
or
push
pushf
push
cltd
pop
push
mov
adc
xor
cwtl
inc
mov
pusha
repnz
outsl
fstpt
movsb
jmp
stos
xor
andb
mov
jecxz
lret
stos
sbb
icebp
push
jne
or
aaa
push
mov
addr16
xchg
data16
sub
xchg
xchg
int3
pusha
outsb
mov
sbb
mov
inc
shlb
mov
out
iret
xchg
mov
sbb
sarl
push
or
add
daa
xor
or
aaa
movsl
cmp
sbb
cmp
stc
cmc
jno
xchg
lret
adcb
sbb
mov
enter
add
out
shll
mov
mov
shrl
lods
xsha1
cmpsb
or
pop
cmp
xchg
pop
les
adc
outsl
xchg
imul
or
dec
push
out
test
mov
cltd
test
fiadds
push
cmc
aaa
dec
sti
mov
dec
adc
test
in
in
or
and
movl
and
jne
push
pusha
ja
cld
push
mov
fcomp
jae
mov
cld
inc
push
push
stos
jge
cmc
xchg
adc
mov
jecxz
mov
push
inc
movsl
jbe
sahf
out
stos
fstps
xor
mov
inc
movsb
mov
jb
cmp
inc
push
jle
or
ss
sub
jns
mov
xor
sbb
lea
add
mov
out
lods
add
jl
in
mov
pop
les
insb
outsb
xchg
inc
imul
and
adc
jp
stos
jae
mov
cmp
aam
sbb
into
aam
add
rcrl
sub
shrb
pop
mov
xchg
sbb
loopne,pn
pop
add
and
adc
gs
dec
notb
pop
jmp
or
jp
xchg
cs
jle
scas
stc
rcll
lods
mov
mov
fildll
cmpsl
lds
imul
or
mov
divb
pop
lret
pusha
xor
sub
add
mov
inc
test
jb
scas
jge
mov
psrlq
fistps
stos
inc
pushf
clc
ret
sub
mov
mov
int3
xor
add
xlat
dec
push
xor
xchg
xchg
mov
sub
dec
pop
shlb
ja
imull
ret
xchg
rcrl
out
sub
das
push
mov
ja
lret
xchg
mov
sti
lds
sub
dec
daa
xor
inc
adc
inc
movb
cwtl
jecxz
das
dec
push
icebp
pop
mov
mov
mov
xchg
xor
mov
dec
mov
mov
arpl
sub
les
les
jg
pop
cmp
mov
or
mov
pop
test
or
inc
dec
and
int
repnz
inc
clc
std
mov
mov
cmovae
shrb
push
insl
aas
out
test
lea
out
in
inc
or
or
mov
popf
dec
adc
test
pop
push
addr16
push
aam
cmp
jno
add
mov
xchg
push
jo
or
les
insb
mov
in
rolb
sbb
adc
push
xlat
cmp
arpl
scas
pop
pop
mov
xorl
test
movsl
sub
sub
test
inc
lods
sub
les
cmpsl
add
shr
sub
std
dec
pop
mov
push
lahf
movsb
pop
test
pop
xor
push
fistl
sbb
or
movsb
scas
add
push
mov
test
mov
sbb
cmp
cli
fadds
in
pop
div
push
jbe
push
lock
jnp
inc
jbe
xor
xchg
jge
or
test
push
out
xchg
cmc
pop
movd
push
and
cwtl
push
inc
stc
and
or
test
cs
sub
push
dec
cld
sub
subb
cwtl
bound
push
je
and
xchg
mov
or
cltd
mov
mov
xchg
ret
daa
outsl
inc
jae
mov
inc
movsb
push
ret
xor
sbb
lea
movsl
sub
out
push
jge
adc
mov
out
imul
out
daa
iret
jp
repnz
mov
jmp
push
movhps
and
pop
cmp
aas
sbb
push
xlat
cltd
inc
add
adc
mov
outsb
out
pop
dec
and
stos
pop
push
pop
pop
dec
and
das
push
push
lods
dec
lret
adc
pop
push
std
sbb
pop
sbb
loopne
push
mov
cmp
sub
lret
cli
addl
stc
rcrl
add
fs
xor
les
out
add
adc
dec
andb
std
repnz
cli
mov
cmp
ljmp
or
sti
std
std
pop
xchg
call
pushf
push
dec
and
test
mov
enter
daa
out
cmpsl
jmp
sti
test
sbb
cli
xor
js
jge
in
in
pop
xchg
cltd
jb
xor
arpl
fldcw
test
and
mov
sub
push
lock
dec
sbb
or
test
ja
std
lods
mov
dec
xchg
sub
jne
pop
push
in
dec
fwait
inc
inc
pusha
hlt
inc
ficompl
mov
cmp
testl
mov
sub
xchg
adc
jns
sbb
inc
dec
xor
cmp
sti
lods
lcall
je
sbb
adc
dec
mov
rcrb
insb
jecxz
jg
xchg
cli
jge
mov
mov
sub
in
sub
mov
xorb
jno
int3
xchg
mov
push
xor
push
mov
dec
imul
pop
insb
cmpsl
scas
rolb
inc
in
insl
jns
les
add
sub
shl
lret
mov
popf
arpl
and
xchg
jne
adc
and
xor
push
shlb
sub
sbb
insb
test
mov
xchg
les
mov
sbb
test
aaa
lcall
shrl
pop
insl
call
cmpb
jg
jno
inc
mov
in
jno
push
push
adc
dec
add
xchg
cwtl
pop
lret
mov
jb
cmpsb
aas
jae
fisubrs
fidivs
inc
repnz
mov
int
xlat
stos
pop
push
mov
shrb
pop
xchg
cmc
jo
xchg
aam
jo
cmp
fneni(8087
jp
insb
xor
mov
pop
dec
imul
popf
push
lock
rcll
and
mov
push
adc
pop
adc
cmpsb
xor
fildll
add
pop
icebp
jo
lret
pop
jno
rol
aad
mov
inc
pop
sbb
xchg
push
mov
cmp
sub
or
add
pop
imul
sahf
in
push
stos
scas
out
push
rcrl
int
insl
lods
or
sbb
xchg
mov
lock
enter
js
shl
fwait
hlt
sbb
push
jo
push
push
stos
sbb
ret
popa
inc
xchg
sub
mov
imull
adc
aaa
push
cmp
int
dec
pop
xchg
jmp
test
aam
mov
xor
sbb
xchg
jg
jne
add
rolb
js
add
ret
loopne
fisubs
fwait
fabs
dec
addl
pop
sahf
or
mov
cmp
adc
push
pop
mov
dec
out
mov
xlat
out
cld
inc
xor
imul
out
xchg
xchg
mov
inc
inc
cwtl
or
ret
arpl
movsb
mov
stos
cmp
mov
adc
or
daa
lret
into
negb
mov
sub
push
je
nop
mov
lds
adc
sub
aam
xor
arpl
lret
nop
jb
jno
insl
adc
adc
call
aam
dec
mov
xlat
stc
cld
jge
xchg
pusha
sub
push
sbb
push
sub
sub
sub
push
lret
xchg
test
cli
mov
mov
imul
xchg
xchg
loope
nopl
xorl
fisubs
hlt
fsubr
and
pop
pop
xchg
mov
mov
aam
sbb
push
or
adc
add
pusha
push
or
xor
testl
sarb
pushf
in
pop
imul
adc
outsl
add
hlt
ror
pop
mov
enter
adc
sahf
xchg
aad
clc
leave
push
and
lea
jo
pusha
jge
js
das
addl
jnp
jge
cs
xchg
mov
or
xor
jmp
xor
cwtl
lcall
mov
or
jecxz
loopne
pop
mov
jo
jo
and
sbb
inc
loopne
ljmp
out
pop
add
sbb
add
inc
lret
jb
mov
and
fsubl
idiv
cmp
pusha
xor
bound
and
lahf
iret
ret
add
testb
repz
stc
insb
out
es
out
or
adcb
test
cmp
adc
xor
jns
pop
add
mov
push
push
aam
mov
aad
jb
fcompl
mov
in
and
fwait
push
cmp
test
xor
mull
sub
or
test
cmp
daa
jnp
mov
mov
adc
fidivs
mov
jo
jmp
ja
in
jmp
and
mov
mov
lret
stos
sbb
cwtl
mov
ja
and
dec
xchg
lcall
subl
cltd
lock
jnp
xor
xchg
push
push
loop
in
push
test
mov
mov
inc
or
sahf
fiadds
ficompl
out
testb
movsb
sub
add
mov
sub
repz
inc
sbb
rcl
xchg
push
cmpl
int
sub
pop
dec
stos
sub
or
sub
dec
repnz
dec
repnz
aas
dec
xchg
int3
mov
ja
and
dec
xchg
lcall
pop
pop
cmp
jnp
and
jg
frstor
loop
in
push
test
mov
lea
gs
cmpsb
sub
icebp
pop
xorps
adc
rclb
stos
add
ds
push
adc
xor
out
imul
xchg
push
scas
mov
sbb
jne
scas
mov
rcl
sbb
jecxz
inc
cmp
cmpsl
scas
iret
lea
push
ja
xchg
mov
jmp
movsl
mov
xor
xor
test
and
xor
ret
call
pop
loopne
mov
int
aaa
bound
popa
mov
xchg
cld
dec
test
inc
data16
add
bound
mov
mov
shrb
arpl
lea
lea
pop
aaa
or
imul
into
inc
mov
ljmp
pop
addl
ret
ret
xor
push
sub
inc
int3
cmp
push
xchg
xchg
shr
or
pop
push
std
scas
and
mov
xlat
rcl
rcr
mov
arpl
nop
and
stos
mov
adc
add
fstpl
hlt
lods
xor
outsl
hlt
movsl
cmp
fistpl
mov
pop
ja
inc
cmp
cmp
lcall
xorl
flds
mov
into
jo
adc
shrl
subb
loope
jae
pushf
jne
mov
xor
hlt
imul
call
ds
addr16
fcomps
jnp
addr16
rclb
inc
inc
pop
jle
xor
das
push
jns
jmp
adc
fdiv
and
cld
xlat
outsb
push
js
sti
mov
aad
sbb
int
enter
inc
movswl
jae
xchg
stos
mov
push
fs
xor
push
mov
sub
fwait
mov
push
cmp
sbb
cli
ljmp
pop
mov
xor
mov
or
mov
lcall
sub
orl
xorl
sub
cmp
xor
lods
repz
and
jo
stos
es
in
jmp
insb
adc
sbb
mov
pop
push
sbb
xchg
js
jo
dec
dec
cltd
sub
push
stos
jmp
or
adc
and
stos
cmp
shll
rcll
sub
data16
xor
jo
jl
inc
int3
lret
mov
ljmp
leave
sub
or
outsl
sbb
lahf
mov
cmpl
mov
xor
inc
sahf
fdivl
push
jno
and
sub
xlat
insb
in
add
mov
mulb
fsts
std
aaa
adc
cmp
sub
jmp
pop
stos
mov
mov
push
inc
lahf
hlt
mov
movsl
mov
inc
fnstcw
rcll
test
mov
xchg
mov
inc
push
jnp
jno
clc
or
test
adc
fbld
lea
pop
daa
dec
push
pusha
dec
add
cltd
lea
faddl
in
sahf
test
cmpsl
pop
adc
out
push
cmp
add
sbb
mov
and
dec
pop
push
cwtl
or
mov
mov
pushf
xchg
mov
fstp
ficompl
mov
cmpb
loop
jae
loopne
push
sahf
iret
sbb
ret
inc
and
adc
repz
sbb
jle
jecxz
mov
mov
or
enter
outsb
in
jns
jnp
pop
movsl
pop
xor
or
lock
in
adc
orb
aad
or
scas
clc
dec
mov
repnz
pop
rorl
dec
adc
adc
fcmovnu
adc
sub
lock
sbb
push
scas
mov
adc
fiaddl
ficompl
movsl
out
pop
jno
inc
rcll
cmp
add
jmp
insl
jg
push
xor
adc
outsl
cmpsb
sub
insl
mov
dec
stos
pop
add
mov
loopne
or
nop
leave
stos
arpl
mov
jno
sbb
iret
dec
enter
or
insl
inc
push
adc
es
cmp
dec
mov
je
das
ret
sbb
xchg
push
lods
scas
and
inc
addps
pushf
mov
sti
mov
lods
or
pop
in
les
iret
lds
xchg
lret
aaa
repz
dec
scas
jno
cmp
hlt
jne
daa
shld
adc
int
or
xchg
xchg
or
mov
xchg
cmp
popa
sub
cld
jbe
push
cmp
dec
xchg
mov
sbb
das
jo
sbb
pushf
sbb
jecxz
sbb
mov
mov
and
pusha
sub
xchg
mov
xor
daa
add
iret
xchg
inc
jb
nop
data16
ret
adc
sub
xchg
pop
cmp
mov
mov
cwtl
sbb
hlt
dec
pop
pop
rorl
shl
jmp
jmp
fcoms
in
lret
es
mov
rcrb
mov
mov
movsb
push
test
and
addb
inc
mov
add
sub
je
fcoml
adc
jle
test
mov
icebp
scas
rol
and
testb
xor
mov
fdivs
outsl
xor
sub
inc
dec
and
pop
xchg
pop
ds
inc
push
pop
xor
adc
push
adc
xchg
movsl
pushf
mov
daa
mov
jae
pop
pushf
xlat
ss
fists
inc
pop
mov
getsec
sbb
mov
pop
data16
psadbw
cmp
insb
jp
jp
mov
mov
cltd
jo
pop
das
xchg
pop
lods
in
inc
add
or
mov
scas
test
aaa
test
mov
inc
adc
imul
faddl
loope
sbb
stc
jge
sbb
mov
cmp
repz
and
sbb
xor
add
jns
and
cmp
dec
pop
xor
movsb
mov
sub
dec
xorl
cmp
mov
das
clc
mov
pushf
push
jbe
in
pop
inc
cs
leave
xchg
push
add
mov
pop
fwait
cli
int3
repz
call
rolb
cmp
jmp
outsl
aaa
xor
inc
sub
sub
test
addl
inc
arpl
sub
mov
add
pop
xchg
pop
aad
arpl
popa
mov
adc
mov
jno
insb
and
test
mov
insl
fisubrs
mov
sub
ljmp
inc
xchg
push
pushf
out
pop
andb
xor
adc
out
test
jl
cmp
mov
jmp
fldenv
adc
and
jg
add
loop
dec
mov
push
adc
int
and
js
in
adc
ss
sub
jl
lods
sub
push
addr16
adc
stc
fsubrl
add
xchg
loop
test
sub
test
sub
mov
cli
outsl
loop
aaa
notl
outsl
jne
dec
push
inc
lods
push
pusha
mov
add
mov
jge
mov
and
sarb
xchg
lods
add
mov
cwtl
and
lds
xlat
mov
mov
scas
sub
cmc
aad
sub
sti
data16
dec
fwait
adc
loope
pop
fs
pop
es
mov
mov
stc
cltd
sahf
xlat
fildl
xor
cmp
push
push
pop
dec
pop
xchg
jge
push
int3
rcll
lods
xchg
pop
push
in
fidivl
jmp
aad
sub
test
fiaddl
out
popa
push
or
pop
int3
xchg
aas
ret
inc
sub
fxam
jg
das
pop
fsubs
test
and
fwait
roll
lea
loop
cmpb
jne
push
sbb
movsb
js
aam
scas
pop
sbb
in
pop
sub
std
and
shll
bound
add
dec
imul
and
in
faddl
push
mov
push
xor
or
lods
jmp
imulb
push
lods
adc
enter
les
sub
jmp
bound
push
or
in
fsts
into
push
fcmovb
fnstenv
stc
inc
jo
fprem
out
or
pop
add
mov
insl
lcall
pop
sbb
rorl
dec
in
sti
xchg
movsl
jmp
call
jmp
sbb
sub
jge
xchg
adc
in
nop
popf
xor
pop
ret
jmp
fbstp
dec
push
jne
pop
inc
mov
lahf
ret
xchg
mov
pop
jae
fs
sahf
mov
mov
dec
xchg
cltd
imul
fiadds
xlat
loop
dec
es
xchg
aas
roll
push
mov
and
lcall
inc
adc
xchg
pop
or
lea
inc
out
lret
jmp
lahf
sbb
inc
sbb
mov
adc
add
inc
roll
and
lea
std
cmc
clc
test
int
mov
pop
test
loop
fs
jl
loope
push
jnp
clc
jmp
or
jg
pusha
push
mov
es
push
jg
into
cmp
jmp
aam
arpl
xchg
cmp
shrb
pop
adc
dec
test
jle
test
add
mov
data16
out
cmc
mul
test
jno
leave
xchg
mov
scas
jmp
and
clc
pusha
sbb
mov
mov
jb
in
mov
popf
jmp
lcall
test
adc
mov
inc
loopne
in
aam
scas
dec
repz
add
stc
inc
lds
dec
es
lods
dec
cli
mov
cmp
push
mov
test
pop
and
mov
or
hlt
je
jmp
test
aas
sbb
mul
and
xchg
mov
out
shll
scas
inc
mov
jmp
imul
jo
mov
sub
cld
add
xchg
iret
ss
xor
repnz
arpl
cli
mov
xor
adc
clc
push
mov
clc
mov
nop
hlt
sbb
xchg
or
or
add
push
xchg
cltd
adc
pop
fidivrs
outsb
aam
xor
and
xor
pop
push
mov
and
lahf
jmp
inc
sbb
push
push
jno
flds
add
fistpl
jge
adc
mov
mov
jle
mov
orb
jno
push
int
sub
dec
out
dec
sahf
lods
leave
adc
xor
mov
add
xor
push
rcll
pop
out
gs
push
mov
frstor
icebp
imul
mov
pushf
jns
or
pop
incl
lods
mov
xor
aaa
xchg
add
mov
ss
js
xchg
outsb
dec
jb
mov
cmc
mov
push
test
lock
imul
fbld
popf
addr16
push
xor
xor
lods
jp
cmp
jp
call
xor
rolb
mov
in
ja
test
ret
sbb
jg
cld
xchg
xor
imul
lds
and
xchg
xchg
jb
in
push
pop
inc
and
aas
push
aam
jo
dec
int3
test
nop
pop
negb
jg
js
jns
xor
daa
mov
bswap
lahf
fidivrl
sub
xor
jle
aas
mov
ret
pop
jno
push
mov
jmp
push
xchg
fwait
shlb
jecxz
fwait
jo
lcall
xchg
int
inc
mov
addr16
in
push
popf
movsl
mov
lahf
pop
mov
jae
sbb
xchg
mov
pop
nop
add
jne
pop
xlat
jo
cmp
or
hlt
pop
sub
sti
mov
dec
adc
push
test
sub
pusha
dec
hlt
jno
sub
stos
mov
mov
adc
add
lahf
jl
enter
and
repz
inc
jnp
mull
or
fwait
repz
cmpsb
addr16
push
push
lods
push
mov
pushf
mov
out
shrl
push
sbb
sahf
cmpsb
cmp
pop
out
popl
mov
in
lock
xor
xchg
jb
push
pop
orl
push
cmp
js
adc
xchg
push
rcrl
mov
add
arpl
and
cmp
mov
push
test
jecxz
xor
in
fwait
mov
pop
fsubrs
jecxz
jno
push
mov
loopne,pn
push
sub
mov
push
nop
or
mov
loope
in
sahf
hlt
icebp
push
mov
fstps
sbb
xlat
ss
int
pop
mov
outsl
inc
imul
xchg
and
adc
push
mov
mov
cli
jge
mov
lahf
shlb
mov
loope
push
les
test
mov
sub
inc
dec
loop
sub
jg
test
pop
inc
mov
aaa
push
popa
cmc
xchg
scas
out
popa
mov
pop
cs
xchg
lret
pop
cld
cmp
push
popa
ret
fucomi
scas
lock
outsb
pop
xchg
jle
outsl
and
ror
movsb
test
fidivl
lret
xchg
out
cmp
push
add
lcall
sbb
fwait
out
scas
shlb
out
sarb
or
and
enter
test
dec
movsl
icebp
lods
shll
add
sbbl
xor
add
je
xchg
cmp
inc
inc
pop
pop
push
cmp
sub
adc
or
sub
lcall
mov
or
shlb
movsb
out
lods
pop
sbb
inc
mov
xchg
pop
sub
and
ljmp
pop
jne,pn
and
imul
in
mul
fcoml
aas
and
add
xchg
sbbb
inc
std
xchg
call
jb
pop
lahf
shll
pop
inc
mov
imul
xor
mov
xchg
lret
pop
cld
ja
sti
out
fistl
je
xchg
cwtl
ret
movsb
fsts
shr
or
sub
cwtl
inc
jle
imul
sbb
out
xchg
js
lret
std
or
loopw
push
xor
popf
pop
cmc
mov
insb
and
fwait
es
pop
mov
sbb
add
mov
insb
pop
inc
xchg
push
ljmp
pop
cwtl
jp
mov
cs
sbb
test
pusha
in
push
xchg
jne
data16
andb
sahf
in
mul
fcoml
aas
and
mov
pusha
push
rcrb
cmpsb
inc
std
ss
push
data16
xchg
les
add
shll
pop
inc
mov
aaa
push
popa
cmc
xchg
scas
out
mov
mov
lret
pop
cld
cmp
push
popa
ret
mov
ds
mov
xchg
jle
hlt
icebp
mov
pushf
fidivl
lret
xchg
out
cmp
push
add
lcall
testl
movsb
out
sarb
or
lret
dec
pop
and
in
and
xchg
pop
std
cmp
jns
sub
add
pop
push
movsb
cli
pop
push
leave
cmp
test
cmp
sbb
inc
pop
rclb
out
sbb
jmp
fcmove
jmp
popa
je
stos
jne
lcall
stos
jle
mov
ljmpw
lret
outsl
push
jmp
rorl
lcall
xchg
outsb
lock
clc
add
adc
mov
jnp
and
push
decl
int3
gs
dec
addr16
out
adc
cmp
test
scas
push
pop
jo
loopne
roll
pop
fisttpll
pop
xchg
add
mov
loopne
dec
cld
stc
shlb
cmp
insl
cmp
lods
jl
adc
in
xor
mov
adc
jecxz
les
mov
and
je
xchg
cmp
push
rcrl
fdiv
xor
in
in
iret
sbb
imul
dec
inc
lahf
push
mov
cwtl
sahf
testl
push
ljmp
xor
sbb
jno
mov
jecxz
and
sahf
movsl
les
sbb
and
inc
or
cmp
jg
addr16
fcmovbe
push
or
sbb
neg
and
out
push
test
pop
in
dec
sub
js
jl
dec
xor
loope
mov
dec
jo
lods
sub
dec
cltd
jae
cltd
inc
es
out
mov
mov
negl
in
xor
imul
mov
int
mov
nop
push
rolb
mov
dec
inc
jb
mov
ja
push
push
sub
scas
mov
sti
ret
mov
xor
mov
mov
scas
xor
hlt
jns
push
loop
ja
mov
lods
mov
nop
jmp
sbb
xchg
jbe
ret
and
add
daa
jbe
adc
lds
dec
enter
pop
jae
and
cmpsb
xor
inc
das
xchg
rolb
add
inc
stos
mov
and
scas
fdivl
int3
aad
sbbb
pop
jg
push
mov
cmovle
mov
or
pop
lods
cmpsb
add
cmp
addr16
in
or
sti
rcrb
xor
pusha
mov
stos
sbbl
dec
inc
cli
dec
call
fnstsw
ljmp
fisttpl
dec
imul
rcrl
or
nop
stc
iret
andl
mov
and
insb
cmp
pop
mov
jle
xor
xor
push
lcall
in
jae
fcompl
inc
out
xor
sub
and
fs
push
testl
es
fdivs
inc
imul
xchg
mov
push
rcrl
test
call
inc
lcall
leave
gs
jns
and
or
sbb
or
sbb
aad
insb
mov
mov
inc
sbb
and
pop
frstor
pop
lahf
push
ja
inc
dec
sbb
stc
in
fisubrs
popf
mov
insb
adc
xor
mov
loopne
pop
cwtl
movsb
push
sub
adc
jne
divb
ss
dec
sbb
sbb
or
pop
pop
arpl
sbb
mov
sbb
ljmp
jo
lods
sbb
jb
jecxz
lea
mov
dec
clc
inc
mov
cmp
add
test
add
jo
sbb
xchg
cmp
out
aas
push
decl
loop
arpl
fxch
mov
sbb
stos
mov
les
mov
popa
inc
jl
popf
das
out
jge
add
pop
leave
sub
xlat
addr16
cli
mov
and
sub
and
fxam
mov
pop
add
xor
dec
mov
mov
sub
lcall
aam
cli
in
sub
movsb
leave
cmpb
inc
int
lods
je
gs
lret
int
icebp
sarb
jno
bound
les
sub
lret
dec
into
cmp
mov
push
inc
adc
dec
and
imul
mov
stc
data16
outsl
and
dec
popa
lods
sub
xor
arpl
mov
jb
jle
addr16
pop
jnp
cmp
pop
idiv
jne
les
gs
fnstcw
addr16
sub
negb
sbb
outsb
imul
mov
imul
or
cltd
lds
in
push
cwtl
ja
mov
push
pop
pop
or
mov
cmp
mov
jg
aaa
fs
dec
cs
test
inc
adc
imulb
fidivs
jno
mov
cmpsb
jmp
jnp
mov
mov
xor
repnz
js
lods
mov
sahf
mov
outsl
sub
mov
adc
movsb
cld
dec
dec
lods
cmp
stc
mov
add
repnz
xor
xor
or
les
push
pop
in
push
or
jns
xchg
imul
test
lcall
push
daa
xor
mov
xor
xchg
aad
call
shll
dec
push
ret
stc
mov
cmp
fimuls
xor
cmc
cmc
hlt
jge
fisubs
sub
adc
mov
jnp
or
pusha
arpl
jl
pusha
or
add
add
in
dec
push
pushf
sti
scas
xor
dec
jle
mov
push
and
in
xor
call
out
sbb
cmp
fisubrs
push
jns
outsl
lgs
jne
test
mov
cmp
gs
imul
clc
xlat
popf
mov
mov
inc
xor
inc
xor
mov
or
daa
in
aam
sbb
add
cmp
outsl
pop
js
unpckhps
adc
cmpl
jo
push
and
loopne
sbb
ja
lds
pop
mov
scas
or
sbb
mov
iret
xor
sbb
stos
fistpll
sbbb
jecxz
mov
jl
imul
mov
jne
movsb
dec
sbb
adc
es
stc
stos
int3
in
lret
mov
jbe
xchg
mov
mov
int
outsl
cltd
mov
xchg
lahf
sahf
test
in
adc
jb
adc
pop
pop
jno
push
jbe
mov
adc
fnstenv
or
jmp
adc
mov
shl
mov
inc
sbb
pminsw
shlb
test
dec
mov
stos
out
push
arpl
ds
out
fistps
mov
mov
xchg
pop
ss
push
mov
jp
mov
pop
ret
test
adc
xchg
dec
in
jmp
movsb
mov
mov
dec
leave
lret
lods
mov
xchg
pop
sub
lcall
inc
fistl
or
imul
mov
dec
cmp
sbb
mov
lods
fsubl
std
jecxz
or
cmpsl
push
cli
ja
cmp
mov
popf
mov
push
nop
sahf
js
aad
lock
cmpsl
jge
roll
jno
adc
jle
test
sar
ss
enter
nop
dec
in
into
aad
mov
push
xor
test
or
jo
out
fxch
mov
add
or
aaa
hlt
jmp
loopne
sbb
into
add
cmpsl
and
inc
cmp
mov
xchg
imul
fwait
mov
pushl
dec
in
int
inc
into
push
inc
xor
xor
out
es
clc
cmp
les
xchg
das
test
inc
loope
sbb
dec
outsb
dec
hlt
fldcw
out
and
or
scas
stc
mov
push
inc
jns
fcmovnb
shrb
mov
loop
mov
jmp
loope
mov
inc
push
and
inc
sbb
mov
stc
xchg
movsb
push
stc
cmc
in
jg
loop
inc
push
mov
inc
jno
push
mov
dec
sub
popa
jno
pop
sti
push
mov
outsb
mov
mov
or
enter
popf
int
scas
insl
mov
inc
movsl
pop
sbb
xor
aaa
jne
fdivrl
rcll
sub
jae
mov
mov
inc
cmp
xchg
inc
les
mov
or
cltd
inc
xchg
test
jmp
cmpsl
mov
jmp
cmp
sbb
adc
cltd
shl
fsub
push
aam
fisubl
sbb
adc
xchg
and
jge
mov
das
cmpsb
add
mov
inc
orl
xchg
pop
fbstp
jp
lods
mov
jecxz
leave
xchg
pop
arpl
mov
or
push
push
mov
mov
in
rol
hlt
mull
loop
pop
test
push
jno
iret
sbb
lcall
inc
gs
mov
sub
repnz
add
push
je
test
in
stos
xor
and
mov
dec
imul
sub
add
push
pusha
or
sbb
testl
inc
xchg
xchg
or
pop
dec
test
nop
call
mov
adc
mov
push
aad
pop
sbb
jne
lcall
xchg
scas
push
sbb
jo
adc
pop
test
das
fildl
lea
add
scas
dec
jno
scas
sbb
mov
xchg
dec
pusha
add
add
lret
fcomps
dec
inc
hlt
sub
mov
adc
and
or
gs
cmp
fbstp
in
sbb
adc
mov
stos
jp
add
in
adc
int3
xchg
jmp
or
stos
inc
ljmp
scas
sahf
scas
test
cmpsb
outsl
addr16
push
mov
jne
xor
out
push
sub
test
dec
push
cli
dec
jne
imull
inc
rcl
mov
repz
push
loopne
sub
pusha
adc
and
mov
cmp
add
push
fnstsw
mov
mov
mov
cmp
sti
out
add
pusha
out
and
or
int3
mov
mov
popa
mov
cmp
push
xchg
outsb
daa
test
push
push
xchg
adc
test
popa
mov
cmp
fsts
iret
xlat
adc
cmp
or
or
jb
outsl
xchg
sbb
int
ror
jns
js
pop
adc
mov
bnd
imul
mov
jb
lcall
inc
dec
stos
mov
xchg
or
xor
xchg
mov
jg
xchg
jno
ret
scas
xchg
adc
xor
icebp
cmp
and
movsl
out
lcall
pop
push
inc
push
xchg
fs
sub
std
jl
pop
aaa
jg
xor
imul
pop
loope
sub
xor
push
xor
adc
push
add
push
jmp
cmp
xor
fstpt
cwtl
and
clc
je
sbb
clc
sbb
or
pop
pusha
mov
lret
pushf
or
out
filds
xchg
int3
rcrl
pop
jns
lds
mov
stos
xchg
fldl
dec
and
dec
test
jge
jp
frstor
daa
leave
sbb
sbb
dec
cmc
roll
je
sti
cmp
push
mov
xchg
cs
fnstsw
add
sbb
in
inc
cld
adc
sub
jo
imul
subl
loope
iret
out
jg
mov
mov
repz
fstps
mov
out
ss
pop
insl
clc
lea
leave
push
cmp
pop
mov
fwait
jmp
mov
arpl
loop
out
test
cmp
ljmp
and
loopne
ljmp
mov
pop
push
jmp
xchg
ljmp
jg
add
ds
enter
fisubs
shl
lds
mov
push
movsb
popa
inc
dec
int
or
je
aam
xor
cmp
dec
sbb
notl
mov
pop
mov
loop
orl
insl
in
pop
lock
fmull
ja
jbe
mov
fsincos
cmp
and
sub
test
daa
lret
testb
lods
cmp
push
std
xor
adc
mov
xchg
adc
les
inc
push
adc
inc
test
in
or
nop
jmp
mov
mov
sub
daa
sub
sub
aam
push
ret
lret
mov
pushf
mov
mov
push
mov
loop
ss
hlt
jg
pop
push
jo
mov
dec
mov
sub
sbb
jnp
insb
mov
xchg
push
fists
dec
cmp
dec
sub
xor
dec
cmpsl
stc
inc
mov
mov
sbb
test
cltd
fldl
data16
repnz
sbb
xor
adc
aam
push
cmp
xor
nop
in
jg
mov
xchg
stos
call
icebp
xchg
push
mov
jl
stos
xor
dec
or
pushf
mov
or
mov
mov
mov
or
testb
mov
push
sbb
xor
aam
aad
mov
sti
out
pushf
repz
pop
in
xchg
jge
push
and
lock
ljmp
push
mov
les
cs
cmp
shlb
mov
mov
add
cmp
mov
cmp
ficompl
cmpsl
sbb
rol
jnp
xchg
add
pop
and
xchg
out
in
pop
jo
push
or
xor
cs
cmpsb
cltd
daa
sub
cltd
xor
fildll
xor
xchg
addr16
cli
mov
mov
jo
les
test
jl
mov
mov
in
mov
push
jmp
add
push
pop
lret
cmp
movsl
nop
cmp
pop
rcrb
movl
xor
dec
dec
mov
lock
cwtl
testb
adc
lret
hlt
sub
and
jg
mov
lods
jo
int3
push
jbe
xchg
sbb
int3
add
adc
cmp
adc
pusha
daa
xlat
and
xor
test
loopne
cmp
and
add
and
inc
leave
into
sub
xchg
lods
loop
scas
insl
stc
sbb
test
filds
sbb
xchg
jg
lea
adcl
icebp
and
dec
push
loop
into
sbb
mov
lods
xchg
mov
jmp
test
insb
push
adc
jne
sub
jne
mov
in
dec
cmpsb
cmp
xlat
ljmp
xor
mov
loope
mov
ret
shlb
stos
mov
inc
xlat
push
mov
iret
jb
mov
add
aad
xor
das
popf
mov
les
and
xor
jge
jle
push
sti
cmp
imull
sub
inc
inc
jo
ds
mov
dec
xor
cmp
in
jns
mov
in
and
pop
jge
gs
ret
loope
xchg
inc
loopne
push
pop
test
das
push
pop
scas
je
push
sahf
push
sub
sbb
nop
cs
icebp
rorl
into
leave
lock
dec
sti
inc
sbb
add
es
enter
jl
dec
loope
push
push
mov
push
push
loope
repnz
out
cmc
and
data16
lret
cs
mov
push
xchg
add
loop
addl
ret
jne
hlt
fsubl
sti
xor
out
add
pop
mov
mov
xchg
sbb
xor
cmpsb
nop
ja
fwait
enter
mov
fldl
pop
dec
test
mov
out
mov
xor
mov
clc
es
xor
pop
mov
mov
insl
and
stc
or
push
repz
repnz
je
jg
enter
jb
add
lods
sar
mov
std
into
sub
sub
cs
dec
pusha
loopne
clc
mov
push
iret
cmpsl
pop
pop
out
aad
mov
aas
pop
jbe
div
cmpsl
test
mov
push
pop
xchg
pop
ret
fs
dec
jg
sub
iret
std
ficomps
cmp
int
loope
pop
xor
das
lds
jnp
pop
scas
mov
sbb
add
popa
or
test
sbb
mov
xchg
xor
jmp
add
push
mov
sbb
ljmp
dec
push
xor
sbb
int3
or
inc
pop
popa
or
push
push
adc
jg
push
arpl
fcmovnbe
sbb
pop
sarl
and
lods
sahf
movsb
fs
repnz
aas
cmpsl
or
out
xor
iret
into
cmc
mov
xlat
cli
mov
pop
movsb
mov
sti
mov
je
out
cmc
add
ret
out
jge
ss
popa
mov
push
dec
out
mov
jecxz
mov
fldt
add
stos
iret
push
imul
xchg
sub
fsubp
push
mov
lds
mov
fdivs
test
loope
pop
rorb
add
push
cli
adc
fmull
mov
or
icebp
or
mov
jbe
fcoms
in
testl
scas
arpl
push
pop
popa
lret
es
inc
jns
pop
sbb
test
pushf
in
jae
enter
xchg
test
shlb
scas
dec
loop
jae
sbb
xor
cli
addb
jns
push
mov
scas
sub
xchg
xchg
pop
sbb
xchg
pusha
ljmp
lret
incb
into
xor
mov
js
adc
add
mov
aad
mov
addr16
or
mov
cltd
fsub
rorb
push
xchg
dec
flds
cwtl
and
loop
mov
cmp
sbb
movsb
cmp
push
cmp
inc
push
and
mov
mov
pop
adc
add
cwtl
adc
jl
or
add
adc
sbb
out
scas
or
fistl
or
pushf
pop
mov
jnp
fildll
aaa
sbb
rol
mov
les
jb
jno
adc
xorb
cmp
nop
push
imul
inc
mov
push
ljmp
push
mov
int3
testb
or
adc
or
jecxz
push
pop
aam
shrb
js
repz
cmc
mov
pop
and
loopne
xor
lea
ljmp
nop
xchg
mov
lret
xor
add
popf
repz
stos
add
sbb
in
adc
adc
xor
data16
repnz
push
sub
shll
gs
pop
xchg
mov
wrmsr
jg
push
fiadds
btc
xchg
in
sbb
sbb
dec
sarl
loope
mov
jns
cld
jecxz
ret
lret
mov
mov
into
cmp
sub
ds
add
mov
dec
cs
mov
fdivs
aaa
pop
dec
movhps
add
movsl
jp
flds
jne
jo
aad
dec
xchg
sahf
insb
pushf
jmp
out
add
push
pop
lahf
cmp
test
subl
xor
in
mov
and
jge
sub
push
aaa
aaa
xchg
in
xor
mov
cs
mov
mov
pushf
push
clc
and
idivb
loope
mov
pop
imul
shrl
imul
or
cmp
cmp
push
adc
icebp
stos
mov
sub
rorl
rcrb
data16
push
shlb
mov
inc
pop
inc
push
call
xor
xor
jg
cmpsl
mov
aad
or
mov
loopne
or
mov
imull
daa
jo
sarb
rcrb
adc
ficompl
and
xor
cli
or
and
mov
or
movsb
pop
push
and
cmpsb
push
imul
lds
ja
sub
ror
iret
data16
add
stos
lahf
fwait
mov
clc
jno
jecxz
aaa
xor
cwtl
dec
or
fs
mov
add
and
mov
test
adc
xor
xchg
and
insl
sub
cmc
mov
xlat
cli
mov
pop
movsb
mov
sti
mov
je
out
xor
in
jp
add
mov
inc
add
sar
ficomps
inc
les
adc
inc
push
leave
int
neg
add
adc
pop
dec
mov
add
jne
push
ficoml
stos
sub
mov
mov
add
inc
loopne
inc
xorl
cli
lock
mov
ret
mov
pop
push
pop
add
ja
cld
and
inc
fcmovb
xchg
xor
cmp
add
mov
test
add
sbb
adcl
xchg
ficompl
sub
inc
daa
mov
iret
xor
data16
or
notb
sbb
shl
out
fistps
dec
pusha
sti
adc
ret
jge
inc
aaa
call
sub
movb
out
mov
pop
test
pop
enter
aaa
mov
or
adc
aaa
sbb
ljmp
ret
js
outsl
or
adc
outsl
cwtl
aas
xor
push
jmp
lods
movsl
or
lods
push
cwtl
idiv
fs
mov
push
popa
aad
sub
imul
movsl
cli
mov
lock
stos
aas
stc
lods
push
sar
sbb
cs
arpl
test
push
ds
pop
fdivl
mov
rcll
sbb
jg
scas
ret
rcl
xchg
fucomip
xchg
stos
std
mov
les
jo
mov
roll
sbb
aad
xlat
stos
and
data16
fwait
int
sbbb
aas
cmp
adc
cs
fbld
es
repz
push
out
pop
cmp
fwait
push
mov
andl
lahf
mov
pop
dec
jnp
setg
and
xchg
sarb
cmc
imul
push
std
scas
cmpl
cmpsb
sbb
inc
xchg
ret
or
out
dec
stos
fwait
pop
je
je
mov
bound
repz
addl
push
jno
jg
sarl
xchg
insb
clc
movsb
xchg
ret
sub
or
sahf
es
repnz
addr16
sub
ss
pop
shlb
cld
cmp
das
out
xor
popa
pop
adc
jo
cltd
lods
in
cmp
dec
cld
hlt
pop
lock
xor
fstpl
and
fadd
mov
movsb
cmp
bound
in
repz
adc
inc
js
test
mov
lods
out
je
push
pop
push
push
jns
sub
sahf
lret
mov
xchg
and
inc
scas
cmp
or
hlt
cmc
dec
sub
or
push
inc
fs
subl
jbe
mov
lods
ljmp
lret
adc
cmpb
jp
ja
ljmp
movsb
lods
lods
lahf
mov
mov
cmp
or
cmpsl
jno
stos
lods
jb
push
and
jnp
fisubrl
or
jl
push
dec
in
mov
data16
popa
dec
add
mov
cs
leave
ss
and
dec
xchg
xor
out
loopne
mov
ror
ds
movsb
xchg
inc
and
adc
in
cmpsl
jg
mov
and
movsl
mov
inc
dec
lahf
push
fbstp
inc
loopne
mov
adcl
pop
out
out
pop
cwtl
shll
cmpb
movsl
out
xchg
sbb
ljmp
shrl
jle
xchg
mov
jne
mov
arpl
mov
adc
pop
push
mov
outsb
filds
push
jle
or
adc
sub
push
and
sbb
dec
in
xor
popf
mov
push
sbb
mov
cmp
jbe
lcall
mov
test
pusha
mov
cmc
pop
mov
push
xchg
clc
out
and
jno
inc
and
add
jnp
dec
pop
push
push
jb
fs
rcrb
jb
jecxz
fwait
jb
in
xchg
repnz
leave
imul
sub
lret
push
push
out
data16
stos
jle
test
and
add
lea
adc
mov
inc
jp
inc
push
mov
push
mov
stos
scas
out
in
mov
pop
jno
mov
push
insl
cmp
lea
shll
shrb
aad
lea
data16
inc
cmp
shrb
stos
jmp
repz
xchg
subb
int3
mov
icebp
inc
or
mov
and
fldl
jl
lret
jne
jmp
lods
mov
popa
cmc
mov
repnz
out
xchg
xor
and
push
and
or
lods
mov
mov
inc
or
mov
dec
lahf
stc
sub
cmp
fs
stos
int3
sub
dec
test
jbe
shrl
outsb
mov
and
scas
push
popa
test
adc
mov
xchg
into
mov
sub
rol
and
or
or
cmp
enter
cmp
movsb
cmc
lea
loopne
inc
mov
lret
test
mov
xor
mov
inc
mov
pop
xor
cmp
mov
rcrb
fnstenv
in
xchg
xchg
adc
or
xor
push
sbb
inc
rclb
mov
jmp
imul
mov
mov
imul
push
popa
add
cmp
sub
lcall
mov
or
dec
aam
push
inc
enter
mov
xchg
sub
pop
idiv
scas
cld
adc
repnz
jge
scas
adc
das
lahf
inc
leave
sub
sub
cmpsb
mov
int
cmp
movsl
cld
sbb
push
jnp
sbb
or
xor
fwait
xor
mov
push
loope
dec
push
pop
outsl
fistps
inc
es
daa
inc
adc
test
adc
out
ljmp
shlb
xor
imul
test
icebp
mov
sbb
and
mov
dec
ret
push
pop
dec
push
ss
dec
inc
add
push
pop
sbb
adc
xor
orb
or
lock
mov
inc
inc
ja
lahf
mov
dec
fnsave
mov
xchg
pop
pop
xor
or
mov
push
in
cmpsl
imul
sbb
inc
gs
jge
in
cmp
in
movsl
stos
dec
mov
or
data16
into
dec
outsl
mov
outsl
lahf
add
pop
mov
fbld
adc
jl
notl
lods
mov
dec
xchg
into
les
imul
cli
jo
xlat
popf
sub
xchg
or
or
jp
and
ss
jp
jne
nop
jecxz
mov
ljmp
pop
nop
enter
cmc
xchg
dec
pop
in
adc
pop
or
shlb
shll
mov
imul
cmp
imul
or
fwait
shr
adc
and
imul
cmc
and
icebp
mov
bound
pop
pop
out
xor
xchg
shll
mov
gs
adc
sbb
lret
rolb
pop
pop
xchg
jmp
cltd
sbbb
out
divb
inc
imul
adc
sub
js
push
and
pop
out
sbb
jno
xor
mov
xchg
stos
cwtl
gs
pop
jno
mov
dec
dec
ret
push
push
enter
sbbb
mov
int
lcall
subb
shrl
inc
add
jecxz
std
into
test
inc
cmp
jae
imul
dec
mov
xor
cmpsl
jns
cs
dec
xchg
xchg
sub
fisubs
pop
lret
repz
xor
sbbl
hlt
int
imul
rcrl
cwtl
xchg
ret
popf
pop
mov
js
test
xchg
jg
sub
cwtl
xchg
add
adc
int
insb
xor
xchg
loope
in
and
nop
inc
js
xor
fldl
ss
fimuls
stos
enter
pop
mov
pop
lahf
dec
cltd
fimuls
insb
push
pop
in
xor
dec
push
jp
cmp
cmp
mov
xor
outsl
insl
mov
cld
cmp
pop
fpatan
outsl
add
mov
mov
sarb
in
mov
push
and
test
mov
add
ja
stos
inc
sbb
xchg
adc
imul
sub
mov
fisubrs
dec
sub
shl
lods
imul
sub
sub
in
insb
jge
cmp
shll
inc
loopne
inc
jae
ss
lret
xor
push
fwait
ja
xchg
shlb
or
pmuludq
xor
and
mov
negl
andl
and
add
call
mov
dec
in
adc
cmpsb
adc
pop
stos
adc
push
dec
addr16
daa
subb
ficompl
in
jno
addr16
adc
int3
ret
dec
xor
ljmp
mov
mov
jecxz
adc
icebp
mov
sub
sbb
push
and
testb
or
mov
jns
repz
dec
xor
subb
insb
xor
fdivs
mov
push
push
clc
cmp
inc
jo
xor
add
sti
sahf
push
fsin
lea
mov
mov
jmp
jmp
mov
clc
add
iret
dec
adc
shlb
inc
mov
call
xchg
test
or
idivl
les
roll
testb
mov
fwait
cmpsl
or
mov
cmp
xchg
adc
xchg
dec
pop
ret
mov
popf
outsb
out
dec
popf
mov
shl
sahf
lret
test
js
add
iret
fisttpl
lods
test
sti
mov
roll
push
xor
cmc
cmp
inc
mov
mov
repnz
lret
faddl
mov
xchg
mov
push
add
xor
test
decb
cmc
mov
aad
or
fwait
add
pushf
push
int3
mov
mov
inc
lods
mov
xchg
xchg
dec
mov
dec
dec
ficoml
inc
fstpl
mov
out
inc
jb
mov
das
pop
xor
out
mov
lea
jl
pop
dec
xchg
sub
push
push
sub
mov
mov
rcrb
or
xchg
js
cwtl
rorl
mov
in
lds
iret
adc
adc
sub
sub
mov
insl
jle
clc
sbb
repnz
sbbl
and
cmp
mov
lea
push
clc
pop
push
xchg
loopne
add
xor
shl
loopne
adc
mov
lea
in
bnd
push
push
or
daa
sub
arpl
out
mov
pop
cmp
sub
in
mov
mov
mov
adc
adc
jge
jne
imul
iret
jp
push
and
xchg
sub
mov
jnp
js
xchg
jg
ds
popf
add
xchg
pop
mov
je
test
leave
inc
in
movsl
adc
xchg
rcll
push
int3
mov
and
cltd
ljmp
mov
stos
jg
adc
nop
add
xchg
mov
jl
or
ja
jae
dec
and
cltd
push
dec
or
iret
xor
cmp
aad
shl
push
cmp
mov
push
scas
xor
scas
xor
imul
jp
aaa
insb
xor
icebp
ret
out
int3
pushf
adc
lds
mov
pop
outsb
adc
or
mov
jge
out
mov
imul
jecxz
mov
or
push
das
or
popf
bound
pop
loopne
or
pushf
xchg
mov
add
xor
jecxz
pop
das
push
mov
outsl
jo
cwtl
insb
jl
ficoml
cld
xchg
xchg
aas
mov
nop
jmp
xor
imul
jnp
in
jb
in
mov
or
pop
sub
loop
popa
ficoms
pop
jg
jp
test
movsl
js
sbb
outsb
push
shll
pop
jo
add
push
cmp
insb
jno
cmp
bound
pop
out
push
jg
mov
mov
js
xchg
push
sar
into
add
adc
leave
adc
out
int
je
lea
dec
cmp
test
lods
int
mov
and
pop
sahf
sub
lret
in
cs
sahf
adc
mov
out
inc
push
stos
mov
filds
inc
insl
ljmp
cmp
sub
ljmp
sub
aas
sbb
xchg
cmpsb
dec
outsl
stc
or
clc
jb
loopne
jmp
movsb
lahf
push
ljmp
mov
push
scas
insb
sahf
mov
xchg
out
in
sbbl
mov
stos
aas
pop
decb
aam
les
add
dec
and
mov
popf
mov
aas
test
cmp
mov
cli
scas
shll
bt
inc
jge
dec
aam
mov
mov
loope
dec
sbb
cmp
cmpsl
mov
and
outsl
int
imul
jae
addb
push
sbb
inc
int3
aas
dec
idivl
push
lret
movsl
sbb
pop
adc
inc
mov
push
subb
notb
addb
pop
mov
push
mov
cli
sub
fisubrl
mov
cmp
sbb
inc
mov
jle
sti
xchg
mov
pushf
ja
lods
sahf
pop
addl
xchg
cmpsb
aam
and
insl
sub
jne
sbb
pop
cmp
sarl
es
icebp
xchg
xchg
inc
dec
sbb
xchg
dec
or
push
data16
pop
aad
dec
mov
fdivl
sub
push
inc
mov
insl
sahf
mov
lcall
and
rorb
ret
icebp
pop
mov
and
adc
dec
mov
xlat
mov
rcll
das
and
push
mov
popf
adc
das
out
fcompl
cmpb
cmc
mov
sub
cs
fmuls
cmp
lods
push
push
enter
neg
pop
stos
jbe
sbbl
ljmp
cmc
dec
aad
mov
mov
shrl
cmovl
cli
sahf
leave
cmp
in
movsb
pop
arpl
rolb
and
sbb
mov
iret
lea
scas
cltd
daa
ficoms
push
xchg
pop
mov
jp
outsb
mov
test
popa
ljmp
mov
mov
push
adc
jmp
xor
stos
pop
pop
pusha
mov
lods
shrl
cmp
aas
pop
mov
jge
fdivs
scas
lock
rcll
andl
jns
fadds
shrl
cmovl
cmp
lock
dec
pop
popl
push
xchg
aam
mov
insb
and
push
xchg
jne
jns
loopne
fs
mov
fstp
ss
cli
jge
lret
jne
mov
and
lods
jp
sbb
add
rcrl
inc
pop
xchg
pusha
pusha
xchg
bound
cmp
repz
sub
xchg
dec
leave
jne
dec
stos
jno
cmc
lret
cmc
sub
push
sub
ss
dec
add
aam
mov
outsb
pop
aas
push
dec
xor
cmp
out
gs
data16
mov
xchg
mov
nop
push
hlt
jno
cmp
pushf
push
out
mov
pop
test
xchg
add
test
push
dec
xchg
out
xchg
mov
sub
xchg
push
xchg
lock
jl
stos
pop
lea
lea
les
fstl
cmp
mov
and
cmp
mov
mov
rclb
outsl
out
jge
push
push
sub
pusha
jo
stc
sub
push
jne
popf
fldl
rcl
pop
into
jecxz
push
push
mov
hlt
arpl
xchg
sbb
les
loope
test
jne
addr16
xchg
mov
ss
popf
cmp
ror
fnstcw
fldenv
call
push
inc
cld
cmc
stos
cmp
adc
xor
jle
pop
push
clc
inc
add
in
dec
pop
mov
adc
mov
and
inc
jae
mov
and
xchg
cld
inc
inc
stos
cs
popf
jmp
mov
xchg
mov
and
jnp
daa
push
mov
repz
xchg
inc
fnstenv
shrb
pop
pop
mov
sub
xchg
mov
jbe
out
sbb
fiaddl
inc
lret
inc
lret
push
jmp
cld
mov
addr16
or
and
adc
fdivr
insb
mov
out
pop
punpckhdq
fwait
jne
pop
mov
dec
repz
loop
imul
push
mov
ss
pusha
xchg
ret
xchg
or
ds
rcrl
dec
in
sbb
mov
dec
adc
adc
loope
shlb
ret
in
incl
pop
sub
imul
insl
rcll
or
add
out
xor
jmp
insb
pop
add
push
cmpsb
add
dec
bound
adc
mov
pop
loop
pop
add
xchg
shrb
adc
sbb
sub
divb
dec
inc
fs
js
adc
sbb
pop
gs
cltd
data16
inc
or
mov
dec
xor
and
gs
outsb
sbb
xor
outsb
imul
mov
xor
sub
dec
and
add
xchg
cmp
push
pop
jno
mov
in
dec
lds
stos
insl
or
pop
sub
xchg
inc
cmpl
ja
jbe
xchg
arpl
jne
inc
ds
adc
xor
or
sahf
mov
insb
mov
push
mov
cmpsl
inc
hlt
push
inc
dec
jno
mov
jl
xchg
inc
xchg
loope
dec
push
inc
les
fbstp
cwtl
jnp
aad
data16
jmp
dec
std
fucomip
cmpsl
xchg
leave
sub
test
adc
lcall
cmp
and
mov
sbb
ja
je
pop
xchg
sbb
int3
mov
cwtl
sub
pushf
xchg
dec
mov
inc
xchg
xchg
insl
mov
dec
xchg
in
xorb
mov
fadds
int3
push
sbb
mov
imull
push
popf
dec
add
sub
shl
adc
stos
and
mov
jecxz
mov
lahf
xor
adc
fs
lock
fbld
pop
outsb
sub
sbb
xchg
add
aad
sbb
insb
pusha
mov
mov
push
jbe
pop
adc
repnz
mov
push
xor
jle
das
xor
xor
sub
pop
aad
sbb
lret
je
ret
ljmp
and
cld
xlat
jle
mov
cmpsb
sti
dec
lcall
inc
xor
pusha
or
lods
sahf
aas
ret
inc
test
sub
aam
jne
sbb
add
jbe
dec
cs
adc
inc
loope
negb
sub
jbe
popa
pop
test
pop
xor
mov
lret
test
pusha
xor
fistl
xchg
in
lock
popa
mov
push
lock
pop
out
aad
dec
pop
imul
pop
sbb
addr16
sub
jno
in
xchg
cmp
lret
icebp
out
cli
and
gs
cmpsb
jbe
imul
lods
push
pusha
xor
aad
test
jg
jne
div
mov
lahf
aam
test
pop
mov
bound
xor
mov
shll
inc
mov
data16
in
daa
out
mov
lock
jbe
stc
mov
sub
outsl
sub
out
xchg
xor
mov
sbb
xor
push
xchg
sbb
adc
test
test
add
inc
cld
inc
fadd
inc
inc
shll
mov
ficoml
stos
mov
cwtl
jmp
out
mov
daa
repnz
cmc
and
aam
add
pop
or
push
xchg
cmc
push
pop
sbb
jp
lret
mull
and
push
mov
fisubrl
jecxz
insb
or
repnz
xor
sub
or
pushf
ljmp
out
ja
jmp
push
cmpb
add
jo
bound
sub
fbstp
sbb
adc
mov
movsl
push
lret
addr16
es
iret
dec
mov
subl
aam
inc
sub
mov
insb
leave
int3
push
xchg
pop
xchg
out
mov
xchg
sbb
xor
adc
pop
rorl
ds
rorl
cmp
test
add
jae
push
aas
ret
push
loope
xor
mov
loopne
movsb
stos
dec
dec
enter
daa
and
iret
lock
cmpsl
popa
cli
popf
pop
in
nop
pushl
pop
loop
popf
add
pushf
mov
movsl
ljmp
jnp
sbb
sbbl
lds
push
out
push
cmp
xchg
scas
push
daa
pop
int
lds
pop
push
add
insl
pop
clc
sbb
mov
jecxz
and
repz
xor
in
nop
inc
add
dec
outsb
push
pop
sbb
lock
jo
and
add
dec
pop
mov
das
aaa
data16
adc
sub
mov
jns
mov
pusha
xchg
aad
out
bound
sbb
es
in
in
aas
push
mov
and
mov
push
push
mov
cmp
call
adc
adc
xor
imul
aaa
arpl
mov
in
sbb
xchg
xor
mov
sub
pusha
imulb
mov
jo
aaa
mov
rol
sub
jnp
jne
sub
jno
jne
or
adc
mov
or
dec
and
xchg
cmp
out
dec
in
dec
sub
add
insb
pusha
mov
sub
pop
adc
sbb
sbbb
loop
add
mov
sub
xchg
sbb
es
fdivl
clc
scas
test
mov
mov
mov
inc
sbb
fcomps
dec
xchg
idivl
xchg
int3
jo
dec
fsts
hlt
xor
cmp
mov
jle
jns
aad
add
dec
sti
dec
add
aaa
sbb
mov
dec
cli
pop
and
pop
jp
daa
loope
repz
loop
jno
mov
mov
aam
cmpsl
cmp
mov
add
cltd
out
jecxz
shrb
push
mov
push
adc
pop
mov
jno
fiadds
mov
ja
xchg
cmp
outsl
xchg
sbb
and
cmp
mov
aas
jmp
test
push
jbe
adc
es
pop
or
sbb
dec
mov
orb
sub
push
push
ret
add
jg
sub
mov
mov
shl
push
movsb
pusha
std
and
or
or
sub
inc
out
xchg
das
cmp
out
popf
push
and
in
and
xchg
mov
mov
int3
imul
xlat
dec
mov
in
cmpsl
xlat
jae
ljmp
push
leave
inc
js
xor
flds
dec
cld
inc
sbb
sbb
out
and
ret
lret
clc
clc
and
dec
insb
arpl
sbb
ja
aaa
sbb
test
cs
cmp
push
push
sub
inc
mov
fdivr
mov
mov
push
push
fidivrl
xor
ss
mov
and
outsl
xor
fwait
sbb
pop
outsb
out
cmp
xor
add
adc
mov
xor
push
jb
stos
sub
daa
jne
insl
fidivs
adc
push
das
data16
push
lcall
adc
jae
dec
addb
gs
rclb
mov
bound
fneni(8087
push
out
popf
int
cmp
aaa
aaa
shl
loopne
pop
and
fs
cwtl
dec
dec
fdivrp
adc
es
adc
aam
pop
mov
xchg
inc
lret
xchg
scas
pushf
aaa
push
sbbl
dec
pop
mov
mov
jno
pushf
lret
sbb
push
and
mov
adc
aaa
divl
daa
mov
dec
mov
cmp
push
mov
jl
test
loop
sub
and
mov
add
enter
cmp
mov
mov
xchg
cli
jge
mov
dec
xor
lea
int3
add
filds
mov
dec
nop
mov
mov
push
clc
jne
int3
ss
call
out
dec
test
cmp
mov
jl
test
xorb
mov
cwtl
mov
into
jbe
mov
imulb
xlat
in
out
xor
dec
xor
stos
mov
fsts
imul
push
je
in
or
sub
and
sahf
flds
add
mov
cli
mov
ficoms
inc
call
xchg
pop
bswap
shl
popf
jp
cld
xor
xchg
push
rclb
jg
cmp
jae
arpl
sbb
aas
adc
cmp
mov
fcomip
or
add
pushf
jge
cmp
adc
or
fwait
cmpsb
les
mov
or
or
les
xchg
adc
sub
negb
test
test
mov
mov
sbb
push
jno
cmpsb
cltd
jno
and
add
out
xor
aad
fsubrl
push
ffree
mov
pop
sub
jb
sub
loopne
sub
and
dec
adc
cli
add
and
xchg
dec
lea
xor
xchg
pop
jnp
pop
jno
arpl
mov
push
push
sub
out
out
pushl
push
push
sti
hlt
es
inc
push
inc
inc
and
stos
sub
jp
push
clc
inc
pop
nop
sub
add
xchg
pusha
into
sbb
jo
fadd
push
outsl
loop
mov
icebp
mov
movsl
mov
popl
xchg
push
cltd
ljmp
jns
ljmp
mov
pop
sbb
mov
sahf
jle
loop
inc
mov
movsb
fdivs
call
or
pushf
or
dec
imul
cs
repnz
fs
mov
sbb
ret
xor
lret
popa
jmp
sub
pushf
sub
pop
and
ror
ret
scas
push
pop
mov
jecxz
inc
push
cmp
mov
call
or
or
or
loop
mov
xchg
lret
pop
call
mov
cmp
xchg
pop
or
cmp
jae
or
jecxz
mov
mov
mov
incl
std
das
clc
arpl
sbb
mov
ret
fs
jp
xor
roll
in
rclb
jge
shlb
push
jb
js
jnp
stos
movsb
sarl
imul
mov
sbb
lcall
and
icebp
dec
cli
pop
and
in
sub
adc
push
jp
mov
sahf
cmc
int
mov
pop
jp
loop
cld
inc
fdivr
movsb
mov
testl
outsb
xchg
fwait
or
into
rorl
fdivr
and
gs
sbb
xchg
ljmp
hlt
pop
outsl
test
jmp
loop
mov
dec
mov
sub
fsubl
xor
adc
push
xchg
in
nop
inc
shl
stc
daa
pushl
inc
incl
arpl
jbe
mov
mov
xchg
test
push
lret
jg
add
subb
push
mov
add
cmc
sbb
lds
outsb
or
popa
imul
fcompl
inc
jb
adc
stos
sbb
mov
imul
xor
sub
mov
outsb
imul
cmp
sub
xchg
sub
push
cld
out
fwait
mov
into
xchg
mov
lret
sbb
push
shr
sbb
cmp
pop
shl
adc
mov
cltd
or
cmp
test
cmp
mov
mov
add
xor
and
sub
lock
xor
mov
jno
test
lcall
add
fsub
aas
jbe
mov
mov
pop
push
fcmovnbe
jbe
leave
stc
mov
pop
jno
test
shr
xchg
je
lea
and
ret
ds
sbb
ds
and
dec
fists
cmp
jnp
repz
cld
mov
das
stos
dec
daa
clc
rdmsr
popa
mov
push
ret
lcall
mov
sub
out
sbb
ror
scas
rol
push
sti
mov
add
adc
cmp
pop
jae
ret
insl
sahf
sub
fdiv
dec
and
rcrb
xchg
syscall
imul
jp
shlb
test
jae
dec
negb
inc
xor
ret
mov
mov
or
pop
add
int
jecxz
jne
das
je
jns
cs
adc
rcr
cs
sub
nop
lret
sar
shlb
or
mov
mov
push
push
mov
scas
push
test
rorl
lds
mov
push
sbb
int3
sub
and
addb
or
rorb
rol
push
aaa
xor
jo
fs
js
clc
sub
sub
mov
mov
jnp
push
xchg
xchg
out
adc
jg
imul
pop
push
das
add
cmp
push
hlt
test
lods
or
lods
add
jne
adc
xchg
mov
jecxz
jle
fwait
mov
mov
aaa
add
mov
popa
out
xlat
std
mov
mov
xchg
daa
jo
outsb
in
mov
out
jecxz
adc
push
and
out
subl
cmpsb
daa
sbbb
adc
in
xor
mov
leave
sti
inc
call
imul
aas
roll
shl
scas
enter
rolb
xor
sub
stos
pop
stos
adc
gs
inc
ret
adc
scas
scas
mov
pop
ds
sbb
pop
lahf
dec
xchg
ljmp
mov
mov
mov
push
fimull
sbb
xchg
lahf
nop
and
lods
sbb
pop
cmp
test
cmpb
cmpsl
adc
xor
add
fdiv
dec
jno
dec
decb
outsl
adc
out
inc
iret
adc
inc
cltd
jnp
push
adc
cwtl
outsl
cmpsl
mov
pop
mov
fcoms
mov
pushf
insb
cmp
push
jbe
jge
data16
mov
or
sbb
addl
out
mov
pop
shlb
mov
ret
inc
cli
xor
push
push
shrb
enter
movsb
jnp
call
sbb
pop
dec
push
mov
test
clc
pop
mov
std
mov
in
jg
xchg
aad
clc
mov
mov
adc
fldt
inc
out
pusha
aad
jg
data16
dec
mov
fimuls
ret
jl
lds
xor
and
or
in
repz
gs
or
call
jl
sbb
pop
adc
mov
int
cld
mov
fwait
imul
pop
adc
js
push
int3
mov
pop
popf
adc
test
lea
or
dec
or
in
mov
pusha
inc
add
sbb
aaa
xor
loop
mov
rol
push
lea
pusha
push
xchg
jne
int3
dec
dec
sahf
cmp
xchg
jno
mov
out
inc
or
popf
daa
cmp
cmp
dec
adc
les
or
xlat
nop
cmp
mov
jl
push
andb
dec
dec
icebp
pop
rcll
jns
jg
mov
stos
ljmp
sarl
mov
dec
dec
lock
cmp
mov
fwait
pusha
mov
pop
pop
fsubs
out
jle
sti
inc
cwtl
test
jle
xor
ret
push
jns
into
cmp
jecxz
mov
jmp
or
movzwl
out
inc
or
inc
xlat
xchg
or
mov
je
sahf
dec
mov
lock
sbb
inc
aaa
push
and
les
stos
leave
dec
mov
jle
push
sub
pushf
data16
mov
sub
xor
mov
jno
ret
xor
bound
sub
rcrl
sbb
fs
shlb
mull
movsl
jge
shrb
lods
inc
es
lods
mov
xchg
int
mov
xor
std
inc
movsl
add
ret
movsl
jb
in
mov
pop
inc
dec
and
push
test
jne
dec
je
movsl
mov
inc
lock
nop
idiv
xchg
push
sbbb
jmp
mov
jp
and
mov
push
pop
jno
test
popa
mov
fiadds
rcll
or
sub
fists
add
pop
inc
mov
xchg
arpl
jmp
mov
insb
jmp
push
arpl
cli
or
mov
mov
cld
loope
push
pop
add
inc
inc
outsb
mov
lahf
mov
sbb
and
sub
iret
scas
or
ja
push
enter
leave
dec
sbb
iret
imul
fs
lea
mov
cld
dec
int3
adc
adc
lods
gs
push
das
xor
or
mov
fstpt
cmp
arpl
int
jo
imul
pop
inc
pop
loop
clc
xchg
shll
stos
icebp
adc
mov
mov
shrl
pop
loop
cmpsb
mov
test
leave
sub
ljmp
icebp
push
push
mov
jl
mov
mov
mov
ljmp
not
lahf
push
clc
cmp
popa
mov
mov
or
pop
lods
int3
loop
mov
cwtl
in
cltd
jae
mov
pop
jmp
scas
cmp
xlat
ja
lds
fnsave
inc
fbld
frstor
push
xchg
cli
jge
mov
bswap
mov
fldt
std
jns
aas
sar
xor
out
movsb
test
jno
pusha
mov
das
fistps
and
and
mov
mov
ret
add
mov
xor
sahf
adc
pop
jae
and
lea
loop
out
shrl
xchg
push
lods
out
popf
adc
nop
xor
mov
xorb
and
and
iret
cmc
addr16
mov
lods
add
adc
dec
scas
imul
pop
push
push
sub
mov
jmp
scas
push
and
lret
stos
stos
jle
push
outsl
add
sbb
clc
xor
cmp
cmp
mov
cwtl
mov
into
gs
push
and
adc
lahf
xchg
sbb
mov
mov
in
sbb
push
ss
push
es
sub
push
ljmp
or
loope
pop
aam
cli
ret
call
mov
jl
push
cmp
bound
std
mov
push
sbbl
adcl
xor
cmp
mov
in
add
in
push
and
sti
leave
push
js
jns
dec
pop
sbb
inc
pop
xchg
jmp
mov
stos
div
movl
dec
pop
out
cmp
mov
dec
and
daa
icebp
sub
adc
cmc
call
pusha
mov
icebp
mov
push
sub
pop
daa
push
lock
adc
inc
enter
xor
pop
push
in
add
cmp
and
push
loope
xor
nop
xlat
outsb
pop
or
stos
inc
sbb
ljmp
xchg
js
xchg
popl
jp
in
xchg
jge
andb
bound
mov
mov
in
out
push
xor
movsl
loope
into
push
pop
mov
test
add
es
or
daa
rclb
lea
int
jg
or
cs
cmp
adc
dec
mov
cld
mov
hlt
movsl
loope
into
push
lcall
insb
out
int3
inc
sub
sti
or
and
xor
inc
fmulp
icebp
ret
mov
inc
pop
dec
call
mov
rol
ds
mov
push
jmp
mov
and
pop
pop
std
scas
push
or
faddp
sti
repz
or
inc
sub
jge
lcall
jns
dec
dec
leave
cmp
movb
pop
cmpsb
movsl
add
push
mov
jae
mov
jo
mov
call
jbe
movsb
cmp
xor
push
rolb
and
add
data16
popa
movsb
inc
pop
mov
dec
cmp
ja
mov
pop
xor
lds
repnz
add
loope
std
ljmp
not
lahf
push
leave
movd
add
sub
jmp
gs
call
and
ja
leave
ss
pop
add
sbb
mov
mov
sbb
mov
xchg
fnsave
inc
fbld
frstor
push
xchg
cli
jge
mov
mov
cmpsl
cmc
mov
sti
pop
stos
mov
leave
sbb
cld
mov
mov
es
cwtl
arpl
sbb
fldt
jg
adcl
jge
jb
inc
push
sbb
add
jno
adc
gs
sarb
dec
repz
iret
dec
pushf
lret
jg
adc
mov
or
outsl
mov
xchg
cld
in
idivb
xor
push
mov
clc
mov
sbb
fdivrl
ror
dec
xchg
jecxz
ret
loopne
xchg
insb
andl
dec
clc
mov
int3
sub
adc
std
mov
push
push
fmuls
xchg
sub
mov
lods
mov
sarl
mov
xchg
popa
push
ss
fcomps
icebp
xor
js
les
pop
hlt
dec
frstor
loop
mov
mov
movsb
pop
push
lea
pop
sbb
push
pop
mov
jge
ja
sti
lods
xlat
inc
stc
sub
repz
lss
mov
outsl
sbb
in
repz
cmp
lods
jne
cmpsl
into
or
sub
andb
iret
adc
adc
or
mov
dec
dec
inc
push
add
mov
pop
rorb
test
loop
daa
xchg
les
into
and
ds
shlb
mov
test
pop
call
inc
push
sbb
mov
push
fnstsw
rcrb
scas
mov
imul
xchg
scas
sti
cmpsb
stos
mov
xchg
testl
mov
ret
icebp
or
sbb
sahf
ficompl
pop
push
mov
sub
fistl
cmp
arpl
and
fisubrs
into
jnp
mov
jmp
dec
push
les
xor
add
fistpl
adc
fisttpl
mov
inc
xchg
fildll
dec
cmpb
sahf
cmc
fdivrl
mov
cmp
fisubrs
fisubrl
lods
or
dec
push
les
xor
xchg
pop
je
dec
fwait
mov
pop
clc
in
mov
loope
ds
or
mov
cmp
fisubrs
push
mov
ficomps
int3
iret
push
daa
push
out
ljmp
pop
pusha
xchg
push
or
mov
scas
jne
mov
jbe
lahf
inc
jp
ja
push
xor
in
or
cld
mov
test
jg
daa
sbb
cmp
sahf
outsb
cltd
bound
sbb
and
mov
dec
clc
in
mov
loope
test
adc
inc
or
xor
cmp
popf
sbb
bound
and
test
insl
leave
mov
mov
mov
dec
pop
sbb
dec
dec
sti
and
cmp
xchg
mov
dec
out
cmpsl
cmp
push
dec
aam
push
push
in
lcall
popa
lcall
pop
cmp
int
dec
xchg
sbb
inc
stos
fwait
xchg
sbb
mov
pushl
mov
inc
test
or
or
sbb
bound
bound
outsl
cmp
lahf
insl
leave
mov
loop
cmpsb
xchg
fnstcw
nop
fmull
sti
and
cmp
insl
or
cmc
andl
xor
xlat
int
push
dec
aam
push
push
xor
or
pop
pop
cmp
xchg
jg
xchg
sbb
inc
stos
fwait
xchg
sbb
ljmp
inc
mov
cmp
push
loop
pusha
daa
test
loope
leave
pop
mov
jg
loop
xlat
rclb
out
shll
cmp
hlt
scas
xchg
or
faddp
in
fstp
call
or
cli
cmpsb
popl
cltd
sbb
sarl
dec
sbb
ret
sub
xlat
sbb
xor
movsl
inc
mov
imul
fwait
cmpsb
mov
into
int3
dec
jo
fistl
movsl
push
mov
dec
lret
push
jno
pop
movsb
sarl
and
scas
enter
push
mov
and
mov
push
push
nop
jmp
sbb
scas
sti
in
mov
imul
lret
cld
xchg
xor
push
add
lock
movsb
inc
mov
xor
add
sbb
movsl
mov
adc
cli
js
and
lds
dec
adc
xchg
ljmp
inc
punpcklwd
xchg
pop
or
jae
mov
test
js
cmp
mov
ss
aas
dec
xor
cmp
xchg
and
push
jbe
gs
inc
ret
adc
stos
inc
push
ficomps
and
ret
pop
ljmp
clc
loop
mov
sahf
mov
into
lsl
movsb
pop
or
adc
nop
sti
add
gs
sbb
je
jl
out
inc
xor
jmp
pop
es
testb
sbb
mov
xchg
neg
xchg
inc
adc
push
icebp
in
cwtl
lds
inc
push
arpl
adc
mov
popf
addr16
pop
in
mov
imul
fwait
ds
sub
jmp
imul
loopne
mov
popf
sub
push
mov
xor
in
fldt
movsl
adc
enter
sub
iret
popf
rorb
lret
ret
insl
movsl
fsubr
jge
mov
dec
adc
push
scas
mov
sbb
sbb
jns
int
xor
mov
icebp
mov
testb
mov
add
mov
add
fiaddl
jnp
sti
andb
test
or
notb
and
pop
mov
jns
test
push
jecxz
inc
or
add
and
jns
in
and
cmc
dec
sbbb
jle
jnp
adc
scas
jb
clc
push
notb
cmp
and
std
cmp
sahf
repnz
adc
dec
adc
jnp
scas
dec
mov
push
push
leave
jae
imul
cmpsb
imul
ss
xchg
dec
cs
jae
inc
push
push
dec
sbb
xor
loopne
or
lods
sbbl
inc
js
push
scas
mov
cli
aas
sbb
lods
int
aas
mov
pusha
mov
add
in
jnp
cltd
mov
ror
sbbl
or
sub
int
mov
jg
mov
pop
or
or
xor
add
push
pop
in
cmp
out
jnp
adc
scas
jb
clc
dec
outsb
xchg
fs
mov
pop
ja
psadbw
loop
pop
push
xor
stos
out
inc
push
push
jnp
scas
dec
mov
fistl
aad
xchg
sbb
add
mov
sub
xchg
dec
cs
jae
mov
or
pop
sbbl
xchg
fadd
aaa
sub
jecxz
insl
xor
fsts
or
lock
jecxz
hlt
push
or
inc
fs
sub
mov
cmpsl
adc
in
pop
and
pushf
arpl
out
dec
cmp
inc
mov
pop
jmp
lcall
and
sbb
pop
sub
adc
icebp
mov
aaa
sbb
jb
mov
lds
cmp
adc
push
mov
or
xor
popa
adc
ret
xchg
frstors
push
fimull
ljmp
daa
jne
insl
aas
lgs
stc
sti
popa
out
or
rclb
data16
pop
lahf
cmc
clc
jo
xchg
out
push
pop
jl
jg
fwait
add
dec
or
pop
mov
push
stc
pop
mov
sbb
pop
outsb
into
xchg
pop
dec
push
jp
mov
test
push
sbbb
jmp
xchg
sub
mov
or
faddp
sti
repz
or
inc
shll
mov
movsb
jne
daa
jne
inc
mov
cltd
in
push
ljmp
pop
jmp
lods
in
aad
cwtl
add
adc
xor
mov
stc
sbb
mov
pop
dec
adc
xor
and
mov
mov
ja
cmpsl
lcall
ret
lods
mov
in
pop
das
sti
xor
and
stos
pop
adc
mov
mov
out
pop
push
push
dec
std
imul
cs
fwait
mov
pop
scas
mov
or
sbbl
hlt
orl
cmp
xchg
insb
nop
ret
and
pop
rcrb
push
imul
sbb
mov
mov
pushf
jecxz
xchg
test
repz
adc
mov
in
cmp
xchg
mov
wrmsr
das
adc
loope
and
mov
sub
andb
je
sahf
addr16
iret
cmc
push
lret
or
mov
mov
popf
xor
push
lods
leave
adc
sbb
jb
jge
aad
daa
movl
std
and
xlat
mov
insl
shl
push
mov
lods
or
mov
fcoms
rdpmc
mov
mov
cli
lds
imul
fldl
aaa
sbb
jb
mov
lds
cmp
adc
push
mov
or
andl
add
push
mov
mov
jo
test
inc
pushf
mov
nop
int3
in
fidivrs
xchg
movsb
and
rorb
pop
inc
in
mov
jl
dec
inc
mov
mov
fsubrs
sbbl
jne
stos
xchg
sub
pop
mov
gs
je
stos
imul
adc
and
in
nop
xor
push
std
sbb
mov
movsb
lret
cmp
imul
and
cmp
pop
popf
jle
loopne
adc
sbb
insb
inc
xlat
xchg
pop
mov
xchg
pusha
sbb
sbb
push
imul
inc
insl
and
outsb
aaa
adc
mov
ret
inc
imul
shrl
mov
or
lods
xlat
das
push
in
mov
sbb
nop
repnz
push
cmp
ja
mov
adc
ret
aaa
outsb
in
iret
lea
in
jl
or
mov
xor
ret
jbe
std
cli
ds
mov
push
jae
in
xchg
jmp
dec
ret
adc
outsb
jno
cli
push
lahf
test
ljmp
jo
xor
ljmp
adc
cmp
push
dec
mov
das
int3
xchg
add
incb
repz
push
pop
mov
lds
jg
adcl
pop
movsl
es
mov
jl
pop
push
setbe
mov
add
scas
jl
inc
adc
xor
shlb
cmp
mov
xchg
fiaddl
jns
test
std
mov
fldl
aaa
sbb
jb
mov
lds
cmp
adc
push
mov
or
xchg
cmp
bound
and
test
out
mov
xor
mov
in
rorb
adc
repnz
test
cmp
xor
xchg
mov
mov
xchg
jns
call
pop
and
jecxz,pn
leave
pop
dec
add
cmpsb
and
pop
mov
dec
jo
icebp
movsb
lea
fucomp
push
repnz
call
jmp
jmp
lret
test
mov
push
sub
dec
push
insl
leave
sbb
push
iret
cmp
pop
inc
gs
and
lret
mov
sahf
movb
xor
jecxz
push
enter
addr16
into
aaa
hlt
or
dec
xchg
jno
pop
stos
rolb
gs
push
jo
mov
bound
and
out
and
sub
push
mov
imul
std
jb
popf
cmp
pop
cmp
xchg
shlb
push
dec
cmp
push
xchg
xchg
mov
cmp
sub
insb
jecxz
xor
xor
fwait
rcll
adcb
bound
cmp
push
push
cmpsl
loop
mov
cmp
mov
ret
das
dec
rol
stc
mov
adc
mov
cmc
lea
dec
sub
cltd
idiv
int3
push
pop
sub
divl
jl
cltd
popa
js
in
ss
adc
mov
and
jne
adc
out
in
mov
cmp
pop
xlat
addr16
and
sbb
or
cmp
or
not
cmc
stos
aam
shl
movsb
sub
mov
push
scas
push
xchg
dec
shlb
push
jo
or
cwtl
imul
pop
aaa
imul
pop
cmpsl
or
push
jp
lcall
cmp
mov
repz
add
push
xchg
aas
stos
inc
arpl
xor
call
into
shrb
cmpl
movsl
mov
xor
sahf
jle
jg
outsl
lret
dec
inc
mov
lret
sbb
aas
and
jns
xchg
mul
dec
lea
jnp
in
jae
xor
dec
fcmovnbe
cmp
ja
insl
gs
mov
sbbl
mov
add
rcll
ds
mov
lea
add
insl
shrb
data16
cmp
mov
pusha
xor
or
mov
mov
aas
cmp
outsb
jb
imul
out
addr16
xor
stc
sbb
popf
cmp
add
or
lds
sahf
call
inc
out
nop
out
stos
jbe
xor
mov
push
jg
or
fisubrl
mov
out
nop
jns
inc
int
push
pop
inc
or
iret
ret
jle
in
inc
aam
cld
sbb
sahf
add
inc
mov
pop
lret
fsubs
notb
mov
and
jle
inc
ja
xor
push
push
lds
sti
fcmovne
dec
test
pop
mov
lods
fildl
lcall
fnstsw
jo
inc
push
rorb
adc
hlt
mov
in
mov
ficoms
push
jmp
xchg
adc
lcall
in
and
leave
fdivrl
mov
cmp
andb
mov
inc
sub
jg
xchg
cli
jge
mov
sub
sbb
jmp
loope
sarl
and
loope
fisttpl
loop
xchg
xorb
shlb
xchg
add
js
pop
add
fnstcw
sbb
fisubl
or
and
xor
inc
fmulp
icebp
ret
mov
ds
hlt
lods
and
cld
jge
xor
cmp
xchg
and
push
jbe
gs
inc
ret
adc
stos
inc
push
bound
push
cmp
sub
dec
lcall
or
jmp
mov
xlat
and
inc
xor
pushf
lods
dec
insb
negb
and
bnd
mov
in
mov
jo
add
adc
push
pop
jge
out
in
inc
xlat
cmp
cltd
iret
jnp
rcrb
mov
dec
cli
cwtl
pop
push
inc
jecxz
adc
mov
jg
jmp
pop
sub
jg
shlb
jb
test
inc
mov
mov
pop
or
add
rcll
ds
mov
lea
outsb
loopne
mov
sbb
sub
sub
mov
jecxz
push
jo
add
jmp
mov
mov
jo
fnsetpm(287
icebp
adc
iret
aam
xchg
pop
outsb
lcall
adc
xchg
adc
dec
mov
movsb
pop
clc
add
daa
lea
rcll
xchg
jae
stc
mov
adc
ja
dec
loope
bnd
insl
loopne
gs
xchg
pushf
cs
xlat
test
jle
jbe
leave
push
adc
insb
jmp
test
outsl
pop
dec
or
sbb
movsl
jo
into
ds
xor
jo
sbb
add
fdivrs
imul
mov
out
repnz
pop
dec
mov
sub
jo
lret
push
jbe
leave
imul
mov
and
faddp
sti
repz
or
inc
sahf
mov
ljmp
mov
jge
ret
mov
cwtl
mov
jg
imul
es
jns
imul
dec
xchg
arpl
fisubs
jne
jl
test
into
int
ret
and
mov
xchg
jl
cs
xor
sub
das
in
sbb
inc
mov
aam
sbb
or
test
mov
movsb
out
les
pushf
repnz
mov
lods
pop
inc
loopne
repnz
test
add
or
dec
scas
in
xchg
sbb
mov
mov
jle
icebp
testl
mov
imul
arpl
gs
push
lret
pusha
pop
mov
dec
popf
cmpsb
jnp
pop
cmp
jle
scas
sub
bound
mov
cld
int
clc
dec
adc
or
pop
or
sti
jp
int
mov
dec
fwait
and
adc
call
cmp
mov
rolb
adc
in
xchg
xchg
push
fdivs
and
push
mov
add
out
xor
push
sub
jns
jge
je
sti
mov
jmp
mov
fcmove
pop
cltd
out
sbb
scas
pop
add
test
adc
sbb
stos
jnp
pusha
cltd
inc
mov
outsl
pop
adc
inc
sub
and
popa
adc
mov
sbb
jmp
inc
add
data16
inc
shll
je
pop
inc
fwait
dec
mov
push
mov
push
inc
mov
and
pusha
scas
ds
cmp
stc
add
fcomps
cmp
jae
ret
data16
push
push
aas
mov
mov
lret
aas
movsl
add
inc
adc
mov
sbb
fists
mov
push
cli
dec
push
jbe
stos
sub
ficoml
jo
popa
jae
add
fcmovb
sbb
xor
xlat
stos
mov
mov
dec
test
test
mov
jg
xor
xor
and
xlat
inc
add
xchg
jl
push
inc
xchg
xchg
mov
push
mov
call
call
in
mov
mov
stos
pop
movsl
mov
jle
pop
out
rcrb
cld
push
ds
out
add
pop
sbb
ss
sbb
mov
xchg
pushf
add
or
rcl
push
shll
fwait
xchg
cmp
je
xlat
imul
adc
mov
aaa
and
lahf
lds
in
pushf
shll
imul
jg
out
xchg
out
fistpll
xor
shr
xor
enter
pop
push
out
cmp
and
push
push
and
sub
mov
lret
cmp
negl
test
jl
mov
inc
xor
and
sar
adc
lock
xor
pusha
inc
and
or
sbb
sbb
mov
xchg
lahf
xchg
jecxz
push
movsl
mov
pop
ds
popa
lds
cmpsl
jne
mov
cld
je
aad
cmpsb
jnp
or
je
je
int
jge
lcall
push
push
mov
sub
cmp
inc
xlat
push
mov
xchg
mov
mov
outsb
movsl
int3
mov
cmp
mov
push
gs
pop
mov
xchg
sahf
out
clc
ret
xlat
lret
pop
push
jo
rol
cwtl
cmp
xor
shlb
lahf
fildl
nop
xor
std
or
lret
jl
xchg
xchg
push
xor
add
jb
xchg
mov
xchg
imul
or
sti
cmpsb
jne
cmp
fimuls
mov
pop
adc
popa
or
pushf
iret
or
es
sbb
lret
stos
in
test
xchg
xchg
es
fdivs
add
stos
fstps
pusha
mov
into
lret
push
rol
lds
out
adc
scas
gs
push
add
orl
mov
cmpb
xchg
lret
push
mov
push
adc
or
jg
sbb
push
dec
call
jmp
inc
inc
mov
fisubl
and
leave
mov
xchg
xor
clc
jbe
cmc
add
ds
sub
aad
adc
aad
jo
out
and
loop
sbb
ss
je
and
std
sub
out
movsl
mov
xchg
pop
dec
mov
push
fldcw
js
je
ret
and
fwait
cmc
pop
test
add
jmp
cmp
jge
inc
mov
xorl
in
pop
cli
jns
std
cmp
pusha
imul
pop
fldl
mov
push
dec
dec
fnstsw
cmp
jge
xchg
adc
inc
add
add
cli
push
js
inc
sbbl
cmp
inc
inc
sub
and
xchg
add
call
lds
or
in
mov
push
sub
mov
lods
nop
hlt
inc
sub
jo
cmp
sbb
data16
mov
shll
cmpsb
aaa
insl
aas
inc
mov
xor
inc
faddl
out
das
mov
out
cmp
scas
fsubrl
js
inc
adc
add
out
lcall
pusha
jno
jae
pop
mov
or
lock
cmp
mov
adc
sbb
bound
scas
inc
push
jecxz
xor
or
lods
jmp
mov
call
xchg
pop
in
or
adc
mov
xor
push
mov
addr16
adcb
cmpsl
fs
les
push
cmp
out
aam
jge
in
int3
imul
lods
xor
inc
out
pop
ret
push
or
or
sub
xchg
dec
pop
enter
jbe
mov
jo
sbb
aam
add
cmp
jle
dec
xchg
xchg
inc
fildl
cmp
sbb
fwait
jbe
orl
je
and
in
jge
lret
jmp
in
pop
mov
sbb
xor
mov
std
dec
jb
icebp
mov
icebp
pop
cmp
mov
jle
ret
mov
mov
push
inc
or
dec
test
rolb
jae
lds
mov
pop
je
das
cmpsl
dec
dec
cmp
lea
insl
sti
xor
nop
stos
cmp
mov
and
adc
in
jbe
mov
xchg
inc
fwait
xor
mov
lds
adc
or
aad
fadd
rcrb
push
aad
insb
jb
cmp
and
or
repnz
jmp
outsb
mov
or
cmp
rcrb
in
push
cmpsl
inc
shrl
rcll
mov
sbb
faddl
ficoms
cld
xor
pop
mov
nop
scas
mov
jmp
xor
sbb
push
pop
jle
mov
and
jae
in
mov
sbb
daa
fcmovne
sahf
mov
xchg
std
inc
xchg
repz
jmp
xor
mov
sbb
inc
dec
stos
repz
movsl
js
push
inc
sub
push
mov
gs
adc
push
push
ret
into
call
adcl
cli
jae
hlt
pop
xchg
or
xchg
xchg
call
clc
lret
mov
push
jb
push
daa
mov
cmp
adc
add
xchg
mul
shl
mov
clc
decb
cld
sbb
fdivl
pop
sahf
pop
mov
loop
cs
icebp
incl
popa
popa
pmaddwd
movsl
in
sbb
sub
fcmove
mov
push
sub
push
stos
fcomps
repz
ljmp
into
scas
lahf
test
shl
out
cmp
sub
xchg
enter
add
lods
inc
adc
mov
push
xchg
mov
repz
or
jge
les
lds
lods
xlat
mov
push
cmp
mov
in
cmpxchg
sub
inc
sbb
mov
sub
int3
dec
imul
je
xor
adc
inc
pushf
sub
add
in
mov
xor
and
xlat
xchg
mov
pop
jno
dec
scas
jnp
cmpsb
xchg
sub
xchg
mov
mov
xor
js
les
mov
js
cs
mov
push
je
dec
cmp
sub
adc
data16
loopne
enter
jb
lcall
scas
xchg
ret
push
push
and
lods
fdiv
add
cs
in
sar
lgs
cmp
pop
mov
adc
and
sbb
cmp
or
sub
int3
testw
pop
xor
sub
fwait
xor
cmpsl
pop
ret
repz
outsb
jecxz
jecxz
lcall
sbb
jmp
mov
repnz
mov
mov
cld
push
adc
sub
cmp
inc
jns
lcall
adc
lahf
clc
cmp
xlat
popa
adc
cwtl
arpl
xor
filds
stc
mov
cs
mov
lcall
addb
in
out
fidivl
orl
lret
jl
test
push
dec
outsb
inc
adc
xchg
adc
xchg
shrb
shlb
mov
rclb
xor
movsl
adc
testb
shlb
leave
push
cmc
loope
insb
lods
inc
jae
roll
leave
xor
push
rolb
aas
ret
dec
aam
xchg
fwait
push
ficoms
fdivrp
pop
xor
mov
xchg
fwait
push
xchg
sar
aam
mov
pusha
lea
cmp
cltd
pop
cmpl
xlat
adc
mov
push
pop
cmp
test
js
xchg
out
inc
sub
fcmovnbe
loope
sbb
in
in
repz
mov
movsb
sbb
adc
sub
jns
xor
mov
pop
insl
fdivrl
pop
ljmp
xchg
imul
popf
in
repnz
mov
js
insb
and
lahf
mov
push
repz
and
fadds
jno
mov
jno
ficomps
fisubs
sub
in
sti
and
lret
pop
stos
loopne
pop
in
xlat
rolb
push
sti
sbb
inc
ror
es
add
sub
aam
outsl
jae
pop
shll
cmp
xor
and
fistpl
mov
enter
adc
dec
int
xchg
sbb
daa
shl
mov
xchg
lret
jae
dec
mov
fwait
lock
stos
loop
lock
test
mov
repz
jne
test
sbbl
xchg
shll
mov
stc
aad
inc
inc
out
mov
outsb
mov
mov
xor
inc
scas
in
add
xchg
or
les
shrl
xlat
cmp
ja
hlt
mov
sbb
inc
pop
arpl
je
pop
ss
dec
flds
jp
sbb
aam
add
mov
cltd
xchg
dec
add
push
rorl
pop
and
mov
psubsb
movsl
mov
es
cli
rcll
enter
mov
sbb
inc
jmp
cmp
add
insl
push
pop
jmp
lock
sarl
scas
int3
push
js
lea
mov
cs
inc
or
ficoms
inc
and
push
rcrl
mov
lock
mov
sbb
pop
add
aas
fdivl
mov
cli
inc
in
repnz
xor
cs
repz
fildll
call
add
push
adc
push
stos
je
into
lock
femms
pop
cmp
cwtl
inc
inc
ror
cmpb
insb
mov
jnp
insb
inc
add
jge
ds
enter
out
mov
and
in
mov
fnstenv
xlat
andb
lcall
sbbl
xchg
xor
test
ror
xlat
stos
push
xor
mov
push
inc
aaa
adc
xchg
leave
xor
cwtl
mov
imul
ficomps
mov
lods
xchg
or
pushf
fsubl
stc
xchg
movsl
lock
iret
in
adc
mov
out
das
loop
jecxz
mov
lods
mov
or
daa
mov
sahf
out
add
aaa
repz
inc
mov
pop
rcl
fs
xchg
mov
push
lds
ljmp
inc
stc
fcoml
pop
ja
pop
xor
and
loop
lret
add
mov
test
in
repz
aaa
fstpl
or
out
or
mov
idiv
cltd
xchg
cltd
adc
insb
jbe
hlt
mov
mov
xor
adc
cmp
int
mov
lods
lret
add
notb
jns
or
push
data16
xor
adc
push
jge
ret
and
mov
lcall
out
pop
movsb
adc
dec
dec
pop
inc
jp
inc
inc
fisubs
add
inc
xor
mov
mov
add
or
ret
in
ud1
fldt
push
subb
jmp
cmpsl
sub
int3
jge
outsl
ljmp
jg
scas
or
mov
jge
mov
lock
inc
movsl
xchg
mov
xchg
call
ret
movsl
xchg
jnp
cmp
imul
and
push
pop
sbb
adc
repnz
cmp
in
insb
sar
push
adc
add
lcall
inc
mov
fs
popf
mov
sbb
ror
sub
jno
es
int3
sub
sub
adc
outsl
mov
inc
call
mov
out
sub
ficomps
lods
es
push
out
mov
test
in
xor
aas
jg
rcr
lret
repz
arpl
popa
and
mov
repnz
cmp
fisubs
bound
das
sbb
dec
shlb
shlb
testl
sti
lcall
mov
int3
jle
sub
cmp
popa
or
dec
inc
repnz
lcallw
inc
sbb
mov
dec
aaa
jp
stc
adc
push
push
cmp
sub
lret
inc
insl
push
cmp
and
mov
pop
outsl
xorb
in
jno
and
and
jmp
jecxz
xchg
sub
mov
scas
dec
pop
jg
or
mov
xor
dec
xor
and
xor
call
push
mov
pop
int
or
pop
jg
dec
inc
mov
fneni(8087
add
adc
fsubrs
xchg
cs
stc
xchg
shl
push
inc
lods
addr16
push
lock
push
mov
jmp
cld
fimuls
out
cmp
test
xchg
repnz
pcmpeqd
jne
jecxz
pop
adc
jp
xchg
movsb
or
mov
subb
scas
mov
cmp
cwtl
push
inc
inc
adc
xchg
mov
scas
sarl
and
fs
outsl
or
inc
sbb
mov
sbb
js
push
and
call
mov
rorl
bnd
outsb
loope
sahf
and
jmp
fxch
dec
enter
hlt
test
lret
mov
testb
sbb
cmpsb
outsb
clc
fwait
mov
fiadds
cmp
sub
cmp
mov
out
push
in
push
scas
insb
sahf
pop
or
push
out
sahf
jo
dec
add
inc
jnp
or
push
cmp
xchg
fsts
inc
adc
jae
jl,pn
popl
outsl
push
push
cmpsb
bound
add
repz
and
iret
call
jecxz
sub
insb
rolb
lret
gs
add
xchg
out
std
and
out
rorl
push
rclb
ljmp
push
push
pop
lret
dec
insb
sub
and
lock
xor
jp
xchg
mov
lahf
pusha
filds
pop
popa
add
or
or
xchg
rcrl
adc
movsb
xchg
in
and
lods
pop
lret
in
xlat
std
cmp
jge
mov
pop
pop
push
jecxz
rcrl
fcoms
lods
movsb
scas
push
call
dec
push
arpl
aam
mov
push
pop
jmp
add
inc
cs
addb
rcr
cmp
ud1
dec
enter
xchg
push
mov
cmc
pop
mov
push
jle
idivl
sbb
lahf
sti
cmp
cld
pop
dec
xchg
xor
stc
sbb
int
inc
and
sbb
sti
mov
dec
imulb
mov
pop
pop
pushf
cmp
sti
pusha
lcall
gs
mov
adc
inc
lea
fldcw
and
jmp
test
add
xor
push
dec
adc
or
in
push
push
jecxz
addr16
les
mov
sub
imul
ljmp
and
xlat
mov
push
xchg
inc
out
clc
fsubrs
cmp
sbbb
cmc
mov
pop
lahf
jmp
rol
repnz
mov
xor
dec
jno
cld
sahf
leave
and
or
mov
icebp
sub
pop
je
iret
push
loopne
push
cmp
lock
jo
orb
sub
mov
pop
pop
std
dec
imul
mov
mov
lea
lcall
xor
jle
lea
das
mov
jnp
repnz
in
popf
jnp
pop
add
inc
pop
mov
push
lcall
push
and
shlb
and
mov
push
jbe
out
and
jl
std
rorl
pop
xor
mov
xchg
cld
ljmp
inc
or
out
mov
scas
add
jb
daa
je
fldenv
mov
add
sbb
and
sbb
fst
push
dec
nop
aaa
fstpt
movsl
divb
insb
jno
sub
test
movsl
sub
and
das
adc
popa
dec
repz
mov
mov
cld
pop
adc
lcall
jo
sbb
add
xor
push
push
fcmovnbe
add
mov
iret
pop
mov
es
fisttpl
inc
cmc
mov
jb
push
xchg
xchg
les
ss
and
add
xchg
popa
pop
sub
stos
push
inc
fildll
addr16
inc
cmpsb
outsb
sbb
push
xor
inc
cwtl
jp
idivl
dec
rcrb
lods
dec
aad
or
xchg
lea
out
push
mov
fstpl
adcl
xlat
inc
dec
jmp
shlb
fwait
pop
stos
xchg
ja
in
fdivrl
popa
pop
lret
dec
loope
mov
push
out
fistl
les
push
in
push
cmpsb
enter
scas
mov
and
or
movnti
mulb
cli
mov
popf
inc
rcl
cmpsb
pop
mov
inc
lds
lret
inc
and
push
adc
mov
movsb
lods
cmp
adc
push
pop
or
loope
lods
dec
ret
jae
ds
out
stos
and
mov
mov
out
pop
sub
jno
mov
jge
pop
call
mov
in
pop
dec
mov
jb
gs
icebp
mov
jnp
inc
mov
frstor
jb
pusha
sti
mov
mov
out
or
xchg
mov
push
in
rolb
jmp
aas
cltd
push
testl
xchg
xchg
aas
inc
call
mov
pmuludq
pop
lea
and
rorl
pop
pop
insb
xchg
mov
and
dec
xchg
and
sub
in
ret
mov
or
mov
xchg
push
fistpl
mov
cmp
sub
mov
jmp
mov
outsb
sub
mov
mov
inc
lcall
xchg
pop
mov
cmp
lret
lahf
fldt
js
mov
push
cmp
movsb
dec
scas
pop
adc
xchg
jo
or
leave
xor
push
pop
pop
int
sbb
mov
hlt
mov
roll
xchg
dec
adc
mov
les
adcl
mov
lcall
pmovmskb
insb
lods
jne
std
or
dec
jecxz
std
lret
adc
dec
pop
lock
xor
cmpsl
xor
iret
aam
dec
or
ljmp
cs
sbb
mov
daa
dec
repnz
xchg
ficoms
shll
xor
pusha
sub
test
sbb
les
lret
stc
in
test
cmp
ret
shrb
ljmp
addb
adc
loopne
mov
jno
stc
lret
push
cmp
pushf
imul
dec
dec
sbb
ja
aam
scas
cwtl
sbb
mov
xor
and
in
push
mov
sub
inc
and
add
jns
push
jne
jg
fdivrl
dec
mov
or
push
pop
lcall
pop
mov
cmp
pop
sbb
popa
jg
dec
cs
sbb
add
sbb
xchg
dec
mov
jmp
push
subl
mov
cmp
ss
inc
sbb
sub
sbb
and
cmp
xchg
push
xor
lret
mov
jg
jle
jp
ret
insl
lcall
les
inc
lret
push
adc
adc
shlb
fildl
xchg
push
cltd
insb
mov
sub
xchg
jg
cmp
nop
cmp
jp
mov
gs
outsb
dec
js
pop
stos
sub
insb
and
das
fidivs
xchg
jno
xorl
nop
mov
xchg
fcomi
pop
lcall
int3
push
rorl
inc
gs
jnp
out
adc
dec
fidivrs
in
in
in
movsl
lcall
rcrb
nop
pusha
xchg
mov
sub
sub
push
arpl
pop
mov
in
pop
stos
cmp
std
divl
sub
pop
mov
xchg
cld
mov
std
mov
or
repnz
jo
stos
sti
dec
sub
shr
cmc
push
addl
push
pop
xchg
test
push
push
insl
aaa
and
daa
leave
xor
lret
sbb
xor
inc
sbb
out
jno
dec
adc
and
mov
mov
aaa
out
jbe
pop
push
jge
mov
lcall
fnstcw
loopne
sbb
mov
dec
pop
test
iret
es
dec
inc
leave
clc
push
inc
xor
sbbb
adc
mov
sub
pop
cmp
loope
jbe
shr
dec
sub
gs
aad
pop
add
imul
add
bound
rcll
jnp
jp
mov
lods
out
lods
popa
mov
je
and
sahf
inc
ret
call
pop
test
pop
inc
imul
cmc
ret
jo
jge
movb
lds
mov
jo
jno
fcmovb
loopne
loop
shl
push
jbe
je
stos
add
jl
lret
dec
cltd
cmp
adc
jb
or
and
jb
inc
stos
mov
cmp
adc
mov
iret
pop
bound
inc
pop
jae
fsubl
push
jnp
scas
sub
mov
inc
push
rcr
jp
jae
imul
lea
sahf
push
ret
js
adc
es
pop
bound
inc
xchg
jecxz
xorb
sbb
lret
xor
imul
mov
mov
xchg
or
fdivs
cmp
xchg
and
js
mov
ret
inc
xor
add
jb
push
dec
xor
inc
int
xchg
adc
pop
cmp
inc
pop
push
and
jg
lret
mov
cmp
out
pop
cmc
aas
cmp
xchg
mov
mov
pop
and
mov
in
loopne
mov
loopne
or
idivl
push
sahf
jmp
inc
mov
dec
push
mov
xchg
fucomi
cli
out
mov
mov
pop
pop
jp
xor
rcll
arpl
or
ret
push
inc
dec
push
insl
sub
dec
jns
shr
inc
mov
pop
cs
dec
xchg
push
imul
into
push
dec
pop
addb
cmp
movsb
ficomps
mov
andb
outsl
call
xlat
adc
stos
out
push
arpl
mov
push
mov
fidivs
nop
push
mov
mov
data16
daa
ds
xchg
loope
add
xchg
jmp
xchg
fsubs
dec
jmp
fwait
pop
mov
mov
add
mov
inc
jg
mov
stc
aaa
sbb
adc
mov
insl
repnz
ljmp
pop
lock
pop
fwait
insl
jg
push
movsb
jne
mov
add
mov
ljmp
sub
push
cmp
mov
andl
aas
xor
dec
push
dec
xchg
pop
in
lcall
into
movb
xor
pop
shrl
xchg
idivb
lods
mov
ret
loop
pushf
jne
pop
mov
or
in
push
ja
add
icebp
das
and
dec
iret
lods
scas
mov
mov
mov
lcall
pusha
movsl
mov
mov
int
imul
cltd
push
pop
sub
adc
pop
mov
cmpsb
jo
add
push
incb
lock
aas
and
lcall
inc
xor
push
pop
adc
cltd
push
loopne
pushf
mov
mov
add
movsb
sarb
inc
mov
mul
fs
add
lret
adc
leave
sub
pop
mov
mov
push
out
int
into
xor
and
lret
daa
inc
adc
notb
lea
mov
ljmp
inc
arpl
mov
les
or
adc
std
sub
adc
repnz
imul
sahf
pop
inc
push
les
push
adc
rolb
mov
adc
inc
push
pop
jns,pt
cs
jmp
leave
hlt
in
mov
mov
pop
popa
mov
enter
mov
mov
jo
cmp
clc
ds
cwtl
ficompl
pop
inc
sbb
and
mov
shll
add
cli
fsubrs
xchg
mov
pop
pop
rcrl
jmp
or
lret
aas
and
add
out
push
jb
loopne
loope
fisttps
push
cmpsl
outsb
test
or
repz
arpl
xchg
into
mov
mov
divl
imul
mov
sbb
cmc
inc
jmp
adc
or
xor
push
and
dec
mov
xor
sub
int3
cmpsb
inc
and
ret
imul
or
vrcpps
inc
dec
inc
adcb
jp
call
sbb
jo
push
jbe
cmp
push
pusha
mov
out
sbb
and
ljmp
mov
test
test
shll
js
ja
mov
xchg
lret
inc
cs
addl
out
int
pop
fs
clc
gs
push
add
out
and
push
and
js
or
mov
add
or
add
loop
adc
and
jbe
aas
xchg
xchg
shll
addb
mov
jbe
sbb
lds
mov
mov
sub
negb
ss
and
pop
aam
sbb
pop
loope
mov
push
mov
xchg
insl
add
mov
sarb
stc
xchg
jle
sub
mov
push
cmc
mov
data16
pop
stos
jno
pop
lcall
fsubrl
cwtl
into
mov
push
sbb
mov
sub
xchg
test
lods
orl
adc
jg
jno
mov
inc
jecxz
out
dec
fs
hlt
lods
adc
jnp
mov
xchg
and
mov
in
cmpb
movhps
inc
mov
cltd
mov
insl
dec
mov
cmpsl
negb
xor
push
xchg
mov
jb
leave
sbb
rclb
test
jne
pop
insb
xchg
push
hlt
push
jg
les
push
push
out
sbbb
hlt
jmp
jns
call
cmpps
das
cmpsl
fs
pop
dec
aam
and
stos
fsubrs
adc
or
and
stc
js
inc
lahf
xchg
jge
fimull
scas
inc
lds
cmp
xor
inc
jbe
jg
sarb
faddp
loop
add
leave
inc
shrl
mov
pop
nop
lock
insb
inc
push
mov
lret
popf
mov
mov
stos
pop
popf
fs
fs
xor
adc
loop
inc
cmovge
adc
hlt
mov
push
jae
add
fidivrs
lods
pop
push
cmpl
jecxz
jns
ss
push
lcall
out
or
sub
cli
lea
je
outsb
or
mov
stc
aam
pop
or
out
jae
adc
insb
dec
loop
fbstp
mov
xorb
and
jmp
ss
fstps
mov
and
pop
sti
rol
dec
daa
push
xorb
lock
lret
shll
sahf
mov
aad
js
or
lods
cmp
sub
adc
lret
int3
jbe
mov
mov
sbb
aaa
adc
cld
mov
loopne
push
shll
add
out
out
arpl
push
jle
push
arpl
popa
sbbb
scas
sahf
sbb
out
sbb
aaa
mov
sub
mov
scas
pop
sbb
and
pop
mov
xchg
xchg
mov
loop
mov
lds
adcl
mov
scas
pop
cmpsb
adc
cmp
ljmp
xlat
decl
divl
packssdw
scas
mov
pop
inc
sub
stos
cwtl
mov
inc
pusha
push
jmp
jbe
mov
xchg
pop
fucomp
das
mov
cmp
adc
mov
pop
pusha
inc
sbb
xor
dec
movsb
cltd
mov
and
pop
sti
pop
add
lock
fisubl
repz
cmp
fiaddl
jl
loop
mov
add
mov
pushf
sbb
push
xor
aam
inc
mov
mov
fwait
loopne
rcrl
daa
and
ret
adc
loope
jns
cmp
js
push
dec
cmp
jne
dec
icebp
adc
push
add
cmp
or
pop
out
cmc
jb
sub
sbb
mov
cmp
push
aas
dec
mov
add
loop
xlat
rorl
scas
out
xchg
out
jl
mov
ds
xchg
dec
inc
shll
cmp
out
lret
cmp
adc
sub
std
push
jnp
int3
shlb
xchg
es
cmp
loopne
sub
or
inc
fisttpll
mov
xor
xlat
outsb
popf
pop
loope
cmp
mov
mov
inc
push
aam
or
sahf
push
repnz
das
push
lcall
jge
cmp
fiadds
mov
cmp
jae
ss
sub
cmc
jo
aam
cmp
pushf
lahf
int3
pop
xor
ficoml
pushl
mov
cmp
je
xchg
scas
imul
push
or
pop
repnz
lods
pop
inc
push
xchg
das
mov
dec
call
xchg
xor
sub
fsubr
or
aas
jl
or
mov
push
int
imul
push
popf
sbb
mov
dec
cmp
iret
mov
mov
mov
jb
das
into
pop
andb
iret
out
lds
enter
mull
insl
lret
arpl
fs
mov
inc
in
ret
mov
jp
lock
pop
insl
out
fistps
jg
inc
mov
jae
out
faddl
sahf
test
push
lcall
dec
adc
aas
fiadds
out
bound
in
idivl
ljmp
cmp
clc
loopne
nop
testb
sbb
and
xor
js
aaa
scas
shll
or
push
sbb
mov
stos
arpl
fnstsw
adc
xor
lret
int
hlt
jno
hlt
xchg
jno
sbb
sarb
flds
mov
les
or
pop
cmpsb
into
or
mov
testl
lahf
adc
mov
stos
testl
cltd
leave
cs
push
jb
out
sub
pop
add
push
lods
adc
xchg
adc
mov
cld
pop
into
pop
adcl
and
adc
sub
pop
push
repz
mov
mov
cmp
add
iret
fbstp
xchg
pop
scas
mov
fidivrl
mov
divb
push
mov
bnd
lods
imul
xchg
hlt
sub
pop
out
xchg
mov
int
iret
in
insl
insb
cwtl
pop
js
not
adc
test
scas
mov
cmpsb
or
sarb
push
cmp
ret
cmp
mov
mov
mov
rcll
lret
ja
mov
xchg
sub
mov
cmp
arpl
gs
cltd
adc
mov
cltd
fs
pop
inc
mov
movb
mov
cltd
adc
mov
shll
adc
not
xchg
fstpt
push
push
mov
or
stos
cld
loopne
pop
fimuls
insb
jb
call
adc
test
mov
mov
or
xlat
adc
mov
jno
nop
mov
andl
wrmsr
xchg
jne
and
mov
and
stos
sbb
mov
mov
icebp
fsub
xor
mov
cmp
mov
sub
mov
xor
pop
stc
pop
mov
lock
ja
xor
popf
nop
xchg
xchg
enter
popf
push
cmp
es
lds
f2xm1
iret
je
adc
pop
jne
lock
daa
mov
clc
call
cld
xchg
lahf
xchg
pop
je,pt
sbb
jmp
push
loope
sahf
jl
data16
pop
ja
std
ja
xor
lahf
fcmovnb
shlb
enter
stc
xchg
mov
fnsave
sbb
mov
sarl
push
push
xorb
adc
dec
fnsave
mov
clc
pop
jle
mov
adc
sub
mov
pop
pop
push
pop
roll
aam
jecxz
adc
subl
cld
lds
pushf
out
rorb
lods
dec
je
xchg
dec
mov
ss
sbb
add
inc
add
jle
jns
repnz
push
popa
push
inc
jae,pt
or
mov
aas
ss
bound
push
out
pop
int
pop
or
movsl
jmp
or
shr
mov
fldl
loope
ds
inc
mov
cmpb
mov
ss
push
stos
sub
jbe
stc
adcb
mov
mov
cli
jbe
cmp
ret
in
pop
mov
outsb
frstor
xchg
dec
sahf
mov
incl
into
gs
pusha
jle
xchg
pushl
std
xor
mov
ljmp
pop
xor
push
rorl
out
aaa
xor
dec
sub
cwtl
mov
or
push
in
daa
popa
es
adc
hlt
or
stc
in
mov
sub
mov
int3
shll
sub
decl
scas
pop
push
sbb
es
or
add
ljmp
inc
push
out
daa
adc
mov
popa
add
psllw
aad
movsl
push
rcl
adc
hlt
sub
test
dec
stos
inc
xchg
push
xor
js
push
mov
fcmove
pop
shll
repnz
push
lret
add
add
aam
pusha
xchg
xchg
pop
fmul
stos
lahf
outsl
mov
sbb
push
rcl
push
sti
loop
dec
andl
pusha
and
cwtl
pop
dec
ljmp
in
stos
pop
or
push
xor
imul
inc
scas
sahf
gs
pop
xorl
mov
pop
dec
or
sahf
xchg
jbe
mov
add
idiv
mov
aam
sub
repnz
aam
sbb
roll
xchg
lods
lret
push
ds
sub
pop
xlat
sbb
lea
lds
js
mov
and
int3
jae
test
mov
data16
sbb
inc
cmp
addr16
add
push
pusha
dec
jge
push
sbb
push
mov
jecxz
ffree
xchg
insl
imul
dec
push
xchg
ficompl
dec
dec
inc
sub
nop
in
or
xchg
setae
int
pop
rorl
push
fisubs
cwtl
mov
cltd
imul
add
inc
or
loope
cs
xor
lretw
jg
jp
inc
cmpsb
push
inc
cwtl
in
pop
popl
and
jle
movsb
insl
jge
push
int
lods
mov
push
imul
pop
mov
lret
add
mov
fisubrs
testb
pop
andl
sahf
and
add
nop
jo
test
fdivrp
sbb
and
shll
or
mov
pusha
ret
xchg
js
sarl
cmp
fdivrs
xchg
mov
dec
xchg
add
inc
lcall
sub
cs
xchg
push
lahf
dec
cmp
popa
pusha
jne
pushf
xchg
mov
adc
cwtl
inc
mov
inc
push
cmp
and
in
pop
jge
jns
xchg
xorl
dec
jo
enter
addl
mov
add
add
sbb
mov
mov
lcall
ja
movsb
jg
out
add
hlt
mov
call
pusha
test
jb
mov
sbb
cmc
mov
sti
mov
jle
pop
jae
jbe
aas
or
xchg
icebp
rcll
add
xchg
lret
xor
xchg
cwtl
sbb
loope
fdivrl
dec
xor
add
pop
cmp
dec
mov
add
ret
cmp
adc
dec
cmpsb
push
dec
hlt
jp
rclb
cli
xor
popf
loope
andb
sahf
test
nop
jae
mov
jns
xor
mov
call
mov
cmpsl
mov
inc
xchg
in
mov
sti
mov
call
movsb
mov
mov
aas
jnp
xchg
subl
aad
pop
cs
pop
add
ss
icebp
pop
lods
std
jmp
cmp
lds
ds
sbb
add
and
mov
outsl
push
xlat
mov
jge
leave
enter
sbb
imul
push
mov
test
adc
fldt
or
push
sti
sbb
dec
or
mov
fwait
cli
nop
jge
push
or
cs
bound
mov
orl
int3
push
pop
lock
int3
sbb
pop
in
or
out
adc
and
sahf
and
jo
imul
stc
mov
xor
dec
jl
aas
lcall
mov
add
fsubrl
imul
add
mov
dec
jecxz
mov
xchg
or
adc
in
xchg
adc
and
bound
mov
repz
cs
jmp
xchg
cmp
and
repz
mov
xchg
cmp
es
sub
xchg
mov
mov
sub
loopne
pop
aad
and
mov
fsts
dec
test
les
jl
push
cmp
aas
mov
dec
bound
clc
pop
fs
mov
repz
xor
aam
lods
pop
pop
loope
test
loope
sbb
std
mov
mov
push
dec
sub
lret
idivl
fildl
push
stos
or
or
shrb
and
cmp
push
dec
cmpsl
or
sbbl
aas
mov
je
dec
les
xchg
sbb
in
sar
sub
adc
cmp
or
sti
in
addr16
dec
or
jp
cwtl
jne
outsl
sub
fwait
lret
cmp
sbb
hlt
mov
jb
repnz
xchg
out
xchg
stos
inc
dec
cmp
aad
loop
hlt
add
sub
pop
mov
jecxz
dec
fistpl
and
inc
xchg
jae
jb
lods
cmp
mov
or
ds
sarl
ljmp
lds
outsb
jb
dec
pop
push
sahf
in
cmp
in
rcrb
test
jge
add
mov
add
mov
inc
call
adc
or
push
pop
pop
push
pop
shll
pop
cmc
dec
xchg
lret
add
mov
in
xor
fstps
loopne
enter
fists
mov
mov
leave
mov
inc
cs
je
cmp
xor
dec
scas
mov
jp
cwtl
jl
xchg
jne
out
test
dec
sub
push
jbe
sti
sbb
dec
mov
jns
daa
jmp
and
sub
sub
push
adc
loopne
icebp
adc
inc
ds
vandnps
inc
sub
xchg
sub
inc
out
and
ret
jl
std
cmp
sbb
data16
xor
mov
nop
in
rolb
and
mov
mov
aad
shlb
subl
xor
dec
mov
lds
xchg
dec
ss
xchg
divl
std
jo
scas
pop
or
sub
mov
mov
sbb
pop
or
stos
ss
sahf
xchg
mov
iret
int
outsw
mov
cmp
mov
call
mov
xor
fldcw
pop
jecxz
jae
mov
push
adc
sbbb
mov
jl
add
xor
jmp
pop
iret
sbb
cmp
inc
xor
adc
std
pop
sarb
cmc
pushf
xchg
stos
insb
aas
and
xchg
xlat
movsl
cltd
mov
mov
lcall
sbb
jp
test
jl
out
xchg
int
sahf
jae
and
test
gs
xchg
cwtl
xor
mov
inc
mov
and
and
test
push
xchg
ret
pop
mov
mov
sbb
add
cmp
fcmove
sbb
lods
out
pusha
inc
push
jmp
imulb
adc
arpl
int3
jmp
movsb
imulb
cmp
inc
popa
add
out
inc
call
sub
pusha
and
add
mov
cmp
outsl
sti
jge
or
push
xor
int
cmpsl
mov
mov
rcll
movl
push
aas
adc
lods
mov
lds
dec
or
arpl
mov
jae
roll
push
insb
pop
sub
sbb
mov
in
pop
insl
pop
pop
mov
xchg
mov
out
sub
pop
nop
and
dec
jns
inc
iret
movsl
inc
add
adc
pop
push
cld
cs
mov
sub
add
ffree
pushf
jns
mov
jb
xor
cmpsb
ret
push
inc
inc
rorb
loope
jg
shrl
pop
or
test
cmp
jmp
push
dec
mov
popf
sub
mov
ds
sahf
pop
mov
imul
add
mov
and
rol
and
add
push
inc
aas
js
lods
pop
dec
sarb
lahf
xchg
dec
or
int3
test
aad
pop
arpl
fucomi
mov
fstl
test
push
data16
push
subb
nop
xlat
push
mov
test
js
addb
jge
pop
fucomp
jmp
pop
and
loop
out
mov
xchg
jg
in
jne
lret
ds
stos
enter
or
dec
push
mov
jbe
sbb
inc
inc
mov
mov
shrb
int3
xchg
adc
iret
lock
add
sub
pop
lret
mov
lea
pusha
mov
mov
insl
lcall
loope
adc
enter
mov
ret
xor
out
les
mov
pop
jmp
xlat
dec
cwtl
lods
icebp
xchg
add
not
add
dec
cli
sub
add
sbb
movsl
push
incb
push
mov
je
lods
dec
stos
dec
push
iret
test
lcall
cmp
xchg
push
mov
shrl
loop
cmc
mov
je
daa
add
je
xorl
lret
movsl
imull
call
loope
xor
mov
shlb
dec
jp
outsl
pop
pop
lcall
cmp
lret
push
iret
sbb
in
or
adc
imul
test
lret
in
adc
add
scas
into
sub
cmp
xor
dec
lods
hlt
push
jne
or
out
mov
adc
mov
sub
xorl
dec
jae
or
xor
pop
enter
mov
mov
insl
push
ss
dec
dec
bound
dec
cmp
jne
ljmp
cmpsl
mov
int
sbb
sub
sbb
fwait
push
jp
enter
sbb
insb
shrb
push
mov
repz
and
mov
hlt
sbb
sbb
add
pushf
sub
ret
mov
or
imul
inc
cmpsl
notb
ljmp
loop
push
mov
cmpsl
pusha
sub
adc
adc
fs
xchg
addr16
dec
sahf
cld
xor
setg
bsr
sbb
shlb
lods
stos
adc
xchg
dec
xor
sub
or
fiadds
mov
and
dec
jl
or
mov
ficoms
xchg
jne
sti
in
loope
and
mov
in
add
mov
push
test
int
push
je
pop
in
mulb
dec
rcrb
int
iret
xor
jmp
popf
shlb
mov
movsb
inc
ret
rcrl
cmovns
pushl
cltd
repz
mov
in
cmp
popf
fdivs
inc
pop
push
fcomi
add
mov
pushl
ss
sbb
jb
add
int3
fwait
in
xchg
ja
dec
pop
inc
insb
std
jb
mov
push
pop
sbb
push
lods
lods
xor
clc
gs
lods
pop
sub
push
fwait
std
pusha
push
fcomps
mov
loopne
fsubrl
xor
aam
push
ja
mov
bound
push
mov
inc
pushl
sub
int3
mov
inc
lock
gs
mov
fidivrs
lahf
dec
fsubr
push
or
popa
dec
popa
jg
and
cmp
xchg
inc
sub
repnz
ja
sub
pop
mov
cmp
and
and
popa
mov
xor
xchg
int3
push
or
sbbb
cmp
das
push
loopne
in
and
inc
shr
cmpsl
fisttps
das
sbb
aas
popl
add
or
mov
cmp
ficoml
inc
sbbl
leave
lods
insb
fists
addr16
aaa
pop
mov
add
mov
sar
icebp
rcl
insb
fists
addr16
mov
loopne
movsb
cmp
bound
int
sub
mov
pop
adc
xchg
push
pop
mov
jo
cmp
out
add
test
adc
xor
inc
mov
sbb
test
mov
mov
in
push
daa
mov
imul
add
sub
or
inc
out
lds
jns
call
pop
adc
ficoml
sbb
cwtl
push
inc
mov
fdivr
imul
pop
sub
lea
scas
loope
push
mov
or
mov
adc
jle
pop
cmc
mov
dec
lcall
xchg
outsl
loopne
lock
sbb
out
push
pop
mov
inc
cmp
lods
mov
mov
adc
dec
cs
and
inc
cltd
mov
push
mov
pop
jbe
lds
jo
cmp
push
push
insb
fdivl
cld
test
cmp
jmp
imul
pop
pop
pop
sub
dec
sahf
cmp
add
in
scas
popl
insl
inc
dec
sub
arpl
push
xchg
pusha
orb
outsb
in
out
pop
fadds
jg
shrl
dec
or
popa
ficompl
mov
push
scas
and
popa
fcmovne
jge
out
adc
mov
sbb
jg
push
pop
jns
and
mov
mov
sub
test
xchg
or
xor
and
push
loop
sbb
aam
rorb
test
and
cmp
xchg
in
xor
and
ret
mov
sahf
dec
sbb
dec
inc
testb
mov
jns
out
xchg
cli
sub
lahf
ret
push
out
adc
and
cltd
int
pusha
in
movsb
adc
inc
sarb
inc
add
rcrl
nop
jns
cld
sbb
repnz
decl
dec
push
imul
popa
sub
xchg
decl
lret
dec
sbb
in
test
push
inc
loopne
add
xlat
gs
cmp
mov
sub
or
sub
jne
lea
jge
lock
mov
outsb
frstor
xchg
pop
loope
add
adc
dec
cmp
jb
loopne
scas
adc
and
ror
loope
inc
mov
sbb
sbb
das
or
lret
inc
insl
push
cmc
stos
push
pop
shll
int3
mov
popa
gs
adc
fldt
jo
sub
xchg
mov
cwtl
xchg
je
dec
sub
sti
shlb
insb
aam
xchg
ds
sbbb
fisttps
pop
in
sbb
push
lods
adc
mov
shl
insb
jo
inc
jns
ret
or
test
ljmp
or
sub
icebp
and
pop
push
aam
xor
cmc
andl
mov
mov
dec
movsb
xor
mov
mov
imul
jne
rclb
in
pusha
lods
mov
mov
test
mov
or
pop
aad
xchg
lea
pop
loop
inc
cli
sub
pop
aas
test
cmp
nop
mov
ss
and
popa
fisubl
in
sbbb
and
sbb
lcall
mov
fcoml
cmpsl
and
xor
std
shll
inc
mull
push
inc
call
jbe
or
js
jno
leave
xchg
dec
add
stc
sbb
imull
add
pop
test
rcrl
cmp
xor
cmp
aad
js
fadds
icebp
xchg
mov
push
push
test
out
test
stos
pusha
jge
gs
ret
pop
or
add
mull
dec
xchg
mov
lds
mov
sbb
bound
das
scas
xor
fcoml
mov
out
cwtl
pop
mov
adc
iret
sarb
loope
sbb
daa
pusha
push
cld
and
fbld
call
jg
rolb
dec
sahf
aaa
stos
mov
fwait
sti
xchg
mov
push
lea
js
dec
mov
cs
in
jno
mov
push
loope
inc
push
mov
int
cmp
push
outsl
xchg
sbbl
sbb
ficoml
pop
pop
in
sub
test
sarb
loope
push
lods
add
std
mov
cmp
aad
sub
push
dec
daa
dec
inc
stos
or
ja
xor
pop
or
fadds
cmp
hlt
jns
cmp
push
xor
loopne,pt
push
and
fbld
xchg
sbb
mov
inc
aad
scas
mov
add
clc
stos
adc
jno
lahf
inc
mov
mov
adc
int
sbb
fs
test
inc
or
repz
sbb
sti
outsb
clc
and
push
js
icebp
adc
adcb
fnstenv
mov
push
pusha
test
test
mov
jmp
xchg
ds
jp
cmp
hlt
mov
cmp
test
add
or
jp
cmp
mov
jge
dec
dec
out
stos
popf
lret
lcall
xchg
loopne
call
mov
adc
push
addr16
pop
sub
jb
loopne
jg
xchg
movsl
mov
in
xchg
fisubl
cmpsl
arpl
jne
cwtl
rclb
lahf
mov
test
push
and
scas
jecxz
ds
iret
test
imul
in
je
mov
push
pop
push
push
sbb
test
das
mov
daa
shll
outsl
xor
in
dec
fcmovnb
stos
ja
imul
dec
adc
fisubl
xor
inc
loop
xchg
clc
stc
movsl
mov
fisubrs
xchg
test
jns
lret
dec
test
push
mov
sub
and
aad
je
jl
push
iret
dec
enter
and
xchg
mov
push
and
clc
or
pop
mov
push
and
mov
out
cmp
jb
call
pop
jecxz
pop
jmp
fucomip
sti
data16
mov
test
xchg
lods
aad
leave
cmovne
pop
loope
cmpsl
dec
jl
add
js
and
cmpl
inc
je
or
xchg
mov
in
jbe
aam
mov
adc
and
mov
stos
in
fsub
sub
or
icebp
jl
sbb
push
cmp
cmp
jg
inc
popf
adc
push
adc
mov
enter
orl
pushl
xor
ret
mov
jo
out
ss
cmp
dec
sti
repz
dec
inc
cld
insl
adc
jge
push
xchg
fdiv
iret
mov
testl
std
dec
test
or
mov
ds
xchg
push
das
xchg
addr16
xor
push
jecxz
xorb
aas
shll
push
mov
adc
sub
cltd
loopne
int
iret
adc
stos
xchg
mov
repnz
fcmovu
xor
test
mov
xchg
or
cltd
adc
fldt
mov
sbb
jmp
jb
jge
or
loop
and
add
popa
bound
dec
xchg
sub
push
clc
inc
imul
pop
jle
dec
jns
cmc
cmp
mull
shl
out
stc
add
mov
aad
outsb
shlb
xor
in
xor
inc
pop
sbb
fildl
mov
gs
cmp
pop
lock
aam
shll
rcrl
inc
aaa
pop
jp
mov
jg
repz
xor
pop
pop
es
sub
xchg
mov
stc
es
decl
xchg
out
jmp
mov
push
cwtl
jb
mov
inc
cli
mov
popa
in
push
pop
je
pushf
cmpsl
cmp
xlat
aas
stos
add
dec
or
jno
adc
push
ret
pop
and
jae
xchg
pop
adc
pop
sbb
xchg
test
cli
push
mov
fsubrs
daa
fmull
jg
pop
mov
and
cmp
and
movsb
in
cmpb
hlt
push
in
xor
mov
push
push
arpl
jb
pop
jl
fisttps
pop
adc
push
jg
push
in
or
mov
jno
lds
insb
push
popa
adc
je
scas
scas
dec
and
jle
cmp
jns
in
mov
in
stos
jne
pushf
sub
stos
mov
test
add
cmp
fcmovu
mov
add
lock
cmp
push
rclb
lock
pop
lea
fwait
mov
jle
sub
repnz
inc
jecxz
daa
sbb
sbb
xchg
xor
jg
lret
adc
lcall
decl
inc
jecxz
daa
sbb
sbb
xchg
xor
jg
ljmp
jno
imul
xchg
in
mov
iret
addl
xor
pushf
orl
pop
test
xor
xor
or
and
mov
push
movb
aad
xchg
aam
lret
mov
dec
insl
xchg
pop
inc
or
lods
sub
lds
jns
mov
fmuls
dec
fimull
push
jg
sub
in
ja
sub
cltd
jnp
inc
orb
in
in
pop
push
imul
aam
cmp
push
add
sbb
fnsave
inc
ljmp
dec
jbe
aaa
and
jge
hlt
mov
jns
ret
mov
and
test
push
mov
lods
and
push
arpl
hlt
cmpsb
ds
push
add
sbb
or
push
out
inc
ljmp
xchg
pusha
push
stos
sub
icebp
out
and
inc
or
or
addl
adc
rclb
cmpsb
add
cmp
mov
insl
sub
or
xor
mov
push
jnp
inc
mov
testb
test
mov
in
fwait
nop
repnz
adc
data16
mov
aam
mov
orb
pushf
jecxz
jb
xchg
jb
lret
in
in
sbb
and
jmp
nop
and
in
push
das
pop
sub
icebp
mov
sbb
mov
pop
lcall
pop
jmp
xchg
xchg
iret
adcb
aaa
lea
mov
nop
push
aaa
push
ret
out
xlat
cld
int
cmp
add
xchg
mov
mov
mov
fwait
dec
sub
data16
mov
sub
mov
pop
sar
xorl
ret
rcr
fdivrl
sbb
aam
mov
push
cmp
gs
ja
or
mov
out
sbb
inc
or
cmpsl
loope
stc
cmp
test
and
pop
imul
ljmp
es
mov
pop
or
cltd
fwait
dec
mov
jbe
scas
or
mov
jmp
jp
ja
mov
ja
push
dec
mov
mov
cmp
lcall
or
bound
movsb
subl
pushf
roll
inc
sbb
mov
sub
cmp
arpl
bound
outsl
pop
mov
mov
inc
mov
loope
test
dec
pop
cmpsl
cld
lds
je
scas
stos
cmp
rclb
jmp
fucomp
outsl
and
mov
pop
mov
pop
inc
jae
into
in
mov
cmp
scas
cmp
mov
pop
fwait
ss
sarl
test
lret
push
dec
push
sbb
les
in
sahf
add
filds
sub
sbb
or
xor
sbb
push
shr
mov
lds
mov
sub
cltd
mov
add
leave
aaa
cli
xor
add
sub
daa
fsts
mov
mov
xchg
ret
xchg
shlb
scas
push
and
jbe
xchg
dec
clc
call
into
or
test
adc
js
xor
cmp
out
lret
mov
push
test
xor
fwait
ret
mov
fyl2x
cwtl
mov
popf
cli
add
xor
mov
sbb
push
inc
pusha
in
in
add
ja
rol
loope
fiaddl
out
push
xchg
and
test
pop
lret
jle
dec
movsl
pop
shll
xchg
repz
mov
nop
jl
xchg
jl
jmp
pop
out
add
dec
leave
lds
mov
cs
sbb
mov
and
pop
mov
mov
jge
pop
sub
sarb
lret
imul
xor
pusha
xor
cmp
xor
aaa
iret
mov
imul
jmp
aad
lods
rolb
aam
jmp
pop
inc
jnp
adc
bound
jp
popa
pop
insl
mov
not
mov
loop
cmpsb
cmp
repnz
and
sbb
xchg
xlat
cmp
hlt
pop
nop
mov
clc
mov
or
push
mov
into
xchg
mov
and
mov
orl
pop
jg
lock
sti
test
mov
inc
cmp
xchg
push
mov
cli
xor
mov
mov
lock
xchg
push
add
cmpl
jle
mov
jp
repnz
lods
xorb
lods
mov
push
lods
pop
xchg
outsb
jbe
mov
or
or
arpl
sub
dec
shll
jge
inc
imul
jae
mov
sbb
jg
loope
mov
in
popa
mov
cmpsb
mov
fidivrs
pop
add
mov
lea
mov
adc
mov
pop
mov
cwtl
into
rolb
fcoms
cmc
dec
sbb
xchg
inc
nop
cmc
jo
or
das
outsl
inc
xchg
lret
jp
sub
fs
popf
pop
xchg
repz
int
andl
sbb
icebp
mull
aam
add
stc
fs
dec
int
scas
lds
xchg
or
cs
push
xor
inc
inc
sub
mov
inc
jne
push
aas
test
pop
testl
adc
imul
fldenv
inc
rcll
mov
xchg
ret
test
cmp
rclb
jmp
fucomp
outsl
and
arpl
or
adc
in
lret
clc
and
dec
jl
push
fwait
dec
mov
jle
js
mov
outsl
sub
movb
mov
fiadds
lea
pop
jbe
xor
enter
ss
xchg
push
jmp
subb
nop
subb
mov
fcoms
vpackssdw
add
jno
push
test
in
sysenter
insl
mov
jg
xchg
movsl
fcompl
jmp
xor
add
pop
bound
pop
push
dec
out
xor
pop
dec
stos
pop
xor
dec
fistpl
adc
pop
mov
mov
xchg
mov
push
jg
loop
aaa
xlat
pop
ficoms
int3
cwtl
loop
mov
hlt
push
mov
jp
add
push
loopne
cmp
jb
scas
bound
fimuls
mov
mov
jb
lahf
and
add
sbb
jge
fldt
mov
xchg
mov
ss
hlt
cli
lahf
push
sti
dec
icebp
pop
sbb
xor
or
jo
push
sar
dec
and
push
mull
sbb
dec
inc
sbb
xchg
push
mov
and
icebp
sbb
push
inc
pusha
in
in
add
ja
rol
loope
fiaddl
out
push
xchg
and
test
pop
lret
jle
dec
movsl
pop
shll
xchg
repz
mov
nop
jl
xchg
jl
jmp
sub
mov
mov
add
mov
jle
fdivrs
cmp
pop
push
pop
or
push
shlb
ret
push
enter
lcall
fadds
subb
pushf
mulb
add
in
inc
and
cmpsl
stos
pop
cltd
sti
js
leave
les
jl
jge
aas
adc
jne
cli
adc
xor
call
sub
negb
adc
pusha
mov
jae
aaa
arpl
test
xor
and
dec
test
mov
sub
mov
push
popa
fisttps
loop
aaa
or
popf
jno
mov
cmp
pop
into
adc
pop
imul
outsb
rol
mov
fists
hlt
cltd
pusha
ficompl
mov
mov
jns
push
pop
push
lock
in
pop
jmp
sbb
andb
cmc
mov
mov
lret
fsubs
sub
sbb
mov
mov
dec
inc
or
sub
mov
dec
mov
lods
sbb
test
mov
inc
inc
pop
aam
mov
push
div
clc
enter
dec
loop
les
insl
pop
in
gs
xor
cmpsl
jmp
ss
clc
je
in
stos
cmp
mov
xor
popa
inc
mov
pushw
sti
xor
adc
xor
inc
mov
cmp
pusha
testb
xor
insb
add
filds
cmp
push
test
rolb
loop
xchg
jle
cmp
inc
inc
jp
insl
loope
scas
ljmp
adc
mov
ret
std
cli
aam
xchg
inc
cmp
aad
data16
jmp
loopne
push
xchg
scas
pusha
adc
out
cli
and
jns
addl
push
jae
stos
popf
jecxz
out
xlat
cld
int
cmp
lret
loop
stos
xor
fnstenv
div
mov
js
repnz
nop
ret
mov
mov
add
loope
pop
out
pop
pop
inc
fwait
lret
add
int3
jae
nop
dec
fdivrs
es
cmc
xor
cmpsl
inc
fcomps
and
clc
xor
lock
pop
fldt
mov
xchg
ret
test
mov
in
lods
out
mov
or
gs
ror
push
dec
ja
movsb
filds
sub
pop
pop
or
ret
inc
adc
xchg
xor
sbb
jecxz
lcall
jno
insb
jl
outsl
call
lods
addl
and
cwtl
cmp
dec
pusha
jmp
cmp
aam
dec
xor
mov
rclb
arpl
xchg
dec
setg
cmp
xor
pop
mov
inc
enter
add
mov
int
xchg
or
jb
adc
iret
mov
arpl
adc
sar
xor
xrelease
xor
aad
xchg
mov
nop
and
push
sbb
adc
jno
iretw
dec
ss
dec
dec
stos
dec
in
push
push
cmp
movb
cmp
xchg
jl
add
jns
cs
int3
adc
stos
je
add
xchg
push
xchg
dec
stos
sbb
xchg
in
imul
inc
add
cmpl
inc
daa
outsb
in
xlat
cmp
inc
xor
lret
cmpsb
lds
jb
push
xorb
int3
adc
stos
or
call
shrb
cmpsb
dec
inc
pop
lock
mov
pop
inc
inc
push
cmp
push
add
pop
push
inc
popl
mov
inc
loope
mov
popa
call
xor
adc
mov
test
les
insb
enter
inc
inc
jge
mov
aas
insl
xor
fcmove
data16
or
push
or
sbb
and
xchg
lods
mov
mov
dec
xchg
pusha
fst
xchg
push
xor
inc
fistps
out
fs
jge
aad
cmpsl
int
xor
js
push
sbb
fsub
pop
cmp
add
test
inc
mov
fsub
fldl
push
cmpsl
ret
push
stos
push
fsubrp
lock
pop
dec
fisttpll
inc
lods
inc
sbb
rcr
orb
fistpll
or
or
je
jmp
leave
adc
lods
inc
jno
repnz
mov
sbb
push
hlt
mov
js
xchg
les
cmp
dec
decl
lds
int3
push
out
mov
inc
mov
pop
mov
sti
lock
mov
push
sbb
je
es
and
ret
mov
add
pop
push
cmpsl
in
loopne
pop
jne
cmpsl
dec
add
popa
popf
test
cmp
cltd
push
push
jp
sub
sbb
mov
xlat
push
and
inc
jb
cmp
push
cmp
out
cmc
inc
cs
add
mov
ja
jg
add
icebp
pop
ds
test
jb
xchg
in
fwait
sub
imul
loop
insb
aaa
add
mov
and
jecxz
test
dec
adc
pop
push
dec
mov
add
dec
in
adc
sbb
push
pop
pop
cmpsl
sub
jle
adc
sub
outsl
or
xorl
or
add
fmuls
fnstcw
rcrl
xchg
pop
sub
mov
mov
jp
push
out
xor
out
sahf
cld
jmp
into
outsb
popaw
cmp
insl
orl
lods
dec
rcr
incb
out
scas
movsb
sub
jbe
inc
sarb
iret
mov
hlt
lock
iret
xchg
addr16
inc
fnsave
mov
in
test
xlat
mov
or
inc
das
pop
pop
iret
pop
xchg
jle
and
pop
and
and
jecxz
aaa
aas
adc
int
jns
sbbl
xchg
mov
sub
in
and
mov
push
push
sti
and
xchg
int
stos
les
push
pop
loopne
fs
test
pop
mov
sbb
popf
add
push
test
mov
mov
sub
cmpb
adc
clc
jnp
dec
mov
enter
jne
xchg
and
scas
xor
cmpsb
jns
cmp
in
aaa
jne
push
pusha
push
or
adc
fs
mov
jmp
cmpsb
or
dec
es
jmp
adc
aas
rclb
and
lods
stos
rorl
sub
jecxz
sub
fimuls
jb
test
lcall
mov
jp
cmp
push
sub
loope
mov
or
pop
movsb
push
push
ret
xor
clc
mov
outsl
pop
bound
cltd
or
mov
push
adc
scas
xchg
push
or
jecxz
jne
dec
inc
xorl
mov
mov
ret
leave
ret
fwait
inc
xchg
leave
and
sub
mov
mov
shll
lret
mov
in
push
mov
pop
popf
std
and
mov
cltd
push
adc
test
xlat
hlt
movb
pop
sbb
stos
pop
xor
mov
cmp
test
ret
ss
aam
lea
push
ret
xor
jns
dec
cmpsb
pop
mov
inc
test
in
jbe
lea
clc
in
mov
mov
cmpsb
xor
out
mov
das
push
and
sahf
data16
lcall
clc
jge
pop
test
icebp
js
sbb
adc
dec
icebp
aas
ss
pusha
aam
xchg
lock
lods
cli
fidivl
jo
in
cmp
fmuls
loop
cli
inc
fcomi
and
nop
in
mov
push
fbstp
mov
adc
or
sbb
mov
std
mov
outsb
inc
add
xchg
adc
push
cs
or
pushf
sub
repnz
jp
subl
inc
repz
test
pushf
icebp
jmp
xchg
or
dec
mov
mov
gs
push
ret
jl
clc
shrl
fcomps
mov
lahf
rcrb
dec
dec
xor
dec
mov
mov
push
adc
scas
xchg
movsb
int3
add
lcall
scas
outsl
mov
mov
ret
cmc
or
mov
jo
xor
mov
mov
xchg
adc
and
push
sub
das
ret
dec
mov
test
ja
mov
pop
add
sub
call
hlt
insb
jp
ret
jo
ja
aad
popa
and
std
adc
mov
loope
push
xorl
mov
fidivrl
inc
push
hlt
cwtl
xor
mov
inc
dec
jbe
mov
mov
sub
repz
mov
mov
aad
adcb
in
into
arpl
inc
cltd
sbb
cmpsl
sbb
mov
out
push
pop
mov
xor
push
pop
push
xor
xor
pop
push
and
add
es
nop
jae
js
or
loopne
mov
sub
fs
xor
mov
lods
in
push
push
sub
jmp
xor
inc
jo
out
mov
xchg
out
sub
stc
sti
hlt
jb
lods
sub
hlt
lea
push
adc
fsubs
inc
xchg
jl
in
cli
in
test
mov
loopne
je
stos
mov
sbb
mov
xchg
test
xchg
jo
jbe
cs
in
mov
mov
jl
daa
imul
icebp
xlat
loopne
jb
lea
adc
cs
add
pushf
push
loop
movsl
sub
clc
loopne
pop
jmp
add
adc
out
jmp
xor
adc
js
push
push
fnstcw
jo
pop
sbb
or
cmp
inc
out
test
and
pop
inc
pop
xchg
hlt
stc
cli
xlat
rolb
adc
sahf
adc
push
adc
fsubs
inc
xchg
jl
in
mov
inc
enter
mov
push
adc
imul
test
xchg
jo
jbe
cs
in
mov
mov
jl
daa
imul
icebp
xlat
loopne
jb
lea
jno
ds
xor
cmp
cwtl
shll
clc
loopne
pop
jmp
add
adc
out
xor
mov
inc
jge
js
push
push
fnstcw
push
adc
xchg
repnz
xchg
sub
sub
xor
xchg
insb
pop
push
cmpsl
jecxz
int
imul
fwait
push
fwait
push
cmp
jns
sbb
cmp
push
sahf
movsl
xchg
shll
inc
negb
flds
scas
outsl
mov
sbb
sti
enter
dec
push
out
out
xchg
push
lods
inc
xchg
dec
and
pop
movsb
dec
cmpb
xchg
movsl
mov
sub
and
cmpsb
mov
ret
repnz
rcrl
dec
cmp
roll
aad
cmp
and
inc
xchg
mov
add
inc
das
pop
pop
iret
pop
xchg
jle
and
ss
clc
aad
fisttpll
popa
cltd
or
int3
mov
ds
mov
mov
insb
jg
enter
sbb
mov
add
mov
mov
xor
fildll
pop
imul
push
xor
lods
std
and
insb
inc
or
mov
push
clc
adc
jge
xchg
xchg
add
aad
pop
push
aas
mov
mov
mov
inc
ret
cmp
inc
sti
mov
mov
pop
inc
fnsave
jp
adc
xor
xor
push
dec
cmc
mov
xor
stos
fildll
out
popf
js
movsl
xor
addr16
cmp
and
je
addr16
jg
test
inc
cmp
sbb
mov
imul
test
pavgw
ljmp
scas
bnd
ds
sbb
popl
lcall
sub
filds
stos
data16
jg
sarb
jmp
into
mov
push
in
mull
out
stc
lea
insb
jnp
movsb
aaa
pusha
sbb
adc
xchg
es
pop
add
das
push
cwtl
sahf
mov
jg
das
pop
pop
iret
pop
xchg
jle
and
ss
clc
aad
fisttpll
inc
test
pop
pop
orb
arpl
cld
sbb
adc
inc
inc
xchg
push
int3
cmpb
jne
xchg
dec
popf
and
pop
int3
adc
add
loope
or
lret
fsubr
pop
ret
push
jg
popl
lcall
inc
pop
pop
xor
movsl
sub
les
pop
ljmp
xor
ds
inc
icebp
cmp
lahf
scas
and
clc
pop
mov
in
jnp
out
inc
cli
and
pop
xlat
inc
ret
xchg
inc
add
aas
cmp
jns
sbb
cmp
push
jecxz
cltd
repnz
push
sbb
sub
add
fsts
ret
mov
cmp
jle
movsl
push
rcrl
xorb
dec
xor
mov
lea
xchg
pop
in
xor
dec
test
shll
sbb
cwtl
sbb
test
sub
xorb
adc
sbb
adc
and
adc
fwait
repnz
push
fwait
or
adc
or
sbb
lret
pop
out
push
rcrl
test
add
push
lock
rorl
and
nop
es
xchg
cltd
and
sub
mov
adc
pushl
inc
cmp
sbb
rcll
orb
mov
frstor
jae
mov
call
fdiv
call
push
lahf
loopne
pop
add
or
ds
repz
dec
or
ret
mov
mov
aad
xchg
scas
xor
add
fnstcw
push
push
cmp
xorb
shr
mov
mov
adc
jno
mov
in
fisubl
sub
out
xor
sarb
rep
icebp
cmp
mov
in
dec
xchg
xchg
cltd
cmp
insb
xchg
inc
or
mov
xchg
and
bound
hlt
in
fnstcw
xor
xorl
lds
lahf
adc
sbb
jbe
xchg
inc
sub
pop
leave
lret
in
mov
push
insl
cmpsb
xor
shl
jmp
sub
imul
loope
xchg
xor
pop
pop
jae
test
enter
insb
jecxz
rclb
push
mov
cmp
push
push
mov
add
add
fwait
cmp
jns
sbb
in
fcmove
mov
daa
pop
lcall
aaa
mov
ror
sbbl
or
inc
dec
push
or
xchg
out
cmp
fcomip
loope
fsubrs
aaa
popf
pop
push
clc
into
gs
mov
sub
cltd
xor
add
xchg
insb
xchg
cmp
adc
cmp
jns
sbb
popa
mul
jecxz
push
in
mov
icebp
cmp
movb
fcompl
adc
mov
invd
icebp
pop
les
pop
in
aas
cmp
mov
js
aad
lock
int3
leave
or
subb
sub
call
add
push
pop
xor
pcmpeqd
cmpsl
adc
cltd
mov
lea
push
cmpsl
out
stos
cmp
les
cwtl
add
in
xchg
fsub
jno
mov
or
mov
xor
pop
popf
pop
jge
sysexit
test
popf
jb
add
xor
lcall
jl
int3
xlat
adc
dec
daa
pop
loop
cs
push
vpaddsw
adc
std
sarl
imul
xor
mov
loopne
stos
jmp
push
xor
adc
insl
outsl
lahf
and
mov
mov
test
or
ljmp
xchg
and
stc
push
stos
add
icebp
pop
add
or
ds
jno
imul
pop
rclb
clc
fcmovnbe
push
js
popl
push
cli
mov
std
loope
and
mov
insl
hlt
pop
sti
outsl
xchg
popa
negl
xor
andb
mov
sbb
sbb
jb
jge
dec
mov
js
stc
fwait
mov
pushf
xchg
inc
push
in
fdivrp
stos
pop
ljmp
mov
pop
icebp
xchg
test
xchg
movsb
jb
lret
test
jae
or
inc
and
inc
imul
push
stc
or
loope
popa
or
cmp
mov
inc
push
mov
xlat
movsb
mov
inc
jg
shrb
les
xor
sarb
sub
outsl
xor
jl
loop
sbb
insb
dec
out
imulb
cmp
xchg
mov
cmpsl
iret
and
fldenv
push
dec
cmc
cmp
arpl
add
push
mov
fs
into
pushf
mov
cmp
lcall
lea
mov
rorb
rclb
push
out
in
dec
gs
or
inc
pop
mov
daa
mov
lods
clc
call
inc
ficomps
stos
push
mov
aas
push
add
and
ret
in
cmp
mov
dec
push
out
pushf
ret
test
xchg
push
fcmove
dec
add
das
inc
pop
cmp
loop
orl
pop
sub
and
aaa
mov
js
std
out
test
cmpl
push
adc
std
shl
adc
lahf
icebp
jnp
xor
push
adc
pop
pop
out
pop
cmp
stos
adc
push
jecxz
mov
fsubrs
pop
jns
add
dec
xlat
out
dec
and
pfrcp
push
fcompl
dec
pop
sub
and
cmp
icebp
sahf
mov
jmp
mov
dec
adc
xchg
rcr
lret
std
and
loope
fimuls
push
push
ja
cld
mov
dec
inc
inc
cmp
fsts
adc
mov
adc
jle
mov
enter
fucom
push
dec
ja
in
inc
xchg
daa
stc
xchg
shll
and
icebp
mov
popa
cmp
jns
sbb
cmp
push
data16
cltd
dec
pop
ficompl
sbb
pop
pop
lea
cmp
int3
xchg
ret
dec
pop
push
in
int
and
lahf
outsl
or
leave
ja
inc
jns
leave
sub
into
movsl
test
jns
adc
sbb
sbb
push
pushf
jmp
adc
jns
sbb
push
shl
lahf
into
add
and
popf
push
sahf
lahf
data16
push
lcall
lea
mov
mov
jle
and
cmp
call
mov
lods
clc
call
inc
ficomps
stos
push
mov
aas
push
add
and
ret
in
cmp
mov
dec
push
out
dec
jmp
lcall
fisubrl
inc
cld
inc
inc
in
xchg
shlb
mov
push
pop
ret
mov
js
std
out
test
cmpl
push
adc
std
shl
adc
lahf
icebp
jnp
xor
push
adc
pop
pop
out
ja
movsb
cmp
push
dec
cmp
shll
fsubrs
pop
jns
add
dec
xlat
out
dec
and
dec
mov
xchg
push
fcompl
dec
pop
sub
and
jg
xorl
xor
test
rcr
xchg
ret
lret
insb
dec
mov
ljmp
pop
and
cwtl
xor
push
js
nop
loope
lods
sub
rolb
cmp
cmpsb
xor
mov
clc
in
mov
leave
cmp
push
sbb
fistpl
cmp
mov
cs
cltd
jne
mov
fstps
rol
lcall
in
pop
jg
mov
xchg
add
mov
test
mov
lods
adc
and
jp
andb
fistps
xor
xchg
adc
addr16
xor
jae
inc
mov
fdivrs
sub
xchg
xchg
outsl
lods
xor
out
add
pop
or
xor
fwait
imul
sti
psllw
sbb
hlt
gs
out
add
push
or
dec
popf
test
insb
ret
les
loopne
sbb
mov
mov
mov
and
pop
sub
loopne
pinsrw
mov
xchg
mov
cltd
xor
ret
arpl
fadds
rcrb
enter
jp
js
out
mov
stos
mov
ja
push
mov
jne
mov
pop
sub
inc
aam
adc
jle
xchg
movsb
aad
cmpsb
mov
and
xchg
mov
sub
sti
stc
ds
mov
sar
inc
shrb
push
jns
sbb
cmp
push
adc
ljmp
and
mov
setl
jns
and
in
js
jne
arpl
popf
adc
xor
or
push
mov
xor
out
sub
int
xchg
mov
cmp
les
out
into
push
and
mov
fidivs
dec
cmpb
push
hlt
cmp
cmp
and
into
icebp
fptan
xor
inc
leave
in
movsl
jns
sub
rcrl
inc
sbb
inc
add
dec
sahf
orb
out
scas
arpl
out
popf
stos
jg
add
call
pop
aad
stos
stos
mov
mov
jg
das
pop
pop
iret
pop
xchg
jle
and
ss
clc
aad
fisttpll
mov
mov
rorl
push
cmp
jnp
push
clc
int3
mov
add
jb
mov
je
mov
stos
mov
mov
or
ss
and
call
jnp
push
dec
pop
cmpsb
cmp
inc
jb
adc
repz
pop
xchg
cmp
xor
cmp
jge
int
add
push
ret
shr
ss
outsb
dec
popf
rcrb
out
aaa
jp
sub
add
iret
bnd
cmp
inc
jg
imul
lea
pop
mov
xchg
adc
cmpsl
mov
jmp
push
data16
loope
sub
lods
outsb
mov
pop
aam
sub
xchg
push
out
jmp
lods
into
mov
ror
mov
inc
adc
mov
cli
xor
add
out
das
dec
adc
push
ret
pop
jns
cltd
pushf
ret
cwtl
cmp
iret
pusha
call
xchg
pushf
negb
push
in
filds
aas
data16
add
sbb
mov
cmp
fists
jbe
inc
adc
enter
xor
ret
dec
xchg
add
xchg
xchg
js
aas
lahf
rorb
inc
mov
dec
push
loop
jp
fmull
call
xor
int3
mov
or
loop
inc
in
jl
adc
push
nop
stc
outsl
adc
js
int3
pop
dec
jp
jecxz
mov
mov
xchg
cmpsb
add
cmp
fstl
addl
sbb
xor
mov
out
adc
clc
popa
mov
in
sbb
jmp
lcall
call
mov
out
mov
xchg
cmp
and
daa
imul
cltd
xchg
adc
xchg
push
jle
in
jne
rcrb
jg
jo
loopne
sub
xchg
push
jmp
xchg
ret
test
sbb
jmp
jb
jge
mov
push
mov
inc
sub
adcl
mov
sbb
ljmp
mov
push
pop
mov
stc
les
fidivs
xor
pop
mov
es
xor
ret
cmp
inc
enter
out
andl
dec
sub
dec
xor
adc
je
scas
hlt
test
stos
mov
xor
ds
aad
xor
out
inc
mov
out
cli
lds
xchg
xchg
sbb
push
daa
mov
xlat
div
mov
cmp
inc
sbb
data16
insb
fists
sbb
jp
repz
add
add
and
pop
movsb
sub
fsubp
mov
jle
add
mov
cmp
test
icebp
in
or
pop
push
daa
sub
aas
lods
jl
popf
mov
inc
scas
mov
sbb
fldt
mov
pop
lds
repz
add
add
sub
js
out
cmp
inc
pop
fmul
dec
dec
jge
psraw
imul
mov
cmpsl
es
jle
pop
aam
jmp
mov
test
sbb
xchg
mov
inc
les
jle
lea
imul
pop
pop
out
dec
and
addb
mov
arpl
cmp
imul
inc
ja
inc
add
inc
div
in
sub
iret
jecxz
lcall
aas
jo
stos
xor
sub
pop
sarb
aaa
jne
into
dec
jmp
mov
pushf
repnz
je
and
aam
dec
mov
xchg
cwtl
inc
xlat
divb
sbb
jle
orb
inc
lds
mov
shl
mov
nop
xchg
dec
pop
je
push
mov
ds
jno
or
fisubrs
mov
fnstcw
adc
mov
movsl
out
outsl
mov
std
xchg
inc
adc
sub
push
push
ret
stos
stos
ret
cmpsb
aaa
fmul
jnp
add
adc
inc
inc
repz
rorb
pop
add
mov
mov
push
mov
rclb
int
jge
sarb
pop
mov
adc
ror
inc
xor
jge
dec
pusha
scas
xor
ds
sub
adc
aas
outsb
mov
mov
in
xlat
pusha
inc
jns
jge
or
lock
or
xchg
inc
outsl
dec
cltd
ss
js
imul
mov
jno
jle
xlat
out
xchg
xchg
xchg
xchg
adc
je
scas
jecxz
mov
fistpll
cmp
mov
mov
imull
lret
cmp
loope
lods
pop
iret
jne
xorl
sub
pop
mov
mov
or
std
pop
jbe
cs
push
inc
push
pop
popf
add
jns
push
mov
jmp
out
outsl
dec
test
inc
cmpb
pop
push
and
int
jae
add
insb
jno
or
leave
ficoml
lods
lds
test
loop
je
cli
cmp
test
mov
add
or
fdivs
pop
test
loope
or
push
jecxz
jo
cmp
cli
xchg
mov
out
and
aam
negl
sbb
sti
mov
cltd
push
and
daa
mov
pushw
addr16
outsl
out
lahf
xorl
jnp
and
sbb
or
push
out
mov
insb
imul
xchg
outsl
dec
lea
mov
add
sub
shll
movsb
add
repnz
cmpl
bnd
sbb
idiv
negl
and
mov
sub
jbe
mov
push
nop
cmovg
mov
dec
loop
jae
push
cld
fadds
inc
xor
shl
std
aam
mov
leave
xchg
adc
pop
mov
fistpll
cmp
imul
js
lret
mov
shl
data16
loope
lods
pop
iret
jne
xorl
sub
cmpsb
dec
nop
and
or
jbe
cmc
daa
jecxz
cmp
rcrb
push
push
add
cld
and
mov
dec
test
and
leave
jbe
push
test
les
shrl
int
push
sub
int3
mov
mov
out
sub
imull
xor
lcall
pop
aaa
mov
out
out
and
nop
add
adc
or
fsubr
movsb
xor
mov
cmpsb
addr16
aam
outsl
repz
or
enter
add
xor
dec
outsl
jp
testb
daa
int
aaa
stc
pop
mov
xchg
and
aam
negl
sbb
sti
mov
cltd
push
and
daa
mov
pushw
addr16
outsl
out
repz
dec
push
aad
xchg
xchg
jnp
and
sbb
or
push
out
mov
insb
imul
xchg
outsl
dec
lea
mov
add
sub
shll
mov
lock
cltd
lods
shlb
scas
pop
gs
push
mov
movsb
bnd
sbb
idiv
negl
and
mov
sub
jbe
mov
push
nop
cmovg
mov
sbb
adc
sub
push
ret
jmp
adc
imul
and
xchg
std
imul
inc
sub
dec
call
and
mov
ret
fidivs
mov
or
fisubrs
das
xor
push
mov
mov
adcl
mulb
push
lahf
adc
xorl
push
jle
xchg
nop
jns
cmpsb
sbb
cld
stc
in
xchg
fwait
jl
and
cmp
inc
sub
ds
jge
push
in
mov
xchg
xlat
dec
lret
add
mov
stc
aad
bound
ret
mov
add
ret
push
lea
movsl
out
fiaddl
fucomip
adc
fistl
mov
jl
push
cld
rorl
jnp
les
imul
add
scas
mov
sub
loop
pop
arpl
scas
pusha
pop
xor
jle
push
inc
jbe
je
mov
scas
fidivrl
cmc
pop
mov
mov
cltd
aam
xlat
int
btc
fnstcw
enter
gs
jno
sub
mov
lahf
nop
aaa
sub
std
or
adc
xor
pavgb
aas
and
mov
push
mov
pop
pop
mov
push
lcall
lods
ja
jns
jle
adc
je
scas
and
test
or
lds
jne
xchg
aad
dec
lretw
mov
int
adc
das
in
mov
jns
lds
sahf
dec
cmp
mov
lahf
adc
mov
mov
ljmp
js
cwtl
imul
idivl
xorl
es
mov
mov
scas
xchg
mov
out
dec
xor
jp
push
mov
or
adc
pop
in
push
mov
popf
cs
sbb
stos
mov
mov
pop
cmpsl
and
out
pop
sarl
mov
and
add
movsb
and
pop
cmpsl
and
mov
insb
adc
mov
icebp
jo
pop
cmpsl
and
pop
arpl
mov
inc
mov
cmpsl
dec
cmc
leave
push
jl
mov
popf
je,pn
mov
add
adc
sub
mov
ds
or
das
fiadds
xorl
out
adcl
add
fs
jnp
lea
rolb
cmpl
mov
enter
inc
and
pop
add
add
int3
dec
ja
mov
mov
xor
loope
test
lret
dec
lahf
shl
xchg
mov
std
mov
repz
movsl
iret
bound
mov
sti
test
cmp
dec
aaa
sbb
mov
repz
rcll
out
pop
add
int3
aad
pusha
sbb
repz
out
jge
aam
aam
sbb
lcall
pop
push
cld
fwait
imul
xchg
hlt
jl
sbb
repz
jle
test
cmp
dec
aaa
sbb
mov
repz
loope
cmp
pusha
out
pop
add
int3
aad
pusha
sbb
repz
imull
mov
pop
pop
cmp
cmp
mov
sbb
divb
in
mov
cmpsb
jp
jg
xchg
jb
push
or
push
xchg
push
sti
xor
add
fnstcw
jb
leave
bound
jg
in
jg
repnz
add
insl
imul
mov
sub
sbb
jae
imul
xchg
lock
lea
mov
xor
and
cmpsl
inc
das
mov
cltd
lcall
int
adc
insl
lret
dec
xchg
sbb
and
aam
sbb
xor
cwtl
and
das
jmp
ljmp
jg
or
push
and
aaa
add
enter
nop
fcmovnb
xchg
jnp
xor
icebp
pop
push
shlb
loope
popf
adc
outsb
lods
hlt
pop
fiaddl
add
jo
push
mov
cltd
pop
xlat
stos
pop
jge
jle
pop
adc
stos
subb
adcl
das
pusha
cltd
push
or
sub
push
xchg
pop
fstpl
jl
xor
outsl
dec
rolb
into
addr16
and
fstpt
gs
mov
cld
bound
mov
maxps
sarl
dec
gs
mov
mov
and
push
shll
jp
xlat
or
push
jne
in
add
sbb
outsb
test
mov
ljmp
es
shll
and
decl
adc
ror
or
add
jne
and
xchg
lcall
inc
or
leave
adc
jns
push
imul
int
aad
movsb
and
adc
mov
jp
ret
call
pop
std
mov
xor
mov
jo
and
imul
stos
inc
inc
movsb
call
fucomp
les
roll
insb
inc
es
test
insb
sub
subl
fdiv
adc
jne
outsl
cmp
pusha
sub
lahf
adc
dec
lret
in
out
inc
pushf
jmp
ret
sbb
rolb
fcoml
rclb
cmp
repz
xlat
push
shll
cs
xor
insl
testl
add
xor
pop
or
mov
xchg
aad
cmp
test
push
and
adc
je
scas
stos
mov
inc
sub
pop
or
bound
jge
lea
xchg
cmpsb
mov
iret
hlt
sub
pop
fidivl
sbb
jmp
jb
jge
sbb
inc
mov
inc
xor
popa
fcmovnbe
mull
or
loopne
nop
or
cmovne
adc
shlb
pop
mov
adc
loope
cmpsb
cmp
push
neg
inc
mov
fldenv
iret
scas
jno
adc
jo
sbb
push
loope
out
jb
xchg
out
test
xchg
ret
test
sbb
jmp
jb
jge
sbb
inc
mov
xor
nop
nop
cld
jmp
inc
push
cli
stos
pop
mov
mov
imul
and
inc
add
lret
or
mov
in
push
sub
xchg
pop
dec
jbe
dec
test
add
push
lds
xor
in
dec
sub
les
xor
jle
sub
push
xchg
jne
sub
mov
outsl
pop
aad
sbb
or
jle
ret
ds
xchg
push
push
stos
jecxz
xchg
sub
sbb
je
loop
or
test
pop
pushf
insb
dec
iret
or
xchg
pop
bound
out
test
xchg
ret
test
dec
xchg
das
rorl
bound
add
and
in
addr16
push
lret
pop
add
ucomiss
dec
outsb
sbb
aas
xor
xchg
out
std
push
dec
and
mov
loopne
and
add
sub
mov
mov
sarb
int3
jp
push
lcall
cmp
pusha
ds
repz
pushf
push
jnp
sub
xor
pop
inc
and
pop
in
push
adc
jle
lock
xor
cld
push
pop
fstpl
or
jae
std
addr16
sub
mov
mov
int
lcall
inc
push
jg
and
inc
push
dec
out
sub
dec
push
mov
add
mov
out
in
shll
sub
daa
das
shlb
outsl
mov
pop
rolb
jns
das
lock
cmp
xor
addr16
sub
mov
mov
mov
jae
sub
jbe
dec
fnsave
outsb
or
out
divb
jmp
fwait
push
add
inc
add
arpl
loop
pop
sahf
push
push
xchg
dec
mov
sbb
jbe
loop
xor
leave
sarb
mov
xchg
pop
pop
gs
inc
mov
es
in
xchg
jp
aaa
push
adc
pop
or
jns
cmp
daa
dec
mov
push
mov
in
stos
xor
lahf
scas
cmpsb
jbe
data16
outsl
or
sub
cmp
repnz
scas
and
pop
and
dec
mov
pop
sti
cmp
call
repz
sub
adc
out
or
fiadds
mov
incl
pop
fistpll
cmp
and
sbb
jl
ds
insl
pop
xchg
mov
adc
cmpl
dec
cs
jp
scas
test
scas
js
pop
add
mov
or
push
cld
call
divb
mov
jl
xor
popf
add
cmpsl
cld
lds
sti
pop
sbb
mov
xchg
sub
fwait
loopw
or
pop
bound
shr
inc
test
montmul
cmpsb
sbbl
mov
xchg
push
out
test
out
outsb
jecxz
pop
xchg
jae
mov
enter
xchg
cmc
jae
dec
jnp
fs
sbb
add
sbb
sbb
pop
xor
imul
out
or
push
and
mov
arpl
mov
mov
jmp
cmpsl
and
push
jecxz
lock
jno
testb
mov
flds
cwtl
push
dec
adc
jmp
loope
xor
rcrl
dec
xchg
jg
cmp
adc
test
xlat
sbb
data16
lock
cmp
call
inc
dec
adc
cmp
cmp
pop
clc
rcrb
daa
push
in
pop
mov
jb,pn
loop
and
inc
test
mov
andl
push
jne
bound
pushf
add
lcall
mov
out
jecxz
add
out
cmp
repnz
andb
bound
jmp
push
mov
adc
inc
frstor
push
int
mov
xchg
mov
rdmsr
mov
add
lcall
mov
stos
pop
inc
sbb
sbb
icebp
fwait
inc
xor
loopne
inc
mov
rclb
and
xor
std
sbb
xor
sbb
sub
or
ds
mov
scas
push
rolb
pushf
out
sub
dec
bound
sahf
outsb
inc
inc
enter
out
je
xchg
ret
aaa
pop
xchg
push
mov
inc
xchg
sbb
outsb
pop
jbe
mov
rcrl
frstor
pushf
fs
jne
loop
inc
sbb
roll
jbe
sbb
cmp
xchg
fdivrs
insl
xor
fisttpl
mov
mov
popf
push
inc
cmp
imul
in
test
mov
sbb
pop
pop
fwait
cmpsb
ret
shr
test
fisubs
bound
out
hlt
adc
into
inc
daa
les
test
scas
and
pop
aam
outsl
mov
mov
int3
jmp
adc
je
scas
iret
ret
jbe
add
mov
mov
hlt
cmp
mov
mov
jne
mov
ds
dec
dec
pop
mov
out
bound
mov
xor
stc
lret
jge
or
jl
imull
pop
inc
lds
push
add
cli
fadds
inc
xor
mov
or
js
aad
mov
jmp
add
imul
out
imul
and
imul
daa
mov
pop
mov
push
hlt
rclb
inc
scas
dec
xchg
and
cmp
xor
jecxz
and
test
jl
insb
inc
scas
xchg
inc
cmpsb
negb
mov
and
xchg
inc
inc
jecxz
mov
lea
aad
sbb
adc
int
imul
neg
sbbl
cwtl
scas
aaa
fisttpl
pop
xchg
cmp
test
ret
and
lahf
adc
jae
dec
inc
push
movups
out
add
arpl
cs
add
pop
adc
je
sub
or
dec
jle
add
loope
shl
push
cmpsl
es
xor
icebp
mov
lock
lods
add
xchg
dec
mov
mov
scas
aaa
sbb
ljmp
add
cmpl
dec
cs
cli
push
stc
cmp
inc
lds
subl
mov
mov
popf
fistpl
add
cli
push
mov
sbb
dec
ud0
lcall
xor
pop
loop
ds
fldenv
cmpsb
fstpt
out
xlat
mov
mov
sbb
jle
jb
out
in
push
mov
incl
cmpsl
and
sbb
sbb
push
hlt
xchg
pop
imul
enter
jbe
sbb
repz
loopne
pop
push
mov
in
inc
jg
jg
outsl
subl
xchg
fistps
pop
loopne
divl
stos
ljmp
xchg
adc
jmp
sbb
jnp
adc
xor
enter
out
or
dec
xor
xchg
jae
fdivrl
std
iret
outsb
outsb
inc
std
add
sti
xchg
addb
int3
mov
popf
cs
mov
push
mov
push
out
mov
addb
mov
xchg
loope
pop
adc
xlat
or
add
mov
sarb
mov
xor
ret
fistpll
xor
jmp
or
xchg
xchg
out
loope
out
xor
add
cmp
leave
fidivs
pop
xchg
es
cmpl
dec
cs
cli
push
stc
cmp
out
jecxz,pn
stos
hlt
mov
in
stos
mov
lods
mov
popf
cs
arpl
loop
mov
push
pop
sub
lcall
ffree
mov
xchg
or
ret
dec
sbb
push
mov
mov
enter
xor
data16
inc
std
add
push
sahf
add
dec
xor
adcb
mov
xor
into
rorl
in
fidivrs
cmp
inc
hlt
cmp
fistl
lea
cld
les
pop
mov
mov
ljmp
out
in
pushf
lds
addr16
mov
xchg
ja
adc
mov
xrelease
mov
aaa
sbb
shlb
idivl
push
mov
mov
mov
sahf
fs
xchg
cmpl
jae
jae
adc
lahf
jb
ret
lods
in
popf
fs
stos
cmc
int
push
bound
inc
imulb
xlat
pop
cmp
xor
xchg
xlat
xchg
xchg
cmp
cmp
arpl
pop
or
pop
outsl
xchg
push
pop
cmpsl
loopne
cmpsl
cld
sbb
dec
xchg
fsts
xchg
insb
xchg
jle
xlat
push
mov
nop
or
shrl
pop
movsl
xor
fs
xlat
ret
inc
cltd
cs
pushf
mov
int
adc
cmp
jae
mov
roll
add
xchg
jns
mov
subl
fisubrl
cltd
dec
pop
mov
push
shl
pop
push
sbb
mov
pop
inc
and
lock
or
adc
sahf
mov
pop
inc
jns
mov
lea
ret
test
aad
cmp
cltd
inc
pop
ret
jg
push
and
popf
shlb
lahf
cmc
adc
cli
fidivrs
adc
pop
inc
xchg
inc
xor
test
sahf
and
push
push
orb
jge
inc
int
dec
dec
loop
adc
mov
int
mov
ret
test
sbb
jmp
jb
jge
sbb
inc
mov
insb
jmp
mov
in
hlt
mull
cmp
lret
mov
jae
add
pop
out
fadds
inc
xor
mov
je
lcall
or
je
scas
insb
sbbb
lods
icebp
fwait
jo
cmp
cltd
mov
stos
insb
xlat
fs
out
ds
stc
sbb
test
test
fstps
movsb
test
pop
jo
push
ss
jg
cmp
in
push
pop
cmp
dec
jo
pop
iret
push
scas
filds
sbb
jmp
xor
pop
stc
xor
imul
rclb
stc
sbb
and
sahf
dec
jmp
and
nop
test
cmp
daa
subl
or
xor
jns
dec
ljmp
mov
xchg
inc
cmc
nop
sti
dec
cmp
mov
stos
loop
or
pop
aam
fs
mov
xchg
xchg
sub
pop
push
xchg
xchg
mulb
mov
pusha
mov
int3
lcall
lock
fldl
adc
xchg
xchg
mov
inc
nop
aas
scas
mov
out
push
lcall
popf
aam
adc
out
scas
popa
fs
xchg
sar
rol
xchg
pop
pop
or
mov
push
stos
jns
fcoml
cwtl
shll
cmp
pop
pop
pop
call
sbb
cmp
or
out
js
int3
stc
leave
icebp
or
xchg
inc
jge
dec
int
jne
mov
outsl
rorb
unpcklps
in
jns
add
loopne
test
ja
mov
mov
jae
lock
punpckhbw
aas
dec
pop
out
fwait
cmp
push
mov
jge
mov
sub
scas
xsha1
cmpsb
or
test
inc
xlat
fucomp
das
aad
pop
inc
ljmp
dec
inc
es
fisttps
xchg
xchg
std
dec
cmpsl
inc
das
lds
or
loope
sahf
mov
test
insb
jg
faddl
push
bound
jnp
cmp
imul
loop
lock
and
fdivl
xor
mov
jmp
dec
std
and
les
aam
js
mov
cli
xor
test
inc
sub
ret
test
das
xchg
dec
mov
nop
iret
aad
add
in
mov
ja
call
nop
stos
iret
ret
jbe
add
pop
imul
mov
lock
insl
das
out
sbb
out
fidivrs
pop
adc
mov
dec
arpl
dec
outsb
jno
xchg
push
mov
sbb
xchg
sti
outsb
mov
out
jle
or
mov
mov
add
lock
inc
shll
cmp
popa
push
mov
unpckhps
inc
scas
fsubrl
icebp
mov
mov
cmp
std
xor
xor
dec
movsb
leave
or
fsts
cmp
aas
sbb
insb
mov
dec
rolb
je
scas
sub
aaa
out
data16
xchg
inc
lret
add
adc
lcall
inc
push
idiv
sbb
xchg
jno
mov
cwtl
inc
fwait
inc
mov
jns
mov
mov
cmp
mov
into
ret
outsl
sahf
loope
inc
pop
sbb
mov
divb
test
sub
fisubrl
inc
push
push
xor
add
push
shl
adc
and
mov
mov
mov
insb
add
jle
dec
out
out
pop
test
les
loop
cltd
das
jmp
ret
test
sub
fisubrl
inc
push
push
xor
add
push
shl
adc
and
int3
xchg
aam
dec
arpl
jae
addr16
fs
dec
out
out
pop
test
les
loop
cltd
das
jmp
ret
test
in
icebp
push
pop
movsl
push
add
inc
sbb
bound
out
pop
repz
fiaddl
ja
adc
xchg
test
xchg
mov
lds
jle
in
ret
jo
adc
add
ret
pop
push
outsb
test
into
jecxz
inc
rorl
cmp
mov
jmp
adc
je
scas
push
xchg
prefetcht2
cmpsb
mov
adc
xor
fmul
cmp
data16
enter
repz
mov
repnz
fistps
lock
inc
xor
lahf
xor
push
nop
jl
add
xchg
lret
xchg
psubd
popf
cmc
pop
subb
xor
pop
sti
das
add
push
fcmovu
outsb
pop
or
sti
mov
xchg
mov
addl
xchg
stos
lods
xchg
cltd
rcr
lods
loop
out
push
int
arpl
stos
into
hlt
outsl
pop
in
add
cmp
pop
push
movsl
xlat
out
xchg
xchg
xchg
xchg
adc
je
scas
mov
popa
add
test
push
insl
and
push
jge
popf
jmp
in
jmp
out
repz
das
andb
test
dec
pop
inc
and
jge
xor
rorl
gs
or
lret
call
rclb
je
scas
pushf
aam
jbe
xor
or
cs
outsl
xchg
cmp
or
ss
out
push
addr16
dec
inc
xorb
je
mov
pop
aam
xchg
rol
lock
cmp
xchg
cmp
or
xor
repnz
adc
or
aas
cmpsb
stc
rorl
xchg
data16
stc
jmp
adcl
and
lcall
inc
scas
sahf
hlt
stos
rcr
jbe
cmp
and
mov
mov
xrelease
pop
add
arpl
xchg
mov
push
stc
sub
loope
fxch
test
out
les
stc
fldcw
fldt
xchg
cs
mov
sahf
gs
fdivp
sub
sbb
iret
loop
fnstenv
jp
dec
sub
out
les
add
pop
jge
and
jnp
adc
aam
ljmp
aam
cmp
jno
cmp
aad
push
push
and
dec
xor
test
pop
dec
fs
repnz
int3
mov
sbb
xchg
push
jle
jnp
int
xor
test
out
xchg
xchg
xchg
xchg
adc
je
scas
ss
sbb
sbb
rolb
mov
push
test
leave
jo
mov
and
shlb
rcrb
cmc
push
sahf
mov
mov
aaa
lds
loope
mov
mov
movsl
pop
jle
inc
jae
bound
and
pop
shlb
in
inc
mov
sbb
lds
push
ss
in
pop
sub
fsincos
add
mov
fisubrl
daa
adc
mov
cmp
inc
loop
test
movsb
dec
dec
daa
dec
cmp
xchg
sub
jne
out
or
pop
stc
cmpl
xlat
imul
or
dec
jno
cmp
or
lods
out
loop
rclb
xor
mov
imul
pop
adc
inc
add
movl
xor
mov
or
fadd
mov
lahf
fsubp
orb
jge
icebp
cltd
jecxz
loop
addb
hlt
andl
popf
pop
ljmp
sti
nop
lods
jmp
call
pop
push
repnz
sbb
sbb
sbb
loopne
jp
inc
xchg
jns
aad
lcall
and
mov
xchg
std
mov
in
xor
shrl
adc
popf
inc
loop
stos
lods
cmpsb
rorl
rolb
or
fdivl
push
jnp
inc
adc
mov
fcoml
lock
jo
nop
jecxz
sbb
add
sub
mov
fdivrs
decb
icebp
mov
and
das
and
imul
call
test
divl
in
test
loop
stos
fidivs
test
scas
outsb
lds
pop
jmp
jle
adc
je
scas
push
pusha
stos
pop
pop
add
stos
or
lcall
adc
scas
fucomp
jae
sub
fadd
lods
out
mov
mov
jmp
out
int
jl
jp
cmpsb
inc
or
test
repnz
popf
arpl
mov
loop
std
sub
add
xor
xor
movntq
daa
cmp
xchg
fucom
dec
les
adc
xor
mov
xor
push
sbb
push
stos
cmp
sbb
sbb
xchg
mov
cmpsb
outsb
mov
test
test
fs
lret
int
mov
aad
or
xor
xchg
mov
dec
or
enter
jge
lcall
mov
cli
loop
lea
iret
jae
xchg
ret
test
xchg
adc
dec
xchg
popf
loop
sti
jge
mov
pop
popa
cmp
lahf
lahf
xorl
pop
std
cmp
sbb
mov
xchg
and
add
cmp
xchg
mov
loope
mov
xlat
push
lahf
out
jecxz
xchg
jbe
adc
add
adc
adc
lea
fdivr
lods
cmp
rol
or
in
js
xor
leave
cmp
xor
jnp
in
movsl
stc
movsb
pushf
std
mov
jne
xchg
hlt
enter
jge
push
pop
out
and
mov
notb
mov
jbe
adc
bound
inc
xchg
mov
cltd
add
pmulhuw
jnp
inc
jo
inc
dec
call
adc
inc
loope
sbb
sub
and
pop
int3
sbb
cmpsl
pop
mov
out
adc
cmp
imul
lret
into
push
cs
std
jle
cli
fidivrl
mov
je
rcrb
and
out
out
jmp
cltd
fidivl
test
pop
in
lea
enter
dec
inc
xlat
push
inc
pop
fiadds
aas
nop/reserved
lock
mov
jne
push
cmc
or
in
mulb
cmp
clc
push
clc
lods
dec
push
push
mov
jno
test
dec
adcb
push
cmpsb
in
loope
xor
mov
inc
das
rcll
das
xchg
rorl
in
subb
cmp
jnp
cmp
push
loopne
mov
mov
lret
and
mov
sbb
pop
bound
jnp
pop
leave
mov
call
xor
mov
push
loope
notb
mov
pop
lds
out
aaa
or
lods
jne
push
cmc
or
in
mulb
cmp
clc
push
clc
lods
dec
push
push
mov
jno
test
dec
adcb
push
cmpsb
in
loope
xor
mov
inc
das
rcll
das
xchg
rorl
in
subb
cmp
jnp
cmp
push
loopne
mov
loope
ret
jbe
cmp
enter
push
je
mov
cmpb
inc
cwtl
lahf
pop
sar
push
or
das
roll
push
mov
inc
dec
and
or
in
mulb
cmp
clc
push
clc
lods
dec
push
push
mov
jno
test
popf
jnp
call
xor
inc
das
rcll
das
xchg
rorl
cmp
mov
dec
lret
lcall
mov
push
jmp
lock
popf
lods
fistpll
scas
sub
add
xor
scas
xor
repz
cmp
lret
stos
jl
jg
call
cld
xchg
xchg
push
xor
cwtl
push
pop
adc
sub
fstps
jno
ret
mov
cmp
cld
aad
xchg
fisubrs
jle
xchg
clc
inc
scas
insb
icebp
daa
push
sub
add
mov
jnp
and
iret
enter
push
cmp
adc
or
or
lcallw
sarb
cmpsb
jnp
and
pop
decb
dec
xor
mov
out
mov
jmp
pop
mov
cld
sbb
pop
bound
int3
cmp
stc
dec
inc
lods
inc
mov
rcl
dec
loopne
popf
push
sbb
ret
into
ljmp
stc
inc
push
jne
cmp
dec
pop
mov
add
xor
adc
int3
mov
repnz
in
lock
add
insb
push
stc
mov
insl
mulb
cmp
aad
ror
cmp
daa
arpl
cmp
lret
into
push
cs
push
dec
daa
jb
add
xchg
cmpsl
mov
inc
fistl
daa
rcrl
mov
mov
xchg
jecxz
mov
jns
scas
pushl
cmc
jb
daa
out
jb
iret
pop
in
sbb
in
mov
aad
pop
repz
xchg
loopne
cli
mov
inc
stos
lods
out
push
hlt
xchg
inc
scas
js
inc
xchg
lds
mov
mov
subl
jne
test
insb
mov
or
xor
xlat
xchg
push
test
push
fcomip
es
dec
stc
push
test
mov
cli
cmpb
inc
cwtl
lahf
pop
shrl
add
cmp
out
adc
notl
or
in
mulb
cmp
clc
push
clc
lods
dec
push
push
mov
jno
test
popf
jnp
call
xor
inc
das
rcll
das
xchg
shl
pop
push
jp
pop
sub
lret
lcall
ja
bound
imul
dec
out
sub
sub
dec
out
cli
mov
xor
add
cs
movsb
add
fists
out
pop
fbld
and
ret
jno
std
jno
std
mov
in
pop
push
outsl
ljmp
adc
jb
jnp
fwait
push
sub
jnp
divb
xor
pop
jmp
cltd
lahf
pop
inc
ret
inc
jmp
jle
ss
sbb
scas
test
mov
sarl
xchg
dec
mov
outsl
sub
ds
lret
add
jno
ljmp
sbb
orl
sbb
cmpl
lods
or
add
iret
cs
jnp
mov
mov
ret
iret
xlat
push
cmpl
and
pop
mov
iret
dec
sub
repz
ss
sahf
je
add
aad
bound
shrl
dec
push
sarl
xchg
dec
mov
outsl
sub
ds
lret
add
jno
ljmp
sbb
orl
sbb
cmpl
lods
or
add
iret
cs
jnp
mov
mov
ret
iret
xlat
push
cmpl
and
pop
mov
sub
jp
imul
gs
jb
cmp
xor
dec
dec
adc
ja
jo
pop
add
sub
mov
notb
in
sbb
clc
sti
ss
fsubrl
rorl
arpl
sbb
add
popa
aam
dec
push
frstor
iret
adc
jne
add
movsl
jge
out
enter
sbb
je
push
push
mov
aad
push
test
xchg
popa
cltd
or
orl
pop
dec
mov
pop
push
dec
mov
push
push
sbb
sbb
jge
sahf
adc
push
sbb
xchg
pop
cmc
adc
lods
mov
mov
cmp
repz
dec
cmp
push
outsl
mov
lcall
mov
scas
vphaddubq
sqrtps
leave
imul
inc
sub
jns
xor
mov
aam
lods
mov
mov
dec
test
jmp
cmp
scas
lahf
test
push
mov
sbb
cmp
repz
add
jp
add
jnp
mov
dec
lret
test
je
jle
xor
arpl
enter
push
and
jecxz
and
pop
movsl
xlat
out
xchg
xchg
xchg
xchg
push
pusha
mov
dec
pop
inc
cmpsl
adc
mov
xlat
xor
or
fcmovne
int3
bnd
xor
mov
pop
cli
pop
xchg
mov
xor
repz
pushl
mov
inc
shr
or
frstor
movsb
xor
fimuls
fst
lods
sbb
pop
pop
test
sbb
scas
aam
add
lea
js
jle
addl
popf
push
pop
xchg
cltd
pusha
inc
test
push
pop
sbb
mov
xorl
xchg
ljmp
negl
mov
sbb
push
xlat
mov
jne
aam
cmpsb
dec
lods
int
mov
ja
sbb
push
pop
mov
push
in
lds
cwtl
add
mov
jnp
xor
sbb
sub
mov
mov
mov
push
mov
imul
cmc
js
js
jle
addl
popf
push
pop
xchg
cltd
pusha
inc
test
push
pop
sbb
mov
xorl
xchg
ljmp
negl
mov
sbb
cltd
sarb
in
js
mov
dec
outsb
push
xchg
push
mov
loop
jne
xchg
ss
and
inc
xchg
ljmp
jle
ret
adc
popf
stc
ja
fimuls
cmp
call
mov
cmpsl
int3
or
cltd
pusha
inc
test
push
pop
sbb
mov
xorl
xchg
ljmp
negl
nop
ss
lahf
and
xchg
loop
pop
repz
push
lea
test
cmpsb
jnp
and
stos
jo
or
mov
gs
repnz
add
pop
bound
jle
out
mov
inc
push
lea
sub
idivb
sub
cmp
cmp
mov
cmpl
jno
imul
cmpl
andb
dec
fcmovbe
int
and
push
lods
jo
nop
iret
and
hlt
xchg
and
leave
cwtl
sub
insl
xchg
loop
mov
test
jge
cmp
adc
xor
pop
cwtl
test
aas
loop
mov
bound
xlat
xlat
or
ljmp
imul
or
jns
and
hlt
and
lret
and
sbb
insb
push
sbb
push
pop
or
sub
lds
mov
or
push
mov
andb
dec
sbb
jmp
in
or
mov
imul
outsl
xchg
lds
scas
mov
lods
mov
jae
pop
add
mov
pop
fldl
icebp
xor
dec
pop
cs
pop
fisttps
push
add
ret
andl
xchg
dec
xor
repz
cmp
inc
imulb
sub
dec
jb
sub
in
loopne
insl
push
xor
push
mov
mov
in
inc
sbb
stos
movl
dec
add
dec
pop
lret
leave
int
in
sub
ret
pop
ja
cmpsb
sub
sub
lods
jo
repz
test
xchg
lds
dec
int3
fcompl
xchg
sbbb
call
pop
aam
dec
aaa
xchg
daa
scas
cs
inc
pop
xor
lea
sahf
loop
pop
popf
adc
xor
gs
mov
mov
leave
stc
scas
mov
std
lods
lds
mov
movl
repnz
je
adc
fbstp
popl
cld
lds
je
scas
fidivl
sub
xchg
mov
sbb
jmp
je
or
stc
adc
pop
loop
and
or
das
bound
shll
aas
push
or
inc
sahf
add
stos
push
inc
cmc
or
jns
sbb
sub
out
stos
shlb
daa
ret
mov
jle
mov
cmpsl
xchg
nop
jae
mov
dec
xor
into
xor
loope
lcall
popf
adc
inc
fs
xchg
ret
test
das
jl
mov
cmp
push
cmp
ret
stos
pushf
popa
push
nop
insb
xchg
bound
das
pop
mov
leave
sbb
insb
mov
cmp
repnz
das
xor
jo
lock
test
sub
jnp
add
stc
adc
enter
leave
cmp
sub
xor
jmp
stos
inc
pop
iret
mov
inc
mov
mov
lea
lret
cmc
clc
push
rcr
repz
decl
cld
and
test
das
jl
mov
cmp
dec
push
pusha
mov
mov
nop
insb
xchg
bound
adc
pop
push
xchg
add
cmpsl
out
push
pop
or
rcrl
aam
xor
fists
adc
bound
xor
ds
repz
inc
push
out
clc
sbb
mov
dec
jns
adc
sub
adc
je
scas
jo
pop
jp
xchg
xchg
or
sub
div
xor
in
jb
mov
cmpsl
leave
addr16
cmpsb
cmp
andl
mov
push
int3
add
ret
mov
test
jae
xor
pop
jno
dec
test
or
sti
mov
sbb
dec
jbe
jne
mov
jo
popa
repnz
and
out
mov
mov
dec
inc
or
insl
sub
out
sbb
pop
mov
movsl
lods
mov
out
mov
test
fisttpll
cmc
rcll
lcall
xor
out
fsubr
lds
dec
lahf
popf
mov
mov
pop
repnz
shlb
sub
push
mov
stos
sbb
pop
clc
jo
mov
xchg
jg
cs
sub
xchg
test
js
mov
int3
leave
aam
imul
fisubrl
cwtl
or
sti
and
lock
pop
fbstp
in
test
notb
xor
int
and
cs
mov
pop
fisttps
mov
xor
xlat
push
mov
pop
enter
xor
faddp
xor
pop
or
in
add
xchg
js
pop
xor
and
push
mov
fxch
inc
popa
shlb
mov
roll
xchg
pop
es
stc
mov
sub
jl
xchg
or
cmp
daa
pop
xchg
jb
push
mov
sub
loope
jae
das
insl
cmpsl
scas
jae
test
push
push
repz
outsl
aad
lcallw
pop
push
decl
rol
adc
aad
cli
xchg
or
dec
sub
mov
es
imul
rcrl
insb
and
nop
cmp
mul
hlt
push
jmp
push
push
outsl
xor
jge
jb
cmp
sbb
push
daa
and
pop
pop
fcoml
rcll
sar
push
repnz
and
or
and
cli
jo
pop
fbld
cmp
jo
add
out
add
in
fwait
jge
call
push
fcomps
sub
in
xlat
ret
cltd
ja
pop
in
mov
rdpmc
loope
fcmovne
xor
xchg
stos
pop
ss
pop
mov
or
and
mov
gs
push
popa
nop
lods
icebp
mov
movsb
jge
push
lret
push
mov
xchg
inc
or
push
cmc
or
mov
test
cmp
iret
jle
ret
repz
add
repz
loopne
lret
and
inc
ja
inc
add
inc
adc
je
scas
rcrl
fldl
aaa
adc
mov
fs
mov
rorb
rol
pop
mov
cmp
adc
cmp
inc
xor
movsl
push
adc
fsubrs
add
test
daa
test
sub
mov
fisubl
pop
scas
shr
cmc
sti
shrb
insb
ljmp
nop
adc
pop
or
rcll
rcl
rclb
ss
mov
andb
pop
hlt
mov
inc
xchg
lods
pusha
mov
cltd
jecxz
and
sub
cli
rcl
rcrl
repz
aam
and
fwait
add
movsl
mov
sbb
add
loope
mov
cmp
roll
jle
sbb
test
adc
je
scas
sbb
xor
push
in
fcoms
push
lds
out
int
and
inc
outsl
mov
pop
sarb
pop
rcrb
and
cs
jbe
or
adc
mov
call
sahf
addr16
imul
dec
mov
movl
into
lret
inc
sti
or
xchg
sbb
pop
dec
mov
ljmp
imull
inc
adc
push
fcoml
adc
push
jno
mov
adc
jae
xchg
jmp
pop
nop
out
or
mov
jbe
pushf
clc
inc
mov
adc
je
scas
jne
ret
inc
or
xor
dec
xchg
and
inc
call
adc
setl
jo
or
pop
test
xor
inc
mov
add
push
inc
adc
inc
daa
sub
dec
mov
jmp
dec
sbb
mov
mov
or
mov
mul
fs
addl
xor
fdivrl
out
dec
fcoml
xchg
adc
in
lret
add
movsl
jg
sub
test
scas
lahf
inc
stos
push
cs
jbe
out
push
jns
lret
mov
adc
insb
scas
movsb
into
cld
xchg
andb
scas
adc
rclb
mov
das
push
or
js
sub
in
dec
adc
adc
cmpb
lods
in
inc
les
mov
add
or
gs
aam
or
in
jl
and
cwtl
sub
add
mov
and
arpl
dec
je
leave
xchg
ss
popa
cmp
add
in
inc
add
ficompl
les
xchg
mov
mov
hlt
or
cltd
flds
mov
mov
jle
out
sti
fildll
decl
push
add
aas
lret
pop
add
int
jb
adc
or
cltd
bound
or
nop
cmp
nop
mov
add
rorl
sti
inc
mov
icebp
pop
popf
inc
pop
or
imul
mov
push
inc
sbbl
lahf
cmpsw
fadds
negb
sub
or
jnp
mov
mov
ret
iret
xlat
push
cmpl
cmp
or
lock
push
icebp
push
jecxz
dec
repnz
fsubrl
jmp
xor
adc
mov
cmpsl
fistps
jle
repnz
and
cmpsl
cld
xor
test
loop
test
cli
jns
pop
test
loop
xchg
scas
je
push
xor
fcompl
push
cltd
shll
jl
xchg
mov
insl
xlat
push
mov
lret
add
loope
cmp
jp
dec
xor
dec
in
rcl
and
cmpsl
ds
sbb
and
cmpsb
mov
and
lcall
std
push
push
int3
rorl
or
cmpsb
dec
xor
add
xor
pop
jecxz
jmp
push
mov
adc
lret
jl
gs
and
push
push
jae
adc
jmp
add
rclb
cmp
aam
cmp
push
push
push
in
scas
cmc
das
mov
mov
movsl
mov
outsb
adc
sbb
dec
add
mov
stc
sbb
sbb
lcall
sub
mov
xchg
dec
outsl
mov
adc
pop
cmp
fiaddl
out
jbe
jbe
and
cltd
adc
cmp
sub
mov
lcall
imul
loope
xchg
imul
adc
mov
inc
sub
loop
lret
cld
jb
sub
test
jp
mov
lcall
sbb
daa
lret
jne
fs
pop
cmp
mov
ret
in
movsl
fimuls
enter
push
add
lret
or
mov
jge
mov
cmp
xchg
sahf
outsb
adc
sbb
dec
add
mov
stc
sbb
sbb
lcall
sub
mov
xchg
dec
outsl
mov
adc
pop
cmp
fiaddl
out
jbe
jbe
and
cltd
adc
cmp
sub
mov
lcall
imul
loope
xchg
imul
adc
out
fldt
sbb
mov
leave
add
dec
cld
std
push
push
int3
rorl
or
xchg
mov
jg
mov
adc
fidivrl
or
push
mov
sub
cmp
pusha
push
test
mov
inc
sub
dec
add
popf
mov
das
mov
dec
out
aaa
jnp
or
stos
inc
ljmp
test
jbe
fwait
and
in
jb
movsl
xlat
fsts
rcrb
mov
jns
arpl
insb
pop
stos
mov
stc
mov
cmp
std
clc
lods
loope
cmc
sar
pop
ret
push
mov
cmp
inc
loopne
lock
call
cwtl
shlb
cmc
dec
cmp
sti
lds
je
popa
sbb
mov
lods
dec
lds
or
out
lds
adc
cs
idivb
rcrb
push
or
icebp
aaa
pop
jb
lret
xor
mov
cmp
in
mov
into
xor
pop
sbb
xchg
loopne
in
movsl
cmp
in
pop
fcoms
gs
push
insl
jl
js
popf
xchg
push
fwait
inc
inc
mov
bound
and
loope
rcrl
inc
pushf
adc
imull
sub
nop
movl
mov
adc
ss
bound
clc
or
ljmp
cmp
push
sbb
cwtl
das
lock
pushl
pop
cmp
mov
cltd
test
jle
rcr
inc
gs
pop
jg
xlat
push
out
in
cltd
jge
sbb
jecxz
sarl
xlat
mov
sbb
adc
mov
subl
cli
pop
fidivl
inc
xchg
cmp
or
mov
jmp
repnz
inc
inc
mov
pop
mov
iret
xor
out
nop
fnsave
push
out
ffreep
jns
xchg
imul
dec
adc
std
rcrl
aam
fists
clc
test
push
push
mov
jno
shlb
cmc
dec
cmp
sti
lds
je
popa
sbb
mov
mov
sbb
and
mov
fs
cs
idivb
rcrb
push
or
icebp
aaa
pop
jb
lret
xor
mov
cmp
in
xor
iret
xchg
data16
lret
stc
fmul
dec
jno
lahf
es
imul
dec
xchg
xchg
sbb
adc
ljmp
cwtl
push
push
das
movsb
sub
loope
cmc
sar
orl
xor
int3
adc
in
mov
inc
sub
adc
xchg
pop
fucomi
inc
scas
cmp
push
xchg
mov
xor
sub
or
sub
repz
push
int
inc
test
aam
pop
xchg
mov
lods
loopne
addr16
mov
fwait
jne
or
mov
dec
jo
insb
add
fdivl
lea
or
and
fistl
push
loopne
or
adc
mov
arpl
fs
cwtl
or
incl
or
mov
adc
or
out
nop
shlb
fldt
mov
push
in
in
test
ss
in
xchg
xlat
jbe
or
pop
stos
cmp
dec
add
stos
push
or
imul
mov
pop
or
out
js
add
out
jne
inc
ljmp
cs
mov
in
out
loop
fnsave
fists
sbb
pop
mov
fisttps
sbb
in
in
daa
sbb
sub
pop
insb
arpl
lahf
gs
test
imul
push
repz
sub
dec
push
idivb
pop
mov
mov
in
adc
dec
subb
adc
into
popa
mov
adc
testb
andl
pop
inc
jmp
mov
lds
pop
daa
aad
push
dec
fwait
cvtps2pi
sbb
fs
inc
and
pop
cmp
push
enter
arpl
push
pop
mov
push
fimuls
push
and
dec
push
mov
mov
mov
popa
xchg
xchg
mov
fstps
dec
adc
and
lods
dec
xchg
std
xchg
mov
jae
jl
aaa
and
mov
xor
fmull
mov
fidivrl
int
repz
lahf
cmc
mov
gs
or
roll
aas
lods
xchg
movsb
sti
mov
enter
loope
adc
dec
and
pushf
inc
icebp
add
rorb
mov
mov
in
xor
arpl
out
adc
enter
mov
int
push
xchg
push
fisubrl
sar
xlat
pop
loope
add
out
fisubl
int
sahf
mov
int
sahf
mov
cmp
frstor
push
js
add
sub
dec
negb
in
push
clc
sarl
xchg
out
pop
mov
xchg
and
mov
test
push
jge
dec
xor
outsb
jb
testb
inc
fiadds
repnz
jecxz
stos
sub
jmp
push
xchg
or
lods
pop
stos
sub
mov
rorb
scas
xchg
jg
jp
fwait
adc
and
in
inc
jnp
in
push
int
je
mov
xor
add
fcom
xchg
pop
sub
jne
fidivs
icebp
out
xchg
ljmp
ret
xchg
xor
lea
outsl
jge
push
mov
mov
scas
and
push
ja
mov
sahf
xor
xchg
push
sub
push
mov
jp
dec
pop
mov
lods
and
pop
jb
add
out
mov
and
mov
sub
ss
mov
xchg
scas
jae
das
mov
cmpb
arpl
leave
jl
xchg
ficoml
or
sbb
mov
mov
xor
mov
mov
fstps
sub
adc
jg
mov
add
adc
jne
inc
repz
push
xor
sbb
pop
jae
adc
imul
call
ja
loop
adc
cltd
sti
lds
popf
and
je
rorl
xor
jo
inc
pop
aaa
xorb
mov
imul
ds
imul
cmp
lods
jp
inc
push
sbb
cmpsb
idiv
push
addl
subb
adc
cmc
leave
cwtl
jne
mov
in
and
dec
jl
rorl
orl
shll
pop
push
sub
add
mov
mov
dec
mov
in
lds
pop
inc
lea
or
cwtl
mov
lea
push
mov
in
ret
addr16
rorl
out
das
sub
popf
out
repz
inc
lea
xchg
in
cltd
push
outsl
mov
jecxz
or
es
push
divl
push
hlt
pop
add
dec
pop
out
arpl
pop
inc
or
xor
rol
sbbl
pusha
rcrl
popf
sti
mov
sbb
dec
fstps
pop
or
sub
cmp
mov
out
xchg
mov
jne
cld
dec
pop
ljmp
out
pop
push
mov
dec
sub
jmp
inc
push
push
xchg
xchg
mov
outsl
and
jle
loope
xchg
stos
dec
icebp
cld
xor
push
daa
sub
scas
mov
xchg
clc
xor
lahf
jmp
int3
imul
dec
mov
mov
sbb
dec
fstps
pushw
lret
lret
in
sub
out
dec
arpl
or
jb
sbb
dec
fstps
scas
mov
mov
adcl
aas
cltd
xchg
pusha
fstl
mov
adc
push
stos
mov
mov
push
icebp
jne
push
push
leave
dec
xor
mov
pushf
add
cwtl
test
adc
iret
jmp
pop
dec
fmuls
cmp
pop
adc
mov
adc
jno
sbb
sti
cmp
xlat
stos
xchg
xor
inc
call
lock
xchg
cmc
daa
inc
push
not
xchg
pop
mov
sub
cwtl
pop
in
in
adc
jl
xor
dec
das
xchg
fidivrl
jp
or
fildl
pop
aaa
test
scas
das
inc
lcall
sti
mov
add
xchg
mov
mov
hlt
repnz
cmp
jnp
jo
popf
push
ja
cltd
or
push
mov
mov
outsl
aas
lret
xchg
cmp
cmpb
fcoml
xor
mov
adc
xchg
in
fisubl
pushf
mov
fdivr
jp
xchg
js
movsb
mov
sub
pop
dec
xchg
or
aas
pop
repnz
add
adc
lea
and
jbe
pop
pop
mov
pop
outsl
dec
addr16
xchg
sbb
jns
cs
push
pop
pop
mov
test
sub
in
mov
out
xor
dec
je,pt
dec
pop
fsubs
sbb
cmpsb
jp
mov
dec
push
mov
xlat
add
adc
lea
and
jbe
pop
xchg
push
mov
ret
mov
jp
xchg
mov
or
pusha
arpl
int
cmp
push
test
lahf
mov
in
jae
mov
mov
mov
and
mov
jg
jnp
lods
xchg
insl
and
cmpsb
pop
mov
js
fiadds
mov
sub
push
pop
mov
adc
aas
xchg
cltd
cmp
lahf
cmpb
fisttpll
mov
mov
mov
add
out
xchg
mov
sub
call
mov
loopne
push
jecxz
jo
add
sub
les
add
adc
mov
mov
xchg
or
push
push
dec
imul
jo
cltd
popf
pushf
lret
les
or
shrb
xchg
ds
sub
cmp
pop
pop
dec
dec
aas
in
sbb
push
mulb
les
or
add
scas
pop
mov
cmc
test
xor
jecxz
jecxz
inc
movsb
outsl
into
ss
adc
das
aad
add
rdpmc
inc
pop
insb
dec
in
cmp
and
lcall
sti
and
int
int3
imul
les
ret
int
int3
imul
mov
movsb
pop
or
outsb
xor
fisubrs
ss
shl
and
xor
xchg
mov
pop
sbb
push
arpl
add
fisubl
jae
lds
cmpsb
insl
adc
mov
aad
lds
xchg
pop
shll
das
movb
xor
xchg
jbe
pop
addb
dec
out
mov
mov
jg
xchg
in
std
outsb
push
xchg
mov
fcoml
insl
popa
lods
sbb
das
mov
push
insb
nop
loopne
lea
bound
pop
jns
movsb
lds
insb
pop
adc
cmp
push
jge
das
out
shr
addr16
push
dec
aad
mov
xchg
inc
adc
je
scas
jb
inc
cmc
ds
mov
push
cmpl
stos
nop
mov
sub
hlt
int3
ret
or
out
mov
in
inc
push
mov
dec
orl
pop
sbb
adc
mov
shll
imul
test
push
mull
xor
mov
mov
cmpsb
add
adc
insl
sbb
js
or
mov
push
adcb
dec
xlat
xchg
nop
leave
scas
movsb
xor
push
mov
xchg
pop
dec
aad
xor
and
testb
out
mov
sub
pop
push
cs
mov
mov
xor
pop
inc
mov
bound
imul
mov
mov
mov
ret
jbe
fisubs
or
leave
scas
inc
pop
inc
notb
xchg
dec
and
add
imul
mov
push
int
dec
fmuls
scas
push
xchg
pop
cwtl
insb
cmp
sub
insl
mov
push
out
mov
push
lds
jp
add
xor
fildl
pop
testb
mov
jp
stos
icebp
popf
cmp
popa
and
and
cmpsb
cltd
dec
cltd
xchg
mov
mov
xor
inc
loope
and
ret
xor
mov
sti
push
cmp
fildll
icebp
popf
imul
stos
jmp
push
xor
test
lds
cs
mov
xor
test
jnp
cmp
xchg
xchg
cwtl
loop
sub
jno
lret
es
lret
out
in
outsl
cmp
jns
loop
and
lcall
or
jno
ret
stos
jg
icebp
xchg
xchg
rep
push
sub
dec
fwait
adc
xlat
jnp
sub
mov
push
inc
pop
lahf
push
lcall
mov
pop
mov
inc
jnp
enter
push
xor
dec
das
mov
inc
xchg
cmp
add
loopne
or
dec
daa
test
jge
inc
fld
jp
push
push
cmp
mov
lahf
fstps
dec
cltd
roll
sub
inc
js
ret
mov
iret
test
mov
pop
ret
adc
lods
adc
push
sbb
mov
or
test
jmp
push
sbb
jbe
frstor
call
inc
sub
rcrl
leave
or
pop
jb
or
jmp
insb
pusha
mov
cmp
pop
cmp
dec
ljmp
sbb
inc
out
sub
or
push
mov
icebp
fidivrs
fdivr
ja
xor
mov
aam
popf
popa
jb
or
jbe
movsb
sti
sub
ret
inc
test
or
sbb
aam
imul
shlb
xchg
ret
add
adc
mov
jns
loope
mov
pusha
xchg
push
adc
adc
int
mov
gs
lea
daa
inc
xchg
js
ficompl
in
fld
movsb
xlat
daa
ja
sub
testb
push
ret
inc
fwait
xchg
lock
mov
lret
stc
divb
divl
xchg
sub
pop
pop
xor
mov
inc
sub
or
loopne
femms
jb
lahf
mov
add
cmpsb
movsl
es
fadd
gs
fisubl
mov
loop
sub
es
sahf
movsl
nop
gs
inc
imulb
mov
out
lret
or
cltd
sbb
roll
pop
imul
lret
icebp
push
addb
add
ficomps
pop
aam
inc
lock
cmc
dec
or
push
adc
lahf
lret
sbb
lods
xchg
mov
xchg
rclb
inc
scas
les
out
xlat
loopne
inc
scas
rorl
adc
push
data16
lret
jecxz
popf
jl
dec
mov
sahf
mov
pop
sti
ficomps
dec
pushl
into
shll
xchg
sbb
ficomps
out
sete
fs
sub
mov
fwait
mov
xchg
xchg
xchg
xchg
adc
je
scas
and
ja
das
jb
lret
ss
popf
jo
mov
nop
cmp
lds
and
popf
movsl
aam
adc
push
das
out
roll
adc
inc
adc
dec
shll
inc
or
cmpsb
cmp
ss
test
ja
mov
jl
repz
lret
movsl
push
sub
xchg
xchg
and
std
push
repz
mov
sbb
dec
lods
in
sbb
mov
sbb
sbb
fsubrl
adc
mov
ret
in
add
nop
in
dec
cmp
inc
mov
xchg
push
decl
xor
or
xchg
sub
mov
sbb
inc
xchg
in
xchg
cmpb
and
aaa
jnp
mov
les
sub
ret
test
or
jge
adc
fsts
faddl
scas
pop
sub
imul
rclb
arpl
iret
mov
push
dec
mov
inc
dec
sar
jl
xchg
ret
test
push
in
fisttps
xchg
pop
xlat
ret
clts
cli
dec
sub
xchg
mov
ret
out
cltd
or
jae
mov
dec
cmp
pop
daa
stos
iret
cmp
fs
in
fisubl
cmc
pop
lods
je
jo
ret
or
adc
adc
lods
arpl
push
aam
xor
daa
rcrb
cli
aad
out
dec
faddl
and
mov
lret
scas
xor
cmc
mul
test
in
jnp
divb
test
rolb
ret
aaa
and
mov
mov
aaa
pop
lret
es
mov
fdivrs
pop
push
cmc
sbb
ss
popl
loope
insb
into
rolb
shll
push
pop
add
mov
and
xor
xor
xchg
inc
fisubs
lret
push
xbegin
mov
aad
das
xchg
sub
call
fwait
in
inc
mov
mov
inc
in
idivl
mov
add
sbb
or
sarl
mov
xor
aas
mov
mov
inc
lcall
mov
outsl
mov
lea
outsb
xor
out
jle
stos
xchg
into
cwtl
or
mov
fstps
lcall
stc
loopne
jns
mov
int3
outsb
lock
int3
cmp
or
sti
lea
outsb
xor
inc
adc
lock
es
xor
loop
bound
mov
nopl
xor
xchg
mov
add
lock
addb
mov
je
xor
mov
and
movsl
push
sbb
sub
in
sub
int
mov
out
lret
mov
ficomps
sahf
xor
notl
out
scas
movl
fwait
adc
xor
out
rcr
pop
jo
cltd
mov
dec
pop
aas
add
repnz
or
dec
adc
bound
repz
lods
fbld
jmp
and
je
out
or
adc
out
std
adc
or
mov
push
push
lea
adc
xchg
or
dec
cmpsl
sbb
das
inc
adc
out
cmp
cmc
scas
fs
mov
lds
enter
add
cmp
jp
mov
lret
push
push
daa
fs
xlat
int3
shlb
jg
fsubrl
frstor
lds
dec
test
xor
mov
aaa
rcr
or
dec
xor
rclb
mov
cmp
sbb
je
out
outsl
push
mov
xchg
jmp
pop
popl
sub
and
or
jge
add
leave
sbb
adc
xor
mov
scas
insb
or
stos
sbb
jns
incl
shlb
ss
bound
inc
or
sub
lds
imul
mov
pop
sti
mov
jmp
fldl
aad
arpl
jmp
mov
lcall
xor
xor
lods
divb
hlt
lock
cwtl
jle
enter
xor
push
mov
add
lods
and
cmp
sbb
add
imul
pop
mov
cltd
movsb
jo
xor
in
in
test
mov
stc
ss
and
in
jle
add
clc
dec
lret
sahf
push
lods
cld
loope
lea
rorl
pop
in
xor
jno
xor
jno
or
add
jne
cmp
imul
or
adc
and
into
inc
test
movsb
test
lea
push
xor
or
das
stc
rcrb
psubq
outsl
mov
pop
aas
lods
and
push
pop
mov
push
aas
aad
xchg
montmul
cmpsb
test
pop
pop
fimull
add
addb
ret
test
mov
pop
pop
and
cmp
stc
mov
pop
jbe
mov
adc
xor
lcall
jge
stos
or
mov
sub
inc
xchg
inc
inc
mov
jno
fidivrl
xor
dec
add
imul
sub
or
push
mov
mov
out
ljmp
mov
dec
adc
sub
orl
adc
push
sbb
sbb
push
sub
push
sbb
scas
and
loope
jl
cmpsl
jl
push
or
pop
dec
jg
adc
and
mov
aad
add
in
inc
nop
xchg
scas
dec
into
lcall
mov
sar
add
jnp
inc
shll
clc
adc
jecxz
xchg
int3
stc
mov
adc
cmp
inc
jb
in
or
fs
fisttps
cmp
adc
dec
das
add
dec
xchg
mov
mov
test
fadd
and
and
xchg
clc
inc
mov
jbe
and
das
xchg
out
inc
repz
xlat
pop
jge
pop
mov
orb
fwait
fwait
shll
add
mov
in
xchg
nop
cmovnp
xor
inc
jle
ljmp
jae
mov
add
jno
cmpb
xchg
fidivs
fwait
pop
out
cmp
movsb
iret
fwait
dec
dec
xchg
and
lea
push
adc
add
push
loop
and
xchg
rcll
stc
and
mov
mov
rcll
addl
js
push
add
adc
pusha
popa
and
adc
or
test
sbb
adc
push
pop
test
aad
mov
xlat
cltd
loope
or
pop
lret
or
cmpsl
popa
jge
insb
mov
lcall
dec
push
test
lds
test
daa
push
stc
mov
mov
add
and
and
inc
cmp
dec
iret
test
test
dec
lret
adc
filds
dec
nop
xchg
jle
movsl
cld
pop
adc
mov
das
insl
lret
sbb
push
js
mov
jns
cld
cmp
test
mov
and
imul
lret
or
push
push
cmp
jecxz
pop
sahf
xchg
rcll
sub
lret
insl
xchg
lock
les
mov
stc
loope
loop
enter
jl
jns
fdivr
and
stos
mov
mov
movsl
mov
aas
call
and
test
repz
enter
mov
mov
xchg
sti
repz
aad
aam
clc
pushf
jno
and
test
mov
push
ficoms
leave
jb
inc
pop
into
repnz
adc
cmp
rcrb
scas
pop
xor
lcall
xorb
dec
lea
das
pop
shlb
add
icebp
and
mov
mov
or
or
or
push
cmp
loope
pushf
cli
cmp
int3
pop
jmp
aas
cmpsl
cmp
imul
lahf
inc
repz
out
lods
xchg
mov
int3
pop
cli
inc
xor
popf
xor
jno
repz
mov
sub
mov
ljmp
out
sbb
fildl
or
jmp
ja
xchg
inc
ret
insb
lods
out
push
sbb
clc
lods
xchg
loop
xchg
pop
jno
shrb
or
stc
dec
lods
cmc
stos
or
xlat
push
mov
bound
jmp
pushf
jg
cmpsb
jnp
mov
xor
inc
sub
cmpsl
inc
aad
add
xchg
imul
inc
scas
sahf
pop
repz
pop
fsts
or
stos
lods
stos
and
out
ss
fisttpl
insl
subl
ret
push
inc
mov
adc
or
xor
push
xchg
ret
test
es
cmpsl
mov
or
mov
push
add
insl
mov
outsb
imul
jl
stc
mov
imul
dec
out
std
mov
pop
xor
add
mov
pop
pop
fs
in
mov
add
inc
pop
scas
out
jmp
mov
sbb
hlt
das
orb
mov
jae
add
inc
ss
mov
or
pop
cld
out
dec
jne
dec
popf
or
mov
fimull
fstp
push
add
mov
sub
aas
cld
outsb
mov
cmpsb
adc
sub
hlt
movsb
jbe
out
outsl
cmpsb
in
or
cmp
std
iret
push
flds
out
stos
in
or
outsb
rol
aaa
movsb
negl
pop
sub
add
sahf
pushf
adc
cltd
test
mov
push
xchg
inc
into
leave
out
xor
add
push
push
dec
pop
jne
test
mov
out
loop
jo
sarl
in
int3
dec
ljmp
mov
sbb
test
out
ds
mov
arpl
jns
lds
test
mov
dec
movsb
dec
hlt
xor
stc
xor
cld
dec
push
sub
adc
aad
mov
sub
imul
mov
jmp
jnp
mov
test
mov
and
jg
in
xor
xchg
mov
lods
and
pop
div
cmp
dec
sbb
scas
iret
dec
inc
dec
mov
insb
repz
lods
pop
movb
loop
out
xor
cmp
movsb
lret
xchg
fcomi
js
stos
sbb
aaa
dec
and
or
fisttps
popf
mov
aam
jbe
jnp
outsl
dec
in
mov
pushf
lret
out
cmp
sub
or
xor
xchg
sbb
shr
pushf
aam
mov
push
xchg
sti
pop
shll
push
push
and
inc
inc
cmp
test
dec
sub
shl
and
lea
in
lret
and
jo
jecxz
pop
push
mov
jg
add
dec
xchg
in
mov
jae
shl
mov
push
fs
mov
gs
pop
cmp
jne
ret
add
jmp
mov
sbb
loop
adc
adc
mov
arpl
dec
cmp
pop
cmpsb
cmc
dec
ss
ficompl
xchg
sbb
jns,pn
mov
sbbl
jno
adc
mov
pop
sbb
jnp
repnz
ljmp
repz
sub
or
sub
je
xchg
test
test
mov
in
test
lret
sti
jo
fldcw
scas
inc
dec
dec
fs
nop
lods
or
mov
and
ret
and
dec
push
mov
push
ror
xlat
and
jo
int
and
adc
insl
mov
or
mov
out
or
jmp
push
fisubl
cmp
push
push
xchg
in
gs
push
imul
nop
mov
insl
fs
sub
xchg
jae
add
sahf
jmp
punpcklbw
scas
fiadds
or
pop
jmp
cmpl
dec
fistpl
dec
dec
inc
lds
xor
repz
loop
add
cld
lret
bound
lret
inc
and
jnp
add
xor
out
and
sbb
adc
cmp
imulb
mov
aas
mov
cld
adc
scas
scas
push
stos
hlt
xor
je
outsb
jae
and
xor
cld
jmp
clc
addb
nop
adc
push
mov
cmp
sub
lret
loope
cmpl
cmp
jl
ljmp
in
addr16
mov
js
decl
out
loopne
mov
lods
adc
leave
dec
mov
call
sub
rcrl
shl
cmc
or
loope
mov
repnz
aam
adc
jnp
jne
daa
testl
mov
cld
adc
mov
push
pop
push
inc
test
and
das
vpmadcsswd
mov
push
jb
shl
dec
push
mov
cmpsl
inc
inc
inc
in
inc
jp
adc
rclb
pop
insl
sarb
mov
dec
push
shlb
fiaddl
bound
jecxz
je
mov
sbb
push
mov
mov
orb
push
cmp
sbb
popa
inc
pop
leave
call
adc
test
insb
push
adcb
aaa
sbb
mov
test
sbb
xchg
mov
add
iret
dec
aam
push
add
xchg
push
jb
xor
sti
rcrl
cmpsb
imul
test
mov
push
stos
scas
mov
lds
inc
test
loope
pusha
mov
addr16
mov
jae
aad
push
push
aaa
sub
int
sub
mov
sahf
mov
dec
push
rorb
das
loop
cmp
lret
popf
dec
lods
xor
push
test
xchg
cmp
xchg
pop
xchg
mov
inc
push
cmp
and
xchg
pop
xchg
mov
xchg
lret
xlat
mov
lahf
push
or
add
sbb
roll
cvtps2pi
push
stos
mov
out
pop
push
mov
scas
xor
cmp
jnp
jle
in
outsb
shrl
das
push
mov
int
and
cmpsl
jge
insb
pushf
mov
push
mov
pop
faddp
icebp
cmp
sti
mov
cltd
cwtl
pop
sbb
push
mov
jno
cs
imulb
lock
pop
mov
ss
iret
shlb
mov
sbb
and
test
push
data16
adc
xchg
xor
add
scas
add
xor
scas
gs
push
js
cs
insl
mov
test
ds
xchg
add
pop
mov
out
fstpl
dec
xchg
xor
and
pop
popa
dec
subl
gs
sub
mov
push
jg
enter
cmp
or
mov
clc
adc
scas
rolb
xchg
cmp
scas
addr16
sub
fstpl
scas
and
jg
test
mov
shll
fdivrp
sbb
pop
sbb
cmp
sbbl
fidivrs
shlb
psadbw
or
in
mov
pushw
cmp
mov
dec
out
xchg
cmp
stos
jnp
ja
cld
sbb
or
sarb
test
jmp
movsl
cmpb
std
xlat
fbstp
mov
adc
ja
xchg
cmpsb
push
mov
lock
mov
addr16
jg
xchg
jnp
pop
repnz
insb
jne
xor
cmp
xchg
xchg
mov
dec
dec
clc
loopne
pop
mov
sub
mov
push
rclb
mov
sbb
je
push
sbb
cmp
cmpsl
outsl
testl
dec
add
aam
pusha
mov
rcll
outsb
sbb
push
adc
jle
mov
fnsave
imul
mov
inc
lock
out
dec
and
inc
pop
add
ljmp
in
insl
jg
inc
lods
cmp
dec
je
mov
insl
jg
inc
lods
cmp
push
inc
cltd
xor
out
andb
iret
stos
packuswb
cmp
aam
mov
sarb
mov
inc
cmp
add
xchg
mov
out
mov
push
jo
mov
mov
data16
adc
inc
push
std
mov
js
sbb
into
xchg
fsts
cld
jnp
mov
add
jnp
lock
adc
cld
loop
les
push
inc
mov
jmp
adc
lcall
lcall
or
mov
shrl
out
add
xchg
mov
push
pushf
mov
test
outsb
ljmp
mov
add
test
or
xchg
fnstenv
mov
mov
ljmp
fimull
lods
mov
frndint
and
dec
out
add
cli
dec
jg
aaa
xor
mov
push
mov
sbb
mov
aam
and
cmp
lods
dec
cs
cmp
cmpsb
stos
xor
xor
dec
loop
clc
jp
dec
aaa
mov
mov
jge
push
sub
pop
push
addb
lds
push
push
or
mov
rclb
stc
imul
aam
and
sub
pop
add
pusha
and
jnp
mov
hlt
int
sub
and
pop
jns
pop
out
lods
mov
shll
dec
mov
mov
jbe
lret
fisubrs
in
mov
fldt
jnp
mov
cmp
add
pop
inc
gs
mov
cmp
test
scas
push
push
jp
stos
sbbb
nop
call
push
aam
popf
loop
sub
cmp
push
scas
cmp
mov
mov
jle
add
xchg
jmp
mov
mov
imul
movsb
hlt
and
dec
push
push
push
sbb
das
dec
movsb
inc
adc
std
roll
mov
pop
rcr
mov
lret
mov
in
scas
cli
loopne
mov
xchg
add
push
mov
pop
mov
fisubrs
das
ss
orl
insl
push
pop
icebp
or
add
mov
mov
fimull
in
mov
in
xchg
fsubrs
sbb
cmp
xchg
jno
and
popf
jle
das
pop
xchg
loop
stos
xchg
push
jp
jp
dec
mov
pop
mov
std
mov
xor
add
xlat
fisubs
cmovns
mov
or
enter
inc
int
cmp
push
mov
pop
scas
sbb
xchg
popa
loop
lret
icebp
adc
popa
xchg
movl
push
xchg
or
into
call
mov
ret
ret
sarb
cld
or
pop
jnp
xor
mov
iret
mov
pop
sub
push
cli
pop
outsl
jg
shll
xlat
bound
pop
adc
pop
cld
outsb
insb
sub
lcall
aad
icebp
or
mov
inc
mov
icebp
cs
or
fs
adc
or
mov
adc
jp
int
dec
aaa
mov
out
and
inc
jmp
cmpsb
repnz
hlt
loope
cltd
adc
subl
mov
lock
push
stos
push
and
pop
shll
orb
add
and
mov
loope
arpl
xchg
loope
arpl
jge
outsb
lret
fnstenv
xchg
insl
pop
cmpsl
adc
push
fisttpl
lea
call
andb
push
stc
xchg
jo
jae
shll
iret
xchg
insl
sub
stos
jl
repz
inc
mov
mov
adc
testb
mov
sub
pop
cmpsl
sbb
iret
andl
pusha
sar
je
jo
or
jl
divb
cmpsb
movsl
inc
mov
leave
cltd
filds
inc
sahf
les
add
add
iret
lods
jl
sub
cmc
jl
pop
sahf
nop
tzcnt
mov
repz
inc
imul
inc
jg
push
xor
xchg
ja
sbb
les
mov
mov
xchg
in
xchg
test
add
insb
aad
mov
movsb
bound
mov
popa
cmp
das
pop
lods
adc
xor
inc
cltd
adc
xchg
test
dec
xchg
imul
jle
mov
or
push
sbbl
sbb
mov
das
ret
inc
xchg
int3
adc
int3
or
int
or
mov
xchg
pusha
xorl
outsl
adc
fcoms
and
xlat
jno
sti
push
add
loop
add
or
mov
je
inc
push
shl
bswap
pop
dec
mov
add
push
sub
mov
ret
sbb
jmp
dec
in
cmpsl
ret
insl
lods
or
ljmp
mul
hlt
push
xchg
sbb
mov
cld
inc
dec
adc
sub
inc
cmp
pop
mov
lahf
xchg
xchg
cli
cld
xchg
int
cmpsb
adc
movsl
fcmovu
mov
xchg
jns
popa
orl
in
dec
out
push
xchg
lds
lock
aam
cwtl
rolb
lock
es
fucomip
test
std
add
push
mov
mov
sahf
repz
sub
test
mov
xor
mov
or
push
adc
addr16
jge
add
test
les
or
mov
mov
test
push
fisubs
sub
js
mov
or
mov
pop
mov
pop
pop
inc
outsb
insb
es
mov
pop
mov
fistpl
into
rcll
dec
push
mov
mov
xchg
pop
dec
mov
enter
pop
fsubr
xchg
call
pop
mov
and
push
outsl
pop
or
lock
pop
push
push
cmpsl
xchg
ss
and
leave
je
fdivr
inc
cmp
lret
pop
sahf
and
sbb
mov
rorb
dec
insl
bound
or
rorl
mov
fs
xchg
data16
push
add
inc
mov
cmpsb
xchg
test
daa
imul
or
adc
lods
ds
in
sub
dec
pop
inc
lahf
ds
pop
sub
or
ficomps
push
int
jp
push
popa
sbb
out
sub
test
add
lcall
dec
mov
cmp
ljmp
pop
and
sub
imul
aam
mov
scas
cmp
dec
and
sub
ja
push
xor
or
sub
mov
leave
psubsw
and
shrb
into
std
ss
sbb
or
push
mov
push
insb
jbe
jae
inc
mov
rcll
sub
mov
lret
unpckhps
subl
addr16
adc
xchg
fsubrs
jo
xor
ds
aad
add
dec
cmp
pop
andb
xchg
add
inc
mov
cltd
loopne
dec
inc
xor
scas
je
std
mov
scas
jl,pn
aad
and
inc
pop
cmpsb
mov
dec
pushf
sbb
cmp
sbb
pop
xchg
xor
shlb
push
clc
adc
push
mov
dec
push
aad
cmc
fmuls
icebp
pop
push
js
cld
jge
lret
int3
les
bound
test
nop
in
jmp
std
inc
std
mov
aad
mov
shll
imul
sbb
sbb
iret
mov
scas
cli
outsb
ret
loopne
xor
cmp
adc
dec
leave
jecxz
jmp
push
adc
pop
insl
mov
add
popf
sbb
cmc
aaa
adc
imull
arpl
shl
and
and
daa
sub
adc
mov
daa
mov
inc
mov
gs
inc
sub
cmp
cltd
xorl
pushf
aaa
test
dec
cmp
clc
sbb
jge
adc
scas
pop
cld
repz
fwait
in
dec
cmp
sub
mov
dec
cli
mov
push
divb
fnstenv
inc
cmp
xor
inc
xor
je
push
pop
xchg
sub
ja
push
pop
jno
aam
cltd
xchg
fwait
sbb
repnz
lds
orl
or
mov
fbstp
xchg
call
xor
insl
test
stc
mov
enter
inc
mov
push
stc
dec
sub
mov
repz
xchg
sbb
push
xor
or
lret
xor
and
xchg
fstl
pop
jbe
mov
stos
push
int3
adc
push
jb
mov
xchg
adc
or
rorb
cmpl
es
adc
popa
js
cs
sbb
pop
fsubl
mov
jns
and
push
push
lcall
test
lods
add
data16
mov
test
popf
outsl
adc
and
ds
jp
fmulp
or
daa
idiv
mov
or
push
jns
inc
pop
cmp
xchg
into
add
mov
and
xchg
xor
mov
ret
pop
ret
inc
aaa
adc
insl
cltd
lea
aam
push
pop
xor
repz
sub
sbb
ret
jge
stos
les
pop
xlat
adc
pop
pop
push
adc
in
cmp
mov
addb
cmpl
inc
cld
cmp
sub
mov
stos
sbb
cltd
imul
push
notl
xlat
mov
xchg
xor
adc
pop
arpl
jb
push
xor
loopne
nop
xor
sub
subl
dec
push
dec
mov
test
in
and
flds
clc
mov
push
dec
xorb
dec
or
xor
mulps
shl
loopne
mov
stos
ja
ds
inc
rcrl
cmp
mov
push
dec
add
popf
insb
add
repz
adc
dec
pop
pusha
pop
aam
xchg
mov
adc
jl
dec
xchg
push
lock
jbe
and
xlat
cmp
sbb
sub
xchg
arpl
xchg
loope
pop
xchg
dec
mov
adc
sar
dec
repz
clc
push
pop
push
pushf
inc
or
mov
sbb
lea
and
sete
insl
imulb
call
push
mov
dec
movb
mov
inc
pop
mov
adc
fabs
and
push
mov
xor
xchg
aad
pop
add
dec
or
in
mov
cmp
jge
sub
or
in
repz
xor
xchg
jno
aaa
push
popf
in
imul
mov
dec
cli
dec
pop
xchg
and
xchg
mov
push
xor
rcl
cmp
cmp
push
out
adcb
xlat
lcall
in
std
inc
std
sbb
je
inc
ss
or
or
mov
inc
mov
push
movsb
cwtl
dec
aad
jb
out
sub
push
test
push
mov
add
loopne
dec
or
or
and
loopne
loop
mov
fmuls
jmp
jmp
rol
and
mov
adcl
or
push
cwtl
fwait
repnz
dec
dec
adc
xchg
repnz
scas
lods
sub
push
ficoms
popf
je
cli
sub
adc
add
pop
inc
ds
loopne
mov
xchg
pop
lea
cmp
mov
push
push
mov
movsl
pop
push
push
lods
dec
dec
pop
out
push
mov
leave
and
sub
push
mov
fdivrl
sbb
shll
add
and
sub
mov
lea
jb
fsubp
movsb
insl
jecxz
pop
push
xchg
cmp
and
xchg
cmp
fldcw
ret
mov
lods
push
enter
scas
push
ljmp
outsb
cmp
xchg
ret
jmp
xchg
sub
dec
int
mov
jne
push
add
push
fxch
push
jmp
xchg
sub
dec
faddl
push
aaa
jae
add
test
cmp
inc
mov
idivl
jo
jge
sub
repz
shr
cli
sbb
mov
scas
jle
addr16
imul
scas
xor
jno
push
mov
fdivs
hlt
jae
lods
jbe
adc
dec
xchg
into
and
loop
sbb
lods
push
pop
aas
and
cmp
push
lret
dec
ss
outsb
push
aas
mov
gs
pop
sbb
scas
add
roll
ret
aam
stos
movsb
mov
cmp
test
loopne
mov
out
or
sbbl
or
rcrb
pop
push
push
sub
add
icebp
jno
xor
pop
xchg
mov
punpckhwd
in
aaa
push
stos
loopne
mov
ror
push
test
out
jp
add
or
lahf
pusha
movsl
jb
aaa
pop
inc
sbb
push
es
cs
sbb
scas
leavew
or
sbb
testb
out
jecxz
jg
mov
xlat
cmp
test
out
inc
les
or
mov
test
jecxz
adc
mov
sbb
mov
sbb
mov
xlat
pop
daa
scas
cli
lds
mov
iret
stc
mov
inc
pop
push
dec
inc
out
push
in
outsb
ljmp
jne
imul
mov
dec
adc
push
dec
mov
push
sub
or
lock
addr16
fnsave
sub
es
xchg
sbb
pop
jp
addb
hlt
mov
out
mov
and
fwait
mul
push
inc
jg
inc
add
subl
cs
ss
es
xchg
sbb
imul
hlt
mov
stos
clc
mov
adc
in
inc
jg
inc
or
xchg
mov
arpl
sti
adc
sbb
or
lods
in
jae
cli
mov
loope
repz
xor
lret
scas
lods
sub
cmp
mov
and
test
pop
cwtl
adc
mov
movsl
lods
in
psubd
lret
loope
and
call
xor
lods
sbb
xchg
inc
inc
int
iret
push
cs
mov
rcl
sub
pushf
out
push
cli
jbe
gs
fistpl
jl
cwtl
addb
lret
dec
pop
xchg
pop
popa
xchg
jl
int3
stos
test
lods
das
test
mov
or
push
dec
cmpsl
loopne
aam
add
fimull
mov
into
inc
push
sar
or
jno
jae
lea
icebp
mov
sbb
jnp
scas
push
insl
inc
mov
dec
xor
or
pusha
and
sub
dec
dec
dec
popf
xchg
sbb
or
sub
fidivrs
mov
cmp
pop
popf
or
add
cmp
sarl
adc
mov
mov
push
sbb
dec
daa
xor
pop
adc
fldl
add
cmpl
out
xchg
add
mov
or
xor
jnp
mov
into
adc
data16
xchg
lock
sub
cmp
loop
roll
jbe
loop
in
sub
lods
and
lret
xchg
inc
pop
fidivrl
cmpsb
mov
xlat
cmp
xchg
sbb
fldl
push
fcomps
jno
inc
fwait
push
sahf
add
das
stos
ret
xchg
xor
into
pushf
ret
pop
popf
or
add
loop
repnz
mov
cwtl
xchg
push
enter
sarb
imul
imul
btr
or
pop
mov
lret
mull
hlt
push
aas
and
sti
sbb
mov
add
divb
jle
int3
shll
insl
cmp
stos
dec
xor
mov
mov
js
sub
daa
push
or
jo
add
ljmp
call
in
and
or
mov
mov
es
aam
cmp
enter
lret
xchg
inc
pop
push
sbb
rcll
cmpsb
jecxz
shll
push
xchg
movsl
shll
bound
iret
inc
arpl
push
xlat
out
jbe
mov
psubq
icebp
cmp
and
xlat
je
or
repnz
xchg
sti
jae
repz
cmc
loop
nop
mov
outsl
cmp
pushf
in
icebp
aas
xor
movsl
or
sub
fabs
insl
xchg
dec
rcrb
pusha
repnz
or
add
scas
lods
sub
pop
and
mov
and
cmp
notl
rcrb
xchg
loope
sbb
push
das
cmp
cmp
les
fisubl
push
ret
scas
cmp
loope
cltd
jp
test
stos
test
push
cs
mov
sbb
jbe
loop
cmp
pop
mov
or
jg
add
call
or
add
sahf
pop
insb
jecxz
fucomi
sahf
pop
ja
mov
pop
test
inc
pop
ja
repz
xchg
adc
ljmp
adc
in
cs
out
shrl
dec
mov
lods
sub
enter
pop
out
push
jmp
push
cmp
mov
mov
jno
mov
sbb
jmp
jl
sub
incl
jmp
dec
jo
cwtl
mov
mov
or
pop
push
push
imul
mov
test
into
inc
add
jo
add
lret
xor
out
push
rorb
jge,pn
in
mov
xorl
idivb
insb
jae
lret
fwait
loope
lea
aas
xor
movsl
cmp
sbb
rolb
mov
push
out
jle
ret
pop
jns
fcoms
mov
adc
fcomps
dec
ffree
into
or
loopne
mov
fsub
cmpsb
les
stos
rclb
std
rcrb
xchg
loope
and
xor
dec
cwtl
cmp
inc
cmpsl
out
jmp
aam
lea
inc
cmp
inc
mov
jmp
scas
fimull
mov
adc
int
gs
sbbb
adc
test
in
push
and
dec
pop
sbb
mov
cli
imul
sub
out
fs
add
cs
pop
sbb
push
or
daa
mov
mulb
mov
shrl
or
mov
push
cmp
adc
out
add
xor
xor
adc
sbb
xchg
jno
aaa
loop
mov
push
jbe
rcrb
fwait
xor
jg
gs
inc
insl
xor
bnd
xor
mov
xchg
pop
and
fldcw
xor
pop
jge
adc
xor
sbb
call
clc
mov
and
fidivl
or
jne
mov
mov
lea
ret
data16
push
das
sbb
sub
add
mov
sarl
mov
aas
rcll
loope
jmp
or
adc
mov
sbb
repnz
and
mov
jmp
sub
dec
xchg
jl
ror
sub
pop
lock
jno
mov
push
xchg
dec
insb
jno
dec
ss
fstps
fmuls
repnz
push
sub
lret
fisttps
xor
movb
mov
push
lcall
pop
cmc
pop
adc
jg
gs
jecxz
out
aas
mov
jle
enter
repnz
mov
push
adc
mov
and
dec
mov
and
sub
cltd
lret
dec
hlt
mov
inc
outsl
fwait
xor
popl
and
mov
scas
xlat
xlat
mov
lods
sub
sbb
sbb
cwtl
aas
out
push
add
leave
push
inc
loop
imul
dec
or
mov
mov
pop
adc
or
out
das
mov
mov
addr16
cmp
fucomi
mov
je
push
imul
rcll
out
and
cwtl
push
enter
lret
push
outsl
push
mov
sub
roll
cli
mov
aam
leave
push
inc
clc
fimuls
xor
enter
aas
mov
addb
fdivl
inc
movsl
lods
in
jnp
dec
xor
push
jns
sbb
xchg
jae
push
lret
push
lods
arpl
pop
out
sub
fcos
imull
fstpt
jl
xor
int3
cmp
lods
gs
in
jbe
scas
cmp
ds
inc
inc
push
sub
mov
stc
inc
cmpsb
cmp
jbe
lea
repnz
leave
out
mov
adc
aad
jecxz
xlat
int3
dec
jae
adc
push
inc
clc
push
sub
dec
mov
xor
xchg
push
xor
es
lods
sub
add
or
in
imul
inc
or
test
cmp
mull
add
std
xorb
aas
dec
mov
fadds
ljmp
xor
cmpb
cmp
iret
out
cli
pop
xor
ljmp
les
shl
and
sub
cltd
lret
dec
hlt
mov
push
add
outsb
push
mov
lret
inc
or
scas
add
lahf
mov
jmp
add
sarl
dec
mov
and
xchg
test
cli
cmpb
adc
daa
dec
jno
mov
dec
mov
and
scas
pop
or
mov
and
xchg
loope
add
mov
adc
inc
mov
cmpsl
add
arpl
sub
mov
pop
pop
scas
stos
push
push
imul
sbb
ficoms
xor
jmp
add
gs
pop
cld
adc
fwait
mul
push
inc
jg
inc
inc
sub
shll
pushf
inc
push
test
loop
jl
fwait
jno
mov
fbstp
imul
mov
add
inc
xchg
aaa
fucomi
mov
je
push
pushf
jge
sbb
shll
adc
or
cmp
lods
leave
jl
es
pushf
testl
pop
xchg
or
and
dec
icebp
insl
cmpb
adc
cmpb
mov
dec
iret
daa
movsl
mov
jmp
pop
cmc
leave
add
dec
push
outsl
adc
adc
mov
insl
cmp
and
and
lahf
jno
cmp
test
test
imul
andl
mov
loop
jns
cmp
icebp
aad
sbb
mov
cli
imul
std
xor
cmp
fs
loop
adc
in
or
mov
dec
inc
aad
das
sub
icebp
aam
test
jge
or
xchg
and
dec
jmp
lret
pop
or
lea
xlat
jo
adc
jb
ds
xchg
lret
hlt
test
jge
adc
inc
cmp
jmp
push
and
sub
sub
add
jnp
test
jge
clc
and
push
dec
or
pop
in
jae
sub
insl
outsb
mov
mov
pop
push
lret
out
xor
test
jge
fs
pop
push
jg
add
ds
cmpsb
scas
jnp
or
add
push
or
adc
jge
push
hlt
stos
pop
mov
outsl
dec
fincstp
push
push
mov
inc
sub
pop
inc
dec
and
test
jge
lds
and
cmp
sbb
adc
push
fistpll
sbb
ret
xchg
insl
data16
stos
fldl
fs
push
bound
mov
sub
mov
in
xchg
data16
movsb
outsl
add
adc
jge
test
jge
pop
cmp
mov
std
lahf
sbb
stc
sub
int
fnstsw
test
adc
fdivs
sub
push
insb
clc
and
cwtl
xchg
ffreep
mov
pop
inc
cmpsl
pop
lret
mov
xor
inc
inc
and
or
aaa
test
sbb
fisubrs
nop
xchg
ja
cmpsl
push
idivl
sbb
fildl
jns
push
sub
ret
adc
lds
xchg
pop
cmp
cld
inc
scas
inc
sbb
in
xchg
scas
jp
lods
fcomps
data16
sbb
mov
imul
adc
out
es
or
inc
adc
aad
or
in
jecxz
out
or
inc
adc
adc
ss
out
xchg
out
out
loope
out
add
cmpsb
je
mov
push
ficoml
jbe
push
cmpsl
or
mov
mov
xlat
loop
mov
cmp
nop
aad
pop
pop
out
adc
int
add
pop
aam
out
add
xor
faddl
xor
sbb
jnp
sar
insb
hlt
ret
sahf
es
cmpsl
jno
cmp
inc
dec
dec
call
cvtpi2ps
ret
fmuls
cmp
push
icebp
in
arpl
mov
mov
adc
lret
mov
leave
shrb
inc
or
and
lods
push
add
pop
adc
xlat
pop
sbb
push
jl
or
lods
add
push
cmp
jge
scas
sbb
jg
xor
addl
inc
pop
jl
xchg
pop
test
xchg
push
jl
cmp
cmp
lret
test
xchg
aad
push
cmpsb
fwait
lods
jge
inc
cmp
add
hlt
inc
jbe
push
ds
mov
xchg
jmp
outsb
div
xchg
xchg
cmp
iret
fadds
nop
mov
test
xor
clc
xchg
pop
adc
ss
xchg
fistl
mov
shlb
adc
sbb
xor
and
jl,pt
test
lcall
movsl
fisubs
mov
and
or
stos
aad
lret
fmul
fidivl
xor
add
jmp
xlat
shll
mov
jbe
nop
add
stc
adc
fwait
inc
add
cmpsb
mov
movsl
hlt
icebp
insl
pop
mov
pop
insl
dec
jl
cmpsb
inc
movq
add
xor
xchg
xchg
push
outsl
loop
aaa
and
mul
adc
in
enter
push
rorl
xor
rcll
xor
fdivl
push
sub
mov
inc
mov
sbb
test
sbb
gs
and
pop
ja
adc
mov
push
xchg
push
xchg
jecxz
testb
jb
sub
shlb
stos
div
jo
add
mov
adc
not
mov
inc
jbe
daa
mov
mov
jg
test
arpl
push
jg
sub
lds
xchg
mov
add
push
je
adc
test
push
mov
out
pop
fldl
inc
cwtl
enter
decl
jle
loopne
or
scas
mov
xchg
shrb
addr16
pop
push
cmc
pop
jg
in
loopne
int
adc
jle
rclb
xchg
mov
or
push
mov
and
inc
xchg
sub
mov
and
dec
lahf
push
jle
mov
into
xor
iret
nop
test
xor
cmc
mov
ss
jae
cld
jbe
mov
sbb
xchg
lret
mov
cld
cmp
aad
leave
arpl
rclb
mov
push
jo
fistpl
add
cmp
rclb
cmp
mov
sbb
push
and
ja
arpl
dec
jo
lcall
pop
sbb
std
cwtl
mov
adc
addl
pushl
outsb
imul
jmp
adcb
scas
sarl
cmp
sbb
jmp
js
hlt
arpl
outsb
jo
inc
test
jecxz
or
sbb
inc
aad
test
orb
push
mov
lret
adc
pop
icebp
or
xchg
xor
sub
jne
ret
lret
mov
inc
sub
push
push
sub
scas
push
xor
out
imul
mov
sbb
push
ret
adc
inc
push
xor
outsl
lods
ss
nop
ljmp
out
dec
fucomip
push
ror
dec
add
dec
ljmp
push
push
pop
mov
push
cli
fstpl
jb
jge
lods
mov
fadd
roll
jge
push
cmp
mov
arpl
mov
dec
out
je
jg
aas
sub
fisubl
pop
push
movsl
mov
pop
and
inc
pop
and
xor
dec
xor
xor
mov
mov
cli
cmp
lea
and
lods
rcrl
sti
adc
sarl
mull
std
mov
outsb
sti
shl
push
mov
xchg
mov
mov
or
jle
push
fdivl
cmp
stc
adc
idivl
cmc
sbb
sub
dec
lds
test
xor
js
jl
scas
or
scas
out
aad
cmp
enter
cmp
pop
mov
push
and
mov
lahf
lock
pop
insb
jge
cwtl
nop
mov
push
je
clc
rcrl
sbb
in
mov
outsb
stos
jl
scas
clc
ret
sbb
add
ljmp
mov
and
xchg
popa
stos
cmp
sub
and
mov
inc
loopne
fdivp
sbb
enter
insl
lock
xor
gs
push
pop
adc
mov
es
je
outsb
mov
je
out
mov
lock
cli
es
dec
loope
popl
cwtl
push
xchg
adc
pop
lods
scas
pop
imull
mov
xchg
shrb
jg
loopne
fcmovnb
jno
fldt
aam
pop
xlat
push
sub
in
out
out
testl
jae
fsubrs
or
mov
les
in
sbb
add
cld
push
pop
mov
and
shl
xorl
rorl
fcmovnb
shr
insl
gs
imul
dec
rolb
cwtl
sti
jge
arpl
jmp
jnp
pop
mov
add
cmc
adc
jmp
cmp
scas
imul
ljmp
jge
mov
dec
add
lahf
mov
and
in
pop
movsb
test
aas
dec
pop
popa
adc
adc
mov
inc
scas
jnp
jns
mov
nop
scas
ret
jno
sbb
rclb
rol
xor
icebp
insl
mov
lods
pop
cld
xchg
sbbb
clc
pop
shlb
out
pusha
in
inc
lock
and
das
or
push
cmc
push
or
jns
in
inc
lock
and
adcl
icebp
sbb
dec
insl
mov
lods
pop
cmpsb
pop
push
xchg
sub
jp
and
inc
mov
add
aad
lea
test
sahf
xchg
lea
lock
jae
test
add
jle
dec
pop
sbb
pop
mov
fcompl
cmp
leave
mov
cmp
fwait
mov
lret
or
js
mov
xor
orb
pop
mov
cmc
sub
div
rorb
push
or
pop
dec
cmp
adc
faddl
and
mov
loope
xor
inc
jle
mov
enter
lret
add
sti
test
push
sub
lea
fidivrl
push
sbb
jns
inc
mov
stos
insb
sahf
jne
mov
sbb
sub
ficoms
xchg
xor
cmp
mov
in
pop
or
dec
mov
inc
mov
aas
sub
outsb
test
and
loopne
or
mov
insl
inc
adc
mov
or
xchg
aaa
sbb
cmpsb
jp
jns
loope
jo
cmpsl
xchg
mov
lds
xchg
sbb
push
inc
cmp
mov
xchg
pop
pop
sbb
inc
imul
jl
gs
pop
mov
inc
cmp
mov
mov
mov
and
scas
fsub
cli
lcall
mov
int3
jl
gs
dec
dec
dec
roll
xchg
mov
dec
and
sahf
in
cwtl
icebp
jno
ret
jns
cmp
mov
aas
push
cmp
sub
mov
rorb
clc
xchg
or
cmp
dec
push
ljmp
pop
push
fisttpll
jle
idivb
call
fstl
inc
lahf
sbb
and
mov
add
xor
and
mov
mov
jecxz
jge
cmpsb
mov
push
and
into
es
pusha
push
or
jne
test
int
push
fisubs
in
sub
dec
ret
in
and
shlb
popa
adc
ret
cmp
test
mov
sub
xchg
pop
xor
and
loopne
mov
fists
inc
popf
addb
aas
sub
lds
sub
push
subl
xor
xchg
push
or
jno
cwtl
add
test
mov
cmp
rclb
or
or
mov
jne
mov
out
das
test
in
add
sbb
mov
dec
and
sahf
in
cwtl
cmp
xchg
dec
dec
test
sub
jecxz
lods
adc
mov
cmc
mov
mov
ds
push
pop
fs
syscall
xchg
adc
push
push
repnz
inc
mov
xor
push
sti
sbb
adc
iret
mov
in
fsts
push
adc
imul
out
xor
cmpsb
add
mov
addr16
mov
sub
push
jbe
mov
lret
ret
shll
pop
xor
fimull
mov
jle,pt
push
jecxz
xor
and
lcall
xchg
xchg
popa
push
test
xchg
leave
jbe
adc
sbb
cwtl
dec
sbb
leave
lea
inc
cmp
or
sarb
cmp
mov
arpl
hlt
bound
xchg
pop
dec
xchg
pushf
jns
jns
jp
xchg
cmpsl
mov
rcll
fwait
test
or
mov
sub
push
pop
inc
sub
pop
cwtl
push
and
idiv
out
pop
fadd
lret
jbe
lods
cld
loope
faddl
icebp
xchg
add
test
out
lock
ret
movsl
push
mov
push
dec
pop
dec
pop
int
push
nop
push
imul
sub
lret
fsubs
inc
adc
repnz
enter
push
sub
addr16
dec
cmp
push
sbb
in
iret
push
jne
sbb
pop
add
lock
pop
cmpsb
mov
jnp
adc
push
mov
mov
inc
shlb
ret
pop
and
flds
jmp
and
jle
fcom
movsb
dec
aas
mov
or
aaa
ja
popf
push
cld
xor
ret
push
mov
jo
xchg
shl
cmp
aaa
jb
sub
add
push
cld
jno
inc
xor
sbb
cmp
aam
ds
and
daa
test
mov
sahf
and
lock
movl
inc
or
add
aas
mov
inc
ficompl
push
sbb
bound
popa
addr16
dec
ds
sub
enter
pop
xchg
push
lret
and
popa
test
lcall
icebp
test
int
mull
aam
pop
mov
add
and
cs
and
aaa
sub
add
shrb
xorb
xchg
daa
jno
repnz
mov
bound
push
mov
inc
insb
ret
jmp
xchg
adc
loope
int
sub
xchg
aas
sbb
mov
and
xorl
pushf
jns
mov
xor
xor
push
mov
lock
mov
sub
add
mov
push
push
sbb
dec
imul
dec
push
adc
sub
lods
ret
cmp
mov
repnz
jns
dec
outsl
xor
iret
mov
nop
sub
es
cwtl
push
sub
cmpsb
jo
push
pop
cwtl
and
mov
scas
pop
jl
or
mov
daa
cmp
or
sbbb
cmpl
mov
and
and
jl
fists
or
or
mov
mov
popa
push
sbb
lods
xchg
xlat
or
pop
xor
mov
mov
push
sbb
ja
mov
sbb
or
adc
subb
sbb
addr16
jae
jae
ror
push
js
adc
pop
cmp
adc
cltd
aam
aam
add
xor
out
cmc
dec
fsubs
cmp
ds
in
sahf
dec
dec
xor
aad
add
lret
roll
js
push
push
stos
fsincos
jb
aam
aad
jb
clc
ds
mov
sbb
fs
flds
dec
subb
cmc
xchg
daa
outsl
ret
xchg
stc
mov
mov
sahf
addl
shll
insb
orl
cmovns
scas
aad
cs
cmpsb
test
hlt
jne
les
mov
push
cwtl
lret
hlt
lds
push
cmpsl
jecxz
inc
jb
sub
mov
repz
lods
and
push
test
dec
std
add
das
ss
jmp
test
cmp
inc
ret
sbb
push
adc
sbb
inc
dec
inc
dec
jae
xchg
jb
lret
cltd
push
push
repnz
lock
jg
ret
jl
sahf
xchg
std
dec
jecxz
mov
out
mov
cmp
add
adc
addr16
mov
popa
aas
push
bound
sti
jmp
dec
pop
hlt
das
push
mov
fistpl
or
add
dec
mov
and
cmovo
fcomi
cli
sti
fildl
arpl
fcmovnb
fsubrs
cli
cmc
subl
mov
adc
int
add
imul
jnp
cmp
jp
mov
or
das
nop
in
sarl
fs
jnp
push
pop
and
in
pop
popf
mov
out
and
rcl
ret
roll
cmp
shlb
sbb
lds
ret
shll
mov
bound
xlat
test
jae
lock
leave
out
add
mov
ja
dec
inc
mov
rorl
cmp
cmc
and
negl
sub
das
addr16
aas
xchg
jle
stos
inc
shll
in
gs
xchg
fs
fdiv
stos
inc
and
jae
sahf
jne
inc
ljmp
lcall
mov
jmp
push
mov
mov
cwtl
dec
mov
pop
es
pop
sbb
cli
ret
adcl
call
push
sar
ficompl
sbb
outsl
frstor
repnz
cmp
cld
xchg
roll
add
ret
jle
out
call
out
cmp
mov
in
aam
les
subl
pop
mov
pushl
fcmovnu
lcall
cs
sub
or
adc
fstp
push
and
sub
pop
mov
out
aad
lods
jnp
xor
jo
movsl
and
adc
inc
push
jne
pop
aam
lret
inc
jbe
jge
inc
or
sub
lea
jecxz
inc
xchg
jns
ljmp
push
pop
lahf
repz
out
lret
add
mov
stos
xor
or
mov
js
pop
and
roll
f2xm1
imul
mov
jecxz
mov
pop
mov
daa
pop
pusha
mov
mov
and
loop
jecxz
inc
ret
sbb
shlb
jg
xor
cs
inc
push
jne
pop
mov
pop
movsl
jns
les
movsb
aas
xchg
jp
scas
jle
mov
mov
call
jmp
insb
or
lret
pop
mov
test
and
push
pop
pusha
push
dec
xchg
xchg
and
frstor
mov
cmp
and
sbb
in
or
outsl
pop
lds
clc
insl
pop
clc
out
and
sub
pop
jecxz
dec
adc
pop
jo
add
jle
out
xor
push
mov
jb
icebp
mov
inc
sbb
fs
push
add
add
dec
dec
cld
pop
aam
outsb
or
mov
ja
or
and
mov
popf
stos
lret
out
aas
dec
les
or
jbe
divl
cli
jnp
movsb
call
clc
push
mov
adc
push
inc
dec
xor
sbb
sbb
push
pop
pusha
inc
mov
jnp
inc
xor
inc
sbb
xchg
test
mov
sbb
icebp
pusha
add
jne
cmpsb
test
out
xchg
test
sub
ja
repz
or
mov
or
or
cwtl
jmp
xor
jne
filds
out
inc
ja
sahf
add
add
xor
xor
sbb
lcall
adc
push
adc
neg
mov
xchg
roll
sub
and
sub
insl
jp
push
ss
mov
repz
pop
inc
xor
repnz
add
mov
push
push
push
outsl
popa
clc
push
es
clc
xor
adc
sub
jl
pop
mov
fucomip
lds
push
repz
dec
addb
mov
movb
push
adc
push
mov
cltd
ljmp
sbb
scas
xchg
rorb
and
or
sbb
mov
push
or
jns
pop
jle
ds
push
sbb
dec
sub
add
mov
insl
ret
outsl
and
and
mov
sarl
mov
xchg
int3
out
add
aaa
das
int
jne
test
fsub
aad
inc
inc
out
inc
lods
divl
jl
lock
xchg
mov
adc
xor
stos
adc
gs
enter
nop
fucom
xchg
and
jno
dec
stc
and
cmp
out
pop
xor
lret
mov
lret
cltd
fdivrl
xlat
mov
xor
or
test
xlat
sub
push
jae
repnz
adc
xchg
ret
out
stc
scas
jb
jno
and
lock
cmp
arpl
and
fistpll
inc
push
and
add
mov
xorl
pop
insb
inc
xchg
inc
or
or
into
mov
sahf
fstl
inc
push
push
sub
push
push
pop
ret
mov
cmpb
ret
popa
daa
mov
movb
mov
xor
fcom
or
dec
mov
push
lock
pusha
inc
push
xchg
test
push
decl
pushf
divb
lds
stc
jns
mov
int3
mov
mov
in
sub
xchg
jecxz
or
push
ret
loope
rcl
jns
pushl
mov
push
andb
leave
es
in
jmp
pop
and
rcr
add
aaa
adc
sub
cld
fs
addr16
cmp
or
adc
add
cs
into
ljmp
test
push
or
pop
xchg
lret
loope
or
dec
xchg
lock
in
ja
les
inc
lds
les
insb
rorl
and
rcl
add
mov
fwait
sti
pop
loope
mov
adc
jns
cs
xor
leave
inc
fsts
add
xor
cld
xor
mov
adc
je
ret
in
cld
fsubrl
mov
and
push
loope
push
in
aam
mov
pop
jge
pop
aam
sti
adc
cltd
mov
sbb
mov
cmp
popaw
and
jecxz
lods
stos
mov
rcrb
in
xor
xchg
pushf
sbb
icebp
xor
loope
push
or
jmp
inc
out
lcall
clc
mov
fs
push
scas
lret
shl
rcrb
sub
addr16
bound
inc
out
xor
sub
int
cmp
inc
fs
xor
jp
cmp
and
sbb
sbb
insl
xchg
repz
arpl
std
pop
fst
les
adc
aam
inc
mov
sbb
out
and
mov
or
arpl
adc
adc
push
int3
pop
adc
mov
pop
inc
mov
push
in
leave
bound
jmp
test
inc
inc
mov
and
mov
shrl
ret
or
imul
adcb
xchg
cmc
and
ds
stos
sbb
mov
add
test
adc
addr16
xor
dec
sub
int
cmp
sbb
sarl
push
mov
fidivrl
dec
mov
paddq
mov
adc
add
jo
pop
fmul
inc
sub
cmpsb
jge
mov
mov
push
mov
xchg
or
ljmp
jns
jl
ja
inc
inc
xchg
fs
rol
rolb
and
push
jne
js
les
jg
sbb
std
cmp
add
and
push
ret
cmp
test
sarb
cmp
adc
rclb
int
mov
and
rclb
sub
push
sub
mov
mov
popf
mov
stos
pop
adc
call
jl
in
mov
movsb
dec
inc
shrl
out
pop
xchg
mov
pop
cmc
inc
inc
les
popf
mov
enter
adc
lret
movsb
dec
inc
shrl
jmp
fucomp
dec
lds
enter
xchg
out
fsub
stos
push
xchg
inc
andb
sti
pop
push
mov
mov
pop
dec
add
xlat
pop
pop
inc
out
leave
push
enter
aam
add
and
rcll
rcrb
insl
les
cmp
cwtl
stos
jo
adc
addr16
scas
mov
adc
enter
sub
inc
push
or
push
fmul
dec
lods
ret
mov
inc
cmp
xchg
push
push
jge
sbb
adc
xchg
iret
add
sti
mul
adc
std
mov
xor
pop
pop
lcall
jmp
push
test
xchg
adcl
test
add
xor
jp
scas
adc
jmp
sub
jmp
lcall
repnz
call
pop
mov
mov
incl
gs
je
fcmovnbe
push
out
iret
dec
inc
dec
inc
ss
push
ds
mov
mov
popa
xchg
mov
push
loopne
out
add
jnp
test
mov
mov
enter
inc
sub
mov
lock
xor
jp
scas
adc
fidivl
mov
xor
pop
cmp
aas
cmp
adc
rolb
popf
cltd
scas
jmp
out
jno
fbld
mov
dec
dec
outsl
xchg
into
push
mov
insl
mov
mov
cli
out
lret
and
jmp
lret
mov
cmp
mov
lahf
hlt
xchg
or
fadds
cltd
mov
cmp
loopne
add
mov
fbstp
shr
aam
sub
jo
imul
xor
lods
or
movlps
xor
cmpsl
fdivr
fnsave
addr16
xchg
cmp
lret
sub
mov
out
mov
pusha
int
out
cwtl
into
dec
mov
rcr
adc
inc
xlat
ss
and
mov
pop
and
repz
jb
cmp
push
inc
push
add
mov
sahf
jne
nop
push
fldcw
ds
push
divl
stos
in
cmpsb
dec
out
mov
xor
pop
inc
cmp
out
lahf
loope
xchg
xchg
sbb
lock
xor
mov
mull
mov
pop
cmp
dec
int
movsl
mov
mov
mov
dec
jns
and
push
pop
jmp
mov
stos
ret
pop
sbb
xchg
adc
jo
adc
xor
cmc
sbb
idiv
fisubl
fstpt
push
es
in
push
xor
rcrb
sti
push
jl
jl
test
hlt
and
shl
lods
xchg
std
xorb
cmpsb
ljmp
push
lret
cli
or
aad
add
and
aam
daa
shll
int
add
inc
or
test
popf
push
daa
adc
jo
mov
out
pop
cmp
ret
xor
mov
push
ljmp
hlt
xchg
data16
scas
and
int3
rorb
pop
popl
adc
sub
push
cwtl
fsts
xor
pop
mov
ja
pop
xchg
orb
testb
mov
pop
test
inc
fistpl
scas
adc
lods
leave
and
and
jo
mov
push
aas
dec
cmpsb
push
popa
sub
and
std
xchg
or
push
pop
rcll
and
add
xlat
xchg
sbb
sbb
mov
daa
adc
jo
mov
jno
or
jno
adc
inc
pop
fs
fsubrl
xchg
push
jnp
rep
shrl
loop
dec
jecxz
and
mov
repz
iret
aad
or
push
sarl
and
arpl
and
stos
cmp
fistpll
cmc
shr
pop
imul
add
loop
lahf
dec
xor
sahf
subl
fcmovnu
lcall
rolb
or
fs
imul
jne
ljmp
cmp
nop
xor
in
ffree
mov
cmc
out
aam
cmp
adc
scas
pop
int
sar
push
and
xor
daa
mov
sbb
cli
int3
int3
dec
cmp
incb
jne
cli
dec
ret
leave
jbe
mov
push
stc
cmp
jne
xlat
test
push
ret
subb
fldcw
pop
mov
js
push
and
decb
xor
dec
xchg
dec
jb
xor
jmp
xor
cmp
into
insb
call
dec
and
pop
outsl
xchg
adc
ljmp
sub
cmpl
cmc
xorl
fimuls
mov
jne
mov
add
mov
inc
cmp
xor
shl
xor
jno
pop
cmp
inc
sub
mov
dec
pop
cmp
mov
inc
je
std
flds
loopne
jbe
adc
test
xchg
jae
orl
out
sbb
je
xchg
iret
test
cmp
mov
in
inc
das
es
xor
test
inc
fcoml
ss
jbe
cmp
xor
pop
and
push
cwtl
js
idivb
scas
popf
lods
pusha
mov
jmp
frstor
outsl
xlat
addr16
jne,pt
in
pushf
jns
adc
sub
push
dec
clc
push
aaa
mov
test
add
pop
adc
scas
sub
mov
stos
or
int
or
insl
xchg
nop
test
inc
movsl
fildl
int
adcb
mov
mov
lock
adc
sub
pop
cwtl
sub
lods
cld
hlt
push
mov
out
jb
hlt
lcall
mov
pop
mov
mov
fisubrl
les
xor
inc
xchg
or
pusha
mov
ret
xorb
out
ss
adc
sub
mov
stc
gs
sbb
cmp
divl
add
roll
rorb
sahf
add
sub
push
push
test
adc
push
std
xor
ljmp
or
dec
xchg
mov
js
sarl
sahf
imul
inc
pusha
cmp
leave
xlat
gs
dec
cmpb
cli
mov
pop
push
mov
fs
fdivl
rcrl
mov
repz
ja
xchg
sub
adc
pop
popf
leave
je
fisttpll
dec
mov
into
nop
mov
aas
cmp
mov
pop
xor
gs
leave
or
inc
hlt
test
aas
dec
adcb
pusha
xchg
jmp
adc
cltd
or
or
fcmovne
jp
popf
enter
icebp
popf
outsl
jp
dec
test
mov
pop
xchg
add
js
pop
adc
fistpll
jge
ds
ret
xchg
in
xchg
outsb
hlt
fwait
rcrl
in
adc
mov
sar
popf
dec
int
xchg
mov
mov
ss
pop
dec
xchg
mov
ljmp
pusha
or
pop
or
push
sahf
in
sar
dec
js
call
adc
push
mov
dec
adc
jecxz
je
testb
insl
or
mov
data16
mov
mov
or
outsl
sahf
popf
outsl
flds
mov
mov
mov
insl
repz
stos
iret
dec
pop
and
scas
jmp
mov
mov
lods
push
sub
xchg
addr16
fiaddl
orb
or
or
stos
push
mov
sub
imul
hlt
pop
mov
add
xchg
fsubs
ds
cli
ret
mov
data16
dec
into
ss
fsubs
pop
ret
sub
test
dec
and
pusha
mov
dec
cmp
or
xchg
jnp
orb
mov
mov
ljmp
dec
jne
sbb
ja
jmp
add
mov
mov
jb
push
je
cmp
xchg
xchg
or
jp
icebp
push
xor
jmp
mov
in
adc
sub
dec
or
pop
or
test
mov
adc
lds
dec
adc
add
mov
popa
push
in
cmp
mov
add
test
sbbb
fbld
push
scas
push
sarb
aas
adc
jbe
fdivs
cwtl
dec
sbb
adc
jecxz
xor
jmp
mov
pop
imul
or
xchg
pop
popa
push
dec
push
lcall
jp
repz
and
cmp
fldt
ljmp
push
or
mov
cwtl
leave
and
sti
cmp
sti
jmp
mov
ja
jle
rcrl
cld
jae
mov
in
jns
jno
inc
sbb
mov
pushf
or
add
xchg
std
jecxz
ficoms
mov
push
and
sahf
aam
xchg
jae
cmp
mov
popf
dec
jbe
fistl
push
add
icebp
cmp
stos
sub
adc
aaa
iret
xchg
cmpsb
pop
and
jmp
js
inc
adc
lea
inc
pusha
idivl
or
pop
cmpl
push
js
rol
mov
adc
aas
push
inc
jb
sbb
mov
fcoml
mov
pop
dec
das
dec
xlat
sub
adc
outsb
inc
cwtl
imul
mov
test
mov
jo
pushf
shll
rol
inc
fists
cmpl
adc
adc
test
imul
jb
push
sbb
sahf
fcomps
jb
fsubl
imul
jge
loopne
rcll
in
test
xor
xor
ret
jnp
adc
lock
lret
sbb
dec
andb
adcb
xor
xor
stos
jnp
or
iret
ret
pop
fstps
pop
push
push
or
dec
push
xchg
jl
imul
cmp
and
popa
int
out
adc
repnz
scas
enter
mov
mov
js
and
xchg
aaa
sbb
popa
and
dec
and
and
shll
sub
dec
std
fbld
dec
stos
out
xchg
shll
repnz
sub
sbb
xchg
imul
std
ret
push
xchg
fdivrl
mov
jne
leave
sbb
rcrl
push
adc
insl
fs
test
jge
test
jge
test
jge
inc
rol
inc
xchg
sub
test
cmp
sbb
adc
add
dec
loopne
xor
pop
sub
and
loope
cld
enter
adc
ljmp
fildl
repnz
mov
insl
inc
sub
rclb
lods
aas
push
lahf
xchg
ljmp
push
mov
dec
test
jge
fisttps
mov
js
xor
inc
xor
cs
add
call
fwait
out
lods
ret
sahf
fldcw
and
mov
cmp
fs
dec
adc
fdivrl
add
enter
mov
adc
jge
push
mov
jmp
shlb
cmp
popa
in
jl
adc
jge
push
mov
stos
inc
xchg
adc
sbb
adc
ret
xchg
scas
mov
rcrl
sbb
loop
cmpsl
es
dec
fs
xor
aam
pop
dec
mov
out
mov
xchg
out
xor
call
mov
iret
addl
mov
stos
fsts
insb
sbb
and
ds
or
js
mov
mov
pop
adc
inc
inc
lods
jo
adc
mov
nop
xchg
cmp
insl
mov
jecxz
in
pop
xchg
les
aas
xor
insl
add
mov
jne
xchg
loopne
mov
rcll
leave
js
push
jb
cltd
fmuls
pusha
and
ret
mov
xor
push
push
cmp
ret
sub
mov
sub
and
jb
xchg
outsl
rcrb
xchg
mov
pop
jmp
jg
pop
jp
jg
or
daa
dec
or
mov
sub
push
mov
mov
jae
movsl
jl
in
shr
mov
or
nop
jno
mov
repz
mov
loopne
or
rcl
jns
mov
ljmp
adc
mov
push
arpl
dec
fldl
or
lods
sub
mov
mov
inc
mov
pop
xorb
adc
pop
divl
int3
xchg
dec
pop
mov
filds
adc
popa
cmp
inc
mov
pop
adc
push
jbe
or
das
jno
cmp
iret
adc
sbb
push
cmpsl
shlb
aaa
enter
push
push
jnp
sbb
cmp
inc
and
sub
loop
test
adc
mov
sub
cmp
dec
cmp
cmp
push
mov
push
add
mov
pop
je
sbb
pop
cmp
cmp
jg
inc
jbe
ljmp
ficomps
int
add
push
ds
ljmp
jae
subl
xor
aam
or
or
and
and
addl
and
cli
ljmp
shlb
rol
mov
test
das
not
push
or
sahf
and
add
jo
ret
popa
lcall
in
sub
mov
pusha
addr16
mov
inc
xchg
idiv
pop
mov
rorb
mov
or
adc
jge
test
jge
fldenv
sub
inc
test
daa
test
jge
jmp
mov
cmp
fs
jmp
or
test
jnp
insl
fs
cmpsb
add
xchg
push
xchg
je
adc
jge
int3
repz
lods
push
cmp
jge
xchg
adc
movsl
sahf
ja
test
jge
nop
ja
in
pop
aaa
xchg
test
jge
sub
fwait
jns
data16
fs
notl
push
lcall
jnp
insl
fs
or
cmp
adc
jge
outsb
jge
fisubrs
jnp
insl
fs
xor
push
mov
xchg
jg
adc
jge
shrb
and
mov
test
jge
popf
shll
test
jge
xor
mov
jnp
insl
fs
ljmp
arpl
fs
jl
cwtl
fistpll
adc
jge
repnz
pop
iret
test
icebp
test
jge
push
mov
test
jge
cmp
or
xchg
pushf
in
test
jge
pop
sbb
add
adc
jge
adc
mov
mov
adc
jge
test
in
jno
loope
test
jge
lods
or
xor
adc
jge
xchg
xor
outsb
pop
or
adc
fs
cmpsl
ret
push
je
scas
outsb
imul
jge
enter
xorl
cmp
jge
jne
frstor
lahf
clc
inc
test
jge
divb
sub
into
inc
mov
adc
jge
xorb
pop
adc
test
jge
adc
mov
inc
test
jge
test
int
test
adc
jge
cltd
nop
cli
add
mov
insl
fs
bound
or
and
cmp
jge
shl
push
mov
adc
jge
jle
mov
sbb
insl
fs
mov
pop
lods
jbe
adc
jge
outsb
stos
ljmp
xchg
fistps
test
jge
fs
mov
test
jge
mov
cli
mov
test
jge
sbb
adc
dec
push
and
fs
in
imul
fmuls
inc
test
jge
andb
les
adc
jge
adc
and
fs
aaa
insb
push
cmpsl
push
jl
inc
test
jge
sbb
cli
insb
pop
push
xor
insl
fs
or
dec
lods
mov
adc
test
jge
rolb
push
rclb
jnp
insl
fs
shlb
repz
inc
test
test
jge
out
mov
sbb
adc
jge
xchg
xchg
xchg
dec
lret
test
jge
pusha
push
test
sbbb
insl
fs
dec
mov
xor
fs
in
or
ret
jg
adc
jge
inc
jae
cli
test
jge
cmp
sbb
jecxz
cmp
fs
sti
ljmp
test
jge
or
push
cmp
jge
inc
and
cmc
testb
test
jge
and
cmp
scas
push
cmc
push
test
jge
ljmp
push
test
jge
cmp
inc
decl
cmp
jge
dec
jns
cmp
aaa
scas
incb
xchg
push
add
pop
sub
fwait
adc
push
mov
insb
jne
jae
mov
sbb
fbstp
enter
cmpsl
rcrl
cmp
push
xchg
or
movsl
inc
fisubrl
mov
pop
cmpsl
xor
arpl
mov
xchg
out
lcall
xor
inc
adcb
pushf
outsl
test
mov
mov
xchg
adc
mov
fimuls
pop
sub
push
xchg
add
scas
jne
jae
insb
jp
and
sbb
push
loop
or
test
jge
test
jge
ret
lods
daa
bnd
jne
and
in
adc
mov
fadd
push
jmp
sahf
decb
loopne
sbb
hlt
sub
pop
fs
jge
sub
enter
jmp
call
mov
xor
xchg
sub
pop
scas
cli
mov
mov
pop
and
mov
loop
mov
xchg
ss
mov
bound
jecxz
insl
aaa
pushf
pop
fiaddl
fidivl
test
cmpsb
or
mov
nop
inc
pop
popa
dec
dec
sbb
std
lret
sbb
xchg
pop
push
xorl
fdivr
and
mov
lret
jg
ret
xor
mov
ljmp
repz
or
mov
sub
cmp
in
mov
daa
loopne
pop
dec
test
outsb
jo
adcb
push
stc
aad
dec
roll
jecxz
dec
sarl
adc
fld
adc
mov
sbb
lods
nop
sarl
test
stos
scas
inc
jb
out
push
jns
cmpsb
adc
out
cwtl
ffreep
adc
push
add
pop
cmc
jbe
mov
xchg
inc
jo
arpl
scas
clc
adc
inc
or
or
jno
sub
fwait
pop
mov
rorl
mov
jne
sti
outsb
xchg
aaa
and
jbe
mov
ja
push
inc
inc
add
scas
mov
lcall
daa
in
frstor
add
addr16
xor
mov
fwait
and
jecxz
and
imul
loopne
lock
mov
xchg
and
lods
ja
fbstp
sbb
xchg
inc
mov
imul
sarb
xor
aam
lcall
insl
inc
pop
dec
pop
jg
jae
js
or
adc
lahf
push
push
xor
rolb
lret
cli
jae
jle
repnz
fistl
cmp
pop
imul
or
mov
aam
sbb
addr16
sbb
mulb
dec
jp
dec
mov
and
arpl
out
pop
faddl
pop
lods
sub
in
outsb
dec
cmp
add
fcomps
or
or
inc
and
push
repz
push
xor
dec
and
cli
mov
imul
mov
jae
dec
push
out
jmp
dec
repnz
sti
push
xchg
int
inc
push
pop
adc
ds
jno
mov
cmp
pop
sub
push
aam
imul
imul
es
pusha
xchg
rcrb
mov
push
gs
mov
lock
push
fucom
lcall
loope
mov
lock
lods
or
imul
int3
repnz
clc
es
push
jmp
mov
and
je
jae
sbb
outsb
cmp
les
insl
gs
pop
jp
fst
mov
add
fwait
xchg
xchg
mov
lods
and
fidivrs
in
jb
enter
inc
repnz
xchg
push
movsl
add
shrl
and
filds
xchg
arpl
cs
mov
ret
xchg
push
or
stos
push
ret
into
fcmovbe
ss
xchg
pop
mov
fdivs
mov
push
jg
fistpl
daa
xchg
cmp
cmp
mov
outsl
adc
iret
cmp
popf
jb
fmul
xchg
inc
out
pop
jmp
sbbl
jg
cld
push
and
jmp
std
lods
into
pop
pop
pop
insb
sub
aad
mov
cld
loop
in
test
dec
lret
xor
sbb
cmp
cmpsl
outsl
in
fiaddl
scas
or
sbb
pop
leave
stc
xor
sbb
das
push
push
adc
dec
stos
adc
movsb
mov
mov
mov
mov
mov
xchg
std
mov
movsl
xor
pop
mov
sbb
xchg
movsb
or
inc
jb
mov
jmp
mov
push
jne
pop
ret
shl
mov
and
stos
repz
pop
mov
jae
jg
std
bound
add
pushf
test
addr16
dec
mov
in
int3
lds
cmp
push
mov
cmp
jo
je
fbstp
and
push
jmp
jb
push
push
or
mov
pop
jl
sub
push
mov
add
inc
stos
push
jecxz
xchg
jg
lods
pushf
loopne
cmp
mov
mulb
cwtl
insl
or
dec
mov
sti
les
lods
cmp
push
xor
mov
cld
add
or
mov
sarb
xlat
inc
jle
dec
pop
mov
stos
mov
test
inc
cmp
or
pusha
xor
shlb
mov
fwait
scas
sar
jg
dec
or
push
mov
lods
push
sbb
pop
cltd
lea
mov
stc
inc
pop
add
int
sarb
setbe
pop
test
push
rcrb
cltd
lahf
leave
jp
dec
push
in
test
pop
in
mov
add
aam
lret
inc
xchg
cmp
sbb
sahf
shlb
jno
mov
fists
jecxz
mov
cmp
jns
add
and
ja
cmp
and
sahf
movsl
jnp
sbbl
mov
pop
pop
push
add
mov
xlat
negb
push
xor
rcrb
in
add
mov
popf
mov
xor
bound
push
es
xor
pop
pushf
xor
push
mov
sub
into
mov
bound
jo
jbe
adc
pop
xor
pop
int3
xchg
cmovbe
shl
mov
fs
aam
outsb
jmp
sub
pop
icebp
xlat
pop
jae
push
sbbl
jno
mov
fildll
mov
mov
gs
insl
insl
iret
in
ret
icebp
out
mov
mov
por
movsl
dec
push
in
test
leave
dec
sub
std
sbb
es
jge
cld
cmp
lea
insb
add
cmp
cmp
rcrb
xor
push
outsb
sti
jg
icebp
cli
mov
push
les
xchg
pop
scas
sub
repz
mov
popa
add
into
ja
sahf
mov
push
outsl
call
shlb
mov
or
mov
push
cmc
mov
aad
in
testb
shlb
xchg
fcomp
in
add
fcoms
int3
daa
mov
arpl
mov
outsl
or
popf
xor
inc
bound
xchg
push
xor
push
xor
mov
enter
mov
xchg
mov
push
leave
icebp
or
insl
ss
sbb
fsubrs
hlt
sub
mov
cmpsl
push
adc
scas
movsb
sbb
add
push
into
add
ret
adc
fs
mov
stc
enter
pop
push
or
loop
sub
or
dec
push
jne
jae
mov
out
lds
push
push
sbb
cli
dec
cwtl
cli
test
ret
mov
pop
mov
mov
adc
push
mov
loopne
addl
push
jb
orl
jno
or
mov
loope
inc
daa
and
mov
mov
test
inc
cmp
jge
adc
jl
adc
mull
jle
cs
or
jnp
push
daa
das
test
jae
out
dec
mov
js
sub
xchg
fwait
js
mov
cli
push
mov
shll
out
pop
aad
ret
mov
push
cmpsl
and
cmp
sbb
pop
outsl
lock
daa
pop
inc
push
call
mov
pop
cli
lods
pop
and
sarl
mulb
cmc
sub
xchg
mov
push
cmp
dec
or
cmp
call
xchg
sbb
dec
sbb
mov
xchg
push
pop
mov
jae
sbb
push
insb
mov
insl
jns
lock
cmp
nop
mov
and
dec
call
pushf
ret
aad
enter
nop
jb
scas
pop
leave
pushf
call
fs
leave
je
and
mov
aam
push
mov
push
adc
mov
xor
rorb
sub
pop
pop
int3
fwait
mov
mov
sahf
ljmp
add
xchg
lods
adc
dec
insl
sub
jns
js
fstpl
push
push
out
imul
lock
cmpsb
xchg
fmulp
or
sub
push
xor
sahf
sub
lcall
mov
popa
pop
inc
lret
sarl
lcall
gs
xchg
fmuls
mov
jg
xchg
jo
pop
sahf
dec
lds
dec
fwait
arpl
mov
or
addr16
lods
sbb
ficoms
fs
popa
mov
enter
add
adc
shl
call
add
iret
out
jl
and
fadds
push
inc
mov
push
pop
inc
cltd
dec
pop
js
rcrl
sub
lods
mov
in
sub
mov
mov
jg
imul
in
add
or
aas
jo
lea
and
or
cwtl
lcall
and
or
jl,pt
xor
push
cmp
jae
jb
dec
fcomip
cwtl
cmc
jno
pop
inc
dec
push
mov
sub
cwtl
ds
in
jge
scas
sbb
sub
or
cmp
add
sub
cs
cmpb
pushf
jge
jge
lock
pop
pop
dec
dec
jne
fdivrs
test
aad
movsl
xchg
xchg
cmp
jmp
scas
scas
in
shl
cmp
mov
clc
test
fldenv
stos
imul
mov
pop
pushf
loopne
aam
sub
pop
cld
rcrl
mov
jmp
lahf
sahf
xchg
sub
cmp
jle
jae
inc
fbstp
call
cltd
xchg
insb
icebp
int3
jl
xchg
test
cli
leave
pop
cmc
and
jp
jecxz
sbb
cmpsl
or
pusha
pop
outsb
inc
enter
jbe
mov
inc
clc
rclb
ljmp
and
fidivl
addr16
daa
push
cmp
push
rclb
fcomps
dec
pushf
pop
xchg
scas
mov
add
sub
push
cmpb
cmp
movsb
fs
test
pop
pushf
mov
call
sbb
jne
push
and
jle
xor
in
sbb
stc
sub
lods
in
aaa
cmp
hlt
orl
aam
xchg
fisubs
jae
arpl
jecxz
dec
push
hlt
cltd
push
ss
inc
insb
rol
mov
pop
in
mov
push
mov
mov
sub
mov
inc
sbb
js
shlb
pushf
and
out
hlt
loope
std
inc
loop,pt
mov
push
push
inc
jmp
or
pop
and
lock
popa
loope
inc
aas
fcompp
imul
pop
jo
in
mov
add
sub
cld
jmp
enter
mov
rcrl
dec
aam
lcall
out
roll
js
out
dec
sbb
std
or
lds
jb
mov
push
dec
jmp
std
pop
aaa
out
movsl
out
and
stos
add
lret
stos
or
addb
cwtl
mov
iret
jge
rcrl
lock
xchg
lds
mov
mov
mov
mov
xor
xchg
sahf
pop
mov
incl
xor
inc
mov
jae
out
out
fcmovu
pop
fucomip
push
daa
ja
pop
dec
int
pop
fimull
pop
add
or
adc
icebp
rorl
call
lods
inc
lret
test
push
repz
sbb
out
sub
andb
cmp
daa
xchg
mov
fcoml
push
push
aad
jg
loope
aas
idivb
xor
in
cmp
lds
and
sbb
cltd
mov
sub
ja
mov
sbb
xlat
sbb
andb
sub
push
fldcw
pop
jl
test
and
or
int
add
push
jns
enter
fs
int
xor
inc
ja
imull
mov
jne
sub
fstpt
enter
adc
push
dec
in
lods
rcrl
or
fildl
loope
mov
fdivrl
adc
repnz
js
push
test
sbb
mov
sahf
dec
inc
leave
loopne
xchg
mov
fsubrl
push
mov
adc
mov
cltd
dec
movhps
ja
jnp
sbb
jl
cmp
xor
incb
xchg
inc
jmp
sarb
mov
xchg
jno
jmp
mov
push
sbb
xchg
sbb
adc
clc
dec
xlat
xchg
rorb
out
xchg
jnp
cmpsl
or
sub
pop
popf
leave
cmc
sbbb
or
ds
test
aad
inc
scas
xor
dec
int3
xchg
ret
push
cwtl
jb
movsb
fldt
pop
lcall
sub
out
adc
or
aas
inc
or
mov
dec
mov
lock
in
mov
mov
iret
add
leave
mov
lcall
movsb
enter
lods
xchg
jns
loope
inc
adc
shll
rcl
mov
sbb
push
dec
dec
outsl
mov
mov
iret
inc
sti
push
cmc
cmp
dec
lock
add
and
loope
adc
jo
fs
push
std
inc
jle
cmc
inc
inc
jnp
fcom
aas
icebp
jae
sub
daa
mov
loope
mov
or
fbstp
push
adc
mov
rcr
jecxz
lcall
dec
fwait
or
cli
fs
jo
sbb
pop
icebp
inc
inc
leave
out
inc
push
jp
sbb
or
jl
insl
pop
and
test
loope
xor
loope
or
addr16
inc
clc
imul
cmpsb
enter
push
pop
dec
aaa
jl
loop
scas
jno
sub
es
adc
cmpsl
mov
inc
popa
pop
dec
ret
push
das
xor
mov
sub
mov
sbb
popw
add
inc
inc
pop
gs
jns
es
outsb
arpl
sbb
adc
sti
add
shlb
xchg
xchg
iret
jb
daa
mov
inc
icebp
popa
lock
jp
rcrl
ds
cld
dec
push
push
out
scas
fisubl
xor
or
js
loopne
outsl
cmpl
mov
jle
insb
out
dec
daa
cmp
clc
push
into
sub
jge
inc
es
mov
push
dec
frstor
mov
cld
pop
fisubs
insb
or
mov
stc
or
sub
add
inc
and
add
cmp
lcall
int
sub
inc
lret
negb
mov
xor
je
lret
sub
leave
repnz
jns
push
or
push
ret
sub
push
pusha
das
shrl
sub
add
dec
aad
jle
pop
or
das
mov
mov
adc
cmpsl
mov
jl
iret
es
and
insb
imul
add
sub
mov
movsl
or
incb
mov
and
in
mov
in
shrl
jno
cmpsl
nop
mov
and
call
mov
ret
push
xchg
push
out
mov
xor
mov
jb
mov
sbb
idivl
lea
sahf
adc
xor
repz
dec
je
out
imull
xchg
arpl
xchg
add
xchg
and
mov
outsb
push
fsts
cmp
sahf
jle
xor
pop
sub
pusha
add
push
clc
mov
xor
lds
pop
movsl
jle
dec
add
cmc
or
mov
push
cmpsb
leave
dec
popf
out
cwtl
cltd
or
xchg
jbe
push
adc
xlat
fs
in
stc
push
scas
xor
xchg
in
lods
mov
mov
ja
mov
push
les
int3
popf
daa
cltd
or
inc
das
mov
je
jae
dec
cmpsb
push
bound
fmull
add
mov
mull
pop
sbb
adc
adc
cmp
clc
loop
gs
pop
lret
inc
scas
int
movsl
push
mov
dec
dec
dec
mov
add
xchg
sbb
shlb
sbb
mov
push
pop
sub
test
mov
ret
sti
ljmp
sub
dec
ss
mov
xchg
dec
inc
cmp
imul
mov
jle
fs
fisubrs
sbb
out
cmp
in
cs
lock
clc
pop
xchg
insb
out
push
inc
and
lret
jnp
xor
dec
xlat
sub
sbb
add
call
jmp
pop
lret
repnz
out
rcrl
enter
scas
pop
jecxz
clts
mov
add
in
rcr
pop
loopne
inc
insb
in
mov
or
icebp
adc
test
and
js
adc
bound
fwait
loopne
sub
popa
sub
enter
lock
inc
out
adc
add
mov
loop
pop
pushf
out
enter
daa
fs
lcall
hlt
dec
xchg
fcmovnu
sub
test
dec
icebp
inc
icebp
cmp
jp
mov
mov
inc
or
mov
push
out
test
dec
mov
arpl
and
std
hlt
sub
test
test
js
out
mov
gs
mov
push
insl
mov
movsl
subl
mov
dec
adc
iret
rcrl
lods
or
pop
test
and
das
cltd
add
xchg
add
fdiv
mov
and
ja
pop
dec
lods
add
push
adc
das
mov
sbb
inc
addr16
fdivs
adc
in
lret
adc
adc
stos
scas
ret
rorb
adc
mov
mov
rolb
outsb
jb
jo
push
movsb
lret
jb
lret
fwait
inc
pop
adc
pusha
stc
aad
pop
mov
subb
inc
pushf
jno
adcl
mov
sahf
ror
mov
hlt
pop
in
fists
xor
jo
inc
jno
sbb
repz
and
inc
sbb
sahf
dec
fstl
add
aaa
inc
jo
xorl
xor
lock
fnstcw
xor
add
mov
into
in
mov
jb
nop/reserved
xor
test
add
xor
xchg
add
mov
or
mov
mov
test
mov
inc
jmp
and
mov
xchg
and
push
add
dec
or
repz
sbb
dec
scas
lods
jns
jns
les
mov
mov
arpl
iret
js
mov
enter
mov
pushf
jae
scas
jp
push
push
sbb
mov
xor
dec
test
dec
ss
rol
dec
jno
dec
and
mov
sbb
cli
cmc
adc
inc
push
mov
ljmp
mov
icebp
cld
pop
sbb
jbe
clc
push
jae
inc
subl
xchg
sbb
jp
mov
and
rolb
enter
cmp
push
add
into
scas
sub
mov
shrl
dec
jbe
sub
dec
cmp
sub
mov
or
lcall
jle
movsl
push
data16
push
pop
adc
lea
cmp
ja
or
inc
sbb
rcrb
sahf
jle
out
and
jno
xchg
push
cwtl
test
ret
sub
nop
aam
orl
leave
lods
xor
dec
movsl
cmp
jg
ret
pop
xchg
lods
xchg
dec
mov
nop
push
ss
inc
dec
xor
sbb
jp
in
sub
xor
sbb
push
mov
push
sbb
jle
push
push
out
int3
idivb
je
test
cmc
xor
lods
xor
es
pop
push
mov
test
dec
cmp
js
pop
iret
test
xchg
fidivl
mov
and
jecxz
push
xchg
mov
lahf
xlat
cmp
xchg
add
mov
daa
jne
dec
adc
fiaddl
xchg
xchg
aam
cmpb
ss
jp
aam
or
stc
jbe
rolb
push
inc
xor
imul
xchg
mov
push
add
fsubr
pop
test
mov
inc
push
xchg
cmp
mov
fcompl
bound
fimull
add
jg
pop
sbb
int
jnp
aas
stos
lea
aaa
sbb
scas
mov
rol
jns
and
int
mov
sahf
inc
mov
push
mov
aam
jbe
in
inc
sahf
daa
add
mov
fidivs
lret
lds
xor
cmp
outsb
aad
movsl
jle
popl
jns
call
sub
out
clc
loope
insb
lods
sub
idivl
pop
aaa
test
bound
pusha
stc
or
pop
sub
fldl
cwtl
sahf
dec
sbbb
sbb
and
mov
int
cmpsb
sbb
jle
xchg
cmp
mov
pop
sbb
nop
testl
test
inc
ja
xchg
adc
andl
es
movsl
aas
mov
shrb
jno
dec
call
out
jnp
pop
test
cmp
pop
sub
pop
cmpsb
mov
jle
repz
mov
mov
jle
cmp
push
lods
sbb
ror
pop
push
inc
mov
std
jle
fcoms
jno
sub
jl
ja
test
jmp
arpl
popf
xchg
inc
xor
jle
push
jnp
add
insl
add
push
push
mov
pop
jp
scas
push
mov
inc
in
dec
sub
out
push
jg
push
dec
dec
add
arpl
lahf
cmp
cmpsb
inc
jns
clc
and
xchg
cwtl
scas
push
pop
cmp
mov
pop
jae
and
lret
popf
inc
pop
push
lods
movsl
cmp
or
mov
sub
lods
fwait
lcall
mov
cmp
push
ret
sbb
mov
jp
add
pop
mov
outsl
push
roll
pop
fsub
push
jo
lret
popf
cmp
adc
mov
ja
mov
divl
dec
faddl
xacquire
or
stos
dec
dec
adc
adc
fwait
and
ss
andb
nop
fbld
in
push
stos
pop
cmpsb
sub
stos
ljmp
sub
fsts
sub
mov
cmpsl
push
lds
jae
cwtl
sbb
or
adc
lods
pop
iret
adc
aad
insb
imul
xor
lods
jno
adc
cmp
pop
cmpsb
lods
ret
lods
das
incb
ret
inc
push
inc
mov
adcl
mov
lcall
mov
pop
dec
dec
js
sbb
stc
jmp
lahf
pop
into
mov
add
fwait
push
cmpsl
dec
sub
mov
sbbl
xlat
mov
test
xchg
bnd
mov
imul
mov
jmp
xchg
adc
pop
imul
xchg
push
das
lret
nop
xor
mov
sbb
bound
push
cmp
push
scas
cmp
mov
ret
push
es
xchg
jbe
add
push
jno
aad
pxor
add
aaa
mov
cmp
lret
mov
add
ret
or
insb
std
ficoml
cmc
call
ds
fdivs
enter
cmpsb
int3
inc
cs
jecxz
cmp
and
sti
das
cmp
pop
clc
adcb
add
scas
mov
rcr
mov
pushf
int3
mov
dec
clc
xchg
push
leave
clc
outsl
insl
cmp
insb
out
inc
fwait
mull
ret
les
add
mov
fildl
mov
js
inc
mov
aas
pop
dec
int3
push
ret
xchg
jnp
popa
cwtl
mov
shr
ds
or
idivl
cmp
fwait
jbe
pop
out
or
xor
dec
lret
inc
mov
iret
push
aad
cld
cmp
lock
cmp
or
pop
sub
jnp
lret
dec
jg
rorl
adc
xchg
ret
push
mulb
loopne
js
cmp
or
mov
jae
or
movsb
das
jg
ret
sbb
call
mov
mov
push
cmpsl
jecxz
sbb
repz
mov
fdivrl
mov
and
mov
in
xor
sub
mov
push
loopne
lods
sub
push
cmpsl
hlt
aam
in
movsl
dec
lret
mov
mov
movsl
pop
iret
fcoml
or
jecxz
sti
add
bound
sub
stc
shrb
movsl
dec
andb
in
clc
loope
and
xchg
pop
gs
aad
orl
adc
dec
dec
leave
call
dec
dec
xchg
xchg
jnp
pop
jl
test
in
cmp
push
pop
pop
xor
cwtl
add
adc
push
mov
insb
and
cmpsl
out
inc
fstpt
jno
add
test
out
and
shl
cmpsb
loopne
mov
lret
loope
negb
ret
lret
das
stos
jmp
xchg
mov
shlb
sti
mov
adcb
pop
mov
add
push
clc
adc
dec
jno
cmp
imul
add
enter
xchg
or
popa
cmc
imul
sub
mov
gs
push
sti
sti
cmp
test
out
mov
inc
sarl
insb
jg
shrb
adc
in
pop
cmp
mov
push
sub
rorl
aam
js
or
jl
stc
cmp
and
inc
stc
ja
push
pushf
decb
notl
and
ljmp
cld
scas
push
pop
in
jnp
sub
popf
int
add
jg
inc
add
pop
sbb
test
cmpsb
fldenv
xchg
cmc
addl
inc
dec
pop
cpuid
imul
mov
cwtl
inc
cmpsl
shl
shlb
dec
jmp
test
imul
mov
bswap
cli
lahf
mov
loop
adc
mov
inc
add
aas
shlb
insl
imul
pop
lcall
cld
cmpsb
fstpt
push
jo
sarb
xor
div
add
jmp
and
push
movsl
dec
insb
push
sti
sub
add
mov
and
popf
cwtl
in
jb
cmp
cmpl
movntps
aaa
and
stos
dec
imul
ret
xchg
xchg
addr16
hlt
test
jo
ja
xor
jmp
cmc
nop
or
dec
add
adc
pop
cs
mov
jns
add
cmp
cmp
cs
dec
jmp
mov
inc
nopl
inc
mov
jl
xchg
pop
jmp
ljmp
out
add
les
out
cmp
iret
movsb
shlb
outsb
sub
pop
out
mov
cmc
cmp
sub
xor
in
cmp
test
xor
inc
ds
fsubrs
into
jns
sahf
outsl
dec
pop
out
pop
pop
testb
adc
push
jle
bound
mov
add
add
mov
insl
mov
rcr
sar
pop
mov
adc
dec
sti
outsl
mov
inc
cmc
mov
leave
and
lea
jge
ja
cld
or
sbb
and
cmp
push
lock
add
inc
pop
shlb
mov
das
inc
xchg
mov
idiv
jne
imulb
pop
xchg
sti
jg
dec
mov
pushf
pop
xor
repz
mull
repnz
in
pop
je
lahf
iret
cmp
mov
push
pop
jle
cmp
inc
cmp
jg
push
popf
movb
add
inc
add
inc
shrl
cmp
in
mov
enter
cmpsl
fimull
pop
idiv
inc
cs
daa
mov
mov
jbe
push
sub
loope
arpl
sub
jmp
jnp
and
leave
jecxz
ret
loop
or
or
xor
pop
inc
fisubrs
sub
das
sub
xor
stos
out
aad
xchg
aad
je
lahf
jecxz
or
mov
jne
xchg
sbb
pop
popa
mov
mov
sahf
lock
jmp
loop
scas
jbe
sub
inc
adc
adc
aam
sub
and
test
fcmovnb
in
xor
sarl
dec
dec
lret
nop
mov
pop
nop
mov
jns
repnz
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
test
jge
add
ss
add
cs
add
add
add
add
add
add
add
incl
inc
add
and
inc
add
incl
add
add
.byte
scas
inc
loope
adc
fstpt
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
aaa
cmp
cmp
cmp
cmp
add
scas
inc
loope
adc
fstpt
add
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
push
mov
mov
nop
nop
mov
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
inc
nop
nop
jmp
pop
nop
nop
pop
pop
ret
nop
add
nop
nop
push
mov
mov
nop
nop
mov
nop
nop
sub
nop
nop
test
je
nop
nop
xor
nop
nop
dec
nop
nop
dec
nop
nop
jmp
nop
nop
pop
nop
nop
pop
nop
nop
pop
ret
add
aas
movsb
fistpll
add
add
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
cmp
inc
inc
push
xor
sub
sub
sub
sub
push
xor
add
add
xor
push
jo
jb
jae,pt
jp
and
jp
outsl
data16
xor
dec
pop
push
dec
inc
push
inc
inc
sub
and
cmp
popaw
imul
gs
imul
daa
or
add
cs
cs
arpl
arpl
arpl
imul
cmp
das
ja
xor
gs
arpl
add
je
je
insl
dec
popa
insl
gs
and
popa
je
insl
sub
jae
and
jp
outsl
data16
sub
and
mov
add
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
je
insl
inc
add
add
inc
fs
je
insl
push
add
fwait
add
imul
jae
add
scas
add
outsb
fs
je
insl
inc
add
add
je
je
insl
dec
popa
insl
gs
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
adc
jb
add
popa
je
js
je
add
add
add
insb
jne
push
cmp
outsw
jo
outsb
add
add
jb
outsb
je
add
add
add
gs
jb
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
xchg
add
outsb
add
add
arpl
add
add
pop
add
gs
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
and
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
arpl
arpl
xor
fs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
add
inc
add
add
add
add
add
add
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
inc
push
xor
cs
insb
