add
add
sub
mov
mov
pusha
call
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
add
add
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
call
add
add
add
inc
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
mov
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
mov
jge
popf
pushl
pop
dec
push
mov
call
int3
add
add
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
or
xor
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
call
add
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
out
and
add
and
add
add
cwtl
and
add
and
add
add
and
add
and
add
and
add
add
add
dec
and
add
and
add
add
mov
and
add
and
add
add
add
add
mov
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
add
add
and
add
and
add
add
xor
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
add
cwtl
and
add
and
add
add
and
add
and
add
and
add
add
add
dec
and
add
and
add
add
mov
and
add
and
add
add
add
add
mov
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
add
add
and
add
and
add
add
xor
add
add
add
popa
je
inc
jbe
outsb
je
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
fs
imul
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
insb
jae
gs
popa
insb
jne
add
add
outsb
fs
je
insl
inc
add
insb
jae
jb
outsb
inc
add
aad
inc
gs
gs
inc
imul
gs
jb
arpl
jae
gs
jo
add
popa
je
inc
jbe
outsb
je
add
mov
jo
outsb
fs
push
add
popa
je
inc
jbe
outsb
je
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
jne
jb
outsb
je
push
add
roll
dec
gs
jo
jb
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
je
imul
push
add
push
add
je
jb
arpl
jae
gs
imul
gs
insl
gs
push
add
lock
imul
jb
je
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
adc
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
add
insl
jo
insb
fs
jb
add
add
push
popa
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
xor
dec
push
cs
insb
add
add
add
add
sub
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
clc
add
add
add
or
add
or
add
sbb
add
or
add
sub
add
or
add
cmp
add
dec
popa
add
test
add
lock
add
add
add
add
add
or
add
mov
add
and
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jnp
jl
lods
lods
stos
add
cmpsb
test
mov
mov
mov
ret
les
int
into
rcl
in
rcl
shl
rcl
iret
hlt
int
int3
hlt
enter
leave
out
mov
mov
mov
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
fcom
std
xlat
fcom
xlat
xlat
xlat
aad
rcl
sar
int
int
aad
aad
iret
rcl
inc
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
dec
iret
sar
aam
xlat
call
xlat
call
aam
int
int3
dec
int3
int
aad
int3
int
inc
rol
mov
mov
lods
std
cmpsl
cmpsb
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
push
add
inc
add
pop
add
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int3
int
rcl
sar
xlat
xlat
fcomp
call
aad
into
int
dec
leave
lret
dec
int3
into
inc
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
push
imul
ds
sbb
sbb
sub
aaa
aaa
cmp
adc
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
mov
ret
leave
call
rcl
call
call
aam
call
rcl
dec
enter
vcmpsd
mov
mov
ljmp
mov
sahf
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jle
jge
jge
jle
jo
jb
bound
mov
cmp
inc
mov
outsl
outsb
jo
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
lret
dec
leave
lret
leave
enter
mov
mov
ljmp
movsl
mov
call
xchg
cwtl
xchg
cwtl
cltd
cltd
fwait
in
addl
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
jo
outsl
add
pop
or
jnp
nop
mov
incb
jnp
jl
jp
outsb
jo
out
push
data16
ret
jg
jns
js
arpl
fs
inc
inc
cmp
pop
sbb
adc
adc
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
incl
addb
xchg
xchg
mov
mov
xchg
mov
jp
js
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
cltd
lahf
in
mov
incl
xchg
std
xchg
jle
jno
jo
je
jae
jle
jg
test
xchg
push
cmp
ss
and
jle
jge
lcall
shrb
lods
lods
sti
lods
lods
lods
lods
lods
lods
test
test
movsb
movsl
movsb
std
lcall
decl
jle
jns
js
jnp
jnp
mov
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
or
inc
inc
dec
insb
insl
imul
test
lcall
out
cltd
lcall
mov
decl
mov
lcall
cmpsb
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
mov
incl
test
decb
xchg
pushf
popf
pushf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
in
xchg
jne
or
add
inc
es
sub
dec
dec
data16
jno
xchg
xchg
rclb
xchg
xchg
std
mov
call
lahf
lahf
jmp
lods
pushl
cmpsl
scas
mov
xchg
test
rolb
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
sahf
xchg
fwait
incl
mov
call
xchg
xchg
xchg
popf
popf
popf
mov
test
mov
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
jae
jl
jle
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
aaa
jge
mov
ja
mov
movsl
mov
mov
mov
mov
mov
add
shlb
xchg
lea
ljmp
pushf
decl
nop
xchg
call
xchg
xchg
call
xchg
cwtl
cltd
lcall
mov
movsb
movsl
std
mov
cltd
lcall
xchg
xchg
les
xchg
cltd
in
xchg
xchg
out
mov
nop
stc
xchg
test
std
xchg
je
fwait
imul
ljmp
aaa
jp
mov
jae
mov
outsb
ljmp
pcmpgtd
lods
or
stos
or
pushl
mov
mov
pushf
movsb
movsb
mov
add
mov
add
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
popf
popf
jmp
popf
popf
lcall
xchg
cwtl
decl
cwtl
xchg
call
cwtl
lcall
fwait
sahf
stc
lahf
xchg
sahf
cld
pushf
mov
xchg
imul
xchg
dec
jns
cltd
cmp
lcall
mov
push
jmp
ljmp
adc
lods
adc
scas
adc
mov
imul
adc
mov
imul
inc
cmp
lcall
lods
scas
lods
scas
movsb
mov
mov
add
pop
pop
adc
mov
ljmp
popf
call
pushf
pushf
lcall
mov
mov
call
mov
decl
jle
xchg
js
lcall
xchg
push
jns
xchg
jo,pt
nop
sub
decl
adc
xchg
or
xchg
add
call
pop
lcall
adc
lods
sbb
mov
insl
pushl
push
outsl
mov
and
and
shll
mov
xchg
lods
mov
scas
lods
mov
mov
movsb
movsb
add
pop
pop
adc
scas
mov
mov
cltd
pushf
lcall
movsl
movsb
jmp
test
ljmp
cmpsb
cmpsl
lcall
orb
inc
outsl
decl
sub
mov
decl
or
incl
add
xchg
push
decl
push
call
add
mov
or
mov
jo
mov
jbe
mov
sub
mov
sub
jg
jg,pn
cs
inc
mov
enter
sarl
lret
movsb
dec
mov
mov
add
add
add
lods
mov
push
adc
test
mov
sahf
lcall
stos
test
ljmp
lods
pushl
scas
scas
jmp
mov
mov
push
incl
or
add
addl
incl
add
xchg
push
decl
add
xchg
add
fwait
add
mov
add
scas
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
movsb
cmpsl
ljmp
lahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
push
decl
push
push
decl
or
xchg
incl
add
nop
add
xchg
add
pushf
add
mov
add
lods
add
sbb
ret
dec
inc
mov
int3
inc
mov
roll
call
dec
mov
dec
xchg
call
dec
xchg
fmull
fistl
call
xchg
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
jp
movsb
lahf
mov
lcall
stos
test
pushl
mov
pushl
mov
mov
movsl
mov
decl
sbb
call
push
pop
decl
pop
push
decl
add
xchg
add
sahf
add
mov
add
test
pusha
pushl
es
into
dec
call
push
cltd
call
push
cltd
fsts
fistl
ficomps
fists
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
test
cmpsb
jne
sahf
sahf
or
cwtl
xchg
cwtl
add
inc
adc
jns
sahf
lcall
sahf
fwait
lahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
and
and
xchg
and
call
sbb
nop
or
nop
add
add
cltd
add
mov
add
stos
add
mov
gs
mov
xor
fisubl
fisubs
fisubs
jecxz
cmpsl
jmp
cmpsb
call
imul
fildl
mov
test
mov
lahf
mov
add
add
add
inc
inc
adc
jb
cltd
xchg
lcall
pushf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
lcall
push
call
add
fwait
add
mov
add
lods
add
mov
pushl
adc
roll
jmp
outsb
stos
jmp
jo
jmp
jb
jmp
jne
in
je
out
jbe
in
je
out
je
jmp
mov
mov
cmpsl
test
mov
lahf
lahf
add
add
adc
outsl
js
lea
lcall
mov
pushl
mov
mov
inc
sarb
mov
lods
lcall
xor
mov
cmp
xor
cltd
push
callw
add
sahf
add
movsl
add
test
add
mov
fs
mov
sbb
fsts
jmp
ja
ljmp
in
xorl
push
test
push
cmpl
call
mov
mov
test
sahf
daa
mov
lahf
sahf
add
add
add
popa
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
insb
mov
lcall
jmp
aaa
jbe
lcall
lcall
pop
ljmp
add
mov
gs
mov
add
shll
cmp
data16
ljmp
in
lea
push
pop
push
pop
push
xchg
nop
ret
stc
xchg
ret
in
nop
sar
mov
inc
ret
ret
clc
lods
lods
test
xor
pushf
sahf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
inc
mov
jl
lcall
dec
cmp
mov
adc
cltd
add
mov
add
lods
add
mov
arpl
mov
add
leave
add
call
xor
jmp
jns
out
xchg
push
lcall
repz
push
lcall
negl
int3
sti
sahf
int3
cld
cwtl
lret
push
xchg
ret
mov
inc
mov
mov
mov
nop
nop
add
add
add
ss
or
cmp
jecxz
pop
popa
decl
mov
mov
mov
sar
ret
ret
inc
mov
lahf
lcall
push
xchg
scas
push
xchg
movsl
sub
lcall
jmp
add
mov
arpl
mov
add
movl
je
loopne
xchg
out
mov
push
movsb
into
push
cmpsb
into
clc
cmpsb
into
cli
test
sar
cli
test
iret
cld
stos
sar
cld
cmpsl
sar
cmc
popf
jmp
mov
dec
lret
mov
mov
lahf
lahf
mov
add
cltd
fwait
add
add
add
xor
add
sub
or
bound
push
xlat
jae
jno
mov
mov
ret
sarl
mov
enter
ret
pushl
push
test
scas
push
mov
lods
dec
test
sahf
sbb
lcall
pop
ljmp
add
add
ret
add
into
add
add
fists
jl
in
pop
cmpsb
push
sahf
lret
cli
lods
sar
cli
mov
cld
mov
cld
mov
cld
mov
cld
mov
mov
std
mov
pushl
sar
cmc
movsl
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
sbb
dec
dec
dec
outsl
outsb
jo
cwtl
lcall
aad
jmp
fdiv
iret
rcl
std
lret
int
dec
lret
leave
leave
leave
dec
lret
leave
mov
lods
jmp
push
mov
stos
jg,pt
sahf
or
pop
ljmp
add
mov
add
rolb
outsb
fadds
je
loopne
jne
jmp
jb
sti
scas
aad
mov
fcos
mov
fcos
cld
mov
fdivr
mov
xlat
std
rcr
std
mov
lret
jmp
mov
call
leave
into
mov
mov
xchg
or
add
add
xor
add
add
pop
or
movl
jmp
out
loop
loope
fstp
fsubp
fcmovu
fcomp
fdivr
aam
xlat
std
int
iret
mov
imul
jmp
add
mov
mov
add
lret
add
aam
jb
faddl
jbe
in
ja
out
xor
sti
mov
loope
inc
inc
loop
inc
inc
fdivrp
dec
loopne
std
leave
dec
loopne
inc
std
lret
loopne
cli
mov
leave
call
leave
iret
mov
mov
xchg
adc
add
add
std
std
add
std
std
add
incl
repnz
testb
out
jmp
jmp
in
sub
out
in
dec
ljmp
xchg
out
call
aad
jmp
mov
xchg
test
ja
movsb
push
jmp
add
mov
arpl
mov
add
int3
add
fadds
jae
fiadds
ja
call
inc
popf
sti
mov
in
cld
lret
loop
dec
in
dec
in
std
int3
jecxz
dec
loop
std
int3
loope
std
shl
std
iret
loop
shl
call
in
sti
ret
fdivr
in
mov
xlat
inc
ret
cmpsl
test
mov
xchg
cwtl
add
add
add
std
std
add
std
std
add
div
add
hlt
repnz
repz
push
in
icebp
lock
out
repnz
cmp
out
in
pop
loopne
loop
mov
xchg
sti
lahf
es
add
pop
ljmp
add
mov
add
add
fiaddl
jbe
jecxz
jp
in
adc
negl
cli
mov
cld
shl
dec
jecxz
call
jmp
shl
out
out
out
std
fld1
std
fldl2t
fucomi
shl
push
aad
in
fcos
lret
lret
test
test
xchg
xchg
xchg
and
xchg
xchg
add
cli
add
testl
hlt
div
or
shll
sarl
cltd
sbb
lahf
add
cmpsl
add
lods
add
mov
add
lret
add
roll
jb
fildl
ja
call
sbb
sti
fsubr
fldl2e
std
fldl2t
std
fldl2e
fucomi
fucomi
fsubr
fucomip
std
loopne
loopne
cld
shl
push
ret
out
fdivr
ror
sar
lods
stos
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loopne
add
enter
mov
xchg
repnz
ljmp
add
mov
add
int
outsb
call
add
filds
je
ljmp
cld
pop
cld
aam
jmp
out
std
fsubr
std
fucomi
fucomi
fsubr
cld
aam
cld
aam
cli
shl
cli
shl
stc
into
test
in
mov
jmp
rcr
call
xlat
sti
mov
mov
cltd
lcall
cltd
fwait
lcall
add
add
add
mov
sahf
jmp
sub
lahf
add
stos
add
mov
arpl
mov
add
roll
outsb
call
add
loop
jp
jmp
aaa
xchg
cld
xchg
enter
cli
int3
loop
cli
clc
mov
aad
repz
into
push
mov
int
jmp
mov
sar
jmp
shl
call
loopne
in
mov
mov
xchg
add
add
add
int
add
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
dec
pop
jo
rorb
je
fsts
ja
loope
cmp
dec
xchg
ljmp
ljmp
std
loope
mov
cli
fdivl
lock
into
in
leave
into
into
aad
loope
fadd
out
loop
jmp
out
repnz
out
popf
jmp
lret
lret
push
lods
lods
lods
adc
cmpsb
test
add
ret
ret
ret
rol
pop
mov
stos
aam
dec
cmp
sbb
test
imul
and
ja
mov
inc
test
ret
stc
lret
arpl
hlt
rorb
out
mov
enter
enter
int
rol
int
iret
shll
xlat
rcl
jg
fcmovu
jb
gs
in
out
out
call
cmc
repz
div
and
lock
or
mov
into
add
add
add
rol
mov
mov
les
imul
mov
pushf
in
lea
sarb
stos
mov
les
rcrb
lret
jp
int
addr16
rclb
rcl
dec
xlat
aad
rcl
xor
fcmovu
daa
fcompl
fstl
fucom
loop
fucomip
jecxz
out
jmp
add
sti
testb
sti
add
incb
std
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
lds
mov
daa
int
shlb
rcl
rcrb
rcl
rclb
rcl
rorb
rcl
aad
aam
add
fcmovnu
add
add
jecxz
add
jmp
add
xlat
add
std
add
mov
add
rol
ret
sub
mov
mov
push
ret
or
enter
leave
enter
lret
add
aad
add
fcom
add
add
xlat
add
aad
add
fsub
add
fildl
fsubp
loope
fstp
loopne
in
out
icebp
icebp
icebp
add
std
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
ret
ret
mov
mov
mov
test
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
into
jmp
aad
cmc
aam
aam
iret
iret
into
cli
int
int
int3
lret
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
ds
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
iret
into
iret
aad
call
aad
call
ror
dec
int
dec
int3
lret
mov
mov
lods
icebp
cltd
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jne
jne
fs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
int3
lret
rcl
call
aam
dec
lret
int3
inc
mov
rol
pushl
stos
stos
sahf
popf
popf
xchg
xchg
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
addb
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
outsl
jo
scas
scas
scas
pop
mov
mov
mov
mov
inc
rol
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
xchg
xchg
xchg
xchg
fwait
cltd
lcall
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
cltd
cltd
add
fwait
xchg
cwtl
fcoml
addb
jl
jge
jns
jns
jp
jns
jnp
jp
jb
je
push
push
push
cmp
aaa
pushf
sahf
sahf
mov
scas
lods
repz
lods
lods
sti
scas
scas
scas
std
test
cmpsl
std
pushf
popf
pushf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsb
cmpsb
movsb
cltd
jae
jb
adc
adc
add
add
add
add
outsb
insl
outsb
pop
xchg
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
jo
mov
cltd
cwtl
cwtl
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsb
test
mov
scas
std
mov
scas
mov
xlat
cmpsb
mov
jg
popa
popa
popa
or
scas
mov
cmpsl
mov
mov
mov
nop
call
lahf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jle
subl
xchg
lock
mov
fwait
mov
pushl
jo
mov
push
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
movsb
test
call
xchg
xchg
lcall
cltd
lcall
popf
popf
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orb
xchg
imul
popf
dec
jp
movsl
inc
jns
scas
xor
jb
scas
push
outsl
ljmp
sbb
mov
lods
mov
scas
mov
jle
mov
add
add
add
popa
pop
popa
or
mov
lcall
sahf
lahf
jmp
lahf
mov
decl
addl
cld
cwtl
pusha
cmp
dec
jp
cmp
xchg
sub
xchg
sbb
cltd
adc
sahf
or
ljmp
pushl
sbb
mov
and
mov
stos
mov
scas
lods
scas
xchg
lahf
sahf
popf
adc
add
add
pop
popa
popa
or
mov
stos
movsb
test
mov
test
ljmp
test
cltd
decl
cmp
mov
arpl
mov
pop
incl
push
push
call
add
fwait
add
test
pushl
sub
inc
das
jle
ret
xor
xor
dec
pop
xchg
inc
test
divl
test
add
add
add
pusha
pusha
pusha
or
movsl
test
test
movsl
jmp
scas
mov
mov
mov
mov
mov
movsl
cwtl
lahf
call
adc
mov
push
incl
push
push
decl
add
xchg
add
sahf
add
cmpsl
add
mov
outsb
inc
cmp
rolb
call
inc
call
inc
nop
flds
call
bound
stc
mov
mov
movsl
movsb
mov
add
add
add
pop
or
lahf
mov
ljmp
mov
mov
mov
test
decl
sbb
mov
pop
decl
add
xchg
add
mov
add
lods
add
ja
rorb
fstps
fistpl
fistps
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
stos
cmpsb
xor
add
add
dec
pop
jle
jnp
pushf
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
jmp
cs
lcall
and
xchg
adc
add
popf
add
cmpsb
add
scas
add
mov
addr16
xor
jmp
insb
test
call
jno
in
jb
jmp
test
std
mov
test
inc
jg
addl
dec
dec
pop
outsl
outsb
imul
test
cltd
cwtl
cwtl
ljmp
mov
mov
mov
je
lcall
cmp
pushf
sub
xchg
or
lcall
add
lods
add
mov
inc
or
call
inc
xchg
jmp
jns
jmp
test
push
xchg
push
xchg
mov
cmpsl
cmpsl
push
lcall
add
sub
push
push
dec
pop
pushw
mov
mov
mov
mov
ret
mov
sahf
jmp
inc
jg
mov
or
mov
add
mov
arpl
mov
adc
mov
push
xchg
ret
push
cwtl
push
xchg
stc
lcall
negl
mov
stos
popa
mov
add
add
xor
pop
pop
pop
push
fisttpl
mov
mov
rol
mov
test
movsl
push
xchg
lods
dec
cmp
and
add
jmp
add
mov
add
and
push
mov
sar
stc
test
sti
stos
sar
std
stos
sar
cld
lods
sar
cli
cmpsb
lret
jmp
mov
dec
rol
stos
test
sahf
or
add
add
dec
push
dec
aaa
jb
jb
test
int3
into
out
into
lret
cmc
leave
lret
int3
sti
enter
mov
mov
test
inc
jg
mov
add
mov
arpl
rolb
dec
add
flds
xchg
push
xchg
cld
mov
std
mov
fcos
std
mov
xlat
std
mov
sar
jmp
rol
scas
lods
lods
mov
add
add
add
add
or
aad
dec
loope
jecxz
loopne
fcmovnu
ffree
fcmovnu
aam
fsubr
shll
test
push
pusha
ljmp
add
enter
xlat
add
in
jp
lock
mov
cld
ret
loope
std
std
dec
fdivrp
std
enter
lret
sti
out
mov
leave
divb
sahf
sahf
sbb
add
add
incl
std
incb
jmp
or
out
out
sbb
in
in
xor
loopne
loop
mov
mov
mov
add
mov
fs
add
int
insl
fldl
jbe
jmp
insb
mov
cld
ret
std
shl
shl
call
out
std
shl
aad
out
cld
shl
push
fdivr
fcmove
sar
mov
mov
add
std
add
std
incl
std
incb
aam
push
mov
pop
xchg
sahf
or
test
pop
pushl
add
roll
outsl
filds
jne
out
and
std
shl
std
fucompp
cld
xlat
call
sti
fsubr
xlat
call
push
jmp
rcl
sti
mov
popf
lahf
das
add
add
into
into
int
mov
bound
stos
add
mov
add
add
loope
js
out
xor
stc
int3
loop
cli
lret
test
xlat
repz
aam
out
ret
sar
in
vpsubw
aam
in
shl
in
fsubrp
leave
test
incb
aam
aam
mov
jb
or
imul
pop
jno
int3
and
cs
fists
clc
loop
mov
out
jecxz
leave
jmp
fidivrs
lret
sarb
in
fcompl
in
call
rorl
mov
add
stos
lods
stos
add
xchg
movsl
les
pop
xchg
mov
fidivrl
jle
rol
stos
mov
mov
ret
nop
rol
leave
jge
ror
into
pop
rcl
iret
dec
fcomp
fnstcw
loopne
fisubrs
in
frstor
loop
repnz
jmp
or
std
std
add
add
add
std
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
leave
and
rcl
pop
sarb
or
loopne
or
int
add
std
std
add
std
incl
fwait
cltd
cltd
add
mov
rol
or
int
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
ret
mov
leave
mov
ret
mov
mov
mov
stos
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aam
std
rcl
sar
into
int
std
vshufpd
mov
in
test
jg
sbb
push
add
add
add
add
add
add
add
add
jb
jae
addr16
das
das
cs
and
add
add
mov
mov
cmpl
ret
int3
int
rcl
sar
iret
into
int
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
je
jne
test
aad
jo
ret
popa
mov
push
outsb
jb
popa
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jb
daa
and
add
add
add
je
jae
popf
xchg
lcall
test
mov
test
test
push
push
push
push
inc
mov
fwait
into
mov
mov
xchg
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsl
cmpsl
cmpsl
test
mov
xchg
xchg
xchg
cld
popf
popf
sahf
cmc
cltd
cwtl
cltd
in
test
push
imul
jge
nop
aam
mov
lcall
pushl
imul
call
stos
lods
lods
add
add
add
test
scas
cld
xchg
xchg
xchg
lcall
lcall
cltd
lcall
xchg
mov
loope
jbe
out
xchg
fs
pushf
inc
jne
cmpsb
aaa
jbe
scas
sub
outsl
pushl
aaa
jl
mov
mov
imul
int3
add
test
pop
lods
cmpsb
stos
test
lahf
sahf
lahf
jmp
mov
xchg
decl
ja
nop
inc
jb
lea
imul
sbb
call
or
mov
push
insl
pushl
es
ret
inc
aas
test
rcrb
subl
je
push
mov
movsb
test
ljmp
mov
lcall
sub
mov
pop
incl
add
decl
add
mov
adc
shll
lret
call
inc
mov
aad
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
ljmp
aaa
jo
xchg
sbb
pusha
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsl
call
lcall
cmpsl
cmpsb
test
add
add
arpl
adc
sahf
pushf
lcall
mov
mov
lcall
xor
lcall
lcall
add
mov
xor
jmp
outsl
lods
call
jp
push
jge
out
jg
fistpl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
bound
lcall
add
test
add
ret
fimull
in
mov
push
xchg
push
xchg
enter
jmp
cmpsb
mov
movsb
sub
inc
aas
aas
adc
push
xchg
xchg
mov
inc
ret
ljmp
dec
cmp
sbb
cmpsb
add
mov
fs
add
aad
jns
in
insb
lods
push
test
cli
stos
sar
cli
scas
sar
std
lods
sar
cld
lods
sar
ljmp
fldenv
incb
xor
xor
scas
mov
mov
aam
mov
aad
fnop
rcl
out
lret
cli
mov
mov
jmp
add
add
add
out
test
stc
nop
mov
std
ret
cld
ret
std
rcr
icebp
mov
shl
test
dec
addl
lods
add
in
in
or
out
call
outsb
fcmovu
fisubl
movsl
es
ljmp
add
lret
add
add
push
cmp
std
iret
in
shl
call
out
call
in
std
aad
push
enter
int3
in
scas
scas
scas
popa
jg
addb
add
std
std
incb
std
std
incl
lret
int3
shrb
lahf
sbb
lods
add
mov
add
loop
jns
cmc
push
cmpsl
std
enter
aad
std
aad
shl
cld
aad
stc
shl
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
scas
add
mov
or
cmp
imul
out
mov
iret
bnd
ret
shl
out
aad
ljmp
scas
push
cltd
fwait
fwait
add
mov
popf
stos
xchg
dec
and
shlb
jbe
mov
fdivrs
adc
int
xlat
int
pop
fst
xlat
dec
in
fistpll
out
call
sbb
mov
mov
cmp
mov
scas
push
mov
mov
les
lds
ret
sbb
bswap
int
or
push
incb
addl
add
stos
std
incl
rol
add
std
incb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
fcomp
test
jb
stc
pop
imulb
fyl2xp1
nop
or
jle
pop
scas
pop
lahf
fwait
xor
jle
int3
scas
repnz
ljmp
jno
push
cltd
cmc
mov
jbe
es
adc
cld
cmp
int3
arpl
das
mov
ljmp
les
lahf
cmc
xor
gs
daa
mov
mov
fldenv
cli
in
sub
pop
pop
or
jecxz
mov
mov
cwtl
add
mov
pop
fnsave
cmp
xchg
mov
pop
repnz
lods
sbb
dec
pushl
into
xor
das
mov
shll
aad
aad
inc
notb
mov
mov
int
into
or
jmp
and
in
inc
or
in
daa
mov
aaa
out
fcoml
pop
test
cli
imul
jl
ficomps
lcall
and
mov
aas
sub
stc
nop
or
hlt
jnp
inc
fisubs
push
out
dec
push
mov
xchg
or
rolb
jl
movsl
cmp
sahf
xchg
cmpsb
add
fcmove
push
ret
pop
mov
popa
clc
sub
test
jge
add
rcll
mov
jb
pop
movsb
mov
loope
div
pop
out
adc
es
push
cltd
xchg
sub
mov
ret
adc
jno
aas
loopne
outsb
lret
cld
nop
cmpsb
cmp
dec
jecxz
pop
adc
ss
push
mov
xchg
mov
mov
and
inc
jnp
fsubrs
pop
idiv
mov
jle
push
or
cmp
in
sbbl
stc
cmp
mov
loop
sub
cmp
inc
fstpl
pop
sub
mov
fs
jo
inc
xchg
sbbb
jmp
lret
fdivrs
ficomps
sbb
cld
fsubs
mov
mov
inc
fcomps
mov
scas
sub
push
sbb
pop
popf
xor
add
push
out
cmpsl
addl
jno
movsb
lds
clc
iret
mov
mov
add
daa
cli
fwait
rcrl
scas
inc
or
sub
arpl
xchg
xchg
jg
xorl
or
cmp
std
push
pop
fwait
xor
scas
mov
cmp
add
outsl
xor
pop
dec
push
testb
cmpsl
adc
fadd
std
xchg
hlt
stc
xor
sub
sbb
inc
dec
push
out
push
outsb
add
jmp
mov
and
stos
inc
jne
xchg
sub
xchg
enter
mov
in
out
sbb
shrb
cmp
fwait
insl
pop
lock
push
movsl
fsubp
inc
xlat
adc
sub
cmc
arpl
loop
test
movsb
imul
or
xchg
sub
mov
cmp
jle
insl
mov
ret
pop
rcl
hlt
mov
repnz
and
adc
ja
xor
test
sbb
in
ljmp
dec
cmp
lock
outsl
mov
mov
ret
hlt
loope
sub
push
enter
mov
imul
xchg
push
in
xchg
and
pop
popa
inc
fcoms
mov
mul
rorl
add
jle
cmp
addr16
push
pop
pushf
xor
lods
mov
cmp
fsubrs
sbb
pop
dec
push
testb
movsl
adc
ret
hlt
divl
leave
sub
sbb
out
push
outsb
add
jmp
mov
and
stos
inc
jae
xchg
sub
mov
dec
jmp
or
dec
cmp
mov
mov
mov
stos
loope
ds
add
mov
xchg
hlt
mov
fsubrs
cs
outsl
jnp
xchg
sub
sarb
mov
pop
dec
sahf
xor
mov
loop
fcomp
rclb
mov
jg
push
hlt
mov
test
xchg
fst
shlb
fdivl
es
jmp
jnp
lock
ret
pop
out
clc
ljmp
push
xor
es
sbb
psrlq
mov
and
push
ja
out
test
pop
cmc
lods
rorb
add
and
pop
sbb
imul
outsb
push
ljmp
test
call
dec
jne
push
test
fidivs
jb
loopne
and
lret
xchg
sub
jne
dec
test
into
gs
jb
mov
jl
loopne
sbb
inc
push
push
scas
lcall
dec
mov
popa
adc
add
scas
dec
pop
std
xchg
xchg
shlb
mov
mov
and
xlat
add
push
mov
data16
xchg
rcrb
scas
add
push
call
dec
push
out
or
in
dec
addr16
xor
rol
push
add
lds
xchg
sub
rorl
add
loop
dec
data16
xchg
fcomps
mov
mov
lcall
cmp
xchg
loopne
adc
or
insl
cmp
or
xchg
sbb
xor
nop
xchg
out
mov
push
mov
mov
push
shlb
sbbl
aaa
insl
jg
mov
jg
mov
je
inc
test
jbe
mov
cmp
in
aam
jno
push
ss
dec
stos
jmp
mov
cmpsl
add
out
stos
in
adc
jbe
add
jg
jp
lret
jl
and
test
jae
cld
mov
jnp
out
cli
pop
icebp
sub
push
mov
ja
adc
stc
push
jmp
jae
clc
mov
js
js
call
mov
mov
testl
adc
int3
arpl
addr16
hlt
xchg
lock
and
hlt
lock
jno
call
xor
in
loopne
jae
push
mov
jne
subb
push
ljmp
inc
ficomps
cmpsl
ds
insl
arpl
lahf
sti
jle
sub
ret
jge
mov
jecxz
adc
nop
daa
ss
jno
mov
in
sbbl
rcrl
sbb
js
in
int
and
das
and
add
cmp
lods
sub
fnstenv
push
movsl
cli
dec
loopne
sarl
mov
mov
push
movl
gs
cmp
lcall
push
in
cmpsl
leave
jae
ljmp
lock
pop
and
scas
jae
int
lret
mov
add
push
popf
sti
es
push
and
push
js
ljmp
leave
jl
dec
mov
pop
push
sbb
lea
out
xchg
daa
mov
adc
dec
push
std
xchg
dec
insb
add
cmpsb
mov
pop
div
adc
jle
adc
pop
inc
outsb
and
xchg
mov
push
out
or
add
arpl
mov
xchg
xchg
cmp
aas
mov
call
xor
aaa
into
pop
out
fwait
xor
or
fnstenv
out
out
out
xor
push
or
cmp
ja
xor
cmpsl
ds
out
mov
pop
or
mov
add
test
nop
movsb
in
adc
pop
out
in
repz
ds
lds
imul
xchg
mov
out
loop
lahf
pop
test
and
lcall
mov
out
xchg
add
insb
ss
xor
mov
stos
mov
vcvtps2dq
out
and
cmpl
lds
lock
mov
mov
fmull
seto
mov
pop
mov
xor
jp
or
inc
lea
adc
fnstsw
dec
scas
sbb
xor
aam
add
flds
movsb
xor
jbe
mov
sub
outsb
add
adcl
cwtl
scas
xchg
cli
mov
jge
dec
inc
pop
jle
repnz
fbstp
push
and
xchg
stc
nop
adc
aas
insb
clc
js
mov
cmpsb
mov
imul
mov
std
fidivs
mov
daa
jae
rcrl
fidivs
sbb
jmp
dec
pop
icebp
jle
add
fst
push
mov
std
lds
and
push
dec
data16
jp
jle
test
nop
daa
iret
add
cld
icebp
in
daa
sbb
ss
inc
pop
je
mov
scas
dec
mov
sub
jae
inc
inc
rolb
pop
sar
popa
mov
cmpsb
das
fcoml
aad
popf
jae
je
push
mov
cli
jb
stc
test
jae
sbb
cmpsl
into
sbbl
mov
sarb
mov
stc
inc
adc
aad
out
pop
dec
subb
mov
lahf
in
pop
or
rol
xchg
mov
pop
add
mov
xchg
sahf
pop
mov
dec
cmp
loopne
aad
hlt
subb
loop
imul
mov
cmp
inc
test
push
ret
ljmp
and
cli
lahf
dec
push
fisubrs
sub
dec
aam
add
adc
push
mov
inc
stc
cmp
lret
mov
mov
jl
mov
movsl
lea
add
notb
arpl
and
or
and
inc
mov
jnp
dec
es
repnz
pop
sub
push
inc
movsb
pop
lahf
cmp
cmpsb
dec
sub
sub
daa
int
pop
aas
dec
pop
add
mov
or
dec
ret
hlt
push
mov
je
push
xor
and
or
pop
leave
jne
dec
sub
fstl
sbb
or
and
jp
lcall
mov
nop
mov
cltd
push
int3
pop
in
cltd
xor
mov
dec
cmp
mov
jmp
ss
sub
and
stos
stos
push
fucomp
or
lock
fbld
mov
dec
pop
les
xlat
push
les
out
lds
adc
inc
out
dec
movsb
mov
pusha
cmp
es
das
cs
adc
inc
sbb
jbe
jge
hlt
repz
pop
loop
stos
push
mov
xorb
xchg
insl
dec
cld
mov
ret
sbb
inc
sbb
cld
cmpsl
sub
cmpsl
sahf
jecxz
cli
cld
mov
adc
imul
sub
imul
mov
fnsave
or
jno
pop
xor
fldenv
adc
sub
andb
int
cltd
mov
adc
ret
add
scas
pusha
mov
pop
or
not
sub
pop
xor
inc
xchg
xlat
aas
or
cmp
movsl
sbb
mov
les
or
mov
pop
mov
sub
ret
cmp
cmp
xchg
rorb
mov
aad
xchg
jg
mov
shll
mov
and
stos
mul
cmp
ljmp
jno
call
mov
sub
jecxz
xchg
cmc
and
loop
xor
xor
dec
loope
xlat
icebp
mov
dec
fsubrs
out
stos
sub
shrl
xor
shlb
loope
jno
movsb
testb
icebp
hlt
mov
pop
mov
lea
sub
mov
insl
add
mov
mov
fsubrl
shl
cmp
pop
repz
inc
lret
bound
jbe
lds
orb
aaa
and
mov
dec
mov
into
aad
fdivl
repz
les
sbbl
xchg
mov
cwtl
mov
into
ret
push
mov
push
in
sbb
int
mov
xlat
jmp
jns
xchg
sub
sbb
fnstenv
ss
repnz
adc
ds
dec
mov
or
push
mov
mov
or
fdivrl
lret
bound
jmp
or
es
xchg
sub
ret
add
gs
mov
shlb
filds
test
leave
or
mov
fsubrs
roll
int
les
dec
fbld
jmp
cmpsl
data16
or
test
dec
or
add
cmp
lret
rclb
data16
pop
xor
jne
js
sbb
mov
xchg
testl
mov
cmpxchg
cmp
movsl
test
cmp
jecxz
pop
cld
xchg
pusha
aaa
push
aaa
mov
mov
pop
mov
xchg
cmpsb
cmp
pop
out
les
inc
arpl
hlt
cmp
jns
sbb
add
dec
sbb
mov
bound
aam
push
fsubrs
arpl
mov
shll
mov
pop
stc
inc
fstpt
mov
mov
stc
dec
imul
adcb
in
repnz
in
and
push
or
outsb
add
popa
xchg
mov
rorl
stos
inc
mov
enter
sub
out
inc
fidivs
push
nop
jae
add
inc
fsts
xchg
sub
jp
testl
jle
jns
cmpsl
pushf
xor
pusha
repnz
mov
cmpsl
push
je
jo
das
cs
testl
push
popa
or
outsl
mov
mov
enter
pusha
loope
sbb
mov
jns
mov
pop
xor
push
test
xor
loope
mov
xchg
jge
xchg
sbb
push
ljmp
sbb
out
movsl
ds
js
jne
sub
xchg
sub
lods
mov
mov
jge
sub
iret
sbb
xor
xor
mov
mov
lods
pop
sub
xor
in
negb
test
lock
mov
movsl
stos
push
xchg
sub
test
dec
mov
xlat
shlb
mov
out
test
mov
mov
int
sub
dec
out
js
dec
loopne
lret
jmp
add
test
dec
das
inc
fnstenv
movsb
cmp
pusha
notl
ret
cmpb
jecxz
ja
pop
pushf
xor
or
xchg
cmp
stos
inc
fsts
js
enter
sub
sub
icebp
mov
fbld
mov
sbbl
pop
aas
rorb
cmp
pop
hlt
test
ret
jnp
push
xor
je
jno
and
xchg
lret
jne
ds
xor
into
sti
xchg
iret
data16
push
in
xor
je
mov
int
sub
dec
aaa
into
notl
mov
mov
push
in
pop
cmpsl
iret
data16
test
test
in
test
mov
loop
adc
dec
xchg
pusha
imul
mov
std
xchg
rorl
cmpsb
cmp
orl
rcrb
jns
jne
out
int3
stc
add
in
push
mov
or
cmp
add
mov
int
pop
icebp
inc
out
imul
cpuid
mov
xchg
adc
xchg
sub
mov
mov
fdivrl
test
pop
icebp
test
icebp
mov
sbb
fwait
dec
ss
mov
rcr
mov
sub
push
out
testl
inc
rcll
sub
lods
mov
fdivrp
iret
data16
not
addr16
add
xchg
je
mov
push
or
rcrb
xchg
sub
loopne
dec
loope
or
bound
push
or
out
sbb
fldt
movsb
cmp
mov
scas
jl
pop
data16
shlb
nop
loopne
nop
xchg
imul
xchg
sub
inc
pop
sahf
sahf
adc
xchg
mov
mov
movsb
fiadds
add
jl
shrl
lcall
mov
dec
stos
popf
xor
nop
insl
stos
dec
mov
fwait
ret
jo
jmp
mov
rol
lret
ljmp
ljmp
jg
js
push
call
pop
test
push
jae
push
xor
mov
aad
lods
inc
int
out
shl
lret
std
add
xchg
sahf
test
sbb
adc
aaa
into
adc
popa
clc
mov
push
in
dec
movsb
jg
xor
or
rclb
push
fildll
pusha
mov
int3
out
mov
icebp
mov
sbb
mov
sub
cmp
imul
test
bound
gs
dec
mov
xor
sbb
xchg
sub
je
cmp
int3
mov
js
es
xor
dec
repnz
mov
cmpsl
jp
fnstenv
sahf
cmp
mov
inc
pop
repnz
sub
adc
jbe
lret
cwtl
das
mov
mov
pop
dec
cmc
addr16
sub
mov
fs
mov
test
popa
mov
jg
adc
neg
push
popf
or
jge
lods
and
popf
lds
mov
jo
adc
xor
testl
lods
lahf
xchg
sub
movb
or
out
pop
iret
data16
lea
pusha
in
test
mov
test
inc
loop
sub
flds
fnstenv
repnz
fistps
testl
cmp
sbb
lret
or
rclb
outsb
add
xchg
cmc
mov
scas
mov
stos
inc
insl
dec
sbb
adc
testb
mov
sub
stos
inc
inc
fnstcw
loopne
out
sub
push
fildll
cmpsb
pop
fidivs
iret
mov
jl
cld
xchg
pop
xchg
test
mov
leave
xlat
outsb
cltd
cmp
mov
cmc
mov
ret
lock
sbb
aad
aas
xchg
sub
dec
out
jae
inc
nop
lds
mov
into
gs
add
test
test
xlat
outsb
and
sub
pop
dec
cmc
mov
inc
pop
repz
call
jp
shl
fistl
cwtl
das
adc
call
push
outsl
outsl
push
cli
jns
imul
mov
rclb
cmpsl
push
pop
fidivl
das
lds
clc
decb
and
push
mov
mov
mov
lret
adc
outsl
push
into
cmp
pop
out
and
mov
jp
mov
inc
jb
add
repz
mov
sbb
dec
into
jle
das
imul
dec
dec
pushf
xor
fnstcw
out
and
outsl
cmp
outsb
add
xchg
adc
sub
inc
movb
jl
fsubrs
xchg
push
out
or
mov
shrl
loop
and
ljmpw
stos
inc
mov
xlat
leave
pusha
sub
imul
jge
xchg
xchg
add
cmp
and
mov
loope
xor
xchg
add
push
out
loop
pop
mov
or
jnp
cs
into
repz
xor
incb
pop
jne
xchg
xchg
xor
arpl
xchg
lods
inc
sbb
dec
in
aas
fidivl
mov
ret
push
jmp
sub
outsb
and
mov
das
out
scas
fnstenv
push
jle
push
stc
out
xchg
jne
dec
cmpsb
and
mov
idivl
out
adc
scas
inc
or
mov
xchg
outsl
cmp
cltd
mov
repz
pusha
div
add
sbb
xor
stos
ret
pop
fnsave
loope
sub
push
dec
daa
insb
mov
sub
cmp
dec
stc
and
int3
or
mov
dec
cmp
mov
mov
dec
dec
jno
ja
pusha
rep
loope
inc
mov
sbb
mov
cmpsb
xor
fstpt
es
mov
adc
sbb
mov
mov
push
in
xchg
mov
dec
inc
call
sub
mov
ret
mov
inc
bound
imul
dec
sub
mov
push
pop
jg
shlb
xor
or
cmp
in
push
pop
pop
adc
or
inc
xor
test
sub
mov
ret
int
mov
jmp
ds
or
fldenv
sbb
sub
in
adc
dec
and
jb
mov
push
jns
rcll
fidivrs
jne
cmp
push
pop
ljmp
and
add
adc
mov
hlt
and
int
and
icebp
push
sbb
pop
jge
cmp
fmull
jl
scas
inc
ror
push
adc
std
mov
jno
repnz
jo
pop
inc
ljmp
and
fdiv
push
stc
std
lahf
daa
in
jecxz
pop
loope
fimull
out
imul
jne
cwtl
hlt
js
dec
ret
out
sub
subb
or
dec
outsl
pop
cld
or
xchg
lret
mov
leave
movsl
mov
lods
lea
add
push
pop
xor
or
bound
inc
dec
mov
lock
into
sti
lret
fstpl
add
mov
and
jo
cmpsb
lods
cli
mov
xchg
mov
mov
adc
arpl
mov
dec
xchg
rolb
pop
pushf
out
dec
std
jmp
movsl
test
xchg
scas
mov
dec
cmp
fdivrl
idiv
das
test
jl,pt
int3
fdivrs
and
lock
int3
les
shlb
xchg
jp
pop
and
mov
xchg
out
outsb
and
dec
mov
lea
insb
cmp
xchg
lods
les
xor
jmp
lods
es
mov
mov
arpl
adcb
fnstsw
pop
dec
push
or
push
scas
insb
fs
or
jo
daa
jge
and
mov
fistps
sbb
in
stc
pop
jge
mov
and
out
xor
dec
adc
pop
out
mov
orl
sbb
rcrb
adc
mov
adc
jmp
stos
cmp
sbb
or
sub
sbb
pop
cs
sub
and
sar
sub
fdivl
insl
scas
mov
sub
bound
aam
jne
and
push
fdivs
mov
ss
mov
mov
or
hlt
mov
jbe
pop
fists
call
repz
xor
dec
and
or
stos
jnp
mov
scas
pop
pop
push
movsl
fstps
cmp
push
bound
inc
push
bound
in
and
and
lods
mov
iret
inc
idivb
xchg
cmp
xlat
xor
ss
adcl
gs
xlat
adc
pop
mov
scas
mov
pushaw
fimull
xor
sbb
aam
lea
lcall
or
inc
cmc
push
jg
hlt
rorb
subl
pop
addb
mov
call
ljmp
mov
sbb
mov
dec
pop
mov
push
push
test
xchg
mov
daa
adc
addr16
mov
cmp
mov
jl
cmp
outsb
and
dec
cs
decl
mov
xor
sti
daa
mov
in
cmpl
mov
sbb
addr16
pop
xlat
arpl
pop
rclb
pop
or
mov
aam
jl
mov
lock
add
in
bswap
jne
cmp
cli
jae
jp
mov
idiv
add
jmp
ret
cmp
or
mov
jbe
adc
push
clc
sub
pop
adc
addr16
xchg
repz
sbb
ss
leave
mov
aam
lret
dec
jg
stos
lret
or
mov
fisubs
push
fldt
popa
fstpt
jno
mov
and
mov
or
dec
test
inc
fld
imul
cmp
xor
xchg
fsubrs
in
gs
enter
call
mov
jbe
xor
mov
js
movsl
test
push
clc
push
mov
mov
test
push
sub
sbb
xorl
push
jmp
mov
mov
arpl
fwait
lret
mov
ds
mov
sbb
jmp
cmpsb
jmp
cmpsb
inc
incb
divl
mov
xlat
jmp
ja
sub
xor
cs
dec
pop
repz
adc
xorl
test
shrb
aaa
adc
dec
cmpsb
sbb
and
or
out
dec
insb
fisubl
or
jg
not
outsb
pop
inc
shll
inc
int3
and
mov
or
mov
jae
icebp
sti
dec
dec
cmp
mov
dec
pop
and
jns
not
xchg
movsl
mov
insl
bound
int
in
out
jle
mov
mov
jge
mov
cmc
ds
in
mov
lret
mov
out
xor
sbbl
inc
and
and
pop
inc
cmp
sub
dec
mov
jae
sahf
push
punpckldq
push
inc
pop
mov
subb
add
pop
ds
mov
ljmp
ret
push
add
xor
js
ret
je
ds
or
iret
pushf
jb
inc
sub
pop
mov
xor
lret
cmp
sbb
stos
insb
inc
inc
out
fidivl
xchg
jb
loopne
test
cmpsl
cs
xlat
popl
inc
int
adc
sub
stos
mov
je
pop
cs
adc
mov
jmp
xchg
cmp
cmp
ret
xor
jae
es
pop
enter
mov
movsl
push
xor
lods
add
xor
fsubr
lahf
inc
popf
jbe
cmp
inc
add
adc
jmp
jne
faddl
or
jmp
xchg
repz
sbb
jno
ret
inc
mov
mov
dec
xchg
jno
xchg
rcll
aad
lea
dec
outsl
frstor
icebp
cs
sub
out
sub
clc
sbb
addl
repz
cmpxchg
das
mov
sub
xchg
leave
daa
stos
inc
mov
imul
inc
fs
pop
repnz
das
rcrl
pop
idivl
pop
in
mov
lock
cmc
ss
test
inc
adc
sbb
lods
test
mov
iret
mov
in
outsl
pusha
push
mov
jnp
adc
cmp
jno
mov
aam
and
out
loop
add
bound
jno
das
in
rolb
jle
pop
push
xchg
lds
xor
ljmp
xchg
sub
dec
add
pusha
je
fdivs
std
inc
fsubl
and
pusha
cmp
xchg
adc
dec
fsubrl
adc
out
sub
in
and
sub
cmpsb
xchg
std
js
adc
and
loopne
movsb
sbb
nop
pop
jle
ficomps
in
jno
or
movsl
mov
mov
sub
lods
dec
push
jnp
icebp
add
sarb
sbb
cmpsl
enter
pushf
jnp
and
insl
movsb
xor
dec
ljmp
mov
scas
inc
mov
ss
js
dec
adc
iret
mov
dec
cltd
orb
inc
cli
dec
andb
in
pop
cmp
xchg
rclb
shl
xchg
push
xor
cmp
inc
add
andb
stos
out
pushf
inc
xchg
mov
xchg
jbe
fs
cmc
mov
jb
sbb
stos
inc
arpl
pop
or
mov
sbb
jge
sbb
xchg
ret
mov
aam
mov
xchg
dec
sbb
loope
mov
fmuls
xor
xlat
pop
sbb
fsubrs
pop
jo
mov
pushf
lahf
lea
add
xor
ljmp
pop
jl
outsl
test
pushf
xchg
lahf
idivb
pop
xchg
adc
add
shlb
jno
add
daa
xor
mov
dec
mov
inc
bts
mov
insb
ret
lds
push
push
mov
mov
lods
push
test
lock
or
push
sahf
or
mov
ret
sbb
out
dec
scas
push
jno
fistpl
xchg
xchg
mov
movsl
hlt
cmp
jg
or
out
pop
xchg
or
cwtl
push
mov
dec
ljmp
repnz
pop
xchg
repz
mov
aas
jae
or
out
loopne
jns
push
add
cld
add
aad
js
adc
sbb
daa
cmp
lds
popa
and
push
pop
cmp
sub
arpl
imulb
insl
aad
push
aas
inc
out
lret
stos
jmp
ret
addr16
dec
lahf
push
add
clc
mov
mov
mov
jne
out
cmpsb
out
mov
push
insl
cmp
mov
dec
ljmp
or
mov
lret
mov
out
shrl
cmp
cltd
inc
repz
and
aam
popf
in
lds
adc
leave
movsb
ret
cmp
fwait
adc
bound
xor
dec
rorl
inc
xchg
lcall
add
lahf
sbb
imul
xchg
push
lcall
sahf
dec
jo
and
mov
in
inc
aas
push
xor
and
xchg
sbb
loop
xor
xchg
push
pop
dec
std
int3
out
jle
fs
int
ss
cmc
mov
es
jae
imul
push
outsb
cli
or
aas
jmp
xchg
jecxz
test
pop
lret
cwtl
cmpsl
ds
xchg
scas
ss
lret
push
pop
cwtl
scas
js
mov
or
add
cmp
push
add
adc
enter
mov
xor
cmpsb
pushf
pop
sbb
scas
je
repnz
loope
push
fcoml
pop
cmpb
lock
mov
cmp
pop
jge
dec
andl
cmpsl
roll
jbe
or
repnz
inc
or
lcall
cwtl
jmp
or
rclb
inc
stc
aam
mov
roll
inc
int
inc
xchg
cwtl
dec
dec
mov
rolb
lret
lahf
ret
addr16
js
insb
pushl
dec
mov
mov
not
loope
std
sbb
lcall
sbb
mov
cmp
push
ficompl
mov
or
jge
and
lock
sti
sar
in
pop
or
int
sahf
adcb
cwtl
pop
pusha
sub
inc
outsl
flds
push
test
and
mov
stc
mov
push
hlt
mov
aas
push
loopne
cs
push
dec
bnd
mov
sti
cwtl
xor
adc
sub
insb
dec
xor
and
lahf
cltd
test
dec
mov
outsl
jmp
push
jmp
mov
lods
call
int3
lds
lea
loopne
pop
rcrb
cmpsb
sub
add
jns
mov
fsts
fistpll
inc
jmp
fisttpl
cmpsb
aam
movsb
mov
xchg
adc
mov
nop
push
mov
sti
fsubrl
out
fistps
xor
or
mov
fisubrl
scas
or
lock
mov
fstl
and
cmpsb
pop
inc
push
or
pop
call
or
dec
repz
push
cwtl
test
jge
gs
dec
cmc
cmp
push
shll
jmp
cmp
aad
lods
clc
lods
dec
es
xor
mov
ja
cmp
and
popa
icebp
xor
sbb
es
roll
push
jge
add
shll
cmp
lds
mov
mov
push
inc
lods
cli
mov
fimuls
xchg
insl
mov
sub
xchg
pop
and
add
or
insl
cli
mov
pop
dec
lods
in
push
mov
sbb
ret
jnp
divb
mov
imul
or
lock
inc
and
lret
cmp
addr16
cwtl
cmc
mov
add
mov
xchg
dec
rolb
cmp
adc
lock
fldl2e
mov
xchg
icebp
in
mov
sbb
jno
push
or
mov
or
enter
xchg
aad
icebp
adc
in
add
push
cli
lahf
jle
mov
fsubs
aaa
cltd
mov
inc
mov
rcrl
hlt
test
ljmp
sub
stos
mov
sub
pushf
push
jno
mov
adc
in
aam
push
aam
mov
or
xorb
jne
mov
gs
jo
mov
aad
mov
or
push
popf
sub
aaa
aas
inc
pop
inc
imul
or
sub
inc
ss
rolb
repnz
jbe
cmp
jge
je
xchg
lods
mov
out
test
rolb
das
inc
mov
mov
jo
push
and
ja
adc
mov
lret
sti
aas
or
jg
cmpsl
incb
dec
cmp
dec
out
jp
inc
jns
xor
jecxz
std
dec
popa
or
mov
mov
xchg
enter
cltd
scas
mov
mov
add
idivl
outsl
mov
addb
adc
jmp
dec
and
adc
xchg
loop
setb
lods
rclb
ljmp
push
adc
and
mov
leave
pop
push
mov
sti
clc
mov
gs
cli
cmc
mov
inc
xorb
cmp
add
test
mov
adc
pop
lea
mov
mov
cmp
enter
pop
or
in
out
lods
dec
or
inc
fwait
imul
imul
das
xor
or
add
fstl
orb
mov
fcomi
cli
sbb
cmp
mov
cltd
pop
inc
pop
sbb
lahf
cmp
repnz
or
loope
adc
mov
sub
addb
out
push
js
jne
lcall
cwtl
outsb
jne
xor
sub
dec
mull
movsb
mov
mov
jae
cmp
sub
dec
ret
mov
call
sarb
inc
out
or
das
dec
pushl
xor
fst
push
sti
push
mov
sbb
cli
lahf
leave
pop
cmp
inc
inc
mov
sub
cmpsl
jne
loope
sbb
imul
cmpsb
stc
pop
mov
cld
push
cld
xorl
jnp
cs
fldt
mov
lret
pop
int3
adc
lods
shrl
inc
loope
cmp
mov
es
movsb
and
sub
cli
scas
fimull
xchg
aas
adc
and
cmpb
xchg
cmp
arpl
test
and
clc
scas
iret
lds
shll
mov
sub
dec
sub
insb
insl
data16
mov
sbb
rcrb
pop
cmc
lret
out
push
iret
fstps
xchg
xchg
fs
dec
dec
aaa
jg
mov
mov
jae
cltd
inc
cmp
dec
push
aaa
ret
movsb
xchg
aam
and
dec
mov
scas
fidivs
lods
xchg
rcrb
addb
sbb
insb
sbb
loopne
mov
sbb
inc
push
mov
ds
or
and
sbbb
loope
mov
out
mov
cmpsb
sbb
jmp
sub
sbb
dec
ror
cmp
loope
aam
mov
int3
mov
mov
movsl
xor
jns
jl
push
jecxz
and
push
cmpsl
aam
add
in
je
lds
sub
idivl
adc
pop
dec
ja
loopne
dec
or
pop
xor
push
cmp
int
push
sbb
loopne
jge
xchg
mov
cmp
popf
sub
dec
or
fcmovb
add
loopne
test
push
mov
sti
mov
jg
xor
call
jb
fwait
into
adc
loopne
adc
jno
and
adc
push
testb
data16
ret
fidivl
mov
jae
jb
sbb
hlt
pop
shll
movsb
jmp
jmp
das
sbbl
repz
in
int3
dec
test
cmp
stos
push
shrd
adc
andb
push
lods
dec
mov
jb
scas
test
popa
jbe
pusha
icebp
jo
decl
xlat
dec
loop
push
test
push
fwait
pushf
movsl
lds
arpl
sub
cmpb
cmpsb
leave
inc
lock
rcll
xor
cltd
dec
inc
push
aaa
inc
or
int
push
decl
into
inc
mov
mov
mov
je
add
fdiv
icebp
dec
dec
sub
test
test
data16
clc
stc
scas
rcr
int3
lret
outsl
hlt
jecxz
push
mov
fidivrs
xchg
adc
cwtl
idivb
adc
xchg
adc
inc
mov
mov
xor
xchg
pop
sub
mov
xchg
or
sbb
mov
aaa
mov
cli
enter
nop
fwait
inc
inc
xchg
inc
mov
out
andb
jns,pn
mov
xchg
push
push
leave
sbb
mov
nop
mov
out
pop
pop
push
mov
fisttpll
xchg
sahf
push
ror
lahf
xorb
popf
pop
test
repnz
sub
imul
mov
and
cld
push
mov
in
cs
loopne
nop
cmp
dec
xor
ret
push
pop
loope
test
sbb
sarl
fcoms
mov
loopne
add
push
subl
lahf
jge
fsubrl
dec
mov
in
add
jecxz
jae
int
mov
out
test
mov
xchg
jg
mov
stos
mov
push
stc
mov
cmp
imul
ss
mov
mov
aaa
addr16
or
ss
iret
pop
xor
fisubrs
lock
mov
aaa
jae
adc
popa
pop
mov
ffreep
ds
int
and
aad
pusha
icebp
cltd
xchg
xchg
mov
fidivl
test
popa
sub
test
or
dec
gs
mov
lods
scas
ss
es
cli
xor
jp
pop
jp
mov
xor
jb
xchg
mov
in
inc
pushf
pop
ljmp
push
data16
xor
mov
mov
rcrb
jne
xlat
add
popa
inc
es
lods
lods
or
jnp
mov
xchg
pop
loopne
jo
fsubl
jmp
scas
cmp
inc
aam
fs
cmp
jno
movsl
mov
out
sbb
xorb
or
imul
je
lods
mov
popa
cmc
mov
shll
stc
cmp
mov
cmp
jae
xchg
leave
in
xchg
push
mov
lock
int
push
xchg
lods
push
or
and
sahf
and
and
mov
mov
inc
int3
enter
dec
sti
dec
push
jns
stos
scas
in
lea
loope
sbb
xchg
ja
imul
xor
aas
scas
mov
sub
stos
push
scas
imul
sbb
mov
mov
dec
fsubrl
arpl
jno
je
jno
aam
cmc
and
mov
loope
add
aad
inc
adc
xchg
xor
xchg
js
pop
fnstsw
cmp
xor
sub
mov
les
sub
loope
aas
das
cmp
or
xor
dec
daa
enter
add
jbe
sahf
add
jne
out
cld
out
popf
jno
and
mov
mov
subb
sub
lods
mov
sbb
mov
sahf
aad
fwait
imul
sbb
jp
sarl
mov
push
in
rcll
lahf
stc
xor
inc
add
adc
dec
ret
sub
push
jge
xchg
ja
in
add
inc
inc
lret
jmp
test
jne
push
stc
call
cmp
mov
push
pop
jb
sub
sbb
into
outsb
sub
inc
ljmp
pop
je
inc
fnsave
enter
scas
jle
fdivs
mov
sti
jecxz
popa
mov
cmp
aad
add
xor
add
or
inc
insl
ret
icebp
inc
inc
lds
lret
out
mov
in
or
iret
mov
push
cltd
movb
fcompl
xor
sub
insl
test
data16
sbb
popa
pop
jno
addl
mov
xchg
daa
add
sahf
jge
mov
jl
je
pop
cli
mov
dec
jo
jnp
scas
adc
jb
lock
out
arpl
jno
jo
inc
sbb
jge
cmc
pusha
jo
push
xchg
add
mov
dec
jmp
lods
sbb
sub
mov
add
mov
inc
dec
xchg
enter
int3
dec
shll
or
push
sbb
sub
dec
rorb
mov
sahf
adc
cmp
jle
shlb
loop
fwait
shlb
mov
rorb
jns
pop
push
jno
addr16
inc
mov
jns
xchg
inc
lahf
cmp
jl
inc
outsl
push
mov
test
mov
sbb
and
or
xchg
push
inc
outsl
push
or
dec
movsl
jg
pop
sbb
mov
es
out
adc
push
repz
fbld
test
mov
mov
fidivrl
mov
jg
sbb
decb
inc
into
mov
mov
sub
sbb
add
lret
cmp
xchg
jge
mov
repz
mov
clc
nop
dec
jle
and
pop
in
inc
mov
xchg
out
sub
lock
ss
call
leave
aad
out
or
call
push
shll
aam
jg
adc
xchg
outsb
cltd
in
lcall
insb
adc
cltd
dec
jmp
mov
orl
push
pop
lods
jg
mov
fdivs
jecxz
insl
outsb
das
ficoml
mov
in
xchg
lea
stos
jbe
push
fidivs
pop
test
movsb
aaa
out
xorl
ret
icebp
shrb
mov
call
pop
adc
jmp
loope
xchg
sbb
das
loope
adc
arpl
xchg
shrl
mov
dec
sbb
out
jp
push
mov
or
sbb
mulb
push
pop
lahf
adc
xchg
lds
daa
sbb
testl
add
mov
cwtl
pop
sti
mov
data16
jb
jecxz
inc
movsb
jg
dec
mov
mov
mov
rclb
sti
push
icebp
fstl
adc
mov
cmp
fildl
mov
out
add
sub
or
mov
mov
and
mov
pop
dec
frstor
adc
popf
scas
cmc
push
push
in
test
movsl
cmc
lahf
mov
fs
fistps
cld
es
imul
pop
lock
xor
repz
loope
in
sbb
fsubs
adcb
push
mov
and
movsl
popa
jl
scas
jl
add
cmpsb
mov
add
or
jmp
adc
inc
dec
inc
cmp
ja
lea
ds
iret
int
clc
mov
push
in
fdiv
scas
xor
ret
inc
sbb
sbb
jnp
jmp
nop
ret
mov
jb
xor
mov
imul
push
jns
lods
shlb
sbb
aam
clc
or
jmp
or
lods
xchg
push
jno
pusha
int
xchg
arpl
fisttps
jae
mov
sbb
aam
shrb
adc
int3
test
jg
insl
neg
out
ja
pop
inc
adc
mov
inc
call
bnd
push
lret
jg
ljmp
dec
ds
nop
cmp
or
gs
cmpl
push
out
outsl
push
mov
roll
pop
mov
pop
fsubl
fsubrl
sub
sub
dec
jbe
sub
arpl
jl
outsl
stos
mov
mov
inc
push
and
add
xchg
push
jno
lock
dec
mov
hlt
sahf
enter
xchg
lock
mov
pop
fmul
ret
into
pop
or
sti
or
aaa
shlb
into
call
adc
cltd
sbb
in
iret
add
or
or
shr
cmc
mov
iret
lods
sbb
xor
cltd
xor
xchg
mov
sbb
and
loop
pop
cmpsl
xchg
xor
xchg
lcall
pop
inc
in
fwait
or
arpl
cltd
movsl
sar
dec
jo
inc
fiaddl
ds
push
xchg
lret
and
out
in
dec
dec
fsubs
and
fwait
insl
jb
jnp
fldl
jbe
dec
sbb
dec
push
in
and
in
dec
pushf
insl
or
insl
es
sub
mov
bound
push
xchg
push
out
push
jo
test
in
mov
inc
pop
jae
cmp
sub
push
imul
pop
adc
mov
xchg
in
adc
hlt
xor
outsl
gs
and
xorb
aas
cmp
dec
and
xchg
iret
ja
jnp
xchg
or
movsb
add
or
push
lahf
das
push
inc
adc
sub
pop
pop
pushf
xchg
das
std
loop
lods
xor
lea
das
out
sbb
xchg
out
or
or
or
int3
sbb
ljmp
dec
mov
xor
sbb
cmp
sub
stos
add
divl
ja
aaa
or
xor
xchg
add
in
jbe
or
inc
cmpsb
and
xchg
push
leave
dec
xchg
call
inc
cmc
jnp
jbe
jne
dec
xor
jl
adc
push
notb
iret
inc
mov
or
in
pop
dec
pop
cltd
mov
sub
in
hlt
std
mov
icebp
popf
cmpsb
loope
test
loopne
pop
shld
pop
sbb
lods
std
fs
inc
dec
mov
cmp
test
ljmp
lods
cmp
js
push
aam
daa
adc
adc
ds
adc
pop
into
lahf
mov
mov
xchg
mov
lahf
dec
movsl
sbb
arpl
sbb
andl
jb
test
test
push
mov
push
push
pushf
and
or
arpl
dec
pop
xchg
test
in
mov
and
cli
pop
inc
inc
pop
subl
sbb
mov
aaa
cld
insl
out
pop
jbe
and
lret
and
or
in
mov
nop
add
xchg
cmp
outsl
fsubs
fidivs
push
cmpsb
adc
mov
in
jmp
jmp
or
or
nop
fwait
pop
pop
dec
subl
bound
push
add
mov
sbb
gs
add
sub
loop
mov
pop
orb
jnp
arpl
push
hlt
adc
jo
jo
fcmovu
loop
mov
sbb
push
insl
or
out
sbb
insb
stc
push
scas
xor
mov
jle
jmp
or
data16
mov
ljmp
movsb
jne
iret
jge
in
movsl
lea
scas
xchg
or
hlt
mov
out
rclb
mov
mov
push
fs
sbb
mov
rcll
es
das
mov
into
jne
push
lds
xchg
or
rol
je
int
xchg
dec
sarb
mov
push
dec
ret
ljmp
fadds
push
hlt
jle
outsb
movsl
out
push
pop
movsl
sbb
aad
xchg
dec
sub
lret
je
or
mov
ds
lods
jo
jne
addl
mov
adc
sbb
je
test
rorb
adc
fsub
cli
mov
mov
ljmp
int3
xor
jp
add
testl
les
mov
xchg
cmp
sbb
ds
std
cwtl
jnp
inc
mov
cli
pushf
sbb
stos
cmc
clc
cld
xor
inc
dec
xchg
mov
fimull
repz
or
mov
daa
mov
add
es
push
or
js
mov
pop
adcb
lret
sti
mov
xor
sbb
out
dec
add
or
rcll
fistl
inc
inc
cld
sub
dec
sub
jg
in
sub
dec
loop
push
or
sbb
cwtl
inc
mov
fsubp
lahf
mov
std
repnz
pop
test
mov
nop
ja
mov
scas
leave
inc
pop
xor
xor
sbb
loop
test
add
vphaddbw
and
and
lods
inc
push
mov
bound
mov
inc
mov
lahf
popa
xchg
mov
mov
call
aas
push
cmp
xchg
outsb
daa
popa
clc
pop
and
adc
int
xor
xor
and
push
mov
xlat
outsb
movsl
fcomps
mov
sub
stos
dec
jle
jo
insb
xor
popf
shl
mov
mov
adc
push
inc
jbe
int3
cmpsl
mov
xchg
enter
mov
inc
icebp
sbb
inc
adc
dec
gs
data16
insb
cmpsl
ds
rcl
cli
mov
mov
sbb
dec
data16
pop
mov
rorl
lock
inc
inc
adc
push
lds
insb
sbb
jl
mov
push
lock
push
mov
push
sahf
xor
in
mov
cmc
out
or
out
xchg
add
xchg
mov
inc
fsubrp
cld
cmp
and
inc
pop
idivb
dec
fists
mov
xor
cli
ja
and
and
jg
fnstenv
mov
jno
icebp
cli
jae
and
pop
icebp
dec
inc
mov
jg
shrb
mov
sbb
and
inc
mov
scas
xchg
es
jnp
es
inc
fisubrs
dec
iret
data16
sti
xchg
int
aaa
into
ret
ret
call
bound
out
imul
cmp
push
inc
fimuls
sub
mov
sti
xchg
lods
mov
jle
into
adc
nopl
xor
dec
sahf
mov
sahf
mov
mov
jle
or
jno
xor
dec
nop
mov
mov
testb
or
pop
mov
pop
mov
inc
mov
lock
aad
mov
cmp
and
sub
jb
push
out
mov
push
call
pmaxsw
mov
imul
mov
mov
mov
fs
mov
pop
xor
imul
ja
mov
insb
lods
xlat
and
stc
xor
pop
imul
push
inc
mov
mov
xchg
cs
ret
pop
adc
xchg
sub
xor
imul
push
mov
add
mov
sti
xor
xchg
imul
inc
mov
mov
adc
ss
xor
popa
imul
lahf
inc
mov
lret
cmp
sahf
out
test
rolb
out
xchg
dec
in
mov
popf
xlat
imul
mov
inc
cld
xchg
xor
cmpsl
ds
pop
sahf
xlat
mov
adc
pop
imulb
xchg
and
int3
arpl
adc
movsb
cmp
fs
adc
mov
ficompl
fdivl
xchg
popa
fcos
xchg
add
movsb
cmp
add
and
int3
arpl
jge
mov
enter
jb
ljmp
or
cwtl
push
cld
xchg
push
mov
lods
push
insb
add
les
popa
pop
mov
pop
mov
push
mov
dec
loop
add
out
ds
hlt
pusha
pop
repnz
addr16
xchg
cs
pop
movsb
cmp
pop
repz
inc
ficomps
pusha
imul
pop
sbb
xor
push
dec
out
repz
repnz
pop
repz
lahf
and
sbb
pop
mov
pop
bnd
mov
and
es
sbb
fidivl
insb
add
mov
mov
mov
xchg
iret
iretw
and
jb
out
pop
out
pop
jg
and
leave
pop
repnz
adc
outsb
add
and
test
jge
into
movsl
add
repnz
sti
xchg
mov
jb
jnp
mov
les
scas
push
pop
repnz
enter
je
aam
pop
movsb
cmc
sbb
decl
or
or
les
pop
mov
ret
call
jb
push
dec
fisttps
xchg
sub
pop
repnz
jns
push
mov
jl
loope
jl
movsb
mov
aad
shrl
test
and
xchg
jne,pn
das
and
gs
ja
ret
pop
push
cltd
dec
loop
aaa
test
add
test
jg,pt
int
add
mov
push
stc
add
mov
and
or
rcrl
mov
sbb
ret
sbbl
fistpl
nop
daa
dec
cld
out
sub
pop
cmpsl
dec
add
lcall
add
es
cmpsb
scas
inc
dec
loop
iret
inc
xchg
imul
sbb
jmp
in
sub
insb
jl
fwait
xor
dec
arpl
pop
mov
rcrl
loop
add
imul
std
xchg
loopne
sbb
xor
push
inc
fildl
push
out
jo
add
sub
dec
mov
jne
mov
dec
sahf
cltd
daa
leave
popa
loope
lcall
ljmp
pushf
cmp
adc
test
inc
loope
mov
mov
push
or
lret
xor
pop
dec
flds
lods
pop
out
sbb
and
shlb
dec
lahf
sub
add
lret
aad
call
pop
jmp
push
xchg
mov
push
jp
cmp
inc
loope
push
mov
mov
jbe
pop
movsl
sahf
daa
fnsave
sbb
sub
lcall
adc
mov
cmpb
sbb
leave
pop
xor
pop
out
imul
mov
xlat
js
or
stc
lea
mov
pop
outsb
or
lods
mov
test
std
push
sub
pop
cmp
andb
lahf
scas
dec
mov
pop
shl
arpl
adc
aam
sub
lcall
lcall
int
mov
paddb
cmpsb
adc
cs
hlt
insb
aad
cmpsb
mov
add
sub
push
aas
push
xor
jle
shlb
test
shll
xchg
and
jmp
shll
cs
jbe
out
mov
lea
jmp
dec
ljmp
js
data16
mov
mov
cs
adc
cwtl
sbb
push
loop
cmp
xor
int
inc
add
mov
cs
loope
push
loopne
xorl
mov
push
pop
sub
jbe
jp
jo
pop
fmul
lea
ret
in
sbb
cltd
sbb
js
jo
lea
fwait
mov
lds
cwtl
sbb
adc
addb
sub
jle
rclb
push
loop
lret
or
xchg
cmp
fcomps
mov
jb
jecxz
lods
cwtl
lret
add
xlat
jb
or
insb
jnp
lods
movsl
test
sahf
ljmp
subl
sub
lcall
btr
stos
sti
jg
hlt
daa
lret
repz
es
jl
xchg
mov
jl
add
jl
cmp
test
icebp
jle
xchg
sbb
std
lds
mov
or
scas
dec
xor
aas
mov
scas
movsl
cs
xlat
test
sbb
xor
mov
push
dec
dec
ljmp
jns
aad
shrd
out
push
mov
jp
daa
aad
test
loope
clc
mov
cld
insl
sub
push
mov
xlat
fs
fwait
sbb
roll
sub
xor
dec
insl
mov
test
gs
add
jae
adc
out
mov
fsts
scas
or
ss
or
push
in
scas
pop
aas
nop
iret
jo
add
xchg
push
add
add
cmpsl
push
nop
daa
mov
ret
pop
cli
stos
mov
insl
dec
std
aam
das
outsl
clc
mov
ret
repz
test
idivb
push
dec
mov
cmp
pushf
pop
icebp
int
and
and
jne
inc
insl
jae
cld
xchg
out
hlt
mov
pop
sbb
sbb
rorb
lods
pop
hlt
fisttpll
jg
xor
jle
adc
sub
xor
xlat
test
js
fdivrs
iret
or
jge
push
in
pop
popf
fnsave
je
stos
in
sti
xchg
pop
rcll
mov
sub
inc
pop
xorl
mov
mov
jae
pop
mov
mov
or
sarl
mov
xor
in
push
leave
pusha
xchg
mov
testb
stc
sbb
cmp
test
add
in
arpl
inc
out
aam
pop
push
adc
xor
aam
imul
cltd
lret
xchg
or
fidivrl
iret
stc
dec
cmp
mov
gs
cmp
jbe
orl
mov
sbb
repz
xchg
sub
adc
and
mov
dec
imul
push
or
sti
xchg
jl
pop
testb
xor
jle
lahf
insl
mov
daa
out
mov
pop
call
jmp
mov
xor
lret
inc
mov
ret
fsubrs
dec
and
stos
ss
mov
lods
rorb
stc
dec
icebp
cmp
sbb
mov
ret
adc
fwait
xor
sbb
out
cld
jae
mov
xor
decb
sbb
mov
icebp
push
sbb
mov
add
or
xchg
loop
insl
add
add
mov
and
pushl
pop
adcb
or
fistpll
cmp
cmp
adc
inc
jo
popf
mov
mov
shl
ss
icebp
popf
xor
jge
and
adc
sti
pop
xor
icebp
lods
or
xor
and
insl
pop
ljmp
imul
mov
ret
pop
flds
cmp
decb
cmp
icebp
lods
js
xor
cmp
dec
sbb
data16
jle
cmp
inc
mov
cmpsl
ds
dec
mov
jle
lds
out
sub
in
add
leave
aam
mov
shl
mov
cmpsb
mov
xor
or
sbbb
loope
cmp
ret
fdivr
xchg
push
add
cli
js
js
jge
test
pushf
stc
nop
push
sub
pop
dec
and
dec
push
cmp
inc
or
sahf
cmp
test
clc
jns
ljmp
cmp
mov
mov
loope
jg
and
mov
jnp
repnz
and
jmp
xor
sub
testl
push
mov
xor
inc
pop
movsl
cmp
push
addr16
cmp
jno
icebp
or
jp
jp
popa
lods
out
jmp
in
test
mov
mov
sbb
mov
xor
inc
pop
dec
loop
jne
cmc
data16
loope
jno
push
push
scas
inc
or
add
pop
sahf
xor
xor
aas
xorl
ds
and
scas
repnz
pop
cmpsl
ds
imul
adc
xchg
cmp
jno
fwait
xor
clc
jbe
sub
lahf
ss
scas
mov
cmp
push
sahf
xor
xchg
sbb
test
dec
sbb
sub
inc
fnstcw
lea
add
xor
push
jmp
mov
inc
outsb
mov
mov
daa
mov
pushf
in
and
gs
out
xor
loopne
stc
nop
inc
adc
test
arpl
inc
mov
inc
sub
cmp
cmp
add
dec
mov
mov
insb
outsl
jns
mov
sub
jns
and
push
dec
cmpsb
add
pop
add
les
stos
sbbl
lcall
rolb
inc
dec
loop
pop
jmp
adc
mov
sti
movsb
xchg
xlat
cli
sub
jmp
xchg
sub
ljmp
mov
outsb
add
gs
lret
in
xchg
pop
add
or
imul
jmp
in
popf
push
call
arpl
sarl
mov
stos
scas
loopne
dec
adc
in
or
out
xchg
xlat
scas
inc
leave
sbb
jle
sub
movsb
jge
subl
hlt
push
outsb
pop
out
pop
push
push
fimull
adc
inc
dec
adc
cmp
mov
mov
repz
pop
and
sub
andl
pushf
lret
mov
or
jnp
sub
insb
ret
xor
rep
push
movsl
pusha
jbe
sti
test
adcb
das
jbe
pusha
cwtl
shrl
call
mov
inc
adc
sub
fcomp
jae
xor
movsb
into
out
test
test
and
leave
sbb
dec
addb
mov
jmp
dec
pop
icebp
in
sbb
out
nop
daa
add
les
pop
mov
arpl
and
xchg
push
mov
or
movsl
push
cmp
cmp
dec
in
pop
test
xsha1
cmpsb
mov
push
ljmp
inc
hlt
mov
out
loopne
xor
rcrl
repz
cld
mov
out
popa
and
xchg
mov
lds
dec
pop
out
jge
shrb
cld
sbbb
mov
sub
mov
pop
iret
sub
shlb
scas
lret
ss
push
loope
pop
adc
data16
jb
cltd
cwtl
das
or
rclb
fidivl
jae
cmp
cs
popa
push
fdivl
call
xchg
sub
movsb
xor
adc
inc
shlb
pop
jo
andb
add
int
sahf
mov
lods
mov
jne
dec
inc
fstpt
fucomip
jg
sub
repnz
int3
sbbl
int
mov
push
lret
or
push
aas
into
pusha
testl
lret
or
testl
sbb
dec
xor
cmp
fsubrs
xor
arpl
mov
adc
sub
mov
test
xor
bound
pop
hlt
and
adc
out
test
mov
das
sub
mov
fcomps
aad
shll
shrb
adc
sbb
or
aad
rclb
inc
xlat
lds
push
jmp
test
mov
testl
xchg
mov
mov
mov
jb
loop
stc
sub
or
fnsave
leave
into
xor
lock
xor
adc
inc
jno
pop
icebp
add
les
jbe
js
jb
movsl
imul
rcrl
in
pusha
pop
fwait
xor
arpl
add
add
xor
adc
cmp
pusha
imull
stos
in
sbb
pusha
push
out
push
pop
jp
mov
lea
clc
push
jmp
stc
mov
sub
int3
arpl
lods
loope
ficomps
push
jmp
cltd
repz
into
loop
rorb
out
cmp
outsb
ja
jae
jmp
inc
ficomps
imul
sahf
icebp
mov
xlat
popf
xor
push
les
iret
cmpsl
add
mov
clc
sti
inc
jg
jp
push
ljmp
mov
mov
sbb
or
loopne
push
adc
cmp
lods
into
or
clc
popl
and
mov
leave
je
lret
cmpsb
or
int3
jge
data16
push
adcb
dec
icebp
jb
jecxz
movsb
cmp
push
jmp
cmp
mov
test
adc
leave
js
subb
sbb
imul
adc
pop
out
add
mov
mov
mov
xchg
sub
xor
mov
push
jecxz
addr16
aam
xchg
push
xchg
mov
rorl
cld
leave
pusha
out
jne
aad
in
ss
and
push
lock
cmp
sbb
dec
loope
or
push
das
movb
stc
addl
icebp
aaa
ret
mov
insb
add
mov
mov
xchg
sub
lea
loopne
jns
inc
mov
jbe
ss
icebp
in
and
pushf
xor
jno
sub
pop
lock
subl
mov
mov
shlb
pop
repz
out
outsb
add
mov
cwtl
das
fdivs
ret
sub
popf
xchg
aam
leave
loopne
inc
rclb
sub
cmpsl
mov
lods
inc
mov
cmp
data16
lds
loop
jecxz
and
adc
lret
pop
hlt
or
sub
les
push
cs
adc
outsb
inc
lahf
dec
in
add
cltd
ss
xchg
sub
loope
dec
in
push
es
pop
push
out
in
push
jmp
jg
es
cli
mov
sub
lods
mov
xor
enter
fmuls
cwtl
das
lea
arpl
sarl
xorb
sub
daa
jbe
mulb
daa
mov
pop
xchg
xor
ret
fwait
jo
or
push
xchg
subl
pop
repz
in
test
or
sbb
mov
test
and
scas
push
add
push
jbe
inc
flds
jo
cli
or
mov
sbb
iret
mov
inc
mov
ror
repz
je
sub
mov
lahf
cltd
addr16
cltd
mov
fnsave
inc
fdivrl
push
in
addl
sbb
jecxz
sub
and
mov
fistpll
mov
cld
int3
stos
fldcw
out
test
and
cmc
mov
inc
mov
cmpsl
adcl
fdivl
dec
fbld
std
xchg
outsl
inc
gs
js
sbb
lret
fnstcw
aaa
daa
sub
out
pop
inc
mov
or
xchg
fdivs
leave
nop
sub
loop
xchg
sbb
sbb
push
shrl
xor
mov
fsts
push
pop
adc
popa
jno
lds
ret
dec
jecxz
aad
inc
pop
push
imul
sub
arpl
mov
fwait
jnp
subl
shufps
daa
mov
xchg
jb
fsubl
mov
adc
xchg
push
sbbb
push
inc
fldl
inc
push
out
cld
rcrl
jp
sub
jecxz
loopne
mov
fcomip
push
popf
out
mov
mov
mov
cmp
pop
icebp
fwait
jmp
jg
int
push
lods
adc
movsb
cmp
ret
mov
mov
dec
loope
mov
jl
cmpsl
inc
hlt
mov
and
mov
inc
inc
xor
ss
mov
inc
xor
mov
pop
pop
mov
pushf
xor
shrb
mov
fwait
pusha
add
lods
sbb
jp
filds
adc
pop
xlat
dec
loope
jno
mov
add
rcll
and
add
jae
xor
loop
imul
hlt
mov
lods
mov
mov
cmp
dec
sti
xchg
aas
xchg
mov
adc
inc
xor
adcl
hlt
in
xor
jmp
in
or
negl
in
movsb
int
mov
push
lods
push
movsl
sbb
sub
inc
fidivs
mov
movsb
and
adc
xchg
fmuls
mov
xchg
stos
jge
mov
lahf
icebp
hlt
leave
pusha
es
cmp
out
sti
xchg
shl
sbbl
xchg
or
push
mov
add
push
out
outsb
add
pop
test
das
fistl
inc
dec
sahf
ret
mov
mov
cwtl
aam
lret
fnstenv
push
popf
mov
cmp
cmpsl
push
ret
pop
pop
out
daa
mov
pop
fidivl
enter
rcll
int3
arpl
push
outsl
push
inc
jns
or
test
pop
imull
call
inc
dec
jmp
popa
fisttpll
fnsave
in
jnp
call
arpl
mov
in
jg
or
add
cmp
bound
lahf
mov
aam
xchg
shll
add
pop
out
ljmp
lret
mov
mov
push
lods
cs
jl
pusha
jb
push
out
out
xchg
gs
push
cmpsl
sbb
pop
lahf
sub
shrb
sub
pop
hlt
enter
pop
addr16
insl
push
call
mov
inc
mov
lods
add
mov
sub
fbstp
xlat
aad
leave
push
ret
pop
jmp
sbb
lea
les
call
das
pusha
dec
jecxz
stos
sbbl
push
fwait
xchg
sub
fs
sahf
push
mov
pop
mov
cmp
imul
pop
out
stc
nop
and
mov
cmpsl
or
pop
lahf
cmp
outsb
pop
xchg
inc
fmulp
outsl
mov
call
add
testl
ljmp
ljmp
into
mov
sti
xchg
inc
ss
jns
movsb
test
xor
into
popa
sub
clc
sbb
xchg
popf
mov
lds
ret
repz
sub
mov
mov
daa
sub
xchg
ss
sbb
mov
repnz
cs
ds
xor
lock
add
pop
popf
xor
pop
and
jle,pt
pop
icebp
push
mov
sbb
lahf
pop
xchg
lcall
xor
pushf
inc
pop
js
jg
jbe
cmc
stc
mov
xchg
ljmp
add
jns
aam
sbb
xchg
mov
pop
or
add
dec
rcrl
add
nop
js
or
pop
inc
fdivrl
std
xchg
pop
ljmp
and
dec
loopne
push
clc
popl
fs
scas
cmpl
push
cmc
mov
out
pusha
imull
call
push
out
or
mov
mov
mov
pop
enter
add
xchg
sub
pop
out
xchg
lds
mov
sti
inc
iret
data16
sub
jmp
stc
nop
sub
int3
arpl
mov
mov
xchg
gs
test
xchg
test
jae
push
call
arpl
sbbl
arpl
jbe
scas
xchg
sub
cwtl
sbbl
lcall
pusha
mov
les
dec
sti
xchg
jp
pop
repnz
or
sbbb
cwtl
das
and
inc
fildl
jae
leave
jne
addr16
movsl
cmp
xchg
jns
or
or
stos
aas
fnstenv
fdivrl
sub
dec
jecxz
lods
sbb
cltd
cmc
cltd
daa
mov
ja
xor
xor
xor
push
mov
cld
push
dec
push
call
or
xchg
aas
into
cltd
xor
push
xchg
sub
stos
inc
stc
je
shlb
fstl
xor
mov
test
jle
or
inc
cli
push
addr16
pop
shll
push
sbbb
test
lods
inc
pusha
das
test
add
aaa
sub
test
in
test
lods
icebp
mov
fcoms
scas
or
aas
aas
rolb
add
mov
enter
jno
arpl
and
push
out
mov
mov
fwait
xor
popf
std
xchg
iret
repz
mov
adc
ljmp
ret
ficoms
lsl
mov
cld
ja
sub
mov
lods
insb
and
pop
sub
push
pop
mov
into
in
dec
sbb
inc
sub
mov
cmp
and
mov
stos
xchg
sbb
enter
sub
cmp
shrb
das
add
mov
mov
inc
sub
push
lods
adc
sbbl
aad
fadds
lds
cmc
inc
rclb
test
cmpsb
sub
mov
and
mov
pop
rcrl
shrl
paddq
xchg
xor
add
pop
popf
cmp
sub
adc
lahf
insb
inc
fstpl
pop
push
out
sbb
jp
jle
or
sub
repz
mov
fs
fcomps
clc
xor
jmp
sbb
pop
xchg
insl
je
pop
repz
movsl
test
mov
inc
xchg
cmp
les
dec
in
sti
fdivl
xor
gs
cmp
adc
nop
adc
or
sahf
sarb
inc
rol
inc
fdivp
adc
mov
cmpsb
call
sbb
sub
sub
xor
pop
inc
mov
aam
cmp
sti
inc
mov
mov
cmpsl
test
pop
imul
das
cmp
jno
fwait
xor
clc
mov
sbb
pop
lock
fisubs
xor
xlat
scas
inc
or
pop
idivb
fnstenv
jge
outsl
imull
out
jb
mov
mov
mov
xor
and
push
jmp
jo
adc
pop
mov
pop
daa
dec
out
pop
xchg
sub
es
pop
dec
cs
out
push
shrl
scas
sahf
xor
cmp
loop
mov
jecxz
je
data16
xchg
cwtl
fs
or
xchg
xchg
sub
jae
pop
test
enter
xchg
loopne
xchg
jae
sbbl
xorl
mov
push
ja
mov
or
test
adc
xchg
loop
jae
add
movsb
xchg
xor
movsb
push
aaa
into
test
popa
clc
jne
jge
lods
std
popa
clc
cs
fwait
xor
push
jg
pop
pop
mov
cmc
xchg
mov
scas
pop
aas
xchg
mov
in
cvtdq2ps
fcomps
les
insb
cwtl
mov
mov
fiadds
dec
fs
sti
inc
pop
adc
scas
lret
add
or
xor
stc
sti
push
fwait
aam
push
hlt
jge
lcall
lcall
push
add
movsb
xor
lods
add
stc
jno
inc
stc
call
lahf
mov
roll
test
enter
ffreep
enter
xor
mov
ffreep
inc
jge
jno
stos
sub
outsl
pop
cmp
mov
dec
mov
in
shl
cmc
lods
xor
mov
out
or
jae
adc
adc
jo
dec
imul
lods
dec
test
daa
push
mov
stc
mov
flds
hlt
dec
cmp
ljmp
fs
stos
int3
jge
dec
sub
sub
xchg
jb
cmpsb
lcall
fistps
add
lods
cmp
mov
daa
or
push
pop
xchg
xor
and
inc
jne
mov
xchg
pop
int
dec
fwait
inc
and
or
adc
mov
xor
movsl
mov
mov
dec
andb
lahf
or
add
xor
cmpsl
insb
pop
addb
pop
jae
xchg
xchg
cmp
xchg
jl
jno
fstpt
dec
xchg
cmpsb
dec
lcall
nop
ret
cwtl
cmp
lds
sbb
ds
cmp
mov
sbb
movsl
pop
test
ret
nop
push
push
mov
fldl
or
scas
mov
lds
fwait
sub
cmpsb
ss
jecxz
es
jae
jecxz
pop
addr16
scas
xchg
jecxz
sub
fbld
scas
jge
movsl
sub
mov
mov
or
imul
ljmp
pop
scas
gs
lods
das
ret
outsl
xchg
cmp
mov
sub
stos
lock
push
movsl
and
sbb
xchg
int3
mov
pop
cmp
ja
daa
clc
xchg
rcll
ljmp
mov
mov
gs
test
sbb
adc
test
mov
mov
andb
xchg
mov
xchg
cmp
test
sbb
mov
xor
xor
int
sbb
ds
jo
repnz
ret
jmp
ret
xor
lock
adc
adc
pop
xor
xlat
xchg
testl
xor
and
out
or
and
inc
adc
jo
jo
pop
push
daa
addb
in
and
call
mov
mov
lods
sub
sahf
cmpsl
xor
out
jbe
mov
clc
stos
sub
add
enter
ss
pop
pop
scas
nop
sub
outsb
adcl
fs
fidivl
lret
push
add
xchg
push
mov
jl
dec
sti
xchg
loopew
shrb
and
inc
aam
sahf
imul
nop
xchg
xor
fbld
or
push
lods
sub
sbb
inc
push
xchg
xor
cs
mov
jmp
mov
imul
popf
arpl
and
loopne
add
sar
jge
cmp
ret
jae
mov
mov
mov
ret
lock
fstpt
sub
cmp
aam
jle
jge
mov
and
loop
cmp
sbb
es
addr16
in
fstl
xor
gs
test
or
gs
fmul
xchg
je
je
dec
xchg
lea
adc
out
fldt
pop
iret
imul
arpl
mov
sub
cmp
mov
call
jo
repnz
rolb
scas
sbb
and
mov
sub
xor
xor
test
ret
cmpb
enter
arpl
adc
xor
or
mov
sbb
and
jl
lds
fists
mov
mov
mov
sbb
cli
jae
loopne
xchg
sub
mov
scas
pop
jl
push
jp
enter
gs
mov
adc
push
push
fwait
xchg
stos
hlt
scas
inc
stc
fisttpl
inc
or
imul
lods
xor
dec
mov
repz
pop
fsubrl
lods
scas
or
das
ss
lret
dec
sub
test
jmp
sub
stos
mov
and
mov
sbb
cmc
and
and
xor
push
out
push
mov
cmp
lcall
sub
lret
sarb
aad
ss
sub
cmpsl
xor
loopne
mov
outsb
cld
daa
inc
rclb
insb
test
daa
jae
pushf
je
in
xchg
xorb
xor
sub
mov
jae
test
in
ret
dec
sbb
dec
inc
or
ja
out
inc
xor
add
jmp
push
lahf
cmp
or
pop
andl
and
xor
mov
shrl
push
or
pop
mov
pop
jae
push
pop
sbb
fcomps
loope
and
cmp
dec
push
push
aam
dec
jp
adc
stos
out
je
mov
mov
js
pop
aas
adc
pushf
out
mov
xchg
lret
mov
stos
int
pop
stos
or
fisttpl
arpl
push
in
addl
or
mov
daa
mov
loope
inc
fdivrl
inc
fdivl
push
fs
xchg
jg
and
xchg
sub
sahf
xor
cwtl
mov
les
inc
jnp
fbld
mov
pusha
int3
pusha
jl
idiv
ja
shl
pop
and
nop
lods
daa
push
les
movsl
aas
cmpsl
mov
scas
push
ror
dec
or
adc
imul
popf
xchg
jbe
xchg
xchg
cmp
xchg
jg
xor
jne
pop
pushf
dec
sub
inc
mov
mov
addr16
and
enter
sahf
ficompl
ret
cmpsl
enter
sti
inc
pop
stos
mov
imul
inc
data16
jge
fmulp
xchg
daa
cmp
std
icebp
xor
loopne
inc
loope
les
mul
sbb
out
cmp
pop
xor
push
add
and
jge
adc
adcb
pop
shrb
xor
xchg
sbbb
cmc
popf
xchg
push
ds
xor
stos
push
pop
ja
js
jge
add
ss
icebp
pusha
push
cwtl
lahf
sbb
imul
jbe
lret
popf
adc
mov
mov
push
rorb
mov
int
jg
xlat
add
jmp
cmpsb
xor
jl
or
xorl
outsb
pushf
dec
or
inc
xchg
inc
ja
popa
push
mov
les
pop
repz
mov
mov
mov
jle
clc
and
xor
out
sub
mov
or
sub
jmp
popf
nopl
notb
out
sub
sub
aas
in
aas
ds
xchg
cs
cmp
sbb
mov
inc
test
pop
jg
fcmovne
scas
mov
mov
outsl
inc
mov
sub
mov
lret
cmpsb
xlat
fidivs
jg
inc
xchg
sarl
loopne
pop
pop
sbb
popa
mov
inc
inc
xor
arpl
push
xor
push
jl
loop
and
jnp
push
mov
mov
mov
loop
jb
popa
cmp
xchg
xor
pop
out
in
pop
scas
mov
fidivl
sub
ja
shrl
leave
pop
out
cli
testl
subb
ret
lret
mov
adc
aaa
shrb
dec
outsl
push
jp
lock
push
movsl
push
out
stos
inc
inc
adc
jp
arpl
popa
xchg
add
call
or
sahf
cmp
ds
pop
and
repnz
leave
pusha
idivb
sub
out
sbb
jl,pn
add
dec
xchg
lea
cmp
dec
jecxz
lds
test
add
sbb
dec
and
inc
int
cs
mov
in
notl
push
inc
dec
xor
jp
xchg
sub
fwait
push
inc
xchg
mov
movsl
mov
cmpsb
jnp
loope
pop
repz
int
sbb
dec
pop
xchg
push
insb
cltd
cld
popf
iret
add
icebp
and
mov
jne
jae
fs
xchg
enter
mov
mov
paddusb
or
cs
negb
nop
daa
mov
jge
mov
lds
aam
xor
sub
daa
mov
add
rorb
lea
and
cmp
and
test
xor
and
dec
call
mov
jl
cmp
sbb
inc
mov
xchg
in
push
fwait
xor
xchg
hlt
adc
xchg
cmp
pop
movsb
inc
inc
push
fwait
xchg
cwtl
mov
cltd
fsubrs
adc
sub
jp
dec
dec
xor
jge
cwtl
das
lahf
sahf
dec
in
shlb
and
and
repz
mov
pop
sbb
in
outsb
pop
dec
in
popl
cltd
shlb
mov
add
ds
pop
test
repz
pop
fst
jp
or
in
xor
cwtl
das
pop
push
add
mov
and
add
aas
sub
pop
hlt
jp
adc
int
cmp
out
out
xchg
and
pop
hlt
inc
inc
mov
repnz
xchg
xchg
movb
mov
jecxz
aas
adc
adcl
inc
sub
dec
in
je
jne
mov
push
and
in
and
or
stos
pop
sub
jae
imul
pop
jle
push
sahf
jle
add
add
sbb
mov
and
sbb
daa
push
adc
cmp
es
pop
mov
dec
pop
adc
pop
pusha
sbb
outsb
add
fwait
adc
and
inc
cmpsl
into
sbb
es
cmp
imul
inc
mov
loopne
mov
add
cld
xchg
in
sbb
ja
and
or
lods
jae
pop
scas
pushf
sub
mov
fidivl
push
or
and
bound
push
push
ret
inc
fisubl
shrb
xchg
shl
outsl
adcb
sbb
scas
xor
jo
sub
or
or
fwait
jecxz
pmullw
fnsave
dec
loopne
sbb
jns
leave
pusha
cs
pop
scas
or
out
xchg
in
sbb
sbb
aam
rol
jne
add
lcall
cli
xchg
sub
xlat
lea
push
jo
sbbb
xor
xlat
push
call
cmpsb
mov
stos
in
pusha
idivl
fxch
arpl
mov
mov
fmulp
xchg
sub
ljmp
lock
subl
mov
or
sub
clc
into
leave
adcb
rcrl
icebp
into
xchg
popa
clc
add
lcall
je
test
insl
or
dec
out
sar
nop
repnz
jnp
rorl
mov
adc
push
lea
shlb
mov
clc
mov
xor
lods
mov
loop
inc
mov
xor
cltd
xor
push
or
xchg
pushw
mov
or
mov
jnp
mov
pop
push
push
pop
nop
push
xchg
sub
rcrl
lret
bound
loope
ss
sbb
mov
pop
pop
push
xchg
sub
insb
push
cmp
adc
adc
xchg
fdivl
inc
sti
xchg
cmp
jns
pop
jmp
dec
add
insb
ss
inc
fcomps
mov
cwtl
jle
xchg
jo
fidivl
xchg
sbbb
gs
xchg
and
loope
or
int3
arpl
pop
lods
inc
mov
xchg
cmp
xchg
test
push
sbb
mov
adcl
lcall
fnstenv
cmpsb
xor
pop
imul
cmp
sub
xchg
sub
fisubs
add
jecxz
pushf
xor
inc
mov
jns
jl
or
in
test
mov
fwait
repnz
and
jno
stc
dec
lahf
ss
lcall
push
popa
popf
xor
jne
cmp
out
xchg
xor
push
or
xor
mov
push
sbb
mov
push
out
inc
mov
shll
push
je
pop
mov
inc
xchg
sub
cld
sbb
sbb
mov
inc
and
popf
xor
push
or
xchg
mov
sub
mov
insb
push
outsb
add
incl
dec
loope
loope
inc
sbb
sbbl
aaa
nop
pop
test
aam
dec
insb
lds
xchg
pop
cmp
cmpsb
gs
push
jo
add
add
clc
pop
and
ficoms
mov
jo
shrl
dec
mov
cmp
sub
int3
pop
pop
icebp
dec
outsl
cmp
lods
outsl
in
test
ds
addb
pop
adc
pop
icebp
sbb
ljmp
cmp
bound
into
adc
jne
xor
rcrl
imul
repnz
das
in
xchg
sub
push
lds
es
cltd
push
jmp
popf
mov
bound
mov
jle
imul
inc
or
mov
arpl
push
fsubs
call
fisttpl
out
cmpsl
sbb
xchg
scas
sub
pop
inc
xchg
sub
cld
dec
in
push
pop
repnz
ret
lahf
add
mov
call
call
cld
mov
mov
xor
sahf
test
movsl
cmp
inc
leave
pusha
xor
xor
xor
and
repnz
push
test
enter
insl
insl
xchg
add
repz
sbbl
adc
dec
es
mov
cmp
mov
dec
nop
or
or
jecxz
xchg
xor
repnz
cwtl
push
adc
test
pop
scas
sbb
shrl
mov
movsl
cmp
ja
push
xchg
out
mov
ffreep
pop
rcl
es
repnz
in
or
xchg
ja
lahf
ss
cwtl
cmp
adc
fwait
decb
das
cmpsb
sahf
xor
inc
jae
outsl
xchg
arpl
lahf
push
xor
data16
data16
mov
cli
shrb
lea
ds
pop
dec
loope
inc
or
add
push
leave
pusha
inc
fucomp
xchg
jcxz
pop
scas
jge
enter
imul
scas
mov
cmpsl
std
dec
lds
xchg
nop
pop
sbb
pop
mov
repz
repnz
inc
pop
mov
iret
and
inc
xchg
xor
iret
push
je
xchg
jnp
dec
insl
ds
pop
mov
call
movsl
cmp
and
push
in
mov
mov
jo
lret
testl
scas
fstpl
decb
popa
clc
xchg
insb
dec
in
cmp
add
dec
nop
jl
add
adc
xchg
mov
test
mov
subl
shlb
dec
mov
test
dec
fsubrs
outsl
push
movsl
pusha
cld
ljmp
lret
notl
adc
sbb
pop
pushf
cmp
lods
lods
shrb
int
stc
mov
fistpll
push
or
rcrl
rcrl
add
ja
cmpsl
lods
cwtl
sub
mov
sub
fwait
push
hlt
mov
stc
nop
cs
mov
push
pop
scas
cmpl
cmp
xchg
push
addr16
or
adc
dec
outsl
dec
rolb
and
test
in
fldt
pop
test
xchg
int
inc
pop
test
pop
cmpsl
xchg
xor
add
mov
sahf
pop
cmpsl
xchg
jo
jmp
dec
fisubrl
notb
inc
pop
pop
bound
mov
adc
lea
adc
out
ret
mov
cmpsl
jge
jb
jno
fisubs
stos
fs
pop
rorb
add
sbb
jne
inc
in
ss
stc
pop
gs
dec
fadds
mov
xchg
icebp
jbe
lcall
adcl
mov
push
lods
dec
into
lds
aad
add
test
call
popa
fistps
push
jecxz
ret
out
loopne
movsl
aam
mov
fbstp
fistpll
insl
xchg
inc
inc
ja
fwait
jmp
dec
or
jae
imul
sub
outsb
jp
xchg
in
sub
mov
sbb
jle
sub
cltd
jns
sub
lds
lret
les
subb
rol
cmp
movsl
cmp
imul
xor
mov
and
int
adc
jo
xor
push
cmp
cmp
movsl
add
out
mov
and
movsl
mov
and
mov
in
scas
dec
xor
dec
xlat
imul
sub
push
lods
dec
out
test
movsl
cmp
sahf
or
iret
and
pop
push
lock
and
cmpsb
and
cmp
and
mov
or
mov
mov
lcall
and
pop
sarb
ljmp
and
jg
push
fisubl
out
mov
xchg
cld
pop
lret
xchg
jl
roll
testb
loope
adc
pop
repnz
call
test
xchg
cs
cmp
or
mov
sub
pop
lock
dec
shrl
jl
push
scas
mov
xchg
sub
hlt
and
inc
sub
push
leave
leave
out
xchg
ljmp
dec
cmp
sub
mov
rorl
jecxz
pop
adc
ss
push
mov
xchg
mov
fcompl
shlb
adc
ret
sbb
mov
xor
shrb
movsb
repnz
hlt
mov
cmp
xchg
add
movsb
repnz
iret
test
aam
add
je
jae
test
outsb
lods
fs
loopne
cltd
xor
sub
rorb
jb
xor
loop
pop
lahf
not
mov
loop
xchg
add
push
outsl
cli
push
in
and
add
imul
repnz
inc
aas
pop
pop
cmp
loope
push
push
dec
dec
in
jno
outsl
mov
testb
sbb
aas
jae
xor
fwait
xchg
pop
mov
in
sbb
jo
inc
cmp
cltd
imul
xchg
mov
mov
mov
inc
out
ds
or
bound
xor
pop
jmp
adc
cwtl
das
pop
add
mov
pop
push
inc
fildl
cmpsb
stc
xlat
into
repnz
stc
adcb
and
cmpsl
push
dec
sahf
xor
movsl
lahf
mov
fdivl
imul
cmc
mov
nop
daa
dec
adc
jle
imul
sbb
mov
sub
ss
and
mov
ja
test
dec
out
stc
in
sub
dec
loope
dec
inc
fidivrl
call
sbb
shl
and
and
inc
add
jl
cmp
lret
ds
int
movsl
ss
lds
mov
sub
gs
inc
aad
ljmp
loopne
iret
ficoms
movsl
stos
scas
cmpsb
sti
pop
pop
insb
pop
xchg
dec
or
jmp
cmp
fs
jns
pop
adc
negl
aam
cmp
jg
or
jmp
jnp
jo
jae
jae
rorl
mov
test
inc
sti
jo
mov
push
xor
popa
lcall
adc
fisttpl
cmpsb
daa
mov
je
dec
sub
arpl
imul
stos
jb
test
or
push
sbb
lock
pop
jo
mov
in
pop
push
popf
push
mov
mov
jge
jmp
psubb
jg
sub
push
jnp
std
adc
push
pusha
movsl
pop
xchg
movl
jp
adc
jle
dec
push
xchg
sahf
jb
cmp
lds
fldl
fdivs
push
clc
xchg
lcall
mov
or
aam
pop
mov
notb
mov
adc
std
cmc
mov
add
test
test
lret
mov
cli
push
in
cs
insb
dec
dec
jbe
jge
testb
adc
jmp
mov
daa
or
into
cmp
aam
ja
arpl
mov
jne
loope
or
xor
push
les
pop
out
shrb
and
aaa
into
das
scas
inc
mov
ret
hlt
ljmp
mov
push
in
cltd
sbb
popa
lods
mov
mov
frstor
fdivl
pop
or
fsubrp
imul
loop
mov
outsb
icebp
das
pop
fstps
or
and
cmp
dec
push
push
fs
xor
imul
push
sti
jo
jg
inc
sub
mov
adc
jne
dec
push
movsl
cmp
pop
inc
stos
es
mov
mov
and
popa
mov
lret
imul
imulb
out
jne
scas
inc
add
dec
loope
out
pop
xor
xchg
js
lods
imul
mov
les
add
incb
popf
std
and
shlb
les
loopne
pusha
push
adc
mov
mov
ficomps
mov
dec
mov
pushf
jle
mov
mov
sbb
ror
stc
in
iret
cwtl
das
aad
and
cmc
enter
mov
xlat
hlt
test
movb
shrl
lea
das
loope
lret
in
cmp
push
loope
or
imul
mov
das
sbb
je
pop
repnz
inc
faddp
or
cmp
sbb
inc
lahf
xor
cmpsb
and
sub
jb
or
cmpsl
ss
inc
fisubrs
int3
inc
mov
and
push
dec
and
push
cltd
outsl
xlat
ljmp
test
loopne
xor
mov
sbb
adc
test
xor
or
mov
inc
push
out
add
lcall
das
sub
pop
inc
mov
and
shlb
int
ds
fidivs
pop
shlb
xchg
into
faddl
lcall
mov
test
jmp
push
iret
inc
sbb
lcall
xchg
jecxz
add
loopne
stc
testl
or
adc
sub
std
xchg
pushf
xchg
negb
lret
int
xchg
sub
adc
insl
add
jle
stos
jo
call
or
inc
in
inc
jno
push
bound
dec
cmpsb
jbe
xor
fwait
xor
jae
jno
or
xchg
lahf
insl
movsb
cmp
push
in
xor
sub
xchg
push
nop
daa
pop
mov
lret
add
shrb
and
lea
popf
fs
mov
pop
scas
jg
xchg
mov
xchg
adc
or
fwait
lret
push
in
sub
ret
pop
testl
sahf
xchg
iret
dec
loopne
mov
loopne
cmp
mov
stos
sbb
test
push
add
in
movsl
jb
mov
mov
fiaddl
lahf
sbb
xor
pop
cmp
insb
cmp
aad
in
insb
js
sahf
or
xchg
sub
and
aad
ret
fstl
into
xchg
xor
add
lods
arpl
cmp
imul
testl
out
dec
das
jb
push
lods
dec
xchg
outsb
mov
pop
xchg
pop
sub
fadds
xor
pop
dec
ds
pop
pop
xor
dec
pop
and
imul
or
lahf
pop
pop
shll
lahf
and
loope
adc
in
lods
adc
enter
stc
mov
lock
enter
movsb
shlb
add
push
mov
and
add
subb
lahf
sbb
mov
out
xchg
sub
pop
fs
ds
in
addl
mov
add
pop
mov
fs
pusha
popf
mov
psllq
in
add
cmp
adc
mov
mov
cmp
in
push
jmp
popa
jne,pn
lahf
test
adc
push
push
jmp
loop
mov
nop
inc
test
push
pop
mov
frstor
mov
les
ret
jnp
das
out
adc
ds
inc
fsqrt
pop
out
pop
insb
mov
scas
loop
cli
mov
and
std
loopne
dec
cmp
cwtl
mov
sub
add
shrl
jbe
data16
mov
and
jae
xchg
push
insl
sbb
sahf
outsl
sbb
xchg
pop
test
jle
pushf
rcrb
lcall
and
push
pop
push
out
mov
fnstenv
push
rcrb
inc
dec
movsl
cmp
fidivl
pushf
sub
outsb
pop
cmc
out
ret
pop
mov
sahf
fcompl
arpl
pop
adcl
jno
movsl
test
hlt
imul
mov
pop
enter
dec
mov
jb
popa
add
mov
xchg
xor
mov
mov
sub
push
mov
ds
loop
repz
cmp
adc
mov
mov
mov
dec
fbstp
sbbb
sub
push
dec
clc
jge
cli
push
sti
mov
cld
lret
or
arpl
cmc
push
in
es
notl
mov
adc
dec
jge
out
gs
jp
stc
hlt
xor
and
testl
jmp
xchg
sub
shrb
test
add
in
xchg
popa
lret
les
fwait
sbb
push
fwait
dec
sub
xor
out
xchg
mov
out
in
push
mov
pusha
push
scas
filds
dec
pop
bound
sbb
and
lahf
pop
out
rorb
xchg
mov
mov
adcl
jne
mov
push
in
call
testb
stos
out
or
sbb
or
sbb
dec
inc
das
lret
push
ljmp
aam
pop
es
add
dec
mov
rcrb
rcrl
sarb
mov
aas
insb
sbb
es
fs
xchg
sbb
sub
cmp
push
rcrl
fmuls
ret
mov
enter
xchg
sbb
dec
xchg
cmp
pop
pop
enter
lea
or
mov
xchg
jp,pn
pusha
mov
sbb
icebp
sub
int
mov
daa
push
aaa
cli
xchg
mov
pop
imul
xchg
add
push
ljmp
lahf
sub
pop
mov
sub
test
icebp
cwtl
cmpsb
and
xchg
ret
scas
mov
call
mov
div
jns
in
ficoms
dec
pop
jnp
gs
mov
xchg
dec
jl
jle
cmp
call
inc
iret
jp
into
stc
mov
mov
fidivs
mov
lods
subl
call
and
push
mov
push
fstpt
xchg
outsl
sti
call
inc
sahf
jp
xchg
xchg
fs
cmp
inc
pop
push
bound
xchg
xchg
aas
ret
enter
jmp
add
loope
shll
sbb
cld
adc
je
add
or
mov
xor
jno
lods
fldt
nop
inc
lahf
cwtl
repnz
fsubr
jb
xor
popl
dec
sub
out
dec
push
jo
ljmp
cmp
xchg
xchg
dec
sub
inc
outsl
push
js
inc
xlat
ret
mov
jns
sub
inc
sahf
xor
outsb
out
jl
ljmp
adcl
mov
out
and
fimuls
imul
movsl
cli
dec
adc
mov
stos
cmp
bound
push
push
out
mull
inc
int
stos
cmp
out
xchg
inc
pop
pop
inc
fmull
dec
in
adc
ja
js
jmp
scas
cmc
insb
add
out
leave
dec
mov
pop
or
mov
mull
push
adcb
stc
jno
inc
sbb
jno
rcll
imul
or
cmpsl
push
cmp
add
xchg
xlat
push
sbb
pushf
fwait
xchg
sub
add
ja
mov
lret
stos
push
dec
mov
test
mov
pop
ja
mov
inc
mov
data16
mov
clc
pop
aad
es
sub
xor
loop
inc
sahf
cmc
jbe
cwtl
sub
mov
lahf
test
jl
test
or
mov
outsb
mov
enter
mov
mov
out
cs
lret
or
enter
xsha1
cmpsb
or
push
call
pop
xor
ljmp
mov
xorl
shrb
stc
popf
lds
push
xchg
sti
inc
out
cmpsb
and
sub
fldt
and
imul
aad
lcall
mov
pop
repz
call
aas
xor
sub
pop
add
mov
mov
lods
or
mov
nop
mov
push
sbb
shrb
jae
test
outsb
mov
mov
sbb
sub
rcrl
sub
outsb
stos
lret
pop
pushf
fnop
pop
jecxz
or
shll
push
shlb
daa
ljmp
jns
shrl
lcall
jecxz
in
push
dec
pop
clc
inc
sarl
xchg
adc
sti
adc
insl
pop
je
sbb
cmpsb
mov
fsubrl
pop
push
mov
xchg
push
adc
push
inc
into
mov
enter
test
and
sbb
insl
xor
mov
mov
push
mov
aam
mov
jl
mov
sbb
mov
fnstsw
add
loopne
and
sub
fcmovbe
add
ja
aad
psubsw
add
xor
loopne
int
jno
fs
ss
mov
movb
testl
cmp
in
mov
fwait
popf
mov
cmp
repz
pop
xorb
lods
mov
fsubrl
dec
lcall
mov
jno
and
repz
sub
in
xor
push
or
cmovno
cli
cmc
ja
push
dec
push
pop
lret
rcrb
pop
in
mov
pop
iret
lods
xchg
cmp
ret
dec
mov
hlt
in
mov
enter
mov
outsl
sbb
add
sub
cs
nop
xor
ds
movsl
mov
out
mov
or
xchg
lods
push
out
popf
xor
or
fwait
getsec
jg
sub
mov
mov
lahf
cmpsl
jns
aas
xchg
sub
hlt
hlt
mov
mov
jge
push
and
xchg
repz
sub
mov
xadd
fbld
cli
add
cs
lods
arpl
rcll
fwait
and
int
movsb
mov
fmul
or
into
sub
mov
push
pop
xor
xor
aaa
lcall
ret
mov
aaa
jge
xchg
lods
sahf
jle
pop
cmp
mov
mov
pop
jbe
pop
test
gs
dec
jbe
and
sti
push
in
mov
mov
inc
pop
int
loopne
xor
cmpsb
cmpsb
push
push
cli
inc
adc
pushf
inc
dec
mov
mov
adc
pop
pop
sarb
mov
push
cmpsb
mov
dec
les
pop
sub
xor
cltd
cmp
add
fidivs
outsb
lahf
aas
mov
mov
lods
cltd
ja
sub
gs
mov
pop
addl
mov
mov
loope
fidivs
xlat
mov
jo
out
std
xchg
repz
push
xor
mov
sti
leave
add
sbb
filds
negl
mov
sbb
pop
jle
adc
fnstenv
popf
dec
cmpsb
gs
jnp
out
aam
jle
xchg
out
adc
out
inc
jbe
mov
int
add
mov
pop
cmpsb
mov
je
lds
inc
ja
xchg
fs
enter
pop
push
push
popf
xchg
leave
cmp
sbb
sbb
fwait
xchg
mov
sbb
loop
rorb
outsb
jmp
dec
xchg
sub
push
push
icebp
es
test
lret
dec
mov
sub
adc
inc
arpl
cmc
sbb
ret
adcl
push
and
psubq
cmp
mov
mov
test
fwait
mov
in
fildl
fwait
adc
xchg
lock
add
push
push
js
jb
mov
dec
or
inc
cmpsl
imul
cmp
data16
lods
test
and
ja
pop
out
xchg
pop
sub
fldt
fdivl
mov
ljmp
mov
inc
push
shll
mov
add
mov
push
jecxz
addb
cli
xor
enter
lods
inc
cmc
mov
ficoms
pop
push
or
fdivl
mov
and
ret
lret
mov
stc
nop
add
lahf
mov
mov
mov
mov
in
adc
das
movsl
and
fidivl
mov
dec
incb
add
and
sub
ret
lods
gs
loopne
pop
or
in
rcll
mov
ds
jge
loope
mov
sub
sbb
push
out
jmp
aam
mov
aas
test
orl
rcr
add
cli
or
stos
inc
xor
cmp
insl
cli
xchg
rcr
pop
jbe
xchg
adc
fnsave
sbb
inc
bound
test
arpl
into
das
mov
sub
outsl
clc
out
xor
xorl
cmp
into
lods
pop
orl
cmc
int
or
cwtl
fsubrs
and
scas
ret
andl
jb
fidivs
xchg
mov
or
mov
mov
sar
int
mov
jns
in
aas
push
sahf
inc
jb
jbe
inc
xchg
mov
ficompl
mov
xor
test
loope
pushf
mov
out
insl
cmpsl
adc
pop
repz
dec
fsub
leave
daa
fwait
xchg
ljmp
cltd
inc
mov
mov
loope
adc
sub
adc
mov
into
add
fs
xlat
movsl
dec
mov
jnp
push
test
push
pop
xor
dec
sbb
mov
xlat
aaa
sar
fsubs
add
fs
cltd
push
test
loopne
xchg
add
ja
ret
insb
popa
pop
mov
dec
push
repz
xchg
jns
fnstcw
shrl
jl
add
push
fstl
fstpl
mov
ja
out
arpl
and
add
mov
push
nop
aaa
or
mov
push
ret
xchg
mov
aam
call
add
xor
repnz
dec
xchg
outsb
pop
mov
loop
sub
pop
lock
dec
pusha
mov
pop
imul
jl
sub
clc
xorb
adcb
dec
or
sarl
imul
mov
adc
mov
not
outsl
outsl
scas
popa
sti
in
inc
dec
pop
clc
int3
int3
cli
test
aam
les
dec
jns
xchg
add
scas
lret
xchg
jmp
shlb
xchg
mov
js
jo
pop
cmpsb
int3
xchg
mov
int3
adc
and
cltd
dec
pop
push
ja
mov
ret
cmpsb
pop
test
xor
and
enter
mov
jge
es
ds
or
push
jmp
dec
jae
mov
sbb
aaa
fildll
sti
inc
and
and
jmp
negb
js
cmpsb
and
or
movsl
adcl
loope
pusha
cld
xchg
dec
add
iret
xchg
pop
push
hlt
mov
cmpsb
adc
test
mov
and
sti
jp
pushf
rolb
sub
movsl
mov
mov
push
pop
pushf
mov
scas
push
xchg
xchg
loope
jp
push
addb
lret
stos
popa
cmc
pop
iret
xchg
cmpsl
xor
mov
inc
pop
pushf
push
hlt
or
in
test
pushf
inc
xor
loopne
je
cld
ficomps
mov
push
and
js
rcrl
cwtl
das
xorb
dec
lret
dec
jle
insl
jb
loop
pop
cmp
dec
adcl
out
lea
jmp
mov
cli
add
daa
cmp
dec
xor
jmp
aaa
fwait
inc
push
pop
popf
sahf
ds
aam
inc
fdivr
cmc
and
mov
dec
add
xor
sbb
dec
inc
or
fwait
lods
cmp
and
shll
stc
jno
pop
addb
cld
pop
inc
int
mov
mov
and
gs
fisubrl
cld
ljmpw
call
std
cltd
imul
jb
popa
inc
xchg
mov
xchg
ss
mov
stos
mov
cmp
mov
mov
inc
stos
xchg
scas
inc
mov
cmp
sbb
call
aas
fnstenv
xor
into
test
and
adc
cmp
test
je
aaa
mov
mov
pop
in
mov
xchg
pop
mov
mov
xor
pop
out
js
iret
lods
mov
scas
adc
int3
shll
mov
das
testb
inc
mov
clc
sbbl
lock
mov
mov
sbb
cmpb
inc
mov
and
xlat
cwtl
das
jne
sbb
outsl
cmp
xchg
outsb
nop
pop
repnz
cli
sub
and
testl
pop
fidivrl
fsubr
aam
push
insl
pop
jl
jns
mov
pop
push
dec
mov
cmovs
mov
lcall
cltd
mov
loop
pushf
mov
fbld
xchg
fs
cmp
pop
cmpsb
cmc
out
repz
mov
in
pop
sti
push
nop
pushf
add
pusha
lock
mov
mov
jno
mov
ljmp
cld
jge
fstpl
dec
fisubrs
add
sub
inc
js
ficomps
orl
cs
in
filds
jmp
rcrl
push
adc
popa
push
add
mov
push
cmp
scas
pop
pusha
mov
test
mov
jl
dec
loope
popf
add
es
dec
fbld
cld
fwait
in
stos
repnz
xor
xor
mov
movsl
or
enter
pop
ret
xchg
sbb
mov
fstpt
adc
xchg
ficompl
enter
and
fisubrs
dec
in
add
xor
jo
sbb
adc
gs
mov
jnp
and
mov
pop
or
push
gs
push
aam
jbe
lret
cmpsl
movsl
sub
repnz
repnz
call
and
add
mov
jl
xchg
jnp
lret
and
and
imul
cmp
or
jne
xor
pop
jl
test
pop
or
push
xchg
cltd
push
out
lret
outsb
clc
jmp
mov
test
lret
fmuls
and
mov
repnz
insb
lods
outsb
xchg
idivb
dec
fbstp
js
mov
out
lea
mov
pop
inc
xlat
push
mov
iret
and
scas
insb
inc
cld
xchg
aaa
out
xchg
push
push
mov
or
cmp
cld
inc
jg
add
adc
orb
and
adc
addl
adc
test
mov
test
pop
dec
xchg
mov
montmul
cmpsb
add
and
push
push
mov
or
push
and
lea
mov
sbbb
gs
add
dec
add
and
cmp
sub
push
out
cmp
xchg
sub
aaa
adc
or
outsb
add
dec
icebp
mov
scas
inc
ret
sbb
in
and
fcom
insl
out
jne
adc
aad
test
call
cmp
push
xchg
arpl
shlb
test
jl
mov
jecxz
xchg
in
mov
lahf
ss
fadd
pop
push
js
ja
aas
in
scas
bswap
arpl
push
test
inc
mov
xchg
sub
dec
jne
inc
sub
scas
fwait
adc
jb
pop
test
rorl
or
fcmovb
pop
lock
mov
sbbb
into
add
push
cmp
pop
fdivl
dec
lods
inc
cmpl
call
scas
popa
das
push
popf
pop
xorb
icebp
sub
pop
fwait
lret
mov
pop
jmp
ja
mov
mov
aad
aaa
bound
cmp
pop
mov
cmpsb
cmp
das
pop
lcall
lods
fwait
xor
jbe
dec
inc
lock
sub
shlb
mov
jecxz
pop
xchg
sub
mov
xchg
sub
fdivrl
mov
fadd
jnp
xor
testb
divl
adc
jmp
lock
xchg
and
adc
in
jg
jg
insb
imul
adc
shll
arpl
daa
fcompl
in
sbb
icebp
sti
pop
rolb
add
adcl
mov
stos
in
faddl
clc
icebp
inc
das
xor
lret
mov
cmpsb
cld
push
dec
jecxz
nop
cmp
add
push
in
loope
gs
and
pop
mov
mov
lds
jns
jl
lods
inc
adc
xchg
test
outsl
pop
xchg
sub
xchg
sub
xor
frstor
sub
mov
cmp
es
icebp
mov
dec
in
loopne
sbb
pop
sub
inc
ret
test
and
test
ja
gs
fcoml
ret
js
ret
insb
cmp
ljmp
jno
xchg
inc
push
cmpsl
cmp
test
mov
int3
arpl
idivb
cmp
mov
jno
incl
popa
mov
pop
addr16
mov
push
nop
push
orl
xor
pop
arpl
cmpsb
mov
insb
add
aad
pushf
xchg
xor
hlt
shrb
insl
stc
in
dec
loop
stos
inc
or
jae
jge
jb
movsb
mov
xchg
xchg
ja
fisubs
push
lods
cmove
ret
sbbl
mov
testl
mov
mov
xor
and
mov
negb
lret
orl
lcall
ret
aad
lret
sub
fisttpl
sub
pushf
fidivs
mov
xlat
lds
ror
pop
repz
cmp
pop
scas
in
or
jmp
dec
mov
fnstsw
pop
add
out
xor
fidivrs
daa
xor
es
jo
jg
jne
ss
fwait
mov
enter
mulb
aad
mov
pop
cmp
arpl
xchg
adc
sbb
xchg
pusha
out
loope
loope
sub
dec
dec
jp
lret
insl
cmp
ficompl
sar
inc
cs
xchg
jmp
jb
pop
and
jle
movsb
sti
sbb
jl
cmp
and
lcall
inc
inc
fdivl
arpl
mov
ret
rorl
loope
repnz
clc
xlat
mov
mov
ror
mov
jle
push
mov
jmp
add
inc
fidivl
push
insb
add
jo
aad
xchg
leave
jae
mov
pusha
cmp
mov
insb
pushf
cmovge
imul
sbb
shlb
sub
and
inc
jbe
push
mov
fsubrl
xlat
repz
subl
pop
sarl
imul
orb
hlt
js
sub
shll
movsb
sub
sub
roll
mov
or
fidivrs
jbe
or
mov
add
pop
frstor
pop
mov
dec
adc
popa
mov
aam
je
xor
push
push
cltd
es
sub
xor
xor
dec
mov
in
roll
test
dec
in
push
movsl
sbb
inc
fmuls
pusha
cmpsb
cmp
pop
outsb
xchg
sub
jge
mov
es
or
jns
dec
loopne
sub
jne
cmpsl
sbb
pop
rcrb
add
and
inc
fcomps
or
pop
mov
int
xor
dec
in
cmpsb
jp
push
dec
adc
pop
xchg
sub
mov
aaa
int3
adc
cmp
insb
es
in
lea
mov
loopne
sub
int3
xchg
xor
xchg
sub
out
cmc
cmp
es
add
cs
xchg
inc
pop
je
add
pop
push
dec
int
pop
dec
mov
outsl
jb
jbe
ds
xchg
test
or
xchg
cmc
mov
mov
mov
filds
or
and
call
jge
jb
sti
cmp
orb
and
jbe
cmpsb
pusha
and
popa
mov
xchg
fwait
cwtl
jg
sbb
pop
mov
in
frstor
sbb
aas
insl
pop
xchg
pop
bound
add
test
int
pop
adc
pop
test
cmp
mov
sub
loope
xor
xchg
or
push
test
int3
sbb
stos
inc
sbb
xor
xor
adc
jns
leave
inc
jbe
adc
push
and
je
lods
cmpl
jmp
fwait
or
push
mov
insl
cli
or
data16
pop
mov
push
notl
dec
outsl
sbb
dec
stc
mov
lods
inc
cmpsb
and
jno
mov
outsl
sub
mov
fimull
dec
insl
sti
fsubrs
mov
cmp
sub
push
not
mov
push
mov
les
cmp
push
sbb
orb
push
cmp
push
out
cmp
pop
arpl
movsl
inc
test
pop
pop
gs
out
cmp
pop
mov
aam
lods
mov
fimuls
popa
das
rcrl
push
cli
sbb
mov
xchg
sub
in
mov
xor
popa
cmp
mov
and
test
mov
fsubrs
dec
repnz
nop
daa
lret
or
shrb
jo
popf
mov
ret
loop
imul
add
lea
push
jbe
outsl
clc
pop
repnz
jle
jmp
mov
leave
fcompl
fucomi
insl
sbb
jns
mov
loopne
xchg
les
push
mov
hlt
sahf
xor
out
repnz
xor
adc
mov
out
enter
aaa
into
incl
pop
pop
and
jbe
mov
dec
xchg
cmp
enter
push
jmp
les
out
daa
mov
mov
ret
fimuls
and
shlb
dec
sbb
lahf
cmpsb
out
inc
mov
cmp
rcl
ret
cmc
push
in
int
les
out
es
fsubrp
adc
cltd
lret
fistpl
or
and
jnp
pusha
idivl
loope
lods
adc
outsl
xor
nop
sub
mov
dec
cmp
pusha
sub
mov
mov
inc
fsubrs
aam
rorl
shrb
mov
sbb
pop
repnz
arpl
mov
or
mov
pop
icebp
sbb
dec
loopne
cmp
mov
sub
test
lahf
or
movb
lock
inc
fnstenv
cmp
rolb
aad
dec
push
jmp
adc
jo
adc
xor
jae
sti
xchg
lea
pavgb
mov
xor
pushf
mov
xchg
repnz
cmpsl
into
gs
imul
imul
push
jmp
punpckldq
xchg
xor
movsl
popa
mov
and
mov
lods
inc
cmp
dec
loope
pop
lret
bound
scas
jmp
sbb
inc
movsb
cmp
fs
xchg
loop
pop
adc
mov
repnz
cmpsl
jmp
cmp
aaa
or
iret
inc
daa
push
aaa
mov
add
shrb
xor
in
mov
rolb
cmp
add
push
shrb
xor
lock
idivl
mov
movsl
xchg
inc
mov
test
xchg
sbb
xchg
daa
mov
add
mov
dec
fisttpll
lods
cld
jg
pusha
mov
jl
jb
sti
and
mov
and
sub
subb
movsl
mov
out
aas
call
xchg
mov
xchg
mov
out
nop
cmp
mov
lahf
sub
push
jl
fbstp
cltd
add
stos
cmp
ja
push
mov
sahf
roll
sub
lds
sub
lcall
in
mov
push
sub
addr16
dec
xchg
sub
add
in
mov
dec
sbbb
fstpl
dec
push
gs
xchg
push
in
lock
popf
fidivs
and
and
aas
outsb
ljmp
movl
mov
in
sbb
cmpb
addb
adc
les
testl
inc
dec
fimull
or
sbb
jmp
je
lock
xchg
or
adc
mov
xor
mov
dec
mov
loope
test
jb
sub
std
dec
loope
or
mov
idiv
fidivs
shrl
add
push
ja
movsb
jno
adc
insl
mov
fsubrs
test
dec
and
test
sbb
iret
push
or
nop
daa
cld
lcall
int
xchg
shlb
mov
data16
inc
sbb
dec
lret
das
jne
dec
xlat
andb
scas
pop
sbb
or
inc
loopne
out
push
dec
loop
std
test
inc
push
mov
out
dec
push
mov
lahf
mov
mov
scas
ss
jmp
pop
cmp
or
pop
or
test
int
jge
sbb
pop
test
push
xor
jmp
mov
addr16
das
cmp
mov
loope
lahf
nop
daa
mov
sub
jne
lods
inc
push
lret
in
inc
or
cmp
cs
rcll
jg
test
xchg
pop
in
add
fsubrl
push
mov
mov
fdivrl
adc
lea
add
mov
xchg
mov
in
or
sub
pop
dec
jecxz
adc
test
jb
sbb
mov
push
inc
mov
into
into
lahf
enter
int3
out
dec
push
in
jge
fbstp
sub
test
cld
dec
loop
sbb
imul
pusha
divl
fwait
add
adc
jle
scas
cmp
idivb
hlt
ds
pop
jmp
loop
pop
mov
in
test
add
push
daa
pop
xor
mov
test
inc
pop
or
add
fdivs
add
mov
shlb
sub
std
jge
jb
roll
jge
pop
dec
push
paddb
pop
in
sbb
inc
imul
cmp
sti
addr16
xchg
sub
loope
repnz
pop
xchg
mov
dec
dec
test
shlb
outsl
shrb
loope
dec
ds
bound
mov
in
loope
adc
int3
xlat
xor
xchg
inc
add
in
pop
test
test
xor
jp
mov
lret
xlat
dec
es
mov
sbb
test
ret
pop
adc
loope
adc
pop
push
mov
or
ljmp
cmp
pop
pop
test
lret
pop
icebp
lahf
sti
enter
mov
mov
data16
scas
clc
scas
outsb
inc
sub
rolb
pop
lret
icebp
lock
popa
in
je
or
xchg
mov
arpl
shrl
pop
mov
lea
imul
add
add
in
adc
roll
inc
pop
push
and
stc
inc
inc
popa
jb
xlat
cmp
sbb
loopne
or
mov
jns
pop
inc
sbb
jns
lods
and
filds
fwait
cs
js
add
and
fldenv
dec
in
movsb
cmp
iret
call
mov
lods
mov
jnp
dec
mov
std
bound
xchg
adc
ret
cmp
in
notl
imul
dec
pusha
mov
out
movsb
add
xchg
jle
sub
adc
and
push
mov
dec
lea
lds
test
into
aad
add
adc
jo
add
imul
mov
movsl
test
xlat
adc
push
xchg
mull
test
xorl
sub
or
rol
sub
repz
lods
mov
ret
xor
mov
mov
push
sbb
fldt
mov
sub
cld
shlb
inc
sar
cli
mov
clc
cli
push
push
add
iret
jnp
inc
jmp
sbb
sahf
shl
cmp
cmpsb
mov
jge
jne
push
push
sbb
sbb
xchg
flds
repz
leave
jb
adc
sub
in
stos
pop
ljmp
jne
int
jp
pop
cmp
fs
dec
mov
test
and
fnstenv
xor
lea
addr16
inc
pop
mov
xchg
dec
xor
add
les
or
or
push
stc
pop
es
lret
cld
je
pop
into
pop
push
jne
in
mov
xlat
cltd
cld
bound
cmp
cmp
icebp
sbb
cmp
in
out
push
pusha
pop
lahf
push
jmp
inc
cmpsb
sti
cmpsb
cmpsb
stos
outsl
xchg
push
push
int3
sub
pop
mov
sbbb
arpl
repz
jl
adc
js
xor
prefetchwt1
in
subb
lods
pop
roll
lods
cmp
jbe
inc
nop
pusha
dec
push
std
test
cmp
adc
pop
mov
add
and
push
cmp
repz
leave
pop
repnz
mov
jns
xchg
add
adc
ja
pop
jg
loopne
hlt
adc
pushf
mov
and
cltd
mov
into
in
loopne
ljmp
xor
lahf
lods
cmp
imulb
daa
adc
movups
mov
int
and
fsubr
xchg
pop
mov
xchg
sub
push
sub
movsl
scas
mov
sub
and
sub
hlt
mov
enter
int
lea
repnz
insl
mov
mov
repnz
xchg
adc
mov
inc
pop
outsl
rorl
repnz
pop
mov
pop
fst
inc
outsl
fs
gs
dec
sub
popf
loop
pop
jmp
std
mov
adc
and
jg
imul
and
jo
pusha
lahf
aam
stc
inc
dec
cli
dec
test
ret
in
testb
mov
sarl
dec
rol
jno
push
adc
jp
inc
xor
out
pop
lret
xchg
sbb
jo
je
mov
mov
out
outsb
pop
sub
mov
xor
mov
add
inc
orl
sbb
cwtl
add
mov
int3
sub
add
add
fidivl
mov
ljmp
sub
mov
add
cmpsl
cmpxchg
xlat
xchg
pop
sub
and
dec
mov
cmp
dec
mov
push
test
ljmp
inc
push
je
cmc
and
sarb
aad
or
push
pop
sub
movsl
inc
xlat
or
mov
out
aam
sbb
ret
or
movsb
scas
pop
inc
push
enter
mov
leave
test
shll
out
sub
push
mov
adc
cmp
xor
mov
aas
sub
aas
jnp
je
fnstenv
xchg
mov
add
adc
sahf
sub
add
vpsubusb
push
or
pop
cli
mov
gs
pop
cmpsb
imul
jecxz
fs
jecxz
out
pop
sub
movsb
add
adc
mov
cmc
stos
fcomi
ret
push
fsubrs
in
aaa
push
cmp
lock
test
xchg
cs
push
lea
or
scas
fsubrs
add
jnp
sub
mov
adc
cmp
out
in
jnp
adc
cmp
jmp
iret
pop
sar
push
xchg
adc
cmp
imul
sub
cmpsl
fcoml
repnz
lods
push
jg
in
lea
or
dec
int
fcmovne
ljmp
jno
adc
out
xorl
adc
into
and
dec
and
push
scas
inc
ja
mov
push
sti
xchg
xchg
sbb
adc
mov
je
fsub
push
xchg
push
adc
js
xchg
xor
dec
xchg
push
sbb
fidivs
bound
lods
ljmp
sub
and
dec
push
jnp
stc
setge
iret
das
mov
popa
js
mov
add
adc
rclb
stc
cmpsw
or
sbb
ret
nop
pop
jecxz
in
lods
push
mov
loope
mov
pextrw
cmp
mov
out
test
out
cmpsb
sbb
cs
mov
push
and
push
mov
mov
xchg
dec
pop
subb
pushf
inc
dec
addr16
aaa
int
imul
sbb
mov
leave
pop
inc
cmp
jg
test
fimuls
jbe
xchg
adc
ja
fwait
mov
cmp
lcall
pushf
lods
xchg
insb
push
out
sub
sub
cmp
fs
inc
or
fs
hlt
and
fsubrl
jns
sub
into
lcall
les
mov
sbb
jle
cmp
leave
insb
hlt
push
mov
push
fsubrs
test
pop
cmp
ja
jno
xor
or
mov
dec
in
aam
std
and
lock
test
and
daa
inc
leave
cmpl
lods
cli
es
jnp
mov
mov
cmp
fildl
xchg
scas
outsl
loop
das
dec
mov
cmp
mov
sbb
nop
mov
das
dec
loopne
outsl
mov
cmp
cmp
shlb
pop
cli
mov
mov
iret
outsb
bound
lock
sub
fisubrs
int3
data16
sbb
ljmp
mov
scas
hlt
fldt
shlb
ds
xor
xchg
dec
mov
push
scas
aam
mov
cmpl
dec
xchg
out
jae
cltd
jmp
fwait
xor
sbb
push
mov
outsl
jnp
fsubr
inc
pushf
testb
xor
or
popf
pop
mov
lcall
mov
mov
mov
jae
push
mov
sub
outsl
dec
sub
jecxz
inc
orb
dec
push
dec
rorl
in
leave
aad
dec
scas
cld
add
push
das
mov
in
jne
fmuls
or
or
int3
fs
mov
loopne
fcomps
pop
inc
inc
xchg
out
test
loope
ffreep
jmp
fucomi
xchg
lods
add
cmp
popa
mov
test
adc
popf
lret
ljmp
jb
call
outsl
mov
outsl
imul
hlt
cmp
bound
xlat
inc
enter
sbb
mov
or
dec
test
shl
sbb
ret
out
outsb
adcl
mov
fwait
mov
or
fs
jo
test
pop
adc
and
fstpl
mov
fs
xchg
cli
stc
mov
cmpl
or
in
cmpsl
sbb
fsubp
push
lret
xor
sub
fiaddl
addr16
inc
xchg
add
xchg
loop
aad
cmp
adc
dec
aaa
jle
or
aaa
sbb
mov
icebp
xor
mov
mov
push
pushw
imul
and
jg
dec
cs
dec
enter
dec
dec
test
xchg
sub
lods
rorb
test
adc
inc
dec
lret
mov
out
xchg
mov
pop
es
mov
cmc
popf
and
into
push
in
rcll
and
jno
aam
lahf
add
inc
stc
jae
xlat
outsb
mov
push
cmc
inc
mov
cmp
mov
push
ret
inc
dec
push
mov
rclb
push
dec
push
push
stos
div
repnz
les
jb
cld
push
dec
xchg
clc
jae
outsl
rcrb
and
adc
mov
and
mov
ljmp
mov
push
in
es
lods
fidivl
int3
push
aad
ja
push
inc
out
movsb
movb
adc
mov
add
popf
push
push
in
movsb
sbb
scas
imul
dec
and
push
icebp
into
insl
pop
and
mov
inc
jmp
lahf
sbb
adc
es
popf
addr16
mov
ficoml
sbb
jecxz
movsl
mov
rcrb
sub
mov
addb
stos
mov
push
cmpl
jo
shrl
lock
xchg
dec
dec
push
in
pop
ret
add
xor
je
out
scas
mov
imul
paddsb
aaa
jno
push
data16
sub
test
mov
mov
mov
push
arpl
sbb
ja
fildl
and
mov
cwtl
pop
xchg
call
aaa
pop
movsb
mov
xchg
nopl
dec
aas
imul
pop
shlb
jmp
xchg
sbb
cs
lea
mov
cld
sbb
insl
rcll
aad
fisubl
cmp
jae
inc
push
jae
mov
rol
daa
mov
lahf
ss
mov
mov
mov
xor
mov
adcb
push
pop
sahf
lret
iret
repnz
mov
mov
shlb
push
sarb
gs
ror
popa
add
sbb
push
pop
scas
push
movsl
aam
imul
mov
mov
sub
add
dec
push
icebp
jnp
xchg
add
test
mov
mulb
mov
shl
adc
js
jno
cmp
jne
sahf
subl
push
popf
xchg
sub
inc
cltd
movsl
push
pop
dec
testb
popf
lea
inc
mov
enter
hlt
stc
cmpsb
mov
pop
jbe
mov
aam
shrl
fidivl
xor
movsl
lock
aam
xchg
sub
bndldx
dec
and
inc
jle
shll
out
pop
imul
popa
cmp
mov
mov
xchg
negb
xchg
dec
cli
inc
dec
loope
std
aaa
inc
sahf
gs
pop
inc
out
jns
and
fwait
xor
adc
sub
mov
sub
xchg
pushf
adc
xchg
or
stos
xor
jns
popf
cli
test
mov
into
aam
inc
outsb
daa
add
mov
mov
mov
mov
mov
mov
sbb
rclb
lcall
popa
pusha
mov
sbb
pop
shl
nop
cmp
xor
movsl
mov
push
aad
xor
xor
loop
outsb
xor
testl
add
xor
push
inc
dec
xchg
mov
cwtl
lock
push
loope
out
std
push
mov
rcll
inc
std
push
jb
xor
cmpsl
std
adc
je
pop
sub
add
sub
mov
test
packuswb
fs
dec
loop
adc
adc
dec
pusha
add
popa
ss
add
cs
adc
cli
mov
fimull
push
imul
das
cmp
mov
in
iret
das
fiadds
mov
in
addl
or
clc
mov
movsl
cmp
repz
sbb
js
jg
lds
dec
dec
pop
in
nop
gs
loope
out
mov
enter
mov
pop
fs
sbb
clc
fstpl
inc
lods
jae
loope
sarb
inc
ds
stos
xchg
fstps
adc
ss
mov
cmp
leave
and
das
mov
fadd
xchg
inc
jbe
xchg
mov
and
adc
mov
in
scas
push
in
loopne
and
jle
je
xor
add
shrb
push
mov
lock
icebp
pop
icebp
es
aaa
push
lret
mov
sbb
or
mov
test
call
xchg
fidivs
popa
test
dec
fcoml
sahf
fldcw
lahf
outsb
pop
into
pop
jne
dec
lods
cmp
and
les
notb
push
mov
andps
cs
aaa
mov
in
or
mov
or
cmp
or
mov
xor
pop
jnp
vpmadcsswd
push
ret
hlt
push
aam
adc
and
adcb
pop
mov
push
lods
lock
cld
int3
arpl
inc
aaa
mov
mov
inc
adcl
aaa
jle
push
pop
inc
mov
mov
xchg
call
in
pop
mov
or
jge
insl
jl
mov
lcall
ljmp
push
xchg
cld
stc
leave
test
daa
mov
add
in
test
and
repz
lds
sahf
sub
cmpsb
pop
add
mov
jg
imul
xorb
adc
clc
or
sbb
pop
rolb
jmp
aam
xor
addr16
cmp
adcb
js
jmp
pop
mov
mov
dec
insl
or
push
dec
dec
dec
mov
pop
jmp
lods
icebp
mov
fstpt
das
add
sti
and
enter
in
mov
call
out
fsubs
dec
cmpsl
inc
inc
sbb
jns
dec
pop
loope
xor
or
cli
jae
rolb
fs
shlb
mov
push
out
pushf
lods
sbb
or
xchg
pop
adc
or
aam
stos
movsb
jae
pop
lret
imul
shl
imul
push
ds
adc
xor
add
lahf
sti
fwait
xchg
xchg
jo
mov
jmp
dec
lods
int3
arpl
nop
movsb
mov
vphsubbw
inc
lock
lret
sbb
mov
inc
push
jmp
mov
mov
inc
xchg
sbb
insb
push
mov
insb
xchg
insb
sbb
int3
jge
push
in
xchg
sub
jbe
cmp
test
push
inc
push
mov
stc
inc
sub
xorl
enter
clc
inc
data16
cmc
mov
dec
je
loopw
dec
fwait
mov
jnp
js
and
pusha
ja
xchg
loope
mov
in
inc
aam
jecxz
ds
aaa
dec
push
mov
nopl
sbb
in
push
imulb
jle
inc
cld
cmp
jl
in
test
push
push
in
cmp
mov
popf
mov
and
mov
add
insl
jg
dec
sub
push
push
cmp
inc
int3
imul
arpl
iret
sbb
gs
insl
jge
pop
xor
sahf
out
cli
pop
jge
jb
ret
xchg
mov
faddl
imul
sub
in
jg
push
movsl
xor
and
inc
xor
inc
dec
es
jnp
mov
mov
mov
xor
push
adc
and
jg
mov
and
cmp
insb
repnz
pop
sub
xor
xchg
dec
in
iret
loop
or
dec
es
les
adc
jns
hlt
mov
mov
out
or
dec
inc
es
jg
jmp
ljmp
decb
lods
adc
sahf
lret
lret
jb
cld
mov
adc
adc
gs
pop
outsb
pop
mov
mov
cmp
adc
pusha
into
jbe
cmc
push
and
add
push
sub
cmp
bound
xchg
sub
pop
inc
cmp
icebp
int
psrad
ret
in
mov
leave
imulb
push
out
fwait
lahf
adc
aas
repz
jno
jg
int3
dec
push
test
mov
mov
shl
js
fcmovnbe
shll
iret
addb
stos
xor
adc
aad
sub
cld
pusha
jnp
dec
sub
inc
xor
jl
rorb
repz
jmp
insl
inc
sbb
mov
pop
ljmp
imul
mov
mov
mov
sbb
fxch
push
mov
cmp
addr16
psubsb
xchg
xor
ds
xchg
gs
notl
sub
in
mov
in
dec
ds
xchg
test
pop
lock
add
pushf
cs
inc
or
fisubl
jae
int
cli
push
ljmp
jno
imul
mov
lret
mov
fidivs
icebp
push
cmc
dec
jnp
popf
lods
insb
mov
shrb
mov
lods
cmp
out
loopne
jns
mov
xchg
mov
jns
mov
mov
or
ds
mov
jb
aam
xchg
test
pop
adc
pop
hlt
lahf
cs
lock
jnp
repnz
xorl
andl
cmp
lds
enter
sub
sbb
lahf
inc
ficoms
movsb
cmpl
loop
mov
jl
mov
and
mov
sub
adc
ret
outsl
aaa
add
mov
add
mov
mov
jmp
and
test
push
mov
movsb
xchg
into
daa
outsl
arpl
jno
imul
cli
xchg
leave
or
test
iret
addb
adc
arpl
adc
shrb
je
enter
sbb
outsb
hlt
clc
cwtl
stos
fcoml
jle
into
in
jle
imul
mov
cmp
inc
xchg
stos
es
push
or
inc
mov
and
js
xlat
test
mov
test
xchg
lock
push
add
pusha
xor
lret
shl
stc
paddsb
sbb
sub
dec
mov
jge
push
add
roll
es
leave
fs
adc
mov
xor
add
rclb
out
lds
mov
jnp
cmp
mov
and
mov
les
popf
mov
roll
loop
xchg
adc
rorb
jne
lds
ret
pop
pop
inc
call
fiaddl
sbb
sub
daa
leave
push
fwait
cmp
repnz
enter
pop
jbe
lret
das
rol
pusha
pop
mov
inc
aam
popf
aas
lret
sub
jb
jmp
bound
cmc
mov
mov
invd
dec
cmp
adc
fdivrs
sub
push
ret
jp
stos
ret
in
rorb
in
jle
sub
in
and
lcall
add
or
add
mov
fs
gs
jecxz
xchg
cwtl
xadd
outsb
int
ffreep
push
cld
pop
and
lret
push
or
mov
inc
push
push
add
xor
stc
rol
inc
xor
sbbb
dec
out
ja
jbe
xchg
in
mov
or
int3
xor
or
enter
mov
jmp
mov
loopne
into
roll
mov
loopne
add
arpl
or
sub
mov
adc
imul
mov
inc
cltd
fwait
jp
repz
mov
jp
adc
aaa
push
jo
mov
xchg
sub
jb
sti
daa
int
int3
fsubrs
push
in
nop
cmp
lods
and
je
testb
add
pop
clc
icebp
sub
jle
mov
ret
ret
inc
pop
cmc
out
aad
adc
cmp
pop
xchg
xor
es
loop
insl
aaa
mov
fnstsw
test
xchg
sbb
xchg
outsl
pusha
inc
inc
mov
mov
sahf
insl
xchg
adc
stos
pop
push
fwait
sbb
dec
test
sub
push
cmp
xchg
xor
add
lret
fstpt
jae
addr16
cmc
cwtl
cs
push
or
mov
fs
sbb
mov
sbb
repnz
cli
or
popf
sub
cmc
dec
and
int3
aas
xlat
mov
test
int
jmp
push
mov
and
adcl
cli
mov
nop
loop
sbb
test
fs
inc
pop
call
adc
fnstcw
test
mov
mov
js
mov
dec
pop
inc
add
call
or
mov
ja
outsb
pop
jmp
push
lock
sahf
push
adc
jo
loop
aam
cmp
adc
push
sub
jmp
aam
popf
push
push
push
and
je
cmp
enter
inc
push
inc
sbbb
adc
sub
je
jne
dec
pop
mov
push
mov
sahf
xchg
mov
and
cmpb
cmp
dec
pop
hlt
popl
cs
or
dec
imul
loopne
movb
je
and
ret
lcall
lcall
lods
imul
xchg
dec
xor
int
push
add
cmp
xorl
test
lds
lret
bound
icebp
dec
sti
pop
jle
adc
mov
inc
stos
mov
je
adc
and
pop
jne
outsb
xor
fsubl
mov
in
inc
or
cmpsl
int
pop
push
xchg
xor
xor
sahf
push
pop
idivb
push
mov
mov
jmp
mov
mov
int3
push
daa
sti
iret
stos
das
dec
out
bswap
xor
fnstenv
push
js
in
fcmovnu
sbb
fnstenv
dec
loopne
jne
sbb
nop
push
les
insl
shll
pusha
pop
add
push
test
or
inc
ds
add
in
mov
pop
out
aaa
ror
bswap
cmpsb
cmp
lret
lds
movsl
inc
ficomps
int3
gs
xlat
aad
inc
or
sub
pop
sub
dec
and
mov
sbb
and
inc
push
repz
jl
xchg
xchg
cmp
jge
adc
and
push
call
dec
in
sbb
add
xchg
aam
mov
lcall
das
rcrl
out
add
fwait
repz
dec
loopne
fnstsw
inc
bound
xchg
mov
dec
test
rcrl
and
and
mov
xor
mov
addl
inc
movsb
repnz
rcrl
mov
loopne
ja
sub
xchg
decl
pop
add
popf
jg
or
outsl
jmp
add
pop
lods
inc
xchg
inc
fs
lret
adc
pop
cmc
pop
movsl
es
sub
loopne
fisttpll
add
sbb
xchg
clc
mov
cmpsl
aam
pop
xchg
cmp
sbb
lds
shr
mov
out
add
and
imul
push
stc
xchg
ret
sti
xor
or
leavew
test
or
popa
out
int3
adc
es
pop
aad
xchg
sub
shrb
mov
mov
xchg
xor
rorb
jge
loop
pop
hlt
ds
jno
and
mov
sbb
mov
clc
jmp
clc
cli
int3
movsb
add
stos
fidivrl
ljmp
in
pusha
in
mov
fiaddl
and
cmp
jne
adc
repz
imull
loop
pop
and
stos
in
push
jmp
pop
mov
jmp
out
dec
cmp
push
loopne
dec
lock
or
xor
inc
les
mov
jbe
xchg
enter
decb
or
adc
jb
sub
mov
mov
xchg
cmp
sbb
mov
shll
xor
rcrl
sbb
dec
repnz
mov
aaa
mov
scas
dec
out
je
cmp
add
xor
loopne
mov
push
sub
push
frstor
js
sbb
test
or
push
sub
sub
cmpsb
fisubrs
or
faddp
pusha
jmp
pop
shll
pop
out
inc
adc
cmpsl
sub
aaa
dec
shll
pop
sahf
pop
xor
mov
mov
push
scas
movsl
stc
fs
sbb
cli
pop
stos
pop
mov
je
dec
sub
out
pop
out
lcall
add
daa
outsl
add
add
lods
cli
adc
loope
rcll
out
mov
ljmp
and
into
loop
mov
and
lcall
push
icebp
inc
xlat
inc
mov
pop
jbe
pop
cmc
sbb
dec
rcrb
or
repz
jle
rcr
loopne
hlt
mov
pushf
sti
leave
sahf
inc
scas
xchg
push
cld
nop
or
jo
mov
jecxz
sbb
scas
mov
xor
jmp
push
sub
adc
xchg
movsb
xor
mov
bswap
xor
fcompl
and
cmpsb
shrl
cmp
fisubrs
nop
or
test
lret
gs
sub
es
imul
pop
push
sub
or
dec
sbb
jae
iret
and
mov
insl
rcl
ret
mov
hlt
cmp
cltd
vcmpps
xchg
in
mov
js
cmpsl
mov
mov
mov
idivb
mov
mov
mov
pop
leave
in
pop
loopne
ficomps
aad
inc
inc
pop
js
or
sarl
sbb
mov
ja
inc
neg
mov
cli
adc
es
pop
ds
jle
hlt
test
stc
mov
push
shll
jb
jbe
push
push
sahf
jp
mov
sti
jle
fdivl
dec
stos
jne
pushf
lock
cld
xlat
mov
leave
push
shrb
mov
inc
dec
xchg
into
xchg
shll
rcrl
jl
sbb
fbstp
cmp
test
cmpsl
jl
cwtl
fdivrl
inc
int3
sub
js
mov
hlt
and
jl
jo
data16
pop
dec
jp
movsl
aas
insl
addr16
sbb
pop
lock
push
mov
ss
in
int
jbe
mov
mov
lea
shrb
add
jmp
test
push
shlb
jle
sub
mov
sub
mov
icebp
inc
cmpsl
out
cli
das
add
push
cmp
jg
ja
bound
add
push
stos
pop
xor
jae
mov
nop
ret
sub
outsb
mov
andb
dec
sub
mov
in
push
push
loop
insb
and
gs
push
mov
lds
lcall
in
ljmp
adc
adc
lods
cmp
mov
inc
pop
popa
or
daa
cmp
loope
cmp
xchg
aaa
test
inc
adc
mov
fdivp
dec
pop
jecxz
or
shrl
lods
xchg
mov
mov
dec
dec
fstl
lods
push
cs
loop
and
cmp
ss
dec
aaa
push
or
push
add
outsb
xchg
cmp
sbb
jb
aam
out
test
jb
sar
lods
cld
sbb
cli
cmpl
iret
je
addr16
rolb
mov
fwait
lods
fmuls
cmpsl
mov
aas
hlt
roll
pushf
add
mov
mov
mov
push
lcall
add
cmp
clc
inc
sbb
sub
jge
rcrb
pop
aam
cltd
push
in
pop
in
or
fdivrs
shll
cwtl
pop
mov
popf
loope
loope
mov
test
shlb
push
cli
mov
mov
jnp
lret
lods
xchg
jo
inc
ret
xchg
ret
pop
scas
xchg
push
push
mov
fmul
pop
rcrl
inc
cmp
fdivl
mov
push
jge
adc
xchg
testl
and
jecxz
icebp
les
aam
xchg
aad
dec
sbb
ljmp
xchg
cmpsb
test
pop
data16
sysexit
addl
push
cmpsb
es
shll
ret
fwait
insl
lea
mov
imul
pop
and
cltd
cmpsl
rolb
aad
sti
jg
push
and
daa
pop
cmp
mov
popf
test
mov
xchg
xchg
add
and
inc
and
mov
ret
xchg
sub
push
pop
lock
push
dec
xor
and
nop
push
mov
jns
out
add
lods
push
je
jb
inc
push
clc
mov
hlt
add
xlat
out
cld
dec
in
movsl
gs
fimuls
mov
addr16
addb
mov
and
push
aad
ss
ss
data16
cltd
or
xchg
jne
push
push
sbb
jne
or
loope
fnsave
or
push
pop
xchg
push
pop
daa
out
test
cs
add
push
and
stos
push
aaa
lock
cmp
mov
insb
jmp
add
dec
cwtl
xchg
aaa
mov
sub
sti
in
ret
fdiv
sub
and
add
cmp
ja
pushf
push
dec
dec
pop
jge
mov
mov
imul
xor
inc
jo
or
add
das
mov
pop
lods
mov
out
stos
idiv
cltd
sub
std
test
out
pop
sbb
or
sbb
push
or
orl
hlt
cs
add
fnsave
test
inc
pop
jns
pop
stos
lcall
cwtl
popf
mov
mov
ficoms
andb
test
outsl
mov
gs
sbb
into
ljmp
sub
xchg
xchg
scas
and
jbe
pop
mov
cmc
std
xor
lret
push
fsubrs
in
leave
fadds
stos
cmp
call
imul
push
and
out
dec
cld
xchg
cmp
jae
lret
cmpl
cmp
push
sub
mov
ror
cmp
dec
loop
or
add
lock
and
sub
mov
dec
fimull
push
out
cmp
loop
js
jne
add
sbb
bts
roll
jg
jecxz
cmpsl
rcr
add
jle
hlt
push
repnz
add
sbb
mov
int
pushf
push
jecxz
inc
push
sbb
ret
ret
or
test
mov
push
cmpsb
mov
dec
std
cltd
ret
mov
adc
or
test
mov
popa
iret
xor
jmp
shlb
je
lock
lods
cmpb
jo
push
nop
fs
pop
sbb
adc
sub
nop
out
fcomip
push
jmp
sbb
stos
int
pop
mov
push
popa
mov
mov
add
pop
bnd
int3
jl
adc
mov
cs
xchg
testl
mov
enter
and
push
xlat
mov
mov
sub
cmp
lahf
lods
rorl
add
stos
notb
sbb
out
mov
adc
vmwrite
cmp
into
and
js
mov
sub
push
ret
int
rcl
insb
out
jne
jmp
dec
adc
cli
rep
lock
icebp
push
ljmp
shrl
loopne
mov
sub
scas
dec
and
sub
adc
adc
ljmp
jmp
out
or
icebp
inc
fsubs
pop
aas
cmc
pop
add
xchg
add
popf
sarb
pop
sbb
pop
adc
enter
mov
loopne
adc
aad
push
iret
adc
inc
shlb
inc
add
es
rorl
rcrb
nop
inc
jl
pop
lods
push
adc
cs
cmpsl
push
xchg
daa
or
adc
cmpb
cmp
mov
in
jb
or
in
cltd
xchg
xchg
loopne
jnp
mov
inc
sbb
cmp
pop
mov
jb
icebp
arpl
or
mov
or
jp
std
mov
pusha
dec
xchg
push
push
and
shll
or
mov
pop
fstps
or
icebp
dec
pop
xor
fwait
add
mov
jecxz
push
out
cld
sub
inc
xchg
repz
push
push
push
outsb
scas
data16
stos
push
out
fidivl
in
stos
jne
push
enter
es
adc
adc
xchg
and
nop
push
mov
movsb
cli
sub
cmp
xor
bound
inc
mov
adc
int3
insl
xchg
pop
bound
loopne
sub
imul
clc
push
push
lods
or
lahf
mov
inc
enter
sub
jecxz
sbb
stc
popa
nop
mov
xchg
xchg
pop
dec
aad
es
stc
ret
cmc
imul
cmp
mov
int3
repz
or
mov
jl
push
test
cmp
rorb
movsb
stos
cs
xchg
sti
push
gs
sbb
mov
cmp
pop
jb
rcrb
and
inc
nop
dec
xor
ret
push
int
out
popf
push
or
pop
cmp
icebp
or
sbb
mov
jno
enter
or
es
push
scas
test
aas
push
push
inc
aas
mov
lcall
lds
pop
pop
cmpsl
dec
aaa
mov
enter
std
andl
inc
mov
pop
out
cld
cmpsl
mov
dec
ret
pusha
push
out
xchg
clc
push
jb
int
cmpsb
inc
xor
test
mov
push
lock
mov
jbe
scas
inc
mov
inc
push
pusha
mov
test
cld
mov
call
pop
jmp
or
dec
popa
jbe
in
daa
push
lret
dec
jae
jp
push
or
adc
fidivrs
mov
jae
negl
shlb
in
adc
push
scas
xor
sub
xor
mov
mov
xor
dec
repnz
aaa
push
rorb
adc
addr16
sbb
out
xor
test
mov
add
ljmp
push
push
sbb
xor
or
lock
mov
inc
popa
mov
pushf
xor
sub
mulb
pushf
dec
pushf
mov
enter
sahf
fistpll
mov
inc
sub
test
mov
or
dec
ret
or
fs
jo
mov
mov
push
jge
rorl
xchg
out
test
insl
inc
mov
cli
test
in
fidivrs
fisubrl
pop
std
repz
jnp
sbb
lods
sub
inc
xchg
out
int3
pop
dec
mov
or
xchg
imul
das
repz
add
lds
testl
mov
cmc
and
rcl
insl
push
lds
test
ds
repz
sbb
cmp
add
pop
lahf
or
fmul
std
pop
lahf
add
ds
arpl
cmp
push
lret
ljmp
inc
call
and
into
insb
mov
push
ds
test
int
xchg
rclb
dec
pusha
rclb
cmp
fidivs
lods
idivb
pop
jb
addr16
xlat
in
inc
nop
insl
in
das
fbstp
inc
outsb
gs
sti
mov
xor
outsb
sub
fmuls
sbb
mov
cwtl
add
lret
and
mov
fisubl
not
scas
nop
pop
movsb
or
mulb
cmpsl
icebp
cmp
loope
mov
add
adc
add
pop
pusha
stc
inc
ss
xchg
arpl
bound
inc
cli
andb
add
cmc
mov
test
pop
ja
in
fmulp
fiaddl
test
test
js
dec
xchg
dec
mov
nop
dec
add
dec
outsb
add
mov
inc
or
enter
aaa
jb
inc
jmp
push
dec
ret
js
fldl
je
int3
loope
outsb
mov
into
or
jns
test
inc
nop
sub
popa
lcall
jae
pusha
fistpl
sbb
dec
cld
pushf
and
cmp
jecxz
mov
cmc
popa
mov
pushf
mov
mov
push
outsb
add
iret
in
cmpsb
cmpsb
jecxz
hlt
mov
xchg
sub
mov
jbe
adc
pop
add
cld
jbe
sbb
loop
aaa
int
inc
into
arpl
fildll
lods
sbb
sbb
cmp
aas
lret
out
sub
in
inc
lods
mov
std
cmp
push
cli
mov
pop
cltd
mov
xchg
test
mov
inc
or
jp
xchg
cmp
add
cmp
pop
and
push
lods
ss
insb
push
scas
mov
and
rcl
mov
stos
push
xlat
xchg
insl
les
les
lds
cld
add
fistps
jno
jns
out
xchg
scas
pop
clc
repnz
jno
cmp
in
ret
xor
sbb
retw
mov
and
sub
in
pop
push
repnz
and
clc
adc
ret
sti
mov
mov
inc
fisubl
push
cmpsl
aam
popa
addl
adc
scas
lds
mov
adc
int
jle
inc
repnz
jmp
popf
and
fldl2e
adcl
subl
sub
ss
xchg
clc
jmp
add
mov
sbb
sub
int
ja
adc
cli
scas
inc
mov
call
mov
push
mov
shlb
dec
aam
mov
pop
decl
inc
in
fadd
push
mov
cmpsl
fstps
mov
das
ljmp
push
inc
ffree
ds
or
cmp
test
shl
cmp
sub
sbb
dec
fcmovnb
cmp
lods
inc
mov
ficompl
test
mov
pop
jle
cmp
filds
lea
pop
movsb
sbb
inc
jl
lret
dec
sub
addr16
sbb
xor
sbb
jecxz
hlt
jmp
push
je
and
cld
jnp
dec
loopne
out
jg
lahf
push
and
mov
test
cmp
mov
xchg
call
xor
mov
adc
dec
dec
xchg
xchg
jo
mul
sub
sbb
das
pop
adc
int3
test
leave
xor
cmc
push
cmc
jmp
push
dec
in
xchg
ret
lahf
test
popa
sub
xchg
sbb
or
arpl
insb
idivb
sub
add
pop
fistpl
jbe
xchg
cmp
inc
cmp
movb
ret
out
and
xor
lds
int3
aas
adc
int
add
inc
repnz
and
mov
jl
aam
jecxz
and
notl
cmp
adc
mov
div
jne
cmp
push
in
lock
push
pop
stos
or
jp
test
mov
mov
lret
jae
xor
mov
add
push
repz
mov
sub
in
mov
int3
fmulp
pop
mov
fisubl
faddl
mov
sbb
in
jmp
dec
rol
and
add
fsts
js
sub
sahf
std
cmp
in
jns
mov
or
lcall
cmp
pop
inc
fidivl
push
popa
aad
arpl
ljmp
adc
stos
sahf
ret
mov
sub
fsubrl
rcl
add
jl
cmp
sti
pop
adc
mov
psubsw
test
int
lods
mov
test
enter
sbb
movsb
imul
cmp
loop
jae
je
aad
imul
mov
jae
fbstp
out
rcl
faddl
int3
sub
clc
xor
xor
mov
and
outsl
fwait
in
and
ljmp
pushf
lahf
sub
inc
mov
data16
cmp
inc
in
pop
shrb
jmp
xlat
and
aad
out
push
in
out
icebp
loope
movsl
sbb
mov
pop
jle
pusha
pop
pop
push
in
sbb
cmp
dec
dec
push
fbstp
dec
sub
xchg
push
sarb
sbb
jg
out
mov
mov
fistps
push
ror
lock
or
push
pop
dec
and
jb
inc
dec
mov
pop
loope
push
jb
lods
xchg
pop
mov
test
ljmp
dec
pop
add
sahf
jno
adc
lea
fstl
lock
push
sbb
pop
hlt
and
mov
push
mov
and
mov
rcll
jb
add
pusha
repnz
idivl
jle
stos
rep
xchg
fnsave
scas
fstps
lea
pop
pop
cld
or
sub
sarl
cltd
mov
jno
cmp
leave
xor
ds
cmp
out
aas
stc
push
xchg
add
inc
jnp
loope
data16
cmpsl
cmp
push
sbb
pop
addr16
loope
pop
ja
adc
cmp
cmpsb
mov
mov
push
jecxz
fcompl
pop
mov
mov
inc
or
jge
movsb
sub
notb
icebp
pusha
movsl
adc
cmp
mov
js
push
shl
movsl
outsl
xor
mov
out
push
ljmp
cmc
enter
aam
adc
push
adc
add
call
lret
mov
xchg
fwait
andl
lcall
adc
push
pushf
push
xchg
aad
push
mov
fwait
or
dec
cmp
je
cmp
and
mov
xchg
mov
xlat
hlt
movl
adc
dec
cltd
dec
rolb
icebp
dec
dec
add
pop
ficomps
dec
in
mov
pushf
mov
adc
hlt
jecxz
xchg
test
ret
adc
call
test
mov
cwtl
divl
lods
ret
aaa
iret
jl
or
scas
dec
pop
xlat
ja
hlt
mov
mov
idivl
jns
or
pop
cli
xor
jg
js
and
or
fistps
mov
lret
pusha
enter
cmpsb
adc
loope
shrb
cmp
sbb
push
sub
jecxz
jne
bound
pxor
aam
jb
or
mov
dec
gs
mov
jp
lds
xchg
das
je
pusha
cwtl
mov
bound
out
pop
vshufps
mov
inc
popa
mov
out
lock
aaa
mov
xchg
inc
add
fcoml
mov
fs
pop
cwtl
jne
enter
lock
pop
ret
pusha
jl
js
ffreep
mov
cmpsl
clc
stos
push
das
jge
adc
inc
pop
mov
pusha
int
imul
loop
lret
ds
outsl
outsb
adc
dec
add
das
mov
cvtdq2ps
and
dec
loopne
push
cld
pop
xor
or
cmp
movsb
pop
mov
add
fs
ret
jmp
xchg
cli
pop
shrl
xor
incb
mov
leave
xor
xchg
xchg
jp
add
adc
loopne
stos
dec
shlb
icebp
push
inc
scas
pushf
push
daa
xchg
js
pop
sub
sbb
ret
fldt
push
pop
scas
mov
mov
rep
inc
stos
outsl
les
insb
xchg
inc
pop
mov
leave
jecxz
adc
stos
adc
js
fsubl
dec
shrb
ret
cmpsl
sbb
ds
sarb
mov
push
and
or
push
lods
dec
fisttpll
lcall
cmpsl
dec
adc
sbb
outsl
and
sub
push
popl
cmp
mov
and
mov
cmpsl
sub
sub
mov
inc
dec
sbb
and
sbb
fs
mov
add
pop
mov
xchg
sub
push
enter
push
sub
std
jno
out
std
jno
sbb
fcomip
arpl
rcrl
and
mov
jg
push
popf
lea
iret
sbb
add
adc
lcall
mov
xchg
fmull
sbb
sub
pop
loope
cmpb
fildll
add
push
test
aad
adc
repz
adc
nop
loope
push
leave
call
xor
mov
or
push
dec
cpuid
mov
ss
add
js
pop
movsl
mov
push
call
push
xor
dec
movsb
inc
or
andl
in
ret
cmp
pushf
jge
test
in
pop
xchg
js
push
cmc
adc
test
adcb
inc
and
arpl
sbb
popa
scas
pop
leave
pusha
xchg
or
cltd
pop
mov
xchg
decb
dec
xlat
aaa
dec
and
push
mov
mov
xchg
dec
rcrl
xchg
pusha
les
cmp
loop
push
adc
hlt
fs
int3
sub
fwait
sbb
push
dec
jp
mov
std
push
adc
or
std
aas
inc
fistpl
data16
lock
and
scas
mov
imul
sub
xchg
rorl
lods
pop
mov
sub
cmp
cmp
inc
cmp
insl
inc
mov
and
mov
andb
mov
and
and
scas
lcall
inc
cmp
scas
xchg
and
lock
or
push
cltd
into
in
data16
stc
das
or
dec
andl
xchg
inc
clc
loopne
xor
sub
shll
pop
add
jne
outsb
arpl
ja
test
ja
xchg
fidivl
ficoms
dec
imul
jmp
roll
lretw
push
or
and
out
dec
sti
es
pop
adc
jg
ss
sti
cmp
jecxz
cmp
gs
and
jecxz
inc
adc
or
mov
andb
mov
hlt
mov
adc
pop
xchg
call
adcl
lret
shl
mov
mov
inc
call
or
das
addr16
push
mov
cmp
rcl
push
outsb
adc
xchg
mov
popf
in
push
lcall
adc
loop
in
dec
xchg
sbb
sbb
inc
lret
cmp
push
inc
shrl
inc
push
loop
xchg
jbe
mov
xor
insb
jmp
adc
out
in
pop
movsb
inc
xor
test
loop
sub
dec
mov
or
push
ror
mov
std
mov
ret
push
imul
dec
mov
dec
pop
cmp
sub
lcall
cwtl
jmp
push
outsl
jg
xchg
loopne
lahf
push
nop
xchg
sub
pop
jb
notb
pop
push
negl
xlat
fsub
cmpsb
mov
sbb
stc
cmp
fists
mov
push
leave
ret
or
cmpsb
lea
jle
push
sti
insb
xchg
sbb
dec
sbbl
pop
out
dec
jecxz
aam
jge
xchg
cmp
cld
mov
add
mov
lock
sub
daa
outsl
orl
push
fcmovnu
pop
paddb
popa
add
out
das
pop
es
sbb
push
jb
cmp
loopne
ds
das
mov
les
xor
enterw
cmp
lret
dec
add
out
push
cmpsl
and
cld
sbb
insb
push
fstpt
pop
insb
dec
scas
sbb
mov
mov
pop
das
jecxz
push
or
or
xchg
add
mov
repz
jge
scas
sub
pop
pusha
jl
fsubrs
pop
fdivs
dec
imul
push
rcll
or
jo
jmp
and
xchg
sbb
xchg
sbbl
int
sub
mov
bound
ja
push
cli
adc
add
mov
inc
inc
mov
jnp
xchg
xchg
arpl
adcb
pop
lods
mov
jge
xchg
je
test
dec
xchg
hlt
inc
in
cmp
cmp
push
mov
out
lret
mov
cld
adc
pop
cmp
aaa
movsl
mov
mov
jg
jbe
scas
addl
add
lods
cmp
rorb
lahf
adc
pop
sub
mov
add
leave
pop
push
dec
xlat
xchg
dec
jb
jl
call
clc
js
sub
sub
xor
sbb
into
cmp
push
xchg
mov
test
dec
int
cmpb
xchg
in
add
cmc
nop
sbb
mov
in
mov
sbb
dec
push
and
or
cmp
std
lcall
add
iret
repnz
pop
inc
ja
sbb
sbbl
push
lahf
adc
inc
out
movsb
cmp
andl
xor
sub
imul
sbbl
xlat
lock
cmp
sarb
fsubrs
xacquire
jbe
das
sbb
rclb
ss
adc
add
mov
pusha
loope
xchg
scas
lds
mov
lahf
in
mov
mov
popf
sbb
sbb
pop
lods
les
inc
hlt
mov
and
adc
sub
and
out
sbb
shrb
sub
scas
xor
fidivs
cmp
hlt
mov
rcll
xor
nop
pop
scas
loope
loope,pt
test
mov
push
es
cld
or
cmp
mov
das
push
fs
shl
inc
sub
cmp
popf
ja
pop
xchg
xor
add
adc
mov
int3
xor
pop
subb
adc
repz
lret
adc
sarb
jge
jle
cmp
and
pop
call
push
aam
jno
mov
sub
loope
cmp
pop
adc
adc
lahf
push
mov
shl
test
mov
lret
mov
adc
jo
dec
dec
inc
int3
xor
cli
pop
out
cmpsl
jmp
push
inc
jge
sbb
out
jnp
jne
push
imul
ret
xchg
test
outsb
adc
jno
xor
arpl
andl
push
pop
xchg
lcall
fsubr
sub
xor
inc
in
sub
or
test
dec
std
mov
xchg
mov
adc
ja
mov
ror
daa
mov
pushf
sub
int
test
shlb
shrb
lock
shl
rcrl
cmp
adc
mov
mov
mov
mov
and
test
test
lock
imul
mov
xor
lock
cmp
sub
jbe
rol
outsl
push
jns
adc
dec
fisttpll
leave
adc
ds
sbbl
jo
loopne
push
pushf
mov
cltd
addr16
xor
jecxz
bound
subl
in
push
and
in
inc
lea
and
loopne
in
push
xchg
subl
xor
pushf
clc
add
mov
testl
cmc
ljmp
iret
mov
jbe
lods
sahf
dec
mov
insl
add
or
pop
dec
and
out
test
in
test
and
jbe
cli
movsl
loopne
mov
scas
xchg
in
dec
fistl
rcrl
xlat
inc
xchg
mov
popf
cwtl
daa
xchg
mov
xchg
push
mov
das
cmc
mov
mov
shll
mov
push
lcall
sbb
int
pop
loop
in
pop
leave
pop
hlt
push
mov
sub
setne
shl
addb
mov
sub
add
xchg
or
aad
sbb
pop
stos
scas
stc
xchg
sbb
ljmp
lret
cld
push
and
and
push
dec
add
mov
cmp
mov
and
cmp
add
mov
push
inc
clc
jg
xchg
add
dec
mov
lods
cmp
call
fistpl
push
inc
cmc
jl
imul
mov
dec
mov
sbb
jp
xchg
mov
mov
lea
fimuls
pop
add
fbld
push
in
popa
jo
sbb
dec
pushf
imul
xchg
sub
jo
push
xor
mov
and
sbb
inc
sbb
jae
mov
cltd
push
fdivrl
cmp
dec
mov
or
lahf
sbb
sarl
xchg
or
repz
sbb
cwtl
and
sub
sarl
jmp
test
test
push
mov
inc
daa
xchg
push
outsb
dec
dec
push
movsl
jle
shll
mov
out
add
scas
lea
jno
or
dec
push
mov
inc
fidivrl
fisubl
dec
xor
pop
mov
push
fisttps
or
fs
imull
into
xchg
aam
insl
inc
into
mov
xchg
mov
fs
xor
rcr
prefetch
or
lret
dec
arpl
xor
testb
test
call
fdivrl
push
out
adcl
fmuls
hlt
dec
mov
stc
je
pusha
rcrl
mov
roll
fxch
mov
bound
xor
dec
inc
xlat
jp
popf
xor
out
pop
hlt
fadd
ret
pop
cld
pop
mov
add
dec
jo
and
insb
fcmovnb
fwait
int3
pop
cld
jg
jmp
popf
jne
mov
loopne
in
call
mov
cmpsl
pop
in
inc
lods
xor
dec
data16
int
pop
into
dec
adc
pop
ss
ret
xor
adc
sbb
xor
sub
pop
mov
mov
sub
int3
idivl
push
test
jnp
push
repnz
mov
or
add
cli
mov
fwait
outsb
stc
mov
sub
stc
inc
ret
je
je
add
push
mov
jp
movsb
cmp
push
xchg
add
cmp
push
out
scas
and
mov
dec
jne
popf
xchg
add
out
mov
aaa
or
sbb
or
std
lret
pop
xlat
outsb
mov
push
adc
push
mov
jecxz
loopne
push
scas
pop
in
mov
js
pushf
out
into
cmovle
mov
pop
repnz
xor
mov
hlt
repnz
clc
push
xor
fisttpl
dec
pop
outsb
test
aad
imul
pop
rep
jae
ljmp
cmc
adc
xor
xchg
dec
insl
loopne
jno
scas
mov
xor
sub
pusha
cmp
inc
or
out
pop
stos
mov
aad
mov
mov
mov
stos
call
sub
scas
inc
mov
mov
mov
cs
fidivrl
inc
gs
sti
imul
push
fwait
xchg
int
ds
movsl
cmp
jne
xor
gs
callw
ds
or
cmpsl
sub
mov
jbe
mov
test
mov
cmp
sahf
adc
dec
dec
mov
movsb
rcrb
sti
or
jae,pt
jbe
adcl
inc
adc
pushf
xlat
fstps
or
inc
inc
mov
pop
stc
and
mov
js
sbb
jnp
sub
mov
inc
jmp
mov
arpl
xchg
or
andb
sbb
cmpsl
ss
xchg
jne
mov
ljmp
push
leave
sbb
scas
mov
dec
loop
lods
ss
aad
xchg
gs
std
xor
popf
pushf
flds
vxorps
call
int3
arpl
repz
dec
jo
int3
push
imul
popf
not
cmp
inc
jg
lret
mov
ror
mov
adc
test
inc
and
add
or
xchg
aas
ret
inc
inc
filds
in
mov
inc
call
test
lock
adc
ret
fstps
mov
hlt
fisttps
jnp
fstpl
push
or
jne
fcoms
fstpl
add
mov
mov
scas
scas
aas
sbb
mov
imulb
test
mov
mov
or
sub
sbb
cmp
cmp
stc
or
test
adc
or
ret
inc
fpatan
les
clc
testb
sbb
xchg
mov
enter
mov
push
test
sbb
nop
mov
int3
and
fistpl
cmpsl
imul
xlat
sub
jno
sub
ds
repnz
pop
fsubs
xchg
fiaddl
lret
cmp
jmp
mov
push
mov
xchg
sub
psubw
jno
addl
or
pop
mov
div
aaa
outsl
cmp
cld
dec
inc
cs
sbbb
sub
push
sbb
enter
mov
inc
adc
aaa
leave
and
hlt
dec
out
insl
mov
pop
jge
adc
lds
ret
mov
dec
into
pcmpeqw
leave
mov
gs
ds
mov
aaa
push
mov
mov
nop
push
scas
shrl
jne
pop
mov
test
jnp
fists
xchg
push
shl
push
cwtl
cmp
insb
add
dec
mov
andb
aas
sub
jecxz
sahf
xor
pop
pop
movsb
mov
sub
and
xor
add
pusha
cmp
mov
pop
sbb
jmp
fnsave
jle
push
sub
cltd
pop
dec
pop
cld
mov
sub
mov
mov
mov
loopne
js
int3
cmc
and
inc
sbb
sahf
mov
loop
adc
xor
cmp
cmp
mov
loopne
repnz
aad
mov
pop
hlt
cmp
xchg
add
pop
xor
jg
add
in
xor
fbstp
mov
lret
jne
repz
pop
in
fmuls
fcomps
scas
and
mov
mov
xchg
jo
adc
push
push
imul
pop
mov
and
ret
hlt
pop
pop
ja
xchg
int
inc
mov
and
divl
inc
cmp
fbstp
push
mov
fisubrs
xor
xor
mov
inc
adc
add
adc
pop
push
cld
inc
or
adc
xor
in
iret
sub
fists
adc
dec
jb
jle
fistl
int3
iret
rorl
mov
mov
int
fdivl
incl
xchg
fisttps
mov
fildl
sub
push
pop
push
sbb
les
dec
pop
xor
sub
push
les
repnz
lahf
pop
xchg
sub
and
inc
mov
leave
and
xor
rolb
aaa
or
in
aaa
xor
mov
outsb
shlb
inc
and
jmp
cmpsl
fcoml
fimull
cmp
movsb
sahf
popa
add
xchg
mov
leave
jle
daa
mov
fisttpll
mov
lahf
sti
add
mov
lds
icebp
push
jo
sub
ds
rcll
aas
jo
inc
std
in
mov
flds
int3
lods
xor
test
dec
jo
pusha
push
jne,pt
fdivl
hlt
data16
adc
inc
repnz
push
je
pcmpgtd
jl
mov
out
mov
data16
mov
push
inc
mov
mov
and
lret
xlat
ss
jl
xchg
dec
pop
scas
adc
pop
jecxz
repnz
mov
ja
inc
and
int
fdivl
pusha
int3
sbb
outsb
cli
or
lea
mov
jo
pop
mov
int3
aaa
notl
dec
dec
adc
lods
insl
sbb
and
inc
or
out
push
scas
lcall
mov
ret
roll
or
fs
cmp
and
pop
push
push
mov
rol
bound
iret
mov
in
sub
scas
ficoml
arpl
lahf
std
push
outsl
ffree
pusha
mov
sub
in
pop
pop
lahf
xchg
or
mov
cmpsl
sub
movsb
icebp
fldcw
ret
sti
test
mov
mov
callw
sub
push
mov
pop
cwtl
xor
cmp
push
sbb
iret
insb
add
pop
rcl
mov
mov
outsb
dec
dec
ds
daa
cmpsl
jnp
filds
adc
jbe
mov
movsb
inc
fisttpl
dec
jp
jnp
dec
fcoml
sarb
es
jmp
lret
clc
ljmp
test
inc
dec
pushf
sub
jnp
xchg
das
xchg
xchg
push
sub
movsb
dec
loope
push
jae
push
sub
ljmp
ficompl
mov
push
idivb
orl
dec
pop
test
daa
cmp
adc
and
clc
or
push
add
jbe
imul
js
addr16
mov
movsl
test
pushf
inc
addr16
ss
pop
cmpsb
sbb
add
cmp
stos
ret
aaa
push
fsubr
ret
jge
or
xor
nop
mov
leave
sbb
adc
jl
pop
dec
jne
jnp
movsl
jns
pop
fwait
cmp
mov
std
xchg
push
jp
push
in
movsl
mov
rclb
adc
aaa
imul
push
shll
dec
adc
sub
push
out
cli
xchg
and
movsl
popa
add
add
ds
xor
cmp
jg
push
xchg
jae
sahf
xor
and
ss
dec
lcall
rorb
jl
mov
or
jl
mov
adc
jmp
lcall
dec
mov
negl
cmp
and
shll
or
xchg
pop
cmc
pop
out
mov
imul
and
ja
cmp
sub
mov
lea
rclb
rclb
mov
jp
pop
jge
xchg
jo
fwait
aaa
or
sub
es
sub
lock
call
cltd
das
imul
xlat
imul
push
ss
inc
xlat
ret
dec
xchg
xor
aad
or
imul
arpl
push
sub
mov
xchg
lods
fisubrs
mov
cmc
sbb
das
adc
shll
adc
test
pusha
cmp
or
mov
decl
ja
fcompl
das
adc
mov
xor
push
pop
xchg
mov
loopne
in
mov
sbb
sub
aad
enter
ljmp
incb
dec
fcom
pop
insb
cli
bnd
push
aaa
add
jl
inc
fcomps
in
test
mov
mov
aaa
inc
pop
fsubrl
sub
lret
ret
cld
arpl
les
adc
repz
mov
adc
add
cmp
lods
hlt
inc
sub
cmc
fdivrl
fnstcw
cmp
mov
enter
push
in
test
dec
daa
outsb
cmpsl
mov
lret
mov
insb
mov
outsb
sub
jb
dec
orl
repz
cwtl
fsub
mov
js
jecxz
loop
mov
sti
inc
mov
outsb
jo
xchg
scas
push
lods
inc
and
sub
sbb
sub
popa
push
jbe
add
dec
jno
pop
addl
int
push
push
inc
filds
std
pop
mov
push
pushf
out
mov
data16
and
jl
and
push
sarb
pop
fidivrs
xchg
lret
sbb
mov
or
aaa
pop
sbb
lds
pop
sub
aaa
outsl
pop
ss
xchg
xchg
repnz
mov
js
sahf
add
jb
in
scas
inc
repz
ret
loopne
insb
movsb
inc
inc
sbb
add
dec
repz
xor
scas
lahf
push
outsl
jnp
pop
dec
xchg
andb
test
scas
adc
pop
xor
adc
mov
mov
ret
das
jb
daa
xlat
leave
cmp
clc
clc
scas
add
jo
or
push
stos
sub
dec
lret
xchg
outsb
scas
bound
mov
hlt
jnp
adc
sbb
sub
idivl
inc
flds
fcomip
test
cmp
movsl
cmpb
jne
sub
sbb
xor
jnp
xchg
in
mov
out
jmp
xor
clc
call
cmpsl
shll
sub
jg
add
jbe
subb
out
and
das
xlat
scas
fildl
lret
sub
cmp
cmp
insb
push
jmp
cmpsl
loopne
mov
repz
push
shr
xor
xor
ds
cmp
dec
arpl
pusha
insb
jne
scas
xchg
cmc
imulb
imul
xchg
shrb
cmc
leave
pop
addr16
pusha
fcomi
push
ljmp
mov
loop
ficoml
jno
dec
mov
fisubrl
mov
lea
lcall
arpl
repz
jp
pop
iret
repnz
lcall
cwtl
push
or
push
and
jecxz
sub
andb
fwait
jnp
cltd
and
push
jecxz
xorl
xchg
cmpsb
pop
out
adc
movsb
jg
stc
cmpsb
scas
daa
adc
cmp
leave
rcrl
into
orl
and
adc
mov
jp
adc
lret
sar
add
jae
push
jge
aas
aaa
stos
pushf
clc
hlt
pop
fs
subb
xchg
dec
mov
pop
test
outsb
in
jl
fmull
or
cmp
adc
xchg
lea
adc
in
mov
push
mov
mov
inc
add
jle
sbb
mov
mov
pushf
bound
mov
dec
das
adcl
fcomip
push
jns
mov
jo
es
or
pop
lock
vpshufhw
call
cmp
outsl
xchg
push
ds
mov
mov
sbb
adc
jns
xor
pcmpgtw
push
shrb
sub
daa
jmp
or
add
test
adc
cmp
mov
rolb
out
sbb
or
sub
fbstp
and
push
aas
fists
inc
arpl
cmpsb
scas
add
aaa
insl
int3
and
and
das
add
push
loopne
mov
insb
cmp
bound
sahf
inc
jae
cltd
fistl
or
test
xor
cld
outsb
faddp
sbb
add
mov
or
and
pushf
xor
data16
adc
inc
es
call
das
ja
pop
cltd
add
push
fisubs
fnstsw
out
das
cs
fiadds
arpl
pop
mov
add
pop
sub
pop
push
icebp
xchg
mov
pop
repz
adc
push
add
cmp
and
jnp
jnp
ss
mov
adc
imul
cmp
loope
cmp
mov
or
das
mov
mov
or
fdivrl
xchg
mov
push
push
jae
aaa
loopne
in
das
test
mov
mov
out
pop
in
lods
pusha
hlt
jae
repnz
lcall
es
dec
out
jmp
insl
aam
and
mov
in
jae
xor
add
push
shlb
jge
pop
sti
lcall
add
cmp
or
in
outsb
testl
imul
ss
push
scas
and
cmp
icebp
insl
jge
xchg
scas
xor
rcll
xor
ljmp
mov
pop
rcll
pop
push
leave
vpackuswb
jle
pop
or
pop
cmp
loop
outsl
aam
dec
mov
mov
addr16
or
adc
pop
pop
cmp
pop
jno
fsts
sbb
daa
cli
mov
mov
cmc
iret
stos
std
pop
test
push
xor
cltd
xchg
sub
outsl
iret
jne
mov
xorl
xor
or
and
mov
je
cmpsl
push
int
sbb
xchg
dec
and
cmp
ret
ret
mov
add
icebp
xor
add
cmp
inc
xchg
add
push
adc
add
imul
pop
mov
jnp
cwtl
pop
pop
sbb
test
lret
scas
out
dec
sbb
pop
mov
cmp
dec
mov
jecxz
cmp
dec
and
jecxz
jne
inc
sub
dec
adc
jo
mov
inc
hlt
std
dec
lret
dec
lcall
jl
and
test
dec
fldl
repz
inc
lret
add
mov
bound
push
in
jae
jne
inc
mov
repnz
fnstsw
test
xchg
test
bound
mov
in
sbbb
jbe
popf
dec
push
adc
cmp
sbb
xor
leave
shr
add
push
mov
fs
mov
sbb
cltd
xor
sbb
imul
adc
addr16
mov
mov
ds
inc
loop
and
inc
pop
jo
stos
pop
inc
in
inc
jo
stc
es
mov
lock
ja
adc
ljmp
iret
test
test
ss
push
mov
mov
xchg
mov
jp
push
daa
and
sbb
adc
xchg
jle
add
xchg
mov
lret
inc
mov
fmull
adc
in
mov
scas
xchg
incl
scas
pop
sahf
sbb
sbb
arpl
inc
cmp
andl
sbb
cmp
jl
xchg
cwtl
jns
pop
mov
xchg
addr16
sbb
es
xor
clc
jae
lock
push
out
jb,pt
sub
fidivs
daa
cltd
stos
and
mov
push
inc
cld
jnp
iret
loopne
xchg
arpl
jno
aam
add
xchg
in
mov
push
in
sub
fidivrl
cltd
push
cmp
mov
xor
and
pop
sbb
les
int3
mov
imul
inc
aad
sub
cmp
ljmp
lret
std
mov
in
xchg
mov
push
push
insb
push
add
mov
xchg
xchg
pop
das
sti
inc
das
repnz
jg
adc
cmpsl
mov
data16
and
mov
arpl
or
std
or
ror
pop
testb
aam
jns
sub
push
cltd
aad
push
sub
sbb
mul
mov
fbstp
shll
out
sbb
xchg
inc
ljmp
dec
addb
negb
jge
mov
pop
stc
jecxz
pushf
inc
lret
mov
ja
lods
or
in
mov
insl
shlb
mov
rclw
and
or
outsl
in
mov
cmp
push
incl
arpl
test
scas
inc
clc
jns
in
daa
int3
pop
loopne
addr16
pop
sbb
les
outsb
ret
scas
dec
jecxz
fisubrl
dec
jp
call
dec
mov
sub
jo
mov
test
add
and
fildl
pop
xor
sbb
pusha
enter
cmpl
test
pop
mov
adc
or
and
dec
cmovp
in
mov
or
jae
jns
adcl
lods
nop
call
insl
inc
dec
mov
cmpsl
cmpsl
lcall
cli
and
cmpsl
jnp
mov
das
cmp
adc
gs
pop
test
pcmpgtd
popa
ret
ss
xchg
lods
cmp
inc
xchg
add
jbe
popa
insl
cmp
mov
inc
mov
cld
loope
js
sbb
mov
cltd
push
xchg
dec
bnd
hlt
mov
rclb
mov
dec
add
in
or
mov
test
test
fnstsw
add
jo
ficoml
lret
mov
rcl
dec
pop
in
jecxz
push
aad
pop
add
pusha
or
sbb
xor
push
dec
and
mov
in
inc
mov
cltd
enter
or
nop
daa
das
push
insb
jle
frstor
jb
test
inc
cld
roll
pop
cs
loopne
lea
ja
out
jo
mov
xchg
jno
les
fs
bound
xor
cmp
cmp
cvttps2pi
pcmpeqd
stos
dec
adc
or
jno
rolb
and
inc
imul
xchg
mov
adc
imul
mov
inc
out
lret
repz
adcl
cmp
mov
adc
add
loopne
imul
ljmp
xor
add
mov
xor
stos
mov
mov
je
aad
jecxz
push
dec
pop
sbb
push
fadds
mov
lahf
movsb
pop
lea
mov
adcb
pop
jle
rcll
fsubp
scas
fsubr
orl
mov
sbb
test
inc
push
out
ja
out
sbb
pop
inc
movsb
dec
shll
aam
jecxz
inc
push
mov
jecxz
repnz
xchg
sahf
in
sahf
push
mov
loop
pop
push
test
test
movsb
cmc
mov
test
scas
inc
stc
popf
add
xor
xor
loop
mov
lea
xor
pop
bound
mov
leave
inc
adc
scas
daa
gs
xchg
pop
lock
mov
dec
or
xor
mov
hlt
sub
stc
cltd
jno
lods
jmp
cmc
jns
jbe,pt
movsb
jl
or
shl
sbb
insb
dec
movsb
push
mov
call
cld
xor
fld
inc
mov
mov
test
pop
xorl
mov
inc
js
inc
pop
jge
jge
adc
or
popf
cwtl
sub
aad
lock
inc
jmp
outsb
loope
test
jecxz
sbb
jecxz
mov
rolb
push
jb
shll
push
pusha
popf
push
out
dec
or
aaa
ss
mov
dec
movsb
cmp
insl
mov
inc
cld
xor
sub
inc
dec
pop
jne
sub
fbstp
and
imul
cmpsl
sarb
or
dec
pop
out
cmp
shlb
pop
fisttps
and
mov
fcomip
dec
std
mov
dec
fiaddl
scas
xchg
sub
adc
mov
add
leave
popf
hlt
lea
mov
cmpsb
cmp
jmp
push
adc
push
js
sbb
add
or
push
ss
mov
or
je
daa
lret
lock
mov
add
sbb
fiadds
in
rcl
or
cltd
inc
xlat
inc
pop
aad
les
lock
rep
add
add
stos
dec
xorb
lods
xchg
or
dec
push
ja
addr16
ficoms
or
mov
aaa
inc
ss
sub
mov
aam
jne,pt
in
cltd
pushf
scas
lret
push
dec
std
pop
xor
cmpb
mov
mov
mov
jo
aaa
pop
sbb
dec
fstp
jae
loop
and
cmp
sub
inc
dec
test
cmp
push
jmp
mov
inc
lods
scas
adcl
sub
xchg
lcall
icebp
insb
mov
sbb
ljmp
jae
inc
in
jmp
fucomi
xchg
insb
cltd
mov
iret
and
xor
jo
and
popf
stc
je
mov
fdiv
sbb
adc
adc
mov
mov
daa
les
fmuls
or
lret
mov
lea
add
adc
lock
fwait
rolb
xlat
scas
pcmpgtd
dec
pop
popa
bound
mov
adc
loope
dec
inc
push
aas
das
imul
cwtl
xchg
jle
push
imul
dec
fistpll
mov
lods
cld
pop
pop
pop
push
jmp
cmp
mov
xchg
add
out
scas
les
inc
adc
out
inc
test
or
gs
xchg
mov
in
int
mov
in
subl
arpl
dec
icebp
pop
repnz
in
jg
xchg
pop
jmp
inc
pop
lods
in
cmpsl
mov
inc
cmp
int3
or
push
outsl
pusha
sub
push
dec
gs
mov
imul
or
hlt
insb
stos
ret
push
cmp
lock
fnsave
shll
mov
push
aad
dec
insl
js
jg
inc
and
xor
xor
xchg
gs
int3
data16
nop
push
mov
jle
pop
movl
addb
imulb
push
outsl
repz
bound
jb
mov
scas
loopne
adc
enter
call
jl
lock
cltd
cmp
lret
add
in
sbb
addl
imul
orl
movsl
leave
pop
cltd
jnp
fwait
sub
in
lods
push
xchg
xor
sub
mov
mov
push
shrl
jae
pop
aam
cmpsb
out
repz
adc
dec
testl
lahf
addr16
mov
xchg
jno
sar
fwait
shll
sarl
jno
jecxz
push
outsl
sbb
mull
int
sbb
lods
cmc
adc
or
dec
rcl
mov
jb
loop
mov
addr16
fisubs
scas
out
add
lahf
daa
jmp
cli
pushf
cmpsb
fldt
test
push
jmp
ljmp
fldl
movsb
xchg
ds
mov
and
lds
push
push
fldenv
jl
xorl
jle
adc
lds
ret
or
mulb
cmc
cld
mov
inc
dec
mov
push
cltd
es
xor
xor
into
or
es
push
mov
dec
or
sub
push
mov
cmp
lahf
jmp
push
shrb
popf
push
scas
pop
lock
cmc
negl
stos
test
imul
sbb
dec
pop
out
pusha
repnz
mull
sbb
cs
adc
jp
jbe
inc
mov
sarl
pop
bound
pop
sub
pop
nop
pop
mov
mov
add
and
or
xchg
mov
inc
xor
xchg
push
icebp
mov
lock
push
push
cld
pop
jle
loopne
inc
jnp
add
jae
and
ja
or
sbb
sub
ret
mov
jo
jo
icebp
inc
inc
inc
dec
xlat
mov
fdivrs
or
xchg
iret
adc
xlat
mov
or
in
movsl
sub
inc
in
cmp
xchg
imul
test
test
sbb
jmp
mov
mov
mov
rcrb
outsl
jb
pavgb
popa
fnsave
lret
rorb
push
jmp
pop
jp
or
adcb
jns
and
scas
js
inc
stos
adc
arpl
sbb
jge
pop
iret
loope
std
daa
mov
inc
test
js
outsb
sbb
cmp
insl
out
xchg
jne
add
loope
xchg
cmp
add
mov
fcmovnbe
xchg
add
ljmp
neg
jno
push
adc
sahf
pop
insl
lret
sbb
cmc
and
and
pop
imul
fcmovb
stc
mov
imul
push
stos
notb
sub
test
or
ret
xor
pop
stos
inc
cmp
jb
pop
enter
loop
ja
dec
movsl
ss
xchg
mov
push
add
stos
push
xchg
or
push
jns
leave
push
add
cwtl
mov
data16
pop
sahf
mov
leave
int
pop
and
dec
je
inc
flds
mov
cmp
lds
pop
lret
sbb
repnz
xchg
adc
mov
jecxz
dec
aad
aad
lret
push
movsb
inc
popa
cmp
scas
imul
pop
fsub
dec
mov
add
dec
pop
int
mov
xor
add
into
pop
inc
push
xor
xchg
sub
dec
enter
xor
or
add
xor
mov
jns
cmp
mov
out
repnz
icebp
mov
add
js
shrl
cmp
xchg
cs
cmp
clc
in
mov
push
aam
xchg
pop
aam
sub
push
dec
fnsave
ss
push
loopne
push
push
adc
mov
jmp
rolb
ret
pop
in
mov
fnstenv
loope
inc
xchg
loopne
out
jp
pop
or
pop
cmp
leave
sub
adcb
clc
ds
and
lds
test
aad
adc
cmp
xchg
fisubrs
push
cmpb
lods
test
cld
jp
sub
and
xchg
lods
cmp
mov
xor
int3
dec
ficomps
icebp
outsl
push
mov
repz
pop
icebp
or
lods
jbe
sub
lods
add
pop
cmp
jp
shll
addr16
in
mov
cmpsl
cmp
or
cmpsb
mov
adc
pop
ret
hlt
jg
push
std
sub
bound
xchg
add
or
cmp
outsb
or
aas
ljmp
stos
pop
popf
xor
mov
aad
xor
lret
dec
mov
out
imul
fdivrs
lds
cltd
push
mov
dec
fstp
shrl
cli
mov
test
imul
pusha
enter
jl
loopew
and
int
lret
xchg
fidivrl
fstpl
sub
enter
adc
ret
inc
inc
push
shl
jnp
das
test
sbbb
xchg
cmpsb
mov
adc
jb
jecxz
inc
mov
lds
mov
imul
mov
mov
pushl
cwtl
testl
test
sarl
ficoms
cmp
sub
aaa
mov
cmp
jno,pn
hlt
jnp
push
inc
call
shll
add
add
add
add
dec
shll
mov
mov
xchg
into
das
jnp
pop
cmp
mov
scas
pop
bnd
jmp
popl
cli
cmp
jmp
in
lcall
shrl
je
and
movsb
test
out
icebp
fsubr
shll
pop
xor
xor
js
dec
rep
das
aaa
mov
imul
pop
xor
jo
and
mov
test
subl
adc
or
out
rclb
mov
dec
sti
mov
jge
pause
xor
leave
and
and
xchg
hlt
xchg
add
rclb
mov
je
mov
and
push
popf
add
popf
xchg
and
dec
and
ljmp
je
scas
and
outsl
dec
cld
mov
ret
add
cmp
std
mov
and
xor
push
mov
outsl
adc
jmp
dec
std
outsl
add
cwtl
hlt
mov
aas
push
out
fucom
cmp
pop
sbb
jb
jl
adc
lock
sbb
sti
test
mov
sbb
paddusw
mov
mov
pop
xor
pop
mov
add
mov
ret
jnp
lods
lea
sbb
lock
inc
cmp
and
xchg
insb
and
ljmp
cmc
or
leave
add
adc
push
in
sub
pop
lret
roll
ja
js
cmp
and
cmp
mov
pop
sbb
add
inc
cmp
js
aas
ljmp
sub
cmp
cmp
test
inc
inc
add
push
or
movsl
cltd
sub
in
insl
push
mov
movsl
daa
mov
mov
testb
xor
daa
mov
out
loope
lods
rclb
arpl
aam
sbbl
cmp
mov
mov
aaa
jne
cmp
xchg
loop
inc
adc
adcl
filds
xor
push
mov
rcl
push
pop
out
sti
sbb
mov
ret
test
rorb
fpatan
and
divl
sub
aam
push
inc
push
lret
adc
or
loop
jae
mov
in
addr16
or
xor
enter
or
add
push
jo
and
xlat
sub
or
aaa
pop
icebp
in
gs
test
add
adc
aas
sarl
xor
push
stc
das
inc
movsb
leave
dec
loope
sbb
jae
fldt
xor
mov
mov
lea
repnz
mov
lods
inc
jae
xchg
mov
shr
mov
and
cmp
jb
adc
dec
in
xor
cmc
mov
loop
push
sub
push
or
ret
xor
hlt
in
fidivrs
jbe
iret
int3
ffreep
dec
push
faddl
fsubr
inc
std
adc
sub
jp
mov
pushf
inc
stos
fcomps
ljmp
pop
jmp
lods
mov
and
testl
dec
mov
push
loope
lds
test
loope
js
rolb
ret
pop
fwait
jbe
sub
mov
xchg
inc
scas
call
and
or
pop
ficoms
xor
dec
sti
pop
jmp
add
es
sbbb
sbb
adc
leave
inc
sti
pop
push
shrb
xchg
add
inc
sub
xor
dec
int
jge
loop
lods
movsl
outsb
cli
lea
iret
add
shrl
sub
fldcw
repz
fcomi
sbb
cs
shll
adc
ret
adc
sti
pusha
fs
testb
sub
pop
push
call
ret
mov
xor
mov
lods
adc
dec
mov
mov
and
test
scas
ss
mov
fwait
dec
mov
inc
in
lahf
sub
mov
inc
or
insb
xchg
fcomi
mov
pushf
cmpsl
das
inc
fnstcw
inc
fsubs
ret
pop
inc
sub
sahf
dec
lret
lret
out
push
ret
testb
mov
rcrl
push
ret
push
jo
mov
inc
jns
lods
and
pop
pusha
negb
mov
rol
fxch
push
cli
or
pusha
mov
je
call
roll
push
inc
push
jl
and
inc
jge
cli
jae
es
mov
cmc
outsb
or
jnp
add
daa
cwtl
mov
sbb
call
or
stc
ficoms
push
and
stos
stc
or
pop
mov
jbe
imull
pop
cli
or
outsb
jl
add
sub
xchg
sub
ret
adc
sub
mov
mov
push
in
push
arpl
lods
ja
cmp
xchg
pop
push
scas
test
sub
and
pop
scas
das
and
in
pusha
jae
lea
adc
mov
bound
mov
bound
jl
inc
mov
or
roll
shll
shll
test
adc
cmp
data16
xlat
jp
or
add
cltd
dec
xchg
divb
jge
arpl
jl
out
push
mov
adc
mov
mov
aad
adc
adc
and
rorl
pop
push
add
jg
adc
test
inc
pop
xor
mov
mov
iret
and
addb
mov
sub
enter
mov
fstl
std
xchg
mov
ret
sbb
popf
imul
pop
dec
xchg
add
lds
clc
outsl
jp
sub
pop
sub
add
sub
ds
lods
sbbb
cmc
mov
scas
cwtl
push
or
adc
add
stos
mov
mov
jg
pop
inc
pop
and
popf
dec
jne
pop
sbbl
decb
mov
jo
lret
mov
jle
cmc
pop
pop
fbstp
sub
mov
cmp
loope
sbb
adc
addb
lock
fs
xchg
repnz
xlat
ds
clc
fmuls
sti
mov
iret
cmp
push
popf
and
mov
dec
add
bound
push
mov
sbb
shr
cmp
inc
push
cmp
cmp
push
push
aam
ljmp
jno
push
cld
loope
xchg
ret
jge
rorb
dec
loope
enter
push
movsl
cmp
repz
xor
pushf
dec
xchg
in
mov
movsb
mov
fwait
jnp
and
fsubl
push
repnz
push
xor
adc
lea
pushf
cli
pusha
sub
movsl
gs
fwait
xor
imul
pop
add
je
daa
adc
loope
and
add
adc
xchg
outsb
out
push
out
fstpl
repz
in
xchg
cmp
or
jns
xchg
sub
movsb
add
mov
push
js
adc
push
jns
pushf
stc
in
imul
pop
xchg
mov
js
push
sahf
pop
push
mov
filds
mov
add
sahf
popf
dec
jecxz
dec
mov
mov
xchg
pop
push
movsl
in
cmp
sub
clc
cwtl
xor
std
xor
addb
or
popf
mov
test
lods
mov
dec
sbb
dec
imul
insl
mov
mov
lds
push
mov
xchg
mov
call
and
mov
data16
xor
imul
lret
scas
dec
cli
pushf
dec
pop
aaa
test
mov
adc
clc
or
andb
inc
fs
push
in
jne
into
adc
mov
arpl
div
push
fcoms
jmp
push
push
cmp
iret
mov
mov
popa
scas
jbe
repz
js
push
aaa
mov
push
and
out
dec
mov
dec
test
add
xchg
inc
mov
inc
mov
jmp
xlat
js
xchg
dec
je
inc
pop
mov
push
dec
jbe
dec
mov
or
insb
out
scas
push
out
jbe
popa
mov
popf
imul
clc
rcl
stos
sbb
pusha
fbstp
test
outsb
jno
data16
dec
add
mov
aas
and
lds
pop
inc
sbb
xchg
loopne
out
or
fdivr
popf
or
dec
mov
jnp
data16
loop
xlat
jns
dec
mov
add
pop
ja
out
scas
cmp
ja
lods
into
call
xchg
popa
fnsave
sbb
push
add
fwait
sub
loopne
or
fbld
vmread
movsl
sub
and
sahf
das
inc
pop
std
push
lods
push
sub
mov
mov
mov
sub
adc
inc
mov
pop
mov
jecxz
and
pop
xchg
shrb
push
xchg
mov
das
push
xchg
pop
xlat
push
cmp
dec
stos
cli
dec
out
dec
movsb
mov
nop
pop
and
dec
into
pop
icebp
pusha
scas
or
and
jns
xchg
and
mov
lret
ja
sahf
pop
rcrb
arpl
xchg
arpl
sub
sbb
cmp
inc
mov
bound
inc
les
and
pop
sbb
mov
fcompl
jo
std
cmpsb
cli
xchg
mov
aam
insb
push
out
popf
sahf
ja
inc
mov
pop
inc
arpl
jl
mov
mov
ffreep
mov
cmp
movsb
sbbl
aad
ja
pop
cmp
pop
xchg
push
insl
dec
or
mov
pop
cld
rorl
jae
subb
repnz
cmp
mov
int
or
sbb
lret
sbb
inc
fnstcw
xor
cmpsb
cmp
andl
shlb
fists
xchg
sbbb
cld
outsl
jb
push
mov
mov
xchg
repnz
shr
mov
out
sub
shrb
jp
jb
subl
pusha
dec
pop
adc
or
mov
fisttps
cmpsb
push
dec
hlt
shll
inc
arpl
xor
fnstsw
jns
int
and
int
jne
in
jmp
cld
js
stc
ja
mov
lret
sub
lods
add
jl
fcompl
fstpt
xchg
lret
lret
fwait
push
jo
bound
sub
fisttpl
movsl
int3
push
mov
push
movsb
ja
out
fwait
and
lret
xchg
in
adc
cmpsb
pop
ljmp
mov
xchg
daa
cmc
dec
jecxz
sbb
mov
dec
jbe
pushw
idivb
xorl
flds
enter
sub
xchg
cld
xchg
or
mov
sub
pusha
fildl
push
in
dec
xor
mov
push
jge
repnz
nop
shlb
pushf
xor
jo
xor
xor
shll
cmpsl
cmp
shrl
hlt
xor
in
pop
sahf
xor
mov
insb
inc
fistpl
adc
mov
popa
rcll
jbe
sub
lcall
movsb
push
sbb
xor
jg
outsb
jno
loop
aam
lahf
ss
dec
cmpsl
ds
pop
out
jmp
sbbl
inc
scas
dec
loopne
lret
jns
lock
xor
inc
cs
repz
adc
hlt
push
and
popf
mov
mov
pop
inc
in
xchg
add
lods
popf
or
std
ljmp
xchg
and
shll
sahf
or
dec
lret
cmp
mov
shrl
stos
jl
mov
jo
scas
mov
bound
jne
jl
jns
push
pushf
xlat
dec
adc
fdivl
mov
test
add
gs
sub
sub
dec
lods
cmpb
lock
or
cmp
mov
gs
test
jmp
mov
or
sarl
mov
sub
xchg
sub
repnz
dec
jmp
xchg
fwait
lret
call
or
xor
xchg
sub
rclb
dec
loop
add
subl
loope
sbb
ror
fs
sarb
repz
xchg
rcrb
shll
shlb
mov
jno
in
test
lods
shrb
pop
adc
jbe
or
ret
iret
push
pop
adc
jbe
mov
scas
fsubrs
popa
repnz
sbbb
lret
scas
inc
mov
sbb
adc
cmp
fidivs
adc
out
test
add
in
ljmp
scas
mov
xchg
sub
push
lods
xor
jns
mov
ljmp
inc
xchg
dec
push
push
fsubs
xchg
dec
fmuls
jl
je
out
bound
arpl
pop
and
sub
xchg
xor
movb
insl
pop
jmp
insl
jmp
and
mov
and
lea
imul
iret
jne
ljmp
imul
mov
dec
add
xlat
imull
mov
xlat
aaa
jmp
inc
test
lret
sub
loope
fcomps
jbe
mov
sbb
out
inc
mov
shlb
rcrl
push
xor
pop
inc
sub
xor
xchg
mov
enter
mov
dec
aas
dec
jge
inc
xor
mov
mov
jo
fmul
mov
push
in
call
or
cli
data16
popl
mov
repnz
ljmp
lea
fists
je
jbe
seta
push
testb
xchg
jp
xor
pushf
jge
sbb
mov
call
pop
out
popa
paddb
sub
or
jb
insb
xlat
mov
adc
scas
xor
jmp
push
mov
cli
push
push
imul
shr
jge
mov
out
mov
jns
xorl
sbb
mov
shl
jmp
cwtl
xor
stos
lds
inc
fiaddl
push
cmp
rcrb
lds
sub
int3
arpl
imul
fidivl
les
and
notb
js
cs
cwtl
jo
mov
xor
inc
mov
jg
loop
inc
fwait
push
nop
notl
call
or
sbb
cmp
ja
mov
sbb
jne
inc
cmpsl
inc
in
jo
lahf
ss
ljmp
idiv
fdivrl
sub
xor
pop
xor
loopne
or
xlat
outsb
push
mov
into
mov
lret
inc
cltd
or
out
inc
fsubs
sub
jb
in
pop
jp
cmp
insl
pusha
in
xchg
cmc
dec
mov
enter
mov
mov
imul
scas
es
fidivrs
sub
cwtl
ja
mov
mov
movsl
xlat
fiaddl
stos
insl
jnp
and
scas
inc
adc
ss
fs
cwtl
cli
mov
jb
shlb
mov
cmp
nop
ret
push
stos
mov
in
out
test
test
xor
jae
test
pop
stos
test
or
sub
jae
and
sbb
scas
mov
fdivr
xchg
or
in
das
or
dec
jecxz
mov
sahf
hlt
icebp
adc
out
mov
in
aam
push
push
aam
push
ret
add
push
pop
mov
cmpsb
std
xor
mov
stos
jbe
or
cs
pusha
cmp
xchg
jmp
sub
xor
or
push
or
test
aas
cmp
fidivs
pop
jns
cmp
lret
shlb
and
push
inc
mov
push
cmp
fdivp
shll
jl
or
jmp
sub
andb
stos
mov
dec
loope
dec
inc
adc
push
call
mov
mov
adc
add
nop
dec
adc
popa
clc
test
call
xor
adc
push
jne
pop
lods
divb
and
add
mov
test
int
out
pop
xchg
insb
adc
sbb
mov
out
movsl
pop
ds
sub
pop
adc
pop
mov
or
pop
push
cmp
dec
xorl
lods
hlt
rorl
mov
cltd
je
push
xlat
xor
daa
lock
popf
xor
jb
cmp
xor
scas
sbb
les
mov
dec
in
jae
leave
jo
xor
jne
dec
jl
mov
shll
adc
cmp
test
dec
imul
call
mov
inc
ss
inc
sti
lods
negb
daa
sti
outsl
mov
and
adc
xor
or
lea
add
fisubrl
push
in
mov
mov
out
scas
cmpb
les
stc
jmp
xchg
scas
mov
aaa
dec
in
shrl
out
pop
jo
movsl
dec
repnz
cwtl
out
nopl
adc
push
jb
jg
mov
int
jecxz
push
in
sub
gs
cmp
xchg
jne
jecxz
or
stc
mov
int
push
cld
mov
mov
sahf
fwait
xor
jne
in
mov
flds
div
mov
scas
adc
or
das
xor
sti
cmp
aam
or
sbb
push
mov
add
loop
in
out
lods
pop
fmull
les
ret
sbb
pop
insl
orb
fcompl
jl
mov
fwait
mov
xchg
adc
popf
or
xor
and
out
in
loopne
cmp
imul
or
jo
mov
cld
jnp
xchg
sub
push
add
sub
jae
lds
pop
les
adc
divb
andb
push
popf
cmpsl
mov
mov
repz
insl
imul
hlt
dec
loopne
jb
test
push
sub
arpl
xchg
jbe
insb
sbb
cmc
notb
push
dec
cli
test
pop
std
and
dec
mov
mov
insb
inc
xchg
inc
cwtl
cmp
jnp
or
aaa
iret
mov
out
shrl
mov
je
bound
sbb
jg
data16
iret
xchg
outsl
push
ja
insb
sbb
sub
stc
inc
or
inc
adc
sbb
push
test
xor
sbb
cmp
aas
call
insl
pushf
jbe
pop
cmp
mov
dec
loopne
mov
add
repz
call
dec
repz
bnd
icebp
movsl
cmp
fidivl
gs
enter
xchg
add
cmp
psraw
adc
test
sub
push
icebp
cmp
sub
push
cmp
dec
loop
cmp
pop
xor
imul
int
aam
adc
mov
or
loopne
xchg
push
lret
jle
insl
pop
mov
adc
out
stos
jno
inc
sub
std
and
inc
pop
out
hlt
pop
xor
xchg
cmpsl
leave
nop
daa
scas
movsb
xchg
scas
popa
es
push
testb
outsl
dec
ret
adc
aas
movsl
cmp
jae
or
push
mov
shll
ljmp
dec
orl
sahf
ds
jo
xchg
push
call
call
push
and
cmp
imul
jne
mov
or
rorb
dec
loope
mov
inc
arpl
fcmove
mov
arpl
inc
mov
push
sub
cmp
lret
mov
lods
arpl
rcll
adc
js
orl
iret
lea
mov
in
test
fmull
mov
push
repnz
sbb
mov
movsl
xor
inc
test
jmp
popf
inc
int
cmp
mov
in
ljmp
or
cli
rcrb
or
les
test
sbb
jmp
mov
aaa
pop
leave
in
aas
or
test
gs
xchg
sub
jnp
mov
andb
jns
mov
lcall
ds
das
mov
insl
or
int
out
mov
xor
pop
insl
test
push
in
cmp
jo
mov
mov
jle
dec
xor
adc
addr16
push
push
mov
pop
mov
mov
imul
add
daa
adc
ja
dec
or
je
or
or
push
aaa
xchg
das
ja
dec
rcrl
xor
fisubl
dec
dec
int
stos
imul
sbb
jnp
xchg
rcll
fs
xchg
call
add
jp
scas
insl
mov
pusha
int
repnz
xor
mov
lods
inc
sbb
int3
mov
mov
push
into
cmpsl
cmp
xor
jp
mov
ret
enter
xor
iret
ss
pop
mov
xor
sbb
pop
inc
idivb
dec
inc
out
xchg
sub
mov
pop
dec
outsb
ljmp
sub
or
lds
in
in
lret
in
sub
icebp
mov
push
aaa
into
inc
mov
lods
and
int
mov
pop
mov
dec
xchg
mov
cmpsl
inc
dec
test
xchg
push
pop
jge
call
jge
imul
lcall
xor
ja
inc
cmp
adc
adc
sbb
lcall
push
jb
inc
in
std
inc
sbb
lcall
mov
xchg
sbb
sbb
pop
shlb
pop
imul
and
jl
mov
adc
shlb
adc
negl
call
mov
pop
or
mov
and
push
sbb
or
mov
andb
mov
into
repz
and
out
mov
or
das
add
or
sbb
inc
fldt
shrl
xchg
lahf
mov
fcoml
shll
add
jg
push
jg
dec
push
add
mov
and
and
iret
jecxz
and
xchg
sub
mov
dec
pop
dec
enter
cld
or
fs
xchg
sbb
inc
and
adc
pop
addr16
rorb
adc
out
push
mov
dec
push
xor
jo
pushf
xchg
outsl
rorl
fsubl
pop
or
loope
dec
cmp
push
sub
mov
lret
stos
std
xor
and
sub
rorb
push
cmp
shll
xchg
jle
or
popa
or
inc
cmpsb
pushf
sub
jns
ss
push
push
es
ja
sub
dec
test
push
loope
cmp
incb
adc
add
dec
popf
jmp
outsb
adcb
mov
mov
sub
lret
jbe
push
pop
adc
pop
int3
mov
into
mov
jp
daa
jne
push
mov
jae
jo
ss
inc
inc
push
adc
pop
push
cli
fidivs
adc
fwait
sti
pop
xchg
sub
inc
jne
dec
mov
mov
pop
mov
cmpsl
adc
insb
and
popf
imulb
imul
mov
das
adc
cmc
jbe
ret
pop
push
fisubrl
and
shrb
mov
scas
inc
or
inc
les
or
popa
lds
xchg
test
enter
mov
mov
iret
rcll
jmp
cmp
aad
lcall
xor
js
adc
out
stc
int
add
mov
out
or
dec
dec
mov
aam
repz
sub
sub
mov
dec
fildl
shlb
movsl
lods
leave
mov
int
jge
jb
mov
inc
pop
push
inc
mov
inc
and
mov
gs
aaa
push
lahf
xor
inc
stos
scas
repnz
gs
nop
mov
ret
out
sbb
outsb
add
cwtl
adc
pop
pop
and
jbe
lods
cmpsl
in
lods
adc
mov
lea
xchg
scas
mov
in
mov
jne
push
call
push
insl
mov
addr16
cmp
cltd
jo
ficoml
mov
rcr
jo
cmp
mov
jmp
xor
mov
mov
mov
cmp
outsb
push
cmp
int
pop
add
add
pop
pop
mov
or
bound
sub
loope
xchg
fisubs
lret
inc
sub
insl
pop
mov
or
mov
jge
dec
sub
add
add
sbbb
ja
sub
sbb
sbb
fistl
scas
xor
fwait
push
and
mov
test
jno
ret
mov
loop
or
dec
xor
and
inc
insl
mov
into
lcall
adc
gs
cmc
jb
loop
fwait
cmpsl
int3
enter
jbe
ljmp
test
sahf
sub
test
lcall
or
and
test
add
divb
push
sbb
sub
enter
out
jae
stos
cmpsl
mov
pushf
mov
sahf
jne
jnp
ja
les
cmpsl
jnp
pop
jo
and
nop
cli
or
fsubrl
and
jl
xchg
scas
xor
add
imul
test
fisubs
pop
cmp
sarl
cmpl
add
call
pop
aas
scas
dec
popf
fdivs
stos
mov
xchg
int
adc
inc
mov
lea
aam
fs
pop
icebp
mov
inc
popf
lock
out
into
pop
int3
xlat
sti
xchg
aad
pusha
aas
out
cmp
mov
movsl
testb
cmp
test
xor
idivl
rcrl
adc
inc
call
dec
out
cmp
scas
sbb
popw
xor
mov
aam
push
fs
jg
mov
std
ret
add
dec
mov
adc
in
push
pop
pop
dec
sub
in
push
loop
mov
xor
and
inc
pusha
jge
mov
mov
push
rcl
sub
jle
cs
pop
popa
push
add
xchg
jne
sbb
ja
jbe
jl
sbb
loop
out
lods
mov
or
hlt
push
add
pop
shlb
stos
es
or
ficompl
mov
fs
outsl
outsb
or
pop
or
pop
jno
and
push
push
sahf
xchg
jmp
jmp
lock
or
push
and
ds
xor
dec
cld
inc
repz
lahf
mov
xor
pop
cmp
inc
xor
pop
sub
inc
lds
fs
push
add
movsl
jle
push
inc
cmp
ret
outsl
xor
and
scas
fisttpll
inc
mov
sub
or
pop
jecxz
jl
pop
sub
cwtl
ds
xlat
out
and
lcall
sub
sbb
adc
daa
call
fsubs
stos
in
inc
out
daa
adc
enter
jg
leave
fcmovnu
pusha
cmc
cmp
adc
ret
xor
jl
repz
and
mov
das
scas
jb
andl
into
mov
sti
call
daa
jg
pop
fs
xchg
shlb
ja
mov
daa
jg
scas
add
sub
clc
push
aad
add
movsb
das
lahf
andl
ret
shlb
inc
pop
cmpsl
pop
out
dec
ds
or
out
fldenv
icebp
cwtl
push
sahf
decb
leave
cmpsb
scas
pushf
scas
jne
rcrl
cmpsl
imul
cmc
mov
hlt
mov
cmp
popa
out
int
mov
js
push
fimull
or
icebp
dec
das
nop
add
pop
lds
in
idivb
jne
shr
xchg
sti
aam
push
sbb
nop
jmp
or
scas
divl
mov
popa
bound
fmuls
aad
fwait
ret
sub
cmp
add
push
push
add
add
pop
dec
jecxz
orl
or
fcompl
sub
cmp
fwait
scas
sbb
fldenv
sub
jns
sbb
push
lods
cmp
in
lods
dec
adc
outsb
jnp
mov
cli
das
outsb
repz
pop
mov
pop
loopne
lahf
sbb
mov
hlt
dec
sub
cmp
addr16
add
push
and
xchg
mov
movsl
notb
jmp
rcrb
pushf
dec
fisubs
stos
outsb
mov
and
scas
inc
stos
sub
iret
fcmovnu
inc
scas
sub
add
cmpsl
ret
adc
inc
xchg
push
dec
rcr
out
ret
xchg
jae
jmp
mov
call
xor
mov
lea
js
pop
ret
jg
pusha
xchg
adc
add
arpl
mov
test
sbb
test
aas
loop
iret
dec
and
pop
out
push
add
sbb
aad
scas
lods
daa
icebp
outsb
adcb
cwtl
cmp
add
cltd
ss
std
ljmp
movsl
cmpsb
outsb
adc
bnd
inc
popa
push
movsl
test
sahf
lods
lock
sbb
cmp
push
js
fs
push
out
test
mov
jl
ds
cmp
jne
mov
in
ss
xor
into
mov
pop
sbb
dec
jge
aad
cmp
insl
ljmp
mov
fimuls
fwait
movups
js
arpl
sub
aam
jle
test
sbbb
fdivs
add
adc
pop
pop
sub
jo
add
jae
mov
into
clc
loop
imul
sbbb
inc
sti
sbb
fcomp
dec
cmc
mov
stc
or
stc
stos
sbb
lea
pop
jno
fnsave
and
add
outsb
jp
dec
popa
jb
rol
inc
pusha
sar
stos
lds
fsubrl
jmp
movsb
shll
fwait
lret
in
les
inc
or
xor
jp
pop
loope
arpl
js
icebp
mov
out
mov
pop
push
or
or
sbb
divb
push
push
hlt
mov
rcl
roll
dec
fiadds
mov
jnp
imull
faddl
sub
into
or
gs
movsl
ret
inc
jo
je
cmpsb
ja
inc
test
or
movsl
cltd
pop
push
mov
push
loop
inc
mov
xchg
in
test
sbb
or
stos
jge
xchg
out
in
cmc
xor
pop
mov
adc
lds
adc
cmp
in
sub
adc
sbb
pop
dec
xchg
repnz
mov
movsb
out
pop
fdivr
or
pop
mov
sarb
pop
sub
sub
add
adc
push
pushf
test
mov
data16
int
jb
loope
shr
push
mov
idivb
mov
mov
movsb
sbb
sbb
seto
xor
jmp
mov
loope
mov
addr16
cwtl
jge
and
mov
pushl
or
andb
out
push
pop
bnd
adc
dec
test
xchg
fisubrl
clc
lods
inc
lock
jne
mov
pop
lret
sub
outsb
cld
pop
lret
xchg
sarb
dec
arpl
mov
cmp
ljmpw
inc
enter
pop
adc
jae
pop
dec
lret
popa
cmp
push
daa
clc
or
ja
inc
fld
adc
popa
aaa
pop
cmpsl
add
pop
and
pop
mov
mov
call
shrl
push
nop
arpl
or
pop
lods
inc
dec
fistpll
arpl
scas
std
inc
call
push
jae
pcmpgtw
pop
xchg
imul
loope
jmp
pop
scas
pop
loop
lea
lret
aaa
pop
incb
mov
sbbb
pushf
dec
or
mov
push
push
pop
orb
and
aad
out
lock
sub
sarl
cmc
cmp
hlt
rcrl
xor
cmp
lcall
pop
cmp
movsl
call
cmp
test
ja
add
aaa
incl
adc
loope
iret
sbb
pop
jmp
sub
adc
ja
sarl
xchg
mov
fmul
adc
mov
mov
xor
mov
adc
cltd
icebp
pop
dec
jo
lea
das
sub
call
sub
ja
sar
xchg
out
es
sub
testb
in
mov
jae
popa
mov
sbb
mov
dec
out
repz
mov
aad
insb
stos
in
adcl
sub
xor
mov
xchg
ja
cld
popf
out
sbb
adc
jb
mov
push
xchg
add
fcmove
xchg
xor
mov
mov
and
data16
pop
sub
les
scas
daa
inc
cs
mov
sub
and
jle
add
into
sub
ficoml
mov
aas
xchg
jl
idivl
push
lock
popf
inc
out
xchg
call
or
loopne
jbe
mov
imul
fldenv
add
mov
mov
sbb
pop
jbe
les
out
jecxz
ljmp
in
or
xchg
shlb
jns
insb
inc
adc
dec
pop
sarb
push
mov
add
movsb
hlt
enter
lods
stc
cmp
sub
xchg
jns
cmp
mov
fisttpl
xchg
or
outsb
cs
ss
fcmovnb
loope
sarb
out
fistl
pop
xor
jmp
mov
insl
mov
shrb
sbb
popf
push
pop
adc
adc
inc
pusha
jno
xchg
lret
lret
pop
adc
es
fildll
sbb
mov
add
mov
lock
into
xlat
inc
mov
test
into
mov
pusha
pop
adc
and
jp
nop
daa
mov
loope
adc
subb
push
mov
pop
mov
rclb
das
pop
das
cmp
pop
and
fnstsw
pop
cmp
test
pop
repnz
lds
pop
xchg
mov
lahf
stc
mov
movsl
mov
sbb
and
outsb
xor
and
test
push
push
ja
popf
jb
das
push
and
mov
jae
xchg
xlat
addr16
cmp
sub
inc
and
pop
sahf
lcall
inc
adc
icebp
sbb
mov
pop
loop
pushf
and
pop
sbb
xchg
in
std
lds
loope
jo
add
pop
scas
adc
inc
jno
mov
adc
dec
fstl
sti
xor
out
xor
or
cmpl
inc
jb
je
push
icebp
int
imul
mov
mov
rcl
shr
mov
mov
out
sti
cmp
pop
jno
jbe
inc
xor
out
cli
xchg
mov
sbb
fs
leave
test
cwtl
das
jle
push
fstl
popl
fdivrl
fmull
push
sub
mov
lret
cmp
or
stc
xchg
insl
out
mov
xchg
imulb
cmpsl
les
cmp
divb
ja
js
rcll
mov
cmp
sub
jo
xorb
loopne
cli
movl
jae
pop
js
jno
outsb
jno
pop
pop
fsubr
mov
lret
inc
sbb
push
mov
hlt
orl
stos
test
jae,pt
mov
movsl
mov
movsb
outsb
cltd
fwait
test
stc
and
cmp
jge
adc
mov
jne
cmc
subb
data16
es
ljmp
xchg
sbb
je
sbb
out
das
gs
adc
inc
pop
fs
nop
pop
adc
loopne
stc
mov
rorl
pop
push
mov
fwait
and
xchg
xor
push
fstps
fbld
and
mov
mov
fldenv
cmp
lock
test
inc
sbb
pop
adc
pushf
jg
mov
pop
stos
mov
jae
push
shll
call
out
in
add
cs
push
lods
cmp
cmpsb
lcall
adc
cmp
inc
xchg
mov
xor
cmp
sbb
xchg
inc
ficoml
fadds
out
pop
mov
fsubs
mov
jle
divl
daa
sub
lahf
negb
sbb
ret
mov
pop
movl
push
or
xchg
or
and
mov
fisttps
add
in
dec
mov
rcrl
int3
xlat
jne
mov
fucomp
sbb
js
fnstcw
inc
lcall
cmp
rcrb
and
push
dec
fucomip
lea
push
arpl
imul
jb,pn
push
lar
mov
push
test
and
outsb
lahf
pop
icebp
imul
popf
pop
roll
test
sbb
mov
daa
pop
sub
dec
insl
add
mov
mov
je
shrl
scas
repnz
push
jge
sbb
add
xor
sub
jl
cs
push
or
outsb
xorb
shrb
or
jno
cltd
mov
imul
outsl
iret
lock
sbb
lret
addb
dec
movsb
push
mov
jbe
push
pop
cmp
sub
jge
clc
jg
jmp
popa
scas
jo
sbb
add
push
xor
test
clc
sbb
jp
rcrb
inc
inc
daa
mov
js
adc
jp
sub
testl
xor
pop
push
dec
movsb
movsb
pusha
test
aaa
jo
mov
in
inc
cld
lea
arpl
add
nop
cmpsb
push
mov
and
pop
mov
mov
add
popf
xlat
loop
sub
jecxz
cmpb
xchg
cs
sbbl
inc
out
sub
xchg
flds
outsl
cld
stc
nop
das
insl
push
rol
mov
push
jmp
scas
and
stc
imul
mov
subl
push
test
cmp
stos
inc
lcall
fistps
mov
inc
repnz
sbb
sub
loope
lcall
add
xchg
inc
inc
pop
push
pop
sahf
aas
lds
rcll
popf
lcall
jp
dec
les
daa
inc
stc
pop
cmp
cmp
jle
lods
pop
pop
icebp
arpl
ja
int
fbstp
xor
push
xchg
cld
mov
mov
ret
jmp
ja
cmp
mov
inc
push
jle
inc
pusha
sti
mov
pushf
aaa
xor
inc
pushf
cwtl
xor
adc
rcrl
dec
aam
mov
and
in
jecxz
sbb
pop
popf
xor
jp
imul
stos
je
out
mov
pushf
pop
std
fdivrp
sub
ja
clc
sbb
xchg
std
dec
add
sbb
ljmp
xchg
lret
mov
icebp
mov
outsl
cmp
mov
in
xor
cmp
lock
loop
mov
mov
fmuls
stos
and
aam
xchg
sub
sub
mov
cmp
push
out
mov
mov
fdivrs
inc
mov
jmp
scas
inc
les
mov
mov
mov
or
xchg
mov
ljmp
push
push
fwait
lds
in
rcrl
rorl
cmpsl
loopne
push
jb
adc
cmp
add
and
inc
fldenv
les
cmc
inc
ret
fidivl
shll
fidivs
gs
sub
movd
xor
andb
xchg
push
loope
jno
test
aad
xor
dec
cmp
xchg
sub
outsb
sub
sub
mov
movsl
mov
sub
jmp
jae
sbb
jne
pushf
popa
insb
mov
fistpll
and
cmpsl
movsl
outsl
clc
cmp
stos
inc
rcrb
jl
repz
adc
and
mov
data16
add
mov
enter
inc
std
jle
pop
and
mov
pop
lret
xchg
std
nop
dec
jp
andl
fnsave
push
mov
or
sbb
sbb
mov
mov
rorl
dec
test
mov
jge
imul
adc
pop
call
leave
dec
repz
test
mov
jbe
stos
mov
andb
adc
jecxz
and
jbe
mov
mov
addr16
and
push
jmp
push
mov
movsl
add
pop
movsl
imul
jmp
or
adc
and
js
push
mov
xor
inc
and
out
movsb
pop
mov
jnp,pt
cmp
xchg
jno
cmpsl
fsts
sub
je
fstpl
mov
dec
int
mov
call
iret
fwait
sbb
std
mov
imul
add
repnz
add
jle
jae
push
mov
xchg
adc
pop
or
rcrb
mov
add
inc
data16
imulb
xor
outsb
das
lods
lods
jbe
push
shl
mov
fnstsw
les
addr16
movlps
aam
mov
pop
mov
cmp
inc
lahf
sub
out
cld
xor
mov
dec
push
mov
fisubrs
or
dec
cltd
insb
adcb
pop
or
and
xchg
push
stos
movsb
push
and
mov
testb
dec
mov
mov
or
push
scas
fnstenv
push
or
mov
add
mov
mov
push
fcmovbe
pop
inc
mov
mov
jns
adc
pop
xchg
push
inc
push
clc
add
inc
notl
sub
jb
xchg
aaa
std
mov
scas
pop
push
pop
ss
xchg
push
call
outsb
outsl
sahf
icebp
sbb
mov
add
mov
pushf
jge
sahf
mov
fistl
jmp
icebp
movsl
inc
fistpl
inc
pcmpgtb
test
cli
icebp
enter
or
or
mov
call
stos
mov
and
push
adc
iret
sub
data16
dec
xorb
cmp
inc
and
mov
sub
add
js
fsubp
ret
ds
inc
out
cltd
data16
std
fucom
imul
xor
sbb
lock
lods
popa
and
outsl
scas
out
xor
push
nop
xchg
mov
jne
jecxz
jb
loope
dec
mov
pop
mov
jg
ret
jp
loop
dec
shr
orl
lods
or
add
je
pop
mov
mov
add
push
mov
lds
hlt
test
dec
or
jle
imul
jmp
sarl
mov
outsb
lds
jnp
jge
mov
ljmp
aam
jns
cmp
lock
and
js
outsb
push
xor
mov
cmpsl
loop
pop
jp
add
lahf
call
cmp
test
add
lahf
push
and
cmp
mov
imulb
sbb
repnz
scas
jp
sub
xchg
test
pop
insb
xchg
js
insb
inc
cmp
adc
mov
out
jno
jmp
xchg
push
movsl
out
out
lea
mov
push
push
in
jp
repz
cmp
leave
rol
lahf
stos
jmp
out
inc
out
cld
out
push
mov
stos
std
push
push
inc
stc
cmp
xchg
cli
lahf
jmp
xchg
push
push
push
fsubr
adc
inc
mov
cmp
iret
xchg
cmp
mov
or
das
movsb
jecxz
mov
xchg
dec
test
pop
mov
cmc
daa
aas
mov
cmp
jmp
shll
nop
imul
fbld
mov
rcll
js
imull
out
rcll
xor
xchg
dec
cwtl
and
pslld
jp,pn
mov
test
inc
dec
cmp
cs
test
pop
fcmove
dec
popl
out
mov
xchg
pop
aas
stos
shrb
mov
add
sti
test
dec
leave
int
inc
stos
in
inc
adc
xor
sbbb
ljmp
mov
push
fidivs
sub
ja
push
xchg
sbb
jle
pop
adc
sbb
jge
xchg
es
xchg
jl
test
add
lret
push
jnp
push
loop
imul
movsb
into
xchg
sbb
fiaddl
scas
ljmp
jbe
adc
aad
mov
mov
lds
lods
in
test
adc
in
push
sub
push
xchg
ret
loopne
cmpb
mov
pop
outsl
mov
sub
shlb
inc
or
jnp
fbstp
popl
xchg
push
lock
mov
dec
add
push
mov
scas
divb
xor
out
dec
mov
dec
and
repnz
ja
cltd
repz
daa
sub
es
mov
movl
push
fistps
ffree
popa
orl
stos
clc
sahf
lock
lods
mov
xlat
mov
pop
aam
mov
inc
notl
add
and
testb
cmp
pop
jae
inc
sbb
divl
inc
ret
lahf
test
movsb
jnp
jmp
adc
push
or
adc
stos
sbb
fs
sub
push
inc
mov
xchg
inc
sbb
mov
aad
call
popf
or
inc
sbb
ja
sub
xchg
push
mov
add
ljmp
je
inc
mov
xchg
out
xor
test
jg
out
roll
out
jecxz
cmp
sahf
pop
push
mov
jmp
lahf
sub
push
push
xor
or
adc
inc
sub
mov
add
int3
sub
in
leave
cwtl
mov
test
cltd
outsl
push
out
and
push
cltd
ss
fisttpl
outsb
cmpl
and
mov
mov
xchg
or
push
add
cmp
test
xchg
sub
xchg
fistpl
pop
add
aaa
mov
gs
xor
ret
cld
bnd
sti
add
test
inc
push
out
pop
scas
mov
cmc
jne
fisttps
and
mov
jns
mov
in
test
std
pushf
cli
test
into
push
xor
xchg
mov
inc
xchg
push
scas
bound
push
xchg
aam
jge
jbe
or
sahf
xor
out
dec
mov
aas
cltd
test
xchg
sub
pop
outsb
inc
rorl
fcmovb
rorl
out
cmpsl
fs
mov
jo
clc
bound
cmp
mov
inc
dec
lods
jne
sub
pop
clc
cmpsl
je
lods
inc
sub
sar
jmp
cwtl
in
int
or
mov
sbb
aam
insl
push
sti
mov
inc
mov
cmpsl
lret
jle
sbb
xchg
les
mov
ja
sti
lret
push
stos
test
je
enter
mov
xor
sub
dec
pop
in
out
pop
fisttpl
cmc
dec
daa
inc
lods
cmpsl
movb
push
dec
movsl
cmp
aas
rol
stc
pop
pop
jne
xchg
ret
mov
outsl
mov
sub
lcall
or
data16
pop
mov
xchg
pop
push
les
ja
mov
shlb
lods
cmp
jne
xchg
lret
mov
cli
cld
xchg
jbe
std
mov
jmp
jbe
xchg
mov
add
push
inc
mov
sub
and
out
jno
outsl
out
mov
dec
xchg
leave
inc
mov
cmp
outsl
sbb
jecxz
push
mov
cmp
add
inc
arpl
lret
sarl
mov
insb
cld
pop
xchg
mov
test
lea
cwtl
xlat
ja
mov
idivl
sbb
xor
add
lcall
imul
and
test
dec
dec
test
mov
ret
jbe
in
insb
test
cwtl
xor
mov
stos
mov
cmp
push
push
fstpl
lds
sbb
dec
pusha
ret
loop
push
fcomps
mov
add
repz
ret
pop
cmpsl
lea
lahf
fisttps
xchg
and
lods
rcll
je
and
push
mov
cmpsl
mov
lods
mov
and
mov
popa
pop
and
adcb
orl
lahf
mov
pop
sahf
outsl
enter
stos
mov
popf
adc
push
lret
gs
pusha
cld
push
mov
inc
pop
js
jae
push
fnstcw
xor
xor
test
and
imul
outsb
jo
xchg
push
push
aas
dec
xor
push
lds
sub
out
jb
bound
fs
aad
xchg
cld
add
sarb
push
or
test
jnp
sbb
into
add
cmpsb
out
sbb
aam
into
and
mov
push
push
pop
mov
fucomp
out
xor
sub
add
push
loope
xorb
adc
inc
clc
push
mov
int3
hlt
xor
test
xor
fcomp
aam
or
stos
xor
mov
xchg
test
dec
cli
outsb
mov
xchg
divl
imul
mov
outsb
xlat
push
pop
daa
jle
fisubs
pop
int3
add
xor
fistps
pop
jbe
mov
lods
in
cwtl
dec
xor
in
filds
sahf
adc
push
jb
lret
in
outsl
sbb
and
sub
dec
gs
imul
pop
and
pop
fstps
test
dec
enter
in
jp
xchg
jmp
jae
add
jle
movsb
and
or
mov
shlb
movb
push
xchg
pop
dec
in
mov
cmp
sub
dec
filds
movsl
mov
xlat
inc
pop
sub
xor
push
adc
test
jns
mov
adc
testl
fs
sahf
rcl
xor
pop
bnd
xchg
stos
xor
push
jmp
loop
imul
arpl
fidivl
or
or
outsb
sub
lea
and
loope
cltd
pop
in
mov
add
or
jne
jecxz
mov
imul
sbb
out
ss
test
arpl
cmpsl
cmpsl
fnstsw
wbinvd
cmp
test
lcall
cmp
int
and
xor
xchg
sub
mov
add
gs
insb
mov
ret
call
or
xchg
xor
sti
rclb
push
push
testl
and
or
xlat
adc
insl
mov
decb
fcoml
mov
aam
inc
pop
pop
mov
mov
push
jmp
test
jb
xor
popf
addr16
lods
pop
fs
fists
sbb
xor
pop
mov
cmp
cmpsl
add
imul
in
pusha
cmpsl
push
je
xchg
dec
iret
and
mov
inc
bound
mov
dec
mov
xor
nop
or
lock
sub
adc
xchg
jns
inc
mov
xchg
test
push
lcall
jne
dec
cmpsb
mov
inc
in
push
sub
pop
sub
icebp
movsl
insb
sahf
test
hlt
out
dec
loopne
in
add
out
icebp
xor
popa
mov
ret
lret
mov
jno
pop
insb
jl
or
jle
cltd
mov
cld
xchg
cwtl
out
adc
je
push
push
mov
pop
cmp
mov
push
or
adc
adcl
pop
loop
xchg
shr
lret
add
in
out
mov
fcmovnbe
iret
std
dec
sbbl
sbb
testl
in
push
repnz
mov
iret
cmp
jg
bound
inc
ss
scas
inc
ret
rol
sbb
aam
sbb
cmp
stos
add
mov
or
stos
or
jg
nop
push
lock
int3
insl
lds
ljmp
pop
inc
loope
aam
cmp
popa
fnsave
or
aas
sti
bound
ficompl
add
in
aam
and
sub
inc
sbb
jl
and
push
and
dec
scas
push
loop
lds
inc
pop
and
jecxz
icebp
lret
sti
adc
push
mov
mov
mov
mov
gs
inc
out
xor
inc
ljmp
xchg
sti
sbb
mov
ficomps
adc
rcll
mov
shlb
popf
sub
sub
push
add
mov
adc
push
aam
mov
cld
je
fstpt
lret
hlt
dec
fmul
mov
sbb
sahf
bound
push
and
xor
decb
fcoml
adc
jge
sbb
mov
in
add
pop
clc
out
pop
mov
mov
test
in
jecxz
mov
sub
shlb
inc
in
xchg
insb
add
pop
ja
and
ss
mov
in
or
out
and
mov
mov
pop
loope
sbb
add
addb
jge
push
sbb
mov
xor
inc
lcall
inc
movsl
sbb
int
imul
sub
mov
fnstenv
add
jbe
or
xchg
pop
scas
or
out
sahf
fucom
stos
inc
adc
testb
lcall
and
inc
leave
divl
add
rorb
xchg
xor
out
sbb
jmp
movsb
ret
cli
xchg
cmpsl
pop
sbbl
or
scas
sub
fcomps
bound
cmp
mov
pop
add
cli
pushf
mov
push
ffree
mov
mov
gs
cmp
push
inc
shrl
mov
jmp
adc
inc
sbb
out
xchg
insl
test
push
sbb
lea
aad
inc
jmp
ja
pop
add
in
inc
pop
pusha
insl
sbb
sahf
ds
dec
mov
dec
cmpsl
fcoms
loopne
ds
mov
fnstsw
mov
js
jo
ds
xor
arpl
dec
push
pop
movsb
pop
jnp
call
push
negl
sub
pop
stos
dec
jnp
dec
dec
sbb
mov
iret
pop
sbb
sarl
sahf
in
ret
pop
pop
out
mov
or
bound
mov
addr16
das
test
jle
popl
je
outsl
cmp
inc
cmc
or
mov
ja
sbbb
popf
hlt
jbe
out
adc
fildll
shlb
cmpb
rcrb
xchg
bnd
repnz
xor
sbb
xchg
lcall
stc
nop
jbe
adcb
pop
mov
lret
pushf
sahf
xor
and
mov
lahf
aas
sub
iret
pop
hlt
dec
inc
dec
cmp
outsb
jnp
inc
mov
dec
movsl
arpl
call
inc
cmpsl
subb
or
pop
imul
scas
mov
lods
lock
adc
data16
cmp
or
inc
xor
jbe
sbb
lds
mov
add
lock
add
xchg
adc
jl
rclb
mov
test
lcall
and
xchg
movsb
push
xor
mov
leave
int
mov
mov
mov
xor
lods
sub
xor
cmp
aaa
outsl
mov
fildl
fdivs
jp
and
push
insl
mov
ffree
push
cmpsl
rorl
mov
loopne
aaa
sub
mov
mov
pop
sahf
jl
aam
push
inc
xor
jb
and
sbb
addr16
jl
push
into
xor
movsl
inc
fs
call
es
jl
lods
movsb
jns
shrl
mov
movsb
insl
sub
out
mov
frstpm(287
dec
shrb
hlt
shll
adc
xchg
sbb
and
aas
dec
loope
jns
insb
out
test
mov
adc
movsb
push
mov
filds
mov
add
push
mov
xor
cmpsb
adc
adc
lret
push
adc
inc
in
inc
cld
roll
leave
adc
popa
bound
imul
test
std
inc
mov
or
cmpsb
add
jb
sbb
pusha
cmp
mov
xchg
sbb
push
mov
popa
addl
adc
sub
nop
fistpll
inc
xchg
xor
push
inc
pop
mov
adc
or
int3
bnd
xor
dec
inc
cld
cli
and
push
sbb
orl
dec
jg
xchg
sub
lea
push
mov
int3
jo
pop
cmp
mov
mov
ret
ror
adcb
add
pusha
pop
and
cmpsl
loope
cmp
mov
cmp
outsl
pop
test
lea
push
lock
es
das
movb
mov
xor
mov
shlb
add
aaa
push
loopne
jne
movsb
aad
adc
int
sub
int3
mov
push
dec
sub
fsubr
jbe
xchg
test
or
lods
fwait
test
dec
ret
push
je
cmp
cmp
leave
mov
inc
jnp
jp
push
jmp
fwait
cwtl
das
or
jle
lcall
lcall
stc
adc
negb
push
add
xor
and
cmpsb
movsl
fs
xor
mov
sub
xchg
out
enter
mov
fucomip
adcb
xor
bound
pop
out
aas
sub
aam
jbe
ret
sub
jle
sub
add
push
hlt
add
dec
mov
ficomps
scas
shll
adc
push
out
cld
stos
xchg
mov
sbb
mov
sbb
sahf
scas
sbb
mov
mov
xchg
mov
push
icebp
ds
imul
mov
lods
stc
orb
push
lahf
out
cwtl
pop
pop
xor
outsb
cmp
pop
mov
dec
loopne
xchg
sbb
push
cmpl
jecxz
pop
rorb
je
push
out
outsb
sbb
push
jae
lret
cld
push
jge
cmp
pop
out
sbb
mov
mov
fisubs
mov
ret
jmp
mov
aad
mov
fdiv
cmp
adc
xor
incl
push
inc
mov
and
push
xlat
sbb
sub
fsubrp
cmpsb
mov
hlt
push
xor
fs
add
adc
jge
test
sbb
lahf
faddp
inc
lock
xor
push
xchg
or
mov
push
pusha
scas
and
sbb
add
pop
mov
dec
bound
mov
push
in
mov
sub
jne
insb
or
push
mov
jb
xchg
mov
iret
sbb
das
lock
daa
pop
js
jns
xrelease
adc
faddl
or
mov
fdivp
xchg
pop
adc
loope
daa
xlat
adc
dec
sbb
cmp
cwtl
inc
outsb
mov
mov
cld
lea
jo
dec
push
xor
outsb
inc
adc
cmpsl
xchg
fs
pop
and
fs
adcl
or
stos
xchg
daa
lock
mov
mov
rclb
lcall
sahf
jb
je
jbe
xchg
outsl
in
jle
inc
lds
inc
xor
pop
icebp
pop
push
add
lock
inc
jbe
mov
addr16
cwtl
jno
mov
in
addl
shlb
int3
leave
int
outsl
sbb
mov
fsubrp
xchg
push
and
mov
imul
push
faddl
test
mov
fwait
js
jne
inc
xchg
mov
in
add
inc
mov
je
mov
in
jbe
out
fisttps
dec
or
pop
mov
cs
aas
roll
inc
and
sub
test
pop
hlt
cmp
sub
mov
int
cmp
cmc
adc
es
xor
jbe
cmpsl
clc
mov
scas
inc
mov
in
xchg
dec
in
out
out
test
jne
aas
cmp
stos
xchg
add
adc
sub
in
popa
int
addr16
shrb
cmp
xchg
pop
fcoms
das
mov
xchg
cltd
xchg
mov
mov
aad
lea
pushf
arpl
mov
adc
mov
into
pop
lret
idiv
int3
jecxz
inc
out
repnz
mov
loopne
test
dec
or
sub
mov
test
lods
push
xor
mov
repnz
fbld
pop
ss
cltd
shlb
jg
lock
movsb
and
movsb
jge
dec
fsubrl
in
adc
leave
in
xchg
pusha
or
test
pushf
add
mov
sbb
push
or
and
vpsrld
mov
stc
ret
sub
mov
push
xor
xor
cmc
mov
test
lahf
cmp
add
int
and
je
add
xchg
mov
arpl
aaa
xlat
jo
mov
lods
shlb
push
push
jl
inc
jge
dec
out
call
dec
fisttps
lock
jmp
jle
stc
jnp
push
xchg
into
pop
xor
andb
jp
push
nop
push
cltd
xor
outsl
mov
pop
mov
cmc
and
pushf
loopne
add
icebp
mov
out
add
push
dec
les
xchg
mov
fisttpl
adc
ss
xchg
mov
and
out
out
fwait
inc
xor
roll
or
or
xchg
pop
jle
xchg
jge
hlt
xchg
dec
mov
push
jo
add
shlb
inc
or
fsubrl
jle
and
daa
iret
xchg
icebp
mov
gs
xchg
xchg
imul
cmp
insl
lcall
mov
inc
fwait
or
and
push
pop
or
mov
dec
xchg
pop
cltd
push
push
xor
into
enter
lock
popa
int3
lret
ja
outsb
cmp
mov
push
int
pop
andb
push
jle
xorl
cmp
ja
scas
dec
pushf
pop
mov
and
add
fwait
or
jecxz
and
sbb
and
xor
xchg
call
inc
mov
xlat
xchg
dec
adc
inc
in
fwait
jb
out
ret
pop
xorl
sbb
xor
ficomps
aas
fucomi
int3
cmp
cmp
fsubrs
fmuls
dec
loope
loopne
out
nop
ss
jne
or
in
test
cltd
sbb
add
sbb
jb
cmp
iret
test
jo
add
mov
insl
xor
pop
xchg
mov
sbb
testb
pusha
lods
lahf
jno
addr16
stos
mov
fidivl
lret
out
test
push
dec
or
or
clc
push
or
btc
adc
adc
sahf
or
sbb
cmpsl
mov
das
outsl
push
popa
in
clc
aaa
mov
pavgw
jle
enter
mov
inc
xchg
mov
cwtl
jo
rol
lods
fdivl
hlt
xor
dec
aad
mov
jo
std
xor
push
andl
cli
xchg
daa
sar
xor
inc
icebp
scas
jecxz,pn
push
shr
icebp
mov
test
movsb
std
jl
xor
xchg
cmc
fisubl
out
cld
loop
in
mov
jp
sbb
cmc
mov
test
aam
xor
mov
or
xor
add
xchg
sub
mov
add
add
cmc
aas
sub
dec
stc
xchg
jns
sbb
cmp
cmpb
sub
sub
leave
xchg
rcll
jmp
sbb
or
sbb
adc
push
mov
or
add
lret
or
cltd
xor
ja
loop
and
push
imul
les
mov
pop
and
mov
mov
dec
cli
aam
push
ds
dec
jl
xor
pop
push
cmp
push
mov
lcall
mov
lea
fistpll
rclb
sub
push
aas
mov
push
out
fnstenv
xchg
or
inc
aas
testl
or
sbb
test
mov
or
lret
sbb
rcrl
xor
iret
nop
mov
int
pop
mov
ficoml
cmp
rclb
xchg
pop
das
mov
push
and
mov
mov
push
xor
fmul
bound
add
mov
pop
psrad
dec
xchg
lods
cmc
dec
dec
in
adc
lock
add
add
cmp
sbb
outsl
fcmove
fsubs
insl
imul
sub
sbb
jl
loopne
cltd
dec
or
push
pusha
js
and
sahf
gs
scas
cmpsl
mov
jle
xor
sbb
lret
mov
xchg
faddl
sub
aas
std
push
mov
sbb
in
cmpl
xchg
mov
xchg
cmp
clc
cmpsb
mov
sbb
mov
stc
popf
loopne
xlat
mov
inc
mov
or
out
adc
je
out
lahf
dec
jge
aas
outsl
jns
movsl
mov
inc
fldpi
stos
ds
adc
dec
or
fdivrs
ljmp
xlat
xor
or
loopne
add
sbb
cmpsb
sbb
fdivrl
mov
xchg
pop
test
loope
cmp
scas
push
ljmp
test
pop
mov
push
pop
fbld
ss
in
outsl
fists
mov
icebp
iret
cmp
xchg
push
sub
in
xchg
cs
mov
xchg
sub
jno
stc
mov
sub
shrl
mov
xchg
push
out
andb
lds
ds
xchg
pop
call
jle
and
std
or
stc
lcall
ss
stos
inc
jnp
clc
or
xor
pop
add
jle
and
jge
mov
push
divl
mov
nop
sbb
popf
movsb
ret
repz
cmp
or
call
mov
pop
add
scas
push
mov
mov
fiadds
lret
jo
loop
repz
sahf
xor
xlat
mov
push
fdivl
outsb
test
sbb
or
jns
jbe
push
je
add
out
xor
clc
pop
xor
or
adcl
dec
or
dec
repnz
test
sbb
mov
xchg
fisubrl
dec
push
push
imul
cmp
dec
cmp
test
into
xchg
scas
call
icebp
mov
ds
outsl
cmp
imul
iret
sbb
fs
lret
aam
test
popf
jns
xlat
outsl
push
lcall
fs
addr16
xchg
inc
mov
dec
mov
addr16
ljmp
call
add
xrelease
into
inc
xchg
push
push
ds
std
pushl
test
xchg
pop
or
rorl
sub
xchg
dec
sbb
imul
and
cld
fcompp
pushf
ds
pop
imul
inc
insb
fcmovu
push
fucomip
xchg
gs
lahf
hlt
mov
out
addr16
xchg
inc
pminub
push
cmc
or
lods
cmp
fisttpll
push
pop
mov
fucom
jp
jns
icebp
pop
mov
cmp
mov
data16
rorb
xchg
cmpsb
clc
mov
mov
pop
idiv
fisttpl
in
mov
xor
jno
bound
shlb
cwtl
jge
push
ret
roll
fdivr
ljmp
pop
xor
fnstsw
jb
mov
fldl
pop
sub
insl
mov
mov
pop
pop
push
adc
push
pop
xor
cmp
ret
clc
mov
mov
xor
push
mov
adc
inc
or
and
jmp
xchg
pop
bound
sti
xchg
sbb
lret
sar
test
mov
stos
and
mov
mov
clc
sub
jle
inc
fdiv
push
push
sub
repnz
test
cmpsb
sahf
mov
push
cmp
rcrb
fldt
adc
add
in
xchg
jmp
loope
loop
pop
out
push
icebp
xchg
lods
pop
add
inc
notb
sbb
popf
lea
mov
int3
add
ja
in
pop
int
outsl
loop
pop
loopne
mov
jge
mov
inc
outsb
push
add
or
popf
xor
xor
arpl
clc
movsl
lea
gs
es
xor
add
sub
test
aaa
xlat
clc
push
pushf
movsb
cld
leave
mov
jp
add
jb
and
mov
mov
sbb
inc
fcomps
cld
fdivs
sahf
lret
bound
in
sbb
add
push
test
pushf
xlat
sbb
jo
les
inc
in
sub
in
rcrb
pop
sub
jb
mov
cli
or
insl
push
jp
outsb
nop
fwait
insl
aad
mov
sub
loopne
mov
fnsave
adc
mov
outsb
loop
mov
test
mov
jl
test
shr
fnstsw
mov
adc
or
adc
fadds
stc
daa
and
add
lret
xchg
xor
jmp
cmp
jo
rcll
repz
mov
push
out
push
mov
stc
xchg
jg
cs
sbb
mov
fidivl
div
ret
leave
arpl
mov
cmpsb
popa
cmp
lahf
xchg
imul
das
pop
sbb
adc
scas
frstor
push
dec
push
pop
cwtl
or
cwtl
repnz
or
sbb
or
add
sub
hlt
pop
cmp
inc
push
adc
dec
pop
into
movsb
cmp
repnz
pop
loopne
dec
sub
test
lret
aas
add
mov
cltd
scas
and
pop
in
lods
inc
push
xchg
popa
lret
cltd
ss
xor
mov
jmp
push
sbbl
in
cmp
pop
or
inc
fsubl
loope
fisttpl
adc
cmp
daa
sahf
jns
xor
frstor
push
cld
push
test
inc
std
not
push
mov
push
dec
mov
jp
stc
jp
mov
cltd
mov
fdivl
mov
pop
mov
aad
mov
jns
push
mov
xchg
pushf
inc
fistl
push
aaa
push
lea
popf
stc
add
mov
and
jno
mov
mov
mov
push
aaa
sub
stos
sub
ret
inc
inc
cmc
xor
mov
mov
cmp
xor
les
mov
and
cmc
push
pop
notl
push
movl
lods
sub
iret
stos
dec
xor
jns
enter
push
jae
repnz
repnz
mov
je
cmpsl
or
add
in
int
add
mov
clc
insb
or
pusha
mov
sub
ds
enter
push
mov
jno
ss
test
mov
mov
lret
les
jnp
cwtl
jmp
inc
stos
inc
or
or
aaa
mov
cs
push
xchg
sub
data16
jbe
and
push
sub
movsb
loopne
stos
mov
dec
add
push
push
mov
cld
mov
imul
sub
out
hlt
mov
aaa
cmc
pop
mov
cmp
dec
pop
xchg
std
nop
xchg
xchg
clc
mov
xlat
lcall
mov
xchg
sub
push
lahf
out
xor
fstpt
std
jo
cmpsl
repnz
jns
out
push
iret
or
aas
ss
repnz
out
jg
pop
mov
repz
sub
movsb
test
xchg
inc
dec
inc
cmp
sbb
cmp
out
or
and
push
xor
jmp
mov
fistl
or
sub
mov
dec
mov
pop
jmp
lds
or
shll
cmp
add
shr
cltd
push
data16
dec
xor
dec
xor
mov
enter
xchg
icebp
inc
into
jecxz
push
fisubl
xchg
add
xor
mov
pop
sbb
ficoms
xchg
xchg
aad
pusha
notl
jle
dec
sarl
cs
sub
into
mov
sbb
jg
icebp
add
or
fmulp
sbb
shr
arpl
adc
cmpb
adc
xchg
xchg
fmul
call
adc
lahf
stos
cmp
xchg
mov
push
jmp
pusha
rcrb
lret
xchg
or
test
mov
adc
dec
rorl
xchg
sbb
cmp
out
pop
inc
cmp
add
lods
aad
pop
push
cmp
push
adc
inc
repz
inc
dec
dec
loope
fsubl
in
and
sub
movsb
test
mov
movsl
lods
ljmp
xchg
jbe
loope
in
dec
dec
es
push
js
in
shrl
dec
loopne
xor
xor
hlt
adc
loopew
jne
fs
add
xchg
test
negb
dec
inc
into
jae
jle
mov
aaa
mov
push
mov
dec
adc
dec
pop
popa
clc
push
es
out
jno
addr16
loopne
inc
xchg
rcrl
js
mov
and
and
xchg
dec
cmp
xchg
dec
mov
clc
lods
cmc
psubsw
adc
outsb
or
xor
test
jno
jns
add
jb
mov
lret
shrb
mov
mov
in
adc
mov
push
pop
dec
outsb
decl
push
mov
push
mov
mov
or
in
rep
lret
orl
sub
in
fistl
mov
add
mov
testb
leave
jne
cli
ljmp
sub
and
mov
cmp
sar
sub
sub
adc
ss
stos
insl
shrb
ret
xchg
add
and
lods
add
adc
loop
push
pop
mov
test
bnd
push
bound
lahf
cltd
cmp
loop
shl
push
fwait
dec
stc
lock
loopne
stc
popa
fildl
pusha
dec
jae
mov
fstps
out
cmp
sub
jnp
stos
hlt
je
es
fidivrs
sbb
scas
mov
mov
das
popa
mov
inc
jo
cmc
or
cli
add
jg
lock
and
sahf
xor
outsb
out
lods
pop
repnz
lahf
lret
hlt
pop
mov
ss
mov
or
push
outsl
mov
xchg
pop
sbbb
or
clc
aad
div
std
fucomi
sar
lcall
push
mov
test
xchg
pop
dec
jbe
std
mov
push
pop
pushf
xor
into
and
in
cmp
sbb
mov
push
and
adcb
mov
mov
mov
jg
mov
lcall
mov
aam
xchg
in
or
js
cmp
jno
mov
add
dec
mov
rclb
and
je
xor
jp
or
pusha
jmp
sbb
les
push
sahf
push
sub
aaa
andb
shrl
gs
adc
xchg
js
mov
std
out
lret
dec
std
adc
jne
or
push
jae
dec
fsubrl
and
mov
enter
negl
lock
add
cmc
push
add
cmpsb
out
loop
inc
dec
nop
cmp
adc
test
sbb
pop
jns
mov
sub
xchg
sub
mov
enter
lahf
test
movsl
jle
aam
aas
mov
xor
or
shl
sub
xor
jge
jo
adc
mov
ja
pop
xor
rorb
pop
sbb
pop
mov
into
clc
xchg
mov
testl
inc
pop
sbb
jge
ja
les
jl,pt
jecxz
pop
mov
jg
loopne
mov
jle
pop
jge
sub
lds
push
jb
adc
sbb
mov
sbb
iret
icebp
jne
mov
inc
std
vpminsw
mov
pop
add
adc
push
jns
fmuls
ja
sbb
clc
jl
test
js
xchg
insl
sbbb
fdivs
ret
adc
sub
cli
shlb
rep
loop
add
loop
jno
frstor
mov
data16
ds
aam
test
sar
jge
sbb
sbb
or
and
xchg
das
jg
adcb
mov
lahf
xor
enter
cltd
pop
out
xchg
mov
mov
push
push
push
in
push
popf
int
or
dec
loop
jae
xchg
mov
dec
loop
ret
or
pusha
and
mov
xchg
lcall
sub
cmp
arpl
cmp
cmp
mov
xor
xchg
test
mov
xchg
mov
outsb
push
fadd
lods
xchg
pop
clc
fwait
mov
add
or
mov
pop
and
out
dec
movsb
ja
leave
jnp
lret
loopne
jno
adc
or
dec
xlat
outsb
movsb
psllw
and
adc
push
pop
mov
sbb
xor
cltd
lahf
insb
push
rcrl
mov
jbe
pop
test
mov
add
lock
add
bound
dec
ret
dec
cmp
out
push
dec
in
imul
int
sti
lock
mov
push
mov
insl
add
lds
rorb
inc
push
negb
add
loop
lahf
adc
adc
lods
nop
pop
mov
int
mov
loop
sbb
aaa
into
xor
push
insl
or
pop
in
adc
ret
push
or
jnp
and
lea
outsl
push
push
popf
dec
in
ljmp
xchg
cmp
fistl
daa
sbb
pop
ror
scas
mov
sub
vpand
movsl
mov
mov
std
sub
cld
daa
jle
out
repz
or
subb
movsb
cmp
jb
stc
out
test
pop
mov
cmp
nop
cwtl
arpl
pushf
mov
push
mov
movsl
scas
jns
out
repnz
das
mov
push
call
add
mov
pop
inc
and
lret
mov
in
icebp
movsl
inc
push
pop
inc
mov
jp
lret
xor
sbb
sar
pop
push
popf
ja,pn
mov
es
stos
jae
or
into
jmp
int3
mov
xor
xor
xchg
arpl
rorl
fcmovb
pop
push
loop
lds
out
loop
in
imul
pop
lods
cld
xchg
filds
lahf
xor
jbe
ficoml
push
sub
enter
clc
daa
push
mov
sbb
arpl
or
mov
imul
clc
xchg
adc
nop
and
andps
fwait
adc
into
jae
cltd
cmp
test
loop
mov
dec
pop
cmpsb
mov
gs
mov
mov
jae
jmp
sbbl
pop
mov
movsl
nop
xor
cmp
cmp
pushf
push
add
jecxz
sub
dec
sbb
jle
push
out
bound
in
imul
jg
xchg
mov
push
mov
inc
loope
pop
jnp
cmp
sub
mov
inc
mov
arpl
aam
out
movl
adc
insl
or
inc
inc
lret
in
fisubs
in
hlt
sahf
mov
or
cs
pop
test
push
jg
data16
ds
add
repnz
mov
bound
aas
hlt
sbb
rcl
popf
mov
sub
mov
aaa
cmp
jmp
aas
inc
push
mov
out
stos
adc
push
push
mov
fs
push
pop
mov
mov
ljmp
idivl
sub
push
repz
push
xor
mov
icebp
outsb
add
sti
jmp
js
inc
jge
popf
xor
gs
fwait
mov
xor
subb
ficomps
cmp
pop
mov
aas
push
and
pushf
sbb
xchg
jge
xchg
decl
and
pushf
addr16
cwtl
mov
cmp
sub
lcall
ret
arpl
xchg
in
rcll
int3
xor
lds
jg
sbb
jle
mov
and
add
rorl
out
fildll
add
pusha
imul
insb
add
pop
addb
or
push
pop
xor
pop
xchg
aam
cmc
int3
add
andl
inc
popf
test
adc
inc
imul
xchg
std
pop
mul
pusha
jg
cltd
mov
int3
cmp
push
out
rcrl
subl
loopne
xchg
jnp
jns
loop
scas
add
jns
sub
mov
xor
adc
push
shll
or
cmp
popf
stos
lea
add
jle
cld
sbb
cltd
mov
lea
js
mov
andb
push
loop
add
xchg
sub
or
push
pop
jbe
or
pop
xor
or
mov
mov
mov
subb
insb
mov
lds
popf
cmpsl
out
pop
mov
mov
decl
fisttps
dec
xor
push
xchg
test
cli
dec
pop
xchg
out
inc
cmc
cmpsl
test
adc
das
mov
sahf
xchg
inc
xor
mov
jmp
aad
xor
inc
popf
shll
notl
mov
repnz
pop
and
adc
jae
mov
mov
in
sti
cmp
or
cs
rclb
mov
and
ja
arpl
add
cld
mov
jne
sub
lods
hlt
dec
pop
mov
push
or
mov
xchg
ljmp
dec
mov
mov
loopne
jmp
xor
xor
arpl
add
fldt
push
mov
or
and
and
hlt
xor
fstpt
adc
lret
bound
pop
jmp
gs
lods
shll
mov
sbb
mov
sahf
and
xchg
mov
rcl
imulb
imul
mov
out
adc
in
aaa
push
xor
jl
fdivr
daa
jle
std
rcrl
clc
or
fisttps
push
fpatan
xchg
imulb
imul
or
add
jmp
idiv
je
sub
cld
pop
and
in
popf
dec
mov
inc
ret
inc
iret
fstpt
call
mov
pushl
fmuls
xor
je
sub
adc
cmp
in
fsubr
xchg
daa
insb
mov
ss
imul
ja
or
cli
inc
mov
add
sarl
movl
mov
pop
out
and
ss
scas
addl
subb
jp
inc
push
pavgb
stos
es
fisttpll
cs
or
or
xchg
subb
dec
dec
repnz
dec
mov
sbb
jp
sbb
ss
in
clc
ja
lcall
sub
mov
nop
jp
dec
sub
testb
jne
sub
movsb
jecxz
lea
pop
mov
dec
and
ficoms
dec
mov
jbe
jmp
cmp
cmp
dec
imul
and
push
out
cmpsl
cmp
test
hlt
cmp
bound
stc
xchg
sbb
les
push
cltd
inc
insb
cmp
push
movsb
dec
dec
mov
jecxz
sbb
mov
and
loope
mov
je
out
inc
pop
xor
popa
xor
inc
movsb
nop
mov
stos
hlt
subl
or
mov
jmp
adc
rep
cmp
jecxz
aaa
adc
or
shlb
xchg
mov
les
pushf
xor
in
push
mov
aaa
ljmp
out
popf
shll
cmpsl
arpl
add
lds
jae
mov
pop
dec
jecxz
shll
enter
shlb
xchg
repz
mov
lret
das
loopw
mov
ja
pushf
lock
xchg
and
testb
sbb
out
fxtract
mov
sbb
sub
xor
xor
mov
or
cmp
adc
nop
imul
in
out
pop
out
cmpsb
lea
mov
jno
dec
mov
xlat
cmp
aad
jb
test
mov
lcall
push
mov
dec
jmp
scas
lods
lods
pop
xchg
das
lds
aas
test
in
dec
jecxz
add
xchg
call
xchg
lock
inc
test
or
dec
pop
push
or
inc
and
mov
jle
pminub
pop
mov
loopne
jns
add
or
ljmp
sbb
lahf
or
cltd
out
inc
xor
push
and
clc
pop
and
xchg
pop
jle
inc
xlat
mov
pusha
stos
shlb
loop
ss
jge
gs
nop
inc
sbb
fnstenv
pop
jmp
cli
jno
ficoms
shlb
jbe
jmp
fnsave
inc
gs
mul
add
test
daa
adc
or
inc
pop
cmpsl
inc
jmp
push
adc
test
mov
xorl
insl
sub
dec
test
xor
das
shrl
mov
mov
sbb
addr16
and
mov
lods
ret
and
sbb
pushf
scas
mov
pop
xchg
cmp
mov
inc
sbb
mov
cmc
in
mov
dec
pusha
pop
das
cmp
xor
add
jge
cmp
and
mov
mov
js
aam
mov
pushf
jecxz
and
cmp
inc
jo
ds
movsl
xchg
xor
push
sbb
add
movsb
xor
and
cld
fcoms
xchg
test
sub
mov
add
pop
mov
mov
out
ret
fnstsw
adc
aam
lret
cmp
std
cmc
loop
xchg
push
fcomps
jge
gs
pushf
mov
pop
loop
pusha
ret
lret
push
adc
mov
ljmp
sub
adc
inc
add
pop
xor
xchg
pop
adc
xlat
jp
push
fidivrl
fadd
mov
xchg
cmp
ss
stc
inc
outsb
cmp
fwait
fs
pop
imul
sbb
and
repnz
cmp
mov
lds
adc
mov
cli
int
in
push
inc
inc
mov
add
cmp
mov
gs
sbb
jae
lods
jl
pop
scas
cmp
pop
xlat
pusha
adc
addr16
leave
pop
cs
out
jae
roll
add
call
push
cld
sub
sahf
pop
fimuls
push
mov
test
loope
add
addb
ss
enter
out
mov
and
in
xorl
push
rcr
pop
jl
pop
sub
xor
and
xor
mov
outsb
ljmp
mov
cli
or
mov
cmovno
xchg
push
inc
sbb
jns
aad
jmp
shlb
mov
pop
insl
mov
add
popa
into
jo
iret
andb
jg
aaa
into
xchg
jno
int3
arpl
pop
jae
vpmacssdqh
xchg
xchg
cmp
sbb
scas
mov
xchg
push
mov
sub
aad
adc
pop
adc
push
add
arpl
fdivrl
xchg
sahf
imul
aam
test
addl
fidivrs
inc
fistpll
out
fistl
mov
scas
push
outsl
inc
into
mov
andb
mov
outsl
out
sub
mov
sbb
bsf
sbb
sbb
jnp
ja
and
mov
cs
jbe
outsb
test
xor
fldcw
cmc
sub
cli
es
sub
xchg
mov
loope
enter
or
inc
adc
add
inc
inc
inc
movsb
into
out
xchg
popa
mov
lds
fdivl
jno
arpl
xchg
mov
pop
cltd
lea
faddp
sub
arpl
xorb
sub
rorl
sbb
push
sub
and
adc
push
aad
imul
sbb
shrb
clc
dec
adc
fwait
arpl
mov
dec
xor
add
arpl
shll
sbb
dec
xchg
jle
xchg
inc
lea
inc
mov
mov
shrl
xor
pop
dec
add
add
mov
mov
pop
repnz
mov
in
adc
pop
cmpsb
je,pt
jecxz
gs
lds
mov
xor
fs
xlat
lret
in
stos
paddsw
cs
inc
pop
dec
cmp
je
ds
xchg
xchg
clc
pop
push
jne
dec
pop
pop
insl
mov
mov
and
inc
test
and
gs
xchg
movsb
inc
dec
pop
jnp
fcomps
jno
lock
sbbl
lds
loop
pop
jecxz
ss
mov
inc
fwait
xor
inc
lods
popl
int
fcmovb
popa
out
push
jne
mov
sub
adc
mov
cmp
inc
lret
jp
popa
dec
add
test
xor
daa
mov
movsl
jle
ret
fldl
js
ja
fildll
sbb
es
and
dec
xchg
xchg
in
or
in
pushf
add
mov
sbb
mov
inc
pop
mov
psrlw
inc
inc
sbb
data16
test
ret
dec
mov
stos
js
shrb
nop
xor
cmp
out
out
aaa
fstps
inc
sbb
add
cmp
incl
sub
loopne
xor
scas
pop
frstor
jle
xchg
int3
xchg
in
js
dec
lods
loope
cmp
negb
loop
adc
mov
cmp
xchg
add
jg
scas
mov
xor
push
mov
push
test
test
lds
fisubrs
lret
sbb
std
xchg
pusha
cmpsb
dec
jbe
lods
dec
mov
xor
inc
gs
push
push
lcall
scas
inc
xor
add
repz
mov
cld
lret
sub
popa
loop
jle
lahf
inc
imul
cld
add
adc
fisubrl
imul
xchg
mov
mov
iret
gs
jne
xor
xor
std
lods
add
push
inc
and
dec
out
jge
inc
mov
lods
push
imul
fsubrs
jb
je
pop
repnz
aad
mov
imul
push
xchg
imul
mov
sbb
or
dec
sub
repz
or
mov
cmpsb
bound
in
dec
dec
or
inc
test
pop
pop
jne
inc
push
push
xchg
mov
les
push
jmp
dec
push
or
sbb
push
and
in
loopne
xchg
sbb
cmp
std
sub
jecxz
xchg
clc
sbb
lret
mov
mov
adc
je
icebp
dec
pop
xor
bound
les
mov
cmp
cltd
loope
hlt
lret
inc
mov
js
adc
mov
imul
insl
jp
inc
ficomps
hlt
adc
mov
xchg
sahf
lret
mov
sti
icebp
dec
fsubrl
adc
pop
push
pop
adc
mov
or
cwtl
and
icebp
add
jmp
test
or
jmp
cmp
adcl
jp
xchg
sub
mov
rcrb
inc
adcb
and
xor
arpl
rorb
xchg
addr16
mov
sbb
std
push
inc
cld
jb
and
xlat
sbb
popa
and
hlt
sbb
inc
inc
int
jb
clc
pop
sbb
push
dec
lock
sbbl
cmc
mov
or
andl
jl
pop
scas
sbb
cmp
movsb
jmp
pop
jno
jbe
adc
mov
lods
pop
shll
xlat
xorb
lcall
ss
pop
xor
push
stos
jge
sub
out
add
adc
pop
push
add
mov
mov
repnz
jecxz
pusha
mov
mov
movsl
cmp
das
loopne
push
loope
push
sarl
push
mov
mov
push
pop
pushf
andb
test
lret
sbb
loopne
push
outsl
jl
idivl
fimull
mull
jmp
lods
fisubrs
adc
mov
imul
mov
sub
insb
fsubr
test
add
adc
data16
pop
sub
mov
jb
dec
xchg
adc
sub
xor
pop
cs
xchg
pusha
test
push
and
mov
lock
sbb
mov
fmull
pop
push
and
xchg
in
push
xchg
inc
push
dec
daa
je
or
pop
icebp
push
int3
sbb
psraw
or
mov
jns
push
and
xchg
xor
sti
pop
lock
ds
jae
ja
sti
xchg
xchg
out
std
loope
xchg
adc
push
mov
mov
test
test
std
mov
jno
adc
into
push
out
jbe
in
subl
or
jmp
popf
adcb
ds
mov
rclb
and
out
cld
and
mov
jno
pushf
xlat
or
insl
mov
sub
xchg
cmp
loopne
stc
nop
and
mov
movsb
mov
mov
pop
arpl
mov
jnp
ret
stos
pop
lods
xchg
jae
dec
loop
add
mov
xlat
mov
add
dec
sub
mov
push
jl
xchg
cmpsl
ret
enter
add
psrad
rorl
aam
int3
aad
push
cmpsb
inc
out
jp
push
and
into
add
push
inc
test
jnp
push
iret
mov
mov
fimuls
popf
sub
adc
les
scas
push
stc
xchg
mov
xor
pop
fildl
in
sbb
popl
xlat
aaa
and
push
jno
inc
adc
xchg
cmp
push
std
or
mov
mov
jbe
push
push
mov
sbb
and
and
lret
shrl
inc
xchg
out
std
fdivrl
lret
js
sti
test
push
push
in
lret
mov
xor
inc
inc
or
cwtl
cmp
fimull
xor
mov
push
pop
repnz
lahf
cwtl
fiadds
repnz
ja
inc
lret
sub
add
push
jge
mov
mov
stos
inc
add
in
mov
iret
xor
int3
popf
xor
into
jecxz
mov
mov
xchg
mov
mov
cmp
fnstenv
push
mov
jbe
jp
adc
loop
test
clc
out
out
data16
pop
mov
sbb
push
cmpsb
sarl
mov
pop
adc
and
pop
in
and
inc
lods
xchg
jb
addr16
cltd
pop
std
dec
add
cmc
fwait
test
push
int3
pushf
mov
add
inc
mov
xchg
mov
imul
mov
lods
fwait
into
fmul
test
lcall
sbb
cmpsl
dec
mov
sbb
in
das
cmp
add
jmp
lcall
cwtl
das
pop
test
popf
mov
cmp
ret
loope
sahf
dec
call
in
xor
or
cmc
aaa
mov
dec
sarl
js
mov
out
and
loope
inc
fldl
push
fmull
inc
lock
in
in
jmp
bound
inc
adc
test
call
add
loop
fldenv
cmp
push
inc
sub
adc
xchg
dec
cmp
popa
ficoml
dec
pop
inc
sti
or
or
dec
test
pushf
pop
or
dec
fldlg2
dec
das
sub
subb
lret
inc
pop
cli
xchg
mov
lret
jo
mov
mov
imul
int
jge
mov
mov
mov
stc
scas
imul
inc
mov
mov
xor
adc
jb
loopne
cld
xchg
inc
subb
adc
lea
inc
mov
xchg
in
jmp
or
aas
mov
mov
push
shr
add
mov
data16
sbb
xor
je
sahf
js
push
jbe
frstor
cs
cli
and
in
ret
mov
push
and
movsl
jmp
rcrb
pop
sub
dec
fadds
mov
push
cltd
fstpt
inc
push
cmpsl
dec
mov
dec
or
test
add
add
hlt
mov
mov
xor
std
inc
shl
jp
cmp
or
cmpl
add
jb
mull
pop
repz
jp
adc
loope
sbb
jl
repz
sub
pop
imull
scas
jle
push
inc
jno
ds
push
aad
or
cmp
hlt
addr16
and
imul
imul
mov
adc
mov
add
clc
jae
cld
mov
hlt
adc
add
incl
or
daa
jo
add
daa
pop
ret
inc
mov
mov
push
jg
mov
push
mov
das
xchg
add
out
pushf
lock
cs
xchg
loopne
addb
inc
jbe
popl
sar
xchg
add
jmp
loope
jbe
sub
sbb
adcb
popa
sarb
repz
or
aad
js
xchg
sub
das
ret
mov
insl
daa
aad
popf
add
orb
pop
and
mov
xor
std
cmp
xor
popf
push
sub
ficoms
int3
add
pop
enter
push
mov
push
enter
sbb
sub
pop
mov
outsb
movsl
js
sub
aad
pushf
imulb
mov
push
and
inc
ret
popf
xor
fnstcw
pop
mov
cmp
insb
mov
mov
jmp
xchg
in
leave
loopne
sub
pop
fildl
xlat
shlb
push
enter
sbb
xor
push
popf
cwtl
inc
xchg
int
stos
mov
and
pop
mov
push
mov
iret
mov
mov
es
dec
lahf
jns
jecxz
mov
or
shr
stc
adc
inc
adc
and
xor
push
lcall
andl
out
inc
xor
cmp
add
mov
jl
lock
mov
aaa
stos
add
test
push
lret
xor
cmp
loop
xchg
icebp
adc
hlt
leave
sub
aas
cmpsl
fsubrl
ss
inc
inc
dec
xor
ljmp
pop
hlt
iret
push
insl
lret
cmp
test
cltd
fbstp
mov
adc
lods
rcl
fisubrs
or
ljmp
sub
dec
test
xchg
outsl
adc
jmp
fistps
jne
js
es
fucomip
pusha
int
lea
push
sti
xchg
lcall
outsb
arpl
mov
sub
outsb
jp
xchg
sub
dec
fidivrs
out
adc
jns
jecxz
jb
lret
mov
cmpsl
pop
mov
pop
jmp
sub
or
lcall
iret
adcb
and
cmpsb
ds
jecxz
add
mov
jae
xchg
fsubrs
mov
push
in
inc
leave
cld
outsb
adc
inc
test
cmc
xchg
and
repnz
add
out
cmp
in
shrb
aaa
outsl
das
jg
sub
xchg
xchg
ret
repz
mov
jg
jbe
dec
mov
pop
repnz
dec
cmp
lcall
imul
loope
adc
sbb
jmp
fdivrp
shrl
mov
imul
push
cmp
mov
imul
dec
lods
xchg
cmpsl
loope
push
ror
out
out
insb
sbb
mov
jmp
adc
add
add
mov
add
iret
data16
rorl
xchg
scas
mov
jne
xor
push
push
xor
aam
push
push
inc
push
pushf
ss
fwait
andb
xor
jmp
mov
es
ret
and
jle
mov
mov
ss
xchg
pop
jbe
xchg
in
jl
mov
and
movsl
xchg
mov
and
lock
inc
cmp
icebp
test
int
leave
cli
dec
sbb
scas
xor
in
inc
pop
stos
gs
pusha
popf
hlt
test
sub
inc
movsl
pop
mov
stos
mov
xchg
mov
mov
pop
mov
cmp
push
pop
movsb
add
sub
sub
dec
adc
icebp
dec
in
add
mov
and
aas
lcall
sub
ds
xchg
push
lahf
mov
andl
outsb
stos
jne
sbb
aaa
adc
insb
push
xor
in
jo
mov
pop
xor
add
add
lds
pop
pushf
inc
insl
sbb
fists
mov
lock
add
mov
add
ss
lods
xchg
adc
orl
fimuls
fcoml
rorb
push
ja
cwtl
pop
lcall
push
call
fs
mov
int3
xchg
pcmpeqw
dec
mov
sbbb
mov
xchg
data16
mov
adc
fcoms
std
mov
mov
fidivs
sub
fisubrl
outsb
stc
or
fnstsw
add
scas
push
daa
push
lcall
lds
pop
loope
mov
jge
pop
lods
std
setne
mov
notb
stos
inc
sbb
pop
lods
sahf
sbb
push
sbb
jns
mov
pop
adc
repnz
mov
jbe
inc
or
call
push
iret
out
jo
or
mov
dec
daa
shrb
xor
push
pop
lock
or
jno
fidivl
cwtl
iret
data16
mov
xchg
out
and
in
dec
lea
adc
negl
in
ljmp
cmp
xor
jbe
push
mov
stc
test
sahf
adc
stos
cmp
popa
fmull
daa
leave
pop
ds
ljmp
mov
leave
push
inc
jns
inc
pop
push
inc
fwait
lea
and
xor
movups
push
sbb
mov
mov
jle
push
cmp
sub
aaa
stos
lcall
pop
add
ficoms
aam
nop
es
adcl
jg
fiadds
fwait
xchg
scas
pop
shl
mov
les
stos
mov
cmp
xor
and
out
push
or
add
and
adc
adc
ss
addr16
mov
int
cli
xchg
lret
xchg
std
cmovp
sbb
fdivs
push
outsl
xchg
pop
xor
mov
sbb
mov
in
sbb
insl
add
movsl
pop
enter
lods
js
dec
loopne
aas
dec
popa
jno
scas
mov
add
jnp
xor
fnstenv
jno
xchg
cs
mov
sub
movsl
psubb
lods
xchg
into
jne
push
out
mov
outsb
adc
sbb
xor
dec
in
mov
insb
sbbb
enter
ret
xchg
xor
mov
test
insl
outsb
sub
stos
or
in
adc
xchg
scas
shll
das
inc
in
pop
jno
aam
call
push
jle
sub
jg
adc
mov
stos
nop
popf
mov
jo
push
movsb
adc
and
xchg
mov
je
in
xor
insb
sbb
lahf
call
add
icebp
adc
jno
imul
mov
cld
sub
inc
push
pop
jp
mov
imul
loopne
call
lret
mov
push
stos
rol
xor
sub
sbbl
add
mov
popf
out
xchg
add
pop
lock
inc
into
dec
push
ja
dec
in
sti
gs
stc
mov
stc
fidivrs
fbstp
push
mov
icebp
fstl
repz
and
xchg
repnz
out
jae
sbb
mov
cmp
push
push
imul
scas
jmp
jmp
adc
jmp
cmp
mov
cltd
cwtl
sysexit
lock
data16
ja
repz
fstpt
out
insl
mov
sbb
sarl
rep
xchg
fxch
inc
into
rcrl
pop
xlat
fs
sub
sbb
out
cmp
dec
repz
movsl
cmp
adc
or
pushf
ja
stos
and
data16
mov
movsl
not
fistl
push
inc
dec
pop
divb
sub
push
daa
xchg
pop
xchg
add
mov
fs
jmp
mov
lcall
jns
or
xor
in
aaa
cmp
and
inc
and
dec
jnp,pn
ret
fisttps
insl
loopne
int3
aad
or
inc
pop
sbb
lods
mov
inc
int3
test
popl
out
icebp
sbb
mov
gs
mov
mov
jns
scas
xor
sub
sub
sti
jbe
sbb
shll
repz
scas
hlt
pop
scas
inc
mov
dec
aaa
or
xchg
sub
insb
xchg
imul
nop
push
cmpsb
mov
cmp
loopne
ja
arpl
mov
mov
cmp
push
jecxz
in
add
mov
leave
adc
pop
add
lea
mov
outsl
out
sub
imul
test
fsubs
push
pandn
lcall
or
jecxz
push
jno
dec
arpl
pop
or
lods
or
or
out
aad
mov
fisubl
mov
and
frstor
adc
jmp
sub
flds
mov
add
addl
dec
repnz
imul
sbb
shll
jae
aad
adc
push
test
xor
mov
jb
cmp
adc
cmp
and
nop
jmp
dec
sbb
imul
pop
jnp
aas
fs
mov
xchg
std
xchg
add
add
js
inc
inc
or
stos
xchg
movl
sub
test
dec
hlt
adc
cmpb
je
cmpsb
add
xor
jb
lock
jmp
mov
mov
addr16
mov
mov
test
inc
cltd
sub
lods
jo
lds
sub
adc
adc
pop
inc
das
lret
jb
hlt
or
jnp
xchg
inc
sahf
jb
mov
adc
cwtl
adc
xchg
fs
bound
nop
pop
dec
dec
adc
pop
sbb
push
in
cli
mov
je
mov
imul
and
and
sbb
adc
imul
adc
push
push
sbb
ss
in
out
push
in
pop
repnz
xchg
or
mov
mov
aaa
adc
inc
pop
test
icebp
sbb
pop
push
test
push
fnsave
fisubs
test
add
sti
add
push
mov
xor
jecxz
cld
out
aam
mov
add
or
inc
xlat
mov
jb
adc
push
bound
std
pusha
fnstcw
outsl
inc
daa
inc
inc
sub
mov
add
or
mov
imul
pop
js
adc
loopne
or
std
pop
mov
adc
lcall
jecxz
js
les
pop
cmp
stc
mov
or
pop
adc
push
jae
rorl
insl
aas
pop
mov
jl
sub
sbb
aas
popl
es
loop
inc
fsts
push
call
mov
sub
mov
lret
test
int
push
fdivs
or
in
mov
clc
ja
dec
icebp
loop
push
lods
cmp
dec
or
jle
iret
mov
xchg
adc
mov
stos
add
inc
add
inc
jle
je
pushf
scas
lea
f2xm1
push
mov
stc
xor
sahf
das
dec
inc
shrl
cltd
and
sbb
pop
ljmp
push
pushf
sti
enter
sbb
sbb
in
inc
lahf
addr16
ja
cmp
xchg
pop
push
mov
inc
xchg
scas
jbe
rcr
jae
int
xchg
pop
out
dec
mov
add
add
test
mov
fucom
ja
jge
dec
mov
andl
sbb
inc
xlat
xor
pusha
fildll
inc
jbe
xchg
test
negl
adc
divps
movsl
add
pusha
add
insl
sub
jae
lock
jp
pop
rcrl
jnp
imul
push
repz
pushf
mov
or
rclb
cmc
into
sbb
repnz
pop
jns
lods
cwtl
lock
fs
bound
inc
mov
lcall
xor
cmp
out
xchg
mov
imul
movsl
out
mov
ret
inc
xor
dec
sbb
cmp
xchg
sub
mov
in
mov
or
dec
mov
pop
pop
and
fsubs
push
pop
cmpsl
inc
fcmovnu
mov
arpl
in
and
loop
mov
or
and
adc
xlat
jno
xchg
mov
pop
iret
push
iret
mov
lock
ss
cmpsl
arpl
pop
dec
inc
xchg
mov
int
inc
mov
data16
fsubrs
shll
jbe
lds
lahf
data16
or
add
jno
hlt
xor
insb
cld
xor
stc
inc
or
int
out
sub
popf
repnz
dec
pop
push
aad
mov
lret
or
push
mov
add
xor
sbb
pop
jne
cld
inc
sub
out
push
leave
add
shlb
aaa
pop
sbb
inc
lret
data16
test
dec
mov
mov
dec
fnsave
push
add
sub
xchg
xchg
ficomps
mov
rclb
mov
fmull
outsb
lods
inc
cs
cmpsl
inc
push
push
sbbb
jno
or
push
mov
mov
ficompl
cld
push
loop
ja
movl
xchg
mov
lahf
push
in
mov
or
mov
mov
sub
mov
imul
or
push
jmp
repz
outsb
xchg
fbstp
push
mov
in
and
pop
adc
loopne
jnp
mov
or
inc
cld
mov
dec
pop
imul
jo
jb
daa
js
xchg
jbe
fildll
in
or
and
mov
stc
inc
or
mov
dec
pop
xor
add
xchg
jae
sub
xor
repz
xchg
loop
inc
or
and
push
adc
xchg
dec
jecxz
ja
cwtl
xor
test
inc
arpl
sub
lds
adcb
cld
lock
jl
cmp
pushf
mov
adc
dec
addr16
dec
in
and
dec
cli
lcall
scas
cs
mov
inc
adc
jge
push
add
call
xor
shll
mov
adc
divb
out
sub
push
cmp
and
jb
movsl
enter
outsb
mov
sbb
jno
sbb
mov
mov
mov
add
add
jg
std
mov
lahf
mov
dec
lods
enter
cmp
sahf
adc
sbb
loope
push
sub
jo
addr16
test
mov
shrl
outsb
rolb
sub
cmpsl
jmp
cmpsb
orl
or
pop
daa
adcl
or
xor
movsb
mov
mov
sub
mov
mov
cmp
push
aaa
inc
xlat
push
rcrb
mov
ds
and
mov
je
loop
push
pop
es
xor
lods
dec
sbb
and
cwtl
add
fmull
mov
mov
jns
xchg
inc
cmp
jae
int3
dec
pop
into
fdivr
test
cmp
pop
cmp
dec
sahf
pop
out
stos
sti
dec
call
data16
arpl
call
fs
fucomi
mov
push
in
repnz
add
or
sbb
rorb
xchg
push
popa
or
ret
or
mov
mov
popf
pop
adc
aaa
into
pushf
insb
push
or
push
mov
sahf
cmp
xchg
sub
popf
aaa
neg
fstl
push
scas
sub
dec
aaa
xchg
aas
jbe
mov
mov
jno
iret
adc
or
or
xchg
test
inc
sbb
stc
cs
mov
dec
call
cli
addr16
fistpll
xchg
out
lock
adc
jmp
das
loope
sub
mov
or
pop
jle
add
or
test
xchg
adc
movsl
dec
cmp
inc
leave
pop
and
dec
push
mov
dec
scas
es
pop
mov
daa
cli
gs
in
inc
outsb
gs
fcoml
jmp
add
scas
mov
mov
test
pop
rclb
inc
xchg
lock
xchg
xchg
lret
mov
pop
imul
shlb
dec
es
inc
jns
imull
scas
xor
fisttps
aam
xchg
mov
pop
call
fldt
filds
xchg
inc
out
out
insl
sbb
mov
xchg
pop
add
frstor
and
scas
push
sub
cmp
daa
mov
dec
pop
insl
sub
cmp
mov
test
xchg
cld
or
lods
dec
mov
scas
dec
sahf
pop
data16
push
repz
or
mov
std
imul
jo
xchg
jns
ja,pt
outsl
rcrl
mov
in
cli
push
mov
cmpsl
inc
loopne
pop
loop
sub
xlat
mov
xchg
lock
out
cmp
in
daa
in
aaa
fmull
lcall
in
inc
mov
sbb
sub
pop
xor
push
idivb
sub
pop
je
cld
mov
xchg
dec
fs
daa
sbb
sub
and
lea
mov
cmpsl
jge
fcoms
dec
sub
mov
call
das
jbe
lods
pop
jb
gs
in
pop
dec
jecxz
mov
cltd
test
inc
push
in
je
dec
fistl
mov
fcmovbe
nop
xchg
ljmp
cmp
int
mov
cwtl
mov
sub
mov
fidivrl
mov
ja
fwait
push
mov
sbb
dec
fistpll
fwait
jae
ja
scas
rcrl
cli
xchg
cmp
dec
or
sub
sub
ljmp
jae
lcall
push
addr16
xor
scas
loope
or
out
shrb
push
cmpl
add
lahf
or
jbe
out
jl
xor
mov
cmp
pop
shr
cmp
call
add
dec
popa
jp
ss
add
das
shll
or
mov
arpl
mov
loope
repnz
mov
add
mov
cmp
pop
jecxz
xchg
sub
sbb
mov
bound
push
mov
clc
cltd
out
xchg
cmp
cmp
inc
push
xor
pop
mov
loope
or
rorb
out
das
pop
flds
loope
dec
incl
dec
sub
jle
sub
sbb
and
jl
pusha
xorb
and
aam
test
arpl
add
cmc
and
mov
sbb
mov
test
inc
movsb
repnz
fstpl
stc
subb
fwait
cmp
pop
cmp
popa
pop
fwait
lock
xchg
stc
call
cmp
std
jmp
test
call
test
xchg
aad
pop
loope
jge
scas
imul
call
cmpsl
mov
pop
insb
push
mov
jno
addr16
inc
rclb
insl
push
sahf
dec
in
mov
sbb
pop
out
insb
pusha
shl
jge
jne
jg
aaa
sahf
lret
not
stos
adc
sbb
hlt
adc
mov
push
add
out
xor
out
lock
lret
xchg
fs
xor
pop
jl
push
out
rorl
fdivs
ljmp
mov
pop
call
xchg
adc
cs
loopne
mov
aam
adc
rolb
orb
and
pop
mov
test
andb
dec
and
cmp
rclb
cmp
test
xchg
xchg
pop
aaa
shrb
pop
xor
and
cmp
jl
and
xchg
jno
adc
push
xchg
xchg
mov
dec
mov
add
mov
rcrb
or
fnstcw
dec
icebp
ja
js
mov
shll
push
jecxz
call
test
aam
mov
ja
dec
push
xor
jmp
add
mov
add
dec
push
rcll
in
jecxz
lock
cmp
fnsave
sbb
lret
and
pop
mov
and
je
jp
fnsave
std
push
jbe
mov
lds
and
pop
fistpll
out
int
pop
int
outsb
or
ljmp
mov
addr16
push
pop
sbb
pop
pop
test
je
mov
mov
push
mov
xchg
sub
addl
or
bound
call
cld
stos
jbe
test
push
test
or
pop
shlb
or
push
jno
nop
mov
es
pop
es
or
mov
and
pop
rcl
insb
xor
sahf
mov
js
adc
fistps
mov
lahf
mov
psrad
adc
out
mov
lea
push
in
mov
into
and
cmp
mov
jmp
or
cmpl
mov
pusha
push
movsl
push
xchg
stos
neg
jmp
adc
out
pop
dec
pop
jae
ret
int3
pop
in
push
sub
inc
je
jg
cmpsb
out
pop
adc
xchg
mov
inc
fisubrs
cmp
add
adc
sbb
decb
and
fbstp
lods
mov
xchg
test
add
jne
adc
mov
pop
das
inc
pop
popa
ds
int3
arpl
and
in
push
arpl
fldl
add
push
addr16
dec
cmpsl
fs
cs
inc
inc
jmp
dec
leave
pop
mov
hlt
xlat
xor
out
add
mov
mov
jge
or
push
or
jne
or
push
jp
xor
xchg
mov
cmp
cld
cmpsb
pop
aam
scas
cmp
sahf
insb
rorb
sbb
mov
outsb
fidivl
lret
out
mov
inc
adc
addr16
mov
push
ds
sti
mov
movsb
int3
pop
shrl
lods
cltd
loop
lret
int
popf
repz
cmp
dec
clc
push
je
dec
daa
rclb
xchg
icebp
mov
mov
adc
cwtl
das
insb
xorl
dec
xchg
dec
ds
dec
dec
dec
xchg
adc
add
iret
pop
mov
cmc
xchg
stos
les
mov
repnz
lods
sub
and
leave
jp
in
add
adc
inc
bnd
xor
sbb
psrad
sahf
and
mov
gs
mov
mov
repz
fdivl
add
cmp
push
mov
mov
mov
sbb
jp
popa
jno
jnp
sti
jo
mov
mov
inc
loop
loope
pop
adc
out
enter
lods
inc
jmp
sub
push
ss
paddsw
mov
ljmp
mov
xor
mov
mov
mov
pop
negb
bound
jb
mov
lods
in
out
loopne
les
pop
or
mov
popf
cmp
ljmp
push
lea
jno
stc
and
jo
mov
push
or
enter
in
jns
lods
lds
add
adc
adc
pop
insb
inc
push
pop
clc
inc
data16
aas
push
out
jecxz
jns
cmp
jge
jns
xchg
dec
xor
sti
push
push
jno
in
xchg
sub
and
leave
pusha
subl
adc
mov
dec
jg
sahf
scas
cwtl
test
loope
and
cmp
mov
subb
jbe
sbb
xchg
xchg
movsb
add
lock
scas
push
adc
push
aas
fnsave
sub
cli
or
popf
pop
imul
cld
or
sbb
add
mov
push
xlat
mov
dec
pop
cmp
lea
fprem1
pop
not
int
mov
out
pop
nop
stos
inc
ret
lcallw
cwtl
out
fdivs
or
scas
repz
lret
sti
cmp
addl
nop
sbb
push
fs
mov
dec
es
adc
cld
push
test
fs
dec
dec
adc
pusha
jmp
xchg
hlt
sub
dec
xor
or
test
sub
imul
js
jo
xchg
addr16
sti
add
movsl
repnz
fisubs
cmp
fstpt
mov
push
scas
jp
lahf
stos
jl
pop
ss
mov
add
cli
xor
push
xchg
test
adc
push
jecxz
out
dec
add
aaa
push
test
sbb
mov
aas
dec
jecxz
dec
clc
mov
movsb
xlat
mov
jns
outsl
shrl
nop
scas
mov
push
ret
outsl
lods
daa
data16
rcrl
mov
sbb
dec
pop
pop
arpl
jno
pop
or
cld
inc
sbb
rol
mov
clc
in
scas
cmp
xchg
test
rcr
clc
lods
mov
jge
imul
lret
ror
push
jbe
shll
sbb
add
inc
fidivl
jnp
sarl
sub
into
xchg
xchg
mov
pop
popf
pop
xlat
cld
jl
roll
sbb
lds
push
subb
aaa
incl
jl
push
rorl
mov
mov
subl
lahf
mov
mov
lcall
push
mov
loopne
xor
fisubrs
cmpsb
push
mulb
into
jbe
repz
adc
aad
outsb
jb
cwtl
mov
movsb
pop
mov
aad
inc
or
filds
jmp
inc
mov
ret
js
or
cltd
dec
in
movsb
pop
xchg
jle
insb
jle
lahf
lods
ret
clc
adc
lret
add
out
rcl
cmp
mov
cltd
lret
push
lahf
loope
shlb
test
leave
ret
rcll
fdivs
adc
push
mov
out
push
fadd
enter
jbe,pn
aas
mov
cmp
adc
mov
push
xlat
adc
xchg
lret
clc
movsl
sbb
loop,pt
fstps
sub
movsb
sbbl
ds
js
aad
inc
inc
int3
test
aam
lret
xchg
and
sub
sub
xchg
or
das
push
lock
sub
jbe
imul
dec
xor
rolb
sahf
push
push
ljmp
jno
bound
cmp
mov
inc
fisubl
mov
xor
shl
enter
or
mov
mov
cmp
inc
inc
stos
jnp
frstor
pop
scas
xchg
stos
cmc
xor
mov
decb
dec
loop
sahf
xchg
mov
sub
orl
mov
push
or
addb
in
fwait
repnz
jge
mov
stos
mov
pop
test
xchg
in
push
popa
in
xchg
int3
je
mov
xchg
les
cli
aam
sub
and
mov
rclb
pop
hlt
mov
ljmp
adc
gs
popa
push
shrb
iret
addr16
ds
cmc
movsb
inc
loopne
imul
gs
pop
push
mov
loope
sbb
mov
cmc
sub
scas
add
cmove
jmp
outsl
scas
inc
mov
ja
in
fstl
cli
or
sbb
adc
cmp
out
out
xchg
addr16
xor
negl
popa
push
gs
or
sub
cmpsb
adc
xchg
stos
add
add
aaa
sub
mov
movsb
clc
mov
sub
jb
clc
rol
push
or
pop
mov
xor
insb
movsb
ds
mov
add
js
xchg
stos
cmp
sbb
cmpsb
aam
mov
mov
xor
inc
pop
cmp
stc
mov
ds
pop
call
sub
inc
xchg
ja
sbb
push
dec
cmp
mov
adc
cmpsb
cmp
idivl
mov
out
aad
mov
jns
jo
cmpb
mov
lods
inc
push
mov
sti
lea
jbe
cli
testl
out
shll
xor
movsl
push
adc
xor
jecxz
fidivl
add
cmp
out
dec
add
lahf
insl
mov
data16
out
push
cbtw
daa
add
pop
add
push
sub
sbbb
rorl
les
cs
dec
aad
inc
pop
movsb
mov
mov
lds
cmc
out
sub
ds
xlat
aas
push
std
adc
sbb
dec
push
adc
sarb
or
mov
fcoml
leave
in
adc
ret
sbb
jecxz
push
jg
arpl
stc
or
cmpsl
subb
sahf
mov
xchg
jno
push
sub
xchg
pop
mov
mov
cmp
out
out
scas
pop
int
sbb
in
mov
add
add
cmp
outsl
in
dec
clc
cwtl
add
sbb
dec
sbb
dec
mov
lods
inc
hlt
arpl
or
call
xchg
leave
inc
dec
or
cli
push
sahf
jno
arpl
dec
cwtl
aas
clc
inc
jno
jecxz
sbb
shl
scas
add
dec
xor
fadds
movsb
insl
or
xchg
xchg
cmp
mov
adc
rol
icebp
mov
sti
stc
sub
fidivs
mov
rcr
test
pop
out
jnp
mov
or
test
sub
lock
mov
les
fidivrs
pop
test
xchg
mov
add
inc
sbb
xor
repnz
sbbb
cmp
push
jnp
mov
pop
cmpsl
mov
xchg
das
ds
pop
sahf
sahf
into
xor
movsb
add
aam
clc
mov
mov
paddd
test
pop
std
sti
fwait
xor
cmp
inc
mov
adc
sbb
jns
test
in
mov
fisttps
add
mov
aaa
aam
je
sbb
std
adc
push
xchg
pop
outsl
leave
xor
roll
leave
xlat
jbe
and
stc
adc
adc
out
push
outsb
fucomp
mov
int
xor
jmp
jecxz
sub
popf
pop
and
mov
mov
mov
lahf
repnz
ftst
push
pop
adc
sbb
out
jge
mov
jnp
lods
push
mov
fisttps
jecxz
call
mov
push
popf
jp
fdivl
fstpl
jmp
fsubs
jl
sub
lret
jp
dec
pop
inc
fwait
out
mov
push
pop
pushf
outsb
cmp
test
mov
lods
fmulp
mov
je
scas
aam
rorb
push
lods
ret
loope
jo
movsl
mov
imul
and
push
in
mov
les
loope
push
popa
outsl
ds
andl
mov
lret
cmp
insb
mull
mov
movsl
cmc
repz
mov
sbb
cmpsb
mov
sbb
loop
xlat
cmp
lock
ret
xchg
xor
in
jg
jo
dec
mov
sti
rcrb
imul
xchg
fwait
push
int3
lods
enter
mov
dec
mov
arpl
adc
pop
pop
lds
call
ljmp
and
adc
xchg
js
test
sbbb
push
pop
ljmp
push
test
repz
loop
sbb
shll
movsl
aas
inc
mov
cmp
gs
cmp
mov
scas
sub
mov
sbbb
fsubr
hlt
mov
sub
repz
add
xchg
mov
xor
push
mov
dec
cmp
iret
stos
push
sarb
neg
repnz
mov
sub
ret
nop
xchg
out
sbbl
mov
cmp
pop
lahf
enter
loop
icebp
stos
xchg
scas
ja
leave
sub
hlt
and
cmp
insb
imul
sub
lret
jp
or
aam
pop
sbb
addr16
dec
push
pop
dec
xchg
add
addr16
sbb
xchg
subb
jb
or
jno
shr
or
lret
aas
cmp
subb
push
and
inc
push
mov
mov
and
les
and
pop
mov
scas
mov
or
das
mov
cmp
or
test
aaa
scas
loope
xor
mov
and
fucomip
aam
push
or
jle
jns
xchg
push
push
mov
adc
mov
or
mov
lock
jnp
jmp
bswap
jmp
xchg
jle
loopne
mov
mov
andb
and
jbe
xor
dec
lods
cmp
fmuls
or
xchg
push
cmc
sbb
jmp
sbb
test
fiaddl
or
sti
dec
push
in
add
mov
xchg
lods
xor
cmp
rol
repz
jbe
lret
fmulp
mov
dec
inc
fnsave
adc
and
frstor
ds
insb
ljmp
push
ret
ljmp
sbb
sarb
sbb
je
arpl
roll
and
ficoms
ret
fidivrs
push
and
movsl
addr16
stc
jno
fldt
mov
and
dec
and
cmpsl
mov
mov
fsubl
adc
les
add
test
push
xchg
jp
fmuls
cmc
fs
jno
jg
das
mov
xchg
add
cwtl
fwait
sti
jbe
xor
add
or
in
lods
lds
outsb
dec
clc
mov
add
les
lods
sahf
mov
jle
insb
mov
fidivl
icebp
je
and
sbb
insl
popf
sub
cmp
inc
jmp
scas
cmpsb
mov
test
test
inc
repz
in
or
and
dec
jae
xchg
sub
rolb
mov
lds
aaa
dec
xchg
jns
insb
popf
icebp
sub
adc
sti
pop
fiaddl
ljmp
dec
jns
scas
add
add
or
xor
test
and
test
outsb
aaa
lock
out
jecxz
in
dec
inc
sbb
sub
sbb
pusha
aaa
into
rorl
mov
jge
test
xchg
inc
jp
and
jns
jecxz
movsb
dec
es
dec
sub
cld
jbe
jb
sbb
leave
mov
jecxz
xchg
or
mov
pop
cmp
ljmp
repnz
in
add
nop
je
mov
or
push
adc
cmp
or
in
aaa
sbb
push
out
fucomi
add
bswap
popa
inc
daa
insl
loopne
pop
neg
dec
in
jmp
xor
inc
test
cwtl
enter
rol
pop
sahf
sbb
insb
add
inc
mov
mov
fsubrl
sub
ja
pop
enter
jge
lcall
mov
fwait
sub
sbb
mov
or
fwait
xor
int3
lds
lds
stos
clc
jae
rcrl
adc
push
shrl
mov
or
cs
int
add
stos
fisttpl
insb
cmpsb
cmp
jle
lret
iret
jecxz
test
fstps
jmp
sbb
test
fstps
cmp
mov
jne
insb
jbe
sahf
xor
pusha
inc
enter
jmp
and
movsl
mov
insb
test
xchg
flds
or
mov
xchg
sub
inc
inc
in
dec
and
lahf
int
xchg
mov
gs
scas
scas
inc
loopne
push
aam
xchg
push
popa
setle
aad
mov
jne
jbe
push
jae
jae
adc
cmc
mov
mov
sbb
aam
jle
pop
icebp
xor
jmp
cld
js
dec
dec
scas
mov
loopne
pop
out
or
in
sbb
lods
adc
cltd
das
ret
std
test
mov
adc
mov
out
mov
jno
adc
xchg
inc
sub
jne
andb
popf
mov
mov
iret
pusha
pop
xchg
cmpsb
cmp
mov
pop
call
jb
sub
cs
mov
mov
aad
sub
xor
add
add
or
xchg
fsubrs
cmp
testb
fdivrs
cmc
cmp
mov
cltd
xchg
mov
vsubpd
jno
jbe
jns
cmp
das
in
popa
in
jno
or
loopne
aam
notb
movsb
fs
or
push
lahf
ss
enter
inc
and
rorl
mov
cmpsl
jle
pop
fs
mov
mov
nop
add
sbb
inc
fisubl
ljmp
mov
cld
pop
test
xor
xor
dec
rcrb
push
arpl
rolb
push
add
das
dec
decl
jbe
das
jl
xor
lret
fucomp
int3
daa
cld
outsl
movsl
push
shr
inc
dec
pushf
or
mov
pop
dec
aaa
inc
rolb
push
movsl
js
and
ljmp
scas
mov
and
je
out
xchg
pusha
clc
cmpl
lock
jle
lcall
and
add
inc
mov
jnp
repnz
ret
push
dec
ret
clc
lock
movsl
in
aam
or
pop
pop
ljmp
jae
cmc
and
push
mov
lods
jl
test
mov
push
adc
sbb
lock
outsl
int
adc
repnz
sbb
inc
movsb
cmp
hlt
adc
cmp
push
andl
lods
cmc
sub
jecxz
jle
or
dec
addl
repz
mov
add
cltd
xor
sbb
add
xchg
je
insl
jge
and
sub
mov
jno
cmc
cmpsl
cmp
adcl
add
popf
push
push
xchg
dec
cmpsb
inc
jmp
xchg
mov
pop
rclb
cmp
cli
clc
xchg
out
xchg
data16
or
mov
push
data16
movsb
and
and
test
push
add
lcall
out
push
mov
faddp
lcall
xor
out
dec
fcoms
jns
xor
add
into
add
mov
stc
and
ljmp
dec
aaa
outsl
jb
imul
shll
divl
jae
sbb
in
xor
or
mov
sbb
pop
add
scas
adc
xlat
hlt
mov
and
les
mov
dec
out
sub
cmp
pop
mov
lods
add
jb
fildl
lahf
dec
and
imul
out
fwait
adc
es
aas
cmp
sub
daa
mov
adc
mov
movsl
aad
sbb
repz
lods
test
scas
adc
out
jge
mov
mov
cmpb
pop
pop
cwtl
inc
adc
xchg
mov
adc
mov
fwait
xor
jb
sbb
mov
jl
addb
dec
pop
int3
jne
cmpps
adc
outsb
xor
cmc
movsl
mov
or
shl
dec
push
movsl
movsb
shl
into
sub
shrb
jae
or
mov
cli
sar
mov
sub
and
sub
dec
fs
and
lret
and
and
std
je
popf
movsl
push
mov
sbb
dec
pop
mov
movsl
test
inc
cltd
bound
popf
push
cs
aam
outsl
push
jge
andl
ret
sub
ficomps
dec
cwtl
pop
xor
or
push
push
pop
mov
pop
scas
ljmp
mov
cmp
sbb
jnp
push
popa
js
lret
push
xor
and
inc
stc
push
mov
cmp
push
mov
mov
sub
stc
pop
mov
xor
pushf
ret
pop
into
dec
idivb
stos
dec
pop
ffreep
dec
incl
aaa
dec
xchg
mov
fmull
or
pop
ret
jle
cltd
in
pop
addr16
jno
mov
xor
sbbl
lcall
jp
sub
cmpsl
pop
sub
add
out
shr
pop
into
out
sti
repz
add
mov
notl
adc
push
out
ret
inc
pop
hlt
xchg
or
pop
jle
ret
jle
sbb
pop
inc
outsl
in
std
movsb
xchg
out
shlb
lahf
dec
stc
push
mov
movsl
jo
mov
xchg
jnp
fisubrs
push
xchg
stos
jl
inc
fwait
pop
jp
loopne
movsl
and
lret
pop
into
sbb
ret
addb
jg
pushf
das
aam
cmp
push
outsb
addb
xor
adc
ret
inc
iret
dec
and
outsb
loope
mov
fs
dec
scas
mov
jo
decb
xchg
ss
stos
add
adc
mov
loopne
frstor
jbe
xchg
lahf
xor
mov
xchg
cmpsl
lods
mov
inc
das
sub
push
call
sbb
inc
std
add
imul
out
push
lret
xlat
int
or
rclb
and
jge
mov
jbe
push
andl
or
cmp
in
std
movsl
sbb
mov
and
mov
adc
mov
mov
adc
mov
mov
ja
cltd
fsubs
pop
pop
bound
test
mov
mov
and
dec
sahf
xchg
in
cmp
inc
lods
jp
mov
jle
mov
stc
xchg
imul
sbb
ljmp
icebp
insb
test
shrl
add
ret
push
jl
cmp
test
push
mov
mov
fnstsw
xlat
repz
inc
insb
lea
hlt
enter
mov
mov
pop
jmp
mov
mov
inc
jp,pn
aaa
lret
nop
out
pop
pushf
pop
add
push
add
jno
cmp
lea
ja
add
loop
dec
out
sbb
ds
and
cld
pop
mov
sahf
cmpps
daa
enter
fldt
or
stc
mov
dec
or
cmp
or
sbb
mov
and
mov
fbld
xchg
xchg
in
xchg
fwait
nop
pop
inc
roll
adc
pop
sahf
das
mov
dec
ficoml
cmp
mov
clc
or
cs
sub
and
jmp
lahf
cmp
sbb
js
push
or
dec
into
push
jb
out
mov
jne
dec
sbb
jae
stc
dec
mov
cs
dec
and
inc
inc
cltd
add
dec
or
inc
fwait
out
outsl
icebp
adc
scas
fdivs
pop
test
xor
imull
int3
mov
pop
sub
dec
paddusb
sub
dec
push
insb
insb
scas
mov
cmpsb
into
jle
mov
sbb
cmp
jb
lock
xor
mov
cmp
mov
jge
cmp
mov
pop
sbb
xchg
pop
sub
lods
sbb
loope
ljmp
jne
mov
test
xor
sub
in
in
stos
lcall
out
lods
mov
aam
dec
loope
testb
js
mov
stos
push
pop
and
lret
in
cmp
data16
xchg
pop
push
jb
inc
jg
adc
outsb
push
mov
jl
jb
int3
shrl
or
mov
sbb
sub
pop
cmp
xor
mov
fwait
sub
loopne
inc
popf
mov
or
mov
scas
and
repz
cli
in
daa
sahf
cmp
sbb
popa
and
or
cmpsl
cmp
aad
lret
cmp
jg
ds
xchg
pop
adc
outsb
add
in
sub
dec
bndstx
push
and
cmpsb
fisubrl
add
sub
ret
sbb
lods
inc
dec
pop
cmp
loope
adc
lods
inc
sub
into
push
rolb
cli
mov
int
xor
jle
mov
inc
push
cmpsl
shl
push
push
mov
jno
loopne
fcomps
inc
cli
xchg
mov
fwait
jbe
lods
push
scas
jne
fyl2x
xor
movsb
sbb
cmp
inc
push
or
sub
enter
dec
jo
jge
jbe
sbb
mov
sbb
cld
or
cmp
push
add
ret
lret
cmp
shrl
addr16
cmp
icebp
test
or
adc
and
mov
ret
jnp
dec
frstor
js
sub
pop
testb
pop
ret
jo
add
push
fbstp
mov
rcll
mov
mov
lahf
out
jmp
xlat
aas
in
or
adc
jno
mov
or
outsb
jp
add
dec
push
mov
shrl
sbb
enter
pop
sahf
and
arpl
lods
jns
dec
cpuid
cmp
mov
ret
mov
cmc
mov
mov
cmc
mov
mov
pop
dec
inc
pop
rcl
fbld
mov
jne
cmpb
movsl
lods
inc
dec
bound
jecxz
jo
aad
icebp
in
insb
fmuls
pushf
mov
mov
testl
insb
mov
dec
mov
iret
iret
jle
and
jg
cmpb
inc
pop
insb
pop
sub
mov
mov
or
dec
cli
sahf
std
cltd
int
dec
adc
inc
push
aad
inc
and
xchg
sub
lcall
xchg
inc
xor
loop
add
mov
fcmovnbe
jp
mov
cmp
push
or
dec
fildll
lret
data16
popa
mov
xor
popa
mov
add
cli
mov
push
cmc
cmpl
mov
xor
imul
subb
push
fildl
arpl
stos
rcrl
clc
andl
movl
insl
shrl
js
mov
icebp
push
pop
into
nop
sti
xchg
ret
out
fadd
sti
scas
mov
cmp
add
fsubrs
or
adc
ja
push
outsl
daa
mov
aam
jb
dec
movsb
jecxz
je
nop
cmpsl
sarl
shlb
xchg
lock
loope
arpl
mov
mov
ret
je
fisttpll
pushf
pop
add
arpl
lods
jae
or
stos
nop
sbb
pusha
inc
add
sbb
test
or
or
mov
sbb
mov
jno
lock
dec
push
push
test
jmp
shlb
daa
sti
mov
sub
repnz
jo
adc
jnp
add
dec
xchg
cwtl
and
loopne
or
or
push
sbb
sub
push
mov
hlt
sbb
push
sbbb
popa
adc
stos
ds
add
lds
notb
and
cmpsb
int
mov
sub
pop
adc
mov
lahf
push
in
shlb
cmp
popf
out
add
push
jbe
adc
xchg
js
into
stos
sbb
or
imul
test
mov
sub
mov
fidivs
mov
dec
in
negb
adc
negl
sub
sub
addr16
adc
mov
fwait
xchg
js
fistl
sub
cmpsl
fisubrs
test
mov
cli
and
movsb
int3
cmpsb
fisubs
xchg
into
mov
jb
cwtl
sbbb
shll
mov
jl
inc
scas
out
and
xor
pop
pop
test
sar
cmc
lea
jmp
repz
test
cmc
jno
sub
int
in
out
cmp
cmp
cs
idiv
into
push
push
push
adc
imul
cwtl
das
in
insb
call
sbb
sbb
pop
jb
fwait
xor
xchg
iret
outsl
mov
sub
mov
pop
lock
mov
lcall
and
jp
aas
xlat
data16
arpl
mov
jle
in
push
lahf
lods
decl
mov
adc
and
jno
mov
clc
test
mov
xchg
mov
aad
mov
or
mov
mov
or
cmp
xchg
add
loopne
movd
dec
dec
iret
data16
jno
inc
pop
jbe
pop
mov
and
fisubl
in
mov
aas
in
mov
dec
addr16
insl
ja
stc
xchg
sub
shlb
mov
xchg
sbbl
push
fstl
sub
fwait
mov
mov
and
and
dec
pop
mov
sti
push
mov
mov
push
mov
sub
movsl
imul
rorl
xchg
fists
jo
mov
flds
ds
stc
repnz
test
mov
mov
jge
aam
adc
int
adc
cwtl
leave
push
cltd
inc
mov
popa
ljmp
push
adc
lcall
cwtl
stos
mov
pop
cmp
pop
rclb
xor
sbb
and
stos
ror
pop
inc
call
jecxz
int3
push
fbld
sub
jmp
std
or
icebp
pop
stc
push
push
into
test
leave
push
inc
roll
dec
mov
add
daa
mov
shlb
pusha
add
add
cld
cwtl
xor
fimuls
pop
fdiv
and
ret
repz
aam
clc
ss
scas
or
cli
enter
jmp
or
mov
pop
inc
cwtl
push
rorb
imul
lahf
in
roll
dec
fsubrl
dec
and
pop
cwtl
stos
ret
out
add
sbb
lcall
test
ds
add
pop
lea
or
mov
stc
cmpsb
sub
call
or
stos
inc
xor
or
pop
les
orl
fimuls
movsl
bound
jmp
pop
test
rorb
test
js
mov
or
pop
in
nop
popa
mov
pop
cmp
scas
pop
dec
inc
pop
jns
addr16
test
js
sbb
sub
les
xor
jmp
lods
jle
push
or
outsb
insb
add
add
gs
lods
pushf
xchg
rcl
stc
add
daa
mov
cmpsb
cltd
mov
loop
jno
and
mov
push
jnp
xor
cli
cmp
negb
jecxz
mov
mov
pushf
decb
mov
loop
xchg
mov
mov
test
sbb
hlt
test
cli
jecxz
jmp
pop
inc
mov
imul
jge
stos
and
jmp
rolb
iret
push
pushl
bound
add
pop
bound
sbb
push
adc
adc
jle
in
fistpll
xor
je
or
mov
pop
stc
dec
sbb
dec
mov
adc
out
mov
jle
icebp
loop
xor
arpl
xchg
mov
testl
sbb
lods
sbb
jno
pusha
mov
and
test
hlt
cmp
lcall
aam
and
andl
dec
pop
not
mov
insb
mov
enter
cmp
xchg
in
in
ja
sahf
and
or
adc
push
and
and
and
add
ja
loop
jae
sbb
enter
or
scas
sti
xchg
and
mov
cltd
dec
inc
push
jecxz
inc
cli
adc
pop
stos
jae
cwtl
lcall
cmpsl
pop
int3
and
dec
and
cmp
adc
dec
insb
sub
xor
pop
cmp
sub
insb
pusha
push
add
cmpb
daa
mov
pop
sub
add
sub
insb
popf
and
fs
jmp
ja
pop
and
push
push
jp
cmp
mov
dec
jl
cmp
stos
mov
sub
lods
and
std
rorb
jb
hlt
dec
scas
ficoml
repz
xlat
inc
mov
pop
mov
lcall
xchg
xor
or
loop
mov
jo
sti
call
fs
mov
js
insb
sbb
adc
lea
jp
fsubl
adc
lcall
and
popf
leave
xlat
xor
pop
movsb
loop
sarb
push
js
pop
sbb
adc
cs
clc
jo
cld
mov
cmc
ret
lret
roll
cmp
or
dec
push
repnz
xor
in
push
mov
movsl
les
jecxz
sub
popa
ss
ja
mov
movsb
push
pop
cwtl
pusha
lea
fcomps
cmp
je
push
lcall
outsl
pop
shrl
rcrb
push
cli
insl
cmc
das
xchg
inc
lods
mov
sbbl
js
adc
imul
xchg
and
test
push
xchg
mov
mov
call
insb
mov
arpl
jo
adc
cltd
fdivrl
mov
popf
lahf
dec
push
loope
aas
xchg
stos
divb
mov
stos
data16
add
sahf
sub
js
xor
push
dec
test
jne
clc
push
dec
inc
pop
xor
sub
les
sbb
aaa
adc
scas
sbbb
xlat
mov
ret
out
xchg
xor
adc
jb
sbb
sarb
lock
adc
inc
call
in
dec
cmp
push
push
movsl
cmpsb
les
loopne
loopne
into
in
decl
mov
pushf
push
mov
jb
cmp
sbb
sub
jns
and
cmp
enter
push
sahf
cmc
and
dec
mov
mov
test
adc
sub
cmp
cltd
xchg
imul
jns
add
rorb
roll
sub
mov
mov
mov
pop
iret
push
xor
fneni(8087
mov
jno
sub
sub
jo
mov
movsl
push
inc
ficoml
cmp
jne
and
in
dec
mov
fmuls
sbb
xchg
push
push
aas
xchg
and
cltd
jge
fs
dec
fnstcw
les
rcll
adc
hlt
shrb
cmp
sub
mov
and
cld
inc
bound
mov
ljmp
jne
add
outsb
mov
sbb
jns
nop
flds
or
sbb
mov
lahf
jge
repz
cli
pop
mov
push
and
xor
out
fidivrs
inc
pop
insl
jg
fdivl
inc
mov
ret
loope
fsubs
nop
shrl
mov
add
bound
out
xchg
xor
or
lret
dec
ljmp
out
xchg
push
ljmp
icebp
insb
test
lret
hlt
sti
fidivl
sub
imul
popa
mov
mov
xlat
add
push
lock
xlat
cmc
pusha
les
int3
mov
mov
insb
cmpsl
js
mov
divl
mov
in
adc
mov
popa
cmpsl
pop
sbb
adc
mov
aam
and
push
jmp
inc
adc
mov
out
lds
cmp
push
and
adc
add
mov
and
dec
pop
ljmp
lahf
mov
cltd
inc
sbb
mov
cmpsl
out
daa
push
lea
bound
xor
xchg
or
adc
cmc
loopne
mov
xchg
mov
pusha
rorb
cmp
push
pop
dec
pop
jl
andl
repnz
bound
bound
sub
fsub
mov
sbb
call
mov
shlb
sarl
insb
pop
mov
inc
xor
push
xor
adcb
mov
pusha
lock
xor
jnp,pt
adc
dec
mov
lods
imul
push
adc
push
fucomi
sbb
jb
xchg
xchg
rorb
enter
popf
fstpl
add
repnz
or
xor
stos
cmp
faddl
jbe
xor
xor
and
cmp
inc
sbb
xor
mov
xchg
jmp
push
adcl
data16
in
test
jge
test
outsl
push
mov
push
xor
iret
inc
les
movsb
pop
inc
gs
jle
adc
dec
adcb
cmp
int
repz
dec
rcll
in
mov
hlt
and
mov
adc
dec
ds
mov
pop
cmc
addr16
xchg
in
test
sub
out
cmp
call
fistps
jo
jg
das
push
inc
and
rcrb
cmp
pop
jp
jno
cmp
xchg
sbb
es
cmc
adc
mov
push
inc
xchg
push
int
fisubrs
in
dec
fwait
mov
adc
addr16
sub
dec
aam
stos
cli
dec
test
sbb
jo
ljmp
insl
sahf
lret
mov
mov
arpl
mov
insb
or
sbb
add
mov
jl
shlb
das
sub
sub
mov
fwait
xchg
jl
flds
xchg
and
push
mov
ja
faddl
or
xchg
jge
lahf
push
xchg
push
je
mov
mov
repnz
jb,pn
or
cwtl
clc
push
push
repnz
lds
jg
cs
mov
stos
dec
pop
jp
loop
stos
dec
lahf
or
in
sub
push
inc
mov
cmc
fdivrs
or
sub
out
xor
lea
xorl
out
or
push
cmp
adc
sub
mov
pop
js
bound
push
jg
daa
inc
mov
insl
mov
movzbl
xchg
test
or
mov
jl
push
movsl
adc
out
test
repnz
test
inc
ret
jne
add
cmp
or
je
xchg
bound
dec
scas
mov
pop
stos
in
fsubr
lock
lahf
dec
lcall
push
xchg
nop
movb
mov
dec
aam
push
or
mov
arpl
fdivrl
aaa
insb
jb
aad
mov
shrl
cmp
or
sub
cltd
xchg
mov
pop
scas
notb
inc
sub
sub
in
in
negb
insb
mov
jnp
mov
test
aam
adc
jns
jle
pushf
fidivrl
xor
mov
pop
adc
and
aam
mov
jl
jp
xor
repz
into
push
fs
mov
add
ljmp
sbb
ret
cmpsl
dec
push
mov
ss
push
adc
add
add
jbe
gs
pop
ret
sub
pop
repz
mov
leave
jle
pop
ret
mov
inc
jle
mov
push
aam
push
testl
xlat
shll
pop
subb
push
dec
sbb
xchg
imul
loope
adc
xor
mov
in
test
or
loop
popf
cli
mov
sub
push
adc
xor
adc
push
addr16
movsl
andl
test
imul
dec
cld
jne
or
fdivrl
movb
addr16
jno
nop
push
aad
jbe
mov
movsb
frstor
jbe
add
lock
faddl
sbb
jg
jno
and
mov
fsubrl
pop
adcb
and
loope
arpl
out
dec
sub
clc
ss
xchg
stos
add
cltd
js
push
pop
add
mov
pop
fistpl
stc
popf
stos
ss
and
enter
aaa
push
jmp
scas
jo
jg
fistps
xchg
push
in
xor
jp
push
push
or
stc
sub
or
sarb
add
xchg
mov
xchg
cs
add
mov
jecxz
lods
ret
xor
xchg
cmp
inc
pop
sbb
and
js
sti
push
jo
popf
stos
data16
lock
jecxz
sbb
sub
iret
lret
lods
add
push
mov
imul
js
sub
jmp
sbbl
or
inc
addr16
hlt
pop
mov
cmp
jne
dec
rcrb
pushf
das
pushf
push
push
ljmp
call
out
jo
inc
pusha
idivl
pop
xchg
hlt
mov
shl
xlat
sub
mov
mov
mov
fs
cmp
lret
sti
mov
mov
push
das
pop
jle
mov
jnp
cli
add
mov
jp
incl
shlb
gs
fstl
iret
loop
popa
fwait
subb
cmp
aad
inc
repz
mov
imul
cmp
rcrl
clc
dec
push
add
sbb
or
leave
pusha
dec
pop
or
scas
lcall
and
lret
jo,pt
pop
mov
ret
mov
mov
jg
enter
stc
test
pusha
mov
fwait
andb
mov
inc
fcoms
xor
sub
test
dec
pop
outsl
iret
mov
aad
stos
insl
loopne
mov
test
mov
shlb
hlt
xchg
aam
xchg
sbb
lea
adc
js
jo
scas
and
add
mov
movl
add
popf
xor
mov
mov
or
std
daa
lret
icebp
stc
lcall
ja
hlt
mov
in
push
imul
dec
jbe
xor
adc
xchg
js
ret
mov
cmpsl
inc
flds
inc
repnz
pusha
iret
xchg
push
mov
jno
push
sub
add
je
and
outsl
popa
cmpsl
xchg
mov
fcompl
or
mov
mov
out
jne
mov
push
mov
ljmp
jle
lds
aad
mov
sahf
adc
int3
mov
push
shlb
xor
mov
int
les
mov
fsubr
lret
mov
xor
lods
jl
sub
cld
les
ja
insb
rclb
popa
or
arpl
pop
aas
mov
dec
mov
outsl
roll
int
into
aas
pop
and
and
jmp
inc
imul
add
sbb
out
jmp
push
ljmp
mov
ret
insb
pop
jecxz
jno
jns
inc
and
fsubrl
lcall
sub
ja
ja
pop
mov
mov
xchg
outsb
sbb
mov
add
inc
stc
adc
inc
add
daa
in
mov
test
xlat
repz
xchg
jb
scas
ret
mov
push
mov
jmp
enter
xchg
pop
pop
inc
mov
pop
mov
sbb
popf
jnp
inc
push
mov
mov
dec
hlt
popl
aas
mov
mov
ficoms
pushf
mov
cmpsl
pop
inc
into
lahf
and
out
int
cmp
in
test
pusha
orb
popf
bound
dec
dec
out
in
jb
dec
adc
push
jle
mov
push
sbb
xor
andb
pop
test
push
jb
push
lods
out
dec
cmp
aam
stc
mov
scas
stc
cwtl
ja
dec
pop
push
cwtl
adc
je
or
arpl
nop
daa
repnz
adc
xlat
jg
sub
loope
ret
mov
sub
push
call
cmp
repz
xchg
test
fsubl
idivl
ljmp
fwait
push
sub
add
int
mov
mov
adc
add
push
icebp
outsl
imul
pop
test
xor
gs
cmp
push
push
mov
nop
scas
pop
jae
cmc
call
inc
in
cs
clc
pusha
lea
ret
pop
cmpb
jecxz
jl
insb
shrb
xor
mov
mov
pop
xor
incl
xchg
sub
and
mov
ret
mov
ja
aam
arpl
lcall
aad
lcall
rcl
mov
into
xor
inc
subb
inc
or
xor
pop
mov
jp
push
aam
sbb
icebp
in
out
mov
lret
xchg
or
cltd
xchg
or
and
jo
loope
mov
in
jbe
stos
loopne
adc
inc
in
stos
and
xor
notl
cmp
or
iret
sub
jae
repz
pop
divb
inc
movsl
mov
jno
ljmp
in
mov
cli
popa
loope
cmp
daa
pop
test
push
cmp
adc
insb
adc
adc
mov
adcb
mov
test
push
push
lds
loop
cmp
call
int
pop
push
testb
jns
mov
jg
in
mov
popa
mov
in
adc
fstpl
mov
test
adc
fwait
pop
addr16
jl
das
cmp
loope
fstl
fisttpll
push
cmpsb
push
fs
int3
loopne
incb
dec
mov
ds
loopne
jae
leave
push
lock
stos
daa
es
add
test
and
push
xorl
and
stos
cli
mov
in
pop
push
jl
or
push
es
jb
or
mov
dec
std
out
iret
loope
test
xchg
jle
enter
jno
mov
mov
movzbl
shll
mov
loop
ljmp
aas
adc
xchg
inc
pop
dec
in
mov
push
and
jle
nop
mov
and
dec
push
enter
adc
fsub
cmp
jmp
aaa
lcall
clc
or
ret
popf
popa
sbb
frstor
jnp
popa
call
movsl
fsubr
dec
test
negb
mov
out
xor
inc
int
cmp
jne
xor
es
mov
pop
pop
push
lods
cmp
das
and
sbbl
xor
adc
pushf
dec
dec
pop
cmpsb
push
movsb
push
pop
xor
cli
aad
xchg
cmp
ret
mov
mov
xor
ja
dec
and
in
fstl
incl
aaa
push
iret
sub
inc
cltd
inc
lea
sbb
in
sarb
mov
mov
subb
jbe
daa
xor
data16
jecxz
insl
sbb
sbb
je
and
icebp
and
int3
clc
cmpsl
jecxz
mov
push
ljmp
call
and
ja
mov
pop
push
xor
and
jb
ret
js
outsb
cltd
push
jae
push
sub
shrl
mov
ja
xchg
leave
sbb
jge
push
dec
outsl
ficompl
pop
fsts
jnp
mov
stos
push
mov
clc
lret
addr16
push
pop
mov
mov
push
jp
dec
pop
out
das
push
loop
adc
mov
aas
push
addb
jecxz
cmpl
push
push
leave
mov
insb
and
push
cwtl
inc
push
pop
sbb
int3
arpl
cld
lea
or
jnp
xor
dec
jno
jge
aad
movsb
sahf
jno
inc
cmpsl
pop
lret
pop
popl
arpl
jns
orb
jmp
outsl
out
loope
and
cmp
data16
je
in
pop
lods
and
das
repnz
sub
and
dec
cmp
call
xchg
test
out
sub
sub
xchg
push
dec
dec
shl
and
jle
repz
sub
mov
addr16
stc
std
subb
vcvttss2si
and
add
and
push
fs
clc
lods
das
and
push
add
int3
fsub
jo
es
sahf
cs
bound
xlat
shrl
pusha
subb
or
cmp
out
xchg
xor
xor
cmc
inc
mov
push
int3
mov
pop
mov
adc
dec
iret
mov
dec
push
stc
lret
xchg
mov
xor
out
sarl
dec
or
dec
rolb
sarl
flds
ror
dec
jecxz
sti
pop
inc
in
scas
mov
push
adc
mov
mov
outsb
aaa
dec
dec
cli
pop
popf
or
cmp
inc
stos
inc
subps
inc
xchg
dec
fadd
insb
addb
mov
mov
test
mov
lret
in
sub
in
ss
sub
imul
aam
sbb
in
scas
inc
sbb
and
aad
mov
cld
push
dec
outsl
pop
shl
mov
mov
cltd
cmp
in
loop
out
js
pop
mov
sbb
xchg
adc
les
mov
and
mov
sbb
inc
data16
aaa
pusha
aas
sti
cmp
pop
dec
sub
outsl
outsb
in
mov
outsb
sub
cmp
fdivs
dec
xor
pop
nop
add
aam
mov
testb
scas
fcmovnb
adc
xlat
push
push
jns
xchg
mov
sbb
out
inc
and
xchg
das
cmp
and
cmc
pushf
mov
or
sbb
loopne
sti
hlt
mov
mov
sbbb
jmp
sbb
pop
or
push
jmp
sub
test
out
imul
lock
mov
js
addr16
xchg
mov
xlat
lea
aaa
lock
pop
stos
dec
pop
pop
test
dec
fcomps
sub
dec
movsl
movsb
push
jae
orb
in
add
mov
je
lcall
popa
sub
dec
test
inc
add
inc
fdivrl
push
call
int3
ret
pusha
push
inc
rcrl
out
loope
xor
arpl
test
jp
pop
popf
jne
shr
xlat
push
adc
jo
mov
push
outsl
mov
bnd
jae
sti
adc
daa
jbe
xor
mov
adc
mov
call
jl
push
leave
push
daa
in
stos
adc
flds
addr16
sbb
inc
push
fidivs
inc
int
mov
arpl
dec
mov
jbe
fdivrl
sbb
and
jp
test
cmc
add
stos
sub
fistl
popa
or
in
aad
fdivp
adc
mov
jo
jo
ror
xchg
inc
popa
aad
cmp
aam
mov
aam
andb
cmc
fnstcw
aas
jae
outsl
aad
jb
fwait
lret
mov
push
insb
pop
sub
jle
sbb
out
lods
push
sbb
adc
sub
out
scas
enter
sbb
in
xor
out
icebp
push
push
lds
adc
or
mov
fldt
nop
mov
pushf
xchg
sub
mov
mov
in
inc
mov
js
fstps
push
jmp
dec
in
repnz
mov
inc
sti
inc
add
adc
inc
xor
mov
and
cmpsl
xchg
aad
enter
out
and
jnp
mov
mulb
mov
ds
repnz
sub
repz
xchg
jp
sub
mov
mov
jecxz
jg
rcll
dec
into
loop
push
dec
pop
push
ljmp
sbbb
je
or
hlt
xchg
mov
mov
mov
xor
iret
out
pop
das
push
or
mov
loop
push
cmp
mov
add
xchg
inc
xchg
clc
ja
bound
sub
sbb
ja
adcl
or
scas
out
repnz
mov
mov
mov
out
test
es
cli
scas
inc
adc
xor
bound
cltd
and
or
jl
mov
jg
and
pusha
mov
pusha
or
out
stos
sahf
xor
fdivrl
mov
stos
cmc
pop
jg
push
push
and
test
imul
lret
mov
shrb
xchg
mov
iret
popa
andl
out
data16
add
mov
mov
dec
sarl
sub
loope
xor
insb
inc
imul
xchg
leave
aad
adc
dec
sub
xor
call
jo
pop
out
push
sti
sti
jbe
nop
jbe
jmp
icebp
and
inc
clc
dec
mov
outsb
sub
sbb
mov
or
and
xchg
add
mov
xchg
out
popa
pop
jb
cmpsb
mov
xchg
outsl
and
and
mov
xor
xchg
pop
dec
movsb
repnz
jge
dec
mov
xchg
ja
push
adc
push
movsb
mov
repnz
stos
jmp
out
dec
pop
xchg
in
sbb
mov
xchg
repnz
mov
adc
out
push
inc
cmp
enter
inc
ljmp
call
fwait
mov
mov
add
pop
outsb
and
pop
mov
jmp
sub
xchg
sarb
jmp
cmp
adc
pop
lret
push
addr16
addr16
repz
into
gs
pop
mov
and
insb
add
add
sahf
mov
inc
cmc
push
or
sub
popf
xor
loopne
jg
and
mov
push
xchg
sub
pop
inc
inc
or
mov
rolb
cmp
ror
xlat
jmp
mov
cmp
lock
les
mov
pusha
aas
push
mov
test
xlat
cmpsb
aaa
lahf
mov
mov
aam
sbb
pop
mov
mov
dec
xchg
orb
cmp
sbb
in
test
cmpsb
pusha
ss
lcall
inc
pop
adc
push
mov
add
notl
jp
dec
scas
fstpt
daa
and
xchg
stos
cli
inc
mov
rolb
test
or
jg
xorb
leave
jecxz
adc
push
mov
lret
data16
xchg
pop
and
mov
testb
pop
jnp
sub
mov
mov
idivb
adc
cli
callw
cwtl
jae
pop
fisubs
cli
xchg
jmp
pop
cmc
add
lret
jge
cmpsb
enter
xchg
int
jmp
adc
cmpsl
adc
in
sahf
mov
lds
inc
pop
push
outsl
push
test
adc
and
inc
mov
jg
je
jne
lds
pop
cmp
push
loope
xchg
dec
mov
jo
xchg
lods
fcmovnb
xor
mov
and
mov
out
mov
fnstenv
lret
jo
fcmove
iret
dec
pop
bound
aad
test
sub
std
aam
icebp
dec
mov
aas
nop
outsb
cmp
mov
add
movsb
cs
xorl
test
fiaddl
dec
mov
aas
push
std
leave
cmova
rcl
pop
sbb
clc
jl
mov
iret
push
clc
push
punpcklbw
mov
xchg
xlat
int
inc
mov
gs
dec
fdivs
xor
rorb
dec
mov
inc
insb
cmp
pop
dec
out
cmpsb
mov
sub
loopne
jp
dec
ret
xor
xorb
fimull
jo
mov
cmpsl
inc
stos
pop
mov
cmpsl
cmpsl
mov
and
adc
or
hlt
mov
xchg
or
fwait
ss
adc
mov
mov
or
fisubrl
cmp
in
popf
add
or
add
lock
cmpsl
jns
push
out
mov
test
cmpsl
dec
pop
repz
bound
ret
sub
pop
jl
or
xchg
jmp
in
out
or
xor
lret
fnstenv
mov
xchg
mov
lods
sbb
in
jle
xadd
cmpsl
pop
loope
imul
popf
xor
out
add
push
out
inc
movsb
je
fcoms
aad
mov
lds
shrb
aam
jb
sbb
push
adc
lcall
and
imul
xchg
sub
pop
inc
jmp
sti
aam
iret
push
ljmp
movb
hlt
fbstp
dec
dec
pusha
pop
jl
into
gs
imul
insb
cmp
in
movsl
fs
and
test
mov
sbb
fsubrp
lods
ljmp
adc
xor
jecxz
sbb
loopne
imul
adc
imul
push
test
ja
and
mov
int
loop
push
adc
cmc
mov
cwtl
jne
mov
adc
push
adc
lret
lds
hlt
push
movaps
repnz
cwtl
lahf
and
icebp
pop
or
xor
addr16
pop
inc
fcoms
int3
and
dec
mov
or
jbe
jae
sbb
into
mov
je
adc
xchg
inc
shlb
lret
outsb
cmpsl
cmp
das
add
loope
stos
scas
xchg
ficoml
adcb
hlt
icebp
test
std
and
es
int3
in
mov
pop
cmp
mov
int3
out
adc
das
jg
es
inc
in
rcrb
pop
insb
sub
sub
xchg
push
sbb
leave
and
xor
mov
cmp
rcr
and
pop
xlat
mov
jge
sbb
imul
lea
enter
pushf
push
addl
mov
pop
dec
dec
inc
mov
push
pop
add
fldt
cmp
push
or
adc
xchg
xor
ret
mov
ja
daa
outsl
sub
or
cmp
ret
pop
dec
jmp
into
dec
insb
or
outsb
push
in
ja
sub
mov
pop
mov
add
inc
pop
mov
out
jecxz
adc
pushf
stos
jbe
aad
jle
movsb
out
pop
loope
stos
jne
cmp
jns
ja
aas
dec
in
mov
dec
out
js
jge
lret
push
sub
pop
mov
push
dec
sbb
inc
cmp
or
xor
sub
mov
outsb
ret
and
sub
add
xchg
ds
add
and
and
shlb
je
and
arpl
sbb
insl
rcrb
arpl
imul
in
xor
test
push
sub
cld
or
inc
sahf
or
dec
mov
jne
xor
xor
adc
dec
loope
mov
in
dec
enter
mov
dec
mov
fcomps
cltd
cltd
pushf
roll
or
dec
mov
adc
mov
das
es
ja
adc
aad
jno
inc
ss
or
movsl
and
stos
ficoml
dec
pop
mov
test
xchg
ds
rclb
out
jle
inc
pop
adc
add
lahf
mov
xchg
and
fstps
xor
mov
pushf
xor
jge
mov
or
popa
xor
lods
jp
adc
aaa
jns
add
jp
gs
xchg
fadds
in
mov
add
push
cmpsb
dec
cmp
sahf
mov
int3
sbb
test
adc
in
pop
out
das
ss
je
inc
jns
mov
sahf
add
test
or
xor
fistpl
jge
push
scas
mov
xlat
jb
push
ljmp
mov
xor
mov
or
push
sti
and
sbb
in
push
popa
cmp
negl
test
idivb
sub
inc
lcall
and
sbb
test
stos
mov
aas
mov
sbbb
out
mov
pop
mov
shll
mov
into
ret
insl
add
cli
xor
sbb
lret
jl
and
lods
or
movsb
repnz
jae
mov
mov
sbb
jno
outsl
loopne
jp
std
and
rcll
cmp
out
leave
push
jmp
cmc
xchg
ds
sbb
loop
inc
mov
push
jge
xchg
sbb
test
stos
inc
jge
pop
hlt
std
sahf
cltd
rcrl
lock
and
ret
outsb
movsb
fs
xor
sarl
push
cltd
leave
or
std
mov
cmp
das
adc
jle
ret
inc
push
ljmp
cwtl
pop
fsubr
in
or
cmpsl
mov
inc
pushf
xor
ret
outsl
mov
mov
push
xor
lods
iret
add
inc
out
lcall
mov
repz
mov
pop
into
int3
enter
jecxz
fisttps
sbb
sub
filds
cmp
call
leave
cmp
mov
push
ret
mov
lahf
pop
jp
dec
sub
cmp
xchg
mov
xchg
dec
xor
or
pushf
mov
vmread
cmpsb
stos
inc
xor
or
push
outsl
push
adc
push
mov
adcl
aad
cwtl
iret
arpl
pop
outsb
xchg
ljmp
rcl
jg
into
loopne
mov
inc
add
aas
xor
setp
fsubrl
outsb
orb
push
push
pop
push
mov
inc
mov
mov
movsl
dec
out
popf
aaa
or
stos
cmpsb
xchg
inc
pop
int3
std
xchg
mov
push
mov
push
ds
out
iret
test
mov
int
negb
mov
les
lcall
pop
dec
out
xchg
mov
jbe
cmpsl
pop
rcrl
xchg
sub
les
cmc
mov
mov
mov
outsl
cmp
loop
mov
sti
add
pop
lock
orb
jp
out
jae
xor
hlt
aam
xchg
xchg
fldz
test
cmpsb
in
inc
ds
ret
test
adc
fs
bswap
test
dec
push
test
insb
ja
sti
test
xchg
movsl
inc
gs
push
mov
imull
jbe
xchg
cmp
std
bound
dec
out
and
push
fcmovbe
sub
out
mov
push
cmp
mov
pop
push
xor
add
dec
enter
stos
es
mov
lods
addr16
mov
addb
sbbl
clc
sub
into
das
mov
sbb
cmp
fdivrl
outsb
arpl
imul
pop
call
xchg
jecxz
sbb
sbb
scas
mov
and
inc
rclb
add
in
and
popa
imul
xchg
and
push
dec
sbb
jge
lret
pop
bound
sbb
lds
sub
jl
inc
sti
jae
push
dec
mov
push
push
inc
ficompl
push
add
sahf
lret
sub
je
mov
jmp
test
scas
mov
mov
xor
sub
sbb
push
cmpsb
sub
add
pop
inc
inc
mov
dec
mov
test
shr
pop
scas
sub
or
cmp
loope
pop
push
inc
pop
mov
iret
sub
cmpsb
sub
fldt
loop
mov
mov
jo
cwtl
test
xor
adcl
mov
pop
or
dec
je
xor
push
ret
cmp
inc
imul
sbb
mov
inc
test
mov
es
or
pop
hlt
or
outsl
outsb
xchg
cmpsl
push
or
enter
or
or
sbb
and
add
cli
mov
leave
mov
mov
loopne
adcb
fildll
or
dec
js
inc
xor
ret
push
ficompl
daa
or
push
outsl
sub
pop
ss
cmc
clc
into
leave
pusha
mov
addr16
lret
ds
fstp
and
inc
pop
sbb
mov
cli
popa
jne
sub
idivl
sub
pop
sahf
sahf
add
jne
out
xchg
add
pop
out
sbb
add
cmp
outsl
fisttpll
push
dec
xor
dec
push
sbb
int3
fildll
adc
je
pop
cmp
jg
sahf
or
js
and
add
jae
mov
jbe
push
sbb
rclb
pop
cmpsb
ret
cmp
orb
mov
pusha
add
adc
clc
loop
cmp
cld
add
into
sahf
sub
movsb
adc
jecxz
jns
daa
sbb
mov
xchg
adc
mov
or
cmp
inc
ss
inc
add
fsubrs
popf
scas
in
mov
cmpl
mov
in
xor
xor
mov
mov
mov
jp
xor
cmpsb
cltd
ficoml
test
mov
fidivs
lods
ljmp
lds
sub
jle
insl
xchg
ss
mov
adc
fcompl
repz
mov
mov
dec
sbb
sarl
sub
out
fimull
mov
cmpps
and
outsb
sbb
lods
loope
sub
inc
lock
lock
and
mov
clc
es
or
mov
sbb
popa
jl
stc
push
js
sub
aad
mov
dec
dec
xchg
inc
leave
mov
ffreep
fcmovne
int
mov
mov
stos
and
clc
test
rorl
jmp
les
sub
cmpsb
nop
cli
ficoms
push
or
pop
fadds
mov
jl
and
xchg
xchg
or
repz
jb
lret
or
mov
push
or
mov
in
test
or
frstor
aad
aas
cmpsb
push
insl
sub
xchg
mov
ret
movsl
dec
dec
mov
mov
dec
xor
aas
xchg
paddsw
in
cmp
loop
dec
fistps
mov
and
inc
sub
jo
cwtl
cltd
pusha
push
cld
xor
push
leave
or
es
push
xchg
sbb
outsl
jae
inc
mov
xor
inc
aam
popa
fchs
push
jne
scas
and
mov
in
les
testl
icebp
sbbb
insb
in
lcall
decb
test
jns
sahf
xor
or
pop
sbb
jbe
sbb
sahf
adc
and
popa
icebp
rolb
in
mov
lds
dec
cld
xchg
rcll
cmp
cli
pop
add
or
jne
jb
cmp
mov
hlt
pop
lret
ds
jge
and
clc
movsl
emms
fdivl
rcrl
pushf
push
add
pop
fstp
push
sub
jecxz
fldl
repnz
adc
inc
adc
and
jge
xor
mov
xor
xor
mov
insl
dec
xchg
and
or
cmp
sub
push
add
push
mov
and
insb
data16
mov
xor
mov
jnp
loope
pushl
jl
arpl
sbb
sub
or
frstor
addb
test
dec
mov
test
popa
push
call
clc
hlt
inc
sbb
sub
rcl
add
xchg
lea
cwtl
je
int
stc
nop
es
fnclex
jmp
jns
fildl
push
sub
imul
dec
lock
lret
into
nop
and
mov
jno
dec
adc
rclb
push
into
xchg
rcrb
and
pop
xchg
jns
jecxz
cmc
inc
mov
xor
pushf
daa
sub
or
andl
dec
add
xor
mov
dec
dec
and
outsl
loope
gs
or
mov
fiaddl
or
pusha
aaa
mov
in
xorl
leave
xor
push
jmp
add
cmp
jae
cwtl
mov
xchg
ja
mov
out
fldt
in
sbb
jp
xchg
jo
lds
or
fnsave
adcb
and
push
mov
pop
lods
ds
ja
inc
inc
xchg
sub
daa
test
or
sub
add
jne
xor
mov
jns
lret
into
ror
lods
call
mov
jp
jne
ss
rcrl
popa
push
mov
add
mov
addb
stos
rolb
xchg
sub
cs
dec
inc
cmp
ljmp
and
fs
mov
iret
repnz
stc
mov
stos
shll
hlt
push
pusha
sub
lods
inc
loopne
loopne
add
addr16
lret
xchg
sbb
xchg
add
or
adc
dec
push
enter
fwait
add
rcrb
mov
mov
jge
xor
movsb
aam
push
test
cmpb
cmp
aam
jmp
nop
mov
insb
pop
outsb
sbb
call
cmp
pop
cmc
repnz
or
popf
jl
iret
jb
movsb
mov
mov
leave
ja
or
cmp
cmp
aam
lret
clc
in
insb
nop
loope
push
adc
xor
in
pop
insb
js
leave
out
or
add
rclb
xor
cltd
xor
sbb
and
test
and
ds
stos
jne
fistl
adc
push
sahf
push
jne
stos
iret
jno
inc
xlat
or
in
sub
pusha
or
mov
andl
or
movsb
faddl
lret
cmpsl
nop
cmp
in
or
ja
cmp
jge
adc
or
out
scas
inc
inc
xchg
repz
mov
fsubrs
add
mov
mov
sbb
fiadds
enter
andb
xchg
movsl
push
cmp
int3
inc
stc
jns
movsb
cmp
xchg
repnz
sbb
ja
mov
in
fists
jno
sub
sti
sub
outsb
je
mov
sbb
cmpsb
repz
and
iret
pop
xor
inc
out
dec
lds
xchg
jo
out
mov
mov
inc
or
dec
mov
shlb
inc
hlt
mov
stc
cmp
sub
sbb
negl
xor
inc
jb
cltd
mov
test
enter
out
adc
push
ret
ret
mov
loopne
or
pop
test
pop
out
ret
adc
cmc
rcrb
jle
ja
das
test
dec
sub
adcb
mov
imul
xchg
lret
cmp
int3
adc
ljmp
xor
fdivrp
adc
ja
pusha
test
scas
jae
jns
mov
in
inc
pushf
xor
mov
cwtl
outsb
pop
dec
cld
in
aam
jp
test
cmp
js
in
mov
xchg
add
mulb
test
scas
subb
mov
pusha
jp
imul
test
dec
cmp
mov
sub
lods
adc
push
outsb
sti
outsb
js
mov
movsl
dec
adc
jae
imul
mov
in
cmpsl
je
into
imul
in
ja
jno
loop
jl
push
mov
in
and
xchg
insb
iret
out
pushf
or
stc
icebp
lock
lea
repz
adc
lods
shrl
incb
inc
andb
adc
add
jbe
adc
sub
out
lret
push
mov
inc
xor
sub
out
pop
push
dec
xor
mov
dec
dec
sub
mov
jl
mov
jns
dec
movsb
pop
sbb
dec
loopne
mov
jmp
sbb
fisubrs
gs
mov
cli
pop
cmpl
cmp
dec
pop
mov
out
mov
test
rorb
stos
sbb
out
or
fisubl
popf
xchg
mov
jg
in
lret
mov
cld
cmp
in
lret
test
mov
lods
mov
rcl
test
jo
jge
pop
lahf
jg
cmc
push
loopne
cmp
mov
sub
and
out
push
imul
gs
les
ret
lods
xor
xor
pop
int
mov
jne
mov
jmp
sub
addr16
adc
and
xlat
mov
mulb
xlat
jg
fxch
cmp
lods
cltd
cmpsl
ds
test
iret
pop
dec
cmp
add
sbb
add
xchg
pusha
xor
push
jb
jb
inc
mov
xor
cli
and
cmpsl
into
mov
mov
inc
ret
imul
mov
out
cmpsl
inc
int3
movsl
daa
ret
add
icebp
xor
sbb
pushf
cmp
fs
dec
jo
adcb
mov
lcall
xor
jns
lods
paddq
sbb
xor
jae
cmpsl
out
fnsave
ja
sub
jecxz
dec
mov
push
cmp
insl
dec
aad
ljmp
mov
fcmovu
mov
jns
push
xor
test
jb
jns
push
add
pop
ljmp
mov
fs
jl
negl
push
sarb
mov
hlt
outsl
repnz
dec
sub
aam
movb
popa
mov
push
push
addr16
lcall
mov
shlb
in
das
jge
and
adc
roll
bound
add
sub
xor
xor
movl
sbb
mov
mov
push
sub
or
xor
lret
mov
scas
xchg
mov
ret
adc
or
adc
enter
mov
outsb
push
adcb
jno
in
pop
mov
sbb
fisttpll
bswap
fnstcw
or
popa
push
out
cli
ja
adc
xor
sub
inc
mov
cs
mov
inc
cmc
push
pop
inc
jnp
shl
lahf
movsl
jae
test
xchg
jmp
add
imul
jne
mov
adc
daa
adc
or
popa
xor
fmuls
jns
stc
lods
mov
jnp
popa
mov
imul
mov
mov
loope
cmpsl
inc
jnp
sub
loope
inc
or
test
stos
jnp
bound
cs
fcompl
push
xor
shl
iret
pushf
loope
imul
rcrl
mov
test
sub
mov
cmc
pop
jne
lods
sbb
mov
or
pop
fsubl
cmpb
repz
in
fsubrs
inc
jns
cmpsl
push
push
xchg
ss
push
mov
dec
xchg
add
nop
adc
cmc
int
jno
inc
dec
xor
pop
sub
pop
lcall
and
lretw
xor
pop
in
mov
scas
pop
cmp
xlat
insl
cmp
mov
repz
clc
cltd
push
cltd
and
stos
mov
in
adcb
shll
pusha
or
sbb
add
mov
xchg
inc
and
jne
xchg
subl
or
sub
mov
or
jge
cmpsl
or
pop
test
mov
mov
jbe
shll
or
divl
push
push
jno
lahf
add
xchg
xchg
mov
mov
jnp
inc
aad
jmp
stos
popf
jg
es
push
add
jne
xchg
jno
dec
push
xor
movsl
enter
out
and
out
mov
cmpb
ss
inc
data16
fsubrs
xor
fcmovne
push
mov
pop
nop
jge
pop
pop
insl
notb
mov
fsubr
enter
mov
inc
in
lods
enter
jno
test
add
scas
and
pop
pop
push
mov
repnz
aam
loope
add
or
xlat
insl
add
loopne
sahf
adc
ror
cli
jbe
test
or
rolb
in
xor
popf
xchg
pop
loopne
cmp
push
pop
bound
push
imulb
repz
aaa
mov
mov
add
orb
sub
mov
testl
push
sbb
pop
or
into
mov
or
outsl
pop
lea
xorb
aam
aam
pop
mov
nop
mov
add
mov
pop
sub
jmp
jl
je
hlt
sub
out
xchg
push
aas
pusha
sub
sbb
mov
mov
jb
sub
sub
sub
jae
push
shll
inc
jae
jg
arpl
xchg
cs
xor
add
jno
in
add
cli
mov
popl
mov
jecxz
in
push
in
sbb
xchg
pop
jo
je
pop
xchg
adc
jecxz
jl
pop
xor
outsl
mov
test
mov
les
fiaddl
fucom
xchg
cmp
test
cmp
inc
ja
icebp
and
adc
dec
mov
xchg
or
or
jno
sub
and
divl
lret
shld
test
stos
jno
sub
inc
lods
int
mov
int
xchg
jmp
lds
xor
xor
adc
push
jmp
jo
add
adc
cmp
add
scas
adc
add
stc
dec
icebp
rcrb
xor
xchg
fnsave
or
push
std
mov
lea
fdivp
push
loopne
daa
adc
fiaddl
jbe
sti
mov
in
add
cmpl
and
mov
inc
xlat
loop
mov
mov
xor
cltd
pusha
mov
cmpsl
imul
xor
test
sub
pop
insb
rorb
mov
add
mov
imul
fsubs
mov
mov
push
repnz
or
aaa
aas
jp
push
in
adc
push
fsubrs
jb
stc
mov
add
dec
push
int
fbld
rol
loopne
test
mov
adc
or
addr16
add
jg
repz
sbb
mov
xor
cmp
cmp
and
dec
adc
div
xchg
mov
int3
addr16
cltd
pop
hlt
sbb
jnp
cmp
dec
leave
cltd
dec
in
rclb
lret
int
cmp
dec
mov
movsb
inc
dec
loop
mov
and
cwtl
mov
mov
cmc
mov
xchg
popa
daa
dec
mov
pushf
jmp
inc
inc
lods
xchg
pop
or
into
test
lcall
stc
mov
jns
in
loop
add
aas
ljmp
ficompl
in
adc
call
aaa
mov
je
adc
xchg
ljmp
jae
push
inc
bound
cmp
mov
sbb
jns
cs
pop
mov
call
push
or
inc
out
mov
mov
jmp
out
xchg
adc
sbb
mov
cli
les
mov
pusha
test
pop
loope
movsl
stos
inc
sahf
xchg
xchg
bound
shr
stos
mov
and
std
into
testl
adc
mov
scas
dec
cmp
loop
daa
xor
mov
imul
pop
mov
movsb
mov
out
test
mov
dec
jnp
or
push
rcrl
lahf
call
mov
cmp
rcl
lds
mov
insb
pop
pop
mov
shll
shl
dec
jae
push
movsl
repz
push
jecxz
adc
je
mov
rcrb
inc
dec
js
movsl
dec
mov
jae
lahf
cmp
xchg
and
jae
dec
lods
xorl
mov
ror
xor
lret
pop
jg
jmp
je
addb
mov
fdivrs
ljmp
xchg
sbb
lock
test
enter
push
push
inc
inc
shr
xor
mulb
xor
xchg
pop
mov
push
mov
cmp
cli
cmp
std
jo
aad
adc
pop
mov
jg
stc
shrl
stc
ljmp
rclb
sub
fcomps
in
jne
pop
cmp
mov
dec
arpl
inc
and
and
mov
inc
out
lods
sub
mov
call
xor
and
fisttps
mov
dec
arpl
cmpl
pop
je
dec
push
and
into
cmp
imul
in
mov
int
mov
mov
mov
shl
inc
push
data16
cltd
pusha
ljmp
mov
dec
cmp
jl
ret
jmp
push
aaa
scas
adcb
clc
data16
movsl
shlb
jnp
scas
lcall
pushl
lods
and
fadd
fistpll
jl
and
or
cmp
mov
les
int3
jo
shrl
cmp
orl
test
push
not
arpl
inc
xchg
icebp
jns
inc
loope
lock
add
rcll
andb
aaa
jns
pop
inc
data16
rcrl
in
cli
out
scas
sub
imul
add
pop
outsl
movsb
insb
add
push
cs
dec
fstl
inc
sub
stos
pop
mov
xor
jge
fidivl
mov
jl
out
stos
seta
hlt
inc
push
mov
adc
push
insl
insl
loopne
clc
shrl
hlt
test
pop
mov
cmp
sahf
xchg
pop
jb
mov
add
iret
fistpl
xlat
and
jns
mov
jnp
adc
inc
stos
fsubrs
fists
sub
jne
dec
cmpsl
in
fsub
ja
dec
mov
add
xor
jne
in
lds
int
dec
je
es
mov
mov
mov
inc
mov
loope
sbb
inc
stc
jne,pt
ljmp
loopne
or
cmpsb
mov
rclb
cmpsl
nop
xor
and
xor
lcall
movsb
sbbl
clc
dec
add
das
xchg
xor
out
test
fisttpl
loopne
sti
mov
test
int
ja
imul
aas
xor
out
sub
daa
imul
lret
pop
lcall
push
loope
push
adc
xor
lock
xor
sub
jle
jle
mov
inc
push
xor
js
lahf
sahf
clc
lods
cmp
rorl
aas
lock
pusha
pop
aad
push
add
inc
jecxz
je
int
imul
or
inc
pop
push
add
or
xchg
mov
enter
or
je
push
cltd
ds
mov
inc
dec
in
aaa
stc
cli
fcomps
xchg
sub
outsb
fs
mov
mov
mov
xchg
mov
or
mov
mov
lock
fcmovnb
loopne
push
stos
hlt
add
sbb
nop
or
cs
pushf
or
add
repz
sbb
adc
sub
pop
adc
sbb
mov
pushf
das
iret
xor
call
push
insl
adcb
mull
inc
mov
dec
sub
jl
xchg
test
pop
loopne
push
sbb
dec
stos
dec
std
mov
xor
enter
cmp
pop
stc
jmp
push
mov
stos
stc
xchg
pop
mov
dec
ds
inc
xor
mov
pop
out
outsb
cmp
pop
icebp
mov
push
mov
inc
jb
pop
sub
ljmp
popf
stc
sub
sub
push
sti
xchg
pop
sbb
lods
sbb
or
aaa
mov
ret
jle
or
and
es
adc
push
mov
lods
outsl
daa
xchg
cmp
fsubr
fists
adc
sbbb
mov
sti
push
loop
mov
movsl
sbb
loope
addr16
ret
jp
inc
fisubs
ds
inc
push
fidivs
movsb
sub
mov
loopne
test
addr16
add
fwait
xor
and
cmp
pop
push
mov
pop
cli
insl
push
dec
fmull
jno
in
cmp
test
in
sbbl
or
frstor
outsb
les
pop
rolb
iret
jp
lds
decb
or
mov
fists
imul
or
jl
dec
pop
scas
mov
or
ret
mov
outsb
mov
out
lds
mov
or
ret
jecxz
mov
pop
or
pop
push
cmp
in
das
sbb
xor
mov
into
test
pop
mov
pop
rcrl
rolb
loope
pusha
outsl
decb
xor
pop
mov
clc
sub
or
mov
cmp
scas
xchg
xchg
out
jle
jne
stos
in
in
xchg
sub
and
add
cwtl
xchg
rcrl
ret
mov
mov
mov
test
jne
cli
mov
jecxz
popa
cmp
and
inc
adc
jmp
jno
jno
add
push
dec
fsubl
lahf
ss
out
xchg
sbb
fxch
xchg
xchg
add
jge
sbb
pop
mov
nop
scas
push
js
mov
sbb
cmpsl
jg
fsubs
jo
in
mov
mov
pusha
pop
fisttpl
inc
mov
jno
mov
shll
jp
pop
pop
pop
cs
lea
out
in
inc
cmpsb
shl
mov
lret
cmp
addr16
lcall
out
inc
xor
js
push
test
xchg
add
add
adc
push
sbb
repnz
ja
stos
test
jge
testb
orl
rorb
outsl
repnz
imul
shlb
ljmp
es
rolb
adc
xor
imull
leave
xlat
scas
frstpm(287
jne
sbb
shlb
pop
out
inc
fstpl
js
or
sub
add
les
inc
fdivrl
imulb
fcoms
cmpsl
or
js
mov
adc
aas
test
sub
mov
gs
xchg
cli
adc
aas
in
mov
pop
testb
cmp
shl
mov
negl
push
xchg
int
mov
mov
ja,pt
dec
test
push
clc
daa
orl
enter
inc
xlat
stc
sub
lock
and
clc
mov
xchg
xchg
jge
addb
or
cs
loope
scas
inc
in
jae
add
mov
mov
mov
mov
xor
lret
cs
sub
cli
lea
cmp
cmp
cmp
mov
xor
or
and
push
xor
stos
add
fisttps
and
push
and
popa
clc
clc
inc
mov
xchg
push
sahf
sbb
test
cmp
and
push
cmpl
sbb
xor
data16
lcall
jg
inc
cs
pushf
pop
in
pushf
sbb
rorb
push
jmp
stos
popa
jo
pop
dec
pushf
ds
faddp
xor
out
aam
xchg
cmp
cmpb
cwtl
push
and
or
jne
jbe
xchg
aad
or
mov
jecxz
sti
jge
inc
mov
shr
xor
sub
sbb
push
xor
in
imulb
mov
xor
inc
test
dec
jmp
cmp
stos
cmp
inc
movsl
adcb
sbb
add
xchg
cmpsl
ret
repz
cmpsl
sbb
xor
mov
fiadds
push
jp
xor
into
pop
xor
lea
mov
xor
sub
setbe
lds
inc
pop
xchg
dec
cmpsb
dec
insb
xor
fwait
jo
add
cmpsl
frstor
rcll
ja
or
mov
fcompl
imul
adc
loopne
push
mov
sarb
mov
add
sbbb
iret
movsl
dec
xor
mov
inc
sbbb
outsw
movsl
inc
popf
shlb
stc
mov
repz
enter
or
mov
hlt
push
push
mov
push
mov
stos
pop
lret
adc
jle
test
mov
fstps
arpl
rcrl
mov
add
xchg
insl
xor
inc
call
imulb
jle
mov
or
jno
sub
add
outsl
in
mov
or
cmp
testl
test
out
mov
repnz
sub
sub
hlt
push
out
mov
pop
lock
push
mov
rorb
jecxz
movsb
mov
add
mov
push
jne
and
or
lods
dec
in
ds
xchg
imul
pop
mov
dec
int3
push
push
vfmaddsub231ps
mov
or
mov
push
int3
sub
jns
adc
xchg
add
ss
push
push
fldl
movsb
fs
arpl
or
mov
pop
cs
iret
or
test
mov
es
lods
dec
push
or
pop
lods
ljmp
xchg
and
push
movsb
sub
addr16
sbb
or
and
adc
and
or
lods
mov
adc
dec
pop
and
sahf
das
lods
sub
xor
in
test
stos
jne
pop
inc
pop
leave
fucomip
in
in
pop
push
stos
clc
mov
fistpll
sbb
das
push
xor
fdivp
testb
pop
xchg
jp
sbb
enter
xchg
andb
xchg
pop
je
in
mov
es
adc
push
int3
loopne
mov
inc
inc
popf
jno
cmp
sub
mov
ret
loopne
mov
lahf
fbstp
movsb
adc
sub
mov
fcomp
jb
lret
inc
adc
cmp
fwait
bound
adc
mov
into
fdivrl
pop
imul
pop
sub
mov
rcll
loopne
cwtl
mov
xchg
sub
and
adc
push
out
mov
dec
mov
adc
mov
loopne
scas
add
into
sub
jnp
or
aaa
cld
imul
cmpb
add
cmp
or
bswap
mov
ret
rcrb
into
popa
pop
in
stc
adc
mov
aad
pop
movsb
add
rorl
sarl
or
mov
outsl
cmp
jne
arpl
shll
jns
push
push
fnstenv
or
jle
xchg
ds
push
sub
cld
inc
test
xor
jl
fidivs
test
dec
out
lods
fnstenv
push
push
sbbb
mov
sub
pop
les
int3
xchg
popf
pop
xchg
repz
mov
cwtl
js
and
jge
outsb
mov
mov
arpl
sub
pop
daa
std
cmp
dec
sahf
gs
xchg
sbb
sub
fistpll
test
add
mov
clc
and
xor
and
pop
cmpsb
adc
add
adc
xor
push
pop
pop
xor
movb
addr16
mov
jb
sub
outsl
dec
les
pop
mov
dec
adc
push
pop
jmp
xchg
xchg
ror
insl
loope
out
and
sub
jl
push
popa
pop
sbb
jno
rcrl
mov
and
js
inc
xor
jbe
inc
mov
adc
scas
shll
push
or
inc
xchg
hlt
add
pop
sbb
dec
xchg
xchg
popa
mov
xchg
ss
sbb
cmpb
mov
popf
lcall
mov
mov
xlat
and
jne
leave
xchg
or
test
sbb
roll
jg
shr
mov
sbb
mov
inc
xchg
push
push
mov
cmpsl
stos
xchg
jno
pop
gs
and
or
sbb
add
sub
push
jb
and
xor
add
dec
jb
mov
dec
adc
dec
push
xor
xchg
sahf
xorl
lods
ljmp
call
fstl
into
pop
mov
pusha
pop
repz
xor
xchg
sub
or
into
push
mull
std
jg
std
cld
xchg
out
inc
xchg
imul
push
aad
jg
and
test
shlb
pop
mov
adc
in
movsb
add
bound
lds
pop
in
xchg
pop
andb
push
popf
mov
insl
lods
and
jns
loop
push
sbb
psllw
xor
jp
or
nop
xorb
dec
pop
shl
mov
movsl
mov
push
push
push
lods
sub
fidivs
push
call
mov
jecxz
lea
testl
into
inc
aas
mov
imul
shrb
stc
push
out
push
aas
testl
rcl
imul
lret
xlat
dec
dec
dec
push
jns
sahf
mov
inc
pop
hlt
je
sbb
inc
sbb
addr16
sub
add
inc
adc
jecxz
pop
pushf
std
les
jle
inc
lret
and
mov
mov
lret
bound
shrb
out
push
fisttpll
addb
mov
lock
out
and
xchg
jle
jp
and
xchg
das
rcl
imul
mov
push
mov
inc
dec
xchg
aam
imull
and
inc
stos
and
adc
inc
test
adc
inc
jns
dec
lock
imul
insl
sbb
mov
mov
cmp
fwait
pushf
and
inc
out
xchg
sub
jge
les
test
test
rcl
leave
xchg
outsb
or
test
cltd
push
pusha
aaa
mov
jecxz
mov
inc
mov
movsb
cmp
jns
xor
push
jno
sbb
push
in
jecxz
push
popf
push
fnstsw
xlat
adc
xchg
xor
stc
daa
mov
fmuls
push
jno
rol
pop
mov
test
lods
in
jbe
lret
cwtl
imul
fldenv
cmc
repnz
daa
and
push
add
fsts
sbb
jge
inc
fwait
xor
shll
adc
inc
dec
fdivrs
fbstp
inc
fldenv
sub
xchg
mov
xor
loope
ret
sub
loope
mov
adcb
lods
rcr
jp
or
adc
jg
cwtl
das
aam
cmp
jle
sbb
inc
mov
cli
cmpsb
hlt
inc
outsl
xor
sub
mov
add
ret
mov
rep
xlat
jae
mov
push
xchg
pop
cmp
cmp
xchg
jecxz
ret
in
movsl
cmp
or
or
sub
sahf
mov
pop
test
mov
clc
cmpsl
pop
rclb
arpl
test
jne
lods
loope
test
outsb
mov
enter
xchg
scas
mov
mov
je
dec
fisubl
jp
stc
sbb
sysenter
push
inc
pop
cmpsb
cmp
xchg
lahf
out
rcr
sub
pusha
mov
ljmp
je
cwtl
das
add
test
mov
scas
inc
and
js
jne
lods
adc
pop
push
push
sbbl
mov
mov
icebp
lods
ficoml
lods
stos
cmp
inc
xor
pop
es
ret
adc
mov
andb
scas
and
xchg
jge
pop
movsb
mov
lahf
in
ja
jbe
jne
fcoml
mov
les
in
or
adc
outsb
in
mov
push
stos
lods
xchg
lock
sbb
fisttps
data16
gs
outsb
and
int
out
out
test
add
push
repz
mov
xchg
loop
int3
icebp
dec
cmp
repnz
push
out
push
jp
add
inc
test
xchg
into
andl
aas
int3
scas
jmp
es
cli
in
and
jnp
push
mov
cmpsl
pop
inc
add
jg
daa
loopne
fistps
inc
pop
mov
mov
mov
pushf
push
test
push
pop
cmp
mov
or
dec
in
nop
and
pop
sti
jo
fisubl
shll
add
das
iret
mov
scas
es
push
add
pushf
jmp
test
cmp
mov
repz
xchg
jnp
sub
repnz
std
stc
mov
daa
pop
aad
aad
adc
pop
insb
rcll
cmpsb
mov
sub
pop
mov
aas
out
popf
jo
loop
fstpl
jns
mov
arpl
out
bound
adc
es
insb
cwtl
cwtl
loope
rorb
add
loop
repz
push
inc
mov
mov
jge
sub
call
inc
or
ljmp
sub
sbb
pop
pop
inc
ffree
pop
dec
mov
mov
adcb
cmp
jecxz
loopne
pop
mov
int3
cmp
std
cltd
subl
mov
mov
enter
imul
out
outsb
data16
fisubrl
pop
ret
cmp
in
mov
inc
and
add
fcoml
sub
xchg
lods
jnp
dec
outsl
int
xchg
loop
jo
mov
fmul
and
jle
out
adc
jg
fmull
sbb
or
out
bound
push
push
pop
inc
outsl
push
jbe
adc
repnz
push
push
add
jae
push
and
mov
mov
sub
push
push
out
jmp
jnp
dec
in
xorl
sbb
dec
or
dec
and
int3
mov
jns
pop
rclb
das
mov
stc
push
pop
fsubl
movb
mov
enter
movsb
xor
loop
push
sti
ret
add
pop
mov
rcrb
stos
lods
insb
fs
mov
popf
xor
pop
add
mov
popf
imul
push
xor
scas
xor
repnz
jns
xor
add
outsb
je
jo
outsb
sahf
or
inc
into
mov
inc
ret
jb
int3
jbe
xchg
xchg
pop
add
sub
sbb
aam
ss
jo
mov
lods
push
movsb
jnp
pushf
pop
adc
mov
and
mov
cmpsb
sahf
imul
iret
lahf
addl
or
mov
pop
repz
xchg
jle
xchg
mov
faddl
lea
xchg
jecxz
icebp
mov
mov
imul
out
xlat
es
push
sbb
and
jg
pop
insb
ss
aad
mov
fbld
push
call
out
stc
push
rcrl
xor
fistpll
adc
push
loope
dec
or
rcr
pop
repnz
iret
mov
jle
or
mov
cltd
into
inc
mov
pop
insl
push
or
cmc
mov
mov
and
add
dec
cmc
and
repz
out
les
cmpsb
jle
jg
sub
mov
or
sub
add
mov
mov
add
adc
sbb
xor
lahf
hlt
or
data16
sub
loope
cmp
or
out
ret
int3
sub
loope
or
stos
sti
shrb
sbb
fadd
dec
pop
mov
imulb
sub
insb
mov
ret
repz
js
add
mov
or
or
test
jae
out
push
les
test
shll
ret
inc
insb
adc
js
and
cmpsl
not
std
push
out
lret
or
jmp
pop
push
mov
xor
push
jb
and
cmp
repz
popf
lods
pop
pushf
icebp
adc
mov
enter
cli
cmp
aaa
je
std
fdivrl
sub
adc
outsl
xchg
jb
mov
out
jl
mov
push
pop
je
xchg
mov
sbb
fnstenv
sbb
fldl
test
cmp
add
mov
test
cmc
or
pop
adc
sbb
pop
mov
xchg
nop
xlat
andl
sahf
cmc
out
mov
adcl
mov
sahf
or
ds
stos
dec
mov
xor
int3
pusha
jbe
pop
out
push
out
imul
cs
ret
jle
and
jmp
mov
pop
inc
lret
add
jae
cmpsb
jns
insl
xchg
inc
imul
test
icebp
aad
ja
mulb
mov
icebp
into
inc
sti
mov
cmp
push
fmull
ss
sbb
dec
push
pop
mov
jo
rorl
bound
imulb
cmpsb
aaa
jb
mov
add
and
lock
cmpl
cmp
cwtl
add
das
lods
inc
cmp
mov
mov
int3
movsl
rorl
cmc
es
mov
pop
test
add
popa
pop
std
sub
test
add
rorl
fidivrs
sub
pop
lcall
sarl
dec
into
jnp
push
and
shrb
mov
mov
push
mov
xchg
mov
cltd
fmuls
cmp
xchg
sub
mov
lret
shrl
test
jmp
aad
jmp
cmp
rorb
cmp
stc
call
fistl
adc
pop
scas
and
push
out
enter
ficompl
fidivl
icebp
imul
mov
pop
lock
pop
stos
jno
rorb
and
stc
loope
aam
pop
outsb
dec
xlat
cmp
mov
xor
fildll
inc
adc
sub
inc
addb
outsl
inc
or
adc
adc
mov
mov
dec
inc
cld
jnp
sbb
push
pop
stc
mov
xchg
push
push
data16
nop
icebp
inc
lea
push
lea
insl
inc
mov
or
add
into
mov
or
bswap
xchg
xor
repnz
push
scas
dec
xor
cmovno
mov
add
add
int
sbb
inc
sbb
mov
and
jle
sbb
lret
aam
pop
sbb
shl
cmp
xchg
sbb
add
loope
inc
and
or
mov
pop
arpl
or
inc
fldl
push
fcoms
out
adc
mov
sub
jae
push
sub
cltd
add
mov
adc
cmpsl
jmp
xor
jbe
mov
fwait
subb
pop
mov
aam
push
fsubr
orl
pop
mov
mov
jg
inc
fcoml
mov
cmpsl
and
xchg
sbb
rol
mov
dec
dec
fildll
sahf
mov
pop
mov
cmpsl
ret
sbb
mov
je
leave
popa
adc
jl
or
bound
dec
aad
cltd
outsl
test
clc
cmpsb
push
fcoml
or
xlat
sbb
or
add
cmp
fcmovu
imul
out
shl
mov
mov
xchg
in
mov
dec
fiadds
lcall
dec
sti
jle
es
ficoms
jne
inc
hlt
jg
cmp
out
and
cmpsl
ds
imul
scas
jmp
add
ss
leave
lods
push
mov
sbb
mov
stos
add
shr
xchg
fsubrl
add
adc
std
stc
inc
gs
mov
incl
add
sahf
and
loopnew
fstl
rcr
add
int3
dec
push
pop
mov
mov
cmp
in
movsb
leave
ret
sbb
mov
inc
insl
mov
mov
fsubp
pop
add
sbb
mov
insb
dec
pusha
jp
andb
cltd
call
pop
lock
stos
ss
jg
push
xor
mov
pop
mov
repz
outsl
outsl
xchg
mov
fstps
dec
sti
adc
or
inc
and
rclb
xchg
data16
dec
inc
xor
inc
cmp
lret
mov
mov
mov
sbb
lret
sar
dec
ret
cmp
mov
cltd
sarb
xchg
jge
adc
or
insb
mov
mov
mov
ret
out
inc
jecxz
pop
scas
pusha
ss
adc
data16
notl
xchg
ret
push
addps
inc
int3
stos
mov
push
adc
out
in
jae
fists
fldenv
leave
lea
jb
pusha
cmovb
adc
push
xchg
clc
sti
sti
test
pop
sbbl
ss
and
xchg
jns
add
pushf
loop
jmp
and
ret
lds
lds
mov
sbb
mov
adc
jb
cmp
into
gs
pop
xchg
jne
insb
cmp
in
push
xor
pusha
mov
or
sub
lock
sbb
push
pop
push
test
push
xor
mov
mov
mov
jl
or
cmp
dec
popa
pop
adc
xchg
inc
loopne
jne
fidivl
jmp
add
nop
clc
and
fimuls
mov
cli
adc
xchg
adc
ljmp
test
xlat
pop
and
rcrl
js
mov
stc
or
and
imul
sub
dec
xchg
xchg
gs
fs
je
inc
lods
insb
fcoms
shlb
notb
and
test
subl
test
lea
mov
xchg
adc
in
and
jb
sbb
mov
shlb
roll
pop
ds
inc
repnz
inc
mov
in
int3
jo
xor
inc
cmpsb
jne
imulb
sti
nop
daa
ret
pop
or
pop
and
sahf
scas
cmp
repz
sub
or
cmp
fs
pop
das
add
mov
outsl
add
jg
lea
adc
in
out
in
call
test
ret
push
mov
fstpl
lock
arpl
fwait
mov
addb
jmp
loopne
push
xor
adc
inc
in
mov
sub
stc
pop
popf
push
or
cmp
cmp
xchg
sbb
push
in
insl
les
in
test
dec
fists
sbb
cltd
cmc
mov
nop
mov
mov
mov
push
and
je
pop
push
daa
cmc
sub
mov
lahf
decb
pop
sbb
das
ret
fldl2t
sub
imul
es
mov
pop
fdivrl
repz
insb
dec
mov
call
sbb
lret
into
jmp
lret
push
test
mov
push
sahf
and
sub
cmpsb
rolb
lods
pop
lcall
dec
in
gs
pop
xor
stos
out
js
sbb
data16
add
pushf
sbb
ds
inc
mov
push
aad
xor
jnp
hlt
pop
les
push
pop
adc
jno
and
sub
jl
cmp
out
sbb
lcall
outsl
mov
pop
or
loope
mov
pushf
ljmp
mov
xor
push
jecxz
push
sub
fsts
dec
fisubl
aad
imul
test
xchg
sbb
insb
cmp
cmc
xchg
pop
push
push
lcall
push
push
jmp
das
shrl
mov
pusha
sbb
pop
in
das
es
jae
outsb
cwtl
dec
shrl
stc
add
cmp
les
xchg
and
sub
add
in
je
enter
pop
subl
and
lods
mov
push
xchg
pop
mov
mov
inc
arpl
ret
shll
dec
sti
ds
push
insb
pushf
lret
je
les
jne
cmc
data16
adc
jp,pn
mov
sbb
cmc
cmp
mov
mov
dec
sbb
lea
push
mov
dec
cmpsb
lods
int
sub
sbb
pushf
shll
test
cmc
pushf
cmpb
cs
scas
pop
sbb
cltd
jg
sbb
and
push
movsb
mov
dec
jns
aas
aas
mov
clc
lock
andl
mov
out
sbb
mov
and
sub
pop
sub
ja
cli
mov
push
jge
fcmovnb
cmpxchg
ret
xor
sbb
ret
sbb
dec
icebp
jbe
mov
dec
andl
test
mov
mov
fs
bound
mov
push
test
jbe
leave
imul
push
mov
mov
insb
xchg
cmp
lock
outsl
push
aas
ret
bound
and
shrb
xchg
aas
ret
rclb
leave
je
fs
test
mov
jg
jge
push
dec
aad
aad
xlat
xchg
rorl
pusha
cmp
cmp
pop
in
mov
mov
int3
lret
out
inc
dec
xchg
data16
jecxz
xchg
mov
cli
les
push
cmp
fidivrs
mov
pusha
rcrb
dec
fs
cmp
sub
ja
or
adc
adc
fwait
xchg
repnz
push
inc
subl
in
andb
test
mov
mov
add
flds
sbb
ss
pop
leave
pop
sahf
lret
popf
jne
adc
mov
int3
jo
jb
inc
sub
pop
cmp
pusha
cmp
mov
cmpsl
push
imul
jl
jae
mov
ficoml
insb
imul
jmp
push
sti
out
rcrb
jae
fnstsw
xchg
ror
shl
dec
or
sbb
scas
inc
sbb
lds
adc
mov
xor
test
push
sbbb
sbb
clc
and
mov
pop
jmp
dec
iret
hlt
push
lret
cmp
or
call
mov
and
loope
insl
and
lock
lcall
pop
xlat
and
ret
pop
pop
mov
mov
jb
sub
add
test
pop
scas
or
jmp
cmp
xor
lods
add
mov
stos
jmp
pushf
sub
jo
cwtl
pop
sbb
addl
stos
adc
inc
jne
scas
xchg
adc
xchg
push
loop
insb
inc
fld
xchg
adc
mov
jns
iret
and
mov
aas
xchg
jbe
dec
pushf
andl
xchg
push
lock
and
mov
push
repnz
popa
stos
jle
aaa
xor
lret
mov
dec
ss
out
xchg
push
push
jbe
cmp
mov
xchg
adc
jmp
jne
mov
test
iret
fnsave
pop
mov
xchg
or
cmp
xchg
sub
fsub
mov
add
ds
repnz
nop
testl
mov
sub
inc
ljmp
add
bound
ja
mov
bswap
aaa
arpl
in
mov
cli
xchg
push
or
xchg
pop
pushf
lock
out
jb
les
inc
pusha
add
xor
mov
or
clc
inc
fcompl
push
ljmp
jno
lods
pop
push
cmp
iret
ficompl
fists
xlat
adc
call
inc
out
sahf
pop
mov
cmp
add
rcrb
add
push
mov
flds
test
jo
or
sahf
int
or
rorb
mov
fisubs
out
xchg
dec
ja
fcmovnb
into
sarb
xor
jns
cmp
rorl
or
aad
repz
andb
adc
push
fwait
in
fidivl
jb
mov
roll
dec
test
or
movsl
fs
pop
dec
or
sub
inc
xchg
fbld
push
data16
fldcw
mov
fldpi
inc
push
sbb
sub
xor
test
aad
ficomps
faddl
pop
xlat
mov
push
mov
pop
stos
ds
lea
jl
mov
stos
icebp
push
into
lea
jmp
lar
xchg
pop
mov
scas
mov
pop
daa
ljmp
push
lcall
adc
xchg
test
xchg
inc
xchg
lret
pop
mov
push
mov
icebp
popa
rolb
sub
sti
push
xchg
in
call
mov
push
repz
rcll
imul
and
leave
scas
inc
cmpsl
sbb
and
adc
lahf
inc
fcmovu
sbb
fdivrl
stos
ja
rcrb
stos
lods
out
dec
fs
mov
xchg
out
mov
inc
into
test
scas
push
ljmp
jno
popf
mov
cmp
loope
fsubrl
dec
movsl
mov
ljmp
adc
clc
nop
or
cwtl
cmp
jecxz
xor
leave
xchg
sbb
lcall
lret
mov
or
push
enter
or
cld
xchg
and
cmp
out
mov
adc
aam
fucompp
sub
jg
add
cmp
jge
push
jmp
pop
std
mov
jb
add
loope
out
xchg
dec
clc
push
imull
inc
es
cmp
inc
scas
test
cmp
clc
inc
lods
cmp
sbb
dec
std
adc
fimuls
xchg
sahf
movsb
lods
pop
addl
int3
std
xchg
aaa
or
test
inc
std
clc
aaa
and
insl
dec
add
ret
mov
cs
xor
shll
rorb
test
out
popa
loop
add
mov
repz
or
add
mov
rcrb
hlt
cmp
outsb
rcrb
jl
cmp
hlt
lock
cs
loope
cmp
and
mov
mov
out
pop
hlt
xchg
jno
rcrl
es
pop
insl
adc
mov
mov
cmpsb
repnz
cmp
jb
mov
stos
lret
or
movq
aam
pop
lock
adc
and
ret
inc
sub
hlt
sub
in
and
lods
daa
data16
fstpl
inc
xchg
cli
pusha
pop
ret
mov
xchg
shll
adc
mov
int3
call
and
out
in
int3
lahf
sahf
sub
jb
ljmp
cmp
stos
xchg
ret
out
xchg
insl
cmp
or
aaa
cmp
xor
jecxz
mov
aaa
xchg
test
push
je
add
nop
fisubrs
pop
lret
push
rolb
shll
adc
aaa
cmpsb
jbe
cmp
dec
mov
xor
push
jmp
inc
sbb
dec
sbbl
push
xlat
or
xor
jne
mov
jge
inc
movsb
pop
sbb
cmp
das
testl
cmpsl
popf
loope
iret
lea
jnp
call
movsl
mov
cltd
das
cmp
cmpb
jae
jl
pop
mov
dec
and
inc
pop
adcl
or
jae
push
addr16
fucomip
addr16
pusha
insl
mov
mov
rcrl
mov
test
push
popf
pop
pop
mov
mov
std
fs
addr16
push
dec
dec
cmp
ds
test
mov
adc
pop
adc
cmpb
cmp
cltd
push
xchg
dec
ja
das
rcl
repz
repnz
adc
dec
mov
cmp
mov
inc
gs
sbb
sub
cmp
jae
cmc
movsb
cmp
js
mov
xchg
pop
inc
sti
dec
pop
ss
cmpsl
mov
inc
mov
lret
faddl
data16
jg
jge
and
sub
stos
das
adc
aad
mov
int
xchg
in
lock
push
lods
imulb
cmp
lods
inc
rol
jns
dec
lret
mov
lret
imulb
cmp
and
jl
jo
push
sbb
test
lcall
pop
sub
inc
cmp
mov
test
and
cld
stos
and
mov
cmpsb
adc
xchg
xchg
aam
je
divb
pop
outsb
jmp
and
repz
pop
loope
das
or
stc
sahf
xchg
mov
sbb
fdivl
xchg
cmp
out
ja
jo
insb
and
into
push
clc
sahf
mov
jle
push
scas
ja
sub
inc
mov
xor
push
in
add
gs
ja
ds
push
out
xor
shl
jne
fldl
jge
sub
pop
lahf
mulb
cltd
iret
data16
imul
and
pop
jns
lahf
xor
cmp
push
out
test
xchg
cmc
ja
fwait
ss
sub
movsb
mov
sub
mov
imul
mov
pop
xor
jae
jnp
and
push
stc
lock
mov
ret
rol
pop
xor
pop
ret
mov
push
xor
fcmovne
mull
push
dec
rcl
cli
push
cmpsb
or
sub
ss
fwait
lcall
cmp
mov
push
inc
outsb
or
arpl
jle
inc
or
imul
pop
mov
mov
push
and
imul
aas
pop
xor
insb
mov
adc
retw
ja
jo
aad
cmp
lret
cmpsb
jge
nop
adc
cmc
test
fwait
stos
insl
pop
jecxz
lret
and
push
pop
je
dec
mov
add
inc
popf
mov
add
push
mov
push
adc
ficoml
push
pop
xor
call
or
out
mov
ret
pop
inc
movsl
push
iret
fmuls
and
push
sub
mov
sbb
push
aas
dec
cmp
add
jns
imul
stos
mov
cwtl
adc
cwtl
fnstsw
push
mov
out
repnz
es
aam
push
fidivl
add
out
test
push
jmp
cmp
pop
and
adc
cmp
movb
mov
jo
leave
sub
leave
xor
stos
es
lods
fwait
inc
xor
sub
or
pushl
inc
or
add
or
mov
lock
push
movsb
mov
aam
sbb
xlat
scas
ss
lret
add
jmp
xor
cmpl
data16
mov
or
and
push
pop
pop
add
jg
lea
popa
xor
cltd
jle
shll
dec
fs
inc
xor
jmp
cld
adc
ret
push
pop
pop
xchg
mov
mov
leave
adc
shlb
pop
fnstcw
pop
cmp
js
lds
outsl
push
push
adc
test
inc
add
xor
mulb
repnz
sbb
add
xor
addl
sbb
nop
ret
idiv
lret
push
lcall
cwtl
daa
mov
mov
mov
inc
imul
fldt
sbb
popf
dec
jne
sbb
call
sub
movsb
lret
or
shll
pop
cltd
loopne
xchg
and
sub
xor
xchg
jl
lds
xor
daa
int
insl
iret
push
sub
push
pop
mov
pop
add
jno
ja
dec
shl
dec
in
dec
scas
aaa
scas
mov
inc
mov
xchg
add
inc
test
push
das
test
xor
add
dec
jl
repnz
sub
imul
pop
ret
je
inc
aas
pop
mov
mov
pop
jno
pushf
xchg
jp
xchg
mov
push
ficoms
icebp
test
test
test
cmpb
mov
xchg
xor
repnz
dec
fmuls
sti
movsb
insl
rol
dec
or
and
jae
mov
mov
dec
push
cmp
daa
call
cmp
mov
mov
pop
andl
rolb
xchg
incl
dec
adc
dec
inc
imul
inc
mov
call
lods
scas
adc
out
or
out
pminub
fsubs
push
test
test
mov
mov
pop
jbe
pop
test
sti
mov
imul
call
sub
dec
mov
rclb
and
mov
pop
lds
arpl
leave
cmpb
mov
push
lods
iret
xchg
shl
lret
dec
mov
push
aad
dec
cwtl
lods
inc
xchg
add
sbb
stc
jae
mov
lods
sarb
das
xchg
adc
xchg
arpl
lcall
sahf
jb
dec
adcl
xor
jnp
cmc
lods
dec
mov
cmp
fidivs
notl
cmp
push
movsl
outsb
es
into
shlb
jb
insb
test
jne
call
or
sbb
or
or
scas
cmp
negb
outsb
or
add
sbb
in
jmp
cld
dec
add
and
lods
push
mov
stos
je
push
jne
ja
divl
jne
data16
in
push
ret
inc
test
mov
xchg
pop
popf
fsubs
mov
mov
mov
fcom
push
loopne
or
mov
sub
mov
cmp
xchg
icebp
mov
fs
shl
sbb
popf
jg
cmp
mov
mov
mov
xor
gs
xlat
shld
xor
jno
mov
mov
test
insl
or
cmpsb
ds
add
outsb
mov
hlt
cmc
mov
jle
loopne
lret
js
add
cs
pop
stos
or
xor
fidivrs
les
or
cmp
adc
push
lahf
out
cmp
vmovntpd
jl
sbb
orl
cmp
sub
inc
and
mov
jl
push
sub
cmp
adc
cmp
loope
ret
xchg
mov
mov
jge
out
add
mov
jnp
mov
adc
and
cld
add
xchg
or
cmc
cmc
sbb
subl
leave
daa
xor
push
push
and
lods
push
or
ret
jp
faddp
mov
in
lock
fnsave
pop
push
inc
mov
or
or
fs
xchg
inc
and
into
addl
push
out
aas
lock
inc
fs
insl
add
call
dec
ret
dec
mov
call
dec
lds
dec
mov
jo
inc
mov
loop
sub
call
dec
in
jo
jb
or
dec
ds
xlat
lods
sub
mov
jg
cli
pop
cmpsl
loope
xchg
sbb
and
mov
imul
movsl
sbbb
or
into
fs
test
aaa
fwait
xor
push
xchg
scas
push
stc
sub
addr16
xor
loopne
shr
xor
into
pop
call
aam
faddl
das
xchg
sbb
mov
jle
cmpsb
cmp
pop
icebp
test
mov
jno
inc
in
push
loop
je
mov
scas
xor
call
daa
jg
or
lds
mov
and
jg
mov
sbb
test
adc
dec
lods
dec
mov
fdivrl
sbb
inc
frstor
rcl
lea
mov
sbbb
insl
nop
push
ss
xor
mov
xchg
loope
sub
ds
fistps
frstor
fcmovne
jg
mov
xchg
jecxz
push
outsb
mov
loope
sub
ja
mov
xor
mov
imul
adc
sbb
mov
inc
adc
fnsave
xor
lods
adc
ss
xchg
sti
jo
push
pop
mov
jg
movsl
push
sub
push
push
arpl
sub
push
cwtl
testb
loop
jle
xchg
mov
jp
and
insb
dec
shll
jecxz
cmovo
test
inc
pop
outsl
fnstenv
hlt
jge
fwait
leave
xor
loope,pn
or
adc
sub
stos
and
lock
jb
std
pop
in
push
mov
in
cmp
in
push
pop
push
or
lods
mov
insl
xchg
fwait
lods
push
mov
das
clc
inc
and
jne
fsubrl
ljmp
dec
xchg
jg
dec
cmp
sti
sub
pop
xchg
cmc
pop
hlt
mov
and
jl
das
cmp
arpl
lds
rorl
mov
dec
mov
push
dec
dec
adc
mov
mov
jo
std
mov
test
es
hlt
gs
pop
mov
mov
stos
mov
fnstsw
popa
or
test
push
fdivrl
shrb
rcr
jb
add
es
clc
cli
js
mov
sbb
sbbb
jbe
lods
sbb
sub
int
das
jle
mov
jnp
fistpll
lock
out
pop
dec
popf
data16
divb
adc
xor
stos
mov
pop
push
subl
sahf
test
fbstp
jecxz
dec
lahf
out
pop
push
jecxz
in
es
add
testl
aad
cmpsl
push
dec
in
dec
inc
jns
cli
pop
movsl
xchg
sub
mov
add
gs
push
loopne
xchg
pop
mov
andl
dec
aam
pop
add
pop
dec
cmp
pushf
daa
test
enter
addr16
sub
cld
scas
dec
add
mov
mov
jmp
jnp
xchg
lods
testl
and
adc
jl
xor
int
out
sti
xchg
incl
ret
sub
inc
fldt
enter
dec
lock
jle
push
mov
xchg
push
and
inc
popf
jb
push
movsl
dec
shr
xchg
or
mov
xchg
jp
outsl
divl
orb
jnp
jl
push
movsl
pop
jb
cltd
sub
fistpll
das
addr16
xor
imul
imul
dec
rolb
mov
sbb
fstps
cmc
dec
lcall
cmp
scas
insb
ret
add
les
mov
mov
lahf
cmpl
shrb
cmpl
push
adc
stos
mov
int
divl
sub
es
cs
scas
insl
lods
in
scas
jg
test
inc
xchg
cmp
inc
inc
jmp
aas
add
cmp
cmp
rclb
jne
lds
loope
xchg
inc
or
push
sbb
mov
cmp
pop
jae
mov
push
push
shrl
movsl
nop
fs
dec
shl
dec
mov
xorb
cmp
enter
movsb
mov
dec
fstl
or
hlt
mov
loopne
adc
outsl
jnp
push
test
fwait
shrl
sbb
fs
shr
out
or
ja
pop
xlat
dec
push
clc
in
push
outsl
push
in
pop
fldl
cmp
sub
pop
cmp
shll
inc
loopne
sub
es
xchg
into
dec
sti
or
stos
jo
movsb
cmp
push
jb
hlt
fwait
jno
pop
cmp
pusha
sti
and
outsl
pop
xchg
inc
mov
into
inc
sbb
pusha
pop
cltd
das
inc
inc
cmpsb
sub
mov
outsb
inc
jb
push
pop
pusha
int3
cmp
mov
fsubs
fidivs
in
nop
rorl
fs
xchg
xor
add
or
aas
fisttpll
push
jle
cwtl
cmp
outsl
stos
lea
inc
out
in
dec
and
test
jle
fstpl
repnz
jb
insl
jge
xchg
mov
pop
sbb
adc
pop
cmpsb
int3
push
cwtl
std
jmp
aaa
icebp
jo
push
mov
dec
shrb
imul
xor
sbb
scas
gs
or
mov
xor
test
push
enter
mov
scas
dec
xchg
sbb
movsb
cmp
push
icebp
incl
sub
pop
incl
jo
push
cmc
sub
add
mov
pop
pop
fidivrl
fildl
add
xor
and
mov
sbb
rcr
lcall
xchg
and
cmpsl
push
nop
mov
ficompl
mov
pushf
add
jbe
inc
rorl
aad
ljmp
sbb
adc
xchg
jb
mov
mov
xchg
xchg
jecxz
push
out
stos
aas
sub
loop
rcrb
stc
out
sub
sbb
inc
mov
fsubrl
into
push
mov
xchg
xchg
and
mov
lods
cmpsb
sub
mov
xor
sbb
lds
rcrb
test
jl
xor
jg
mov
lea
pop
daa
mov
or
enter
push
insb
push
jmp
arpl
scas
out
xchg
or
outsb
cmp
in
ja
jle
pop
jmp
xchg
add
add
add
xor
lret
ljmp
daa
test
pop
add
sbb
xor
sar
cmp
or
loope
pop
subb
cmp
imul
mov
pop
fists
decl
xchg
inc
push
test
in
pop
jno
std
jae
and
mov
sahf
addl
adc
inc
inc
cmp
cwtl
aam
and
xchg
lods
dec
pop
sub
adc
out
xor
testb
in
ljmp
pop
leave
jecxz
sub
pusha
sub
fiadds
mov
mov
xor
inc
fstps
dec
adc
dec
and
stc
add
loopne
lds
orb
fdivrp
out
push
inc
lahf
pop
es
or
mov
jp
ja
cmp
pop
rclb
push
and
or
sub
insb
imul
add
cmp
cmpxchg
mov
outsb
sti
adc
fstl
in
movsb
cmp
sub
inc
scas
imul
insl
js
lods
fwait
aaa
dec
pop
xor
icebp
js
lods
test
in
and
xlat
mov
mov
mov
pop
cmp
out
jo
and
shlb
add
jmp
pop
loop
pop
dec
aad
out
rcrl
fsubs
add
add
lock
cwtl
jnp
sub
dec
or
jnp
push
fistl
or
idiv
aad
mov
sub
cmp
imulb
jmp
cmp
stos
subl
cmp
lods
mov
arpl
mov
mov
sub
aaa
jnp
into
push
mov
push
xchg
sbb
jp
lret
imul
and
mov
loope
sbb
es
je
mov
movsb
into
jno
xchg
cmpsl
shll
add
out
dec
adc
stc
lds
test
cmpsb
inc
iret
fmull
mov
popa
pop
xlat
sbb
jne
test
aaa
stc
cmpsb
jecxz
push
fwait
xor
pusha
xchg
push
call
inc
mov
dec
push
ljmp
inc
adc
sbb
inc
lock
movsl
pop
lret
push
add
scas
adc
ss
mov
leave
mov
lds
je
and
inc
stos
inc
fadds
inc
and
push
push
sub
dec
sbb
cmc
mov
ret
out
leave
test
repz
outsl
iret
filds
outsb
cld
imull
mov
jns
in
sub
std
jge
enter
sbb
mov
xadd
sub
fistps
jnp
ljmp
lock
lret
jg
sti
adc
lea
mov
or
dec
shlb
mov
sub
sub
les
fiaddl
dec
fisttps
imul
dec
cmp
ficomps
and
mov
cli
mov
movsb
cmpsl
push
fwait
pop
mov
inc
mov
jp
or
add
fiaddl
pop
outsl
push
je
loop
inc
cltd
adc
into
push
mov
mov
stc
jno
pop
vpmaddwd
jno
shr
sahf
stos
inc
rolb
divl
pushf
pushf
loopne
dec
jmp
or
es
xchg
insb
lods
in
push
mov
cmp
insl
clc
push
es
cli
push
es
pcmpgtw
lods
sarl
mov
cmp
lahf
sub
sbb
orl
jecxz
inc
adc
test
push
adc
xchg
je
rcrl
enter
cmc
mov
shlb
cmpsl
jp
addr16
dec
cmpsb
aas
rorb
nop
mov
pop
lock
pop
add
pop
jg
jns
aad
nop
and
mov
cltd
lcall
lods
scas
rorl
jnp
sbb
in
and
fwait
popl
cltd
sbb
mov
jg
mov
sahf
sub
je
add
loopne
loop
pop
inc
testl
xchg
pop
sub
xor
repnz
mov
lods
stc
test
pop
xchg
scas
inc
mov
jne
movzbl
mov
mov
mov
movsb
in
jg
push
pop
or
pop
mov
push
cmp
xchg
add
sbb
and
orb
xor
mov
push
pop
xchg
pop
jnp
aad
in
negb
test
push
lods
ds
sbb
inc
cmp
dec
xor
das
into
inc
pop
cld
rcr
popa
lds
cmp
fldt
mov
shlb
loope
xchg
sub
sub
xor
xchg
xchg
xorl
adc
sbbl
add
and
inc
xchg
dec
aaa
outsb
sbb
mov
dec
mov
jge
aaa
push
fsubs
cmpsl
ret
ss
sbb
adc
jl
repnz
cmp
insb
lcall
test
xor
or
ljmp
mov
inc
push
dec
pop
popf
lahf
std
cli
jne
aaa
dec
add
popa
shll
popf
sti
jecxz
push
adc
mov
ss
mov
outsl
pop
push
mov
jg
xor
mov
cli
push
jmp
daa
test
dec
jnp
mov
cwtl
stos
sbb
mov
repnz
mov
orl
fwait
enter
or
sahf
xchg
stos
mov
jno
jg
xor
dec
addr16
ud1
aad
mov
test
cmp
lock
stos
sub
xor
test
dec
inc
mov
jb
jecxz
icebp
jp
das
mov
cwtl
cli
test
mov
mov
test
das
aam
outsb
ret
out
data16
movsl
inc
mov
insl
sbb
cltd
xchg
call
int
cmpsb
fdivr
cmp
pop
sbb
push
lcall
lahf
cli
mov
push
push
cmpsl
ret
push
loopne
addb
jg
sahf
sbb
loop
imul
cmp
push
or
clc
lods
imul
jmp
add
mov
push
sub
lret
push
adc
jae
mov
sbb
mov
add
push
sub
jae
mov
es
add
mov
mov
dec
jl
enter
packssdw
dec
and
jmp
stc
repz
scas
sub
xlat
sbb
lret
pop
neg
iret
nopw
orps
cmpsb
fstpl
stos
test
inc
ret
shll
sub
xlat
or
jnp
xchg
jbe
mov
cmpsl
push
fnstenv
lock
test
adc
pop
lret
mov
loope
ds
scas
jb
fmul
cs
add
out
shlb
or
push
and
jnp
cmpsl
es
mov
pop
xchg
nop
push
cmp
mov
pop
mov
or
les
and
sbb
ljmp
inc
adc
scas
sub
movb
xchg
scas
rcr
int
aad
push
movsl
in
cmp
mov
sbb
or
inc
movsl
mov
push
insb
mov
jno
jmp
xchg
fidivs
ljmp
enter
fs
adc
scas
out
stos
test
icebp
hlt
outsl
push
xchg
test
int3
mov
insl
adc
xchg
cmp
or
and
mov
cmp
hlt
mov
lds
cmpsb
out
shll
sbb
insb
jne
in
mov
icebp
cmp
outsb
xor
divps
inc
popf
mov
test
push
sahf
cmp
pop
fbstp
call
scas
adc
gs
mov
mov
xor
xor
movsb
fcomps
sbb
and
movb
adc
mov
and
daa
sbb
mov
or
push
in
mov
lahf
cmc
cmp
push
testl
movsl
aad
push
mov
ret
adc
push
xor
mov
gs
sbb
pop
popf
arpl
aad
inc
pop
lods
addr16
sbb
fwait
cs
mov
das
into
popf
cs
lds
mul
movsl
jg
pop
mov
mov
dec
in
stos
icebp
cmp
out
repz
xor
jne
clc
sbb
xlat
fsubl
add
mov
lret
sbb
sbb
add
fisttps
nop
clc
imul
andb
or
in
clc
daa
mov
jo
inc
sbb
aam
dec
and
mov
cld
ret
pop
das
push
adc
push
loope
aaa
mov
mov
xchg
iret
push
mov
xlat
std
xchg
leave
add
xor
cmpsb
cmp
mov
inc
push
jmp
fisttpl
jns
push
adc
ljmp
fsubs
adc
in
cmp
rcl
jae
push
lret
and
pop
lock
pop
xor
sbb
repz
sub
and
in
pop
inc
test
xor
push
imul
xchg
xchg
jge
in
loope
push
jge
sbbl
nop
or
imul
loop
sub
cmpsb
sahf
dec
imul
mov
jno
jmp
aam
jo
cmp
leave
in
icebp
mov
mov
cltd
out
andb
jae
scas
push
add
adc
inc
inc
add
pop
popf
xor
popa
mov
dec
scas
outsl
test
inc
pop
xorl
pop
stos
es
mov
sbb
popf
push
pushw
mov
mov
lret
cld
and
hlt
dec
mov
jl
push
int3
fisubs
cwtl
dec
and
push
pop
sahf
mov
pop
lahf
imull
lret
cmp
jbe
sbb
loope
fs
and
push
push
jae
jnp
xor
jmp
jle
adcl
push
std
mov
pop
mov
movsb
mov
mov
pop
hlt
mov
pop
jmp
push
stc
pop
movsb
xor
daa
insb
mov
mov
xchg
dec
inc
sarl
adc
ja
test
or
sub
lock
inc
imul
xchg
idiv
mov
pop
mov
xlat
xchg
or
mov
adc
push
int
xor
subb
test
mulb
sub
insl
rclb
shrl
imul
xor
subps
mov
jae
scas
ret
push
inc
lahf
and
adc
dec
fsubrs
shll
sbb
daa
stos
lea
fldt
fstl
pop
jo
std
popf
stc
xor
fisttpll
leave
mov
jmp
cmp
adcb
stc
cs
and
vcvtsi2ssl
xor
mov
push
add
cwtl
pop
popl
xchg
hlt
mov
repz
or
aas
lods
xlat
jnp
stc
scas
push
mov
dec
loope
inc
dec
adc
mov
push
popf
jne
mov
aad
sub
pop
cltd
clc
cli
sahf
lods
and
jno
fsubrl
sbb
imul
inc
movsb
rorl
push
in
mov
sub
cmp
rcrl
adc
sti
and
into
adc
pop
sbb
mov
jne
call
sub
mov
push
add
or
mov
cmpsl
call
stos
cli
and
das
inc
jo
data16
es
stos
mov
add
js
lahf
lds
push
rclb
or
cmp
fisubl
jne
lret
cld
adc
ds
filds
sti
mov
pop
icebp
rcrb
cmpb
js
push
or
rcrl
pop
jmp
cltd
fists
iret
push
inc
xor
popf
xor
sti
jbe
and
arpl
cmp
and
in
in
das
jb
push
cs
xchg
notb
shl
jbe
cld
sarl
push
shrb
jecxz
adc
adc
stos
mov
cmpsl
add
sti
sub
lock
jbe
sub
inc
lea
sub
sbbb
fbstp
cmp
stc
loope
test
and
gs
inc
sub
pop
sub
fs
cmp
mov
mov
rcl
push
pop
mov
lds
dec
lock
mov
daa
mov
mov
jne
xchg
pop
in
shll
or
xlat
and
jmp
scas
imul
sar
add
sub
mov
and
stos
cvttps2pi
outsl
fisubl
jbe
orb
inc
nop
out
jge
cmp
or
out
xor
jge
adc
out
popa
pop
mov
int3
arpl
jne
loop
mulb
xor
sbb
lret
jecxz
rorl
mov
notl
xor
fcoms
fmull
add
fs
and
sbb
sub
xchg
push
mov
jecxz
in
push
repnz
arpl
pop
pop
pop
sti
pop
cmpsb
shlb
and
jg
or
and
pop
push
jne
shrb
pop
jge
xchg
xchg
adc
js
jo
inc
imul
stos
xchg
ret
pop
out
fdivs
in
aaa
jbe
push
les
insb
inc
test
xlat
mov
ret
lret
xor
pop
adc
jmp
test
xchg
repnz
mov
loope
movsl
jae
cmp
fiaddl
rep
rcrb
mov
pop
in
lock
mov
leave
fdivrl
movsl
pop
out
or
pop
arpl
xchg
icebp
out
mov
push
call
jbe
inc
xlat
xchg
mov
leave
inc
es
scas
call
add
out
jae
mov
cmp
rol
ffree
jb
mov
out
adc
cmc
nop
pop
add
enter
push
push
imul
je
enter
jmp
push
repz
or
sti
arpl
xchg
sub
stos
sub
xchg
mov
or
push
pop
push
xor
cmpl
cmp
jno
notl
inc
lods
les
fidivl
mov
push
fcom
mov
mov
dec
mov
dec
ret
mov
sarl
dec
or
lcall
dec
mov
push
imul
xchg
inc
js
cmpl
pop
stos
repnz
mov
das
ret
sbbb
notb
mov
stc
imul
mov
and
lret
pushf
loopne
xchg
xchg
lcall
mov
push
notrack
jno
push
or
or
cmpsb
sub
cmc
dec
push
xlat
mov
aam
iret
xchg
aam
mov
les
daa
mov
jnp
dec
cbtw
pushf
test
mov
mov
fldl
mov
push
inc
inc
stos
xchg
ficoml
aam
cmc
ret
xor
out
xor
xchg
add
cwtl
jle
mov
pusha
pop
repz
xor
add
sbb
bound
inc
add
push
loop
fwait
ljmp
pop
xor
dec
call
in
jmp
and
stos
inc
inc
cmp
dec
fisttpll
jp
test
inc
cwtl
or
push
popf
mov
and
shrl
fwait
insb
enter
ret
lcall
jbe
xchg
mov
nop
xor
sub
sub
jge
push
negb
jle
into
jne
flds
mov
dec
js
imul
mov
aaa
ficoms
xchg
insl
ret
add
dec
inc
out
jo
push
shll
sbb
jle
xchg
fisubrl
imul
xchg
addr16
decl
std
pop
incl
pop
popa
mov
xchg
jecxz
movsb
dec
mov
pop
je
adc
xor
shl
es
fsubr
js
push
outsb
push
insb
xor
shrl
mov
push
jmp
push
jns
push
sub
mov
mov
dec
lods
dec
mov
sub
in
icebp
movsl
jae
sub
jp
aaa
or
je
dec
cmpsb
mov
ja
mov
xchg
and
dec
mov
pop
ret
idiv
rcl
jb
xchg
popf
loop
xchg
mov
sbb
sub
or
adc
jp
fwait
insb
sub
imul
stos
mov
je
jno
incl
cmpsl
inc
inc
fwait
cmp
jg
mov
jnp
notl
cwtl
or
cmp
add
fidivl
les
cli
arpl
sbb
dec
in
into
xchg
inc
jl
insb
add
lahf
loop
push
ficoml
scas
cmpsl
lea
push
leave
ss
xor
in
xchg
and
dec
clts
inc
cli
pop
cmp
psubb
mov
inc
std
shl
mov
ficomps
das
das
xchg
cmpsl
rcll
push
xor
xor
xor
ljmp
pushf
out
stos
out
push
push
test
sub
shlb
gs
loop
es
pop
arpl
int
mov
std
sarb
loopne
xor
ljmp
int3
fimuls
push
mov
jnp
out
dec
movsl
jns
lcall
dec
in
push
and
out
mov
fsub
and
rcr
arpl
mov
xor
and
popa
and
mov
scas
movsb
cmpsb
arpl
lds
mov
cmp
outsb
adc
cmp
pop
sub
pop
sbb
enter
sub
popf
fcompl
arpl
pop
pushf
cwtl
std
jg
xor
lahf
scas
inc
movsl
jnp
push
stc
dec
adc
xchg
mov
sbb
jnp,pn
pusha
dec
mov
lret
mov
out
stc
outsb
add
movsb
mov
sub
adc
mov
sarb
mov
inc
and
lahf
lds
pop
xor
pusha
sub
inc
mov
daa
ret
ss
iret
rorb
mov
imul
data16
mov
xlat
and
sub
push
subl
and
out
inc
lea
cli
mov
out
jo
dec
outsb
jae
mov
add
bound
imul
lret
loop
mov
pop
in
imul
pop
cmp
lea
movsb
cmp
push
repnz
jbe
jbe
cltd
je
lret
dec
xchg
jl
xchg
push
int3
mov
enter
jo
lahf
test
xchg
cmpb
pop
fsubl
mov
stc
test
popf
loope,pt
jle
inc
lods
lret
jmp
xor
dec
push
orb
mov
sub
fstl
push
push
sbb
stos
daa
mov
mov
push
xchg
mov
imul
addl
pop
xor
icebp
notl
out
lds
jno
out
mov
fstl
sahf
xchg
ljmp
repz
int3
adc
cmpsl
sbb
push
ret
scas
ss
mov
shrl
int
aaa
push
adc
jmp
xor
decb
or
andl
add
ds
das
pop
test
mov
rorb
add
xor
aas
dec
scas
mov
mov
or
in
rolb
fldl
sbb
std
divl
daa
roll
sub
pusha
lds
sub
out
sbb
fistps
in
test
cltd
add
mov
cmpsb
cmp
pop
mov
rol
cmp
jno
jg
mov
push
push
movsl
cmp
lds
mov
cmp
rol
dec
out
add
cmp
inc
xchg
sub
mov
pop
lret
mov
jno
fdiv
int3
mov
xchg
jecxz
lahf
add
and
movd
shlb
mov
jmp
or
push
pop
mov
push
lods
sbb
ljmp
push
data16
sub
test
lods
cmpsb
les
ret
repz
out
pop
mov
fucom
rcrb
ret
subl
insl
or
xor
mov
sbb
or
repnz
jmp
mov
sbbb
adc
push
negl
fucomp
pop
sbb
xor
iret
out
out
insl
dec
jecxz
jae
sbb
pop
out
lds
inc
sub
jne
cli
push
xor
push
mov
mov
push
adc
xor
push
mov
mov
xchg
pop
cmp
pusha
in
shr
cld
adc
jo
fdivs
sbb
xchg
jp
testl
adc
scas
enter
cmp
xor
movsb
cwtl
test
subb
ja
enter
daa
ljmp
jle
pop
add
cmpsb
add
xor
ret
lret
push
or
mov
mov
add
and
mov
mov
push
in
inc
ds
fidivl
fstpt
pop
popf
or
mov
movsl
dec
adc
dec
lret
into
jg
aaa
sub
lcall
xor
popf
popa
xchg
mov
sbb
in
popf
add
leave
mov
outsl
mov
xlat
scas
inc
aam
sub
cmc
mov
sahf
addr16
je
dec
and
dec
sbb
daa
xchg
sub
pusha
add
incb
int3
inc
or
nop
mov
shll
fistpl
test
jno
xchg
fdivl
xchg
js
lock
mov
add
cmc
call
push
popf
xchg
repz
gs
pop
icebp
adc
ss
js
jmp
in
mov
mov
fnstsw
xchg
sub
mov
mov
inc
loopne,pt
sub
ret
xchg
leave
int
ret
idivl
xor
arpl
mov
jo
rorl
loop
gs
push
gs
mul
inc
inc
lcall
in
jb
xchg
sbb
scas
xchg
pop
push
mov
adc
pop
imul
cmpsl
cmp
dec
int
mov
dec
in
mov
xchg
test
cmpsl
mov
sbb
add
jg
or
jle
jo
dec
mov
clc
sahf
mov
aas
push
andl
add
sub
xor
inc
and
sbb
data16
or
divb
cmpsb
inc
ljmp
cmp
icebp
sub
sub
mov
mov
aam
mov
call
shll
in
mov
js
ss
jbe
add
test
dec
mov
push
jecxz
rcl
and
jecxz
aas
mov
les
add
or
repz
hlt
add
ljmp
cwtl
shll
or
movsb
leave
xchg
add
add
imul
mov
pop
dec
push
stos
rorl
inc
jl
ret
add
mov
pop
aaa
mov
sahf
scas
and
das
repnz
loopne
jae
push
pop
adc
lret
repnz
mov
xor
pop
dec
or
test
imul
adc
cmp
xchg
shll
mov
mov
push
adc
add
stos
inc
or
cmp
leave
mov
and
dec
dec
jo
stc
push
inc
mov
fwait
shrl
pusha
mov
pop
shlb
insb
clc
push
add
mov
sub
mov
mov
stc
adcb
sarb
pop
or
inc
xchg
pop
sub
pop
and
pop
loop
add
jae
out
xchg
iret
fistl
mov
icebp
pop
ret
and
pop
lret
outsb
add
pop
push
adc
jbe
xor
adc
cmp
jns
inc
xchg
mov
and
inc
int
add
fucomi
mov
inc
inc
dec
aaa
fbld
in
das
mov
fidivs
subb
xor
cmc
lock
fidivrl
mov
xchg
fcompl
push
clc
pop
bnd
dec
pusha
ss
pop
test
test
les
sub
inc
xchg
or
les
sbb
pusha
cmpb
cli
cltd
push
ljmp
testb
repz
and
push
fstl
add
cmpsl
mov
fisubrl
lds
out
into
ss
xchg
inc
pop
jb
adc
sub
lods
xor
out
outsl
dec
push
inc
adc
inc
clc
jecxz
aas
push
sahf
int3
push
xchg
and
and
adc
xor
int3
imul
lret
sahf
or
leave
fsts
or
into
adc
ss
jmp
xlat
mov
add
push
call
and
fmul
roll
mov
call
xor
decb
mov
mov
popf
js
movsl
insb
cmpsl
pop
xchg
push
jp
ret
fildll
inc
mov
rcr
mov
sahf
aam
xlat
outsb
xchg
mov
cwtl
mov
adc
lret
iret
cmpsl
sbb
push
lret
or
test
push
cmp
adc
out
and
cld
in
cli
dec
adc
push
movsb
push
popf
mov
add
push
ss
je
jae
cwtl
mov
scas
outsl
push
in
push
push
mov
arpl
mov
mov
fimuls
imul
and
mov
cmc
or
jnp
divl
xchg
jmp
inc
and
xorb
dec
sarb
inc
push
repnz
or
inc
ror
mov
pushf
sbb
jg
test
jbe
mov
xchg
push
dec
adc
ret
mov
loopne
dec
jno
imulb
inc
jae
leave
fwait
aaa
adc
jg
or
ljmp
filds
fildl
mov
or
lahf
push
or
shll
pushf
jbe
mov
push
sti
push
mov
push
sti
rcll
lea
rol
mov
or
sti
les
mov
cmpsl
loopne
gs
inc
es
or
inc
int3
in
cmpsl
xchg
loop
shlb
pop
pop
out
movsl
lcall
fisttpl
gs
fists
fnsave
jb
jle
xchg
and
adc
jmp
mov
ss
sub
stc
sub
mov
mov
sbbl
mov
cltd
sub
std
sub
xlat
mov
repz
aas
fcmove
cmp
pop
push
pop
add
pop
inc
les
pop
test
popa
rol
add
popl
jo
ds
mov
stc
or
inc
mov
rolb
loopne
ret
js
cmp
imul
add
jbe
xor
dec
das
fsubs
dec
scas
xor
arpl
popa
stos
or
add
pop
sti
adc
call
xor
leave
jle
inc
sbb
add
not
push
jl
mov
mov
in
xor
sbb
hlt
dec
hlt
push
aas
cmp
push
inc
out
sub
out
test
push
lret
adc
and
subb
mov
fndisi(8087
js
push
push
outsl
jl
jb
into
popf
sahf
clc
mov
fsubrs
dec
xchg
je
les
mov
fwait
add
mov
data16
fsubl
jle
mov
fxch
fdivs
pextrw
lods
sbb
and
test
mov
and
daa
push
push
jle
sti
sub
xchg
jp
push
icebp
sbb
push
cltd
loope
movq
popa
ljmp
adc
jmp
sahf
lret
sbb
adc
push
std
and
dec
xlat
xchg
mov
dec
cmp
out
stos
inc
xchg
add
lcall
dec
cli
cmp
jbe
dec
fwait
loopne
fsubrs
mov
loopne
and
sbb
shlb
imul
das
push
in
push
adc
fsubs
push
daa
inc
shr
sub
push
dec
cmc
fidivs
sbb
popl
xor
or
psubd
gs
xor
dec
mov
insl
mov
adc
in
mov
pusha
pushf
leave
test
stos
into
cmpps
jb
jle
lahf
fcmovne
or
adc
sub
je
js
mov
xchg
jle
inc
pushf
aas
pop
mov
ljmp
testb
incl
or
leave
fstl
xor
adc
add
mov
sbb
add
sti
das
jp
mov
mov
mov
js
add
incl
and
loopne
pop
repnz
mov
pop
or
adc
mov
call
aaa
xlat
ljmp
xor
cmpsb
lock
sub
or
lret
rorl
sub
subb
jl
mov
dec
repz
sbb
lcall
jg
shrb
cmp
pop
sahf
pop
inc
test
pop
dec
cmp
ss
mov
pusha
cli
fcoml
xchg
test
push
sar
jecxz
mov
pop
mov
fldt
dec
pop
call
test
xor
sub
cli
xchg
add
fidivrs
push
sbb
jg
scas
and
mov
stos
xor
inc
mov
dec
pop
pop
outsb
leave
jecxz
push
stos
mov
pop
call
jle
test
fimull
cs
push
inc
add
mov
in
rcrb
insb
cmp
xchg
fsubl
sti
inc
mov
lcall
loop
lock
pop
add
aas
call
cmp
scas
lock
adc
ret
cmc
or
inc
cli
daa
je
sahf
push
fstpl
scas
inc
dec
cli
mov
inc
cmpsb
cld
jnp
and
push
xchg
sub
adc
xor
sub
and
out
fwait
aaa
mov
stos
cmp
int
int3
arpl
mov
inc
mov
push
mov
mov
int
arpl
adc
ret
pop
mov
sub
das
pushf
mov
add
mov
mov
and
out
les
sub
imul
cltd
sti
jbe
iret
pop
sahf
add
test
ljmp
out
mov
addr16
loope
pushf
add
push
mov
dec
cmp
add
cmp
xchg
and
idivb
jl
aam
and
outsl
adc
and
lock
xor
push
cmp
pop
insb
daa
aad
cmpsb
pop
loopne
or
push
mov
js
aaa
call
pop
jl
pop
mov
stos
inc
sub
dec
mov
jp
pop
test
add
dec
mov
ja
dec
test
xchg
ds
pop
inc
pop
and
sbb
pop
mov
dec
lds
aad
or
in
into
sbb
sbb
call
subb
pop
mov
dec
cmpsl
or
shlb
add
hlt
sub
stos
push
fadds
into
xchg
mov
and
jae
sub
repnz
xor
shl
icebp
xchg
cmpsl
bound
out
add
int
dec
add
shrb
or
dec
inc
rcr
das
int3
pop
adc
pop
xchg
inc
add
shl
inc
pop
sbb
sub
mov
insl
les
push
cmc
stos
dec
pop
pop
mov
jno
dec
outsb
dec
lcall
and
cmp
mov
mov
jbe
inc
and
popf
shll
lcall
mov
stos
in
outsb
add
hlt
or
xor
clc
jb
inc
pop
daa
inc
push
fmull
dec
nop
dec
or
cs
jns
imul
mov
xor
sbb
inc
xchg
rolb
shlb
xchg
xchg
fnstenv
int
imul
hlt
jne
fdivl
xchg
mov
cli
add
add
test
pop
fcoml
in
mov
adc
or
out
cmp
adc
loope
push
mov
pop
jne
push
sbb
jecxz
pushf
mov
jno
mov
dec
fildll
push
inc
fisubrs
or
clc
mov
gs
int
arpl
mov
loope
cmp
mov
jb
jge
push
scas
out
xchg
and
jne
fstps
ficoms
stos
aaa
jge
xor
xchg
test
sbb
inc
inc
mov
jnp
adcl
jecxz
sbb
mov
fldt
xchg
inc
cwtl
mov
and
popf
lods
stc
or
pop
jb
cmp
mov
add
xchg
xor
or
pop
push
and
cmp
ficomps
aam
pusha
dec
jecxz
pushf
movl
cmpsb
sbbb
cli
pushl
dec
mov
fidivs
xlat
inc
xor
push
mov
movsl
data16
int3
jg
cmpsb
out
mov
pusha
ret
cwtl
rcrb
cld
push
sbb
js
shrl
ljmp
push
mov
and
negl
lahf
xor
test
lret
pop
cmpsb
and
aas
mov
pop
pop
testl
push
mov
jae
dec
popa
and
dec
aaa
or
push
in
pop
mov
inc
div
pop
roll
aad
call
push
lock
mov
and
or
cmpsl
push
sbb
pop
pop
inc
scas
out
outsb
adc
rcrl
mov
xchg
push
in
add
push
test
xlat
jge
or
adc
jl
cld
xchg
dec
loop
mov
dec
aam
and
sub
push
rorb
std
scas
inc
das
ljmp
sub
shr
jl
mov
mov
mov
fnstsw
iret
das
pop
stc
out
rolb
test
mov
and
mov
into
jne
push
adc
pop
aad
jnp
xlat
les
negb
push
pop
mov
sti
mov
aas
or
call
mov
fsts
jg
dec
jl
mov
ret
add
fisttpl
mov
ss
jl
push
ss
dec
add
mov
aad
dec
mov
filds
leave
mov
negl
mov
xor
mov
mov
or
in
pop
cwtl
in
inc
sbb
and
cmp
dec
lret
das
jl
ret
dec
add
mov
push
and
mov
testb
push
xchg
sbb
repz
jp
sub
sbb
pop
ds
in
iret
mov
cs
fcmovne
aam
je
ds
inc
imul
dec
xor
xchg
xor
les
adcl
cmp
and
adc
adc
inc
jbe
stc
fwait
sub
inc
sti
shlb
jae
jp
push
mov
pushf
sub
mov
pop
icebp
xchg
inc
xlat
ret
nop
adc
sarb
iret
mov
out
push
in
and
fistps
push
outsb
sbb
xorb
cli
adc
nop
mov
push
xchg
lods
fiadds
ror
sbb
pop
pop
and
mov
xlat
cwtl
lea
mov
xchg
imul
adc
cmp
ss
cmp
dec
lock
shr
sub
inc
cmpsb
aad
shll
push
les
mov
pop
push
push
test
pop
add
pop
and
shl
jl
adcb
mov
es
inc
lock
pop
mov
push
sbb
adc
in
add
adc
adcl
repz
ret
jp
add
mov
into
das
push
fstpt
lea
adc
sbb
icebp
dec
fimull
iret
movsl
cwtl
clc
cltd
dec
sbb
jae
in
or
aam
pop
mov
icebp
mov
mov
sub
psrld
pop
pop
and
pushl
je
inc
mov
add
push
mov
xchg
add
ret
jge
cmp
inc
jp
lods
ret
loope
ret
ficoml
pusha
xorb
pop
out
fst
imul
xchg
popa
mov
repnz
scas
hlt
pop
push
mov
fdivl
loopne
mov
sbb
cwtl
add
cmp
dec
pop
dec
imul
in
mov
int
rcl
mov
or
subb
ret
push
and
dec
or
push
lret
lds
jg
mov
ret
out
push
fcompl
mov
ja
cmp
dec
fsubl
sbb
sub
dec
jno
repnz
clc
fwait
dec
pushf
mov
and
lahf
jmp
arpl
call
add
lds
pop
sub
mov
shl
repnz
repnz
ret
mov
stos
icebp
stc
pop
mov
xchg
or
scas
sbb
mov
stc
mov
in
sbb
pop
push
pushf
popa
cmp
pop
cltd
imul
push
scas
rolb
movsl
add
addr16
sbb
jg
out
popf
popw
pop
sbb
mov
xchg
aaa
into
fisubl
lret
push
xlat
lock
aas
pushf
or
xchg
loope
mov
data16
xchg
pop
subl
pop
pop
sti
psrlq
or
add
scas
cmp
cmp
es
pop
push
vmovdqu
xchg
sbbl
xor
lahf
add
popa
andb
jb
fcompl
inc
aas
jge
into
gs
cmp
jp
sub
sbb
adc
inc
rol
cmc
mov
mov
adc
mov
jecxz
lret
leave
and
push
addb
ljmp
jo
loope
or
mov
cwtl
out
pause
pop
pop
out
inc
mov
test
pop
out
nop
and
cmp
lds
subb
mov
adc
adc
aaa
pop
daa
push
mov
xor
imul
adc
dec
mov
sbb
inc
adc
shll
aas
insb
lahf
call
sbb
in
clc
lret
cmpsl
out
sub
xchg
mov
sbb
jl
bound
mov
mov
cmp
mov
mov
pop
les
sbb
sbb
pop
popa
sbb
lret
clc
mov
adc
adc
shr
mov
ficoms
test
ss
arpl
enter
inc
flds
cmp
or
mov
ja
iret
loope
sbb
mov
sbb
adc
stc
andl
mov
subb
push
push
xor
add
mov
sbb
enter
xorps
inc
nop
daa
pop
std
inc
data16
repz
ret
cltd
xor
cmp
push
mov
push
mov
pop
daa
arpl
and
inc
pop
sub
pop
and
stos
out
cmp
mov
pop
push
lock
jnp
pop
lods
sub
xchg
xchg
push
xchg
shrl
notb
inc
bound
adc
xor
xor
mov
jb
push
fadd
and
jo
imul
mov
inc
roll
call
scas
imul
mov
push
mov
lods
sbb
out
hlt
adc
gs
repnz
int
adc
mov
sbb
call
xchg
add
cmpsl
sbbl
xchg
push
ficomps
je
lea
xor
stos
fcoml
sub
adc
mov
dec
insl
and
sarl
fstpl
ret
testl
dec
cmc
je
fs
jne
mov
fists
inc
sbb
data16
sub
fs
mov
addr16
sbb
out
dec
and
sub
lea
shll
lock
cmpsl
cmc
addr16
shrb
iret
add
ds
loop
js
inc
andb
sbb
and
sti
push
dec
or
lret
mov
xchg
mov
imulb
inc
aas
jp
aaa
into
ret
pushf
stos
repnz
mov
cmp
sub
xchg
xchg
push
outsl
les
scas
aaa
sbbb
mov
aaa
shl
pop
aaa
test
inc
xchg
into
fmuls
or
icebp
mov
xchg
jecxz
fwait
addl
cmp
in
push
sbb
rorl
mov
je
in
test
cmp
sbb
cmpsl
inc
fcmovu
dec
or
dec
stos
popa
sbbl
insl
icebp
enter
leave
or
shl
out
mov
sbb
sub
negb
lds
fwait
sbb
push
pop
dec
repz
inc
add
add
pop
fwait
test
enter
subl
pop
push
adc
es
mov
je
bnd
out
popa
fsin
mov
adc
loopne
pop
cmp
daa
stos
dec
pop
ret
das
aaa
aaa
repnz
outsb
add
sbb
dec
andb
out
loopne
mov
ret
xchg
cmc
xchg
mov
test
gs
cmp
add
sbb
gs
push
inc
inc
push
mov
je
cld
popa
mov
xor
loop
sub
aam
push
leave
inc
divl
mov
push
inc
pop
mov
cmp
shrl
insl
sub
and
aam
xchg
mov
mov
jle
xchg
jp
imul
adc
mov
lret
cmp
std
mov
push
clc
adc
mov
movsl
xchg
cmp
out
push
in
cmc
call
inc
pop
pop
pop
jno
jae
mov
push
aas
mov
popa
hlt
inc
fldenv
out
pusha
clc
sub
out
mov
pop
rolb
insl
xchg
div
xor
mov
mov
into
jns
ficoms
mov
mov
jnp
jo
shlb
lods
aad
xchg
jl
das
sbb
xor
pop
xor
cmp
lds
lahf
pop
push
inc
pop
hlt
xchg
push
jns
or
jnp
mov
cmpsb
lods
jbe
fs
inc
mov
jecxz
sbb
cltd
sub
sbb
inc
adcb
cmp
cmp
dec
push
ljmp
jno
test
xor
sbb
mov
shl
inc
pop
dec
push
jo
add
es
xor
sti
pop
out
pop
mov
or
dec
mov
mov
mov
cmp
aaa
cmp
movsl
loop
or
leave
sbbb
push
jne
ja
out
insl
mov
dec
aas
push
daa
out
xchg
sub
mov
loopne
andl
xchg
daa
mov
orb
jbe
and
or
or
and
imul
ret
pminsw
scas
pusha
ds
dec
jae
jmp
pop
into
daa
jmp
pusha
lret
lock
adc
scas
leave
dec
pop
cmp
lock
frstor
inc
les
push
and
test
cmpsl
jmp
out
pop
adc
pop
stos
pop
mov
push
inc
enter
mov
cmovae
inc
xchg
mov
sub
adc
into
sahf
sti
mov
aad
pop
inc
lods
vmwrite
dec
dec
pop
push
outsb
xchg
test
push
sbb
cmp
cmpsl
push
mov
add
pop
pushf
sbb
jmp
cld
mov
mov
push
cmc
aad
jns
add
add
cmp
pop
js
cmc
xchg
dec
or
pop
jg
stos
add
and
jb
in
add
sbb
sbb
gs
daa
lcall
sbb
cwtl
in
mov
lds
aaa
hlt
mov
mov
popa
xor
or
popf
int3
adc
shlb
cmc
bound
or
outsb
movsl
mov
arpl
into
sub
xchg
sbb
sbb
inc
cmp
fs
loope
add
mov
mov
out
and
scas
mov
sti
push
icebp
in
sarl
cmp
cs
dec
hlt
leave
pop
aad
arpl
lret
test
fs
aad
jno
jbe
pop
daa
shrb
fcmovb
pop
test
int
and
push
jno
inc
mov
dec
add
inc
cli
aad
mov
cmp
cmp
mov
pop
add
jne
mov
mov
jle
jbe
inc
and
push
movsb
push
adc
scas
lret
ret
xor
cltd
jbe
ljmp
aaa
std
dec
imul
lret
push
js
add
push
dec
stc
nop
std
or
repz
mov
pop
push
or
inc
cltd
or
inc
pop
push
inc
call
es
lcall
inc
fdivs
and
mov
test
and
add
mov
mov
mov
or
ficoml
cmp
inc
mov
lcall
notb
or
out
enter
in
outsb
sbb
mulb
and
xor
xchg
mov
ficomps
or
stos
dec
loop
js
out
rcr
lret
xor
pusha
ss
mov
jg
add
jb
outsl
dec
jne
subl
ret
nop
int3
add
cltd
in
pop
fucomip
subb
or
movsb
inc
sub
jb
aas
rol
pop
out
push
dec
loop
adc
fisttps
hlt
scas
xchg
sub
push
pop
hlt
inc
leave
stos
jbe
sub
es
loopne
in
and
pop
or
cs
add
adc
and
test
mov
jmp
sti
or
je
and
jecxz
enter
ds
jmp
mov
rorl
adc
xor
and
loopne
lret
addl
les
jl
ja
sub
dec
cli
xchg
jle
mov
ficoml
jg
popa
pusha
adc
fidivl
fsubs
out
dec
lods
mov
jno
rcrb
xchg
ficoml
cmc
mov
mov
mov
jno
aas
pop
mov
shll
mov
pushf
lret
pop
pop
cld
or
jecxz
pop
test
pusha
ss
push
jl
inc
movsl
pop
outsb
add
adc
pushf
outsl
cmc
xlat
icebp
adc
mov
out
inc
inc
and
int
jbe
jo
jge
pop
pop
fmuls
pop
outsb
scas
std
add
push
dec
and
repz
outsl
inc
fxtract
pop
mulb
xchg
jge
stc
jns
or
mov
xor
cs
paddusb
add
cli
std
xchg
jmp
lds
mov
subb
popa
push
mov
mov
jae
xchg
pop
pop
leave
inc
cmp
jo
and
xchg
lods
cmp
mov
ljmp
icebp
xchg
cmp
adc
xchg
in
imul
mov
popa
mov
cmp
stos
adc
xor
jecxz
jb
cwtl
dec
rorl
aaa
int3
cmp
mov
mov
push
call
popa
daa
outsl
lcall
inc
out
bound
jne
mov
mov
in
xchg
lcall
xor
inc
or
adc
xor
nop
xor
lcall
inc
shlb
pushl
mov
stc
jno
cmp
sbb
cld
in
jb
push
mov
daa
add
adc
rcrl
add
loop
ficoml
push
movsl
int
push
ds
mov
pop
fs
mov
pop
lcall
popa
cmp
aad
or
dec
cmp
add
lds
dec
hlt
scas
adcb
xchg
gs
jg
cmp
in
rcll
inc
jl
sbb
out
sbb
fwait
pop
lock
pop
mov
filds
outsb
push
or
mov
sub
xor
pop
jl
cmp
mov
mov
in
jp
inc
fstp
jg
inc
sub
cmpsl
xor
sub
mov
psubw
mov
or
xor
adc
pop
adc
aad
xchg
mov
sbb
dec
ss
fsub
xchg
jecxz
das
adc
cltd
enter
lcall
inc
dec
insl
push
sti
jp
push
sub
adc
in
inc
xor
jbe
inc
jmp
cmp
popa
fdivrl
adc
outsl
and
ljmp
lock
mov
adc
dec
lahf
and
sar
adc
hlt
jb
es
popl
mov
gs
mov
inc
xor
xor
xchg
icebp
sbb
andl
mov
je
roll
pop
push
repz
shl
mov
pop
xor
or
push
movsb
das
pop
idivl
xor
aad
test
mov
sbb
inc
pop
loop
mov
sub
pusha
cmp
cwtl
test
sbb
lret
sbb
mov
cmp
shr
and
std
mov
out
mov
push
scas
sub
add
in
in
pop
and
sahf
imul
and
loope
cmpsl
imul
mov
xor
cmc
sbb
jg
jnp
jl
insl
adc
inc
lea
cmp
jecxz
sbb
pop
push
insb
mov
lahf
xor
sbbl
sbb
call
cmp
ds
push
push
icebp
cmp
mulb
sbb
xor
xor
popf
inc
or
push
jno
mov
inc
mov
pushf
iret
or
mov
lods
imul
pop
ss
sub
xor
ret
mov
jmp
enter
jae
dec
push
push
mov
pop
ja
add
fs
and
fidivl
int3
ficomps
fstpl
xorl
lcall
mov
stc
mov
out
sub
cmp
mul
adc
div
cmp
fldl
xor
inc
fs
mov
shrb
clc
call
loope
xor
add
mov
stc
and
cmp
int
into
add
push
pushf
cli
mov
pop
mov
cltd
xor
jl
or
lods
fcompl
push
je
pop
push
dec
xchg
cmp
sbb
ret
or
in
dec
insb
mov
out
imul
sbb
adc
aaa
or
pop
dec
ficomps
push
nop
sbb
add
push
js
ds
sarb
divl
inc
ret
pushf
lret
jb
call
loope
sbb
dec
adc
mov
pop
pop
cmc
sbb
sub
mov
sbb
and
rolb
mov
xor
ja
out
ret
fs
xchg
sub
add
jno
cli
and
xchg
xor
out
cld
jbe
cmc
addr16
imul
outsl
sub
push
cmp
xchg
add
cmp
scas
in
jmp
inc
lock
xor
push
jge
inc
add
inc
cmp
das
jno
ror
and
loop
cmp
mov
pop
in
and
sub
sub
lds
push
lods
dec
insb
js
imul
xor
insl
nop
or
repnz
hlt
int3
sbbl
sub
mov
push
scas
out
inc
pop
cli
mov
lods
popa
mov
mov
add
imul
pop
mov
fldcw
test
fs
and
inc
pop
jb
insb
mov
shl
push
xchg
add
lcall
cwtl
mov
test
xchg
or
call
out
dec
mov
mov
jg
dec
sub
and
fs
sub
insb
mov
xor
out
scas
jo
js
mov
ret
sbb
hlt
ret
ficoms
jmp
into
and
sub
in
scas
or
nop
and
dec
lret
addb
add
stc
aas
xor
and
and
push
imul
mov
jae
fimull
adc
nop
ret
adc
repnz
or
and
decl
sbb
popf
ret
and
and
pop
add
inc
aaa
imul
imul
dec
cmpsb
dec
xchg
inc
dec
jns
dec
sahf
test
cld
test
xchg
jne
test
mov
fwait
cs
xchg
scas
and
addr16
loop
test
push
into
jecxz
cmp
bound
ret
lea
test
in
sbb
aam
jnp
rcl
into
into
xorl
aam
and
rorb
mov
inc
enter
xchg
add
call
lods
fadd
test
xchg
stos
pop
xchg
stc
xchg
jl
lds
adc
hlt
fwait
or
cmp
lahf
ds
fdivrs
enter
cltd
push
loopne
filds
mov
fisttpl
jno
cmp
cmp
mov
inc
sbb
pusha
push
adc
daa
ret
mov
inc
out
xchg
sbb
jmp
enter
das
inc
mov
aaa
add
sbb
lret
xchg
add
arpl
shr
xor
movsb
xchg
sti
push
dec
jecxz
les
shll
mov
and
hlt
mov
popa
and
or
dec
inc
jmp
lock
mov
mov
add
decl
adc
pop
pop
mov
add
mov
lods
adc
mov
test
es
adc
andb
lahf
jp
stc
push
mov
cltd
inc
lods
jmp
cltd
push
popf
xor
flds
in
sbb
xor
movl
sbb
mov
ficomps
or
in
loope
inc
pop
test
mul
jp
cmpsl
gs
cmp
hlt
mov
fstps
pop
mov
int3
movsb
jmpw
sbb
test
jmp
out
popf
insb
mov
pop
or
adc
xrelease
xchg
mov
xor
pop
jmp
jae
pushf
add
stos
lock
mov
xchg
aad
fcmovbe
call
clc
sbbb
pop
std
push
or
lret
xlat
mov
pop
lods
in
jnp
les
aaa
call
pop
xchg
imul
xor
or
std
xchg
dec
mov
sbb
jns
pop
ror
inc
add
jbe
jae
add
aam
xchg
pop
fdivp
push
shlb
dec
loop
fs
jge
mov
lods
repz
sahf
cmpsb
fidivl
call
mov
enter
ja
cmpsl
mov
int3
and
mov
out
xor
xorb
jns
xlat
aaa
push
or
sbb
hlt
sbb
adc
push
jbe
xor
es
mov
add
mov
xor
std
xlat
stc
sbb
lock
fdivp
lahf
push
mov
mov
jmp
aaa
addr16
push
mov
mov
dec
movsb
inc
negl
xchg
cmpsb
jns
fnstcw
jo
clc
mov
dec
addl
jnp
inc
out
sbb
xorb
lret
cmp
inc
lcall
sub
loope
or
stos
jmp
push
xchg
lahf
repz
mov
outsb
fcmovb
jle
pusha
out
mov
add
or
in
lds
xor
sub
pop
loopne
or
insb
jle
divb
out
movaps
loope
addr16
xchg
xchg
xor
and
sub
sub
mov
dec
xchg
add
inc
and
jecxz
adc
or
mov
frstor
jle
cmpsb
cwtl
xor
or
fsubl
mov
jns
inc
adc
cld
in
ret
popf
xor
ret
cwtl
jnp
or
rcrb
outsb
sub
push
lahf
pop
jne
jb
pop
adc
pop
rcrb
es
xchg
subb
add
stos
or
rclb
ljmp
pop
mov
inc
jb
xchg
push
pop
or
add
lods
les
enter
scas
mov
sub
sub
hlt
adc
stc
mov
sub
ficoms
mov
and
sbb
mov
jno
mov
mov
inc
jle
shll
ds
dec
stos
fldt
pop
mov
mov
mov
out
xor
push
std
adc
lahf
in
repnz
cmp
scas
and
aas
push
xchg
pop
xor
aaa
cmp
in
mov
mov
sbb
popa
ss
xchg
andb
or
sub
ds
or
leave
mov
les
jb
adc
mov
dec
sub
scas
popf
adc
ret
dec
insl
add
mov
int3
out
mov
ret
pop
dec
pop
push
jge
cmpsl
mov
ret
ja
jp
mov
call
xor
xchg
sub
ret
std
stos
cmp
movsl
fistps
test
shll
mov
std
mov
xchg
push
test
pushl
mov
mov
push
jge
pop
mov
sbbl
popa
das
and
push
push
mull
negb
leave
fbld
dec
stos
jmp
stc
lods
mov
jae
mov
adc
fisttpl
sbb
lret
push
dec
pop
movsl
dec
xchg
subb
movsl
push
and
push
adc
cltd
divb
inc
stos
aad
add
out
imul
dec
lcall
leave
mov
adc
xchg
adcb
cld
pop
jo
inc
fwait
aaa
js
or
pop
push
inc
loopne
jl
cmp
mov
jnp
push
lahf
and
adc
gs
test
stos
or
movsl
mov
xor
dec
pmuludq
xor
jae
out
lea
lods
xchg
orb
jbe
pop
test
insb
jle
adc
imull
xchg
dec
push
xchg
mov
and
xchg
xchg
and
ror
xchg
inc
sahf
mov
dec
repz
push
and
inc
hlt
and
dec
pop
icebp
shl
sub
popl
push
je
std
and
or
std
in
test
mov
rorb
ss
mov
inc
test
sub
insb
xorb
sub
xchg
jge
bound
xor
or
adc
sub
lcall
jne
mov
sarl
mov
nop
push
jle
mov
xor
mov
aam
jns
test
mov
lods
fistpll
das
aas
dec
psubsb
xor
cli
pop
dec
fs
xchg
xchg
or
add
cltd
xchg
dec
mov
sarl
loopne
pop
mov
add
div
inc
cmp
jmp
mov
sbb
dec
testb
add
cmc
ljmp
sub
loope
sub
leave
aad
outsl
sbb
lea
pmulhuw
mov
or
sub
pop
and
adc
ret
cmpsl
cmp
jmp
and
test
mov
push
ljmp
je
push
mov
outsl
idivl
insl
cmc
sbb
push
std
jo
daa
ss
pop
adc
fdivrp
pop
mov
rolb
dec
fs
add
mov
mov
cmp
lods
sub
outsb
int3
add
shlb
inc
jp
or
xchg
lds
dec
in
pop
gs
push
cwtl
das
jmp
addl
daa
mov
aaa
and
cld
lret
int3
outsb
out
ja
mov
xchg
into
adc
mov
jae
or
lret
and
pop
fimull
notb
lods
jmp
xchg
popfw
hlt
adc
dec
pusha
aam
sbb
dec
xor
lea
jg
pop
fdiv
mov
cmpsl
jl
push
lods
out
out
sahf
mov
jp
mov
xchg
sbb
and
cld
jge
mov
test
or
pusha
neg
xchg
mov
adc
jg
ja
dec
or
xchg
aad
hlt
je
sub
xlat
push
sbb
add
iret
ja
xor
es
pop
rcll
fsubrs
pop
xchg
cmpsb
push
jmp
lcall
xlat
js
dec
bound
or
fnstcw
jecxz
test
mov
or
lcall
sub
addr16
lcall
fbld
push
push
mov
movsl
daa
fiadds
push
icebp
nop
lea
incl
repz
xor
dec
imul
mov
inc
pop
xchg
sub
scas
test
xor
bound
jns
pop
icebp
out
lret
bound
cs
lahf
sbb
int3
sub
dec
cmp
std
add
cli
repz
cltd
cmpsl
xor
inc
lods
es
push
mov
icebp
add
js
in
push
xchg
cs
cwtl
lods
or
dec
addr16
jnp
xchg
push
testl
pushf
lods
cmp
push
push
push
imul
hlt
push
fdiv
mov
adc
dec
stos
imul
lret
add
out
mov
pop
scas
ffree
popf
xchg
xor
sub
xchg
dec
mov
dec
lret
adc
arpl
ret
frstor
imul
into
movsb
mov
int3
out
scas
and
push
in
cmp
mov
xor
sub
sbb
xchg
mov
mov
jle
push
pop
and
int
sbbb
cmpsl
hlt
push
inc
cmp
jge
imul
sbb
outsl
push
xor
test
jecxz
or
inc
movsb
ret
cmp
insl
mov
add
dec
add
repnz
les
xchg
cmc
movsb
dec
out
ret
lods
cmp
push
aas
dec
push
sub
mov
cld
nop
cmc
xchg
lods
jo
call
fs
out
xchg
popf
pop
cmp
orl
gs
and
movsb
inc
int
push
mov
push
sbb
shr
cli
pop
pop
xlat
push
jnp
inc
in
xchg
xor
add
pop
mov
jge
sbb
negl
push
push
push
jno
subl
xchg
and
mov
cmpb
mov
icebp
xchg
loope
test
hlt
fsubrs
jmp
xor
sub
pop
lock
inc
xlat
in
mov
shlb
push
jnp
or
fwait
cs
fs
aas
cmpsb
add
and
jo
cs
lods
sub
sbb
imul
out
pop
jbe
or
adc
insl
es
and
mov
clc
or
rclb
xchg
test
in
and
jnp
ljmp
mov
cmpl
icebp
mov
int
test
push
mov
loop
or
xchg
ljmp
es
ss
gs
test
mov
in
jl
push
pop
cmp
cmp
mov
out
mov
sub
leave
test
sbb
mov
ljmp
outsb
cltd
jo
mov
mov
jnp
scas
and
push
sti
mov
sub
or
dec
dec
pop
ja
xchg
outsl
mov
sbb
aam
mov
mov
dec
adc
fs
mov
sti
xchg
js
shll
xchg
push
sub
pop
jecxz
mov
jl
mov
fldenv
sbbl
dec
sub
cld
aad
xchg
mov
repz
lea
scas
aaa
jbe
dec
fwait
dec
iret
inc
push
lods
shr
jnp
xor
js
xlat
rcrb
mov
xchg
add
test
in
jp
sbb
push
adc
and
cmp
push
sub
dec
cld
outsb
cld
or
fimull
cmpb
or
sti
jge
data16
andb
dec
xchg
sub
mov
push
lods
jmp
mov
sbb
or
subb
adc
xchg
or
push
insb
adc
jp
or
mov
xchg
mov
xlat
jnp
inc
fldt
adc
loope
cmp
mov
sub
scas
aas
inc
ret
pop
mov
popf
cmpsl
cmp
aaa
cmp
das
jl
cmp
mov
mov
pop
rcr
mov
push
add
shrl
dec
outsb
cmp
int
cli
push
and
mov
sub
loope
enter
mov
dec
cmp
and
xchg
or
adc
push
aaa
lahf
rcll
cmp
push
stc
adc
loop
iret
arpl
je
inc
fwait
aaa
sbb
jne
xor
add
int3
push
adc
sahf
add
loopne
ret
pop
pop
loop
pop
enter
xchg
pop
jecxz
lcall
mov
push
out
ljmp
mov
sahf
fyl2x
mov
rcll
mov
and
cmp
movsl
sub
fstpl
imul
pop
ljmp
mov
sub
mov
pop
stos
mov
loopne
mul
sbb
popf
aas
jge
imul
xchg
jge
out
cmpsb
dec
aam
cmp
into
andb
loope
daa
fiadds
cs
pop
out
les
or
outsl
sub
sub
push
mov
lret
mov
jo
into
outsb
cmp
mov
int3
mov
addb
in
cs
mov
bndstx
call
and
fcoml
out
dec
xor
xchg
inc
mov
orb
adc
xchg
out
pop
dec
dec
std
aad
xor
icebp
iret
mov
lret
xchg
add
dec
std
mov
mov
jle
sbb
sbbl
lcall
rcrl
lahf
imul
insl
fcmovu
sub
andl
or
cmp
ljmp
xor
aaa
pop
ret
cli
scas
mulb
adc
xchg
and
aas
dec
or
outsb
add
mov
movsb
jne
xchg
xor
lea
rclb
es
xchg
adc
std
insb
rcr
into
jns
hlt
int3
mov
jmp
leave
int
stos
inc
pop
test
sub
pop
mov
or
imul
fsubrs
adc
out
xlat
outsb
jb
out
popf
shll
mov
ret
sbb
ret
add
sahf
out
dec
adc
lods
push
test
fisubs
sahf
outsl
imull
add
pop
into
xchg
inc
testb
push
cs
cmpsb
les
mov
mov
mov
and
mov
enter
je
add
or
push
xchg
xor
mov
sbb
push
jmp
mov
xchg
aas
sahf
xchg
imul
outsl
test
push
sub
pop
pop
push
jae
mov
cld
dec
and
cmp
push
mov
mov
mov
xchg
mov
out
xchg
shl
adc
pop
adc
xor
xchg
sub
mov
add
xchg
stos
push
dec
mov
cmp
frstor
add
mov
cmpl
ja
mov
xchg
xor
or
test
mov
mov
pop
pop
xlat
mov
fnstsw
pop
lahf
inc
xor
fnsave
sti
or
xor
gs
cmp
pop
jg
jl
fdivp
divps
push
stos
addr16
popf
inc
ljmp
pop
xor
es
add
test
popa
lret
test
mov
push
mov
push
adc
jns
jge
loop
jmp
shlb
mov
pop
adcb
push
jmp
or
lods
cmc
shrl
add
ja
lock
mul
das
xchg
imul
icebp
dec
pop
daa
scas
inc
pop
cmp
jae
jp
addr16
lds
xchg
out
xchg
sahf
aam
test
call
cld
dec
add
dec
loopne
inc
dec
cmc
jmp
sbb
fcomps
mov
lahf
jb
ja
or
stc
popf
shrb
xor
lods
ljmp
xchg
sahf
mov
fnstsw
add
jae
imul
addb
xchg
mov
sub
lahf
xor
push
es
inc
rcrb
dec
repz
pop
fwait
mul
lahf
dec
aaa
jmp
ss
in
jne
dec
sbbb
imul
mov
leave
dec
cld
int
shl
and
dec
mov
jbe
xor
lahf
jb
or
jl
fucomp
lds
test
mov
aas
loop
or
repz
jno
ret
cld
cmpsb
pop
sub
xor
sbb
or
les
call
xchg
xchg
ljmp
sub
add
mov
push
sub
dec
push
popf
mov
inc
rep
fs
or
dec
cli
xor
push
jmp
ss
jo
push
and
aaa
iret
push
cld
inc
cltd
cmp
adc
aas
cmp
call
incl
lret
fists
into
gs
inc
in
adc
cltd
test
sub
insb
sub
loop
les
not
cmp
xlat
rcr
in
test
and
mov
jge
adc
sahf
ror
cmp
call
jg
sahf
xor
fiadds
xor
pop
divb
xchg
stc
outsl
or
cs
inc
enter
nop
adc
mov
aam
ja
adc
es
and
cwtl
adc
xlat
lods
jmp
pop
mov
adc
cmp
loopne
fstl
scas
inc
popf
gs
aaa
xchg
jp
jecxz
push
adc
add
add
cmp
xchg
push
sub
push
ret
mov
loope
sbb
mov
in
in
nop
sub
fldt
in
mov
sbb
arpl
pop
les
loope
enter
adc
ss
cmp
ljmp
cmp
gs
mov
cmpsb
mov
repnz
enter
repz
and
pop
lock
inc
gs
clc
lea
jmp
fidivl
cmp
push
out
add
out
fidivrs
or
stos
jns
sbb
int
xchg
sbb
pop
xchg
cmp
jle
sahf
nop
popl
jo
lahf
mov
jg
push
cmp
pop
popf
pop
ror
xchg
sub
pushf
xor
jmp
aad
mov
mov
adc
xchg
xchg
adc
pop
mov
lods
cmp
lock
fwait
in
ss
xchg
mov
xchg
mov
push
xchg
add
cmp
pop
sbb
xor
ficomps
jge
jbe
sbb
cmp
xor
xor
inc
lahf
xchg
mov
mov
arpl
add
stc
dec
sbb
mov
mov
cmp
sub
mov
push
cmp
dec
movsb
out
xchg
xchg
jle
sub
js
dec
imul
aad
test
jnp
imul
int3
or
cmp
test
push
popf
test
notl
xchg
mov
pop
popf
adc
pop
mov
and
sbb
mov
and
aas
dec
mov
jle
fdivrs
inc
in
and
insb
fcmovnu
or
pop
jbe
fs
add
pop
dec
pop
or
xchg
xchg
fistpl
cmc
xorb
jmp
sub
mov
fcoms
mov
xchg
out
xor
aaa
pop
mov
pop
je
fs
shl
test
add
scas
or
mov
jb
mov
out
ret
stc
in
sub
cld
iret
out
scas
sbb
cmpsl
imul
clc
sub
sub
dec
loopne
shr
ljmp
cmp
ret
std
movsb
jo
imul
stc
push
mov
add
jnp
test
pop
push
add
adc
and
xchg
rorl
adc
shlb
jmp
and
mov
push
jne
ret
ja
imul
xchg
jmp
jnp
dec
cmp
sarb
into
jnp
cmp
pusha
inc
and
cmp
fdivs
cltd
mov
and
fmul
ret
xlat
hlt
leave
shrl
add
inc
repz
loope
and
mov
nop
pop
icebp
xchg
pop
inc
negb
push
mov
es
stos
push
adc
in
test
mov
jg
pop
cwtl
push
lods
mov
imul
adc
inc
test
and
shlb
clc
sbb
sbb
in
push
lds
gs
dec
dec
arpl
icebp
nop
xchg
mov
testl
aad
mov
fdivrp
sahf
or
jbe
arpl
int
inc
clc
dec
mov
pushf
mov
aam
fidivl
arpl
repz
pop
cmp
mov
sbb
mov
ffreep
es
mov
pop
ret
call
sbb
ljmp
jge
shlb
fcompl
mov
jne
pop
jno
push
sahf
lds
mov
lret
push
mov
int3
loopne
jle
fbstp
jp
push
and
inc
daa
das
repz
adc
ss
ss
in
push
jl
sub
and
loopne
lods
pop
mov
or
jge
mov
int
sub
dec
leave
rorb
ret
stos
jecxz
idivb
cld
inc
and
pop
inc
stos
inc
mov
dec
pop
lahf
sahf
jle
shlb
cmp
mov
dec
neg
pusha
pop
inc
sahf
lahf
notl
jae
lea
pusha
or
popf
ja
shr
iret
pop
test
push
sub
xchg
sbb
filds
scas
lds
jmp
sbb
inc
cld
mov
lods
aas
mov
xlat
inc
push
test
fistl
mov
mov
sahf
mov
dec
dec
sarb
sub
imul
xlat
clc
fbstp
stc
in
mov
pop
int3
mov
or
test
mov
push
mov
sub
icebp
cmp
std
mov
cs
sub
mov
mov
call
lods
cld
and
push
sbb
inc
push
dec
and
and
sub
cli
xchg
inc
mov
sbb
vmwrite
lods
daa
add
dec
xchg
jnp,pn
leave
test
fwait
sbb
xchg
imul
mov
ds
ds
pop
jl,pt
push
movsl
movsb
dec
hlt
mov
imul
jbe
jae
fmull
push
mov
insb
xchg
cs
nop
and
cltd
iret
mov
ljmp
lret
ret
add
push
in
test
mov
test
repnz
nop
jns
mov
jae
mov
cwtl
arpl
xchg
stc
rol
aaa
aaa
and
jbe
pop
push
cmpl
mov
mov
mov
jle
aas
push
sbb
mov
fadd
inc
jl
mov
aam
dec
and
int3
stc
scas
jae
lock
inc
and
fidivl
iret
nop
gs
mov
call
or
dec
imull
sarb
cmp
rolb
jbe
jg
adc
insb
sbb
dec
imul
mov
sahf
mov
jns
sbb
and
xchg
mov
roll
pop
pop
cmpsb
push
call
mov
lds
push
or
iret
out
push
loopne
inc
pmuludq
pop
repz
mov
je
jo
fstl
testl
adcb
jns
lahf
pop
adc
jne
pop
mov
pop
jp
adc
jo
incb
fstpt
pop
lea
push
mov
xor
lret
push
jmp
stos
fistps
push
pop
addr16
jno
shll
adc
repnz
inc
pop
sub
lods
fcoms
pop
js
or
cli
popf
sbb
sbb
adcl
sti
add
sbb
cmc
mull
popa
scas
nop
andb
mov
xor
leave
or
mov
cli
inc
into
mov
add
nop
jbe
orl
jne
in
push
idivl
add
sbb
pop
xchg
mov
ret
jp
or
fsubrl
push
jmp
ds
cwtl
push
jp
sbb
jbe
cmpsl
cmp
dec
push
lcall
or
sti
cwtl
dec
loope
sbb
jp
inc
xor
mov
jo
repnz
imul
cmp
jnp
adc
sbb
inc
nop
test
out
test
mov
repz
stos
sbb
leave
loope
dec
xor
je
mov
cwtl
insb
fxtract
push
shll
orl
mov
leave
mov
fsts
repz
jmp
inc
mov
or
ficoms
addb
cmpsb
or
aaa
movsl
inc
aas
xchg
and
test
pop
pop
inc
lret
adc
dec
xchg
into
mov
in
sti
inc
xor
xor
pop
andl
mov
push
mov
int3
out
or
or
sub
jp
ja
mov
fstpt
aam
mov
add
lcall
adcb
cmp
sbb
mov
adc
mov
pop
bound
dec
push
mov
loope
das
fstpl
cmpsb
enter
out
daa
lods
inc
or
mov
repnz
insb
sub
fidivl
insl
cli
fs
mov
es
int3
jle
lods
sub
push
lock
dec
dec
mov
add
cmpsl
jne
mov
mov
pop
ljmp
dec
rcrb
lods
jmp
dec
scas
add
cmpsl
add
dec
mov
cmpsb
xor
les
cmpsb
pop
push
pop
lods
jmp
sbb
mov
faddp
pop
out
jmp
ds
mov
data16
rorb
push
xor
sub
jmp
or
enter
jae
movsb
dec
inc
adc
sub
mov
int3
jnp
outsl
xor
push
adc
jl
and
dec
mov
dec
movsb
repnz
cmc
imul
sbb
mov
flds
adc
and
enter
cs
ljmp
inc
stos
jb
in
fisubs
xchg
scas
add
mov
pop
add
or
adc
rorl
mov
enter
fisttpll
int3
jle
add
push
jl
ret
outsl
and
imul
lock
cltd
xor
outsl
cltd
xor
jne
cltd
xchg
insb
xor
cmp
movsb
test
loop
jecxz
xor
sar
lds
adc
xor
xchg
pop
inc
inc
movsl
std
cmpsl
daa
add
push
or
inc
mov
in
clc
sarl
inc
lds
bound
pop
xor
movsl
insl
jno
and
mov
cmp
pop
jecxz
mov
aad
xor
mov
jne
xor
mov
std
test
std
xor
or
xor
outsl
push
jmp
ficompl
or
aas
xor
mov
pushf
fstpt
lods
mov
fwait
sub
and
cmp
aam
xchg
pop
es
mov
lcall
add
test
aaa
inc
movsl
jl
or
xchg
cwtl
sub
call
fs
jle
sahf
fcomip
stos
add
fscale
jg
icebp
sub
loop
jnp
inc
leave
adc
inc
mov
dec
cwtl
fs
or
mov
popa
cmpsb
scas
sub
ja
and
dec
add
sub
ja
jbe
and
fxch
incb
lods
ja
sbb
rcrl
arpl
push
cmc
dec
adc
nop
push
popa
iret
jno
jecxz
adc
fmul
sbb
mov
cmpsb
mov
xlat
out
xor
inc
ret
add
add
fwait
xor
mov
cmp
mov
dec
jo
hlt
in
mov
imul
mov
testl
cmp
jecxz
daa
adc
sbb
xchg
outsb
mov
mov
aas
xor
cmp
movsl
jge
popf
stos
sbb
and
divb
cld
cld
fnstenv
mov
xorl
dec
xchg
sarb
pop
xchg
cmp
sbb
jmp
jbe
in
test
dec
sub
sub
mov
ja
jns
cmp
push
xor
mov
sahf
in
iret
dec
std
fsubrp
jne
adc
jae
lods
sti
xchg
movl
fdiv
stos
aam
push
push
int3
adcb
and
push
mull
jg
aad
or
out
popa
int
add
jecxz
and
or
scas
dec
cs
repnz
hlt
int
gs
mov
sub
add
mov
fcmovb
popa
sti
xor
mov
jbe
out
flds
or
dec
push
imul
jle
jmp
in
push
and
imul
adc
mov
sub
std
lahf
xchg
or
test
mov
push
mov
in
xorb
push
add
stc
je
cli
mov
sub
idivl
sti
jns
xor
lea
jns
je
popa
std
mov
add
cltd
or
insb
sub
xlat
push
hlt
or
push
jae
or
mov
push
jno
jmp
xor
iret
mov
mov
scas
inc
leave
sub
addl
adc
cmp
sub
fs
mov
push
popf
std
xchg
in
jnp
sub
mov
mov
hlt
and
mov
mov
xchg
mov
cmpsb
pop
jbe
aad
xor
cmp
sti
cmp
jae
je
lret
cli
or
inc
and
mov
arpl
add
aaa
jp
in
pop
fwait
push
sbb
mov
xor
std
sub
insl
adc
int
je
fidivl
xchg
push
mov
and
xchg
icebp
rorb
mov
out
push
inc
ljmp
stc
mov
jmp
sbb
sub
mov
scas
cltd
jo
ret
or
aaa
scas
pop
stc
aas
fildl
inc
mov
ja
xor
cmpb
shr
lock
in
pop
sahf
mov
jae
xor
sbb
sbb
dec
mov
push
fsub
dec
mov
shlb
data16
cli
and
outsb
xorl
jb
fcomip
pop
cmp
mov
cmpb
xor
dec
idivb
dec
test
lods
jge
clc
shll
mov
leave
popa
fbld
imul
pop
mov
dec
movsl
cmp
xor
or
test
pop
push
inc
mov
or
push
insb
inc
dec
ss
cmp
xlat
decb
sbb
jbe
repnz
imul
xor
pop
mov
jl
add
outsb
fwait
iret
xchg
mov
in
call
cwtl
xor
cmp
out
dec
or
inc
jmp
test
sbb
mov
and
bound
pop
and
inc
aad
addb
int3
rorl
push
inc
pop
adc
or
jl
sub
shrb
mov
inc
and
mov
jno
jne
inc
push
mov
sbb
mov
push
fwait
not
jns
rol
dec
mov
scas
mov
jg
call
push
sahf
pop
aad
mov
inc
jge
data16
test
xchg
jp
dec
sbb
cmp
add
in
ror
call
push
pop
add
dec
jo
dec
repnz
or
js
frstor
inc
fsubrs
pop
mov
int3
mov
push
inc
inc
inc
in
ds
jmp
sahf
test
cmp
xchg
outsb
fbstp
xor
pop
movsl
in
push
mov
sbb
in
lods
inc
lcall
dec
xor
jae
inc
xchg
fnstsw
push
jl
rcrl
xor
mov
adc
mov
pop
and
push
push
add
adc
leave
inc
int
and
cltd
inc
fimull
packsswb
inc
sub
mov
and
and
test
test
push
pop
test
mov
jg
lret
mov
push
fdivl
xlat
and
test
xchg
mov
nop
mov
rcr
adc
jle
adc
push
cwtl
das
xchg
inc
sub
push
out
dec
lret
mov
jmp
sahf
mov
and
pop
or
std
push
in
push
aad
xchg
shlb
xor
or
mov
lahf
cmpsb
outsb
pop
ret
fstl
add
jb
mov
xchg
sub
mov
mov
movsl
inc
sub
int3
xchg
xchg
lds
arpl
arpl
cmpl
bound
mov
push
lret
or
in
repnz
pop
mov
in
sub
ja
mov
sahf
insb
lret
adc
xor
ficompl
int3
repz
nop
dec
mov
pop
mov
fcoml
or
mov
mov
negl
ljmp
pop
ljmp
popa
rorb
sbb
movsb
gs
in
gs
inc
flds
mov
ja
pusha
lods
into
cwtl
fidivrl
mov
je
xchg
mov
gs
mov
mov
pop
cs
aaa
fidivrl
data16
pop
xor
jno
cli
mov
xor
subl
sub
cmp
lods
add
test
imul
xchg
push
push
sub
jmp
jmp
push
mov
cmp
pop
ret
lods
adc
xor
cmc
or
jecxz
sahf
gs
call
and
test
jbe
inc
test
sub
sbb
sbb
push
insb
cmc
jbe
scas
fstps
cmp
popa
cmp
inc
mov
jle
cmp
xor
rclb
jbe
dec
icebp
imul
leave
sbb
mov
mov
ljmp
adc
fistpl
loope
stc
or
out
ficomps
sub
iret
or
push
adc
or
mov
pop
test
mov
fs
mov
mov
iret
sbb
imul
imul
jp
jmp
dec
and
ja
out
imul
fdivrs
pop
addr16
push
mov
fidivrs
xorl
ret
adc
jp
pop
cwtl
push
dec
xor
nop
jb
add
xor
jne
stc
cmp
mov
orl
repnz
sarl
fistpl
cmp
cmp
pop
adc
fs
push
pop
fwait
lods
sbbl
enter
jecxz
or
dec
inc
stc
cmp
push
jmp
cmp
repnz
pop
fbstp
mov
loopne
notl
mulb
add
pop
cmp
dec
jg
cmp
or
mov
push
or
subb
in
sbb
xlat
sarb
and
aad
push
inc
enter
mov
push
cmp
sub
sti
leave
jge
sbb
xchg
pop
sub
adc
cmc
out
adc
scas
ret
cmp
sbb
mov
lret
test
mov
loope
jns
inc
inc
mov
iret
scas
dec
insb
fbld
mov
loope
mov
cli
or
stos
xchg
lret
fsubrp
lret
out
sub
lcall
xchg
pop
sub
add
pop
mov
pop
pop
xchg
out
sbb
xchg
pop
sbb
jo
loop
nop
inc
mov
xchg
orb
pop
or
push
inc
test
jne
mov
jp
xchg
sub
shlb
orl
pop
repz
mov
add
lock
imul
ds
and
bound
or
jae
xor
jns
sar
into
mov
mov
sbb
scas
and
stc
movsb
ja
xchg
movsb
ja
lcall
or
cs
scas
sbb
in
xor
push
js
pop
and
ret
jl
int
push
xchg
es
pop
push
jns
idivl
into
dec
add
pop
aad
sahf
lock
mov
dec
bnd
xor
ds
cwtl
orl
ja
addb
and
shr
mov
pop
inc
lods
test
push
and
mov
jecxz
in
add
mov
jno
mov
fisubs
mov
stos
cmp
inc
outsb
lret
scas
frstor
insb
xchg
sub
jb
cmp
cmpl
push
sbb
inc
aas
jg
out
int3
repnz
shll
mov
push
pminsw
mov
lock
mull
cmp
out
sahf
in
jno
xor
push
imul
cltd
cmp
aaa
add
mov
cmp
orb
loop
mov
adc
loope
dec
shll
cmpl
idivl
jns
mov
add
ja
mov
push
sub
cltd
push
inc
pop
pop
loopne
cltd
or
add
lock
jmp
dec
mov
fistpll
cld
jnp
fsub
mov
rcrl
inc
into
shrb
mov
cs
lock
jbe
add
sahf
repnz
or
push
adc
pushf
add
stc
mov
xor
pushf
sbb
mov
pop
mov
mov
sub
xor
push
or
or
bound
into
int
add
sbb
sub
in
jle
push
and
mov
loop
lahf
bound
xor
inc
push
movsl
mov
mov
add
test
and
adc
pop
add
shl
bnd
leave
and
imul
sti
lock
xor
sub
xlat
iret
or
pop
and
data16
data16
xchg
fadd
and
mov
into
push
and
mov
or
jge
es
push
add
mov
lods
inc
push
fimuls
sub
dec
xchg
bound
jbe
popf
ss
or
xor
inc
std
les
adcl
cmp
bound
sub
jns
jge
jl
xorb
fwait
repnz
add
cwtl
push
movsl
clc
adc
sub
shlb
xchg
orl
jmp
shlb
ret
or
out
mov
sub
imul
sbb
inc
push
mov
mov
dec
inc
and
mov
cmpsl
mov
and
int
xchg
dec
pop
in
inc
inc
aas
jae
enter
outsl
daa
pop
inc
pop
xor
add
push
in
clc
or
push
ficoml
sbb
lods
test
ficoms
jbe
mov
and
sbb
mov
mov
mov
mov
pop
loopne
pop
sbb
loope
dec
addr16
mov
arpl
push
popf
xchg
jle
push
out
daa
inc
push
in
pushf
icebp
xchg
mov
or
mov
out
pop
pop
push
cld
scas
dec
jg
inc
repz
mov
push
adc
icebp
dec
fcoml
cltd
sub
sbb
dec
in
negl
aaa
jp
dec
xor
insb
adc
ljmp
cmp
mov
fisubrl
adc
inc
and
inc
int3
mov
sahf
pop
mov
lea
sbb
jg
lods
dec
cmp
dec
arpl
fstpl
inc
add
jge
and
mov
mov
jecxz
jge
dec
mov
cmp
cmp
aas
sarl
push
rcrb
jne
orb
add
cs
inc
stos
iret
data16
je
pop
fldt
shlb
jl
mov
push
dec
sbb
sti
or
mov
enter
imul
jge
int
lock
imul
lods
pop
cli
mov
out
dec
fdivl
insl
lods
inc
rclb
fcmovnbe
and
insl
lahf
and
or
xor
jmp
sbb
inc
fstpl
pop
mov
andb
sbb
sub
int
jge
dec
mov
lds
lock
dec
push
adc
mov
leave
sub
test
cmc
outsl
ljmp
out
lret
mov
mov
rcrl
sbb
and
and
rorl
dec
pop
sti
neg
and
add
or
cltd
dec
fisubl
stc
lods
xchg
loopne
sti
out
mov
cmpsb
ret
loop
pushf
dec
cmp
in
dec
lods
loopne
sbb
int
or
sub
stos
jb
int3
aaa
lret
sub
mov
and
inc
lds
mov
sarl
jle
imul
push
repnz
jp
push
add
sub
cs
pusha
xor
or
jae
add
mov
pop
sahf
mov
push
mov
sub
push
and
sub
inc
xchg
mov
mov
sub
mov
adc
nop
sub
repz
add
addr16
stos
leave
and
add
xor
mov
mov
and
sub
mov
ds
in
pop
cmp
repz
rol
jae
push
js
jns
imul
or
adc
dec
add
pop
iret
arpl
push
jmp
cmpsl
xchg
sbb
icebp
mov
lock
rep
dec
dec
pusha
inc
enter
rclb
arpl
dec
add
xchg
cmpsl
xlat
fstl
pusha
cmpsl
sub
ret
jb
dec
aas
data16
cld
dec
adc
hlt
clc
push
inc
test
mov
test
jl
ss
sub
repz
dec
fists
push
in
sbb
sti
sub
mov
dec
mov
pop
stos
cmp
push
adc
and
insb
push
lds
add
and
pushf
cmp
xchg
ret
mov
ja
loopne
push
push
mov
push
jns
in
gs
out
mov
dec
insl
test
movsb
xorb
sub
xor
shrl
jle
aas
cmp
imul
jbe
es
xchg
and
popa
add
subb
and
xchg
ja
sbbl
jne
out
orb
in
in
fnstsw
sbb
pop
fnsave
enter
aad
cmp
addr16
or
xchg
aas
jge
cltd
mov
repz
xchg
cltd
pop
movsl
xchg
cmpsb
mov
fisubs
in
push
inc
mov
xor
mov
push
add
pop
cmp
adc
push
mov
jo
lods
push
mov
cmpsl
ret
push
rcrl
mov
inc
jmp
ficoms
test
scas
fwait
test
popf
adc
xchg
call
add
xchg
sub
lahf
ja
sbb
and
sub
repnz
xor
ljmp
or
push
stos
test
fstps
adcl
mov
xchg
push
mov
inc
ret
jb
dec
push
stc
aam
adc
adc
add
out
rorl
dec
jnp
mov
cmc
nop
std
mov
testb
mov
add
aad
push
je
adc
outsl
dec
movsb
cmpsl
jp
lods
pusha
cmp
in
aad
negb
pop
jae
xor
fistpll
out
es
out
stc
dec
push
cwtl
scas
adc
imul
mov
or
jp
sarl
aas
push
mov
stos
arpl
rcll
scas
mov
fdivrl
and
pusha
lahf
or
sub
fistpll
push
xchg
add
jns
jmp
out
insl
push
pop
aaa
adcl
inc
andl
jbe
and
scas
repnz
cmp
and
mov
jnp
fstpt
in
aad
pop
ljmp
pop
mov
cltd
jge
lret
xor
push
inc
push
repz
popf
sub
jns
dec
movsb
dec
lahf
fwait
ja
movsb
js
dec
stos
lds
sbb
mov
sub
adc
movsb
mov
push
dec
stc
pop
movb
rol
shlb
xlat
std
sbb
scas
jno
inc
xchg
pop
in
add
cwtl
or
sbb
push
add
lcall
fdivp
xor
push
cmc
xor
cltd
ljmp
push
inc
fdivs
mov
adc
jae
stos
jle
rcr
inc
mov
loope
cmp
cmp
add
das
jl
cmp
adc
out
in
pop
mov
jle
pop
loop
sbbl
pop
jg
mov
jl
loope
mov
out
mov
push
xchg
push
or
jb
les
xorl
test
push
mov
or
nop
jl
mov
fistl
mov
stc
jg
push
inc
iret
pop
arpl
notb
xor
or
fcmovne
xor
xor
decl
movsb
and
sub
jnp
cmp
adc
sbbb
mov
inc
cld
pushf
or
dec
mov
push
daa
iret
iret
mov
dec
pop
pop
mov
push
mov
pushf
lods
mov
fs
jnp
and
mov
inc
adcl
lods
loopne
xor
andl
sub
jb
push
ret
sub
adc
cmp
sbb
loope
xchg
and
out
dec
cld
lcall
jbe
push
insl
pop
negb
cld
push
cmpsb
mov
dec
aad
cmp
sti
mov
ficompl
mov
mov
push
test
test
cld
test
popl
pop
pusha
mov
mov
push
shrb
inc
jle
inc
mov
repz
jns
iret
sub
and
pusha
cmpsb
xor
pop
sub
pop
aaa
out
sub
arpl
push
in
shr
sbb
pop
dec
pop
pop
sub
imull
shrl
mov
or
mov
inc
rcll
jo
insl
and
fs
shl
inc
mov
mov
jge
leave
lahf
in
dec
int
sbb
jp
stos
mov
enter
push
std
js
mov
push
dec
dec
movsl
and
popl
outsb
pop
push
push
addps
fwait
sti
test
add
xor
adc
fmul
dec
cmp
sti
subl
loope
mov
out
inc
sub
jae
jns
je
inc
and
push
ljmp
jno
or
stos
mov
lcall
pop
cmp
adc
mov
push
cs
adc
pop
lock
cmpl
sub
gs
xor
aas
lock
sub
mov
fs
push
jecxz
mov
popl
lods
sub
sub
add
cmp
jecxz
enter
in
cmp
cmpsl
jmp
rcll
int3
ret
pop
cmp
pop
dec
add
pushf
dec
imul
mov
cmp
subb
dec
xchg
mov
mov
sbb
ret
add
jb
div
inc
test
adc
lds
or
ret
jg
cmp
cld
and
or
call
or
ficomps
out
dec
pop
xor
sbb
lds
jbe
rep
xchg
insb
popa
adc
push
rcll
pop
hlt
or
jnp,pn
mov
sbb
ljmp
loope
pop
sub
cltd
icebp
or
cmp
push
jmp
and
and
jb
pop
verr
sbb
cmp
sti
jmp
mov
mov
mov
jl
jb
xchg
add
ja
cmp
std
stos
add
sbb
sub
shrb
sarl
test
ret
cmp
loope
out
pusha
out
mov
loope
es
xor
add
arpl
scas
dec
and
adcb
jo
shrb
lds
mov
mov
pushf
pop
rorb
xor
imul
dec
mov
mov
out
repnz
sbb
rcl
dec
dec
cmpsl
ret
pop
movsb
stos
andl
adc
shll
sub
aaa
movsl
and
ret
mov
pop
mov
sti
pop
nop
aad
add
aad
dec
rcr
lret
mov
xchg
stos
in
sarb
icebp
mov
mov
or
add
gs
and
stc
mov
stos
stos
push
in
adcl
xor
js
repz
je
push
insb
insb
push
push
sub
xor
inc
jmp
sarl
push
clc
xchg
push
cmp
imulb
hlt
movsb
adc
mov
jle
jecxz
outsb
add
pop
push
cmc
push
jle
adc
or
mov
adc
test
jae
imul
sbb
xor
pushf
jmp
sbb
mov
adc
aam
rclb
pop
jno
xchg
xor
mov
cmp
shll
std
es
cmpsb
sbb
pusha
mov
and
xlat
mov
lea
dec
scas
stos
inc
cmpsl
out
sti
adc
xchg
fistl
inc
pop
inc
mov
and
pop
gs
xchg
loop
push
call
pop
and
cmp
mov
jbe
jecxz
xor
bound
add
mov
sub
test
pop
sti
icebp
movsl
aaa
popa
fwait
cmpsl
ret
dec
mov
jp
dec
sub
and
insl
mov
movsb
add
lods
push
icebp
testl
add
push
mov
sarb
fdivrs
sbb
push
mov
jne
ja
fcmovnu
mov
es
push
inc
pop
sti
mov
sub
jb
jb
pop
push
loope
mov
inc
sub
aam
daa
rclb
ret
push
test
push
push
mov
push
adc
mov
ret
dec
push
cltd
mov
das
repnz
push
stos
mov
cmp
hlt
rol
cmp
push
pushf
orl
cmp
cmp
push
mov
add
in
sti
xlat
cmc
lds
cmp
mov
jbe
sbbb
nop
leave
jmp
cmp
lret
popf
pop
push
lahf
add
clc
pop
gs
int
xor
dec
adc
pop
inc
cmp
push
sub
fdivl
jno
inc
jne
inc
out
or
aam
movd
shll
push
push
outsl
daa
inc
dec
push
jmp
scas
jl
cmpsb
mov
dec
fcmovu
insb
cmp
fcmovne
out
mov
inc
push
aaa
into
jb
inc
push
jp
and
in
subl
shll
in
sub
jecxz
rol
loope
cmc
dec
xsha1
cmpsb
dec
scas
das
inc
je
jp
xchg
mov
clc
adc
mov
popf
dec
sbb
adcl
adc
adc
jbe
pop
addr16
aaa
arpl
jge
sbbb
cmc
adc
adc
mov
push
adc
int3
test
push
and
push
mov
push
inc
bound
repz
cmp
xor
lahf
mov
insb
or
xor
ljmp
rorb
sbb
call
out
xchg
subb
clc
cmp
in
jle
or
add
jge
ret
mov
daa
data16
inc
loopne
imul
sbb
fs
mov
xchg
bnd
push
push
gs
pop
cmp
xchg
mov
adc
mov
fiadds
jb
jle
xchg
aas
outsl
xchg
aad
lahf
mov
inc
push
xor
pop
xor
cmpsl
jns
out
sub
fbld
inc
pop
mov
fs
sbb
xchg
mov
mov
and
jmp
xchg
and
xchg
or
xchg
sbbb
int3
sbb
lock
aas
jle
fcomp
loope
mov
jb
cmp
mov
es
jae
cli
and
push
xor
ja
sub
sar
dec
loopne
shll
loopne
xchg
imul
cmpsl
or
adc
imul
pushf
xchg
jnp
rcrb
dec
push
mov
mov
push
pop
insl
inc
xchg
cmpsl
out
lret
mov
dec
ret
inc
pop
mov
push
lock
xor
or
lret
sbbl
clc
fildll
mov
fld
out
lods
mov
dec
pop
fpatan
dec
clc
sahf
dec
les
out
xchg
popa
xor
mov
add
sub
call
pop
in
and
xlat
and
add
mov
out
daa
xchg
pushl
pop
icebp
fcoml
push
or
pop
cld
xchg
faddp
bswap
arpl
and
fidivrs
lahf
sbb
mov
jmp
jo
push
push
jne
pop
pop
lahf
fbld
or
hlt
mov
sub
push
nop
sti
int3
dec
es
or
stos
cmp
les
sub
stos
push
loop
or
andb
push
cli
push
in
inc
lcall
mov
jae
xor
xchg
cmpsl
sub
add
popa
inc
pop
and
stos
popa
cmp
gs
mov
mov
push
lret
pop
insl
pop
mov
dec
and
jae
xchg
add
mov
fsubl
sbb
xor
loopne
lods
dec
fidivs
dec
aas
push
ds
push
mov
pop
jo
call
movsl
ret
cltd
fisubrs
je
add
cld
jg
call
int
sub
repz
push
mov
push
mov
mov
movl
push
rol
push
cmp
movsb
dec
sarb
ret
sub
adc
lds
mov
push
das
mov
jg
dec
testl
and
cld
fcomp
push
sub
fmulp
pop
cld
cmp
push
cmp
and
insb
sub
enter
add
sub
repz
out
jno
adc
fidivrs
fsubrl
mov
mov
inc
jle
jp
push
scas
push
pusha
stos
das
mov
shrl
or
inc
fistpll
int3
jo
andl
adc
dec
cmp
in
mov
addr16
shll
imul
xorb
in
loope
xchg
push
cwtl
addl
inc
notb
out
and
sub
mov
pop
or
mov
test
push
and
sub
fidivrs
cwtl
add
mov
dec
mov
sahf
dec
or
inc
push
sbb
jnp
call
ret
cld
lods
add
sarl
lds
imul
mov
xor
rcll
or
add
js
and
push
idivl
sub
jns
mov
iret
xor
outsb
xchg
xchg
sbb
ljmp
sub
daa
jns
repnz
lcall
jae
adc
test
mov
mov
cmp
fstl
movsb
repnz
cmp
mov
pop
jmp
and
adc
loop
fucomp
dec
mov
imul
sub
xor
jmp
ljmp
dec
mov
cmpsb
ds
pop
stos
iret
add
or
mov
arpl
xchg
fdivrs
and
shrl
xchg
cmp
mov
imul
jmp
cmpl
push
inc
scas
ds
lods
lods
cmpsb
lds
dec
loopne
dec
sub
in
xor
call
adc
aas
jno
popf
sub
aaa
aad
in
and
repz
xor
cmp
jecxz
lahf
mov
in
filds
dec
xor
pop
jp
aad
mov
adc
sub
and
stos
add
sub
out
add
pop
dec
aad
sbb
jno
in
cmp
mov
dec
pop
jae
shrb
jns
test
or
int3
mov
in
mov
ret
flds
scas
xchg
mov
cmc
aaa
pop
inc
and
pop
icebp
cmpsl
cld
stos
mov
mov
lret
or
test
adc
jo,pn
inc
mov
xchg
test
bound
das
mov
rol
xchg
xlat
dec
mov
bound
lds
push
and
mov
push
repnz
pop
adc
mov
xorb
repnz
lret
xor
cmovns
jl
out
in
fstpl
or
sbb
icebp
cmpsb
scas
pop
shrb
inc
loopne
lock
xor
adc
popa
inc
push
sbb
push
enter
lds
loopne
adc
add
push
jl
icebp
mov
jbe
stc
dec
lods
mov
imul
pop
mov
xlat
into
je
inc
cs
pop
cmp
dec
into
and
jg
lods
mov
mov
ja
xor
lcall
in
nop
jno
scas
inc
or
bound
push
adc
cmovnp
xor
test
ljmp
test
mov
sti
out
xchg
jg
or
in
push
pop
addl
jno
mov
push
mov
mov
or
sub
imul
adc
test
mov
xchg
popf
sub
mov
sub
and
imul
cmp
je
adc
add
pusha
cli
clc
jns
jp
es
lret
pop
addr16
adc
mov
xchg
dec
imull
dec
jno
mov
mov
mov
js
repz
aaa
das
add
pop
sbb
lcall
sahf
or
fstl
sbb
xor
cmc
loope
nop
iret
xor
push
in
sbb
xchg
xor
out
pop
push
push
add
movsl
sbb
call
das
push
adc
movsl
icebp
pushl
add
int
stos
dec
idiv
pushf
rolb
stos
dec
arpl
adc
loopne
gs
out
test
pushf
adc
and
mov
das
popa
mov
push
iret
mov
cmpsl
adc
lds
sbb
add
mov
testl
jle
insl
xor
lea
adc
lcall
and
xchg
or
leave
lods
sbb
add
fiaddl
xchg
dec
push
push
dec
mov
cmpsl
push
jo
xchg
xchg
jnp
mov
push
in
and
fisttps
xchg
push
jmp
inc
movsb
jmp
pop
mov
pushf
mov
jmp
jp
sub
insb
mov
idivb
movsl
rcll
jmp
pusha
jmp
dec
mov
jle
shrb
test
adc
dec
mov
movsb
ret
out
fisubl
and
sub
or
or
inc
mov
shrl
push
xor
jbe
dec
jb
lahf
push
mov
adcl
push
imul
xor
test
fs
aad
das
cmp
fstpl
fs
sub
lahf
dec
push
push
in
lods
or
test
inc
inc
push
jmp
dec
and
push
pop
into
xor
jno
dec
rolb
pusha
loop
dec
out
fcoml
mov
popf
gs
jecxz
int
dec
mov
mov
add
cli
lds
adc
shl
xchg
xchg
aam
outsb
inc
cmc
adc
cmp
dec
movsl
into
fwait
pop
test
sti
push
xchg
fdivl
idivl
mov
loop
or
out
inc
nop
mov
pop
shrb
subl
js
rclb
aaa
popa
and
cld
and
and
jae
cmp
shrb
inc
cmc
mov
test
jb
pop
fs
inc
outsb
adc
stc
popf
jo
mov
lods
push
cwtl
je
mov
out
cmp
pop
jns
ret
cmpsl
xchg
sub
iret
enter
sub
call
and
add
es
out
addr16
clc
orb
mov
daa
inc
pop
gs
cwtl
negl
sbb
xchg
stos
scas
adc
and
jb
repz
scas
sub
pop
ror
pop
cmpsl
js
movsl
dec
je
out
aaa
insb
xchg
aam
movsb
movsl
pop
out
vhaddpd
loope
sub
cmpsb
add
jbe
in
push
rcl
sahf
pusha
insb
mov
stc
std
ret
adc
cmpsb
xchg
inc
popf
mov
push
imul
out
mov
stc
or
clc
roll
sbb
xor
mov
jae
jl
lahf
scas
sbb
or
out
sub
dec
lahf
dec
jbe
dec
loope
jnp
aas
mov
push
test
fs
push
jb
cld
adc
add
pop
das
mov
mov
rcll
or
or
push
or
push
or
push
mov
pop
jno
scas
xchg
in
mov
insb
call
pop
mov
ss
fildll
lock
jp
nop
cmp
inc
imul
lock
sarb
pop
leave
loope
cwtl
jbe
add
pop
aam
ss
pushf
dec
inc
gs
xchg
btr
stos
jg
insl
push
lret
mov
repz
je
outsb
sbb
push
ror
nop
leave
sahf
xor
or
into
mov
aad
in
scas
inc
push
cmp
lret
and
rcll
sub
pop
lock
and
pop
loope
mov
mov
sub
icebp
jle
lahf
and
mov
popf
mov
stos
mov
and
stos
shlb
fnstenv
aad
xchg
aaa
vmovsd
adc
lds
inc
rcr
add
pop
aaa
sahf
sub
shlb
fimuls
inc
push
jns
dec
call
jge
lret
adc
sbb
xor
add
js
insb
movsb
dec
lcall
inc
push
icebp
test
lds
mov
jmp
inc
xlat
int3
sbb
xchg
bound
xchg
cmp
pop
outsb
mov
pop
add
inc
out
cmp
ret
int
jae
testl
lret
insb
xlat
push
sti
repz
inc
out
jbe
pop
in
repz
xchg
add
cmpb
sti
insl
jbe
stos
lock
jg
dec
push
inc
stos
ret
loope
jne
jge
adcl
dec
roll
add
add
gs
fisttpl
sub
push
pop
pop
adc
arpl
daa
cmpsl
cmp
push
mov
loopne
adc
rorb
jge
pop
pusha
pop
xchg
adc
pushf
push
leave
int
sub
lret
xor
lahf
or
xchg
push
sbb
add
sub
pop
sbbl
hlt
push
cmp
mov
or
dec
icebp
sbb
fcoms
xor
jecxz
out
push
pusha
mov
xor
mov
insb
fnstcw
iret
jb
aam
aas
and
cmp
fdivs
xchg
adc
ds
push
negl
push
fidivs
ret
dec
xchg
and
sub
or
xor
dec
or
jge
mov
movsb
adc
inc
fisubs
mov
gs
dec
insb
icebp
shlb
int
xchg
ss
scas
or
cwtl
out
or
pop
movsl
inc
mov
dec
dec
xchg
jp
scas
call
or
psraw
fimuls
stos
push
hlt
or
mov
dec
pop
sub
mov
mov
xchg
sbb
xor
test
mov
jmp
test
leave
push
shl
mov
xchg
or
imul
adc
mov
jne
jno
lods
pop
and
daa
mov
inc
adc
aam
daa
mov
ss
push
mov
mov
or
out
cmpsl
outsl
test
mov
mov
popa
cli
int3
and
imul
mov
pop
fistpl
mov
sbbb
push
mov
sbb
lods
xchg
and
inc
sub
mov
push
fs
adc
mov
mov
sub
mov
int
mov
cmpsl
mov
enter
je
icebp
or
cmp
adcl
sub
push
mov
mov
adc
push
mov
and
dec
jne
xchg
test
leave
dec
cld
jnp
cmpsb
movsb
repnz
pop
xchg
sub
mov
adc
mov
push
pusha
out
jbe
push
aam
data16
add
flds
ret
jle
sbb
ret
mov
jg
jbe
or
cltd
test
in
ret
pop
push
inc
sbb
cmp
leave
push
aam
idivl
addb
inc
icebp
sti
jo
xor
into
sub
arpl
push
lret
add
in
mov
cwtl
adc
out
in
sub
xchg
nop
add
xchg
popa
lock
and
mov
dec
outsb
faddl
fwait
stos
mov
jo
mov
sub
mov
rol
jo
jmp
push
ret
loope
fucomi
dec
test
push
inc
cs
leave
cmc
sbb
mov
lock
insl
sub
lret
cmp
pop
adc
in
push
dec
inc
es
xor
mov
xchg
ja
jns
fnsave
leave
pop
cwtl
pop
pusha
addb
xchg
sub
cli
or
mov
aam
sbb
repz
and
push
je
xlat
sub
dec
pop
cmp
jecxz
adc
xchg
dec
leave
cmp
in
fisttpl
adc
lcall
js
cmp
insl
call
mov
in
pop
xchg
sub
aam
inc
lret
cmp
shl
popf
push
cmp
fcoms
cmp
stc
dec
xchg
sub
pop
mov
xor
inc
xor
jno
lahf
sbb
dec
mov
sbb
addr16
mov
pop
aas
stos
pusha
mov
or
inc
mov
xchg
in
imul
pop
loop
xlat
repz
arpl
and
insb
add
add
push
mov
test
fcmovu
jo
dec
and
jae
inc
cmp
pushf
dec
ret
mov
loop
jl
rorb
jb
ja
repz
cmp
push
in
xchg
insb
adc
loop
test
inc
mov
loope
je
mov
xchg
stc
cmp
imul
out
repnz
je
pop
lds
inc
add
aaa
cmc
dec
cmpsb
jle
mov
out
mov
push
jo
repnz
popf
mov
mov
mov
icebp
rolb
daa
or
int
mov
cmp
xor
addr16
sub
cwtl
and
test
imul
jg
xor
test
les
ja
notb
mov
mov
and
and
jae
lea
lea
fwait
push
repnz
movsb
data16
add
jbe
mov
call
add
pop
test
repz
fstl
pop
divb
in
rcrl
adc
cltd
outsb
lahf
lea
in
mov
pop
cwtl
fs
loop
jle
rolb
out
sbb
lds
push
daa
lock
cmp
clc
sahf
xchg
lret
sarl
sbb
cmpl
cwtl
add
das
cmpsb
sbb
cmp
shlb
push
iret
shl
or
leave
jo,pt
cltd
sub
push
shll
mov
loop
lret
bnd
pop
movsl
sbb
out
les
jecxz
sub
les
add
mov
inc
bound
mov
jb
stos
mov
testl
jle
ja
jb
mov
push
fwait
push
and
cltd
shl
xchg
stos
pop
sub
clc
rcrb
lret
addr16
xor
inc
xchg
out
mov
fisttpl
push
aad
test
xchg
inc
mov
jg
push
lcall
sar
jg
add
dec
push
sti
cmpsl
int
aad
and
cmp
sub
push
inc
neg
add
out
aam
mov
lret
cmpsb
cmp
je
xchg
jp
inc
fcompl
fnstcw
es
sbb
or
jbe
mov
sbb
inc
mov
sbb
push
push
loope
rol
dec
aas
mov
in
mov
sbb
pop
add
insl
pop
repz
cmp
imul
scas
lods
inc
or
jmp
adc
fstpl
add
lcall
out
pop
mov
out
sub
jno
sub
aam
adc
testl
in
rclb
mov
xor
mov
test
int
arpl
inc
das
and
xorb
mov
aaa
repnz
sbb
sub
mov
in
jo
pop
push
push
test
sub
pop
xchg
push
jecxz
mov
fcoml
inc
jle
xchg
test
mov
cmp
sub
stos
push
jns
pop
outsb
cld
jg
adc
jno
sbb
rcrb
push
inc
cmpb
enter
adc
in
sub
hlt
or
jne
or
dec
orb
sbb
sub
cmp
jne
inc
cwtl
push
cwtl
mov
lcall
and
push
hlt
scas
mov
mov
imul
xor
lds
add
nop
daa
ret
mov
scas
dec
fstps
push
jmp
subb
scas
ret
sti
in
dec
and
cmp
and
insb
jne
sub
movsb
in
out
jmp
das
ja
ja
and
cmp
mov
pusha
mov
imul
or
scas
sbbl
sub
lahf
xor
xor
cmp
pop
shll
cld
xchg
dec
ljmp
nop
push
or
out
cs
addr16
xor
xor
rcll
scas
popa
enter
sub
jns
popf
mov
xor
mov
mov
jmp
mov
stc
cmp
sahf
pop
pop
mov
mov
das
movsl
xor
negl
mov
int3
punpckldq
loop
xor
or
cmp
into
pop
sahf
jg
mov
dec
mov
fwait
jb
repz
cs
cmp
push
jmp
iret
cmc
or
andl
aas
popf
xor
mov
push
cltd
shll
out
or
mov
icebp
stos
jmp
cltd
sbb
push
xorl
or
sub
adc
movsb
mov
aas
fnstenv
sub
sub
dec
xchg
cmp
push
dec
out
mov
les
or
mov
dec
aaa
mov
xor
sarl
inc
push
or
fisubrl
jns
js
lods
pop
sub
inc
outsl
movl
js
arpl
mov
adc
lds
jle
mov
stc
xlat
and
adc
jbe
notb
rorb
pop
mov
cmp
repnz
xlat
inc
or
xlat
outsb
enter
push
adc
ds
iret
fstpt
icebp
imul
dec
lds
adc
ret
cmpsl
js
into
je
movsb
push
lea
mov
mov
jmp
sbb
test
lret
pusha
mov
xchg
mov
cmp
hlt
jle
push
cmp
je
in
lcall
lods
dec
seto
inc
push
in
jp
mov
lods
jno
mov
push
mov
pushf
sarb
in
xchg
test
mov
sahf
call
into
sahf
sarb
mov
mov
js
ss
and
mov
clc
push
cmpsl
mov
inc
add
out
or
jecxz
sti
cmpsl
mov
icebp
inc
dec
test
adc
test
cmp
or
imul
sub
xor
mulb
imul
inc
jl
jecxz
lret
movsb
mov
mov
add
mov
jmp
arpl
inc
and
pusha
shlb
popw
mov
js
mov
xor
add
scas
cmp
test
ss
jmp
inc
mov
insl
aad
inc
dec
xchg
rolb
ljmp
stos
mov
test
inc
adc
lods
sbb
sbb
pop
out
imul
or
add
xor
aas
inc
push
inc
mov
fnsetpm(287
sub
sub
stos
addb
or
cld
cmpsl
jle
fmuls
shll
push
inc
lcall
push
mov
or
mov
mov
or
test
xchg
jnp
scas
std
push
jne
outsl
idivb
stos
rcr
pushf
add
pop
mov
xchg
setns
fcmove
repnz
jb
out
xchg
int
sub
cmp
das
pop
stc
js
lds
cltd
mov
movsl
xchg
ljmp
in
repz
jecxz
fsubs
jnp
mov
ret
stos
daa
adc
mov
xchg
adc
gs
sahf
ja
das
enter
scas
ja
mov
sahf
in
fs
jb
push
pushaw
jo
std
aam
mov
jl
adc
jle
cwtl
test
aas
fstpl
int3
lret
mov
pop
xor
loope
pushf
pushf
push
fsubrp
add
push
mov
inc
arpl
sbb
mov
pop
sub
iret
scas
xor
fidivs
sub
jp
add
popf
or
rcrb
insb
inc
jnp
push
sbb
sbb
in
loop
bnd
sub
inc
enter
movsb
stos
inc
add
push
jmp
mov
fwait
sti
add
aaa
inc
loope
scas
cmp
out
cmpsl
rolb
mov
adc
addb
ss
daa
add
adc
lcall
jbe
aaa
pop
jle
jno
cmp
daa
add
pop
xchg
and
out
xor
inc
hlt
push
jmp
inc
lods
mov
fsubl
inc
fstl
lret
arpl
imul
inc
fistl
enter
bound
gs
dec
movsl
add
sub
jp
xchg
popa
xor
cwtl
hlt
and
xchg
and
shl
xchg
cltd
jae
imul
pushf
test
inc
fstpt
push
cmpsl
in
mov
cmpsl
xchg
and
adc
dec
enter
mov
insl
sbb
xchg
push
out
or
jge
imul
in
inc
out
lods
ret
test
test
shrd
dec
gs
imul
repnz
ljmp
adc
mov
mov
dec
test
mov
inc
pusha
mov
cmpsb
mov
mov
xor
push
ss
les
clc
and
xor
insb
in
fadds
test
hlt
mov
push
pop
sbb
jle
sbb
push
out
aas
or
mov
nop
pop
sti
popf
xor
lock
pop
call
mov
xchg
cmp
fldenv
inc
push
jo
jne
fs
call
into
dec
lahf
jbe
lods
mov
inc
adc
out
and
sbb
pop
dec
popa
xor
loope
lret
sub
xchg
pop
mov
pop
ja
ja
mov
cwtl
mov
jg
insb
inc
sub
mov
and
jmp
adc
test
dec
dec
shlb
call
int3
inc
imul
push
mov
ret
lock
jle
push
int
je
mov
call
jae
pop
mov
push
inc
mov
push
aam
fsub
mov
add
scas
or
loopne
insl
iret
adc
int3
xchg
jnp
jno
and
jg
or
cmp
sbb
xchg
hlt
xchg
es
add
adc
cmp
scas
xor
sbb
inc
mov
divb
lods
addl
push
xchg
lock
iret
mov
in
fstpl
fiaddl
jmp
arpl
loopne
mov
inc
fbstp
and
cmpsl
bound
sbbb
inc
dec
pop
jb
movsl
ds
mov
lds
mov
popa
mov
mov
pusha
or
fbstp
aam
xor
add
push
std
sub
je
outsl
jnp
dec
stos
es
mov
mov
mov
jno
jno
and
flds
and
scas
mov
cli
fcompl
push
sbb
fistl
aad
movsl
mov
cmp
xchg
ljmp
sbb
mov
cltd
xor
arpl
test
xchg
pop
cmpsb
xchg
inc
pop
or
add
jle
xchg
jns
add
rorl
xchg
jo
and
nop
mov
pop
repz
roll
jle
dec
dec
jno
das
adc
lock
jbe
stos
add
dec
jecxz
fnsave
fisubs
ss
pop
shrl
add
or
sub
cmpsl
loopne,pt
jmp
xchg
outsl
daa
loop
or
rol
imul
test
js
lcall
sub
dec
mov
dec
ljmp
adc
push
dec
sub
sbb
pop
cmp
or
dec
xchg
iret
sub
sbb
jb
jl
lods
mov
xlat
cmp
inc
cmp
fisttpl
adc
ja
std
ret
shrl
cmp
dec
pop
pop
dec
mov
rcl
imul
add
mov
sub
leave
imul
lods
mov
insb
jne
xlat
test
bound
je
add
in
int3
push
enter
cmp
ds
out
and
arpl
sbb
lahf
cs
dec
jmp
xor
pop
in
push
push
ljmp
not
je
ljmp
ret
pop
push
cmp
sub
test
cmp
mov
mov
or
adc
jecxz
mov
xchg
mov
into
js
mov
rep
add
cmp
insb
inc
push
out
xchg
push
pop
test
inc
out
popf
push
xchg
xor
jo
xchg
clc
push
clc
sub
out
addl
jb
push
mov
xor
inc
pop
adc
mov
inc
fdivrl
je
in
outsb
adc
push
mov
stos
fcompl
int3
and
loopne
aas
cmp
pop
xchg
mov
xchg
sti
push
xchg
adc
cmp
daa
jns
mov
jmp
lock
shll
mov
and
mov
push
iret
and
cld
mov
lcall
test
inc
push
xchg
repnz
add
pop
and
xchg
repnz
pop
sbb
adc
clc
sbb
scas
sbb
dec
iret
mov
or
ss
mov
mov
mov
movsl
inc
es
push
cmpsl
sub
mov
sub
xchg
pusha
xorl
pop
or
out
mov
add
fldt
iret
int
or
inc
cmp
popf
jno
cld
jae
xchg
in
lea
lcall
mov
mov
mov
ljmp
add
xor
xchg
add
and
imul
retw
shll
int3
sub
xchg
loopne
pop
xchg
cwtl
mov
ret
jnp
push
out
dec
adc
es
pop
lock
in
test
or
test
pop
push
sbb
sub
add
inc
add
xchg
jle
daa
test
int3
jg
inc
inc
fidivl
bnd
in
ljmp
in
and
add
push
push
mov
fimull
mov
rorb
addr16
xchg
adc
mov
sub
mov
xor
orl
cmp
cmc
add
cmpsl
aas
push
mov
jg
stos
inc
push
iret
pusha
push
frstor
dec
fs
jns
popa
stos
stos
dec
andb
subl
jb
out
cmpsl
xlat
iret
pop
stos
sbb
mov
fstpt
adc
out
pop
arpl
mov
jmp
rcll
or
or
and
mov
insl
loopne
stc
aam
sub
xchg
cmc
repz
std
je
jmp
cli
cmp
repnz
call
cli
add
mov
mov
ret
les
jbe
imul
jns
inc
mov
stc
dec
rclb
add
cmp
jecxz
or
call
cmpsb
sbb
hlt
push
dec
adc
push
jne
out
repnz
mov
fstl
aad
push
mov
stc
xchg
pop
imul
xlat
or
jo
std
cmp
xor
int
dec
dec
and
push
xchg
inc
pushf
xchg
and
cwtl
mov
incb
pop
cli
aad
lods
and
ja
adc
mov
and
shr
cld
adc
xchg
inc
test
pop
sahf
mov
inc
in
and
adc
ss
jo
in
mov
mov
test
lock
lods
dec
adcb
jle
lds
cmpsb
out
xchg
sbb
lock
outsl
lods
xor
xchg
fwait
dec
fstp
xchg
pop
adc
rcll
ljmp
sbb
stos
pusha
das
mov
aas
movsb
les
cmp
jne
ficoms
xor
nop
mov
jge
daa
movsl
dec
fnstsw
or
xchg
sub
jne
je
cld
fnsave
push
lret
mov
sahf
pop
pop
push
sub
je
mov
xchg
inc
mov
sti
daa
lods
shlb
push
push
scas
jb
mov
push
icebp
xchg
loope
shl
stc
hlt
mov
lea
sahf
out
bound
mov
sar
mov
scas
data16
sti
xchg
imul
icebp
jl
mov
daa
dec
xor
jg
popa
add
jne
adc
shr
cld
add
sub
daa
inc
popa
push
xchg
lods
xorl
lods
subb
popf
xor
mov
in
push
push
mov
push
movsb
xchg
xor
mull
push
pop
imul
mov
mov
sbb
rolb
push
cmp
lea
mov
and
stos
pusha
add
xchg
jne
enter
xor
into
inc
xchg
pop
cltd
test
sbb
mov
addl
or
mov
mov
sarl
outsb
int
shrw
jb
outsl
inc
outsl
imulb
push
sahf
push
imul
outsl
je
rclb
ds
loopne
add
adc
aad
mov
and
pop
mov
test
jl
adc
jge
sbb
sub
inc
add
lds
jl
pop
in
inc
or
mov
cli
or
inc
mov
movsb
repz
call
lds
mov
push
adc
dec
pop
stc
or
sti
push
ss
sub
dec
stc
or
jbe
mov
hlt
sarb
add
in
inc
loop
out
scas
sbb
jmp
popa
lods
inc
ret
out
or
hlt
daa
inc
jae
inc
popf
sbbl
mov
cmp
andb
scas
ds
mov
jb
loope
adc
mov
mov
in
outsb
sub
sbb
aaa
adc
push
sahf
lret
push
add
cmpsl
ss
ja
inc
fisttps
iret
mov
imul
scas
out
dec
mov
es
adc
cltd
sub
push
cmp
cmpsl
test
and
mov
ja
mov
cmp
test
scas
sub
push
popf
stc
out
mov
fimuls
xchg
shrl
imul
xchg
sub
rorl
in
dec
push
cwtl
cmp
je
sti
jge
loop
adc
out
sbb
fwait
outsb
les
mulb
repz
orb
dec
adc
jbe
int
xlat
xchg
push
test
dec
loope
mov
push
xchg
pop
push
ljmp
jb
cmp
lcall
js
je
jb
or
push
sbb
ja
lret
hlt
mov
add
ret
pusha
out
and
aam
sbb
cmpsb
test
jns
enter
sbb
xor
or
dec
mov
adc
cmpsl
cmc
adc
pop
imul
dec
cs
dec
imull
sbb
hlt
call
jbe
jnp
push
in
ficoml
mov
sub
dec
pushf
mov
pop
xchg
sub
push
cwtl
mov
pop
mov
lea
mov
out
jg
push
pop
add
sbbl
sbb
fstps
out
scas
js
test
push
cmp
shlb
add
int
test
std
cwtl
jne
sbb
cmpsl
dec
test
pushl
fsubl
cmp
call
lea
repz
in
push
ljmp
lock
mov
test
fldt
jns
cmpsl
sbbb
jae
cmpsb
add
inc
outsl
mov
rol
data16
out
mov
arpl
dec
mov
fsubrp
mov
fadd
pop
in
aam
cmp
sub
cmp
push
adc
cmp
sbbb
add
clc
push
cmp
pop
cltd
les
stc
fnsave
sub
mov
in
loope
cs
xor
jne
xchg
xor
stos
aam
repnz
mov
out
jecxz
aam
dec
repnz
das
add
adc
mov
xor
into
xor
imul
call
sti
cmp
adc
xor
pop
mov
lret
lock
into
ds
aad
xchg
pop
imul
lcall
imul
cmp
push
incl
cwtl
sti
xchg
or
insl
and
cwtl
das
mov
jne
movsl
sbb
incb
push
xorl
xchg
xchg
push
dec
push
out
dec
call
adc
push
jl
aad
jb
mov
cmp
inc
dec
pop
dec
cli
add
push
mov
movsb
mov
fsubrl
std
cld
sub
iret
test
push
mov
sub
xlat
imul
inc
cld
jns
xor
dec
push
repnz
out
imul
loope
out
jae
push
cmp
lea
lea
iret
xlat
iret
mov
jge
push
mov
mov
jo
enter
xchg
fs
ja
add
insl
jb
je
sub
jae
rcll
xchg
jo
cmp
fstpt
pop
frstor
lret
inc
fnsave
cmc
xchg
clc
rolb
adc
jae
jo
push
lods
scas
mov
aaa
cmp
cmp
xchg
adc
insb
push
rol
mov
shrb
cmpsl
xchg
push
in
and
gs
in
adcl
shr
ss
dec
je
or
cli
loop
xchg
inc
lret
shrb
mov
sbb
loope
outsl
pop
mov
jp
jae
loop
sti
cmpsl
xor
and
add
inc
shrb
stc
xor
xlat
jg
ljmp
inc
ret
jl
jp
pop
ret
mov
int
add
fsubp
fucomip
stos
test
test
jg
mov
and
xchg
add
ja
adc
test
inc
push
bound
iret
lret
mov
inc
xchg
add
cmp
idivb
add
or
outsb
sub
dec
ret
sti
jecxz
or
daa
outsl
daa
dec
dec
test
and
jns
lock
insb
add
addr16
jns
push
popf
sahf
mov
push
mov
repnz
mov
loopne
inc
pop
iret
jmp
dec
aam
push
lea
ja
icebp
mov
and
sbb
rorl
mov
push
inc
ficoms
test
loope
out
inc
adc
movsl
cmp
add
in
pusha
sbb
pop
movsl
loop
movsl
lds
dec
xchg
mov
iret
loope
lret
or
test
mov
shll
lret
xlat
js
rorl
inc
pop
scas
iret
gs
cmpsl
stc
or
inc
jne
lcall
and
movsl
sub
shll
int
inc
js
fldt
imul
sub
in
mov
fucomip
lods
dec
ss
aaa
mov
pop
call
mov
xchg
sub
std
daa
repnz
fsubl
jb
xchg
jl
inc
cli
or
and
add
das
scas
das
xchg
mov
sbb
jg
or
cli
adc
inc
push
sbb
ss
pop
or
jle
int3
mov
jns
inc
ficoml
ss
or
ljmp
xor
sbb
shlb
aam
cwtl
jmp
mov
jne
mov
xchg
xchg
sub
sub
and
xlat
rcrl
mov
out
pop
test
call
or
ds
aaa
cli
dec
push
ss
cltd
mov
dec
es
lret
mov
sbb
mov
pop
jmp
or
sub
pop
xor
sub
js
adc
dec
xor
sbb
mov
cmp
or
int
push
add
xor
cmc
ss
fsubr
or
sub
jb
clc
or
fs
sbb
in
cmpsl
push
mov
aad
mov
cmpsl
cmp
mov
sbb
cmc
dec
add
jl
sbb
jmp
inc
fisttpl
sarl
jo
dec
jmp
or
mov
sarb
cltd
shlb
repnz
pop
add
jne
js
dec
insl
mov
dec
aad
mov
cmp
xor
jle
jg
cld
in
and
ds
andl
in
bnd
stos
pop
lcall
add
ss
sub
mov
hlt
jae
add
imul
popf
or
and
sti
or
aad
rorb
lcall
mov
push
or
jno
sbb
inc
shl
fcoml
leave
push
dec
or
shll
xor
xchg
xor
ret
dec
lods
push
outsl
clc
movsb
jecxz
pop
pop
shrl
in
sbb
popa
adc
push
int3
loope
add
push
xor
inc
test
imul
aas
test
or
push
mov
lock
adc
je
and
and
xchg
mov
jmp
pop
inc
xlat
lock
adc
cmp
jno
lea
inc
bound
out
push
cltd
adc
push
push
lods
xor
push
or
xchg
ds
clc
cltd
loope
mov
pop
mov
sub
jmp
cmp
jno
outsl
sub
push
std
cwtl
jno
mov
shl
cmpsl
mov
shlb
jnp
sti
in
xchg
adc
xchg
aas
aam
jb
jp
push
or
push
cli
testb
adc
jmp
or
aaa
pushf
xchg
mov
dec
xchg
icebp
addr16
std
dec
dec
lock
cmp
bound
aas
jno
icebp
inc
mov
daa
xor
jl
ret
movsb
jge
pop
pop
sub
or
push
jmp
daa
insl
jge
ja
xor
mov
sbb
mov
inc
cmp
ja
sub
int
movsb
cmc
cmp
push
lock
pop
pop
cmp
pop
push
pop
jge
int
mov
iret
push
gs
lods
popf
cmp
shl
xor
jbe
mov
movsb
filds
mov
inc
loop
dec
jo
pop
stos
pop
repz
loopne
dec
frstor
popf
sub
push
jo
mov
hlt
leave
cmpxchg
cmp
inc
pop
dec
clc
mov
aam
call
sbb
movsl
lock
jmp
and
jbe
fisubrl
sbb
les
insl
pop
and
ds
or
aas
insb
cwtl
ss
push
sahf
movsl
lret
js
and
into
mov
outsb
sub
fwait
xor
int3
jl
loopne
ljmp
insl
inc
cmp
adc
and
sbb
data16
pop
sub
ss
arpl
jbe
ljmp
ficompl
mov
insl
out
add
mov
sbb
fidivrs
ljmp
ficoml
add
std
adc
stc
fmull
inc
push
sti
mov
fs
xor
iret
test
imul
aas
pop
lods
xchg
sbb
adc
jmp
jge
push
jne
add
add
or
stos
inc
pop
sub
pop
les
loopne
fs
sub
inc
popa
into
xchg
sbb
mov
aad
or
fisubl
mov
fidivs
std
fxch
add
push
scas
nop
stos
lahf
mov
repz
inc
lcall
dec
aas
mov
push
lock
pop
lcall
lds
mov
ret
jmp
hlt
pushf
outsl
daa
xchg
jbe
bound
dec
jmp
in
rcrb
mov
insb
inc
fistpl
xchg
bound
shl
add
mov
cmp
inc
mov
sahf
lods
jb
ss
imul
inc
push
xrelease
and
mov
jg
xchg
mov
cmpl
outsb
cmp
in
call
mov
pop
jbe
dec
sub
repz
cwtl
js
add
dec
lret
cmpsl
ret
lock
andl
sahf
sub
xchg
xchg
rorl
add
jo
mov
testl
aam
dec
push
ret
call
ret
pop
push
mov
test
push
enter
add
xchg
dec
pop
lods
idivb
adc
js
add
mov
repnz
inc
out
mul
addb
dec
dec
or
cmp
add
cs
out
pop
dec
stos
jmp
push
icebp
adc
std
mov
or
testb
inc
fnsave
sti
xlat
pop
mov
in
jp
mov
pushf
pop
mov
in
sub
sbb
push
fwait
and
stc
je
outsb
mov
dec
push
and
or
mov
subl
push
xor
xor
insb
outsl
lock
stos
nop
lea
shlb
jae
pusha
scas
push
stc
cmpl
mov
xchg
cld
adc
or
aam
jp
mov
stc
lods
jp
subl
movsl
in
in
dec
das
sbb
xchg
add
and
xchg
and
mov
fistpl
xor
sbb
jbe
rorb
sbb
mov
cwtl
pop
inc
add
or
pop
cmpb
push
sbb
popl
mov
dec
shrb
dec
test
test
scas
jb
icebp
sbb
imul
imul
loopne
fsubs
es
inc
mov
ficomps
cvttps2pi
jl
jg
xchg
ljmp
fisttpll
pop
fisubrs
cltd
adc
out
jns
xchg
adc
adc
call
mov
inc
imul
xlat
mov
pushf
cmp
fldenv
mov
arpl
xor
add
inc
fcompl
mov
cmpsl
aaa
pop
jnp
call
movsb
insb
add
adc
adc
cltd
dec
or
add
and
fwait
xor
repz
aad
cmpsl
inc
inc
push
push
jmp
xchg
jge
aad
sbb
xor
mov
jg
mov
and
loopne
sub
pop
mov
add
inc
mov
fisubs
stos
jmp
jae
int3
push
or
or
inc
adc
dec
pusha
into
repnz
xchg
adc
or
xchg
jae
mov
and
cmc
les
cld
ret
jnp
mov
fisttpll
jb
xor
dec
sbb
lock
mov
pop
mov
pop
add
repz
inc
lds
idivb
stos
ficoml
inc
push
into
idivb
push
xlat
add
lahf
ss
int
es
in
out
sub
outsl
inc
popa
insb
push
scas
inc
mov
adc
pop
add
ret
in
clc
mov
push
push
mov
xor
pop
outsl
adc
dec
jle
sub
insl
in
in
jmp
sub
out
mov
jmp
fbstp
daa
sub
and
or
sub
cmpsl
lcall
mov
adc
or
inc
mov
push
push
call
add
outsl
mul
cs
push
or
pushf
icebp
insb
jle
mov
cmp
inc
jmp
jg
mov
add
movsl
cmp
mov
xchg
aas
jecxz
imul
dec
mov
sbb
insl
mov
lret
mov
dec
imull
push
inc
fstl
xor
sbb
out
lret
add
sub
sub
sub
dec
fistpll
push
gs
dec
adc
enter
cwtl
push
sbb
jns
hlt
pop
xor
loope
addl
jne
sbbb
scas
aam
jle
subb
xor
and
mov
sbb
jae
mov
ret
scas
sarb
pop
test
addr16
add
cmp
call
outsl
icebp
test
aas
cmpsl
fstpt
lock
push
ficomps
mov
jmp
push
outsb
push
cmp
sbb
test
insb
ret
das
inc
dec
outsb
xor
cs
clc
push
nop
testl
iret
and
inc
dec
dec
inc
andl
fsub
mov
imul
push
xchg
push
pop
hlt
and
mov
pop
movsl
dec
adc
push
fucomip
gs
mov
out
test
lock
adc
roll
js
jmp
jns
and
orb
lods
inc
push
xor
mov
cwtl
push
ja
push
imul
mov
pop
inc
add
incb
cld
negl
test
psllw
out
mov
push
push
mov
sub
pop
sahf
int
inc
jmp
fnstenv
pop
inc
push
jno
std
xor
test
pop
hlt
movsb
cmp
mov
pop
lods
sbb
ficoml
ljmp
test
inc
aas
lds
movlps
sahf
ss
inc
and
jno
xchg
inc
fadds
shll
jbe
aad
cltd
test
hlt
pop
rcll
std
test
pop
scas
int3
arpl
xchg
in
test
sub
mov
push
mov
dec
lods
shrb
lret
inc
mov
jg
jmp
insl
xor
fnstenv
popa
ljmp
mov
fs
je
ret
std
xchg
xlat
sahf
and
sbb
mov
xlat
pop
push
dec
pop
loope
subl
mov
sbb
xchg
sub
cmp
sub
hlt
push
sbb
sub
jge
sbb
ret
sahf
push
in
fsubs
ja
repz
mov
sub
aam
ss
movb
jne
pop
mov
int3
pop
mov
in
pop
outsb
adc
mov
es
pop
inc
int3
iret
lcall
sahf
and
imul
push
mov
outsb
out
mov
lret
dec
insb
outsb
jle
mov
push
cwtl
cmc
push
leave
push
jmp
sub
dec
dec
inc
lods
fcoml
pop
sbb
shlb
mov
repz
lea
jg
addr16
fnsave
mov
jns
mov
cmp
cmp
inc
cmp
jb
aas
jnp
and
cli
jno
js
pop
dec
cltd
and
xor
dec
jo
lods
push
es
pushf
inc
pop
hlt
add
cmp
repnz
out
and
sbb
jge
jne
leave
sub
mov
adcb
and
mov
enter
mov
mov
dec
insl
jnp
xor
lods
adc
pop
inc
lock
ja
nop
mov
cltd
mov
cwtl
jle
inc
enter
push
ljmp
adc
lret
ret
jnp
out
adc
negl
adc
out
jnp
adc
int
xchg
subl
scas
inc
lods
adc
popf
mov
jl
shll
mov
std
xchg
je
leave
sub
add
sub
shll
int3
test
jb
fadd
mov
xor
sub
lods
fisttpl
popa
ds
fadd
or
ret
sarl
ljmp
mov
outsb
lods
lds
mov
xchg
add
jae
jo
fwait
pop
pop
cmp
pusha
pop
mov
pop
insb
stos
outsl
aas
test
add
and
mov
push
aaa
cwtl
cs
push
sub
dec
push
inc
jmp
lea
sbb
lcall
loope
aaa
push
lcall
push
mov
fisubrl
and
mov
notl
and
xor
pop
stc
leave
repnz
loopne
cmpsb
int
jns
inc
push
lods
pop
fsubp
test
cwtl
mov
rcrl
and
and
mov
dec
dec
mov
or
mov
ljmp
mov
mov
mov
sub
mov
movsb
sbb
lret
hlt
or
mov
lcall
adc
xchg
mov
jl
in
xchg
sub
decb
movsb
sti
stos
mov
into
loopne
or
insl
std
popf
push
clc
jle
sub
mov
dec
dec
pop
push
in
pushf
jle
cmp
or
mov
jno
dec
dec
inc
int
sbbl
cmp
es
xchg
cli
pop
jb
aaa
cmp
jae
adc
cmpsb
push
jne
adc
rcl
xor
and
vaddps
or
dec
dec
lods
xor
push
inc
mov
pop
inc
inc
call
adc
xchg
enter
jne
subl
mov
es
add
mov
or
jmp
loopne
mov
xor
sbb
mov
pop
out
test
pushf
xor
add
cmpsb
cmp
fiaddl
push
popf
cld
bound
push
outsl
in
sbbl
fbstp
pop
outsl
pop
mov
xchg
mov
shll
fbstp
sub
or
push
dec
adc
pop
repz
in
jns
aas
push
repz
movsb
mov
pop
lods
inc
adc
in
xor
add
push
cli
adc
adc
dec
aam
ljmp
fistl
adc
notl
pop
cmp
jno
in
loopne
in
into
shl
ret
sbb
js
inc
adc
pop
sbb
lds
sbb
test
xor
in
inc
xchg
lcall
push
xchg
sti
ds
iret
mov
and
ret
adcl
into
jecxz
and
jo
or
inc
sarb
fdiv
fistps
xchg
sub
clc
push
scas
ds
je
push
lret
out
sahf
push
lods
iret
push
je
lea
dec
mov
rol
push
stos
mov
int3
out
repnz
cmpsl
add
xor
andl
je
inc
cmc
lock
fmuls
push
rcr
jbe
push
add
lods
lret
xor
shll
adc
stos
pop
gs
add
xor
jno
mov
stos
roll
int
jmp
mov
pop
arpl
decb
mov
pop
shr
fsubr
rcrl
xchg
cmpsl
scas
mov
mov
and
bound
lret
fimull
shll
mov
hlt
dec
adc
pop
iret
out
jmp
les
daa
int
sbb
into
jbe
inc
faddl
sahf
shrb
loop
lods
and
in
in
les
mov
mov
sti
mov
int
and
inc
cmp
decb
ss
pop
test
loop
add
ret
or
in
icebp
jl
int3
xor
jge
xchg
sub
and
mov
negb
sub
mov
dec
iret
mov
stc
iret
bound
xchg
loopne
dec
push
repnz
jg
xor
into
add
cmp
jp
gs
js
ret
mov
addr16
dec
arpl
jne,pn
pusha
inc
ja
cltd
cmp
mov
les
daa
insl
ljmp
dec
mov
fldcw
mov
sarb
sbb
mov
sbb
orb
fcmove
outsl
loopne
dec
adc
jne
inc
cmpsl
cmpsl
std
lods
in
xchg
inc
and
fimull
inc
ds
outsl
lock
inc
mov
je
adc
push
adc
push
sti
bound
sbb
das
lds
xchg
aam
inc
out
or
adc
mov
ret
cmpb
int3
enter
out
pushf
jns
push
ficoms
xchg
sbb
adc
mov
ds
jle
xchg
fsub
pop
add
or
sub
fs
mov
iret
xchg
and
mov
xchg
jnp
mov
shl
loop
cmc
push
in
lods
stc
cwtl
and
lea
cli
std
mov
pop
adc
jg
sti
mov
sbb
push
call
in
pop
cwtl
xchg
cmpsl
dec
iret
lods
xor
lahf
and
iret
in
popa
and
iret
addb
dec
pop
push
sub
cmpsb
mov
lds
subb
les
das
inc
cmpsl
inc
hlt
xchg
hlt
and
fidivrl
outsb
jnp
sub
mov
hlt
cltd
jnp
dec
sahf
add
and
and
lahf
push
in
enter
jns
push
pop
jecxz
call
jecxz
rep
push
mov
test
aad
sub
clc
imul
adc
into
pop
cmc
mov
pop
and
sbbb
or
aad
xor
and
sbb
or
adc
add
jecxz
xchg
cmp
loope
mov
mov
pop
pop
enter
or
adc
pop
test
mov
ffree
pop
mov
and
data16
ret
cld
fs
imul
pushf
stc
fldt
insb
cmp
pop
mov
aam
push
or
jbe
mulb
mov
rcll
test
and
xchg
inc
mov
cltd
sub
mov
xor
daa
pop
les
or
std
mov
stc
jno
dec
test
cltd
adc
inc
adc
push
pop
sbb
test
pushf
aad
sahf
scas
inc
adc
leave
imul
outsb
outsb
mov
push
loopne
loopne
cmp
out
lahf
cmpsl
repnz
mov
or
into
popa
xor
imul
int
in
inc
push
push
mov
mov
addr16
mov
in
mov
lahf
mov
xchg
pop
lock
or
insb
rclb
imul
mov
aam
sti
mov
loopne
test
xor
inc
push
cmp
popa
fbstp
and
shll
dec
push
pop
test
dec
jg
hlt
xchg
sbb
jnp
xor
push
stc
mov
nop
pusha
subb
fsubrp
dec
jecxz
cmp
test
sub
xor
cmc
ds
jecxz
filds
xchg
add
add
xchg
sub
sbb
movsl
les
popa
pmulhuw
dec
or
lock
sub
jb
mov
pop
push
es
mov
push
orl
add
enter
daa
ljmp
lret
stos
cmp
mov
mov
adc
lea
das
or
sbb
add
add
add
int
or
sti
push
jae
add
sub
jae
iret
movl
push
iret
inc
mov
and
mov
stos
out
or
cmp
sysret
pop
cmp
adc
inc
xlat
sub
cmp
xchg
ljmp
dec
lret
xchg
rorl
pop
push
push
in
xor
jae
out
cli
pushf
in
cltd
cmp
leave
cwtl
mov
mov
add
lahf
xchg
into
lea
mov
je
loop
jbe
pop
mov
push
push
lods
shll
stos
push
nop
and
mov
inc
fs
test
jb
xchg
in
arpl
scas
std
cs
add
and
jmp
outsl
sub
adc
cmpl
push
mov
aad
or
push
or
adc
and
mov
xchg
pushf
add
inc
push
sbbl
mov
pushf
cmp
imul
adc
arpl
pop
sbb
movl
cmpsl
push
pop
inc
in
pop
dec
and
in
or
push
ss
ja
das
dec
xchg
xlat
add
or
xchg
xor
fscale
data16
mov
mov
dec
mov
popf
cmpsb
lcall
lahf
cmp
push
imul
pop
pushl
pop
cs
rclb
stos
cli
lcall
xchg
xor
pop
xchg
inc
mov
fwait
or
and
cmpsb
test
rolb
aad
jae
cmpsl
mov
pop
imul
push
in
fisttpll
je
sub
jns
mov
jmp
and
mov
leave
cli
pushf
les
inc
loope
jmp
mov
outsl
cwtl
jo
pop
call
loop
addr16
add
lret
sub
push
push
ret
mov
adc
insb
push
fcomps
jae
psubq
cld
stos
aam
and
push
jp
add
test
add
fisubrl
fbld
sbb
add
dec
insl
mov
jnp
xor
scas
pushf
mov
pop
js
iret
jo
fbld
mov
push
notl
push
push
push
mov
pop
daa
ficompl
fists
shll
scas
ret
xlat
push
pop
call
iret
pop
lods
es
xchg
jg
shr
in
jo
cmp
dec
in
lahf
add
mov
xchg
imul
bound
pop
lret
xchg
in
sbb
push
adc
repz
push
test
mov
pushf
inc
mov
sbb
fcomps
jp
push
jo
jbe
ret
insb
cld
sarl
jo
push
xchg
or
mull
sub
cli
sub
mov
jecxz
push
addr16
mov
jl
cmp
repnz
ret
outsb
lret
adc
jae
mov
add
es
cmp
cli
es
pop
mov
mov
pop
movsb
push
outsl
xchg
testl
xor
sahf
sub
bound
xchg
adc
in
jecxz
push
scas
sub
mov
nop
out
xchg
cli
jl
cmp
lea
orl
in
mov
pop
test
shlb
lock
inc
xlat
jnp
or
xchg
cltd
sub
lea
mov
and
mov
xchg
aam
mov
lret
mov
cmp
sub
inc
fdiv
int
push
adcl
loop
insb
add
sahf
jae
xor
push
leave
movl
xchg
dec
in
jo
sub
jae
jmp
and
aas
test
dec
repz
pusha
jl
in
sbbl
jmp
xchg
xchg
mov
push
inc
fsubrl
sbb
lcall
xchg
sbb
inc
cmp
fsubp
jnp
sub
add
repnz
or
xlat
jmp
cltd
xlat
jno
mov
push
andl
add
lods
notl
test
mov
mov
sub
sahf
jo
mov
cmc
push
sahf
outsl
lds
out
dec
repz
mov
mov
fdivl
sbb
mov
pop
aad
inc
xlat
daa
mov
xchg
adc
bound
ss
cmpsb
out
popf
or
sbb
push
mov
out
lahf
in
cli
jl
sti
mov
cli
daa
push
movsl
xchg
xchg
call
jbe
adc
dec
imul
sbb
scas
pushf
pop
lea
fidivrl
dec
push
jb
jmp
mov
cltd
adc
jle
fsubl
adc
int
pop
sub
outsl
pop
lret
movsl
or
jl
subb
pop
hlt
sarb
shlb
into
popa
inc
dec
dec
imul
mov
pop
test
mov
outsb
seta
lds
cltd
das
filds
xchg
add
les
fdivs
stc
ja
sbb
das
std
mov
in
xchg
sub
je
dec
jae
xchg
add
scas
cmp
pop
sub
mov
ret
mov
pushf
aaa
test
push
ret
aaa
fsubp
xlat
push
push
cmpl
add
data16
pop
jno
dec
and
scas
sub
lods
lret
sahf
out
stos
cmpsl
sub
pop
adc
xorb
cli
dec
lret
mov
mov
ljmp
outsl
sbb
xchg
leave
sub
movsb
in
fildl
dec
dec
and
stos
xchg
test
mov
incl
nop
scas
jmp
sahf
mov
repnz
and
mov
xor
adc
jge
adc
adc
sbb
xchg
test
sbb
mov
ret
jg
mov
bound
cli
nop
fbld
add
pop
mov
dec
imul
mov
mov
fisttps
out
cmpsl
and
sbb
cs
rcr
inc
xchg
add
jecxz
int
jnp
push
inc
int3
pop
testl
mov
in
in
or
in
mov
dec
push
icebp
jae
fnstcw
lods
inc
gs
sub
dec
push
lds
adc
sub
xor
fs
aam
das
or
dec
add
mov
cmpsb
cmp
pop
shlb
pop
inc
push
js
stos
icebp
xor
repnz
jle
fwait
sti
inc
stos
pop
loop
sub
jmp
mov
push
jg
inc
jbe
mov
shlb
arpl
or
rolb
mov
in
xor
pop
mov
cwtl
test
or
mov
xlat
jno
pop
push
imul
jns
pop
mov
pop
adcl
popf
lcall
ljmp
fcomps
sub
push
aad
scas
in
mov
push
jno
add
popf
and
mov
xor
rorb
daa
enter
mulb
mov
out
dec
jp
mov
fnsave
sbb
adc
leave
mov
xchg
jns
lods
outsl
push
sbb
in
imul
and
pop
test
cmp
loope
js
fsub
xor
shll
lods
xchg
shlb
scas
mov
cltd
and
xchg
jb
add
sbbl
jbe
xor
cmp
push
sub
dec
cmp
adc
mov
and
inc
xchg
inc
and
jl
jle
bound
scas
or
ss
pop
inc
rcr
cmp
dec
repz
in
roll
cmp
inc
push
pop
test
pop
repnz
into
and
sbb
popa
in
jb
sbb
ljmp
imull
push
jg
lods
push
mov
mov
scas
dec
mov
fwait
dec
sbb
leave
jecxz
icebp
add
xor
paddsw
push
fstp
mov
andb
mov
mov
adc
mov
xchg
stos
or
fmuls
movsl
sbb
fcomip
sbb
mov
orl
jl
ljmp
cmp
pop
leave
and
push
push
lret
cmp
std
imul
sbb
sti
adc
jp
mov
mov
repnz
jo
lahf
addr16
repnz
push
popf
stc
fisubrs
add
into
negl
jle
push
mov
stc
movsb
inc
adc
je
inc
mov
addr16
jecxz
xchg
lret
and
mov
lods
push
nop
into
mov
mov
adc
mov
mov
mov
mov
adc
mov
push
adc
fdivr
pushf
sub
push
lret
lds
idiv
and
jns
dec
adc
or
jne
ja,pn
cmpl
xor
out
pop
push
dec
dec
dec
jmp
cmp
rcll
sbb
test
fldt
dec
sub
inc
pop
xchg
in
rol
sub
test
aad
push
and
mov
hlt
jmp
push
test
push
outsl
test
add
aaa
repz
push
sti
mov
ss
push
call
dec
cmpps
and
adc
sub
inc
cmc
cmc
adc
mov
js
dec
in
xor
inc
lahf
popf
mov
in
mov
mov
pop
cmp
sub
push
test
lods
jb
mov
push
xor
add
jae
and
dec
mov
icebp
jle
xor
xor
push
or
dec
push
in
pop
fucomp
shlb
je
sti
sub
pop
add
mov
push
es
push
movsb
cmp
xchg
cmc
dec
ret
push
gs
dec
cwtl
insl
inc
in
scas
decb
push
add
push
inc
push
sub
jno
or
pop
cmp
add
dec
data16
pop
repnz
fistpll
add
pop
imul
xor
mov
setno
inc
fdivr
cltd
pop
cmpsl
pop
call
or
push
pop
loop
jp
clc
seta
scas
adc
fnstenv
pusha
adc
nop
sbb
xor
loop
push
popf
cmp
jecxz
sti
dec
pop
clc
addr16
clc
lret
pop
loopne
push
fwait
aaa
inc
fdiv
jge
inc
push
in
lods
push
iret
sbb
aaa
popa
adc
movsl
in
rclb
sub
mov
dec
dec
fcoml
cmp
xchg
mov
sahf
sub
das
inc
push
notb
cs
or
cwtl
pop
mov
add
mov
shrl
loop
inc
nop
push
in
out
popa
faddl
cld
jg
ss
adc
pop
dec
arpl
sahf
into
gs
push
gs
add
cmp
mov
add
cmp
dec
pop
ffreep
xchg
pop
add
int
arpl
xchg
scas
inc
mov
popf
std
insl
int3
jb
mov
mov
push
pop
out
mov
fstpt
out
mov
mov
subb
je
outsl
sbb
dec
xor
repnz
jnp
dec
sahf
movsl
inc
inc
stos
cmp
or
cmp
jp
xor
jbe
or
sub
inc
push
lret
sti
fisttpll
jmp
fcoml
test
xorb
stos
daa
lods
mov
test
test
xchg
int3
out
jmp
sub
jnp
jecxz
sbb
pop
ss
jp
jns
movsb
sarl
mov
or
mov
push
out
xchg
cmp
negl
repnz
mov
pop
ja
orb
cmp
movsl
aad
sbb
lds
adc
inc
das
jb
lahf
pop
rcrl
testb
lods
mov
and
sbb
sub
stos
dec
mov
andb
loopne
das
pop
sub
sub
iret
data16
dec
in
mov
int3
arpl
push
pop
lock
mov
jmp
sbb
pusha
mov
pop
out
inc
mov
out
sbb
push
in
xor
push
inc
mov
fsubs
sbb
sub
xor
lock
mov
mov
mov
mov
push
cmp
inc
movsl
lret
movsb
arpl
pop
std
jecxz
icebp
les
pop
pushf
add
das
in
arpl
loopne
arpl
jg
rclb
and
mov
in
scas
outsl
xchg
sub
sti
or
pusha
xchg
sub
sahf
shlb
pop
repz
or
mov
adc
pop
lret
pop
int
push
sub
cwtl
lcall
sub
dec
loope
roll
xlat
cld
movsb
lea
mov
sub
insl
mov
gs
rcrb
mov
lock
imul
pop
ficoml
ja
xchg
xor
mov
es
test
stos
cmp
out
pop
sbb
adc
lock
mov
mov
int
das
sub
jno
push
pushf
adc
or
mov
sub
out
int3
jns
es
lods
xor
mov
gs
int
add
das
daa
fldl
cmp
popa
arpl
loopne
in
push
xchg
ficompl
and
subb
pop
cmp
cltd
call
outsl
adc
adc
sbb
pop
push
test
mov
jns
fcompl
jb
sbb
shlb
arpl
sub
ds
shlb
cmp
movsl
inc
fistpll
push
loope
xchg
mov
mov
sub
in
xlat
fdivs
adc
xor
in
arpl
mov
pop
or
and
xchg
daa
fcoml
push
lods
mov
push
loop
adc
and
push
orl
pushf
xor
scas
addl
mov
mov
imul
xor
and
jbe
aam
push
fdivp
mov
xor
xchg
in
rclb
xor
pop
repz
push
sub
push
rcrl
dec
sahf
sbb
sbb
add
repnz
loope
lock
xchg
adc
loop
pushf
mov
and
mov
int
push
mov
test
stos
cmpsb
repz
in
jl
and
xchg
clc
shll
iret
sub
add
jge
dec
lods
dec
sbb
bound
dec
jns
mov
xchg
mov
jae
cltd
orb
fimull
mov
push
sbb
fs
daa
add
gs
sub
insb
notb
mov
xchg
loopne
loop
testb
cmp
push
xchg
mov
aaa
movsb
inc
inc
add
icebp
fwait
in
nop
fwait
mov
in
cltd
out
pop
or
out
pop
imul
mov
ret
fimuls
sarb
jb
subb
add
pop
sahf
mov
fidivrs
stc
push
mov
daa
arpl
cmp
lcall
jnp
jb
in
xchg
cmpsl
sub
call
in
jl
adc
popa
les
pop
addr16
repnz
xchg
xchg
or
mov
push
mov
outsb
out
inc
int
cmp
mov
sbb
push
ja,pn
nop
mov
loop
cmp
jmp
pop
cmc
out
push
push
insl
fwait
jb
and
jg
jbe
daa
jo
xor
int3
jo
mull
push
movsl
movsl
xchg
mov
sahf
in
xchg
inc
mov
cmpsb
mov
loopne
inc
bound
and
mov
cmpsl
xor
xlat
add
mov
insb
mov
lret
xor
or
lcall
sbb
or
jno
and
fstps
std
mov
inc
push
adc
ss
icebp
jb
int3
jecxz
xchg
ljmp
sub
mov
jmp
enter
mov
xchg
in
pop
out
lret
out
arpl
xor
lret
jle
arpl
mov
dec
lods
xchg
push
out
jecxz
fadds
jne
mov
lods
sti
xor
shrb
movswl
mov
popf
inc
push
dec
inc
jno
or
push
cmpsb
nop
call
test
pop
sti
dec
mov
adc
sub
cwtl
sbb
test
mov
aam
pop
and
mov
cmp
xchg
push
outsb
ret
cmp
mov
inc
fstl
call
jge
adc
outsb
jle
cmp
fwait
mov
sub
mov
sbb
out
inc
pop
adc
push
mov
jmp
js
fadd
pop
mov
subb
cli
nop
sahf
rcrl
movsw
sbb
mov
test
loope
lcall
jecxz
lock
je
add
pushf
xor
pop
lods
inc
push
pop
fisttpll
mov
mov
stos
inc
dec
imul
xchg
push
cmp
dec
sbb
nopl
inc
pop
mov
mov
in
xchg
daa
out
add
test
sub
jno
lahf
mov
pop
icebp
or
xlat
xchg
pop
and
cmp
push
ss
les
in
out
js
xchg
das
or
das
or
mov
sbb
cmp
mov
mov
mov
or
jmp
testb
jnp
jno
insb
jle
scas
xchg
js
xchg
out
ds
loop
pop
cmc
pop
ror
je
das
incl
mov
rcll
pop
mov
ljmp
movsl
in
jbe
fildll
fisubs
mov
or
dec
aam
cli
or
or
cli
pop
int3
and
into
outsl
gs
sbb
ds
pop
push
loope
in
rol
jae
shll
mov
sbb
repnz
push
in
xor
cmc
mov
mov
incb
push
movsl
sub
cld
iret
pop
cwtl
jg
lret
sub
out
pop
jne
mov
gs
cmp
xchg
adc
test
test
mov
sti
pop
int
mov
inc
int
out
inc
adc
je
imul
xchg
outsb
adc
test
lret
jmp
jb
mov
aas
call
and
loope
cmp
mov
xor
nop
or
jb
cmp
xorl
xor
lods
pop
pusha
pop
pop
mov
outsb
cmp
out
push
fadd
mov
dec
outsb
repz
add
sti
test
test
or
lret
push
or
xor
push
jo
cmp
jmp
addb
push
repz
xchg
sti
outsb
add
rcr
xlat
xchg
and
and
test
rol
stc
add
add
jmp
pop
sbb
rclb
fistpll
mov
lds
and
pusha
adcb
cmp
rcl
dec
push
jge
mov
jle
or
inc
dec
mov
fidivrl
movsb
xchg
aam
insb
sub
scas
std
mov
mov
lock
gs
jge
push
mov
cmpsl
arpl
push
fstpl
cmp
test
adcl
out
mov
test
aad
in
fwait
test
sub
fidivs
jl
mov
in
mov
push
pushf
lret
lret
cmovbe
push
xlat
outsl
enter
jae
inc
leave
popa
xor
adc
in
mov
cmpsl
push
jl
jns
cmp
pop
push
les
shl
adc
scas
xor
jmp
xor
cmp
mov
adc
inc
sbb
or
xchg
into
cmp
inc
aam
fsts
call
movsl
lds
dec
mov
pushf
mov
icebp
outsl
idivl
mov
cmp
dec
clc
xor
cmp
insb
cmc
xchg
fnstsw
xchg
movsl
insl
cld
adc
sahf
bound
popf
jo
dec
inc
cmp
cli
jo
sbb
ror
sbb
rcrb
push
test
ja
test
cld
je
fmull
aad
sub
sub
ljmp
xchg
mov
inc
repnz
sub
lcall
dec
add
into
cwtl
repnz
ja
das
mov
mov
jns
loopne
ret
mov
push
popf
push
mov
lock
rol
or
jns
fstps
mov
imull
fnstenv
lret
mov
xchg
inc
icebp
dec
mov
fucom
and
gs
or
inc
push
mov
outsl
pushl
inc
pusha
xchg
pop
mov
jp
add
xchg
add
mov
mov
ss
daa
lcall
push
ror
lahf
mov
adc
imul
ljmp
imul
leave
movb
mov
stos
test
push
popf
jns
mov
mov
xlat
mov
addr16
adc
xor
sbbb
into
faddl
mov
push
outsb
out
stc
inc
out
mov
inc
dec
xchg
xchg
sahf
cli
fs
adc
movsb
repnz
adc
out
sub
adc
mov
es
out
fldcw
sarb
pusha
xor
ret
mov
ret
aas
fisubs
int3
push
sbb
pop
cmc
sti
jle
jbe
xor
fs
jmp
mov
pop
cli
int
cli
jle
mov
dec
call
or
testl
add
jmp
mov
and
ja
dec
popf
xchg
test
add
pop
outsb
xchg
push
pop
stc
add
daa
mov
aas
jbe
cmp
lret
cmp
scas
clc
loope
shll
lods
or
mov
inc
insb
not
out
push
cmp
mov
out
mov
loope
sbb
addb
mov
dec
lods
pop
mov
shll
sbb
gs
into
stos
xchg
lret
int3
xchg
incl
repz
ljmp
sbb
jg
dec
inc
scas
sbb
sbb
adcb
mov
sub
dec
inc
out
call
filds
dec
mov
xor
mov
fidivrl
dec
ud2
jp
loope
add
andb
mov
or
outsb
rcl
mov
jl
js
sub
pop
add
test
lock
scas
rcrb
jno
xorb
fidivrl
push
push
mov
into
jb
cmp
inc
push
xchg
xchg
inc
stc
inc
push
cmp
hlt
iret
xchg
jmp
push
in
add
scas
je
pushf
enter
cmp
adc
scas
or
hlt
push
into
sub
pusha
cli
outsb
sbbl
xchg
mov
les
and
xor
shr
sbb
mov
hlt
push
dec
int
hlt
roll
hlt
pop
stos
push
lds
inc
ret
lods
and
mov
mov
adcl
jb
scas
fstps
inc
xchg
or
lods
fmull
jp
sbb
jo
mov
repnz
outsb
inc
adc
shrb
adc
int
mov
test
les
shrl
cmp
jl
lods
and
mov
inc
lods
pushf
push
movsl
jmp
inc
aam
cmp
inc
cmpsb
iret
hlt
sbb
fistl
rorl
mov
adc
nop
addr16
arpl
or
fwait
jo
enter
xor
ret
sbb
push
push
cmpsl
push
jno
cmpl
test
fstpt
pushf
insb
popa
incb
notl
ds
nopl
push
aam
sbb
aas
push
add
push
test
dec
lds
push
jo
mov
push
bound
fwait
cmp
jne
add
lods
sbb
es
mov
push
mov
imul
cmpsb
dec
inc
bound
sub
in
ja
or
jbe
push
mov
pusha
js
xor
push
jle
adc
jl
sahf
add
add
enter
xor
pop
mov
rorl
rcrl
or
mov
push
icebp
mov
loope
xlat
aad
sbb
push
adc
inc
mov
mov
sub
jno
shl
loop
mov
ss
mov
or
jnp
pop
sub
add
popa
and
sbb
cmpl
inc
repnz
data16
cmpsb
mov
fimull
add
cmp
dec
push
stc
push
add
aaa
xor
sub
mov
inc
out
pop
pop
fs
lds
xchg
fldt
jo
clc
mov
mov
jnp
roll
jnp
lea
repnz
daa
pop
les
icebp
jne
loop
adc
into
push
pop
cmc
imul
es
daa
popf
lods
or
fmull
in
cmp
fcmovne
out
jbe
add
push
lods
stos
xor
jecxz
inc
push
cli
cli
stos
xor
sbb
addb
add
mov
ret
mov
pop
scas
pop
repnz
xchg
mov
repz
fs
out
cld
enter
mov
divl
fcoms
lea
add
lods
repnz
sub
dec
int3
lret
xchg
jnp
push
adc
mov
mov
leave
xchg
stos
inc
mov
adc
or
loopne
out
xchg
mov
mov
dec
add
mov
sub
test
iret
popf
or
sbb
lret
xlat
jle
jmp
add
jg
out
pop
mov
xchg
pop
lcall
insl
pop
bsr
push
lcall
stos
jmp
dec
mov
outsl
stos
fstpl
mov
cmp
jecxz
insl
imul
xor
out
xchg
mov
dec
out
verw
adc
xor
mov
es
dec
xor
dec
pop
pop
out
fdivrs
jle
sub
andl
xlat
and
adc
and
adc
or
sub
push
jns
mull
and
mov
push
sbbl
aaa
push
mov
dec
cmp
addb
push
mov
xor
out
jge
out
sub
dec
push
jge
fisubs
hlt
cwtl
jbe
push
mov
xchg
add
adc
xor
sub
pop
cmpsl
dec
cmpsb
cmp
dec
mov
xor
aam
cmp
cmpsb
inc
lods
and
jb
lods
inc
rcll
popa
in
fldl
dec
aad
jg
repnz
xchg
xor
mov
adc
pop
aad
ret
sub
addl
mov
mov
insb
push
mov
mov
fisubs
rcrl
jle
and
mov
mov
sub
jo
lcall
aaa
rcrb
adc
lcall
xchg
dec
pop
dec
std
pushf
lock
adc
or
arpl
cltd
adc
inc
push
sbb
test
xchg
pop
imul
mov
mov
xchg
mov
out
push
pop
movsl
or
aad
xchg
loope
or
cmp
pusha
cmp
leave
xor
adc
push
cmpsl
cld
xchg
xor
rsm
mov
lcall
dec
mov
jg
xor
test
cmpsl
out
xchg
movsl
es
shrl
les
aam
int3
jg
js
sbbb
popa
enter
out
call
js
adc
lods
insl
std
shl
add
cmpsb
pusha
inc
cmp
jmp
sbb
out
and
sti
pop
daa
mov
scas
push
push
xchg
xchg
js
fwait
ja
adc
sbb
mov
pop
or
xor
sbb
rclb
inc
push
aas
test
arpl
adc
in
cwtd
cmpsl
iret
mov
arpl
mov
fisttpl
or
pop
insb
cmc
jnp
sub
repnz
imulb
dec
sbbb
sbb
shrb
sbb
add
mov
ja
inc
int
mov
or
in
cld
cmp
test
sub
and
push
movsl
cmp
pop
ret
addr16
jecxz
xchg
lods
mov
rcrb
fldt
clc
fucomip
or
das
jno
pop
or
daa
das
push
mov
pop
int3
inc
push
fsubrs
fsub
inc
insl
fs
sahf
popa
push
jecxz
scas
fisttpll
fwait
and
fnsave
shl
scas
sti
xchg
movsl
stos
sub
es
fs
xor
jns
rclb
inc
lock
push
sub
pop
sub
dec
lea
test
inc
jge
cmp
pop
push
inc
rolb
dec
shrl
jns
adc
dec
or
mov
or
mov
add
and
xor
xchg
lret
and
push
loopne
clc
inc
sbb
sub
stos
popa
dec
mov
mov
call
minps
testb
nop
push
adc
test
sub
and
dec
add
dec
add
mov
loopne
stos
cs
arpl
sbb
jne
stos
xchg
pop
loop
leave
leave
out
ljmp
push
fs
cmp
and
sbb
adc
mov
push
jmp
mov
jb
out
xchg
test
xor
popa
stc
dec
test
ret
ret
inc
mov
ret
xor
dec
mov
pop
mov
mov
mov
mov
in
xchg
dec
imul
inc
pop
xor
mov
push
mov
push
je
and
pop
icebp
cwtl
rclw
nop
and
sub
fwait
push
iret
sbb
mov
mov
mov
int3
fidivs
mov
fistl
jns
adc
mov
loop
je
adc
aad
pop
pop
lea
cmpsb
xchg
rolb
aas
jge
out
mov
lods
cmp
fs
inc
daa
addb
jmp
fstpt
sahf
stos
cltd
icebp
fstpt
sub
mov
adc
ret
sub
in
jo
in
cmp
mov
fisttpl
adcb
lcall
in
or
adc
in
test
popa
xchg
jg
ret
addb
sub
mov
mov
fldt
mov
or
jg
jp
pop
jl
jmp
jl
das
sbb
aas
mov
call
cmc
sub
cmp
mov
xor
dec
pop
inc
sub
rclb
jge
xchg
mov
pop
repnz
dec
aas
mov
jmp
aad
roll
mov
loope
inc
inc
enter
shrl
jmp
push
dec
xlat
mov
pop
aad
ss
repz
adc
aaa
int
jae
xorb
mov
popa
les
data16
out
dec
popf
cltd
jmp
jb
mov
loop
in
mov
in
add
lret
or
jb
test
popf
sbbl
pop
popf
cmp
inc
sub
mov
dec
fs
fcoms
out
js
ja
mov
fwait
jb
in
jae
imul
and
pop
jbe
jnp
jmp
dec
dec
jo
mov
loop
mov
jmp
arpl
stos
add
or
mov
ja
sub
call
mov
push
nop
insb
fxch
cltd
es
push
lods
adcb
nop
pop
cli
sub
ss
nop
daa
add
cltd
push
in
scas
call
imull
stc
inc
push
mov
push
insb
imul
or
outsb
push
dec
cmpb
aad
mov
lret
and
xchg
sub
out
xor
or
out
mov
aam
pop
cmpsb
inc
aas
fdivrs
sub
cwtl
or
add
jb
mov
inc
sahf
imul
mov
dec
pop
ror
repz
add
jp
leave
mov
adc
outsb
aam
ret
dec
mov
dec
mov
xlat
jo
or
imul
out
rclb
stos
dec
mov
loopne
dec
dec
mov
daa
xlat
cmp
imul
mov
insb
cld
arpl
push
mov
test
into
arpl
daa
ljmp
test
and
inc
xlat
push
push
cmp
scas
pop
jmp
and
xlat
test
or
mov
jge
mov
push
pushf
xor
sub
xor
xchg
gs
js
xor
sbb
inc
movsl
xor
or
inc
inc
es
sahf
incl
mov
enter
pop
loopne
rorl
dec
in
mov
xor
nop
mov
loope
jg
add
js
es
fsubrl
mov
repz
sub
jmp
fs
test
or
inc
dec
sub
std
and
mov
inc
subl
incb
lock
and
jno
xor
pop
sahf
mov
or
lods
xchg
add
ror
subb
scas
xor
push
and
cmc
mov
pop
inc
add
enter
nop
incb
sbb
mov
mov
sbb
or
movsb
lock
or
lea
std
aam
jae
out
sub
rcrl
ds
test
mov
mull
ss
out
addr16
jmp
incb
lds
pop
scas
mov
pop
loop
test
xor
je
mov
fnstcw
push
in
jae
xor
inc
in
psubsw
add
cmp
data16
jp
ss
inc
mov
test
pushf
scas
loope
cmp
lods
outsl
lock
in
xlat
fisttps
cltd
pop
call
pop
subb
mov
movsl
jnp
xlat
sub
mov
cmpsl
mov
ljmp
jns
xor
rol
push
sti
pop
sub
inc
insl
test
sahf
sub
mov
cltd
mov
decl
cmp
aam
dec
call
jne
push
aaa
push
cmp
or
mov
cmp
pushf
in
fprem1
xchg
pop
mov
sub
sub
test
out
pop
lahf
push
nop
add
repz
ds
mov
scas
pop
jecxz
lahf
xor
nop
sub
popa
fcoml
sbb
nop
fistl
mov
dec
add
pop
jg
pop
js
mov
mov
push
adc
push
xchg
test
aam
aas
push
cwtl
xor
mov
or
inc
jg
fldl2t
fstpt
xchg
mov
dec
pop
cmp
stc
int
ja
int
out
jo
push
mov
push
jo
xchg
out
add
testl
inc
jg
outsb
outsb
pop
mov
testb
ja
in
mov
out
push
or
lods
lahf
or
add
movsl
mov
pop
aad
jae
mov
inc
je
inc
push
sbb
xor
int3
xchg
loop
dec
mov
and
imul
xor
mov
fstpl
jge
or
int3
xor
in
push
les
push
out
jg
add
push
ret
pop
cli
pushf
aam
pop
scas
jb
ljmp
xor
add
loop
mov
orb
popa
ljmp
dec
jo
add
xlat
outsb
das
and
add
jg
jmp
movsl
inc
jo
stc
adc
and
lret
cld
std
test
xor
xchg
inc
xchg
ljmp
mov
lahf
call
fisubl
cltd
mov
daa
sbbb
and
mov
flds
pop
xor
out
and
test
scas
outsl
push
fisubrs
aad
fidivs
cmpsb
lcall
pop
lods
jge
inc
inc
inc
jbe
lea
pop
sbb
jl
stos
inc
imul
jl
mov
es
out
or
mov
outsl
jne
push
xlat
xchg
cmc
push
and
pop
xor
xor
fadd
mov
icebp
stos
imul
xchg
loope
push
repz
jns
mov
push
xchg
dec
cmp
and
lock
adc
jb
mov
daa
jle
cmpsl
dec
fidivl
jbe
xchg
das
add
out
mov
cmp
cmp
pusha
mov
dec
or
dec
aad
cmpsl
clc
xor
mov
cmc
jg
jmp
fmull
sub
insl
jge
jae
fstpl
fstl
xchg
cmc
jno
add
into
fs
xchg
fucomp
movb
scas
push
mov
dec
mov
push
cmp
test
lret
mov
push
es
out
sahf
push
jbe
in
mov
add
fldl
imul
cli
mov
and
sti
mov
ret
shll
push
out
pop
lock
call
jne
and
mov
popf
testl
pop
sub
inc
arpl
stc
mov
inc
cmpsb
adc
mov
xchg
daa
insb
loope
cld
add
xlat
lods
ljmp
pushf
jg
adc
or
lea
mov
cmovb
arpl
jecxz
ja
filds
push
outsl
sub
and
std
das
mov
inc
cli
mov
lods
fnstsw
fidivl
scas
jb
xchg
pushf
and
xor
pop
mov
test
fdivrl
mov
movsb
movsb
mov
shl
mov
inc
lods
das
pop
mov
cmp
xor
add
push
xor
mov
pusha
mov
sti
cld
mov
pop
insb
in
adc
ret
jno
imul
mov
loope
stos
jo
mov
adc
xor
pop
call
sbb
ja
adc
dec
xchg
xor
xchg
sub
push
cmpsb
lods
mov
out
and
add
daa
mov
jl
sub
sbb
pop
lds
push
test
data16
inc
xchg
inc
inc
cmc
jmp
out
sbb
addl
adc
subb
adc
xchg
pop
insb
jl
mov
cmpsl
in
push
push
inc
gs
jae
and
sbb
orl
psraw
and
mov
adc
push
aas
dec
mov
jg
xor
and
fiadds
stos
ljmp
fadd
movsl
mov
imul
add
shrl
fimuls
test
loope
inc
inc
sub
cmp
icebp
xchg
call
mov
stos
cmpsl
push
sub
mov
subb
pushf
cli
lods
test
pop
je
aaa
mov
jge
enter
sbbl
scas
fwait
sub
xchg
shlb
dec
dec
adc
mov
addr16
test
lods
mov
ficomps
xor
bound
pop
cwtl
ljmp
ret
les
ret
cltd
fldl
or
lahf
cs
add
out
adc
inc
out
xlat
add
scas
in
and
jge
mov
lret
add
arpl
lock
js
dec
pop
xor
lahf
cs
adc
push
mov
repnz
adc
inc
sub
in
sub
pushf
sbb
xchg
push
aas
mov
mov
pop
fdiv
xchg
mov
pop
mov
pop
leave
rclb
test
sub
xchg
pop
mov
pop
cmp
mov
cmp
lods
jo
iret
hlt
add
aam
ds
roll
jecxz
shrl
inc
xchg
mov
sub
ficompl
xchg
push
out
jmp
mov
dec
and
lcall
push
clc
adc
add
clc
jle
jle
scas
pop
out
aad
inc
fistpl
divl
cmp
cmpsb
lcall
loope
movsl
add
mov
push
fs
jl
mov
and
add
or
das
adc
sub
mov
out
mov
push
or
pop
test
dec
jl
push
daa
inc
fwait
and
push
add
lea
sub
ljmp
fwait
ljmp
cli
stos
cmp
fwait
lahf
push
or
mov
cld
insb
cmp
dec
cmp
sbb
or
mov
and
sub
sbb
test
popf
jno
xor
jl
mov
int
fscale
ret
inc
rcrl
shrb
push
xor
es
cwtl
data16
jns
insb
mov
push
outsl
jnp
int
inc
xorb
push
add
add
dec
or
rclb
dec
push
mov
pop
addr16
adc
sub
roll
jns
mov
jg
or
mov
adc
adc
rolb
inc
jg
inc
xor
sbb
inc
pop
mov
fiadds
xchg
xchg
pop
ja
stos
dec
movsl
push
arpl
jg
sub
je
push
or
and
sahf
mov
add
mov
mov
in
inc
rorb
inc
inc
mov
jl
push
add
pop
cmpsb
aaa
push
add
in
push
out
icebp
lods
popa
xor
jbe
and
insl
adc
inc
cmpsb
cmp
xchg
mov
arpl
jns
loop
pop
scas
nop
cmp
and
push
movsb
mov
sbb
daa
lret
adc
push
repz
pop
pop
out
into
mov
xchg
jmp
mov
pushf
push
pop
or
mov
pop
es
jl
and
or
in
cmpsl
fldt
mov
fucomp
mov
and
test
pop
cmp
xor
stos
cmpsl
cmp
daa
mull
faddl
test
movsb
dec
xor
das
adc
mov
and
popf
add
pop
fdivs
sub
dec
xchg
xor
pop
stc
and
mov
ljmp
jne
and
sti
xor
xchg
push
stos
push
mov
js
cmp
je
fldl
jg
push
jne
inc
frstor
dec
fs
or
icebp
mov
sub
inc
loope
in
outsb
repnz
movsl
mov
or
push
es
testl
sbb
aas
pop
ss
sahf
cmp
popa
jns
cmpsb
stos
mov
packssdw
mov
mov
jnp
or
dec
mov
neg
aam
pop
leave
int3
jge
pop
iret
cmp
dec
lods
fwait
xchg
ja
sti
jg
mov
cmpsl
dec
xchg
mov
dec
inc
clc
mov
mov
gs
xchg
dec
inc
sbb
mov
popf
push
add
jbe
jg
shlb
pavgw
and
outsl
jnp
sub
stc
mov
aaa
or
les
ja
js
dec
mov
mov
aas
push
add
lds
inc
push
test
cld
lods
orl
ficompl
faddl
jg
je
dec
adcb
cmpsl
inc
push
aam
jo
data16
sbb
sub
cmc
js
sub
push
mov
sbb
jae
out
popf
jns
or
sub
pop
je
lock
cmp
gs
add
into
data16
push
pop
push
xor
fwait
notb
cmpsb
out
jne
jp
lret
xchg
inc
inc
inc
mov
push
sbb
cmp
leave
dec
or
xor
testb
mov
sbb
outsl
shll
add
insb
arpl
ret
jle
cwtl
lods
and
and
xchg
out
cmp
scas
sub
mov
and
div
lret
mov
dec
dec
dec
cmc
icebp
dec
sarl
add
add
mov
mov
mov
cmp
xchg
push
jo
sub
test
popf
mov
mov
add
jle
in
sub
adc
dec
ds
push
mov
stc
call
ds
cltd
inc
cmp
pop
sbb
pop
dec
jle
je
sbb
sub
mov
lds
daa
adcb
push
fldl
stc
fsubr
adc
stos
or
aaa
enter
or
adc
bound
mov
pop
dec
mov
xchg
test
mov
sub
adc
dec
sti
popf
les
pop
jne
rcrl
dec
ja
pop
in
or
pcmpgtd
xor
sub
sbb
loop
std
pop
dec
aad
mov
sahf
or
mov
clc
pop
inc
jmp
daa
popa
filds
jno
or
sub
xchg
inc
imul
insb
xchg
in
and
dec
rcrb
dec
fwait
jne
or
sar
sbb
pop
lret
jge
testl
jmp
lods
inc
mov
je
cmp
sub
stos
mov
sarw
pop
hlt
jo
insb
icebp
adcb
add
jle
xlat
ss
mov
std
gs
or
imul
xchg
mov
and
jge
iret
pop
cld
jbe
stos
sbb
in
and
cmc
adc
inc
push
add
pop
cmp
pop
or
xchg
or
dec
mov
fldpi
call
xchg
jp
dec
loope
jg
or
negl
cs
in
add
mov
in
or
pop
and
pop
cmc
pop
add
loope
pop
jne
aas
mov
arpl
inc
aad
rep
xchg
jg
jmp
loope
adc
jp
fisubl
cmp
outsb
push
cmpsb
mov
push
addb
mov
inc
data16
cmpsl
lea
adc
cmp
push
popf
pop
insb
xchg
jne
and
xchg
add
push
decl
andb
je
cli
or
sub
gs
je
insl
inc
jo
inc
xlat
mov
pop
rcll
std
ja
insb
js
and
fistl
jae
pusha
cmp
push
rcrb
imul
testb
cld
inc
cwtl
sbb
out
or
mov
pop
mov
insl
jge
ret
negl
xor
push
shlb
sti
lock
in
out
popf
leave
mov
push
jmp
sub
jno
cmpsl
sub
or
mov
pop
data16
nop
dec
mov
dec
jae
jl
sahf
cmp
insl
cmp
insb
add
add
inc
daa
aaa
mov
dec
and
rorw
fwait
mov
aad
loopne
xor
sub
fidivrs
fdivl
push
add
leave
imul
out
inc
test
mov
int
out
mov
push
in
adc
int
pop
hlt
jp
cmp
mov
leave
in
fwait
mov
pop
and
lods
pop
pop
mov
addr16
cmc
mov
outsb
popa
fcompl
adc
shrl
sbb
push
cmc
nop
fcomp
xchg
into
cmp
repz
inc
movsl
mov
push
dec
add
test
test
insl
and
mov
loopne
clc
out
add
cmc
push
xor
dec
xchg
or
icebp
iret
in
add
or
sti
mov
fwait
in
test
mov
lods
cmp
stc
nop
pop
cmp
ss
adc
out
dec
test
scas
cmpsl
es
mov
bound
or
inc
lret
add
sahf
mov
inc
mov
pop
jb
dec
sub
fisttpll
xchg
xchg
ja
xlat
pusha
sbb
enter
addb
sub
testl
outsb
scas
mov
add
es
push
jmp
xor
jo
xchg
sub
and
dec
loope
mov
lret
adcl
push
out
mov
pop
icebp
lahf
sbb
inc
push
add
mov
test
inc
imul
cltd
ret
dec
and
mov
pop
jnp
sbb
loop
insb
aam
outsl
addl
xchg
enter
pop
add
pusha
outsl
mov
adc
aas
rorl
or
nop
xor
sub
dec
lock
icebp
sbb
xchg
insb
js
loop
repz
xor
sarl
mov
sub
xor
mov
push
imul
lret
pop
xor
pop
enter
in
add
es
cwtl
out
push
lahf
adc
pushf
arpl
sub
stc
and
pop
jp
inc
stc
arpl
iret
mov
mov
aas
mov
incb
xchg
hlt
addr16
cs
jge
inc
push
pop
cli
inc
or
adc
push
out
movsl
cmp
xchg
das
inc
xlat
in
sub
and
dec
pusha
and
push
mov
enter
sahf
mov
mov
or
jb
inc
mov
cmpsb
mov
push
mov
mov
push
in
aad
adc
ss
in
outsl
jle
xlat
rolb
push
in
pop
in
shll
fwait
les
or
mov
shl
or
sub
mov
push
mov
ret
lods
mov
add
aaa
xchg
xchg
pop
jae
cmpsl
hlt
push
and
outsb
fwait
or
and
pop
and
pop
enter
mov
outsl
sbb
movsl
push
pop
fmul
fdivr
push
sbb
ret
and
pop
cmc
adcb
sub
out
cwtl
xor
cmpsb
sbb
loope
push
xor
jle
loop
pushf
lcall
cmpsb
mov
ret
out
xchg
pop
shlb
add
in
cs
adc
xor
dec
popa
mov
popl
cmp
dec
sahf
mov
decb
push
fwait
repnz
or
fwait
sub
sub
data16
xchg
data16
jo
mov
or
stc
test
mov
cmpsb
pop
inc
bound
imul
jnp
clc
mov
sahf
sub
inc
shll
jbe
aad
fwait
push
scas
fnstenv
mov
call
les
inc
xchg
mov
push
and
sbb
loope
aaa
mov
adc
push
inc
jecxz
push
push
dec
and
arpl
jo
lea
test
xchg
cld
add
or
cmp
dec
subl
out
int3
mov
push
sub
ja
xchg
push
xor
xor
mov
clc
test
cli
xchg
adc
sbb
dec
movsb
aad
popa
push
pop
mov
icebp
pop
mov
iret
scas
icebp
mov
jo
in
mov
cmpsb
mov
push
cmp
adc
mov
jecxz
in
mov
incl
rcll
pop
add
adc
and
cld
test
fwait
dec
jg
bound
pop
bound
test
lods
js
inc
daa
xchg
sub
fdivs
cmc
pop
test
lcall
sbb
lcall
push
mov
xchg
fldt
ds
lods
test
fldpi
mov
scas
call
push
aas
sahf
push
daa
into
ficoml
jmp
dec
mov
orl
daa
pop
es
rol
xchg
dec
mov
cmc
adc
mov
pop
int3
inc
cmp
subl
scas
sbb
jle
push
pop
inc
arpl
pop
aas
push
xchg
cmp
cld
gs
ss
mov
pop
aaa
xor
shrb
and
pop
sbb
jle
div
adc
dec
xchg
out
dec
cmp
andl
jbe
xor
inc
stos
adc
mov
popa
cmp
sbb
das
bound
int
pop
mov
popa
dec
bnd
pop
cmp
mov
dec
mov
pop
push
daa
xor
fsubr
pop
push
shl
xor
push
jbe
cmp
loop
adc
jno
shll
xchg
in
cld
repnz
in
push
std
push
push
shrb
ror
push
cmp
fnsave
inc
cmp
dec
int3
int3
push
inc
mov
fidivrs
pop
test
xlat
cltd
mov
dec
fsubp
jne
push
xchg
psrlq
lret
xlat
popa
push
lcall
jmp
addr16
btcl
inc
les
push
shlb
in
add
jp
std
mov
pop
gs
insl
add
leave
mov
pop
lahf
push
sbb
test
mov
enter
inc
xchg
pushf
repz
rorl
sub
or
fwait
mov
adc
push
sub
std
pusha
mov
push
dec
imulb
cwtl
ds
pop
fisttpll
jmp
test
mov
leave
lret
fsts
int3
xor
loopne
ret
pusha
je
and
jb
cwtl
daa
inc
adc
lret
mov
push
or
xchg
cmp
mov
fdivrl
je
mov
int
dec
fsts
popa
repnz
sbb
dec
mov
bnd
sub
sarl
sarl
out
enter
into
ljmp
push
mov
ret
decl
or
adc
sub
ss
out
fs
mov
mov
rorl
pop
loop
leave
mov
shl
fstp
loopne
jb
out
mov
cmp
xchg
test
mov
inc
pop
ljmp
push
mov
lret
jb
sbb
jg
or
clc
pop
mov
fdivrs
xor
fucom
mov
xchg
repz
and
push
mov
mov
mov
mov
xor
test
lahf
fwait
scas
dec
icebp
cld
push
jmp
xchg
mov
call
xchg
jmp
inc
sbb
std
enter
mov
inc
push
dec
push
cwtl
push
mov
push
mov
cmp
inc
test
jne
push
push
xor
sub
cmp
add
lea
push
in
scas
mov
in
sub
call
imul
mov
cli
movsb
mov
xchg
fbld
in
and
lahf
push
xorb
or
xor
clc
sub
addl
imul
fnstcw
lret
adc
push
mov
jae
and
fstl
fucomip
rclb
aaa
fcmovne
out
shl
jne
lahf
loope
xchg
and
lret
push
push
jnp
sti
jo
push
repz
mov
ret
fcmovb
xchg
loope
fisubs
icebp
inc
nop
mov
es
adc
fists
mov
cli
or
sbb
iret
adc
or
cld
ja
std
nop
ds
push
pop
pop
sub
mov
pop
xchg
pop
add
mov
into
imul
adc
mov
lcall
sub
pop
or
gs
push
jl
scas
push
in
adc
popa
add
pusha
or
pop
cmpsb
mov
outsl
cmpb
outsb
push
xor
xchg
rcrb
clc
das
add
std
dec
aad
pop
adc
nop
outsl
pop
push
aad
jne
mov
pusha
into
dec
mov
push
scas
lahf
and
iret
popa
js
out
mov
push
lods
ret
out
aam
pop
xor
enter
add
dec
pop
xchg
mov
in
sbb
xor
sar
sbb
enter
sub
jno
fldcw
adc
sbb
xchg
inc
or
lock
xchg
in
push
xor
xchg
fdiv
push
aam
sbb
sahf
dec
lahf
push
push
in
pop
cmp
test
xchg
pop
xor
cmpsb
mov
add
cmovno
in
fists
nop
inc
cmp
fiaddl
into
in
xorl
jmp
or
inc
lahf
mov
xchg
xor
jno
test
push
mov
in
xor
sub
jbe
dec
mov
push
std
mov
nop
jle
sbb
gs
rorl
repnz
cmp
and
pop
rorl
clc
mov
adc
and
pushf
mov
movsb
jns
mov
ret
mov
cwtl
ds
jge
inc
aam
adc
stc
sub
mull
or
mov
inc
push
orl
hlt
bound
mov
add
lret
mov
sbb
test
dec
xchg
loope
movsb
ret
fwait
sbb
loope
mov
fwait
xor
divb
adc
xorl
nop
iret
or
mov
push
sbb
roll
sahf
adc
push
xchg
xor
les
push
dec
push
mov
or
loop
aas
sti
jbe
sbb
rclb
xchg
or
mov
scas
push
pusha
sub
lcall
rclb
sbb
je
jmp
cmp
dec
jge
leave
and
pop
hlt
inc
jge
testb
jl
and
add
lahf
adc
adc
pop
outsb
mov
outsl
push
stos
rcrb
hlt
int3
mov
mov
pusha
mov
repz
xor
imul
mov
xor
and
in
out
pop
out
repz
xchg
and
iret
pop
xor
cmc
cmpsl
lea
scas
jg
and
gs
xor
mov
test
stos
lods
inc
in
in
fldenv
and
filds
int3
inc
cld
pop
out
fidivs
and
jmp
and
fildl
dec
sub
jg
dec
out
jmp
aaa
repz
sbbl
movsl
shrb
movsl
hlt
ljmp
jno
jae
in
popf
xchg
pop
push
push
xchg
cmp
into
pop
push
scas
sub
dec
fdivrs
stos
jmp
fsubrp
das
adc
mov
xor
xchg
das
cmp
fidivs
fmull
mov
lds
jae
inc
xchg
dec
mov
mov
cmp
inc
das
sub
cmp
cmp
xor
push
fwait
or
cld
xchg
push
mov
push
mov
push
movl
add
mov
mov
sub
lret
cmp
pop
push
jno
jge
movsb
iret
lcall
xchg
popa
jle
insl
jmp
add
lret
les
push
mov
lock
stos
or
xor
and
loopne
pushf
leave
cmp
jb
inc
pop
push
jb
mov
and
inc
xchg
mov
push
jns
ds
test
iret
push
insl
add
xor
inc
mov
clc
or
ror
sbb
pop
aad
in
fxch
shrl
mov
pop
hlt
aaa
adc
test
jmp
test
arpl
bnd
sti
push
stos
push
lds
push
shlb
out
js
movsl
sub
lock
and
push
gs
pop
cli
push
movsl
mov
fisttps
sti
test
test
mov
jl
ss
movsl
inc
mov
or
mov
push
or
sub
jmp
xlat
subl
push
insb
jle
and
arpl
push
aaa
mov
push
ljmp
jnp
imul
or
lds
fidivrl
adc
mov
in
xchg
shll
fwait
sbb
call
int3
jecxz
mov
dec
cwtl
dec
addr16
cld
mov
push
stos
lods
mov
jb
sub
bound
jne
aaa
push
lcall
test
stc
je
sub
xor
mov
push
pop
and
mov
jl
xor
inc
cmc
cmp
test
scas
jecxz
mov
cmp
mov
sub
pop
push
les
insl
mov
sub
mov
jae
mov
loop
mov
jp
and
xchg
inc
inc
add
fisubl
or
inc
and
ret
inc
enter
aas
dec
sbb
mov
popf
lea
aaa
in
adc
mov
mov
movsb
in
test
inc
pop
notl
add
int
sub
enter
sbb
fbld
mov
jb
sub
mov
mov
iret
fistpl
pop
shrl
inc
mov
mov
out
mov
sbb
xrelease
xor
rcrb
imul
jecxz
in
inc
sbb
ja
stos
mov
adc
mov
stc
add
call
adc
sbb
pop
adc
mov
jmp
fimull
lret
push
xor
xchg
and
cmp
mov
mov
in
aas
push
call
test
push
xchg
pop
sahf
sbb
ja
scas
enter
xor
cmp
push
sti
movsb
push
xchg
sub
test
and
adc
insl
loopne
mov
jo
mov
out
out
pop
cmp
loop
cs
cmp
xchg
pop
ret
pop
mov
out
stc
je
mov
shll
das
out
pop
and
lret
and
sti
mov
cmp
mov
push
popw
and
iret
xchg
in
mov
fiaddl
rcrl
mov
push
repnz
fdivr
sbb
adc
dec
ja
jle
mov
aad
mov
dec
jnp
or
popf
out
add
loop
mov
xor
cmpsl
shll
gs
cmpsl
out
mov
sbb
mov
notl
iret
cmp
popf
mov
cmpsl
ds
aam
mov
inc
gs
mov
adc
nop
mov
fidivl
sbb
out
call
lods
fcmovu
out
stc
add
ja
lds
jns
push
std
in
mov
jae
mov
fisttpll
xor
mov
inc
cltd
adc
adc
cmpsl
sbb
fiaddl
loop
les
aam
and
mov
xor
shlb
pop
jmp
movsl
mov
insl
mov
mov
cmp
stos
js
lds
xchg
movsl
shlb
add
xchg
call
xchg
cwtl
xor
pop
in
pop
sub
gs
je
fmul
mov
jecxz
mov
mov
inc
inc
dec
data16
enter
sub
push
fmul
insl
shlb
mov
push
pop
imul
test
mov
cmpsb
and
loop
pop
dec
mov
cmp
pop
pop
das
dec
mov
lret
ja
std
arpl
xchg
mov
add
stos
and
adc
dec
cmc
and
ffree
fdivrl
mov
pop
cmp
inc
ja
test
out
jp
inc
xchg
stos
dec
mov
notb
or
clc
and
sti
mov
js
mov
out
push
lret
xchg
pop
js
adc
xchg
sub
fwait
movsl
xor
fildl
mov
push
jmp
fs
and
sub
cwtl
cwtl
jnp
inc
mov
jp
aam
adc
jae
es
je
imul
ljmp
inc
pop
idivb
mov
std
inc
imul
dec
dec
clc
jmp
cmp
sbb
mov
cmp
mov
and
pop
repnz
aad
mov
insl
cmp
pop
mov
jg
out
push
sbb
hlt
lahf
ret
add
push
dec
aam
inc
addl
and
mov
mov
clc
jno
movsb
ss
dec
add
fidivrs
xor
test
adc
jb
mov
jge
ss
mov
ret
aad
bound
lahf
add
outsb
xchg
int3
dec
fsubr
les
outsb
mov
les
lods
pop
out
rcrb
pop
xor
inc
bound
ret
decb
push
lods
aam
xchg
push
negl
jae
pop
jmp
mov
clc
mov
dec
dec
stos
gs
cmpsb
sub
pop
lahf
jl
adc
shlb
xor
sahf
mov
or
xchg
mov
xchg
inc
fst
mov
xor
repz
fbld
idivl
fisubs
movsl
dec
cmc
mov
mov
mov
lahf
popa
inc
inc
insl
stc
dec
jnp
push
jo
adc
push
pop
ja
pusha
mov
mov
pusha
aam
pop
adc
sub
stc
push
pop
js
xor
call
fs
push
ja
incb
or
xor
jmp
mov
mov
xchg
test
inc
insl
add
inc
xor
test
fildl
fists
sbbb
mov
add
outsb
cli
addr16
mov
xchg
pop
repz
add
adc
sti
jbe
xor
leave
xchg
jns
inc
push
mov
fwait
jg
sub
ror
in
mull
sahf
cs
pusha
mov
cmp
add
xchg
repz
push
cmp
stos
and
nop
adc
cli
popl
pop
divb
jp
popf
xchg
add
loop
rcr
mov
cmpb
mov
fdivrl
lods
pop
loop
jbe
xor
jmp
arpl
xor
mov
or
orb
int
jp
xchg
test
out
xchg
int3
jg
test
lahf
add
call
lods
fstps
addr16
mov
push
ljmp
and
lock
lcall
insl
hlt
lret
orl
jno
mov
std
in
clc
jg
lret
mov
pop
out
cmp
ret
es
jl
int
push
jp
int
mov
xchg
push
or
xor
out
cmp
xor
ss
lock
and
stos
or
dec
mov
mov
aas
ss
add
jmp
dec
ljmp
mov
popf
rcrb
cmpb
jl
and
movsb
dec
shll
push
pop
scas
pop
jns
jecxz
jp
pusha
mov
xchg
jge
push
es
int3
cli
xchg
incb
dec
add
ror
out
jae
das
pop
adc
repnz
dec
frstor
aam
std
repnz
stc
adc
aam
dec
push
dec
pop
cltd
ds
and
mov
or
outsl
mov
cwtl
flds
adc
add
fs
hlt
sbb
jae
int3
enter
inc
int3
out
jo
cld
inc
lret
mov
sub
mov
cli
ret
or
gs
sbb
jp
inc
in
fsubrl
filds
xchg
out
and
pop
adc
xor
adc
or
cwtl
loop
jl
loope
cld
or
dec
dec
cmpb
push
cs
sar
cmp
add
mov
add
fstl
ss
idivb
inc
es
faddl
sub
fmull
lcall
js
push
ljmp
jb
stc
inc
cmp
ret
mov
pop
sub
test
fistl
fs
add
xor
roll
add
xchg
das
push
mov
sahf
sub
lea
xor
mov
inc
stc
pushl
or
mov
mov
add
pushl
outsl
dec
pop
mov
into
and
mov
or
mov
xor
test
pop
push
mov
push
xor
imul
jl
jecxz
mov
push
mov
add
cmp
xlat
jno
inc
mov
xlat
xchg
mov
pop
arpl
ss
cmc
xchg
pop
aam
in
dec
pushf
and
imul
lahf
sbb
and
mov
inc
out
cltd
cmpsb
add
xchg
pushf
dec
mov
data16
pop
scas
adc
xor
push
xchg
aad
mov
das
mov
jne
loop
jmp
in
push
push
sbb
ret
fwait
enter
bound
stc
xchg
stos
push
jno
aam
sbbl
icebp
cmp
cwtl
cmc
xchg
adc
mov
pop
stos
orl
add
mov
pop
sbb
ljmp
push
dec
dec
mov
loopne
mov
les
and
jg
loop
dec
pop
adc
aas
mov
js
mov
or
jbe
sarb
ret
xor
ret
inc
leave
push
das
bnd
je
loope
pop
mov
mov
mov
in
test
sbb
filds
inc
popa
adc
push
loop
dec
popa
loopne
cmp
xchg
push
push
pusha
xor
leave
xor
mov
mov
jecxz
mov
ss
jp
jbe
fldt
movsl
and
or
lret
std
scas
out
aaa
pop
mov
mov
mov
icebp
mov
popf
sti
sub
fstpt
xor
jae
in
jle
dec
into
jno
arpl
xchg
pop
mov
sti
adc
pop
stos
and
mov
jbe
push
lahf
jo
push
dec
fcompl
stc
dec
mov
pop
push
out
shll
sub
or
mov
pop
mov
xor
xor
call
mov
divb
test
je
dec
fisttps
rolb
loopne
or
mov
daa
ljmp
push
imul
xchg
rorb
js
xor
and
cmpsb
mov
lahf
lret
add
or
adc
push
ds
jnp
stc
push
aad
push
js
jle
insl
inc
rclb
pushf
xorl
push
and
mov
push
or
daa
imul
cmc
jb
lret
pop
xchg
dec
lea
out
dec
xchg
shll
fcomps
std
shl
in
push
dec
add
xor
bound
sti
sbb
sub
jmp
sti
inc
scas
pop
push
sbb
das
add
cmpsl
lods
and
nop
push
in
into
in
sbb
repz
xor
in
or
dec
movsl
mov
aad
rcrl
rol
test
pop
out
mov
pusha
addr16
mov
sbb
outsl
dec
lret
cs
mov
in
cli
xchg
and
add
dec
mov
hlt
xchg
popf
dec
cmpsb
mov
loopne
inc
nop
cmp
xlat
in
mov
mov
sbb
sbb
jle
ficomps
das
and
imull
jg
repnz
imul
dec
dec
cli
out
or
xchg
push
fldt
inc
jno
xadd
cmp
aad
iret
flds
ret
sub
sub
add
ds
arpl
inc
popf
movsl
imul
add
fstpt
enter
vmovupd
adc
sub
xor
mov
xor
sti
and
scas
sbb
fwait
data16
jmp
pop
dec
outsl
fsub
scas
into
add
and
xchg
dec
xor
pop
inc
lahf
and
xchg
xchg
xchg
cmpsb
loope
mov
xchg
fucom
aad
lahf
lods
dec
dec
add
scas
call
sbb
sahf
mov
xor
sub
popa
aaa
adc
shl
std
xchg
and
xchg
mov
adc
pop
mov
hlt
adc
mov
pop
sti
push
sahf
cmpsl
jno
aas
lret
pop
fisubs
adc
mov
adc
fildll
out
jmp
adc
lcall
std
pushaw
push
popf
and
mov
in
cmp
push
inc
push
mov
test
cmp
xor
inc
inc
mov
fs
fiaddl
sub
sbb
xor
repz
sub
and
jl
int
add
jns
xor
sbb
push
dec
stos
xchg
call
push
andb
in
mov
out
int
mov
or
add
add
mov
cmp
cmc
mov
insl
add
inc
and
mov
hlt
nop
nop
jle
adc
pushf
negb
subb
pop
fsubs
mov
mov
outsl
or
mov
push
xchg
insb
loope
mov
nop
aas
mov
jmp
push
sbb
xchg
sti
inc
and
loop
dec
lahf
and
jns
lahf
arpl
sbb
shlb
add
dec
lret
or
sbb
pop
sahf
pop
inc
mov
pop
jecxz
mov
ss
mov
mov
nop
sub
arpl
sbb
mov
jne
clc
iret
pop
lods
shlb
and
fsubrs
fisubrl
and
pop
push
insb
sbb
scas
and
imul
icebp
pop
adc
and
movsl
sarl
sub
sub
push
test
push
fildl
inc
xor
in
fsubl
or
jnp
movsl
or
and
pusha
loopne
or
stos
test
push
mov
insb
mov
cmp
daa
add
lahf
andl
clc
adc
jb
arpl
call
fidivrl
inc
lret
pop
ds
adc
fildll
cmp
movsb
mov
out
adc
ss
fmul
or
inc
loop
add
lock
jmp
aas
out
stc
lahf
dec
xor
sti
sbb
and
inc
add
jb
vmread
scas
fldpi
fistps
xchg
adc
mov
in
inc
arpl
jbe
mov
std
inc
pop
mov
or
sub
orl
dec
push
push
nop
test
pusha
out
mov
fadds
icebp
or
xchg
dec
jns
or
cmc
enter
int
lret
or
mov
and
pushf
xor
std
cs
or
adc
jns
lods
or
mov
cmp
outsb
std
adc
inc
push
or
mov
push
adc
adc
xor
ss
and
fdivrl
inc
inc
test
jbe
push
js
fidivs
cwtl
faddl
xor
in
idivb
imul
mov
jno
xchg
ret
adc
mov
sbb
push
push
pusha
scas
xchg
dec
or
insb
and
cmp
orb
and
ret
xchg
pop
pusha
pop
jp
sbb
jle
jl
xchg
fwait
inc
dec
push
sahf
mov
adc
push
cli
fstpl
push
mov
test
inc
mov
xchg
sbbb
push
outsl
push
dec
jge
in
in
iret
cltd
add
xor
inc
or
filds
std
jmp
in
adcl
faddp
sub
test
and
scas
mov
sub
aad
xchg
stos
inc
mov
out
and
cli
cmp
subb
scas
cli
aam
sub
sbb
mov
push
cmp
jl
adc
testl
jno
fnstenv
lret
pushaw
negl
jle
jge
inc
inc
lcall
sbb
jle
aam
adc
jbe
scas
idiv
mov
xlat
fnsave
lds
jne
outsl
add
xchg
dec
cld
scas
xchg
cwtl
pushf
and
sub
inc
pop
sub
cmc
pop
xor
testl
fs
pop
jp
jecxz,pt
mov
jecxz
jo
lods
lret
jecxz
scas
mov
stos
sbb
call
jnp
outsb
rcrb
std
in
jl
ret
andb
mov
xor
push
divl
mov
xchg
mov
push
ds
data16
mov
cwtl
cmc
mov
cmpsl
jecxz
test
xor
inc
and
test
cmp
cmpps
and
sbb
push
push
test
jle
inc
loopne
bswap
jnp
pop
icebp
push
push
outsb
mov
shrb
pop
mov
dec
dec
test
fsubl
xchg
aam
and
jl
push
stos
xchg
mov
and
mov
jne
jg
mov
mov
jne
clc
popa
aam
nop
fisubl
mov
ja
push
xor
mov
es
adc
scas
dec
fbstp
xor
pop
call
xor
fisubs
dec
fdivrs
mov
es
cmc
mov
adc
jecxz
xchg
xor
adc
jne
pop
fists
in
and
xor
jle
xor
shrl
loop
pushf
cltd
mov
push
dec
in
out
inc
out
mov
dec
insb
xor
mov
prefetchnta
mov
leave
scas
pop
shrb
loop
push
stos
cmpsb
cmp
jg
cmp
cmc
xchg
ret
rcrl
leave
mov
or
test
push
adc
fidivrs
and
inc
or
sbb
jle
push
sub
mov
xchg
dec
jae
mov
mov
movb
dec
mov
aam
or
dec
push
sbb
pop
and
adc
addr16
and
dec
dec
mov
movsl
mov
add
mov
pop
mov
aad
push
sbbb
or
mov
cmp
xchg
sub
dec
jno
jecxz
pop
cmp
mov
iret
es
into
pop
cmp
lods
or
loope
jns
inc
cmc
je
cmp
leave
xorb
mov
outsl
outsl
out
lahf
pushf
jns
cli
in
add
addr16
adc
cwtl
decb
in
lock
and
lea
mov
loopne
inc
popf
pop
rorb
dec
iret
movsb
aas
lret
rclb
or
iret
adc
cltd
mov
push
jbe
push
cmp
pop
xchg
xchg
add
push
push
test
mov
and
or
push
mov
dec
mov
lret
insb
cmp
or
ja
es
rcll
fiadds
jno
dec
test
test
data16
inc
mov
ljmp
dec
aas
jmp
xor
pushf
xor
lahf
mov
cmp
aaa
mov
jno
cmp
adc
mov
push
lret
pop
add
jbe
mov
filds
and
jne
cmc
ja
test
sbb
push
pushf
jl
dec
adc
add
rclb
lret
jno
mov
push
and
cltd
xchg
xchg
inc
xor
gs
scas
mov
dec
xor
fsubp
adc
aad
add
cld
in
mov
sbb
jmp
int
scas
pop
out
fists
push
jmp
jnp
lods
pop
and
push
pop
add
xchg
sub
sbb
addr16
xchg
cmp
shrb
adc
out
sub
xor
repz
sbb
sbb
daa
cmp
mov
cmpsb
scas
inc
or
push
dec
xchg
test
add
negb
and
testl
xchg
mov
or
pusha
dec
cli
and
jno
scas
pop
mov
sub
es
testb
xchg
push
jne
fisttpl
xchg
fmull
popa
data16
push
xchg
pop
inc
xor
lret
loope
sub
and
push
or
dec
jmp
out
jo
and
loop
xchg
mov
cli
insb
cld
stos
popf
sbb
jnp
neg
jne
lahf
ja
dec
pop
cld
xchg
nop
popa
adc
cmp
sub
jnp
add
pop
pop
xor
pushf
mov
lahf
out
fidivrs
cmp
es
pop
movsb
outsl
add
loopne
or
shrb
mov
movsb
jo
icebp
mov
cwtl
mov
hlt
mov
sarl
sar
std
mov
jmp
dec
pop
push
adc
push
lret
jg
out
into
addl
in
shr
or
das
add
mov
enter
mov
aas
dec
xchg
fmuls
mov
sbb
adc
addl
in
mov
dec
leave
ret
in
cmpb
mov
sbb
cltd
sti
push
or
ret
mov
mov
pop
fisubrl
push
pop
arpl
cld
rol
test
sub
add
mov
pop
and
and
jno
inc
mov
out
xor
mov
adc
add
mov
xchg
and
add
push
sub
and
mov
sub
push
ja
pushf
xchg
mov
sbb
or
jecxz
cltd
popf
mov
int
and
xchg
pushw
mov
ss
mov
cli
mov
in
push
add
sub
adc
or
sub
and
xchg
daa
sub
mov
imul
insb
js
pop
dec
xor
push
xchg
mov
pushf
and
cwtl
push
les
int3
fiaddl
ds
push
and
hlt
aam
decl
mov
pop
ret
lret
leave
loope
or
xchg
xchg
into
aad
jmp
cmp
mov
sub
shlb
les
sbb
mov
mov
xor
or
rol
imul
shlb
iret
jge
jmp
fdivp
aaa
xchg
sub
mov
push
adc
mov
push
ds
add
dec
sub
and
into
lds
cmp
adcl
fs
mov
xchg
pop
icebp
movsl
add
aam
imul
jp
repz
xor
lret
lods
fists
ljmp
push
std
icebp
lock
shl
cltd
les
les
ljmp
mov
rcrl
jmp
pop
jmp
cmp
jnp
shrl
popa
dec
mov
sahf
mov
and
add
stc
and
testl
mov
or
push
imul
pop
jg
cmpb
popl
mov
sub
fstl
adc
jne,pt
dec
add
push
cmp
sbb
adc
sub
mov
rorb
rorl
mov
inc
sti
or
in
cmp
popf
xor
inc
mov
movsl
jnp
mov
jnp
xchg
push
addr16
sahf
adc
clc
sbb
sbb
or
mov
push
or
mov
mov
mov
addr16
push
repz
sub
rep
jecxz
rcrb
push
xchg
sub
insb
fucomi
aad
jne
adc
test
cli
cs
pop
xchg
rorl
fucom
rcrb
mov
imul
rcrl
push
or
xchg
das
outsb
cmpsl
andb
cmp
jo
xor
bound
jg
mov
faddl
call
jns
imul
sahf
xor
test
mov
pushf
xor
mov
cld
jecxz
sub
sbb
xchg
xor
test
xlat
pop
stos
lea
adc
xor
test
mov
jle
add
mov
fcoml
xchg
mov
xchg
add
sbb
loope
imul
lahf
mov
xchg
pop
ret
jmp
pop
push
jo
mov
jo
xchg
push
pop
inc
jle
insb
imulb
mov
sbbb
cmp
orl
adc
jo
shrl
icebp
pop
dec
mov
jle
pusha
inc
cwtl
mov
addr16
dec
xor
push
js,pt
out
les
cmp
repz
dec
sub
cmp
jmp
sbbl
jb
icebp
push
int3
xor
js
sub
and
nop
pop
or
pop
dec
outsl
jns
mov
xchg
xor
pop
clc
rcrl
mov
jae
add
and
flds
adc
xchg
sbb
pop
loope
push
or
adc
stos
push
insl
lods
xlat
cmp
je
xchg
xor
xor
mov
dec
shl
je
mov
outsb
xchg
pop
insb
leave
cmp
pop
int
cmpsb
imul
enter
lcall
fildll
jp
fsubs
adc
repz
sub
test
cmp
and
jg
jmp
out
mov
cmp
sub
sub
xor
add
push
dec
out
sti
cmc
pop
adc
js
mov
clc
sbb
sbb
inc
in
mov
fstps
add
lock
pop
dec
push
stos
add
fldl
shrl
mov
mov
mov
jbe
comiss
or
xchg
fsubs
neg
nop
sbb
lods
xor
pop
or
test
iret
mov
xchg
cmp
addr16
test
jnp
lock
cmp
cltd
fdivs
sub
imul
aam
pop
dec
jmp
loop
repz
aas
add
sub
jb
lds
sbb
outsl
ja
repz
jg
pop
repnz
js
aad
push
sub
cmp
inc
imul
mov
fcmovnu
xor
mov
icebp
loopne
sub
dec
mov
mov
jns
sub
add
dec
inc
jb
gs
push
lahf
push
testb
or
jge
pop
sbbl
bound
fwait
and
xchg
sub
cmc
out
push
cwtl
cwtl
cmp
inc
sahf
in
les
pop
lret
pop
jne
xlat
gs
mov
mov
mov
jo
pushf
int3
sbb
and
movsl
lods
test
and
das
mov
fsubrl
push
neg
mov
cmp
jge
rcrl
and
inc
scas
inc
push
dec
fs
aaa
leave
pop
mov
ret
jb
sbb
int3
inc
xor
aaa
cmp
sub
jb
je
and
xchg
outsl
scas
mov
xor
adc
push
aam
inc
fbld
je
es
jge
or
aas
jg
adc
dec
inc
add
in
fwait
repnz
int
push
je
lret
fsubl
arpl
aaa
xor
add
cmp
push
jno
push
imul
fstp
xchg
jb
iret
sub
jno
iret
aam
xor
cld
aas
push
insl
test
sbb
loopne
push
adc
pop
in
daa
xor
mov
adc
hlt
in
jns
xor
push
shr
ret
rol
adc
mov
frstor
nop
jnp
jnp
rep
in
jmp
stos
jmp
dec
cmc
dec
rcr
pop
aam
inc
push
imul
lahf
xchg
mov
popf
xor
dec
outsb
jl
ret
sti
in
mov
mov
hlt
mov
rcr
aam
dec
fdiv
jo
jbe
hlt
cmp
inc
xchg
xchg
jge
and
popf
sahf
mov
popf
jmp
cmpsl
inc
mov
dec
sbb
ret
insb
insb
aam
call
fs
test
iret
bound
dec
enter
adc
push
mov
jmp
xor
or
mov
mov
sbb
stos
jle
shrl
cltd
mov
fdivs
icebp
enter
jns
add
jb
imul
mov
mov
loope
test
repz
test
inc
out
xchg
insl
data16
mov
add
mov
cltd
or
pop
cmc
mov
testb
add
push
and
or
mov
jg
out
jecxz
iret
inc
sbb
xor
push
xchg
in
mov
out
jne
icebp
leave
jne
pop
test
in
flds
xchg
pop
xor
xor
movsl
add
decb
sbb
xchg
adc
repz
aam
jne
add
adc
imul
fwait
fwait
loope
and
pusha
fcmovne
rolb
inc
push
jo
pop
lret
cmp
push
cwtl
pop
lret
sub
aad
mov
daa
inc
pushl
adc
in
out
fstpt
mov
scas
push
dec
fsubs
shrl
sbb
xchg
dec
fists
jno
sbb
out
rclb
aaa
int3
in
cwtl
icebp
mov
sbb
pop
ret
stc
aaa
pop
outsb
mulb
sbb
or
dec
lods
jmp
mov
loopne
pop
dec
pop
jb
cmp
fwait
lods
dec
icebp
push
pop
jmp
pop
push
mov
cmc
je
or
call
sti
fmull
or
subb
aad
push
pop
sub
adc
pop
mov
jp
push
jmp
xor
xor
shlb
sbb
loopne
xlat
scas
roll
cli
data16
push
sbb
test
and
test
xor
jbe
lea
xchg
cmp
add
xor
xchg
arpl
fisubl
push
ret
cli
pushf
xchg
shll
pop
fs
call
push
pop
ret
jge
sbb
outsl
adc
jb
flds
mov
inc
pop
out
mov
jmp
addr16
outsb
add
or
cwtl
add
inc
xor
dec
pop
lds
cmpsb
jno
dec
sbb
repz
adc
push
and
xchg
sub
imul
sbb
xchg
sbb
lret
pop
scas
mov
mov
or
and
movsl
icebp
js
test
imul
pusha
sub
addr16
into
sbb
or
sbb
jg
pop
negb
jle
call
imul
sti
push
sahf
fsubrl
cmp
aam
pushf
add
out
inc
mov
out
inc
orb
dec
lods
lods
inc
adc
push
mov
outsb
inc
fdivs
test
jne
jge
pushf
sti
das
mov
push
mov
mov
pop
hlt
scas
mov
or
sbb
mov
cs
bnd
leave
inc
fnstcw
imul
outsb
std
rol
fistpl
push
mov
aad
inc
out
jl
rclb
stos
ret
jl
aas
sub
xchg
inc
in
rcrl
jbe
xchg
scas
lahf
repz
lret
cmp
das
mov
pop
imull
int3
mov
cmp
popa
rorb
adc
shr
cmp
into
or
stos
je
fs
scas
jnp
push
dec
push
adc
and
mov
scas
mov
rol
jp,pn
insl
sarl
ret
inc
lods
int3
xor
mov
fistpl
inc
add
jns
in
or
mov
add
adc
cmp
push
and
xchg
adc
enter
aaa
cmp
pushf
add
push
jbe
imul
fistpll
mov
aad
cmp
mov
adc
filds
jae
add
push
leave
int
jle
mov
js
cmp
sub
enter
popa
mov
shlb
ljmp
call
inc
pop
mov
cmpl
repnz
push
gs
outsb
xchg
popa
arpl
rol
loope
inc
dec
mov
sbb
xor
shlb
or
mov
aad
pop
inc
sub
test
rcr
jb
jg
pushf
jle
and
xor
loope
loop
adc
mov
and
popf
xor
add
lcall
in
push
sbb
arpl
sub
mov
pop
xchg
push
add
test
cmp
cmc
sub
add
xlat
inc
pop
dec
xlat
push
loop
pusha
out
pop
outsl
pop
inc
jb
jb
sbb
movsb
pusha
or
aad
cmp
cmp
dec
jno
ffree
xchg
sub
xchg
sbb
sub
lods
inc
pop
test
pop
mov
dec
xlat
jecxz
stc
sahf
outsl
fdiv
lcall
xchg
lret
mov
daa
cmp
pop
not
imul
fisttpl
or
add
pop
dec
dec
xchg
push
inc
movl
xchg
addr16
sbb
jl
in
cld
jae
jl
and
mov
stos
daa
mov
aam
testl
cmp
int
pop
ja
nop
xor
in
inc
inc
in
cmp
cld
push
or
or
push
lods
insb
hlt
mov
adc
mov
aas
inc
push
js
loope
mov
and
int3
imul
or
lock
lods
stc
xchg
xchg
aam
std
rcrb
pop
mov
mov
pop
cld
jmp
aas
and
jmp
addb
xor
sbb
out
lods
push
std
push
jmp
mov
sti
or
mov
inc
fildl
sbb
and
lret
cmp
pop
daa
xor
sbb
mov
loope
cmc
sbb
adc
sub
xchg
adc
xchg
mov
jno
movsl
decb
xlat
loope
sub
fnsave
jmp
cli
pop
lea
lds
pop
bound
push
or
adc
ds
enter
lret
and
mov
mov
sti
jne
test
xchg
fadds
jne
mov
push
push
jae
clc
mov
adc
imull
mov
fldt
or
push
mov
push
jns
and
divb
repnz
pop
icebp
dec
add
xchg
mov
aas
out
xchg
xlat
or
pop
xor
push
movsl
out
mov
mov
jmp
xor
sarb
ja
lcall
jecxz
outsl
out
sub
in
ret
mov
stc
sub
dec
dec
pop
loop
adc
pop
xor
lds
lcall
mov
aaa
mov
jne
or
push
ficomps
loop
adc
test
out
adc
xor
lods
inc
aad
pop
fisubrl
push
sub
hlt
adc
es
rclb
push
lcall
shll
push
adc
jb
lret
push
sahf
stos
aaa
in
and
xor
mov
icebp
les
ljmp
xor
iret
popa
icebp
or
xchg
push
and
xor
lret
adc
mov
jne
mov
roll
cmp
fdivrl
and
mov
mov
and
mov
xchg
dec
xchg
jnp
mov
xchg
add
jecxz
aam
and
xor
in
gs
mov
out
inc
sbb
or
dec
out
or
sbb
push
mov
adc
shrb
out
xlat
mov
fs
pop
xchg
rcl
jbe
pop
dec
imul
in
aaa
xchg
leave
lds
ds
inc
lock
int
ja
repz
lea
fidivrl
xorl
rolb
inc
adc
sub
fwait
ss
popf
xor
xchg
sub
ss
lock
sbbl
out
sbb
pop
outsb
xchg
mov
test
fmull
jo
pusha
aas
fcomi
popa
lret
sti
cmpl
cmp
jle
and
mov
sbb
and
sbb
lahf
mulb
arpl
adc
sbbl
xor
push
or
jmp
mov
cwtl
ss
xor
add
jb
and
into
cmp
out
imul
and
fcomps
shrl
add
and
pop
sub
mov
jb
lret
out
imul
adc
inc
sub
adcb
mov
sbb
out
loopne
jle
adcb
out
andl
xor
pop
lods
mov
mov
hlt
lret
xor
mov
dec
inc
cwtl
icebp
sub
mov
inc
out
push
popa
mov
inc
jle
icebp
mov
inc
loope
jl
push
mov
fildll
data16
aam
adc
mov
jo
outsb
fcompl
adc
or
stos
arpl
mov
cmp
add
leave
xchg
pushf
les
add
or
sbb
pop
arpl
inc
xchg
nop
jne
testl
fs
xchg
cmp
test
mov
jecxz
sbb
lock
push
lea
test
pop
jge
rcr
je
lods
or
jmp
test
aaa
mov
fsubl
sarl
fistps
add
incb
imul
cmpsb
cli
xchg
add
or
hlt
mov
pxor
pop
lcallw
fimuls
xchg
cmp
jp
or
and
mulb
pop
or
not
repnz
call
or
out
popa
mov
mov
insl
pop
add
hlt
addl
clc
mov
and
call
repnz
pop
inc
sti
or
pop
pop
mov
jo
scas
pop
xlat
push
sub
add
xor
xor
xor
sub
jnp
fcoml
shrl
jo
add
sub
dec
xor
fucomi
bound
aad
jmp
out
pop
hlt
lret
dec
push
sub
and
test
call
in
bound
lahf
lret
les
lods
mov
popa
and
dec
sbb
fistl
jmp
mov
cmp
iret
push
and
xchg
mov
sbb
and
adc
mov
cli
pop
or
stos
ja
lea
in
sbb
loope
lods
in
mov
lret
je
push
insb
addr16
lret
jae
mov
jo
insb
adc
adc
jl
and
xchg
mov
sbb
push
sub
pop
cmp
mov
mov
sbb
shl
add
daa
inc
push
xchg
sbbb
cltd
jmp
dec
xchg
inc
cmp
fbstp
add
jae
andb
dec
and
jae
sub
mov
push
and
add
xchg
repnz
sub
lret
mov
mov
mov
lds
cmpsl
lods
jmp
add
and
and
and
loopne
mov
mov
lods
outsl
testl
call
mov
or
or
push
mov
cmpsb
xor
mov
sti
out
jns
int
and
into
es
push
inc
repnz
or
mov
push
mov
or
mov
sub
pop
lods
xor
mov
bound
sbb
ss
cmp
arpl
cmc
nop
sbb
mov
mull
sbb
jge
xchg
mov
sub
push
lock
add
fidivrs
xchg
and
rclb
jg
icebp
inc
inc
call
outsb
xor
sbb
data16
loop
in
xchg
cmp
sub
into
leave
clc
cwtl
jge
leave
sbb
js
lods
aas
cmpsl
inc
sbb
pop
fistps
cmp
cmp
rclb
aad
adc
mov
das
mov
in
aaa
shll
into
ffreep
bound
pop
pop
lock
addr16
sub
adc
xchg
sub
outsb
ret
inc
mov
jmp
int
repz
lcall
data16
mov
pop
mov
jp
shlb
or
inc
les
sbb
dec
push
gs
outsl
sbb
pop
adc
shrb
movsb
pop
inc
sarl
sub
inc
adc
and
jo
and
dec
loopne
repz
int3
xor
imul
sub
xor
add
arpl
outsb
adc
out
and
xchg
or
mov
mov
shlb
push
xchg
cmpl
lahf
popf
dec
fs
add
add
sub
addl
call
or
repnz
out
aas
cmp
insb
sbb
rorb
pop
loopne
mov
popf
cmp
icebp
mov
dec
pusha
pop
das
push
lods
add
ja
sub
scas
push
notl
push
addr16
pusha
push
adc
mov
xor
cli
add
ficoml
xor
or
mov
aam
pop
cmp
add
mov
fidivl
sbb
xchg
sub
ret
clc
add
in
imul
xchg
cmp
mov
mov
cld
hlt
lods
adc
xchg
lahf
and
icebp
mov
inc
pop
add
add
inc
adcl
lods
inc
je
jb
or
jecxz
sub
mov
mov
outsb
cmp
clc
rcrl
cld
stos
mov
adc
or
imul
out
xchg
add
dec
int3
fidivrs
les
pop
xchg
ja
add
sti
cmp
mov
iret
xchg
stos
push
popf
mov
jns
adc
dec
jbe
mov
jns
jb
pop
andl
lcall
popa
pop
cmpsl
shrb
mov
mov
stc
mov
jg
imul
xor
sub
in
outsl
iret
lret
dec
fcmovnu
push
adc
push
jns
push
sti
jbe
xor
mov
push
repz
aas
or
mov
aam
mov
cmp
sub
add
jg
jmp
jae
lods
js
xchg
xor
dec
pop
jecxz
xchg
mov
and
andl
mov
inc
loope
aad
lods
mov
repz
xchg
mov
pop
fisubl
test
in
mov
pop
std
stos
mov
push
mov
lds
and
bound
addl
gs
pop
push
push
stos
in
mov
jne
push
mov
cmp
dec
cwtl
jmp
jp
clc
inc
and
notl
out
xchg
inc
fld
xchg
adc
lock
xchg
mulb
inc
mov
mov
mov
and
jnp
gs
aad
into
data16
rcr
dec
and
fsubrl
xchg
inc
out
test
pushf
das
test
push
mov
iret
pop
je
sbbb
or
sahf
or
mov
and
sub
jb
loopne
xor
dec
jnp
cmc
or
lea
mov
jecxz
fwait
pop
hlt
pop
test
shrl
mov
mov
call
or
clc
mov
fbld
sbb
ret
push
movsl
aaa
scas
add
xchg
mov
jg
push
leave
dec
push
insl
in
cli
or
cltd
inc
fsubl
test
mov
cltd
inc
shl
rcl
jecxz
or
pop
pusha
nop
fisttpl
xor
fisubs
rcr
and
scas
cmp
dec
pop
out
out
and
jns
push
add
jne
lock
push
mov
mov
sahf
cmp
sbb
daa
jnp
ds
push
jg
adc
iret
aad
enter
ljmp
pop
out
sub
cli
jne
add
imul
jmp
push
add
push
movsl
push
push
cmp
xchg
ljmp
xor
mov
adc
push
fstpl
fwait
jb
inc
fisubrs
sarl
mov
leave
mov
in
arpl
repz
into
gs
in
ret
aaa
in
subl
sub
out
xchg
fdivrl
daa
out
cmc
movsl
inc
out
jne
loope
push
fstpt
cltd
mov
pop
sbb
push
adc
dec
push
jo
mov
lea
mov
lods
sbb
int3
dec
inc
jge
orl
cmp
incl
mov
xor
mov
pusha
mov
jo
dec
and
push
mov
mov
pushf
push
jno
pop
or
add
add
mov
daa
xor
push
adc
mov
pop
ss
out
testb
sub
repz
dec
inc
xor
cwtl
repnz
pop
movsb
pop
stos
and
adc
pop
mov
xchg
push
inc
inc
xchg
sub
movsl
addr16
adc
sbb
push
jmp
ftst
xchg
jp
inc
outsl
push
shl
pop
lock
shr
xchg
pushf
decl
mov
mov
insb
sbb
hlt
mov
mov
inc
fcmovb
inc
imul
fdiv
mov
mov
mov
add
inc
push
or
mov
das
std
sub
movsb
or
in
add
bound
cmp
popf
es
xchg
sbb
dec
call
jle
bound
cmovae
push
aas
movsb
adc
xchg
pop
dec
mov
jno
mov
test
mov
push
cld
aam
cmpsl
inc
movsl
pusha
aas
ja
aaa
imul
jle
push
data16
ret
hlt
aaa
sbb
data16
mov
pop
pop
sbb
jp
jbe
movsb
mov
mov
int3
and
ret
int3
aaa
ror
sahf
or
mov
clc
mov
fcmovbe
mov
js
jl
in
mov
jp
cmp
pushf
popa
add
push
lods
test
lock
sahf
popa
ss
sbb
int
mov
adcb
mov
repnz
imul
and
push
addr16
pop
mov
mov
add
hlt
inc
lret
stos
decl
imul
ret
xor
int3
dec
adc
rclb
pop
xacquire
lods
and
and
clc
dec
add
mov
mov
fnstsw
adc
sub
adc
jge
sahf
jle
lret
or
pop
cmpsb
xor
jno
mov
cmp
nop
mov
xlat
lret
pushf
jge
cmpsb
les
jnp
mov
push
enter
leave
pusha
test
sub
ss
fwait
push
mov
pop
in
dec
ss
sbb
mov
stc
arpl
add
jge
adc
push
pop
test
adc
cltd
mov
fs
push
pop
adc
mov
loop
sub
sub
pop
lods
push
into
mov
les
rsqrtps
in
xchg
inc
push
or
divb
push
repz
je
cwtl
das
jl
sahf
dec
andb
and
leave
sbb
inc
aam
fidivrl
add
lret
sar
loopne
inc
sti
aad
push
jecxz
lahf
movl
arpl
pop
out
stos
cmp
lea
mov
pop
fcomp
sti
sbb
repnz
adc
inc
pop
fstl
in
xor
call
cmc
cmp
mov
rcll
xlat
nop
xor
push
xor
pop
cs
mov
fmul
dec
loope
push
popa
jecxz
repnz
xchg
cmc
mov
aaa
into
mull
adc
dec
js
mov
js
push
mov
dec
and
push
pop
sub
test
je
adc
inc
jge
xor
les
movsb
jne
fdivrl
xchg
sub
repz
mov
shlb
mov
mov
addr16
scas
push
call
mov
push
push
add
ret
or
inc
inc
jge
nop
dec
xlat
adc
repnz
cmpsb
pop
aaa
jne
or
xchg
sbb
iret
sbb
rol
out
pop
and
das
push
cmp
test
sbb
mov
mov
mov
addr16
jmp
and
pop
inc
inc
rcrl
pop
out
lret
add
in
sbb
pop
xor
push
leave
or
rcrl
inc
jb
cli
push
mov
and
dec
sub
out
sub
or
xlat
mov
mov
fldl
mov
mov
sub
xchg
sub
out
jmp
ret
outsl
lea
insb
lock
insl
pop
mov
aaa
subl
scas
mov
mov
push
xor
xchg
ret
andl
dec
jno
jns
cmp
jle
mov
xor
or
fisubrl
push
mov
out
pop
push
sbb
popf
mov
mov
stc
lret
cmp
int
lds
out
lcall
inc
mov
sbb
clc
cmp
imul
test
or
push
push
xchg
cmp
adc
in
ss
push
dec
loopne
inc
imulb
scas
pop
xlat
jge
add
mov
idivb
int
sub
pop
ret
daa
cmp
movsb
xchg
inc
push
jno
rcll
cmpsl
push
test
rclb
cld
sbbl
pop
adc
sub
sbb
mov
scas
ret
pop
aam
es
adcb
pop
push
mov
sub
lahf
cmpl
pop
dec
mov
imul
into
fs
and
inc
jbe
mov
sub
gs
sbb
pop
addr16
lock
mov
xor
or
add
push
ds
loop
push
sahf
and
cs
out
dec
jo
pop
dec
pop
cmp
gs
push
adc
pop
movsl
mov
ret
xchg
jb
aam
test
ja
cld
fwait
push
or
cmp
and
fwait
iret
iret
jbe
xor
mov
and
sti
pop
ds
xor
sarb
cmp
cmp
ljmp
loope
jnp
cmp
daa
pop
mov
inc
or
scas
add
rcrb
cmp
jl
in
cltd
ret
daa
cwtl
mulb
cmp
out
out
mov
lods
jle
aad
xorb
jnp
dec
in
aas
sbb
sub
fstpt
mov
mov
sub
push
in
cmp
out
sub
lods
mov
aaa
add
jo
jmp
in
das
ss
jp
sbb
jbe
xor
xchg
lods
or
xchg
outsb
ljmp
cmc
mov
dec
dec
mov
ret
or
cmp
in
mov
ret
stc
scas
call
push
orl
loope
lret
push
dec
add
shll
adcl
dec
out
sbb
iret
mov
movsl
cmp
shll
xchg
out
pop
out
pop
adcb
shr
pop
into
or
adc
jne
mov
fsubs
aas
sbbb
es
leave
adc
sahf
xor
fs
and
lock
push
adc
cmp
mov
sbb
fimull
adc
test
loop
fstpl
add
jne
sbbb
dec
fadds
loope
push
shl
clc
lea
xchg
movsl
mov
sbb
movsl
and
jnp
cmp
mov
lock
rorl
xor
add
repnz
push
xchg
cmp
mov
pop
sbb
mov
sbb
daa
mov
lcall
ja
data16
adcb
inc
cli
push
fldcw
in
add
fidivrs
inc
mov
xchg
std
or
ror
xorl
lcall
lods
aad
sub
call
rep
xchg
mov
or
rcll
vpor
test
and
jg
inc
mov
decb
mov
stos
xchg
stos
push
push
sbb
sub
push
jno
cbtw
add
lock
push
insl
mov
mov
inc
push
sbb
xor
xor
jg
cmc
sbbb
out
sbb
repnz
cmpsb
or
xchg
mov
or
mov
inc
add
test
sub
lret
rcrb
add
dec
pop
rcll
movsl
andb
ja
or
xchg
shl
mov
leave
or
push
into
nop
xchg
negb
sbb
bound
popf
sub
psubsb
or
pop
dec
jne
sahf
xor
mov
mov
sbb
cltd
xchg
push
cmc
mov
cs
mov
js
fdivl
cmp
fldenv
pop
cmp
and
inc
mov
sub
push
fs
push
add
jno
repnz
push
sbb
out
aaa
lods
inc
mov
insl
sti
mov
lret
add
xchg
xor
ret
fsts
xchg
or
movsb
pop
mov
mov
mov
pop
test
insb
xchg
ret
in
xchg
lcall
shll
jl
pushf
mov
jnp
and
and
mov
rol
sti
fsubr
cmp
mov
aad
mov
add
mov
xchg
and
test
jae
push
jns
xchg
jnp
jl
test
hlt
mov
and
scas
sbb
or
pop
cli
xor
test
mov
mov
out
popf
filds
adc
adc
adc
push
fwait
pop
or
and
mov
bound
popf
push
daa
pop
cmp
push
jmp
sbb
pushl
add
xor
in
aas
out
pop
icebp
loopne
lret
mov
ret
lret
pushf
cli
lods
lahf
test
movsl
push
mov
mov
mov
sub
ljmp
push
ja
xchg
les
das
mov
imul
adc
mov
pop
repz
stc
adc
addl
or
movsl
popf
mov
xchg
push
lea
mov
mov
mov
lds
out
push
and
cmp
push
mov
push
fcmovnbe
repz
dec
in
jmp
mov
cwtl
out
pusha
nop
push
in
out
enter
push
ds
xorb
xlat
jo
push
push
mov
pop
stos
pop
push
jno
fwait
lods
xor
xor
add
adc
js
mov
sub
mov
cld
xorb
mov
aam
mov
ss
std
notb
dec
or
add
xchg
outsb
mov
and
ffree
mov
out
mov
mov
mov
xchg
mov
mov
cmp
mov
ss
ljmp
daa
add
add
sub
xor
insl
idivb
rcll
pop
je
rolb
lds
insb
aam
stos
jge
fwait
adc
out
stc
push
push
inc
ret
addb
add
les
sub
les
and
test
inc
push
dec
sbb
imul
xor
aam
mov
stc
pop
dec
lods
mov
xor
cld
xchg
cwtl
test
lret
and
imul
es
gs
aam
or
push
or
icebp
mov
cmp
dec
pusha
orb
mov
lahf
repnz
scas
out
leave
pusha
lods
jg
mov
add
sub
fadds
inc
cmpsb
mov
mov
push
int3
or
pushf
sbb
out
jo
outsl
sub
sub
cwtl
sbb
sbbl
lods
popf
push
pop
insb
rcl
shl
cwtl
cmp
lock
mov
pop
repnz
jle
mov
pushf
xor
addr16
ljmp
shlb
pop
pop
stos
sbb
jp
and
xchg
pop
hlt
adc
mov
lret
sbb
shll
inc
fbld
jns
loope
lcall
jne
imul
rorl
sarl
movb
out
push
adc
jno
mov
xor
imul
jl
push
sbb
dec
push
push
pop
jg
ja
mov
inc
iret
dec
jle
fcoms
clc
vpminsw
das
cmpsl
ja
jle
jp
jnp
push
mov
dec
pop
cmc
cs
mov
mov
lahf
shrl
pop
outsb
mov
cmpsb
test
inc
fcom
jle
or
movsl
xchg
xorb
sbb
or
pop
fadds
jae
out
mov
sub
xchg
aad
mov
cmp
adc
mov
sbb
xchg
icebp
adc
mov
in
lods
jne
pop
xchg
out
loopne
jle
ret
addr16
push
mov
psubw
and
push
in
adc
fistl
push
in
rcrb
ds
pop
sbb
dec
and
loop
lods
out
adc
js
jmp
mov
hlt
ss
adc
push
cmpl
jo
rcrb
lock
std
mov
sbb
mov
mov
outsl
jae
in
fwait
xchg
xor
in
xchg
out
push
sbb
xchg
lock
or
mov
fwait
popa
and
xchg
sub
pop
addr16
add
inc
jl
inc
xchg
repnz
sarl
jae
sub
xor
imul
xlat
mov
cmp
dec
pop
scas
cmp
pop
inc
sbb
test
je
sub
adc
cmp
filds
pusha
xchg
xor
aam
cmp
call
lcall
pop
dec
lods
inc
out
rcl
jmp
sti
xchg
mov
sti
pop
int3
outsl
dec
insl
mov
inc
popa
sbb
repnz
ficoml
addr16
dec
inc
or
shlb
xor
vshufps
pop
jo
push
inc
insl
fs
into
loop
out
je
xchg
test
push
jl
scas
pop
mov
ds
xor
mov
pop
je
sahf
jno
cmp
jno
cmp
mov
mov
xchg
sbb
inc
jl
test
cwtl
mov
insl
shll
pop
or
addl
push
repz
sub
ja
mov
dec
xor
inc
fs
sbb
ds
adc
inc
mov
mov
out
lret
inc
gs
stos
aaa
das
xor
sbb
pop
test
repz
xchg
add
sub
mov
aad
dec
push
js
inc
sub
aas
frstor
mov
aaa
in
js
push
jns
loope
add
inc
dec
loopne
mov
cwtl
jnp
jns
out
test
loopne
xchg
fcoms
lods
dec
lcall
jns
cmpsl
movsb
xchg
push
call
mov
push
ljmp
sbb
dec
cmp
pop
mov
and
bound
or
outsb
std
adc
jno
movsb
push
jne
nop
inc
pop
add
daa
pop
mov
adc
loop
mov
sub
push
sbb
hlt
adc
mov
jns
jp
xor
fs
jecxz
inc
call
add
mov
std
sbb
inc
inc
dec
gs
cmp
push
hlt
push
adc
add
sub
or
icebp
negb
push
jg
lahf
js
push
cmp
sahf
xor
add
mov
rcr
sub
adc
dec
add
scas
fidivrl
cmp
repnz
scas
cltd
dec
jns
add
and
cltd
out
pop
mov
jge
pushf
and
cmp
cmp
std
data16
cmp
ret
pop
sahf
clc
leave
jl
neg
sahf
or
mov
lock
add
sahf
pop
adc
adc
push
inc
das
mov
data16
bound
je
loop
sti
lods
incl
int
jae
pusha
xor
sub
push
in
sbb
jae
sbb
fmulp
mov
pop
cmp
push
loop
fldl
fidivl
add
pop
jp
dec
push
mov
mov
mov
pop
cld
xchg
mov
mov
jbe
outsl
xchg
and
movsb
scas
nop
mov
icebp
adc
insb
mov
mov
pop
test
mov
shll
test
loopne
push
scas
or
mov
mov
push
add
faddp
push
push
cmp
push
xor
ja
push
lahf
jns
into
jnp
cmp
les
subb
insl
sbb
in
inc
addr16
inc
flds
xor
mov
je
dec
out
imulb
xor
pusha
adc
arpl
jns
jp
or
out
clc
xchg
cmp
jnp
inc
icebp
popf
lods
shll
fs
ja
test
xor
mov
stos
jo
mov
pusha
negl
mov
icebp
call
or
sub
mov
int
rclb
dec
notl
push
mov
dec
mov
lahf
dec
dec
lahf
insl
andb
aad
cltd
and
ret
sbb
push
mov
jp
cs
sbb
imul
cmp
aad
xchg
ret
cld
jae
cmp
adc
out
les
push
lcall
repz
lret
popa
jl
vmovapd
add
cs
pusha
add
push
inc
xchg
insl
ja
dec
lods
mov
lcall
outsl
sbb
das
push
pop
add
push
xor
addl
jg
xor
ret
sbb
gs
xchg
cwtl
testb
mov
rorb
std
add
pusha
js
lea
lret
pusha
add
lcall
std
mov
aad
loopne
add
dec
inc
inc
xor
nop
inc
push
rcll
add
pop
lock
subl
sbb
mov
addr16
or
imul
test
pop
rol
rcl
sub
xlat
sub
jecxz
dec
ljmp
pop
xchg
add
inc
add
lock
adcb
outsb
jl
enter
sarl
pusha
call
cmp
push
fucomip
mov
sub
gs
test
push
inc
outsb
rolb
aam
push
push
aas
pop
xlat
jg
sub
je
mov
movsl
mov
cmp
push
fisubl
xor
repnz
out
int
cli
test
enter
das
xor
int3
fsubrp
adc
clc
inc
or
mov
std
inc
fs
jb
push
jp
mov
lods
sub
fidivs
cmpsl
sbb
cmpsl
sbb
cmpb
adc
mov
dec
seta
pushf
mov
andb
repz
adc
jb
int3
rorb
mov
imul
idivb
xor
cmpb
fdivr
adc
sbb
mov
movsb
imul
aam
stos
rcrb
arpl
mov
fstl
cmp
pop
in
test
adc
popf
and
cltd
lods
mov
cltd
repz
and
pop
popa
decb
ljmp
adc
dec
mov
mov
adc
inc
mov
and
popa
mov
rol
mov
cld
pusha
aas
enter
je
xchg
dec
inc
mov
jecxz
dec
es
cmp
mov
mov
jne
mov
cmpsb
out
inc
aad
cmp
pop
out
mov
loope
loopne
mov
bound
mov
add
popa
adc
lret
or
mov
dec
push
mov
sarb
jbe
sti
push
fisubs
add
pushf
mov
stos
pop
and
mov
mov
xchg
jb
jnp
mov
aas
lds
push
jnp
les
sub
mov
icebp
jmp
and
mov
testb
push
cmc
sbbl
dec
dec
pop
push
ljmp
mov
mov
pop
jns
pop
inc
fs
mov
enter
xor
push
lcall
xor
faddl
push
std
mov
inc
add
fwait
test
outsl
daa
cs
pop
imul
add
jns
and
pop
mov
pop
loopne
xor
or
enter
dec
sub
stc
mov
or
push
dec
lods
fnstenv
scas
pop
je
jle
pusha
das
sbbb
add
jae
cmp
cmp
aaa
dec
dec
mov
pop
cmp
shl
xor
mov
jle
inc
mov
adc
add
test
xor
jbe
aas
bnd
aas
loope
xor
insl
fisubl
sbb
into
mov
xor
mov
sub
out
sub
xchg
add
cmp
inc
test
mov
sub
repz
push
leave
xor
jmp
bound
add
sbb
addr16
fs
sub
push
dec
adc
pop
xchg
mov
and
dec
and
adc
inc
pop
outsl
in
notl
mov
jbe
adc
ljmp
add
cmp
mov
dec
pop
cmp
pusha
lret
push
pop
bound
jo
inc
cmp
addr16
mov
dec
adc
or
pop
sub
sub
mov
mov
andb
addl
insb
push
push
dec
push
cmc
mov
pop
xchg
xchg
daa
ljmp
jne
mov
jnp
fdivr
mov
fidivs
xchg
int3
xchg
mov
mov
mov
bound
in
push
inc
ds
mov
push
mov
insl
sbb
lahf
mov
mov
js
mov
shrl
andb
push
lds
jns
mov
xchg
nop
subl
scas
jecxz
js
and
jnp
xchg
mov
test
sub
pop
inc
xlat
sub
cmp
mov
adc
pusha
int3
adc
lcall
in
mov
jp
cmp
inc
mov
mov
roll
ficompl
or
cmp
push
pop
rcr
cmp
sbb
mov
pop
sbb
and
mov
arpl
cwtl
insl
not
cmp
mov
in
mov
mov
ljmp
dec
cmp
imul
xor
incb
enter
cld
xchg
out
sar
adc
xchg
sub
gs
popf
xor
imul
jmp
add
jo
pop
es
mov
lds
cwtl
stc
out
dec
push
xor
das
xchg
mov
in
cs
lcall
pop
outsl
jnp
sub
sarb
mov
mov
in
popa
ret
jmp
pusha
xchg
cmp
cld
vpsrlq
subl
xorb
vminsd
pop
fnstenv
inc
mov
add
xchg
call
je
add
inc
movsl
data16
cmpsl
lock
out
inc
adc
roll
push
cltd
popa
inc
sbb
and
mov
jae
adc
jle
shlb
and
inc
inc
dec
fisubl
outsb
fwait
push
inc
mov
mov
cld
sub
mov
gs
fsubrp
sbb
mov
dec
movsb
call
fistpll
push
lds
imul
xchg
mov
xchg
mov
jae
add
shlb
jg
cltd
pop
shll
adc
add
ja
nop
pop
bound
nop
decl
adc
or
lahf
jnp
sarl
adc
add
pop
mov
xor
pop
in
jecxz
pop
addr16
push
xchg
mov
mov
pop
aas
jp
ret
push
mov
mov
into
in
sub
add
popl
mull
xlat
cli
push
ss
rol
xor
int
or
pushf
and
or
inc
cmpsl
pusha
repz
stos
mov
rcll
pop
cmc
inc
mov
cmc
sbb
push
outsb
jl
mov
ja
aam
adc
lods
negl
mov
or
push
add
out
push
mov
xchg
mov
inc
push
mov
out
test
xor
xchg
adc
aaa
adc
dec
add
and
xlat
movsb
dec
dec
ret
shl
inc
insb
pop
je
xlat
mov
sub
jl
iret
call
or
adc
jbe
inc
add
mov
mov
mov
orl
xchg
cwtl
ret
mov
ffree
je
popa
jns
lods
out
xchg
shll
andb
rorl
mov
les
gs
dec
inc
push
loop
adc
test
xor
mov
mov
cmpsb
std
insl
sbb
movsb
xor
imul
mov
pop
call
dec
pop
sarl
sub
cmp
mov
push
add
or
cmpsl
mov
pop
bound
pushf
jnp
add
fwait
sbbl
insb
dec
jmp
mov
push
scas
call
stc
fstps
arpl
mov
into
mov
pcmpeqd
jl
mov
pop
testb
int
es
push
gs
jge
cmp
dec
jp
push
lods
insl
mov
shll
jns
sbb
fcoml
ja
xor
outsb
mov
ja
sbb
add
lea
leave
xor
inc
repnz
xchg
lret
jbe
sbb
mov
push
adc
add
subl
loopne
lock
and
push
xchg
pop
or
xor
add
xor
jno
leave
push
mov
fmull
mov
and
mov
pop
fimuls
test
lea
mov
jo
out
clc
sub
jmp
dec
lcall
jae
fsubrl
xchg
xor
movb
and
dec
movsl
jns
mov
les
jecxz
xor
mov
pop
fcmovbe
mov
imul
data16
or
loopne
mov
inc
orl
sarl
jp
jle
scas
fwait
pop
das
dec
mov
mov
scas
mov
popf
jmp
repnz
das
mov
test
jmp
imul
hlt
gs
dec
rorl
sbb
shlb
pop
cmp
pop
cmp
outsb
rorb
lock
jnp
sahf
insb
aad
repz
sti
sbb
insb
mov
mov
aam
movsb
add
pushw
mov
fucomp
rcl
pop
shlb
and
cmp
sbb
lock
mov
lea
and
inc
outsb
add
sub
fnstenv
dec
rcl
jnp
negl
fldt
loopne
and
and
jno
cmp
xor
fisttpl
mov
loope
push
adc
stc
and
out
out
pop
repnz
pop
pop
out
sahf
jl
lcall
push
adc
imul
int
and
out
push
movsl
mov
mov
rclb
mov
enter
std
xchg
ret
jns
dec
out
sahf
jecxz
adc
cmp
inc
das
mov
pop
mov
add
or
das
cmc
adc
mov
jge
outsl
inc
fisubl
mov
xchg
mov
fdivl
add
out
js
out
ficomps
mov
add
push
push
es
push
or
int
dec
ret
ret
aad
hlt
and
or
jp
pop
rclb
call
cmpsl
scas
rcll
mov
int3
pop
mov
mov
cli
int
xchg
adc
loopne
pop
dec
and
cmp
lods
or
mov
jl
pop
imul
das
dec
xchg
sbb
loope
test
mov
adc
pop
jne
push
and
jo
push
or
sub
mov
sahf
inc
into
scas
pop
shll
repz
popa
ljmp
frstor
in
xchg
push
adc
jo
jb
lret
sub
icebp
mov
aam
mov
push
sub
or
call
aam
sbb
lea
int3
inc
repz
ss
xor
ds
sbb
and
pop
push
loopnew
pop
and
pop
inc
in
orl
push
ljmp
sub
cld
loop
dec
cmp
xor
mov
loopne
iret
movsl
subb
or
jne
jns
repnz
lock
xorl
mov
sti
fwait
jg
or
or
mov
dec
mov
push
cmp
call
notb
dec
adc
push
xor
push
pop
jmp
and
imul
movsb
aas
es
xchg
scas
test
scas
mov
push
add
sub
mov
add
inc
add
mov
fs
rcll
addr16
imul
xchg
imul
mov
mov
mov
mov
inc
mov
movsb
sar
push
iret
dec
idivl
loopne
jno
pop
add
ret
out
test
cmc
lret
scas
xlat
sub
mov
lods
loope
jge
je
movsl
jb
js
inc
loop
sti
inc
push
mov
pop
scas
je
push
icebp
sbb
push
xor
pop
and
push
dec
jle
movl
pop
adcb
test
ja
sbb
shlb
sub
iret
adc
jg
push
icebp
or
xchg
add
push
in
fdivl
xor
jno
jge
dec
scas
fdivl
out
or
stos
inc
std
or
sbb
pushf
ja
pop
pushf
call
lret
push
fadd
pop
xchg
push
pop
cmc
dec
xchg
popf
xor
ret
sti
inc
ret
addr16
lcall
dec
pusha
ja
insl
ret
ret
hlt
mov
cmp
mov
pop
inc
or
lds
negb
jnp
add
out
xchg
and
mov
mov
lods
daa
cli
jmp
popf
in
call
pop
das
xchg
sub
aaa
mov
sahf
cmc
cwtl
or
xchg
xor
orl
imul
lret
and
test
sub
inc
adc
xchg
xor
xlat
loop
ds
nop
pop
repz
sub
dec
js
cmp
andl
add
loop
sti
outsl
dec
or
test
and
mov
imul
mov
fstpt
pop
stc
dec
aas
xchg
push
repnz
add
out
mov
mov
inc
xchg
cmp
dec
push
push
xchg
pop
mov
xor
clc
dec
fidivl
aam
jle
outsl
dec
push
inc
and
sti
inc
jmp
ss
out
cmpsl
dec
bound
mov
inc
loopne
cli
lods
inc
lock
fwait
cwtl
push
xor
les
jmp
insl
adc
inc
dec
xchg
sub
and
lods
sub
subl
adc
mov
dec
cmp
js
sub
imul
lock
push
lret
int
js
in
or
sub
fadds
xor
add
imul
push
mov
in
push
mov
mov
jecxz
adc
cld
pushf
mov
insl
sub
mov
sbb
inc
cs
or
sub
mov
dec
dec
or
repz
and
call
push
sbb
fldl
shrl
test
mov
dec
xchg
xor
iret
xorb
mov
add
sub
loop
loope
stos
sbb
jnp
pop
pop
push
leave
adc
imul
dec
adc
adc
push
nop
daa
inc
aas
pop
fcomp
push
jmp
xor
inc
fxch
adc
scas
inc
lcall
test
jge
cwtl
in
das
test
js
jl
push
lret
or
popa
mov
mov
test
je
ret
xor
ss
lret
xor
ret
adc
pusha
mov
push
leave
jg
enter
push
sub
add
inc
mov
jg
movsl
xchg
loopne
js
jmp
imulb
mov
pop
leave
test
jmp
repz
jnp
movl
and
out
ja
icebp
push
pop
loope
pop
sbb
mov
pop
scas
jo
pop
jae
ds
sub
ljmp
test
dec
mov
cltd
std
js
push
xor
dec
mov
cmc
adc
dec
push
js
test
cmpsb
jb
fdivrl
sub
int3
lret
adc
xchg
outsb
or
xlat
and
adc
lods
add
in
mov
addr16
cli
pop
xchg
lds
mov
or
out
push
rcr
lret
jb
or
lods
out
fisttps
push
inc
cmp
xchg
rclb
xor
dec
call
sub
lea
xchg
in
dec
jnp
push
mov
aam
or
xor
add
cmp
or
ss
jne
mov
outsb
jnp
mov
adc
xor
scas
mov
push
lcall
or
xor
jnp
jns
cmp
enter
sbb
faddl
mov
add
lahf
push
leave
out
push
push
in
and
ret
pop
and
cmpps
jne
pop
mov
aaa
in
jae
mov
mov
fwait
popf
pop
cmp
xchg
pop
out
arpl
popf
jns
mov
sahf
dec
push
cmpsl
xor
dec
mov
xchg
adc
cs
loop
adc
bound
and
hlt
mov
popa
jl
pop
mov
push
lret
mov
notb
negl
cmp
sbb
adc
pop
outsb
shrb
xchg
sahf
lods
icebp
xor
cwtl
xchg
pop
popf
xchg
movsl
mov
mov
addr16
pop
ror
popf
mov
cli
arpl
mov
ret
jbe
xor
cmp
clc
push
add
call
push
and
mov
out
dec
inc
add
jnp
jbe
pushf
pushf
jne
mov
xchg
sub
rorb
jge
jp
bound
jge
iret
xor
fbstp
mov
jg
imul
add
popa
cmpsl
inc
push
and
sub
sti
cmp
sahf
subl
shlb
inc
sbb
pop
and
pushf
or
js
jb
mov
pop
cmp
jg
xchg
fwait
cmc
dec
inc
les
xlat
pop
das
sbb
test
xor
xor
push
rclb
test
cmpsl
lods
adc
xchg
lea
push
add
fstpl
aam
clc
shl
jmp
push
fadds
int
stc
xchg
jbe
jecxz
push
daa
add
scas
mov
adc
scas
mov
gs
push
sbb
fucomp
dec
sub
stos
sti
adc
je
and
adc
stos
adc
rol
push
inc
stos
dec
add
adc
rcr
xor
ljmp
lcall
outsl
pusha
jnp
mov
inc
test
out
jge
jmp
push
add
inc
mov
fcoms
pop
xor
nop
xor
cli
test
aaa
mov
mov
and
mov
test
call
xor
jb
cwtl
mov
outsl
scas
lahf
push
pop
add
sub
sahf
je
adc
lret
ljmp
push
fnstcw
or
fcomps
mov
pop
cmp
jno
sbb
push
inc
xor
inc
fadd
xlat
cmc
jge
stc
stos
stc
mov
bswap
pop
push
popf
mov
shrl
and
fnsave
test
shll
pop
adc
fwait
sbb
jmp
cmpsl
imul
jnp
out
sub
aaa
mov
xchg
mov
jb
dec
out
aam
mov
inc
pop
or
scas
dec
xor
test
sbb
push
shrb
mov
cltd
stos
dec
imul
cmp
out
jno
negb
jbe
pop
sub
pop
or
fsubrp
xor
fidivl
outsb
add
add
fdivl
rcrb
mov
popf
fstpt
sbb
push
mov
add
cld
adcl
mov
lods
mov
xor
mov
lods
and
loope
imull
jns
mov
pop
mov
aad
arpl
dec
jg
sub
pop
jb
jae
movb
lea
fldl
sub
pop
pop
pop
rolb
ret
iret
mov
icebp
and
dec
push
adc
cmp
out
cmp
lds
test
sbb
dec
insb
fwait
push
adc
lods
pop
faddp
adc
xchg
out
xchg
inc
mov
ss
fdivrl
in
shrb
imul
jbe
ss
jecxz
pushf
insb
scas
in
push
mov
sar
jp
outsb
loop
lahf
sub
xchg
add
fwait
aaa
in
div
fcompl
sbb
push
jmp
popf
out
cmc
popf
cmpsl
add
stos
push
dec
and
fnsave
leave
mov
cmovno
pop
int
insl
daa
scas
push
xor
lcall
into
sub
dec
and
or
dec
add
push
mov
fistl
push
mov
out
aaa
mov
ss
push
push
test
in
stos
loope
or
rol
xchg
cmp
rcrl
sbb
fadd
sbb
and
popa
test
bound
mov
and
adc
pushf
jecxz
call
arpl
or
pop
lret
inc
loopew
xchg
xchg
psubq
adc
and
fsts
pop
jmp
pop
cmp
pop
cld
ficoms
repnz
dec
in
movsb
shl
mov
lcall
cmp
clc
pop
push
jge
pusha
cmpsb
dec
jbe
int3
push
popf
jle
out
movsb
aaa
loope
push
lea
mov
pop
negl
inc
lret
imul
movsl
cmpb
sbb
stos
inc
or
cs
pop
ja
xor
mov
push
push
or
xchg
pop
dec
scas
dec
lcall
loope
jg
mov
push
in
fsubr
ja
jmp
gs
stos
adc
or
lret
pop
call
cmp
aaa
sub
cli
inc
fldt
outsl
adc
pop
into
and
insl
addr16
js
jnp
or
mov
imul
es
call
pop
out
sbb
jno
mov
jne
es
ja
inc
rolb
mov
push
test
outsb
mov
and
ds
out
test
loopne
fldenv
inc
jp
outsb
jmp
mov
xorb
xchg
les
lods
loope
int
mov
cmp
adc
xchg
out
or
fisubrs
leave
fmul
push
xor
pushf
push
mov
loope
les
lods
sub
lods
push
enter
or
out
mov
dec
iret
jnp
xchg
push
jne
cmp
leave
icebp
movsl
inc
jb
dec
xchg
je
mov
fcom
je
xchg
push
dec
rcl
inc
pop
and
xchg
push
addr16
vpaddq
scas
ljmp
mov
rorl
dec
lea
mov
xchg
pxor
jns
pop
jle
cli
out
insl
rol
adc
cmc
dec
inc
and
adc
push
mov
push
or
aam
ret
les
jb
fsubl
pop
test
and
mov
jae
test
push
cmc
mov
ljmp
and
adc
or
mov
rolb
mov
movsl
pusha
notl
xlat
push
repnz
divb
jecxz
adc
pusha
jne
cmpb
xchg
out
add
lret
call
mov
inc
aam
rcrl
repnz
mov
test
sub
test
xor
lods
ret
cld
inc
aam
in
adc
shll
daa
jne
cmc
test
and
mov
dec
push
push
mov
jne
sbbb
in
fimull
add
testb
mov
data16
sti
xchg
loop
lock
xor
and
sarb
inc
int3
arpl
cmp
icebp
mov
cs
inc
push
lret
push
sub
ljmp
pop
fadds
js
or
cld
mov
jns
or
inc
fcmove
pusha
or
rclb
adc
clc
sub
test
xor
mov
add
orb
xor
fiadds
lock
jmp
sub
and
push
adc
jg
cwtl
mov
mov
cld
sub
mov
cmp
sub
pop
testb
xchg
xor
test
lahf
insb
mov
es
lods
push
test
test
mov
xor
sbb
dec
pop
xor
mov
add
ret
inc
jmp
push
xchg
loopne
scas
sub
cmc
ss
mov
fsubrs
les
movsb
pop
pop
lea
push
push
outsb
fs
fs
push
and
pop
or
ljmp
dec
cmp
scas
add
push
pop
mov
mov
lea
add
jle
adc
aam
rorl
mov
mov
mov
nop
fwait
cmp
xchg
cmp
stc
dec
jae
fldenv
mov
xor
imul
loop
push
cli
test
sbb
cs
add
lods
push
ret
mov
ret
pop
xor
pop
repnz
arpl
sub
jmp
testl
shl
lods
jmp
jle
icebp
mov
adc
nop
bound
gs
clc
xor
ljmp
jge
push
lds
cmp
subb
sub
dec
push
fs
test
jnp
shl
sub
sahf
leave
cmp
pushf
mov
xchg
int
pop
mov
sbb
cmp
daa
cli
sub
out
addr16
sub
mov
imul
mov
decb
jb
enter
push
mov
ret
dec
ljmp
dec
insl
and
push
adc
pop
pop
and
popa
push
subb
call
adc
fldl
dec
inc
fcomi
and
ficomps
fnstenv
and
lds
dec
je
out
add
ss
fsubrl
add
xchg
mov
sub
mov
mov
inc
cwtl
add
xchg
sub
dec
mov
sbb
pop
loopne
sub
push
sub
clc
rcrb
fsubrl
addr16
mov
cmp
cmp
or
in
push
fnstenv
dec
or
stos
mov
fidivrs
pop
push
add
push
inc
pop
mov
cwtl
mov
push
out
test
cltd
pop
fistpl
dec
cmp
pushf
das
stos
mov
xchg
out
inc
sub
in
add
int3
fadds
ds
gs
aas
rcrl
pop
scas
mov
testb
or
xchg
mov
leave
xlat
fs
pop
xchg
cltd
sbb
call
int3
pushf
test
mov
mov
xor
xchg
mov
mov
aad
inc
repnz
push
movsl
push
clc
adcl
or
dec
fs
jmp
pop
sub
add
sub
fcmovb
rcrl
cs
dec
into
ficomps
movsb
dec
jno
pusha
negl
dec
jg
mov
push
push
push
call
repz
sub
decb
xchg
inc
icebp
fisubrl
sbb
push
or
cmc
xlat
dec
and
or
jne
inc
inc
xchg
and
in
dec
test
lds
aaa
fidivrl
or
jnp
or
fdivrl
jecxz
data16
mov
fs
mov
mov
bound
adc
out
mov
or
and
sub
xchg
jg
sub
shll
rol
mov
ret
rolb
add
mov
rcrb
jge
adc
mov
or
outsl
sub
jo
sahf
xchg
ret
jmp
std
je
mov
aam
mov
dec
mov
mov
jmp
adc
xor
aaa
push
inc
xchg
fucomi
enter
repnz
jmp
inc
mov
inc
cld
mov
in
mov
mov
fcomps
fcmovbe
lock
mov
xchg
xchg
jge
and
xor
mov
cmpsb
imul
mov
loopne
add
clc
das
icebp
sub
mov
jne
sbb
jno
sbb
xchg
inc
mov
pop
hlt
aas
inc
lahf
jb
push
and
jne
ds
in
sar
inc
paddd
mov
mov
pop
and
add
cs
mov
inc
and
in
roll
rcll
lds
mov
rclb
pop
jmp
or
mov
dec
adc
loop
mov
or
nop
mov
enter
push
outsb
je
inc
xchg
imul
cmp
push
arpl
jecxz
pop
sbb
rorb
jo
lock
and
cld
fnsave
push
test
add
lea
mov
mov
sub
lret
mov
shr
cltd
ds
and
adc
jmp
push
dec
stos
push
pop
lods
mov
dec
push
sbb
lds
adc
sbb
shrl
ret
pop
jnp
iret
mov
je
ljmp
pushf
dec
and
fnsave
and
movsb
cli
or
idivl
xchg
adcb
sahf
mov
call
pop
repz
mov
jecxz
imul
leave
call
loopne
xchg
push
or
gs
or
ss
sbb
mov
sub
xor
xor
enter
xchg
popf
cmp
lods
push
add
mulb
out
dec
pop
pushf
insl
test
jns
cs
in
rol
ficompl
xchg
push
aam
lock
cmp
cmpsl
sbb
push
pop
jnp
mov
imul
xchg
js
scas
aam
das
pop
jno
out
nop
dec
jbe
out
dec
add
lock
or
sbb
push
jbe
daa
rclb
xchg
xor
mov
cmpsl
cmp
and
in
insl
nop
addr16
or
mov
test
add
fs
pop
jbe
cltd
inc
adc
mov
lretw
lods
loopne
test
lahf
add
stc
ss
daa
mov
mov
rcrl
les
mov
push
xlat
test
xchg
push
push
addr16
inc
and
dec
push
and
push
xor
cmp
test
push
repz
or
ds
adc
popa
dec
mov
hlt
shrb
adc
cmp
mov
pop
adc
push
in
test
add
xor
sub
cmc
xchg
mov
pusha
dec
iret
mov
inc
jmp
cld
insb
jmp
lahf
inc
or
out
adc
mov
cmp
aad
insb
mov
in
pop
push
movl
jmp
lret
sub
pop
cld
add
ss
mov
sub
push
mov
and
ret
lea
lock
and
add
cld
stos
loop
pop
dec
test
fdivrl
jecxz
push
jne
enter
repz
hlt
scas
inc
mov
fcmove
nop
xchg
stc
or
ret
ja
pop
dec
aam
dec
cmpsb
leave
lods
sbb
xchg
arpl
cltd
pop
jmp
xchg
add
push
inc
fnstenvs
out
movsl
repnz
jmp
rcl
loop
inc
sarb
push
out
out
lahf
divl
pushf
ret
les
mov
add
mov
mov
mov
sbb
js
pushf
scas
jne
lods
mov
hlt
sbb
mov
push
push
inc
sbb
mov
lea
repnz
cld
sbb
dec
xchg
in
dec
cmp
fsubrs
and
lcall
jg
mov
ja
or
jne
sti
and
jbe
mov
pop
xchg
inc
jmp
dec
dec
cmp
dec
out
mov
push
mov
jae
ffreep
or
imull
push
adc
or
mov
out
ret
mov
out
push
rcrl
sub
adc
fucomip
mov
fadd
xchg
sub
imul
jno
mov
fistpl
test
mov
adc
pop
add
cmpsl
push
jecxz
les
fstpt
push
add
lods
pop
orl
xchg
and
loopne
push
sbb
in
inc
loope
nop
cmpsb
cmp
stos
ret
mov
jl
mov
xchg
pop
cwtl
loopne
and
xchg
cli
lock
in
test
pop
xor
mov
das
addr16
pop
cmpsl
ret
call
or
xchg
arpl
js
aaa
loop
xchg
jae
fidivrl
lcall
and
mov
inc
dec
mov
js
test
inc
push
dec
dec
jge
add
push
lock
push
test
leave
push
fisubrs
sub
test
scas
ret
xor
sahf
or
jle
loopne
jp
stos
out
iret
adc
call
add
arpl
sub
fmul
stos
jmp
push
mov
add
fwait
cmpsl
push
imul
fs
leave
addr16
push
xchg
cld
xor
mov
sub
push
jns
jb
into
out
jbe
cmp
je
aam
filds
shlb
insb
notl
or
fimull
imul
mov
fdivl
sbb
stos
add
es
sbb
push
inc
testl
je
mov
push
push
sub
cltd
push
inc
cmp
in
cmpsl
pop
repz
mov
stos
movl
sbb
jmp
frstor
mov
cld
data16
xor
pop
jp
addr16
insl
das
addr16
int3
test
mov
sub
scas
inc
or
dec
stos
pop
fsubl
xor
xchg
in
xchg
scas
or
xchg
insb
cs
jnp
xchg
insb
sub
lea
jae
mov
add
cmp
sbb
mov
repz
leave
sbb
push
imul
push
xor
enter
pop
sbb
sbb
fst
jp
aad
mov
imul
pop
insl
jge
add
push
push
insb
mov
mov
imul
pushf
sub
pop
outsb
mov
or
in
xchg
shrb
lret
loopne
fs
sbb
cltd
ret
clc
cmp
call
rcrb
push
sbb
xchg
mov
fdivrp
xchg
xchg
loop
adc
dec
popf
add
sbb
or
bound
sbb
popa
mov
xor
aas
dec
push
xchg
lret
xor
mov
ret
cmp
adc
jae
daa
sub
leave
mov
lock
stos
jge
or
xlat
add
inc
mov
pop
pop
ret
inc
daa
ret
aad
pop
dec
and
mov
rol
aas
and
cmc
dec
fidivl
pop
fptan
inc
rcll
sbbl
mov
add
inc
xchg
mov
inc
add
pop
push
xor
fidivl
dec
fs
jle
xchg
pop
or
push
cwtl
int3
dec
and
mov
inc
jg
jmp
add
push
push
je
shrl
pop
out
add
adc
and
jge
mov
sbb
jg
and
jnp
idivl
pusha
inc
inc
ds
stc
push
xor
lret
mov
aaa
aaa
ss
mull
mov
cld
jne
pop
sub
push
cld
popw
stos
jo
loopne
ss
daa
add
fnstcw
lods
sub
fldt
or
or
inc
inc
sub
jmp
adc
jo
mov
int3
mov
xlat
jmp
push
xchg
ss
in
inc
dec
and
dec
push
sub
jnp
jle
mov
sbb
mov
lods
leave
sub
cli
lret
mov
les
dec
dec
push
into
mov
sbb
cli
data16
bound
popa
iret
test
clc
inc
fwait
bound
push
jp
sub
insl
xchg
adc
add
lea
mov
or
pop
and
rcrl
inc
xlat
jg
xor
and
inc
pop
mov
xchg
je
rcrb
loop
fsubrl
sbb
pop
inc
filds
aaa
popf
jle
outsl
cmp
imul
push
and
mov
lret
cmp
mov
loop
xchg
adc
xlat
cltd
popf
jo
inc
ds
shl
popa
ldmxcsr
sub
mov
subb
nop
mov
xlat
dec
fldenv
mov
or
or
and
scas
adc
jmp
push
insb
inc
push
xchg
push
ret
xor
imul
xlat
nop
pop
cmp
sbb
adc
mov
mov
out
inc
mov
xor
rcr
stos
mov
aas
push
inc
sbb
psubsw
inc
sbb
push
inc
pop
shrb
pop
ss
nop
leave
in
dec
je
daa
xchg
mov
mov
push
sbbb
and
cmpsl
mov
lret
sbb
sbb
add
pop
xor
lods
pop
mov
fldt
jbe
inc
mov
dec
shrl
cmc
stos
add
es
jle
jns
js
test
notb
xor
dec
rolb
pop
mov
xor
mov
jle
jecxz
xor
pop
lods
jae
aam
notl
cmp
loope
icebp
push
cmc
test
push
stos
pop
xor
das
xor
xlat
cmc
bound
add
xchg
mov
mov
mov
push
mov
jb
inc
and
sbb
add
fidivl
mov
add
lahf
mov
dec
mov
in
sub
dec
inc
xchg
inc
iret
sahf
shl
cld
mov
cmp
xchg
pop
cs
cmpsl
cs
jb
sbb
xchg
jnp
sub
nop
add
inc
mov
mulb
jp
notb
fdivrs
sti
shlb
lret
filds
js
sahf
fstps
divl
jg
out
scas
jns
push
or
sbb
pop
sbb
inc
in
testl
loopne
adc
adc
pop
mov
mov
shrl
stc
fs
aas
fcoml
ds
jae
cmc
or
aam
dec
insb
push
dec
cmp
add
shrl
inc
shr
jne
cmp
mov
ret
ja
aas
jmp
cs
bound
imul
popa
push
gs
adc
arpl
std
lret
clc
sahf
rol
test
cmpb
inc
popa
push
adc
jae
dec
scas
div
mov
cmpsb
cmp
jle
pop
mov
lahf
imul
sbb
daa
inc
sahf
jp
or
cmpsb
xorl
loopne
xchg
test
mov
fcom
and
or
aaa
xlat
sti
hlt
les
jmp
mov
mov
subb
mov
xchg
sub
or
fwait
out
fs
fs
daa
enter
jbe
xchg
out
add
mov
mulb
js
pop
aam
dec
scas
aad
mov
test
mov
pop
sti
bound
rcrl
sti
and
cli
push
sbb
fsubrs
mov
jmp
leave
fucomi
shll
or
jne
fisttps
xor
jbe
lcall
xchg
xor
loopne
lret
cmp
cmp
mov
add
xor
mov
push
dec
call
imul
bound
ds
gs
fdivl
fildl
adc
nopl
sub
xchg
arpl
jo
xlat
jl
cmp
sub
jne
fisubs
jmp
lods
ja
out
out
inc
jnp
add
lock
add
movl
mov
mov
fmull
dec
sub
mov
in
xor
cmp
addr16
cmpsb
jl
xlat
jne
push
push
jge
push
jg
xchg
test
push
mov
shl
outsb
mov
xchg
stos
inc
adc
div
shll
dec
mov
xchg
icebp
int
ds
cltd
mov
pop
mov
out
cli
adc
jmp
in
jg
dec
shlb
test
jge
fidivrl
or
imul
test
sub
xchg
aam
dec
aam
adc
aam
fdiv
pushf
fisubrl
mov
iret
add
push
sub
and
icebp
out
test
pop
hlt
xor
push
jb
arpl
mov
add
leave
mov
inc
cs
stos
pop
aad
int
cld
pop
mov
push
in
inc
test
and
shrl
maxps
mov
movsl
movsl
icebp
mov
rolb
sbb
mov
lods
sub
ret
loope
outsb
xchg
push
ja
cmpsl
push
sub
movlps
and
add
ja
sti
mull
dec
dec
cmp
xchg
fs
loopne
je
loope
push
test
lods
mov
adc
pop
push
addb
repz
pop
push
push
sbb
pop
mov
pop
lahf
xor
iret
fadds
adc
into
xor
push
xchg
push
outsb
xor
mov
repnz
nop
dec
imul
push
outsb
aaa
push
add
dec
dec
cmpsl
inc
popf
pop
cld
int3
shrb
push
mov
cmc
inc
dec
jl
lods
xor
cmp
push
xchg
mov
xchg
js
repnz
divb
inc
lds
push
insb
test
xor
push
mov
hlt
add
fcmovu
addl
js
and
and
push
rcrl
add
gs
fdivrl
in
arpl
push
xchg
mov
test
int
sub
pop
ljmp
cmc
pop
adc
cmp
decl
aaa
pop
jb
int
jne
jns
and
insl
int3
pop
cmpsl
js
add
sbb
jae
sub
jg
pop
add
in
mov
fimull
push
inc
and
inc
sti
or
inc
ficoml
lock
sub
pop
and
arpl
sbb
mov
out
mov
fbld
cmp
out
out
das
add
cli
dec
and
inc
dec
aas
test
push
lods
test
mov
iret
jle
js
push
jne
add
shll
cmpsl
out
std
outsl
push
outsb
iret
or
inc
mov
mov
jbe
cli
cmp
xlat
and
or
lret
or
cmc
mov
sbb
mov
in
enter
nop
leave
push
cmc
push
loop
sub
lods
pop
cltd
jno
add
ds
test
inc
andl
push
add
sbb
aaa
fnstcw
xchg
das
jp
out
popf
jecxz
inc
out
adc
mov
or
fstpl
cmp
pop
repz
jno
jp
xchg
xchg
sub
sbb
ret
pop
jnp
nop
inc
pop
mov
xor
adc
mov
lock
shr
lahf
inc
imul
jg
jp
jge
xor
push
mov
push
or
fisubrl
mov
ljmp
stos
and
js
xor
pop
mov
mov
jmp
or
insb
js
cwtl
das
imul
mov
orl
or
fsubp
mov
divb
xchg
loope
movsl
mov
aad
pop
outsl
sub
imul
sub
cmc
xchg
out
jno
cmp
leave
lcall
adcb
pop
lods
dec
aad
loope
daa
cmpsl
lds
mov
or
mov
xor
jmp
popf
cmp
test
mov
pop
gs
aam
mov
imul
fnstsw
pushf
fwait
push
inc
dec
mov
insl
lock
push
sbb
aaa
aad
or
adc
xchg
xor
mov
push
popf
out
xchg
jl,pt
and
movsb
repnz
fdivp
cmp
call
jp
mov
push
mov
js
inc
rolb
or
jg
jmp
adc
mov
data16
push
shl
dec
int
aas
lahf
mov
dec
loope
pop
push
in
xchg
add
lods
sahf
jne
cltd
push
dec
dec
pop
fcmovnu
mov
cmp
setle
clc
fidivs
cltd
sub
push
mov
rol
cwtl
jle
andl
lret
cmp
lahf
or
adc
mov
fwait
jb
pop
shl
jne
pusha
test
inc
imul
test
and
mov
jmp
dec
push
leave
xchg
aad
xlat
icebp
jno
adc
lret
adc
imul
cmc
sbb
imul
inc
into
pop
jne
mov
ficoml
addb
testb
es
cmp
clc
shr
aaa
pushf
repnz
sbb
pop
scas
cmp
cld
es
ljmp
jecxz
sbb
dec
push
je
cmp
jge
mov
or
mov
jb
mov
xchg
xor
mov
sbb
lds
das
push
sub
das
jno
sbb
lds
cld
imul
stc
cmp
mov
push
mov
stos
mov
cs
inc
psubusb
mov
sbb
xchg
pop
pop
clc
bound
outsb
and
dec
sub
jbe
push
es
shlb
jbe
mov
push
pushf
adc
xchg
inc
cmp
push
mov
mov
xor
adc
aam
xchg
inc
out
out
pop
ljmp
pusha
or
aam
cwtl
aam
push
aam
jecxz
fsubl
xchg
dec
std
add
dec
pusha
aad
cmpsb
push
push
ljmp
jno
push
mov
daa
fnstcw
in
repz
shlb
mov
ret
add
pop
les
cmp
int
hlt
incb
push
xlat
lret
xchg
jp
dec
popa
push
movsb
xchg
outsb
fsub
push
clc
jno
sub
fsubl
fwait
dec
jmp
aas
imul
pop
loope
xor
mov
aad
addb
jbe
sub
loope
cld
xor
faddl
cli
jae
inc
push
sbb
loopne
adc
inc
into
in
jbe
ljmp
pop
mov
sub
jae
pop
aas
pop
notb
dec
sbb
pushf
pop
mov
sbb
pushf
jb
xchg
add
faddl
mov
std
scas
js
dec
jle
jle
out
std
loop
arpl
inc
aaa
aas
stos
out
pop
mov
pop
xor
clc
adc
repz
pushf
jbe
int
jnp
pop
out
popa
sahf
add
into
add
adc
xchg
xor
je
inc
inc
aaa
testl
and
push
leave
cmpsl
out
int
nop
and
pusha
cmp
mov
cli
aam
xchg
loopne
cmpsl
jecxz
mov
insl
and
jo
scas
pushfw
xchg
inc
hlt
jecxz
adc
popl
rol
sub
xchg
dec
pop
enter
mov
dec
xlat
cmp
inc
mov
movsb
push
pushf
push
into
scas
push
cmpsb
xor
xor
in
scas
jnp
outsb
lods
dec
fiaddl
inc
cmc
mov
fistpll
and
mov
imul
divl
nop
mov
or
add
mov
push
aad
ja
and
mov
add
mov
sbbl
shlb
sbbl
push
movsl
xchg
pop
jnp
mov
inc
test
call
out
xor
call
xor
sbb
pusha
je
jo
or
test
inc
xlat
xlat
cmc
in
rclb
lahf
push
mov
ret
xor
push
jo
and
daa
and
xchg
cld
movsb
mov
lods
mov
mov
jmp
and
adc
inc
hlt
sub
orb
sbbl
push
movsb
push
incl
adc
cmc
or
es
fcomps
cld
in
mov
clc
fwait
out
gs
add
push
cmovae
aas
jns
shll
add
shl
in
mov
stos
xor
cmc
lds
adc
out
aas
bound
jae
cmp
jl
movsb
cmp
sub
or
ret
es
or
pushf
test
jns
and
cltd
add
into
arpl
dec
pop
mov
pusha
sbb
sbb
mov
cmpsl
addr16
push
inc
bound
fs
inc
dec
add
sbb
shl
sub
icebp
inc
lods
ja
jmp
stc
adc
rcl
jl
popa
xor
mov
aas
pop
bound
cs
jae
cmp
dec
imulb
movsb
out
inc
dec
jl
ret
xchg
ljmp
rclb
xchg
push
int
push
aas
cmc
xor
pop
push
inc
push
movsb
sti
xor
xor
ja
outsl
int
adc
dec
popa
scas
mov
mov
int
es
add
and
adc
in
push
sub
dec
pop
sub
or
add
addr16
mov
jne
add
imul
jg
cli
sbb
aaa
xchg
jg
inc
push
jb
or
hlt
push
movsl
ss
cmp
fnstsw
inc
stos
int
pop
fists
push
std
sub
hlt
jnp
add
push
sub
insl
xlat
mov
jno
int3
lret
pop
je
push
shr
ss
test
inc
jbe
out
icebp
sbb
cld
and
cld
cwtl
out
stos
and
and
jge
or
popf
jnp
xchg
xor
add
loope
add
lcall
les
sbb
lahf
shrb
cmp
hlt
mov
cmp
dec
cmp
cmc
movsb
mull
inc
jp
shll
sub
dec
dec
adc
pop
adc
or
shll
testl
adc
out
aam
inc
ret
hlt
repnz
mov
test
outsl
pop
ds
insl
sbb
push
dec
dec
fisubs
loop
dec
dec
fidivs
call
ljmp
pushf
lret
dec
mov
xchg
addl
out
inc
inc
mov
mov
xor
pop
push
loop
mov
jge
mulb
adc
mov
xchg
sub
adc
int
push
fs
sbb
pop
inc
data16
or
or
out
leave
jecxz
test
stos
xchg
inc
xchg
stos
incl
adc
push
loopne
add
sbb
cmp
lock
inc
pusha
xchg
pop
sbb
movsl
jmp
movsb
negl
mov
imul
pop
sub
xlat
cmpsb
jno
pop
cs
scas
mov
aas
lock
ss
sbb
inc
nop
rcl
jmp
cmpsl
xchg
mov
dec
jns
cmpsb
loope
negl
cs
sub
jnp
fdivs
pop
ret
jno
aam
sub
dec
pop
cltd
hlt
sarb
add
lods
xchg
out
xchg
inc
out
scas
fisttpl
lret
mov
jns
pop
cmp
jae
and
pop
lods
mov
imul
imul
sub
sub
jp
sbb
ss
mov
mov
pop
and
xchg
mov
loop
out
add
rol
icebp
xchg
inc
aas
fnstsw
rcrb
nop
es
pop
push
inc
cmp
push
ja
cmp
adc
lret
inc
in
int3
lret
mov
sbbl
stos
pop
sub
stos
push
lea
filds
pop
loop
inc
ljmp
xchg
lods
adc
add
push
sbb
dec
insl
jge
jne
rclb
add
scas
das
adc
fsubrl
test
fidivrs
movsl
sbb
loope
imul
scas
adc
test
push
out
xchg
cmp
or
arpl
sub
cmp
enter
sbbb
movsl
pop
lea
jge
pop
popa
sub
mov
mov
nop
xchg
mov
xchg
push
rcll
or
mov
mov
out
cmp
in
or
dec
inc
fidivrs
loope
cmp
jns
or
jo
sbb
sbb
out
sub
out
addb
es
cmp
push
xor
ret
cmpsb
loop
das
jp
dec
icebp
ds
mov
add
cmp
cld
xchg
ret
xor
mov
jns
xor
jae
cs
in
inc
movsb
repnz
out
push
clc
aas
jbe
daa
or
pop
jmp
js
test
aas
mov
bound
mov
cwtl
mov
adc
popf
fucomi
mov
iret
mov
in
push
lods
pmulhw
jp
push
lock
adc
out
fwait
add
stos
cmpsb
and
gs
aas
jl
xchg
xor
int3
daa
icebp
repnz
jo
xor
jp
aas
dec
ljmp
cwtl
ja
adc
test
jge
bound
std
mov
pop
int3
rolb
xor
fwait
in
mov
scas
xchg
lds
xchg
mov
inc
shll
addr16
sbb
iret
outsb
mov
sbb
hlt
mov
fildl
mov
popf
out
dec
or
dec
je
shrb
icebp
jo
icebp
ss
subb
sub
mul
xchg
arpl
push
lret
out
and
sbb
and
jb
movsb
inc
xor
dec
out
mov
jp
push
ljmp
call
jbe
shll
pop
cmp
mov
lahf
inc
shlb
mov
out
test
test
shlb
mov
dec
xor
shll
mov
call
subb
mov
arpl
imulb
sub
lea
es
jecxz
jo
movsl
mov
push
imul
aam
popf
insl
jg
lahf
mov
daa
mov
mov
inc
sub
sti
mov
insl
xchg
jecxz
enter
shr
cltd
mov
les
push
xchg
fucompp
pop
mov
addr16
shlb
xchg
jne
dec
push
out
test
out
xchg
sub
imul
push
clc
xchg
shr
enter
cmp
scas
mov
sbb
mov
mov
pop
mov
push
adc
pop
scas
xchg
xchg
adc
iret
lea
xor
push
rcrl
std
jo
icebp
jb
sbb
pop
mov
xchg
push
scas
dec
push
adc
or
shll
out
sub
fbstp
sub
pop
js
mov
popa
loopne
outsb
adc
push
mov
adc
xor
xlat
je
inc
pop
and
jmp
sbbb
shll
sbb
add
pop
mov
push
insb
js
addb
imul
or
outsb
push
mov
into
ret
imul
or
cmp
pop
ds
xor
icebp
cmpsl
fstl
push
cli
adc
fbld
ds
out
ret
adc
inc
push
inc
fiadds
test
test
leave
pop
repnz
cmp
adc
or
ja
fidivs
cwtl
jae
xchg
ljmp
mov
push
xor
popf
popf
call
or
sbb
push
mov
ljmp
stc
sub
jge
sbb
imul
sbb
mov
mov
in
rcrl
push
fadds
fs
scas
sub
cmp
mov
in
mov
paddusw
cs
outsl
pop
cmp
out
int3
xchg
mov
insb
lahf
repnz
jge
mov
sbb
mov
dec
ffreep
dec
fisubs
std
cmp
mov
mov
push
imul
pop
sub
int
jo
sbb
cmp
and
lock
dec
mov
je
out
lock
push
into
push
xlat
cmp
add
mov
aas
push
or
das
or
fcomip
inc
cmp
jb
push
outsb
push
rclb
xor
aaa
outsb
jl
adc
and
push
mov
or
mov
fs
sub
cmp
mov
dec
dec
nop
push
dec
jg
ficompl
std
push
inc
pop
xchg
out
mov
pop
les
aas
add
mov
jo
hlt
iret
stos
fucomp
add
and
mov
or
mov
sub
push
cmpsl
or
insb
js
sbbl
shl
lods
adc
cmp
sbb
cmpl
addb
ja
mov
cmc
lret
push
and
adc
sub
loopew
mov
mov
pushf
pusha
inc
subb
jno
subb
movsl
or
lock
inc
test
loope
sbb
cmp
fildl
loopne
mov
or
insl
ss
mov
ret
add
pop
push
lods
push
loope
aaa
into
pop
adc
and
leave
aam
push
add
into
sbb
fs
popf
lahf
roll
xor
ja
cmp
loopne
cmc
jo
and
xchg
mov
mov
rcll
adc
push
sti
pop
jae
fwait
scas
fwait
pop
lret
xlat
cmp
stos
xchg
mov
andl
mov
pop
add
ja
cmp
and
mov
xchg
or
cmpsb
cmp
mov
les
cmpsl
adc
mov
enter
push
lods
fmull
xchg
imul
mov
sub
aam
xchg
add
ds
mov
adc
lret
mov
xchg
push
xor
nop
bound
mov
jne
xlat
das
mov
repz
cmp
nop
cli
bound
adc
xlat
hlt
into
and
int
push
jbe
movsl
and
test
int3
sbb
jns
mov
pop
cmc
std
xchg
pop
dec
inc
mov
xor
xchg
out
sbb
popa
lret
fsubrl
pop
test
pop
xor
or
jb
lahf
call
cmpsl
push
cmc
sbb
daa
jae
mov
cmc
push
add
mov
add
sub
shl
dec
ds
adc
addr16
fwait
rorb
xor
leave
and
sarl
dec
hlt
sub
js
adc
add
push
and
in
iret
lcall
push
cld
inc
add
and
cmp
and
mov
lea
in
mov
ss
out
pusha
dec
frstor
movsl
in
push
adc
cmpsb
adc
test
lea
mov
ss
jae
add
repnz
rcrl
push
add
int
mov
mov
dec
lcall
cltd
jecxz
xor
sub
jno
mov
dec
inc
es
dec
cmp
in
popa
push
lcall
fs
dec
pop
lcall
jo
sub
lods
mov
int
into
dec
dec
bound
cmp
xchg
jae
pop
or
add
push
jo
fildll
inc
and
add
sbb
sbb
loop
mov
and
test
imul
mov
dec
addr16
enter
sub
ret
mov
pop
cld
lcall
shl
popa
ds
out
cmp
testb
xchg
mov
jle
add
mov
dec
out
or
push
sti
jge
sub
add
cmp
mov
loope
nop
pushf
xchg
dec
loope
test
lods
in
fs
cmp
shll
inc
mov
fists
cli
jl
cmp
jl
jg
xor
sub
inc
pushf
sub
cmpsb
jl
mov
jg
scas
push
inc
aas
inc
pop
adcb
xchg
into
data16
and
mov
and
mov
cmp
popa
daa
cmc
add
imul
idivb
mov
aas
push
sub
loope
xorb
mov
out
fwait
dec
iret
push
push
les
andl
jbe
adc
add
sti
cmp
stos
push
xchg
cmpsb
movb
iret
test
dec
out
std
add
fcoms
xlat
fsubp
cmpsb
andl
sbb
fdivr
push
push
add
aas
clc
lcall
dec
mov
xor
scas
ja
push
mov
mov
sub
push
into
adc
mov
push
jle
mov
negl
pop
mov
test
jae
xchg
add
movsl
in
jecxz
xorl
pop
movsb
stos
int
imul
mov
rcll
ret
sub
repnz
push
out
out
pop
dec
fcos
rorb
ret
gs
push
or
ret
mov
rclb
pop
xchg
imul
mov
fadds
xchg
lret
in
add
pop
inc
popf
dec
jb
xchg
aaa
mov
push
jg
xor
decl
icebp
xor
and
add
fmuls
sbb
inc
xchg
push
jmp
pop
fldcw
andl
cmp
jb
xchg
outsl
dec
in
ja
inc
popf
test
pop
hlt
pushf
cld
sub
adc
popf
imul
xor
mov
sub
aaa
push
and
xchg
pusha
xchg
adc
pop
dec
loop
mov
sbb
sub
insl
xchg
sbb
dec
inc
incb
adc
push
jno
xor
jns
loop
sub
roll
xchg
mov
js
rorb
jmp
mov
fisttpl
push
pusha
arpl
sbb
cld
push
xor
mov
xor
add
cld
test
mov
xor
push
test
jb
jno
in
pop
stc
inc
aas
ret
mov
pop
mov
adc
mov
fbstp
imul
dec
mov
outsb
add
fucom
mov
lahf
add
rcrl
movsb
mov
scas
inc
scas
dec
lret
xlat
inc
adc
cwtl
add
jg
stos
push
repz
lret
dec
push
js
add
and
inc
add
xchg
cmpsb
dec
adc
or
pop
and
jb
cmp
xchg
insb
stos
sub
xchg
movsb
jl
mov
mov
les
arpl
sub
aam
dec
inc
repz
push
dec
in
sbb
aad
repz
add
aad
aad
div
push
add
mov
pop
xchg
mov
jae
and
pusha
subb
push
ja
js
daa
stos
cmp
xchg
imul
mov
jg
fcomps
or
shll
rcll
cltd
imul
adc
jmp
dec
movl
dec
inc
lret
leave
loop
aas
jno
ficoms
pop
pop
and
ljmp
adcl
dec
testb
add
dec
and
mov
rorl
sub
and
inc
push
mov
sahf
stc
or
incb
idiv
test
sahf
ret
aaa
push
outsb
cmpb
jae
in
push
test
or
sahf
adc
cmp
aam
and
mov
imul
movsl
ret
movsl
sub
int
fbstp
lock
into
xlat
int3
std
rolb
sub
add
pop
jnp
aaa
iret
fisttpl
push
sbb
pop
dec
mov
leave
sbb
pop
sub
icebp
mov
outsb
and
push
les
xchg
cmc
repnz
and
dec
dec
sub
mov
mov
mov
fiaddl
pop
and
adc
xor
mov
out
js
or
cmp
adcl
fnstenv
or
lret
pushf
inc
ds
cmp
adc
addr16
insl
shl
mov
mov
mov
dec
dec
lcall
mov
shrl
dec
xchg
mov
and
jbe
mov
lock
sbb
aaa
add
ret
xor
ljmp
cmp
mov
mov
cmp
rcr
pusha
test
stc
xchg
cmpsb
jecxz
pcmpeqw
jecxz
xchg
xchg
leave
pop
test
pushf
fnstcw
xchg
mov
jmp
adc
lock
stos
inc
or
fdivl
dec
out
sbb
fistpll
sub
mov
inc
mov
inc
lret
cmp
loop
mov
mov
sub
arpl
call
sbb
pop
stos
or
aaa
push
push
xor
push
push
int
cmpsl
mov
push
int3
push
outsl
jae
in
xorl
imul
mov
push
into
adc
dec
cwtl
mov
add
dec
mov
fwait
loope
mov
jno
mov
and
mov
hlt
gs
scas
xor
lods
mov
shl
es
push
jl
fcompl
leave
and
dec
pop
jno
dec
jno
mov
cmc
xchg
jle
pop
mov
xor
inc
mov
xor
and
cmp
mov
fdivr
xchg
mov
mov
mov
xchg
xchg
hlt
add
insl
shll
mov
shlb
js
into
sbb
dec
pop
xor
add
xor
xor
xor
fnsave
pop
pop
lock
jbe
sub
sbb
push
and
cmp
repnz
xor
sbb
adc
and
jp
mov
rcl
xor
nop
dec
mull
mov
push
test
ljmp
imul
aas
inc
inc
mov
xor
dec
cmpsl
out
jecxz
fdivp
in
mov
adcl
aas
loopne
test
imul
daa
push
ljmp
jno
outsb
loop
stos
mov
lcall
push
mov
rcrl
ficompl
xchg
pop
add
xchg
pop
mov
pop
jbe
pop
mov
lock
mov
and
cmp
cwtl
lods
and
pop
das
je
ror
xchg
loope
jae
cwtl
inc
fcoms
pop
jge
xchg
sbb
mov
data16
call
sbb
sub
jl
cmp
lret
cmpsb
jl
mov
mov
out
cmc
or
jmp
cld
lcall
in
push
mov
xchg
hlt
movsb
jae
xor
mov
ja
ds
repz
cmpsl
out
push
dec
jmp
jnp
repnz
or
jnp
call
dec
loope
stos
int
test
jecxz
dec
adc
cmp
aam
sahf
cmp
cwtl
adc
in
addr16
fdivrl
ret
inc
das
add
outsl
das
cld
push
ds
xor
jno
push
xchg
pop
daa
mov
fwait
and
jge
ret
mov
fsubp
pop
lahf
outsb
dec
mov
adc
inc
insb
mov
and
xchg
sub
mov
bound
or
popf
mov
icebp
or
cmp
inc
mov
jno
push
lods
mov
xor
rorb
stos
andb
aam
jmp
push
xchg
adc
inc
shrb
jae
call
mov
scas
lock
call
rcrl
and
int3
adc
cmpsl
mov
ret
aad
rcrl
rcll
into
enter
push
stc
inc
or
scas
cmpsl
in
orb
mov
sahf
into
ss
sbb
pushf
jp
into
stos
xchg
sub
ja
les
loope
ficoms
enter
xor
arpl
sub
idivb
daa
mov
les
cmp
ja
fisubl
mov
popa
clc
jb
pop
out
jecxz
cmpsb
fldenv
pop
je
cmc
sbb
mov
bound
insb
jno
and
hlt
sub
sub
xor
push
jle
jb
les
sub
dec
dec
outsl
jb
and
jge
clc
or
add
insl
jg
shl
jp
repz
out
mov
mov
in
mov
setno
test
fistl
push
pop
cmp
fnstsw
add
loop
xchg
shll
sti
dec
in
out
out
dec
mov
add
mov
icebp
adc
mov
imul
pop
xor
xchg
mov
test
or
push
lcall
icebp
bound
fsub
std
inc
push
sbb
daa
pushf
scas
pop
inc
jle
cli
push
test
fstpt
in
aam
je
in
xlat
xor
sbbl
arpl
xchg
jne
leave
add
push
loope
les
xorl
adc
test
sub
mov
lds
lds
dec
jno
push
cld
xchg
xchg
insl
nop
and
lds
pop
scas
das
jmp
mov
xor
mov
xor
jmp
adc
roll
and
adc
lcall
xchg
xor
mov
leave
and
shrl
dec
enter
sub
dec
pop
pop
stos
sbb
icebp
dec
mov
xor
lahf
mov
sbb
adc
inc
js
pop
nop
fistl
popa
inc
cld
or
mov
dec
sub
xor
rclb
sub
repz
and
fcomp
rcll
mov
add
imul
movsb
dec
sub
shl
out
cmpsl
jo
adc
mov
call
mov
sahf
xor
mov
int
test
cltd
and
push
ret
outsl
inc
and
mov
cmc
xchg
mov
dec
pop
cmp
pop
std
mov
cmpsl
xchg
imul
inc
imul
fcoml
outsb
int3
in
xchg
pop
mov
or
pop
dec
mov
les
and
test
push
jae
cmp
xchg
sbb
jbe
stos
cmp
or
dec
js
pop
fisubs
fs
pop
mov
jnp
sub
pop
popf
jbe
mov
rorb
sbb
movsl
xchg
negb
xor
shll
das
xchg
mov
repnz
jbe
mov
mull
cmp
jecxz
pop
fcmovnu
inc
or
scas
rcrb
fnstsw
mov
hlt
dec
and
dec
adc
adc
cmp
cmp
mov
and
add
in
jo
push
and
pop
lahf
iret
fsts
and
data16
rclb
pusha
aaa
iret
inc
xchg
bound
fdivr
aam
jge
xor
and
inc
cmp
daa
dec
shlb
sbb
cmc
dec
sbb
inc
repz
xchg
fstl
pop
popf
out
and
pop
dec
shlb
sub
jl
outsb
xor
mov
je
outsb
push
les
ja
out
repz
inc
clc
or
adc
push
das
cmp
or
popa
subb
test
das
pop
lds
push
enter
lret
pop
add
cltd
rcrb
jmp
push
faddl
xchg
sub
arpl
jnp
cmp
je
adc
or
jo
mov
push
mov
mov
add
adc
xlat
push
mov
sbb
popa
jns
repz
pushf
loop
mov
enter
push
scas
jnp
push
pop
mov
and
mov
inc
fstps
leave
dec
or
pop
push
sub
cmc
mov
push
ret
jmp
or
lret
push
aaa
jge
ja
pop
fidivl
pop
jb
sahf
imul
std
addr16
stc
cmpl
aad
sub
adc
jl
int
inc
icebp
mov
dec
jl
mov
hlt
pop
cmpsb
xlat
repnz
movsb
fdiv
lret
mov
mov
push
push
inc
jb
jns
mov
aaa
sub
imul
sbb
into
push
sbb
lods
push
inc
jecxz
mov
push
mov
xor
mov
mov
or
data16
cmp
std
incl
adc
and
leave
test
lods
out
nop
stos
insl
fdivl
int
out
fwait
aaa
int3
sbb
addr16
inc
pop
sub
clc
insl
jns
and
pop
cli
aas
mov
or
adc
lea
jno
in
xchg
ret
pop
out
xor
out
out
loop
sbb
mov
add
repz
lock
rep
pusha
mov
lds
aaa
pop
push
push
jno
pop
mulb
sbb
mov
aaa
lods
sub
sbb
test
lcall
jns
and
cli
loopne
clc
filds
je
mov
push
adc
sub
sub
aas
das
scas
sub
inc
ret
aad
pop
icebp
es
xchg
inc
js
cmp
mov
adc
cmp
xor
out
ds
popf
xor
dec
aad
repz
int
or
pop
push
jecxz
lods
mov
cltd
or
inc
loope
push
imul
xor
std
push
lock
pop
adc
jnp
cli
pushf
out
sub
pop
cmp
clc
sub
inc
pop
mov
aad
jns
je
repz
xchg
jl
inc
ss
mov
push
std
les
les
cld
test
lds
movsl
jle
jns
pop
pop
mov
xlat
fsubrs
sbbb
inc
pop
lock
and
in
cmpsl
push
push
push
mov
xor
lods
inc
sbb
test
sbb
cli
jg
adc
xchg
sub
daa
jns
mov
mov
cmpsl
mov
fdivrl
and
fdivp
int3
cmp
sbb
jg
cmp
dec
pop
adc
pop
jle
hlt
xchg
or
pusha
pop
icebp
fwait
movsl
icebp
xchg
and
add
mov
shlb
scas
jp
xchg
negb
jmp
out
lods
pop
mov
add
mov
in
icebp
sbb
pop
jo
dec
scas
cmp
into
std
orl
jae
pop
mov
aaa
popf
daa
mov
mov
rcrl
lods
push
fwait
call
dec
and
sbb
test
and
jnp
xor
cltd
mov
cs
xchg
arpl
pop
xor
shrb
mov
rcll
push
cmpsl
cmp
pop
or
xlat
cmp
std
xchg
call
sbb
jle,pn
iret
inc
dec
stos
inc
pushf
cmp
fsts
inc
fprem
jl
imul
pop
in
inc
mov
mov
popl
out
fmulp
pop
or
fildll
rolb
xor
lds
fsubr
inc
pop
aad
mov
arpl
mov
popl
mov
out
fsubr
test
ss
push
rorl
push
pop
jecxz
shrb
adc
jbe
pop
xor
cmp
daa
or
aam
push
movsl
mov
xor
add
jg
cmp
fmulp
pusha
cwtl
pushf
xchg
arpl
jl
jmp
sar
xchg
dec
loop
push
adc
repz
and
add
xor
mov
mov
push
bound
mov
jle
lret
lahf
jbe
sub
mov
mov
sbb
xor
andb
push
adc
pop
call
out
call
mov
out
sbb
mov
in
subl
lock
adc
push
je
addl
aas
sub
stos
lods
mov
mov
sarl
push
repz
push
es
loope
push
iret
pop
jb
jo
or
stos
fwait
es
sub
sub
pop
push
pusha
dec
loop
lret
stc
cmp
hlt
fwait
jnp
ficoml
push
cltd
fiaddl
inc
popa
xor
and
aaa
xor
fwait
push
scas
inc
cmp
ret
sub
jbe
and
dec
push
movsl
dec
mov
push
test
int3
ret
int3
xor
push
jmp
push
mov
cmp
pusha
inc
shlb
scas
push
or
popa
mov
dec
fsubs
cmp
jb
stos
dec
pop
mov
push
push
inc
cli
mov
push
lods
sub
icebp
scas
mov
loopne
flds
pushf
js
sbb
ds
jo
fwait
pop
cs
pusha
stc
movsb
outsl
insl
jl
cmpsb
mov
add
shlb
adc
cmp
push
or
filds
int
lret
dec
mov
cmp
adc
mov
insb
shll
push
mov
lahf
pusha
push
sbb
jnp
jp
mov
cmpsl
ds
int3
push
ss
outsl
lret
sti
into
sub
stos
adc
push
jns
inc
sbb
iret
mov
fdivl
pusha
xor
push
out
pop
pop
adc
jbe
in
aad
sub
add
es
xchg
mov
jmp
cmc
loop
push
mov
sbb
in
lcall
xor
lea
jge
scas
xchg
mov
inc
pop
mov
and
and
std
ljmp
cmovns
add
sbb
aas
lds
outsl
test
mov
scas
jg
repnz
add
stc
repnz
pop
rclb
divl
leave
xor
test
push
mov
call
jno
scas
das
cmp
mov
add
fwait
ret
push
xchg
inc
popf
dec
aaa
jp
out
cmpsb
clc
idivb
mov
insb
add
push
sub
orb
adc
test
add
xlat
call
jmp
rclb
xchg
dec
mov
jne
jbe
pop
add
adcb
subb
add
xchg
je
scas
aaa
lret
xlat
stc
jb
xchg
sub
sbb
fildll
mov
or
cmp
adc
jle
add
xchg
shl
jle
pop
mov
es
and
sbb
and
in
cmp
insl
fisubs
mov
or
dec
icebp
pushf
in
enter
xchg
or
jns
jmp
add
mov
shl
sbb
cmp
xchg
mov
pop
cmp
scas
sub
pop
cmp
cwtl
ss
push
je
nop
insl
jecxz
mov
rolb
add
jbe
fisubs
mov
push
lea
push
js
push
mov
int3
testb
insb
sti
mov
push
mov
loopne
rcrl
sbbb
fisttps
add
and
out
jmp
mov
xchg
pop
mov
adc
mov
ljmp
mov
lock
jnp
lods
fnstenv
add
mov
or
dec
push
aad
inc
in
out
aaa
pop
add
cmp
inc
adc
xchg
sbb
dec
call
in
jb
pushf
pop
cli
xchg
popf
and
sbb
shr
bound
sub
movsb
shll
cmp
mov
aam
sti
xchg
shll
fisubrs
adc
push
test
pop
push
test
lea
xchg
sub
loopne
pop
cmp
jmp
and
loop
dec
xor
pop
test
movsb
pop
xor
pop
xor
stc
loope
jo
inc
xor
xor
lods
loope
sub
ret
outsl
mov
jne
push
dec
jecxz
into
scas
mov
lahf
sbb
dec
mov
call
xchg
or
pop
lock
xchg
in
test
inc
xchg
insb
jbe
cmp
jne
hlt
push
and
push
imul
pop
lock
lahf
jecxz
ja
sti
add
mov
in
filds
adc
mov
frstor
clc
lock
lods
ljmp
repz
sub
cmp
push
mov
ret
fbstp
add
and
push
push
and
push
rcrb
pop
repz
or
dec
loope
sbb
push
xchg
pop
xchg
mov
fdivrl
mov
jge
dec
lods
sbb
addr16
ds
mov
adc
repnz
mov
push
xchg
push
jmp
js
add
jecxz
pop
xchg
cmp
pushf
cmp
xchg
loope
pop
xchg
pop
cmp
loope
cmp
xor
movsb
nop
daa
shlb
pop
out
pop
jne
inc
xor
mov
arpl
leave
out
pusha
sbb
xchg
jnp
xchg
cmp
sub
push
mov
imul
xor
cmp
push
rcll
xor
inc
mov
pop
push
jno
jns
mov
xchg
sarl
gs
pusha
and
mov
jmp
daa
mov
rorb
sub
jnp
push
in
xchg
cmp
push
jl
jg
and
mov
add
repz
mov
sbb
sbb
clc
aaa
or
push
mov
pop
outsb
mov
data16
push
mov
cmp
sahf
outsl
clc
pop
xchg
inc
xchg
add
test
ret
aam
mov
int3
subb
rsm
sbb
dec
rorl
mov
adc
mov
xor
cs
orb
adc
nop
and
testl
adc
loopne
or
imul
mov
cmpsl
push
int
aas
arpl
and
dec
inc
shrl
xchg
fs
hlt
mov
fildl
push
mov
push
mov
sub
lahf
nop
or
mov
push
and
push
pop
jl
mov
aad
cmpsl
cmp
pop
push
aam
jno
mov
daa
cs
xor
in
jne
gs
jnp
fs
and
mov
sub
add
inc
jnp
iret
retw
cwtl
xchg
adc
xchg
cmp
rcl
jmp
ret
pop
int
xchg
sub
call
mov
imul
mov
std
insb
jl
adc
dec
loopne
mov
pop
repz
push
cmp
pop
popf
mov
imul
popf
movsb
pop
out
jmp
xor
mov
insb
ret
lock
mov
jns
push
mov
in
faddp
xchg
adc
andl
inc
pop
jmp
pop
xchg
pushf
mov
lods
hlt
inc
mov
loop
inc
arpl
int
cmp
cmpsl
ds
vxorpd
int3
fidivs
subb
pop
dec
xchg
iret
pop
xlat
daa
cmp
rclb
sub
rcrl
pop
or
in
pop
andb
aas
flds
rcll
push
mov
cld
xchg
push
xchg
dec
fimull
dec
xor
and
lret
addb
sub
and
gs
xchg
xchg
sub
shrl
lcall
pop
cmp
and
mov
pushl
in
not
pop
lods
into
arpl
dec
pop
jmp
int
call
bound
dec
es
mov
cmc
inc
pop
fisubl
sub
cmp
movsl
xor
sbb
sub
cs
fcomps
mov
fdivl
and
lock
test
adc
fidivrs
sbb
into
mov
or
or
cmpsb
ja
incl
push
xchg
iret
leave
xchg
cmc
mov
cpuid
in
mov
xchg
incl
scas
mov
dec
pop
loope
push
sbb
mov
pop
and
and
jge
adc
xor
sub
lcall
addr16
rorb
jnp
popf
sbb
adc
dec
dec
jl
xor
pop
and
add
pop
add
stos
ret
loope
lcall
stos
lea
fdivs
fisubs
sti
outsb
test
adc
iret
lea
mov
popa
add
testl
inc
mov
add
sti
fwait
scas
jmp
dec
sbb
mov
out
pop
addr16
pop
cmp
dec
mov
ret
cwtl
imul
cwtl
pop
add
lods
ljmp
pushf
stc
addr16
mov
repnz
adc
pop
xchg
in
sbb
push
out
push
loope
hlt
repz
and
xchg
adc
pop
xchg
mov
mov
push
int
mov
dec
cltd
xor
mov
sbb
xchg
movsl
push
adc
negl
add
xchg
inc
outsl
loop
pop
gs
icebp
arpl
adcb
sbb
pop
jne
int
in
and
xor
jmp
cmpsl
mov
add
fwait
sub
inc
out
mov
xchg
xchg
mov
insb
enter
jp
xor
shlb
xlat
movups
out
xchg
in
mov
xor
enter
push
mov
aas
pop
out
fucomip
jbe
lds
or
movsl
js
xor
jns
lea
mov
in
mov
xor
push
pop
sub
inc
push
les
enter
fs
lret
xorl
inc
push
adc
mov
mov
sbb
xchg
es
notl
xor
sub
test
xchg
push
lret
lret
fimull
inc
shrl
pop
xchg
idivl
sub
lret
lahf
pop
mov
push
call
adc
sub
mov
dec
in
mov
orb
das
data16
imul
inc
push
flds
addr16
negb
push
push
pop
xchg
popa
mov
rcrl
jno
fidivrl
insl
add
mov
std
push
mov
cmp
xor
sbb
imul
push
pushf
pop
jae
cmp
loop
aas
adc
fidivs
adc
test
adc
out
dec
sbb
and
pop
iret
sub
push
ftst
xor
jmpw
mov
roll
mov
xchg
mov
adc
xchg
ja
jg
inc
dec
fnstenv
xchg
leave
loope
dec
adcb
lret
cmp
inc
sbb
cli
pop
popf
add
out
xchg
push
pop
xor
add
xor
stc
inc
push
test
xlat
psrlq
or
pop
loope
inc
inc
dec
or
xchg
fmuls
test
cmpsb
jnp
xor
lret
push
stos
aaa
pop
sbb
cmp
movsl
sub
pop
icebp
shlb
je
inc
outsb
leave
out
cmp
push
fmuls
sbb
push
imul
mov
lahf
ss
filds
in
xchg
int3
ds
pushf
xor
popf
xchg
test
dec
mov
outsb
and
sbb
pop
lahf
xchg
in
dec
jae
mov
popa
and
inc
dec
in
jecxz
sub
xchg
loop
cltd
push
mov
sbb
jle
mov
cs
xchg
scas
shlb
xlat
insb
sbb
dec
dec
xchg
ss
fsubrs
outsl
lret
lcall
mov
fistpll
mov
cwtl
or
adcb
sbb
xor
cmp
pushf
insb
orl
lea
mov
push
sbb
fs
xlat
cs
xchg
cmp
movsl
inc
xor
xchg
mov
xor
xor
dec
xlat
ret
sub
jmp
or
or
pop
jne
mov
push
sub
inc
aam
cld
xchg
lock
pop
decb
adc
shrb
lcall
cmp
mov
cltd
andb
sahf
cmp
pop
and
fistl
xchg
negl
push
mov
sbb
xchg
mov
ljmp
lock
push
mov
lods
addr16
xchg
pop
mov
mov
fnstenv
mov
xchg
dec
int
lods
ja
pop
fildll
rcr
je
data16
sub
pop
mov
jb
out
les
adc
xchg
scas
jecxz
cmc
les
cmp
iret
jbe
neg
imul
jge
mov
insl
fwait
xchg
adc
mov
inc
mov
jae
cli
push
sbb
mov
xchg
jo
aas
mov
jbe
push
test
add
fcmovnbe
test
outsb
cmp
mov
int3
addr16
addl
add
adc
leave
pusha
and
inc
fidivs
in
in
ret
push
jecxz
rcrb
add
in
aad
leave
insb
inc
jl
mov
mov
pop
imul
inc
xchg
mov
dec
lods
mov
sbb
or
das
cli
inc
push
jae
xchg
dec
fldcw
lahf
xor
stc
sbb
stos
inc
lret
call
xor
stos
pushf
and
mov
xor
test
and
pop
push
ret
dec
mov
incl
int3
adc
int3
enter
jno
mov
das
sbb
jns
fisubl
mov
arpl
stos
adc
mull
mov
add
mov
out
inc
pusha
leave
fdivrl
mov
push
fistpll
fstl
aam
aad
inc
icebp
sahf
and
or
lods
ljmp
andl
pop
xchg
test
or
adc
or
call
sub
dec
pop
pop
cmp
add
ss
jno
stos
xlat
xor
data16
pop
fisubl
adc
dec
mov
leave
cmp
mov
popf
test
or
shlb
add
mov
sbb
popf
xor
sub
icebp
push
dec
mov
xorl
mov
movsl
xor
loop
ret
mov
aam
loop
mov
push
mov
shll
mov
xchg
mov
xchg
lock
movb
xchg
xchg
ret
shl
cwtl
int3
scas
push
fwait
or
mov
xor
and
and
sarb
push
sub
divps
out
mov
xchg
mov
dec
xchg
gs
data16
into
gs
scas
in
call
cmp
inc
cmpsl
adc
out
imul
gs
fucomp
orl
jmp
mov
ds
add
sub
push
int
inc
fcoms
bound
mov
mov
test
push
sub
into
dec
sahf
jbe
in
jg
or
jmp
pusha
lret
jae
shll
adc
mov
mov
sti
shl
sub
fists
mov
jmp
dec
dec
mov
fimull
cli
bndstx
call
mov
test
sbb
movsb
cltd
sbb
fstpt
inc
nop
mov
sbb
adc
les
outsl
dec
push
mov
rcrb
inc
push
xor
pop
xchg
dec
xlat
inc
fidivl
je
ret
push
in
or
scas
mov
mov
jl
fsubrs
gs
jecxz
ret
call
leave
daa
mov
sub
mov
fiaddl
in
loop
adc
mov
test
into
jne
subb
leave
cld
dec
je
std
pushf
les
inc
lods
imul
push
dec
xchg
ja
add
insb
dec
addr16
push
out
jecxz
or
in
cwtl
cmp
in
cmp
jg
cmp
push
popf
in
dec
loope
icebp
sbb
scas
push
adcb
cmp
push
call
mov
ret
movsb
out
mov
xchg
jmp
xchg
jo
adc
jp
cmp
add
mov
pop
pop
jl,pt
add
mov
pop
lds
mov
add
mov
and
push
or
jb
pop
movsb
ja
lds
mov
test
mov
out
gs
in
ucomiss
inc
hlt
jne
sub
sub
lret
jnp
loope
aas
pushf
add
mov
or
inc
scas
jae
xchg
adc
fdivr
cwtl
mov
pop
mov
imulb
xor
sbbl
xchg
out
push
aas
js
stc
and
fiaddl
xor
xchg
push
jns
add
sbb
lahf
js
fadd
shlb
repnz
aam
sbb
sub
add
xor
push
adc
inc
mov
aam
fdivp
adc
sub
jge
or
push
adc
cwtl
sub
add
clc
xor
inc
dec
mov
dec
mov
sub
mov
std
enter
ret
or
scas
loope
adc
gs
aad
in
jae
rorb
cld
aad
out
das
push
fsubrl
adc
aaa
call
loopne
sbb
arpl
push
push
shlb
pushf
repnz
xchg
call
inc
mov
test
push
mov
jmp
jg
outsl
mov
mov
insb
gs
popf
cs
stos
icebp
aas
sbbl
inc
leave
pop
cmp
es
daa
sbb
pop
repnz
fwait
dec
mov
lahf
testl
inc
fnstsw
dec
enter
or
or
sbb
push
in
or
push
lcall
jb
je
push
cmpsb
xchg
call
sub
dec
push
and
loop
enter
cmc
jne
and
pop
cmpsl
or
xor
stos
cmp
sbb
fidivs
pop
cmpsl
out
loope
dec
mov
insl
cmp
jecxz
xor
mov
dec
dec
adc
add
inc
xlat
sbb
pop
insb
jg
lahf
fs
mov
mov
fcoms
jb
aam
repz
clc
xlat
push
ret
orl
xor
jae
and
testb
pop
jnp
in
repnz
out
add
mov
pop
repz
sub
or
les
out
pop
out
cmpsb
xchg
xor
outsl
movl
jle
fldcw
push
adc
sbb
and
jne
cmpsb
repnz
lds
leave
push
inc
bound
insl
or
stos
mov
mov
xchg
pop
ljmp
bound
mov
xor
pop
lods
cmp
imul
rcll
xchg
xlat
xor
test
cltd
in
sub
xor
pushf
sub
ficompl
ds
push
int3
push
das
dec
fsubrp
push
mov
outsl
jp
sub
in
hlt
sbb
or
xor
loop
lahf
call
add
cltd
nop
ss
clc
addr16
sub
sbb
sbb
or
testb
adc
arpl
pop
addr16
xor
cmpsl
and
lds
xchg
fnsave
jo
outsb
addr16
repnz
pop
enter
jae
mov
pop
sahf
jno
and
lods
and
jnp
repnz
aad
dec
fisubs
mov
push
pop
adc
in
arpl
cs
aam
stos
adc
adc
aas
add
loope
sub
in
sbb
imul
adc
je
insl
ja
add
vprotw
pop
mov
push
cwtl
stos
rorl
mov
mov
mov
inc
pushf
cmp
jl
movsl
xchg
sbb
inc
rcl
pop
mov
push
sub
add
push
xor
scas
arpl
or
test
ss
mov
jge
popa
sub
mov
loop
jno
lds
andl
iret
cmpsl
repnz
mov
jae
add
fwait
pop
sti
vphsubbw
pop
mov
pushf
cmc
sbb
sbb
and
cmovbe
lret
sti
push
outsl
mov
loopne
pop
das
xchg
add
enter
rol
mov
mov
and
inc
cmp
mov
jl
data16
push
cmpsl
daa
outsb
into
jno
test
or
dec
lret
les
shlb
pop
sub
aam
adc
pop
out
mov
push
mov
scas
aas
shlb
inc
aad
mov
push
das
sub
pop
lahf
push
ret
xorb
pop
repz
xchg
mov
jge
push
push
sbb
pop
jg
into
cli
sbb
test
xchg
add
mov
addl
pop
jmp
clc
fisubs
adc
xchg
testl
imul
lods
adc
clc
push
adc
les
mov
xor
pop
jmp
fnstcw
jnp
addl
pop
push
call
sbb
mov
inc
mov
popa
stos
inc
xchg
xor
ljmp
bound
xor
lahf
hlt
mov
jmp
push
daa
test
mov
mov
loopne
stos
xchg
sub
mov
mov
fscale
sub
jbe
shrb
aad
xor
addr16
jmp
or
xor
pop
cltd
aad
or
xor
inc
cltd
push
ja
in
mov
aad
scas
fdiv
cmpsl
xchg
jecxz
inc
leave
mov
clc
push
lea
aad
pop
xor
loop
out
dec
in
cmp
insl
jnp
or
clc
add
cwtl
jns
jmp
sbb
mov
sub
pop
outsb
add
lds
mov
sub
loopne
out
pop
dec
fnstenv
outsb
jl
inc
fstps
test
lods
mov
and
dec
pop
insb
shll
jae
cltd
push
mov
xchg
cs
shlb
push
pusha
pop
cmpsb
cmp
add
cmp
sub
mov
bound
lods
mov
push
sahf
cld
push
dec
je
lods
into
stos
dec
pop
xchg
cltd
sub
andb
jl
stc
xchg
fistpl
mov
inc
cld
sbb
fldenv
pop
cmp
jge
dec
xchg
pop
repnz
fdivl
xchg
mov
jbe
sti
or
cltd
jecxz
into
lock
daa
stc
mov
test
call
stos
mov
sahf
out
sbb
jnp
notb
pushf
ret
sbb
or
aam
jmp
mov
outsl
std
adc
push
cwtl
das
bound
scas
inc
sub
ss
fistl
movsb
push
mov
fsubl
leave
cmp
int3
pop
divb
xchg
addl
pop
std
xchg
aad
push
mov
scas
sub
xchg
sbb
add
clc
push
adcl
nop
sub
out
stc
pop
lea
nop
cmp
cmpsl
es
adc
shrl
shrl
aas
ror
pop
push
addr16
adc
fisubrs
dec
jge
mov
mov
adc
and
adcl
loope
mov
jne
in
mov
pusha
xchg
push
pop
ds
xor
insl
std
fisttps
out
xchg
rcll
arpl
cmp
jge
movsb
ret
test
mov
out
push
aam
shlb
pop
xor
jne
jge
clc
xchg
mov
andb
xor
mov
xor
fldl
and
and
and
jmp
mov
push
sarb
wrmsr
adc
repz
lcall
cmp
mov
addr16
xchg
mov
mull
mov
loop
jmp
inc
sbb
jae
out
outsl
mov
jl
mov
mov
mov
push
mov
enter
pop
mov
cmc
mov
cmp
mov
adc
add
lahf
push
add
imul
cmp
in
movsb
iret
mov
adc
stos
sarl
jbe
stos
sbb
mov
arpl
loop
loope
js
testb
adc
jno
add
cwtl
jb
pusha
inc
addr16
dec
fldcw
sub
pop
dec
imulb
insl
aaa
push
adc
jns
loopne
pop
cmc
cltd
rcll
cwtl
mov
xchg
add
into
cltd
ljmpw
mov
inc
lea
push
popa
pop
popa
pushf
jne
jnp
sub
push
jbe
lret
cmp
imul
pushf
or
addr16
cltd
adc
mov
push
mov
rorl
js
xor
cltd
and
jecxz
insb
push
mov
test
inc
test
jb
xchg
jns
cmp
jae
jne
xchg
mov
inc
aam
fcmovbe
stos
jle
iret
cmp
add
dec
popf
dec
mov
mov
cli
adc
jle
add
inc
mov
sbbb
fnstenv
jl
out
sub
sbb
into
cs
outsl
cli
loope
mov
fdivrs
lret
or
out
cmp
outsb
adc
dec
pop
mov
adc
adcb
push
call
aas
adc
adc
push
fsubrs
jae
dec
fsubl
mov
call
or
cmp
fst
or
gs
pop
and
stos
dec
jns
or
jae
jae
adc
or
movsb
inc
dec
mov
outsl
adc
cmp
stos
sub
leave
and
adc
ljmp
clc
push
mov
shr
push
shll
cmp
clc
pop
fnstcw
aaa
cli
or
mov
push
lret
mov
push
adc
das
push
lret
xchg
in
mov
sbb
cmp
in
cld
and
imul
xlat
pop
out
jmp
or
sbb
fbld
stos
sub
jne
sbb
addl
push
loop
dec
in
add
pop
xor
xchg
xor
fsub
in
lret
mov
jmp
or
jmp
mov
inc
adc
jp
jno
mov
ss
inc
sbbb
mov
inc
cltd
push
jno
mulb
add
jns
pusha
pop
jmp
dec
sbb
aam
cld
outsb
fsubrp
add
lock
mov
int3
xchg
jle
outsl
mov
ljmp
jno
mov
les
in
fld
enter
lea
adc
insl
inc
or
popf
cmc
sbb
scas
int
in
shl
add
jae
call
dec
mov
dec
mov
xchg
aaa
out
inc
sbb
divb
sub
inc
push
int3
xchg
mov
jge
fildll
fbld
mov
shll
cmp
mov
call
lea
push
add
add
push
xor
and
xchg
andb
mov
in
jo
dec
cltd
cmc
imull
sbbl
or
out
out
or
cmpsb
nop
pushf
ss
popf
lcall
and
std
or
cmp
enter
cmp
cmp
ret
mov
stc
and
testb
ror
test
push
aam
xchg
sub
mov
clc
or
mov
jno
shl
adc
adc
add
icebp
int
push
cmpsb
and
pusha
repz
lret
jb
or
cmp
cli
inc
rcrl
or
xchg
xchg
and
jne
rcrb
jle
xor
add
pop
push
adc
cmp
sbb
test
fidivrl
into
call
pop
lock
pop
inc
or
in
push
insb
hlt
dec
fldt
cltd
loopne
clc
rol
mov
mov
sub
out
int3
mov
into
pushf
jmp
xchg
xchg
and
push
je
inc
adc
std
ss
push
adc
jno
bound
into
and
fistpl
inc
das
and
cli
mov
jp
ret
in
fstl
mov
adc
push
add
or
adc
fdivr
cwtl
sub
loope
or
cli
xor
imul
push
jmp
add
les
xchg
adcb
push
and
or
lcall
insb
add
fbstp
or
mov
nop
cld
pop
out
lock
or
pop
arpl
pusha
divl
loop
aam
xor
jecxz
sbbl
in
push
lret
mov
inc
stc
xor
xchg
and
add
test
sbb
iret
mov
xchg
cli
andl
insl
orb
in
hlt
fdivrs
jo
pop
scas
or
cmpsl
je,pt
fidivl
icebp
mov
in
in
repz
cli
int
pusha
ds
xor
jge
test
imul
insb
pop
ret
iret
pop
sarl
xchg
cmpsl
fdiv
mov
scas
cmc
ljmp
mov
jno
mov
shl
fwait
jge
mov
pop
icebp
adc
sub
adc
stos
jle
pop
sub
lahf
xor
cmp
imul
fdivr
jnp
inc
je
test
dec
sbb
lahf
dec
sbb
push
push
popa
lret
push
fistl
addl
sbb
mov
inc
and
mov
jbe
pop
je
jb
icebp
mov
jecxz
dec
push
dec
clc
ja
fldenv
adc
popa
xor
mov
sbb
adc
xchg
and
push
push
loopne
lahf
push
mov
jl
sbb
sbb
push
and
and
pop
movsl
mov
loope
lret
pop
sbb
in
mov
add
sub
jmp
push
jge
shrb
inc
fwait
insl
std
push
dec
in
xor
inc
push
mov
pop
or
add
test
dec
dec
shl
mov
pop
aas
mov
pop
mov
mov
add
pushf
out
push
cmp
daa
imul
dec
and
cmp
out
xchg
sub
push
ljmp
cmp
dec
lods
lods
sub
xor
xor
scas
and
ss
je
xor
call
js
mov
lcall
insb
in
in
dec
sbb
dec
sub
adc
imull
scas
out
fiaddl
or
sbb
sub
mov
daa
add
fs
or
adc
int
xor
mov
clc
inc
mov
std
insb
cltd
out
fidivs
shl
mov
pop
test
add
cmpsb
cmp
data16
sbb
idivl
call
pop
or
lahf
ja
push
fcoml
test
mov
fistpll
sub
push
out
stos
mov
xchg
cmpsb
xchg
in
or
mov
push
sub
cli
pop
hlt
jmp
and
fisttpl
fs
mov
ljmp
and
mov
sbb
xor
mov
mov
lods
mov
adc
push
xlat
outsb
mov
sub
lods
in
fnstsw
mov
pushf
lock
adc
xchg
sub
dec
repnz
mov
jns
out
test
sbb
mov
stc
clc
xor
in
xor
test
rolb
pcmpgtw
inc
sub
mov
out
or
mov
jg
je
fwait
cmp
and
sti
lds
hlt
xchg
adc
push
xor
outsl
xchg
or
into
mov
fistl
vmovaps
clc
xchg
mov
mov
aas
je
int
clc
pop
mov
mov
cmp
push
popf
adc
jne
fstpl
and
inc
xor
fs
notl
push
xchg
andl
je
je
pop
test
inc
sub
mov
data16
in
test
mov
xchg
mov
xor
xor
repz
mov
fdiv
sahf
aam
sbbl
mov
inc
pop
scas
out
arpl
btc
cld
jno
jg
bound
or
inc
lret
sbbb
pop
pop
cli
lcall
mov
push
add
mov
adc
adc
xchg
mov
pop
fsubs
out
xlat
je
test
in
out
push
je
pop
enter
sub
mov
or
xchg
fdivrl
in
clc
push
lahf
pop
push
mov
lret
decl
test
mov
jle
push
jbe
dec
das
mov
xchg
dec
jecxz
jl
inc
ficompl
shll
popa
into
stos
stc
in
orl
lret
sbb
rorl
insl
jno
lret
mov
scas
lahf
aas
pusha
mov
adc
bound
xchg
xchg
adc
push
inc
pop
adc
cmp
pop
jns
lods
mov
mov
clc
dec
in
pop
ljmp
jne
loope
xchg
mov
add
test
mov
sbb
pop
cmp
jge
and
sub
xchg
outsb
cmp
daa
repz
addr16
lret
hlt
xor
int3
cltd
gs
jecxz
mov
pop
push
repz
and
push
jle
xor
imul
mov
test
mov
ljmp
cmp
lds
xor
loop
out
test
loopne
mov
inc
or
ja
jb
lds
stos
xchg
pop
push
outsl
adc
cmp
add
or
add
mov
cwtl
into
fstpt
mov
mov
repz
cmp
mov
insl
aam
mov
das
mov
fisubl
adc
mov
mov
test
movsl
fs
loope
mov
push
pop
fsubp
push
insl
icebp
loope
sahf
add
cmp
mov
je
scas
cli
xor
and
add
scas
jecxz
push
jnp
xor
pusha
mov
cmp
jmp
cmp
clc
mov
int
cmpsl
sbb
jbe
add
dec
adc
repz
xchg
nop
test
add
sbb
mov
mov
mov
push
mov
xchg
and
cmp
adc
jbe
loopne
ficomps
xchg
sub
xchg
dec
sub
sbb
mov
ret
xor
inc
frstor
test
aas
or
mov
mov
sbb
into
sub
push
arpl
leave
addr16
xchg
cltd
cmp
jecxz
xchg
cltd
insb
push
and
popa
jno
pop
movsl
or
cld
jne
xchg
mov
scas
adc
test
push
push
pmulhuw
pop
cld
movb
cltd
popa
stos
mov
mov
sbb
mov
icebp
aad
nop
jnp
push
pop
lods
mov
inc
xchg
pushf
or
out
mov
sub
and
fcompl
mov
pop
outsb
ret
mov
daa
mov
ja
into
test
inc
mov
outsl
leave
lds
dec
or
xchg
pop
inc
shll
mov
insl
testl
shrl
xor
and
push
mov
inc
loopne
js
adc
outsl
loopne
xor
mov
inc
pop
cli
sub
test
push
mov
adc
xorb
cmp
mov
ret
rcrl
push
es
lods
or
sbb
add
sub
ds
outsl
or
mov
lcall
xor
mov
stos
inc
xchg
fnsave
stos
inc
push
add
pop
cmpsl
push
and
pop
jns
jge
inc
sub
inc
out
es
xlat
mov
mov
xchg
test
dec
mov
cmpsb
ds
xchg
inc
push
sub
sbb
cmp
dec
cmc
fnstsw
rcll
add
hlt
cmp
clc
sbbl
xchg
inc
xchg
xor
jns
data16
or
mov
test
shlb
lods
mov
add
push
test
xchg
mov
lahf
xor
iret
pop
sub
mov
mov
cwtl
pop
stos
in
adc
cmpsb
mov
pop
enter
xor
dec
insb
and
aad
aaa
mov
lahf
cmp
jle
jns
aam
rol
pop
mov
jp
out
lcall
sbb
subl
bnd
and
jb
jb
xchg
sub
sub
fldl
pushf
dec
mov
sahf
jmp
stc
and
xlat
icebp
add
enter
and
in
jo
pop
call
test
stos
aas
rolb
movsb
pop
ja
leave
pop
out
cli
sti
test
xor
push
movsl
daa
adc
fnsave
test
jbe
ja
loopne
sbb
jo
enter
fiaddl
fst
mov
das
push
hlt
outsb
std
mov
outsb
dec
in
push
mov
jmp
std
sbb
sbb
push
test
in
pop
subl
xchg
push
inc
out
mov
cmpsl
mov
rolb
sbb
lahf
stos
popf
lock
cmpsb
mov
add
mov
mov
xor
lcall
or
add
jns
cs
fcoml
mov
pop
das
aaa
sbb
lods
sti
xchg
arpl
jmp
ss
decb
stc
jle
rorl
xchg
lea
sbb
addb
imul
imul
add
mov
and
stos
std
cltd
test
in
mov
add
cli
fiadds
sbb
pop
lret
cmp
xor
xor
fldcw
std
fsub
movsl
pop
clc
add
mov
ficomps
mov
lret
inc
mov
inc
cmp
sbb
push
rcll
pop
in
xor
mov
dec
push
mov
dec
xchg
int3
add
cmc
mov
push
xchg
dec
mov
int3
xor
or
or
cmp
out
jmp
pop
dec
mov
mov
inc
lods
popa
push
mov
xchg
dec
daa
and
lret
jbe
std
jmp
xrelease
dec
pop
pop
loopne
call
push
in
pop
test
mov
insb
mov
add
xchg
ljmp
shlb
jo
fcomi
push
or
add
pop
jl
adc
mov
dec
mov
xor
imul
pop
pop
fnstcw
ffree
out
adc
push
lret
adc
int
outsl
jnp
jb
arpl
ds
xchg
imul
stos
popa
shl
xchg
lret
mov
ret
lret
dec
inc
dec
xlat
das
cwtl
cld
das
push
pop
jge
push
aas
pushf
mov
ret
pop
push
in
pop
jle
mov
out
lods
insb
xor
loop
xor
nop
xchg
int
sub
lret
je
mov
sub
nop
aam
filds
xor
shl
leave
or
movsl
dec
xchg
call
sbb
sbb
out
movsb
lods
push
arpl
adc
insl
push
in
cwtl
add
xchg
shll
out
mov
les
sahf
lds
inc
loop
jbe
ds
jmp
xchg
lcall
out
fs
in
mov
push
inc
popf
jp
pop
mov
cmp
xor
testl
push
lods
fistpll
scas
xchg
inc
enter
ja
mov
jge
dec
pop
sahf
jle
mov
das
push
inc
push
out
or
dec
sub
cmpps
cmp
fstpl
sub
xor
sbb
sbb
sti
cmpsb
int
push
lcall
hlt
inc
out
jge
inc
sti
pop
lahf
jne
pop
mov
jp
fsubl
and
negb
jle
insl
mov
addr16
imul
xchg
jmp
mov
push
xor
outsl
and
je
fs
js
dec
imul
jp
addr16
sbb
push
push
out
mov
stos
aas
daa
dec
out
push
ljmp
call
mov
jmp
mov
pop
js
out
mov
sbb
rcl
rcr
repnz
ficoms
sbb
or
movsl
in
xor
xchg
or
insl
xor
or
test
pop
lock
in
je
enter
jmp
sbb
inc
test
jne
and
dec
iret
adc
xor
call
pop
hlt
jmp
push
popf
idiv
mov
xor
aaa
out
subl
in
push
mov
enter
push
setb
les
push
ja
sub
jmp
cmp
add
mov
pusha
xor
out
adc
into
shrb
jne
pop
jp
cmc
icebp
mov
xchg
montmul
cmpsb
fdivl
test
pop
pushf
dec
pusha
into
jns
sub
ss
cmova
jmp
test
stos
lret
daa
push
jb
mov
jge
mov
mov
push
push
jmp
mov
pop
mov
and
sbb
lds
adc
adc
adc
mov
fldenv
dec
mov
or
and
in
test
std
je
push
int3
and
and
mov
ret
push
test
stos
mov
jl
push
lret
pop
jnp
dec
loopne
jp
jns
adc
jae
xor
mov
outsl
adc
fldenv
adc
sub
xor
or
xlat
jecxz
xchg
xor
ja
sti
xlat
mov
bound
xchg
outsb
adc
imul
xor
hlt
not
or
and
gs
mov
jg
leave
lcall
fnstsw
fsubl
lret
movsl
inc
adc
cli
cwtl
daa
mov
and
fnsave
or
sub
arpl
into
add
stos
sahf
pop
inc
dec
pop
jecxz
data16
push
mov
pop
in
or
movsl
inc
xlat
mov
cmpsl
ds
std
or
pop
frstor
xor
jbe
sub
outsl
push
addr16
ss
adc
subb
in
outsb
std
pop
xchg
lods
inc
std
add
ret
and
dec
lret
aas
lock
stos
lods
sahf
ficoms
or
rolb
mov
mov
lret
pop
jg
sub
sbb
leave
inc
add
jns
jmp
xchg
mov
cmpb
jne
test
data16
mov
cmp
pop
adc
push
mov
fld
fadds
out
aam
mov
inc
adc
add
adc
notb
xchg
jmp
xchg
sbb
out
fmul
push
jge
fbstp
push
pop
scas
test
add
mov
int3
outsb
push
fsubr
pop
jne
fdivrl
rorb
in
fsubrs
push
adcb
testb
pop
mov
mov
dec
dec
aam
sub
inc
lret
int
and
xchg
mov
outsl
fld
in
nop
add
je
pop
jl
push
gs
pushf
aaa
mov
push
inc
pop
in
inc
stc
cmpsb
lock
icebp
cmpsb
cs
jns
add
aaa
jns
out
dec
xchg
jg
ret
nop
stos
cmpsl
test
lret
sub
stos
inc
add
cmpsb
inc
sbb
pop
and
cmp
popf
aas
cli
cld
adc
int3
mulb
pusha
cmc
push
cmpsl
jle
mov
lahf
sub
xchg
mov
mov
jmp
jb
mov
mov
pop
bound
shll
push
jmp
jp
lcall
sub
data16
fdivl
pop
adc
cmp
sub
sub
adc
iret
fdivrs
xchg
insb
into
pusha
mov
je
cmp
add
inc
stc
pop
push
jnp
add
fimuls
test
mov
or
je
repnz
jle
stos
mov
les
sbb
test
mov
mov
aas
add
addr16
mov
dec
popf
in
shl
sti
stos
sbb
fmull
cmp
enter
mov
lret
mov
sub
xchg
mov
es
xlat
push
push
lods
cmp
push
mov
mov
sahf
out
insl
adc
pop
es
popf
stc
ss
rcrl
inc
mov
adc
xchg
leave
xor
dec
jmp
out
ja
or
mov
xor
dec
insl
jle
jecxz
xchg
pop
outsb
adc
out
popf
sub
lahf
ss
cs
inc
mov
je
and
push
sub
or
stc
fsts
xor
sbb
js
inc
ljmp
movsl
and
adc
nop
sbb
imul
daa
pusha
loope
push
insl
sbb
xor
cmp
aam
add
cmp
loopne
sarl
mov
leave
push
outsl
add
mov
jo
iret
xor
daa
push
enter
mov
incb
aas
sti
repz
mov
out
js
pusha
int3
or
sar
or
dec
movsb
dec
divb
jecxz
test
inc
or
jb
insl
aam
xchg
pop
int
arpl
jg
popf
and
sti
hlt
aad
lods
ss
js
cmp
pop
bound
push
sbb
rcl
jo
into
icebp
loope
push
jmp
push
and
pop
out
xor
lock
lret
test
popf
lods
dec
or
mov
jg
ds
int3
or
cli
ja
ja
add
and
xor
mov
cli
cmp
cmp
ret
xchg
mov
add
adc
movsl
cmp
nopl
adc
stc
lret
mov
std
adc
sahf
jle
jnp
sbb
cmp
jnp
insl
lds
adc
lret
jle
cwtl
ljmp
push
xchg
dec
push
jb
pop
push
mov
mov
add
leave
andb
loopne
or
cs
mov
dec
or
fs
sarl
dec
repnz
dec
lock
jns
or
pop
fwait
mov
stos
cmp
scas
adc
clc
andl
xchg
cmp
xor
int3
pop
ds
xchg
sbb
enter
inc
mov
push
cmp
ds
adc
cmp
push
popf
int
ret
repnz
xor
mov
jp
or
jo
mov
jmp
iret
mov
push
push
jbe
or
fsubs
and
fistpl
xchg
inc
scas
inc
fs
arpl
pop
sahf
dec
int3
arpl
std
in
add
test
xor
inc
call
jle
mulb
icebp
and
test
inc
shr
dec
nop
cli
adc
nop
aaa
jnp
out
popf
loopne
and
cmpsb
or
push
mov
sbb
adc
addb
sahf
sub
push
cmpsl
or
es
mov
cs
test
shrl
test
jge
cltd
enter
or
pop
sub
rcr
cli
call
and
mov
sbb
cld
xor
shrl
shrl
stc
push
xchg
sbb
test
sahf
xchg
lock
mov
xchg
pop
popl
add
dec
movsl
and
aad
es
aam
enter
subl
fs
or
mov
pop
or
cmp
lcall
push
cmp
mov
jnp
push
pop
push
pop
mov
and
mov
mov
int3
insb
in
and
je
inc
and
ss
fs
aad
mov
fsubs
cli
xchg
hlt
push
leave
pushf
inc
mov
pop
and
or
mov
fistpll
bound
add
or
mov
cmp
lea
orb
pop
cmpsb
sub
sahf
mov
adc
xor
jmp
pop
jno
or
stos
lcall
ret
push
and
jecxz
cs
bound
or
mov
push
lea
int
sar
not
ds
mov
rclb
movsl
add
ds
jmp
call
je
out
rclb
mov
xchg
lret
pop
insb
std
mov
les
les
push
jbe
sub
loope
dec
jo
xor
mov
inc
jae
cli
cmp
fwait
xchg
popa
push
pop
and
pop
fidivrs
sbb
shl
push
mov
add
add
stos
shlb
fstp
int3
xchg
inc
xor
xor
jg
and
pop
xor
sbb
mov
or
adc
dec
pop
pop
jl
andb
xor
cli
sbb
and
hlt
xchg
and
data16
mov
cmp
xor
aam
pop
cmp
xor
mov
push
into
sti
cmp
dec
pop
mov
push
int
pop
fisubrl
dec
mov
idivl
shl
out
push
add
dec
or
into
mov
add
cmpsl
ror
and
ror
test
dec
andl
jb
fwait
mov
fwait
push
out
int3
ljmp
pop
mov
push
call
andl
arpl
outsb
js
cmpsl
movsb
xchg
aad
add
lds
mov
in
add
cmp
mov
or
jp
hlt
dec
inc
aam
test
push
push
into
cs
pusha
out
into
enter
xchg
cmp
mov
pop
mov
cmpsb
jne
inc
cmpsl
and
xchg
xchg
in
xor
mov
aam
sbb
shrl
arpl
aas
add
or
aaa
out
and
inc
dec
pop
aad
in
sti
inc
mov
mov
xchg
loope
ret
cwtl
mov
insl
in
pop
pop
sub
push
jp
call
pop
push
cld
adcl
hlt
xchg
pop
scas
enter
inc
sub
dec
push
mov
je
movsb
fidivl
adc
sarl
inc
pop
mov
jmp
sti
inc
call
or
insb
xchg
repz
pop
sbb
stc
aam
test
sbb
push
jbe
inc
sbb
hlt
leave
stos
loopne
fdivr
sub
loope
cld
nop
icebp
add
cmp
fwait
pop
ds
in
pop
and
aas
push
fwait
leave
jecxz
sti
mov
or
xor
test
xchg
imul
push
xchg
xchg
or
mov
rcrl
sub
pop
mov
jecxz
popa
aad
pop
ss
outsl
sub
jmp
mov
sarb
loopne
jge
aas
lds
sahf
mov
mov
xchg
sub
pop
pop
mov
pusha
daa
idivb
addr16
xorl
out
out
and
std
pop
jl
jle
test
test
inc
mov
xchg
mov
sbb
sarl
mov
fistpll
icebp
or
hlt
stc
xor
xor
inc
nop
icebp
add
gs
cmp
mov
push
out
xorb
add
out
ljmp
rorb
sbbl
jl
insb
add
push
mov
mov
dec
xor
mov
lea
test
mov
leave
xchg
inc
lods
dec
rcl
out
out
mov
sahf
cltd
inc
fld
pop
in
cmpsl
mov
jle
loop
ret
sahf
mov
pop
movsb
mov
and
ret
dec
inc
pop
daa
mov
push
sub
cmpsb
cli
sub
and
jbe
add
mov
fwait
sti
jns
jmp
int3
adc
les
and
inc
push
xor
dec
push
dec
xchg
mov
pushf
pop
sti
shrl
jg
jae
cmpsl
dec
cld
push
imul
adc
push
sbb
cmpsl
adc
and
dec
inc
test
fidivrs
inc
pop
testl
dec
dec
mov
pop
popf
mov
movsb
jno
nop
inc
fld
ret
add
leave
xor
mov
cld
xchg
sub
repz
mov
scas
and
and
push
aam
sub
cmpsl
test
xchg
mov
adc
test
mov
fmuls
fsubp
cmp
pop
xlat
push
xor
cli
add
cmp
loope
in
arpl
mov
mov
ret
and
mov
sbb
sarl
cmpsb
jmp
xor
mov
loopne
pop
or
push
icebp
into
and
xor
jo
insl
jge
inc
adc
push
in
popl
push
outsb
lahf
mov
xchg
adc
sbb
mov
cld
popa
or
stc
cmp
sbb
or
scas
cmp
sbb
push
je
imul
xchg
es
mulb
add
mov
jo
fucom
mov
iret
aas
xchg
sbb
inc
mov
dec
in
icebp
mov
cs
cli
ror
outsl
add
cmpsl
adc
pop
sub
in
pop
push
mov
and
push
add
inc
add
cltd
xor
cs
loope
mov
cmp
fmul
lret
push
pop
mov
pushf
xchg
out
push
mov
mul
and
jo
add
into
or
lea
andb
cmp
cltd
mov
push
inc
repz
and
lret
scas
iret
jo
je
xor
xchg
push
stos
xchg
or
inc
cmp
fucomp
and
push
pop
xor
push
mov
sbbb
hlt
fs
test
xchg
aam
movsb
or
mov
jne
push
adc
clc
cld
xchg
sub
sbbl
movsl
lods
push
fiaddl
test
scas
bound
mov
adc
repz
les
jg
pop
cli
inc
imul
je
outsl
mov
xchg
mov
add
xor
test
out
jecxz
movsl
pop
jns
xchg
mov
iret
inc
and
shrl
fnstenv
andb
sbb
lock
xor
fists
mov
jne
add
ljmp
ret
mov
jbe
xor
inc
push
inc
stos
push
push
cmpsb
lcall
fdivl
std
or
imul
loopne
xor
cmpsl
scas
pop
out
pop
jns
mov
sub
fildl
pop
add
or
mov
jge
jg
or
cmp
cmp
mov
popf
mov
inc
rclb
lock
mov
xor
les
stos
jo
pop
xor
es
cmp
pop
icebp
or
adc
pop
das
sub
outsb
pop
push
fbstp
notl
sub
data16
xor
int
xchg
pop
in
or
imul
push
in
or
jg
call
sbb
sub
shrb
and
pop
lock
jae
int3
adc
fcompl
xor
fs
hlt
jg
cmc
xchg
shlb
in
std
gs
int
push
cmp
add
cmp
and
xchg
jnp
je
or
or
repz
subl
in
dec
in
xchg
or
pop
insb
jecxz
int3
aad
jbe
xchg
cli
xchg
leave
adc
mov
mov
in
shll
or
and
inc
test
pop
lds
mov
test
movsl
mov
cmp
or
jnp
outsl
mov
lcall
and
je
xchg
lods
pop
mov
push
lods
push
fld1
dec
sbb
and
jg
adc
sbb
add
add
hlt
sub
out
leave
jbe
lods
daa
lret
ja
std
xor
xor
scas
push
ret
cltd
into
iret
inc
xchg
jae
and
cltd
xchg
or
add
es
push
adc
iret
adc
fldl2t
cmp
ror
inc
cmc
shlb
sub
jae
jo
pop
sbb
fildl
aaa
sub
aaa
push
call
sbb
aaa
xchg
and
cmpsl
mov
xlat
xor
adc
push
push
dec
in
les
hlt
shrb
and
adc
cmp
test
addr16
fcmovnb
arpl
push
sub
mov
aam
pop
pop
imul
popa
adc
xor
dec
iret
xchg
ror
jg
cmp
push
pushf
add
jnp
sub
icebp
into
jg
jo
pusha
movsl
xchg
loope
mov
shr
daa
or
mov
leave
je
clc
out
imul
sub
inc
mov
jge
and
and
push
in
jae
inc
lds
and
dec
gs
mov
loope
sbb
inc
sbb
mov
rolb
sti
sub
dec
subb
inc
fstpl
cmc
cmp
jbe
xor
push
lds
pop
lock
mov
pop
hlt
fst
clc
inc
xchg
repz
mov
cmp
ficomps
sub
repz
xchg
mov
fbld
or
cmp
lea
push
sahf
xor
arpl
sbb
rcll
fninit
dec
mov
cmc
lds
cmpsb
inc
pop
xchg
pop
push
test
mov
mov
push
pop
push
mov
repnz
shrl
sub
mov
mov
pop
aas
insb
int
mov
out
insb
xor
addr16
add
add
mov
cmpsb
dec
inc
push
add
sbb
jns
in
stos
fldenv
dec
fisubrl
cmp
outsl
leave
ss
andl
adc
add
jo
popa
stc
xchg
xchg
jno
push
mov
inc
scas
clc
sahf
and
fstpt
subl
mov
cmp
je
mov
cmp
mov
subl
cmpsb
in
push
inc
mov
in
push
fwait
and
ret
nop
jbe
shrl
lcall
jg
cmp
fxch
or
ficoml
inc
sub
push
stos
jb
loope
imul
jmp
jne
xorl
inc
fstl
lods
pop
dec
pop
or
into
stos
clc
scas
pushf
mov
dec
in
in
loope
rcrb
aad
in
pop
daa
push
out
cmp
xor
icebp
int3
cmp
inc
push
repz
les
sti
fnsave
pop
daa
repz
dec
xor
mov
push
adc
fnsave
mov
xor
enter
in
aam
shl
fsts
inc
bound
inc
jne
dec
cmpsl
jp,pt
sbbb
mov
das
roll
dec
adc
fdivl
xor
jg
divb
jbe
popf
mov
js
dec
xchg
ja
das
inc
pop
sub
dec
jge
repnz
fcmovnu
xor
sahf
ss
or
adc
call
add
mov
pop
lds
lahf
push
cli
mov
cmp
in
out
nop
daa
je
aas
pop
mov
mov
adc
mov
dec
dec
mov
push
push
cmpsb
out
imul
xor
dec
les
xor
hlt
mov
inc
sbbb
nop
mov
push
xor
pop
push
sbb
xchg
cmp
test
mov
mov
roll
je
push
jle
popf
daa
jl
or
popf
lahf
dec
add
jle
cmp
aas
fisubrl
test
loopne
xor
cmp
call
js
xor
xchg
xchg
dec
add
int
jae
xchg
sub
mov
or
jb
add
pop
sbb
cmpb
mov
push
add
js
or
cmp
mov
repz
lret
clc
insb
add
add
mov
xchg
push
mov
cmpsl
je
or
mov
test
mov
push
in
test
jae
add
scas
inc
inc
stos
xchg
sub
addr16
arpl
mov
pop
orb
nop
inc
mov
ss
mulb
push
out
dec
fistpll
aaa
into
aaa
popf
cmpsl
ds
pop
mov
fbld
aaa
into
pop
jg
ds
mov
fistps
test
push
xor
fisttps
xchg
cmpsl
ds
pop
mov
loop
dec
xor
in
movsb
inc
mov
popa
inc
adc
sub
push
je
loopne
mov
push
insl
and
sbb
sub
fcomps
shr
jge
mov
shrb
and
shl
fldcw
mov
dec
lds
lahf
and
lret
mov
push
jne
imull
pop
pop
mov
lret
es
cmp
shrb
push
or
dec
jb
adc
inc
movsl
imul
loop
lock
call
enter
arpl
mov
dec
aaa
out
testb
inc
sahf
pop
or
push
fwait
es
or
out
movsb
es
daa
outsl
inc
ds
out
in
arpl
sbb
fcmove
sti
mov
adc
fisubs
xchg
test
sub
xchg
insb
sti
les
aad
ds
scas
push
clc
xchg
lods
pop
aad
dec
ficomps
mov
sbb
jmp
lea
aaa
aaa
into
dec
dec
mov
fiaddl
xor
enter
mov
scas
loopne
clc
add
cmpsl
pop
les
xchg
cs
push
dec
addr16
test
pop
add
inc
jecxz
push
adc
and
xor
rclb
mov
xor
mov
jp
sub
mov
dec
dec
lds
mov
push
push
xchg
mov
pop
out
jge
cwtl
bound
pop
sti
bound
jb
mov
movsl
nop
out
pop
les
cltd
xchg
dec
and
lcall
iret
xor
inc
jb
js
push
sub
xchg
lock
popa
dec
mov
rcrl
add
jle
pop
pop
lods
xor
xchg
or
in
pop
mov
je
mov
sub
dec
insl
out
push
push
mov
cld
push
cmp
arpl
push
sub
pop
mov
push
pop
call
scas
xlat
push
sub
inc
in
add
inc
lret
mov
ret
imul
ret
add
mov
mov
repz
std
mov
xchg
cs
pushl
sbb
mov
mov
mov
out
and
pop
cmp
fisttps
mov
add
jecxz
imulb
into
fs
and
jns
dec
sub
sahf
lods
pop
add
rcrb
pop
aaa
aad
inc
leave
hlt
push
cmp
mov
aam
call
in
xor
int
cbtw
jp
dec
xchg
bound
xlat
mov
add
sahf
xor
push
test
xchg
cmpsb
lret
je
testb
add
mov
cmp
in
rcrl
cmp
inc
inc
addr16
sarl
insb
testl
add
dec
and
xchg
jmp
into
dec
ss
in
scas
push
rclb
add
sbb
ds
and
mov
mov
shlb
and
sbb
push
sub
enter
pop
pop
adc
fwait
inc
aam
stos
mov
and
pushf
imul
push
push
cwtl
mov
rcll
pop
xchg
push
movsb
cmp
inc
shr
in
sahf
dec
sbb
int3
pusha
mov
sub
jl
aas
out
stos
stos
pop
popl
insb
filds
mov
cmp
inc
ret
lcall
or
cmp
dec
out
js
xor
enter
inc
add
mov
cld
or
lods
std
fwait
sub
in
inc
cltd
and
into
pop
lret
mov
xorl
fisubl
push
push
inc
inc
les
fsubrl
imul
and
sub
sarb
pop
inc
mov
int3
in
loope
mov
shlb
sub
add
add
ret
arpl
fwait
or
mov
mov
daa
dec
nop
call
lcall
popf
mov
fsubp
pop
dec
add
test
add
sub
inc
test
repnz
out
inc
pop
push
int3
or
push
shll
inc
fcoml
push
out
mulb
out
fidivrl
pop
mov
jmp
jecxz
lock
stos
movsl
pushf
stc
pop
out
jne
push
or
inc
cmp
cli
push
bound
mov
mov
fsubrl
int
cwtl
mov
mov
std
push
cmp
push
add
lea
lods
pop
fnstsw
mov
call
inc
repnz
mov
lret
cltd
fnsave
adc
clc
jge
aad
pop
cmp
or
inc
fstpl
fwait
in
push
mov
adc
mov
std
inc
stos
bound
fisttpll
mov
pop
cmpsb
rclb
push
mov
push
jmp
test
mov
xchg
iret
gs
xor
or
inc
ss
popa
ljmp
aad
jo
movl
ficoml
xchg
mov
scas
hlt
add
push
adc
xlat
xorl
imul
std
cli
sti
cmp
movsl
sbb
rolb
dec
ljmp
fmul
fistps
xor
jae
test
andl
push
mulb
push
adc
mov
dec
jle,pt
je
sahf
mov
and
sti
push
add
decl
jge
aaa
out
mov
sbb
xlat
mov
ret
adc
rclb
lret
cs
pop
ret
cmc
add
lcall
iret
data16
push
clc
pop
adc
dec
jp
mov
loop
fnsave
sub
test
jle
data16
adc
lods
push
sub
mov
js
push
out
fdivrl
mov
jno
add
mov
add
sbb
jne
arpl
pop
xorl
pop
out
test
cmpb
nop
dec
mov
lret
rclb
xchg
xor
aad
cmp
imul
and
push
xorb
inc
inc
std
pusha
add
test
lds
jg,pn
fnstsw
orb
inc
sbb
std
mov
das
dec
mov
cmp
xor
xchg
out
cltd
mov
mov
jns
int3
mov
xor
jl
sbb
sarl
jmp
ds
lret
sub
icebp
jno
out
sbb
pop
jg
cmc
in
pop
jo
ffree
hlt
lret
and
pop
out
lret
out
ret
orl
nop
outsb
loopne
fsubrl
sbb
pop
aas
mov
test
mov
cmpb
mov
insl
add
xor
sub
mov
insb
inc
insl
push
dec
cmpsb
mov
push
cmp
inc
fcomp
sub
xchg
sub
repz
push
pop
adc
pushf
or
or
js
xchg
test
mov
stc
popa
mov
cwtl
in
sub
and
xorb
adc
subps
lcall
jle
test
jno
gs
fiaddl
subl
push
sbb
fwait
sahf
or
mov
xor
prefetchnta
or
js
mov
push
testl
xchg
jge
inc
add
mov
push
mov
repz
enter
dec
loop
pop
xor
adc
push
mov
negl
andb
fiaddl
nop
ss
and
push
cwtl
or
mov
jmp
push
mov
test
ret
aaa
push
or
idiv
clc
pop
movsb
loop
in
notb
test
jmp
roll
out
fldcw
enter
in
test
mov
imul
imul
dec
adc
jb
mov
cmp
jle
call
cmp
add
jne
sbbl
mov
fnstenv
arpl
repz
neg
jno
std
fisubl
adc
imul
dec
lock
in
xor
jl
mov
add
jnp
xchg
mov
mov
sbb
push
ret
arpl
sbb
lcall
cmp
ds
aam
mov
push
mov
ljmp
cmp
jecxz
sarb
mov
scas
xor
mov
push
add
mov
pop
mov
enter
sbb
xchg
xlat
dec
js
ljmp
ljmp
cwtl
or
push
dec
and
test
jns
fs
adc
enter
orl
mov
push
push
jmp
orb
dec
inc
push
jmp
pop
add
and
aad
in
push
cmp
clc
pop
cmp
cmpl
xor
arpl
in
adc
mov
xor
stos
mov
das
mov
adc
cwtl
bound
adc
mov
jl
cmpb
enter
push
ficompl
mov
test
mulss
icebp
mov
repz
pop
ret
pop
add
mov
sub
xor
pop
push
bound
and
ror
imul
cmp
sti
rcl
aas
dec
cmp
in
dec
push
xchg
fldl
cmpsb
shrl
pop
jecxz
aad
jnp
mov
xchg
sub
ret
dec
pusha
xchg
dec
fisttps
and
pop
or
push
test
movsl
mov
sbb
out
and
sbbl
mov
mov
std
pop
cmp
fisttps
fmull
pop
jmp
dec
mov
scas
push
push
sub
mov
int
adc
mov
jp
leave
pusha
adc
push
lods
out
insb
sti
inc
mov
xchg
int
xlat
loop
xor
jge
rclb
js
mov
pop
pushf
ret
and
push
mov
xchg
aas
clc
push
popa
div
adc
sub
popf
negl
mov
popl
insl
pop
movsl
out
mov
xchg
dec
pop
jno
cwtl
std
or
pop
arpl
fsubr
and
xchg
fists
push
mov
xchg
dec
ljmp
dec
fdivs
shl
mov
push
mov
push
pop
aam
aad
xchg
inc
jnp
add
or
iret
pop
push
test
cmp
int
xchg
mov
sbb
out
rclb
push
ss
dec
leave
int
mov
lret
cmp
add
mov
mov
pop
inc
sub
mulb
decb
mov
push
cmp
les
into
jne
ljmp
repnz
frstor
sbb
inc
outsb
gs
sbb
or
mov
mov
sbb
mov
pop
jp
pop
mov
insl
cmp
pop
cs
sarb
dec
pop
imul
lea
cmp
aas
call
and
jmp
jbe
insb
push
dec
stos
inc
ficoml
in
dec
xchg
inc
mov
push
out
orb
rolb
add
lret
jns
or
mov
daa
lcall
test
dec
mov
testb
imul
repz
xchg
inc
xlat
mov
push
and
push
fsubr
mov
inc
jge
int3
mov
std
ljmp
or
xchg
dec
pop
stc
scas
push
movsl
jae
aaa
sti
lret
adc
mov
pop
xor
mov
cmp
lahf
add
jno
push
xor
inc
jge
scas
dec
jl
sbb
cmp
mov
pop
jecxz
push
pop
add
icebp
leave
push
pop
enter
lock
add
xor
ja
jl
pop
dec
inc
popf
jg
xchg
fldcw
jno
xchg
sub
sbb
adc
adc
faddl
lret
out
call
repnz
popf
jge
inc
fistl
lods
or
add
sub
hlt
xchg
mov
enter
inc
xchg
pop
inc
pop
into
cmpsb
and
loopne
sbb
fwait
or
sbb
jno
mov
test
in
xchg
testb
in
pushf
pop
mov
arpl
jg
adc
rcl
popa
jae
xlat
jbe
xlat
cmp
sbb
pop
jecxz
jg
outsb
sub
mov
sub
sahf
push
mov
mov
xor
dec
push
rolb
lret
scas
sub
idivl
xchg
scas
push
hlt
dec
sbb
jmp
mov
shl
mov
cmp
les
fcomip
addr16
mov
movsl
cwtl
inc
btc
negl
out
js
jmp
aaa
push
xor
mulb
jns
cmp
inc
sbb
notb
and
fwait
les
cmpsl
push
fiadds
les
ja
in
lods
enter
inc
orl
sbb
pop
lea
in
ja
test
sub
push
pushf
sub
cli
pushf
sbb
mov
and
sub
repz
xor
lds
inc
dec
pop
mov
lahf
imul
clc
adc
pop
xor
pop
scas
aaa
mov
fcmovb
xchg
into
aad
outsl
jbe
inc
pop
jbe
popf
movsb
push
jbe
icebp
clc
sahf
mov
callw
or
stos
mov
fadds
scas
out
add
add
xchg
push
aam
jae
cbtw
or
in
jmp
aad
dec
mov
aas
outsl
lea
das
lret
addr16
leave
dec
dec
cwtl
imul
jle
pop
inc
aas
push
jle
dec
clc
inc
sub
push
inc
push
clc
call
je
jno
aaa
mov
jge
dec
push
int3
lret
add
dec
dec
pop
xor
push
fmuls
mov
mov
pop
sbb
clc
push
jge
cmpsb
sub
jnp
lods
dec
sub
lret
fbstp
jmp
xchg
adc
mov
add
jae
dec
movsl
and
dec
pusha
jb
insl
sub
enter
pop
push
sub
iret
mov
mov
fsubl
mov
cmp
mov
cmpl
clc
fwait
jl
lret
or
sbb
das
aas
mov
sbb
fdiv
pop
add
jae
add
lock
add
xchg
aaa
lret
shr
hlt
push
adc
dec
xchg
sbb
popa
test
inc
scas
hlt
bound
popa
movhlps
dec
dec
jno
outsl
enter
add
and
mov
adc
mov
jne
adc
in
pop
repz
gs
repnz
icebp
or
mov
outsl
push
pop
in
pop
dec
xchg
add
leave
loope
push
fldl
lret
inc
in
mov
filds
pop
mov
in
and
daa
dec
popa
pop
mov
popl
popf
jl
cmpsb
sub
ljmp
pop
pop
mov
loope
adc
test
pop
and
cmpsb
iret
push
repnz
sub
sub
lret
add
in
inc
test
arpl
idivl
into
mov
jl
and
xchg
inc
cmp
les
and
imull
insb
sbb
push
dec
adc
fs
lcall
and
enter
mov
std
or
mov
addb
mov
lods
mov
pop
or
mov
xchg
idivl
push
add
inc
cli
xchg
xor
cli
lods
insl
jge
xor
cs
adc
into
pop
sbb
in
incb
repnz
fidivrl
lret
stos
out
lahf
or
ds
repz
cmp
sub
dec
aas
jb
xor
xchg
xchg
fucomip
repnz
inc
fs
and
or
xchg
cmp
fbstp
jmp
test
mov
push
loop
iret
and
test
pop
out
arpl
jne
int
jbe
inc
push
je
sub
jbe
rclb
orl
sbb
pop
lods
push
jmp
ret
in
pop
insb
mov
xor
push
scas
mov
pop
lock
pop
and
lock
dec
test
int3
fldcw
mov
add
nop
push
mov
sbb
in
ja
icebp
pop
aam
out
xor
sahf
push
mov
adc
mov
sbb
sub
inc
mov
jnp
pop
sarl
pop
das
sub
xchg
stos
xchg
dec
adc
lret
iret
scas
ljmp
mov
push
daa
leave
xor
mov
adc
pop
lcall
lahf
mov
mov
inc
pop
lcall
loopne
push
outsl
and
sbb
push
inc
add
inc
test
inc
mov
mov
push
sub
jge
fcoms
js
and
jge
shlb
lret
or
fsubrs
cmp
in
add
push
pushf
lds
adc
mov
or
or
stos
insb
push
and
in
incb
ja
dec
cmpsb
and
pop
dec
lret
add
jno
xchg
xor
jo
pop
leave
mov
fldl
lods
dec
frndint
and
mov
jae
inc
pusha
xor
mov
pusha
ret
stos
ljmp
cmpsl
xorb
jl
push
pop
out
xchg
cmpsb
adc
dec
loope
add
and
adc
jae
movsl
sbb
arpl
sub
push
cmpl
out
das
push
xchg
mov
out
popf
push
add
cmp
mov
mov
push
out
xchg
push
dec
rsqrtps
mov
dec
test
out
add
iret
adc
mov
test
fs
mov
pop
sub
push
bound
bound
dec
mov
mov
sti
inc
jecxz
aaa
loopne
pop
scas
out
xchg
subl
ds
aam
push
push
jge
add
loop
negb
repnz
add
fldl
xchg
insb
divps
ja
sub
lret
cmp
push
adc
insb
lret
je
push
jbe
dec
aam
mov
sub
and
mov
mov
rcrb
rcll
and
cld
dec
and
mov
mov
and
or
and
mov
and
cmovne
cmp
out
pop
cmc
pop
xchg
mov
sub
inc
and
adc
and
cld
popf
decb
ds
xchg
mov
cmp
loope
shlb
cltd
xchg
fstl
cwtl
mov
mov
fildll
mov
cwtl
push
sub
jle
push
arpl
scas
push
popf
in
push
lret
cmp
fs
popa
andl
shrb
test
sub
sahf
add
lret
je
bndldx
pop
std
pop
mov
pop
inc
inc
sahf
lahf
ss
and
dec
hlt
mov
sbb
jo
orl
adc
out
and
sub
ja
in
nop
dec
arpl
mov
pop
repnz
sub
mov
sbb
dec
and
sub
or
mov
mov
add
mov
in
and
mov
push
test
imul
pusha
cmpsb
das
add
test
icebp
sbb
push
jmp
test
inc
int
in
lret
inc
popf
adc
sub
adc
and
insb
rorb
mov
pop
push
stos
inc
loopne
mov
outsl
xor
fwait
repnz
add
xor
xchg
inc
mov
je
push
nop
mov
or
mov
xor
mov
adc
js
sahf
add
mov
sbb
sbb
push
and
int
popf
push
outsl
addr16
flds
sti
jbe
xchg
sbb
and
pop
clc
cmpsb
dec
adc
std
adc
ficoms
pop
or
outsb
sub
push
or
movsb
dec
cwtl
loopne
mov
nop
xor
jg
push
orb
adc
pop
adc
imul
add
rclb
ret
or
dec
sbb
adc
in
sub
add
sbb
cmpsl
inc
out
nop
xor
push
push
pushf
scas
xlat
rep
cmp
and
cmp
mov
ljmp
push
mov
pop
mov
rcrl
sbb
pop
xchg
montmul
cmpsb
add
sub
push
push
das
shll
mov
xrelease
lock
mov
fisubs
mov
push
cmp
push
imul
es
pop
mov
pop
shll
sub
rolb
cmp
ds
mov
lock
call
sahf
xor
test
mov
sbbb
jge
mov
jns
push
mov
mov
scas
je
jns
and
xor
ja
roll
jecxz
lret
cld
sbb
xchg
adc
scas
gs
adc
mov
mov
and
inc
ret
fchs
imul
aam
dec
ljmp
movsb
out
daa
inc
cmp
out
stc
cwtl
je
out
cmp
push
pop
mov
fs
lret
mov
nop
push
add
adc
push
push
jno
sbb
jae
lret
mov
push
jmp
inc
mov
out
and
jl
inc
xchg
or
sbb
add
xor
cmp
inc
add
or
dec
aad
nop
jno
or
jnp
pop
scas
addr16
pop
jecxz
inc
lods
push
xchg
cmpsb
icebp
js
pop
data16
jge
fisubl
std
pop
jmp
jae
pushf
cli
cmp
mov
adc
dec
push
and
ret
mov
fdivs
dec
push
out
into
xor
in
dec
aas
mov
dec
mov
mov
ret
scas
mov
shr
sbb
or
test
sbb
pop
push
ja
jl
out
mov
loopne
mov
mov
jp
aas
enter
pop
in
fdivl
cmp
xchg
arpl
in
adc
mov
andb
idivl
sbb
jecxz
add
inc
rolb
and
mov
jno
xchg
leave
pusha
les
out
pop
adc
jp
cmc
dec
push
cmp
pop
jle
bound
pop
xchg
in
popa
shrl
sbb
dec
xor
jl
fmuls
cltd
mov
inc
push
fisubl
cmp
adc
into
lods
sub
xchg
pop
lret
xor
jb
push
sub
shll
xchg
sbb
scas
notb
dec
dec
out
pop
sub
sbb
adc
add
int3
xchg
ss
subl
leave
xchg
xor
pop
and
jmp
mov
jmp
cli
xor
jb
dec
subl
mov
xchg
sub
mov
mov
repz
lcall
outsl
notl
fsubrs
daa
jmp
or
jge
scas
push
push
in
adc
sti
pusha
popf
cltd
xor
xchg
jno
pop
lods
inc
jo
popl
or
cli
xchg
mov
sub
xchg
sbb
lcall
or
aad
sub
dec
sbb
jecxz
ror
enter
add
xchg
test
add
cmc
cmpsb
in
test
gs
xor
sahf
xor
mov
lock
ret
outsl
test
lods
sbb
sbbl
rcrb
add
mov
sub
lret
aaa
into
mov
fcoml
push
cmpsl
add
pop
add
je
ret
or
lcall
popa
inc
dec
daa
mov
iret
mov
aaa
into
xchg
cli
add
sub
jmp
out
scas
inc
cs
int3
lret
adcb
mov
outsb
cli
push
adc
adc
jmp
insl
sub
cmp
sbb
jae
push
ljmp
pushf
xor
mov
imul
jecxz
xchg
jp
jmp
gs
pop
pop
sahf
test
pushf
xor
ret
jno
repnz
mov
mov
nop
daa
inc
stos
test
fcmovnbe
insb
add
repnz
inc
adc
mov
imul
dec
sub
orb
and
dec
bound
push
pop
pushf
insb
add
cmp
outsl
push
mov
sbb
cs
pop
jo
mov
ret
push
lods
clc
fcomps
aas
sbb
push
xchg
insb
test
cmpsb
jmp
cmp
xor
mov
dec
dec
aas
jge
sbb
mov
js
inc
fisubrl
mov
cmp
es
mov
repnz
lods
inc
out
dec
loope
sbb
dec
loope
lahf
adc
rcrl
or
shlb
outsb
add
and
and
ret
repnz
ss
adc
inc
add
outsl
dec
out
inc
daa
mov
movsl
xchg
inc
fadd
lahf
ss
ljmp
cmp
ds
pop
sbb
mov
mov
dec
loope
pop
push
lods
mov
imul
loopne
das
mov
mov
inc
pushf
gs
int
aad
xchg
out
sbbl
mov
lods
inc
pop
and
push
scas
ja
xchg
shll
mov
dec
and
push
insb
test
sahf
jne
hlt
cmpsb
mov
sub
repz
adc
inc
pop
add
xchg
mov
mov
out
out
ds
lds
dec
loope
push
jge
test
and
sub
push
insl
adcb
andb
pop
xlat
stc
sub
cs
pushf
xor
cmpsl
in
aad
push
push
and
push
out
inc
cli
xchg
jb
je
jb
ljmp
ljmp
and
adc
push
cltd
into
xchg
xor
out
data16
and
dec
in
dec
cmp
jg
push
jno
test
into
lcall
adc
xchg
pop
ds
insb
cmp
push
shlb
mov
fwait
or
loop
or
in
sbbl
pop
jnp
jnp
jle
cmp
rclb
enter
fbstp
iret
outsb
add
sti
daa
stc
push
and
pop
pop
into
xchg
sub
shl
hlt
daa
rclb
jecxz
pop
shl
lea
sbb
cmpsl
ds
xlat
std
xchg
push
ret
daa
mov
push
sub
cwtl
pop
int
mov
icebp
daa
lret
sub
movsb
pusha
int
outsl
add
pop
dec
sub
mov
mov
add
mov
lock
fs
dec
sub
sahf
pop
fmul
popa
or
sbb
dec
and
scas
push
xlat
mov
push
int3
xor
add
testb
push
in
push
int3
loop
add
xsha1
cmpsb
dec
sbb
push
push
sarl
or
lcall
rcll
add
push
push
push
dec
in
into
ret
pop
call
cmp
add
lds
das
not
out
add
inc
fimuls
cmc
mov
shrb
test
pop
fsubrs
rorl
repz
pop
or
and
dec
mov
aad
pop
cmp
scas
insb
sbb
dec
mov
jecxz,pn
mov
fidivs
lret
push
in
jae
or
popa
clc
jnp
insl
inc
cmpsb
xor
fstl
jp
cmp
cmp
in
sbbb
in
jge
loopne
cmp
out
repz
push
call
cmp
out
sbb
pop
arpl
mov
lcall
rorl
add
loopne
pop
cltd
xor
rcrb
mov
cmp
imul
jmp
out
rolb
add
out
addr16
and
in
and
push
mov
mov
add
mov
imul
aam
mov
jecxz
or
sbb
cmp
lock
daa
jecxz
push
sub
ret
pusha
shl
hlt
mov
pop
out
in
test
inc
xlat
popa
xlat
outsb
divb
pop
negb
and
mov
jnp
pop
and
xlat
outsb
add
adc
xchg
inc
sub
push
popa
fsubr
orl
xlat
outsb
push
setnp
cmp
push
dec
loop
ret
shrl
mov
jo
sbb
mov
cwtl
das
aas
jnp
sbb
shlb
pop
fsubl
dec
push
std
pushf
mov
js
fs
dec
cmp
jl
xchg
sub
fwait
or
shlb
jb
icebp
sub
es
scas
movsl
inc
push
in
je
pop
hlt
notl
lock
push
jmp
push
sub
lock
gs
faddl
or
mov
sub
pop
sahf
out
jg
sub
lret
add
icebp
mov
lret
push
mov
jno
jae
pop
test
lret
inc
flds
push
call
push
lods
sti
xchg
mov
sub
out
test
dec
mov
ds
lahf
jae
shrl
pop
mov
cmpb
mov
inc
fisubrs
insl
mov
andb
mov
inc
and
add
sbb
addr16
inc
iret
sbbb
scas
lea
and
push
je
movsb
cmp
lods
cmpsl
loopne,pt
icebp
mov
fbstp
jbe
cmpsb
mov
lret
add
xchg
sbb
xsha256
cmpsb
push
xor
mov
mov
jmp
pop
push
adc
sbb
bound
xchg
mov
sbb
xor
pop
pusha
testl
cmpsl
lret
loop
add
popf
add
xor
mov
test
sub
cld
ja
sub
clc
rdpmc
dec
lahf
sbbl
loopne
inc
fstp
or
push
cmp
dec
out
pop
or
xchg
dec
push
mov
lret
pop
aaa
jmp
test
ds
jo,pn
test
ret
cmpsl
sub
or
adc
test
jge
jo
data16
lahf
ss
addb
mov
pop
inc
push
outsb
jb
adc
pop
xchg
add
mov
or
or
ss
and
gs
nop
jbe
je
imul
cmp
cmp
mov
fidivl
adc
fnsave
mov
lock
mov
std
xchg
push
scas
dec
in
je
les
leave
gs
push
dec
in
sbb
daa
dec
mov
in
fwait
ljmp
pop
icebp
dec
lret
push
xor
dec
cwtl
js
xchg
dec
pop
test
xchg
cmp
mov
cltd
mov
cwtl
jae
xchg
mov
loop
pop
loopne
pop
ret
mov
mov
ja
mov
and
sbb
adc
push
or
adc
stos
sbb
loop
imul
out
int
in
push
pop
mov
inc
mov
lret
mov
imulb
mov
add
sbb
stos
mov
jg
lock
in
dec
xchg
and
push
xchg
xchg
xchg
add
inc
xchg
cld
jnp
lret
inc
scas
jmp
aad
loope
xchg
mov
sti
jne
ret
mov
in
rcll
jmp
or
mov
imul
in
sarl
fcompl
loope
sbb
loop
daa
mov
cs
mov
lds
test
insb
and
insl
mov
xor
lds
push
ds
push
fcos
xchg
xor
add
pop
dec
nop
dec
in
insl
loopne
push
or
inc
loope
push
mov
stos
pop
xchg
jle
nop
mov
hlt
sbbl
stos
inc
loope
loopne
aad
scas
pop
cld
shll
sbb
test
mov
sahf
xor
loopne
jge
shlb
push
out
ret
outsb
mov
adc
iret
into
adc
add
outsb
lds
xor
out
cmp
mov
pop
rorb
push
movsl
mov
pop
out
xor
adc
adc
fwait
sub
sbb
jg
mov
or
pushf
mov
mov
lcall
mov
jg
xchg
jle
hlt
xchg
insl
ret
cmp
pop
fisubrs
jae
popa
stos
mov
clc
mov
fisubrs
cmpl
insb
jl
sahf
scas
into
push
hlt
mov
cmpsl
sbb
push
jns
dec
mov
pushf
lea
sbb
ds
aad
push
pop
shrb
or
in
mov
cmc
and
add
push
cmp
jg
mov
iret
cmp
lods
outsl
mov
sarl
ret
jl
scas
mov
xchg
push
sub
jbe
sarl
mov
dec
mov
or
stc
cmp
decb
test
adc
mov
xchg
xor
ja
xchg
jl
and
and
xchg
out
js
movsl
mov
sbb
lods
sarb
cwtl
xchg
jg
dec
ret
in
cs
mov
shrb
negb
in
sbb
icebp
sub
arpl
mov
mov
fs
pop
add
and
arpl
in
mov
mov
xchg
hlt
mov
or
fwait
sub
test
ss
dec
movsl
and
repnz
nop
adc
pop
subb
pop
imul
xorb
add
mov
test
ss
jne
jge
out
and
mov
data16
jmp
sub
stos
dec
jg
push
ljmp
arpl
mov
sti
ja
mov
push
cmpsb
jnp
and
jp
ja
lret
jp
jnp
dec
cmpsb
insb
jl
sub
movsb
popf
repz
repz
pop
cs
cld
xchg
std
arpl
bound
scas
bound
loop
push
adc
lock
or
inc
stos
pusha
mov
jne
mov
inc
or
mov
push
add
jp
add
lods
sbbl
out
mov
or
push
cmpsl
jmp
mov
incb
jle
movsb
dec
xor
in
push
jmp
sbb
imull
add
mov
incb
es
mov
std
xchg
imul
subl
imul
js
push
cmp
movsw
inc
ficoml
dec
dec
loope
push
fldl
lcall
jge
pop
add
mov
pop
xchg
test
mov
mov
or
sbb
pop
les
or
pop
sub
cwtl
and
jg
mov
sub
mov
push
enter
sti
popf
mov
int
mov
and
lahf
adc
ljmp
xor
mov
inc
lods
enter
loopne
xor
lret
cmpsb
adc
loope
ljmp
push
pop
rclb
sub
jge
dec
xor
pop
push
mov
test
mov
sub
sti
ja
movl
and
mov
sub
jg
adc
cltd
aaa
xor
ljmp
cli
or
es
inc
mov
cmp
out
and
pop
mov
cmp
pop
popf
xor
mov
fs
pop
lahf
rcrb
pop
popa
stos
outsl
arpl
rolb
cmp
aam
call
inc
movl
xchg
xor
cmc
add
or
or
xchg
mov
jb
push
shll
in
aas
popa
mov
clc
or
sahf
mov
fdivrs
das
pmaxsw
xchg
mov
je
mov
ljmp
push
add
in
jecxz
and
loope,pt
dec
roll
push
sub
jae
jg
xchg
push
jp
mov
sbbb
sub
add
stos
jp
lea
xlat
adc
pushf
mov
adc
ja
jecxz
cmpsb
push
je
outsb
call
test
adc
ret
jae
xchg
sub
ss
es
dec
pop
hlt
jl
adc
lahf
lcall
xchg
mov
xchg
jg
push
and
adc
cmp
xchg
out
mov
dec
mov
les
pop
mov
ret
flds
popa
lahf
mov
clc
test
sub
mov
rorl
cmp
xchg
sub
jg
dec
imul
fbld
lock
xchg
aad
fadd
pop
pop
int3
cmpsb
xor
add
push
data16
push
jno
or
sti
sub
dec
mov
inc
adc
cmp
mov
mov
lods
dec
push
pop
add
das
fcoms
mov
mov
fistl
lea
inc
mov
jge
and
roll
jae
dec
imul
ret
sub
cmpsl
mov
or
jmp
jnp
lret
loope
pushf
test
repz
out
jae
incb
enter
loopne
push
in
shrl
das
mov
insl
xchg
add
mov
cltd
cmpsl
adc
or
leave
cld
inc
out
rorb
cmpsl
mov
inc
pop
jo
js
xor
inc
call
movsl
fwait
xor
jb
lods
gs
ret
andl
cmpsb
xchg
cmp
mov
icebp
xor
iret
fadd
pop
stos
lock
ret
xchg
xchg
cmp
loopne
push
shll
pop
int
jne
pop
leave
pop
adc
push
gs
nop
clc
int
mov
in
fisttps
adc
test
mov
pop
lods
dec
mov
sub
insb
add
pop
sar
gs
sarl
xchg
sub
or
gs
out
shlb
sub
loopne
cmpsb
fwait
aam
xor
mov
jne
test
jns
mov
jo
movsl
popa
mov
add
repnz
sub
pop
push
sbb
jmp
or
adc
mov
hlt
daa
insl
push
leave
popa
sahf
push
int3
xor
scas
pop
mov
lock
pop
fcomps
ss
gs
jp
sub
mov
std
push
xor
xchg
cmpsl
popa
jl,pn
sbb
dec
mov
leave
roll
pop
lea
hlt
mov
daa
rclw
mov
sbbb
ror
sbb
mov
add
out
int3
inc
inc
mov
or
push
mov
dec
sub
jp
dec
mov
ret
jae
insl
inc
adc
dec
cmp
sbb
fidivrl
mov
int
lret
push
jg
dec
jmp
push
leave
pop
fidivrs
mov
sti
mov
add
push
inc
rclb
dec
push
sub
orl
dec
cmpsl
loope
repnz
push
mov
add
or
and
sub
cs
jp
nop
add
inc
xchg
sahf
or
sub
outsl
and
insl
les
add
pop
fimuls
lret
nop
daa
std
add
insb
test
cwtl
lea
mov
push
repnz
jecxz
dec
adc
call
shl
inc
xlat
mov
nop
mov
incl
out
out
xchg
ja
movsb
or
mov
outsl
mov
xchg
dec
shrl
into
push
stos
insb
xor
inc
int3
fcoms
push
adc
pusha
stc
push
testb
jns
mov
cmpsb
dec
pop
repz
mov
xor
jg
in
lods
pusha
fs
xchg
sub
sbb
lds
icebp
cmp
mov
fmull
mov
mov
js
sub
imul
cmp
cs
imul
imul
push
dec
mov
sub
sub
rorl
jmp
mov
push
cmp
or
or
lahf
xor
ds
add
test
inc
lds
xor
rcrl
in
je
add
movb
cld
jae
or
xor
repnz
subl
data16
popf
pop
enter
xchg
adc
push
xor
adc
sbb
sub
movb
popf
adc
lds
fmuls
adc
and
sbb
xlat
push
out
sbb
push
adc
es
xchg
in
movsl
mov
sti
push
mov
in
insl
movsl
test
hlt
push
aad
cld
pop
cmp
frstor
add
jl
adc
lock
cwtl
add
sub
dec
xchg
je
stc
pop
stos
mov
out
dec
mov
dec
fildl
jmp
sahf
xchg
arpl
cltd
inc
or
je
jg
aaa
in
xchg
ljmp
adc
xchg
jp
aad
add
scas
xor
cmp
add
aam
xchg
and
mov
mov
cmc
or
jge
add
xchg
mov
into
push
aam
xchg
int3
mov
lods
mov
push
mov
nop
jp
hlt
frstor
ret
xchg
pop
mov
out
xor
stc
sahf
pusha
into
fdivl
out
out
mov
hlt
lods
outsl
jmp
xchg
sarl
mov
lds
imulb
and
in
jecxz
lds
stos
gs
add
mov
xchg
or
cltd
in
lea
or
into
test
lret
sub
mov
in
push
or
push
mov
xor
add
sarb
sti
sub
sub
add
sbb
inc
lds
or
pop
jno
mov
pushf
test
push
aad
xchg
dec
ffreep
das
sub
xchg
out
mov
jae
push
int
cmp
sub
pushf
pop
dec
xchg
out
xor
adc
and
aam
fcoms
rclb
push
cmpsl
pusha
dec
mov
jns
mov
daa
push
sahf
xchg
dec
cmp
xor
sbb
dec
pushf
inc
dec
mov
sbb
pop
jmp
test
xchg
nop
and
sub
mov
outsb
pop
stc
dec
inc
pop
hlt
insl
xor
jmp
xor
jge
sbb
mov
insl
icebp
sbb
jle
inc
xor
aaa
jp
push
pusha
ds
jle
cmp
adc
dec
or
shrl
fwait
push
sub
shlb
dec
flds
in
stos
jb
push
mov
cmp
imul
push
and
ds
dec
pop
test
into
push
not
cmp
out
test
out
mov
or
mov
cmp
mov
jecxz
xchg
loop
fisttpl
mov
lds
outsl
popa
stos
xor
mov
stc
push
inc
mov
pop
xor
in
adc
sbb
sbb
jle
hlt
lret
aam
aaa
jmp
test
lcall
push
out
stos
adc
xabort
loope,pt
stos
cmp
jmp
pop
push
jp
or
or
jnp,pn
mov
push
mov
mov
repz
mov
or
sbb
inc
test
lcall
xchg
jbe
or
push
shll
adc
aad
sbb
cltd
out
cs
subb
pop
shll
cmp
shll
or
popf
test
loope
mov
iret
imulb
out
ret
insl
add
adc
push
fwait
addr16
push
ss
lods
pop
mov
mulb
cs
adc
ffree
hlt
das
aam
adc
cmc
sarl
mov
loopne
sub
xor
mov
cmp
add
sahf
es
xor
negb
xor
lock
xchg
lods
inc
cmp
add
sarb
jle
sbb
in
inc
scas
imul
xchg
pop
mov
sub
imul
je
sti
inc
int3
dec
enter
mov
int
je
fwait
ret
aam
jns
jmp
sbb
mov
and
stos
push
stc
pop
lods
add
push
cmpsb
ss
mov
jne
mov
leave
repz
xchg
insl
pop
mov
add
mov
bound
int
sub
scas
fs
add
sti
inc
fsubrs
add
pop
xchg
repz
pop
lds
insl
movsb
flds
repz
lea
and
add
and
out
aad
stos
xchg
js
leave
mov
out
movsl
movsb
bound
lods
pushf
mov
jns
push
leave
sub
imul
inc
fnsave
lret
cmp
xor
nop
mov
in
ss
push
dec
ss
jge
push
aam
push
fnsave
arpl
gs
in
mov
repz
sbb
or
sbb
mov
cltd
std
and
scas
negb
adc
fiaddl
xor
push
test
or
and
push
and
sbb
pop
and
mov
jg
mov
outsl
fs
imul
mov
cmp
mov
push
pusha
push
stc
fs
jle
sub
stos
lahf
dec
imul
je
xor
loope
movsl
adc
mov
or
adc
mov
xor
popa
xchg
sub
cmpsb
jne
jo
mov
mov
pusha
addr16
imul
sub
sub
fcompl
add
movsl
lret
iret
clc
sbb
movsl
insl
jmp
add
shlb
and
clc
lret
int3
sbb
jbe
sub
mov
test
leave
mov
fcomp
pusha
cwtl
fisubrs
sbb
xor
xor
sbb
int3
push
fcompl
aaa
xlat
outsl
scas
inc
sbb
popf
pushf
jg
in
add
int
mov
mov
jl
je
lret
push
je
imul
mov
testl
ja
dec
jecxz
cwtl
inc
rcrb
adc
mov
push
cmp
mov
add
add
inc
push
stc
xor
repz
xor
loop
clc
mov
scas
adc
mov
jns
test
dec
mov
jnp
jns
std
ds
ret
cmp
inc
mov
insl
out
repz
in
and
or
das
scas
int3
out
xor
mov
out
mov
xor
movsb
pop
loop
xchg
jno
add
outsb
popa
rclb
jae
mov
xchg
mov
fs
loope
push
rorb
jmp
cmpsl
lcall
daa
lds
xor
push
mov
enter
and
cmp
fists
sub
pop
xlat
mov
loopne
negb
cli
sub
inc
mov
js
sbb
arpl
or
fisttpll
mov
mov
mov
shrl
xchg
sub
testl
icebp
test
push
les
std
pop
pop
fisttps
pop
xor
mov
fcomps
loop
fstpt
xchg
scas
hlt
xor
and
lcall
sbb
fs
pop
add
movsb
xchg
sub
insb
pop
add
cmp
cli
negl
mov
add
or
and
push
jae
add
pop
lret
cs
rep
and
pop
sbb
cltd
ljmp
imul
cmp
lret
push
push
ja
mov
jnp
les
mov
inc
das
les
sti
push
adc
ror
aam
add
lret
fsubs
enter
fmulp
jns
das
add
sub
adc
jle
mov
inc
sub
sarb
jnp
jb
sub
jle
insl
mov
ja
push
xchg
ja
jns
and
imul
inc
pop
aaa
mov
test
ja
ret
loope
lcall
inc
jmp
push
inc
or
cmp
push
popf
lcall
mov
or
sahf
movups
rcll
add
add
or
daa
loopne
jns
int
xchg
or
add
xchg
adc
push
sub
mov
dec
pop
xor
nop
imul
test
insl
shrb
xchg
mov
mov
jg
cld
inc
mov
fimuls
adc
push
xchg
ja
ror
inc
icebp
jl
and
cli
sti
es
mov
test
nop
pop
dec
mov
ljmp
jmp
fisttpl
pop
fidivrs
mov
aad
mov
test
fidivs
jmp
scas
cmc
enter
movsl
cmp
frstor
and
js
imul
loope
dec
or
adc
mov
jno
cmp
insl
mov
lcall
xchg
add
subb
xor
cmp
movsl
cmp
pop
jb
pusha
scas
push
cli
hlt
es
pushf
xchg
mov
or
repnz
js
out
lock
ret
lock
sub
in
les
mov
push
push
cmp
xchg
push
push
or
xchg
pop
mov
mov
out
xchg
les
pop
aad
rclb
leave
cmp
lret
fnstcw
out
ficoml
or
bsr
loopne
std
mov
out
and
int3
sbb
cmpsl
mov
push
clc
mov
pop
mov
sub
mov
adc
push
mov
cmp
jp
hlt
iret
xor
mov
loope
dec
shrl
push
sbb
popf
jmp
mov
mov
fstp
push
ror
cwtl
int3
rcr
jo
sarl
dec
mov
movsl
outsb
and
lea
or
ret
add
add
out
cmp
mov
stc
cs
jmp
sub
jnp
jb
scas
shrb
push
xchg
popa
dec
jnp
dec
sbb
mov
call
cmpsl
pusha
and
out
and
adc
xor
sarb
aaa
mov
xlat
lds
jmp
mov
mov
push
das
loop
sub
push
fldl
jmp
mov
in
mov
mov
jae
pop
les
inc
filds
jne
repz
daa
xchg
xchg
mov
test
and
lcall
sbb
out
cmp
fldenv
adc
scas
outsl
and
aas
or
sahf
je
outsb
mov
adc
scas
lods
xchg
jno
and
pop
stos
push
notb
jb
dec
pushf
mov
test
push
inc
push
movsl
loope
std
aas
jge
jb
or
rcll
xor
into
jmp
jae
out
and
jg
sub
mov
mov
adc
fsubrp
xor
mov
loope
xchg
xchg
sub
aad
loop
sub
push
clc
sub
fildl
lret
mov
push
or
cwtl
cwtl
stos
mov
adc
addr16
cwtl
push
sti
xor
jecxz
jle
clc
lods
push
adc
popf
out
std
stc
xchg
pop
into
test
loope
int
dec
mov
ret
jecxz
pop
leave
pop
scas
test
cs
ss
insb
test
mov
cmp
pop
daa
fbld
lret
pushfw
sbb
lds
jae
sbb
mov
loope
addr16
or
mov
imul
mov
jmp
or
push
mov
mov
bound
sbb
pavgw
rorl
add
jo
iret
push
es
fists
les
jne
jg
iret
rorl
cs
mov
lea
nop
loopne
adc
and
and
jecxz
cmp
out
aas
push
out
fisubs
and
shrl
ja
in
imul
sarl
ss
adc
into
jns
jbe
out
jno
into
dec
test
movsl
in
cwtl
adcb
fbld
or
dec
adc
je
sbb
fs
divb
pop
xor
loopne
fs
arpl
test
jo
insb
cltd
xchg
cmp
pop
into
ds
daa
mov
sbb
insl
mov
lcall
lret
push
push
ljmp
jno
popf
push
mov
es
xlat
outsb
xchg
adc
mov
fs
arpl
mov
sub
or
mov
fcompl
std
outsb
add
loopne
mov
addb
sti
xor
sbbb
test
sub
out
jnp
mov
fwait
into
dec
fdivl
out
and
roll
xlat
jb
sbb
lds
int
out
adc
cltd
push
jmp
cmp
or
ds
daa
jo
insl
adc
hlt
mov
int3
arpl
xchg
test
push
xor
or
in
fisubs
mov
mov
inc
mov
add
test
push
aad
pop
pop
js
pop
stos
sub
jnp
jnp
push
lods
push
add
add
mov
push
ret
aas
hlt
je
lods
movsl
adc
xor
mull
adc
mov
jno
pushf
or
es
pusha
xlat
outsb
xchg
adc
mov
arpl
arpl
mov
sub
or
mov
fistpl
mov
cs
inc
dec
mov
addl
stos
inc
aam
sbbb
cmc
enter
mov
jge
stc
mov
fwait
int
fdivl
out
and
rolb
xlat
jno
sbb
les
int
in
adc
cwtl
push
jmp
cmp
or
mov
daa
outsl
insl
adc
hlt
mov
arpl
xchg
test
imul
or
pop
frstor
mov
scas
das
inc
add
mov
stos
inc
rcll
mov
repnz
in
mov
jb
hlt
xlat
outsb
es
mov
call
test
lea
test
rolb
add
movsb
cmp
data16
repz
dec
jle
dec
jecxz
lahf
ds
ss
in
test
mov
mov
addl
jno
rcrl
push
call
sub
sahf
xor
out
cmp
cmp
pop
stc
pop
pop
mov
in
filds
sub
xor
mov
test
and
sub
aas
mov
ret
cld
mov
movsl
cmp
cmc
mov
lcall
and
jns
decb
fwait
jg
int
test
mov
cli
cmpsb
lods
xlat
cs
pop
repz
mov
call
push
std
outsl
cmp
jae
scas
cmpsb
dec
xchg
xchg
and
and
nop
aam
fwait
mov
cmp
cmovbe
cmp
mov
dec
call
mov
and
leave
and
mov
shrb
inc
popf
je
or
mov
xchg
lcall
fdivr
ljmp
jecxz
icebp
lahf
add
jl
jbe
cmp
rolb
cli
out
clc
and
jbe
lods
xchg
stos
cmp
dec
cmp
loopne
push
repnz
cli
add
inc
xchg
insb
push
pop
aam
xor
or
leave
add
sbb
xchg
fstl
movsl
cmp
stos
xchg
xorl
out
mov
leave
sub
adc
out
scas
and
stc
shll
or
js
in
outsl
sbb
xchg
sub
push
sbb
fidivrs
lock
sub
nop
xor
insl
dec
popf
repz
dec
divb
jg
dec
inc
adc
outsl
mov
jmp
dec
jno
jno
or
movsb
xor
fldl
fistl
cwtl
sub
jmp
mov
mov
xchg
clc
sbb
ja
xor
mov
sub
loopne
js
clc
repz
popa
xlat
dec
push
jne
dec
aas
cmp
pop
jle
or
or
jg
xor
pop
out
das
cmpsl
loope
push
outsl
pop
xor
or
add
gs
mov
mov
mov
xor
adcl
mov
adc
or
jge
mov
lret
cmp
lret
cwtl
mov
ret
add
cwtl
daa
inc
lods
pop
push
ja
les
call
jg
lahf
sbbb
jno
nop
test
mov
xchg
imul
ljmp
push
stc
insl
fcomps
add
push
adc
outsb
insb
inc
in
pop
pop
ret
inc
jp
sub
sbb
test
ret
dec
out
out
cmp
aam
ds
shlb
mov
mov
sbb
sub
pop
jp
mov
cmpsb
cmp
xorl
dec
loope
gs
push
outsb
mov
pusha
cld
dec
in
or
call
lea
sub
xor
cs
mov
mov
mov
cmp
ja
xlat
pop
icebp
enter
fsubs
das
pop
jbe
inc
push
push
inc
fidivs
jl
cld
sbb
mov
push
out
lods
movsb
cmp
cmp
test
pop
or
dec
shll
out
jbe
shll
push
out
sbb
pusha
mov
jg
scas
movsl
xchg
sub
popa
cmp
lods
sbb
add
insb
and
into
mov
stos
inc
pop
add
aam
mov
or
pop
push
inc
dec
in
xor
in
xchg
in
call
idivl
cwtl
inc
fdivrl
rolb
cmpsl
xor
mov
rclb
xor
mov
add
es
xor
scas
lods
nop
inc
sub
mov
roll
rolb
sub
mov
icebp
and
xchg
or
add
andl
test
gs
sub
repnz
mov
mov
rolb
loope
xchg
mov
repnz
lds
adcl
out
cmc
and
push
inc
or
inc
pop
mov
mov
fistpl
std
cmpsl
or
push
mov
mov
add
ja
cwtl
or
daa
scas
add
sbb
push
icebp
pop
mov
mov
or
nop
cmp
xchg
cmp
mov
cs
stos
icebp
push
sub
sarb
cmp
cmp
mov
jg
pushf
add
sahf
inc
mov
scas
xor
stos
push
imul
jae
mov
cs
mov
cmp
imul
sbb
ss
rorb
inc
cmc
add
pushl
adc
add
mov
pop
mov
aad
lret
js
cmpsb
sub
insb
and
aad
and
lea
dec
fildll
mov
int3
pushf
mov
bound
mov
xor
repz
lret
loope
xor
iret
pushf
mov
jne
cmpsl
mov
ja
xchg
insl
sbb
adc
stos
ss
popf
in
outsl
inc
cwtl
cmp
and
dec
icebp
add
es
aad
in
push
add
jne
addl
loopne
fadds
or
lahf
inc
enter
fstpl
mov
out
adc
mov
add
nop
cmp
jecxz
push
pop
and
nop
fdivl
addb
xor
xchg
xor
pop
push
pop
add
lcall
sub
add
cli
or
jg
xor
add
outsl
lock
fldl
dec
cmc
hlt
arpl
pushf
fistpll
cmp
gs
mov
sarb
adc
jnp
push
mov
sub
daa
xchg
fdivs
inc
pop
std
adc
dec
fdivs
and
je
cmpsb
inc
adc
scas
cld
insl
test
fnstenv
fistpll
cmp
bound
dec
fdivrs
and
jae
and
sbb
mov
cli
insb
cld
pop
sbb
loope
mov
mov
xor
daa
mov
ds
cld
bound
and
push
add
dec
mov
ds
lock
je
mov
inc
sbb
dec
push
add
dec
jge
das
inc
xor
mov
jmp
popa
xchg
sahf
in
fstl
or
jmp
add
mov
es
jmp
popa
mov
xchg
inc
mov
call
add
mov
cmpsb
test
call
popa
adcb
bswap
call
popf
mov
mov
in
shll
pop
stc
xchg
ret
xchg
lods
fistpl
nop
mov
in
int
xchg
fwait
mov
pop
jno
rclb
and
jno
clc
mov
mov
and
jmp
dec
inc
adc
jp
rclb
pop
stc
add
push
cmp
mov
in
mov
push
cmpb
pushf
fbstp
cmp
xlat
addl
popa
hlt
popa
xchg
push
cmp
and
into
mov
aam
lods
jns
mov
push
add
scas
or
or
hlt
popa
or
cmp
sub
mov
aaa
aam
imul
mov
mov
xchg
pop
dec
or
aaa
out
fstpl
and
pop
imul
cmp
pop
aas
pop
mov
stos
pop
rolb
loopne
sbb
and
out
repnz
adc
movsb
jmp
sbb
add
push
shll
fidivrs
pusha
sbb
std
test
push
nop
inc
push
jno
sbb
lea
sub
rolb
push
in
mov
jecxz
adc
loopne
outsl
jmp
cld
sbb
ret
mov
mov
sbb
sub
nop
inc
push
jns
in
mov
dec
and
rolb
push
jmp
sub
fdivr
jno
roll
or
popf
sbb
popa
scas
sub
int
daa
mov
shrb
xchg
outsb
pushf
xchg
nop
inc
mov
mov
cs
stc
or
mov
fidivrl
out
or
into
sub
test
jae
roll
hlt
add
and
je
pusha
xchg
fwait
jle
dec
mov
mov
std
stos
rolb
cli
clc
sub
fucomi
jo
loope
stc
pop
pushf
add
into
lods
ret
mov
xorl
imul
jbe
out
add
mov
inc
mov
jl
andb
sbb
sub
pop
insb
jbe
popa
test
pop
sbb
mov
std
xor
and
cmp
jne
mov
pop
imul
cmpb
clc
mov
shll
cltd
adc
or
lret
and
cmpsl
or
leave
nop
mov
sbb
out
add
or
inc
or
sub
sbb
sub
mov
cmp
adc
ljmp
push
es
sub
jbe
jns,pt
mov
adc
es
dec
adc
bound
lods
mov
stos
mov
ret
adc
sub
lcall
add
rcll
dec
adc
or
mov
push
jb
jp
adc
jge
and
repz
dec
fdivs
pop
xchg
scas
movl
lods
sub
cltd
mov
push
nop
repz
xchg
or
fnstsw
daa
ljmp
pop
or
mov
or
adc
je
movsl
lret
mov
stos
sub
and
jo
test
cmpsl
xor
fistpll
cltd
fmul
xchg
pop
add
sbb
mull
mov
mov
cmp
lock
cmp
loop
sti
pop
xchg
lods
sub
dec
add
lods
xchg
add
cmpsb
mov
scas
sub
ffreep
xchg
push
push
sbb
jnp
jbe
bound
adc
jg
push
adc
adc
fs
xor
popa
hlt
int
cs
cmp
and
leave
cmp
or
adc
insb
call
aas
mov
xchg
inc
cmpsb
inc
cmp
xchg
inc
adc
push
jecxz
push
xor
mov
mov
adcb
push
push
loop
mov
popa
mov
movsb
mov
add
cltd
pop
shlb
lret
fsubl
mov
divl
pop
dec
in
sbb
aas
adc
jnp
dec
adc
push
lods
add
scas
andb
mov
ret
fcoml
cmp
bound
ss
jns
inc
out
imul
addb
lcall
aam
les
outsb
out
scas
fmulp
xchg
daa
mov
imul
xor
push
mov
xchg
inc
subb
hlt
pushf
cs
adc
roll
scas
dec
ds
or
sbb
push
sbb
mov
cmovno
mov
push
ret
cmp
jg
ret
adcb
mov
xchg
fcoml
stos
or
rorl
bound
mov
pop
mov
push
or
add
jb
and
xor
scas
mov
mov
movsl
pushf
inc
pop
aaa
cmpsb
sbb
inc
adc
fistpll
sahf
inc
ds
mov
aas
lea
leave
xchg
fistpll
loopne
adc
leave
xchg
xor
fisubs
repnz
mov
out
pop
std
sbb
mulb
inc
jg
leave
cmp
jne
adc
push
jle
pusha
inc
mov
js
addr16
shll
push
cltd
xor
add
jbe
jg
push
adc
stos
mov
imul
xor
mov
pop
push
mov
hlt
test
xchg
add
hlt
pop
rclb
out
or
stos
das
cmp
fsubl
sub
jmp
cmp
negb
sub
fidivl
cmp
int
das
imul
std
jmp
sub
je
iret
cmpsl
inc
adc
ret
nop
inc
imul
fwait
inc
push
das
loopne
lods
lcall
cmp
xor
and
push
lock
rorb
roll
push
lret
add
mov
sbb
pop
clc
popf
inc
push
cmp
jns
lock
aam
and
lods
inc
imul
jecxz
xchg
xchg
adc
scas
out
mov
mov
shrb
or
sub
mov
clc
mov
je
push
movsl
jbe
add
pusha
sub
push
mov
hlt
pop
jne
xchg
inc
xor
das
insl
call
pop
add
dec
or
gs
jns
jnp
or
xlat
add
fstps
or
add
push
sbb
sub
fildl
insb
cmp
lret
gs
cmpsb
lahf
jne
push
lahf
iret
cmp
sub
inc
or
and
popf
inc
xchg
push
dec
les
lcall
test
insb
movsl
sub
mov
iret
xchg
aaa
xchg
xchg
xchg
aaa
shrl
xchg
xor
lcall
mov
out
add
stos
cld
mov
in
jae
lret
orb
ss
ret
lea
bound
dec
and
xor
inc
or
adc
ret
or
pusha
negb
jne
scas
out
outsb
repz
pop
push
adc
mov
xchg
jl
loope
push
jl
lods
lods
inc
mov
xor
test
adc
adc
push
and
sub
and
cmp
je
push
mov
jle
mov
int
fdivrs
adc
fwait
jp
mov
ss
arpl
xchg
stc
rcll
ljmp
fadd
clc
pop
dec
add
cmp
movl
xor
movsb
sarl
cld
sub
mov
movsb
sub
xor
gs
movb
pop
jmp
inc
scas
xor
xlat
add
movsb
inc
add
shlb
loop
pop
clc
aam
xor
push
jb
push
enter
popf
adc
cmpsb
arpl
sbb
sub
push
add
xor
pop
mov
mov
in
outsb
push
inc
je
loope
fwait
aaa
cld
cmpsb
xor
push
movsb
movsl
add
pop
mov
mov
mov
rol
fildll
push
mov
xor
addr16
cmp
add
pop
and
aaa
mov
loope
dec
push
popf
add
xchg
int
jecxz
or
fimuls
mov
pop
mov
mov
inc
adc
xor
push
add
lock
add
lahf
shlb
rcrb
dec
ret
bound
fnstsw
ja
in
repz
push
out
mov
mov
mov
movsb
xchg
push
incl
pop
stc
fwait
dec
or
call
jae
xchg
xchg
sub
enter
hlt
jmp
and
shll
cltd
or
int
pop
push
clc
inc
dec
xchg
cmp
xchg
and
xchg
mov
sbb
out
pop
cmpsb
or
into
pusha
xor
mov
mov
and
jp
mov
dec
or
mov
cwtl
das
sbb
es
jge
dec
scas
mov
insb
sub
flds
jecxz
inc
or
push
aam
jns
jns
push
int
adc
inc
or
inc
inc
or
or
stos
test
pop
cmpsb
mov
loopne
mov
scas
lds
push
or
mov
mov
fdivrl
pop
arpl
pop
dec
push
add
mov
movsb
in
stc
jnp
mov
jecxz
inc
jae
sub
xchg
sub
loopne
dec
mov
stos
mov
scas
or
jle
sbb
push
insl
arpl
dec
sbbl
sbbb
dec
adc
inc
mov
push
xchg
lret
mov
cmpsb
jbe
inc
or
cmp
loopne
lahf
loope
push
enter
aas
fistpll
movsb
mov
or
std
sahf
jl
scas
in
and
mov
dec
xor
xor
pop
adc
mov
xlat
movsb
fidivrl
or
mull
xor
jnp
and
jle
mov
mov
cmpsb
mov
mov
out
sub
add
lcall
fildl
jle
cwtl
mov
xchg
adc
jnp
stos
int
inc
push
aas
lahf
enter
mov
stos
sub
stc
lret
xchg
lret
mov
dec
xchg
inc
inc
pop
and
mov
mov
scas
sub
cmp
or
into
mov
push
xchg
inc
push
lock
dec
pop
xor
jle
adc
push
bound
je
inc
xlat
add
pop
les
in
sbb
les
mov
test
xchg
cmp
fwait
enter
and
outsl
clc
cmp
xchg
aaa
xchg
sti
pop
out
lds
xor
movsl
loop
pop
cld
push
je
or
insl
in
into
jnp
insb
and
inc
jle
add
repnz
pop
add
xchg
jns
les
sahf
inc
ret
ficompl
lret
lea
int
push
mov
pop
fmull
std
data16
jns
cli
data16
dec
ljmp
iret
repz
notb
pop
imull
mov
iret
data16
cmp
adc
js
inc
jge
mov
lods
xchg
inc
mov
mov
scas
repnz
dec
mov
ret
aas
add
and
fidivrl
fbstp
push
add
fcom
jmp
repnz
pop
in
pop
pop
nop
gs
push
negb
adc
or
stc
sbbl
lcall
mov
pop
in
js
jmp
daa
push
repz
cltd
jg
hlt
sbb
pusha
jmp
dec
jecxz
out
sub
es
and
jae
test
xor
xchg
in
pop
pop
jns
mov
adc
mov
push
add
add
mov
fidivrs
outsl
ljmp
mov
push
add
pop
sti
pop
xchg
test
or
mov
mov
xchg
mov
mov
xor
add
mov
push
cli
shrb
lcall
into
add
cltd
add
add
adc
iret
xchg
test
mov
cmp
jecxz
sarb
cld
jno
iret
fstpt
movsb
pop
das
lods
sub
xor
nop
and
in
rcrb
mul
jb
cmc
add
xchg
mov
aad
xchg
xchg
sbbl
sbb
or
std
push
aad
addr16
mov
inc
mov
pop
hlt
in
mov
lock
insb
int3
pop
dec
js
push
lds
jbe
xor
xchg
inc
sub
dec
pop
xchg
movsb
das
jle
cmc
pusha
xchg
arpl
js
iret
jo
pushf
ss
test
mov
jl
das
leave
mov
scas
mov
add
test
mov
sub
cmp
lret
jno
sbb
cltd
cmp
inc
mov
sub
sub
fdivrs
jl
add
pop
sahf
cmp
scas
insb
jmp
inc
add
pop
imul
dec
push
ret
push
xchg
inc
dec
sbb
jmp
aad
sti
pop
jno
fdivrl
outsl
fwait
cmp
iret
stos
sub
fdivrl
icebp
jecxz
and
cmp
pop
add
cli
bound
jle
jno
add
es
shlb
ss
pop
popa
movsb
je
cmc
pop
imul
ljmp
xor
mov
lods
cwtl
mov
inc
or
and
fadds
xchg
inc
pop
add
les
mov
pop
mov
pusha
out
xlat
ret
scas
cs
push
ja
jle
mov
movsb
icebp
pop
nop
or
cmp
push
je
inc
les
push
sbb
lcall
xchg
inc
mov
push
add
lods
xchg
inc
or
push
inc
adc
movsl
js
xchg
das
sub
stc
int
cmp
mov
mov
push
cmp
mov
fisubrl
or
mov
push
jl
js
sbb
xor
mov
sub
ljmp
dec
pusha
jmp
mov
inc
or
fimull
xor
mov
je
xchg
fs
xor
lock
adcb
scas
sub
and
movsl
cmp
sbb
xchg
rclb
fstpl
scas
sub
outsb
jmp
cmp
outsl
xor
dec
jbe
mov
or
das
leave
push
fstpt
push
mov
xchg
lea
sbb
test
ljmp
ja
int
mov
inc
adc
cmpsl
xor
lods
inc
fcmovnu
test
mov
stc
nop
fdivs
mov
das
mov
test
or
cmpsb
cs
sbb
mov
dec
adc
cmp
sbb
pop
pop
add
dec
and
loope
mov
pop
add
xchg
movsb
daa
repnz
push
out
aaa
addb
pop
mov
sbb
std
stos
and
insl
test
jo
leave
push
add
mov
outsl
or
xlat
xchg
push
sahf
cmp
sbb
jae
cli
inc
dec
or
movsl
xor
movsb
xor
ss
mov
pusha
cli
jg
sbb
in
in
jno
or
enter
lret
adc
pop
cmp
and
into
repnz
fnstenv
mov
shll
fs
or
lret
jg
in
loop
push
int3
and
jg
lea
fidivrl
shrb
js
xchg
sbb
vcvttss2si
inc
and
stos
sbb
in
push
dec
lcall
rcrl
shll
out
jbe
cli
faddl
push
pop
cmp
adc
xchg
dec
add
lahf
out
mov
xlat
jl
mov
out
jno
out
imul
jo
hlt
arpl
mov
cwtl
cmp
push
je
mov
mov
mov
stc
pop
jp
cmp
inc
ret
sbb
repnz
imul
leave
popf
inc
xor
ret
and
sbb
xchg
test
xchg
push
ret
mov
cs
mov
dec
pop
and
icebp
pusha
les
jb
pop
pop
cs
mov
rclb
rolb
pop
test
push
xsha1
cmpsb
dec
jb
loopne
outsb
cltd
inc
and
pop
add
xchg
and
mov
mov
mov
xor
dec
push
lret
es
jo
pop
xchg
cmp
lret
enter
dec
pop
aas
sahf
lahf
cltd
jnp
dec
enter
xchg
in
xlat
std
pop
xchg
jge
cli
in
es
cmpsl
cmp
mov
je
xchg
out
sub
sahf
ds
xor
push
fcmove
aaa
movsl
stos
add
fcos
mov
xor
mov
cmp
mov
mov
jne
scas
ds
xorb
ror
add
xor
sub
mov
daa
mov
shll
mov
cmpsb
dec
push
call
cli
mov
jge
jle
pop
ljmp
out
push
pop
pop
scas
xor
nop
lods
xor
xchg
or
insb
pop
movl
xchg
pop
or
push
scas
stc
mov
stos
mov
or
jg
push
out
imul
outsb
dec
xor
je
enter
or
daa
addr16
std
inc
inc
mov
gs
mov
dec
imul
mov
push
inc
es
ret
mov
into
inc
fcmovnu
test
or
daa
je
lahf
shlb
xor
mov
jo
out
adc
sub
adc
jge
pop
dec
aad
sbb
inc
or
add
out
popa
sbb
into
cmp
push
in
int3
aad
sub
loopne
sarb
cli
pusha
lds
lcall
mov
ja
jns
mov
dec
adc
les
sub
sbb
jne
or
dec
arpl
push
jge
sbb
dec
leave
xchg
ljmp
enter
and
and
outsl
push
mov
push
js
stos
cmp
imul
and
jl
icebp
ljmp
aad
loope
sahf
and
aaa
or
xor
mov
stc
sub
xchg
jmp
jcxz
push
mov
stos
push
push
clc
lea
negl
jae
into
les
pop
lret
les
adc
xchg
iret
xchg
mov
ret
inc
or
cmp
arpl
lret
test
adc
cld
pop
loop
sbb
inc
sti
sub
test
icebp
bound
lret
bound
ret
xor
push
rcrl
ret
stc
inc
pop
sub
and
setae
pop
rorb
hlt
popa
pop
mov
adc
xchg
push
xchg
inc
fsubrs
fbstp
jecxz
ljmp
out
f2xm1
rorl
xchg
dec
mov
aas
mov
xor
push
mov
in
push
repz
inc
add
scas
jb
negb
push
pop
push
in
aaa
pop
add
stc
xchg
xchg
mov
mov
push
push
fistl
mov
jns
std
pop
lods
insl
jmp
or
fadds
pop
call
push
leave
or
into
inc
or
in
xchg
lcall
mov
outsb
dec
addr16
mov
stos
orl
lret
mov
or
lahf
cmp
xlat
test
loopne
push
into
mov
movsl
sub
xor
mov
add
dec
rcrl
xor
pop
cli
enter
test
mov
push
enter
dec
ret
out
jecxz
out
rclb
mov
adc
push
push
mov
jnp
mov
out
es
mov
mov
cwtl
pop
ljmp
repz
mov
inc
ficoms
jns
loopne
je
add
lods
xor
test
cwtl
xchg
mov
rorb
sahf
rcrl
std
mov
movsb
mov
lods
sub
loope
dec
mov
cmpsb
push
add
xlat
xorl
icebp
push
push
adc
dec
cmpsb
das
incl
inc
int
add
orb
int
rcrb
mov
cmpsl
mov
mov
cltd
cld
stos
pop
add
in
cltd
inc
gs
pop
add
lret
xchg
mov
push
stc
xor
xchg
cmp
test
mov
push
adc
inc
xchg
push
xchg
fiaddl
popa
push
clc
cmp
bswap
pop
sub
mov
popa
push
mov
lock
push
fsubr
daa
mov
adc
leave
cmp
adc
js
roll
add
xchg
inc
rcrb
outsl
insl
or
adc
push
mov
ret
mov
jo
xor
jns
push
leave
mov
mov
inc
fs
jecxz
inc
paddsb
mov
push
icebp
add
push
inc
daa
adcl
dec
mov
dec
push
add
push
xor
mov
in
and
cmp
std
xor
cmpsl
inc
inc
or
out
push
jne
fs
dec
adc
clc
sbb
mov
loop
test
imul
orb
mov
addl
jne
fsubrl
xlat
add
jne
add
ss
mov
pop
in
inc
fstps
jl
xor
push
ljmp
cwtl
inc
mov
pop
add
or
sub
add
repz
mov
sbbl
sub
out
aam
ret
xchg
mov
popf
inc
jne
pop
add
push
and
push
cmp
jb
inc
in
jb
sbb
loopne
dec
push
sub
fiaddl
and
xor
push
sbb
sub
rcrb
push
sub
sbb
sti
cmp
push
sti
sub
ret
fwait
ds
dec
int
hlt
adc
dec
adc
fiaddl
ss
add
ljmp
pop
mov
dec
fwait
inc
cli
mov
push
cld
stos
jg
mov
mov
push
mov
fdivrl
or
addb
test
and
repnz
or
fisttpl
add
mov
jo
stos
das
cmpsl
push
cmp
jns
daa
in
mov
mov
mov
loop
test
repz
les
loopne
arpl
aas
push
std
lods
mul
push
mov
inc
adc
hlt
js
mov
cmpsl
jecxz
mov
push
add
stos
xchg
cmp
add
jmp
fstpt
mov
sub
aad
sbb
xchg
or
insl
nop
push
stc
inc
jg
or
and
mov
push
decb
pop
push
sti
mov
cmp
out
inc
xchg
fdivr
xor
push
cli
add
xor
int3
or
cmp
addb
outsb
repz
rcrl
xchg
xchg
push
addr16
test
mov
sbb
pusha
in
ffreep
adc
push
push
add
les
mov
movsl
xchg
inc
jae
sub
and
imul
jle
lds
adc
dec
fs
xchg
push
jle
or
imul
sub
in
out
push
jl
int
dec
out
je
outsl
pop
ret
dec
cwtl
mov
lods
test
xor
insb
in
cld
cmp
js
enter
mov
roll
inc
push
lcall
or
cld
pop
jl
add
subb
cmp
and
imul
mov
push
pushf
sbb
mov
lock
repz
mov
sti
jp
jge
pop
imul
dec
pushf
pop
std
mov
movsl
inc
adc
into
mov
or
ljmp
aam
fidivl
scas
inc
xlat
cmp
adc
je
inc
jle
push
popf
push
std
push
xchg
je
test
and
push
fldl
mov
mov
pop
inc
out
fldlg2
xchg
push
cli
inc
stc
xor
int
cmc
pop
sbb
dec
xchg
inc
cmp
es
ret
sahf
push
ds
push
lds
scas
mov
ss
out
movl
lds
adc
add
mov
or
int
push
leave
cmp
mov
sub
out
dec
cmp
dec
push
inc
xor
js
xchg
or
in
and
jmp
add
mov
inc
jle
pop
sbb
pop
out
sub
cs
shlb
jge
mov
mov
cmp
cmp
imul
adc
mov
cli
fstps
scas
out
lods
xor
mov
fadds
ds
roll
mov
call
or
mov
push
pop
std
sti
lock
cld
mov
out
pop
ror
mov
daa
mov
jb
imul
mov
adc
push
dec
ret
nop
icebp
push
dec
or
aam
mov
adc
test
mov
or
pop
push
jmp
roll
cld
xchg
xchg
shl
js
push
bswap
arpl
in
out
jg
fsts
mov
cmp
test
ja
pushf
cmp
push
lea
repz
lahf
lock
or
int
mov
adc
fnsave
stos
mov
or
lcall
lds
lds
imul
fs
ljmp
or
jg
stos
xor
aaa
lods
outsb
pop
add
xchg
cmp
arpl
arpl
xorl
fs
add
scas
sub
mov
mov
fldcw
jge
pop
jl
popa
lret
sbb
pop
sbb
mov
and
or
and
dec
fwait
mov
push
cmp
push
cli
dec
sub
lods
cwtd
jle
push
jae
ret
xor
es
xlat
xor
pop
push
lock
fiaddl
pop
int
and
sbb
push
sbb
jl
mov
mov
test
mov
icebp
adcb
outsl
out
add
mov
gs
ljmp
inc
gs
int
data16
xor
mov
xchg
ret
xchg
in
fnstenv
aas
popf
in
push
pop
sti
ret
std
mov
mov
xor
rcrl
or
fstpl
pop
sbb
cmc
out
outsb
ljmp
add
into
jbe
and
adc
and
mov
jnp
push
sub
push
cmpsb
lea
popf
mov
daa
in
test
cld
mov
inc
call
sti
pop
push
jno
daa
mov
push
jl
mov
dec
cvtps2pi
add
mov
pop
dec
or
out
jecxz
push
rep
jp,pn
dec
or
addr16
pop
jp
test
addr16
out
xchg
dec
or
xchg
sti
jo
scas
in
mov
and
movsl
xor
push
out
lcall
ss
dec
shll
mov
mov
cli
pop
mov
mov
jmp
sub
mov
lret
outsb
repz
test
enter
sbb
mov
mov
mov
and
inc
push
xor
iret
leave
cmp
mov
jb
ds
cld
incl
lods
sub
push
and
fadds
push
jp
mov
ret
sub
xchg
insl
testb
add
xor
sbb
jo
sbb
or
adcb
addl
cwtl
inc
adc
or
ret
mov
out
popa
in
outsl
hlt
jecxz
sarb
sbb
dec
mov
mov
daa
sub
mov
cmp
les
mov
fs
dec
adc
fidivrs
cmpsb
fldcw
sbb
mov
stc
mov
shl
mov
dec
fsubl
adcb
clc
pop
pop
cltd
xchg
sbbb
shll
leave
mov
lcall
add
test
cmp
push
das
and
sahf
inc
jmp
jbe
lcall
lahf
push
xorb
das
outsl
push
idivl
stos
movsl
sub
loopne
and
dec
movsl
xor
cmp
dec
sub
lea
cltd
cmp
test
mov
leave
lock
popf
xchg
movsl
enter
rorb
mov
roll
int3
xchg
popf
or
and
outsl
ljmp
icebp
fs
es
fmull
xchg
fmull
add
and
xchg
mov
jns
or
pop
mov
popf
pop
adc
inc
rcrl
std
adc
jbe
loope
jmp
ja
xchg
test
mov
xor
xchg
mov
sbb
aas
mov
gs
pop
add
ja
movsl
xor
pop
lret
andl
insb
movsl
decb
adc
aad
lret
cs
iret
std
cmp
pop
mov
xor
je
int
add
or
add
dec
movsb
push
mov
insb
sbb
shll
mov
pop
icebp
jns
pop
icebp
inc
lcall
xchg
in
xchg
sub
jmp
or
imul
out
xchg
mov
mov
cmp
movsl
push
adc
mov
fisttpll
push
test
push
add
dec
mov
adc
cmp
mov
ret
cmc
les
jl
ja
dec
loop
jp
xchg
add
mov
out
push
mov
jne
shll
pop
out
clc
xchg
pop
icebp
ret
sbb
dec
in
movhps
sub
aaa
xchg
sub
repnz
inc
fst
imul
xor
xchg
push
movsl
jmp
push
movsl
mov
sub
ret
push
pop
dec
loop
daa
dec
loope
mov
add
jns
ljmp
lret
xchg
mov
movsl
cmp
stos
les
jno
pop
mov
notl
xchg
sbbl
push
mov
push
mov
hlt
cmp
and
inc
pop
icebp
ja
pop
repnz
cwtl
js
lret
adc
mov
cs
mov
jo
mov
cmp
aam
in
xchg
scas
repnz
aaa
push
movsl
push
mov
mov
fisttpl
or
dec
in
sub
imul
addb
jle
movsb
cmp
es
repz
loopne
lods
inc
jecxz
js
xchg
lcall
sbb
mov
jae
shlb
pop
lock
cmovns
jns
adc
sub
mov
lock
push
fcmovbe
push
gs
mov
mov
mov
lds
shrb
jecxz
and
loop
scas
push
loope
imul
xor
xchg
sti
push
cmpsl
xchg
cmp
fisubrl
pop
mov
ret
loop
cmc
dec
add
inc
mov
pop
mov
repnz
aam
inc
pop
bnd
pop
repz
jns
enter
xchg
jmp
cwtl
das
in
mov
outsb
push
mov
cmp
aad
mov
icebp
mov
data16
test
mov
or
imul
sub
push
mov
mov
jl
movsl
cmp
sahf
test
shlb
pop
and
js
inc
in
jbe
call
enter
push
jmp
cmp
mov
les
cmc
lea
push
jns
dec
fistpll
adc
cs
xor
dec
out
test
imul
imul
repnz
mov
cmpsl
call
or
cmp
lds
pop
dec
in
and
scas
imul
je
add
mov
stc
push
test
xchg
cmpsl
ds
cmpsl
pop
fldcw
pop
lahf
cli
in
sub
jecxz
repz
add
inc
lahf
and
xchg
icebp
ds
mov
pop
repz
pop
hlt
cmp
jp
pop
jnp
sbb
mov
insl
add
dec
ss
imul
insl
mov
repnz
stos
hlt
mov
xor
cmpsl
gs
adc
mov
mov
push
pop
cmc
insb
add
jg
pop
mov
mov
jp
cmpsb
cmp
into
and
pop
and
jns
inc
in
je
add
push
pop
mov
out
mov
jno
aam
cmp
aad
ret
pop
repnz
mov
adc
jp
punpckhwd
das
bound
dec
mov
aad
inc
aam
or
mov
mov
test
jl
cmpsl
lods
or
cmp
vcvtsd2ss
mov
dec
in
lods
insb
add
jb
add
mov
clc
push
test
test
test
dec
movsl
pop
xlat
insb
pop
sahf
clc
in
sub
in
repnz
add
inc
popf
and
xchg
out
ds
mov
pop
repz
pop
cmc
cmp
jl
mov
cwtl
das
sbb
mov
imul
push
xor
push
xlat
outsb
mov
repnz
stos
cmc
mov
xor
cmpsl
arpl
adc
mov
xor
adc
jecxz
mov
push
pop
hlt
insl
add
jge
pop
scas
inc
mov
jns
cmpsb
cmp
int
les
out
pop
and
jns
inc
in
jae
add
lds
mov
out
mov
mov
rcrl
mov
mov
fdivrl
push
addr16
das
cltd
das
cltd
xor
mov
in
xorb
aas
aad
insb
pop
popa
repz
mov
test
jnp
test
push
xor
aaa
int
pop
dec
in
pop
dec
in
stos
insb
add
jno
add
lds
aas
sbbb
inc
dec
mov
pop
popf
mul
jnp
mov
add
inc
fwait
and
xchg
in
ds
mov
xlat
call
or
cmp
jge
in
das
push
scas
fwait
xor
aaa
mov
imul
aam
mov
mov
test
adc
sub
dec
xor
jg
dec
jecxz
mov
push
pop
rep
add
lods
inc
mov
js
cmpsb
cmp
int3
and
pop
push
in
enter
loop
cmpsl
inc
out
jb
add
les
pop
mov
in
mov
sahf
aaa
inc
xlat
push
mov
mov
fstpt
gs
das
xchg
cs
cmpl
insl
push
pop
repz
mov
test
jp
test
xor
push
dec
in
push
dec
out
test
add
jo
add
sti
mov
sub
dec
test
adcb
inc
dec
mov
enter
in
es
add
inc
cltd
and
xchg
jmp
aad
mov
fsub
cmp
pusha
idivl
jp
rcrl
mov
cwtl
das
adc
pushf
xor
xor
mov
imul
repnz
adc
sub
lds
rorl
mov
push
push
repnz
push
and
mov
stos
inc
lea
int3
cmpsb
cmp
lret
pop
push
jmp
pusha
sbb
ds
jo
add
ret
mov
jecxz
mov
pushf
xor
pop
repz
xchg
mov
fnstcw
or
xor
mov
dec
call
or
insl
cmp
xlat
outsb
add
hlt
mov
mov
test
test
lret
sti
push
dec
out
sbb
out
cmpsb
insl
add
outsb
outsb
add
sub
mov
hlt
dec
test
inc
inc
lahf
pop
shrl
pusha
lcall
jle
inc
add
inc
xchg
and
xchg
jmp
inc
fxam
cmp
insb
push
popa
clc
aaa
lea
mov
loopne
xor
lods
popf
xor
xor
push
xor
fnstenv
mov
testl
sub
xor
jl
dec
in
sahf
push
call
push
lock
push
and
and
lret
cmpsl
ds
xchg
stos
inc
enter
push
jmp
in
movsb
cmp
jle
lds
cltd
testb
mov
adc
fwait
xor
fs
pop
divb
xlat
jge
or
xor
mov
push
scas
or
outsb
cmp
xlat
outsb
add
mov
cmc
mov
adc
cmpsl
add
leave
xor
xor
stc
push
push
out
sbb
dec
movsl
outsb
add
sahf
clc
mov
sub
mov
repnz
stos
inc
jge
stos
inc
inc
sahf
enter
leave
pusha
cwtl
icebp
out
and
add
jne
push
popf
ds
and
nop
call
inc
cmp
imul
xor
push
jg
mov
lcall
xor
push
das
xchg
insl
mov
fxtract
mov
movsb
testl
sub
mov
xor
jp
dec
in
pushf
push
call
push
out
outsl
push
and
and
lret
cld
xchg
stos
inc
sbb
leave
pusha
sbb
jl
cmp
jle
les
lcall
and
adc
xlat
lcall
cmc
in
sbbl
or
jge
pop
popa
fwait
xor
mov
push
out
mov
outsl
cmp
xlat
outsb
add
lea
scas
adc
fbstp
movsl
add
lret
xor
notl
call
dec
movsb
outsl
push
push
add
sub
stos
inc
jl
stos
inc
inc
popf
leave
pusha
iret
fs
pusha
xchg
lock
and
add
popf
cmp
and
mov
inc
fcomps
mov
fabs
cmp
push
popa
clc
xor
jg
xchg
fwait
xor
test
xor
xor
push
sub
dec
fnstenv
fdiv
mov
mov
adc
es
enter
lret
dec
out
lcall
push
in
outsl
push
push
jbe
and
leave
test
inc
les
pop
dec
in
pusha
pop
jo
jge
cmp
jle
ret
add
hlt
mov
mov
push
push
inc
fsubs
pop
imul
sbbl
sarl
add
es
xor
mov
push
stos
push
fnstenv
int3
xlat
outsb
pop
testl
fnsave
stos
mov
lds
leave
notb
call
dec
mov
outsl
push
fwait
cmc
lea
mov
stos
inc
jp
lods
inc
inc
fwait
leave
pusha
int
lret
out
out
and
add
sahf
cmp
and
fcoms
scas
inc
aaa
pop
imulb
stc
xor
adcb
fcompl
xor
popa
cli
mov
outsb
mov
fidivl
cmc
mov
mov
adc
and
inc
xor
ja
dec
out
cwtl
push
jmp
push
ljmp
cmpsb
cmp
stos
inc
stc
nop
lods
inc
ret
pusha
dec
jecxz
popa
adc
ss
pushf
repnz
popf
mov
or
inc
fsts
mov
pusha
divl
sarl
add
xor
and
xor
mov
push
test
lret
cld
push
clc
mov
push
lods
lods
mov
ret
xor
hlt
dec
push
jmp
inc
mov
jo
cltd
repz
in
inc
lods
inc
js
lods
inc
inc
cltd
lret
popa
lret
bound
mov
and
push
popf
jo
or
ret
mov
adc
inc
fcmovnu
xor
stc
xor
adcb
fistpl
xlat
cs
push
sub
fidivl
aad
lea
lahf
clc
shrl
adc
pop
repnz
lods
and
leave
lods
inc
xor
jne
push
out
xchg
push
jmp
push
call
lea
stos
inc
clc
mov
dec
loope
popa
adc
jg
xor
jg
rolb
icebp
xchg
popf
mov
fldenv
or
ficoml
mov
clc
call
or
adc
and
loop
mov
jb
enter
push
stc
nop
mov
testl
lahf
sti
xor
lret
push
ljmp
jno
shll
pop
xchg
repnz
es
mov
ja
lods
inc
ds
lret
lret
bound
mov
and
pop
sahf
outsl
push
or
rcrl
mov
inc
ficoml
stos
inc
fcmovnu
xor
clc
gs
stc
xchg
mov
ficompl
xor
pop
idivb
mov
fidivl
aam
mov
popf
clc
iret
daa
adc
lods
and
lret
xor
jae
push
call
lds
jo
push
out
pop
sbb
and
imul
inc
testl
popa
adc
sahf
xor
jg
mov
push
popf
mov
es
or
xchg
sub
pop
mov
stc
out
pusha
imull
jle
lcall
lea
popf
xor
scas
mov
push
movsl
add
jae
fnstenv
push
cli
xchg
xchg
clc
dec
cmpsl
sbb
popf
stc
ss
mov
push
jmp
adc
inc
popf
jb
iret
arpl
xchg
lock
daa
and
scas
inc
jne
scas
inc
cmp
int3
arpl
pop
int3
arpl
mov
and
add
mov
mov
loopne
fistl
test
stc
arpl
arpl
sub
adcb
dec
sbbl
or
mov
push
es
jno
inc
sar
popl
stc
nop
int
push
lods
push
out
pop
scas
pop
js
lret
test
lret
sti
xchg
push
ljmp
jno
push
jo
mov
ret
lods
inc
cmc
mov
arpl
lret
bound
push
sbbl
pop
sahf
mov
daa
mov
push
bound
xchg
daa
inc
ficompl
arpl
in
popa
clc
stos
push
sbbb
lret
jg
std
pop
mov
xor
fidivs
push
mov
notl
xchg
test
stc
nop
dec
movsl
sbb
pushf
divl
int
mov
push
jmp
adc
fwait
jb
int
jb
xchg
out
nop
daa
and
scas
inc
jae
scas
inc
cmp
fs
ljmp
cmp
lahf
imul
mov
mov
fiadds
test
fstp
xor
popa
cli
fs
sub
sbbb
sahf
xor
shrb
mov
push
and
inc
fdivl
sar
popl
lcall
push
in
sbb
cmpsl
aas
ss
enter
xchg
push
jmp
sbb
dec
jecxz
or
ss
daa
push
mov
arpl
int3
arpl
push
ljmp
orb
mov
daa
mov
add
es
fistl
arpl
jecxz
stc
test
lret
cld
push
mov
ss
stos
mov
push
mov
push
cli
xchg
adcb
xchg
dec
mov
sbb
es
push
jmp
andnps
inc
cltd
jb
lret
popa
jae
xchg
in
nop
daa
push
mov
sub
aas
scas
inc
jno
mov
cmp
into
gs
in
adcl
cmp
lahf
imul
es
test
inc
fisttpl
cs
stc
pop
stc
gs
sub
sbbl
aam
xor
shll
mov
push
and
fidivl
inc
fnsave
clc
popl
cltd
sti
xchg
lret
and
lods
push
in
sbb
movsl
ds
into
outsl
push
jmp
rcrl
or
jae
adc
es
xor
lods
inc
icebp
mov
arpl
fs
cs
pusha
mov
or
cmp
daa
mov
and
arpl
loope
arpl
test
sbbb
leave
sbbl
xchg
aaa
dec
test
push
fisubrl
push
mov
ret
fdivl
dec
cli
xchg
adcb
xchg
dec
mov
sbb
and
aaa
into
in
inc
push
jmp
push
push
in
aas
xchg
jb
leave
pusha
je
xchg
ljmp
out
scas
inc
outsl
pop
mov
cmp
iret
mov
ljmp
or
xor
sub
test
inc
fisttpl
cmpsb
dec
sub
stc
pop
clc
data16
sub
pop
mov
test
jl
sahf
xor
shlb
rclb
fidivl
inc
fidivs
int3
clc
xchg
cld
xchg
leave
pop
pop
scas
push
ljmp
mov
les
cmc
mov
mov
loopne
or
push
daa
pushf
xor
inc
out
xchg
fs
fxch
or
xchg
sub
sbbl
mov
mov
sub
add
lea
inc
fstl
sti
fbstp
sti
cmpsb
add
sbb
push
mov
cmp
push
fsubrs
push
lahf
stc
fnsave
fnsave
sti
xchg
jle
cld
xchg
inc
lahf
sbb
cwtl
icebp
aaa
into
and
push
in
je
push
out
cmp
pop
jne
nop
call
xchg
sub
cmp
dec
aaa
mov
rcrb
mov
jmp
adc
mov
xor
sub
sbb
fmull
movsb
dec
sub
pop
mulb
daa
jle
sbb
rcrl
cmp
and
push
push
out
rclb
inc
fidivs
lret
stc
nop
std
xchg
cld
xchg
push
sbb
sbb
int
cmp
iret
imul
jmp
mov
mov
fidivs
imul
inc
out
test
gs
xlat
into
or
adcl
or
scas
or
sarb
sub
mov
inc
fstl
gs
fidivs
sti
movsb
incl
sbb
push
mov
cmp
mov
push
sahf
clc
fnsave
fnsave
sti
xchg
jge
cld
xchg
inc
sahf
sbb
xchg
lock
into
and
push
in
jae
push
out
cmp
jae
pop
jne
out
sub
mov
sub
cmp
dec
ss
int
mov
loopne
adcb
out
test
xor
mov
das
xchg
mov
sbb
dec
sub
pop
cmc
data16
es
sbb
rcrb
cmp
and
push
and
jb
inc
fidivs
lret
cld
xchg
cld
xchg
sbb
sbb
mov
ret
repz
mov
fnsave
push
xchg
sub
scas
inc
in
xorl
inc
into
or
adcl
mov
lods
pop
sub
cmp
sub
mov
inc
ficoms
gs
fdivl
cld
mov
lds
cmp
mov
rclb
fnsave
fidivs
dec
sti
xchg
jnp
std
xchg
inc
pushf
sbb
xchg
out
aaa
into
pop
mov
push
in
jno
pop
out
cmp
jbe
mov
xchg
sub
mov
sub
cmp
dec
xor
push
shrl
fsubrp
adcb
out
xchg
xor
mov
test
mov
adc
faddl
mov
arpl
pop
hlt
addr16
and
inc
test
into
lahf
add
mov
pop
pop
jne
jb
inc
fbstp
enter
xchg
dec
and
in
or
pop
pusha
cmp
jne
cmp
xchg
push
mov
mov
sub
sti
cld
push
mov
into
push
push
xchg
dec
mov
sbbb
add
add
insl
mov
mov
in
enter
in
pop
xchg
xchg
adc
cmp
or
add
and
js
negb
or
mov
pop
xchg
repz
mov
sti
xchg
addb
mov
cmpsb
ds
xorl
test
fildll
push
sub
fdivrs
repz
lods
test
add
pushf
pop
mov
mov
test
mov
pop
cmpsl
insb
pop
and
sbb
push
ret
nop
aam
mov
cld
pop
out
inc
inc
or
add
push
fmull
mov
add
hlt
lods
sbb
data16
test
das
outsb
loope
jne
push
stos
xchg
xchg
hlt
dec
jle
sub
addr16
pushf
repz
add
sbb
scas
mov
out
and
mov
push
fadds
cld
inc
jns
xchg
mov
ret
mov
out
ja
in
sbb
sbb
insb
lcall
add
pop
push
adc
mov
inc
push
add
nop
jbe
jmp
mov
push
aas
aad
out
jb
sbb
stos
jnp
sbb
inc
adc
std
negb
push
insb
mov
hlt
dec
mov
ret
xchg
arpl
push
les
fdivrl
inc
cmpsl
jo
inc
lret
mov
mov
andl
dec
jb
std
xchg
push
out
add
xchg
xorl
jbe
sahf
push
mov
ret
in
or
out
outsb
mov
bound
dec
fisubrl
or
xchg
jle
mov
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
cs
sbb
cltd
push
in
adc
orl
hlt
dec
testl
mov
fwait
lret
mov
fdivrp
sbb
and
xchg
ret
jp
outsl
test
nop
jno
mov
pop
jbe
mov
mov
mov
push
lods
test
cld
ds
xchg
ret
shll
push
push
jbe
pop
mov
das
std
or
or
sti
int3
jnp
push
movb
sarb
xchg
insb
mov
clc
jno
jp
outsb
out
xor
mov
and
cmp
xorl
jnp
mov
shll
popf
test
bound
mov
or
cld
in
jl
daa
add
jmp
fs
ljmp
mov
dec
cmp
or
mov
int3
mov
xorl
or
test
sub
imul
push
push
jle
xchg
or
in
add
mov
scas
cmp
popa
cmp
mov
iret
lock
push
orw
and
jg
stc
fdivrs
sub
in
clc
pusha
xor
mov
out
push
adc
lcall
stos
cwtl
sub
hlt
mov
xor
cli
sub
mov
xchg
dec
lret
pop
xor
mov
pop
jge
xchg
mov
mov
popf
xor
jno
test
addl
sbb
daa
adc
mov
bound
jne
mov
inc
jb
sub
in
cmp
clc
ret
cli
xchg
cmc
inc
add
cmc
pop
hlt
bound
out
ja
cmp
out
push
xor
pop
add
push
popa
mov
mov
adc
cmp
test
sbb
cmp
shl
pop
inc
in
pop
push
popf
aaa
sbb
mov
in
adc
cmpsb
dec
xor
mov
scas
dec
push
mov
or
icebp
and
adc
cmpb
inc
cld
aad
inc
and
imul
fwait
icebp
adc
dec
xor
mov
xor
mov
xor
or
xchg
iret
cltd
mov
sbb
jae
push
sbb
jecxz
sub
outsb
aad
push
fisubrs
fcompl
xor
jle
rcr
jle
dec
xchg
jne
xchg
mov
call
mov
xor
and
sti
xor
sub
cltd
xchg
cmpsl
stos
shlb
lock
negb
pusha
aad
mov
mov
mov
jne
dec
test
out
adc
icebp
adc
loope
xchg
or
pop
add
dec
mov
pop
cmp
mov
mov
aam
pop
inc
xor
sbb
mov
mov
xor
js
xchg
movsl
stc
jmp
pop
test
jmp
lret
scas
cwtl
insl
mov
popf
adc
push
movsl
cwtl
cmp
addr16
fwait
jb
dec
mov
jb
push
or
fdiv
push
and
adc
insl
clc
or
jo
repnz
nop
xchg
leave
aaa
js
rolb
stos
inc
lret
call
or
jp
inc
mov
std
in
inc
or
xor
cmp
in
hlt
fs
daa
jmp
call
and
outsb
call
pushf
pop
sbb
js
add
fistpl
das
aad
mov
clc
inc
adc
out
mov
cmp
sub
jle
sub
mov
insb
add
mov
pop
int
push
push
pop
mov
notl
mov
push
mov
aad
cmp
bnd
lea
inc
lret
shrl
mov
icebp
scas
sbb
fnstcw
pop
mov
pop
cltd
scas
or
jnp
pop
push
hlt
or
push
bound
lods
push
repz
pop
ja
gs
hlt
sub
sub
inc
xchg
xchg
pop
es
sbb
daa
and
dec
mov
pop
std
js
push
sbb
scas
inc
iret
cmpsb
lret
or
loop
xor
aam
ret
pop
movsb
cmp
jae
aam
sbb
inc
mov
fstpl
add
mov
inc
je
arpl
int
ret
nop
xchg
test
aas
xchg
fwait
mov
out
dec
inc
adc
fsub
adc
movsl
pop
add
aaa
push
adc
enter
add
cmp
adc
out
shlb
cmpsl
dec
push
pop
sarb
lock
cld
nop
mov
pusha
outsl
xchg
lahf
lock
daa
jno
into
mov
scas
fisubl
push
lahf
outsl
xchg
pusha
scas
or
mov
lcall
pusha
cmc
sub
and
jle
test
iret
cmpsl
mov
add
push
in
add
pushf
insl
mov
pop
mov
stos
lods
jbe
repz
imul
sarl
adc
lahf
bound
in
mov
pop
jecxz
insl
in
sub
fdivs
cs
push
push
scas
stc
pusha
sub
mov
dec
push
pop
adc
aaa
or
xchg
test
lret
lcall
js
inc
push
push
pop
push
push
add
or
addr16
or
sti
lahf
dec
addl
loopne
add
mov
fcoml
enter
int3
ss
sbb
clc
testl
push
dec
mov
fidivrl
enter
push
imul
rolb
mov
dec
pop
fcompl
xchg
pop
jns
mov
movsl
push
loopne
sub
mov
sahf
rolb
mov
dec
mov
dec
pop
xor
jg
repz
or
daa
jp
pop
test
idivb
ss
pop
mov
test
in
mov
paddusw
cmp
dec
and
jle
ljmp
jmp
push
push
fisttpll
in
daa
pop
cmpsb
ret
leave
dec
jb
cmp
pop
mov
gs
daa
lcall
loopne
into
mov
pop
mov
daa
in
dec
adc
or
mov
mov
inc
daa
lret
pop
pop
xor
std
sub
pop
lcall
popa
cmp
hlt
imul
in
or
hlt
lret
and
cmp
jle
test
adc
nop
xchg
jo
sub
cmp
mov
mov
jge
fidivrl
shrb
repnz
sar
aaa
repnz
in
xchg
sub
or
add
cmpsb
xorb
test
mov
mov
jge
stos
xorb
lods
test
push
into
xor
inc
bound
imul
adcl
push
mov
jae
out
pop
subl
mov
lock
adc
jp
imull
or
aam
cmc
paddsb
in
dec
loopne
popf
mov
cltd
add
push
pop
sub
loope
inc
xchg
insl
cmp
push
das
roll
rcrb
das
popa
subl
pop
sub
test
fldenv
mov
inc
aas
sbb
test
mov
push
mov
xor
xchg
cmp
aaa
cmp
adc
aam
insl
mov
cmp
jns
out
xlat
jge
pop
xchg
cld
lds
icebp
bound
inc
icebp
ljmp
pop
cmpsl
mov
stc
dec
cmc
push
insl
loop
xor
push
cmp
or
cwtl
mov
pop
std
mov
jle
sub
adc
dec
xor
fsubrl
fs
or
mov
repnz
stos
dec
mov
pop
cmpsb
mov
sahf
jmp
xor
sbb
iret
pop
mov
cmp
je
pop
push
mov
xor
sbb
fcmovbe
fcoms
addr16
iret
push
repz
pop
fdiv
inc
clc
inc
mov
xor
fidivrl
in
jmp
lahf
jl
cmp
in
scas
xor
int3
sbbl
mov
aad
mov
sbb
adc
loop
jle
je
orl
les
sbb
dec
lods
sub
push
hlt
adc
inc
std
adc
frstor
sbbl
mov
popf
iret
or
xchg
xor
out
sub
addl
mov
cltd
pop
lods
lock
int3
lcall
inc
int3
int3
sarb
fiaddl
test
xorb
sbb
outsb
add
mov
inc
je
mov
sti
lret
jg
sti
int
test
cs
or
xchg
addl
