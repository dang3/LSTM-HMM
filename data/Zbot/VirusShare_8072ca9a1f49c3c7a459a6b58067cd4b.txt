add
inc
add
and
rolb
adc
add
mov
and
add
inc
add
add
add
push
or
cwtl
and
sub
add
add
add
adc
add
or
and
pusha
add
or
add
add
add
and
adc
add
or
nop
add
or
test
adc
add
push
or
xor
add
inc
add
or
nop
and
add
and
adc
add
mov
add
add
add
push
add
inc
add
mov
add
add
or
add
add
add
add
adc
pusha
adc
add
inc
add
add
add
add
add
add
add
push
inc
inc
addb
add
or
add
adc
mov
sbb
andb
or
add
adc
add
add
add
and
inc
rolb
add
adc
add
addb
xor
addb
or
andb
adc
add
push
mov
mov
cmpsb
adc
add
cwtl
lea
adc
xchg
or
adc
mov
jg
dec
enter
add
adc
hlt
mov
cmp
pop
jbe
rcrl
cmp
pop
clc
xor
mov
addl
xor
int
out
dec
ds
jg
jne
cld
dec
sbb
sbb
add
add
out
jbe
sub
dec
pop
repz
stos
cmc
inc
or
pop
or
addb
inc
rorb
add
and
lods
mov
xchg
lods
xchg
rorb
inc
addb
rcrb
call
shll
add
jne
pop
push
jbe,pt
cmc
jae
mov
add
pushw
or
pushf
or
adc
add
fs
inc
adc
adc
add
int3
clc
mov
adc
and
jge
or
jg
jp,pt
in
in
mov
cld
add
xchg
or
sbb
adcb
cmp
or
cld
inc
sub
hlt
js
or
pop
int3
nopl
mov
aaa
sbb
adc
add
cmc
int
xchg
mov
add
sahf
fstl
rclb
xchg
ret
cmp
nop
mov
mov
adc
fnstenv
add
popf
mov
mov
in
aaa
push
and
shrl
aam
adcb
add
adc
xchg
jne
add
or
jle
add
jne
int3
adc
adc
mov
jne
aas
mov
cmc
sti
mov
cmp
sub
add
adc
cmp
lahf
push
inc
push
xchg
notb
ds
jg
jne
cld
dec
or
hlt
int3
clc
fidivrs
add
nop
enter
std
mov
ja
add
adc
ret
jg
inc
inc
jnp
add
cmc
push
jmp
or
adc
mov
adc
sbb
int3
add
int3
jno
ret
jg
addl
les
add
test
rolw
add
arpl
add
jg
sbb
adcb
enter
ret
jg
jl
jge
add
jg
rcrb
push
add
mov
jg
sgdtl
push
add
jge
push
std
incb
add
sbb
adc
add
mov
in
aas
adc
jle
sgdtl
aad
add
rolb
add
jns
sbb
hlt
xchg
clc
js
sbb
les
mov
clc
add
or
dec
or
jae
popa
stc
stos
mov
xchg
clc
add
add
mov
or
out
cmp
bswap
inc
mov
mov
xchg
add
sbb
pop
stos
and
add
adc
sbb
adcb
js
lea
add
cs
js
xchg
add
push
movsb
sti
hlt
sahf
hlt
clc
mov
stos
fwait
shrd
inc
add
push
inc
mov
cwtl
jbe
push
rcrl
adc
add
push
mov
hlt
inc
jne
outsl
xchg
clc
mov
sti
jl
clc
push
je
mov
jo
adc
or
rol
mov
mov
aaa
sbb
adc
add
adc
dec
in
sbb
xchg
add
popf
mov
jo
popf
in
jg
mov
add
adc
add
jno
add
xchg
add
or
jnp
pop
sti
scas
sub
push
sbb
aam
or
add
adc
add
adc
std
jno
add
push
jle
jg
add
lahf
ss
dec
add
movsl
js
push
add
push
mov
hlt
ret
cld
fdivs
aas
ljmp
cmpsl
rcrb
adc
addb
or
mov
lahf
fsub
add
xchg
add
adc
hlt
pop
inc
add
xchg
icebp
rolb
inc
jb
xchg
add
adc
mov
xor
dec
adc
add
shl
js
add
stos
sti
inc
shr
jbe
add
aaa
stc
mov
xchg
loop
mov
test
jp
or
add
stos
or
imul
mov
add
int
out
adc
add
dec
ds
jg
add
stos
add
add
test
jge
clc
xchg
adcb
inc
push
rolb
jb
repz
xchg
decl
inc
fisttps
lds
nop
pop
mov
xor
adc
popa
mov
fwait
movsb
loope
inc
rcll
or
cld
adc
neg
out
and
jge
mov
jne
push
jnp
insl
xchg
pusha
adc
add
daa
dec
sbb
cmp
cmp
shrb
andl
mov
icebp
fimuls
sub
mov
mov
sbb
mov
add
imul
out
iret
movl
cltd
mulb
addr16
fistpll
pop
setns
push
stos
movb
negb
rolb
sti
scas
add
mov
iret
sub
inc
push
popf
fwait
mov
sbbb
mov
or
mov
jns
xor
jo
push
stc
aad
ljmp
ficoml
adc
jmp
and
mov
mov
inc
lds
test
gs
sbb
xor
adc
cwtl
push
or
lds
xchg
cli
cltd
notl
inc
fisttpll
mov
jecxz
or
jg
push
stc
xor
inc
sub
sahf
xorb
push
iret
or
pop
jg
je
sbb
mov
ja
xor
les
lret
mov
std
fisubl
mov
push
sbb
pop
add
jae
les
cli
dec
xchg
lods
test
dec
inc
rcrb
out
adc
cmp
cltd
dec
cmpsl
and
cltd
jbe
xchg
add
mov
fs
dec
and
pop
nop
dec
jl
jno
push
push
pop
inc
push
inc
stc
rcrb
xor
stc
jg
popf
addr16
cmp
jb
es
jg
addr16
sub
inc
nop
xor
adc
cmp
sahf
xor
insb
js
sbb
jae
jge
testb
cmp
test
lahf
xchg
add
jl
or
ljmp
clc
jmp
or
leave
sbb
aaa
mov
pushf
aam
jle
andl
push
sahf
sbb
sahf
fists
addr16
jp
and
xchg
add
add
adc
rcrl
and
pop
ret
mov
and
stos
jg
cld
sti
push
jl
dec
cltd
jl
stos
or
std
popf
sar
je
icebp
mov
sbb
bound
fwait
mov
lds
testl
jns
fwait
xor
scas
push
push
fdivs
cmc
push
cmpsl
adc
sub
push
stos
jno
pop
or
es
jp
or
and
cmc
mov
pop
adcl
sub
and
add
mov
xchg
mov
mov
xlat
mov
imul
js
das
arpl
mov
inc
ud0
popf
xchg
int
jns
xchg
cmp
lahf
push
iret
jne
clc
jg
and
out
push
adc
xor
dec
xor
neg
push
icebp
sub
hlt
es
pop
fyl2xp1
and
mov
rclb
dec
jae
push
xor
dec
lods
mov
mov
js
jo
arpl
pop
push
xor
xor
xor
xchg
popf
bound
sub
addb
mov
add
mov
das
sub
xchg
insl
adcb
push
incb
mulps
adc
and
shll
enter
clc
mov
mov
lock
jns
sub
lcall
jbe
or
sbbb
dec
stc
insb
sarl
mov
xchg
pop
xor
les
out
push
pop
adc
xor
das
xchg
mov
mov
popf
mov
leave
pop
lods
sub
or
sub
lahf
add
jl
stos
ja
lahf
dec
jno
sbb
ret
xchg
sahf
into
pusha
jg
add
xorb
out
lds
aaa
jns
cmp
sti
insl
mov
mov
sub
cld
pop
jno
mov
xor
mov
iret
adc
scas
inc
and
adc
mov
imul
mov
mov
inc
mov
lret
test
sbb
insl
shl
js
cwtl
adc
add
xchg
js
sub
imul
or
jle
inc
cmp
adc
lcall
push
das
add
push
test
xchg
mov
xchg
in
cmpb
push
je
scas
repnz
mov
cltd
out
mov
xor
jne,pn
insl
and
das
lahf
pop
inc
pop
nop
jmp
test
cmc
push
dec
cld
fnstenv
test
or
enter
xchg
jmp
nop
scas
js
cmp
fwait
sti
add
cld
inc
mov
out
adc
add
in
aad
add
xor
or
xchg
or
scas
add
movsl
js
mov
add
mov
cltd
jns
les
insl
insl
arpl
imul
gs
mov
mov
jnp
mov
xchg
jno
jns
jbe
jno
jbe
jl
sbb
inc
stos
inc
xchg
icebp
pop
add
mov
enter
shlb
and
aaa
add
stos
adc
jp
mov
roll
add
mov
in
fldt
dec
rol
outsl
jo
iret
inc
hlt
outsb
jl
push
mov
repz
sub
mov
push
xor
ret
sbb
cmpsl
add
cli
mov
jp
lock
pop
jo
inc
or
mov
xlat
sbb
jle
jno
retw
adc
or
lods
mov
pop
cwtl
jg
add
in
mov
inc
cmpsl
jp
mov
xor
xchg
movsb
xchg
xchg
fcmovu
into
lds
ret
dec
dec
jl
cmp
inc
andl
sub
stos
dec
adc
jle
push
scas
lods
and
xchg
xchg
push
rol
add
xor
popa
adc
fsubrs
inc
fstpl
jbe
lock
popa
lcall
add
sti
sbb
lret
cmp
inc
pusha
and
scas
ljmp
xorb
pop
jns
xor
mov
mov
and
adc
lods
stc
mov
xor
fldt
dec
das
cltd
enter
push
mov
shrl
or
inc
mov
popf
lcall
mov
or
in
mov
push
lcall
and
hlt
insl
call
mov
pop
out
pop
xchg
cmc
jmp
imul
push
test
loopne
pop
insb
cmp
sti
popf
test
cmp
cld
push
pop
dec
ja
in
jno
neg
xor
in
cmp
iret
or
dec
sbb
jno
mov
rcll
inc
lcall
push
and
xchg
inc
sbb
clc
push
shrb
inc
xor
and
dec
jle
subb
rol
stc
insb
pusha
test
cmp
mov
add
mov
dec
sahf
mov
test
xor
stos
and
mov
cmp
sti
nop
divl
or
mov
jp
lods
mov
in
adc
cmc
loopne
adc
cwtl
jbe
adc
lods
ret
pop
idiv
adc
ljmp
push
leave
inc
mov
psrlw
call
loop
rorl
dec
xchg
pextrw
pop
mov
scas
leave
jne
jle
mov
fnstcw
mov
lret
xor
aam
clc
in
add
mov
add
adc
sbb
jae
jmp
mov
lock
jae
ja
scas
addr16
lcall
aas
sbb
sub
jle
push
cmp
scas
jo
and
test
incl
sahf
mov
xor
cmp
js
stc
loope
ds
jl
xchg
sarl
dec
mov
sahf
sbb
in
popa
add
cmp
jle
scas
es
mov
arpl
pop
outsb
add
jne
fsts
orb
cmp
sbb
out
ja
jmp
mov
mov
pop
rcrl
mov
push
movsl
pushf
jnp
jo
dec
xchg
and
pop
push
and
lds
das
iret
jbe
ret
popf
pop
xchg
rorb
in
mov
jno
sub
mov
xchg
mov
mov
ror
lea
pop
das
js
sti
adc
rclb
mov
inc
repz
shlb
adc
jno
jle
xchg
or
jae
push
inc
outsl
push
mov
jmp
fdivr
add
andl
add
in
jae
pop
pusha
adc
stos
xor
adc
data16
inc
xchg
cmpsb
test
popf
mov
mov
pushl
sbb
push
jmp
pop
mov
mov
xorb
imul
lds
inc
shlb
cmpb
cmc
jnp
xchg
clc
mov
repz
pop
mov
fwait
lds
int
daa
imul
push
add
xchg
jl
mov
mov
lahf
pop
lret
sub
fs
sbb
orl
lea
pop
jg
xor
ret
push
or
add
xchg
xchg
dec
mov
clc
pop
outsl
mov
ljmp
xchg
nop
push
imul
xchg
sub
xor
add
std
inc
movl
xor
mov
jae
je
push
and
fsubrs
andl
sbb
xor
mov
leave
add
fimull
loop
jno,pn
jmp
jb
xchg
xor
fcomi
mov
mov
imul
cwtl
cld
sahf
push
xor
pop
sub
adc
or
and
shrl
jge
jns
rcrb
not
dec
push
push
addr16
pop
clc
les
test
mov
shll
inc
jae
inc
ja
mov
or
fldl
sub
or
push
xchg
imul
out
std
cmpsl
mov
jecxz
loopne
mov
or
jle
cltd
clc
loop
add
faddp
adc
jnp
adc
cmp
cmp
add
push
add
mov
mov
cmpsl
rcrb
xor
mov
into
push
int
add
xchg
dec
aas
adcb
cmp
lds
popf
pop
push
pusha
mov
mov
mov
out
cmp
cmpsb
fidivs
or
stc
mov
bnd
dec
cmc
jge
jle
flds
or
jp
adc
and
pop
add
jle
out
test
out
ljmp
push
inc
lret
push
and
pop
pop
lock
js
inc
sub
dec
mov
jns
add
dec
js
pop
dec
inc
adc
enter
sbb
or
mov
repz
adc
dec
pusha
lock
jecxz
inc
cmp
popf
or
mov
scas
jg
inc
jp
lea
ret
int3
orl
sbb
out
gs
jg
movsb
mul
sbb
jns
jno
shll
jnp
dec
xchg
jl
cmp
lret
movsb
stos
pop
in
andl
aad
fdivrl
and
cld
je
jg
repz
push
les
xor
negl
bound
push
jo
mov
or
mov
sahf
add
orl
sarb
mov
stc
movsb
dec
ret
jnp
jne
repz
js
out
rorb
jns
or
pop
xor
push
sub
inc
mov
add
call
cld
mov
pop
mov
outsl
push
shrl
bound
addr16
sar
cmc
inc
enter
cmc
nop
pop
dec
xchg
cmp
pop
jns
std
mull
push
push
ret
insl
rcl
dec
add
mov
add
in
popf
movsl
jl
mov
cmp
outsl
popa
fwait
inc
lds
aaa
in
int
adcl
pop
or
invlpg
jbe
and
test
mov
inc
cmc
lahf
orl
jns
and
inc
and
imul
add
out
cmp
repz
das
push
ret
stos
sbb
addr16
add
scas
mov
aad
out
cs
mov
enter
fcmovbe
stos
dec
in
je
mov
fwait
or
ss
jnp
add
aam
mov
add
adc
test
add
mov
test
mov
flds
xlat
popa
push
add
cli
nop
pop
add
out
inc
scas
cmpsl
les
ja
inc
clc
adc
add
sarl
pop
mov
or
jne
popf
ja
clc
cmpsb
dec
add
cltd
sbb
mov
lock
push
jae
ss
incb
mov
adc
adc
mov
sbb
cmp
jp
addr16
push
imul
adc
fcmovnb
js
imul
sahf
imul
mov
mov
lahf
inc
or
cmp
jae
dec
sti
mov
jno
prefetch
or
ret
mov
ja
jge
or
lcall
stc
mov
cld
inc
rorl
jbe
xchg
orb
scas
mov
dec
add
aam
ret
adc
cmc
jns
mov
sti
iret
inc
mov
jl
adcl
add
mov
sbb
ds
jnp
lcall
movsl
add
mov
adc
outsb
add
and
imul
push
jg
repnz
mov
enter
jns
movsb
test
cmp
leave
popl
addr16
jno
lods
sbb
dec
mov
jae
push
jge
fcomp
mov
push
cmc
outsl
jno
mov
test
fs
add
aad
push
or
adc
sub
cwtl
jg
lahf
jae
decl
jbe
les
mov
jmp
call
dec
js
mov
xor
xor
popa
mov
adc
pop
nop
adc
lret
decl
jbe
loopne
jnp
mov
aaa
add
test
dec
leave
mov
les
push
mov
xchg
lods
mov
sahf
imul
sbb
enter
jns
test
lcall
mov
pop
les
lods
xor
xchg
into
push
push
jmp
add
and
pop
or
dec
sbb
rcl
sbb
aam
add
pushl
or
arpl
and
inc
por
and
mov
stos
mov
mov
mov
outsl
out
xchg
rorl
inc
std
and
mov
adc
xor
enter
pop
or
jl
jp
and
adc
push
xchg
ret
jecxz
fs
jmp
nop
jg
or
call
fs
xchg
mov
das
lods
lea
popf
push
subb
cmpsb
push
mov
xor
or
ds
imul
push
imul
pusha
add
rcrl
aas
dec
jns
push
mov
cld
sub
cmp
xorb
shll
pop
inc
loop
leave
mov
adc
stos
adc
jecxz
sbb
inc
cmpsb
cmp
subl
adc
jns
lret
stc
mov
and
or
aas
push
mov
movsl
js
sbb
setns
aas
push
pop
ds
push
scas
arpl
aaa
and
cmpb
leave
loopne
xor
cld
jmp
aas
lods
add
xchg
je
sbb
mov
aam
ja
test
or
push
xchg
fwait
inc
sarb
mov
xchg
into
cmp
push
adcb
comiss
scas
inc
adc
scas
call
jae
in
jae
test
shll
add
dec
test
setne
push
pop
xchg
pop
add
dec
xchg
jg
mov
scas
xend
movsl
cmp
lods
mov
roll
cmpsl
arpl
or
popa
cmpb
push
adc
pop
popf
scas
jg
jnp
jge
mov
jecxz
jne
push
and
push
jp
mov
fldt
and
jo
dec
adc
xor
pop
xchg
cwtl
sbb
jecxz
shrb
xor
xchg
stc
jg
push
mov
fists
repnz
out
push
enter
dec
adc
dec
mov
fdivrs
mov
push
xor
sbb
push
push
movsb
ret
mov
jge
xchg
mull
sbb
inc
sub
sub
mov
mov
add
add
ja
fwait
add
pushf
sbb
mov
jbe
jl
pop
mov
pop
jbe
add
hlt
sub
cmp
xchg
pop
mov
imul
adc
xor
xchg
in
jbe
sar
xor
mov
mov
xor
addr16
jl
xchg
and
aas
xchg
daa
pop
adc
jecxz
and
jge
inc
dec
mov
xor
mov
or
xchg
jb
mov
mov
add
jb
and
mov
dec
inc
nop
aad
sbb
push
lea
and
and
jmp
adc
sbb
std
dec
push
add
jns
incl
mov
das
test
mov
cld
or
adc
stos
repz
stos
aas
jo
sbb
mov
sbb
icebp
hlt
mov
hlt
inc
sub
bound
imul
sub
and
mov
add
movsb
adcb
add
pop
mov
mov
adc
dec
and
imul
add
out
lahf
inc
movsb
ret
lods
jg
mov
dec
dec
incl
cwtl
inc
or
mov
xchg
xchg
sbb
mov
mov
jns
inc
xor
xchg
or
test
add
dec
clc
bound
insb
cmpsl
mov
rclb
mov
sbb
mov
xor
jbe
jns
popf
or
or
bound
lea
movl
sbbb
imul
add
fcmovnb
jo
dec
mov
push
iret
pop
mov
mov
cmp
stos
push
stos
insl
mov
cmp
mov
cli
cmpsl
aas
dec
je
pop
cwtl
icebp
js
lds
jnp
outsb
test
addb
lret
or
jg
sub
data16
push
adc
fwait
jae
scas
mov
fnstenv
mov
movsl
lea
xchg
js
or
mov
ret
ljmp
sbb
jle
cli
push
jnp
and
test
fdivrl
mov
mov
andb
es
push
ja
pop
jns
jae
loope
je
add
pushf
adc
test
sbb
les
stc
data16
cmp
ss
push
jg
and
or
pop
sbb
add
in
cmpsb
int
mov
and
pop
mov
fimuls
sahf
loop
xchg
cmpl
movsl
or
test
cltd
cmp
daa
or
insl
xlat
mov
aaa
jbe
test
gs
iret
push
inc
shrl
pop
add
dec
cmp
addr16
inc
testl
push
jnp
pop
je
mov
push
insb
xor
push
pusha
jae
jns
out
or
ja
jg
data16
sbb
lods
test
mov
or
push
cli
out
sub
ja
or
fcoml
cld
ja
push
insb
mov
jge
mov
inc
arpl
or
xchg
fs
es
xchg
inc
and
insl
mov
push
jo
sub
sbb
push
dec
rorb
aas
mov
add
add
cmp
sbb
cwtl
ljmp
or
push
inc
arpl
jge
pop
dec
and
cmpl
ucomiss
xchg
out
push
repnz
adc
xor
jl
jae
lds
inc
insl
add
xchg
and
andl
mov
test
mov
mov
incb
test
test
stos
dec
testb
or
add
cs
mov
scas
bound
lahf
pop
lcall
nop
xchg
pop
les
lret
xor
mov
sbb
repz
xor
or
jnp
cmp
mov
sbbl
test
ljmp
leave
jmp
add
lock
sti
xor
jmp
pop
push
xchg
mov
jnp
push
xchg
out
rorl
mov
sub
scas
notl
adc
dec
jns
inc
xor
cltd
scas
jne
mov
add
mov
das
jecxz
jae
xchg
arpl
in
mov
imul
pop
cmp
push
sbb
cmp
lock
add
std
pop
xchg
cld
imul
int3
sbb
add
imul
push
sbb
js
sub
pushf
pop
mov
gs
andl
popf
dec
mov
mul
xchg
cmpsb
insl
ss
push
pop
fwait
xor
fistpl
cli
inc
icebp
nop
pop
cld
xor
jns
cs
stos
inc
jb
inc
test
jae
jmp
mov
aam
sbb
mov
mov
aad
mov
push
sbb
mov
mov
aas
sub
push
lsl
fidivrl
cli
clc
jle
mov
jo
cli
mov
adc
cmpsl
jecxz
or
out
jecxz
adcb
daa
mov
add
jno
adc
mov
iret
jecxz
subl
fbstp
nop
jns
stc
cs
rclb
jg
cs
mov
ds
xchg
aaa
mov
push
mov
ljmp
cld
add
mov
dec
mov
lcall
jp
sbb
mov
pop
jge
lods
xor
xor
add
cmc
cld
pop
ljmp
ds
fincstp
jno
aam
lods
jmp
aas
rorl
cmp
push
and
fnstcw
and
popa
sub
sarb
int
xchg
xor
sub
mov
fnsave
mov
add
pop
pop
cmpl
lcall
and
jge
jp
repnz
shrb
add
test
or
xor
leave
add
andb
add
and
call
aaa
std
mov
add
mov
lahf
xchg
dec
cmc
pop
lds
push
xor
cmp
xchg
cmpsb
scas
push
jl
mov
cmc
mov
cli
jp
icebp
or
or
adc
idivl
rorb
inc
movsb
xchg
mov
test
push
jmp
xor
xor
lahf
jne
jae
lea
sbb
adc
idivl
cmc
fs
test
cld
test
sbb
movsl
inc
dec
mov
mov
call
add
cmp
scas
push
add
cmc
lock
xchg
jae
sti
add
inc
andb
mov
jle
pop
mov
data16
shll
lock
xchg
dec
mov
mov
pop
int
call
mov
add
lds
stos
lcall
xchg
pop
dec
or
inc
jno
cmpsb
push
movups
mov
cwtl
mov
jb
jae
icebp
mov
ds
cmp
adc
bound
insb
sbb
dec
mov
cmp
stos
sbb
ret
xor
aaa
imul
mov
fmull
scas
mov
les
orl
hlt
or
xor
cmp
cld
aas
movsl
cld
mov
jne
in
and
xchg
icebp
iret
ljmp
shll
push
rclb
mov
bound
rol
add
jno
adc
ret
push
push
inc
xor
or
idivl
push
adc
mov
das
xor
and
cld
mov
lods
in
daa
mov
out
cli
mov
call
adc
sbb
adc
clc
movzwl
or
mov
mov
out
dec
lret
add
cli
lds
movsl
lahf
mull
aam
and
xchg
aad
scas
insl
xor
pop
xchg
mov
cmc
in
pop
jae
ja
lods
data16
sbb
bound
mov
jg
jne
xor
add
pop
sbb
mov
mov
sbb
fwait
arpl
idivb
movsw
mov
jg
das
jno
add
add
inc
clc
mov
ljmp
jg
fwait
imul
stos
jg
jae
cmc
fidivrl
sub
lea
mov
mov
nop
in
sub
mov
add
push
negb
jl
adc
and
stos
clc
pop
mov
and
adc
add
inc
cmp
repnz
xchg
cmp
add
mov
nop
callw
mov
adc
sbb
mov
pop
stos
mov
lds
or
pop
pop
pop
cmc
addr16
imul
sbb
daa
imul
pop
jae
xor
jae
cld
jae
pop
sub
into
cwtl
jne
and
adcb
push
jbe
mov
xchg
inc
subl
ljmp
sarb
push
adcb
cmpsb
dec
and
mov
push
test
pop
nop
sahf
sbb
dec
test
push
jnp
adc
lock
and
sbb
cld
jecxz
pop
ret
jb
in
mov
xor
and
outsl
and
out
xor
call
or
fsubl
mov
data16
inc
cli
mov
cwtl
cltd
pusha
or
lods
addl
test
nop
mov
sub
mov
in
repnz
mov
cmc
push
pop
mov
ss
jbe
adc
adc
mov
ds
lret
xchg
cmpsl
add
das
or
shlb
inc
add
jo
and
adc
mov
das
cltd
mov
push
test
xor
cmp
hlt
xchg
mov
nop
pop
mov
xchg
repnz
adc
mov
inc
jnp
jmp
insb
mov
rcr
push
sbb
jl
leave
mov
add
ret
push
push
lret
cli
add
mov
call
mov
daa
test
cmp
or
jecxz
in
jne
imul
add
adc
and
mov
dec
in
nop
push
jnp
pop
xchg
xchg
cld
lcall
dec
push
jl
xchg
jg
mov
lea
mov
ss
sub
das
loop
mov
cmp
mov
mov
scas
js
xchg
adc
sub
push
mov
mov
add
in
sbb
pop
out
sti
adc
loope
mov
mov
cs
push
std
clc
xor
das
dec
jp
pop
xchg
loop
cmp
adc
shlb
mov
mov
ret
fistpll
aas
xchg
sub
rorl
pop
xor
ja
test
or
jb
movsb
addr16
je
nop
push
mov
cmp
lds
fisubs
stos
mov
jne
pop
ds
xchg
aaa
repnz
test
cmpsl
push
or
mov
daa
xchg
pop
inc
aam
repz
cli
gs
pushf
mov
in
mov
inc
xchg
pop
lcall
stos
aam
nop
addr16
sub
and
jo,pn
push
subb
add
jb
jo
maskmovq
mull
loop
pop
rcrl
pop
mov
mov
pop
push
jge
cmc
cmc
fistpll
mov
push
outsl
orl
setns
clc
hlt
inc
push
fsubrs
and
cli
mov
cmpb
mov
inc
and
pusha
push
jle
insb
pop
lahf
push
sub
shl
sti
adc
cmp
mov
jle
fimull
mov
orl
pop
xor
call
lahf
sbb
pop
mov
jo
imul
xchg
nopl
negl
push
xor
dec
cld
xchg
lcall
cmp
fs
orl
add
imul
cli
pop
mov
and
out
mov
sti
mov
xorl
xorl
movsb
dec
cwtl
popa
aam
adc
das
aad
notl
pop
fwait
jb
pushf
sbb
aas
repnz
cli
js
push
push
pop
push
add
scas
sahf
dec
test
inc
ds
cmc
mov
mov
push
imul
jnp
cltd
xor
mov
mov
and
test
dec
xchg
lret
jle
mov
lods
sub
cmc
or
sub
shll
push
cmp
rcll
loopne
icebp
add
js
jecxz
pop
add
push
stc
in
dec
pop
xchg
decl
daa
jb
std
pop
add
pop
mov
lds
xchg
fistps
mov
lcall
mov
stc
lahf
inc
mov
push
mov
and
add
int3
sahf
lods
nop
add
inc
push
into
daa
adc
pushl
or
hlt
shrl
xor
inc
ficompl
repz
jo
pop
mov
and
inc
outsl
push
jl
ja
mov
inc
les
adc
nop
pop
int3
addl
or
jnp
ja
sub
pushf
std
push
push
push
aas
xchg
imul
push
or
xchg
pusha
add
mov
pop
cli
scas
pop
and
inc
fwait
push
fwait
add
or
sub
mov
mov
inc
stos
pop
lret
push
xchg
mov
test
xchg
push
nop
sbb
jo
pop
out
add
inc
stc
xor
cld
mov
inc
pop
mov
ds
add
jmp
and
es
sbb
stc
test
xor
pop
xchg
pop
add
push
adc
jbe
mov
cmc
mov
jge
push
nop
sbb
pushf
add
aas
adc
xchg
and
jg
pusha
pop
jo
sti
movsl
mov
cmpl
dec
mov
sbb
aam
mov
in
or
mov
add
and
sub
mov
enter
inc
call
out
jge
aas
cwtl
ret
lahf
xchg
jl
lds
xor
test
adc
mov
sbb
test
xchg
mov
mov
les
sub
or
jae
in
scas
fcompl
add
bound
std
sub
outsl
sub
sbb
mov
fwait
adc
pop
pop
dec
push
jae
arpl
aas
out
stos
les
lock
test
push
sub
insl
add
mov
mov
movsl
mov
pop
sub
push
jecxz
dec
adc
mov
push
lods
xor
xlat
push
dec
aas
sahf
popl
dec
andb
repnz
dec
subb
mov
insl
lods
mov
mov
xchg
jns
mov
addr16
xchg
mov
pop
rolb
cld
mov
ret
add
dec
and
stos
das
sub
inc
fdivrl
in
mov
or
jg
lods
inc
adc
daa
cmp
std
and
adcl
adc
mov
test
stos
stc
jne
jo
adc
xor
movsb
orb
jnp
clc
push
push
jno
dec
nop
dec
push
in
add
insb
test
test
mov
test
push
xchg
test
cmp
jmp
dec
xchg
adc
rcrl
push
fldt
lds
pop
jns
repz
decl
imul
sbb
lahf
cmp
out
in
in
les
or
xchg
jae
xchg
add
pop
add
xchg
fidivrl
xchg
iret
clc
cld
jp
scas
pop
sub
stc
lahf
jb
jg
pop
cmp
es
lock
mov
push
xchg
test
pop
fs
jg
pop
xchg
mov
sti
arpl
adc
fsubs
das
or
mov
addr16
fld
push
adc
inc
mov
add
dec
dec
add
inc
push
scas
mov
dec
sub
mov
add
jne
repnz
mov
sbb
loop
jne
push
mov
add
mov
sub
sbb
cmpl
subl
or
loop
inc
es
pop
loopne
shrb
xor
add
test
nop
decb
arpl
cld
push
repz
inc
xor
mov
inc
aas
lret
stos
inc
push
mov
enter
pop
inc
inc
xchg
jge
mov
mov
cmc
lahf
xor
add
cmp
std
and
cmc
sub
add
repnz
cmp
ficoml
insl
pop
leave
lahf
shrl
add
movsl
cmp
push
shll
push
das
add
rcll
mov
incl
js
mov
adc
in
inc
mov
repz
in
mov
stc
es
and
cli
js
jl
std
jns
mov
fistps
xlat
or
cwtl
pushf
jnp
xor
xor
scas
cmp
sub
sbb
pop
mov
insb
cmc
jle
dec
mov
nop
fldt
push
mov
pop
jae
and
jne
jl
jne
lea
out
pop
test
out
arpl
push
cmp
mov
ror
lods
int3
xchg
add
jp
stos
sbb
or
movnti
adcb
adc
mov
and
in
les
negl
ds
jp
sahf
imul
fld
mov
incb
adc
les
fidivs
adcb
sbbb
stc
loop
adc
scas
ss
inc
mov
or
fsin
pop
jne
mov
pop
inc
mov
add
pop
pop
jp
inc
fs
ret
dec
jge
jecxz
and
xchg
cmpsb
inc
sbb
inc
add
es
add
leave
cld
sub
lcall
inc
movsb
push
mov
mov
xor
mov
dec
add
dec
ret
lret
mov
lock
lret
inc
adc
pop
lcall
push
lods
lret
sub
push
test
aam
jo
nop
lcall
mov
jg
stos
mov
push
inc
nop
pop
aam
mov
imul
pop
int3
xchg
xor
fisttpl
or
arpl
adc
or
faddl
push
mov
mov
push
in
pop
mov
insb
mov
shrl
jg
cmpsl
or
mov
fildll
xor
adc
add
and
popf
and
xchg
mov
divl
jns
jg
pop
mov
push
and
cli
addr16
mov
ret
xchg
ss
jbe
addb
inc
xchg
cmpsb
mov
scas
xchg
fnstenv
and
arpl
pop
mov
or
jle
sub
rorb
mov
cltd
or
mov
pushf
daa
adc
push
jno
imul
add
inc
xchg
test
fdivs
test
cmp
adc
scas
cmp
rol
mov
cld
pop
xor
inc
inc
aaa
pop
adc
bound
stos
xor
push
imul
orb
and
stos
out
dec
idivl
fcoms
shll
add
sub
mov
lret
mov
pop
and
mov
add
push
arpl
sbb
mov
lods
push
push
outsb
std
push
cmp
lcall
mov
xor
roll
nop
loop
or
in
movb
cld
pop
icebp
xor
loop
popf
mov
jge
insl
xor
test
fcomps
stos
adc
or
js
or
js
mov
inc
faddl
sub
xorl
pop
pop
sbb
xchg
leave
out
or
mov
call
xchg
shrl
pop
adc
jae
dec
add
cld
testb
adc
out
sbb
adc
mov
push
and
mov
xchg
cmp
repz
jle
xor
xchg
pop
add
insb
adc
les
es
pop
xchg
jl
pop
jge
jo
pop
addr16
push
mov
ret
test
inc
add
mov
das
cmc
lcall
outsb
popa
jecxz
push
cli
cwtl
add
mov
outsl
in
cwtl
pop
in
xlat
mov
popf
lods
lcall
jb
aaa
pushl
pop
push
add
push
xor
and
popa
add
mov
fidivrs
cmpsl
push
cmpl
popa
sbb
mov
lods
int3
xchg
jb
in
mov
mov
inc
pop
das
xchg
pusha
stc
ss
fwait
dec
mov
movsl
imul
and
scas
jmp
pop
sub
out
cmpl
lcall
xchg
and
fldenv
push
fchs
out
cltd
negl
adc
popf
cli
arpl
jg
add
iret
xorb
arpl
test
lods
adc
jns
mov
cmp
sub
xchg
sti
pushf
inc
xor
test
dec
sbb
popf
sbb
add
jnp
fdiv
jno
out
sbb
pop
stos
das
mov
cwtl
xchg
dec
xchg
outsb
adc
pushf
mov
and
repz
jge
inc
lods
add
pop
in
les
push
jns
sub
scas
mov
stc
mov
adc
dec
and
aas
add
fcompl
sbb
enter
cli
push
call
mov
js
mov
inc
adc
fsubs
mov
out
inc
bound
jg
xchg
aaa
pop
movsl
lcall
mov
hlt
add
mov
test
fs
or
adc
xchg
xchg
push
fwait
add
dec
jb
ja
push
out
movsb
and
or
leave
sbb
inc
cwtl
push
cmpsl
mov
sbbb
jnp
cmp
leave
adc
sbb
loopne
jnp
test
jnp,pn
ret
jo
pop
pop
mov
fisubrl
dec
out
lcall
rclb
adc
xchg
adc
cmp
push
test
xchg
jp
cli
inc
loopne
push
sub
sub
sub
xor
push
test
cld
adcl
dec
push
add
inc
testb
clc
cwtl
lahf
mov
clc
aad
in
jne
rclb
icebp
insb
insl
jl
dec
jg
xor
jae
push
pop
fbld
add
xor
pop
or
cmpsb
or
mov
push
push
xchg
and
repnz
mov
sbb
push
dec
es
fidivl
jle
xchg
movsl
movsb
fcomps
fildll
dec
inc
in
das
adc
das
sub
scas
pusha
das
and
sbb
out
add
xlat
in
jg
sub
xchg
pop
data16
xlat
xor
push
adc
xchg
lods
jo
xor
pusha
or
or
sub
and
inc
loope
out
popl
jns
imul
sti
push
or
jl
pop
xchg
scas
hlt
arpl
dec
arpl
insb
lds
jnp
push
idivl
pop
push
push
push
xchg
mov
push
or
sbb
jecxz
lret
adc
mov
pusha
mov
inc
xchg
cli
dec
and
icebp
lret
inc
movsb
xchg
jmp
test
and
sbb
jmp
mov
or
jbe
lock
or
jp
lock
xchg
scas
cmpb
notb
out
jbe
test
test
add
push
xlat
push
repnz
sbb
push
scas
adc
mov
jbe
mov
jne
mulb
jle
in
add
idivb
xor
jle
pop
push
loopne
cli
add
jmp
push
push
movsl
push
add
push
test
idivb
adc
andl
pop
call
jbe
jl
mov
or
and
jl
cltd
iret
in
aas
mull
jo
jbe
scas
add
or
cli
cli
cmp
insl
ret
jg
mov
popf
mov
mov
inc
push
in
mov
cld
add
adc
notb
bound
daa
sahf
pop
push
pop
xchg
and
lcall
add
pop
sbb
mov
add
cmpsb
mov
mov
sub
sbb
pop
pop
jo
dec
lods
jg
test
mov
in
sub
add
roll
xchg
out
sbb
mov
mov
lcall
jo
mov
pop
inc
pop
and
imul
hlt
sbb
imul
push
mov
rcll
and
xor
lods
cmpsb
adc
jne
aaa
mov
add
sbb
mov
hlt
scas
mov
test
jne
sub
or
and
mov
mov
cmp
jbe
sbb
int
push
movsb
das
andb
outsl
sub
xchg
pop
or
xchg
jns
lret
je
rol
sbb
stos
rcl
sbb
mov
add
movsl
inc
jl
mov
mov
dec
pop
test
mov
xchg
or
mov
mov
mov
xchg
cld
jg
mov
repz
pop
aam
rcl
mov
sbb
dec
push
jmp
test
ret
pop
fwait
push
xchg
push
insb
jg
sbb
push
push
jg
mov
sbb
jns
add
imul
adc
lcall
dec
xor
mov
out
lcall
mov
add
dec
push
mov
out
test
ljmp
das
mov
aad
repz
jmp
scas
adc
sub
mov
daa
add
mov
push
lahf
sub
sub
rcl
jnp
mov
adc
arpl
mov
cmp
in
and
dec
pusha
mov
lods
lahf
pop
pop
loop
jmp
nop
mov
test
adc
fsubl
cmc
pop
and
dec
push
cmp
lea
daa
jg
cmp
xor
push
lcall
data16
mov
lret
hlt
add
jg
fcomip
jp
mov
mov
ja
add
and
and
xchg
stc
movsb
popa
insl
sub
adc
jg
mov
push
shrl
jo
sbb
repnz
std
sbb
xchg
pop
gs
clc
stos
loopne
and
jns
adc
aaa
idivl
xchg
sbb
imull
push
mov
or
stc
leave
and
dec
lret
stc
repnz
sub
or
xchg
dec
or
or
cld
fwait
push
xor
adc
jns
sbb
imul
add
call
xor
sbb
or
sub
pop
mov
cmp
rorl
sbb
std
pusha
je
and
push
mov
mov
lcall
repz
enter
jle
jne
mov
jno
mov
push
insb
dec
jmp
stos
popf
daa
lahf
pop
push
inc
pushf
cli
mov
pop
aas
pop
push
aas
js
inc
jo
test
xor
add
xchg
pop
xchg
jg
and
cmpb
xchg
sti
inc
mov
and
shlb
mov
popf
sub
aad
stc
je
pop
adc
mov
xor
pop
mov
add
mov
jl
push
nop
aas
inc
sbb
jne
or
jle
fcmovb
push
push
xchg
xor
sub
mov
mov
cld
mov
xchg
clc
jle
lahf
orl
sbb
imull
das
gs
mov
das
out
jge
xchg
filds
sub
and
or
cmp
dec
addl
ss
insl
bound
push
xchg
imul
loopne
add
data16
mov
xchg
push
stos
sub
adc
xor
ljmp
icebp
adc
insb
xor
lahf
cs
xchg
xor
imul
mov
jne
jg
fs
bnd
aad
int3
cmc
push
imul
xlat
adc
lods
mov
inc
andb
add
pop
mov
add
es
mov
shrd
dec
pop
inc
jnp
movsl
pop
ret
xor
js
xchg
lret
in
roll
xor
inc
cmpsl
out
test
sar
xchg
shrl
outsl
push
mov
je
cld
jne
ret
movsl
or
push
std
pusha
jne
jge
and
xchg
mov
ds
mov
dec
adc
mov
xor
decl
xchg
sub
or
jle
jge
ja
imul
scas
sbb
rcrl
mov
ss
push
stos
or
bound
and
int3
mov
or
jnp
clc
inc
jno
cmpsb
dec
jbe
and
mov
fldenv
data16
aas
or
add
xorl
cmpsl
xor
testb
test
push
clc
dec
or
add
mov
pop
lds
lock
sub
dec
out
xor
fs
sub
add
cli
pusha
mov
test
sarb
adc
dec
sbb
mov
je
push
gs
pop
jne
xor
jns
xchg
data16
push
mov
adc
push
lret
pop
pop
jg
pusha
aas
xor
adc
xchg
lods
sbbl
shrb
jno
test
xor
push
mov
jg
fildl
pop
test
icebp
or
aaa
lea
jp
in
sbb
std
std
dec
mov
mov
or
clc
jge
repnz
mov
cmpsl
subl
pop
xchg
and
xchg
cmc
pop
aam
pop
mov
xorps
je
cmp
sbb
cs
out
mov
cwtl
or
mov
adc
add
adc
arpl
aam
inc
dec
movsl
loope
xor
stc
mov
add
adc
push
ret
test
pop
jne
leave
inc
sbb
push
sbb
ds
flds
push
sbb
lcall
je
xchg
in
push
adc
cmp
jl
mov
sahf
pop
adcb
outsl
sti
and
dec
or
fs
or
sub
push
inc
pop
dec
lds
add
hlt
aaa
daa
sbb
adc
jmp
push
cmpb
jp
cmp
sti
bound
loope
std
addr16
cmpsb
xchg
sbb
pop
push
push
add
mov
pushf
lea
icebp
fidivs
jecxz
or
mov
and
cmp
mov
push
mov
jp
and
dec
push
mul
ss
push
fwait
jnp
cmp
and
inc
lahf
das
xchg
std
arpl
mov
mov
cmc
push
dec
ja
xor
adc
push
ss
jecxz
jb
lahf
or
mov
mov
popf
and
js
add
rcrl
sub
and
mov
imul
jg
fstps
adc
lahf
sub
mov
fisttpll
test
mov
fldt
pop
xor
and
push
pushf
rclb
sub
inc
sahf
loopne
jnp
xchg
xlat
out
add
xchg
pop
cmp
adc
loope
xor
push
es
adc
sbb
sbb
bound
cmpsl
or
jg
or
mov
pop
mov
sbb
add
and
subb
cmp
daa
mov
in
stc
add
mov
mov
or
jge
mov
clc
testb
add
jbe
stos
sub
aam
xor
test
in
stc
out
shll
add
jno
lss
or
dec
stos
mov
jae
cmp
jo
xlat
call
mov
mov
out
pop
sahf
fsubrl
imul
push
push
andl
or
adc
push
addr16
sub
pop
push
fildll
popf
and
and
adcl
in
iret
js
pop
fcomi
lock
xor
push
dec
sbb
push
ja
add
inc
sbb
clc
rolb
or
jge
lret
jno
imul
inc
std
jg
lahf
test
scas
cmc
add
mov
push
jge
sbb
add
fdivs
fcmovbe
push
and
scas
pop
mov
jg
adc
movsl
fs
push
fwait
inc
rcr
lods
dec
imul
dec
lds
cltd
lods
test
lods
inc
std
aad
aas
lods
rorl
sub
mov
test
int3
xchg
test
xorl
and
push
jno
arpl
mov
dec
push
jnp
insl
jne
jp
pop
pop
jns
imul
mov
test
xor
xor
jae
inc
imul
test
sbb
sbb
add
mov
sub
pop
add
inc
lock
cwtl
cmc
mov
and
inc
sbbb
cmp
push
jge
scas
pop
mov
int3
xor
das
mov
mov
pop
cmpsl
icebp
outsb
jbe
or
xchg
push
popf
arpl
push
lcall
out
fbstp
push
pop
bound
js
mov
in
outsl
push
jb
leave
test
jle
dec
arpl
lods
push
xchg
das
cmp
cs
mov
push
mov
repnz
mov
adc
add
mov
sub
xchg
jp
pushl
or
cltd
xlat
xchg
adc
test
movsl
icebp
or
cli
and
sub
shlb
idivl
push
pop
push
xorl
cmp
or
lea
xchg
add
stos
idivb
mov
sbbb
mov
mov
push
movsb
hlt
sub
push
fmull
sub
mov
mov
mov
fcomi
mov
dec
loopne
add
fs
push
or
jbe
push
or
rolb
xchg
push
mov
cmpsl
gs
push
stos
sbb
daa
adcl
mov
mov
repz
dec
movlps
sbb
mov
inc
jg
and
ja
cmp
adc
outsb
adc
cmp
mov
lret
shlb
dec
sub
fwait
xor
cmpsl
mov
aam
fwait
adc
xorl
scas
in
inc
xor
enter
outsl
adc
rcrb
repnz
imul
mov
push
es
xchg
dec
push
xor
or
mov
sub
sbbb
fcoml
mov
push
fstpt
mov
lea
in
xor
sbbb
mov
outsl
jp
cmp
jmp
xchg
jae
xchg
xchg
add
repnz
enter
jns
or
push
mull
xchg
pop
incb
mov
mov
lcall
jle
cmp
pop
pop
insl
clc
or
cmp
test
arpl
add
test
jl
daa
cltd
adc
repz
pop
sti
movsb
loop
push
add
rcrl
xchg
xor
lods
sub
rcll
iret
sbb
pop
inc
daa
add
scas
adc
sahf
xor
insl
add
xchg
sti
cmpl
jmp
cli
cli
adc
inc
jb
xchg
aad
loopne
add
pushf
ss
notl
outsb
inc
cmp
jne
jbe
sbb
leave
jno
cmpsl
rol
mov
or
sub
xchg
push
mov
jp
test
repz
mov
pop
lret
imul
dec
cmp
cwtl
xchg
cmp
jae
cmp
movsl
adc
sbb
mov
repnz
mull
xchg
or
inc
cmc
or
sub
add
add
popa
outsl
loop
xchg
adc
xor
inc
mov
inc
subb
xchg
push
cs
in
inc
arpl
sbb
sub
cmc
mov
jae
imul
jecxz
mov
or
addl
pushl
imul
push
cmp
adc
mov
ret
and
orb
jecxz
inc
and
push
jl
ret
dec
inc
je
inc
scas
testl
imul
sub
mov
xchg
arpl
push
cmp
mov
or
pop
icebp
pop
jnp
pop
inc
scas
popa
faddl
push
jg
jmp
xor
jb
jne
cmp
push
nop
xchg
pop
mov
data16
pop
xchg
jbe
jno
pusha
push
jns
jnp
inc
cmp
mov
push
xchg
push
lcall
and
cmc
mov
inc
int3
jp
aaa
xchg
test
test
xor
jp
jb
mov
cmp
hlt
add
sbb
mov
lret
push
test
or
mov
jnp
jne
xchg
push
mov
js
std
add
ljmp
pop
or
out
add
sub
loope
xchg
es
add
in
scas
jb
popa
add
mov
dec
cltd
adc
adc
mov
or
out
dec
out
cmp
inc
sbbl
pop
shll
loope
daa
call
popa
pop
dec
mov
push
addr16
shl
xor
jge
dec
xchg
andl
sub
cmc
bound
pushf
fcoml
xchg
mov
or
cmpsl
popa
jb
sub
jns
pop
les
add
and
aaa
test
dec
inc
sub
rorl
jae
sbb
out
mov
cli
xchg
loopne
cwtl
xchg
loope
test
xchg
aad
and
dec
xor
push
jecxz
jbe
jnp
adc
aam
sbb
lret
das
xor
jno
and
fdivrs
adc
pop
xchg
push
fmuls
pushf
gs
stos
out
out
jmp
or
adc
jo
aas
cltd
jge
ds
cmc
test
inc
mov
jae
je
jno
fcoms
sti
sub
jno
adc
pop
adc
shrb
xchg
mov
icebp
cli
mov
push
fbld
in
and
lea
popf
scas
and
cltd
mov
fwait
mov
stc
mov
mov
sbb
sbb
mov
arpl
cmp
imul
pmaddwd
lahf
jae
mov
jle
divl
push
in
or
jb
and
clc
fcmovnu
adc
inc
xchg
push
divb
jno
jbe
xor
xchg
lahf
adc
cltd
and
add
adc
inc
cs
out
push
aas
xlat
or
jae
fstpl
mov
fwait
xchg
out
mov
pop
or
fmull
and
adc
jbe
cmpsb
ud0
in
icebp
jnp
pusha
out
push
pop
mul
int3
stos
pop
mov
push
insb
lea
jae
sub
mov
sbbl
adc
mov
idiv
out
mov
adc
sub
out
out
mov
loop
scas
lahf
movsb
scas
pop
cwtl
push
aam
leave
bound
ja
sub
push
dec
lds
jne
xchg
xor
cmc
xorl
inc
mov
repnz
add
adc
insl
test
cmp
jl
pushf
lods
sub
test
and
jecxz
mov
xchg
ret
add
rcl
jns
jge
cmpsl
leave
adcb
arpl
fcomps
and
loope
adc
add
dec
es
js
mov
push
push
add
add
insl
cmc
xor
xchg
add
push
dec
jg
das
pop
or
test
push
jne
mov
xchg
notl
das
fistpll
xlat
dec
push
and
mov
cmp
pop
cld
aaa
pop
and
mov
cli
cwtl
mov
mov
push
jmp
add
daa
inc
pop
jae
les
or
sbbb
leave
rorl
jg
iret
pop
notl
adc
cmpsl
add
sahf
mulb
xor
push
jecxz
inc
out
outsl
sub
and
addl
mov
popf
enter
push
jle
inc
idiv
roll
push
mov
dec
sbbb
test
insb
or
add
add
jne
dec
idivb
cmp
or
movsl
pushaw
lcall
fwait
orl
enter
jns
or
jno
push
rclb
xchg
mov
testb
add
movsl
xor
movsb
cmp
xchg
sbb
adc
xor
scas
jge
lea
and
ret
nop
cmp
fisttpll
out
sbb
jecxz
jp
icebp
std
jne
cwtl
dec
lcall
dec
push
int
aaa
imul
fdivrl
and
adc
arpl
xor
out
push
fisubrs
or
cmpsb
add
sub
push
jle
call
jmp
xchg
shr
scas
pop
inc
fbstp
cltd
push
jmp
mov
lret
add
out
sbb
or
lahf
mov
in
pop
movsl
push
adc
push
jae
or
imul
mov
push
add
std
jne
sbb
int
outsb
std
add
ja
pop
cmp
repz
mov
xchg
jp
std
jmp
pop
mov
scas
cmp
imulb
stc
insl
mov
in
add
pop
push
push
movsb
jno
shrb
and
push
mov
imul
fwait
movb
stos
push
pop
jp
xorb
xchg
jb
mov
adc
xor
mov
mov
std
xor
xchg
xor
hlt
ja
mov
and
lods
aaa
and
adc
fnstcw
sbbb
fdivl
jg
imul
dec
mov
clc
lock
pushf
push
add
and
push
loope
jg
add
andb
push
add
cmp
inc
or
xor
ds
xchg
adc
sbb
cmpsb
adc
mov
mov
jle
scas
and
and
shll
jecxz
enter
fcoml
les
jns
pop
mov
or
leave
mov
jg
cs
frstor
ja
cmp
jnp
pushf
pop
push
insb
jg
int
inc
and
icebp
xchg
inc
movsb
test
bound
orl
dec
cmp
cs
jg
push
push
call
sub
add
in
dec
xchg
and
mov
add
ljmp
push
lahf
aam
cld
lds
xchg
xchg
cltd
decl
lahf
popa
hlt
negb
shlb
vmwrite
or
pop
xchg
into
fidivs
outsl
jge
shll
enter
scas
xchg
cs
pop
add
mov
stc
or
orb
daa
jle
insb
stos
mov
mov
pop
push
sbb
mov
jae
and
mov
lock
insl
outsl
lahf
push
inc
jns
mov
xchg
jl
stc
push
sar
mov
or
adc
add
xor
mov
shl
cmp
fnstenv
scas
jbe
or
lahf
leave
pop
call
in
xchg
add
nop
adc
nop
xchg
popa
hlt
out
sub
mov
fstl
mov
sub
in
cli
mov
push
jg
pop
arpl
lahf
jge
call
jns
sbb
aaa
js
in
cmp
jle
scas
mov
mov
push
stos
xor
out
outsl
cmc
inc
add
repz
xchg
test
scas
push
sbb
mov
pushf
add
lret
lock
daa
mov
sbb
pop
dec
adc
or
adc
lahf
ret
inc
test
mov
add
jne
adc
fcoml
call
push
xor
pop
mov
mov
add
sub
lahf
add
pop
lods
fdivs
jge
aad
sarb
mov
add
sbb
mov
or
pop
fs
sbb
fsubrl
std
xor
push
decl
cmp
cld
mov
scas
or
inc
sub
lahf
push
aam
stc
jge
shrl
push
cmpsl
popa
call
pusha
dec
pop
mov
iret
mov
mov
add
cltd
mov
imul
push
cmc
mov
push
loopne
imul
lahf
mov
je
pop
jl
fwait
rorl
test
aaa
jge
mov
cmc
mov
lcall
or
ljmp
mov
push
or
dec
loop
mov
jmp
aam
pop
outsl
in
and
scas
or
xchg
in
adc
fwait
rclb
dec
into
loope
jge
popf
adc
mov
jp
and
mov
ja
popf
add
ja
mov
jno
adc
cmp
stc
add
jmp
pop
adcl
xchg
aam
mov
cmp
jmp
jl
mov
add
and
lahf
shlb
and
cmp
jle
jecxz
mov
cmp
faddl
push
data16
sub
gs
or
decb
mov
insl
inc
sar
mov
push
das
mov
push
xchg
dec
data16
inc
test
pop
push
and
pop
mov
test
lret
mov
mov
shl
jbe
pushl
std
sub
pop
xchg
mov
pop
arpl
enter
pop
lods
lret
add
push
pop
icebp
notb
es
mov
jb
lods
mov
incb
xor
xchg
imul
pop
adc
cld
repz
xor
in
inc
jno
jl
sbb
das
xor
xor
mov
enter
xchg
sbb
outsb
add
adc
add
das
ja
xor
or
jae
call
pop
xor
data16
ss
or
clc
mov
jg
ret
cltd
jge
scas
sub
inc
lods
dec
pop
mov
xchg
enter
mov
dec
popf
dec
repnz
mov
pop
jge
jle
pop
jo
inc
mov
int3
jmp
imul
add
mov
pop
mov
jg
popa
cmpsb
in
lock
ss
xor
jns
add
pop
push
jecxz
dec
add
jnp
xor
aam
inc
jl
stos
adc
push
sahf
pop
es
jno
repz
mov
adc
orb
mov
sbb
test
add
or
or
addb
jb
idivl
push
jns
and
push
fdivs
jge
ja
andl
jnp
scas
scas
shlb
dec
xor
add
scas
sahf
adc
inc
push
sbb
xchg
jmp
cmc
scas
mov
rolb
and
lcall
in
xor
ds
dec
mov
cmc
lds
inc
xor
cmpsb
and
jp
adc
pushl
pop
imul
push
and
test
test
ss
mov
std
popf
jl
jge
pop
mov
pop
jge
cmpsb
add
es
mov
imul
sbb
imul
andl
and
xchg
pop
mov
mov
ds
stos
lret
jo
rorl
add
jp
stos
mov
into
inc
push
lret
mov
or
add
push
fwait
sbb
add
pop
mov
push
push
mov
xor
sahf
popa
or
pop
fisttpl
xor
xor
and
or
ret
stos
pop
pop
lret
sbb
in
adc
rcr
dec
decl
scas
dec
mov
mov
push
sbb
jnp
stc
and
mov
cmpb
add
nop
cmpsl
xor
and
test
jo
mov
push
inc
mov
add
cld
vpperm
and
mov
insl
or
push
adc
xchg
sarl
push
addb
sbb
add
adc
mov
aam
rcll
pop
lds
scas
adc
adc
mov
mov
arpl
iret
nop
hlt
push
adcb
inc
xchg
xchg
mov
arpl
or
push
daa
fstpl
mov
fwait
jb
inc
xchg
test
sti
inc
xor
xor
or
mov
mov
push
orb
lods
ss
shll
mov
imul
stc
scas
loopne
adc
jecxz
xchg
jae
mov
scas
push
scas
sub
test
lcall
add
cmpsb
mull
cld
shrb
gs
ficompl
shrl
rorb
xchg
fisttps
push
pop
jle
mov
insl
push
leave
insl
mov
inc
sbb
sbb
add
call
mov
adc
adc
and
push
xor
and
lock
jbe
jp
dec
aas
jb
test
jg
cld
hlt
nop
daa
pop
out
xlat
ljmp
imul
inc
cmp
jae
cmc
hlt
jb
sbb
dec
adc
adc
and
adc
push
jns
sahf
jle
pop
ret
pop
jle
cli
jnp
jnp
out
mov
jecxz
inc
test
xlat
movsl
pop
push
daa
bound
adc
cld
stos
jle
sub
dec
outsb
out
adc
sbb
sbb
orl
and
call
imul
jno
int
fldl2e
push
or
lods
outsl
cmpsb
and
jbe
push
mov
leave
aas
push
push
pop
push
std
push
nop
sub
dec
arpl
cli
add
test
jle
pushf
adc
xor
inc
and
or
lds
mov
clc
mov
xlat
mov
sti
ja
shll
lret
xchg
cwtl
mov
mov
stos
push
mov
cmpsl
shll
jno
sbb
pop
pop
and
popa
into
add
jae,pn
sbb
xor
cmp
mov
pusha
test
std
jp
mov
sbb
idivb
popl
add
icebp
xchg
mov
jge
jne
shl
push
jnp
jle
cltd
jg
and
pop
cli
lret
adc
xor
push
adc
jl
pop
pop
into
xchg
and
jg
push
sbb
or
negb
add
sub
jo
das
mov
push
pusha
sahf
push
cmpl
shll
mov
mov
int3
sbb
xchg
cmp
out
sbb
adc
adc
push
or
fldl
mov
push
mov
xchg
add
add
push
and
fstl
mov
sbb
add
mov
fistps
mov
nop
fucomi
clc
scas
push
ja
sub
stos
ret
mov
sbb
and
jle
sub
aas
xor
aam
iret
ljmp
fs
leave
push
jg
rorl
jp
inc
jbe
daa
clc
lahf
add
dec
mov
js
cmc
lds
outsl
jbe
jg
xchg
ret
and
xlat
xchg
test
imul
pusha
mov
cs
jg
jmp
add
xor
xor
xchg
daa
adc
cli
mov
sub
sahf
adc
pop
mov
mov
pop
popa
repnz
decl
cli
jle
decl
jmp
pop
mov
push
dec
aas
mov
xor
je
push
mov
loopne
cli
jae
sarl
mov
sub
adc
test
mov
ret
sub
cli
adc
sbb
add
dec
lcall
mov
das
clc
sbb
mov
inc
idivb
je
jle
dec
cmc
and
cs
mov
xorl
add
jp
fwait
adc
or
sbb
jg
sub
inc
stc
or
jmp
mov
dec
sub
xor
les
sbb
xchg
mov
pop
xor
cli
stos
lods
rclb
lods
dec
add
stos
xor
jg
push
push
dec
adc
sti
push
mov
bnd
pushf
cmpsl
les
add
lods
pop
or
adc
mov
mov
pop
and
xchg
das
jl
xchg
sbb
and
nop
jns
mov
sahf
aam
adc
push
add
or
popa
xchg
iret
mov
stos
cmp
lock
fisubs
xor
in
push
cli
lods
adc
push
inc
and
jno
push
nop
and
xchg
ljmp
mov
jmp
sub
mov
mov
xchg
or
ss
mov
and
pop
cmpsb
out
jne
outsl
inc
pop
mov
or
adc
pop
ds
xchg
mov
inc
arpl
test
lods
pop
lea
xor
jns
notb
or
xor
or
aaa
aas
sub
ja
lods
ret
lock
mov
outsb
mov
mov
cmc
dec
ret
and
mov
xchg
sub
lds
cmp
sahf
xor
push
lods
or
adc
lock
rep
mov
cmp
lods
rcl
push
adc
adc
sub
jge
lcall
inc
push
jle
jno
pop
test
fucomp
ss
pop
pushf
js
jae
btr
and
push
jbe
sub
adc
adc
add
inc
push
outsl
negb
fisubl
arpl
mov
pop
leave
imul
xor
add
insl
xchg
lahf
adc
and
pop
xchg
adc
inc
and
jns
push
mov
leave
xchg
sahf
imul
inc
jnp
lods
iret
pushl
ja
adc
call
and
inc
rcrb
in
mov
sbb
xchg
mov
mov
inc
push
add
fldenv
push
mov
jmp
sub
and
push
mov
nop
sub
xor
stc
xchg
mov
push
fldt
shrb
jnp
or
and
jg
sbb
and
adc
cli
lods
or
and
mov
lods
sbb
xadd
stos
aam
outsb
stc
out
add
add
mov
jg
pop
mov
and
jl
cmp
mov
sbb
xor
in
mov
push
pushf
movsl
pop
test
push
aam
adc
lret
add
sbb
js
xchg
xor
pop
add
cmp
inc
or
push
pop
jl
gs
dec
bound
lock
cld
andl
dec
pop
insl
cmp
idivl
stos
adc
push
inc
xchg
inc
adcb
jl
lcall
loop
jbe
mov
push
in
add
or
pop
scas
addr16
and
sbb
dec
jns
rcr
andb
inc
dec
repz
cmp
icebp
je
and
cld
scas
repz
dec
daa
add
cltd
iretw
scas
cld
push
jl
hlt
lock
rclb
and
xor
cmpb
push
into
mov
scas
add
insl
and
jns
jo
lgdtl
and
cmp
aas
mov
sub
in
fmull
xchg
icebp
stc
insb
fldt
popa
mov
repz
arpl
ret
pop
call
mov
div
and
xchg
sarb
das
adc
add
lahf
sti
scas
or
xchg
inc
xchg
sahf
pop
dec
stos
and
out
sub
mov
jl
cmc
pop
mov
xchg
add
mov
gs
mov
cld
mov
aam
in
mov
shr
and
iret
pop
addb
movsb
dec
ret
or
push
add
stc
pop
arpl
je
jne
xchg
stos
out
sub
push
adcl
add
xor
leave
outsb
cwtl
inc
sti
das
pop
sub
adc
pop
insb
mov
or
xchg
push
mov
adc
dec
cmp
dec
cmpsb
mov
jae
cmpb
push
ja
jle
mov
add
push
or
jg
mov
sti
jo,pt
ljmp
xor
popa
sub
or
rclb
cmp
push
inc
fadd
lret
imul
xchg
mov
mov
xchg
aas
daa
jo
div
jne
out
mov
insl
ret
lret
scas
push
fldt
arpl
jnp
popl
fsts
imul
cmp
xchg
add
inc
adc
push
lock
pop
add
cmc
mov
test
mov
sahf
mov
pop
push
loope
call
imul
cmp
xchg
pop
je
jg
cmp
push
aas
decb
subl
test
xor
and
fildl
or
pop
pop
push
adcl
jle
stos
xor
add
adc
inc
jg
movsb
aaa
enter
daa
mov
mov
test
xor
pop
adc
jge
enter
adc
dec
cmpsl
sbb
bound
jns
xchg
push
push
es
pusha
xor
mov
sbb
and
movups
lods
xor
es
mov
adc
add
dec
or
cmp
sbb
mov
popa
jmp
mov
stc
cli
stc
sbb
sub
add
test
pop
mov
pop
lret
mov
gs
hlt
sbb
dec
sahf
cli
clc
out
jle
std
add
jo
adc
xchg
sub
mov
dec
cli
and
movsb
test
insl
cmpl
mov
xchg
movsl
stos
add
cmp
sbb
sti
loop
into
inc
arpl
pushf
jo
test
pop
nop
and
leave
movsl
or
jge
inc
hlt
dec
out
aas
mov
cltd
pop
inc
iret
or
inc
xchg
jg
shr
repnz
jl
sub
or
dec
andb
pop
dec
dec
stc
sbb
sti
add
shll
dec
arpl
insl
jg
sbb
sbb
add
pop
jle
adc
lcall
mov
adc
in
xor
lahf
inc
div
jle
test
decb
insl
arpl
mov
push
imul
push
mov
mov
mov
insl
incl
add
in
mov
xchg
dec
popl
mov
jo
in
in
jno
jne
and
cmpb
xchg
pop
sub
pop
add
ja
add
pop
xchg
jmp
push
inc
fidivl
popa
inc
push
daa
imul
decb
xor
stos
outsb
mov
insb
pop
push
inc
leave
in
mov
xchg
jns
sahf
mov
xchg
jmp
fs
js
pop
jno
mov
lret
push
test
dec
push
jp
pop
jae
sub
icebp
pop
lods
adc
adc
test
js
outsb
loopne
stc
add
fs
popf
or
dec
mov
cmc
nop
repz
lahf
std
cmpsb
sbb
sub
mov
mov
mov
xchg
adc
stos
or
pushf
jmp
or
cmp
adc
pop
jecxz
pop
jno
mov
add
adc
add
ret
repz
shl
jo
mov
cmp
mov
mov
mov
sbb
jge
lock
push
out
mov
xchg
mov
mov
or
repz
and
or
jg
outsl
inc
clc
dec
cltd
out
andl
mov
adc
dec
pop
add
dec
stos
mov
inc
fists
xchg
nop
fsin
pmullw
popf
imul
pop
fdiv
mov
fs
pop
push
mov
push
push
hlt
jns
xchg
lods
adc
dec
xor
cmp
add
test
or
test
xchg
adc
sub
rcpps
lcall
insl
cmc
syscall
fisubs
cmpsb
add
adc
jb
mov
mov
add
ljmp
bound
add
stos
or
xor
inc
cli
outsl
push
lahf
jl
das
nop
or
mov
sti
inc
push
outsl
mov
lods
push
mov
sbb
jge
adc
aaa
aaa
cmp
pushf
inc
inc
mov
fwait
repz
inc
js
mov
jbe
xchg
add
mov
push
jbe
flds
add
pop
jle
daa
dec
jmp
iret
loop
fadd
enter
subl
test
into
inc
xor
sub
adc
sub
xorb
jg
cmp
xchg
js
jne
sub
sti
xor
mov
xor
mov
jmp
adc
mov
xor
sub
std
cmpxchg
xchg
inc
stos
aaa
mov
mov
cmp
mov
in
dec
sbb
push
je
ficomps
mov
push
movb
scas
orb
icebp
pop
adc
arpl
or
dec
in
test
lcall
bnd
add
add
stos
pop
imul
xor
add
xchg
lahf
ret
pop
loope
inc
push
lret
mov
js
mov
xor
das
lahf
push
add
dec
daa
in
mov
shrl
mov
daa
std
js
aad
and
popf
popa
js
push
and
mov
add
pop
fists
adc
mov
jnp
jnp
lds
aaa
or
stos
lcall
inc
testb
xor
xor
addb
pushf
inc
pop
cli
add
xor
js
add
cmpsb
xlat
into
jns
add
movsl
insl
dec
jmp
in
push
dec
out
mov
lcall
outsl
call
cmp
movsl
sar
cmp
push
or
mov
push
push
xchg
popa
dec
leave
mov
lcall
sub
or
iret
gs
xor
shlb
pop
pop
xor
or
and
mov
fwait
addb
sbb
shlb
mov
in
cmpsb
repz
mov
add
iret
inc
and
adc
inc
jg
jbe
leave
dec
cwtl
aad
jl
cld
imul
pop
and
xchg
test
inc
mov
sahf
sbb
je
push
add
push
and
rol
lock
outsl
movhps
xorb
inc
fisttpll
mov
and
push
adc
inc
pop
lret
mov
aam
sub
lods
add
int3
sub
imul
add
cld
push
pop
ljmp
dec
push
lahf
xor
cld
inc
jo
je
xchg
xor
test
sbb
nop
dec
add
cmpsb
xchg
cmpsl
movsb
imul
dec
and
addb
pushl
outsl
push
pop
jne
cwtl
ret
or
enter
sbb
cld
lods
xchg
jge
clc
movsb
xchg
dec
je
add
sbb
xorb
cli
xchg
imul
xchg
mov
pop
outsb
fcomp
fisttps
nop
aas
call
xor
insb
mov
rol
cli
test
adc
addl
lods
js
div
mov
lret
hlt
imul
aas
add
push
inc
fcompl
lods
inc
jmp
sub
test
cltd
mov
dec
repz
and
push
mov
je
pop
add
xchg
ja
push
adc
icebp
mov
add
mov
xchg
adc
gs
xor
icebp
inc
mov
orb
pop
dec
inc
punpcklbw
adc
mov
sub
and
lea
xchg
xor
out
repnz
imul
fiaddl
negb
repz
cmc
xor
push
fwait
jle
in
mov
or
mov
jle
xchg
lret
adc
pop
pushf
add
lea
xchg
jmp
and
jns
xchg
rol
sub
or
mov
in
adc
and
bound
jo,pt
jbe
xor
cmc
mov
sub
inc
popa
test
in
dec
cmp
lahf
popf
mov
jle
mov
jl
sbb
xor
pop
add
lods
pop
pop
mov
push
adc
sbb
mov
jae
cmp
int
jnp
mov
push
movsl
dec
test
add
xchg
xchg
sbb
jo
js
js
sub
andl
popa
jge
les
std
cs
fdivs
jne
jae
sbb
jge
pop
scas
inc
negb
test
xor
or
and
jg
xor
ljmp
sbb
inc
lods
mov
inc
jbe
xor
mov
sub
stc
sub
inc
ffreep
mov
mov
add
pop
rorl
jne
pop
lock
lcall
dec
pushf
popf
adc
cmpsl
xor
jb
jno
push
ss
or
mov
jb
xor
fcoms
jp
mov
pop
js
jecxz
jecxz
test
jb
fsubl
or
xchg
fldl
mov
mov
pop
mov
sbb
stos
inc
pop
add
or
in
xor
dec
scas
mov
xor
add
mov
mov
mov
pop
adc
mov
cwtl
or
adcl
outsl
cwtl
pop
sbb
mov
ret
jp
mov
fstpl
jge
cmpl
jne
addr16
cld
imul
and
mov
mov
bound
sub
or
stos
scas
mov
inc
ja
sbb
cld
fwait
adc
pop
test
jg
push
lods
sub
xchg
adc
xchg
or
inc
gs
mov
lcall
adc
dec
and
fwait
push
sbb
jnp
jne
adc
pop
add
jle
pop
lock
clc
dec
push
das
inc
ret
xor
cli
add
cltd
jbe
cmc
adc
jo
dec
test
cmp
sub
jg
scas
adc
mov
cli
jp
xchg
call
dec
das
sub
jecxz
sbb
das
movsl
push
add
nop
or
pop
sub
pusha
imul
adc
xchg
xor
or
mov
cmp
inc
imul
addr16
and
pop
sbb
scas
lret
jge
js
jae
jl
cmovg
cli
cmp
orb
pop
mov
xor
add
sub
sbb
xor
in
sub
fcompl
daa
cmc
scas
inc
add
sub
or
js
dec
and
or
mov
mov
mov
adc
pop
push
inc
adc
mov
jns
push
pop
scas
lods
in
mov
or
inc
add
mov
cmpsl
je
popa
fwait
cld
jg
jne
or
mov
cltd
ss
jge
cmpsb
add
adc
mov
push
es
xor
xlat
movsb
push
in
sub
adc
add
add
adc
sti
xchg
incl
inc
ret
inc
daa
stos
roll
xchg
mov
add
inc
test
push
mov
cmp
mov
xor
pop
daa
and
cmp
adc
inc
mov
fmull
rorl
push
sahf
xor
cmc
insb
mov
inc
sti
shl
lock
je
mov
dec
nop
aas
imul
and
subb
jns
lret
hlt
out
add
das
or
push
add
push
cmpsb
pop
mov
adc
adcl
imul
test
xor
hlt
adc
or
sub
roll
mov
pop
sbb
movsl
mov
mov
mov
xor
je
scas
mov
cmovge
out
repz
rcrb
pop
insl
outsb
xor
jns
adc
out
pop
add
stos
aas
or
repnz
movsb
test
add
cmc
pop
aam
adc
or
xor
int
addr16
mov
or
popa
jo
sub
imul
add
aaa
pop
jmp
push
mov
push
or
sbb
jecxz
xchg
inc
or
cmpsl
incl
emms
popa
adcb
fcomps
cld
inc
dec
add
popa
clc
add
popa
and
push
popf
test
mov
cmp
lods
stc
jns
mov
adc
xchg
popf
pop
xchg
or
or
out
sbb
xchg
jo
add
cmc
insl
xor
dec
jae
shll
push
lods
jo
cmp
lret
jle
mov
adcl
test
loopne
stc
iret
sub
pusha
negb
mov
xchg
mov
xchg
sbb
lcall
mov
and
xorb
xor
stos
das
jns
fcmovb
fwait
int3
pop
xchg
jecxz
xchg
test
add
push
mov
popa
jne
out
xlat
xchg
xchg
jg
sbb
xchg
daa
std
jle
cmp
add
sub
mov
cli
testl
pop
arpl
mov
inc
cmp
jne
and
cmc
inc
jb
testl
pop
jecxz
je
mov
fcompl
mov
push
xchg
pop
jge
cld
xor
push
lret
and
mov
jne
jbe
pop
or
cwtl
shll
aad
cmp
stc
push
out
orl
outsl
nop
scas
lods
push
daa
or
sbb
adc
out
inc
jge
js
mov
sbb
pop
sti
sbbl
mov
mov
test
inc
shlb
pop
mov
loop
or
cwtl
testl
xchg
fs
xor
movsb
push
sti
xor
loope
nop
mov
aas
in
nop
xchg
jns
fdivl
filds
imul
mov
pop
pmulhw
push
in
mov
loopne
pusha
pop
mov
test
into
jecxz
jp
add
mov
adc
sub
adc
jp
aam
pusha
ja
fisubl
xor
int3
or
dec
mov
ja
add
pop
sahf
sub
pop
mov
pop
fwait
pushf
jnp
push
daa
shll
jge
xchg
jne
mov
es
loope
lcall
jno
jge
or
pusha
hlt
sbb
fmull
adc
mov
pop
or
cld
mov
adc
jge
add
dec
fs
aad
pop
shll
cmc
and
popa
xchg
adc
add
pop
repz
aad
xchg
fdivrl
xchg
add
mov
dec
outsb
xor
in
pushf
jo
jge
invd
arpl
add
cli
daa
aad
push
xor
push
and
push
sahf
jbe
xor
lret
mov
mov
adc
dec
xchg
mov
enter
dec
inc
add
call
jae
add
wbinvd
push
inc
lahf
popa
push
jmp
mov
push
mov
and
or
lock
test
xchg
add
loop
mov
sbb
jg
add
orb
leave
adc
add
or
addl
arpl
repz
lods
and
nop
sub
fwait
popa
and
lds
mov
in
xchg
jge
cmc
scas
cmpsl
ds
pop
push
adc
push
mov
not
jbe
sub
lods
jno
pop
xchg
inc
cld
or
in
add
add
loopne
and
mov
cld
push
push
call
push
call
cmp
je
push
call
test
je
push
push
push
call
push
push
push
push
call
push
call
mov
mov
mov
cmpl
je
decl
sub
negl
add
jmp
pop
pop
pop
leave
ret
jno
add
or
bound
add
and
mov
add
push
call
cmp
jne
push
push
push
call
cmp
je
mov
push
push
call
cmp
je
push
call
mov
push
push
call
push
push
call
push
call
and
jne
mov
push
call
cmp
je
mov
push
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
cmp
je
push
push
call
mov
push
call
mov
push
push
call
push
call
mov
push
push
call
push
call
mov
push
push
call
mov
push
call
mov
push
pushl
call
mov
push
call
cmp
jne
mov
push
call
cmp
je
mov
push
call
or
je
or
jne
push
push
call
push
push
call
lea
push
push
push
call
mov
push
call
mov
push
call
mov
mov
push
push
push
call
pop
mov
mov
push
call
cmp
jne
push
push
call
subl
addl
push
push
call
call
mov
push
push
call
movl
pushl
push
call
test
jne
mov
pushl
push
call
cmp
je
and
jne
shrl
push
push
call
pushl
call
addl
push
push
call
call
adc
or
rclb
in
sub
push
push
push
push
push
push
push
call
mov
mov
xor
mov
mov
rep
inc
cmp
jne
pop
pop
pop
mov
pop
ret
movsb
adc
test
dec
addb
jnp
add
jnp
add
jnp
add
add
add
add
jg
add
daa
jnp
add
jnp
add
jnp
add
jnp
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
push
imul
insb
insb
outsl
arpl
add
add
je
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
add
add
insb
jae
jb
outsb
inc
add
add
insb
jae
jb
insl
jo
add
add
adc
sub
add
add
add
adcb
add
and
movsb
orb
add
sbb
adc
and
add
or
or
add
add
add
add
add
inc
push
add
or
popa
add
and
add
add
add
or
add
adc
add
add
adc
lcall
lea
add
ret
xor
add
add
add
mov
push
add
add
add
or
add
add
addb
and
add
add
add
add
lea
add
adc
inc
add
add
adc
inc
add
adc
add
add
test
add
adcl
add
and
and
add
or
add
add
add
or
mov
or
inc
add
and
adc
add
add
add
add
add
mov
push
pop
pop
data16
clc
loop
ds
mov
inc
cmovo
jg
test
orb
add
mov
jns
sbb
and
jbe
cmpb
sti
js,pt
inc
shr
xor
pop
daa
sarl
inc
popa
mov
outsb
out
mov
jle
mov
testl
xor
mov
jge
repz
pop
ja
ljmp
inc
sub
push
lods
mov
jl
les
inc
xchg
lea
xchg
je
fldl
mov
pop
mov
data16
test
sbb
in
pop
cmp
cld
pop
jne
add
fsts
push
mov
dec
mov
popa
xchg
mov
pop
mov
dec
mov
subb
dec
or
pop
rol
mov
sub
orl
inc
in
jbe
jg
adc
pop
aaa
das
mov
ret
pop
leave
dec
cli
in
ret
mov
incb
adc
cmpsb
dec
imul
mov
sbb
sbb
dec
adc
sarl
popa
add
daa
test
mov
mov
je
pop
sub
lods
inc
les
mov
fcom
lods
hlt
add
inc
lcall
inc
shll
mov
mov
mov
add
push
insb
inc
mov
into
inc
add
sub
shrb
fisttpl
sub
xchg
xor
in
or
cld
lods
popf
jg
lods
jl
pop
sbb
fidivrl
stos
sar
gs
cmp
mov
cli
add
subl
xchg
xor
jno
int3
frstor
mov
out
mov
and
rcrb
popf
outsb
cmp
push
std
stos
jb
jg
xchg
lds
add
push
movsl
movsl
xor
sarb
sbb
fldt
pop
icebp
jno
push
jle
xor
lea
pushf
jns
mov
add
xor
fildll
xor
cmpsl
mov
inc
mov
jae
movsl
lcall
cld
lea
sahf
mov
mov
lret
xor
data16
dec
add
jp
mov
jmp
idivl
xlat
popa
add
insl
xchg
jecxz
xchg
aam
or
fisubl
cld
add
std
xor
push
jae
rcrl
push
data16
adc
inc
push
jp
push
clc
pop
and
mov
xorb
adc
jle
or
insl
fldl
cld
mov
inc
xchg
fmuls
cltd
das
scas
popa
lret
push
xchg
push
js
push
rep
inc
xor
mov
inc
inc
icebp
outsl
cwtl
pop
add
jg
pop
popf
in
jne
jb
push
pop
js
push
sbb
aaa
fildl
add
mov
and
daa
pop
sti
xchg
rclb
xchg
mov
mov
ror
test
xlat
or
add
or
out
mov
js
movsb
jnp
cmpsl
jnp
jns
push
cmc
pop
jmp
ja
in
negl
push
stc
or
ret
sahf
inc
out
mov
cltd
ss
push
in
sub
sbb
sahf
add
pop
adc
push
or
jl
xchg
inc
out
pop
xor
mov
in
das
out
ret
test
in
lds
sub
xchg
cmp
stos
out
incb
shlb
aad
lods
jmp
pushf
jno
sahf
push
in
out
orl
sbb
sbb
and
jae
jns
divl
mov
and
ljmp
xor
jnp
scas
push
add
into
addr16
inc
add
loopne
mov
cmc
or
jg
pop
es
push
lods
popa
mov
shrb
xchg
mov
rolb
mov
add
adc
mov
out
icebp
add
sub
data16
fninit
dec
and
adc
dec
data16
test
insl
adc
push
adc
jl
xor
sub
imul
jmp
popa
sahf
daa
inc
and
ret
inc
mov
leave
cmp
xor
and
cmp
mov
scas
ja
push
subb
addr16
adc
push
cmp
mov
sbb
negb
xchg
shrl
mov
jo
stos
jnp
sbb
jmp
cmp
xor
mov
fbld
ja
test
jno
jno
jbe
pop
into
pop
cli
pop
js
cmp
adcl
adc
push
das
cmpsl
cmp
mov
leave
test
sbb
popa
xorb
inc
mov
and
xor
add
mov
and
xchg
mov
aam
cmp
int3
ds
std
es
xchg
enter
xchg
sub
adc
pop
push
sbb
lret
ret
pop
dec
jb
jl
xor
out
adcb
pushf
add
pop
into
les
jp
js
mov
push
addl
xor
adc
add
push
xchg
cmpsb
lret
mov
cmp
jmp
js
dec
arpl
nop
and
dec
jecxz
das
dec
mov
push
repnz
adc
inc
addb
out
adc
daa
xchg
add
mov
dec
imul
mov
out
and
nop
loop
mov
cmp
incb
push
test
stc
imul
lret
into
sbb
push
aas
jle
adc
mov
adc
adc
xchg
dec
dec
xor
lcall
jnp
add
xor
cmpsb
adc
lods
pop
repz
adc
push
and
or
cmc
xchg
imul
sbb
cmpsb
jne
das
mov
lret
jg
push
xor
mov
pop
and
stos
xlat
inc
aas
lret
lahf
adc
ds
add
xchg
test
mov
dec
in
pop
ss
mov
or
jge
jl
mov
mov
jne
xor
pusha
dec
cwtl
shr
sbb
cld
sub
inc
ds
add
or
fcom
mov
jg
hlt
hlt
dec
fs
sub
sahf
je
mov
daa
inc
mov
lods
adc
dec
std
les
or
mov
addr16
xchg
cmp
xlat
js
and
push
xchg
mov
mov
inc
jnp
js
std
aad
jp
or
shlb
adc
ret
rcrl
outsb
jge
jp
loope
cli
cwtl
ja
fldenv
rclb
jl
cmc
mov
mov
in
inc
cmp
dec
jge
jg
test
ljmp
test
and
repnz
lret
dec
pushf
push
pop
adc
inc
dec
pop
sbb
test
lods
push
outsl
ja
std
xchg
ficoml
push
cltd
std
xor
and
mov
cmpsl
mov
mov
jmp
loopne
sbb
adc
lea
jge
call
adc
push
sbb
adc
or
or
mov
sub
outsl
stc
sbb
push
jmp
jp
rorb
inc
xor
or
shll
push
cmp
sbb
xor
cmp
test
lock
pushl
icebp
mov
inc
out
fistl
jno
test
jecxz
call
pop
imul
icebp
fsubl
jge
mov
pop
pushf
imul
in
fimull
test
add
or
add
lds
stos
ret
dec
sub
jae
shll
push
das
inc
lcall
jmp
add
aaa
cli
mov
aaa
pop
dec
call
sbb
adc
cli
jns
jbe
jle
add
jo
popa
insl
jg
cmpsl
mov
pop
popf
cmpsl
sub
and
lcall
sti
lahf
ss
mov
add
out
enter
dec
or
jbe
orb
mov
and
pop
fisttps
add
das
pop
shll
pushf
dec
adc
dec
dec
fwait
ret
scas
je
push
sbb
shl
push
lcall
sub
mov
filds
xchg
dec
daa
ljmp
imul
cmp
mov
stos
out
push
insl
sbb
sbb
add
jle
insb
test
mov
adc
jnp
xchg
push
jp
pop
pop
mov
adc
das
movsb
xchg
daa
cs
dec
and
cwtl
push
stos
push
into
push
lcall
sbb
movsl
ret
sbb
pop
mov
cmc
sahf
add
or
pop
xchg
adc
cmp
xor
jge
inc
dec
add
scas
leave
cmpl
paddd
push
add
and
push
adcl
rclb
cmc
lds
lods
fs
in
ljmp
divb
xchg
arpl
nop
div
xor
xchg
jg
xor
sub
arpl
push
and
xor
enter
sub
orb
add
loop
xchg
nop
jae
mov
inc
and
sub
add
xchg
cld
pop
adcb
js
cmpsl
pop
adc
addr16
lods
and
in
int
lcall
xchg
dec
add
in
jbe
movsl
scas
loop
sbb
sbb
andl
hlt
outsb
fnstsw
mov
mov
fsubs
and
sar
stos
sar
jle
push
xchg
jg
push
push
push
or
pushl
incb
andb
stos
pop
test
mov
adc
xchg
mov
aam
aas
add
adc
add
push
lods
mov
inc
icebp
fisubs
ja
jl
pusha
sbb
cmpsb
add
icebp
and
insl
rol
mov
or
mov
inc
cli
rcll
pushf
mov
pop
lahf
aad
orb
daa
adc
addb
xchg
fadds
hlt
std
xchg
adcb
testb
incl
push
clc
or
icebp
push
jae
lock
inc
std
push
adc
fildl
xchg
pusha
mov
lahf
les
cld
outsl
or
pushf
xchg
mov
das
and
sbb
sbb
jne
scas
mov
stos
test
add
dec
xor
out
push
mov
icebp
iret
jp
jmp
and
in
shlb
lcall
or
or
fisubrl
or
sbb
xchg
add
or
push
arpl
add
lahf
jb
cmpsl
xor
or
outsb
je
adc
xchg
or
mov
and
repnz
stos
adc
mov
popa
hlt
inc
lods
pop
nop
icebp
or
scas
insl
scas
sbb
sbb
test
xor
push
pop
add
sbb
jecxz
lock
loopne
mov
rorl
pop
imul
dec
jge
push
push
or
cltd
push
rcl
shl
xchg
rep
test
mov
sahf
inc
jbe
jl
xor
pop
sub
mov
lds
push
xchg
add
pop
mov
xorl
ljmp
mov
out
sub
sahf
xor
jnp
jg
sub
or
lods
pop
or
or
mov
nop
repnz
lds
clc
outsl
and
mov
jbe
repnz
xchg
or
sbb
orl
aaa
xor
ror
mov
sub
inc
int3
jbe
pop
lret
sbb
ja
xchg
mov
mov
sti
push
gs
ret
xchg
cmpsl
ret
jecxz
inc
test
push
negl
sbbl
and
das
in
fs
add
xlat
mov
cmp
push
add
pushf
fwait
sti
outsb
repz
xor
aas
cmp
cmpsb
xchg
adc
mov
lcall
fstpl
jbe
sbb
fstpl
shrb
xchg
cmp
mov
add
fistps
adc
mov
lahf
fwait
ja
xchg
jnp
das
outsb
and
aaa
push
stc
xchg
dec
sbbl
mov
sahf
loope
push
outsb
imul
testb
sub
jg
daa
test
cmp
nop
movsl
pop
lahf
mov
ljmp
pop
jnp
mov
ja
pop
incl
sub
push
insl
mov
mov
mov
mov
xchg
lret
lods
xor
xchg
add
mov
inc
jg
mov
lret
pop
push
outsb
cli
mov
xchg
movsb
inc
rcrb
in
faddl
lret
je
mov
adc
xchg
mov
mov
mov
fbstp
pop
sbb
add
adc
loope
mov
cmp
xchg
or
fnstsw
push
add
xor
mov
enter
sbb
push
sub
movsl
mov
pop
push
iret
dec
mov
test
xor
mov
mov
mov
jmp
dec
pop
sub
xchg
mov
jmp
mov
sbb
xor
shrb
add
jno
cmp
jecxz
or
sarl
adc
jno
sti
aaa
dec
lret
repnz
out
mov
les
outsl
jp
incl
mov
sbb
add
mov
lret
test
jae
hlt
or
das
sahf
movl
mov
dec
add
cmp
insl
dec
xchg
mov
and
mov
adc
mov
add
add
or
xlat
inc
pop
mov
push
in
divl
pop
push
aaa
push
add
cmp
int3
sbb
adc
lock
cmpsl
inc
or
stos
pop
sahf
pushl
and
mov
add
ja
cltd
xor
jmp
std
fisttpll
xchg
test
fildl
adc
inc
mov
insl
idiv
orb
sbb
test
aam
adc
cmp
mov
gs
and
lret
rcrb
gs
clc
sbb
movsb
pop
jp
inc
orl
or
or
xor
pop
roll
mov
scas
repnz
mov
lcall
xchg
test
mov
call
cmpsb
dec
adc
xor
and
divb
jge
sbb
or
scas
fnstsw
dec
mov
sub
xchg
add
pushf
cmp
jae
pop
push
adc
cmpsw
sarl
adc
sbb
jns
stc
orb
jno
lea
outsl
jg
addr16
lds
subl
sbb
leave
imul
aaa
jbe
icebp
outsb
cltd
add
push
shrl
shrl
or
mov
push
cmpsl
xor
das
je
jae
shrb
adc
movsb
std
notl
xor
cmp
mov
jne
insb
xorl
shrl
and
mov
popa
call
mov
jbe
daa
dec
rorl
fwait
adc
fs
stc
out
sub
lods
icebp
jbe
jns
pop
dec
or
mulb
dec
push
add
fs
xor
imul
dec
rcrb
adcl
ret
insl
xchg
push
roll
jg
add
ja
jo
xor
andl
es
clc
loopne
movsb
pushf
js
clc
xlat
jle
xchg
test
sarb
into
xchg
mov
fisubrl
sub
bound
push
add
ja
mov
push
push
jmp
push
and
mov
adc
sbb
add
cli
mov
jns
mov
inc
pop
jge
divl
mov
paddw
jge
movsl
inc
sub
cli
mov
xor
xchg
repnz
sub
mov
jae
dec
or
call
jo
sahf
int
cmp
xor
xlat
pusha
stc
sbb
push
mov
ja
mov
ret
popa
cltd
ja
add
xchg
sahf
cwtl
adcl
movsl
mov
ret
xor
ljmp
mov
pop
adcb
pop
fwait
loope
into
dec
hlt
or
fsubs
nop
out
pop
xchg
cwtl
mov
or
mov
fcmovb
orl
xor
outsb
mov
sbb
rorl
test
sub
pusha
cmp
or
jns
dec
jb
mov
icebp
mov
xchg
jne
xor
or
int3
push
adc
jg
mov
and
leave
psubusb
scas
jl
into
pop
cmp
mov
scas
inc
and
mov
pextrw
sahf
aad
das
cmc
in
push
clc
shlb
add
push
push
or
das
test
insl
sub
sbb
mov
adc
xchg
popa
pop
aad
sub
aas
mov
xor
inc
loopne
pop
dec
gs
rcll
ror
rcr
inc
es
mov
xchg
add
dec
lods
and
aad
cli
out
inc
and
divb
mov
dec
inc
cli
roll
adc
cmpsb
std
shll
icebp
cmpb
jne
sbb
push
cmp
mov
mov
comiss
js
test
cmc
rcrb
mov
add
push
cltd
fisttps
and
jno
mov
jno,pn
and
xchg
cmpsl
mov
jp
xchg
mov
std
dec
xchg
sbb
andl
jb
xor
sbbb
ds
or
sbb
xchg
pop
jbe
std
sub
mov
cmp
cld
jge
enter
cmp
in
nop
or
andl
jp
jg
repz
js
or
dec
mov
lea
sbb
lods
lock
arpl
insb
stos
lock
add
es
jle,pt
outsb
inc
mov
in
cli
add
andl
lods
sub
fs
imul
dec
outsb
jecxz
dec
sbb
sarb
sub
movsl
mov
cmp
test
jae
test
frstor
cmp
push
dec
shrb
leave
push
xchg
arpl
sbb
push
sbb
or
stos
mov
imul
sub
mov
ljmp
pop
scas
push
dec
push
and
std
or
or
in
mov
or
xor
ja
and
data16
pop
fs
xchg
js
push
loopne
mov
add
ds
cmpb
adc
mov
hlt
ret
inc
push
lea
mov
cli
cmp
cmc
std
dec
mov
and
cmp
sbb
lret
imul
mov
xchg
pop
mov
mov
lahf
xchg
jb
add
adc
mov
cmpsb
sub
push
mov
sub
nop
imul
insb
out
adcb
inc
cld
pop
jl
cltd
xchg
jo
adc
jp
sahf
pop
fbstp
aaa
and
std
sub
bound
push
fcompl
fwait
imul
cmp
das
cmpsl
or
insl
rcll
push
in
add
hlt
mov
outsl
pushf
or
xor
add
mov
mov
fisubl
es
and
or
jno
insl
or
push
dec
aaa
repnz
in
fwait
mov
mov
adc
popa
mov
jp
mov
mov
xorb
je
mov
jmp
jae
add
stos
add
dec
adc
xor
adc
into
push
mov
mov
fcompl
jbe
cmc
xchg
mov
aaa
cli
dec
icebp
cmp
adc
test
push
jno
stos
push
nop
insl
xchg
cmpsl
inc
adc
jae
cmc
je
data16
xor
jno
dec
jle
and
pusha
pop
push
dec
add
sar
adc
jns
xchg
adc
out
rdpmc
cmp
jle
fcmovne
and
xchg
cmp
aaa
sbb
sub
cs
sbb
jno
cmpsl
jle
imul
icebp
inc
mov
adcb
stc
out
iret
divl
xchg
jno
inc
and
push
and
jge
addl
add
push
jl
xchg
xor
dec
daa
pop
cwtl
call
lcall
dec
pusha
inc
jmp
cmpsl
adc
add
stos
lret
mov
mov
jg
adc
icebp
js
jns
sahf
outsl
out
push
mov
jbe
jl
adc
add
mov
and
pop
ret
or
mov
sbb
repz
rcrl
dec
sbb
xor
fidivrs
rcl
xor
sub
xchg
repnz
and
incb
mov
push
loope
add
pop
mov
shrd
rorl
xor
xchg
lock
adc
jg
jb
push
add
outsl
cwtl
xor
les
or
jmp
jae
sbb
xor
lock
arpl
or
scas
nop
popa
addr16
mov
andb
clc
mov
lods
test
and
outsl
in
cld
mov
pop
test
inc
repnz
push
pop
arpl
or
sub
outsl
mov
or
jecxz
pop
mov
dec
dec
sahf
pop
jle
cmc
shll
sbbl
rcrl
pop
adc
add
mov
adc
mov
push
stos
inc
repnz
ret
inc
data16
and
lahf
jle
fildll
mov
ljmp
dec
iret
bound
xchg
rol
cmc
dec
pop
mov
into
aam
popf
mov
and
aas
out
dec
cmp
jecxz
xchg
nop
inc
imul
inc
mov
or
scas
or
hlt
aas
jbe
shl
sub
pop
push
cmp
sub
pop
out
or
sub
sar
popf
and
xchg
add
adc
aas
fmuls
pop
and
pop
mov
mov
xor
aas
sub
sbb
and
dec
daa
jae
sub
cmc
pop
jb
in
add
bound
test
sarb
sbb
or
lock
adc
cmp
xor
ljmp
sbb
test
pop
mov
dec
sub
in
jp
mov
push
mov
xor
push
cs
popa
pop
aas
pop
aas
insb
lahf
lods
aad
jns
inc
std
inc
aaa
or
sub
aad
xor
adc
pushl
jnp
je
mov
sub
adc
mov
cwtl
jge
xchg
jle
mov
sbb
test
push
pop
fwait
cmp
shll
movsl
negl
pop
xchg
lods
xchg
pop
sub
test
dec
orl
or
scas
or
outsl
jns
xor
dec
mov
jle
xchg
dec
lods
mov
push
packuswb
push
jns
loopne
pop
outsl
ja
add
sbb
cltd
xchg
jb
jecxz
pop
add
mov
xorb
inc
and
jp
push
shll
outsb
adc
pop
push
jmp
gs
andb
fildl
outsl
jo
fsubl
pushf
enter
sub
push
mov
adc
jp
jns
xor
insl
cmovg
or
pushf
je
mov
fadds
adc
xor
aaa
sub
int3
jns
in
and
pop
push
pop
pop
jns
mov
popf
js
mov
mov
mov
adc
push
into
scas
cmp
mov
repz
sahf
adc
sbb
dec
aad
add
mov
hlt
rorb
dec
jg
or
sub
xchg
jne
or
cmpsb
jne
ss
outsb
or
mov
pop
lods
jae
cli
stc
mov
mov
adcb
cltd
cld
jno
jle
ja
dec
shll
sub
jns
cmc
sbb
xor
test
nop
loope
add
jo
pop
push
je
cltd
cli
mov
or
stos
and
jmp
push
shrl
jbe
aaa
or
dec
add
sub
xchg
xchg
xchg
shll
jl
aad
leave
dec
fldl
ds
dec
jae
jge
fisubs
and
mov
add
cwtl
mov
out
nop
call
fs
xchg
jo,pt
test
cli
test
rclb
push
dec
xchg
mov
stos
mov
mov
adc
cli
push
outsb
and
popa
repnz
cli
jns
add
add
mov
sbb
jo
xchg
arpl
push
inc
and
or
sbb
outsb
and
stos
shl
jo
inc
test
adc
mov
xor
lret
lahf
push
cmpsl
lea
inc
jbe
pop
call
es
xchg
and
lea
pop
mov
jo
and
rclb
add
flds
repz
mov
add
inc
pop
jg
pop
dec
mov
push
pushf
in
adc
arpl
xor
xor
jge
sbb
jne
sub
test
sub
pop
xchg
lock
ljmp
ja
add
dec
sub
xchg
xlat
bound
jg
adc
mov
sub
add
mov
xor
cmc
sub
aas
fwait
add
stc
fs
shll
cmp
emms
cld
stos
push
out
shlb
or
mov
sbb
mov
jge
pop
push
rcrb
inc
inc
inc
je,pt
lahf
sub
or
notl
adc
push
hlt
lret
push
adc
rolb
je
test
pop
lret
inc
scas
pop
popa
test
sub
inc
mov
jno
push
scas
sub
sarl
push
dec
mov
enter
aas
inc
mov
mov
add
sarl
and
ret
lcall
fwait
cmpsb
test
outsl
out
loopne
jecxz
gs
xchg
xchg
add
out
jnp
adc
or
pusha
and
sbb
stos
ss
adc
add
out
sbb
adc
add
cld
cwtl
dec
stc
mov
mov
das
jmp
sbb
inc
and
push
sti
test
inc
pop
mov
out
imull
or
mov
jg
sub
pusha
push
popa
data16
or
daa
punpckhbw
push
mov
mov
push
dec
mov
xchg
add
jno
mov
pop
orl
add
icebp
sub
adc
dec
cmc
push
mul
aas
pop
xchg
and
jp
sub
sbb
jb
loope
outsb
jp
lods
stos
movsb
cwtl
aas
aam
leave
mov
mov
cmp
pop
sbb
xchg
jne
mov
hlt
cmp
imul
sahf
jge
clc
jbe
je
fists
pop
mov
lahf
sub
or
xor
pop
cld
leave
inc
push
adc
jno
sarb
aaa
adcl
pushl
stos
or
cmp
movl
pop
stos
cmp
jne
push
mov
icebp
pop
repnz
xor
es
cmc
adc
data16
leave
sbb
dec
ds
sbb
xor
mov
mov
jg
push
push
jle
push
lret
lods
fsubrp
daa
orl
aaa
ret
ror
out
test
addl
and
nop
jg
adc
aaa
adc
mov
out
jae
and
movl
sub
or
test
push
repz
cmp
scas
lret
fstpt
jmp
cmpl
adc
stc
mov
and
push
inc
xchg
push
add
pop
or
jmp
lea
xor
cli
xchg
scas
jno
dec
mov
mov
pop
jnp
xchg
pop
xchg
popa
gs
pop
add
jb
xchg
cmpb
cwtl
loope
adc
nop
mov
test
sbb
mov
jno
jbe
arpl
sbb
je
xchg
pop
clc
adc
cmp
dec
jp
mov
mov
cs
mov
and
pop
test
hlt
push
mov
scas
fsubr
aas
cmpsl
mov
jl
stc
dec
mov
pop
jecxz
add
cmp
enter
add
cld
jg
cmc
dec
mov
test
sub
mov
jns
lret
fisttps
mov
xor
sub
pop
jl
jmp
xchg
pushf
test
push
xchg
sub
push
mov
inc
and
decb
lea
and
inc
mov
andl
imul
mov
cmp
xor
cld
pop
fisttps
test
push
loopne
add
gs
push
add
adcb
jae
out
add
fwait
cmp
cmp
jg
nop
mov
lods
fldcw
das
push
jecxz
fdivrl
popf
mov
fwait
insb
cmpsl
jo
stos
aam
shlb
arpl
jo
subl
push
jg
push
xchg
fdivl
pop
jmp
orb
pop
push
dec
mov
stos
cli
fwait
push
cld
out
ret
adc
xchg
test
fisttpll
imul
or
and
test
mov
repnz
cli
rclb
js
and
or
popf
int3
inc
mov
orl
in
inc
aaa
adc
incb
jecxz
pop
cs
lock
mov
jb
xchg
cmpsl
sahf
xchg
out
mov
inc
inc
mov
mov
pop
sbb
mov
inc
adc
mov
cli
iret
popa
icebp
adc
cmc
xor
stos
sbb
ss
adc
popa
xorl
adc
mov
in
dec
jg
adc
dec
clc
pop
push
andb
shr
cmp
jne
add
insl
fldt
mov
lds
push
andl
js
mov
stc
repnz
iret
xlat
ljmp
ljmp
mov
popa
lods
jl
mov
mov
enter
jle
pop
push
fprem1
jne
cmpsb
je
push
add
cmpsb
mov
mov
mov
shlb
dec
dec
idivl
inc
aam
xor
fcmovbe
jg
sub
rorl
mov
adc
mov
sub
pushf
mov
scas
jae
jae
and
xchg
inc
jge
mov
mov
mov
arpl
pextrw
mov
jae
add
cmp
push
add
inc
xlat
rcrl
mov
mov
and
push
pusha
or
clc
in
push
scas
imull
adcb
pop
pop
add
xor
cmp
pop
mov
sti
mov
cmpb
or
lods
lea
mov
xchg
or
out
add
jb
pop
rorl
sub
sub
pop
and
decl
dec
push
and
into
inc
inc
lcall
mov
test
push
adc
dec
cmc
movsb
fbld
add
mov
cmpl
xchg
outsb
mov
js
or
sarb
push
inc
movsb
daa
adc
push
mov
xor
setp
es
sbb
pop
adc
mov
xor
or
cmp
into
jge
push
inc
xor
push
push
or
inc
jl
adc
jo
and
in
jo
divl
sub
xor
xor
movsb
mov
in
stos
das
ficoml
cmp
add
les
adc
mov
lahf
pusha
xchg
inc
pop
lret
mov
notl
outsb
cli
or
and
mov
negl
jl
mov
inc
test
out
movsb
arpl
pusha
testb
jne
rcll
inc
pop
stc
pop
push
jg
pop
orl
pop
aaa
push
test
lock
popf
jo
decl
jne
mov
xor
jmp
sub
jg
jp
mov
rolb
jecxz
imul
mov
fwait
divb
adc
sub
push
or
mov
mov
jp
push
cli
imul
sti
add
sbb
mov
jo
jo
jl
add
add
mov
mov
into
nop
sub
adc
cli
and
icebp
pop
dec
add
loope
scas
scas
sbb
clc
mov
out
cmc
out
mov
loope
jge
lods
icebp
loopne
add
sub
rcrl
mov
and
push
sbb
push
pop
sarl
ficomps
jl
mov
addr16
fidivl
sti
inc
mov
pop
jle
xchg
push
jge
dec
mov
adcl
sbb
test
push
and
sbb
or
dec
xchg
popa
fs
xor
push
arpl
pushf
int3
adc
mov
and
push
ret
inc
mov
insl
mov
lods
js
or
xorps
jmp
dec
jo
fwait
in
es
gs
fs
and
icebp
adc
pop
mov
inc
dec
addr16
add
xchg
xchg
in
push
push
cmpsl
xor
mov
add
inc
jno
pop
sub
nop
and
jae
pushl
xchg
movsl
js
pop
sub
jecxz
sbb
mov
pop
mov
add
movsb
addl
mov
std
cmp
jo
lcall
push
add
pop
mov
add
cs
cld
cld
sub
jge
js
xchg
xchg
add
loop
dec
test
push
cmp
mov
pushf
jg
pop
pop
mov
jns
mul
mov
mov
add
cli
cmp
inc
test
dec
mov
and
jnp
cmp
xchg
cmc
add
cltd
loop
lcall
pop
daa
les
hlt
push
xchg
int
ficoms
cli
sub
and
inc
in
jl
jle
push
dec
imul
insb
jmp
mov
cmovge
outsl
mov
jnp
lea
sbb
push
fistps
je
push
mov
imul
rol
sti
sbb
fstps
mov
jecxz
push
jl
outsl
inc
xor
je
mov
daa
shl
mov
lret
or
rorl
sbb
adc
xchg
push
ret
mov
imul
ss
inc
push
jecxz
sti
out
movsl
mov
jg
mov
add
divl
push
mov
jmp
inc
sub
mov
and
or
cmc
jmp
stos
cli
hlt
inc
adcb
cmc
pop
sahf
mov
sbb
ficompl
cmc
and
cmp
jg
hlt
cmp
sti
push
xlat
test
aas
insl
push
push
test
jl
push
sub
or
jns
cmpsl
mov
xchg
ds
xor
loopne
dec
mov
and
and
test
ja
mov
imul
mov
xchg
xchg
mov
enter
push
and
jbe
scas
pop
arpl
jmp
std
mov
pop
inc
arpl
fildl
xor
loope
push
xor
ds
add
shll
inc
daa
mov
divl
popa
das
jo
xor
js
sbb
xchg
arpl
aaa
fdivr
es
fcmovnbe
adc
mov
mov
pop
sahf
add
clc
popl
imul
inc
mov
cmpsl
sbb
ds
push
add
push
leave
gs
add
and
mov
dec
js
movsl
lods
mov
js
jmp
mov
push
stos
rcl
inc
in
push
pop
or
xorb
frstor
cmpsl
inc
aas
jae
sub
or
loop
inc
lret
xor
jns
add
and
sarl
mov
inc
jg
aas
jge
nop
std
cli
loopne
cmp
cli
add
imul
xor
inc
mov
and
stos
dec
in
mov
adc
or
inc
movsl
mov
cwtl
gs
sti
test
sbb
mov
lea
jge
push
or
cwtl
sbb
jmp
mov
or
adc
cmp
mov
sub
mov
add
std
into
jb
icebp
adc
push
xor
cld
insl
push
adc
jle
dec
nop
sub
aaa
add
sbb
cmpb
ja
addb
test
xor
decb
ja
shrl
addr16
jb
inc
push
fildl
jecxz
insl
xchg
add
cmp
orl
std
aas
ret
xor
add
mov
mov
cmc
aad
mov
mov
pop
add
inc
js
push
inc
push
and
adc
jo
add
jno
push
add
xchg
orl
stc
and
adc
cmpsl
fstpt
inc
or
add
stc
pop
jo
or
sbb
jg
movsb
jne
data16
sti
jne
jo
jge
pushf
arpl
or
sahf
xchg
divl
pushl
dec
and
pop
push
filds
cltd
xor
xor
jl
push
test
mov
aas
pop
jbe
mov
sub
stos
xor
negb
push
pop
hlt
lahf
arpl
add
ud1
jbe
inc
stos
lahf
jns
sbb
shl
mov
sahf
adc
xlat
inc
lea
out
cli
mov
sub
add
and
inc
push
setno
mov
cmp
ss
or
lret
and
pop
js
jp
stos
popa
pop
lahf
cmp
cmpsb
into
ja
lods
push
push
seto
notb
add
sub
or
cmp
xor
roll
shrb
lea
or
add
test
lods
xor
push
add
das
hlt
shlb
mov
push
mov
cltd
nop
pushf
jle
js
sbbb
jnp
jo
mov
repz
stos
and
pop
or
in
aas
dec
and
cli
sub
lea
clc
mov
imul
mov
cmp
adc
les
ret
sbbl
sbb
hlt
mov
dec
cltd
mov
dec
pop
jno
xor
push
fsubl
add
je
leave
sub
test
and
stos
enter
mov
es
sub
rcll
add
ja
inc
jno
scas
dec
lahf
mov
jge
add
inc
std
sub
je
pop
nop
std
push
mov
fidivl
addl
sbb
and
mov
sbb
popf
push
aaa
out
and
aas
mov
sbbb
stc
add
cmp
das
pushf
popa
sbb
ds
mov
and
mov
mov
bound
dec
pop
lret
ljmp
sbbl
cmpsl
adc
shll
inc
inc
rcrl
sub
pusha
mov
shrl
mov
test
add
mov
dec
or
pop
xor
jns
mov
xor
inc
adc
mov
xor
cmc
mov
andl
cltd
add
shlb
add
bound
xlat
push
sti
add
and
inc
fcompl
sbb
sbb
inc
es
mov
or
in
add
push
cmp
pushl
insb
stos
cwtl
je
cmc
and
inc
inc
pop
icebp
mov
mull
xor
add
cltd
xchg
scas
ds
or
xor
add
nop
rcll
mov
insl
sti
push
xor
push
pop
sbb
scas
jmp
inc
fs
mov
push
sub
in
rcr
les
jg
outsb
addr16
cmpsb
es
xchg
mov
lahf
add
dec
mov
sbb
inc
jecxz
mov
lret
aaa
xlat
je
or
nop
jno
sub
mov
loopne
mov
sub
xchg
or
mov
nop
xor
nop
insb
sahf
add
test
movups
sub
je
aas
push
push
jg
pop
sahf
mov
cmp
ja
mov
ss
andl
lods
sbb
cs
push
mov
pop
xor
adc
jl
mov
adcb
enter
add
sbb
nop
sbb
pushf
pop
jmp
popa
ljmp
xchg
xor
mov
jl
dec
or
aas
jne
mov
mov
push
jo
mov
and
adc
sbb
jg
or
dec
xor
or
sub
xchg
and
nop
test
pop
and
xchg
fcmovnu
push
jbe,pt
repnz
jne
mov
sbbb
mov
popa
adc
pusha
lds
imul
cltd
cmpsb
daa
pushf
add
mov
sub
in
or
or
cs
fldcw
and
cmp
sbbb
push
outsl
insb
in
or
lds
out
inc
push
add
rolb
cmc
ja
xor
sti
add
inc
insb
pop
mov
pop
shrl
notl
jbe
add
mov
clc
sarb
fwait
in
mov
stos
popl
jecxz
inc
enter
pop
xchg
cli
testb
cmp
pop
icebp
rcrb
out
jl
mov
mov
xchg
xchg
dec
call
les
mov
jg
jl
sbb
cmp
cwtl
mov
push
add
mov
cmpsb
sub
frstor
add
mov
rclb
jg
cmc
mov
fistl
mov
and
mov
scas
cld
out
cmp
xor
xchg
out
aas
pop
aad
push
pop
sbbb
sub
dec
out
dec
dec
insl
cmc
test
mov
jg
jbe
insb
cmc
aas
sbb
insl
inc
daa
and
pop
iret
dec
fisubrl
insb
call
add
xchg
mov
lea
and
adc
mov
cmp
pusha
mov
push
cmpsl
xor
repnz
test
add
jae
mov
push
fdivrs
je
imul
mov
clc
shrl
aad
jno
negl
addr16
int
sbb
adc
push
cmpsl
xlat
out
loop
mov
jne
add
imul
jge
mov
adc
jns
xor
or
pop
mov
add
aad
stc
popa
mov
jge
lahf
pop
and
sbb
jo
arpl
jecxz
inc
xchg
mov
add
std
inc
xorb
faddp
dec
inc
xchg
call
mov
adc
jle
cmp
popf
add
adc
mov
xor
cli
cmc
fimuls
and
mov
dec
ss
mov
pop
dec
sbb
xchg
ds
out
mov
pop
or
dec
pop
je
and
pop
stos
lar
orl
aam
roll
push
dec
add
push
cmpsl
xchg
mov
dec
adc
xor
fildll
fisttpl
mov
and
jbe
std
mov
dec
inc
test
out
dec
pop
mov
lods
sub
aaa
cltd
mov
ja
xor
das
xchg
lds
jmp
ret
imul
imul
iret
pushf
out
mov
jg
xchg
jle
cmpl
stos
or
push
rclb
xchg
notl
push
add
jns
je
cmc
jno
add
push
or
xchg
test
movsb
iret
cwtl
cmp
mov
mov
sub
fisttps
cmp
mov
daa
cmpsl
pop
jns
in
mov
repz
lock
rclb
shrl
mov
jp
mov
movsb
jp
mov
mov
and
int
aas
pop
pushf
mov
addr16
pop
mov
in
movb
imul
in
insb
aas
test
and
lods
orl
hlt
jle
shlb
mov
adc
mov
call
fstpl
nop
cld
insl
out
add
cmp
xor
inc
fistpll
push
fisttpll
loope
ljmp
and
movsb
xchg
shlb
std
ja
adc
cmp
jp
pop
adc
outsl
sbb
xor
mov
out
daa
testb
test
jns
shll
dec
or
jl
lea
sbb
or
dec
lahf
and
jle
imul
sbb
pop
fistpll
mov
arpl
or
enter
inc
mov
sbb
in
movsl
add
cmp
subl
add
aaa
and
or
mov
repnz
js
lock
mov
cli
iret
push
jl
mov
jns
loope
andb
fcompl
mov
pushf
xlat
push
addb
sub
dec
lcall
in
push
jns
add
in
cmpsl
mov
movsl
xchg
push
mov
mov
xlat
std
lods
in
pop
jg
fisttpll
adc
cmp
sub
xor
stc
xchg
inc
mov
mov
add
mov
adc
fwait
push
xchg
orb
cltd
or
mov
cltd
push
xchg
sub
and
add
xor
pop
mov
arpl
fidivrl
cmc
mov
lret
jne
xchg
test
add
and
xchg
push
sbb
mov
push
leave
jns
add
jae
adc
xchg
aas
xor
pop
jb
popa
and
mov
add
nop
testl
dec
mov
fcmovu
sbb
cmp
sbb
mov
data16
mov
inc
sub
mov
jp
add
fcompl
push
sbb
adc
xrelease
sbb
dec
test
jb
and
std
pusha
lret
popa
jbe
xor
push
or
mov
mov
adc
dec
call
test
cmc
push
loopne
cli
sub
notb
ljmp
cs
testb
inc
cmp
les
or
cmp
lea
jb
scas
xor
mov
mov
stos
dec
in
jp
mov
aad
jl
add
aas
fcomps
sbb
jae
dec
jg
cmpsl
bound
adc
inc
add
data16
or
add
adc
inc
add
pop
add
adc
inc
add
add
add
add
pusha
add
add
add
int3
add
addb
add
add
and
add
add
add
add
and
add
mov
add
adc
add
add
add
or
and
orb
add
add
add
add
add
add
addb
add
add
add
mov
xor
andb
sbb
adc
add
sub
add
add
and
add
inc
add
or
mov
test
addb
inc
pusha
add
and
inc
add
add
add
xchg
addb
add
or
add
adcb
and
add
add
add
and
or
and
add
add
add
adc
add
adcb
add
push
add
add
add
mov
adc
mov
mov
add
add
add
push
or
adc
or
add
shlb
inc
and
inc
dec
add
mov
xchg
inc
arpl
and
out
xchg
adc
mov
ret
bound
sub
push
xor
cmp
mov
ret
mov
lods
add
clc
jle
in
lahf
loope
pop
pop
pusha
push
adc
std
adc
fs
lea
fstpl
loopne
loopne
dec
mov
shl
sub
lods
test
notl
add
xchg
dec
mov
mov
dec
stos
mov
cmp
hlt
stos
add
cwtl
enter
pop
enter
addl
add
push
xchg
fsts
cmpl
dec
sub
outsl
push
jbe
sub
out
and
mov
sub
idivl
fildl
jmp
dec
insl
int
add
inc
mov
lahf
insb
icebp
push
mov
lods
mov
inc
das
int
add
xchg
imul
mov
push
xor
and
or
movsb
addb
xor
mov
lea
jl
sub
or
dec
lods
add
test
push
add
or
adc
mov
rolb
push
pop
scas
ret
pop
inc
popa
pop
out
jmp
std
in
fcmovnb
std
lods
bound
cmpsl
sub
sahf
lahf
xchg
jae
xchg
adc
and
leave
inc
into
pushf
and
aad
pop
push
add
cmpsl
jns
aas
xchg
outsl
push
xchg
mov
inc
mov
adc
dec
mov
jg
stos
mov
addr16
jno
push
mov
popf
and
orb
rorb
sbb
je
jg
ds
loop
sbb
mov
out
and
adc
mov
and
jp
mov
and
insl
pusha
addr16
push
xchg
xor
dec
adc
push
xor
je
push
sbb
push
mov
jo
mov
push
popa
cmp
xchg
sbb
sti
adc
push
jbe
pusha
adc
in
daa
cmc
rcll
pop
adc
scas
andb
jne
insb
setge
insb
cwtl
cmp
decl
cwtl
dec
orl
add
dec
fs
aas
repnz
jl
mov
and
scas
sub
sub
dec
loop
ret
addl
add
imul
insb
cmp
or
lahf
fcmovnu
cs
push
sbb
lock
sub
out
mov
cmc
sbb
mov
jns
sub
and
sbb
call
jle
sbb
das
data16
xor
arpl
lea
jno
movsl
add
in
and
movsl
cmp
lahf
xor
jl
dec
inc
mov
xor
jo
fbstp
out
cmpsb
push
sub
jmp
scas
adc
rcll
outsl
repnz
mov
cmc
dec
add
add
out
outsl
and
sub
add
mov
add
xor
ds
push
repnz
loope
adc
pop
leave
ret
lret
stos
push
cmpsl
jl
pop
and
lea
sbb
jbe
out
cmp
movzwl
jae
dec
scas
mov
mov
ljmp
jle
aam
ja
call
cmp
add
aaa
je
mov
leave
out
xchg
ds
pop
xchg
in
call
inc
out
fsts
adc
imul
test
and
mov
cmc
jbe
inc
cmp
push
stos
ja
loope
js
xorb
ret
ret
sbb
test
outsl
clc
idivb
test
pop
cmp
andb
xor
je
sti
sbb
push
or
dec
push
push
mov
jmp
ret
cmp
nop
add
mov
fbstp
mov
sub
mov
mov
cmp
popf
cwtl
mov
cltd
shlb
push
adc
push
int
dec
inc
gs
out
aas
in
sbb
push
or
xchg
jp
add
movsl
mov
daa
xchg
and
test
cmpl
push
or
jnp
loope
add
ret
lods
and
add
sub
jb
fldcw
mov
sub
push
xchg
xchg
ja
movsb
test
or
cltd
test
imul
fnstenv
out
add
sub
mov
jnp
bound
xor
or
movl
sahf
jle
inc
mulb
xor
inc
sub
xor
hlt
ja
lock
adc
cltd
fildl
and
mov
cwtl
andl
cmp
ret
pop
mov
add
inc
pop
pusha
loopne
lcall
sbb
jns
into
jp
cmc
and
jecxz
fstps
js
pop
divb
jne
mov
and
xchg
popf
mov
test
mov
adcb
mov
cli
mov
popf
mov
in
sub
mov
xchg
xchg
pop
jle
dec
fwait
and
rcll
inc
pushf
mov
fisubrl
pushf
lods
push
je
subl
mov
add
xchg
jnp
lods
std
stc
push
mov
mov
jb
ds
cmp
mov
adc
stos
fbstp
xchg
andb
fidivs
cli
sub
or
xchg
mov
add
sbb
mov
add
xor
popa
add
xchg
outsb
add
std
xor
mov
repz
repnz
sbb
cmpl
cltd
lea
cmc
bnd
cmp
xchg
or
push
pop
sbb
andl
fiaddl
stc
mov
ljmp
std
nop
pop
mov
add
mov
push
mov
push
jg
sbb
mov
xchg
sub
movsl
push
xor
mov
and
arpl
dec
daa
jp
pushf
push
cld
push
mov
jno
test
hlt
xchg
loopne
or
idivl
xor
xchg
push
pop
jns
dec
stos
adc
ja
sti
sahf
sti
mov
mov
adc
cmp
fsubl
cmc
sub
or
xchg
jg
pop
xor
jns
fwait
mov
jle
adcb
mov
dec
addr16
xor
jo
movd
adc
stos
pop
jb
cwtl
test
xchg
sahf
je
icebp
fdiv
adc
push
dec
nop
jp
cmp
sub
sub
stos
push
sub
hlt
fmull
push
cli
lret
ss
mov
sarl
xchg
inc
cmpsl
sub
sbb
cmc
sbb
mull
movsb
add
jle
jns
mov
test
mov
popf
xchg
jle
mov
addr16
pop
pop
mov
xchg
sub
aas
loopne
insb
arpl
incb
jns
cmc
ds
test
xchg
and
loopne
insl
add
sbb
mov
add
lahf
pop
mulb
mov
movl
push
xor
cli
xchg
pop
pop
inc
add
packssdw
or
cltd
mov
dec
in
test
or
jns
stc
push
rorl
and
mov
sarl
jne
in
mov
sti
adc
gs
inc
and
xchg
clc
pop
out
or
xchg
jne
push
mov
imul
ljmp
popf
push
in
push
pop
xchg
popf
push
xchg
ja
cmp
iret
pusha
sub
pop
movsb
hlt
mov
dec
nop
push
push
aas
adc
insb
aaa
mov
xlat
icebp
std
ficoml
xor
ja
sbb
xchg
xchg
das
or
dec
js
cmp
ret
lock
imul
jb
insb
je
test
dec
repnz
sub
cmc
pusha
arpl
mov
div
dec
cmc
int
add
pop
imul
mov
arpl
psadbw
arpl
add
pop
sub
in
pop
out
jl
sub
or
lock
jg
and
pop
jg
movsl
ficoms
xor
adc
aam
scas
add
je
cli
jns
jmp
add
clc
in
jbe
adc
jmp
ss
or
or
and
jb
lahf
ja
bswap
loop
fwait
pop
xchg
add
push
push
mov
in
push
xor
adc
xchg
cmpb
pop
and
push
mov
mov
test
sarl
mov
into
fldenv
adc
loopne
nopl
lahf
in
dec
mov
mulb
adc
xor
aaa
add
sbb
inc
mov
or
out
mov
in
repnz
stos
and
cmp
push
pavgw
adc
mov
daa
jmp
ljmp
xchg
xchg
hlt
test
xor
pop
mov
sti
push
cmc
pop
scas
ficomps
mov
adc
add
add
pop
push
cmp
sbb
popa
mov
cli
outsb
xchg
add
or
add
jmp
fwait
xchg
out
add
mov
xchg
push
inc
insb
push
lea
adcl
or
stos
cmc
jb
inc
sub
pop
mov
pop
inc
lock
adc
into
mov
adc
sbb
sbb
add
sub
clc
ret
push
aas
push
adc
inc
mov
mov
xor
push
jg
std
pop
daa
add
cmp
push
xchg
addb
outsl
mov
nop
and
test
or
inc
movsb
and
push
jne
jns
mov
add
popf
xchg
popf
fsubl
pop
adc
lahf
jg
jp
mov
jle
in
rol
push
or
mov
stos
mov
mov
movsb
sbb
sub
add
sbbb
lods
push
mov
xchg
jmp
ret
xchg
add
sbb
roll
aam
dec
push
dec
sti
adc
push
pop
lods
sub
and
or
mov
xchg
jno
imul
sub
xchg
mov
pop
hlt
jmp
or
into
aas
aad
push
daa
cs
pusha
sub
mov
add
xor
in
repnz
lock
cli
lods
dec
mov
rcll
cmpsb
jge
scas
mov
pop
xchg
fnstsw
cmp
inc
xchg
insb
or
daa
sbb
and
mov
fidivs
aam
icebp
sti
jg
xor
and
jns
pushl
xchg
push
xchg
and
adc
test
mov
pinsrw
jge
into
frstor
add
mov
jns
cltd
or
test
mov
add
lock
js
outsb
xlat
daa
mov
mov
push
adc
cmp
xchg
mov
sbb
popf
cltd
pop
cwtl
mov
rorb
movsb
push
cmpsl
das
hlt
mov
jne
add
insb
rclb
aad
push
pop
lret
or
mov
ljmp
ljmp
pop
jecxz
xor
nop
adc
lahf
xor
pop
lret
and
xor
lcall
sbbb
or
xor
lods
mov
xchg
scas
fmul
fstps
xor
and
cmpsl
add
mov
lods
pushl
inc
adc
popa
mov
cli
cmp
xorl
xchg
mov
push
pushf
xor
scas
stc
inc
sbb
std
or
sbb
pop
add
mov
pop
mov
sahf
xchg
add
sti
inc
add
xchg
outsl
mov
push
jnp
mov
add
jbe
mov
pushl
jge
jne
push
cmp
adc
cmpl
adc
stos
ds
push
xlat
add
mov
loop
jo
ss
cltd
mov
shl
add
xchg
in
out
pusha
lret
fildl
mov
jle
cli
cmpsb
cmp
push
pop
pop
jl
mov
lods
arpl
loopne
shll
hlt
cli
cmpsl
pop
test
shlb
popa
scas
xchg
jbe
fildl
cld
xchg
cmpsb
inc
inc
push
mov
mov
negb
sbb
jmp
daa
mov
dec
shlb
mov
je
or
daa
aad
stc
and
and
lods
popa
addl
lret
mov
cmp
inc
sahf
shll
and
arpl
adc
icebp
inc
aaa
inc
int
in
int
jecxz
les
fisubrl
nop
and
mov
adc
or
jg
decb
je
gs
pop
cmp
fldl
jno
sbb
mov
jbe
jl
inc
push
add
jg
test
xchg
cmp
popa
lret
jbe
push
mov
mov
jg
jl
cltd
mov
outsl
popa
xchg
aas
test
jp
cmpsb
clc
lock
fucomp
push
outsl
xchg
rclb
adc
mov
enter
pop
aad
adc
cmpsb
inc
adc
mov
jns
xchg
js
adc
mov
lcall
ret
add
cmp
lsl
mov
cmpsl
subl
add
sbb
lret
mov
mov
incl
pop
clc
lcall
pop
dec
or
push
lcall
cmpsl
push
inc
es
shll
adc
js
or
cmp
mov
pushf
sarb
sbb
lahf
push
xchg
test
loopne
pop
sbbb
data16
pop
ficompl
mov
popa
jle
jnp
aam
mov
pusha
sbb
push
sbb
jo
aaa
add
adcl
sti
pop
jecxz
mov
stos
jb
mov
mov
lds
push
ficoms
cmp
mov
mov
repz
mov
lods
or
test
xchg
xlat
mov
pop
cmp
imul
dec
movsl
mov
mov
jmp
ss
cmp
mov
push
mov
mov
push
adc
push
sbb
test
dec
xchg
xchg
cmovo
das
fnstenv
push
cmp
sub
adc
arpl
ret
ja
or
add
cltd
mov
or
xor
std
nop
cmp
lds
repz
push
lods
das
jle
sbb
fildll
add
push
push
popf
adc
mov
mov
popf
add
pop
mov
jnp
ret
pop
mov
lret
lock
nop
push
jno
and
push
int
adc
cli
sub
aas
insl
jle
xchg
outsb
lods
out
out
fnstcw
std
lea
mov
mov
insl
das
stos
aam
ljmp
cmpsl
cmp
jmp
jae
xlat
popf
gs
dec
push
xchg
jle
push
jae
and
jmp
push
cli
cmp
aad
add
int3
imul
jbe
xor
jp
jne
sbb
add
dec
std
mov
pusha
add
dec
repnz
push
xchg
cld
loopne
dec
nop
inc
mov
inc
pop
add
nop
push
cmc
jge
sub
js
cli
in
in
jnp
xchg
pop
lods
test
mov
sub
arpl
jb
out
adc
pop
popa
les
cltd
jle
shrb
mov
xchg
xchg
sub
add
cmp
adc
fwait
jmp
das
ret
sbb
jmp
cs
pop
xor
push
loopne
jnp
nop
push
add
je
ds
lods
addr16
mov
fisubl
sub
adc
andb
adc
mov
mov
pusha
idivl
aaa
push
movsl
jbe
imul
mov
cmpsb
jns
jns
xchg
cmc
es
cld
sub
push
mov
mov
stos
psubd
mov
mov
xlat
cmp
sysexit
cmpsb
mov
nopl
movsl
mov
inc
xchg
push
js
jp
add
mov
mov
xchg
repz
sti
inc
fbstp
adc
jno
cmp
mov
dec
or
out
sub
push
in
pop
mov
loop
arpl
push
jp
sahf
inc
cmpsb
lods
pushf
repz
roll
mov
xor
stos
push
adc
cmpl
int3
inc
daa
jecxz
add
ret
outsb
adc
adcl
addr16
sub
movsl
sub
inc
js
push
pop
inc
add
lahf
mov
push
pop
xor
xchg
stos
and
xchg
nop
push
pop
mov
pop
and
nop
loope
sti
xor
add
push
jp
pop
int
dec
pop
sbb
repz
addr16
jnp
pop
jns
das
pop
xor
sub
add
or
add
pusha
push
lahf
outsb
and
cmp
push
adcl
xchg
sub
imul
xchg
mov
xchg
pop
lcall
inc
or
mov
sub
sub
aad
add
xor
inc
cltd
jg
add
mov
test
aad
add
mov
test
push
negl
mov
nop
mov
fwait
add
xor
jno
hlt
jge
mov
xchg
mov
mov
mov
xchg
subl
push
shr
adc
sbb
je
pop
and
out
add
sub
add
xor
push
inc
jg
in
nop
rcl
scas
inc
mov
insb
shrb
hlt
push
icebp
jo
adc
mov
inc
or
and
fcos
inc
inc
or
push
mov
lds
pop
and
sahf
je
pop
stc
sub
add
xchg
mov
adc
adc
pop
stos
nop
dec
jbe
dec
add
and
mov
lcall
imul
out
or
or
lahf
mov
and
sbb
gs
and
pushf
and
ret
push
inc
dec
addr16
sbb
shlb
popf
dec
cld
mov
repz
jecxz
xchg
adc
fnstcw
jge
xor
jle
mulb
sbb
loope
adc
outsl
enter
pop
mov
adc
cltd
jge
subl
cmc
pop
ljmp
jo
imull
cli
xor
add
cmp
stos
lds
decl
cs
pop
pop
or
fstps
jae
or
lea
and
arpl
test
imul
pop
imul
mov
pusha
dec
je
mov
clc
mov
bound
cmp
jle
adc
movsb
push
pop
jne
mov
popa
aas
jge
notl
pushf
es
std
push
in
jp
jno
mov
adc
or
pop
mov
les
jge
jnp
aad
fs
add
xchg
inc
jecxz
inc
sbb
xchg
xor
addr16
js
xor
or
icebp
pop
pop
add
push
add
sub
adcb
imul
icebp
lcall
repnz
cmp
pusha
scas
jns
jg
vmwrite
lds
cmp
add
and
inc
in
add
mov
mov
xlat
sbb
mov
stos
je
ja
mov
jns
and
aas
pop
push
cmpb
cmpsl
sub
adc
mov
add
scas
lods
addb
jnp
pop
mov
xchg
lahf
ss
dec
clc
jg
pop
fwait
or
and
mov
sti
pop
and
pop
xor
cmp
stc
or
jnp
dec
jae
jl
aad
aaa
je
adc
dec
xchg
push
inc
aam
xor
adc
xor
adc
xchg
les
pushl
icebp
dec
js
rcll
inc
fsts
popf
mov
fisubl
mov
movl
sti
orb
repz
mov
pop
imul
push
xor
sub
mov
call
mov
loopne
pop
xor
push
and
daa
decb
jbe
or
and
jg
xor
xlat
jge
andb
stc
scas
cmp
sub
add
adcl
mov
icebp
sub
sti
or
mov
mov
push
xchg
mov
xchg
or
xchg
inc
scas
orb
imul
cli
fidivl
dec
in
int3
mov
aas
jmp
mov
rolb
lods
popf
add
mov
data16
xorb
jae
shrb
xchg
xlat
lcall
inc
pslld
jb
clc
rcll
push
and
lods
imul
mov
or
mov
jp
pop
notl
aad
jp
pop
xchg
aaa
rcl
gs
add
sar
inc
call
std
add
mov
arpl
imul
xlat
rclb
bound
imul
adc
mov
je
or
in
stc
push
xchg
inc
je
xor
out
aad
cmc
jnp
hlt
mov
adc
cwtl
cli
out
lahf
gs
jnp
mov
push
and
pushf
clc
sub
outsb
jecxz
adc
adc
xchg
jo
push
adc
test
xor
sbb
insb
das
mov
pop
sub
enter
ret
stos
js
lods
js
jp
enter
xchg
xor
mov
rolb
inc
sti
mov
mov
fwait
jp
add
nop
in
push
jg
xor
call
test
xor
jbe
mov
and
sub
mov
das
push
sbb
scas
and
test
jle
lea
mov
jns
jle
enter
inc
and
test
insl
std
or
sub
push
orb
andb
push
jg
push
xchg
inc
push
dec
push
and
stc
sbb
aas
cwtl
mov
js
icebp
lods
mov
icebp
stos
fiadds
mov
movsb
cli
cmp
pop
js
cmp
cld
testl
mov
inc
xchg
cld
pop
and
sbb
orb
jmp
jae
cmp
pop
lret
push
movsb
movsb
push
in
in
imul
ficoml
and
sbb
in
xor
xchg
mov
and
mov
sbb
rorb
popl
movsb
test
mov
and
cmp
lods
jae
std
xor
cmpl
mov
pop
ja
lcall
jno
xchg
pop
jl
jo
sbb
add
pop
js
cmp
cmp
fnstcw
xchg
inc
mov
mov
mov
sahf
fincstp
mull
ds
xchg
cmp
push
repz
es
pop
pop
mov
adc
pop
jp
cmp
shlb
xchg
add
cwtl
scas
and
je
cltd
pusha
lcall
mov
jl
xor
outsb
dec
jno
test
orb
xor
dec
test
sti
sbb
adc
bound
repnz
sbb
jge
push
in
stos
roll
pop
cwtl
test
icebp
xor
or
jbe
jne
lahf
xchg
mov
pop
movsl
fs
mov
mov
out
mov
das
xor
aad
gs
sub
dec
dec
outsl
xchg
mov
push
fbstp
pcmpeqd
aas
sbb
jbe
push
mov
push
xchg
scas
xor
decb
dec
push
add
add
jnp
hlt
adc
jno
jno
add
cmpb
xchg
in
inc
jne
daa
sbb
xchg
popa
clc
std
lcall
cmpsb
jbe
movsl
inc
scas
ret
adc
pop
cmpsl
subb
test
pushf
lea
std
pop
mov
or
xchg
push
in
decb
jno
adc
cmp
in
add
jg
hlt
dec
fidivrl
adc
push
and
ds
mov
aam
popa
jmp
xor
pop
icebp
push
dec
mov
mov
xchg
cmp
sbb
mov
insb
push
add
std
test
and
call
stc
adc
xchg
imul
dec
add
inc
mov
insl
mov
and
xorl
adc
jno
adc
sbb
pop
popa
in
adc
in
dec
mov
push
jns
add
sbb
mov
mov
test
add
scas
pop
sub
mov
inc
push
mov
or
jno
jae
inc
aam
inc
adc
fwait
mov
adc
dec
aad
xchg
jmp
ss
or
adcl
adc
xor
nop
adc
cmc
dec
jbe
lret
adc
cmp
push
jecxz
mov
movzwl
mov
test
fdivrs
and
xor
jl
xchg
inc
ljmp
jnp
out
mov
icebp
jo
jp
aas
jmp
cmp
sub
jo
xchg
dec
in
out
or
jge
xor
ss
ljmp
je
stos
ffree
nop
ret
imul
adc
in
xchg
add
dec
xchg
xchg
xor
cld
cmc
test
inc
cld
cmpsl
aaa
ret
xchg
fwait
xchg
inc
jno
ja
subb
mov
lret
jbe
add
add
inc
int3
test
jns
dec
cmp
pushl
sbb
or
mov
ljmp
and
dec
decb
dec
lea
jp
bound
add
ret
or
lret
or
pop
mov
lret
mov
adc
mov
pop
pop
cmpsb
mov
cltd
call
or
aas
cmp
cld
into
pop
stc
daa
and
push
aad
nop
gs
push
xlat
gs
in
add
mov
xchg
pcmpeqb
loopne
jns
mov
lods
fwait
icebp
movsb
or
rorl
pusha
or
cmp
popf
mov
cltd
jg
or
jo
jne
pushf
les
scas
decb
fstpt
arpl
daa
sbb
inc
aaa
adc
push
divl
jl
push
push
lret
fsubrp
cmp
ljmp
je
pop
or
cmpsl
lods
pop
subb
dec
jmp
stos
in
clc
pop
stos
ds
xor
jno
jg
push
insb
push
mov
mov
jl
dec
xorl
notl
cmp
scas
push
jbe
insl
mov
std
ret
inc
add
dec
rorl
orl
adc
clc
jae
add
adc
push
mov
movb
cmpl
sub
push
mov
adc
mov
mov
mov
clc
sub
xor
insb
cmc
scas
xor
outsl
sbb
shlb
and
icebp
sub
adc
das
scas
fs
push
or
xor
adc
loopne
fisubl
sti
xlat
test
xchg
insb
pop
stc
jg
mull
sbb
ja
add
dec
pop
gs
ret
std
mov
jp
lods
je
cs
jle
xorb
aad
sbb
mov
xchg
cmp
push
push
push
cmc
jns
bound
mov
add
push
add
daa
lds
adcb
jp
leave
aaa
cld
jge
test
lea
pop
mov
js
cmc
xor
xor
movsl
in
inc
xchg
add
sub
jecxz
push
rcrl
push
push
inc
insl
lock
and
mov
loope
jge
adc
xchg
adc
lods
xchg
push
data16
jns
inc
jecxz
mov
and
notb
iret
lods
mov
or
rorl
pop
cmp
jae
jae
pop
shlb
jp
std
test
movsb
cmc
pop
ss
sbb
jp
popf
xchg
sub
leave
jge
fisttpl
dec
cmp
or
in
jno
jge
push
sti
xchg
bound
jnp
pop
or
sbb
adc
sahf
hlt
pop
or
fsubs
sbb
fwait
or
pop
mov
xchg
sbb
insl
jb
push
jge
sti
fnstenv
pcmpgtd
inc
std
xorl
scas
sbb
add
lock
jecxz
das
leave
adc
xchg
or
and
mov
stos
jle
add
cli
add
xchg
aaa
add
ja
jno
xor
movsb
insb
cli
or
repz
jo
mov
sti
mov
lahf
xor
cmp
jle
adc
repz
in
addr16
inc
mov
mull
fsubl
or
je
mov
mov
push
sub
xchg
add
pop
dec
adc
adc
xor
xor
cmc
cs
icebp
out
imul
cmc
inc
dec
or
ljmp
sbbb
or
jae
js
sahf
std
filds
add
das
add
cmpsb
sahf
mov
test
xchg
sub
stos
pop
jge
cmpsb
adc
movsl
jle
or
add
sbb
jge
xor
fisubs
xchg
std
out
push
ja
mov
pusha
mov
jmp
mov
sbb
je
pop
pop
dec
sar
adc
add
shll
mov
sbb
add
sub
jp
sbb
mov
mov
jg
shlb
xor
fidivl
repz
add
adc
fidivrl
and
xchg
movsb
jge
in
jge
sti
xchg
add
push
or
ret
dec
loop
jmp
mov
mov
push
xchg
jo
test
mov
popa
test
xor
enter
popf
ret
and
ret
clc
hlt
insl
and
inc
xor
je
scas
incb
sbb
push
aam
xor
and
addr16
mov
cmpsb
lock
mov
mov
dec
pushf
sbb
fcompl
jae
fwait
ljmp
or
scas
sub
sub
cmp
or
inc
adc
adc
push
jecxz
mov
push
fisttps
dec
push
adc
std
lahf
xor
adc
pop
out
push
jmp
and
pop
sbb
add
or
jns
in
and
popf
fistps
cmc
cltd
jg
fidivs
icebp
or
jb
shl
xor
xor
mov
clc
push
scas
sahf
arpl
fbld
adc
and
cmpsl
enter
inc
mov
push
push
add
jo
icebp
push
jae
inc
scas
inc
stos
outsl
movb
pop
and
xchg
std
lret
mov
mov
mov
mov
pop
mov
sahf
xor
outsl
outsb
movsb
mov
mov
jl
pushf
pop
pushf
jns
js
jns
icebp
xor
jae
sbb
outsb
mov
push
jecxz
inc
outsl
inc
mov
jns
clc
inc
js
inc
arpl
cmp
inc
and
inc
lcall
jnp
mov
mov
mov
and
scas
xor
jae
mov
mov
cli
jb
popa
mov
xor
and
pop
out
fwait
mov
cltd
mov
mov
insb
repnz
addl
mov
cmp
cmp
and
sbbl
out
lcall
push
cmp
incl
add
mov
rcl
push
sub
leave
push
cmc
sub
out
ja
inc
jnp
stos
out
add
aad
xchg
inc
add
xchg
jg
mov
loop
or
pop
ficompl
jl
pop
cmp
or
mov
mov
adc
mov
dec
lods
dec
aaa
xor
cmp
and
orb
dec
fs
mov
mov
adc
mov
and
aas
test
repnz
sbb
xchg
call
mov
xchg
mov
cmp
and
xor
and
and
in
push
pop
hlt
test
mov
mov
fidivrl
testl
mov
hlt
repnz
lods
mov
cmp
jo
outsb
mov
leave
sbb
mov
out
jae
inc
xchg
jo
pop
xchg
lock
repz
adc
adc
in
cmp
pop
jl
mov
aad
mov
popf
idivb
pop
clc
cmpb
adc
clc
not
mov
inc
decb
push
pop
out
add
inc
cld
clc
shr
out
jae
inc
xchg
hlt
jo
mov
inc
test
adc
das
lds
cmp
test
shl
lret
add
pop
cltd
cmp
enter
mov
xor
sahf
sbbb
jo
icebp
outsb
cmovo
jbe
insb
dec
adc
outsl
mov
xlat
repnz
lods
jmp
dec
jp
das
add
sahf
xor
ror
xor
in
sbbb
out
or
adc
and
adc
and
adc
push
mov
mov
sahf
into
aas
push
sahf
xor
js
mov
gs
mov
lods
and
pop
inc
insb
mov
sahf
jns,pn
hlt
or
cmpsl
or
out
jae
stc
jmp
js
dec
mov
in
repz
ret
int
in
insb
or
inc
mov
jns
clc
jns,pt
js
jns
incl
pop
mov
stos
cmp
jne
and
sbb
sbb
hlt
add
sti
sub
mov
icebp
stos
sbb
pop
cmpsb
jne
popf
nop
add
jg
sbb
jns
cmpsl
mov
xchg
loope
into
test
ds
lods
test
dec
popl
jmp
pop
mov
push
jge
mov
inc
into
dec
push
dec
push
orb
jae
cwtl
cmpsb
xchg
mov
hlt
xor
lods
in
repz
cld
les
test
add
mov
jle
mov
lods
adc
fisubl
sub
jle
mov
jg
adc
xchg
movl
push
dec
adc
pop
das
and
mov
in
cmp
daa
js
outsb
sahf
aam
iret
adc
sbb
sarb
repnz
adc
adc
inc
adc
std
mov
ret
add
js
xchg
jl
or
lret
mov
pop
cwtl
arpl
lea
pop
adc
addr16
xchg
push
out
jg
push
mov
or
sub
push
sub
mov
or
xorl
jge
dec
mov
mov
and
popf
inc
mov
sub
adc
inc
mov
stc
mov
mov
lock
pop
mov
shl
mov
jl
mov
and
jno
mov
in
add
pop
pushf
add
aaa
mov
lock
sbb
and
movsb
adc
inc
mov
dec
aad
xchg
mov
je
inc
mov
pusha
clc
lds
inc
arpl
out
fisubrs
add
or
aaa
rcrl
mov
jl
push
cli
fwait
mov
in
insl
lahf
cmp
stos
lahf
add
and
jne
push
and
out
jmp
sbb
push
popa
push
xor
imul
push
pop
lea
mov
scas
imul
out
pop
sahf
mov
mov
adc
inc
or
decl
mov
push
push
sub
ds
mov
scas
test
add
fnstcw
jp
mov
adc
imul
adc
mov
test
inc
push
xor
fisttpl
frstor
popa
test
icebp
or
insb
mov
daa
insb
test
repz
and
js
and
mov
push
sahf
xchg
mov
cmp
jb
fs
scas
adcb
cmp
fldenv
mov
mov
sahf
jns
orb
and
fistpll
repz
cmp
cs
call
loope
adc
data16
mov
or
test
push
dec
sti
mov
scas
in
fmulp
pop
lahf
dec
push
cltd
repz
andb
mov
cltd
mov
lods
pop
inc
and
dec
scas
sub
push
jmp
ret
outsl
hlt
sub
icebp
jo
fyl2x
jo
cmp
popa
xchg
and
adc
imul
cmp
gs
and
test
mov
sub
push
jge
sub
insl
inc
sti
test
pop
scas
sahf
xchg
sti
dec
inc
or
imul
adc
enter
or
jmp
cwtl
std
sbb
or
sub
inc
js
or
sbb
jno
push
lret
sbb
add
push
cmp
icebp
cli
and
pop
adc
in
or
into
adc
int
or
jg
cmp
cwtd
adc
pop
cltd
js
xchg
std
cmp
pushf
fwait
inc
xor
jecxz
mov
dec
in
test
and
mov
adc
outsb
sarb
or
pop
orb
andl
xchg
inc
dec
mov
mov
push
cmpsb
in
xor
ficoml
ret
and
lcall
test
pop
je
pop
pop
jge
sub
pop
mov
sub
pop
cmpsb
mov
cmc
adc
add
lods
mov
rorb
pop
sbb
stc
inc
mov
lock
add
stos
mov
sub
xor
in
cmp
sbb
mov
mov
cmp
or
rorb
push
xchg
cmp
stc
mov
add
aaa
bound
or
cmp
imul
inc
mov
adc
test
cmpsl
add
stc
outsb
mov
fbstp
jns
test
sbb
repz
insl
jmp
inc
aad
xor
out
adc
fs
push
enter
es
je
inc
sub
add
daa
mov
stc
sub
jnp
sbb
add
jp
sbb
mov
add
test
xor
mov
xchg
test
test
xor
xor
or
nop
mov
mov
fisubs
add
ja
or
clc
mov
and
xchg
push
push
adc
dec
mov
addr16
jno
movsl
jnp
adc
lret
and
cwtl
mov
outsb
clc
xchg
jnp
pop
push
and
inc
lret
cltd
xchg
nop
repz
jg
fs
repnz
xchg
dec
mov
dec
add
fwait
and
pop
and
pop
call
jp
outsb
ja
jne
inc
in
or
cmpsb
gs
cmpl
adc
dec
call
in
stos
mov
iret
lods
scas
inc
aaa
pop
cmp
push
xchg
iret
push
lods
jnp,pt
mov
mov
mov
pop
enter
dec
inc
sbb
and
jns
pop
sub
inc
or
pop
outsl
add
xchg
je
insb
fs
orl
sub
inc
dec
inc
out
mov
push
push
jge
and
arpl
jno
push
mov
cmp
hlt
mov
lds
sub
roll
fsubs
nop
mov
inc
mov
addl
pop
push
repnz
jp
in
imul
push
add
mov
xor
lahf
sbb
add
fnstsw
insl
mov
scas
inc
dec
mov
lret
je
insl
xchg
fs
popf
mov
jno
xor
ss
fnstcw
and
dec
jl
sbb
in
repz
ret
outsl
mov
jno
fnsave
push
cmpsb
pop
loopne
adc
sbb
pusha
add
pop
dec
mov
or
addl
rcl
outsl
ret
scas
js
loop
mov
das
fwait
add
dec
mov
repnz
nop
out
xor
jo
push
mov
out
stc
dec
outsl
cs
mov
int3
cmc
arpl
test
cld
insb
test
pop
stos
lods
das
orb
cmp
push
ret
mov
pop
jmp
push
push
ljmp
or
ffreep
push
jno
add
adc
inc
xor
xchg
cld
sub
adc
xor
lods
mov
cmc
jg
and
out
rcrl
ret
sahf
push
add
sti
adcb
cmc
push
sub
lcall
cmp
pop
jnp
pushf
inc
jae
orb
data16
mov
sbb
dec
mov
pop
test
dec
les
lds
ds
or
daa
in
and
iret
mov
loope
in
jmp
ret
push
bound
adc
andl
add
movsl
es
inc
add
inc
mov
pop
je
inc
imul
mov
or
sub
popf
jg
repz
addr16
sub
xor
stc
lods
add
xchg
icebp
add
pop
cli
cmpsl
test
lods
popa
cwtl
out
in
pop
cli
mov
jne
lret
stc
sub
sbb
mov
xchg
jle
mov
jns
mov
jg
jnp
mov
push
orl
lea
scas
lock
sub
rclb
inc
idivl
pusha
mov
add
pop
clc
call
out
adc
outsb
loopne
lret
out
stc
cmp
sbb
xor
addr16
sbb
adc
int
adcl
cmpb
das
jnp
enterw
movsl
cmp
adc
xchg
mov
insb
aam
enter
and
mov
push
and
std
das
inc
ljmp
mov
mov
mov
insl
lds
fs
sbb
jo
mov
xchg
je
es
adc
or
adc
loop
repz
mov
dec
stos
es
mov
js,pn
push
fistpll
lock
stc
into
daa
daa
xchg
mov
aas
in
sub
pop
js
mov
je
adc
cmpsl
mov
setb
scas
lods
int
cld
xchg
xchg
les
mov
gs
xor
hlt
push
or
cs
imul
xchg
call
mov
lods
nop
in
pop
adc
and
adc
cld
subb
inc
pop
dec
adc
xor
pop
sub
call
outsl
lods
cmpsl
nop
xchg
push
inc
add
mov
xor
std
stos
xor
xchg
jg
or
int
jg
jmp
sahf
outsb
repz
adc
in
sbb
jmp
mov
daa
inc
or
xchg
mov
push
arpl
push
cmp
adc
ss
mov
cmpsb
inc
jg
pop
mov
pusha
ss
push
fldt
cmpsb
pop
xor
mov
add
sti
dec
jo
push
fs
add
jge
jle
scas
jge
adc
inc
and
xchg
inc
fs
push
cmpb
sub
pop
repz
inc
mov
xchg
mov
inc
popa
inc
pop
adc
stc
mov
inc
dec
jb
cltd
mov
incw
push
cwtl
cmp
inc
add
cmp
mov
arpl
lea
fadds
push
jne
add
push
vpmacssdqh
pop
jp
and
test
jnp
shlb
fnstenv
pop
adc
test
mov
mov
xchg
or
sub
insb
jecxz
lds
mov
popa
jp
test
es
sub
push
and
jns
add
lds
and
add
add
jno
inc
sub
fwait
cmpsb
jo
nop
fs
adc
or
inc
mov
sbb
fnstenv
pusha
les
jle
mov
outsl
mov
push
cli
push
sub
mov
dec
or
js
sub
pop
dec
dec
xchg
mov
sub
movsl
inc
in
push
sub
or
xor
mov
mov
xor
pop
mov
or
in
push
mov
mov
prefetcht2
mov
loop
fadds
shr
js
std
gs
adc
popfw
sub
das
cli
lds
and
aaa
fwait
call
jbe
add
xor
pop
fwait
and
repz
sub
adc
enter
mov
pop
sub
sub
out
adc
add
and
jnp
xchg
xlat
into
hlt
sbb
insl
and
daa
and
dec
mov
inc
decb
sti
xor
fst
and
jns
mov
icebp
xchg
adc
stos
xor
enter
cmp
push
addl
andl
jo
adc
push
xchg
stos
add
or
jo
cltd
add
inc
or
lahf
gs
pusha
xchg
flds
insb
mov
add
loope
cmpl
jle
lret
cltd
inc
sub
repz
clc
fsqrt
fisttps
insl
adc
sbb
ret
inc
in
and
add
or
xor
inc
jmp
in
jl
test
xchg
xorl
jno
rclb
rorb
gs
das
push
shll
dec
inc
cmp
loopne
inc
insb
dec
pop
ljmp
inc
sub
or
popf
jge
pushf
add
xor
push
xor
jecxz
mov
xchg
xor
push
add
adc
xchg
pop
lcall
pop
xlat
jle
fcmovnbe
pop
xchg
or
or
das
mov
mov
push
mov
xor
push
push
mov
test
push
and
call
xchg
repz
ret
lea
sbb
add
push
pusha
int3
or
sbb
shl
repnz
mov
cltd
in
push
mov
mov
and
pop
call
jmp
lds
rclb
imul
test
adc
push
je
jns
enter
stc
and
and
cmpl
mov
cld
scas
std
decl
jnp
fwait
xchg
xchg
lahf
xor
push
in
and
test
dec
lods
ja
jo
or
clc
cld
aaa
or
imul
and
js
into
adc
imul
ret
popa
test
out
scas
pop
cli
mov
mov
or
test
repz
jbe
pop
icebp
mov
pop
or
les
cmp
cmc
jns
add
inc
and
mov
mov
ds
cmp
leave
iret
loop
in
pushl
mov
sahf
cli
xchg
js
push
mov
clc
jo
scas
stos
or
mov
pop
sub
xor
jae
jecxz
shlb
std
xor
inc
sub
ss
es
lds
push
or
lock
imul
aam
mov
sbb
mov
jns
sbb
sub
mov
out
adc
sub
jge
add
mov
and
sub
out
push
addb
stos
xchg
sub
divb
sti
push
or
out
mov
loopne
movsl
jecxz
leave
in
pusha
sub
pop
pop
adc
rcll
ret
out
xor
lret
lcall
inc
aaa
enter
in
xlat
xchg
cmp
aad
push
sbb
minps
rorl
push
lret
mov
fisttps
sub
inc
sbbb
mov
inc
push
jle
inc
fadd
fisttpll
int3
push
fiaddl
enter
int3
inc
inc
call
push
dec
loop
clc
cmp
inc
jns
sbb
pop
rcl
fdivrs
loop
jl
cli
mov
sarb
mov
lea
sbb
leave
push
loope
aam
xchg
out
pop
iret
mov
call
loope
or
rcl
fbld
loope
hlt
in
rcrb
out
insb
mov
mov
leave
mov
cld
cmp
shl
ljmp
cmp
mov
hlt
shll
call
rcr
imul
jmp
inc
mov
loopne
push
add
mov
rorb
loope
ljmp
shl
ss
out
in
shlb
shl
arpl
push
leave
or
mov
push
out
lret
add
push
rolb
sub
out
xlat
cmp
dec
push
push
loop
push
lret
aam
icebp
jmp
aad
aad
cmc
out
inc
adc
cmp
call
dec
gs
sbb
pop
rcr
fmull
fldl2e
push
lret
decb
gs
mov
and
shl
mov
dec
bound
push
sbb
in
rcl
mov
inc
sti
mov
sbb
and
icebp
pop
repnz
ss
fxtract
aam
inc
cld
aam
out
iret
jge
pop
mov
add
or
dec
repz
sbbb
mov
pop
insl
lret
pop
icebp
push
ret
add
in
adc
xchg
push
loop
pop
out
pop
sti
fchs
push
in
xor
adcb
test
sub
inc
lret
pusha
int3
jmp
mov
stos
lret
push
gs
sarb
dec
loope
jmp
arpl
mov
aaa
roll
outsb
stc
aas
xchg
push
pop
ffree
pop
push
insl
fmull
lcall
fsubs
jo
add
mov
out
rcr
out
push
or
push
push
and
mov
jp
rcll
enter
ret
add
in
out
jmp
mov
ret
lds
fidivrl
mov
fsubr
push
inc
iret
data16
mov
lret
sbb
out
repz
mov
cmp
in
push
insl
repz
fldl
jmp
mov
icebp
push
add
pusha
xor
inc
imul
mov
inc
leave
int3
mov
out
sub
xor
lret
shlb
shr
pop
int3
enter
out
stos
addr16
shll
sbb
inc
fucom
out
inc
repnz
fs
in
mov
push
aad
lds
cmp
inc
into
icebp
dec
enter
xlat
mov
loop
filds
sti
loop
dec
pop
in
inc
lret
insb
andl
loop
arpl
in
inc
fistpll
jmp
push
std
leave
push
int3
imul
out
movsb
and
ficompl
fmulp
cmovb
repz
das
fcmovb
xor
in
rolb
fsubs
jg
dec
int3
into
out
icebp
mov
xchg
out
mov
rcrb
icebp
push
and
loopne
pop
xchg
mov
jns
rcrb
mov
icebp
cmp
mov
arpl
lds
pop
mov
mov
mov
lahf
fdiv
push
shr
mov
dec
out
aad
loopne
jmp
rorb
xchg
lahf
jb
leave
mov
add
cmp
cmp
jne
mov
rcrb
push
sbb
and
lahf
adc
fcmovbe
in
add
int
repnz
mov
xor
xchg
or
in
adc
pop
and
insb
ljmp
pop
test
lds
mov
repnz
adc
scas
push
out
pusha
fucomi
hlt
cld
stc
lock
push
dec
repz
imul
dec
repnz
hlt
dec
add
mov
xchg
data16
rol
inc
in
ret
cli
dec
into
out
sub
call
xlat
popa
sarl
sub
dec
mov
jg
loope
push
hlt
pop
insl
xchg
aad
and
faddp
xchg
xchg
mov
xor
dec
out
mov
or
out
in
aad
leave
lods
hlt
ret
in
xchg
jmp
loopne
dec
jne
and
fistps
test
and
imul
repnz
inc
ret
add
mov
mov
mulb
lock
ljmp
jecxz
aaa
jecxz
in
data16
cmc
adcb
pop
cmp
in
mov
clc
fmul
movsb
addl
clc
push
in
ja
jp
enter
ret
fsts
cmc
pop
in
imul
pop
push
loop
loopne
fs
adc
fisubrl
inc
cld
pop
xlat
fucomp
xor
sub
adc
aas
in
loope
mov
call
push
testl
cmp
mov
shlb
ror
dec
jae
cli
inc
aad
jg
into
inc
and
int3
push
pop
sahf
loop
pop
lret
xchg
push
jecxz
mov
push
in
push
das
fsubr
mov
andl
rolb
daa
mov
aas
loop
mov
loope
inc
clc
xchg
int
and
add
movsb
xchg
out
into
cmp
mov
rorl
call
add
lret
mov
mov
ret
insl
dec
fdivrs
jmp
jecxz
fadd
mov
pusha
mov
imul
or
test
shll
push
pop
cli
aad
inc
pop
mov
dec
std
ret
xor
add
fsubrp
int3
push
cld
fidivrl
or
pusha
mov
iret
cmp
adc
push
outsb
popa
ljmp
sbb
loopne
adc
in
xorl
ficoms
mov
mov
sbb
sti
neg
faddl
repnz
inc
ror
push
add
enter
xchg
call
rcr
cmp
in
insb
lock
outsl
icebp
push
lret
aaa
xor
sbb
fldt
push
jmp
imul
in
addr16
and
ljmp
orl
icebp
test
dec
stc
sbb
push
sub
addl
call
out
adcl
sbb
sub
and
ss
call
jne
loop
cmp
dec
pop
aad
shlb
xlat
lods
jl
int3
lds
mov
dec
inc
sbb
mov
pop
mov
mov
aaa
sub
rcrb
jns
fs
fistl
int3
pop
fstps
aam
inc
xchg
nop
lret
mov
push
fcmovnu
stc
xchg
shll
insb
jns
push
xor
out
les
or
into
mov
jmp
cltd
and
pop
outsb
adc
das
inc
mov
xchg
dec
cltd
push
push
inc
and
lahf
adc
fbld
fs
or
cmpsl
into
repz
arpl
add
pusha
icebp
mov
push
sti
rol
jo
rolb
mov
cmp
and
out
jo
hlt
or
loopne
adc
repnz
jno
sarl
call
int3
pop
out
xor
push
mov
jmp
mov
rorb
lds
fucom
and
add
jecxz
shl
icebp
imul
sarl
ret
adc
jl
std
gs
repz
in
imul
rorl
lds
mov
int3
push
das
lds
ds
iret
and
mov
mov
cmc
pop
leave
cmp
mov
dec
subb
push
sbb
and
rcr
add
push
fdivl
int
clc
pop
into
iret
jp
or
into
les
fstp
dec
push
mov
pop
add
or
std
outsl
cmp
lretw
mov
ljmp
in
ret
jnp
in
mov
push
rol
inc
hlt
lds
popa
adc
mov
addr16
add
addr16
fsubp
sbb
adc
rcll
and
ret
aad
push
push
pop
ds
mov
in
je
mull
cld
cmp
lret
int
inc
ss
sbb
push
iret
mov
jbe
js
mov
ja
les
cmc
shlb
std
ret
fiaddl
shll
addr16
xlat
mov
pop
lock
in
pop
popa
sbb
lahf
in
shrb
cmpsb
add
inc
negl
xor
fcmovbe
inc
inc
enter
jmp
jp
xorl
pop
mov
shll
and
loope
add
shr
mov
cmp
or
add
aam
inc
add
mov
out
push
add
fisttpl
stc
xor
sub
and
out
fs
aaa
out
add
adc
inc
mov
outsb
out
clc
jle
rcl
insb
call
les
rcr
or
mov
fiaddl
ret
shrl
imul
test
or
jo
jg
rcr
loopne
in
push
scas
ja
cld
nop
inc
aaa
hlt
insl
rcr
or
pop
cmp
pop
cltd
fdivrs
daa
out
aad
mov
mov
lret
in
pop
loopne
out
arpl
ret
mov
push
mov
or
sbb
jmp
pop
mov
add
frstor
arpl
ret
fst
shlb
pop
mov
jnp
int3
mul
pop
neg
cmp
or
lret
sti
cmp
cmp
push
aad
mov
movb
push
fisubs
je
std
xchg
enter
out
fsts
mov
mov
cmp
dec
and
push
mov
insl
inc
out
out
shll
incb
sti
cmp
jp
jmp
mov
pop
in
dec
scas
mov
jo,pt
fildl
cmp
outsb
decl
arpl
das
int3
inc
pop
rolb
shl
adc
lock
push
lret
add
adc
push
dec
shlb
cltd
imul
les
xor
bound
addb
pushf
fnsave
loope
sub
inc
insb
clc
clc
xor
rolb
dec
sub
movntq
push
and
xchg
dec
mov
jmp
out
jmp
call
in
inc
mov
mov
repnz
aam
dec
icebp
jl
pusha
inc
fs
incl
or
mov
fsubrl
stos
cli
popf
adc
gs
iret
jne
cmp
cwtl
sub
mov
in
mov
aad
mov
hlt
sbb
jno
loope
sbb
loope
sub
mov
loopew
inc
arpl
pop
xchg
loope,pt
mov
push
in
sti
lods
aas
idivl
clc
sub
jo
inc
xor
pop
cmp
jmp
rclb
mov
call
inc
das
aam
inc
cmc
fsubrp
dec
imul
push
stos
hlt
call
icebp
insb
xor
lret
clc
shlb
push
data16
idivb
jbe
push
out
loop
cld
lret
jecxz
loope
shr
fwait
mov
aaa
cmp
jmp
jp
cs
inc
fistpll
call
insl
push
mov
out
ss
fistpll
out
andb
testl
enter
iret
test
insb
test
rorl
leave
cli
pop
iret
into
mov
enter
pop
inc
push
idiv
adc
fdiv
xor
mov
pop
bnd
fs
sbb
jp
jmp
mov
jmp
sbb
push
loope
int3
iret
cmp
xlat
mov
sarb
inc
pushf
insl
jecxz
cmc
and
out
enter
rcl
inc
repnz
cs
cmc
out
pop
inc
or
out
sti
outsl
in
push
add
xlat
imul
loope
xor
int3
jmp
test
daa
xchg
iret
icebp
push
lock
ja
xchg
cli
fdivrl
mov
lret
arpl
pop
es
push
faddl
cmp
aam
imul
aaa
jnp
in
inc
push
popf
fidivs
movsb
cmp
ret
aas
int
sbb
imul
mov
in
pop
hlt
test
or
cli
mov
jbe
cmp
mov
jecxz
ss
jp
andb
fldt
xchg
push
sarb
jne
and
push
add
lds
enter
xchg
and
fcomp
and
jmp
lcall
xchg
add
hlt
shr
dec
jmp
cs
jo
rcr
xlat
mov
dec
lret
cmpl
push
aad
mov
aam
cld
jecxz
cld
add
aam
das
jle
inc
xor
inc
arpl
iret
aam
in
aad
or
in
nop
xor
call
mov
mov
loopne
clc
int
pop
fisubrl
sarl
insl
leave
push
test
rcll
int
jecxz
bnd
test
loop
fmulp
es
out
dec
mov
push
les
repz
in
fistl
jl
pop
fcmove
rcrl
or
gs
mull
imul
mov
imul
push
jno
jmp
outsl
jb
fisttpl
inc
pop
jo
in
cmp
testb
ds
or
dec
mov
mov
pop
xchg
rcll
rcll
and
das
push
ret
jns
pop
pop
addb
pop
inc
cmp
inc
mull
sbb
ret
adc
das
shrl
lea
pop
dec
fsubl
and
ret
xchg
insl
out
add
inc
cli
fcmovnbe
insb
popa
mov
dec
imul
push
inc
loop
clc
dec
bound
push
popa
cwtl
in
dec
clc
ljmp
rcl
out
fsub
out
adc
or
in
bound
sbb
pop
sbb
jbe
mov
mov
leave
imul
test
dec
sarb
inc
aad
ds
gs
popa
loopne
and
xchg
out
push
or
mov
pop
jmp
frstor
sbb
out
pop
movsb
jecxz
mov
jmp
imul
cmpb
or
fidivrs
popa
add
mov
test
sti
and
fs
sbb
pop
mov
aaa
sbb
icebp
xchg
leave
push
rcrb
int
outsb
repnz
rcll
scas
into
xchg
cli
lahf
mov
mov
add
inc
shll
pop
rcl
je,pt
mov
je
pop
fsubrl
out
inc
jno
fsubl
hlt
in
and
in
add
loop
mov
fdivrs
clc
addb
shr
and
dec
out
jecxz
les
loopne
push
dec
in
adc
int3
sbb
pop
jmp
adc
das
popf
movsb
mov
mov
shll
mov
xchg
out
pop
fisubrs
loop
icebp
hlt
shll
fistl
or
loopne
sub
in
cli
orb
mov
mov
mov
arpl
fstpt
pop
fwait
push
jno
jo
int3
repnz
dec
stos
dec
mov
xlat
jmp
icebp
xor
popa
lret
push
jge
rcl
cmp
dec
filds
jmp
inc
lahf
jo
aaa
xlat
ret
jle
cmpsb
push
and
addr16
dec
popf
inc
pop
ret
movsl
ret
mov
in
cmp
hlt
lds
push
icebp
xchg
cmp
dec
test
in
jmp
sarl
aam
hlt
sbb
outsb
outsl
in
in
xlat
jle
jmp
icebp
push
nop
repnz
dec
dec
sub
xor
clc
enter
jo
inc
aam
push
jge
fldlg2
inc
out
inc
repnz
lahf
inc
sub
hlt
loope
addr16
xlat
loope
pop
scas
sub
iret
test
jae
lret
out
cmp
into
fisttps
call
shll
das
stos
dec
pushf
fistpl
je
cmc
cmc
mov
pop
jecxz
dec
jge
rol
pop
loope
hlt
push
ffree
fs
pop
ds
out
rol
xlat
mov
sbb
dec
dec
xor
in
sbb
mov
mov
fsubrs
jmp
add
pushf
cltd
loope
into
not
xchg
sub
fdiv
dec
jno
rcrb
leave
pop
icebp
pop
std
stos
insl
cmp
mov
les
fstpl
jl
aad
sti
in
adc
xchg
xlat
cmp
mov
incl
jmp
shl
lret
aam
push
imul
out
gs
mov
jo
pop
xlat
sarl
mov
cmpsb
fistpl
fwait
add
fnstsw
push
into
int
sti
mov
adc
sarl
mov
mov
setb
imul
mov
or
xchg
lret
pushl
in
inc
leave
shlb
sbb
fisubs
rcrb
stc
mov
icebp
jns
mov
pop
adc
mov
insb
loope
pop
cld
clc
shrb
push
shlb
cmp
ret
xchg
insb
sub
add
pop
addl
mov
rcr
push
sti
in
mov
xchg
sbb
jo
frndint
gs
dec
jns,pn
pop
xor
push
repz
out
xchg
pop
pop
dec
rcrl
outsb
cltd
icebp
enterw
into
push
ds
shrl
mov
lret
jmp
out
jp
in
cmp
lods
mov
icebp
aam
fstpt
push
adc
mov
lods
adc
aam
gs
fsubs
in
in
roll
popf
enter
cmp
sti
inc
in
jno
loop
gs
inc
dec
shl
sub
repz
rcrl
mov
enter
xor
rorb
cld
dec
int
dec
fucomip
and
aas
in
in
stc
aam
popf
leave
cli
aam
dec
out
into
pop
hlt
cmc
sbb
xchg
dec
popf
mov
add
hlt
fstpt
pop
sub
sarb
add
jno
ret
xor
jno
ficoml
imul
or
out
mov
mov
cltd
mov
dec
into
fcoml
mov
jmp
jg
pop
stc
in
in
push
mov
arpl
leave
mov
push
or
jle
out
repz
aad
in
out
out
aad
jne
out
xlat
jge
fxch
loop
lret
shr
dec
fidivrs
inc
jle
mov
int
mov
jne
mov
cmc
dec
add
add
out
into
inc
jp
jmp
push
mov
inc
in
in
cmp
cmp
xchg
lret
stc
pop
outsb
sub
rcr
mov
mov
es
loope
and
lret
popa
sub
cltd
push
mov
imul
mov
cmp
fstpt
repz
pop
frstor
out
imul
mov
enter
aam
iret
inc
mov
ret
lret
push
aaa
out
ret
sbb
out
cmp
xchg
in
mov
repnz
je
fcmovnb
inc
imul
out
out
inc
in
jg
iret
aad
leave
ror
dec
js
ret
hlt
cld
loop
cmp
cmp
rcll
pushf
lret
aam
dec
das
ret
lahf
fcmovnb
icebp
add
sbb
gs
rorl
out
addb
xchg
imul
xchg
mov
mov
shr
loop
std
push
loope
loope
rcr
cmp
fs
sub
cmp
rcr
sub
les
jg
fistpl
ja
jecxz
in
mov
aas
dec
xorl
cs
bound
sarl
lock
inc
iret
iret
xchg
adc
iret
aad
out
call
ljmp
xchg
inc
jmp
aad
out
pushf
lret
pop
cmp
mov
xchg
lret
addr16
jecxz
jg
sbb
push
test
vpandn
test
int3
inc
adc
fmull
aam
out
mov
loop
cld
xor
pop
fisttpll
inc
mov
filds
daa
xlat
inc
dec
inc
out
jmp
cld
ss
sbb
jle
dec
push
jbe
inc
mov
add
sarb
in
and
sbb
out
adcb
pop
xor
test
cmp
jg
cmc
cmp
loope
in
dec
clc
stc
and
sbb
cmpb
int3
dec
lock
xor
mov
jecxz
insl
push
loop
add
in
pop
adc
ret
lret
call
adc
xor
push
fists
call
inc
test
sbb
pop
rol
adcb
jecxz
repnz
lcall
outsl
lock
fdivrs
pushf
dec
xchg
jecxz
test
in
cmp
or
mov
loopne
and
aas
ffree
int
iret
mov
push
inc
sub
jmp
out
jecxz
mov
adc
xor
int
js
sbb
fbld
pop
jnp
out
jecxz
mov
outsl
cmp
imul
outsl
loope
push
outsl
pop
rcll
fsub
mov
mov
out
into
shl
movsl
popa
hlt
popa
loopne
int
lods
pop
sub
in
inc
mov
jecxz
jno
lret
inc
and
mov
mov
repnz
dec
andl
out
and
out
outsb
jmp
push
daa
jl
ret
out
dec
adc
ror
ret
cmpsb
mov
pop
es
mov
xchg
nop
push
lds
fcomps
mov
sbb
dec
jae
cwtl
mov
or
out
out
cvtps2pd
mov
loopne
int3
jge
bound
movsb
ds
cmp
lcall
sbb
dec
out
fldcw
jbe
fsub
mov
sub
mov
sahf
sub
out
out
jge
in
sarl
mov
loope
icebp
xor
pop
incb
ss
inc
sbb
cmp
lret
pop
icebp
outsl
inc
mov
mov
push
or
in
dec
xchg
jbe
pop
push
leave
aaa
ss
jg
stos
cmp
clc
out
hlt
leave
idivl
stc
pop
jecxz
test
mov
cmp
cltd
in
cli
and
inc
loope
push
test
add
loope
fimull
test
push
fistpl
fmul
js
ror
loope
mov
lock
xchg
orb
mov
loopne
jmp
shrb
mov
ret
cmp
jecxz
out
loopne
dec
and
adc
scas
inc
push
inc
xchg
mov
in
cmpsl
adc
and
movsl
pop
leave
into
nop
push
shl
pushf
and
leave
dec
dec
out
or
in
or
push
aam
shlb
stos
dec
clc
into
and
in
negb
or
pushf
sub
lock
loopne
fcomps
sub
push
jmp
xor
loop
lods
fdivrl
fcmovnbe
cmp
stc
xchg
ds
xchg
fcmovu
arpl
aam
insl
fdivp
dec
imul
inc
jp
jns
xchg
or
fldl
sarb
cli
mov
test
sbb
or
stc
push
out
jmp
xor
fadds
daa
sbb
fimull
adc
mov
insb
mov
out
mov
add
in
inc
lret
pop
repz
imul
icebp
mov
jae
pushf
xlat
imul
dec
out
pop
outsl
pop
ret
stos
aam
dec
cmc
mov
jl
inc
repnz
jns
shll
std
push
int3
xor
repz
pop
inc
ljmp
icebp
mov
fdivl
sarl
loopne
adc
jl
fnstcw
sbb
out
imul
jno
mov
cmp
fwait
loopne
aaa
ret
ret
call
mov
cld
fdivrs
jle
and
rcrl
or
enter
rcll
fsubr
push
adc
arpl
mov
mov
adc
adc
out
or
dec
lret
push
mov
add
aam
dec
push
jecxz
ss
lds
mov
shl
add
je
push
inc
aas
push
out
or
pop
hlt
mov
lret
ljmp
out
push
xor
jnp,pn
gs
mov
jl
dec
neg
cmp
in
ljmp
push
imul
in
jo
ret
fucomip
int
jmp
rcrl
dec
jecxz
mov
mov
aas
lock
loop
roll
xchg
pop
bnd
cmp
ret
and
iret
xor
addl
int3
inc
mov
nop
ret
addl
shrb
jmp
dec
ftst
fwait
xlat
in
jmp
in
rcrb
push
fadd
lahf
loop
add
shll
mov
loopne
push
push
rol
in
jb
add
jo
inc
icebp
rcrl
insl
loopne
cmc
cmp
lods
notb
xor
jle
int3
sub
jmp
iret
out
jle
fcom
leave
cmp
popa
cmpl
xlat
lahf
lea
cmpl
push
pop
in
push
cltd
mov
pop
jecxz
out
les
stos
cmpsl
dec
loop
ljmp
aas
sub
ror
sbb
mov
sahf
inc
pop
mov
lock
dec
int
xor
lcall
in
int
push
jb
inc
mov
jge
pop
jo
clc
in
pop
in
sbb
es
and
insb
in
clc
inc
fcmove
jp
or
stos
icebp
inc
adc
std
out
add
leave
fs
repnz
lods
push
aas
mov
mov
dec
push
in
mov
rcr
insl
imul
iret
nop
add
repnz
dec
push
insl
out
rcr
pushl
cmp
fcmove
lds
repnz
lods
push
out
add
int
jl
mov
adc
fsubrp
mov
lret
pop
push
dec
fcmovb
or
fs
and
fsubr
clc
sbb
enter
lds
ret
rolb
xlat
mov
std
push
fwait
aad
push
rclb
jbe
cmc
loop
jno
in
hlt
rorb
inc
mov
out
in
mov
add
ljmp
or
ficoml
add
pusha
ljmp
inc
in
inc
pop
sub
jl
cli
ss
dec
inc
sub
stos
out
movsl
cmp
rol
leave
cmp
in
data16
xchg
or
rol
in
in
xor
clc
sbb
repz
adc
enter
and
loop
dec
fprem1
xor
shr
jecxz
inc
xchg
mov
inc
dec
imul
xchg
adc
cmp
faddp
loope
sbb
xchg
clc
aaa
outsl
push
dec
pop
mov
adc
push
lret
xorl
jbe
call
enter
jo
mov
add
push
faddp
fdivrl
in
movsb
rorb
addr16
push
mov
dec
mov
out
adc
into
fs
faddl
scas
cmp
pop
xlat
sub
push
cmp
push
mov
lret
mov
mov
pop
and
jl
ja
fisttpll
shl
dec
dec
push
lret
mov
mov
jb
or
inc
out
add
in
int3
inc
js
in
loop
loopne
rol
fwait
out
mov
out
adc
sub
scas
jge
push
xor
rcll
ret
inc
mov
and
movsb
cltd
cmovp
cmp
loopne
cmpsb
inc
ja
jecxz
sbb
lea
mov
std
sub
inc
in
mov
push
fists
adc
dec
jb
jmp
in
mov
lds
filds
cld
aad
pop
or
adc
outsl
ljmp
shl
jns
inc
mov
mov
lahf
fmuls
mov
das
fbld
andb
jbe
fwait
dec
xchg
out
int3
mov
cwtl
jle
ss
scas
xor
fs
and
adc
in
or
add
pop
rcll
inc
repnz
movsb
pop
sub
push
clc
sti
mov
aaa
add
aaa
pop
push
adc
jle
ret
sub
lret
iret
xchg
inc
xchg
add
insb
cltd
mov
mov
push
pushf
cmp
cli
fmull
pop
mov
pushf
movl
jge
aad
fstp
das
mov
out
sbb
adc
jle
sbb
mov
repz
cmp
fmul
int
ljmp
xchg
jle
mov
lods
pop
cmp
mov
mov
stos
mov
lret
sub
rcr
xchg
ja
popa
call
fstpt
sti
shrb
inc
addr16
cld
push
fcmovne
rclb
mov
out
push
into
xchg
sub
cmp
andl
mov
mov
sbb
daa
jecxz
aam
mov
push
push
fsubrl
dec
push
jns
nop
aas
adc
test
adc
pop
rcl
out
add
das
mov
inc
mov
add
xor
aad
adc
mov
jmp
rclb
adc
pop
ss
mov
cmp
push
mov
cmp
push
cmp
mov
bound
mov
lcall
loope
scas
out
sub
cmpb
fsubs
data16
leave
cli
jnp
cli
mov
lea
lret
jecxz
hlt
jp
scas
push
aam
lahf
cltd
fucom
je
mov
or
loope
cmpsl
pop
insb
in
pop
xchg
cmc
jmp
sarl
lea
rolb
int
push
dec
adc
loope
enter
loopne
shlb
and
rol
jp
and
arpl
aam
iret
mov
mov
lds
sarl
mov
lcall
rorb
int
fimull
stos
jle
mov
inc
jns
mov
or
scas
ret
icebp
push
pop
loope
inc
jns
push
cmpsl
sbbl
push
dec
scas
push
rorb
cmpsb
xchg
jb
int3
icebp
push
push
les
inc
jge
aad
mov
leave
add
stc
mov
aaa
in
push
add
imul
jno
cwtl
sarb
adcb
lds
dec
aam
mov
in
push
les
ljmp
adc
out
fcom
dec
std
lcall
and
fimuls
repz
add
lods
xor
xchg
leave
push
jnp
push
lock
mov
icebp
sti
in
insb
mov
jle
xor
fwait
or
jnp
or
out
aad
mov
xchg
jns
jp
incl
mov
sbb
mov
xlat
jp
std
hlt
add
add
jae
jae
push
mov
daa
ja
outsb
cli
add
lret
cmp
test
adc
jle
jmp
add
nop
inc
js
stos
fiadds
out
xorb
shlb
pop
add
fdivs
fwait
cli
bound
stos
mov
dec
or
fadds
pushf
push
push
into
insb
daa
mov
or
enter
jle
xchg
and
push
add
jecxz
in
aad
jne
cmp
negl
xchg
dec
or
std
dec
rep
sarl
rcr
imul
repnz
cmc
xchg
xchg
jb
jmp
xlat
jno
mov
xor
mov
sub
fiadds
imul
add
pop
stos
aad
rorb
and
lock
push
xlat
les
push
mov
or
cmpb
pop
cmp
cmp
out
lahf
sbb
push
mov
lods
xchg
push
push
dec
push
lock
cmp
xchg
scas
xor
out
jecxz
mov
movzwl
or
rclb
nop
mov
sbb
adc
test
fst
and
inc
cmpxchg
dec
cmpsb
mov
push
stos
sbb
pop
imul
test
arpl
loope
int3
mov
or
mov
fimuls
call
add
mov
sub
lods
loope
mov
in
ret
mov
mov
js
scas
rorb
or
jge
xor
xchg
mov
test
xchg
push
add
mov
dec
rcrb
push
cvttps2pi
jbe
loopne
jnp
lods
xchg
movsb
mov
addr16
xor
xchg
repz
mov
lcall
xchg
daa
lahf
push
pusha
in
fbld
frstor
lret
loopne
mov
mov
cltd
sub
mov
mov
sbb
mov
ja
dec
imul
mov
adc
mov
xor
enter
jge
adc
jg
jnp
dec
or
jp
fistpl
pop
xchg
jb
xorl
ljmp
pop
xchg
jnp
mov
sti
mov
cmpsl
fists
punpcklwd
test
and
mov
ja
shrl
icebp
mov
push
fucomp
push
je
dec
push
and
stc
lahf
imul
stos
and
bnd
adc
add
pop
xor
enter
mov
test
mov
test
fwait
outsl
mov
testl
pop
lahf
rorb
stos
in
mov
xor
xor
fs
aad
out
mov
lods
stc
sub
xor
sarb
sarl
xlat
mov
inc
mov
add
sbb
nop
mov
sub
xor
mov
aas
add
fs
pop
fisubrs
fcmovbe
add
ret
mov
fwait
mov
pop
jmp
data16
stos
loop
inc
scas
mov
or
and
out
repz
jne
push
jmp
icebp
fldenv
cmp
pop
insl
mov
cmpb
mov
movsb
loopne
mov
push
in
cmp
ss
shld
psrlq
jle
pusha
jmp
aaa
dec
jl
in
fucom
mov
lock
pusha
pop
addl
and
cmpsb
jl
sub
pushl
xchg
iret
das
or
lahf
sub
rcrl
adc
xchg
leave
cmc
scas
iret
dec
add
into
adc
xchg
lahf
test
aam
out
pop
idivl
lcall
aas
bound
mov
jecxz
out
fdivr
push
test
mov
icebp
jns
shl
and
fisttpll
jecxz
nop
sbb
sbb
inc
add
xchg
jg
insl
mov
sbb
jle
pusha
add
insb
add
gs
xor
ja
dec
js
dec
push
ja
imul
dec
je
imul
xor
jp
inc
imul
jae
add
xor
outsl
inc
jbe
dec
popa
inc
pop
xor
inc
dec
xor
xor
add
add
cmp
dec
push
xor
jp
fs
inc
jns
push
dec
add
push
pop
arpl
inc
jo
add
push
add
push
dec
inc
pop
cmp
jp
cmp
xor
gs
jbe
xor
inc
push
ja
arpl
aaa
cmp
popa
je
push
fs
push
jno
aaa
xor
cmp
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
dec
inc
arpl
push
js
arpl
js
add
push
insb
dec
pop
push
jns
xor
push
addr16
jno
jns
fs
xor
insb
xor
inc
inc
dec
xor
push
insl
xor
inc
inc
push
push
jns
add
dec
jns
xor
xor
dec
dec
xor
add
dec
push
inc
dec
cs
dec
dec
add
inc
push
dec
outsl
dec
imul
xor
inc
js
push
push
xor
xor
inc
je
arpl
xor
add
push
ss
inc
inc
push
push
add
inc
dec
fs
cmp
pop
pop
push
xor
xor
dec
add
inc
gs
dec
insl
cmp
jae
push
push
push
pop
outsl
arpl
xor
dec
push
add
jbe
jno
bound
xor
jb
add
dec
imul
outsb
xor
push
cmp
push
push
pop
push
add
add
cmp
int
aaa
add
add
add
add
xor
add
pop
add
orb
add
mov
add
test
add
push
dec
in
inc
dec
sbb
popf
add
add
fistpll
add
add
cmpb
add
lock
addb
add
add
addb
add
xor
aad
push
add
flds
add
and
add
cmp
add
push
add
orb
addb
add
push
push
or
mov
add
adc
add
pop
bound
add
add
add
fwait
inc
xchg
dec
fiadds
add
add
add
xorb
add
enter
inc
xor
add
add
xorb
add
std
nop
das
inc
adc
add
or
add
add
add
add
xchg
pushf
inc
or
add
or
add
add
add
add
jb
mov
add
add
add
add
add
add
add
aas
addb
xchg
or
add
add
pop
adcb
xor
add
add
or
add
add
lcall
dec
add
add
or
add
add
jae
cmp
or
jns
add
add
or
add
add
jne
es
dec
xchg
ds
or
add
add
add
add
add
mov
inc
das
cwtl
mov
add
add
or
add
add
add
add
add
mov
add
add
or
add
add
add
add
add
in
inc
sar
in
add
add
or
add
add
add
add
add
mov
ljmp
add
add
add
add
add
mov
inc
lcall
add
add
add
add
add
push
add
add
add
add
dec
add
sub
add
push
add
add
add
add
add
add
add
mov
add
jno
add
addb
add
movsb
add
les
add
mov
add
lock
add
add
add
cmpsb
add
and
add
cmc
cmpsb
add
push
add
add
add
jne
add
mov
add
add
add
inc
add
add
or
add
inc
add
add
or
inc
mov
adc
add
addl
and
add
add
add
add
inc
add
and
inc
sbb
dec
add
adcl
add
add
add
adc
push
sub
add
roll
add
add
mov
add
add
add
mov
add
adc
inc
pop
add
adc
add
add
orb
and
rolb
rolb
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
dec
add
add
xor
pop
add
push
add
add
add
push
add
add
aaa
add
add
xor
push
and
pop
add
and
add
inc
add
jno
push
add
add
dec
add
and
inc
add
bound
arpl
pop
add
add
add
add
add
dec
add
inc
add
add
push
add
xor
push
add
insl
add
dec
add
add
add
add
jb
pop
add
add
xor
bound
push
add
dec
add
push
add
add
push
dec
add
add
add
jno
push
add
imul
push
add
inc
add
add
add
add
adc
xor
bound
dec
add
add
add
dec
add
insb
add
push
add
arpl
xor
add
add
add
dec
add
xor
add
push
add
add
data16
and
dec
add
jns
cmp
inc
add
je
push
add
je
add
and
xor
cmp
push
add
add
add
add
dec
add
add
dec
add
xor
push
add
inc
add
insl
add
add
dec
add
add
add
jns
data16
dec
add
add
add
add
add
add
insb
add
add
add
dec
add
cmp
jno
cmp
and
inc
add
bound
cmp
add
or
jb
cmp
push
add
cmp
push
add
push
add
and
insb
add
add
jbe
bound
inc
add
add
jb
xor
js
xor
pop
add
jno
xor
push
add
pop
add
add
add
add
js
jno
xor
add
push
add
jb
xor
add
je
inc
add
add
add
add
add
popa
add
inc
add
add
dec
add
add
add
jne
insl
add
adc
push
add
dec
add
dec
add
add
dec
add
pop
add
jb
outsb
add
inc
add
add
add
add
adc
jno
js
dec
add
xor
insb
add
pop
add
push
add
add
jbe
inc
add
inc
add
push
add
add
add
add
add
add
add
add
mov
add
addb
add
addb
pop
addb
add
add
and
adc
add
push
add
add
mov
add
add
add
push
dec
add
add
add
add
add
add
inc
add
addb
add
add
add
add
push
or
or
adc
add
add
add
xor
add
add
adc
sub
add
add
rorb
add
add
add
and
add
xchg
add
pusha
pop
or
add
add
add
and
mov
push
addl
inc
and
add
add
adc
or
add
add
and
add
add
push
add
test
add
add
add
addb
addb
add
addb
add
mov
and
add
inc
add
inc
inc
add
xchg
pusha
inc
inc
add
add
add
add
add
inc
add
adc
add
addb
add
add
adc
add
add
add
add
addl
add
add
add
adc
adc
and
push
orb
add
add
add
or
add
rolb
dec
or
add
or
inc
nop
add
add
add
add
add
or
add
add
adc
adc
pop
add
add
add
add
adc
or
mov
and
addb
addb
add
add
add
add
addb
adc
add
adc
add
add
add
add
sub
cwtl
add
rolb
add
or
adcb
or
add
add
add
adc
adc
adc
add
add
and
inc
adc
add
add
adc
add
and
add
test
add
add
push
inc
add
add
adc
add
.byte
.byte
