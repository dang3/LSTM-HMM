push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
pusha
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
je
mov
xor
jmp
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
movzwl
cmp
je
int
xor
jmp
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
add
mov
add
mov
movl
mov
add
mov
movl
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
loop
inc
add
pop
arpl
push
jb
jno
add
cmpsb
pop
popa
fs
pop
bound
inc
jns
pop
jo
add
pop
popa
fs
pop
bound
inc
jns
cmp
add
push
jne
aas
jns
outsb
push
pop
gs
loop
add
and
popa
push
push
inc
imul
inc
je
add
inc
loop
add
movsl
push
je
add
add
pop
outsl
aad
inc
imul
inc
jns
loop
add
movsl
push
je
mov
jne
xchg
outsb
jle
gs
loop
add
fidivs
inc
add
xor
mov
xor
lcall
add
inc
add
inc
add
pop
arpl
push
jb
xor
add
pop
popa
fs
bound
inc
jns
add
add
jo
add
push
jb
pop
pop
xor
les
loop
add
testl
fs
pop
add
mov
inc
add
iret
inc
jbe
mov
cs
push
insl
arpl
push
jb
xchg
dec
insb
inc
jbe
outsl
arpl
xor
add
insb
inc
jbe
outsl
arpl
xor
add
pop
insl
popa
push
arpl
add
add
inc
dec
pop
add
jb
aaa
push
insb
push
xor
add
add
push
popa
jo
pop
insb
outsl
add
add
or
outsb
lcall
mov
xor
add
pop
arpl
aas
dec
gs
inc
add
loop
rolb
loop
pop
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
jmp
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
add
xor
jmp
loope
add
loope
add
loope
add
fisubrs
dec
jmp
loope
add
loope
add
loopne
add
pop
cs
xchg
xor
jmp
std
cs
icebp
xor
jmp
loope
add
shll
add
fbstp
add
loope
add
add
add
xor
in
loope
add
loope
add
icebp
xor
jmp
loope
add
loope
sub
shll
add
dec
sub
add
cmp
add
dec
sub
add
pop
dec
add
add
or
add
sti
sub
add
sub
add
sub
add
sti
int3
add
addr16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
jnp
add
mov
add
xor
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
fildll
mov
cmpsl
nop
add
fsts
add
fstps
loop
decl
flds
add
flds
add
cmp
subb
popa
outsb
js
add
and
mov
loop
or
loop
xchg
add
flds
add
flds
add
flds
add
sbb
mov
aaa
arpl
loop
push
add
add
xor
sub
xor
popf
loope
jmp
add
xor
add
xor
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
add
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
mov
add
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
xor
add
add
cmp
add
cmp
add
dec
xor
add
add
cmp
add
cmp
add
or
add
or
add
sti
xor
add
xor
add
xor
or
add
sti
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
loop
add
loop
cwtl
add
std
xchg
add
sbb
xchg
add
in
add
icebp
xchg
add
adc
add
ja
add
pop
nop
add
cmp
add
cmp
nop
add
xor
nop
loope
icebp
nop
loope
ret
nop
loope
lds
loope
pop
xchg
loope
icebp
nop
loope
jno
loope
adcl
add
add
xor
xchg
loope
dec
xchg
loope
inc
xchg
loope
sti
xchg
loope
lahf
xchg
loope
xchg
xchg
loope
popf
xchg
loope
jns
loope
dec
xchg
loope
dec
loope
jmp
cmpsb
loope
lods
cmpsb
loope
pop
cmpsl
loope
in
cmpsb
loope
frstor
loope
test
loope
add
loope
add
jle
add
jle
add
add
add
add
aas
add
ds
add
add
ds
jle
add
xchg
add
jg
add
loope
add
add
add
add
jno
add
jno
add
jbe
add
outsb
cs
push
add
push
add
add
sub
add
add
sub
popf
add
xor
add
pop
popf
add
dec
popf
add
lea
add
dec
fwait
add
mov
lcall
mov
add
fstps
add
popa
lcall
test
popf
add
cmp
add
pushf
add
push
pushf
add
add
add
pushf
add
aaa
pushf
add
imul
jge
add
addr16
add
loop
xchg
add
xchg
xchg
add
lahf
xchg
add
loope
add
leave
xchg
add
loope
add
in
xchg
add
fistl
add
add
cwtl
add
dec
xchg
add
outsl
xchg
add
add
add
imul
add
loop
test
loop
test
loop
xchg
add
cmc
xchg
add
lea
add
jg
add
jmp
xchg
add
sarl
xor
jg
xor
jg
xor
loope
ja
loope
imul
cmp
xor
loope
xor
xor
jle
xor
jle
xor
jle
xor
loope
xchg
jle
add
loope
popf
jle
xor
jle
xor
loope
popa
jle
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
and
xor
das
arpl
add
arpl
add
bound
add
xor
dec
arpl
add
xor
and
add
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
std
xor
scas
cmc
xor
aaa
in
xor
xchg
xor
fnsave
add
aad
add
int
add
mov
xor
inc
test
add
movsl
xor
sbb
jae
add
loope
add
iret
mov
add
mov
sti
xor
add
xor
adc
add
mov
xor
add
xchg
add
std
xchg
add
mov
xor
add
xchg
add
pop
stos
add
insl
stos
add
pop
stos
add
pop
stos
add
inc
stos
add
inc
stos
add
jae
add
fldt
add
xor
add
lods
add
add
add
lods
add
sbb
add
xor
mov
loop
mov
loop
mov
loop
add
movl
add
leave
add
loop
mov
loop
mov
loop
mov
loop
mov
loop
mov
loop
mov
loop
mov
loop
xchg
add
cltd
xchg
add
xchg
xchg
add
cltd
xchg
add
xchg
loop
xchg
add
add
loop
xchg
add
dec
xchg
add
jecxz
add
loope
add
stos
mov
loop
mov
loop
mov
loop
sbb
loope
decl
loope
mov
xor
mov
xor
loope
imul
xor
loope
lods
loope
mov
loope
sub
loope
cmp
loope
cmp
loope
mov
mov
xor
mov
xor
mov
xor
loope
out
loope
ja
loope
inc
mov
xor
mov
xor
sub
jmp
das
add
jb
add
jb
add
jb
add
push
das
add
push
das
add
jno
add
jno
add
add
add
add
jo
add
push
add
push
add
jae
add
add
add
add
push
cs
push
add
push
add
jo
add
jo
add
add
add
imul
outsl
lods
add
push
lods
add
dec
lods
add
daa
lods
add
pop
lods
add
add
add
lods
add
jne
add
stos
mov
add
mov
test
add
lods
test
add
rcrl
add
cltd
add
and
add
mov
lcall
dec
nop
add
cmp
add
fstl
add
loop
lahf
add
jne
add
add
loop
lahf
add
sub
add
lahf
add
sbb
movsl
add
aas
movsl
add
insl
movsl
add
jno
add
movl
add
fadds
add
add
leave
add
int
add
add
cli
add
bound
add
test
movsl
add
lds
add
cmpsb
add
sbb
bound
cmpsb
add
adc
add
filds
add
add
bound
jmp
loop
sti
add
mov
add
mov
add
mov
cmpsb
loope
jecxz
loope
fldenv
loop
ljmp
mov
add
mov
add
mov
add
xor
sahf
loope
sti
popf
loope
in
popf
loope
out
popf
loope
stc
popf
loope
repz
loope
pop
sahf
loope
adc
popf
add
add
xor
sahf
loope
and
loope
adc
loope
sbb
loope
addr16
loope
add
xor
push
jl
add
insb
xor
xchg
xor
and
sbb
pop
dec
xor
inc
inc
xor
jmp
xor
or
add
xor
push
inc
xor
dec
xor
in
xor
jmp
add
add
add
add
xor
jmp
jl
sub
cmp
adc
outsb
negl
jl
sub
cmp
adc
mov
push
outsb
negl
or
cmc
cmp
xor
xchg
in
and
sub
dec
loopne
negb
inc
jnp
xchg
divl
js
inc
pop
push
cmpsb
sbb
repnz
pop
insb
dec
lods
lahf
lahf
jbe
add
cmp
xor
pop
fadds
pop
mov
aam
or
stos
jmp
inc
jge
cld
or
inc
mov
sahf
adc
jo
push
and
push
je
jno
pushf
mov
adc
adc
jbe
fistps
and
pop
arpl
mov
je
mov
jo
out
outsl
add
and
add
add
mov
in
pusha
je
jbe
cs
lods
inc
loop
stos
inc
loop
add
loop
add
add
loop
add
loop
push
jne
fwait
sbb
loop
add
loop
addl
leave
adc
fs
jge
bound
aas
test
ljmp
dec
addl
leave
sbb
fidivl
cmp
add
bound
out
int
fsts
test
roll
loop
or
add
out
imul
jae
sub
add
sub
sti
xor
xor
add
xor
add
xor
add
xor
or
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
or
adc
sub
outsl
add
loope
add
mov
sub
outsl
add
loope
add
xor
sub
outsl
add
loope
add
fidivs
add
jecxz
add
fisubrs
add
out
adc
repz
sub
leave
call
pusha
add
fldenv
add
fnstcw
add
add
add
adc
jmp
flds
add
lock
call
push
add
fsts
add
nop
add
jmp
mov
add
and
push
add
sbb
jnp
nop
add
cmp
mov
js
jnp
cmp
jnp
rolb
cmp
adc
dec
es
add
and
or
add
add
mov
cmp
dec
add
and
add
or
push
add
and
jecxz
clc
sub
or
je
sti
and
enter
or
add
es
loop
or
or
or
loop
or
loop
or
or
or
loop
or
add
or
or
loop
or
loop
or
or
or
loop
or
or
loop
or
loop
or
or
loop
or
loop
or
or
loop
or
loop
or
loop
or
xor
or
xor
or
xor
or
jmp
and
jmp
or
xor
or
xor
or
xor
or
std
or
xor
or
xor
or
xor
or
xor
or
xor
or
jmp
or
jmp
or
xor
or
xor
or
test
or
xor
or
add
aas
add
fsts
add
fsts
jmp
jmp
mov
jmp
out
pushf
add
fdivrl
add
add
jmp
fcoml
add
fldcw
add
fldcw
jmp
fmull
jmp
fstps
jmp
jmp
mov
call
add
add
xor
jmp
flds
hlt
jmp
dec
add
fldenv
add
sti
cmp
add
cmp
or
mov
cmp
add
cmp
add
mov
cmp
mov
push
add
pop
add
sbb
mov
cmp
jnp
jns
jnp
cmp
dec
cmp
adc
add
add
cmp
cmp
sub
dec
cmp
or
cmp
mov
cmp
dec
add
cmp
add
sti
cmp
sti
cmp
add
stos
push
sub
xchg
or
xchg
or
loop
push
or
loop
or
loop
or
loop
or
xchg
or
loop
add
loop
or
add
loop
or
loop
add
loop
or
xchg
or
loop
add
loop
or
xchg
or
loop
or
loop
or
xchg
or
loop
add
loop
or
xor
or
xor
or
xor
add
xor
or
jmp
or
jmp
or
add
add
jmp
or
xor
or
jmp
or
add
xor
or
xor
or
xor
or
add
xor
or
xor
or
xor
or
fildl
xor
or
xor
or
or
xor
or
jmp
or
add
out
add
flds
add
jmp
add
jmp
pop
add
fldenv
add
jmp
jp
fsub
cmp
jmp
jmp
fiaddl
jmp
fnstenv
call
loopne
add
add
jmp
lret
loopne
add
fldcw
add
jmp
mov
fneni(8087
inc
add
fstps
add
jmp
ljmp
add
add
add
add
cmp
jmp
or
dec
add
cmp
add
add
sti
ss
add
aaa
adc
out
ss
jmp
ss
lret
xor
lret
cmp
or
mov
and
lret
cmp
add
mov
ss
add
das
push
add
pop
add
cmp
cmp
add
add
js
dec
cmp
dec
cmp
adc
cmp
push
add
mov
loop
or
loop
or
loop
or
loop
add
xchg
or
or
movsb
or
loop
add
loop
or
or
xchg
or
loop
add
loop
or
xchg
or
loop
or
add
add
add
loop
or
or
loop
add
loop
or
or
xchg
or
loop
or
or
xchg
or
loop
add
loop
or
jmp
or
jmp
or
jmp
or
xor
add
xor
or
xor
or
cli
add
xor
or
jmp
adc
jmp
add
xor
or
jmp
or
xor
or
jmp
or
xor
or
xor
or
xor
or
std
add
xor
or
xor
or
xor
or
xor
fnclex
inc
add
jmp
pop
add
fcomp
add
fnstcw
add
jmp
cli
call
add
add
add
add
popf
add
loop
add
jmp
add
loop
add
jmp
pop
add
fdivs
fsub
aaa
add
jmp
dec
add
add
fldcw
add
jmp
out
call
test
add
jmp
inc
add
faddp
add
adc
jmp
dec
cmp
add
xor
sub
outsb
add
add
xor
add
cmp
add
cmp
add
xor
add
cmpsb
decl
cmp
or
adc
idivb
addl
movsl
push
add
cmp
lret
cmp
add
cmpsl
or
lret
cmp
lret
cmp
add
cmp
add
cmp
jnp
jecxz
stos
cmpsl
add
mov
pop
add
xor
cmp
xchg
or
xchg
or
loop
or
loop
adc
xchg
or
xchg
or
loop
or
loop
or
loop
or
loop
or
loop
incb
loop
or
xchg
or
jecxz
sub
xchg
or
xchg
or
loop
decb
xchg
or
add
loop
or
loop
or
loop
or
xchg
or
loop
cld
pop
loop
or
xor
or
xor
or
std
cld
mov
jmp
or
xor
or
xor
cld
aam
jmp
or
xor
or
jmp
or
jmp
or
xor
cld
loopne
jmp
or
add
shll
hlt
or
xor
cld
add
jmp
or
xor
or
xor
or
jmp
or
jmp
or
jmp
or
add
jle
add
jmp
inc
add
fdivrs
call
fldenv
jmp
ds
add
jmp
push
add
add
add
fildl
jmp
jmp
idiv
call
sub
jmp
fnstcw
add
ficomps
jmp
fstps
jmp
mov
or
jmp
cmpsb
rolb
jmp
cltd
stos
add
jnp
inc
add
out
add
cmpsl
pop
add
push
add
sahf
pop
arpl
dec
cmpsl
jle
cmp
fiadds
sbb
sbb
dec
cmpsl
outsb
add
cmpsl
add
movsb
mov
add
cmpsl
mov
sti
cmpsb
dec
add
mov
add
or
add
call
cmp
adc
cmp
add
cmp
cmpsb
cmp
inc
fwait
cmp
add
cmp
add
movsl
or
add
add
popf
or
fiaddl
or
loop
or
loop
or
loop
or
cli
test
pop
loop
or
in
or
test
add
xchg
add
jg
add
mov
or
shlb
or
fiadds
or
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
fwait
add
loop
add
loop
add
loop
add
loop
jmp
adc
sbb
xor
loopne
imull
outsb
fmuls
and
cmpsb
add
fstpt
xor
ds
neg
das
nop
popa
stos
xor
cmp
jae
out
push
jp
pop
out
insb
ror
insb
inc
pop
and
push
mov
inc
dec
lods
les
add
add
add
add
inc
push
call
push
pushf
xchg
lods
mov
pushf
dec
adc
std
mov
jecxz
and
adc
mov
das
cli
hlt
lods
cmp
aas
xchg
or
adc
pop
xor
mov
cmp
rolb
sub
or
cwtl
sub
add
add
xchg
adc
subl
imul
cmpb
sub
push
push
insb
fcmove
fiadds
xchg
sub
pop
ss
pop
mov
lds
lock
das
lcall
sarl
mov
neg
jbe
add
add
rcrb
adc
mov
add
add
mov
call
aaa
insb
add
mov
or
loope
xor
cs
insl
or
arpl
xchg
imul
insb
sbb
inc
test
insb
and
add
lret
adcb
mov
mov
fwait
jge
adc
xor
push
icebp
faddl
and
iret
lcall
add
add
add
add
aas
aam
lock
into
xor
fdivr
add
dec
test
fdivs
jecxz
xchg
inc
mov
jl
jg
mov
fwait
and
mov
add
inc
inc
or
dec
or
mov
inc
add
push
and
sub
mov
nop
mov
sub
out
add
add
test
mov
loopne
fwait
lods
jne
adc
add
mov
outsl
in
pop
push
mov
loope
xor
push
and
inc
xchg
mov
and
mov
sti
clc
rclb
pop
mov
sbb
mov
jmp
into
popf
loop
cmp
sbb
in
mov
rcl
ds
ret
movsb
xor
movsl
xor
mov
mov
fmull
outsb
lahf
lret
or
jg
mov
ja
sbb
mov
stc
add
in
adc
loope
roll
pop
adc
cmp
mov
dec
mov
scas
fsubl
and
fimuls
cli
sub
add
scas
lahf
or
or
adc
adc
adc
xchg
or
jb
lret
add
mov
pop
add
push
add
cmc
or
in
add
lds
dec
mov
mov
insl
xlat
ret
shlb
xchg
mov
fldl
add
aam
jne
and
push
or
sysret
jb
pop
add
dec
in
mov
movsl
cmp
or
push
rclb
in
ja
jl
fisttpl
roll
loop
xchg
fnstsw
xchg
frstor
arpl
and
jne
inc
mov
sub
or
pop
bswap
dec
clts
add
add
incb
shll
push
rcrl
inc
aad
insb
hlt
or
mov
mov
xchg
xchg
add
jecxz
pop
xchg
push
inc
imul
pop
pop
roll
fisubs
ss
mov
lret
xor
lds
sbb
incb
ss
in
adc
xlat
pop
add
add
xlat
dec
cmp
popa
cmp
cmp
inc
mov
jns
insl
shrb
loopne
jmp
adc
aaa
imul
stos
xor
push
adc
outsl
mov
mov
push
arpl
xor
cmc
cmp
add
outsl
int3
sub
jl
add
lods
sahf
sahf
or
xchg
ja
cmp
mov
xor
cs
jecxz
push
push
mov
add
add
fwait
xor
test
fstl
icebp
rorl
cli
int3
mov
lods
xchg
lret
mov
and
cmpsl
dec
adc
mov
movb
add
movsb
call
inc
je
ficoml
negb
out
inc
rorl
jbe
hlt
xor
pop
inc
sub
pop
fwait
push
or
sub
adc
xor
sub
in
fcomi
push
mov
sub
and
xlat
roll
nop
add
test
jb
test
cmp
ljmp
add
add
test
inc
dec
xor
jns
out
popa
jmp
inc
mov
mov
adc
clc
je
cmpsb
mov
cmp
incl
lahf
xchg
call
mov
adc
cli
mov
xor
aad
mov
inc
push
pop
lea
notb
or
pushf
int3
sbb
add
into
sti
mov
bound
fnstsw
pop
xchg
push
and
orb
icebp
or
aad
push
cmp
add
xlat
cmpsb
pop
std
pop
outsb
sub
push
and
or
and
xchg
xchg
jecxz
data16
sub
mov
push
les
adc
std
xchg
jmp
push
pop
lcall
cmp
add
add
pop
dec
int
xchg
cmp
xor
shrb
xchg
add
push
adc
rol
lea
xchg
xchg
je
jnp
mov
pop
mov
push
mov
mov
cmp
pop
repz
popa
mov
jge
out
push
outsb
out
jmp
dec
outsl
je
add
add
bnd
lock
imul
inc
mov
cmp
pop
cli
addr16
sbb
pop
out
inc
adc
push
cmc
aaa
daa
or
xchg
cmp
mov
inc
ret
mov
repz
xchg
xchg
test
pop
jg
out
adc
jp
shlb
scas
xchg
add
add
pushf
add
out
lret
jo
movsb
mov
cmp
pop
fisubs
xchg
les
pusha
call
dec
pop
xorl
xor
mov
fdivrp
rcr
repz
adc
iret
addr16
test
cmpsb
dec
mov
aad
sahf
mov
daa
test
ljmp
cltd
push
sub
pop
in
pop
out
mov
scas
fisubrs
pop
mov
jp
ret
aad
cli
lret
je
loope
loop
jns
jnp
xchg
sbbb
xor
shll
ja
inc
mov
loope
das
cmp
lds
adc
cli
inc
pushf
dec
mov
leave
mov
bound
shll
push
add
add
inc
lcall
into
hlt
dec
fiadds
bound
xchg
push
loope
fiaddl
adc
and
inc
ja
divl
stos
mov
in
aad
add
mov
pop
ljmp
adc
stc
rcll
or
dec
inc
pop
sub
sub
mov
nopl
in
add
add
mov
lahf
dec
nop
xor
lret
js
movsb
inc
cmp
push
xchg
iret
jne
push
and
and
test
out
mov
iret
cmc
pop
cs
jne
pop
cmp
fimuls
adcl
fcmovnu
stc
mov
movsl
push
mov
dec
xchg
jmp
int3
outsb
add
lods
add
pusha
ljmp
add
add
add
add
daa
pop
shlb
add
call
cmp
movswl
or
or
ja
or
add
or
dec
sbb
sub
add
adc
xchg
xlat
inc
sbb
sahf
sbb
ret
fcompl
xor
sbb
xor
adc
rcll
adc
add
add
test
std
adc
mov
jp
fwait
cli
dec
cmp
mov
std
movsl
leave
cmp
or
ffreep
inc
aas
push
mov
mov
cmp
in
dec
pushf
aaa
adc
sbb
xor
mov
xor
xchg
xor
shll
pop
xor
xor
mov
out
daa
ret
es
jmp
mov
add
jmp
les
mov
js
mov
fbld
cld
sti
test
ds
lea
jno
pop
cmp
mov
fsts
pop
repz
push
icebp
add
fcomi
xchg
call
push
int3
dec
mov
push
fwait
aad
push
loopne
mov
or
cmpsb
std
aaa
sbbb
fs
add
mov
mov
dec
jle
inc
mov
cli
je
test
dec
lcall
cmp
icebp
lea
ficomps
inc
adc
les
adc
cmp
push
pop
sub
xchg
stc
cmc
fs
mull
pop
adc
dec
cmp
les
cmp
mov
idiv
pop
jbe
cld
and
add
push
sbbb
cmc
sahf
dec
mov
cmc
sub
cs
pop
in
ret
repnz
pop
repnz
add
in
aad
out
ret
subl
or
adc
iret
push
adc
push
pop
outsl
jb
pop
pop
pop
aam
mov
pop
push
pop
xchg
sbb
pop
jl
fcompl
add
add
inc
loope
mov
loopne
lahf
mov
jecxz
rorl
cmp
in
aam
in
stos
push
out
out
inc
xchg
out
aas
dec
shr
or
in
lea
call
arpl
jmp
adcb
pop
jle
std
adc
ja
movsl
incb
mull
cli
rorb
jns
sahf
stc
mov
pop
clc
jae
add
add
add
repnz
mov
icebp
aas
lock
sub
mul
int
imulb
in
ja
lods
test
fcmovbe
sarl
jno
shrb
fstpl
stc
fsubl
cmp
xlat
fs
test
aam
add
rcrb
mov
rcl
es
sti
int
pushf
les
add
loop
jmp
sbb
out
xchg
mov
in
adc
or
cwtl
pop
cmp
lcall
inc
cmpsb
xchg
int3
jp
lods
pop
xchg
scas
push
loop
insl
push
xor
push
sub
jno
cli
movsl
insb
sahf
push
fs
scas
and
test
push
rol
mov
dec
or
cmp
add
inc
clc
cmp
jg
sub
imul
imul
pop
cltd
mov
rorb
mov
mov
mov
dec
fidivs
jno
pop
scas
pop
or
scas
pcmpeqb
mov
fidivrs
mov
popa
xor
xor
sbb
jge
fsubs
sub
add
xchg
inc
cmp
push
sti
addr16
add
fldl
test
ror
scas
icebp
rcrb
push
scas
aam
sti
push
aam
in
or
iret
add
or
mov
inc
into
xor
stos
scas
mov
mov
mov
push
cmp
xchg
add
mov
out
jae
mov
jne
mov
addr16
push
sub
adc
out
cld
mov
add
mov
mov
jae
sti
xchg
push
xchg
stos
adc
popf
xchg
inc
mov
jge
jle
outsl
call
mov
insb
push
dec
inc
fnstsw
aad
arpl
fistps
push
addl
inc
adc
filds
add
pop
adc
addr16
jb
in
into
int
dec
lods
xchg
mov
adc
or
fmul
sbb
mov
lds
mov
jne
sbb
cmp
fwait
xor
mov
test
aas
jmp
pop
test
mov
xchg
sarl
fucom
inc
dec
sub
pop
adc
clc
mov
add
xor
cli
mov
cwtl
xchg
lcall
sahf
rolb
dec
jmp
cmc
popf
mov
ret
cld
inc
rcl
mull
and
sbb
mov
add
xchg
sarb
dec
dec
dec
pop
adc
icebp
mulb
adc
scas
mov
notb
jle
add
jl
and
fdivl
mov
shufps
out
hlt
imul
sbb
out
or
dec
insl
jae
pop
fistpll
sub
add
mov
lcall
mov
test
out
fbstp
inc
fistpll
dec
mov
and
jae
mov
into
std
inc
pop
cmp
pop
cmc
push
add
add
ljmp
mov
testb
pop
jno
sbb
decb
add
sbb
cmpsb
xchg
adc
jo
push
inc
push
in
test
in
inc
cltd
xorb
stc
enter
fistl
inc
imul
sar
or
rcr
mov
jecxz
xor
dec
add
cwtl
negb
add
add
add
add
scas
idivl
adc
mov
insb
mov
mov
test
fistpl
and
in
and
out
aas
xchg
mov
adc
inc
mov
xchg
incl
mov
cmp
inc
xchg
sub
xor
leave
scas
mov
sahf
in
sub
mul
xorb
push
cmp
cmpsl
pop
dec
xor
add
or
pop
roll
add
add
xchg
dec
pop
sub
and
sub
sub
jo
hlt
js
push
dec
ror
std
rcrb
and
xchg
xchg
mull
sub
mov
pop
jns
and
jle
imul
xlat
cmc
loop
shlb
outsl
insl
fisubrs
jnp
mov
mov
loop
adc
dec
arpl
add
sarb
mov
push
in
pop
mov
cmp
daa
or
xlat
scas
inc
jb
loop
int
mov
lea
fnstsw
adc
jne
or
adc
cli
ss
bound
jp
sbb
iret
adc
leave
jae
ja
movsb
sub
lock
lods
ja
push
adc
xor
mov
push
jb
ljmp
add
add
add
or
sub
push
icebp
xchg
jne
fildll
dec
xchg
nop
lret
insl
cmpsl
aaa
or
adc
out
sahf
roll
imul
push
lcall
mov
ror
mov
sbb
cmp
xchg
cmp
cmc
sub
lahf
xchg
ret
mov
mov
jo
add
add
or
pusha
adc
add
mov
push
and
add
cmp
outsl
outsb
lcall
les
and
repz
loope
rcrl
push
jne
pop
jecxz
stos
xor
sbb
add
fcomps
sti
mov
mov
push
addr16
ds
xchg
cmp
add
pop
sub
push
mov
mov
divb
mov
mov
pop
inc
int3
cs
sub
jmp
add
int3
popa
outsl
or
pop
dec
mov
fidivrs
add
mov
xor
rolb
les
sti
and
and
xor
sub
pusha
mov
push
xchg
pop
add
add
std
jnp
fs
pop
mov
sbb
fiadds
adc
and
cmp
dec
inc
add
shrl
scas
outsl
in
negl
push
cmp
test
cwtl
push
addr16
es
or
leave
jbe
add
or
add
outsl
push
and
sub
adc
sub
xor
or
add
add
mov
mov
pop
jbe
sbb
xchg
insb
leave
xor
outsl
stc
mov
push
rcrl
mov
lret
xor
push
fcoms
scas
shll
sub
ja
je
add
xchg
dec
add
aad
roll
push
das
ljmp
push
and
mov
sbb
and
and
add
iret
lret
aaa
sub
mov
jno
add
cmp
test
push
outsl
inc
aad
insb
push
inc
and
sub
out
add
inc
jg
inc
scas
mov
insl
sbb
sbb
mov
pop
sub
xchg
xchg
rcrb
xor
insb
sub
pop
pop
and
out
aam
push
mov
add
cli
ljmp
add
add
add
pop
sti
or
push
cld
mov
jl
xchg
sbb
aam
dec
dec
gs
std
repnz
in
fs
addps
fcmovnu
int
mov
inc
loop
sub
movsb
xlat
lea
jne
lcall
push
notl
inc
les
shrb
loopne
in
jmp
pop
mov
cld
enter
add
cmp
loopne
test
and
sbb
mov
jmp
test
lds
movsl
imul
mov
leave
cwtl
sub
and
cmp
subl
andl
or
or
add
lcall
ja
aas
push
push
subl
adc
add
push
push
push
icebp
sbb
outsl
jle
or
xor
mov
jle
inc
cmp
mov
repnz
ret
and
or
addr16
popa
pop
xor
sbb
shrl
cmpb
sub
imul
or
out
imul
and
aad
dec
test
add
and
ret
int
nop
cwtl
push
push
lds
jb
test
jmp
sbb
dec
or
shlb
out
and
and
xchg
mov
sbb
xchg
lods
popf
and
mov
mov
ljmp
cmp
xor
add
mov
sub
fnstcw
ret
add
sub
sub
jne
xor
popf
inc
cmpsl
xchg
int
sbb
int
push
push
pop
push
sbbl
cli
idivl
cmp
mov
pop
jl
test
mov
adc
lret
fnstcw
pop
fs
test
sub
add
sbb
pop
and
pop
aam
mov
inc
rcrl
add
and
aaa
aas
push
pop
xor
loope
adc
jbe
xchg
fsub
push
mov
jo
jecxz
lret
and
incl
lret
les
xlat
cmc
imul
dec
pusha
out
daa
loop
push
adc
mov
popa
cltd
add
mull
icebp
dec
out
sti
add
push
cs
dec
shlb
fldt
sbb
data16
sub
lock
add
xchg
adc
lds
jmp
adc
mov
add
add
inc
addr16
sub
imul
push
jp
push
dec
mov
mov
jp
aaa
mov
xor
sbb
sub
xor
jle
and
push
ret
cmpsl
sbb
add
add
out
aas
hlt
inc
xchg
in
xchg
push
mov
dec
jb
dec
loop
cltd
call
sub
outsb
dec
fiadds
xchg
loope
sub
movsl
lds
xor
scas
jo
imul
out
pop
mov
insb
or
cwtl
sub
stc
cltd
icebp
icebp
lret
xor
ja
insb
add
add
adc
dec
push
je
jle
addb
adc
add
fwait
loope
bound
mov
inc
inc
cmp
and
sbb
testl
leave
fisttpll
inc
fildl
sbb
inc
inc
adc
daa
inc
ffree
inc
xor
add
aas
inc
sbb
jg
repnz
add
jae
pop
add
decb
push
mov
int3
jne
cmp
jmp
xchg
fwait
sbb
nop
leave
or
shlb
in
stos
aaa
cmpxchg
adc
insb
imulb
decl
push
pop
ret
insl
or
jecxz
iret
cli
jp
into
and
adc
adc
jle
leave
mov
ds
js
daa
xchg
daa
popf
cltd
push
es
adc
jnp
xor
push
fwait
ret
pop
pop
xchg
mov
sbb
mov
lods
lahf
fbstp
pop
out
rclb
int
push
fisubrl
or
jns,pt
and
add
popf
scas
mov
sbb
lret
and
or
pusha
add
add
mov
out
je
subl
cmp
dec
jecxz
ljmp
ja
hlt
lea
in
nop
inc
mov
je
je
pop
sub
dec
cmp
jo
dec
out
xor
xchg
repz
in
ret
popa
xchg
jl
mov
xor
mov
mov
mov
dec
add
add
movsb
test
cli
sub
lret
pop
dec
xchg
pop
xchg
dec
mov
in
in
lret
cmp
push
pop
lcall
loopne
sbb
mov
in
popf
add
add
pop
inc
mov
popa
dec
mov
pop
rclb
mov
dec
les
or
scas
adc
add
add
orps
clc
outsb
push
xchg
dec
mov
int3
dec
xchg
hlt
mov
ret
jl
xchg
aaa
xor
pop
outsl
leave
jne
pop
or
inc
mov
stos
test
inc
stc
add
cmp
int3
xchg
push
mov
mov
sbb
xchg
jno
loop
mov
or
test
mov
aas
mov
add
cmpsb
ss
fwait
scas
imull
cmp
jnp
jmp
cmpb
aam
mov
xor
repnz
pushl
sbb
jge
jae
mov
mov
dec
mov
adc
lea
jae
or
enter
mov
cld
roll
push
pop
pop
fdivr
xor
roll
add
and
call
jbe
sbb
cmpsb
insl
pop
add
leave
popf
subl
sbb
mov
fst
mov
loop
mov
cmp
popf
adc
mov
xchg
clc
mov
xchg
inc
push
fnop
popf
dec
repz
add
ret
in
outsb
xchg
cmp
loope
xor
test
sub
jns
mov
inc
movsl
cmpsl
cld
sbb
mov
mov
mov
jb
out
and
shl
mov
in
cmpl
sti
mov
imul
clc
dec
movl
pop
dec
imul
sub
or
out
or
add
add
add
add
or
out
rolb
lds
xchg
mov
ds
ret
mov
push
push
pop
jns
push
cmp
js
adc
ss
add
mov
sub
pop
ss
addr16
pop
and
dec
push
scas
popa
add
add
insb
fbld
xor
jae
cli
cwtl
pop
jo
push
les
mov
adc
pop
pop
jmp
sbb
movsb
push
and
push
mov
push
dec
or
decl
enter
mov
fiadds
or
jg
mov
cmp
mov
jbe
mov
add
pop
mov
sub
gs
push
mov
outsb
pop
out
or
es
std
or
decl
cmp
and
jp
adc
rclb
pop
rorb
roll
hlt
int
out
je
lcall
mov
negl
or
ds
adc
sub
add
add
inc
daa
outsl
mov
test
cmp
or
in
add
dec
xchg
repz
lret
jnp
aad
pop
mov
xlat
hlt
xchg
mov
mov
mov
xchg
in
pop
mov
ret
cmp
push
pop
stos
pop
popf
rcll
aam
push
mov
mov
add
add
movsl
lret
and
addr16
and
dec
add
je
aam
arpl
lds
or
sub
movsl
int
lcall
hlt
dec
idivb
xorb
or
pop
jae
sti
in
clc
mov
push
loopw
sbb
lret
leavew
fldcw
or
jle
jno
cmp
add
mov
push
lea
xchg
xchg
push
int3
in
cli
loope
cs
test
jo
iret
js
sbb
xchg
jno
jns
iret
xor
adc
mov
sahf
fnstcw
pop
shlb
or
mov
mov
sahf
mov
and
inc
ret
mov
scas
imul
jg
fs
insl
popa
pop
mov
add
nop
je
jne
lret
dec
aaa
in
inc
cli
in
inc
mov
sahf
out
xor
out
add
stc
sbb
popa
in
sbb
mov
std
or
decb
cmp
rol
pop
cmc
add
fldl
sub
push
insl
mov
aam
push
mov
push
pop
mov
or
cltd
and
cwtl
arpl
imul
sub
push
jle
cltd
sub
into
add
sub
mov
xor
test
pop
jne
and
inc
icebp
xor
fldl
and
pop
jecxz
sub
jns
insb
ja
xor
add
dec
sbb
pop
subb
push
ret
pop
cld
pop
repnz
inc
mov
xchg
popf
iret
jne
ds
insb
jl
mov
and
ds
dec
adc
sarl
mov
pop
pop
cmp
jbe
imul
repz
add
dec
addb
and
stc
sub
mov
lret
roll
add
loope
push
and
cmp
lahf
jb
push
xchg
shlb
popa
adc
pusha
or
insl
fwait
js
pop
pop
adc
pop
lods
adc
lds
movsl
sub
loop
andnps
aas
and
lcall
notb
std
mov
pop
xchg
push
int3
mov
sbb
ret
imul
fildl
add
fsubp
or
add
lea
iret
mov
cli
int
inc
add
add
hlt
mov
fbld
cmp
xor
push
add
loop
pop
addr16
gs
scas
add
and
lock
cmp
xor
xchg
mov
push
ret
add
xor
add
add
and
and
adc
push
pop
repnz
hlt
jl
stos
addr16
sarb
sbb
add
loopne
repnz
pop
xchg
insb
data16
and
adc
push
repz
add
mov
jl
add
test
push
xor
fsts
movsl
xor
insb
add
add
rolb
pop
mov
scas
xchg
insl
inc
xchg
push
loopne
sub
cmpsl
push
mov
enter
pop
sub
add
sbb
cmc
es
cmp
mov
ljmp
jbe
dec
out
inc
je
sbb
mov
mov
inc
add
add
cmp
mov
pop
sbb
mov
pusha
jg
roll
das
xor
test
jne
pop
loope
jno
test
push
mov
negl
cmp
jae
test
ds
jnp
push
mov
dec
imul
cpuid
mov
addr16
stos
data16
sub
add
dec
aas
sets
mov
push
jle
test
sbb
add
jne
daa
dec
or
cld
out
movb
mov
and
jg
mov
pop
hlt
add
data16
in
push
jae
jmp
ds
scas
push
fwait
pop
mov
dec
test
scas
xchg
iret
sub
out
imul
pop
cmp
push
inc
das
pushf
ret
repnz
pop
adc
add
add
add
sbb
addr16
orb
cltd
ret
movsb
push
dec
lea
jmp
push
stos
cwtl
std
mov
hlt
push
addl
js
pop
shrb
js
shlb
mov
xor
cmp
lahf
xor
cs
mov
dec
fld
aam
jge
aaa
mov
xchg
cmpsb
inc
jl
xor
add
sarl
adc
dec
test
scas
dec
dec
in
mov
mov
xchg
fs
dec
lret
adc
sbb
cli
loope
pusha
jae
sarl
or
inc
mov
dec
mov
cmp
les
scas
jmp
scas
mov
repnz
dec
add
into
add
add
orl
inc
lods
pop
aaa
inc
fsubrp
fcomps
cs
flds
sti
mov
xchg
jae
ret
sub
mov
inc
and
cmp
shl
cltd
test
stos
adc
dec
push
je
xchg
mov
adc
mov
inc
imul
je
sti
xor
fwait
push
xchg
and
add
bnd
add
and
addr16
inc
cs
test
test
in
push
dec
mov
and
call
lret
xor
push
mov
and
aad
mov
mov
bound
icebp
push
mov
adc
push
std
push
aad
mov
cld
lcall
jno
testl
add
add
add
sub
stos
mov
inc
lock
xchg
jbe
adc
adc
nop
pushf
pop
dec
dec
cmp
push
test
add
pusha
sahf
adc
js
fldcw
es
sbb
sub
icebp
aad
js
mov
cmpsb
negl
arpl
imul
pop
adc
or
pop
incb
add
bound
cwtl
mov
add
push
xor
sub
inc
inc
scas
jno
sub
fidivrs
popa
pop
xorl
add
jle
les
stos
mov
stc
and
mov
insl
mov
push
mov
jmp
out
dec
ret
mov
jmp
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
in
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
xor
loope
add
fisubrl
push
jecxz
sub
loopne
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jae
add
jae
add
xorb
xorb
add
add
push
xor
add
add
inc
xor
add
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
mov
add
mov
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
jmp
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
sbb
xor
add
xor
ljmp
add
xor
add
xor
add
xor
fidivl
addl
xor
add
xor
add
xor
fidivl
xchg
add
xor
add
xor
add
xor
fidivl
push
add
xor
add
xor
add
xor
fidivl
das
add
xor
add
xor
fidivl
fidivl
xchg
xor
add
xor
fidivl
add
fisubrs
add
fisubrs
add
loope
add
sub
mul
sub
outsl
out
add
out
add
loope
add
sub
xchg
add
loope
add
loope
add
loope
add
sub
xchg
loope
add
out
add
fisubrs
add
fisubrs
add
loope
add
loope
add
sub
sub
sub
test
sub
enter
dec
loope
add
fisubrs
add
lcall
add
xor
add
or
cli
xor
add
or
stos
das
or
add
add
xor
add
or
repnz
or
inc
das
or
add
or
xor
or
mov
or
bound
or
loop
or
inc
das
or
ret
add
or
repnz
or
ret
add
or
mov
or
adc
add
das
or
xchg
add
xor
or
es
add
loop
add
add
add
jl
or
add
or
cmp
or
les
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
jbe
or
testb
loop
add
loop
cmp
xor
add
jmp
mov
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
pop
add
xor
add
xor
add
xor
jmp
bound
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
add
xor
jmp
push
add
xor
ret
xor
add
xor
add
xor
add
xor
push
out
add
sub
inc
out
add
sub
mov
sub
mov
sub
ret
add
loopne
add
out
add
loope
add
loope
add
loopne
add
sub
push
loope
add
loope
add
loopne
add
add
out
add
sub
scas
loope
add
out
add
loope
add
loope
add
loopne
add
sub
inc
loope
add
sub
inc
loope
add
loope
add
loopne
add
or
or
or
or
cmp
or
sub
or
or
or
or
or
jl
or
insb
xor
add
add
add
xor
int3
xor
add
or
sbb
or
or
or
je
or
je
or
les
or
mov
or
xchg
xor
add
add
or
aam
or
adc
or
adc
or
movsb
xor
add
xor
add
or
loop
add
loop
add
or
jbe
or
incb
or
out
or
add
loop
add
loop
add
or
xchg
or
xchg
add
loop
add
loop
add
or
jbe
or
incb
or
out
or
inc
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
fnsave
inc
add
xor
add
xor
in
in
add
xor
add
xor
in
std
add
xor
add
xor
add
xor
ljmp
add
xor
add
xor
add
xor
fidivl
jmp
add
xor
add
xor
add
xor
add
xor
add
add
out
in
fbstp
in
add
xor
add
xor
add
xor
jecxz
sub
shl
sub
out
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
cs
insl
sub
push
out
sub
loope
sub
loope
sub
lock
sub
lock
or
cmp
or
sub
or
xor
or
pop
or
add
or
pop
or
adc
or
pop
or
lcall
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
add
add
pop
or
mov
or
scas
pop
or
mov
or
jge
or
push
insl
pop
or
push
cmp
pop
or
push
dec
pop
or
or
aam
cmc
or
in
cmc
or
aam
adc
in
inc
adc
in
adc
fnsave
sldt
add
pop
adc
in
inc
adc
in
adc
fnsave
pmullw
paddsw
pmulhw
paddusw
pmullw
paddsw
pmulhw
paddusw
pmullw
paddsw
pmulhw
adc
push
adc
adc
jl
adc
hlt
jns
push
in
xor
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
add
cli
cmp
sbb
cmp
sbb
aaa
rcrb
aaa
add
repz
enter
clc
ss
clc
rcrl
call
add
fdivs
repnz
leave
xor
loop
stc
xor
rcrb
jmp
xor
add
fnstenv
in
pop
xor
pop
xor
pop
add
add
xor
aad
xor
int
xor
add
aad
sbb
int
sbb
lds
in
xor
xor
aad
xor
int
xor
add
aad
sbb
int3
xor
in
sub
sbb
int3
in
sbb
cld
aam
sbb
in
les
sbb
aam
add
in
sub
sbb
cld
aam
sbb
in
ss
add
or
push
or
inc
inc
or
es
or
push
inc
and
movntps
adc
and
adc
and
adc
and
adc
adc
sub
adc
clc
and
adc
and
adc
daa
adc
out
daa
adc
mov
daa
adc
scas
es
scas
es
adc
lods
sub
push
lods
sub
push
mov
sub
push
lods
sub
pop
lods
sub
pop
jl
pop
pop
insb
sub
pop
loop
sbb
lret
sbb
push
sbb
cli
push
sbb
ljmp
sbb
xor
fidivl
sbb
lret
sbb
inc
sbb
sti
push
sbb
sti
push
sbb
jmp
sbb
jmp
sbb
add
add
xor
sbb
inc
sbb
enter
clc
push
sbb
clc
push
sbb
call
popa
sbb
fdivs
sbb
fdivs
sbb
enter
leave
inc
sbb
stc
push
sbb
stc
push
sbb
jmp
bound
sbb
xor
sbb
sub
sbb
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
out
loop
loope
loop
jecxz
loop
cmc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
loop
dec
add
xor
add
xor
jmp
loope
add
loope
add
add
add
xor
jmp
xor
ljmp
add
loope
add
loope
add
loope
add
loope
add
out
add
loope
add
loope
add
loope
add
xor
sub
xor
jmp
loope
add
jecxz
add
loop
add
fnsave
add
out
add
fnstenv
add
in
xor
jmp
leave
xor
jmp
add
add
add
add
xor
jmp
mov
jnp
ljmp
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
add
inc
xor
add
or
add
or
adc
or
add
xor
add
xor
add
xor
add
xor
add
add
sub
mov
add
das
add
mov
das
adc
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
inc
add
insb
add
loop
add
push
add
loop
add
loop
add
pop
add
loop
add
add
add
add
add
push
add
loop
add
fadds
shl
add
jecxz
add
add
pop
or
out
adc
ljmp
add
add
loop
stc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
jmp
xor
add
xor
add
xor
xchg
mov
xor
add
xor
xchg
mov
xor
xchg
mov
xor
xchg
mov
xor
add
xor
popa
loope
add
lock
loope
add
lock
in
loope
add
lock
sub
add
cmp
sbb
jmp
push
lock
xor
int
lock
xor
mov
lock
cmp
lds
jmp
loope
add
loope
add
loope
add
loope
add
push
lock
push
lock
jae
call
mov
add
inc
add
sub
add
inc
add
add
xor
and
das
mov
xor
jmp
inc
add
mov
add
mov
add
sub
add
mov
add
str
inc
add
mov
add
add
add
repz
adc
add
add
mov
adc
inc
mov
add
loop
popl
ljmp
loop
add
loop
mov
adc
or
add
and
pop
loop
popl
lret
loop
nop
inc
loop
add
loop
popl
test
or
xchg
popl
xor
loop
popl
jecxz
adc
add
add
push
add
loop
popl
js
or
dec
popl
aad
adc
inc
xchg
inc
loop
add
loop
xchg
inc
loop
mov
xor
add
xor
add
xor
add
xor
and
push
add
xor
and
cmpsl
add
xor
and
xchg
add
xor
and
fadds
fidivs
popa
xchg
and
outsb
add
add
sbb
test
add
xor
mov
xor
mov
xor
mov
xor
add
xor
add
xor
shl
adc
mov
icebp
lcall
xor
adc
ljmp
jno
call
fisubrs
xchg
push
lock
sub
popf
push
lock
loope
add
add
add
add
add
jmp
fisubrs
add
lock
fimuls
add
lock
sub
popa
push
lock
loope
add
lock
loope
add
jno
jmp
loope
add
push
lock
loope
add
loope
add
loope
add
jno
call
add
mov
pop
add
mov
adc
ret
scas
inc
lds
push
add
xor
add
xor
add
scas
inc
add
pop
add
scas
inc
add
sub
add
scas
inc
add
lods
inc
add
adc
fldt
pop
add
xor
push
lods
inc
add
xor
add
inc
add
lods
inc
add
sub
add
stos
inc
add
adc
add
add
inc
test
pop
add
loop
xchg
popa
add
loop
xchg
std
add
xchg
test
mov
adc
lods
test
roll
push
loop
test
mov
xchg
test
or
or
add
loop
test
cmp
loop
test
cmpsb
add
loop
test
lcall
loop
add
loop
test
add
loop
add
std
test
jnp
add
add
and
in
add
add
xor
xchg
xor
xchg
xor
add
xor
and
mov
andl
xor
add
xor
and
aam
loopne
add
add
xor
add
add
out
adc
add
xor
add
xor
andl
xor
call
xor
fsubp
cmp
aad
icebp
jns
xor
ljmp
out
add
out
add
jne
jmp
sub
std
lock
cmp
leave
push
icebp
fsub
cmp
mov
icebp
jmp
add
add
add
loope
add
loope
add
icebp
incl
pop
add
lock
aaa
add
in
inc
loope
add
loope
add
jne
or
jg
aas
add
sub
aas
add
add
das
sarl
cltd
sub
aas
add
add
daa
sarl
add
add
sarl
mov
aas
add
xor
aas
add
mov
add
add
xor
add
aas
add
mov
add
pop
mov
add
inc
mov
add
or
add
loop
jge
loop
add
loop
jge
loop
add
add
add
sarl
mov
pop
loop
jl
loop
add
loop
jl
loop
add
loop
jl
loop
add
xchg
jl
loop
add
loop
jge
loop
add
loop
jge
loop
add
loop
jl
loop
add
loop
jge
loop
add
loop
jge
loop
add
loop
jge
loop
add
loop
jge
loop
add
loop
jge
add
add
xor
jmp
xor
jge
xor
fdivl
lea
xor
xor
add
xor
add
xor
mov
xor
add
xor
add
xor
jp
xor
fidivs
and
xor
fidivs
sub
xor
add
xor
jns
xor
add
add
fnsave
aad
and
xchg
add
xor
add
xor
jns
xor
mul
xor
aad
lock
lret
lock
fidivs
in
lock
fisubrs
add
lock
lahf
lock
lock
cli
loope
add
loope
add
lock
fisubrs
add
loope
add
add
dec
icebp
cmp
xor
cmp
icebp
incl
push
add
cs
pushl
pop
icebp
mov
psllw
inc
loope
add
lock
ljmp
add
aas
add
mov
or
cmpsl
mov
or
add
push
add
xor
add
xor
add
aas
or
mov
adc
ja
aas
add
xor
addr16
or
and
or
add
adc
mov
aas
add
mov
push
add
jns
adc
lods
test
xchg
add
loop
test
movsb
add
loop
test
adc
loop
test
push
add
add
add
cltd
test
loopne
adc
loop
add
leave
test
faddl
pop
loop
test
cli
add
loop
test
clc
add
loop
test
and
and
test
pop
add
loop
test
addl
loop
test
jg
add
lea
pop
loop
test
xor
add
xor
and
jge
fidivs
insl
test
add
and
push
add
xor
and
js
call
xor
xchg
xor
test
xor
test
xor
xchg
xor
add
xor
xchg
xor
add
xor
xchg
xor
add
xor
add
xor
and
lds
add
fnstenv
xor
mov
and
dec
arpl
ljmp
and
cmp
and
pushl
xor
sub
pushl
push
add
out
add
vcvtpd2dqx
add
icebp
pushl
vcvtpd2dqx
add
vcvtpd2dq
xor
decl
and
pop
sub
dec
add
add
jmp
lock
and
push
loope
add
lock
pushl
or
iret
mov
add
mov
add
add
jnp
add
mov
add
jnp
add
jnp
add
dec
sub
add
cmp
add
dec
adc
and
daa
cmp
add
add
sbb
xor
add
aaa
add
add
sub
add
push
popa
arpl
gs
pop
imul
cmp
jne
inc
dec
jns
mov
jmp
fisubs
loop
imul
cli
bnd
out
jne
adc
jns
adc
add
loop
add
loop
add
loop
add
loop
add
add
add
dec
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
push
gs
jle
pop
aaa
jbe
push
aaa
outsb
push
inc
aaa
pop
push
xor
aaa
inc
push
sbb
xor
out
icebp
cli
add
push
push
call
aaa
push
push
fnsave
add
cmp
ss
add
add
ss
mov
daa
inc
cmp
pushl
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
sti
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
xor
add
add
cmp
add
cmp
add
dec
xor
dec
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
loop
add
add
add
dec
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
fs
or
or
dec
ret
pop
adc
data16
aad
push
cmp
jg
jo
repz
idiv
xchg
mov
je
cmp
inc
aad
xor
test
pop
push
mov
dec
insb
mov
add
add
add
add
mov
lea
and
in
fiadds
aad
pop
hlt
das
aas
adcl
mov
out
xchg
cwtl
jbe
lret
ja
and
xor
adc
or
mov
xchg
dec
inc
in
enter
movsl
pcmpeqw
in
jae
jne
xor
sbb
add
add
add
add
icebp
call
xor
rcl
jae
jae
test
jne
cwtl
xchg
test
test
jge
mov
cmp
ret
cld
and
jo
pop
std
out
sbb
xor
xchg
call
out
and
jae
or
pop
and
pusha
pop
cld
inc
enter
push
repnz
pusha
push
xchg
inc
jle
add
add
pop
je
ret
xor
jno
jns
fists
dec
test
xchg
push
sub
fsubl
push
bound
movsb
jo
pop
call
adc
aam
push
xchg
pop
iret
or
idiv
add
mov
mov
test
sahf
into
mov
cmp
add
or
inc
inc
aam
add
add
mov
lock
inc
ljmp
cmp
adc
pop
add
mov
cwtl
lea
mov
repz
insb
add
pop
sti
lret
sub
or
cltd
addb
xchg
cmp
adc
loopne
fstl
bound
sti
mov
add
add
add
add
add
test
int
stos
sbb
sbb
psubd
clc
repnz
lock
jo
test
mov
push
jl
sub
push
dec
and
out
stos
mov
pop
xchg
in
mov
orb
push
stos
in
sahf
push
xchg
addr16
dec
xor
ljmp
lods
add
add
jl
mov
mov
sbb
mov
scas
adcl
sahf
fidivrl
mov
mov
mov
xor
in
rclb
cmp
loop
int
test
sub
jns
jo
cli
shll
cs
ljmp
mov
dec
pushf
xor
dec
lods
xor
dec
mov
mov
add
add
add
add
fstpt
push
xchg
vminsd
cltd
jns
push
dec
jb,pt
scas
test
mov
xor
dec
les
dec
int3
xor
dec
add
add
or
shrb
mov
mov
mov
enter
mov
fisttps
push
dec
xchg
cmp
dec
cmp
or
addb
mov
add
loop
cmpsb
xchg
mov
lea
mov
mov
mov
add
push
imull
shrl
sub
push
addr16
push
mov
xlat
fcmovb
mov
sbb
xchg
sbb
or
adc
movsb
daa
repnz
jl
sti
cltd
insl
xchg
and
vpmulhuw
mov
add
mov
mov
sbb
enter
mov
xor
fcoml
sub
mov
dec
jae,pt
push
dec
push
and
mov
xor
and
insl
cmpsb
push
mov
outsb
push
push
shlb
ja
sbb
aaa
dec
out
shl
mov
out
jnp
movsb
and
adc
add
inc
popa
push
adc
pusha
in
aad
fwait
adc
bound
iret
xchg
jnp
jbe
outsl
outsb
aas
dec
dec
ficomps
repz
nop
xchg
imul
mov
loop
ds
rorl
xor
aaa
xor
mov
xchg
or
fwait
xchg
sbb
idivb
dec
jp
push
mov
add
xchg
cmp
stc
insb
cmp
add
call
sti
cmp
fdivs
movsl
shl
movsb
stos
dec
inc
mov
mov
push
push
cmc
out
jo
mov
sarb
and
add
xor
jb
lods
popf
aas
orl
popa
add
and
cmp
xor
cmp
xor
inc
and
inc
sahf
fwait
add
add
stos
dec
clc
icebp
or
jno
int3
sbb
lock
loope
js
fmuls
sub
cmp
jmp
sbb
and
inc
jg
adc
cmp
out
and
es
ljmp
jae
pop
inc
stos
aas
lret
pop
add
sbb
dec
xor
outsl
adc
mov
jmp
inc
cmp
jecxz
loop
mov
add
add
add
add
mov
fistl
aas
ret
and
pop
test
push
adc
ss
jl
xor
inc
inc
int3
sti
cmpsl
xchg
inc
inc
inc
push
fwait
mov
nop
ja
add
rol
outsl
sbb
hlt
sbb
loop
arpl
loop
add
loop
mov
push
js
cmp
ret
adc
std
jg
add
add
xor
push
adc
ss
cmp
inc
push
adc
push
jbe
arpl
in
sbb
push
cmpsl
jl
adc
fisttpll
loopne
enter
fs
bound
insl
fs
mov
out
loopne
je
enter
inc
dec
es
dec
mov
orl
adc
jb
mov
xchg
and
or
mov
in
pop
ja
jne
sar
movsl
repz
jae
inc
mov
xor
jmp
loope
add
loopne
add
loopne
add
insb
sub
or
in
psubw
adc
cmp
pop
loope
dec
sbb
xor
pop
leave
add
daa
adc
add
stc
pop
sub
icebp
bound
adc
jmp
data16
test
or
addr16
clc
cwtl
imul
mov
ja
arpl
jns
pop
fistps
adc
addr16
adc
imul
cld
jo
aaa
add
and
jnp
pop
jge
or
xchg
mov
mov
add
iret
mov
fistpl
xchg
xchg
ret
mov
sahf
lahf
stos
lret
mov
cmpsl
push
aam
stos
outsl
fsubrs
mov
shlb
jg
mov
ret
outsl
mov
jae
lret
vmread
iret
loop
xor
lods
dec
cmp
ficoms
sub
mov
repz
add
add
sti
dec
testb
push
jne
add
loope
add
fstpl
or
jmp
daa
hlt
adc
sbb
adc
flds
clc
sbb
add
pop
es
aas
sub
lds
xor
cmp
ss
sbb
ds
jecxz
sub
xchg
in
dec
cwtl
call
add
add
xchg
rorb
sbb
pop
test
rcrb
xor
sub
daa
je
mov
xorb
sbb
imul
push
mov
jae
shlb
pusha
jnp
enter
les
adc
lahf
jl
nop
stos
dec
fmuls
push
loopne
popl
add
dec
faddl
xchg
xor
ljmp
mov
ljmp
sbb
call
xor
stc
push
fistpl
inc
pavgw
or
jmp
cld
adc
fnstenv
pop
repz
sbb
rcrl
sti
mov
xlat
xor
call
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
or
add
or
add
sti
add
sti
incl
lret
add
lret
add
mov
add
lret
add
lret
add
mov
add
test
pop
mov
add
jnp
add
jnp
add
mov
add
add
jnp
add
dec
add
jne
incl
cmp
add
cmp
add
dec
add
dec
add
cmp
add
cmp
incl
test
xchg
pop
add
loop
add
loop
add
loop
add
loop
add
loop
push
fisttpll
call
inc
push
decl
add
loop
add
loop
add
loop
add
add
add
pop
add
loop
push
lcall
add
or
pop
add
loop
add
loop
add
loop
add
loop
push
add
add
pop
sbb
add
pop
add
loop
add
loop
add
loop
add
loop
push
jmp
xor
add
xor
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
loop
imul
cmp
out
fnstcw
add
mov
in
lret
cmp
in
sti
inc
sti
cmc
repz
sti
cmc
repz
sti
cmc
repz
sti
cmc
roll
cmc
shll
add
aaa
cmp
roll
add
sti
cmovb
sti
pop
inc
adc
cmovb
sti
testl
imul
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
lds
jbe
jae
mov
inc
inc
or
mov
xor
roll
pop
cli
sub
dec
add
sub
add
add
pmulhw
sahf
xchg
dec
push
sbb
sbbl
test
mov
mov
into
in
loop
hlt
orb
cmp
push
lret
sub
ja
push
stc
pop
jnp
pop
cmp
jno
push
or
jns
jle
cltd
mov
push
pop
pop
fildll
call
add
jnp
and
js
pop
inc
ss
jno
mov
and
ljmp
aas
punpckhwd
bound
pop
sbb
std
cmp
push
insb
lds
rcrb
ret
fildl
xchg
cmp
ficoml
js
push
ljmp
dec
cld
sbb
outsb
push
popf
add
add
cli
call
inc
mov
fcomps
xchg
push
test
cmp
enter
push
enter
or
add
xor
loop
int3
add
xor
add
xor
std
lea
add
xor
add
xor
std
jne
or
loop
mov
imul
xor
fwait
out
add
xor
int3
loope
add
add
add
add
add
xor
imul
xor
jge
xor
mov
sbb
or
loope
add
loope
add
jnp
add
loope
add
dec
jb
or
xor
call
test
xor
xchg
loope
add
pop
add
loope
add
out
add
pop
add
loope
add
loope
add
das
add
xor
add
out
out
add
add
aas
das
add
dec
add
dec
add
cmp
add
cmp
add
or
add
or
add
cli
xor
add
xor
add
xor
add
xor
stc
xor
add
xor
add
xor
mov
xor
add
xor
add
xor
add
add
mov
xor
push
mov
add
js
add
js
add
loope
push
add
or
loope
push
add
or
add
or
add
loopne
add
sbb
add
loop
dec
inc
loop
add
loop
inc
inc
loop
add
loop
dec
inc
loop
add
loop
dec
inc
loop
add
loop
dec
inc
loop
add
loop
dec
inc
add
add
aaa
add
loop
dec
inc
loop
add
loop
dec
inc
loop
add
loop
dec
inc
loop
add
loop
dec
inc
loop
add
loop
dec
inc
loop
mov
dec
and
mov
add
xor
add
xor
add
xor
loop
mov
add
xor
add
xor
loop
and
mov
xor
add
xor
mov
xor
add
loop
repz
fidivs
dec
add
xor
and
inc
add
xor
or
push
add
xor
inc
fidivs
inc
out
add
loope
add
loope
add
sti
add
jb
jl
push
add
add
loope
add
out
add
xchg
add
ja
push
loope
add
lcall
loope
add
loope
add
loope
add
loope
add
pop
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
addb
add
add
xor
lock
fnsave
bound
add
add
xor
add
xor
add
xor
add
xor
add
adc
pop
xor
xor
push
xor
arpl
pop
add
outsl
add
xor
jl
flds
push
add
and
bound
push
add
xor
pop
sub
add
and
add
add
inc
sub
add
jnp
xor
jecxz
add
and
aas
add
insb
jecxz
add
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
test
add
insb
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
pop
add
pop
add
jecxz
add
roll
adc
add
jecxz
add
jecxz
add
lods
add
xchg
add
inc
add
jecxz
add
jecxz
xor
add
xor
add
xor
add
xor
add
das
and
adc
adc
cli
das
lsl
das
leave
add
das
movb
das
lds
aad
mov
add
mov
add
das
movsb
add
das
lahf
add
das
pop
in
push
dec
jmp
pusha
dec
jmp
pusha
dec
jmp
pusha
inc
decl
pusha
push
pop
xchg
inc
pusha
cmp
ds
xchg
incl
add
lds
xor
out
das
pop
lods
sbb
pop
movsl
shrb
cmp
into
das
cmp
test
das
lahf
loop
das
xchg
loop
das
xchg
loop
das
nop
add
add
loope
and
das
and
das
jne
fldt
insb
loop
das
loopw
das
pop
loop
das
test
loop
das
stos
loop
das
stos
loop
das
lods
loop
das
movsb
loop
das
das
loop
das
es
das
and
in
and
loop
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fidivs
jmp
fbstp
ljmp
stc
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
adc
xor
adc
xor
adc
xor
out
xor
repnz
adc
push
nop
adc
push
movsb
adc
push
dec
adc
push
cmp
and
cmp
and
iret
adc
push
mov
inc
and
in
daa
add
add
pusha
sub
dec
sub
dec
sub
pop
sub
inc
sub
dec
sub
in
das
fdivrl
xor
xor
xor
rorl
xor
fmull
xor
or
in
or
or
in
or
fsub
or
test
inc
fsubl
or
stos
or
or
test
add
mov
or
xor
stos
sub
cwtl
sub
cltd
sub
or
sub
sbb
inc
or
sub
or
sub
or
sub
adc
dec
or
sub
dec
or
sub
mov
or
sub
orl
sub
or
sub
or
add
jae
jg
pushf
sub
or
dec
pop
or
sub
or
sub
or
sub
or
sub
cmp
sub
jmp
add
jmp
add
fldt
add
add
jmp
add
jmp
add
fstpt
je
mov
add
jmp
add
fstpt
sub
inc
add
jmp
add
jmp
add
fildl
fildl
daa
add
add
je
scas
call
jne
mov
call
dec
add
fmuls
movsb
fmuls
call
dec
add
fmuls
mov
call
cmp
ja
inc
add
cmp
push
cmp
add
cmp
add
cmp
cmp
adc
aaa
add
cmp
out
cmp
out
cmp
in
cmp
add
add
dec
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
jge
sbb
add
cmp
add
test
das
out
or
fimuls
or
fimuls
push
fisubrs
adc
add
out
or
pusha
or
out
or
fidivs
sub
dec
or
out
or
ficoms
sub
js
xchg
jns
mov
jp
mov
jnp
mov
je
stos
loope
or
mov
push
loope
push
test
mov
adc
loope
pop
lods
loope
pop
scas
loope
pop
scas
loope
pop
pop
sbb
push
pop
add
add
pop
pop
xor
daa
xor
sbb
inc
pop
push
xor
pop
sub
test
push
xor
pop
push
xor
pop
push
xor
pop
outsl
xor
pop
je
es
insl
xor
pop
pop
xor
pop
pop
xor
pop
dec
xor
pop
dec
xor
pop
ja
aaa
pop
insb
xor
pop
xor
pop
inc
xor
pop
inc
xor
push
xor
add
add
add
add
xor
push
jp
add
fdivrl
add
in
add
movb
fadd
add
fadd
add
lret
fmul
add
int3
add
int
push
in
add
lret
add
in
add
fdiv
add
in
add
fsubr
add
add
add
cmc
add
out
add
fcomip
add
out
add
add
cmp
mov
xor
add
and
pop
cmp
mov
and
cmp
and
cmp
and
cmp
and
lods
and
and
pusha
and
and
and
add
sti
cmp
and
cmp
and
cmp
pop
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
aaa
sub
loop
or
add
or
add
or
add
or
add
or
add
and
mov
add
mov
or
mov
or
mov
jno
or
insl
or
pop
pop
or
jnp
or
jne
adc
dec
or
and
mov
shrl
add
push
or
or
and
add
xor
xor
or
loopne
mov
loope
mov
loopne
mov
ficoms
push
add
add
push
mov
fstl
push
ficoml
push
fistl
push
call
push
inc
push
icebp
push
push
push
rcll
push
inc
push
mov
dec
cwtl
push
mov
push
aaa
push
lcall
push
jl
sub
push
sbb
push
sbb
push
out
bound
rclb
push
lret
dec
push
push
les
dec
push
mov
push
and
sub
add
in
and
fsubrl
mov
dec
and
out
and
ffreep
and
xlat
cmc
and
out
fldenv
out
and
xlat
sub
mov
out
and
xlat
cmp
daa
xchg
out
and
fcomip
and
xlat
ret
out
mull
out
and
fisttps
and
dec
out
aad
dec
out
and
add
add
lds
xlat
cs
out
push
and
out
and
ffreep
and
repnz
sbb
loopne
push
outsl
xor
es
cmp
and
sub
and
mov
and
js
adc
ja
pop
daa
jbe
outsl
es
aaa
insl
es
inc
es
inc
es
push
es
aaa
adc
and
cmp
jle
sbb
add
add
push
and
cmp
gs
sub
jb
daa
and
ss
add
movsl
and
xor
or
lds
or
xchg
sarl
movsb
rclb
mov
pop
or
addl
or
add
or
add
push
rcr
clc
push
shl
sti
push
rcr
mov
add
lods
push
aam
mov
aad
scas
push
fbstp
push
fcomp
mov
mov
fcmovu
bound
jae
insb
pop
fucom
inc
pop
pop
pop
inc
pop
loopne
dec
pop
loope
dec
pop
loop
xor
pop
subl
pop
jl
incb
test
pop
mov
push
jnp
repz
js
mov
jecxz
mov
add
add
mov
loope
test
fidivs
mov
out
xchg
fdivl
mov
in
orl
jmp
push
or
ss
or
ss
or
ss
or
ss
or
cmp
shlb
cwtl
or
ss
or
ss
ss
xlat
ss
int3
add
sbb
push
pusha
jmp
push
arpl
sub
push
add
add
sub
dec
inc
jmp
push
aas
jmp
push
push
test
dec
push
stos
ljmp
movsl
fimull
ljmp
scas
fimull
mov
ljmp
mov
ficoml
ljmp
cmpsb
ficoml
cltd
fiaddl
cmp
inc
push
cmp
ds
cmp
aas
push
xor
add
add
add
add
cmp
add
cmp
push
int3
cmp
push
sarl
cmp
and
cmp
and
cmp
aad
ds
mov
aas
push
jmp
inc
push
ljmp
push
fdivrs
inc
push
das
sub
push
push
sub
push
sbb
sub
push
adc
push
adc
push
and
push
and
push
ja
dec
push
data16
push
imul
push
push
push
add
add
push
push
js
push
push
outsl
sub
sub
cmp
sub
push
loop
pop
pop
aam
pop
pop
in
mov
add
xor
lods
add
xor
shll
aaa
shll
cmp
pop
push
cmp
inc
push
cmp
popf
add
adc
aas
adc
add
xrelease
inc
repz
inc
shll
rcrl
inc
shll
inc
shll
dec
mov
add
dec
mov
add
dec
adc
movsb
add
sbb
xchg
add
adc
add
adc
add
ss
sub
das
inc
daa
add
sub
inc
xor
add
add
inc
and
mov
aas
scas
add
mov
add
aas
fwait
add
aas
lcall
and
cmp
mov
add
mov
add
add
loopne
adc
adc
loopne
adc
loopne
adc
mov
adc
mov
add
mov
adc
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
jecxz
adc
jecxz
adc
jecxz
adc
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
mov
sahf
jecxz
xor
bound
lock
stc
adc
and
add
daa
daa
lods
and
push
add
push
add
js
imul
push
mov
and
mov
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
add
push
xor
add
add
inc
xor
add
inc
add
aas
xor
add
inc
add
ds
sbb
add
xor
add
add
add
add
add
mov
add
out
add
loop
xor
loop
add
loop
das
add
xor
add
mov
add
loop
das
add
add
loop
das
add
xor
add
mov
add
loop
das
add
jmp
add
sahf
das
add
ljmp
loop
add
loop
xor
add
add
sub
xor
loop
add
loop
xor
loop
add
loop
xor
loop
add
loop
adc
loop
ljmp
xor
add
xor
loop
lock
xor
xor
add
xor
loop
flds
loop
jnp
loop
fadds
loop
pop
xor
xor
xor
xor
xor
xor
add
add
loop
jg
loop
les
loop
pop
xor
xor
add
xor
loop
movb
xor
add
xor
loop
or
xor
loop
or
xor
push
int
add
fidivs
add
xor
ja
xor
mov
mov
xor
inc
or
xor
xchg
std
xor
shl
xor
test
add
or
xor
xchg
std
xor
int3
loope
add
loope
add
xor
mov
xor
pop
int
add
mov
xor
cmp
xor
lcall
add
fidivs
add
scas
dec
add
sahf
xor
add
xor
add
add
xchg
dec
add
xor
add
xor
add
xor
add
add
or
add
dec
add
push
dec
add
dec
xor
add
xor
add
dec
add
dec
xor
add
das
add
or
das
add
jl
add
ret
add
shrl
loop
add
add
add
shrb
outsb
add
loop
sub
loop
add
loop
sub
loop
add
loop
sub
loop
add
loop
sub
loop
add
loop
sub
loop
add
loop
sub
add
cmp
add
sbb
add
pop
sub
add
ss
add
cmp
add
loop
sub
loop
add
loop
sub
add
xor
sub
xor
sub
xor
sub
xor
sub
xor
sub
xor
xor
add
xor
add
xor
sub
loop
jmp
loop
sub
loop
call
add
xor
mov
add
popf
cli
jmp
loop
stc
mov
cli
out
loop
jmp
add
xor
add
xor
add
xor
add
xor
jmp
xor
out
xor
mov
ret
jo
pop
ret
jo
add
dec
add
imul
and
and
pop
push
push
dec
xor
loope
add
cmp
dec
dec
or
jne
adcl
add
add
loope
add
iret
stc
stos
push
jge
pop
aaa
and
stos
daa
add
dec
fs
aas
jge
nop
pop
fs
das
jo
test
push
add
ret
outsb
fs
add
cmp
dec
add
xor
add
xor
add
xor
add
pushf
push
jo
add
lret
je
mov
outsl
lret
mov
dec
inc
add
xor
in
xor
jecxz
jb
add
sub
bound
fwait
imul
xor
add
fldt
insb
fwait
gs
data16
loop
fcos
insl
imulb
aas
loop
add
scas
add
mov
bound
add
loop
add
loop
add
loop
add
loop
add
loop
movb
ret
push
mov
dec
mov
push
xchg
cmp
push
lcall
fs
pushf
push
inc
das
mov
push
sti
scas
je
xlat
stos
js
sbb
xor
adc
jmp
cmc
or
add
or
add
mov
mov
push
xor
add
add
add
add
js
lods
clc
dec
int
rorl
aaa
test
mov
fwait
imul
xchg
arpl
loopne
dec
add
int
push
pop
leave
mov
dec
movsl
orl
setns
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
mov
add
rolb
push
xor
int3
loope
add
loope
add
cmp
fidivrs
idiv
popf
idiv
mov
popl
mov
xor
mov
subb
insl
mov
das
and
pop
adcl
daa
and
dec
inc
insb
imul
imul
inc
nop
imul
add
add
imul
cmc
mov
loope
add
outsl
and
scas
inc
sbb
xor
add
inc
and
xor
add
add
mov
add
mov
add
mov
cmp
mov
add
fbstp
insl
add
xor
add
xor
push
xor
add
sub
and
fisubrs
add
sub
add
sub
add
xor
add
sub
add
sahf
aas
add
shlb
out
jno
fistps
addr16
shll
int
je
sar
mov
push
loop
scas
jae
mov
insl
loop
sahf
push
add
xchg
pusha
bnd
mov
pop
ret
push
int
dec
loop
sahf
push
add
add
add
add
lds
fs
lods
mov
add
inc
mov
jae
insb
mov
bound
push
fwait
jns
or
add
dec
mov
jae
and
xchg
jne
lahf
jno
or
add
dec
mov
jne
push
xchg
pusha
inc
xor
iret
inc
pusha
aad
inc
xchg
les
loop
xchg
and
push
mov
add
add
insl
pop
inc
das
rclb
sub
push
mov
roll
sahf
shlb
xor
scas
inc
repz
mov
pop
add
xor
add
xor
stc
out
jmp
neg
and
int3
stos
cmc
repnz
in
repnz
mov
xor
add
add
add
xor
mov
loope
add
loope
add
loope
add
ds
mov
push
repnz
fimuls
mov
loope
add
loope
add
loope
add
xor
je
lea
outsl
jl
test
add
dec
lea
jnp
outsb
pop
ja
outsl
aas
push
lea
sbb
outsl
dec
cmp
add
cmp
cmp
jns
pop
pop
mov
xor
insb
incb
or
out
push
cltd
or
sahf
and
jmp
jbe
mov
and
movsb
mov
lcall
sub
popa
push
and
and
rcrw
test
or
cmp
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
mov
insb
push
mov
es
fs
fiaddl
add
dec
mov
and
mov
aas
fiaddl
add
dec
mov
adc
scas
imul
mov
adc
mov
pop
sub
fiaddl
add
xor
insl
loop
add
add
add
stc
add
loop
add
hlt
add
cld
add
flds
add
testl
add
inc
stos
insl
je
sub
sbb
flds
add
sbb
pop
loop
add
loop
add
and
xor
add
xor
fucomp
enter
mov
adc
xor
add
xor
add
add
push
xor
add
xor
add
rolb
xor
add
xor
and
xchg
add
xor
loop
stos
add
xor
add
xor
add
xor
ret
xor
xor
add
xor
add
xor
xchg
xor
inc
out
add
add
out
add
add
add
add
add
pop
add
out
add
loope
add
loope
add
loope
add
loope
add
out
add
loope
add
loope
add
loope
add
loope
add
test
dec
lods
loope
add
jb
scas
test
fwait
xchg
push
inc
lea
out
movsl
jb
fs
mov
dec
push
imul
add
add
jb
aas
bound
out
pushf
jo
lcall
jb
xchg
jb
scas
shll
ret
out
shll
enter
ret
aad
insl
jb
xchg
jb
mov
dec
jb
xchg
arpl
xor
add
push
mov
mov
jb
cmp
call
jo
push
xchg
bound
incl
add
pop
lds
ja
pop
outsb
pop
popf
arpl
push
xor
add
xor
add
xor
add
cs
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
stc
add
dec
add
loop
add
loop
add
hlt
add
or
add
add
loop
add
cli
add
lds
push
loop
add
mov
add
xchg
add
movb
loop
add
loop
add
push
data16
push
add
xor
xor
xor
xchg
sbb
xor
add
xor
xchg
mov
call
inc
mov
std
inc
mov
sti
loopne
adc
add
add
jmp
mov
jmp
fsubrs
jmp
rcrl
jmp
stos
pop
xor
xchg
jge
rclb
jmp
add
cs
jecxz,pn
fcoms
repz
ss
add
popa
imul
pop
jo
out
add
inc
pop
imul
ja
clc
add
add
cli
adc
xor
push
scas
xchg
sar
adc
xor
ds
add
movsb
movsl
mov
addr16
cli
adc
ljmp
bound
adc
ljmp
movsl
mov
addr16
cli
adc
ljmp
repz
sbb
add
arpl
xor
sahf
test
repz
repnz
adc
add
shll
dec
xchg
xor
add
fdivs
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cmp
sysexit
push
add
xor
gs
xor
add
sub
jb
mov
jbe
mov
sub
add
pop
sub
dec
dec
sub
dec
add
add
movsl
add
lret
loop
add
loop
add
loop
add
inc
add
loop
pop
inc
loop
add
loop
add
loop
stos
pop
ja
scas
insl
test
stos
pop
xchg
test
jno
ss
loop
mov
and
pop
mov
loop
mov
pop
add
add
or
outsl
add
xchg
fs
flds
add
xchg
mov
and
lea
jno
cli
mov
divl
xchg
lahf
adc
mov
push
nop
cmpsl
dec
jmp
mov
xchg
mov
call
pop
stos
xchg
dec
pop
lahf
adcl
cmp
int
aas
nop
jle
pop
mov
add
add
add
add
sbb
loop
and
jb
lret
and
sbb
and
mov
jb
mov
pop
push
mov
test
fs
pop
pop
add
push
arpl
cmp
mov
insb
pop
mov
jge
movsl
sbb
stos
sbb
popf
and
jmp
jnp
popa
jge
push
and
push
jb
add
add
arpl
push
pop
outsb
or
dec
jne
dec
inc
jae
push
dec
and
push
fs
dec
out
xor
jl
and
xchg
jge
xor
dec
and
incb
js
popa
std
js
and
dec
push
jb
bound
sbbl
add
insb
je
cwtl
arpl
mov
and
mov
inc
pop
add
add
sti
inc
pop
mov
dec
push
jle
push
pop
xchg
pushl
xchg
bound
cwtl
xchg
pop
jb
xchg
jb
mov
xchg
arpl
jo
ret
pushf
inc
pop
adc
push
inc
pop
hlt
inc
pop
add
aas
inc
mov
inc
dec
lret
xor
add
cmpsl
push
arpl
mov
test
arpl
jbe
loop
mov
jmp
add
lahf
mov
adc
shlb
loop
movsb
jne
mov
arpl
mov
pusha
mov
xlat
add
loop
mov
lea
lret
inc
mov
adc
dec
mov
add
loop
cmpsb
jne
jnp
arpl
sub
jb
sub
add
and
and
inc
add
add
adc
dec
sbb
xor
movsl
rsqrtps
lods
add
fldenv
xor
lds
jb
int3
and
add
xor
lods
rcll
cmpsb
mov
jmp
mov
andl
mov
jl
add
xor
push
cmp
movsl
add
add
jmp
mov
andl
aaa
jb
lret
and
add
xor
cmpsb
aaa
push
adc
mov
xor
and
pop
and
pop
mov
ja
sarb
popa
mov
inc
jg
or
je
ds
add
pop
jge
lods
sbb
movsb
test
sahf
jge
nop
jg
popa
lea
add
js
and
jb
popa
pop
gs
and
dec
gs
ss
pop
xor
pop
sbb
jo
adc
loop
adc
or
xchg
jle
leave
outsl
dec
jb
mov
add
add
push
inc
dec
testl
inc
in
dec
add
mov
je
add
add
ret
jo
push
ret
jb
push
into
popa
outsl
mov
xchg
insl
outsb
and
popa
insb
pop
shll
ret
stos
xchg
arpl
rcrl
push
xabort
inc
lods
out
dec
inc
mov
sub
add
mov
out
mov
lds
loop
test
jae
out
jb
sub
lcall
add
add
add
adc
mov
fs
in
movsl
jae
repz
loop
mov
adc
lea
movsb
ret
rcll
xchg
jno
mov
cmpsb
fs
mull
pop
mov
cmpsl
ja
mov
jae
stos
loop
mov
or
adc
push
mov
adc
inc
lea
inc
mov
add
and
add
xor
mov
push
push
push
test
inc
dec
or
inc
adc
movsl
cmp
movsl
add
add
test
xor
lds
les
or
into
mov
xor
mov
lret
movsb
leave
dec
mov
dec
lea
cmpsb
jg
lds
add
adc
pushf
dec
inc
mov
mov
lahf
jne
add
and
dec
insb
or
push
imul
movsb
jle
add
push
gs
jbe
arpl
je
insb
int3
jne
add
imul
inc
push
gs
dec
push
and
orb
adcb
jnp
imul
add
add
mov
pop
jle
mov
gs
test
jne
push
and
jle
inc
inc
push
gs
xor
inc
inc
push
and
cwtl
xchg
push
cltd
xchg
popa
imul
pop
imul
movsl
inc
pop
clc
negb
out
xchg
bound
lahf
fs
mov
pop
cwtd
xchg
gs
sahf
nop
jb
cwtl
xchg
push
add
add
mov
xchg
xchg
bound
xor
pop
cwtd
xchg
gs
pop
nop
jb
outsl
mov
pop
jne
mov
push
pop
xchg
imul
pop
xchg
call
movsb
inc
pop
mov
jns
push
sbbl
and
jno
inc
xchg
jae
jno
data16
movsl
imul
movsl
bound
movsb
pusha
add
add
cmpsl
arpl
pop
mov
add
frstor
jae
add
fs
pop
bnd
mov
leave
daa
cmpsb
pusha
lret
fwait
cmpsl
arpl
lahf
mov
movsl
mov
pop
mov
xchg
loopw
lcall
mov
jb
scas
cmpsl
pop
xorb
orb
push
inc
in
dec
inc
mov
add
add
add
add
xor
mov
jl
ret
inc
xchg
push
push
push
test
dec
dec
jmp
cltd
inc
push
or
xor
xor
fcompl
lds
jo
add
xor
and
shll
lcall
outsb
lods
add
xor
lods
inc
fsubrl
mov
push
mov
add
add
xor
stos
pop
jne
mov
loope
add
jno
cmp
cmp
sbb
sbb
addr16
sub
push
cmp
xor
cmp
push
das
imul
and
test
loope
add
xor
movsl
outsb
dec
jmp
imul
add
loope
add
loope
add
jg
add
and
add
push
add
aas
inc
or
add
inc
repnz
inc
repz
ljmp
xchg
jb
lods
mov
insl
js
cli
popa
outsl
sbb
mov
outsb
mov
mov
jb
scas
xchg
insb
cmpsl
mov
call
add
cwtl
xchg
arpl
xchg
insb
arpl
add
xchg
mov
arpl
cwtl
mov
outsb
xor
arpl
xchg
ljmp
insl
jae
lods
add
loop
add
mov
add
push
add
popa
add
addl
movl
gs
add
loop
add
loop
add
add
add
sbb
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
xor
lods
aas
movsl
and
inc
test
data16
xchg
jne
popf
xchg
dec
lret
out
cwtl
dec
icebp
mov
insl
into
xor
nop
lea
repz
les
std
ljmp
fcmove
pop
fcmovnbe
add
add
and
fmul
adc
add
xor
out
sub
fnstsw
and
add
xor
ss
ds
clc
mov
hlt
mov
loop
dec
popa
inc
mov
jnp
push
popf
call
add
ficoms
add
xor
movsb
or
loopne
xor
mov
add
xchg
mov
add
jge
add
mov
mov
xor
or
cld
sub
in
roll
ljmp
mov
clc
int
out
lret
lret
fcom
sti
mov
or
lret
call
shrl
or
add
sar
mov
xchg
and
inc
out
mull
mov
add
add
add
add
add
xchg
repz
cmpsl
add
dec
xchg
cmpl
pop
lea
scas
mov
add
push
insb
repz
inc
jnp
gs
popa
xchg
ja
mov
je
nop
mov
push
outsb
lods
mov
inc
push
add
aas
inc
lret
xor
add
mov
jb
lcall
mov
xor
mov
add
add
andb
enter
in
lret
cs
sub
loop
in
loop
loopne
push
and
iret
sub
test
mov
movl
dec
push
mov
dec
push
insl
mov
cmp
dec
nop
pop
stos
pusha
lods
inc
mov
add
mov
ja
mov
jl
je
pop
cmpsb
bound
add
cmp
push
adc
int3
jo
int3
test
inc
mov
and
dec
int3
out
mov
sbb
xor
xchg
inc
mov
stc
push
ja
cld
mov
sub
sti
xchg
daa
fiaddl
fdivs
iret
add
push
adcb
add
xor
jo
pop
sub
push
loopw
push
inc
and
cmpsl
sub
xor
or
add
fstps
lock
xchg
je
int3
stc
mov
mov
mov
xor
shl
sbb
movb
addr16
pop
xchg
inc
push
jge
addl
xor
fwait
clc
pushf
sub
lock
lds
dec
add
add
or
add
add
cmp
push
pop
rcrb
sbb
sub
out
insl
adc
loope
add
lcall
rclb
mov
sarb
lea
jp
pushf
stos
pop
xor
add
es
fidivl
inc
adc
xlat
add
add
ret
mov
add
adc
hlt
push
push
std
mov
gs
insl
xor
add
push
rol
popf
add
sar
and
rcl
outsl
fmulp
add
ret
add
add
inc
xchg
popf
mov
pushf
mov
nop
xchg
pop
mov
dec
mov
sbbl
aas
scas
mov
push
add
add
add
fdivr
add
ret
stos
fmuls
loop
sti
adc
xor
pop
sub
scas
push
xor
lcall
mov
push
test
xchg
movsl
inc
mov
enter
mov
push
test
jnp
dec
add
insb
popa
mov
dec
dec
mov
adc
test
push
mov
insl
add
loop
fdivl
add
add
repnz
ret
aas
xor
stos
xor
add
push
xchg
test
xchg
push
jl
xchg
loop
sbb
ficoml
jecxz
repnz
inc
rolb
loop
pushf
movsb
incl
loopne
loop
add
xor
dec
test
xchg
push
mov
lcall
pop
mov
mov
mov
jmp
and
add
in
fidivrl
add
fildl
clc
adc
xor
sbb
add
xor
jge
push
ja
ja
ja
loop
jne
xor
insl
sahf
popa
sahf
imul
cli
mov
cmc
into
int3
pushl
lret
loope
add
lcall
xchg
test
mov
test
jnp
ret
add
add
push
dec
mov
loope
add
xchg
mov
mov
mov
jnp
mov
jne
loope
add
mov
jp
xor
and
sbb
sbb
mov
adcl
incl
lcall
das
or
xchg
adc
xchg
add
add
add
ja
add
dec
pop
out
sub
add
test
xor
add
mov
and
xchg
sbbb
xchg
stos
mov
dec
xor
add
jno
test
add
push
inc
dec
imul
ja
jp
mov
insl
fs
push
and
cmp
outsb
pop
push
add
add
sbb
push
add
fadds
add
rcll
add
out
adc
cmp
adc
fcomps
add
rclb
push
out
and
ljmp
xor
adcl
and
xor
and
adc
hlt
in
and
ljmp
adc
jecxz
sbb
loope
pop
loop
mov
cmpl
push
fadds
loop
shrb
outsb
mov
add
test
pand
jmp
and
pop
loop
in
or
add
xor
loop
loop
ljmp
push
loop
leave
rclb
add
xor
pop
call
xor
mov
loop
sbb
and
adc
or
sub
or
add
jmp
xlat
pop
out
or
into
cmp
or
xor
inc
fdivl
inc
xchg
dec
lods
inc
push
add
xor
in
mov
std
cld
int
repz
stc
add
int
in
xchg
mov
xchg
fwait
mov
ror
decb
mov
mov
gs
in
mov
testl
cmp
out
dec
add
add
xchg
call
aad
sub
xor
scas
mov
pop
sub
loope
add
mov
pusha
fs
jmp
xor
in
sub
and
into
jecxz
adc
lock
pop
enter
lret
ljmp
jmp
xchg
shl
rol
jmp
lret
jecxz
xchg
xchg
std
call
add
add
inc
imul
in
inc
add
dec
jae
cli
pop
jbe
jnp
add
inc
rol
fisttps
pop
inc
push
sarl
jnp
add
mov
std
idivb
das
add
or
call
hlt
in
loopne
incb
loopne
call
fsubr
sti
es
out
loop
or
shl
add
add
add
out
sub
cmpsb
sub
cmp
xor
xor
leave
sub
loop
daa
sub
or
add
loop
orl
push
mov
stos
fadds
add
mov
add
loop
dec
push
pop
fadds
add
rcrb
movsb
xlat
add
loop
xor
adc
dec
js
cld
jae
loop
sub
repz
add
add
repnz
insl
scas
xor
daa
aam
and
sbb
mov
xor
or
hlt
aam
hlt
cld
mov
mov
stos
jmp
rol
mov
call
add
xor
rcrb
xor
dec
cltd
call
daa
rorl
add
xor
out
add
add
shlb
leave
out
or
sbb
ljmp
xor
xor
pop
push
lods
mov
sub
int3
ds
in
iret
xor
xor
sub
mov
imul
bound
leave
jp
mov
cwtl
jb
enter
out
frstor
cltd
enter
lods
xchg
pop
bound
add
mov
fs
mov
mov
jmp
push
mov
push
mov
jmp
imull
adc
inc
cmp
add
add
sahf
into
cli
cli
cmp
add
cli
int
mov
xchg
cmpsl
test
mov
add
mov
jecxz
jmp
inc
je
inc
popa
dec
inc
add
add
xor
add
in
xchg
shl
idivb
fidivl
push
int3
imul
addr16
cwtl
pop
mov
lea
lods
cmpsl
movsl
sub
in
add
add
into
pop
inc
push
dec
xor
add
jo
pop
loop
add
loop
jbe
loop
sbbb
pop
orb
int3
jns
into
testl
loop
mov
mov
popa
add
loop
adc
in
punpcklwd
pop
xor
adc
push
push
or
cmp
add
loop
cli
jbe
lahf
lods
mov
shll
nop
decl
outsl
mov
hlt
popf
insl
cmc
xchg
stc
xor
out
push
imul
int3
cmp
add
add
xor
aad
lcall
out
adc
add
xor
xor
jae
add
xor
loop
arpl
repz
lret
sub
pop
cli
and
and
and
mov
call
movsl
pop
mov
mov
incl
in
or
fsubl
add
xor
adc
cld
sti
add
or
or
xor
add
xor
dec
pop
jle
mov
add
rcr
xchg
data16
xchg
cwtl
xchg
out
push
lcall
sub
xchg
sti
mov
xorl
in
add
or
testl
aaa
leave
icebp
lock
cwtl
mov
fadds
rcl
int
xchg
movsl
ficomps
fadd
shl
add
add
stc
ret
stos
insb
mov
test
hlt
mov
add
in
and
loope
add
dec
imul
inc
jge
push
dec
add
cmpsb
jmp
lds
int
fcmovnbe
in
das
add
mov
mov
scas
or
add
lret
movsb
lds
ret
in
or
add
jne
or
add
or
js
sbb
push
je
cmp
adc
pop
sbb
fs
push
addr16
push
add
loop
ds
sbb
cs
push
sbb
data16
sbb
pop
mov
inc
adc
jl
pop
loop
test
xchg
mov
jg
sahf
mov
add
add
add
add
cmpsl
mov
flds
add
pushf
dec
push
lahf
orb
stos
dec
pop
cltd
mov
loop
sub
mov
sub
push
jl
and
sub
sub
pop
arpl
sahf
dec
test
xchg
jb
xchg
xchg
outsl
xchg
push
cmp
or
sbb
inc
or
push
push
jp
inc
or
in
or
add
add
arpl
push
lods
sarb
dec
fwait
push
lock
shll
dec
mov
cmp
add
scas
xor
sti
cli
inc
loop
int
in
sbb
add
pop
rorl
aad
out
push
jmp
jmp
lods
sub
imul
or
daa
fidivs
lock
sub
add
cld
stc
xor
divl
add
add
adc
fwait
ret
push
pusha
mov
arpl
lret
pop
push
mov
add
loop
out
add
xchg
mov
out
mov
push
jo
mov
leave
xchg
enter
clc
mov
dec
add
into
pusha
push
loope
add
mov
add
ud0
mov
adc
add
add
or
sub
clc
xor
push
and
jecxz
push
and
xor
jnp
or
add
or
add
stos
dec
dec
pop
mov
sbb
add
xor
add
dec
arpl
add
cmp
add
xchg
mov
mov
mov
adcb
jle
add
add
mov
jnp
xchg
test
shlb
dec
lods
lea
loop
int3
mov
loop
or
sbb
ficoml
pop
ljmp
jl
and
clc
adc
outsb
gs
imul
push
jbe
jle
pop
fwait
jmp
add
add
loop
add
frstor
adc
out
mov
or
in
push
or
adc
and
out
push
push
xor
sbb
fistps
push
sub
cld
push
sbb
stc
or
add
lret
scas
dec
jns
fildll
cmpsb
test
and
add
and
bound
sbb
sub
xlat
dec
sub
pop
sbb
mov
lret
push
scas
push
stos
push
mov
int3
add
xor
inc
xchg
xchg
jg
add
outsl
cmpsb
dec
jp
cmpsl
or
inc
mov
sub
sub
push
xchg
icebp
pop
rcrl
push
push
scas
xchg
pop
add
add
lcall
xchg
shr
test
ljmp
mov
fwait
jnp
cmc
lods
jo
in
cmp
loope
dec
mov
imulb
mov
arpl
int
dec
and
les
jmp
je
lods
fwait
imul
sub
in
lds
insb
sahf
lret
xor
out
fmuls
lret
inc
popf
mov
add
add
pushf
movsb
sbb
stc
mov
cmpl
mov
scas
lret
fcoms
pushf
add
mov
jbe
mov
cmc
fisttps
mov
dec
jb
outsb
dec
pop
insl
aad
push
outsb
push
dec
data16
sbb
js
xchg
jge
mov
push
push
jne
push
add
add
jg
pop
inc
and
push
inc
addr16
push
pop
pop
push
inc
cmp
repnz
leave
jge
and
loopne
cmp
inc
pusha
pop
sub
and
lret
sti
sbb
jnp
enter
iret
adc
adc
sti
push
loopne
or
fisttps
add
xor
push
pop
aam
fprem1
subl
pop
scas
out
out
movsl
jmp
inc
cmp
jecxz
pop
jo
jmp
iret
and
mov
add
fisubl
pusha
fsubrl
adc
inc
leave
pop
mov
pop
mov
in
cmpsl
jb
aaa
jmp
mov
scas
jp
mov
xchg
add
xor
ret
mov
add
xor
shrl
sti
int
mov
loopne
or
xor
fnstcw
jbe
add
xor
shll
cmpsl
pop
int3
pop
xchg
lea
inc
lods
pop
xor
pop
lea
mov
xor
hlt
loopne
inc
cli
cs
lret
js
cmp
add
dec
push
inc
and
bound
mov
mov
repnz
mov
sti
mov
jecxz
lds
sar
xchg
fidivs
add
test
sbb
es
mov
jge
loope
add
hlt
clc
cmp
scas
jb
jmp
popa
mov
jno
xchg
lea
xorl
add
xchg
cmp
popf
movsb
lea
std
sbb
xor
pop
aaa
outsl
ret
sub
xor
add
push
pop
sbb
sbb
loop
xchg
mov
mov
pop
jle
movsb
dec
test
mov
sub
testl
dec
insb
inc
or
dec
inc
add
sub
push
push
and
add
and
imul
push
sbb
leave
add
loop
sti
call
mov
add
jae
jecxz
sbb
lock
ret
ret
mov
add
lret
ss
sbb
dec
and
aaa
inc
leave
mov
cmp
ljmp
arpl
insb
addr16
add
leave
add
loop
and
add
add
clc
adc
fdivrl
sbb
movsb
adc
or
lret
cli
or
xor
dec
loop
jns
push
stos
dec
test
mov
mov
xchg
xchg
mov
inc
xchg
add
popa
int
fistpl
movsl
insl
mov
das
shll
mov
rcll
loop
shll
add
aad
lret
js
mov
lods
fcoml
add
xor
push
xchg
call
add
sub
out
cld
loope
in
ficompl
repz
sbb
test
sbb
je
loope
add
mov
dec
cmpsl
movsl
arpl
loopne
sbb
or
xor
adc
test
push
or
add
xor
in
aam
push
mov
xor
popa
ret
lock
lret
pop
aad
and
adc
cli
sub
aaa
or
out
cld
and
add
sub
mov
jae
sbb
aas
cmp
cmp
int
push
cmc
imul
sub
dec
xor
add
push
ds
mov
xchg
cmp
add
scas
cmp
mov
jb
cmc
mov
into
mov
jge
cmpsl
fsubs
dec
outsb
pop
out
cld
call
mov
dec
call
in
xchg
cs
fwait
xor
std
add
push
gs
enter
mov
push
add
test
mov
mov
push
push
pushf
adc
add
add
sub
mov
and
xchg
leave
add
loop
mov
xchg
and
cmp
fwait
mov
add
cmp
movsl
add
loop
iret
adc
test
stos
sti
icebp
leave
sahf
pop
test
xchg
pop
jl
cmp
lahf
fcomps
out
jne
jecxz
out
movsb
loop
nop
cmpsl
add
add
add
push
jne
imul
mov
push
lods
insb
xchg
jnp
jo
push
jmp
mov
imul
mov
mov
xchg
stos
dec
sbbb
mov
loop
faddl
loop
scas
ds
adc
add
xor
add
xor
in
and
pushf
js
add
leave
scas
cld
or
rcll
sbb
adc
xor
popa
pop
mov
push
xchg
pop
sub
insb
add
loope
ret
cmpsl
aas
in
xor
ret
mov
sbb
das
shlb
jmp
in
push
mov
sub
cmc
aad
lret
loope
push
push
adc
jmp
add
add
std
mov
cmc
sahf
push
ret
pop
mov
arpl
imul
loope
push
xchg
push
movsb
inc
xor
jmp
repnz
mov
out
lea
adc
out
addl
add
inc
int3
arpl
add
mov
adc
mov
out
in
dec
out
hlt
bound
add
addr16
mov
mov
add
mov
mov
jnp
jle
jb
xchg
addr16
jbe
les
and
sti
sub
ss
xor
dec
fcoms
inc
mov
roll
xchg
je
les
test
mov
fadds
loop
add
pmaxsw
sub
ja
mov
out
mov
out
call
data16
add
add
sbb
add
sbb
adc
lahf
mov
jmp
enter
mov
stc
mov
mov
mov
add
mov
or
test
add
imul
add
fstpl
fcoml
iret
loope
repnz
je
xor
es
fstl
add
add
insb
les
inc
bound
clc
scas
sbb
mov
pop
cmc
mov
mov
clc
sub
xor
sbb
std
and
mov
mov
outsb
loope
sbb
xor
test
scas
or
fsubr
xor
call
or
mov
sub
loopne
scas
imul
adc
push
xor
xchg
add
fidivs
test
adc
scas
aaa
mov
push
jmp
loope
lea
mov
loope
test
pop
cmp
sahf
inc
adc
test
xor
test
imul
mov
mov
mov
mov
add
add
aas
test
add
mov
lcall
in
adc
jge
imul
add
push
lcall
mov
cmp
push
dec
push
fs
inc
mul
adc
pop
or
add
fsub
push
lret
mov
popa
mov
sbb
or
scas
seto
add
add
insb
test
sub
mov
decb
jne
lea
dec
call
nop
paddq
add
call
mov
jmp
loop
loop
popa
aad
pop
popa
fucomp
add
out
add
pop
mov
inc
mov
or
imul
popa
and
loop
rorb
mov
ljmp
inc
push
jl
popa
lea
xchg
faddl
push
push
enter
mov
adc
jae
mov
inc
add
ficoms
andl
dec
jne
sbb
jecxz
or
aam
rolb
loop
xchg
iret
mov
or
add
add
xor
jl
adc
xchg
movsl
inc
mov
inc
cmp
push
out
test
cmp
add
or
pop
mov
fidivrs
lock
mov
add
push
jae
call
pop
cmc
jl
into
mov
inc
loop
rcr
ficompl
mov
add
mov
xor
inc
mov
add
movsl
stos
jmp
cmp
sbb
test
sub
jmp
mov
add
test
sbb
stos
in
outsl
cmc
test
das
mov
nop
mov
mov
out
pop
in
call
clc
jae
test
sub
mov
lea
or
inc
jmp
xor
mov
add
add
add
add
mov
mulb
call
adc
push
add
out
pusha
add
cmp
mov
adc
int
mov
mov
popa
mov
cmp
je
or
jnp
out
das
dec
mov
xor
dec
call
enter
add
add
adc
dec
in
ljmp
jl
jbe
daa
add
pop
push
cmp
aas
cs
jne
pop
test
dec
or
add
into
ljmp
fnstcw
dec
push
punpcklbw
pop
std
loopne
repnz
jg
je,pn
inc
and
loop
sbbb
add
add
sbb
loop
cmc
out
xchg
add
imul
and
in
adc
or
and
mov
imul
add
mov
inc
xchg
mov
sbb
push
sbb
xchg
xchg
push
lock
add
jno
pusha
xchg
shlb
lea
insb
ret
in
add
add
loop
pop
inc
jmp
fidivrs
xor
add
filds
popf
mov
and
in
int3
fdecstp
mov
inc
loop
dec
xor
aaa
outsl
jnp
cmpsl
call
inc
push
hlt
mov
popf
jg
sbb
lea
in
add
cmpsl
shl
call
mov
in
outsl
pusha
frstor
mov
adc
add
adc
or
sbb
mov
dec
push
cs
push
test
dec
out
loope
in
shll
xor
in
divl
test
scas
cmc
and
fldenv
mov
loope
inc
loope
in
repnz
or
jmp
outsl
data16
pushf
out
dec
xor
jb
add
popa
add
add
mov
inc
push
aaa
cmpsl
out
cmp
add
push
mov
adc
mov
neg
jle
adc
mov
sub
push
cmpl
rolb
lret
xor
fs
out
mov
testb
xor
lods
mov
jp
xor
sarb
mov
mov
push
mov
add
fistps
jae
mov
xchg
dec
push
push
stc
cltd
pop
cmp
dec
xor
cmp
xlat
nop
xchg
add
dec
xor
fdivr
adc
mov
pop
mov
add
adc
pop
imul
call
xorl
fnstsw
push
addr16
push
xor
mov
xor
shlb
aam
push
add
add
push
decl
adc
push
imul
mov
aam
push
and
imul
jne
xchg
adc
xor
call
jmp
add
xor
xor
add
insl
in
xchg
jmp
repnz
dec
loope
jbe
mov
sti
call
roll
add
xor
mov
loop
mov
xorb
call
xor
xor
loope
jae
rolb
add
pop
scas
adc
sub
jp
loope
loop
push
push
std
jno
imul
xor
mov
mov
ljmp
add
add
cmp
add
aaa
pop
stos
mov
loope
push
dec
inc
mov
push
jmp
fildll
test
pop
xchg
push
mov
jg
jmp
mov
scas
jle
mov
call
sahf
mov
scas
mov
mov
mov
push
xor
mov
xchg
outsb
push
dec
cs
add
add
dec
lea
pop
call
shlb
mov
andl
adc
cmp
jge
clc
movsb
xchg
ficoml
dec
mov
jbe
push
jo
sub
jge
mov
mov
push
in
fcompl
lcall
pop
movb
add
mov
hlt
movsb
xchg
adc
xor
add
idivl
add
add
imul
loop
xchg
mov
or
jae
xor
out
aaa
jg
repnz
lds
add
pop
adc
xlat
pop
push
xchg
mov
add
es
xchg
mov
sbb
loop
inc
clc
pop
xor
lahf
repnz
repz
ljmp
jl
mov
pop
push
fcompl
add
add
add
add
aas
sar
aaa
rcll
pushf
inc
add
rcrl
popa
movb
mov
es
xor
fmull
pop
push
jb
int
in
test
add
flds
imul
call
mov
add
add
pop
neg
shrb
mov
loop
fs
jmp
push
add
add
stos
in
push
lahf
cwtl
ret
and
ds
negb
fstp
mov
mov
bound
stos
fstpt
lahf
add
pop
movsb
cmc
push
loope
pop
shl
xor
loope
lahf
dec
fisttpll
loope
call
arpl
imul
lea
or
add
mov
stos
jl
cmpsb
xchg
jmp
cmpsl
sub
pop
adc
call
in
test
add
loope
inc
cmp
mov
andl
rep
push
adc
lcall
inc
xchg
jns
aad
jns
add
push
sub
or
add
enter
cmp
add
out
pushf
out
jge
std
mov
sbbb
je
add
sbb
subl
mov
jns
sbb
dec
push
sbb
cmpl
add
xchg
pop
leave
je
mov
xor
lea
xor
cmpl
mov
mov
loop
add
add
int3
loop
mov
push
mov
popa
or
call
movsb
cmp
test
cld
inc
inc
hlt
cmc
scas
jp
fisubl
mov
xchg
push
sbb
lret
jmp
push
int
inc
pushf
rclb
mov
sbb
cli
cmp
add
and
test
xchg
cmpsl
iret
xor
pop
mov
add
dec
aas
imul
jg
icebp
add
add
add
add
add
pop
pop
dec
mov
adc
add
fdivrs
fidivrs
xor
jmp
sti
or
lahf
fcomi
mov
fistpll
sub
sbb
testb
ficomps
and
xor
test
fistpl
jno
repnz
jb
fimuls
gs
mov
scas
dec
sbb
jle
add
add
inc
es
add
cmpl
push
out
insl
jg
fwait
call
icebp
sbb
xor
mov
popa
fwait
jmp
mov
loopne
pushf
lcall
cltd
lcall
sbb
mov
xor
push
les
add
mov
jo
cmp
add
xlat
xor
popa
popf
xchg
out
sbb
mov
loope
and
loope
inc
test
xchg
xor
popa
popf
xchg
subl
ds
loope
or
push
cmpsb
lret
dec
cwtl
add
insl
jae
adc
ficoml
jnp
mov
dec
pop
pop
repnz
add
outsb
sbb
andl
push
push
mov
repnz
incl
add
scas
adc
inc
rorb
pushf
mov
jnp
add
imull
jge
rolb
cld
pushf
dec
call
mov
sub
or
push
lcall
add
scas
add
sub
je
adc
lea
mov
repnz
fiaddl
or
cs
add
add
push
subb
adc
xchg
inc
add
dec
push
or
mov
scas
jo
add
dec
adc
mov
sub
mov
add
dec
add
push
lret
add
aam
out
mov
aaa
push
push
ret
mov
xchg
jle
and
dec
cld
mov
shlb
loope
pop
add
add
dec
das
jmp
rcrl
add
and
jl
sub
bound
cmpsb
mov
lret
add
pusha
push
adc
jg
cltd
imul
sub
jl
in
out
mov
sub
push
into
add
sub
ljmp
inc
inc
clc
push
mov
loop
pop
jnp
add
sub
test
inc
loop
mov
mov
add
mov
fucomip
daa
mov
inc
cwtl
jmp
loope
add
mov
or
adc
inc
lea
into
call
mov
inc
jmp
mov
lods
mov
mov
and
jae
sar
call
add
add
inc
seta
call
and
call
sbb
push
pop
push
es
mov
movsb
add
xor
daa
cmc
adc
divl
or
xchg
add
xor
out
adc
lret
lods
ret
xor
xor
ret
push
adc
jg
scas
xor
add
push
push
add
add
add
add
daa
add
adc
adc
incb
and
jecxz
and
mov
decl
xor
jne
mov
add
hlt
ljmp
cmp
mov
mov
sbb
xchg
push
inc
push
xor
or
add
or
aas
and
adc
xchg
add
push
adc
lret
push
sbb
adc
add
push
adc
pop
jl
lret
add
nop
adc
addr16
push
xor
mov
imull
hlt
ds
pop
xor
xchg
or
or
cwtl
jnp
pop
jge
push
inc
fsubr
fwait
mov
mov
xor
add
mov
loop
fs
call
dec
add
add
repz
lods
push
mov
in
xchg
call
dec
sub
sub
jmp
mov
loop
mov
push
lcall
and
jmp
jp
mov
lds
andb
jmp
xor
fisubrl
mov
lock
testl
add
add
add
push
das
add
loope
je
sub
dec
fstp
jno
clc
hlt
mov
cwtl
and
mov
add
add
xor
imulb
add
loope
inc
mov
push
jae
dec
imul
mov
incb
stos
pop
add
int
mov
sub
pop
adc
int
or
sbb
add
adc
add
pop
out
and
ljmp
gs
xchg
incb
cmp
inc
and
pop
pushl
insb
xor
push
rcll
inc
cmp
mov
decl
gs
and
xchg
jb
and
and
insb
cmp
adc
xchg
add
cs
xchg
push
scas
add
sub
je
sbb
imul
mov
inc
scas
lret
adc
idivb
je
jg
cmp
push
xchg
mov
sbb
add
andl
add
stos
pop
int
loop
xchg
call
sarl
ja
push
add
xchg
or
and
mov
add
xchg
fnstenv
ja
cli
mov
incb
xchg
fucomi
dec
and
add
lcall
ds
movq
ret
fldl
std
lds
jae
mov
lret
lods
jbe
push
mov
xor
and
mov
pop
ret
mov
hlt
jle
loop
call
fisubrl
mov
pusha
push
in
or
add
pop
call
int
add
add
inc
or
mov
jp
mov
enter
mov
ljmp
push
mov
xor
popa
test
mov
cltd
mov
inc
out
jmp
push
popf
push
stc
mov
and
out
adc
call
in
rcl
rcl
pop
add
add
xor
jmp
cwtl
xor
mov
fimull
adc
icebp
and
unpcklps
push
add
jecxz
mov
cmp
cld
adc
fidivrs
je
push
jbe
repz
add
loopne
scas
sub
shl
out
jb
xchg
and
loope
mov
lret
arpl
add
mov
xor
je
jecxz
xlat
or
mov
mov
je
jecxz
adc
mov
out
in
lret
add
push
push
ret
adc
add
ret
mov
je
mov
dec
mov
or
mov
jb
sti
sbb
jne
or
call
sbb
std
push
jmp
ljmp
pop
xor
jnp
pushl
in
jbe
jno
je
mov
pop
or
jecxz
add
adc
or
mov
push
popf
pop
or
loop
add
out
fists
inc
loop
xchg
mov
xchg
mov
fs
add
add
sbbb
loop
xchg
or
add
fisubl
popl
fiadds
loop
add
in
xchg
adc
cwtl
test
loop
add
pop
orb
daa
or
filds
lods
xchg
lea
loopne
push
sahf
and
xchg
test
sarl
cmc
sub
add
sti
adc
lock
enter
cmp
add
out
mov
sbb
repz
popa
jo
push
addr16
mov
cmp
add
sbb
fimuls
frstor
loop
sbb
cmp
adc
mov
loop
mov
xor
pop
add
push
mov
mov
add
add
xor
pop
int3
ljmp
inc
sarb
out
stos
cmc
xor
jne
push
sbb
cmp
add
add
orl
hlt
jmp
jo
jo
mov
push
ss
mov
xor
push
and
add
push
hlt
dec
adc
add
add
xor
add
stc
sti
push
add
pop
push
dec
lret
repnz
decl
mov
inc
cld
into
je
cmp
testl
jge
mov
enter
add
mov
je
int3
jae
nop
xor
inc
fisttps
push
pop
push
inc
or
or
mov
add
enter
lret
cs
xor
push
call
loop
mov
in
cmc
out
rolb
add
push
pop
pop
or
or
int3
xchg
popa
cmp
push
xor
pop
add
loop
add
cltd
sub
loop
inc
out
imul
lock
add
dec
pop
mov
cmp
add
xchg
outsl
or
xchg
mov
add
mov
clc
lret
inc
adc
repz
mov
in
rclb
cmp
outsl
and
mov
cmp
xor
mov
aas
xlat
lock
mov
xor
inc
lcall
add
popf
mov
jge
std
push
jne
inc
adc
xor
and
push
inc
sub
add
add
int
lgs
call
mov
cmpsb
xor
push
and
xor
mov
adc
call
pop
cltd
ja
or
jecxz
popa
cmp
push
adc
pop
rcr
xor
pop
add
push
or
stc
fs
pop
push
add
add
mov
pushf
cmp
xchg
lcall
bound
nop
in
xchg
call
cmp
call
xor
call
mov
fisttpll
add
ror
adc
lret
sub
inc
arpl
rcll
js
mov
push
xor
adc
add
add
add
add
repz
xchg
adc
cmpb
inc
sbb
cmp
xchg
push
lea
dec
push
sbb
push
add
jae
push
rolb
cmp
xor
add
xor
arpl
dec
leave
jae
insb
aaa
mov
pushf
in
ret
mov
push
loop
pop
cld
add
add
aas
lea
fs
add
xor
add
das
or
inc
jg
push
sar
fs
call
add
inc
loop
mov
inc
cmpsb
fsubrs
xor
add
pop
sbb
push
or
je
rolb
pop
aad
test
cld
std
mov
iret
stos
pop
lods
outsl
testl
add
xchg
dec
lret
rcr
dec
mov
sub
mov
xor
mov
test
loop,pn
adc
cmc
sti
lock
movsl
inc
sub
push
dec
outsb
push
xchg
test
cs
mov
ljmp
xor
pop
test
sub
sti
lock
imull
rorb
add
jo
pop
sub
add
mov
mov
cmp
insb
fiaddl
test
adc
add
lock
mov
movsl
mov
je
mov
adc
test
insb
es
pop
jle
aam
sub
scas
div
adc
mov
jo
cwtl
dec
stos
loope
mov
add
stos
out
push
shll
repz
test
pop
in
sti
mov
sub
pop
push
pushf
scas
imul
mov
mov
mov
in
sub
and
xchg
or
repnz
or
sub
pop
add
adc
loope
in
mov
or
mov
pusha
push
lock
xor
mov
rorb
mov
add
sti
ljmp
cmp
ljmp
jb
push
stc
sti
push
ss
repz
xchg
and
dec
aaa
mov
mov
mov
mov
je
ficompl
mov
add
dec
mov
push
jp
inc
or
das
add
xor
shlb
andl
add
push
out
jg
pop
add
loop
aas
clc
mov
aas
incl
add
mov
cs
and
ljmp
les
push
lods
rcrb
sub
das
cmp
mov
pop
and
fnstenv
pop
add
mov
push
pushl
xorb
repnz
aas
adc
xor
shr
stos
pop
and
push
leave
mov
js
add
add
add
xor
sbb
sub
and
call
add
cld
mov
cld
loopne
jmp
call
xor
lock
xchg
cmp
ss
lds
ss
cmp
jmp
int3
inc
loop
sub
xchg
xchg
push
sub
dec
lods
pop
add
add
fwait
sub
xor
add
jo
insl
popf
inc
mov
test
cld
dec
out
and
pop
cmpb
inc
imul
dec
cmp
jae
mov
rcll
add
loopne
cli
inc
out
cld
mov
shll
mov
or
mov
fstps
dec
imulb
divl
jmp
add
add
mov
in
div
push
sub
into
sahf
xchg
pop
mov
pop
xchg
mov
shll
sub
push
add
jbe
add
xor
add
or
aaa
lea
dec
xor
call
cmp
incl
dec
adc
or
jmp
mov
or
inc
sub
dec
ret
add
add
cli
mov
sbb
psadbw
daa
xorb
cld
mov
cmp
push
xchg
xor
mov
leave
stc
jnp
push
adc
add
jne
fidivrl
add
add
mov
insl
test
push
and
add
int3
inc
inc
add
popa
test
mov
or
incb
add
cmp
jbe
and
push
pushf
int3
dec
mov
mov
pushf
lods
dec
mov
pop
xor
or
cli
stos
sbb
loop
ljmp
dec
add
sub
repz
or
push
fcom
movl
inc
loop
xor
decb
xor
jno
test
mov
bnd
or
fcmovne
repz
add
bnd
inc
loop
fadds
and
and
add
jno
adc
mov
add
add
pop
std
and
ret
mov
aaa
aam
xor
loope
out
loop
out
jl
mov
test
add
stos
dec
test
and
mov
out
add
add
mov
add
and
and
jae
jmp
cmp
push
pop
mov
hlt
daa
sahf
xor
das
in
lds
fistpl
fimuls
add
arpl
rorl
jmp
jno
jmp
loope
mov
loope
add
fwait
sub
bound
cld
add
add
or
jmp
sarl
pop
test
andl
shrl
mov
pop
leave
mov
roll
sub
xor
push
sub
push
add
dec
cwtl
pop
mov
xor
dec
ja
sti
pushf
cmp
adc
andl
adc
xor
add
add
mov
out
jecxz
inc
sti
test
jne
mov
and
fisttps
decl
and
adc
add
push
sbb
pop
dec
aaa
jo
jecxz
fisttpl
movsl
out
pop
vmaxss
mov
add
lock
xor
repnz
mov
sub
add
out
pop
or
add
cmp
call
and
adc
jae
aaa
and
aam
out
add
pop
push
add
sbb
add
xor
jmp
cwtl
fsubrl
jmp
jbe
jp
ret
sub
xchg
js
fsubrl
cld
add
add
jno
adc
imul
addb
lea
lods
pop
mov
cmp
lods
jnp
loope
in
cmc
loopne
cmp
xor
js
xchg
push
cmp
push
add
cmp
sbb
mov
repz
jmp
inc
loop
cmp
add
icebp
sub
xor
jnp
lods
mov
stos
ljmp
push
ljmp
add
add
jae
jbe
dec
pop
adc
cli
inc
inc
xchg
fiadds
out
push
sbb
call
xchg
loope
add
push
jns
test
jne
xor
pop
movsb
js
je
push
sti
fidivrs
mov
xchg
push
sti
dec
xchg
mov
out
mov
jp
jecxz
dec
jp
xchg
add
add
add
mov
cmc
pop
clc
dec
inc
clc
testb
push
fistl
mov
mov
add
lock
je
jnp
lea
pop
pushf
insb
mov
xor
ret
sub
pop
leave
mov
cwtl
dec
push
into
icebp
sti
push
jno
call
mov
mov
je
testl
add
add
xor
sub
jae
jecxz
dec
dec
shl
int3
call
push
xor
shl
jge
xor
mov
mov
mov
dec
leave
mov
in
stos
xorb
push
mov
ss
jae
lcall
popf
or
add
add
mov
sahf
adc
pop
dec
mov
adc
add
imul
and
repz
jl
push
mov
push
dec
mov
sbb
push
imul
ss
pop
jo
jg
das
jmp
add
lods
out
loop
add
sbb
add
adc
lock
lea
inc
test
add
add
xor
jbe
mov
mov
jbe
aas
jb
xchg
add
xchg
mov
test
loop
insb
jle
jbe
test
mov
lds
pop
pop
jmp
fs
or
push
loope
aas
add
mov
movsb
pop
mov
add
jp
imull
push
pop
push
or
sub
fnsave
add
jne
lods
push
cmp
aad
loope
inc
jle
insb
add
cld
ss
in
cmp
jne
jae
jne
dec
loope
add
cwtl
mov
in
pushf
shlb
add
and
getsec
mov
jae
out
std
call
dec
in
mov
add
fwait
mov
add
inc
int
push
xorb
cmp
xor
mov
mov
fs
dec
call
jb
std
pushl
incl
mov
adc
add
mov
and
jnp
inc
nop
imul
mov
fsub
arpl
mov
inc
add
add
lret
lret
adc
decl
add
add
add
incl
push
inc
outsl
out
dec
xor
mov
movb
rol
push
pop
pop
push
push
lods
fcomip
ja
lcall
int
push
mov
jns
pop
fwait
das
add
lret
pop
dec
test
mov
push
dec
push
adc
xor
movsl
jl
push
and
lcall
xchg
mov
mov
add
xchg
aas
cld
adc
lcall
add
jae
aas
cld
enter
imul
jmp
movsl
xchg
sub
pushf
push
ss
inc
sbb
jns
mov
fsub
xor
subb
push
mov
adc
bound
shlb
xor
sub
jb
pushf
push
ret
addr16
sub
add
add
imul
push
mov
push
movsl
xchg
movsb
mov
and
roll
loop
imul
mov
push
sarl
out
add
xor
loope
and
add
cld
sub
lret
jb,pt
jb
lods
pop
pop
inc
rol
jb
jmp
mov
aas
fcmovnb
adc
jmp
add
add
add
add
pushf
xchg
int
jb
pop
or
dec
adc
insb
dec
xorl
dec
insb
or
sti
push
ds
pop
out
mov
mov
loope
subl
mov
push
cmpsl
test
cwtl
scas
in
pushf
rolb
das
pop
mov
sbb
sub
xchg
ds
sub
jb
add
add
stos
cld
add
cmp
std
pushl
sub
mov
cmp
push
add
add
mov
pop
lea
sti
lcall
cltd
sti
xor
jmp
inc
repnz
pop
sub
jnp
inc
add
mov
add
icebp
divl
call
cwtl
sti
incl
add
loop
xor
ret
or
pop
xchg
or
push
sti
pop
add
sbb
addb
or
loop
fildll
sbb
xchg
inc
cmp
and
jmp
pop
mov
int3
mov
dec
or
mov
mov
mov
stc
lods
fiadds
inc
pop
test
add
add
jecxz
add
and
xlat
insl
inc
std
fisubrl
mov
outsl
mov
mov
xchg
test
mov
cmp
mov
jmp
lret
sbb
xor
lods
mov
mov
jbe
inc
imul
mov
test
push
loop
fimull
add
add
add
add
imul
mov
pop
or
mov
mov
xchg
outsb
popa
xchg
addr16
push
mov
lahf
jl
cwtl
stos
out
popf
call
inc
outsl
mov
in
movsl
lods
push
mov
fcos
inc
cmpsl
xor
xor
arpl
jne
int
push
shrl
mov
aam
outsl
dec
roll
call
add
add
add
add
pop
pop
mov
shr
add
in
loope
sbb
test
loopne
push
ss
test
xchg
lods
call
fs
cld
outsb
adcb
loope
lea
xor
bound
leave
std
lods
jae
push
idivl
inc
dec
sbb
add
std
adc
shrb
ret
add
add
aam
cmp
std
push
xchg
pop
sar
xor
out
out
xor
mov
push
xor
or
jbe
push
add
and
leave
dec
enter
jbe
add
mov
push
push
mov
inc
push
mov
scas
lock
push
cli
notl
aam
fildl
pop
mov
pop
fildl
add
outsb
and
add
mov
iret
bound
mov
aas
scas
loop
stos
cmp
push
mov
pop
clc
outsl
sbb
sub
dec
pop
add
or
fnstenv
push
push
cli
imul
jecxz
xchg
popf
dec
lret
dec
iret
rcrl
int
out
and
ss
sarl
add
add
add
add
xor
shrl
mov
inc
loope
jmp
xor
push
push
pop
and
loop
stos
fwait
movsl
pop
mov
ret
aam
es
xor
ljmp
push
fiaddl
cltd
mov
imul
mov
bound
xor
add
xor
xchg
pop
js
in
stc
xchg
add
add
push
daa
into
xor
ret
cmpsl
hlt
addb
jl
ss
imul
in
in
and
add
out
sbb
in
out
out
add
cmp
test
shrl
xor
add
xor
add
or
mov
es
rolb
add
sbb
jl
loope
pop
in
pusha
out
adc
sti
cmp
hlt
mov
mov
add
movsb
lret
pushf
outsb
push
int
push
pop
and
dec
add
mov
int
mov
mov
mov
sbb
jmp
sub
dec
adc
sub
sbb
or
mov
incb
add
in
int3
dec
lea
xchg
ret
sub
shr
jno
decl
sub
pop
mov
jae
outsb
out
cmpsl
push
aam
push
out
cmp
add
cmp
inc
push
push
loop
jp
loop
xchg
ret
loop
cmpb
test
jge
out
add
arpl
add
imul
imul
pop
imul
lods
xlat
add
add
pop
test
jecxz
outsl
mov
push
cwtl
sbb
in
xchg
mov
xchg
incb
pop
out
pop
test
test
push
aad
cld
fstl
push
add
pop
pop
cltd
les
sbb
add
lret
or
fnstsw
xlat
sbb
jo
or
lcall
sub
test
popa
cmpsl
bound
loop
lcall
addr16
mov
mov
pushf
das
bound
call
scas
divl
std
stos
setns
add
dec
xor
add
pop
adc
xchg
add
loop
sub
xor
add
jle
ret
sbb
push
addr16
fwait
call
out
ja
in
mov
mov
mov
mov
repnz
dec
dec
mov
dec
pop
and
push
xor
gs
mov
jnp,pn
out
jb
dec
dec
jb
scas
pop
add
jmp
in
mov
add
add
add
pop
dec
scas
in
xor
cmpsl
sbb
jmp
ds
pushf
ficompl
ljmp
jbe
adc
enter
out
out
nop
out
mov
out
or
add
out
pop
push
cld
jae
pop
jno
cmp
add
aas
call
pushl
add
add
add
add
add
outsl
inc
sti
dec
in
push
lea
out
aas
xor
mov
out
jne
mov
adc
adc
cmp
or
xor
lcall
aas
std
jmp
outsl
ret
push
xchg
xchg
je
loop
dec
lret
aad
cmp
outsl
adc
push
or
push
inc
loop
add
adc
xchg
add
add
mov
clc
mov
xchg
int
mov
add
add
xchg
mov
repnz
cli
loop
add
int3
xchg
sub
popf
into
adc
imul
inc
cmpb
loop
or
mov
sub
lods
mov
jmp
cwtl
in
sbb
add
in
add
lods
lds
mov
enter
jg
scas
arpl
in
mov
bound
jge
add
xor
add
out
dec
mov
or
arpl
cmp
push
push
cmp
stos
adc
pusha
imul
arpl
arpl
cld
out
add
add
out
jns
rclb
pop
in
jmp
dec
xor
pop
pusha
mov
arpl
scas
jmp
adc
mov
jge
inc
jmp
imul
xchg
xor
xchg
imul
in
into
mov
add
bound
dec
inc
fcompl
dec
pop
std
pop
push
push
lds
mov
add
add
loope
mov
mov
inc
mov
adc
sti
sub
mov
xchg
and
or
mov
xchg
jne
mov
xor
mov
sub
ret
cmpb
jne
pop
xor
call
fldt
jmp
divb
push
push
push
and
push
add
add
xchg
mov
sbb
mov
mov
incl
mov
cmp
ljmp
cli
sbb
test
int3
divb
pop
xor
repnz
sub
push
xor
idivl
aas
loop
or
pop
or
jmp
jmp
xchg
dec
jmp
inc
pushf
mov
dec
add
sub
jg
add
add
out
loop
test
xor
add
dec
xchg
fst
sti
add
dec
cmp
mull
out
mov
add
fstpl
call
bound
aam
dec
add
xor
dec
jmp
pusha
call
xchg
and
movsb
imul
pusha
call
shl
pop
fldl
add
add
add
pop
lds
loop
popf
jle
dec
push
loope
pop
addr16
mov
sub
add
dec
push
xlat
stos
mov
pop
in
cmpsl
sbb
sti
xor
lds
das
lahf
sbbl
add
inc
xchg
mov
data16
jmp
adc
mov
test
push
dec
jg
jmp
add
add
add
add
stos
out
insb
jnp
adc
divb
out
js
ror
pop
fidivs
mov
je
fs
mov
sbb
xor
fbstp
mov
sbb
adc
xchg
pop
pop
pop
push
cld
xchg
out
or
arpl
add
jno
pop
jae
sub
cmpsb
popa
sbb
add
add
add
adc
mov
mov
filds
jnp
cwtl
add
xor
lock
mov
and
add
repz
xor
addb
adc
xor
fmuls
dec
decb
xor
ret
push
mov
push
push
inc
idiv
push
jecxz
mov
rorb
add
add
add
add
mov
and
idiv
mov
fsubs
adc
jl
cmp
in
adc
imul
in
cmc
inc
add
and
leave
and
push
pop
xor
push
mov
inc
cld
mov
es
pop
jbe
inc
incb
lret
sbb
sbb
stos
add
jno
fidivrs
or
jns
add
add
pop
add
icebp
mov
push
xor
dec
lcall
outsl
mov
or
dec
xlat
mov
xor
xor
cmc
loopne
mov
inc
add
ljmp
lret
fidivs
mov
xor
clc
inc
cmp
ret
in
popa
sub
mov
adc
sub
add
and
cmp
jnp
sub
ret
sbb
sbb
call
aas
xor
pop
and
shlb
out
mov
outsb
in
imul
bnd
sub
pusha
leave
sub
sub
outsl
mov
jb
mov
repnz
inc
jo
sub
aaa
fadds
add
fidivrl
stc
sub
sub
fstpt
jmp
jle
call
add
inc
inc
jmp
out
xor
iret
sub
je
das
push
rcll
add
dec
xor
test
ficoml
cmp
adc
and
andl
mov
lea
call
test
add
lret
inc
add
mov
lods
dec
add
sbb
and
push
adc
and
xor
pop
inc
flds
mov
les
incl
flds
nop
pop
les
incl
std
lcall
jo
add
xor
add
je
popa
adc
popf
out
lea
or
jae
cltd
insl
jmp
call
mov
aas
loop
cmp
lsl
push
pop
cli
add
cmp
out
pop
mov
popa
inc
add
push
jg
out
jg
jecxz
sti
decb
fwait
sub
inc
jg
loop
cmp
cmp
testl
ret
xor
aaa
fiadds
cmpl
push
mov
sti
sbbl
js
sub
mov
lcall
loop
mov
aam
xor
add
xor
ret
mov
movsl
push
test
pop
test
out
cmp
or
popa
ret
out
insb
pop
imul
movsl
xchg
mov
lods
or
add
arpl
xor
fidivs
xor
add
add
in
sahf
push
je
lock
rclb
loopne
outsl
scas
adc
hlt
push
cmp
lods
mov
mov
xor
add
dec
add
int
jno
pop
pop
cmp
push
cmp
movsb
jmp
push
test
icebp
pop
faddl
insb
and
ljmp
xor
das
loop
add
movsb
inc
pop
sub
jae
add
add
dec
clc
adc
popa
adc
sbb
arpl
es
movsb
mov
pop
push
incb
inc
nop
call
out
int
daa
rorl
add
movsl
out
jmp
loope
add
cmp
mov
add
sbb
mov
incl
add
inc
outsl
add
into
shr
addl
add
add
add
ja
add
jnp
jnp
mov
or
add
cmpsl
or
add
test
or
cltd
js
inc
adc
pop
xor
mov
cmpb
inc
pop
xor
mov
lea
jecxz
mov
mov
loop
add
mov
add
lds
mov
fdivl
push
cmp
add
in
dec
icebp
pop
add
mov
push
stos
dec
test
add
das
inc
add
pop
les
divb
lea
out
popf
daa
loop
jnp
dec
loop
mov
out
sub
loop
cmp
lods
dec
sbb
mov
lret
shrl
jnp
add
add
test
in
das
testb
push
inc
loop
add
fiaddl
je
test
mov
mov
jb
mov
cmpsl
mov
mov
dec
addl
xor
pushf
mov
insl
xchg
pusha
jge
sub
ljmp
sbb
xchg
test
add
test
cli
add
add
cmc
xor
in
adc
stc
xor
js
dec
adc
inc
xor
jns
daa
adc
dec
lcall
stos
mov
pop
xor
jmp
aam
rcl
pop
push
mov
sbb
jne
enter
xor
xchg
fs
mov
in
jmp
fbstp
add
cmp
fisubl
xor
pop
jbe
das
jnp
dec
pop
and
mov
xor
xor
das
add
cs
pusha
aam
jmp
imul
add
test
inc
sub
add
flds
or
push
pushl
out
shrb
mov
movsl
add
push
xor
mov
scas
cmp
lock
hlt
push
xor
mov
add
mov
lods
std
call
adc
mov
les
shr
cld
sar
jne
flds
fwait
add
cs
sbb
inc
dec
not
xlat
les
rcrb
ret
shll
mov
add
inc
add
add
push
cmp
sahf
in
into
es
pop
xchg
ja
add
add
mov
cmp
inc
add
std
add
cmp
enter
push
push
mov
add
fistpll
out
pop
add
push
push
or
jl
or
dec
pop
int3
cmpsb
sti
gs
ds
pushf
mov
or
mov
int3
cmpsl
je
int3
jge
das
add
sbb
add
adc
adc
push
ficoml
sti
outsb
jmp
xor
call
add
icebp
ds
dec
pop
or
pop
mov
rorl
and
push
fmuls
jl
xchg
iret
add
pop
and
xor
mov
xchg
inc
xor
nop
cmpsb
mov
add
add
pop
ja
imul
jl
mov
push
callw
andb
cld
adc
lods
mov
std
sub
mov
enter
push
jb
mov
adc
xor
push
cmp
cmp
mov
call
shlb
cmpsb
adc
pop
mov
loope
mov
add
push
mov
cld
call
xor
jmp
pushf
dec
fucomp
add
push
arpl
jmp
pusha
dec
out
cmpsl
nop
inc
js
push
and
les
shl
push
mov
inc
mov
dec
xor
or
cmp
jg
inc
sti
mov
les
mov
hlt
popf
add
add
lret
xor
dec
mov
std
call
adc
mov
call
or
jbe
loope
pop
jmp
add
add
setne
pop
add
rolb
xor
dec
push
add
in
mov
mov
add
outsl
popf
or
aad
sti
or
cmp
imul
add
add
add
insb
push
les
mov
aad
je
les
dec
mov
jo
mov
sar
lods
or
lea
push
xor
add
and
pop
add
jp
or
arpl
add
aam
jecxz
fidivrs
dec
xor
mov
fmuls
jnp
dec
add
xor
adc
add
add
dec
sub
jle
dec
adc
xor
mov
xor
add
cwtl
imul
sub
inc
xor
add
mov
sbb
and
add
imul
insb
jae
call
fidivrs
jp
or
in
jo
push
nop
test
scas
sti
or
push
add
add
out
add
loope
out
gs
add
loope
adc
dec
es
lret
mov
mov
jmp
and
in
ficoml
jmp
add
push
shlb
jns
fwait
jmp
add
imul
push
dec
push
je
push
out
and
xchg
sar
je
dec
callw
add
xor
sub
mov
sahf
sub
std
add
sbb
jnp
add
dec
das
push
lea
xor
cmp
call
mov
adc
aam
icebp
call
mov
inc
or
jbe
jno
pop
jmp
dec
sub
setne
pop
add
out
push
aas
mov
add
add
add
mov
cmp
inc
xor
cs
add
mov
mov
push
mov
and
push
add
int
and
sub
pop
add
or
je
adc
insb
sbb
sbb
and
lret
sar
xor
loop
and
dec
fisubs
add
add
mov
and
loop
and
pop
add
push
je
call
mov
mov
lret
mov
jnp
ss
out
fiadds
add
sub
xor
call
in
push
xchg
jl
hlt
les
adc
call
add
xor
idiv
fld
push
mov
je
mov
sbb
add
sub
push
inc
inc
das
insb
add
mov
fmull
outsb
in
add
pop
jmp
loop
mov
aad
call
push
fisubl
test
andl
notb
mov
psrad
jnp
xor
aaa
add
data16
push
or
pop
sbb
fidivs
mov
adc
add
pop
mov
aas
mov
clc
je
imul
sbb
call
and
shrl
out
test
ret
iret
bound
cmp
inc
cmp
add
pop
in
sti
fs
movb
mov
and
loope
mov
sub
cli
push
xor
push
push
jecxz
inc
dec
jb
cmp
sub
mov
add
sbb
add
enter
cli
jle
xorl
pop
adc
js
ud0
push
call
clc
push
cli
add
int3
add
dec
mov
std
push
arpl
adc
shlb
ljmp
push
push
adc
jns
jae
jno
repz
push
add
mov
cld
xor
mov
add
add
fcmovbe
and
xor
popa
xor
scas
sub
inc
mov
jbe
in
loop
pop
mull
iret
add
push
rorl
fisubl
mov
pop
add
mov
insb
push
push
outsl
add
adc
or
xchg
je
call
cbtw
out
and
push
adc
pop
jns
cmp
push
cmp
push
add
mov
adc
add
add
movl
inc
mov
push
mov
inc
jle
in
movsl
in
push
in
add
mov
push
and
fldl
lds
fs
cmc
fcomps
out
lods
inc
jno
mov
lods
test
add
ja
shrl
lock
adc
movsb
in
int3
adc
pop
jecxz
and
jle
add
add
sbb
add
push
stos
add
fimull
outsb
mov
add
and
or
loope
jmp
add
mov
call
jmp
mov
mov
cltd
or
imul
call
jl
inc
jae
jmp
loopne
dec
sub
jmp
lret
insl
fidivs
push
rcll
add
add
add
in
and
add
pop
push
cmp
mov
push
push
xchg
lea
dec
stos
call
push
adc
fmul
mov
pop
xor
pop
and
loope
mov
adc
add
push
mov
movsl
adc
jmp
sub
push
outsb
cmpsb
loop
add
mov
sbb
push
push
add
add
or
rorb
out
shl
dec
sahf
mov
add
xor
enter
add
lea
ficoml
push
adc
sub
adc
addl
loop
test
push
call
out
jb
loop
setne
mov
hlt
mov
mov
cmp
add
ss
xor
inc
imul
loop
push
in
int3
inc
jae
sub
or
adc
jne
jbe
data16
pop
mov
ficoms
lea
je
push
lods
cmp
das
pop
inc
sub
pop
add
loop
outsl
clc
jecxz
jg
out
jg
jecxz
adc
test
jp
cwtl
stos
add
cmp
je
add
inc
loopne
cld
xor
repz
add
test
cmp
add
loop
fsubrs
outsl
in
xchg
fldenv
push
mov
std
je
mov
in
je
jmp
lods
adc
xor
loope
int
lds
stos
push
sub
cmp
lock
sbb
outsl
testb
add
add
mov
or
ja
add
int
mov
fisubrs
das
jb
jmp
pop
aam
pop
div
cmp
mov
add
out
lock
loop
push
es
inc
adc
fcomip
ljmp
xor
add
loopne
shl
in
std
mov
push
lahf
jg
adc
out
stc
add
add
jae
out
jo
mov
xor
insb
mov
jmp
rolb
bound
jecxz
jb
mov
push
rorl
jno
sub
test
dec
lock
pop
xor
jo
dec
mov
or
es
add
jno
push
cmpsb
pop
cli
jne
mov
cld
or
sti
xor
add
add
fcompl
xor
shl
mov
push
popa
aaa
pop
xor
xor
xchg
mov
push
push
in
fdivl
jnp
test
iret
and
push
or
addl
mov
out
sub
add
xor
add
push
mov
pop
sbb
jle
notl
sbb
add
imul
adc
dec
jge
fiadds
pop
je
dec
inc
mov
dec
jge
xchg
shl
and
int3
inc
jae
mov
pop
adc
dec
das
add
inc
add
sbb
ss
dec
mov
pop
xor
mov
add
add
and
adc
and
mov
push
gs
dec
adc
add
dec
sahf
jo
dec
pop
cmp
mov
xor
inc
xor
adc
add
arpl
test
repnz
clc
rcll
jo
stos
lods
daa
mov
push
repnz
xor
push
ljmp
sub
add
pusha
mov
fnstsw
sub
add
add
sub
out
push
scas
call
daa
pop
outsl
andb
in
push
faddl
andl
rcll
popa
cmp
push
dec
hlt
sbb
test
scas
xor
add
mov
cltd
push
cmc
call
int
push
sub
cmp
icebp
loope
xchg
cld
add
add
xor
push
cmp
fidivrs
xor
push
xor
mov
or
mov
les
scas
jnp
cld
imul
fidivrl
xchg
cmp
in
incb
push
cmp
call
std
adc
jb
push
jle
pop
inc
adc
rorl
xor
push
nop
rclb
ret
bound
ror
jae
add
add
cmp
push
cmpsl
adc
mov
push
lret
mov
mov
call
inc
int
decl
inc
je
mov
call
inc
rolb
xor
call
add
jmp
pop
and
or
dec
xlat
mov
push
iret
inc
insl
je
mov
add
mov
aam
add
add
pop
and
dec
cmpl
adc
inc
xor
jae
or
jns
xchg
into
dec
push
xor
aas
insl
je
cmp
lock
mov
inc
das
imulb
jo
popf
imul
jae
and
int
aas
pop
mov
sbb
add
add
xor
add
add
adc
or
outsb
neg
dec
sti
insb
dec
cmp
cmp
mov
iret
and
jmp
rorb
movsl
push
jns
cmp
mov
lock
sub
call
andl
push
add
call
sub
hlt
pop
imul
pop
and
add
fistpll
pop
cld
outsb
xor
shll
lock
mov
and
add
in
cmpsb
movb
fistpl
mov
cmp
xor
je
test
cmpsb
cmp
jmp
loope
pushl
cltd
add
mov
jae
add
add
xlat
inc
sbb
subl
popa
mov
sti
stos
or
rcr
mov
test
fimuls
add
adc
subb
sbb
mov
pop
clc
repnz
mov
pop
pop
fldl
rcrb
imul
fs
push
xchg
push
xorl
add
cwtl
adc
xor
rcrb
and
out
out
add
mov
xchg
in
add
dec
vpcmpeqw
lret
mov
jae
dec
les
or
aam
sbb
loop
add
fimuls
jnp
inc
add
cmp
int
push
out
push
imul
cmp
pushl
clts
test
add
and
add
addr16
or
pop
inc
dec
add
inc
add
mov
jb
fidivrs
inc
ljmp
imul
cmp
ljmp
js
jecxz
inc
jae
and
mov
cs
testb
in
push
loop
aas
inc
loope
cmp
push
lods
mov
lds
call
cld
insb
mov
jno
pop
call
clc
or
or
mov
pop
add
loopne
add
sub
in
add
and
jecxz
sub
lahf
fldcw
add
mov
pop
out
mov
jge
mov
cli
ret
int
add
sub
out
add
add
and
notb
stos
xlat
out
repz
dec
loopne
jle
loope
test
scas
ss
shlb
sbb
enter
addb
filds
sarb
fcmovb
in
loope
hlt
pop
pop
inc
jmp
mull
fwait
adc
and
adc
subl
lret
orb
add
mov
add
add
out
mov
shll
dec
lds
andl
into
addb
xor
jae
ja
dec
add
mov
add
pop
push
call
call
jbe
push
aad
fimull
push
pop
into
data16
movb
inc
cmp
push
pushf
push
cmp
jb
jmp
mov
add
pushf
push
cmp
jb
incl
sub
add
add
add
mov
or
jae
loop
add
loopne
inc
pop
sub
rorl
popa
movsb
callw
pushf
jns
fidivrl
add
int
pop
bound
icebp
aad
data16
jge
jns
rol
bound
pop
or
ljmp
add
add
add
mov
cmpl
jns
or
sub
xor
lock
rcrl
mov
dec
int3
mov
std
std
mov
jns
testb
lret
xor
fsubrl
xor
lcall
xor
test
add
ljmp
jg
xor
add
jno
jns
scas
jns
movsl
in
pusha
stc
call
int
sbb
adc
fidivrs
inc
mov
arpl
hlt
mov
and
sub
ljmp
mov
mov
mov
pushl
popa
cmp
popf
fnstenv
add
add
sub
lods
mov
lahf
or
add
out
inc
loope
in
sti
adc
packssdw
in
sti
push
pushf
enter
mov
cmpsb
std
xchg
and
add
bound
subb
or
cmp
sbb
icebp
push
xor
lods
test
push
push
add
mov
sub
or
lods
testl
jns
cmp
les
mov
ss
and
je
cmp
jl
mov
mov
or
clc
or
cmp
inc
loopne
outsl
ljmp
cmp
daa
xor
sti
jmp
cmc
inc
addb
add
lock
mov
sti
cmp
sub
std
dec
xchg
mov
orl
pop
loop
xchg
outsl
adc
rorb
aas
loop
outsb
add
int3
pop
mov
lea
out
xchg
lcall
sti
pop
fisubrs
bound
add
add
add
add
repnz
or
push
pop
mov
xchg
pop
jbe
pop
sub
mov
or
pop
call
testl
mov
xor
inc
in
xor
loop
out
fnsave
push
ljmp
or
es
jecxz
fdivl
ficomps
add
add
xlat
out
lock
dec
bound
lods
jecxz
cmp
or
repnz
or
xor
out
out
movsb
xor
pop
repz
xchg
xor
mov
or
mov
mov
mov
testl
and
sub
bound
jge
insb
add
add
mov
iret
xor
adc
xchg
in
mov
pushf
xlat
popa
rolb
sbb
xchg
sub
out
add
mov
adc
inc
shrl
hlt
push
xor
sarb
clc
xchg
in
inc
mov
dec
sub
pop
add
jmp
ret
mov
add
push
push
pop
insb
push
xor
hlt
xchg
out
cmc
cmp
or
add
cmc
mov
mov
mov
std
mov
and
dec
je
gs
or
cmp
jecxz
jbe
cmp
push
aam
test
jecxz
xchg
jp
adc
out
inc
cmp
cmpsb
mov
fwait
popf
in
dec
xor
loop
add
lahf
enter
pop
push
fildl
and
call
add
adcb
mov
clc
in
push
jge
cltd
loop
or
repnz
out
xor
cmp
imull
pop
cmp
push
jb
imul
cmp
aas
pop
loop
fpatan
jp
cmc
jge
inc
ljmp
dec
gs
sub
enter
dec
xor
mov
push
mov
mov
movsl
jmp
and
fildl
adc
movsl
out
adc
jo
jae
sub
adc
sbb
loop
lcall
scas
sub
loopne
add
fldcw
xchg
and
out
repnz
or
jge
clc
stc
arpl
subb
fstpt
movsl
xor
push
push
outsb
js
cmp
mov
or
and
fldcw
xor
lcall
mov
gs
mov
sbb
cmp
insb
lock
adc
inc
popa
or
hlt
ljmp
dec
add
add
sub
testl
loop
xchg
sub
xor
push
test
sbb
test
xchg
xor
andl
loope
and
cmp
test
loope
xor
jnp
push
mov
mov
decl
pop
cmpl
les
sldt
add
sub
fnsave
movb
les
bswap
inc
aaa
sub
fdivrp
roll
mov
or
add
push
movsb
pusha
mov
mov
or
jmp
jmp
test
lcall
or
mov
mov
push
sub
xor
ret
ljmp
add
stos
lea
dec
mov
push
cmp
lods
insb
inc
pop
loop
cmp
inc
pop
inc
push
movsb
push
lret
pop
shlb
or
rclb
popa
pop
push
cmovge
loopne
sub
into
add
jbe
mov
adc
jle
lcall
mulb
mov
lret
incl
add
lods
pushf
mov
sti
xor
pop
adc
or
call
xor
pop
pop
mov
pop
out
cmp
pop
enter
clc
stos
push
sub
stos
mov
test
or
pop
add
xchg
mov
fdivrl
out
push
insb
ret
pop
mov
push
mov
cmp
sub
xchg
fisttpll
daa
cmc
aas
shll
mov
add
add
add
add
out
jecxz
loop
sub
int3
popf
lret
pop
lds
out
loop
mov
mov
jle
sbb
add
push
daa
je
pop
xrelease
sbb
push
insb
lods
fnstcw
and
add
add
xor
aaa
es
bound
pop
das
cltd
repnz
jb
addb
add
add
add
add
ss
outsb
sbb
or
mov
sbb
mov
jmp
sub
xor
mov
sbb
xchg
sub
mov
popf
adc
push
scas
dec
cld
jecxz
hlt
jl
in
test
mov
inc
ja
add
xorl
dec
mov
pop
add
add
aas
call
push
push
xor
ret
hlt
mov
sbbl
pushf
cmc
and
mov
xchg
adc
mov
pushf
cmc
and
xorb
sahf
xor
call
push
xor
mov
call
xor
add
add
pop
mov
sub
pop
and
or
addb
add
xchg
pop
pop
testb
mov
fimuls
les
add
xchg
inc
add
addb
addr16
lret
icebp
mov
mov
adc
push
or
or
cmp
push
mov
aas
shlb
ds
jae
test
or
pop
jne
cltd
sbb
push
sbb
and
jo
mov
adc
push
mov
scas
imul
jnp
mov
push
popf
mov
add
add
lret
data16
sbb
xor
ret
mov
or
jmp
sarb
sub
enter
fs
loop
push
xor
cmpsl
rcr
imul
aad
movsl
mov
pop
sub
pop
mov
add
pop
sbb
popa
mov
sbb
push
pop
and
jmp
sahf
mov
clc
jb
cs
fldenv
xchg
mov
jle
in
lret
jmp
mov
mov
stos
fadds
add
loope
jle
xchg
or
out
push
sbb
jge
imull
mov
add
pop
ja
imul
jecxz
sbbb
add
inc
jmp
push
cmc
xor
aad
popa
add
xor
ljmp
mov
incl
in
mov
aaa
fimull
repz
mov
je
cmp
testl
movsb
mov
incl
pop
cmp
add
jp
subl
incb
loop
jmp
lods
testl
je
jge
ss
push
push
jl
mov
cmpl
inc
fs
mov
xor
push
cli
sub
decl
inc
hlt
cmp
inc
clc
loop
push
inc
out
mov
maxps
push
dec
sbb
sbb
add
stc
mov
push
add
add
and
add
jecxz
jb
loope
add
decl
inc
shl
cwtl
std
gs
ficomps
mov
mov
adc
or
xlat
imul
or
jnp
push
xchg
lret
into
jg
xor
dec
incb
xor
jge
cmp
fdivl
cmpsl
push
add
add
xor
int3
jo
jae
pop
das
mov
imul
pop
inc
inc
out
mov
test
push
test
sub
push
out
sub
sbb
mov
int3
adc
iret
sbb
xor
pop
push
lods
sub
mov
jnp
or
xor
mov
int3
jle
sbb
fists
xor
add
add
adc
mov
and
fabs
xor
mov
jmp
test
pop
xor
sub
xchg
dec
or
xchg
aam
push
jo
push
cld
jge
inc
jmp
sbb
test
xor
or
pop
adc
insb
pop
add
loope
xchg
test
rolb
add
add
xor
sbb
insb
fdivrs
xchg
in
subl
xor
clc
jecxz
cwtl
pop
repnz
es
inc
or
cmp
cld
mov
add
xor
jge
inc
lret
lcall
adc
add
mov
in
push
stc
std
jle
xor
xchg
rcll
mov
jno
add
add
test
std
test
add
dec
call
adc
mov
jne
lcall
or
shrl
fmuls
aad
scas
out
imul
add
cpuid
pop
jnp
push
loop
jae
mov
add
sti
dec
mov
fistpl
inc
aad
cmp
add
and
add
cmp
iret
popa
icebp
aas
loop
inc
jae
lock
repz
ljmp
imul
std
inc
cltd
aas
mov
push
inc
dec
mov
xlat
notl
jns
mov
xchg
iret
sarl
xor
loop
sbb
pop
jbe
dec
xchg
cld
mov
or
or
stc
and
add
movsl
outsl
dec
add
add
cld
test
or
add
jle
fdiv
mov
or
sbb
fwait
shll
or
stc
push
xor
movsl
cmp
fdivr
ret
xchg
cmpsb
lods
pop
sub
mov
adc
xor
mov
test
jp
icebp
mov
push
test
add
das
subl
add
add
add
add
test
mov
outsb
add
mov
sbb
out
lret
add
loope
push
sbb
lcall
outsl
add
in
loopne
mov
xor
dec
outsl
add
add
push
xor
in
jb
mov
je
out
inc
jmp
add
inc
jmp
loope
jl
add
add
outsb
jmp
xor
aad
xchg
add
roll
sub
xor
cmc
sbbl
xchg
je
insb
shll
clc
mov
mov
add
gs
enter
jo
lcall
out
std
xor
push
xor
xchg
mov
add
lock
pop
mov
adc
js
pop
mov
add
add
add
add
jae
add
xchg
mov
fdivl
insl
in
enter
fidivrs
inc
ss
and
fiadds
inc
fucomip
push
cmp
icebp
enter
stos
mov
mov
inc
loop
mul
lock
add
lahf
scas
mov
xlat
out
aas
loop
inc
je
xchg
testb
xchg
testl
add
add
add
lret
dec
lcall
and
dec
adc
cld
sar
mov
fcomps
out
fcomi
leave
add
mov
add
pop
icebp
and
mov
xchg
xor
mov
sub
popf
icebp
pop
jno
iret
dec
popa
icebp
cmp
sbb
fwait
inc
mov
xor
add
jle
aaa
pop
shrl
xor
add
add
jg
dec
cld
add
xchg
jbe
inc
test
or
insb
ss
add
aad
adc
push
sti
mov
arpl
push
scas
stos
sub
es
out
test
rcrb
ror
shll
sarl
jl
add
loope
mov
xor
pop
insl
cmp
inc
jb
js
ret
add
loope
mov
or
sarl
mov
sysenter
xchg
test
test
out
add
adc
inc
lea
inc
jmp
sbb
in
inc
dec
mov
lock
test
push
addr16
insl
or
xchg
xor
lods
jp
incb
add
jl
test
mov
add
inc
in
push
add
add
std
ljmp
add
std
andb
std
jae
xchg
ret
push
and
scas
push
pushl
mov
or
add
inc
and
jne
xchg
dec
or
push
pop
inc
xor
jle
call
testb
add
jg
or
add
call
loop
xor
cmp
sbb
ret
mov
insl
xchg
mov
aad
inc
gs
adc
add
mulps
jmp
dec
clc
mov
aas
adc
arpl
cltd
jae
pop
stc
xchg
and
dec
popa
cmpsl
testl
cmpsl
pop
add
pop
std
das
add
add
mov
test
neg
addb
pop
add
ljmp
movsl
xor
push
sub
xchg
xor
loope
sub
lea
mov
arpl
testb
cmc
mov
cli
lods
aad
out
cmpsl
sub
pop
gs
inc
mov
daa
push
jecxz
cmp
cmp
add
add
pop
mov
cmpsb
sub
pop
shl
and
pusha
sbb
shr
scas
or
sub
or
jmp
cmp
and
lods
push
pushf
cmpsl
add
sbb
scas
jge
mov
fdivl
in
jge
add
loope
push
lahf
dec
cmpsb
clc
push
dec
or
jmp
add
add
xor
jmp
clc
lahf
or
insb
cs
cltd
cmp
in
clc
cmpsl
movsb
adc
xchg
sbb
cmpsb
aad
bound
jle
or
loope
mov
xchg
cmp
lods
bound
cmpsb
std
push
enter
enter
add
iret
pop
incl
test
outsl
pop
out
mov
add
add
add
push
add
outsl
out
std
gs
inc
jmp
aas
testb
loop
data16
adc
std
pop
call
rorb
mov
insb
or
pop
subb
shrb
push
lret
sub
fucomi
xor
sti
sub
addr16
imul
out
std
mov
jbe
insb
lret
sub
push
incl
add
loop
jg
in
adc
inc
int3
mov
popa
inc
clc
mov
lods
mov
inc
pop
pop
fadds
add
sar
sar
shl
pop
lret
imul
mov
outsl
test
inc
pop
fmull
stos
test
aam
xlat
sub
add
add
add
xlat
jmp
jmp
cmc
sti
jmp
ret
mov
xor
dec
and
add
pop
cmp
clc
rol
mov
push
icebp
add
mov
out
push
aaa
mov
lahf
adc
pusha
add
pop
out
jmp
add
mov
imull
pop
inc
call
or
bound
add
cmp
out
xchg
xor
adc
or
xor
mov
jb
or
testl
jb
xchg
addr16
popw
add
fldl
and
std
fucomp
lcall
loope
add
out
call
aad
push
ret
loope
nop
sub
xor
push
pop
mov
jmp
add
add
mov
and
lods
and
sub
mov
push
sbb
cmc
inc
jmp
test
add
mov
int3
leave
cmc
inc
jmp
scas
lret
inc
jmp
stos
jb
add
enter
push
in
mov
js
add
call
inc
add
out
mov
mov
add
mov
pushl
loope
dec
mov
enter
jae
jge
xor
mov
mov
mov
decl
je
mov
jmp
push
jecxz
call
cmp
call
inc
add
fistps
call
aam
add
incl
add
sbb
sbb
jne
sbb
lcall
sbb
push
mov
pop
adc
sbb
aas
dec
mov
sub
js
test
add
lret
orb
aas
push
mov
divl
insb
cmp
jmp
add
dec
cmp
xlat
xchg
push
inc
loop
cmp
add
add
xor
or
sbb
in
cmc
sbb
jo
test
cmp
add
leave
sbb
adc
lea
xor
add
idivl
test
test
or
mov
jnp
dec
adc
addr16
or
scas
sub
aas
daa
ret
pop
das
adc
popf
das
call
inc
add
add
aaa
pop
mulb
in
dec
mov
adc
xor
add
push
and
loope
sbb
iret
pop
and
loope
adc
loopne
add
loope
int
mov
cmp
mov
loope
sbb
aaa
xor
cmc
pusha
or
mov
out
jae
and
call
add
add
or
mov
or
pop
or
leave
loope
jle
pop
or
or
xor
pushf
xor
jmp
xor
aaa
add
sbb
jle
jae
add
das
add
loope
mov
and
lds
adc
or
fdivr
push
push
cs
or
or
jmp
add
pop
adc
jecxz
cwtl
lods
out
std
arpl
inc
add
outsl
mov
xor
push
fdivl
add
dec
cld
mov
add
or
add
jnp
add
loopne
nop
xor
push
push
and
or
mov
insb
int
xchg
pop
insb
adc
repnz
inc
je
insb
rclb
push
add
jmp
mov
rol
inc
gs
push
cmp
imul
mov
loop
data16
push
xlat
add
loop
vmulsd
sar
xor
fstpl
push
xlat
enter
jmp
cmp
push
adc
inc
inc
jns
sub
xor
mov
xchg
sbb
sbb
xor
add
cmp
cmp
add
add
push
daa
add
jae
xchg
out
mov
mov
xchg
adc
insl
mov
rorl
rorl
add
hlt
or
aaa
aam
jecxz
es
mov
or
cli
ret
mov
int3
cmp
arpl
shl
inc
adc
aaa
mov
jmp
das
mov
fs
jns
mov
add
add
sub
cmpsb
pop
xor
fistps
cltd
fnstcw
push
jb
popa
dec
ds
jmp
outsb
xor
call
arpl
je
push
jne
shrb
mov
inc
xchg
mov
push
jmp
fwait
add
sbb
imul
push
fidivs
loop
xor
add
push
pop
clc
push
loope
or
xchg
cmp
jno
outsl
std
lods
jmp
mov
add
jp
add
dec
sub
add
add
loop
stc
fdivs
call
cmp
push
mov
adc
xor
and
mov
push
dec
and
sar
xor
dec
jne
jmp
add
dec
mov
add
shrl
or
lods
mov
add
dec
push
sub
jecxz
stc
mov
xor
jge
xor
add
or
inc
fdivrl
inc
add
fadd
je
ljmp
pop
adcl
mov
aam
int
popa
stc
add
and
add
xor
add
add
add
sbb
sysenter
push
addb
inc
loope
fsubrs
add
or
sar
sbb
adc
add
mov
xchg
and
xchg
mov
aaa
fadds
jmp
mov
jg
call
jo
add
hlt
push
dec
xor
sub
lea
adc
cs
fstpl
add
add
add
add
mov
call
lret
loopne
cmpsl
jmp
fildl
aad
cmp
sub
sbb
fildl
scas
mov
cmp
inc
call
pop
pop
imul
xor
push
adc
mov
leave
repz
arpl
dec
addr16
xor
cs
jecxz
jmp
sbb
jae
loop
add
fidivrl
jae
loope
add
sbb
test
gs
and
cmp
in
test
cmpsl
stos
dec
cld
jmp
test
jae
cld
mov
mov
add
push
or
rep
push
rorl
out
mov
mov
data16
add
lods
rcl
shlb
or
daa
cmp
hlt
adc
test
dec
das
aas
cmp
enter
sub
push
aam
pop
add
icebp
sub
aaa
pop
pop
adc
add
in
mov
sub
adc
in
add
sbb
push
xor
cmp
hlt
cmc
outsl
cmp
je
jmp
jno
repz
popa
add
add
das
add
cld
mov
or
adc
repz
andl
mov
xor
inc
mov
pop
or
loop
cmp
add
pushf
mov
xor
mov
enter
mov
loop
add
loop
mov
sbb
aaa
push
je
xor
add
add
lea
add
sbb
std
in
add
cmpsl
mov
add
xor
xor
cmpsl
adc
lcall
dec
xlat
enter
mov
xchg
sub
push
icebp
lret
xor
loopne
ljmp
ljmp
testl
ss
mov
mov
add
or
jmp
add
add
call
loop
fs
sub
filds
stos
jl
lret
mov
and
push
in
iret
pop
lmsw
sub
xchg
call
sub
add
or
out
xchg
mov
add
mov
in
xchg
stos
jb
sbb
push
out
decb
and
pop
xchg
cwtl
imul
dec
sbb
ljmp
cmc
sbb
loopne
add
mov
mov
sub
lock
xor
lret
jmp
push
mov
sar
std
insb
sahf
orl
and
movl
call
fisubl
decl
shll
dec
je
mov
add
cmpb
or
inc
insl
or
aas
jo
jle
mov
sbb
cld
int3
inc
ljmp
jb
cwtl
rolb
mov
jbe
not
ss
clc
jg
and
je
add
dec
xchg
sbb
cmp
je
jmp
sbb
sbb
ljmp
add
add
add
mov
jmp
mov
call
cmp
or
xchg
aas
push
adc
lret
dec
mov
add
out
xchg
xor
pop
push
inc
push
pop
pop
jle
sub
fimull
jnp
sbb
loop
add
xlat
adc
fiadds
xor
addr16
mov
imul
mov
add
add
jg
dec
adc
out
or
add
iret
pop
and
add
int3
fbstp
or
repnz
xor
and
cld
in
push
dec
and
mov
pop
and
add
sub
mov
xor
jl
ret
lods
mov
mov
inc
daa
inc
push
xchg
add
xor
add
add
out
mov
ss
mov
sub
sub
stos
repz
sbb
pusha
addl
mov
and
add
lock
or
lock
pop
ss
and
jmp
push
xor
inc
jmp
mov
push
add
xchg
xor
test
lds
push
add
add
inc
mov
hlt
jns
inc
jmp
inc
push
add
push
and
mov
xor
mov
mov
cld
xor
xor
mov
lea
cmp
pop
dec
decb
sbb
cli
std
fs
test
ds
cmc
std
fdivp
pop
sarl
popa
mov
and
mov
out
pop
pop
dec
xor
test
add
xor
and
inc
sub
sub
dec
mov
inc
pop
ret
push
ljmp
dec
pushl
inc
test
mov
xor
je
xor
scas
pop
push
inc
mov
pop
ret
mov
sub
sbb
add
cmp
push
mov
sbb
push
sti
xor
les
add
aaa
xor
mov
lret
sbb
ror
lret
shl
aam
sarl
mov
imul
cmp
les
push
hlt
std
jno
mov
pop
and
add
push
insb
leave
fcmovb
mov
call
or
or
mov
fsubrp
cmc
cli
mov
mov
add
pop
pushf
in
push
add
add
aaa
add
loopne
inc
rcr
fldcw
out
lods
mov
add
xchg
mov
sub
or
scas
sub
outsb
and
cmp
stc
mov
cmc
xchg
lds
sub
and
mov
mov
loop
fs
add
frstor
add
out
lret
jge
or
movsl
lods
sti
mov
mov
test
out
cld
mov
bound
push
insl
icebp
rcll
sti
std
cmp
add
pop
mov
and
cmpb
bound
leave
mov
mov
fidivrl
rclb
divl
add
add
sbb
popa
jle
mov
ret
add
div
push
mov
inc
push
add
add
xor
insl
call
push
sub
xchg
jmp
jae
aam
clc
paddd
call
jmp
jns
call
dec
cs
pop
push
outsl
add
orl
add
ficoms
mov
add
xor
popa
mov
add
jne
hlt
mov
jbe
cmp
add
inc
arpl
sbb
mov
mov
adc
add
shl
mov
leave
cmc
inc
dec
loope
jne
dec
je
push
repnz
push
and
pushf
in
decl
loop
sub
jecxz
add
pop
das
sub
add
add
scas
push
popf
ret
mov
cmc
mov
and
xor
xchg
add
xchg
xorb
xchg
xchg
test
mov
aas
aad
test
xchg
add
jl
notl
and
das
or
je
xchg
fs
add
stos
nop
mov
jne
outsl
push
jge
rolb
add
push
std
pop
xor
sbb
jecxz
loope
lods
sub
sarb
cmpsb
clc
xchg
sub
cmc
je
and
dec
push
mov
stos
mov
out
pop
ljmp
xchg
out
clc
in
pop
bound
bound
xor
mov
ret
inc
push
cmpsl
sub
add
add
lret
inc
ret
inc
push
jmp
push
and
dec
sub
aas
sub
jg
testb
mov
in
sub
idiv
in
xor
add
cli
std
push
sbb
ret
pop
mov
data16
jmp
jge
pop
cmc
pusha
cli
rcl
xor
xchg
loop
inc
aad
imul
inc
add
add
addb
cmpsl
jo
out
mov
lods
fscale
shl
jae
ss
mov
pop
mov
rorl
pop
lretw
mov
push
insl
or
dec
sub
add
xor
add
ljmp
dec
mov
pushl
sti
call
pop
ret
push
mov
lods
jmp
jne
jnp
hlt
add
add
adc
add
daa
dec
je
xor
or
scas
hlt
in
xor
decb
je
pop
mov
enter
add
clc
mov
dec
lds
inc
test
push
push
mov
mov
mov
loop
cmp
cwtl
mov
adc
adc
test
cli
push
pop
mov
das
pop
aam
repz
add
add
add
add
inc
ljmp
stc
je
jle
add
add
loop
in
dec
aad
or
cmp
decb
cmc
call
dec
clc
push
xchg
test
js
inc
add
mov
jp
pop
sbb
int3
cmc
and
add
lods
repnz
out
jle
imul
and
add
add
movsl
lods
sti
test
sub
inc
es
cmp
and
movsb
sti
mov
lods
sti
cmp
pop
bound
aam
es
add
es
pop
imul
lahf
and
adc
neg
and
sbb
jecxz
std
cmp
scas
fisttpll
jmp
in
icebp
bound
cmpsl
sub
add
jmp
and
call
mov
jl
psllw
jle
add
adc
xor
sbb
test
sbb
frstor
repnz
jb
lods
std
mov
lods
fnstcw
fsubrs
mov
pop
push
ret
pop
mov
loope
imulb
cmpsb
jnp
lods
mov
loope
xor
repnz
add
add
jmp
loope
bound
sub
add
adc
xchg
loop
shll
mov
test
mov
imul
lahf
or
cmp
std
jge
jae
or
std
mov
test
es
and
or
test
xor
add
andb
dec
or
add
add
add
add
adc
lock
inc
add
xor
mov
sub
mov
jbe
je
mov
or
adc
inc
sub
mov
jmp
fsts
xor
flds
mov
lret
pop
pop
adc
mov
push
lret
sbb
std
xor
pop
loope
icebp
mov
adc
add
add
add
add
lods
or
cmpsl
pop
push
and
aad
popa
cmp
push
mov
fiaddl
ficoml
add
add
inc
fisubl
or
adc
outsb
or
andb
mov
testl
push
fnstcw
shl
mov
xchg
pop
jmp
add
shll
sub
add
xor
lods
pusha
icebp
aaa
mov
jb
mov
push
xlat
xor
out
arpl
test
add
inc
lcall
insb
testl
cmc
cmc
fs
aaa
out
push
pop
loop
out
and
out
xor
cli
pop
in
and
or
xchg
in
mov
sub
in
and
add
add
add
add
add
mov
adc
lret
bound
fisttpl
cmp
enter
and
push
mov
in
push
add
fsubs
ret
out
subl
orl
fsubl
imulb
rorl
test
adc
fdivs
dec
vpmaddwd
adc
std
jmp
sbb
add
lock
out
out
std
aaa
mov
clc
ret
das
pushf
xor
add
mov
add
lret
movsl
push
mov
mov
ds
add
inc
stc
int
jnp
push
add
mov
mov
add
repz
test
incl
sub
jnp
cmpl
ret
add
incl
add
add
int
in
test
pop
aaa
mov
rolb
dec
inc
mov
xor
add
mov
je
mov
mov
ret
loop
push
decb
fistl
in
pop
rcll
xchg
xchg
inc
popa
cltd
xor
addr16
aam
pop
adc
xor
flds
maxps
in
pop
xchg
mov
testl
xchg
sbb
add
clc
aad
popa
jne
sbb
add
sub
mov
xchg
dec
or
add
cmp
fwait
mov
push
pop
cmp
xor
imul
jb
icebp
jg
mov
bound
mov
je
clc
data16
cmp
adc
popa
mov
mov
add
mov
mov
nop
sub
insb
cmp
mov
add
xor
roll
mov
mov
dec
jo
aad
in
mov
mov
mov
subb
adcl
mov
inc
push
jmp
push
daa
sub
push
xlat
mov
jmp
inc
jmp
lcall
pop
add
add
jmp
pop
sub
std
cmp
fadds
ljmp
jne
mov
mul
negl
push
and
pop
xrelease
fdiv
cmp
mov
jecxz
aaa
cmp
std
fs
add
mov
add
es
mov
out
jge
mov
mov
aam
sub
xor
repnz
add
jbe
sub
aaa
sub
xor
xor
mov
cld
cld
loope
adc
xor
lock
push
test
add
jo
rclb
or
add
mov
std
dec
inc
je
dec
sbb
pushf
add
lcall
xchg
cmp
xlat
divb
test
add
or
sbb
jbe
or
jnp
jae
rolb
and
mov
pop
pop
inc
pop
sarb
mov
ss
xchg
mov
mov
xchg
or
cmc
je
mov
ljmp
mov
jno
mov
or
mov
fiaddl
lret
lods
bound
adc
hlt
cmp
scas
pop
add
add
or
out
sub
aas
loop
mov
add
adcb
mulb
sbb
xor
ret
cmp
xchg
mov
aam
and
or
add
pop
lock
insb
mov
cmp
leave
sbb
add
add
mov
ja
popf
out
add
cltd
mov
mov
popl
es
hlt
or
mov
cmp
sbb
out
insb
out
fsubrp
cmp
inc
outsb
pop
add
dec
je
jge
out
call
sbb
out
test
fabs
and
test
add
add
ret
lock
sub
xor
test
xchg
xor
sbb
flds
insl
out
add
nop
jle
cltd
fistpl
addb
lret
out
jmp
addb
jmp
std
mov
add
lret
int
xor
out
add
mov
pop
and
aaa
test
add
cmp
add
daa
add
add
cmp
movswl
add
or
pop
or
fsin
je
add
add
sti
xor
mov
shrl
incl
mov
cmp
mov
adc
lret
xor
je
fmuls
scas
add
or
add
adc
int
and
mov
psrad
jmp
lods
cmc
sbb
mov
sbb
imul
pusha
mov
mov
mov
and
or
mov
push
addr16
add
loop
mov
loop
jg
jbe
fwait
cmp
adc
cmp
sub
loopne
mov
add
and
mov
decb
mov
idivb
aas
loop
enter
shlb
xor
rol
out
loop
aas
cld
test
dec
sbbb
fistl
icebp
jnp
ds
pop
sbb
xor
stos
filds
sbb
pop
test
sbb
xor
mov
rorl
add
add
inc
call
sbb
insl
or
in
sub
int3
loop
xchg
add
out
out
loope
loopne
fcomps
dec
lods
loop
cmp
pop
lret
idivl
jp
mov
add
jecxz
gs
and
push
int3
pop
and
push
call
je
ss
in
loop
imul
jb
test
in
jnp
add
add
add
add
add
clc
bound
cmp
mov
add
mov
into
clc
bound
cmp
or
sti
mov
and
dec
adc
push
call
and
pushl
std
decl
das
sarb
or
inc
out
std
cvtdq2ps
ret
inc
jnp
lods
add
add
or
and
xor
xchg
mov
mov
mov
cmp
cli
cmp
cmp
sub
arpl
add
sub
sub
push
imul
sbb
std
addb
or
add
add
pushf
or
fimuls
add
lret
xor
test
or
popa
loop
add
add
rsm
sub
mov
jge
xlat
ja
adc
pop
sbb
decb
fwait
call
inc
jae
fildl
inc
popf
and
cs
mov
dec
cmp
inc
jae
ss
add
repnz
adc
repnz
inc
cmpsl
fucomp
aad
sub
pop
lock
add
sahf
jg
ret
fdivrl
xor
add
xor
fstl
or
xor
shl
xor
add
push
movsl
leave
je
pop
mov
fs
sbb
jmp
adc
enter
fbld
clc
jecxz
or
push
pop
call
lods
fs
filds
mov
cmp
add
add
inc
cmpsl
add
movl
mov
push
cli
nop
cmpl
outsb
mov
adc
ficoms
sbb
xchg
out
pop
icebp
add
cmp
pop
pop
out
cmpsb
sarb
and
jle
mov
loope
mov
and
add
fimuls
xor
add
adc
rcll
add
sub
push
ret
loope
flds
mov
clc
insb
add
add
popa
xor
mov
cwtl
stc
and
push
xchg
loope
adc
and
test
jne
push
decb
xchg
lods
stos
lock
enter
sub
adc
fidivrs
add
ret
cmpsb
push
push
mov
js
push
push
mov
decl
mov
cli
adc
add
push
push
fcompl
push
add
add
inc
decb
adc
lds
or
hlt
cmpsb
aas
incb
mov
add
ret
push
mov
mov
mov
pop
inc
adc
sbb
std
andb
jbe
pop
inc
add
mov
add
dec
out
dec
cmovo
xor
push
loop
xchg
add
mov
arpl
jle
mov
adc
adc
lret
add
loop
mov
or
test
lcall
and
shrl
mov
arpl
insl
dec
inc
jae
xorl
cmp
arpl
inc
mov
es
and
sub
cmp
or
xchg
mov
mov
stc
out
add
pop
adc
ja
lret
and
out
xor
loop
call
sbb
out
sub
stos
stos
pop
aad
inc
repz
add
mov
fiadds
mov
cmpsl
inc
and
dec
hlt
adc
mov
mov
enter
xor
pop
loopne
add
push
mov
xchg
daa
inc
mov
xor
cmp
add
mov
call
mov
inc
outsl
hlt
lds
mov
jge
dec
add
loope
push
aam
mov
mov
cmpsl
in
push
loope
mov
test
push
sub
sub
xchg
rcl
push
loope
test
loope
mov
mov
rolb
das
or
insl
insb
mov
jae
test
add
loope
push
push
cs
mov
out
inc
test
call
jns
std
push
stc
jg
call
mov
push
add
mov
in
sub
call
jo
add
cmp
gs
loope
add
lds
add
push
repnz
push
shll
xor
lds
incl
add
pop
jne
sub
mov
cld
sub
xchg
jno
inc
jnp
mov
fwait
mov
sub
std
mov
test
je
add
push
pop
mov
stc
sub
push
nop
adc
add
xchg
js
repnz
sar
ret
cmc
pop
stc
mov
inc
inc
or
jle
cmpsb
sbb
mov
add
aas
incb
lea
out
out
lods
or
data16
out
gs
pop
stos
add
loop
addl
cmp
mov
jge
popa
ja
mov
lret
cmp
jmp
dec
cmpsb
out
inc
out
jno
lods
sub
xor
jle
enter
fcoms
sbb
cmp
movb
add
subl
in
fistpl
outsl
ret
out
push
mov
push
fnsave
pushf
je
out
mov
stos
mov
fldcw
lods
insl
add
xor
xchg
dec
call
mov
scas
lods
xchg
loope
ss
push
add
xor
or
pop
mov
sbb
jge
loopne
mov
xor
in
cmp
rorl
ds
add
add
add
bound
shlb
out
inc
loop
lret
ds
loopne
inc
sbb
mov
push
cmp
loope
sub
imul
add
sub
inc
sbb
aaa
fcomip
push
es
mov
hlt
mov
fldl
pop
shlb
daa
sub
mov
cltd
jns
loope
fbstp
popa
push
or
add
add
mov
gs
lea
clc
inc
rol
std
dec
bound
je
xchg
ds
push
sub
repz
push
push
xor
lea
and
dec
cmp
pushl
cmc
test
daa
incb
lret
xor
jmp
xor
lea
push
cld
pushl
popa
mov
add
cmp
add
daa
sub
mov
inc
test
jle
mov
popf
add
xor
add
dec
adc
jbe
sbb
gs
call
addr16
sar
sub
jnp
sbb
ss
or
out
xor
arpl
add
loop
test
outsl
fistpll
add
ljmp
add
push
inc
imul
lret
lret
lods
lret
dec
mov
push
jmp
add
pop
cmpsb
negl
cld
dec
push
dec
gs
jge
mov
pop
pop
jp
dec
pop
or
jp
sbb
pop
xor
pop
fcmovnbe
repnz
scas
mov
inc
aam
sbb
dec
out
dec
and
or
lods
sti
xchg
jp
jbe
mov
fwait
add
add
mov
add
cmpsb
das
int3
jbe
jnp
mov
adc
shll
out
pop
sub
rcr
xchg
aad
cmpsl
sbb
rcrl
enter
shll
ss
xchg
mov
rcrl
xchg
shl
sbb
movsl
sbb
jge
inc
pop
jl
cmpsl
cmpsl
pop
js
inc
loope
add
jg
mov
jge
jb
add
negb
std
mov
push
xlat
std
fmul
inc
inc
jmp
pop
fildl
mulb
add
loope
inc
adc
mulb
mov
pusha
fmuls
jne
lods
mul
push
sub
pop
cli
cmpsb
clc
adc
iret
cwtl
out
je
cmp
add
pop
push
inc
popa
sbb
cmp
dec
xor
push
scas
shr
gs
add
add
xor
inc
out
xor
add
aaa
ret
jne
push
call
rcrb
add
mov
je
push
inc
clc
sbbb
cmp
mov
mov
inc
jecxz
pop
cld
cld
scas
imul
shrl
je
test
add
mov
add
inc
xchg
cmc
lea
inc
in
xchg
sub
jmp
cmp
and
xchg
xchg
stc
add
movl
mov
push
ja
jle
lds
aad
pop
lcall
js
ljmp
incl
mov
xlat
pop
repnz
loop
jmp
pop
ja
cs
add
outsl
mov
add
pop
outsl
jg
add
movl
adc
lret
push
aaa
jle
add
aad
push
loop
fnstcw
pop
insl
sbb
mov
in
sar
lcall
adc
mov
push
leave
push
daa
add
icebp
adc
push
cmp
add
mov
fdiv
pop
jbe
js
cmp
mov
loop
call
scas
fdivs
cmp
push
push
add
iret
push
stc
xor
mov
popf
or
in
add
movsb
jne
and
iret
out
and
jb
into
fdivs
and
bound
cli
test
bound
fcompl
loope
push
aaa
sub
add
test
mov
inc
lds
add
leave
mov
cld
jmp
out
fidivs
add
cmp
jmp
and
into
mov
dec
and
push
or
jmp
mov
and
jmp
enter
insb
roll
loope
push
shll
jge
cmc
loopne
mov
sbbl
out
or
xchg
call
add
cmp
push
xor
pop
and
add
jnp
or
sar
jne
xor
ljmp
xchg
lea
cmp
add
clc
and
jmp
xor
decl
mov
add
dec
mov
call
mov
push
adc
pop
push
cmp
inc
jbe
and
add
sub
inc
mov
mov
mov
lea
mov
mov
push
imul
and
sub
popf
adc
sub
flds
popf
adc
xor
add
mov
loop
in
mov
decl
inc
mov
imul
incl
and
xchg
sbb
orl
add
add
pop
addr16
subl
std
or
std
in
xor
movsb
mov
xor
xor
xor
push
mov
jmp
pop
insl
push
out
sbb
inc
stc
lea
adc
insb
ficompl
jo
sub
pop
jbe
mov
loop
imul
add
xlat
mov
add
xor
pusha
sbb
gs
enter
add
xor
sbb
sysret
fiadds
loop
mov
mov
imul
aas
repnz
lds
rcl
mov
pop
std
imulb
stos
outsb
and
insl
sahf
inc
or
push
stc
mov
into
lret
add
add
leave
std
and
aas
lods
fidivs
icebp
in
mov
mov
push
push
mov
dec
icebp
or
adc
or
fistpll
jae
loope
shr
pop
mov
insl
cmc
ss
fidivs
sbb
pop
nop
jnp
jmp
inc
loope
or
mov
outsb
gs
add
xlat
sub
call
pop
movsb
ret
adc
add
add
arpl
mov
xor
outsb
xlat
xor
push
inc
xor
add
cmp
add
out
push
pop
xor
add
divb
push
push
scas
js
push
mov
fdivrp
pushf
mov
je
xchg
pop
cmp
cmp
outsl
or
sub
adc
cs
andl
mov
pushf
std
mov
add
add
add
add
aad
add
or
xor
aaa
cmovo
cs
dec
sar
into
lds
not
add
loop
mov
hlt
das
rcrb
jmp
mov
mov
lock
add
sti
std
pop
movsb
mov
neg
mov
ds
call
popa
scas
add
ljmp
clc
arpl
stc
call
andl
add
add
add
add
or
js
out
or
iret
xor
mov
push
cmpsl
add
lods
mov
fidivs
jnp
fistpll
divb
cmpsb
out
stos
add
push
pop
adc
xor
inc
fidivs
out
push
and
cmp
stc
scas
ljmp
out
mov
xor
inc
jnp
inc
add
add
loop
mov
add
xor
and
mov
pop
loop
and
mov
popa
icebp
rcrl
jmp
cmp
loop,pt
add
loope
arpl
loope
add
je
push
or
push
cli
xor
mov
adc
loope
add
dec
cmp
jmp
and
ret
add
sub
pop
add
xor
jmp
in
std
xor
add
out
adc
jo
bound
and
mov
std
xchg
imul
adc
push
lds
stos
repnz
iret
xor
xchg
cmp
push
push
xchg
xor
or
xlat
fcoml
fdivrs
pop
sub
xchg
popa
sub
add
add
add
lret
add
aad
add
mov
mov
into
call
icebp
jno
cli
repnz
arpl
push
ficoml
inc
icebp
cs
mov
lret
push
sbb
aas
sub
mov
mov
insl
cli
std
popa
add
call
add
add
xchg
add
loop
mov
add
adc
inc
std
sub
xlat
push
mov
inc
inc
or
or
loop
xchg
xor
sbb
push
les
insl
or
push
cld
sti
jne
push
call
fwait
lcall
imul
jle
add
add
xor
outsl
int3
pop
out
cltd
cmp
outsl
out
mov
push
sbb
les
jb
ljmp
les
ds
test
les
popa
mov
fisttps
xor
dec
xor
scas
cmp
jmp
pop
out
or
je
ljmp
or
mov
inc
add
add
lods
cmpsl
outsl
loope
sub
jnp
push
pop
arpl
fisubrl
sbb
adc
hlt
sbb
inc
jmp
push
std
lahf
or
xor
stos
icebp
push
bound
lds
mov
and
data16
jge
js
icebp
sbb
sbb
jmp
shl
add
cmp
add
pop
insb
and
inc
pop
push
into
or
call
cmpsb
cmp
mov
sub
dec
adc
add
mov
sahf
adc
push
bound
dec
loope
aam
add
add
int3
pop
xchg
xlat
sbb
mov
xor
lcall
mov
das
test
push
ret
xor
ret
enter
push
jo
jge
repz
and
mov
adc
aad
push
add
sti
mov
add
push
stc
lcall
add
cmp
mov
pop
mov
pop
or
test
pop
add
cmp
push
xchg
pop
ss
pop
xor
add
add
lcall
mov
xor
cwtl
ret
pop
push
mov
push
in
popa
xchg
cmc
std
mov
sbb
jp
jae
popf
add
ret
mov
dec
stc
sbbl
arpl
daa
mov
aam
adc
out
add
jo
outsl
or
push
xor
fcoml
ret
shlb
hlt
shll
pop
aas
add
add
cld
pop
mov
aam
lock
mov
lods
inc
sbb
fs
jmp
or
mov
add
dec
jo
pop
inc
xor
jmp
pop
cmova
rcrb
push
xor
aas
fisubs
lret
mov
mov
xorl
pop
inc
loop
hlt
lahf
shlb
mov
fcomi
idivb
add
gs
add
add
dec
and
or
jbe
out
std
mov
adc
sub
mov
add
testb
out
mov
add
les
mov
jo
test
dec
jb
mov
out
cmc
ss
test
sub
mov
cld
das
and
je
or
daa
add
add
xor
cmc
je
es
add
test
dec
adc
out
les
cmp
adc
mov
ret
inc
mov
adc
arpl
inc
dec
cmp
mov
or
ja
jne
ret
mov
decl
adc
ret
std
ja
lcall
pop
adc
notb
movsb
fcoml
rolb
add
out
or
push
push
push
mov
aas
add
pop
js
jnp
xchg
ds
add
push
stos
ds
jnp
mov
movl
cmpsb
loop
add
loop
pop
add
movl
inc
loop
rorl
push
mov
loop
lods
std
inc
aas
jb
lods
fildl
rclb
xor
mov
pop
mov
or
xchg
mov
add
cwtl
fldcw
add
repnz
out
jmp
mov
xor
cs
push
cmp
loop,pt
xor
and
pop
icebp
out
add
xor
inc
loop
imul
jmp
sub
add
mov
inc
loop
aaa
std
mov
pop
dec
add
add
dec
cltd
add
or
inc
loop
mov
into
xor
repnz
sub
icebp
cmp
gs
daa
pop
jb
mov
mov
or
test
out
incl
leave
mov
jge
add
xor
sub
add
mov
jo
mov
jmp
sub
add
add
add
mov
clc
fs
call
insl
mov
rcrl
and
add
inc
setle
sub
sub
inc
add
mov
call
outsb
mov
mov
xor
inc
xchg
std
dec
scas
mov
call
imull
aas
jmp
loope
add
add
add
mov
lds
fwait
mov
movhps
xor
mov
fadd
fistpll
mov
pushf
lret
mov
imul
mov
jge
xorl
add
cltd
clc
std
insb
lret
push
mov
das
test
aaa
or
ss
inc
inc
ss
lea
lret
push
lea
add
xchg
stc
lcall
sti
test
cmp
incb
pop
mov
gs
cs
mov
lods
in
adc
jns
inc
int
xor
xor
js
adc
mov
jl
lcall
jl
repnz
je
pop
jnp
jp
pop
or
push
mov
cwtl
push
push
enter
add
add
fsts
mov
add
mov
jae
imul
sti
loop,pt
out
xor
movl
std
jecxz
dec
lock
mov
lock
cld
aaa
cmpsl
insl
out
sub
pop
int
mov
push
jns
mov
out
fstps
loop
sbb
aaa
mov
js
movsl
adc
cmpsl
insl
out
add
add
adc
jbe
lods
mov
icebp
push
daa
andl
cmpsl
jb
std
cmpsb
dec
lods
out
jecxz
mov
mov
decl
popa
sbb
shl
fs
mov
mov
in
inc
jne
add
jmp
ds
dec
shl
mov
clc
xchg
out
data16
add
mov
jno
stos
loope
mov
mov
test
xor
inc
jmp
loope
std
in
sub
sti
aas
scas
and
je
ljmp
cmpsb
cmpsb
push
ret
xchg
pop
cmpsb
mov
mov
cmc
mov
jb
bound
icebp
sbb
clc
pop
mov
adc
inc
pop
add
add
or
jne
or
je
cmp
imul
pop
mov
call
xor
pop
mov
pop
pop
clc
pop
xchg
dec
mov
sub
decl
scas
jns
xchg
mov
add
jns
add
jns
dec
mov
add
out
mov
lret
sti
test
mov
add
mov
add
ds
std
push
loop
insl
push
push
mov
js
fadd
add
stc
iret
js
ficoms
out
add
daa
int3
jl
ficompl
add
sti
pushf
adc
into
mov
rcl
mov
in
xchg
lret
add
cs
add
add
movsl
sbb
add
add
movsb
ljmp
sbb
fistpl
cmpsl
ljmp
loopne
or
into
push
add
xor
es
add
mov
add
mov
sbb
and
loop
adc
push
add
xor
out
sbb
xlat
add
movsb
jne
mov
add
fs
add
and
out
adc
leave
mov
mov
sub
add
dec
call
add
stos
cmpsl
outsl
xor
push
xchg
loop
xchg
sbb
daa
add
xor
int
mov
int3
or
icebp
cmp
pop
sti
mov
pop
mov
mov
inc
or
aam
and
fwait
push
ret
enter
add
loopne
test
push
jb
mov
loope
std
fsubrl
cmp
sti
out
mov
sbb
xor
std
pop
and
sbb
xor
jmp
imul
mov
cwtl
mov
xchg
in
jo
add
xor
adc
es
jne
leave
jno
jl
cld
adc
add
add
add
add
xor
pop
mov
xor
je
push
std
push
lods
inc
or
xchg
mov
push
std
enter
push
ret
push
mov
pusha
sti
jne
xor
or
inc
sbb
push
sub
ss
cld
adc
add
test
inc
test
das
std
inc
in
je
rolb
dec
xor
mov
je
add
loop
sub
push
and
add
mov
and
dec
jo
out
outsl
or
stos
out
std
test
jae
je
pop
pop
mov
sbb
pushf
jp
sub
outsl
adc
popf
adc
dec
int3
out
ljmp
mov
das
addb
jge
push
sub
notb
mov
test
add
add
fimull
or
dec
std
test
inc
sti
pop
cmpl
xor
xor
ss
cmp
out
adc
fidivs
iret
dec
pop
cmp
dec
pop
cmp
out
hlt
inc
loop
lods
pop
popa
icebp
aam
popa
mov
ljmp
cmpsb
cmc
xor
idivb
lcall
add
sti
ljmp
loop
jl
lahf
cmp
call
mov
in
push
pop
and
fld
and
outsl
int3
mov
add
jo
jmp
loope
setno
cs
call
inc
cmp
std
xchg
push
pop
stos
ljmp
xchg
mov
dec
ficoml
out
std
aad
sub
roll
add
mov
sub
fs
cld
cmp
jmp
jle
pop
mov
es
popa
and
lds
loope
mov
or
je
or
add
repnz
insb
add
add
scas
dec
call
test
sub
xchg
sti
sbbl
mov
in
aaa
mov
hlt
add
add
mov
clc
or
push
mov
xchg
xchg
jle
je
and
or
std
out
lock
test
pop
sub
push
push
outsl
or
jge
mov
sub
inc
lods
addr16
sub
cld
outsb
clc
add
inc
call
mov
adc
jmp
mov
push
dec
jae
add
push
jno
std
push
fimuls
ret
cmp
ficomps
mov
adc
movsl
pop
test
lea
adc
cltd
out
push
icebp
mov
cltd
test
outsl
je
lds
or
in
iret
push
loope
xchg
cli
add
outsl
sbb
xor
xlat
pop
cmc
aas
loop
push
hlt
pop
lahf
add
add
add
das
rcl
jecxz
out
popa
xchg
loop
jg
inc
add
ja
xchg
popa
popf
mov
add
jno
add
stos
sahf
loop
add
daa
add
mov
fisubs
scas
pop
in
ret
add
and
loop
cmp
add
fdivr
lods
repz
mov
or
push
xor
loop
nop
flds
add
loop
sub
push
scas
push
loop
das
add
movsl
jb
add
mov
add
aam
xor
out
ljmp
movsl
call
cmpsb
and
add
and
bound
stos
jae
ss
sahf
inc
mov
call
xchg
pushf
mov
sbb
lods
fsubrs
mov
je
add
popf
movsb
call
insb
sbb
shrl
std
jmp
sbb
test
sub
std
pushf
roll
call
arpl
call
call
jbe
pop
jo
ret
arpl
subl
sbb
jg
sti
ljmp
aaa
pop
cmp
dec
aas
mov
inc
testl
xor
add
push
dec
repz
imul
aaa
imul
dec
xchg
jno
jl
mov
cmp
test
mov
call
mov
push
and
adc
or
ljmp
fbld
imul
xor
lcall
add
add
add
add
cmpsl
jmp
xor
je
ret
adc
or
or
sbb
cmpb
jae
push
inc
and
out
or
pop
movb
sbb
push
pop
adc
cmp
dec
jb
cs
and
jecxz
jg
cmp
dec
cmp
adc
fucomp
add
add
jno
jbe
xor
inc
xchg
imul
add
adc
pop
sub
sbb
movsl
xor
mov
push
push
stos
mov
dec
add
push
push
push
sahf
adc
loop
cmpsl
push
pop
add
fdivp
flds
mov
push
pop
repz
add
jne
xor
xchg
add
and
imul
test
add
pusha
cli
or
pop
jb
aad
stos
std
jb
scas
clc
push
adc
fsts
test
lea
test
dec
stos
std
jb
outsl
push
jb
scas
in
or
or
loope
add
pop
cmp
scas
fidivs
add
fidivs
xchg
dec
ret
xchg
adcl
add
add
pop
fstps
shrl
call
inc
xor
jmp
push
cwtl
xor
loope
xchg
mov
adcl
je
mov
popa
push
ljmp
mov
or
mov
inc
lock
xor
ss
fldl
jge
das
jno
add
add
mov
clc
jmp
jno
je
pop
lcall
add
mov
inc
xor
into
test
ljmp
jno
je
call
dec
test
xor
stos
inc
add
aas
fistl
xchg
mov
xor
in
in
std
or
jle
loop
xchg
inc
pushl
mov
xchg
add
cmp
in
sbb
add
xor
fdivl
jp
inc
add
and
dec
rcrb
xor
or
pop
and
mov
cmpl
add
and
icebp
push
hlt
xchg
cltd
and
aad
outsl
add
cltd
iret
inc
mov
loop
jae
xor
push
xchg
xor
or
loop
daa
push
imul
add
mov
stos
pop
add
add
add
add
lret
cmpsb
aad
push
dec
xlat
fimull
lcall
xor
bound
xor
inc
aaa
fucomi
dec
out
ss
pop
mov
jno
cs
in
or
or
add
mov
adc
sbb
fs
xchg
inc
jb
mov
mov
xchg
add
add
xchg
or
or
mov
mov
lods
cmpsl
sub
pushf
fs
addl
out
pop
or
xor
pop
clc
push
fsubrs
mov
loope
inc
int
push
ret
dec
sbb
xchg
mov
add
scas
mov
or
lock
dec
sub
xor
mov
add
les
mov
shlb
add
xchg
js
and
div
inc
sbb
adc
cmp
or
lds
rclb
adc
mov
dec
call
lock
inc
or
push
sub
mov
movb
push
jl
and
add
add
call
mov
push
pop
pop
rolb
push
shrb
dec
hlt
add
push
xor
and
out
loopne
jmp
add
cmp
mul
cwtl
add
jo
nop
jmp
pop
pop
add
imul
jg
push
mov
inc
add
dec
add
xchg
adc
mov
add
pop
rorl
dec
sub
test
cltd
in
aas
popa
mov
cmpb
push
xor
lcall
loop
pop
shlb
add
iret
sub
cmp
xor
push
arpl
mov
loope
movsl
inc
loop
push
xlat
icebp
test
inc
loop
bound
imul
dec
lcall
les
add
push
sub
inc
loop
cmc
or
loopne
loop
sub
add
mov
mov
mov
ds
dec
xchg
jecxz
mov
sub
mov
imul
sub
sbb
cmpsb
inc
inc
sub
jmp
ljmp
cld
sbb
movsb
mov
add
adc
adc
out
shl
stos
sbb
hlt
frstor
std
hlt
cmc
xor
sub
pop
pop
sub
and
imul
cmp
cmp
std
jmp
jmp
insb
inc
jmp
adc
pop
inc
stos
imul
lds
mov
cld
adc
inc
mov
divl
jl
cld
adc
sub
inc
cld
sbb
add
setnp
xchg
sti
push
int3
push
add
xchg
std
sub
add
scas
mov
je
or
je
or
repz
lods
add
mov
xchg
lea
call
incl
add
push
cmp
call
pushl
fucomp
jnp
xchg
std
pop
lret
xchg
mov
add
roll
xor
repz
mov
or
pop
jecxz
add
shrb
cmp
pushf
icebp
out
fs
stc
mov
jmp
mov
inc
iret
je
and
or
or
add
add
cmp
jmp
push
addr16
decb
mov
jmp
andl
lahf
pop
clc
push
fidivs
dec
and
shl
cld
roll
mov
add
das
and
sahf
shll
sub
repnz
push
mov
inc
add
add
hlt
fdivp
xchg
stos
add
shl
out
push
push
push
out
aad
aam
call
cmpb
fistl
repz
sahf
xchg
sti
sub
sub
ss
arpl
negb
sbb
jnp
mov
xor
pop
or
subl
sahf
jae
xchg
popf
dec
bound
add
lcall
lahf
xor
adc
stos
inc
push
sbb
xor
sahf
je
or
fmul
test
call
dec
sub
or
mov
cmp
jmp
xchg
test
in
xor
xchg
mov
jmp
stos
jl
pop
pop
ret
add
dec
repz
add
clc
dec
xor
and
shr
and
mov
std
sub
sub
xlat
je
xor
cmp
decl
shrd
add
decl
das
mov
add
jg
jl
enter
or
inc
jae
fadd
jo
jmp
inc
rcrb
ret
decb
pop
shrb
add
add
adc
add
xchg
or
xor
xchg
mov
sub
xor
mov
mov
or
or
aaa
aad
inc
cmp
sarl
xor
xor
push
push
frstor
ret
jg
cmp
inc
cmp
pop
iret
std
or
dec
jnp
or
inc
test
notb
dec
sbb
add
add
add
aam
into
mov
cltd
push
pop
mulb
aam
mov
jb
lret
jno
lret
ficomps
in
jl
inc
es
pop
daa
xor
jo
jl
scas
add
adc
pop
cmc
out
ss
out
cmpsl
push
int3
pop
jb
inc
inc
fwait
jnp
mov
pop
rcrb
lods
hlt
scas
xchg
fcmovb
mov
sub
sbb
add
adc
cld
iret
cmp
add
and
mov
cwtl
push
out
xor
push
lods
iret
push
cs
dec
scas
iret
loop
fidivrs
sub
sub
arpl
adc
jno
loop
out
or
sub
sbb
call
sub
std
stos
xor
xor
fnstenv
pop
add
enter
inc
scas
out
sti
cmp
cmpsl
sbb
xor
andl
xor
pop
movsb
fwait
jae
test
cmpsl
inc
add
outsb
incl
inc
push
push
mov
scas
in
pop
insl
or
orl
add
add
sub
inc
push
cmp
sbb
icebp
stos
push
mov
mov
pop
call
test
add
jne
add
jg
inc
pushf
test
das
or
and
xor
inc
add
jp
dec
out
jo
add
loop
add
or
aam
inc
adc
cmc
or
mov
push
inc
adc
add
leave
sarl
mov
dec
xlat
dec
popa
mov
inc
or
mov
or
mov
jno
mov
test
xor
pop
inc
sbb
cmp
inc
pop
nop
fsubs
sbb
mov
sbb
push
inc
or
mov
inc
or
ret
fldl
flds
popa
stos
add
and
add
add
xor
pop
sbb
jno
add
test
sub
xor
sub
sbb
test
sub
cs
test
pop
push
test
jae
test
insl
push
test
sbb
inc
push
test
dec
push
test
xor
add
push
test
out
push
test
mov
roll
loop
cmp
leave
aas
xchg
iret
mov
and
sub
add
jo
xor
pushf
mov
jo
push
mov
mov
cli
lods
cmpsl
push
mov
hlt
negl
out
jmp
imul
cltd
icebp
mov
cmpsb
mov
lds
and
push
sub
loopne
mov
outsb
inc
repnz
inc
adc
pushf
cmp
and
mov
cld
cwtl
xchg
push
add
add
or
mov
loope
pop
fisttpll
jae
mov
cmp
insb
lcall
push
and
test
xor
bound
mov
inc
sbb
call
inc
jb
test
add
call
xor
add
xor
add
sbb
push
int3
mov
add
xchg
clc
addr16
jne
push
lods
jns
incl
insb
push
cld
sub
xor
xor
xchg
pop
mov
pop
push
call
test
shlb
or
sub
imull
mov
pop
sti
adc
loop
adc
jns
add
or
rcr
add
push
lret
loop
dec
clc
mov
adc
std
lods
mov
jae
loop
xor
sub
xor
call
mov
jne
sahf
xor
std
and
mov
add
xor
out
or
aas
loop
inc
cmpsb
mov
fsub
pop
mov
jg
xchg
push
and
out
out
pop
xor
cwtl
cli
push
enter
pop
cli
das
test
xchg
fidivrs
xor
add
stos
int3
out
pop
jge
movsl
dec
mov
sbb
jo
jg
xor
add
mov
jbe
fs
lahf
add
out
lds
cmpsl
add
adc
pop
in
add
xor
add
sub
addr16
xchg
jbe
shl
push
movsl
test
push
xchg
f2xm1
out
add
add
fidivrs
xor
add
xchg
push
das
mov
or
jmp
dec
cltd
std
sahf
into
xchg
adc
push
add
mov
test
xor
sbb
cmpsl
lock
out
clc
jmp
and
xchg
add
xorl
add
push
sbb
std
push
or
adc
pop
add
add
mov
mov
jae
pushf
ds
sbb
mov
sbb
dec
mov
pop
push
cmp
imul
outsl
lock
incl
adc
testb
add
aad
inc
or
or
push
pop
call
cmp
popa
jno
ss
notl
push
decl
add
rcrl
or
les
in
decl
sbb
push
jecxz
cmp
hlt
rolb
sti
jmp
mov
test
jne
inc
loop
add
and
pop
sbb
add
pop
pop
inc
sbbb
dec
adc
loopne
jae
jbe
pop
popf
fmuls
rolb
loope
and
pop
pop
adc
add
add
pushf
ja
in
les
outsb
sbb
lret
roll
js
adc
xor
dec
push
inc
jne
aam
rep
stos
xchg
xchg
lock
mov
getsec
repz
pop
or
mov
push
loope
mov
jbe
out
xchg
sub
cmpsl
or
outsb
imul
out
add
add
pusha
ds
repz
imul
imul
js
cmp
rclb
jbe
out
es
int
out
hlt
notl
add
cmp
movsb
repz
xor
mov
cs
xchg
add
js
and
sarb
lock
int
pop
ret
add
and
repnz
sub
add
cmp
mov
leave
aas
aas
sub
jb
lea
cmp
cli
aas
mov
xor
rcr
mov
inc
repnz
mulb
mov
ss
mov
mov
std
mov
xor
xchg
mov
mov
mov
std
scas
int3
into
xchg
loop
pusha
and
mov
xor
bound
cmp
lods
mov
adc
sbb
fs
fiadds
adc
cmp
or
loope
movl
xor
jge
mov
repz
enter
mov
cmp
cli
xchg
adc
adc
mov
aaa
jne
cli
ss
dec
repnz
nop
shll
add
push
icebp
out
sahf
shll
sbb
decb
sbb
jle
loopne
out
mov
out
clc
pop
loopne
adc
lidtl
inc
cmp
lods
adc
in
les
iret
mov
adc
stc
dec
mov
out
in
flds
in
or
pushf
jg
pop
decb
dec
loopne
xchg
mov
add
add
add
and
addr16
push
jae
in
dec
add
adc
lea
nop
mov
cltd
add
pop
repnz
mov
insb
or
in
fimull
add
push
mov
xor
les
aaa
and
fs
cs
gs
add
xor
aas
mov
fiadds
add
and
out
mov
mov
mov
mov
jb
ljmp
pop
mov
rorl
or
jle
into
xor
pop
std
jb
sbb
sarl
and
dec
stos
cmp
movsb
mov
mov
lods
fists
dec
inc
aad
mov
mov
add
pop
cmp
xor
sub
mov
pop
pushf
cmp
push
mov
fstps
adc
mov
add
adc
and
xor
test
es
add
test
cwtl
add
and
push
mov
mov
jmp
add
add
clc
iret
push
in
test
mov
jns
repnz
mov
jp
rcll
inc
mov
pop
fcoml
call
shr
push
xor
hlt
lcall
lret
sti
pcmpgtb
hlt
mov
and
in
scas
popa
loopne
mov
add
jb
mov
inc
inc
je
sti
jae
pop
add
add
jae
aam
jae
cld
mov
lods
jns
lret
dec
add
loop
add
pop
sti
aaa
add
push
inc
loopne
int3
push
pop
pop
add
int
sbb
daa
cmp
fsubs
add
int
stos
add
aam
add
test
lahf
ja
or
mov
push
push
add
scas
lret
seta
cmp
lcall
out
mov
pop
test
lcall
bound
cmpb
cmp
xor
sbb
push
push
add
fdivp
aaa
loope
pushf
mov
pop
xor
aam
movsb
mov
sbb
out
psrld
mov
rcrl
in
je
add
add
adc
mov
iret
insl
ss
add
scas
cmpsl
ss
xchg
mov
mov
push
faddp
mov
outsl
out
add
out
mov
cwtl
imul
jecxz
shlb
add
jle
add
repz
pop
repz
hlt
pusha
adc
and
xchg
ds
add
pop
repz
int3
je
loop
leave
or
push
or
mov
mov
jecxz
or
scas
fnsave
sbb
test
push
scas
push
int
jecxz
pusha
xchg
xchg
push
fucomp
mov
call
scas
push
leave
outsl
sti
out
jb
and
out
push
call
pop
mov
lock
cmp
rcll
jecxz
test
add
ds
movl
xchg
nop
icebp
adc
mov
lock
mov
push
jge
push
xor
mov
xchg
and
cmp
dec
clc
test
jns
xor
mov
icebp
cld
test
jne
mov
in
xchg
dec
hlt
cmp
sarb
dec
hlt
or
add
add
xrelease
iret
sub
xchg
xchg
mov
lcall
dec
fs
mov
fsubr
dec
scas
and
aas
and
push
call
das
in
lea
and
negl
or
fiaddl
pop
call
in
pop
fsubrs
popf
or
add
outsl
cmpsb
std
mov
add
xchg
jnp
shr
roll
lea
xchg
add
adc
arpl
mov
and
mov
xor
mov
call
inc
fidivs
add
js
or
mov
mov
out
sbb
pop
cmc
adc
mov
cltd
pusha
aas
lcall
ds
fimuls
sub
lea
xchg
jo
add
add
repz
push
mov
or
fidivl
dec
mov
fbld
std
cwtl
push
idivb
push
mov
lcall
mov
sti
out
pop
lods
xchg
lcall
mov
imul
sub
out
adc
gs
outsb
jp
inc
cmc
pop
neg
jno
mov
add
ljmp
jg,pt
jb
mov
cltd
outsb
testl
mov
sbb
mov
outsb
fisttps
ljmp
inc
jmp
push
mul
stos
dec
cmp
mov
test
mov
call
mov
dec
add
decl
ja
push
lock
or
adc
inc
xchg
decl
add
add
add
add
js
adc
mov
clc
push
clc
xlat
cmp
les
jge
mov
fadds
call
jmp
or
out
mov
dec
ds
sti
jne
aam
clc
les
xchg
mov
hlt
enter
mov
dec
call
add
cmp
mov
test
ret
mov
lret
add
add
roll
jecxz
fidivrl
push
cmp
loop
decb
xchg
outsb
add
fmull
mov
mov
lods
add
push
rol
pop
pop
add
pop
clc
das
adc
pop
dec
mov
mov
roll
int
imul
jge
out
cld
lds
dec
add
inc
mov
aad
xchg
movsb
mov
ficoml
outsb
push
push
pop
cmp
loop
jo
push
cld
in
fucomi
cmpsb
xor
mov
add
cmc
add
pusha
test
ljmp
mov
mov
les
jmp
add
fwait
out
loop
testb
xchg
add
cmp
repnz
sub
mov
pop
mov
mov
fidivs
std
pop
negb
mov
add
out
sub
jbe
mov
test
jmp
mov
fistpll
shrl
add
outsb
add
out
cld
pop
std
pop
data16
push
push
mov
dec
jle
fsubr
mov
jmp
les
jbe
cmp
xor
jmp
sub
xchg
cmc
jle
test
add
pop
push
outsb
cld
test
das
adc
add
repz
stc
pop
repz
push
insb
adc
mov
jg
cs
jmp
pop
repz
add
adc
adc
or
add
fcomps
add
xor
das
jmp
call
xchg
inc
clc
je
push
sub
push
hlt
xchg
mov
xor
cli
xor
mov
cld
dec
loopne
lock
int3
mov
add
xor
loopne
aam
mov
xchg
mov
add
test
mov
inc
out
add
lea
ds
xchg
std
js
loop
in
or
sarb
inc
add
cmp
aad
aaa
fiadds
push
add
add
pop
inc
cmp
fisttpll
xchg
xor
hlt
jg
jl
out
or
call
addr16
sub
cmpl
js
in
dec
add
jl
adc
in
pop
sbb
sub
adc
iret
and
jl
xchg
pop
hlt
mov
in
out
in
scas
int3
inc
imul
in
out
jle
add
mov
mov
jle
pop
pusha
pop
cmp
scas
add
in
xchg
adc
int
sbb
jmp
mov
mov
xor
out
sarb
pop
add
or
fldl
push
inc
ljmp
jno
or
push
mov
pushf
push
mov
add
add
add
add
lods
mov
lret
pop
in
std
add
jmp
pusha
and
cmp
movsb
cmpsb
test
sti
ljmp
jecxz
xchg
mov
jecxz
out
add
mov
icebp
jb
adc
mov
mov
pop
loope
imul
cs
in
mov
std
sub
jl
shll
loop
gs
xchg
out
sti
bound
add
or
aaa
sbb
sub
std
mov
mov
nop
inc
and
jnp
push
push
lock
pop
mov
jae
ret
in
das
shlb
push
mov
mov
push
sarb
or
ret
mov
xchg
mov
or
add
inc
decb
jne
decl
cld
dec
mov
inc
rorb
add
add
add
mov
scas
jecxz
or
daa
enter
jmp
cmc
push
or
call
aaa
rol
mov
add
call
inc
int3
loope
push
mov
mov
mov
hlt
loop
inc
enter
add
test
mov
lock
jae
pop
jbe
dec
push
aaa
lock
test
int
cmpl
daa
add
xchg
mov
dec
movb
dec
js
lahf
mov
ret
inc
rorl
cmpl
test
push
cmp
sarb
add
push
xor
loop
push
daa
xor
add
cmp
and
adc
repz
scas
sub
roll
add
lods
mov
lcall
lods
cmpsl
or
movsl
lods
lret
pop
jmp
lcall
push
subl
movsb
xchg
inc
addr16
jecxz
jecxz
pop
pusha
test
fisubrl
xchg
ret
or
jo
outsl
mov
add
add
pushf
out
pushf
add
jmp
dec
and
cld
pusha
shl
add
mov
sti
add
add
stos
add
data16
add
int
je
loop
mov
stc
and
jb
mov
sbb
inc
imulb
sbb
push
add
push
add
movsl
jne
imul
mov
dec
add
je
push
std
push
sbb
shll
add
cmp
lock
subl
add
add
add
lods
cmp
xor
and
jae
into
mov
lock
hlt
mov
xchg
sti
inc
incb
cli
call
adc
mov
sbb
push
jmp
loop
xor
stos
mov
in
mov
inc
in
enter
inc
out
mov
in
mov
call
enter
and
scas
movswl
add
xchg
popf
mov
or
filds
cmp
sbb
xchg
loop
ja
jno,pn
fsubs
pop
xlat
inc
and
loop
push
mov
scas
stc
mov
dec
add
mov
rorb
xor
pop
iret
or
and
jge
add
xorb
add
add
movl
pop
lods
add
mov
pop
nop
inc
aas
jmp
pop
cmp
adc
std
mov
wbinvd
inc
mov
add
loope
clc
xchg
push
jg
aad
cmpsb
stos
sub
inc
and
and
push
imul
loope
cmpl
fistpll
and
add
lret
popa
out
jg
xor
add
mov
cmp
popa
pop
ljmp
xor
cli
mov
push
sbb
jb
jecxz
ljmp
insb
jo
push
cmpsl
pushf
xchg
pop
shll
jle
test
divb
or
pop
fcmovnb
and
sti
mov
in
jbe
pop
jmp
mov
pushw
add
std
addb
cmp
and
mov
scas
and
out
adc
jo
pop
xchg
jmp
add
adc
jbe
jno
fcomp
repz
loopne
mov
leave
out
xrelease
inc
out
dec
add
loope
addl
mov
inc
icebp
or
fbld
add
pop
or
jne
jns
ja
sub
clc
enter
xor
test
js
fiadds
or
xchg
das
test
testb
repz
mov
mov
scas
cmc
add
insl
or
add
pop
mov
xchg
inc
js
test
test
adc
mov
int
and
cmp
js
mov
add
add
add
add
add
xor
jb
sub
or
mov
cld
sti
scas
cmc
add
push
rorl
cmp
pop
sbb
add
aaa
pop
mov
loope
jnp
mov
add
or
les
fld
xor
loope
clc
cmp
mov
add
decl
sbb
loop
mov
sub
xchg
mov
xchg
add
mov
adc
sbb
out
pop
cmc
rorb
mov
les
xor
clc
mov
jns
add
and
movsl
pop
cmpsl
add
xor
adcb
das
fsubrs
sub
adcl
inc
loop
loope
sub
aas
lods
inc
jo
add
add
jecxz
js
xor
js
push
dec
inc
dec
jno
jg
and
loop
out
and
jb
inc
or
shr
pusha
adc
movsl
mov
sti
cmpsl
mov
mov
outsl
sub
mov
movsl
add
or
cmp
pop
push
in
pop
scas
and
idivb
std
out
add
add
push
cld
scas
xchg
divb
idivb
xor
sub
mov
mov
test
pop
push
jle
mov
jno
hlt
iret
mov
dec
outsb
std
inc
xchg
insl
jae
jmp
aam
mov
mov
addr16
imul
sbb
mull
orb
mov
add
xchg
test
out
mov
call
int3
lea
enter
xor
andb
mov
xchg
sti
mov
xchg
call
push
std
jl
sbb
in
leave
xor
inc
scas
dec
add
push
arpl
cmp
mov
xor
test
pop
adc
xchg
sti
jne
xchg
jno
mov
das
add
mov
inc
pusha
repz
lock
neg
push
fsubr
loop
push
sub
stos
rcrl
mov
stc
push
shr
add
insb
pushl
lea
daa
xchg
rolb
or
ljmp
or
inc
cmp
inc
or
testl
fwait
mov
pop
add
xchg
aad
or
loop
push
or
add
loop
add
push
daa
xchg
adc
gs
daa
xchg
add
fucom
push
or
inc
pmuludq
xor
inc
mov
cli
das
out
pop
in
nop
pushf
inc
xchg
nop
mov
push
test
xor
jno
xchg
das
out
imul
sub
in
xchg
fisubrs
test
mov
add
and
out
pop
mov
neg
imul
in
xchg
mov
adc
fcoml
push
adc
xchg
ds
adc
outsl
dec
add
or
cwtl
andl
stos
cmp
xchg
loope
lds
jae
cmc
jecxz
add
cmp
xor
movsl
cmp
jmp
add
add
add
add
lds
xor
jmp
xorl
jmp
pop
repz
push
lock
xchg
jp
std
sahf
repz
pop
repz
xchg
stos
imul
repz
pop
repz
sbb
repz
sbb
pop
les
sbb
inc
or
inc
xor
idivb
int3
testb
testb
lea
call
add
add
add
add
or
inc
notb
test
dec
push
decl
arpl
adc
xor
je
jns
cli
sub
cmp
es
add
nop
jbe
xchg
adc
xor
call
cwtl
leave
xchg
hlt
out
push
leave
jns
add
popf
xor
ss
fstl
mov
nop
adc
jnp
decb
shll
add
add
add
add
stc
out
ljmp
push
ljmp
cmp
cmp
or
aas
loop
nop
and
pop
mov
out
dec
ret
fsubs
mov
mov
call
jmp
out
pop
mov
pushf
xor
aaa
pusha
test
test
inc
hlt
push
add
add
pusha
test
test
xor
mov
mov
cmp
push
add
add
fcmovbe
fisubrl
lcall
aam
push
xlat
mov
pop
loop
popl
inc
out
fidivrs
xchg
std
imul
loop
inc
or
jg
add
add
stos
fistl
fimuls
push
lods
mov
jle
and
insl
out
add
mov
lcall
loope
mov
dec
cmp
dec
or
in
mov
std
ds
xor
jmp
in
mov
out
loope
mov
pusha
int
jmp
dec
repz
je
pop
xchg
add
in
jmp
sub
jg
out
std
jmp
cmp
std
jmp
xchg
cltd
clc
sub
and
test
icebp
mov
in
loop
mov
mov
das
add
xor
pop
movb
insb
mov
pop
jnp
dec
psadbw
add
inc
ja
xor
mov
add
or
call
test
test
inc
xor
orb
mov
xor
or
xor
mov
mov
loopne
mov
mov
and
subl
add
out
xchg
notb
sbb
loop
add
pop
mov
inc
add
pop
dec
pop
pop
loope
mov
add
and
mov
mov
ja
inc
call
ja
loopne
outsl
or
imul
add
fstps
mov
and
icebp
mov
sbb
or
rolb
mov
inc
ret
inc
inc
sub
mov
cltd
aas
cmpsb
ret
push
sub
add
add
sub
adc
or
jmp
add
lods
cmpsl
or
in
add
stos
jle
out
std
jne
andb
mov
adc
or
in
add
mov
out
dec
out
test
add
mov
lods
mov
daa
addw
movsb
mov
xor
pop
subl
out
add
add
decl
mov
pushf
loop
insl
mov
loop
incl
xor
pop
and
push
fisubl
xor
dec
loope
add
fisubrs
dec
into
loope
or
jmp
aad
push
js
adc
pop
adc
push
cmp
cltd
xor
psubsw
je
add
add
jmp
mov
mov
jle
loope
dec
xchg
jmp
aad
mov
jnp
clc
add
add
mov
xor
xor
inc
mov
clc
jne
leave
dec
clc
clc
cltd
add
in
arpl
add
or
and
jp
lret
add
add
lods
inc
call
mov
jle
pop
xor
test
leave
sti
incl
adc
test
inc
or
xchg
sbb
add
push
xchg
sti
push
jecxz
sub
sti
jecxz
movq
add
pop
or
loop
jge
ficomps
dec
sub
ret
loopne
add
aad
add
pop
dec
or
add
add
adc
test
add
sbb
nop
out
add
pop
cld
sti
push
xchg
test
add
pop
add
lcall
push
leave
test
test
push
jge
out
add
pop
add
loop
mov
or
ret
xor
loop
out
jmp
test
ljmp
fldt
inc
sahf
icebp
in
jg
sub
jns
scas
mov
subl
icebp
add
mov
cmpsl
pop
pop
ss
loop
lods
pop
pop
cld
and
idiv
sbb
arpl
xchg
imul
sub
sub
add
push
into
xor
jg
xor
jecxz
out
add
add
testl
push
cmp
adc
jmp
rclb
rolb
notb
adc
out
out
cmp
lret
imul
add
mov
jmp
sbb
cltd
popa
cmp
mov
fnsave
xor
mov
adc
int
inc
push
sub
cli
push
sub
add
add
mov
or
es
sbb
out
jae
mov
in
popa
dec
add
sbb
and
adc
je
dec
sbb
xchg
roll
cli
js
or
int3
add
xchg
jp
jle
xchg
mov
mov
add
xor
enter
rolb
or
mov
inc
nop
testb
je
add
add
cmp
into
jnp
add
pushf
scas
inc
lock
xor
add
add
pop
mov
and
inc
shll
test
test
out
push
pop
xor
xor
cmpsl
jge
or
xchg
push
fiaddl
cli
cmc
data16
mov
jne
dec
daa
add
lret
dec
aad
or
loop
adc
rolb
add
out
push
pop
or
mov
pop
and
dec
xchg
add
mov
icebp
and
out
add
xchg
mov
or
or
rorb
std
mov
stos
mov
notb
inc
lods
addb
cmp
add
xor
jg
das
imul
xor
sbb
test
ljmp
ret
add
insl
out
jno
sbb
xchg
sbb
xor
jb
mov
or
xchg
xor
dec
arpl
into
or
mov
aad
and
imul
pop
movsl
sub
dec
sub
out
push
add
fnsave
les
add
sahf
dec
mov
and
add
add
add
add
push
and
jae
imul
shr
cmp
loope
lock
out
add
push
sar
add
pop
jo
insl
sbb
jmp
fs
dec
jmp
loope
add
mov
mov
packssdw
arpl
add
loopne
clc
test
xor
push
add
add
jo
gs
pop
std
add
inc
ja
xor
sub
daa
sub
or
std
sti
mov
adc
test
add
inc
dec
push
cli
dec
adc
mov
xchg
jp
adc
insb
xor
or
or
jl
mov
mov
add
mov
cmp
pop
mov
xlat
inc
dec
hlt
repz
add
data16
dec
jb
mov
nop
add
into
inc
dec
imul
xchg
and
dec
mov
or
aaa
pushl
fimull
or
sarl
push
popa
xor
sbb
push
xchg
jmp
dec
add
dec
bound
lds
and
inc
aam
or
movsl
jo
add
dec
nop
jno
shl
ret
out
lcall
arpl
sti
inc
nop
jae
mov
daa
loop
out
and
arpl
leave
sub
sbb
xchg
dec
loop
and
pushw
dec
adc
repz
xor
add
add
sub
fnsave
ret
fildll
popf
hlt
mov
push
fidivl
idiv
push
jno
dec
insb
lods
and
adc
push
popf
push
mov
pop
jno
push
jno
add
daa
popf
adc
add
add
inc
std
aam
inc
inc
jmp
imul
std
inc
add
add
jmp
rorl
mov
jle
hlt
es
or
jmp
std
pushf
or
push
insl
pop
pop
cmpsl
enter
loope
mov
pop
arpl
xor
popf
push
jae
jmp
pop
ret
sub
repnz
xchg
cltd
xorb
popa
aaa
mov
mov
fbld
xor
fidivs
add
inc
incl
mov
ret
xor
lods
sub
xchg
lea
or
outsb
xchg
shlb
mov
movsb
jge
sti
test
adc
fidivl
mov
outsb
push
mov
and
iret
lods
cmpsb
sti
cmp
pop
cs
rclb
push
mov
add
out
push
addr16
fldz
repz
jae
cli
jmp
mov
inc
add
and
out
xlat
mov
pop
or
or
adc
mov
or
mov
dec
add
add
test
fstp
adc
shr
sub
test
xor
adc
shr
push
mov
jl
xor
in
push
aaa
adc
cwtl
ret
sub
inc
shll
adc
aaa
push
pop
mov
mov
adcl
cld
xor
hlt
daa
push
cmp
stos
mov
mov
push
out
clc
pushf
into
outsl
xor
clc
stos
cwtl
ret
or
into
pop
xor
stos
movsb
lcall
sub
cmp
add
jl
mov
fcompl
negb
jmp
popa
nop
repz
add
stos
jl
fs
bound
fimuls
mov
push
jo
fisubrs
int
mov
sub
sub
add
int
rcr
add
jmp
jp
or
jmp
ljmp
outsb
imul
add
add
add
add
and
movsb
pop
mov
jmp
xor
shlb
addl
loope
adc
adc
add
push
adcb
push
fsub
sub
pop
push
std
cltd
pop
repnz
imul
cld
into
push
nop
push
call
mov
or
incl
mov
add
icebp
pop
mov
mov
jb
movq
push
mov
pop
inc
stos
push
lea
push
call
mov
lock
mov
inc
adc
and
add
lods
adc
or
out
mov
lock
push
sti
xor
mov
ss
pop
dec
decb
add
add
add
pop
std
movsl
fistpll
popa
mov
push
addr16
cld
out
insb
add
mov
add
fadd
mov
cmp
in
arpl
xor
pop
jne
push
lods
add
loop
aam
testb
and
push
mov
mov
mov
add
testl
add
add
add
add
jno
add
inc
dec
inc
fnstenv
xchg
int
aaa
pushf
and
jo
jg
cs
fistps
das
int3
jns
pop
xchg
outsl
sbb
shll
stos
add
mov
push
out
jecxz
out
push
and
pop
ds
add
add
out
pop
xor
add
add
les
les
add
movsl
arpl
jno
es
outsl
mov
mov
mov
xchg
mov
and
insl
xor
jmp
int3
scas
cmpsb
call
jle
jno
insb
out
mov
loope
add
loope
jmp
jmp
xor
cmpsb
and
or
jb
add
xchg
ficoml
sub
test
adc
loope
dec
mov
loop
out
sar
call
lock
pcmpeqb
std
ds
bound
push
std
gs
mov
xor
xchg
add
pop
push
adc
add
xlat
cmp
pop
cmp
mov
mov
aaa
adc
mov
add
mov
add
clc
ss
mov
mov
std
push
insl
or
or
sysret
stos
add
jnp
mov
aad
push
movb
mov
sub
test
pop
and
push
lock
mov
stos
mov
sbb
adc
mov
xchg
sti
adc
loop
shlb
cmc
out
insb
loop
iret
rcrl
mov
or
test
addr16
out
in
and
rclb
xchg
bound
cmc
ficoms
cltd
adc
pop
cwtl
gs
sub
cld
repnz
cltd
add
iret
addb
push
mov
fcmovnb
fcmove
adc
push
jns
lret
add
pop
ja
ljmp
push
add
add
fdivrp
add
stc
nop
out
mov
push
iret
sub
add
data16
mov
jbe
mov
pop
aam
loopne
dec
jnp
jbe
test
out
ss
sub
movb
fs
xor
jg
icebp
push
mov
and
jb
add
jne
add
add
in
add
jno
and
movsl
add
xchg
loope
add
leave
cmp
std
mov
aaa
movsb
xor
in
dec
std
push
popa
xor
jmp
adc
mov
dec
std
out
in
hlt
inc
and
pop
jno
fs
xor
stos
sbb
adc
popa
dec
push
push
popa
and
mov
mov
in
loope
pushw
sbb
data16
pop
std
jbe
ret
xor
popaw
mov
sbb
std
imul
add
xor
mov
fidivrl
aam
test
or
std
call
sti
xor
aam
js
mov
xchg
mov
ja
add
push
add
lret
mov
loopne
add
xor
push
xchg
dec
in
mov
mov
add
xchg
mov
in
inc
mov
and
sti
incl
push
int
mov
test
cli
adcb
add
les
jmp
loop
testl
adc
push
add
push
addb
xchg
fisubl
sbb
iret
xchg
add
loope
add
push
xor
std
movsl
sbb
add
je
add
pop
lcall
addr16
das
std
test
jg
loop
jg
jp
adc
mov
hlt
rcrl
push
mov
add
popa
fmull
or
loop
lds
add
daa
rorl
xchg
dec
inc
and
xor
test
das
mov
imul
xchg
daa
test
and
dec
testb
dec
iret
dec
fiadds
loopne
out
pop
das
out
popa
sub
out
and
mov
add
add
xchg
add
mov
insb
xchg
pop
dec
jle
inc
std
incl
dec
pushw
movsb
sti
bound
lods
push
bound
insb
jns
std
inc
out
out
jo
dec
push
pop
fs
es
sub
test
out
cmc
test
xor
mov
shrb
sbb
fbstp
add
call
add
std
mov
popf
cs
pop
imul
and
sub
jmp
fisttpll
add
fucom
add
mov
mov
vmptrst
mov
mov
cmp
push
mov
push
jle
xchg
cld
int3
leave
dec
call
lds
cli
add
add
or
dec
mov
add
xchg
mov
pop
lret
mov
std
test
subl
pop
cmc
mov
loopne
xlat
sbb
dec
repz
add
sbb
jne
stos
jnp
bound
jle
loop
mov
sub
pop
fsubrl
std
sub
mov
mov
adc
add
add
les
std
cmc
adc
push
sub
call
or
mov
out
sub
jnp
dec
push
mov
or
std
xor
add
jp
cmpsb
std
test
or
roll
sbb
arpl
mov
mov
mov
mov
data16
xor
inc
jbe
add
add
xor
jge
sub
ret
sub
inc
push
jge
mov
inc
or
mov
sbb
inc
mov
xor
mov
aaa
arpl
aam
out
mov
aaa
pop
inc
sub
mov
popa
and
xchg
movb
push
lods
sti
jl
inc
add
test
inc
add
std
scas
add
add
loopne
sub
shll
loope
in
loopne
adc
inc
adc
inc
pop
std
out
xchg
jmp
pop
mov
pop
cmpsb
inc
call
mov
xor
jb
ja
lods
jno
mov
std
adc
fnstcw
loope
mov
dec
ret
out
pushf
adc
in
mov
add
add
inc
std
fsubp
stc
fistpl
movl
addw
sti
pushl
or
pop
cs
clc
inc
fsts
ret
jns
jne
push
or
inc
aad
xorl
add
push
add
test
dec
minps
mov
stc
mov
cli
push
xchg
pop
fisubl
jne
add
fbstp
cli
push
cwtl
cs
push
insb
lret
les
in
mov
out
js
xchg
inc
add
or
ret
std
popa
cwtl
add
jge
movl
insl
mov
sbb
sahf
jp
mov
xchg
mov
jns
push
fs
xchg
or
pop
pop
gs
add
add
add
add
cmp
or
clc
or
incb
jmp
out
insl
movsb
in
or
jo
loop
aas
inc
int
insb
out
loop
add
mov
mov
inc
loopne
pop
push
xor
loopne
mov
jecxz
sub
lods
out
out
jb
cmp
arpl
or
out
loop
adc
mov
cmp
push
cmp
jns
mov
pop
xchg
adc
add
lea
mov
pop
add
scas
inc
jns
popf
xchg
imul
out
imul
test
das
mov
mov
or
jg
jns
mov
test
xor
mov
add
andl
add
inc
std
out
ljmp
add
add
add
add
mov
call
pushl
jmp
or
xor
jb
mov
sahf
dec
sub
jmp
repz
std
hlt
shl
jbe
sub
cmpxchg
push
inc
je
outsb
out
mov
loope
push
push
inc
jae
mov
xor
leave
loope
std
xchg
cmp
dec
pop
inc
mov
add
int3
ret
mov
mov
das
or
inc
shrb
lods
inc
add
push
in
or
sub
push
mov
scas
in
and
inc
or
testl
mov
pop
cld
jne
add
sbb
add
aaa
sub
adc
xchg
jae
mov
cli
jmp
mov
std
ljmp
add
add
add
cmc
data16
cmc
scas
popa
clc
lret
mov
cmc
pop
mov
mov
inc
out
outsl
mov
mov
or
daa
cmp
call
roll
inc
mov
and
in
arpl
pushl
rorb
adc
xor
push
push
push
xchg
and
push
mov
daa
mov
add
add
push
add
lock
pop
insb
cmpsb
jecxz
add
out
mov
mov
cmpsb
imul
and
pushf
imul
jb
mov
xor
add
sub
sub
mov
xor
inc
test
repnz
pop
dec
out
inc
subb
inc
sbb
insl
sub
les
xor
jl
xor
add
add
clc
xor
pop
mulb
mov
xor
jg
lds
cmp
icebp
insb
jge
aaa
mov
lock
addr16
xor
add
push
xchg
call
cmp
pop
cmc
dec
std
aam
and
jmp
pop
hlt
hlt
mov
add
push
xor
jne
test
jae
add
add
and
push
xor
push
shll
test
mov
out
hlt
xor
cmp
mov
loopne
add
out
stos
inc
cltd
dec
aas
dec
jle
sbb
sub
mov
fnstsw
xor
push
repz
out
test
loope
dec
add
sub
inc
lods
pop
out
sti
xor
lea
jecxz
fiaddl
add
out
add
cmp
cli
je
les
push
pop
push
push
rcll
pushl
jno
push
push
in
push
mov
mov
test
frstor
pushl
or
insb
outsb
out
cmp
add
jne
add
inc
in
mov
add
push
pop
push
call
add
add
dec
clc
pop
add
push
add
imul
jno
movsw
jb
aad
jo
push
dec
inc
inc
leave
inc
jnp
mov
or
add
loop
rol
shrl
imul
loop
jle
popa
jne
or
insl
sbb
add
xlat
mov
pop
jo
add
dec
cmpsb
jb
dec
dec
clc
pop
xchg
lahf
fcompl
loop
pop
or
fcoml
push
pop
sbb
popa
add
cmp
add
mov
outsb
std
ret
bound
push
cmp
xor
cmp
cmp
mov
mov
jle
mov
imul
fs
loopne
add
icebp
jo
ret
lea
or
add
add
add
add
jo
daa
mov
daa
add
inc
dec
and
out
adc
lock
dec
es
push
mov
jae
add
vcvtdq2ps
add
mov
cmc
lock
dec
test
call
xor
ljmp
fstl
stos
loope
push
inc
int
adc
mov
mov
in
loope
inc
icebp
dec
cmc
and
dec
repz
bound
add
sub
jmp
inc
mov
cmp
sub
call
icebp
jne
jmp
xlat
lock
push
sub
xor
or
cld
scas
shlb
test
cli
jmp
or
fcoml
sti
xor
inc
pop
mov
dec
push
add
sti
cs
incl
add
ss
mov
mov
lret
cli
adc
inc
out
jae
xchg
mov
cli
push
pop
cld
adc
cmp
or
mov
pop
je
scas
mov
adc
incb
add
inc
jae
add
test
decb
add
loop
cld
mov
mov
ret
add
inc
cmpb
cmp
mov
xchg
mov
inc
mov
add
pop
inc
push
adc
or
mov
dec
out
inc
add
xor
cld
notl
inc
loop
cmp
mov
faddl
popa
mov
sub
out
pop
xchg
shlb
add
sbb
mov
imulb
aad
jne
outsb
adc
add
pop
xchg
add
jecxz
stos
outsb
aam
sahf
sbb
shl
add
jo
jp
lods
jg
scas
and
add
lock
aam
hlt
imul
out
in
cmp
loope
daa
neg
loopne
sbb
and
add
inc
lahf
add
xor
loope
mov
push
outsb
adc
loop
loop
jg
add
add
sub
add
aaa
cld
cmpsl
shl
out
mov
pop
mov
aad
xor
ret
shlb
jno
sbb
bnd
adc
fadd
adc
fadd
and
or
and
jo
cltd
loopne
mov
mov
out
jae
sub
add
mov
jo
flds
add
test
call
call
sub
lret
sbb
and
mov
fnstenv
fisttpll
adc
iret
lock
clc
out
or
push
xor
loopne
sti
sub
fsub
in
aas
leave
mov
add
iret
or
sub
sti
xor
repz
repz
ret
add
xor
xchg
mov
xor
pop
push
mov
jg
jae
mov
cli
aas
bnd
mov
incl
popa
and
mov
lds
lret
decl
rcrb
push
enter
mov
add
xor
loop
sar
lahf
lods
xor
subl
add
add
std
mov
imul
sub
sub
or
pop
cs
push
adc
les
or
inc
add
in
lret
loop
dec
std
push
and
adc
sar
pop
leave
pop
sbb
inc
or
xchg
jle
icebp
pop
test
dec
rorb
pop
ja
lea
push
loope
pop
pop
add
add
lods
cmpsl
out
sbb
push
out
in
jecxz
scas
add
stos
dec
in
ss
fwait
test
in
xor
sbb
xor
out
and
call
push
xor
out
and
xor
ret
int
pop
pop
fwait
ss
push
xor
fwait
add
add
lock
mov
test
test
xor
jnp
sbbl
std
push
out
out
pop
xor
bound
mov
in
mov
lret
push
xor
and
sbb
xor
fildll
inc
add
cmp
bound
data16
sub
test
inc
loope
xchg
je
add
add
call
gs
in
push
test
loope
jae
dec
lock
cmp
xchg
loope
jbe
mov
inc
clc
mov
jb
mov
adc
xorb
mov
roll
std
ljmp
out
mov
cli
xor
push
ljmp
mov
and
enter
outsl
std
mov
sti
incl
add
daa
push
dec
push
hlt
leave
adc
outsl
std
push
loope
call
cmp
inc
or
mov
stos
aam
xor
aad
xor
push
and
mov
fdivl
jl
mov
sahf
add
pop
xor
cld
idivl
or
pop
adc
xlat
inc
or
into
dec
call
or
lods
cltd
add
add
sar
out
scas
cmovo
ss
pop
movsl
out
lret
mov
rclb
into
imul
sbb
sub
inc
loop
inc
jle
inc
dec
sub
out
xor
push
add
xchg
cmp
sub
dec
fldcw
push
dec
add
push
out
fnstenv
fs
xor
std
shlb
add
jmp
icebp
jmp
sub
pop
scas
inc
fidivs
aas
icebp
xor
rorw
cmpsb
pop
dec
xor
cmp
adc
fbstp
dec
lea
push
or
lret
xor
sti
jnp
call
jno
pop
xor
sbb
mov
xor
xor
add
mov
dec
sub
mov
xor
jmp
sbb
dec
sub
inc
cld
aam
xor
jmp
jmp
hlt
loope
inc
jmp
loope
sub
dec
cmp
sub
lcall
mov
jae
jmp
xor
and
mov
stos
cmp
lea
leave
repnz
jmp
add
add
add
add
lock
pop
in
adc
mov
xchg
sti
push
adc
and
mov
cmp
je
cmp
xor
aas
in
jnp
das
leave
cmp
ret
incb
sbbl
push
mov
push
enter
sti
jbe
test
lcall
roll
adcb
add
add
xor
test
add
adc
mov
jne
cmpsb
inc
hlt
loope
push
lcall
sub
adc
loop
dec
orl
add
lret
std
int
inc
je
xchg
mov
ror
cli
jg
lods
xor
subl
pop
add
fstpl
add
faddp
sti
add
add
aaa
add
insl
mov
std
in
adc
pop
iret
xchg
into
sbb
sti
loop
or
mov
pusha
adc
xchg
inc
pop
sbb
mov
jo
push
sbb
shlb
mov
mov
pause
mov
xor
jnp
mov
call
leave
aad
push
add
cmc
mov
add
add
in
xor
cmp
lock
dec
mov
sbb
in
loope
daa
xchg
sbb
in
cmp
imul
cmpsl
ret
sbb
loop
mov
cli
lods
jno
and
sub
test
insb
inc
scas
and
inc
daa
add
imul
sub
mov
mov
adc
stos
add
add
pop
dec
test
mov
add
mov
inc
call
jb
xor
test
cmp
setae
test
icebp
addr16
pop
fnsave
xor
and
sbb
pop
arpl
jg
xchg
pop
sbb
push
shll
sub
add
out
xor
popf
and
inc
sti
jmp
cmp
dec
xor
xchg
aad
decl
add
add
out
cld
lds
cs
pushl
mov
jmp
aaa
mov
jnp
adc
xchg
mov
add
dec
pushf
js
enter
call
clc
push
add
add
mov
dec
mov
aam
test
mov
cld
dec
imul
sbb
sbb
push
lds
add
mov
sti
mov
insb
js
in
lahf
movb
push
aad
xor
lea
enter
imul
xor
mov
aaa
pusha
pusha
pop
pop
aad
lods
lds
call
imul
std
wrmsr
pusha
adc
add
mov
or
mov
mov
cmp
test
xchg
or
loop
pop
adc
push
sar
sbb
mov
inc
popl
sub
inc
loope
lods
ret
or
hlt
jmp
and
out
mov
cld
aas
shlb
mov
fisubs
roll
cmpsl
jae
adc
add
loop
out
mov
sub
in
insb
inc
push
aas
jg
or
out
adc
cmpsl
add
das
mov
fidivl
xor
jbe
ret
xor
add
sbb
jbe
sub
xor
cmp
loope
cmp
das
test
loope
mov
pop
rcrb
mov
sbbb
add
inc
loope
jo
jo
add
xor
stos
adc
jmp
lods
cmp
inc
loopne
add
pusha
xchg
hlt
jmp
loope
push
jb
fcomps
lcall
test
loope
or
jmp
repnz
add
pop
cmp
xor
add
add
add
add
add
xor
repz
call
or
mov
inc
lods
jmp
jbe
je
sti
adc
jle
or
cmp
add
je
mov
add
lret
mov
je
xor
push
jecxz
sti
jne
test
insl
test
test
xor
mov
fwait
add
add
add
add
add
mov
into
jmp
icebp
sbb
dec
out
test
aad
jns
loop
out
mov
into
aad
and
and
ljmp
insb
andl
cmpsl
ja
cmpsb
idiv
xlat
pop
add
mov
add
ja
push
inc
ss
sbb
aad
andl
icebp
mov
je
mov
std
sar
pop
dec
add
add
add
xchg
fdivp
jecxz
sbb
pop
mov
enter
pop
repz
shlb
daa
add
xor
add
xor
into
inc
mov
xor
push
imull
loopne
push
inc
movsl
scas
xchg
jecxz
out
pop
das
pusha
leave
adc
jecxz
mov
and
xchg
out
out
push
pop
add
add
fdivr
ret
aad
mov
add
jg
push
pop
mov
add
ljmp
pop
imul
push
mov
cs
das
adc
imul
out
or
rcl
scas
pop
loope
pushf
and
pop
inc
add
loop
je
xor
inc
jmp
or
mov
add
add
xor
add
jo
call
cltd
and
sbb
and
loope
std
cld
lds
jmp
cld
and
jmp
bound
cmp
xor
fisubrl
mov
lahf
ficomps
std
add
xchg
jne
inc
mov
sti
jne
jb
fs
cld
add
mov
mov
sbb
sti
add
cmp
cmp
addb
xor
ljmp
sti
push
idiv
xor
push
movb
xchg
pop
cmpl
cld
cmp
jno
add
das
push
jmp
inc
inc
jbe
xor
inc
cmp
jne
inc
andl
aas
add
add
pop
ret
jmp
ds
or
push
stos
pushf
pop
add
push
sbb
mov
xchg
xchg
fs
adc
add
into
ret
fcoml
sbb
mov
add
loop
inc
cmc
adc
jge
cmc
cltd
pop
inc
sub
loop
mov
ljmp
cltd
xlat
add
fst
jae
add
in
push
push
and
movsl
xor
ret
xchg
mov
lret
pop
cld
int
dec
and
aaa
add
into
test
sbb
and
add
mov
mov
mov
jmp
outsb
out
and
test
ret
adc
loop
mov
or
ret
add
add
mov
out
jno
dec
and
mov
sub
ret
lds
les
insl
add
out
std
aam
ds
jmp
mov
xor
stos
loope
jae
dec
in
mov
stc
adc
sbb
add
xor
divb
pushf
loop
lds
fisubrs
sub
add
out
add
in
add
dec
and
mov
inc
mov
sub
mov
inc
jmp
inc
mov
sub
mov
shrl
jb
iret
pop
ja
sub
add
or
cld
ljmp
push
mov
dec
xchg
fcomps
xor
inc
jnp
jno
jecxz
clc
jmp
lahf
shlb
add
repnz
aaa
add
add
cld
lds
ret
inc
dec
xor
dec
push
pushf
push
into
test
xlat
push
mov
or
push
icebp
xor
sti
xor
out
sub
adc
jo
jg
je
xor
sub
call
mov
sbb
jae
mov
sar
dec
rolb
jno
stos
cld
add
add
popa
repnz
loop
push
call
adc
xor
jge
mov
mov
or
mov
push
mov
adc
lods
push
dec
loope
add
leave
stos
addb
enter
jmp
and
sbb
lcall
or
or
add
addr16
pop
dec
xchg
cmpsb
out
call
dec
add
mov
add
or
pop
into
inc
stos
stos
pop
pop
ja
sbb
or
jmp
loop
xchg
lods
sahf
inc
and
aad
jo
lret
shrl
fwait
or
push
jne
outsl
inc
mov
inc
jb,pt
fstpl
or
inc
fnstenv
push
add
cmpsl
out
push
shr
fadd
sub
xor
in
test
addr16
test
cmove
cmc
lds
mov
in
fdivrl
shlb
adc
pushf
sub
pop
pop
and
out
test
mov
mov
mov
mov
mov
flds
jmp
lds
jmp
adc
and
adc
sarl
lods
scas
jmp
add
add
push
mov
xorb
outsb
pusha
rcrb
mov
adc
out
mov
xchg
mov
leave
mov
add
add
jge
push
jle
hlt
push
dec
stc
add
xor
inc
mov
fwait
inc
clc
inc
fprem
jmp
mov
pushl
jbe
ret
push
pushl
or
xchg
test
inc
jnp
je
add
add
lock
test
xor
push
sarb
pop
xor
add
xlat
push
lea
in
testb
call
fmuls
inc
cmp
cmp
or
add
inc
idiv
negb
std
xchg
xor
or
je
add
fimuls
add
outsl
dec
dec
sti
aad
pop
or
jnp
sbbl
add
das
es
pop
jl
stc
movsl
bound
or
test
roll
or
std
or
add
cld
xchg
adc
jl
inc
arpl
cmp
loop
rcll
cltd
loopne
or
cmp
sbb
sar
or
xor
lea
pop
loop
cmp
sti
sbb
test
out
loop
fdivrl
sbb
add
mov
sti
test
mov
mov
movsl
xlat
ljmp
sbb
push
jp
mov
jmp
push
xlat
mov
repnz
testb
jecxz
loop
cmpsb
fcomp
xchg
dec
shrl
stc
jmp
icebp
cmp
cmpsl
lods
mov
mov
cli
mov
out
add
jno
ljmp
mov
mov
xor
cmpsl
movsb
or
das
dec
jae
mov
popf
add
and
xor
jno
fsub
and
jmp
loopne
push
test
sbb
sbb
push
jo
add
mov
decb
add
add
cmp
pop
cli
cmp
dec
sub
mov
add
lds
sti
xor
mov
mov
in
jp
sbb
sti
sub
push
sbb
inc
cmpb
push
outsb
xor
lods
mov
shll
mov
mov
lret
xor
rcl
or
shrb
add
or
add
xor
cmp
stc
cld
add
popf
adc
jnp
int3
add
in
sbb
xchg
mov
pushl
decb
popl
pop
xor
fnsave
in
pop
dec
push
mov
hlt
jnp
dec
add
cmc
loope
mov
in
scas
dec
test
sbb
inc
dec
pop
leave
xlat
push
add
add
pusha
sti
lds
cld
xlat
mov
aas
loop
inc
jae
mov
inc
pop
cmp
cmp
fimuls
mov
shll
loopw
add
or
mov
fnsave
dec
je
in
dec
adc
sbb
jmp
sbb
add
cmp
ret
sub
mov
fadd
adc
repnz
add
add
mov
jb
shll
rcrl
jbe
aam
jmp
add
int
mov
bound
mov
test
dec
icebp
pop
fld
xchg
mov
dec
adc
add
push
hlt
call
jo
xchg
pushf
mul
pusha
push
jae
cmpsl
pushl
pop
loopne
inc
js
mov
add
add
add
add
test
jg
jbe
add
push
jl
sub
mov
push
in
out
add
pushf
js
bound
jmp
xor
mov
inc
xor
mov
push
std
aad
stos
orl
add
inc
sbb
inc
or
ret
jmp
loope
test
add
add
inc
add
jnp
adc
dec
and
jns
cmp
out
into
aad
or
je
cld
or
mov
loope
pushl
cmp
inc
or
sti
adc
shrl
adc
enter
mov
lret
jnp
xchg
sahf
imul
stos
jecxz
dec
jl
add
add
mov
cltd
test
add
jnp
aad
pop
add
sbb
cmp
jmp
or
fisttpll
js
push
adc
add
or
aas
loop
shlb
xchg
lea
loop
jl
add
sar
rorl
jae
pop
in
push
add
movsl
cmc
aas
loop
add
in
or
addb
add
or
add
and
inc
std
int
inc
or
loop
shlb
xchg
or
inc
pop
into
or
dec
int
mov
hlt
add
add
jae
xor
out
jbe
push
ja
dec
lahf
mov
cmp
fs
shrl
lods
or
sub
cmp
out
shll
mov
inc
scas
pushf
push
add
add
xor
call
popf
pop
dec
aaa
sbb
and
inc
sbb
outsb
insl
fs
mov
add
xorb
out
mov
xor
aam
mov
push
into
int
mov
lret
out
movsl
add
jecxz
add
sbb
std
pushf
jno
jae
sub
std
push
in
insb
and
xchg
adc
add
adc
push
push
add
cmp
adc
ficoms
dec
adc
xor
sub
jae
and
adc
scas
jmp
xchg
insb
cmpsb
pushf
or
xchg
loopne
inc
xchg
add
aaa
and
pop
push
cwtl
adc
cmp
std
cmp
pusha
mov
lcall
lret
add
add
add
add
nop
bound
adcb
insb
jno
nop
push
je
sub
int
push
push
add
faddl
inc
pop
cwtl
adc
popf
lods
jnp
adc
imul
xrstor
clc
pop
aaa
iret
mov
xchg
and
dec
push
arpl
xchg
push
cs
add
pop
pop
fisttpll
add
sti
jne
imul
loop
inc
pop
add
aas
add
loope
call
fildl
push
test
lock
out
pop
shl
sbb
mov
push
sub
sbb
push
adc
mov
cmp
sbb
nop
mov
mov
loope
mov
sbb
bound
add
add
add
sbb
xlat
xchg
mov
jnp
mov
daa
addr16
sub
imul
xor
dec
and
popf
jb
movntq
push
lcall
fnstcw
out
clc
sbb
inc
clc
and
iret
in
mov
out
clc
cmc
pop
insb
lcall
add
add
lcall
pmaxub
icebp
leave
repz
aas
jbe
jmp
outsl
jl
xor
add
bound
fistpll
sub
jb
lea
add
sub
mov
mov
jecxz
call
fdiv
psubsw
cwtl
aas
int3
aad
loope
push
ret
loope
std
cld
mov
jmp
add
add
add
add
or
mov
dec
loope
add
push
enter
int3
pop
inc
fs
test
insb
mov
inc
jmp
cmp
push
push
loop
call
bound
ds
sub
lcall
loope
mov
xor
jmp
repz
mov
xor
push
push
mov
push
push
mov
sbb
add
mov
xor
add
mov
jp
add
mov
jmp
xchg
mov
jnp
mov
jno
jg
dec
pop
lcall
mov
add
push
mov
cmp
cld
addb
xorl
xor
cmp
mov
cmp
mov
pop
inc
push
add
jecxz
inc
call
fldl
or
xchg
xchg
add
loop
xchg
in
add
loop
dec
mov
sbb
or
sbb
and
xchg
ficoms
add
sub
add
cmpsb
fdivs
mov
std
xor
pop
push
pop
pop
mov
add
add
jae
orl
pushf
jle
std
sbb
xor
in
or
sub
mov
out
jecxz
sub
and
sti
push
arpl
insl
sub
lcall
aam
fldt
pop
out
loop
in
lea
jb
jnp
push
jecxz
rorl
outsl
enter
xor
push
pusha
xor
mov
in
jl
add
mov
mov
ljmp
test
hlt
gs
pusha
or
mov
prefetchw
out
loopne
call
insb
or
cmpsb
mov
or
je
pop
or
xchg
xor
negb
std
pop
sub
pop
jmp
add
xor
jmp
jge
call
add
add
xor
call
test
call
bound
add
dec
mov
and
lock
adc
pop
insb
adc
andl
xor
cmp
or
fistps
add
xor
in
pushl
js
inc
or
xchg
mov
add
add
add
add
add
fistpl
add
arpl
mov
jnp
mov
pop
dec
cmpl
add
dec
fisttpll
add
jg
inc
push
sub
dec
push
lea
fisttpll
add
insl
add
sbb
sub
jp
cmp
addr16
ja
in
push
rorl
loop
add
stos
mov
cmc
inc
scas
cmp
add
nop
xchg
fstpl
add
pop
mov
icebp
dec
roll
mov
push
sbb
into
lock
out
mov
xor
sub
mov
sub
add
cmpsl
icebp
cmc
pop
int
cmp
rolb
add
add
xor
add
add
or
add
mov
in
jo
pop
fcomi
pop
iret
cmc
push
test
pop
insb
xchg
push
xchg
cmp
push
xchg
lds
mov
outsb
pop
mov
call
mov
pop
aam
aaa
or
aaa
icebp
jo
clc
cmpsl
xchg
ljmp
pushf
sldt
add
mov
inc
adc
lock
dec
and
icebp
test
not
push
add
je
mov
dec
in
dec
push
mov
pusha
call
insl
mov
cmp
cmp
sar
cltd
repnz
repz
call
sbb
mov
ss
aam
and
mov
pushf
mov
xchg
add
add
pop
push
dec
pop
dec
dec
hlt
sub
test
mov
gs
xor
or
pop
push
push
hlt
enter
xor
call
dec
adc
mov
pushl
mov
push
fcmovu
push
data16
je
out
add
aam
sti
jne
mov
cld
jb
hlt
call
mov
add
mov
je
scas
pushl
dec
filds
mov
rorb
and
jbe
pop
in
test
test
push
jae
lods
ret
xor
dec
sti
mov
sti
std
hlt
xlat
and
psubsb
xlat
add
sub
cmpb
imul
fcmovu
cmp
add
add
lea
xchg
cmp
aaa
std
outsl
adc
pop
in
cmp
lret
std
int
scas
idivl
jg
pop
adc
sbb
push
pop
xchg
or
jecxz
cmp
out
sar
dec
xchg
jge
lds
mov
loop
rcrb
push
push
mov
pop
mov
mov
ret
add
add
es
xchg
call
adc
sub
psrad
daa
add
mov
cmp
or
ret
add
push
daa
add
repz
pop
jmp
inc
xchg
mov
loopne
mov
adc
xor
shll
mov
out
mov
add
xor
outsb
cmp
jb
or
add
cmp
out
rorl
pop
jne
mov
add
sub
add
xchg
mov
in
xor
push
xor
cld
std
pop
inc
jmp
incb
jns
adc
insb
orb
out
adc
push
fistpl
cld
hlt
and
cmp
jle
into
inc
xchg
mov
dec
addl
std
cmp
pop
xchg
std
sahf
mov
orb
in
orb
add
loope
add
cltd
std
outsb
ljmp
insb
cmp
andl
scas
jmp
jp
add
fildl
sarb
dec
add
add
inc
std
into
mov
sub
xchg
xlat
into
call
mov
xlat
add
scas
idiv
and
push
mov
add
xor
ljmp
pop
xchg
mov
je
or
ds
jmp
rorl
sti
xor
inc
or
clc
hlt
sbb
or
push
loop
jg
test
push
or
adc
push
scas
adc
mov
push
out
xlat
add
sbb
add
xor
std
testb
add
add
adc
std
or
adc
push
cmp
adc
std
mov
fwait
iret
mov
mov
cmpsb
fcompl
xor
std
dec
push
mov
sbb
or
add
movsl
in
adc
xor
fsubs
add
adc
xor
ret
jne
adc
cmpsl
add
add
mov
clc
test
out
cmpsl
add
imul
jne
push
jecxz
pop
inc
lcall
aam
fimuls
sub
daa
add
icebp
push
or
jo
sbbb
bound
int
cli
add
xor
scas
fbld
cltd
pusha
incl
add
stos
ljmp
cmc
add
insb
add
add
test
jb
pusha
std
mov
loope
int
mov
test
cwtl
nop
mov
loope
test
loope
shrb
add
loope
clc
fbld
jmp
lds
cld
out
mov
jne
test
push
sti
ljmp
sti
dec
aas
iret
pusha
sbb
mov
sti
subb
arpl
sbb
icebp
jae
add
add
clc
jmp
jmp
sub
push
aad
push
or
hlt
pop
push
jb
add
pusha
add
in
cmp
clc
add
sub
jp
add
out
xor
push
arpl
inc
dec
lret
jnp
call
mov
jl
je
fsincos
je
xor
adc
add
add
add
add
and
cmp
aam
sti
push
mov
cmpsl
and
push
loop
xchg
aaa
add
je
fstpt
adc
aam
pop
mov
imul
mov
cld
adc
div
or
pop
jle
add
movsb
jge
mov
movl
inc
xor
add
add
add
add
xchg
cmp
cmpsl
sti
loop
or
xchg
jecxz
mov
not
push
or
pop
or
fcompl
enter
xchg
push
loope
or
cmpsb
ror
bound
jg
test
fnstcw
mov
add
xchg
mov
adc
outsb
mov
cld
jno
popa
cld
fildl
mov
inc
repz
add
out
test
cmp
addr16
mov
cmc
cmp
sti
jle
arpl
dec
imul
xor
movsb
sub
arpl
shl
cmpsb
sub
mov
mov
repnz
xchg
cmpsl
adc
out
add
inc
add
sahf
sti
std
fimuls
cld
mov
clc
jmp
jp
cmpl
add
mov
pusha
push
sarb
outsb
das
mov
fdiv
std
jb
push
idiv
fmul
or
jmp
mov
loop
lods
or
and
orl
loope
mov
dec
and
loope
xor
and
xor
mov
fdivrp
xor
test
test
sti
aas
xor
add
add
add
add
cmp
add
jb
les
aaa
mov
and
mov
fimuls
jne
ja
cld
adc
lock
mov
xor
jnp
inc
hlt
loopne
or
ret
clc
movswl
add
push
stos
jg
inc
xchg
adc
test
add
dec
inc
jno
add
add
clc
ljmp
add
daa
ret
xor
lods
ljmp
mov
movnti
into
adc
ss
dec
clc
add
or
xlat
adc
andl
mov
jge
xchg
jmp
xchg
mov
pop
pusha
aam
insl
lret
gs
push
mov
add
iret
shr
dec
fwait
mov
iret
jmp
dec
cltd
call
je
pop
addb
sbb
lahf
aas
cltd
mov
loopne
loop
loop
enter
pcmpgtw
pop
jae
lcall
sbb
mov
sub
pop
shrl
scas
shll
sub
jp
stc
cli
cli
push
pop
das
add
add
or
jp
pop
mov
push
adc
shrl
cli
inc
mov
xchg
cmp
sub
adc
pop
lods
ss
flds
lods
xor
and
xor
dec
jno
inc
jmp
arpl
mov
scas
dec
lds
or
and
scas
dec
lds
pop
add
add
je
add
repnz
mov
orl
das
push
mov
movsl
hlt
test
clc
jmp
fisubl
bound
cmp
jae
loopne
pushl
mov
add
orb
add
subb
clc
das
hlt
jle
sti
xor
cmp
add
cmp
xchg
xor
add
xor
test
add
mov
xor
add
sti
add
xor
sarl
lods
add
push
add
jnp
jae
cld
out
in
mov
inc
je
mov
jo
clc
sbb
out
out
xchg
sbb
addl
add
loop
ret
mov
js
repnz
xchg
mov
inc
movb
inc
rclb
jle
cli
mov
mov
add
pop
add
or
and
add
lds
pop
inc
clc
mov
mov
or
jmp
fildl
rcr
jecxz
adc
add
sbb
call
imul
add
xor
or
mov
fsubl
jae
imul
mov
sub
cmc
test
je
shl
pop
rorl
ss
fiaddl
mov
shll
xor
ljmp
jbe
jle
jno
inc
xor
inc
lds
add
mov
add
and
xor
out
pop
push
jg
clc
scas
sub
sub
jmp
add
test
xor
add
add
add
loope
cld
pop
mulb
add
loope
dec
add
lods
sbb
loope
subl
pop
add
addl
add
test
xchg
or
xlat
mov
scas
fwait
jmp
add
loope
std
xor
test
add
out
repnz
cmpsb
lock
pusha
cs
cli
jg
bound
xchg
adc
or
jl
cmc
subl
xor
test
add
idiv
dec
lock
iret
loop
decl
inc
or
idiv
ja
xchg
std
out
mov
mov
sub
call
inc
add
add
ja
hlt
js
or
jns
std
decl
je
addb
or
shlb
std
dec
jne
add
outsl
add
mov
das
add
dec
inc
or
cmp
inc
mov
add
jb
jne
inc
mov
jne
or
push
loop
sub
loop
xor
in
sbb
add
add
pop
cmpl
push
jg
xor
sbb
push
mov
mov
sub
adc
sti
and
sbb
sbb
lock
inc
call
lock
xor
xor
ret
in
cmpl
pop
js
push
fwait
and
icebp
mov
sbb
aaa
jae
inc
popa
enter
add
test
scas
in
popa
xor
mov
int3
jl
movsb
fwait
pop
lods
xchg
cltd
push
movsb
imul
icebp
out
lods
pusha
jo
adc
mov
inc
xchg
pop
je
xor
rcrl
pop
sbbl
sbb
mov
aaa
jb
mov
and
lretw
es
mov
ret
add
add
dec
push
in
out
movsb
xor
add
mov
add
fdivs
add
clc
imul
mov
pop
inc
push
loopne
add
test
jae
fmulp
jo
xchg
loope
add
stos
mov
add
jo
push
cwtl
clc
xchg
lahf
call
add
add
scas
xchg
fsts
mov
out
dec
cmp
loop
jae
stos
or
mov
aam
push
insb
mov
mov
hlt
add
cmp
in
roll
mov
add
sti
pushl
scas
mov
sbb
cmpsl
fmull
add
xlat
mov
test
insb
dec
enter
jne
add
inc
ficompl
inc
out
aaa
ret
jbe
mov
dec
sbb
sti
xor
aaa
push
div
jne
push
lds
jle
xor
lea
je
push
movsl
cmp
mov
fsubs
cmpsl
mov
jmp
pop
jp
and
loope
cmpsb
pop
imul
xor
ljmp
and
cld
add
add
aas
ja
push
jo
push
loop
xchg
pop
pop
xchg
insb
push
pop
in
cltd
mov
call
cld
popf
add
and
insb
call
stc
shlb
dec
xor
jne
leave
cmp
mov
shll
push
loopne
dec
movsb
sub
mov
xchg
sbb
adc
repnz
adc
add
mov
daa
mov
xor
xchg
sbb
adc
jmp
add
inc
mov
mov
mov
sub
outsb
and
adc
loopne
leave
adc
jae
add
jae
lea
in
std
xchg
cmp
out
sbb
fcoml
stos
xor
mov
add
add
add
add
add
fs
in
call
pop
hlt
std
sub
scas
call
std
xor
fnstenv
enter
std
jle
jo
insb
and
test
xor
dec
cmp
jmp
add
push
cli
mov
ljmp
push
jo
adc
or
mov
xor
xchg
add
add
pop
add
dec
negb
mov
ret
in
xchg
mov
repz
call
loopne
decb
sbb
test
loopne
imulb
loopne
jae
or
cli
and
inc
or
pop
hlt
pusha
cmp
push
adcl
mov
inc
das
rol
in
jle
or
add
shl
call
xchg
xor
add
aas
jg
mov
xor
add
mov
jg
add
jmp
mov
je
testl
xor
adc
into
xlat
addr16
sub
fadds
mov
enter
dec
stos
les
and
add
add
jo
iret
xchg
repnz
loop
into
cmpsl
pop
xchg
push
xchg
adc
ret
loope
add
cmp
cld
cmp
sbb
inc
pop
xchg
cmp
cmpsl
cmp
pop
pop
popf
adc
out
imul
stc
ret
in
sub
ljmp
fwait
jg
adc
mov
sub
add
imul
and
jno
mov
scas
ficompl
xchg
jmp
icebp
push
adc
mov
jmp
xchg
cltd
fucompp
fistl
jp
aad
pop
lfs
imul
cmpsl
adc
mov
cmp
imul
fs
es
pop
jae
mov
jmp
out
fucomp
jae
or
jle
jmp
movsb
add
add
xlat
pop
aas
mov
jne
cld
and
ss
mov
stos
in
push
jb
addr16
jmp
mov
lcall
je
push
cmpsl
stos
xchg
lcall
mov
call
inc
jmp
leave
xor
sbb
das
andl
fdivs
outsb
add
insl
inc
mov
outsl
or
push
xor
add
add
addl
mov
jb
add
inc
jg
sti
test
ret
pop
cmp
insb
xor
cld
daa
adc
mov
or
sub
out
push
mov
and
add
and
addr16
mov
inc
fmuls
lock
gs
sti
push
insb
or
add
add
add
dec
xor
add
mov
or
inc
sti
call
and
xchg
mov
pop
call
loop
inc
push
cli
mov
loope
out
pop
inc
or
leave
lea
dec
inc
call
pop
cwtl
xchg
inc
pop
test
cld
cmc
push
sub
ficomps
adc
mov
mov
add
add
add
add
push
add
fwait
jecxz
std
pop
adc
jmp
xor
mov
sbb
gs
and
sbb
mov
pop
dec
jecxz
sub
add
xlat
fcompl
mov
fsubrl
scas
xor
pop
jmp
mov
jmp
sub
fstl
f2xm1
push
loopne
in
jecxz
call
xchg
fucom
pop
or
pop
out
mov
cmp
or
mov
mov
in
fisubs
sbb
and
in
lret
fisubrs
nop
loop
hlt
or
outsl
add
jmp
mov
sbb
dec
addl
out
fucom
mov
enter
jmp
popa
adc
jmp
add
add
add
add
pop
or
fsub
subl
xor
movb
test
push
cmp
cld
jb
dec
push
gs
mov
enter
jmp
sub
icebp
jb
pop
js
fldcw
mov
mov
add
sbbl
out
aad
call
and
add
iret
popa
add
dec
xchg
xor
add
xor
xchg
and
hlt
inc
pop
call
aam
sub
int
outsl
sub
mov
xlat
pop
hlt
dec
jg
fistl
nop
add
das
push
adc
mov
xchg
cld
dec
movsb
rcll
or
sbb
dec
sti
mov
push
mov
popf
data16
mov
pusha
sti
jbe
jo
test
add
mov
add
hlt
rcll
sub
clc
dec
cmp
and
push
cmp
and
std
xchg
jno
jae
fldcw
fcompl
pop
lahf
cmp
xor
pop
std
pop
xchg
int3
cmp
gs
imul
rcll
pop
lret
aad
xchg
xor
mov
pop
lock
and
pop
std
popa
mov
add
add
dec
pop
jae
pop
xchg
pop
or
mov
std
pop
or
dec
inc
loop
push
std
imull
sbb
dec
cmp
push
adc
cmpl
sar
pop
in
test
fisubrl
sub
mov
adc
call
out
or
out
add
add
mov
jmp
imul
popa
lock
repnz
mov
mov
test
fcomps
jp
pop
imul
jge
out
xor
imul
fwait
rorl
imul
das
or
mov
add
jmp
and
stos
cmp
inc
inc
mov
or
add
out
add
xor
xchg
adc
lret
xor
mov
int3
test
lock
loope
orl
add
int
fcomp
mov
lock
jmp
lahf
test
add
xor
add
push
in
mov
je
aaa
mov
or
add
insl
test
mov
je
mov
outsl
pop
adc
push
data16
inc
shld
rorb
cmp
push
in
loopne
adc
xor
jae
stos
ds
xor
in
dec
inc
sti
mov
pop
sti
cmova
add
mov
pop
adc
inc
sti
push
mov
cmp
cmp
lea
mov
data16
or
add
add
add
add
mov
adc
scas
in
push
iret
or
push
lea
cli
test
mov
leave
cmpsb
adc
dec
sub
out
les
cltd
stc
jge
pop
test
out
sbb
inc
xor
out
mov
mov
mov
push
mov
push
fsubrs
mov
adc
add
add
sbb
mov
mov
cld
imul
dec
inc
or
lock
loop
out
cmpsb
or
fiaddl
lea
int3
mov
repz
icebp
loopne
add
fldcw
out
loope
ret
sbb
fldt
dec
adc
out
sbb
cmpsb
cmp
mov
loope
mov
loopne
mov
addb
add
call
jecxz
jno
lcall
lock
or
fisttps
arpl
jg
enter
fnsave
mov
sbb
in
loope
mov
ret
aaa
add
test
xor
iret
push
call
loopne
sbb
loope
mov
loope
psubsb
xor
daa
sub
out
out
add
inc
mov
xor
mov
push
adc
sbb
cmp
pop
loop
sub
sub
imul
pushf
call
cmp
pop
or
fadd
sub
xor
std
push
add
sub
push
aaa
jbe
add
mov
add
xchg
mov
roll
xchg
sti
cmc
add
add
mov
push
push
push
mov
call
pop
inc
clc
mov
outsl
or
pop
fsubr
dec
inc
add
mov
sbb
dec
int3
xchg
mov
adc
nop
call
enter
dec
adc
cli
in
mov
inc
test
pop
jno
inc
out
std
out
mov
je
push
xchg
loop
xchg
out
popa
incb
repz
add
push
push
outsl
int
dec
mov
xchg
cld
lea
mov
push
addr16
out
std
adc
divl
add
es
jae
addl
mov
movsl
out
cld
outsl
movsl
enter
pop
or
add
sahf
cmp
fcmove
sarb
ljmp
fucom
sbb
das
dec
and
and
cmp
push
bound
jecxz
lods
cmpsb
xor
lea
imul
inc
push
jno
add
std
fs
les
xchg
roll
add
cmc
loop
and
arpl
xor
adc
in
xor
cmc
arpl
mov
add
xor
push
xor
add
add
add
add
jns
mov
mov
and
jp
mov
ljmp
dec
pop
movsb
shll
ja
fidivrs
pop
or
xchg
jl
pusha
dec
clc
jmp
jae
sub
arpl
cmp
xlat
push
xchg
jnp
push
sub
scas
ret
cmc
aam
clc
insb
sub
adc
add
add
icebp
mov
flds
push
sub
negl
gs
sub
cld
cs
out
aam
cld
jae
fcompl
repnz
jge
add
lods
jmp
js
push
mov
mov
test
pop
mov
mov
jmp
jb
jmp
hlt
in
bound
shrl
jno
loop
lock
add
xor
or
std
jnp
mov
cli
test
sti
add
lock
mov
inc
je
test
jo
mov
test
cmp
push
sub
test
mov
add
inc
hlt
dec
mov
clc
cmp
mov
mov
outsb
cwtl
cmpl
leave
add
pop
pop
stc
mov
divb
daa
shlb
jae
pop
or
add
shl
in
decb
ret
mul
mov
or
outsl
add
loop
xorb
or
mov
jcxz
jg
dec
hlt
xor
dec
inc
or
loop
lds
aad
and
loop
ja
out
dec
fadd
mov
xor
mov
arpl
add
loop
out
daa
enter
outsl
in
stos
es
popa
fwait
out
loop
mov
push
inc
aaa
or
mov
in
add
inc
push
aad
sbb
cmp
cmc
int
xor
lret
inc
out
bound
fsubrl
jmp
or
inc
mov
ds
negl
loopne
push
or
add
gs
idivl
cmp
push
xor
bound
loope
and
in
jp
adc
jmp
into
dec
jg
roll
jne
jl
adc
stos
mov
fnstsw
test
bound
mov
jp
cld
gs
pop
sbb
das
add
fldenv
cmp
inc
adc
mov
andl
add
add
add
pop
insb
xchg
call
dec
std
outsb
les
mov
sub
aad
lret
or
xor
lret
mov
inc
in
out
in
cmp
or
jb
call
je
std
xlat
lcall
xchg
mov
push
jecxz
out
pushl
std
dec
daa
jbe
inc
mov
in
add
add
xlat
orb
loopne
pop
pop
int
hlt
lock
mov
xlat
jle
dec
xor
mov
testl
cmp
aaa
inc
addl
mov
add
in
jae
dec
and
in
cmp
sub
cmp
ret
imul
push
popa
or
aaa
and
add
pop
in
mov
les
jne
je
notl
add
clc
jecxz
aam
psrld
xchg
cmp
xchg
cmp
jae
dec
cmp
sbb
mov
mov
dec
ja
push
test
scas
push
jae
jno
and
sbb
sarl
or
lods
pop
jecxz
imul
arpl
add
sbb
roll
add
pop
imul
cld
aam
add
mov
or
cmpsb
jg,pt
pop
lock
or
mov
call
pop
int
rcrb
or
inc
or
out
loop
dec
cmp
lods
aas
daa
add
adc
pop
jae
jp
aad
or
pop
jecxz
jle
rorl
mov
add
test
je
mov
xor
jmp
fldenv
push
lock
mov
into
outsl
add
leave
xchg
andl
shl
iret
push
aad
mov
test
add
int3
test
dec
divb
cmpsl
add
and
inc
jmp
loope
inc
vpsubb
push
inc
leave
sub
add
out
adc
jo
add
scas
inc
jge
sbb
aas
fidivrl
int
sti
xor
inc
in
lds
stc
xor
push
sarb
add
sti
jbe
xor
sti
jbe
xor
sti
jbe
xor
sti
jbe
sub
imul
sti
jbe
sub
imul
xchg
mov
je
add
scas
aaa
ss
in
imul
call
dec
mov
sti
cmp
or
cmpsl
stos
sti
jmp
lcall
in
das
jns
mov
std
hlt
orb
xor
mov
cld
sbb
jle
mov
fildl
add
fnsave
add
add
in
rolb
test
flds
xor
std
add
gs
fdivr
lods
inc
adc
fs
mov
push
xor
add
cli
in
sar
push
shlb
xor
lret
or
out
loop
sbb
into
adc
add
scas
adc
add
add
add
or
cmc
popa
pop
call
sti
pop
xor
aad
insl
fdivl
out
loopne
movsl
xor
cmp
ret
imulb
js
and
xor
cmp
mov
mov
inc
out
fwait
icebp
inc
daa
add
inc
add
int
lock
jmp
stos
icebp
or
jne
cld
jmp
add
add
pop
sbb
add
and
fs
fbstp
and
imul
dec
lretw
mov
jbe,pn
fiadds
je
adc
insb
je
rcll
subb
push
add
loope
imul
loope
and
loope
cld
pop
lret
lea
add
pop
int3
cld
add
dec
and
mov
xor
inc
and
fcompl
inc
lahf
inc
push
lea
sbb
loope
call
mov
mov
or
jo
jecxz
add
pop
pop
sti
push
test
and
push
call
jbe
and
pop
fldcw
les
xchg
les
dec
adc
dec
push
lea
adc
add
xor
inc
and
pusha
mov
push
push
loop
leave
inc
mov
adc
inc
add
add
pop
jge
into
addl
push
push
lds
flds
je
in
add
in
inc
add
int
adc
movb
pusha
pop
add
add
add
jno
addr16
sbb
je
in
call
pop
cmp
rcrb
pusha
ret
add
call
cld
divb
fwait
xor
cmpsl
push
add
mov
dec
call
and
push
xor
xor
adc
lea
adc
and
push
arpl
push
adc
lea
add
mov
lret
repnz
lret
and
scas
sbb
sub
or
ja
lret
testb
hlt
fadds
pusha
bound
sub
cmp
fadds
dec
push
sub
lea
fucomip
push
pop
incb
imul
movsl
add
adc
jo
jecxz
mov
into
jb
js
std
mov
add
add
jp
pop
pop
xor
or
out
test
loope
mov
frstor
out
sbb
xchg
mov
gs
call
jmp
dec
dec
pop
es
inc
inc
and
imul
lcall
add
cmp
mov
mov
aad
addr16
insb
add
inc
enter
and
lret
enter
push
cld
jo
add
ror
mov
cmp
dec
mov
mov
decl
insl
add
arpl
pop
std
mov
decl
lds
sub
lock
add
aaa
cmp
add
add
or
or
aam
add
add
je
leave
push
sub
aam
and
call
andl
leave
inc
loop
pop
aam
sbb
xchg
popa
testb
mov
inc
loop
es
adc
sub
jg
inc
fnsave
std
pop
fadds
loop
inc
sbb
or
add
add
lods
cmp
cmp
push
pushl
fwait
pop
ret
mov
add
bnd
xor
ficomps
mov
jb
cltd
add
icebp
xor
or
icebp
add
or
mov
bswap
and
ja
mov
push
std
int
sbb
inc
repnz
mov
cmp
out
in
imul
pop
mov
add
sbb
add
imul
movsb
xor
rorl
jmp
loope
call
andl
sbb
mov
add
ret
pusha
push
cmp
mov
or
outsb
add
xchg
xchg
fdivs
rcl
cmp
bound
call
push
xor
call
divb
sbb
cld
out
adc
and
add
add
sbb
or
mov
call
scas
out
rcrl
pop
push
jb
dec
std
jno
xor
ljmp
ljmp
and
lds
cmp
push
lds
push
push
std
dec
shl
add
jbe
jo
or
scas
fldcw
mov
aas
orl
aaa
pop
fstpt
jmp
fldl
add
pop
sti
mov
xor
add
lret
clc
aas
add
cmc
gs
adc
or
and
jno
or
test
jnp
dec
jne
add
sti
jne
pop
call
and
loope
inc
dec
push
mov
add
mov
pusha
pushl
inc
add
add
and
pop
loop
dec
push
fs
jae
or
push
lret
dec
dec
jg
leave
xor
dec
icebp
sbb
rclb
xlat
mov
or
sti
add
loop
xchg
xor
mov
std
cld
jne
jbe
insl
jnp
mov
pop
fisubrl
addr16
push
incl
sbbb
stc
dec
add
add
call
andl
jl
jecxz
out
imul
stc
inc
loop
ds
out
inc
add
xor
cmp
ds
pop
lret
add
push
loope
push
subl
jo
push
out
and
out
out
jp
stc
and
push
loope
pop
inc
stos
in
mov
push
cld
add
add
mov
ret
out
pusha
mov
stc
pop
insl
push
push
pop
jmp
stc
shlb
fadds
mov
test
ret
jmp
movsl
mov
add
cld
mov
loope
cmpb
mov
dec
movsl
in
cs
les
test
sub
cld
xchg
jge
add
lds
inc
mov
movb
add
push
cmp
icebp
pop
addb
leave
add
pop
vrcpss
mov
sbb
gs
imul
cld
cmpsb
dec
push
fcomps
in
mov
push
xor
inc
jb
call
xchg
jo
lods
add
subb
testb
or
lcall
add
inc
mov
addl
add
add
add
pop
dec
dec
pop
push
push
stos
jno
xchg
mov
hlt
inc
out
jg
add
lods
pop
xchg
jecxz
fdivr
jl
mov
jnp
cmc
push
and
add
sub
add
inc
mov
sti
adc
loop
aas
cld
popa
lahf
hlt
or
inc
add
loop
push
push
cld
xchg
std
sbb
add
cmp
pop
jecxz
dec
mov
lahf
adc
fs
clc
xchg
stos
cmp
mov
idiv
fstpl
into
andb
outsl
sub
xor
cmc
jb
mov
add
push
cld
mov
rclb
lea
cld
cmc
aad
mov
je
jb
cmp
loopne
frndint
xlat
cmc
adc
add
loop
adc
inc
es
adc
inc
xrelease
jp
es
jg
xor
insl
push
push
xor
int3
and
out
int
cmpl
lcall
popf
out
loop
push
outsb
and
es
and
jg
xor
add
jp
inc
mov
add
cmp
inc
loop
ljmp
add
xor
xchg
mov
cmp
out
jge
jmp
push
mov
xorb
mov
lcall
je
mov
push
mov
jb
pop
hlt
dec
insb
lds
dec
arpl
or
popf
sub
jo
xlat
mov
mov
mov
sti
push
iret
mov
add
pop
bound
scas
leave
add
loope
std
scas
mov
rclb
push
ss
addr16
stos
jno
bound
sbb
dec
jmp
aam
or
inc
add
incb
mov
sar
mov
mov
bt
adc
nop
pop
push
cwtl
lret
dec
xor
mov
jmp
push
add
test
push
insl
test
test
jno
decl
jmp
lock
sar
push
add
or
xor
mov
jne
loop
hlt
push
mov
leave
dec
les
aad
mov
add
lahf
dec
call
imul
add
add
add
pop
mov
mov
fucomi
mov
mov
mov
je
mov
je
sbb
pushf
enter
cmp
gs
pop
stos
or
add
dec
loopne
mov
xchg
push
call
or
jp
xor
fmull
call
jo
pop
mov
jle
add
lock
out
lods
sub
movsl
inc
jmp
lea
arpl
out
mov
add
popf
cmpsl
sub
pop
outsb
xor
or
repnz
icebp
fisttpll
pop
jbe
push
mov
mov
add
test
in
xchg
cmp
dec
add
lret
add
dec
push
xor
jl
in
arpl
add
add
mov
fbstp
add
leave
push
pop
mov
jmp
push
test
test
cmp
call
push
sub
inc
in
add
sar
gs
add
loope
inc
test
enter
xor
fisubs
add
loope
bound
inc
and
inc
punpckldq
call
pop
cmc
dec
lahf
add
add
aas
or
sub
jae
data16
clc
jmp
loope
addl
add
add
mov
inc
xchg
cmp
mov
lcall
in
imul
xor
push
leave
xor
in
add
push
mov
in
or
rolb
cmp
xchg
jmp
add
add
add
add
add
jb
or
add
in
jp
sub
adc
push
jae
test
inc
and
cmp
mov
sub
pop
pop
pop
adc
pushf
inc
xor
andb
inc
loopne
movl
lock
pop
adc
pop
xchg
dec
dec
dec
std
push
push
inc
or
jbe
add
add
clc
out
enter
lahf
js
inc
scas
clc
push
jecxz
jns
adc
cmp
mov
ja
loope
push
xchg
pop
in
mov
inc
sub
call
adc
pop
xor
push
sub
imul
mov
xor
jp
sub
add
mov
add
add
movsl
sub
sbb
xlat
out
shlb
or
lea
imul
es
jnp
leave
hlt
inc
das
mov
stc
pop
imul
adc
mov
fndisi(8087
cmp
call
pusha
popa
dec
out
out
ret
fnclex
daa
fs
xlat
mov
xor
sub
mov
add
sub
dec
bound
jb
mov
mov
jne
test
jae
adc
cld
into
jmp
adc
mov
mov
jne
mov
or
sub
dec
sub
push
xchg
out
call
mov
dec
outsb
lea
std
fdivr
into
outsl
jbe
xor
gs
clc
add
cmp
lea
push
push
decl
mov
add
scas
mov
clc
insl
ficoml
ret
test
ficompl
xchg
lds
or
jo
jmp
clc
jns
pop
mov
mov
in
enter
shr
inc
sub
mov
repnz
mov
bnd
add
cmp
shr
xor
add
pop
and
negl
jbe
cld
push
jo
dec
push
loop
jbe
cli
outsb
xchg
fldl
clc
pop
pop
jne
cmp
jge
mov
jmp
rorb
push
sub
xchg
andl
flds
imul
call
adc
in
adc
xor
lock
add
add
jbe
loopne
aas
cld
stc
mov
in
push
xchg
cmp
ds
lahf
enter
jbe
negl
loope
push
push
or
les
sbb
data16
lock
or
jo
mov
xchg
push
inc
jmp
outsb
sarl
sub
inc
rclb
dec
popf
out
testb
test
xchg
xor
add
pop
popa
jo
mov
lret
lcall
jo
jo
inc
pop
cmp
test
pop
pop
outsl
sub
add
mov
aam
clc
test
and
pop
fs
lods
cmpsb
outsl
sti
pop
cmp
jmp
xlat
jo
mov
clc
pop
std
cld
sbb
stos
les
add
add
push
mov
inc
es
xchg
scas
cmc
popf
repnz
add
cli
enter
xor
dec
call
adc
aam
add
mov
cld
cmp
cmp
sub
push
pop
jb
pop
shll
cmp
cmp
xor
add
xor
jo
stc
jnp
add
add
sub
aam
sti
je
sbb
shrl
sti
add
inc
xchg
add
cmpb
je
mov
leave
adc
mov
scas
je
mov
std
out
xchg
leave
sti
and
jo
jecxz
idiv
mov
push
lea
cmp
pop
decl
pop
lcall
mov
clc
sub
adc
add
add
xor
pop
mov
mov
mov
xlat
cmp
mov
insl
pop
std
sarb
stos
inc
shll
push
std
decl
pop
sub
movl
jb
dec
aas
or
sub
adc
sbbl
mov
xchg
in
mov
pop
sub
sbb
outsl
inc
sbb
sbb
sub
jecxz
ja
mov
push
inc
sbb
frstpm(287
xor
imul
and
xor
sub
or
jl
or
jp
sub
fisubs
lret
xor
ret
das
out
mov
loop
insb
inc
mov
sahf
dec
out
jno
jg
xor
add
push
fs
fwait
add
add
mov
repnz
or
out
xchg
addr16
fs
sbb
mov
out
ficoms
mov
daa
add
jne
pop
mov
iret
mov
mov
mov
std
xlat
or
xchg
jmp
enter
addl
inc
jmp
sbb
pop
data16
mov
gs
call
add
negl
std
idivl
jns
ljmp
dec
adc
jnp
xor
call
insb
lds
cli
repz
or
insb
xor
jmp
adc
jo
test
jle
notl
mov
aad
call
push
push
pop
push
incl
add
je
mov
and
sub
mov
daa
jns
daa
es
cmp
mov
pop
test
xchg
enter
mov
add
mov
xchg
sti
mov
mov
add
test
sub
shll
aaa
mov
sti
ja
mov
test
and
add
js
inc
sub
icebp
pop
jmp
xchg
add
add
mov
cmp
inc
mov
cmp
ja
popa
mov
outsb
or
ds
pushl
add
notb
push
push
mov
pop
adc
imul
subb
mov
fmul
push
mov
rcrl
daa
jmp
pop
fmul
dec
test
pushl
mov
adc
cmp
xchg
shl
mov
and
pop
repz
stos
imul
mov
lods
lods
out
jb
fcoml
repz
add
or
mov
add
add
add
xchg
stos
loop
mov
adc
mov
pop
jnp
mov
push
or
jecxz
jno
push
or
popf
inc
loop
jecxz
pop
idiv
jmp
or
loop
jno
jl
mov
divl
lods
xor
imul
cmp
mov
cmp
mov
lods
cld
jmp
xchg
lods
cld
xchg
mov
adc
loope
mulb
add
add
or
cli
lods
cld
outsb
push
testl
jmp
adc
jl
and
addl
lods
cld
push
cmp
add
rcrl
mov
and
push
add
mov
repnz
or
jmp
xchg
jno
rolb
ljmp
lock
clc
xchg
sti
pop
add
add
cmc
jl
aaa
cmpsl
or
mov
jae
je
pop
add
xcrypt-ecb
cmpsl
dec
call
cli
icebp
or
jecxz
sti
inc
mov
cmp
or
or
mov
mov
jo
std
jae
hlt
jnp
loop
nop
sub
cmp
mov
xchg
aaa
std
out
jnp
mov
add
ljmp
push
pop
mov
xlat
stc
xlat
xlat
xlat
lods
aad
add
movsb
xor
jmp
dec
add
and
clc
imul
sub
add
mov
mov
add
aad
inc
adc
fwait
xchg
inc
repnz
les
outsb
clc
pop
push
in
int3
out
aad
cld
popa
pop
or
mov
add
xchg
xor
push
sbb
mov
es
ret
lods
loopne,pn
insb
xchg
add
lock
pop
sub
imul
cli
jmp
or
fbld
sarl
cmc
xor
pop
sub
add
popf
test
adc
shlb
ds
ja
or
std
sbb
pop
pop
iret
mov
add
pusha
jno
sbb
repz
xor
pop
ficompl
jnp
and
add
inc
call
push
jb
pusha
jo
add
add
and
xchg
push
movsl
cld
gs
and
sbb
push
pop
inc
and
bound
xor
push
and
hlt
mov
mov
sahf
add
add
add
movsl
call
in
xor
shrl
xor
mov
arpl
fidivrl
add
pop
adc
mov
fwait
sub
xor
ror
xchg
clc
xchg
adc
mov
dec
push
dec
test
jp
add
iret
insb
or
add
mov
scas
add
jg
sbb
or
sar
push
jae
hlt
pushl
movq
sti
mov
fcomps
repz
mov
enter
mov
sti
call
sti
addl
test
xor
jmp
jo
xchg
xchg
add
filds
inc
loop
pop
je
faddl
sbbb
add
push
adc
add
dec
inc
mov
mov
in
jp
jmp
pop
and
adc
bound
adc
imul
cmc
loop
push
push
xchg
push
in
or
xlat
cld
adc
repz
jmp
adc
or
inc
push
and
loop
add
aas
xor
or
add
xor
loopne
add
xor
add
add
cwtl
cli
xor
mov
movsl
out
and
out
popa
ja
hlt
xchg
add
xor
mov
cmpsb
std
xchg
xchg
imul
aad
out
loop
arpl
ljmp
fldt
lret
out
iret
mov
test
inc
loop
adc
push
sbb
ficoml
jns
add
add
imul
xchg
fnstcw
push
xchg
mov
ljmp
movsl
addb
test
out
add
mov
enter
sbb
or
popa
fidivs
add
stos
mov
movsb
xchg
scas
mov
call
push
lods
call
mov
xor
cmp
sbb
add
cmpsb
xor
aaa
into
mov
divl
test
loopne
pushf
jne
push
imul
aaa
gs
add
aas
add
push
inc
in
inc
mov
dec
sarb
call
test
aaa
test
jbe
xchg
push
jne
adc
mov
add
mov
pop
xchg
rcll
ljmp
in
stc
or
jbe
jnp
cld
cmp
xchg
das
cwtl
test
add
jne
fisttpl
xlat
dec
aaa
fidivrs
test
les
or
les
addb
loop
cmp
xor
jb
jae
xchg
jle
loop
add
movsb
cmpl
add
cmp
inc
hlt
add
add
xchg
xor
decb
cld
pop
int
mov
jo
dec
mov
inc
jo
aad
mov
je
dec
jbe
inc
je
int
xchg
jnp
jl
push
inc
in
stc
roll
xchg
and
inc
jnp
dec
aam
mov
mov
pop
rcrl
xor
add
mov
fisubrs
out
mov
imul
lds
adc
add
add
mov
sarl
cmp
aas
iret
adc
inc
fcomps
dec
shl
icebp
dec
jmp
dec
sti
gs
pop
and
mov
xor
mov
dec
sbb
inc
or
mov
sub
out
push
mov
mov
call
mov
sub
and
add
add
add
add
mov
jmp
test
out
jo
pop
mov
adc
out
mov
popf
out
mov
imul
and
mov
mov
icebp
ljmp
loope
or
xchg
inc
mov
and
push
mov
addr16
fcoml
and
out
sub
push
add
add
popf
adc
jne
pop
add
jmp
push
decb
jo
dec
xchg
mov
push
add
cmc
out
out
inc
sti
dec
push
mov
aas
sbb
push
mov
xchg
cmp
or
jle
adc
mov
mov
cmp
mov
mov
call
imul
add
add
pop
out
bound
add
incl
push
add
pop
lea
jno
jmp
xchg
mov
push
sub
push
fs
stos
in
push
fldenv
fwait
inc
add
add
pop
cs
or
loop
mov
push
stc
dec
mov
add
sub
add
loop
mov
and
inc
add
push
aas
add
movl
fsubp
leave
iret
push
insl
sbb
sbb
sbb
fwait
sub
add
fnstenv
ds
js
inc
loop
dec
ljmp
fisubrl
or
push
sahf
icebp
mov
mov
cs
add
add
out
jecxz
xchg
enter
cmp
outsb
out
test
pushl
sbb
add
stos
cmp
popa
xor
add
bound
sub
lcall
add
mov
pop
loop
arpl
fidivs
ss
sub
cld
jmp
arpl
call
sti
mov
pushf
subl
add
add
add
loope
sub
push
lock
mov
pushf
cld
bound
mov
std
xchg
pushf
cld
jmp
and
and
sbb
mov
xchg
idiv
dec
xchg
mov
lock
sbb
cmp
or
cltd
sahf
cld
push
popf
lock
pushf
jno
pop
lds
jg
or
add
repz
dec
sbb
hlt
jmp
mov
adc
jg
mov
mov
sbb
push
pushl
int3
push
inc
or
adc
or
out
sti
adc
mov
pop
mov
jae
inc
roll
cmp
dec
dec
cmova
add
mov
pop
call
mov
add
lea
dec
call
add
add
add
add
jle
fmull
shl
jmp
inc
rclb
xor
add
roll
xchg
jne
cmpsl
loopne
test
mov
mov
xchg
out
push
xlat
pop
into
incb
popa
and
add
aam
jae
std
mov
mov
push
dec
add
mov
add
add
add
and
xor
iret
cld
mov
xchg
mov
xor
mov
jl
popf
mov
dec
jg
iret
jg
xor
call
xor
jl
out
ja
lcall
lock
rcll
mov
not
dec
and
scas
cmc
std
xor
decb
fidivs
inc
call
mov
cwtl
inc
bound
add
mov
xor
ljmp
dec
jp
sub
fisttpll
jne
repnz
repz
mov
cmpsl
mov
push
lret
daa
bound
out
imul
test
xchg
mov
loope
ljmp
inc
lds
pushf
xchg
popa
cltd
cld
jmp
add
add
test
loope
push
scas
lock
push
inc
call
mov
sub
es
inc
call
arpl
and
mov
jb
adc
and
mov
or
bound
jnp
mov
xchg
cld
jb
call
and
scas
decl
mov
and
dec
call
mov
pop
dec
incl
add
dec
push
and
adc
add
and
add
xlat
dec
sbb
xor
mov
dec
adc
decl
push
and
and
nop
jb
je
clc
push
call
inc
add
jb
and
arpl
js
mov
add
add
jns
mov
pop
and
jp
cmp
add
loop
fdivr
adc
int
push
es
adcb
cmp
cli
ljmp
popa
scas
pusha
add
pop
mov
outsb
hlt
xchg
inc
insb
loop
dec
pop
pop
iret
fs
mov
cld
addr16
sub
inc
and
and
inc
jp
inc
insb
loop
adc
std
int
mov
or
xchg
adc
outsl
adc
pop
fstl
or
test
jl
fldl
loop
es
or
fwait
mov
mov
cmpsl
add
adc
dec
and
mov
imul
dec
sbb
pop
mov
xchg
out
loope
xor
mov
push
loop
stos
xorl
scas
fistpl
int3
pusha
jno
pop
add
add
call
dec
ficoms
add
cmp
icebp
mov
sahf
push
rclb
repz
stos
icebp
out
mov
hlt
ljmp
out
adc
push
add
cmpsb
push
pushaw
sbb
mov
insb
push
and
mov
shrb
jae
sbb
pop
adc
mov
ret
ds
sahf
call
popa
sahf
ss
or
jecxz
rol
pop
xchg
shrb
mov
and
sbb
insl
and
push
xchg
movsb
jmp
xor
lahf
pop
pop
stos
pop
dec
add
cld
rclb
or
cmpsb
loopne
je
ficoms
add
push
out
add
dec
jne
add
xor
inc
out
std
jae
call
mov
inc
ret
bound
adc
add
jne
jae
mov
hlt
add
sti
adc
enter
jge
xchg
mov
je
stos
hlt
add
sub
rol
insb
cmp
mov
and
in
jmp
test
inc
sti
insl
add
adc
push
mov
cld
add
sti
push
loop
dec
or
mov
loop
add
push
mov
add
inc
add
dec
add
mov
push
ret
pop
loop
jge
xor
or
inc
lock
ror
add
out
xchg
fcomps
push
add
jae
pop
dec
or
adc
xor
mov
test
jb
jp
daa
repnz
add
and
cli
sbb
std
add
add
ja
adc
xor
inc
loop
movsb
sub
cmpsb
jp
leave
xor
adc
and
lock
lds
rorb
pop
in
dec
xor
push
xor
add
xor
push
ss
daa
movsb
mov
out
stc
aas
cmpsl
add
jnp
mov
sarl
repnz
add
add
add
add
sub
imul
sbb
sbb
lock
inc
loop
add
fisubrs
inc
mov
stos
xchg
adc
rcll
insb
mov
mov
cld
test
and
lds
inc
lods
lods
das
add
loope
adc
xchg
push
add
pop
lcall
push
add
add
cld
hlt
aad
inc
jmp
sub
lods
cs
sub
clc
out
inc
imul
inc
outsl
add
shlb
mov
mov
idiv
xor
adc
sbb
incl
sub
push
inc
cmp
adc
xor
dec
push
icebp
popf
sti
jne
js
test
test
inc
add
add
out
xchg
cmp
je
pop
call
mov
or
sub
cld
sub
jl
xlat
mov
ds
adc
jo
jo
shll
lea
mov
dec
push
jmp
das
lds
testb
adc
ret
jno
or
fcoms
fadds
add
fiaddl
push
lret
std
int
lds
push
lock
rcrb
pop
push
int3
jns
adc
pusha
cld
loop
mov
adc
pop
dec
and
cli
dec
inc
loop
lds
cmp
dec
adc
les
ds
iret
addr16
push
add
pop
mov
jmp
in
and
cmp
cmp
mov
or
pusha
aaa
push
dec
lods
dec
call
fcomps
mull
in
lods
xor
fnstenv
pushf
and
out
imul
mov
js
cmp
jecxz
lds
cmp
out
aaa
out
xor
repz
fdiv
out
inc
add
mov
aas
jle
and
cmp
add
push
add
jns
add
adc
inc
loop
adc
mov
push
xchg
xor
loope
mov
aas
negb
aaa
cmp
add
mov
cmpsb
lock
push
inc
xor
mov
mov
sub
out
in
mov
push
cmp
std
fdivrl
add
push
and
call
inc
add
add
inc
ss
mov
adc
mov
jmp
xor
adc
xchg
pop
popa
sti
adc
ret
cmp
add
mov
jmp
dec
inc
add
jno
push
sub
hlt
mov
rorb
int3
mov
add
xor
lods
mov
add
add
mov
mov
in
jge
jo
test
dec
decl
dec
cmpl
cli
xchg
push
pop
outsl
adc
xchg
lock
outsl
mov
lahf
cmp
push
aaa
add
mov
mov
sbbl
lcall
add
loop
push
push
mov
push
push
add
cmp
add
sbb
jae
fidivl
loopne
insl
enter
rcl
sub
cld
mov
dec
in
pop
mov
aas
mov
push
mov
mov
jb
adc
mov
cmp
dec
lock
incb
adc
flds
andl
ds
mov
aaa
jecxz
adc
stos
push
stc
add
mov
stos
adc
add
xchg
push
out
mov
out
out
mov
mov
pop
bound
daa
add
jo
adc
lock
mov
jo
jmp
mov
xor
xor
pop
das
mov
jge
mov
ffreep
rclb
imul
mov
xor
lahf
cmp
xor
mov
mov
jmp
add
add
lret
fs
adc
lock
jmp
mov
jmp
sub
xor
dec
or
dec
fnsave
add
stos
mov
xchg
inc
cld
sbb
sbb
sub
cwtl
pop
jle
lea
jmp
push
xchg
xchg
xor
cld
sbb
xor
outsb
adc
insb
out
pop
ror
or
xor
addb
sbb
test
mov
or
hlt
fucom
sub
xor
inc
pushl
xlat
movswl
xorl
add
mov
adc
push
xorl
jp
repz
incl
add
lret
mov
sti
push
jecxz
jne
lret
adc
hlt
incl
xor
mov
cmp
or
ficoms
sbb
flds
andl
or
popl
mov
xchg
sbb
cltd
add
lahf
and
add
cltd
test
daa
xchg
mov
hlt
cmp
mov
add
cmpsb
mov
inc
xor
mov
and
sub
jecxz
shll
push
push
push
and
daa
push
mov
dec
mov
mov
add
mov
xor
mov
popl
mov
and
aad
clc
xchg
add
xchg
icebp
mov
add
dec
jecxz
cmp
ficoms
adc
xor
sub
dec
pop
xor
loopne
aaa
or
cmc
push
js
int
push
and
add
add
lods
inc
in
push
in
test
mov
sub
xor
imul
shll
xor
push
or
cs
xor
xor
xor
pop
mov
add
xor
loope
lcall
mov
push
jb
xor
cmp
or
mov
fdivp
jne
lods
push
cmc
pop
push
aas
push
cmp
mov
lock
xchg
sbb
mov
fidivs
dec
jo
test
lcall
vpunpckhdq
testl
add
add
add
add
clc
cmpsb
inc
mov
dec
mov
add
js
sti
inc
das
mov
sti
add
aaa
inc
jg
mov
xor
or
sti
fadds
mov
call
xor
in
pop
repnz
add
lcall
je
jb
aam
in
call
sti
ljmp
enter
add
add
inc
add
xor
push
or
lahf
loopne
in
add
divb
imul
add
loop
inc
add
cmovo
mov
mov
lcall
ret
add
cmovo
mov
mov
cltd
arpl
flds
mov
adc
inc
loop
push
mov
cltd
arpl
flds
mov
add
add
add
add
inc
inc
add
cmovo
mov
mov
cltd
arpl
out
pop
add
bound
cmovo
mov
mov
cltd
arpl
pop
add
xorb
inc
loop
sahf
adc
xor
jo
out
mov
jo
inc
loop
jbe
and
dec
rcll
out
xchg
sbb
fwait
inc
loop
cmp
and
mov
dec
sbb
add
add
xorl
inc
loop
ds
xor
mov
out
rcrl
cmp
cpuid
xor
push
out
out
jno
daa
add
lock
inc
loop
mov
mov
out
out
fstps
add
xor
dec
push
mov
adc
out
jg
pop
xor
dec
dec
mov
adc
add
add
iret
lahf
lahf
daa
xor
mov
mov
adc
pop
xor
mov
mov
adc
cmpsl
xor
dec
jbe
inc
jmp
loope
pushl
div
decl
subb
fmulp
pop
add
mov
push
push
in
add
add
sub
inc
sub
jmp
sub
mov
mov
sub
pusha
fsubr
jmp
pop
cmp
or
orb
sti
xor
pop
popf
mov
dec
push
mov
mov
jmp
test
mov
dec
push
and
in
in
jmp
test
mov
sti
or
adc
add
mov
mov
adc
mov
mov
xchg
arpl
loop
inc
add
ljmp
into
dec
add
add
inc
add
ljmp
repnz
add
popa
shlb
cmp
add
in
mov
mov
mov
inc
loop
insb
ja
mov
sub
enter
add
loope
add
leave
add
stos
js
loop
lret
xor
loop
mov
cmp
out
wbinvd
ret
cmp
mov
inc
add
outsb
inc
loop
jbe
and
je
jg
mov
cmpb
cmpsb
jg
mov
out
sar
sahf
inc
loop
adc
repz
add
add
mov
mov
fldt
mov
sub
inc
loop
mov
xor
add
push
daa
and
add
jg
and
mov
es
loope
xor
pop
cli
fbstp
xchg
imul
jle
cld
xor
jnp
lds
xor
shl
decl
add
add
add
add
call
daa
stos
inc
test
jl
cmc
dec
inc
loopne
and
push
das
subb
mov
jmp
fnstcw
loope
fdiv
xchg
jge
insb
mov
out
sbb
jge
loope
xor
add
sbb
add
mov
std
push
mov
loopne,pt
xchg
sbb
inc
in
add
jb
daa
negb
sti
jmp
mov
lock
sti
mov
dec
mov
lret
int3
push
mov
ja
sti
incl
and
add
shl
sbb
adc
jge
sti
dec
push
cld
add
dec
or
sub
fmull
jmp
jl
push
mov
sahf
test
add
add
add
add
test
add
adc
mov
or
cld
cmc
xchg
add
fistps
les
and
daa
call
adc
fwait
dec
xchg
mov
ret
push
mov
or
push
adc
mov
out
pop
add
imul
add
jne
or
and
int
loopne
cmc
xor
add
and
ret
pop
sbb
sub
xor
add
enter
mov
ja
jl
mov
mov
push
fadds
loopne
sbb
pop
daa
add
pop
adc
fidivs
cmp
shrb
dec
inc
push
cmp
popf
sbb
daa
add
jo
sbb
ljmp
xor
mov
add
dec
add
imul
sub
mov
xchg
inc
sbb
cmpsl
add
call
add
push
pop
cld
popf
clc
mov
push
ficompl
push
sbb
push
push
ficompl
cmp
inc
jmp
sbb
push
jno
xchg
xchg
in
bound
and
sub
scas
ret
in
pop
mov
mov
add
add
add
add
mov
cld
sahf
push
das
cmp
shl
jns
pop
cmpsb
mov
mov
xor
data16
xor
inc
xor
sub
and
std
aam
jge
add
and
shl
fsubrp
cmp
decl
sub
cltd
ja
std
daa
and
outsb
sub
ret
mov
scas
pop
jne
mov
outsb
and
dec
add
add
lret
sub
jle
popa
sarb
aas
cld
lds
int3
xchg
ret
out
repz
stc
xor
cmp
xchg
and
add
sub
std
xor
adc
push
int
int3
cmpsl
pop
or
loop
std
jp
js
imul
stos
push
jb
cmpsl
or
test
xor
add
add
add
add
pop
ss
push
mov
jmp
pop
std
add
pop
jbe
rcrl
pop
xor
push
cmp
or
or
in
or
inc
xor
jmp
and
aad
dec
fildll
push
push
mov
jno
and
sti
cltd
sarl
xor
mov
jo
jne
add
inc
pop
insl
or
cli
incb
xchg
and
clc
pop
and
out
pop
test
mov
out
xchg
fidivs
lret
mov
inc
and
sub
add
ljmp
mov
call
xor
sti
push
js
dec
ret
add
ja
repz
lock
lods
test
sbb
add
add
cmp
in
test
lret
add
in
pushl
jo
shlb
hlt
push
int
cld
pop
bound
hlt
inc
gs
dec
push
mov
cmpsl
test
shl
mov
cmp
add
xchg
frstor
div
incl
lods
jne
push
mov
jge
fdiv
xor
insl
repnz
cmp
add
loope
xor
std
mov
cmpb
cmp
loopne
in
lret
jne
cmp
sti
push
or
or
mov
inc
add
and
push
insl
jno
cmp
sti
call
outsl
in
or
sti
incl
fsub
cltd
add
sti
test
cmp
incl
sti
adc
add
add
add
incb
and
cld
pop
sti
jne
dec
filds
subl
jno
mulb
scas
mov
add
xchg
add
sbb
mov
or
cmc
push
test
or
imul
fisubl
xor
jb
add
bound
cmp
scas
jg
jge
pop
arpl
push
js
addr16
xor
cli
or
cmc
inc
add
sti
std
push
push
cld
in
or
jae
ss
mov
cmpsb
cld
aad
pushf
std
js
test
mov
pop
stc
xchg
mov
loope
subl
je
inc
fbld
add
cwtl
cmp
test
pop
jle
and
dec
mov
fnsave
pushf
filds
in
fdivrp
in
jne
int
loop
mov
adc
sbb
jl
xor
fisubl
pusha
inc
fstp
jae
fisubrs
mov
das
and
cli
ret
xor
add
add
add
mov
out
xor
inc
sub
cmp
fs
incb
pop
aas
jmp
adc
add
jae
jb
sub
jmp
loope
push
lret
jmp
arpl
call
leave
cs
call
loope
add
loope
push
notb
cmpsb
lea
add
fidivs
add
sbb
bound
xor
add
mov
pop
ds
jno
xor
mov
push
xor
mov
add
jnp
mov
decl
repz
jne
add
je
cs
rcrb
iret
call
mov
loope
dec
cs
xchg
lahf
aam
add
add
cs
jle
mov
xor
faddl
add
cmc
and
sub
add
loop
jo
cmp
ret
jbe
cmp
lea
cmp
xchg
xor
sbb
or
fwait
pop
xor
popa
mov
jae
sbb
push
or
xchg
popa
cmp
add
fistpl
add
out
xor
loopne
stos
stos
push
orl
jbe
xor
or
jo
gs
dec
je
xchg
andb
fwait
les
xchg
pop
and
push
cld
pop
sub
ret
pop
pop
mov
loop
inc
orl
mov
loop
sbb
popf
or
pop
mov
mov
add
add
mov
bound
jno
mov
es
cmp
insl
cmpsl
pop
ja
fwait
pop
mov
push
cmpsl
push
ds
call
inc
adc
cltd
mov
xchg
andb
sti
cmpsb
push
push
push
adc
cmpsl
add
adc
cmc
call
inc
insl
xor
popa
stos
and
add
add
xor
jmp
push
test
out
sbb
scas
test
call
ss
inc
cmp
and
adcl
loope
pop
adc
lock
out
add
imul
mov
push
and
push
push
xchg
cld
ds
mov
jmp
popa
ljmp
pusha
repz
add
and
or
ret
ja
call
mov
in
push
clc
rolb
pop
scas
pop
sbb
dec
add
cmc
xor
push
adc
test
ss
jl
testl
mov
call
addl
mov
cld
orl
aaa
push
das
stos
das
sarb
add
clc
dec
mov
cld
decl
jno
shll
cld
xchg
jno
loop
lret
out
andl
pop
push
push
add
test
add
add
xor
add
pop
scas
add
jg
fdivl
mov
mov
mov
cmp
or
add
jecxz
push
mov
stos
movsl
cld
insl
scas
rep
gs
jne
sbb
adc
cmp
cld
cmp
cwtl
icebp
jb
movsb
orl
fwait
cmp
das
insb
adc
xchg
fdivs
jo
sbb
adc
pushl
mov
rcrl
bound
or
in
sub
sub
add
mov
mov
cmpsb
imulb
stos
sub
sahf
mov
fidivl
xchg
xor
add
in
xchg
out
pop
es
xor
imul
imul
xor
or
mov
arpl
ljmp
lcall
sub
ss
inc
xor
xchg
fnsave
add
negl
loope
xor
xchg
std
pop
addl
loope
mov
cld
mov
insl
aad
pop
aaa
std
cmpsb
inc
fdivrs
sub
mov
xchg
rcr
sbb
loope
std
mov
mov
xlat
gs
test
out
add
scas
adc
lcall
push
hlt
xchg
xchg
add
add
mov
mov
lret
sti
enter
inc
aas
lea
in
sahf
mov
push
mov
and
lret
xchg
xor
xor
incl
sbb
mov
add
cs
adc
les
mov
clc
push
repnz
imul
call
icebp
lods
sbb
mov
add
testb
or
add
add
add
leave
xor
add
xor
lea
xchg
jge
std
iret
imul
loop
inc
clc
pop
sbb
sbb
xchg
add
or
cmp
cld
xchg
mov
lahf
xor
jmp
mov
call
push
test
push
pop
lea
daa
lea
adc
add
aas
loop
shlb
inc
clc
add
add
adc
rcll
or
jge
lea
adc
jmp
push
lahf
xor
xor
mov
dec
repz
mov
roll
aaa
and
sub
sub
cmp
and
push
pop
das
pushf
stc
pop
and
cmp
fscale
xorb
scas
imul
ret
aaa
or
ret
add
xor
mov
push
out
xor
pop
stos
test
xor
imul
xchg
sahf
xchg
dec
jns
jge
sub
sub
and
clc
addr16
cmp
cld
pop
xor
subl
dec
push
push
repz
loope
xor
pop
sub
es
jae
xor
add
mov
jl
mov
cld
add
xor
call
outsl
fs
cmp
pop
cmp
adc
and
mov
fidivl
jae
dec
icebp
pop
cmpsb
je
jb
jb
or
loope
push
subl
je
test
dec
daa
call
sarb
add
movsl
aas
add
aaa
adc
dec
push
add
mov
xor
rcr
sti
cmp
pop
dec
sub
ret
call
mov
divb
mov
and
out
imul
mov
mov
jmp
or
sbb
pop
fadd
sti
pushl
aam
decl
test
divb
mul
inc
jp
stc
addr16
add
add
pop
fwait
xor
cld
aad
gs
lods
lea
lcall
pop
fwait
push
scas
movsl
xchg
imul
int3
xor
lock
sbb
jge
lret
lds
add
cmp
inc
loop
sbb
in
push
dec
cmpsl
or
loop
add
aas
jne
cld
pop
xchg
adc
popa
in
repz
add
repnz
add
movsl
adc
mov
std
xchg
xor
adc
bound
stos
xchg
pop
loope
mov
outsl
imul
das
out
scas
pop
cld
dec
gs
add
jno
mov
dec
fwait
lods
push
add
loop
lcall
sub
xor
mov
mov
sbb
xor
add
add
cmp
into
ret
adc
sahf
add
aas
imul
loope
mov
and
and
fdivl
add
push
ljmp
and
xor
sub
pop
xor
cmc
xor
xor
rcr
arpl
jmp
fnsave
add
fbstp
add
add
add
add
add
adc
mov
mov
in
pop
dec
lcall
lock
jmp
cld
jmp
mov
lds
loope
lds
loope
mov
jnp
ljmp
mov
and
adc
pusha
jno
add
xor
add
and
sbb
in
push
js
add
pop
sti
adc
add
add
adc
ss
add
das
add
or
add
inc
and
mov
int3
lea
cmp
lret
add
pop
cmc
jmp
mov
cmp
xor
mov
stos
inc
and
pop
xor
xlat
lret
xchg
syscall
push
or
aas
xor
orb
add
lea
jecxz
jge
sub
test
jae
mov
fcmovnbe
mov
mov
jmp
push
add
rclb
xchg
or
in
add
loop
test
inc
adc
and
xchg
adc
inc
add
pop
jge
aad
mov
cld
in
push
dec
xor
adc
add
add
add
add
daa
cmp
fnsave
push
mov
out
xor
daa
xor
lock
dec
fsub
sub
push
test
out
jne
test
pop
mov
add
loope
mov
popa
sti
xlat
repz
jge
shll
dec
mul
add
mov
add
add
mov
or
lret
xlat
out
add
add
shrl
popa
jo
xor
loop
imul
out
out
add
test
rcl
loopne
jmp
mov
out
ficompl
sub
mov
push
adc
dec
xchg
pop
cld
ss
clc
jmp
sbb
jmp
stc
jns
mov
loope
add
cltd
jmp
insl
xchg
je
in
xor
testb
jae
in
push
test
add
lea
fistl
xchg
out
or
push
mov
cmp
inc
lret
push
xchg
pusha
addr16
decl
cmpb
adc
push
xor
add
add
add
inc
repnz
incb
in
test
das
cmp
add
lods
mov
push
pop
mov
push
add
dec
decl
mov
add
push
xchg
fwait
in
repz
test
and
or
adc
or
jmp
sub
cmp
das
jecxz
or
xchg
sbb
lds
test
loop
jge
in
shrl
xchg
dec
test
cmp
push
mov
cld
jne
mov
mov
inc
add
mov
cmp
gs
mov
xchg
adc
pop
inc
add
or
outsl
clc
jbe
inc
add
daa
sub
add
pop
push
and
in
xchg
outsl
sub
add
fcmove
out
push
sub
add
test
sub
mov
sub
lds
mov
pop
xor
xchg
popf
sub
psubusw
xchg
repnz
adc
pop
repz
in
repz
cmp
test
pop
shl
mov
cmp
add
add
add
and
pop
pop
xchg
addr16
cld
insl
and
or
xchg
icebp
and
push
xor
lods
lods
cmp
call
mov
pop
push
lret
sbb
jae
mov
inc
add
xchg
mov
add
xchg
mov
lds
pop
subl
xor
add
add
shl
add
cmp
test
gs
inc
add
push
aaa
ret
dec
xor
sbb
mov
mov
insb
adc
mov
xchg
mov
xor
xor
cmp
jecxz
xor
fsubrl
ret
sbb
cmp
faddl
nop
jb
push
and
sbb
sbb
lods
mov
adc
iret
dec
adc
shlb
sti
mov
inc
out
dec
aaa
repz
sti
ss
xchg
das
and
pop
xchg
cld
popa
popf
in
loopne
testl
mov
inc
xchg
lds
mov
pop
imul
out
xor
push
sbb
mov
and
jnp
popa
test
cmp
add
jnp
inc
mov
add
pop
call
ret
inc
in
stos
hlt
jecxz
pop
add
iret
pop
cwtl
xchg
rolb
mov
std
inc
in
xor
sub
cmpsl
add
mov
and
imul
shll
pminub
out
add
add
add
jp
adc
add
call
jle
adc
in
nop
popa
jo
xchg
fmull
hlt
cmp
dec
out
xor
cmp
stc
nop
xchg
add
pop
adc
outsb
jecxz
sbb
adc
add
pop
das
loope
add
push
fimuls
roll
add
sub
jmp
jae
subl
mov
jmp
adc
adc
add
pop
cld
mov
xor
push
lods
mov
call
jno
nop
outsb
imul
mov
stos
jae
mov
mov
push
fisttps
mov
jp
call
and
call
bound
add
dec
sbb
adc
daa
fs
dec
test
cmp
push
aam
and
adc
push
adc
js
sti
lcall
and
mov
mov
pop
mov
pusha
in
cmc
sub
lea
or
je
cmpsb
xor
pop
jbe
push
mov
das
mov
pop
pop
add
add
fndisi(8087
pop
dec
pop
cld
push
adc
push
push
aam
std
mov
mov
push
loop
xchg
mov
add
inc
or
inc
clc
stc
or
cld
and
jge
mov
fdivrl
clc
mov
sbb
lods
mov
dec
out
int3
shlb
sbb
xchg
sbb
xchg
mov
out
es
add
add
ss
and
or
cmpb
das
push
outsl
or
clc
mov
xchg
xor
sbb
mov
xor
xchg
jge
lock
adc
call
mov
fst
mov
push
fcomi
cs
mov
push
dec
jp
dec
scas
jmp
add
add
add
add
push
jo
cli
xor
ret
lahf
stc
pop
rcll
jecxz
loop
mov
xchg
leave
hlt
add
xor
negb
adc
add
xor
test
out
imul
decl
lock
jne
cmpsb
pop
in
hlt
mov
inc
jmp
aam
out
pop
push
dec
xchg
add
add
cld
jbe
xchg
jae
loopw
je
dec
cli
pop
push
dec
xchg
cmpsl
outsb
push
subl
jmp
out
push
push
dec
fs
xor
pop
mov
mov
add
fs
jb
push
jb
pop
fucomip
not
and
and
dec
in
push
mov
sub
out
sarl
out
cmpsb
test
push
adc
sti
call
add
add
add
add
enter
repnz
pop
and
xor
addr16
push
mov
inc
cld
jmp
push
jl
sti
add
xor
decl
int3
cmovo
aam
je
roll
mov
clc
xchg
bound
sbb
push
mov
mov
cmc
pop
dec
xor
xchg
adc
cmp
je
mov
mov
add
add
mov
shr
and
mov
std
add
loop
xor
mov
sub
or
push
loopne
insl
push
pusha
mov
jnp
push
pop
int
in
inc
decl
jge
push
inc
add
mov
xor
scas
sub
into
rorb
mov
out
dec
add
addr16
fcompl
add
add
add
add
loopne
and
shlb
out
das
test
xor
mov
aas
loop
ja
push
xor
xor
fldl
in
jnp
out
stos
add
xor
mov
sub
ret
mov
or
push
movsl
jnp
or
imul
push
out
out
jae
decb
ja
or
xor
ffree
jecxz
jnp
les
add
lods
jp
loop
mov
test
aam
lcall
cs
sbb
in
ret
push
sti
mov
lock
push
or
out
lret
lret
loopne
mov
fsin
call
push
or
aad
sub
mov
jbe
or
sbb
lods
and
xor
cmp
lods
and
add
loopne
add
xlat
imul
clc
mov
and
call
push
andb
push
jae
adc
sbb
jmp
movb
in
push
cld
ss
jae
and
and
loopne
fstps
in
adc
add
dec
jae
xchg
pusha
sti
adc
inc
adc
pop
sbb
xchg
sbb
xchg
add
add
test
push
inc
cmp
js
mov
test
hlt
decl
dec
rolb
add
repz
fbstp
add
inc
xor
mov
sub
xor
cmp
or
mov
add
sub
fadds
sti
xor
stos
pop
xor
test
inc
or
xor
push
and
inc
dec
fwait
mov
clc
loop
inc
pop
movsb
xorb
xor
mov
push
cmp
push
add
loop
xchg
and
pop
ja
sbb
cld
jp
xchg
test
inc
cs
mov
sbb
pop
lahf
xor
push
or
bound
sbb
test
shr
cld
xor
cltd
add
pushf
or
shr
adc
push
xor
or
add
cli
outsl
xchg
std
aam
jae
rorb
js
push
or
lds
imul
adc
add
cmp
js
hlt
xor
add
sub
movsl
dec
mov
cmpb
arpl
mov
out
add
mov
out
dec
dec
sub
add
add
or
pop
pop
imul
out
arpl
cmp
and
neg
out
add
repnz
out
std
push
pop
jns
xchg
or
add
mov
inc
fnstenv
jb
shl
add
sti
jb
cmp
hlt
cmp
inc
jmp
add
add
inc
in
hlt
das
cmp
fdivr
mov
cmc
inc
adc
in
xor
test
iret
mov
rorl
mov
pushl
inc
dec
mov
orps
mov
mov
clc
and
dec
xlat
add
iret
add
push
xchg
lcall
bnd
bound
add
add
cmpsl
pop
xlat
mov
xchg
mov
out
add
hlt
jo
lods
xor
inc
or
je
notl
shlb
int3
jg
jecxz
sti
jne
mov
sti
mov
xor
add
push
pop
aad
xor
mov
call
push
loop
xlat
lods
into
dec
out
fwait
add
jl
jnp
fst
sar
add
in
call
mov
jge
int
add
aam
stc
mov
outsb
add
pop
xchg
adc
push
push
test
loope
loopne
loop
mov
sti
cmp
in
cmp
pop
out
fwait
add
dec
jg
pop
stc
jae
or
mov
jp
cmp
scas
cmp
push
pop
jl
add
add
in
adcb
divl
aad
push
jp
daa
daa
nop
lcall
adc
ja
inc
loope
arpl
adc
xor
loopne
pop
xor
pop
sbb
out
mov
pop
cmp
dec
popa
jne
hlt
icebp
imul
out
pop
hlt
loope
jecxz
cmpsb
loope
in
inc
add
add
xor
inc
dec
out
push
repnz
and
js
jae
lahf
push
xor
xor
loope
dec
mov
pop
dec
mov
adc
mov
adc
add
and
call
fnstenv
call
push
aad
call
loope
jb
data16
xchg
add
add
cld
shrb
cld
jmp
test
cld
inc
addr16
sbb
sbb
cmp
xor
fidivl
aas
jb
mov
mov
dec
cmp
pop
and
push
xor
dec
or
push
and
pop
jmp
jb
std
incl
lahf
xchg
mov
jle
or
dec
in
add
add
mov
das
test
aam
cmp
test
add
push
push
mov
push
push
add
mov
leave
sti
adc
push
mov
in
push
outsb
add
mov
call
loop
mov
or
jecxz
int
jmp
fidivrl
aas
out
pop
adc
insb
add
add
pop
imul
cmpsl
in
mov
icebp
shrb
pop
mov
pop
add
mulps
insb
loop
mov
ret
lods
mov
mov
fcmovb
out
ret
sbb
lcall
jge
mov
and
jge
rol
out
imul
pop
xor
jge
inc
outsl
enter
jl
mov
add
pop
dec
repnz
into
imul
js
roll
scas
pop
outsl
sbb
inc
push
add
in
fcom
nop
sahf
cs
imul
jle
inc
jle
iret
outsl
out
mov
jg
mov
xor
xor
cli
mov
and
pop
cli
jo
test
jge
je
sub
popl
add
push
and
imul
adc
call
xor
dec
xchg
iret
scas
inc
out
cmpsl
inc
cld
bound
fs
stos
inc
cld
jae
dec
push
inc
out
std
aam
dec
jbe
outsl
inc
mov
jnp
push
ss
call
scas
call
push
bound
mov
adc
mov
add
loope
add
fidivs
add
or
fucomp
out
imul
xor
add
lock
adc
or
mov
push
dec
push
fdivrl
pop
scas
mov
lcall
or
mov
cmpl
xchg
mov
and
popa
in
jl
sti
test
add
dec
inc
and
cmp
addb
mov
jl
jo
jne
pop
or
jg
dec
push
arpl
inc
mov
roll
loope
cli
shl
add
jae
and
mov
jp
and
add
mov
add
cmp
xchg
rorb
loop
add
loopne
add
add
add
xchg
add
loop
add
push
ret
loop
movb
sub
mov
sarl
sbb
test
push
xchg
push
rorb
mov
adc
and
ret
lahf
and
push
jne
call
xor
adc
add
out
push
bswap
jp
les
adc
mov
fldl
iret
aad
mov
add
cltd
or
mov
xor
cli
pop
test
out
add
test
fsts
sbb
jmp
mov
xor
add
ja
add
push
cmp
mov
pop
ljmp
arpl
out
jmp
and
lret
mov
jecxz
and
jae
icebp
mov
icebp
add
add
mov
std
fwait
in
les
fcoml
push
adc
mov
mov
or
adc
int
inc
push
xchg
ja
std
jbe
in
test
adc
jmp
outsb
icebp
add
out
mov
in
bound
mov
adc
hlt
lock
lods
mov
shlb
add
fildll
out
push
mov
fcoml
cmp
std
decl
aad
and
enter
mov
add
dec
pop
sub
cld
mov
inc
add
sub
cmc
add
sarl
enter
xor
call
push
add
add
push
cld
push
push
fdivrs
mov
popa
xchg
push
addr16
cmp
push
adc
mov
ja
cmp
inc
lcall
call
xor
mov
out
xor
add
cmp
out
out
imul
jle
xor
rorl
pop
popl
add
add
xor
pop
or
cmp
mov
in
xor
sbb
mov
cmp
out
and
and
mov
jne,pn
roll
or
stos
xor
dec
adc
aad
daa
sub
jecxz
add
imul
mov
pushf
jb
add
lods
lret
sbb
rolb
add
test
adc
movsl
xor
pop
sarb
sub
test
jl
fstpl
mov
dec
xchg
jne
mov
out
mov
out
loopne
stos
pop
lods
stos
mov
add
aas
add
xor
mov
mov
push
pop
xor
call
lock
es
cmp
das
cmp
decb
add
add
xor
ja
test
call
fidivs
mov
loop
cld
faddl
out
call
pusha
dec
dec
aas
push
cmp
cmc
scas
repnz
imul
push
mov
test
pop
cmpsl
call
imul
insb
jl
add
or
xchg
add
add
int
cmovl
xlat
je
cli
sbb
add
cmp
jae
adc
bswap
jecxz
ret
add
mov
inc
jo
test
jg
call
rolb
test
add
inc
std
mov
cmpsl
jno
push
and
cmp
inc
pop
mov
decl
dec
and
and
sldt
add
cli
pushl
clc
jo
or
or
dec
mov
cmp
xlat
mov
lock
lds
jae
lock
pop
iret
fs
pop
dec
xchg
fwait
lret
mov
add
loop
out
sub
int
mov
mov
jne
inc
jae
out
sti
loop
and
jne
add
dec
stc
and
add
add
jno
imul
mov
out
int
cld
pop
mov
or
add
xor
cmp
xor
pop
loope
sbb
cmp
int
out
xor
out
dec
xor
adc
cwtl
pop
outsb
ljmp
in
cld
pop
mov
add
cmpsl
movsl
shrl
ficomps
inc
out
popa
jo
or
inc
or
fldt
jle
xor
cmp
cld
cmp
mov
clc
fidivrs
jb
cmp
sbb
jno
jmp
mov
push
sbb
mov
cmpsl
dec
in
outsb
or
adc
add
add
dec
mov
or
loope
cmc
jge
mov
rorl
xor
mov
gs
add
and
lock
arpl
mov
cmp
push
and
daa
loope
divb
cmp
andb
push
cltd
loope
xor
sti
cmp
in
adc
add
xor
leave
in
add
inc
ss
add
add
add
add
xor
xorb
shr
pop
in
or
sti
inc
je
pop
or
jg
shrl
add
push
mov
mov
aas
push
jg
mov
push
mov
or
pop
or
data16
jo
adc
lret
push
repnz
test
or
sti
jo
roll
add
cmpsl
clc
gs
dec
out
sahf
jae
lds
inc
add
loop
outsl
cld
pop
xchg
and
test
dec
add
xor
mov
push
xchg
or
mov
cld
lods
rol
shlb
or
jbe
add
cltd
pop
js
aaa
insb
cld
push
data16
mov
outsl
cld
imul
andl
add
add
add
adc
aam
sub
pop
pop
dec
xchg
xor
loop
imul
add
out
jg
ror
test
mov
jbe
rcrl
rcrl
dec
cmp
push
xor
add
add
xor
add
in
add
xor
outsl
popa
jo
punpckldq
aad
insl
cwtl
outsb
add
add
or
popf
pop
shll
outsb
outsb
mov
sub
aaa
mov
fsts
fdiv
out
inc
sbb
incl
stos
or
aaa
cld
jmp
aad
call
je
adc
andl
or
adc
cld
jmp
add
dec
jmp
loope
test
les
std
aam
and
pop
jbe
je
adc
lds
add
sub
and
pop
call
out
add
xor
push
inc
std
add
add
inc
cmp
andb
add
jmp
ret
or
cltd
ret
sti
test
cmp
add
add
mov
and
pop
dec
out
sub
inc
sti
mov
or
test
add
jg
sbb
imul
mov
pop
test
in
ffreep
sti
test
cmp
push
test
in
adc
sti
je
and
add
pop
push
cld
into
sub
aad
das
rolb
add
push
add
sub
inc
cmpb
add
cmpsb
mov
stos
dec
add
push
lret
and
loop
add
imul
jns
mov
sbb
cld
dec
cs
es
fildl
les
xchg
lds
les
xchg
lds
mov
xchg
lds
mov
xchg
lds
data16
add
add
xchg
lds
xor
rcl
sub
add
repz
imul
js
or
iret
adc
xor
jle
sub
add
movsb
dec
xor
jg
or
pop
outsb
xchg
lea
dec
pop
or
xor
lret
adc
test
loop
jno
fs
push
push
loop
mov
pop
dec
aas
out
pop
aad
loope
mov
add
add
lods
outsl
add
cmc
test
xchg
pop
pop
test
mov
jle
push
divb
jb
lock
in
fst
call
loope
std
cld
popf
pop
inc
jmp
and
cmp
out
add
xor
push
xor
cmp
jle
jl
xor
fisttpll
cld
pop
bound
data16
add
mov
and
push
pop
dec
cmp
jae
cmp
test
or
add
cmpsl
dec
in
mov
xor
add
sbb
add
inc
fmuls
add
test
cmp
in
fadd
sti
sbbb
cld
decl
cld
imul
mov
incl
add
add
jbe
mov
clc
repz
jo
or
mov
sti
pushl
jo
movsl
lods
jns
movb
je
out
push
dec
push
call
inc
push
jmp
sti
mov
sysexit
jb
dec
loop
in
or
nop
in
push
pushf
test
mov
cld
jb
aad
mov
mov
imull
add
ljmp
std
out
out
adc
subb
mov
rolb
loop
jmp
mov
inc
add
out
dec
out
loop
jl
ja
into
out
sub
fldl
imul
aam
mov
jb
jb
xchg
lods
pop
jg
movsl
xor
out
in
out
out
xchg
imul
add
add
add
mov
stos
jbe
jmp
jmp
pop
jae
jmp
pop
mov
ljmp
repz
add
movsl
push
into
xchg
lcall
test
cmpsb
loope
subb
fbstp
lar
mov
in
addr16
hlt
push
push
and
dec
mov
ret
add
add
jg
js
and
add
fs
je
daa
mov
ss
dec
push
add
jae
push
jae
mov
jbe
xchg
cltd
and
les
sbb
in
jmp
sbb
sub
xor
sub
mov
icebp
out
or
das
cld
jmp
and
cmp
loope
add
cli
sub
test
das
jg
fldcw
jg
fldcw
jo
stos
xchg
cmp
mov
decb
stos
repz
sbb
adc
or
cmp
dec
fsubrs
add
mov
cld
dec
lcall
jo
mov
add
jmp
je
mov
sbb
add
dec
push
sbb
add
cmp
push
repz
or
mov
rcll
sar
lods
add
push
call
je
add
push
mov
pop
pop
loop
ss
lret
mov
lcall
adc
flds
cmp
or
inc
ret
loop,pt
ja
and
movlhps
out
sbb
add
sub
add
add
or
call
push
add
fcomps
add
hlt
sbbl
jmp
mov
lret
and
out
idiv
sbb
jbe
mov
push
jl
loop
add
mov
inc
out
fcos
xchg
scas
in
jecxz
jmp
andl
sub
fs
xlat
ret
lods
scas
xor
add
add
sahf
pop
sub
jge
pop
rolb
jo
pop
cmpl
ljmp
push
or
imul
jmp
stc
clc
push
ss
sti
loope
insl
aas
shll
loope
std
pop
sahf
outsl
fdivp
leave
or
jbe
pushf
pop
mov
xchg
cmpsb
lds
push
leave
add
xor
bound
outsb
fucomi
sub
pop
pop
lea
int
sbb
add
add
mov
pop
daa
cld
push
push
outsl
and
dec
sbb
mov
add
xchg
sub
fs
cld
insb
lcall
invlpg
inc
jb
dec
sbb
cmp
mov
or
jae
and
xor
dec
shll
jmp
int3
mov
or
sbb
adc
add
add
mov
in
jb
and
push
adc
subb
inc
dec
dec
jne
loop
adc
mov
push
cmp
js
std
adc
out
xor
dec
aas
test
mov
jmp
sbb
xchg
jle
mov
mov
add
lcall
insb
add
lea
cld
jne
mov
cld
incl
add
mov
icebp
notl
rorl
out
xchg
in
ror
cli
lock
nop
mov
loop
shl
or
cmp
cmc
push
mov
rcr
lea
xchg
jecxz
loop
push
jae
popf
fnsave
outsl
rclb
lret
ljmp
stc
mov
pop
ret
icebp
nop
mov
add
pop
dec
fmuls
aam
sbbl
fisttpll
cmp
push
or
lahf
adc
xchg
repnz
andb
repnz
out
jb
xor
mov
sbb
sti
imulb
jo
ficoms
cli
pusha
out
pop
insb
out
dec
push
adc
in
sub
pop
and
add
add
lods
addr16
xor
popa
add
adc
mov
adc
inc
outsl
mov
adc
imul
mov
add
pop
mov
sbbl
repz
adc
in
cli
dec
addl
imul
add
out
in
xor
punpcklwd
xor
or
push
jbe
sub
push
add
add
lea
inc
mov
loope
pushl
punpcklwd
push
fisubrs
push
jo
test
stos
xor
out
mov
push
popa
leave
rcr
mov
shlb
leave
xchg
xchg
pusha
shrb
jne
mov
pop
adc
mov
rorb
push
call
dec
cwtl
repnz
xor
mov
popa
adc
add
cmc
inc
mov
cmp
adc
test
add
xor
adc
jmp
data16
pop
ret
sub
or
mov
pop
mov
push
xor
repz
xor
mov
push
sub
repnz
cmp
jo
cmp
out
adc
rclb
addr16
mov
lcall
dec
jmp
ljmp
push
xor
repnz
xor
cmp
lods
push
mov
loop
dec
ss
arpl
inc
popa
into
sub
and
call
adc
add
pop
rcl
sub
in
inc
loop
xor
in
mov
adc
sar
adc
shlb
sbb
add
and
inc
loop
daa
push
adc
mov
add
add
mov
adc
sbb
inc
ljmp
xchg
xchg
mov
and
test
jle
push
lret
add
push
mov
aad
mov
add
cmp
aad
sbb
cmc
push
and
sub
std
sub
out
and
sti
std
cmp
pop
fidivrs
add
testb
and
adc
scas
sub
and
jmp
sub
fdivrs
bound
fildll
sbb
jp
ret
sahf
repz
aam
pop
push
add
xor
mov
jmp
lahf
or
inc
jmp
mov
add
pop
icebp
push
bound
add
outsb
insb
fs
and
jmp
bound
sub
test
loope
xchg
mov
mov
mov
nop
je
pop
sbb
xchg
mov
cld
jmp
push
or
sub
pop
jmp
xor
add
hlt
push
push
or
int3
inc
cmp
cld
adc
add
add
add
add
sbb
cli
decl
outsl
sbb
sub
shl
pop
or
repz
jmp
xor
push
xchg
adc
mov
push
pop
and
adc
jecxz
push
dec
or
xlat
push
std
jne
test
sbb
or
xchg
sub
jbe
pop
leave
stc
adc
push
js
mov
cwtl
cltd
cmp
push
das
cs
sti
incl
add
mov
in
iret
loop
cld
xlat
pop
cmc
aas
loop
mov
sub
inc
ret
std
mov
mov
add
rclb
mov
call
sbb
add
lock
mov
fmul
adc
add
mov
add
pop
add
jmp
lea
mov
pop
add
test
xor
jg
adc
add
mov
cmpb
pop
lahf
decl
loop
or
xor
mov
scas
adc
fldl
cmpsl
add
and
pop
das
mov
sbb
pushf
mov
fidivrl
push
ljmp
push
ljmp
add
gs
add
jp
add
sub
sbb
in
jmp
push
sub
outsl
jmp
cmpsl
cmpsb
imul
call
or
movl
aas
mov
mov
sbb
pop
nop
mov
add
xor
ss
jo
cmp
sti
cld
mov
inc
jmp
xchg
jns
sub
dec
xchg
push
arpl
and
push
push
loop
fdivs
pop
jae
cmp
add
pop
jae
sbb
pop
dec
jo
sbb
lahf
arpl
je
pop
imul
scas
mov
cld
xchg
loopne
out
pop
jae
sbb
clc
sbb
inc
dec
pusha
stos
sbb
xchg
arpl
je
pusha
lcall
or
mov
lcall
ss
pop
inc
insb
rclb
and
mov
push
push
lock
in
cmp
push
xor
or
rolb
add
mov
mov
sarb
sub
js
cmpl
dec
imul
xor
ljmp
sbb
inc
or
aad
push
add
inc
sti
xor
add
outsl
aaa
fnsave
data16
push
add
mov
ds
into
pop
push
call
js
push
cwtl
loop
sar
aam
add
mov
add
scas
dec
pop
dec
scas
out
jae
decl
enter
lock
or
push
jge
push
mov
pop
ljmp
lcall
imul
and
mov
les
pop
mov
mov
jmp
xchg
in
mov
mov
outsl
loop
add
add
add
cmp
inc
leave
xor
add
in
sbb
pop
iret
mov
push
imul
das
jmp
sub
sbb
popl
mov
mov
and
jge
lock
ret
dec
mov
iret
fsubrs
pop
insb
push
or
add
xor
inc
popa
lock
icebp
push
jae
mov
cmc
rcr
add
sti
das
jmp
ljmp
in
xchg
add
xchg
xor
outsl
hlt
pop
test
xchg
ljmp
adc
mov
scas
pop
lahf
pop
mov
loope
inc
icebp
push
mov
mov
ja
cs
add
jl
cmpsl
inc
inc
xchg
mov
pop
xlat
add
add
add
sbb
rclb
pop
xor
jb
orl
jmp
xchg
sbb
cmpsb
lahf
sbb
xchg
add
cmpsl
inc
add
in
add
mov
add
cmp
arpl
jmp
add
clc
ret
add
dec
mov
lret
mov
xchg
jp
stos
pop
cld
incl
add
cmp
xor
sub
or
stc
fisttps
pop
jle
test
das
test
das
add
xor
inc
pop
jne
lcall
sub
jmp
mov
jg
jle
decb
sbb
das
add
sbb
dec
push
aad
mov
in
dec
dec
or
inc
push
and
mov
mov
das
jo
out
push
add
pop
ljmp
jmp
mov
pop
imul
jl
jb
pop
or
cmp
loop
adc
in
sahf
decl
jnp
pop
or
jp
xchg
dec
or
test
add
xchg
add
mov
sbb
and
incl
cli
addl
jmp
add
sbb
pop
jae
mov
fidivl
xchg
push
and
lds
mov
xchg
sbb
mov
ljmp
mov
xor
lock
lea
mov
add
dec
pop
dec
sbb
sub
repz
sub
dec
movsb
push
jge
jg
mov
add
add
sbb
xchg
cmp
in
outsb
frstor
clc
ficomps
sti
cmpsb
xchg
or
leave
rcll
add
and
fsts
adc
pop
ret
add
insb
test
call
in
stos
xchg
inc
adc
cld
fwait
call
insl
and
pop
ljmp
aam
clc
add
adc
adc
jb
mov
adc
add
xor
add
pop
jecxz
cmc
data16
test
adc
test
outsb
or
addr16
pop
ret
data16
or
or
inc
cmc
pop
lret
or
stos
repz
inc
push
cld
jnp
pop
leave
leave
sub
push
add
add
xchg
and
scas
out
mov
add
fisubrs
idiv
pop
sub
jnp
or
mov
ret
adc
jmp
adc
xor
aas
and
jecxz
push
xchg
dec
push
mov
jge
xor
or
dec
outsl
push
sub
icebp
xor
jecxz
mov
lea
fcmovb
dec
add
cmp
incb
add
push
cmp
sub
dec
sub
cmp
popf
ret
and
xlat
addb
sbbl
outsl
dec
andl
addb
mov
clc
add
push
fsubl
sub
push
push
shll
dec
cmc
cmpsl
pop
add
ret
and
xchg
rorb
or
push
xor
add
je
add
jnp
pusha
bound
add
sbbb
lar
dec
lcall
adc
and
pop
fwait
dec
lods
lds
add
mov
jg
sbb
call
sub
xor
sbb
mov
fnstcw
call
dec
in
std
mov
mov
dec
pop
jne
test
icebp
mov
cmp
xchg
fndisi(8087
inc
add
add
add
cmpsl
clc
bound
scas
and
cmp
aas
jmp
and
hlt
insb
lret
sti
mov
xor
adc
adc
add
out
jb
je
call
inc
jb
adc
add
call
pop
dec
addr16
jmp
loope
movsb
adc
es
hlt
add
add
inc
jmp
dec
cmpsl
inc
sbb
fdivr
add
xchg
cmp
outsl
outsb
sbb
test
lret
sub
in
xor
jne
cltd
ds
je
in
xor
mov
leave
filds
movb
push
insb
addr16
test
inc
pusha
sub
jne
jne
or
xor
add
repnz
sti
je
or
xor
pop
pop
shrb
add
out
daa
gs
stos
inc
and
push
mov
adc
or
inc
loop
dec
cld
adc
inc
cld
popa
and
pop
or
add
sahf
clc
sub
inc
add
and
jns
ficoml
cmp
test
or
add
lock
outsb
pop
jnp
add
add
adc
inc
push
xchg
out
or
add
hlt
cmp
xchg
sbb
pop
add
out
mov
mov
call
int3
sbb
or
lret
mov
icebp
adcb
add
mov
dec
pushf
sti
dec
ss
mov
pop
pop
rorl
add
add
lods
pop
add
xor
sarl
add
test
xor
xor
dec
cmp
sub
jp
mov
inc
sbb
dec
lds
call
dec
xchg
cmpsl
lods
pop
mov
insb
or
adc
cmpsl
add
lds
insl
adcl
jmp
add
add
adc
sub
lods
xchg
jmp
lcall
jb
pop
notl
mov
negb
pop
sti
cmp
es
lcall
and
repnz
mov
and
out
icebp
je
data16
loope
inc
lds
or
jne
adc
add
push
gs
add
xor
jl
sti
jnp
push
cmp
add
mov
ret
outsl
add
push
mov
das
xor
jecxz
jae
xor
jecxz
adc
ljmp
or
call
pop
and
rorb
xor
outsl
and
insb
lods
or
mov
addl
aas
and
mov
inc
iret
pop
addl
add
outsl
push
nop
int
mov
loope
xorl
sti
jnp
cmp
jp
dec
std
jge
rorl
int3
repz
out
add
mov
push
mov
roll
cmp
pop
imul
add
negb
add
loop
lock
mov
or
ljmp
and
add
xchg
das
cmpsl
mov
and
adc
cltd
ret
and
pop
int3
sbb
and
xor
fwait
inc
cld
ss
add
mov
cmp
addl
xchg
inc
adc
sbb
lds
adc
inc
arpl
or
and
dec
push
ljmp
test
out
add
bound
out
int
scas
stos
fistpl
lods
pop
jb
fiaddl
dec
into
inc
negb
loop
mov
cmp
fwait
enter
jmp
sub
sbb
orl
cmp
ss
les
add
loope
lea
xchg
jge
data16
mov
jmp
fidivs
orb
call
xchg
call
add
and
sbb
jbe
push
jae
loopne
xor
push
dec
lea
call
popf
orl
and
mov
fisttpll
and
push
mov
cmpsl
or
pusha
lahf
sub
sahf
pusha
add
xchg
into
or
fdivrl
ja
add
outsl
push
xor
pop
mov
sub
sbb
add
or
add
fimull
call
pop
jle
cmpsl
fisubs
shlb
push
xchg
adc
jne
push
jle
xchg
xor
addl
ss
daa
mov
jmp
call
mov
or
jne
cld
ljmp
jg
sub
cld
subl
std
lcall
inc
sbb
pop
push
sub
dec
call
add
add
pop
movsl
or
scas
loop
ds
imul
jecxz
dec
rcr
popa
rorb
imul
pop
or
das
imul
or
jle
mov
cmp
in
push
aas
cld
pop
je
imul
aas
cld
pop
aad
or
pop
aam
repnz
cld
imul
add
add
sbb
std
stc
sbb
pop
add
xchg
add
loop
add
add
xor
add
jmp
movl
push
std
mov
adc
test
nop
or
sub
rorl
popa
icebp
mov
hlt
adc
or
mov
pop
adc
in
sbb
add
rcll
sar
test
stc
mov
out
mov
mov
mov
out
adc
ljmp
cmp
sub
xchg
jecxz
imul
loopne
xchg
xchg
push
inc
jmp
inc
popa
xchg
and
enterw
leave
mov
add
loopne
mov
loope
cmpb
or
loope
add
and
data16
and
mov
out
loopne
dec
ret
mov
jle
es
push
arpl
sti
hlt
cltd
pop
inc
jmp
loope
test
xor
bound
call
and
pop
icebp
into
mov
fisttpl
inc
lret
aad
sub
sub
xor
call
rolb
add
or
call
mov
or
add
sarb
xor
lea
mov
repnz
sbb
sbb
inc
dec
mov
and
mov
daa
sarb
mov
orb
sub
in
sti
mov
or
inc
cmp
sub
and
mov
add
loop
mov
jnp
add
jmp
mov
ret
aam
sar
imul
push
inc
loop
or
scas
dec
call
mov
out
mov
push
mov
cmp
lcall
call
test
jno
out
push
push
test
xor
inc
loop
xor
or
roll
std
add
add
xchg
adc
xchg
pop
cmc
pop
shll
nop
mov
stos
ret
insb
add
mov
cmpsl
adc
pop
outsb
das
mov
lods
test
xor
movb
push
sub
add
xor
adc
bound
jg
sbb
mov
pop
insb
loope
add
add
fst
scas
add
adc
dec
push
sbb
bound
adc
in
sbb
add
xor
jmp
push
pop
das
xlat
stc
adcb
xlat
cmp
push
mov
repnz
push
and
mov
lods
jne
fs
cmp
adc
mov
icebp
xchg
out
call
and
sti
imul
jmp
xchg
mov
jg
push
pop
call
cmpsb
xorl
sub
shrb
hlt
pop
jne
add
sub
inc
or
pop
or
xor
add
add
jne
loope
jge
inc
cld
cmp
or
mov
xor
mov
add
add
add
add
sbb
sbb
pushl
mov
and
mov
and
mov
and
loopne
inc
cmpsl
adc
mov
push
clc
sbb
pop
lea
or
jmp
mov
adc
xchg
sbb
jne
loopne
jne
inc
push
push
loop
sar
mov
pop
and
call
ss
xchg
sub
mov
ljmp
add
add
add
add
sbb
pop
repz
mov
mov
in
jb
inc
adc
ret
adc
in
pop
add
cmpsb
in
inc
incb
call
xor
roll
movsl
lock
and
std
push
testb
in
xor
loop
aaa
jae
xor
jae
add
jb
jb
jo
fcos
xchg
sub
adc
push
xor
frstor
cmp
ljmp
nop
and
rol
incb
pop
insl
fnstsw
nop
sub
mov
add
xchg
add
out
sbb
adc
cmpsl
psrad
push
dec
fst
sbb
adc
xor
mov
lods
test
lss
rclb
xor
xchg
mov
inc
cmp
dec
adc
bound
mov
pop
xchg
loope
rclb
ss
outsl
adc
cmp
inc
sbb
enter
and
sti
pop
add
leave
ja
stos
mov
into
xor
test
fabs
pop
xchg
loope
xchg
lods
rcrb
add
add
add
mov
mov
je
pop
imul
fisubrs
jbe
dec
add
mov
loope
sub
dec
stos
mov
add
std
jne
jne
dec
push
inc
ds
sti
pop
jbe
or
outsb
mov
call
insb
outsl
sbb
jge
hlt
roll
push
sar
out
aas
cld
js
cld
jne
add
cld
frndint
and
divb
add
lods
out
sbb
cld
decl
outsl
inc
in
loope
adc
cmc
sti
push
push
das
fcoms
lret
xor
jne
dec
add
adc
cmp
iret
sbb
add
loop
mov
jecxz
or
fimuls
lods
add
lahf
adc
cld
xlat
jne
inc
loop
fstps
in
jg
mov
add
into
or
test
xchg
mov
add
std
sub
adc
or
test
or
cs
xchg
out
xor
int
enter
rorl
jecxz
or
shll
jl
push
add
in
test
loope
and
mov
insb
xchg
jmp
mov
xor
mov
add
cmp
jo
sarl
mov
mov
arpl
adc
and
mov
rorb
ret
add
xor
aaa
mov
mov
in
std
mov
add
das
shl
stos
xor
ror
inc
xchg
dec
and
stos
dec
cli
cmc
sbb
rol
scas
add
inc
test
shrb
imul
add
add
add
add
add
loope
add
sub
test
sub
jmp
lea
or
jmp
mov
mov
push
xchg
loope
test
in
cld
sti
mov
int3
adc
lea
stc
sti
out
enter
scas
test
insb
jne
std
scas
inc
rol
xchg
imul
sarl
xchg
mov
add
pop
hlt
push
scas
in
mov
sub
cmpsl
ret
cmp
and
and
adc
add
int
mov
adc
clc
add
cs
imul
add
js
cs
out
sti
in
js
xor
xor
xor
mov
cld
jne
mov
xor
inc
cld
push
jno
xchg
add
add
ds
mov
xor
pop
aad
lret
inc
aad
test
aam
mov
repz
in
add
imulb
lret
in
sti
shll
or
fdivs
pop
lods
pop
je
add
imul
inc
in
and
roll
sub
cmp
add
dec
sub
add
add
dec
mov
rorb
jmp
xchg
int
js
addl
mov
pop
rclb
jle
or
mov
insb
ljmp
add
adc
outsl
inc
or
cld
mov
cmp
cmpsb
and
fs
adc
cmp
fadd
jge
and
and
add
insl
lods
movsb
mov
sti
hlt
xlat
in
jmp
andb
xor
pusha
pop
mov
sub
lock
inc
xchg
sub
inc
xchg
imul
mov
ds
cmpsl
push
and
xor
cmp
push
stc
xor
cwtl
test
mov
cld
cmp
xchg
cltd
movsb
cli
push
scas
fcmovu
push
sub
sti
xor
adc
xor
dec
cmp
and
mov
push
fdivr
mov
xor
mov
loope
adc
out
enter
and
decb
loope
fstl
loope
call
insl
mov
es
sbb
xchg
cmc
daa
mov
sbb
aas
jmp
add
add
add
add
imul
mov
xor
cld
je
and
std
in
jne
inc
pop
repz
ljmp
cld
hlt
test
je
jl
cmp
add
xor
mov
xchg
fucom
lods
dec
inc
cld
retw
sarb
push
push
imul
or
pop
pop
inc
jae
ljmp
aas
rorb
push
decl
adc
lcall
loop
add
andl
clc
inc
mov
mov
cs
jae
add
sbbb
xor
fimuls
loop
adc
lock
add
mov
jbe
jecxz
mov
jae
or
push
mov
jl
ljmp
data16
jmp
popa
xlat
daa
loop
test
sub
aam
add
or
adcl
add
dec
inc
loop
adc
gs
mov
scas
insb
add
xor
movsl
int3
sub
push
and
insb
mov
mov
jmp
add
cmp
push
xchg
das
pop
insb
lock
mov
add
add
add
add
or
add
or
mov
pop
imul
sbb
cli
jmp
ret
inc
lods
sub
shrb
stc
mov
cmpsb
add
int
scas
pusha
dec
or
dec
jno
loop
add
fwait
push
sti
out
push
repz
callw
cmc
sti
out
sti
sbb
test
add
shrb
fdivp
adc
xchg
outsb
cmp
call
popa
jne
repnz
xchg
lea
movaps
mov
cmc
mov
inc
add
cmp
pusha
or
loope
add
lret
test
add
jg
or
jne
adc
jmp
insb
stc
cmpl
and
jp
inc
and
loope
imul
mov
or
ficomps
sub
push
adc
mov
hlt
push
push
pop
sbb
mov
repnz
call
pop
insl
outsb
pop
lock
dec
xor
test
add
enter
inc
mov
pop
add
add
push
push
cld
sbb
mov
loop
dec
jae
xchg
inc
inc
mov
out
jnp
orb
mov
pop
add
adc
popa
incl
mov
sub
lret
push
cmp
sbb
imul
sar
lret
adc
lock
add
push
and
incl
adc
jle
sub
jne
dec
adc
or
clc
add
add
add
out
push
sub
cld
idivl
js
ljmp
push
pop
std
inc
adc
xor
mov
sbb
adc
vcvtsd2ss
adc
adc
jmp
cltd
loop
ljmp
or
lret
jmp
and
scas
aad
adc
sub
and
loope
xor
jl
add
sub
sub
mov
mov
stos
and
jge
jmp
js
dec
rcl
data16
adc
mov
sub
xor
jg
repz
sub
jo
fs
jle
fisubrl
sbb
hlt
jne
test
mov
stc
or
pop
int
cmc
shlb
mov
sub
and
add
sub
push
popa
sti
mov
jle
jb
dec
and
ret
inc
stc
hlt
sti
adc
hlt
je
jmp
dec
sti
mov
hlt
je
roll
fildll
mov
sub
push
in
mov
add
jae
js
jnp
inc
sub
push
mov
rolb
add
add
xchg
jne
popa
sub
jmp
push
cli
xchg
push
call
sbb
jmp
lea
adc
es
std
incl
out
shl
xor
sti
adc
xor
int3
filds
xor
aas
and
fldl
je
flds
clc
lods
inc
cld
test
jp
and
clc
jg
loop
add
pushf
leave
out
pop
add
lret
fistpl
cmp
imul
mov
dec
mov
out
jle
and
das
shlb
loop
xlat
inc
paddsw
je
jl
fistps
hlt
rcll
dec
jb
popa
stos
and
inc
jne,pt
push
mov
cld
xor
pop
mov
mov
decb
sbbl
mov
cld
add
add
inc
mov
push
stos
and
xor
xchg
fdiv
sub
adc
sbb
dec
sub
or
sub
mov
pop
push
mov
mov
outsl
out
jmp
shlb
jp
aam
std
mov
and
leave
mov
cmpsb
mov
inc
arpl
mov
inc
push
add
add
out
pusha
mov
add
out
xor
push
jb
add
pop
mov
imul
sub
aas
add
mov
lods
mov
into
jp
pusha
xor
popa
in
out
stos
stos
push
xor
in
call
je
mov
push
add
xor
jmp
mov
add
sub
sti
sbb
ret
fsubrp
dec
mov
sbb
and
inc
push
xor
jmp
add
dec
sbb
inc
sbb
mov
pop
add
push
bound
fdivs
xor
fsubrl
cmp
aas
sbb
mov
sbb
incl
push
xor
xchg
jge
add
insl
outsb
faddl
add
ret
call
xchg
lock
outsb
dec
cli
lds
pop
sti
jl
imul
shlb
pushw
inc
insl
rolb
push
or
std
xor
add
out
nop
inc
sbbl
outsb
int3
loop
lret
or
add
cmc
jmp
mov
jne
test
in
add
loop
mov
xchg
scas
ja
mov
add
idivb
add
movsl
dec
inc
in
or
mov
pop
inc
jae
cs
andb
inc
push
leave
inc
xor
mov
or
jle
jmp
hlt
in
hlt
sbbb
or
lret
or
andl
mov
fndisi(8087
xchg
iret
cld
iret
or
inc
loop
cmp
add
add
lock
jp
or
in
pop
scas
xchg
mov
and
hlt
fs
call
sub
cmp
cmp
jmp
sbb
jmp
jle
xor
add
sub
outsb
add
scas
cmp
jmp
jle
cmp
fsubr
jmp
les
add
loope
pop
mov
sarl
ret
inc
sub
hlt
add
dec
ljmp
mov
pop
add
loop
inc
popa
cs
add
out
jno
aam
jmp
imul
insl
sti
jmp
jmp
loope
xor
xchg
cli
inc
pop
outsb
clc
push
ljmp
lahf
jmp
jb
jecxz
mov
add
push
js
bound
cmp
mov
shrb
loope
or
push
scas
repnz
ret
sbb
repz
jbe
shll
cmp
and
push
mov
das
incl
xor
mov
jecxz
mov
loope
dec
ror
fimull
mov
mov
inc
add
add
inc
inc
cmp
leave
pop
mov
mov
mov
mov
mov
mov
jle
push
cmp
push
push
jecxz
cmp
add
repz
xchg
cmp
lret
mov
je
mov
cld
add
pop
push
jae
cli
xchg
cmpsl
mov
push
inc
jbe
mov
sub
mov
adc
jge
cmp
add
add
add
add
mov
sub
pop
rolb
dec
or
iret
xchg
cmp
lea
pop
lret
ret
pop
les
mov
mov
out
iret
scas
dec
pop
pushf
jbe
push
push
xchg
and
push
std
ss
fstpl
adc
and
fdivl
insl
ror
fisubl
xor
lret
add
lds
shll
call
mov
xchg
call
mov
cmp
test
inc
in
sbb
jns
test
aad
mov
jle
lea
xchg
jo
mov
sub
sub
cmpl
add
in
add
mov
adc
lods
jge
aam
fstps
sbb
out
inc
add
add
xchg
aam
jg
test
in
mov
pop
mov
mov
loope
push
sbb
inc
in
inc
sti
aam
inc
inc
jmp
leave
cmpb
lret
ret
test
add
iret
fwait
scas
loope
lea
sub
pop
jmp
jnp
inc
lds
lds
add
add
add
add
ja
mov
inc
adc
cmpsb
arpl
sub
and
loope
add
and
sti
dec
mov
and
mov
test
cmova
mov
fcoms
enter
ljmp
fs
pop
push
or
pop
push
mov
xor
add
repz
dec
mov
cmp
mov
outsl
cmp
mov
imul
faddl
rclb
sahf
into
inc
cld
test
into
adc
adc
xlat
aas
jle
fsub
xchg
adc
jg
in
jae
bound
movsb
out
cmpsl
aas
loop
lret
xor
aaa
movsb
or
adc
pop
enter
add
ffreep
cmp
rorl
adc
sbb
push
sbb
sbb
sahf
repz
adc
fcompl
out
or
outsl
into
lret
mov
pop
sbb
lahf
xor
cld
testl
mov
mov
xchg
mov
mov
test
xchg
pop
fidivl
add
add
out
sbb
icebp
push
or
jl
add
fnstcw
sbb
aas
sub
sbb
call
test
xchg
sbb
loope
jmp
idivb
aas
sub
insb
in
mov
mov
test
sbb
aam
ret
sub
fildl
fsubr
mov
jae
aam
inc
inc
jmp
add
add
add
add
xchg
push
pop
sub
cmp
cmp
add
mov
frstor
jl
mov
or
fisttps
sahf
cmpsb
sub
pop
push
in
bound
mulb
bound
mov
push
jnp
sahf
jae
adc
out
rclb
iret
jg
cli
in
scas
std
ss
test
or
add
and
inc
inc
dec
add
pushf
pop
adc
xor
fldenv
mov
mov
mov
andl
stos
mov
lahf
sub
add
aaa
test
aaa
xor
pop
mov
stos
sti
mov
and
pop
add
rcr
mov
sub
nop
inc
cmpb
push
adc
add
js
sbbb
cmp
pop
xchg
mov
stos
stc
or
xchg
sbb
mov
andb
mov
jae
aam
cmp
mov
movb
pop
inc
mov
arpl
or
xlat
add
loope
ficoml
and
sti
cmp
mov
in
cmp
add
pop
popf
mov
sarb
pop
fdivrp
pusha
sbbb
sbb
add
add
add
add
out
add
mov
incl
mov
jge
or
or
cmpsl
xchg
pop
pop
add
fildll
ljmp
aad
imul
fwait
mov
dec
mov
xor
ret
mov
jns
sbb
aas
test
frstor
pop
mov
jmp
outsb
dec
pop
jae
fstpl
pop
fdivs
add
mov
loopne
inc
push
cmp
sbb
shl
mov
fcomip
lahf
fdivl
adc
test
popf
sub
in
sbb
jge
mov
dec
jmp
sbb
rclb
mov
jo
mov
loopne
bound
inc
sub
call
sbb
xor
loope
sbb
dec
push
aas
jmp
loope
stc
push
faddl
jb
sbb
sub
mov
bnd
mov
in
gs
ljmp
add
test
in
loopne
push
jae
mov
mov
cmp
aam
inc
fchs
cmc
mov
mov
lds
test
sbb
jmp
dec
push
add
add
cmp
dec
or
je
and
mov
add
icebp
filds
and
aaa
or
cli
or
xor
hlt
rorb
inc
xor
jecxz
bound
lret
jo
add
arpl
repz
out
nop
cli
js
sbbl
push
cld
xor
aaa
mov
sub
rcl
movsb
cmpb
add
jne
push
out
or
xorb
loop
roll
imul
rcr
fstpl
ss
testl
fisubs
lds
aam
mov
and
daa
roll
mov
lds
cmp
mov
leave
inc
ljmp
jae
mov
adc
add
es
mov
xor
adc
mov
out
adc
push
pop
sbb
inc
jae
aaa
adc
ret
insl
mov
loopne
xor
test
loop
jp
add
sub
cmc
xor
ss
repz
stos
mov
xor
scas
pop
int3
cwtl
mov
jo
cmp
fsub
add
add
loop
insb
inc
jno
popl
pop
imul
dec
sub
ret
lds
insb
pop
loope
ljmp
das
push
inc
je
cld
loop
test
loop
cmpsb
scas
pop
int
sbb
mov
sbb
adc
popl
call
jb
scas
repnz
cmp
cmpsl
inc
pop
add
add
test
and
pusha
adc
adc
fcomps
pop
test
sub
repnz
inc
add
pop
sub
into
fs
int3
and
test
fdivrp
push
and
mov
out
push
pop
inc
jae
add
push
in
push
jecxz
mov
mov
adc
jnp
jbe
pcmpeqw
push
jmp
adc
add
add
add
add
xor
decl
roll
test
js
mov
and
das
je
enter
cmp
push
decl
rcrl
call
jle
outsb
dec
movsb
mov
adc
or
test
mov
jecxz
jecxz
add
mov
sub
add
fwait
ret
mul
xor
add
add
dec
rcrb
dec
dec
decl
lahf
cmc
aas
loop
cwtl
and
in
divl
lret
jb
ret
push
inc
cld
cld
idiv
xor
mov
inc
pop
loop
jnp
arpl
cld
xchg
aaa
jnp
ljmp
cld
xor
jb
and
cld
ja
push
jb
cmp
sub
add
mov
incl
aad
pop
mov
enter
xor
add
mov
add
ljmp
sub
test
jmp
add
fiaddl
addr16
sub
lock
mov
scas
cli
cmp
mov
add
jmp
jl
inc
jmp
add
add
loop
cmp
adc
sbb
fsin
cmpsb
add
cmc
jle
and
adc
adcl
in
xor
xchg
cli
adc
xor
call
mov
add
inc
jb
int3
std
repnz
cmp
fiadds
das
je
cmpsb
in
xor
repnz
xchg
cmp
sti
scas
add
add
jle
xor
call
xor
add
push
shl
mov
jmp
add
jl
test
rolb
fcomps
data16
ret
sub
mov
add
mov
xchg
and
dec
cltd
mov
sahf
push
pushl
lods
mov
roll
popf
cld
jne
add
fwait
pop
repz
es
cmp
repz
mov
test
fdivrs
stos
cmc
je
mov
add
out
cmpb
je
std
mov
cld
adc
mov
je
cmp
sti
je
mov
ja
xor
adc
xchg
jo
jecxz
xor
cld
jmp
leave
sarl
popa
fstl
push
add
add
enter
mov
push
sub
jge
subb
sbbb
mov
dec
mov
mov
adc
jb
mov
mov
repz
cld
sub
xchg
pop
add
and
xchg
mov
jmp
loop
mov
outsb
and
out
add
push
lock
pop
xor
jns
and
movl
outsb
pop
and
jp
lds
sub
cmpsb
pop
imul
jp
aas
imull
and
jnp
leave
fs
js
shll
mov
sbb
inc
pop
add
fmuls
push
mov
loop
daa
subb
add
aad
fdivr
add
lods
sub
cli
xor
inc
and
in
add
leave
add
loope
dec
mov
loope
lea
sti
push
mov
jne
out
ds
mov
stc
jp
xchg
aad
fucomip
popf
jl
sahf
aam
addr16
push
inc
jmp
out
aam
jb
int3
enter
test
add
add
jg
cltd
mov
repnz
pop
aad
pop
mov
aam
jl
test
or
loope
push
rorl
ljmp
movsb
or
push
inc
add
daa
cld
jne
add
test
push
lea
dec
push
rcll
add
and
sub
out
sti
mov
add
enter
das
and
es
adc
xchg
mov
xor
adc
das
xchg
pushf
push
push
cmp
or
adc
push
inc
or
jno
lods
shrl
arpl
and
sti
incl
xchg
scas
cld
out
leave
repnz
loop
ret
adc
enter
mov
addr16
fdivr
incl
add
pop
test
cmp
je
loope
popf
add
clc
mov
mov
push
xor
add
fst
push
and
lret
dec
mov
insl
fwait
jl
ror
xlat
pop
enter
das
ds
dec
enter
fdivrl
cmp
jnp
jecxz
decl
loop
iret
sti
movsl
cmpsl
fbld
or
add
cs
fisttps
jo
jo
leave
rcll
jle
add
mov
pop
xor
lock
jmp
lock
adc
or
fldl
popf
scas
shr
sbb
adc
jo
jmp
cmp
add
pop
in
popa
and
add
movsl
and
jmp
xchg
add
xchg
lock
mov
add
icebp
mov
fildll
add
jo
aas
mov
cmpsl
in
addr16
jge
loopne
inc
push
loope
test
out
add
repz
inc
xor
enter
xor
jns
aam
loope
aas
aad
fcomps
cmp
lret
sti
dec
gs
neg
mov
add
jl
cmpsl
push
fadds
fcmovne
push
je
add
hlt
cmp
mov
cs
cli
int
adc
mov
push
pop
mov
sar
add
cmp
push
inc
add
addl
jno
test
cmp
call
test
hlt
sti
mov
cmp
add
dec
add
jecxz
add
push
incl
add
xchg
sub
inc
mov
xor
cmp
push
lods
arpl
jnp
std
adc
repnz
add
cmp
cmpsl
xor
inc
nop
xor
adc
xor
inc
loop
mov
add
sbb
pop
dec
ja
cmpl
pop
and
adc
fisubrl
add
add
popa
add
jae
cmpsl
add
leave
mov
andb
ja
rcrb
in
add
imul
mov
mov
mov
andl
xlat
mov
push
cmpsl
jne
cmpb
sub
add
sahf
lock
xor
add
mov
add
mov
cmp
adc
jmp
mov
add
push
and
repz
outsb
jge
das
jmp
add
mov
add
mov
pop
pop
jmp
icebp
adc
int
repz
jmp
push
outsl
mov
aam
shlb
test
fdivs
cmpsb
sub
in
add
stc
dec
cmc
xor
add
xor
or
add
add
lock
cmpsl
or
mov
aaa
imul
aas
push
cmp
mov
xchg
add
loope
or
xchg
xchg
add
loope
add
sahf
fdivr
jno
mov
fcmovne
add
cmp
push
xor
sub
xor
adc
xor
jl
mov
dec
fidivs
add
add
add
shl
mov
das
test
scas
das
inc
test
je,pn
enter
cli
xor
pop
or
pop
incl
mov
xor
addr16
clc
mov
iret
add
das
push
decl
mov
cld
adc
jle
outsl
gs
pop
add
test
jae
jno
push
incl
add
into
and
inc
lret
dec
mov
and
test
push
das
xchg
dec
push
mov
adc
jnp
dec
loop
sub
sub
ljmp
sub
call
pop
cltd
js
popa
aam
into
mov
pop
add
and
pop
xchg
cmp
mov
push
mov
incb
add
icebp
fistpll
add
sub
xchg
cmp
das
daa
xor
lea
dec
test
mov
into
push
lock
imul
jns
movsl
nop
dec
xchg
roll
jl
shlb
imul
push
mov
cmp
repnz
add
add
sub
xor
shrb
leave
cmp
jecxz
jmp
add
pop
iret
addr16
push
fcoms
stc
leave
fs
jbe
inc
ja
cmp
mov
leave
mov
xor
add
in
mov
leave
xchg
daa
ficomps
inc
das
xor
add
fnsave
push
bound
in
push
jae
push
sub
aas
sbb
int3
add
add
mov
call
mov
enter
sbb
jmp
loop
adc
mov
lds
insl
test
add
data16
fucom
fs
aam
cmp
into
loope
movsl
lds
mov
fs
and
mov
aam
sbb
jns
sub
es
cmp
hlt
mov
inc
jmp
add
add
xchg
and
fsubrl
mov
inc
mov
mov
jp
add
imul
mov
jne
xor
adc
je
mov
repz
add
dec
push
hlt
xor
pop
inc
je
mov
sbb
cmp
sbb
inc
xor
cld
or
mov
add
clc
imul
lock
push
cmp
ja
leave
inc
and
sub
add
add
adc
aas
inc
push
test
adc
jae
mov
sub
add
dec
sub
fmull
adc
fimull
add
fldcw
insl
pop
or
out
xor
sub
sbb
mov
sbb
out
sbb
int3
sahf
dec
and
flds
add
sbb
adc
inc
sbb
add
out
sbb
or
dec
js
or
jecxz
cli
ja
cli
adc
leave
lds
mov
sbb
adc
and
xor
jns
mov
daa
cli
out
add
dec
sbb
mov
daa
mov
mov
daa
rcr
in
mov
xor
vmwrite
pusha
shrl
sbb
add
cld
rcll
add
cmp
sub
data16
ret
xchg
mov
jmp
out
mov
jb
pop
mov
addl
cmp
movsb
lahf
xchg
pop
fs
mov
inc
mov
xor
push
and
lds
mov
xor
adc
adc
leave
jne
lods
cmp
sub
sti
fdivrl
inc
jmp
xchg
sub
sbb
add
and
add
out
fdiv
out
loope
test
push
xchg
pop
or
aad
xor
push
ret
xor
jne
lods
psubsb
cmp
ret
shrb
fidivrs
adc
and
icebp
or
pop
test
sti
aam
sti
add
sbb
jne
mov
in
add
add
sub
rorb
cmp
je
fadds
rorb
xor
push
and
jne
mov
or
and
idiv
mov
lds
in
lds
xchg
sbb
adc
sub
pop
mov
add
shr
add
aas
pop
xorl
and
shlb
add
jg
je
push
sti
jg
dec
xor
add
add
adc
outsl
shl
sub
push
out
add
int
rsqrtps
jl
sti
xlat
inc
adc
sbbl
fsts
mov
add
mov
incl
sub
jb
push
stc
out
xlat
fcos
andl
aam
loop
adc
out
leave
mov
ljmp
dec
out
adc
iret
jne
add
jne
mov
add
sbb
xchg
call
aas
loop
push
xchg
xor
jbe
push
xor
cmpsb
add
inc
jno
mov
sbb
cmp
jmp
lds
sti
lds
and
rcll
cmp
cli
divl
inc
loop
pushf
pushf
mov
in
lods
outsb
jmp
adc
xadd
add
xlat
xor
jg
cmp
cltd
inc
loop
fsqrt
iret
sbb
dec
fcmovb
sbb
dec
pop
popf
cli
sub
idiv
scas
sub
jo
shl
or
push
aad
add
fwait
adcb
test
into
stos
loope
push
bound
je
or
mov
xchg
add
pushf
rol
jne
pop
jae
push
xor
call
xchg
vmovddup
lds
mov
adc
in
fcoml
fisubs
stos
xor
jp
add
in
mov
jne
mov
xor
gs
loop
mov
sub
cmp
xchg
mov
xchg
lds
adc
jecxz
mov
push
sbb
call
xor
inc
add
outsl
sub
add
adc
xor
push
inc
push
adc
xchg
or
xor
rclb
xor
jbe
divl
lods
dec
sbb
idiv
loopne
divl
mov
jne
mov
call
adc
ret
push
mov
ret
pop
jne
add
lods
jne
xlat
adc
push
loop
jmp
imul
jl
rolb
add
mov
mov
clc
jne
popa
xor
in
pop
in
pmulhw
pop
sti
push
push
sti
dec
xabort
or
mov
pop
pop
or
add
int3
or
push
or
loop
cmp
mov
aas
add
fdivs
mov
and
jo
sub
or
loop
daa
add
dec
xchg
pop
rclb
sbb
add
xlat
or
xchg
push
call
in
out
mov
loop
cmp
or
out
add
mov
jo
mov
jo
stos
and
or
jo
dec
add
insb
xor
test
leave
test
xlat
push
je
push
lds
xchg
test
cld
inc
loop
xor
fidivs
mov
sub
xor
dec
pop
inc
loope
add
add
enter
xor
notb
fs
out
divps
pop
mov
dec
sub
stos
add
pusha
call
jo
fmull
call
bnd
daa
pop
jg
jmp
add
out
aas
jmp
flds
or
icebp
je
arpl
je
popa
cli
das
mov
add
add
mov
rclb
imul
mov
filds
xchg
cmpsl
inc
and
rcrb
in
adc
out
leave
stos
loop
push
bound
in
sbb
add
add
jmp
loop
xor
test
and
xor
incb
call
jle
je
loope
dec
in
call
add
add
add
add
std
xlat
lea
outsb
notl
gs
add
add
push
pusha
mov
cmpsl
ds
sti
jge
pop
jge
add
xor
add
pop
mov
notl
clc
jnp
mov
mov
push
imul
push
sahf
xor
dec
call
pop
mov
add
add
leave
mov
mov
sti
fwait
or
add
leave
hlt
jb
mov
fsubrp
push
mov
add
in
data16
jmp
cli
xlat
sbb
cmp
add
shrb
adc
lret
fiaddl
aam
or
push
pop
xor
xchg
xor
add
gs
push
call
dec
enter
mov
and
xchg
mov
jmp
and
les
add
jne
pop
enter
xor
andl
inc
sbb
stos
movsb
repz
repnz
inc
in
daa
mov
adc
out
mov
add
aad
xchg
fdivrs
add
pop
and
adc
push
pop
lods
inc
fnstenv
mov
fldpi
jo
push
sbb
fdivl
mov
inc
addr16
ss
shr
sub
sti
fimuls
cltd
inc
adc
add
jl
repz
jp
xlat
or
iret
addr16
sti
arpl
add
adc
adc
aas
jne
fnstcw
outsl
lcall
xor
and
loope
push
call
nop
inc
and
sbbl
or
or
xchg
add
jl
bound
cmp
dec
pop
jnp
push
push
not
mov
repnz
mov
cmp
aad
je
repz
xor
add
lea
xor
and
push
orl
add
icebp
mov
sti
into
mov
out
idiv
jbe
je
mov
sub
jge
mov
and
jae
insb
pop
mov
or
add
ss
mov
jecxz
loop
jl
mov
lret
imul
data16
lock
or
mov
lock
jae
sti
sub
mov
or
dec
or
jae
lea
adc
cmovo
inc
mov
out
and
push
xchg
push
pop
sti
outsl
f2xm1
jne
inc
fldcw
and
push
push
aas
or
ljmp
ja
fs
mov
jl
out
inc
push
adc
jnp
mov
icebp
xor
xor
test
bound
xor
and
sar
cmpl
add
stos
cmpsl
adc
je
or
pop
les
out
enter
mov
and
jae
mov
cmp
fiadds
xor
jnp
mov
sbb
test
mov
gs
inc
loop
test
imul
stos
sbb
movsb
jb
push
cmp
iret
inc
loop
sub
mov
loop
stos
add
add
pusha
call
insl
cmpsb
cmp
xor
or
mov
adc
repnz
out
nop
push
sti
mov
repnz
xor
jmp
mov
jo
sbb
jo
cmpsb
fimull
sub
xchg
sub
test
mov
decl
out
jmp
add
add
add
add
loop
leave
dec
jno
pop
sbb
xor
and
sti
add
pop
je
mov
divl
pop
std
leave
inc
mov
into
push
hlt
clc
and
cmp
fwait
cmp
jb
dec
xchg
cmp
cmp
cmp
mov
loop
add
loop
add
sbb
cmp
out
mov
out
sub
jo
sub
aad
push
leave
cmp
add
in
jecxz
ds
jae
idiv
jg
je
js
add
mov
add
test
xchg
mov
lret
add
xchg
mov
pop
pop
or
rorb
dec
mov
cli
mov
jb
loop
xlat
cmpsl
sub
loop
pop
pop
in
sti
sbbb
add
add
dec
mov
inc
inc
jecxz
add
jnp
incb
inc
enter
add
pop
push
and
or
mov
lds
int
leave
add
loop
sti
mov
adc
test
rorl
outsl
jmp
shl
xor
add
leave
push
test
jns
cmp
xlat
ret
push
pop
outsb
filds
add
arpl
loope
loop
adc
xor
lods
add
imul
jmp
inc
loop
test
fbld
mov
jmp
jb
in
adc
testl
sbbb
add
dec
in
loop
je
cli
mov
jmp
inc
add
clc
sbb
fsubs
xor
pop
aaa
leave
sub
add
mov
dec
into
stos
loope
xchg
sub
add
adc
add
loope
inc
icebp
out
push
mov
loope
add
fdivrl
jmp
fidivs
add
ret
test
add
test
loope
lea
sti
mov
add
sbb
jo
cmp
sbb
cli
mov
add
jb
lea
xchg
std
ljmp
jle
clc
std
dec
call
test
inc
or
out
lret
xor
adc
test
addr16
mov
jb
rcrl
mov
mov
rcrb
add
xchg
or
inc
mov
inc
dec
je,pn
mov
sub
cmovnp
add
xor
push
rcr
in
pop
sub
add
xor
push
loop
pop
inc
adc
add
adc
retw
push
and
mov
cmp
popf
aas
shlb
lcall
loop
xor
and
aas
add
clc
push
xchg
imul
dec
jmp
sti
jge
inc
jl
es
loop
mov
sti
pop
or
call
sti
pop
shlb
outsl
mov
aas
call
pop
loopne
call
mov
lods
outsb
mov
scas
cld
inc
in
lock
xor
push
adc
add
jmp
push
mov
xor
call
loop
inc
test
add
adc
mov
addr16
out
scas
mov
adc
out
outsb
outsb
mov
fdivrl
lahf
test
in
dec
and
fwait
jecxz
out
and
jo
cmpsl
mov
add
sti
scas
ss
test
insb
sub
mov
mov
add
add
adc
iret
push
push
mov
jae
loope
adc
add
jb
cltd
stc
pop
test
test
adc
jg
cmc
cmpb
out
mov
pop
cmpsl
xor
push
xor
xchg
clc
push
loope
push
ss
sub
sbb
jecxz,pn
mov
in
dec
repz
sbb
incb
add
into
lods
jecxz
inc
xchg
testl
xor
sti
xor
add
xchg
adc
mov
add
adc
jo
mov
fwait
mov
jp
inc
mov
jp
inc
mov
or
ljmp
or
dec
dec
cltd
xorl
inc
mov
push
add
add
inc
filds
loop
add
loop
add
add
iret
xlat
or
adc
or
xchg
jecxz
or
xchg
call
data16
inc
into
mov
mov
add
and
inc
add
push
cmc
sbbl
in
lret
sti
lods
push
les
pop
fnsetpm(287
sti
popf
arpl
mov
call
or
add
pop
mov
sti
jge
or
testb
test
lea
into
mov
xor
in
jo
jg
stos
shl
std
xor
xchg
adc
call
ja
push
mov
loop
xchg
in
add
mov
xor
push
jmp
xor
mov
call
add
jbe,pt
pop
cwtl
cmp
add
add
xor
ljmp
ret
fnstenv
ret
nop
cmc
loopne
pop
dec
in
lds
andl
xor
sbb
fs
sub
pop
pop
xchg
lret
stos
fidivl
push
jb
sub
rcrl
and
loope
push
push
push
in
and
in
add
subb
sbb
rorl
add
add
xor
add
mov
sti
jmp
jb
and
cmp
aam
loope
push
cmp
xor
mov
std
cmp
out
inc
sbb
cmp
push
mov
sti
cld
inc
cmp
ret
add
jne
jne
adc
xor
add
mov
add
cltd
jnp
add
add
mov
in
add
or
and
jne
nop
add
dec
dec
adc
mov
adc
call
pop
inc
cltd
pop
ret
push
mov
mov
push
push
stc
xchg
push
sbb
or
insb
mov
clc
xchg
push
mov
repnz
jbe
or
xchg
mov
addr16
push
pop
add
add
xor
sti
idivl
cmc
aas
loop
mov
add
xchg
push
or
add
and
mov
or
xor
fistpll
aas
loop
cmp
mov
sti
mov
xchg
jge
jne
out
jmp
dec
pushf
xor
pop
dec
or
sub
in
data16
repnz
fcos
test
add
daa
jmp
inc
add
testl
gs
test
mov
mov
fiaddl
in
sbb
in
lock
cmpsl
mov
loope
cmpsl
ss
into
andb
std
sub
dec
or
test
xor
cmpsl
mov
add
mov
mov
loop
movsl
mov
add
add
incl
xchg
test
push
ret
add
xor
mov
fcomps
sbb
cmp
sbbb
mov
jne
stos
stos
adc
adc
stos
sti
negb
notl
lret
xor
adc
cmpb
or
in
sti
mov
out
mov
add
add
cmpsb
sti
jmp
scas
mov
xorl
cmp
fsubs
xor
hlt
mov
xor
adc
add
dec
adc
pusha
xor
add
mov
dec
push
fidivrs
xchg
test
test
push
add
notl
mov
add
push
xchg
jmp
sbb
add
xor
cld
pop
not
mov
into
sarb
xor
or
dec
xor
add
rolb
lret
mov
mov
xor
add
mov
add
xor
pop
loop
pop
mov
mov
dec
jo
jb
das
mov
add
xor
repnz
gs
xor
mov
mov
lea
pop
in
fadds
sbb
sti
popa
jg
je
xor
jb
inc
fnsave
or
insb
js
aaa
call
cmc
cmp
in
sti
pop
dec
jo
daa
cmp
add
cltd
out
mov
decl
xor
add
mov
das
fs
xor
inc
repnz
inc
push
mov
aas
xor
out
pop
adc
and
jns
lea
repnz
gs
test
mov
cltd
sbb
dec
movsb
enterw
inc
mov
and
jmp
add
add
xchg
jns
pop
loop
push
out
jmp
inc
add
add
sti
xchg
not
cmp
add
xor
out
out
jle
sub
and
daa
imul
mov
dec
fmull
xchg
adcl
push
fs
mov
adc
adc
cmpsl
call
push
mov
xchg
mov
add
adc
cmpsb
sti
jb
and
stc
add
add
sarl
in
jns
shrb
add
loope
dec
icebp
call
xor
cltd
imul
add
addl
leave
cmpl
inc
aas
mov
cmp
add
add
jne
or
call
pop
insl
pop
test
sub
add
jmp
call
call
mov
jb
sub
add
add
add
add
xchg
sbbl
je
xchg
dec
mov
mov
xchg
decb
pop
mov
clc
mov
add
call
subb
pop
inc
cmp
add
sahf
divb
mov
push
hlt
xor
add
sahf
mov
jge
adc
pushf
xchg
sbb
mov
cli
aas
lock
add
mov
sti
push
lret
notl
sub
mov
xor
aas
pop
fsincos
dec
jbe
sti
dec
push
push
cld
mov
add
cmp
push
add
sbb
ss
sub
sub
loope
decl
ja
std
out
ret
push
mov
pushf
fldl2t
xchg
inc
mov
mov
sub
add
add
js
add
or
fldcw
mov
push
lods
mov
cmp
mov
es
mov
adc
cld
pop
out
mov
inc
mov
or
xor
xor
nop
in
add
or
xor
lahf
fcmovu
cmp
mov
sbb
or
and
or
rcrb
cmpsl
or
sub
xchg
fnstenv
ss
test
mov
lahf
push
jb
mov
and
xor
mov
loopne
add
add
jmp
insb
cli
cs
movsb
pop
mov
pop
out
jo
mov
cmpsl
xor
insb
cli
testb
add
and
sbb
repnz
lods
jne
push
test
add
xor
test
idiv
fldt
idiv
jg
je
inc
fucomip
and
testl
jo
outsb
xor
sub
add
test
scas
movsb
cli
jl
stos
mov
call
add
add
je
or
insl
call
mov
jecxz
mov
out
xchg
idiv
mov
into
push
add
mov
jnp
loop
xor
and
in
push
decl
scas
cli
in
mov
call
mov
xchg
mov
loop
mov
incl
add
loop
pop
into
and
decl
pop
mov
jmp
sar
loop
dec
daa
or
cli
pushl
push
add
cwtl
shlb
imul
rolb
xor
cli
int
xchg
sub
xor
icebp
mov
xor
push
ret
pushf
mov
mov
xor
add
xor
pop
pop
in
sbb
xor
pop
mov
call
lods
loop
jnp
fnstsw
add
and
pop
aad
ss
aad
imul
pushf
imul
in
lods
xor
ljmp
cmpsb
add
fs
daa
adc
jmp
sbb
pop
sbb
add
hlt
mov
cmp
add
shr
push
fs
das
mov
test
xchg
mov
mov
cwtl
jg
roll
xchg
push
xchg
sti
xchg
and
call
push
sub
sub
inc
push
add
inc
mov
and
scas
call
mov
mov
mov
jge
in
fucom
xor
je
sub
lods
sub
lods
add
add
xor
hlt
adc
add
sbb
je
pusha
dec
pushl
das
add
ljmp
sub
call
pop
ret
jle
popa
push
mov
add
cs
mov
je
cmp
je
sbb
adc
xor
add
jg
pop
cltd
out
incl
pop
idivl
add
add
mov
mov
sbb
inc
jnp
push
mov
jg
ret
push
mov
xor
call
dec
pop
adc
xchg
adc
mov
call
push
mov
rol
jp
scas
xlat
aam
jae
test
fs
clc
not
inc
add
xchg
in
add
inc
xchg
divl
aaa
cmp
imul
add
pop
mov
je
push
cmp
or
mov
sti
popf
les
jle
fldt
mov
shlb
adc
cwtl
adc
adc
loop
rcr
ja
adc
pop
repz
cmp
add
mov
pop
incl
call
shl
mov
sbb
shl
xor
xchg
and
roll
add
cmp
aad
sub
std
xchg
cmp
into
mov
int3
arpl
cmp
cmpb
pop
add
pop
push
dec
mov
fcmovne
push
pop
rcrl
frstor
gs
add
mov
add
or
nop
stos
xor
hlt
and
out
jne
enter
in
and
sbb
incb
add
adc
sbb
dec
adc
pop
cs
loope
out
sbb
add
sub
inc
fbstp
add
movsl
inc
add
shlb
sti
xchg
dec
in
and
adc
add
es
jmp
and
mov
loop
xor
cld
insl
es
jmp
mov
jne
mov
and
add
add
mov
cmp
push
test
add
jecxz
xchg
in
and
or
jbe
xor
call
jg
jne
cmpsb
shlb
xor
call
xchg
add
jge
idiv
mov
sub
int
lret
mov
add
cmp
adc
add
add
clc
add
loop
or
xor
xor
push
sub
push
adc
sti
hlt
aas
loop
aam
dec
mov
xlat
push
mov
pop
out
aas
loop
add
aad
lret
sbb
adc
sub
jecxz
clc
lock
add
ja
jmp
daa
adc
xchg
gs
inc
xor
add
imul
sbb
mov
mov
fs
popf
jbe
cmp
xchg
mov
scas
lods
xchg
ret
icebp
incl
xchg
outsb
sbb
test
hlt
mov
dec
and
es
add
and
pop
cmp
lret
jecxz
mov
enter
push
les
cmp
call
xor
add
mov
push
push
jmp
dec
xlat
or
sbb
in
jmp
lea
add
int3
hlt
and
in
int3
and
xchg
mov
mov
dec
ljmp
xor
jmp
and
out
arpl
jl
jl
jne
cmpsl
add
adc
aas
jmp
loope
pop
cmp
add
sbb
sti
pushf
dec
movsl
test
jge
add
addr16
stos
loope
xchg
movsl
movsb
and
loopne
add
inc
cmpsb
sti
fisubrs
fiaddl
jmp
loope
inc
or
pop
outsl
inc
or
fs
adc
adc
out
test
bound
adc
push
adc
cmp
mov
incb
clc
add
pushf
sti
jae
imul
add
sub
or
mov
push
cmp
call
call
fwait
mov
movsl
push
mov
ja
sarb
push
xor
pusha
divl
addl
adc
and
call
test
xchg
test
sti
cs
sbb
pop
sar
sub
test
movsl
inc
lret
cli
mov
pop
into
and
add
loop
mov
lret
leave
add
shr
jnp
mov
je
or
add
loop
inc
and
mov
push
mov
jg
cmp
jmp
shr
inc
and
outsl
and
sbb
jecxz
inc
and
mov
cmp
jnp
sti
push
inc
and
xchg
push
pop
add
add
mov
aas
loop
lock
inc
add
pop
sub
mov
xor
repz
adc
out
aas
xchg
into
aaa
sub
lret
iret
test
inc
loop
jmp
push
in
int3
jmp
pop
out
out
xor
loop
adc
aam
call
dec
loopne
mov
lret
or
mov
hlt
int3
jmp
sbb
out
inc
dec
add
mov
mul
sbb
lret
add
or
inc
loop
sarl
xchg
fistpl
jecxz
fs
add
test
sub
cld
cmc
sti
insl
fcoms
stc
cli
mov
test
loope
push
add
mov
jmp
and
lea
loope
xchg
stos
es
and
push
data16
pop
loope
clc
adc
mov
out
xor
add
add
dec
sub
mov
psubsw
ds
push
xor
icebp
call
out
data16
xchg
add
add
hlt
icebp
and
enter
sahf
xor
add
mov
adc
xor
xor
imull
adc
xor
testb
imul
mov
add
add
add
fdivs
pushl
and
loopne
and
push
mov
ret
and
inc
mov
push
sbb
pop
mov
inc
call
mov
psrlq
add
add
popf
fistl
mov
jae
shl
cmpsl
or
xor
xlat
sbb
xor
add
add
cld
push
int
mov
inc
mov
scas
push
xor
xchg
jnp
jl,pn
repz
dec
and
lods
add
in
movsl
cmpsl
daa
mov
fwait
in
je
sbb
add
xchg
inc
xchg
aad
xlat
xlat
dec
bswap
pop
inc
push
aaa
imul
jg
out
or
aaa
xchg
jg
add
ret
bnd
add
add
xor
xchg
sarb
pop
jno
std
xchg
fdivrl
fcompl
jp
cmp
mov
cmc
jo
sub
mov
push
das
cmp
sbb
int
fs
sahf
loope
imull
sti
inc
loop
sub
je
jl
imul
push
repz
lods
loope
push
ljmp
lock
add
xor
jmp
sub
sbb
inc
adc
js
out
mov
and
add
ret
inc
fldenv
sub
mov
cmpsl
imul
lock
test
dec
idiv
jb
test
loope,pn
mov
xchg
movsl
xchg
pop
mov
mov
hlt
mov
cli
pop
add
add
icebp
cli
aam
loope
jge
xchg
lods
mov
xor
mov
cmpsl
pop
pop
mov
in
xor
add
lea
inc
add
addb
mov
or
mov
jae
dec
je
jae
push
jmp
int
push
leave
push
add
mov
add
jnp
stos
pop
dec
jmp
and
call
pop
jo
jns
dec
hlt
mov
mov
inc
pop
or
inc
test
inc
hlt
xchg
mov
dec
cli
hlt
addb
add
outsl
test
loop
add
stos
cwtl
pushl
test
scas
lods
adc
jae
orl
cltd
decl
loop
add
dec
mov
mov
cmp
xor
lods
std
loop
or
jo
cmpsb
rorl
leave
mov
mov
leave
movsb
mov
jne
mov
mov
sub
xchg
pop
xchg
cmp
cwtl
dec
subb
je
pushf
pop
sti
out
lahf
adc
adc
jne
xor
clc
mov
cmp
dec
leave
aaa
rorb
add
add
dec
hlt
cmp
dec
mov
cmp
shr
add
test
pop
pop
popf
scas
sarb
jo
mov
mov
push
fidivrl
imul
xor
pop
mov
sti
xchg
aaa
fdivs
icebp
ret
adcb
xor
nop
into
sub
mov
xor
add
push
ret
insb
ret
add
add
mov
add
xor
bound
cmp
ss
or
jmp
in
aas
jg
fdivs
add
push
or
add
mov
adc
sub
test
loope
ret
xor
jnp
xor
inc
fsubr
ss
and
jns
lock
pop
jno
loopne
out
stc
call
add
add
jb
jbe
cmp
mov
jbe
jb
mov
inc
add
shr
out
lea
add
sahf
jb
mov
lock
aad
jge
mov
inc
cmp
jne
jnp
testb
hlt
cmp
in
cmp
xor
push
cwtl
addb
mov
xchg
outsb
and
xor
add
decl
push
pop
adc
sub
rcrb
inc
lock
add
fwait
aam
mov
das
sbb
loop
mov
out
inc
mov
dec
cld
jl
xchg
test
dec
rcrb
mov
and
inc
lds
mov
lea
das
sbb
xchg
mov
add
add
jecxz
push
cmp
add
cmp
dec
push
sbb
cmp
out
mov
stc
sti
push
push
lea
cmc
xor
push
or
bound
aad
js
jg
in
xor
jmp
jnp
push
mov
hlt
pop
push
pop
ret
imul
add
add
add
add
sub
jno
repnz
popa
pop
repnz
sbb
out
out
mov
pop
fnstenv
ds
and
loope
pop
in
add
inc
jno
inc
xor
fsubrl
pop
andb
mov
aaa
push
xor
mov
push
out
or
popa
xor
add
in
add
add
mov
pop
stos
test
in
pusha
or
jmp
mov
dec
xchg
push
cmp
jb
sbb
enter
mov
daa
adc
clc
adc
mov
sbb
jp
sub
jecxz
push
roll
stc
lods
repz
divb
je
arpl
adc
adc
call
cmpsb
in
and
hlt
add
add
xor
jmp
push
sti
add
xor
cmp
mov
jb
cmpl
jge
xor
shr
mov
jg
out
cmp
mov
mov
jae
mov
addb
outsl
or
mov
or
stc
inc
add
xchg
jmp
sub
jp
add
add
das
je
dec
inc
adc
pop
and
stos
xor
inc
jecxz
inc
mov
mov
sti
mov
push
mov
mov
pop
xchg
sbb
es
incb
ljmp
jnp
test
imul
pop
xchg
loopne
sti
inc
cmp
dec
test
push
lea
adc
cltd
mov
add
ljmp
into
mov
repnz
add
and
jg
sti
xlat
sbb
rorb
mov
mov
stos
inc
push
mov
fldenv
sahf
add
movsb
std
jmp
fdivs
adc
mov
xor
clc
jecxz
hlt
out
and
xor
andb
in
out
add
add
test
mov
loop
mov
pop
add
xchg
xor
out
xchg
test
mov
mov
mov
outsl
in
xchg
mov
xchg
and
push
jmp
insb
testl
and
into
adcl
and
mov
icebp
pop
push
ret
mov
dec
je
add
lret
hlt
push
xchg
pusha
and
jmp
xor
ret
fistps
dec
dec
adc
sti
fsubrl
jo
lds
aaa
repz
xchg
xorb
sti
bound
stos
into
jge
mov
fidivrs
inc
icebp
mov
push
pop
in
xchg
sub
push
ljmp
idiv
add
add
dec
cld
add
and
jne
jae
pop
fwait
mov
add
fcmovne
rol
gs
inc
or
inc
clc
add
stos
jne
js
add
scas
pop
hlt
lock
pop
addb
or
ret
push
mov
jecxz
push
mov
mov
jle
not
in
or
add
push
test
add
lret
cmp
ds
aas
adc
mov
push
imul
add
cld
push
push
cld
std
leavew
sub
lret
cli
lods
add
test
xchg
push
push
xor
jne
push
or
mov
repz
les
adc
cld
pushf
icebp
fwait
mov
cmp
shr
add
dec
mov
sti
lea
leave
and
jle
repnz
pushl
add
add
xor
loop
cmp
cli
sub
jg
andl
push
xor
jmp
mov
mov
sub
mov
jae
jns
fs
add
push
xor
stos
fidivs
mov
pop
fs
cmp
cmp
stos
xor
push
dec
es
or
dec
mov
stos
pushf
pop
mov
mov
mov
or
dec
sub
xchg
test
cmp
mov
shlb
push
mov
sub
jb
push
or
sbb
add
icebp
add
add
test
fmull
addb
xor
jecxz
fsubrs
pop
test
popa
pop
repz
loope
xlat
call
fnsave
cmp
mov
lret
jmp
push
mov
mov
push
add
sbb
inc
or
sbb
sub
adc
add
mov
sub
cmp
orl
dec
push
mov
xor
add
xchg
push
add
call
jmp
adc
addb
rorb
xor
testl
rorb
call
ret
cmp
leave
je
jle
jnp
add
add
xor
jnp
push
aaa
add
in
lcall
dec
in
or
mov
adc
je
dec
jg
test
mov
es
mov
jmp
inc
mov
test
cmpsb
add
or
add
add
cld
cmc
sbb
sub
stos
sbb
jb
push
clc
or
jge
bound
rcl
inc
add
stc
and
aad
and
xlat
or
outsb
fsub
xor
xchg
jp
jg
add
adc
and
test
add
bound
negb
outsl
in
gs
int3
orl
xor
add
sbb
loop
pop
dec
repnz
movsl
add
pause
lret
add
sub
jl
xor
jno
ficoml
pusha
dec
fldt
hlt
adc
lock
mov
add
jmp
xor
jae
sti
push
xor
divb
call
push
add
je
ds
xor
test
adc
push
or
push
addw
jne
lds
add
cmp
call
arpl
push
shll
idivb
push
mov
subb
sti
xchg
mov
push
and
or
jns
jne
popa
sti
rep
nop
add
push
xchg
data16
sbb
std
push
mov
add
xor
push
addr16
adc
cmpsl
out
je
mov
or
testl
add
add
pop
mov
jl
dec
pop
jne
pop
add
pushf
jae
mov
mov
pop
mov
cmc
aad
call
aas
insl
je
dec
lock
jae
mov
jnp
jl
push
cmp
jne
xchg
dec
ret
testl
dec
filds
push
loop
jl
repnz
lea
add
rolb
push
add
pop
mov
popa
and
outsb
ficomps
out
add
jne
mov
push
sub
push
pushf
bound
push
xchg
data16
shll
call
bound
pop
insb
jge
jecxz
mov
push
aad
mov
add
xchg
loope
jge
add
add
push
out
out
xor
mov
shr
test
pop
mov
dec
mov
fwait
loop
jmp
inc
loopne,pt
outsb
imul
iret
aad
pushf
or
jmp
jp
nop
mov
arpl
fdivl
cmpb
into
add
jle
in
hlt
cld
psllq
inc
mov
test
out
inc
test
rolb
add
imul
xchg
sbb
push
sub
adc
jmp
gs
andl
ret
aaa
push
lcall
fsub
xor
rcr
xlat
sub
lods
cmp
fsubs
stos
shlb
ss
mov
dec
sbb
fbld
mov
sti
cltd
jmp
cmp
add
jbe
and
jl
mov
lock
rcr
insl
add
loope
xor
sti
mov
loopne
pop
fidivl
insl
jle
jns
test
loope
sti
add
adc
mov
adc
idivl
jbe
cmp
add
jbe
cmc
pushl
sub
add
loope
jge
cltd
rorb
cmp
cmp
add
hlt
jbe
repz
xor
cmp
pop
xchg
xor
add
lea
loope
inc
mov
push
inc
add
imul
lret
xor
jge
aas
fucomp
xor
pop
cmpb
neg
loop
jmp
and
aaa
div
sub
imul
sti
enter
push
call
add
add
add
add
stos
sti
dec
mov
mov
sub
fwait
xchg
cmp
or
xrelease
ja
negb
je
jo
call
aad
adc
aad
adc
and
mov
ret
cltd
mov
jmp
outsb
jmp
xchg
sahf
jmp
xor
ss
aaa
adc
hlt
push
pop
inc
add
add
xor
add
jge
jge
xor
add
jae
add
jo
ret
into
and
dec
cmpsl
movsb
fwait
cmp
cmp
sub
cmp
or
sbb
or
or
nop
push
add
daa
rep
flds
push
stos
xor
fs
mov
add
das
mov
ljmp
fs
inc
repnz
cli
hlt
aad
inc
jmp
sahf
std
or
outsl
xlat
call
pop
add
xor
jp
loope
or
lea
loope
mov
mov
mov
dec
jbe
mov
mov
movsl
cmp
movsb
xor
sti
pushf
and
jbe
lods
add
add
pop
mov
xor
dec
aas
xor
xchg
xor
jmp
ss
jecxz
xchg
xor
call
test
sub
jnp
pop
sub
inc
lea
notl
mov
mov
add
xor
adc
add
add
adc
cmpb
testl
sub
push
shrb
addl
inc
lock
loopne
scas
js
inc
mov
out
ss
cmp
loop
ret
or
jmp
loop
hlt
loope
mov
mov
scas
das
mov
adc
outsb
out
dec
cmp
mov
xlat
jecxz
incb
add
mov
cmp
and
imul
popa
pop
mov
sti
popa
jmp
out
aas
rol
dec
push
xchg
addr16
mov
clc
subl
js
inc
bound
imul
lcall
inc
jb
sti
inc
cmp
and
xchg
jbe
sbb
adc
fcoml
add
add
lock
test
mov
push
ret
adc
fisubrs
addr16
xor
push
jmp
stos
fildll
jg
in
test
pop
outsb
dec
fdivr
loop,pn
mov
fwait
clc
mov
pop
jo
inc
gs
or
sahf
pusha
xchg
jmp
in
jbe
dec
xchg
test
mov
xor
add
add
or
xor
adc
and
jg
stos
mov
cmp
aam
sbb
adc
imul
mov
sbb
cmp
and
sub
cmp
test
push
add
pop
lea
pop
xor
dec
sub
jge
mov
pop
mov
add
add
add
add
fdivr
mov
scas
or
inc
xchg
adc
addb
push
pushl
call
pop
decl
mov
pushf
out
sti
cld
notb
dec
gs
push
add
jnp
xchg
cmpb
testl
jnp
gs
dec
add
lock
inc
lock
add
sar
jmp
add
add
inc
clc
mov
in
mov
hlt
nop
mov
add
outsb
popf
testl
clc
imul
loop
jbe
repnz
aas
cld
test
in
xchg
xchg
into
aaa
clc
pop
into
add
cmp
lea
push
testl
pop
add
fadd
jne
fidivrs
cld
imul
idivb
test
add
add
movb
test
mov
hlt
imul
ds
inc
clc
or
or
movsb
sti
xor
movsb
js
pop
sbb
and
dec
call
loop
sub
in
sub
pop
ret
add
xor
push
ss
and
es
lea
es
pop
pop
cmp
add
ds
inc
mov
add
loop
jmp
movsb
gs
cmp
sbb
pop
mov
jno
fmulp
out
cmp
outsb
fsubp
js
push
out
dec
dec
inc
aas
movsl
pop
mov
test
imul
jecxz
adc
ljmp
mov
push
in
adc
mov
mov
add
data16
push
out
call
add
add
mov
in
outsl
out
push
pop
int
jg
das
test
popf
add
push
sbb
insb
cmp
ljmp
inc
pop
jmp
in
jno
cmp
pop
mov
adc
out
ret
in
push
jne
xor
sub
cmp
mov
hlt
sti
mov
ja
in
add
mov
dec
push
sbb
cld
cmp
ss
pop
mov
xor
inc
sbb
mov
and
mov
aam
movhps
jnp
cmpsl
mov
inc
cld
or
add
inc
cld
les
leave
ret
dec
push
add
lea
mov
idiv
push
mov
add
bound
lahf
es
addl
add
jge
mov
add
jb
inc
fistpll
dec
loop
adc
out
lds
mov
pop
and
xchg
ret
mov
sub
sti
mov
vmulss
inc
push
dec
mov
cmp
in
fcmovb
or
fstpt
add
fstps
incb
add
xchg
ret
pop
cmpsb
test
shlb
lock
or
adc
sub
sbb
mov
push
out
rcr
jb
loop
mov
xor
xchg
pop
push
pop
fisttpl
push
inc
lods
adc
push
leave
xor
sahf
pusha
mov
dec
in
das
jg
xchg
mov
or
push
call
les
add
dec
add
sub
xor
popa
push
mov
mov
ret
lods
test
or
les
icebp
xor
imul
mov
loop
lods
mulps
je
iret
cmp
bound
aaa
scas
fucom
mov
sub
and
dec
aaa
xchg
inc
imul
daa
sub
bound
add
jmpw
test
loope
out
popa
in
in
add
jns
icebp
jne
pop
jge
subl
in
ret
fs
ficomps
jne
xchg
cmpsb
out
push
ja
shll
cli
mov
jno
mov
lahf
into
mov
rcrl
add
lods
sub
add
bound
inc
cmp
push
pop
mov
add
add
mov
jnp
jnp
lea
xchg
mov
or
orl
add
int3
lds
leave
cmp
push
xor
clc
mov
xchg
push
pop
int
mov
mov
idiv
inc
insl
je
pusha
mov
cmp
lds
xorb
add
es
mov
xor
data16
add
add
inc
clc
testb
inc
cmp
add
sbb
sbb
push
mov
notl
in
pop
add
orl
mov
cmpsl
cmp
cltd
jg
pop
or
das
dec
or
mov
add
mov
dec
addr16
mov
or
jecxz
push
inc
add
cmpb
pushl
xchg
add
jecxz
cmpb
adc
mov
and
dec
popf
adc
popa
xor
in
adc
mov
fld
test
inc
je
push
add
add
in
cmp
lds
in
cld
and
call
fucom
and
add
add
fs
cmp
jno
xor
addr16
mov
sub
test
mov
fisttpll
and
sti
mov
addr16
in
pop
testb
cltd
sub
aaa
mov
sti
das
and
xchg
jne
dec
push
insl
std
xlat
adcl
out
sbb
add
add
movsb
cmp
xchg
xor
xor
fs
jmp
pop
in
xlat
mov
and
jg
in
rolb
sbb
fnsave
and
push
mov
sub
repnz
sub
add
jns
mov
adc
iret
sub
and
inc
pusha
movhps
mov
je
jmp
movl
add
add
add
and
jnp
mov
push
ret
add
mov
add
in
push
cmp
aas
gs
xor
add
mov
adc
adc
imul
std
xor
adc
dec
insl
push
ret
mov
push
insb
mov
push
push
ret
sub
jnp
mov
add
pop
xor
xor
add
add
out
pop
shlb
daa
pop
mov
aam
in
dec
xchg
xchg
sti
push
sub
das
lea
xor
loop
mov
add
repz
loop
lea
cltd
sti
add
sbb
mov
cli
push
movsb
cli
in
jg
faddl
push
aad
ja
and
shlb
jg
add
add
cmpsl
pop
ret
xor
cltd
imul
adc
lret
addr16
outsb
ret
lcall
stos
lods
adcb
data16
icebp
pop
ja
push
inc
pop
addb
add
push
jecxz
sbb
xor
inc
icebp
icebp
aad
mov
lcall
fyl2x
add
add
lods
lods
cli
test
lcall
or
std
int
leave
and
cmp
push
sub
clc
daa
daa
xor
pop
xchg
add
aas
jnp
fdivr
and
addb
aas
jmp
sbbl
in
jo
negl
cld
cmpsl
cmpsb
xor
scas
push
addr16
xor
xor
push
sub
cli
mov
jae
add
add
add
add
add
inc
call
mov
jp
adc
mov
arpl
loop
lock
int3
icebp
inc
inc
jmp
push
repz
mov
test
push
inc
dec
mov
mov
bound
sub
inc
jg
not
nop
sub
call
add
jnp
addl
les
pop
std
jae
cmp
outsl
adc
adc
sbb
cmpsl
ds
lret
xchg
sbb
jecxz
and
inc
xlat
pop
push
call
pop
adc
mov
or
jno
data16
xor
or
push
mov
je
adc
dec
sub
mov
push
outsl
xchg
add
pushf
dec
cli
xchg
sar
pop
int3
pop
add
add
add
sub
out
or
and
das
sti
jb
lea
scas
bound
in
push
push
sbb
jg
fwait
jmp
arpl
mov
subb
xchg
lret
bound
out
cld
cmp
js
das
sti
adc
mov
bound
out
and
mov
inc
sbb
xor
repz
loop
stos
repz
cmc
xor
mov
rorb
test
mov
scas
sub
pop
mov
and
icebp
dec
mov
movsl
cld
jo
into
int
fimull
xor
or
repz
repz
push
hlt
int3
xor
addb
mov
das
add
inc
sub
out
shr
ret
stos
iret
add
add
mov
xor
fdivl
stc
jg
iret
pop
out
std
fstl
push
or
sub
loop
into
mov
or
nop
call
aad
bound
pop
outsl
push
pop
movsl
pusha
aam
push
call
push
gs
push
push
call
mov
pop
lea
sti
xchg
jbe
repz
add
fiadds
sti
cld
jmp
push
call
push
jbe
scas
addr16
enter
push
bound
jecxz
pusha
dec
hlt
add
das
add
or
inc
fbld
dec
cmpsb
je
filds
test
ficompl
insb
cmp
testl
cs
jecxz
push
cmp
call
clc
cltd
adc
add
add
mov
add
mov
sbb
cld
mov
dec
cltd
add
push
mov
add
pop
jecxz
dec
add
lods
jno
je
mov
add
jnp,pn
cmpb
jne
cld
pop
and
mov
and
inc
jle
mov
je
int3
pop
and
das
push
pop
lds
pushf
cmpsb
icebp
inc
jle
add
test
adcb
ds
jae
push
pushf
add
orb
push
pop
mov
adc
iret
cmpsl
pop
mov
cmp
aaa
mov
sar
lods
and
push
lea
adc
pop
xlat
leave
repnz
xor
sbb
cmp
cld
lahf
aam
call
cmp
add
shl
call
cmc
sbb
insl
lahf
dec
inc
fnstenv
xor
lcall
dec
jg
loop
xchg
mov
xchg
sbb
lds
add
jno
notb
and
mov
test
inc
jge
test
sti
scas
lds
adc
xor
js
dec
sbb
add
stos
add
add
add
add
add
jmp
and
cmpsb
jne
dec
daa
xchg
out
lea
sti
dec
pop
ret
push
lods
shlb
in
sti
cltd
pop
scas
enter
call
mov
xchg
push
bound
xor
insb
gs
std
notb
fs
jb
test
pop
push
sti
imul
mov
int
out
int3
sub
sbb
pop
cmp
or
into
cli
add
into
add
aad
pop
lock
and
jnp
test
or
add
dec
aam
or
mov
jno
push
rclb
jae
test
out
testl
iret
and
xchg
fbstp
add
inc
jb
ja
out
sti
cmp
outsb
bound
addl
add
test
inc
mov
lcall
dec
push
mov
jmp
jb
jl
testl
popa
nop
mov
psubd
adc
clc
and
in
jnp
inc
aas
call
lods
out
or
mul
dec
cld
popa
or
out
or
xchg
xor
or
add
pop
pushf
xchg
dec
xor
xor
xchg
mov
push
ficoml
or
inc
xor
jne
loop
data16
sbb
sub
das
push
addr16
add
mov
insl
sbb
xchg
xor
movups
jmp
les
xor
mov
iret
inc
ljmp
cld
xchg
std
jno
out
push
mov
test
add
push
rolb
movsl
push
cltd
jmp
jo
lock
pop
xchg
mov
outsb
mov
fdivrp
fwait
adcb
gs
clc
jp
add
xor
cmpsl
out
test
add
lea
sub
adc
repz
ss
push
jmp
push
fdivrs
jmp
fimuls
or
add
outsl
pop
xchg
mov
into
sti
jmp
sti
xor
and
sub
repnz
jl
idivl
mov
push
aad
jno
cltd
stc
js
test
and
call
bound
sti
xchg
xchg
movsb
inc
add
push
push
sti
cltd
sbb
scas
cltd
data16
jb
stos
lret
cmpsb
sbb
inc
jmp
add
add
push
sti
add
out
std
xchg
movsb
addl
movsl
push
or
ljmp
inc
fdivr
push
fs
or
inc
idiv
mov
cld
cmp
aaa
int3
add
das
adc
lods
xchg
and
mov
add
leave
mov
mov
add
cs
push
insb
jmp
dec
lea
stos
std
call
push
divl
mov
add
mov
stos
shlb
or
mov
std
jmp
mov
cli
insl
loope
or
dec
xor
push
cmp
push
out
jbe
test
xor
mov
lds
and
nop
xchg
aas
repnz
pop
test
xchg
xchg
js
data16
xchg
xchg
loop
sbb
ljmp
add
add
add
add
adc
outsl
les
aad
xor
popa
pop
xchg
inc
ret
imul
adcl
out
push
movsl
mov
test
inc
incl
mov
fsts
cli
shll
shrb
dec
mov
movb
lods
adc
loopne
adc
clc
nop
mov
cmp
mov
call
cli
add
add
in
cwtl
xchg
fsub
js
dec
data16
xor
jle
adc
xor
loopne
daa
mov
mov
push
hlt
imul
call
fwait
mov
add
pop
cmp
cli
out
pop
pop
shll
pop
roll
jns
in
in
int
pop
test
add
add
xor
adc
mov
sahf
xor
out
lock
scas
inc
das
mov
jbe
test
fbstp
add
add
imul
insb
push
cmp
xor
xor
jb
mov
or
cmpsb
cmp
adc
add
ss
bound
add
test
jl
test
add
add
cmp
dec
jg
mov
add
pop
xor
add
lea
stc
sub
add
dec
decl
inc
test
xlat
dec
mov
lods
or
pop
add
push
mov
testl
mov
jg
mov
sub
mov
je
fdivrs
jg
add
add
mov
imul
loop
jae
lods
roll
test
and
movsl
loop
inc
xchg
push
cwtl
incl
loopne
stos
xchg
push
mov
push
add
inc
sbb
mov
mov
xor
cmpsl
shll
push
xor
push
jbe
push
sbb
cmp
xchg
jbe
cli
mov
add
xchg
jg
adc
jge
add
xchg
mov
push
dec
sbb
test
pusha
loop
insb
inc
mov
cmpsl
negl
mov
pusha
repnz
fdivr
add
adcl
jbe
sub
imul
rol
fisubrs
xor
shlb
dec
cmp
xor
mov
fcoms
popf
sbb
xor
jnp
dec
push
idiv
dec
pop
lea
fidivrl
fwait
jle
jmp
xor
fyl2x
ljmp
adc
push
dec
sub
mov
mov
mov
cmc
push
mov
rcll
mov
cmp
add
loopw
bound
in
sbb
dec
push
jo
gs
inc
sti
cmpsb
mov
cld
cli
cmp
mov
aaa
pop
loope
jb
dec
push
add
dec
sti
mov
enter
in
push
loope
push
add
les
pop
lahf
add
mov
xchg
sbb
jmp
stos
xchg
incb
add
aam
pop
test
xor
mov
inc
orb
sbb
push
add
xchg
add
inc
xorb
push
movsb
and
outsl
push
pop
lock
in
lret
add
dec
push
in
leave
jl
in
leave
out
push
icebp
sub
call
in
sbb
orb
pop
xchg
scas
idiv
xchg
sbb
push
jne
inc
repnz
add
add
add
add
repz
push
mov
lock
adc
xchg
mov
sti
movsl
addr16
aas
and
inc
lcall
sti
aad
rolb
loop
mov
shl
stos
add
je
into
fsub
outsl
sbb
add
pop
and
clc
and
adc
imul
cli
scas
cmpsl
mov
mov
adc
add
addr16
lahf
call
stos
and
pop
or
sub
inc
jp
test
loope
les
cmc
fs
gs
jmp
xchg
test
inc
mov
jo
popf
ret
in
mov
xchg
jecxz
imul
ds
mov
jl
mov
sbbl
add
mov
adc
nop
lahf
pusha
ss
and
mov
ret
flds
and
inc
sti
outsb
cli
je
lods
insl
inc
adc
push
ljmp
ror
mov
std
pusha
dec
sti
xchg
cmp
outsl
je
sbbb
cmpsl
add
push
fdivp
bound
popf
je
loope
inc
sbb
add
les
movsl
sub
pop
int
inc
xchg
xchg
clc
cli
push
mov
add
push
pop
sti
cmp
loopne
mull
xchg
addr16
movsl
push
dec
sti
push
and
adc
pop
cltd
add
fsub
push
lock
push
ret
out
and
out
xor
out
xorb
xor
testl
add
add
cli
mov
in
cmp
mov
mov
dec
lea
dec
lea
jne
decl
sbb
jl
rorb
aam
add
test
mov
push
xor
mov
mov
roll
xor
push
loop
adcl
ds
lcall
addb
add
nop
mov
or
std
jmp
jge
pop
test
rcrb
repz
pop
mov
adc
mov
movsl
pop
repnz
addr16
sub
cli
mov
push
jmp
sub
mull
insb
sbbl
lahf
imul
pop
cmpsb
into
dec
cmp
xor
mov
add
and
mov
lahf
inc
mov
pop
les
jle
cld
xchg
lcall
leave
jmp
push
mov
add
stos
sub
mov
mov
mov
ja
xor
scas
fimull
jg
call
jmp
mov
xlat
cmp
add
xchg
mov
fcmovb
xor
gs
mov
jl
fsubp
dec
cmp
push
sahf
movsb
dec
push
sub
cli
xchg
adc
or
jns
jp
outsb
je
jne
jns
pop
pop
fs
repnz
jecxz
xlat
cmp
test
xor
shll
xlat
inc
dec
xchg
add
push
out
idivl
add
add
push
bound
dec
sti
and
imul
add
push
out
idivl
aaa
stos
ret
out
sti
add
mov
incl
mov
loopne
aam
mov
jae
dec
mov
aad
cld
test
add
xor
ret
jg
jae
test
repz
cmp
xor
mov
add
add
aad
cmpsb
add
arpl
push
add
add
andl
idivb
in
cli
shlb
xor
push
je
rclb
mov
loop
jl
popa
cltd
sub
and
aam
pop
jmp
pop
lcall
iret
mov
jge
adc
add
loop
jg
inc
and
aas
call
mov
aaa
ret
aad
cmpsl
add
push
cmp
arpl
gs
sar
jmp
out
add
mov
push
outsl
aad
cli
xchg
xor
dec
pop
lea
pop
cmp
adc
pop
sbb
adc
sub
adc
insl
inc
mov
push
jl
jb
add
std
shrl
add
mov
imul
xchg
inc
xor
les
je
xor
sub
ret
adc
in
icebp
push
jmp
jmp
rcrl
pusha
mov
clc
cmpsb
add
mov
mov
cmp
pop
lret
sbb
std
sub
cmp
or
inc
add
jbe
inc
lcall
add
add
add
adc
add
loop
push
cli
scas
in
jne
xor
cmp
fisubs
imul
jmp
loope
das
xchg
or
ret
cmpl
inc
mov
cmpl
dec
sti
testb
mov
call
push
inc
mov
push
add
loope
dec
insb
mov
add
cwtl
lcall
mov
sti
hlt
dec
das
inc
jmp
sbb
add
jnp
dec
lea
push
lea
aam
dec
mov
psadbw
inc
loopne
sub
push
xchg
mov
addr16
mov
mov
mov
add
lods
inc
loopne
sub
push
push
mov
addr16
mov
push
insb
arpl
test
add
cmp
test
xor
cmpl
add
mov
sub
arpl
lret
adc
push
cld
arpl
test
sub
mov
mov
fcmovu
lret
fwait
iret
cli
adc
shl
js
loop
mov
ret
mov
aad
push
fmull
dec
clc
movl
movsl
xchg
inc
pop
or
add
pop
xchg
jmp
rcl
imul
mov
dec
adcl
fimull
jmp
repz
arpl
sbb
loope
lock
jge
xchg
inc
in
aas
sbb
aas
call
pop
xor
out
cmp
gs
cltd
lods
movsb
jnp
sbb
mov
orl
jp
pop
jns
mov
lock
add
out
add
push
lret
ja
cmp
adc
xor
outsl
pop
mov
inc
mov
xchg
and
inc
jp
add
leave
in
dec
movsl
jle
cmp
lods
outsl
pop
hlt
dec
adc
imul
push
dec
iret
dec
ja
add
mov
cmp
add
xchg
cmp
sub
out
jb
pop
xchg
add
add
add
adc
or
arpl
sti
push
cmc
mov
std
push
out
pop
bound
cmp
push
loopne
cmp
mov
lds
cli
sbb
mov
leave
pop
sub
ss
or
xchg
filds
bound
inc
push
adc
in
cmp
cmp
outsb
repnz
sti
cld
xchg
sub
lods
ficoml
add
add
out
cmp
lret
push
dec
imul
jo
jcxz
inc
add
mov
hlt
cmpsb
clc
mov
test
movsb
mov
bound
inc
lret
pop
jecxz
xchg
add
push
lea
cwtl
add
sarb
into
fidivl
notb
mov
add
or
push
push
je
sbb
add
add
add
add
test
or
add
mov
test
vaddss
pushf
add
test
clc
push
sub
add
dec
ljmp
arpl
sti
into
adc
add
ljmp
arpl
xor
iret
cli
ror
inc
or
add
loop
mov
inc
pop
stc
addb
out
das
push
push
lods
mov
cmp
jnp
pop
mov
or
jmp
mov
les
sti
std
mov
gs
dec
dec
pop
and
xchg
sbb
out
xor
ffree
orb
pop
jle
cmp
cs
lods
pop
sub
je
shll
and
cmc
andb
imul
addl
add
lds
inc
idiv
arpl
cmp
jae
lods
mov
addr16
aam
dec
mov
jae
jno
adc
lock
pop
cmp
stos
jae
daa
data16
mov
jecxz
or
sbb
or
mov
cmp
mov
hlt
js
sub
mov
xchg
inc
mov
dec
dec
sub
scas
xor
cltd
xor
pcmpgtb
add
es
xor
aaa
sti
es
ss
icebp
or
push
push
scas
xor
jmp
cltd
push
repnz
icebp
xor
mov
cld
add
sar
rol
sti
cltd
add
mov
sub
mull
nop
xor
testb
mov
add
mov
cld
lret
pop
dec
push
data16
push
cmp
mov
cwtl
mov
inc
add
fimull
hlt
and
lea
push
outsl
mov
xor
jmp
clc
xor
add
inc
xchg
add
not
adc
mov
cmpl
dec
lea
mov
call
in
jae
cld
std
enter
add
idivl
add
sub
loop
ret
dec
out
sub
in
mov
xchg
xlat
add
fldl
cmp
mov
roll
inc
and
xor
inc
pop
mov
daa
push
rcrl
or
xchg
pop
dec
sub
repnz
sub
out
rolb
add
mov
push
hlt
jnp
jmp
add
int
icebp
mov
popa
push
cltd
loop
jl
ljmp
lea
rorb
cmpsl
test
mov
cmp
or
add
bnd
pop
fisubs
jp
mov
sti
fstp
pop
pop
push
dec
popa
cmpb
mov
xchg
test
add
mov
adc
sbb
jo
jno
xchg
add
xchg
jmp
not
xor
int
loop
jmp
outsl
pop
dec
push
add
xor
lret
add
xor
add
lret
out
je
ret
sub
add
xchg
leave
cmp
add
bound
add
push
cmp
jmp
adc
adc
sbb
mov
add
add
add
lods
add
add
sub
shll
mov
jb
jmp
lds
sub
dec
call
fidivs
add
adc
in
das
add
into
in
and
fidivrl
add
loope
ja
sbb
cmp
xlat
cwtl
or
bound
cmp
lret
cwtl
sti
xor
add
add
aam
cwtl
sti
xor
jbe
pop
pop
repz
cwtl
lret
xor
fnstsw
or
add
xor
and
add
dec
ret
jae
xchg
dec
push
les
cld
adc
xor
add
mov
gs
jnp
notb
shrb
and
add
jmp
dec
decl
add
add
add
loop
xchg
dec
pushl
sub
cmc
rorb
xchg
adc
rorb
add
and
out
mov
ja
loop
iret
push
fnsave
sub
jp
cli
out
aad
inc
loop
inc
je
iret
iret
and
mov
insb
sti
addr16
or
je
movsl
out
mov
add
and
imul
add
add
add
and
pop
or
cli
and
mov
sarl
pop
xor
andb
insb
inc
mov
fldt
cmp
insl
sbb
or
or
inc
ret
js
testb
jmp
dec
add
add
lret
insl
mov
aad
data16
add
outsl
in
aaa
cmpsb
inc
addb
mov
dec
outsl
in
adc
and
lock
out
outsb
mov
outsl
push
loope
fs
mov
xchg
jmp
loope
push
je
bound
and
std
scas
jns
call
repnz
push
xor
jb
adc
add
sti
sbb
push
outsb
repz
popa
xchg
movsb
test
ss
mov
cmp
pop
cmp
sbb
jmp
mov
xor
movsb
adc
sub
add
dec
mov
hlt
mov
idiv
sti
pop
dec
call
and
adc
sub
rcl
dec
push
add
add
mov
clc
jmp
lret
sub
add
sub
mov
imul
in
sbb
incl
jo
pop
aas
and
lret
lret
xor
push
cld
loop
and
jne
xor
pop
pop
ret
mov
mov
add
out
gs
dec
add
push
dec
imul
add
add
add
add
pushf
rorl
mov
data16
data16
inc
popa
or
das
and
sub
rcrb
add
adc
stc
or
test
aas
sti
aas
test
fidivrl
push
or
mov
adc
cli
lds
mov
das
mov
mov
aas
pop
stos
pop
lret
xchg
pop
and
add
sub
je
popf
call
add
push
xor
jl
arpl
jnp
sub
rcrl
das
pop
clc
outsb
test
fcmovnb
xchg
add
stc
in
pop
jge
fucom
sbb
stc
sbb
adc
dec
cmp
into
pop
sbb
push
pop
xor
add
inc
sub
cwtl
out
fsubrl
paddb
fs
push
pop
sub
dec
add
add
sub
jg
xor
add
adc
push
and
add
mov
mov
add
movsb
sbb
dec
add
cmp
push
cmp
jmp
mov
ds
mov
popa
add
loope
cli
call
xchg
xor
call
mov
cli
call
add
add
add
add
xor
gs
call
fidivs
cld
or
xor
pop
push
xor
insb
mov
mov
inc
inc
decl
mov
jnp
adc
jnp
lea
faddl
out
xor
jmp
rcrb
adc
add
in
scas
mov
decl
inc
les
add
jmp
cmc
mov
xor
add
mov
in
xchg
jne
jbe
into
push
mov
inc
inc
add
je
and
in
dec
pushf
dec
push
in
xchg
adc
test
sbb
jmp
or
mov
sahf
int
pop
jb
dec
sub
fsin
test
push
push
clc
ja
bound
add
add
mov
pop
dec
mov
add
and
sti
pop
push
lret
or
test
out
xchg
sti
popa
ficoms
test
insb
push
xchg
repnz
jge
sarb
outsb
push
fs
out
dec
lea
sbb
xchg
out
or
arpl
lds
jno
mov
movsl
loope
das
sbb
add
add
inc
lds
mov
inc
fidivl
pushf
js
scas
inc
insb
arpl
add
xor
rol
cmp
jg
dec
dec
shr
fs
mov
lock
je
cld
mov
dec
add
movsl
loope
cmp
pop
lock
cmp
pop
or
loopne
enter
inc
fidivs
xor
mov
neg
xor
shlb
orb
add
add
sbb
aam
adc
out
cmc
sub
pop
pop
inc
es
inc
inc
mov
cwtl
orl
lds
call
scas
orb
xor
sti
inc
loopne
add
xorb
test
test
pop
sub
into
addl
add
add
push
pop
imul
cmpsb
addl
testb
lods
or
inc
idivl
into
mov
test
or
add
pop
mov
mov
mov
sbb
idivl
and
mov
mov
je
add
or
pop
mov
imul
mov
dec
mov
and
dec
sub
sti
cmp
in
xor
add
and
sub
mov
imul
push
loop
mov
fstpl
mov
push
out
cli
and
dec
outsl
dec
pop
push
addr16
cld
lods
xchg
sti
rcrl
mov
pusha
sti
lea
aas
push
xor
popl
add
jp
out
or
ret
add
loop
pop
sti
dec
pusha
or
dec
iret
cmp
mov
pushf
xchg
push
sub
sbb
decl
jl
add
pushf
rol
dec
mov
mov
loop
mov
sbb
cmp
jmp
and
jmp
rol
daa
pop
mov
add
mov
lods
pusha
pop
test
orb
inc
test
lea
sub
sbb
imul
adc
sbb
jmp
add
sbb
cmp
decb
cmp
fisubl
xchg
dec
pop
jge
outsl
xchg
adc
mov
push
xor
jmp
loope
xchg
add
fisubrs
das
test
lods
cmp
and
call
sbb
pop
jmp
add
daa
sti
jmp
dec
mov
or
fs
mov
aad
sti
insl
mov
xor
fiaddl
aam
fwait
or
pushf
jmp
fs
fiadds
add
mov
add
loope
xor
adc
add
pop
add
inc
mov
mov
sarl
inc
ss
lret
lea
pop
cwtl
add
xchg
add
loope
push
inc
icebp
push
cmp
sub
adc
push
mov
mov
and
mov
and
mov
and
cltd
dec
sbb
lods
lea
jnp
push
push
add
inc
xchg
in
mov
and
dec
mov
add
testb
xor
loop
ljmp
sub
out
add
loop
ret
and
mov
and
pop
addr16
push
pop
decl
sbb
mov
xchg
shll
bound
loop
addr16
sbb
mov
and
add
add
pushf
shll
into
mov
add
sbb
push
sbb
call
push
into
and
pop
adc
pop
or
outsl
xchg
and
insb
xor
add
xor
pop
xchg
dec
cmc
mov
jnp
testl
icebp
loope
cmp
jmp
jnp
xor
mov
ds
mov
add
enter
add
push
and
mov
stos
jbe
loop
insb
mov
enter
xorb
push
dec
mov
sub
inc
test
xlat
push
lods
les
xor
mov
and
daa
mov
cmp
add
push
out
dec
adc
adc
or
dec
push
lea
add
add
or
add
shll
rcll
and
jmp
jno
xchg
imul
lods
mov
icebp
push
stos
leave
inc
cli
cmpsl
cli
dec
gs
jae
outsl
add
mov
sbb
and
sbb
fs
pushf
and
mov
test
pop
add
add
dec
jne
sub
push
sub
js
cmp
pop
mov
jecxz
in
push
add
mov
subl
fistl
mov
out
repnz
stos
test
addb
mov
mov
sub
mov
call
jge
add
mov
mov
fmull
mov
add
add
sub
add
xchg
in
insb
jnp
jnp
cld
add
loop
into
and
push
push
imul
aas
loop
shl
pushf
cmpb
push
push
or
push
sti
or
jg
jne
scas
outsl
add
pop
addr16
pop
incl
clc
or
lcall
or
ret
and
loop
mov
fistl
add
add
pop
sti
movsl
fidivl
call
icebp
leave
incb
mov
out
or
gs
popl
xchg
pop
dec
or
add
stos
xchg
xor
aas
sti
jge
rcl
stos
imul
call
add
xor
loopne
and
insl
ficompl
cmp
or
push
pop
stc
jg
mov
add
add
mov
pop
arpl
mov
and
xchg
push
add
xor
sbbl
clc
loopne
test
out
loop
jmp
adc
rol
pop
xorl
scas
call
mov
adcb
movsl
or
and
dec
xor
call
out
add
and
sti
out
add
mov
call
xor
jmp
fwait
sbb
std
insb
sbb
gs
sbb
jmp
jbe
call
loope
xchg
fs
and
jo
leave
sbb
nop
pop
loope
add
test
xor
bound
adc
stos
push
add
sub
mov
push
test
xor
lea
pop
mov
add
add
add
add
add
jecxz
lea
cmp
pop
lea
sub
rcrb
xor
xchg
add
xor
je
dec
call
mov
push
adc
mov
and
xor
lcall
incl
push
or
sub
dec
mov
dec
decl
mov
mov
and
mov
loop
push
mov
xor
out
mov
and
pop
mov
xchg
xchg
loop
jmp
in
movsb
add
imul
mov
mov
adc
scas
cli
push
addl
mov
xchg
shlb
pushl
fdivr
or
xlat
push
andl
cmp
cmp
sti
test
outsl
pop
and
xor
jae
add
add
or
test
mulb
call
pop
mov
bound
nop
pop
sub
pop
loop
add
mov
add
xor
xor
loop
mov
movsl
fisttpll
fs
shlb
mull
daa
fildl
loop
insb
pop
cli
xor
arpl
jmp
rolb
add
cmp
add
xor
pop
movsl
or
and
jmp
add
sbb
push
ss
loope
and
insb
rolb
add
les
pushf
les
adc
movsl
or
dec
and
or
sub
push
je
push
or
lods
pop
sti
xchg
in
inc
call
push
adc
adc
add
inc
je
jb
adc
jne
out
je
in
pop
sub
push
xor
icebp
pop
test
ret
ficomps
cli
cmpsb
cs
inc
int
mov
cmp
orb
xor
push
pop
jmp
push
mov
mov
in
cli
xchg
cmp
jnp
dec
push
push
jmp
mov
add
add
xchg
addl
test
inc
hlt
cmp
add
dec
jbe
push
add
mov
cmp
lock
add
or
adc
lret
xor
incl
lea
std
ljmp
mov
xor
out
cli
test
xlat
mov
in
xor
fs
push
fldl
addr16
lea
push
sti
add
add
mov
jle
push
aad
lret
add
jb
mov
testl
scas
insl
add
pop
push
adc
dec
fincstp
dec
mov
mov
and
jns
arpl
incl
loop
xlat
cli
loop
call
mov
sbb
cwtl
push
sti
pop
mov
add
ljmp
in
fsts
shlb
xchg
add
daa
enter
xor
mov
leave
sbb
xor
fidivs
les
stos
rolb
int3
jmp
xor
lods
dec
test
out
loop
mov
std
and
add
mov
push
scas
aam
pop
pop
aam
out
jmp
jl
or
dec
jmp
xor
sbb
push
push
call
jge
add
loop
je
add
ficoml
shr
add
or
loop
je
pop
mov
movsl
pop
repz
outsb
shlb
dec
cmp
ds
mov
movsl
je
pop
sar
call
out
hlt
jne
popf
jmp
add
add
mov
fidivs
add
lods
call
mov
add
mov
add
loope
sbbb
xor
pusha
and
xor
jo
pop
add
pusha
and
movsl
inc
in
scas
inc
aad
das
dec
adc
xor
add
adc
test
xor
push
or
dec
fs
lea
cld
jmp
pop
push
fucom
sbb
mov
inc
pop
shl
jnp
dec
lea
add
mov
push
dec
cld
jmp
addl
xor
pushl
aad
cmp
xor
xor
int
dec
xor
inc
xchg
loope
test
idiv
jnp
inc
cld
jecxz
pop
add
xchg
inc
clc
js
divl
push
mov
cmpsl
mov
pop
rorb
fnsave
ja
out
and
pop
jl
lret
sti
add
add
subl
pop
push
mov
loop
jbe
sahf
mov
xlat
xor
add
cld
test
dec
imul
sti
iret
fucomi
aas
loop
inc
jne
mov
leave
xorl
dec
arpl
pop
push
jmp
dec
mov
xchg
mov
xchg
push
dec
test
xor
jl
insb
cwtl
xchg
add
xor
fadds
test
sarl
sbb
mov
mov
repz
icebp
or
adc
testl
adc
mov
subb
mov
adc
pop
imul
sub
mov
test
xchg
adc
dec
cmp
add
je
ret
and
xchg
add
loop
jle
lahf
pop
sti
out
adc
movsl
jl
sti
adc
jno
push
fcoml
xor
jmp
loope
dec
lea
sbb
icebp
push
sahf
fcoml
xchg
mov
popa
add
call
dec
push
adc
sub
xchg
push
adcl
movsb
mov
add
add
xor
ss
out
xor
sti
insl
sahf
pushf
jl
mov
xchg
mov
loope
sti
add
loopne
cmp
add
mov
scas
bnd
fs
jle
cli
sbb
jecxz
outsb
stos
add
pushf
gs
mov
xchg
dec
or
sbb
lea
cmp
decl
aam
xor
loop
addb
add
sub
jne
js
add
sahf
push
push
mov
inc
lret
jecxz
andnps
add
cmp
loopne
jl
pop
push
pop
mov
in
loope
sub
pop
repnz
add
loop
ja
arpl
and
mov
ret
mov
adc
pusha
int3
mull
or
js
inc
xor
fdivr
or
add
add
add
add
or
push
inc
or
add
loop
dec
add
pop
jl
ret
add
pop
jl
mov
pop
jl
scas
je
lock
lcall
pop
jg
pop
pop
add
loop
pop
sbb
decl
xor
add
bound
mov
or
adc
jnp
add
add
call
and
fdivrs
loop
shll
jl
add
aas
cld
sbb
arpl
adc
dec
cs
dec
xlat
fs
ret
movsl
mov
cli
data16
add
arpl
mov
mov
imul
pop
mov
outsb
inc
mov
cmp
ret
push
pop
jbe
mov
add
loope
lea
add
add
add
int
lea
sti
push
jno
inc
adc
loope
inc
sbb
xchg
sti
call
arpl
call
xor
test
lcall
shl
xchg
add
dec
jbe
push
or
insl
xorb
jmp
cmp
add
es
pop
adc
mov
jne
or
bound
call
popf
psubq
pop
jg
sbb
jns
ror
lret
pop
push
call
mov
je
aam
push
lea
les
or
cmp
jns
jb
mov
incl
add
in
adc
jecxz
mov
jns
incl
insl
faddl
push
cmpl
jne
xor
jne
add
imul
call
or
test
or
fsubrp
ret
out
decl
jb
add
loop
loop
mov
adc
jno
pop
test
test
dec
sti
mov
lret
lds
cmpsl
dec
sti
add
pop
dec
adc
pop
pop
clc
cmpl
dec
sti
adc
mov
mov
in
ja
add
add
out
jne
out
xchg
lret
xchg
fcmovnb
loop
pushl
lret
sti
lods
mov
cli
das
mov
xchg
imul
push
loop
sahf
inc
test
xor
pop
js
or
test
loop
es
sbb
pusha
dec
scas
inc
jo
or
push
scas
data16
les
xor
js
add
mov
sbb
sbb
dec
add
xor
std
in
test
jns
push
sub
adc
loop
stos
jl
push
or
mov
xchg
js
push
dec
xchg
daa
add
incl
mov
jmp
inc
jnp
add
loope
callw
and
ljmp
dec
add
add
call
sub
lea
and
push
push
add
je
leave
pusha
or
out
lea
call
loope
data16
sahf
inc
mov
cld
sbb
inc
jmp
dec
lea
pop
call
out
lea
out
add
adc
and
add
add
cmpsb
add
call
lea
xor
add
bound
jnp
je
out
jg
dec
das
add
xchg
and
lds
cli
xor
mov
mov
ss
or
jo
sti
xorl
enter
jne
mov
xlat
add
pop
push
and
add
add
mov
inc
lret
push
lret
sti
xchg
jne
mov
es
out
push
cld
fimull
push
and
test
xchg
xchg
movl
sbb
jecxz
cmp
xor
or
std
jmp
cs
jmp
xchg
mov
inc
push
add
inc
cld
jle
push
push
inc
adc
inc
xchg
add
movb
sti
imul
xchg
lock
adc
aad
sarb
sbb
sti
je
mov
test
inc
adc
pop
jb
call
test
nop
es
loop
jle
mov
adc
loop
mov
mov
out
lods
out
das
mov
arpl
cmp
jmp
enter
add
xor
shll
adc
push
loope
lret
scas
addr16
and
cmc
outsb
xor
loop
push
faddl
add
push
arpl
in
sub
sub
sbb
jp
test
push
jge
sbb
loope
sti
std
test
xchg
jge
sti
std
test
xchg
add
add
add
add
adc
loope
push
inc
push
cli
dec
pop
in
adc
push
jb
xor
xchg
sbb
mov
jne
cli
cmpsl
fisttpll
inc
int
scas
inc
lds
aas
inc
int
cmp
mov
push
and
movsb
mov
and
push
test
and
loop
mov
pop
aad
add
push
pop
ret
add
mov
inc
mov
add
mov
enter
add
cmp
loope
mov
lock
dec
dec
push
or
loop
dec
xor
jle
adc
cmp
mov
decl
adc
cmp
sub
xchg
push
push
insl
jo
mov
cmp
add
jne
lods
ljmp
add
add
add
add
jo
cmp
jecxz
shl
push
xchg
aas
std
mov
aas
inc
popa
iret
add
adc
jge
xor
loop
ja
loop
jmp
xor
aas
sti
mov
inc
jne
pusha
or
sub
xchg
sub
loopne
decl
sahf
lods
pop
icebp
and
cli
xlat
das
push
inc
loop
inc
or
add
mov
or
loop
push
sti
xlat
imul
push
adc
mov
xor
jecxz
jmp
add
lds
enter
pop
imul
imul
ja
mov
add
xor
nop
pop
roll
xor
sub
jnp
jl
xor
add
push
jg
add
lcall
test
xor
enter
xor
arpl
jmp
test
stos
add
call
sbb
stos
mov
jmp
mov
inc
shll
or
sbb
lock
xor
jmp
in
insl
lock
add
mov
inc
pop
mov
test
add
add
or
sbb
cld
xchg
pop
addr16
data16
clc
push
pop
or
xor
jmp
aad
add
pop
xchg
lahf
jb
mov
xor
pop
push
bound
or
xchg
pop
add
jo
cld
jle
aam
test
xor
add
outsl
pop
xchg
lock
push
mov
into
push
outsb
stos
aas
std
mov
jno
aas
std
sub
mov
add
testb
enter
mov
cwtl
adc
sub
sar
mov
fmull
jmp
inc
cld
push
jns
add
das
push
cli
inc
idiv
dec
das
outsb
add
sbb
sub
sbb
dec
das
dec
pushl
cmpl
jne
mov
divl
mov
add
sbb
dec
cli
ss
add
add
addr16
mov
out
nop
cmpsl
stc
in
aas
je
loop
jmp
mov
mov
sub
sti
adc
inc
ret
pop
rolb
add
pop
cmp
cmp
mov
test
cmp
jge
cmp
iret
sbb
loop
mov
jp
test
pop
push
fucomi
int3
add
add
pop
ja
loop
jmp
add
add
sti
cmp
cmp
cmp
adc
add
fdivrl
mov
out
mov
das
jecxz
jmp
add
mov
popa
leave
adc
loop
inc
lea
stos
nop
mov
pop
imul
in
add
sub
loop
jo
imul
or
xor
jmp
jl
adc
add
add
add
pop
add
mov
jno
inc
outsl
loop
ret
mov
xor
mov
scas
cmp
jmp
jg
mov
and
add
xchg
pop
add
inc
mov
mov
and
mov
bound
aam
cmp
add
inc
addr16
jno
jle
jmp
add
add
add
add
or
mov
mov
bound
int3
mov
shlb
add
pop
jbe
xor
xor
inc
cltd
fyl2x
pushf
jmp
iret
mov
add
lock
mov
sbb
stos
in
add
rolb
out
sti
xor
dec
jle
mov
lock
andb
add
add
stos
rolb
mov
jl
xchg
xor
jbe
ficomps
add
sarb
xor
jnp
xchg
jl
push
mov
xor
data16
jmp
out
test
mov
mov
jnp
or
popa
pop
aam
mov
add
add
rorl
dec
add
mov
inc
adc
inc
jge
or
or
popa
imul
push
cmp
inc
xchg
mov
add
insl
xchg
mov
adc
pop
mov
rorl
push
and
cld
nop
mov
pushl
xchg
inc
jne
loop
mov
jnp
movsl
call
shlb
add
xchg
jo
dec
mov
lret
push
jno
mov
je
jnp
aaa
jmp
xor
loop
jo
icebp
mov
orb
xor
popf
pop
jae
jl
push
jmp
cmp
aaa
add
xchg
pusha
shrl
or
mov
jmp
pop
jae
jnp
icebp
call
add
test
bound
xor
pop
jae
xchg
jae
call
mov
xchg
mov
xor
and
mov
push
jae
push
imul
fldcw
mov
movsb
repz
bound
and
inc
add
add
adc
dec
test
or
loope
mov
mov
bound
sbb
add
lods
inc
push
and
add
retw
mov
and
cli
aaa
add
xchg
jge
add
xor
jle
mov
and
add
call
call
dec
sub
add
or
mov
mov
mov
push
hlt
sub
and
fcoms
dec
test
das
pop
mov
add
mov
jge
xchg
sub
dec
mov
sub
or
inc
mov
or
jb
repz
mov
scas
add
add
or
inc
inc
or
popa
imul
mov
add
jl
mov
add
stos
test
jno
ret
popf
mov
cwtl
jbe
aad
jmp
push
into
mov
fdivr
incl
push
jp
repnz
sbb
loop
popf
mov
xor
iret
add
test
fidivl
xchg
jo
or
add
xor
mov
xor
popf
pop
je
jnp
add
add
cmpsl
mov
add
xchg
jo
sarl
mov
xor
popf
pop
je
jnp
inc
jmp
test
loop
pusha
mov
loop
dec
jge
mov
test
clc
call
mov
test
add
xor
stos
jge
jo
aas
ret
and
ret
aad
mov
xchg
mov
out
jae
jle
cwtl
or
mov
stos
xor
cmpsb
idiv
imul
stos
mov
cmc
xchg
into
mov
mov
fdivs
je
jae
pop
shl
popa
bound
testb
testl
push
lods
gs
shrl
add
xchg
mov
cwtl
cmp
cmpsl
jne
cs
xor
mov
leave
dec
flds
xorl
push
int3
mov
and
mov
cli
lock
mov
mov
push
and
bound
xchg
fistps
sub
ss
pop
jne
and
add
add
lods
jmp
stc
xor
push
cmp
jecxz
jmp
mov
sub
ja
call
aas
je
test
add
lods
sub
je
cli
jnp
ljmp
call
mov
add
test
int
sti
xor
jl
mov
jbe
xchg
repnz
or
jmp
xchg
add
dec
dec
jns
loop
add
test
add
or
cmp
popa
rorb
cwtl
or
jecxz
decl
or
out
mov
das
jne
mov
imul
test
xor
add
xchg
imul
add
test
fs
mov
pop
pop
sbb
mov
add
add
addr16
sbb
pop
jl
sbb
insb
jns
pop
test
mov
add
lret
loop
stos
das
pop
sub
arpl
xchg
pusha
cmp
pop
icebp
mov
fs
sbb
js
xor
add
pop
pop
jl
imul
jmp
jo
xor
je
adc
adc
push
add
add
call
loop
je
call
xlat
ret
xlat
je
cltd
mov
out
add
call
movsb
push
popf
xor
nop
push
out
add
or
jg
idiv
pusha
sbb
out
cmpsb
jae
jb
add
test
loope
loopne
sub
movsb
jl
xchg
add
cmp
jl
push
mov
insb
stc
mov
int3
adcl
enter
ja
hlt
cmp
jb
lods
idiv
dec
xor
jbe
lcall
sarl
idiv
mov
sarb
dec
call
add
mov
inc
hlt
mov
or
inc
jnp
xor
jne
add
add
es
int
test
push
das
testl
dec
jbe
loop
sub
xor
jne
and
out
mov
sub
sbb
sti
imul
jbe
ljmp
xor
sar
xor
int3
pop
xor
enter
call
jg
cmpsb
add
incl
add
mov
aad
ljmp
cli
out
xor
inc
loop
dec
or
xchg
dec
cli
sub
or
out
icebp
jmp
mov
shl
jmp
add
movsl
fwait
pop
sub
call
mov
repnz
xor
xor
jmp
sub
test
sub
and
test
imul
test
xor
cli
test
add
mov
add
xor
sub
lahf
loope
sub
repnz
testb
add
mov
jp
xor
cmpb
fsub
data16
aam
xchg
mov
cmp
pop
ljmp
and
mov
cmc
cli
add
out
add
pushf
cmc
je
bound
jmp
add
add
add
add
mov
jmp
fidivs
add
sub
into
lds
sti
cmp
or
pop
popf
call
enter
loop
mov
add
cmc
incl
incb
rorl
in
cli
push
mov
ljmp
cmc
out
pop
inc
idiv
mov
idiv
aam
pushl
add
add
adc
call
ret
xorb
xchg
in
xchg
outsl
inc
or
outsl
push
or
das
push
in
outsl
jo
inc
inc
push
shrb
imul
jo
orl
dec
xchg
pop
cmp
rolb
xchg
mov
cmp
idiv
out
dec
add
mov
jns
add
add
ss
mov
divl
loop
jl
ds
roll
aas
sahf
cmp
cwtl
scas
adc
cmc
jle
fsubr
inc
ljmp
sti
stc
jmp
ds
mov
xchg
and
adc
pop
insl
int
mov
stos
pop
push
je
push
jo
pop
pop
inc
je
pop
sub
pop
or
cmp
dec
sti
jle
add
jp
stos
add
cli
gs
inc
call
mov
test
loop
cld
push
movsl
lcall
scas
jbe
jo
push
push
cmp
jmp
out
add
sub
push
sub
cmp
jo
mov
es
jmp
and
inc
mov
mov
mov
add
add
mov
mov
jnp
mov
jle
mov
scas
incl
mov
adc
imul
fucom
and
mov
add
das
mov
pop
sub
jg
cmp
out
mov
fs
cmp
adc
mov
push
aaa
or
in
hlt
pop
dec
loope
adc
mov
add
add
add
cmp
jge
cwtl
cmp
and
jge
loopne
das
jb
mov
popa
adc
inc
cmpsb
test
aad
jge
call
out
jo
fs
sub
adc
cmp
jmp
repz
jecxz
jl
dec
push
adc
test
mov
push
lea
add
inc
sbb
inc
and
push
adc
adc
test
mov
divl
adc
adc
test
mov
notl
dec
test
je
je
push
add
insl
push
or
icebp
imul
jns
mov
mov
jmp
test
jl,pt
sbb
cmp
add
int
cmpsl
mov
gs
cwtl
jnp
fldenv
adc
data16
push
outsl
xchg
and
popf
cs
or
and
mov
sbb
les
dec
xchg
cmpsb
cwtl
cmovs
and
xor
push
mov
fisubrl
push
and
js
or
jns
xor
add
add
push
mov
data16
lsl
icebp
and
mov
scas
pop
in
repz
in
jmp
aam
jne
jg
rcrl
data16
scas
dec
fs
sbb
icebp
and
mov
mov
mov
sbb
adcl
ja
sbb
and
xor
xchg
rorb
add
add
xor
repnz
sbb
fnsave
jbe
jmp
int
ljmp
ret
jmp
add
cli
jae
and
push
jmp
vpmullw
push
mov
fs
fs
je
xor
je
push
add
in
loope
incb
loop
cli
push
adc
pop
test
sub
fs
add
add
add
pop
mov
mov
xchg
or
call
jb
mov
jne
jle
imul
push
push
test
in
mov
xlat
sarl
ja
cli
add
in
test
shlb
xor
push
add
out
adc
xor
call
iret
je
push
fs
out
adc
xor
sarb
sub
add
add
jae
add
jmp
xchg
loopne
push
clc
sub
adc
mov
call
mov
sub
add
fcomip
cli
mov
xor
dec
jmp
push
push
jmp
mov
pop
mov
add
fstps
decl
es
lahf
sbb
test
add
loop
incb
ljmp
rcrl
or
push
jb
add
fldenv
mov
fsin
push
xchg
stos
sbb
pop
negb
adc
lret
mov
sbb
jmp
cltd
incb
lods
inc
clc
ja
cltd
decb
fsub
adc
fidivrl
sti
mov
mov
cld
ret
add
add
lock
or
call
jmp
btc
sbb
jp
lcall
cmp
outsl
dec
xchg
mov
xchg
pop
push
mov
idivl
inc
test
mov
call
out
mov
jmp
mov
cmp
add
add
loop
stos
repz
mov
jmp
testb
add
push
inc
inc
jmp
push
pop
sarb
cmp
cmp
ret
frstor
cmp
mov
movsb
or
mov
dec
pop
mov
jno
or
sti
and
test
add
add
xor
fisubrs
xor
mov
mov
clc
cs
adc
test
xchg
ljmp
mov
inc
test
lret
xor
dec
repnz
out
jbe
fidivrl
sub
sub
call
mov
sbb
hlt
div
addl
sbb
out
dec
neg
inc
dec
add
add
int3
jns
xor
ljmp
ds
es
stc
outsb
push
inc
mov
xchg
mov
lock
loope
pop
mov
jl
mov
sbb
mov
mov
sub
sbb
data16
jne
shl
mov
sbb
loop
aas
push
loop
std
pop
or
add
cmp
cmpsb
ljmp
adc
fiaddl
jmp
int
decl
xchg
inc
out
bound
data16
cwtl
sti
and
fnstcw
push
pop
es
lahf
fucomp
mov
lea
in
outsb
xor
ljmp
jmp
inc
dec
inc
into
inc
add
add
lods
push
add
xor
enter
add
push
mov
and
cs
mov
out
loop
into
inc
pop
in
add
xor
data16
jmp
and
jmp
mull
sub
sub
loop
jmp
lods
loop
jmp
ficomps
mov
add
arpl
incl
xor
mov
scas
pushf
in
dec
loop
idivb
fs
mov
dec
das
sub
addr16
jp
add
pop
scas
imul
xor
bound
mov
xor
jo
dec
add
loope
cmpl
test
stos
jmp
xchg
adcb
xchg
out
jmp
add
loope
je
pusha
out
jmp
xor
out
jmp
xor
cmp
stc
add
notl
andb
add
push
mov
fisttpll
movsb
jl
push
outsb
loopne
mov
push
push
popa
into
cmc
jne
inc
adc
test
push
xorl
cli
push
jmp
decl
test
jp
add
add
add
add
add
ss
pop
pop
ss
mov
sub
loopne
xor
mov
dec
bound
mov
add
fmull
jne
loop
sub
xor
fwait
repnz
sti
adc
stc
aad
mov
mov
inc
aaa
loop
push
mov
adc
neg
incb
jecxz
decb
pop
in
jmp
dec
sbb
aam
push
add
leave
xor
imul
sbb
leave
lea
imul
cmp
lret
mov
xlat
sahf
loop
jae
movsb
pop
add
leave
mov
fbstp
mov
loop
aam
cli
jg
add
stos
stos
or
xchg
sbb
xchg
aad
in
inc
mov
add
add
cmp
leave
fistps
sbb
xor
nop
fimull
lods
test
jb
test
jmp
lods
mov
mov
add
cmp
jmp
push
and
jmp
xor
cmp
jle
jmp
xchg
xor
lods
xorb
jmp
add
add
xor
fisttpll
or
xor
jmp
loope
lret
ss
adc
and
ret
xor
mov
test
push
sub
sub
fs
mov
ret
cmp
pop
push
idiv
jnp
jle
cmp
add
out
or
cli
add
add
xor
test
cmp
call
mov
add
or
lods
cmp
jbe
or
ljmp
add
jbe
addl
xor
add
sub
mov
sbb
shlb
xor
jnp
pop
mov
or
data16
add
ljmp
mov
jl
xor
cmp
out
loop
adc
mov
adc
inc
xchg
call
push
sub
sub
inc
repnz
int
pop
add
bound
mov
outsb
clc
test
dec
leave
or
sub
leave
cmp
jg
rclb
daa
sar
jae
add
add
xchg
xor
sti
mov
test
pop
adc
add
or
add
and
jecxz
xor
hlt
outsb
in
mov
xor
add
fidivs
jmp
jg
cs
cmpb
loope
call
incl
add
jno
xchg
push
jecxz
and
push
test
adc
loope
call
ret
xor
lcall
test
adc
dec
lock
loope
call
hlt
icebp
xor
mov
jbe
mov
fdecstp
mov
lea
xlat
scas
jmp
cmpb
push
cli
jb
mov
addl
add
add
add
arpl
icebp
pusha
jne
jle
pop
pop
xor
icebp
jg
hlt
test
xor
jmp
out
shr
add
sbb
xor
in
popa
adc
mov
xor
mull
sub
out
out
mov
pop
andl
aad
inc
jmpw
adc
jb
add
adc
bound
lret
cmpsl
call
add
add
add
add
fwait
repnz
cs
jmp
je
clc
inc
adc
test
push
test
add
ds
jae
cmpsb
pop
cld
int3
lcall
mov
add
mov
sub
idiv
aam
testl
mov
mov
incl
add
mov
in
cli
test
sub
jmp
ret
fstpl
or
inc
xchg
mul
and
push
cmp
cmp
out
or
dec
leave
psubw
or
jp
out
out
mov
push
pop
sti
idiv
lds
ljmp
dec
xchg
jmp
loop
xchg
add
leave
out
pop
leave
pop
add
add
mov
dec
sub
leave
xchg
std
jecxz
cli
aaa
xor
jne
push
inc
call
popa
xor
pop
jmp
adc
add
xor
insb
fsubr
push
aam
and
sbb
dec
addl
inc
fsubr
adc
orl
adc
es
mov
add
add
dec
in
loop
ds
rep
loope
jno
xchg
mov
loop
in
add
aad
stos
pop
xor
xchg
pcmpgtw
add
xlat
or
daa
sub
xchg
movb
jmp
loope
sti
pop
movsl
inc
xchg
fidivl
repnz
cli
mov
loope
je
je
xor
pop
out
add
add
lock
test
inc
pop
mov
dec
push
jmp
xor
cld
in
adc
adc
jle
sub
hlt
in
stc
in
jmp
cmpb
rcll
mov
cmpsl
or
sub
mov
fisubrs
add
and
mov
mov
inc
mov
add
add
in
jp
inc
testl
add
dec
mov
incb
pop
rolb
push
mov
cmp
add
jnp
cli
mov
sub
dec
add
jb
ret
sub
pusha
sub
and
movsl
cs
dec
xor
fnsave
cwtl
pushf
inc
test
daa
iret
lahf
mov
in
cli
mov
decb
mov
push
or
incl
add
pop
dec
add
loop
sarl
xchg
in
adc
enter
cltd
mov
push
out
add
out
push
out
test
sub
cs
loop
jne
cmp
dec
js
or
in
or
lea
or
scas
cmp
or
mov
push
lea
das
and
pop
add
add
mov
int
lret
and
adc
aam
mov
pop
clc
ret
movsl
cmpsl
repz
jo
int3
bound
shlb
sub
pop
mov
adc
mov
sub
sub
or
jmp
pop
jo
pop
nop
pop
cs
add
movsl
mov
cld
rorl
icebp
hlt
lds
outsb
add
cmpsb
add
xor
in
mov
fs
fdivrl
subl
cmp
mov
pop
pop
shrb
out
xlat
push
mov
daa
ja
aam
lods
std
mov
das
add
push
jl
fcmovbe
jae
fidivs
add
add
sub
xor
lret
fnstcw
xlat
subl
adc
bound
add
loope
inc
aad
test
sub
stos
jg
loopne
add
cmp
fldl
prefetchnta
and
push
sbb
push
sbb
adc
mov
pushf
loop
aam
testl
pop
lret
xchg
mov
add
push
sbb
out
cli
mov
and
pop
ret
push
mov
pushf
xorl
and
push
mov
dec
ljmp
outsb
adc
or
push
jae
cmc
call
mov
in
sub
xchg
or
bound
cli
dec
les
add
add
dec
pop
push
lret
sti
mov
inc
pop
or
inc
adc
cltd
ja
fbstp
or
push
xchg
mov
in
imul
or
ss
out
stc
mov
jae
dec
pop
jp
dec
les
stc
cwtl
divb
in
call
sbb
cmp
test
pop
stos
pop
lods
test
lcall
jl
add
add
out
roll
addr16
adc
leave
adc
jle
mov
lock
jmp
out
adc
ljmp
mov
ljmp
pop
shr
mov
rcr
and
jbe
jl
std
pop
sar
icebp
xchg
fsubr
cli
xchg
repnz
sarb
mov
call
shl
push
push
xchg
cmp
sbb
sahf
es
xchg
sub
in
fcomip
hlt
lock
in
mov
xor
push
lret
shrl
bound
add
mov
jnp
jo
stos
xchg
sbb
push
push
or
or
leave
mov
lods
jb
pop
enter
add
je
test
cmp
ss
shr
jnp
pusha
test
rorl
xrelease
test
stos
ror
mov
pusha
addl
mov
test
or
cwtl
les
add
pop
add
add
pop
cs
cli
lcall
jnp
lds
add
add
mov
and
gs
jle
jp
add
jmp
add
or
fs
mov
gs
cmpl
mov
decl
aad
cld
rcrb
add
dec
cmp
orb
mov
sarl
push
loop
jmp
mov
mov
xchg
out
jne
inc
mov
or
sti
cmc
pop
pop
add
push
popa
sbb
xlat
jns
add
add
rcrl
jbe
or
xlat
inc
fiaddl
jmp
push
inc
out
push
push
fistps
pop
or
sbb
fstps
or
test
in
insb
push
gs
jge
call
jg
loop
incb
not
xor
popa
add
adc
cmpsl
xor
add
and
loopne
add
add
sub
xchg
pop
out
ror
lock
jl
fcompl
jnp
and
mov
loop
jmp
shll
pop
rol
stos
fistps
sbb
daa
frstor
xchg
jl
icebp
aad
test
inc
negl
mov
flds
loopne
lahf
xor
stc
add
add
addb
call
loope
jg
shlb
aaa
das
push
aas
mov
and
cli
and
mov
adc
inc
sub
push
jns
in
push
lret
aad
inc
pop
loopne
and
mov
pusha
sti
mov
mov
add
xchg
mov
sbb
add
sarl
sub
lock
xchg
dec
or
dec
aaa
jg
data16
pop
cld
xor
jmp
fidivs
bound
inc
scas
add
add
or
mov
clc
addl
add
scas
ss
add
push
add
das
jnp
clc
scas
jl
fadd
adcl
add
adc
divl
inc
iret
mov
mov
push
decl
add
divl
imul
repz
mov
dec
and
in
pop
mov
lret
xor
mov
mov
ss
ud0
jmp
xlat
cmp
jecxz
jle
cmp
mov
or
daa
popa
xor
in
push
sbb
ret
aad
scas
add
mov
add
jg
divl
incl
push
adc
ljmp
hlt
and
pop
in
inc
add
jno
mov
add
daa
and
inc
mov
mov
inc
xchg
out
mov
jg
aad
xchg
xor
shl
add
loop
inc
mov
rcr
repnz
jecxz
or
out
pop
lcall
add
and
popf
jns
add
insl
dec
test
sbb
jns
sahf
and
dec
ret
iret
jmp
pop
es
xlat
mov
cmp
and
sub
adc
mov
test
loope
and
rcrb
mov
or
gs
adc
call
sub
pop
sub
xchg
jmp
add
add
add
add
xor
sub
ret
xlat
repnz
mov
cmp
xchg
incl
bound
cli
scas
lcall
ljmp
or
cwtl
xor
aaa
nop
mov
pop
aad
mov
xor
adc
sbb
cmp
loope
add
xor
jmp
mov
push
stc
add
add
loopne
std
outsb
scas
inc
cmc
pop
and
add
push
mov
js
add
jns
cmp
xor
add
in
cld
mov
sbb
add
dec
cld
enter
test
fisubrs
cmp
cmp
test
add
andb
mov
jns
shrl
push
divl
das
adc
mov
add
test
cmpl
inc
adc
call
inc
xchg
fldt
sti
cld
das
pop
mov
xor
add
xor
testl
mov
mov
popf
pushl
int3
cli
xlat
sar
je
out
ret
cmc
dec
testl
cli
scas
xor
mov
es
decl
addr16
mov
jecxz
mov
pop
jmp
jg
je
mov
xchg
inc
push
in
repnz
xlat
clc
inc
add
jne
in
dec
add
cmp
or
in
in
adc
mov
call
inc
rcl
push
std
push
jo
push
pop
jmp
push
dec
pop
lret
add
repnz
mov
stc
sub
gs
loop
insl
mov
sti
les
and
xor
pop
inc
jns
lds
into
call
sub
fdivrs
fiadds
les
fsubrs
ljmp
ja
daa
mov
enter
cmp
mov
fidivs
mov
add
add
icebp
fcomip
call
pop
push
jne
ret
out
test
and
out
inc
cli
divb
add
outsl
ja
cmpsl
inc
sub
test
call
jle
ret
shrb
push
xchg
pop
inc
cmp
jmp
loope
or
inc
mov
cli
bound
xor
idiv
add
add
mov
push
jae
cmc
call
popa
or
shll
mov
inc
idiv
in
shrl
xor
or
popa
orb
jne
or
mov
nop
and
cmp
or
imul
loopne
iret
clc
xchg
imul
mov
mov
das
lea
add
add
pushl
dec
mov
les
cld
loop
inc
add
or
jmp
aas
std
sbb
fdivl
stc
popf
or
lock
xchg
and
scas
cli
test
jno
pop
rsqrtps
out
out
je
lret
dec
xor
dec
push
testl
mov
cmp
ss
addr16
loop
mov
jecxz
mov
loopne
fiadds
fstps
push
je
lahf
add
pushf
movl
cmp
xor
xchg
and
test
add
sub
mov
mov
call
ja
imul
pop
cmpsl
or
js
movsb
repz
shll
inc
mov
add
add
or
mov
sbb
jp
add
iret
rorb
and
add
sbb
fiaddl
pop
pop
leave
insl
loop
sbb
or
icebp
push
stc
cmp
cli
outsb
xor
jno
fdivr
fsubr
cmpsb
sub
jb
and
add
jae
add
jae
daa
cmp
sub
mov
in
adc
add
les
and
and
jmp
xchg
mov
push
div
and
je
mov
repnz
mov
jmp
fildll
mov
in
aam
mov
sti
push
sbb
or
mov
out
mov
shl
cs
mov
push
xlat
xlat
orl
add
mov
fs
xchg
sbb
adc
inc
or
sub
jno
mov
test
xor
jmp
inc
sub
dec
jns
fimull
xor
test
lret
jl
sub
add
mov
aaa
shl
sub
mov
mov
inc
adc
pop
lods
pop
mov
add
loop
xrelease
sub
lcall
jle
mov
jp
stc
jg
icebp
pop
test
popa
pop
or
sbb
loop
notl
push
mov
clc
aas
fistpll
stc
jg
jg
or
bound
addr16
add
loop
mov
loope
mov
fimuls
filds
jmp
inc
inc
hlt
pop
dec
jnp
inc
enter
add
imul
pushf
das
jmp
jmp
pop
push
or
leave
xor
fs
pop
push
out
test
jo
fs
in
or
je
js
mov
add
jae
call
outsl
sti
imull
std
pop
sub
jmp
ret
mov
jno
mov
add
jo
mov
and
stos
adc
add
popa
out
dec
mov
or
imul
sahf
sbb
jg
mov
pop
mov
adc
and
jle
loopne
cmp
pop
je
out
bound
adc
lds
popa
jmpw
sbb
adc
inc
adc
mov
cmc
add
add
cli
arpl
test
add
into
jne
out
bound
jl
xchg
adc
mov
mov
or
sbb
jmp
mov
xchg
into
add
push
fwait
add
xchg
xor
int
test
iret
adc
fsts
pop
sbb
das
bound
mov
cmpsl
mov
incl
add
jle
add
add
addl
enter
jp
mov
pop
enter
dec
sub
mov
pop
mov
jnp
mov
mov
xor
inc
xchg
xor
inc
loop
repz
notb
rcl
addl
and
fmull
loop
cmp
loopne
cmp
mov
mov
add
cli
dec
les
outsl
add
pop
sti
pop
xchg
mov
call
daa
sbb
aad
pop
aas
or
ss
add
popa
push
pushl
dec
inc
add
inc
cmpl
jp
add
dec
pop
adc
jg
xor
imul
pushf
jge
sbb
jns
not
aaa
inc
inc
adc
push
mov
dec
sbb
xor
hlt
data16
loope
icebp
and
add
outsb
cmp
cmp
push
icebp
xor
mov
divb
sub
mov
or
xor
loop
fisttpll
mov
fs
xor
mov
dec
mov
cmc
enter
dec
sub
shll
jmp
hlt
pop
push
cmp
mov
add
sbb
adc
fimull
jg
adc
rorb
mov
add
adc
xchg
xor
shlb
outsl
sbb
outsb
add
cmp
jne
pop
roll
push
mov
call
adc
outsb
sbb
sbb
sub
push
xor
pop
loope
add
dec
xor
shl
cmpb
sub
sub
sub
lcall
pop
sbb
xchg
aam
pop
loope
sub
cmp
push
add
pop
mov
decl
mov
add
pop
xor
push
xor
shlb
jnp
cmp
push
inc
mov
dec
cmp
xchg
ret
sub
add
add
dec
aaa
mov
loopne
ret
cmc
jmp
push
push
mov
push
test
xlat
es
test
bound
jnp
push
sbb
out
loop
jae
cmc
test
xor
jmp
aaa
inc
sbb
je
fldenv
or
mov
mul
addb
cs
test
iret
xor
lock
or
loopne
add
aaa
fdivp
xchg
call
pop
ljmp
sbb
ja
sahf
sarb
cli
in
xor
push
sti
test
cli
push
insb
push
cltd
add
and
or
pusha
jecxz
mov
sub
or
dec
mov
add
ret
incl
jnp
push
js
fstl
inc
dec
add
add
xor
pop
inc
scas
jno
pop
ljmp
sub
inc
jbe
fdivrs
jl
cld
and
fcompl
cli
sub
mov
icebp
sbb
and
int
in
aad
outsb
icebp
clc
mov
push
xchg
mov
xor
outsb
inc
push
jb
pop
ljmp
sub
and
pop
add
cmpsb
test
add
lret
lock
mov
imul
or
fdiv
test
loope
je
mov
sub
mov
loop
cmc
in
xor
jae
out
push
cld
cmp
mov
aam
add
sub
sub
in
sti
sahf
add
xor
or
add
add
jns
loope
xor
mov
aas
sub
data16
clc
lock
test
push
daa
test
outsb
ret
xchg
nop
cli
jnp
jle
mov
cmc
cmp
sarb
and
pop
sbb
cmc
call
mov
jp
ret
cmc
cmp
inc
lods
gs
adc
cmp
sub
jg
add
push
add
xor
das
jmp
cmp
ret
add
stc
mov
or
shll
jle
push
ret
cmc
adcl
test
shl
dec
enter
inc
or
mov
pop
ljmp
leave
fisttpl
or
cmp
jmp
sti
cld
and
push
add
decb
pop
mov
cli
add
add
sbb
loop
stc
orl
cli
div
and
loop
sbb
loop
cmp
mov
jmp
insb
aad
xlat
cld
std
mov
mov
push
xor
jmp
mov
in
cli
cmovne
loop
xorb
or
add
and
lods
mov
das
lret
adc
add
stos
xchg
mov
add
repnz
in
fdivrs
inc
in
fdivrp
fildll
add
fsubrs
stos
xchg
dec
fsubrp
sub
or
xor
test
pop
or
and
push
mov
fisubrl
jp
add
jp
add
shl
clc
mov
sub
ljmp
out
xor
bound
add
jmp
fs
sub
das
sbb
pop
dec
mov
test
cmp
sbb
fwait
mov
jmp
or
mov
jmp
adc
cmp
popf
shlb
or
push
sub
notb
jmp
xchg
mov
add
dec
mov
sahf
jns
inc
xchg
gs
hlt
push
xor
mov
ds
mov
pop
mov
lods
mov
add
incl
push
mov
add
lods
mov
int3
fwait
jne
inc
pushf
adc
xor
lock
fwait
sub
cmp
jbe
fsubl
sbb
dec
das
rorl
fwait
add
add
cmp
je
cmp
pop
aaa
fwait
inc
adc
lock
cwtl
js
subb
pushf
xor
in
das
call
jge
mov
or
or
loop
inc
cld
pop
push
adc
daa
jbe
jmp
lods
test
xchg
push
out
xchg
adc
xchg
outsb
cmpb
cltd
add
inc
popf
ljmp
add
sbb
test
jne
outsb
mov
out
jae
mov
cmp
xchg
mov
imul
inc
add
inc
jmp
jns
push
and
jo
out
mov
push
jmp
push
test
mov
xchg
jno
cmp
mov
add
push
stc
imul
test
add
add
add
add
cmc
outsl
aaa
mov
mov
jmp
fwait
lock
ret
pop
cld
adc
cmpsb
test
aad
mov
jl
or
mov
fwait
add
jns
movsb
xchg
pop
ss
jo
add
xor
jmp
jge
imulb
outsb
cld
sti
loopne
inc
jp
pop
cmc
not
add
add
stos
cli
push
popf
lcall
inc
or
inc
add
cs
and
mov
mov
aad
ja
sub
shl
gs
test
in
notb
dec
cwtl
jno
dec
stos
xchg
push
lock
mov
or
sub
inc
sub
inc
add
add
add
addb
les
shl
stos
mov
xbegin
movsl
dec
xor
mov
xor
jnp
aaa
xor
mov
es
mov
or
cld
add
add
push
sub
dec
sub
sti
jmp
scas
arpl
dec
pop
rolb
out
inc
lock
lea
add
fisubrl
in
syscall
sub
pop
mov
loop
cmp
or
loope
std
bound
cli
mov
jecxz
push
hlt
in
sbb
jne
adc
rorb
mov
jge
dec
mov
idiv
std
cs
and
pop
negb
jne
add
add
sub
mov
loop
cmpsl
lods
jne
push
xorb
int3
dec
es
in
cmp
cltd
icebp
test
mov
push
sub
hlt
sub
loop
js
pusha
loop
jmp
and
inc
jmp
inc
adc
ds
mov
jo
gs
xor
mov
add
add
mov
icebp
je
test
in
sub
add
mov
xlat
mov
movsb
jne
xor
push
test
outsl
mov
test
or
add
outsl
repnz
add
sbb
inc
repz
loope
aaa
xor
sbb
shrb
sti
cmpsb
mov
xor
add
add
sub
loop
sbb
push
test
xchg
into
filds
sub
sti
repz
cmpsb
inc
fnstsw
std
sti
mov
inc
jp
cli
js
gs
xchg
cli
push
bound
jmp
add
push
jmp
lret
sti
mov
xor
repz
hlt
imul
add
adc
jmp
sub
insl
outsb
adc
pop
jbe
add
sub
pop
cmp
xchg
sahf
test
push
xchg
in
ljmp
pop
cld
or
int
cmp
addl
xchg
jae
inc
in
add
mov
jae
aad
jae
cmp
or
xchg
or
xchg
cmc
dec
push
insl
add
jmp
icebp
sti
jae
xchg
xchg
imull
jnp
ret
xchg
cmc
sldt
add
aam
add
mov
cwtl
push
jecxz
adc
popa
push
add
ficomps
or
xlat
cli
adc
sbb
std
enter
in
pop
inc
add
daa
dec
and
pop
and
dec
cld
popa
into
add
pop
cltd
inc
add
addr16
pusha
sub
jmp
ljmp
mov
add
mov
mov
jmp
into
jmp
mov
push
inc
data16
aad
or
test
cmpsb
mov
cmp
aaa
xor
mov
fildll
in
fadds
loop
jmp
movsl
jl
jecxz
mov
jo
xchg
lock
aas
mov
movsl
outsl
inc
fisubrl
mov
enter
mov
lahf
sub
loop
adc
fsubrs
push
shlb
aaa
mov
popf
insl
dec
jle
outsl
aaa
into
imul
ljmp
or
inc
add
repnz
bound
cs
shlb
out
inc
in
adc
movsb
cmp
sub
adc
cmp
add
add
add
add
stos
cli
push
xchg
ljmp
cmp
insb
jnp
add
pop
add
cmp
and
push
bound
popa
or
in
cmp
and
mov
cmp
xchg
xchg
pop
pop
loope
cmp
add
inc
rorl
add
pushl
test
xchg
test
incl
add
mov
and
out
and
scas
dec
adc
xor
jne
mov
push
ljmp
xchg
adc
pushl
mov
add
stc
xor
add
jmp
inc
add
test
dec
xor
lret
cmp
and
addl
add
add
psrad
fiaddl
push
cld
add
add
lahf
or
call
in
loop
push
adc
adc
adc
cltd
mov
jl
outsb
cmp
mov
or
xchg
xor
sti
lahf
popf
sbb
std
in
call
ficoml
mov
cmpsb
lret
inc
pop
inc
inc
aaa
mov
ret
dec
lret
pop
shr
cli
mov
pop
aas
cmc
add
add
pop
lea
bound
mov
imul
ja
pop
inc
pop
shlb
loope
negl
icebp
mov
aas
jmp
fbstp
add
jo
out
jo
out
inc
cmp
lret
fs
inc
push
xor
add
mov
in
imul
add
fisubrl
add
ficompl
add
add
and
xor
add
aad
dec
bound
mov
movsl
fnstenv
scas
test
mov
test
inc
jns
xor
jmp
lods
out
out
bnd
pusha
and
ja
cli
mov
in
sti
cmpsb
dec
icebp
or
das
or
mov
shlb
mov
pop
xor
mov
mov
add
add
xor
push
out
cmpl
test
mov
test
mov
lods
mov
dec
sub
hlt
bsf
and
cmpsb
stos
inc
jnp
lret
outsb
add
add
pop
adc
js
lret
hlt
imul
xor
dec
add
add
subl
jae
pop
add
push
movsl
mov
mov
cmc
pushl
jno
call
mov
sbb
jb
fsts
sub
stos
hlt
add
and
repz
lret
sub
loop
xchg
ret
pop
jle
inc
lahf
jne
test
daa
mov
mov
gs
sar
test
lcall
mov
jle
mov
lcall
js
or
iret
cli
inc
xchg
nop
push
mov
outsl
add
cli
popa
movsb
add
or
or
sub
call
or
out
std
outsb
cmpl
fcmovbe
cli
in
lock
xchg
lret
xor
loop
fidivrs
add
add
and
xor
adc
hlt
mov
add
xor
loop
pop
cmp
ljmp
out
inc
cmc
lcall
push
mov
pop
lahf
jmp
cmp
lods
out
stos
insl
mov
lahf
call
add
xor
loop
insl
hlt
pop
lahf
call
cwtl
or
test
mov
aad
gs
and
push
loope
test
inc
cmp
sbb
nop
mov
cmc
adc
loope
add
xor
insl
dec
xor
jmp
pop
out
inc
mov
mov
push
push
mul
mov
jg
mov
cli
push
loope
test
add
or
cli
push
in
inc
cmp
xor
jmp
loope
add
xor
gs
jmp
hlt
mov
repz
add
cli
shrl
push
imul
or
jl
add
xor
test
xchg
jmp
adc
into
mov
add
jnp
lret
dec
adc
leave
sub
add
add
lret
pop
insb
bswap
arpl
or
pop
xor
aaa
mov
add
jmp
pop
adc
jle
js
loop
decl
inc
lret
pop
adc
cmp
decl
mov
insb
aad
ljmp
push
sub
cmpsb
repz
aam
mov
inc
adc
dec
lock
add
mov
mov
into
and
xor
inc
add
xchg
insb
fldl
mov
loop
add
push
sub
cli
cmp
aam
jns
inc
movsl
jmp
adc
adc
inc
add
xchg
adc
or
jne
xor
push
xor
outsb
sub
add
add
add
add
cmpsl
in
adc
movl
fwait
cltd
inc
pop
sub
cmp
imul
lea
inc
mov
add
jle
sbb
or
jmp
mov
gs
pop
shr
push
and
xor
sahf
inc
lock
negb
inc
ljmp
std
sbb
ljmp
mov
popf
fs
add
add
xor
aaa
fdivs
adc
xchg
jne
out
into
pop
xchg
inc
cmc
adc
cltd
mov
mov
outsl
or
xchg
cli
cmpsb
arpl
in
xor
sbbl
push
daa
or
sub
jmp
jno
add
inc
aaa
sub
fdivrs
loope
push
ret
loope
jno
add
add
mov
div
stc
push
mov
je
pop
in
testl
aas
dec
mov
mov
aaa
ds
xor
or
cmp
out
jmp
adc
push
mov
and
inc
pop
insb
mov
jmp
mov
inc
jl
outsb
outsb
adc
inc
leave
inc
add
pop
cmp
xor
imul
add
add
add
sub
cli
push
push
jo
lcall
pop
cld
insb
scas
sbb
sbb
addl
xorl
int3
fs
ljmp
lret
je
xor
sbb
sub
cli
cltd
adc
or
jmp
dec
xor
jno
fsub
std
imul
mov
jle
rcll
inc
mov
cwtl
push
add
add
add
dec
or
xor
test
fcoms
add
add
sti
jae
or
or
lea
call
add
sti
pop
push
inc
sti
lahf
jne
dec
test
call
cmp
jmp
cwtl
fstps
call
cwtl
gs
in
daa
gs
or
call
loop
insl
sbb
xchg
leave
inc
mov
mov
xor
sub
enter
jo
data16
sbb
xchg
lcall
ljmp
les
jns
sarl
pop
push
sbb
dec
rcr
xchg
ljmp
push
mul
loopne
fbld
adc
test
add
add
lcall
and
test
loope
or
cltd
cli
out
lock
sahf
adc
or
cwtl
cli
mov
pushf
sub
rcrb
push
sbb
or
and
xchg
lods
call
mov
cli
sub
pop
shr
mov
xchg
fwait
mov
sbb
dec
add
add
xor
adc
sub
cmovg
test
cmc
inc
aam
adc
inc
sahf
jbe
repnz
call
inc
adc
jae
lea
xor
shlb
mov
call
scas
add
mov
idiv
xchg
in
testb
dec
adc
jecxz
sbb
xor
cwtl
xor
test
adc
add
add
pop
out
jnp
push
xor
push
fistpll
jp
cld
iret
cli
and
inc
adc
jnp
add
cld
dec
pop
jbe
out
mov
leave
cli
xor
or
mov
and
xor
mov
add
add
cld
add
xchg
or
repz
cli
pop
dec
clc
mov
add
xlat
ror
ss
cli
jle
in
repz
rcrb
lret
stos
dec
adc
inc
clc
jnp
mov
cld
test
jge
xor
fst
push
and
pop
xchg
inc
call
fwait
in
repz
bound
xchg
and
out
hlt
or
cmp
lods
cmp
or
sbb
inc
fisubs
xor
add
add
jno
cld
fdivl
push
loope
into
call
fisubl
add
xchg
loopne
mov
std
xor
mov
and
mov
jno
sti
in
pop
inc
scas
das
mov
jg
das
jmp
pop
xor
ret
and
xchg
cli
jmp
cli
push
add
stos
inc
add
add
mov
sbb
sbb
add
add
mov
pushf
dec
xchg
shll
push
sbb
adc
xchg
cli
shll
repnz
out
das
test
push
out
add
dec
out
cmpsl
sub
test
cwtl
or
xor
jg
xchg
mov
imul
adc
loope
test
xor
add
mov
testl
add
add
add
pusha
pop
adcl
stc
xchg
xor
jae
divl
gs
pushf
stc
pop
call
mov
add
pushl
sbb
pop
adc
pop
pop
divl
sbb
call
popf
cmc
jne
gs
adc
or
mov
add
mov
add
and
push
sub
inc
mov
add
dec
insl
add
add
jmp
loop
fld1
dec
ljmp
sub
push
cmp
inc
xor
push
and
cli
out
sub
fdivp
push
sbb
xor
or
pusha
inc
loop
push
or
dec
add
dec
mov
movl
mov
int3
je
xchg
hlt
aaa
in
pop
fwait
or
je
and
jo
add
pop
dec
call
popa
shlb
lcall
pop
and
mov
xor
std
lods
nop
insl
inc
lock
push
push
ficoml
fadd
pop
les
call
mov
nop
fcomi
fs
push
inc
xor
pop
mov
sti
data16
add
enter
nop
aas
outsb
cmp
and
push
test
sub
leave
cli
push
cmp
push
idivb
cmp
test
push
adc
jmp
lret
ficoml
cwtl
lods
stos
fmuls
lods
cld
int
sub
pushl
test
inc
int
rcll
loope
sbb
cmp
divb
rorb
xor
cld
mov
adc
xor
cli
faddl
add
pop
xchg
subb
mov
loope
mov
push
lea
jmp
loope
inc
lds
cmp
out
mov
sti
pop
decb
adc
mov
add
xlat
incl
or
lret
or
inc
cltd
idiv
inc
push
ljmp
add
repnz
decl
jns
sbb
mov
decb
jns
adc
cmc
jne
or
loop
aad
cmc
test
mov
cmp
mov
mov
out
adc
add
hlt
pop
shrd
divl
xchg
add
dec
sbb
xor
add
add
jnp
lds
aaa
nop
lods
xchg
faddp
test
xchg
mov
mov
lea
cmp
sub
je
outsb
nop
add
loop
sub
mov
je
lcall
adc
push
enter
push
fisubrl
adc
or
xchg
xchg
push
ds
enter
add
repnz
jnp
jecxz
xor
xor
fsubs
sbb
test
sarb
jo
mov
mov
jl
cltd
insl
mov
push
lea
jge
add
out
loop
mov
std
adc
les
testb
push
ljmp
ret
lods
lock
scas
add
add
push
sarl
jecxz
push
rorb
icebp
fildl
outsb
adc
pop
jno
cli
into
sub
cmpsl
loopne
add
js
out
je
call
out
mov
loopne
loopne
enter
popa
inc
push
xor
cmp
adc
orl
pusha
sbb
and
xor
mov
in
clc
or
pusha
add
add
mov
iret
movsl
xchg
frstor
inc
in
fidivs
das
sub
mov
jmp
cmpsb
loopne
mov
and
sbb
push
mov
sti
pushf
or
adc
nop
cmc
jne
jb
or
ds
cld
or
dec
addr16
call
ret
sti
pop
cmp
inc
pop
je
or
mov
in
cmp
cli
xchg
mov
test
add
dec
or
jg
sbbl
je
sbb
cli
aas
jmp
cmp
jmp
or
cmp
add
aaa
cld
push
and
pop
shll
fs
cwtl
xlat
paddusw
incl
add
aam
ds
js
push
stos
adc
aam
adc
lds
cmp
imul
ljmp
push
mov
mov
mov
stc
mov
add
fmull
mov
xchg
loop
cmp
pop
push
dec
add
xchg
incb
loopne
ret
jno
pop
dec
fsubl
add
repz
ss
mov
fistps
jns
lods
and
mov
xchg
ljmp
dec
fidivrl
aaa
fwait
fdivrs
call
ret
cs
rcrb
clc
ret
lcall
mov
out
mov
add
loop
mov
outsb
mov
pop
mov
sub
add
add
inc
repz
push
out
sbb
loop
ljmp
xchg
mov
add
sti
and
test
lock
rol
dec
jmp
xchg
pop
loop
xchg
jmp
cmp
push
mov
popa
xchg
mov
add
stc
scas
mov
mul
sahf
mov
add
or
sbbb
cli
xchg
insb
push
stc
jbe
ds
adc
flds
jb
sbb
fidivl
add
pusha
xchg
jbe
xchg
mov
xor
jg
notl
sub
jmp
jo
and
hlt
ds
outsb
daa
divl
fidivrl
fidivs
addb
add
add
add
mov
xor
inc
jo
arpl
adc
mov
out
jo
jne
mov
hlt
push
lock
shr
data16
insb
add
add
repz
jle
divl
xor
add
sbb
imul
je
push
xor
or
cli
adc
xor
pop
add
add
add
mov
add
xchg
add
xchg
pop
cmpl
imul
mov
adc
pusha
insb
adc
push
das
mov
jae
or
cmpsl
cli
gs
in
xor
inc
test
cmpsb
dec
test
ss
mov
add
test
ss
repnz
stos
subl
pop
jo
xchg
jecxz
sti
mov
rcr
xor
jp
xchg
jecxz
mov
mov
fldcw
cmc
ret
fnstsw
pop
addl
xor
test
add
add
adc
loope
popf
aaa
mov
push
xchg
add
jne
out
imul
stos
gs
insl
orb
fisttpl
dec
std
sbb
xchg
imul
and
je
xchg
jbe
out
pushf
lods
mov
ljmp
enter
pop
push
icebp
pop
or
stos
cli
add
add
je
jb
jge
xchg
loopne
add
pop
jae
shll
inc
add
clc
idivl
adc
add
push
xor
cmp
mov
xchg
in
xchg
cmp
adc
int3
ret
daa
out
mov
ret
sbbb
in
dec
sbb
mov
jae
push
ret
in
cmp
add
add
call
test
test
add
loope
jae
ftst
insb
les
sysret
gs
cmp
pop
or
in
lcall
imul
mov
mov
hlt
mov
aaa
and
in
xrelease
test
inc
and
out
in
xchg
add
out
jp
mov
and
jg
sub
add
fimuls
or
int
sbb
dec
xor
add
push
sbb
push
sti
das
push
xor
mov
push
fisttpl
mov
call
mov
dec
sbb
sbb
aam
cmp
add
add
mov
cmpsl
cmp
incl
xor
xorl
ss
and
aam
sti
lock
or
rolb
lock
xchg
push
je
lret
add
stos
and
add
mov
mov
jns
inc
das
insb
movsb
test
imul
cwtl
jecxz
dec
sub
push
ljmp
ja
repz
mov
inc
fstpl
jnp
add
jmp
add
sti
mov
imul
xor
xor
jb
push
inc
jo
push
push
add
mov
adc
hlt
adc
pop
fdivrp
sub
test
incl
lahf
in
cmp
sub
add
add
add
add
and
add
mov
sbb
outsl
push
out
and
jne
mov
into
jmp
je
int
add
bound
inc
cld
shl
adc
mov
jmp
mov
idivl
jle
pop
lea
cmc
incl
sub
fistpll
push
jne
add
dec
scas
inc
sbb
outsb
pop
push
xor
jge
add
jb
inc
mov
jmp
data16
and
push
sbb
lcall
ss
sub
mov
test
inc
add
shll
hlt
aad
add
jg
pop
pop
adc
mov
xchg
jb
jle
xchg
pop
test
add
adc
adc
test
out
push
jg
test
pop
adc
add
xchg
jns
add
mov
pusha
aad
sbb
xchg
ss
push
or
call
push
jmp
xor
stos
push
xor
add
fcmovb
mov
fdivs
arpl
call
or
add
out
push
mov
clc
divb
jmp
cmpsb
dec
jge
pop
mov
mov
push
fnstenv
sti
jle
jge
lods
stos
mov
or
or
mov
pop
xor
add
xchg
or
xchg
sub
xor
int3
xor
rol
mov
adc
mov
xchg
mov
add
ficoms
add
out
pop
ljmp
std
data16
sub
add
je
push
mov
pop
xchg
add
sti
aam
mov
insl
ja
sub
mov
inc
insl
ja
ljmp
enter
mov
push
ds
fs
pop
ds
fs
mov
cmp
add
add
cmp
aas
movsl
cmp
dec
movsl
cmp
push
movsb
cmp
dec
lahf
cmp
test
add
mov
cmp
lahf
cmp
popa
mov
add
mov
add
cmp
shll
cmp
mov
cmp
sbb
cmp
test
cmp
daa
lods
cmp
pop
lods
cmp
add
add
lods
cmp
cld
lods
cmp
sub
cmp
loop
xchg
cmp
loop
xchg
cmp
loop
cltd
cmp
loop
xchg
cmp
loop
cwtl
cmp
loop
cltd
cmp
loop
xchg
cmp
loop
test
loop
cmpl
loop
test
add
add
add
add
nop
xchg
loop
pop
cmp
loop
cmpb
dec
popa
cmp
loop
pop
pusha
mov
xor
pop
cmpsl
xor
pop
pop
xor
xchg
rdtsc
and
xor
xor
add
ljmp
out
pop
fsubrs
fsts
sbb
testb
add
xlat
and
sbb
push
out
sbb
push
out
sbb
sbb
adc
add
loop
dec
push
or
add
inc
add
add
cld
in
out
dec
stos
out
dec
leave
dec
add
cmc
cmp
fmull
inc
xor
stc
aaa
ss
inc
aaa
mov
aad
cmp
or
jmp
add
add
add
add
push
add
add
jo
add
add
push
add
add
add
push
add
jb
add
jae
add
add
xor
add
mov
push
cmp
add
cmp
mov
cmp
lds
cmp
lds
cmp
add
cmp
add
cmp
add
adc
add
adc
add
adc
add
cmp
inc
xlat
cmp
fsts
cmp
add
add
cmp
add
out
cmpsl
jg
jmp
mov
cs
dec
adc
orl
pop
das
xor
lods
mov
adc
pop
les
inc
mov
mov
enter
fldl
sbbb
xchg
cmp
js
or
cmp
or
pop
add
xor
ja
pop
add
jle
inc
fimull
mov
gs
ja
add
add
add
or
adc
cli
cmp
and
push
mov
test
hlt
sbb
jge
push
jo
and
mov
and
and
call
inc
xchg
cld
ret
add
pop
stos
lock
jne
jl
mov
mov
jle
or
jmp
cmpsl
test
cmpsl
fwait
xlat
outsl
mov
test
and
sbb
call
xchg
test
add
push
sti
outsb
jb
mov
in
stos
xor
roll
aam
ljmp
mov
aam
bound
inc
leave
test
jo
insb
mov
repnz
sub
pop
sub
add
dec
in
jecxz
pop
or
out
lea
sbb
cmpsl
test
cli
bound
rcl
adc
jo
add
mov
stos
inc
mov
lods
push
cmpsb
inc
ja
sub
xor
pusha
dec
adc
mov
ret
cmc
call
cltd
jbe
int3
ret
xchg
cmc
push
movsb
mov
orl
testb
inc
js
pop
call
cli
incl
add
jnp
je
lret
and
cmc
inc
mov
das
mov
testl
lret
sbb
pop
push
dec
cmp
je
cmp
jmp
je
into
sub
xor
das
inc
add
ss
jae
sbb
jmp
add
add
xchg
inc
loop
test
jmp
sub
xchg
enter
cmp
sti
add
add
or
sti
and
popl
das
pop
jmp
or
jo
add
adc
out
add
xchg
test
or
adc
cmpl
subl
lock
aad
inc
push
leave
pop
and
lcall
repz
mov
add
add
xor
add
cmpsl
mov
out
call
clc
dec
jb
xchg
loope
sub
dec
or
xor
inc
inc
xor
add
test
js
and
shll
lods
pop
pop
arpl
mov
jns
addl
data16
mov
outsl
or
stos
mov
je
and
jo,pn
add
add
cs
mov
sub
xchg
pop
pushl
lcall
in
imul
js
aaa
mov
jg
pop
dec
jbe
jbe
hlt
xlat
jmp
sub
mov
orb
cli
jmp
inc
xor
and
jne
push
add
add
mov
repz
pop
cmp
mov
out
mov
sub
orl
fs
add
lea
gs
jo
jnp
mov
out
inc
int3
add
or
inc
mov
je
out
inc
in
push
push
sub
cmc
jp
mov
icebp
repz
and
rcrl
add
add
clc
jp
dec
fwait
cmc
sti
pop
sbb
dec
rolb
inc
les
idiv
out
mov
incl
cld
test
and
jmp
out
inc
xchg
mov
lcall
add
movsl
je
fisubl
lea
add
mov
arpl
jne
movsl
jae
push
jmp
dec
dec
pusha
mov
push
icebp
mov
add
add
add
add
adc
aas
enter
adc
addr16
cmpsl
cli
sub
adc
in
fnsave
mov
stos
mov
jmp
out
aaa
cmpsl
dec
testb
rorl
sbb
pop
inc
pop
jmp
push
addr16
in
xchg
lods
xor
in
push
shr
push
shll
add
add
insl
shrl
sarl
jns
les
insl
mov
inc
pop
outsb
xchg
test
dec
pop
repnz
dec
outsb
insl
dec
ds
das
cli
pop
mov
test
sbb
or
ja
insl
inc
test
mov
mov
das
mov
sbb
and
mov
cmc
xor
add
add
add
add
jle
out
jecxz
enter
out
jp
add
out
mov
jmp
cmp
xor
fimuls
imul
push
mov
in
idiv
sub
mov
cltd
std
or
xchg
fidivs
add
xchg
sbb
or
shlb
xorb
cld
fcmovnu
frstor
add
loope
mov
add
add
dec
aaa
pushf
xor
fucomi
adc
and
out
add
mov
shl
xor
sbb
cmp
jmp
mov
scas
cmp
mov
mov
call
mov
cmp
sbb
sub
mov
stos
inc
cli
dec
adc
lds
fwait
in
subl
xchg
cmc
call
add
add
sbb
xor
call
imul
call
pushf
xchg
add
add
xchg
outsb
pop
cmpl
cld
push
shlb
icebp
mov
cs
mov
inc
repz
aam
inc
shrl
pop
scas
or
jmp
and
cli
imulb
inc
dec
es
sti
add
add
jne
dec
dec
xchg
outsl
aas
pop
lret
outsl
sbb
or
inc
mov
mov
xor
pop
xchg
fisubs
cwtl
or
jne
outsb
jns,pn
or
stos
jecxz
outsl
lds
je
addr16
in
and
pop
add
cmpsb
enter
or
mov
adc
insb
stos
add
add
or
cltd
cmp
aad
jmp
xor
mov
cli
push
adc
ds
adc
push
lods
arpl
cltd
add
aaa
addr16
movsl
inc
in
cmp
in
jl
xchg
je
xchg
imul
sbb
ds
repnz
or
test
jno
add
push
pushl
add
xchg
push
in
mov
loope
repz
xorl
xorl
out
add
pop
test
repnz
or
imul
jb
inc
mov
cli
cld
testl
loop
jge
loope
jg
jle
jl
cld
inc
cmp
fnstsw
push
sub
mov
xchg
sbb
data16
add
add
stc
xchg
gs
sbb
inc
add
add
pop
incl
cmc
push
movsb
mov
imul
xor
enter
or
sub
repnz
loope
add
cwtl
sub
faddl
mov
mov
push
or
mov
add
subb
push
mov
divl
jg
push
jecxz
add
cmp
adc
cmp
inc
fwait
jae
lahf
xor
ja
cmpsb
mov
repnz
sbb
lcall
add
sti
xlat
stc
hlt
aas
loop
dec
or
sbb
pop
cmp
lahf
adc
imul
lea
sti
add
add
xchg
hlt
aas
loop
inc
sti
jecxz
adc
fsin
call
inc
aaa
sti
imul
hlt
aas
loop
lahf
adc
imul
movsb
roll
popf
adc
mov
fisubl
sbb
inc
xor
int
mov
inc
aaa
jmp
mov
fnstcw
jl
sub
std
aas
test
sti
pop
in
incl
adc
add
data16
add
mov
out
add
push
incb
and
testl
call
call
pusha
pop
call
pop
ss
add
and
sbb
mov
in
test
lods
lcall
aas
repnz
out
push
push
push
lods
pop
sti
push
pop
repnz
pop
jae
insl
add
add
loop
stc
stos
fdivr
in
xor
cld
roll
jmp
rep
lea
jns
out
cmp
icebp
inc
jbe
out
fiadds
in
mov
jmp
inc
cmp
fldenv
xor
in
jno
ds
adc
xchg
jns
aaa
popl
out
orb
daa
popa
mov
sub
outsb
and
cltd
ds
lods
nop
jle
daa
push
adcl
orl
cmc
inc
out
cmc
inc
cmpsl
push
xchg
xchg
outsb
and
cwtl
cmp
in
nop
jle
aaa
sub
push
jecxz
sub
pushl
pop
sbb
dec
ret
jecxz
divl
notl
push
insl
add
sub
cmc
decl
aaa
jl
fs
cli
cmp
shll
jecxz
inc
decb
pop
mov
add
and
pop
xor
adc
add
ret
cmpsb
jno
and
add
mov
cltd
adc
push
mov
aaa
xchg
add
pop
test
movsl
mov
cmp
add
xchg
sbb
lock
fcmove
cli
jne
mov
notb
adc
aad
jae
shl
inc
mov
lods
cltd
sbb
stc
sbb
andl
jmp
mov
fsub
mov
add
cmp
cmp
mov
jle
call
rorb
insl
and
pop
xor
add
add
jg
or
testl
addr16
jae
and
in
in
sbb
sub
dec
lret
outsl
add
loopne
cmp
mov
mov
fnsave
add
adc
out
cli
and
int
scas
cmc
xchg
pop
addr16
test
cmp
in
mov
add
sbb
aam
sarb
out
aad
repz
js
dec
add
addb
mov
insb
data16
sahf
jns
cli
push
pop
pop
pop
sub
xor
add
or
sti
jmp
hlt
cmp
hlt
sub
in
jecxz
and
cli
add
outsl
andl
ljmp
add
add
add
xchg
jns
pop
mov
pop
push
int3
mov
paddusw
aaa
mov
and
adc
lret
jo
repnz
mov
sub
ja
das
lock
mov
dec
or
ret
mov
mov
xorl
push
or
pop
hlt
sbb
notl
adc
aaa
cmp
add
loop
nopl
or
lret
clc
push
pop
push
out
rorl
mov
pop
inc
aaa
and
mov
shrl
das
cmp
pop
out
lahf
popa
test
sbb
pop
and
pusha
or
aaa
and
jbe
add
xor
insl
mov
movsb
fiaddl
pop
mov
xchg
add
rcl
in
jle
dec
cmpl
loope
xchg
mov
cmp
xor
cmpsl
dec
xor
add
sub
fwait
cmp
das
pop
ret
pop
cmc
xchg
imul
jmp
push
loop
mov
ret
sbb
nop
pop
pop
call
xor
push
mov
add
loop
xor
pop
cmc
xor
shlw
lcall
ret
cmpsl
pop
cld
sbb
jbe
and
pop
call
fsubl
xor
test
loope
xor
jb
add
gs
dec
pop
dec
insb
sbb
mov
fidivrs
iret
adc
data16
mov
ss
add
int
daa
test
cmc
out
jmp
test
and
add
and
repz
pop
xchg
mov
call
pop
cld
push
adc
add
push
out
stos
inc
xor
ss
xchg
inc
xor
sub
addl
loopne
xchg
lods
add
incl
add
pushf
jl
jge
dec
mov
add
push
or
mov
or
mov
notl
cmpb
jl
dec
push
xchg
or
and
mov
cmp
sub
jle
divl
push
notl
loop
cmp
jmp
xor
fcomi
mov
call
add
add
add
add
bound
add
adc
mov
loop
test
inc
mov
cmpsl
lds
pop
adc
mov
jmp
rolb
pop
adc
adc
mov
sarl
lods
or
dec
jle
clc
dec
test
pop
add
xchg
xchg
xchg
adc
jle
or
addr16
and
movsl
inc
test
fisttpll
dec
xchg
add
std
clc
psubsb
stc
adc
pop
rcrl
sub
mov
jne
stc
outsb
pop
leave
xor
xor
pop
pop
call
cmp
xchg
xor
das
jmp
xchg
into
inc
faddl
cmpsl
and
xor
dec
adcl
add
add
pop
popa
adc
add
sub
add
cmc
add
mov
add
xor
cmp
in
loopne
std
push
lock
in
jg
push
call
mov
add
gs
movsb
nop
fimuls
lcall
push
out
jne
movaps
mov
icebp
mov
dec
mov
dec
jmp
push
push
push
je
outsb
jg
cmp
pop
xlat
shlb
sbb
add
add
cwtl
cli
hlt
sbb
std
push
adc
jge
je
les
lea
sbb
sbb
rorb
in
sub
mov
mov
je
mov
dec
stc
dec
les
adc
push
adc
mov
add
xlat
ret
cmc
push
aam
jbe
dec
sub
cmp
loopne
out
inc
pop
outsb
pop
ret
jne
add
jle
pop
lock
dec
decl
vpcmpeqw
or
adc
call
pushf
loop
xchg
cmc
push
or
cmp
notl
icebp
sub
mov
incl
ficoml
loop
push
in
mov
and
inc
fnstenv
add
int3
lea
pop
mov
add
cmp
or
daa
or
popf
aad
push
xchg
jge
mov
das
lea
push
mov
mov
ss
testl
add
sbb
jp
or
xor
add
xchg
loop
and
pop
aaa
xchg
mov
pop
sbb
or
cli
xchg
or
add
xor
dec
shl
call
sbb
add
mov
or
inc
xor
aad
push
pop
dec
fisubrl
jo
fmulp
clc
andb
mov
fwait
jae
add
jecxz
sti
xor
clc
pop
cmp
add
idivl
or
andb
sub
xchg
dec
lods
test
aam
fisttpl
adc
call
inc
loop
test
add
add
sbb
pop
sub
jmp
jo
and
mov
push
add
fs
icebp
in
fs
repnz
aaa
pop
cs
mov
popf
ret
pop
xor
jno
add
stos
sahf
adc
jnp
sbb
repz
fisubrs
movaps
daa
sti
pop
loop
adc
jbe
add
sub
out
dec
or
add
add
inc
sti
xor
add
fcompl
cli
pop
stos
loop
repnz
fs
or
je
and
mov
cmc
xor
jl
mov
cmp
test
pop
push
xor
ds
lret
xor
push
or
mov
ret
out
add
mov
xorl
es
incl
add
mov
xor
jbe
cmovo
mov
add
push
rolb
aam
or
sub
es
mov
or
incl
loop
jge
jae
pop
or
sti
or
jnp
or
iret
in
aas
loop
mov
or
sarl
int
loop
add
add
jne
adc
dec
xor
mov
xchg
add
iret
sub
sub
pop
call
pop
or
bound
or
and
adc
pop
add
mov
sbb
cmp
inc
jae
out
repz
cmc
xor
push
leave
lea
mov
hlt
sbb
fcomi
mov
push
call
jae
pop
mov
mov
shl
inc
loop
xor
popf
sti
dec
push
ljmp
mov
or
inc
repz
inc
sbb
call
stc
inc
cmp
add
clc
mov
jp
pop
jmp
scas
out
call
cld
adc
pop
pushf
lock
rorl
pop
sbb
mov
sub
stos
out
add
add
push
loop
sub
cmp
pop
xchg
idivl
pop
push
push
jno
pop
fmull
jle
xchg
movaps
sarl
fsubrl
pop
loope
pop
ljmp
dec
out
sub
ds
test
mov
adc
and
sti
push
out
out
out
push
fisttpll
not
and
out
insl
jbe
sub
add
out
push
cmp
add
inc
xchg
xor
add
scas
out
aas
add
test
add
pop
out
sti
sub
add
add
jg
cli
sti
shrb
call
xchg
stc
fs
test
cmc
mov
sarb
xor
mov
movsl
add
mov
movsl
add
rolb
les
inc
aaa
mov
mov
lea
sbb
decl
mov
or
inc
or
loop
ds
push
bound
jp
inc
mov
jl
adc
aaa
jnp
jp
xor
add
push
notl
cmpsb
mov
pop
xchg
add
xchg
inc
repnz
jns
dec
incl
add
xor
sub
call
call
push
pop
mov
insb
add
adc
adc
sbb
aas
loop
mov
push
pop
sub
sbb
xchg
dec
fstl
xor
imul
cmp
loop
sti
jg
hlt
call
inc
loop
xchg
jg
push
cmc
inc
loop
and
add
add
mov
inc
loop
mov
jns
fldl
sbb
dec
aam
stc
xor
rorl
repz
mov
mov
xor
add
jmp
mov
xor
mov
xor
add
jae
mov
mov
lock
mov
inc
imul
jmp
add
add
call
sarb
xchg
pop
cmp
push
out
test
fbstp
add
dec
xchg
cmp
aam
ds
jmp
iret
dec
mov
imul
ja
pop
dec
out
ret
fs
cli
cs
out
movsl
dec
cli
jno
dec
out
mov
int
jnp
xor
pushl
mov
cmp
or
dec
loope
or
loope
or
or
jp
lods
pand
inc
inc
jae
adc
dec
dec
dec
cmc
jne
mov
incl
mov
or
pop
out
lret
xor
rorb
add
xor
sarl
cmc
test
and
js
adc
add
add
lret
xor
pop
push
or
in
jae
jno
cmc
jae
dec
xchg
test
and
mov
loope
cli
icebp
inc
xchg
dec
add
or
pop
sbb
jg
cmp
jmp
pop
or
push
icebp
add
loop
sar
out
xchg
in
aas
loop
out
add
jnp
out
ds
add
loop
aas
ja
das
jg
pop
lea
imulb
sti
out
popf
ljmp
cs
jno
std
jmp
add
cmp
cltd
gs
std
outsb
testb
cmpb
and
add
xor
add
mov
gs
stc
fbstp
jnp
mov
call
xchg
and
xchg
add
call
test
popa
stos
call
lock
les
mov
xor
add
retw
roll
loop
stc
unpcklps
call
xor
add
and
mov
push
sahf
scas
mov
cmc
pusha
mov
mov
and
test
sar
xchg
loop
mov
add
add
add
add
mov
out
rorb
subl
mov
mov
pop
push
in
pop
inc
xchg
fs
and
mov
adc
adc
xchg
xchg
push
sub
mov
std
call
pop
push
push
rcrb
scas
call
mov
notb
test
xchg
inc
or
mov
add
dec
inc
add
jmp
cmc
cmp
dec
cmc
xor
mov
enter
inc
xor
inc
cmp
jg
clc
mov
pop
adc
xor
dec
push
shlb
das
inc
cmc
adc
sub
push
push
cmp
dec
mov
js
add
add
xor
mov
loop
xchg
or
imul
mov
and
inc
out
fbstp
jbe
push
cmp
int3
lds
mov
push
xchg
xchg
push
sbbl
pop
dec
dec
mov
push
fwait
xchg
sub
pop
sbb
push
xchg
sarb
clc
sbb
push
iret
add
add
add
or
jmp
jo
or
sarl
in
push
ja
push
inc
cli
mov
xor
dec
call
cli
inc
dec
jg
mov
cmp
rolb
imull
push
imul
aam
pushf
ror
in
xor
dec
lcall
lock
xor
test
add
inc
clc
xor
xor
and
add
cmp
sbb
push
or
or
loopne
sbb
arpl
fld1
sbb
cmp
dec
je
popa
sbb
sti
mov
sub
xor
fs
leave
or
jmp
ss
jmp
add
add
cmp
shlb
lds
pop
outsb
ljmp
data16
xor
into
fisubl
sub
lods
mov
sub
sbb
mov
sub
popa
jbe
daa
jecxz
hlt
popf
xor
ds
push
pop
pop
shr
push
mov
out
xchg
imul
call
xor
push
add
sbb
cmc
jne
push
incb
mov
cld
or
pushl
mov
cld
dec
push
mov
out
je
js
push
insb
push
mov
mov
lea
pop
cmc
adc
mov
mov
loopne
scas
int
jnp
int
stos
scas
outsb
and
mov
and
jb
es
or
loop
jg
dec
in
jge
decb
add
add
adc
rcll
add
mov
inc
inc
or
mov
dec
push
imul
lret
jb
gs
repz
imul
and
mov
rcrb
dec
adc
aas
icebp
or
jp
cs
lcall
imul
xchg
jg
cmp
imul
je
pop
add
add
add
jg
dec
add
mov
sub
jmp
mov
call
adc
or
push
or
dec
inc
mov
gs
mov
out
add
push
mov
inc
xor
inc
fwait
adc
fistpl
push
sub
test
add
ja
flds
mov
add
cmpb
xor
cmp
aaa
add
call
ljmp
add
cmp
scas
sti
fmull
sub
lods
mov
in
push
in
sti
cmp
pop
sbb
or
out
loope
add
dec
inc
jge
dec
ret
mul
lret
lods
jmp
inc
pushl
inc
enter
push
bound
fisttps
add
add
add
add
loopne
pushf
icebp
ret
lret
mov
je
hlt
add
fsubrl
inc
jmp
in
in
jl
aam
pop
stc
and
cmpsb
and
mov
mov
sbbb
addr16
dec
push
pop
dec
push
inc
dec
add
lret
mov
cld
push
sub
lret
sub
shr
divl
ret
push
dec
or
dec
push
incl
add
scas
ret
cmp
inc
add
jae
pop
sub
adc
cli
mov
mov
push
mov
scas
out
clc
pusha
repnz
cmp
addr16
inc
add
js
push
sub
dec
fidivs
mov
pusha
cmc
jne
lds
jne
push
mov
inc
je
rcr
cmp
mov
fisubrl
and
xchg
add
dec
aas
jae
int3
lret
pop
jge
fisubs
jge
fcmovb
xor
mov
inc
je
into
ret
jl
mov
mov
jbe
ljmp
cli
movsl
add
inc
loop
ret
outsl
inc
mov
mov
xor
and
sub
sti
iret
ret
push
inc
loop
xor
cmp
push
adc
dec
sbb
mov
outsb
in
pop
loopne
subb
ljmp
or
add
or
adc
divl
add
repnz
push
lock
daa
fidivs
fiaddl
bound
test
xor
add
or
mov
fldl
push
in
push
and
call
mov
add
add
cmp
clc
call
xor
imul
inc
cli
jmp
pop
cmp
fisubs
call
stos
mov
sub
je
test
je
insl
in
inc
jne
repz
xorb
imul
je
popa
cmp
mov
jg
add
add
les
imul
and
out
pop
loopne
imul
sub
cmc
into
cli
push
jmp
or
inc
dec
xor
mov
dec
push
jmp
cmp
iret
adcb
inc
cmp
je
mov
jmp
adcb
loope
mov
rolb
cli
push
xchg
in
mov
add
add
add
add
popa
cmp
lret
inc
out
jmp
sub
push
jnp
add
sbb
mov
cmc
cmp
idivl
push
jmp
in
jl
iret
adcb
push
inc
jnp
jne
or
imul
mov
and
mov
sub
mov
ss
or
or
push
or
push
or
add
add
or
or
or
addr16
imul
and
or
or
adc
sbb
and
pop
adc
sbb
bound
pop
xor
arpl
mov
inc
jns
jge
inc
jae
xor
jg
je
in
aaa
imul
mov
outsb
roll
add
mov
lock
sbb
mov
out
and
and
stos
in
pop
div
insb
push
test
adc
jo
imul
jmp
aaa
lret
ret
in
test
ret
in
cltd
adc
aaa
sti
les
out
enter
int3
aaa
lock
cmp
hlt
aaa
int3
clc
aaa
aad
fdivl
rol
lock
inc
in
test
add
and
pop
xor
jo
adc
jo
adc
sbb
test
add
xor
jb
adc
arpl
mov
andl
daa
subl
add
nop
es
out
jle
daa
and
xor
scas
ret
and
mov
in
add
xor
add
popa
adc
imul
add
add
add
divb
loope
and
push
xor
add
adc
bound
pop
jnp
cmp
xor
cmp
mov
or
dec
das
cmp
xor
or
adc
mov
out
outsb
cs
jae
adc
push
push
adc
cmpsl
enter
add
mov
je
test
pop
pop
mov
or
jg
jp
pinsrw
fs
and
jmp
loop
jne
aad
repz
loop
jle
jmp
jp
flds
rcrl
jmp
bound
or
addr16
jmp
int
mov
in
rolb
loop
cmp
jecxz
cmpsb
movzwl
add
push
ljmp
xchg
mov
mov
into
mov
adc
xorb
add
add
jmp
jle
mov
mov
inc
pop
add
movsl
movsb
pop
rolb
fildl
loop
stos
pop
mov
ljmp
ja
lods
pop
lret
or
add
mov
xchg
adc
xor
mov
pop
pusha
outsl
enter
or
les
imul
loop
loopne
test
adc
mov
in
or
pop
repnz
mov
and
mov
out
add
dec
in
add
outsb
ljmp
loope
cmp
jbe
cli
pop
pop
repz
add
les
bound
adc
jb
adc
test
scas
leave
adc
inc
test
or
pop
repnz
and
imul
inc
not
cmp
fstpl
add
jmp
icebp
add
movsb
xor
stos
loope
xchg
loope
xchg
or
xchg
cmc
fisubrs
adc
lock
inc
lds
add
loopne
test
in
add
push
imul
inc
bound
add
mov
push
xchg
xor
push
add
sub
dec
or
inc
clts
js
add
and
lds
add
push
add
push
adc
adc
dec
mov
add
jb
mov
movl
xchg
stos
jp
repz
mov
add
ret
cmc
jnp
dec
pcmpeqd
inc
add
xor
test
lcall
stc
inc
enter
int3
add
inc
dec
inc
jecxz
pop
rcr
inc
jg
aaa
std
test
jmp
stc
jge
ror
inc
cmc
dec
add
mov
cld
lret
ror
nopl
add
jmp
incl
imul
jecxz
push
xchg
flds
jg
sbb
and
mov
in
fdivrl
sub
add
jl
pop
mov
ja
add
mov
xor
jge
push
int
jmp
xor
jle
pusha
sbb
xor
pop
jno
test
lret
jp
and
lret
add
and
xor
xor
subl
mov
add
add
mov
xor
imul
mov
ljmp
fsubrp
call
jo
test
and
das
fstpt
ljmp
or
add
mov
jmp
loop
out
loope
xchg
jmp
mov
add
add
dec
outsb
fucom
xor
sti
into
xchg
xchg
rorb
xchg
sar
daa
jnp
out
dec
dec
call
aad
sub
call
imul
cmp
xor
shll
xor
imul
test
add
das
cmp
xor
movb
add
ss
jnp
add
jns
inc
pop
lahf
mov
add
mov
stos
pop
or
das
cmp
xor
mov
add
add
dec
xchg
ret
ja
cmp
test
cmp
je
inc
or
pop
mov
dec
in
inc
add
scas
repnz
les
inc
enter
outsb
ja
sub
add
mov
je
sbb
push
add
dec
cmc
incl
outsb
leave
rcrl
adc
sahf
int
and
add
daa
mov
adc
sahf
rol
pop
pop
out
add
into
scas
and
sub
sub
push
cmp
test
adcb
fs
inc
aam
push
adc
add
pushf
mov
in
push
push
add
cmp
aam
inc
inc
jecxz
pop
add
xor
insl
popa
push
jmp
add
cld
push
outsl
insl
or
jne
std
mov
and
sbb
in
and
gs
loope
push
sub
insb
int
call
mov
not
add
lods
jg
loop
imul
add
lcall
neg
push
adc
loop
imul
xor
subl
and
jmp
sti
cmp
add
mov
stc
mov
ljmp
xor
popa
cmp
sub
negl
dec
cltd
jmp
loopne
sbb
in
je
cmpsl
out
adc
cwtl
stos
call
in
sub
scas
add
add
mov
jmp
mov
repz
xorb
xor
xor
das
lahf
inc
adc
mov
call
loop
and
jge
out
jb
in
jp
xor
add
and
inc
jecxz
xor
add
or
add
daa
add
inc
movshdup
cmp
stc
add
add
sub
andb
pop
test
lahf
dec
pcmpeqd
aas
push
mov
jne
dec
mov
xor
pop
ret
xor
cmp
and
scas
cmp
and
rolb
mov
sub
idivl
decl
loop
push
or
sbb
add
in
std
xchg
or
inc
stos
or
sbb
fsubs
ljmp
icebp
inc
jg
adc
punpckldq
clc
jae
cltd
push
outsl
lods
aas
inc
jecxz
pop
pop
mov
fisttps
cmp
mov
add
dec
and
fstl
jnp
out
inc
jae
xchg
leave
and
xchg
mov
repnz
cmp
add
imul
add
pop
xor
jmp
bnd
inc
lret
ljmp
cmpsl
outsb
cmp
filds
push
out
dec
ss
bound
or
popa
loop
into
mov
add
dec
rolb
hlt
test
jle
sub
and
mov
mov
fdivs
mov
loop
or
xor
subl
imul
mov
sbb
mov
push
mov
xor
jmp
pop
cmp
xchg
mov
xchg
xor
aam
add
popa
es
xchg
test
inc
call
loope
mov
mov
out
add
xchg
jge
adc
inc
call
loope
addb
xor
adcb
add
popa
and
out
adc
sbb
add
cs
test
idiv
add
push
and
and
jmp
std
icebp
add
loop
cmp
mov
mov
mov
rolb
add
add
xor
push
out
cmp
nop
call
sbb
adcl
rolb
mov
sub
mov
in
loope
out
inc
dec
repz
mov
mov
das
mov
pop
mov
xor
jmp
loop
mov
add
sbb
mov
lahf
test
mov
add
jecxz
decb
mov
decl
inc
cmc
or
sti
cmp
dec
mov
cmp
loope
decb
push
jmp
add
and
xor
std
in
sbb
sbb
ljmp
sbb
loopne
inc
and
cli
call
lods
pop
std
test
jle
call
add
sahf
xor
add
loop
sub
insb
lods
jne
call
andb
out
and
cld
dec
in
add
sub
cmpl
bnd
xor
add
loop
sub
insb
jle
sub
orl
mov
jns
sub
xor
xor
out
subl
xchg
addr16
repnz
add
xor
cmp
dec
xor
add
add
inc
jno
xchg
and
jge
loope
cmp
cmp
jmp
or
jmp
push
push
shll
jle
loope
adc
add
jmp
mov
mov
or
lods
adc
add
add
xor
daa
loopne
out
hlt
sub
imul
incl
or
add
loope
test
pop
mov
add
inc
and
lret
jnp
mov
pop
out
add
mov
and
repz
cmpsl
push
clc
lods
mov
out
add
mov
cli
mov
data16
add
add
jle
cmpsl
and
pop
test
es
push
in
sub
lods
jns
jmp
test
ss
add
call
addl
rolb
mov
sti
loop
movb
sbb
test
ljmp
adc
mov
cs
xchg
ss
es
mov
add
add
xchg
int
test
in
adc
mulb
int
enter
mov
xor
cmc
icebp
cmp
add
loop
pop
add
jecxz
imul
popa
lock
mov
pop
icebp
dec
sbb
add
in
mov
aad
out
push
les
call
inc
mov
add
lds
xchg
gs
popa
xor
add
xor
sbb
outsl
fisttps
es
dec
and
loope
sahf
xor
add
xchg
bnd
daa
xor
fnstcw
out
loop
test
bound
es
stos
xor
jmp
xor
call
adc
out
loop
rorb
add
add
lods
add
out
add
mov
pushf
std
call
pop
inc
or
es
jmp
fdivrs
subl
mov
data16
stc
xlat
fstps
pushf
adc
xor
sub
xor
and
jmp
xor
jp
fstpt
or
pop
add
imul
inc
jmp
ret
lock
add
cmp
scas
sbb
or
mov
jmp
adc
push
cmpl
jp
leave
inc
jle
xchg
add
mov
xor
inc
enter
cmp
cld
call
scas
rcll
cmc
cmpl
add
decl
xchg
push
jne
jnp
aas
add
xor
inc
add
add
inc
add
int
call
inc
scas
rcll
scas
jmp
test
xchg
movd
aas
add
xchg
nop
add
sbb
jg
ud2
test
icebp
pop
cli
aad
ret
icebp
hlt
rcrl
je
popa
fmuls
sbb
mov
sbb
jg
sub
loopne
jg
and
loopne
jg
or
add
sbb
rcrl
jmp
imul
test
xor
push
xlat
jmp
xchg
inc
adc
xadd
shl
test
adc
cli
xor
pop
or
outsb
pop
paddusb
jbe
call
xor
and
mov
sub
add
cs
fs
pop
inc
jne
out
int
fldt
loop
out
sub
pop
cmp
mov
testb
xor
bound
jno
inc
lods
insb
inc
fnstenv
stos
pop
addr16
fwait
or
imul
dec
loope
add
mov
add
mov
add
stos
add
sub
push
add
add
lods
or
test
xchg
cs
push
push
leave
frstor
stc
sahf
pop
imul
dec
adc
dec
sbb
dec
and
imul
call
push
and
dec
fildll
jg
enter
mov
frstor
pop
call
add
add
ret
pop
out
adc
add
or
mov
inc
sti
inc
cmc
jne
lods
repnz
xor
mov
xor
enter
inc
out
add
xchg
cmp
or
xchg
add
sub
push
mov
add
sub
add
gs
or
testb
add
ds
in
je
mov
and
jne
add
mov
xchg
stc
mov
or
punpckhwd
add
add
jno
mov
and
je
mov
fsubs
cli
xchg
xlat
pop
stc
sar
pop
or
in
mov
or
es
xchg
add
mov
aas
or
add
mov
jg
and
test
iret
add
stos
in
sbb
jecxz
inc
divb
inc
jae
xchg
mov
ljmp
dec
xchg
stos
sub
mov
shl
stos
mov
or
jbe
lea
je
or
mov
push
clc
push
addr16
cmp
outsb
fnsave
pop
push
add
add
push
jno
loope
sub
repnz
and
sub
mov
push
dec
outsb
ret
cmpsl
iret
shrb
pop
rorb
mov
out
push
xor
rorl
pusha
sub
add
and
fisubs
out
es
sahf
jl
inc
push
outsb
pop
jae
mov
push
adc
add
add
addb
adc
daa
repz
and
xchg
outsl
adc
mov
mov
add
xor
cmp
je
andw
and
div
dec
jb
sbb
fs
mov
and
fidivl
scas
jb
inc
negb
sbb
push
push
sbb
dec
in
daa
mov
rolb
add
sbb
dec
das
and
lret
jmp
mov
pop
das
stos
add
idivb
jbe
incl
inc
adc
add
and
xor
jmp
inc
repnz
and
xor
jmp
xor
push
and
xor
jmp
adc
push
and
xor
jmp
scas
aas
pop
add
add
add
loop
insl
bound
lock
push
mov
pop
xchg
inc
add
or
scas
push
mov
push
pop
or
and
out
out
cmp
xchg
xchg
and
iret
pop
lret
add
push
cli
push
adc
insl
or
add
add
add
add
and
xchg
ficomps
add
jmp
xchg
mov
jno
or
push
cli
jge
or
cmp
cmp
ljmp
pop
add
add
add
add
add
add
add
add
add
add
add
mov
and
add
jmp
add
add
es
add
es
add
es
add
es
add
add
fidivrs
shrl
out
shrl
loope
shrl
loope
shrl
loope
shrl
loope
aam
loope
lret
add
loope
shrb
loope
lret
adc
stos
loope
stos
loope
aad
loope
aad
fsubrp
aad
out
aad
fisubs
lret
sub
enter
sbb
sub
jle
sub
mov
leave
sub
push
aad
out
sub
movsl
shrb
out
rolb
leave
xor
mov
xor
leave
xor
xlat
dec
sub
push
add
add
sub
xchg
xlat
mov
xchg
xlat
jns
dec
mov
imul
and
je
pop
arpl
out
js
add
ds
shrl
lock
cmpsb
mov
and
push
mov
jns
xor
or
mov
imul
add
add
mov
psrad
add
push
adc
cmc
add
add
cmc
push
out
addr16
cli
dec
push
clc
mov
adc
sbb
imul
and
or
adc
mov
and
or
or
mov
test
loope
mov
pop
adc
mov
and
add
loop
ret
adc
test
inc
push
pop
cmpb
and
out
ljmp
ss
adc
test
sti
inc
sub
mov
shll
out
sbb
sti
push
push
cmp
jmp
xchg
movsl
movsb
pop
xchg
sbbl
rolb
sub
mov
xchg
movsl
insb
pusha
push
pop
or
add
loope
jb
add
mov
in
call
inc
daa
add
icebp
push
in
je
xlat
fldenv
add
adc
addr16
imul
in
bound
push
cmp
pop
or
loope
shl
sub
imul
mov
add
dec
inc
cmp
dec
mov
mov
add
mov
mov
and
jg
nop
mov
enter
stos
call
adc
pop
push
jb
movsb
inc
in
sbb
jl
insb
cmpsb
mov
or
xor
test
movsb
clc
cmp
push
sbb
jle
or
dec
dec
sbb
or
jl
inc
jnp
loope
pusha
testb
add
add
add
dec
xor
jne
xlat
loope
mov
sbb
jge
jg
pop
insb
jns
adc
adcb
icebp
stc
pop
imul
outsb
xchg
in
out
push
lea
mov
cli
xor
call
subb
push
or
inc
sti
cltd
inc
cld
jle
push
test
fdivrp
jmp
push
mov
dec
lcall
adcl
incl
add
imul
sar
popf
aam
xlat
addr16
jp
idiv
jge
dec
dec
jne
dec
cli
xchg
mov
xor
decl
idiv
dec
lahf
dec
dec
inc
fisttpll
adc
pop
xchg
pop
xor
adc
out
scas
mov
aad
pop
lret
pop
inc
dec
cli
add
or
push
xchg
add
add
hlt
dec
outsb
and
fxam
cmpb
mov
insl
mov
mov
xor
mov
jmp
push
sub
popf
lahf
enter
data16
jp
sub
cs
loope
fstpt
push
and
icebp
and
aad
lods
jnp
cmpsb
pop
adc
int3
ljmp
cmp
sub
sub
std
popl
add
xlat
jo
scas
mov
and
xor
jmp
iret
push
jne
pushl
scas
add
int3
pop
mov
leave
mov
mov
test
test
out
sahf
adcl
add
mov
jle
in
lock
lds
and
jle
in
icebp
mov
cmp
and
xor
mov
lods
add
addb
add
add
cmp
sbb
and
cmc
stc
lahf
addr16
mov
jg
popa
icebp
lds
ficoml
mov
iret
scas
cmpsb
fldt
fwait
push
pop
jmp
mov
std
push
xor
xor
jmp
arpl
ret
ja
mov
pop
stos
xchg
lcall
add
aas
pop
fwait
movntps
add
push
fldl
cmpsb
add
sbb
xor
out
mov
divb
scas
cmpsb
or
jl
xor
rorb
xchg
jg
push
aas
fisttps
fdivrl
arpl
pusha
inc
cmpl
push
mov
cmpsl
jno
repz
pusha
mov
or
add
dec
mov
out
pusha
cmpsl
mov
push
xchg
call
mov
mov
insb
pop
scas
rcll
xor
mov
mov
jmp
popa
pop
outsl
rorl
sub
mov
xor
mov
pop
xorb
add
loop
mov
lret
jmp
pop
rolb
mov
xor
mul
cmpsl
add
add
dec
push
add
and
pop
mov
dec
call
jae
pop
pusha
rorl
lock
cmc
pop
notb
pop
ja
mov
stos
adc
movsl
add
mov
fwait
pop
mov
jnp
dec
js
add
mov
pop
inc
sbb
jo
sbbb
insb
and
dec
mov
lea
add
add
mov
add
mov
cwtl
lea
xor
xor
xor
lods
lea
add
stos
ss
jg
data16
mov
pusha
mov
dec
jg
mov
pxor
xor
mov
cmp
mov
add
pop
nop
bound
mov
das
cld
aas
or
add
sete
jne
inc
loopne
or
ss
mov
add
add
mov
mov
cltd
jnp
cmp
out
les
test
fsubl
incb
int3
arpl
dec
push
jge
sbb
mov
pop
movsl
shlb
cltd
jnp
mov
inc
lret
and
jb
xor
daa
in
enter
repz
lock
add
add
add
jl
movsb
idivl
mov
mov
cmpsb
adc
jge
mov
shll
add
fbld
frndint
nop
mov
mov
ss
lock
int3
inc
push
nop
xchg
or
xchg
inc
pop
loop
jl
arpl
rolb
loop
mov
dec
adc
jmp
scas
jb
addb
push
out
add
icebp
adc
ljmp
lods
cli
out
xor
aas
loop
dec
mov
out
ret
push
jl
xchg
les
mov
jg
dec
xchg
and
repz
loop
aas
jae
test
lahf
outsl
orl
cmp
dec
loop
jbe
test
mov
add
jo
jle
xchg
shlw
sbb
out
jne
cmpsl
add
mov
dec
clc
or
inc
call
and
add
lock
out
jne
jns
jne
dec
mov
or
push
pop
mov
mov
repnz
loop
xchg
inc
push
add
daa
add
lea
inc
jp
add
loope
ret
or
mov
or
movsb
popf
jnp
lods
xchg
jnp
ds
je
cltd
or
clc
adc
or
add
ljmp
or
xor
mov
add
sbb
cli
jmp
aam
mov
loope
mov
jp
sub
xchg
adc
sbb
adc
mov
mov
jmp
add
add
add
add
xor
fdivrp
scas
add
mov
mov
lret
adc
cmp
mov
mov
sahf
mov
sti
pushf
jb
popf
pop
jns
jmp
mov
push
repz
mov
push
outsb
mov
stc
in
jae
mov
push
mov
mov
add
ss
ljmp
xor
insb
mov
je
addb
lret
jmp
rolb
std
out
popf
inc
cli
jne
dec
cli
xlat
sbb
aas
loop
pop
jne
ljmp
xlat
popl
push
mov
jl
pop
add
loop
jp
and
inc
mov
inc
cli
adc
sub
add
push
add
add
add
cpuid
pop
jnp
ja
xlat
add
pop
inc
dec
addr16
gs
lods
push
mov
lea
test
inc
cli
adc
pop
push
rcl
inc
andl
lcall
insb
mov
cmpb
add
pop
sbb
loope
inc
pop
sbb
les
insl
xchg
icebp
pop
xor
add
add
add
add
mov
out
and
sub
push
lcall
inc
lds
or
mov
inc
fs
inc
adc
mov
and
mov
int
ficompl
mov
adc
inc
xor
dec
inc
adc
xor
add
or
addl
mov
jg
add
and
jmp
add
mov
mov
jb
rcrb
or
jb
or
bound
xor
test
cli
jo
je
out
cmc
push
mov
stc
push
push
or
je
iret
cli
mov
add
out
mov
shll
mov
shll
cli
jmp
movsl
jae
push
add
add
mov
dec
cltd
idiv
inc
loop
test
idiv
mov
mov
mov
jmp
aas
cld
dec
insl
or
mov
loope
mov
jo
and
iret
inc
cmp
or
xor
adc
mov
leave
cld
les
call
xor
add
outsb
push
mov
lods
in
stc
xor
push
add
add
scas
jne
ljmp
ret
inc
idiv
loop
aas
je
xchg
inc
out
repz
movsl
cmp
xchg
or
test
stos
sar
mov
lcall
mul
inc
je
xchg
cmp
push
add
and
psubq
pop
inc
adc
or
jae
into
test
leave
outsl
sub
sub
push
sbb
jle
push
aad
imul
cmc
xchg
jl
notl
cmpsl
aam
dec
adc
add
xor
xchg
scas
cmpsl
mov
pop
pop
decb
and
add
out
lods
loope
cmp
or
sbb
lea
jno
ss
insb
pop
push
aad
jle
inc
or
pop
icebp
hlt
or
add
dec
jle
inc
xor
fiadds
cmp
in
mov
cmp
and
sbb
xor
outsb
and
lods
stc
and
scas
shll
xchg
pop
xchg
hlt
popf
mov
fs
jae
push
mov
sbb
cli
mov
xchg
test
mov
lods
movsb
mov
push
push
scas
xor
cmp
add
add
add
add
jo
xchg
test
cmp
add
jbe
push
adc
icebp
jo
insb
sahf
jg
insb
imul
push
cmc
jae
aaa
js
mov
add
ss
shlb
ret
test
mov
xor
insb
or
outsb
stc
mov
push
mov
add
sub
adc
add
pushf
leave
jne
xor
cld
loop
ret
add
std
push
mov
orl
dec
push
rcrl
into
cmp
call
lcall
shll
xor
sub
fsubrs
inc
xor
push
push
inc
cmp
sbb
adc
push
js
or
addr16
mov
add
add
sbb
cli
cli
dec
stc
in
or
out
adc
cli
fnstsw
enter
add
push
inc
mov
mov
cmp
sub
pop
push
mov
loop
add
popl
xchg
lahf
fsubrp
jg
mov
stc
sub
xor
gs
adc
sarb
psrad
je
push
adc
scas
xlat
std
adc
inc
popa
add
add
ljmp
mov
jne
push
add
sti
std
addl
test
mov
xor
inc
loope
out
call
cmc
outsl
iret
or
loop
stc
and
push
xchg
sbb
lods
movsl
call
inc
scas
movsl
mov
add
movsl
fdivr
and
cmpsb
mov
in
add
add
jno
lock
adc
cmp
rclb
xchg
cmp
inc
cmp
and
cld
scas
sub
mov
stc
stc
rcrb
aaa
data16
xchg
stc
fbstp
out
or
pop
mov
repz
add
fdivrs
add
add
test
ljmp
stc
xor
sti
adc
shll
inc
xchg
mov
sbb
and
pop
cld
rcrb
pop
push
sub
sub
xor
xchg
loopne
mov
out
loopne
fdiv
in
mov
sub
icebp
add
sti
loopne
or
testl
or
push
mov
mov
loope
cwtl
cmp
push
test
mov
cmp
mov
bound
inc
hlt
stc
enter
leave
xor
inc
jnp
cmp
xor
add
negb
push
sub
cmp
test
fcos
loop
xor
jecxz
mov
cmpb
add
add
aaa
cli
mov
rolb
int
push
xchg
push
adc
aam
std
jle
fmull
inc
mov
fcoml
mov
xchg
mov
hlt
int3
inc
push
or
mov
pop
mov
cmp
add
loop
adc
insl
cmpsb
addl
lahf
dec
imul
add
add
jmp
bound
cmp
inc
popf
stos
cmpsb
stos
mov
and
add
int3
out
loop
daa
mov
cmc
cld
out
mov
filds
aaa
test
test
sub
gs
mov
iret
jo
cld
fimull
pop
pop
mov
xor
sub
mov
out
shll
add
add
xor
jecxz
arpl
out
loop
cmpsl
mov
mov
movsb
add
or
subl
mov
inc
mov
jmp
jle
fldenv
movsb
fldcw
sahf
push
stc
xor
cld
loopne
add
pop
add
gs
call
push
je
jmp
xor
add
add
adc
push
fs
call
call
cs
movsl
jbe
loope
sbb
insb
push
cld
stc
jmp
sti
stc
jmp
adc
insl
jae
in
push
test
dec
test
cmp
insl
and
in
notb
nop
icebp
or
or
cmp
pop
add
add
inc
testb
add
insl
xchg
jnp
mov
inc
int
int
test
pop
mov
ds
mov
inc
mov
in
dec
popl
push
aad
xlat
xor
inc
jmp
add
jnp
adc
xchg
aad
jb
jle
or
das
xor
pop
dec
test
dec
add
add
outsl
mov
in
out
or
xchg
neg
aam
xchg
push
mov
mov
mov
stos
xchg
jle
pop
popf
inc
movsb
add
pop
mov
lock
mov
jae
xor
insb
test
test
add
add
or
cmpsb
dec
stc
fs
into
xor
cmp
xor
loop
aas
inc
or
pop
mov
mov
movsl
test
cmp
sub
sub
xchg
aam
push
mov
stos
xor
add
xchg
sub
icebp
pop
ljmp
fisubrl
std
test
cmp
imul
or
add
pop
jb
cmp
add
repnz
repz
daa
sub
outsl
shrl
pusha
push
imul
popa
sub
add
sahf
push
aaa
mov
jecxz
mov
cmpsl
xor
jb
mov
subl
sub
sbb
daa
pop
std
call
mov
mov
add
add
add
add
stc
stc
sbb
shrb
jge
in
pop
stos
fidivl
push
lods
popa
push
add
inc
xor
inc
insl
inc
and
add
loope
call
ret
test
xor
mov
inc
jp
sbb
jp
dec
xor
push
dec
pop
mov
mov
or
dec
push
fimull
add
add
add
add
jne
cld
mov
pop
inc
lea
aas
dec
push
jecxz
sar
jne
test
mov
arpl
js
push
idivl
add
xchg
fstpt
mov
aad
lret
or
cli
rol
jl
jp
cmp
add
jl
repz
mov
pop
or
lods
and
dec
or
add
add
add
xchg
enter
in
or
add
loop
adc
test
xlat
jg
jecxz
incb
inc
adc
andl
push
das
in
push
mov
stc
aad
adc
xchg
das
je
xchg
enter
addps
popa
mov
jge
cmc
dec
inc
fldcw
xor
js
pusha
jge
cmpsl
mov
mov
mov
pop
mov
sub
daa
add
out
outsb
cmp
out
sahf
clc
pusha
lret
lods
das
pop
outsb
or
add
lds
js
push
cmc
notb
jnp
jge
cld
lcall
cmpsl
mov
push
and
xor
jae
mov
pop
lcall
jo
jmp
add
add
jge
ds
jno
pop
call
inc
rcrb
inc
roll
movaps
movsl
pop
icebp
out
repnz
sub
popa
push
xchg
in
loopne
sub
lods
sar
mov
jns
xor
jmp
repnz
sti
and
mov
or
jae
xchg
jns
mov
pop
hlt
popa
jmp
insl
fdivr
cs
repnz
add
loope
adc
stc
and
xchg
ficoml
pop
call
call
ljmp
adc
incl
inc
loope
mov
xor
pushf
scas
sar
loop
leave
dec
flds
subl
fimuls
jae
sti
decl
cmp
xchg
out
stc
add
mov
arpl
inc
les
cwtl
or
add
sahf
inc
cmpb
jmp
mov
add
scas
dec
call
mov
jno
and
loop
in
mov
das
cli
lods
xor
inc
cmpsb
cmp
movsb
cmp
inc
in
sub
jnp
call
ret
push
xchg
sub
add
mov
cmp
ss
dec
xchg
test
imull
pop
out
ret
sub
inc
mov
pop
int
jno
xor
xor
icebp
adc
mov
pop
xor
add
inc
pop
sub
push
fbstp
out
jo
fisubl
sub
aad
sub
fs
and
cmp
add
mov
sbb
sub
sub
add
rolb
and
adc
pop
sbb
adc
fyl2x
cld
sub
sbb
add
adc
sbb
out
or
pop
pop
and
movsb
sub
icebp
add
and
push
mov
adc
adc
lock
fiaddl
add
sbb
sub
xchg
add
popf
in
inc
sahf
mov
adc
mov
dec
in
inc
inc
jmp
and
bound
jo
in
loope
or
or
xchg
xlat
and
std
sub
mov
jno
xor
fnsetpm(287
jmp
in
imul
cpuid
add
decl
sbbb
stc
lds
sbb
or
cmc
and
lock
fcoml
jnp
addb
push
leave
dec
in
stc
push
add
in
mov
adc
aaa
addl
xchg
cmp
outsb
cmp
decl
rclb
push
shll
cmc
adc
add
add
add
add
inc
add
cmp
add
add
pop
mov
mov
dec
pop
roll
es
cltd
std
xchg
clc
cmpb
pop
cmp
test
out
xor
jns
push
push
shlb
push
and
dec
lock
sbb
pop
test
pop
popa
into
mov
loopne
cli
iret
lret
adc
add
loop
es
dec
sbb
loope
std
andl
std
mov
cmp
es
in
fiadds
data16
jae
cli
in
xor
xor
out
shll
inc
jge
aad
xchg
fdivs
daa
out
in
inc
mov
cmp
outsb
movl
in
or
jge
and
jle
test
add
fldl
daa
add
outsb
movaps
fsubs
mov
fdivrs
jbe
dec
adc
imul
add
jns
sub
test
adc
inc
sub
std
sti
lods
mul
add
in
aam
fbstp
jmp
sub
in
add
loope
add
loope
push
jo
in
movsb
mov
jge
add
add
jb
or
add
loope
inc
add
or
je
inc
cmp
out
ljmp
out
in
cs
pop
in
dec
in
adc
out
in
mov
je
pop
ficoml
out
int3
mov
jmp
jl
push
add
cmp
push
sti
xor
les
dec
decl
add
add
add
add
mov
xchg
addb
add
push
dec
pop
ror
mov
xchg
mov
inc
xor
sbb
fcmovnbe
stc
ds
lods
mov
inc
int
in
sbb
aaa
xor
mov
je
inc
sti
add
fbstp
leave
add
adc
loope
sbb
testb
inc
loopne
addr16
call
mov
clc
idiv
add
add
testb
push
xor
push
cmp
outsl
adc
dec
imul
scas
or
add
cmc
jno
je
subl
xor
scas
mull
dec
cli
push
fmul
out
mov
aam
mov
jbe
movsl
push
add
movsl
jecxz
xchg
and
adc
gs
rcr
add
xor
out
cld
and
addr16
and
pop
xchg
push
xchg
mov
adc
loop
ss
dec
inc
imul
xor
fnsave
jp
pop
xor
add
jnp
lds
add
push
es
icebp
aam
lock
dec
in
jmp
mov
andb
and
loope
and
add
add
or
loope,pn
shlb
pop
dec
add
pop
xor
add
jmp
mov
mov
jns
loope
add
sub
push
je
add
out
mov
jb
test
mov
fnstenv
push
loope
andb
push
mov
inc
stc
push
and
hlt
daa
pop
cmc
cmp
dec
roll
call
repnz
cltd
cmp
out
dec
repz
fmulp
clc
push
mov
push
adc
stc
neg
insb
clc
call
jle
inc
jecxz
ljmp
mov
aad
std
and
push
adc
cmp
sar
fs
adc
add
scas
jae
pop
add
add
std
call
inc
call
push
mov
std
dec
test
adc
cmp
les
addr16
jmp
hlt
push
ds
imulb
in
insl
lds
lds
orl
or
inc
sbb
arpl
rorl
popa
movsb
pop
jmp
cmp
daa
lea
jecxz
sbb
mov
aad
add
add
adc
pop
mov
notl
in
sbb
fisttpll
jle
rcr
sub
mov
cli
aad
lds
shrl
xchg
out
faddl
add
gs
dec
pop
in
insl
mov
test
cs
sub
add
aam
je
bound
test
shrb
sbb
out
adc
add
hlt
xchg
std
jle
add
mov
add
out
fmulp
fs
and
cmpsl
roll
movsl
pop
loop
mov
push
loop
xchg
mov
mov
stos
or
daa
add
or
mov
sub
aas
push
adc
adc
pop
loope
add
mov
jmp
mov
lcall
add
add
add
dec
inc
idivb
enter
int
xchg
idivl
xor
xchg
sub
loopne
mov
popa
jns
scas
mov
pop
scas
dec
adc
dec
cmp
cmp
mull
dec
and
mov
dec
leave
jnp
fcomip
mov
mov
bound
dec
xchg
push
dec
aaa
push
cmp
add
mov
adc
add
add
add
add
stc
cld
or
inc
jmp
cli
jl
pusha
sbb
bound
and
add
loop
dec
adc
sub
mov
mov
loopne
inc
mov
gs
add
pop
and
in
mov
std
lret
andl
icebp
mov
adc
or
add
xor
repnz
push
dec
mov
dec
jmp
xor
jne
adc
mov
add
shrb
add
mov
sbbl
das
add
push
pop
and
out
std
cld
mov
xor
add
je
fbld
mov
lret
mov
and
cmpsl
mov
test
add
add
cltd
push
bound
icebp
sbb
std
out
lcall
push
es
mov
and
add
pop
or
out
cmpsb
adc
mov
xchg
cli
push
idiv
add
pop
xchg
outsl
or
clc
cli
in
dec
inc
je
pop
add
pop
dec
cli
repnz
pop
sub
dec
mov
adc
add
add
xor
fisubl
pop
mov
jb
out
loop
cmp
aam
insb
or
xlat
xchg
out
mov
sub
mov
movsl
mov
push
add
or
test
dec
loop
shl
mov
mov
push
cmpsb
or
add
dec
inc
leave
dec
jo
icebp
xor
inc
popf
fdivrs
push
loop
in
stos
daa
xchg
push
aam
add
add
mov
repz
xchg
jmp
xlat
push
dec
cmp
movsb
insl
push
adc
cmc
pusha
fs
dec
aaa
data16
int3
pop
or
pushf
jge
push
shlb
in
hlt
pop
adc
lcall
out
or
sbb
hlt
cmp
into
pop
fs
ja
sub
jg
cmp
xchg
pop
cmp
sahf
imul
xor
jno
stc
lcall
stc
cld
or
sahf
inc
or
stos
cmp
xor
hlt
mov
test
cld
mov
adc
std
mov
xorl
cmp
cld
call
jbe
jecxz
cmp
jp
xchg
cmpsb
dec
mov
or
and
sub
xchg
out
adc
add
or
cmpb
adc
cmp
push
testl
xor
push
and
fisttpll
sbb
cmp
ret
out
test
dec
xor
cld
adc
cli
popa
jno
or
std
jmp
push
ret
hlt
mov
cli
mov
cmp
and
cmpb
leave
cmpsl
push
add
add
xor
mov
mov
push
or
mov
mov
gs
out
xlat
repz
loop
std
push
push
or
push
imul
push
adcl
ljmp
jge
or
add
popa
popa
pushl
outsb
inc
mov
xor
xchg
repnz
ret
shlb
add
cmp
out
int
mov
les
inc
cld
jae
mov
xor
sub
cmpsl
mov
shll
stos
shlb
inc
daa
add
fstp
xor
pop
aad
je
out
pushf
mov
add
pop
xlat
add
je
sub
je
in
cmp
pop
ljmp
fisubrs
or
inc
xchg
xor
pusha
add
add
pop
pop
and
push
push
fisubl
xor
stc
push
repnz
pop
loope
inc
inc
fwait
call
stc
pushf
push
leave
jg
icebp
jmp
loope
ret
pusha
mov
fdivr
push
data16
fdivr
jmp
xchg
stc
out
imul
pop
pushf
int3
int3
sti
fisubl
vpsubq
cli
fdivr
scas
add
add
pop
pop
mov
xchg
lret
fisubl
mov
aaa
pop
mov
pop
xchg
jo
std
mov
mov
add
pop
sub
sbb
add
mov
inc
idiv
inc
cmc
cmc
push
xor
int3
cmp
adc
adc
cmc
xor
xor
ret
add
push
mov
add
mov
test
xor
mov
xor
add
xlat
xor
add
cmp
jns
shlb
je
movsl
cmp
dec
testb
stc
mov
lock
mov
inc
lret
push
push
inc
lret
push
dec
sbb
scas
xchg
loop
xchg
sbb
dec
ret
aad
dec
imul
add
add
add
add
dec
mov
imul
andb
dec
ret
les
ret
ficoms
loopne
xor
std
repnz
ljmp
pop
cwtl
test
stc
stos
nop
sbb
mov
aam
scas
jmp
rcrb
inc
call
mov
jo
push
mov
pop
leave
jmp
fstps
sbb
mov
mov
sbb
in
xor
in
sub
in
pop
pop
push
cmpsb
cmp
loop
outsb
mov
jmp
mov
nop
rcr
pop
lock
test
jne
out
insl
repz
gs
sub
lret
hlt
test
xorl
fidivl
inc
or
add
add
fisubl
dec
fisubl
cmp
addr16
loope
call
push
cmp
jecxz
and
jmp
fisttpll
inc
fdivr
inc
add
hlt
jmp
jp
xchg
xor
fcoml
mov
test
xchg
adc
jg,pn
jb
sarl
lods
push
enter
add
loope
test
out
call
mov
notb
mov
or
je
or
mov
mov
mov
call
movsb
notb
mov
or
je
or
mov
mov
mov
call
adc
mov
mov
or
mov
mov
test
idiv
mov
outsl
sbb
add
js
or
in
or
push
pop
cmp
add
cmp
cli
mov
add
ss
icebp
mov
or
adc
cmp
mov
lret
orb
xchg
psubusw
cld
push
lods
cmp
push
dec
cmp
pop
mov
pop
popf
in
xchg
xor
pop
mov
or
add
mov
incb
rclb
add
ja
push
pop
int
sub
repnz
test
sub
jne
xchg
pop
xor
xchg
mov
xor
nop
in
leave
lcall
pop
adc
lods
cmpsl
cwtl
cmp
lcall
xor
adc
fdivr
negb
mov
add
add
add
add
mov
add
fldt
pop
insl
pop
jg
fstps
pop
fdivrp
ds
adc
or
dec
dec
cmp
shll
and
pop
xchg
insb
add
adc
push
adc
mov
sarb
outsb
cltd
in
cmpsl
add
fidivl
sub
test
fs
mov
lock
sub
add
test
or
fiaddl
mov
lock
jae
mov
jmp
sub
bound
js
rcr
test
aad
push
lock
dec
dec
insl
clc
jb
scas
clc
push
loopne
stc
ss
push
int
push
jb
sub
je
cmpsb
je
xchg
sbb
cmp
les
push
add
add
dec
sahf
dec
call
enter
cmpl
pop
imul
sub
divb
inc
je
aad
fsts
cmp
jns
sbb
mov
xorl
xlat
pop
fldl
add
xor
add
cmp
push
in
xchg
dec
pushl
inc
je
xor
mov
int3
dec
lcall
add
add
add
add
or
loop
loope
aaa
cwtl
lods
push
xor
add
and
mov
jmp
push
aam
imul
pop
mov
lret
sahf
and
jl
sub
add
mov
xor
out
adc
pop
shll
ss
punpckhwd
jbe
fiadds
add
hlt
cmp
add
jecxz
std
ljmp
cmc
out
fdivr
decl
pop
les
lret
ljmp
xor
add
xor
test
lock
mov
loope
out
loop
call
aam
insb
or
fs
push
or
xor
mov
shll
hlt
cmp
sbb
shrl
mov
insb
ret
sti
add
add
repz
cs
add
xor
inc
xchg
cmpsl
sub
frstor
push
int
fcomp
lds
psubusb
jecxz
das
jnp
mov
testb
add
repz
cli
aam
iret
ret
pop
sub
int3
test
or
callw
psubsw
add
mov
mov
stc
out
mov
adcb
dec
add
add
test
lret
out
pop
pop
mov
sbb
inc
and
jae
stc
sbb
out
stc
push
and
lds
mov
int3
fdivrl
pusha
sbb
sub
xchg
cmp
sub
add
call
add
lds
stc
into
test
xor
add
add
orb
dec
or
and
jmp
pop
movsbl
add
cmp
call
add
xchg
push
inc
sbb
jmp
insl
pusha
jo
mov
xchg
push
mov
pop
or
mov
jmp
or
pushl
mov
test
add
and
imull
jg
lods
lea
jg
pop
add
ret
jg
xor
call
stc
xchg
js
fcmovu
cmp
orl
inc
ret
xstore-rng
cmpsl
xchg
aas
ret
std
jmp
fstps
int3
imul
aad
fisttps
xor
loop
xchg
pop
jp
xor
loop
dec
psrad
add
add
ficoms
fstl
vmread
scas
cli
divl
mov
adc
inc
in
movsb
idivl
mov
jmp
sarb
pop
xor
push
fwait
iret
sbb
and
lahf
jmp
or
out
js
xor
scas
or
cmp
mov
dec
push
clc
xor
fs
jg
cmp
add
add
mov
sub
loopne
jmp
iret
xchg
jg
cmp
mov
sti
cmpsl
sti
into
jp
ret
iret
add
lret
rorl
add
adc
rorb
add
test
fisubrl
ljmp
add
ljmp
pop
verr
loop
stos
loope
xor
daa
jo
cli
mov
add
add
push
mov
jmp
mov
add
sub
nop
and
arpl
hlt
mov
out
mov
mov
cmpsb
push
add
xor
push
sbb
xchg
lods
in
mov
xor
mov
int
hlt
xor
mov
cmc
ljmp
add
push
idiv
add
xor
mov
pop
and
add
idiv
or
sub
add
mov
cmp
xchg
stos
int
inc
dec
dec
test
das
aaa
imulb
cmp
cmp
stc
addr16
mov
fstl
sti
xor
or
xor
call
sub
inc
sti
xor
loop
in
aas
loop
inc
lret
cmpl
push
fwait
cmp
push
sub
cld
mov
add
add
add
add
jnp
push
lret
aad
int
imul
mov
jnp
pop
pop
packsswb
jmp
packsswb
leave
add
jns
jl
imul
flds
xchg
xor
xlat
jmp
out
out
dec
jle
adc
jl
jmp
xchg
or
sub
xchg
or
xor
loopne
add
in
lock
aam
ret
out
out
mov
sarl
shr
sub
sub
jl
mov
test
and
sar
aas
or
sub
outsl
add
inc
xlat
jecxz
cmp
mov
add
imul
or
out
outsb
pop
mov
lret
scas
add
add
repz
jns
cmp
mov
sub
add
je
pusha
dec
or
fs
pop
cmp
mov
cmp
xlat
repnz
or
imul
jge
fxch
je
pop
jne
call
loope
dec
loope
imul
int3
fadd
stc
stos
pusha
or
mov
adc
cmpsb
adc
testb
mov
jmp
add
in
jnp
loope
aam
cmp
jb
test
fiadds
xchg
mov
loope
je
sbb
mov
insl
add
test
and
adc
and
dec
icebp
fsubl
mov
mov
push
dec
cmp
jne
xor
int
stc
mov
jp
dec
imul
add
add
add
add
cmp
fldenv
movb
add
mov
inc
inc
adc
mov
stc
push
cmp
fadd
xor
dec
sbb
ljmp
orl
adc
repnz
pop
loop
cld
test
jns
das
and
cli
gs
xchg
sti
pushl
lods
mov
cli
sbb
sbb
jmp
incl
add
cmp
inc
mov
je
push
ja
fisubrs
daa
ss
fucomp
cmp
lret
stc
push
cmpl
lcall
push
sahf
loop
std
ss
jle
jg
push
jge
repnz
std
cmpsl
jecxz
iret
in
aas
loop
jmp
adc
or
hlt
dec
xor
andb
outsb
cmp
shll
fsubrl
add
add
add
add
jo
enter
xchg
or
xor
cmp
lds
add
xor
ret
fstpl
stos
push
pop
inc
les
push
adc
jo
cli
insl
testl
xor
cmp
aaa
lds
add
in
repz
xor
ret
jge
lds
pusha
or
mov
add
add
inc
fnsave
xchg
sbb
pop
call
mov
push
aam
int
stc
jmp
out
ret
jo
les
xor
bound
fsts
mov
loope
xchg
lret
pop
cmpb
mov
stc
push
addr16
loope
xchg
stc
outsl
adc
add
add
lret
lcall
sbb
lret
cmpsb
lret
lods
bnd
lcall
push
jne
dec
push
add
push
add
xor
cmc
pop
xor
addl
inc
or
xor
in
or
xor
pushl
sar
xor
pushl
out
pop
xor
or
add
mov
jmp
xchg
mov
psubusb
add
jo
ja
and
jo
jno
sub
jecxz
loop
mov
cli
mov
adcb
out
add
das
add
cmp
push
push
add
sbb
sub
add
add
in
sti
std
movsl
incl
in
dec
mov
out
incl
aad
mov
iret
push
incl
mov
pop
jmp
call
std
call
stos
mov
inc
popa
jb
je
push
in
or
xor
dec
sub
loop
loop
out
out
idiv
pop
out
ljmp
idiv
dec
jmp
add
add
cmp
add
call
add
les
loop
rcr
xor
test
pushf
add
cs
xor
sub
cld
sub
sub
fiadds
test
add
mov
pop
adc
filds
loop
pop
repz
movsl
sub
fwait
ret
add
cmp
jmp
loop
sub
add
out
mov
cmp
int3
add
out
jmp
fdivr
out
inc
lret
ja
loope
and
inc
and
inc
shl
out
xchg
scas
call
pop
test
mov
pushf
cmc
enter
cmp
jmp
gs
jae
or
mov
xor
imul
add
add
add
scas
push
sahf
popa
mov
cmp
cmp
adc
pop
test
mov
add
jnp
loope
subl
andb
insl
adc
ret
testl
inc
sub
add
mov
adc
sub
add
ret
and
sbb
add
subl
cmpb
insb
adc
add
dec
xor
dec
lods
add
jb
mov
lods
jae
flds
inc
mov
stc
movsl
repnz
stc
mov
popa
or
add
loop
insb
or
add
loop
push
inc
add
loop
js
data16
add
loop
jne
push
add
loop
push
or
add
loop
mov
das
or
xchg
add
push
jg
stc
adc
pop
add
pop
xchg
js
imul
cmp
sti
stc
push
pop
fdivr
fnsave
sti
xchg
or
xor
or
loop
fs
popa
rolb
scas
je
mov
xor
sti
mov
ljmp
mov
in
loop
imul
add
orb
mov
out
jmp
addr16
xor
in
inc
testl
inc
out
dec
stos
das
fs
loope
out
inc
adc
cld
cmc
mov
cmp
mov
cmp
cli
xor
leave
mov
hlt
insb
mov
mov
call
pushf
mov
call
add
add
add
add
icebp
addl
stc
out
xor
adc
stc
jmp
mov
loope
or
add
pusha
stos
lock
dec
mov
out
fidivs
add
arpl
sti
sub
or
loope
push
push
or
or
loope
mov
sti
mov
jae
cs
shl
mov
add
notl
shll
add
add
add
add
add
fprem1
decl
cld
xor
std
or
pop
test
mov
mov
jnp
jge
into
mov
cmc
mov
mov
add
cmp
pop
xsavec
dec
je
push
mov
decl
dec
movzbl
or
lock
dec
mov
cmpl
add
add
idiv
xlat
add
mov
mov
add
loop
xor
mov
push
pop
push
lds
call
popa
or
rcrl
stc
popf
enter
bound
xchg
add
stc
movsl
push
jne
add
loop
mov
imul
ss
call
fisttpll
add
or
sti
add
add
jae
jo
sbb
xor
dec
mov
or
int3
std
push
push
hlt
sti
cmc
das
mov
or
out
sbb
pminsw
rcr
sub
loope
out
nop
les
data16
out
jno
push
stc
fwait
loop
mov
inc
stc
mov
addr16
stos
mov
or
add
add
adc
mov
cmpsb
add
or
dec
mov
filds
ljmp
das
mov
loop
bound
out
jmp
dec
add
xor
subl
stc
jmp
pop
das
cli
sahf
ljmp
xchg
dec
sub
leave
dec
or
stc
jmp
stos
mov
add
sti
push
lcall
push
mov
call
pop
sar
push
shll
push
out
xor
jmp
dec
mov
add
mov
mov
jb
xor
cmpsb
rcll
clc
popa
ret
popa
add
pop
mov
decl
das
add
and
test
idiv
lds
add
idiv
xor
xchg
call
jno
lods
call
std
push
stc
mov
sub
add
test
es
js
pushl
jge
mov
mov
mov
push
lds
mov
int3
cmc
jmp
mov
cmc
pushl
jge
inc
ret
testl
loop
std
incl
add
loop
cli
clc
push
mov
stc
add
xor
das
lock
stc
in
inc
mov
sti
frstor
sbbb
dec
stc
ja
clc
stc
mov
sbbb
inc
mov
call
popa
or
adc
in
sti
jne
std
insl
repnz
stc
imul
add
add
cmp
jo
dec
inc
repz
xor
xor
cmc
fidivl
out
mov
mov
add
sti
addr16
add
jmp
popl
stos
jg
mov
cmc
add
out
shrb
addr16
stos
and
add
daa
arpl
popa
jns
cmc
mov
add
cmp
jnp
pop
jg
mov
cmc
mov
mov
add
and
add
lods
popa
idivb
mov
test
mov
mov
je
fidivrs
int
sub
jle
mov
rcl
mov
mov
je
dec
into
fsts
mov
mov
push
sar
jo
loop
jecxz
add
add
sub
xchg
out
pop
mov
mov
mov
add
sar
mov
nop
jmp
jns
stc
mov
stc
jmp
dec
mov
add
cmp
adc
sub
mov
cmp
inc
decb
sbb
mov
and
add
sub
insl
repz
lea
idiv
inc
in
ja
inc
ljmp
imul
call
pop
push
push
aam
out
hlt
cmp
jnp
sti
lods
icebp
cmp
mov
cmp
out
push
mov
mov
dec
xlat
mov
ss
jge
loop
in
stc
loop
std
lcall
in
cmp
mov
add
jp
bound
xor
lods
fiadds
test
lock
std
lea
mov
shrb
lods
sbb
and
int
in
cli
repnz
jae
push
jl
movb
inc
loope
popf
push
fiaddl
sub
add
int
xor
addr16
jne
mov
outsl
push
out
jge
add
daa
xor
pop
mov
add
call
repz
mov
fwait
mov
das
out
mov
and
leave
leave
lcall
popa
fmul
icebp
or
into
std
inc
xor
adc
stos
fwait
out
jmp
pop
leave
popa
loopne
icebp
out
loop
je
leave
mov
sbb
mov
mov
cli
popa
shrl
fcompl
add
add
mov
xchg
inc
pop
faddl
icebp
imul
add
jb
shrb
mov
stc
push
aad
fcoms
mov
stc
push
push
xor
stc
cmp
stc
loope
cmp
fbld
ficoms
sub
sbb
mov
stc
push
and
stc
cmpsb
loope
outsl
push
add
test
sti
xchg
shlb
jp
inc
mov
test
mov
jbe
mov
insb
mov
or
test
mov
mov
pushl
in
pushl
insl
sub
movsb
std
hlt
shlb
movsb
std
in
test
bnd
mov
add
add
scas
jns
and
fdivr
and
imul
add
lods
loopne
ret
testl
jbe
imul
jno
idiv
adc
testl
sub
idiv
mov
pop
and
loop
fsubrl
cmpsb
mov
call
stc
das
inc
out
stc
pop
or
cmp
xchg
jl
pop
out
stc
add
add
dec
test
out
stc
xor
mov
std
xchg
lock
adc
dec
mov
mov
ljmp
mov
pushl
clc
push
out
pushf
ljmp
enter
adc
lahf
cmp
stc
jmp
mov
or
movsb
ret
cltd
mov
push
fldt
pop
mov
add
lcall
dec
or
and
xchg
xchg
hlt
and
cmpsb
add
daa
cmpsb
add
daa
cmpsb
add
cmpsb
add
cmpsb
add
cmpsb
add
mov
jns
lods
ret
and
movsl
dec
add
ret
jmp
mov
incl
in
lcall
xor
add
xor
adc
pop
push
adc
stc
push
inc
jge
xchg
dec
mov
cmc
cmp
mov
push
mov
loopne
movsl
pushf
ds
dec
stos
stc
bound
pop
shrb
xor
mov
sub
and
push
and
jno
xchg
sbb
les
jno
xchg
add
add
call
leave
test
in
sub
movl
enter
jmp
ljmp
cmp
adc
or
imul
imul
push
inc
cli
push
pop
push
jno
add
mov
int3
out
int3
int3
rcrb
mov
adc
add
jo
inc
mov
add
add
pop
out
cmp
add
or
pop
cmp
das
mov
int3
jg
int3
int3
loop
in
imul
cmp
fcomip
mov
mov
in
data16
shrl
mov
mov
or
out
jmp
dec
or
inc
sub
add
add
xchg
inc
jge
subb
sarb
xor
movsl
in
pop
and
inc
add
hlt
add
loop
pop
cld
loop
add
mov
mov
stc
stos
sbb
je
adc
leave
fisttpll
cli
pop
out
in
dec
andl
lret
les
xchg
call
ljmp
mov
mov
in
add
add
jo
dec
mov
aas
ret
dec
ljmp
out
loop
xor
push
inc
cmpsl
add
jl
mov
jl
mov
jl
aas
push
cmp
incb
mov
mov
pop
aas
xor
jecxz
inc
out
adc
or
repnz
adc
test
cmp
adc
cmp
sub
xor
bound
push
adc
push
adc
adc
sar
push
inc
xor
xlat
outsl
push
jo
cltd
stc
fmull
lock
inc
jnp
stc
jo
test
lods
push
adc
add
iret
imul
test
aaa
add
loope
push
scas
stos
push
push
jb
or
cmpsl
test
jae
or
adc
jl
stc
push
add
add
adc
aam
xor
xor
add
push
in
and
les
divb
out
sub
insl
or
lcall
test
inc
mov
cmpsl
subb
inc
add
add
jnp
jnp
ja
jnp
adc
inc
add
test
inc
add
sbb
dec
das
jecxz
mov
cmp
or
add
add
add
add
mov
dec
xor
inc
pop
sub
or
out
push
addl
adc
dec
lea
loop
ss
lcall
xor
mov
lcall
int3
push
add
fsubrs
movsl
test
adc
cwtl
dec
dec
xor
shl
std
jmp
ljmp
jge
jge
add
add
push
mov
add
push
mov
in
arpl
or
cwtl
std
ljmp
jbe
rolb
xchg
push
xor
stc
das
cmp
xchg
xchg
or
inc
dec
push
mov
mov
call
lods
mov
jmp
and
jp
adc
inc
loop
scas
add
inc
outsl
nop
scas
sub
sbb
and
jns
ficoms
push
add
mov
mov
jmp
rcrl
stc
inc
loop
and
jmp
and
jnp
cmp
ljmp
ds
movsb
sti
lods
test
jnp
mov
mov
out
sub
cmc
test
jge
adc
xchg
or
cmp
fidivs
add
fwait
push
stos
add
add
cmpsl
and
in
lock
pop
mov
dec
stc
push
scas
js
or
orl
lods
dec
in
add
jge
stc
outsb
or
sbb
pushl
loopne
cmpsl
jnp
fsubrs
adc
inc
daa
rcl
jb
bound
push
cmp
mov
lods
push
icebp
enter
cmpsl
in
mov
mov
popf
jge
add
add
xor
mov
jge
sub
scas
add
xor
xorl
jmp
and
sbb
je
js
inc
je
mov
pop
pop
xor
and
sbb
dec
lea
or
aam
lcall
pop
dec
cmpsl
stc
mov
movsb
jle
xchg
sahf
test
cld
addb
not
or
or
aaa
shlb
and
add
jnp
sub
leave
xor
test
sub
inc
loop
mov
and
and
sub
xchg
js
out
adc
cmp
pop
or
sub
push
sub
in
out
fisubl
ss
dec
sub
and
xor
leave
add
mov
pop
lds
xchg
std
jmp
dec
dec
jge
and
xchg
cli
add
add
pop
or
scas
push
ror
cmpsb
in
in
pop
into
add
lock
aam
mov
pop
pop
push
add
pop
cmp
lret
loop
mov
mov
add
pushl
add
ds
xor
out
aam
filds
pop
notl
cmp
xor
mov
popa
outsb
stc
pop
jmp
cmp
mov
mov
mov
lgs
fisttps
xchg
je
iret
scas
je
iret
cmpsb
je
sub
adc
pop
idivb
add
imul
ds
in
push
adc
or
push
add
mov
clc
hlt
test
testb
push
xor
sahf
aad
or
lock
out
pop
and
add
daa
push
add
pop
mov
sbb
out
popa
pusha
loope
out
xor
test
push
cli
push
mov
and
test
or
std
jns
xor
ljmp
jmp
mov
add
bound
stos
stc
add
jae
insb
cld
jp
aas
lods
repnz
sub
add
addl
clc
xor
dec
aas
push
cmp
adcl
std
or
sti
inc
jge
adc
testl
shrb
addr16
or
inc
mov
mov
repz
cli
add
pop
sti
int
sub
call
or
add
add
pop
aas
xchg
idiv
pop
into
les
loop
ret
insl
std
cs
and
jmp
jle
xor
xor
push
cmp
in
clc
cltd
fnstcw
test
mov
mov
mov
in
mov
jnp
push
inc
or
jecxz
add
push
cmc
or
dec
pop
imul
std
jmp
push
inc
je
add
popa
rolb
repnz
test
adc
add
loop
call
aas
addr16
ret
sbb
je
add
pop
lock
mov
xchg
mov
push
mov
xor
les
fs
pop
ljmp
ja
imul
pop
movsl
rcr
pop
xor
add
add
xor
inc
pop
icebp
sbb
notb
xor
das
out
out
adcb
pop
jmp
in
mov
cli
incl
push
and
stc
pop
negl
sbb
jge
push
mov
stc
ss
rorb
lods
repnz
adc
js
push
add
push
mov
mov
daa
sub
push
and
test
jb
iret
cmp
xor
bound
or
add
inc
call
out
dec
shl
inc
jae
bound
pop
das
cs
loopne
mov
orl
push
xor
pop
enter
mov
test
cmpl
stc
incl
add
cmp
inc
cmc
jae
inc
xor
add
call
mov
jne
aas
incb
or
or
xor
add
xor
add
sti
jno
test
push
mov
and
mov
cmp
mov
mov
aas
push
xor
inc
and
mov
inc
dec
cld
and
aas
add
add
add
pop
push
jo
sub
cmpsl
xchg
add
and
fiadds
imul
cld
test
xor
jg
jmp
xchg
jno
fnstenv
fldt
jmp
add
jns
mov
mov
jl
inc
insb
test
jo
push
movsb
adc
xchg
movsb
hlt
xchg
or
add
out
inc
mov
loop
push
movsb
shlb
out
lahf
mov
adc
lea
cmp
es
xor
add
jp
out
out
xchg
sahf
inc
add
fsub
add
xor
push
sub
fisttpl
jae
repnz
lods
adc
or
sub
jecxz
cmp
subb
subl
add
add
pop
mov
icebp
in
popf
push
int
jno
addl
inc
or
adc
stos
add
pusha
mov
jmp
xchg
inc
or
imull
rorb
adc
aaa
ficoms
std
ljmp
mov
scas
in
inc
mov
filds
cld
xchg
in
daa
mov
add
add
mov
mov
incl
outsb
xor
push
test
mov
loope
add
jge
loope
jmp
out
imul
shrb
xor
jmp
mov
xchg
pop
mov
xor
shr
push
mov
in
loop
xor
mov
cmp
add
lods
xchg
sub
push
add
inc
inc
mov
aam
jnp
xchg
aas
lahf
cli
sahf
pop
lahf
stc
pushl
shlb
jg
dec
xor
mov
test
cmp
and
and
pop
xchg
leave
jns
je
cmp
xchg
sbb
movq
jmp
orb
push
inc
cmp
enter
leave
mov
lock
mov
add
loop
inc
insb
imul
in
mov
stc
jge
or
jns
or
sar
fidivl
sub
imul
add
icebp
aaa
test
out
imul
lods
xor
inc
jbe
inc
pop
imul
loop
fistpl
sbb
add
add
jecxz
jno
and
das
jmp
movsl
cmpl
inc
cmp
out
cmp
mov
sbb
lcall
pop
inc
out
scas
jo
insb
lcall
pop
lcall
dec
lcall
loop
imul
lcall
and
out
and
pop
aas
add
add
add
sbb
mov
mov
fimuls
dec
mov
and
cld
lock
push
jne
in
adc
jb
lock
repz
es
and
and
xor
imul
mov
jo
sbb
leave
bound
mov
add
add
xor
push
dec
and
call
lods
pusha
push
mov
loope
les
adc
jbe
cmp
mov
sub
je
scas
clc
add
movsb
test
dec
dec
jo
jnp
adc
out
mov
jp
mov
or
xchg
xor
add
test
dec
add
add
push
insb
mov
xchg
movsb
gs
lea
sub
mov
mov
mov
dec
mov
cwtl
and
lods
add
loop
mov
dec
mov
jmp
mov
mov
or
arpl
mov
dec
pop
jne
loop
addb
mov
mov
mov
incl
add
cmp
lds
jbe
aad
jge
and
mov
dec
or
and
test
loop
mov
or
sbb
popf
adc
mov
mov
jecxz
dec
jge
inc
xchg
xor
ljmp
xor
stos
mov
iret
jle
adc
stos
clc
pop
xor
add
mov
pop
mov
inc
in
xchg
push
sub
addr16
jge
jmp
add
push
sub
adc
jmp
pusha
or
call
inc
cli
sbb
add
fidivl
pop
dec
imulb
pop
loop
out
and
movb
mov
stos
xchg
das
popa
addl
fsubrs
add
outsb
in
hlt
insl
jmpw
push
mov
loope
test
sub
cmpsb
mov
cwtl
test
fs
adc
loopne
stos
aam
xchg
pop
das
in
jo
and
adc
fisubs
test
xor
bound
add
inc
icebp
mov
xchg
dec
mov
adc
loope
repnz
negl
call
stos
mov
add
add
add
add
stc
jno
pushl
inc
add
loopne
rolb
sub
xor
add
lods
xchg
cmp
add
or
mov
add
mull
mov
addl
mov
mov
bound
lock
or
xorb
sbb
pop
xor
jnp
mov
cmc
je
orl
popa
insb
incl
add
clc
xor
ja
call
pop
xlat
addl
testl
adcb
aas
cmp
cmovs
inc
movq
dec
scas
idiv
sub
sahf
cmp
adc
mov
xchg
cwtl
cwtl
inc
je
jmp
pop
les
std
xchg
add
loop
jbe
add
add
cmovo
inc
add
or
mov
push
push
or
mov
cli
out
jno
xor
cmp
xor
mov
xor
mov
and
pop
addb
xor
jmp
daa
or
xchg
jecxz
push
jo
xor
hlt
and
ja
repz
out
test
add
mulb
mov
inc
into
push
sub
test
cli
jl
sub
ljmp
add
jo
fisubs
push
jge
dec
pusha
cmp
cmpsl
das
adc
jmp
fs
sub
add
xor
jl
add
xchg
mov
xchg
stc
call
pop
insl
adc
loope
stc
inc
and
sub
stc
cs
add
push
gs
sub
mov
xor
scas
stc
jge
jecxz
bound
and
sub
out
ja
shl
push
jge
rcll
cmpl
adc
jp
mov
xchg
stc
cs
or
add
add
outsb
je
xor
and
addl
inc
and
leave
mov
jl
inc
push
xor
sub
push
or
cli
and
add
lcall
xchg
stc
mov
idiv
dec
pusha
mov
int3
mov
push
in
mov
cmp
add
mov
add
xor
jge
add
xchg
cmp
test
add
cmc
or
andb
int
cmp
loop
sub
fidivl
and
add
ret
cmp
sbb
jae
push
inc
and
ret
imul
xor
xchg
std
mov
adc
jge
xchg
cmc
xchg
popf
sub
dec
es
stc
std
ret
rcrb
jbe
add
add
scas
jbe
push
xor
cli
aad
js
addr16
adc
pop
sbb
sub
xor
test
fcmovbe
inc
sbb
cltd
std
cmp
xor
xor
mov
testl
sahf
jl
mov
scas
add
inc
loop
cmpsl
aaa
in
out
and
mov
add
out
mov
xor
mov
add
add
loope
js
sub
dec
xor
js
push
pop
xor
enter
xor
jecxz
sti
mov
int3
movsb
mov
clc
notl
andl
out
insl
loope
jb
ret
in
idiv
add
cmp
pop
ret
call
pop
repz
pusha
and
aaa
push
jne
in
repnz
ret
sub
cmp
add
loopne
xor
jmp
pop
jns
stc
bound
mov
adc
loope
add
hlt
jo
bound
ljmp
sbb
mov
or
cmc
mov
mov
loop
cltd
cld
ja
fwait
mov
mov
fstpl
add
cmp
dec
sub
call
add
addl
add
test
push
cmpsl
rcrb
push
ret
lock
daa
add
loopne
std
and
add
xor
jae
ss
mov
push
xor
push
and
jbe
int3
jle
in
mov
mov
inc
jge
hlt
or
adc
xor
movq
sti
mov
or
xchg
mov
xor
add
std
add
loop
jp
rcrl
dec
add
lcall
pop
mov
inc
add
cmp
enter
jnp
or
dec
cmp
push
aam
scas
add
inc
pop
cmp
loop
std
jmp
in
pop
cmp
ljmp
xor
imul
cld
shl
std
jmp
and
sldt
add
cltd
test
shlb
add
pop
mov
aam
roll
mov
sti
fs
add
scas
leave
repz
imul
sbb
xor
add
or
sub
xor
jp
sub
add
pop
in
mov
sbb
dec
stc
iret
add
mov
lret
mull
inc
fidivrl
pop
rolb
add
xor
add
cltd
pop
repnz
jae
repz
jo
add
lock
enter
shll
mov
xor
popf
xchg
add
push
je
add
rcrb
ret
loope
icebp
fsubs
jae
sub
lods
or
icebp
sub
mov
mov
icebp
pop
jp
icebp
decl
clc
out
and
add
add
add
add
push
push
xor
shl
mov
or
loope
add
inc
adc
ret
loope
push
fisttpll
or
loope
sub
cmp
cmp
imul
mov
fldcw
sub
jmp
nop
lds
inc
inc
clc
jmp
xor
or
adcl
add
sub
sbb
notl
scas
add
mov
loopne
clc
lret
or
enter
pop
or
adc
add
add
mov
je
push
cmp
xchg
push
in
call
nop
dec
and
loop
out
push
in
pop
jg
inc
add
add
cltd
jmp
add
mov
mov
jbe
pop
adc
sbb
dec
fdiv
int
std
test
jb
inc
cli
mov
std
test
ret
jnp
jnp
lcall
in
aas
clc
cmpsl
std
jbe
xor
jbe
cmp
dec
ficompl
sbb
xchg
add
repnz
jmp
mov
adc
mov
sub
shlb
jmp
sub
aas
into
mov
add
pop
xor
cmp
out
pop
jp
sub
test
sahf
xchg
add
data16
add
hlt
popa
and
add
aaa
pop
add
mov
arpl
jp
mov
stos
add
add
xchg
push
sub
shr
pop
jnp
loop
xor
add
out
js
push
outsb
rclb
loope
inc
or
and
jmp
xor
jmp
sub
cmp
insb
jecxz
jno
lcall
lret
jmp
sub
sub
out
in
add
push
xor
xor
aam
jge
add
add
cmp
jmp
adc
ds
cmp
push
and
push
lock
jo
lock
orl
loope
stc
add
ds
mov
mov
mov
mov
mov
sbb
fsub
popf
in
xor
mov
lret
ret
jle
xor
push
mov
rorb
inc
add
add
jp
add
xor
idiv
sbb
add
xor
test
add
add
aas
mov
jo
inc
pop
xchg
mov
enter
lods
imul
xor
je
mov
adc
loopne
test
cmp
test
sub
mov
mov
lret
xor
pop
pop
mov
mov
add
push
lcall
or
mov
push
ficoml
rorl
std
jae
push
hlt
imul
push
adc
adc
cltd
mov
add
pop
push
mov
ror
push
inc
xchg
rolb
orl
jmp
cltd
std
shl
std
jmp
cli
inc
adc
xor
add
xor
add
add
xor
test
add
add
aas
daa
movsl
xor
jns
and
dec
ret
cmpsl
popa
jno
loop
stc
ljmp
sbb
push
and
jecxz
xor
push
xchg
mov
test
sub
shlb
pop
push
stos
scas
dec
test
cld
out
mov
jge
inc
mov
jno
and
out
loop
sbb
pop
cmc
xchg
mov
mov
add
add
loope
push
dec
fstp
add
mov
mov
push
out
repz
jmp
pop
jg
jmp
stos
push
subl
xor
test
loope
inc
test
sbb
add
loope
icebp
cmpsb
icebp
xor
jmp
loope
add
test
fisubs
or
loope
shrb
out
xor
add
repz
push
xchg
scas
sarb
not
insb
cmpsl
std
adc
icebp
xor
jbe
or
pop
xchg
push
inc
shl
orl
je
mov
hlt
add
sti
jb
mov
add
push
sbb
clc
sub
push
pop
fsubp
movsl
imull
addl
clc
sti
add
add
sti
lods
jne
mov
mov
jecxz
xor
pop
test
inc
sti
cwtl
stc
decl
sub
jns
add
notb
fcoms
add
push
inc
cld
loop
orl
xchg
xchg
mov
int
push
jge
ljmp
cli
shlb
or
adc
cmc
add
add
inc
mov
test
addl
xchg
mov
aas
xor
mov
cmp
movsl
add
mov
test
orb
imul
fldl
push
or
mov
jl
xor
adc
xor
jne
jg
rcrb
movsb
or
mov
pop
out
add
mov
in
pop
outsb
leave
addr16
movsb
shlb
out
sub
mov
loop
out
pop
out
out
ret
out
pop
clc
out
mov
xchg
add
inc
add
add
mov
or
xor
inc
xor
mov
stos
xor
pop
neg
mov
inc
outsb
push
mov
out
add
add
xor
jmp
fidivs
adc
xor
gs
jmp
or
pop
add
out
add
loope
xchg
loop
xor
loop
es
out
xchg
jmp
mov
pop
add
jmp
jmp
bound
jae
jo
jns
and
std
jp
mov
sbb
add
mov
leave
fnsave
std
push
xor
add
mov
inc
jnp
jecxz
dec
xor
out
js
aaa
or
add
scas
out
jmp
or
jae
adc
xor
jne
jne
add
lret
inc
das
add
cli
int
or
add
or
add
sti
scas
cmp
xchg
das
repnz
add
add
sbb
add
je
add
sti
call
push
imul
mov
shl
mov
and
xchg
jl
xor
test
add
loop
outsl
xchg
sbb
test
add
fsubs
add
test
cmpsb
std
jmp
mov
xor
dec
mov
sbb
incl
add
add
xchg
in
or
add
xchg
lcall
cmp
shl
push
add
xchg
jb
push
les
shrb
jb
inc
xchg
jle
shl
ret
push
loop
out
sbb
sub
and
arpl
mov
and
aas
jbe
and
insl
cmc
mov
add
add
dec
sub
fldl
loop
orl
push
xor
ss
jg
es
fcmovnb
in
test
xchg
movsl
test
sub
or
pop
test
sub
mov
fs
add
xor
pop
jmp
ret
outsb
int
xchg
fiaddl
mov
jge
js
clc
jnp
jmp
add
add
add
add
arpl
fisttpll
outsb
lea
sbb
bound
scas
sub
adc
xor
jmp
loope
test
incb
and
repz
jge
lret
idiv
jmp
loope
or
pop
data16
lahf
std
shl
fcomip
ljmp
test
sbb
and
add
add
bnd
cmp
jl
mov
add
repnz
jb
std
or
mov
xor
ds
je
movsb
and
add
add
pmuludq
dec
lock
out
pushl
cltd
sbb
inc
jecxz
inc
push
jnp
add
mov
lods
aas
dec
scas
test
dec
lea
push
les
incl
add
sti
sub
jo
and
call
mov
mov
fsub
or
or
or
loop
cmp
xchg
verr
xchg
pusha
jmp
sub
popa
es
jmp
push
inc
push
dec
mov
jmp
xchg
popf
test
push
stc
jle
iret
out
subb
push
mov
and
icebp
jl
stos
std
or
or
add
add
mov
xor
mov
test
jg
xlat
pop
mov
jmp
ss
test
mov
test
aad
pop
int3
gs
adc
stos
add
mov
jp
xor
lods
das
les
cmp
xor
mov
xchg
out
loop
data16
mov
fidivrl
sub
add
mov
add
jne
lahf
xchg
and
dec
pop
xor
mov
cmp
xor
lock
sarl
dec
js
addr16
push
pop
in
xor
lock
stos
movsb
xor
add
mov
adc
or
insl
cmpsb
add
jmp
insl
xlat
fs
and
loope
add
jne
fiadds
pop
jmp
outsb
jmp
bound
add
movsb
gs
sbb
sub
rcrb
sbb
xor
cs
gs
xor
add
loope
mov
pop
or
imul
scas
dec
lea
repz
jbe
inc
loope
add
arpl
testb
dec
mov
inc
in
or
movsb
and
xor
add
cld
add
fadds
lret
xor
mov
mov
lret
loopne
out
fildl
mov
add
scas
cmp
inc
out
cmp
idivb
sarb
hlt
cmp
idiv
nop
out
test
xchg
jae
lods
jne
dec
xor
lods
testl
testb
mov
inc
cmp
dec
clc
add
add
mov
add
or
cmpsl
xor
in
scas
stos
stc
in
fnstcw
inc
inc
in
xchg
lcall
adc
fs
sbb
lret
std
jl
jl
jae
add
mov
ds
imul
jne
sbb
out
mov
jb
adc
loope
and
add
add
pushf
scas
stc
popa
data16
data16
add
sub
std
jmp
push
orl
loop
fs
jbe
call
lcall
lcall
insb
out
aad
out
pop
in
xchg
push
cmp
lcall
or
out
sahf
sbb
mov
repz
test
and
dec
jnp
add
xor
arpl
sub
sub
insl
inc
add
loop
out
mov
jecxz
push
les
jg
clc
xor
test
sbb
sbb
add
jp
in
sbb
jb
cli
loope
add
pop
add
jmp
loope
add
je
mov
in
stc
jmp
leave
lods
dec
add
add
inc
loopne
pusha
and
mov
stos
or
nop
xchg
xor
and
add
push
add
out
pop
jb
and
pop
icebp
out
cmp
mov
test
lock
sub
inc
stos
dec
cltd
mov
ljmp
cmp
les
das
add
jl
imul
mov
add
xor
mov
add
add
add
add
das
add
fmul
mov
add
add
orl
dec
push
sub
or
xor
xor
inc
cld
add
pop
mov
ret
inc
cld
add
push
inc
or
add
stc
jnp
lret
loopne
xor
lds
js
add
dec
nop
cli
mov
add
sub
inc
hlt
jmp
enter
mov
decl
clc
orb
lcall
ret
out
adc
aam
icebp
mov
mov
xchg
imul
mov
mov
jne
mov
das
jne
scas
dec
fwait
adc
dec
jne
pop
ret
out
stc
mov
mov
inc
xchg
enter
xchg
mov
jb
pop
add
add
add
add
add
std
jmp
push
xor
loop
sbbl
fstpt
xchg
push
mov
out
in
fstpt
loop
and
jno
add
nop
outsb
inc
lods
sub
fisttpl
xlat
insl
push
fstpt
pop
ds
sbb
mov
xor
cmpsl
divl
pop
jmp
mov
addr16
roll
add
mov
jne
add
mov
ljmp
xor
sarb
mov
mov
fdivr
aas
gs
in
scas
out
add
loope
ss
loope
test
in
inc
shrl
add
jbe
stc
jbe
xor
or
xor
xchg
sahf
in
bound
mov
or
loope
or
add
sahf
in
pop
cli
inc
cs
add
loope
inc
mov
lret
shrb
add
insb
add
pop
das
add
loope
mov
ss
sti
bound
jge
sub
or
repnz
clc
add
jo
sbb
dec
add
clc
cmp
lret
loopne
mov
aas
inc
js
stc
mov
add
mov
inc
mov
add
je
adc
xor
mov
or
add
stos
sub
ret
jo
addl
add
ret
insl
scas
leave
push
div
cmp
and
dec
pop
cld
add
pop
mov
popf
inc
cld
add
inc
clc
jb
add
push
std
int3
adc
push
pop
dec
lods
dec
rcrl
mov
add
add
loope
hlt
or
cmc
xorb
lcall
ret
out
loopne
aam
sub
cmc
mov
pop
cmp
pop
xchg
sarl
clc
js
push
mov
jns
sbb
enter
test
fcomip
mov
sub
inc
scas
sbb
mov
cld
loop
jns
loope
out
add
add
cmpsb
in
test
jle
lret
repnz
loop
sbb
insl
out
pop
push
outsb
cmp
test
cmp
jno
pop
cmp
repz
cli
aaa
ljmp
jbe
pop
xor
sbb
add
jne
add
mov
les
add
movsl
xor
iret
xor
sbb
jnp
push
dec
inc
push
cmp
bound
cmp
test
ficoms
jmp
xor
test
inc
jge
imul
scas
jecxz
add
loope
inc
xor
jo
sub
insl
lret
pop
call
nop
jmp
xor
aaa
in
dec
jne
jbe
mov
imul
sub
jno
add
add
test
call
mov
imul
push
pushl
inc
add
mov
xor
jno
or
aaa
daa
cli
decl
and
mov
shll
hlt
cmp
mov
clc
fdivrs
shufps
decl
inc
xor
outsb
wrmsr
outsb
orl
inc
sub
sub
sub
add
or
mov
pusha
and
or
xor
ja
inc
inc
xchg
and
cmp
and
mov
and
jo
aas
mov
out
hlt
inc
and
cmp
pop
std
mov
out
hlt
loop
mov
pop
dec
jl
xchg
test
inc
jbe
and
xor
mov
lods
xchg
or
into
ss
mov
add
add
add
add
cmpb
aaa
hlt
imul
inc
loop
cmpb
push
std
rcr
std
jmp
mov
and
pop
repnz
lcall
pushf
xchg
or
lock
jmp
add
fstl
jns
push
repnz
and
dec
adc
xor
scas
xor
jg
xor
add
add
jmp
in
sub
mov
push
movsl
andb
mov
addr16
fisubl
popa
outsb
cmp
das
sub
push
repnz
fs
into
pop
outsb
cmp
xor
adc
out
xchg
in
fwait
lods
cmp
add
xor
punpckhwd
jp
cmp
cli
mov
or
push
subl
jp
pusha
jo
ret
xor
add
testl
loopne
test
sahf
push
or
xor
jmp
loopne
test
sahf
push
sbb
cmpsb
push
inc
shll
jno
add
aas
jmp
jae
shr
xor
jmp
push
mov
jmp
xor
bound
add
bound
sbb
jp
out
test
xor
out
add
jg
cli
sbb
scas
lret
daa
jge
imulb
jge
aad
add
in
sbb
inc
or
repz
xchg
repz
int3
add
lret
call
pop
xchg
mov
idiv
xchg
in
push
pop
add
push
ret
addl
inc
call
pushf
adcl
adc
outsb
cmp
jmp
cmp
add
lock
decl
push
mov
mov
xor
lcall
or
add
mov
xor
pop
cmp
fdivr
test
dec
loop
jne
shlb
lock
adc
stc
jl
xor
sbb
mov
and
pop
lea
ds
test
cmp
fisubrl
int3
in
add
jge
xchg
out
pop
movb
push
std
incl
pop
cld
pop
outsl
popf
pop
imul
jae
rolb
or
or
rcrb
or
adc
cmpb
mov
fs
sub
jge
testl
nop
xor
dec
lret
xor
or
xor
addr16
mov
dec
dec
sub
add
mov
out
and
dec
repnz
jnp
mov
xor
xchg
jmp
add
out
sbb
push
mov
dec
daa
xchg
ljmp
scas
lds
and
jecxz
add
mov
pop
loopne
cld
iret
push
icebp
xlat
and
sbbl
add
lods
test
push
inc
addr16
bound
lods
inc
and
pop
bound
mov
subb
jp
mov
jle
and
add
js
add
mov
add
ja
add
and
add
and
add
xor
add
add
add
add
add
and
add
dec
push
cmp
stos
pop
cmp
aad
cmp
jle
add
jl
add
jnp
add
cmp
xchg
mov
sahf
mov
fimuls
cmp
testl
cmp
lods
push
cmp
aas
push
cmp
pop
push
cmp
data16
push
add
test
xor
pop
xchg
add
add
add
add
stos
shll
xor
outsl
je
jmp
ds
xchg
leave
addl
dec
sub
into
inc
and
daa
lahf
shlb
add
jmp
pop
aam
pushf
xor
add
xchg
lahf
stc
in
add
pop
and
lret
scas
inc
leave
int3
cmpsb
sbb
int3
sahf
adc
int3
xchg
lds
imul
jmp
popf
pop
std
jl
add
cltd
pop
adc
dec
mov
arpl
stc
loop
lar
xchg
stc
loop
mulb
xchg
stc
loop
lar
xchg
stc
loop
xchg
and
pop
jmp
outsb
jmp
nop
mov
adc
adc
imul
sbb
xor
rcr
and
nop
inc
or
loop
loopne
pop
inc
xlat
push
add
scas
inc
xchg
lret
xor
adc
scas
inc
xchg
mov
mov
xorl
and
rorl
xchg
or
xor
xor
out
fldt
outsb
jge
and
pop
sti
jmp
dec
mov
loope
mov
insb
std
or
out
ds
mov
loopne
std
mov
add
aam
push
jmp
pop
std
mov
loopne
std
xor
sahf
push
in
loopne
std
and
mov
std
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
mov
mov
std
mov
push
xor
add
add
inc
xor
add
xor
add
icebp
orl
movd
jmp
cmp
out
loope
mov
imul
ret
mov
jg
xchg
mov
btc
or
mov
incl
jge
mov
leave
add
sub
xchg
mov
add
testb
add
add
sub
icebp
add
sub
push
loop
add
loope
or
mov
add
loope
or
xchg
dec
add
loope
or
xchg
dec
add
loope
or
mov
add
loope
or
mov
add
loope
or
xchg
push
add
loope
or
xchg
pusha
add
loope
or
xor
add
loope
or
xor
add
loope
or
adc
add
loope
or
add
add
or
xor
add
loope
or
xor
add
loope
and
dec
xchg
jge
js
or
pop
fwait
imul
sub
push
loopne
lahf
inc
dec
pop
adc
cmp
dec
fisubrl
cs
sub
lods
pop
lea
test
fcmovnb
xchg
or
pop
jp
hlt
test
xlat
cmp
outsl
mov
and
out
scas
insb
mov
adc
adc
add
xor
lds
aas
mov
push
sbb
xor
lods
ljmp
add
out
jae
das
push
add
adc
imul
stc
jmp
loop
stc
sbb
mov
test
inc
test
test
jmp
loope
add
ret
add
add
cmp
sub
mov
test
cmp
sub
adc
jmp
bound
sub
fs
mov
jmp
bound
and
jl
jg
dec
xor
jmp
xchg
bound
in
addl
add
xchg
testl
out
es
dec
test
or
add
shlb
xor
add
lret
add
xor
inc
or
cmp
sbbb
add
add
mov
or
add
pop
or
or
adc
mov
add
ret
jp
add
mov
mov
loop
sub
mov
test
add
test
stos
sbb
dec
jb
ret
mov
jle
std
jmp
xchg
stc
xchg
lret
add
or
test
mov
in
enter
dec
std
test
cld
hlt
and
dec
std
call
gs
lret
or
sarl
sbb
or
cmc
dec
std
pushl
mov
sub
mov
int
std
incl
add
pop
dec
jp
pop
mov
test
out
add
xor
aam
mov
pop
mov
loope
mov
xor
add
lock
popf
adc
inc
pop
scas
shl
sbbl
inc
sub
cmp
out
addr16
push
cld
add
out
aas
pop
out
loop
sti
js
pop
daa
add
jns
stos
add
add
sbb
daa
add
pop
out
loop
sti
cmp
cmpsl
add
add
mov
hlt
add
add
movsl
jecxz
ficoml
add
jns
jg
jne
add
mov
fwait
icebp
jle
add
cltd
in
nop
sub
add
push
add
loope
add
pop
push
inc
jmp
push
stc
push
xor
sbb
mov
jecxz
stc
cli
out
mov
xchg
adc
loopne
loope
add
xchg
sbb
mov
push
or
push
add
loope
cmp
jmp
jns
push
flds
inc
jmp
lret
xor
cmp
pop
es
mov
stos
mov
test
daa
adc
lret
lods
mov
rcl
sub
add
push
pop
sbb
in
inc
jne
cmpsb
rcrb
imul
mov
sub
push
sub
jb
add
pop
adc
inc
mov
add
into
add
and
fists
mov
push
xor
lcall
addl
push
jl
jge
mov
sarl
imul
pusha
stc
add
add
add
shlb
push
popa
mov
rorb
and
loop
insb
addr16
lcall
fcomps
pop
push
mov
popa
imul
test
dec
std
and
out
std
sub
loop
js
add
xchg
add
cmc
loopne
and
dec
dec
pop
lret
pop
pop
mov
loop
and
jnp
inc
loop
or
add
xchg
xor
inc
pcmpgtb
jge
xor
add
out
mov
xor
add
popf
stos
shrb
stos
stos
and
stos
fistpl
mov
or
movsbl
pop
adc
xchg
pop
in
ret
pop
loope
pop
movsb
fwait
int3
in
out
pop
popf
pop
cld
cmp
out
fisubs
testb
fcmovnu
jle
and
mov
add
jecxz
movsl
cld
nop
inc
jle
xchg
pop
sti
push
out
jno
data16
in
jo
sub
xor
add
fcoml
jmp
mov
cmp
mov
sub
pop
lds
ljmp
mov
inc
jns
xchg
jnp
and
fsubl
push
add
add
sub
stc
out
lock
inc
dec
pop
mov
push
test
or
out
xor
lds
lods
pop
add
inc
test
sarl
aad
addl
mov
insl
in
das
and
pop
jae
je
outsl
imul
mov
or
pop
insb
add
add
pop
outsl
or
data16
push
and
ds
popa
pop
push
dec
popa
bound
jb
cmp
dec
sub
shlb
mov
int3
jg
int3
int3
mov
xor
push
jle
and
loop
xchg
bound
test
fisubs
adc
pop
enter
dec
inc
sbb
dec
std
sub
arpl
popa
or
inc
dec
cmc
js
add
add
push
std
jnp
std
jmp
les
and
push
xchg
bound
test
fisubs
std
jmp
mov
std
pushl
jnp
lcall
pop
adc
dec
jbe
xchg
push
std
lcall
pop
adc
dec
das
mov
es
mov
int3
push
xor
in
mov
insb
push
out
xor
add
cmpsl
jae
sahf
daa
out
add
add
mov
mov
loop
in
pop
popf
outsl
and
xor
jl
test
ficompl
cltd
repnz
into
mov
int3
xchg
push
cli
cmpsb
push
or
cmp
outsl
das
fbstp
out
push
sub
add
es
addr16
ljmp
xor
push
inc
mov
pop
cmp
cmpsl
arpl
add
add
mov
out
leave
cmp
jmp
push
stos
mov
shrb
add
js
push
cmc
loope
test
imul
insl
push
movsl
mov
enter
clc
stos
jecxz
mov
out
cmpsl
cs
stc
xchg
sbb
sub
mov
lds
stos
jecxz
mov
fs
xor
add
add
inc
jge
cmp
jb
sub
pusha
cli
je
add
sub
into
mov
jns
jle
mov
mov
mov
rol
pop
add
adc
or
sub
mov
int3
inc
or
xor
mov
int3
dec
or
xor
mov
stc
pushl
int3
push
or
add
jae
stc
incl
int3
push
adc
xor
xchg
adc
add
mov
data16
mov
lock
push
adc
xor
testb
cld
mov
xor
add
push
jp
jecxz
std
mov
das
add
push
enter
fmul
loope
jne
test
lock
sarl
hlt
imul
or
cmpl
add
add
add
fcoml
ja
pop
insb
test
popf
jo
clc
mov
in
testl
rclb
push
js
mov
ret
in
out
iret
mov
das
sti
test
pop
jne
int3
pop
std
test
imul
add
ljmp
xor
js
dec
outsb
push
sub
and
xchg
mov
add
mov
add
xor
or
add
mov
gs
lcall
ja
or
idivl
adc
cwtd
mov
rolb
mov
cmp
cmp
add
mov
outsb
stc
jge
pop
mov
js
insb
xchg
jmp
outsb
ss
mov
sbb
flds
add
add
leave
repz
mov
loope
xchg
jmp
fmuls
jbe
jmp
loop
pop
jns
clc
cmpb
je
faddl
div
into
mov
ret
cmc
sti
push
or
mov
stc
cs
mov
mov
xor
imul
jge
fdiv
xchg
add
add
add
push
rcll
mov
mov
int3
jns
jmp
dec
inc
dec
push
add
lock
dec
mov
dec
lretw
movl
mov
inc
pop
jle
add
cmp
or
mov
sti
mov
mov
inc
lahf
cmc
scas
rorl
push
sar
lret
mov
push
clc
int
cld
push
cmp
mov
sbbl
add
lret
mov
mov
divb
rcrl
xor
push
adc
ds
pop
add
scas
jl
mov
jecxz
loop
mov
clc
out
inc
pop
stc
rolw
push
loop
pop
stc
gs
sti
incl
jmp
pop
mov
pop
std
in
sti
xchg
shll
stos
jae
sarb
loop
jb
loope
out
xor
add
and
std
ljmp
and
add
jmp
pop
jb
cmp
out
xor
das
fisubl
pop
or
cwtl
pop
mov
sbb
jl
popa
or
outsb
xchg
jmp
mov
jl
jae
xchg
imul
gs
bnd
xor
aas
dec
xor
add
mov
push
out
mov
loop
stos
sub
out
add
add
mov
clc
gs
test
xchg
pop
int
dec
std
dec
out
pop
dec
pop
push
repnz
pop
lds
scas
mov
jp
xor
mov
cmp
xchg
jmp
push
pushl
cmp
xor
jbe
adc
add
xor
stc
jb
mov
jmp
loope
and
movsb
add
add
mov
fnsave
add
add
xor
rolb
jns
push
add
xor
cwtl
xchg
xor
stc
jb
and
fisttpll
dec
inc
fstl
cwtl
jo
dec
stc
jb
and
cmp
mov
clc
push
xor
jmp
stos
jae
lcall
xchg
sub
test
aas
in
or
add
mov
add
mov
xchg
sub
jmp
stos
or
sub
ret
sub
jge
dec
sub
scas
jle
sub
add
lock
xchg
xor
mov
scas
jl
sub
pop
shrl
inc
or
jecxz
add
add
les
push
mov
xor
mov
push
hlt
test
out
add
ret
imul
call
adc
pop
jbe
jle
and
xchg
test
dec
jne
xchg
ljmp
mov
xchg
dec
adc
pop
cwtl
pop
mov
inc
std
jl
fwait
test
jmp
add
dec
std
jmp
adc
xchg
jmp
xchg
scas
repz
pop
idiv
int
repz
pop
fdiv
imul
mov
fwait
out
lods
inc
push
mov
rcr
dec
jb
in
add
mov
inc
jns
cmp
xchg
out
jae
push
out
loopnew
jns
mov
add
mov
add
stos
sbb
or
mov
add
mov
out
fidivrl
out
cltd
push
call
fldenv
into
xchg
xchg
pop
cmc
scas
jbe
cmp
add
mov
dec
dec
lock
cwtl
in
into
insl
dec
mov
add
loope
int3
xchg
sub
stc
ljmp
add
sbb
jge
fs
mul
xchg
add
cli
clc
pop
jo
dec
loopne
mov
jmp
mov
push
lods
inc
add
and
jmp
cli
aaa
test
and
jmp
sub
scas
fxch
outsb
bound
pop
mov
bound
mov
add
xor
push
mov
into
pop
or
test
add
scas
mov
adc
adc
mov
jnp
xchg
and
mov
or
pop
icebp
mov
jo
add
jle
and
add
addr16
call
mov
in
xor
mov
sub
add
fdivr
push
daa
mov
adc
jns
mov
push
add
mov
add
rorb
push
sahf
add
testb
es
xor
jmp
push
inc
insl
xchg
pop
add
into
xlat
sti
add
mov
in
pop
std
in
imul
add
test
push
add
stos
or
sub
loope
jne
push
push
add
mov
std
jl
push
xor
lret
filds
inc
iret
lret
pop
add
add
push
adc
pop
mov
iret
cmpl
xor
mov
mov
sbb
sbb
xor
in
rcll
pop
mov
pop
dec
xor
dec
inc
pusha
inc
test
xchg
push
sbb
add
mov
out
lds
out
add
ljmp
inc
pop
pop
clc
add
add
loop
repnz
loop
lock
sbb
add
jae
jmp
in
out
mov
dec
push
sub
das
or
in
dec
or
nop
jno
xor
jb
pop
xchg
push
add
imul
js
push
stc
pop
arpl
adc
loope
adc
pop
mov
test
or
and
xor
add
jnp
jmp
popf
out
inc
xchg
pop
add
pop
fdivrp
xchg
mov
leave
dec
lods
mov
xchg
pop
add
dec
sub
ljmp
add
push
add
add
into
rcrb
mov
or
frstor
popf
mov
push
scas
mov
mov
add
add
add
add
sbb
inc
pop
sub
xor
mov
test
add
sub
mov
jno
add
jne
mov
mov
pop
ret
sarl
int3
mov
mov
ret
push
cmp
fldenv
popf
mov
sarl
mov
loop
js
xor
imul
addr16
dec
mov
add
xchg
enter
std
stc
sub
add
dec
std
rcrb
jmp
dec
data16
push
std
jmp
mov
neg
dec
std
jmp
insl
add
jl
or
ja
xchg
fistl
fistpll
popf
xchg
adc
movl
loop
into
add
jp
lods
loop
add
dec
jle
fnstcw
jecxz
add
add
lret
xor
shrb
mov
mov
pop
xchg
out
pop
xor
pop
xchg
sub
mov
outsb
fldcw
dec
push
loop
call
sub
je
push
jl
add
outsl
xchg
out
jg
rcll
out
test
out
pushl
mov
roll
add
add
stos
lods
maxps
lahf
orb
aad
stos
pop
out
push
outsb
into
shrl
push
push
outsb
and
jmp
addr16
jmp
loopne
adc
xchg
jmp
push
pop
bound
mov
mov
pop
divl
add
mov
scas
stc
sti
jbe
lcall
mov
pusha
addr16
jmp
add
add
add
add
push
or
loopne
jns
jmp
pop
stos
mov
lods
shll
add
cmp
push
cmp
mov
add
stos
cmp
mov
push
sub
add
and
add
sub
inc
das
lods
adc
andb
pop
add
add
test
sub
div
mov
dec
addb
and
add
or
add
jnp
idivl
and
mov
stos
mov
stc
dec
aaa
pop
psrad
mov
lret
lea
inc
std
popa
imul
lds
mov
inc
std
or
add
dec
lds
fidivrl
adc
sub
mov
dec
into
ret
push
adc
insb
out
add
fmuls
cwtl
sub
call
loop
xlat
adc
jb
pop
int3
mov
loop
mov
jns
add
aas
loop
mov
jae
fdivrp
xor
xchg
lcall
mov
add
pop
jge
add
das
cmp
xchg
cmp
jns
out
fmulp
pop
mov
outsb
inc
or
into
jns
test
or
xor
mov
dec
repz
cmp
fstpl
inc
inc
scas
insb
stos
dec
cmpsb
insb
cmp
mov
test
or
pop
adc
in
mov
fidivrl
das
out
xchg
insb
loopne
xor
xchg
cmpsl
pop
mov
add
add
add
add
xor
or
sub
mov
cwtl
add
loope
or
or
jo
aaa
xorl
test
jmp
xor
jo
xor
out
jb
lods
jmp
and
jmp
sub
xor
sahf
mov
into
int3
lret
outsb
call
loopne
js
jmp
outsl
cltd
mov
cmc
lock
inc
cmc
push
jmp
add
adc
loope
js
pop
sti
popa
aad
test
pop
add
sbb
adc
cs
test
ss
push
jno
adcb
cmpsl
mov
pop
cs
mov
lods
xor
pop
in
data16
push
dec
cs
leave
loop
sti
cmp
scas
mov
add
xchg
mov
jo
add
or
rorb
add
add
add
add
mov
ret
xor
add
lods
dec
lock
sbb
add
xor
add
or
inc
xor
add
into
lret
adc
add
nop
cs
std
lcall
insl
stc
mov
fxch
cmp
notl
pop
lock
adc
inc
fildl
add
add
add
add
or
loop
adc
add
inc
std
popa
xor
push
jb
or
loop
enter
mov
loop
xchg
pop
les
loop
iret
sti
imul
subl
faddl
dec
xchg
insl
pop
std
jmp
jb
xor
add
lret
fistpll
jmp
pop
mov
add
add
sbb
pop
adc
jle
mov
lcall
push
pop
cltd
cmp
roll
mov
pop
out
xchg
orl
fsubp
subb
xor
dec
gs
push
loop
sub
jp
xor
add
repnz
test
and
lods
dec
add
pop
outsb
mov
lahf
sub
jmp
ss
jmp
test
xor
add
mov
cmp
outsb
jp
push
or
jle
lods
pop
popa
bound
shrb
inc
fdivl
add
ja
mov
cmp
test
clc
xchg
lock
and
xchg
pop
jg
jmp
pop
adc
bound
adc
loope
inc
std
add
add
gs
xor
sbb
add
test
add
loop
push
or
test
fisubl
lcall
repnz
cmpl
cmp
test
push
test
lods
fdivs
stc
mov
jl
add
xor
test
add
movsl
mov
dec
lret
orb
add
cld
ja
mov
sbb
mov
ret
mov
xor
sbb
fadd
mov
pop
mov
enter
js
jl
dec
xor
sub
imul
bound
jmp
adc
xchg
add
pop
fistl
repz
mov
jge
cmp
in
nop
loope
std
test
pop
add
popf
or
out
imul
sbb
lock
dec
out
lods
xor
push
lods
test
cld
pop
xchg
jmp
loop
outsb
rcl
cmpsb
pop
stos
shlb
out
and
icebp
cmpsl
fists
addr16
stc
add
add
loop
lods
jae
sbb
roll
loop
cmpsl
pop
lea
std
cmp
cltd
sub
inc
pusha
xchg
jle
out
shrb
add
in
loop
mov
pop
test
jge,pt
movsl
ljmp
dec
push
add
inc
sti
xor
xor
mov
loope
or
xor
call
add
add
add
sahf
lods
jecxz
pop
gs
xor
jo
ja
xor
jmp
and
insl
out
mov
jmp
and
sbb
jle
add
loope
xor
loope
add
jl
out
add
loope
pop
xor
cmpsb
adc
loope
nop
dec
addr16
call
lock
add
add
sub
jl
std
mov
add
repnz
int3
cwtl
out
dec
mov
fiadds
mov
inc
rcll
rolb
pusha
mov
int3
mov
lret
int3
add
dec
andl
ja
je
cwtl
mov
jnp
orl
sbb
in
or
push
inc
xor
rcrb
orl
dec
adc
movsb
mov
sbb
cmp
into
push
cmp
shrb
sahf
push
std
cmp
inc
int3
xchg
addl
hlt
je
adc
je
pop
mov
mov
push
std
shlb
add
aas
std
jmp
pop
mov
push
ljmp
test
inc
rolb
add
add
add
ficoml
lds
lock
xchg
xor
out
mov
cmc
test
sbb
ficoms
inc
into
mov
cmc
test
cmp
das
out
jnp
sbb
ret
rcl
imul
pop
mov
sahf
cmpsl
sbb
addr16
pop
pmulhw
sti
lds
adc
sbb
aas
sahf
std
mov
xchg
std
stos
aas
scas
std
sbb
add
xchg
popa
mov
sahf
add
xor
sbb
mov
out
shlb
xchg
inc
jl
jne
ret
sub
in
inc
sbb
jb
cmp
popa
add
jmp
ljmp
xchg
xchg
mov
stc
dec
jns
mov
mov
mov
sbb
std
lret
sbb
sbb
add
mov
icebp
mov
test
cmp
bound
idiv
mov
sbb
pop
adcb
xor
jmp
aad
add
xor
adc
sub
cs
add
lret
std
loope
xchg
mov
or
addl
or
lret
or
mov
push
mov
stc
sbb
jne
or
sar
add
push
mov
add
mov
xor
data16
movb
pop
adc
xor
decl
mov
je
sub
and
enter
dec
xor
jnp
stos
inc
cld
rolb
add
add
add
add
add
addl
mov
dec
cmc
popa
xor
jnp
lret
cli
jg
stc
add
lcall
ljmp
movsb
push
sbb
jmp
xchg
jle
notb
std
test
enter
jp
inc
adc
lcall
xchg
jle
into
pop
std
gs
xchg
decl
xchg
jns
add
std
incl
add
popa
push
call
or
loop
jbe
notb
std
xchg
enter
add
scas
xor
add
mov
out
mov
and
mov
push
out
int
mov
pop
mov
out
pop
mov
out
push
xor
push
jmp
xchg
not
cmp
addr16
imul
mov
add
add
add
pushf
mov
out
pop
xor
pop
jle
pop
lods
sbb
ljmp
bnd
sub
push
mov
add
test
loope
xchg
mov
stc
bound
xchg
lea
adc
pop
stc
testb
add
fmull
cvtdq2ps
add
add
add
add
std
lret
lods
sbb
lret
pop
dec
and
jmp
loope
push
subl
daa
repnz
mov
xor
jmp
sti
sub
jmp
sti
sub
push
or
jmp
mov
xchg
fadds
add
or
add
add
adc
push
add
sti
cs
cmp
xchg
mov
test
das
add
mov
mov
cmpsl
cmp
adc
sbb
add
xchg
xorl
adc
cs
ret
shll
xchg
enter
push
loop
adc
sbb
int3
pop
std
pop
and
add
mov
adc
pop
mov
es
xor
push
in
jnp
pop
aad
test
verr
xchg
or
or
ljmp
test
lea
xchg
lods
adc
pop
jbe
testb
mov
pop
std
clc
and
dec
mov
pop
pop
sbb
loop
les
add
add
pop
cld
push
test
xor
xorb
add
fcmovnu
fs
push
loop
cltd
lret
aas
cmp
sub
shlb
andl
jl
inc
out
pop
jnp
fucom
shrb
loop
pop
shr
xchg
call
outsw
hlt
ljmp
cmc
mov
cmpsb
cmc
stos
aaa
sahf
cmc
sbb
add
mov
push
jnp
inc
cmp
cmp
xor
add
jg
rcrb
push
jnp
mov
cmc
in
es
sbb
inc
or
loope
push
inc
pushf
sub
inc
fidivrl
dec
inc
clc
and
cs
in
pop
jb
sbb
pop
les
test
inc
add
cwtl
mov
jge
or
std
daa
add
add
pop
push
out
or
arpl
xor
add
mov
subl
orl
inc
sub
into
cmovl
loope
jge
sbb
daa
or
imul
add
sahf
mov
jge
sahf
dec
add
fwait
add
ret
loopne
pop
aaa
pop
or
add
add
sbb
sahf
xchg
add
and
mov
xor
inc
aaa
sbb
sahf
shlb
add
and
mov
cmpsl
jle
in
add
add
fs
shll
movsb
mov
mov
mov
data16
pop
jmp
movsl
adc
pop
cmpb
pop
std
test
xchg
js
lret
incl
add
pop
sahf
add
mov
adc
stc
dec
xchg
jnp
fistl
std
dec
outsl
xchg
test
and
and
xor
loop
js
dec
cld
lcall
or
out
mov
pop
call
into
adc
mov
xchg
test
ljmp
clc
fcmovu
js
add
add
xor
mov
cmp
loop
mov
test
sub
out
repnz
lea
clc
add
mov
lcall
ss
mov
mov
out
mov
in
pop
in
add
cwtl
dec
fnsave
jg
xlat
jo
mov
sbb
pop
or
adc
loop
popa
and
mov
aad
lret
mov
sub
stos
dec
xchg
cmc
lcall
insl
adc
test
adc
sub
lret
mov
cmc
lret
lods
adc
adc
call
push
sub
lret
sbb
popf
hlt
lret
sub
mov
insb
add
push
insb
add
push
insb
add
jb
add
add
add
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
out
add
xor
add
add
je
add
test
add
test
add
add
add
jmp
add
stc
push
xchg
sti
incl
incl
pop
add
pop
add
ja
add
add
testl
add
testl
les
idivl
in
idivl
xchg
idiv
insb
jmp
jmp
pop
mov
and
mov
sbb
jmp
add
popa
out
or
cs
test
rolb
gs
xchg
insb
jg
sbb
jmp
push
dec
xchg
hlt
sbb
add
add
add
add
jmp
xchg
hlt
in
test
mov
leave
and
mov
mov
inc
pop
dec
pop
or
mov
imul
test
mov
mov
das
imul
adc
xchg
repz
test
mov
xor
rcll
cmp
inc
out
mov
xor
add
add
pop
lock
add
test
clc
aad
mov
imul
inc
pusha
fadd
cmp
cld
xchg
ljmp
into
lock
push
and
ss
dec
insb
movsb
or
xlat
arpl
xchg
rdtsc
in
pop
mov
add
cltd
mov
jg
sub
test
dec
out
ret
subb
pcmpgtb
add
add
pop
jg
lcall
jecxz
mov
mov
xor
testb
or
xor
adc
call
or
cmp
jecxz
add
clc
ss
int
jmp
sub
jno
lock
jl
idivb
push
in
fcomip
leave
mov
or
add
in
scas
mov
rcr
in
ljmp
inc
cmpsb
add
add
add
xor
je
sub
adc
cld
dec
test
shll
or
xchg
pop
je
cmp
jae
test
cmpsb
mov
mov
call
jnp
add
imul
fldcw
arpl
xlat
sbb
sti
dec
add
xor
pop
cmpsb
mov
mov
adc
xchg
add
mov
sbb
rolb
or
addl
test
or
repz
call
subl
test
iret
push
pop
add
rolb
lret
in
int3
ret
xchg
pop
xor
sub
xor
std
xchg
ret
cld
xchg
add
push
hlt
sub
mov
jl
jmp
mov
push
and
pop
push
test
push
or
pop
mov
push
movsb
imul
pop
stc
and
movsl
pop
sbb
outsb
pop
iret
sarl
add
pop
out
mov
mov
add
ljmp
add
fistpl
fadds
loop
jg
loop
out
ret
inc
scas
out
pop
mov
sub
sbb
pop
pop
fwait
sbb
test
loop
aas
add
subb
outsl
out
pop
mov
sub
add
pop
add
sbb
add
push
imull
add
inc
jmp
call
in
add
xchg
fwait
jl
icebp
xor
sbb
add
pop
je
icebp
in
jno
int3
fucomp
inc
gs
and
sub
imul
add
in
pop
jne
sbb
call
and
fsubl
and
and
mov
and
sbb
ret
test
cmp
jle
or
aad
and
add
cld
fucomi
test
add
push
and
repz
stos
jae
out
or
hlt
jbe
call
pop
outsb
mov
cmp
andps
add
je
pop
out
ret
and
mov
aam
mov
adc
or
syscall
aaa
jnp
iret
sub
decb
and
mov
sub
xchg
clc
aam
jg
push
mov
sub
mov
add
jle
mov
jl
pop
or
add
sbb
adc
pop
std
lcall
cmp
or
add
loop
or
and
in
cmp
sbb
ret
jmp
cmp
int
xchg
jne
pop
push
stc
out
popa
lret
sar
add
adc
dec
and
add
xor
or
stc
jl
mov
imul
rolb
fwait
jo
or
std
jmp
xchg
out
inc
pop
int
adc
aad
ds
popa
sub
les
xor
and
pop
or
or
sbb
adc
test
sub
pop
roll
add
mov
add
out
scas
sub
aam
iret
add
mov
lret
sbb
mov
movsb
jg
ss
jg
pop
dec
pop
xor
lahf
mov
add
and
data16
ficomps
out
insb
loop
jp
sbb
inc
sahf
sub
push
daa
or
cmpsl
daa
jp
add
add
stos
mov
jb
in
stc
add
add
sub
push
daa
or
lahf
daa
jp
shrl
ss
add
dec
or
cwtl
mov
popa
dec
inc
stc
out
scas
clc
jb
scas
inc
or
lods
push
cmp
and
jle
loope
add
sbb
jae
enter
call
out
inc
push
mov
dec
out
sub
movsb
mov
add
aam
jmp
mov
enter
je
xlat
xor
sub
dec
enter
and
lret
mov
cmp
lret
sub
andb
xor
sub
cmp
jbe
dec
leave
repz
stos
out
sub
test
pop
and
mov
pushf
jge
add
repnz
mov
mov
add
imull
mov
jnp
add
loop
divl
sub
std
jmp
mov
test
in
and
mov
add
loop
add
cmpsb
sub
incl
nop
hlt
in
mov
pusha
push
lret
xchg
or
pop
imul
std
mov
repnz
push
push
mov
add
sub
ss
jb
xor
fisubl
push
test
add
in
or
adc
out
loop
xchg
push
pop
xchg
mov
in
in
xchg
inc
fistl
jle
mov
cmp
xor
lcall
xor
xchg
sub
mov
inc
fidivs
and
xor
add
test
out
loop
pusha
mov
negl
call
repz
in
es
je
mov
in
jg
mov
rcrb
xlat
push
mov
out
jmp
dec
lods
pop
cmc
push
jb
jo
int
sub
lods
inc
pop
divl
jo
fldl
test
or
push
push
fsubrs
add
add
add
cmp
lea
dec
test
pop
mov
rcll
or
loope
nop
fs
inc
inc
fisubs
jns
lods
inc
std
in
call
cld
jb
mov
push
out
inc
std
cmp
shll
mov
xchg
add
add
jl
jg
incb
jnp
add
jo
mov
add
pop
loope
push
and
add
jnp
mov
jl
int3
pushl
xor
sub
iret
sbb
cmpl
xor
add
dec
push
pop
sub
sub
out
inc
js
pop
jbe
xchg
dec
or
jbe
jle
je
js
stc
jae
ficoms
add
mov
push
addb
mov
mov
std
in
add
ficompl
pushl
jnp
fisttps
mov
xchg
add
shl
pop
pop
hlt
test
cmc
adc
addr16
es
cmc
jmp
or
mov
mov
xchg
clc
cmp
push
enter
mov
pop
mov
sahf
inc
jge
or
je
loope
or
add
sbb
enter
sub
and
out
sbb
push
les
xor
mov
jle
fnsave
add
xchg
adc
jp
adc
add
add
pusha
mov
sub
xor
add
fstpt
and
aas
jl
adc
add
xor
xor
pop
jp,pn
sbb
cmp
add
test
aaa
gs
jl
add
add
jl
test
in
loop
add
adc
jmp
cmpsb
xchg
jmp
xchg
loope
xor
lods
jb
enter
xchg
lods
push
rcll
lret
out
inc
stc
loope
sbb
jmp
gs
and
fsubl
add
fwait
and
dec
sub
mov
in
cmpsl
insl
adc
shl
popa
pusha
sbb
test
stos
jp
push
jecxz
jb
jecxz
jb
add
je
xor
add
sub
cmpb
sub
lea
jne
mov
dec
lret
lret
add
orl
mov
add
jge
add
add
jp
shl
xchg
push
icebp
add
cli
xor
call
dec
xor
add
lret
jo,pt
sbb
lret
dec
add
dec
mov
or
or
pinsrw
jbe
pop
xchg
jg
pushl
les
loop
jl
es
xlat
aad
out
clc
fisttpll
adc
into
xchg
mov
pop
pop
cmp
out
fwait
jne
mov
mov
jmp
add
loopne
sub
insl
out
insb
fcoms
push
xchg
cmp
add
adc
std
cld
and
mov
mov
pop
push
cld
mov
adc
shrb
sub
xchg
inc
jg
jecxz
hlt
jle
movsl
jmp
jb
jl
sbb
or
sbb
decl
out
jbe
out
loop
and
and
mulb
gs
mov
push
mov
lods
xor
xchg
xchg
pusha
mov
fwait
push
mov
adc
mov
sub
pusha
push
sbb
popl
lds
xlat
fistpll
sti
js
inc
jp,pt
add
mov
mov
sub
or
add
jbe
jno
xor
jmp
or
mov
xchg
fwait
mov
jge
mov
std
lock
test
cmp
add
test
bound
es
mov
stc
and
cmp
pop
orps
test
add
ret
sbb
sub
cld
lret
jb
lret
adc
xchg
cmp
call
and
jo
push
adc
adc
mov
mov
push
sub
jne,pt
inc
jns
inc
ret
xchg
sti
xor
mov
xor
add
dec
dec
ret
les
push
or
addl
fistps
rcr
test
test
sub
dec
gs
lret
sbb
dec
gs
cmc
or
aam
adc
fistpl
ror
sbb
push
leave
fldt
leave
fdivs
dec
insl
hlt
mov
lock
fldenv
lret
test
push
xor
fdivr
test
bnd
in
mov
dec
mov
jp
test
add
xor
aad
std
jmp
and
lds
std
jmp
adc
mov
out
cmp
ret
out
cmp
sbb
jmp
repnz
stc
xchg
lahf
mov
loop
mov
loop
std
jmp
rolb
jne
lret
adc
std
jmp
mov
stc
push
mov
inc
aas
loop
std
jmp
xor
cmp
dec
in
xor
dec
in
out
loop
inc
dec
add
add
or
inc
int
std
inc
lds
out
loop
and
or
inc
movsl
xor
add
xor
dec
fisttpl
addr16
and
imul
out
loop
loop
mov
xor
add
xor
dec
fwait
or
xchg
int
push
xchg
lds
out
loop
mov
xchg
lods
xor
add
xor
iret
add
add
xor
adc
xor
jmp
loope
add
jns
lahf
mov
nop
psubsw
insb
psubsw
push
psubsw
xchg
psubsw
lods
push
jmp
loope
push
jmp
loope
psubsw
dec
psubsw
inc
psubsw
je
jmp
loope
psubsw
inc
push
jmp
add
add
sub
jmp
loope
psubsw
push
psubsw
insb
psubsw
js
add
inc
adc
sub
cld
adc
clc
adc
hlt
adc
sub
cmp
or
and
sti
sub
adc
sub
adc
sub
aam
sti
sub
adc
sub
adc
xor
adc
xor
adc
xor
adc
add
lret
xor
adc
xor
adc
xor
adc
xor
adc
mov
adc
xor
adc
movsb
adc
sbb
fcomi
sbb
popa
repz
ret
repnz
jg
sbb
jnp
sbb
ja
sbb
jae
sbb
adc
std
mov
repz
mov
repz
or
sbb
pop
add
add
sbb
add
sbb
call
sbb
sti
repnz
div
sbb
repz
ret
repnz
mov
rcrb
std
mov
sbb
mov
sbb
scas
repnz
stos
repnz
cmpsl
repnz
das
repnz
sub
sbb
daa
shlb
out
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
out
out
loop
out
push
aaa
out
sbb
out
push
aaa
out
adc
out
push
aaa
out
call
aaa
out
cmp
out
test
out
fwait
push
out
mov
and
add
ss
sti
and
add
ss
pop
ss
push
ss
dec
ss
loope
or
loope
or
loope
or
add
add
int3
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
psubsw
hlt
push
jmp
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
add
add
push
or
loope
or
jnp
inc
adc
xor
mov
sub
mov
sub
jnp
and
jnp
and
dec
xor
dec
xor
xor
cmp
adc
dec
xor
dec
xor
xor
ud2
xor
push
or
clc
push
sti
xor
push
sti
xor
xor
or
cmp
sti
xor
sti
xor
push
lret
xor
push
add
add
xor
push
mov
xor
push
lret
xor
lret
xor
push
mov
xor
push
loop
std
mov
fcompl
std
mov
sbb
mov
sbb
scas
in
std
stos
fcompl
std
cmpsl
aam
std
mov
in
std
fcompl
std
xchg
aam
std
fucomip
sbb
fnsetpm(287
sbb
xlat
fcompl
std
rcl
sbb
iret
in
sbb
lret
in
std
movl
add
add
add
fcompl
std
ret
aam
std
aam
sbb
shl
sbb
mov
sbb
arpl
sbb
sub
sbb
mov
aad
std
imul
std
dec
in
std
nop
fnsave
out
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
out
xor
add
add
out
popf
sub
add
out
les
out
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
add
add
xchg
jmp
loope
adc
loope
adc
loope
or
loope
or
loope
adc
loope
adc
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
psubsw
in
psubsw
loop
jmp
loope
or
loope
or
loope
or
loope
or
loope
or
mov
sub
add
sub
sahf
btc
xchg
jnp
sub
mov
mov
sbb
jnp
sbb
dec
sub
or
cmp
add
dec
sub
cld
or
sub
hlt
or
sub
in
or
sub
or
sub
or
sub
and
add
add
sub
push
sti
sub
push
lret
xor
psrad
std
xor
aad
std
sub
out
std
mov
or
mov
or
scas
out
std
stos
fimuls
std
cmpsl
or
mov
out
std
stos
fimuls
std
cmpsl
or
mov
out
std
fimuls
std
icebp
aam
std
in
in
or
mov
fmull
std
aam
add
iret
or
fucomp
or
ftst
or
aad
or
rcl
or
int
or
pop
out
std
pop
fimuls
std
push
xor
add
sub
out
push
sub
out
es
out
out
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
imulb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
cmc
add
loope
add
loope
add
loope
add
loope
add
loope
psubsw
and
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jmp
loope
add
jmp
or
or
xor
or
xor
or
xor
add
add
xor
or
xor
or
xor
jnp
jl
jnp
js
mov
je
mov
and
jnp
sbb
jnp
sbb
dec
xor
dec
xor
or
xor
cmp
or
dec
xor
dec
xor
or
xor
or
xor
or
xor
or
xor
or
pop
std
jmp
add
fadds
std
out
pop
std
jecxz
pop
std
out
fadds
std
jmp
pop
std
out
or
shr
or
inc
std
lret
fmuls
std
xor
or
sub
fmuls
std
lret
fmuls
std
call
or
and
or
stos
fmuls
std
rorl
std
mov
fmuls
std
fmuls
std
xchg
call
or
fmuls
std
mov
or
xchg
add
call
or
jg
or
mov
or
jmp
xor
add
es
jbe
out
mov
out
jle
out
andb
add
daa
out
cs
out
xor
out
push
daa
out
sub
out
lea
out
adc
out
push
daa
out
sub
out
push
daa
out
and
out
es
mov
add
scas
es
ret
add
es
cli
es
out
es
repnz
es
test
out
fisubs
out
loop
add
loope
push
jmp
loope
pop
jmp
loope
pop
jmp
loope
pop
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
add
add
add
add
lock
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
add
loope
push
jmp
loope
push
jmp
loope
push
jmp
dec
test
cmp
orb
jl,pn
or
js
or
je
sti
sub
insb
or
cs
or
sub
add
sub
pop
or
sub
push
or
sub
inc
or
sub
cmp
mov
xchg
or
xchg
or
sub
xor
jnp
orb
sub
jp
cmp
std
and
pop
std
jno
pop
std
sbb
pop
std
imul
add
jmp
pop
std
pop
flds
std
out
fiaddl
std
jmp
pop
std
out
pop
std
dec
flds
std
neg
pop
std
repnz
ljmp
std
loop
or
xor
or
sub
fimull
std
shr
or
into
ljmp
sbb
or
adc
jmp
or
mov
or
mov
or
scas
add
add
xor
add
out
jge
out
subl
out
dec
sub
add
out
jno
out
gs
add
out
pop
sub
add
out
jne
out
imul
out
push
sub
add
sub
add
sub
add
out
jl
out
js
out
inc
sub
add
out
add
add
add
out
push
sub
add
out
pop
sub
add
add
loope
add
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
add
add
cmp
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
jmp
loope
push
add
or
jnp
push
or
add
dec
xor
or
xor
or
xor
or
repnz
out
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
add
or
rorb
or
into
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
pop
std
xchg
jmp
std
xchg
fildl
std
fildl
std
mov
pop
std
test
pop
std
sbb
pop
std
jns
pop
std
jne
add
jmp
std
jno
pop
std
insl
fildl
std
imul
pop
std
popa
fildl
std
pop
fildl
std
pop
jmp
std
push
jmp
std
push
fildl
std
dec
fildl
std
dec
jmp
std
inc
jmp
std
inc
fisttpl
std
cmp
jmp
std
xor
fisttpl
std
sub
jmp
std
and
out
in
out
fsubrs
out
int3
sub
add
add
shrb
out
aam
out
call
sub
add
sub
add
add
sub
add
out
xor
out
xor
out
or
out
cld
sub
add
sub
add
out
sbb
out
or
out
adc
out
adc
out
test
out
pushf
sub
add
sub
add
out
insb
sub
add
out
add
add
add
add
loope
pop
jmp
loope
pop
jmp
loope
pop
jmp
loope
pop
jmp
loope
pop
jmp
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
add
add
data16
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
mov
cs
cs
or
sbb
mov
push
or
cs
or
or
dec
cs
pop
dec
and
cmp
incb
cmp
cli
pop
dec
testb
cs
cmp
out
pop
cmp
ljmp
add
or
loop
sti
sub
fiaddl
or
pop
or
rolb
sti
sub
lret
sub
ret
sub
mov
pop
loop
std
mov
pop
std
mov
pop
std
lods
in
std
filds
std
pusha
out
std
pop
filds
std
pop
out
std
push
filds
std
push
out
std
dec
filds
std
and
pop
std
mov
pop
std
test
add
in
std
sbb
pop
std
xor
pop
std
xor
pop
std
sub
pop
std
sub
pop
std
imul
pop
std
popa
fldl
std
pop
in
std
pop
fldl
std
push
in
std
push
fldl
std
dec
in
cld
add
frndint
add
frndint
cld
fidivs
out
cld
aaa
out
clc
aaa
out
hlt
aaa
out
lock
out
int3
aaa
out
enter
les
out
add
add
aaa
out
fdivl
out
fdivs
out
aam
out
shlb
out
in
aaa
out
call
aaa
out
loopne
out
cmp
out
cmp
out
xor
out
xor
out
or
out
or
out
add
out
add
out
sbb
out
sbb
out
adc
out
adc
out
lods
ss
pop
xor
jmp
loope
add
add
add
scas
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
mov
jmp
loope
add
lret
xor
lret
xor
add
xor
add
xor
add
xor
push
mov
xor
push
mov
sub
mov
es
jnp
and
jnp
push
push
mov
sbb
mov
push
push
jnp
adc
jnp
push
push
dec
xor
push
dec
xor
push
cmp
add
cmp
incb
dec
xor
add
add
add
add
add
xor
add
or
ljmp
xor
add
or
fiaddl
loop
cld
aad
xlat
cld
shl
xlat
cld
int
xlat
cld
leave
out
cld
cld
shl
cld
mov
out
cld
mov
xlat
cld
mov
xlat
cld
lods
cld
test
cld
mov
cld
cltd
out
cld
xchg
add
add
xlat
cld
xchg
out
cld
cld
mov
xlat
cld
test
xlat
cld
and
xlat
cld
jns
xlat
cld
jne
xlat
cld
jno
xlat
cld
insl
cld
imul
xlat
cld
popa
out
out
xchg
xor
add
xor
add
ss
and
out
sbb
out
sbb
out
and
out
hlt
xor
out
in
xor
add
xor
out
mov
xor
out
aam
out
enter
int3
xor
out
in
out
fdivs
out
loopne
out
xor
out
sub
out
adc
out
clc
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
cli
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
or
push
add
add
cs
bound
das
pop
add
das
pop
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
cmp
cs
xor
cs
sub
cs
and
cs
add
sbb
cs
add
adc
cs
add
or
cs
add
add
cmp
add
incb
dec
cs
add
testb
xlat
cld
cmc
loope
cld
icebp
loope
cld
in
loope
cld
jmp
loope
cld
loope
xlat
cld
fucom
xlat
cld
fabs
xlat
cld
aad
xlat
cld
shl
xlat
cld
int
xlat
cld
push
jecxz
cld
sbb
xlat
cld
push
jecxz
cld
adc
xlat
cld
or
jecxz
cld
cmp
xlat
cld
add
xlat
cld
loop
cld
cli
add
add
xlat
cld
mul
xlat
cld
repnz
cld
in
loop
cld
ljmp
cld
loop
xlat
cld
fsubp
xlat
cld
xlat
cld
loop
out
adc
out
adc
out
sub
out
sbb
xor
add
out
cmp
out
sub
xor
add
xor
add
out
xorl
mov
add
add
adc
and
movl
jecxz
out
loop
xor
pop
loop
and
cmpsl
add
xor
aaa
cltd
sti
pop
sub
cmpsb
lcall
sub
jmp
sar
add
das
les
sub
push
jmp
and
push
and
and
and
clc
jmp
jbe
push
push
add
mov
je
call
aad
inc
jecxz
scas
push
out
push
roll
call
loope
mov
push
in
push
sub
inc
lret
aas
call
jmp
movsl
mov
andl
push
mov
add
shlb
std
je
mov
or
cld
cmp
add
add
add
xor
adc
mov
jne
scas
cmp
or
bound
stc
inc
fdivs
testl
xor
jne
dec
fdivr
add
mov
add
scas
je
fwait
xchg
add
rorl
jmp
movsl
sbb
repz
cli
decl
repnz
push
xchg
sar
jnp
testl
add
add
add
loop
aas
jge
jnp
pop
mov
inc
add
aas
jge
fnstcw
fistpl
test
add
pop
mov
cmp
and
lahf
cli
aas
jge
dec
les
push
mov
call
mov
test
cmp
mov
push
stc
mov
xlat
jg
ficoms
dec
shll
fdivr
movsl
xlat
aas
stc
daa
sti
aas
jge
add
pop
or
sbb
mov
jg
stc
repz
das
pop
ljmp
out
pop
imul
nop
cmp
xor
xchg
sub
xor
mov
out
repnz
out
out
arpl
adc
in
inc
pop
imul
push
cmp
xor
xchg
sub
xor
mov
add
out
in
and
push
or
add
lret
in
leave
out
xchg
and
add
xor
xchg
adc
inc
pop
outsb
movb
mov
out
out
mov
mov
add
loope
mov
out
fsts
push
in
jae
stc
cwtl
stc
movb
out
out
add
movsb
gs
and
push
inc
pop
stos
pop
jo
in
gs
add
add
pop
add
inc
std
test
dec
das
jge
cld
cs
sub
add
push
call
sub
idiv
call
loope
jae
stc
jl
push
shlb
out
js
add
push
mov
jne
pop
cmp
jl
mov
add
mov
add
js
je
add
add
mov
inc
mov
insl
jnp
or
insb
adc
cmc
lcall
sbb
jmp
inc
arpl
cmp
cli
jmp
cld
ret
sub
cmp
push
mov
ret
jbe
jnp
fdivs
mov
ret
hlt
jmp
cmp
add
sbb
jge
sub
add
add
xlat
cld
mov
out
aam
inc
add
inc
jge
aad
jb
push
ret
xchg
addl
inc
xorb
jne
and
xlat
cld
jmp
andb
or
cmpsb
mov
stc
cmc
pop
inc
call
popa
xchg
jecxz
mov
sti
or
cmp
stc
popa
xchg
jecxz
mov
sbb
add
add
add
add
inc
call
fsub
push
fwait
loope
sahf
repz
and
data16
sub
call
pop
pop
loope
mov
lods
and
inc
out
mov
cmp
fcomps
repz
pop
imul
mov
sub
cwtl
jecxz
add
jmp
movsl
mov
add
mov
mov
loop
repz
push
inc
pop
aas
pop
roll
xor
bound
pop
inc
lret
jl
fbstp
mov
popf
test
je
jmp
leave
sbb
dec
add
clc
push
inc
call
enter
fnstcw
inc
pop
inc
or
popf
out
add
clc
push
add
inc
inc
add
fmul
cli
xchg
in
fnstcw
push
cmp
mov
or
jnp
ficompl
inc
or
clc
add
addl
cmp
add
or
add
testl
mov
jge
mov
add
add
or
xor
mov
je
mov
or
jge
dec
xor
xor
stc
push
test
jp
je
mov
je
mov
or
sub
insb
or
add
out
idiv
cmp
add
mov
sti
je
mov
sbb
das
int3
jg
fmul
xchg
inc
mov
or
in
aam
add
add
jp
sbb
test
jg
aam
xchg
or
pop
std
div
and
fs
sbb
iret
fnstsw
fmul
xchg
pop
popa
insl
iret
aas
mov
jg
in
nop
or
aam
stc
and
xchg
sbb
cmpsb
ljmp
or
sbb
or
lcall
xor
icebp
insl
imull
lods
loopne
add
inc
je
add
xor
mov
fnsave
subb
out
jecxz
sub
frstor
xchg
jecxz
dec
push
jnp
and
xchg
jecxz
inc
push
imul
sbb
jmp
jecxz
xchg
dec
frstor
nop
jecxz
pop
sbb
frstor
cltd
jecxz
pop
sbb
frstor
shr
sub
pop
bnd
add
add
faddl
nop
jecxz
incl
xlat
clc
stos
gs
adc
jb
call
sub
adc
push
sub
mov
fprem
push
ss
mov
stc
fnstcw
jecxz
cmp
fnstcw
outsb
aam
add
fnstcw
psubq
clc
popf
jl
push
das
jae
stc
inc
sti
into
fcomps
add
xor
stc
xor
mov
pop
jnp
in
or
clc
sahf
movsb
enter
fnstcw
sarl
sbb
mov
decl
push
add
aaa
test
xchg
xor
aad
aaa
test
data16
ret
testl
in
ss
je
pop
stos
cld
add
add
sub
cld
je
pop
xchg
stc
cmp
jnp
push
xor
das
and
ljmp
insl
push
adc
jnp
xor
mov
je
loop
mov
or
stc
cmc
test
outsb
out
pop
pop
mov
es
inc
add
inc
call
popa
add
and
mov
pop
mov
add
add
lret
sahf
or
mov
push
in
xor
int
or
cld
jmp
aas
out
gs
jge
add
testl
out
add
stc
popa
insl
or
mov
sub
cs
pop
mov
sbb
xor
mov
enter
fisubl
mov
enter
fldenv
mov
add
in
enter
fldenv
out
shr
mov
in
gs
shll
mov
repz
aas
lcall
fxch
es
fldenv
sbb
movsl
stos
std
insb
je
test
push
out
dec
pop
lods
arpl
dec
fs
sub
rcll
mov
mov
add
xor
xchg
fcos
mov
pop
jnp
add
add
pop
adc
popa
push
push
ljmp
call
stos
popa
push
adc
jb
call
push
cs
in
bound
jmp
int
mov
mov
rolb
cmc
fnstcw
aad
mov
in
xchg
jl
xor
out
and
push
aad
jl
ja
jae
or
clc
out
in
push
jnp
add
add
arpl
rorl
mov
arpl
add
xor
jmp
or
rcll
add
idiv
cmp
jmp
pop
daa
idiv
pusha
loopne
popa
aas
test
push
aam
inc
test
mov
cmp
loopne
or
testl
aam
mov
je
or
in
jnp
xorl
bnd
jb
jge
xor
jecxz
out
incl
or
cmpsb
sbb
pop
cmp
jmp
mov
int3
lret
cmp
and
adc
call
and
jle
add
jecxz
inc
rorl
loopne
adc
mov
call
or
add
jg
cmc
add
add
sub
mov
pop
add
out
xor
pop
lret
enter
jmp
inc
rolb
in
cli
out
xor
stc
mov
xor
sbb
xor
add
mov
cmp
pop
mov
inc
mov
adc
loop
pop
jmp
adc
stos
sub
add
add
sahf
out
inc
pop
aad
inc
pop
jmp
xlat
mov
ficompl
fsubrp
mov
loopne
sahf
fiadds
daa
icebp
loop
mov
stos
add
icebp
sub
add
call
aad
inc
addr16
xor
mov
mov
pop
lods
lods
pop
xor
leave
pop
sub
add
add
pop
push
std
sbbb
pop
push
in
sbbb
popa
push
fldl
or
inc
popa
push
int
popa
add
loopne
xchg
ljmp
lret
pop
je
cmpsb
cld
call
out
out
inc
call
mov
pop
push
out
xor
mov
add
sub
jmp
add
add
insb
add
sti
imul
sub
and
es
ret
shr
andnps
test
sub
orl
sarb
aas
cmp
sbb
pop
jne
cmp
clc
pop
aas
mov
mov
mov
mov
sar
mov
ds
add
adc
lret
das
add
jnp
xor
mov
add
aaa
or
mov
es
sarl
jmp
cmp
xor
stc
pop
test
cmpsb
out
inc
add
inc
shll
jnp
add
push
inc
jecxz
dec
add
leave
adc
mov
stc
sbb
adc
jl
sti
pop
jp
roll
and
cld
ljmp
jne
and
sbb
popa
pop
stc
jb
inc
add
pop
mov
jle
jb
inc
add
dec
lcall
jae
outsl
testl
enter
shlb
or
call
pop
out
gs
pop
loope
add
loope
jg
call
cmp
pop
xlat
das
and
cmpsb
imul
pop
ljmp
add
add
push
add
call
add
jg
lock
xchg
bswap
jbe
fcmovnbe
movsl
into
lea
out
inc
or
inc
jge
loop
jne
inc
add
xlat
fcoms
adc
inc
xchg
sar
xor
insb
das
call
sub
lahf
repz
shrb
sbb
sub
xor
bound
add
sbb
or
fidivs
add
leave
aam
aad
jl
adc
je
pusha
push
adc
jne
jge
or
jns
fcoms
call
stos
adc
xor
and
jl
int
neg
push
jge
mov
int
repnz
enter
fcoms
fdivrl
test
xorb
inc
add
add
aas
test
aam
cmp
orl
adc
cmp
mov
pop
mov
ss
jg
sub
hlt
adc
jnp
cmp
iret
out
call
sar
add
mov
sarl
adcl
push
jae
out
call
out
aas
testl
add
add
jb
inc
loop
cld
jmp
fnstenv
rol
inc
jecxz
dec
add
stc
jge
nop
adc
movsl
hlt
jl
iret
add
xor
out
iret
or
and
and
inc
out
inc
cmp
neg
insb
idivl
mov
or
stc
adc
or
call
and
jbe
add
add
fadd
sbb
adc
std
mov
xlat
cld
lcall
fisttps
mov
std
cmp
out
loop
clc
sbb
dec
icebp
add
push
dec
mov
into
cmp
lock
loop
int
cmp
or
pop
lock
mov
push
cmp
in
jmp
or
fxch
adc
pop
xlat
das
sub
mov
push
add
sub
add
add
je
std
push
jno
into
dec
xor
add
into
mov
lea
int
into
popf
xor
add
jo
in
dec
mov
dec
div
dec
das
call
sub
or
out
sarb
mov
fldenv
pushl
pop
call
sub
or
add
add
add
pop
dec
div
gs
call
sub
stos
in
out
jmp
jno
push
sub
test
pusha
lret
clc
jmp
loope
add
test
popf
jbe
clc
jmp
loope
add
into
clc
add
clc
jmp
cli
mov
xor
add
sti
mov
dec
sti
decl
add
mov
add
mov
decl
dec
sti
decl
xor
add
sti
lcall
dec
sti
cmp
add
cmp
add
xchg
push
sti
lcall
clc
pushl
sti
cmp
add
or
add
xor
mov
cli
decl
xor
add
xor
add
insl
in
fnstsw
cld
incl
add
loop
cld
jmp
or
mov
jns
std
lods
frndint
jmp
frndint
jmp
insl
std
xchg
imul
std
test
cld
jmp
frndint
jmp
inc
pusha
std
insl
in
jmp
je
pop
frndint
jmp
frndint
jmp
push
pusha
std
inc
loope
cmp
frndint
jmp
frndint
jmp
jg
std
sbb
adc
cld
incl
add
loop
cld
jmp
cmp
repz
in
lret
loop
out
loop
out
loop
out
loop
out
loop
cmpsl
insl
mov
lret
scas
lret
cmpsl
lret
lahf
lret
xchg
lret
xchg
les
lret
ja
jo
outsl
lret
addr16
pop
lret
push
lret
dec
lret
inc
lret
add
add
lret
aaa
lret
das
lret
daa
lret
pop
lret
pop
lret
bswap
pop
popw
lret
test
clc
cmpsl
jl
clc
mov
clc
fisttpl
clc
pop
dec
int3
clc
adc
int3
clc
std
cmp
clc
pop
dec
int3
clc
dec
dec
int3
clc
lea
int3
clc
jmp
push
int3
clc
or
push
int3
clc
in
dec
clc
cmp
add
add
lret
clc
gs
int3
clc
xchg
dec
clc
jmp
ror
test
lret
clc
and
lret
clc
jns
lret
clc
mov
lret
clc
mov
lret
clc
stos
mov
lret
clc
mov
clc
add
push
sti
fistl
cmp
lcall
push
sti
incl
push
sti
dec
xor
add
cmp
sti
decl
cmp
sti
incl
add
mov
cmp
sti
push
cmp
sti
incl
sti
jmp
cmp
sti
lcall
cmp
sti
fstpt
sti
decl
sti
ljmp
inc
sti
dec
inc
sti
std
inc
sti
jmp
add
outsb
std
or
pop
outsl
std
std
imul
lods
outsb
std
in
push
outsl
std
add
add
xchg
outsb
std
fnstsw
je
int
insl
std
vpunpckhqdq
mov
xchg
lods
or
insl
std
popf
stc
insl
std
xchg
loope
std
lea
std
test
std
jge
insl
std
jne
outsb
std
insl
pop
outsb
std
and
pop
fldcw
push
shrl
cmc
push
std
cmp
popf
push
jo
fs
add
pop
mov
mov
mov
pop
mov
pop
test
cli
pop
out
out
pop
ffreep
xchg
pop
xlat
push
je
and
sub
mov
mov
mov
je
ljmp
jne,pt
adc
xchg
and
movb
outsl
jo
addr16
fs
xchg
je
add
push
movb
inc
mov
scas
ret
clc
in
ret
clc
ret
clc
mov
xchg
ret
clc
mov
ret
clc
popa
outsl
ret
clc
aaa
je
clc
adc
inc
push
clc
and
int
clc
mov
aaa
clc
fldt
clc
jmp
clc
push
sub
clc
cmp
or
clc
cltd
add
add
clc
lea
clc
popa
hlt
ret
clc
gs
ret
clc
lods
hlt
ret
clc
xchg
in
ret
clc
ret
aam
clc
scas
int3
ret
clc
rcl
ret
clc
add
ds
lcall
ds
incl
sti
incl
sti
ljmp
mov
sti
pushl
sti
jge
sti
incl
mov
sti
jmp
mov
sti
jmp
sti
incl
add
movsl
mov
aas
mov
cmp
add
out
cltd
sti
incl
sti
jmp
sti
jnp
add
jne
add
xorb
cmpb
cmpb
add
sti
jmp
mov
inc
jmp
jecxz
cld
xor
aam
cld
and
xchg
cld
or
mov
cld
add
add
mov
sahf
cld
in
adc
popf
cld
fldl
popf
cld
int
popf
cld
cld
mov
aas
lahf
cld
lods
stos
sahf
cld
movsl
jno
cld
popf
lcall
cld
jecxz
jmp
cld
jmp
dec
popf
cld
jne
cld
jmp
adcl
push
ret
sahf
fwait
dec
ret
rcrb
ds
aam
add
add
ret
repnz
cs
negb
push
ret
mov
push
ret
movsb
cltd
push
ret
nop
cltd
push
ret
mov
test
cltd
out
ret
out
push
cltd
faddp
dec
pushf
ret
into
ret
mov
pushf
mov
ret
scas
ret
cmpsb
ret
sahf
ret
xchg
ret
mov
mov
fwait
jle
push
fwait
jbe
decl
add
add
add
add
clc
jne
jns
clc
inc
jns
clc
sbb
clc
lea
clc
xchg
pop
push
dec
inc
jg
clc
pop
ja
clc
ljmp
clc
jecxz
pop
pop
vxorps
clc
ret
inc
jg
clc
lods
ja
clc
test
insb
clc
fistl
lds
mov
add
add
clc
mov
insb
clc
mov
clc
popf
push
clc
add
cmpsl
sti
call
cmpsl
sti
call
test
decl
sti
out
cmpsl
sti
sti
jmp
cmpsl
sti
call
cmpsl
sti
incl
lcall
out
sti
jmp
lcall
jnp
sti
jmp
sti
incl
add
sub
sti
out
lcall
or
lcall
ret
lcall
imul
cld
test
xchg
cld
jge
xchg
cld
jne
xchg
cld
insl
add
cld
pop
xor
cld
push
scas
xchg
cld
dec
lret
loop
cmpsl
cld
cmp
jle
cld
sub
fsubl
cld
add
add
mov
cld
std
pop
mov
cld
in
jno
cld
in
test
fisttpll
test
aad
mov
cld
cld
mov
cmpsl
popf
cld
lods
popa
sahf
cld
movsl
jae
cld
popf
xor
add
xor
mov
loop
jmp
loop
out
loop
jecxz
loop
loope
loop
xchg
add
mov
mov
add
add
add
add
inc
mov
ds
js
cs
andb
mov
sti
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
into
mov
testb
mov
add
mov
add
mov
add
loope
sub
xor
push
inc
mov
add
mov
clc
flds
clc
sarl
mov
clc
aad
mov
clc
test
xchg
clc
xchg
xchg
clc
jns
mov
clc
addr16
mov
clc
jae
mov
clc
popl
clc
jne
mov
clc
mov
xchg
jmp
add
add
add
add
xor
add
xchg
sti
lcall
sti
jge
sti
call
xchg
sti
ljmp
sti
incl
xor
add
dec
jns
inc
pop
insl
push
dec
gs
dec
imul
das
aas
gs
insl
push
outsb
pushw
pop
aas
gs
cmpsl
dec
outsb
or
outsl
add
dec
je
addb
sahf
pusha
popa
insl
cmpsb
xor
add
add
xlat
inc
jno
popf
inc
pop
jb
inc
popa
je
push
pop
insb
sbb
je
inc
data16
mov
jo
inc
mov
push
arpl
cld
push
fidivs
je
in
push
lret
loopne
data16
loopne
insb
sti
out
pop
cmp
shr
dec
mov
stos
cld
lods
fidivs
arpl
cltd
cld
ss
pop
pop
add
add
insb
pop
cmpl
imul
je
push
inc
outsb
mov
push
subl
cmp
cld
and
es
push
adc
inc
or
ss
mov
sbb
inc
and
outsb
cld
addr16
dec
mull
insb
lds
push
shll
xor
add
push
mov
jne
inc
shlb
add
add
inc
shrb
mov
cmovge
imul
xor
mov
jno
add
inc
je
dec
sub
xor
jbe
push
sbb
ds
jbe
xor
xchg
add
dec
inc
inc
dec
dec
add
sti
insl
add
inc
arpl
dec
dec
arpl
ficomps
cmp
insl
adc
push
insb
or
add
and
bound
xor
mov
dec
enter
fucomi
inc
outsb
jmp
add
push
mov
mov
arpl
fisubrs
popf
insb
mov
andb
insl
jge
pop
jo
mov
inc
insl
push
mov
pop
mov
inc
insl
add
pop
add
mov
add
pop
pop
cmp
inc
push
outsl
testb
loop
jno
fidivs
add
dec
insb
je
jb
je
pusha
addr16
loop
pop
inc
mov
push
push
xor
outsl
test
insb
inc
cltd
pop
pop
add
jne
inc
jno
cs
pop
outsl
cltd
push
pop
outsb
pop
pop
cmp
inc
je
pop
sub
je
push
push
arpl
dec
data16
sub
pop
popa
add
add
dec
pop
fs
cld
int
maxps
adc
popa
pop
loop
std
inc
aas
imul
xchg
inc
inc
sub
sub
incb
mov
pop
insl
adc
pop
pop
adc
cld
leave
loopne
pop
pop
repnz
out
loop
std
inc
call
arpl
cld
call
add
add
pushf
arpl
popa
je
stos
push
imul
insb
push
loop
ljmp
xor
cmpsl
push
push
dec
loop
hlt
add
cmp
js
sub
jo
xor
dec
xor
inc
or
xor
add
dec
add
dec
cld
pusha
push
dec
sub
insl
or
pop
add
xor
and
dec
add
cmp
add
add
add
add
inc
les
xor
add
enter
ret
pusha
loop
add
inc
xchg
push
popf
cmp
dec
loop
ret
add
dec
xchg
pusha
mov
pusha
mov
add
iret
dec
insb
dec
mov
imul
sub
jp
inc
push
test
dec
inc
cmp
jbe
inc
dec
fs
jecxz
imul
add
add
add
add
jb
push
fmulp
and
or
cmc
std
inc
addr16
hlt
cmp
fisubrl
xor
mov
lods
dec
fs
jae
int
xor
lock
addr16
sarb
nop
lds
jmp
mov
dec
addr16
xor
fs
push
js
mov
insb
gs
repnz
add
lcall
js
xor
add
je
sbb
insb
imul
xlat
dec
outsb
mov
aas
je
call
xor
dec
lcall
jae
push
gs
sub
das
aas
gs
arpl
cwtl
dec
outsb
xchg
dec
add
gs
repz
insb
loop
dec
imul
add
add
add
mov
je
loop
std
cmp
movsb
pop
je
mov
jg
js
jo
push
add
jmp
push
jnp
js
sbbl
inc
insl
add
ficoms
addr16
jno
arpl
and
loop
add
push
inc
addr16
inc
js
mov
jo
add
popa
add
movb
in
pop
jb
mov
jmp
jo
add
add
lock
add
testl
addr16
mov
inc
test
adc
stos
push
mov
xor
dec
test
mov
imul
gs
push
xor
pop
out
add
sub
popa
adc
imul
inc
or
push
aas
adc
add
add
into
and
popa
aad
lock
shrl
aas
ret
inc
les
cmp
add
xor
lret
dec
outsb
mov
mov
pop
fwait
xchg
push
pop
test
cmc
insl
mov
dec
pop
mov
sub
insb
inc
arpl
pop
push
jmp
dec
dec
push
add
add
inc
dec
inc
add
cmp
outsb
sbb
cmp
imul
adc
outsb
lock
add
cld
push
sbb
add
gs
je
outsl
push
insb
and
jo
cld
dec
outsb
push
imul
add
mov
insb
insl
dec
fs
push
data16
add
add
dec
outsl
dec
popf
popaw
insb
sahf
sub
add
dec
gs
sbb
gs
pop
inc
and
add
cmp
dec
je
std
push
insb
gs
dec
jo
repnz
pop
push
mov
jo
loop
pop
je
cmc
pop
outsb
lahf
push
pop
add
mov
dec
call
jno
xchg
push
outsb
mov
roll
inc
mov
add
xchg
pop
arpl
pop
arpl
andb
bound
movsb
pop
xor
stos
sti
bound
pop
arpl
cld
xchg
fdivp
data16
add
inc
notb
cmp
insl
addr16
popa
add
out
addr16
cmp
daa
dec
outsb
imul
dec
insl
jmp
js
loop
incb
xor
popa
add
add
sbb
add
adc
pop
mov
lret
pop
scas
sbb
add
mov
push
rcll
push
mov
out
cmp
jl
xchg
je
xor
xchg
pop
mov
gs
dec
pusha
jnp
sub
loop
stc
or
and
inc
add
jae
push
cmp
dec
sub
add
and
add
ss
add
pop
sti
push
pop
xor
sbb
and
add
adc
and
push
cli
sub
cld
std
movsl
lret
mov
shl
arpl
loope
ljmp
lret
xchg
mov
jae
movsl
mov
xchg
add
jnp
pcmpgtb
ljmp
inc
add
add
add
cmp
arpl
ljmp
ss
je
xor
pop
or
sbb
inc
bound
adc
push
add
xor
gs
insw
jnp
je
cltd
insb
pop
insl
cmpsb
add
aas
gs
hlt
pusha
insb
es
mov
pop
jne
pop
imul
add
push
xor
data16
jbe
or
push
add
add
xor
inc
xchg
pop
push
pop
es
jb
adc
cwtl
imul
or
pop
push
xor
pop
popa
daa
xor
pop
popa
notl
je
testl
add
and
pop
arpl
stos
das
cs
outsb
insl
testb
loope
outsb
imul
dec
cmp
adcl
add
loop
incl
jecxz
outsb
mov
pop
gs
jae
push
leave
popa
imul
jo
loop
incl
ret
popa
outsb
xchg
pop
xchg
bound
sub
ljmp
add
ja
pop
aas
loop
call
addr16
insb
dec
std
add
out
pop
insl
adc
or
adc
or
xor
pop
std
sbb
jo
add
add
cmc
pop
daa
push
divb
xor
push
sub
int3
pop
sbb
shll
add
add
mov
cmpsl
repz
outsl
or
adc
mov
jbe
sbb
add
mov
push
xchg
sbb
mov
push
xchg
pop
xchg
push
pop
outsb
add
dec
and
sub
idivb
pop
add
add
incl
adc
adc
out
add
pop
sbb
sbb
ja
xor
stos
fdivr
bound
add
outsb
cld
fisubrl
and
pop
pop
add
lds
pop
aad
sbb
ret
lods
leave
xor
mov
cmc
pop
cs
test
jmp
mov
sbb
push
jmp
add
add
add
add
cmp
fwait
jle
push
push
je
jae
mov
bound
xor
add
imul
and
or
lret
and
cld
or
and
leave
add
jae
sub
mov
pop
dec
aad
add
inc
jb
pop
inc
arpl
cmp
imul
das
aas
gs
jno
add
add
gs
pop
sbb
pop
and
cmp
and
outsl
push
or
sti
sub
pop
imul
pop
jae
in
jmp
sub
inc
aas
repnz
push
push
sti
bound
ds
inc
aas
xor
inc
pop
popa
aas
push
std
inc
pushl
dec
addr16
cmp
xor
cld
sbb
push
pop
insb
add
add
ljmp
shlb
push
loop
cld
cmp
adcl
jns
imul
in
popa
mov
push
pop
xchg
dec
add
mov
pop
pop
jno
inc
pop
jb
push
xchg
out
dec
xor
popa
inc
imulb
cmp
inc
add
add
sub
in
cmp
and
arpl
add
in
popl
das
and
jo
sbb
popa
lcall
sti
push
adc
pusha
add
push
or
push
cli
and
push
hlt
pop
dec
loop
outsb
add
or
lret
push
roll
mov
lahf
icebp
out
shll
pusha
mov
in
movsl
add
xor
pusha
jg
mov
icebp
out
fdivl
add
mov
add
add
add
cld
bound
or
sbb
icebp
bound
inc
sbb
inc
in
pop
sbb
jecxz
bound
xor
xor
sub
mulb
pop
push
je
lock
enter
loope
xor
push
jecxz
insl
enter
enter
les
xor
loope
icebp
bound
xchg
push
arpl
add
add
inc
jmp
cmp
jg
inc
adc
pop
pop
je
add
xchg
add
push
pop
imul
xor
incl
sti
adc
arpl
add
adc
pushw
mov
push
jb
add
sub
imul
arpl
xor
inc
sub
je
add
add
pop
add
test
cmc
pusha
outsb
daa
std
outsb
inc
js
dec
add
pop
imul
push
pop
xchg
lret
mov
into
pop
je
mov
insl
subl
inc
inc
cld
dec
jo
stc
outsl
arpl
out
push
add
push
std
inc
inc
pop
xor
imul
pop
add
loop
push
xor
push
push
cwtl
cld
sub
pop
pop
pop
add
add
pop
push
jno
stos
dec
add
sub
push
std
cmp
add
arpl
fscale
inc
mov
jns
pop
shlb
je
fistpl
loop
incb
fisttpl
mov
mov
sahf
add
or
dec
test
test
lcall
std
dec
jb
adc
push
dec
adc
loop
jno
and
cmp
add
add
inc
jae
cmc
inc
jb
cld
out
imulb
cmp
or
add
adc
jb
xor
push
add
out
popa
xor
push
mov
shll
out
int
stos
push
adc
sahf
mov
xor
dec
out
bound
nop
and
maxps
add
add
xor
adc
out
imul
and
cmp
pop
fs
push
insl
dec
dec
adc
loope
sub
cmp
dec
or
pop
adc
xor
pop
adc
out
xor
adc
decl
in
jae
shlb
add
faddl
imul
mov
sbb
sub
pop
push
add
add
das
dec
add
dec
outsb
and
outsl
sbb
or
sti
cs
add
dec
pop
and
outsl
or
gs
or
or
je
daa
push
imul
gs
in
add
add
push
popa
jmp
or
rcrb
pop
outsl
int3
sub
add
cli
pop
arpl
pop
addr16
incb
stc
cmp
jnp
dec
add
add
mov
and
das
or
loop
arpl
std
inc
jecxz
arpl
fdivr
add
scas
rclb
rcll
xchg
outsl
addr16
cld
daa
loopne
dec
arpl
jo
xchg
xchg
cld
jne
lret
xor
push
add
and
dec
aas
cld
dec
arpl
imulb
xor
xor
popa
add
inc
std
inc
add
add
inc
dec
arpl
inc
inc
loop
incb
movsb
xor
sub
fs
dec
add
xor
add
mov
pop
mov
data16
sbb
out
stc
cs
or
pop
lahf
sbb
push
jge
jns
loop
cmp
aaa
jp
mov
in
adcl
push
add
add
xor
push
inc
cmc
inc
push
inc
and
dec
add
xor
inc
imul
adc
or
psubw
repnz
push
add
repz
cli
or
mov
or
loope
ljmp
hlt
pop
push
les
dec
mov
and
mov
add
rorl
imul
add
add
insl
mov
xchg
in
jae
lea
imul
dec
cmc
bound
and
add
dec
jae
xor
je
out
and
and
or
imul
sub
add
ud2
fs
pop
add
inc
xor
addr16
outsb
out
outsl
push
sub
add
inc
xor
add
add
hlt
arpl
add
xor
add
imul
addr16
xor
bound
gs
xor
or
add
push
xor
xor
outsl
and
pop
arpl
xor
popa
outsb
mull
outsb
pop
or
add
cmp
push
out
je
loop
std
inc
add
add
popa
outsb
icebp
sub
je
xor
add
push
inc
mov
add
push
add
movb
mov
push
dec
xchg
dec
pop
jge
xor
loop
decb
scas
xor
ret
inc
imul
dec
insb
jg
pop
inc
stos
push
insl
loop
das
inc
xor
push
sub
hlt
outsl
add
in
cld
inc
add
add
addr16
fs
dec
sub
arpl
cmp
xor
insl
adc
and
xor
stos
add
cmc
or
adc
imul
cmc
leave
xor
add
and
push
out
lds
pop
aad
decl
mov
add
and
outsl
orl
mov
sbb
push
insl
and
add
add
push
sub
xor
pop
pop
pusha
push
push
cmc
inc
push
dec
pop
inc
pop
sub
push
insb
loop
scas
add
push
inc
push
cs
inc
dec
xor
lcall
clc
add
add
or
clc
xor
push
fcomip
std
adc
sbb
or
mov
ja
loope
popf
xchg
punpckhdq
add
add
push
add
aam
fs
lods
or
xchg
stos
js
push
loope
ljmp
inc
adc
cmp
imul
pop
add
pop
outsb
add
push
je
lret
add
cs
inc
fsubs
gs
xor
insl
jo
add
rorb
pop
ficomps
insb
add
add
dec
add
cmp
imul
gs
or
gs
imul
das
cmp
pushl
push
add
popa
addr16
adc
jne
adc
mov
pushl
pop
jmp
gs
pop
pop
jb
or
add
add
push
imul
mov
mov
inc
push
ja
pop
inc
arpl
add
adc
or
ja
adc
inc
icebp
pop
pop
insb
push
dec
imul
incb
jecxz
pop
je
xor
popa
jg
addr16
addr16
je
je
sbbb
mov
outsb
mov
dec
mov
add
test
dec
jg
inc
jo
mov
arpl
push
push
loop
add
mov
push
mov
arpl
push
push
add
add
xor
push
adc
inc
inc
dec
or
pop
adc
add
xor
push
and
sub
dec
cld
pop
sbb
adc
gs
pop
push
or
out
xor
push
pop
out
std
add
push
add
hlt
add
push
rclb
or
aas
popf
or
mov
mov
rclw
mov
pop
mov
add
add
je
cmpsb
push
outsb
std
xchg
push
test
mov
or
add
adc
mov
adc
cmp
adc
adc
je
and
xor
loope
and
add
adc
and
imulb
push
sbb
pop
or
ret
sbb
add
and
xchg
pop
inc
les
add
nop
cmc
insl
rclb
pop
aad
pop
lcall
jae
cwtl
adc
test
out
mov
add
dec
add
arpl
add
dec
gs
add
bnd
lret
xor
add
insb
popa
pcmpgtb
mov
cmp
dec
dec
mov
fs
or
add
sub
add
add
loop
je
les
add
jae
add
push
cmc
cmp
sub
push
popa
pop
or
jbe
dec
push
cmp
inc
add
je
inc
add
fs
add
gs
or
gs
xor
push
jge
pop
inc
jnp
pop
dec
push
lods
pop
push
loop
cld
dec
inc
sbb
inc
push
inc
outsb
inc
jmp
imul
add
loop
add
inc
push
insb
dec
or
push
dec
add
out
push
add
push
or
dec
imul
sub
or
aaa
pop
je
dec
pop
je
das
das
jo
push
add
sub
dec
scas
jns
imul
cld
dec
sbb
dec
outsb
dec
arpl
xor
add
vmwrite
add
xchg
or
xor
insb
add
adc
adc
push
xor
push
loop
dec
add
and
or
popa
sub
xor
add
sbb
and
xor
add
sbb
xor
xor
lahf
sbb
xor
and
add
or
pop
nop
psrlq
add
cmp
add
movsb
sbb
mov
sbb
mov
xchg
ljmp
inc
sbb
mov
insl
push
inc
push
push
cmp
push
inc
cmp
push
aaa
or
out
inc
sbb
rorb
fidivs
cmp
adc
sbb
mov
add
lcall
push
repnz
cmc
fwait
or
add
lea
push
jmp
rolb
add
adc
adc
and
imul
pop
cmp
cs
hlt
imul
das
aas
gs
pop
imul
pop
insl
pop
call
dec
gs
imul
daa
sub
pop
popa
fisttps
dec
je
or
add
add
push
dec
inc
cvtps2pd
sub
add
jb
or
imul
gs
das
insb
add
cmovge
push
popa
je
or
imul
add
mov
pop
addr16
andb
outsl
addr16
mov
cmp
lds
test
popa
loop
add
push
pop
push
lret
aas
ret
aaa
inc
add
add
cld
push
add
pop
insb
loop
add
xor
pop
je
inc
pop
imul
push
addr16
pusha
ds
pop
pop
pop
repnz
das
loop
push
arpl
xor
cmp
inc
bound
inc
add
xchg
add
xchg
popa
pop
mov
mov
mov
xor
sahf
or
gs
push
loop
cmc
add
push
les
add
jbe
stos
inc
xchg
xor
add
sbb
push
inc
xor
add
or
dec
or
inc
loop
testb
pop
push
inc
ds
and
in
das
inc
std
sbb
add
xor
push
add
xor
call
adc
add
add
cs
push
shr
add
add
rcrl
and
add
add
jecxz
aad
or
push
loope
ljmp
mov
push
cltd
test
nop
jl
jo
xchg
sbb
fwait
jp
ja
loope
inc
mov
pop
sub
loope
dec
test
adc
fdivp
pushl
inc
add
popa
out
outsb
dec
or
arpl
sbb
and
adc
call
sbb
add
bndstx
ficoms
adc
add
pop
je
stc
insl
gs
jmp
xor
push
mov
insl
gs
sbb
or
add
inc
sbb
call
cmp
data16
jae
sti
xor
add
cmp
pop
push
pop
jecxz
outsl
push
push
dec
add
dec
push
or
arpl
adc
mov
dec
push
lret
outsl
fcomps
cmp
add
inc
sub
and
fs
adc
add
inc
loop
cmp
mov
mov
test
mov
pop
outsb
scas
frstor
gs
test
pop
mov
jge
sub
add
mov
push
dec
jb
pop
dec
imul
dec
lret
push
imul
cld
cmp
or
dec
cmovle
in
pop
outsb
inc
cwtl
cld
sub
pop
popa
outsb
push
push
pop
jae
pop
popa
outsb
push
loope
addr16
push
arpl
push
pop
dec
out
xor
push
add
les
cmpsl
adc
pusha
mov
icebp
add
pop
or
psllq
sbb
roll
shrb
mov
mov
add
mov
mov
xor
or
add
xor
ss
xchg
pop
push
adc
push
push
adc
loop
cmpsb
xor
pop
sbbl
inc
add
add
dec
push
adc
lock
std
xor
pop
push
adc
cmp
je
pop
sbb
add
lcall
mov
adc
add
mov
outsb
add
add
sbb
loope
ljmp
xchg
je
test
arpl
loope
ljmp
lahf
adc
add
cltd
xchg
adc
add
xor
outsl
mov
sti
bound
adc
and
add
push
dec
fs
in
movq
je
add
arpl
push
jecxz
inc
add
add
push
add
loopne
jo
adc
test
jecxz
inc
dec
xor
gs
ljmp
or
jae
or
pop
je
in
jae
dec
pop
outsb
pop
in
add
adc
cs
dec
jne
out
dec
dec
cld
pusha
outsl
push
cmc
ljmp
xor
push
pop
sti
dec
gs
rep
add
add
pop
inc
lret
das
imul
out
gs
pop
je
push
push
pop
add
outsb
pop
add
loop
push
je
es
push
daa
pop
outsl
idivl
je
push
inc
add
inc
add
into
and
pusha
dec
mov
lea
js
cltd
cld
lods
loop
push
je
addr16
arpl
arpl
inc
pop
jbe
bound
outsb
inc
loop
cld
inc
jl
pop
outsb
je
dec
dec
push
mov
dec
pop
and
fs
cld
lahf
loop
push
je
xor
inc
add
sub
adc
dec
int
and
add
inc
pusha
and
cmp
sbb
loop
push
add
sbb
pop
les
add
lahf
adc
xor
psllq
in
pop
pop
push
or
add
loope
add
jecxz
push
xlat
shufps
rorb
pop
mov
sbbb
add
add
push
push
adc
dec
sub
pop
inc
pushl
loop
xchg
cmp
clc
jmp
adc
in
ds
pop
cs
add
pushl
and
sbb
adc
imul
add
fdivp
bound
movsl
push
bound
out
insl
or
xor
jl
mulb
add
arpl
in
push
jae
loope
inc
mov
loopne
sbb
push
fs
loopne
bound
loope
add
xor
adc
sbb
ds
jmp
outsb
out
jae
clc
decl
clc
data16
xor
add
add
insb
jb
adc
insb
iret
sub
add
adc
scas
xor
push
ljmp
sbb
imul
add
xor
neg
pusha
add
gs
adc
dec
xor
add
push
in
ljmp
jecxz
arpl
clc
and
call
pop
jb
adc
add
xor
das
adc
pop
cmc
jae
lret
xor
add
add
loop
pop
imul
dec
push
or
push
mov
pop
je
stc
add
ficomps
in
pop
add
xlat
clc
push
ficoms
add
and
out
pop
imul
cld
pop
mov
pop
imul
and
les
add
loopne
pop
insl
mov
sbb
dec
outsb
add
add
pop
add
dec
add
mov
arpl
cld
xchg
cmpsb
dec
je
xor
inc
loop
push
inc
pop
addb
ljmp
std
mov
dec
jg
inc
xor
add
or
inc
adc
push
pop
or
ss
sti
adc
xor
arpl
or
cs
add
sbb
push
and
cld
or
xor
add
xchg
or
cs
mov
or
pop
mov
iret
push
mov
iret
push
mov
aad
stos
das
stos
pop
mov
int3
push
jbe
into
bound
push
sub
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
or
add
or
add
sti
xor
add
xor
add
xor
add
xor
add
xchg
mov
lret
xor
lret
xor
add
xchg
cmp
das
xchg
cmp
jmp
mov
mov
add
jnp
add
jnp
add
mov
add
xor
add
sub
add
mov
outsl
idiv
inc
xor
add
xor
add
xor
add
add
or
add
or
add
loop
pop
std
lds
cld
jmp
cltd
les
add
add
cltd
cld
jmp
cltd
mov
jmp
cltd
cld
jmp
fstps
jmp
cltd
cld
jmp
test
cld
jmp
cltd
cld
jmp
sub
cld
jmp
cltd
cld
jmp
xchg
adc
lcall
ret
push
mov
cltd
add
mov
pushf
enter
rorl
jns
cltd
add
add
jmp
mov
or
sbb
jle
mov
adc
pushl
lock
cmpb
test
mov
test
sbb
and
jg
cmpsb
icebp
mov
lea
sub
inc
lock
sti
pop
jp
movsb
or
mov
imul
outsb
xchg
cmp
out
xchg
add
add
imul
mov
lea
imul
idiv
repnz
jns
add
jno
testl
pop
or
pusha
mov
mov
cmpsl
mov
jno
xchg
dec
mov
pop
fsubl
push
push
sbb
rcll
inc
pop
sbb
push
bound
add
pop
pop
pusha
xchg
je
in
push
arpl
push
test
orl
dec
jae
loope
add
jne
movsl
adc
sub
add
or
aas
rcrl
mov
outsb
sbb
gs
push
pop
push
pop
jmp
test
lods
mov
out
mov
scas
imul
add
mov
push
xlat
int
sbb
fistpll
stc
mov
or
or
aas
in
loopne
loope
push
sarl
push
les
pop
mov
push
jmp
mov
daa
xchg
mov
xor
sub
push
and
jne
frstor
jp
test
add
lds
and
ja
and
incb
fists
stos
xor
jno
es
jle
clc
mov
mov
into
fimull
inc
xchg
pop
mov
push
fiaddl
arpl
mov
xchg
jb
out
jle
sub
jnp
sbb
xor
mov
xchg
scas
cmp
add
add
xor
xorb
sub
push
jnp
emms
in
or
push
dec
adc
lcall
pop
std
cmp
cmpsb
fistl
sub
test
subb
xchg
cmp
or
mov
adc
mov
out
loop
out
loop
out
loop
aas
inc
and
out
inc
add
add
xor
add
xor
add
xor
out
xor
rcrl
call
loope
add
loope
add
loope
add
mov
xor
xor
out
loope
add
loope
add
loope
add
loope
add
loope
add
cmp
pushl
add
or
cmp
add
add
add
add
add
add
cmp
add
arpl
add
arpl
cmp
shrl
cmp
cmp
cmp
scas
cmp
pop
scas
cmp
arpl
cmp
dec
scas
cmp
inc
scas
cmp
aas
scas
cmp
ja
cmp
jg
cmp
adc
cmp
xor
add
mov
add
scas
cmp
imull
cmp
adc
cmp
cmp
cmp
dec
scas
cmp
cmpsl
scas
cmp
mov
cmp
loop
cmpl
movsl
cmpl
adc
cmpl
in
cmpl
test
xor
xor
loop
xor
loop
xor
loop
xor
loop
xor
loop
xor
inc
loop
xor
inc
loop
xor
inc
loop
xor
inc
loop
xor
inc
loop
ss
loop
xor
inc
loop
ss
loop
ss
loop
ss
loop
ss
loop
ss
loop
jecxz
and
mov
and
cmp
xor
and
aas
cmp
xor
mov
add
mov
xor
cmp
xor
aaa
mov
xor
mov
xor
add
xor
add
xor
add
xor
add
xor
add
loop
out
loop
out
loop
jb
or
out
loop
out
loop
out
loop
fldcw
loop
out
loop
add
loope
add
add
add
add
cmp
add
loope
add
loope
add
loope
add
inc
cmp
jmp
loope
add
loope
add
cmp
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
cmp
jmp
loope
add
loope
add
cmp
jmp
add
add
add
add
xor
jmp
loope
add
jnp
add
mov
sub
add
sahf
cmp
jnp
add
mov
add
cmp
jnp
add
dec
sub
add
adc
sub
add
dec
sub
cmp
cmp
add
or
cmp
sti
sub
or
add
pop
pop
cmp
sti
sub
add
xor
add
xor
add
and
add
xor
add
mov
jmp
dec
or
loop
cld
jmp
mov
jmp
mov
jmp
pop
or
loop
cld
jmp
mov
jmp
mov
jmp
jbe
loop,pt
cld
jmp
mov
jmp
mov
jmp
cmp
loop,pt
cld
jmp
mov
incl
add
loop
cld
jmp
loop
loop,pt
cld
jmp
mov
jmp
mov
jmp
mov
loop,pt
cld
jmp
mov
jmp
mov
jmp
into
add
loop
cld
jmp
mov
jmp
mov
jmp
flds
loop,pt
out
loop
out
loop
out
loop
xor
in
out
loop
out
loop
out
loop
lret
xor
add
xor
add
xor
add
add
loop
inc
or
out
loop
out
loop
jns
add
out
loop
out
loop
out
loop
add
loop
out
loop
out
loop
addr16
loop
out
loop
out
loop
sbb
movsb
xor
add
xor
add
xor
jmp
fdivl
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
xor
jmp
loope
add
loope
add
sahf
xor
jmp
loope
add
loope
add
and
jmp
loope
add
loope
add
and
jmp
loope
add
loope
add
and
jmp
loope
add
loope
add
xor
lret
xor
add
xor
add
jae
add
xor
add
xor
add
mov
add
xor
add
add
sub
add
mov
add
jnp
add
xor
add
dec
xor
add
xor
add
scas
cmp
dec
xor
add
add
cmp
add
and
cmp
or
add
xor
add
xor
add
add
or
add
loop
cld
jmp
lds
loop
cld
jmp
mov
jmp
mov
jmp
or
jmp
mov
jmp
mov
jmp
xor
jmp
mov
jmp
mov
jmp
and
jmp
mov
jmp
mov
jmp
mov
loop,pt
cld
jmp
mov
incl
add
loop
cld
jmp
jle
loop,pt
cld
jmp
mov
jmp
mov
jmp
jle
loop,pt
cld
jmp
mov
jmp
mov
jmp
ljmp
loop
out
loop
out
loop
cmp
add
xor
add
xor
add
xor
data16
xor
add
xor
add
xor
add
xor
fdivl
out
loop
out
loop
out
add
add
xor
add
xor
add
xor
xor
sbb
xor
das
mov
xor
das
mov
xor
das
mov
xor
das
mov
xor
sbb
int
pushl
lock
call
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
or
add
sti
sub
add
or
add
add
sti
sub
add
lret
sub
add
mov
sub
add
lret
sub
add
mov
sub
add
jnp
add
jnp
add
mov
add
jnp
add
jnp
add
dec
sub
add
cmp
add
dec
sub
add
sub
cld
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
or
loop
cld
jmp
aad
clc
add
mov
sbb
sbb
dec
stos
icebp
jmp
add
add
pop
add
loop
in
or
in
or
in
stc
icebp
in
stc
xor
jmp
sub
lock
sub
imul
sub
cmp
and
mov
add
pop
lock
jecxz
icebp
sub
adc
adc
sti
lock
mov
lock
cs
lock
fwait
lock
sub
add
imul
sub
cmp
mov
sub
shl
jno
fcomi
loope
jecxz
icebp
cs
add
adc
adc
sti
in
mov
add
or
cmp
cmp
movnti
insl
pop
xchg
cmp
mov
cmp
pop
push
cmp
bound
pop
divl
cmp
int3
inc
cmp
add
add
adc
adc
mov
cmp
sarb
xchg
mov
mov
gs
cmp
xchg
cmp
mov
cmp
test
aad
bound
fnsave
clc
jmp
loope
add
aas
bound
das
bound
out
fs
das
bound
jmp
out
fs
xor
fs
fs
add
add
test
scas
fs
xor
fs
mov
fs
das
gs
das
gs
xor
bound
out
popa
and
scas
bound
jg
inc
xor
push
xor
xor
je
jmp
xor
bound
scas
popa
mov
aas
les
das
aam
loop
in
jmp
test
sti
adc
add
add
test
sbb
cmp
sub
arpl
cmp
sbb
dec
lock
pop
sarb
out
imul
out
jnp
fucomi
mov
add
fwait
mov
out
stos
mov
out
mov
mov
out
fistl
out
jmp
push
out
sti
adc
or
xchg
sbb
cmp
out
cmp
popf
out
dec
icebp
movsl
out
pop
sarl
out
jnp
fucomp
mov
add
add
and
stos
negl
and
testl
jmp
fldenv
out
fldenv
lock
sub
cltd
and
lock
and
lock
lock
and
dec
lock
and
out
loop
mov
loop
jmp
inc
and
testb
imull
push
testl
add
add
add
jge
jae
jmp
and
mov
or
imul
and
lock
and
dec
jb
xor
jne
xor
inc
push
xor
cmp
xor
adc
xor
roll
xor
xor
mov
ja
mov
adc
ss
push
cmp
push
imul
add
add
xor
jno
mov
jge
xchg
xor
mov
add
idivb
dec
cmp
mov
cmp
popa
cmp
inc
push
dec
aas
stc
push
cmpb
push
enter
clc
jnp
clc
ljmp
add
cmp
fs
xor
loopne
dec
gs
xchg
arpl
xor
pop
sub
add
add
mov
xor
pop
pop
addr16
pop
sub
cmp
pop
cmp
push
push
cmp
push
cwtl
cmp
sarl
std
push
or
xchg
pop
sbb
test
pop
mov
cmp
pushf
jmp
leave
or
loopne
mov
sbb
shrl
dec
loopne
add
add
adc
arpl
shl
rdpmc
out
add
out
cld
scas
out
hlt
cmp
cmp
in
insb
lcall
push
in
shlb
hlt
imul
in
stc
mov
in
or
xor
in
jle
loope
mov
in
xchg
adc
jmp
sub
div
push
repnz
lock
pop
and
add
add
sbb
out
rcrb
out
rcrl
xchg
icebp
stc
push
push
mov
cmpsl
lock
pop
push
out
xchg
add
shrl
in
sub
shr
sub
js
mov
xor
sub
jmp
sub
out
and
call
aas
es
es
daa
test
test
out
in
data16
xor
repz
and
add
add
and
hlt
pop
and
cld
and
repnz
and
mov
sub
mov
xor
lea
xor
xchg
inc
xor
xchg
xor
cmp
xchg
js
ret
xor
jno
clc
dec
and
inc
fnsave
mov
dec
fnstenv
addb
fidivrs
inc
ss
xor
mov
add
add
xchg
fmull
cmpsb
cmp
cld
adc
push
add
cmp
adc
leave
loope
add
shr
das
rcl
das
clc
into
adc
add
pop
xchg
sbb
pusha
dec
xor
xor
pop
push
xor
mov
xor
xchg
push
repz
popa
jnp
mov
push
jge
fistps
cmp
mov
pop
int3
cmp
add
cs
lret
dec
pop
aas
cmpsb
dec
clc
cmp
add
inc
pop
stc
xor
arpl
xor
popa
dec
xor
popa
jge
mov
xor
clc
xor
bound
mov
xor
outsl
out
outsb
adc
in
xchg
lock
mov
pop
out
shl
in
in
sbb
std
shlb
push
sarl
cmp
test
out
insb
mov
out
jg
add
mov
out
mov
inc
out
aad
jge
in
adc
std
adc
push
push
call
xor
callw
ret
call
pop
xlat
cs
mov
cmp
clc
int3
jge
inc
mov
jmp
lods
mov
in
stos
out
in
sbb
pushf
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
ljmp
add
add
add
sub
ljmp
gs
call
sbb
push
call
and
inc
loope
es
loop
fs
inc
fs
add
xor
aad
and
aad
and
pop
and
jnp
pusha
aad
and
aad
and
aad
pop
mov
loopne
xchg
fcom
sbb
add
adc
xor
mov
xor
movsw
mov
xor
xchg
sti
cmp
ret
lock
mov
andl
insl
out
add
xchg
jmp
outsl
xchg
subl
mov
ljmp
cs
mov
cs
adc
sub
sbb
cmp
push
add
add
std
xor
pop
xor
sub
xor
nop
xor
push
cmp
push
test
cmp
test
cmp
adcb
roll
nop
cmp
push
inc
cmp
sbbb
xor
aad
cmp
xchg
add
loopne,pt
xor
aas
adc
xchg
aas
sbb
aas
adc
dec
sarl
dec
into
aas
rorb
aas
jecxz
in
add
add
push
repz
cmp
call
sub
add
cmp
jl
xor
jle
xor
jl
xor
jl
xor
call
fnsave
pop
int
mov
int
mov
int
adc
das
adc
int
adc
int3
in
repz
int3
std
repz
mov
inc
rcl
lock
shl
rolb
rcrl
add
rcl
rcrb
mov
ror
mov
roll
scas
data16
push
dec
sarl
push
shrl
roll
negl
aam
xor
insb
in
and
adc
xlat
fmul
xor
sub
inc
sub
fcmove
es
fstpl
es
mov
ret
fbld
push
add
add
and
lret
loope
push
or
pop
pop
sti
loope
push
sahf
loope
pop
mov
mov
pop
mov
jecxz
pusha
lcall
and
aam
and
aam
and
roll
int
cmp
sarl
and
xlat
jecxz
in
xlat
pop
xor
sub
xor
sub
xor
add
add
add
add
and
pop
or
xor
adc
add
movsb
xor
test
imul
mov
mov
cmp
adcb
cmpb
movsl
loope
add
xchg
cs
shll
adcl
fnsave
int3
cmp
cmp
mov
jmp
sbb
xor
sbb
xor
cmp
jg
cmp
jle
ds
jg
aas
push
jle
sti
and
call
xor
add
andl
sub
xor
adcl
bound
dec
test
xor
mov
xor
test
xor
xchg
xor
mov
out
jg
xor
jg
xor
subl
pushf
xchg
xor
add
pusha
xchg
xor
test
xor
jns
xor
push
test
inc
test
ss
shlb
mov
fcomip
sbb
cmp
rcr
int
aam
lret
mov
fcmovnb
mov
test
stos
push
cmp
sbb
pusha
or
aad
sti
in
ret
sbb
aas
sub
add
call
xchg
dec
fadd
jnp
int3
aad
enter
mov
cmp
fcomps
sbb
ficomps
jg
xor
mov
push
sbb
fimuls
into
fsubp
push
fcmovnu
les
add
enter
mov
push
push
fiadds
push
push
fidivs
pop
fstpl
pop
fnstsw
push
dec
fldl
add
xchg
sbb
fstl
sbb
ret
fnsave
sbb
sbb
fldl
sbb
faddl
sbb
fmull
adc
and
xor
sarl
and
rorl
push
das
out
pop
das
sub
imulb
js
mov
mov
pop
ds
or
sub
dec
add
add
mov
sub
and
adc
xor
mov
xor
mov
xor
nop
inc
xor
cmp
mov
jae
adc
stos
mov
data16
lods
xor
lods
push
cmp
lcall
repz
add
jns
cmp
add
add
jbe
ds
jbe
aas
divl
aas
les
cmp
stc
jmp
jg
xor
test
xor
test
xor
repz
addl
xor
cmp
aad
idivl
push
jl
cmp
lds
test
cmp
js
cmp
sbb
add
add
js
ds
js
loop,pt
xlat
stc
lods
outsl
aad
movsl
fcmovnbe
sbbb
cld
jmp
mov
mov
lock
rolb
scas
icebp
xchg
shlb
ret
enter
enter
into
add
int3
jne
aaa
mov
iret
push
lods
cmp
jnp
leave
into
stos
lods
sahf
into
pop
sbb
fldt
or
aad
add
add
iret
aam
clc
sub
cmp
mov
fsts
adc
xchg
rclb
xor
xlat
insl
sbb
fsubs
sbb
test
sbb
ficompl
sbb
sbb
jge
xchg
fdivs
fsubs
sbb
fdivrs
pop
out
adc
push
add
xor
rcl
and
ror
and
roll
add
popf
and
aam
and
andb
aam
and
iret
pop
sbb
xor
xchg
sbb
jmp
rcrb
mov
into
inc
push
add
pushf
mov
xor
cltd
cmp
repz
int3
xor
mov
int3
xor
sub
loop
inc
sub
sarl
pop
or
cmp
add
adc
cmp
xor
cmp
sub
cmp
xor
cmp
cmp
adc
mov
push
adc
arpl
jmp
fbstp
add
scas
mov
movsl
xchg
pusha
das
ljmp
sub
add
test
xor
adc
jne
cmp
pop
addr16
es
xor
add
add
add
add
jp
movb
xor
dec
gs
fsubs
repnz
pop
gs
sub
ss
gs
pcmpgtd
jl
test
dec
data16
aaa
pop
jnp
cmp
jnp
cmp
jp
cmp
jp
cmp
sbb
cmpsb
jne
cmp
jae
cmp
je
cmp
xchg
pop
call
add
fldenv
aad
leave
lods
aad
leave
js
adc
fsubs
mov
shrb
scas
je
xor
push
mov
rclb
mov
shrb
clc
xlat
jno
rcl
jg
xlat
test
not
xchg
xlat
cltd
stos
xlat
cmpsl
into
lods
xlat
lods
mov
mov
xlat
iret
scas
xchg
xlat
aad
xchg
jecxz
rcl
add
add
fcmovnbe
testl
dec
rorl
pushl
clc
rcll
int
or
call
cli
rcll
add
fistl
cmpsb
and
adc
sbb
add
std
adc
popa
adc
imul
xlat
jne
push
xlat
adc
mov
cwtl
jae
sahf
insl
adc
xor
mov
add
add
adc
aad
push
out
aad
push
cld
aad
push
ljmp
adc
mov
push
cmp
xchg
call
cmp
fistpll
int3
mov
cmp
movsb
cmp
mov
lea
pushf
cmp
arpl
ss
ja
or
ds
cs
mov
add
add
xor
call
push
fldcw
jp
mov
das
shrl
daa
das
pop
aaa
stc
cs
das
cltd
cs
pop
adc
cs
sub
mov
mov
sub
xor
jl
xor
jns
xor
js
xor
jns
xor
shll
ss
jns
adc
ss
dec
cmp
fs
add
add
fs
and
mov
xchg
arpl
cmp
arpl
sbb
cmp
or
addr16
sbbl
cmpsb
jg
decl
outsl
stc
mov
jl
xor
jge
xor
mov
loop
fsubrs
push
js
pop
pop
pop
xlat
jle
mov
js
add
in
inc
aad
cmc
lods
aad
in
das
lret
mov
enter
iret
iret
es
int3
cld
jmp
es
mov
shrb
adc
shll
icebp
pop
sar
icebp
pop
rorb
out
stos
xlat
popf
xlat
scas
sarb
aam
aad
int3
mov
loopne
xchg
aad
lods
xor
fadds
add
pop
sbb
sbb
mov
xchg
scas
push
mov
ficoms
push
int
push
add
xor
xchg
jge
cmp
mov
adc
iret
rcll
shlb
rorb
sub
jnp
jecxz
ljmp
into
test
scas
into
adc
iret
adc
adcl
iret
sbb
sti
into
xor
fmulp
sub
repnz
add
stos
adc
imul
sarl
mov
cmp
lcall
push
clc
jge
xor
add
lss
mov
sub
scas
inc
sub
mov
xor
lods
mov
push
xchg
push
xor
or
pop
xchg
stos
xor
mov
dec
aaa
cld
cwtl
lret
cwtl
fwait
sub
push
ss
inc
ss
or
add
add
jmp
xor
out
add
sub
dec
xor
adc
cmp
xor
cmp
int3
popa
mov
cmp
or
or
jns,pt
cmpl
cmp
xchg
aas
test
aas
loopne
cltd
aas
jle
aas
es
mov
xor
dec
arpl
sahf
arpl
xor
fs
xor
fs
aam
out
xor
xor
fs
xor
fs
lret
xor
fs
xor
push
into
adc
xor
pusha
rorb
into
jne
mov
into
icebp
mov
int
mov
int
mov
int
adc
int
adc
adc
outsl
push
xlat
rclb
in
pop
shlb
jmp
lret
and
sub
rcr
arpl
movsl
leave
add
fmul
add
add
pop
iret
popa
scas
mov
ret
rolb
test
test
je
add
pop
int3
inc
repnz
test
xor
jns
scas
aam
add
roll
add
cmp
xchg
roll
add
shlb
add
rcrb
shlb
pop
shll
ror
add
xlat
out
add
fadds
jb
addb
mov
dec
fdiv
add
popf
add
xlat
jle
aas
xlat
call
push
popf
aad
pop
lcall
push
sbb
call
add
test
add
add
popf
aaa
scas
sbb
ss
sbb
ss
sub
mov
inc
fcompl
pushl
outsb
sub
xor
mov
stos
adc
xor
fwait
xor
stos
sahf
xor
stos
bound
lcall
lods
lods
out
cmp
lahf
cmp
xchg
inc
cmp
lods
adc
repz
add
cmp
cmp
sub
cmp
and
cmp
pop
cmp
add
jle
sub
jo,pt
outsl
ds
jge
data16
aas
in
pusha
aas
jge
nop
aas
cmp
aas
inc
js
aas
or
ljmp
pop
xor
mov
xor
data16
cmpsb
xor
hlt
bound
fisubs
xor
bound
and
movsb
xor
mov
jl
mov
xor
xor
arpl
xor
cli
xor
adc
daa
bound
loop
rcrl
mov
imul
std
sarb
icebp
cmp
rcll
sub
xor
and
dec
repz
xchg
aad
mov
lret
scas
outsl
enter
iret
adc
add
scas
xor
xor
push
iret
dec
iret
pop
pop
xor
data16
xchg
out
iret
mov
imull
inc
in
or
aam
into
arpl
fs
mov
int3
sub
fnstenv
iret
divb
sti
rolb
add
shlb
add
shrb
sarb
rcrb
add
roll
add
mov
dec
int3
nop
or
pop
or
int3
clc
or
lret
sti
lret
cmp
imul
inc
lret
jge
cmpsb
lret
movsl
pop
test
int
push
int
pop
add
int3
outsb
add
sub
jmp
jne
cmpsl
or
out
or
push
or
dec
or
and
cwtl
cmp
add
add
add
out
cmp
sbb
cmp
sub
inc
dec
clc
inc
out
add
adc
xor
imull
inc
fisubrl
fwait
xor
sbb
adc
mov
adc
sub
jno
stos
sub
fwait
mov
sub
call
push
sub
xchg
inc
sub
xchg
xor
mov
xor
add
add
sub
dec
xor
pop
ja
xor
push
bound
xor
mov
popa
sbb
mov
jnp
cmp
cmpl
sub
cmp
jl
cmp
js
cmp
js
cmp
jns
ds
outsl
add
or
outsl
clc
dec
arpl
out
sub
add
add
dec
pop
cmp
dec
arpl
xor
xor
xor
pusha
test
ss
jbe
ss
lret
mov
les
stos
sbb
inc
test
or
fs
dec
adc
mov
fwait
out
cli
cmpsb
out
mov
xlat
jp
repnz
and
push
fadd
xchg
add
add
cmp
in
sub
loop
int3
rclb
int3
ficoms
mov
repz
ficoms
std
int
icebp
jno
insl
icebp
ds
idivb
or
aam
ror
or
lret
filds
jno
dec
or
mov
add
adc
dec
pop
sbb
aam
out
dec
inc
jle
loop
rcl
add
aam
add
iret
add
rcrl
add
rcr
add
loopne
xor
inc
std
cwtl
rolb
std
push
iret
push
cld
jmp
mov
lret
sbb
movsb
int3
rorl
or
sahf
pop
ret
leave
or
sbb
enter
and
cmpsl
xor
stos
mov
dec
lcall
jmp
loope
add
add
add
pop
das
xor
or
push
xor
sub
mov
sub
dec
xor
pop
jnp
rclb
xor
shlb
sub
ss
mov
pop
sub
clc
jmp
loope
add
mov
das
inc
mov
sub
popf
jno
fsts
loope
add
jbe
add
add
iret
sbb
aaa
loop
and
inc
jne
aaa
mov
cmp
ja
sbb
cmp
ja
cmp
ja
cmp
jbe
cmp
out
cmp
jg
xchg
jns
cmp
jns
cmp
ja
das
add
cmp
lock
jp
push
aas
lods
out
mov
sti
scas
cli
lcall
add
mov
push
xor
std
push
decb
mov
jge
repz
xor
repz
xor
sbb
shrb
jge
shlb
shlb
xor
mov
xor
mov
xor
mov
xor
movsb
xor
scas
xor
adc
xor
divb
ss
mov
push
jmp
cmp
dec
add
add
loop
mov
or
add
pop
mov
aaa
pop
scas
jecxz
fwait
mov
cmp
fdivrl
movsb
sbb
out
iret
inc
scas
add
xor
ss
std
lods
aaa
xlat
sti
sbb
jle
mov
add
pop
cmp
or
cmp
or
inc
bound
imul
pop
inc
jb
jnp
add
add
jnp
addb
inc
mov
cmp
add
inc
push
cmp
add
inc
sub
sbb
add
inc
add
lret
inc
or
mov
inc
ljmp
in
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
add
add
add
add
sarl
int
fnstcw
mov
and
cmp
mov
mov
cmp
xor
jmp
fidivs
add
icebp
and
leave
icebp
or
rcl
xor
add
sub
in
das
and
fsubrl
add
cld
pop
xor
add
je
add
test
add
add
mov
cmp
xor
pushf
xor
add
xor
add
xor
add
mov
add
xor
add
aaa
dec
cld
push
cmp
sti
xchg
cmp
sti
fstpt
int
adc
cmp
cli
mov
and
pop
cmp
sti
xchg
cmp
inc
cmp
add
add
xchg
loope,pt
jge
push
sbb
cmp
das
cmp
adc
xchg
add
cmp
cld
dec
cmp
cmc
insb
cmp
cmp
and
cmp
mov
add
dec
cmp
test
add
push
sub
mov
xor
mov
sub
mov
xor
adc
xor
adc
adc
cmp
jge
push
repz
xor
add
fidivl
xchg
repz
xor
sarl
xor
shll
cld
xor
add
xor
add
cmp
xchg
xor
add
xor
add
xor
push
xor
add
aaa
xlat
add
aaa
sti
add
aaa
and
divl
push
add
and
sbb
cmp
daa
cmp
push
divb
add
add
add
add
pop
inc
xor
push
push
mov
mov
dec
ss
sar
jmp
cmp
clc
pushl
xchg
aaa
and
pop
aaa
fadd
cs
std
mov
ljmp
test
mov
xor
sbb
lods
xor
sti
xorl
and
jl
xor
repz
add
sub
fcmovnbe
and
ror
sbb
or
adc
adc
xor
jmp
fidivs
add
adc
xor
lfs
dec
adc
xor
push
out
imul
ss
stc
xor
scas
ljmp
ds
popa
ds
sti
imul
jge
jns
test
cmpl
jne
xchg
jge,pt
cltd
ds
mov
pop
test
ds
inc
jge,pt
leave
jne,pt
sarl
jge
fnstcw
gs
loope
pop
jmp
ds
std
stc
ds
add
jge
or
jne
adc
jge
sbb
in
and
sub
push
std
xor
cmp
std
inc
aas
loop
cmp
cmpl
in
cmp
mov
data16
cmp
add
add
dec
pop
std
add
mov
xor
mov
xor
divb
xchg
adc
xor
adc
ja
xchg
xor
adc
test
icebp
mov
sub
xor
iret
in
rcl
cs
iret
cmp
ds
jbe,pn
xchg
sub
subl
xor
sbb
cmp
or
add
add
xor
xor
test
stc
addr16
std
idivb
cmp
mov
divl
mov
cld
xchg
aaa
xor
cmpsl
aaa
sbb
shlb
sti
dec
cmp
cmp
cmp
xor
jae
cmp
add
xor
xor
js
movsl
xor
add
xor
cmp
cmp
add
add
add
add
std
cmpsb
ss
mov
ss
add
das
xchg
xor
repz
inc
lock
addr16
loope
jo
and
xor
fcmove
push
cmp
mov
mov
cmp
cmp
loope
clc
cmp
adc
cs
adc
sub
add
add
pop
sub
repnz
or
shlb
int
xor
test
rcrb
rcrb
xor
mov
xor
mov
xor
mov
jmp
xor
or
xor
mov
jo
scas
dec
ss
aaa
jmp
aaa
dec
cmc
cmpb
cmc
push
cmp
cmc
and
cmp
add
add
add
add
sbb
incl
sub
jb
mov
xor
std
std
xor
std
or
xor
jle
cs
xor
pop
dec
xor
inc
pop
shlb
loop
cs
lods
lds
mov
das
sub
pushf
xor
aam
std
shll
cmc
dec
sbb
sub
add
loop
xor
sbb
shll
cs
mov
dec
sub
in
movsl
add
loop
sub
pop
dec
sub
dec
cmp
or
adc
pop
cmp
sti
sub
cmp
jmp
cmp
jmp
cmp
fldt
inc
fisttpl
cmp
sbb
ret
cmp
cli
ret
stc
ret
stc
sarb
add
ret
stc
bound
pusha
hlt
insl
cmp
cmp
or
loop
loop
int
iret
cmp
cmc
mov
mov
pop
cmp
aaa
cmp
cmc
lods
cmp
cmc
int3
cmp
hlt
fidivs
sbb
xor
sub
dec
ss
mull
insl
mull
xor
loop
out
cmpsb
ss
add
xor
add
add
idiv
stos
iret
jmp
adc
xor
add
mov
xor
xor
or
xor
push
pop
cmp
hlt
out
cmp
aam
add
add
add
mov
sub
adc
or
cmc
xor
add
add
std
aam
dec
cmc
les
cmp
movsl
xor
xchg
xor
test
pop
int
xor
dec
add
add
jnp
sti
out
xor
add
adc
and
pushl
xor
xor
add
incl
xor
lcall
xor
pushl
xor
add
mov
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
loop
sub
jno
sub
jns
xor
jno
cmp
or
inc
mov
xor
sub
sub
sub
sub
sub
sub
sub
add
add
add
not
sub
mov
pushf
out
jmp
sub
icebp
sub
adc
int3
scas
gs
hlt
mov
aaa
adc
and
aaa
push
ss
into
ss
ss
lea
aam
xor
cmp
cli
lret
cli
and
cs
or
push
sti
bound
outsb
cli
dec
cmp
cli
mov
mov
dec
cmp
loop
into
sti
or
push
cld
mov
cmp
sti
bound
outsb
sti
mov
jbe
and
push
sti
or
ss
loop
into
clc
lret
clc
mov
sub
clc
inc
sub
clc
ss
clc
sahf
sub
clc
cmpsb
sub
clc
sahf
sub
stc
sahf
sub
xor
jmp
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
mov
sub
add
lret
sub
add
mov
sub
add
jnp
add
jnp
add
mov
add
jnp
add
jnp
add
dec
sub
add
cmp
add
dec
sub
add
cmp
add
sub
add
sti
sub
add
sub
add
sub
add
sti
sub
add
sub
add
sbb
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
sbb
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
sti
xor
or
add
or
add
sti
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
xor
add
add
cmp
add
cmp
add
dec
xor
dec
xor
add
xor
add
xor
add
xor
add
pop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
sbb
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
dec
add
dec
add
cmp
add
cmp
add
or
add
add
sti
sub
add
or
add
or
add
sti
sub
add
lret
sub
add
mov
sub
add
lret
sub
add
mov
sub
add
jnp
add
jnp
add
mov
add
jnp
add
jnp
add
dec
sub
add
pop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
sbb
loop
add
loop
add
loop
add
loop
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
add
jnp
add
jnp
add
dec
xor
add
add
cmp
add
cmp
add
dec
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
add
loop
add
loop
add
loop
add
add
add
pop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
sbb
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
add
add
xor
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
mov
add
mov
add
mov
add
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
add
dec
add
cmp
add
add
dec
add
dec
add
cmp
add
cmp
add
or
add
or
add
sti
sub
add
or
add
or
add
sti
sub
add
lret
sub
add
mov
sub
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
pop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
jmp
add
xor
add
add
loop
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
aam
imul
add
xchg
adc
push
sub
fdivrp
adc
cmp
mov
rolb
mov
repz
leave
jmp
outsb
loopne
dec
xchg
sub
shrl
out
mov
mov
cwtl
fnstsw
or
fsubs
fisttps
stos
xor
cwtl
out
sbb
xchg
push
int
jp
push
sbb
sbb
pop
or
cltd
push
cmp
add
jl
xlat
outsl
jb
lods
xchg
push
or
test
lods
fldl
inc
sbb
push
int
add
cmp
jle
ret
cmp
mov
sbb
shlb
xor
and
dec
xchg
dec
stos
push
call
loop
stc
mov
fmuls
xchg
stc
out
adc
shrl
test
add
xorb
inc
scas
fidivrl
or
mov
dec
adc
add
fsubs
lea
jle
aas
mov
inc
mov
cltd
scas
cmp
divb
stc
mov
or
fwait
jae
cmpsl
icebp
mov
add
dec
cmovp
mov
pop
xor
mov
call
add
stc
add
add
mov
sbb
ror
push
dec
lods
jnp
sub
sub
in
jmp
addl
xor
popl
addr16
push
xor
adc
loopne
mov
or
lcall
mov
pop
cmc
fildll
stc
xchg
data16
call
cwtl
aad
or
testl
add
add
add
leave
mov
and
mov
lds
lds
mov
xchg
add
ljmp
lds
push
and
cmp
aad
testl
sbb
out
ficoml
jp
or
inc
mov
and
add
add
add
adc
icebp
pop
addl
stc
int3
push
in
int3
push
in
int3
aaa
test
push
imul
lcall
push
ret
pop
test
push
or
xor
inc
test
xor
add
adc
mov
test
and
divb
cmpb
movsl
add
jnp
push
mov
ret
int3
mov
in
inc
push
mov
test
loopne
add
add
test
fmull
ljmp
mov
test
clc
mov
test
clc
mov
cmp
inc
cld
movsl
je
add
xor
jmp
movsl
dec
hlt
popa
out
add
stos
cmpsb
inc
hlt
fldcw
jae
cmpsb
dec
lock
das
add
cmpsl
cmp
lods
add
add
jo
mov
std
push
call
popa
cmc
add
and
inc
cmp
scas
or
cmpsl
inc
in
imul
or
sub
dec
adc
lock
pop
rorb
in
int3
push
in
int3
push
in
int3
aaa
cmpsb
in
cmp
add
pop
or
mov
clc
addl
add
insl
add
sub
call
call
mov
push
xchg
push
gs
sub
mov
icebp
cmp
add
daa
mov
lods
ret
xor
scas
sbb
jae
cmpsb
cmp
mov
jo
push
pop
sub
add
xor
mov
or
add
stc
decl
int3
cmpsb
in
int3
sahf
in
int3
xchg
in
int3
pop
lods
in
bound
inc
add
stos
inc
xor
or
imul
mov
in
int3
xchg
in
int3
pop
lods
in
pop
and
push
dec
dec
call
int3
es
int3
push
in
int3
push
in
int3
xchg
stos
in
inc
sub
mov
jo
incl
add
testl
clc
jp
add
loop
cmp
push
pop
test
fisubrl
adc
jge
push
imul
mov
lods
in
popf
insl
hlt
add
xor
jmp
stos
cmp
mov
adc
inc
adc
cmp
cld
in
add
data16
scas
adc
rep
pop
add
add
or
ljmp
ret
int3
es
int3
push
in
int3
push
in
int3
mov
in
cli
xor
add
mov
inc
loop
ret
int3
es
int3
push
in
int3
push
in
int3
aaa
stos
in
movb
fidivl
jl
loop
add
out
ljmp
stos
cmp
mov
add
daa
and
inc
xchg
add
loop
or
jecxz
inc
cld
pop
jl
cmp
insb
hlt
mov
outsl
sar
mov
add
stos
inc
lock
or
arpl
clc
psrad
mov
stos
cmp
add
test
adc
cmpsl
inc
mov
test
mov
cmpsl
cld
or
add
fisubrl
cld
mov
sub
imul
ret
int3
aaa
stos
in
xchg
fisubl
fmull
mov
dec
call
pop
mov
add
cmpsl
inc
lock
xchg
lock
lods
sti
add
xor
lock
cmpsl
adc
pop
xor
add
arpl
mov
add
out
xor
lret
add
hlt
mov
pushf
sbb
fisubrl
adc
ret
or
push
in
pop
pop
jle
mov
sub
inc
repnz
loopne
das
sub
adc
in
pop
sbb
add
xor
adc
pushf
pop
mov
pushf
inc
lahf
sbb
add
xor
cs
add
test
addl
popf
adc
mov
mov
mov
orb
out
adc
sbbl
mov
pop
adc
add
or
imul
ljmp
insl
aam
das
add
adc
fisubrs
in
mov
add
jle
nop
mov
adc
dec
and
decl
fstpl
in
int3
xchg
cmpsl
in
inc
sub
loope
add
iret
pusha
call
clc
mov
inc
loop
cmp
std
std
adc
pop
adc
jge
push
imul
je
int3
xchg
in
int3
pop
cmpsb
in
or
xor
add
add
lods
call
add
mov
jae
int3
xchg
in
int3
pop
cmpsb
in
xchg
add
imul
ds
imul
imul
sub
hlt
mov
pop
icebp
insb
inc
popa
xchg
clc
add
push
mov
movsl
push
sbb
movsl
cmp
imul
push
lret
adc
sbb
leave
cmp
mov
sbb
cvtps2pi
sarb
mov
lock
pop
out
int3
cmpsb
in
int3
sahf
in
int3
xchg
in
int3
mov
in
inc
cmp
add
mov
add
insl
add
jge
jmp
imul
add
add
movsl
or
mov
adc
inc
insb
call
inc
lret
add
mov
jmp
mov
add
les
push
imul
add
xor
xchg
jge
test
out
add
and
and
mov
je
inc
loop
enter
add
test
inc
loop
or
push
xorl
loop
mov
call
sbbl
mov
loope
or
or
jecxz
pop
outsb
ret
int3
push
std
int3
aaa
mov
cmp
cmp
pop
cmp
add
out
ret
int3
sahf
cld
int3
xchg
cld
int3
aaa
mov
mov
add
add
loop
cmp
mov
jmp
push
cmp
gs
cmpsl
adc
mov
and
push
inc
mov
cmp
aas
loop
add
push
cmp
lcall
jne
push
cwtl
add
loop
push
push
cmovle
pop
jne
mov
popa
mov
pop
mov
arpl
rol
clc
addl
add
xor
add
sbb
mov
add
cmp
andnps
cmp
add
call
je
mov
adc
dec
mov
mov
loopne
mov
test
mov
inc
shl
mov
mov
cmpsl
inc
fisubs
inc
or
or
pop
fs
inc
add
add
pusha
call
sbbl
mov
mov
sub
call
in
sbb
cld
mov
cwtl
sbb
and
mov
push
mov
mov
add
call
or
pusha
call
paddsw
add
adcl
cwtl
add
loop
mov
bound
xor
add
xchg
or
call
push
cwtl
add
loop
mov
bound
std
lock
popa
dec
cmp
mov
xchg
inc
push
pop
jbe
push
cmp
notl
sarb
and
mov
mov
fmuls
mov
loopne
xor
mov
adc
call
xchg
add
add
clc
andl
mov
mov
movsb
loop
add
into
dec
mov
mov
mov
dec
ss
call
xor
test
inc
loop
add
push
imul
push
mov
pop
clc
jmp
add
pop
adc
loope
sub
loop
xor
pop
pop
mov
push
pop
cmp
push
mov
nop
call
jne
or
sbbl
add
jae
decl
mov
xor
jo
mov
pushf
call
push
sub
clc
andl
mov
mov
inc
cli
outsb
add
jne
mov
je
inc
loop
dec
sub
outsb
add
push
hlt
incl
add
aad
mov
inc
loop
shl
xor
lea
or
and
call
push
mov
jecxz
test
mov
mov
ret
cld
int3
xchg
std
int3
mov
in
lahf
cmp
int3
push
std
int3
xchg
mov
push
mov
cmp
pop
sub
call
stos
sbb
add
lods
push
pop
and
int3
xchg
mov
push
mov
loop
fs
mov
clc
jmp
or
ficompl
add
mov
and
push
call
or
int3
aaa
mov
addl
add
loop
cmp
add
xor
pop
or
mov
add
mov
or
add
pop
cmp
mov
or
mov
decl
clc
add
test
fistps
add
loop
or
out
call
add
lods
xor
add
mov
add
xor
add
push
jne
lcall
loop
pusha
call
add
inc
add
call
inc
add
add
mov
xor
daa
sbb
dec
je
push
dec
push
xor
mov
je
filds
aas
loop
pusha
add
xor
add
or
mov
sbb
mov
je
and
push
call
popa
in
cld
mov
add
add
add
add
add
pop
clc
sbbl
add
loop
pop
call
pop
push
jmp
add
pop
add
cld
sbb
jae
mov
inc
fdivl
pop
test
ljmp
adc
mov
je
mov
pusha
mov
loope
hlt
push
or
stc
incl
add
in
mov
or
pop
in
add
in
push
mov
insb
hlt
add
in
inc
mov
xor
call
ret
daa
or
add
xor
or
clc
andl
cmp
jae
mov
add
scas
or
sbb
imul
sarb
jmp
adc
add
add
add
add
pop
clc
xor
iret
pop
call
or
and
mov
inc
leave
mov
jns
inc
loop
leave
mov
fs
idivl
or
clc
mov
arpl
add
loop
mov
pop
rorl
loop
pop
call
out
clc
jmp
cld
mov
add
out
mov
inc
loop
call
test
jnp
xor
sbb
mov
pop
call
add
inc
push
je
iret
cmp
mov
sub
pop
incl
mov
lods
call
xor
mov
int3
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
xor
add
xor
add
nop
xor
cwtl
xor
mov
xor
loopne
add
or
cmp
popf
or
cmp
in
push
sbb
out
push
pop
sub
cmpl
loop
add
mov
add
testb
xor
cmp
or
add
xor
add
xor
add
mov
add
mov
jne
push
icebp
xor
add
xor
loopne
pop
add
clc
add
xor
add
xor
add
lods
xor
add
lret
add
cmc
xor
add
xor
adc
xor
pop
add
xor
out
adc
stc
push
and
add
add
inc
ss
pop
pop
incb
push
std
push
jne
jmp
jle
pushw
xchg
ss
popf
addb
sbb
divb
ds
add
out
ss
mov
xchg
jno
cltd
aaa
inc
add
mov
aaa
add
push
cmp
or
add
xor
add
xor
add
xor
add
xor
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
add
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fildl
fiaddl
fiaddl
fiaddl
fildl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fildl
fiaddl
fiaddl
fiaddl
fildl
fiaddl
fildl
fiaddl
fiaddl
fildl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fildl
fildl
fiaddl
fildl
fildl
fildl
fildl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fildl
fiaddl
fiaddl
fiaddl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
inc
add
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
inc
add
inc
add
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
inc
add
xlat
inc
add
fadds
fadds
fadds
fadds
fadds
fadds
inc
add
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
flds
flds
flds
flds
flds
flds
fadds
fadds
flds
flds
flds
flds
flds
flds
fadds
flds
flds
flds
flds
fadds
flds
flds
flds
fadds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
fadds
flds
flds
flds
flds
fadds
flds
flds
flds
flds
flds
fadds
flds
flds
flds
fadds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
fadds
flds
fadds
flds
fadds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
fadds
fadds
fadds
fadds
flds
flds
fadds
fadds
flds
fadds
fadds
flds
flds
flds
xchg
and
xchg
pushf
adc
pop
push
mov
popa
ss
jge
sub
mov
dec
rcll
jnp
sbb
xchg
aam
jbe
sbb
int
daa
aad
sbb
in
cmp
cmp
icebp
imul
push
fldcw
xchg
sbb
pop
mov
or
or
in
mov
adc
mov
jl
scas
test
popl
fcmovne
mov
pushf
mov
outsb
pusha
shr
xchg
sub
int3
int3
adc
std
or
cli
dec
jle
stos
lods
push
mov
cmp
dec
mov
mov
jne
ficoml
or
cmp
into
jg
lret
loop
insl
aad
int
leave
and
pop
sub
xor
outsb
or
faddl
in
daa
push
mov
xchg
pop
test
test
imul
enter
mov
sub
jnp
mov
adc
xchg
cld
lret
and
mov
fdivrs
sbb
dec
sbb
and
call
popa
or
mov
test
inc
xor
lods
jecxz
mov
add
sbb
inc
fcomps
icebp
mov
cmp
mov
fxch
push
adc
shlb
bound
pushf
test
cmp
jl
mov
adc
mov
xchg
hlt
sbb
in
push
xchg
lret
sti
popa
xlat
sbb
shll
pop
sti
pop
pop
jl
push
out
out
adc
push
lret
shrl
mov
mov
xchg
fs
loopne
mov
or
lcall
out
mov
int3
pop
push
inc
stc
paddusw
dec
jns
popf
hlt
dec
cs
dec
sub
int3
insb
movsb
fs
fcoml
pop
push
cltd
fst
xchg
ds
jo
cmp
js
inc
add
imul
cmp
arpl
insb
add
add
insb
add
add
add
add
inc
add
add
add
push
add
jp
pop
add
pop
add
jae
data16
add
jns
imul
sub
inc
add
add
add
add
mov
aad
add
rolb
add
sub
add
clc
rolb
out
add
xor
add
int3
aam
add
add
add
add
sub
add
inc
fildl
push
fildl
pop
fildl
push
add
jp
add
mov
add
movsb
fildl
mov
fildl
add
neg
add
or
add
and
add
sub
add
cmp
add
push
faddl
pusha
faddl
jp
add
mov
add
sahf
faddl
mov
faddl
out
faddl
cli
faddl
adc
add
fldl
cmp
add
push
fldl
data16
jbe
add
xchg
add
sahf
fldl
mov
fldl
fcmovu
add
call
fldl
push
fiadds
sbb
add
fiadds
fiadds
inc
fiadds
push
fiadds
push
fiadds
mov
add
sahf
fiadds
mov
add
enter
out
add
clc
fiadds
add
add
adc
add
sub
add
cmp
add
dec
filds
pusha
filds
jo
add
jle
add
pushf
filds
cmpsb
filds
mov
filds
out
add
cli
filds
adc
add
and
add
loopne,pn
add
add
add
insb
loopne
add
add
nop
loopne
add
loopne
add
add
fsub
add
in
loopne
add
loopne
add
loope
add
loope
add
add
inc
loope
add
add
add
jl
add
xchg
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
add
pusha
loop
add
add
xchg
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
add
add
test
add
cwtl
jecxz
add
add
shl
add
call
in
add
add
cs
add
add
dec
in
add
add
js
add
nop
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
add
add
mov
add
stos
in
add
add
add
in
add
add
add
in
add
in
add
out
add
add
inc
out
add
add
add
test
add
sahf
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
push
add
and
add
out
add
out
add
out
add
out
add
out
add
call
add
xor
add
dec
call
add
je
add
mov
add
mov
call
add
lock
add
push
jmp
add
inc
jmp
add
jmpw
sub
add
add
mov
jmp
add
add
add
sbb
add
cmp
add
dec
ljmp
jp
add
xchg
ljmp
ljmp
ljmp
and
add
cmp
add
dec
jmp
add
add
add
mov
add
sahf
jmp
add
jmp
add
jmp
add
jmp
add
add
sbb
add
xor
add
inc
in
add
pop
in
add
jbe
add
mov
add
mov
in
add
fsubrp
add
hlt
in
add
push
in
add
and
add
inc
in
add
pop
in
add
sub
add
in
add
mov
add
ret
add
in
add
out
in
add
add
add
sbb
add
cs
add
inc
out
add
push
out
add
jb
add
xchg
add
mov
out
add
int3
out
add
in
add
cld
out
add
or
add
sbb
add
xor
add
inc
out
add
push
out
add
insb
out
add
jle
add
mov
add
lcall
add
out
add
add
add
lock
add
push
lock
sbb
add
ss
dec
lock
pop
lock
add
add
mov
add
sahf
lock
mov
add
or
lock
call
icebp
add
push
icebp
add
ss
add
dec
icebp
add
data16
add
jl
add
xchg
icebp
add
scas
icebp
add
ret
add
icebp
add
in
add
cld
icebp
add
push
repnz
xor
add
inc
repnz
pusha
repnz
js
add
mov
add
mov
repnz
aam
add
out
add
cld
repnz
push
add
sbbb
add
add
cmpb
add
add
add
push
add
andb
add
add
mov
add
adc
add
stos
repz
mov
repz
loop
add
add
add
sldt
adcb
add
sub
add
inc
hlt
add
pop
hlt
add
je
add
mov
add
mov
hlt
add
int3
hlt
add
in
add
clc
hlt
add
push
cmc
add
and
add
cmp
add
dec
cmc
add
pop
add
andb
add
add
add
add
inc
fildl
push
fildl
pop
fildl
push
add
jp
add
mov
add
movsb
fildl
mov
fildl
add
neg
add
or
add
and
add
sub
add
cmp
add
push
faddl
pusha
faddl
jp
add
mov
add
sahf
faddl
mov
faddl
out
faddl
cli
faddl
adc
add
fldl
cmp
add
push
fldl
data16
jbe
add
xchg
add
sahf
fldl
mov
fldl
fcmovu
add
call
fldl
push
fiadds
sbb
add
fiadds
fiadds
inc
fiadds
push
fiadds
push
fiadds
mov
add
sahf
fiadds
mov
add
enter
out
add
clc
fiadds
add
add
adc
add
sub
add
cmp
add
dec
filds
pusha
filds
jo
add
jle
add
pushf
filds
cmpsb
filds
mov
filds
out
add
cli
filds
adc
add
and
add
loopne,pn
add
add
add
insb
loopne
add
add
nop
loopne
add
loopne
add
add
fsub
add
in
loopne
add
loopne
add
loope
add
loope
add
add
inc
loope
add
add
add
jl
add
xchg
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
add
pusha
loop
add
add
xchg
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
add
add
test
add
cwtl
jecxz
add
add
shl
add
call
in
add
add
cs
add
add
dec
in
add
add
js
add
nop
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
add
add
mov
add
stos
in
add
add
add
in
add
add
add
in
add
in
add
out
add
add
inc
out
add
add
add
test
add
sahf
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
push
add
and
add
out
add
out
add
out
add
out
add
out
add
call
add
xor
add
dec
call
add
je
add
mov
add
mov
call
add
lock
add
push
jmp
add
inc
jmp
add
jmpw
sub
add
add
mov
jmp
add
add
add
sbb
add
cmp
add
dec
ljmp
jp
add
xchg
ljmp
ljmp
ljmp
and
add
cmp
add
dec
jmp
add
add
add
mov
add
sahf
jmp
add
jmp
add
jmp
add
jmp
add
add
sbb
add
xor
add
inc
in
add
pop
in
add
jbe
add
mov
add
mov
in
add
fsubrp
add
hlt
in
add
push
in
add
and
add
inc
in
add
pop
in
add
sub
add
in
add
mov
add
ret
add
in
add
out
in
add
add
add
sbb
add
cs
add
inc
out
add
push
out
add
jb
add
xchg
add
mov
out
add
int3
out
add
in
add
cld
out
add
or
add
sbb
add
xor
add
inc
out
add
push
out
add
insb
out
add
jle
add
mov
add
lcall
add
out
add
add
add
lock
add
push
lock
sbb
add
ss
dec
lock
pop
lock
add
add
mov
add
sahf
lock
mov
add
or
lock
call
icebp
add
push
icebp
add
ss
add
dec
icebp
add
data16
add
jl
add
xchg
icebp
add
scas
icebp
add
ret
add
icebp
add
in
add
cld
icebp
add
push
repnz
xor
add
inc
repnz
pusha
repnz
js
add
mov
add
mov
repnz
aam
add
out
add
cld
repnz
push
add
sbbb
add
add
cmpb
add
add
add
push
add
andb
add
add
mov
add
adc
add
stos
repz
mov
repz
loop
add
add
add
sldt
adcb
add
sub
add
inc
hlt
add
pop
hlt
add
je
add
mov
add
mov
hlt
add
int3
hlt
add
in
add
clc
hlt
add
push
cmc
add
and
add
cmp
add
dec
cmc
add
pop
add
andb
add
add
add
push
imul
imul
jns
add
mov
insb
jae
jb
outsb
push
add
mov
insb
jae
jb
jo
push
add
jg
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
add
imul
outsl
jne
arpl
add
add
je
outsl
imul
jbe
push
je
imul
add
gs
push
jae
jb
outsl
jb
dec
je
insl
add
add
je
imul
bound
gs
add
pop
add
je
gs
jo
popa
je
push
add
addb
gs
imul
imul
jns
add
inc
add
outsb
jb
imul
imul
popa
outsb
addr16
imul
jne
push
imul
pop
push
add
inc
jb
popa
je
inc
jbe
outsb
je
add
cmp
dec
jo
outsb
push
popa
imul
insl
gs
add
pop
add
imul
jb
gs
js
inc
add
jne
push
outsl
insb
gs
outsb
jo
je
jne
data16
inc
add
outsl
jae
dec
popa
outsb
fs
add
jb
popa
je
inc
imul
outsb
addr16
add
movsl
add
je
outsl
outsb
jae
insb
gs
arpl
gs
arpl
outsb
inc
jne
data16
add
add
je
jb
arpl
jae
data16
dec
popa
jae
add
inc
add
je
jns
je
insl
inc
imul
jns
add
add
outsb
fs
je
insl
inc
add
inc
outsl
outsb
jae
insb
gs
jne
jae
jb
outsb
outsw
add
cmp
jb
outsb
jae
imul
popa
jb
add
inc
jne
jb
outsb
arpl
outsl
jb
popa
je
add
lods
add
je
jne
jb
outsb
je
push
add
leave
add
je
imul
bound
gs
add
adc
dec
outsl
fs
xor
dec
gs
push
add
add
jo
imul
insb
gs
add
je
jne
jb
outsb
je
imul
jns
add
sbb
push
jb
jbe
je
push
jb
imul
imul
add
je
outsl
outsb
jae
insb
gs
insb
imul
add
popa
fs
imul
jo
outsb
inc
jbe
outsb
je
add
add
dec
outsl
arpl
push
push
add
add
je
je
dec
popa
outsb
fs
add
inc
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
aas
add
outsb
insb
outsl
arpl
imul
gs
imul
je
add
push
imul
cmp
inc
imul
jne
arpl
js
add
push
gs
data16
gs
imul
push
add
repz
je
popa
imul
outsw
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
dec
add
je
jns
je
insl
dec
outsb
outsw
add
inc
jb
popa
je
inc
imul
jns
js
add
test
inc
jb
popa
je
dec
outsl
bound
push
arpl
add
inc
gs
jns
je
insl
push
imul
imul
jns
add
repnz
je
popa
imul
outsw
add
add
outsb
fs
je
insl
push
add
inc
jb
jbe
push
jns
gs
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
call
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
dec
jne
gs
add
xchg
add
jb
je
push
jb
imul
je
outsl
outsb
inc
add
xchg
push
gs
popa
arpl
imul
inc
outsl
jo
inc
imul
add
je
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
imul
pop
insb
insb
jae
imul
add
jne
push
jns
je
insl
inc
outsl
fs
popa
addr16
add
or
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jo
inc
imul
gs
popa
insb
outsb
fs
jb
outsb
outsw
push
add
pop
add
outsb
je
outsb
jne
inc
bound
inc
jbe
outsb
je
add
push
gs
fs
outsl
outsb
jae
insb
gs
outsb
jo
je
add
add
insb
jae
jb
add
popa
je
push
gs
outsl
je
push
push
add
pop
add
je
imul
jo
inc
add
popa
add
popa
fs
outsl
outsb
jae
insb
gs
jne
jo
je
add
add
gs
popa
jo
push
outsl
jae
je
outsl
outsb
add
push
jb
arpl
jae
xor
js
push
add
push
add
fs
xor
inc
imul
incl
dec
outsl
arpl
dec
outsl
arpl
stc
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
je
imul
push
add
lahf
add
popa
jo
jb
popa
je
add
cmp
inc
gs
je
dec
popa
outsb
fs
add
add
inc
fs
je
insl
inc
add
ja
push
gs
gs
jae
dec
jne
gs
add
push
jb
jo
jb
push
popa
jo
add
add
outsb
fs
insb
outsl
jae
inc
push
dec
outsl
je
imul
outsl
outsb
add
push
jne
jae
inc
jbe
outsb
je
add
add
gs
jns
je
insl
push
imul
jae
insl
outsb
je
filds
push
gs
imul
gs
add
jo
outsb
insb
outsl
arpl
add
add
jne
push
gs
jne
arpl
jns
gs
add
xchg
add
outsl
bound
push
outsb
insb
outsl
arpl
add
push
gs
data16
gs
imul
inc
add
add
imul
gs
imul
imul
inc
imul
insb
jne
push
dec
inc
imul
fs
je
insl
push
add
pop
add
je
gs
jo
imul
add
mov
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
rolb
push
gs
jb
outsl
jb
outsl
fs
xchg
add
jb
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
stos
add
gs
je
push
imul
jne
push
imul
push
jo
popa
je
push
gs
jne
arpl
add
add
arpl
outsb
arpl
insl
gs
imul
jne
jo
je
bound
push
je
imul
add
popa
jo
outsl
insl
jo
arpl
add
imul
jae
lsl
fs
xor
dec
gs
add
lods
add
je
jne
jb
outsb
je
push
dec
add
mov
inc
outsl
outsb
jae
insb
gs
imul
mov
jb
je
inc
imul
inc
outsb
jne
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
add
fs
imul
add
daa
add
outsb
fs
imul
jne
gs
add
cmpsb
add
popa
jo
imul
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
mov
insb
jae
jb
jo
outsb
add
sub
inc
imul
je
outsl
insb
jne
gs
add
aaa
add
outsb
arpl
push
imul
jne
push
imul
dec
outsl
jbe
inc
imul
jb
addr16
jae
push
add
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
inc
add
mov
imul
gs
arpl
add
or
gs
push
dec
outsl
arpl
add
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
jb
outsb
inc
add
cmc
add
je
outsl
fs
gs
imul
add
fildl
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
js
add
inc
outsl
outsb
jae
insb
gs
jne
jae
jb
outsb
outsw
add
jnp
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
dec
outsb
addr16
inc
add
loop
inc
outsb
jne
inc
popa
je
inc
outsl
jb
popa
je
inc
js
add
ja
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmpsb
add
jae
jb
popa
je
add
mov
gs
inc
imul
inc
popa
outsb
arpl
inc
gs
arpl
popa
imul
push
gs
gs
add
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
outsl
insl
insl
inc
jb
popa
imul
mov
inc
gs
imul
push
jo
arpl
add
popa
je
dec
jne
gs
add
clc
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
inc
add
je
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
adc
inc
imul
insb
gs
jne
jo
je
je
jb
bound
add
outsb
add
je
outsl
insl
insl
push
imul
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
push
add
gs
gs
jne
outsl
inc
outsl
outsb
jbe
jb
add
add
outsb
imul
insl
outsl
outsb
push
jb
imul
push
je
inc
outsl
outsb
jbe
jb
push
popa
jb
popa
outsb
je
outsl
push
jb
jo
jb
jns
or
inc
outsl
inc
jne
insb
fs
gs
imul
inc
outsl
push
outsb
insl
popa
jb
push
gs
insb
je
add
add
gs
gs
jne
outsl
inc
outsl
outsb
jbe
jb
add
add
inc
gs
popa
insb
insb
inc
outsl
outsb
je
js
add
inc
add
inc
outsl
outsb
jbe
jb
inc
jbe
xor
je
inc
jbe
xor
add
inc
jb
popa
je
inc
popa
je
inc
popa
arpl
add
dec
inc
inc
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
add
push
imul
jae
popa
addr16
imul
dec
dec
inc
push
inc
inc
dec
dec
inc
push
dec
inc
push
pop
push
jae
jb
jb
add
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
add
dec
push
inc
dec
push
dec
inc
push
pop
push
jae
jb
jb
add
add
addr16
jo
outsb
push
jb
jo
je
add
addb
jb
popa
je
dec
insb
gs
fs
jae
dec
outsl
insb
fs
addl
jb
popa
je
push
outsl
imul
outsb
imul
add
inc
push
inc
inc
dec
dec
inc
pop
push
jae
jb
jb
add
pop
add
push
gs
insl
gs
insb
popa
jae
dec
bound
arpl
add
push
jb
je
dec
insb
gs
je
add
add
gs
jb
popa
je
dec
outsb
jne
gs
jb
jo
outsl
jb
xor
push
je
dec
jae
je
jb
addr16
imul
jb
je
inc
insb
popa
jae
push
je
add
add
push
dec
inc
inc
jb
insl
push
je
imul
dec
inc
pop
push
jae
jb
jb
add
and
push
push
inc
dec
inc
inc
dec
push
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
add
addr16
jb
popa
je
push
jb
jo
je
add
xchg
add
je
outsl
outsl
imul
gs
popa
arpl
add
inc
jb
popa
je
push
je
jb
addr16
js
add
dec
fs
outsl
push
jb
jo
je
dec
popa
insl
add
xchg
inc
arpl
inc
push
insb
push
gs
push
gs
insb
je
loope
dec
insb
gs
jb
popa
je
inc
jb
insl
inc
imul
inc
gs
jbe
xor
dec
outsb
outsw
add
inc
outsl
push
jne
jb
push
gs
gs
jae
dec
bound
arpl
xor
push
je
dec
jo
outsb
inc
jae
outsb
arpl
imul
inc
imul
jns
gs
or
inc
outsl
inc
fs
gs
gs
gs
jb
arpl
jae
incl
dec
insb
gs
gs
outsb
jne
inc
outsl
jb
popa
je
je
add
add
dec
inc
pop
push
jae
jb
imul
dec
inc
dec
dec
pop
push
jae
jb
popa
jb
push
add
gs
popa
jbe
push
outsl
push
je
gs
insl
add
push
push
dec
pop
push
jae
jb
imul
insb
gs
jb
popa
je
dec
imul
inc
popa
je
inc
js
bound
inc
outsl
push
gs
jb
js
inc
insb
popa
outsb
imul
roll
push
inc
dec
inc
push
push
inc
pop
push
jae
jb
imul
insb
gs
outsb
imul
add
add
gs
outsl
outsb
jbe
jb
dec
push
je
jb
addr16
outsl
dec
dec
inc
push
push
push
inc
inc
dec
inc
js
xor
gs
bound
arpl
outsb
je
js
add
popf
add
dec
push
dec
inc
push
pop
push
jae
jb
imul
dec
outsl
outsb
imul
popa
je
jbe
push
popa
je
push
outsl
add
je
push
je
push
jb
addr16
jae
dec
outsb
imul
add
add
gs
jb
popa
je
inc
jb
insl
inc
popa
je
add
add
gs
gs
insb
imul
add
add
gs
jne
jb
inc
jb
popa
je
inc
jb
insl
inc
popa
je
add
jmp
dec
insb
gs
gs
jb
jns
outsb
jne
gs
jb
jo
outsl
jb
add
add
addr16
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
add
inc
jb
popa
je
inc
jb
gs
push
gs
popa
jb
push
add
inc
outsl
push
gs
jb
push
outsl
push
gs
data16
push
add
inc
imul
arpl
push
arpl
mov
inc
outsl
inc
jb
addr16
jb
jo
add
gs
jb
jo
popa
jb
popa
outsb
je
jb
popa
jns
add
add
dec
insb
gs
imul
push
arpl
add
push
imul
inc
insb
jae
add
push
inc
inc
dec
dec
inc
pop
push
jae
jb
imul
dec
insb
gs
insb
jne
push
bound
jb
add
add
inc
gs
jo
jb
insl
outsb
je
inc
add
insb
add
push
outsb
insb
outsl
popa
imul
add
push
jne
outsb
imul
arpl
bound
or
dec
insb
gs
outsb
imul
imul
je
imul
inc
push
dec
inc
xor
and
push
push
inc
dec
inc
inc
dec
push
dec
pop
push
jae
jb
imul
inc
outsl
dec
popa
jb
push
gs
insb
je
add
add
outsl
jo
popa
jb
popa
outsb
je
insb
gs
jb
add
add
gs
jb
popa
je
push
je
je
arpl
outsl
insl
inc
popa
je
add
add
inc
pop
push
jae
jb
outsb
insl
popa
jb
push
add
outsl
jo
je
dec
popa
insl
gs
outsl
inc
insl
je
add
mov
push
inc
inc
dec
dec
inc
push
dec
inc
push
pop
push
jae
jb
imul
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
dec
dec
inc
push
inc
inc
dec
dec
inc
pop
push
jae
jb
jb
add
dec
dec
inc
push
inc
inc
dec
dec
inc
pop
push
jae
jb
outsb
insl
popa
jb
push
mov
push
inc
inc
dec
dec
inc
push
dec
inc
push
pop
push
jae
jb
outsb
insl
popa
jb
push
add
inc
dec
push
pop
push
jae
jb
outsb
insl
popa
jb
push
add
gs
je
inc
outsb
gs
arpl
insl
jo
jae
je
add
and
inc
outsl
arpl
outsb
je
imul
dec
insb
gs
outsl
outsb
jbe
jb
dec
dec
inc
push
push
push
inc
inc
dec
push
outsl
dec
push
je
jb
addr16
js
xchg
inc
insb
insb
inc
bound
dec
bound
arpl
inc
dec
outsl
outsl
imul
add
je
dec
outsb
je
jb
popa
arpl
outsl
imul
jae
jb
popa
jb
push
add
gs
jne
insb
fs
gs
imul
je
push
gs
imul
inc
outsl
inc
gs
popa
insb
insb
gs
dec
inc
add
imul
jae
inc
popa
outsb
arpl
add
mov
dec
dec
inc
dec
push
pop
push
jae
jb
popa
jb
push
add
push
jne
jo
outsb
fs
insb
popa
jae
dec
bound
arpl
cwtl
add
inc
inc
inc
dec
pop
push
jae
jb
popa
jb
push
sub
inc
outsl
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
outsl
inc
gs
je
dec
popa
jb
push
add
add
dec
inc
pop
push
jae
jb
popa
jb
push
stos
add
dec
dec
inc
inc
dec
pop
push
jae
jb
jb
add
add
inc
dec
dec
push
inc
dec
push
dec
inc
push
pop
push
jae
jb
outsb
insl
popa
jb
push
in
add
gs
outsl
inc
jne
outsl
inc
outsl
outsb
jbe
jb
add
ret
push
inc
dec
inc
push
push
inc
pop
push
jae
jb
outsb
insl
popa
jb
push
faddl
dec
insb
gs
jb
popa
je
inc
gs
jne
je
popa
outsb
fs
gs
add
dec
insb
gs
gs
outsb
jne
push
gs
jae
or
dec
insb
gs
gs
outsb
jne
gs
jb
jo
outsl
jb
add
inc
outsl
inc
gs
outsb
jae
popa
outsb
arpl
jb
insl
inc
imul
popa
fs
insb
popa
jae
push
je
add
cmp
push
je
imul
dec
dec
inc
add
inc
outsl
push
gs
imul
insb
insb
outsl
arpl
jns
jecxz
dec
insb
gs
jb
popa
je
dec
imul
outsl
inc
gs
arpl
popa
je
dec
bound
arpl
cmp
inc
outsl
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
dec
inc
push
push
push
dec
pop
push
jae
jb
jb
add
inc
outsl
inc
popa
outsb
arpl
inc
popa
insb
insb
add
fildl
dec
insb
gs
jb
popa
je
add
add
inc
gs
jne
jb
outsb
je
outsl
imul
gs
fs
add
dec
push
pop
push
jae
jb
jb
add
jg
inc
jb
popa
je
dec
dec
outsl
arpl
jns
gs
outsb
dec
inc
insb
outsl
bound
add
xor
cs
insb
add
dec
insl
popa
addr16
imul
fs
insl
popa
add
dec
outsb
imul
inc
insb
popa
je
inc
add
or
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
push
dec
insl
popa
addr16
imul
add
pop
add
popa
addr16
imul
ja
js
add
dec
insl
popa
addr16
imul
inc
jb
addr16
insl
popa
add
add
add
addl
jb
jo
jb
jns
push
add
cmp
inc
jb
ja
je
je
jae
gs
add
pop
add
popa
addr16
imul
inc
imul
outsl
jb
add
dec
outsb
imul
addr16
add
add
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
inc
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
jb
jo
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
dec
insl
popa
addr16
imul
inc
jb
addr16
jne
jae
jb
insl
popa
add
push
add
popa
addr16
imul
addr16
outsb
je
jb
arpl
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
jb
dec
insl
popa
addr16
imul
inc
imul
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
arpl
insb
add
popa
addr16
imul
outsl
jbe
add
dec
add
je
push
dec
dec
popa
outsb
addr16
add
addb
jb
jo
jb
jns
push
inc
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
popa
outsb
add
add
gs
je
push
jb
jo
jb
jns
push
popa
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
or
inc
jb
popa
je
push
je
je
jae
imul
cmp
je
inc
pop
inc
outsb
popa
bound
arpl
insb
insb
inc
popa
jb
add
insb
popa
je
inc
pop
push
gs
arpl
insb
insb
push
jb
jo
add
add
ja
je
je
jae
gs
push
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
add
popa
addr16
imul
dec
insl
popa
addr16
outsb
outsw
add
inc
add
popa
je
inc
pop
push
gs
arpl
insb
insb
push
popa
outsb
add
dec
insl
popa
addr16
imul
ja
add
inc
insb
popa
je
inc
pop
push
gs
arpl
insb
insb
push
outsl
jae
pop
add
popa
addr16
imul
addr16
push
insb
outsl
arpl
add
add
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
add
dec
insl
popa
addr16
imul
add
add
add
dec
insl
popa
addr16
imul
inc
jb
add
add
dec
insl
popa
addr16
imul
insb
popa
arpl
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
push
add
popa
addr16
imul
imul
adc
add
add
add
popa
addr16
imul
je
outsl
jns
push
add
popa
addr16
imul
jns
add
dec
insl
popa
addr16
imul
je
add
insl
popa
addr16
imul
insb
imul
add
add
dec
insl
popa
addr16
imul
add
add
add
inc
insb
popa
je
inc
pop
push
gs
arpl
insb
insb
dec
outsb
outsw
add
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
or
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
inc
add
popa
je
inc
pop
push
push
jb
insb
insb
inc
popa
jb
add
dec
insl
popa
addr16
imul
dec
arpl
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
pop
add
popa
addr16
imul
ja
outsb
imul
test
push
jb
jo
jb
jns
push
add
outsb
add
popa
addr16
imul
insb
popa
arpl
arpl
add
popa
arpl
outsl
jne
gs
jbe
outsb
je
add
inc
jb
popa
je
push
je
je
jae
imul
nop
add
imul
imul
push
inc
add
push
add
popa
addr16
imul
popa
je
add
push
add
popa
addr16
imul
addr16
gs
jbe
add
dec
insl
popa
addr16
imul
dec
arpl
add
add
add
insl
popa
addr16
imul
dec
arpl
push
imul
inc
push
dec
xor
cs
insb
add
add
mov
add
add
add
add
add
addb
add
mov
add
add
add
add
add
js
add
mov
or
add
add
cmpb
add
mov
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
enter
adc
add
add
loop
add
add
add
inc
add
jae
arpl
and
imul
add
outsb
add
pop
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
jb
je
pop
add
add
add
add
push
test
add
add
add
add
incl
add
arpl
add
add
add
add
push
pop
add
add
add
add
incl
add
imul
pop
add
add
add
add
and
add
add
add
add
add
test
add
add
add
xor
push
add
add
addb
add
data16
add
push
add
add
add
add
add
push
pop
add
add
incl
add
add
add
add
add
add
push
pop
add
add
push
add
add
test
add
add
add
popf
add
add
add
addb
add
jb
jb
add
je
and
add
jae
arpl
and
je
jns
jo
add
add
xor
add
add
add
adc
push
pop
add
aam
add
incl
add
add
push
pop
add
aam
or
incl
add
add
je
and
data16
insb
add
and
outsb
add
insl
add
cmp
pop
add
add
add
add
rolb
add
add
addl
add
add
add
adc
push
add
add
addb
add
add
add
add
add
push
pop
add
aam
or
fs
addb
add
insl
add
jb
add
jae
and
add
je
popa
add
xor
add
add
add
push
pop
add
add
add
addb
add
insb
add
je
add
add
insl
add
add
and
outsl
add
and
add
jb
outsl
add
pop
add
add
add
add
push
pop
add
add
add
addb
add
add
add
insl
add
add
and
je
outsl
add
add
jae
add
and
imul
add
jae
and
insb
add
jae
je
pop
add
add
add
adc
push
pop
add
add
add
add
incl
add
add
push
pop
add
add
add
incl
add
jae
ja
outsl
add
add
add
outsl
add
add
je
add
add
add
add
add
addr16
addl
add
add
add
add
or
incl
add
data16
jb
insl
add
add
popa
add
jae
ja
outsl
add
add
xor
add
add
add
add
add
add
add
incl
add
add
incl
add
add
add
dec
or
orb
add
add
push
add
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
push
add
push
add
dec
add
inc
add
add
xor
xor
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
dec
add
jae
je
push
add
add
xor
xor
adcb
mov
inc
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
rolb
add
add
add
incl
add
data16
jb
and
jae
je
popa
add
add
cmp
and
pop
add
add
add
add
add
or
inc
add
jae
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
pop
adc
push
pop
add
add
add
add
incl
add
adc
push
pop
add
inc
add
add
add
incl
add
add
push
pop
add
dec
add
addb
add
add
jae
add
add
add
add
add
add
xor
add
add
push
sbb
loop
xor
push
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
nop
add
add
addb
add
je
popa
add
add
push
add
pop
add
add
add
add
push
or
cmpsl
add
add
addb
add
jb
jb
add
je
and
outsl
add
add
popa
add
add
outsb
add
push
add
add
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
jae
add
add
outsb
add
add
imul
jae
push
add
add
xor
add
add
add
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
inc
add
inc
add
pop
add
push
add
pop
add
push
add
add
push
add
push
add
add
xor
xor
xor
add
add
add
add
add
incl
add
dec
add
inc
add
dec
add
dec
add
push
add
add
push
add
push
add
push
add
add
dec
add
dec
add
add
xor
xor
aaa
add
add
push
pop
add
add
add
add
add
incl
add
arpl
imul
add
outsl
add
and
jne
jo
add
je
add
add
outsl
add
je
push
add
xor
add
add
add
add
push
pop
add
add
add
add
add
incl
add
pop
add
dec
add
inc
add
pop
add
dec
add
push
add
inc
add
inc
add
inc
add
dec
add
xor
xor
xor
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
add
add
add
add
add
push
sbb
push
add
add
add
incl
add
add
push
pop
add
xor
or
pop
add
addb
add
add
dec
add
pop
add
inc
add
inc
add
dec
add
push
add
add
inc
add
inc
add
inc
add
xor
xor
xor
xor
add
and
add
addl
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
and
jo
jb
outsl
add
jns
and
jae
add
jbe
add
pop
add
add
add
push
sbb
sbb
add
add
or
add
incl
add
je
cmp
pop
add
add
add
add
push
sbb
sub
and
or
add
incl
add
je
cmp
pop
add
add
addb
push
inc
add
add
or
add
incl
add
add
add
add
add
or
add
incl
add
add
push
sbb
inc
add
or
add
incl
add
bound
insb
add
and
popa
add
je
push
add
add
popa
add
add
add
add
push
daa
add
add
add
or
add
incl
add
jb
and
outsb
add
insl
add
cmp
pop
add
add
add
add
add
dec
add
add
or
add
incl
add
add
push
daa
add
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
xor
add
add
add
add
add
or
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
popa
add
arpl
add
add
insl
add
insb
add
je
imul
pop
add
add
add
add
add
push
pop
add
add
or
add
incl
add
push
add
add
push
pop
add
add
or
add
incl
add
add
add
arpl
add
add
add
add
or
add
incl
add
jne
push
add
dec
add
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
dec
add
arpl
imul
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
add
inc
add
add
add
push
pop
add
fiadds
sub
or
add
incl
add
add
add
add
add
push
pop
add
add
add
add
incl
add
add
clc
add
add
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jae
xorb
xor
xor
xor
xor
xor
sbb
sub
cmp
inc
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
test
xor
adc
sbb
sub
cmp
cmpb
cmp
sahf
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
push
cmp
and
sub
cmp
cmp
inc
cmp
dec
cmp
pop
cmp
cmp
jo
jbe
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
sub
xor
cmp
inc
cmp
dec
cmp
cmp
data16
cmp
jle
test
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
sub
cmp
inc
cmp
push
cmp
cmp
jb
js
jle
test
xchg
cmp
test
scas
cmp
sarb
cmp
in
ljmp
cmp
push
ds
sbb
and
es
xor
cmp
ds
ds
ds
ds
ds
bound
push
jp,pt
cmpb
mov
xchg
ds
ds
movsb
ds
ds
mov
mov
ds
ds
fidivrl
loopne
out
in
ds
ds
ds
or
adc
push
aas
sbb
and
sub
cs
xor
cmp
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
fs
push
jo
jbe
jl
cmpb
aas
mov
xchg
aas
lcall
aas
mov
mov
aas
lret
aas
aas
fdivrl
loop
call
aas
cli
aas
add
add
sbb
add
add
push
xor
adc
sbb
push
xor
sub
xor
add
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
add
add
or
add
and
push
.byte
