ljmp
jbe
lcall
divl
ds
ja
fldenv
mov
icebp
xor
decl
dec
inc
pop
inc
add
lret
jl
ret
ret
push
xchg
cld
lahf
mov
shlb
pop
jne
mov
loope
add
cmpsl
arpl
and
mov
cmc
and
jmp
dec
popa
xor
cmp
imul
xor
mov
fisubs
sbb
out
mov
std
fwait
jo
add
cmpsb
mov
xor
int
push
pusha
inc
pop
stos
pop
out
or
pop
add
call
dec
inc
mov
aas
shlb
es
pusha
fdivrp
and
sahf
repnz
in
mov
push
pushl
pop
lcall
test
aaa
xchg
insb
mov
pop
sub
ja
xlat
mov
dec
imul
mov
and
cwtl
fnstenv
fucom
cld
and
popl
faddl
cld
ljmp
jb
mov
fsubl
pop
jb
int
inc
xchg
xchg
pop
into
pop
jae
or
call
loope
jae,pt
in
insb
mov
sbb
fstps
lcall
or
mov
pushl
sbb
sub
push
adc
loopne
cs
lods
sahf
mov
je
loop
pop
addr16
sbb
jmp
mov
mov
pop
sbb
inc
cmpsb
popf
shlb
sbb
call
stos
dec
int
dec
pop
sbb
imul
xor
cmp
pop
cmpsb
int3
mov
insl
sbb
pushl
imul
ja
and
or
cmc
ss
daa
rclb
xor
jecxz
ljmp
jbe
and
xor
sub
xor
ljmp
lcall
std
cmp
cmp
inc
shr
scas
push
sbb
stos
sbb
and
jbe
push
dec
out
mov
divl
fisttpll
test
and
into
ret
popf
testb
lret
jmp
lcall
pop
pop
in
hlt
xchg
jge
adc
inc
xor
loopne
repz
jnp
mov
inc
lcall
pop
sti
push
and
icebp
push
negb
call
das
ds
sub
dec
in
or
in
adcb
into
mov
hlt
lret
pusha
push
mov
xchg
ss
jle
pop
das
add
sti
ds
hlt
test
out
nop
sbb
push
lret
loope
ljmp
popl
out
push
fildll
push
xchg
inc
add
lock
inc
sahf
nop
fdivrp
decl
out
jge
stos
stos
pushf
mov
add
xchg
sub
dec
pop
addr16
fcoms
xchg
jmp
jmp
in
push
stos
mov
and
dec
sbb
pop
or
insb
mov
fstl
loope
inc
aad
push
push
out
jmp
pushaw
xchg
inc
test
xchg
out
xor
inc
fs
and
lret
inc
mov
das
dec
std
repnz
fiaddl
dec
loope
into
cmp
pushl
jae
testb
jne
popf
dec
idivb
sub
cmp
jns
fcomip
decl
out
sub
fisubl
inc
fimuls
cmp
incl
imul
mov
jae
add
daa
aaa
jp
xchg
dec
and
and
pushl
je
push
scas
fmuls
sbbl
add
sub
mov
push
xchg
fldt
jmp
pop
jmp
and
popf
push
add
xchg
jecxz
xor
and
das
popf
cmpsb
sbb
jp
jno
mov
decl
push
push
insb
pop
iret
cmpsb
inc
mov
imul
push
pop
cmp
cmp
bswap
out
insl
or
push
test
mov
repnz
xchg
cmp
mov
push
fstpl
or
mov
and
lea
mov
or
es
and
inc
imul
insl
push
adc
mov
mov
lds
testb
in
add
mov
stos
aas
std
cwtl
lret
daa
scas
push
xor
add
pop
mov
pusha
shll
jg
decl
and
out
and
fs
mov
push
adc
lcall
mov
adc
mov
sbb
inc
sub
aad
mov
xor
inc
push
jg
cmpsb
ljmp
sbb
jle
xchg
lahf
xchg
xor
test
fcomip
adc
into
cmc
mov
mov
movsl
leavew
int3
aas
inc
and
ljmp
addr16
pop
js
xchg
cmpsb
xor
xchg
imul
jmp
fldt
add
cmpsl
mov
fldcw
sahf
adc
inc
inc
incl
dec
jle
push
cmc
cli
pushf
push
mov
xchg
push
xchg
out
shl
sbb
cld
shlb
pusha
imul
pop
std
sbb
sbb
jbe
mov
hlt
ret
nop
popf
push
inc
xchg
test
cmp
daa
pushl
push
stc
xor
pop
movsl
ror
push
pushf
out
jle
xchg
mov
outsb
repz
incl
pop
or
cmp
mov
and
lods
xor
outsb
sbb
push
xchg
mov
or
insl
jns
sbb
push
fcmovnb
sbb
jne
scas
dec
mov
dec
cwtl
imul
inc
sub
mov
in
out
scas
nop
jmp
clc
mov
mov
cs
int3
test
out
scas
dec
into
adc
dec
xchg
mov
lcall
ret
test
pop
xor
jl,pn
ret
lret
jne
pop
call
xor
in
cmp
jle
mov
repz
out
xchg
insb
cld
inc
pop
jo
out
or
ffree
sub
pushl
test
mov
cmp
mov
call
int3
push
lds
into
xor
inc
xchg
xchg
cmpsb
add
aam
inc
xor
add
jg
xor
or
adc
jmp
adc
xlat
call
push
in
clc
call
push
int3
and
repz
lret
sahf
and
out
out
sbb
xorb
pusha
pushf
repnz
ljmp
xchg
jo
cmp
js
mov
pop
popf
vprotb
in
test
mov
jl
ljmp
mov
lret
jmp
data16
subl
push
fidivrl
repz
jbe
cli
dec
int
dec
mov
popa
cmp
out
js
jg
repnz
fildll
pop
jne
shrl
arpl
jg
dec
pop
jp
mull
xor
mov
xchg
jno
mov
outsl
pushaw
aas
lret
gs
inc
das
dec
jg
jns
mov
or
xor
dec
mov
cmp
arpl
jmp
mov
imul
jb
or
fisubs
jp
mov
test
mov
decl
inc
xor
sbb
sbb
sub
jge
add
repnz
inc
negb
ret
out
cmc
inc
lods
fwait
pop
jge
stos
inc
inc
mov
scas
fistl
sahf
fisubrs
popf
pop
outsb
in
stos
push
pushl
jno
sub
shrb
adc
ret
es
imul
xor
cmc
stos
mov
stos
push
jmp
mov
lret
lea
xchg
stos
mov
loopne
xchg
adc
fstpt
nop
cmp
cmp
pusha
add
and
sub
inc
push
lods
mov
pop
mov
idiv
in
cmp
pop
and
loope
pop
mov
lds
xor
cli
push
pop
imul
pushl
mov
or
mov
lret
fsubs
jle
mov
xor
decl
iret
push
repz
inc
andb
in
sbb
std
addr16
mov
mov
lahf
out
mov
sbb
jnp
rcl
movsb
add
gs
arpl
shlb
ret
imul
fwait
ja
hlt
cwtl
or
stos
xor
cmc
into
fcomip
pop
push
ljmp
mov
sahf
xchg
bnd
incl
or
int3
pop
mov
push
mov
cli
xchg
daa
jne
jnp
out
iret
in
mov
test
mov
inc
lods
adc
icebp
pop
fs
lds
loope
inc
jmp
loopne
call
or
mov
sub
cwtl
push
push
and
in
jp
or
call
dec
xorb
lea
sbb
imul
dec
sub
scas
sbb
sar
fidivl
add
into
test
mov
add
mov
outsl
inc
gs
addr16
jb
pop
mov
lret
pop
dec
ljmp
loope
mov
lods
aas
dec
fdivs
ljmp
ljmp
cs
jmp
mov
jp
inc
int
lcall
in
cmp
cmpsb
les
mov
idiv
frstor
fucomp
sbb
xor
sub
mov
mov
repnz
mov
mov
mov
clc
sub
mov
stos
mov
adc
jb
add
mov
mov
call
mov
dec
js
mov
cmp
mov
pop
jmp
gs
mov
add
test
imul
insb
addr16
imul
mov
sub
jge
sti
cmp
mov
and
add
push
and
incl
mov
push
mov
push
inc
add
iret
cmc
arpl
dec
jmp
dec
fbstp
das
mov
mov
adc
sub
add
inc
mov
arpl
jne
clc
not
shll
mov
xor
push
push
dec
sbb
sub
mov
add
frstor
clc
ret
mov
andb
jmp
cmpsb
xchg
or
loop
cmp
adc
mov
sbb
pop
mov
xchg
lock
sbb
add
jbe
fstp
ret
fs
inc
addr16
popa
ja
cmp
shrb
sub
loop
jmp
add
ret
sarb
adc
leave
sub
enter
mov
insl
sub
fdivrp
loopne
mov
xor
adc
and
xor
or
adc
dec
mov
std
mov
sub
lahf
nop
push
decl
jae
mov
jns
movsb
jmp
mov
jl
ret
sub
xlat
lea
lds
decl
cmpsl
sub
lret
test
inc
iret
cmp
mov
lock
es
dec
outsb
clc
mov
lcall
les
mov
into
aam
xchg
aas
movsl
jbe
insl
aaa
sub
inc
dec
inc
repnz
inc
loop
xor
dec
xchg
fdivrl
lds
inc
movsl
jnp
xchg
imul
pop
out
cmp
std
adc
stc
jo
cmp
hlt
cli
inc
jle
push
in
imul
fwait
inc
in
test
lcall
fs
push
cmp
into
repnz
inc
enter
cmp
hlt
dec
cltd
jmp
nop
nop
or
inc
xor
cmp
mov
xor
xor
frstor
jbe
imul
cmpsb
jmp
and
cs
jl
add
or
cwtl
fdivl
mov
repz
sub
inc
and
fs
in
inc
and
lock
leave
jbe
or
and
in
mov
push
sub
fisubrl
and
inc
cmp
mov
mov
adc
or
sub
in
pusha
jnp
loope
push
xor
fisubl
inc
or
xchg
cmp
pop
dec
jge
ficoml
sbb
dec
cmp
cmp
cwtl
adcb
fwait
ss
pusha
inc
jg
jg
scas
inc
pusha
cwtl
in
mov
andl
bound
sbb
faddl
jmp
in
xor
daa
inc
pop
aas
pop
jo
dec
sbb
adc
add
push
ret
cmp
out
add
cli
sbb
xlat
xchg
ds
vmovaps
shll
or
bound
mov
popa
adc
xor
orb
inc
add
nop
push
add
sub
inc
adc
or
and
or
add
cmp
sbb
loopne
loope
and
add
loop
sub
mov
incl
add
repnz
inc
mov
sub
subb
adc
and
add
sub
adc
stos
fs
adc
xchg
and
add
xchg
adc
add
nop
adc
push
and
add
subl
mov
mov
cmp
add
and
cmp
mov
out
sahf
out
xor
jo
sahf
out
sahf
nop
sahf
lods
mov
loopne
out
pop
scas
push
mov
out
sahf
testl
jo
sahf
out
sahf
nop
cmpsb
mov
fsubrp
cmp
repz
adc
and
dec
repz
repz
mov
iret
into
out
push
mov
sahf
es
pop
je
jns
out
pushf
mov
loopne
repz
repz
sbb
dec
pop
iret
repz
outsb
jle
sahf
scas
mov
out
or
and
out
xor
jb
out
sahf
out
scas
out
repz
testb
push
sub
push
cmp
repz
test
iret
repz
cli
or
and
jns
out
dec
data16
sahf
out
sahf
xchg
cmpsb
mov
in
out
fidivrs
les
xor
sahf
out
sahf
jo
xchg
cmpsb
mov
jns
testb
push
xor
cmp
repz
pop
jb
sahf
iret
repz
scas
fsubr
cld
adc
out
lcall
jns
out
mov
xor
out
clc
or
sbb
iret
repz
cmp
jo
cwtl
cmp
repz
mov
iret
repz
cmp
cmp
repz
mov
iret
repz
decb
leave
and
jns
out
inc
pop
insb
test
movsb
mov
aam
cmp
repz
adc
and
dec
repz
repz
outsb
jle
sahf
out
cmp
mov
fsubr
add
sahf
out
sahf
sbb
dec
pop
jb
jns
out
cwtl
test
shl
jns
out
addb
xor
jns
out
pusha
jbe
sahf
int
jns
scas
fdiv
or
and
repz
inc
push
push
repz
test
enter
cmp
cmp
int
push
xor
repz
repz
sahf
scas
out
cmp
aam
cld
adc
sahf
out
sahf
sub
pusha
jbe
jns
out
movsb
mov
cmp
repz
and
dec
pop
iret
repz
jo
mov
out
cmp
clc
or
sbb
jns
out
ds
data16
out
sahf
out
mov
repz
push
rcrb
cs
push
fs
repz
test
repz
cli
adc
and
jns
out
dec
pop
outsb
test
stos
mov
iret
sarl
es
pop
repz
repz
pushf
lods
mov
int3
loop
or
sbb
dec
pop
push
out
cmpsb
mov
fdiv
repz
repz
sbb
dec
pop
iret
repz
je
lcall
mov
xlat
push
sub
repz
inc
push
push
xchg
test
iret
repz
into
fdivp
add
jns
out
adc
cmp
fs
sahf
out
mov
sahf
shr
add
adc
xor
repz
pusha
jo
xchg
repz
repz
mov
out
jns
iret
testb
push
cs
out
sahf
dec
fs
movsb
mov
shr
clc
or
pushw
sahf
out
sahf
cs
pop
outsb
jle
sahf
out
xchg
movsb
mov
loop
cmp
out
add
sbb
inc
iret
repz
push
insb
sbbb
cmp
loopne
adc
es
out
ss
pop
je
out
sahf
out
mov
loop
iret
repz
adc
sub
insb
jl
iret
repz
movsb
mov
in
sahf
out
hlt
or
sbb
dec
out
sahf
out
jo
xchg
lods
int
jns
mov
loopne
cmp
repz
push
bound
repz
repz
test
shr
out
lcall
dec
sahf
out
sahf
pop
je
xchg
movsb
mov
shl
repnz
adc
cmp
repz
dec
pop
jb
repz
adcb
cmpsl
stc
cmp
add
sbb
dec
jns
out
bound
mov
out
fsubp
pop
jecxz
push
xor
sahf
out
dec
bound
cwtl
out
sahf
out
mov
repz
adc
and
dec
fs
iret
repz
xchg
stos
mov
repz
adc
and
out
sahf
out
pop
jo
nop
sahf
out
sahf
mov
cmp
sarl
es
pop
repz
rep
jl
pushf
mov
stc
cmp
int3
in
adc
sub
pop
push
sahf
out
mov
jmp
into
push
es
data16
sahf
out
xchg
movsb
mov
int
repnz
adc
xor
repz
inc
pop
push
iret
repz
lret
or
jns
out
sbb
inc
pop
insb
out
sahf
out
xchg
lods
fmul
repz
in
add
adc
cmp
cmp
repz
jl
mov
repz
in
or
and
jns
out
dec
pop
outsb
xchg
mov
in
or
cmp
repz
sub
push
push
cmp
repz
mov
cmp
shl
lock
sbb
ds
fs
jns
out
lcall
fcompp
jo
push
xor
sahf
out
sahf
data16
pushf
mov
cmp
out
fsubr
add
adc
repz
repz
insb
test
repz
pushf
mov
fdiv
add
cmp
mov
inc
push
insb
iret
repz
adcb
cmpsl
stc
cmp
push
repz
cs
out
push
data16
movsb
repz
out
aam
hlt
or
iret
repz
and
push
bound
cmp
repz
mov
fsubrp
jns
cmpsl
stc
add
adc
inc
push
out
sahf
out
jp
mov
sahf
shl
clc
or
push
ss
repz
pop
je
movsb
stc
cmp
repz
fsubr
add
out
sahf
cmpsl
adc
cmp
sahf
out
sahf
jbe
pushf
lods
fdivrl
repz
add
sbb
inc
repz
repz
push
cwtl
test
repz
mov
or
sbb
inc
push
push
sahf
out
jp
test
enter
out
call
cmp
repz
inc
pop
jb
repz
repz
out
lcall
dec
sahf
out
sahf
pop
insb
jl
pushf
lods
jl
out
aam
cli
adc
repz
shll
ds
insb
test
repz
lcall
out
lcall
jns
out
je
mov
sahf
out
call
iret
repz
cs
push
data16
ds
repz
mov
iret
repz
es
pop
cmp
repz
mov
iret
repz
out
adc
out
sahf
cmpsl
mov
cmp
js
out
sahf
mov
cmp
repz
or
sbb
dec
repz
repz
je
pushf
mov
repz
ret
cli
adc
sahf
out
sahf
sub
push
pusha
jo
jns
out
xchg
cmpsb
mov
dec
repz
adc
cmp
repz
pusha
js
cmpsb
mov
lcall
push
add
jns
out
es
bound
jns
out
xchg
test
into
jns
jns
fiadds
add
push
es
sahf
out
fs
mov
mov
push
sahf
out
sahf
adc
cmp
pop
jb
sahf
out
sbbb
lahf
out
cli
adc
and
iret
repz
push
data16
sahf
scas
ds
repz
out
push
or
out
sbb
inc
pop
push
jns
out
nop
mov
jge
shl
lock
push
sub
jns
out
push
fs
sahf
out
sahf
xchg
movsb
mov
jns
push
gs
or
sbb
cmp
jns
out
bound
sahf
int
jns
mov
fsubr
add
adc
iret
repz
cmp
jo
cmp
xrelease
jns
iret
in
add
and
sahf
out
sahf
inc
push
push
nop
mov
mov
fdivp
push
or
push
cs
insb
iret
repz
jl
movsb
mov
stc
cmp
add
sbb
inc
jns
out
push
pusha
js
cmpsb
repz
out
into
out
or
iret
repz
and
dec
pop
outsb
jle
iret
repz
cmpsb
mov
fidivrs
movups
sub
jns
out
bound
mov
mov
fsubrp
decb
adc
repz
xor
push
fs
repz
lcall
fsubr
adc
adc
ss
repz
pop
outsb
test
mov
fsubr
adc
out
lcall
jns
out
mov
int
repnz
xor
repz
pop
jo
nop
cmpsb
mov
int3
fdiv
adc
adc
push
sub
push
push
out
mov
dec
push
popf
call
inc
repz
repz
je
xchg
movsb
cmpsl
stc
cmp
mov
adc
ds
pop
outsb
test
out
xchg
movsb
mov
int
ljmp
repz
dec
pop
push
mov
mov
sbb
out
push
es
pop
idivl
out
mov
jns
ja
sbb
push
sub
push
out
sahf
out
jp
test
jns
jns
out
push
sbb
push
es
sahf
out
dec
fs
sahf
out
sahf
pushf
lods
mov
iret
sarl
and
dec
pop
repz
repz
lcall
shl
testb
xor
push
fs
jns
out
mov
repz
out
or
push
ss
iret
repz
push
data16
cmpsb
mov
iret
repz
fdivp
or
and
sahf
out
xor
pop
jb
out
sahf
out
mov
loopne
iret
repz
or
sbb
dec
pop
push
jle
sahf
scas
mov
out
and
and
jns
out
cmp
pop
je
sahf
out
sahf
pushf
lods
aam
cli
cmp
sarl
sub
push
jb
xchg
mov
iret
shl
testb
and
cmp
repz
pusha
outsb
repz
repz
cwtl
cmpsb
mov
lock
ret
in
dec
iret
repz
push
es
cmp
repz
data16
xchg
repz
repz
mov
out
adc
iret
testb
add
and
enter
push
and
mov
mov
decl
add
ds
jae
daa
jge
orl
ret
add
lret
call
lock
rcll
sahf
push
add
test
mov
jno
mov
fsts
push
imulb
cmp
out
pushf
mov
push
push
cmp
mov
sub
rep
cmp
push
cmc
lret
sbb
lret
push
add
pop
inc
js
mov
jnp
dec
cmp
jmp
pop
push
jecxz
xchg
sbb
inc
adc
xor
or
shlb
icebp
call
add
adc
cmp
dec
and
dec
pop
adc
clc
cmc
js
xlat
call
les
mov
mov
push
and
xor
jbe
add
push
popa
push
rclb
dec
inc
mov
xor
jne
mov
stos
or
jb
push
xchg
in
mov
mov
es
scas
mov
mov
xlat
jnp
jbe
push
mov
imul
call
test
sbb
stos
jbe
pop
psubusb
push
mov
dec
fs
int
mov
lcall
inc
push
dec
inc
in
mov
sarl
testl
mov
test
jae,pt
idiv
push
and
dec
pop
test
and
ja
in
je
cmp
mov
inc
add
jg
ffreep
sbb
aaa
mov
insl
out
inc
pop
jle
xor
in
jne
lcall
jmp
mov
ret
cmpsl
ss
mov
fidivs
mov
lcall
cmc
lods
ds
imul
fistps
pop
imul
gs
stc
sarl
incl
jecxz
vpmacsdqh
repz
push
lea
mov
mov
repz
cmp
push
xchg
lods
movsb
xor
xchg
sbb
cld
insl
push
inc
dec
mov
xchg
push
mov
shr
lahf
mov
sub
dec
jmp
cmp
and
pushf
jl
mov
insb
scas
jnp
aaa
aam
test
add
ja
mov
jb
scas
sti
xchg
add
cmovne
push
mov
mov
jno
pop
push
lea
fsubs
jge
inc
imul
mov
sbbl
adc
inc
in
repnz
mov
jg
leave
xor
jmp
mov
movsb
aas
lret
aas
and
enter
pushl
aaa
lods
out
sbb
stos
test
inc
sub
lret
pop
gs
mov
stos
lcall
adc
jmp
or
pop
inc
push
add
mov
pop
add
fidivrs
movsl
mov
xor
iret
add
fucomp
cmp
cmp
out
inc
lds
ljmp
ljmp
sbb
add
dec
xchg
into
pop
scas
fldl
pop
push
pushl
push
adc
fldcw
fucomp
push
les
stos
cmp
jge
push
fcomp
dec
cmpsl
jb
xchg
mov
fimull
mov
bound
mov
xchg
orb
outsl
push
mov
test
and
mov
ds
les
sbbb
mov
mov
enter
or
cltd
cmp
pushl
mov
sahf
imul
and
mov
lods
mov
pop
cmpsl
mov
push
test
lods
scas
sahf
gs
push
scas
cmp
or
stos
mov
shrb
rolb
test
test
dec
dec
test
cmpb
sarl
sub
scas
test
sbb
ljmp
adcb
mov
xchg
mov
xchg
aaa
cld
outsl
fmul
adc
adcl
sbb
sahf
negl
mov
inc
mov
lahf
mov
pop
orb
xchg
xchg
inc
jo
jg
les
test
mov
hlt
xchg
int
int
lea
jg
lods
mov
inc
mov
xorb
mov
mov
sahf
insl
orb
inc
pop
sub
inc
in
std
ret
mov
xchg
jg
xchg
outsb
mov
mov
stos
mov
lcall
sahf
mov
mov
incl
jbe
icebp
add
xchg
fcomi
mov
call
test
and
test
clc
decl
stos
mov
xchg
lods
mov
add
aaa
mov
lahf
nop
mov
test
adc
adc
mov
je
fcomip
xorb
sub
mov
mov
incl
inc
movsl
adc
inc
push
jmp
stc
out
iret
stos
mov
mov
adc
inc
inc
mov
ljmp
mov
fucomip
nop
stos
cmpsl
xchg
mov
dec
pop
lcall
mov
xchg
mov
inc
cmp
sub
pusha
sarl
adc
out
daa
ljmp
xor
les
dec
cmp
dec
push
mov
adc
lcall
in
stos
stos
mov
mov
cmp
arpl
out
and
pop
ljmp
xorb
cmp
mov
adc
pop
test
fistpll
push
out
sahf
ret
popf
xchg
xor
arpl
sub
cmp
xchg
lcall
mov
pop
mov
add
ljmp
ljmp
cmp
inc
aaa
out
adc
fsub
inc
jmp
pmaddwd
xor
std
outsl
pop
int3
pop
xor
outsb
add
shl
jle
adc
cmp
xor
dec
jns
stos
out
std
test
and
push
or
ljmp
fwait
jbe
andl
jl
ds
push
push
sahf
pop
popa
ja
shrb
pop
sub
repz
arpl
ljmp
sti
add
arpl
mov
pushf
push
inc
sbb
insl
ret
xchg
sub
decl
inc
stos
push
int3
imul
test
andb
pop
cmp
xlat
mov
dec
fdivrl
mov
popa
xor
push
xchg
xchg
ret
lds
mov
je
and
aam
lock
incl
fidivs
pop
mov
mov
jmp
dec
sahf
ljmp
ljmp
cmpsb
loop
je
mov
pop
mov
xor
aas
adc
pop
shr
xchg
sub
mov
in
add
mov
fdivr
push
test
es
cwtl
flds
decl
push
int
insl
jmp
ja
popa
inc
repz
mov
incl
push
inc
mov
arpl
lret
push
stos
dec
dec
popf
out
add
mov
in
and
dec
fcompl
push
dec
mov
leave
aaa
cld
or
push
insl
cmp
add
cli
in
sahf
ss
jmp
or
clc
dec
inc
into
jle
mov
popa
pop
aaa
fcompl
cmpsb
adc
in
mov
mov
sbb
inc
adc
sub
cli
xor
ret
scas
xchg
adc
sahf
jbe
decb
popa
insb
add
movsl
adc
shr
es
inc
test
jecxz
ss
sbb
lahf
test
pushl
push
pop
push
jmp
xchg
out
xchg
xchg
sub
sub
in
ljmp
jbe
dec
test
cltd
sahf
dec
popa
pop
mov
insl
sbb
mov
inc
xchg
push
bound
push
arpl
shlb
push
ret
pop
adc
xor
lcall
pushl
ficomps
mov
xchg
clc
inc
sbb
pop
sbb
divb
mov
mov
push
xchg
push
addr16
or
lods
adc
mov
or
push
outsl
xor
jo
xor
ficomps
jle
cli
imul
adc
stos
cmp
pop
cmpsb
push
aas
std
jg
cmp
jnp
std
stc
cmpb
mov
rorl
loope
sub
sbb
jmp
xorl
add
push
sbb
ljmp
fadd
sbb
fadds
add
or
push
jp
pushl
shrb
cmpsl
inc
lods
fisubs
xor
popf
lods
clc
mov
mov
je
fyl2xp1
ret
idiv
mov
push
ja
arpl
imul
gs
imul
jns
outsb
jae
inc
insl
inc
push
jno
dec
dec
dec
dec
dec
jae
dec
dec
outsl
outsl
xor
dec
inc
push
fs
decl
dec
dec
popa
fs
imul
pop
outsb
dec
ja
jns
ss
inc
inc
dec
insl
bound
push
inc
inc
push
dec
insb
ss
dec
pop
dec
mov
xor
xor
pushl
gs
inc
popa
push
pop
push
gs
xor
insb
push
addr16
pop
dec
push
xor
popa
sti
decl
lock
or
push
dec
insb
pop
pop
xor
cmp
jg
ja
dec
push
push
push
push
jb
je
push
jne
fs
cmp
outsb
inc
inc
arpl
insl
xor
mov
dec
push
addr16
data16
jne
dec
push
push
ja
inc
push
dec
arpl
fs
jbe
push
add
inc
addr16
jne
push
inc
jne
push
cmp
popa
dec
lods
outsl
jg
imulb
dec
inc
pusha
data16
xor
jb
insl
jo
push
inc
inc
dec
fs
pop
jo
insl
lock
cld
add
insl
dec
jne
loopne
cmp
ss
inc
clc
mov
dec
imul
ja
sub
push
inc
imul
imul
es
decb
push
outsl
dec
jno
inc
dec
dec
popa
push
jae
push
insl
push
xor
xor
push
cld
lcall
push
insl
xor
popa
jb
popa
push
jno
outsl
bound
cwtl
cmp
insl
ljmp
clc
inc
dec
push
je
pop
pop
aaa
jb
inc
xor
lahf
mov
addl
sbbb
mov
adc
or
pushf
add
sbb
sahf
out
xor
aaa
invd
in
test
lcall
shll
roll
daa
lock
int3
iret
test
xlat
loopne
lock
in
and
and
test
dec
and
adc
shrl
push
pop
dec
repz
or
test
test
repnz
mov
push
int3
pop
cmc
inc
mov
jo
mov
mov
mov
sub
outsb
sbb
jbe
push
or
push
mov
fwait
int
jnp
push
and
adc
adc
sahf
xor
sbb
in
frndint
sbb
sbb
jbe
dec
lahf
xor
in
jnp
adc
push
lods
aad
rorb
mov
cwtl
xor
loop
loopne
inc
sbbb
std
jbe
xchg
dec
dec
mov
push
mov
jge
imul
xchg
push
xchg
adc
les
or
push
std
adc
jp
daa
out
ja
dec
fdivl
dec
push
popf
inc
faddl
ds
ja
js
rolb
fadd
shl
sti
jbe
adc
sbb
adc
pop
sub
in
cld
aas
lds
inc
das
fsub
push
inc
push
sbb
adc
add
dec
js
aaa
xor
xchg
xor
cs
ret
aam
xchg
jbe
pop
push
cmp
pusha
xchg
loop
xlat
inc
aas
inc
add
jnp
xbegin
jbe
pop
addr16
lock
outsl
outsb
push
cmp
es
and
inc
adc
es
jb
fnstenv
adc
xor
cmp
aas
add
data16
pop
pop
scas
leave
les
push
push
push
mov
jge
pop
push
jo
out
icebp
sarl
add
mov
insb
ss
nop
mov
sar
data16
jmp
lds
jns
test
psubq
pop
sti
fidivl
data16
das
jge
insb
les
out
or
iret
lock
out
dec
or
into
loope
ja
push
jae
lods
fdivrs
out
pop
inc
icebp
dec
push
scas
ds
out
dec
aad
mov
lds
in
mov
rolb
mov
mov
gs
gs
xor
cs
insb
pop
inc
sbb
gs
jb
mov
imul
arpl
outsl
outsb
cs
gs
jbe
mov
mov
add
pop
jb
dec
outsb
and
imul
push
imul
gs
fldt
dec
or
pop
xor
in
lods
loopne
xor
inc
outsl
jne
pop
push
jne
jnp
mov
jns
push
outsw
jb
popa
outsb
arpl
sbb
push
mov
fildll
jae
sbb
jb
cmp
push
fs
fs
push
mov
mov
call
das
adc
fcmovnu
pop
mov
jmp
loop
popa
into
push
cld
jb
outsl
dec
jne
mov
jns
sub
mov
das
int3
sub
sub
movsb
mov
pop
testb
sti
arpl
sbb
jb
push
and
lock
js
push
dec
cmc
gs
and
and
popa
divb
rolb
cmp
fs
jae
imul
hlt
gs
mov
imul
inc
imul
mov
arpl
mov
and
push
andl
outsl
insl
add
outsb
imul
outsb
sbb
fs
jb
scas
cmp
and
jae
mov
sub
push
idiv
push
push
out
in
shrl
fs
cmp
xor
jle
addr16
ss
push
outsl
xchg
and
pop
dec
data16
push
je
xorb
in
mov
cmp
popa
imul
xor
adc
pop
inc
in
mov
jns
inc
shrb
and
jne
rcl
adc
push
gs
pop
jb
outsb
sbbl
outsb
addr16
mov
popa
addr16
outsl
mov
dec
gs
pusha
jnp
je
inc
jbe
jo
jae
mov
push
add
es
mov
outsb
mov
add
icebp
mov
adc
je
push
jns
sbb
insb
mulb
pop
aas
and
push
lret
sub
lret
push
leave
in
loopne
or
or
inc
pusha
jno
cmpsb
out
mov
stos
cmpsl
pop
inc
sub
push
push
lcall
ss
push
dec
bound
repz
push
jo
cmpsb
sub
jbe
cwtl
pop
sbb
scas
mov
jbe
xlat
jbe
fldl2e
mov
fnstenv
jne
roll
adc
fstps
lret
and
and
rolb
arpl
xchg
add
mov
add
mov
insb
cwtl
loopne
lods
popl
insb
push
mov
jne
sbb
adc
roll
imul
ja
daa
inc
rclb
sub
insl
mov
imull
daa
push
push
xorb
notl
inc
sbb
ret
adc
cmpsl
ljmp
in
inc
xor
inc
mov
xchg
das
les
inc
jo
mov
pop
xor
adc
sbb
dec
nop
mov
add
sti
push
jecxz
sbb
mov
pusha
push
hlt
es
out
imul
inc
xor
addr16
push
sub
data16
fistl
in
jmp
dec
push
xor
inc
imul
sbb
insb
js
stos
rcrb
inc
xchg
movsl
jecxz
int3
icebp
pusha
jno
idivl
ret
or
imul
xorl
aaa
fdivrs
ss
ret
gs
js
jo
jmp
lock
pushf
movsl
movsl
shl
outsl
pop
inc
inc
imul
cmpsl
push
xchg
adc
mov
add
pushf
mov
xchg
jb
jae
ja
cld
roll
push
in
loopne
dec
addr16
push
in
mov
pop
sbb
in
shll
inc
add
jge
xor
pop
inc
lret
inc
push
movsl
lret
xlat
outsb
decl
or
scas
gs
andl
stos
adc
add
add
and
xchg
adc
adc
sub
test
pop
add
xorl
and
adc
add
add
test
decl
push
and
add
subl
inc
add
fs
add
nop
add
adc
add
adc
enter
nop
inc
add
add
push
add
add
or
incl
sub
sub
test
pop
add
xorl
push
addl
adcb
adc
or
adc
mov
sub
add
add
add
adc
enter
mov
or
adc
add
and
and
adc
subl
inc
add
pusha
call
adc
add
inc
add
fs
add
nop
push
add
mov
inc
adc
enter
nop
inc
add
inc
push
add
add
leave
ret
mov
push
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
push
out
incl
cmpb
incl
xor
pop
pop
xor
xor
inc
aaa
pushl
cmp
mov
test
add
add
add
add
add
add
mov
mov
addb
addl
div
mov
addl
or
sbbl
sub
sbb
sti
fistl
orl
addl
jnp
lcall
cwtl
mov
scas
push
xchg
sbb
je
gs
sbbb
imul
cmp
std
push
sub
pusha
rcll
rorb
and
ds
add
roll
sub
sub
ds
gs
rclb
ljmp
shrb
and
loop
or
push
incl
jg
pop
les
call
add
insl
jnp
aaa
stc
and
pusha
add
outsl
push
push
pop
lcall
daa
or
pusha
ds
imul
mov
dec
sbb
fildl
push
add
push
aad
ret
jge
imul
push
xchg
xor
cmpsb
jge
push
sbb
fld
or
imul
loopne
stos
xor
dec
add
ja
int
fimull
push
mov
mul
jecxz
pop
push
fucomip
push
addr16
xchg
mov
add
jnp
add
sar
idivb
loopne
aaa
addl
or
into
add
push
cmp
mov
jno
ds
push
sub
mov
sbb
cmp
iret
add
js
mov
dec
test
stos
pop
push
fcmove
cmpsb
sub
cmp
mov
shlb
dec
shll
xchg
insl
pop
mov
sar
pusha
or
int3
mov
and
add
stc
shrl
jle
sbb
or
jg
ret
mul
arpl
or
dec
shll
scas
popf
pop
addr16
in
pusha
add
jns
loope
dec
xadd
imul
and
pop
insl
shll
mov
in
shrl
cmp
dec
jnp
sarl
sbb
sub
pop
pop
addr16
aad
loope
lret
cld
aaa
insl
mov
push
pop
xchg
mov
mov
fadds
lret
push
jnp
dec
rorl
mov
or
loope
or
out
sub
pop
push
cmp
cmp
clc
and
stc
add
sbbb
testb
andb
pop
pop
mov
sbb
loopne
mov
jnp
sbb
out
sbb
cmc
or
pop
sbb
cmp
push
jne
fidivrs
popa
or
add
mov
jge
clc
xor
aam
pop
push
lgs
push
stos
cmpsb
xchg
or
sarb
and
pop
xor
test
xor
mov
mov
std
xlat
jmp
lret
push
mov
lcall
addr16
mov
or
cmpsb
imul
add
add
pop
cmp
iret
lahf
dec
dec
mov
xchg
mov
sbb
movsl
sbb
mov
jns
jo
inc
xor
out
shl
mov
je
stos
sbb
imul
andl
rcrl
jmp
stos
pop
lcall
outsb
data16
cmpsl
imul
push
cmp
jo
test
ja
movsl
std
jg
iret
pop
fsubl
and
push
mov
pop
xor
sar
out
push
jae
imul
out
pop
lock
sbb
xor
shl
xchg
in
mov
nop
mov
sub
call
repnz
ljmp
repnz
fsts
sti
and
mov
xor
jo
jmp
or
sbb
jge
mov
cld
push
in
sar
out
fcmovnu
out
aaa
xor
in
fwait
jo
jmp
xor
call
jno,pt
test
or
pop
push
div
loopne
sbb
outsl
sub
xchg
lahf
jo
xor
imul
jge
jp
dec
decl
mov
jle
xor
leave
jnp
add
dec
push
add
mov
ds
push
add
loopne
cmc
scas
push
rcll
jbe
jb
xchg
sbb
addr16
fimuls
jno
cld
or
xorb
inc
add
call
mov
add
push
enter
cli
mov
adc
sub
pop
and
pop
add
dec
mov
pushf
dec
pop
ja
das
adc
mov
jg
testl
add
xor
in
fiaddl
sbb
sbb
cmp
or
in
lcall
insb
dec
inc
xchg
lahf
jbe
add
jle
mov
add
inc
imul
adc
das
cli
mov
pushf
aam
outsb
jbe
xchg
jo
and
in
je
lea
mov
push
gs
mov
xchg
je
insl
lcall
arpl
nop
or
or
or
lock
insl
cmp
addb
mov
add
xchg
push
incl
inc
test
test
add
push
or
sub
add
scas
push
aaa
ljmp
adc
fisubs
xor
push
push
mov
and
adc
std
fwait
dec
push
push
push
clc
js
cld
xor
dec
or
sbb
and
add
add
dec
pop
pop
inc
add
add
sti
icebp
pusha
pop
out
test
cmpsl
repnz
add
adc
add
gs
add
in
outsl
push
pusha
add
xchg
add
jbe
insb
pop
push
fadds
push
loop
movsb
dec
add
das
adc
add
aaa
lock
shlb
fstp
cmpsb
add
or
add
inc
inc
jp
lcall
inc
jo
xor
xor
das
je
cs
adc
add
and
add
adc
inc
inc
shll
sub
daa
idivl
push
es
loopne
add
call
jl
mov
pop
bound
aas
xor
lods
pop
dec
or
xchg
or
add
pop
adc
movsb
add
xor
ljmp
icebp
mov
mov
incb
fistpl
test
cmp
std
add
jno
int
mov
add
add
les
xor
sti
add
xor
xor
add
inc
add
cld
add
xor
fidivs
add
incb
cli
push
add
xlat
lock
std
inc
cld
fistl
xor
and
and
sub
sub
mov
lret
xor
cmp
mov
loop
addr16
imul
mov
outsl
jno
jae
jne
jbe
xchg
mov
pop
pop
lahf
incl
testb
inc
mov
jge
incl
cld
pop
aas
mov
aas
add
cmp
in
negb
aas
sbb
xor
add
add
xor
rorb
or
push
jge
insl
sti
add
add
or
bound
ja
mov
rorb
ds
lock
sub
jbe
sub
mov
clc
es
negb
xchg
mov
xor
mov
push
loopne
sub
clc
in
jbe
mov
and
adc
mov
and
sbb
xor
scas
repnz
jnp
inc
in
and
rcrb
lock
das
dec
jp
stos
cmp
lret
xchg
stos
gs
imul
pop
pop
orb
fldenv
mov
cld
decl
add
mov
push
int
pop
inc
mov
nop
pop
sbb
dec
push
std
fwait
mov
sbb
lods
mov
in
scas
mov
or
out
sbb
mov
adc
repz
out
lret
add
lret
or
std
imulb
cli
push
cmpsb
into
add
adc
pop
jl
mov
fld
pop
jecxz
lock
sub
pop
nop
mov
rolb
mov
mov
pop
lret
jno
cltd
sti
repz
test
mov
inc
pop
int
mov
mov
incl
sbb
int
lds
mov
pop
xchg
xor
es
mov
neg
fcomip
ja
out
mov
mov
out
std
sub
inc
shlb
std
or
or
arpl
decb
mov
sbb
sub
mov
aas
aam
movsb
cltd
cmp
loopne
mov
jg
adc
jg
ficompl
addb
pop
jae
or
adc
fcmovnu
decb
imul
or
add
inc
sub
pop
imul
stos
push
push
or
and
adc
stc
testb
add
shr
mov
or
or
add
mov
sti
cs
cmp
adc
pop
shrl
add
repz
outsb
add
mov
add
push
inc
scas
push
push
add
cmp
mov
sub
test
dec
aaa
push
popa
outsl
adc
adc
inc
or
add
dec
lret
pop
inc
push
cmp
imul
je
imul
cmp
add
sbb
fdivrl
rorb
daa
push
add
dec
rclb
sub
mov
test
rorb
xor
pusha
negl
inc
push
or
pop
and
faddl
rorb
or
jo
and
pushf
imul
sbb
add
mov
insb
jmp
lock
mov
add
inc
rorl
dec
shlb
push
mov
fadds
adc
inc
sbb
mov
add
fistpl
sbb
outsl
cmp
in
jg
cwtl
pop
mov
dec
cmpsb
fnsave
mov
lahf
pop
je
add
pop
xchg
cltd
sbb
inc
sbb
sarb
fst
jo
add
sets
pop
adc
adc
or
pop
aaa
add
outsl
fisubrs
fcmovnb
inc
dec
lea
pushf
lods
loopne
cmp
lahf
add
movl
in
adc
push
loopne
das
sbb
es
call
push
in
loopne
and
push
or
sahf
lock
adc
mov
add
jne
shrb
loopne
dec
mov
fistpl
pop
out
cmp
or
add
ret
idivb
jo
sub
ss
pop
jbe
loopne
lods
iret
add
mov
jns
mov
mov
dec
add
lods
shlb
sub
stos
push
xor
and
rorl
mov
in
add
loopne
out
nop
sbb
repz
push
and
in
xor
imul
mov
jg
pusha
test
loopne
and
div
adc
jo
loopne
lcall
add
imul
loopne
repz
xchg
test
cmp
cmp
loopne
outsb
popa
xor
lcall
or
inc
and
push
or
fcom
push
pop
ret
adc
shll
mov
adc
shl
rorl
inc
lcall
loopne
or
jp
mov
dec
stos
mov
gs
cmp
fldt
mov
push
push
ljmp
fmull
aas
outsl
int3
xlat
loopne
stos
pop
loopne
xor
or
sbb
lods
add
loopne
fidivl
push
stos
mov
es
xor
loopne
stos
lret
pop
pushf
xor
xlat
dec
adc
cmp
push
lcall
loopne
stos
repz
push
in
mov
dec
or
add
pop
mov
push
ret
inc
sbb
push
push
shll
addr16
jg
jg
loop
adc
push
or
xlat
pop
shrl
sbb
mov
sbb
popl
cmp
lds
sbb
xlat
out
push
and
add
ficompl
jmp
jo
push
ss
xchg
push
or
mov
pop
dec
push
aam
xor
jge
sbb
pop
fdivrp
xor
sbb
adc
or
cmp
rcrb
and
inc
sbb
and
insl
mov
sub
into
lret
ret
push
cld
xor
shrb
sti
dec
lods
loope
fsub
pop
fmuls
ficompl
sahf
adc
jb
mov
int
or
xchg
add
add
sbb
std
loope
dec
out
loopne
or
adc
lds
loope
fidivrs
sahf
cmp
mov
and
or
mov
ret
add
jo
lret
jo
lods
push
roll
xor
fisttpl
sub
and
add
pop
push
sub
inc
pop
push
fwait
jno
and
ds
scas
cmpsb
pop
jle
jo
jb
ja
push
push
lock
sub
or
shlb
sbb
mov
mov
outsb
jo
rcrl
adc
out
mov
lock
inc
mov
fistps
sub
jo
inc
sbb
lock
push
fidivrs
insb
mov
cltd
mov
cwtl
lock
insb
jno
sbb
loope
stc
shrl
dec
jo
stos
add
daa
jecxz
shl
inc
loopne
pop
dec
std
inc
inc
shlb
push
movsb
add
rclb
inc
imul
lock
jo
mov
jns
jbe
lahf
mov
lcall
adc
cmovae
adc
adc
sete
ljmp
xor
dec
push
adc
add
push
adc
adc
stos
jecxz
lock
xor
sar
add
or
inc
add
jbe
cltd
orb
push
dec
cmpsb
shl
sbb
rcr
jns
outsl
push
pop
sbbl
mov
cld
mov
add
sbb
lock
mov
imul
cmpsb
test
jl
outsl
cmp
pop
mov
das
or
jno
test
scas
clc
into
or
xchg
add
xor
cmc
cwtl
adc
cmpsl
push
in
shlb
repz
std
adc
mov
jno
adc
loope
mov
mov
add
or
outsl
les
inc
and
fists
add
add
mov
clc
add
cmp
jbe
pop
push
and
add
pop
add
add
add
jge
stc
fwait
mov
add
add
fildl
dec
inc
add
add
repz
pop
add
movl
inc
add
inc
add
jp
add
push
scas
frstor
add
push
jl
add
push
add
add
add
adc
add
roll
fs
xor
add
adc
push
add
add
ss
add
jg
imulb
push
daa
add
add
and
pushf
and
bound
nop
mov
or
add
add
sbb
pop
add
add
cs
add
nop
add
cmp
add
movb
add
nop
or
adc
mov
mov
add
loopne
add
add
mov
push
imul
pusha
mov
add
add
add
dec
add
xor
xorb
add
js
xor
add
fwait
mov
or
add
add
adc
and
mov
clc
subl
sbb
or
add
mov
pand
pop
add
enter
add
add
jo
roll
add
pushl
add
dec
add
push
sub
cmp
inc
int
add
adc
push
fiadds
addr16
insb
mov
adc
dec
push
add
xor
add
fildll
add
add
add
sub
ret
insl
ror
ss
add
and
push
mov
mov
add
adc
adc
add
nop
add
or
movl
add
imul
add
add
pop
add
pop
add
xor
xor
outsl
out
adc
sti
xor
repnz
add
xor
mov
out
out
add
push
add
xor
jecxz
add
xor
out
testb
cld
adc
mov
out
fistps
xor
test
dec
add
xor
stos
dec
add
xor
scas
outsl
out
inc
add
xor
mov
add
xor
mov
add
xor
outsl
out
add
inc
add
xor
add
ds
xor
popa
cmp
xor
add
inc
lret
add
adc
add
xor
outsl
out
add
ss
xor
shlb
xor
xor
xor
add
xor
xor
add
cs
xor
out
sub
loop
sub
sub
xor
add
shrb
add
fwait
mov
add
es
xor
in
xor
add
sbb
repz
add
and
add
fwait
mov
inc
add
and
cmp
and
cmp
mov
cmp
push
aaa
add
push
xor
fwait
sub
sub
add
xor
push
das
add
xor
sub
xor
sub
xor
add
sub
mov
es
cmp
add
inc
sbb
add
inc
sbb
inc
sbb
inc
pop
add
dec
push
push
add
push
adc
dec
adc
dec
fwait
mov
mov
lret
syscall
orb
mov
pushl
push
push
pop
push
push
add
and
push
fistl
push
push
adc
into
pop
push
push
adc
fistpl
push
pop
adc
push
push
push
pop
adc
lods
mov
sbb
outsb
xchg
adc
add
pop
adc
cmp
in
mov
adc
add
add
lods
shlb
incb
and
adc
aad
loopne
or
or
inc
push
or
push
or
inc
add
or
mov
mov
inc
xor
aas
push
jo
cmp
cmp
and
inc
adc
js
cmp
adc
cmp
popa
sub
enter
push
xor
in
adc
xor
rcll
xchg
push
xor
frstor
adc
adc
ja
in
push
xchg
sub
inc
adc
mov
mov
pop
sub
adc
ss
dec
adc
mov
and
dec
adc
adc
inc
and
dec
adc
ds
popa
mov
js
sbb
adc
adc
sbb
sbb
or
lcall
notb
adc
or
loopne
adc
adc
mov
adc
adc
minps
push
loopne
or
ss
push
mov
or
lods
mov
pop
add
push
sub
add
xchg
adc
xor
push
adc
repz
xor
pop
pop
xchg
pop
pop
mov
add
add
mov
pop
stos
add
mov
mov
pop
std
aaa
jg
add
test
adc
dec
pop
lods
add
aas
dec
pop
scas
cmc
mov
nop
pop
lret
pop
nop
add
int3
add
int
out
fisubl
pop
lret
addb
add
add
pop
xchg
add
pop
pusha
pop
xchg
cmp
xchg
add
pop
xchg
add
pop
xchg
insb
fbstp
pop
cwtl
rolb
add
pop
fwait
add
pop
add
cli
lcall
xor
sahf
add
pop
lahf
lret
sub
add
pop
mov
rolb
movsb
xor
movsl
jg
push
xchg
pop
cmpsb
rolb
cmpsl
add
pop
test
es
test
add
lcall
pop
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
add
pop
pusha
pop
mov
adc
pop
mov
jg
mov
add
pop
mov
add
pop
rolb
pop
roll
pop
ret
add
ret
loope
decl
pop
les
or
lds
or
movb
pop
movl
pop
leave
add
mov
jmp
pop
or
pop
or
and
and
pop
or
and
push
or
jmp
push
or
and
popf
and
sahf
and
mov
and
lods
and
fs
jmp
inc
or
inc
or
inc
or
and
or
or
and
shlb
aaa
decl
cmp
or
xor
aam
xor
shlb
xor
popa
and
or
and
or
decl
sub
and
sub
and
daa
and
or
and
mulb
or
xchg
add
jbe
nop
and
and
push
and
or
pop
or
and
decl
xchg
and
sbb
or
sbb
or
and
sbb
push
or
and
or
hlt
mov
adc
or
adc
mov
and
mov
and
or
mov
and
xor
decb
mov
pop
or
pop
or
and
add
pop
fisubl
pop
mov
add
pop
or
pop
push
and
or
push
push
std
decl
adc
push
or
and
and
or
and
and
mov
push
and
or
dec
or
dec
or
dec
or
dec
or
dec
or
inc
mov
inc
or
mov
inc
or
and
mov
sub
cmp
pop
and
or
or
outsl
add
or
ss
xor
shll
or
jmp
das
or
and
or
and
or
and
or
and
or
pop
cld
es
daa
and
lods
and
and
mov
and
iret
sbb
scas
and
pop
or
or
or
and
insl
insb
es
and
or
and
adc
add
adc
arpl
adc
adc
gs
push
and
or
or
pop
daa
in
outsl
es
mov
or
inc
sbb
inc
cld
or
es
imulb
or
and
or
and
mov
pop
mov
test
jle
push
or
or
aas
or
and
mov
nop
and
or
clc
incl
and
or
and
or
sub
or
ret
lds
or
rolb
pop
mov
mov
clc
pop
and
or
add
sbb
decl
add
sbb
add
pop
or
add
adc
decl
add
adc
add
loopne
push
or
add
or
sbb
add
or
add
fucomip
cli
out
pop
or
push
jmp
pop
or
add
pop
or
pop
pop
or
pop
out
push
pop
outsl
fdiv
fwait
jo
push
or
push
push
sub
push
or
fisttpl
push
mov
push
push
add
push
or
adc
dec
or
adc
decl
dec
or
adc
dec
or
push
push
dec
or
sbb
inc
or
sbb
decl
inc
or
sbb
inc
or
push
push
inc
or
and
ds
and
mov
or
cmp
es
cmp
sbb
or
sub
xor
or
sub
xor
cs
pushl
or
xor
cs
xor
sub
xor
sub
xor
push
cld
mov
aaa
push
daa
or
push
lock
and
call
aas
push
pop
or
inc
push
sbb
or
inc
push
sbb
decl
inc
push
pop
or
dec
push
adc
or
dec
push
adc
xchg
or
add
push
mov
push
push
or
jbe
or
push
or
push
push
or
pop
push
pop
cmp
pop
dec
xor
pop
insl
fisttpl
push
push
pop
jp
sub
xor
aaa
xor
mov
push
xor
xor
xor
jo
stos
xor
xor
xor
add
xor
inc
xor
inc
xor
inc
xor
inc
mov
roll
dec
xor
xor
push
sub
pop
dec
xor
xor
xor
addb
xor
lods
mov
dec
xor
xor
push
ret
xchg
add
adc
and
popa
pop
xor
pop
xor
xor
xor
sbb
bound
pop
pusha
push
xchg
xor
xor
fdivs
shlb
loop
adc
test
lods
add
and
lds
push
scas
adc
adc
push
lods
pop
jb
adc
adc
mov
mov
shlb
mov
mov
add
mov
xor
push
in
fdivs
rclb
rcll
ret
or
jbe
insl
xor
mov
jg
rolb
push
xchg
inc
mov
sub
mov
and
adc
lock
inc
stc
adc
cs
adc
adc
inc
adc
inc
adc
pop
and
mov
fwait
int
and
and
fldcw
and
stos
and
push
add
add
out
pop
add
hlt
repz
out
sahf
repnz
in
in
cmp
repz
roll
scas
fldt
fisubrl
repz
stos
xlat
stos
fisubrs
cmp
fcompl
sahf
idivl
rcrl
xchg
sbb
iret
repz
rclb
sahf
ja
jbe
repnz
push
sahf
out
fisubrs
mov
mov
out
push
imul
out
fsubs
out
js
arpl
gs
fisubs
dec
sahf
frstor
push
shlb
cmp
repz
xchg
push
xchg
push
repz
repz
push
xchg
push
xchg
out
jns
iret
push
nop
add
dec
push
sahf
cmp
repz
popf
dec
pushf
dec
repz
repz
dec
lcall
dec
cwtl
inc
xchg
inc
xchg
daa
daa
pop
cmp
out
inc
aas
ds
out
daa
cmp
cmp
out
mov
mov
xchg
jns
out
xchg
test
sahf
out
sahf
test
jns
out
xorl
jns
out
jle
jge
sahf
out
sahf
jl
jnp
jp
jns
out
jns
js
pop
out
sahf
out
pop
sbb
sbb
repz
pop
add
pop
adc
idivl
adc
mov
call
pop
pop
idivl
mul
pop
jae
push
inc
mov
ds
cmp
insl
jle
jmp
mov
frstor
andnps
sbb
xor
movsb
add
push
lahf
pop
jle
fs
incl
in
cmp
xlat
push
and
outsb
jp
pop
add
or
std
call
popf
in
inc
stos
je
fldl
adc
scas
aaa
imul
mov
cmp
inc
jl
popf
bound
cmpsl
ficoms
push
xchg
mov
ret
and
sub
mov
cli
fidivrl
adc
cmp
and
and
sub
orb
mov
decl
aas
popw
sbb
mov
test
or
mov
push
out
jns
sub
lcall
cmpsb
add
leave
sub
push
dec
add
add
outsl
mov
stc
mov
ljmp
sahf
sbb
subb
mov
pop
adc
pop
fcomip
ljmp
data16
outsb
dec
xorb
outsb
lret
xchg
ss
and
xchg
mov
in
dec
test
xor
lret
xchg
xchg
dec
mov
cmp
push
mov
inc
xor
add
and
fidivl
and
in
jbe
imulb
call
xor
es
test
lret
sahf
aas
sti
rorl
adc
mov
push
gs
incl
push
xchg
movsl
jg
xor
mov
sub
mov
jl
sbb
mov
insb
ret
xor
mov
imul
xor
lods
push
push
push
fdivrp
mov
ret
imul
pop
fistpll
lds
xor
xor
ljmp
lret
xor
xor
xor
xor
xor
xor
imull
scas
dec
sarb
or
outsl
and
lcall
sqrtps
pop
or
int3
xor
xor
xor
xor
xor
xor
xor
xor
jne
rolb
in
pop
insb
jno
fs
div
ret
outsl
out
pop
jb
movsl
inc
mov
mov
pop
xor
lods
xor
cmp
jo
ljmp
mov
ds
fldt
dec
pop
pop
adc
jp
lret
ss
mov
ss
ss
ss
inc
rcrb
jl
in
sahf
xor
imul
vmovaps
shl
call
jmp
xor
xor
ja
mov
xor
ljmp
arpl
out
adc
cmp
fidivrl
push
cmp
cmp
cmp
cmp
call
rorl
mov
shrb
test
inc
cltd
lret
jo
dec
cmp
aas
aas
add
call
aas
lcall
aas
in
mov
pusha
mov
and
cmp
or
jg
divb
repz
xor
xor
xor
pop
xor
mov
cwtd
clc
jae
xor
xchg
xlat
xor
mov
dec
scas
inc
scas
pushl
and
decl
or
xor
xchg
inc
push
sub
cmpsl
decl
sub
or
dec
ret
loop
add
ss
pop
shll
ss
jg
mov
mov
mov
mov
inc
adc
ret
fbstp
nop
aaa
push
aaa
mov
inc
aaa
shlb
cmp
outsb
cmp
xorb
push
insb
push
sbb
clc
filds
adc
sbb
cmp
cmp
cmp
inc
cmp
xor
mov
stos
lds
ret
and
icebp
cli
add
add
lcall
sti
push
cmp
cmp
cmp
fidivrl
inc
push
cmp
jge
cs
loop
inc
jb
mov
cltd
add
pusha
or
loope
test
jb
call
ds
ds
or
sub
lret
push
mov
add
js
out
nop
data16
call
xor
xor
xor
xor
xor
xor
xlat
aas
inc
cmp
push
sub
cmpsb
outsb
ja
or
into
push
jge
add
cmp
enter
jg
add
icebp
cmp
cmp
cmp
mov
es
mov
std
pushw
decl
bound
cmp
cmp
cmp
cmp
jmp
adc
xchg
push
lahf
les
pop
fs
fldcw
sahf
out
pop
adc
fdivrs
sub
aas
add
sahf
add
xorl
or
sub
sbb
shll
sbb
bound
and
pop
je
lahf
xor
test
jge
xor
xor
scas
or
push
mov
and
sub
push
emms
or
out
adc
adc
adc
sbb
jecxz
push
pop
cmp
cmp
lock
sub
ss
cmp
cmp
cmp
inc
fsubs
in
cmp
and
aaa
pop
mov
aas
jnp
fbld
addl
mov
mov
imul
fwait
jmp
sahf
lahf
pop
mov
cmpsb
cmpsl
push
test
scas
scas
dec
mov
mov
mov
mov
mov
incl
mov
ret
cmp
mov
leave
lret
int
iret
das
rcl
shrl
aad
xlat
daa
jmp
fstp
fistps
loope
jecxz
in
out
jmp
out
out
psllw
repz
div
pop
stc
cli
sti
addb
add
mov
and
add
add
add
incl
inc
inc
inc
add
dec
dec
dec
add
push
push
push
add
ret
lock
adc
adc
ret
pop
add
add
add
xor
xor
xor
and
and
ret
daa
add
add
add
xor
pop
and
inc
loop
aad
std
lcall
add
add
daa
add
sbb
fisubrs
pop
mov
sbb
orb
pop
incl
test
fistl
addb
lea
sbbl
pusha
add
mov
push
rclb
rorl
addb
in
in
fistpl
sbb
ret
add
or
in
adc
adc
jg
jnp
aaa
adc
pop
bswap
sbb
daa
rcr
sbb
dec
out
add
dec
rolb
lcall
popa
add
imul
fwait
insb
insb
pop
dec
cld
outsl
sub
gs
je
lcall
ljmp
xchg
gs
add
or
mov
inc
lcall
rclb
inc
add
fildll
add
xlat
inc
xchg
cld
mov
cmpsl
rolb
rclb
outsb
push
fcomip
inc
pushf
je
mov
push
push
shlb
cs
xor
aaa
lock
push
roll
incl
loop
inc
push
dec
jae
jb
lret
add
add
or
xchg
rorb
or
or
or
rolb
fisubl
inc
lds
lock
sbb
sahf
inc
loop
insl
ret
das
clc
or
cltd
rorb
fiaddl
jo
push
ficompl
mov
or
jnp
mov
add
or
add
xchg
sbb
pop
lret
inc
inc
xor
sub
sub
jg
add
popa
add
pusha
add
jle
test
inc
xchg
sub
dec
xchg
push
loop
into
arpl
pop
push
outsl
loopne
je
push
add
adc
pop
and
lods
adc
nop
stos
add
add
jb
inc
lds
adc
cld
outsl
lods
rcrl
push
add
add
pusha
push
gs
jg
stos
mov
mov
pusha
and
insb
inc
adc
jl
pusha
xor
adcb
mov
push
je
lds
das
ja
jo
in
lcall
je
cs
sbb
das
loope
call
insb
lcall
push
or
cmp
push
lcall
or
loop
hlt
mov
setae
popa
or
or
lcall
outsl
adc
jl
and
iret
xor
jnp,pn
cmp
loop
loope
loope
xor
loop
outsb
inc
add
mov
cmp
mov
lret
insb
mov
loope
clc
and
xchg
add
xchg
xchg
jle
mov
or
add
mov
ja
fwait
andl
xor
pop
add
sbb
pop
jecxz
add
jg
mov
je
inc
push
pop
test
pop
addl
sbb
cld
mov
sbb
xor
adc
push
add
cs
mov
adc
jmp
sti
xor
jmp
add
sub
add
in
call
lods
lods
inc
pop
or
push
popa
adc
and
enter
mov
xor
call
ret
mov
cmp
cmp
sub
sbb
sub
add
cs
dec
sub
sbb
sbb
pop
rcrb
std
es
std
push
out
and
jmp
ljmp
out
shrb
pop
movsb
xor
inc
mov
insl
call
movsl
add
popa
or
testb
add
fistps
pop
mov
out
mov
in
hlt
jo
mov
mov
fcomip
mov
loopne
add
ds
sub
cmpsl
fcompl
icebp
mov
pushf
movsb
fdivrs
test
adc
mov
repnz
loope
jmp
pop
hlt
sbb
in
lds
pusha
push
addb
jp
test
inc
fmuls
add
dec
and
push
pop
push
mov
outsl
jae
inc
icebp
mov
addl
sub
mov
frstor
adc
rcr
add
sti
movsb
push
in
push
sbb
out
or
repnz
add
mov
inc
call
push
je
add
gs
xchg
ja
ret
fwait
insl
cwtl
std
sbb
popa
xorb
jp
arpl
jmp
pop
fsubp
pop
into
and
js
sub
add
mov
jg
mov
popl
mov
xchg
jl
out
cli
xchg
xchg
pop
mov
andb
nop
mov
jg
xor
pop
out
dec
and
mov
popl
push
jno
add
push
out
hlt
lcall
xor
push
pop
outsl
in
sbb
inc
add
stc
add
shrb
outsl
jg
pop
mov
jbe
and
jne
xchg
xorl
sarb
test
push
in
nop
jg
inc
mov
dec
sbb
call
sbb
mov
dec
mov
nop
pop
pop
pop
cmpsl
inc
pop
scas
xor
mov
adc
ret
jg
sbb
sub
scas
adc
sbb
push
test
call
inc
movsl
or
push
push
ret
or
sbb
cmc
das
fidivl
sbb
pop
out
cs
out
adc
loope
sbb
cmpsb
outsl
pop
push
std
push
inc
or
mov
inc
mov
inc
jp
movsl
add
fstpt
mov
mov
inc
fdivl
dec
divl
ja
mov
add
cmp
or
pop
add
clc
dec
push
mov
decb
or
loopne
adc
sbb
sbb
mov
push
icebp
pushl
incb
sbb
push
shrb
insb
cld
pop
imul
or
inc
std
jmp
loop
repnz
mull
loopne
div
mov
add
popf
and
xlat
int3
filds
clc
fsubrs
ret
add
movsb
mov
mov
dec
stos
cli
push
dec
mov
pop
inc
push
sahf
mov
pop
mov
xor
cld
lock
dec
dec
das
add
icebp
add
dec
es
mov
cmpsl
pop
dec
pop
mov
inc
dec
mov
inc
dec
mov
orb
arpl
mov
or
cmc
push
sbb
xchg
sbb
loop
add
testb
jne
cs
pop
xchg
xchg
mov
clc
lcall
addr16
imul
inc
xchg
mov
cmpsb
add
pop
mov
je
dec
dec
mov
lcall
movsl
mov
jae
mov
push
add
mov
pop
add
aas
rol
adc
add
mov
iret
loopne
and
aam
scas
mov
mov
mov
inc
aaa
cld
mov
mov
ret
push
push
mov
cld
fisttps
xchg
push
push
inc
mov
shr
ljmp
out
lock
sbb
add
loopne
cld
sbb
insb
in
adc
push
pop
decl
or
mov
bound
mov
jae
xchg
or
add
lcall
call
jp
test
lods
xor
jbe
mov
lahf
jno
fwait
mov
test
xorb
xchg
mov
mov
cli
scas
call
pop
add
call
andb
out
cli
ja
push
push
or
mov
das
out
and
rol
aad
add
and
fbld
roll
xor
add
js
imul
icebp
xchg
lds
or
outsl
add
mov
sbb
jecxz
sub
or
mov
loop
push
std
jae
mov
mov
and
jecxz
loope
incl
xchg
sub
clc
out
cmc
add
and
and
add
adc
mov
pusha
insb
lret
xor
push
rorl
mov
data16
xchg
xor
mov
add
or
sbb
push
or
lcall
pop
adc
sub
icebp
or
jae
sahf
mov
xchg
mov
and
jmp
jb
sbb
push
clc
xor
and
out
sbb
sbb
jmp
cltd
mov
jno
cli
mov
jbe
mov
cmpsb
inc
nop
lods
mov
sbb
jmp
or
jbe
xchg
cltd
mov
lahf
addb
call
lock
btr
pop
out
push
decl
out
dec
mov
mov
je
addr16
pop
hlt
jmp
push
outsl
add
outsb
data16
xor
gs
push
push
add
addr16
push
mov
test
mov
inc
pop
andb
xor
movsb
and
jno
leave
adc
xchg
xchg
or
mov
jg
insl
jb
or
pusha
pop
mov
dec
pop
inc
jb
test
aas
jo
mov
inc
push
arpl
mov
push
mov
xor
jb
and
dec
cld
xchg
mov
add
rolb
fldenv
lret
and
loop
in
push
sti
ja
repz
add
in
jmp
or
jmp
mov
data16
xorb
mov
dec
dec
add
mov
dec
dec
add
sarb
rolb
out
mov
and
add
scas
sbb
push
add
in
es
das
cmp
les
shrb
ss
pop
jo
movb
repz
into
push
or
fidivs
add
std
adc
add
sbb
icebp
add
push
pop
push
je
mov
mov
call
jns
lahf
and
jno
jg
add
xchg
js
jg
sbb
mov
cld
dec
xor
inc
mov
mov
in
push
and
lcall
pop
mov
xchg
pop
dec
xchg
call
cld
jmp
decl
adc
or
leave
sub
adc
pop
ja
lahf
mov
ja
cltd
jo
stos
mov
lods
mov
stos
mov
mov
mov
add
mov
mov
mov
stos
xchg
lea
mov
inc
test
add
pusha
inc
ds
jmp
shr
in
xor
bsr
movsl
mov
inc
mov
and
mov
sub
test
repz
icebp
mov
pop
pop
or
dec
xchg
repnz
mov
repz
cld
aam
mov
dec
xor
js
pusha
mov
inc
out
sahf
fldl
and
xor
stc
sahf
adc
push
mov
cld
out
adc
in
cli
adc
fadd
sarb
aam
adcb
fmuls
fcmovu
xor
orb
pop
mov
insl
mov
arpl
or
roll
mov
dec
hlt
outsl
cmpsb
subb
pushf
cld
push
mov
dec
movsb
mov
decl
fistpll
ja
jbe
push
data16
mov
add
ja
jns
jp
sbb
add
xor
sbb
lods
mov
inc
inc
push
test
pop
in
out
adc
bound
xchg
popf
popa
cmp
sti
ja
es
les
sub
adc
or
or
adc
psrad
pop
cmp
cmp
clc
loopne
sbb
adc
adc
cwtl
cltd
sbbl
or
stos
movsb
dec
inc
adc
hlt
repnz
sti
cmpsb
pop
fsubl
incb
cltd
test
push
or
pop
and
ret
sbb
jmp
mov
lock
ror
les
push
mov
cwtl
cmc
ja
cmpsb
pop
add
inc
xor
mov
mov
mov
mov
dec
mov
pop
mov
insl
add
jb
mov
test
and
inc
ljmp
adc
mov
pop
add
inc
push
add
scas
clc
mov
call
ltr
ja,pt
add
jns
push
das
jl
jae
add
and
aaa
jle
in
cmp
xor
push
adc
fs
add
call
out
call
into
push
add
scas
xchg
lock
cli
push
shr
add
add
or
jmp
ljmp
jmp
mov
aam
loope
xchg
lock
outsl
lods
inc
mov
add
sub
inc
ret
imul
mov
or
pop
cmp
or
loop
sub
rol
fcomip
aaa
call
sub
iret
iret
add
out
movl
jecxz
mov
ss
mulb
sbb
adc
outsl
cs
xor
push
adc
cli
sub
sub
jecxz
mul
ja
stos
sub
mov
repnz
jmp
mov
scas
cli
adc
jecxz
pushl
std
mul
data16
les
or
mov
jge
scas
lods
or
rolb
shll
ljmp
inc
outsb
mov
scas
push
aaa
adc
cmpsb
pop
sbb
ljmp
inc
idiv
push
insb
and
call
dec
mov
add
int
add
cmc
clc
add
lret
aam
mul
hlt
add
sbb
jg
dec
dec
inc
cmpsl
inc
pop
jno
or
inc
add
xor
mov
push
or
xor
ret
cmp
jo,pn
cltd
push
cld
sbb
sarb
sub
call
dec
inc
push
push
push
add
incl
js
jmp
xor
pushl
clc
imul
add
pushf
in
shll
les
add
das
inc
add
call
std
out
into
or
clc
enter
fldl
loope
mov
sbb
rol
data16
cmp
fcomip
sub
ss
push
dec
cmp
xor
xor
aaa
sbb
push
shrb
and
out
mov
xchg
add
es
int
xor
aas
fnstsw
and
mov
ja
mov
lds
ds
shll
das
or
dec
lea
filds
cld
dec
mov
sahf
pop
pop
inc
mov
pushf
pop
push
push
mov
push
add
xchg
pop
adc
sub
clc
cmp
fldt
aaa
les
and
aaa
orl
cmp
ljmp
mov
add
scas
dec
adc
sarl
dec
mov
lahf
inc
mov
mov
add
pushl
pop
addb
xchg
jnp
nop
add
leave
lcall
push
sub
data16
daa
and
cmp
orl
cs
add
dec
pop
lock
insb
mov
insl
jb
xchg
movsl
add
pop
movsb
pop
inc
jne
incl
inc
inc
dec
push
pop
pop
or
cmp
out
push
push
add
push
sbbl
arpl
add
xor
lret
shrb
or
pop
push
push
scas
pop
inc
das
jp
xchg
push
dec
push
incl
inc
mov
mov
xor
loope
inc
mov
mov
clc
or
lea
scas
cli
mov
jb
sbbb
xchg
xorl
jo
fistps
add
std
aas
push
std
lret
arpl
aaa
cltd
lret
daa
xor
jnp
data16
inc
ljmp
lock
subl
addl
sbb
bound
stos
lea
addr16
stos
insb
xchg
pushf
xchg
jle
test
mov
ss
sahf
mov
mov
sub
fwait
lea
sbb
lods
mov
mov
mov
mov
jmp
or
mov
rcll
inc
dec
dec
pop
push
inc
push
add
adc
mov
ljmp
aad
mov
test
mov
mov
pushf
sahf
push
pop
lcall
test
jae
xchg
push
pop
push
cld
xchg
pop
xchg
jge
cmp
pop
inc
pop
mov
arpl
dec
pop
mov
add
lahf
pop
push
dec
mov
push
popf
js
shl
lock
push
jle
xorb
stos
cmp
mul
sbb
push
shlb
mov
dec
push
add
das
int3
ror
daa
pop
mov
sub
daa
rol
int3
or
jmp
stos
sub
jmp
add
dec
pushf
dec
dec
pop
test
mov
je
mov
cmpsl
dec
pop
pop
stos
push
or
mov
push
add
jle
cmp
cmp
cmp
out
arpl
mov
loopne
push
jnp
push
insb
mov
jne
or
sbb
lcall
icebp
or
unpcklps
adc
push
pop
push
cmpsb
adc
cwtd
rclb
jg
jle
xchg
nop
xchg
inc
xorl
fadds
xchg
pusha
sahf
cltd
lcall
popf
add
jns
scas
add
adc
out
add
push
repnz
movsl
jo
out
cli
mov
add
push
mov
mov
les
ret
std
add
and
into
les
add
and
es
xor
or
or
jmp
scas
add
call
pusha
in
in
mov
aad
pop
cli
sbb
sti
out
mov
add
adc
mov
push
cli
adc
inc
dec
or
adc
push
sbb
inc
decl
or
and
and
xor
cmp
add
cmp
mov
hlt
and
fdivrs
cmp
cld
xor
daa
ret
sub
hlt
out
mov
icebp
add
add
inc
pop
dec
loop
cmp
cmp
popa
loop
cli
sahf
data16
xchg
nop
jnp
test
test
cmc
fstpt
jl
dec
xchg
jbe
push
cmp
mov
xorb
add
jmp
dec
cltd
loop
fst
test
mov
push
xchg
jo
mov
push
test
mov
pop
mov
ljmp
scas
add
and
repz
call
mov
pushf
push
stos
lods
fstl
add
loope
jle
je
mov
data16
pop
dec
loop
xchg
fwait
insb
adc
ss
jl
sub
test
das
xchg
xchg
push
xchg
loope
pusha
sbb
test
and
jp
stos
mov
mov
mov
mov
dec
sbb
popa
add
cmc
div
je
roll
mov
fbld
repnz
mov
mov
aaa
std
out
sbb
or
mov
mov
mov
cwtl
test
dec
mov
mov
xchg
arpl
push
push
pop
push
cwtl
ja
jae
ficoml
jg
lea
dec
mov
mov
int
pop
js
add
mov
add
sbb
inc
mov
out
shl
push
inc
test
int3
popa
add
mov
loope
mov
loopne
jge
mov
pop
loopne
mov
imul
loope
call
lret
jle
and
cmp
loope
cli
sub
xor
sub
sub
sub
aaa
loop
fs
jnp
jg
jb
mov
ljmp
push
std
imul
dec
inc
add
scas
pusha
or
les
inc
mov
dec
adc
add
aaa
and
les
cmp
add
xor
cmp
jnp
add
or
lcall
xor
pusha
add
lcall
and
add
and
lock
aaa
inc
xor
movl
jnp
leave
cmp
das
clc
push
out
aas
lret
gs
sub
fsubrs
inc
jg
xchg
push
push
dec
repnz
or
cli
bnd
adc
mov
call
out
loop
jmp
jmp
sbb
stos
ja
mov
clc
imul
jl
cmp
sbb
lret
xor
push
outsl
arpl
push
sbb
cmp
mov
push
sbb
test
pop
inc
push
mov
pop
adc
sbb
addl
insb
xchg
xchg
add
jns
mov
stos
into
mov
imul
inc
xchg
mov
or
arpl
adc
inc
lcall
popa
xchg
popf
xchg
add
xchg
int
mov
mov
test
adcb
sub
sub
sbb
aam
push
jle
pop
or
or
out
jg
and
out
in
mov
and
and
and
fcom
iret
xor
mov
pop
push
add
pop
pusha
aad
out
sbb
pop
sub
in
inc
or
fcomip
mov
nop
sbb
sbb
int3
pop
sbb
add
ss
subb
lods
fbstp
fimull
loope
in
fcmovnu
xor
ffreep
inc
xor
or
lock
cli
ljmp
add
xchg
cmpb
in
cs
add
test
test
or
inc
js
scas
fisubs
test
mov
aas
test
and
loope
in
pop
pop
push
scas
pop
outsl
pop
test
add
sbb
mov
and
cs
pop
loop
clts
out
sbb
jmp
arpl
mov
dec
pusha
mov
clc
scas
pop
dec
inc
hlt
push
dec
scas
stos
mov
jg
incl
mov
mov
adcl
test
into
pusha
js
enter
clc
in
push
stos
push
imul
lock
mov
pop
fsubs
mov
mov
adc
pop
mov
mov
or
adc
sbb
pop
loopne
dec
pop
inc
cmp
pushl
xchg
jle
jno
add
cwtl
gs
outsl
xchg
jo
inc
cmpsl
add
push
mov
fsubrs
mov
mov
out
enter
mov
mov
pusha
cwtl
lcall
xchg
jg
cs
jbe
lret
sbb
sbb
hlt
incl
mov
mov
mov
dec
add
dec
push
scas
push
push
fldt
stos
push
push
pop
cmpsb
pop
out
bound
imul
outsb
nop
jo
add
mov
pushl
je
jbe
js
add
pusha
pop
xchg
call
xor
mov
incb
je
push
js
outsb
and
add
add
and
add
push
inc
inc
add
add
mov
xchg
add
add
push
int
mov
pop
pop
pop
mov
arpl
xchg
rcr
fwait
outsl
and
add
lods
sub
sub
and
mov
mov
mov
push
test
shrb
and
lock
mov
subb
xorb
es
add
imul
xchg
adc
mov
add
outsl
jg
insb
inc
mov
add
add
lock
jae
pop
fdivl
insl
ret
cmpsb
mov
test
mov
push
nop
jmp
inc
jbe
dec
pop
add
mov
lock
adc
push
insb
mov
pop
push
push
out
je
push
jo
std
call
pop
add
mov
es
popa
fs
bound
jb
jb
inc
mov
mov
lock
mov
popa
je
stos
push
mov
hlt
xor
gs
jb
lcall
mov
xchg
jns
xchg
outsw
jb
push
sbb
push
jb
data16
loope
arpl
lods
je
push
or
jp
mov
or
fwait
push
je
lea
fimull
inc
push
xchg
mov
ss
lcall
fwait
insb
clc
aaa
lds
cli
adc
fs
mov
or
pushl
clc
fcmovnu
das
dec
in
ret
js
push
in
and
mov
mov
pushl
insb
jp
inc
push
inc
push
adc
mov
push
pushl
mov
and
push
inc
dec
mov
mov
add
inc
mov
mov
incl
mov
dec
push
push
xor
dec
inc
inc
stos
adc
dec
stos
xchg
lods
inc
push
es
incl
dec
dec
mov
push
xchg
scas
inc
push
or
mov
sbb
inc
adc
xor
dec
push
inc
mov
inc
dec
mov
lock
cld
fisttpl
add
stos
push
nop
jno
add
leave
push
cld
adc
dec
mov
lret
popa
mov
mov
ret
jo
fucomip
inc
pushf
outsl
outsb
outsb
lcall
loop
daa
mov
sub
arpl
mov
sbb
mov
je
and
lock
pop
aam
or
outsb
arpl
cmp
addr16
ret
mov
jne
xchg
gs
jecxz
ljmp
add
jo
popa
insb
imul
xor
mov
clc
outsl
mov
xchg
mov
and
adc
lock
add
jp
cs
in
sahf
gs
mov
add
inc
add
das
sub
cmp
push
pushf
jno
or
and
mov
fs
jl
shll
lret
xchg
outsb
push
jae
into
inc
addr16
pop
jno
or
xchg
jae
dec
xor
add
inc
outsb
add
daa
dec
fcoml
sbb
mov
add
inc
xchg
imul
xor
fimull
xor
rcrb
imul
pop
orb
loop
addr16
cld
xor
mov
orb
mov
imul
enter
pop
outsb
jae
pushf
mov
xor
xchg
mov
cwtl
es
in
or
add
add
out
popa
jb
push
jo
xor
in
jne
clc
in
adc
outsb
repnz
mov
jo
call
add
inc
dec
push
mov
push
add
nop
jae
loopne
sbb
cld
mov
sbb
add
xor
repnz
jo
mov
imul
add
lcall
push
mov
sbb
pop
sbb
sub
hlt
push
mov
pop
mov
add
pop
dec
jp
mov
adcb
pushf
imul
xchg
sub
add
xor
test
lea
add
aas
mov
lock
inc
mov
sub
addr16
xchg
hlt
lcall
add
into
adc
adc
jle
dec
jmp
jg
pop
mov
jle
inc
std
jnp
push
mov
or
cmp
or
add
jge
mov
sub
pop
mov
or
xchg
rcll
test
lock
lcall
movsl
cld
xchg
jo
xchg
mov
lea
push
aas
xchg
hlt
lcall
shlb
mov
xor
dec
xor
fldl
inc
jg
and
and
and
add
call
rorl
jb
xor
inc
outsb
mov
cmp
pop
jo
xchg
insl
rorb
jmp
aaa
lods
mov
lea
xor
add
pop
push
xchg
je
imul
fs
loopne
dec
add
and
mov
imul
out
and
and
cwtl
outsl
test
outsl
fbstp
push
repnz
int3
or
insl
jg
nop
and
add
inc
lcall
outsl
push
and
xchg
xor
inc
icebp
adcb
jo
frstor
fdivr
jg
push
push
pushf
push
sbb
xchg
inc
repnz
add
dec
add
jge
add
mov
call
inc
adc
call
mov
inc
test
clc
lock
ljmp
hlt
in
inc
fcmovu
mov
ja
stos
xor
ljmp
add
jmp
pop
and
aaa
ud0
cmp
mov
add
movsb
push
call
pushl
ret
push
nop
in
jle
test
add
add
add
pop
aad
or
mov
jp
jne
push
mov
mov
sub
incl
add
call
fmul
mov
and
cmp
lock
scas
iret
std
ds
leave
call
mov
push
call
cmp
adc
jo
addb
mov
lret
je
push
lea
jne
mov
andb
cli
ds
add
enter
mov
cmp
inc
mov
add
push
cld
lea
std
incb
jo
test
lea
shl
sar
sbb
add
test
int
outsb
je
add
jne
call
sti
dec
les
ljmp
test
cmp
add
cld
push
push
ds
add
jecxz
jmp
int
pcmpeqw
call
test
pop
sbb
mov
add
rolb
push
inc
cmp
or
mov
data16
xchg
xchg
sbbb
sbb
aas
and
and
jb
pmaxsw
mov
ret
mov
pop
icebp
or
orl
push
pop
mov
faddl
rclb
inc
push
lock
mov
lcall
jge
add
out
inc
dec
pop
loope
je
aas
jne
das
lea
loopne
add
das
adc
mov
inc
jg
divb
cmp
add
xor
inc
ds
ret
dec
add
imull
add
dec
add
cwtl
pop
ljmp
and
mov
mov
repz
sti
mov
popa
xchg
sbb
cld
or
imulb
js
jl
je
test
mov
jge
add
call
or
jge
add
out
mov
jmp
mov
jmp
mov
jmp
add
inc
cmpb
inc
adc
add
je
mov
clc
std
jbe
addl
call
jne
adc
test
sahf
sbb
in
cmpsb
add
fbld
rcrb
push
enter
ret
push
and
adc
sbbl
mov
push
push
push
cmp
or
rorb
adc
or
lea
cld
orb
xor
shlb
pop
pop
ret
call
jl
add
mov
andl
test
or
or
fcoml
rcrb
jl
sbb
push
inc
or
leave
push
add
and
lahf
scas
and
fs
mov
xchg
add
dec
xor
out
jb
cld
mov
push
add
mov
rorb
addb
ret
js
imul
mov
cld
jo
out
rolb
call
pop
and
jb
mov
inc
inc
add
push
ss
adc
adcl
loopne
adc
xor
add
push
mov
mov
pop
cld
push
shll
sarb
mov
add
jge
mov
aas
cmpl
add
mov
call
jmp
mov
hlt
rolb
shll
rolb
add
ljmp
out
mov
jbe
add
cmp
adc
adc
scas
idivb
adc
sub
sbb
leave
add
push
push
in
test
or
pop
je
data16
shll
push
pop
or
mull
frstpm(287
fildl
movsb
push
ret
ret
pop
mov
sub
push
fcoml
push
mov
jns
add
xchg
add
sbbb
dec
dec
je
push
xor
xor
cmp
mov
push
in
adc
sub
je
aam
push
loopne
clc
pusha
mov
mov
mov
sub
push
lock
sub
push
ljmp
and
and
inc
jl
movsb
inc
repz
cmp
or
cmp
jle
mov
or
std
mov
push
sar
pusha
inc
sub
lods
add
pop
xor
pop
push
dec
sub
lcall
loopne
pop
pusha
jge
cmp
jmp
popa
inc
loope
clc
mov
pop
loopne
in
sbb
add
or
push
push
or
sub
mov
daa
loop
clc
fs
faddl
adc
pop
push
test
pusha
adc
jb
push
xchg
pusha
andb
inc
bound
test
pusha
add
pusha
add
xlat
call
adc
loope
loopne
push
mov
out
je
add
or
pop
out
sbb
mov
ds
push
lret
inc
sbb
add
pusha
daa
dec
lock
jl
and
out
pop
cltd
mov
jbe
mov
inc
jp
or
enter
pop
or
in
loopne
adcl
loope
pop
add
add
mov
or
fistpl
push
pop
mov
or
es
jmp
add
fwait
mov
pop
repz
inc
xlat
mov
sarl
and
aas
xor
sub
pusha
cmp
cmp
add
imulb
jmp
xchg
add
add
sub
clc
inc
sub
sub
or
cwtl
sub
cmp
adc
aas
inc
push
loopne
and
push
and
push
push
popa
push
ljmp
addl
dec
cmc
subl
mov
pop
push
push
test
inc
movsb
pusha
clc
call
adc
pop
pop
ret
xor
adc
loopne
loopne
pop
faddl
xchg
and
push
pusha
mov
sub
pusha
push
jl
je
in
aam
add
outsl
cli
push
push
mov
pop
mov
shl
jp
or
jg
call
sahf
or
cmp
push
clc
sub
jo
cld
ds
into
pop
add
stos
jne
add
inc
ss
sbb
push
or
inc
jae
shrl
cs
jmp
pusha
mov
call
incb
pusha
ja
movb
push
or
jl
call
and
xorl
cmp
andb
sti
out
addb
pusha
dec
or
in
or
lea
mov
dec
pop
scas
pusha
mov
mov
mov
clc
add
int3
call
and
add
in
inc
loop
incb
mov
xchg
push
loopne
mov
dec
notl
test
jo
lret
pusha
and
inc
cli
jg
mov
loope
pop
add
mov
test
mov
or
idivb
scas
pop
cmc
or
push
loope
out
or
das
mov
pusha
mov
je
add
mov
bound
les
lock
scas
call
subb
outsl
mov
or
sub
inc
pop
int3
ret
sub
ds
mov
fwait
or
cmp
adcb
mov
dec
jne
adc
sub
mov
in
popa
add
aaa
test
sarb
popa
add
dec
pusha
add
cmp
loopne
xor
divl
data16
mov
nop
adc
jp
jno
call
scas
js
add
add
les
icebp
pop
negb
call
push
push
mov
mov
sub
push
cmp
addb
push
je
jge
cmpsb
call
mov
add
inc
sub
incb
or
mov
test
mov
xchg
jp
jg
divb
add
mov
sbb
push
mov
ret
mov
fmull
push
jg
cmp
add
inc
and
jl
adc
lods
jp
adc
pop
xchg
push
les
ja
sbb
clc
scas
push
fdivs
jne
mov
mov
mov
push
pop
or
dec
clc
inc
mov
andl
mov
inc
xor
mov
mov
repnz
jbe
aam
repnz
jne
push
call
mov
lock
pop
pop
or
xor
cmp
add
test
adcl
aas
jno
test
add
cmp
sbbb
je
lods
xor
push
decl
jg
mov
test
push
adc
icebp
inc
sbb
ljmp
mov
xor
mov
cmp
xor
mov
and
mov
add
cmp
cmp
in
jg
sub
lock
inc
lock
pop
jno
cmp
and
jmp
inc
jo
lock
mov
test
sar
ret
push
enter
jno
lret
lods
aam
dec
adc
dec
add
inc
pusha
ret
pop
lock
jno
push
push
add
adcb
mov
xorb
or
pop
andb
add
xor
call
sub
fs
adc
jb
inc
jo
push
push
hlt
add
adc
lock
mov
add
dec
inc
mov
mov
inc
push
mov
and
push
jb
xor
inc
pop
jne
push
loop
sbbb
enter
pushl
mov
push
call
scas
push
push
and
dec
arpl
outsb
js
and
arpl
push
pushf
dec
or
bound
out
inc
inc
fdivl
insb
dec
lea
push
cli
fists
mov
xor
les
jbe
lock
adc
or
jbe
aaa
pop
push
push
pop
ljmp
mov
dec
in
loope
cmp
dec
push
or
mov
mov
jg
mov
push
lahf
mov
xor
mov
cmp
jge
add
cld
cmp
mov
call
sahf
jp
jge
sbb
shlb
rolb
mov
lret
fwait
mov
pop
mov
cmc
test
jmp
add
std
add
in
cmp
enter
jb
ss
mov
push
sub
push
sub
or
fs
mov
sub
add
add
push
or
inc
mov
jo
test
fs
xor
inc
mov
int
adc
faddp
dec
jb
call
jg
adc
mov
push
push
lea
jno
lods
mov
call
dec
cmc
jb
add
or
mov
lea
outsl
cli
test
xor
cmc
lock
cld
sar
add
mov
jo
jne
adc
cld
or
and
push
cmp
je
push
mov
jne
ljmp
pop
add
adc
or
addl
add
imul
nop
jg
loope
lock
add
call
dec
xchg
jbe
mov
sub
xchg
scas
push
inc
iret
mov
outsl
cli
jmp
xor
inc
adc
sbb
xor
pop
cmpb
sub
mov
cmp
mov
mov
mov
xor
in
add
add
call
call
mov
dec
jne
decl
enter
stc
add
sbb
dec
add
ret
add
xchg
push
jge
jne
xchg
adc
xor
lock
or
test
ret
lods
sar
cmp
add
je
andl
mov
jne
loopne
orl
cmp
push
mov
mov
nop
addb
jns
pop
pop
hlt
cmpsb
call
jp
data16
andl
and
cs
xor
inc
xlat
scas
das
fdivrl
ret
mov
in
or
je
test
cmp
pop
push
adc
decb
or
lcall
dec
xchg
push
add
mov
je
call
mov
add
shr
jb
addb
cmp
jne
mov
xlat
decl
and
ret
je
mov
adc
adc
pop
cmp
cld
add
push
icebp
scas
add
ss
shll
bound
jmp
xor
mov
jmp
add
inc
jmp
je
xor
add
pop
mov
mov
adc
rolb
loop
cs
xor
xchg
pshufw
cmp
lea
loope
cld
sub
mov
dec
add
hlt
and
mov
jb
pop
push
dec
test
add
mov
or
sahf
jno
adc
push
std
ja
push
jne
jae
loope
mov
push
push
push
add
dec
cld
sub
or
xor
adc
aas
jmp
or
or
ja
or
testl
je
or
mov
xchg
fbstp
je
pop
icebp
xor
sbb
cmpsb
push
aad
or
or
add
xor
js
pusha
ret
add
lock
mov
mov
or
pop
outsb
xor
jp
mov
je
or
inc
leave
lock
incl
lea
hlt
jo
ret
push
push
je
and
or
test
add
les
jmp
jnp
cmp
test
sub
dec
hlt
sbb
or
xlat
cli
shll
fistpll
jmp
push
imul
sub
repnz
mov
and
sub
fucomip
mov
inc
jecxz
outsb
inc
je
jno
incl
je
imul
add
xor
dec
or
mov
mov
push
jl
cmp
sbb
jbe
loopne
mov
xor
inc
notb
pop
sbb
sub
pop
pop
pop
ja
lock
out
lock
xor
ljmp
pop
and
xor
cmp
push
in
loopne
mov
jg
call
and
call
jbe
cwtl
test
ljmp
jl
or
inc
mov
pop
loopne
dec
imul
lea
xchg
mov
das
ds
sub
dec
jne
clc
je
jp
jne
ljmp
xor
push
imul
add
mov
adc
jae
push
or
inc
fadd
aaa
jle
orl
inc
dec
mov
notl
sub
clc
call
or
fisubl
lds
add
fimuls
mov
pop
fs
jl
outsb
inc
mov
jl
lcall
push
push
push
fisttpl
xor
mov
test
fsubl
push
scas
jl
sbb
jmp
push
mov
ljmp
int
adc
sbb
push
jmp
sub
repnz
stos
cmp
fisubl
adc
xchg
jnp
pop
push
mov
test
ss
out
call
jne
sbb
repz
push
cmp
push
pop
fcmovu
pushf
push
stos
or
jnp
mov
adc
fnstsw
clc
xor
jmp
mov
int3
cli
andb
mov
sub
or
cmp
stos
push
push
mov
orl
and
subl
int3
sarb
scas
ja
or
adc
cmpsb
add
lcall
inc
cmp
repz
sbb
lods
inc
xor
pop
lahf
sarb
aam
in
pop
mov
mov
lret
push
push
sahf
aad
push
sbb
cli
push
push
incl
cs
shl
in
pop
xchg
and
add
orl
add
enter
cmp
ret
mov
stc
mov
mov
push
leave
insb
add
jg
inc
or
pop
push
add
add
inc
and
in
add
and
push
mov
jmp
push
xchg
add
in
dec
call
sub
or
mov
xorb
rclb
repnz
in
sbb
push
fucom
adc
push
inc
mov
fbld
mov
pop
add
push
push
xchg
add
cmp
cs
jp
je
adc
test
pop
test
addr16
imul
clc
inc
adc
cmpb
jg
mov
mov
mov
pop
lock
mov
xchg
xor
push
std
xchg
inc
xor
xchg
js
ljmp
ret
js
lcall
jle
insb
in
push
push
notl
jl
or
icebp
das
sub
sbbb
add
jbe
xchg
std
test
aaa
data16
je
push
fimull
in
ror
adc
cmp
sub
sbb
mov
or
incl
push
sbb
scas
push
mov
call
out
ljmp
pop
add
mov
insb
add
adc
push
inc
or
outsb
out
test
mov
data16
fildll
je
shlb
xor
push
mov
xor
push
xorb
adc
cmp
andl
int3
jo
push
push
xor
js
cmp
jmp
lcall
inc
into
aam
shlb
push
jl
rcll
sahf
mov
pop
lods
push
push
add
fldt
aam
test
je
adc
insb
mov
mov
fisubrl
loope
lock
loopne
in
mov
dec
scas
add
aam
mov
jne
out
test
pusha
sbb
sbb
inc
mov
dec
sub
nop
jbe
mov
outsl
pushl
or
rolb
inc
sbbb
rcrb
mov
or
mov
or
push
inc
hlt
pop
add
adc
inc
les
inc
mov
mov
dec
insb
fbstp
add
mov
movsb
push
pop
jb
cmpsl
ss
add
call
cmpsb
pusha
fiaddl
push
out
pop
mov
and
and
or
aad
scas
mov
add
sbb
sar
jge
bound
insb
inc
push
test
push
call
add
add
mov
incl
cmp
es
mov
fcomip
lds
aas
mov
testl
call
cmp
mov
and
inc
and
xor
loop
mov
xor
push
hlt
push
sarl
inc
call
inc
mov
aad
lock
fstpl
cmp
inc
push
or
xor
loopne
pop
divb
rclb
pop
xor
jp
jne
inc
lea
lret
popa
ret
mov
stos
push
push
fadds
add
adc
lcall
or
and
push
mulb
movsb
sub
jbe
lock
or
push
adc
xchg
add
adc
cmp
add
clc
add
test
loopne
add
fisttps
or
mov
jp
test
jg
cld
add
cld
outsl
clc
and
or
push
mov
lret
pop
or
bound
inc
and
lods
push
cmp
lea
mov
push
movsb
add
jb
pop
jl
andb
sub
xorl
sub
inc
cmp
or
mov
into
out
inc
adc
pop
addl
sub
pop
inc
lods
dec
je
push
int3
jbe
push
rorb
mov
fsubl
imul
jmp
or
mov
sub
sbb
clc
mov
cs
jno
sbb
mov
pusha
insl
ret
jns
or
or
push
lea
aaa
cld
adc
mov
call
fs
and
fildl
jge
imulb
je
jb
dec
clc
sbb
mov
pusha
pop
ss
scas
pop
lock
cwtl
pusha
mov
mov
add
jb
xorb
sbb
out
and
xor
adc
or
lock
mov
add
add
int3
repnz
mov
or
in
mov
or
push
sub
pop
adc
incl
or
movb
xor
loopne
mov
dec
lea
mov
inc
pusha
insb
mov
push
sbb
pop
jb
add
aam
push
adc
add
loop
sub
nop
dec
lea
jle
fdivs
add
push
inc
in
inc
outsl
mov
or
push
cmp
jnp
fs
fistl
mov
cmp
cmp
or
pop
andb
sbb
dec
ja
mul
push
and
or
fimull
scas
es
and
xchg
sbb
mov
mov
je
and
lods
pop
jg
xchg
je
pop
add
repz
in
lods
push
push
pop
cld
push
jg
ljmp
call
fcomps
push
cmovne
xchg
or
loopne
dec
jb
hlt
mov
jae
add
add
or
inc
subb
out
cli
xchg
dec
jmp
adc
call
push
sub
loope
push
les
lds
sti
fimull
push
cli
imulb
cwtl
mov
jbe
hlt
test
out
pop
test
stos
bound
cmp
pop
push
out
ja
xor
hlt
scas
movb
bound
jmp
mov
repz
inc
adc
xchg
push
mov
adc
push
push
sbb
decl
add
xchg
adc
out
int3
insb
dec
data16
aam
out
sbb
ljmp
jne
push
aam
scas
fs
cmp
or
mov
jno
jmp
mov
daa
cli
outsl
xor
pop
gs
jo
dec
jp
imul
hlt
pop
mov
jge
or
pop
xor
scas
add
das
sub
mov
mov
cmp
in
mov
incl
and
adc
sbb
push
push
pop
add
mov
add
clc
sar
jg
rolb
sub
jg
xor
xor
inc
cmp
lock
jo
in
push
or
jne
je
push
cmp
and
mov
jmp
sbb
test
std
ret
mov
jp
jo
adc
push
inc
add
inc
icebp
gs
lock
dec
pop
or
jo
and
mov
and
into
dec
pop
jne
mov
mov
pop
ljmp
aaa
es
aaa
mov
push
add
mov
test
xchg
jo
or
mov
nop
jo
and
xchg
pop
movsb
lock
xchg
arpl
ljmp
inc
sahf
je
push
inc
scas
call
pop
sub
mov
mov
push
adc
fisttpl
cmp
pop
pusha
pop
icebp
lcall
pop
mov
mov
call
dec
sarb
and
clc
pop
pusha
push
idivb
sti
je
add
pop
mov
push
rolb
out
dec
movsl
stos
test
leave
ficoml
or
dec
sub
xor
sti
ljmp
ret
je
movb
mov
jecxz
add
add
in
outsl
jp
xor
sbb
lock
and
pop
scas
inc
jo
jle
sbb
jge
sbb
pusha
in
mov
sbb
push
testb
sbb
in
lock
xor
and
sbb
inc
rolb
and
pop
push
outsb
inc
sar
mov
sbb
xor
jbe
sbb
mov
or
mov
call
push
jb
add
and
adcb
aad
pop
push
sbb
cmovb
sbb
lods
loopne
jl
sbb
jno
call
adc
lock
sbb
mov
aam
jns
decl
scas
ds
cmp
mov
fs
dec
pop
jo
xorb
sbb
or
addl
jnp
fdivp
or
sub
inc
push
push
andl
hlt
decl
jo
xchg
rorl
mov
jmp
xor
add
push
push
test
cs
hlt
lods
add
add
sbb
jo
jp
pop
je
data16
ret
push
loopne
sti
add
sbb
mov
inc
or
shr
test
inc
lcall
dec
repz
call
sbb
push
and
adc
ret
js
shrb
xor
push
cmp
jbe
ljmp
std
int
sub
push
jb
cmc
jo
push
jmp
test
lock
sbb
xorb
inc
push
adc
subb
repz
cmp
rorb
or
nop
cltd
incb
jo
jo
jl
inc
adc
cmp
pop
add
addb
and
sti
jne
mov
pusha
sbb
mov
mov
mov
mov
shr
dec
ja
or
or
cwtl
push
mov
pop
dec
xlat
push
icebp
push
sbb
mov
test
pushl
xchg
lock
pop
add
mov
ret
and
lock
mov
push
iret
jmp
or
add
xor
mov
out
jmp
jg
lock
jbe
inc
or
and
add
sub
mov
test
jno
addr16
lock
pop
roll
pusha
sbbb
rcrl
inc
cmpb
push
stos
mov
inc
xorl
iret
xor
push
xor
pop
test
sub
jg
mov
dec
mov
pop
and
push
insl
mov
pop
push
and
pop
cmc
mov
call
inc
inc
psllw
sbb
dec
adc
sbb
xor
test
cld
add
lcall
fwait
and
int3
add
inc
mov
push
add
jl
add
bound
out
call
jns
dec
inc
jo
inc
jb
pop
lock
gs
push
in
sub
xor
push
jp
popa
inc
cmp
push
repnz
jb
movsb
repz
jo
inc
mov
mov
fs
psubd
fisttpl
sbb
sbb
cmpsl
call
stos
loop
push
mov
loopne
pop
fadd
jo
ljmp
out
in
test
add
cmp
ljmp
ret
call
pushl
add
cmpsb
pusha
mov
iret
mov
push
lock
xlat
add
push
sub
xorl
aam
cmp
pop
cmp
push
pop
push
icebp
test
outsl
adc
cmp
pop
adc
lcall
xor
mov
mov
es
jno
dec
subl
xchg
lock
mov
repnz
mov
stos
pop
repnz
push
adc
pop
jbe
pop
xchg
adc
mov
mov
adc
lods
push
sbb
lock
test
sub
in
out
jl
mov
adc
call
mov
mov
add
outsb
sbb
test
inc
fwait
outsb
ja
add
push
jo
push
push
xchg
loop
jle
test
aam
lock
push
call
dec
and
lock
imul
test
stc
sbb
add
xor
push
repz
mov
adc
pop
fsincos
mov
stos
jbe
xor
or
icebp
js
add
arpl
incb
xor
adc
jne
out
pop
or
je
add
or
add
orb
adc
mov
cmp
mov
scas
push
jo
xor
add
adc
mov
pop
pop
or
pusha
lock
add
adc
hlt
pop
or
add
or
jbe
add
xchg
je
mov
test
mov
mov
mov
lods
sub
push
xor
add
or
inc
sbb
cmp
test
insl
fcmovu
movsb
outsb
xor
mov
and
mov
add
shl
pushf
jne
push
add
arpl
push
xor
jne
test
mov
or
les
pop
jo
call
je
adc
push
xchg
add
clc
jmp
and
mov
sbb
push
stos
jbe
cs
adc
and
push
or
sbb
nop
pop
imul
xor
sbb
unpckhps
sbb
or
sahf
inc
sub
pushf
jmp
lea
mov
mov
rolb
orb
ret
jl
clc
sbb
imulb
fmulp
jne
divb
or
or
mov
ljmp
or
or
sub
sub
or
sbb
dec
inc
subl
out
je
lock
mov
add
fdivrp
shr
pop
in
push
or
jl
push
or
push
test
and
jbe
fsubrp
or
sub
sti
mov
xor
add
test
add
jle
push
mov
js
mov
in
int
sub
inc
adc
pop
sub
pop
adc
mov
and
in
dec
mov
pop
jno
in
add
cli
call
push
test
cli
cmp
ret
out
add
test
lods
test
add
sarb
or
and
js
sub
jbe
cmp
mov
sbb
adc
mov
test
cmp
test
cmc
das
mov
andb
sbbl
sub
push
or
jne
repz
adc
cmpl
rorb
mov
je
test
xchg
add
lods
cmp
pop
push
test
adc
jmp
test
mov
clc
push
fstl
call
sbb
sbb
imull
aam
pusha
call
aam
clc
ss
ljmp
pop
push
fdivrs
std
adcl
push
inc
test
subb
push
add
mov
adcl
imul
add
push
addl
imul
add
addb
fisttpl
mov
inc
cmp
push
pop
mov
pop
sbb
ret
inc
adc
push
lods
call
call
push
leave
add
mov
loopne
or
jne
cmpl
jne
repnz
mov
jle
sbb
imul
incl
test
jle
test
stc
dec
aas
inc
fimull
lahf
ljmp
cmp
popa
and
mov
jge
or
push
je
pushl
js
mov
pop
ret
jp
rolb
or
insl
rclb
flds
push
xchg
push
pop
add
sub
fnsave
xor
jo
inc
jge
icebp
das
fdivr
xor
ret
jbe
cmpb
add
ret
lock
dec
fdivs
cmp
stos
adc
xorl
mov
inc
push
xor
inc
sarl
push
xor
pop
je
push
enter
ss
fistl
or
dec
add
call
addl
push
sbb
or
mov
rorl
jmp
pop
pop
mulb
fadd
lods
or
or
or
jmp
mov
pop
cmpb
cli
push
shlb
add
cmp
xor
shll
or
add
fidivl
imul
xadd
jg
mov
into
out
int3
scas
mov
mov
cld
aaa
dec
or
rorl
adc
xchg
ret
repz
mov
and
add
mov
cmpsb
repz
mov
sub
mov
aam
loopne
push
mov
inc
jl
jg
mov
jb
mov
dec
rorb
mov
add
adc
adc
xor
sbb
data16
add
loopne
jae
cmp
ja
or
push
fdivs
sub
dec
loope
out
dec
add
cli
push
jecxz
jle
in
xor
jmp
test
loopne
jg
mov
adcb
mov
ja
xor
cld
loope
mov
add
call
add
ret
aaa
lock
lea
fsubr
jmp
mov
jl
or
mov
loopne
mov
pop
push
add
lea
sar
mov
inc
dec
mov
pop
cli
pusha
sub
pop
std
push
add
pusha
inc
jl
mov
loopne
pop
inc
or
dec
adc
movb
movl
sbb
rolb
loopne
cs
lock
sbb
mov
rcrb
jg
mov
lods
mov
push
xchg
mov
lea
sbb
testb
cli
jg
mov
test
fdivr
cs
jb
clc
xchg
call
cmp
mov
push
push
popa
fwait
ror
pusha
xchg
add
test
mov
inc
and
and
or
pusha
push
scas
jp
pop
push
scas
jne
mov
int
insb
les
mov
lods
stos
test
lds
cmp
orb
lcall
nop
or
cld
je
mov
sub
push
pusha
cmp
sbb
adc
mov
inc
clc
call
cld
ljmp
mov
pusha
sub
sub
cli
cmp
dec
aam
out
pop
les
push
ljmp
jb
les
inc
mov
cmp
int
loopne
in
push
stos
hlt
adc
cmpsb
cld
dec
jp
rcrl
adc
loope
mov
dec
ds
jge
and
testl
sbbl
inc
fsub
int3
mov
je
lea
cs
mov
mov
push
and
jno
or
cmp
pop
add
loopne
gs
push
std
in
das
je
in
loop
or
pop
sub
arpl
out
rclb
pusha
fcomps
sbbb
lods
push
push
add
sbb
subb
inc
mov
jg
cmp
pop
pop
adc
loop
inc
int3
cs
pop
push
pop
cld
cmp
ud2
mov
sti
ja
lea
addl
pusha
or
push
mov
pop
and
mov
je
fimull
push
push
push
push
or
loopne
jecxz
inc
cmp
mov
mov
add
inc
iret
jne
push
andb
mov
outsl
clc
loopne
adc
add
loopne
or
jp
add
loop
jmp
inc
testl
sbb
push
loop
addb
pop
negl
shl
mov
pusha
mov
insb
pop
loopne
jnp
jecxz
orb
decb
mov
push
and
cmp
js
bound
inc
sbb
jmp
push
add
popf
pusha
sub
jg
in
jmp
lea
loopne
mov
pop
loopne
rcrb
pop
leave
popa
andl
stc
mov
ja
movl
notb
sub
jbe
imul
imul
add
and
and
aas
into
pusha
ja
loope
mov
mov
xchg
in
pop
int3
loopne
fcomps
idiv
data16
pop
and
push
lea
or
jmp
cld
mov
add
inc
and
shl
cltd
or
data16
inc
mov
mov
cmp
je
jecxz
or
aad
add
mov
mov
jg
mov
xor
add
push
or
rorb
cmpl
pusha
mov
mov
repz
insb
jg
jbe
mov
mov
push
xor
push
push
lock
inc
roll
clc
add
dec
pop
mov
fwait
lock
cld
adc
sbb
jne
mov
push
repz
inc
pushl
inc
lock
ljmp
cmp
inc
leave
xor
in
mov
incl
das
mov
pop
jecxz
inc
jle
mov
cs
lock
lock
cmp
mov
push
les
mov
jo
cmp
push
aas
or
or
cmp
push
jg
jge
push
push
call
push
adc
ret
xor
inc
outsl
push
pop
lock
or
andb
fcomip
pushl
and
mov
pop
adc
jb
repz
mov
out
push
dec
nop
push
out
add
jae
jecxz
cmp
sbb
mov
and
jmp
pop
lea
lcall
or
or
mov
sub
es
xchg
add
pop
mov
and
mov
add
aas
sub
ja
sbb
adc
and
repnz
push
or
mov
jge
pop
xor
push
nop
lock
lea
sub
xchg
repnz
mov
sbb
adc
mov
mov
pop
inc
lock
pop
adc
sub
inc
jmp
and
jl
sub
add
mov
inc
filds
push
cltd
mov
fs
inc
push
sbb
aaa
or
ljmp
mov
jo
cs
clc
mov
out
out
or
add
add
sbb
inc
fildll
inc
mov
mov
or
push
push
push
je
pop
jbe
xchg
sbb
out
jp
and
xor
pop
call
int
mov
xchg
inc
pop
or
xor
pop
cmc
loop
pop
add
das
les
mov
sub
or
mov
loope
sti
add
add
call
nop
jo
jecxz
std
incl
lret
pop
lea
fidivs
xor
inc
arpl
sbb
adc
cmp
or
jp
sub
incl
pop
div
jne
jbe
adc
jbe
je
jl
test
das
test
sti
call
mov
rorb
ljmp
xor
call
rol
mov
das
dec
lock
shr
adc
xor
dec
push
sbb
call
inc
orl
jo
mov
sub
and
sub
mov
push
pop
sbb
rclb
push
sub
das
push
fcoms
lock
xchg
mov
xorb
sarb
test
push
mov
enter
aam
call
cmp
cli
pop
push
je
add
sbb
xor
xor
adc
insl
hlt
es
sqrtps
mov
ljmp
insb
push
jo
dec
lea
or
stos
test
mov
test
mov
mov
lock
dec
cmp
clc
cmp
mov
in
sub
push
push
pop
lock
mov
jns
cld
cmp
push
imul
enter
call
int3
idivb
jne
or
push
pop
pushl
push
call
jne
insb
mov
pop
push
cwtl
call
xor
jmp
mov
add
pop
addb
or
cmp
mov
addb
pop
jp
ficomps
jne
mov
cmp
and
insl
aaa
scas
add
xchg
fldt
aam
das
cmp
jne
mov
and
add
orb
fiadds
adc
mov
sar
jge
cwtl
mov
mov
cmp
into
daa
mov
push
lea
mov
or
dec
adcb
jge
incl
je
add
adc
inc
adc
orb
mov
and
jp
lock
adc
add
jo,pt
jb
jb
cli
cs
mov
call
push
and
cli
or
fdivr
pusha
jnp
cld
push
push
hlt
xchg
add
cmp
pop
sub
cld
xchg
movsb
call
addb
pop
cmc
jns
call
lock
push
lock
sbb
mov
je
call
sub
xor
mov
pushl
jl
mov
call
mov
mov
icebp
add
clc
incl
mov
js
inc
inc
mov
js
push
add
jmp
xchg
cmp
dec
cld
lea
jb
inc
mov
jmp
dec
xor
sbb
and
or
outsl
nop
mov
movsb
pop
add
inc
add
je
call
jmp
pop
ret
and
mov
notb
lea
call
das
rcrb
inc
jo
ret
xor
jp
jne
jg
or
les
enter
mov
xor
fyl2x
or
or
aas
retw
push
mov
pop
xor
dec
clc
fsubp
mov
lods
xor
hlt
cmpsb
inc
and
pop
je
pop
call
vmwrite
or
jo
inc
enter
ror
mov
mov
call
or
and
call
sub
or
mov
sbb
lcall
sti
test
add
push
loopne
sbb
xchg
lock
gs
pop
jo
inc
sub
aam
adc
xor
jl
and
clc
rol
cmp
inc
push
jae
mov
insb
mov
cmp
mov
das
clc
push
cmp
lods
push
jl
scas
jo
bsf
in
hlt
jbe
xor
xchg
addb
call
push
out
es
xchg
cmpb
fwait
inc
jo
jne
in
adc
test
adc
psubsb
adc
pop
dec
cld
push
inc
and
scas
daa
orb
shlb
lock
add
adc
adc
aad
jbe
inc
pusha
lock
jnp
sbb
test
mov
call
xchg
mov
jb
mov
push
push
xor
divb
cmp
mov
push
push
jo
mov
and
pusha
add
andb
push
add
lock
mov
pop
push
cmpsb
or
outsl
jl
lock
xorb
jle
and
loope
popf
xor
mov
cmc
mov
adc
adcl
lock
jbe
and
sbb
inc
loopne
lock
push
add
sbb
inc
mull
add
rorb
and
addb
sbb
inc
dec
inc
out
mov
push
jg
or
hlt
jb
je
js
js
xor
call
incl
std
lock
aas
xchg
call
jg
jl
mov
add
pop
repz
mov
cmp
add
aam
out
fcmovnbe
mov
jl
adc
xchg
and
cmp
inc
filds
cmpl
mov
cli
mov
subb
add
scas
adc
xor
pop
and
je
leave
mov
pop
loopne
imul
hlt
push
jl
xor
hlt
sbb
or
aam
ret
movsb
pushl
push
stos
push
pop
insb
rcrl
pop
nop
cli
test
push
xor
cli
mov
in
sbb
mov
jl
mov
add
mov
push
int
insb
inc
repnz
cmp
jo
pop
jb
mov
jmp
mov
jno
xor
jb
test
jmp
mov
ret
push
sbb
sbb
das
jp
xor
icebp
stc
mov
pop
mov
jle
sar
dec
sub
jbe
loopne
mov
dec
sti
dec
sbb
adc
enter
fsubl
lods
add
icebp
inc
fsubl
aad
enter
push
loopne
or
in
outsb
lcall
or
jge
xchg
loope
cmp
andl
je
pop
sbb
decl
je
clc
add
cmp
jp
mov
pop
adcb
adc
hlt
addl
cmpsb
pop
insl
xchg
add
repz
xchg
cmp
scas
xchg
es
add
mov
test
or
jle
mov
cmp
cmp
bound
rcrl
lock
ds
add
jne
dec
mov
sahf
dec
add
push
xor
fildl
out
lock
jl
mov
outsl
faddp
inc
or
test
cltd
fs
je
adc
push
into
shr
scas
ja
into
mov
loop
jmp
push
cs
inc
iret
popa
jl
mov
jnp
adc
mov
les
add
je
inc
lods
mov
mov
jl
fs
sar
adc
add
cmp
mov
inc
loope
or
or
int3
call
jnp
loopne
adc
je
insl
mov
or
cld
lock
addl
outsb
cmp
push
scas
cs
xchg
inc
in
and
shlb
and
adc
push
mov
push
push
inc
clc
sub
mov
jmp
xchg
xor
mov
rclb
dec
cld
stos
fidivs
xor
push
call
orb
dec
ss
insb
xor
cmp
push
es
dec
pop
sbb
incl
push
sub
xchg
and
fisttps
loopne
mov
icebp
imul
std
mov
in
mov
xchg
xchg
lahf
jbe
je
or
outsb
push
test
sbb
in
int3
ss
push
jb
add
jo
xchg
std
pop
or
push
data16
ja
push
add
jnp
test
out
xchg
sti
mov
mov
jl
adc
add
addl
out
add
mov
js
daa
dec
add
int
rcrb
roll
test
test
add
out
ja
dec
in
div
dec
out
je
cmp
stc
pop
push
fwait
jp
cwtl
filds
in
aas
jge
jne
outsl
adc
lea
outsb
dec
jbe
jb
jl
outsb
mov
mov
out
mov
paddd
cli
cld
sbb
or
push
jge
sbb
and
movl
hlt
or
mov
jecxz
add
mov
mov
adc
pop
mov
lea
scas
push
sbb
decl
jb
adc
push
mov
es
jnp
in
stos
out
lea
push
push
das
lea
mov
gs
aad
mov
and
test
out
test
sbb
test
out
lock
pop
out
aaa
or
dec
sarb
aaa
sahf
jmp
popa
addl
jnp
aam
jbe
daa
push
hlt
scas
subl
xor
hlt
mov
push
push
lea
ficoml
fmull
leave
sahf
dec
out
mov
inc
jo
adc
jb
cmp
ja
sti
jmp
testb
jne
sub
push
jae
adc
lea
inc
jb
cli
xorb
dec
sti
punpckhdq
mov
jmp
jp
cmp
in
xor
adc
scas
cmpsb
and
xchg
enter
jne
cmp
ret
jne
jb
mov
loopne
lret
icebp
pop
aaa
or
mov
ja
call
cmc
add
mov
ret
mov
imul
add
mov
outsb
push
add
into
pop
xchg
out
imul
pop
add
pop
test
mov
push
push
ret
cmp
jo
mov
pop
fdivl
imul
fistpl
add
fmull
pop
sbb
sti
mov
insb
inc
ret
call
data16
or
push
lock
call
cs
mull
pop
mov
in
adc
out
ljmp
dec
movsb
fists
addl
cwtl
adc
movsl
outsb
jo
inc
push
cmpsb
call
add
fsubl
fmul
lahf
ja
cmp
add
int3
mov
test
xor
rcr
add
lock
mov
or
and
adc
incb
fldz
mov
outsb
xor
jle
in
fwait
dec
xchg
push
push
lods
repz
loopne
xchg
or
push
nop
je
loopne
fucomi
call
adc
lock
fcomi
testl
pop
push
xchg
add
push
outsb
test
inc
fcomi
sub
jecxz
inc
inc
loopne
addr16
scas
mov
cmp
push
mov
push
and
or
call
add
fdivp
cmpsb
loop
inc
push
cmp
mov
or
fs
jecxz
add
int3
adc
cmp
inc
add
and
push
loopne
xchg
push
or
jl
mov
pop
pop
add
xor
ss
mov
icebp
push
je
inc
or
addb
jne
mov
in
push
shlb
sbb
cmpl
loopne
je,pt
scas
cwtl
jecxz
push
xchg
dec
int
aas
lods
cbtw
es
mov
pop
mov
cmpb
add
mov
dec
jo
push
ds
neg
mov
ret
or
jb
ret
cmp
es
add
cwtl
add
fidivs
mov
or
mov
add
mov
dec
hlt
ret
xorb
pop
xlat
test
call
cmovge
jecxz
hlt
jmp
xchg
xor
inc
std
fsubl
pop
hlt
lcall
fimull
insb
in
push
imul
xchg
sub
data16
data16
pop
mov
adc
stos
inc
int
pushf
mov
xchg
xchg
clc
add
add
gs
mov
cwtl
add
xchg
adc
pop
scas
pop
mov
cmpsl
add
sbb
jmp
mov
or
lea
mov
emms
xor
mov
or
loopne
inc
sbb
jae
mov
outsb
push
pop
ss
ret
ss
mov
sub
jbe
or
add
cmp
mov
push
jg
mov
out
adc
mov
pop
in
pop
xchg
movsl
fucomi
adc
sub
mov
mov
js
rorl
jbe
or
test
les
push
das
sub
pop
dec
xor
pop
loope
in
cs
push
fadds
fmulp
fcom
sub
lea
into
inc
and
testb
bound
enter
lods
data16
call
adc
mov
push
in
push
jo
mov
xor
mov
loopne
or
outsl
mov
push
cmp
je
cmp
je
cmp
je
xor
jmp
mov
jmp
inc
and
pushl
add
std
mov
inc
je
mov
fcmovnbe
jo
notl
scas
into
mov
call
lock
pop
sub
mov
sbb
push
aad
cmp
add
or
sub
add
sub
sub
repz
pop
test
add
cmpsb
and
call
mov
xchg
testb
pop
je
or
add
test
jae
call
xorl
add
shrl
lea
es
adc
fimuls
xchg
fmuls
inc
lock
fidivrs
jle
in
clc
out
mov
inc
add
mov
cmp
cs
fisubs
or
mov
lea
xor
lock
in
mov
test
scas
jbe
xor
call
scas
call
out
jmp
dec
rcrb
or
mov
sbb
cs
mov
jbe
xchg
push
int3
test
ljmp
dec
cmp
clc
decb
test
clc
js
jl
pop
test
vmwrite
pop
outsl
mov
pop
mov
fdiv
dec
ss
js
shll
mov
cmp
mov
sbb
movsl
addl
add
rcll
sbb
aad
mov
xor
rorb
jb
jle
dec
add
dec
scas
sub
imul
sahf
mov
xor
inc
out
push
mov
jl
and
div
mov
or
sub
push
idivb
add
jmp
testb
sbb
dec
push
popa
push
xchg
int3
xor
sub
and
adc
xchg
loope
mov
mov
mov
jmp
or
cmp
sbb
fsubl
add
jbe
aad
add
lea
jg
es
movb
xchg
mov
stc
aam
add
std
and
jb,pt
adc
add
mov
mov
mov
mov
sub
cmpsl
call
push
jl
stos
adc
push
cmp
lcall
test
adc
stos
add
mov
aam
cmp
hlt
push
xchg
add
aad
mov
out
cs
inc
dec
mov
in
cmpl
jae
xchg
and
adc
dec
pop
mov
cmpb
push
jg
mov
inc
or
pusha
es
push
popf
sub
lods
hlt
pop
test
das
add
ds
pushl
sub
scas
push
jbe
insl
pop
cmp
jne
push
lea
outsb
test
mov
call
sti
stos
les
test
mov
inc
inc
loopne
loopne
inc
rorb
add
lcall
mov
data16
push
push
push
clc
sbb
testb
pusha
into
xchg
es
incl
mov
or
ja
or
sub
outsl
xor
push
pop
and
lock
sbb
fs
lcall
call
into
into
push
call
pop
movsb
movl
sbb
rclb
cmp
scas
pop
push
iret
add
add
sbbb
dec
lods
cmp
test
sbb
push
sbb
sub
call
push
nop
outsb
mov
lea
cmc
mov
fidivl
std
or
push
cli
iret
jb
ja
ja
sbb
mov
cmp
aaa
jbe
testb
dec
test
cli
xor
lcall
or
jmp
pop
ja
cld
mov
popa
lds
outsb
clc
dec
jae
stos
push
cli
adc
sbb
push
cmp
jmp
pop
sti
sub
add
dec
flds
sub
test
push
test
jle
push
in
push
pop
jb
jecxz
addl
sub
sbb
push
mov
sub
mov
jne
jb
add
lahf
jecxz
jo
pusha
imul
rorl
add
nop
jne
outsb
add
add
push
add
sbb
ds
jbe
sahf
fiadds
xor
clc
sbb
mov
push
pop
xlat
aaa
fcoml
sarb
add
xchg
push
dec
sbb
cmp
jl
or
in
mov
decl
add
insb
enter
int3
mov
pushl
adc
jmp
arpl
repnz
decl
mov
push
ds
je
pop
mov
bnd
je
cmp
lea
cmp
ja
data16
adc
jne
sub
inc
cmp
jae
dec
push
incb
sub
mov
sub
aaa
je
jge
dec
push
add
insb
jae
inc
mov
dec
mov
inc
or
xor
dec
xor
inc
add
add
testl
fsubs
hlt
outsb
lock
arpl
clc
xchg
outsb
cmp
xchg
push
cwtl
test
add
pop
sbb
add
stc
jne
sub
mov
add
cmp
aaa
cld
xchg
jb
cmp
mov
ja
add
add
mov
enter
add
js
test
mov
add
add
shlb
sti
and
mov
add
push
test
push
pop
push
out
add
mov
add
enter
in
in
fwait
bound
mov
add
inc
xchg
jbe
adc
in
jg
add
pop
add
mov
jo
jle
mov
cmpl
adcb
insb
cmp
xchg
xchg
sbb
addb
dec
fcompl
or
dec
cmp
call
sbb
push
adc
jl
add
loop
inc
cmp
cmpb
pop
or
inc
mov
sarb
mov
fdiv
movsl
andb
inc
orb
push
call
cmp
lock
subb
pop
mov
cld
jge
xor
ja
je
inc
push
push
mov
call
xor
roll
add
push
adc
inc
out
xorl
or
and
pop
add
pop
cld
addl
orb
cmc
std
orl
cmpb
inc
call
andb
adc
add
js
push
in
add
mov
mull
sbb
addl
call
leave
or
dec
fadds
sar
mov
mov
push
mov
cmpsb
cmpsb
in
clc
mov
js
add
in
jne
and
call
decb
lahf
clc
cmpsl
cli
push
test
incl
inc
mov
push
test
xchg
je
add
jl
or
call
imul
ficoml
out
sbb
mov
pop
jge
jmp
call
mov
mov
sub
mov
push
mov
sarb
jbe
andb
add
add
xchg
loopne
adc
or
out
aaa
cmp
push
push
mov
decl
pusha
bound
jbe
dec
ret
call
pop
adc
sub
lea
mov
push
push
push
addl
mov
jmp
push
add
lcall
ret
mov
mov
test
add
test
add
mov
mov
mov
mov
ffreep
cmp
cmpb
cmp
mov
add
push
scas
call
sub
add
adc
shlb
add
jge
mov
sub
add
fwait
xchg
jo
or
push
mov
inc
call
sub
cmp
or
push
mov
rcrb
and
jbe
sub
sbb
jge
push
sahf
and
add
or
imul
or
add
popa
jbe
test
or
adc
inc
je
ret
imul
cmp
xor
jbe
call
aad
sbb
aam
xor
adc
repz
sbb
into
push
jl
shll
jmp
movsb
add
std
in
cmpsb
or
add
push
sbb
pushl
jb
or
sbb
rcrb
jnp
hlt
add
xchg
push
cmp
js
mov
outsb
mov
outsb
mov
mov
add
mov
mov
push
shlb
mov
mov
faddp
pop
and
sbb
xchg
pusha
pop
adc
imul
pusha
xchg
dec
push
push
inc
pusha
add
inc
add
inc
pushf
push
cld
pop
sbb
add
add
jge
inc
cmpb
push
fwait
jne
fsubp
dec
add
leave
cmp
test
lods
test
sub
sahf
mov
ret
repnz
sbb
ret
sub
pusha
bound
pop
jge
call
xchg
xor
pusha
mov
filds
or
pop
xchg
dec
cmpsl
call
aaa
jmp
pop
cmp
cmpsl
and
add
mov
dec
push
bound
out
out
xor
mov
push
inc
repz
push
jo
mov
sub
and
lds
pop
or
and
inc
jo
ret
ds
add
jl
outsl
je
addl
ficoms
cmpsb
lock
loopne
je
out
push
mov
jno
add
ret
mov
lods
bound
test
jp
jle
jg
out
bound
jo
xor
loopne
sti
ljmp
dec
pusha
pop
pusha
addr16
or
or
push
push
pusha
xor
jge
cmp
xorb
adc
or
and
je
mov
loopne
add
cld
fistpl
xor
loopne
pusha
push
sbb
inc
sbb
cmpsb
adc
and
subb
gs
push
loop
and
sbb
pop
fsubl
popa
aas
out
fdivrl
aas
pop
mov
or
outsb
adc
xor
add
sub
pop
sbb
lea
sub
jp
inc
inc
mov
push
sbb
pop
push
push
daa
sub
inc
cld
push
lret
call
loopne
and
push
cld
jg
in
pop
loopne
jp
js
xor
cmp
sub
mov
sti
mov
adc
adc
out
jne
push
dec
dec
mov
and
inc
clc
jb
jl
sti
pop
and
jbe
pusha
pavgb
fisttps
popa
sub
inc
or
push
test
pop
xchg
dec
adc
sti
jne
add
movsb
push
push
mov
int3
fwait
push
cld
add
idiv
jno
jo
sbb
mov
hlt
pusha
mov
push
test
push
push
jae
adc
push
in
mov
add
mov
jno
inc
sub
sbb
rclb
dec
add
int
push
or
or
scas
or
jg
cmp
lea
add
into
pop
jae
in
mov
inc
pusha
add
out
jne
decb
add
push
xchg
mov
dec
arpl
incb
add
je
mov
mov
xor
push
adc
les
cmp
push
push
pcmpeqb
sub
adc
cmc
out
push
xchg
rolb
jb
in
mov
gs
or
or
popa
enter
adc
int
fldt
mov
push
xchg
pop
cld
decb
call
push
push
or
push
popa
jno
jle
das
mov
mov
add
jno
add
push
imul
ljmp
nop
push
sbb
xchg
xlat
rorb
adc
jns
repnz
adc
and
push
lods
pushf
cmpsb
inc
xor
notb
dec
jl
adc
mov
mov
add
push
xor
dec
xchg
mov
movsb
mov
xor
xor
imul
loop
clc
test
ljmp
test
ljmp
mov
lock
jb
mov
mov
movl
roll
subb
lock
out
cli
mov
fwait
sbb
and
or
vmwrite
cmp
or
std
jg
popf
mov
sarb
clc
jbe
je
xor
repz
mov
xchg
cmp
clc
out
push
cld
mov
jecxz
fildl
sub
xor
dec
xor
ret
ret
xor
dec
xor
aam
mov
mov
push
pop
pop
jecxz
mov
inc
mov
add
std
aaa
jl
adc
pop
cmp
xor
jne
incl
aaa
mov
jo
mov
sbb
in
jne
scas
push
add
mov
add
push
mov
inc
orb
sub
inc
lea
cmp
mov
jne
jmp
pop
mov
loopne
mov
pop
cmp
mov
xchg
incl
xor
pop
dec
jb
sti
add
adc
mov
stos
nop
ljmp
adc
adc
mov
les
sbb
and
and
jo
sbb
popf
stos
hlt
call
pop
add
cld
inc
nop
or
push
jb
pop
and
das
push
rcr
sbb
nop
mov
jne
cmpsb
xchg
xor
or
inc
pop
cmpb
and
lea
clc
mov
inc
xor
pop
movl
pop
dec
dec
jp
icebp
sbb
add
leave
cmp
out
cmp
push
push
std
orb
addl
fcomip
dec
mov
test
adc
push
outsb
or
push
call
divb
jg
fs
cld
sub
cmpb
mov
leave
jmp
lea
jnp
mov
jg
jne
mov
adc
cli
bound
cmp
mov
dec
mov
rcrb
stos
mov
je
xor
jmp
push
loop
add
divl
data16
cmpb
cmc
cmpb
adc
push
push
inc
pushl
lret
add
jb
in
clc
adcl
mov
testl
dec
push
adc
mov
mov
je
push
mov
adc
ss
xchg
add
pop
data16
mov
mov
dec
add
mov
cltd
sarl
or
mov
sbb
sbb
push
mov
addb
out
pushl
push
cmp
rolb
mov
mov
cld
lea
add
scas
call
ret
outsl
or
imul
sub
jo
jne
subb
mov
aas
fs
or
incl
je
jl
add
rclb
add
add
jno
and
push
mov
ror
adc
insb
add
mov
add
mov
jo
dec
add
stos
adc
pop
fistl
bound
mov
dec
jmp
call
clc
add
pop
pop
scas
mov
call
sbb
test
sbb
mov
scas
adc
adc
add
sbbb
add
push
inc
or
and
jmp
aam
jl
inc
clc
mov
insb
call
mov
push
test
jo
push
xchg
pop
dec
aaa
call
or
nop
mov
addl
add
lea
pop
jmp
and
sbbb
in
xchg
rcrl
fcmovnb
pop
lock
decl
mov
sub
call
mov
mov
jg
icebp
inc
push
lods
add
xor
jne
lea
mov
icebp
adc
sub
jo
pop
in
jp
add
pop
test
stos
push
pop
dec
push
push
mov
es
mov
dec
decl
mov
mov
push
jbe
and
decl
mov
mov
fldcw
xor
adc
dec
and
sbb
xor
icebp
inc
call
and
mov
outsl
push
cmpsb
sub
xchg
add
call
sub
pop
push
xor
mov
fistpl
push
test
pushl
cld
xor
arpl
sbb
and
dec
xchg
inc
push
push
adc
sbb
inc
and
or
cwtl
jb
dec
stos
sub
ljmp
adc
push
push
icebp
add
pop
sub
paddb
adc
xchg
adc
pusha
lods
js
stos
mov
jnp
sbb
pop
add
call
aad
das
pop
mov
stos
jp
das
shl
jl
sub
or
rclb
jecxz
cld
mov
icebp
cmp
mov
ljmp
xorb
cmp
add
movaps
mov
sbb
pop
mov
inc
out
addl
testb
scas
jb
jo
push
pop
hlt
mov
andb
lock
cmpsb
dec
ret
sub
sub
popa
add
push
aaa
mov
xchg
clc
inc
cmp
popf
xchg
adc
sbbb
pop
jnp
jl
lods
shr
ja
mov
je
add
add
push
sub
pop
push
mov
add
shl
and
scas
push
stos
mov
sub
ss
cmp
icebp
mov
xor
in
cmp
mov
lock
aam
add
add
sub
pop
int
adc
sbb
test
sarb
aad
jmp
push
jp
mov
daa
mov
xchg
jne
mov
and
jg
add
call
add
jb
add
dec
adc
mov
adc
mov
out
mov
movb
add
sbb
js
xchg
fs
mov
jne
xor
inc
push
cltd
xor
clc
filds
jmp
mov
pop
stos
cltd
push
adc
sar
xor
sbb
adc
pusha
add
test
jbe
push
add
add
popf
cmpsb
je
jecxz
pushl
std
add
mov
sti
call
shlb
not
pusha
xor
or
scas
icebp
int
out
add
or
mov
je
aas
lods
mov
xor
mov
or
add
add
cmp
fsubs
jp
cmp
ds
call
cmp
push
test
mov
push
loopne
popa
lods
test
pop
add
in
add
dec
mov
jne
cmpsl
mov
gs
dec
out
aam
push
add
add
mov
mov
mov
pushf
lea
test
xor
xor
ret
call
jb
dec
cmp
push
sbb
mov
fdivrl
cli
mov
orb
movsb
call
jmp
xor
mov
sub
pusha
cmp
call
adc
add
shrb
xorl
aam
xor
into
loopne
mov
sbb
dec
add
mov
push
lods
xchg
and
scas
dec
test
mov
inc
loope
add
incl
pop
mov
add
inc
add
mov
add
push
mov
pop
inc
cld
aaa
or
lea
push
add
push
inc
or
sar
cmp
add
add
push
je
inc
cmpb
pop
xor
stos
or
sbb
xchg
sub
mov
inc
mov
add
adc
dec
ja
frstor
loop
ret
cmp
mov
mov
add
mov
insb
push
push
sub
push
sbb
sti
inc
sub
adc
cmpsb
stc
inc
jmp
push
pushf
push
add
push
push
call
jno
clc
aas
ficomps
add
fsubrs
xorb
pop
push
add
adc
aad
inc
test
scas
lret
push
sbb
xor
pop
int
fs
filds
sub
or
jne
dec
andl
orl
aad
mov
jne
push
das
cmp
outsl
pop
mov
adc
sbb
cli
add
or
push
fwait
or
mov
je
testl
inc
xor
add
jb
mov
cmp
xlat
inc
mov
je
ja
lock
inc
and
lea
fiadds
movsb
add
leave
daa
jnp
aam
mov
repz
mov
add
hlt
aam
outsb
test
mov
inc
sbb
js
push
adc
mov
je
call
cmp
mov
lock
cmp
jbe
popa
cld
andb
push
orb
mov
sub
arpl
into
nop
cmp
add
add
in
mov
or
sbb
iret
push
andl
jb
add
adc
sbb
insb
int3
shll
mov
in
mov
fildll
mov
pop
notl
or
repnz
std
sbb
inc
outsl
rclb
mov
push
icebp
dec
sub
inc
push
cmp
mov
sbb
mov
call
imul
test
gs
je
xor
jmp
jnp
fadd
rclb
add
incl
inc
bnd
or
inc
std
cmp
je
adc
stos
inc
cld
mov
cmp
shrl
xorl
out
inc
mov
in
rolb
ror
cwtl
adc
mov
xor
testl
adc
or
xadd
mov
jmp
pop
aaa
lods
call
fcoms
arpl
mov
jp
or
jbe
jl
addb
jbe
dec
push
xor
pop
ret
mov
loop
jne
sub
fwait
clc
adc
add
xor
cmpsb
out
fdivs
push
lea
add
dec
adc
inc
lods
addb
rolb
shl
add
test
jg
xor
xchg
sti
add
mov
roll
lock
inc
adc
dec
mov
mov
test
rcl
clc
jmp
sub
xchg
or
add
add
aad
xlat
mov
test
leave
mov
jg
sub
fsubs
ljmp
aad
fildll
jmp
cmp
sbbb
cmc
lods
fnstenv
out
icebp
call
inc
je
adc
jge
test
rclb
test
mov
leave
nop
aaa
pusha
divps
cs
jmp
or
pop
cmp
cmpsb
pop
fnsave
lea
mov
jo
roll
pop
mov
loop
ret
sub
loopne
dec
add
out
pusha
or
mov
or
push
pop
pop
in
enter
xlat
jae
subb
incl
cli
loopne
mov
into
sbb
mov
xchg
pop
jg
push
sbb
lods
add
out
cmp
and
xchg
shrb
pop
cld
mov
loopne
rorb
lcall
call
aas
cmp
bound
inc
lretw
push
movsl
fnstcw
mov
call
sti
sti
mov
inc
and
adc
loopne
je
and
rcrl
or
mov
xchg
add
inc
mov
testb
jne
adc
int3
fs
pop
gs
adc
loopne
loope,pt
mov
hlt
enter
mov
aaa
call
push
clc
xchg
lea
pusha
jb
or
xchg
xchg
sbb
sti
lea
xor
or
fcomps
in
outsw
add
jmp
jg
mov
sub
into
inc
movsb
rcrb
inc
sbb
xor
inc
in
andb
jle
cld
loopne
add
hlt
outsl
or
or
std
loope
sarl
pop
imul
mov
push
mov
das
pusha
add
xorb
mov
fisubrs
jb,pt
xorl
ret
mov
push
add
jecxz
sub
aas
push
mov
fcomip
jmp
rcl
add
add
or
mov
hlt
jmp
mov
lock
loopne
add
mov
xchg
leave
sbb
add
shl
mov
inc
int3
jo
add
ret
mov
adc
imul
xchg
shlb
add
test
call
lea
mov
ljmp
out
jle
mov
jge
fiaddl
call
and
mov
pop
pusha
jle
mov
adc
sub
mov
jae
shrb
fwait
cmpsb
cmpl
or
in
mov
inc
pop
leave
iret
lea
aaa
int3
add
fwait
movsl
jnp
in
inc
sar
imul
add
aam
inc
add
stos
mov
cld
mov
or
xor
sub
jno
rclb
mov
incl
mov
inc
divb
sub
testb
add
out
mov
cmc
imul
add
testb
add
btl
enter
imul
jl
negb
or
imul
cs
loope
mov
call
pusha
loope
xlat
call
call
scas
push
sub
std
ret
dec
cli
test
loope
add
jg
cmp
pushl
mov
das
call
ja
call
and
call
jb
cmp
adc
ss
or
add
mov
add
outsb
lock
cmpb
hlt
mov
nop
je
je
xor
call
jecxz
adc
imul
or
fdivp
xor
je
test
and
fildl
pop
and
cmp
in
push
mov
imul
pop
call
ss
add
inc
pop
movsb
ret
push
adc
ja
fadds
in
lods
push
xchg
xor
add
xor
add
fwait
sti
fisttps
cmp
sbb
mov
pusha
in
lock
incl
push
lea
sub
mov
jb
fs
mov
pop
push
call
jb
mov
enter
nop
xor
xor
stc
xor
clc
pop
sbb
outsb
cwtl
xor
test
xor
test
ljmp
add
jmp
call
push
jb
enter
mov
mov
push
and
pusha
push
adc
aad
xor
or
inc
stos
enter
inc
pop
popa
cld
jo
fsubr
jle
cli
sbbb
xor
lock
adc
mov
mov
rcrb
push
sub
xchg
addl
gs
mov
sti
jb
add
std
jo
xor
push
xchg
sbb
dec
inc
iret
xor
push
pop
cs
jg
add
cmp
jo
je
data16
cmp
mov
pop
pop
rcr
dec
jl
or
add
iret
mov
and
mov
adc
stos
shlb
in
inc
fcomi
mov
insl
mov
je
sbb
sub
or
stos
cli
sbb
sbb
test
rclb
aaa
mov
subb
psrad
add
add
xor
fiadds
in
mov
add
test
cwtl
inc
mov
push
mov
inc
xorb
push
push
push
pop
loop
outsl
jp
add
pop
xor
xor
push
push
mov
mov
int
call
push
je
les
cmp
inc
pop
push
mov
pushl
sbb
cwtl
test
lock
xor
jge
dec
ret
rolb
mov
add
jo
xchg
jl
pusha
adc
jb
inc
clc
push
test
cs
and
lock
push
mov
push
push
and
add
add
pop
test
and
jne
xchg
cld
xor
call
add
or
xor
add
inc
decl
fwait
pop
inc
cltd
mov
lret
xor
push
jo
lret
xor
inc
xor
cmp
jle
fildll
in
js
inc
in
mov
lea
scas
call
pop
movsl
xor
movsl
xlat
ret
mov
hlt
fstl
mov
lret
ja
out
clc
fbstp
push
lea
int3
addb
lock
or
push
hlt
add
and
mov
lock
add
and
xor
adc
cld
jo
js
xchg
call
int3
cmp
icebp
pop
f2xm1
or
add
loopne
loopne
jo
or
mov
dec
push
xor
lds
mov
and
int3
mov
inc
repz
mov
test
jmp
fmull
lcall
jl
push
mov
pop
jbe
lods
inc
xor
call
lea
ret
lret
adc
push
mov
or
lods
lea
das
jno
nop
push
aaa
xor
sub
pop
add
push
addl
mov
jp
inc
pop
ljmp
ret
addr16
pop
inc
cmp
loopne
push
add
add
sbbb
sbb
outsb
scas
fimull
mov
pop
cmp
add
inc
sub
push
ja
adc
sti
jo
mov
adc
in
xchg
and
mov
out
mov
lret
sub
aad
mov
loopne
jge
loopne
jg
jb
cltd
xor
outsl
cs
dec
mov
roll
test
movsb
insb
and
popf
in
mov
mov
jo
mov
enter
stos
sub
jl
jo
jo
pushf
mov
add
mov
int3
icebp
add
inc
int3
stos
xchg
cwtl
stos
push
xor
imul
sub
xor
add
ret
in
in
mov
scas
add
icebp
lcall
data16
mov
xchg
es
cmp
sub
lea
call
mov
mov
or
clc
loop
and
add
cs
or
daa
push
scas
lea
or
cmp
inc
add
mov
lock
stos
ljmp
scas
stos
in
loope
mov
in
push
jge
shlb
or
jo
je
jg
push
sub
cld
add
pop
sbb
incb
sub
inc
xor
dec
out
sbb
or
insb
mov
fisubrl
mov
xchg
lds
fsubrl
jb
call
jne
mov
or
int3
jnp
cltd
fs
fisttpl
sub
call
inc
testl
fs
or
lock
pop
imul
add
push
jbe
lret
lds
incb
push
mov
inc
sub
aam
cmp
mov
adc
sbbb
pushf
sub
push
lods
inc
clc
cmpsb
scas
cmp
or
dec
or
pop
push
push
cmp
fistps
in
xor
pop
fbld
ss
and
xchg
and
mov
and
adc
mov
push
fdivr
pop
or
pop
loopne
xor
jae
call
int3
mov
cmp
repz
sti
jo
mov
inc
mov
push
icebp
imul
setbe
push
mov
mov
movsb
in
shlb
dec
mov
or
shll
call
dec
pop
clc
or
mov
inc
cmp
mov
add
fbstp
addl
ja
mov
jbe
clc
fisttpl
jge
mov
aaa
ds
sbb
lock
push
inc
out
push
add
jno
ss
or
jno
jbe
int3
inc
xor
shr
sub
sub
push
out
lock
aas
test
out
pop
adcb
call
scas
adc
call
hlt
ljmp
nop
inc
sti
jmp
and
xor
clc
jg
lock
fmul
adc
cmp
je
sbb
int3
ret
mov
je
stos
add
aas
jmp
mov
and
cmpsb
xor
outsb
or
xor
add
adc
mov
mov
jo
adc
adc
in
mov
repnz
cwtl
add
fcoms
aam
or
lock
mov
push
lea
adc
or
push
call
pop
mov
lods
leave
sub
sub
cwtl
test
fs
add
js
add
push
test
adc
xor
push
or
sub
adc
jo
jno
or
pop
adc
add
mov
movsb
sub
and
jno
push
mov
adcl
andl
jnp
mov
lock
inc
or
sbb
cmpsb
xor
cmp
or
mov
je
and
or
push
and
mov
ret
inc
nop
clc
pop
test
xor
ret
inc
pop
or
and
mov
mov
push
push
shrd
adc
call
sahf
lods
push
mov
or
inc
ljmp
pop
jp
jne
jp
cmp
sub
xor
mov
shr
mov
jo
jg
movsb
mov
push
add
sbb
shl
pushl
adcl
jnp
hlt
cmpsb
test
xchg
push
clc
fistl
cmp
add
cmovge
add
xchg
sbb
pop
fwait
ret
js
dec
js
mov
push
mov
pop
or
adc
cmp
mov
mov
hlt
mov
sbbb
or
in
lea
ss
xor
fwait
jo
cmp
or
dec
mov
add
int
popa
roll
aam
inc
imul
fdivr
out
cmp
or
jne
ljmp
or
adc
add
fmuls
push
cmc
rolb
out
cwtl
cmpb
sub
add
inc
mov
addb
lea
ret
sbb
in
push
and
nop
push
mov
xor
leave
mov
xlat
rorb
outsb
ret
sub
fldt
lcall
repz
adc
xor
aam
push
ljmp
sbb
fists
popw
test
mov
lret
add
sub
inc
int3
mov
mov
outsl
sbb
test
jbe
call
and
dec
mov
xor
mov
jno
push
orb
cmp
jle
and
push
call
insl
push
je
jb
bound
popf
fisubl
scas
mov
push
cld
cs
aaa
add
call
xor
ret
insl
xor
pop
pushf
ss
adc
mov
add
xchg
outsb
ret
jp
push
inc
push
clc
ljmp
jp
sub
sub
sarb
pop
push
and
mov
add
call
pop
out
dec
gs
xrelease
into
mov
jecxz
daa
add
push
sbb
sbb
push
and
add
das
xchg
and
lea
mov
int
push
loopne
add
pushf
rcl
jl
cmp
add
scas
push
sub
or
test
roll
call
les
aaa
push
sub
mov
sarb
add
int
out
clc
rolb
adc
push
adc
sbb
ljmp
in
pop
out
addl
fildll
rol
out
jle
push
jne
push
ljmp
push
sub
je
iret
add
pop
dec
push
clc
sarb
shrb
aam
mov
rcll
enter
cmp
push
call
adc
push
jb
aam
xchg
jae
fbstp
sbb
in
ret
rorb
aad
rolb
mov
push
add
or
mov
cmp
scas
sbb
push
incb
mov
aam
sahf
inc
cmp
fisubrl
jecxz
and
test
adc
rol
in
push
cld
fwait
pop
and
jne
call
jo
dec
xchg
mov
clc
mov
insl
clc
call
dec
cmp
aas
call
fs
roll
add
add
xchg
fwait
push
loopne
dec
jo
cmp
mov
inc
sti
jbe
add
or
inc
repz
ljmp
clc
jmp
and
add
mov
test
test
ja
mov
push
push
fdivl
jbe
push
sub
add
or
lock
mov
xchg
add
cld
pusha
mov
inc
cs
call
stos
std
es
ud0
jmp
or
loopne
pop
pop
sarl
mulb
pop
loopne
int3
xor
inc
sbb
or
mov
mov
das
sbb
into
dec
push
scas
lea
scas
pop
scas
mov
adc
adc
dec
or
mov
or
push
add
or
popa
add
lret
or
mov
mov
std
xor
inc
and
ret
inc
add
loopne
js
jle
push
js
cmpl
call
daa
jge
rol
fisttps
or
js
xor
sub
aad
fs
int3
add
pusha
test
xor
jp
adc
jg
jl,pt
cs
lods
pop
push
ret
push
in
scas
rcll
fistl
mov
in
push
or
fwait
in
mov
mov
pop
punpcklbw
je
rclb
test
pop
xchg
cmp
pop
or
xchg
call
sbb
sbb
push
sarb
mov
clc
jmp
fneni(8087
add
adc
out
push
cmp
add
add
call
ror
pop
lock
add
loopne
push
push
push
je
jno
mov
mov
add
sbb
jne
push
lea
push
cmpl
in
rcl
dec
mov
in
add
scas
adc
ss
jg
jbe
adc
idiv
subl
pop
pop
loopne
mov
inc
cmpl
and
push
mov
push
and
push
cmp
hlt
mov
loop
popa
mov
xchg
enter
test
fists
push
adc
inc
sbb
push
inc
enter
cmp
mov
or
pop
insb
loopne
inc
sti
mov
andb
add
mov
mov
aam
shr
cmp
mov
popa
xchg
mov
pusha
push
repnz
adc
out
mov
mov
dec
stc
popa
es
push
add
mov
cmp
dec
push
lods
call
call
xchg
pop
jbe
clc
loop
aad
xchg
sbb
mov
add
push
fimull
adc
loop
xorb
call
in
loope
fsub
lahf
pop
in
call
pop
lock
push
scas
inc
or
loopne
sbb
lock
das
xchg
incb
std
cld
popa
adc
add
jmp
mov
cwtl
test
mov
fisttpl
xor
push
pushl
mov
out
jecxz
es
inc
sub
incl
mov
bound
add
mov
jl,pn
adc
call
jmp
lcall
push
inc
pushf
push
scas
call
push
popa
sbb
call
inc
mov
mov
sbb
js
pop
and
outsl
mov
add
loopne
test
popa
xchg
cmpb
in
andb
jbe
push
push
add
add
movsb
enter
popa
in
sbb
or
xorb
cld
into
call
xchg
pusha
sbb
fldenv
mov
fs
pushl
push
loopne
lea
rolb
sahf
pop
cltd
and
jge
mov
or
orl
in
mov
sub
out
xchg
sbb
add
je
mov
testb
jno
lret
repnz
imul
sbb
or
mov
dec
cmp
mov
mov
adc
sbbb
je
call
fdivr
scas
mov
add
mov
lock
mov
mov
test
fistpll
jno
xchg
adc
sbb
adc
inc
pop
inc
sbb
xor
dec
sbb
jns
mov
nop
popa
std
fldl
add
arpl
sbb
mov
jne
dec
add
clc
subl
subb
dec
in
mov
sub
hlt
jo
mov
fdivs
or
mov
adc
pop
dec
mov
fisttps
mov
fbld
insb
pop
inc
hlt
add
xchg
push
xor
and
jg
jo
and
mov
lock
call
mov
fs
jg
dec
xchg
cmp
jne
cmp
sahf
gs
popa
test
cli
call
xchg
adc
mov
adc
cmpsb
or
xchg
dec
adc
lods
push
cmpsb
inc
dec
js
jbe
jg
mov
inc
lock
or
jo
jbe
js
adc
mov
add
adc
packssdw
dec
jg
xor
mov
adc
es
mov
xchg
mov
xchg
jae
mov
cmp
cmp
push
jg
test
sub
push
mov
adc
pushl
mov
sahf
and
xor
and
push
ret
je
push
stos
push
shlb
scas
cwtl
js
mov
add
movsb
sub
xor
push
push
lock
sahf
push
mov
jo
mov
push
inc
pop
stos
mov
mov
leave
jmp
dec
cmp
clc
mov
outsl
stos
outsl
add
hlt
fdivr
adc
cmpsb
pop
jmp
stc
cmp
dec
inc
add
fs
clc
adc
mov
pop
cwtl
mov
lcall
dec
fwait
xor
inc
jecxz
add
loop
jnp
lahf
lock
shlb
jle
push
fstps
mov
push
cmp
adc
jg
push
sub
fdivrs
add
adc
xchg
add
fwait
mov
cmp
add
mov
pop
sbb
or
test
or
or
stc
ljmp
or
pop
push
pop
pop
je
pop
ret
xor
mov
daa
stos
jmp
aam
cmp
adc
inc
or
pushl
mov
es
dec
add
icebp
inc
jge
mov
adc
loop
sti
je
push
xor
cmp
loop
push
xor
dec
push
jo
pop
loope
jle
inc
mov
ljmp
divb
xor
pop
jbe
pop
pop
testb
lock
mov
sub
cmp
add
jno
iret
aam
popa
jo
lock
mov
add
mov
add
das
add
xor
sbb
movsl
cmpsb
adc
pop
mov
xlat
fsubp
les
cmp
sub
cmp
dec
mov
inc
data16
xchg
xorb
xor
inc
and
test
mov
aaa
mov
rcrb
sub
mov
adc
ret
xor
jmp
adc
xchg
stos
jecxz
push
call
fsubr
pop
test
add
adc
xchg
call
popl
jge
add
stos
sbbl
fbld
push
negb
cld
js
aas
add
cmpsb
jl
clc
pop
ret
pop
repz
add
adc
mov
mov
xor
pop
dec
mov
or
lret
outsb
push
mov
mov
test
inc
inc
sti
fisttps
jo
mov
or
add
mov
mov
loopne
or
cld
add
iret
jbe
mov
jmp
insb
add
dec
test
add
mov
out
push
xor
push
imul
test
js
jmp
cmp
inc
jo
dec
call
cld
insl
rcr
lret
mov
jo
rcrb
push
adc
pop
xchg
cmc
aaa
adc
jns
pushf
loopne
mov
pop
dec
cmp
add
mov
push
or
or
fsubs
push
fmuls
jl
fistpl
pop
call
movl
inc
add
inc
std
mov
mov
and
pop
cmpsl
call
pusha
mov
inc
jo
jmp
call
pop
aaa
jl
adc
add
lock
pop
insl
insl
ja
sti
je
adc
or
ljmp
jo
loope
xor
adc
lock
jno
push
add
mov
mov
fcoml
mov
call
jl
cmp
je
and
clc
adc
loop
add
pop
repz
sbb
out
sub
mov
dec
mov
adc
lock
cli
and
jle
lea
xchg
mov
mov
decl
filds
stos
andl
ds
pop
and
cld
xor
push
fildll
stos
jge
push
mov
jo
add
icebp
fbld
lock
in
mov
mov
mov
jmp
imul
jle
call
xor
sub
xlat
cmp
or
inc
testb
lret
sti
pop
xchg
out
pusha
xchg
imul
jb
std
fbld
jb
mov
jg
loop
ss
pop
mov
out
stos
test
mov
push
mov
inc
cmp
clc
ret
inc
xor
cmp
push
pop
add
clc
push
inc
fldl
data16
sti
push
int3
in
sub
ss
test
je
in
push
sub
adc
add
adc
mov
jg
mov
imul
adc
test
in
imul
lock
or
inc
jne
fwait
jmp
xorl
test
sbb
adc
fidivs
pop
ret
xor
fwait
test
pop
ret
idivb
stc
mov
cli
das
ds
push
pop
imul
das
rcrb
xor
push
add
popf
add
jp
shr
jmp
inc
push
push
pop
sbb
notb
and
adc
fnsave
je
into
dec
decl
test
xor
test
inc
ficomps
jo
push
xchg
rorb
pop
or
movsb
cmp
xchg
push
lcall
dec
pop
ret
add
inc
push
push
xchg
fsubrs
js
rclb
mov
add
jnp
lcall
jp
pop
loopne
jne
pop
add
test
lcall
sbb
outsl
push
bound
inc
adc
popf
jb
shlb
mov
xor
inc
mov
xor
ljmp
push
inc
out
xor
rolb
es
push
stos
inc
inc
call
sbb
sar
pop
sub
mov
pop
mov
popa
das
add
and
dec
add
stos
mov
inc
cmp
cmp
mov
jmp
dec
jmp
xor
mov
push
out
push
pop
ja
or
nopl
mov
lea
pop
faddl
mov
orb
inc
jmp
movb
mov
mov
dec
out
mov
xchg
add
insb
fildll
mov
push
dec
add
xor
and
icebp
ljmp
aaa
jno
sar
ljmp
jo
adc
leave
loope
roll
add
aad
scas
mov
push
clc
cmp
pop
scas
int3
leave
fdivp
xchg
inc
decb
inc
cmp
movsb
sti
push
je
mov
call
mov
inc
push
adc
fidivrl
pop
add
cmp
cmovns
movsl
adc
cmp
scas
cld
inc
pop
push
aad
mov
filds
enter
jmp
dec
pushf
add
subl
push
cmp
mov
inc
pop
mov
adc
loope
inc
mov
in
nop
roll
xor
inc
sbb
inc
dec
jmp
xchg
cld
add
rclb
cmp
adc
jmp
shlb
dec
add
les
outsb
cmpsb
rorb
inc
pop
add
incl
les
rolb
sub
shlb
loopne
dec
xor
int3
cld
outsb
jmp
fsubrs
mov
dec
mov
arpl
push
mov
or
call
jge
aas
push
dec
push
pop
push
loope
fists
xor
push
add
rclb
pop
cmpsb
repnz
jmp
mov
rolb
add
add
pop
dec
or
cmp
cmp
inc
mov
lods
push
pop
cmp
call
push
loop
daa
testb
cmpb
test
jp
shll
test
popa
aaa
or
mov
mov
incl
data16
add
mov
mov
mov
mov
je
mov
les
fdiv
cmpsl
ss
incl
ret
std
add
fistps
mov
movb
adc
hlt
addr16
push
sbb
pop
sub
rorb
pop
jmp
adc
add
loopne
jbe
sbb
cli
stos
pop
cld
iret
ret
xchg
dec
outsb
jns
inc
rol
push
int3
aas
loop
or
push
mov
mov
in
dec
mov
je
xorl
loopne
push
push
xor
mov
mov
out
fdivrs
rolb
cmp
call
je
shl
mov
jl
push
and
leave
mov
sar
test
mov
cmp
punpcklbw
or
jecxz
push
pop
cli
jbe
or
pop
and
mull
mov
incb
loopne
dec
pusha
sub
cli
push
js
pop
pop
loopne
and
pusha
pop
das
add
pop
and
aaa
das
add
outsb
adc
mov
outsb
decl
inc
sub
pusha
cmp
int3
jp
loopne
or
bound
ljmp
mov
lea
add
jp
gs
cmp
js
xchg
push
add
inc
loope
loopne
jnp
popa
inc
add
add
loope
add
test
repnz
loopne
xchg
mov
cmp
test
sbb
cmp
mov
push
call
inc
std
jl
and
loopne
xor
js
add
mov
xor
add
push
mov
fildl
xor
inc
jl
or
inc
pusha
add
flds
popa
push
out
push
stos
je
in
js
bound
add
jne
pusha
sbb
das
nop
pop
xor
popa
xchg
call
dec
mov
and
pop
cld
dec
aam
adc
push
fsub
pop
mov
mov
fcomi
call
fsubs
jo
jns
or
add
jp
jle
pop
jo
insl
push
pop
popa
add
and
mov
jp
xor
and
sbb
pop
adc
in
fs
jle
pusha
pop
mov
jl
lret
popa
das
fdivs
jno
add
stos
pusha
adc
clc
jp
in
xor
shl
incl
loope
loopne
imul
pop
jbe
lods
cmpb
push
sbb
xor
pop
adc
addl
addr16
test
std
sub
pop
arpl
push
inc
js
movsl
jg
pusha
mov
cld
or
hlt
inc
dec
xorb
cli
enter
inc
cmp
jle
push
pop
fs
pushl
mov
push
pusha
and
subb
add
pusha
xchg
lock
push
push
in
sub
mov
or
mov
pop
cmp
hlt
xor
mov
decl
jb
mov
rcll
hlt
and
jg
add
lea
push
scas
push
jl
jne
xor
fs
in
sub
jmp
mov
xchg
ror
testb
jb
popa
jb
data16
inc
pop
mov
add
jbe
lock
sbb
pop
call
and
loope
mov
xor
jmp
loopne
xor
shlb
jmp
addl
outsb
add
add
xchg
cmpb
ss
inc
mov
add
adc
mov
sbb
push
loopne
or
pop
add
std
cmpl
dec
push
and
push
shrl
push
in
jmp
test
cs
shl
outsl
or
pusha
add
loopne
outsl
cli
pop
inc
mov
adc
or
mov
add
faddl
xchg
incb
ret
or
push
mov
and
fdivrs
jge
fimuls
xchg
aas
dec
and
movsb
or
test
adc
sub
push
and
mov
lea
sub
mov
shlb
add
outsb
mov
das
or
add
cwtl
addl
pop
rorb
out
adc
cld
test
mov
mov
in
inc
fwait
jne
cmc
loopne
ljmp
mov
add
outsl
scas
jp
mov
loop
repz
icebp
adc
dec
mov
pop
cld
ja
mov
jo
add
add
push
roll
in
add
sarl
add
mov
lret
jo
inc
adc
xor
cli
or
jne
jo
lea
scas
lea
scas
call
add
std
push
cld
jb
add
push
pop
add
stos
mov
idiv
dec
aam
xchg
mov
cld
xor
mov
repnz
sbb
xor
sbb
int3
leave
nop
mov
xchg
jno
add
mov
pop
and
xchg
lods
cmp
sbb
push
add
push
dec
incl
adc
adc
mov
lock
push
fsubp
call
jmp
mov
mov
stos
pop
lock
test
pusha
dec
jmp
push
add
xor
mov
pop
inc
loop
push
rclb
bnd
mov
add
adc
sti
ds
aam
mov
lock
sbbb
mov
inc
js
lock
pop
clc
cmc
dec
push
test
lock
push
pop
inc
jo
scas
shlb
adc
mov
fldt
je
push
or
loopne
enter
lods
push
xor
inc
dec
jbe
add
sti
idiv
mov
and
call
sub
mov
inc
pop
inc
sbb
decl
mov
add
jmp
je
call
mov
jo
repnz
pushl
test
inc
dec
icebp
fcoms
pop
shlb
pop
outsb
jne
lock
das
pop
lock
pop
inc
data16
jo
jne
imul
mov
daa
call
xchg
fdiv
mov
mov
mov
aas
xor
loopne
scas
push
mov
mov
or
push
icebp
add
jmp
add
or
xchg
in
lahf
jl
test
jb
testb
and
sbb
in
or
push
adc
xor
fdivs
or
pop
shlb
add
jmp
out
and
inc
jg
clc
jo
out
push
or
cmpsb
mov
mov
cmc
push
or
stos
addl
jo
ljmp
xor
call
or
push
push
jb
push
fcomip
sub
je
sti
and
sbb
xor
push
loopne
add
cmpsb
lock
je
mov
cmp
mov
pop
sti
mov
pusha
jne
jmp
fbstp
mov
xor
jg
inc
rcll
roll
loope,pt
add
lods
fisttps
or
loop
dec
or
cmp
sbb
js
rolb
mov
lock
stos
scas
pop
call
js
xchg
jne
mov
jnp
int3
and
dec
add
or
fbstp
jo
repnz
adc
jb
test
rolb
jne
pop
out
por
addl
pop
shlb
les
repz
mov
sbb
add
jg
out
push
clc
jg
lcall
mov
aas
repz
cmp
je
jo
movsl
mov
jne
loopne
mov
xchg
add
pop
mov
jb
test
movsb
in
aam
mov
jl
das
movsb
jmp
call
pop
outsl
lcall
in
push
movsl
push
jge
rcrl
pop
fidivs
jb
or
jne
les
inc
mov
lock
sub
mov
das
or
pop
or
pop
popf
adc
insb
xor
jbe
adc
testl
push
mov
cltd
xor
cmp
es
int3
test
std
push
push
test
not
test
out
test
jo
and
and
pop
je
mov
call
clc
roll
fdivs
or
lock
xor
sti
xor
sbb
adc
aam
xlat
xor
pop
mov
mov
add
stc
xor
mov
inc
xchg
pop
pop
pop
jo
push
test
mulb
adc
xor
push
and
lock
jb
mov
nop
add
pushf
inc
jg
pop
mov
idiv
decl
xor
jne
xchg
aas
jmp
jo
sub
clc
outsl
mov
xor
add
mov
push
test
cltd
ljmp
xor
data16
cwtl
mov
pop
lea
add
jmp
ret
inc
jbe
xor
adc
lods
out
das
push
adc
push
push
shlb
push
clc
push
sub
aam
xor
clc
mov
mov
sti
incb
addl
mov
jbe
inc
pushl
dec
jg
jg
or
lea
lock
or
push
decl
dec
lret
inc
ret
hlt
ja
adc
in
mov
into
push
jmp
sbb
lods
cmp
or
sbb
stos
lcall
add
movzbl
add
test
xchg
push
xchg
push
pop
ja
call
repnz
scas
push
das
mov
add
js
ss
outsl
call
add
add
dec
add
sub
int3
shlb
pop
mov
mov
push
testb
outsb
gs
push
and
insb
sbb
arpl
xor
xor
pop
push
sbb
adc
jp
push
fists
shr
push
or
add
je
inc
fildl
clc
pushl
inc
pop
jae
jno
mov
ljmp
test
mov
incl
adc
loop
push
adc
add
sbb
and
and
insb
cmp
sbb
jo
lret
mov
sbb
jb
push
pop
pop
mov
sub
inc
pop
je
and
call
add
lds
sbb
adc
jb
and
sbb
push
add
jle
xor
daa
and
push
jl
pop
add
mov
jo
xchg
push
xchg
xor
xchg
sub
sarl
add
notb
outsb
sbb
jl
lods
je
xor
sbb
dec
mov
sbb
dec
jle
push
decl
mov
add
sbb
jne
test
jg
rolb
cmp
mov
push
or
fcmovbe
mov
ret
jo
push
jmp
xor
in
fsubrp
xor
or
cld
jg
clc
je
jmp
and
inc
testl
fnstenv
and
push
movsb
scas
je
xchg
loopne
inc
mov
jle
mov
pop
int3
lcall
shlb
jg
mov
mov
cld
cmp
ja
loopne
jg
pop
pusha
add
dec
push
add
add
std
sub
shll
mov
hlt
jmp
xchg
xor
test
lock
incl
insb
adc
dec
insb
nop
pushf
jo
jb
fists
xchg
sub
inc
mov
je
repnz
sub
mov
enter
shll
pop
outsb
in
or
jle
mov
stc
or
es
sbb
mov
fistpl
pop
shlb
nop
les
add
sub
cltd
sub
cs
xchg
jmp
mov
and
lock
cwtl
mov
jge
or
mov
popf
add
mov
mov
sub
movl
dec
or
xchg
cmp
jmp
adc
add
push
fs
lds
hlt
inc
test
jae
adc
hlt
pop
or
pop
jmp
fildl
scas
push
mov
mov
push
adc
pusha
decl
call
pop
push
adc
loopne
fwait
inc
adc
test
adc
push
pop
loop
or
sub
add
sarb
out
jge
test
pop
mov
adc
inc
hlt
dec
subl
push
push
es
add
or
and
cs
push
adc
ret
cli
data16
adc
mov
mov
inc
addb
mov
sub
and
addb
test
addb
lock
jbe
mov
sub
clc
mov
jl
add
or
jecxz
addb
sbb
inc
decl
pop
add
sub
mov
add
sbb
repnz
push
or
cmp
lock
sahf
xchg
or
mov
mov
cmp
andb
daa
mov
shrl
sub
sar
mov
sbb
pop
cmpsb
mov
inc
cmp
add
fdivr
pop
cld
dec
add
mov
cmpb
add
aaa
inc
pop
adc
jl
adc
dec
rorb
add
or
dec
fistps
aam
or
push
invd
jp
add
jb
mov
andb
push
push
ret
gs
inc
lods
lea
inc
out
mov
and
or
pop
dec
mov
imul
and
shlb
push
or
sti
rcrb
adc
cmpb
call
add
push
shlb
hlt
dec
and
push
ljmp
das
cmpb
arpl
jle
dec
or
pop
mov
shl
inc
lret
clc
out
add
pop
insb
js
cld
mov
dec
in
shlb
adc
xor
dec
add
xchg
mov
mov
mov
mov
insb
test
xor
test
loopne
pop
pop
imul
sbb
add
mov
loop
add
ret
sub
sbb
jg
fisttpl
bound
int3
popa
xchg
xor
jmp
loopne
shrb
cmp
inc
add
fwait
das
add
or
shll
int
inc
sti
data16
sub
inc
and
shrl
mov
jo
movl
inc
mov
jmp
xchg
pop
dec
jmp
push
dec
hlt
add
cmp
inc
cmp
mov
xor
mov
je
or
sbb
adc
sarb
pop
orb
shrl
lret
aam
push
fbld
add
shlb
leave
inc
shlb
mov
imul
int3
leave
cmp
lock
mov
dec
sti
nop
test
loop
cmp
mov
mov
pop
loopne
dec
add
pushl
or
add
mov
mov
or
push
call
inc
jle
push
xor
loop
incb
add
loope
and
dec
mov
xor
add
pusha
adcb
mov
mov
dec
dec
jmp
cmp
mov
sbb
jl
incl
and
loopne
push
cmpb
add
scas
add
jo
or
test
js
mov
orb
and
jge
sbb
cmpsb
in
mov
mov
je
jg
sbb
lret
scas
add
adc
jmp
mov
aaa
dec
pop
in
lea
add
fs
add
loopne
ret
loope
test
stos
cmp
xor
sub
sbb
add
adc
test
loopne
leave
ja
bound
add
pusha
push
adc
in
ljmp
js
cmp
and
jmp
cmp
push
xchg
jb
mov
pop
js
or
cmpl
loopne
lcall
xchg
mov
or
popl
jmp
inc
mov
lea
add
jbe
je
sub
pop
xchg
lea
adc
mov
pop
inc
mov
andb
or
push
mov
stos
lods
mov
jle
xchg
sbb
incb
clc
faddl
mov
clc
fildll
mov
jns
lea
jp
add
xchg
outsb
mov
mov
mov
aas
xchg
clc
popl
cmpb
add
loopne
movl
jle
sbbb
mov
lock
cmc
filds
in
mov
push
mov
mov
ds
xorb
jg
je
xor
xchg
add
sub
adc
xchg
decb
popa
icebp
and
pop
mov
pusha
cltd
loopne
cmp
pop
pmullw
out
add
lea
out
and
es
pusha
xor
and
add
pusha
xchg
out
and
addb
icebp
or
mov
add
add
clc
sub
add
push
push
sub
and
int
inc
call
jl
ret
call
clc
loop
inc
inc
mov
sub
je
lret
popa
dec
incb
shll
idiv
inc
daa
loop
fists
sbb
loope
inc
and
mov
push
sbb
push
shr
cmp
and
and
out
stos
clc
push
loop
lea
popa
push
mov
testl
nop
pop
jno
jbe
popa
loop
in
or
sub
mulb
dec
popa
aas
pushl
xchg
lret
outsb
in
push
push
cmp
je
pusha
or
shrl
mov
enter
mov
add
fildll
adc
adc
je
jno
dec
sbb
add
push
or
stc
pop
adc
insl
jo
enter
stc
xor
mov
or
mov
imul
push
sbb
stc
pop
dec
movsb
xor
jp
pop
rorb
and
mov
inc
aaa
jne
incl
icebp
dec
enter
push
add
icebp
and
std
push
adc
testb
mov
dec
add
call
clc
mov
mov
movsb
nop
jbe
mov
jno
ret
aam
outsl
inc
add
push
add
outsl
mov
sub
xor
sbb
test
dec
aam
mov
dec
ljmp
pop
lods
push
jno
adc
sub
dec
mov
add
sti
push
je
movsb
adc
jl
or
mov
lods
xchg
mov
loop
fsubrp
lock
lock
dec
sbb
pop
xor
gs
cld
or
mov
jo
mulb
lock
adc
adc
xor
dec
or
jg
mov
xchg
cmpb
xchg
lock
out
clc
jge
push
and
cmpl
cmp
nop
stos
loope
add
mov
or
add
fnstenv
cmp
lcall
mov
inc
out
xchg
pop
mov
jns
dec
xor
inc
rolb
loop
test
icebp
setge
dec
push
out
shlb
loopne
hlt
enter
add
pop
xor
lds
adc
call
or
inc
cmp
inc
sub
jg
lock
les
jmp
outsb
mov
cmp
cld
stos
test
pop
mov
jmp
testb
sbb
inc
aad
insb
add
fnstenv
push
sbb
je
je
xor
inc
hlt
and
hlt
cmc
add
stos
fimull
ret
jecxz
in
and
adc
hlt
cmp
push
jg
ds
addb
jmp
jl
addb
add
jge
aaa
sub
inc
jle
mov
lock
mov
jle
sbb
pop
pop
and
stos
and
mov
fiadds
mov
mov
jp
sub
xor
or
sub
mov
xchg
add
jne
rcrl
mov
mov
je
jne
add
mov
je
inc
insb
add
mov
push
jmp
adc
mov
cld
push
sbb
mov
ret
mov
jb
and
or
rol
adc
jne
int3
rorb
adc
les
fstpt
mov
sbb
jne
mov
testl
nop
lcall
leave
jmp
dec
lock
adc
leave
push
adc
addb
rorb
mov
movsb
inc
out
inc
test
sbb
cmp
roll
ss
push
into
add
adc
sbb
outsb
lcall
mov
ret
dec
lock
adc
inc
pop
aam
movsb
push
call
pop
loopne
cli
inc
addb
adc
int3
sarb
repnz
inc
clc
sub
cmp
setne
inc
je
mov
test
repz
push
and
push
dec
xor
add
mov
jb
inc
sbb
fs
inc
lock
test
mov
jmp
cmc
or
repz
adc
clc
sub
nop
xor
mov
inc
les
test
or
cmp
andl
ds
fildl
jg
jbe
pop
xor
add
int
mov
pop
jmp
sti
mov
mov
mov
inc
inc
idiv
xor
sbb
adc
push
je
adc
sbb
lock
pop
sub
shlb
dec
add
adc
inc
aam
sub
adc
dec
repnz
cs
inc
adc
jmp
fildll
mov
mov
jmp
mov
sbb
jl
or
adc
sbb
ljmp
cmp
and
cmp
je
ret
push
pop
and
cmp
cli
jo
jle
adcb
pusha
pcmpgtb
mov
fsubrl
ds
addl
ss
xor
inc
push
lds
jo
sbb
add
mov
lods
inc
cli
inc
cmp
ja
mov
andl
or
je
mov
insb
nop
fists
lods
cmp
pop
aad
add
xchg
movq
and
aam
xorb
and
cmc
adc
mov
test
std
jo
jnp
jo
pop
and
adc
loop
xor
push
mov
lods
loope
js
adc
rol
shl
shlb
jbe
fdivs
or
sub
sbb
add
mov
mov
xor
sub
xor
xorl
or
adc
cmp
xlat
shlb
or
add
xchg
or
lock
xchg
inc
cmp
push
xor
pop
push
shl
neg
cmp
pop
mov
add
mov
lock
pop
ljmp
fmuls
xor
adc
xchg
popf
ret
add
jmp
test
insb
int
pop
mov
jl
mov
push
mov
or
pop
jnp
bnd
jb
or
add
jns
icebp
add
mov
pop
lods
push
dec
xor
ret
std
jae
shl
ret
and
cmp
adc
or
ss
cwtl
scas
add
rcll
push
dec
jne
xchg
roll
call
push
inc
hlt
ret
inc
or
dec
jbe
ret
dec
ja
mov
add
mov
xorl
in
jo
adc
stos
lds
jbe
cmp
jne
dec
add
inc
lock
push
clc
add
add
add
mov
loop
hlt
push
dec
hlt
lock
inc
adcb
cld
pop
xor
xor
jo
xor
mov
les
pop
push
dec
inc
jbe
adc
cmp
push
or
pop
mov
push
out
mov
jnp
jo
add
data16
nop
clc
inc
add
mov
cmp
sbb
add
pop
insb
mov
pusha
jmp
xor
out
add
and
jmp
jne,pt
mov
add
lcall
test
mov
jbe
in
hlt
jmp
add
lds
add
mov
cmp
xchg
roll
out
clc
nop
pop
jg
cmpps
jo
push
push
push
enter
shl
or
mov
test
sbb
or
mov
add
ror
mov
jo
or
add
hlt
jmp
add
ds
jbe
sub
pop
mov
jl
or
lock
or
mov
xor
add
mov
stos
outsl
insb
roll
cld
mov
icebp
fisttpl
fstps
mov
adc
cmpb
adc
add
add
add
push
xor
in
xchg
mov
jle
sbb
adc
xor
adc
inc
jbe
hlt
push
xchg
and
fmul
xchg
clc
sub
mov
adc
add
jo
outsl
out
or
jbe
add
xchg
xor
cmp
scas
mov
sbb
or
in
insb
xor
dec
add
mov
add
into
loop
add
stos
dec
mov
xor
add
sbb
adc
pusha
xor
push
orl
adcl
jb
adc
push
add
lea
push
mov
mov
lock
ljmp
adc
in
pop
lock
inc
jmp
add
add
ja
es
pop
add
addb
aas
xchg
pop
pop
inc
negb
inc
stos
xchg
test
test
dec
xor
orb
cld
ret
jecxz
mov
orb
jmp
sub
jo
loopne
mov
in
mov
adc
mov
adcb
inc
dec
inc
cmp
or
add
stc
mov
imul
rorb
jg
jno
ficomps
add
jge
cwtl
adc
rclb
in
and
das
mov
rolb
jecxz
vhaddps
sbb
adc
pop
divl
pusha
imul
mov
rcrb
rclb
jge
aaa
std
push
dec
adc
cld
aam
or
adc
gs
dec
mov
xlat
js
ret
dec
inc
call
jnp
pop
shl
adc
mov
fcmovnbe
cld
stos
add
add
xchg
rorl
data16
stc
jl
fwait
mov
mov
inc
mov
ret
xor
test
sub
std
fisttps
shll
in
sbb
jp
rcll
mov
nop
jl
adc
mov
rolb
inc
insb
outsb
ret
push
sub
test
jl
in
adc
xchg
inc
mov
jbe
cmpsl
mov
cltd
mov
xchg
sbb
xchg
mov
mov
les
pop
loopne
sub
rcll
or
shl
adcb
daa
adc
je
dec
or
lcall
jp
lahf
rorb
add
inc
out
sbb
je
shrb
repz
inc
mov
or
lock
jmp
xchg
cmpsb
push
inc
inc
cmp
cld
adc
sar
dec
movsl
ficomps
rorb
insb
dec
loope
xor
ret
or
push
int3
jp
cld
add
add
fcmovb
cwtl
cmp
lock
adc
mov
shrb
jmp
shrl
mov
and
lds
les
movl
scas
jp
lcall
sbbl
popa
adcb
loopne
subb
and
lock
jbe
dec
leave
adcb
dec
scas
loopne
jg
xor
call
mov
dec
adc
inc
mov
repz
aam
cmp
mov
ret
cld
lret
sub
loop
cmp
imul
add
mov
push
add
js
mul
and
cmp
jle
icebp
and
aad
jnp
addr16
cltd
xor
jg
mov
jge
pusha
or
sbb
pop
or
sbb
fidivrl
mov
inc
sub
ljmp
xor
mov
adc
mull
lock
inc
and
pop
test
into
loopne
mov
test
or
loopne
and
fisttpl
mov
nop
adcb
mov
add
jmp
les
pusha
mov
add
mov
loopne
loopne
nop
ss
ret
or
loopne
sbb
test
cld
sbb
jmp
or
or
and
xor
adc
icebp
jmp
pop
loopne
or
adc
imul
imul
or
sbb
jb
loopne
dec
xor
mov
pop
and
add
or
mov
rcrl
popa
insl
jecxz
push
mov
lahf
push
std
loope
lret
pop
ret
dec
jg
aas
cmpb
pusha
cltd
pop
imul
push
pusha
mov
jmp
inc
int3
in
dec
sub
fwait
add
ja
loopne
xor
aas
es
dec
loop
mov
push
jg
push
push
push
push
or
adc
jne
add
roll
push
subl
lods
mov
mov
in
mov
pusha
add
or
add
sub
inc
cli
jl
and
vmread
adc
and
adc
cld
sub
add
loope
cmp
push
pusha
int3
dec
in
call
jo
jb
dec
jo
add
nop
jbe
mov
push
lret
es
jne
or
inc
arpl
mov
fadds
and
pop
add
dec
ret
aam
jne
cli
dec
jnp
repz
xlat
ds
add
dec
sub
add
mov
or
jg
push
xchg
add
sarb
and
cld
inc
inc
jmp
inc
pusha
bound
mov
pusha
adc
inc
addl
mov
popf
add
jle
and
cli
bound
xchg
repz
jle
pusha
or
arpl
cmp
pop
std
pusha
mov
nop
or
inc
jmp
cmp
popa
jl
xor
push
mov
cmpsl
add
test
add
inc
fsts
mov
loop
lea
loopne
dec
addl
adc
int
fisttps
sarb
mov
lock
add
mov
cli
fbstp
hlt
add
pop
and
xor
add
shlb
add
add
adcl
xchg
jo
mov
sbb
fucompp
arpl
jae
add
and
std
fistps
push
repnz
inc
cmpsb
jle
or
add
inc
cmp
xor
ret
mov
icebp
inc
ret
clc
mov
aaa
inc
add
or
out
inc
push
mov
je
or
mov
jmp
push
mulb
and
and
push
ja
shlb
mov
jg
jnp
mov
xchg
push
popa
dec
push
mov
jo
xor
jl
popa
dec
jmp
jg
add
data16
mov
adc
push
mov
push
icebp
mov
lock
jle
adc
outsb
std
cmp
mov
jl
sub
add
add
add
pop
xchg
pop
jg
pop
jnp
lock
decl
es
xor
xchg
in
push
jno
xchg
or
or
mov
dec
inc
bswap
xchg
mov
add
mov
adc
cmpb
cmp
jae
test
jle
ljmp
sbb
mov
jbe
push
jecxz
add
add
pop
adcb
loop
sbb
fcoms
mov
inc
movl
add
mov
cmp
mov
fbstp
scas
jl
not
sub
mov
aam
cmp
sub
fwait
pushf
mov
xor
icebp
lock
fisttpl
jnp
in
inc
or
jo
es
push
adc
xor
push
icebp
xor
sub
cwtl
jmp
mov
add
jge
je
rcrb
daa
jae
jo
jg
fstpt
jo
or
adc
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
inc
hlt
je
cmp
mov
and
sbb
fildll
sbb
adc
dec
mov
fimuls
loope
dec
mov
in
mov
xor
fs
mov
shr
sub
lock
shlb
jo
adc
adc
repz
mov
mov
inc
push
jl,pt
call
jne
divb
jl
cli
lock
mov
cli
repz
xlat
add
in
jg
mov
or
dec
test
lock
mov
pop
mov
pop
mov
pop
hlt
xor
imulb
les
jmp
repnz
rcrb
xor
mov
mov
jmp
in
negb
fnstenv
jb
push
mov
push
push
mov
call
jp
inc
pop
sahf
jne
fsubrp
mov
jbe
xchg
lea
mov
or
out
add
aad
xor
dec
lock
pushl
adc
das
cld
ret
lock
push
or
cmp
push
pusha
jmp
rclb
add
jae
xor
push
sub
cmp
lods
std
loopne
sbb
pop
sub
jbe
push
outsb
fwait
scas
jns
jnp
cmpsl
sub
push
adc
popf
add
lcall
sub
repnz
add
popf
add
inc
data16
pop
popf
fidivl
jg
mov
jo
call
lods
cmp
jae
add
pop
add
les
adc
jae
xor
pop
icebp
clc
popa
orl
movl
add
and
jmp
xor
push
fdivl
mov
or
rclb
cmp
lea
xlat
mov
mov
lea
icebp
jmp
push
add
mov
xchg
addb
jle
fcmovnbe
or
sub
xor
cmpsl
add
add
pop
andl
jne
insb
imul
cld
lcall
or
xchg
add
ss
mov
jne
mov
and
mov
adc
xchg
push
scas
hlt
xchg
pop
clc
xchg
xor
repz
xorb
mov
mov
inc
stc
cmp
add
cmp
jmp
push
jmp
clc
or
dec
dec
fistpl
incb
decl
std
lock
inc
fisttps
sub
mov
cld
decl
out
jo
or
adc
shr
insb
push
or
or
pop
orl
sahf
loop
cli
sti
mov
pop
xor
or
add
jg
inc
jmp
mov
std
call
mov
add
je
jmp
mov
dec
pop
mov
mov
into
nop
dec
xor
add
jno
jno
mov
rolb
int3
xchg
add
mov
and
gs
rclb
scas
test
add
mov
enter
and
sbb
rclb
mov
xor
les
xor
fistpl
jl
mov
add
loopne
inc
and
push
add
mov
jns
negb
inc
jo
xor
fildll
jo
or
pop
sbb
pop
lock
outsb
or
and
out
push
adc
hlt
and
out
jge
ficoml
or
pop
jo
add
ret
shr
loope
jnp
inc
lds
mov
enter
fs
sbb
jbe
push
and
fcoml
pop
negl
and
ficoms
mov
mov
and
dec
mov
add
dec
gs
adc
sbb
sbbb
loop
and
push
sbb
aas
repz
fistl
pop
jp
or
mov
inc
add
inc
push
jnp
js
jle
jae
push
jecxz
decl
les
and
add
clc
int
pop
dec
mov
lret
add
nop
fiadds
push
xchg
inc
push
add
incb
aaa
xor
xor
loope
je
sub
js
jl
mov
lcall
aam
add
mov
mov
ffree
inc
aam
jnp
jg
call
popf
shrb
bound
stos
cmp
pop
hlt
pop
push
fsubr
and
andl
xchg
fistps
icebp
addb
nop
add
call
clc
test
ja
andb
fldl
andl
test
xchg
jno
add
stos
es
and
inc
pop
pop
add
stc
inc
cmp
push
or
ljmp
out
movsl
incl
mov
adc
sub
addb
mov
mov
cmp
sbb
pushf
scas
call
mov
inc
rclb
mov
rcll
rorl
rep
or
orl
push
push
aam
dec
add
pop
je
or
rclb
xchg
mov
xor
fdivr
outsl
call
add
add
hlt
inc
add
cld
xchg
inc
add
shlb
addl
adc
stc
test
add
sbbb
add
and
pop
and
ret
je
adc
push
push
or
add
clc
outsl
clc
or
aam
xchg
pop
inc
inc
rclb
add
mov
rclb
sbb
mov
add
aad
inc
aad
mov
enter
pop
shlb
sar
clc
pop
push
push
add
push
sarl
adc
add
lea
fcoml
mov
add
adcb
mov
out
xchg
inc
and
jmp
js
rclb
cld
push
and
mov
dec
adc
shll
rclb
mov
aas
lock
xchg
rolb
rolb
sarb
pop
mov
bound
pushf
fdivr
in
push
xor
xor
cmp
sar
incl
adcl
dec
pop
aaa
xchg
sub
and
mov
stos
es
ljmp
and
pop
lea
lock
fstpt
pop
je
out
in
cmp
mov
out
dec
fcoml
push
je
ret
add
cmp
into
pushf
adc
pextrw
or
or
ret
push
jmp
ffreep
sub
call
adc
decl
loop
testl
jmp
mov
jmp
pusha
adc
jb
out
pavgb
sub
adc
mov
mov
dec
call
std
adc
loopne
add
and
mov
jecxz
push
xlat
loopne
xor
in
bound
adc
loopne
pop
cld
xchg
loope
jmp
adc
enter
xchg
add
pushf
fisubl
je
cld
pop
and
or
mov
pop
pop
je
jl
sbb
jecxz
lods
mov
inc
or
mov
pop
pop
push
popl
jo
sbb
dec
fisttps
lret
and
and
loope
xor
xlat
mov
adc
loopne
call
loope
inc
cmp
mov
mov
jae
loopne
mov
jp
addl
in
sub
mov
add
test
xchg
or
hlt
pop
push
inc
es
mov
add
clc
dec
pop
and
ss
cmp
lcall
insb
int3
loopne
add
xor
jl
pop
test
cli
or
call
pop
sub
mov
incb
cmpsb
pusha
dec
push
xchg
and
outsb
adc
popa
adc
roll
subb
dec
enter
ljmp
sub
icebp
xchg
loope
push
or
icebp
jnp
mov
mov
cmp
test
dec
and
xorb
adc
aaa
test
decl
das
xchg
sbb
sbb
addr16
push
jne
lods
sbb
mov
ljmp
pusha
movsb
loope
dec
sub
jecxz
pusha
adc
sub
dec
push
jecxz
pusha
mov
test
pop
lock
sbb
jmp
xchg
shr
push
push
push
lock
or
ret
loopne
sahf
loope
mov
je
and
xor
shl
inc
xchg
popa
add
push
pop
add
mov
or
xor
mov
faddl
inc
lods
daa
popa
dec
loopne
fs
fistpll
add
cmp
adc
xchg
cmp
aad
and
pushf
lea
cmp
ret
push
scas
hlt
add
outsl
stos
clc
call
mov
push
fsubs
inc
jmp
ror
fistl
das
loop
pushl
arpl
jecxz
cmp
pusha
pop
popa
cmp
shl
cmp
testb
jecxz
popa
mov
sti
pop
or
xlat
je
popa
pop
lret
push
sub
jno
jmp
or
and
in
and
loopne
leave
pusha
fwait
pop
ret
and
nop
movsb
stos
add
mov
pop
lcall
pop
fs
xor
es
ftst
repnz
xlat
bound
add
clc
pop
andl
mov
sub
fildl
pop
add
pusha
loop
clc
and
jo
sub
or
xor
mov
sahf
pop
sbb
jb
loopne
ret
call
ljmp
and
add
ja
mov
and
sbb
lea
cmp
inc
rclb
dec
adc
and
xor
sar
cmp
lock
pop
fst
pushl
adc
and
ja
addb
pop
mov
xchg
cwtl
hlt
das
mov
call
cmp
push
mov
push
mov
sar
ret
or
jo
adc
or
xchg
incb
push
xchg
mov
hlt
movsb
pop
loop
add
cmp
push
and
add
add
dec
jp
jno
mov
mov
jmp
in
cmp
sti
mov
lea
ss
mov
jp
push
dec
mov
sahf
adcb
inc
ret
or
test
add
xor
rcrb
add
lds
add
or
mov
mov
or
add
adc
jmp
or
nop
std
xor
or
jmp
or
lock
add
pop
add
add
add
jo
roll
nop
or
pop
inc
in
and
push
in
add
rolb
sub
jo
pop
fistl
jo
push
addb
push
jnp
sub
mov
sbb
inc
lahf
sbb
adc
inc
push
sub
or
incl
lds
xor
push
add
xlat
pop
mov
and
and
int
imul
push
jl
mov
cmpsb
imul
or
mov
xor
adc
push
push
fcoml
lock
dec
push
aas
int
pop
insb
test
std
xor
pop
aad
mov
sbb
cwtl
call
and
cmp
add
add
fsts
add
push
mov
addr16
loope
and
push
insl
xchg
mov
inc
mov
cmpsb
mov
mov
xor
add
xor
mov
into
mov
dec
repnz
icebp
das
sbb
push
out
dec
lds
out
repz
in
sbb
loope
and
add
and
fs
and
and
in
add
or
sub
sub
mov
add
das
add
sbb
cmp
xor
xor
adc
add
add
mov
fisubrs
dec
nop
mov
adc
mov
mov
push
insb
or
movsl
push
fiaddl
lock
or
adc
and
cld
inc
or
subb
je
pop
jo
pop
fistpl
rolb
jo
xor
cmp
xchg
xchg
pop
xor
outsl
loop
add
or
xchg
mov
sti
inc
jns
push
pop
or
adc
dec
ljmp
jmpw
fildl
mov
addl
or
mov
dec
or
push
sbb
or
and
fwait
add
loope
fcmove
cld
ret
dec
aaa
xchg
decl
jbe
add
mov
idivl
add
nopl
out
pop
pushf
inc
ret
stc
aam
jno
shll
adc
outsl
mov
jne
cmp
dec
std
mov
add
jge
push
jmp
inc
sbb
mov
hlt
push
aam
jbe
inc
add
movzwl
rcrb
cmpsb
inc
inc
adc
adc
and
aam
ret
sub
lock
add
mov
mov
mov
mov
dec
mov
aas
inc
lods
inc
push
pop
fisttpl
push
inc
lock
test
ljmp
or
mov
add
popf
cld
push
and
pop
pusha
loopne
jle
jp
ds
call
jp
orl
push
xchg
mov
and
add
and
mov
sub
push
pop
lea
jb
mov
scas
aaa
mov
out
rorb
pop
or
stos
inc
ja
xorb
sbb
mov
adc
pop
jo
or
or
call
sbb
pop
add
pop
sbb
or
fiadds
sbb
in
test
and
jp
mov
or
mov
in
jno
pusha
add
ret
lcall
sub
xor
lds
or
testb
ret
cmp
sbb
jmp
and
add
cmp
and
mov
sbb
jp
add
add
mov
mov
mov
mov
ret
clc
filds
add
push
sbb
scas
mov
add
xlat
call
scas
or
add
pop
lock
inc
jg
pusha
cmp
fnstenv
and
test
es
mov
jmp
je
int
outsl
push
rorl
mov
xor
xor
adc
sahf
dec
push
aad
sahf
cmp
or
jmp
mov
push
ja
mov
shrb
aaa
ficoml
std
mov
cmp
cmp
pop
mov
pop
push
aad
mov
or
mov
jl
push
mov
and
jp
xor
rorb
je
pop
xchg
repz
ret
icebp
stos
fidivrs
sbb
mov
sbb
add
pushw
pop
test
stc
jo
adc
cli
mov
hlt
enter
cltd
add
and
add
cld
mov
shll
testb
jbe
cmpsb
test
add
sbb
add
sub
mov
sbb
fdivp
add
mov
xor
dec
movsb
fdivl
mov
xor
add
mov
out
jmp
inc
xchg
call
cld
mov
cmpsb
jnp
jge
jl
mov
je
or
cld
mov
xor
rcl
add
mov
xchg
jmp
xchg
ret
push
push
jl
xchg
cli
mov
mov
cmpl
clc
out
xchg
jb
or
add
ret
jo
jle
arpl
testl
mov
mov
je
push
jp
rcr
push
or
push
cmp
es
inc
push
xor
fs
add
cs
mov
dec
push
pop
aam
insl
scas
jl
cmp
aaa
and
add
in
lock
inc
add
or
jbe
adc
push
clc
xor
xchg
clc
js
stc
jae
sub
dec
add
jmp
add
add
push
pop
push
mov
mov
sbb
pop
fld
lcall
xor
or
or
add
stos
jo
aas
mov
fdivl
jmp
push
loope
jp
mov
cmp
sti
push
jbe
jne
addl
adc
add
xor
dec
dec
je
inc
les
jb
mov
mov
jg
in
testb
addl
nop
push
dec
lock
jmp
fisubl
movsb
push
pop
outsb
cli
sti
cmp
rcl
xor
pop
pop
adc
jmp
cmp
pop
or
lret
push
scas
popl
popa
or
mov
add
pop
cmp
xchg
push
cmp
jae
dec
or
inc
rolb
mov
jae
lea
daa
cmp
mov
push
mov
add
mov
pop
push
jle
pop
loopne
add
mov
enter
jg
push
mov
mov
je
decl
fcmovbe
and
outsb
cmp
or
cmpb
jne
sbb
cmp
cmp
dec
fsub
outsl
cmp
add
mov
repnz
or
stos
in
jne
push
pushf
jne
cmp
sbbl
add
jge
inc
js
ss
popf
aas
add
fmulp
jbe
inc
les
cmp
jl
add
dec
mov
aaa
je
cmp
jb
jmp
aaa
dec
dec
mov
mov
and
mov
je
out
stos
test
sub
decl
fsubs
lods
jecxz
arpl
lret
jb
add
add
loopne
fs
or
out
or
push
mov
pop
push
push
inc
loop
pop
sbb
push
or
sub
notb
mov
xor
jle
out
cld
or
adc
nop
cmp
mov
lea
in
push
mov
das
je
cmp
jbe
mov
insb
mov
add
das
adc
push
jbe
fisubs
lret
test
or
mov
add
pushf
daa
mov
mov
lock
inc
loopne
lcall
cmp
outsb
test
jge
ja
mov
jne
adc
mov
cmpb
movsl
std
or
or
jne
outsb
cmp
pop
pop
xchg
dec
xor
dec
pop
dec
add
jbe
add
jl
mov
nop
adc
sbb
xor
jbe
pop
mov
outsl
outsb
mov
push
xor
repz
push
pop
ljmp
lds
loopne
hlt
pop
pop
shlb
add
xor
in
fimuls
push
and
jecxz
jle
xorb
or
sub
imul
loopne
sti
jmp
jmp
xchg
mov
jne
cmp
add
ffree
mov
pop
mov
mov
or
mov
adc
dec
int
mov
insl
faddl
xchg
jp
rcrl
test
fsubl
mov
jbe
in
js
arpl
dec
cmp
jge
pop
mov
nop
sub
sbb
cmp
jge
clc
outsl
adc
jbe
add
cld
push
pop
enter
xchg
pop
lock
adc
push
data16
push
ss
fs
inc
mov
inc
push
mov
mov
xchg
add
sub
jo
push
test
rclb
rcrb
push
and
dec
data16
jl
pop
push
add
xchg
and
xchg
int3
mov
inc
dec
lock
add
subb
inc
cmpsb
daa
int
mov
mov
cmpsb
adc
push
movl
std
es
mov
mulb
test
or
add
imul
mov
jle
xor
lock
ror
and
add
rorb
xchg
icebp
loope
cmp
add
adc
push
mov
push
lea
sub
xchg
and
idivb
decb
sub
addl
xor
jne
lahf
pop
movsb
pmaddwd
add
xor
repnz
and
xchg
cli
mov
je
shr
pop
inc
lds
sbb
mov
aad
or
mov
adc
roll
jle
das
push
dec
dec
movsl
add
movsb
std
mov
ds
pop
lret
clc
pop
jns
and
push
fistl
loopne
fstps
cltd
insl
lods
or
in
sahf
aam
incl
pusha
mov
pop
daa
jle
mov
mov
cmpsl
lcall
cmp
mov
sbb
js
rol
dec
add
test
mov
push
push
jbe
push
mov
inc
mov
jl
sub
es
fcompl
push
loopne
jge
jge
adc
mov
sti
xchg
add
loopne
sub
cld
lcall
aam
push
inc
jge
test
sbb
or
xchg
dec
push
cld
insl
test
sub
and
adc
or
ja
bound
sbb
dec
test
ret
mov
and
in
ret
in
sub
loopne
pop
jne
jmp
xor
loopne
lcall
sub
sar
cmp
xchg
sbb
pop
or
push
adc
mov
lods
icebp
cmp
jle
cli
les
sub
repz
les
hlt
addl
lcall
js
mov
or
mov
cltd
lods
out
out
js
pop
and
mov
js
lods
rolb
cmc
mov
in
cmc
scas
cmc
jmp
cmp
mov
xchg
call
mov
push
fidivrs
in
push
aas
les
dec
sti
pop
mov
and
jmp
jg
jle
fldenv
mov
push
test
cmpsl
jbe
push
popa
cld
push
jmp
jp
mov
xor
mov
lret
jl
mov
inc
loopne
jmp
xchg
or
xor
test
and
or
and
xchg
push
mov
fisubs
pushl
out
push
push
push
and
sub
cmp
jp
jnp
test
dec
and
or
xchg
add
jg
adc
add
sbb
shl
push
push
test
sbb
adc
dec
push
adc
sbb
fsubrs
cmpsl
cld
jle
cli
sti
insb
or
mov
mov
fwait
test
or
add
push
clc
ds
aam
push
movsb
push
mov
pop
hlt
addr16
jle
xchg
adc
jge
inc
push
incb
fdivrl
inc
pop
pop
and
shrl
stos
stos
pop
sbb
aas
push
push
out
push
adc
lods
lea
pop
cmp
mov
add
push
push
mov
add
cmp
insl
inc
inc
pop
hlt
rcrb
sbb
adc
sti
inc
xchg
aad
int
shlb
aaa
push
sub
add
push
add
xor
movsb
lahf
sub
fcomip
jmp
xchg
js
loopne
int3
xchg
or
int3
rolb
imul
outsb
cli
divb
add
sub
mov
xor
jb
nop
add
icebp
jbe
mov
or
dec
and
scas
cli
and
faddl
incl
mov
or
xchg
jbe
add
pop
je
jb
dec
mov
sar
sub
rcr
mov
push
shlb
stos
imul
add
mov
icebp
cmovns
push
psubsb
add
add
mov
dec
lret
orb
mov
or
xor
ds
mov
sbb
daa
dec
push
xchg
inc
push
or
jmp
jbe
add
repnz
mov
lds
test
out
jle
shl
std
push
lea
push
cmp
mov
inc
mov
cmp
push
dec
jo
les
icebp
js
dec
stos
cld
ret
pop
call
pop
cmp
pop
jo
push
outsb
jb
mov
outsb
jns
lahf
sub
push
icebp
rcll
ja
push
fidivrs
sub
mov
mov
cmp
mov
lea
or
mov
xor
mov
add
ret
ja
divb
push
popw
inc
pusha
mov
xor
or
shr
or
lea
add
push
mov
fldcw
je
jne
cs
lods
lea
mov
xchg
xchg
pop
nop
xchg
mov
pop
sahf
mov
call
cmp
je
movzwl
cltd
cmp
je
pop
mov
in
push
dec
std
cld
jnp
in
js
add
ss
add
lods
inc
jb
shlb
sti
or
hlt
ja
add
inc
icebp
shr
fisttps
sti
add
mov
leave
adc
and
cli
ja
add
lea
ret
aas
clc
add
pop
data16
jl
add
imull
push
scas
push
mov
pop
test
movsl
add
add
or
pop
inc
inc
lods
mov
xchg
adc
decl
sub
mov
mov
data16
push
je
shrb
aaa
fiadds
pop
loopne
mov
mov
add
adc
mov
dec
sarb
adc
xor
testl
xchg
in
push
adc
cmp
pop
cmpsb
popa
mov
adc
sti
xor
xor
sti
je
sub
cmp
je
scas
dec
jmp
pop
mov
hlt
add
cmp
jmp
sub
fidivrs
cltd
dec
jle
adc
in
ficoms
nop
out
addl
test
xor
add
call
sbb
add
lahf
mov
push
add
imul
cmpsb
je
sbb
add
cmp
xchg
mov
mov
js
or
leave
cli
push
lahf
pusha
scas
sub
add
push
pop
ss
mov
std
into
out
sub
mov
sahf
push
pop
arpl
adc
arpl
mov
jle
decl
js
outsl
ds
xchg
lds
push
jle
call
pushf
mov
mov
testb
stos
mov
add
mov
inc
js
or
fs
loopne
mov
jl
inc
and
push
inc
in
out
inc
mov
adc
je,pt
out
xchg
mov
cmp
dec
fdivl
lea
scas
push
pop
dec
std
and
jg
lds
call
aas
push
mov
movb
imul
mov
cmovs
inc
dec
scas
psrld
sub
sahf
js
lret
mov
shr
popf
mov
insl
mov
pushl
decl
movsb
lods
xor
cs
test
cmc
push
mov
mov
shll
rorb
lds
or
dec
jle
shrb
rolb
xor
xchg
push
pop
cwtl
adc
stos
push
fs
mov
cmp
cld
out
sbb
add
scas
sub
inc
push
ljmp
pop
aam
out
jg
lock
add
fildl
mov
inc
inc
dec
mov
nop
dec
dec
inc
jp
pop
jg
add
sub
cld
mov
jbe
xor
sbb
scas
lea
xchg
nop
int3
fildl
push
mov
mov
rcr
adc
cmp
rcll
fcos
adc
dec
mov
inc
enter
mov
loopne
sub
mov
or
inc
in
pushf
sahf
pop
cmpsb
sbb
gs
add
loop
dec
subb
subl
mov
or
xor
mov
lock
inc
das
in
pushl
in
xchg
jne
inc
push
mov
neg
in
and
lea
sub
mov
fsubl
pop
and
pop
ret
xchg
or
js
ds
inc
mov
xrelease
loopne
add
in
cmp
arpl
mov
call
push
js
cmp
push
xor
adc
mov
mov
pop
and
es
fs
mov
mov
js
push
fcoml
add
bound
push
lds
les
popf
movsb
mov
sti
je
mov
cs
les
or
test
fildl
pop
dec
js
push
test
fsubrs
sbb
insl
movsb
push
insb
loopne
xchg
push
push
aaa
imul
xchg
mov
into
inc
or
andb
test
adc
push
subl
lcall
insl
push
mov
jmp
push
sti
push
repnz
cwtl
mov
cmp
push
add
mov
or
mov
scas
xor
iret
and
mov
inc
repz
movsb
shrb
xor
jle
push
sbb
adcb
xorl
jle
or
add
pop
pop
inc
es
pusha
xor
jge
int3
xchg
mov
add
xor
push
es
test
hlt
push
shrb
mov
xorb
or
lcall
push
ret
sub
sub
or
mov
mov
push
orb
cld
inc
inc
jne
add
or
mov
clc
fsubrs
pop
gs
adcl
loop
inc
jne
inc
jo
push
addb
rep
cmc
push
add
ret
jbe
sti
push
adc
cmpb
push
add
mov
or
and
adc
daa
or
push
inc
lock
ljmp
and
xorb
add
addb
or
clc
or
movsl
cmpb
dec
ret
jl
pop
inc
or
add
jp
add
pop
pop
adc
loope
jno
push
cmp
lea
or
dec
add
push
addb
sub
or
clc
dec
or
xor
cli
enter
addr16
mov
into
subl
faddl
adc
add
sarb
lds
int3
or
mov
das
ds
pop
fld
mov
je
shlb
jge
decl
add
je
repnz
jmp
jecxz
pop
jne
mov
int3
add
ds
cmc
out
push
or
test
jne,pn
mov
push
push
das
les
xchg
stc
rol
sub
imul
js
add
cmp
ret
lods
test
shrb
xchg
shrb
xor
push
inc
add
adc
icebp
inc
jle
pop
and
rcrb
lds
loop
pop
adc
rol
add
inc
mov
aaa
in
out
scas
push
fildll
div
je
call
aas
mov
add
insl
adcb
jb
aam
jbe
add
xor
push
push
add
es
sbb
push
outsb
push
fcoml
cwtl
sub
adc
add
fadd
dec
or
fs
push
jb
mov
dec
cmp
lods
inc
call
or
rcll
pop
je
jle
mov
stos
jbe
sbb
dec
shr
jmp
mov
int
mov
inc
pop
dec
jl
sub
in
rolb
rorl
decl
dec
push
roll
es
and
pop
out
insb
shlb
ljmp
xlat
cmpsl
or
cli
push
adc
adc
mov
mov
ret
ret
loopne
mov
cmp
insb
fildl
jbe
stos
mov
out
xor
mov
lock
hlt
mov
icebp
mov
pop
call
mov
cs
and
sub
push
sub
or
or
xchg
stos
inc
hlt
bound
test
pop
pcmpgtd
and
fstl
pop
dec
adc
mov
or
in
popa
sub
jb
sti
in
ljmp
sbb
aam
push
mov
inc
and
dec
call
movl
add
incl
popa
lret
pusha
push
push
je
imul
push
lods
cmp
std
in
loopne
xor
outsb
mov
pushf
xor
pusha
gs
jg
loopne
loopne
or
loopne
out
je
lea
mov
call
push
stos
adc
or
scas
or
aad
or
add
loopne
pop
pusha
arpl
sbb
cmp
jbe
icebp
pusha
inc
loop
xchg
movsb
pusha
nop
inc
and
add
and
xor
pop
ficoml
jg
mov
call
add
mov
mov
clc
and
pusha
lahf
push
mov
pop
adc
sbb
and
sbb
or
testb
add
mov
adcb
cmp
loopne
or
ret
push
lock
daa
xor
cmp
les
test
test
pusha
adc
shl
ja
pusha
and
addr16
cmp
cmp
sbb
pop
xchg
push
idivb
jne
test
frstor
add
je
test
jbe
cmpb
loopne
or
inc
or
push
cmp
pushl
push
push
and
jno
cs
ljmp
fdiv
cmpl
add
push
ljmp
negb
push
or
pusha
das
push
add
adc
and
fisttps
xor
cli
addb
fisttps
jb
and
pusha
aaa
sub
scas
mov
or
movsb
xchg
loopne
call
bound
push
push
mov
pop
loopne
xchg
sub
xor
mov
andb
lahf
loopne
pusha
jle
cwtl
sbb
mov
clc
incl
pusha
les
jmp
jl
clc
nop
add
movswl
sbbb
and
pusha
and
xlat
add
shrl
mov
push
nop
pop
test
sbb
mov
loopne
mov
loope
add
testl
arpl
add
icebp
call
lret
sub
das
clc
push
jp
jle
add
aaa
mov
addb
mov
jp
cmp
sar
inc
push
dec
inc
jl
iret
jge
je
or
es
mov
call
addb
pop
adc
jmp
pop
mov
icebp
add
loopne
ret
jg
clc
adc
popa
outsb
aas
aaa
xchg
pop
shlb
sbb
dec
push
add
fisubrs
daa
test
enter
jbe
or
mov
inc
pop
sub
cmp
mov
int3
cmp
cmpl
push
cld
lcall
out
cmp
loopne
jne
add
push
jmp
cmp
add
or
jp
dec
mov
in
and
popa
push
cmp
pop
mov
sub
xchg
and
dec
lea
inc
rolb
cmp
jmp
movl
jge
cld
jne
arpl
test
add
outsb
je
jl
push
call
mov
jmp
cmp
aaa
sub
pop
jl
cmp
leave
popa
pop
inc
xor
push
pop
cld
pop
mov
sbb
mov
sbb
ljmp
outsb
adc
dec
jb
inc
fdivl
or
cmpl
adc
mov
scas
call
mov
cmp
decl
adc
ja
test
mov
test
xor
adc
ljmp
mov
cltd
mov
add
mov
jo
cmc
pop
and
and
mov
std
ljmp
xchg
shlb
mov
mov
or
push
xor
pushw
inc
adc
std
push
hlt
and
push
push
jp
rolb
or
mov
call
sub
fs
sub
je
faddl
mov
push
lock
xor
in
sub
dec
lea
and
shlb
sbb
jo
push
and
pop
mov
leave
movsl
xor
pop
or
mov
adc
loopne
aaa
test
cli
xlat
adc
cmp
push
jne
inc
lods
bound
lods
or
jle
jle
scas
call
xor
imul
jo
and
jmp
je
and
dec
hlt
and
add
stos
jp
outsb
test
jl
ret
inc
adcl
jno
add
or
add
push
das
add
lock
imul
mov
call
mov
xchg
cld
icebp
add
pushl
add
mov
inc
or
pop
mov
je
xor
aas
or
inc
mov
imul
lock
fisttpll
lods
in
or
stos
add
or
in
sbb
decl
mov
pop
pop
ljmp
cmp
subb
or
mov
push
push
mov
sub
fdivr
and
jge
ret
xor
lods
jno
lret
sub
jo
mov
adc
std
lock
mov
idiv
jg
jl
push
test
push
lea
jo
or
jmp
lea
add
adc
mov
mov
xor
inc
icebp
lds
push
mov
cmp
fistps
lock
adc
push
orb
fiaddl
ret
out
dec
loop
push
push
shll
shll
shrb
dec
icebp
mov
push
add
push
cmp
or
jle
jl
xchg
pop
das
movsb
push
mov
add
jmp
cmp
addl
fcoml
mov
pop
imull
pop
pusha
adc
jg
adc
pop
mov
pop
jo
mov
pop
loopne
cmpsb
out
lcall
xchg
int
mov
push
stos
mov
lret
dec
iret
xor
adc
lcall
push
xchg
xor
mov
dec
call
add
pop
std
out
hlt
jo
imul
mov
add
jbe
xor
xchg
aaa
cwtl
push
and
mov
jle
bound
mov
int3
lock
or
mov
lock
sbb
pop
insl
mov
orl
lcall
or
or
stc
jb
or
movsb
adcl
jmp
and
inc
fsubs
jne
lret
jbe
jne
push
adc
jle
pop
pop
dec
xorl
icebp
push
adc
sbb
outsl
test
xor
lock
add
jo
lods
pop
adc
push
sbb
jno
cmpb
loopne
fwait
mov
mov
lods
mov
or
and
ss
lcall
cmp
adc
mov
jb
jbe
decl
popf
mov
add
push
lock
add
aad
mov
and
mov
ret
or
lock
mov
and
mov
jecxz
pop
adc
lock
sbb
push
push
push
push
jae
pop
pop
lock
mov
adc
push
adc
les
sahf
test
je
jo
sbb
out
sbb
loop
nop
ljmp
popa
scas
cs
call
mov
cwtl
leave
xor
mov
dec
and
sub
je
fisttps
mov
mov
ret
mov
or
inc
call
repz
sub
and
and
sbb
out
push
mov
xor
clc
xor
inc
les
jg
dec
clc
add
sbb
mov
mov
cmp
pushl
mov
lock
xor
xor
loope
add
cmp
decl
ljmp
sbb
add
shrl
jl
icebp
sub
jbe
clc
mov
clc
mov
rorb
xor
mov
pop
pop
lock
and
ss
mov
cs
dec
stos
addb
loope
sub
sbb
es
mov
mov
popf
leave
ret
or
in
jb
mov
adc
add
inc
pushf
int3
decb
add
mov
mov
faddl
pusha
scas
dec
push
call
call
adc
push
mov
mov
add
push
sub
pusha
movsl
mov
out
insb
sub
add
cmp
sbb
mov
add
jo
call
inc
mov
sub
jo
inc
or
sbb
outsb
test
negb
movb
or
mov
mov
stc
push
hlt
mov
push
push
lcall
cs
cwtl
push
mov
jae
test
in
pop
jo
hlt
mov
jo
sahf
cmp
jg
mov
pop
adc
xor
cwtl
or
add
outsl
xchg
sub
pop
lods
jb
lock
daa
push
sbb
and
add
cmp
cwtl
push
mov
jo
je
jo
ret
adc
insb
mov
xor
jno
xchg
test
add
lock
fidivs
or
jl
sbb
add
cmpsb
je
xor
jmp
mov
push
cli
adc
sahf
push
and
lock
jb
pop
jle
cmp
and
push
pop
addr16
adc
xor
pop
pop
pop
jae
push
xchg
and
jne
mov
inc
mov
sub
dec
test
jmp
jnp
sub
mov
pop
push
test
pop
andb
inc
sub
loop
mov
mov
jno
mov
lcall
cmp
and
test
dec
push
add
mov
fwait
adc
add
pop
lods
or
xor
cmp
lea
aam
cmp
je
sub
call
out
mov
in
cli
add
cmpsb
rorb
mov
or
adc
push
je
sub
stos
and
cmp
test
cmpsb
clc
mov
mov
inc
lea
pusha
adc
adc
jne
pop
sub
je
cwtl
pop
ret
xchg
mov
pop
mov
mov
pusha
push
cs
push
lock
push
add
jo
aas
add
out
pop
add
xlat
add
or
sbb
add
pop
add
lock
fmull
add
das
add
iret
clc
sbb
add
pop
mov
icebp
out
cs
adc
into
jecxz
fildl
stos
xchg
sub
rcl
sub
dec
cmc
xchg
mov
add
push
add
or
sar
push
mov
adc
pop
mov
xor
jns
jb
push
repnz
jns
iret
aad
mov
movsb
in
cmp
cmp
orb
mov
jl
xlat
in
shlb
inc
add
dec
rcll
movsb
cs
movl
or
jbe
jo
inc
icebp
lods
mov
aad
test
add
aaa
adc
sarl
pop
xchg
rolb
aad
ljmp
andl
popa
xorb
roll
orl
push
cmp
lcall
test
addl
fsubl
call
addl
loope
push
xorl
sbb
or
cmp
cmp
inc
jecxz
add
fwait
pop
pop
insb
jecxz
cmpl
xchg
dec
notl
js
mov
icebp
call
or
jae
sarl
movsl
fsts
sub
pop
or
cmp
mov
mov
ja
fsubrl
lods
sub
mov
cwtl
mov
ret
adc
test
push
push
xchg
mov
push
aam
dec
inc
addl
cmp
xlat
shrb
mov
out
mov
test
out
push
call
ljmp
test
pop
push
inc
dec
or
pop
lock
sbb
jne
lock
xor
ret
add
nop
or
adc
fcmovnb
or
adc
sub
dec
add
ljmp
adc
mov
daa
pushf
cmp
adc
add
add
jo
in
add
inc
int3
call
aas
ds
adc
jg
fistps
inc
mov
or
or
jno
cld
dec
or
addb
sbb
mov
rorl
js
clc
jns
inc
addb
data16
pop
push
or
xchg
neg
mov
adc
mov
jle
adc
sbb
sbb
adc
xchg
in
xchg
add
jmp
jnp
rorl
ffree
sbb
sub
imul
cmc
mov
or
cmpsb
in
jnp
stos
cmp
shll
mov
lds
cwtl
sub
adc
ror
pop
adc
jns
mov
cmp
ljmp
shll
add
mov
test
push
insl
sahf
sbb
loopne
mov
cmp
push
and
pop
mov
or
les
add
jae
cmp
xor
mov
mov
fistl
int3
mov
pusha
mov
aaa
lods
shl
add
jmp
fiadds
loop
cmp
mov
loop
sti
lods
out
lods
sub
pop
pusha
scas
fiadds
and
rorb
sbb
cmp
test
pop
push
lea
sub
or
ss
subl
pushf
add
mov
push
or
mov
inc
xor
and
loopne
adc
scas
out
nop
fisubrs
pushf
test
push
out
add
mov
fwait
mov
adcl
add
jb
arpl
mov
add
fsub
setge
aam
shl
inc
fsubrp
jmp
mov
sbbb
inc
and
mov
jecxz
jbe
xchg
xor
test
add
push
mov
loopne
loopne
andl
adc
faddl
loope
add
mov
aam
lock
inc
mov
orb
push
into
cs
popf
push
pop
push
dec
mov
js
adc
mov
nop
jb
fs
and
ds
pop
jb
movsb
notb
mov
arpl
xchg
insb
sbb
jmp
jb
loope
or
ds
mov
std
ficoml
mov
push
push
fsubrs
or
aam
loop
ret
push
nop
adc
add
mov
and
test
push
add
jnp
add
dec
or
stc
loopne
pusha
sahf
pushl
cmp
mov
sub
add
cmp
out
fildl
mov
mov
push
sbb
inc
cld
insb
pop
and
loopne
orl
ficoml
pusha
insb
add
sub
ljmp
sbbb
outsl
xchg
int3
xor
out
int3
add
arpl
cmpsb
push
imul
pop
cmp
push
in
push
mov
in
cmp
add
jne
clc
add
adcl
sar
jmp
sar
or
sarb
mov
aas
and
out
call
scas
sbb
xor
ret
and
lcall
rcrb
call
ds
xacquire
aam
ljmp
xsavec
dec
lcall
dec
out
jo
call
rorb
loopne
adc
mulb
add
in
addb
sbb
cli
mov
loop
adc
push
push
jnp
and
jg
int3
js
mov
dec
add
pop
loopne
push
adc
add
inc
or
add
mov
cmc
mov
jecxz
push
pushw
test
decl
out
enter
sbb
dec
inc
repnz
pusha
adc
add
jmp
jle
ret
popf
rorb
enter
pop
ret
int3
fdivrs
inc
js
fsubrs
pusha
fimuls
das
cld
adc
call
pop
scas
pusha
xchg
mov
outsb
ret
test
push
cmpsl
orb
dec
push
xor
push
inc
push
adc
jb
add
or
jb
mov
or
loopw
icebp
jmp
mov
or
push
xchg
movsb
test
and
stos
sbb
mov
add
rolb
fsub
bound
aas
in
pop
cmp
or
push
je
sub
aaa
lea
jb
mov
inc
hlt
stos
hlt
add
je
or
pusha
push
cwtl
pushl
adc
adc
loope
cld
sub
sbb
dec
mov
pusha
ret
in
pusha
jnp
push
data16
cmp
sub
add
mov
sahf
add
cmp
call
fbld
pop
hlt
jmp
xchg
or
jo
push
andb
je
adc
xor
push
mov
outsb
push
sbb
mov
es
call
add
cs
dec
jne
jbe
inc
hlt
mov
pop
ret
cli
jmp
jo
jmp
mov
push
jo
inc
ljmp
mov
fistps
lcall
adc
cmp
std
jno
xor
adc
push
rclb
inc
cld
sub
jg
sub
push
xor
inc
pop
jo
adc
inc
mov
imul
decl
fsubrs
cmc
sub
sub
lods
fwait
mov
xchg
add
je,pt
scas
cli
push
mov
xor
adc
adc
fisubrs
andl
add
inc
mov
mov
add
add
adc
xor
add
mov
adc
xor
xchg
jbe
sbb
dec
add
icebp
push
clc
dec
ss
add
add
jl
jg
icebp
mov
mov
cmp
iret
or
mov
inc
add
sub
decb
bswap
add
or
push
jns
sub
mov
insb
in
jbe
inc
jo
adc
pop
outsb
and
loopne
mov
jo
mov
xorb
pop
mov
in
ja
mov
pop
push
xchg
and
or
insb
fucomip
je
or
pop
jno
or
hlt
jne
pop
xor
outsl
rolb
nop
sbb
mov
les
add
add
mov
adc
sbb
cmp
adc
sbb
xchg
std
roll
push
movb
jno
jmp
dec
aad
loopne
lock
cs
loop
jo
mov
xorb
ljmp
cld
add
loopne
add
cmp
call
pop
xchg
add
jo
call
data16
adc
add
inc
sbb
aaa
or
fisttpl
shlb
and
xor
jo
push
or
push
mov
pop
call
mov
add
and
mov
lock
mov
cmp
inc
sub
sub
test
add
cli
cmpb
mov
lock
mov
cmp
mov
or
pushl
inc
movsl
mov
jne
push
pop
jno
pop
orb
es
adc
xor
push
call
inc
fstpt
loop
and
jne
push
mov
jne
rcr
faddl
push
into
adc
and
mov
out
inc
mov
mov
mov
test
xor
pushf
or
mov
adc
sbb
les
out
loopne
mov
jmp
cmp
movsl
inc
add
add
mov
aam
inc
es
decl
add
pop
add
stos
sbbb
jmp
cmp
cmp
inc
test
or
sbb
lret
sub
fimuls
cwtl
jmp
ljmp
jle
outsl
push
xchg
adc
and
push
rorb
jne
and
xor
mov
mov
jo
mov
sub
push
jmp
adc
mov
push
push
xor
xor
sub
cmp
push
xor
or
mull
fsub
shlb
inc
lock
adc
test
adc
repnz
and
sbb
cli
into
or
push
push
loopne
andb
test
xor
push
jge
loopne
jo
sbb
loopne
jl
pop
adc
outsb
and
test
cltd
cmp
dec
je
aad
je
cmp
mov
repz
call
jl
es
or
test
adc
call
fcoms
lock
jmp
mov
jg
push
mov
js
jne
jbe
jge
mov
out
push
xor
into
call
inc
jg
jae
dec
rorb
jno
pop
idiv
mov
jno
mov
adc
xor
call
cmp
lock
gs
push
dec
outsb
ret
ret
mov
decb
push
jo
cmp
stos
and
sti
mov
fstpt
mov
and
sbb
and
push
lock
dec
add
xor
jo
cmc
cmp
cmpsb
call
add
jle
mov
cmpl
cmpsb
mov
pop
je
mov
adc
dec
test
xor
adc
dec
sub
cmp
je
sbb
sub
lock
inc
push
fs
je
js
movsb
sti
and
jl
stos
pop
stos
push
inc
je
les
hlt
je
push
cld
push
xorb
xchg
add
call
test
ss
adc
jmp
mov
cmp
cmp
jg
pop
addb
inc
and
je
mov
pop
jecxz
cld
mov
sti
jmp
cmpl
mov
mov
int3
fildl
push
lock
stos
push
loopne
pop
mov
lea
inc
test
or
enter
jnp
xchg
mov
out
xor
aad
lcall
repz
hlt
fdiv
popa
fisubs
test
rolb
test
loopne
xchg
clc
pop
inc
sbb
sub
dec
or
adc
add
adc
or
ret
sahf
add
shrl
lods
push
push
icebp
push
adc
notl
cld
mov
aaa
std
jae
movsb
clc
icebp
pop
or
test
mov
and
fisttps
cmpsb
inc
pop
push
test
cmpsl
mov
push
outsl
out
jle
in
lock
push
mov
outsl
fcoms
and
lock
jo
jge
aaa
pop
test
jle
push
xchg
movsb
mov
mov
data16
cld
and
outsb
push
out
cmp
jne
test
scas
ret
cmp
add
fildll
pop
or
aaa
xor
clc
jb
or
jno
mov
xor
dec
dec
push
lods
movsl
cmc
inc
loopne
pushl
pop
xor
xchg
cld
incl
sbb
mov
push
shl
out
or
push
xchg
or
loope
in
insb
lock
cmpsb
jo
add
and
lret
or
repnz
inc
insb
andl
xor
mov
mov
cmp
jmp
icebp
xchg
add
stos
xorl
insl
jp
add
pop
icebp
int
mov
xor
and
inc
pusha
pushl
shll
dec
xor
mov
jae
mov
jns
mov
test
dec
repnz
enter
and
fimull
add
je
cs
scas
insl
xor
adc
sti
faddl
pop
test
cmp
xor
mov
mov
call
add
and
add
or
repnz
insl
pop
cmp
pop
or
idivb
fimuls
mov
xchg
dec
pop
maskmovq
idivl
mov
and
mov
xchg
testb
pop
cli
dec
push
inc
ffree
shr
adc
mov
inc
into
inc
testl
fstpt
outsl
fwait
cmp
dec
jo
push
sbb
sub
push
enter
call
testb
xchg
add
ret
cmpl
sahf
fcomps
xchg
insb
dec
int3
data16
inc
sub
mov
adc
es
or
sbb
pop
dec
pop
xchg
sub
add
push
push
mov
pop
add
ret
mov
mov
sub
pop
push
shlb
lret
and
incb
xor
cs
je
pop
cld
imul
cmp
jbe
mov
andb
inc
adc
out
subb
sbb
pop
add
incb
mov
push
pop
pushf
mov
cmpsb
es
mov
xor
jo
mov
stos
xchg
js
popf
rcrb
add
gs
loop
and
push
xchg
js
cmp
adc
pusha
mov
test
adc
popa
push
pop
cmp
cmp
jo
gs
add
cs
push
push
fdivrp
mov
cmp
ret
adc
dec
add
sub
add
cltd
mov
inc
xor
das
mov
cmp
jae
mov
cld
repnz
jno
lret
pop
imulb
lret
xor
sub
lcall
jmp
dec
sbb
mov
sub
sub
push
call
or
jge
mov
outsl
pop
mov
or
add
mov
or
xor
mov
ret
js
pop
repz
push
or
mov
stos
or
or
or
out
loopne
cmp
notb
jg
mov
inc
mov
out
jbe
adc
in
in
xlat
mov
stos
push
or
mov
jle
aam
add
cld
sarl
push
push
push
decl
cmp
ja
jp
cmp
jbe
mov
push
decl
lds
pop
sti
jmp
xchg
mov
or
pop
arpl
sub
xchg
xchg
adc
cwtl
push
aaa
or
mov
sbb
cwtl
aad
stos
mov
mov
push
mov
push
push
add
push
shrl
xchg
les
dec
testb
push
pop
sbb
push
and
ret
test
loop
loopne
fidivrl
cmpsb
in
js
pop
fwait
or
lret
xor
inc
test
mov
jno
cmp
mov
call
inc
call
pop
pop
xor
adc
push
shlb
pop
adc
push
bound
js
mov
pop
popa
popf
push
jg
ffreep
jecxz
cmp
movl
add
adc
and
jbe
add
mov
xchg
or
rcr
call
jbe
dec
push
mov
add
xor
push
movsb
ja
add
xchg
and
mov
cli
sub
push
incl
sbb
mov
jbe
test
sti
add
mov
dec
fwait
add
arpl
cmpsl
aas
dec
add
or
xor
push
push
add
ret
popa
mov
repz
mov
or
push
addl
es
incb
or
fdivs
hlt
lds
inc
fcoml
loopne
loopne
sbb
cmp
insb
call
mov
mov
shr
push
sub
fmulp
imull
add
mov
and
mov
call
lret
push
sahf
in
in
mov
mov
std
xorl
sub
xor
std
add
cs
push
pop
adc
push
test
icebp
jmp
mov
push
dec
cli
out
outsl
sbb
mov
mov
rclb
call
ds
std
cmp
sub
lea
or
sub
aas
inc
cld
adc
jbe
jnp
outsl
push
call
sub
add
fimuls
out
outsl
pop
insb
in
fdivrl
cmovs
mov
pusha
rcr
data16
daa
push
jl
pop
adc
hlt
and
lret
jle
cli
xor
repz
add
lock
sub
xorb
adc
rorb
insl
nop
push
mov
ret
pop
shll
jno
xor
je
sbb
mov
pop
shl
xchg
andb
jnp
sbb
add
add
inc
mov
bnd
hlt
jmp
xchg
push
xchg
add
xchg
ja
es
push
repnz
ljmp
scas
call
fimull
sbb
push
cmp
dec
add
push
nop
call
dec
in
inc
jmp
outsb
aam
loope
mov
jbe
push
push
inc
ss
ja
or
add
or
addb
pusha
das
mov
mov
xchg
jg
pop
dec
int3
adc
cmp
movsl
mov
je
js
test
je
inc
fcoml
push
or
mov
insl
pop
jecxz
push
inc
inc
push
and
dec
mov
lcall
subl
push
shlb
push
push
bound
adc
adc
mov
cmpsl
jne
add
outsb
movsb
loopne
orb
int
addr16
adc
or
push
loope
xchg
divb
int3
lea
and
jno
pop
xorb
xlat
jl
or
pop
mov
sahf
xor
loop
sub
fs
dec
subb
nop
call
stc
jne
add
pop
inc
xchg
cs
test
les
push
push
shl
lcall
cmc
push
nop
test
enter
xchg
lahf
mov
stc
push
call
js
mov
movb
stos
loope
pushf
cmp
jbe
mov
adc
pop
movsb
inc
cmp
out
insb
cwtl
inc
adc
sahf
cmp
scas
push
dec
out
xor
cmp
jbe
push
push
sti
mov
js
insb
push
inc
mov
mov
add
pop
jg
push
mov
inc
jmp
mov
jbe
or
inc
mov
pop
mov
je
inc
dec
sub
daa
ficoms
lret
push
pop
fisubl
inc
test
and
lea
or
add
scas
adc
ljmp
add
sbb
push
push
pop
add
push
inc
incl
mov
or
push
add
mov
mov
int
decl
out
sub
jl
inc
jb
push
pop
je
push
clc
add
adc
or
cmp
jb
ds
jbe
mov
loop
mov
je
addb
data16
leave
mov
jmp
push
lret
jg
add
xor
jae
mov
inc
xchg
sbb
fs
notb
mov
jne
std
lahf
jmp
movzwl
push
mov
push
adc
push
xor
push
fisubrs
out
ror
fs
hlt
xchg
mov
adc
repnz
sub
jle
cmp
vmread
jg
mov
andl
and
es
cmpsl
or
data16
pop
push
pop
sbb
or
iret
mov
pop
test
cmpsb
cmp
sbb
pop
call
shlb
jmp
jne
mov
mov
imul
sub
add
jo
fldcw
mov
pop
and
sbb
mov
sbbb
mulb
add
jp
xchg
jns,pn
call
aam
lods
iret
xor
mov
pop
stos
call
sub
das
in
stos
adc
mov
sub
dec
adc
mov
jne
das
adc
dec
cmp
stos
loope
jb
xor
push
call
jge
lods
in
xchg
hlt
es
das
fcoms
pop
cmp
les
jge
adc
xor
stc
ss
jl
dec
ja
stos
jne
push
dec
call
add
loopne
test
cmpl
jle
clc
cld
inc
jmp
jl
loopne
mov
orl
add
scas
push
sbb
sub
clc
adc
lock
ss
flds
mov
bound
ficomps
inc
fistpl
stc
push
aam
loopne
xorb
add
add
jg
jl
lock
sar
inc
daa
cmpb
sti
add
test
add
clc
aas
loope
or
test
in
notb
jne
rcrb
push
decl
xor
aaa
mov
add
bnd
shlb
sti
sarb
cmp
inc
sahf
loopne
pop
add
push
aam
sub
and
push
andl
cs
jmp
sahf
mov
ret
jg
sbb
inc
les
jl
sahf
add
outsb
or
dec
rolb
ficomps
adc
pop
es
in
sahf
decb
fadds
faddl
out
movsb
rol
dec
lods
mov
pop
xchg
jo
cmp
mov
outsb
leave
sbb
bound
es
rorl
cmpsb
push
lock
dec
sbb
push
rclb
adc
out
add
add
test
cs
call
lds
push
es
call
push
adc
je
push
rolb
jbe
jp
inc
shrb
pop
mov
imul
push
or
int3
cmp
addb
and
mov
lea
or
push
push
test
sbb
mov
or
add
push
data16
decl
std
outsb
or
mov
stc
xor
test
inc
dec
push
pop
aam
cld
incb
test
adc
push
jne
mov
mov
cmp
push
and
dec
sub
inc
loopne
aaa
andl
inc
pop
sbb
mov
mov
add
inc
fsubs
or
aam
in
ss
mov
adc
es
outsb
fwait
push
std
jmp
jl
or
mov
icebp
pushf
std
xor
mov
ljmp
sbb
rorb
je
jge
mov
sbb
add
pop
ja
push
jle
mov
inc
jmp
or
add
xchg
mov
mov
rol
mov
jbe
mov
lods
dec
dec
adc
ss
call
into
pusha
or
idivb
cld
es
out
std
ja
call
inc
into
mov
outsl
mov
lret
addl
mov
jl
rclb
dec
cmp
jnp
call
xor
mov
loope
push
leave
ret
jl
lods
inc
data16
xor
push
push
in
push
cmc
cmpsb
fdivrl
cmp
dec
cmpsl
or
xor
lock
cld
es
jnp
fimuls
push
cld
leave
xor
inc
or
data16
scas
dec
cmp
push
in
lcall
clc
xchg
fdivs
push
jge
cmp
dec
mov
and
cltd
and
mov
cwtl
adcb
icebp
mov
stc
mov
push
push
shll
stos
and
add
sti
das
into
divb
pop
pushf
jne
jl
xchg
call
aam
fisttps
sbb
pushf
call
aam
es
repnz
je
push
push
sub
push
push
lds
dec
std
cmpsb
add
mov
inc
fiadds
add
ds
pop
in
inc
sub
jne
dec
cmc
push
adc
mov
add
int3
shrb
enter
dec
aas
lods
lea
cld
dec
enter
enter
jle
insl
push
mov
repnz
lods
cld
cld
push
daa
add
clc
jecxz
adc
push
popa
pop
popa
test
je
mov
stos
scas
cltd
mov
push
and
mov
pop
and
clc
and
loop
mov
cld
cmp
mov
sar
aas
cmp
add
add
add
sub
mov
fdivl
dec
inc
or
cmc
inc
scas
mov
sbb
test
push
orl
push
pop
cltd
push
mov
add
dec
dec
mov
mov
aaa
push
es
jmp
push
push
or
shr
inc
insb
pop
mov
out
jae,pn
push
inc
clc
shlb
or
add
jbe
sti
inc
xor
mov
push
je
mov
jne
ret
js
or
bound
clc
test
adc
mov
push
loopne
mov
ficoml
addb
jmp
add
pop
add
pop
push
inc
lock
int3
out
push
push
sbb
mov
fdivl
inc
call
add
add
or
inc
mov
icebp
ljmp
cmp
dec
and
inc
rolb
push
les
adc
inc
das
in
cmp
test
mov
or
insb
imul
jge
xchg
or
cmp
lods
shll
sarb
call
push
mov
add
ljmp
das
xor
or
filds
mov
mov
or
ja
fmul
jae
mov
xchg
mov
sbb
cmp
rorb
sarl
add
ljmp
pcmpgtd
fmuls
test
pop
je
xchg
sbb
sbb
jge
mov
lret
out
add
adc
cmp
dec
xlat
enter
lock
xlat
pop
cmp
adc
dec
paddsb
sbb
sbbb
loope
mov
or
dec
add
push
adc
loope
pop
lea
testb
dec
sbbb
jge
je
std
clc
cmp
jne
push
cld
je
pop
out
jge
lret
inc
jne
pop
xor
dec
addr16
and
in
push
hlt
dec
push
adc
aad
incl
mov
push
es
repnz
mov
ret
adc
xchg
cld
add
xchg
jmp
cld
ds
adc
jbe
dec
call
shll
fwait
push
shl
lods
pshufw
mov
mov
pop
pop
or
and
imul
add
add
inc
push
movsb
imul
sbb
imul
in
xchg
pop
clts
jmp
sbb
and
mov
testl
push
add
sahf
push
scas
lock
shrb
ljmp
cmp
xchg
lret
push
pop
shlb
sbb
push
xor
dec
lds
adc
int3
push
adc
adc
out
adc
push
je
and
adc
mov
divb
sub
out
ret
cs
or
and
jbe
push
call
push
adc
sub
push
xchg
jo
and
pop
mov
insl
mov
cs
dec
mov
pop
adc
scas
ss
push
dec
enter
xchg
orl
pop
call
sbb
repnz
aad
fisubl
add
and
xchg
enter
in
lret
fldt
rcrb
adc
xlat
sub
mov
mov
repnz
mov
lret
sbb
cwtl
shlb
sbb
xchg
lods
inc
add
aaa
ret
xchg
aad
cmp
fmuls
inc
cs
push
orb
stos
scas
jp
sub
call
ljmp
and
das
shr
mov
inc
loope
jns
scas
push
pop
add
sti
adc
aaa
add
hlt
outsb
add
mov
mov
je
push
insb
push
decb
adc
les
jmp
ja
or
stos
push
push
xor
cmp
shlb
push
pop
gs
and
xchg
call
test
aam
pop
mov
or
push
call
or
sub
int3
dec
ret
add
pop
and
jecxz
dec
or
orl
outsl
ljmp
jmp
or
fstpt
pop
jmp
and
mov
push
mov
loop
dec
inc
bound
loop
add
inc
fidivrs
jb,pt
mov
fistps
xorb
into
jne
bnd
jne
dec
ja
call
lret
jg
call
mov
sub
mov
inc
xor
add
push
insb
mov
ja
lret
push
sbb
xchg
xor
sub
je
pop
pop
sub
pusha
cmpsb
loope
pusha
dec
dec
or
dec
pop
fistps
push
add
mov
cmp
imul
sbb
sbb
test
lahf
rcrb
xchg
inc
add
das
and
fmulp
stos
pop
aad
data16
add
sbb
fsubrl
in
mov
mov
in
enter
add
sbb
lahf
pop
lock
cmovbe
pop
adc
push
push
aaa
nop
jg
data16
insb
inc
out
cli
stos
lock
sbb
repnz
add
mov
fs
insl
shlb
cltd
pop
jae
xchg
adc
xor
ss
jne
lock
data16
jb
or
sbb
push
inc
outsl
in
mov
mov
jb
xor
aas
pop
subb
mov
iret
push
cld
pop
clc
push
movb
mov
add
and
fbld
stc
add
inc
add
cmp
ret
jecxz
fwait
stos
enter
out
dec
adc
enter
adc
cmp
rorb
loop
loopne
adc
jb
repz
push
test
jae
pop
add
mov
sar
cmp
mov
push
and
je
or
or
jne
push
cld
push
mov
in
cmp
lret
mov
jmp
lcall
add
mov
xchg
pop
mov
je
adc
lsl
mov
ds
mov
add
js
jmp
shr
idiv
inc
inc
imul
inc
push
hlt
dec
push
or
mov
pop
mov
add
jb
add
or
lcall
add
scas
popa
mov
sub
cmp
in
push
fmull
loopne
ds
jbe
outsb
fildll
cwtl
stos
in
sarl
lock
scas
leave
jae
hlt
and
scas
mov
jl
or
dec
fdiv
pop
lods
clc
roll
push
mov
jmp
into
inc
mov
cmp
dec
push
push
pop
xor
outsb
jle
data16
pop
sub
shrb
add
mov
xchg
dec
out
push
push
pop
jbe
jmp
ret
insb
push
push
push
push
sub
sub
add
mov
sub
repnz
inc
int3
stos
xor
rcll
cld
or
pop
mov
xor
push
test
outsb
loope
jmp
mov
cmp
test
jnp
mov
or
sub
adcl
lahf
outsl
mov
xor
pop
es
mov
sbb
js
pop
lea
xor
xor
inc
adc
or
addb
daa
notrack
pop
cli
add
jnp
pushl
leave
jmp
shr
lea
cld
ds
je
cmp
add
sbb
or
in
or
add
jns
and
mov
rolb
and
loop
xchg
cs
push
js
sbb
inc
sti
xchg
adc
cmc
push
cmc
push
inc
decb
push
scas
dec
ljmp
cmp
push
pop
mov
out
cmpb
jl
adcl
push
movsb
inc
push
dec
dec
imul
adc
das
inc
repz
je
and
outsb
pop
or
je
jbe
inc
lea
ja
push
inc
and
inc
and
cltd
pushw
lods
fld
pop
push
xchg
shlb
add
incb
jbe
mov
cmp
pop
cmp
aad
cmc
add
mov
pop
or
and
push
aaa
or
scas
push
jl
roll
and
pop
aam
iret
in
imul
les
popf
and
aas
hlt
pop
mov
adc
xor
pop
scas
daa
sub
incb
shrb
sub
inc
or
mov
jne
mov
fidivl
jbe
push
add
icebp
adc
xor
sub
loope
outsl
adc
adc
push
adc
or
dec
in
push
call
push
movsb
in
or
dec
jle
cmp
sbb
stc
fdecstp
out
int
push
sbb
icebp
inc
call
es
dec
push
inc
push
xor
shlb
mov
shr
hlt
rorl
loop,pt
or
jb
mov
adcb
in
and
dec
inc
ss
shrb
push
push
or
fbld
push
jns
sub
mov
push
mov
lahf
popa
jl
add
push
les
pop
pop
push
push
dec
nop
sbbb
xchg
ja
ljmp
into
in
push
fs
call
outsl
loop
ficomps
jb
enter
pop
push
mov
clc
adc
int
dec
inc
xor
jb
pop
mov
inc
int3
call
mov
in
call
cltd
adc
inc
mov
rcrl
fwait
xor
std
pop
mov
into
data16
xchg
mov
call
inc
push
in
test
pop
mov
enter
jl
adc
mov
mov
push
shl
das
iret
loopne
test
and
cmpsb
hlt
lret
xor
out
mov
loopne
sub
push
push
and
je
and
mov
adc
fidivrs
outsb
dec
lret
mov
mov
scas
scas
rorl
cmp
daa
mov
stc
das
shlb
lea
divb
sti
dec
faddl
insb
jnp
push
xor
jb
insl
dec
popa
jne
mov
or
adc
inc
in
cmp
dec
or
mov
loopne
insl
xchg
mov
or
xchg
pushf
cltd
sbb
dec
dec
add
and
test
adc
inc
sahf
mov
mov
pop
popa
sbb
loop
adc
in
flds
inc
mov
add
inc
and
mov
mov
fisttpl
xchg
inc
test
push
pushf
mov
pop
mov
cmp
mov
out
and
push
adcl
ret
outsb
or
cmp
aaa
push
adc
adc
push
ja
sub
ret
jo
pushf
cs
pop
mov
mov
push
jo
cs
sbb
push
ret
dec
lahf
jns
jp
lsl
push
and
pop
in
lret
mov
inc
js
dec
cmp
mov
out
iret
je
push
adc
movsl
inc
pop
pusha
dec
push
sbb
adc
inc
mov
movsb
mov
xlat
xor
imul
and
mov
clc
dec
xor
cmpw
dec
cltd
or
pusha
loopne
arpl
cwtl
insb
or
push
xchg
lahf
scas
nop
cwtl
cmp
dec
clc
push
adc
add
mov
jne
bound
jne
mov
out
divb
lea
push
pusha
adc
mulb
sbb
in
data16
rorl
xchg
lds
nop
aam
scas
ljmp
jmp
add
push
sbb
xor
sti
shll
lahf
sbb
dec
mov
imul
in
sarb
cwtl
push
cs
mov
mov
mov
nop
dec
xchg
mov
cld
jp
testb
js
rclb
pusha
add
sub
mov
and
ljmp
jae
mov
sub
pop
xor
inc
pop
sub
xor
lock
add
sub
pop
mov
into
jmp
int
cmp
mov
scas
or
jae
jmp
dec
roll
jecxz
inc
flds
leave
inc
push
or
repz
call
mov
decl
adc
adc
cltd
cmp
mov
les
decl
add
fdivs
lock
and
ljmp
cmp
xor
cmp
mov
dec
jl
push
cmpl
jmp
int3
leave
and
outsb
clc
data16
movzbl
or
mov
sarb
and
leave
inc
cli
sti
data16
or
lock
mov
ds
or
xor
fs
add
inc
adc
shlb
pop
dec
and
add
hlt
lock
mov
call
into
incl
mov
and
insb
push
negb
add
lock
mov
sub
repz
ljmp
xor
adc
rorb
add
lret
jecxz
sbb
cmp
xchg
adc
or
xchg
dec
cmc
mov
lods
jmp
cs
mov
or
ljmp
lcall
mov
cmpsb
mov
pop
add
dec
in
xor
lret
shl
cmpb
sub
dec
fsubs
sbb
cmp
push
sbb
aas
push
cmpsb
dec
mov
push
fdiv
inc
lock
orb
in
xorb
xor
inc
dec
imul
adc
mull
in
cmpsb
mov
xchg
enter
out
adc
icebp
test
mov
hlt
add
xchg
xchg
add
das
data16
pop
rcl
dec
add
xor
in
mov
adc
or
sbbb
arpl
rorl
rclb
inc
dec
cltd
loopne
or
dec
clc
ds
lea
mov
sbbl
jns
or
leave
mov
popa
sbb
xor
push
mov
int
ljmp
mov
mov
ds
pop
and
or
jns
shl
es
and
or
mov
mov
decb
push
jne
mov
add
fistpll
dec
dec
jb
jmp
scas
je
dec
mov
aad
loope
je
and
hlt
into
sahf
out
jp
xchg
push
mov
xlat
clts
hlt
into
or
out
in
xor
jl
sbb
or
sbb
divl
xchg
mov
test
and
les
stos
push
test
mov
push
sbb
fsqrt
data16
orb
shlb
orl
adc
mov
and
push
push
or
pop
dec
push
push
idivb
notb
xorb
jg
lock
bound
push
inc
mov
or
add
mov
cld
inc
mov
pop
push
call
pop
pop
idivl
imul
in
call
mov
jmp
push
call
jmp
punpckhbw
push
scas
je
mov
inc
bound
jb
push
cmp
or
incl
adc
cmp
mov
inc
mov
xor
les
lods
inc
adc
rcl
cs
movsl
scas
ficomps
xor
xorl
mov
mov
inc
bnd
push
inc
out
or
add
divl
addl
je
jl
or
mov
cmpb
jne
imul
push
fldl
aaa
fisttps
push
jl
or
adc
pusha
fistl
out
mov
stc
jp
sbb
fsubs
sbbl
adcb
lcall
adc
mov
adc
inc
dec
mov
movsl
cmp
ss
adc
shlb
mov
bnd
std
sub
fnstcw
fsubl
aas
cmpl
test
daa
and
and
jg
push
add
xor
push
mov
mov
and
test
sbb
out
hlt
inc
push
add
stos
add
test
cld
mov
xchg
or
test
cs
add
or
or
js
icebp
push
pop
fistpl
mov
test
jnp
pop
das
adcl
cmp
xor
add
dec
push
xor
inc
mov
call
push
insl
add
and
cwtl
stos
pop
scas
xchg
mov
push
jb,pt
inc
adc
bound
lea
in
cmpsl
cs
test
mov
push
enter
sbb
rolb
popa
cld
js
lea
xchg
inc
mov
xchg
or
ret
popa
je
pushl
cmp
add
and
push
xchg
test
lret
mov
das
sbb
mov
or
inc
les
adc
jne,pn
movsb
add
mov
mov
pushaw
pop
xor
mov
mov
mov
lock
ljmp
sub
mov
fsubl
pop
mov
aam
add
pop
sub
or
clc
push
test
push
xor
sbb
push
fdivrl
je
sub
outsl
mov
xor
fcomps
dec
mov
out
xor
ret
mov
decl
fdivs
mov
ja
push
lea
das
mov
mov
sub
pop
push
rorl
loopne
or
or
icebp
add
popf
or
mov
mov
int3
jne
pop
pop
adc
pop
mov
call
lea
jmp
adc
shll
lock
add
dec
inc
add
push
insb
add
incb
push
test
mov
lea
sub
imul
call
adc
mov
push
sub
loop
popa
ss
dec
je
mov
dec
push
jbe
out
jg
sub
xchg
push
push
aam
jb
test
dec
stos
rorb
lods
or
add
pop
shlb
push
jae
push
enter
cmp
lcall
push
scas
call
push
cmp
iret
fwait
push
or
mov
cmp
fildll
mov
push
hlt
imull
jp
sti
jb
dec
mov
aam
or
pop
lea
jns
mov
push
pop
pop
pusha
repz
mov
inc
adc
push
ret
pop
sar
sti
mov
fidivs
push
pop
je
jbe
mov
push
inc
sti
mov
xchg
jo
dec
mov
xchg
adc
sbb
decb
xchg
sub
fs
jp
pop
jne
test
add
adc
cmpsl
cmp
hlt
lea
pop
cmp
add
jecxz
push
je
mov
sbb
scas
ljmp
cmpsb
call
xor
push
push
sub
data16
in
and
mov
jae
vmwrite
pusha
push
lret
mov
orl
testl
fwait
add
sbb
sub
cld
pop
cmp
jb
shl
mov
imul
fimull
mov
cmovs
pop
jne
lea
adc
push
imul
cli
inc
lcall
fcom
pop
mov
adc
push
adc
iret
push
je
push
add
or
stos
jmp
pop
movsb
mov
inc
and
roll
add
loop
mov
jmp
mov
or
cmp
dec
inc
add
mov
push
push
call
pop
cld
jge
mov
cmp
cmp
data16
icebp
cmp
push
daa
cmp
addb
xchg
add
lock
push
insb
adc
aam
in
ljmp
cmpsb
and
jbe
sub
out
jle
testb
fs
mov
sbb
cmp
insb
ljmp
ss
test
pop
pop
xorl
cmp
test
and
dec
xlat
out
xor
mov
and
fsubrs
cmp
push
testb
xchg
pushf
pop
jne
sbb
aaa
nop
inc
mov
cmp
das
and
je
pop
mov
cmp
jecxz
fmull
pop
or
jg
mov
es
out
clc
pop
or
ds
adc
and
idivb
push
and
xchg
dec
or
xlat
push
add
jecxz
mov
ret
add
mov
add
push
jb
jmp
mov
std
out
call
or
lcall
es
sbb
cli
xchg
inc
cmp
cmp
inc
or
mov
call
call
test
adc
adc
movsl
push
jmp
sarb
mov
jbe
test
insb
ret
nop
sbbb
lcall
jbe
mov
cmp
jmp
test
mov
inc
cmpb
mov
inc
push
xor
sbb
jle
test
add
adc
and
mov
call
push
insl
int
push
push
adc
sub
mov
jge
xlat
and
push
mov
xor
mov
stos
and
mov
cmp
loop
ljmp
adc
push
adc
addb
xchg
adc
push
mov
pop
jle,pn
push
xchg
pop
push
clc
lea
mov
das
and
or
mov
rolb
jmp
or
adcl
push
enter
adc
pop
cmp
jb
lret
jle
push
pop
mov
mov
imul
jecxz
loopne
pop
xor
lods
lahf
lea
pop
sahf
pop
dec
std
and
pop
movl
push
jl
mov
movsb
arpl
jg
shl
and
mov
mov
mov
dec
push
mov
mull
mov
rolb
adc
and
add
loop
sub
adcl
mov
clc
dec
jmp
adc
sti
mov
cmpl
neg
in
and
mov
movsb
loopne
sbb
jl
add
hlt
subb
jb
adc
add
mov
lret
xchg
adc
scas
je
mov
adc
push
or
repz
sbb
call
addb
fsubs
inc
cmp
cmp
pop
pop
rorb
sbb
test
out
xor
js
mov
add
sub
mov
subb
dec
push
lods
cmp
adc
xchg
add
mov
ss
xlat
mov
subb
inc
cmpsb
add
loop
mov
sub
xlat
cmp
or
imul
jne
loope
sbb
lock
or
ficoml
arpl
cld
pop
pop
or
xchg
ret
ret
outsl
mov
inc
out
fisttps
push
outsb
sbb
rep
jns
sub
xchg
mov
es
mov
jmp
mov
jne
mov
mov
je
mov
pop
pusha
pop
add
je
and
jb
data16
fwait
and
xchg
lcall
stc
add
inc
sbb
sub
inc
cli
call
aas
and
inc
aaa
mov
js
mov
imul
cld
push
cmpb
jge
push
clc
sbb
pop
push
push
call
adc
add
adc
mov
mov
sub
inc
or
mov
push
hlt
out
mov
adc
outsl
je
jl
add
andb
jge
mov
sahf
in
mov
jmp
lock
je
call
and
test
clc
ss
pop
repz
add
sbb
or
pop
cli
shll
add
sbb
es
stc
push
test
lods
mov
adcb
add
lods
adc
js
lea
push
cmp
or
mov
xchg
idivb
add
fs
push
push
push
jb
shr
js
or
adc
xchg
jne
movsb
sahf
pop
cmp
popf
je
push
orl
pop
or
ds
add
adc
xorl
hlt
cli
jle
cld
xor
les
add
push
adc
cmp
mov
adc
pusha
hlt
mov
mov
push
rorb
xor
jmp
dec
and
inc
lahf
jle
dec
out
pop
mov
andb
lea
xchg
dec
ljmp
leave
mov
xchg
lock
cli
push
dec
mov
addr16
xchg
cmp
ret
push
loopne
push
cmp
xchg
stos
add
dec
pop
pusha
ss
insl
hlt
jno
aas
fsubl
push
and
subb
adc
andl
test
dec
test
mov
push
jmp
sbb
lock
loope
packssdw
adc
roll
rorb
loopne
sti
cmp
or
pop
mov
cmp
inc
jb
clc
flds
fsubr
xchg
hlt
mov
mov
cmp
lock
scas
mov
dec
cmp
testl
ss
pop
sub
icebp
pop
clc
mov
sarb
or
insb
inc
addr16
inc
ret
mov
nop
adc
hlt
xchg
cwtl
clc
mov
push
mov
shlb
xchg
pusha
mov
add
test
call
push
push
mov
fiaddl
fmuls
cmc
push
rorb
cmpsb
or
or
xchg
leave
bound
push
daa
je
adc
out
in
fcoms
xlat
test
rorl
rorb
pop
xor
mov
test
adc
ret
in
mov
jl
popf
add
lret
adc
pop
mov
or
cmp
mov
mov
pop
in
mov
sbb
clc
push
shlb
and
ds
mov
enter
ret
rcrb
mov
mov
jb
call
xlat
decb
lock
fadd
xchg
or
xor
adc
xchg
xor
rolb
mov
stos
add
jmp
int3
dec
xchg
cmp
add
pop
les
insl
fdivr
sub
jne
shlb
xchg
adc
sbb
pop
mov
pusha
mov
rclb
mov
mov
add
adc
mov
dec
test
sti
jb
jmp
xchg
xchg
push
or
push
fs
adc
cmp
xchg
mov
das
or
testb
fdivs
push
adcb
fs
test
sarb
push
mov
pop
cltd
incl
or
adc
jo
and
add
push
or
inc
fcoms
outsb
arpl
test
add
mov
addl
xor
inc
loopne
xchg
clc
out
push
inc
rorb
push
adc
mov
adc
sbb
pop
sub
icebp
pusha
ja
pop
xchg
into
jle
div
call
lcall
xchg
mov
idivb
popa
adcl
xchg
aas
cmp
ja
jl
loopne
out
or
or
pop
adc
sahf
loope
and
push
mov
inc
ljmp
push
push
xorl
scas
and
loope
sub
fcom
imul
loopne
cwtl
lods
push
pop
cld
jp
pusha
sub
mov
push
or
sub
call
pushf
or
std
push
cmp
mov
incb
jecxz
and
and
or
vmulss
sub
adcb
push
adc
loop
pop
out
dec
pusha
sbb
cmp
jbe
inc
popa
push
jmp
dec
mov
sar
pusha
push
mov
cs
aaa
inc
jb
ljmp
divb
dec
mov
sbb
sub
call
mov
sub
fcmovu
push
mov
pop
or
sbb
inc
es
fs
add
lods
ja
or
mov
xor
incl
adc
inc
lds
enter
and
and
pop
mov
scas
push
xchg
sub
test
shr
jne
push
pop
data16
push
jmp
push
stos
cmp
dec
mov
call
add
pushl
cwtl
xor
adc
in
or
mov
cltd
add
sarb
movsb
or
loope
std
jecxz
add
jbe
loopne
shlb
inc
clc
mov
xchg
call
rclb
loopne
test
mov
fcoml
add
jle
call
inc
mov
mov
pop
pop
add
repz
jno
or
push
and
clc
scas
mov
push
loopne
jne
xor
and
lods
in
call
pushf
pusha
imul
pop
pusha
xor
repz
push
scas
mov
and
js
add
jmp
bound
shl
pop
xchg
rorb
inc
insb
and
lock
ljmp
rorb
add
push
orl
push
adc
inc
pop
jecxz
repnz
in
mov
pop
lock
xchg
loopne
js
mul
sbb
mov
jmp
pop
lods
andl
aam
add
aaa
sbb
add
mov
push
push
js
icebp
jecxz
inc
mov
icebp
dec
ror
xchg
cld
jle
add
addl
ja
loopne
das
orb
outsl
or
je
jl
sbb
adc
lods
mov
lahf
adc
pop
js
jb
pusha
shll
push
roll
add
push
stos
ljmp
test
push
jo
popa
dec
ret
cmp
mov
sub
mov
les
cmpl
adc
pop
inc
and
dec
add
pavgw
fildl
lcall
jo
or
popa
out
xor
shl
add
sti
add
in
adc
push
mov
sarb
ljmp
push
or
repnz
idivb
cmp
scas
push
mov
add
rclb
pop
push
loop
add
cmp
cltd
mov
mov
mov
loopne
adc
sbb
shl
sub
or
and
push
sar
fwait
ds
or
add
cwtl
mov
mov
add
push
test
sbb
movb
lock
jecxz
dec
add
mov
push
lea
xor
jb
and
bound
xor
mov
dec
mov
push
sub
fs
fcmovu
or
dec
inc
popa
jbe
lock
inc
ljmp
icebp
add
fstpl
or
push
cld
inc
push
push
in
movsl
cmp
pusha
or
pop
or
push
call
pop
push
pop
adc
lret
scas
test
lock
addl
xchg
add
pop
pop
repz
xchg
and
cmpsb
jo
push
xchg
or
cs
push
jo
mov
imul
pop
pop
sbb
or
out
sub
cmp
jo
js
fldt
xlat
dec
movsb
pop
das
clc
out
cli
call
hlt
adc
add
sbb
sub
std
xchg
sub
and
jle
outsb
shrb
inc
jle
cmp
adc
lea
data16
sti
ja
add
pop
and
push
jl
sub
jmp
lods
dec
jg
lods
or
mov
add
mov
adc
ljmp
mov
or
xchg
push
lods
movsb
outsb
jmp
mov
or
ret
push
push
mov
push
lea
add
add
fdivr
add
or
add
icebp
pusha
push
lahf
repnz
and
add
hlt
push
dec
js
incb
mov
pop
shl
mov
mov
fs
data16
test
lock
mov
ret
sbb
add
or
lock
and
xchg
repz
cmp
push
xorl
and
cld
xor
mov
js
jmp
inc
clc
cmpl
inc
add
je
je
cmp
mov
mov
push
jb
ljmp
aam
cli
ja
adc
mov
jge
inc
inc
cld
aaa
mov
insb
pop
add
xor
inc
mov
add
test
cwtl
loope
mov
push
xor
sbb
add
cld
fbstp
or
add
xor
lea
pop
mov
loopne
inc
mov
les
xor
hlt
filds
test
jle
xor
jb
add
mov
aaa
add
mov
adcb
add
jo
inc
mov
sub
aaa
ret
lock
xor
js
mov
jg
pop
dec
sbb
je
sub
adc
and
cmp
nop
std
jbe
jo
testl
jb
mov
cmp
sti
jb
lock
add
in
adc
sub
pop
jg
dec
fisubrl
enter
xchg
in
sbbb
bnd
inc
loop
call
adc
mov
fbstp
jo
jne
xor
or
inc
out
loope
decl
add
add
sbb
jl,pt
xchg
pop
adc
xchg
add
jg
loopne
jne
jbe
lret
mov
cmpb
int
push
pcmpgtb
cli
addb
cmpsl
je
jb
fadds
cmp
jne
ret
or
mov
mov
push
mov
and
cli
jb
push
cs
jne
push
je
sub
mov
andb
adc
xchg
je
add
dec
adc
pop
pusha
and
xchg
adc
xor
cmpsb
cld
push
push
in
pop
or
and
add
adc
inc
push
cmp
aaa
mov
call
add
mov
mov
inc
xlat
call
adc
loope
add
sbb
and
cmp
sbb
test
adc
and
cmovs
mov
or
jb
mov
mov
pop
cmc
cmpsb
cmp
push
cmpb
cmp
in
add
add
clc
dec
xchg
shlb
fnsave
mov
sub
mov
clc
fnstsw
adc
or
jb
orb
pop
push
cmp
add
out
adc
dec
mov
outsl
adc
mov
sub
es
dec
inc
jo
push
divb
je
fisubrs
mov
cld
add
mov
xor
add
je
sar
cwtl
add
test
xchg
cmc
xor
pop
sbb
push
xchg
mov
inc
ret
addr16
psubq
push
repnz
clc
repnz
je
add
rcll
sahf
incl
add
sahf
jmp
clc
jmp
sub
mov
jo
je
add
es
push
ret
icebp
jns
jmp
and
sbb
fstl
andb
sub
cmp
mov
adc
mov
dec
mov
push
ljmp
inc
sbb
outsb
pusha
xchg
stos
push
stc
or
jbe
pusha
xlat
sub
and
jecxz
xor
je
roll
add
add
xor
pop
imul
pop
lret
and
enter
adc
icebp
xor
or
cmpsl
dec
repnz
adc
fsubs
inc
add
push
mov
inc
iret
dec
in
pop
inc
std
jb
xor
call
jge
repnz
inc
cltd
xor
insb
mov
bound
jno
repz
or
adcb
mov
insb
test
test
jo
in
mov
xchg
xor
pop
loopne
add
push
mov
stc
icebp
rcl
xchg
test
lock
lock
jo
and
arpl
das
adc
jl
jmp
outsl
sahf
int3
mov
jmp
mov
add
dec
mov
mov
inc
xor
add
test
iret
add
pop
push
inc
les
rcrl
sbb
inc
push
push
shll
sub
mulb
shll
je
mov
repz
test
inc
cmp
adc
ret
mov
loopne
repz
inc
inc
scas
lods
adc
leave
xchg
mov
lock
rorl
aas
pop
xor
and
mov
shll
xchg
dec
sbb
repnz
inc
sub
sbb
mov
dec
fisubl
push
rclb
jmp
cmp
push
adc
sbb
sbb
rolb
adc
sub
das
test
mov
push
lock
lret
sbb
mov
and
scas
xor
adc
or
sbb
or
test
xchg
or
mov
jo
sbb
jp
sarb
lock
dec
add
js
sub
inc
les
in
or
sub
xor
jo
mov
lea
xor
mov
cli
cmp
repnz
mov
jnp
sbb
xchg
addb
insb
mull
adc
sub
inc
or
sbb
adc
aas
mov
loopne
daa
test
jg
sub
push
xor
xor
call
cmp
in
pop
sahf
and
pop
repz
testb
cmpsl
cmp
hlt
repz
push
dec
adc
clc
lods
mov
mov
cltd
mov
mov
ret
dec
test
sbb
test
jle
pop
lahf
inc
fmul
push
mov
push
inc
stos
pop
or
dec
divl
es
ret
mov
or
imul
js
adc
clc
and
test
xchg
cmp
call
test
sub
pop
aas
ljmp
in
call
ss
sbb
sub
sub
call
dec
or
jns
jo
jo
jo
out
outsb
enter
or
push
add
out
cmp
xor
xchg
push
inc
jo
mov
aam
mov
or
xchg
xor
ror
sub
call
sarb
jb
ret
scas
add
sbb
mov
ja
or
pop
mov
push
pop
sub
mov
cld
pop
xor
cld
push
mov
mov
inc
pop
mov
inc
push
xchg
inc
and
cltd
in
push
loope
testb
pop
je
lods
out
pop
jno
mov
cmp
inc
and
inc
or
rolb
ret
xchg
aaa
fadds
or
or
or
jb
lcall
sub
xor
mov
cmp
jmp
outsl
jbe
add
jne
je
inc
mov
out
xor
scas
subb
inc
jecxz
mov
inc
xchg
mov
inc
push
ljmp
test
push
or
mov
in
pop
stos
push
movl
mov
ja
hlt
inc
mov
cmp
and
jb
jbe
adc
mov
cmp
jb
add
shrb
add
push
mov
mov
sbb
mov
add
clc
decl
add
sbb
cmp
jne
cmp
int
inc
add
jo
mov
ret
lods
lock
call
mov
adc
je
sbb
stos
pushl
pop
adc
je
notb
jb
mov
add
and
adc
out
add
push
push
add
push
push
pushf
and
mov
push
clc
sbb
jb
arpl
cmp
loope
mov
je
in
sbb
je
addb
js
es
or
adc
jl
cmpsl
test
and
dec
or
pop
cmp
into
inc
mov
inc
shrb
pop
ss
cs
in
loope
inc
or
pop
dec
sti
cmp
mov
jl
inc
hlt
inc
or
lods
or
jb
sbb
mov
sbb
das
jp
movsb
push
push
xlat
pop
or
sub
jae
cmp
test
bound
dec
jmp
dec
pop
jle
push
call
inc
aam
mov
enter
fstpl
aaa
or
jbe
jo
push
cli
xor
loopne
jbe
sbb
fwait
test
jl
inc
les
inc
jmp
pusha
sahf
out
sbb
sub
sub
pop
mov
rcll
aad
pop
call
sti
mov
adc
push
cmpl
xchg
addr16
and
std
push
scas
call
sub
lods
mov
test
ret
adc
cli
cli
inc
inc
jl
push
push
push
out
cwtl
or
cmp
stos
sub
loopne
jnp
imul
fucomip
enter
fwait
add
mov
call
shll
test
dec
sbb
push
sub
scas
inc
add
add
testb
fsubrp
sbb
xorl
pop
popa
add
rorb
std
sbb
lock
inc
fcmovb
filds
repz
int3
std
and
sub
inc
outsb
sub
and
pop
ret
and
mov
push
js
add
sub
psubsw
shrb
and
roll
fimuls
pop
test
sub
sub
daa
mov
xchg
stos
aam
movsl
nop
mov
pop
add
mov
sub
iret
push
sahf
add
jmp
xchg
pop
pushf
es
fstpt
jo
mov
jle
xor
lea
jecxz
scas
xor
ds
jle
into
add
push
pop
fcmovb
test
std
pop
or
mov
test
ds
jle
les
aaa
stc
xor
add
jg
sbb
jg
outsl
call
adc
dec
loope
mov
lock
or
pop
pop
inc
sub
sub
xchg
or
and
ret
jmp
pop
ds
mov
adc
inc
je
test
pop
and
xchg
sbb
push
test
int3
dec
cmp
sub
mov
nop
xor
das
or
ja
mov
adc
mov
xor
loop
pop
int3
lcall
mov
adc
ds
adc
sti
lds
push
pop
jg
das
inc
shlb
cmp
mov
cs
mov
xor
adc
sbb
mov
jmp
mov
jb
mov
movb
ret
decb
fnstenv
add
nop
dec
cltd
cmp
mov
push
ficompl
sbb
xor
pushl
xor
cli
stos
cmp
fsubrl
and
mov
mov
jb
pop
movsb
pop
jno
xorl
mov
mov
mov
pop
mov
cmp
mov
enter
iret
push
aad
cld
add
mov
lcall
stc
movsb
lock
in
add
testb
adc
sub
stc
push
sar
lret
loope
xlat
fistps
mov
add
or
mov
jle
sub
ds
cmp
mov
jne
mov
and
or
cmp
mov
inc
jns
add
test
sbb
cld
lock
clc
mov
aas
jbe
push
ud0
adc
adc
mov
rcr
cmp
cmp
or
fsubr
add
mov
stos
stc
and
mov
rcrl
push
push
lock
or
add
fldt
jl
ja
cmc
jbe
inc
dec
add
loop
rcll
bound
jne
outsl
dec
dec
cmp
xor
jl
aas
mov
sub
ret
adc
add
popa
pop
in
sub
jne
inc
jbe
add
bound
dec
push
pusha
jmp
dec
add
pop
or
mov
xor
cmpsl
xchg
add
cmp
lea
xchg
mov
pop
shll
test
mov
xor
fbstp
xor
test
jne
sbbb
hlt
je
cmp
jmp
lock
lea
ret
dec
ja
out
rorl
pop
icebp
or
repnz
jb
shrb
dec
mov
lds
addb
mov
inc
cmp
jl
sub
sbb
mov
mov
aas
fistpll
or
push
cli
mov
push
or
mov
cmc
ret
lea
call
jle
mov
jne
or
add
mov
cmp
push
mov
loopne
jmp
lock
adc
js
hlt
cmpsb
pop
cmp
mov
cmpsb
fdivrp
jbe
lea
inc
jb
ss
sbb
inc
mov
pop
cmp
adc
mov
lods
call
jne
push
xor
aaa
lods
iret
or
dec
mov
addb
push
push
test
ja
and
bound
pop
insl
mov
ficoms
test
rcll
fs
insb
into
add
cld
push
mov
push
mov
push
sbb
add
mov
add
mov
data16
ja
add
ret
das
push
add
mov
adc
incl
inc
pop
loop
mov
sbb
push
fildl
rcll
loop
pop
or
or
sbb
cld
push
push
push
push
xchg
jecxz
addl
mov
jne
je
call
idiv
sbb
push
push
push
jmp
and
jle
jecxz
mov
jl
jg
dec
sbb
in
dec
cmp
push
jb
add
icebp
shl
sbb
adc
testl
and
pusha
cld
test
sarl
jg
mov
push
fistl
popf
test
add
das
pop
div
or
push
jo
rcrb
call
add
jle
call
xor
je
add
push
add
pop
cwtl
mov
mov
fwait
add
adc
cmpsb
pop
test
mov
call
mov
push
mov
call
ds
scas
hlt
fisubrs
cli
iret
pop
ret
sti
xor
xchg
fwait
js
cld
dec
mov
rcll
push
mov
adc
je
ss
cmp
add
xor
femms
cltd
mov
jle
insb
adc
push
call
push
add
push
or
icebp
loop
cmp
lock
rorb
push
ret
sub
jbe
inc
push
push
cmp
add
pusha
scas
ja
enter
add
add
push
adc
fisttpl
adc
fisttps
hlt
pop
xor
rcrl
dec
es
push
dec
adc
rolb
dec
mov
inc
push
ret
push
or
in
xor
jbe
inc
push
add
jne
add
rorb
sub
enter
xchg
push
sub
push
in
jl
add
xchg
lret
or
push
fists
cmp
mov
sbb
rolb
cwtl
mov
fmuls
sub
cld
pop
add
test
movsb
loope
mov
orl
clc
call
mov
and
inc
sub
in
cld
jmp
pop
xor
mov
push
adc
cmp
mov
sbb
fxrstor
and
outsb
pop
xorl
adc
push
loope
and
pop
call
jp
cmp
inc
clc
sbb
adc
pop
sti
inc
nop
daa
mov
outsb
fs
adcl
insb
fdivl
jl
xchg
loopne
cli
cmp
mov
sti
mov
pop
add
add
adc
mov
outsb
xchg
and
shrl
sbb
enter
mov
jmp
and
adc
push
and
or
pop
jo
or
xchg
mov
mov
movsb
insl
nop
mov
xchg
in
aaa
fstpt
and
sub
push
pop
mov
xchg
xor
jmp
push
sbb
mov
fbld
cmp
lock
sub
jp
mov
in
inc
pop
test
cmp
imul
in
cmp
lods
add
pop
mov
es
scas
pushf
inc
mov
dec
sub
movsb
push
mov
ffreep
fwait
loopne
movl
mov
and
lods
out
fs
mov
pop
decb
adcb
nop
imul
pop
add
mov
push
bswap
mov
push
rolb
lea
pop
loop
inc
mov
mov
sub
ja
pushf
ljmp
cmp
mov
and
push
ret
scas
cwtl
dec
sub
out
fsubl
cld
inc
in
adc
into
test
insb
mov
add
testb
shlb
js
adc
push
cmp
xchg
adc
mov
dec
add
in
call
addb
push
sub
cltd
test
push
fstl
mov
adc
mov
loopne
je
or
push
dec
lock
sahf
daa
int
rorl
lldt
xlat
jne
fildl
push
xchg
jg
cwtl
adc
inc
pop
inc
in
mov
call
mov
xor
adc
testb
pop
inc
in
ret
movsb
stc
sub
mov
adc
xchg
inc
cmpb
fsts
in
jo
inc
adc
ficompl
sti
rclb
dec
or
ljmp
pop
sbb
cmp
add
sbb
pushf
push
xchg
add
pop
lods
push
leave
xchg
jnp
dec
insb
andb
sbb
or
adc
pop
les
sbb
dec
insl
inc
icebp
mov
mov
je
sub
es
mov
out
cmp
inc
xchg
outsb
shrl
jle
mov
sar
dec
les
add
xor
fwait
clc
adc
pop
add
test
add
les
fsubrl
mov
aaa
dec
adc
and
pop
jecxz
cltd
movsb
daa
movsb
pop
or
or
hlt
scas
mov
add
add
js,pn
pusha
cwtl
pop
hlt
fdivl
sahf
inc
mov
cmp
nop
xor
popf
mov
test
les
stos
stos
mov
mov
cld
lock
sbb
jle
rorl
test
adc
push
adc
adc
divb
inc
cld
add
add
scas
aam
sbb
mov
pop
add
fld1
mov
add
int
or
stos
adc
xor
inc
testl
rcrl
sub
add
mov
fldt
es
subb
lahf
xchg
mov
mov
insb
add
fisttps
movsb
mov
rcl
addb
pop
test
je
mov
sbbl
roll
les
jne
cli
and
shlb
mov
mov
pop
jg
rcpps
jb
or
outsl
call
push
leavew
push
ficompl
sbb
orb
adc
repz
sbb
adc
xchg
inc
mov
mov
inc
add
inc
jbe
add
repnz
push
sbb
clc
push
adc
fadd
lea
rcl
rclb
sbb
js
pop
stos
mov
mov
sub
int
sarb
push
jecxz
roll
add
push
cld
pop
jno
mov
sub
imul
push
addr16
push
sahf
inc
scas
lcall
adc
jge
sbb
jbe
xchg
mov
sub
mov
xchg
xchg
rcrb
cli
rcrb
pop
jmp
popf
into
pop
push
push
mov
sarb
adc
int
or
and
add
and
lock
pop
inc
addl
daa
inc
sub
rol
add
insb
mov
mov
add
add
arpl
jb
enter
xlat
xchg
or
or
call
dec
add
dec
int3
mov
jp
mov
sub
repz
mov
inc
pop
mov
leave
add
xchg
jo
js
cld
pushl
push
add
mov
cmp
test
pusha
add
push
add
and
xchg
push
xchg
jb
sbb
rcr
cli
test
dec
leave
adc
push
js
jl
sub
push
adc
push
sub
adc
jae
aas
xorb
movsl
adc
daa
lods
mov
call
scas
shlb
ja
xchg
jp
test
sbb
pushl
adc
cs
xor
mov
xchg
popa
add
mov
or
mov
add
push
cmpb
cmp
pop
pusha
jno
xor
mov
pusha
pusha
push
jge
jecxz
add
mov
lret
push
lock
sbb
mov
add
push
xlat
adc
mov
dec
insb
fstl
leave
or
sahf
fcoms
cli
jg
jl
popa
adc
popa
xchg
dec
xor
push
and
push
int
loop
pushf
mov
mov
or
loopne
stos
xor
cli
and
je
pop
dec
push
xor
and
pop
sbb
cmp
or
jb
add
call
or
or
pusha
xchg
push
addb
movsb
call
hlt
call
jmp
sbb
mov
adc
adc
mov
orl
jo
movmskps
sbb
jp
or
pop
jae
scas
or
sar
ljmp
push
call
mov
test
adc
outsl
cli
scas
mov
pop
ret
std
inc
mov
inc
push
add
sub
push
inc
scas
cwtl
jmp
cmp
rcr
mov
xchg
push
jae
orb
push
ljmp
xchg
xor
jg
add
sbb
jne
shll
pop
sahf
into
ja
cmpb
add
loopne
or
les
clc
add
pusha
push
push
xchg
call
add
adc
punpckhdq
imul
dec
add
xchg
jbe
mov
movsl
leave
jecxz
pop
add
fimuls
filds
inc
pop
mov
dec
adc
cmp
sbb
je
and
ds
push
je
lea
add
idivl
cwtl
mov
enter
push
clc
add
mov
xlat
insb
ret
xor
sub
clc
filds
dec
jl
arpl
lods
pusha
or
adc
es
push
xor
fidivl
push
scas
push
push
cmp
pop
ljmp
cltd
fcoml
and
aam
sbb
mov
pop
inc
mov
or
pop
jmp
and
inc
or
push
inc
push
and
loopne
adcl
sub
sub
movsl
mov
add
into
and
sub
idiv
or
sbb
call
cld
pusha
or
push
xchg
shll
scas
mov
and
fsqrt
bound
shll
into
subb
js
loop
sbb
gs
loopne
pop
pop
in
pop
clc
incl
push
pop
sub
fs
dec
xorb
repnz
inc
call
push
xor
xchg
cld
mov
decl
ja
call
test
adc
mov
les
inc
mov
notb
push
jno
xor
mov
adc
mov
test
lret
and
jl
mov
or
inc
mov
negb
out
ret
inc
loopne
ret
push
mov
add
incl
cwtl
pop
or
adc
xchg
das
add
push
push
xor
mov
mov
cmp
mov
pop
lock
push
shrb
sbb
push
xor
inc
dec
xor
adc
incl
cmp
sbb
xor
inc
clc
inc
mov
outsl
nop
push
mov
je
cmp
scas
mov
movsb
mov
movsl
lods
cli
sub
inc
inc
rcr
add
es
pusha
mov
sub
lock
lock
and
fildl
test
mov
shlb
jecxz
jnp
push
and
mov
pop
push
aaa
pop
hlt
add
cltd
jne
jg
inc
ja
cmp
adc
pusha
lcall
rsqrtps
push
lock
and
xor
shr
jg
scas
xor
mov
inc
xor
sbb
mov
mov
mov
add
push
jno
pop
cmp
outsb
jg
mov
jo
call
add
into
lock
ljmp
push
lock
lock
fcomip
call
mov
mov
out
call
pop
adc
sbb
ja
fcomps
pushl
lods
pushf
pusha
jo
lock
or
jo
jg
add
jg
xor
mov
or
xor
aas
push
dec
and
aam
jae
jl
jo
mov
data16
mov
mov
pop
call
incl
cmpsl
mov
inc
add
or
jne
xchg
pop
dec
aam
loope
adcb
sbbb
push
lock
add
sarl
or
mov
mov
repz
in
push
mov
ljmp
push
add
jo
bound
mov
xor
push
mov
push
push
hlt
add
xor
adc
mov
add
inc
pop
jp
xchg
or
mov
idivb
add
mov
fdiv
or
lahf
pop
or
add
xor
sti
jb
decl
je
in
push
subb
mov
test
pop
cmc
pushl
xchg
pop
and
jo
les
dec
xchg
mov
fbstp
cmp
dec
das
xor
mov
and
cmp
lea
idivb
mov
adc
mov
test
or
pop
jno
mov
test
push
push
test
fistpll
ja
adc
lret
and
mov
push
mov
cli
push
mov
mov
sbb
mov
or
mov
add
rcrl
scas
add
test
ss
push
add
out
or
and
adc
test
jecxz
xchg
add
stos
sub
fbstp
ljmp
mov
pop
lea
push
push
lea
inc
sar
xor
xchg
add
lods
lock
lock
cmp
inc
call
mov
add
sub
add
mov
pop
fcomip
or
and
pop
fidivl
and
push
adc
jne
popf
sti
add
add
add
call
sub
cli
sub
icebp
iret
add
add
stos
lods
out
xor
fisttpl
es
xlat
mov
je
sbb
and
outsl
sub
dec
lods
xchg
dec
mov
sbb
lods
sbb
add
adc
daa
out
rorb
mov
add
dec
mov
or
lock
mov
mov
xor
test
adc
jg
dec
dec
and
movsb
fs
or
pop
pop
fimull
loop
sub
scas
or
pop
inc
cli
scas
mov
adc
lcall
mov
mov
xor
push
pop
movsb
sbb
jo
xor
in
loope
add
sbb
mov
and
jp
jo
ljmp
fdiv
push
ja
cmp
jo
call
xchg
sbbb
dec
fistl
loope
dec
loopne
add
outsb
xor
mov
or
mov
jle
push
push
add
test
xchg
shl
push
test
movsb
outsl
outsl
sbb
inc
cmp
mov
mov
js
sti
mov
push
arpl
call
push
add
xor
fdivrs
mov
aaa
pop
xor
add
mov
adc
push
xor
mov
or
or
nop
icebp
outsl
mov
pop
add
jp
xor
xor
daa
add
add
xlat
jno
inc
shlb
xor
or
mov
jo
dec
mov
xchg
stos
mov
mov
icebp
lea
xchg
call
xchg
negl
or
dec
xorb
add
dec
xor
bound
inc
inc
inc
inc
or
xor
add
add
sarl
or
and
mov
rorb
pop
shrb
jbe
mov
stos
call
clc
xchg
inc
pusha
sbb
incl
add
add
xchg
and
jg
mov
mov
mov
push
xor
loop
and
xchg
scas
fdivs
or
cs
xor
lock
das
sbb
mov
in
sbb
test
jp
leave
push
jne
je
call
adc
lea
int3
push
pop
sub
and
in
ljmp
jnp
fisttpl
test
jb
out
xor
xchg
jo
cld
sbb
stos
mov
pop
jmp
adc
or
jge
cwtl
xor
out
xor
not
addb
mov
adc
mov
sbb
cmp
mov
mov
xor
push
jmp
and
outsl
xor
cli
mov
aaa
add
mov
cmp
push
mov
int3
or
pop
rcr
sub
sbb
ret
negb
mov
or
adc
inc
and
sbb
lds
pop
popf
in
mov
mov
push
lcall
mov
sarl
cmp
loop
call
lock
push
xor
add
add
or
inc
xor
inc
insl
shr
stos
call
sbbb
pop
mov
or
nop
cmpsb
pop
jo
cmp
lock
jp
scas
out
daa
loopne
inc
cmp
pop
adc
mov
and
or
adc
xchg
sbb
xchg
add
adc
xchg
sub
fcmovbe
sbb
sti
ljmp
add
push
xlat
and
frstor
and
fisubrs
lds
mov
test
push
test
out
or
mov
mov
mov
loopne
arpl
jg
addb
jnp
mov
xorb
repz
addl
sub
test
or
or
les
cli
ja
push
cmp
mov
sbbb
das
add
push
adc
sub
subb
imul
jg
mov
inc
inc
cmp
mov
mov
add
cmp
xorb
or
jg
loope
sub
enter
orb
call
orb
divl
jo
inc
and
or
pop
arpl
loopne
ds
fcoms
mov
loopne
scas
mov
lcall
jne
jmp
dec
push
rclb
inc
ret
jnp
adc
loopne
pop
or
mov
into
pop
ficompl
ret
mov
cmpsl
add
or
mov
xchg
fnsave
pop
str
rol
mov
stos
rclb
jg
or
xor
int3
or
push
call
add
repnz
adc
es
dec
flds
xchg
lcall
add
xchg
orl
push
adc
sarb
jg
xor
fisttpl
xor
xor
lcall
es
xor
sub
test
jle
stos
inc
sub
adc
adc
imul
sub
jno
decb
hlt
shll
add
add
movsb
xchg
sti
aas
adc
add
pop
mov
add
test
dec
push
xchg
add
nop
sub
sti
inc
or
push
add
lock
in
sub
push
dec
fildll
cld
scas
push
xchg
hlt
adc
inc
in
les
sarb
add
or
dec
or
cld
inc
xor
hlt
push
adc
dec
add
push
hlt
push
movsl
ljmp
rcll
push
sbb
je
scas
or
mov
leave
cmp
fistpll
insb
call
push
js
addb
divb
leave
push
lds
add
pop
rclb
enter
rcrb
sbb
fildll
hlt
push
jl
adc
lret
movsl
add
push
pop
pushf
jp
add
int3
push
pop
or
add
dec
and
push
mov
jg
xor
bound
push
pop
jecxz
cmp
push
mov
popa
sbb
pop
add
cmp
loopne
cmp
sub
xchg
add
adc
cld
stos
cmp
and
add
add
enter
adc
mov
iret
jmp
fldenv
or
and
and
pop
loopne
insb
pop
inc
push
sti
pop
push
mov
cmp
jecxz
and
cmp
pop
sub
mov
inc
aam
or
outsl
pop
and
push
push
int3
nop
or
pusha
inc
out
push
popa
addr16
fists
inc
xchg
or
dec
sub
pop
add
push
and
inc
push
bound
inc
sbb
data16
mov
loopne
loope
dec
pop
pop
pop
mov
mov
fs
xor
je
push
out
pop
jp
sub
jle
lods
ret
add
add
and
iret
repnz
cli
dec
adc
loop
cmp
mov
xchg
adc
jecxz
or
imul
push
mov
add
sbb
mov
push
add
shl
insb
loopne
jmp
push
cwtl
jp
sarl
dec
mov
stos
into
mov
or
lods
sahf
cmovp
adc
aaa
mov
mov
imul
les
mov
or
pop
or
push
fists
ljmp
adc
pusha
or
ret
cs
mov
push
xor
inc
xchg
sub
loopne
into
nop
push
jg
lock
hlt
shl
pop
adc
push
pusha
add
outsl
fwait
cmpsb
clc
mov
add
arpl
or
xchg
or
bound
fcomi
mov
and
or
add
out
loopne
lock
sbb
out
movsl
mov
adc
sbb
or
fcoms
lahf
es
loopne
jg
hlt
bound
addl
loop
or
jl
lds
mov
mov
mov
mov
cwtl
mov
pop
loopne
js
aas
pop
ret
add
mov
add
xchg
call
movl
in
addr16
addl
loope
jg
fists
xchg
out
mov
pusha
rorb
cmpsl
loopne
sti
jae
shr
lods
jle
cmp
add
add
mov
inc
movsb
pushf
loopne
mov
es
xor
loopne
loopne
fiadds
add
cmpb
fisubl
cld
pusha
add
pusha
cmpsl
push
mov
add
jo
or
and
leave
fprem
cmp
in
or
fldenv
push
push
pop
sbb
add
mov
push
or
sub
popa
popa
lods
std
push
ret
in
test
scas
insb
mov
pop
shl
lahf
pop
cmpsb
pusha
stos
stos
cmp
push
add
xchg
mov
and
jle
ljmp
popa
xchg
mov
popaw
es
add
loopne
faddl
outsl
add
test
mov
pop
loopne
add
lock
pop
test
xchg
xchg
sbb
pop
dec
fists
bound
mov
std
fisttpl
dec
mov
loopne
gs
jne
add
sbb
popf
loope
pushf
jl
inc
mov
mov
cmpsb
push
dec
hlt
cmp
aas
add
xor
push
out
mov
mov
clc
stos
jb
jmp
or
mov
jg
sbb
pop
xor
loopne
xor
or
ljmp
pop
lock
mov
adc
add
or
loop
xor
xor
jmp
xorb
xchg
and
mov
mov
xor
cltd
mov
dec
jbe
or
jb
mov
popf
adc
pop
ljmp
adc
lea
xor
call
das
inc
andl
decl
call
mov
jo
fcomp
cmp
adc
lock
inc
ret
lock
sar
pop
xor
jo
push
je
lock
lcall
push
test
pushw
orb
mov
into
mov
repnz
xor
push
mov
inc
icebp
sbb
cmpxchg
inc
adc
jb
push
or
insb
sbb
pmulhuw
daa
lock
sti
xor
clc
rcrl
push
nop
jbe
inc
mov
xchg
jp
js
leave
and
ret
push
sbb
and
push
xor
test
cld
sbb
or
call
pop
jmp
fidivrl
or
push
decl
sub
cli
arpl
xor
shlb
jp
dec
add
add
mov
xchg
test
inc
inc
mov
sub
xchg
addl
push
lock
pop
lock
pop
pop
mov
stc
add
sbb
loope
sbbb
xor
dec
mov
push
add
outsb
stos
sbb
mov
out
jo
loopne
or
adc
insb
add
cli
mov
adc
cli
and
push
jne
cli
ss
inc
pop
dec
jecxz
lcall
dec
mov
mov
inc
and
xor
push
pop
rolb
icebp
sbb
jb
cmp
or
es
clc
int
or
dec
lock
adc
mov
sbb
sarb
and
and
sub
inc
jg
loopne
adc
xchg
jmp
pushl
mov
call
xor
push
add
lock
lock
fisttps
dec
nop
adc
pusha
xorl
xchg
test
mov
xchg
lret
sub
dec
test
add
mov
jo
cmp
rcrb
out
jge
test
into
xor
push
dec
lock
call
jo
lock
inc
je
add
fs
mov
call
jge
call
hlt
push
adc
jo
divb
dec
insl
pop
add
push
cltd
mov
push
add
stos
pop
sub
and
push
inc
add
dec
adc
jno
stos
cli
decl
inc
inc
sub
jp
pop
lea
clc
pop
cmp
cmp
pop
pushl
loopne
sbb
call
sbb
call
sub
add
mov
mov
subb
xor
jo
push
adc
xor
pop
icebp
pop
ret
dec
and
add
mov
adc
xor
adcl
or
cli
push
incb
add
pop
or
lock
xor
push
jae
xor
inc
xor
repz
insb
popa
mov
jb
icebp
push
mov
pushf
call
mov
push
inc
insb
add
add
push
push
sbb
push
adc
out
mov
ret
mov
je
or
in
add
in
adc
push
mov
lret
sbb
inc
movsb
nop
pusha
push
xor
pop
adc
jmp
inc
pop
or
dec
xchg
dec
lock
mov
dec
mov
test
test
mov
or
pop
jge
repz
inc
xor
pop
mov
les
ret
push
push
inc
dec
push
fmul
mov
lods
cmp
cmc
dec
sar
jb
add
repnz
add
xor
mov
loope
xchg
scas
or
ljmp
mov
xor
xor
int3
xor
call
xchg
int3
fidivrs
cld
cs
add
push
clc
xchg
cmc
mov
push
aaa
mov
xor
mov
adc
adc
dec
sub
ret
inc
inc
dec
or
mov
mov
fcompl
in
adc
lock
rclb
xor
out
inc
lock
or
lea
call
xor
push
inc
sbb
mov
push
xor
test
rcrb
adc
cmc
add
jbe
push
jbe
cwtl
shlb
js
repz
mov
hlt
adc
jo
cmp
sub
push
nop
mov
mov
inc
mov
ljmp
andl
jg
mov
or
add
mov
mov
icebp
add
jo
push
add
jo
pushf
xor
mov
mov
mov
mulb
push
jne
ljmp
xor
mov
jo
mov
call
cmc
dec
ja
add
pop
pop
enter
add
jge
pop
vpsubb
dec
aas
xor
mov
lds
mov
loopne
pop
jo
and
shrb
jp
test
lcall
sbb
and
movsb
or
xchg
fisubrl
or
adc
jo
lcall
add
fmull
push
sarb
cmp
call
clc
pop
adc
pop
jbe
fs
inc
lret
pop
and
mov
pop
icebp
mov
and
push
inc
or
xor
inc
test
mov
adc
add
cmp
pop
cld
mov
jo
test
xor
roll
scas
and
negl
movsl
inc
add
xor
call
lcall
pusha
or
loope
decb
cmp
xor
inc
jo
bound
mov
and
mov
and
ss
hlt
and
push
mov
push
ljmp
mov
mov
loopne
pop
xor
mov
sbb
ss
data16
inc
std
add
divl
dec
and
mov
push
shl
dec
or
pop
call
or
mov
fnstcw
je
push
cwtl
xor
xor
push
mov
es
call
fdivl
cld
call
push
mov
cmp
loop
lcall
add
loopne
icebp
scas
xchg
mov
bound
je
jge
and
dec
or
and
iret
nop
outsb
call
mov
inc
jg
dec
lea
enter
adc
xor
rorb
push
stos
or
in
mov
insb
mov
and
add
push
dec
pop
sti
ds
bound
lea
aad
mov
and
repz
test
ljmp
mov
flds
jo
test
dec
mov
lock
inc
cmp
push
sbb
mov
cmp
js,pn
loop
add
cmpsb
insb
iret
push
add
sbb
pop
lock
in
cmp
test
mov
mov
mov
push
jle
movsl
dec
loop
sub
mov
or
clc
outsl
and
repnz
aas
orb
xor
test
rcrl
mov
test
xor
int3
dec
mov
push
roll
sub
cmp
sub
je
pop
and
arpl
pop
jno
xor
and
testb
fwait
pop
aam
data16
jp
sbbb
push
push
mov
insb
push
xor
cs
sbb
bound
or
lret
push
add
push
or
mov
ljmp
int3
jbe
andb
pop
sahf
mov
or
cltd
adc
cmp
or
shrb
mov
test
inc
mov
mov
adc
push
pop
ret
int
or
outsb
mov
fmuls
test
and
enter
mull
aam
rorb
inc
cs
sbb
cli
inc
inc
sbbb
mov
sbbb
lock
or
push
mov
lea
mov
testl
inc
mov
cmp
mov
int3
add
imul
pop
push
test
push
mov
stos
aas
xchg
cmp
dec
and
call
push
std
or
jo
or
or
xchg
cmp
sub
inc
or
fisttpll
cld
xor
mov
call
add
call
xorb
sbb
stos
sbb
cmc
sub
shrl
repz
adc
or
popa
and
call
inc
pop
adc
lcall
dec
loop
test
or
mov
sub
call
adc
xor
cmp
insb
scas
or
and
es
xor
mov
inc
sarb
jmp
dec
ljmp
jle
add
inc
push
push
dec
add
add
lcall
xor
rcrb
mov
adc
insb
cld
dec
add
fcomi
mov
push
xchg
das
jp
scas
lea
sub
cmpsb
mov
mov
push
mov
shrl
pop
nop
adc
add
and
rorl
xchg
cs
ljmp
inc
pop
dec
andb
push
jle
fistl
adc
cmpb
and
mov
lods
fcoml
adcb
shrb
add
push
jge
jbe
or
lds
call
pusha
mov
out
add
add
mov
adc
push
in
insb
cli
jge
adc
sbb
rorb
push
add
sub
and
out
mov
aas
sub
scas
push
dec
lret
push
or
mov
je
loopne
jl
adc
ljmp
push
idiv
adcb
movsb
rolb
inc
xor
das
dec
cmp
sbbl
dec
shl
jbe
mov
push
mov
loopne
test
cmpsb
or
inc
inc
mov
scas
cs
lea
outsb
cli
and
jl
dec
out
out
push
and
jg
movsb
call
fs
adc
fsubrs
cmpsb
or
adc
cli
add
pusha
push
xchg
lcall
aad
dec
enter
add
jae
sub
xchg
or
inc
push
movsl
jo
loopne
adc
sbb
mov
adc
mov
or
adc
incl
fdivs
loopne
push
push
xchg
sub
incl
cmp
pop
sbb
test
cmc
inc
loope
mov
jne
loopne
xor
and
cmp
and
ret
mov
push
jmp
and
push
add
mov
sub
add
bound
leave
sbb
lock
call
sub
aas
xor
xchg
ret
sbb
shrl
rclb
outsb
xor
loopne
stc
cmpb
sbb
push
je
push
push
jmp
or
movsb
fmuls
inc
sti
add
push
fdivs
loopne
orb
sub
jo
imul
mov
std
fdivrs
sbb
jne
jbe
add
incl
shrb
lea
cmc
inc
jnp
subb
add
jl
push
and
xchg
or
cmp
lock
xlat
fisubrl
add
jmp
mov
jg
inc
pusha
pushf
icebp
js
mov
push
cmpb
sti
in
fwait
loop
inc
pop
hlt
je
jmp
or
mov
loopne
stos
xor
or
dec
push
inc
ljmp
push
lret
addl
xchg
bnd
dec
mov
mov
loopne
pop
lds
test
cld
cmpl
add
les
add
dec
xor
sti
sub
or
push
push
loop
lea
push
push
jp
add
pusha
mov
add
cmp
push
test
nop
in
dec
std
loopne
call
cs
jmp
xchg
inc
outsl
pop
or
mov
shlb
pop
adc
loopne
loope
push
nop
inc
sub
and
mov
test
push
sbb
dec
mov
mov
push
add
hlt
loopne
lcall
dec
push
popa
inc
ret
add
into
sub
je
push
fs
jmp
push
adc
xor
lds
cmpb
mov
sub
pop
ja
inc
mov
cli
pop
daa
inc
mov
scas
mov
outsb
addb
jle
xchg
pop
insl
test
les
loop
inc
test
scas
mov
push
js
dec
xchg
push
add
xor
mov
adcl
loope
adc
cmp
test
push
jne
mov
add
je
xor
xchg
js
jne
add
stos
sub
or
je
adcl
inc
mov
fldcw
adc
jmp
clc
pusha
inc
and
loopne
mov
mov
loope
xchg
loop
jl
push
add
clc
not
and
sbb
add
outsb
dec
mov
pusha
mov
andb
mov
jne
inc
je
sarb
xor
push
mov
ds
imulb
arpl
das
pushf
dec
add
rorl
scas
push
ret
scas
call
push
outsb
fdivrs
je
arpl
enter
and
lea
or
xchg
js
pop
ljmp
ds
je
or
xor
pusha
adc
push
pop
mov
mov
lock
fidivl
and
mov
andl
ret
sub
xor
adc
xor
ljmp
fs
lcall
insb
jecxz
adc
rep
push
scas
mov
aad
je
les
sub
xchg
mov
clc
scas
push
jo
pop
add
or
sahf
jle
mov
movsl
mov
test
hlt
xor
cltd
and
add
cmpsb
pop
add
pop
add
outsb
or
sar
cmp
pop
cmp
je
or
add
rolb
rol
xor
xchg
adc
inc
push
xor
cmp
sub
lock
push
or
mov
push
inc
ja
and
in
mov
shrb
loope
js
nop
ja
push
mov
jo
lea
or
mov
out
clc
xchg
jne
sbb
xor
or
out
jno
dec
test
arpl
or
sub
sub
jp
subb
iret
call
or
pop
fsubr
add
mov
mov
add
lock
adc
test
and
dec
mov
or
and
mov
push
xchg
cmc
call
ficompl
jo
or
jg
stos
add
and
adc
movsl
ds
jo
sub
mov
xchg
pop
push
outsl
xor
sub
addr16
sub
pop
imul
mov
mov
mov
add
jne
xchg
fimuls
or
cld
loopne
lods
ljmp
adc
cmp
dec
pusha
aas
mov
cmp
mov
jo
ret
xor
dec
jo
ljmp
add
add
lret
mov
push
cld
jnp
xor
pop
mov
cmp
and
out
mov
push
cmp
xchg
and
ss
subb
data16
je
movsl
push
dec
jb
ss
call
lea
cltd
lcall
adc
push
stc
mov
push
xchg
ficoms
dec
insl
and
jb
sub
scas
xor
lock
or
and
push
hlt
add
sbb
fistpll
xor
and
ja
add
pop
and
pop
mov
push
mov
add
mov
scas
mov
stc
push
data16
divb
mov
fsubrl
in
mov
sub
ja
pop
add
ja
or
aas
cmp
dec
mov
es
movsbl
pushw
pop
jb
cmp
xchg
cmpsb
cmovno
add
decl
add
jg
xor
push
push
or
xor
mov
sub
push
cmp
push
dec
loop
pop
fmull
push
jbe
cmp
lods
dec
call
cmp
jbe
lcall
mov
push
jb
add
mov
cmp
jb
xorb
inc
repz
icebp
or
ds
jg
jne
in
je
sub
iret
enter
sarb
sbb
aas
inc
mov
pop
loopne
dec
insb
adc
pop
cmp
stos
or
push
mov
hlt
rorl
push
mov
cmp
jp
stc
cmp
jb
cmp
fbld
or
cli
inc
inc
lea
aam
cmp
das
add
xorb
sub
orb
shrb
xor
jo
je
push
xor
cs
jmp
sub
push
mov
and
add
mov
out
push
sbb
scas
sub
mov
cld
inc
add
mov
jne
xchg
subl
mov
adc
hlt
cmp
lea
mov
out
pushl
xor
lcall
cmc
mov
ret
xor
xchg
jo
or
mov
push
or
cmp
loope
push
loopne
es
sbb
jle
mov
outsb
incl
loope
subb
mov
jne
adc
mov
or
adc
jo
sarb
fistps
push
cli
lock
iret
cmp
mov
push
lods
inc
push
xor
mulb
lock
inc
mov
xor
add
das
mov
mov
mov
rorl
jl
inc
jbe
ret
ret
adc
shl
or
sarl
xor
shlb
inc
add
subb
call
xor
add
les
lods
add
mov
or
pop
push
add
movsl
mov
adc
lea
aam
mov
dec
or
lahf
lock
add
popa
test
add
mov
lods
or
dec
jmp
add
or
mov
add
push
mov
cld
mov
sarb
cmp
add
push
stos
in
cmp
in
mov
mov
jmp
jmp
out
mov
or
push
dec
pusha
aad
mov
add
lock
test
repz
adc
std
cmp
mov
jbe
mov
call
or
or
and
je
and
ja
enter
adc
jo
mov
cwtl
xor
adc
push
pop
movl
in
inc
push
jmp
call
ds
xor
bound
hlt
pushl
push
clc
adc
smsw
or
cmpsb
inc
loop
sbb
pop
mov
cmp
or
mov
or
call
pusha
cld
je
into
call
mov
arpl
dec
insb
sti
outsb
mov
add
les
shl
sbb
sub
sub
and
add
shrl
sbb
cmp
mov
movsb
sbb
call
pop
lea
push
clc
pop
xor
sarb
in
js
lock
es
test
mov
mov
xor
jl
cld
push
nop
jb
cld
scas
push
lods
loop
loop
adc
jl
cs
push
jb
push
and
jne
cmp
rolb
mov
mulb
out
pop
cld
xor
xor
sahf
sub
sti
add
ret
sbb
cmpl
mov
in
and
jbe
mov
ret
imul
dec
push
or
cmp
call
add
insb
std
pop
aaa
ret
clc
add
icebp
lret
adc
lods
and
mov
mov
mov
cmpw
jo
jbe
xchg
xchg
pop
jne
incl
std
dec
push
and
push
inc
add
cmp
pop
idivb
jo
lods
das
xor
jo
jg
jno
lret
add
ljmp
fistl
sbb
xor
clc
add
mov
scas
call
mov
jge
push
and
addb
loope
cld
mov
add
and
sub
add
push
pushl
sti
cmp
jne
pop
ret
xchg
lcall
jbe
add
je
xchg
iret
call
sbb
pop
jp
dec
fists
or
arpl
mov
push
fsubrs
xchg
mov
rolb
push
adc
js
push
faddp
outsb
test
mov
ret
dec
cmpb
pop
mov
neg
add
jge
xchg
sbb
add
int3
or
testb
dec
cmp
cmp
repz
xchg
ret
inc
cmp
cmp
and
sub
cmp
andl
cld
jno
jno
add
cmp
jp
popa
test
subl
add
mov
cmp
fcompl
jne
inc
jl
je
add
jle
jae
add
cwtl
inc
lock
sbb
jb
flds
rcll
add
ljmp
mov
out
push
sub
fsubs
cmpsb
cmp
mov
test
or
ss
movsl
pop
xchg
add
ret
or
dec
pushf
sti
loop
ret
pop
xorb
stos
pop
test
xchg
movsl
add
jmp
and
and
pop
xor
mov
cmp
and
incl
andb
sub
incb
je
sub
je
imul
add
inc
inc
push
push
jbe
add
adc
add
push
dec
mov
es
push
add
inc
push
call
add
orb
inc
and
mov
ret
inc
sub
dec
cmpsb
sub
aas
lods
adc
int3
push
cmp
xchg
or
aaa
pushf
sarb
push
rcrw
and
sub
cmp
inc
shrb
call
ja
inc
and
push
outsb
or
clc
test
sar
cmp
adc
es
xchg
xor
call
data16
or
pop
add
sub
or
mov
and
cmpb
and
cltd
mov
roll
xor
lods
adc
test
ja
jb
and
add
test
das
or
cmp
enter
push
cmpsb
cmp
xchg
add
ficomps
insl
mov
inc
and
and
ret
and
iret
jbe
cmp
bsf
lretw
je
or
les
sti
lretw
dec
push
push
fisubs
mov
ljmp
or
inc
nop
sarl
rorl
lea
lods
fmuls
adc
les
push
sbb
jmp
shlb
subb
stos
mov
insb
shlb
sbb
mov
push
stos
push
nop
push
xor
xchg
test
call
mov
jno
and
adc
cmp
sti
jl
sbb
mov
pop
ret
jmp
shlb
add
subb
adc
aad
push
add
adc
pop
out
mov
mov
xchg
jne
pop
xor
or
adc
adc
divl
rol
insb
std
sub
aaa
fdivrs
push
fbstp
data16
xor
in
leave
push
data16
and
movsl
hlt
mov
mov
and
or
lcall
sub
enter
mov
xor
mov
add
inc
dec
mov
jle
adc
aaa
sbb
loopne
jb
sbb
add
cwtl
daa
cmc
or
cmp
rorb
movsb
mov
test
lea
test
fsubl
or
lret
push
pop
xchg
test
test
or
loopne
fiadds
fimull
ds
std
jne
frstor
sub
dec
pop
push
call
fisttps
inc
sbb
add
sbb
test
shlb
add
out
call
pushf
loopne
out
jecxz
out
sbb
cld
sub
pop
leave
test
inc
sbb
je
pop
jecxz
xor
lcall
mov
dec
pushf
jbe
add
adc
lcall
aas
shlb
call
jp
sbb
mov
add
stos
push
or
adc
call
into
or
ljmp
icebp
data16
or
jns
mov
es
or
inc
push
fs
push
xorb
outsb
pusha
xchg
out
adc
sbb
pusha
add
push
lock
or
push
loopne
or
jne
sub
mov
xor
push
cld
pop
add
testb
je
dec
outsl
or
je
loopne
mov
mov
lock
aam
xchg
inc
adc
pusha
pop
inc
and
shld
xchg
in
lea
inc
xor
add
mov
pop
cmc
xchg
xor
loope
pusha
inc
loopne
and
aad
or
int
pop
fbld
andl
jecxz
adc
mov
adcb
adc
shll
mov
mov
int3
cmp
cmpsb
add
mov
add
call
cltd
inc
xor
xor
jmp
jb
inc
jle
popa
pop
pop
pusha
sbb
faddl
pop
loopne
sub
fadds
sub
and
add
add
movsb
imul
loope
dec
push
adc
std
data16
rcrb
lods
sub
dec
xorb
sub
in
and
sar
fisttps
adcl
jne
adc
adc
push
loope
push
jecxz
pusha
rcrl
dec
add
std
or
data16
shrl
fwait
sub
ficompl
loop
sub
and
add
push
push
das
pop
loopne
sub
mov
les
incl
insl
pusha
add
push
or
stos
and
xor
dec
ds
jl
pusha
mov
cli
testb
push
and
scas
mov
les
jl
add
and
pop
or
add
pop
or
push
sbbb
push
ss
pop
loopne
or
jmp
into
ljmp
shr
jp
adc
inc
jmp
pop
adc
add
je
sbb
jg
mov
sub
xchg
hlt
ret
add
loopne
xchg
ljmp
stos
mov
mov
call
mov
and
xor
jl
adc
addl
cmpsb
push
sbb
adc
sub
js
jmp
stos
xchg
sub
mov
add
lahf
mov
lret
pop
dec
fisttpl
sbb
inc
adc
bnd
pop
push
xor
adc
add
scas
stos
jl
push
xorl
stc
inc
dec
shrl
push
sub
into
add
push
jl
and
xor
push
push
push
adcb
mov
orb
lods
stos
push
loop
data16
stos
loope
cld
inc
outsl
or
lock
sahf
in
mov
cmp
add
or
dec
test
jl
dec
push
cwtl
lret
jg
idivb
notb
adc
test
lret
adc
loop
lock
mov
data16
ljmp
inc
or
push
or
nop
push
or
mov
stos
dec
lea
sbb
outsl
sbb
add
pop
inc
cli
pushl
shlb
adc
add
cmp
add
push
ja
lock
data16
xor
inc
push
mov
fcompl
jne
xor
add
and
std
inc
aam
and
and
cltd
imul
or
shl
data16
pop
dec
cld
xchg
cmp
add
pusha
and
jmp
test
shlb
sub
mov
or
pop
setne
insl
in
fildl
or
adc
mov
mov
pop
lock
lea
ret
or
sbb
or
cltd
orl
icebp
pop
fs
xor
and
ljmp
and
or
mov
sub
dec
movsb
mov
aas
or
icebp
testb
data16
iret
mov
jmp
jo
outsl
push
pop
aaa
pop
cmc
je
insb
or
pusha
jp
incl
or
jmp
or
lock
jmp
jb
repnz
jg
popa
fidivrs
mov
adc
stc
xor
push
mov
call
xorb
incb
icebp
or
test
mov
cwtl
fptan
dec
idiv
fbstp
mov
push
xchg
mov
or
jg
and
mov
and
sub
ljmp
cmpsl
je
clc
inc
je
or
jg
sti
add
mov
test
adc
adc
mov
dec
loope
jmp
push
xor
je
incb
jmp
scas
test
add
mov
add
imul
add
enter
mov
mov
xlat
add
sbb
adc
and
xor
push
jmp
enter
mov
jae
lock
or
jmp
sbb
es
nop
add
jo
pop
and
mov
jb
testb
ss
push
and
cwtl
push
mov
in
add
icebp
cmp
push
ljmp
insb
add
jb
add
jne
addl
out
and
sbbb
mov
adc
repz
jl
push
xchg
movsb
cli
out
insl
add
test
es
sbb
es
mov
adc
imul
out
cmp
mov
mov
loopne
pusha
jno
xor
jne
in
in
mov
add
jmp
adc
mov
in
jmp
sti
sarb
dec
add
jo
lock
insb
jmp
lahf
lock
pusha
imul
add
push
push
out
jmp
add
add
inc
and
lods
jne
loopne
jmp
and
mov
cld
popa
pop
push
xor
popf
test
gs
jmp
mov
jb
mov
pop
ret
push
sub
mov
xor
xchg
lcall
or
jmp
addl
fistl
ds
lcall
jne
ljmp
das
push
push
les
icebp
dec
fistl
mov
xor
and
or
sti
adc
dec
clc
xor
lret
fistpll
jmp
test
mov
jo
mov
adc
lea
mov
sbb
aaa
mov
ret
repz
add
pop
jg
adc
mov
mov
mov
mov
pop
xor
add
and
iret
sub
pop
insb
fbld
outsb
push
jo
jmp
mov
test
or
stos
and
push
xor
push
rclb
cmc
jg
dec
mov
ret
or
xchg
jl
idivl
inc
shrl
repz
add
orl
jle
cs
add
and
inc
inc
jle
shl
dec
mov
sbb
rorb
and
ret
mov
xor
and
jo
push
mov
insl
xchg
ljmp
push
cmpsb
or
push
and
or
fisubl
je
andb
jp
add
dec
inc
add
add
adc
insb
add
inc
push
ret
cmpb
insl
jb
repz
ss
or
push
xchg
insb
fdivl
push
pop
sti
push
inc
ret
xor
stos
in
pop
aas
or
or
xor
nop
xor
cld
decl
lock
pop
xor
adc
lock
mov
mov
js
ss
xor
js
testb
jo
test
dec
mov
mov
push
inc
mov
imul
dec
jecxz
fwait
fs
stos
and
jno
div
dec
out
pop
pop
or
int
mov
das
mov
je
inc
mov
push
or
lcall
xor
clc
mov
mov
push
test
mov
and
cltd
fsubs
jae
subl
push
sub
cmp
insb
cmpb
jae
or
adc
jmp
or
lcall
inc
sub
repz
add
call
xor
push
pushf
jmp
adc
push
pop
mov
push
xor
mov
stc
mov
cld
add
sbb
xchg
pop
sbb
mov
out
jmp
jno
xchg
jo
shlb
pop
ror
inc
xchg
insb
pop
pusha
sbb
add
mov
ja
add
test
inc
cs
hlt
add
icebp
add
fldt
out
pusha
shrd
icebp
sbb
inc
stos
ja
pop
or
add
mov
sti
gs
nop
or
pop
inc
adc
adc
repz
icebp
add
test
pop
hlt
sahf
xor
mov
sbb
mov
sub
stc
add
mov
hlt
fmuls
or
pushf
mov
push
inc
mov
sub
mov
rcrb
jb
push
fcompl
cltd
jp
je
add
sbb
loop
inc
and
or
push
jmp
pop
mov
repz
sbb
jmp
jae
sbb
pushf
iret
mov
rcl
insb
mov
cmp
mov
ljmp
adc
dec
adc
es
dec
push
hlt
xchg
ja
jle
sbb
xchg
test
add
addl
addl
hlt
int3
sar
dec
fstl
add
jbe
outsl
push
xchg
add
in
jg
imul
filds
filds
adc
outsb
call
add
sub
pop
addb
outsb
je
stc
je
push
lahf
add
fwait
push
add
sbb
add
and
push
pop
adc
and
add
push
inc
mov
and
mov
scas
add
mov
sub
sub
xor
add
orb
dec
jno
andl
sub
and
loopne
add
or
xchg
push
sbbb
daa
xchg
subb
inc
mov
jmp
test
push
movsb
or
shlb
xor
cmp
mov
cmpsb
jns
out
and
inc
outsb
test
or
ret
incb
in
outsl
in
jg
andb
insl
jae
sub
and
sub
ret
in
in
decl
adc
lock
xchg
pop
ret
add
xor
stc
shlb
sub
push
adc
adc
sarb
push
dec
shlb
push
jmp
jmp
add
push
adc
sub
pusha
push
sbb
sub
je
sarb
aas
fs
add
xchg
or
rcll
into
rclb
shlb
aad
icebp
scas
in
mov
sub
push
shrb
or
jp
dec
test
jle
adc
cmp
sbb
dec
clc
fildll
push
and
and
sbb
lds
jmp
mov
or
push
fwait
clc
mov
sbb
and
shlb
mov
rolb
outsb
fisubrl
pop
mov
adc
shll
lds
push
shlb
pop
sbb
and
outsl
inc
or
enter
lods
aaa
loopne
pushf
inc
pop
sub
jne
rorl
pop
add
sub
add
decl
adc
inc
je
dec
mov
dec
rcrb
out
imul
inc
add
and
push
inc
push
inc
arpl
arpl
shl
sub
mov
das
add
jp
cmc
pop
or
cltd
jbe
add
and
test
nop
cmp
outsl
add
or
push
test
cmc
or
push
adc
adc
repz
or
adc
jmp
popa
sbb
sbb
jp
dec
je
loop
lock
hlt
loop
sbb
fiadds
push
movsb
jne
cs
sbb
cmp
inc
adc
xor
scas
mov
je
add
add
pop
repnz
popf
or
mov
mov
mov
add
ds
scas
push
dec
xchg
sub
jno
popa
push
add
repz
push
push
sub
pop
rorb
sbb
and
data16
adc
fs
js
subb
outsl
jmp
mov
jp
iret
jmp
mov
inc
sbb
xor
pop
and
mov
xchg
lea
insl
sub
sti
mov
or
sub
adcb
mov
pusha
or
add
pusha
in
dec
decl
mov
add
mov
loope
ljmp
subl
cld
addb
jle
pop
and
incb
out
pusha
and
push
rclb
adc
add
xor
inc
and
or
push
lret
dec
js
pusha
xor
or
jg
cld
lods
roll
xor
adc
xor
or
cli
inc
gs
mov
insb
leave
add
or
or
sub
cmp
pusha
xor
mov
jg
repz
and
xor
adc
loopne
or
push
mov
cli
or
scas
inc
lock
mov
adc
or
pop
pop
push
jmp
sbb
movb
xorb
repnz
push
mov
data16
je
out
xchg
fcmovb
das
fisubl
popa
jo
repnz
mov
sub
bound
loopne
ljmp
and
xchg
xor
les
pusha
mov
ret
adc
imul
adc
mov
loopne
fldt
shl
inc
sub
sbb
pop
sbb
jg
push
add
and
add
mov
and
out
test
add
scas
mov
xchg
cwtl
push
pusha
add
mov
mov
and
ja
fiaddl
ss
je
adcl
testb
pop
adc
lret
ret
pusha
and
pop
mov
add
pusha
mov
ss
inc
fldl
push
popa
or
mov
cmp
jg
jl
push
push
inc
adc
bound
stc
dec
xor
add
out
popf
addb
add
pusha
pop
sub
dec
subb
cmp
adc
pop
adc
mov
cmpsl
mov
dec
out
mov
or
xor
js
jle
hlt
ds
cmpsl
pusha
push
outsl
adc
loopne
pusha
stos
and
push
mov
movb
inc
cs
popa
stos
in
cltd
lret
jae
pusha
add
push
into
pcmpgtb
sbb
or
loopne
adc
pushl
lods
loopne
das
loopne
movsb
inc
pusha
pop
sbbb
out
xor
mov
or
sbb
in
cmp
sub
popa
add
mov
outsb
add
and
pop
jg
call
orl
inc
mov
mov
fadd
push
js
outsb
cmp
cmp
xchg
fucomip
jmp
jno
adc
mov
nop
push
mov
sbb
dec
arpl
adc
mov
and
inc
cltd
mov
adc
fcmovu
mov
lret
mov
or
popa
pop
subl
cmpsb
lock
cmc
sub
fildl
test
mov
std
cmp
faddl
daa
lcall
dec
push
push
or
sub
or
fbld
adc
cmp
mov
rcr
je
std
stos
or
mov
mov
pop
popa
std
mov
div
cmp
cmp
arpl
xor
fdiv
ljmp
mov
stc
mov
xor
aam
sbb
xor
or
jmp
pop
and
fs
mov
pop
jmp
mov
sar
pop
movaps
rclb
or
mov
idivb
and
cmp
inc
inc
loope
data16
into
jo
rol
imul
adc
aad
sbb
mov
pop
icebp
add
sahf
icebp
test
mov
inc
fldt
sbb
sbb
mov
mov
inc
mov
or
jne
inc
mov
aas
ja
inc
add
and
rcrb
mov
cld
les
stos
ret
test
in
sbb
mov
stos
pushw
jl
mov
mov
shll
lds
sub
popa
or
mov
dec
jnp
jbe
add
enter
call
ds
sbb
in
sbb
jge
xor
mov
adc
aaa
add
pop
push
jno
xchg
mov
cmp
mov
dec
int3
xor
and
add
inc
rclb
in
shll
mov
adc
rcll
out
inc
adc
dec
or
inc
push
jge
sti
fisubrs
outsb
movsl
add
int
push
adc
pop
stos
add
push
into
inc
jp
add
in
or
and
cltd
push
adc
inc
push
sub
shlb
adc
adc
sahf
add
inc
aad
data16
mov
add
push
dec
sub
int3
adcb
adc
imulb
shl
fimull
xchg
pop
jb
adc
ja
dec
mov
and
call
mov
push
jmp
pop
mov
call
and
pop
les
popf
add
dec
mov
push
dec
and
nop
ja
push
mov
test
xchg
push
dec
in
cld
mov
inc
inc
jnp
pop
jg
pop
push
push
loop
es
pop
jne
movsl
loopne
les
mov
and
xchg
mov
jo
adc
add
add
xor
adc
adc
xchg
push
and
push
in
call
ret
pop
sarl
push
sbb
mov
push
cmp
mov
das
sbb
sub
jbe
div
mov
xor
xchg
push
mov
movl
faddl
mov
mov
or
push
jge
cmpsl
call
shll
divb
call
jbe
xchg
cmpl
pop
icebp
mov
push
add
std
es
jmp
ss
jl
push
adc
sbb
or
cld
sub
or
je
faddl
mov
popf
push
orb
sarb
pop
dec
dec
incb
popf
out
pop
jmp
out
lock
xchg
add
or
mov
adc
or
jno
repnz
or
rcll
xchg
xor
test
push
mov
xchg
adc
jne
or
into
adcb
adc
inc
cs
clc
rorb
add
dec
adcb
and
jo
cltd
inc
cld
and
xor
cmp
cmp
shl
adc
lock
cmp
jb
scas
es
mov
mov
cmc
jo
shlb
mov
mov
scas
push
lock
add
and
into
push
push
loope
push
or
mov
push
pop
adc
repnz
inc
aaa
mov
or
comiss
add
scas
or
hlt
lea
sbb
movb
push
hlt
call
xor
inc
adc
jb
adc
or
arpl
ret
jmp
clc
jle
mov
mov
stos
lea
jae
or
sbb
outsb
int
xchg
mov
add
pop
insb
and
sahf
int
pushf
iret
adc
xchg
lock
push
dec
or
leave
insb
fmull
pop
mov
xchg
mov
jmp
lea
movsb
xor
adc
inc
mov
in
jl
inc
cs
out
clc
dec
fcoml
mov
push
cli
lods
push
cmc
add
sub
jnp
and
jl
aas
push
orb
and
inc
jmp
mov
xchg
or
or
cmp
sbb
push
sbb
push
cmp
pusha
lds
roll
sbb
xor
shrb
cwtl
push
call
or
into
add
xor
mov
icebp
mov
cli
or
xor
dec
cld
lahf
sub
stc
divl
addl
je
xor
push
shrb
jne
add
clc
cmp
incl
add
mov
and
out
adc
mov
outsb
clc
fmull
pop
mov
dec
test
inc
jb
jle
push
push
lock
jo
inc
push
push
std
sub
jno
scas
and
sub
sbb
push
mov
or
push
inc
push
pop
inc
and
repz
xchg
divb
push
fbld
xorb
sub
movl
mov
sahf
mov
test
pop
inc
mov
mov
push
mov
inc
xchg
mov
jle
jge
xchg
or
push
inc
nop
xor
sarb
dec
test
pop
mov
clc
inc
scas
add
clc
push
or
dec
mov
test
xchg
pop
or
adc
mov
enter
push
inc
add
fildll
and
cltd
dec
sbb
clc
stos
fcoms
pop
inc
call
inc
jmp
adc
sti
je
pusha
jbe
notb
xchg
jo
in
push
adc
mov
test
scas
inc
arpl
jmp
insl
pop
mov
and
je
mov
add
or
mov
outsl
loope
xchg
mov
daa
push
inc
ljmp
lret
or
int3
repnz
pop
pusha
std
add
mov
add
cmp
aaa
bound
jbe
aam
js
fcmovbe
orb
jge
or
add
inc
scas
and
or
subb
ja
xor
add
fcoms
and
xor
inc
or
and
cmp
cs
pushf
xor
mov
xor
clc
inc
jbe
fdivr
addl
adc
jge
repz
add
inc
add
cmp
jl
fisubrl
sahf
nop
mov
inc
add
xlat
aas
lods
add
call
cmpl
cmp
test
adc
xchg
add
pop
or
jae
rorl
push
sti
rorl
fadds
add
testl
and
or
inc
pop
aam
pusha
cld
mov
xor
je
and
inc
pop
pop
add
sub
or
add
in
cwtl
rclb
push
outsl
adc
andb
jecxz
pushf
sbb
add
adc
push
mov
and
add
xor
mov
lock
pop
out
in
bound
aas
sbb
cmpb
adc
xorb
jb
jmp
xorb
mov
jbe
test
test
jne
call
mov
sub
mov
xchg
nop
add
cwtl
lret
and
adc
pop
push
lods
dec
fldenv
adc
sahf
adc
adc
push
inc
mov
fsubr
xchg
xor
sub
and
push
xor
mov
adc
sub
mov
pop
movsl
pop
xor
ret
or
adc
jbe
push
add
jbe
push
jo
inc
sub
mov
add
movsb
or
icebp
inc
cmp
xor
pop
sub
enter
sbb
test
pop
or
stos
fisubrl
dec
push
dec
jmp
adc
inc
test
movl
clc
test
add
inc
test
adc
lods
mov
fistl
mov
xchg
or
add
adc
push
hlt
inc
out
add
pop
loope
xor
mov
rorl
mov
xchg
je
mov
rclb
into
ja
std
cltd
nop
call
mov
mov
insb
fs
and
add
dec
test
adc
push
fistps
sti
pop
rcrb
dec
sbbb
push
or
or
cmp
and
inc
xchg
lods
cmp
mov
push
push
pop
call
sahf
add
or
ror
add
inc
fcoml
jmp
mov
mov
lea
addl
push
mov
stos
test
icebp
add
cli
sub
lods
inc
jo
sub
outsb
inc
subb
and
or
xchg
push
push
dec
xchg
fldt
adc
inc
mov
mov
sub
mov
call
inc
cli
addb
pop
rcrb
xchg
out
ficoml
sarb
fsubp
xor
mov
push
adc
mov
pop
lock
ret
sbb
add
and
fbstp
mov
push
add
jmp
and
xor
rclb
insl
out
adc
or
mov
movzwl
stc
popa
or
jo
loope
dec
push
jp
or
push
test
decb
je
mov
xor
test
dec
aaa
mov
sub
hlt
rorb
inc
ret
or
or
jle
clc
stos
add
xchg
inc
sti
cld
cmp
pop
loopne
pop
pop
leave
jmp
xchg
ja
add
test
pop
sub
dec
test
push
inc
inc
pop
outsl
push
push
scas
pusha
es
mov
jle
add
dec
xchg
loopne
push
andl
dec
xchg
arpl
lcall
jge
inc
mov
xor
mov
mov
insl
sar
bound
test
fisubrl
stos
adc
nop
add
ret
sti
or
xchg
pusha
adc
bound
cmp
jecxz
push
xor
ss
or
dec
jbe
sar
aas
inc
insb
es
adc
popa
push
scas
push
mov
push
pusha
and
aaa
adc
inc
pusha
push
jb
clc
ret
and
cmpsl
lea
bound
push
rcll
add
dec
sbb
cld
push
xchg
cmp
dec
push
cmp
or
ret
pop
inc
std
mov
and
dec
push
lea
loopne
push
lock
jbe
add
adc
and
movsb
xor
inc
sbb
subb
addb
mov
pusha
aaa
rcr
loop
enter
sahf
nop
jl
jl
fstl
jl
or
jle
pop
sub
add
popa
and
loopne
test
subb
push
arpl
repnz
insb
outsl
or
and
xchg
jne
orb
mov
jmp
popf
add
and
xor
mov
and
dec
or
sbb
xor
or
sahf
scas
les
sbb
loop
cmp
pusha
jl
cmp
pop
cmp
loopne
fisubrl
stos
mov
add
lock
jb
and
push
in
sti
shrb
xor
jg
ljmp
ja
cli
loope
xor
or
push
adc
add
sub
mov
sbb
lea
jne
mov
pop
add
jno
jmp
addl
adc
mov
loopne
pop
inc
push
and
nop
fsubrp
add
or
das
push
lcall
shlb
jecxz
xor
fwait
inc
clc
inc
mov
enter
cmp
cmp
jp
pop
and
mov
lcall
or
call
mov
outsb
sbb
or
dec
mov
mov
xor
aad
idiv
or
jl
bound
sub
pusha
adc
push
jecxz
sbb
std
or
xchg
cli
cmpl
and
mov
dec
push
inc
test
sub
mov
lods
sub
lcall
sbb
popa
mov
loope
jecxz
push
push
popl
fldt
xchg
adc
addr16
mov
add
pushf
popa
ss
rcrl
loop
pop
pop
pop
cmp
ds
scas
call
loope
mov
addb
imul
daa
sbb
sbbb
and
idivb
push
call
jmp
jo
les
ret
pop
push
std
mov
inc
imul
js
inc
cs
inc
fwait
decb
lcall
in
inc
sub
jbe
cmp
rcll
andb
add
xchg
inc
adc
repz
insb
call
xor
ss
movl
scas
mov
add
jbe
add
dec
shlb
xchg
jb
xchg
fiadds
out
arpl
fs
push
inc
les
subb
or
adc
add
cmp
das
rorb
lcall
andl
cmpb
es
mov
and
ljmp
cmp
push
pop
add
cmp
inc
jmp
call
mov
lret
pop
inc
dec
out
rcl
shll
inc
in
out
mov
ret
pop
call
mov
loopne
add
clc
loopne
mov
adc
and
and
imul
notb
pop
mov
pop
or
rolb
aam
test
mov
add
or
jle
jl
add
xor
mov
cmp
push
mov
insl
or
mov
and
test
mov
shlb
or
push
shrb
mov
repz
movsb
cmc
push
sbb
hlt
mov
cmpsb
int
jge
lret
adc
adc
call
adc
sbb
cmpsb
stc
mov
add
add
ja
add
mov
loope
sbb
lret
cmp
cmp
lods
adc
mov
inc
and
mov
cmpl
push
jb
idivl
push
cmp
push
and
push
test
adc
jo
ret
or
add
jbe
inc
pop
mov
xchg
push
or
fwait
call
adc
cld
xchg
cmc
cs
loopne
in
jmp
mov
stos
and
push
mov
test
xlat
shlb
xor
jmp
mov
mulb
dec
adc
adc
dec
loopne
mul
jbe
mov
nop
xchg
clc
iret
sub
add
clc
mov
add
mov
push
ds
lods
xor
in
aaa
inc
ss
add
pushl
test
mov
adc
lahf
mov
pushf
stos
push
xor
loope
enter
or
inc
push
inc
mov
mov
jle
movsb
and
cmpsl
call
mov
and
bound
add
testb
in
mov
inc
or
dec
add
dec
pop
push
or
xor
xor
test
mov
inc
gs
ljmp
mov
lock
or
xchg
cwtl
add
adc
jle
pop
push
add
rcrb
mov
sbb
ret
lock
inc
inc
cmpsb
push
mov
add
movsl
xchg
add
inc
xchg
jmp
pusha
cld
dec
popa
icebp
fst
loopne
out
add
call
add
mov
dec
pop
js
ss
jl
xor
cmp
movsb
xorb
mov
loopne
cwtl
and
ja
mov
jge
testb
sbb
jb
js
jp
mov
xchg
add
clc
pop
sub
add
xchg
jle
clc
rolb
loope
or
cmpsb
adc
push
mov
pop
out
jno
imul
mov
add
dec
pop
adc
jbe
lock
push
loop
adc
subb
mov
adc
outsl
inc
stos
sub
cld
and
lods
mov
xor
lock
es
cmp
ljmp
mov
dec
pop
pusha
mov
repz
cmpsb
mov
jbe
jmp
pop
test
ljmp
or
popa
repnz
ss
loop
cmp
jg
and
jb
scas
jne
lock
push
xor
mov
push
pop
mov
mov
sbb
sahf
push
lret
sahf
call
push
inc
stos
jg
add
icebp
adc
sub
dec
loope
xor
inc
jle
incb
je
sbb
lods
push
jo
dec
daa
inc
mov
jge
or
pop
shll
out
loopne
xor
inc
ja
aaa
adc
fistpl
mull
pop
push
add
jmp
cmp
jmp
andl
xor
adc
cwtl
mov
movsb
adc
adc
adc
mov
aaa
and
or
add
std
je
inc
xchg
cltd
mov
mov
cmc
jg
dec
xor
jmp
or
or
lock
jmp
std
outsl
scas
push
inc
or
jmp
mov
sbb
shlb
dec
out
enter
and
jmp
mov
or
das
jmp
and
pop
sahf
inc
cs
push
or
add
mov
xchg
mov
std
arpl
cmp
xchg
inc
pop
leave
cmp
data16
adc
pop
shll
sbb
dec
mov
lret
repnz
lcall
add
and
decl
mov
call
jo
mov
push
add
xor
sbb
xchg
push
in
dec
or
rcr
dec
xor
dec
inc
loopne
push
cmpsb
or
movl
dec
jo
loopne
inc
aaa
jp
subb
mov
adc
mov
add
es
add
pusha
inc
pusha
in
ljmp
add
mov
cwtl
pop
pop
mov
pop
and
arpl
sbb
dec
adc
xor
ret
out
push
push
jo
mov
mov
pusha
call
jno
data16
and
push
mov
icebp
push
decl
mov
mov
sti
in
jle
add
jle
mov
rcrl
push
mov
lock
push
mov
dec
dec
sub
and
test
adc
jno
jno
dec
or
aaa
add
stos
incb
fs
mov
jo
add
adc
jecxz
inc
and
mov
or
movsb
sbb
fldt
pop
sbb
loopne
xchg
adc
pop
inc
xor
sbb
inc
call
lret
push
mov
data16
adc
icebp
add
subl
inc
xor
mov
push
add
cmp
jmp
mov
call
pop
sub
or
or
pop
jo
mov
mov
adc
movsl
mov
adc
ljmp
hlt
lock
bound
mov
lock
push
pop
push
sti
add
pusha
jge
xchg
mov
dec
mov
push
inc
push
jbe
ja
movsb
inc
mov
add
enter
loopne
mov
mov
and
movsb
loopne
cld
push
push
jo
jno
jle
add
out
sbb
sbb
jae
mov
scas
dec
pop
adc
add
stos
dec
pop
jp
ja
sub
jge
cmp
cltd
adc
dec
push
in
jp
mov
lods
jle
push
pop
add
mov
adc
inc
pushl
andl
test
ss
cmpsb
push
call
jne
mov
pop
adc
adc
test
insb
pusha
push
xor
stos
mov
push
cmp
add
mov
popf
lret
das
mov
jb
add
jge
pop
mov
sub
mov
and
nop
dec
inc
fidivrl
js
test
les
repnz
jo
in
mov
xchg
add
sub
js
call
add
mov
inc
xor
xor
push
xchg
fsubs
ret
in
pop
sbb
and
lock
add
sub
js
movsb
xchg
and
mov
jbe
mov
lret
test
xchg
and
xor
jae
push
je
adc
cwtl
xchg
movsb
mov
push
fdivr
add
jne
lods
mov
lods
mov
mov
mov
jb
xchg
mov
add
xor
xchg
cmp
jb
mov
sbb
jb
inc
or
addl
push
or
push
test
xchg
jne
addb
ret
cmpsb
js
icebp
call
push
xor
lods
andb
jb
sbb
inc
sub
adc
test
notl
ror
adcb
mov
repnz
mov
fisubrl
ret
fidivs
xor
mov
dec
sti
add
fistl
and
popf
outsb
jo
jo
adc
dec
in
rolb
add
add
adc
cmc
ss
add
movb
je
out
data16
out
mov
push
pusha
inc
mov
call
and
and
cld
scas
push
pop
in
sbb
sbb
fwait
mov
cld
int
add
nop
fistl
dec
js
add
lock
cmp
sub
jnp
jle
sahf
clc
je
xor
imul
mov
aas
cmp
sub
arpl
pop
pusha
jle
in
testb
mov
ret
add
mov
outsb
mov
xor
pop
mov
add
xchg
push
ret
cld
add
sbb
xchg
and
rclb
mov
fidivrl
mov
adc
add
inc
xor
sbb
ja
fmuls
mov
call
jg
pop
shlb
push
shrb
push
sub
adc
das
rclb
adc
aas
sbb
push
add
pop
add
sub
dec
adc
loope
lock
lds
shrl
pop
inc
popa
and
mov
mov
aaa
rcl
shlb
sbb
shlb
clc
push
or
push
push
aad
xor
pop
inc
js
movl
cmp
push
fsubrs
pop
mov
or
jae
or
sbbl
xchg
xchg
add
xor
data16
sub
pop
pop
scas
incl
cs
xor
cmpps
cmp
mov
lods
icebp
add
popl
sbb
sub
mov
adc
push
call
filds
dec
jl
outsl
xchg
pop
inc
rorb
shll
icebp
in
lock
pop
inc
in
push
push
stos
fcoms
insb
cltd
cmpb
sarb
daa
lods
notl
stos
in
push
sub
hlt
jp
icebp
mov
jbe
aam
cld
add
loopne
lcall
jle
mov
pop
cmp
test
mov
mul
sbb
jecxz
test
push
xchg
mov
adc
add
fs
push
and
aam
nop
pusha
xor
push
mov
in
out
js
sub
pop
mov
push
push
xchg
loopne
dec
add
cmp
test
aam
add
sbb
ret
rolb
push
jo
cmp
stos
cmp
sar
call
cltd
sub
add
out
clc
add
add
xor
lods
and
dec
lret
decl
sbb
adc
loop
lea
cli
mov
and
cli
push
loopne
movb
outsb
iret
loopne
loopne
add
je
add
mov
call
dec
cmp
aad
jb
in
push
pop
lret
aam
adc
popa
add
push
and
pop
mov
loopne
mov
add
add
cld
cs
loopne
or
inc
add
dec
mov
call
js
mov
cmp
jl
push
push
shrb
inc
lock
test
je
pop
dec
mov
and
cmpsb
test
and
ss
push
ljmp
sbb
sub
rol
xchg
fmul
pop
push
sbb
lds
or
and
aam
outsl
sbb
shrl
filds
ss
sbb
adc
pop
fprem
or
loope
adc
jnp
cld
sbb
cmp
or
popa
pusha
sub
jl
or
jne
mov
mov
mov
outsb
add
push
lock
dec
sbb
ret
add
ljmp
andl
mov
jb
cmp
ja
or
cmp
dec
orb
mov
ss
loope
nop
sub
mov
add
push
or
ss
loop
push
sbb
adc
ds
std
sbb
mov
test
ds
loopne
pop
ljmp
push
test
bound
leave
mov
push
sub
movsl
aas
add
scas
sarb
clc
in
mov
jle
test
call
mov
lret
pusha
pop
push
fnstenv
popa
push
loop
jmp
xchg
insb
stc
pop
mov
pusha
dec
push
jle
movsb
loopne
sbb
cli
je
jae
nop
cmp
pusha
pop
loopne
push
inc
sbbb
add
xchg
ds
leave
call
mov
and
sbb
sbb
pop
push
and
mov
add
sarb
sahf
push
lods
or
sub
or
decl
iret
loop
pop
and
je
mov
cli
ja
inc
lock
test
push
xor
add
and
xor
sub
ja
add
pusha
adc
loopne
fdivs
mov
loopne
or
mov
xlat
loopne
xor
jae
push
loopne
cmp
mov
dec
add
push
icebp
ljmp
dec
jbe
mov
pusha
push
in
loope
push
pop
pop
cmp
loop
push
loopne
cmp
cmpsb
mov
adc
sbb
hlt
ffree
push
and
aam
and
jmp
cmp
jb
call
pop
lods
pusha
dec
jp
aam
push
cmp
dec
cmp
fldt
les
or
adc
mov
adc
adc
loopne
call
sbb
sub
aas
add
lock
sbb
dec
push
mov
inc
add
ss
cmp
push
and
xor
mov
cmp
sarb
mov
and
daa
push
jl
cmpsb
adc
loop
and
push
loopne
adc
fsubs
dec
shlb
mov
add
inc
jbe
jle
add
out
xchg
mov
ljmp
push
jmp
sub
xor
or
call
sub
repnz
or
sbb
jo
fidivs
stos
or
jnp
lret
xor
out
inc
lcall
dec
je
cmp
mov
add
dec
repz
adc
pushl
push
or
jae
mov
scas
daa
jb
sub
roll
jb
push
mov
mov
or
fists
add
jo
and
xchg
outsb
data16
dec
add
sub
lock
add
inc
or
jle
hlt
scas
or
push
jge
sub
loopne
sbbl
je
pushf
pop
sub
jne
dec
push
push
push
ljmp
xchg
push
mov
cmp
add
xchg
mov
fwait
add
sti
mov
mov
loop
add
arpl
pop
lock
test
cld
mov
movb
jg
and
and
push
out
rcl
add
repnz
jmp
cltd
or
fcompl
and
call
and
jo
test
inc
ljmp
sub
call
and
push
call
or
inc
call
es
fimull
insl
jo
mov
and
dec
nop
xor
cld
or
test
jo
push
push
sub
mov
je
fnsave
mov
push
push
fwait
lods
add
js
imulb
inc
inc
add
mov
cmpsb
data16
jg
jecxz
adc
jbe
push
call
push
pop
fstps
pop
shll
xor
cld
arpl
pop
cli
cmpl
push
bound
xor
adcl
fiaddl
ficoml
xor
repz
push
xchg
xor
jge
add
xchg
add
or
decb
add
and
xchg
xchg
pushf
cmp
je
mov
lods
shl
fcompl
jle
jb
sbbb
mull
test
es
push
mov
ja
mov
push
add
adc
jbe
ljmp
sub
or
adc
inc
stos
fdivrs
loope
aam
pop
popa
add
and
and
and
test
ja
jo
mov
pop
push
lock
cmp
shrl
repnz
js
ja
mov
push
xchg
pop
inc
call
cld
std
mov
shlb
nop
dec
push
clc
inc
pop
loopne
mov
pop
adc
addl
jmp
add
negb
je
jb
xor
xchg
mov
idivl
add
push
das
enter
popf
clc
adc
xor
lock
push
inc
rcl
outsb
or
call
nop
sahf
idivb
aad
add
push
push
aas
pop
fwait
or
add
test
cmpsb
je
add
es
mov
jbe
movsb
adc
ljmp
inc
add
ja
idivb
shrl
mov
push
bound
scas
xor
mov
push
mov
xchg
lock
ljmp
idivl
pop
jmp
cmp
add
cmpsb
dec
mov
push
mov
mov
cmp
push
fildl
xor
add
push
ss
add
xor
pop
pop
adcb
pop
inc
lret
push
lock
ss
jne
testb
sbb
mov
loop
mov
out
or
adc
mov
in
add
mov
jno
inc
adc
or
test
add
pop
sub
mov
adc
inc
sbb
adc
pop
adc
testb
or
shll
push
pushf
xorl
in
mov
add
std
lock
je
call
xchg
fadds
stos
xor
sbb
jge
adc
add
xor
sbb
jg
adcl
ss
xchg
mov
push
jo
decl
fadds
icebp
pop
xchg
add
add
movsb
icebp
pushf
xor
movsb
aas
daa
mov
dec
es
pop
jae
test
add
or
mov
lock
xchg
aaa
pop
pusha
sbb
outsb
inc
dec
inc
rcl
cld
xor
decl
loopne
mov
fidivs
fmuls
add
lcall
and
jne
mov
add
push
adcl
call
loope
push
loope
je
mov
jbe
ljmp
mov
movsb
test
push
mov
dec
mov
mov
int
or
or
insb
push
mov
shl
mov
or
or
loop
es
jb
or
adc
shlb
push
xorb
mov
pop
jmp
jecxz
jbe
pop
jge
sbb
sbb
xchg
mov
add
pushf
sbb
jo
lods
adc
movsb
jne
adc
push
adc
xor
or
adc
inc
xchg
mov
and
adc
aam
fsubp
mov
add
loopne
mov
imul
fldl
fs
add
pusha
cmc
jo
test
pop
and
xlat
adc
repnz
or
dec
sbb
inc
or
pop
mov
adc
xor
inc
push
mov
xor
mov
sbb
mov
xchg
call
test
inc
jne
xor
fwait
mov
or
adc
call
in
dec
or
jmp
xor
add
bnd
xchg
aam
pop
add
mov
xor
jecxz
ds
lock
mov
or
mov
xchg
xchg
or
sbb
jg
inc
adc
inc
mov
call
jo
jl
nop
pusha
jg
jg
mov
cld
wrmsr
or
pop
dec
adc
push
icebp
ret
add
sbb
cs
fadds
add
and
pop
mov
xor
add
or
or
sub
je
push
push
mov
aaa
jl
adc
rolb
lock
mov
adc
pusha
inc
xchg
cmc
push
addl
add
aam
cld
mov
sub
insl
sub
pop
stos
lea
push
push
sti
pop
outsb
sub
stc
add
sti
push
cwtl
xor
arpl
aaa
lods
je
mov
js
mov
mov
push
cmp
outsb
push
out
jo
aad
xchg
stc
sbb
mov
dec
jne
cmp
inc
sarl
add
cli
or
fistpl
jmp
push
add
pusha
arpl
fcmovne
mov
shlb
adc
pusha
ljmp
pushl
outsl
sbb
adc
sub
pop
loop
adc
pop
insb
mov
inc
lods
or
inc
jl
ds
lods
lahf
sbbb
mov
ljmp
sub
mov
cld
ret
rorl
dec
faddl
lods
cmp
cmc
and
add
clc
cmpsb
sarb
mov
mov
push
fwait
mov
pop
add
inc
stos
and
in
mov
mov
cmp
mov
push
push
or
xchg
andb
mov
dec
dec
lahf
pop
dec
sub
in
shll
inc
pop
test
test
adc
enter
fbld
out
dec
pusha
add
fcomip
jb
cmc
cmp
mov
push
cld
and
or
call
xor
call
subb
pop
dec
jns
insb
adcl
sub
adcl
sbb
push
mov
insb
cwtl
sbbb
das
mov
incl
push
cmp
xchg
andl
stc
shl
xchg
sub
sarb
loope
or
movsl
outsb
pop
inc
test
push
subb
or
push
sti
mov
hlt
ret
and
rolb
inc
sbb
and
add
add
rolb
inc
lret
push
mov
shll
mov
mov
stc
nop
aad
add
shlb
push
sbb
outsb
push
or
subb
ret
add
js
push
enter
movsb
jle
shlb
xor
mov
or
mov
lcall
pusha
sub
mov
mov
cmp
in
jmp
push
mov
ds
mov
adc
pop
scas
mov
call
xchg
mov
xchg
add
sbb
call
xorb
push
mov
outsb
pop
adc
push
lods
ja
push
add
push
xchg
cltd
add
mov
jne
es
rorb
xchg
sub
jnp
adc
pop
push
lea
or
adc
pop
pop
push
push
inc
insb
out
add
sub
push
cmp
or
cwtl
sarb
fs
test
pop
addr16
pushl
pop
mov
movsl
lods
ret
mov
mov
stos
rolb
xor
pop
loop
push
or
test
shll
cli
or
decb
dec
pop
xor
adc
arpl
and
ficoms
xchg
les
rclb
xchg
xor
add
je
test
in
add
and
mov
int3
mov
scas
roll
icebp
push
stc
sub
rclb
fldt
inc
and
cli
mov
add
or
add
push
jmp
jmp
mov
add
inc
movb
adc
jbe
cmp
dec
xchg
shl
orb
sbb
jmp
imul
push
jmp
aam
and
and
or
sbb
shr
and
dec
jl
data16
xor
in
dec
sub
push
pop
jp
fucom
push
loope
xchg
loopne
dec
cld
imulb
cmp
dec
addr16
and
jo
add
and
xor
cmp
and
and
data16
dec
cli
and
jg
jg
ss
mov
jmp
into
or
loopne
mov
pop
add
cmp
sub
push
and
dec
out
mov
fwait
inc
mov
pusha
sub
jle
out
mov
loopne
outsb
leave
add
ss
jle
jle
aas
add
jl
add
fdivs
or
jmp
lods
push
rcrb
adc
dec
fwait
ljmp
dec
call
add
jge
add
call
shl
push
inc
adc
add
cmp
pop
add
mov
call
loopne
mov
add
mov
push
or
pop
cmp
jp
loopne
dec
adc
or
xorb
into
inc
mov
pop
sbb
test
int3
add
push
xchg
push
push
mov
rcl
fs
sarb
pop
scas
js
outsl
mov
ret
loopne
inc
shlb
or
jne
adcb
mov
fists
pusha
jp
pop
or
cmc
jecxz
popa
outsl
push
sub
adc
and
pop
pop
dec
or
push
and
loope
or
inc
test
mov
jg
cli
mov
push
cmp
aaa
add
in
dec
add
movsb
mov
push
push
loopne
cs
call
bound
out
push
add
lods
fldl
adc
or
add
xchg
pop
adc
sub
xchg
js
call
push
outsb
adcb
fstpl
cltd
or
or
mov
and
leave
adc
mov
xchg
sub
cmp
pusha
inc
push
push
scas
pop
or
pop
push
lods
or
jo
mov
lock
pusha
scas
hlt
notb
outsl
jl
movsl
push
and
fdiv
xor
add
lret
fidivrl
adc
dec
aam
sub
mov
and
adc
adc
jge
pop
pop
or
push
add
mov
dec
shlb
scas
xor
decl
lods
inc
dec
ss
cmp
pop
mov
dec
sbb
mov
mov
inc
cmp
jp
loopne
fbld
loopne
and
clc
test
cs
xor
adc
loopne
sub
sbb
in
push
jmp
mov
sub
push
mov
adc
push
hlt
mov
dec
jns
pop
dec
add
push
mov
in
cld
mov
lcall
fisttpl
lock
popa
sub
jl
pop
mov
pop
lods
jb
mov
pusha
dec
hlt
adc
inc
aam
add
hlt
loopne
testb
mov
outsb
add
adc
inc
ret
ja
jmp
lea
jp
std
inc
inc
ds
push
pop
loopne
jecxz
inc
adc
stos
loopne
ds
aas
push
lock
lea
xor
add
fwait
test
jg
popf
call
fs
xor
dec
xchg
add
lock
lock
push
pop
aas
je
add
add
sub
jb
mov
lock
popa
jb
add
xor
add
lods
cmp
inc
jle
add
pop
js
iret
mov
and
subb
lea
xchg
rcl
gs
fcmove
adc
and
xor
pusha
cmp
jbe
inc
cmp
fdiv
decl
push
add
incl
cmp
sbb
lock
mov
movl
cli
mov
add
nop
lods
add
insb
clc
push
or
pop
shr
loop
jg
faddl
imulb
ja
or
lock
mov
adcl
push
test
ss
push
mov
mov
add
cmp
mov
ret
outsb
aaa
sbb
and
mov
je
mov
mov
cmp
negb
xor
push
jb
test
cli
nop
adc
addl
js
stc
pop
je
jl
in
add
ljmp
mov
hlt
imul
add
mov
aam
dec
or
push
aas
adc
sub
and
push
mov
adc
add
lock
insl
std
or
je
dec
add
je
mov
xor
xor
lcall
test
ficomps
adc
and
xor
out
push
and
clc
mov
push
fimuls
jmp
sarb
mov
repz
mov
xor
test
and
call
push
and
inc
xor
mov
mov
sub
jp
adc
test
shlb
cltd
outsb
mov
sub
arpl
xor
test
mov
push
inc
add
pop
or
pmaddwd
mov
mov
xchg
sub
mov
inc
xor
cmp
add
jo
stos
lea
lret
adc
fs
jmp
mov
xor
mov
sti
cmp
je
lock
int3
add
add
dec
mov
add
and
dec
push
insl
jg
mov
pop
xor
adc
xor
je
pop
sub
cli
mov
jecxz
out
pop
test
ja
adc
mov
xor
pop
test
js
or
out
stos
and
outsl
loopne
cmp
add
or
adc
out
jne
loop
loopne
inc
mov
ret
xor
clc
jg
mov
mov
lock
xor
imul
xor
sub
sbb
jne
jo
jmp
jno
push
aad
add
je
dec
cld
imul
fcoml
inc
mov
sbb
mov
xchg
clc
pop
sub
mov
ljmp
inc
mov
dec
cmp
movsb
call
inc
inc
push
addb
rorl
pusha
or
mov
mov
add
dec
or
hlt
xchg
adc
lcall
cmp
pusha
mov
mov
lods
lret
mov
out
lea
mov
jmp
icebp
inc
sub
or
out
mov
addb
push
or
jo
jmp
ja
stos
in
call
cmp
adc
push
dec
push
xchg
jle
mov
test
out
mov
adc
adc
mov
mov
mov
fldl
je
push
mov
xor
xor
add
mov
je
fadd
and
jl
pop
jp
sub
mov
popf
je
push
call
and
jmp
adc
cmp
fisubrs
jge
push
clc
xchg
xor
jbe
pushf
jmpw
insb
or
mov
cmp
lea
or
test
loop
xchg
sbb
cs
push
into
shr
ds
shlb
cmp
dec
icebp
lret
xor
sub
and
mov
xor
push
add
icebp
jo
lods
mov
sub
movsb
lock
mov
movsb
jmp
jg
jne
mov
add
je
push
pop
or
jge
add
xchg
cld
loope
je
mov
into
push
pop
mov
adc
mov
das
lock
ret
pushfw
aam
incb
add
inc
fstps
dec
dec
pop
xor
int3
inc
mov
jb
shll
cmp
sbb
inc
adcb
sub
add
mov
inc
sub
adc
je
xor
xor
xor
lret
ret
scas
mov
add
push
int3
data16
and
dec
jp
cli
fmuls
and
fwait
ss
mov
xchg
mov
lock
xor
ljmp
aas
pop
pop
xor
sub
jno
xor
aad
enter
test
fucomi
pop
sbb
adc
jl
mov
cmp
sbb
out
push
push
movsl
icebp
sub
fidivs
adc
adc
xchg
into
pop
cmp
out
sbb
pushf
and
add
out
cmp
add
loopne
aam
or
jae
repz
adc
mov
xor
lock
mov
dec
adc
ror
jmp
cld
frstor
inc
mov
mov
je
pusha
popa
daa
or
push
adc
jo
pop
push
cmpb
or
xor
jo
mov
ficoml
je
aad
sbb
out
sub
or
mov
adc
jmp
jo
sbb
jo
incl
mov
jno
inc
xor
push
mov
lret
xor
jno
cmp
jo
fmuls
and
xor
add
lret
nop
sub
add
sbb
je
in
xor
add
or
ret
das
add
push
push
xchg
or
push
add
cwtl
scas
pop
add
xor
xor
mov
es
adc
mov
add
sub
or
xor
inc
push
push
into
and
inc
outsb
push
mov
sar
mov
xor
mov
fsubrs
mov
aaa
lods
jmp
je
in
je
mov
icebp
sbb
cbtw
pop
out
nopl
pop
pop
into
pusha
adc
jne
mov
loop
lcall
xchg
and
and
xchg
cli
incb
test
clc
push
push
mov
push
rcl
push
push
push
push
sub
dec
xchg
jo
xor
cmpsb
lahf
sub
sub
add
fistl
add
push
mov
xor
andb
add
jmp
mov
jne
push
aas
and
add
add
in
or
rcr
loope
and
lret
sub
mov
pushf
insb
add
mov
inc
int
pop
daa
out
add
mov
adc
pop
nop
or
pop
cwtl
jbe
shrb
push
or
rclb
je
rolb
add
rcl
stc
push
mov
mov
popa
xor
and
lods
outsl
stos
aaa
aaa
pop
mov
add
inc
push
scas
cmp
outsl
xor
cs
cli
stos
adc
fdivs
cmp
mov
and
add
add
lods
lcall
pop
or
jno
cld
add
or
test
ror
add
xchg
push
and
lods
adc
cmp
adc
hlt
push
cmp
call
or
sub
push
js
pop
adc
or
add
in
test
dec
push
pop
leave
cmp
jb
add
fsubs
iret
add
push
mov
popf
add
inc
sub
push
shrb
cmpsb
add
aad
pop
pop
jns
and
xchg
jb
inc
adcl
in
nop
aaa
or
xchg
cmp
push
add
daa
or
fdivrl
pop
jb
rclb
add
sbb
cmp
and
sub
ficoml
adc
adc
xchg
mov
jae
lds
push
push
testb
mov
jg
call
icebp
cmpb
aaa
and
jae
in
mov
pop
xchg
sub
mov
sarb
cwtl
pop
add
sar
jg
add
add
rorb
or
add
in
or
repnz
pop
sbb
jge
dec
pop
adc
mov
out
lock
push
rolb
inc
pop
std
add
or
add
dec
and
test
lods
in
mov
cmp
pop
repnz
mov
pusha
add
adc
xor
and
cmp
lock
add
insb
push
fldl
ret
add
mov
adc
mov
jo
or
and
jo
xlat
xor
lret
and
outsb
call
push
push
and
or
dec
les
lahf
call
xchg
push
negb
jl
add
cltd
test
sub
jecxz
sbb
adc
jbe
ds
arpl
or
mov
inc
ja
or
jge
add
or
out
rorl
push
decb
adc
rcl
incl
shlb
jno
push
test
jl
mov
adc
inc
cmpsb
xor
stos
nop
enter
jae
push
int
gs
mov
adc
in
addb
faddl
pusha
xor
xor
daa
iret
or
lret
call
loope
ljmp
inc
scas
loopne
pusha
sub
inc
pop
add
call
or
mov
pop
xor
adc
pop
cld
pop
sbb
pop
mov
or
xor
outsl
int
adc
pushf
pop
and
imul
test
cmp
jp
inc
jae
inc
xchg
push
dec
jp
mov
shrb
pusha
sbbb
mov
push
mov
test
pusha
out
dec
dec
lahf
gs
sbb
push
dec
xchg
jo
xor
loope
insb
fldl
sub
in
add
and
pop
std
pusha
sub
inc
loope
inc
xor
test
jne
roll
jo
jp
bound
mov
dec
push
push
pop
lcall
addb
push
inc
test
repnz
lods
pop
int
or
or
add
lahf
hlt
cltd
add
pop
push
cmp
mov
loopne
cmp
lock
and
aad
pusha
bound
adc
adc
es
add
or
pop
xor
fstl
mov
push
cmovl
cmp
ret
gs
mov
test
inc
cmp
adc
and
ljmp
andb
pop
push
es
loopne
out
mov
inc
fisttpl
dec
ja
cmp
pusha
pop
insb
dec
mov
repnz
push
inc
or
inc
pop
jl
popa
aaa
inc
cld
into
cvttps2pi
cmc
add
out
bound
fwait
popa
cmp
jae
cli
push
cmpsb
fistpl
cmp
cmp
adc
dec
outsl
movsb
or
pop
sub
lea
pop
inc
loopne
or
pusha
push
pusha
or
sub
pop
xor
aaa
xchg
mov
xor
daa
sbb
ret
or
popa
inc
loope
pushf
call
lods
test
jb
adc
test
ss
insb
jmp
add
loopne
pushf
aam
call
add
pushf
repz
adc
mov
movl
jb
sbb
loop
adc
fadds
subb
sbb
ss
and
xor
in
pop
clc
mov
xor
adc
vmwrite
pusha
lahf
popa
push
adc
push
pop
mov
mov
rcl
loopne
adc
push
inc
arpl
push
push
or
fdiv
inc
and
xor
and
cmp
xchg
loopne
ret
shl
popa
loopne
xchg
in
jo
mov
push
push
or
xchg
loopne
addl
mov
add
jmp
test
enter
or
push
test
pop
adc
cmpb
adc
ret
add
cwtl
sub
sub
popa
xor
testb
jb
lret
adc
push
sbb
scas
mov
stc
cmp
jge
pop
sbb
sub
cmp
or
push
mov
cmp
mov
test
lds
sbb
cwtl
fwait
mov
pop
cli
add
clc
push
mov
inc
add
popl
push
cmp
orb
das
pop
rolb
adc
pusha
sub
push
xor
aaa
or
loopne
fcomip
xor
mov
mov
jo
rcr
add
xor
and
xor
ja
fildll
lods
and
pop
lret
dec
cmc
add
aad
out
xchg
jb
test
push
call
dec
sub
sbb
dec
and
lods
call
sbb
cmp
jns
inc
repz
sarl
pop
add
jno
push
add
push
jb
cs
xorb
add
sarb
nop
push
xchg
pop
out
inc
add
int3
xor
xchg
outsb
adc
call
adc
mov
xor
leave
adc
add
loopne
adc
xchg
adc
clc
sub
call
pop
inc
cmp
and
addr16
out
int3
mov
ss
xor
sub
outsb
sub
and
idiv
lret
jbe
push
js
jno
shrb
adc
xor
ss
rolb
push
cmc
mov
jno
ja
pop
mov
jb
cmpsl
lret
rcr
scas
push
leave
jo
jno
in
test
mov
sub
pop
mov
sbb
inc
arpl
popa
shl
mov
push
jo
xor
jo
dec
pop
mov
inc
inc
jo
cli
xchg
subl
mov
pop
pop
jl
fsubs
lock
dec
adc
sbb
aaa
shll
or
or
outsl
adc
inc
inc
test
mov
cld
and
fwait
btr
add
inc
adcl
shll
mov
les
repz
xor
adc
pop
rcrb
nop
mov
call
jo
pusha
fidivs
xor
lock
add
push
ljmp
jge
mov
mov
pop
push
pushf
push
inc
push
push
jg
and
sbb
pop
out
clc
mov
sub
repz
icebp
jo
aam
inc
outsl
data16
jno
cmp
jl
and
inc
pop
fs
xor
ja
js
mov
or
xchg
outsl
adc
jo
pushl
inc
jno
nop
and
push
push
mov
and
lods
add
das
pop
jecxz
sub
adc
cmp
movsb
pop
cmp
and
orb
incl
pushl
test
lahf
jo
adc
dec
inc
xor
pop
cltd
lods
and
movsb
cmc
and
ss
je
int
jg
xor
mov
cmp
lock
adc
mov
pop
xor
lcall
jo
inc
mov
orl
pop
add
xchg
lock
test
std
sub
push
lock
xor
lret
call
repz
push
aam
add
pop
or
sub
push
jecxz
push
push
sbb
test
ja
mov
fs
inc
mov
xor
lods
or
push
or
cmp
sub
ret
push
cmpsl
push
xor
stos
movsb
outsl
or
xchg
orb
push
mov
push
cmpb
or
lock
mov
xchg
or
cli
add
add
or
mov
aaa
fcmovb
scas
mov
scas
mov
iret
xor
lock
and
mov
push
sub
pusha
push
lock
xor
pushw
jp
test
pushl
and
es
jo
sbb
loopne
add
add
lock
cmpb
lea
hlt
add
jle
add
push
incl
ljmp
lea
mov
xchg
insb
icebp
push
imul
push
xor
pop
and
xor
ljmp
adc
mov
jg
enter
out
or
dec
or
mov
add
call
pop
into
or
push
push
cwtl
mov
mov
or
xor
aaa
xor
push
mov
sub
lcall
jg
sub
dec
shl
lock
shl
daa
jo
sub
popa
jo
gs
pushl
cmp
lock
cmp
mov
loopne
cli
and
adc
in
es
mov
push
jbe
pop
push
js
add
sub
inc
xor
sbb
jno
fwait
rolb
pop
adc
push
inc
mov
jo
jg
mov
pushl
jns
ss
add
bound
adc
pop
out
incl
clc
sbb
mov
cmpsl
adc
xor
into
dec
pushf
lock
cmc
call
cmp
fildl
cmp
insb
mov
ret
add
mov
mov
push
and
popa
loope
cli
divb
pop
fucomip
push
push
gs
les
mov
push
xor
and
push
stc
and
push
adc
test
js
test
cmpb
ret
mov
test
mov
call
loopne
cmp
cmp
in
loopne
push
sub
xor
push
mov
sbb
xor
mov
sub
std
lds
xor
repz
loopne
or
or
mov
jmp
lock
pop
sbb
pop
pmuludq
or
or
incl
mov
mov
sub
jae
icebp
add
or
das
fs
pop
adc
pop
adcb
xchg
flds
push
add
add
mov
adc
sub
mov
cmp
fdivs
cld
push
aaa
cld
adc
popa
jnp
lock
in
adc
test
adc
xor
push
cld
sub
jb
je,pn
lods
lea
ljmp
fdivrl
xor
int
sub
mov
add
cwtl
adc
add
cmp
inc
je
push
fcomps
mov
das
clc
cmp
fucomi
xchg
jecxz
je
in
jmp
cltd
stos
pushl
push
cmpsb
repnz
jg
fdivs
shll
push
mov
lock
xorl
faddp
mulb
jbe
push
mov
mov
icebp
jbe
pop
call
pop
and
or
sbb
testb
arpl
add
inc
jo
cmp
movsb
add
inc
dec
mov
je
rol
push
and
mull
ret
es
push
xor
inc
mov
add
sbb
ret
stos
arpl
fucomi
vmovhps
pop
sub
arpl
repnz
mov
ds
clc
sbb
add
test
es
fwait
or
jp
adc
push
push
clc
mov
lcall
jne
and
ret
lds
fdivrp
push
add
push
add
inc
insl
in
pop
mov
sbb
or
es
jns
inc
jo
push
xor
mov
xchg
jo
es
xchg
enter
movsb
je
pop
dec
jne
lcall
xchg
daa
mov
xchg
push
jmp
push
push
and
xchg
or
enter
cmp
jbe
add
or
cwtl
icebp
cmovo
in
pop
add
adcb
jne
add
mov
or
ljmp
or
lret
in
pop
fcomps
and
lcall
cmpl
mov
aaa
push
and
jnp
subb
mov
sub
int3
rorb
add
mov
jecxz
sbb
cwtl
inc
repz
adc
dec
bound
or
push
sbbl
lock
ret
cmp
jb
lock
xchg
cwtl
dec
andb
ja
nop
dec
jle
mov
add
and
cmp
sbb
aam
sbb
cmp
sub
fcomp
or
push
dec
jb
and
outsl
pop
stos
jbe
xor
or
lret
sbbb
sub
dec
cmp
sti
je
mov
lods
loopne
jbe
leave
shl
push
add
cmc
inc
cmp
add
pop
mov
and
add
aas
les
roll
je
je
xor
add
jg
mul
outsl
jnp
sti
jg
cs
mov
ja
sub
add
lea
xchg
cmp
pop
clc
test
cmp
lea
ret
mov
jbe
add
rorl
adc
sbb
pusha
add
push
add
ret
bswap
into
divb
xor
into
ret
or
pop
cmp
sbb
add
cmp
repnz
lret
pop
add
test
cli
or
popa
push
dec
shlb
sub
icebp
inc
pop
mov
add
dec
in
mov
mov
lea
jb
xor
add
ds
push
push
push
aaa
jmp
jo
sub
je
add
push
ret
icebp
add
adc
add
daa
and
inc
xchg
jg
inc
dec
inc
push
dec
jl
pop
ret
pop
arpl
inc
add
xor
std
popf
xchg
xchg
adc
sub
inc
xchg
or
jno
mov
push
cmpsb
out
rcll
add
inc
rclb
sbb
pop
in
jl
inc
and
sub
aam
and
jp
xor
adc
scas
pop
rclb
hlt
fists
add
add
mov
or
push
add
xchg
mov
cltd
mov
cmpsl
dec
imul
pop
adc
call
jne
rcl
or
add
cmp
pop
shlb
loop
adc
call
ds
sbb
call
push
xor
in
ret
test
sbb
push
decl
dec
sub
lret
rclb
add
pop
pop
sbb
rorb
inc
sar
pop
push
add
jbe
je
and
pop
outsl
mov
dec
mov
in
lods
add
hlt
loopne
sbb
lock
outsl
xchg
daa
movsb
mov
cmp
ret
jecxz
add
cltd
je
aad
test
in
arpl
xor
inc
sbbl
sub
scas
cmp
adc
aas
cmp
add
or
incl
loop,pn
mov
pop
loope
cmp
sbb
and
sahf
scas
push
in
lret
nop
flds
xchg
call
xchg
xchg
adc
popa
sub
mov
por
nop
mov
cmpb
fadds
subb
movsl
add
cmp
shrb
loopne
add
sub
sub
lods
insb
mov
mov
sti
mov
mov
pusha
adc
and
push
xchg
sub
loopne
or
sbb
add
ss
mov
cmp
push
es
ljmp
loopne
push
int3
mov
cmp
mov
sti
jmp
or
cli
inc
loope
and
mov
lock
adc
sbb
dec
jae
sub
cmp
lcall
or
dec
addl
push
jecxz
divb
lods
add
vmwrite
sahf
pusha
dec
scas
fadd
mov
std
ja
imul
movsb
in
bound
jb
jl
jg
mov
cmp
jge
adc
add
das
sbb
lcall
add
cmp
cmp
loop
fadd
aad
cli
call
insl
call
dec
loope
adc
fdivs
cld
mov
fs
adc
inc
pop
aaa
inc
pusha
push
pusha
pop
mov
es
out
out
adc
sub
add
aaa
jbe
pusha
inc
add
adc
lock
cmpsb
loop
ss
cmp
push
and
mov
lcall
and
inc
mov
aam
lods
or
mov
pusha
or
push
loopne
adc
add
pop
and
cmp
pushf
add
xchg
cli
inc
xor
pusha
sub
xchg
lahf
mov
mov
orl
call
or
dec
jg
inc
inc
jbe
jp
fwait
xchg
jp
fmull
scas
loopne
test
sub
xchg
nop
adc
ror
xorl
mov
jecxz
addr16
pusha
xor
pop
das
mov
and
jg
pop
sti
pusha
daa
or
push
pusha
xor
push
andl
push
aam
ret
mov
push
ljmp
nop
push
adc
in
inc
loopne
shrb
mov
shlb
jg
mov
scas
lea
dec
fadd
add
loopne
test
and
ret
mov
inc
dec
ljmp
addb
mov
daa
jmp
mov
sbb
xchg
inc
adcb
loopne
pushl
subl
hlt
movsb
and
mov
adc
ret
sbb
insb
in
inc
xor
xor
adc
and
adc
faddl
cmp
fdivrp
hlt
je
shrb
or
lods
jge
add
push
test
adc
jne
pushl
nop
je
jo
aam
jb
in
jo
jp
call
dec
fmuls
mov
push
or
gs
push
xor
clc
or
push
aas
mov
add
xor
lea
in
outsb
push
test
incb
dec
lret
aam
mov
adc
dec
mov
inc
pop
gs
les
and
sbb
mov
icebp
add
inc
or
add
cmpsb
fsubl
mulb
sbb
adc
js
pop
sub
mov
es
and
cli
sarb
push
push
adc
icebp
jo
call
jg
dec
scas
push
dec
in
push
dec
inc
or
jo
ljmp
xchg
mov
pop
rolb
mov
movb
mov
clc
mov
sub
pop
and
or
xor
nop
and
push
je
scas
ss
inc
in
cli
jo
sub
push
outsl
pop
push
xor
pop
mov
jno
push
inc
test
cs
jb
pop
and
and
dec
adc
add
add
adc
add
or
jmp
ja
call
push
xlat
test
mov
and
jo
sub
pop
mov
pushf
push
popa
jo
or
lock
shrl
push
int3
add
xor
adc
aas
daa
and
or
mov
mov
fs
mov
push
sub
mov
stos
xor
faddl
testb
lods
adc
subb
lahf
and
dec
cmpsl
inc
xchg
cs
sbb
cld
aaa
mov
call
push
test
cmp
add
sbb
or
mov
aam
ret
mov
lock
cld
push
and
pusha
mov
sbb
outsl
cmp
add
jle
mov
pusha
je
and
fs
push
ret
add
icebp
or
cmp
jb
or
or
add
shrb
or
pop
es
jg
lock
sbb
icebp
xor
mov
adc
decb
repz
push
test
jg
and
jae
push
mov
je
je
jne
dec
call
sub
divl
pop
dec
dec
loopne
mov
cmp
mov
xchg
push
push
notb
cmpb
inc
mov
out
pop
add
jp
sahf
std
decl
cmpb
jne
cmp
mov
dec
jg
jmp
push
fisttps
je
add
dec
mov
push
or
inc
xchg
mov
xor
mov
mov
xchg
addb
mov
fdivs
ret
pop
jl
lcall
divl
rolb
mov
loopne
lock
xorl
cmp
cmp
aad
dec
bound
mov
std
pop
dec
inc
inc
fsubr
sbb
pushl
jo
pop
jmp
xchg
incb
push
lock
adc
sbb
mov
sbb
xor
push
push
mov
lock
hlt
hlt
jb
add
mov
cld
mov
push
push
push
push
sbb
dec
cmp
jmp
lock
add
clc
push
jo
jne
cld
add
je
mov
adc
arpl
scas
rclb
ja
pop
fdiv
add
and
data16
retw
sub
fiaddl
mov
dec
pop
inc
mov
je
or
fs
cmp
dec
jg
in
adc
ss
adc
mov
out
xor
mov
adc
or
mov
mov
sar
dec
mov
mov
jne
jg
add
je
testb
andb
addb
mov
mov
jg
repz
je
lock
and
popl
cmp
xor
mov
lcall
mov
or
sub
push
jo
jne
psubsb
adc
inc
sbb
cwtl
mov
enter
add
cmp
outsl
pop
sbb
mov
loop
inc
adc
pop
adc
add
mov
and
ror
insb
jg
jb
ret
or
je
add
inc
add
incl
pop
hlt
xchg
in
or
int3
leave
mov
add
add
jmp
adc
inc
inc
xchg
and
inc
mov
aaa
inc
pop
mov
cmp
fcoml
dec
or
pop
or
jmp
adcb
dec
mov
lods
mov
xchg
lock
lock
or
xor
inc
aam
inc
or
pusha
inc
outsl
loopne
inc
push
cmp
adc
pop
into
ljmp
das
lock
shll
pop
push
adc
call
cli
cs
and
lock
inc
pushw
mov
ja
push
lcall
adc
outsl
pop
pop
sbb
pusha
inc
xchg
jmp
test
pushl
into
dec
inc
jo
mov
lcall
xor
push
add
inc
call
inc
add
sbb
mov
pop
push
push
or
shr
pop
add
test
or
shlb
pop
jne
lock
or
cmpsb
cmp
repnz
inc
cmp
dec
jge
push
cmp
jne
cmp
sub
jl
add
add
push
add
pop
add
jo
inc
in
mov
pop
hlt
gs
jb
sub
adc
mov
or
mov
mov
add
clc
inc
jo
cmp
add
lock
inc
mov
aam
dec
or
pushf
rclb
pop
popa
cmp
pop
jo
push
xchg
ja
mov
and
cmp
clc
add
filds
mov
and
jne
and
pushl
ja
lea
cli
ja
push
add
jne
add
mov
std
adc
add
loope
cs
sahf
ret
xor
jecxz
mov
xchg
and
inc
ds
and
push
xor
and
xor
mov
push
push
mov
rclb
or
adc
popa
push
lret
pop
pop
dec
push
movsb
pop
mov
or
add
sbb
int3
movsl
add
xor
lahf
je
icebp
pop
xor
cmp
out
test
xor
cld
or
mov
adc
or
enter
jbe
ds
cwtl
repnz
mov
add
testb
xchg
inc
testl
cmp
jae
push
lea
xor
fwait
hlt
loop
jno
int3
mov
xor
divl
int3
mov
nop
add
jg
and
mov
je
les
jbe
or
adc
mov
repnz
loopne
inc
dec
cmpb
je
sub
push
shlb
pop
or
push
jecxz
sub
cs
inc
clc
pushf
adc
add
aam
cs
dec
loop
nop
shl
fmuls
imul
dec
or
or
jg
mov
add
je
hlt
add
loopne
cli
or
add
loopne
jb
add
fs
and
and
xor
enter
mov
mov
push
mov
add
aam
cmp
jbe
pop
jb
pop
lea
add
cmp
pop
lds
push
cld
push
out
dec
icebp
rolb
adc
jmp
mov
imul
and
and
les
lahf
bound
lcall
jbe
xor
cmp
jae
mov
add
or
call
inc
xchg
or
cmp
xor
jns
xchg
add
les
and
cmc
gs
cld
add
ret
push
add
sbb
stos
mov
aam
and
dec
mov
jb
pop
or
or
add
push
and
aam
pop
inc
cmp
jo
subb
mov
cltd
add
push
movsb
and
or
fmull
mov
mov
repnz
mov
or
rcr
and
icebp
mov
mov
push
push
adc
ljmp
add
and
lds
xchg
scas
lret
mov
adc
aaa
dec
das
xchg
xor
cmpsb
jbe
push
adc
and
push
test
adc
or
cld
ret
jb
or
push
dec
jmp
inc
repnz
pop
and
bound
shrb
inc
inc
rorb
hlt
shll
fwait
mov
push
not
jge
or
repnz
lock
mov
fisubl
inc
add
shll
add
xorb
test
adc
mov
xchg
mov
ljmp
pop
shlb
and
pop
jb
incl
inc
arpl
je
iret
sarb
cmp
lea
pop
call
dec
test
lds
pushf
addb
addl
cmp
cmp
sar
adc
fsub
shlb
or
mov
rcrb
push
ja
movsl
outsb
fdivr
jmp
ds
popf
add
mov
cmp
push
adc
jp
add
lock
insb
add
mov
cmp
push
jo
and
addr16
shll
test
dec
push
xchg
cmpsb
addl
dec
loop
andb
mov
shrb
push
mov
aam
and
and
hlt
jg
cmp
call
movsb
subb
mov
sub
test
add
mov
sbb
inc
push
jl
cmp
add
mov
xor
fiadds
push
lods
call
or
add
push
or
push
add
data16
enter
into
shr
add
cmp
bound
add
out
sbbl
loop
jnp
push
faddl
push
and
adc
les
sbb
push
adc
rolb
cwtl
or
inc
stos
inc
jmp
mov
or
lret
test
fwait
ljmp
and
adc
jo
push
pop
dec
mov
and
pop
into
fldt
jg
repz
mov
cs
or
jl
in
fistl
inc
push
icebp
mov
xchg
pop
and
les
jbe
out
add
data16
adc
ss
xchg
js
mov
incl
push
lock
sbb
std
rcrl
add
mov
scas
stc
push
out
pusha
or
movsl
mov
or
jmp
rcl
jle
jbe
pusha
push
cwtl
add
loopne
rolb
pusha
and
cld
insb
push
xchg
aam
mov
cld
add
cwtl
sbb
es
add
mov
or
adc
roll
pop
and
jl
sub
loopne
loopne
or
add
jp
sbb
inc
inc
xor
int3
icebp
cmpb
in
neg
or
jg
mov
mov
mov
jbe
sbb
popa
ret
mov
add
xchg
inc
lods
std
jb
push
or
and
loop
cmpsb
mov
adc
pop
push
cltd
loopne
mov
test
sub
sbb
inc
jbe
xchg
aas
pusha
jl
sub
dec
lret
pop
cmp
into
and
sbb
adc
cmp
loopne
or
fidivrl
test
orl
mov
adc
imul
mov
sbb
or
push
add
ret
sbb
xor
testb
or
push
bnd
push
mov
aam
ret
add
lock
xor
test
adc
mov
sbb
add
outsl
lret
ja
lea
nop
loopne
push
loopne
jo
mov
popf
adc
popa
push
mov
jge
xchg
push
mov
ljmp
subb
adc
push
test
xor
lcall
adc
adcb
pusha
add
fs
testb
repnz
les
fdivrl
mov
outsl
mov
loopne
jecxz
add
push
je
jge
dec
add
popa
push
sahf
popa
clc
jl,pt
pushl
and
cmp
jb
push
call
or
mov
call
mov
shlb
sub
or
repnz
fdivp
outsl
xchg
call
sbb
xor
adc
adc
and
mov
dec
adc
outsb
loopne
adc
push
pop
mov
daa
subl
das
ss
cwtl
in
pop
add
in
loopne
mull
les
or
shll
sbb
xchg
add
and
inc
xchg
add
xchg
pop
dec
loopne
and
sub
add
pop
or
and
sar
insl
jmp
adc
inc
adc
jg
cmp
mov
cmp
adc
pop
dec
cmpsb
je
aad
mov
cld
cli
mov
xor
push
push
and
push
add
push
sbb
inc
add
and
adc
mov
pop
mov
push
fnstsw
iret
push
xor
aam
push
ret
pop
xorl
subl
outsl
and
sbb
fldl
call
push
adc
nop
call
loopne
pop
xor
ss
lods
add
sub
arpl
cmpsb
scas
mov
add
test
loop
dec
in
push
loope
or
push
lods
loop
out
fs
sbb
mov
js
lods
push
inc
cli
mov
fimuls
jnp
jo
cmp
test
jo
push
xor
aaa
jo
test
jo
jno
mov
pushf
add
xor
ljmp
sbb
int
mov
fadd
adc
or
lret
test
negb
xor
and
jae
mov
xor
stos
pushf
or
cmp
je
mov
btsl
mov
outsb
inc
or
sbb
mov
inc
enter
xchg
testb
sub
add
bound
adc
je
lock
cltd
sbbb
pop
ja
mov
or
mov
inc
pop
add
mov
xchg
push
sahf
dec
repnz
jne
call
adc
mov
cmp
xchg
jl
or
cmpb
sar
or
sbb
inc
add
lock
jl
cli
int3
mov
mov
mov
push
mov
mov
push
daa
xor
pop
xor
push
call
stos
add
push
or
test
sub
xor
xor
icebp
out
cld
adc
pop
xor
rcrb
and
or
rclb
sar
or
pusha
push
jne
mov
push
ret
inc
jmp
push
push
cmp
lock
call
orl
les
inc
dec
pusha
mov
clc
pop
mov
cmp
mov
rorb
mov
rcll
add
sub
pop
xchg
cmpsl
add
inc
inc
and
add
shl
or
push
dec
mov
add
inc
cs
pop
aam
inc
push
out
or
lods
or
lods
and
lock
push
inc
or
cmp
inc
or
sti
add
sarb
dec
divl
mov
fisubs
rcrb
sbb
pushf
xor
xchg
or
push
aam
jl
inc
push
je
and
pusha
movsb
or
mov
jo
outsl
arpl
fnstenv
dec
adc
mov
push
mov
bnd
les
cmp
inc
cmp
inc
cmp
and
out
addb
movsb
cmp
jmp
popa
xchg
mov
cmp
cmpb
push
or
sub
ljmp
pop
dec
pushf
inc
sbb
stos
adc
mov
mov
or
sbb
fmul
je
je
sub
adc
fildl
clc
orb
or
adc
jp
add
sbb
shlb
push
cli
or
fiaddl
xchg
insb
adc
or
dec
inc
dec
es
test
jo
add
cld
lods
push
data16
in
mov
mov
xor
mov
jle
mov
mov
nop
ficompl
add
mov
in
mov
in
add
rorb
call
clc
mov
dec
shlb
mov
dec
inc
or
cld
jo
pop
add
dec
and
ljmp
shrb
sub
mov
push
shlb
adc
popf
clc
jns
pop
xor
cld
cld
jbe
push
pusha
enter
sahf
arpl
mov
call
loop
inc
push
push
movsl
shrb
and
outsl
dec
iret
adc
inc
jo
repz
and
ficoms
xor
add
test
loope
mov
cmp
ret
push
lcall
inc
rcll
daa
movsb
jno
outsl
push
sbb
std
in
adc
add
test
sbb
xor
xchg
inc
mov
test
cmp
push
pop
jo
aam
loope
xor
add
or
outsl
clc
xlat
call
lock
push
pop
das
inc
das
push
repnz
fcomip
mov
and
push
inc
insb
lea
test
ja
fwait
ret
cmp
xor
adc
xchg
or
dec
fsubrs
mov
shrb
pop
mov
lret
pop
or
es
push
ljmp
loop
sbb
pusha
mov
inc
mov
mov
nop
aaa
dec
adc
push
lock
fisttps
adc
cli
lock
dec
cmp
pop
xchg
cli
jle
jae
inc
mov
add
inc
faddl
mov
cmp
pop
loope
call
lock
loop
and
pop
add
jae
sbb
shrl
push
adc
sbb
stos
fsubl
ss
mov
aaa
cld
pop
incl
jno
js
lods
jo
mov
mov
inc
xor
mov
mov
mov
push
hlt
jo
add
mov
adc
loope
adc
push
or
cld
orb
int3
std
das
inc
mov
call
insl
mov
or
je
mov
data16
or
xor
lea
call
ret
adc
push
outsl
test
in
ret
inc
jo
movzwl
lds
adc
dec
add
loope
subb
mov
loopne
add
js
push
pushf
inc
out
mov
mov
test
dec
push
push
pushl
enter
aam
or
test
mov
mov
add
inc
adc
mov
jo
add
xor
repz
or
sbb
enter
in
push
add
mov
inc
jb
fbld
jle
mov
call
in
adc
lea
xor
pop
mov
sarb
jne
mov
mov
fmuls
sub
inc
push
idiv
inc
jmp
add
mov
mov
sub
cld
lods
adc
shr
adc
mov
ja
cmpsb
testl
pop
inc
xor
jmp
or
mov
cmp
xorb
xchg
add
lock
adc
add
or
add
push
push
fidivs
ljmp
test
push
sbb
fdivp
call
mov
dec
testb
jl
out
je
mov
hlt
pop
rolb
or
add
hlt
xor
or
push
sbb
jecxz
or
mov
test
ds
mov
inc
popa
push
and
mov
out
add
cmp
loopne
pop
inc
sub
ljmp
mov
adc
cmpsb
call
loop
add
sbb
or
jae
sub
or
lods
idiv
cli
aaa
std
movsl
outsb
xor
jbe
xchg
ret
mov
movsb
or
jb
popa
add
testb
add
ss
xorl
xor
mov
xor
scas
mov
sub
lock
cmpsl
and
jl
mov
xchg
call
les
clc
decl
add
xor
dec
data16
inc
jo
push
pusha
sbb
loopne
inc
pusha
mov
test
jo
es
inc
and
push
pop
sbb
and
adc
mov
jge
jno
fidivs
jmp
mov
add
cmp
add
mov
loopne
jecxz
push
rorb
or
ret
add
push
adc
stc
out
scas
stos
movb
add
sbb
test
aam
jmp
les
test
icebp
adc
rorb
fcomps
mov
addr16
pop
movsl
add
xchg
inc
push
insb
or
mov
cmp
mov
mov
dec
cwtl
jmp
xor
pop
dec
or
leave
je
bound
xor
scas
les
scas
sub
add
pop
lods
mov
ret
and
inc
cmp
not
shlb
jnp
aad
mov
shlb
and
push
push
stos
or
push
mov
lods
call
das
divb
movl
push
test
pop
sub
jge
jns
stos
mov
in
mov
dec
sbb
or
mov
cwtl
xchg
mov
push
hlt
and
push
ss
hlt
call
ret
das
sbb
jl
pusha
cs
bound
xor
or
push
inc
sbb
xchg
push
movl
aaa
ret
mov
inc
lock
and
outsb
sub
xor
lcall
xorb
decl
icebp
pop
inc
cmpsb
scas
fcomp
jecxz
mov
ret
scas
adcb
stos
lock
mov
jl
sub
push
loopne
add
dec
aaa
push
and
xor
orb
mov
notl
add
in
idivb
into
mov
andb
adc
push
mov
ficompl
jl
rcrb
lea
repnz
dec
and
lahf
scas
roll
lods
jle
and
mov
outsb
fcos
dec
aam
in
cmp
or
cmp
push
shrb
iret
jmp
test
movsl
in
sub
inc
cmp
imull
test
lods
xchg
inc
xchg
mov
scas
inc
sub
cwtl
pop
mull
imul
sub
addr16
xor
ljmp
stc
inc
mov
je
add
sbb
add
aad
or
jecxz
pushf
out
ret
loope
add
sub
rol
adc
dec
jmp
sub
rorb
push
jbe
mov
dec
rolb
addl
shlb
sub
into
push
mov
push
mov
adc
inc
in
out
lahf
xchg
jb
popa
pop
lea
inc
hlt
clc
cmc
or
shlb
pusha
mov
movzbl
clc
pusha
pop
pop
loopne
nop
clc
push
sahf
aam
adc
jp
add
cmp
jl,pn
or
add
mov
in
faddl
lock
add
rcrl
iret
cmp
inc
sahf
divb
or
sbb
movl
je
sub
add
and
push
xor
out
xor
imul
out
and
ret
push
sbb
fstps
roll
addl
jb
and
data16
push
inc
loop
call
and
push
loopne
adc
mov
inc
mov
fcomip
sub
sbb
into
jb
push
imul
and
incl
sahf
push
push
add
sub
fwait
adc
dec
dec
lahf
and
cmp
pop
aaa
ljmp
mov
and
xor
cmpb
jp
adc
mov
fs
mov
fs
loopne
adc
je
mov
or
and
lock
adc
mov
mov
jg
je
xor
add
adcl
mov
cwtl
adc
cli
adc
pop
mov
pushl
pusha
add
pop
pusha
in
xor
fisttpl
add
mov
push
push
add
out
dec
js
sbb
push
imul
lcall
rolb
pop
stos
fidivs
add
push
inc
dec
adc
out
fistpll
adc
hlt
loopne
lock
filds
loope
jp
fbstp
jg
pusha
push
dec
cwtl
fxtract
adc
and
pushf
in
jnp
push
test
pop
fsubl
popa
pop
stos
lock
in
mov
sub
test
fucomip
mov
lret
adc
or
or
stos
hlt
loope
fcmovu
sbb
xlat
pop
mov
in
xlat
stos
in
fidivrs
mov
rcl
stos
mov
repz
shrb
jnp
iret
mov
loop
test
sub
push
out
cs
push
lods
mov
rcrb
adc
shll
sbb
pushf
add
scas
push
pusha
adc
push
mov
clc
jp
and
sar
ret
push
pusha
push
sub
add
push
or
aam
cmpsb
pop
lahf
add
notb
or
push
ss
xchg
mov
inc
adc
mov
stos
add
mov
pop
subb
or
jmp
pusha
add
popa
push
xor
test
bound
addr16
add
jmp
inc
lcall
inc
mov
loop
sbb
inc
jne
jb
lea
cltd
subl
cmp
xchg
nop
fs
test
jo
cs
dec
inc
jge
xor
js
imul
mov
mov
or
enter
mulb
mov
sub
loopne
or
or
sbb
sbb
xor
lds
inc
andb
ss
add
orl
or
ret
cmp
pushf
dec
inc
or
adc
inc
repz
test
mov
inc
aas
adcb
push
add
loopne
in
out
push
jbe
mov
add
add
loopne
sub
add
or
loopne
mov
cmp
or
sahf
pop
cltd
test
or
sub
popf
add
in
outsb
mov
je
lret
push
ret
shll
cmpsb
ss
dec
add
add
add
das
and
xor
pop
jbe
mov
ficomps
cmp
adc
sarl
or
add
inc
adc
and
inc
xor
test
cmp
cwtl
and
out
mov
xor
pusha
sti
sbb
add
jl
pushf
push
sbb
popa
sub
mov
ljmp
fidivrl
or
dec
or
inc
adc
pushl
or
mov
xor
cmp
or
jne
xor
scas
data16
or
sub
adc
jg
cmpsb
cmp
push
and
push
inc
sahf
jo
lea
or
add
xor
adc
sub
mov
pop
les
loopne
testb
jo
push
and
push
adc
repz
sub
sti
mov
imul
and
mov
mov
aas
adc
lahf
add
jl
mov
dec
imul
add
jo
call
rol
fcompl
inc
fsubl
pop
pusha
je
lock
pop
sbb
lds
xchg
push
sub
cmp
add
test
xor
pop
cmc
call
xor
xor
jae
in
pop
popa
mov
or
loop
mov
add
or
xor
mov
dec
aad
and
sahf
add
pop
mov
inc
call
fcmovu
mov
add
dec
test
test
xor
ret
jl
inc
add
push
push
pop
push
add
enter
sarl
push
loopne
stc
ja
cmp
sbb
loopne
mov
mov
adc
push
xor
mov
xchg
mov
pop
inc
xchg
inc
pushl
fistpl
and
jno
dec
and
push
jbe
shlb
jo
and
or
test
or
mov
cli
pop
sbb
lods
or
pop
inc
cmp
add
daa
xor
pop
add
in
pop
aam
push
decl
pop
and
leave
movsl
dec
int3
call
add
mov
adc
xchg
pop
les
push
sbb
or
adc
jnp
dec
lea
push
pop
cmp
mov
lea
adc
and
into
jb
add
push
push
and
loope
add
pop
mov
subb
data16
pop
scas
stos
sub
mov
pop
insb
cmpl
xchg
rorb
mulb
into
nop
xor
cmp
repz
mov
mov
ljmp
daa
inc
sub
dec
mov
push
push
sbb
cli
add
inc
cwtl
shlb
outsb
aaa
outsb
mov
pusha
ret
call
fwait
add
subb
xor
cwtl
adc
rorb
push
mov
jo
lcall
cmp
fsubl
xchg
xor
mov
test
shlb
mov
or
add
and
sbbb
lea
scas
push
mov
or
or
sarl
push
push
pop
jo
lods
mov
jo
inc
xchg
test
mov
mov
cmpsb
test
or
mov
xchg
mov
leave
lea
call
icebp
lock
push
adcl
insl
pusha
ret
ret
rorb
idiv
jbe
mov
add
je
add
in
in
pop
xchg
inc
and
or
lock
ljmp
mov
xor
stc
mov
ja
mov
mov
clc
push
push
xor
lock
and
mov
jmp
icebp
add
add
call
pushl
imul
add
cmp
xor
pop
jmp
mov
or
std
pop
jo
call
add
sbb
aam
mov
mov
fstl
aam
cmp
mov
sti
int
jmp
cli
fnstsw
scas
adc
scas
inc
cs
shrl
sub
jle
lcall
js
push
call
push
inc
test
je
push
std
jo
pop
mov
mov
push
pop
mov
movsl
push
scas
push
repz
test
loop
pop
fs
sbbb
add
cmp
inc
jg
jp
mov
imul
sub
add
outsb
push
pop
lcall
loop
mov
cmpsb
pop
mov
scas
mov
imul
pop
in
cld
push
psubsb
add
dec
jne
mov
cmpl
and
or
popa
and
cmp
lea
outsb
mov
mov
cmp
inc
mov
incb
adc
xor
mov
add
fcomp
jne
pop
pop
mov
push
rcl
sub
mov
out
jb
add
ss
add
push
sub
imulb
mov
pop
call
call
xchg
push
xor
lea
add
push
mov
xchg
cli
sub
add
add
call
mov
xor
adc
push
push
mov
add
add
and
and
dec
scas
and
shl
fisubrl
push
push
imul
shrb
and
test
mov
and
sub
xor
jne
add
adc
lret
jmp
jmp
or
xor
adc
push
or
sub
cmp
xor
adc
mov
jo
push
popf
out
xor
aad
inc
xor
mov
or
scas
sbb
ljmp
sub
outsl
add
adc
add
scas
lds
js
mov
mov
mov
sahf
add
scas
push
xorb
daa
mov
and
add
mov
pop
sbb
jg
push
xor
or
test
lret
test
xor
mov
dec
cld
call
pop
jae
lea
cmpb
lock
cwtl
dec
mov
inc
jo
mov
or
shl
add
outsb
or
mov
jl
sbb
je
dec
xchg
les
stos
hlt
push
enter
mov
cmpb
mov
pop
adc
outsb
adc
sbb
in
adc
cmpsb
cltd
mov
stc
nop
xchg
rcrb
xor
test
cmpsl
sub
subb
pop
or
call
clc
sbb
lret
jns
gs
mov
cld
pop
lock
sub
scas
je
mov
icebp
pmaxsw
xor
mov
fs
stos
xor
push
bound
test
xchg
add
push
add
dec
adc
pusha
and
insb
roll
gs
out
add
mov
es
xor
data16
mov
xor
or
pop
call
mov
cmc
pusha
lret
dec
fistl
dec
inc
jl
fadd
push
inc
hlt
popa
je
push
sub
adc
add
addb
xchg
sbb
testl
and
pop
xchg
ljmp
fwait
nop
add
roll
xchg
xchg
push
add
add
and
enter
inc
and
fucomip
cmpsl
pop
sbb
xchg
ds
dec
fsubrs
adc
add
dec
cmp
inc
fdivl
mov
inc
sbb
loop
dec
cmp
push
popa
add
mov
sbb
mov
movsb
cmp
orb
bound
or
mov
fisttps
leave
int3
adc
mov
add
call
fsubr
mov
jbe
int3
outsl
add
dec
cmp
arpl
jo
pusha
push
dec
roll
or
xchg
mov
outsb
lea
xchg
inc
mov
shr
hlt
add
pop
rolb
cld
leave
adc
orb
and
callw
sbb
adc
insl
pop
xor
test
and
jbe
adc
andb
mov
loopne
lock
cmc
inc
inc
jl
mov
push
or
add
in
sub
jo,pn
sbb
mov
cmp
jae
data16
jle
jl
inc
aam
cmp
std
cwtl
add
add
pop
pop
lea
dec
pop
mov
fsubrp
iret
add
xor
fildl
call
clc
sub
sub
je
and
xor
test
or
sahf
mov
and
or
inc
jb
sbb
lds
orb
aam
imul
out
push
pop
adc
add
push
push
add
outsb
test
jb
mov
pop
call
out
sbb
or
aam
mov
or
inc
mov
adc
cmp
push
cmpsl
push
add
das
xor
cmp
test
adc
xchg
mov
xchg
or
jb
call
fs
xchg
push
pusha
mov
pop
inc
loope
inc
inc
jbe
data16
std
adc
add
cmovno
pop
dec
loope
mov
nop
xor
out
les
add
mov
fstpt
mov
aad
push
pop
mov
std
enter
and
xadd
shlb
std
sub
shll
add
enter
idivb
fdivrs
pop
or
lahf
xor
mov
jne
add
repnz
test
cld
ljmp
rorb
lock
xor
dec
cltd
ret
loop
add
sbb
cmp
nop
dec
bound
in
push
mov
cltd
mov
cmpsl
push
xchg
mov
ljmp
adc
inc
push
aas
rorl
add
inc
xor
ljmp
insl
shrb
add
and
xor
add
adc
aaa
xchg
sub
push
jbe
shlb
aam
daa
and
adc
ljmp
and
rcrb
popa
pop
add
add
sub
ljmp
clc
mov
data16
or
push
adcl
push
call
and
in
add
or
pusha
jg
rclb
dec
dec
sub
xor
push
mov
es
pop
xchg
scas
mov
lret
out
push
nop
orb
jne
arpl
shl
mov
and
or
and
stos
sub
xor
sbb
or
inc
fs
clc
push
cmp
cmp
adc
dec
inc
add
cmc
and
ret
fs
jecxz
push
fidivrs
pop
mov
call
mov
and
push
and
add
ljmp
add
dec
insb
or
test
add
jp,pn
mov
scas
clc
in
mov
pop
and
in
imul
pop
cmp
mov
add
popa
cld
sub
xchg
xor
xor
xchg
mov
cmp
sbb
push
ljmp
push
jb
xchg
add
jo
sbb
dec
pusha
add
or
inc
pop
sbb
add
cli
adc
fiaddl
adc
imulb
imul
lock
test
pusha
xor
xor
ret
adc
fstl
add
test
stos
jno
out
xor
lret
adc
xchg
xor
add
cmp
push
inc
mov
add
lcall
jmp
sub
repnz
pop
xorl
cmc
push
stos
incl
sub
and
jmp
and
cmp
jne
pusha
enter
std
xchg
loope
pusha
pop
cs
or
es
fisttpl
gs
loope
movsl
xor
testl
add
add
dec
and
add
lret
mov
sub
add
or
jo
mov
xlat
scas
inc
xchg
or
and
and
fbld
mull
je
push
sub
jb
mov
sub
or
enter
sub
sub
popa
and
push
into
lea
shl
xor
loopne
sbb
bound
je
pop
out
shr
dec
add
loop
add
mov
sbb
push
xchg
dec
sub
jae
repnz
pusha
sub
cmp
loopne
sbb
cli
mov
aam
add
int3
add
cmc
dec
stos
sar
faddl
outsl
mov
cmp
and
adc
fbstp
test
fs
loopne
pusha
fwait
or
mov
icebp
pop
lds
int
leave
ret
loope
adc
and
mov
or
mov
nop
ds
je
push
or
loopne
inc
testb
add
xchg
loop
dec
fstpl
fldl
rclb
mov
call
sub
cmpsb
clc
sbb
testl
adc
xor
bound
ja
adc
jp
sarb
jbe
int3
lods
add
es
cwtl
push
pop
push
mov
imulb
outsl
add
fs
popw
pusha
lods
clc
loopne
pushl
adc
cmpsb
sub
jmp
mov
addb
fcoml
xchg
inc
push
inc
nop
add
jecxz
nop
push
and
mov
rolb
mov
push
add
loope
push
inc
scas
dec
cmp
or
aam
adc
mov
hlt
aad
jmp
sbb
push
push
xchg
lcall
sbb
mov
loopne
nop
pop
inc
mov
and
pusha
cmp
mov
cs
outsb
jle
mov
inc
mov
adc
insb
pop
push
fs
and
roll
inc
ds
out
clc
and
adc
cmp
pusha
cmp
or
test
loope
sar
or
pusha
adc
sub
loopne
loope,pn
xor
mov
push
and
push
add
dec
pop
insl
loopne
pop
inc
rep
xor
push
loop
pop
mov
lock
xchg
lock
push
inc
lcall
or
sbb
or
and
push
mov
inc
push
mov
push
pop
mov
out
adc
gs
mov
scas
mov
cmp
mov
inc
mov
jp
adc
pop
dec
call
idivb
mov
test
or
jle
xor
enter
add
fisttps
add
rclb
daa
push
shlb
mov
mov
dec
sub
dec
mov
jl
xor
xchg
sub
hlt
rcrl
xor
pusha
sbb
in
fisttps
outsl
lcall
mov
jp
fdivp
or
or
or
and
jo
adc
add
mov
stos
repnz
pop
incl
adc
lock
push
icebp
dec
mov
fwait
sbb
and
lea
test
movsl
jnp
xor
sbb
sti
es
pop
adc
adc
xchg
jb
faddl
adc
xor
sub
dec
xor
lret
push
je
adc
add
adc
inc
movsl
movsb
sbb
adc
mov
pusha
jnp
add
pop
sub
push
call
jae
adc
out
add
aas
jo
in
add
push
push
sarb
ljmp
pop
fdivs
push
sbbl
xor
add
jne
push
mov
cld
jno
lods
jnp
hlt
add
mov
and
mov
dec
jge
fnstenv
cmp
call
mov
test
clc
xchg
ljmp
sbb
or
and
call
in
jnp
cmp
xchg
lock
push
mov
add
jl
cli
mov
shlb
inc
pop
repz
add
movhlps
adc
jo
xor
cs
jo
pop
ss
mov
jmp
jo
jle
icebp
xor
jno
push
cmp
inc
test
aad
add
ficoms
jb
jo
mov
xorb
push
mov
adc
push
mov
add
xor
sbb
sbb
xor
shrl
push
sub
xor
bound
jmp
sub
adc
push
lods
jno
sahf
sbb
push
outsl
push
test
or
shll
outsb
in
lock
das
cmp
sti
xor
stos
loope
add
lret
insb
enter
adc
dec
cmp
je
add
add
sbb
sahf
push
cltd
dec
std
push
clc
call
push
stc
lock
push
daa
add
dec
rcr
fldl
add
call
inc
hlt
add
inc
test
stos
xchg
popf
sub
inc
sbb
mov
adc
or
or
sahf
adc
in
lods
add
sarl
sbb
pop
inc
lock
divb
test
rclb
sub
idiv
outsl
test
push
jb
adc
lsl
adc
in
push
adc
les
call
or
je
cmpsb
inc
sbb
and
aam
mov
or
add
xor
sub
push
ljmp
mov
or
add
pop
nop
mov
or
sub
add
xor
hlt
shlb
add
sub
xor
inc
dec
lock
icebp
push
xor
dec
lcall
fbstp
jge
clc
xchg
int3
lock
push
stos
ds
jge
xchg
xor
xor
cmp
clc
cmp
call
add
mov
pop
lea
xor
sub
repnz
sarb
inc
lods
add
fs
xchg
xchg
add
lock
or
mov
adc
cmc
adc
pop
add
or
jmp
add
stos
jne
fsubs
lea
lcall
in
in
adc
xchg
xchg
imul
xor
push
inc
subb
push
cmp
in
cltd
xor
dec
imul
xchg
test
rorb
xchg
fsubl
pop
mov
cmpsb
es
pop
push
in
scas
or
call
pop
call
pop
cmp
je
xchg
pop
repnz
xlat
push
mov
jl
hlt
add
push
or
and
mov
xchg
push
cmpsb
pop
push
pop
and
sbb
inc
jo
test
aas
orb
ljmp
cmp
ja
clc
pop
inc
cmpb
aaa
addl
call
cli
dec
or
add
popa
sub
rcll
loope
mov
mov
imul
mov
inc
jo
add
xor
aaa
push
je
mov
enter
and
xor
mov
mov
dec
inc
test
inc
dec
add
nop
dec
mov
cmp
mov
lock
or
inc
and
jg
sub
cmp
pusha
mov
inc
dec
addb
enter
bound
push
inc
push
jbe
mov
lods
faddl
ljmp
lock
push
pop
pop
icebp
inc
add
mov
jo
hlt
scas
daa
and
imul
popf
inc
xlat
mov
cli
movsl
enter
or
call
cmpsb
adc
mov
fbld
fidivl
mov
inc
sub
or
dec
xor
ljmp
call
jb
loopne
adc
inc
mov
xor
sti
inc
mov
clc
adc
lret
xor
cmp
push
call
cmp
inc
hlt
hlt
lods
adc
inc
mov
scas
clc
mov
bound
sub
mov
or
xchg
mov
ret
sbb
pop
or
and
sti
jae
call
cmp
test
add
ljmp
pop
mov
shl
inc
jb
fcoml
sbb
jo
xchg
pusha
jecxz
mov
in
sbb
call
es
fstpt
rclb
jo
mov
and
push
add
imul
or
cmp
dec
sbbb
cld
lea
dec
cli
sub
mov
lock
idivl
xor
add
adc
cmove
mov
pusha
or
movsl
cli
je
add
add
push
add
adc
les
sbb
jg
lret
sub
xor
hlt
call
xchg
lcall
mov
outsb
mov
pop
sbb
call
xor
sti
push
push
orb
inc
test
incb
push
jl
js
xor
es
cmpb
sbb
cmp
adc
add
jo
jae
dec
pop
sub
add
test
std
jecxz
lods
fisubrl
dec
loope
in
xor
cmp
je
addl
xor
mov
mov
mov
cmp
movsb
in
pop
jo
je
or
scas
or
add
xchg
cmp
mov
xorb
sbb
adc
adc
test
cmp
call
es
pop
push
das
push
aas
ret
jb
push
push
inc
mov
sub
cwtl
js
cli
mov
sub
push
mov
repnz
sbb
hlt
push
ret
push
stos
fsubr
dec
dec
cmpsl
cmpsb
jo
mov
sub
ret
jbe
fdivrl
add
loope
dec
xor
js
call
hlt
dec
cltd
xor
movsb
pop
lret
add
test
jbe
sti
addr16
es
andl
shrl
andb
and
or
pusha
ret
addb
movsl
dec
mov
sahf
enter
mov
xchg
xchg
les
cli
les
stos
and
adc
nop
adc
jl
fsubrs
or
orb
rorb
or
pop
cmp
mov
fcomp
xor
push
push
jg
mov
cmpb
push
mov
add
mov
inc
fadds
xchg
sub
testb
fs
xchg
push
dec
dec
icebp
pop
addb
lret
ret
jne
rolb
inc
xor
dec
out
and
test
xor
in
shrb
push
lds
add
xor
lahf
jle
add
inc
scas
adc
mov
test
dec
mov
mov
add
push
jl
push
push
int3
push
mov
scas
roll
movl
rolb
and
push
push
push
shlb
lcall
cmp
in
mov
addr16
loop
inc
loop
sub
call
mov
or
add
jo
call
push
adcl
add
rcll
arpl
mov
fidivrl
adc
push
dec
test
cmpsb
out
jo
sub
ret
andb
fwait
and
pushf
in
mov
push
gs
ja
inc
cmp
jbe
in
aas
mov
orb
inc
in
push
jle
push
mov
cld
xor
jne
xchg
push
movsl
movsb
rcll
and
push
add
rcrl
movsb
add
sbb
in
cld
cmp
xor
mov
rolb
ret
pop
adc
test
shrl
in
pop
in
mov
lret
pop
pop
mov
inc
cli
cmp
jecxz
pop
cmpsb
mov
fsubrs
lahf
mov
shlb
nop
push
shlb
loope
mov
mov
fiadds
push
rcl
in
add
push
or
mov
fimuls
or
lock
in
inc
cmp
xor
adc
in
fcmovnu
out
cmp
ret
or
dec
dec
sarb
mov
or
sbb
mov
add
or
arpl
mov
push
mov
mov
jbe
shlb
js
loop
ret
leave
cmp
pop
and
jmp
stos
xchg
mov
pop
add
rolb
rcl
cwtl
mov
and
push
mov
nop
add
and
imul
sbbl
add
pop
and
jne
je
popa
cmp
pusha
pop
ret
daa
push
test
push
and
cmp
add
cmp
pusha
jp
jo
movsl
loop
and
xor
push
adc
add
decb
sbb
loope
lock
push
cs
outsb
out
mov
mov
out
ljmp
popa
or
inc
nop
inc
sub
bound
fwait
and
cmpsb
loopne
jno
xchg
or
cltd
add
xchg
je,pn
or
decl
push
pop
loopne
pusha
and
icebp
jg
in
adc
mov
cmp
loopne
je
shrb
test
dec
push
adc
pop
and
inc
popf
movsb
dec
jp
xor
fmulp
arpl
cli
call
aas
pusha
lcall
add
test
jmp
jp
pop
push
adc
ret
mov
cld
push
pop
popa
fdiv
inc
or
add
sbb
in
in
clc
pop
sub
out
push
cmpsb
sar
add
loopne
adc
inc
push
adc
or
push
cld
xchg
mov
cmpl
push
sub
insb
cld
loopne
add
pop
xor
cmc
push
jne
lcall
inc
loopne
add
cwtl
test
call
aas
dec
shlb
rorl
xor
mov
add
adc
call
cmp
lcall
sub
xlat
loopne
orb
pop
lahf
pusha
adc
fisubrs
testb
lods
inc
jg
mov
sbb
sub
or
add
sub
je
sarl
jge
mov
test
pop
or
adc
ret
mov
divb
lock
jne
push
cmp
add
inc
xor
mov
or
add
ret
sbb
sub
pop
dec
add
mov
adc
adc
inc
ss
pop
adc
push
incb
sub
push
je
sbb
and
jne
xor
call
cld
mov
push
js
loopne
dec
pusha
lods
loopne
lea
mov
sub
gs
jle
mov
push
add
inc
enter
mov
mov
jo
cmpsl
sbbl
inc
jnp
mov
jg
repnz
xchg
and
loopne
inc
sub
das
shr
clc
xchg
loopne
out
in
pop
testb
mov
stc
cmpsb
adc
fs
and
pusha
mov
loopne
mov
add
rorb
int3
pop
and
xor
mov
xor
sahf
add
clc
adc
mov
sbb
loopne
loopne
loopne
xor
or
mov
cmp
xor
iret
pushf
sub
cs
xorb
xor
pop
rorb
push
shlb
push
invd
mov
adc
push
add
adc
nop
mov
frstor
cli
xor
inc
add
clc
adc
add
test
mov
fistps
ss
sbb
dec
or
and
add
xchg
mov
pop
shll
adc
and
sbb
jo
mov
dec
das
pop
imul
inc
push
push
cmc
mov
pusha
sbb
test
mov
popa
pop
push
cmp
jp
xor
pop
dec
cmp
jmp
adc
nop
jo
lea
mov
add
add
jb
adc
je
sbb
bound
cs
xor
mov
cmpsb
xor
jle
addb
xchg
jo
adc
inc
es
sub
and
mov
push
pop
inc
mov
in
mov
call
jmp
in
add
push
add
call
sbb
inc
add
inc
and
or
call
aad
dec
fidivrs
ret
xor
dec
sbb
cmp
or
jne
mov
sub
mov
xor
add
jbe
mov
or
xorb
mov
fcomi
mov
ja
ja
out
xor
push
jnp
or
mov
add
notl
loop
mov
push
and
and
mov
adcb
pop
lcall
add
cmp
ret
mov
push
lea
imul
mov
adc
call
stos
cmp
jge
xchg
icebp
out
lahf
sbbl
testb
sbb
and
stos
xor
lea
mov
jmp
cli
or
mov
test
scas
xchg
test
cltd
push
test
jno
hlt
incl
adc
inc
and
jo
inc
adc
push
jbe
and
push
inc
fstpt
rcrb
jbe
jg
shrb
incl
daa
stos
fdivr
pop
out
icebp
inc
add
lods
sar
incl
daa
inc
jge
jb
dec
adc
xor
push
rdmsr
pop
inc
jl
add
es
lock
idivb
inc
cmp
out
mov
push
add
pusha
test
or
shlb
push
sti
mov
push
xchg
adcb
add
mov
incl
dec
cmp
adc
mov
scas
jp
jne
and
jb
imul
add
fwait
and
jno
adc
xor
sbb
pop
outsl
push
xchg
arpl
push
decl
push
call
or
xchg
pushf
dec
clc
iret
ret
cmp
int3
mov
push
push
sbb
mov
mov
ret
xchg
and
pop
loopne
adc
push
lock
outsb
pusha
sub
mov
mov
sub
loope
xlat
lahf
pop
dec
push
shrb
push
cmp
and
mov
cmp
lods
push
sub
sub
inc
icebp
incl
and
jne
cmp
or
filds
aam
xorb
dec
sbb
jb
mov
jl
sbb
cmpsl
jne
inc
test
lds
cwtl
shr
mov
xchg
clc
adc
xor
fisttps
bound
les
xchg
ds
sbb
xchg
mov
push
stc
aaa
jp
dec
aas
inc
ss
popa
test
sbb
xor
push
insl
repnz
push
pushf
test
lock
cli
lock
jno
pop
nop
pop
icebp
dec
adc
mov
or
or
cmpsb
ret
lock
inc
or
incl
add
jno
mov
push
or
jo
jns
xor
pop
cmp
xor
xor
dec
pusha
jae
or
leave
outsb
cmp
loopne
sbb
lea
jle
push
xor
pop
or
icebp
aaa
scas
and
aas
call
xor
repnz
jmp
sub
mov
es
lds
testb
mov
divl
xchg
subl
inc
aas
cwtl
mov
mov
pop
mov
scas
add
lock
push
call
mov
in
pop
ret
push
icebp
pop
cwtl
mov
ss
push
jno
test
push
add
xor
mov
cmp
xor
aas
cmp
sbb
sbb
outsb
adc
and
adc
adcb
outsb
and
mov
les
mov
mov
mov
popf
test
or
push
mov
jne
cltd
add
cmpsb
xor
jno
mov
insb
mov
mov
mov
inc
and
inc
rolb
in
add
push
repnz
xor
xor
mov
or
xchg
push
push
test
test
lret
rcll
aas
jl
and
jne
push
pusha
enter
loopne
add
nop
xor
jno
test
out
add
mov
push
jne
test
xchg
in
outsb
in
push
in
ss
popa
ret
inc
jl
jb
mov
rclb
or
inc
sarb
fcomi
or
xchg
or
sbb
sbb
push
call
test
lea
xor
push
sbb
insl
loopne
daa
and
je
movl
mov
hlt
adc
add
insb
sbbl
jmp
mov
lret
lock
mov
mov
or
sub
jae
sbb
inc
jecxz
push
in
fs
or
popf
subb
ljmp
push
cmpsb
aam
dec
jl
imul
xor
xor
jno
adc
sub
pushf
jo
test
jno
divl
mov
sub
adc
jo
cwtl
jo
sbb
jbe
loopne
fdivs
adc
mov
decl
adc
pop
mov
pop
pop
inc
mov
jmp
mov
dec
call
inc
mov
imul
mov
mov
sub
outsb
adc
add
repz
pop
push
mov
inc
clc
aad
pusha
xchg
xor
dec
xor
push
cwtl
roll
push
jp
push
roll
pop
add
xchg
imul
add
lods
movsb
and
push
mov
shrl
je
dec
jbe
sub
mov
and
dec
adc
sbb
add
cmp
inc
clc
incl
mov
add
je
add
adc
in
cs
outsl
inc
add
jle
incl
ds
adc
sbb
mov
sbb
pop
pop
imul
andl
adc
or
mov
or
lret
xor
repnz
test
push
or
sbb
out
add
add
add
ror
lea
adc
or
sbb
pusha
add
fisubs
sbb
add
ret
bound
sub
repz
mov
xor
jae
fwait
notl
fs
push
xchg
jl
lret
or
sub
mov
sbb
add
push
sbb
mov
inc
sbb
fiaddl
mov
push
test
sub
addb
fists
add
lock
pop
popa
test
and
loop
adc
xchg
adcb
jmp
das
push
test
call
push
mov
shll
std
pop
gs
mov
mov
cmpb
fsubr
or
pop
mov
outsb
add
call
adc
mov
stos
sbb
adc
enter
jne
in
cmp
mov
and
inc
or
data16
jb
cmp
dec
mov
ret
jge
push
xchg
sarb
loop
jle
lea
add
sbb
sbb
rolb
js
xor
movsb
loopne
andb
or
and
shl
in
mov
movsb
outsl
add
cs
je
shrb
mov
adc
push
insb
enter
lea
jbe
push
mov
mov
add
les
sbb
mov
push
inc
xor
into
or
push
push
shlb
jbe
xor
or
mov
push
ds
pop
jb
adc
scas
cli
push
cli
nop
nop
shrb
fwait
push
rcrb
xor
pop
ficoms
cmpl
movl
mov
sbb
mov
movb
dec
fcmovnb
das
int
inc
sti
sub
or
inc
adc
sub
xor
add
adc
fdivrl
mov
fucomi
jle
or
movsb
iret
test
dec
pusha
lods
cs
push
xor
lahf
inc
aam
lret
and
icebp
notb
add
sbb
shrl
lcall
push
insb
sub
push
jb
cmp
jb
add
test
xor
and
and
fwait
ret
mov
xchg
adc
sub
lret
and
shrb
call
add
xor
xor
pop
inc
jo
adc
xchg
sbb
subb
dec
ret
and
cld
cmp
push
jg
test
xor
add
cmp
je
in
mov
mov
out
add
ds
stos
sbb
cmc
cmpl
shlb
sbb
mov
je
sub
jnp
xor
push
mov
loopne
sbb
add
lods
push
mov
repnz
and
adc
inc
mov
pop
pop
pusha
inc
xor
pop
pop
ret
sti
loopne
fucomip
stos
add
inc
adc
xor
adc
call
xchg
mov
cmp
loope
add
pusha
or
adc
adc
add
cmp
nop
cmp
or
out
mov
in
scas
mov
clc
push
es
wrmsr
negl
out
scas
mov
push
lods
adc
pusha
dec
inc
sti
dec
mov
mov
mov
adc
mov
or
fsubrl
sub
pop
jecxz
in
in
loop
and
mov
fsubr
or
cmp
lock
jp
push
mov
aam
push
aad
and
loopne
hlt
adcl
add
or
sub
mov
add
test
cmp
or
mov
clc
loopne
pop
sbb
adc
push
dec
push
inc
mov
jmp
or
dec
mov
xchg
das
xchg
sbb
or
xchg
dec
or
stos
add
int3
adc
pop
testb
int3
sub
shlb
fsubrs
sbbb
xor
cld
rcrb
mov
mov
shlb
mov
lods
cwtl
inc
leave
lret
add
adc
call
xor
mov
add
clc
out
cmpb
cmp
dec
lea
push
mov
add
decl
sbb
pusha
sub
mov
cwtl
add
adc
jge
dec
and
push
cwtl
mov
pop
enter
mov
mov
flds
mov
inc
sbb
push
movb
decl
test
adc
test
loopne
sub
add
or
inc
rolb
aam
mov
clc
xchg
orb
test
push
push
and
popa
data16
xor
jbe
push
lods
loopne
cs
inc
inc
pop
jo
cld
loopne
mov
pop
in
lods
jmp
dec
lcall
popa
sub
cmp
outsl
loop
addr16
sub
ljmp
dec
clc
negb
jp
jns
loopne
pop
call
sbb
lock
aaa
push
cld
call
ja
rorb
xchg
push
ja
mov
or
loopne
shr
fwait
out
mov
les
add
aad
rorb
adc
data16
sub
iret
nop
or
xchg
mov
adcl
push
test
sar
xchg
pop
and
jmp
mov
mov
mov
mov
sbb
pop
pusha
or
jle
push
xor
mov
popa
fmull
call
in
adc
xor
je
aam
push
cli
mov
mov
popa
fucomp
pusha
add
add
and
stc
sbbb
mov
pop
jo,pt
clc
bound
push
jecxz
fdivr
mov
pop
xor
ret
outsl
clc
pop
jge
add
pusha
sub
adc
int
cmp
es
fldenv
hlt
aaa
xor
xorl
jb
add
and
mov
pushf
clc
pushl
fsubrl
lock
push
call
sub
call
jb
pop
mov
add
daa
or
sbb
sub
insb
add
incb
inc
sub
mov
mov
push
pop
sub
pop
jo
test
fimull
repnz
mov
cld
adc
stos
call
sub
sbb
ret
or
js
or
pop
mov
ljmp
in
cmp
ja
push
std
dec
sbb
je
cmpb
or
pop
idivl
ret
int3
rolb
outsb
lret
or
imul
inc
pop
das
jl
movb
mov
stos
pop
pop
leave
mov
jecxz
xorl
js
push
lods
cmp
mov
rorb
in
insb
add
and
lock
fadds
fsub
lock
mov
movsl
xor
sbb
or
lcall
test
andb
xor
inc
cmpsl
icebp
add
pop
mov
xor
xchg
mov
test
rorl
xor
ljmp
icebp
xor
push
xor
pop
jbe
pop
inc
push
or
in
and
out
bound
js
jae
jo
repnz
out
mov
push
aam
xor
iret
jo
adc
jo
loopne
out
add
add
jnp
jne
xchg
ss
rorb
lock
or
mov
fdivrs
jg
mov
xchg
test
cld
shlb
add
cmp
mov
aaa
pop
faddl
inc
sub
shlb
push
loopne
pop
add
mov
or
enter
add
inc
jne
jle
pusha
mov
or
adc
dec
pop
rclb
pop
pop
insl
mov
mov
fmuls
mov
inc
adc
xor
add
lock
push
adc
ljmp
in
pusha
push
dec
add
add
je
mov
add
sub
cltd
cmp
inc
test
incb
mov
sbb
add
out
je
push
and
ss
cmp
pop
or
jg
sub
fsubp
and
lret
mov
mov
ret
sbb
hlt
mov
pop
add
inc
test
push
ret
mov
pop
mov
cmp
rorb
pop
jo
mov
adc
mov
je
cmp
ret
lock
dec
imul
mov
add
jg
mov
inc
repnz
xor
jp
jo
notb
stc
adc
pop
jge
je
dec
inc
inc
stos
adc
add
ret
xchg
push
inc
mov
adc
xchg
pop
mov
pushf
add
xor
pushl
jmp
xchg
test
jo
dec
adc
call
add
inc
pop
cli
mov
pop
inc
jecxz
loopne
js
push
jl
ja
or
jns
add
sub
mov
repnz
fisttpl
sbb
mov
lock
jl
and
fildll
incl
icebp
or
jl
mov
pop
jl
call
xchg
or
in
scas
mov
push
mov
mov
jo
clc
push
sub
mov
rol
push
cld
sbb
test
jo
sbb
inc
xor
je
mov
push
xor
mov
inc
push
pop
sub
mov
jg
call
push
andb
xor
xchg
call
mov
sub
xchg
xor
or
xchg
aaa
xor
pop
test
jnp
sbb
add
mov
xor
cmp
cmp
lock
inc
and
sbb
add
add
push
push
mov
and
xor
inc
xor
out
and
je
add
mov
pop
and
das
mov
stc
mov
cmp
and
inc
add
js
les
cmpsb
ret
pop
les
pop
call
out
adc
lea
call
adc
xor
lock
adc
xchg
cmp
iret
cld
jne
cli
sbb
jnp
mov
shrb
cmp
pushf
cmp
push
addb
cmpsl
ds
je
or
sbb
cmp
fucomi
in
mov
cs
push
lock
or
xchg
mov
sar
aam
lods
xor
jg
aaa
rsqrtps
nop
cmp
cwtl
sar
icebp
mov
mov
xlat
cmp
out
mov
imul
jo
pop
and
repz
lock
in
test
xor
cmc
and
push
mov
and
push
mov
push
xor
test
es
inc
push
sar
and
mov
add
icebp
mov
pop
fdivrs
shl
lock
test
inc
dec
lcall
lock
data16
mulb
or
std
lock
pop
and
lock
mov
push
push
add
mov
inc
lea
jp
push
aaa
bound
lea
jae
sar
mov
cmp
mov
clc
mov
mov
daa
mov
mov
push
clc
call
mov
adcl
or
sbb
js
aam
add
push
and
subb
out
cld
outsl
adc
dec
test
xor
cli
push
lock
push
add
adc
lret
push
incl
in
mov
xor
sub
in
dec
inc
repnz
icebp
jmp
inc
mov
or
inc
mov
scas
clc
icebp
pop
aam
mov
cltd
mov
in
add
push
dec
ret
add
aam
test
or
add
and
jo
dec
and
lock
inc
push
decl
aad
fdiv
push
add
call
inc
out
hlt
add
lock
mov
add
xor
jne
sub
test
inc
push
testb
ftst
lock
mov
push
and
aam
mulb
push
cltd
xor
xor
xchg
out
mov
ret
mov
push
mov
push
addb
dec
mov
sub
xchg
and
and
adc
mov
add
out
fimuls
call
jg
add
pushl
push
cmc
mov
clc
mov
lods
push
and
rolb
andl
test
mov
xchg
add
pop
insb
jbe
cmpl
les
pop
inc
lcall
cmp
int
sub
into
ret
jb
pop
dec
add
sub
adc
inc
xchg
test
ljmp
jb
dec
out
adc
jbe
es
popa
aas
jmp
call
pop
sub
dec
lock
add
jmp
sbb
mov
sbb
test
ljmp
or
xchg
es
mov
mov
incl
mov
adc
mov
nop
inc
inc
loopne
ljmp
jge
insl
mov
mov
mov
inc
or
outsl
lcall
mov
adc
mov
mov
mov
outsl
or
mov
mov
cmpsb
mov
cld
jns
inc
test
sub
in
lods
mov
cs
add
push
dec
and
mov
jns
imul
push
mov
sti
mov
or
or
cmp
arpl
push
mov
mov
fistpll
push
out
or
int3
mov
mov
insl
lcall
xor
aam
insl
lcall
jge
and
push
or
fsub
orb
fidivrs
loopne
xlat
outsl
mov
cmp
in
std
mov
out
dec
mov
jns
imul
lret
mov
aaa
fucomip
mov
inc
popl
or
jg
hlt
mov
arpl
push
sbbb
lcall
shlb
mov
rolb
std
ret
aam
pop
ret
repz
push
and
insb
sbb
dec
rcl
or
lock
sti
push
mov
inc
xchg
ret
jge
push
mov
outsl
js
xchg
shlb
inc
or
stos
push
fwait
dec
sbb
dec
push
mov
cld
call
mov
dec
and
push
dec
and
rol
fisubl
jg
add
push
sub
jg
sub
inc
ret
or
sarl
xor
push
andb
mov
inc
inc
lock
sarl
ret
fadd
loop
dec
dec
xor
adc
incl
shlb
mov
add
pop
jg
jmp
add
inc
mov
pop
dec
inc
inc
inc
mov
pop
popa
or
adc
ljmp
fldl2t
bound
dec
sub
bound
push
inc
mov
lods
mov
push
hlt
mov
or
push
push
cmpsb
push
pop
inc
cmp
movsl
insl
ret
mov
mov
or
inc
dec
pusha
or
sbb
pushl
hlt
or
fs
adc
cmp
push
or
mov
stos
mov
cs
aam
outsb
mov
inc
sbb
in
rclb
jecxz
je
sub
movl
fcmovb
enter
out
out
fwait
loopne
jbe
mov
dec
xchg
incb
addl
jnp
dec
jb
mov
lock
pop
pop
gs
pop
mov
stos
or
adc
icebp
or
pop
scas
fdiv
or
loopne
ljmp
xor
adc
ret
mov
test
add
sbb
cltd
mov
add
ret
add
test
call
rclb
push
jmp
mov
test
stos
inc
add
push
dec
mov
push
and
in
jle
mov
lock
xor
cmp
lahf
add
test
mov
jl
xchg
cmp
or
lds
lea
jg
xor
fld1
push
popa
scas
je
jno
divb
adc
inc
inc
lock
call
jmp
mov
inc
jl
call
icebp
notb
js
aam
and
push
add
and
sub
int
loopne
jp
mov
loopne
pusha
ret
xchg
and
mov
mov
push
jecxz
mov
xor
dec
or
sub
lods
xchg
push
sub
je
mov
js
sti
dec
mov
inc
mov
xor
mov
cwtl
jo
pusha
rcrl
push
push
add
sbb
cmc
ljmp
push
pusha
repnz
bound
stos
or
jne
mov
push
fcoms
fstpt
mov
push
pop
cs
in
sbb
mov
fbstp
imul
mov
mov
test
or
inc
fisttpl
in
adc
adc
xchg
in
fsubrl
aam
cmpsl
test
pusha
enter
movsb
xlat
xor
add
test
mov
mov
dec
cmp
icebp
push
add
add
adc
je
fwait
test
mov
pop
insb
mov
fwait
mov
cwtl
movsb
mov
mov
xchg
pusha
jp
leave
sbb
inc
int
popa
es
roll
lcall
push
movsl
cmpsb
mov
setle
push
loopne
pop
add
sbb
mov
adc
pusha
loop
sub
lock
cld
gs
xchg
push
mov
fsubrp
loopne
fs
inc
lods
xor
in
lcall
test
add
je
call
adc
or
call
mov
mov
add
mov
pop
sbb
pushl
inc
sub
push
test
js
pop
mov
mov
jecxz
lods
nop
sbb
sub
or
jle
or
or
adc
popl
adc
lea
mov
jbe
sbb
and
inc
sbb
xor
fwait
dec
sub
scas
xchg
adc
fidivs
scas
mov
cld
add
mov
mov
dec
mov
pusha
sub
mov
fisubs
and
or
and
test
loopne
mov
and
mov
push
push
push
sbb
and
fisubrl
jge
jo
mov
mov
lret
or
jo
call
rolb
icebp
sar
dec
fdivrl
mov
bound
call
and
pop
outsb
mov
out
xchg
fstpt
lcall
push
inc
sub
or
clc
fsubl
adc
pop
cmp
dec
nop
inc
add
mov
mov
xchg
std
leave
mov
mov
lock
inc
or
enter
ret
add
mov
jmp
pop
sbb
jae
inc
push
or
data16
mov
sbbb
test
mov
data16
mov
repz
inc
sbb
out
repz
mov
lret
add
std
and
aaa
or
pusha
cmp
cmp
mov
mov
stos
inc
add
insb
xchg
jbe
jp
les
pusha
addl
xor
sbb
mov
mov
sarb
mov
add
in
sub
dec
push
les
xor
pusha
and
shlb
sub
mov
pop
mov
orl
ret
jl
test
adc
adc
fistps
jl
or
xor
enter
mov
js
jmp
subl
sub
adc
sbbb
sahf
ja
or
add
test
add
or
add
adc
test
clc
neg
jmp
mov
les
mov
jo
test
xchg
test
jg
sbbb
lcall
push
mov
cmp
push
pusha
inc
test
pop
lods
lret
push
adc
or
and
pushf
rolb
add
pop
inc
es
add
out
sti
dec
or
out
sub
addb
and
test
incb
iret
inc
mov
or
and
pop
mov
push
add
ds
jmp
mov
mov
xor
mov
and
sbb
push
mov
in
clc
mov
lock
repz
add
push
and
push
call
pop
sahf
xchg
dec
nop
and
fcoms
jb
jl
call
push
push
inc
mov
add
movsb
jg
sbb
jmp
add
add
cld
xor
and
mov
mov
andb
add
cmp
lock
scas
push
add
sbb
lds
int3
inc
or
outsl
jg
and
imul
sbb
lock
jo
lock
pop
adc
adc
jb
pop
loopne
add
xor
sbb
mov
jo
or
insb
pusha
or
jb
enter
dec
inc
pop
ds
xchg
sbb
mov
fmuls
and
inc
mov
push
cmc
add
push
adc
testb
push
pusha
add
xor
lea
jle
push
add
rclb
xchg
stos
pushl
ljmp
faddl
cmp
cmpsb
subl
sub
lock
jg
mov
mov
inc
pop
nop
mov
adc
xchg
cli
roll
mov
mov
lea
ss
dec
loop
mov
sar
adc
push
jo
or
je,pt
or
xor
sub
adc
cmpb
les
adc
mov
shlb
push
mov
jo
add
jno
dec
jg
add
mov
sbb
push
adcb
and
test
mov
pusha
xchg
ss
loopne
mov
mov
inc
or
pop
sahf
or
inc
mov
cmc
push
scas
push
push
xchg
xchg
sub
sub
ja
sbb
or
jno
push
je
icebp
adc
adc
and
idiv
xlat
mov
in
jb
mov
xchg
jle
jp
addr16
push
lahf
add
add
push
or
jmp
call
and
push
shlb
sub
cmp
push
sti
sbb
xor
les
add
ret
mov
jo
cs
cmp
jo
fcmovu
fwait
add
pop
mov
cmp
add
sbb
rorb
push
int
rclb
out
and
rcll
mov
mov
rolb
fs
or
adc
or
inc
icebp
pop
jg
lock
mov
adc
shlb
or
shlb
leave
ret
hlt
loopne
mov
mov
pop
push
xor
ss
mov
jmp
push
sbb
mov
mov
add
mov
and
jnp
cwtl
test
xor
add
sub
or
test
and
fwait
popa
movsb
push
clc
jg
pop
int3
push
jo
adc
mov
jo
aad
adc
xor
adc
dec
hlt
cld
sub
xor
add
mov
mov
sqrtps
pop
inc
mov
add
mov
cld
imulb
and
mov
xchg
sbb
call
pop
ss
cli
adc
and
add
es
fcom
pop
add
dec
jle
sbb
sbb
xchg
sub
popa
jbe
add
add
xor
adc
jl
push
shl
lods
testb
mov
nop
ficomps
xor
mov
jg
inc
xor
inc
xor
push
xchg
jo
add
aaa
push
lcall
bound
xorb
sub
push
popa
xor
adcb
push
push
xor
insl
mov
push
sub
or
add
add
jne
jbe
mov
or
xor
and
push
or
stc
pop
push
push
mov
xor
repnz
push
test
pusha
xchg
lock
mov
or
sub
ljmp
xor
or
bound
ss
push
daa
mov
bound
mov
inc
mov
hlt
adc
xchg
inc
mov
add
pop
pop
cmp
pop
add
or
dec
xor
movsb
lahf
xchg
adc
push
jnp
adc
loopne
repz
pop
sub
xchg
sub
xor
rcrb
add
mov
inc
or
lds
sbb
sub
cli
lret
add
jp
cli
push
arpl
inc
mov
js
mov
push
push
es
add
push
jg
push
add
xor
or
shlb
add
push
add
hlt
cs
sbb
xchg
add
push
insb
dec
push
adcb
jle
outsb
inc
mov
je
mov
cld
call
or
rolb
mov
xchg
adc
ret
es
adc
jle
jb
mov
adcb
mov
lods
jp
std
sbbb
adc
cmp
icebp
mov
add
hlt
cli
cld
addb
jg
dec
or
xor
pop
mov
outsl
add
dec
mov
mov
pop
pop
addl
jle
xchg
xor
adc
aad
loope
inc
cmpb
pop
or
xchg
orb
inc
and
loope
test
pop
mov
or
insb
mov
inc
push
mov
add
dec
sbb
js
push
inc
mov
notb
jle
inc
pop
sub
testl
xor
pop
shlb
add
sub
or
add
push
cmp
push
push
adc
xor
ljmp
push
inc
addb
mov
ret
clc
or
rclb
cmpsl
and
inc
inc
add
ror
or
add
cmp
testl
js
pop
push
inc
inc
add
mov
dec
ds
push
sub
imulb
test
lret
clc
rolb
xorb
inc
aas
add
sub
rclb
pop
adcl
add
dec
std
sbbl
ds
xor
mov
add
sete
sub
pop
notl
and
pusha
jmp
rclb
dec
add
sub
idiv
and
nop
jne
mov
pop
lds
rcrb
rcrl
fcmovnb
adc
das
xchg
popa
and
push
xchg
push
push
adc
dec
dec
sbb
xor
add
adc
add
in
es
cmp
mov
inc
mov
shl
lock
mov
or
insb
cltd
rol
fdivr
cmpsb
in
xor
repnz
jge
pop
add
js
pushf
loopne
or
or
andl
push
nop
cli
jmp
rcl
add
add
jbe
dec
mov
add
sbb
jo
push
add
icebp
jl
push
push
nop
xor
lock
pop
or
fdiv
mov
mov
add
shrl
rcrb
xchg
lock
incb
push
push
call
mov
loop
inc
rcr
out
shrb
or
mov
jbe
xor
xchg
scas
pop
roll
ljmp
dec
fidivs
scas
cmpsb
sub
jle
or
push
pusha
or
and
pop
out
adc
hlt
lea
and
xchg
stc
hlt
pop
addb
or
loopne
mov
or
or
adc
xor
fsts
push
lcall
pop
or
cltd
scas
out
insb
and
clc
aad
mov
nop
adc
pusha
or
cmc
pop
andb
push
cmp
movsl
adcb
lock
je
test
out
jle
dec
adcb
add
insb
fwait
test
lea
pop
inc
scas
push
push
loopne
loope
and
push
mov
push
push
sub
push
mov
loope
cmp
inc
fucom
sub
push
and
ret
in
adc
cmp
loopne
jb
pop
fbld
lods
jl
push
jbe
inc
js
lea
mov
loop
add
bound
lcall
orb
test
repz
lods
and
dec
nop
push
jg
lea
adcl
inc
mov
cmp
xor
add
call
addl
enter
loope
test
lods
cld
push
mov
pop
sub
aam
lea
or
pusha
loop
adc
xor
mov
add
adc
out
std
pop
je
test
movsb
loopne
or
dec
mov
or
fs
sbb
sbb
sub
adc
dec
daa
int3
add
sub
dec
out
xor
flds
outsl
or
mov
mov
adc
pusha
lea
cmp
pop
icebp
or
inc
dec
jb
jmp
sub
adc
mov
mov
movsl
shlb
and
adc
nop
or
call
mov
lret
xor
inc
testl
scas
xchg
pusha
cmp
mov
mov
xor
xor
adc
pop
jecxz
pop
sbb
jecxz
pushf
dec
loop
ds
add
mov
loopne
push
iret
cmpsb
inc
cmp
inc
jge
ljmp
push
loop
inc
into
test
pop
popa
mov
or
pushl
or
stc
push
loopne
pusha
dec
cmc
push
lds
adc
adc
jmp
pop
mov
xorl
fmull
lods
sbb
in
pop
scas
ret
mov
inc
or
ret
and
daa
in
loope
scas
push
push
mov
inc
jecxz
jne
stc
add
xor
sbb
xor
add
and
and
xchg
pusha
add
je
test
scas
pop
push
adc
cmp
and
les
pusha
mov
mov
adc
dec
pusha
adc
push
cli
push
leave
nop
ret
test
push
call
loopne
loope
pusha
loopne
andb
pusha
flds
mov
sbb
xor
popa
xchg
xchg
mov
movsb
dec
sbb
pop
and
and
add
out
in
loope
and
push
sbb
test
inc
loopne
or
pusha
add
test
jmp
sahf
es
ljmp
test
add
push
outsl
sub
add
pop
lea
and
pop
adc
hlt
stos
pop
sub
sub
adc
sbb
adc
push
sbb
push
mov
push
inc
int3
in
inc
add
loopne
jmp
mov
insb
pusha
inc
pop
push
or
daa
add
jne
jmp
xor
or
pop
testb
xor
sub
fisttps
daa
je
jb
imul
push
popa
xor
sub
ljmp
mov
mov
xchg
mul
mov
neg
in
pop
dec
loopne
push
mov
push
movsb
gs
pop
stc
in
lock
loopne
add
jg
xor
sub
mov
adc
and
push
or
adc
push
mov
inc
push
jmp
out
popf
test
shufps
push
fisttps
and
adc
push
jo
push
sarl
out
std
lock
test
xor
adc
mov
je
out
push
dec
insb
add
vshufpd
bound
js
pop
leave
jno
or
sbb
shlb
mov
test
mov
mov
je
jg
test
and
lock
fbld
sbb
test
mov
jl
dec
push
aas
add
pop
dec
into
addl
jb
pop
add
and
cmc
daa
mov
or
decl
jo
hlt
and
mull
add
leave
lods
sbbl
push
call
adc
popf
push
push
push
mov
xor
mov
fldcw
dec
jmp
clc
jmp
ret
push
clc
jmp
xchg
ljmp
nop
xor
push
call
push
pushf
jge
hlt
xor
shlb
pop
xchg
mov
adc
cld
fdivrs
fiaddl
loopne
call
push
bound
push
xor
movb
stos
pop
mov
push
clc
and
aam
push
and
js
adc
add
xlat
pop
mov
jb
ret
push
rcrb
cltd
dec
pushf
addl
dec
or
dec
add
ljmp
add
add
nop
popa
mov
aas
hlt
test
insl
je
test
inc
cld
add
call
xor
mov
or
mov
cmpb
shrb
push
push
std
jne
add
mov
jbe
push
xchg
ficoml
mov
cwtl
inc
jmp
popa
mov
mov
or
pop
jge
jo
mov
and
call
ret
dec
mov
add
imul
sub
orl
dec
mov
loopne
std
jo
jne
insb
test
mov
call
jg
push
gs
cwtl
and
rcl
divb
mov
out
outsl
ds
cwtl
add
testb
lds
mov
dec
add
xor
mov
or
mov
jle
push
push
decl
xorb
push
js
test
jb
xor
cmp
xchg
jp
mov
es
sub
dec
add
cmp
rorb
sub
dec
adc
aam
mov
add
jp
je
lock
push
add
or
lea
lea
call
jne
pop
add
sub
data16
ret
mov
inc
cli
add
pop
shlb
and
outsl
jo
pop
nop
aaa
dec
lods
popf
icebp
jl
mov
enter
shrb
sahf
call
add
sbb
dec
cwtl
decb
inc
xchg
lods
lods
pop
and
add
xor
mov
out
andb
pop
aaa
call
test
jmp
adc
mov
xchg
add
pushf
jmp
jb
mov
outsb
stos
dec
and
clc
add
cwtl
clc
pop
sub
out
ret
ja
xor
adc
pusha
adc
or
cli
mov
jo
clc
cmp
outsl
out
test
mov
mov
xchg
fdiv
in
divb
mov
rorb
mov
mov
data16
jb
nop
or
mov
movsl
rolb
mov
lock
pop
add
mov
rclb
inc
fistps
xor
outsb
adc
add
mov
lock
mov
call
and
call
cld
int3
int
adc
pop
xor
xchg
and
xor
add
add
xor
mov
jbe
and
je
adcb
lds
add
call
mov
xchg
lock
dec
mov
inc
xchg
lock
pop
mov
add
je
adc
mov
push
inc
aas
cmp
jbe
xor
or
push
jmp
inc
outsl
xor
divl
loope
push
add
and
push
mov
adc
push
push
inc
sub
fidivs
dec
fistpl
addb
jmp
add
pusha
mov
hlt
add
mov
sbb
rcr
mov
sub
mov
sbb
mov
pushf
xchg
or
mov
or
lock
sub
and
mov
out
movsb
mov
sbb
ret
jb
cli
or
xor
cs
insb
mov
jne
jmp
add
xor
cmp
icebp
dec
pop
mov
push
call
imul
add
dec
push
hlt
adc
adc
cmpsl
mov
hlt
mov
mov
mov
adc
call
ret
orb
mov
push
cmpsl
lock
push
hlt
dec
lock
incb
add
hlt
xor
jbe
pop
mov
clc
lea
sub
div
mov
clc
xchg
scas
push
push
push
pop
lock
jo
xor
jmp
add
shr
mov
movb
push
push
lods
push
sbb
add
adc
mov
mov
dec
inc
sbb
mov
aaa
sub
jno
inc
jns
inc
mov
and
pop
jbe
cld
pop
add
inc
dec
adcb
mov
dec
roll
mov
sbb
add
xor
cmp
repnz
jge
xorb
sti
lods
mov
push
scas
add
ja
mov
adc
pop
and
pop
cmc
add
dec
mov
jmp
xor
loop
or
push
or
xchg
push
lock
testl
pushl
popl
daa
cld
xor
add
push
mov
je
fsts
push
mov
add
push
cmp
rclb
adc
fidivs
mov
je
fs
push
mov
lret
sub
inc
ljmp
ljmp
js
lods
bound
xchg
inc
xor
mov
jae
fiadds
sbb
lock
add
inc
jb
imul
test
icebp
xor
push
fidivrs
add
lret
jmp
jne
mov
call
jmp
and
pushl
test
xchg
pusha
lret
fsubl
pop
and
fisubrl
push
inc
mov
push
scas
imul
add
imul
push
push
enter
xchg
xchg
pushf
inc
jmp
fsubs
dec
push
dec
xchg
xor
mov
mov
push
or
arpl
sub
inc
dec
enter
pop
cwtl
insb
mov
xor
xchg
mov
nop
bnd
jb
mov
lea
or
add
mov
xchg
mov
add
add
and
or
jl
dec
push
mov
call
push
and
fs
cli
push
xchg
sbb
dec
inc
and
std
stos
sbb
jnp
or
daa
mov
add
enter
adc
sbb
scas
popa
mov
ds
ja
mov
repz
add
push
dec
add
lcall
mov
sub
jno
add
mov
sbb
or
push
bound
pop
mov
adc
mov
ljmp
dec
adc
mov
push
and
mov
sahf
push
mov
dec
add
add
orb
out
xor
or
jb
lock
cmp
adcb
add
outsb
xor
push
rolb
call
mov
lock
push
adc
xor
enter
push
stos
xchg
je
push
pop
push
jae
xor
pusha
cmp
add
test
sahf
xorb
dec
sbb
or
sbb
push
dec
add
int3
or
xor
shll
xor
jne
adc
add
sets
mov
dec
testb
sub
pop
add
outsb
push
cwtl
ljmp
push
dec
test
jb
pop
inc
inc
mov
lea
add
or
mov
sub
call
int3
cmpl
mov
mov
dec
outsb
pop
cs
cwtl
jbe
jg
fiaddl
push
frstor
hlt
sarb
adc
xchg
mov
int
std
addr16
cli
cmpl
dec
mov
aaa
mov
or
push
pop
inc
rcrl
fs
sub
adc
inc
movsb
mov
orl
stos
xchg
mov
scas
add
xor
cmp
mov
mov
cmp
incb
jb
mov
sub
mov
add
inc
movl
and
or
roll
loop
mov
add
mov
sbb
pushl
mov
pop
adc
adc
sarb
sbb
mov
pop
add
xor
rorb
sub
mov
or
mov
dec
roll
jnp
xor
fdivrs
adc
add
or
pushf
ror
add
js
decl
add
and
mov
insb
rolb
pushf
pop
mov
pop
icebp
inc
pop
xchg
ret
cwtl
xchg
mov
dec
add
test
push
sbb
adc
cli
loopne
insb
inc
add
mov
pushf
or
sub
filds
aas
movl
lock
mov
adc
cld
push
sahf
jmp
add
lods
inc
sub
test
push
loop
or
jo
movsl
movsl
xchg
dec
push
adc
sarb
mov
out
js
jl
sub
push
stos
fadd
testb
lock
mull
mov
mov
stos
call
jmp
pusha
add
or
add
push
rcr
loop
roll
loope
fmuls
ss
inc
test
addb
push
pop
ss
mul
add
incb
divl
cmp
testb
lock
push
xchg
add
and
mov
ljmp
fdivrs
popa
std
or
roll
outsb
popa
mov
clc
decl
push
mov
hlt
push
push
or
out
cwtl
jl
ljmp
popa
mov
scas
mov
push
push
adcb
inc
cld
lcall
pop
movsb
ret
or
ret
data16
loopne
xor
mov
mov
aaa
add
mov
push
ror
xor
mov
mov
sete
scas
cmpb
out
fmulp
add
aaa
sbb
dec
pushf
push
cmovs
sub
jno
push
push
test
adc
inc
jne
mov
loope
xor
or
add
mov
test
jle
cmc
inc
xlat
cmp
add
jl
cli
push
imul
fisttps
popa
loopne
pop
pusha
pop
cmp
cmp
pop
push
push
pop
add
pop
sub
sub
fcmovnb
call
jp
add
push
adc
cmp
push
xor
test
xor
test
adc
push
call
mov
loopne
pusha
and
hlt
or
jne
incb
test
in
loope
sub
loope
sbb
scas
add
cmc
mov
add
xor
xor
sbb
loopne
xor
jbe
insb
and
jb
add
loopne
test
decl
adc
jo
dec
lds
gs
or
andl
incb
loope
jl
dec
lock
mov
pop
add
mov
lcall
add
xor
subl
mov
push
inc
jle
and
push
loopne
jg
imul
cwtl
loope
mov
je
adc
jp
loope
loopne
xchg
ljmp
outsl
hlt
jo
fadds
mov
fdivs
mov
sbbl
sub
loopne
popa
mov
sbb
mov
add
es
dec
loope
or
rcll
sub
inc
out
push
mov
sahf
dec
push
or
jmp
adc
add
hlt
leave
or
or
lock
sub
adc
cld
rorl
adc
jo
add
fwait
push
enter
sub
loope
daa
pusha
cmp
loope
xchg
mov
lds
mov
add
incb
inc
mov
pop
adc
call
or
xlat
in
ss
xor
mov
push
mov
cmpsb
sbb
jmp
pop
xor
pop
pop
loopne
fcmovne
mov
out
cltd
pusha
adc
or
stos
sub
jbe
mov
adc
push
adc
pop
inc
pop
add
push
push
mov
push
mov
add
mov
inc
add
dec
rcrl
inc
add
push
mov
push
sbb
divb
ficompl
mov
adc
and
add
and
add
or
cmp
idiv
jo
clc
and
insl
cs
sub
ja
insb
addb
fadds
in
pop
cmpsb
lock
shlb
push
aad
mov
das
mov
xchg
shrl
shrb
movsb
data16
xor
jl
js
jmp
dec
je
test
cli
or
or
clc
jg
push
std
or
add
or
inc
imul
xor
sub
and
insl
imul
imul
sbb
cld
pop
jae
mov
in
push
lock
aam
or
mov
sbb
add
push
movsb
mov
int3
push
sbb
das
jo
cmpb
test
ljmp
insb
test
scas
fstpl
sbb
out
add
or
push
xchg
dec
repnz
adc
rolb
dec
or
lock
xor
stc
mov
and
rorl
cld
push
stos
lock
fbld
js
inc
ds
stos
cmp
loopne
jns
add
add
loop
mov
push
and
jg
cmpsb
jns
adc
cwtl
jbe
add
ror
scas
mov
in
cmc
add
push
fs
xchg
sbb
lcall
dec
xchg
jo
shlb
shr
xchg
push
mov
aad
jo
daa
mov
ds
in
loope
sbb
push
or
lock
xor
or
xchg
mov
jae
loopne
pusha
add
insb
or
lock
mov
push
pop
push
add
push
movsl
jbe
xor
pop
push
lock
push
mov
sbb
mov
lds
sahf
cmpsb
pop
push
mov
push
cmp
or
cmpsb
mov
inc
sub
or
mov
push
outsb
clc
and
adc
pop
ljmp
pop
jmp
lods
lock
jne
int
rcll
cmp
xor
dec
movsl
sbb
pop
mov
in
add
jo
ljmp
add
fidivl
xor
sub
add
jae
call
ja
push
lods
push
push
sti
stc
arpl
adc
push
and
xor
push
cmp
push
jno
sbb
enter
nop
pop
add
incl
sbb
nop
lock
dec
ret
rdmsr
xchg
stos
out
sbb
movsb
jo
repz
push
or
addl
icebp
shll
js
je
push
andb
inc
out
or
loopne
adcb
lods
and
mov
pusha
aam
dec
lock
cmp
or
rclb
push
mov
adc
jo
adc
xchg
icebp
sub
mov
xor
outsl
pusha
pop
or
mull
mov
dec
add
orb
push
stc
test
push
imul
stos
fmull
les
ljmp
push
lock
and
push
je
sbb
jno
sub
lcall
fwait
pop
inc
adc
stos
dec
jl
lods
mov
inc
push
inc
add
outsb
cmp
pop
fcmovnbe
mov
push
sahf
or
lcall
cmp
pop
pop
rorl
es
xchg
addb
and
incl
stos
jbe
push
sbb
xchg
or
push
dec
dec
mov
add
stos
leavew
push
enter
stc
xor
cmc
adc
sub
pop
roll
lods
mov
xor
hlt
stos
aad
lcall
sbb
add
stos
sbb
adc
lcall
test
mov
push
testb
popf
add
stos
cltd
adc
add
lea
out
xchg
test
out
jne
add
ret
addb
mov
mov
add
stos
scas
push
sbb
int
lcall
shll
cmpb
shll
data16
int
xor
pop
pop
push
push
dec
dec
xor
shll
inc
cmp
shll
es
shll
push
or
add
cmpb
sahf
repnz
push
ljmp
lcall
jmp
jns
mov
lcall
mov
push
sbb
out
lcall
lcall
imul
imul
imul
out
xor
sub
and
imul
imul
cmp
imul
push
ljmp
dec
rcr
ror
lret
cmp
mov
lahf
mov
das
les
xchg
addb
add
add
stos
mov
adc
mov
mov
mov
push
imul
aad
addr16
pop
add
cmpsb
jns
pop
push
sbb
mov
fstpt
push
sbb
pusha
add
xor
shll
outsb
push
bound
pop
push
push
or
sbb
inc
loopne
or
sbb
xor
sbb
and
cmp
sahf
sbb
adc
or
dec
mov
push
decl
testb
cmpsb
repnz
ljmp
lods
cmp
rorb
sub
xchg
ret
pusha
cmpsl
dec
cmp
pusha
movsb
call
cmp
cmp
lcall
movsb
add
adc
cmpsb
jbe
movsb
add
movsl
mov
pop
mov
roll
incl
cmpsb
add
dec
ss
mov
cmpsl
sbb
loopne
cmpsl
push
sbb
or
mov
movsl
shll
into
lret
xor
ret
mov
mov
add
or
mov
inc
xor
stos
mov
imul
push
leave
roll
add
push
js
sub
andb
adc
mov
stos
jno
int
lea
push
push
add
enter
cmp
cmp
ss
stos
in
push
jmp
xchg
cmpsb
ror
das
aaa
mov
imul
push
adc
test
add
sbb
fadd
inc
and
and
stos
push
and
mov
xor
clc
sub
add
cmpsb
inc
and
mov
add
aas
aam
filds
aam
das
pop
movsl
pop
add
add
pop
mov
pop
sbb
add
cmp
inc
xchg
shl
push
popa
inc
imul
std
bound
sti
addl
add
lods
repnz
in
mov
add
ret
into
out
or
push
inc
dec
dec
rol
push
add
ljmp
ret
add
insb
cltd
sub
cmp
cmpb
push
ret
ret
inc
notb
push
cmp
add
xor
add
lods
pop
push
mov
fs
addb
push
jae
mov
sahf
dec
aaa
je
aam
pusha
ret
call
sysexit
xor
aam
and
mov
cmp
add
dec
add
jne
call
rcrb
mov
ret
add
dec
or
xor
and
pop
adc
add
int3
push
push
pop
and
das
inc
jge
and
xchg
add
cmp
shll
adc
push
add
insl
mov
add
call
cmpsb
ret
jbe
inc
and
pushl
jb
mov
fmull
add
mov
add
bound
adc
and
pop
mov
fisttpll
mov
cmpsl
add
cmp
push
add
popa
mov
jg
add
push
ljmp
or
pop
or
add
add
or
mov
or
pushl
adc
add
or
js
push
call
sub
inc
xchg
and
cmp
or
jl
je
inc
xor
stc
adc
cli
xor
stc
sub
xor
xor
push
cmp
pushl
nop
push
nop
xor
cltd
xor
cmp
call
addb
inc
xor
lret
sub
xchg
repnz
pop
lock
pop
stos
lock
or
sub
pop
mov
and
mov
mov
sbb
je
pop
je
fidivs
mov
insl
inc
mov
stc
add
and
push
inc
jo
lock
fdivrl
and
mov
add
addb
fisttps
xchg
cmp
insb
call
xor
mov
jno
std
xchg
or
pusha
mov
sbb
add
sbb
cltd
movsb
insb
mov
mov
inc
pop
mov
xor
out
jo
jg
ret
and
jo
mov
fadds
repz
outsb
xor
pop
call
cli
adc
insb
pop
outsb
push
loop
mov
or
pop
cmp
mov
xor
or
adc
pop
jo
jbe
lods
clc
mov
add
xchg
jnp
push
sbb
push
sbb
pop
push
cld
nop
call
jge
int
push
lret
or
fcomi
jae
adcb
pop
cmp
xor
outsb
or
xor
cltd
xor
addl
adc
add
push
mov
mov
mov
push
lock
sti
cmp
es
loopne
xchg
andb
add
cmp
push
add
mov
push
mov
cld
jnp
lods
xor
addl
add
jno
mov
adc
fnstenv
repz
adc
xor
sbbb
decl
add
xchg
jno
xor
inc
jne
mov
movsl
call
mov
jne
jno
dec
adc
add
cli
jo
ret
mov
mov
fistpll
add
call
jne
repnz
repnz
add
rolb
pop
call
push
xor
jmp
jg
int
sti
jb
add
cmp
mov
add
adc
xor
lods
xor
fcompl
mov
cmp
mov
movsb
or
cld
adc
rcrb
or
jno
imul
inc
ja
mov
ret
in
add
mov
lahf
inc
xor
jne
mov
mov
orb
mov
dec
mov
adc
ds
xor
mov
xchg
div
ds
or
push
jo
sbb
adc
clc
or
call
add
std
mov
jp
xor
sbb
push
shll
push
xor
mov
pop
jnp
jne
aad
add
sbbb
mov
jno
inc
mov
and
imul
pop
cmpsb
fwait
lock
xor
inc
mov
and
stc
xor
or
push
pop
push
jno
lock
jb
shll
test
mov
cli
icebp
dec
lock
push
cs
mov
scas
and
xor
call
or
inc
or
add
add
jl
jge
mov
out
or
in
sub
mov
lcall
or
mov
cmp
push
push
push
clc
jno
or
call
aad
pop
mov
push
pop
mov
jo
adc
or
inc
test
clc
jbe
test
sti
jp
movsb
add
ret
or
pop
pop
aam
mov
xchg
clc
adc
xchg
mov
push
jbe
pop
cmp
insl
push
adc
test
cmp
cs
inc
mov
fnstcw
jbe
cmp
sahf
cmp
jl
jl
push
mov
adc
and
add
in
call
xor
lods
call
add
add
shrb
outsb
loop
loope
add
sbbb
outsl
pop
or
mov
adc
sbb
neg
jg
mov
sub
or
pop
add
movsb
sbb
out
popf
sub
leave
test
jae
or
iret
or
adc
push
aaa
enter
testl
mov
and
xor
or
and
call
cld
cmp
data16
fisttps
dec
mov
sbbl
inc
xchg
add
pusha
outsl
mov
adc
fisttpll
sbbb
add
and
dec
add
in
cmp
or
cli
xchg
add
jg
sbb
pusha
and
add
xorb
push
mov
je
inc
sub
mov
shlb
rcrl
mov
xorl
addb
add
or
test
movsb
je
cmp
je
adc
add
psubusb
fcmovnbe
je
jb
int3
out
orb
xchg
mov
inc
sar
cld
mov
rolb
add
sub
ds
movsb
push
cmp
movsl
je
ret
cmpsb
adc
ret
xchg
cs
stos
adc
ret
stos
je
ret
lods
inc
lods
je
ret
scas
adc
ret
mov
ret
insb
adc
ret
insl
je
ret
outsb
or
outsl
hlt
call
add
ret
movups
dec
incb
add
cmp
push
cmp
fnsave
and
mov
xchg
mov
jnp
add
lret
push
ret
inc
test
hlt
adc
inc
lret
inc
cli
xor
scas
rolb
mov
pop
les
mov
add
inc
mov
data16
loope
lahf
hlt
or
rol
jle
aam
xchg
or
test
mov
or
jle
mov
ficoml
daa
inc
sarb
shrb
call
push
call
bound
adc
fdivr
cmp
test
jle
adc
ret
ret
sbb
mov
call
fcmovnb
and
aaa
push
add
imul
add
test
fistl
fsubrl
or
cmp
pop
inc
rolb
or
mov
sbb
mov
push
test
and
push
fmuls
ds
and
inc
out
xor
xadd
push
sti
pop
jl
jbe
ljmp
in
imul
dec
js
addl
je
mov
and
pusha
cmp
or
pop
movsb
sbb
sbb
loop
ljmp
sub
cmp
sbbb
fisttpl
loop
add
aam
clc
pop
ljmp
addr16
inc
jg
inc
call
fcmovbe
lods
adc
and
add
orb
or
xorb
mov
or
sar
dec
cmpsb
inc
loope
pop
cmp
inc
sbb
adcb
aad
out
sbb
hlt
xor
bound
and
push
ret
hlt
mov
cld
test
ljmp
pop
xchg
or
cmp
cmc
hlt
adc
add
loop
pushf
mov
outsb
decl
pusha
dec
ret
sub
mov
lock
int3
idivl
fdiv
jg
sub
popa
cmp
add
mov
push
loope
adc
out
inc
jg
das
out
add
xor
push
sbb
lcall
jle
dec
pusha
punpcklbw
clc
jle
lods
std
call
add
fs
imul
pop
popa
add
stos
clc
pusha
pop
add
das
xor
mov
movsl
push
mov
dec
insb
clc
adc
dec
cld
inc
ret
call
inc
push
mov
add
push
faddl
arpl
add
and
adc
add
or
insb
ret
pop
lods
fnsave
pusha
lcall
sub
adc
pop
fstpt
pusha
add
shll
mov
or
and
jbe
push
inc
dec
pusha
or
enter
xchg
rolb
insl
fldt
pop
inc
xor
loope
outsl
jp
add
fwait
mov
loope
adc
fwait
push
call
sti
and
stos
lcall
rcl
sbb
call
gs
add
pusha
and
xor
prefetchwt1
inc
add
in
add
fiaddl
xlat
inc
out
push
sbb
sbb
daa
mov
add
inc
push
add
add
jae
xchg
xor
sbb
cltd
icebp
pusha
cs
sub
fwait
sub
popa
adc
loopne
clc
pop
sbb
popa
add
push
jo
jmp
and
mov
mov
jnp
xchg
pop
arpl
mov
push
shrl
pop
xor
add
outsl
icebp
add
cmc
arpl
stos
aas
add
push
mov
or
dec
iret
fstpt
jecxz
cltd
sbb
stos
fdivrs
push
pop
add
repz
fidivs
jle
lods
dec
mov
xchg
sub
pop
movsl
mov
out
adc
adc
mov
arpl
lcall
sbb
add
push
inc
adc
sbb
sahf
cmpsb
stc
pushl
out
sarl
orb
hlt
mov
mov
mov
push
sarb
add
stos
jmp
adc
andl
es
pop
jg
imul
daa
les
push
dec
push
push
or
pop
xchg
popf
mov
scas
inc
jns
shll
pop
mov
pop
fisubrl
aaa
cs
pop
push
pop
stos
xchg
inc
adc
mull
cmpsl
sub
stc
cs
xor
dec
xchg
cmpsl
imul
cmpl
aad
icebp
add
mov
stos
and
adc
mov
add
pop
mov
or
ret
cmp
mov
jno
jnp
cmp
imulb
cmpsb
add
mov
add
mov
and
xor
cmp
pop
addr16
cmpsl
xchg
out
shll
or
sbb
cmp
jne
jnp
xchg
cld
xchg
mov
jno
sub
inc
pop
mov
mov
jmp
pop
aad
xor
pop
imul
mov
psrlw
inc
or
adc
inc
divb
mov
jb
aam
lock
push
loop
sub
and
mov
and
test
pop
ljmp
divb
dec
and
push
cmpsb
lock
push
add
incb
std
dec
adc
push
imul
push
mov
push
or
les
js
mov
jb
int3
xchg
je
push
sub
add
inc
popl
dec
add
jb
imul
mov
xor
incb
popa
fwait
push
jb
nop
add
je
and
ret
js
and
roll
cmpsb
test
add
fcmovnbe
or
push
sahf
mov
and
jb
fidivs
add
add
inc
mov
pop
or
stos
pop
push
scas
xor
ljmp
outsl
mov
inc
popa
je
push
sbb
lcall
inc
adcb
pop
add
push
mov
outsl
pop
fadds
inc
add
lcall
inc
cli
insb
xchg
outsl
or
add
fwait
cmp
fiaddl
xchg
jb
inc
gs
je
push
int
mov
shlb
or
adc
add
inc
or
push
hlt
xchg
add
shll
gs
test
push
sahf
adc
push
cli
pusha
or
idiv
fisttpl
add
add
jb
jb
inc
and
fldt
gs
sahf
outsb
fs
mov
inc
pushf
popa
adc
mov
xchg
push
repnz
cmp
mov
test
adc
adc
outsb
mov
scas
inc
dec
xor
mov
xor
add
jb
push
test
imul
inc
mov
imul
add
jo
loopne
loopne
inc
cmp
jbe
mov
filds
or
adc
out
icebp
add
pop
aam
push
out
add
mov
add
add
lods
gs
inc
jbe
pop
iret
push
inc
lcall
sbb
add
add
jb,pn
arpl
fwait
dec
mov
clc
sub
insl
jb
adc
add
jbe
sub
sbb
cld
or
add
inc
jl
push
jnp
arpl
flds
ds
xchg
jb
lea
sub
insb
jne
xchg
rorl
jnp
addb
gs
sub
and
xchg
jae
pusha
mov
aaa
ss
add
mov
js
and
int3
mov
inc
push
inc
nop
jne
popf
mov
and
mov
add
push
push
loop
mov
push
mov
lahf
inc
out
scas
jmp
add
pop
mov
cmovp
ret
cmp
add
dec
jo
fisttpll
cmp
push
mov
in
add
ret
push
sbb
mov
push
xchg
add
push
jae
int
mov
je
add
add
xor
push
dec
lcall
lcall
insb
push
subb
dec
add
adcl
nop
fs
push
dec
orb
or
lea
xor
and
nop
fldenv
mov
fists
ljmp
push
mov
jne
mov
ret
pushf
shll
addb
and
pusha
mov
stos
call
or
jae
mov
mov
arpl
inc
in
mov
sbbb
outsl
insl
adcb
sub
pusha
rolb
sbb
xchg
xor
dec
cltd
jg
loopne
andl
xchg
push
imul
in
cmpw
cs
insl
fcmovbe
stos
push
cmp
dec
inc
jo
add
mov
mov
insb
stos
mov
push
outsl
cmc
aas
push
mov
add
jne
xchg
xchg
pushf
insl
scas
sub
movb
cmp
ret
pop
xchg
jl
jb
js
rorl
sbb
mov
rcrb
pusha
or
pusha
mov
sub
and
lcall
add
lds
xchg
or
push
xchg
out
arpl
cmp
add
and
mov
gs
adc
lds
dec
sub
mov
mov
lds
push
dec
sub
jbe
scas
adc
dec
and
add
outsb
push
sahf
add
hlt
test
jp
dec
outsb
and
mov
mov
inc
rorb
dec
in
dec
fcoms
mov
lds
jae
push
push
rcrb
mov
mov
sahf
mov
imul
cmp
imul
lea
rorb
lods
cli
add
adc
call
pusha
push
add
sub
cmpsb
push
cmc
punpcklbw
mov
jg
xchg
rol
shll
fmull
mov
mov
mov
cmp
imul
adcb
add
call
xchg
mov
bound
dec
bound
ss
add
test
loop
sahf
rolb
lods
shrb
outsb
into
out
imul
push
outsl
mov
sarb
repnz
lods
bound
sbb
and
fs
xchg
jb
incl
filds
subb
add
dec
push
imul
xchg
sub
cmp
lcall
adc
pusha
and
sub
loope
xchg
loopne
fwait
inc
lock
jg
loope
insb
add
add
sbb
fiaddl
push
popa
xchg
adc
lds
push
insb
mov
sub
stos
gs
mov
and
jb
sahf
loopne
clc
decl
adc
lds
ljmp
cmpsl
loope
outsb
jb
bnd
outsl
fwait
adc
imul
sub
lods
mov
popa
sbb
mov
mov
push
arpl
loope
out
push
out
es
push
jne
mov
inc
orb
loopne
jge
add
inc
add
dec
dec
in
scas
ss
outsl
xorb
negb
popa
or
add
loope
mov
popf
add
push
js
pop
pop
add
outsl
imul
push
push
incl
mov
outsb
pushf
loopne
mov
push
add
or
cli
pusha
pop
xchg
or
je
loopne
pusha
inc
and
xchg
arpl
pop
jno
jns
scas
repnz
push
mov
cmp
push
loopne
sbb
xchg
loopne
add
insb
or
dec
loop
es
mov
loope
push
popa
sbb
push
jae
adc
sahf
adc
inc
fildl
popa
xchg
cmpsb
cwtl
loopne
add
jecxz
mov
xchg
loopne
or
incb
jecxz
insl
add
ds
sub
push
outsb
sahf
and
jb
outsb
sub
or
mov
bound
cwtl
cmp
arpl
int3
add
out
dec
or
aaa
ret
gs
mov
dec
sub
cli
add
adc
add
outsl
pop
mov
loopne
sahf
lock
loop
jb
stos
sub
cmp
roll
xchg
out
js
mov
cmp
mov
or
aad
dec
mov
daa
sub
dec
jae
lods
loopne
mov
pop
jb
movsb
popa
adc
pushl
dec
xor
popa
add
pusha
leave
pusha
push
push
arpl
out
push
adc
add
bound
inc
addl
mov
push
dec
pusha
in
fimull
add
cmp
popa
jae
mov
xor
stos
gs
adc
mov
push
loopne
outsl
ja
or
add
push
and
fistpll
inc
add
pusha
or
shrb
outsl
add
push
push
gs
fcomip
lcall
jmp
mov
mov
sub
xchg
out
adc
bound
sub
testl
sub
divb
mov
fcoms
push
cmp
jo
cs
clc
or
and
je
mov
xor
pop
and
icebp
mov
data16
pushf
ja
sub
adc
or
stos
imul
mov
repnz
insb
add
bound
xchg
mov
xchg
mov
mov
dec
sti
fstpt
and
fwait
push
add
add
sahf
outsb
jae
lock
add
push
loope
dec
lcall
aam
push
mov
sbb
addb
adc
mov
jp
shll
call
or
mov
cmp
mov
aaa
sbb
xor
sbb
inc
and
push
or
test
cmp
inc
add
call
mov
test
fsubrl
jb
push
push
imul
cmp
add
ss
fs
shrb
mov
hlt
sub
jno
or
push
xor
mov
add
outsb
cmpsb
cli
push
mov
fs
add
gs
data16
idiv
test
xchg
nop
ja
xor
or
inc
insb
sahf
test
mov
icebp
decl
inc
lea
mov
andb
push
push
popa
cmc
add
jno
fs
inc
adc
inc
cld
outsb
mov
sbb
push
inc
xor
jno
xor
ss
xlat
fildl
mov
stos
add
dec
xchg
jne
sbb
fwait
jecxz
insl
xor
jns
dec
inc
rorb
fwait
jno
xor
and
lock
outsl
mov
icebp
push
mov
push
outsb
push
adc
je
jo
add
call
push
inc
add
mov
cltd
cmp
dec
inc
push
cmp
sbb
add
adc
mov
jno
xor
in
icebp
enter
or
xchg
jo
adc
jae
scas
cs
sbb
orb
outsl
sub
mov
arpl
jo
cli
jg
jne
mov
gs
icebp
dec
stos
mov
dec
mov
xor
sbb
clc
mov
mov
mov
dec
mov
cmpsb
aaa
or
into
xor
subb
cmp
mov
dec
xor
aad
add
pop
mov
mov
lcall
inc
inc
call
mov
adc
add
add
data16
jns
dec
inc
in
clc
decl
inc
mov
ss
pushf
jbe
mov
int
push
dec
cmp
add
nop
repz
insl
or
push
mov
scas
add
adc
lock
pop
lock
sbb
mov
jae
push
sahf
add
std
stos
mov
xchg
je
jo
dec
inc
bound
xor
mov
call
mov
jb
cs
sarb
decb
ss
rdpmc
or
sbb
ja
insb
js
add
pusha
jb
xchg
jo
xor
mov
idiv
jg
or
push
cli
add
or
sahf
mov
add
mov
repz
mov
sub
add
mov
imul
cmp
cli
dec
les
mov
push
roll
jae
fsubl
mov
inc
mov
pop
inc
es
mov
jp
jb
pusha
jae
xchg
out
cwtl
cmp
das
inc
sarl
or
shl
sbb
lret
lcall
jno
outsb
jno
xor
lea
int
ret
cvttps2pi
xor
or
lea
pop
add
repnz
or
ret
push
push
inc
nop
imul
outsb
xor
mov
ljmp
gs
push
aad
sahf
jbe
inc
jns
push
arpl
jo
mov
dec
xor
mov
pushf
jb
inc
pop
pusha
sub
jb
sahf
arpl
dec
rolb
test
fdivs
jns
repz
call
loopne
scas
jbe
mov
arpl
stos
jns
es
arpl
jo
call
test
aas
add
adc
jne
jmp
jg
mov
mov
cmp
mov
rcl
push
shlb
or
lock
push
insl
or
xor
add
xchg
gs
gs
mov
mov
or
xor
dec
mov
jo
inc
jle
xor
cwtl
jns
pop
aam
push
adc
adc
adc
mov
int3
dec
lods
cwtl
je
push
xchg
lock
inc
mov
cmp
mov
js
push
mov
pop
add
jb
push
imul
mov
push
std
gs
inc
insb
dec
outsb
dec
outsb
jb
sub
push
shrl
les
jb
cmp
jo
call
mov
lock
xor
adc
mov
mov
mov
push
std
and
sbb
push
adcb
mov
and
and
xor
jge
jmp
mov
add
imul
movsb
mov
pop
or
jne
inc
mov
dec
outsl
xor
popf
test
mov
outsb
ds
imul
add
js
and
ss
or
fisubrl
sbb
push
jb
inc
in
mov
xlat
inc
jae
outsl
jnp
nop
inc
xchg
cmp
mov
xchg
test
fisttps
push
add
mov
adc
mov
mov
jl
adc
inc
lods
test
xor
insb
movsb
loope
rcll
lret
jne
mov
or
fmuls
push
dec
notb
mov
inc
gs
arpl
inc
push
fwait
jmp
mov
je
aaa
add
pop
outsb
jb
pop
out
adc
lret
mov
xchg
outsl
and
lods
or
ds
pop
sub
jo
lcall
mov
test
add
fnstsw
xchg
movsb
fisubs
fiadds
insb
bound
push
outsl
and
pusha
add
push
mov
sbb
mov
lret
sub
lods
ljmp
sub
xchg
and
sbb
fiadds
sub
mov
aam
icebp
je
in
test
mov
jae
jb
xchg
clc
lea
sbb
andb
popa
xchg
fisubrs
stos
nop
inc
inc
mov
or
xor
xchg
outsl
add
pop
inc
adc
xchg
subb
orb
fs
add
xchg
jae
adc
mov
outsl
mov
test
inc
dec
lcall
adcb
arpl
fisttpl
loope
inc
or
adcb
icebp
sbb
decb
stos
push
dec
sbbb
jb
xchg
mov
xor
fiadds
add
or
push
mov
insb
xchg
add
add
lods
clc
inc
outsl
insb
fwait
inc
jl
sahf
jo
clts
mov
insl
inc
add
push
nop
inc
jb
addr16
loop
fdivp
daa
rclb
insb
inc
inc
xchg
jne
shlb
add
push
mov
xor
and
add
mov
es
push
push
loop
lcall
rcrl
and
int
sbb
jecxz
pop
fistps
outsl
xchg
loop
dec
addr16
subb
xchg
sub
addr16
mov
push
rcrb
add
subb
mov
xchg
add
xchg
and
mov
mov
add
testb
movsl
sarb
mov
sub
mov
ficompl
mov
push
rorb
adc
mov
pushf
ret
xchg
lds
xchg
add
mov
sbbl
push
inc
inc
add
adc
lods
arpl
sub
ret
pop
mov
mov
dec
adc
cwtl
push
adc
jp
add
clc
imul
jecxz
lods
rorl
mov
lods
adc
nop
jb
sub
shrl
into
adc
sbb
xor
xchg
rcll
xchg
xchg
mov
and
inc
sbb
lea
mov
aam
xor
ss
add
xchg
dec
fiaddl
insb
or
push
mov
cmp
imul
cltd
outsl
mov
dec
mov
fs
int3
test
inc
mov
dec
inc
lock
push
mov
dec
mov
pusha
and
cwtl
cmp
inc
jbe
test
mov
shll
mov
arpl
lods
daa
popa
cmp
xchg
jne
dec
lcall
shlb
jbe
adc
loope
dec
xchg
les
jl
sbb
sbb
adc
inc
push
or
xchg
push
int
fldl
inc
test
add
je
popa
pop
and
add
or
cmpsb
data16
pusha
add
pop
decb
hlt
push
jns
mov
popa
xor
dec
in
add
add
cmp
xchg
data16
inc
pop
add
popf
jp
popa
inc
insb
cmp
pop
shl
add
mov
pop
sti
ljmp
or
outsb
loop
les
and
insb
loop
loope
add
pusha
fisubs
dec
mov
xor
jmp
cmpsl
push
mov
ss
lcall
xor
pop
add
sub
xchg
jo
orl
hlt
and
inc
push
cmpsb
push
push
in
add
jo
mov
fs
jno
lcall
jp
jb
dec
pop
ljmp
or
pusha
jo
out
add
sbb
pop
mov
dec
push
add
pop
mov
add
bound
sub
sbb
xchg
lcall
jecxz
mov
xchg
lods
bound
popf
cli
pop
popw
push
or
add
lahf
pushw
lods
loopne
fbld
inc
add
pusha
push
dec
pop
cmpsb
fstpt
mov
fs
loop
push
push
mov
mov
insb
mov
adc
mov
adc
pop
sar
loope
bound
mov
jle
imul
outsl
add
or
lcall
mov
adc
jae
sbb
ljmp
add
adc
lcall
shlb
test
pop
mov
xor
mov
cld
adc
scas
or
insb
sub
ljmp
in
loopne
push
and
add
xor
outsl
imul
outsl
xchg
imul
loop
mov
mov
push
dec
mov
dec
inc
stos
loop
dec
dec
mov
fiaddl
dec
xor
add
cwtl
fsubl
mov
inc
mov
mov
mov
pop
push
std
popa
add
popa
push
inc
push
or
dec
gs
add
jmp
pusha
ja
add
xchg
arpl
out
add
pop
aam
mov
push
jecxz
fwait
mov
insl
jo
add
popa
hlt
pop
mov
cld
inc
pop
jo
lcall
add
jecxz
add
hlt
add
adc
test
ja
outsl
or
and
push
aad
sahf
pop
ja
xchg
jae
arpl
adc
add
in
jne
pusha
jl
cwtl
jecxz
lock
inc
xchg
ja
add
je
sub
add
je
add
cmp
cli
push
insb
xchg
fwait
mov
dec
jo
xorb
in
or
movsl
add
or
xor
mov
ljmp
add
pop
xchg
ret
jo
add
add
fistl
stos
aas
add
and
add
lock
mov
cmp
inc
mov
pop
mov
xchg
sbb
decb
lret
nop
pop
xchg
push
mov
mov
out
mov
fisttps
push
adcl
cs
mov
cli
or
mov
scas
ret
jp
outsl
clc
in
div
inc
adc
or
or
sbb
add
mov
decl
adc
into
sbb
cmp
lock
cmp
sub
rcl
fbstp
sbb
mov
out
addl
sub
mov
sarb
xor
mov
adc
sti
fwait
push
pusha
cmp
cmpsb
xor
dec
pop
xchg
shll
loopne
push
or
decl
pop
or
imul
cmp
inc
decl
fisttpll
jmp
subl
repnz
jnp
es
push
scas
pop
stos
pop
scas
adc
cmp
cli
inc
adc
aam
add
add
loope
test
xchg
icebp
cmpsb
scas
mov
leave
cli
mov
enter
mov
dec
dec
loope
pop
fnstsw
inc
in
insb
cmp
inc
mov
push
mov
mov
ret
cmp
xchg
mov
pop
cmpsb
lock
and
push
add
aaa
popa
cs
mov
je
and
lock
push
xchg
clc
repz
fldl
xchg
jle
add
les
std
xchg
int3
int
adc
sti
aas
mov
or
mov
jmp
mov
xchg
outsb
in
add
sub
out
loop
pop
dec
shl
aas
das
add
and
loopne
lods
cmp
out
aas
mov
ljmp
int3
fcomip
sbb
aad
xor
out
cmp
add
hlt
ljmp
dec
pop
loope
les
aas
insl
les
mov
mov
lcall
xchg
movb
dec
add
xchg
aas
loop
add
pop
cld
in
mov
jl
pop
roll
pop
aas
sub
das
stc
add
testb
movsl
jmp
jp
sub
sbb
in
lods
mov
inc
das
fstl
pushf
add
int3
fcoml
call
add
cmp
test
arpl
cmp
add
xchg
mov
push
std
xlat
cmp
mov
in
call
cld
add
clc
mov
jne
fldt
cmp
jg
int3
jno
rcr
adc
out
mov
pop
cmp
xchg
andb
cld
sbb
add
and
in
leave
xor
push
stos
cmpsb
call
into
imul
faddp
jge
call
mov
pop
adc
pop
test
cmp
push
and
mov
gs
incl
jge
add
enter
mov
imulb
jns
outsb
andb
cmp
jp
loopne
inc
pusha
ljmp
test
inc
jl
add
push
push
adc
jge
add
dec
mov
dec
test
add
xchg
daa
sti
inc
cmpsb
fstp
or
push
add
sub
lret
mov
mov
inc
add
fwait
sti
add
or
jno
sub
pushf
sti
add
or
out
divb
les
scas
mov
push
scas
fdivl
sub
dec
mov
or
and
cmp
add
add
in
lcall
xor
js
cmp
or
pop
or
xor
lds
jle
pop
inc
or
std
pushl
jbe
mov
mov
or
mov
ret
adc
jecxz
cmpsl
fisubrs
sbb
aas
or
addl
cmpsb
mov
fwait
push
mov
iret
add
push
push
filds
dec
inc
insl
fwait
out
sti
inc
push
pop
push
adc
pop
xor
cmp
das
dec
aaa
inc
aad
out
dec
rcll
sbbl
cmp
cmpsl
xor
jae
ja
jg
mov
imul
jp
mov
rolb
jmp
sbb
jg
test
dec
sub
lret
cmp
mov
cmp
outsl
out
cmp
jl
jnp
cmp
pushf
cmp
xchg
lods
cmp
mov
jae
call
mov
sbb
fstpt
add
ret
ds
ds
push
mov
jl
adc
out
idivb
test
jae
xchg
arpl
movsb
ds
mov
inc
les
xor
and
in
adc
add
add
xrelease
jecxz
and
hlt
mov
mov
adc
ret
aas
fidivl
aas
fs
xchg
out
adc
mov
add
leave
adc
aas
fcoml
mov
inc
aas
les
xor
mov
enter
je
cli
aas
or
aas
add
and
sub
push
sbb
add
or
call
xor
xor
lret
sarb
pop
mov
pop
xor
jecxz
xor
xor
imul
xor
lods
push
xchg
mov
int3
fdivr
cmpsl
dec
rcr
xor
xor
mov
sub
xor
mov
sbb
outsl
divb
sub
lret
xor
mov
pop
xor
outsl
decb
xor
mov
cmpsb
mov
int3
xor
xor
xor
cld
xor
xor
xor
mov
int
cld
xor
mov
pop
xor
jl
jnp
mov
lock
imul
xor
lods
dec
xor
cld
int
mov
fdivl
sbb
in
xor
cld
xor
xor
xor
mov
adc
xor
mov
inc
pop
push
les
add
jno
arpl
gs
shlb
cmp
adc
xor
xor
xor
mov
cld
xor
pusha
xor
sub
bound
insl
add
mov
fwait
xor
adc
mov
mov
adc
pushf
xor
xor
mov
movsb
mov
xor
xor
adc
loop
mov
stc
fldt
jnp
xor
sub
lret
xor
dec
test
cltd
mov
fwait
xor
add
mov
xchg
in
fwait
lcall
sbb
sti
ss
mov
scas
mov
sub
popl
mov
or
or
clc
outsl
ljmp
mov
loopne
mov
inc
or
ss
loopne
loopne
pusha
add
push
push
dec
das
pop
push
cmp
loop
mov
lea
insb
cmp
popl
fucomi
sub
xchg
add
and
mov
pushl
cmp
and
ds
ss
aas
adc
xchg
mov
loopne
xchg
popa
inc
adc
mov
mov
pop
inc
mov
mov
lahf
or
lds
pop
push
inc
add
cmp
mov
ret
ljmp
xchg
xor
xor
xor
add
sub
xor
inc
adc
jg
xor
xor
and
and
fbld
int3
xchg
xor
pop
add
es
xor
leave
and
and
and
icebp
adc
adc
fwait
adc
fistpl
pushf
and
ss
shlb
sub
fidivl
and
mov
aaa
jg
ss
ss
ss
fdivs
cmpsb
aaa
push
add
sub
or
ljmp
mov
adc
push
cmp
add
cmp
mov
bound
xchg
cmp
and
in
lods
add
adc
mov
cmp
cmp
adc
cmp
cmp
cmp
adc
push
call
cmp
cmp
add
inc
pop
mov
mov
cmp
jge
cmp
lods
add
adc
cmp
or
ds
and
pusha
ja
mov
xchg
jp
push
add
hlt
jmp
xor
xor
xor
add
and
dec
andb
push
mov
cwtl
shll
lea
cmp
cmp
cmp
cmp
cmp
cmp
add
add
or
mov
adc
cmp
je
cmp
or
push
nop
aam
cmp
push
cmp
jbe
adc
andb
add
les
ds
mov
ds
xor
xchg
inc
loopne
xor
aad
adc
mov
sbb
aad
push
push
inc
add
add
loopne
cmp
xor
add
lods
xor
in
out
adc
xor
xor
xor
xor
xor
lahf
adcb
outsb
imul
loopne
push
cld
lock
or
mov
push
cmp
repz
insb
mov
test
outsl
push
cmp
cmp
cmp
mov
cmp
lret
lret
pop
nop
nop
pusha
or
xor
add
add
push
add
sbb
xor
xor
inc
jg
aaa
test
lock
test
cmp
cmp
cmp
lds
mov
cmp
cmp
call
sbb
fistpll
xor
je
mov
filds
and
mov
movsl
hlt
pop
aaa
cld
adc
cmp
xor
xor
pop
std
aas
shlb
data16
xor
jecxz
sbb
cmpsb
adc
ds
stos
xor
ss
or
xor
xor
jmp
aaa
sub
and
cmp
or
das
sbbb
aad
cmp
lret
pusha
dec
or
fnstsw
push
cmp
pop
cmp
or
cmp
cmp
mov
je
nop
cmp
cmp
jmp
repnz
repnz
pop
mov
push
outsb
jo
sbb
out
mov
cltd
insl
jl
incl
dec
rclb
xor
xor
rcrb
popf
xor
clc
in
fistpll
ljmp
xor
xor
cli
inc
adc
dec
mov
insl
ss
in
outsl
push
add
divl
push
aaa
jmp
aaa
cs
aaa
inc
dec
fildll
aaa
jne
aaa
nop
aaa
pop
aaa
test
mov
inc
nop
add
and
cmp
or
cmp
cmp
cmp
xor
mov
pop
cmp
adc
jae
lret
cmp
scas
cmc
cmp
icebp
mov
bound
dec
ds
adc
mov
adc
mov
insb
xor
push
inc
nop
push
cwtl
xor
das
adc
xor
enter
xor
mov
xor
fstl
adc
cmp
cmpsl
addl
mov
inc
mov
testl
shll
push
aaa
adcl
pushl
cli
adc
cmp
rclb
cmp
fstl
les
popf
cmp
lds
cmp
cmp
mov
into
adc
pop
cmp
cmp
sub
stos
lea
hlt
adc
dec
aas
jb
sbb
es
decl
xlat
xor
je
or
divb
mov
adc
xor
and
ljmp
sbb
pushf
ss
jg
and
jo
les
pop
cmp
cmp
sub
ds
aas
and
jle
push
pop
clc
pop
lret
xor
xor
xor
cld
les
aaa
dec
cs
cmp
cmp
jl
repz
adc
xor
ss
sub
cmp
sarl
ljmp
inc
repnz
cwtl
jnp
inc
cmp
cmp
daa
mov
mov
ret
or
jo
add
push
ljmp
das
or
xchg
lock
mov
xor
xor
cld
call
xor
cmpsl
xor
popa
mov
inc
xor
xor
nop
xlat
xor
arpl
out
dec
out
adc
dec
das
clc
ljmp
cld
ss
ss
ss
or
ss
rorb
fsubrl
daa
ss
mov
ss
push
inc
les
aas
ss
dec
lods
stc
pop
ret
push
movsb
ss
ss
adc
mov
ja
xchg
mov
mov
cld
mulb
hlt
aaa
getsec
add
mov
adc
aaa
daa
aaa
aam
das
mov
les
aas
aaa
add
aaa
lods
aaa
or
movsb
push
sbb
addr16
adcb
push
sbb
sarb
je
aaa
insb
in
fcomip
aaa
xchg
aaa
ficomps
mov
scas
dec
dec
aaa
insl
cmp
or
cld
add
xchg
or
jo
sti
xor
call
and
aad
inc
adc
xor
push
mov
push
in
xor
cmpsl
xor
scas
xor
xor
xor
fidivrs
lods
push
in
adc
xor
xor
xor
shrl
push
aaa
jge
dec
mov
adc
mov
pop
nop
or
jmp
stos
add
xchg
add
xchg
pusha
xchg
es
fs
add
pop
add
jne
sub
idivb
lods
cmp
std
cmp
cmp
cmp
push
mov
cmp
mov
lds
jo
hlt
cmp
cmp
js
mov
sti
push
cmp
rclb
loopne
xchg
jl
inc
shll
mov
adc
lods
add
cmp
cmp
add
jle
jo
xor
adc
xor
cmc
xor
push
xor
xor
xor
rorb
inc
jo
sbb
jle
or
je
xor
pop
xor
enter
std
mov
and
ss
adc
aaa
mov
aaa
orb
jg
ja
sbb
xor
cmp
xchg
adc
cmp
push
jo
cmpb
insl
cmp
adc
xorb
ljmp
push
cmp
cmp
cmp
push
cmp
cmp
add
in
lock
pushf
emms
mov
mov
daa
cmp
cmp
lock
pop
cmp
add
mov
cld
ds
adc
add
les
add
std
xor
xor
icebp
call
nop
jp
xor
jp
xor
mov
push
inc
xor
pushl
nop
mov
dec
add
and
rorl
add
jp
xor
call
xor
xor
adc
pop
stos
ret
icebp
call
nop
ret
adc
xor
loope
jle
push
jg
mov
inc
cmp
cmp
cmp
jp
notb
les
cmp
cmp
and
cmp
cmp
cmp
into
ret
mov
cmp
add
xor
cmp
cmp
and
cmp
std
mov
cmp
inc
cmp
inc
cmp
cmp
dec
cmp
stos
adc
mov
stos
xchg
aas
inc
aas
loop
mov
jo
jg
movsb
xor
out
mov
xor
xor
bound
test
or
and
aad
icebp
mov
xor
xor
xor
repz
adc
cli
or
pop
jg
xor
iret
xor
loop
jmp
push
xor
loop
cmp
and
fdivs
xor
xor
imul
dec
xor
fwait
out
iret
lock
xchg
xor
ss
into
adc
aaa
or
in
cmp
mov
cmp
cmp
cmp
cmp
les
loope
pusha
fs
xor
shll
sbb
cmpsb
lcall
mov
push
adc
sub
lock
jo
pusha
call
cmp
mov
push
cmp
cld
cmp
cmp
cmp
jle
mov
jp
xor
cmpsl
nop
cwtl
or
dec
adc
pushl
or
add
lock
outsb
aas
and
lock
call
in
sub
mov
xor
dec
or
cmpsb
pop
ljmp
mov
test
xor
cld
in
or
in
fisubl
cmp
mov
mov
cs
mov
cmp
cmp
insl
cmp
div
push
adc
jecxz
std
outsl
adc
xor
lret
adc
lret
les
clc
xor
fidivs
sbb
push
mov
sub
xor
icebp
mov
jo
mov
cmp
xor
fnsave
movsl
xchg
test
or
mov
test
cmp
mov
cmp
cmp
jnp,pt
lock
inc
xchg
cmp
jecxz
add
or
cmp
stos
cmp
add
xchg
add
cmp
cmp
jo
mov
ljmp
mov
pop
repnz
cmp
cmp
cmp
mov
xor
mov
sub
aaa
ds
ja,pt
jbe
mov
xor
ds
aas
test
aas
aad
seto
nop
add
call
xor
leave
xor
scas
xor
scas
xor
aaa
add
add
xor
pushl
xorb
and
and
mov
lds
in
mov
push
std
sbb
popa
xor
shll
fbld
xor
enter
mov
mov
xor
test
xor
xor
jg
ss
ss
xchg
mov
add
insb
test
jle
scas
call
aaa
or
sbb
cmp
aaa
cld
lods
shr
adc
cmp
cmp
cmp
cmp
call
mov
push
rorb
std
cmp
cmp
cmp
adc
cmp
cmpsb
cmp
cmp
adc
sbb
mov
test
xor
fnstcw
adc
adc
fnstsw
lret
jle
mov
cld
in
lock
cmp
call
cmp
cmp
mov
and
mov
ds
bound
pop
loop
sub
aaa
in
js
repnz
aas
mov
lret
mov
js
add
adc
xor
or
fs
ja
jge
lods
xor
xor
jbe
lcall
adc
xor
dec
push
mov
xor
xor
sbb
pop
xlat
fisttpl
nop
and
xlat
adc
xor
xor
xchg
adc
pop
dec
sbb
hlt
dec
push
imul
add
sbb
repnz
std
mov
add
xor
xor
xor
shlb
es
adc
clc
fdivs
adc
push
adc
xorl
mov
add
sbb
cmp
fwait
pushf
or
mov
mov
add
add
divb
adc
fbstp
shll
jbe,pt
pop
mov
mov
nop
imul
pop
test
xchg
pop
addl
adc
push
or
aaa
jge
mov
imul
aaa
sub
mov
cs
jb
sbb
cmp
cmp
mov
cmp
repz
cmp
sub
pushf
cmp
lret
cmp
popf
cmp
out
clc
sub
sbb
xor
pop
cmp
cmp
push
mov
adc
stos
cmp
pop
jmp
inc
push
mov
xchg
ds
and
mov
in
pop
data16
sbb
cmc
aas
add
add
dec
gs
clc
add
pop
mov
xor
xor
orb
fcmovnu
lock
sahf
call
mov
xor
xor
xor
out
pop
gs
jbe
xor
xor
mov
les
aad
xor
jp
inc
push
sar
inc
push
dec
xor
ret
push
adc
mov
mov
mov
sub
mov
add
push
adc
test
cmpb
in
add
ret
cmp
inc
or
ds
lcall
cmpsl
shlb
inc
out
mov
mov
shll
and
cs
inc
in
outsl
xor
out
sbb
xor
inc
jp
xchg
xor
ret
add
shlb
cmp
repnz
lahf
xor
pop
xchg
jg
cmp
cmp
cmp
cmp
dec
mov
pop
cmp
into
aas
gs
dec
xchg
aaa
ret
xchg
ljmp
clc
mov
xor
xor
hlt
ret
outsl
jg
out
add
mov
xor
inc
xor
shll
shll
push
pushl
jg
sbb
adc
xor
or
add
jbe
sub
sarb
sbb
loop
and
rclb
out
xor
lret
ss
mov
push
ss
ss
mov
pop
popa
inc
jle
xchg
ss
mov
jns
xorb
adc
push
mov
xchg
adc
bound
mov
lcall
test
mov
jge
mov
dec
cmp
cmp
or
popa
xchg
stos
fmuls
repz
mov
cmp
cmp
adc
cmp
cmp
imul
cmp
int3
cmp
cmp
xor
mov
cmp
adc
nop
cmp
stos
lock
lods
add
dec
mov
or
push
repz
cmp
out
push
ljmp
test
cmp
mov
testl
pop
ds
ds
sahf
aas
xchg
aas
leave
test
pop
test
aas
cmp
xor
int
sbb
stos
sbb
adc
cmc
xor
xor
pusha
sti
aaa
cld
push
divb
mov
push
shlb
xor
jo
fidivl
lret
bound
cmp
cmp
std
cmp
cmp
and
pop
ds
cmp
adc
cmp
cmp
cmp
cmp
mov
pop
popa
clc
xchg
cmp
cmp
cmp
fdivrs
mov
pop
mov
cmp
mov
pusha
lea
cld
bound
das
clc
cmp
call
pusha
sbb
mov
cmp
cmp
cmp
cmp
sbb
xchg
fcmovb
fwait
add
ds
pusha
cmp
fnstcw
jne
mov
aas
hlt
lock
mov
popa
xor
xchg
iret
cmp
xor
dec
mov
xor
rcrl
iret
xor
ljmp
or
clc
pop
rolb
repz
cmp
ss
aad
pop
out
dec
sub
popa
and
incl
add
loope
sub
cmp
loopne
mov
cmp
test
cmp
mov
cmpb
mov
arpl
dec
inc
negb
mov
push
jecxz
push
add
rclb
xor
xchg
xor
xor
xor
adc
xor
mov
inc
loop
and
or
xor
mov
mov
dec
adc
fildl
mov
mov
roll
aaa
xchg
aaa
pusha
aaa
mov
stos
cmp
mov
cmp
incl
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
incl
inc
adc
or
ret
add
push
sub
add
shrb
fstl
in
push
fists
jl
mov
cmp
inc
cmp
cmp
cmp
and
xor
ret
cmp
pusha
fwait
cmp
mov
fcoml
adc
add
mov
mov
jecxz
clc
mov
dec
ds
adc
xchg
outsl
mov
aaa
jl
ds
aas
sbb
add
add
sub
xor
andl
int
lds
loopne
out
xor
xor
inc
inc
jp
mov
es
in
aad
cwtl
xor
cs
pushl
push
push
lea
pusha
mov
add
adc
push
mov
jo
jne
cwtl
cmp
cmp
cmp
push
addl
pusha
test
fsubp
push
ds
aas
cmpsl
aas
test
aas
pop
loope
and
inc
inc
hlt
xor
test
int3
out
lret
xor
xor
xor
inc
jno
jo
test
adc
xor
or
xor
xor
xor
xor
loopne
cmpb
inc
pushl
pusha
adc
in
cmc
mov
shlb
aaa
call
xor
mov
ss
pop
movsl
mov
and
add
inc
and
in
out
jb
and
insb
and
mov
movsb
mov
in
fmull
addr16
and
push
loopne
mov
push
inc
and
add
xor
pop
xor
xor
test
lret
incl
push
xor
xor
cmp
xor
inc
lcall
pop
ss
aaa
jge
test
les
sbb
jmp
pop
stos
cmp
cmp
data16
and
jecxz
filds
jl
cmp
loop
or
inc
loopne
pusha
fwait
aad
xor
push
jmp
cli
aas
xor
push
loop
insl
fcoml
mov
xor
out
ss
faddl
lock
mov
xor
dec
xor
add
add
cmp
push
inc
and
or
xor
cmp
xchg
jle
xor
xor
xor
xor
cmp
and
xor
xor
xor
mov
xor
outsb
jg
js
cld
mov
xor
xor
clc
outsl
fistpl
ss
mov
repnz
addr16
xor
cmpsl
xor
or
scas
das
sub
mov
xor
sub
lods
gs
xor
xor
xor
xor
xor
xor
adc
aaa
cld
jmp
xor
xor
shll
xor
cmp
xor
xor
sbb
lahf
xor
jl
jo
jnp
jbe
mov
imul
xor
mov
mov
adc
ret
adc
add
xor
xor
fcomip
mov
adc
inc
ret
daa
xor
loopne
push
cld
xor
adc
fwait
cmpsb
outsb
xchg
insl
lcall
pop
xchg
cmpsb
aaa
add
add
cmp
adc
cmp
loop
fld
mov
pushf
add
cmp
cmp
cmp
jl
ljmp
push
dec
cmp
ds
ds
shl
push
stos
lock
add
lock
sahf
dec
xor
or
mov
decl
in
push
jno
add
sbb
nop
xor
inc
xor
xor
pusha
mov
aaa
sub
leave
aaa
pop
cmp
shll
mov
add
push
cmp
aas
into
lock
jg
lcall
add
fdivs
jmp
xchg
cmp
xchg
xor
cld
fisttps
xor
xor
xor
xor
add
xchg
xor
jae
push
add
out
pop
mov
dec
aaa
lret
aaa
lds
loopne
lcall
cmp
jg
cmp
cmp
jl
pop
sarl
faddl
or
cmp
jne
call
or
and
int
xor
xor
popa
aad
fistpl
push
xor
xor
xor
and
add
lods
aaa
icebp
jo
shrb
xchg
cmp
jne
adc
sti
cmp
mov
enter
in
jo
sbbb
sbb
xor
pop
dec
mov
aaa
fs
mov
mov
in
mov
nop
adc
mov
xor
pop
cmp
fidivrs
sub
cmpsb
sbb
cmp
cmp
lock
inc
cmp
add
cmp
stos
shrb
cmp
cmp
cmp
mov
cmp
scas
push
dec
das
out
cmp
cmp
cmp
mov
mov
sbb
inc
push
outsl
cli
or
pop
outsl
cmp
cltd
ds
faddl
aas
icebp
aas
push
inc
outsb
cld
cmp
js
aas
loopne
sahf
add
or
push
mov
adc
loop
xor
nop
aaa
sub
incl
xchg
add
xor
jl
loopne
or
xor
add
clc
xor
hlt
mov
push
ljmp
lock
popf
dec
jl
lock
xor
lock
in
dec
mov
cli
ds
mov
out
aas
pop
lock
std
sub
mov
aas
pop
aas
sahf
adc
mov
jnp
jle
jo
sub
aas
lahf
aas
push
adc
mov
jl
and
lock
pop
std
push
das
cmp
push
rolb
cmpsl
xor
mov
ljmp
and
addr16
mov
scas
xor
insb
es
xor
cmpl
xor
dec
lods
fimull
fcoml
mov
xor
lock
mov
add
add
je
rcr
rolb
jo
cmpb
aam
hlt
jl
and
lock
adcb
lret
fwait
xor
call
xchg
dec
mov
inc
mov
add
add
add
xor
pop
subb
adc
outsl
push
ljmp
aam
sbb
sti
or
addr16
stos
push
js
mov
ss
jb
mov
adc
aam
pop
in
pop
in
lcall
mov
aaa
push
negl
or
out
aaa
adc
out
sbb
fbstp
and
xlat
sub
std
incl
loopne
aaa
xor
or
mov
pop
aaa
add
add
faddl
jo
mov
mov
das
loopne
aaa
fadds
cli
jg
ud0
jb
fdivrs
add
and
sahf
mov
clc
sahf
xor
xor
test
in
sahf
pop
hlt
cmp
sbb
push
and
iret
xchg
insl
fstpl
jle
loope
and
stc
jnp,pt
add
mov
and
pop
insb
sbb
ret
sbbb
ss
pop
cmp
int
push
xor
xchg
leave
and
icebp
mov
mov
push
int3
mov
test
cli
or
stos
insl
dec
stc
xchg
pop
fdivs
mov
out
nop
mov
call
rcr
gs
pop
lods
and
imul
clc
stos
fidivs
imul
sarb
sbb
enter
jg
sub
jmp
add
sub
rolb
fildll
fidivrs
es
lds
sbb
std
adc
xchg
mov
scas
insb
pop
mov
mov
popw
add
mov
icebp
and
dec
out
jg
mov
pushf
jge
stc
mov
loope
dec
mov
mov
pop
or
mov
pop
xchg
and
shrb
xor
adc
ljmp
pushf
and
add
sti
adc
cwtl
fildll
ljmp
inc
inc
shlb
repnz
inc
cmp
popf
cmp
jae
addb
das
nop
push
cmp
fldl
mov
loop
ljmp
mov
bnd
cwtl
loope
repz
inc
xchg
pop
add
lods
inc
push
cmpb
add
jns
aam
and
int
addr16
mov
test
inc
mov
aaa
xchg
lcall
or
inc
sbb
or
int
pop
scas
clc
fldt
fsubrp
pop
and
and
lcall
xchg
les
mov
adc
lea
cld
call
mov
jns
push
test
sbb
in
xchg
pop
rol
sub
data16
push
sub
or
loopne
or
fbstp
roll
mov
add
aad
jl
mov
push
and
cld
mov
and
mov
push
in
xor
push
push
jne
add
aaa
add
add
push
sti
rcrb
mov
decl
pop
gs
sahf
mov
jae
dec
decl
dec
mov
xor
sub
push
mov
inc
lret
push
or
rep
daa
pop
mov
add
popf
jge
pop
mov
sbb
pop
xchg
push
xorb
sbb
ljmp
adc
inc
ljmp
jg
xor
stos
or
inc
ud0
out
mov
sarb
fsubl
andb
fs
ja
fldenv
mov
jo
adc
icebp
xor
dec
inc
dec
inc
pop
inc
add
lret
jl
ret
ret
push
xchg
cld
lahf
pushl
pop
jne
inc
js
test
roll
sbb
cmpsl
arpl
and
mov
cmc
jmp
mov
jmp
popa
xor
cmp
imul
xor
mov
fisubs
sbb
push
dec
adc
out
mov
fwait
movb
mov
xor
int
push
jmp
pop
stos
pop
out
or
pop
add
jle
es
inc
mov
aas
shlb
es
pusha
fdivrp
and
sahf
repnz
in
mov
push
jbe
pop
lcall
test
aaa
xchg
insb
mov
aaa
cld
dec
pop
sub
ja
xlat
mov
or
push
fadds
and
cwtl
fsin
pushl
fucom
cld
and
popl
faddl
jb
mov
fsubl
pop
jb
lcall
adc
inc
inc
xchg
xchg
pop
into
pop
jae
or
loope
jae,pt
in
insb
mov
lcall
lcall
fstps
lcall
or
mov
int3
sub
push
incl
cs
lods
sahf
mov
je
loop
pop
addr16
cmpsl
mov
fsqrt
negl
ljmp
pop
xchg
pop
sbb
inc
cmpsb
popf
shlb
sbb
stos
dec
int
dec
pop
sbb
call
cmp
and
lahf
jmp
ret
pop
cmpsb
int3
mov
insl
sbb
mov
lret
imul
ja
fsubl
or
cmc
ss
daa
rclb
xor
jecxz
icebp
jbe
and
aaa
rol
xor
sub
xor
ljmp
inc
lcall
cmp
inc
shr
scas
push
sbb
stos
sbb
and
incl
cld
mov
add
push
iret
out
mov
divl
fisttpll
test
jmp
and
into
ret
popf
testb
lret
dec
lcall
pop
pop
in
hlt
xchg
jge
incl
cld
movups
inc
xor
and
bound
mov
idivl
call
pusha
jmp
gs
sti
push
and
icebp
push
negb
call
jns
dec
in
or
das
clc
ljmp
in
adcb
into
mov
hlt
lret
pusha
testl
lcall
add
sti
ds
hlt
test
out
nop
sbb
push
lret
loope
scas
loop
lahf
xor
popl
decl
shrl
out
push
xchg
inc
add
lock
inc
sahf
nop
fimuls
out
jge
stos
stos
cmp
lcall
das
push
xchg
sub
dec
pop
addr16
fcoms
fs
sbb
lcall
in
push
stos
mov
and
dec
sbb
pop
or
insb
mov
dec
push
cltd
fstl
loope
inc
aad
push
push
out
jmp
pushaw
xchg
inc
test
xchg
out
xor
fs
call
mov
js
inc
mov
das
dec
std
repnz
fiaddl
dec
loope
into
cmp
stos
jg
pushl
testb
jne
popf
dec
idivb
sub
cmp
jns
dec
ljmp
sub
fisubl
inc
fimuls
cmp
clc
call
inc
in
add
lahf
mov
add
daa
aaa
jp
xchg
dec
and
and
xor
call
cmpl
xchg
test
adc
sub
mov
push
xchg
fldt
jmp
pop
es
pop
cmc
pushl
popf
push
add
xchg
jecxz
xor
je
das
popf
cmpsb
sbb
jp
jno
mov
shll
push
insb
pop
iret
cmpsb
inc
mov
imul
push
pop
cmp
lcall
jp
leave
out
insl
or
push
test
mov
repnz
xchg
dec
std
cmp
mov
push
fstpl
or
mov
and
cmp
xchg
and
inc
inc
push
dec
or
adc
mov
es
jmp
lds
testb
in
add
mov
stos
aas
std
cwtl
lret
daa
scas
push
xor
add
lcall
pop
mov
pusha
shll
shll
and
out
and
jg
fs
mov
push
adc
mov
adc
mov
sbb
inc
ljmp
and
andl
lods
jl
xchg
push
ret
cmpsb
ljmp
sbb
jle
adc
jg
lahf
xchg
xor
test
and
mov
mov
hlt
test
movsl
leavew
int3
aas
inc
and
cli
imul
sbb
repz
pop
js
xchg
pop
mov
cmpsb
xor
xchg
imul
test
xchg
es
push
dec
cmpsl
mov
ljmp
test
adc
inc
inc
inc
lock
jle
push
cmc
cli
pushf
push
mov
xchg
pop
std
call
lret
out
shl
sbb
cld
shlb
pusha
imul
sbb
jbe
mov
decl
ret
nop
popf
push
inc
xchg
test
cmp
daa
mov
adc
xor
pop
movsl
ror
push
lcall
out
mov
outsb
repz
fildl
pop
or
cmp
mov
and
ljmp
mov
mov
or
std
sbb
push
fcmovnb
sbb
and
scas
dec
mov
dec
cwtl
imul
sub
ljmp
mov
in
out
scas
nop
jmp
clc
mov
repz
hlt
or
test
out
scas
dec
into
adc
dec
xchg
mov
fucomip
out
add
test
pop
xor
jl,pn
ret
lret
jne
pop
adc
xor
pushl
in
cmp
jle
mov
repz
out
xchg
insb
cld
inc
pop
jo
out
or
ffree
jo
test
xor
call
out
inc
cmp
mov
lock
mov
pop
into
xor
inc
xchg
xchg
cmpsb
add
aam
inc
xor
add
decl
xor
or
adc
jmp
adc
xlat
call
push
in
clc
rolb
int3
and
fcomip
sub
lret
sahf
and
out
out
sbb
xorb
subl
sahf
or
xchg
jo
cmp
js
mov
pop
popf
jg
decl
mov
mov
jl
ret
ljmp
iret
stos
jmp
inc
mov
subl
jg
repz
jbe
cli
dec
int
dec
mov
popa
fildll
xchg
js
jg
repnz
rclb
pushl
pop
jne
shrl
arpl
jg
dec
pop
jp
mull
xor
roll
scas
jno
mov
outsl
pushaw
aas
lret
gs
inc
das
dec
jns
mov
push
mov
dec
mov
cmp
arpl
mov
ljmp
lea
sub
jb
or
fisubs
jp
mov
test
mov
xor
ljmp
sbb
sbb
sub
jge
add
repnz
inc
negb
ret
out
cmc
shrb
jge
stos
inc
inc
mov
scas
fistl
sahf
fisubrs
popf
pop
outsb
in
stos
push
xor
ljmp
mov
sbb
imul
xor
cmc
stos
mov
stos
push
cmpsl
arpl
mov
mov
xor
jecxz
xchg
stos
mov
loopne
xchg
adc
mov
pop
nop
cmp
cmp
pusha
add
and
sub
inc
push
ljmp
inc
lcall
scas
in
cmp
pop
and
in
mov
loope
pop
mov
lds
xor
cli
push
pop
imul
jae
or
inc
mov
lret
fsubs
jle
mov
xor
dec
jge
push
repz
inc
xor
jmp
fucom
test
jae
mov
mov
lahf
out
mov
sbb
jnp
rcl
movsb
lcall
pop
gs
arpl
shlb
decl
mov
ja
hlt
cwtl
or
stos
xor
cmc
into
mov
outsb
ljmp
mov
sahf
xchg
jmp
bnd
cmpb
xchg
int3
pop
mov
push
mov
cli
xchg
daa
jne
lock
iret
in
mov
lret
adc
push
pop
fs
lds
loope
inc
jmp
adc
mov
jmp
mov
stos
sub
decl
lock
in
jp
or
dec
xorb
lea
sbb
rcr
dec
sub
scas
sbb
mov
popl
sbb
mov
mov
jne
and
cmpsb
outsb
pop
push
cmp
popf
add
jns
outsl
xchg
hlt
pushl
sub
jecxz
mov
mov
std
scas
cmp
or
outsl
js
pop
pop
aaa
sbb
mov
jp
jae
mov
aaa
fld
xchg
inc
jl
mov
add
mov
lcall
andb
pop
cld
popf
mov
mov
inc
rcrl
xor
inc
adc
fimull
call
xor
cmp
sub
fcompl
inc
lret
xchg
pop
cltd
decl
sti
cmp
dec
jg
mov
xchg
inc
cmp
call
and
pop
push
aas
inc
jo
addr16
mov
dec
out
sbb
and
movsb
xor
mov
pushl
clc
movsb
out
lods
dec
addl
inc
aad
ret
mov
ljmp
adc
fs
das
push
fildll
faddp
mov
loope
jnp
js
jle
leave
sar
in
in
push
ljmp
outsb
cmp
mov
adcb
xchg
sub
inc
pop
cltd
mov
mov
test
cmp
mov
aas
out
add
dec
fadds
xchg
dec
mov
and
xchg
shlb
in
sahf
push
fs
je
and
out
jo
pop
fcom
cli
out
mov
call
inc
pop
adc
ja
aam
out
pusha
bound
rorb
mov
push
dec
xchg
jb
and
movsl
mov
call
jbe
loope
mov
xchg
xlat
sbb
sub
or
lret
push
dec
push
mov
outsl
push
outsl
sbbl
push
and
outsl
adc
add
fimuls
pop
lret
inc
ficoms
push
imul
xchg
mov
call
negl
xchg
bnd
push
push
xchg
in
rol
xchg
pop
cmp
xor
ljmp
ds
pop
xor
ret
and
sub
cltd
in
pop
in
inc
xor
mov
ljmp
adc
ret
mov
pop
jo
mov
jmp
sar
mov
cmc
pop
stos
mov
inc
aaa
std
dec
lea
ja
inc
mov
in
ret
je
cld
inc
mov
lcall
ljmp
jns
ja
adc
push
sub
icebp
popf
mov
incl
gs
das
repnz
cmp
outsl
mov
or
ljmp
leave
cltd
aaa
repnz
pushl
loop
or
mov
popf
int3
cmp
mov
test
int
mov
outsb
sub
cmp
jl
loope
mov
test
mov
xor
sar
ljmp
xor
pop
and
andb
in
sub
rcrl
les
lds
mov
enter
sub
dec
movl
jecxz
cmp
insl
fdivrs
fwait
and
rclb
or
sti
testl
fildll
pusha
inc
adc
fs
pop
pop
adc
inc
or
shlb
stos
inc
jmp
sahf
jl
pushw
out
mov
adc
and
sbb
pop
mov
xor
mov
push
cmp
sbb
and
stc
cs
mov
sub
rcll
push
dec
mov
mov
idiv
pushl
fdivrs
leave
mov
outsl
dec
clc
insl
and
mov
sub
push
lock
and
ret
jnp
cwtl
pop
push
lock
mov
xor
sub
outsb
mov
ret
lcall
fs
jge
mov
add
mov
icebp
and
in
dec
enter
enter
lods
jmp
idivl
mov
jne
imull
fisubl
or
mov
in
incl
or
xchg
dec
test
or
inc
dec
xor
ljmp
sbb
js
push
test
and
push
cmc
xchg
xor
into
bound
testl
adc
add
xlat
and
incl
push
ljmp
in
jnp
aad
or
jg
repnz
add
cmp
cmp
mov
push
mov
push
push
lea
adc
ret
mov
xchg
add
dec
rol
mov
ficompl
pop
in
test
xlat
adc
loop
jmp
mov
stc
fcomps
adc
repnz
movsl
inc
mov
stos
outsb
add
call
inc
imul
jp
fdivrl
popf
leave
outsb
mov
in
dec
dec
mov
or
inc
jecxz
and
stos
insl
into
rcl
notb
push
cli
testb
xor
sub
aaa
sbb
lahf
pushl
leave
lods
mov
inc
pusha
pop
jnp
hlt
fwait
xchg
nop
std
sbb
jecxz
clc
mov
inc
adc
mov
sbb
popf
fwait
dec
dec
popf
outsb
lods
sub
popf
bound
jmp
jmp
add
xlat
xchg
push
sbbl
jno
sub
bound
push
lea
test
mov
dec
push
cmp
adc
lcall
add
es
sbb
xor
ljmp
imul
dec
sub
jecxz
jno
out
mov
push
rcll
inc
stc
xor
test
stos
jno
lds
sbb
fdivs
outsl
inc
mov
popa
into
mov
movsl
test
addr16
and
add
pop
cmpsb
jo
cmpsb
pop
sbb
daa
bound
push
std
inc
decl
clc
movsl
sub
pop
and
stos
xor
sahf
lcall
imul
xchg
mov
dec
sub
shrl
pop
xor
add
loope
incl
lcall
aaa
lahf
sub
adc
push
mov
cmc
pop
jnp
jb
xor
fdivrl
mov
and
outsl
jl
ret
cmp
xlat
and
sbb
in
mov
into
roll
fabs
mov
and
fdivs
pushl
sbbb
cmp
lock
call
negb
sbb
sub
shrl
aad
sti
mov
aam
sbb
adc
xchg
mov
xchg
imul
or
cltd
scas
sahf
gs
xchg
mov
fwait
loope
cmc
arpl
sahf
sbb
pop
aad
ljmp
les
inc
es
mov
jbe
shld
pop
and
clc
jg
mov
repnz
mov
hlt
in
cmovbe
and
fistl
push
hlt
sub
inc
sub
aad
sbb
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
and
push
and
add
subl
sub
mov
stos
andb
push
adc
cmp
rolb
push
inc
pop
xchg
aad
push
insb
cmp
outsb
mov
push
jns
gs
push
inc
gs
and
je
dec
fcoms
add
push
outsl
outsb
dec
shlb
mov
mov
push
jb
gs
dec
sub
mov
push
gs
cs
fisubl
mov
jne
mov
pop
sti
xorb
inc
push
inc
je
and
jne
push
jns
fs
inc
sbb
insb
dec
outsl
jbe
insl
outsl
ja
cmp
cmp
xor
inc
fs
inc
mov
inc
mov
adcb
xor
inc
js
push
lds
lods
jbe
jae
insl
je
sbb
sub
adc
cmpsb
jae
sbb
add
mov
sub
jo
push
xor
pop
mov
jp
mov
andb
addr16
inc
fdivp
mov
xor
imul
sbb
or
bound
push
outsl
and
adc
xchg
jno
mov
rorl
sbb
dec
push
add
sub
cltd
ja
adc
or
sub
inc
xchg
mov
or
adc
xor
adc
pop
cmpsl
push
or
or
or
inc
inc
aas
mov
or
or
ret
jne
adc
cmc
add
aad
notl
mov
inc
loope
mov
xchg
jns
add
mull
jnp
sub
adc
push
push
sub
or
movsl
aaa
dec
push
adcl
dec
and
or
test
test
push
outsl
fildll
iret
mov
test
dec
inc
mov
mov
and
add
cmc
sub
mov
adc
mov
adc
imul
lea
add
lea
das
fnsave
mov
sub
adc
mov
mov
sub
in
add
jne
and
xchg
scas
test
push
xor
test
xor
and
cltd
mov
ret
shrb
test
dec
push
movsl
add
lahf
in
inc
adc
test
cmp
jmp
xor
xadd
mov
lret
sub
add
push
mov
and
or
adc
pop
add
jg
nop
mov
inc
cmpsl
mov
aas
xor
or
sub
add
add
inc
and
inc
insb
popa
add
insb
insb
xor
or
stos
xchg
add
add
add
inc
rorb
cmp
and
xor
add
outsl
jno
add
and
push
test
stos
or
inc
test
push
stos
inc
scas
aad
mov
pop
add
mov
adc
subl
inc
mov
jnp
cmpsb
adc
sbbl
sub
xchg
inc
shrl
inc
sbb
push
roll
sub
xor
cmp
inc
ret
or
cmp
xor
lea
aam
movsb
in
or
lahf
and
adc
bound
inc
adc
sub
pop
push
push
mov
imul
or
test
adc
mov
add
or
mov
imul
mov
xchg
mov
adc
lcall
rorl
movsl
mov
les
inc
mov
sub
lahf
roll
sub
dec
add
test
push
xor
push
push
in
add
cmp
lea
fwait
rcll
xor
and
add
adc
add
and
mov
mov
lods
adc
in
inc
andb
add
test
cmp
mov
mov
test
test
and
adc
test
incl
adc
and
sub
and
sub
addb
pop
sbb
inc
mov
pop
mov
movl
inc
add
stc
gs
adc
push
and
lods
cmpsl
adcb
and
ret
bound
ret
push
and
sbbl
mov
adc
add
sub
adc
xlat
add
mov
adc
inc
and
adc
inc
adc
mov
mov
push
lahf
push
xor
adc
dec
add
pop
push
mov
test
inc
or
shl
or
mov
sub
or
and
push
or
or
inc
and
xchg
ljmp
inc
sub
sub
adc
loope
inc
add
push
sbb
or
inc
sub
movsb
add
push
or
setae
and
and
and
mov
add
addb
sub
dec
add
test
adc
add
and
dec
pop
add
ja
sub
adcl
nop
outsl
adc
pusha
add
dec
test
and
fcomi
inc
pop
jne
stc
aad
and
xor
dec
lea
bound
lahf
frstor
xor
push
jne
sbb
sub
xchg
inc
add
roll
or
adc
push
sub
dec
mov
pop
pop
imul
push
xor
xor
andb
enter
mov
pop
outsl
lods
sbbb
and
or
inc
or
add
mov
sub
addr16
or
inc
sub
jecxz
mov
and
or
add
or
andb
push
ret
insb
movsl
test
ret
add
pop
shrb
or
sbb
rorb
adc
and
mov
orl
add
mov
xchg
mov
pop
or
add
mov
mov
dec
arpl
push
sub
ss
push
stos
iret
dec
test
push
inc
mov
ret
addb
dec
aad
sub
inc
movsb
test
xchg
icebp
push
xorl
arpl
or
mov
sbb
and
sub
add
dec
add
andb
and
xor
add
inc
and
adc
sub
mov
or
movsl
nop
add
sub
jae
push
mov
push
add
or
pop
mov
inc
add
lea
mov
das
sbb
lea
sbb
repz
add
add
add
sbb
add
lcall
movaps
and
add
add
mov
adc
mov
lcall
adc
xor
push
mov
sub
mov
add
push
inc
push
dec
add
add
fwait
in
mov
orl
add
pop
daa
incb
imul
inc
inc
pop
and
int
in
insl
ucomiss
cmp
lods
lods
jge
xchg
adc
sbb
add
or
shrb
add
add
nop
bound
push
add
and
dec
mov
add
je
jbe
inc
push
cmpsb
mov
int
mov
inc
outsb
dec
push
xor
cmp
nop
mov
add
shll
rorb
loope
dec
lcall
push
lock
scas
cmpsb
xor
dec
adc
mov
inc
add
push
xchg
and
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
xchg
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
xchg
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
in
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
cmpsb
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
test
add
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
add
add
add
add
add
and
add
in
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
add
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
loopne
cmp
loop
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
shrb
add
in
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
mov
in
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
xorb
add
in
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
pusha
xor
add
in
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
inc
cmp
loop
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
and
cmp
loop
lock
icebp
in
sahf
ret
cs
inc
pop
jmp
imul
outsl
jae
loop
cmp
pop
out
test
add
mov
pop
insb
out
dec
fadd
in
sbbb
imul
push
xor
xchg
leave
repnz
cltd
aad
dec
addr16
sahf
inc
pop
fisubrs
inc
test
xor
push
xchg
pop
fmuls
mov
lds
mov
dec
in
loope
int3
aad
rorb
pop
in
sar
fwait
sbb
sbb
shrl
cld
iret
mov
sub
or
insb
and
es
cmp
push
jle
or
nop
xchg
rcl
push
insb
pop
mov
pop
and
mov
xchg
fcomps
and
jmp
pop
or
out
dec
cwtl
xchg
outsl
sub
jge
push
loopne
jecxz
dec
dec
mov
mov
out
xchg
and
shrb
or
push
jecxz
sub
pop
mov
cwtl
and
xchg
xor
mov
adc
pusha
pop
mov
lds
jae
mov
cmpsl
xor
mov
frstor
sbb
mov
or
mov
dec
mov
inc
push
addb
std
xchg
int
cmp
fsubrs
jne
getsec
push
mov
sub
scas
orl
daa
and
pop
and
lcall
xchg
les
scas
adc
loop
clc
fmull
pop
cmp
mov
jns
push
test
jecxz
in
mov
cld
data16
push
mov
pop
xor
xchg
jbe
jae
sub
repnz
jl
mov
ret
mov
jne
roll
xlat
rorl
push
jne
sar
add
push
sti
shlb
gs
sahf
mov
ja
addr16
rorb
out
xchg
dec
pop
hlt
cmp
cmp
cli
sub
sub
scas
iret
mov
jp
pop
or
std
dec
inc
mov
popa
repz
mov
inc
or
test
pop
cmp
push
pop
aas
scas
push
aas
mov
pop
sub
sbb
cmpb
xor
pushf
adc
or
icebp
sbb
add
inc
mov
inc
mov
int3
mov
aam
jecxz
sahf
sbbl
cmpsb
fldt
jmpw
jp
fisubl
xchg
andb
insl
pop
mull
jb
mov
enter
mov
stos
dec
lds
lahf
inc
mov
xchg
mov
imul
es
sbb
in
ljmp
fcoml
cmp
in
push
out
pause
mov
lods
inc
add
lods
inc
add
add
shrb
add
lods
inc
add
add
out
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
add
add
lods
inc
add
add
add
inc
add
add
add
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
arpl
xor
add
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
jb
outsb
jae
popa
je
dec
popa
insl
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
