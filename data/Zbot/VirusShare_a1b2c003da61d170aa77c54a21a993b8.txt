push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
mov
mov
and
clc
fistpll
daa
pushf
sarl
sahf
cli
push
adc
call
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
sub
mov
mov
pusha
call
add
into
jbe
je
movsb
jae
mov
pop
cmp
xor
std
out
push
mov
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
mov
mov
push
mov
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
add
and
stos
dec
test
ret
rclb
pop
mov
int
mov
sahf
sbb
jae
and
xor
movsl
or
add
adc
ror
fidivs
mov
loop
pop
cmpsb
jns
lods
cmpsb
xor
cmp
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
sbb
bound
push
outsb
cmc
jle
cmp
mov
and
out
pop
cmp
notl
scas
popf
imul
mov
mov
jae
mov
mov
js
xchg
adc
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
xor
add
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
sub
cmp
jne
mov
pop
ret
add
add
rolb
and
movb
or
loopne
scas
ds
fldcw
ds
xor
int
xchg
std
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
jmp
add
pop
and
inc
repz
sub
dec
aam
das
sarb
aas
fildl
lods
adc
pop
mov
into
xor
movsb
testl
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
ret
out
jle
jno
loopne
mov
adc
mov
arpl
iret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
imul
inc
push
pop
clc
sbb
sub
lods
mov
mov
shl
lea
mov
.byte
inc
.byte
inc
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
add
add
andb
add
and
add
add
les
add
cwtl
and
add
and
add
add
xchg
and
add
add
add
and
add
and
add
and
add
and
add
add
and
add
add
inc
and
add
add
lock
add
and
add
add
add
add
test
add
into
and
add
add
add
add
hlt
and
add
and
add
and
add
add
add
test
add
loopne
add
nop
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
add
add
andb
add
and
add
add
les
add
cwtl
and
add
and
add
add
xchg
and
add
add
add
and
add
and
add
and
add
and
add
add
and
add
add
inc
and
add
add
lock
add
and
add
add
add
add
test
add
into
and
add
add
add
add
push
add
gs
jb
push
push
add
add
gs
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
gs
jae
dec
jne
gs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
jae
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
icebp
add
imul
jb
je
arpl
add
add
inc
gs
outsl
imul
jbe
jae
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
das
add
outsb
fs
je
insl
push
add
insb
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
imul
push
add
mov
push
insb
gs
aam
inc
gs
jb
jbe
push
jns
gs
add
add
popa
jo
imul
dec
outsl
popa
fs
imul
add
dec
add
insb
outsb
inc
add
enter
jae
gs
popa
insb
jne
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
inc
push
push
push
dec
push
cs
insb
add
imul
jae
inc
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jp
jp
stos
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
leave
lret
lret
into
rcl
in
rcl
shl
rcl
shl
int
int
leave
enter
leave
out
mov
mov
mov
mov
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
leave
not
rcl
cld
fcom
fdivr
fcom
xlat
fcom
aad
aad
ror
sar
int
int
aad
rcl
iret
inc
ret
std
mov
mov
scas
iret
movsb
mov
xchg
cs
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
lods
sbb
mov
jnp
mov
sar
mov
leave
lret
leave
call
rcl
aam
aam
fcomp
call
xlat
call
aam
dec
into
int
int
int
aad
dec
into
into
inc
rol
mov
mov
lods
std
test
cmpsl
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
ret
leave
dec
int3
into
call
rcl
call
xlat
fdivr
fcom
call
dec
into
into
dec
lret
into
int3
int3
inc
mov
mov
mov
cmpsb
test
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
push
push
bound
pop
fs
sbb
movntps
sbb
xor
ss
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
leave
call
rcl
call
aad
call
aad
call
rcl
dec
leave
enter
inc
mov
mov
scas
lods
scas
jmp
pushf
sahf
xchg
xchg
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jg
jge
jge
jge
jno
jno
arpl
mov
cmp
cmp
inc
inc
inc
mov
outsb
outsl
outsb
nop
popa
popa
bound
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
lret
lret
enter
mov
mov
ljmp
mov
lcall
xchg
xchg
cwtl
xchg
cwtl
cltd
lcall
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
jnp
mov
xchg
xchg
xchg
incb
jp
idivb
jmp
outsl
outsl
out
push
fdivs
jae
jge
jle
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
lcall
nop
incl
addb
xchg
xchg
xchg
sahf
mov
mov
mov
js
jns
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
cltd
sahf
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
addb
xchg
push
cmp
ss
jg
cmp
movsl
mov
test
sti
lods
lods
lods
lods
lods
lods
test
stos
std
movsb
movsl
movsl
std
lcall
decl
jle
js
jns
jp
jns
xchg
cwtl
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
xchg
mov
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
imul
test
xchg
leave
cltd
fistps
fwait
fwait
stc
xchg
std
mov
incl
mov
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
cmpsl
lods
add
pop
adc
scas
call
fwait
xchg
cltd
incl
xchg
decb
xchg
sahf
pushf
popf
std
movsb
mov
mov
in
nop
in
test
push
jne
prefetchw
add
or
sub
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
decb
xchg
lcall
cmpsb
cmpsl
ljmp
test
scas
mov
xchg
test
mov
xchg
scas
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cwtl
fwait
decl
mov
call
xchg
xchg
xchg
xchg
pushf
pushf
popf
mov
test
movsl
negl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
bound
jae
mov
jge
test
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
xor
js
mov
movsb
mov
mov
mov
lods
lods
lods
mov
movsb
movsb
add
mov
add
pop
adc
mov
lcall
mov
call
xchg
xchg
call
cwtl
cwtl
fwait
cltd
lcall
mov
mov
stc
cwtl
cwtl
fwait
out
xchg
xchg
mov
xchg
aad
cwtl
lcall
xchg
cmc
nop
mov
cld
xchg
adcl
lahf
pop
test
movsl
push
cmp
inc
jl
mov
jp
mov
jae
mov
insl
ljmp
packuswb
lods
or
lods
or
mov
jg
mov
mov
lods
pushf
mov
mov
add
shlb
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
sahf
jmp
pushf
pushf
lcall
xchg
cwtl
decl
cwtl
nop
call
lcall
fwait
sahf
stc
sahf
xchg
pushf
cld
sahf
mov
xchg
push
xchg
pop
jg
xchg
dec
jns
fwait
cmp
insb
pushf
push
imul
movsl
adc
ljmp
pcmpgtd
stos
adc
lods
adc
mov
imul
adc
pushl
cmp
mov
lods
lods
scas
movsb
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
pushf
lcall
movsl
mov
jmp
xchg
xchg
decl
mov
mov
mov
xchg
ja
lcall
xchg
dec
jp
xchg
cmp
call
push
call
or
call
add
fwait
add
mov
adc
ljmp
sbb
mov
jno
mov
jo
mov
and
mov
pop
je
sarl
inc
xchg
scas
mov
scas
lods
mov
mov
movsl
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsb
movsl
ljmp
cmpsl
cmpsl
ljmp
cmpsb
test
lcall
decl
dec
jo
mov
imul
sub
mov
pop
incl
push
push
incl
add
lea
pop
call
add
cltd
add
lahf
add
cmpsb
or
mov
outsb
pushl
sub
mov
sub
inc
sub
inc
sub
dec
jg,pn
jg,pn
enter
scas
mov
mov
lret
movsl
dec
mov
movsb
movsb
add
push
push
adc
test
mov
mov
mov
test
stos
lods
lods
ljmp
mov
ljmp
mov
mov
mov
pop
incl
or
addb
incl
push
incl
add
add
xchg
add
xchg
add
fwait
add
sahf
add
mov
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
mov
mov
lahf
fwait
popf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
push
decl
push
push
incl
or
add
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
sbb
test
leave
inc
mov
into
inc
call
inc
mov
rorl
fmuls
call
dec
xchg
fimull
fmull
fsts
call
test
std
mov
mov
movsl
mov
lahf
or
add
add
add
add
dec
inc
adc
jl
lahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
decl
sbb
mov
pop
decl
push
decl
push
call
pop
jmp
add
stos
add
mov
arpl
mov
dec
call
push
cwtl
call
push
lcall
push
popf
fistps
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
test
jne
lahf
mov
add
inc
inc
adc
js
lahf
cltd
popf
jmp
lahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
movsb
call
and
xchg
and
call
arpl
xchg
sbb
popl
push
call
add
mov
add
lods
add
mov
data16
mov
xor
fldenv
fisubs
fisubs
jmp
gs
jecxz
test
out
test
call
cmpsl
call
xchg
mov
cmpsl
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
je
lcall
lcall
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
outsl
lcall
sub
cwtl
pop
callw
add
lcall
ljmp
add
mov
pushl
adc
rolb
jmp
jo
jmp
outsl
stos
jmp
jo
jmp
jae
in
jae
out
jne
out
jne
out
jb
jmp
xchg
mov
test
lcall
mov
add
add
add
add
cmp
js
mov
pushf
pushf
fwait
pushl
mov
mov
mov
mov
mov
cmpsb
lods
lcall
xor
sahf
aaa
jbe
mov
xor
lcall
call
add
movsb
add
test
pop
pushl
add
mov
sbb
fsts
jmp
jbe
ljmp
in
jg
in
cmpb
repnz
repnz
ljmp
inc
mov
test
pushf
pushf
pushf
daa
mov
lahf
mov
add
popa
add
xor
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
sar
mov
lcall
cmp
inc
jle
movsb
inc
jle
mov
sbb
xchg
add
sahf
add
movsl
add
add
scas
add
mov
data16
mov
add
shll
movsl
jmp
mov
push
sar
nop
sar
pop
push
xchg
ret
push
xchg
push
xchg
clc
mov
in
pop
clc
stos
lods
stos
mov
popf
popf
xor
popf
pushf
add
add
add
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
mov
mov
mov
mov
mov
sar
ret
ret
inc
mov
jle
lcall
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
mov
add
leave
add
mov
out
mov
out
xchg
ret
push
fwait
push
fwait
lcall
negl
cli
lahf
int3
sti
lahf
int
sti
cltd
lret
push
xchg
sar
mov
dec
mov
rcrb
nop
add
add
add
add
das
sub
outsb
push
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
mov
inc
vshufps
inc
mov
lahf
jmp
push
mov
lods
dec
xchg
movsl
sub
cltd
pop
pop
lcall
add
add
mov
popa
mov
add
enter
rorl
filds
out
mov
push
cmpsb
int
cmc
movsl
int
clc
cmpsb
iret
cld
cmpsl
iret
cli
movsl
into
cld
cmpsl
sar
cld
stos
iret
stos
iret
std
test
mov
dec
leave
int
mov
mov
lahf
lahf
mov
add
cltd
fwait
add
add
add
xor
add
sub
or
inc
bound
pop
xlat
jae
jno
mov
rol
rol
mov
inc
ret
ret
inc
enter
ret
rol
mov
test
mov
push
mov
scas
dec
test
lahf
sbb
lcall
add
lods
add
mov
fs
mov
add
int
outsl
fadds
jae
fists
jnp
out
pop
cmpsl
push
popf
lret
sti
lods
aam
cli
scas
aam
sti
scas
aam
sti
scas
sar
std
mov
std
mov
cld
mov
cld
mov
std
mov
mov
push
cmpsb
jmp
mov
call
leave
int
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
ss
outsl
mov
vpsubusb
xlat
xlat
jmp
xlat
xlat
not
rcl
std
lret
dec
lret
lret
dec
lret
lret
leave
lret
leave
mov
scas
jmp
push
mov
lods
jle,pt
mov
add
stos
add
mov
fs
mov
add
rolb
outsl
call
add
fiadds
je
ljmp
sti
scas
aad
cld
mov
fcos
cld
mov
std
mov
xlat
cld
mov
fdivr
inc
std
mov
int3
call
leave
int3
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
call
out
loop
jecxz
fucom
fdivr
fcom
std
into
iret
into
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
add
fldl
ja
in
ja
out
xor
cli
mov
loope
inc
loopne
inc
loopne
inc
inc
fdivrp
dec
loopne
std
fdivrp
dec
fdivrp
dec
fdivrp
std
lret
sti
mov
enter
into
mov
mov
xchg
adc
add
add
std
incl
std
incb
std
std
add
div
or
out
jmp
in
out
in
sub
out
in
dec
call
ljmp
jecxz
out
fcmovnu
fsubr
les
xchg
test
ja
movsl
push
jmpw
add
mov
fs
mov
add
int
outsl
fadds
jb
fiadds
js
jmp
inc
pushf
sti
mov
loop
std
lret
jecxz
std
into
in
dec
jecxz
dec
loop
std
int
dec
loop
dec
loop
call
jecxz
std
shl
shl
cli
fcos
out
mov
xlat
inc
ret
cmpsb
cmpsb
test
xchg
xchg
xchg
sbb
fwait
cltd
add
std
std
add
std
incl
idiv
testb
hlt
icebp
add
repz
out
icebp
out
pop
in
lock
cmp
in
in
pop
fsubp
loopne
lds
sti
sahf
es
push
pop
jmp
add
mov
fs
add
leave
add
rolb
jb
fiaddl
jbe
jecxz
jns
in
adc
pop
stos
cld
mov
shl
dec
in
std
shl
call
call
call
out
std
xlat
call
std
fucompp
std
fucomi
fucomi
std
iret
loopne
repz
jecxz
lret
rep
stos
test
and
xchg
cwtl
add
std
cli
add
cld
testl
hlt
div
or
aad
xor
mov
xchg
negb
add
test
pop
ljmp
add
les
addr16
add
add
faddl
jne
call
sbb
cld
loopne
cld
xlat
call
std
fucomi
fucomi
std
fucomp
fucomp
std
fucomp
fsubrp
std
fucomip
fucomip
cld
shl
push
aad
out
fdivr
rcl
sar
stos
lods
lods
lods
xchg
xchg
xchg
outsb
outsb
outsb
add
add
add
loopne
add
leave
sbb
lods
jnp
repnz
and
sahf
add
add
mov
arpl
mov
add
int
outsl
call
add
fiadds
jne
ljmp
cld
pop
shr
std
loopne
std
fucomi
fucomi
fsubr
std
in
shl
cli
shl
sti
iret
loopne
test
fdivrp
test
lret
jmp
rcr
call
fcom
sti
mov
mov
lcall
add
add
add
fcom
add
enter
rol
scas
mov
jmp
add
mov
fs
mov
add
rolb
jo
fadds
je
loop
js
jmp
ss
sti
xchg
cli
lret
cli
int3
loope
cli
clc
mov
aam
repz
sar
repnz
int3
ljmp
jmp
rcl
jmp
fnclex
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
into
lret
add
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
dec
pop
jno
rorl
jbe
ficoml
js
loope
cmp
inc
xchg
call
mov
jmp
scas
enter
scas
cli
fdivl
lock
int
rcr
loopne
aad
loope
fadd
out
loopne
jmp
jmp
popf
call
lret
lret
lods
lods
adc
cmpsl
cmpsl
cmpsb
add
ret
mov
ret
mov
lods
aam
dec
jg
pushf
sbb
cmpsl
sbb
scas
es
mov
js
mov
inc
xchg
les
stc
leave
fs
test
mov
shll
rcl
mov
int3
rcl
lret
mov
iret
shll
fcom
aam
fcmovnu
fnstenv
gs
jecxz
out
out
ljmp
sub
cmc
cmc
and
lock
fcmovnu
or
mov
int3
add
add
add
rol
mov
mov
les
insb
lock
sbbb
mov
cmpsb
sarb
mov
ret
mov
cmpsl
leave
mov
enter
int3
jp
into
iret
addr16
iret
push
rcl
rorl
fcom
inc
rcl
xor
daa
xlat
sbb
loopne
adc
in
push
loopne
jecxz
out
jmp
jmp
out
add
sti
testb
sti
add
std
std
add
std
add
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
int3
lret
daa
int3
ror
and
aad
sbb
rcll
rcl
aam
rcl
push
rcr
fadds
add
jecxz
add
in
jmp
leave
xlat
aam
std
std
incl
mov
mov
add
ret
les
mov
mov
mov
push
rol
or
mov
add
int3
lret
add
aad
add
fcom
add
aam
aad
aad
xlat
add
xlat
loopne
xlat
aam
add
loop
add
fucom
add
out
add
lock
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
ret
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
mov
aam
iret
iret
jmp
rcl
cmc
aam
aam
into
into
into
cli
lret
int
stc
lret
lret
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
jg
inc
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
into
iret
iret
call
xlat
dec
iret
iret
dec
into
into
dec
int3
lret
mov
mov
stos
stos
stos
icebp
cwtl
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
jne
gs
dec
inc
dec
cmp
sub
sub
aaa
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
lret
rcl
call
rcl
dec
lret
lret
mov
pushl
stos
test
xchg
xchg
cwtl
jmp
jno
xchg
push
adc
add
add
add
add
add
addb
test
jns
imul
pop
pop
pop
movsb
push
push
push
stos
push
outsb
insb
push
pop
pop
cmp
cmp
pop
outsl
outsl
jo
scas
scas
scas
pop
mov
mov
mov
mov
mov
rol
mov
mov
mov
jmp
pushf
fwait
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
cltd
lcall
pushf
cwtl
cltd
fcoml
addl
jmp
js
sarb
jns
jnp
jnp
jae
je
push
push
push
cmp
je
pushf
sahf
popf
mov
scas
lods
rep
scas
lods
sti
scas
lods
lods
std
test
test
popf
popf
pushf
call
test
call
mov
scas
jmp
scas
scas
leave
cmpsb
cmpsb
cmpsb
cltd
jae
je
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
xchg
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsb
outsl
jo
mov
cltd
cwtl
cwtl
cltd
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsl
cmpsl
mov
mov
mov
scas
mov
xlat
cmpsl
mov
jg
pop
pusha
pusha
or
lods
mov
movsl
mov
mov
mov
lcall
sahf
sahf
sti
sahf
mov
lcall
push
push
jo
push
push
outsl
imul
jge
subb
xchg
lock
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
lods
stos
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
movsb
test
call
xchg
xchg
lcall
cwtl
lcall
popf
pushf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
xchg
jne
notb
cmp
dec
jl
movsl
inc
jns
lods
aaa
js
scas
sub
push
insl
pushl
sbb
mov
mov
mov
mov
jle
movsl
movsl
push
popa
pop
pusha
or
mov
in
movsl
test
lcall
mov
lahf
call
decl
jp
std
xchg
jb
cld
xchg
popa
cmp
dec
jp
cmp
xchg
daa
call
lcall
push
jmp
sbb
mov
insb
pushl
push
jae
mov
pop
nop
mov
scas
scas
xchg
popf
lahf
popf
adc
add
add
pop
popa
popa
or
lods
mov
test
mov
cmpsl
ljmp
cmpsl
test
decl
imul
mov
pusha
decl
or
mov
push
decl
add
popf
add
cmpsb
or
jae
mov
das
jge
ret
xor
enter
leave
xor
xchg
inc
stos
mov
scas
mov
movsb
test
test
add
add
add
pop
or
movsb
test
test
cmpsl
jmp
mov
pushl
mov
jmp
jo
mov
pop
decl
or
xchg
push
decl
add
xchg
add
sahf
add
movsl
add
mov
insb
inc
cmp
rolb
call
inc
mov
inc
xchg
flds
call
popa
lahf
inc
cmpsl
mov
mov
movsl
movsl
daa
incb
add
add
popa
pop
popa
or
popf
mov
ljmp
mov
pushl
mov
ljmp
push
jge
pop
arpl
xchg
sbb
adc
pop
call
add
mov
add
lods
add
jne
rorl
fstps
ficompl
ficomps
jmp
pop
mov
fildll
lret
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jle
jl
pushf
xchg
cltd
jecxz
mov
mov
mov
mov
mov
mov
mov
mov
sub
insl
call
adc
xchg
add
popf
add
test
pop
ljmp
push
imul
fisubl
jmp
outsb
test
jmp
jb
in
jb
jmp
jns
call
cmpsl
mov
shll
addb
dec
dec
dec
pop
insl
outsl
insb
bound
cwtl
cwtl
pushl
mov
mov
mov
je
lcall
jne
popf
sub
lcall
add
movsl
add
stos
add
mov
gs
or
inc
xchg
jmp
js
ljmp
push
test
hlt
xchg
fldt
mov
push
fwait
cltd
cltd
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
mov
mov
jmp
sub
fwait
or
add
stos
add
mov
gs
mov
push
jbe
loopne
mov
push
xchg
push
xchg
push
cwtl
clc
cltd
lret
lcall
loope
inc
mov
lods
popa
lahf
mov
add
xor
xor
inc
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
pushl
push
xchg
stos
dec
test
mov
add
ljmp
add
add
lret
add
fisubl
cmp
jl
push
mov
into
stc
stos
iret
sti
stos
sar
std
lods
sar
std
lods
sar
stc
cmpsl
int
call
rol
stos
stos
stos
jne
sahf
sahf
or
add
add
dec
dec
push
aaa
jae
je
test
into
into
out
into
int
leave
lret
enter
leave
mov
pusha
mov
lods
inc
cmp
adc
cmpsl
add
mov
gs
add
int
outsl
fildl
call
xchg
sti
mov
cld
mov
std
mov
xlat
sti
mov
xlat
cld
mov
leave
dec
rol
scas
scas
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loope
fsubp
loopne
ffree
fcmovu
fcmovnu
xlat
out
shll
test
jae
movsl
push
popa
ljmp
add
leave
add
aad
jae
jecxz
jnp
lock
mov
cld
loopne
inc
loope
inc
inc
fdivrp
dec
loopne
dec
sti
out
mov
lret
divb
sahf
pushf
sbb
add
add
incl
std
incl
ljmp
in
in
jmp
jmp
in
xchg
mov
mov
mov
add
pushl
push
fildl
je
ljmp
sti
ret
cld
shl
std
shl
call
out
shl
xlat
out
std
fsub
shl
push
xlat
fcmovne
sar
mov
mov
add
incb
incl
std
cld
pop
aad
aad
mov
pop
mov
lahf
or
ljmp
add
les
imul
fiadds
jbe
in
and
shl
std
fldpi
fsubr
fld1
fsubr
sti
std
fsubr
std
shl
push
fdivr
aad
mov
popf
popf
das
add
add
int
int
mov
bound
ljmp
add
movl
jno
loope
js
in
xor
sti
int
stc
leave
test
hlt
xlat
bnd
out
ret
in
sar
in
shl
ljmp
ljmp
stos
das
std
incb
aam
aad
mov
jae
or
imul
sbb
lret
and
aad
test
fists
in
mov
out
in
leave
jmp
fnstsw
lret
sarl
in
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsb
les
xchg
mov
fidivrl
jle
rol
stos
mov
lahf
mov
shlb
leave
jge
lret
insl
aam
into
pop
ror
rorl
xlat
fnstcw
loopne
loopne
in
fsubl
jecxz
lock
in
in
or
std
incb
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
enter
aam
pop
sarb
or
fnstsw
or
into
int3
add
std
incb
std
incb
cltd
fwait
fwait
add
vshufpd
into
int3
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
enter
enter
sarl
scas
mov
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
into
int
std
mov
mov
test
test
gs
pop
sbb
add
add
add
add
add
add
add
add
jno
jno
push
inc
inc
das
cs
inc
and
add
add
mov
mov
cmpl
dec
into
int
rcl
aad
iret
into
iret
inc
mov
ljmp
lahf
mov
mov
add
add
add
add
jne
jne
xchg
adc
jo
ret
popa
mov
data16
insl
outsl
outsb
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
lcall
cwtl
cltd
lds
jae
daa
es
pop
add
add
jb
jb
popf
xchg
lcall
test
clc
xchg
or
addl
push
push
inc
mov
fwait
into
movsb
mov
lahf
sti
xchg
xchg
xchg
decb
mov
popf
fwait
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsl
cmpsl
cmpsl
test
test
mov
mov
xchg
xchg
xchg
cld
popf
pushf
pushf
cmc
lcall
mov
push
push
imul
jg
xchg
aam
xchg
notl
mov
mov
fwait
mov
jo
mov
lods
lods
push
stos
stos
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
cltd
cltd
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
nop
bound
std
lcall
ljmp
and
mov
outsb
pushl
pushf
lods
lock
mov
imul
int3
add
test
pop
scas
movsb
lods
test
sahf
sahf
popf
jmp
movsb
cmpsb
call
push
decl
jae
mov
imul
nop
adc
xchg
or
mov
push
insl
pushl
and
jnp
lds
test
rcrb
subl
je
push
movsb
pushf
mov
cld
test
cmpsb
ljmp
mov
lcall
sub
adc
xchg
push
incl
add
xchg
add
mov
adc
shlb
lret
aas
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsb
movsl
movsb
push
add
add
push
imul
movsl
mov
scas
pushl
mov
ljmp
outsl
call
push
pusha
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsb
call
pushf
mov
test
test
pop
add
add
arpl
adc
popf
pushf
fwait
cld
mov
mov
mov
mov
mov
pushf
dec
jge
fwait
xor
cwtl
and
call
add
stos
add
mov
addr16
xor
out
mov
jmp
mov
lock
out
jge
fistpl
mov
movsb
mov
add
dec
dec
dec
adc
imul
mov
mov
mov
ret
ret
mov
fs
cmpsb
inc
jle
lahf
and
lcall
add
mov
gs
pop
outsb
fimull
out
mov
push
xchg
clc
cwtl
clc
xchg
enter
mov
cmpsb
movsl
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
sarb
stos
dec
cmp
cmpsb
add
mov
gs
add
aad
jns
in
insb
scas
push
cmpsb
into
stc
stos
sar
cli
lods
sar
cld
lods
sar
lods
iret
ljmp
fldenv
incb
xor
xor
outsl
jo
inc
scas
mov
mov
aad
mov
aam
rcl
shr
lret
enter
xchg
jmp
add
add
add
out
xchg
clc
pop
std
mov
fdivr
inc
inc
std
rcr
lock
ret
in
test
jg
add
add
stos
lods
lods
add
jmp
or
out
call
outsb
fldenv
movsb
outsb
ljmp
add
lret
faddl
out
aaa
xchg
sti
mov
dec
in
std
shl
shl
std
shl
call
in
test
call
int
scas
scas
lods
popa
jg
jg
std
std
add
std
push
int
shrl
sahf
sbb
lods
add
mov
add
loop
jns
repz
cmpsl
cld
loop
std
aad
cld
aam
std
shl
cld
aam
sti
shl
push
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
imul
or
cmp
imul
out
mov
into
repnz
loope
leave
aam
call
scas
ret
ret
ret
push
cltd
cltd
fwait
add
mov
pushf
lods
xchg
and
push
mov
ret
int3
int3
jbe
mov
fdivrs
adc
int
xlat
int3
iret
pop
fst
dec
in
fistpll
out
out
out
in
out
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
ret
mov
lds
sbb
bswap
into
into
or
aad
push
std
incl
addb
add
add
add
rol
std
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
xor
sbb
data16
aaa
cmp
imul
mov
cmp
fisttps
push
xor
test
jne
xchg
pop
mov
fxam
jl
stc
sbb
pop
dec
cmp
jl
and
into
sarl
add
je
and
sub
jnp
test
mov
enter
sti
jmp
mov
subl
insl
mov
ret
hlt
mov
loope
mov
dec
xor
imul
sti
mov
dec
out
xlat
sbbb
push
outsb
add
pop
popa
mov
xchg
jge
push
scas
mov
inc
out
fdivl
or
pusha
cmp
cli
xchg
push
pop
out
lea
scas
cmpsl
scas
add
int
add
xor
push
in
dec
push
inc
flds
mov
aas
mov
add
stos
imul
cs
xchg
adcb
cmp
sub
mov
pop
sbb
cmpsl
pop
cmp
js
jo
lds
ret
repz
mov
adc
cmp
addr16
sbb
test
mov
lahf
mov
xlat
jp
stc
mov
mov
ficomps
movd
punpckldq
in
add
lcall
jns
lods
int3
mov
lcall
fnsave
mov
push
jb
xchg
movsb
jae
imul
jle
fstl
iret
mov
pushf
xor
stos
push
in
fistl
push
cmp
or
movsl
fsubrs
dec
xchg
sub
aaa
cwtl
das
imul
dec
mov
int
imul
and
sbb
repz
inc
fldcw
adc
rol
mul
jle
mov
outsl
push
jo
pop
dec
jne
jle
mov
rorl
mov
es
popa
adc
inc
jp
enter
out
xchg
mov
test
out
outsb
sbb
das
icebp
cmp
mov
dec
in
mov
stos
mov
loopne
mov
add
stc
daa
and
pop
mov
adc
fsts
push
arpl
xor
xlat
mov
lret
insl
pop
and
call
mov
outsl
push
test
adc
cld
and
push
sbb
dec
in
jo
popa
mov
ret
call
and
sahf
inc
insl
test
mov
repnz
out
inc
or
stc
cmp
pop
adcb
mov
sahf
xor
cmp
testb
jge
loopne
stc
nop
faddl
pushf
xor
std
pop
scas
cs
mov
int3
subb
ljmp
jno
es
adc
addb
jns
xor
rcrb
push
out
out
lret
bound
inc
outsb
add
jae
mov
lret
xchg
pop
sahf
inc
push
out
mov
jb
inc
fisubrl
out
lds
add
pop
fidivrs
adc
and
arpl
mov
cmc
push
fcomp
jo
xor
sub
mov
lcall
mov
lret
insl
pop
and
push
jge
mov
rclb
test
sti
and
push
sbb
inc
dec
je
in
outsl
lret
insb
add
ret
hlt
sbb
sahf
inc
insb
test
mov
icebp
mov
out
inc
or
cmp
add
xchg
pop
adcb
mov
mov
loop
inc
fdivrs
pop
ret
pop
xor
push
sub
test
test
jmp
sub
lret
push
adc
out
popa
clc
aam
in
xor
inc
fsubrl
dec
pop
lock
sub
loopne
shrl
add
jns
lock
mov
xorb
and
add
ret
pop
notb
pop
mov
xchg
xor
test
mov
mov
loopne
lcall
push
in
bound
gs
mov
inc
fdivl
shll
pop
push
popa
clc
test
xchg
sub
jnp
fstpt
or
leave
sbb
ja
jo
dec
lahf
sbb
lcall
mov
insb
or
xchg
cmp
pop
mov
mov
push
fldt
popa
clc
pop
cld
jns
stos
dec
stc
nop
jp
lret
bound
jno
loopne
inc
xor
jae
scas
inc
stos
stos
mov
fidivl
test
lret
bound
in
scas
xlat
outsb
fidivrs
mov
xchg
sub
cmp
cltd
mov
call
andl
roll
test
fs
cwtl
mov
ja
mov
arpl
jbe
mov
jge
mov
popa
adc
rcr
mov
mov
fnstenv
cmpsl
push
ljmp
jns
jnp
aas
movsb
test
jo
jns
sahf
stos
inc
fwait
xor
jno
lods
mov
aam
jb
mov
jg
and
mov
mov
jae
ljmp
imul
call
ss
orl
fnstenv
jo
jl
cmp
cli
stos
mov
shl
ja
pop
cmpsb
aas
movsl
cmp
jl
mov
call
aaa
sbbl
test
mov
push
cmpsl
bound
ret
sbb
arpl
dec
loop
insl
std
xchg
mov
andb
mov
xlat
outsb
lock
gs
mov
sub
mov
in
test
insl
addr16
lahf
sub
pop
xchg
mov
push
in
clc
insl
dec
loopne
and
push
mov
incb
imul
sbb
pop
dec
sub
mov
fnstenv
and
cmp
push
cmp
dec
xchg
into
mov
push
in
or
push
call
push
je
and
jg
add
jp
mov
idivl
call
push
jp
stos
in
test
jle
add
das
and
lods
int3
int
add
mov
xor
dec
push
cli
xchg
or
and
es
lret
negb
inc
push
dec
cmp
jl
cmc
mov
stos
push
in
fldenv
jne
test
fnsave
pop
lock
sub
pop
push
leave
pusha
xchg
add
or
pop
mov
scas
sbb
push
lods
mov
int
sti
decb
arpl
inc
lahf
ss
jnp
pushf
and
mov
je
cmova
lret
sti
in
cwtl
push
cmp
dec
mov
jbe
mov
or
lea
es
test
imul
sti
push
out
mov
lcall
cld
xchg
xor
and
cmp
push
aam
mov
jge
shrb
lcall
jnp
stc
and
mov
jecxz
xchg
cmpsb
cmp
jnp
sbb
inc
mov
jbe
test
and
pop
jns
pop
icebp
push
mov
xor
repnz
mull
mov
mov
jae
xchg
jo
ret
or
adc
stos
cmp
outsb
int3
add
add
stos
inc
push
add
dec
movsl
pop
xchg
sub
jnp
mov
ja
push
push
stc
nop
cmc
aas
lds
sbb
shrl
inc
lahf
sti
pop
hlt
sub
enter
scas
inc
jne
and
bound
mov
loop
inc
fidivs
cmpsb
cmp
lret
push
mov
xor
scas
push
out
xor
arpl
outsb
add
mov
fcom
out
or
mov
pop
and
cmp
push
mov
sub
push
in
subl
ds
enter
xchg
xchg
ret
aas
dec
jecxz
scas
sbb
pop
xchg
cmp
outsb
mov
xor
or
out
or
cs
sub
popf
pop
mov
xlat
in
jns
mov
dec
in
fldenv
cmp
push
jle
xchg
pop
fnstcw
ljmp
and
call
mov
push
mov
xchg
out
sbb
cmp
lock
pop
and
dec
cmpsl
insl
aad
popf
cli
call
into
call
add
int3
arpl
push
mov
jno
popf
out
test
xchg
mov
std
pop
cmc
das
push
call
adc
mov
repnz
add
ss
les
push
stos
inc
mov
xchg
cs
add
cmp
add
shrb
xor
mov
mov
stc
ffreep
xchg
mov
test
mov
lcall
testb
out
push
lret
fistps
insb
inc
int3
and
rorl
dec
and
in
iret
jecxz
mov
rclb
pop
inc
push
into
push
jae
xor
sbb
xchg
mov
inc
and
das
aad
ffreep
pop
adc
sub
mov
xor
adc
dec
adc
add
inc
pushf
lods
repz
xchg
sarl
ds
push
xchg
lret
ficompl
std
stc
mov
fildll
lret
in
jae
movups
or
lds
test
add
cmp
sbb
imull
stc
out
into
pop
dec
fcmovne
adc
ds
mov
negb
sbb
lods
mov
mov
insl
mov
popf
and
mov
cmp
adc
lods
mov
in
notb
push
in
frstor
out
cwtl
dec
fs
xchg
pop
pusha
or
add
mov
cs
add
sti
jle
mov
in
ds
mov
xor
jnp
test
and
divl
cmp
mov
jmp
insl
test
test
xchg
lahf
lret
xor
pushf
push
mov
sbbb
mov
pop
outsl
mov
mov
push
aad
jmp
hlt
push
imul
add
adc
cmpsb
cmpsl
xlat
scas
inc
clc
push
cmpb
arpl
xor
xlat
mov
fidivrl
mov
push
push
daa
imul
mov
enter
sub
gs
fsubl
sub
mov
loopne
mov
push
imul
push
fstpl
mov
dec
or
cld
test
in
int
pop
lods
lea
push
icebp
mov
andl
mov
push
lds
sub
cmp
inc
jp
mov
jae
addr16
je
push
jl
xlat
cmp
mov
jnp
out
dec
int
daa
ds
jo
scas
shll
inc
in
ja
into
mov
daa
leave
cmp
dec
pop
add
mov
dec
and
pop
cmp
or
mov
mov
and
mov
lcall
stos
mov
in
mov
fs
in
daa
lods
pop
dec
rorb
imul
dec
imul
loop
pop
out
jg
in
xchg
xor
xor
pusha
popf
mov
mov
pop
cltd
iret
sub
cmpsb
aam
cmp
bnd
push
test
xchg
daa
mov
frstor
cli
in
pusha
negl
sbbb
jle
adc
test
lret
mov
fadd
push
push
sbb
mov
stos
mov
cld
pop
hlt
sub
push
movsl
sub
add
mov
cmpsb
pop
xchg
sub
call
mov
mov
inc
cmp
outsl
push
push
pop
shrl
je
movsb
push
mov
cmpsb
mov
icebp
lea
and
inc
test
aaa
insb
jge
sahf
pop
pop
mov
les
sbb
jns
push
int3
arpl
repnz
xchg
ljmp
add
mov
rcll
ljmp
xchg
jp
inc
pop
fs
mov
das
shll
pop
icebp
jmp
jl
xor
aad
fdivl
adc
pop
mov
xchg
fdivrs
fadds
sbb
or
es
loopne
push
jmp
or
rorl
inc
dec
cli
nop
daa
and
pop
mov
loopne
push
mov
icebp
mov
cmc
mov
andb
adc
ds
addr16
xchg
lock
rep
mov
jp
pop
inc
insl
add
jg
pop
push
xchg
mov
mov
test
inc
outsb
loopne
pop
push
mov
subb
jl
cmpsb
xchg
cld
lcall
fimuls
and
lods
pop
inc
xlat
inc
lds
outsb
insb
pop
cmc
mov
lret
or
test
and
sub
fwait
pushl
ljmp
jg
xor
xchg
ret
popf
mov
lret
mov
roll
pop
mov
loopne
xor
pop
xor
jle
divb
mov
xlat
es
push
mov
outsl
pushf
cltd
fnstenv
mov
out
js
mov
adc
lods
ljmp
fisttpl
mov
das
lods
hlt
jno
mov
dec
in
fimuls
add
mov
and
pop
fdivl
pop
test
xor
cld
pop
pop
dec
adc
in
mov
leave
add
sub
and
pop
lcall
std
pop
repz
repz
xor
inc
jp
mov
lret
imulb
mov
cmpl
stos
aad
fst
jne
mov
rcll
mov
or
fstpt
fnsave
stc
shlb
jmp
mov
adcb
mov
sahf
xor
or
inc
fdiv
sbb
jb
adc
gs
nop
scas
xchg
jb
xor
pop
scas
and
mov
int3
movsl
mov
ljmp
jno
inc
and
test
imul
inc
and
sub
jle
lret
bound
out
add
jne
pop
ficoms
scas
es
cmp
int3
stos
push
mov
ljmp
jb
outsl
call
nop
daa
mov
or
lret
mov
push
loopne
lret
out
aaa
ljmp
jbe
lahf
push
ljmp
jae
mov
fstpt
xlat
stc
sub
int
mov
adcb
loopne
sbbb
or
jne
aaa
into
clc
sahf
fidivl
adc
add
jmp
sub
test
inc
or
test
daa
mov
in
inc
shrl
mov
repz
xchg
lret
or
aaa
pop
jnp
rclb
mov
lock
cmp
add
cli
xchg
lods
xchg
mov
jbe
sbb
sub
ss
inc
xlat
outsb
daa
fs
jmp
push
cmc
mov
adc
or
inc
fdivs
fstps
or
insb
add
movsb
mov
pushf
mov
pusha
mov
mov
or
daa
aad
mov
aam
mov
scas
adc
pop
xchg
aas
cli
je
negb
jge
pop
fldt
aad
fwait
xor
xchg
movsb
jbe
sub
adc
mov
or
shrb
mov
stos
cmc
hlt
lock
outsb
add
test
mov
push
sarl
jae
dec
xor
pop
insl
rcll
dec
mov
add
enter
mov
and
adc
adc
mov
vpsrlq
sbb
xor
mov
jns
imul
lahf
mov
and
loope
and
popf
lea
pop
xchg
cmpsb
and
dec
mov
inc
fstps
adc
cltd
mov
pusha
div
movsb
and
jae
ds
popf
lea
cmp
inc
fdivrs
cld
mov
fdivl
movsb
sbbl
cwtl
jmp
cmp
dec
pop
sahf
adc
push
pop
cmp
je
sbb
cmp
mov
aad
mov
gs
cs
lcall
cmpl
jnp
dec
xchg
sub
mov
and
add
outsl
stos
in
test
mov
or
or
mov
ds
rcrl
repz
mov
insl
cmpsl
jp
fimuls
cwtl
das
or
add
push
ljmp
outsl
mov
aam
xchg
mov
fcoml
cmpsl
divl
add
pop
das
cmc
fwait
xor
cmpsb
dec
in
ljmp
sub
mov
lcall
ds
inc
add
pop
adcb
mov
fidivl
xor
cwtl
repz
jecxz
pusha
idivl
push
jle
xchg
into
lcall
push
cmpsl
ds
mov
pop
outsl
je
jo
mov
jp
int
mov
aad
lods
or
es
imul
push
call
adc
jne
sbb
and
inc
movsl
cmp
mov
ret
pop
ljmpw
loope
push
aas
out
mov
lret
add
adc
adc
fwait
xor
test
push
ljmp
jno
and
dec
mov
leave
lods
inc
cli
pop
xsha1
cmpsb
or
es
sbb
hlt
or
aaa
cmp
mov
pop
pop
inc
fistl
mov
mov
shl
adcb
sti
aam
jp
sahf
xor
dec
mov
push
loope
aad
gs
nop
mov
lret
pop
sahf
adc
pop
cmp
sbb
push
ficompl
mov
clc
lds
jg
sbb
push
mov
int3
mov
mov
pop
fidivl
sarl
mov
aas
lods
dec
in
pop
push
lods
xchg
sub
and
xchg
cs
repz
jmp
add
jo
push
sub
push
orb
cmp
lods
inc
inc
pop
pop
mov
outsl
lret
bound
xchg
push
in
dec
in
aas
sbb
cmp
push
cmp
popl
pop
out
mov
shll
add
aad
cltd
sub
xchg
mov
inc
inc
aas
add
out
xchg
loopne
lea
lahf
cvttps2pi
dec
mov
dec
loope
sub
push
inc
mov
leave
int
jo
movsb
cmp
cltd
sti
xchg
add
test
sbb
iret
jle
sarl
mov
cmp
jae
in
push
in
mov
aad
or
xchg
sub
ss
pushf
scas
inc
movsl
push
push
jmp
ret
fnsave
jb
out
out
xchg
stos
pop
xchg
sub
mov
sub
add
and
jge
in
xorl
or
je
sub
inc
mov
jmp
inc
fimuls
ja
push
out
data16
cltd
lret
add
mov
xchg
push
cmp
dec
mov
pop
jmp
or
mov
out
jl
fwait
cmpsb
or
data16
or
mov
mov
sub
das
into
stos
dec
lcall
fwait
scas
inc
sub
push
dec
dec
loop
subb
cmpsb
call
adc
in
ljmp
cmp
mov
mov
pop
jae
les
xchg
mov
lds
out
dec
adc
ss
scas
and
mov
fisttpll
push
push
pop
repnz
shll
adc
orl
sub
data16
add
test
pop
sahf
aam
sarb
cmp
int
push
incl
jne
fnsave
xor
jae
xchg
movsl
call
push
mov
cmp
insb
sbb
aad
lea
out
pushf
loopne
dec
adc
shlb
adc
mov
flds
sahf
cld
test
jl
sbb
mov
idiv
xchg
sub
inc
fistl
mov
stc
in
cmp
sbb
repnz
repnz
aaa
mov
jbe
mov
xor
add
outsl
xor
mov
mov
cmpsl
adc
ret
lret
sbb
jge
cmp
add
mov
mov
fstpt
or
mov
pop
lret
push
mov
fidivl
aad
jp
aas
add
pop
xchg
and
lods
jecxz
adc
cmp
pushl
pop
lock
xchg
mov
ficompl
sub
sub
mov
dec
adc
mov
shrb
shl
mov
es
cmpsb
push
adc
inc
js
mov
sahf
lret
repz
and
xor
scas
xchg
push
icebp
mov
scas
jmp
flds
test
cmp
movsl
cmp
pop
into
mov
jle
loopne
rcrl
xchg
sub
jmp
mov
mov
xchg
sub
nop
sbb
xor
xchg
cs
ss
ljmp
call
xor
lret
bound
push
stc
mov
push
out
jo
adc
lret
imulb
shrl
aaa
into
push
push
adc
jno
or
lret
cmc
push
jmp
pop
push
jp
mov
ja
bound
pop
repnz
fmulp
data16
sub
mov
xlat
jae
pop
lods
clc
xchg
sub
iret
and
jge
movsb
cmp
shrb
fs
popf
jmp
hlt
mov
xor
insb
or
jl
lea
mov
push
call
adc
lds
cmp
xor
adc
aad
movsl
push
mov
mov
das
push
jmp
xor
push
decb
imul
pop
fbstp
or
lahf
xor
es
push
call
inc
out
mov
sbb
adc
xor
mov
xchg
push
in
mov
pop
lock
mov
dec
or
pop
xchg
push
and
icebp
scas
lea
adc
repz
cmp
inc
add
jecxz
fsubrs
add
fnstcw
pop
aaa
into
mov
xchg
sub
pop
cmc
rorb
xor
sub
nop
daa
add
adc
and
xchg
jle
arpl
lret
hlt
imul
adc
scas
inc
mov
int3
arpl
mov
mov
pop
add
mov
mov
mov
loopne
pop
add
add
mov
pop
repz
stos
int
aam
data16
dec
cmc
push
out
push
scas
xchg
dec
xchg
sub
cmp
in
lcall
aaa
in
sub
pop
sbb
scas
push
mov
jo
std
jnp
es
orl
xor
ljmp
rclb
fnstenv
cmp
andb
popa
insl
cmpl
mov
ret
pop
push
or
push
xor
jo
jae
ljmp
call
xor
sbb
push
pop
mov
mov
jo
mov
loop
adc
cwtl
das
xor
pop
lock
push
lret
bound
mov
cmpsl
ljmp
and
pop
nop
sbbb
ljmp
pop
aaa
fnstenv
pop
mov
addl
pandn
pop
lock
add
xchg
cmp
adc
test
scas
movsl
or
clc
lahf
sub
lcall
data16
xchg
mov
rcr
cli
repnz
fidivs
dec
jg
jns
pop
lock
lcall
out
out
xchg
adc
jno
inc
sbb
xchg
popf
mov
xor
out
pop
and
out
test
out
outsb
fnstenv
lcall
loop
fbstp
add
mov
push
mov
mov
fidivl
rcll
popf
cmp
cltd
xor
movsb
push
popf
out
xchg
add
jno
sub
push
pop
in
xchg
scas
cmpsl
pop
icebp
jo
or
es
push
pop
fnstenv
js
aaa
mov
les
incb
lcall
pop
cmc
mov
test
jno
mov
fsubr
repz
sub
out
xchg
pop
icebp
js
adcb
lcall
jecxz
fidivl
add
mov
and
mov
cmp
daa
shrb
inc
xchg
jne
test
cmpsb
xchg
inc
fcmovnb
fidivs
jecxz
loope
adc
dec
inc
ss
mull
mov
adc
xlat
mov
outsl
xor
into
gs
push
ret
ja
outsl
mov
ret
repz
add
cmp
push
call
xchg
jmp
loopne
adc
ss
cmp
dec
test
in
movsl
fsubrs
mov
pop
out
add
ds
or
jle
scas
inc
mov
shrl
in
pop
repz
repz
cmp
add
or
mov
fdivl
out
sub
push
jne
add
mov
adc
aaa
into
pop
xor
pop
rep
xor
mov
ficoml
scas
adc
das
mov
xchg
mov
int
mov
dec
flds
add
mov
push
push
das
mov
test
cmp
inc
add
dec
inc
pop
call
stos
xchg
imul
enter
jecxz
or
sbb
dec
dec
xchg
je
xchg
ss
cltd
mov
mov
data16
in
leave
pop
adc
repz
inc
aas
frstor
imul
xchg
mov
aad
ret
cmp
xor
push
hlt
pop
pop
dec
fiadds
test
scas
cmp
clc
test
sub
dec
nop
inc
mov
jnp
lret
pop
jecxz
loope
lret
imul
sets
in
jns
xor
mov
subb
cld
push
cwtl
and
cmp
or
and
popf
cs
lods
in
ds
cli
cld
cmp
jge
dec
lea
mov
lea
sahf
add
jle
outsl
cmpxchg
dec
sahf
fwait
es
lret
push
fdivs
bound
mov
popa
imul
dec
mov
ljmp
adc
xchg
cmp
push
mov
inc
adc
cmpsl
mov
arpl
imul
outsl
or
push
xchg
pop
inc
pop
popf
push
jne
mov
mov
mov
dec
dec
ss
pop
mov
fcmovne
push
int3
leave
imul
xor
jl
jg
xchg
stos
and
out
adc
in
cmp
pop
dec
jg
test
add
mov
lahf
sbb
in
fwait
push
and
sub
mov
mov
inc
jmp
push
jecxz
cmp
inc
pop
lea
cmp
push
loop
shll
xor
push
in
push
jg
fcomp
push
mov
out
or
inc
push
xchg
sub
mov
jne
jmp
pop
mov
mov
push
aam
mov
jmp
daa
pop
adc
scas
xor
mov
in
xchg
pop
cmpsl
mov
sub
repz
imul
rcrb
push
push
test
fwait
addb
scas
rcrb
jg
sbb
sub
pop
insb
dec
iret
jo
fwait
nop
sbb
loopne
xchg
sbb
aas
sub
int
mov
aam
mov
jmp
pop
pusha
js
test
shlb
std
fcoms
mov
dec
or
lock
js
popa
xchg
xorb
stos
jge
repz
lea
daa
shll
dec
push
fwait
test
or
push
xor
mov
xor
xor
stos
pushf
or
cld
les
mov
inc
sub
enter
jne
xchg
pop
ffree
div
mov
loop
sti
adc
stos
jl
adcb
popf
das
into
xchg
loope
fstpt
add
cs
pusha
xchg
xchg
sub
cmp
inc
sbb
or
push
cmp
jb
daa
inc
fstps
cmc
mov
jns
pop
stos
loop
ret
scas
inc
pushl
sbb
lea
xchg
mov
bound
imul
pop
sbb
dec
jg
jo
insb
data16
popf
shl
mov
test
icebp
and
mov
int3
test
ret
pop
xchg
leave
push
call
ljmp
jg
outsb
mov
jge
rcll
jecxz
iret
inc
add
cli
xor
push
sbbl
in
cmpsb
lahf
fcoms
ljmp
data16
jp
es
mov
mov
arpl
leave
shlb
sbb
and
push
out
adc
push
andb
mov
aaa
jne
mov
pop
ljmp
aad
xchg
lret
pop
sti
pop
dec
leave
and
push
pop
ret
jg
mov
jbe
sarb
push
jmp
mov
jl
mov
rcrb
xor
jge
addl
leave
lret
lahf
dec
in
pop
ja
push
test
rorb
in
mov
mov
mov
shlb
adc
and
xchg
mov
xor
int3
dec
mov
sbb
jmp
movntps
mov
dec
sub
iret
or
add
inc
test
and
mov
arpl
ret
out
rorb
push
aad
sbbl
push
inc
jnp
inc
mov
decl
mov
xchg
ret
cmp
movsb
fbstp
fadd
lock
popa
cmpsl
cs
jle
enter
mov
pop
icebp
xchg
xchg
out
inc
sbb
fiaddl
lods
call
in
mov
addr16
or
xchg
movsl
jae
sti
adc
cmpsb
in
gs
inc
repz
call
mov
mov
mov
fwait
mov
jmp
pop
sub
cmp
adc
rolb
loope
mov
mov
cmp
add
leave
call
or
in
sbb
jbe
lock
add
cli
push
dec
nop
fcmove
adc
lcall
arpl
mov
stos
das
aaa
adc
test
jns
test
or
or
les
repz
into
jns
out
cmp
cmc
cmp
jp
jnp
cmc
fdiv
add
cs
pop
rolb
fs
sbb
es
inc
shlb
adc
mov
call
pop
cmc
lock
xchg
add
fstps
adc
stos
scas
cmp
xchg
push
rorl
adcb
cmp
movsb
loop
call
sbb
mov
mov
or
lock
shll
or
sar
jp
pusha
jmp
subb
aaa
out
pop
sbb
insb
sub
in
adc
ficoml
stos
mov
js
pop
or
mov
inc
mov
ficoml
cmp
dec
pop
push
mov
ljmp
andl
pop
ljmp
push
lock
leave
stos
jle
push
mov
cmp
dec
jmp
dec
loope
push
sub
push
inc
data16
xor
cwtl
shlb
adc
push
adc
push
icebp
cwtl
icebp
push
iret
mov
push
mov
popf
pop
arpl
aam
ret
sarl
cmp
xor
in
popf
mov
add
and
mov
into
pop
sub
movb
daa
nop/reserved
roll
jle
in
xchg
fadd
shlb
mov
and
mov
push
add
bound
pop
mov
push
mov
mov
sub
jl
jae
sub
ficoml
clc
js
aas
sahf
aad
inc
add
jp
ret
sbb
xchg
dec
shrl
call
and
out
jns
dec
dec
cs
add
inc
mov
les
pop
loopne
sti
lea
or
sbb
push
out
pop
out
mov
dec
inc
movsl
mov
popf
ja
jl
lods
arpl
and
in
lock
stos
mov
cmp
lods
cltd
dec
and
cmp
mull
in
xor
js
dec
xchg
push
imul
inc
rcrb
je
sub
pop
sbb
setno
sub
cwtl
mov
pop
andb
repz
scas
sarb
add
add
loop
inc
ja
out
mov
sub
fsubrl
cmp
add
fidivs
dec
testl
push
nop
test
movsb
dec
cli
push
inc
enter
aaa
sbb
int
jb
jg
cmp
test
add
dec
push
xor
rcl
es
cmp
xor
jl
mov
sbb
cs
fimull
fs
es
mov
sahf
dec
fmul
and
cmp
outsb
push
mov
cmpsb
jmp
fisubrs
loop
push
jnp
jns
adc
inc
mov
push
cmpl
sbb
mov
popf
das
mov
sbb
jp
cmpsl
push
ds
or
aas
test
mov
fisttps
cld
pop
mov
subl
clc
jecxz
pop
cwtl
inc
jl
sub
stos
add
bound
add
je
std
mov
or
xor
push
lods
adc
push
inc
js
push
jle
js
mov
lock
cmpb
cmpsl
insb
sbb
sbb
test
shlb
fcomps
push
out
pop
sahf
dec
add
mov
jns
inc
shll
jle
rorb
mov
dec
lods
xor
cmp
or
test
mov
xchg
adc
mov
cmp
adc
jbe
pop
pop
cmp
bound
mov
or
outsl
xor
mov
xchg
aas
loope
sahf
dec
cmp
cmp
xchg
orb
xor
mov
inc
mov
gs
fildl
movsb
mov
mov
push
push
jo
das
sub
hlt
sarb
adc
mov
inc
fldcw
test
cmp
ficoml
icebp
push
jnp
lds
cmp
xchg
dec
xor
andl
dec
pop
sub
adc
sbb
jno
push
fbstp
pop
in
jo
mov
jno
mov
in
mov
lret
push
pop
in
daa
push
mov
in
push
sbbb
loop
mov
addb
lret
pop
bound
jp
push
sbbl
fcmovnu
fisubrs
in
mov
mov
xchg
xchg
jae
std
add
mov
das
mov
mov
dec
stos
sbb
jns
adc
lret
inc
xchg
jb
xchg
stos
push
inc
pushf
pushf
and
stos
scas
loope
sub
add
push
adc
inc
xor
pop
xor
dec
push
pushf
add
sub
popa
cltd
rol
mov
pop
and
mov
jbe
cmp
add
out
testl
roll
jecxz
aas
push
stos
cmp
insb
hlt
dec
sub
jne
arpl
ss
loope
push
out
mov
jmp
jb
jge
jl
dec
xchg
push
lret
insb
cmp
int3
movsb
jle
dec
out
test
adc
jl
mov
sarb
mov
xchg
insl
shlb
out
jge
adc
push
in
int3
and
push
es
arpl
cmp
dec
jne
push
scas
outsb
xor
jnp
add
push
aas
subb
mov
cmp
imul
filds
sbb
popa
ret
mov
mov
sub
imulb
cmpsb
movsb
sahf
pop
xchg
outsb
jmp
es
mov
sub
pop
cmp
pop
push
mov
inc
sub
dec
lret
ja
push
in
shrb
in
jle
aad
and
dec
scas
inc
jbe
sbbl
xor
mov
pop
add
pop
pop
ljmp
xchg
xor
je
jl
call
inc
pusha
add
addr16
in
cmp
mov
lods
dec
cmp
lea
adc
out
jns
adc
shlb
out
and
xor
out
xchg
and
cmp
mov
jns
shll
jg
imul
jmp
sub
filds
push
push
inc
adc
scas
inc
aam
adc
mov
popa
hlt
sarl
ljmp
mov
out
add
mov
fld
jge
cmpsl
sbb
mov
lock
dec
les
mov
in
or
fimull
xchg
sahf
mov
xchg
adc
test
mov
jecxz
add
addl
xor
mulb
pop
pop
cwtl
inc
enter
rorl
pop
les
jg
sarl
inc
sbb
cs
leave
dec
test
jle
mov
stc
mov
pop
add
cmp
out
addb
ret
divb
mov
divb
rcl
jl
fbld
inc
and
cmp
add
xchg
aam
jae
mov
fwait
xchg
jnp
inc
movsl
xor
cmp
divb
int3
sbb
shrb
std
cmpsl
or
cs
mov
es
xchg
insl
or
push
xchg
std
sbb
sbb
cmp
xchg
jne
or
sti
mov
sahf
jo
xchg
cmp
cmp
xor
dec
clc
xlat
sbb
mov
inc
mov
leave
sub
test
mov
jno
dec
xchg
gs
dec
jle
sbb
pop
popf
inc
scas
adc
mov
push
inc
mov
jmp
mov
dec
inc
jmp
sbb
cltd
loopne
testl
rcl
dec
mov
faddl
or
enter
das
dec
and
enter
push
jae
mov
cmp
sbb
mov
inc
neg
jecxz
hlt
pop
mull
pusha
cmc
push
add
push
negb
jns
inc
dec
dec
pop
cmpb
sub
test
sub
push
cmp
test
mov
test
pop
arpl
xchg
mov
out
mov
popl
aaa
cmpsb
or
or
sbb
pop
and
push
inc
cld
ss
loope
scas
mov
mov
data16
sub
rcrl
mov
orps
cmc
push
dec
and
mov
xor
xchg
repnz
mov
mov
push
mov
sbbl
les
cmp
adc
fidivrl
popf
movsl
add
dec
jo
pop
shr
shll
and
shl
stos
imul
push
jbe
lds
hlt
push
rclb
ss
and
add
lahf
fsubr
ret
lret
aaa
imul
xchg
rorb
mov
cmp
pushf
mov
in
fsubrl
jmp
and
adc
pushl
repnz
addr16
and
je
fcomip
hlt
lods
cmp
add
getsec
adc
mov
xchg
movsb
imul
call
aad
xor
mov
push
pop
adc
out
test
sti
xchg
mov
out
mov
pop
dec
jmp
mov
pop
sbb
push
jp
repnz
movsb
bound
adc
daa
push
test
mulb
pop
xorl
mov
add
test
rcr
mov
stc
fistpll
sub
sar
adcb
pop
add
dec
repnz
push
xchg
gs
ja
pop
xor
out
mov
jnp
mov
out
mov
mov
pushf
add
dec
in
aad
lcall
push
cmp
sub
pushf
inc
cmc
iret
mov
out
add
adc
fsubp
rolb
into
add
mov
movsb
pop
in
hlt
jmp
rcrl
mov
cmc
faddp
in
mov
out
sbb
aas
daa
sarb
lock
dec
fcoml
ljmp
jecxz
fldl
in
mov
cmp
dec
mov
outsl
mov
push
xchg
sub
cmp
ret
pushf
push
das
push
jl
xor
cmp
mov
mov
sub
jae
enter
lds
and
or
jmp
mov
jle
insl
repz
and
push
stos
dec
mov
mov
loopne
jbe
or
sub
adc
les
jb
lods
cmp
inc
inc
negl
mov
mov
outsl
ficoms
sti
mov
mov
bound
and
mov
jle
xchg
dec
lret
fisubl
inc
lahf
adc
cmp
push
mov
push
inc
pop
mov
mov
mov
lds
inc
and
push
fdivp
or
jmp
clts
scas
jae
loop
adc
pushf
stc
jge
mov
cmp
add
dec
and
minps
inc
hlt
cs
nop
xchg
bound
repnz
sbb
jb
jnp
ss
xchg
add
int3
sbb
inc
out
pop
shrb
sbb
in
imul
lahf
mov
or
frstor
sub
scas
test
push
xlat
fistl
jns
out
das
jp
mov
fwait
sbb
test
daa
sub
mov
inc
jns
jbe
inc
xchg
inc
out
rorl
scas
stc
xor
cmp
pop
out
cmp
inc
jg
popa
sahf
inc
jne
adc
arpl
iret
xchg
jae
sub
jmp
scas
std
mov
and
pusha
aam
xlat
and
test
loop
call
pop
cmpsl
mov
adc
pop
fs
xchg
cmpsb
les
icebp
push
mov
jle
jge
mov
imul
or
cld
call
loopne
inc
testb
icebp
dec
dec
nop
mov
pop
test
pop
ljmp
fcomps
or
push
std
adc
push
add
mov
ret
jmp
jl
jge
dec
dec
fldenv
out
test
adc
insl
addr16
into
mov
push
enter
mov
sbb
adc
or
test
repz
push
push
mov
jb
mov
xor
ficompl
test
or
and
mov
sub
dec
sub
lcall
movsb
xor
jns
pop
and
in
mov
out
xchg
cmp
dec
lods
cmpsl
lock
dec
pop
fnstcw
dec
sahf
and
pop
hlt
cmp
sbb
sahf
fisttpll
ss
fistpl
mov
cmp
xchg
les
and
inc
pop
rolb
imul
jnp
cmp
les
cmp
adc
lret
mov
popa
dec
gs
cmpsb
mov
aam
scas
mov
push
adc
adc
loopne
aas
or
gs
xchg
adc
inc
das
jp
loope
jle
js
inc
int3
paddb
push
push
mov
outsb
ret
dec
dec
leave
movsl
daa
sahf
dec
sub
push
sbb
or
divb
jnp
int3
aad
inc
divl
in
adc
mov
inc
scas
aad
pop
lods
pusha
jle
dec
push
scas
out
xchg
jo
aaa
xchg
xchg
and
test
sahf
sbb
dec
lds
push
inc
in
les
aad
test
rol
out
push
mov
cmpsl
pop
push
std
push
pop
shrb
xor
out
pop
xchg
arpl
add
jecxz
aad
clc
enter
xchg
pop
xor
icebp
xor
pusha
orb
aam
jle
imul
add
mov
fs
cmp
in
cltd
push
mov
mov
ficoml
andb
insb
adc
sub
xchg
notb
adc
aas
into
pop
xor
push
sbb
aaa
insb
cmpb
jl
ss
popa
pop
lds
pop
pop
gs
out
or
jmp
cmp
cwtl
out
fistpl
jb
pop
enter
aam
xchg
aas
stos
cmp
jle
add
orl
mov
sub
out
jns
mov
xor
jno
shll
movb
push
outsb
call
or
jl
cmp
cmc
mov
flds
addb
mov
aaa
pop
inc
sub
daa
push
push
inc
cmp
push
sbb
out
movsb
sub
adc
fcompl
divl
push
es
roll
jne
or
inc
xchg
xchg
pop
shll
pop
in
xor
ret
xorb
js
push
sub
js
dec
bound
xchg
mov
cmpsb
cmp
lret
aam
xor
test
jmp
jl
add
inc
cmp
jg
dec
xchg
out
jecxz
xor
movsl
jns
adc
jnp
xchg
rcrl
jge
or
dec
scas
push
jb
ja
push
aaa
inc
adc
push
repnz
sti
push
pusha
xchg
ficoml
mov
sti
and
sbb
mov
and
mov
outsl
adc
imul
out
dec
cmc
pop
ja
dec
lret
adc
mov
popa
sarb
rcrb
push
add
jmp
lods
shr
inc
lahf
cmp
mov
and
cmc
and
push
add
push
mov
add
nop
loop
stc
xchg
sub
js
xchg
push
and
mov
adc
adcl
mov
clc
repz
push
shlb
mov
dec
cmpsl
sahf
lret
mov
ret
push
pop
out
leave
popa
fmull
outsb
outsb
dec
dec
jl
jno
adc
decl
jecxz
push
jmp
pop
mul
jns
lret
mov
and
aaa
xchg
and
mov
dec
cmpsl
rolb
push
in
dec
js
adc
adc
mov
push
lea
gs
cmp
aaa
test
js
test
pop
mov
pop
push
sbb
cmc
dec
xor
push
mov
enter
jbe
outsl
aad
mov
or
xor
inc
mov
jns
pop
inc
sub
int3
shll
outsb
adc
ds
cwtl
sub
pushf
mov
sub
addr16
or
stos
mov
mov
fs
jne
in
dec
xchg
test
dec
call
push
adc
pushf
scas
jl
xchg
in
lcall
sub
jge
mov
pop
xor
push
jne
cmpsl
mov
daa
mov
ror
sbb
popf
jl
jl
sub
lahf
scas
cmpsl
sub
fwait
mov
mov
clc
in
jb
insb
lods
movsb
adc
test
lret
sub
decb
dec
lds
jmp
mov
es
sbbb
mov
xchg
jbe
mov
adc
xchg
ret
data16
dec
sahf
mov
pusha
xchg
lods
fnsave
add
jno
mov
je
and
xor
mov
dec
inc
pop
insb
int3
sarb
push
repnz
xor
into
adc
addr16
mov
jg
sub
sub
xchg
jno
mov
sub
or
addb
into
jle
aaa
sub
das
mov
icebp
mov
adc
jb
or
and
ss
sahf
push
and
mov
cmp
adc
inc
or
out
push
movsl
arpl
add
imul
shl
stos
xor
jl
stos
cmpsl
mov
xor
enter
sub
pop
inc
xchg
mov
int
std
insl
pop
idivl
cmpsb
cmp
sbbb
loop
xorl
ss
pop
inc
sahf
jne
js
loopne
sub
out
adc
daa
aas
popf
cmp
mov
arpl
mov
call
sub
test
and
lods
inc
xor
fsubrs
ret
sub
je
mov
push
test
push
dec
sub
or
and
sbb
mov
std
repz
hlt
xchg
icebp
inc
ja
mov
xchg
add
ja
dec
les
leave
xchg
pop
xor
mov
sbb
pop
mov
into
sahf
mov
pop
enter
add
jne
leave
cmp
stos
repz
sahf
sar
dec
iret
xchg
sbb
arpl
xor
push
and
cmc
pop
xchg
je
mov
andl
sub
xchg
add
andb
ficoml
mov
pop
adc
pusha
ret
out
inc
daa
addr16
prefetcht1
sub
or
xchg
cltd
inc
repz
popa
andb
sbb
jno
lods
outsl
inc
push
sub
dec
fwait
lcall
pop
je
aad
jp
repnz
or
xorb
jb
adc
xor
pop
push
push
fcomps
cmpsb
shll
shll
add
sbb
push
sbb
push
inc
test
push
xchg
cltd
movsl
into
mov
and
mov
test
jns
sub
xchg
xchg
addl
pop
leave
lds
jbe
push
movsb
scas
in
scas
adc
daa
and
movsb
push
lcall
repnz
bound
mov
mov
cmp
sarb
dec
jbe
out
aaa
and
stos
in
pop
adc
dec
in
xor
lock
lea
xor
aas
movsb
xchg
pushf
jle
sbb
sub
push
jmp
add
out
xor
xchg
andb
cmp
outsb
mov
cmp
clc
mov
or
iret
push
jo
sarl
add
xchg
lcall
inc
lock
je
loope
aas
jp
xchg
call
and
sub
push
cmp
fisubs
loope
mov
sti
ja
add
and
sub
lods
movsb
jae
sbb
push
sahf
inc
pop
xor
fnsave
jmp
push
loope
cmc
mov
rorb
jg
rcrl
and
filds
ficompl
pop
rorl
cld
cli
xor
push
jmp
fsts
mov
adc
cmp
or
xchg
jmp
inc
xor
xor
cmp
mov
test
mov
xchg
incb
clc
xchg
js
adcb
dec
dec
mov
fs
nop
stos
dec
aad
aad
fwait
push
test
and
bound
imul
divb
xorb
adc
into
fdivr
lds
jg
mov
dec
cli
xor
outsl
pop
les
adc
mov
ret
cmp
xchg
aaa
mov
mov
movsb
sbb
xor
lds
sbb
cltd
add
icebp
sub
negl
imul
stos
sarb
repnz
mov
cmp
inc
mov
xor
scas
add
inc
shr
pushf
push
cmp
pop
mov
inc
mov
mov
cmpsl
add
sbb
lods
fsubs
mov
inc
pop
and
movsl
insb
or
cmpsb
mov
frstor
or
cmp
scas
mov
sbb
stos
push
mov
ficompl
scas
fwait
mov
inc
pop
gs
sbb
mov
imul
xchg
fsubrs
into
cs
jo
mov
mov
js
not
adc
mov
testb
outsb
addr16
icebp
stos
dec
jge
pop
rclb
xchg
mov
mov
sbb
rcll
out
cmp
sub
mov
in
dec
mov
adc
ja
mov
dec
repnz
aaa
adcl
in
fiadds
sub
mov
adc
lock
js
out
dec
imul
clc
jmp
mov
imul
inc
in
xchg
div
dec
testb
push
das
gs
in
xchg
pop
loopne
cmp
aas
hlt
xchg
inc
jp
sub
pop
aaa
imul
jl
aam
add
fwait
jmp
rcrl
xchg
cmp
jge
jnp
mov
mov
lods
inc
inc
pushf
pop
cwtl
or
xchg
enter
ret
in
or
ja
lahf
and
pop
pop
sbb
mov
jnp
xlat
jbe,pn
push
into
mov
xchg
insb
cli
in
sub
imul
addr16
xor
inc
lahf
hlt
into
jge
aas
mov
mov
call
ljmp
fadd
fsubl
mov
insb
xadd
in
ret
aad
mov
lock
mov
push
xchg
mov
data16
inc
loop
mov
rclb
sbb
push
sbb
addr16
sub
pop
scas
fsubrs
or
mov
mov
lret
jno
idivl
xchg
cltd
hlt
out
cmp
fcoms
sbb
daa
or
cmpb
push
pop
push
pop
pop
fs
aaa
sbb
xor
pop
dec
sbb
xchg
sahf
mov
out
pop
in
lock
cmpsb
lods
rcrl
cmp
dec
pusha
xchg
cmpsl
mov
xor
in
adc
sub
mov
movsb
stos
in
push
iret
jno
jnp
fwait
push
fmulp
dec
imul
dec
push
in
vmovaps
imul
or
xor
ja
fcoms
jb
fs
mov
inc
cmc
lahf
adc
js
int3
sbb
xor
mov
lret
pop
shlb
and
pop
mov
xor
ja
push
pop
and
cwtl
push
adc
cmp
jae
and
mov
icebp
aaa
stos
sbb
in
scas
loop
inc
sahf
aam
xchg
in
nop
dec
lret
aam
push
clc
test
fdivrl
pop
sbb
push
mov
shrl
or
cmpsl
lcall
ret
mov
pop
push
pop
jb
iret
test
addr16
faddl
cmpsl
gs
xchg
enter
dec
aaa
push
mov
popf
or
and
ss
or
push
pop
mov
xor
ja
xchg
add
test
inc
daa
inc
cmp
mov
lahf
mov
test
aam
movsl
cwtl
cwtl
gs
les
sub
jbe
test
out
mov
pop
fldt
xchg
sbb
mov
insb
loop
mov
xor
movl
xchg
xchg
inc
cmpsb
aad
pop
dec
dec
in
pop
xchg
xchg
fcmovnb
stc
fmull
jnp
sbb
pop
jecxz
adc
sar
push
sti
mov
out
mov
xchg
sbb
jns
cmpsb
bound
jmp
clc
daa
add
dec
pop
xor
in
out
add
mov
mov
imul
hlt
cmpl
lods
and
jae
mov
pop
gs
xchg
test
sbb
mov
aaa
or
push
mov
xchg
mov
outsl
xchg
or
jnp
fstpt
jl
lock
les
jnp
mov
ljmp
mov
inc
arpl
add
aad
imul
fs
outsl
xchg
fildl
jnp
xor
imul
push
mov
pop
mov
loope
xchg
subb
lcall
nop
mov
pop
xlat
and
addr16
sbb
xchg
jae
aad
rcrl
xor
mov
bound
add
add
inc
dec
roll
mov
mov
sbb
pop
lret
orb
inc
xchg
jo
test
ret
imul
cltd
jmp
push
lahf
cmp
xchg
and
sub
insb
mov
xorl
mov
js
pop
cmc
pop
dec
sbb
lret
arpl
mov
shlb
movsb
adc
push
mov
jne
hlt
test
jmp
add
fadds
sub
or
or
mov
fldcw
cltd
sub
jo
fs
int
out
or
lea
test
enter
adc
mov
and
loope
jg
test
pusha
or
push
mov
mov
adc
repz
out
mov
xor
rcrl
out
push
and
pop
fidivrl
cmpsl
push
je
mov
fidivs
add
sub
mov
leave
iret
cwtl
clc
loop
mov
mov
movsb
dec
in
scas
jno
inc
lret
je
pop
cld
cmpl
les
jmp
add
mov
cwtl
sbb
orl
jmp
shrb
adc
pop
sub
shlb
jecxz
fildl
ficoml
mov
sub
jno
lahf
sbb
add
xor
sbb
in
ja
imull
pop
fdivp
xchg
sbb
sar
mov
push
pushf
gs
lods
push
inc
push
mov
add
scas
inc
leave
shlb
lfs
add
aas
loopne
add
push
shl
stos
pushl
dec
mov
add
out
mov
dec
sti
cmc
aas
bts
push
lcall
fstenv
lcall
orb
mov
cltd
in
aas
sbb
ficomps
jecxz
or
mov
in
shrb
das
imul
mov
fwait
xchg
les
scas
xchg
std
sbb
sub
rcl
mov
sub
jp
jge
jle
dec
or
scas
push
dec
jno
mov
pop
pop
pop
iret
repnz
or
scas
aas
mov
lret
insl
sbb
push
jmp
cmp
push
stos
lds
or
int3
mov
sub
test
movb
xchg
mov
mov
jmp
or
dec
adc
ljmp
sbbl
adc
dec
in
fidivrs
cwtl
pop
enter
mov
jge
mov
lcall
adc
daa
xor
gs
into
addl
js
push
rdpmc
lret
aad
xor
shrb
push
hlt
mov
mov
adc
sbb
fisttps
scas
data16
out
lret
xor
or
jne
xor
movsl
cmp
xchg
jb
mov
scas
inc
mov
fcmovbe
outsb
jmp
mov
imul
xchg
imul
enter
daa
ljmp
cmp
push
jno
cmpb
cmp
pop
jge
rorb
stc
das
jnp
lds
inc
sub
pop
js
lahf
adcl
jbe
push
orl
stos
push
es
sar
xchg
add
lock
cli
adc
gs
dec
sbb
notb
idivl
shrl
push
push
in
mov
pusha
hlt
arpl
jle
adc
ss
test
ljmp
arpl
dec
mov
ljmp
and
nop
cmp
rcll
dec
dec
ljmp
pop
mov
dec
and
imul
or
pop
hlt
cmpsl
je
addb
mov
push
stc
push
popa
sti
xchg
aas
das
and
pusha
pusha
test
inc
test
xchg
js
mov
out
stc
pop
mov
inc
lds
mov
movsb
mov
imul
cmpsb
push
sub
es
idivb
cld
jecxz
xor
push
cltd
xchg
sub
daa
mov
mov
imul
mull
or
nop
jmp
push
dec
push
mov
jp
dec
pop
and
cmp
jb
add
out
inc
and
xchg
sub
lahf
xchg
imul
jle
jmp
sbb
sbbl
xchg
cmp
pop
inc
faddl
and
cwtl
mov
into
gs
adc
pop
cmp
xchg
push
xorl
push
inc
jno
xor
push
push
push
mov
cmp
lods
inc
mov
aam
orb
ja
shrd
pop
lcall
adc
sub
fidivl
xchg
bound
shrb
sub
or
pop
mov
pop
sahf
daa
out
push
lods
inc
shrl
stos
inc
lcall
jb
scas
xor
and
jae
adc
xor
jbe
fsubs
mov
cwtl
push
xor
outsl
arpl
pop
mov
test
lea
xchg
push
cmc
adc
rolb
or
push
dec
pop
mov
jb
imul
mov
cld
dec
loopne
sbb
test
dec
push
xor
mov
cmpsl
and
pop
hlt
push
inc
mov
push
int
aam
clc
out
iret
data16
or
lret
outsl
push
call
ret
rcll
lds
repz
xchg
push
mov
xchg
mov
fistpl
and
cltd
sbb
ds
xchg
sub
xchg
in
sub
in
js
fs
xchg
iret
adc
aam
inc
cmp
test
pushf
lret
adc
ds
nop
mov
sbb
push
sub
mov
mov
mov
jnp
push
pop
mov
nop
loopne
std
sub
cwtl
add
fsubrl
hlt
add
jp
shll
pop
in
lea
cli
mov
mov
jae
addr16
add
idiv
shlb
adc
std
addb
sbb
inc
sub
xor
rolb
jae
dec
add
mov
xchg
aaa
xor
jo
or
std
aam
test
add
sub
push
lcall
loop
pop
dec
iret
es
xor
repz
add
std
xchg
arpl
sub
fsubs
sub
hlt
jl
or
and
adcb
inc
rcrl
sahf
xor
mov
mov
xlat
outsb
and
xchg
sub
mov
stos
push
lods
sbb
and
imul
into
hlt
adc
je
lock
ja
imul
ret
sub
hlt
push
xchg
and
sbb
xchg
jbe
xchg
test
mov
cmp
or
jp
ds
imul
xor
ja
cltd
jle
or
push
mov
inc
stos
sbb
fildl
pop
xor
in
out
pop
lock
in
fnstcw
lcall
popf
xor
into
sub
and
das
mov
loope
push
gs
es
adc
mov
mov
dec
sub
adc
cltd
jle
xorb
enter
and
xor
cs
add
jns
imull
mov
cltd
loope
call
xor
out
jecxz
fbstp
frstor
in
fistpll
cmp
out
loopne
fildll
fsubrs
pop
data16
cmp
iret
data16
insl
mov
lret
fadds
addr16
xchg
sub
sub
int
pop
test
addr16
shlb
mov
or
push
shlb
cld
or
cs
data16
cmp
je
je
fbld
mov
fnstenv
testl
bound
push
scas
ret
enter
stc
jmp
repz
aaa
into
mov
and
mov
add
mov
loop
stc
xbegin
fcoms
cmp
mov
lret
jne
mov
int3
mov
stc
mov
clc
loop
rcrl
cmp
mov
mov
mov
mov
data16
subl
popfw
or
lods
inc
aad
mov
mov
es
xor
add
ljmp
pop
dec
out
aam
pop
pop
jbe
mov
pop
xlat
lods
inc
or
push
in
adcl
inc
fucomi
jg
xchg
mov
testb
out
pop
mov
scas
mov
pusha
testl
pusha
add
sub
pushf
xor
das
and
sahf
call
jo
into
inc
fsubrs
or
push
mov
mov
xchg
cs
scas
inc
sub
call
fimull
leave
jle
mov
test
xchg
ss
into
gs
xor
pusha
arpl
pop
jnp
or
or
popa
cmp
scas
inc
xor
pop
stos
sub
pop
test
jmp
mov
mov
pop
pop
push
sub
ss
test
lods
mov
mov
and
and
sarb
lret
push
add
gs
js
push
insb
sbb
dec
outsl
lds
or
push
adc
pop
inc
sahf
dec
test
jb
sti
test
sbb
ljmp
ret
inc
lea
inc
dec
fistpll
jmp
sbb
out
test
mov
sub
cmpsb
sub
fcomps
push
dec
add
insl
xor
sub
mov
xchg
mov
scas
inc
loope
movsb
cmp
adc
pop
test
jg
sub
cmp
pop
rclb
mov
movsl
jle
dec
outsb
mov
mov
xchg
daa
mov
xchg
inc
int3
arpl
rclb
jbe
mov
mov
dec
in
push
fwait
xor
jmp
xchg
inc
fdivl
stos
xlat
outsb
in
jle
mov
pop
jp
pop
push
adc
repz
or
testl
jp
icebp
mov
test
mov
int3
adc
data16
addr16
pop
nop
jae
xchg
arpl
pop
lock
ss
push
add
imul
jne
stos
aas
jmp
sbbl
and
xsha256
cmpsb
adc
jnp
jo
mov
mov
icebp
mov
stc
hlt
std
xchg
call
in
xchg
loopne
repz
adc
xchg
adc
pop
test
das
dec
push
out
out
push
sub
add
and
loopne
sarl
aad
xor
shlb
cmp
sbb
stos
daa
mov
xchg
mov
mov
pop
lock
ret
or
outsl
jl
pop
repz
jg
in
outsb
test
popf
mov
aad
popa
mov
das
jecxz
push
in
push
sti
sub
sub
aad
fs
dec
loopne
jle
scas
sbb
mov
dec
loopne
pop
mov
das
iret
data16
aaa
rcrl
push
in
int
pop
repnz
mov
push
jmp
clc
xchg
sub
pop
xor
mov
inc
cmpb
cld
stos
fs
push
out
add
xchg
xor
fidivs
mov
loop
jns
shrb
mov
jl
lds
mov
mov
or
mov
mov
dec
in
pop
outsl
push
dec
in
out
xchg
jg
fsubrl
int3
arpl
in
adcl
push
cmp
mov
or
scas
cmp
mov
lock
mov
or
push
cmp
shrb
cmp
stos
xor
test
push
lods
scas
pusha
or
call
repz
and
faddl
in
insb
xchg
mov
push
test
js
inc
mov
mov
hlt
mov
dec
in
sub
pop
out
or
fiadds
icebp
mov
aam
popa
enter
cmp
xor
gs
jns
pop
insl
mov
shlb
arpl
adc
push
xchg
lods
inc
lds
pop
pop
xsha1
cmpsb
dec
fwait
fs
or
mov
cmp
inc
sbb
int3
xor
test
mov
xor
les
xlat
dec
push
into
gs
mov
pop
mov
movsb
adc
fists
lods
inc
inc
push
or
lret
rolb
cltd
ret
adc
mov
fs
mov
shll
xlat
or
into
cmp
daa
push
and
pusha
push
xchg
jg
push
lea
mov
test
movsb
fidivrl
adc
mov
mov
push
jmp
xchg
jl
subl
xchg
sub
jl
sub
hlt
ds
or
imul
sar
repnz
aaa
pop
shlb
ret
inc
inc
fnstenv
sahf
xor
mov
mov
mov
scas
and
ds
inc
jno
mov
jmp
dec
push
out
ret
cmc
aas
popf
xor
in
push
call
push
inc
jmp
jns
sahf
xor
xchg
xchg
dec
filds
int
mov
ss
push
push
ss
fsubl
test
dec
sbb
std
xchg
push
pusha
cmp
push
pop
lahf
mov
inc
fadds
inc
xor
jb
xor
push
test
test
stos
xor
sbb
pop
scas
pop
pop
rcrl
test
cld
ficoml
or
ret
pop
jg
mov
andl
gs
repz
inc
inc
sbb
mov
leave
mov
iret
loop
pop
lock
gs
sbb
je
nop
nop
xchg
sub
aad
cmp
in
dec
push
inc
mov
ja
shrl
je
jae
mov
mov
fcoml
test
sbb
mov
xor
enter
int
test
mov
push
out
jmp
jo
or
or
sub
sub
mov
dec
in
shrb
push
shrb
daa
repz
out
addb
push
mov
icebp
imulb
and
dec
loope
dec
dec
in
popa
insb
call
mov
sbb
sbb
mov
ds
pop
mov
pop
mov
fucom
ja
add
xchg
bound
lods
mov
xor
fcmovnbe
cmp
push
std
push
jmp
pop
dec
jo
cmpl
and
push
lods
inc
daa
and
popa
xchg
mov
mov
test
xchg
or
fwait
jg
xchg
sub
pop
mov
cs
pop
jo
shlb
insl
mov
mov
jl
or
sti
xchg
aas
ds
xor
lods
rcrl
aaa
into
mov
fsubrs
stos
leave
pusha
in
or
je
cmp
adc
push
jl
leave
outsl
mov
loop
test
jmp
adc
in
test
mov
xchg
xor
insl
arpl
mov
ljmp
mov
xchg
in
aam
outsl
movsb
cmp
outsl
call
pop
sahf
or
mov
cmp
dec
scas
sbbb
jle
jecxz
stc
sbb
sub
pop
dec
xchg
sub
pop
out
mov
mov
sbb
pop
xchg
sub
ljmp
push
sbb
mov
mov
movsl
arpl
stc
arpl
in
adc
xchg
inc
push
insl
add
pushf
mov
inc
rcll
fiaddl
jmp
js
fnsave
daa
mov
cmp
and
es
ret
pop
pop
mov
sbb
dec
jg
scas
outsb
xchg
or
adc
fwait
xor
lods
inc
sahf
inc
test
mov
cmp
and
adc
fistl
xsha1
cmpsb
mov
scas
inc
dec
fstl
test
rcrl
pop
mov
loope
test
mov
pop
mov
movsl
pop
repnz
or
popf
cmp
es
das
pop
sub
movsl
pushf
subl
scas
into
lods
aam
ficomps
mov
cmp
add
push
mov
sahf
add
lds
movntq
xchg
int
lods
inc
sbb
and
inc
pop
call
roll
popa
clc
cmp
push
movsl
push
mov
inc
mov
test
jmp
and
push
dec
in
cs
es
jp
les
xor
stos
cltd
pop
sahf
or
lret
out
stc
lods
add
xor
inc
fst
sub
lahf
pop
loop
mov
mov
ja
aad
inc
fneni(8087
in
gs
fidivs
ljmp
push
jb
mov
cmpb
call
daa
pop
sub
jno
adc
fwait
pushf
adcb
les
cmc
and
fs
in
into
gs
movsl
mov
pop
jp
mov
xchg
lods
clc
and
lods
inc
add
clc
inc
pop
push
in
mov
int3
fs
jg
xchg
and
nop
cmp
stos
lret
sti
fldt
push
adc
dec
pusha
idivl
outsl
push
jb
add
clc
rcrl
jmp
fstpl
fsubrs
xor
test
aad
add
lret
adc
cld
stc
jmp
inc
sbb
imul
jno
ljmp
out
insb
add
ret
hlt
lock
test
out
repnz
pop
push
xchg
outsl
mov
test
jne
enter
or
push
jmp
jbe
jno
sbb
inc
or
insw
mov
lahf
cwtl
outsb
add
stc
ds
xchg
loope
push
aad
xchg
sub
lock
gs
cmpsb
sbb
push
nop
mov
out
test
push
test
push
jb
jl
mov
in
andl
shrl
adc
dec
lahf
out
setbe
mov
fsubrs
add
rolb
xor
mov
cmpsb
lods
inc
call
repz
adc
push
inc
fdivs
es
insb
hlt
mov
mov
pop
xlat
mov
push
push
jno
push
xchg
loope
push
mov
push
jg
inc
test
push
and
mov
add
xor
sub
pop
cmc
mov
clc
mov
mov
out
sub
adc
shrb
jae
mov
cmpl
cmpsl
mov
pop
imulb
mov
dec
sub
add
lahf
jnp
xor
inc
fsubr
or
xlat
outsb
and
cmp
pop
sub
stos
stos
pop
push
jmp
mov
inc
out
add
xor
repnz
fldcw
loopne
imul
ss
out
sbb
or
pusha
cmp
and
pop
fisttpl
dec
jecxz
sbb
cwtl
fists
mov
sbb
sub
jg
mov
test
mov
call
sbb
mov
pop
mov
clc
outsl
mov
mov
inc
fldcw
add
pop
mov
fnstenv
inc
sbbl
lods
sbbl
inc
inc
fnstsw
pop
push
mov
dec
add
push
dec
lds
stc
mov
cmpsl
cld
xchg
fldenv
inc
fsts
mov
cmp
pop
and
jecxz
mov
jnp
sbb
sub
pop
mov
sar
xchg
ret
xor
lds
pop
repnz
jae
shrb
inc
fiaddl
out
xchg
mov
push
es
imul
outsb
add
iret
or
add
pop
andb
mov
or
loope
movsl
cmp
stc
stc
nop
sub
movsb
pop
xor
cmp
scas
jmp
fbstp
or
sbb
jno
sbb
jno
sub
fs
push
insb
les
testb
cwtl
and
pop
sarb
fwait
xor
and
fsubl
mov
fnstenv
imulb
sub
cli
xchg
sbbl
mov
adcb
stos
inc
gs
in
add
fs
sub
daa
mov
mov
mov
in
daa
jbe
roll
sub
lret
cmp
bound
jno
pop
lahf
jne
rcrb
or
inc
and
scas
testb
cwtl
call
jmp
imul
sbbl
fisubrl
stc
pop
in
xchg
sub
test
xchg
mov
jns
shrl
push
call
sub
mov
popa
imul
xchg
sahf
mov
aad
shl
mov
es
push
jmp
mov
mov
push
lods
fisubrl
sub
mov
xchg
sub
push
xchg
sub
es
cld
xor
sub
scas
out
push
jmp
ljmp
and
mov
xor
jno
xchg
sub
rcrb
insb
dec
loopne
pop
repz
lahf
xchg
sub
pop
int
xchg
aas
dec
jecxz
leave
outsl
push
sti
loopne
sub
jecxz
test
out
loopne
dec
stos
inc
sub
sub
or
fs
ficoms
mov
lock
sub
fyl2xp1
nop
or
stc
xchg
or
sub
stc
nop
adc
cli
dec
dec
mov
sub
cltd
adc
push
ljmp
cmp
push
cs
icebp
popf
dec
in
jp
and
adc
inc
iret
and
addr16
ret
xchg
push
pop
xlat
pop
repz
sbbl
push
push
popf
test
cwtl
das
adc
sbb
push
mov
repz
and
nop
jp
and
int
mov
pop
push
cmpsl
inc
lret
outsb
xchg
sub
nop
outsl
add
ljmp
cld
push
inc
pop
mov
cmpsl
cwtl
sbb
stos
jecxz
ret
pop
gs
jecxz
into
aas
adc
add
fs
insb
and
pop
xor
xchg
pop
sbb
mov
push
push
jle
fwait
mov
fs
pop
sbb
fs
xchg
pop
imul
push
aam
fsubrl
or
iret
jl
jp
dec
out
fs
daa
jbe
mov
mov
push
cmc
mov
xor
xor
mov
psubq
push
stos
inc
cli
ret
movb
adc
sahf
push
mov
and
cmp
and
push
test
leave
fsubrs
xchg
jb
sbb
mov
xchg
sub
pusha
mov
sbb
xchg
mov
pop
dec
filds
or
test
lret
imul
push
mov
fists
test
cmpsl
push
jmp
icebp
cmp
loop
out
test
cs
enter
lods
sub
into
call
mov
dec
and
lods
pusha
sbbl
dec
inc
fnsave
mov
hlt
xor
jae
push
sbb
mov
xor
sbb
testl
shl
js
sub
push
ljmp
mov
pop
or
mov
cmpsl
xchg
sub
pop
das
stc
nop
mov
ret
mov
jecxz
sub
lret
leave
push
in
add
inc
fcomp
mov
vmovd
enter
in
dec
lahf
mov
jne
pop
xor
movsl
cli
sbbl
sbb
add
fstps
mov
xchg
es
mov
pop
xchg
incb
mov
dec
out
adc
aad
mov
and
sub
dec
in
iret
jbe
stc
enter
pushf
in
or
das
lret
jo
adc
fimuls
jbe
nop
daa
icebp
adc
repz
xlat
outsb
sbb
fnstenv
jno
inc
xchg
int3
xor
mov
push
add
imul
adc
jbe
fidivs
xchg
leave
pusha
or
out
test
inc
fsubrs
push
sub
inc
dec
mov
inc
call
push
movsl
push
mov
call
mov
shlb
push
sbb
jb
lock
scas
mov
and
test
inc
pop
repz
jbe
inc
pusha
xchg
sub
pop
out
push
dec
ja
mov
subb
sbb
mov
cld
adc
insl
shlb
inc
and
lods
inc
xor
push
push
call
push
push
cli
xchg
adc
outsb
mov
or
jae
mov
xchg
aaa
cwtl
das
push
mov
lds
inc
lret
bound
pop
repz
sub
dec
mov
mov
inc
xchg
subb
bound
pop
sahf
test
gs
xor
xor
sbb
lock
lret
or
inc
into
fnstsw
lahf
lock
sub
cmp
outsb
jno
push
in
je
dec
loope
xchg
adc
jae
sub
outsb
add
mov
pop
pop
icebp
jp
sub
push
and
or
mov
ss
jg
shl
jns
sbb
mov
or
mov
repz
shrb
vcvttsd2si
jno
in
add
add
jns
loopne
and
or
jb
mov
cwtl
in
popf
xor
test
mov
cmp
mov
ret
or
dec
aad
jle
in
es
fcmovb
mov
hlt
sti
out
in
xchg
jp
lret
push
fs
jg
xor
test
mov
push
xor
inc
or
sti
xchg
mov
fcmove
popa
int3
jge
push
stos
in
lock
dec
mov
sbb
icebp
mov
or
xor
lds
icebp
mov
mov
sbbl
dec
es
test
dec
mov
cmpsl
jno
push
arpl
aam
test
pop
dec
pop
push
jmp
in
xchg
sbb
jnp
scas
subb
iret
in
shll
lcall
cmp
in
mov
addr16
ja
js
stos
inc
cmp
mov
outsl
lahf
cmpsl
pop
not
rolb
mov
cmc
mov
xor
inc
xlat
clc
jns
xor
les
fimull
sti
or
dec
jle
lea
lahf
mov
out
sahf
xor
xor
push
mov
in
dec
and
int
pushf
or
fs
fsubl
push
popf
out
js
mov
sete
xorl
fnstenv
ss
cli
xlat
enter
jg
dec
lods
js
inc
xor
jb
cmp
ficomps
inc
inc
jmp
lock
cmp
adc
in
cld
movsl
sbb
pop
aaa
fidivs
insl
mov
bsf
je
xchg
sub
pop
push
ljmp
or
jbe
ret
pop
or
jns
fldt
xor
fwait
jb
cmpsb
mov
xchg
sub
dec
loopne
inc
daa
sbbl
popa
push
push
add
ss
shll
push
jg
mov
shrl
jae
inc
mov
out
pop
pop
shrb
inc
xor
xor
clc
pop
push
cmp
int
shrb
lret
insb
add
jns
push
imul
push
incb
imul
fidivl
mov
sub
sbb
ds
sbb
xor
xor
or
pop
mov
js
repnz
repnz
adc
mov
adc
je
sbb
cmc
mov
xor
mov
fists
xor
aad
sub
lods
inc
jbe
test
adc
bswap
pop
lcall
xchg
outsl
mov
lea
push
cli
xchg
inc
out
inc
fimull
fs
scas
push
cmpsb
add
frstor
add
cli
inc
icebp
mov
dec
jbe
iret
data16
es
xor
adcb
push
aaa
into
inc
mov
jns
addr16
pusha
pop
xchg
insb
push
mov
mov
les
and
mov
mov
hlt
and
std
xchg
add
xchg
cmp
mov
dec
test
test
insb
pop
icebp
pop
pop
repz
movsb
cmp
out
dec
xchg
or
add
sbb
sub
into
pushl
clc
mov
fs
cmp
int
pop
dec
fisttps
pop
jo
clc
pop
and
jb
cmp
repnz
sub
mov
xchg
cmpsl
notrack
shrl
cmp
lods
outsw
push
fwait
int
ja
xor
pop
out
shl
mov
in
xchg
and
sub
pop
mov
push
loope
test
xchg
cs
cmpsb
call
scas
stc
sbb
push
dec
cmp
jge
icebp
mov
pop
lock
ja
cmpsb
test
ja
and
push
adc
fildll
mov
out
xor
mov
cs
sahf
pop
dec
mov
pop
pop
and
xchg
arpl
cmp
jns
orb
sbb
fldl
push
inc
mov
push
sbb
movsl
pushf
mov
and
inc
lret
mov
ds
mov
out
sbb
jne
insl
push
clc
cmp
push
lods
mov
mov
adc
data16
push
jmp
mov
fisttpl
mov
sub
lods
inc
sub
lret
shlb
add
sbbl
icebp
push
popf
and
cmp
lret
mov
fld
push
fidivs
out
negl
jb
xchg
movsb
cmp
imul
mov
mov
push
jge
or
jl
les
mov
es
insb
sub
cli
cmpsl
out
ss
pop
cmp
ljmp
neg
xchg
push
sub
pop
ja
sub
lret
cmpsl
out
gs
dec
fcompl
mov
jp,pt
xchg
loope
dec
dec
mov
ja
repnz
cmp
cs
add
push
aas
push
sarb
dec
push
mov
sbb
outsl
mov
testb
call
xor
jne
xor
adcb
out
call
outsb
add
outsb
dec
mov
jnp
rcrl
stos
inc
into
loop
jbe
lock
std
xchg
push
mov
mov
xchg
add
fstpt
rorb
and
pop
cmp
insb
xorb
lea
mov
loopne
adc
daa
mov
pop
xor
data16
xchg
test
inc
pop
and
popf
bswap
inc
shlb
ljmp
or
or
es
icebp
jne
xor
loope
sub
int
inc
mov
add
jae
rol
lret
dec
rclb
mov
icebp
push
out
fisubs
into
adc
jnp
inc
fistl
xchg
out
fwait
lds
mov
add
sbb
push
imul
outsl
mov
push
data16
inc
std
jl
and
cmp
lods
push
jne
push
or
lret
testl
mov
jg
sbb
cmpsl
mov
js
js
stc
pop
cvtpi2ps
inc
aas
or
mov
dec
pop
push
ja
inc
outsl
in
pop
sub
lcall
mov
xor
testb
cld
and
mov
mov
push
out
sbb
mov
mov
popf
xor
sub
sbb
cltd
cli
pop
test
dec
pushf
jge
aam
test
mov
adcb
std
push
sub
push
xor
pop
movsb
adc
in
sub
aas
push
cmp
neg
mov
jbe
scas
jecxz
stos
cmp
add
jl
aam
sub
mov
and
jle
ljmp
cmpsb
shll
sbb
cmpb
jmp
lods
push
inc
test
push
popl
jno
cwtl
sbb
add
stos
push
pushf
inc
insl
sbb
fld
ja
clc
repnz
fistpl
arpl
xchg
out
ljmp
repnz
hlt
lock
xor
cmpsb
nop
xchg
faddl
jecxz
ljmp
incl
sti
add
je
ffree
fisttpl
cs
or
jns
jne
inc
aad
dec
dec
xor
fldt
cmpsl
push
jp
mov
jp
ret
or
jmp
mov
mov
cmp
cmp
addb
ficomps
imul
pop
sahf
fiadds
sub
cltd
push
insl
inc
jns
addr16
insl
push
stc
sbb
pop
dec
or
add
in
xchg
xchg
clc
decb
lea
jmp
inc
lahf
ds
xchg
das
mov
xchg
dec
xchg
adc
xchg
mov
push
and
and
ljmp
push
mov
rorl
or
repz
insl
idivb
outsb
int
or
cmp
push
inc
jp
mov
mov
pusha
xchg
or
xor
adc
pop
aaa
adc
mov
adc
fnstenv
push
sub
jl
repz
lret
enter
mov
mov
lea
ret
mov
mov
mov
cmc
cmc
sti
or
fcom
dec
jl
lds
sub
jl
inc
cmp
sbb
xchg
xor
xchg
ss
xchg
ds
and
mov
shrl
xchg
dec
and
aad
pop
das
scas
jl
popa
lock
arpl
lea
aam
jbe
and
sub
stos
sub
xchg
inc
ljmp
push
popa
add
lea
sub
int3
mov
ja
bound
push
fnstsw
push
pop
pop
jbe
inc
sub
add
inc
aaa
pop
dec
dec
cmp
dec
mov
insl
jo
and
lahf
mov
ss
lods
ds
loop
test
fwait
clc
pop
movsb
ss
in
xchg
loopne
jnp
and
ret
xor
push
out
dec
or
aam
fimull
push
inc
xchg
xchg
inc
mov
mov
lea
jnp
pop
insl
imul
inc
sbb
cmpsl
xor
imul
roll
lock
adc
fs
or
push
pop
adc
addr16
pop
arpl
mov
jbe
mov
cmp
and
mov
outsl
jmp
cli
dec
inc
adc
hlt
cmc
pcmpeqw
inc
push
add
scas
xchg
notl
cmp
test
loop
outsb
ljmp
movsl
xor
shrb
cmp
scas
shl
fucom
jo
mov
mov
mov
mov
lret
das
dec
adc
jb
mov
daa
jo
sbb
outsb
push
mov
mov
lock
xchg
inc
scas
cli
mov
das
lcall
icebp
mov
and
icebp
cwtl
ss
pop
sbb
loope
mov
add
roll
dec
adc
jb
sbb
or
xchg
mov
test
leave
hlt
pop
jns
dec
in
idiv
xchg
cmp
jne
and
fdivrl
fstpt
lahf
aam
jmp
mov
mov
dec
cltd
aas
aaa
sbb
cmpsl
jno
repnz
jge
dec
adc
mov
push
lahf
sbb
pusha
dec
inc
insb
shl
gs
adc
inc
lock
scas
fwait
inc
test
out
jg
lret
imulb
pop
jae
xor
inc
movsb
push
mov
cmp
add
push
inc
stos
das
or
stc
popa
sbb
push
pop
push
into
pop
add
mov
pop
je
fldcw
rclb
adc
push
mov
mov
cmpl
pop
xchg
scas
xor
pop
in
outsl
push
jge
sub
mov
mov
inc
or
and
mov
fdivrl
loope
hlt
or
xor
lea
faddl
dec
push
dec
cltd
mov
mov
adc
mov
cmc
or
iret
fucomp
fcoms
add
std
cmpsb
mov
and
mov
jae
movl
insb
cmc
fistps
sbbl
push
push
pop
sbbb
inc
aaa
dec
inc
shrb
jl
pop
inc
fldl
xchg
xor
xlat
xchg
xor
dec
push
and
fistl
push
int3
xor
push
fnsave
and
jmp
inc
stc
cmpb
shlb
mov
cmp
and
pop
push
imull
xchg
rcrl
insl
jp
lret
xchg
shr
or
xor
ss
mov
ret
fsubrs
in
sbb
dec
arpl
jne
fwait
sub
jp
mov
leave
fwait
pop
add
cmp
pop
xchg
nop
rep
in
fdivrp
imul
lret
xor
sub
inc
les
fcom
inc
ret
roll
ljmp
rorb
ret
lahf
cmp
push
sub
xor
aas
in
pop
mov
adc
inc
std
mov
xor
mov
inc
jae
fwait
jnp
das
ret
test
jmp
fistps
add
aas
sbb
xlat
imul
es
adc
test
jae
sahf
or
ljmp
loope
popa
into
stos
cmpsl
movsl
stc
fdivr
js
mov
popf
dec
or
cmpsb
icebp
test
stos
xchg
pop
icebp
mov
jecxz
hlt
sbb
loope
fnstenv
and
repnz
dec
dec
cmp
aam
mov
push
mov
sbb
hlt
test
add
push
stos
xchg
dec
icebp
jns
movsl
inc
in
in
hlt
xchg
push
jl
xor
and
dec
cli
inc
push
add
mov
xchg
adc
push
ret
sub
mov
mov
xchg
movsb
pop
lret
sti
and
int3
push
adc
sti
mul
pusha
mov
ret
xor
mov
jmp
dec
gs
mov
ret
pop
fwait
jnp
fbld
pushf
movsb
sub
in
dec
fwait
stos
icebp
jnp
cli
sbb
cmc
add
xchg
loop
sbb
loop
and
inc
test
dec
mov
sub
loop
dec
mov
fdivr
xlat
lods
mov
popf
and
aaa
inc
add
add
les
inc
cmp
adc
pop
out
jle
push
xor
dec
inc
add
insl
rolb
pop
add
cli
das
add
dec
sbbl
add
sarl
add
mov
repz
stos
inc
inc
ja
adc
fcomi
mov
adc
inc
subb
mov
in
xchg
rorb
pop
mov
lcall
and
add
inc
xlat
mov
pop
cmc
fdivrl
pop
stos
std
jl
xor
sub
cmpsl
push
cltd
xor
test
dec
ficompl
decb
aad
sub
dec
repz
mov
ret
repz
sbb
into
ja
xchg
clc
cwtl
push
imul
sub
pop
fidivrl
or
leave
scas
sub
icebp
pop
iret
push
inc
mov
xchg
les
jnp
pop
pop
ret
pop
mov
cltd
std
clc
xchg
sub
pushf
sub
mov
sub
pop
xlat
cmp
or
leave
scas
sub
pop
iret
push
inc
add
cwtl
idiv
and
dec
push
sbb
dec
jne
cmpsw
insb
pushf
xor
mov
add
ret
js
aaa
stos
in
sbb
int3
mov
imul
mov
adc
cltd
xor
xor
xchg
bound
mov
scas
mov
insl
lahf
aad
int
shl
repz
aam
fcoms
add
xchg
sub
aaa
pop
scas
test
cmp
scas
test
out
inc
push
test
movsb
dec
fdivl
cwtl
out
out
mov
fcoml
cs
pop
pushf
inc
pop
xor
cwtl
mov
dec
shrl
dec
out
xor
das
inc
insl
add
push
dec
out
lcall
aam
test
and
inc
pop
jae
test
jl
pushf
pop
into
out
lcall
and
je
aas
mov
ficomps
psubsb
sbb
jnp
arpl
pop
hlt
imul
mov
loopne
xor
sub
insb
pop
xor
mov
rcll
test
mov
das
push
sub
dec
loope
jg
ret
mov
dec
loopne
rcll
decl
sbb
out
dec
jne
jmp
pop
gs
mov
jno
sti
test
mov
cld
popf
xor
outsl
scas
inc
mov
ret
into
arpl
mov
jmp
mov
or
lods
jl
sub
in
lahf
xor
into
adc
in
push
out
imul
jbe
cmpb
xchg
mov
sbb
lods
inc
and
loope
imul
js
call
iret
ficomps
mov
out
or
gs
daa
mov
mov
ficoms
add
es
popf
popf
aam
iret
mov
call
jbe
inc
cli
xchg
jne
out
test
es
and
xchg
mov
leave
pushl
fsubrs
sub
lahf
lcall
mov
aaa
mov
mov
sbb
pusha
std
xchg
push
jecxz
imul
push
negl
bound
enter
mov
fnsave
out
test
cwtl
das
sbbl
jecxz
leave
mov
adc
mov
cld
and
mov
cmp
jle
incb
jmp
int3
sbb
loope
cmp
fstps
mov
lock
jge
rcll
bound
repz
movsb
test
std
mov
lahf
xorl
pop
shl
jnp
jle
sbb
jp
loopne
mov
das
jb
cmp
out
xchg
mov
add
pop
idivb
adc
xor
jne
out
je
mov
sahf
mov
mov
xchg
adc
lods
out
orl
orb
or
or
add
jae
jae
mov
dec
mov
out
mov
xchg
mov
mov
xchg
addr16
mov
sub
ret
stos
and
movb
adc
adc
push
popa
xchg
scas
mov
dec
and
jl
mov
mov
ss
dec
sarl
fistps
adc
xchg
sub
xor
fs
pop
push
test
cmpsb
fsubrs
mov
sub
gs
sbb
mov
fwait
push
pop
testb
dec
int3
in
cmp
and
mov
mov
xor
jno
je
cmpsb
and
jae
into
push
mov
jmp
jae
and
repnz
and
std
sbbl
push
aaa
into
mov
sbb
push
pop
dec
loope
js
jl
ret
pop
cmpsl
ds
push
ljmp
and
dec
fbstp
out
or
dec
in
popf
mov
fnsave
loope
mov
xchg
lahf
xor
push
in
loopne
shrl
add
stos
cwtl
and
and
mov
fidivs
and
ja
fmuls
inc
inc
std
shrb
push
xchg
sub
fcom
imul
pushf
xor
or
ds
mov
jae
adc
push
repnz
out
lock
int
popf
hlt
stos
inc
out
sub
push
pop
or
popa
js
or
int3
scas
inc
out
inc
imul
bswap
cmpb
add
lret
ljmp
pop
mov
rcll
mov
ficomps
fidivs
and
lcall
repnz
sahf
push
movsl
decb
pop
lock
ret
push
mov
jmp
pop
out
cwtl
repnz
pop
sahf
mov
enter
clc
in
sbbl
add
lock
mov
xchg
or
cmc
mov
cmc
mov
mov
jl
or
push
test
bound
dec
inc
sub
inc
add
lahf
inc
mov
lea
sbb
jns
out
push
fstpl
ss
out
xchg
dec
mov
cmc
outsb
and
ljmp
xor
addr16
leave
mov
push
subb
or
mov
push
sub
push
jl
ljmp
or
mov
stc
loope
or
push
scas
inc
andb
xchg
aam
rolb
or
jge
pop
out
negl
mov
jmp
pop
hlt
and
mov
fildl
jmp
jnp
ret
imul
dec
test
lods
mov
pop
lahf
loop
adc
insl
dec
ss
movsl
imul
shr
mov
sbb
lds
leave
shll
outsb
add
and
pop
lock
and
sbb
sbbb
decl
xor
test
stc
and
sbb
pop
dec
cmp
repz
test
or
mov
sub
fnstsw
rcl
sbb
rorl
shrb
loope
sbb
mov
shll
jge
repnz
xor
mov
dec
jmp
or
in
cmp
and
mov
js
das
pop
in
jnp
cwtl
addl
xchg
divb
sbb
mov
jmp
ds
imull
test
and
mov
scas
and
leave
pusha
and
inc
fsubrs
xor
and
test
jecxz
adcb
scas
inc
mov
je
ja
mov
sbb
and
loop
mov
cmpxchg
ljmp
inc
aad
mov
aaa
clc
push
out
or
cmp
sub
leave
jl
sahf
lds
cmp
insb
add
into
xlat
mov
xchg
and
xchg
sub
inc
push
pop
jmp
jbe
jge
xchg
fnsave
jnp
sbb
mov
lahf
cmp
xchg
dec
rcr
and
add
out
jbe
xchg
add
in
jp
mov
fldl
jb
cwtl
jp
sbb
push
mov
sbb
popa
mov
les
cmc
inc
dec
loopne
mov
xchg
and
pop
cmpsb
cmp
pushf
pop
test
ja
xlat
outsb
dec
es
pop
pop
lea
dec
xchg
sub
xchg
xor
mov
test
aam
pop
mov
mov
jne
xchg
sub
ds
jle
loope
int
stos
jb
rcrb
xchg
sub
push
repz
sub
sarl
cmpsl
or
shrb
push
into
xchg
pop
cmc
je
mov
push
out
cmc
xlat
fwait
push
or
jg
iret
adc
repnz
pop
repz
repz
jns
push
mov
scas
es
mov
movsb
cmp
in
shlb
gs
add
aaa
addr16
xor
add
and
jb
push
mov
mov
xchg
inc
aas
mov
scas
loope
pushf
shlb
adc
xchg
rcl
push
add
pop
lock
gs
jmp
mov
adc
or
xor
cmpsl
je
sub
xchg
sub
add
outsl
xchg
sub
adc
and
jnp
jae
push
arpl
mov
sbb
pushf
xor
fdivs
into
lret
shlb
ss
push
push
or
sub
js
outsl
cmp
pop
testb
xchg
push
sub
dec
testb
mov
ja
and
in
test
or
push
das
dec
fbstp
out
jae
cmp
ret
xchg
add
sarl
loopne
ficoml
jp
pushf
dec
xor
lret
jns
dec
cwtl
sub
leave
outsb
xchg
cs
ljmp
xor
inc
fstps
in
subl
roll
test
and
dec
lahf
inc
xlat
push
insl
xchg
mov
mov
int3
fldl
xor
mov
faddl
out
adcb
pop
ds
lret
aad
daa
mov
enter
sub
lcall
jge
in
and
stos
jne
hlt
mov
xchg
xor
xor
or
push
push
call
or
outsl
adc
cwtl
xor
lea
jg
adc
mov
xchg
subl
add
jle
repnz
int
cltd
xor
dec
jecxz
mov
push
lods
lds
mov
jp
dec
fbstp
data16
out
sahf
xor
push
in
int
js
out
out
pop
add
es
inc
inc
add
mov
mov
adc
test
pop
dec
loopne
push
arpl
movsl
mov
pop
repnz
stc
pop
hlt
jns
jl
mov
mov
fisubrl
or
out
test
sub
xsha256
cmpsb
push
subb
mov
and
cmc
test
or
lods
pop
pop
adc
mov
imul
add
jnp
inc
lods
mov
les
leave
pusha
xor
roll
cwtl
mov
cmp
lods
mov
jge
icebp
stos
ds
or
scas
pop
push
nop
pushf
sbb
dec
xchg
packuswb
lcall
test
gs
enter
pop
mov
jne
leave
push
imul
sub
dec
pop
sahf
jns
in
stos
in
fbstp
push
xor
scas
mov
sub
mov
add
int
sbb
int3
xlat
push
add
shr
daa
out
test
imul
adc
das
push
xchg
xchg
dec
in
xchg
scas
sbb
in
out
pop
pop
mov
lea
or
jl
js
mov
fistpll
xchg
xchg
out
test
subl
test
test
sbb
dec
pop
das
adc
jmp
pop
arpl
mov
cs
shlb
cmp
mov
jbe
push
cmp
pop
jg
pop
mov
mov
scas
inc
cmpsl
jg
imul
pop
jne
jl
xorb
pop
daa
les
ds
addr16
xchg
mov
adc
inc
mov
divl
cbtw
jo
lret
sti
cmpl
mov
xchg
test
adc
sub
lret
sub
addr16
mov
lock
jbe
pcmpgtw
push
mov
sti
cmpsb
movsb
test
subl
rclb
push
imul
add
mov
testl
sub
push
sarl
cmc
sub
int
mov
cmp
addr16
pop
and
loopne
or
push
es
mov
push
shrl
add
adc
mov
cmpsl
scas
bound
pop
cmp
mov
js
or
push
and
je
xor
imul
sbb
mov
pop
sti
jp
xchg
mov
movsb
cmp
aad
fildl
aas
or
xchg
and
jae
pop
sbb
mov
mov
loopne
dec
test
pop
jmp
repnz
cmpsl
idiv
imul
inc
loop
cmpsl
or
iret
cmp
enter
int3
cli
jle
jmp
xor
sbb
mov
cmp
sub
push
ret
cmp
hlt
sbb
or
inc
lahf
adc
inc
insl
add
or
in
cvttps2pi
dec
sub
sub
push
cmp
scas
jecxz
mov
push
jb
fidivl
xchg
ficompl
testl
xchg
lea
push
push
dec
mov
mov
sbb
fidivrs
pop
xchg
ljmp
push
xchg
pushf
xchg
mov
mov
inc
push
or
adc
testl
in
or
inc
inc
push
xchg
call
xor
fdivl
gs
mov
sub
mov
outsb
add
aam
xor
notb
jo
inc
push
aaa
loop
inc
push
mov
jne
pop
idivb
sub
ss
mov
int
adc
mov
sub
mov
cld
sti
je
mov
das
out
dec
dec
ret
sub
mov
fdivp
inc
enter
fcoml
inc
jge
mov
das
insb
add
dec
addr16
mov
xchg
xor
push
shlb
aaa
mov
nop
xchg
inc
fcmovnb
mov
cmp
aaa
scas
std
pop
mov
movsb
or
out
fsubrs
adc
fisubs
aaa
lret
stc
jmp
mov
push
add
xor
dec
adc
pop
cmpsl
fisubrs
xor
jecxz
fstl
lods
in
or
pop
sahf
xor
push
into
sbb
ja
testb
add
mov
mov
mov
push
add
test
xchg
inc
insb
add
into
cmp
enter
into
push
push
and
imul
pop
js
push
lahf
lret
inc
push
dec
jmp
and
cmp
and
xchg
inc
or
dec
mov
inc
jmp
adc
push
addl
pop
aas
imul
test
lock
and
adc
cli
mov
cmp
or
testb
pop
out
les
sbb
push
daa
jmp
jl
je
mov
sub
dec
imul
popa
imul
jno
pop
mov
test
fcoml
into
gs
insl
mov
aaa
negl
mov
dec
jecxz
lods
mov
sub
mov
mov
scas
pop
jne
jle
push
int
out
jns
jns
jo
outsl
hlt
fistl
mov
cmp
adc
add
bnd
dec
cmc
mov
imul
shlb
repnz
push
imul
mov
pop
addr16
and
inc
mov
push
test
sub
xchg
test
push
lods
mov
mov
push
xchg
pop
cmc
les
push
xor
inc
mov
sub
jae
ret
mov
mov
push
mov
sub
mov
xchg
scas
cld
lods
mov
sbb
sbb
mov
push
aaa
cmp
sahf
jp
in
in
dec
loopne
jg
rcrb
cwtl
mov
lret
movsl
sbb
jne
sub
mov
jmp
sub
arpl
mov
jg
test
and
xor
scas
data16
adc
rcrb
xchg
cmp
mov
insl
outsb
loop
aad
bound
jle
add
shlb
push
or
arpl
cwtl
cmp
mov
std
loope
or
data16
push
stos
insl
xchg
inc
fnsave
jb
and
and
jle
jge
pop
inc
fmuls
jae
cmp
adc
mov
xor
lods
aam
filds
adc
xor
inc
shll
or
pushf
pop
das
mov
pop
mov
jnp
pop
loop
adc
add
jmp
push
adc
gs
rcrl
hlt
mov
and
dec
repnz
mov
cli
and
bound
insb
iret
std
cmp
mov
cmpb
xchg
mov
or
rolb
js
mov
mov
xor
xchg
push
and
jno
jle
das
push
inc
add
lea
pop
stos
call
push
shl
stos
adc
adc
ret
hlt
mov
cmp
xor
int3
pop
movsl
cmp
xchg
ljmp
jmp
aas
xchg
pusha
orb
jp
inc
cmpb
jecxz
test
in
ret
xchg
push
scas
aas
xlat
mov
xchg
mov
shl
or
call
jb
add
sub
xchg
int
mov
pop
mov
sti
mov
xor
push
aad
mov
cmpsb
cmp
pop
cs
dec
mov
mov
sti
pop
lock
pop
push
pop
add
jmp
divl
cmp
dec
inc
fldl
call
add
out
jge
jae
jle
fisubrs
sbb
rol
mov
add
stos
cmp
or
out
inc
inc
iret
imul
lods
sub
push
enter
shl
sub
iret
push
inc
xlat
dec
mov
add
dec
fildll
cs
mov
iret
insb
pop
sti
adc
cwtl
inc
loop
push
jo
add
pop
xchg
xor
or
mov
pcmpgtw
pushf
into
jmp
sbb
push
test
jge
jne
dec
lcall
jg
lea
and
out
scas
xor
filds
pop
test
or
cltd
dec
stos
into
jae
jae
cmpsl
movsb
add
xchg
inc
fsubs
rorb
adc
movsl
xchg
adc
mov
int
or
orb
push
xchg
cli
adc
mov
push
ret
or
jp
out
adc
sbb
and
pusha
mov
fcmovnb
lea
ds
dec
aad
pop
lahf
push
sbbb
xlat
stos
sbb
lret
ret
inc
fstps
push
enter
jb
addl
movsb
jmp
testb
xor
lds
sbb
mov
hlt
js
jo
fsubs
push
mov
test
insl
inc
jmp
je
nop
lea
jns
cmpsb
cmp
adc
pushf
pusha
inc
and
push
sub
xor
mov
stc
push
rorb
insb
push
aas
or
cmp
stos
insl
and
sti
sub
and
imull
and
mov
jb
cmc
mov
pusha
shlb
pop
or
mov
fsub
lock
jo
test
sub
insb
imul
outsb
ss
mov
sub
cltd
push
adc
out
cs
pop
adc
add
sti
jle
shrb
push
mul
repnz
insl
ja
lcall
js
cmp
frstor
xchg
clc
icebp
lcall
jne
mov
cmp
cmp
mov
mov
aas
adc
mov
inc
fisubrs
imul
je
das
jmp
jp
sbb
push
dec
cs
cwtl
orb
dec
jmp
and
subl
inc
xchg
sub
xor
pop
shlb
jmp
push
sbb
pushf
pop
lock
cmp
cmc
sbb
sbb
sbb
test
pop
cmp
push
mov
xchg
lock
std
pop
cwtl
into
in
in
lock
orb
adc
lcall
and
hlt
lea
mov
bound
adc
fidivrs
scas
and
inc
adc
repnz
pop
scas
popa
cmp
xchg
shl
mov
mov
sarl
fmull
push
aam
pop
nop
ds
js
hlt
jns
lea
cmp
push
pop
mov
push
lcall
ss
push
icebp
cmp
inc
popf
les
lcall
dec
xor
cli
and
adc
lea
push
pushfw
popa
dec
cmc
and
fst
push
xor
dec
aad
jo
outsl
aaa
sub
lods
mov
cmp
push
out
push
mov
sub
test
lahf
ja
scas
pop
pop
or
pop
push
js
mov
cmp
sub
out
test
jno
cmpsb
outsl
ret
xchg
xor
pop
fists
xchg
scas
aas
and
push
add
in
and
ja
call
inc
cs
jp
sbb
ja
mov
flds
movsl
lods
fisttpll
and
xchg
sub
or
sbb
dec
mov
cwtl
adc
lods
clc
test
sbb
lods
rcl
and
pop
loopne
rorb
test
imul
cmp
cmp
sahf
adc
clc
or
jo
mov
in
imul
out
movsb
mov
mov
pop
movb
cmp
jg
or
dec
xchg
std
imul
sbbb
hlt
rorl
push
sbb
lods
inc
sub
mov
fldcw
mov
inc
test
xor
pop
pushf
lods
mov
sub
in
in
ror
neg
xchg
lcall
mov
push
sub
pusha
lret
bound
imul
mov
imul
sbb
int
dec
popa
fidivl
lret
xor
lret
sbb
lcall
call
inc
gs
cmp
orl
mov
orb
cmp
out
loopne
mov
not
repnz
fnstenv
insb
dec
jecxz
pushf
negl
rcll
hlt
lret
clc
or
arpl
sub
out
inc
xor
lods
mov
icebp
and
push
jecxz
pop
jno
lcall
xlat
mov
ret
ja
mov
ljmp
bswap
xchg
fiaddl
sahf
out
push
lret
lret
sbb
or
in
xchg
jbe
xchg
ret
push
in
jmp
mov
in
adc
test
cs
popa
hlt
jno
pop
mov
scas
sti
outsb
fcmovne
ret
int3
rolb
les
jge
into
inc
shr
aad
lods
add
shll
xor
pop
pusha
mov
mov
iret
dec
sub
enter
mov
ds
xchg
jecxz
loop
dec
aad
mov
cmpsb
bnd
and
lahf
mov
aaa
and
fs
xchg
stos
rcll
jle
aad
int3
fistpll
inc
filds
or
mov
xchg
aad
test
push
mov
sbb
cltd
inc
push
adcb
shrb
dec
out
mov
pushf
add
mov
aam
out
mov
mov
imul
out
or
mov
int
or
clc
andb
shrl
ret
hlt
xchg
add
dec
mov
cmp
inc
ffree
roll
sub
and
xchg
jno
shlb
mov
mov
xor
and
cmp
push
and
imul
jle
movsl
scas
loope
insl
push
in
lret
push
xchg
fs
push
lods
test
fldt
jno
loopne
into
repnz
push
imul
mov
out
push
rclb
jno
andl
in
push
test
sahf
cmp
cli
and
sub
int
not
mov
das
mov
push
xchg
pushf
int
push
push
repz
cmc
xchg
fisubrl
push
fsub
push
popa
cli
inc
push
mov
cltd
clc
sbb
gs
imull
mov
mov
int3
call
jle
std
clc
fisttps
xchg
sub
and
and
cmp
mov
and
mov
inc
imul
push
add
dec
aam
cmpsb
sbb
imul
dec
pop
inc
and
int
mov
jg
hlt
lods
in
test
xchg
sub
jge
and
pop
data16
dec
data16
jg
mov
fdivl
jp
clc
pop
arpl
push
mov
add
and
pop
call
inc
mov
dec
cmc
mov
daa
jno
imull
fcoml
lods
or
leave
loope
sti
ret
aam
cmc
sbb
adcb
dec
in
inc
inc
cwtl
xorl
mov
pop
mov
add
add
jl
cli
pop
int
cmp
jecxz
lret
das
add
mov
in
and
xchg
sub
mov
fildll
push
lcall
cmp
or
repnz
pop
pop
lds
add
imul
nop
rcrl
jne
std
lods
xchg
sub
xlat
sbb
mov
or
popa
mov
xchg
xor
mov
sbb
or
adc
aad
int
stc
test
enter
test
cli
dec
mov
fidivrs
enter
push
ljmp
push
fisubl
shlb
add
xchg
mov
or
mov
clc
sbb
loopne
add
mov
ret
cmp
cmp
aas
cs
jl
or
dec
ss
outsl
test
mov
stos
inc
or
adc
dec
mov
cmp
shlb
lahf
mov
and
fistl
jbe
mov
int3
push
or
int
in
outsl
mov
xor
mov
xchg
bound
xchg
mov
es
mov
imul
xor
shrl
aas
and
scas
or
cmp
mov
test
loopne
insb
aam
mov
imul
cwtl
das
in
shrl
push
mov
inc
xchg
out
xchg
popa
aad
xchg
in
movsb
xlat
xchg
testl
push
mov
les
push
mov
or
call
or
pop
cmp
mov
and
fisttpll
xchg
push
stos
leave
adc
rcl
mov
rcll
add
outsb
mov
xchg
or
leave
pusha
fwait
out
je
orl
ret
pusha
xchg
push
in
mov
adc
sub
pop
add
daa
popf
pop
jecxz
pop
adc
int3
inc
pop
in
jb
jle
dec
dec
xchg
mov
mov
push
mov
inc
pusha
jo
xchg
push
enter
aad
inc
adc
mov
and
mov
inc
imul
cmp
jno
adc
sbb
in
xchg
xor
out
pop
sbb
jl
popa
movsl
push
pop
movsb
bound
pop
ret
xchg
xchg
push
insl
sbb
dec
mov
pop
cmc
jae
adc
cmp
dec
in
pop
push
in
cmp
ja
lea
mov
cmpsb
movsb
cmp
sbb
mov
int
mov
imul
mull
mov
movsb
out
xor
negl
ret
jne
faddl
xor
ror
pusha
adc
aad
mov
fcoms
repz
imul
adc
xchg
js
sbb
lds
testb
adc
mov
aas
rclb
scas
sarl
iret
int3
daa
mov
rcr
test
outsl
orl
xchg
jnp
mov
mov
dec
in
mov
adc
aam
xor
cmpsb
mov
pop
out
repz
and
movsl
test
lret
inc
fdivrp
inc
sbb
cmp
outsb
lock
inc
sbb
les
aam
jg
xchg
loopne
mov
mov
and
leave
fsub
outsb
addr16
push
jae
ds
imul
mov
adc
orb
ds
xchg
pop
dec
int3
addl
mov
sti
and
scas
and
insb
inc
cmp
mov
sbb
xchg
or
mov
push
lret
cmp
fucomip
xchg
inc
mov
sahf
rcrl
adc
push
cmpl
sub
pop
popf
xchg
xchg
pop
or
mov
lock
adc
cmpsb
call
push
cmp
xchg
dec
mov
push
shrb
lahf
loope
jne
rol
repz
xchg
data16
jns
xchg
mov
add
cmp
or
push
in
pop
or
aam
jge
or
pop
scas
jg
xchg
sub
lahf
mov
or
das
nop
cmp
rclb
fwait
pusha
hlt
add
and
push
test
add
popa
push
adc
jecxz
push
aam
xor
inc
icebp
aad
sub
repz
jecxz
xchg
adc
and
mov
add
aad
cmp
call
andl
cmp
jmp
push
cs
popf
sub
dec
inc
fnstsw
adc
fcmovnbe
dec
sub
mov
push
dec
ror
mov
pop
icebp
ficoml
js
push
sbb
lahf
aad
lea
mov
fcmovne
pop
jae
js
dec
push
mov
mov
pusha
loope
xchg
mov
aam
mov
cmp
lods
adc
cmp
push
jl
xchg
pop
mov
pop
fbstp
dec
push
mov
loopne
and
scas
dec
xchg
inc
xchg
sub
pop
pusha
aaa
ficoml
into
insl
or
cmp
popl
adc
subb
push
test
mov
xor
mov
xchg
inc
inc
les
orb
adc
clc
sahf
mov
mov
pop
and
lods
pop
sahf
stos
test
out
dec
pop
mov
fidivrs
in
push
sub
pop
icebp
sahf
sbb
psllw
push
xchg
mov
insl
jg
out
mov
sbb
sub
es
dec
mov
adc
or
add
dec
inc
lods
mov
or
inc
mov
push
jmp
out
mov
dec
adc
shrl
fs
push
inc
xchg
ret
lret
decl
adc
xchg
ljmp
mov
sbb
out
xchg
inc
xor
cwtl
mov
cwtl
sub
dec
dec
sub
fstps
jns
outsb
jns
cmc
cli
pop
sub
mov
mov
inc
aam
out
ljmp
movsl
mov
shl
ret
cli
mov
pop
dec
pop
mov
leave
adc
movsl
jae
out
xchg
repnz
or
cwtl
and
or
fiaddl
sbb
adc
in
pushf
and
jg
xchg
out
cld
divl
cmpsb
mov
lea
lahf
push
jo
or
add
test
lret
rcrb
fs
xchg
inc
popf
lods
jb
add
movsl
cwtl
ljmp
loope
inc
push
sub
inc
leave
imul
js
mov
aas
arpl
int3
xchg
shrb
add
jns
jns
sbb
pop
mov
xor
xorb
pop
and
sub
ja
dec
and
cs
insl
jb
adc
sbb
ja
stos
sub
lret
std
loop
mov
dec
lcall
loopne
fwait
pusha
sbb
stos
rcl
adc
jmp
incb
jmp
lret
xchg
fsubrs
mov
pushl
lahf
out
xor
test
mov
sub
adcb
dec
testb
xlat
xchg
sub
pop
sbbb
inc
fld
test
test
es
adc
in
sub
shrb
push
dec
loope
mov
xor
cmpl
or
decl
dec
aam
dec
pop
shl
aad
cmp
shl
lds
das
push
daa
in
ds
mov
stos
jmp
nop
stos
test
test
out
xlat
stc
adc
cmp
inc
daa
sbb
outsb
je
in
pop
or
fs
xor
jge
sti
orl
inc
xor
loopne
out
les
in
imul
aad
mov
out
jp
lods
aas
xor
aad
push
xchg
addr16
into
aad
xor
xor
int3
pop
call
or
mov
and
sbb
pop
out
cli
add
mov
and
pop
test
mov
and
mov
adc
iret
imul
enter
testl
out
cmc
mov
or
or
mov
repz
fwait
ss
aam
push
inc
out
or
cmpsb
mov
aas
push
push
sub
sbbl
push
notl
add
sbb
mov
rcrb
xchg
scas
jp
in
or
xchg
stos
mov
cmpsb
les
cltd
xor
sahf
fildll
frstor
ds
xor
sbb
imul
or
stc
mov
mov
lods
stc
ljmp
push
jl
push
inc
fldcw
data16
cmp
adc
and
sar
roll
aam
sbb
add
mov
in
int3
loopne
js
rcrb
sbb
sbb
lret
mov
enter
inc
sahf
mov
xor
imul
jmp
adc
add
pop
dec
scas
sbb
addr16
xor
sbb
daa
rcrl
movsb
es
test
in
jbe
xchg
ds
jg
adc
mov
lcall
cmp
out
dec
xchg
jg
out
outsb
repnz
outsl
add
or
cld
cmp
jae
push
jnp
bound
mov
or
add
mov
jne
in
in
sbb
xchg
lahf
mov
nop
pop
sbb
or
mov
xor
add
dec
dec
pop
fs
test
in
fidivrs
rcrl
mov
in
mov
mov
decb
and
mov
sti
lea
xchg
imul
mov
lods
lahf
ret
adc
sub
addr16
cmpsl
insb
js
lret
out
test
ret
lds
push
xor
mov
jg
lods
ja
cmp
outsl
jmp
in
mov
shrl
jns
xchg
dec
mov
jbe
sbb
mov
cld
test
repz
std
cmp
pop
aaa
sbbl
inc
fcoms
aaa
mov
fwait
pop
loope
mov
repz
sbb
rol
sti
subl
push
push
adc
loopne
xor
mov
pop
adc
pop
andl
push
outsl
leave
sub
lds
cmpsl
lds
push
bswap
fnstcw
or
in
mov
cs
pop
mov
dec
pop
ds
enter
inc
outsl
movb
lcall
in
dec
sbb
jge
mov
test
xchg
add
sub
test
xor
jbe
inc
sti
cmpsl
ja
std
in
mov
loopne
and
cmpsl
jnp
out
mov
xor
subl
rorl
out
cmp
sub
and
dec
lahf
mov
jnp
pop
cs
es
adc
jmp
mov
scas
fsubrp
pusha
test
arpl
jo
adc
mov
sbb
push
push
push
lods
xchg
mov
dec
jl
jle
mov
xor
or
rcll
or
cmp
lcall
test
in
cmp
imul
pop
scas
aam
mov
jl
lods
inc
out
iret
pop
cmp
loop
cmpsl
or
in
adc
jbe
lcall
push
repnz
aas
bound
jecxz
popa
adc
push
outsb
jb
mov
ljmp
arpl
popf
test
lock
jl
mov
ja
scas
ret
test
push
sbb
ret
in
jle
mov
aaa
push
mov
incb
inc
test
das
jae
inc
adc
popa
scas
rcrb
loope
test
and
fildll
mov
into
loop
sub
mov
inc
xchg
mov
push
xor
scas
ja
and
xor
inc
fprem1
notb
pop
mov
movsl
dec
pushf
andl
test
clc
mov
add
nop
jb,pn
imul
imul
out
lods
movb
out
sbb
mov
imul
lcall
jl
mov
in
jo
sbb
push
insl
test
push
adc
shlb
and
inc
sub
mov
pushf
push
je
popf
cs
lock
xchg
xor
mov
insl
inc
je
pop
cmpsb
daa
adcb
pusha
dec
push
and
popf
push
pop
aas
xchg
add
xor
or
cmp
jge
and
inc
hlt
inc
mov
add
xchg
dec
pop
repz
insb
cltd
cmp
mov
add
pop
mov
inc
inc
test
inc
pop
adc
adc
push
xchg
inc
cmp
loope
stos
rcl
cltd
outsb
mov
cmpsl
in
or
repnz
inc
push
sub
outsl
cld
push
loope
imul
push
sbb
or
add
sbb
fldl2t
ss
lahf
lods
imul
shl
es
das
aaa
adc
out
and
out
pop
test
rcrb
mov
xchg
outsb
sub
xorl
cmpsb
in
mov
fld
mov
inc
iret
sti
mov
nop
bound
pop
repz
sbb
or
scas
inc
push
ja
jne
shlb
sbb
mov
inc
xchg
call
mov
xchg
lahf
std
iret
loope
jge
xor
xchg
mov
or
mov
dec
int3
in
push
imul
popa
testl
jle
push
inc
mov
mov
add
mov
xchg
push
dec
dec
out
jge
ljmp
and
pop
das
movsb
or
or
pop
movsl
loop
fnstcw
push
mull
mov
xor
push
adc
mov
adcb
hlt
dec
out
cli
pop
insb
xchg
arpl
inc
jg
inc
xor
cmp
fs
xchg
push
mov
jbe
dec
enter
stos
adc
cmpsl
inc
cmp
decl
mov
jbe
add
mov
pop
mov
jo
mov
adc
sub
push
pop
cltd
hlt
jl
aam
sub
push
orb
and
lods
aam
pop
pusha
dec
outsl
push
clc
mov
mov
jg
pushf
pop
mov
rorb
push
out
cmc
rclb
inc
sub
nop
bound
mov
xchg
repz
push
push
movsl
sahf
stc
sub
insb
out
cmp
and
add
dec
or
rcrb
movsb
cmpsl
es
pop
jb
les
mov
cmp
imul
cwtl
imul
jbe
pop
xor
push
sub
and
adc
adc
jo
cltd
xor
es
test
subb
mov
mov
add
filds
mov
data16
cmovs
sub
pushf
nop
lea
lods
addr16
inc
pop
lock
js
push
xchg
push
rcrl
fwait
jbe
popa
shrl
repz
std
jg
lds
xchg
mov
repz
or
mov
loopne
xor
inc
ret
out
sbbb
push
popf
jmp
loopne
inc
dec
negb
das
sub
rdpmc
in
jmp
test
test
push
stos
mov
cmp
decl
fwait
inc
push
cli
cmp
jge
pushf
rep
sahf
dec
sbb
into
or
stos
push
push
sub
aaa
cmp
stos
sub
sub
int3
popf
mov
jo
scas
lock
and
inc
mov
adc
outsl
adc
xor
fisubl
inc
lods
ljmp
insb
mov
call
mov
sti
mov
jle
clc
xchg
mov
dec
data16
ss
mulb
popf
ss
xchg
movsb
xchg
repz
popa
sub
mov
icebp
js
mov
movsl
sbb
out
test
testl
test
out
dec
xor
jl
scas
mov
pop
mov
mov
test
sub
jns
out
add
loop
dec
out
cmpsl
or
cs
pop
xchg
stc
sub
in
cld
sbb
ds
ret
ja
ret
push
add
sbb
push
shll
fcoml
and
cld
pop
repz
inc
inc
fcompl
lahf
out
cmp
loope
call
test
mov
sbbl
sbb
aam
outsl
cmc
mov
pop
xchg
popf
aaa
push
iret
mov
add
std
out
mov
push
xchg
add
adc
sahf
lods
pop
jo
dec
push
aam
inc
mov
sahf
sti
xchg
mov
pushf
pop
aad
sbb
mov
cmpsb
repz
jp
cmpsl
sbb
sbb
fsub
mov
add
fisubrs
and
or
dec
ljmp
jge
sahf
and
pop
inc
mov
aad
push
mov
cs
mov
icebp
mov
test
test
mov
js
fildll
and
or
int3
jo
sub
leave
pushf
cmp
subb
mov
mov
fisubrl
and
xchg
mov
mov
xlat
jb
xor
inc
test
push
xchg
mov
dec
mov
inc
and
daa
xchg
lods
sbb
jae
into
stos
es
ret
stc
je
mov
jp
push
add
aam
cmp
inc
pop
mov
mov
jnp
inc
lods
adc
gs
fwait
stc
inc
pop
lods
mov
lock
jns
mov
jae
cmp
push
or
xchg
cmp
in
mov
fstl
push
push
add
cmp
test
rorl
fildll
adc
push
xor
cld
xchg
aas
push
popa
fmull
sbb
lret
or
inc
pop
shll
adc
xor
call
es
call
loope
or
out
jp
push
popl
jne
jmp
adcb
xor
push
mov
inc
icebp
or
dec
mov
cmc
sbb
call
mov
push
outsb
ja
out
cld
adc
mov
fidivs
dec
das
mov
lock
push
and
mov
je
adc
das
lret
mov
and
pop
mov
rolb
scas
fimuls
inc
and
inc
and
mov
outsb
int3
popa
gs
out
push
push
hlt
fdivrs
test
jbe
pop
lds
jl
loop
or
cmc
pop
sti
rcl
in
mov
mov
iret
repz
in
cmpsb
jp
and
jnp
add
imul
or
test
mov
pop
inc
jne
mov
push
mov
ficompl
cmp
leave
sbb
lret
mov
cmc
push
popf
or
iret
jl
dec
mov
mov
lret
rcrb
inc
scas
rcrb
or
mov
jle
paddusb
dec
inc
test
stos
lcall
aas
mov
xchg
sbb
xchg
loopne
jno
repnz
inc
in
cmpl
stos
mov
dec
in
jb
mov
rcrl
push
pop
mov
pop
mov
adc
les
rolb
add
mov
insl
pop
mov
push
mov
sbb
mov
cmp
aaa
pop
jle
jp
cwtl
pop
mov
nop
daa
inc
into
jnp
sub
mov
repnz
adc
mov
push
stos
push
xor
arpl
xor
imul
in
fisubs
out
cwtl
ljmp
mov
or
mov
ss
jmp
push
cltd
addl
mov
arpl
push
int
jno
stos
xorb
mov
movsb
mov
xchg
cmp
fwait
repnz
in
call
test
sbb
mov
pop
pusha
cmpl
add
dec
test
mov
add
popa
mov
cmc
cmpsb
cmp
fcomip
inc
je
adc
xchg
mov
stc
or
cmp
cmp
bound
mov
jnp
stc
xchg
cmp
mov
pop
xchg
inc
add
push
repnz
adc
fwait
cwtl
outsb
shlb
jno
jo
xchg
jb
adc
shlb
dec
shrl
cmp
in
or
scas
pop
xor
repz
jnp
sub
fwait
imul
sub
sahf
mov
or
jnp
shrl
scas
jge
cmp
pop
sub
mov
sbb
cld
outsb
loope
fs
pop
movsb
inc
lea
adc
mov
int
add
jne
pop
mov
push
fsubrl
arpl
and
rorl
int3
aas
ret
in
add
add
xor
jb
dec
inc
fdivrl
das
pop
out
lret
and
mov
pop
aas
sub
cmpsl
clc
add
jns
cmp
sbb
ds
inc
add
mov
in
mov
fdivl
and
xchg
lods
inc
push
mov
dec
lods
push
mov
lods
fadds
cmc
and
cmc
rorl
inc
addr16
mov
sbb
or
xor
cmp
mov
out
xor
mov
addr16
popw
iret
lods
push
sbb
repnz
xchg
cltd
std
das
xchg
sbb
divl
scas
icebp
xchg
sbb
pop
add
stos
movsb
and
rcrl
fcoms
mov
rcrb
fninit
or
aas
push
mov
pop
adc
pop
leave
xchg
inc
out
scas
movl
sub
aam
push
sbb
ficomps
call
pop
negb
or
and
push
ficomps
mov
add
mov
sbbb
int
and
enter
ret
mov
and
lret
sub
inc
push
decl
cmp
jno
xlat
js
or
loope
mov
insb
mov
sahf
jp
inc
nop
repz
mov
mov
jp
and
push
adc
jmp
sub
cld
outsl
mov
pop
add
dec
daa
and
loop
xchg
mov
fnsave
jne
shrb
jge
fcomps
push
imul
dec
les
inc
jmp
mov
loop
cmp
ss
pop
jle
popf
cmp
pusha
fimull
or
or
mov
sarb
jle
loope
inc
xchg
sub
ss
mov
xlat
pop
fists
fsubrl
sub
in
cltd
xchg
cmp
inc
test
das
dec
in
daa
mov
mov
add
iret
mov
add
pop
jle
mov
pushf
dec
loopne
jns
sub
jle
popf
cmp
sub
cmc
aaa
cltd
and
pop
scas
mov
cmpb
repnz
mov
in
dec
aaa
add
lods
xchg
inc
jbe
jne
jae
or
xchg
mov
jecxz
daa
sbb
xor
cmp
sub
pop
imul
bound
testl
dec
xchg
and
mov
xchg
push
cwtl
daa
leave
test
mov
stos
mov
mov
add
adc
and
pop
sub
ljmp
mov
mov
sbb
mov
insl
add
adc
jno
push
out
cld
xor
cli
shll
insb
cld
fstpl
jns
pusha
movb
pop
in
mov
mov
out
shll
adc
call
pop
loop
cmpb
pusha
outsb
mov
add
mov
dec
les
rcl
jae
loope
ret
pop
test
jo
fcomi
aam
inc
or
repnz
sti
mov
fistpl
add
mov
mov
aad
leave
in
loop
loope
rorb
jl
sub
cmp
loope
push
in
push
test
movsl
in
out
lock
test
xchg
jae
ficompl
sbb
or
data16
mov
popa
aam
pop
decl
imulb
push
xchg
ret
das
repnz
sub
sbb
ss
push
cwtl
sub
rol
andl
sbb
mov
xor
pusha
insb
cmp
pop
testl
and
push
adc
aas
leave
repnz
jmp
lods
inc
pop
test
pop
mov
lea
xorb
fwait
or
jp
xchg
sub
shrl
pop
mov
mov
popa
je
mov
orb
les
stc
stos
inc
sub
cwtl
and
fwait
add
call
xor
sub
dec
mov
xchg
push
mov
sahf
loop
bound
add
imul
inc
popf
mov
cld
ret
inc
push
dec
stos
or
jmp
test
xchg
cmp
add
and
stc
jg
sub
jecxz
nop
dec
add
pop
pop
movsl
addr16
pop
cmp
pop
dec
movsb
lret
clc
in
fwait
into
popa
out
test
movsb
lahf
pop
jle
and
sahf
movsl
stc
mov
int
push
sub
dec
mov
cmp
cmp
push
insb
mov
movsl
lds
loope
pushf
sub
or
and
aam
push
insb
pop
sbb
dec
inc
inc
xlat
add
lock
or
pop
cmc
push
sub
nop
mov
dec
pop
lds
xchg
sbb
sbb
sbbb
je
adc
repz
fadd
clc
adc
sbb
xchg
js
sahf
and
pop
stos
mov
sbb
std
dec
in
xchg
arpl
sahf
adcl
clc
pushf
or
or
sbb
add
mov
adc
out
pop
nop
lea
mov
or
jle
jb
lcall
loop
cmp
adc
popa
fwait
into
push
test
repz
fcoms
fimuls
push
icebp
jnp
cmp
ret
pushf
xchg
sub
shlb
je
mov
add
or
insb
divl
addr16
out
lods
mov
fsubs
or
lcall
inc
in
mov
repnz
inc
sahf
cmp
aad
cwtl
rcrl
stos
or
mov
sbb
int3
ret
in
sbb
pop
cmpb
push
xchg
jmp
lea
pop
push
lods
jp
andb
push
cmp
inc
dec
stos
dec
push
test
lods
ja
repnz
es
jbe
adc
fcmovne
sub
testb
add
pushf
xor
xor
jb
xchg
adc
jne
lods
outsl
push
fcomip
cmpb
mov
aaa
mov
insl
jmp
xchg
mov
lahf
ss
sbb
les
cmp
imul
push
aam
xchg
inc
pop
sti
adc
mov
inc
mov
mov
adc
inc
gs
xor
sub
sub
cmp
in
lock
pop
sbb
mov
push
mov
xchg
data16
pop
lock
scas
testl
mov
out
inc
xlat
dec
roll
lret
or
loopne
pop
mov
sbb
push
cli
cmp
gs
sub
mov
fbld
insl
or
je
hlt
sub
es
dec
out
jnp
pushf
in
loop
sub
outsb
popa
inc
test
int3
pop
xor
jb
cmp
pushf
adc
lods
loopne
push
ljmp
lock
sti
push
sub
sahf
insl
pop
filds
adc
xor
addl
loop
stos
test
leave
test
inc
cmp
sub
sahf
pop
stos
repnz
push
test
mov
stos
ret
push
mov
shl
jb
ret
ja
shll
shl
mov
mov
xchg
xchg
mov
add
xchg
aas
in
mov
movsl
fcmovne
mov
pop
repz
add
pop
mov
mov
push
sub
pop
aaa
into
shll
xor
in
daa
cmpsb
popf
pop
mov
call
jb
mov
lret
adc
enter
xchg
inc
repz
mov
sbb
hlt
adc
cmp
dec
jmp
nop
sub
sbb
xchg
popf
sbb
stos
cmpsb
inc
out
fs
fucomip
cmpsb
mov
xor
mov
andb
cmp
aas
mov
lods
inc
push
add
push
pop
xchg
dec
sbb
fs
jmp
inc
shrl
xchg
or
andb
outsl
sbbl
gs
pushf
andl
andb
adc
push
or
aas
xchg
in
jle
outsl
xorl
cld
xchg
sub
mov
pop
jmp
and
popa
xor
push
out
addb
add
mov
push
or
ss
inc
ret
jb
add
movsl
jns
jmp
cmp
repz
xorb
adc
mov
cmc
cmc
jl
jns
repnz
pop
int3
xchg
sbb
adcb
xchg
mov
into
rcrl
bnd
jl
adc
loopne
xlat
inc
cmpsl
push
clc
loop
movsl
jecxz
sub
push
in
xor
cmpsb
ret
push
add
push
cltd
shlb
lds
and
adc
adc
test
inc
cmpsl
mov
scas
sub
lahf
into
mov
pcmpeqw
into
in
mov
icebp
int
loop
test
pop
push
imul
iret
flds
mov
shlb
push
xor
fstpt
jns
mov
enter
ret
fisubrs
push
pop
jbe
insb
stos
call
jg
ljmp
int
inc
incl
inc
popf
mov
fcmovnu
and
mov
jns
push
add
aad
cwtl
mov
stc
xchg
mov
fidivrl
add
mov
popa
and
stos
cli
scas
pusha
popf
xor
sub
jge
ss
cmp
push
jp
jmp
mov
jnp
int
test
inc
jb
aas
in
cs
fdiv
mov
jbe
add
jmp
cmp
das
dec
push
shlb
lret
js
xchg
stos
popl
or
push
sub
xor
xchg
dec
mov
mov
hlt
rcll
ja
lret
dec
loop
rorb
out
in
je
mov
mov
mov
popa
clc
in
and
into
xchg
mov
push
enter
or
inc
rcrl
test
ret
sub
fwait
repnz
orb
gs
outsl
cmp
mov
loop
rclb
test
mov
jmp
cmp
nop
mov
out
fisubl
je
fcomip
scas
cmp
jne
jg
inc
inc
mov
rclb
shlb
cld
and
adc
test
pushf
xlat
adc
int3
sar
aam
xchg
inc
out
mov
sahf
jno
cli
sbb
jo
ja
mov
es
fucomip
cmp
bound
pop
cmp
scas
pop
cs
inc
stos
dec
in
cmp
in
adcb
and
stos
mov
orl
sahf
jecxz
jecxz
adc
mov
jle
xchg
dec
adc
dec
dec
and
daa
shrb
sub
jae
mov
jl
ds
in
scas
pop
jne
insb
sub
xchg
ljmp
sbb
mov
push
jno
rcl
mov
or
lahf
sub
sti
fisttpll
movsb
xor
lods
lock
adc
adc
mov
sahf
aaa
mov
fistps
mov
js
bound
inc
sahf
ret
outsl
jbe
imul
call
call
cmp
sahf
jge
mov
dec
xchg
out
lcall
sbb
jb
mov
decl
push
in
out
fsub
cmp
or
shrb
arpl
ret
shr
getsec
pop
push
std
loop
loop
and
xchg
adc
sub
bound
imul
or
inc
movsl
icebp
xchg
cli
lgs
sahf
icebp
adc
add
adc
std
cmp
lock
push
out
popf
and
bound
inc
inc
sub
nop
pop
inc
jnp
clc
jb
add
sbb
push
pop
inc
std
mov
cmp
adc
outsb
sub
cmp
aas
bound
jecxz
jmp
jo
mov
sbb
jp
clc
maxps
pop
inc
inc
cmp
dec
jo
dec
daa
mov
cmc
jae
mov
mov
inc
clc
jbe
sub
cmpl
scas
mov
loope
inc
fsubs
add
xchg
mov
and
inc
movsl
scas
in
lret
dec
fwait
or
dec
mov
outsb
out
adc
sbb
nop
imul
dec
test
inc
out
lods
xor
test
cmp
les
fdivl
fsubl
fwait
sub
cltd
testb
iret
dec
jbe
cltd
mov
insb
cltd
lea
aad
clc
mov
fadd
or
sub
mov
mov
lea
xchg
add
pop
cmp
sub
lcall
adc
repz
orb
aad
sbb
scas
inc
pop
mov
popa
sbb
mov
mov
andb
mov
sti
pop
fwait
xchg
cwtl
jae
je
test
adc
fs
mov
sub
outsb
pop
or
sbb
fcoml
jne
add
xor
bound
lods
fnstcw
mov
dec
out
and
inc
push
xor
xchg
shr
adc
nop
bound
jns
or
jnp
loopne
inc
lcall
cmpl
pop
or
lea
lock
sub
xchg
mov
dec
cmp
jo
popa
fsubrl
or
shrb
mov
sub
sbb
into
xchg
dec
addr16
inc
inc
rcrb
or
xchg
push
inc
repz
push
in
pop
pop
adc
fadds
lock
aas
jp
mov
repnz
fdivl
clc
sahf
jns
sti
stos
mov
or
add
ret
adcb
divb
or
adc
push
cmc
jae
ror
aad
int
jo
ret
dec
insb
pop
cli
test
imul
mov
jo
sbb
cli
inc
push
pushf
inc
incl
mov
and
push
es
pop
mov
and
dec
repz
mov
cmc
inc
inc
lods
cmpsl
repnz
rclb
test
xchg
enter
and
repnz
dec
pop
dec
jl
jns
sub
push
or
mov
adc
jge
shll
addb
pop
mov
jg
sub
outsl
ret
jbe
insb
mov
in
ds
sub
jae
add
test
jle
lock
sbb
clc
inc
push
xchg
call
pop
ret
hlt
jnp
lds
inc
scas
cld
bound
sbb
je
movsb
das
and
xchg
mov
add
xorl
and
pop
aaa
ficoml
idivl
inc
lods
sti
js
adc
inc
stc
mov
popa
pop
jp
in
adcb
mov
or
adc
std
push
dec
sub
xchg
dec
inc
out
cwtl
ret
std
cmp
ficoml
aaa
mov
sbb
int3
xor
mov
mov
sub
out
int
adc
mov
rorl
out
xchg
pushf
or
shlb
or
mov
mov
xor
cmp
in
dec
loope
cmp
add
jp
add
mov
and
dec
jb
jo
mov
jns
andb
ds
push
push
std
jo
dec
mov
pop
loop
fwait
cmpsl
xchg
ds
xor
scas
or
in
aad
xor
mull
mov
gs
cli
sub
lahf
int3
mov
xchg
pop
sbb
repnz
loop
js
push
sub
inc
insb
pop
imul
pop
sbb
sbb
lock
sub
shlb
adc
mov
sub
scas
inc
cmpl
mov
lret
xor
and
dec
cli
or
and
push
jmp
xchg
test
pop
push
mov
mov
xor
aaa
test
xchg
aas
js
mov
mov
adc
fldenv
push
test
mov
sbb
jp
and
in
jg
gs
test
int3
jne
cld
xchg
test
add
and
jge
sbb
jns
cwtl
cmp
out
js
addr16
add
pushf
push
fsts
fcompl
fcomps
xchg
jne
leave
and
lock
je
mov
lret
sub
xchg
mov
les
lods
xlat
stos
pop
cmp
pushl
pushf
fbld
arpl
xor
inc
mov
daa
xlat
and
or
pop
cmpsb
out
out
and
mov
mov
in
cmp
fs
or
add
outsb
test
adc
cmpsb
in
lcall
sub
aaa
or
pop
xor
pop
inc
mov
xchg
cmp
fistpl
repz
inc
push
out
pop
sarb
add
unpcklps
fwait
mov
leave
loop
iret
sar
add
sub
xor
jge
push
inc
inc
sbb
aad
add
adc
cmpsb
adc
add
lcall
push
sub
adc
fstpl
negb
dec
mov
cmp
nop
or
xor
lcall
sahf
pusha
ror
fs
mov
stos
pop
sbb
insb
sarl
dec
aam
push
sahf
jae
loopne
lahf
xchg
bound
les
and
xlat
cmp
test
movsl
inc
or
cmp
or
cmc
adc
popf
sub
sti
sub
pop
xchg
dec
cld
mov
inc
out
pop
call
gs
inc
outsl
daa
out
fs
bound
scas
add
push
in
test
stos
jne
movsb
mov
fdivrs
das
adc
jo
out
in
xchg
pop
mov
xchg
rcrl
push
fsubrs
arpl
or
push
push
or
sbb
mov
adc
jbe
sub
sarl
and
sahf
and
lea
xor
jl
mov
xchg
movsl
jmp
and
test
lret
xlat
outsb
test
mov
test
das
inc
cwtl
repz
push
push
cmp
xchg
pusha
call
addb
pop
repnz
jnp
dec
jmp
repnz
pop
pop
pop
mov
stc
dec
cwtl
stos
mov
jp
jne
andb
or
jge
pop
mov
cmp
pop
pop
cmpsl
mov
push
hlt
fsubrp
imul
lds
shlb
mov
xchg
arpl
adc
mov
xchg
std
lds
jmp
adc
in
lods
pop
cmpsl
repnz
pop
and
loope
mov
xchg
sub
je
push
out
mov
inc
xchg
xchg
xor
push
sbb
nop
jb
lahf
insl
rcll
and
xchg
mov
loop
and
clc
pop
cmpsl
out
test
jg
scas
or
test
pop
icebp
cmp
fistps
mov
jns
dec
adc
xchg
pop
sbb
dec
or
mov
ja
fwait
mov
mul
cmpw
or
rolb
adc
sub
ret
dec
mov
bnd
rol
pop
add
jecxz
cmp
repnz
sbb
pop
in
cs
fidivrs
outsl
jle
arpl
test
add
xchg
jecxz
ret
and
jno
decb
outsb
adc
push
pop
stc
cmp
pop
lds
adc
in
jae
adcl
or
les
jg
cmp
sub
jo
mov
or
mov
jge
pushl
insb
sti
xchg
pop
push
or
dec
dec
sbb
mov
aam
sbb
ds
mov
lahf
mov
aaa
inc
call
jns
fwait
jne
mov
push
cmpsb
pop
xor
jp
cmp
mov
gs
push
jne
das
xor
lds
std
xor
in
int
xorb
cmp
xchg
sbb
sbb
pusha
xchg
sahf
mov
inc
xchg
cmp
stc
popa
inc
fistpll
imul
mov
fists
xor
test
jp
mov
push
push
adc
loope
or
jecxz
std
outsb
jl
and
cmp
xor
out
fcoml
cltd
mov
xchg
hlt
sub
mov
ret
adc
rclb
das
loopne
or
jmp
es
rcrb
jo
mov
push
xchg
cltd
xor
cli
pushf
push
sub
jns
movd
cmp
or
unpckhps
dec
loop
movsb
fisttps
xchg
pop
dec
mov
mov
les
cmp
je
push
scas
push
dec
xchg
add
mov
mov
mov
adc
push
jns
push
push
inc
jle
push
js
push
and
pop
mov
jae
insb
fs
push
inc
jg
repz
jb
xchg
cwtl
mov
in
cmp
sub
pop
jae
mov
or
subb
mov
sbb
sbb
jmp
out
out
xchg
adc
test
stc
or
test
outsl
test
cmpsb
outsl
push
jp
and
or
out
pop
insl
adc
mov
imul
mov
adc
sbb
pushf
mov
xor
sahf
xchg
imul
jbe
loop
int3
dec
pop
dec
flds
icebp
jp
je
push
mov
dec
pop
inc
stos
std
push
fwait
xor
inc
cltd
call
adc
sahf
testl
mov
je
scas
jb
scas
jns
in
out
xchg
sub
jp
push
mov
xchg
movsl
int3
shl
jnp
push
cltd
popa
sub
sahf
jg
insl
in
out
push
loope
fdivp
xchg
dec
scas
aam
adc
out
popa
popa
cmp
add
jbe
and
sbb
cwtl
nop
or
lock
inc
add
sbb
loope
jge
aam
mov
data16
fmuls
testl
movsb
and
hlt
mov
pushf
xchg
loop
aam
adc
mov
out
out
les
dec
jge
lret
or
into
jp
out
lahf
push
dec
cmp
jne,pt
fsubp
je
into
sbb
mov
dec
sbb
mov
mov
mov
sbb
aaa
pop
jo
push
dec
sbb
cmpsb
sub
xlat
shlb
les
push
xchg
out
adc
push
dec
mov
nop
fisttpll
or
imul
gs
mov
mov
std
loop
dec
shrl
es
lods
aam
pop
mov
or
cmc
lret
xchg
lahf
mov
mov
mov
and
in
mov
fnstenv
aas
les
mov
sahf
push
sub
sub
clc
aam
out
mov
test
sbb
push
cs
aad
int3
inc
jl
mov
pop
pusha
aaa
mov
movsb
pushf
dec
outsb
or
inc
jmp
rclb
cltd
popa
mov
pop
les
xor
mov
pextrw
dec
shll
lods
into
subl
lret
pop
inc
fadd
mov
shll
pop
adc
jb
and
cmp
xor
jae
mov
mov
pop
push
mov
mov
pop
pop
inc
mov
out
or
test
xlat
fbstp
jb
insl
add
jae
loopne
cmc
mov
daa
jns
dec
inc
xchg
sti
fwait
enter
outsl
or
mov
push
mov
ret
insl
je
sub
sub
sub
lret
jle
mov
repnz
xchg
xchg
inc
xchg
pop
fidivrs
iret
stos
add
push
jl
xchg
in
adc
loop
loopne
pop
push
push
pop
ja
and
cs
icebp
inc
arpl
inc
push
mov
call
rcrl
jae
mov
mov
pusha
outsl
je
fwait
mov
sbb
dec
mov
jmp
push
movsl
lret
jbe
xor
aas
stos
mov
mov
bound
inc
shrl
mov
test
inc
sub
xor
test
adc
sti
nop
cmpl
jnp
scas
rcrb
loopne
add
push
aam
xor
xchg
mov
pop
lds
lret
pop
cmp
daa
jne
data16
pop
andps
push
sbb
iret
outsl
jg
mov
stos
test
and
cwtl
aam
call
push
jb
push
fnsave
pop
lret
sti
push
aam
gs
pop
fnstenv
sbb
das
xchg
les
sub
jae
jp
clc
js
add
hlt
mov
fcomip
sbb
in
xchg
mov
leave
fldt
or
mov
int
mov
sti
or
shr
loop
push
inc
int3
add
aas
and
out
sub
in
mov
and
pop
add
sbb
add
test
sub
push
or
mov
int
testl
btr
xchg
mov
and
cmp
js
sbbb
mov
sbb
test
jns
fnstenv
mov
mov
out
pop
out
mov
jnp
stos
sub
dec
loop
dec
enter
je
gs
out
mov
inc
push
cmp
out
hlt
mov
outsb
mov
pop
adc
pop
xchg
pmullw
mov
testb
or
fwait
mov
xchg
movsl
cmp
icebp
dec
pop
adc
push
pusha
loop
pop
jbe
add
cli
scas
pop
cmp
fdivp
imul
push
mov
sub
cmpsb
push
jnp
xchg
lret
es
nop
cltd
lock
lea
push
dec
mov
cltd
mov
fists
or
aaa
into
dec
arpl
xor
int
scas
pop
out
movsl
push
pop
pop
movswl
inc
add
je
enter
shlb
ret
aam
sbb
pop
mov
scas
cmp
adc
adc
or
dec
addr16
jo
nop
lods
fisubs
shll
cmp
js
sbb
mov
iret
test
sbb
inc
adc
jno
push
daa
into
int3
arpl
inc
stc
sub
mov
push
pop
adc
js
testl
jl
jns
dec
mov
lock
out
iret
cmp
mov
jecxz
out
xchg
mov
negl
arpl
enter
or
pop
std
sub
pop
sub
std
xchg
sti
mov
test
insl
int3
pop
repz
outsb
jp
mov
xchg
add
or
inc
out
inc
or
cmc
or
cmp
fists
push
fbld
iret
xor
bswap
jnp
mov
nopl
inc
das
pusha
push
xchg
xchg
cmpsb
mov
fisubrs
mov
fildll
dec
dec
pop
hlt
scas
testb
lods
adc
push
and
fsub
pop
xor
mov
add
movsb
imul
pop
dec
cmp
dec
sub
mov
or
inc
pop
outsb
push
dec
rcrl
ret
cmpsb
and
mov
cwtl
mov
push
enter
lods
and
mov
sub
or
dec
fs
mov
sub
or
cmpsl
sbb
ds
ja
add
dec
jecxz
cmp
pop
mov
out
mov
movsl
js
mov
push
push
mov
pusha
stos
ret
sarl
sub
push
push
lds
popa
or
cmp
data16
or
push
ret
jecxz
insb
dec
int
dec
push
outsb
repz
movsl
and
divl
sub
dec
mov
mov
and
sahf
rclb
das
jo
dec
sub
or
or
sahf
pop
or
or
sub
sub
add
and
test
jl
testl
mov
mov
mov
rol
loop
out
cmc
and
std
xchg
aaa
inc
jl
negl
mov
les
add
es
fsts
jg
and
push
mov
and
jg
scas
jmp
dec
les
jnp
out
out
in
fbstp
js
lcall
inc
or
sbb
xchg
shlb
inc
mov
sbbl
sbb
insb
js
inc
pop
jno
andl
inc
test
pop
adc
out
inc
jle
xchg
fistpl
sub
jns
test
xor
inc
aad
fildl
addr16
out
pop
jo
mov
enter
mov
push
rol
jae
je
popf
xor
xchg
jne
pop
lret
inc
mov
push
cs
ja
mov
sbb
or
jns
stos
inc
jge
mov
mov
jne
add
push
or
and
fwait
xorl
lock
jp
mov
lds
push
sub
jl
loop
xchg
jecxz
sub
fsqrt
iret
flds
fdivr
ja
xor
movsl
lock
xlat
popa
add
jne
mov
jg
fsubl
outsb
cs
push
cmp
aam
ret
hlt
es
faddl
enter
arpl
cli
xor
aaa
es
cwtl
lcall
daa
add
cpuid
or
sahf
sub
je
push
xor
jo
fiadds
push
cmp
mov
cmp
mov
adc
sti
inc
lock
lret
aam
push
jne
test
sub
xor
mov
mov
cltd
or
lret
cmp
cmp
pop
mov
int3
cmp
dec
jmp
mov
int3
xchg
sar
mov
jecxz
or
xlat
xchg
mov
push
cmpsl
ds
push
fwait
push
push
mov
mov
inc
pusha
jbe
shlb
or
les
imulb
dec
add
xchg
xchg
pop
ja
cmpsb
nop
push
push
sbb
out
rorl
and
add
adcl
sbb
ss
movsb
fwait
shl
int3
add
xchg
nop
outsl
lcall
out
scas
xchg
or
lods
rcl
loopew
lret
in
mov
push
xlat
mov
and
mov
testl
outsb
loope
pushf
mov
jp
test
xchg
xor
add
clc
stos
xor
inc
inc
sbb
xor
adc
pop
scas
pop
fiaddl
mov
lods
les
fisubrs
sub
jne
pop
pop
mov
lcall
fiadds
les
mov
mov
jo
sub
call
mov
mov
or
insb
push
cmp
fldcw
or
cmp
jo
stc
loopne
std
adc
test
ds
push
aad
stos
movsl
in
rcrl
add
push
push
jecxz
mov
ss
mov
gs
jns
or
sbb
fwait
imul
scas
or
and
test
ja
into
inc
pop
mov
aaa
xchg
adc
and
shrl
mov
mov
cmpsb
mov
dec
icebp
inc
push
or
cmp
clc
bswap
xor
rorl
push
xor
add
push
cmp
stos
dec
loopne
mov
addr16
es
add
dec
ds
sbb
or
not
ja
mov
or
out
pop
inc
add
int
aam
leave
dec
lock
jmp
pop
dec
out
ljmp
jg
lcall
dec
imul
xchg
stc
mov
cmp
mov
stos
jle
repz
outsb
jmp
jno
test
aad
or
outsb
push
lods
jnp
mov
sub
popa
add
mov
fidivrs
adc
sti
cltd
push
add
inc
call
fistps
push
rol
lahf
jb
mov
lret
std
dec
data16
pop
push
out
sbb
and
hlt
fs
lcall
sub
aad
sbb
cwtl
push
lea
out
gs
or
jb
xor
push
mov
jge
inc
lock
in
or
or
push
sub
xchg
inc
adc
imul
sahf
inc
sub
lock
mov
mov
push
mov
pop
dec
cld
jecxz
jbe
outsb
push
mov
xor
sbb
xor
xor
mov
adc
or
xchg
daa
leave
stos
loopne
lahf
push
jne
shl
sti
and
ljmp
adc
or
addl
push
pop
call
fwait
mov
divl
sahf
adcb
jno
data16
sub
jp
jecxz
jge
xor
pop
push
mov
aam
dec
pop
adc
mov
repz
inc
adc
fimull
js
aad
push
inc
ss
dec
cmp
xlat
jb
push
sub
mov
cmpsb
std
insl
leave
cs
fcmovnb
xchg
push
test
adc
xor
pop
xor
sbb
xor
adc
push
mov
fstpl
mov
sbb
daa
lods
stos
inc
fimuls
ljmp
daa
outsl
jae
push
in
fadds
and
je
pusha
pop
imul
sbb
cltd
pop
mov
aaa
into
lea
ret
lret
xchg
movsl
std
cltd
mov
jne
jge
lret
xlat
stos
sub
mov
lret
jno
enter
push
xchg
ret
xor
ss
fbld
mov
in
xchg
mov
sub
add
test
pop
mov
push
pop
icebp
jp
cmp
out
pop
jns
adc
dec
jecxz
and
xorl
addb
cmp
arpl
cmpl
pop
daa
mov
mov
sub
pop
sahf
xor
push
imul
fidivrs
pushf
gs
jmp
loopne
outsb
out
xchg
daa
int3
lods
inc
daa
rclb
inc
int
xor
in
cwtl
mov
clc
sbb
clc
xor
sub
out
mov
out
push
inc
or
fwait
adc
push
int3
in
lds
cmp
subb
xchg
imul
testb
notl
mov
xchg
and
push
xor
shll
sahf
aam
mov
dec
adc
xchg
les
aas
push
lahf
into
aaa
test
leave
push
fwait
push
fsubrs
shlb
gs
inc
mov
cmpsl
pop
into
rcrb
jnp
icebp
stos
add
jle
jge
jb
mov
push
mov
subl
filds
mov
jo
es
test
pop
inc
test
ret
inc
inc
clc
xchg
and
or
lock
das
mov
rol
jecxz
outsb
mov
lcall
add
sub
jnp
push
out
xor
jnp
idiv
stos
insl
xchg
cltd
mov
dec
fnstcw
aad
repz
xchg
fbstp
dec
xchg
in
jno
test
mov
jbe
cmp
pop
mov
popa
popf
lods
sbb
sub
sub
jge
aad
lret
add
jne
popa
add
mov
inc
gs
mov
mov
test
mov
push
add
notl
xchg
test
addl
jl
cmpsl
dec
loope
jge
int3
arpl
es
call
jo
inc
pop
cmp
test
data16
adc
imul
jno
mov
lock
js
lods
sub
mov
movb
jnp
sub
push
repnz
pop
inc
je
repz
xlat
shl
shl
iret
pop
and
js
sbb
rclb
and
sub
je
cltd
mov
dec
loope
shlb
mov
xor
cmp
xor
or
iret
xchg
mov
jns
mov
or
cmp
sbb
jge
xor
adc
mov
mov
mov
cld
int
xor
inc
hlt
negb
cmp
inc
mov
jbe
xlat
xchg
push
dec
push
gs
clc
mov
xor
aas
mov
jo
iret
ficoml
stos
jmp
jns
pop
movsb
fwait
jbe
pop
mov
arpl
subl
jae
arpl
shl
and
adc
lea
xor
mov
lds
jb
mov
stos
lcall
push
jbe
push
icebp
or
fnsave
dec
or
dec
dec
cmp
js
lods
adc
xor
pop
mov
mov
test
adc
ret
repz
int
pop
and
dec
sub
mov
loop
ficomps
pop
ret
js
and
inc
pop
mov
sbb
cmp
lea
cmp
jae
out
in
call
sbb
les
testb
in
inc
fsubp
mov
je
jbe
add
iret
movsl
and
sbb
push
mov
mov
lock
icebp
mov
xchg
pop
sbb
pop
adc
inc
xlat
fcompl
or
sbb
mov
cmpsl
pop
or
in
fcmovnbe
fldenv
xchg
sbb
mov
cli
aas
cmp
mov
jmp
jne
shll
cmc
lcall
mov
test
mov
fsubrs
fdivl
les
and
lahf
push
adc
mov
dec
xor
push
repz
int3
shll
shlb
mov
ret
mov
outsl
xchg
repnz
push
mov
inc
out
and
andb
add
inc
or
add
loopne
mov
mov
cmp
cmp
adc
mov
mov
cmp
mov
add
int
xlat
sbb
pusha
xor
out
imul
lds
fistps
push
or
testl
push
jns
and
out
pusha
das
lds
gs
iret
dec
jecxz
xchg
rorb
sbb
pusha
jp
mov
enter
pop
fstpl
inc
popl
xor
mul
popf
sub
add
es
fcomps
insl
push
cli
repnz
cld
sub
ret
push
pop
jecxz
sub
pop
mov
sub
loope
sbb
idiv
and
out
sbb
into
gs
daa
inc
cmp
adc
lret
push
in
xor
xor
pop
and
fisubrs
mov
call
cld
mov
scas
mov
sub
jg
aam
jnp
stos
and
lret
fiadds
xor
es
fwait
es
dec
sbb
xor
xchg
and
sub
sbb
flds
paddusw
shlb
and
sbb
dec
mov
ja
movsl
pop
mov
imul
mov
inc
into
ljmp
mov
push
cwtl
das
pushf
repz
shufps
push
rep
xchg
jmp
loope
and
jmp
or
fwait
clc
mov
xchg
lret
mov
jmp
das
imul
fisubrs
popa
cmp
icebp
out
sbb
scas
push
ret
sti
js
imul
iret
mov
xchg
sbb
xlat
outsb
nop
jbe
and
inc
mov
clc
loopne
pop
pop
scas
mov
push
push
aas
adc
mov
stos
daa
mov
cli
xchg
enter
pushf
mov
sbb
cmp
inc
xor
addr16
add
lcall
sbb
mov
cmpsb
sub
rorl
push
fiaddl
mov
ljmp
stos
pushf
cmpsl
dec
xchg
push
in
test
out
sbb
into
push
pop
dec
sbb
jg
movsl
lds
jp
popf
stos
xchg
add
mov
mov
notb
loop
jl
mov
sbb
out
pop
jmp
ss
out
inc
shl
add
dec
subb
scas
pop
scas
jb
dec
push
rcll
add
loopne
xor
sbb
lds
lret
xor
mov
pop
aas
ret
test
addr16
into
push
repnz
stc
gs
test
fimull
je
pop
jecxz
movb
ds
push
clc
xchg
dec
cmp
dec
notb
or
fldcw
pop
daa
mov
sub
inc
inc
testl
es
verr
mov
pop
outsl
and
push
jb
xchg
out
pop
mov
fcmovu
int
inc
xor
mov
push
inc
jge
push
out
xchg
xchg
xchg
cmpsb
jbe
sbb
cmp
add
or
push
sbb
bt
xor
xchg
cld
inc
ret
and
popf
aam
push
jno
ret
pop
cmpsb
mov
jle
cmpsb
test
iret
add
mov
cltd
jecxz
inc
mov
mov
sub
cbtw
mov
adc
sbb
cmp
jmp
jle
fimull
inc
fistpll
aas
roll
cmp
mov
lock
inc
pop
movsb
jp
js
ss
leave
lds
repz
jg
call
adc
xchg
jecxz
adc
shrb
daa
mov
es
loop
dec
outsl
cmpsb
dec
imul
dec
movsb
aad
fadd
push
mov
fs
xor
push
push
not
adc
mov
daa
pop
inc
xchg
pop
mov
mov
mov
pop
dec
in
pop
lea
ret
leave
pop
mov
stos
sbb
cli
pushf
and
out
add
ss
pusha
testl
jle
adc
fstps
xor
and
pop
adc
repz
sbb
adc
mov
nop
daa
stos
outsl
hlt
addr16
inc
scas
cmp
loope
rclb
movl
mov
in
mov
push
pop
data16
test
lods
mov
pop
cmp
sti
test
fs
jno
jg
pusha
and
inc
xchg
mov
add
cmp
ret
jecxz
test
scas
in
lret
icebp
or
wrmsr
and
out
ja
out
dec
and
in
lds
rclb
pop
jmp
dec
test
sbb
rcrl
cmp
push
push
fbstp
jno
in
xchg
jae
jecxz
insl
loopne
nop
cmp
dec
popa
jg
arpl
fwait
push
jle
sbb
inc
mov
icebp
enter
jp
lea
cmp
in
mov
bound
mov
inc
mov
enter
imul
pop
add
pop
icebp
xor
xchg
pop
adc
push
ljmp
jno
idivb
sti
jbe
mov
xorb
hlt
addr16
cmp
aaa
push
add
pop
and
test
xor
add
imul
cwtl
mov
je
inc
jmp
push
stc
cli
aas
push
mov
pop
call
daa
cs
cwtl
dec
dec
loopne
mov
push
bound
inc
pop
sbb
pop
filds
test
icebp
das
push
jbe
adc
je
scas
repz
jbe
loop,pt
ss
push
in
aam
lcall
jne
sbb
fsubrs
cmp
push
lock
imul
push
mov
enter
stos
push
loope
movsb
jne
pop
and
adc
lcall
lret
in
in
push
out
rcll
mov
jne
ret
mov
cmp
sbb
subl
insb
cmpsl
ljmp
push
add
jo
aam
sahf
jne
adc
push
or
cld
or
subl
mov
aaa
inc
movsl
leave
fdivs
outsb
xor
cmp
cmp
jbe
jmp
out
sbb
fnstcw
cmp
in
into
cwtl
dec
sar
jp
fcmovnb
pshufw
mov
imul
lahf
stc
test
ja
lret
lds
int3
mov
jns
xchg
in
cmpb
xlat
fisubl
outsb
call
jmp
in
loopne
fsubrl
xchg
adc
stos
movsb
sub
cs
inc
adc
pop
inc
cmp
xchg
and
fnsave
fmull
sub
mov
repnz
stos
into
fldt
sbb
inc
iret
into
test
cli
push
es
imul
sbb
jnp
or
loopne
data16
pushf
xchg
cmp
cmp
mov
pop
stos
push
mov
xchg
mov
lahf
sub
dec
mov
out
add
stos
daa
or
lret
cli
movsb
cmp
xor
sub
outsb
ret
fisttpll
and
push
mov
fdivl
rcll
mov
pop
lock
sbb
pushf
and
jo
xor
call
fcmovb
rolb
notb
push
add
or
inc
add
jnp
jmp
pop
popa
decb
inc
cmp
xchg
insl
cli
push
outsl
mov
iret
pop
jnp
sub
iret
pop
pop
leave
cmp
insl
ja
adcb
fsubrs
inc
dec
in
dec
stc
cmpsb
push
sti
xlat
pop
push
fidivl
test
or
rclb
sub
adc
aad
pop
jns
js
sbb
lods
rcrb
cmc
xchg
add
sub
push
mov
lods
test
fnsave
sbb
push
xor
jb
or
sub
mov
and
movq
lods
outsb
push
adc
xchg
cld
xchg
dec
or
testb
or
andnps
xchg
stos
addr16
fbstp
test
sub
inc
jb
jns
sbb
insl
dec
ret
sbb
lcall
stc
je
or
insl
rol
jbe
mov
hlt
mov
shlb
add
xchg
add
push
xchg
fisttps
jnp
movsb
movsl
cmp
mov
ret
jle
cwtl
jg
add
push
jno
ficomps
cld
fbstp
andl
pop
sbb
cltd
mov
cmp
jle
push
xor
fistl
cmp
mov
ret
das
and
mov
push
pop
hlt
test
jl
int3
leave
jl
mov
sbb
pop
pusha
ds
repz
sbb
or
idivb
jl
sbb
dec
dec
decl
movsb
mov
mov
mov
fidivrs
jg
push
lret
rcl
and
push
adc
dec
pusha
pushl
xchg
das
adc
cmp
push
sbb
js
cli
cmp
lret
xor
dec
xchg
inc
fnsave
push
or
cld
dec
leave
test
movsb
loopne
pop
mov
inc
ja
mov
scas
push
inc
push
mov
int
lods
or
cmc
push
and
xchg
es
into
push
js
movsl
data16
fidivrl
inc
jmp
jl
aaa
lret
adc
push
jae
push
or
inc
clc
and
push
repz
je
lea
sbb
push
or
movsb
mov
fnstenv
les
and
leave
jp
jge
imul
pushf
and
push
adc
movsb
mov
imul
jmp
jecxz
jbe
fucomip
cltd
stos
jmp
out
mov
lock
xchg
imul
arpl
rep
out
jnp
jg
or
xchg
and
test
xor
pushf
leave
and
out
hlt
add
cmpsb
and
pop
or
lock
mov
mov
inc
dec
jbe
mov
call
aad
pop
iret
jg
mov
adc
pop
mov
jle
es
iret
dec
fdivr
ret
inc
movsl
cmp
or
ret
insl
cld
jecxz
xchg
aad
rcll
xor
and
dec
lods
fldt
sbb
add
fdiv
es
iret
pop
loop
pop
out
xchg
dec
adc
and
arpl
dec
push
cmpsb
cmp
jo
push
and
xchg
xchg
jne
insb
call
outsl
scas
bnd
nop
jno
dec
mov
inc
xchg
ja
shlb
mov
or
or
pop
pushf
mov
or
pop
push
jecxz
sar
arpl
int
fidivl
in
imulb
stc
clc
sub
sbb
add
lahf
xor
pop
out
mov
lea
lret
iret
and
push
rorl
test
nop
test
sub
pop
rcrb
test
mov
ret
inc
sbb
leave
adc
xor
jmp
pusha
or
xchg
add
inc
sbb
lods
dec
in
daa
fcomp
outsl
jno
jl
push
mov
push
jmp
loope
push
imul
mov
dec
int3
add
inc
jb
mov
nop
imul
cmp
or
mov
data16
insl
rorl
ffree
negb
fstpl
inc
gs
lahf
ss
ret
icebp
jecxz
pusha
dec
mov
lret
bound
push
mov
ss
mov
std
push
cmpsb
scas
lods
pop
sub
loopne
pop
sub
cmp
push
mov
pop
aad
xchg
inc
sub
fstps
cwtl
mov
jecxz
and
cwtl
mov
inc
add
jnp
mov
cmpsl
ja
pop
sub
lds
xchg
pop
dec
dec
dec
jecxz
jns
jns
xlat
or
nop
sub
mov
mov
loope
imul
int
lahf
lods
add
add
ds
sbbb
pop
cli
jns
inc
cmpsl
fs
lret
divl
sti
jbe
popf
cmp
mov
and
jmp
roll
aaa
push
mov
adcl
jae
aad
mov
inc
cli
jb
lds
and
inc
push
fwait
pusha
mov
fnsave
mov
cmpsl
jns
or
out
and
push
data16
sahf
jae
cld
lcall
sbb
inc
out
notb
cmp
or
pushf
gs
jg
jp
jae
xrelease
or
mov
jns
mov
add
inc
repnz
das
fcoms
sub
pushf
push
stos
mov
jb
adc
dec
and
dec
or
out
fstl
mov
enter
xchg
pop
repnz
jmp
imul
xor
jmp
adc
push
bound
xchg
pop
cli
popf
jg
nop
lods
mov
aad
subps
imul
add
sub
pop
jle
pop
cmp
xchg
or
cmpsl
das
cmpsl
sub
data16
clc
jb
aam
shlb
push
push
cwtl
ret
xor
xlat
clc
push
out
mov
push
fdiv
or
sbb
lret
xor
ds
cmp
cltd
hlt
push
ljmp
call
jns
lds
cld
jmp
lahf
sbb
dec
clc
imul
jo
push
mov
mov
imul
popa
mov
iret
daa
cltd
push
and
mov
xchg
insl
sub
cmpsb
repnz
dec
notb
mov
pusha
mov
jg
es
push
xchg
popf
fs
fwait
cmc
xchg
faddp
aas
ds
out
les
cmp
subl
add
xchg
sbb
mov
xor
in
xor
mov
rcll
or
and
jge
inc
lret
cli
and
fwait
shll
inc
mov
jmp
int
adc
out
add
in
fwait
sub
xchg
sbb
pop
ficompl
aas
clc
pushf
cli
cmp
negl
sbb
add
mov
add
stos
mov
lods
mov
call
cmp
or
cmp
add
mov
mov
ficomps
adc
rcl
stos
lods
jo
jmp
fcmovnb
pop
xchg
cmp
ss
and
imul
adc
or
ja
mov
cltd
xor
shrl
jl
push
arpl
stos
pop
stc
push
and
aad
out
dec
inc
out
jo
repnz
lahf
shlb
push
fidivl
lds
jg
repnz
xorl
and
popf
lds
into
xor
jg
xchg
lret
aad
inc
push
sub
scas
into
mov
jnp
xor
inc
mov
mov
fstp
cmc
aad
movsl
add
xor
imul
test
leave
shrb
test
push
cltd
sbb
les
imul
fimuls
push
in
popf
test
adc
mov
mov
xor
cmp
std
xchg
adc
sbb
pop
rcll
add
cmpsl
sub
dec
push
cs
fs
sub
push
push
sbb
mov
fs
or
xchg
adc
cmp
jns
cmp
fidivl
ja
in
add
xchg
pop
mov
shl
setno
les
add
add
xchg
stos
aaa
adc
mov
sbb
lock
or
sahf
add
add
mov
repnz
popa
pop
pushf
dec
dec
mov
sbb
out
mov
inc
pop
fists
mov
fs
outsb
push
add
add
mov
push
sub
ss
inc
dec
mov
lcall
fdivl
mov
ja
mov
mov
cmp
xor
jle
mov
xchg
adc
cmp
filds
push
push
sub
push
ljmp
iret
idivl
push
sub
and
push
cli
fadd
js
mov
jp
and
int3
lret
jo
push
push
popa
cmp
adcl
cmp
inc
in
adc
mov
adc
or
and
fsubl
cwtl
movsl
push
shlb
cmpsb
mov
cmpsl
lret
ja
jno
xchg
mov
inc
xor
xchg
push
js
mov
inc
fdivrp
cmpsb
pop
mov
fsubl
popf
nop
in
adc
sti
aam
sub
shrl
inc
ficoml
jb
pop
cltd
adc
mov
add
out
stos
fwait
shlb
cmp
mov
or
or
jmp
movsb
pop
cmp
pop
cmpsl
in
sbb
insb
sbb
stc
pop
mov
insb
outsl
pop
push
stos
add
sbb
adc
outsl
psubsw
sbb
fnstcw
loope
cmp
data16
in
pusha
clc
push
xor
xor
mov
pop
sub
mov
notl
pushf
test
test
jb
clc
addr16
neg
pop
addr16
or
dec
in
mov
lds
insb
sub
jmp
jmp
cmp
cmc
pop
push
pop
loop
inc
mov
mov
test
sbbb
shrl
dec
push
test
cltd
out
pop
frstor
mov
pop
addr16
dec
mov
aam
int3
pop
into
pop
pop
push
in
jle
in
scas
push
in
cmpl
scas
mov
sbb
push
dec
in
mov
push
popa
movl
xor
pop
mov
pop
adc
xchg
mov
aam
fcomip
add
gs
push
mov
pushf
into
pop
cltd
sub
adc
in
jle
mov
inc
repz
test
and
jnp
add
addr16
bound
loope
or
es
xor
dec
movb
inc
fisubrs
jo
call
pop
pop
pop
aas
push
shl
mov
push
shrb
je
sub
or
mov
dec
cmpb
pushl
mov
pop
je
test
jmp
mov
lret
outsb
imul
mov
push
xor
pop
insb
cmp
nop
cld
roll
pop
xor
pop
out
sarb
lock
sub
cmp
repz
lea
pop
lahf
dec
adc
pop
insl
cli
push
jl
adc
lods
pop
les
xchg
enter
out
rorl
dec
outsl
aas
push
shr
cld
pop
dec
in
mov
int
popf
es
or
inc
dec
jp
mov
adc
cmc
outsl
rcl
dec
fs
add
loope
add
cmp
test
and
fcoms
adc
or
add
sub
inc
add
ja
adc
arpl
cmc
mov
cmp
mov
adcb
sub
iret
dec
jmp
hlt
pop
lret
jecxz
dec
inc
inc
rclb
cmc
push
andl
xor
sahf
pop
jbe
sub
movsb
xchg
pop
ret
pop
in
mov
cmpsl
push
flds
push
repnz
in
ret
pop
int3
divb
int
jo
xchg
stc
dec
mov
inc
js
fucom
jns
mov
mov
test
ret
outsl
ficomps
shll
inc
fisubs
xchg
and
push
test
push
les
pop
mov
xchg
jp
aaa
testl
mov
popa
xor
lock
or
mov
lahf
aas
aaa
clc
dec
in
in
jle
adc
xor
mov
sahf
mov
shlb
pop
rorb
jecxz
mov
fimuls
xchg
mov
sti
mov
dec
lods
inc
add
mov
pop
xor
aaa
js
addr16
fcmove
adc
cs
and
cmp
pushf
mov
cmpsb
in
mov
xchg
inc
push
movsb
cmp
xor
out
loopne
jae
cmovb
mov
mov
aad
dec
pop
repz
js
in
sub
cli
sbb
mov
xchg
imul
xchg
pop
scas
idivb
dec
pop
mov
nop
pop
je
push
mov
ret
inc
ljmp
xchg
loope
lahf
xchg
mov
dec
jo
jno
push
xor
es
mov
mov
sbb
mov
mov
pusha
into
fsub
loop
cs
out
fstpt
and
cmp
in
jle
jns
gs
call
les
jns
sub
loop
xchg
fwait
pop
xchg
sub
sub
or
jbe
out
mov
and
jb
push
jb
push
lock
rcll
jae
lcall
jecxz
and
or
inc
push
data16
gs
sarl
aaa
and
jo
repnz
xlat
dec
cmc
xor
cmp
or
cmp
scas
cmp
add
xchg
cmp
pop
pushf
jmp
adcl
pop
and
ja
imull
popa
mov
mov
dec
fldcw
std
xor
outsl
loope
orl
xor
int
mov
xlat
pop
test
mov
xor
jmp
add
frstor
filds
ret
imul
jecxz
pusha
pop
mov
inc
stos
push
jge
aad
in
sahf
cmc
fimuls
pop
rolb
cmp
and
jge
std
or
adc
shll
fsubr
test
fidivs
ret
rcrb
int3
fcompl
shll
insl
cltd
and
or
mov
adc
cmp
fdivrp
rolb
stc
cwtl
clc
mov
xlat
mov
mov
iret
jnp
pop
mov
sbb
inc
xlat
aad
out
mov
loop
adc
inc
inc
mov
mov
testl
adc
bound
add
pop
xor
jg
pop
sahf
add
out
pushf
scas
pop
stc
dec
bound
ds
push
fildl
mov
pop
dec
aad
or
loop
popf
sbb
outsl
jbe
push
xchg
lock
or
adc
cwtl
stos
pop
rcrb
jbe
xchg
dec
pop
inc
aas
inc
push
xchg
or
lods
sub
xor
flds
rorb
cmp
loope
jbe
ljmp
popa
fnstenv
xchg
hlt
adc
sbb
pop
push
or
xchg
and
jmp
push
sahf
adcb
and
adc
jae
lcall
push
arpl
and
test
mov
push
notb
cmpl
inc
int3
dec
and
outsb
pop
dec
pop
xchg
pop
cld
loop
popf
mov
add
pop
shl
jbe
push
add
fwait
inc
cltd
int
mov
cmpsl
mov
mov
lcall
je
lcall
lcall
push
outsb
jmp
test
push
or
sahf
and
scas
nop
and
dec
popa
sti
jle
shlb
push
xor
jnp
sub
pop
out
or
mov
scas
icebp
cmpsl
aas
dec
push
jge
aad
pop
subb
mov
xchg
out
jbe
popa
or
xchg
stos
xlat
push
mov
out
std
dec
popw
gs
adc
sub
and
add
cmpsl
inc
sbb
fcomps
pusha
jg
xorl
push
jbe
mov
mov
notl
dec
xchg
inc
notb
scas
mov
jnp
arpl
and
jnp
movsl
andl
dec
pusha
mov
inc
ficoml
adc
xchg
popa
clc
sub
push
and
lcall
js
mov
mov
mov
pop
xchg
rcll
lahf
ss
icebp
pusha
das
popf
cmp
int
imul
inc
cltd
add
xor
mov
push
pop
inc
shll
rcll
add
jb
call
nop
daa
int
cwtl
push
aas
popa
scas
inc
xchg
pop
clc
xchg
lods
ljmp
ja
or
mov
sbb
ja
cli
sub
negb
xor
mov
jge
in
pop
nop
test
out
imul
test
adc
jle
pop
jnp
mov
dec
mov
jnp
int3
jne
mov
test
pop
cmpsb
in
push
adc
sar
ljmp
jo
mov
ret
ljmp
lret
cmp
dec
pop
pop
clc
push
jbe
pushf
xchg
pop
out
push
mov
dec
mov
les
iret
aaa
cmp
pop
cmpsl
int3
xchg
cmpb
xor
pop
pusha
push
dec
jecxz
cmpb
xlat
and
adc
clc
aaa
aaa
xchg
sub
stos
lds
mov
mov
or
fnstcw
mov
push
push
or
addr16
outsb
and
test
cmp
cmp
mov
icebp
mov
sub
fistps
adc
movsb
insl
cmpb
push
orb
mov
pusha
test
dec
dec
out
or
scas
xor
or
xor
dec
clc
cmp
adc
sbb
jmp
or
pop
push
inc
and
sti
mov
scas
ds
gs
and
fnsave
adc
cli
notl
xchg
sbb
es
adc
cmp
xchg
mov
ficomps
sahf
filds
push
push
test
mov
xor
xorl
xchg
inc
and
jmp
or
and
mov
sbb
mov
ret
lea
jmp
mov
mov
jbe
rcll
push
jns
and
and
inc
std
jnp
cmp
lret
in
jmp
iret
sub
jbe
pop
in
cld
lcall
adc
jns
fisubl
in
xchg
sub
bound
mov
hlt
mov
sub
into
in
incl
mov
out
out
lret
std
js
adc
xor
mov
shrb
test
or
shrb
jecxz
daa
clc
and
push
test
std
mov
fistl
dec
iret
sub
add
dec
add
and
sub
rcrb
inc
scas
shlb
xchg
rol
pop
cwtl
in
dec
add
lret
dec
mov
lea
ljmp
push
jmp
dec
inc
das
xlat
mov
mov
idivb
jae
jbe
xor
int
cmp
out
in
and
or
loopne
jno
insl
or
cs
outsl
xchg
lods
mov
cmc
repz
adc
aad
js
adc
sub
icebp
lcall
mov
test
xchg
fimull
insb
fistps
loope
jge
cld
mov
jbe
jecxz
xchg
loope
inc
cmp
jne
nop
push
xchg
ds
in
mov
js
add
xchg
xchg
scas
add
sub
sbb
andb
cld
ss
add
mov
jp
lods
inc
outsb
pop
out
cmp
fidivrl
mov
cld
adc
cmp
cmp
cwtl
lret
and
dec
fdivrs
push
push
jmp
subb
push
or
mov
jge
pushf
imul
cli
dec
dec
add
and
xor
mov
mov
fwait
ljmp
dec
fnstenv
shl
mov
and
cmp
out
rcrb
hlt
clc
enter
pushf
jnp
aam
xor
stc
js
addl
push
lods
daa
sbb
adc
sub
add
push
ret
adc
xchg
inc
and
gs
pop
scas
xor
int3
mov
notb
mov
sbb
cmpsb
pop
pop
xchg
mov
jmp
sbb
jbe
pusha
inc
push
stc
push
jge
mov
addl
and
or
aaa
mov
adc
xor
xor
lds
loopne
sahf
adc
jae
mov
flds
test
dec
fimull
stc
add
mov
enter
mov
gs
fsubrs
in
pop
out
not
repz
fdivrl
icebp
inc
pop
and
adc
ja
mov
lcall
out
sub
leave
loope
test
jo
xchg
pop
cmpsb
xchg
xchg
dec
cmovge
in
mov
push
and
inc
xor
stc
sti
es
sub
cmp
push
cmp
cmp
pushf
lea
adc
dec
lcall
out
cwtl
mov
cltd
imull
mov
pushf
add
outsl
sbb
add
scas
negl
in
mov
dec
pusha
imul
es
test
jne
pop
montmul
cmpsb
inc
mov
iret
mov
push
int3
ss
or
or
mov
es
cmp
mov
cmp
mov
mov
imul
adc
push
lods
or
fwait
out
daa
mov
repnz
neg
imul
sub
dec
stos
ret
out
adc
fsubrs
inc
xor
inc
xchg
bound
cld
cmpsb
adc
xchg
inc
enter
mov
push
lods
mov
lods
add
outsl
inc
adc
mov
sbb
test
daa
shrl
xor
jl
push
in
out
or
enter
mov
andl
and
push
cmc
mov
shl
push
jno
add
fmul
xor
and
loop
scas
inc
aas
fstl
pusha
test
jl
cli
popa
adc
push
xchg
imul
and
shl
movsb
out
xor
cmp
inc
sub
cld
loopne
sub
mov
jbe
and
and
lret
insb
or
mov
sub
rolw
fldt
andl
test
int
and
iret
push
mov
pop
xchg
mov
inc
pop
int3
jmp
xchg
and
adc
stc
or
outsb
loope
testl
or
mov
jbe
mov
dec
and
aad
scas
into
push
cmp
inc
sub
jae
cmp
mov
and
out
scas
inc
test
mov
mov
xchg
push
lea
xor
xor
sti
push
mov
or
adc
pop
jns
xor
lret
lret
out
scas
jg
jno
shl
repnz
shr
xchg
cmp
sbb
pop
out
dec
dec
and
in
cld
dec
ds
aam
out
inc
fimuls
cltd
stos
push
adc
test
add
and
insb
mov
lret
arpl
out
mov
cmc
loope
mov
mov
adc
je
xchg
push
sahf
cltd
popa
add
addl
sub
addr16
std
push
ja
xorb
mov
cmp
push
outsl
rorb
lcall
repnz
andb
je
xchg
cwtl
mov
cmc
mov
or
pop
lcall
xor
sub
pop
mov
mov
xchg
mov
cmpsb
arpl
sub
das
xor
push
or
aad
stos
sbbl
adc
dec
mov
pop
rcrl
mov
jp
in
cmp
popa
and
xchg
in
push
xchg
stos
and
push
sub
scas
cmova
xchg
mov
pop
roll
stos
pop
lods
dec
pop
or
inc
and
stos
fdivrl
icebp
dec
lcall
xor
in
bound
jl
pop
jae
mov
xchg
sub
cmp
ret
or
in
or
add
inc
add
subl
jbe
xchg
push
jle
cmpsl
add
pushf
sahf
inc
es
inc
out
push
leave
aaa
jo
lods
mov
cli
hlt
mov
sub
int
cwtl
sbb
add
mov
push
hlt
cmp
fadds
jmp
add
pop
rclb
scas
xor
inc
dec
and
loope
add
and
aaa
mov
test
dec
out
push
icebp
mov
insb
cmpsl
cmp
orl
pusha
aam
push
into
xor
divb
sbb
mov
pop
mov
pop
adc
lret
mov
cmp
cmp
pushf
sbb
jo
out
out
xor
orl
sub
push
sti
sub
iret
enter
adc
sti
stos
xchg
imul
fistpl
call
fidivrs
xchg
arpl
adc
push
mov
push
sahf
pop
push
jb
adc
sub
pushf
stos
popa
cmp
or
invd
mov
sbb
sbb
shlb
mov
cmp
lds
cwtl
add
pop
hlt
dec
inc
push
mov
movsl
dec
inc
jg
imul
jp
mov
or
jmp
xchg
xchg
iret
xchg
stc
jnp
mov
cmp
or
xchg
int3
popa
js
xchg
aad
xlat
pop
mov
mov
outsl
inc
fcomp
test
push
push
lods
pop
jae
rcrb
mov
es
imul
lods
aas
mov
xor
inc
scas
mov
sub
cmpsl
loopne
mov
sar
adc
pop
in
or
pop
inc
popa
sub
sarl
mov
mov
push
jns
cmpsl
mov
daa
les
mov
loop
into
andb
sub
sbb
bound
xchg
jbe
inc
jmp
pusha
sub
ds
dec
inc
lret
pushf
dec
lea
fidivs
or
add
sarb
adc
fsubrs
call
fsts
mov
xchg
mov
xchg
ds
mov
add
pop
mov
push
mov
inc
repz
cmp
addr16
jnp
lcall
rolb
add
lahf
sbbb
jmp
push
adc
and
xchg
cli
jl
add
sti
dec
bound
inc
mov
xchg
push
stc
and
jb
jnp
dec
fs
hlt
decb
push
mov
cltd
decb
enter
movsl
ss
and
pop
aad
call
or
and
std
dec
icebp
inc
lods
mov
ja
test
mov
int3
jae
mov
les
jno
aam
xchg
jbe
dec
cmpsb
adc
push
push
or
bound
sub
pop
enter
in
bound
stos
or
pop
add
es
pop
pop
decl
inc
jb
popf
xor
xchg
mov
mov
hlt
adc
les
xchg
dec
fsubp
jecxz
out
fildl
push
jle
test
insl
xor
cmc
pop
inc
dec
lcall
mov
cltd
out
cmc
loope
mov
push
int3
arpl
mov
or
js
add
xchg
pop
shrl
repnz
movsl
sbb
jp
in
pop
mov
fwait
and
cmpb
jmp
cli
clc
cmpb
lock
mov
xchg
ds
mov
mov
into
fisubl
movsb
sbb
xchg
push
pusha
cli
xchg
fildl
push
mov
fcmove
dec
xrelease
aad
rcrl
adc
jb
iret
mov
insb
mov
sbb
dec
push
push
xor
pop
enter
mov
lret
push
loopne
popa
xor
orb
push
jge
cli
fildl
add
xlat
lods
shl
mov
jae
mov
xchg
add
dec
mov
cmpsb
in
rcrl
cmp
outsl
lds
mov
sub
fdivs
ret
icebp
jb
pop
xor
cltd
adc
test
adc
adc
test
mov
stos
jns
adc
add
ljmp
imul
je
push
jmp
xor
insb
push
push
and
mov
mov
mov
mov
and
adc
push
push
push
xchg
or
dec
mov
dec
xor
bound
push
ret
loopne
jae
fwait
and
inc
addl
loopne
or
stc
mov
out
add
pop
or
pop
cmp
adc
pop
shlb
rolb
fimull
sbb
adc
test
lret
sub
pop
cs
pop
test
push
add
test
adc
and
mov
dec
es
and
xlat
sbb
pop
andb
jmp
adcb
and
orb
mov
repnz
mov
movsb
add
xchg
sub
int
mov
mov
dec
jne
cli
xchg
jns
push
int
sub
shr
imul
jne
inc
sbb
not
arpl
fptan
and
push
rcrl
les
fdivl
push
int3
sbb
jno
add
loopne
pop
arpl
test
nop
repnz
test
int3
inc
or
lea
xchg
and
hlt
loopne
stc
inc
mov
push
dec
cmp
mov
xor
imul
or
inc
sbb
push
ret
incl
or
or
sub
xchg
jns
cmc
mov
mov
cs
adc
mov
xor
push
lret
push
pop
mov
addr16
xchg
jne
mov
pop
mov
mov
lcall
adc
cmp
pop
lcall
inc
mov
outsl
loop
xchg
add
incb
popf
sti
dec
fidivs
in
rcrb
shl
cmpsb
adc
nop
or
inc
cmp
xor
sarb
insb
dec
pop
sahf
test
cmp
mov
jl
mov
shrb
addl
jne
stos
scas
pop
shrl
rcl
xor
sbb
aas
fs
sbb
cltd
mov
or
out
xchg
movsl
sbb
pop
ja
subb
int
mov
mov
push
out
add
insb
xchg
xlat
lds
cmp
mov
push
outsb
push
cmp
sbb
ds
xchg
jno
push
push
loop
mov
sbb
and
jnp
in
mov
sbb
pusha
mov
cmpps
xlat
aad
mov
movsb
in
in
cmp
ret
mov
call
test
mov
ret
sbb
mov
dec
call
and
add
jmp
push
jo
jmp
mov
das
repnz
adc
sub
and
out
and
jne
cmpsl
shll
fmul
sub
test
movsb
jmp
inc
insl
or
int3
pop
out
adc
sub
outsb
jno
push
push
loopne
add
mov
cs
sbb
lods
lock
pop
mov
push
ret
pop
dec
je
pop
out
loope
jne
in
or
fnstenv
push
fidivrl
cmpsl
jno
xor
aad
or
mov
add
and
imul
mov
push
fs
iret
movsb
pop
in
in
cmp
xor
xorl
mov
mov
std
pop
repz
pop
xchg
mov
add
iret
dec
jne
cmp
dec
add
stc
scas
jno
xchg
jae
jne
lcall
inc
out
lcall
sub
repz
pop
push
push
push
mov
mov
mov
jecxz
pop
xor
or
mov
scas
mov
cmpl
pushf
xchg
push
ret
les
cmpb
daa
test
adc
popf
sub
lahf
pop
cmp
mov
dec
loopne
sbb
sub
repnz
dec
add
out
adc
ljmp
mov
xor
push
dec
icebp
rol
jle
fwait
mov
in
adc
into
fmull
pop
loop
outsb
mov
and
mov
call
mov
adc
and
fwait
xor
ret
je
mov
mov
sbb
imul
dec
push
bound
dec
xchg
or
int3
mov
out
jo
sub
mov
std
pop
mov
subl
jle
cwtl
sbb
push
loope
rol
push
inc
repz
ds
data16
cmp
movsl
popa
movsb
mov
sbb
les
mov
sarb
jns
hlt
int3
pop
daa
incl
adc
sub
ret
mov
pop
push
jge
loope
mov
mov
mov
mov
repnz
xchg
stos
ret
and
mov
in
fsubr
push
repz
mov
pop
jmp
jecxz
icebp
dec
cmp
lahf
xor
pop
push
xor
lods
and
dec
mov
push
popf
adc
and
in
xor
fiadds
mov
mov
lods
fbstp
xchg
andb
or
mov
js
int3
lahf
js
out
bound
test
std
push
mov
lock
and
fcmovne
in
or
ret
or
loopne
xor
fucomip
fdiv
inc
xchg
xchg
jg
idivb
imul
cwtl
add
cmp
jo
adc
mov
jmp
mov
pop
pop
enter
lcall
ja
cmp
dec
jae
and
into
ss
adcb
lods
pusha
dec
loop
insb
aas
jecxz
lcall
jmp
ljmp
push
divl
pop
xchg
xor
jno
add
xchg
test
mov
sub
dec
aam
stos
and
xchg
sahf
test
repz
jge
ret
mov
add
int
ret
sbb
sbbb
stos
pop
fists
dec
or
or
push
or
sbb
xor
out
push
push
and
and
xchg
xor
je
push
aam
das
cmp
cmc
in
out
fists
ds
mov
push
out
in
pusha
insl
lret
jge
cmp
jno
stos
and
jp
shlb
ret
es
lcall
ljmp
adc
inc
lods
sub
pusha
ret
pop
cltd
fsubrs
mov
rolb
lds
dec
mov
mov
sub
jp
pop
int3
ficomps
cwtl
popf
jo
cld
arpl
stos
pushf
push
mov
je
mov
mov
mov
aaa
mov
dec
lahf
lock
jp
fcmovb
and
push
or
push
mov
xchg
sbb
xchg
adc
or
addr16
push
or
es
lea
out
push
add
lea
icebp
xor
sti
scas
in
jmp
dec
xchg
push
xchg
mov
xor
xor
push
or
notl
pop
scas
jae
mov
xchg
in
jb
lret
rcrb
inc
cmpsb
repz
and
pop
add
push
sbbb
insb
in
pushf
mull
cmp
mov
dec
or
jmp
ljmp
outsb
sti
imul
aad
lods
dec
xor
dec
aas
inc
popa
xor
out
push
stc
adc
push
or
lgs
pop
ja
xchg
jno
mov
push
rcrl
aad
imul
jle
sub
mov
roll
push
pop
or
test
jb
add
jae
mov
jg
lods
add
stos
lret
lcall
xchg
xchg
out
dec
out
scas
sbb
lcall
shl
int
xchg
cmc
cmp
jno
push
cltd
cli
les
stc
lea
scas
outsb
rcl
inc
push
ljmp
jge
sub
in
sahf
sub
adc
lret
aas
sahf
and
pushf
das
sub
xchg
outsl
in
pop
sub
lock
shl
lcall
jno
adc
inc
fwait
fwait
push
mov
cltd
test
mov
cmpsl
jp
loopne
shll
mov
cmpsb
xchg
jnp
scas
outsb
mov
imul
push
lods
inc
push
add
jnp
jb
push
sub
add
in
fisubrl
clc
xor
mov
stos
jb
aaa
jge
imul
mov
push
adc
xchg
inc
mov
inc
fisttps
stc
test
inc
je
jle
lahf
idivl
mov
arpl
fs
ja
add
mov
call
mov
xor
clc
aad
rep
bound
mov
and
scas
loopne
mov
popf
add
add
push
ds
pop
hlt
xchg
sub
mov
xor
push
jb
pop
inc
fimuls
and
push
or
fimull
dec
mov
shrl
shlb
aaa
cli
sub
jecxz
xchg
cmpsb
test
test
in
imul
rcr
enter
xor
mov
std
icebp
dec
and
lret
test
out
pusha
or
mov
fisttpll
and
bswap
jnp
xchg
and
xchg
addr16
sub
test
fistpl
in
mov
addr16
dec
call
mov
mov
push
or
or
frstor
or
cmp
cmc
stos
outsl
aas
es
push
sub
cltd
xor
push
xor
cmp
mov
mov
add
mov
mov
pop
shlb
dec
arpl
repz
and
jo
divb
cmovge
mov
pop
into
dec
or
push
popa
xor
push
inc
pop
push
cmpsb
das
aam
sti
mov
sub
ljmp
jno
push
add
sbbl
dec
dec
fdivrl
fists
dec
in
ss
lock
cmpsl
mov
mov
pop
jo
jbe
jge
dec
cmp
add
stc
or
and
fadds
pop
adc
stc
jne
out
popf
inc
and
and
ljmp
cli
xchg
xor
sbbl
push
rcrb
or
mov
cs
negb
add
cmp
int3
mov
cmp
push
sti
test
je
data16
ljmp
push
ss
outsl
push
das
mov
mov
jb
movsl
dec
fmull
enter
and
pushf
adc
inc
mov
repnz
xor
aam
fcoms
pop
xchg
mov
or
sub
rcrb
pop
mov
ror
sbb
popf
into
or
mov
pop
push
inc
adc
shr
jo
mov
cmp
lcall
adc
call
jl
mov
test
sbb
lods
or
shrb
insb
das
shll
mov
std
ds
cli
push
push
es
fisubrs
rorb
dec
out
and
dec
imul
cmc
lods
pop
sbb
and
test
xor
pop
jb
das
pop
adcl
stc
shr
xchg
sti
insl
stc
or
cwtl
arpl
adc
fsubl
xchg
pop
ljmp
fs
lds
hlt
mov
push
push
dec
loope
or
inc
mov
cmpb
xchg
fistps
test
push
lods
push
mov
xor
addb
xchg
cmp
adc
jmp
pop
outsb
push
adc
mov
mov
xor
cmp
in
pop
mov
hlt
aam
fcmovb
movsl
cmp
ds
push
adc
mov
cltd
inc
cmc
push
dec
mov
pop
repz
inc
pop
lret
push
add
xchg
loopne
xor
cli
shll
sbb
cmp
movsb
mov
push
pusha
dec
pop
repz
pop
je
add
es
sti
inc
push
xor
fs
imul
lock
push
mov
insb
pop
push
mov
sahf
iret
xor
dec
shlb
fwait
mov
add
clc
xor
push
xchg
test
das
rcrl
cs
sub
daa
pop
mov
popf
mul
dec
add
xor
jbe
mov
das
push
mov
push
mov
jb
test
push
out
add
xor
cltd
inc
aas
add
add
xor
repz
rcrb
cmp
mov
ret
jle
pop
sbb
inc
adc
fists
dec
fisttps
xorb
adc
sbb
inc
imul
int
cltd
sbb
xlat
ds
ss
inc
push
mov
sbb
pop
dec
cmp
push
pop
xor
fldt
pop
cwtl
das
push
shlb
mov
pop
cmp
mov
gs
sub
testl
outsl
in
pop
loope
mov
ret
popl
scas
aaa
call
dec
cmp
loope
adc
mov
repnz
fiadds
je
mov
insb
xor
xchg
inc
fnsave
rcr
jge
fs
push
mov
call
icebp
divb
imul
call
test
fldl
scas
inc
dec
sub
pushf
jo
sub
mov
and
ja,pn
imul
sub
aaa
add
and
mov
pusha
dec
inc
lock
aad
push
lock
jbe
push
dec
mov
xor
stos
or
adc
mov
fwait
gs
sti
cs
bound
ds
pop
jno
push
pop
aad
push
mov
dec
add
pop
xor
stos
int
mov
pop
aam
pop
sbb
jg
lret
pause
out
lret
jnp
mov
mov
fst
xchg
sub
rcr
push
out
sahf
aad
ja
or
mov
scas
push
in
mov
divb
les
mov
leave
push
test
clc
mov
out
or
movsb
dec
add
xchg
mov
inc
inc
cmp
fldl
and
ja
push
xor
xchg
out
arpl
dec
cmc
sub
addr16
popf
add
test
rorl
idivl
ret
imulb
push
lahf
shl
xchg
into
dec
dec
pop
out
daa
dec
enter
sbbb
out
jmp
xor
push
sbb
dec
xchg
and
inc
sub
and
xor
push
insl
test
jl
test
cmp
mov
clc
mov
push
call
call
push
bound
mov
stos
popf
xor
mov
and
cltd
data16
lock
mov
or
lcall
mov
lea
pusha
or
fsubrl
clc
adc
mov
or
ja
fs
sub
add
stos
cmp
andl
jnp
jg
iret
mov
rclb
mov
decl
shrb
mov
into
popa
adc
mov
inc
cmpsb
sub
xchg
stc
push
test
xchg
add
cmpsl
xchg
sub
mov
and
push
inc
push
mov
shrl
pop
xor
or
sub
daa
xor
mov
push
into
inc
mov
sub
test
mov
add
stos
cmp
in
jmp
or
cmp
sbb
pop
inc
stos
inc
pusha
jo
rcrb
cmpsb
std
pusha
cmp
out
setle
std
pop
inc
pop
dec
pop
mov
jg
lcall
jecxz
jmp
hlt
stc
jge
add
sbb
mov
lcall
add
lret
rorb
adc
gs
sbb
insl
mov
push
and
daa
fidivs
push
testb
mov
pop
cmpsb
fs
sahf
sbb
insb
lds
out
out
or
push
outsb
int3
add
cs
loope
jb
jmp
adcb
xor
iret
inc
push
loop
out
scas
sbb
aad
sbb
xchg
shll
mov
test
std
mov
in
ss
icebp
push
lock
mov
test
out
add
pop
or
iret
cwtl
mov
out
inc
in
jge
imul
dec
pop
push
push
jecxz
sti
dec
dec
jmp
cmp
dec
adc
sbb
sub
inc
or
jnp
test
nop
adc
inc
inc
push
stc
aaa
push
sub
shlb
lea
sub
xchg
push
sahf
sbb
jbe
std
cmp
sbb
xchg
xor
loopne
pop
rol
pop
shrb
aam
xor
into
xchg
sti
push
pushf
pop
ret
or
cmp
mov
movsl
pop
mov
nop
push
mov
das
ds
ss
mov
les
cs
stc
jg
xlat
cmp
jge
nop
hlt
stos
test
pop
cld
or
or
loop
aad
sub
inc
movsl
mov
dec
pop
xor
cli
cwtl
mov
mov
pop
xchg
popaw
repz
lock
sub
or
xor
xchg
sub
shrb
icebp
mov
mov
sti
sub
pop
sbb
test
adc
test
mov
dec
xlat
dec
out
jmp
insl
jmp
ds
fwait
dec
push
mov
xor
lods
jbe
mov
jl
inc
fwait
pop
cmpsl
mov
adc
dec
cltd
and
jae
int3
test
insb
cmp
data16
lret
add
add
jge
dec
mov
pop
mov
inc
adc
cwtl
sub
add
xor
fs
repz
call
into
inc
xchg
jbe
fcmovnbe
xor
nopl
fnstenv
lds
mov
mov
xor
fmulp
jle
rclb
repnz
stc
popa
movsl
jl
xor
mov
or
fdiv
inc
scas
jle
aam
adc
cmp
call
sahf
cmpsb
inc
or
fs
scas
mov
pop
hlt
inc
les
xor
mov
decb
cli
repnz
aas
stos
int
jge
or
xor
push
inc
dec
scas
addr16
xor
addr16
jmp
inc
insb
out
adc
ret
sbb
sbb
or
sbb
sbb
cwtl
stos
or
push
in
dec
mov
cmpsl
ret
mov
lret
in
push
cmpsl
mov
or
sbb
jbe
sub
xor
push
sub
lea
xchg
shrb
xlat
xchg
fdivrs
mov
mov
lcall
mov
mov
cs
iret
cmp
xchg
insl
ret
xchg
call
cmp
shl
mov
rcll
push
clc
mov
dec
pusha
add
sbb
dec
push
add
stc
popa
push
or
iret
and
iret
enter
inc
add
cmp
push
mov
xor
mov
test
mov
jmp
in
sbbl
push
sub
clc
jae
clc
xchg
std
inc
out
sahf
aaa
mov
out
mov
pop
mov
rcll
inc
add
aaa
mov
lret
xchg
dec
pusha
sub
xchg
cmp
xchg
sbb
sub
cmp
inc
ljmp
mov
outsb
sub
mov
les
adc
mov
aas
mov
movsl
mov
push
push
pop
xor
push
jg
inc
xor
push
lret
xchg
test
xchg
mov
stos
inc
xchg
adc
shr
pop
lcall
int3
xor
xchg
inc
in
loope
jne
push
pop
out
mov
dec
mov
add
inc
ficomps
sbbb
adc
fxch
out
rolb
cmc
adc
fisubrl
fimull
arpl
jae
push
pusha
pop
es
or
inc
daa
sub
sti
jmp
and
ja
pushf
scas
mov
popa
and
or
ss
mov
mov
dec
dec
sbb
sbb
mov
decl
cwtl
inc
enter
cmp
mov
xchg
sbb
push
xchg
fdivl
test
fucomip
sbb
and
pop
dec
mov
sub
repnz
xchg
xchg
adc
jp
xor
icebp
xchg
fsubrs
or
jle
mov
aas
xchg
scas
xchg
int3
mov
loopne
or
jb
lcall
pop
mov
xchg
adc
inc
inc
pop
cwtl
aaa
enter
jno
mov
and
add
adc
mov
sbb
push
mov
jne
das
jp
mov
jbe
adc
sub
popf
sahf
push
fwait
mov
pop
sub
dec
icebp
and
sbb
push
ljmp
icebp
or
and
xchg
and
pop
flds
adc
sub
in
jl,pt
stos
add
int
movsb
mov
push
sub
jg
pusha
jl
fadd
in
mov
jae
fcompl
bound
gs
lods
cmpb
pop
dec
jle
sub
xchg
and
ljmp
add
inc
dec
cmp
pop
adc
xor
push
adc
or
inc
in
in
js
scas
mov
pop
int
insl
subb
jo
lock
sbb
mov
mov
xchg
and
jmp
adc
jp
stos
adc
stos
ret
jnp
adc
iret
scas
sahf
mov
movsl
leave
fcmovnbe
add
dec
sub
imul
jle
sbb
stc
and
pop
mov
stc
jg
mov
aam
pop
loope
mov
hlt
imul
sbb
add
mov
in
or
lods
cmp
push
leave
cwtl
aam
or
mov
jmp
mov
mov
clc
or
pop
mov
mov
sbb
leave
cwtl
test
adc
scas
mov
jge
std
push
lcall
popa
testl
data16
xor
pop
cmp
cli
mov
sub
push
negl
out
mov
inc
push
lret
notb
cltd
and
mov
imul
pop
mov
in
je
xchg
xchg
jae
push
cli
add
mov
push
int
iret
mov
inc
dec
sbb
daa
cmp
insl
add
out
cwtl
adc
scas
inc
jnp
or
and
roll
mov
ljmp
loope
gs
add
test
cmp
or
xlat
pop
and
pop
mov
jne
adc
inc
push
test
mov
ret
and
xchg
jns
call
hlt
lea
dec
or
lock
aam
mov
jae
test
ja
dec
sub
pop
mov
inc
test
sub
rcrl
xor
cmc
dec
fcomip
mov
test
enter
sub
call
or
mov
in
in
lret
xor
lea
clc
pop
jo
cmpsl
xor
and
into
xor
inc
pop
or
test
shlb
xchg
sub
ds
sbb
pop
insb
pop
jmp
pop
xor
xor
pop
out
fmull
mov
xchg
sub
loopne
rol
cmp
imul
sub
ljmp
orb
mov
add
int3
cltd
mov
in
push
mov
xchg
int3
push
insb
insb
sbb
hlt
sbb
addl
jne
xchg
pop
out
xchg
lods
inc
jle
pop
sub
popa
fdivrl
call
cmc
push
idivl
clc
add
les
mov
and
adc
popf
rcrb
mov
adc
pop
sub
jge
push
int
mov
sub
and
in
rclb
cmp
outsb
fwait
jnp
loopne
ljmp
pop
xor
lret
fbld
xchg
cld
popl
inc
jmp
xor
addr16
sub
cld
cmpsb
cltd
xlat
sbb
mov
xchg
mov
lcall
push
sbb
jns
pop
mov
rclb
sub
clc
pop
ds
cmp
ljmp
xchg
adc
push
inc
mov
jmp
enter
test
jbe
es
sbb
mov
mov
mov
xor
push
pusha
cmc
int3
cld
movsb
push
jge
into
fildl
lahf
jo,pn
pop
fmul
inc
mov
test
fiaddl
mov
xchg
movsb
es
mov
push
pop
movsl
push
add
sub
cmp
mov
jle
mov
test
jmp
and
sub
pop
inc
pushl
push
add
mov
xor
fucomip
sbb
push
lods
add
mov
add
enter
mov
push
cmpsb
xchg
cmp
pop
test
dec
loop
insb
or
jecxz
rol
sahf
sub
mov
mov
and
inc
aas
mov
xor
push
in
lds
icebp
movsl
mov
les
enter
xchg
loope
std
sbb
jg
enter
mov
in
jecxz
dec
cwtl
xor
inc
fs
inc
inc
push
mov
inc
jmp
xor
mov
pop
mov
ret
loope
ja
repnz
adc
nop
shl
push
cmpsb
cmc
pushl
popf
sub
mov
jnp
out
pop
adc
pushf
jns
xor
inc
sar
lret
fsubrs
push
adc
lahf
inc
pop
loop
dec
hlt
sahf
push
and
pop
sti
add
inc
pop
sbb
arpl
test
enter
and
xor
ljmp
scas
jge
outsb
add
inc
sbb
mov
sbb
dec
mov
iret
mov
push
loope
inc
je
jle
jmp
pop
sahf
dec
xor
cli
or
dec
dec
pop
pop
push
mov
out
es
push
out
mov
repnz
cli
in
jnp
cli
and
xor
sub
cmp
test
movsl
sub
xchg
inc
daa
xor
ret
shll
cmp
lock
rcrl
test
les
adc
shll
xor
or
dec
arpl
inc
xor
hlt
std
xor
cs
jbe
mov
cmpsl
pop
in
mov
stos
arpl
push
sub
int
sahf
gs
cmpsl
ss
enter
push
fs
pop
cmp
cmp
aas
stos
cmpsb
orb
dec
push
add
popa
lea
adc
cli
or
inc
inc
xor
dec
dec
lock
dec
lahf
xor
sub
jns
insl
xchg
adc
xor
xchg
arpl
jge
mulb
sbb
mov
out
cmp
mov
mov
mov
and
out
nop
inc
xor
aad
enter
mov
int3
scas
ja
cli
push
xor
or
push
push
cwtl
mov
negl
ret
xor
jo
aad
sbb
loopne
adc
and
pop
test
mov
pop
arpl
pop
rcrl
pop
out
lds
push
adc
out
int
loop
and
jmp
and
popf
test
cli
xchg
pop
ss
push
jl
sbb
mov
cmpsb
jle
addb
sub
cs
mov
xchg
sub
jge
aas
pop
ja
or
cmpl
adc
mov
shl
and
fistps
loopw
inc
in
jb
jle
dec
lahf
rolb
cmpsl
xchg
in
out
scas
inc
push
push
add
dec
std
int3
roll
mov
xchg
pop
scas
pop
js
add
loope
jle,pt
jo
push
dec
inc
or
cli
popf
ficoml
sbb
mov
or
sbb
dec
push
jl
insl
mov
xlat
jb,pn
mov
xchg
adc
daa
mov
lea
scas
mov
cmp
jns
adc
fidivl
or
adc
cs
bound
mov
adc
mov
cltd
inc
fcompl
testb
xor
push
or
jg
aam
loope
loope
cmpsl
xchg
or
mov
mov
push
mov
sub
daa
cmp
xor
xchg
push
mov
fwait
sti
push
sbb
inc
inc
dec
jne
mov
push
mov
icebp
sub
pop
movsb
shrl
addr16
mov
out
dec
out
adc
test
hlt
push
aas
fnstsw
mov
push
sub
xchg
push
inc
icebp
stos
jbe
jns
outsl
outsl
mov
ljmp
aaa
xchg
dec
push
dec
xchg
xchg
cmc
or
pop
test
loop
ffreep
aad
or
and
jecxz
shll
imull
nop
sub
sub
fwait
dec
xchg
ret
outsl
bound
push
lret
test
cmp
sub
pushf
js
pop
cltd
data16
notl
xchg
fdivrs
fdivrs
imul
cmpsl
adc
xor
bound
jge
ret
xor
jnp
pop
lcall
cmpsb
in
imull
cmp
jl,pn
sbb
lahf
mov
pop
push
cmpsl
jno
inc
xchg
cmp
arpl
int
adc
mov
sub
test
aam
push
inc
and
mov
dec
loope
jne
out
dec
xchg
jmp
int3
and
inc
fistpl
bound
je
aaa
dec
and
jb
add
sub
mov
dec
into
idivl
fidivs
pop
fnstenv
xchg
outsl
test
mov
int
inc
jmp
lahf
stc
and
push
cwtl
icebp
cld
cld
sbb
dec
pop
mov
js
add
sbbb
fidivrs
sbb
jge
pop
popa
imull
sbb
add
int3
xchg
sub
loopne
mov
and
xor
push
out
cli
lods
mov
shll
and
push
dec
pop
je
daa
imul
xchg
mov
gs
outsl
aam
test
add
xlat
repnz
and
dec
pop
lea
mov
cwtl
ror
jg
xchg
add
jns
bound
jmp
push
xchg
pop
or
adc
shlb
push
fcoms
shlb
cmc
inc
pop
lds
iret
popa
mov
cmp
inc
cwtl
lcall
outsb
in
ret
mov
mov
dec
les
fidivrl
push
sub
xchg
sub
mov
adc
dec
or
pusha
movsl
js
movsb
push
std
aad
add
cld
inc
push
sub
sbb
mov
imul
and
lret
pop
mov
scas
jb
mov
nopl
int3
adc
mov
es
cltd
fsubl
and
fsubrl
bound
rclb
or
or
dec
cmp
loop
jo
rcll
test
mov
outsl
test
mov
inc
fisubrs
loop
aad
xor
inc
push
mov
adc
jns
and
inc
inc
lahf
das
rcrb
out
popa
jno
or
dec
cmpb
sub
pop
xor
out
cmpsl
aaa
int
mov
mov
ret
cmp
pop
sbb
add
outsl
scas
push
pop
mov
out
imul
rcll
push
outsl
push
inc
lock
jo
and
std
xchg
pmaddwd
jmp
data16
sub
and
pop
jmp
and
out
inc
daa
xchg
popa
push
in
cmp
sub
cmc
pop
or
cmp
dec
mov
pop
lods
daa
pop
iret
dec
andl
mov
ja
iret
scas
test
hlt
jmp
xchg
xadd
inc
aas
test
iret
out
loope
jmp
inc
cmp
imul
out
test
idivl
ficoms
sahf
mov
es
test
movsl
fdivrl
inc
dec
adc
jl
mov
jg
lret
jmp
pop
mov
pop
or
aad
fadds
je
mov
enter
mov
or
dec
lret
push
sbb
cmp
repnz
pop
xchg
imul
mov
push
inc
jmp
jb
stos
pop
pop
xor
sub
test
testb
adc
pop
lret
pop
neg
push
insl
hlt
test
nop
sbb
fists
pop
loop
jl
fiadds
mov
xor
js
pop
and
jg
cltd
inc
hlt
out
movsl
jnp
fcmovne
add
pop
and
xchg
scas
mov
hlt
call
ljmp
ljmp
fpatan
pop
sti
cs
and
sbb
xchg
add
pop
and
jb
inc
lcall
jp
into
and
insb
ret
jno
jns
cmp
cmp
xchg
stos
rorl
cs
lds
outsl
lods
xchg
cs
outsl
xchg
lods
js
cs
stos
pop
push
inc
inc
in
sub
xchg
push
das
sub
mov
test
int
mov
adc
jo
in
out
je
xor
mov
sub
lret
sbb
cmp
xor
sub
lahf
sbb
stos
pop
stos
movsl
push
xorb
lods
cmpsl
xor
jb
rolb
push
aad
or
cmp
or
ss
inc
outsl
gs
jae
inc
pop
ss
test
inc
ljmp
dec
ja
sarl
addr16
cltd
add
fadds
insl
or
xor
mov
int3
loopne
data16
fistps
sbb
cmp
push
out
add
emms
sub
sub
out
mov
dec
cmp
std
mov
pushf
jo
sbbl
cmp
lahf
test
push
clc
jae
sub
into
push
stc
sbb
sub
in
mov
bound
lahf
leave
lcall
push
inc
mov
clc
adc
fst
addr16
mov
xor
or
xor
sbb
mov
inc
fadd
pop
push
adc
pop
xchg
std
mov
sti
sbb
shlb
insb
push
clc
jmp
and
or
inc
xlat
xchg
insb
cmp
out
inc
pop
and
pop
mov
jne
add
shlb
xor
rcrb
and
out
les
mov
xlat
cmc
cwtl
add
adc
shl
ja
sbb
and
dec
push
fistpl
fdivs
mov
add
add
orb
rcrl
cmp
stos
mov
or
jle
in
mov
jne
cmp
jmp
pop
dec
js
lahf
push
hlt
mov
popa
cmp
dec
cmpsl
cli
daa
out
test
test
jbe
enter
je
lock
inc
mov
mov
call
ja
lea
fsubl
sub
test
jae
mov
jae
dec
dec
xchg
stc
xlat
jecxz
rclb
cmp
dec
xchg
jge
dec
lcall
dec
lods
sbb
fs
and
mov
dec
push
call
mov
pop
adc
adc
popa
div
cmpps
lret
cli
sbb
pop
lea
mov
stos
fdivl
int3
mov
loope
into
mov
sub
pop
mov
popf
mov
loopne
mov
or
fsubl
lds
movsl
dec
vpcmpgtw
out
push
lahf
mov
out
jae
pop
jae
out
arpl
adc
push
xor
lock
rcr
push
adc
nop
jle
sub
jne
jbe
hlt
push
jno
or
or
data16
cmp
lahf
inc
movsl
inc
xchg
jno
dec
orb
pushf
arpl
and
out
call
int3
or
out
mul
mov
mov
int
pop
adc
shll
aad
jbe
sahf
mov
fsubrl
sub
ja
dec
fisubrl
pusha
push
add
lods
dec
loope
data16
jl
cs
mov
loopne
push
pop
lret
mov
mov
pop
adc
xchg
mov
sahf
lea
xchg
lods
mov
mov
sbb
mov
addr16
jb
mov
aam
sub
cmp
icebp
xlat
adc
enter
pop
fiadds
rcrb
mov
test
in
add
rclb
mov
out
fdivl
in
or
lds
inc
lods
or
pop
mov
sbbb
pop
in
xchg
add
push
xchg
push
divl
sti
sbb
inc
jno
jb
int
or
lods
out
jae
pop
into
pop
or
notb
jns
and
xor
fwait
push
daa
js
mov
or
mov
cmc
inc
scas
mov
dec
out
jle
pusha
out
inc
fistpl
mov
fdivs
dec
push
out
jns
cs
lcall
icebp
sbbl
movsb
into
lahf
mov
dec
dec
pop
std
xor
or
lahf
sbb
cwtl
loope
cltd
stc
mov
pop
fsubl
sti
stos
push
mov
icebp
in
arpl
fists
das
push
add
mov
pop
aam
cs
push
lahf
cmp
or
mov
xor
sub
push
sub
loop
test
xor
add
js
mov
movsl
push
pop
movsb
mov
push
cmpsl
xchg
cmp
cld
aam
clc
sbb
in
sarl
out
loop
stos
loope
insl
testl
xor
xchg
nop
cwtl
cmp
or
mov
push
jnp
inc
push
mov
mov
dec
mov
je
mov
nop
or
pop
mov
mov
iret
imul
ja
jmp
fmuls
jns
xchg
scas
outsb
stc
or
testl
fstpt
in
test
push
mov
scas
mov
sbbl
mov
cmp
mov
pop
inc
pop
testb
push
and
negl
cmp
xor
in
js
add
sbb
or
mov
fsubrs
pop
add
add
lock
dec
and
cmp
lds
repz
call
mov
adc
and
lds
movb
dec
xchg
adc
xor
fs
xchg
vmaxss
inc
out
jb
mov
sub
fimull
sub
push
lcall
test
scas
pop
js
mov
es
scas
mov
xchg
lods
sahf
mov
cs
cltd
das
adc
mov
push
add
loopne
fmul
stos
in
adc
xor
lock
loopne
sar
cld
xchg
or
es
jbe
cmpsl
cmpsb
pop
stos
sbb
loope
jle
mov
jle
andl
sbb
pop
or
add
xor
loope
outsl
jecxz
fst
add
pop
in
gs
push
insl
mov
jae
movsb
xchg
pop
sub
dec
and
push
add
popf
test
inc
fcmovnu
psllq
mov
ss
fisubl
push
cli
or
leave
int
mov
bound
cmp
pop
jmp
into
jbe
ret
repz
scas
outsb
leave
push
mov
je
cli
cmc
push
mov
add
cmpsl
stc
mov
mov
push
adc
add
sub
pushf
adcl
fistps
ljmp
out
and
lods
pop
sub
dec
subl
data16
daa
pushf
mov
xchg
loope,pt
js
and
je
xchg
lret
cld
mov
jmp
pop
add
icebp
aas
xor
in
bndstx
scas
loopne
pop
pop
loop
add
out
cmp
add
in
dec
xor
lods
jo
pop
repz
hlt
pop
mov
pop
loop
push
leave
dec
mov
jle
fimuls
push
add
ret
lds
pop
pop
pop
insb
xlat
and
adc
mov
sub
jg
lea
mov
iret
lds
in
xchg
xlat
mov
test
lea
insl
clc
adc
sbb
loopne
add
ret
scas
cmp
cmc
jno
xchg
xor
or
jbe
outsb
jmp
mov
inc
pushf
imul
push
stos
outsb
cltd
push
les
stos
shr
xchg
lods
int3
xchg
fiaddl
stos
fnstcw
push
add
dec
adc
lcall
jne
ror
mov
dec
xlat
xchg
or
pop
negb
sub
cwtl
aas
and
jno
adc
push
xchg
repz
mov
data16
mov
jp
mov
add
insl
adc
xlat
push
xchg
add
dec
and
mov
verr
shlb
push
adc
sub
aaa
push
gs
testb
aad
sbb
sub
dec
aad
out
jl
icebp
xchg
clc
and
jo
fwait
push
sbb
jne
in
fisttpll
adc
xorb
fsts
mov
dec
in
xor
popf
adcl
cwtl
gs
out
and
inc
mov
dec
out
push
inc
jl
pop
bound
sbb
jnp
fsubr
pop
inc
jns
add
adc
cmp
push
notl
loope
adcb
add
test
xor
and
xchg
jb
mov
dec
mov
inc
lds
add
push
dec
mov
pop
sub
or
pushf
sub
xchg
test
dec
lret
sbb
adc
dec
jmp
loope
loop
push
clc
push
fsts
sahf
popf
jmp
sbb
push
inc
incl
lods
adc
or
push
and
dec
lahf
sbb
lods
jge
and
xor
cld
repnz
mov
mov
mov
pop
or
jae
dec
jno
add
in
in
pop
xor
push
or
xor
call
mov
call
subb
shll
pop
xor
or
jns
push
jmp
or
push
ss
icebp
iret
mov
gs
pop
xor
jl
outsl
mov
or
inc
mov
add
sbb
ret
sbb
jno
fadds
sub
sub
inc
loope
imul
js
cmp
cwtl
mov
lret
jecxz
add
jbe
movsl
repnz
sahf
test
mov
popf
sbbb
or
imul
insb
fbstp
lret
fs
in
insb
mov
ljmp
ja
inc
sbb
test
pop
mov
mov
push
and
or
neg
ret
sub
mov
jnp
lods
mov
mov
mov
xor
cmp
out
rcr
push
mov
xor
aad
mov
jb
jecxz
cmp
js
sahf
repz
and
aad
or
xor
dec
in
mov
pop
push
int3
ss
stc
or
pop
pop
xchg
xchg
xor
push
xchg
in
rorl
lea
dec
iret
and
lea
pop
cld
mov
or
test
cmp
in
dec
lds
stc
add
div
ret
pop
sub
inc
mov
cmp
ret
imulb
and
dec
cwtl
jmp
inc
jmp
or
stc
mov
jae
mov
sub
mov
std
gs
sar
xchg
jg
sub
lea
jg
inc
daa
add
add
pop
rcrl
lahf
outsb
adc
rcrb
or
pop
and
sub
mov
dec
dec
mov
arpl
sub
lret
addr16
jo
js
xor
push
jne
cmpsl
cmp
les
je
mov
movsl
jp
add
dec
jl
outsl
sub
in
jns
js
in
ja
ja
data16
addl
frstor
pop
dec
pop
xchg
and
pop
cltd
jne
cmp
mov
xor
push
es
push
outsb
fcoms
xchg
rcrb
pushf
loope
xor
push
dec
jle
pop
mov
test
imul
xchg
mov
test
std
nop
pop
int3
xchg
sub
jecxz
sarl
add
or
fldcw
fimuls
aam
sti
xchg
repz
ja
mov
mov
xchg
xchg
push
jge
pusha
sar
cmpsb
or
imul
sub
xor
sub
in
cmp
subb
jno
mov
mov
clc
push
popf
jae
pop
sub
clc
int3
mov
fisttpl
gs
xor
inc
sbb
movsb
dec
sub
xchg
sub
pop
repz
add
add
pop
stc
mov
xchg
nop
ja
xor
pop
or
jne
shrb
cli
cmp
xchg
dec
jg
sbbl
out
pop
sub
inc
xchg
pusha
dec
pop
xchg
cmp
push
push
pop
push
or
sbb
sub
lds
cmp
hlt
xor
push
shrl
out
push
jmp
fs
shr
sbbl
or
mov
popa
out
cmp
and
push
add
add
mov
dec
filds
mov
jmp
int3
xchg
mov
inc
fwait
lods
mov
stc
stc
into
mov
xor
js
mov
movhps
sahf
inc
cs
negl
test
lods
faddl
addb
cmpb
xchg
mov
mov
imul
ret
shll
jno
popa
mov
sbb
frstor
pop
xor
push
rclb
add
mov
test
pop
sbb
and
je
mov
mov
pop
fcmove
dec
or
jae
test
lret
sti
sbb
popa
xchg
adc
jae
cmp
jg
out
adc
mov
push
call
mov
inc
mov
ja
dec
cmp
pushf
push
mov
add
ja
movsb
lret
ret
out
jmp
ret
outsb
add
rolb
xor
push
xor
sub
mov
inc
adc
iret
jg
and
push
repnz
repnz
incb
lods
aaa
test
in
mov
rcrb
dec
arpl
lret
push
repnz
aam
mov
inc
mov
std
outsl
int
mov
fnstcw
and
shl
xchg
cmp
mov
and
int
sbbb
xor
add
sahf
mov
lret
xorb
mov
xchg
dec
mov
call
rcr
lds
dec
loopne
repz
push
out
mov
mov
outsl
and
add
xor
ljmp
mov
pop
push
cwtl
pop
push
or
ja
push
addr16
push
jno
adc
mov
repz
xor
and
add
in
pushf
or
push
jl
cli
add
sub
rolb
aad
or
shr
and
mov
negb
cmp
testb
pop
out
add
push
in
jae
jp
cli
or
add
fidivl
rcrl
add
or
insl
addr16
and
in
push
mov
dec
insl
and
or
mul
repnz
lods
pop
sub
jbe
xor
test
push
pop
xor
nop
mov
in
in
jne
push
ljmp
inc
add
jg
arpl
jb
jae
jno,pt
cli
inc
mov
into
imul
es
push
lods
fstpt
mov
sbb
cmpsl
andl
lahf
mov
cmp
or
mov
loope
push
xlat
divl
lret
mov
fiadds
xor
mov
add
inc
jmp
mov
daa
imul
mov
insb
mov
aam
push
popa
clc
sbbl
lods
rcrl
outsb
adc
enter
mov
push
into
push
adc
leave
pop
xor
add
pusha
ja
mov
mov
popf
add
cli
xor
jg
dec
test
xor
cmpl
pusha
sub
fldpi
mov
insb
inc
jp
aas
add
pusha
enter
int3
pop
pushf
bound
mov
fbstp
bound
jecxz
ret
sub
insb
je
movsl
addr16
imul
out
and
inc
mov
adc
mov
sub
imul
cld
add
jb
sub
dec
xchg
and
rolb
pop
scas
loopne
push
divb
pop
mulb
xor
addl
loop
push
clc
mov
jmp
mov
push
push
fsts
xor
out
pop
leave
dec
push
popf
cmp
mov
fisubs
lret
mov
lahf
imull
out
xchg
fnsave
std
not
int3
xlat
popl
xchg
jb
jp
aad
sbb
arpl
inc
or
or
and
add
add
rorl
stos
mov
jo
push
js
xor
sbb
mov
hlt
bound
cmp
mov
cld
leave
pop
mov
lret
xchg
dec
dec
pop
push
loope
les
icebp
push
adc
cmp
cmp
fstpl
shr
pop
pop
loop
scas
xlat
mov
sub
dec
aad
in
jl
rol
out
insb
cmp
aam
inc
stos
adc
gs
push
loop
insb
pusha
jne
mov
ficompl
xchg
stos
push
repz
icebp
dec
jnp
mov
push
xchg
adc
andl
mov
out
out
sub
and
mov
loop
out
lret
pop
mov
inc
push
scas
mov
fmul
xorl
jb
and
rorl
arpl
call
scas
and
mov
lcall
jns
add
push
out
mov
xor
cli
push
fistl
xchg
leave
cmpsb
out
scas
pop
mov
lods
xchg
inc
jbe
sbbb
sbb
test
setns
xchg
nop/reserved
xchg
add
and
cmp
lods
push
ret
into
push
mov
adc
push
test
xchg
add
adc
lods
cmpsl
stos
lret
pop
into
mov
add
sub
mov
mov
dec
add
daa
mov
sbb
inc
jb
ss
sahf
addr16
imul
mov
xchg
repnz
sub
mov
rcrl
push
or
icebp
loope
dec
lods
mov
push
mov
ret
cmc
popa
dec
cmp
pop
mov
in
stos
leave
scas
jae
insb
js
xchg
fsubrs
cmp
cs
testb
mov
and
sete
fisubrl
mov
fnstenv
cmp
in
data16
out
shrl
push
js
ljmp
imul
ljmp
cmpsb
mov
and
ret
shlb
enter
mov
pop
cmp
mov
ss
out
pop
mov
pop
jecxz
inc
push
push
stos
mov
and
jns
lods
mov
jp
stc
in
subl
or
pop
popa
adcb
jns
roll
sti
mov
faddl
xchg
sbbl
out
xchg
iret
pop
in
hlt
pop
pop
nop
xchg
scas
sarl
xchg
sbb
mov
divl
push
fidivl
int
mov
xor
test
pop
orb
dec
xchg
js
ljmp
in
and
sbb
sti
mov
mov
or
jo
sar
cs
mov
mov
push
mov
aad
movsl
pusha
pop
shll
xlat
xchg
out
sbb
mov
xor
pop
in
mov
xor
lret
lret
push
outsb
adc
xor
push
xlat
into
or
loop
sbb
sub
in
into
out
sbb
pop
adc
xchg
cmpl
out
mov
jg
fnstenv
jge
subb
dec
and
jl
jmp
and
fisubl
cmp
ljmp
imul
and
fcmovnu
stc
out
lods
fbld
insb
rorl
adc
jmp
and
rcl
ror
xchg
subl
jb
mov
mov
push
xchg
decl
enter
inc
xchg
std
sub
and
popa
outsb
sub
mov
dec
mov
mov
scas
mov
jge
dec
fwait
cs
cmp
out
mov
insb
add
sti
popa
lock
movsl
sbb
sub
lds
mov
pop
sbb
jle
and
sbb
rcr
psraw
xor
in
cs
stos
les
cmp
xchg
fnstenv
xlat
sbb
test
xor
sbb
fwait
push
or
mov
addl
push
jns
mov
sbb
fs
aaa
into
outsl
gs
adc
mov
xor
add
sarl
or
mov
in
push
cmc
mov
popa
pop
ret
fists
test
inc
adc
pop
stos
jmp
mov
aad
dec
in
test
aaa
dec
fucomp
fs
push
das
jle
jg
pop
sbb
addr16
out
test
arpl
jecxz
movq
push
test
cltd
lock
in
out
adc
cmp
insb
xlat
push
jno
cmp
xor
xor
arpl
jne
cmp
or
add
pop
cmp
add
sbbl
shld
push
pop
aas
xchg
jg,pn
imul
mov
lds
xlat
bnd
xchg
imul
stos
fnstenv
popa
popa
push
outsl
adc
dec
pop
fdivl
jnp
mov
sub
sub
jno
and
sub
testl
inc
cltd
mov
cld
xchg
iret
mov
mov
xor
test
insb
jb
arpl
dec
ljmp
pop
in
jbe
jge
sub
test
xchg
cmpl
jo
pusha
je
jne
test
xchg
adcl
test
cmpsl
insl
das
call
push
mov
sti
mov
sub
mov
jp
dec
jo
add
dec
lret
pop
jge
test
add
out
sub
int
add
inc
cs
mov
int
mov
sahf
jno
adc
into
add
pop
xchg
jecxz
insb
lods
es
aam
lods
add
jmp
dec
sbb
dec
mov
cwtl
mov
mov
jno
lock
inc
push
movsl
jae
mov
out
int3
mov
cmp
idivl
fcom
icebp
or
jmp
fcomps
push
fstpl
out
int
loopne
addr16
mov
in
adc
push
jns
fcoml
and
pop
or
cmp
jns
mov
xchg
cli
cmp
jo
es
xor
dec
lret
pop
ds
or
in
pushf
sub
cmp
out
inc
push
jmp
cmpsb
jl
add
repz
sbb
push
or
mov
outsb
loope
add
sub
pop
stos
js
xor
adcl
call
jmp
into
sahf
dec
jns
movsl
xchg
dec
adc
gs
or
cltd
xchg
inc
imul
ljmp
mov
mov
inc
pop
pop
pop
or
cltd
fnstsw
out
push
push
test
js
in
and
fisubrl
dec
mov
dec
and
int3
push
das
xor
outsl
lock
stos
popa
or
jg
push
push
inc
insl
icebp
sbb
in
lock
dec
div
sub
out
or
pushf
imul
mov
xor
dec
pop
mov
xchg
xchg
rcl
xor
push
jo
push
push
push
dec
out
outsl
sti
mov
pop
in
scas
popa
xchg
adc
xorb
pop
adc
int
inc
movsb
jnp
and
cwtl
and
push
adc
mov
xor
daa
jnp
int
lcall
jbe
imul
pop
lcall
decb
mov
orb
jnp
xlat
insl
cmp
mov
imul
pop
clc
iret
mov
jmp
outsl
push
pop
notb
testl
fmuls
or
test
fs
push
in
andl
or
testb
pushf
insb
fisttps
push
sti
push
add
jp
cmp
minps
mov
xor
add
orb
xchg
xchg
push
neg
xlat
out
test
add
or
aad
hlt
mov
ret
int
call
sbb
push
leave
xchg
mov
test
sbb
adc
add
jb
push
jp
xor
aas
lret
enter
movsl
dec
and
sbb
xrelease
imul
sub
pusha
or
mov
mov
mov
jbe
mov
cmp
cmp
pop
scas
sbb
lret
dec
shlb
mov
pop
mov
fsub
inc
rolb
adc
fstpt
enter
xchg
pop
and
movsl
cltd
push
sub
mov
xchg
dec
ds
lods
inc
xchg
subl
or
adc
jge
inc
dec
mov
ljmp
scas
fs
loopne
mov
jmp
arpl
xchg
mov
jge
cmp
cld
sbb
sahf
push
sub
cmp
das
or
sbb
dec
add
xchg
subl
xchg
dec
mov
mov
ja
pop
push
je
push
je
mov
int
pop
push
sub
and
cli
push
fidivs
decl
mov
jae
pushf
shlb
ret
sbb
and
aam
add
call
stos
mov
fcomip
insb
inc
cmp
mov
pop
addr16
stos
idiv
stos
xchg
lods
sub
mov
pop
jnp
xor
idivl
lock
movsb
cmp
jecxz
mov
adc
popf
lret
and
inc
popa
xor
xor
gs
stc
jb
addr16
roll
add
jmp
push
ja
pop
jae
aad
jae
movsb
lcall
pop
call
lds
roll
sbb
and
pop
jecxz
lret
divb
push
cmp
xchg
sub
jg
dec
pop
jno
aas
add
test
aas
cmpsb
in
adc
mov
sub
jl
loope
push
lock
push
outsb
jo
mov
jle
testb
sub
fnstsw
ljmp
sub
sub
clc
cmpsb
in
jg
movsl
popa
mov
mov
or
ret
xchg
mov
loope
shl
push
mov
pop
adc
mov
mov
jle
loop
and
mov
sub
mov
jmp
insb
mov
adc
insl
rorb
pop
scas
jns
shl
adc
ds
icebp
dec
push
mov
das
enter
cmp
out
movsb
cmp
repz
or
ja
pushf
clc
fdivrl
scas
pop
inc
mov
push
adc
stos
mov
sarb
outsb
xchg
js
pop
xchg
jno
adc
fdiv
mov
lods
test
mov
sbb
out
sbb
xor
or
sar
das
sub
vfrczps
xchg
sub
scas
jmp
roll
cli
push
ljmp
orl
and
xchg
adc
test
fstps
push
or
cmp
fwait
and
into
sti
or
sbb
xchg
stos
arpl
xor
pop
in
sub
inc
fnstsw
fs
and
test
add
mov
mov
sub
inc
call
into
int3
ja
loop
sub
imulb
out
push
cmc
mov
mov
repnz
dec
sahf
rcrl
pop
sub
scas
mov
mov
scas
mov
xor
inc
inc
or
inc
fimull
sub
aam
adc
push
jae
adc
int3
adc
ja
xlat
repz
gs
cmp
push
fmul
out
push
sahf
mov
pop
scas
sub
stos
rorl
icebp
sub
icebp
out
mov
inc
insb
cmp
jno
pop
in
push
nop
mov
jnp
or
inc
mov
or
cmpsb
xchg
push
add
fnstsw
pushf
jb
test
cmp
shll
scas
or
out
int
das
sti
mov
fwait
push
imul
insl
ja
push
xchg
sub
mov
dec
rolb
pop
jl
dec
ds
je
or
jmp
lea
lret
out
enter
push
insb
add
mov
sbb
dec
in
scas
out
inc
sub
xchg
stos
and
adc
mov
pop
inc
inc
mov
in
out
push
mov
call
test
push
lock
mov
sbb
adc
and
jg
or
cmp
aaa
in
mov
out
lcall
or
hlt
mov
mov
mov
pop
sub
inc
jmp
out
jge
mov
cmp
das
lahf
pop
push
push
mov
call
pop
loope
in
adc
call
lea
mov
push
ds
push
movsb
decl
jmp
xchg
out
pop
or
xchg
dec
push
fsubrs
mov
stc
imul
scas
out
dec
loope
test
fildl
push
pop
cli
mov
add
mov
jnp
and
aad
add
cmp
pusha
aaa
xchg
dec
jne
pop
std
jb
mov
xchg
std
ds
movsl
call
xor
jp
xor
clc
adc
fistpl
xchg
adc
mov
mov
xlat
inc
imul
jle
inc
arpl
inc
pop
test
scas
xchg
das
cmp
lods
cltd
inc
fs
sbb
mov
repnz
add
mov
jo
adc
mov
mov
outsb
in
lock
inc
cmp
mov
push
xor
ja
ss
int
hlt
mov
ja
and
mov
push
mov
xchg
dec
pop
xor
mov
int3
pop
mov
mov
stos
iret
mov
jl
cmp
iret
roll
sbb
or
pop
and
inc
jbe
aaa
push
js
sbb
lret
jp
ffreep
rorl
mov
and
cwtl
mov
pop
mov
mov
loopne
dec
adc
sti
and
aas
arpl
fwait
add
push
in
cmp
xchg
out
jg
sarl
mov
sub
sub
add
es
inc
fwait
data16
xlat
leave
das
pop
mov
xchg
xchg
imul
sub
aad
jne
adc
lods
js
mov
inc
lahf
and
scas
xor
push
dec
stos
pop
divl
mov
lock
push
cmp
jmp
fcmove
cmp
pop
push
or
icebp
shld
int
and
sub
sub
in
rcrb
cld
push
mov
adc
xchg
shll
cs
mov
xor
mov
sbbl
mul
sub
jge
xorb
pop
lods
cs
lret
nopl
xor
jbe
jae
push
inc
mov
cltd
adc
stc
xor
enter
add
bound
lods
lea
nop
add
pop
bound
rcll
mov
stos
movsb
jno
rorb
xchg
imul
mov
adc
jbe,pt
insl
cmpsl
cwtl
xor
add
aas
ja
push
out
lea
xchg
arpl
data16
xlat
mov
inc
pop
popa
sahf
in
adc
push
stc
sbb
ljmp
pop
outsb
sti
xchg
sub
inc
fdivp
enter
and
dec
push
mov
cli
dec
cmp
and
insl
stos
std
or
clc
test
xchg
leave
addl
arpl
adc
jae
sub
shll
aad
mov
ret
mov
cmpsb
mov
pop
mov
nop
sub
mov
daa
movsl
in
ja
mov
cld
jge
mov
fnsave
pop
fs
mov
loop
sub
or
gs
aas
mov
ja
fcomps
add
add
xor
andl
hlt
outsl
xchg
out
in
mov
ffreep
fdivrl
jnp
pop
out
mov
sub
gs
mov
fstp
faddl
lcall
inc
lods
pop
add
xor
inc
fisubl
je
dec
insb
adc
nop
lret
lock
scas
push
push
adc
jb
mov
lock
cwtl
add
sub
pusha
adc
inc
mov
jae
jbe
fs
lcall
push
lahf
imulb
inc
sbb
dec
fwait
ja
int3
sub
enter
lea
lds
neg
std
push
dec
push
xchg
arpl
addr16
cmp
addb
insl
movsb
sub
pop
push
jmp
sbb
cmp
xlat
into
add
notb
xlat
into
or
repnz
xchg
das
xchg
aam
cld
inc
cmp
and
push
pop
rolb
add
and
xchg
lods
and
mov
arpl
xor
jmp
fsubs
pop
shlb
imul
push
jle
mov
adc
cwtl
sub
cs
jecxz
cmc
mov
xor
push
push
in
xchg
out
mov
jl
daa
inc
popf
gs
add
inc
stos
gs
fidivrl
sar
or
stc
orl
shll
fstl
icebp
inc
lock
or
add
sub
scas
or
addr16
and
fdivs
and
into
pushf
inc
add
mov
pop
push
mov
js
and
fildl
cli
push
xchg
aaa
fldcw
and
pop
push
js
daa
sbb
mov
insb
fwait
pop
jp
dec
jo
lcall
and
scas
lahf
mov
xlat
pop
mov
leave
jb
outsl
pop
popa
adc
shlb
mov
loop
mov
test
mov
sti
pop
out
loop
out
daa
dec
jecxz
cwtl
sub
dec
dec
push
int
dec
testb
aam
xor
movsb
int3
mov
jnp
shlb
xchg
xchg
add
push
orl
mov
and
jne
jbe
cltd
in
cmpsl
mov
mov
push
mov
cmp
les
push
xlat
adc
sahf
cmp
scas
pop
shrb
dec
notl
subl
xor
fs
mov
jmp
lcall
dec
pop
and
in
call
sti
cmp
fistpll
xor
push
sbb
xlat
cmp
jmp
movsb
mov
outsb
loope
jo
add
sub
sbb
and
jge
fld
out
cmc
xchg
mov
push
xor
push
inc
notb
loopne
sahf
cmc
je
add
ret
in
xchg
add
pop
sbb
pushf
mov
jns
pop
mov
push
xorb
cmp
push
pop
add
pop
imul
loop
insl
mov
mov
dec
fs
or
sub
mov
fcomip
ljmp
cli
and
adc
inc
movb
aaa
call
sub
mov
xor
pop
mov
push
sbb
xchg
pusha
cwtl
repz
add
loop
or
rorl
add
hlt
pop
jb
sbb
jg
test
pop
mov
stc
std
inc
in
adc
sbb
icebp
data16
xor
fs
test
adc
stos
rep
sbb
add
mov
mov
xchg
mov
sbb
cmp
into
js
jmp
sbb
inc
mov
adcb
ret
jmp
pop
scas
xchg
pop
inc
ret
repz
sub
fld
fisttpl
jg
mov
ret
pop
int3
cli
xchg
mov
popf
mov
and
push
jl
std
fmuls
repnz
testl
lods
out
enter
arpl
xor
or
xchg
push
or
outsl
push
add
push
lea
push
fs
les
sub
ljmp
divl
dec
loop
sub
sbb
inc
fs
rcrb
sbb
pushf
imulb
js
leave
mov
cwtl
cmc
push
xchg
sbb
add
mov
sbb
push
lret
or
dec
sti
push
lods
add
xor
imul
repz
mov
sbb
adc
inc
sbb
inc
fsts
xor
imul
into
mov
movsl
mov
pop
xor
sysenter
ret
out
sbb
pop
cmp
push
nop
add
cmp
int3
idivb
mov
fldl2t
push
or
out
stc
jns
aam
mov
cwtl
push
cmp
data16
cmp
ljmp
es
std
test
add
stos
xor
xchg
dec
adc
xor
xchg
sub
hlt
sub
xor
out
xor
and
cmp
pop
fsubr
push
or
xchg
sbb
jg
jbe
loope
xchg
push
dec
filds
fildl
fucomp
pop
loopne
fidivl
inc
bound
out
add
xchg
push
jae
arpl
mov
scas
or
xchg
pop
mov
pusha
dec
push
into
dec
fimuls
into
fidivs
leave
mov
faddl
and
sub
leave
jle
je
leave
mov
xchg
jnp
cli
icebp
mov
push
and
xchg
scas
and
jnp
into
lods
sbb
addr16
dec
ljmp
add
sbb
push
pop
fwait
in
pop
pop
call
pop
mov
ret
and
xor
adc
fmull
xchg
int3
cmp
push
dec
loopne
mov
adcl
mov
cmpsl
xchg
loopne
stc
jg
adc
pop
enter
sbb
ds
push
jmp
ljmp
xchg
das
add
out
lret
aam
jmp
lret
pop
je
mov
shrb
mov
int
xchg
lret
add
cs
pop
imul
divb
out
into
and
inc
push
in
pop
ret
hlt
inc
sbb
aad
insl
jg
mov
mov
or
insl
shrl
adcl
pop
and
sbbl
ljmp
lods
clc
xchg
and
rcrb
dec
loopne
sub
int
mov
cli
xor
jecxz
and
ficompl
fcomps
pusha
sarb
mov
mov
stos
cmp
popa
mov
mov
aas
xchg
and
dec
in
stc
mov
jnp
sbb
rorl
xor
mov
push
call
stc
cmp
xchg
sub
in
fwait
sbb
ret
xchg
jp
push
add
mov
mov
ror
pop
in
jae
add
int3
scas
lods
icebp
sub
pop
add
insb
loope
mov
lahf
mov
xor
js
bound
mov
xorb
lcall
out
push
sbb
or
js
mov
inc
sahf
test
jb
mov
movsb
aam
mov
shrb
test
mov
sbb
imul
cltd
popf
mov
cmp
fs
aas
call
pop
jno
enter
in
jmp
and
push
mov
mov
out
jl
int
mov
or
and
sub
and
adcl
imul
aad
in
test
cmp
cltd
jno
xor
xor
enter
and
xchg
inc
lds
sub
or
cs
jne
mov
sti
adc
inc
dec
fildl
out
sti
xor
jmp
out
xchg
and
mov
jae
loop,pt
pop
mov
sbb
jp
xlat
sub
jbe
add
lcall
clc
stos
jno
shrb
stos
xor
xor
push
cmpsl
push
std
cli
xor
xorl
inc
jmp
jbe
or
mov
and
cmp
jg
sbb
push
xor
xlat
sahf
inc
and
jno
inc
mov
inc
push
push
mov
xor
jae
out
jns
int
jge
jo
sbb
sbb
fs
sbb
gs
mov
dec
imul
mov
or
jnp
sub
loopne
mov
inc
rclb
test
and
popf
scas
xor
jg
sti
jno
shlb
aam
xchg
insl
dec
and
and
rcrb
lock
in
notl
test
adc
jg
out
mov
out
imul
addr16
fwait
xchg
mov
jnp
lock
xor
xchg
mov
mov
in
xor
sahf
mov
stc
xor
inc
leave
test
inc
pusha
add
jmp
adc
adc
jo
stc
cltd
or
mov
push
mov
jbe
out
mov
inc
push
mov
or
sub
xchg
cwtl
jnp
xchg
jo
ljmp
pushf
mov
rclb
inc
ljmp
and
mov
sahf
xor
aam
aaa
dec
pop
mov
sub
mov
jae
dec
pop
outsb
dec
pop
popl
enter
mov
xorl
xchg
punpcklwd
shlb
cmpl
and
pop
mov
lcall
and
xor
stc
mov
in
push
sub
aam
or
test
rol
pop
xlat
add
les
lahf
shrb
mov
sarl
les
rclb
mov
aam
push
insb
fists
dec
mov
pop
inc
int3
out
aad
in
movsl
push
cmc
leave
pop
icebp
out
pop
pop
jecxz
lret
add
int3
icebp
js
cmp
xchg
inc
lds
mov
pop
lcall
fistps
dec
jmp
push
xor
in
sub
arpl
clc
out
inc
andl
push
es
fstpl
or
movsb
inc
mov
out
ds
inc
sbb
pusha
push
loop
jbe
sets
loope
mov
mov
push
pop
pop
sub
xchg
mov
cmp
sub
dec
jle
mov
adc
scas
ljmp
inc
mov
cmp
fcoml
xchg
mov
dec
aas
pop
add
ss
int
xchg
and
add
test
js
mov
lock
or
clc
test
inc
pushf
dec
xchg
lods
fldcw
pop
add
mov
jb
fisubl
scas
stos
pop
loope
fsubl
aad
imul
mov
cmp
fwait
pop
neg
sub
scas
sbb
insb
jmp
imul
add
lret
mov
leave
add
adc
pop
inc
sbbb
mov
cmc
mov
adc
jb
outsb
sar
xchg
out
loop
ficomps
xchg
xchg
mulb
or
ret
popa
add
scas
xor
shll
mov
pop
dec
fidivl
icebp
rol
imul
cmpsb
cmpsb
mov
fsubrl
push
insb
popf
sbb
mov
mov
mov
enter
adc
pop
ret
mov
or
shl
fldenv
sub
into
cmp
je
clc
not
jmp
adc
out
pop
rcrb
xchg
xor
adc
cmp
idivl
movsl
lock
scas
mov
mov
pop
xchg
int
jecxz
cmp
call
mov
loopne
jmp
jl
mov
mov
mov
leave
shrb
jg
nop
pop
mov
sub
mov
jle
lahf
insl
arpl
jnp
sbb
aam
loopne
test
loope
cwtl
movsl
inc
fcmovnu
stos
sbb
adc
movsb
and
or
test
jno
jl
mov
fisubl
add
jge
xor
mov
inc
add
xor
pop
push
dec
pop
or
or
jne
or
xchg
pop
mov
push
mov
push
lods
sarl
adc
xor
jae
loopne
mov
pop
loop
cltd
xor
frstor
mov
std
ficoms
mov
and
dec
fists
mov
pop
add
and
popa
jmp
pop
scas
mov
stos
cltd
dec
cmp
push
xchg
mov
idivb
dec
arpl
ret
mov
cmc
sub
xchg
cmp
add
cmp
cwtl
inc
cltd
test
outsb
call
mov
pop
cmp
fadds
imul
jmp
cmp
mov
xchg
gs
inc
mov
addr16
pop
mov
pop
lret
jge
or
pop
sahf
mov
lds
add
jle
push
sbb
inc
fidivrs
sub
sub
jo
push
jmp
std
lcall
cmp
xchg
imul
and
scas
xchg
sub
cli
adc
leave
cmp
shl
leave
inc
dec
out
psubsb
mov
insl
add
cmp
das
cmc
rorb
pop
testl
or
dec
lcall
add
mov
add
sbb
xlat
mov
pop
dec
adc
sub
mov
adc
ss
das
sub
gs
fs
mov
lcall
and
sub
sahf
dec
mov
fnstenv
xlat
lock
pop
adc
ljmp
mov
addr16
ljmp
xchg
cmp
cltd
aaa
mov
fiadds
mov
insl
imul
aas
adc
lods
sbb
mov
loop
pop
mov
clc
popf
mov
clc
push
scas
cmpsb
add
and
pop
adc
fs
cmpsl
add
pop
lds
in
pop
and
sbb
pop
xchg
movsb
js
mov
aam
jmp
pop
and
mov
fnstcw
inc
sahf
cli
and
out
lret
mov
xchg
ret
les
sbb
in
sarl
dec
dec
int3
mov
fldcw
sub
stos
add
lods
jmp
repnz
push
add
arpl
sbb
sub
jge
jns
push
lcall
sahf
mov
or
addl
cli
pmullw
xchg
push
jmp
cwtl
or
addr16
xchg
push
and
out
jge
cmp
sbb
fidivl
dec
xchg
aas
mov
cmp
mov
mov
jae
dec
int
push
stos
sbb
mov
leave
call
push
subl
pop
sub
ds
add
dec
sti
add
xchg
in
mov
in
cmp
cmp
hlt
cmpsl
push
and
jmp
or
es
call
pop
sbb
dec
shl
xchg
imul
into
pop
movsb
push
push
push
aam
jo
clc
dec
jecxz
add
xlat
mov
pop
jle
fwait
mov
addr16
pop
jmp
sarl
rcll
pop
lods
xor
push
xor
xchg
and
xor
jmp
push
xchg
add
adc
xor
xor
xor
pop
and
and
std
xor
fcompl
push
js
jmp
aaa
xor
push
xchg
mov
push
sub
clc
ror
xor
lcall
push
ljmp
mov
fs
sub
aad
push
adc
repnz
hlt
and
popf
lea
hlt
inc
gs
mull
push
notl
ja,pn
xor
roll
stc
les
add
addr16
loope
pop
lret
addr16
sub
xchg
sub
jns
sbb
lea
ss
sahf
cmp
pusha
inc
inc
rclb
out
and
jmp
xchg
sbb
out
cmp
dec
ds
leave
mov
lods
cmc
lahf
add
inc
pusha
jo
cltd
in
mov
ss
popa
dec
dec
push
in
lds
hlt
xchg
ss
aam
notb
xchg
lret
mov
cmp
stos
mov
daa
adc
dec
jmp
lea
jp
inc
sbb
rorb
out
sarb
popf
sti
mov
pop
shrb
lcall
adc
and
or
shlb
mov
pop
cmp
jns
sbb
jg
pop
or
push
dec
xchg
pusha
std
dec
fs
call
and
sar
dec
mov
dec
and
cmp
and
stc
xchg
or
inc
or
mov
rol
stc
or
or
sub
push
std
inc
mov
ret
test
mov
out
cmp
push
out
add
icebp
xchg
mov
loopne
adc
cmp
lock
sub
stc
inc
push
mov
xchg
pop
aaa
xor
mov
dec
iret
dec
int3
fbld
push
mov
test
scas
push
leave
jecxz
inc
push
clc
jae
mov
fmuls
cwtl
scas
dec
push
cli
adc
fidivrl
dec
pop
dec
stos
test
push
cmp
repz
das
loope
in
test
mov
jg
out
aam
add
jl
jle
call
loopne
jg
jb
shlb
inc
mov
jne
dec
fldt
mov
inc
sbb
imul
mov
out
cld
out
lods
aaa
add
sub
jl
pop
jmp
in
out
dec
pop
stc
xor
inc
outsb
out
arpl
dec
neg
scas
out
add
dec
dec
mov
sarb
push
jns
enter
and
jecxz
insl
and
jl
in
dec
sahf
leave
mov
sbb
jnp
push
or
add
addr16
mov
fisttpl
popa
js
ja
pop
cmp
jp
outsl
jecxz
in
pushf
add
or
adc
push
fcmovnb
xor
jp
daa
popf
imul
jne
mov
fsubs
scas
inc
mov
dec
pop
add
cltd
test
lods
clc
mov
cmc
xchg
sbb
stos
sub
aaa
and
xchg
test
jo
addb
xchg
adc
adc
adc
sub
mov
ficompl
inc
xor
popf
adc
add
jb
in
mov
mov
mov
add
ret
div
popf
cmc
clc
cs
out
pop
xor
ljmp
inc
test
lret
jne
clc
jb
sub
fwait
inc
das
popa
clc
pop
adc
lods
jle
jge
or
nop
dec
or
pop
mov
xchg
dec
jnp
sarb
popf
ret
mov
popf
push
push
inc
inc
test
jne
inc
mov
push
sahf
gs
dec
rol
xchg
jns
mov
in
add
adc
ljmp
xchg
mov
movsl
sbb
add
dec
roll
in
push
es
rcll
dec
loop
jl
sbb
mov
xor
add
pop
xor
mov
inc
mov
clc
inc
push
jmp
test
pop
mov
lahf
dec
pop
add
pushf
xor
imul
fnstcw
xor
inc
arpl
lret
xor
mov
xor
mov
insl
aam
xchg
xor
fsub
inc
cs
dec
pop
stc
jnp
fstl
and
sub
aam
es
lret
inc
sub
xchg
hlt
jge
stos
insl
jle
outsb
jecxz
lea
es
lea
mov
xchg
sub
test
jb
jl
and
aaa
add
fistl
in
mov
sti
adc
cltd
dec
lds
stos
ret
xor
add
sub
cmp
xchg
jnp
adc
or
sub
lods
pop
add
jnp
cmp
xchg
lods
jp
subl
inc
arpl
cwtl
pop
mov
sti
mov
jnp
inc
stc
mov
jno
xchg
scas
inc
movl
mov
lods
mov
sti
ss
movsb
add
sbb
inc
enter
push
adc
add
lret
stos
jmp
inc
dec
xabort
push
lcall
dec
negb
xchg
inc
test
jle
imul
sbb
pop
cli
xchg
je
dec
cs
insl
test
stc
std
xchg
sub
repz
push
cli
xchg
iret
dec
stos
inc
insb
lock
enter
les
lcall
jecxz
sahf
and
pop
inc
inc
mov
orb
or
imul
jl
mov
imul
lea
dec
rcll
ja
mov
xor
sub
shlb
pop
sub
clc
loopne
loopne
ss
loop
stc
push
arpl
adc
mov
mov
aad
pop
cli
insb
imulb
mov
fwait
jge
les
push
stos
cltd
decb
pand
xlat
jne
inc
dec
add
dec
loop
testl
shl
pop
jmp
cld
jp
enter
ret
loope
and
lods
jbe
js
dec
decb
dec
mov
cmovl
xor
pop
push
rcr
push
cmp
pop
mov
sbb
adc
das
or
enter
sub
jne
jbe
sahf
inc
ror
ljmp
push
xor
pop
btc
or
sarl
jmp
cmp
xor
jno
jl
and
cwtl
shll
or
lock
loop
movsl
mov
jmp
xlat
fcmovnu
loope
push
mov
xor
test
and
cmp
aas
jno
pop
cs
aas
in
jmp
pop
mov
or
or
in
ja
cli
arpl
xor
decb
push
fwait
push
rol
lret
or
shlb
sarb
push
cld
fwait
and
mov
ja
addb
lods
push
mov
lahf
mov
jnp
jmp
or
xlat
divb
pop
mov
sbb
rol
outsl
xchg
dec
mov
movsb
push
daa
mov
sub
cs
scas
xchg
int3
adc
repz
sti
xchg
or
mov
adc
or
xor
jg
cmp
cltd
jo
cmpsl
or
xchg
adc
push
add
mov
xchg
xchg
lret
cmp
test
jnp
repz
cmc
mov
pop
popl
iret
jbe
push
cmp
cmpsl
lret
bound
rcrl
pop
imul
movsb
xor
jmp
dec
rcrb
mov
in
push
dec
in
push
cmp
decb
jge
imul
cli
adc
xor
and
sub
sbb
mov
push
insl
gs
pusha
dec
inc
cltd
mov
add
and
pop
push
vmovdqa
insb
mov
fdiv
aas
mov
fidivrs
sub
inc
push
xchg
dec
fimuls
rorb
cmp
sub
sub
mov
pop
jl
mov
mov
cmp
fildll
mov
or
add
movsl
jo
andb
repnz
and
xchg
inc
int3
arpl
push
fdiv
xchg
ljmp
jle
lahf
scas
wrmsr
fistpll
call
or
dec
jno
push
xchg
scas
jne
cmp
pop
add
rolb
out
dec
imul
sbb
jmp
lods
mov
or
rcrl
jnp
mov
fistps
cli
fstp
out
inc
pop
incb
fwait
out
adc
cmpsl
jmp
xchg
ljmp
mov
inc
in
cmp
and
insb
movsl
add
pop
mov
les
adc
test
add
movsl
cmp
fs
imul
mov
jae
pop
adc
mov
inc
fcmove
push
cmp
dec
sbb
or
add
imulb
outsb
rcrb
int3
lea
ljmp
call
adc
fs
hlt
xchg
mov
jnp
je
xchg
sub
xchg
call
pop
xor
sbb
stc
lret
dec
xchg
mov
in
orl
aas
jnp
icebp
insb
xchg
scas
xchg
cmpsb
mov
mov
call
cmp
sbb
add
jno
mov
inc
jge
inc
pop
push
xchg
mov
adc
xor
cmp
jne
shll
push
mov
mov
daa
lcall
gs
std
pop
cmp
cli
push
dec
loop
mov
imul
mov
fcompl
jns
adc
mov
add
mov
mov
sbbl
in
test
mov
xchg
dec
adc
mov
data16
sbb
test
test
inc
mov
jno
fistpl
add
xor
aad
sub
push
sub
sub
mov
jecxz
xchg
jg
xchg
ds
in
mov
call
xchg
fadd
repz
std
xchg
lret
dec
jecxz
sahf
mov
pop
decb
cmpsl
dec
mov
jle
push
js
mov
mov
fs
adc
xchg
inc
push
daa
cwtl
jb
imul
mov
add
jnp
imul
cmp
and
lods
lds
sub
xchg
or
int
insl
dec
mov
lock
cmpb
or
mov
mov
mov
dec
popf
push
fldl2e
pop
sbb
mov
mov
test
dec
fnsave
into
push
enter
jno
in
rolb
aas
iret
sbb
mov
daa
lret
sub
xchg
movsb
cmp
loopne
mov
jp
mov
fdivp
subl
out
or
xlat
mov
clc
sarl
adc
das
or
repz
in
aaa
push
sahf
xchg
and
pushf
std
cmc
add
lds
pop
mov
test
cmpsb
xchg
loop
add
mov
jns
xor
dec
jmp
nop
mov
cmc
bound
mov
xor
and
and
movsl
movsl
sub
add
bound
cmp
dec
mov
cmp
jg
push
imul
pop
and
stos
out
vmovups
xchg
mov
movsb
das
dec
adc
sub
dec
add
mov
jnp
xor
orb
add
scas
pop
repz
mov
jge
jp
jb
addl
bound
rclb
sbb
in
iret
xor
jo
inc
gs
sub
add
jmp
test
add
fiadds
movsl
test
jg
fimull
outsl
jnp
sti
psubw
mov
sub
push
sub
imul
into
jg
ss
into
cmp
mov
mov
scas
into
js
mov
stos
scas
sub
in
into
xor
jmp
or
mov
cmp
mov
jns
pop
xchg
jle
scas
mov
sbb
and
push
cmc
jl
dec
pushl
fisubs
fisttpl
cmp
xor
or
sahf
sub
in
or
call
pop
sbb
sub
jns
lret
popa
mov
dec
call
ret
xchg
adc
js
sub
subl
movsl
xchg
cmpsl
pop
lods
lds
push
fimull
jg
sti
and
loop
xchg
adc
and
push
jp
push
jle
decb
pop
mov
jg
jge
xchg
mov
sbb
jg
mov
pop
adc
pusha
add
nop
mov
jp
scas
in
xor
pushl
adc
inc
loop
sti
adc
mov
leave
lahf
ss
dec
pop
sbb
mov
sarl
into
ss
daa
mov
sahf
ss
pop
push
imul
gs
icebp
xor
dec
xor
out
hlt
rcl
sbb
push
aam
imulb
xchg
jp
push
sub
int
xchg
clc
sahf
test
cmp
cli
pushf
call
call
and
cmc
inc
test
or
scas
mov
cmpsl
mov
add
loopne
pop
or
out
ljmp
sub
in
fists
mov
or
pop
aaa
hlt
mov
pushf
hlt
mov
push
xlat
jmp
imul
nop
mov
inc
bnd
insb
mov
mov
repz
loopne
sub
push
mov
loop
mov
xor
xchg
and
mov
adc
jbe
insb
jp
inc
addr16
ja
jns
pushf
xchg
popf
xchg
pop
cmp
pop
les
popf
hlt
mov
shll
stc
or
sub
add
mov
int3
stc
daa
push
faddl
inc
add
fdivl
and
sti
sahf
sub
sbb
adcb
pop
xchg
loop
fs
notl
pushw
and
mov
cmp
pop
je
mov
lahf
or
or
daa
lcall
inc
inc
mov
popf
xor
inc
gs
sbb
or
jo
and
push
aas
call
adcl
mov
enter
sahf
stos
adc
jbe
inc
or
xchg
std
xchg
lds
pop
jl
sahf
xor
clc
hlt
cmp
leave
out
popa
mov
or
imulb
sbb
xor
enter
dec
dec
mov
jle
stos
enter
pop
jmp
fnstcw
jecxz
xchg
fsts
nop
lods
push
out
sbb
aam
pop
push
idivb
fsubrl
push
jne
jne
jns
frndint
and
dec
imull
mov
mov
or
sbb
mov
jl
mov
sub
jg
xchg
popf
push
and
iret
notl
add
pop
mov
das
inc
fcompl
lahf
sbb
adc
inc
or
cmpl
push
popf
push
insb
pop
cmp
add
icebp
xchg
mov
sbbb
or
sbb
repz
hlt
mov
int3
in
xor
xchg
jnp
jp
out
and
scas
sub
in
and
popf
shlb
ret
push
das
lods
dec
jnp
aad
push
jne
mov
fld
scas
mov
mov
mov
xchg
sub
stc
mov
push
mov
outsl
fisubl
push
xchg
and
jne
lods
push
mov
test
xchg
js
jnp
popf
shrl
dec
addb
cmp
xchg
mov
clc
sub
push
xlat
jl
lock
fdivrl
pop
mov
aad
jae
jecxz
ss
stc
cmp
mov
push
rclb
out
je
sti
xchg
cltd
inc
lods
sahf
jmp
inc
mov
mov
test
mov
sti
in
xor
lock
into
sbb
dec
cmp
push
les
xorb
aad
insb
jns
ss
pop
in
pop
stos
xor
pop
movsb
mov
test
movl
mov
in
cmp
addr16
push
mov
push
or
add
xor
add
cmp
mov
movsl
push
test
bound
insb
loop
iret
roll
push
dec
aam
add
add
in
sbb
in
popa
mov
push
loope
push
dec
add
andb
lock
xchg
mov
cmc
lret
les
xlat
xchg
pop
xchg
and
fistl
popa
mull
cli
or
cmp
adc
push
fldcw
sbb
push
jo
imul
sbb
pop
fisttps
lret
std
mov
movsb
mov
fisubrl
filds
popa
xchg
mov
outsl
nop
seto
jnp
das
nop
push
mulb
pop
ret
sub
in
scas
arpl
sub
jnp
xlat
pop
xor
insb
flds
mov
xor
cs
sub
mov
xchg
sub
dec
test
xor
mov
mov
in
pusha
test
outsl
mov
imul
orl
adc
ror
push
cwtl
mov
or
adc
add
ja
adc
and
mov
and
in
or
das
mov
adcb
loop
mov
out
xorl
rcrl
cmp
lds
pop
hlt
cmp
sub
movsb
mov
or
loop
fucom
xor
frstor
mov
imul
aas
hlt
mov
adc
inc
push
xchg
adc
xor
loopne
or
xchg
out
es
loope
sub
adc
push
imul
sahf
das
mov
testl
inc
lea
jae
jbe
rcrl
fwait
mov
aad
mov
mov
outsl
mov
idivb
sub
cmp
rclb
aam
rclb
sbb
cmc
push
rcrb
pusha
push
pop
fldenv
jg
inc
dec
xlat
arpl
stmxcsr
fistl
mov
adc
insl
out
ja
inc
lcall
popf
pop
neg
into
jae
sar
and
fdivrp
fnstsw
xor
sbb
dec
in
or
sbb
jg
sbb
lahf
aad
mov
cltd
clc
sahf
mov
iret
jb
in
lcall
je
push
jmp
insl
sub
insl
sub
sbb
sbb
jecxz
mov
jmp
cli
ds
movsl
xchg
xor
sbb
add
outsl
fwait
sti
xchg
nop
stc
and
push
clc
push
mov
xor
push
stos
sub
bswap
xor
pushf
mov
xchg
and
mov
xor
push
insl
mov
les
dec
movsl
or
sti
push
jns
dec
xor
enter
push
xchg
pop
negl
das
scas
jno
mov
fisttpl
stc
gs
aad
and
mov
int3
or
lods
mov
je
scas
fwait
add
fldl2t
js
loope
fisttpl
xchg
jnp
mov
or
fimull
js
sub
jno
sbb
push
js
pop
daa
loop
sarl
aam
sbb
push
testl
repnz
dec
sti
imul
inc
lret
fs
gs
je
imul
mov
or
lret
dec
cmp
fnstcw
lret
cmp
lds
and
sub
in
outsl
push
out
dec
push
mov
fisubs
clc
add
popa
repz
imul
stos
add
push
mov
push
xor
pop
mov
dec
daa
fldt
lds
sub
pop
adc
push
lret
gs
jbe
sbb
xor
lret
sti
xchg
lahf
cmp
and
pop
in
adc
mov
mov
xor
pop
bound
inc
cld
inc
mov
jae
fsts
lahf
push
xchg
inc
test
dec
inc
fbld
insb
aaa
std
shr
pop
jb
lods
ret
adc
popa
pop
ficompl
fwait
movsl
vdivsd
pop
icebp
add
stos
mov
lock
push
out
or
aas
in
stos
mov
push
faddl
xor
add
jg
or
out
jle
xor
imul
scas
dec
pop
sub
pushf
xor
mov
adc
sbb
or
sbbb
pop
cmp
out
sti
add
xchg
sub
dec
idivb
and
jo
xchg
mov
ret
outsl
imul
add
popf
lods
insb
add
mov
outsb
cld
loop
enter
push
fimuls
cli
lods
pusha
cmp
rep
mov
pusha
clc
sbb
cmp
mov
call
sub
sub
mov
mov
and
sbbl
gs
xchg
add
scas
cmpsb
mov
aaa
test
stos
mov
push
int
nop
push
jl
push
scas
ja
mov
push
imul
pushf
pop
mov
inc
mov
data16
lea
imul
push
stc
je
stos
cs
xor
sbb
lds
das
loopne
popa
cmpsb
adc
in
data16
adc
insb
jle
std
jecxz
lret
pop
cmp
call
sbbb
addr16
xchg
sarb
or
pop
icebp
mov
adc
and
sub
fisttpl
and
pop
xchg
mov
cmp
and
bound
fwait
mov
jnp
add
out
mov
stos
add
daa
sahf
cmc
aam
mov
pop
call
imul
jne
ja
movsb
push
mov
sub
insl
repnz
cmp
add
insb
push
pop
adc
xchg
call
out
cld
or
arpl
or
jl
fdivrs
sub
and
mov
pushf
xchg
inc
pop
out
stos
sub
xchg
inc
inc
mov
sbb
jge
repnz
push
rorb
lcall
je
push
into
pop
andb
lret
cmp
ja
lods
push
add
xor
popl
loopne
jge
mov
dec
mov
pop
insl
cmp
imulb
subb
fs
imul
fsubr
lret
inc
setp
popa
mov
push
pop
ja
out
cwtl
xor
cld
push
addr16
xchg
mov
mov
imul
fbstp
jne
pop
xchg
jge
fmul
pop
loopne
std
int3
fildll
ja
testl
bound
mov
push
jns
xchg
add
lods
push
insl
pusha
enter
mov
mov
sti
xchg
inc
xchg
xchg
cmp
xor
push
jne
rol
rolb
sub
adc
gs
in
stos
daa
jge
pop
int3
and
gs
mov
jb
fmull
push
dec
es
xchg
sub
dec
ja
popf
mov
cld
fidivrs
jnp
lods
pop
fstps
call
notl
pop
sbb
push
inc
ret
imul
jl
inc
xor
add
pop
pop
push
sub
fwait
pop
ds
test
and
insb
std
xlat
mov
gs
and
fcompl
push
xor
scas
and
dec
pusha
pop
icebp
sub
test
daa
sub
adc
jle
lods
outsl
fnstenv
clc
or
mov
int
in
fs
push
inc
dec
shll
push
pop
xchg
icebp
dec
sub
aaa
fdivrs
lcall
insb
movsb
pop
pop
add
mov
pop
out
sub
sti
dec
orl
adc
and
jmp
or
jnp
xor
mov
mov
outsb
add
cli
pop
les
add
fadd
and
add
adc
jl
push
pop
imul
jle
sub
dec
xlat
mov
testb
lahf
jb
fdiv
inc
add
xor
ljmp
outsl
enter
lret
cs
pusha
sub
iret
repnz
je
call
filds
clc
lcall
test
sub
fwait
cs
in
sbb
call
scas
mov
pop
out
xchg
or
mov
push
imul
pop
mov
and
mov
jnp
data16
fstps
movsb
sub
subl
fsubrp
mov
and
pusha
mov
in
je
in
popf
mov
push
inc
mov
mov
stos
fnstcw
test
shrb
mov
add
xchg
lahf
out
dec
shll
jmp
dec
cmp
xchg
outsb
hlt
jecxz,pt
sub
cmc
mov
or
repnz
cs
sbb
enter
sarl
stc
and
add
dec
sarb
push
mov
rcl
cmp
cmpsl
insb
scas
mov
repnz
adc
fistpl
fsubr
stc
jp
lret
mov
jl
mulps
out
and
test
xlat
jbe
jb
xchg
inc
push
mov
stos
inc
push
fnstsw
fs
mov
jmp
cmc
mov
stc
mov
pop
cmpsb
xor
jno
pop
popa
loopne
test
sub
and
lods
repz
andb
stos
xor
inc
test
test
mov
in
xorb
shr
fwait
or
mov
xor
lea
int3
jg
push
aad
pushf
fdiv
cmp
cli
out
dec
movsb
sub
sub
jmp
stos
pop
cwtl
sbb
xchg
aaa
popa
or
push
out
repnz
ja
add
mov
sub
loopne
jge
or
js
shrl
or
mov
dec
shlb
pop
aad
lret
dec
sub
popa
mov
sub
popa
test
insl
scas
bound
push
sbb
fdivrs
xchg
jp
push
inc
insl
cs
lret
inc
jg
dec
es
mov
jo
xor
sbb
mov
insl
cmpsl
test
add
inc
lock
mov
mov
bnd
jnp
stos
pushf
xor
adc
mov
shl
and
popa
cwtl
mov
ja
mov
inc
mov
orl
pop
dec
loop
add
adc
sbb
dec
cmp
nop
ror
mov
enter
cmp
mov
rcll
roll
dec
lret
xchg
cs
sub
mov
pop
add
inc
arpl
dec
je
inc
test
push
fiaddl
repnz
stc
jmp
negb
stos
dec
addr16
xor
jl
xor
pop
sub
jg
out
sub
lcall
sahf
scas
sbb
jle
call
popa
xor
test
fisubs
int
or
mov
insl
lods
loop
lcall
jge
mov
dec
adc
outsb
jne
mov
pop
inc
popl
jbe
add
cmp
cld
and
pop
mov
xchg
sub
neg
shl
mov
cmp
imul
loopne
in
ret
lcall
sbb
and
xchg
call
aas
jl
data16
dec
pusha
unpckhps
ret
and
in
pop
jl
cmp
testl
pop
lahf
sbb
orb
or
mov
xchg
imul
repnz
xchg
inc
xchg
dec
dec
dec
fadd
out
push
inc
inc
sub
jmp
inc
cwtl
inc
fcmove
xchg
xlat
push
stos
mov
out
xchg
jne
cmpsl
and
xor
das
add
xor
prefetch
outsl
push
xchg
push
aad
mov
test
mov
mov
out
movb
jns
mov
test
and
psubd
outsb
jp
mov
iret
adc
out
dec
pop
lahf
add
sbb
mov
fs
inc
xchg
popa
mov
mov
gs
adc
scas
mov
pop
scas
int
pop
repz
pop
jp,pn
add
dec
and
push
add
dec
sti
or
xchg
sbb
repz
push
in
dec
and
stos
xor
sbb
jns
insb
mov
popf
clc
add
sbb
jnp
xor
mov
insb
mov
adc
scas
xchg
jmp
fisttps
int3
pop
subb
nop
mov
adc
push
xor
sbb
xor
mov
xor
in
add
adc
lret
fnsave
lret
fsubrs
push
add
adc
push
testb
sbb
mov
mov
ja
mov
mov
inc
imul
pop
sarl
arpl
add
das
mov
xorb
mov
in
clc
testl
dec
loope
fwait
jns
fucomip
adcb
mov
push
xlat
jbe
jp
mov
mov
in
sbbl
xor
lods
imul
mov
into
add
push
jne
outsl
and
shll
sbb
jl
inc
mov
sete
inc
cwtl
mov
lret
inc
fsubl
gs
je
stos
daa
in
inc
and
rclb
push
push
jns
push
mov
mov
xchg
fdivrl
push
cmc
ljmp
or
orl
adc
in
pop
xor
sub
ret
test
movsb
ss
lret
lock
iret
cwtl
in
adc
push
add
in
into
xor
xor
adc
les
fdivl
outsb
jb
dec
fcoms
and
push
std
xchg
dec
clc
sub
sbb
hlt
inc
dec
mov
int3
shll
mov
rolb
loope
sahf
mov
out
and
iret
dec
adc
loope
sub
je
dec
dec
jecxz
pushf
jp
stc
adc
xor
push
pop
data16
mov
jle
pop
adc
add
es
pushf
xor
mov
push
imul
popf
repz
mov
js
push
call
dec
outsl
jnp
das
pop
add
push
sbb
stos
sub
not
inc
dec
pop
jns
jle
xlat
cmpsl
filds
push
or
jo
mov
add
addr16
popf
imul
xchg
jns
lret
adc
and
scas
mov
cli
mov
int3
pop
arpl
aam
push
testb
fisubl
mov
std
xchg
out
bound
pushf
mov
cli
mov
out
jecxz
fwait
mov
out
pop
inc
fmull
xchg
adc
movl
f2xm1
pop
sbb
loop
adc
cld
rclb
push
sbb
pusha
test
je
out
sub
or
and
sbb
insl
jge
inc
fdivrs
mov
and
shrl
lea
les
mov
or
aam
push
cmp
mov
mov
xchg
xchg
cmp
xchg
std
adc
push
jg
jle
out
bound
pop
cli
loop
int3
pusha
and
xchg
adc
jbe
lods
cmp
mov
xchg
push
int
push
outsb
sub
shlb
out
push
cmp
push
pop
pop
test
mov
adc
pushf
inc
test
or
ljmp
ret
rcll
aam
sbb
mov
in
hlt
mov
aad
fstpt
ja
push
stos
popf
xor
pushf
cmp
psrlq
pop
xchg
xchg
std
push
dec
inc
je
xchg
les
push
jmp
mov
lods
cmp
ret
lods
orb
sub
pop
mov
in
jbe
loop
pop
inc
pop
popa
cmpsl
ret
mov
movsl
push
roll
std
push
stos
push
cmp
mov
cmpsb
in
jecxz
and
xchg
sub
mov
sbb
inc
inc
jnp
adc
mov
push
add
xor
push
mov
inc
addr16
xchg
js
adc
les
rol
xor
out
fsubs
xchg
jb
xchg
pop
lahf
in
test
rcrb
mov
or
cmpsl
rcl
adc
imul
cwtl
ja
push
inc
iret
push
xor
lcall
dec
in
fdivrl
sbb
std
cltd
push
mov
jnp
js
add
pop
scas
inc
dec
cwtl
aaa
stos
add
xchg
inc
fcmovnb
sti
jg
movsl
jecxz
stc
adc
fnsave
outsb
out
inc
loopne
xor
jne
sub
stos
pop
mov
xor
loopne
shrl
sti
cli
sar
dec
loop
pushf
scas
jno
stc
and
cwtl
or
pop
add
xchg
loop
jo
sub
add
jp
xor
es
push
push
addr16
mov
dec
les
dec
adc
popf
cmp
push
cltd
test
xchg
cmp
xchg
out
add
push
mov
sbb
out
loope
out
fwait
jo
ss
sbb
sbb
mov
leave
out
fs
push
mov
js
lret
pop
push
push
into
xchg
cwtl
xor
and
jp
outsl
and
mov
cltd
hlt
and
add
imul
pop
ret
jb
dec
sahf
push
inc
or
cmpsb
adc
call
dec
inc
or
imul
nop
xchg
sbb
pop
ds
inc
mov
jle
movsb
aaa
lret
cli
std
sub
inc
rcll
fmuls
mov
ret
sbb
fsubr
cmp
adc
inc
cltd
lock
xor
and
sbb
inc
jns
addw
push
cmc
mov
test
andl
popl
rolb
add
movsb
fstl
into
lret
or
out
imul
push
ret
hlt
push
loopne
and
shll
scas
cmp
addl
scas
pop
aas
push
les
stc
imul
mov
inc
lret
cli
shl
sbb
mov
daa
movsb
mov
repz
scas
push
adc
add
add
push
inc
jmp
pop
roll
dec
pop
xchg
mov
mov
das
lahf
xor
mov
add
repnz
ja
dec
xchg
scas
ret
shll
cmp
imul
dec
daa
addr16
loopne
inc
outsl
jge
jge
push
jae
movsb
lret
fnstcw
rorl
jmp
fs
sub
mov
adc
add
mov
inc
pop
cmp
leave
fsubrs
inc
mov
mov
jae
jb
lret
inc
sbb
cmpl
cmp
pusha
cmpl
mov
adcl
xchg
mov
add
pusha
mov
cltd
out
and
push
inc
outsb
xchg
sub
mov
and
xchg
inc
cmp
add
in
add
cmp
int3
jae
inc
ljmp
ljmp
insl
xor
pop
out
mov
jno
and
xchg
sbb
or
sub
fisubs
or
aam
jb
nop
mov
jno
cld
xchg
popa
xor
xor
jmp
dec
dec
lock
sbb
movsl
xchg
dec
sbb
out
push
popf
add
ret
mov
repz
das
jns
pop
push
dec
dec
xor
xor
push
inc
das
fidivs
das
jle
arpl
shll
jbe
mov
insb
cmp
push
jae
call
jmp
ficomps
jne
shll
stc
mov
sti
or
xchg
insl
sub
xchg
jle
stos
int3
push
gs
fdivl
enter
sbb
outsb
mov
ja
cmp
pop
push
mov
cmpsb
out
cmp
mov
sub
mov
cli
stos
pop
cld
paddq
push
cmp
jp
cld
push
mov
aad
fimuls
sub
addl
bound
jne
sarb
bound
jne
inc
test
ja
into
lods
mov
add
fldl
shl
nop
push
dec
push
xor
pop
xor
aad
mov
sub
insb
sub
ret
dec
jecxz
mov
mov
pop
lock
inc
mov
pop
xchg
sbb
fsubl
sti
and
fdivrs
dec
inc
mov
lret
daa
sti
ss
or
cmp
rorl
testl
test
pop
mov
dec
mov
push
cld
test
mov
cltd
lret
cmp
enter
xor
iret
ret
pop
xor
loope
insb
adc
inc
or
je
jg
repz
ds
js
fisubs
icebp
pusha
mov
or
lcall
xor
jle
sarb
arpl
shlb
xchg
jecxz
addl
int3
push
stc
jmp
mov
cmp
cmc
nop
pop
cld
int
lock
add
scas
jmp
fldpi
xor
cmp
movsb
mov
ljmp
fsubr
pop
scas
cmp
clc
mov
mov
das
call
cmp
jp
xchg
sbb
push
stc
pop
ljmp
fsub
push
inc
xchg
mov
jb
mov
fwait
pop
jmp
push
xor
in
insb
inc
push
mov
lods
and
mov
cmp
mov
movaps
lods
inc
and
mov
sbb
fidivrl
nop
push
inc
push
xchg
mov
dec
sbb
enter
lret
bound
idiv
sha1msg2
dec
pusha
insl
adcb
push
lahf
stos
test
jmp
mov
cmpsb
fldl2t
cmpsl
mov
in
shll
inc
je
ja
jmp
addr16
push
xor
mov
adcl
or
jne
jle
lahf
out
push
lahf
es
mov
jne
mov
push
pop
jg
add
push
popa
sbb
push
and
call
xchg
lds
mov
mov
jle
mov
fs
sbb
insb
pushl
adc
and
fs
int3
popa
fdivs
jl
cwtl
lods
push
xor
rcrl
dec
jecxz
scas
bound
inc
lret
sub
jne
popf
inc
push
xchg
mov
pop
mov
pop
divb
mov
sbb
cltd
loope
dec
out
xor
bound
mov
pop
mov
xor
rcl
fisttpl
or
sbb
lret
jl
movsb
push
pop
dec
in
cmpl
mov
fwait
or
sbb
addl
push
or
jmp
dec
loop
or
pop
sbb
mov
xchg
cld
lret
adc
pop
add
mov
add
orb
xchg
push
lock
push
mov
aaa
int3
push
ds
int3
das
mov
sub
xrelease
mov
das
or
pop
sahf
jmp
adcl
mov
xorb
hlt
xor
imul
pop
fldt
dec
into
mov
sbb
addr16
push
jbe
mov
mov
jge
dec
ljmp
xchg
das
cmp
das
leave
enter
sub
dec
cmpsl
mov
pop
pop
imul
jne
mov
or
stos
js
in
pusha
mov
es
adc
les
push
sub
enter
pop
cltd
sub
sbb
cs
inc
push
insb
mov
ror
mov
mov
jne
les
cmp
and
dec
ret
cmp
cld
popf
imul
cltd
repnz
stos
sar
push
shl
xor
ss
lret
ficoms
outsb
repnz
mov
adc
and
push
std
inc
or
shlb
lods
lahf
es
xchg
lret
icebp
imul
sbb
data16
jle
mov
iret
xchg
push
gs
xor
inc
xchg
rcrl
push
lea
mov
add
fcmovne
mov
cld
pop
addr16
stos
insl
aas
in
xor
add
test
inc
lock
les
pop
adc
push
sbb
sbb
loope
push
cmp
mov
sbb
movsl
adcl
dec
mov
dec
out
xorl
je
pop
xor
sar
addr16
and
sbb
cld
jne
lods
vpsraw
test
in
mov
sbb
popf
and
roll
or
xchg
push
mov
mov
shlb
js
jp
mov
or
jecxz
int3
inc
mov
xorb
and
jge
mov
movsl
mov
cmp
outsl
cmp
ret
dec
fucomp
or
in
jle
stos
cmp
mov
and
add
mov
mov
les
fiaddl
bound
mov
push
shl
jnp
inc
sar
sbb
fwait
outsl
filds
std
shrl
mov
lds
dec
dec
pop
mov
mov
xor
enter
adc
ja
out
and
xchg
std
mov
lea
mov
addr16
fidivl
adc
mov
es
pop
sub
pop
push
xchg
pop
mov
pop
mov
imul
popf
imul
lods
enter
mov
xchg
adc
adc
push
in
dec
dec
sbb
fsubl
inc
insl
xchg
dec
push
stos
int3
push
es
fwait
call
pop
push
or
cmp
cmpsl
mov
mov
xlat
xchg
inc
ffreep
insl
pop
repnz
in
je
push
push
rorb
pop
lds
dec
pop
stc
frstor
mov
cmp
ret
adc
adc
shl
push
xor
push
xchg
pop
les
jnp
popf
xor
cmp
ret
aam
or
mov
ret
orl
mov
jae
inc
fs
xchg
xchg
fmulp
fdivrl
xchg
ret
outsb
rclb
mov
add
les
jp
inc
nop
dec
stos
inc
cmp
in
mov
notb
lcall
mov
call
fmuls
lahf
pop
cmpl
sbb
and
add
mov
orl
push
push
outsb
adcb
std
rcl
adc
ljmp
push
scas
inc
ljmp
xor
and
jmp
or
jg
lea
jns
adc
xchg
insl
xor
sbb
inc
fiadds
mov
and
jp
jp
mov
mov
push
cld
int3
push
ret
test
lret
push
add
mov
mov
loopne
mov
into
xchg
inc
fisttpll
cmp
repnz
or
idivl
push
in
and
jb
imul
pop
mov
push
push
sbb
mov
int3
push
push
fnsave
mov
call
gs
int3
fcompl
sub
aas
outsb
jle
jnp
repz
fdivr
jecxz
xlat
in
inc
mov
dec
mov
sarl
dec
stos
decb
push
add
and
fimull
push
xor
push
sbb
repnz
int
mov
sbbb
lret
xchg
cmp
jecxz
scas
jbe
js
dec
cmp
fiaddl
scas
xchg
shr
jae
ss
out
xchg
jbe
mov
cld
xchg
add
rorb
sub
xchg
inc
test
adc
jbe
lahf
cli
and
std
scas
mov
test
jae
inc
and
mov
pop
mov
pop
xchg
dec
mov
leave
imul
stos
inc
stos
or
rorl
fidivrl
ja
lret
cld
cmp
es
out
mov
xchg
push
sahf
fsubr
xchg
ss
cmpsb
gs
inc
insb
xchg
les
std
cwtl
fimuls
sub
jmp
xorb
shlb
push
jecxz
pop
sbb
aas
in
in
jbe
adc
mov
data16
mov
test
push
add
push
push
movl
lret
push
jbe
push
test
push
inc
pop
dec
out
xchg
jmp
sbb
hlt
push
jns
jnp
popf
and
sbb
fcomps
mov
and
mov
cmpb
andb
xchg
mov
add
and
xchg
mov
xchg
addr16
mov
dec
lret
and
test
lret
push
stos
adc
bound
sub
xor
andps
repnz
shll
pop
dec
push
cltd
es
leave
mov
mov
pop
fs
pop
push
fwait
daa
or
xor
rorb
cli
bound
mov
jbe
lret
out
inc
push
rol
imul
cmp
pop
scas
mov
int3
fdivs
clc
push
ret
leave
pusha
std
popa
aam
insb
add
sub
sti
sbb
enter
repz
out
inc
arpl
xor
sbb
jecxz,pt
in
jns
mov
scas
and
xchg
fxch
adc
hlt
outsb
repz
pushf
mov
sub
and
cmp
orb
mov
movsl
icebp
mov
pop
imul
inc
fidivrs
loopne
pop
leave
mov
out
mov
xchg
shlb
jg
push
stc
and
ret
xchg
scas
push
sahf
aas
sbb
mov
jno
jl
pop
cmp
pop
addr16
cwtl
rcrl
mov
mov
inc
insb
js
cmp
cltd
popf
mov
sbb
pop
adc
push
loopne
add
mov
jge
mov
cmp
arpl
xchg
mov
xor
sub
andl
scas
das
sbb
jo
dec
push
mov
nop
and
lret
mov
lcall
adc
push
enter
shll
or
sub
enter
or
pop
mov
mov
jmp
inc
dec
xchg
fsubr
iret
pop
rcrb
in
das
xchg
add
lods
mov
xor
mov
cwtl
xor
pop
stc
or
push
rol
mov
xor
gs
dec
pop
je
fs
mov
mov
lock
je
dec
pop
dec
pop
push
add
movsb
repz
sti
movsb
enter
jno
push
mov
jg
adc
inc
cmpb
lea
fwait
pop
mov
iret
jae
mov
ja
int
adc
imul
push
sub
loopne
jge
and
push
dec
stos
jle
adc
sbb
push
es
ljmp
ljmp
mov
xor
mov
mov
dec
jecxz
jmp
aas
push
shll
inc
xchg
sbb
addb
sahf
aad
push
imul
mov
aas
les
adc
shrb
pop
mov
mov
ss
jmp
mov
in
lds
or
add
fldenv
mov
test
jb
and
lret
dec
xchg
das
jg
adc
pushf
adc
mov
ss
and
repz
pop
repnz
sub
notl
pop
hlt
jl
shrl
fwait
insl
fmull
and
cmpsl
pop
lret
sbb
inc
arpl
cli
jg
int3
or
dec
add
xchg
push
dec
push
es
mov
lahf
cmc
sub
or
pop
pop
or
adc
cmp
fwait
test
adc
or
aad
or
mov
ret
aad
sarb
xor
mov
inc
pop
jb
pop
mov
mov
imul
ja
pop
or
stc
and
daa
lods
xchg
pop
mov
test
cmp
sub
mov
mov
mov
pop
insl
and
je
and
test
fs
data16
push
add
mov
sub
dec
jb
insb
xchg
es
add
dec
mov
jmp
mov
adc
or
inc
ds
loop
gs
xchg
fisttpl
mov
push
pop
cwtl
imul
sub
sbb
hlt
add
hlt
xchg
adc
jp
mov
stc
mov
mov
adc
cmp
lock
insl
jb
les
out
test
lret
push
loopne
outsb
adc
inc
movsl
push
jns
cmp
pop
popa
mov
lret
bound
int
inc
pop
jmp
push
das
mov
jno
xchg
test
ss
daa
push
push
xor
push
or
push
push
xchg
dec
leave
in
movsl
lds
mov
sub
mov
dec
out
movlps
and
dec
dec
mov
ja
or
cmpsl
mov
pop
popa
inc
enter
incl
inc
jae
inc
aad
xchg
pusha
int3
push
mov
out
mov
xor
sub
cwtl
cmp
lcall
cmp
cwtl
call
and
sbb
sbb
loopne
push
rorl
adc
imul
test
imul
add
xchg
xor
ret
ret
arpl
ret
clc
jae
or
mov
ss
das
jo
jmp
mov
cmp
fildl
mov
cwtl
aad
and
scas
sbb
mov
pop
mov
js
sub
stos
sbb
dec
stos
cmp
jp
in
mov
sbb
call
xchg
das
add
sub
adc
inc
leave
jge
pop
fisubrl
je
in
test
or
cmp
cmp
dec
outsl
int3
out
sbb
popa
jnp
cmp
lock
divl
xchg
xor
testl
idivb
cmp
cwtl
mov
pop
sahf
xor
fsubrs
inc
lods
inc
stc
sub
iret
sub
adc
shr
add
outsb
add
xor
add
lret
mov
fdivrs
outsl
mov
mov
mov
mov
pop
adc
ja
ss
cld
dec
xchg
push
cltd
fs
repnz
sbb
pop
cwtl
andb
mov
pop
stc
mov
mov
push
out
mov
pop
lahf
adc
inc
lret
aam
xchg
mov
movsl
push
and
movsb
test
jl
std
addl
ror
xchg
pusha
xchg
mov
mov
mov
dec
and
int
lods
jns
cmp
mov
cmpsb
mov
jmp
lods
sbb
mov
in
mov
add
and
subl
or
mov
jle
inc
mov
insb
mov
push
lahf
push
xor
pop
add
push
add
and
xchg
addr16
xchg
push
out
std
inc
jnp
aaa
popf
mov
mov
aaa
cmpsb
sbb
push
mov
ljmp
jecxz
jb
dec
js
fbstp
or
mov
cmp
popf
dec
sub
mov
pusha
push
sub
fistpll
jmp
xor
popa
test
pushf
jg
adc
add
mov
rorl
in
cmpsl
add
fisttpll
and
cld
jne
test
lods
aaa
ja
pusha
lret
add
mov
jle
sub
push
inc
jl
cmp
test
paddd
add
xor
pop
mov
dec
cld
call
stos
cmp
adc
hlt
sub
cmp
lock
jecxz
jp
add
jnp
and
pop
mov
jg
jecxz
je
adcb
loope
out
sbb
push
jns
daa
xor
adc
les
aas
mov
movsb
loop
mov
xchg
add
inc
jae
into
xor
dec
mov
ljmp
ljmp
cmp
jno
out
rep
fisttpll
mov
hlt
mov
fdivrl
xchg
clc
nop
sti
mov
sbb
clc
inc
ss
in
or
push
cmc
add
mov
push
cmc
mov
push
shl
outsl
or
adc
jle
inc
mov
jg
add
push
nop
mov
in
repz
dec
pop
nop
cmpsl
scas
inc
sbb
pop
mov
cmp
call
ljmpw
rolb
or
push
push
jnp
loope
mov
mov
imul
sbb
mov
mov
int3
lea
outsb
jp
mov
testl
mov
mov
bound
int3
jg
or
es
add
jl
es
test
mov
test
pop
lods
mov
jge
cmp
and
aam
cs
jmp
pop
mov
test
pop
out
inc
sarl
outsl
jns
shrl
sub
loop
cmp
xor
cwtl
inc
lea
mov
dec
les
lret
decb
movsl
in
lds
adc
movsb
cwtl
cmc
pusha
mov
ss
and
insl
imul
outsl
sub
push
dec
push
movsb
xchg
cmpl
sub
loopne
cwtl
mov
add
dec
mov
ret
outsl
sub
aad
inc
test
mov
rol
sbb
xor
xchg
push
inc
arpl
lahf
shlb
flds
mov
call
popa
push
xchg
mov
push
pop
cmc
cmc
fs
lock
leave
and
mov
push
and
mov
fildl
sti
jo
sub
ret
hlt
call
jle
xor
cmp
shlb
xchg
mov
bound
into
faddp
push
sbb
cmp
aad
fiaddl
test
stc
imul
adc
out
out
inc
mov
dec
cmc
adc
dec
cmp
aam
call
lock
int3
fsub
jle
adc
dec
sbb
lea
andb
pop
hlt
mov
arpl
fisttps
sbbl
in
int
push
sbb
pop
not
imul
mov
inc
adc
xor
cs
cli
lea
sub
mov
imul
data16
mov
mov
adc
push
dec
ficompl
out
call
push
leave
hlt
dec
loope
test
popf
push
jle
adc
cli
int3
fs
sbb
ror
cmp
xchg
ljmp
lods
adc
dec
inc
lret
push
pop
adc
call
cmp
dec
orb
dec
shrl
lret
mov
bound
add
fstpl
mov
inc
jnp
cmp
sbb
jmp
push
and
shr
das
mov
icebp
push
addb
push
dec
in
push
sar
pusha
lods
insb
in
and
test
push
sub
stos
es
in
dec
xorb
testb
sti
inc
icebp
sub
pop
fwait
fs
sub
or
and
sub
dec
dec
fwait
les
into
push
jmp
fs
jno
xlat
outsl
jmp
mov
push
and
xchg
mov
push
fwait
mov
push
pop
les
divb
in
adc
dec
cmp
and
fadds
cli
ja
rcrb
lods
mov
mov
gs
xchg
lret
jge
mov
and
mov
xor
xor
mov
inc
pop
push
mov
les
adc
inc
and
pop
adc
test
fsubrl
mov
mov
insl
jo
aad
pusha
shrb
negl
mov
jo
jl
sub
adc
lret
cmp
mov
insb
ret
xlat
or
sbb
pop
mov
sti
faddp
sti
pop
idiv
or
hlt
mov
imul
pop
mov
loopne
jg
cmp
ljmp
inc
das
daa
outsl
or
pop
cmp
mov
sahf
stos
xorb
fdivrs
mov
call
adc
lods
push
mov
lcall
pop
sub
pop
repnz
lods
xor
push
xor
dec
xchg
dec
push
push
loope
mov
sub
mov
outsb
cltd
dec
pop
iret
cmpsb
iret
mov
pop
cld
or
and
push
stos
lods
pop
popa
jl
dec
scas
orb
pop
mov
outsb
dec
xor
jae
pop
mov
cs
or
js
lahf
add
and
xchg
sub
mov
cmp
imul
mov
pop
lods
xor
jns
pop
scas
lods
test
jns,pn
test
dec
or
adc
mov
add
xor
jp
sbb
out
xchg
call
mov
ljmp
lea
sub
jb
mov
sub
out
ret
or
jae
cli
or
dec
add
fstpt
ret
xchg
movsb
xchg
and
jmp
sbb
push
lds
stos
inc
push
push
xor
pop
or
mov
push
repnz
mov
cmp
ss
insl
mov
push
test
and
pop
sbb
jle
adc
adc
mov
mov
mov
fisttpl
or
rol
sub
cmp
and
pop
cmc
mov
popa
jl
xchg
mov
dec
fimuls
xor
rol
xor
into
gs
ljmp
and
xor
dec
fsubr
jle
mov
mov
ds
and
aad
pop
addr16
push
mov
mov
fnstcw
loop
lock
aaa
into
cmp
out
inc
int3
mov
push
scas
filds
inc
scas
imul
in
xchg
xor
and
mov
push
add
xchg
cmp
popa
inc
mov
jns
xor
dec
xchg
mov
dec
xchg
scas
adc
repz
stos
jmp
das
fidivs
cmpsl
in
fs
push
int
decb
fnstsw
loop
js
push
out
adc
incb
orb
xor
push
pushf
cli
mov
mov
fisubrs
ret
nop
xor
mov
fisttps
and
xchg
or
addr16
inc
lock
jg
jecxz
lock
xchg
xor
test
xchg
fsubrp
dec
cltd
int
mov
jle
in
mov
mov
mov
mov
push
adc
cmp
in
xor
mov
into
inc
test
xor
fists
popa
sub
ss
pop
inc
inc
ja
jb
sbb
push
adc
push
ljmp
pop
out
dec
adc
pop
and
lcall
fs
int
pop
roll
lods
divl
aad
shlb
stos
lea
cld
jnp
xor
stos
sub
imul
divl
cmp
data16
adc
addr16
popa
mov
cmc
or
sbb
movsl
xor
rolb
test
push
lock
lods
scas
mov
cmp
push
repnz
je
loopne
sub
dec
arpl
sarb
bnd
sub
mov
das
mov
dec
mov
mov
dec
xchg
test
mov
icebp
aas
subb
fmuls
pop
outsb
xchg
sub
mov
mov
rcrl
inc
sbb
pop
mov
jns
stos
adc
pop
pop
jge
fisttpl
stos
popa
aam
add
or
inc
xchg
xor
insl
enter
inc
or
test
add
dec
pop
sbb
leave
xlat
push
insl
inc
or
into
dec
fists
fs
int
jae
test
enter
dec
dec
dec
jecxz
nop
lods
aad
adc
cli
shll
sbb
mov
mov
shl
push
add
repz
mov
mov
jbe
mov
les
cmc
mov
dec
fidivrs
push
loopne
mov
shll
in
fdiv
rolb
test
and
sti
data16
stos
fstl
xchg
std
mov
negl
pop
inc
in
ds
xor
subb
std
mov
ret
cwtl
add
inc
sub
je
ljmp
jno
inc
lds
mov
lahf
xor
nop
popf
vpslld
fs
push
xchg
sbbb
ret
cmp
xchg
cmpsb
mov
jno
xchg
fwait
xchg
cs
or
mov
out
dec
inc
push
jecxz
sub
js
xor
clc
sub
mov
int
pop
fs
xchg
stc
pop
stos
aaa
sbb
mov
jl
pop
jno
or
xchg
sarl
xor
js
popa
inc
cltd
xchg
add
hlt
outsl
lcall
sbb
shll
jns
imul
mov
insb
adc
insl
push
inc
les
aad
lret
arpl
ja
cwtl
jl
dec
decl
and
jno
or
pop
bound
cwtl
fimull
lret
lret
shl
push
push
sbb
push
out
pop
mov
jns
outsl
scas
sub
inc
push
push
jne
cld
lcall
sub
mov
mov
pop
pop
test
or
jle
pop
mov
pop
stos
int3
fisubrs
cwtl
icebp
or
dec
pop
or
lea
or
mov
pop
int3
imul
out
xchg
sbb
cltd
es
ja
dec
lcall
mov
mov
xor
inc
arpl
xchg
stc
in
mov
adcl
lock
iret
cmp
add
das
pop
movsb
jge
inc
dec
es
add
int3
cmpsb
movsb
repnz
test
movsb
cmpsl
xchg
sub
lret
jg
and
mov
or
stos
in
lcall
movsb
inc
inc
sub
mov
xchg
xchg
leave
dec
fcom
je
insb
push
inc
leave
fbstp
nop
adc
jg
jle
nop
daa
and
enter
add
repz
lods
sbb
xchg
scas
and
ljmp
das
cmpb
mov
mov
ja
aaa
xchg
lcall
or
rcrl
sub
lret
cmp
inc
scas
inc
jne
insl
dec
js
int
int
fsubrs
push
sub
outsb
out
test
int3
arpl
dec
mov
xchg
and
cmpsl
lods
aas
andb
rcl
adc
push
sti
lcall
idivb
pop
aas
lcall
pop
jb
mov
hlt
lea
jmp
push
sbbb
imul
test
add
mov
fwait
imul
push
pop
xor
lret
rclb
adc
mov
xlat
repz
mov
fdivl
shrl
and
test
jmp
jbe
adc
mov
dec
and
cwtl
call
adc
and
push
jmp
inc
push
lods
popa
pop
jo
dec
pop
scas
jle
cs
and
sub
fwait
add
or
dec
cmp
xchg
push
aam
pop
xchg
jp
pushf
jecxz
movsb
cld
hlt
mov
sbbb
add
push
scas
addl
dec
add
dec
xchg
jne
cmp
cwtl
push
fldln2
data16
jne
jmp
mov
fsubrp
pop
int3
fadds
int
ljmp
not
jb
loopne
sbb
push
sub
in
jnp
arpl
push
mov
daa
in
pushf
and
ljmp
push
and
lock
out
xchg
jae
or
inc
test
pop
outsb
mov
or
insl
cmp
fscale
popa
or
iret
xchg
sub
pushf
dec
mov
xchg
cmp
enter
mov
pop
pop
xor
ds
repz
rol
cmp
mov
sahf
iret
and
cld
dec
jns
lea
cmp
jle
xchg
push
dec
pop
mov
aam
lea
loopne
stc
dec
popf
xor
cmp
lcall
enter
pop
xchg
dec
jae
mov
loopne
out
sbb
xor
xchg
add
push
mov
xor
xor
dec
and
mov
fnsave
jge
lock
inc
or
lea
int
pop
jb
or
ds
sub
fisttpll
fisttpll
sub
mov
dec
sub
adc
mov
sub
imul
jns
lea
test
push
jb
test
shlb
lahf
push
stos
inc
and
inc
loope
push
ss
adc
insb
fs
stc
or
xor
inc
fs
adc
or
pop
add
and
pop
jbe
add
mov
sbb
loope,pt
movl
ret
ficompl
mov
push
pop
and
cmp
inc
into
enter
push
fcmovne
lret
adc
sbb
lods
inc
dec
fs
fistps
leave
cpuid
je
cmp
mov
mov
mov
sbb
xchg
std
call
or
xchg
fsubrl
sbb
mov
pop
sbb
dec
out
mov
adc
xor
and
dec
add
pop
mov
flds
enter
std
pop
jb
dec
xchg
cmp
fwait
nop
sbb
scas
xchg
sbb
adc
js
leave
and
cmpsl
mov
adc
nop
popf
cmpsl
sbb
cmp
mov
lds
scas
scas
cld
cmp
outsb
es
faddl
mov
cs
mov
jecxz
jae
cmc
andb
repnz
lret
iret
push
outsb
add
mov
push
test
aas
cli
insl
dec
out
xor
cmpsb
mov
daa
xlat
sbb
loope
scas
push
movswl
movsl
cmp
cltd
push
iret
shlb
add
lahf
push
push
imul
cmp
das
cmp
je
add
cmp
jl
loope
lahf
mov
aas
sbbl
aaa
jmp
arpl
lods
clc
add
sub
and
push
add
int
jl
fisubrs
dec
jne
mov
gs
dec
aam
inc
ds
aaa
jg
imul
adc
lret
jg
sbb
inc
daa
rcl
sbb
lahf
repz
inc
xor
into
gs
movsl
lods
ljmp
in
fucomi
pop
lcall
and
jo
pop
decl
ret
fists
cltd
fwait
mov
rcrb
push
pop
test
inc
sbb
lret
xchg
inc
xchg
sbb
nop
daa
push
sub
sbb
das
mov
enter
stos
imul
jae
scas
adc
test
cld
and
mov
add
scas
mov
stc
dec
xor
xchg
dec
dec
lret
mov
cmpsb
fs
jae
add
jne
jns
ds
ds
add
sub
inc
push
inc
ficoms
aaa
stos
popf
jle
push
mov
shll
sti
cmpsl
mov
jnp
mov
rcrb
add
ljmp
xor
shl
clc
dec
jecxz
hlt
dec
add
ret
out
sbbb
and
mov
dec
loopne
jne
lock
jo
sbb
pop
outsb
xchg
sub
cmc
and
xlat
rcl
imul
arpl
jl
gs
mov
adc
add
and
adc
clc
sbb
stos
jno
divl
push
mov
rolb
dec
loope
fwait
lods
loop
fistpll
add
lds
lret
rcll
adc
into
enter
lret
test
push
out
jmp
dec
scas
inc
les
xchg
fcmovnb
pop
push
jnp
xchg
ret
sbb
pushl
sbb
in
test
aad
rcll
push
jne
cmp
push
insb
mov
cld
cwtl
movsb
stos
jmp
cltd
pushf
jo
xchg
fwait
xor
add
into
mov
inc
add
pop
xor
xorl
fildll
mov
or
push
mov
inc
push
push
jno
dec
or
in
stc
icebp
jbe
inc
ja
cltd
mov
adc
int3
jnp
jno
cmp
ss
test
xchg
cld
hlt
arpl
and
add
stc
push
cs
imull
mov
jg
aaa
movsl
push
mov
xchg
mov
xchg
and
imul
mov
push
xchg
push
inc
pusha
cmc
shlb
rolb
mov
call
sub
outsl
jge
das
inc
bound
mov
xchg
outsb
lods
cmp
inc
or
mov
or
insb
or
call
int
inc
mov
mov
shr
inc
into
pushf
xor
outsl
jecxz
popf
xlat
ret
pop
cmc
fimull
leave
pcmpgtw
xchg
xchg
repnz
out
dec
loope
adcb
fcomp
in
ret
adc
outsl
cmp
incl
cld
mov
fcmovbe
mov
xchg
ljmp
mov
sub
xchg
lods
fstl
out
xchg
mov
mov
ret
addb
out
cli
movl
add
xor
and
fisubl
xlat
aad
leave
or
jnp
cmp
test
xor
sbb
mov
and
fidivrl
and
rolb
pop
sub
pop
hlt
pop
cwtl
dec
inc
das
jnp
sti
or
add
gs
clc
sbb
and
add
jo
pusha
sbb
dec
xchg
push
lods
sbb
cmp
mov
les
bnd
arpl
out
jnp
lret
movsl
adc
mov
loopne
scas
push
push
clc
dec
movb
adc
jle
outsl
ret
das
test
lret
mov
in
ret
and
xlat
jmp
and
push
xor
fbld
lcall
jl
xchg
sub
mov
dec
and
mov
xsha256
cmpsb
push
out
ja
nop
sub
loopne
arpl
pop
mov
shl
lods
push
mov
les
mov
in
pushf
dec
sti
mov
jg
in
ret
xchg
xor
cmp
mov
aas
dec
push
ss
xor
push
mov
jp
shll
insl
jo
push
jp
lcall
mov
push
push
jnp
push
inc
sarl
dec
loope
or
sbb
inc
jnp
jg
xchg
aad
lret
push
dec
mov
cltd
fwait
out
in
fsub
pushf
stos
mov
cmp
inc
lcall
insl
sbb
push
pusha
fstpl
xor
jb
inc
movsb
sarl
pop
or
orb
pop
cmp
adc
cmp
lcall
xchg
jmp
das
loopne
mov
adc
jg
lcall
fmuls
mov
les
imul
cmp
imul
rsm
in
call
cmp
fildl
cmp
dec
xchg
mov
jge
push
cs
push
aad
mov
add
adc
ds
add
push
loope
and
into
fidivrl
dec
movsl
out
lods
out
mov
push
cmp
lods
test
mov
int
insb
mov
pop
mov
stos
outsb
pop
adc
leave
jnp
movsl
sbb
adc
mov
data16
in
stc
rcll
and
push
stos
lds
cmp
stos
xor
cmpsb
mov
sub
mov
fwait
dec
pushf
stos
insb
push
imul
inc
pushf
cmp
es
cld
push
dec
imul
jle
cmp
cwtl
das
cmp
lcall
lahf
xor
loopne
mov
xor
mov
pop
fldcw
imul
pushf
imul
jmp
mov
sbb
xor
lahf
add
fisttpll
aas
lds
insb
sub
pop
sahf
push
jecxz
mov
push
add
popa
dec
jbe
shlb
sbb
daa
push
insb
out
jle
jg
je
call
out
rorb
fadds
xchg
add
je
dec
xor
sti
stos
mov
sbb
push
icebp
outsl
push
ljmp
jmp
mov
imul
addr16
adc
adc
xchg
or
mulps
sub
jno
jo
aaa
xchg
sub
lods
scas
mov
mov
fnstenv
adc
fisubrs
or
or
scas
xchg
sub
ljmp
or
movsl
fidivrl
cltd
mov
shll
aam
adc
jle
das
loopne
es
in
fucomp
xchg
lods
idiv
nop
pop
xchg
daa
nop
call
mov
es
jge
call
imul
negb
adc
cmp
outsb
jns
mov
xchg
aam
and
hlt
rdpmc
adc
jbe
jno
aaa
pop
std
xchg
mov
adc
mov
mov
dec
fcmovnu
ficomps
out
xor
add
outsl
ret
jne
xchg
shrb
fstps
inc
pushf
mov
into
push
add
testb
mov
jle
pushf
sti
cwtl
xor
movsb
js
loopne
and
lock
inc
pop
test
lret
or
cmpsl
add
pop
jmp
jg
insl
xchg
lock
fadds
flds
mov
sbb
mov
inc
in
mov
push
cmp
push
imul
push
push
mov
dec
mov
push
and
ret
jmp
pop
xor
jno
xor
xchg
mov
cmp
jae
addr16
ret
cmp
push
mov
pmulhw
movsb
mov
movsl
sub
in
iret
xorb
push
jae
inc
or
ficoml
mov
into
xchg
push
movsb
pop
push
add
aaa
std
pusha
mov
xchg
cmp
int3
jo
push
daa
in
rclb
dec
xchg
insb
push
sbb
les
inc
xchg
jne
inc
in
lds
rorb
fistpll
rorb
adc
jmp
add
push
push
das
jp
pop
test
scas
ja
and
mov
mov
dec
lea
mov
sti
je
xlat
scas
jecxz
rcr
inc
xlat
or
fstpl
sarb
leave
jo
repnz
xchg
test
lret
mov
mov
sbb
xchg
ret
pop
hlt
add
mov
pop
sbbb
loop
dec
xchg
jp
loop
add
cmp
or
imul
lahf
faddp
jo
std
outsb
lds
ret
hlt
sub
cmp
mov
inc
push
jnp
pop
push
test
lahf
cli
xchg
in
push
test
loope
sub
adc
mov
mov
test
cmp
cmp
cmp
lcall
cmpsl
dec
popa
push
andl
sub
stos
mov
shl
inc
insb
adc
sbb
in
xchg
movl
aas
sub
cs
leave
stc
pop
das
mov
adc
and
stos
add
scas
movsl
pop
fdiv
inc
rclb
test
xchg
enter
nop
mov
ss
es
fisubrs
mov
dec
dec
aam
push
mov
dec
add
rcl
push
test
adc
aad
insb
push
cmp
rep
and
add
cwtl
test
mull
sbb
jmp
xor
out
mov
push
out
clc
inc
divb
cmp
movsb
repnz
or
or
pop
adc
dec
cli
ret
mov
sbb
add
pop
daa
mov
mov
fcmovb
sbb
fwait
lahf
daa
sub
test
insb
cmp
mov
sbb
push
mov
add
cmpsl
jle
xchg
inc
gs
mov
cmp
cmpsl
fs
mov
addr16
dec
cmc
adcb
jecxz
icebp
cmp
add
push
inc
stos
aaa
or
add
ret
add
pusha
bound
in
daa
cmp
and
and
dec
ljmp
daa
sub
mov
mov
clc
leave
dec
push
inc
std
jmp
in
sub
shrl
cs
xor
mov
lods
addr16
pop
ds
mov
mov
pusha
push
fwait
aaa
pusha
mov
xor
lahf
aaa
pop
xchg
mov
movsb
xor
jo
inc
push
inc
hlt
push
or
in
xchg
sbb
add
jmp
inc
pop
jo
aad
fdivrs
cmp
cmc
or
scas
movsl
add
jg
andl
lods
add
cmp
pop
rcr
xchg
and
scas
test
mov
mov
scas
dec
in
int3
mov
movsl
in
inc
addr16
scas
xor
daa
loop
sub
xchg
ja
fsubrl
int3
lahf
vfrczss
and
xchg
mov
xchg
xchg
mov
std
mov
cmpsb
inc
and
adcb
adc
xor
loope
mov
add
sbb
rorl
sti
cld
cli
push
test
and
imul
es
lea
test
jge
js
mov
mov
pop
test
gs
mov
push
lods
lods
xor
jb
cli
cmp
scas
aaa
test
xlat
outsl
jno
decl
fwait
pusha
clc
shrb
jo
xor
xchg
dec
enter
and
stc
mov
mov
push
xchg
test
jb
das
or
push
adc
sub
je
cmpsl
lret
and
jo
inc
mov
add
jnp
sbb
xchg
pop
jmp
out
mov
ljmp
sbb
or
adc
mov
jns
mov
js
inc
in
mov
inc
outsl
shll
inc
pop
outsb
mov
mov
das
cli
jne
cld
insb
add
out
mov
cld
mov
or
push
push
cmp
fcmovu
pop
icebp
or
cmpsl
js
pop
xchg
push
inc
repnz
idivl
out
shl
cmp
pop
mov
rol
cmp
inc
fnsave
xlat
fs
push
add
test
sbb
cmp
sbb
xor
jns
pop
movsb
test
pop
divl
fdivl
push
add
fistpl
cmp
aam
das
pop
mov
testl
ljmp
jnp
inc
jo
iret
pop
sbb
sbb
test
mov
lcall
and
mov
jge
and
sti
ds
jmpw
inc
js
push
jp
cltd
mov
imul
xchg
add
dec
xor
or
movsl
push
jmp
loope
cld
and
or
stc
popf
ds
mov
jge
filds
aad
mov
or
outsb
mov
inc
mov
inc
popf
pop
arpl
adc
inc
gs
popa
push
push
aad
lds
js
ss
jo
xchg
sarb
pop
mov
stc
inc
adcl
inc
mov
pop
sbb
and
sbb
and
cmp
jbe
filds
add
std
std
cltd
fidivrs
mov
enter
dec
popf
outsl
iret
jo
out
pushf
pop
xor
cmpsb
outsb
loope
push
jg
test
scas
js
jo
sbbl
pusha
je
adc
lcall
mov
pusha
loopne
cmc
cltd
or
push
cmp
daa
ret
xor
ja
or
lahf
mov
fisubl
mov
or
std
and
jb
jmp
leave
and
or
nop
arpl
adc
std
dec
pop
jbe
and
push
lret
int3
xor
fs
fs
test
adc
xchg
mov
lock
dec
pop
adc
mov
sti
push
or
ljmp
xlat
gs
mov
ficomps
call
fisubrl
dec
inc
std
cs
popa
clc
sub
mov
and
iret
loopne
popa
and
cmp
ret
hlt
add
fmul
fstps
jle
sbb
inc
movsb
jnp
mov
add
dec
push
inc
lods
jmp
sbb
in
mov
out
bound
fcmovnb
xor
push
rolb
sti
sti
pusha
popa
xlat
jmp
sbb
clc
xorl
aas
push
in
push
inc
test
outsl
inc
ret
inc
lock
rolb
jle
jmp
adc
sbb
pop
stc
std
ret
or
pop
or
arpl
cli
fwait
cmp
xor
mov
pop
sbb
jno
enter
sahf
push
int3
in
mov
aas
in
or
adc
and
and
adc
jge
xor
sbb
mov
cmp
add
fucom
push
sub
fdivs
in
inc
dec
ss
or
ljmp
dec
adc
aad
aad
ljmp
add
loope
mov
xchg
or
jp
add
jg
mov
shlb
xlat
mov
test
push
inc
push
dec
push
sbb
lods
adc
adc
push
mov
inc
mov
push
sub
pushf
popa
mov
ss
add
push
jb
inc
scas
gs
int3
daa
test
lret
lods
and
rolb
xchg
mov
pop
testb
jge
faddl
iret
es
fwait
xor
sbb
popa
lods
les
mov
ret
ss
xabort
setp
inc
in
ss
aaa
pop
fcmovnbe
int
or
fdivrl
jae
sub
and
cmp
jg
sarl
dec
aaa
sbb
cwtl
rorb
lret
outsl
icebp
imul
adc
dec
mov
cld
subb
nop
dec
jmp
xor
and
fsubl
sbb
out
and
xlat
mov
fidivl
cmp
into
out
mov
movsl
adc
test
fwait
push
loopne
or
push
add
je
test
jns
test
inc
nop
into
je
jmp
xchg
xor
cmp
push
xchg
lret
mov
mov
call
inc
push
pop
xor
popa
and
pop
sti
inc
insb
or
out
mov
popf
leave
push
lahf
and
jp
in
mov
push
inc
mov
inc
cwtl
movsb
jno
sub
fcom
pop
je,pn
xor
adc
ja
fwait
xor
je
push
xor
mov
dec
fdivs
inc
mov
add
out
sub
outsl
pop
ret
cld
mov
ja
fstpt
lcall
jae
aad
outsl
xchg
mov
pop
out
pop
push
mov
in
fidivl
push
les
cmp
fbstp
inc
xlat
arpl
ds
sbb
jg
mov
jnp
and
and
mov
ja
mov
dec
mov
idivb
sti
mov
mov
stos
or
push
sti
outsl
loop
or
mov
mov
ror
loope
cmp
push
shl
push
mov
xchg
dec
xchg
sbb
dec
mov
stos
mov
roll
cmpl
or
lods
mov
xchg
bound
xchg
dec
test
enter
dec
sub
inc
lcall
sub
push
add
and
push
cmp
movsl
and
je
fldenv
xchg
dec
addb
jb
cltd
pop
mov
jl
pop
out
out
add
fimuls
xor
inc
rclw
mov
mov
mov
sbb
loopne
call
bound
mov
sti
ss
aas
shl
inc
mov
jae
pop
hlt
mov
out
lods
jnp
out
outsl
xor
or
rcl
mov
jmp
notl
loope
or
cmp
add
cli
jo
and
das
dec
dec
jg
les
out
or
dec
push
push
mov
add
int
sub
test
test
les
mov
ja
insb
push
lcall
jbe
out
lret
adc
add
sti
inc
stc
fs
loopne
lcall
es
push
out
mov
and
inc
inc
repz
xor
jb
negl
sbb
stos
lret
xchg
jp
out
adc
pop
sbb
or
ja
mov
sbb
push
outsb
rolb
nop
scas
ds
sbb
bound
stc
pop
jbe
andb
dec
xor
lea
sbb
scas
push
insl
lock
xchg
and
pop
sbb
lret
add
rcrl
mov
sarl
imul
jae
jno
and
cmp
jnp
test
or
ds
push
fidivl
je
pop
push
lret
ja
push
daa
sahf
andl
test
mov
icebp
mov
cmp
cli
ljmp
lock
xchg
mov
push
seta
and
or
cwtl
jg
imul
push
mov
icebp
out
mov
addr16
outsb
xchg
lret
adc
test
stos
adc
xchg
mov
jno
sub
nop
adc
negl
les
pushf
sub
sub
adc
dec
fucomip
insl
jnp
push
and
push
dec
insl
enter
lea
sbb
ja
popa
fidivrs
sub
dec
mov
pushf
cmp
pop
inc
dec
mov
pusha
aaa
pop
sarb
lods
ficompl
pop
add
xchg
gs
inc
fdivrl
adc
lea
fmulp
xlat
or
es
jno
jl
mov
and
push
cmc
jns
js
roll
and
in
add
stc
cmpsb
xor
cwtl
jne
addr16
sbb
add
jg
cs
jge
and
sbb
and
xor
xor
mov
fistps
adcl
jnp
mov
lcall
push
subl
jbe
in
or
jle
mov
or
sbb
fucomip
pop
pop
fidivl
cld
icebp
push
jl
clc
push
test
fldcw
mov
lret
mov
call
cmpsl
xorb
sub
out
cwtl
leave
sub
jl
mov
mov
and
adc
push
in
lret
xor
sahf
cmp
xchg
or
and
mov
xrelease
ja
push
xor
inc
ds
add
ret
cld
outsl
sti
sub
mov
inc
das
daa
outsl
scas
pushaw
clc
imul
sub
cmpb
call
adc
outsb
fwait
pushf
dec
popa
mov
jne
sbbl
or
inc
into
jmp
filds
in
dec
out
lahf
mov
mov
fs
xchg
enter
inc
std
cmp
mov
or
xchg
sub
nop
testl
jp
imul
shrb
jmp
mov
or
push
hlt
test
push
push
lahf
js
mov
mov
arpl
dec
xor
mov
push
pop
sub
and
rdtsc
mov
jbe
mov
std
cltd
les
and
outsb
in
fwait
lahf
loopne
mov
fcomip
mov
hlt
out
data16
sub
xor
jge
jns
lret
inc
sbb
inc
leave
pop
lods
js
test
cmpsl
mov
into
xor
or
or
aas
ds
and
pushf
jb
adc
inc
or
sbb
loop
fimuls
xchg
test
clc
or
test
rorb
test
sub
movsl
scas
pusha
loop
shlb
repnz
push
jecxz
cmp
call
jo
jmp
cmp
test
add
ss
and
dec
addb
pop
notb
xor
mov
lods
push
fwait
push
pop
je
andl
xor
bound
mov
add
jmp
sub
dec
lcall
mov
fnsave
mov
push
mov
lea
push
inc
mov
jmp
sbbb
mov
mov
repz
xorl
or
or
pop
jg
insl
les
push
sbb
jmp
mov
push
out
cmc
hlt
decb
hlt
or
mov
mov
pop
cwtl
shll
mov
pop
enter
jns
sbb
mov
jns
cmpsb
pop
push
inc
cmp
shrl
cli
iret
sub
add
cmpsl
xor
mov
and
cwtl
ret
pop
inc
mov
rclb
xchg
shlb
enter
add
and
stc
std
jb
xor
or
insl
sbb
in
fistpll
adc
ror
mov
add
mov
jb
orb
movsb
cmp
adc
add
inc
mov
stc
and
adc
imul
add
iret
movl
inc
cli
or
pop
movsl
int
and
daa
push
and
fists
loop
sbb
dec
imul
push
xor
jg
xor
mov
and
add
je
stc
cmp
loope
push
adc
lods
ja
add
in
repnz
jle
popa
cmp
stc
je
out
jg
scas
out
incb
cltd
shll
and
add
dec
movsl
and
pop
mov
into
and
dec
push
in
push
mov
les
jp
sarb
sbb
jns
pop
lods
or
ret
shrl
jne
out
fldt
sub
pushf
cltd
and
mov
push
rcr
add
adcb
loop
cmp
xor
adc
xor
lods
cmp
scas
push
mov
cmp
std
iret
lea
or
xchg
mov
mov
pop
mov
scas
mov
push
idiv
mov
sub
aas
push
dec
cmp
dec
xchg
inc
lds
pop
mov
sub
rcrb
inc
out
inc
cwtl
mov
lret
dec
mov
inc
push
scas
and
in
adc
mov
sbb
jo
sbb
mov
sbb
ss
push
cli
inc
xor
pop
fwait
xor
push
and
xor
fsubs
mov
ret
bound
push
lcall
jp
xchg
sbb
add
mov
sahf
or
xchg
jb
sbb
je
loopne
xchg
add
jbe
xchg
adc
push
rcr
cmovnp
test
fs
or
inc
testb
mov
das
inc
enter
fwait
mov
or
jno
jecxz
cwtl
sbb
jne
ss
xor
cmp
pop
les
aam
cltd
sbbb
pop
fs
add
test
sbb
sti
adc
jg
test
mov
push
jle
sbb
jg
lock
sbbb
mov
mov
xchg
sub
fsubs
sti
scas
pop
out
or
clc
cmpb
xchg
out
cmp
cmp
and
cwtl
pop
dec
mov
and
fsubr
je
dec
push
into
xchg
xor
lock
test
lret
fisubrs
add
push
std
and
push
push
pop
js
stos
rorb
lcall
jle
adc
and
loop
or
cmc
xchg
sub
cmpsl
cmp
outsb
cwtl
lahf
cmp
mov
push
mov
jns
pop
shlb
int3
lcall
sbb
mov
leave
push
pop
in
xchg
aam
inc
or
and
cvttps2pi
xchg
movsl
cmp
imul
dec
push
popa
mov
fsubl
mov
jl
and
xchg
ja
push
pop
out
iret
je
jno
lock
loope
or
les
es
test
scas
jns
fwait
scas
ret
in
jecxz
xchg
cwtl
or
pop
imul
mov
nop
out
or
xchg
mov
ljmp
mov
mov
addr16
pop
decl
mov
xchg
dec
fidivl
pusha
imul
cmpl
inc
repnz
mov
mov
xlat
repz
iret
or
pop
dec
add
int
jns
sbb
test
xchg
and
sbb
inc
add
popf
dec
orb
xchg
enter
push
cmpsl
and
mov
jbe
fiaddl
test
mov
or
sbb
sub
cmp
mov
add
push
sub
xlat
mov
jecxz
clc
imul
es
sub
or
cs
sub
adc
mov
fstpt
test
lcall
and
and
and
inc
mov
in
push
test
fs
cmpl
push
sbb
loope
sbb
and
sbb
aas
fisttpll
cmp
mov
or
js
cwtl
imul
idivl
rcll
mov
rcr
jl
mov
cs
rcll
jo
js
adc
ss
sarb
stc
loope
imul
fimull
xor
adc
fwait
mov
mov
push
dec
rcl
cld
das
jl
popa
push
jb
imul
inc
cmp
test
adc
pop
or
push
adc
sbb
sbb
add
lea
das
xchg
mov
lods
int
cli
or
or
pop
add
out
push
popf
bound
mov
hlt
ds
cli
jns
mov
popf
stc
pushf
test
jge
out
pop
movsl
inc
testb
arpl
test
sbb
cmp
jnp
sahf
xchg
xor
xchg
testl
mov
mov
clc
pushf
fdivs
rcr
flds
idivl
lods
mov
shll
adc
imul
mov
in
inc
rcrb
testb
pop
pushf
lahf
sub
mov
data16
insl
popf
xchg
sarl
dec
filds
fcmovne
cmp
and
pop
aas
xchg
hlt
pop
jno
arpl
ret
jae
cmp
inc
ficoms
fwait
in
inc
divb
lahf
ss
in
adc
out
push
aad
mov
mov
mov
sbbb
mov
int3
out
repnz
jmp
loop
mov
ljmp
mov
pusha
add
mov
push
testl
aad
adc
insb
adc
imul
ss
mulb
aas
xchg
cs
sbb
push
imulb
dec
out
popf
push
push
divl
mov
or
ljmp
and
call
pop
push
sub
divl
arpl
cs
pusha
loope
xchg
mov
mov
dec
xchg
xlat
loop
out
int
and
cmpsl
mov
sub
shll
sahf
icebp
mov
or
xchg
cmc
setnp
in
cld
adc
mov
ret
sbb
dec
xchg
lds
mov
repnz
cwtl
jne
cmc
mov
inc
jge
pop
lods
push
sahf
jge
mov
sub
cmp
mov
in
sbb
sub
call
loope
rcll
jno
mull
stc
jg
stc
test
in
cmpsl
negl
cmc
lds
or
insl
fdivp
loope
dec
in
xor
jbe
jmp
int3
shll
mov
aad
sub
dec
cmp
sub
cmpsl
pop
repnz
pop
stc
dec
mov
test
daa
mov
aad
push
push
jnp
cmpsl
sbb
arpl
mov
std
jg
mov
imul
popf
sub
int
mov
aaa
or
xor
and
cmc
or
imul
in
iret
inc
call
or
push
pop
fcoms
std
sub
mov
and
adc
mov
les
xlat
stos
inc
or
insb
fistps
rolb
loopne
into
and
adc
pop
leave
xor
arpl
jg
sbb
ljmp
hlt
xor
sbb
repnz
mov
cltd
loope
push
and
lds
outsb
jno
stos
inc
inc
xchg
cmpl
push
sqrtps
inc
jb
shrb
adc
dec
inc
imul
out
sbbb
mov
rsqrtps
inc
popa
mov
mov
pop
aaa
jnp
pop
and
mov
dec
ret
ja
shrl
cmc
xchg
sub
dec
sbb
dec
jo
cmp
popa
int
mov
fucomp
push
jbe
stos
adc
data16
mov
pop
lcall
xor
gs
stc
cmp
movsl
jne
xchg
dec
fstpl
fistl
insl
dec
dec
add
test
sti
jecxz
shrb
shl
jmp
adc
ret
push
xor
inc
jge
mov
mov
movsb
aas
xchg
adc
arpl
ss
mov
hlt
sbbl
stos
repz
xchg
or
cmp
mov
mov
add
inc
cmp
cli
mov
addb
and
dec
mov
lcall
sbb
ss
ficomps
bound
dec
add
out
xor
out
inc
sarl
push
sub
cltd
ficoms
adc
shrl
push
js
out
xchg
push
lods
and
inc
dec
inc
movsw
xchg
sub
aam
jl
aas
cmp
sub
jnp
xor
or
push
lret
and
cmp
and
mov
pop
mov
mov
xchg
testb
das
test
push
popf
cmp
test
scas
pop
cmc
and
jl
in
ret
es
leave
mov
sbb
popf
xchg
jmp
mov
mov
repz
aaa
lret
xor
jmp
adc
cmp
dec
lahf
shrb
or
lods
sub
loop
push
cmc
sbbl
sub
sahf
mov
dec
jge
jl
sbb
movsl
mov
push
das
cld
inc
nop
daa
jne
fcompl
data16
jae
movsb
imul
adc
jno
shrl
jmp
push
push
out
xor
pop
fidivrs
loop
in
hlt
cmc
xchg
dec
mov
mov
pop
or
sub
mov
enter
xchg
insb
sub
outsb
xor
jae
mov
dec
mov
cltd
test
mov
dec
rclb
sbb
cmpsl
in
or
and
pop
xor
xlat
inc
fcmovu
xchg
mov
pop
push
leave
sti
js
lds
out
jl
stos
add
adc
call
cld
shll
jg
insl
scas
cld
jne
or
cmp
mov
inc
scas
leave
dec
in
pop
dec
add
imul
jnp
dec
jmp
dec
jl
lock
jge
test
lcall
and
gs
cmpsb
add
insb
das
lds
xchg
jne
orb
fsubrs
mov
neg
hlt
shrb
dec
test
cmp
lock
mov
iret
xor
int
xlat
fcompp
jo
adc
xor
xchg
imull
enter
jne
lods
or
jae
sub
in
adc
or
jmp
jg
jnp
mov
sti
xchg
mov
popa
lcall
jl
lahf
mov
int
pusha
fisttpl
es
xor
jl
out
xor
scas
mov
cli
xchg
ja
add
in
dec
mov
sub
mov
and
push
mov
mov
adc
repz
scas
loope
push
int
pusha
add
std
pop
gs
cmp
cmp
xor
fdivs
dec
pop
lock
dec
fstps
xor
fiaddl
daa
cmp
inc
jno
mov
sbb
pop
mov
jle
mov
lds
xchg
ss
ljmp
jecxz
fcomps
or
gs
dec
pop
adc
inc
sbb
xchg
add
loope
jnp
fwait
movsb
ror
add
jmp
jno
mov
cmp
sbb
mov
mov
cmp
adc
stos
push
sub
xchg
scas
xchg
xchg
enter
icebp
add
fnsave
sub
push
push
shr
mov
int
jno
mov
sbb
sub
mov
pusha
scas
das
sarl
sbb
mov
cmc
mov
lods
fisubrl
fidivl
mov
lcall
stos
push
ds
xchg
jl
rol
jnp
loop
xchg
cmp
lcall
insb
gs
mov
pop
and
and
fdivrs
inc
add
iret
xor
xlat
dec
xor
into
testl
sbbl
inc
lcall
lock
pusha
adc
sbb
and
push
pushl
popf
pop
sahf
into
fldl
push
push
and
hlt
data16
mov
scas
and
out
or
cwtl
scas
or
dec
mov
mov
ficoms
cltd
test
jmp
pushf
sub
jb
mov
dec
loopne
mov
insb
fisubrl
addr16
aas
mov
fdivl
notb
and
insb
add
dec
mov
dec
pop
jbe
cmp
push
lret
mov
add
and
pusha
jmp
sub
push
mov
pop
loopne
std
adc
sbb
mov
bound
scas
ret
or
lret
lods
sbb
mov
mov
push
sbb
std
imul
into
push
mov
push
lods
jmp
mov
movsb
lret
push
cmp
cmp
outsl
mov
mov
andb
lcall
mov
stos
jmp
cmpsb
gs
sarl
dec
pop
cmpsb
xor
mov
cmc
sbb
inc
and
cmpsb
mov
test
call
cmc
scas
jb
inc
fisttpll
cs
pushf
sbb
insl
ret
in
shr
leave
and
imul
mov
mov
or
sbb
nop
push
xorl
shlb
jmp
xchg
insl
dec
xorb
out
outsl
add
aad
pop
cs
icebp
push
pop
ja
mov
cmc
xchg
mov
mov
ret
xor
loop
xchg
adc
mov
xchg
adc
rorl
clc
and
cmp
mov
or
ret
imul
cmc
dec
imul
enter
mov
repz
cld
xor
es
pop
push
or
mov
and
sti
pop
push
mov
sbb
inc
mov
mov
imul
clc
loope
testl
cmc
mov
mov
fldl
gs
xchg
fistpll
xchg
sbb
mov
out
jle
push
jmp
iret
fwait
ss
nopl
dec
mov
sbb
in
inc
inc
ljmp
push
cmp
test
leave
dec
loopne
stos
fisubs
loop
or
sub
pop
mov
daa
and
pop
or
mov
ret
in
es
or
adc
inc
jg
jae
fwait
jbe
mov
std
xchg
pushf
add
arpl
cmp
add
xchg
mov
xchg
or
cmpb
dec
les
pop
add
inc
adc
adc
movsl
add
xchg
in
stos
lahf
in
xchg
push
stos
xor
and
jbe
repz
push
das
inc
xchg
ds
sub
hlt
jae
fildll
push
js
sahf
xor
push
cmp
cmp
nop
ljmp
fidivrs
push
mov
sbb
outsl
inc
xchg
jl
pop
jb
jge
ss
push
cmp
cli
push
sar
mov
jp
fsubl
mov
insl
xor
sahf
movsb
mov
scas
xor
xor
jno
sub
ljmp
jb
dec
int3
adc
xor
dec
pop
daa
push
cld
inc
cmp
clc
js
pushf
jae
jne
mov
andl
mov
or
les
loop
mov
ss
lock
mov
gs
aad
ja
shr
popf
xchg
add
push
inc
cmpsb
mov
data16
imul
loopne
mov
inc
mov
inc
jl
enter
cld
into
dec
scas
mov
scas
adc
dec
push
shll
ss
cmp
mov
shlb
mov
jo
inc
in
addl
xlat
mov
aad
sahf
cld
jnp
xor
bound
inc
push
test
ret
leave
cwtl
mov
movsb
mov
pop
cld
sbbb
sbb
pop
lds
mov
pop
les
xor
add
je
data16
cltd
test
push
inc
cmp
adc
fsts
and
mov
test
pop
in
cmp
pushw
inc
out
out
popf
aas
or
aaa
sub
call
push
jne
add
sbb
xchg
pop
pusha
or
mov
imul
add
dec
mov
leave
xchg
mov
fldl
sahf
into
xlat
xor
in
xchg
jg
fs
out
aad
push
test
inc
push
les
loop
pop
adc
insl
mov
mov
test
mov
lahf
lods
xchg
pop
mov
pusha
negl
jno
pop
add
mov
aaa
push
mov
or
rcll
cmpsb
lahf
xchg
sub
cmp
jmp
fnsave
dec
out
outsl
call
xor
dec
cmp
mov
mov
jg
sub
sbb
in
add
call
dec
or
push
adc
mov
jp
rolb
xchg
push
aad
ud1
daa
dec
adc
out
lcall
jns
mov
je
mov
inc
call
push
repnz
filds
cli
popf
mov
loope
xchg
jmp
mov
dec
dec
sub
daa
mov
in
mov
cmc
inc
ja
rcrl
mov
jge
and
mov
cli
daa
shrb
fmul
jecxz
shl
xchg
add
ja
xor
es
data16
aas
inc
leave
jne
dec
std
sbb
fidivrs
lcall
loop
cmc
dec
sub
jmp
push
xchg
inc
stos
hlt
addr16
fistps
rcr
test
popf
mov
push
and
mov
pop
imul
mov
mov
dec
xchg
or
andl
pushl
push
out
adc
add
mov
xchg
dec
loop
lea
aam
rcrb
sti
dec
mov
fdivrs
sub
inc
push
jge
or
aad
sub
adc
popf
mov
cmpsl
loop
popf
mov
ds
insl
jb
mov
or
jg
xor
mov
jg
cmp
stc
xchg
or
lods
shll
test
shrl
and
pop
outsl
out
xchg
je
jne
cmpsb
add
nop
lock
xchg
fucomip
push
iret
and
fisttpll
fistpl
lock
inc
mov
shrl
ja
sub
imul
movsb
mov
dec
cmc
and
inc
mov
xor
adc
push
jg
mov
xor
insb
jge
inc
sub
mov
invd
hlt
std
mov
dec
data16
popf
arpl
cwtl
xorw
sub
cmp
cmp
dec
popf
inc
push
xchg
xchg
xor
daa
out
or
imul
repnz
outsl
adc
pop
sbb
imul
pop
xchg
xor
loope
jbe
cld
stos
push
stos
shrl
push
add
bound
mov
aaa
pop
aad
adc
frstor
push
adc
loopne
add
mov
xchg
or
fdivrl
push
inc
out
mov
cmpsl
movsb
pop
lods
cli
add
test
and
arpl
sub
jo
mov
daa
mov
mov
aaa
int
les
push
push
ljmp
inc
xlat
and
aam
xchg
pop
test
std
ja
cs
push
pop
dec
cmc
mov
lock
fisubs
adcb
jbe
insb
negl
into
pop
xor
in
mov
clc
cmp
dec
mov
aam
loope
fcoml
aam
ljmp
inc
cld
mov
adc
dec
jl
cld
hlt
xchg
jo
fildll
out
mov
scas
test
pop
out
ret
xlat
mov
adc
sbb
dec
rcrl
inc
mov
jne
fwait
cmp
push
sbb
mov
mov
cmpsl
loope
sbb
shlb
sbb
fidivrl
fbstp
divl
mov
cld
dec
mov
jb
and
scas
lcall
xor
lds
cmp
out
cli
popf
sub
cltd
dec
mov
repnz
xchg
push
ret
xchg
je
cmpsb
sbb
sti
xchg
push
sti
cmpsl
jp
push
mov
sbb
inc
shrb
sub
xchg
inc
les
clc
mov
mov
cmp
mov
rclb
lahf
std
push
push
aaa
cwtl
loopne
movsl
pop
xchg
push
fstps
bound
test
push
push
repnz
adc
mov
cltd
push
lret
dec
std
je
out
out
fdivrs
nop
ds
push
fwait
hlt
mov
jbe
mov
lcall
fldenv
stos
inc
push
mov
push
or
out
enter
jmp
into
or
test
call
das
call
mov
pop
fldt
sbb
cmp
add
adc
fdivrl
mov
or
sahf
jl
add
popf
sbbl
test
mov
and
sbb
outsl
mov
mov
pop
mov
cmp
lret
inc
les
xor
push
and
ljmp
gs
mov
mov
pusha
in
das
shlb
pop
mov
and
hlt
adc
popa
add
mov
mov
imul
dec
ss
sub
pop
faddp
dec
sub
arpl
dec
xor
mov
cmp
ret
xlat
cwtl
imul
cmp
xchg
stos
sub
pushf
cmpl
divb
loope
push
shlb
sub
call
mov
xchg
dec
rcrb
mov
mov
subl
inc
adc
sub
movsb
into
das
sbb
loop
aas
push
fmuls
pop
sub
inc
fstpl
movsl
in
fists
adcb
test
mov
repnz
adc
pop
push
decl
dec
arpl
pop
mov
out
out
int3
xor
or
int3
ss
mov
xor
xchg
cmp
frstor
mov
and
pop
pop
cli
adc
hlt
enter
sbbl
and
mov
sub
outsl
jbe
push
jmp
xor
rclb
mov
out
enter
dec
pop
mov
add
js
sub
sbb
or
add
push
jl
fs
sbb
push
cwtl
xor
xorb
fs
push
mov
sbb
and
cmp
aaa
jo
xchg
cs
pop
inc
test
xor
xchg
sbb
mov
or
test
into
movsl
xchg
jno
inc
mov
cmc
sub
dec
movsb
adc
cmc
dec
cmp
or
repz
fdivrs
jg
push
icebp
out
clc
jae
popf
push
mov
and
out
push
sub
xchg
movsb
ret
jmp
adc
inc
ret
test
test
or
insl
sub
xchg
mov
mov
icebp
adc
lcall
or
push
das
rcrl
xor
shlb
jb
ja
cmpb
push
xchg
inc
fisubrs
adc
std
push
xchg
repnz
xchg
icebp
cwtl
add
mov
and
dec
roll
or
jge
fucomi
lea
push
push
xchg
dec
call
mov
cwtl
push
sub
add
cmovns
add
mov
loope
adc
shlb
mov
and
xor
incb
jmp
jb
mov
rorl
mov
mov
clc
jp
cmc
call
sti
inc
iret
ss
xor
adc
push
lcall
in
mov
cli
jno
out
xchg
mov
sbb
jmp
mov
dec
mov
rcrl
test
popa
push
mov
popa
fisubl
xchg
frstor
inc
pop
cld
xchg
add
in
lods
jmp
loopne
outsb
loope
mov
inc
call
fwait
test
loop
mov
jmp
xor
add
jno
mov
in
lcall
aas
xchg
sbb
jo
arpl
rcrb
ret
ret
dec
cwtl
jnp
test
ja
inc
mov
das
pop
push
out
push
jae
out
cmpsb
flds
repz
sub
imul
xchg
sub
jecxz
sub
pop
mov
mov
mov
cmp
cmp
shrl
sahf
push
mov
and
in
xor
sub
dec
push
mov
nop
xor
xchg
in
test
adc
jecxz
adc
call
push
imul
jmp
into
mov
jnp
fnsave
inc
xchg
add
mov
shll
imul
or
int3
xor
lret
or
cmp
or
loopne
stos
mov
lods
adc
xor
adc
loopne
or
cmp
sub
rcrl
xchg
call
int3
pop
mov
idivl
push
push
pushf
adc
cmp
rorl
pop
cwtl
outsb
call
jmp
fnstsw
jmp
xchg
jge
std
push
pop
xor
loope
pop
popa
outsl
mov
scas
popl
outsl
mov
shlb
std
cmp
jno
rcrb
inc
pop
and
or
jno
lods
mov
negb
data16
pop
cmpsl
stos
mov
mov
test
xchg
divl
es
cmp
xchg
mov
lea
xchg
push
pop
clc
jg
sub
add
sbb
mov
lret
movsb
cs
out
pop
cmp
in
push
mov
xor
sub
pushf
rcll
or
cmp
xchg
adc
gs
dec
nop
lock
jge
adc
ljmp
roll
xor
pop
lods
mov
loop
std
aam
ds
leave
notrack
js
dec
nop
cltd
or
jns
or
bnd
stos
mov
xchg
sub
test
imul
pop
popl
sbb
push
mov
and
mov
add
xor
xchg
jb
mov
je
aam
ljmp
mov
dec
clc
addl
lret
in
and
cmp
add
movsl
push
out
adc
push
sbb
push
daa
outsb
iret
adc
cmpsb
pusha
in
out
cwtl
pusha
sub
iret
out
sbb
mov
mov
call
std
or
ja
ljmp
push
mov
in
idivl
pop
pop
mov
inc
fnstenv
cmpsl
call
push
xchg
pop
add
imul
cmc
sub
into
jnp
ljmp
les
repz
shrl
and
lea
insb
xchg
pop
push
adc
inc
fucom
adc
sub
mov
mov
cmpsb
mov
cmp
jae
lret
xchg
add
lret
cwtl
mov
ret
inc
jle
pop
xor
mov
mov
scas
sbb
test
iret
xchg
stos
xchg
ss
arpl
mov
push
insl
mov
mov
cmpsb
adc
jl
jbe
pop
insb
stos
cli
adc
shll
stos
popf
xor
ret
inc
dec
js
mov
int
sbb
push
subl
sbb
mov
sarl
sub
mov
outsb
mov
data16
inc
sti
cmc
mov
imul
pop
pop
scas
imul
stos
out
and
in
add
xor
mov
pop
jae
dec
pop
sub
inc
pushf
mov
in
sbb
lcall
ds
fwait
or
enter
adc
aaa
inc
shrl
sub
cli
pusha
dec
insl
jge
lods
test
ffreep
cli
mov
mov
loope
pop
notl
jnp
sahf
xor
pop
stos
inc
les
cmc
addr16
int
push
clc
inc
cmp
push
andb
sahf
mov
inc
pop
icebp
addr16
mov
sub
sti
fwait
pop
negl
mov
jmp
repz
mov
cmc
xchg
loopne
xor
out
lds
jb
iret
lea
fdiv
add
push
jl
mov
hlt
mov
popa
lods
sbb
repz
ljmp
cli
std
shrl
fs
adc
enter
les
inc
in
cmpsl
lods
lds
push
outsb
dec
stc
das
stos
cs
pop
sub
loope
popf
jge
push
mov
push
cmp
sbb
test
mov
xchg
fadd
mov
pop
je
dec
mov
push
mov
lds
sahf
mov
mov
addr16
insb
mov
lea
sub
cmc
push
nop
sbb
mul
jge
push
sahf
jo
int3
mov
pushf
mov
fdivrs
bound
push
add
fisubrs
xchg
rcrl
ljmp
sbb
xchg
mov
xchg
hlt
adc
popw
and
je
mov
sbb
aaa
dec
and
fwait
pop
mov
xchg
sub
sub
xor
mov
mov
and
xchg
add
es
jp
xchg
mov
jl
sbb
xor
and
mov
je
push
push
insl
in
int
sbb
push
enter
fwait
cmpsl
sahf
inc
push
mov
bound
ss
or
dec
jb
mov
jae
and
jge
push
lock
aas
mov
lds
int
mov
fcom
push
jns
loop
addr16
mov
hlt
cmp
sbb
inc
inc
push
or
addr16
sub
fidivs
adc
ret
mov
into
inc
jmp
ret
insb
data16
mov
ret
pop
dec
das
cmp
dec
out
in
xor
push
adc
shr
data16
jno
pop
and
clc
and
mov
cmpsl
repnz
inc
xchg
add
lds
jg
scas
andb
lahf
je
roll
jl
loop
xchg
cmp
push
sbb
fstpt
jg
jne
jae
movsb
popa
mov
iret
fs
pop
sub
pop
lahf
push
and
inc
bound
or
aaa
pop
inc
inc
pop
jle
insb
sub
mov
fdivrl
movsb
js
pop
aaa
mov
sub
cmp
or
popa
fmulp
jmp
bound
mov
sarb
inc
dec
dec
xor
aad
rcl
testl
popf
jb
jne
jbe
fwait
ss
and
dec
mov
addr16
cmp
or
xchg
in
stos
lahf
dec
pop
mov
das
mov
and
cmpsb
arpl
jbe
je
test
dec
push
test
xor
cmp
test
in
lret
enter
insl
fs
sbb
xor
imul
lret
into
out
ljmp
icebp
lret
or
test
and
cmpsl
add
and
mov
in
push
jnp
loope
sbb
lret
mov
mov
loopne
fwait
add
cmp
jmp
into
shrl
pop
pop
sbb
aad
push
bswap
pusha
mov
adc
inc
negl
or
int
in
repz
pop
cmp
jp
loopne
xchg
dec
filds
jl
jne
cmp
or
hlt
mov
sbb
in
add
xchg
sbbl
gs
pop
sahf
pop
out
xbegin
loope
xor
inc
mov
mov
push
jo
stos
lea
jge
leave
ljmp
pop
mov
call
xlat
aad
jns
pop
loop
lea
andl
and
leave
int
sbb
int
addr16
adc
cmp
aaa
mov
lods
fldt
jno
push
mov
ret
mov
and
inc
shll
shlb
xchg
lods
outsl
add
pushf
pop
adc
fisttps
jmp
pop
pop
mov
stos
mov
mov
jne
xchg
iret
mov
mov
out
sub
and
and
cmpsb
jae
push
cmp
mov
xor
aad
fwait
lea
enter
and
jo
inc
fmull
testb
ja
lock
mov
adc
orl
push
adc
ds
imul
outsl
imul
inc
mov
repz
xor
xchg
jmp
icebp
lock
cltd
adc
pop
int3
ljmp
xor
xchg
jg
in
add
sbb
push
mov
scas
shll
in
aas
inc
mov
inc
and
cwtl
or
mov
xchg
jo
imul
shll
pop
jno
xor
aad
mov
and
addr16
or
xor
jo
dec
in
xchg
test
clc
pushf
mov
stc
stc
push
addr16
dec
std
and
in
xchg
sbb
std
xchg
lds
mov
xlat
sbb
inc
arpl
fs
lcall
mov
cmp
sub
push
repz
data16
test
cmp
sbbb
xor
out
out
call
cmp
push
mov
push
rcrl
fstl
xlat
mov
loopne
lock
lods
dec
mov
cmp
xorl
stos
nop
mov
jmp
in
sbb
add
insl
mov
and
fldl
jb
fidivs
xchg
pop
sbb
pusha
js
xchg
icebp
dec
movsb
test
lock
jmp
mov
shll
idiv
rcrb
pop
jecxz
jb
lahf
mov
imul
ss
fldt
or
leave
pop
insb
sub
mov
jp
mov
xor
sub
mov
movsl
hlt
lcall
loop
xor
jecxz
add
cmc
jo
es
je
mov
cmp
stc
unpckhps
jl
insb
add
and
loope
popf
in
imull
aaa
inc
popa
mov
sahf
stos
xchg
mov
xor
insl
lret
roll
pop
jns
rol
dec
cmpsl
xchg
sub
xchg
sub
dec
das
in
dec
out
sub
dec
mov
push
mov
push
out
dec
pusha
cmp
icebp
mov
call
sub
repnz
sub
push
sub
loop
inc
movsl
xor
add
mov
addr16
in
mov
outsb
sbb
jno
dec
mov
clc
inc
andl
sti
pop
pop
sub
pusha
adc
mov
fstpl
fidivrl
scas
inc
nop
fdivl
enter
nop
ds
push
inc
xor
jmp
mov
insb
inc
in
adcb
pop
ljmp
mov
fsub
adc
aaa
inc
data16
incl
xchg
fdivr
outsb
dec
dec
pop
push
jp
fwait
cmpsl
cmc
jg
int3
mov
out
mov
adc
xchg
dec
iret
mov
int
aaa
pop
test
dec
fstpl
xor
mov
inc
push
cmc
stos
shr
stos
fcmovnb
sbb
add
dec
dec
ret
cmpsl
sbb
push
shl
and
sub
cmp
aas
dec
xchg
pop
xchg
and
cmp
test
jne
xor
xor
push
lahf
aas
xchg
data16
jns
inc
adc
mov
and
dec
jns
jl
sbb
pusha
insl
adc
mov
and
mov
add
jmp
dec
mov
sahf
and
pop
fsubrl
and
int3
stos
adc
add
dec
cmp
mov
mov
out
or
je
daa
jl
pop
lret
int
xchg
sbb
mov
push
insb
hlt
fcmovne
loopne
sbb
inc
dec
mov
data16
orb
push
ja
mov
stos
push
imul
test
mov
sbb
xchg
fcoms
movsl
loope
lret
xlat
mov
rclb
xor
aam
cmpsl
fiadds
sub
jecxz
and
ror
pop
sbb
sbbb
shl
dec
popa
lret
push
jne
out
cmp
ret
jge
movsl
cmp
add
repnz
test
push
xchg
movsl
dec
out
push
daa
xchg
imul
or
push
lahf
sbb
out
dec
mov
xlat
pushl
loop
pop
cmp
adc
mov
mov
sbb
lahf
test
in
rcrl
push
fildl
xor
cmc
lods
mov
repnz
jl
jg
fldenv
hlt
js
aam
movsb
adcl
orb
clc
das
add
adc
jno
ret
jle
sbb
dec
inc
icebp
jno
pop
cltd
sub
or
pusha
mov
mov
sar
sbb
test
ret
call
sbb
jns
xchg
sub
cmpsl
pushf
fisubrl
cs
add
xchg
je
int3
movsb
jns
out
rclb
push
jno
push
dec
cli
jns
mov
sbb
rcrb
and
mov
js
lods
daa
mov
stos
int
jge
adc
pop
dec
shlb
add
sbb
sbb
aad
out
pop
call
adc
pushf
sbb
xlat
repz
mov
dec
or
mov
push
add
sbb
xchg
add
vcvtpd2psx
sarl
arpl
lods
and
fwait
sub
int3
test
jno
lcall
inc
shll
lret
lret
xchg
dec
cmp
mov
mov
sarl
add
aam
lcall
es
mov
mov
mov
cmpsb
jge
pop
or
sub
loopne
in
dec
add
mov
pop
inc
dec
or
cmp
loop
and
test
adc
mov
cmc
ret
jecxz
arpl
or
or
dec
mov
stc
xchg
push
out
or
mov
jnp
xor
testl
cltd
test
lret
orl
mov
sub
xchg
mov
sbb
rcrb
mov
cmpsl
outsl
jmp
jo
jmp
add
cmp
pushf
imul
cld
xor
jae
xchg
xchg
imul
inc
cli
add
mov
outsb
sub
cmp
cmc
xchg
hlt
fwait
push
cmc
test
pop
addr16
mov
mov
adc
test
stc
repnz
mov
push
test
xchg
sbb
shrl
adc
sarb
movsl
inc
adc
stc
lahf
fabs
test
or
mov
fidivrl
rcrb
mov
add
rol
test
addl
xor
fnstenv
adc
movsl
test
out
fsubrs
or
stos
mov
aad
jo
outsb
scas
leave
xlat
xchg
push
pushf
or
adc
xchg
gs
and
xchg
sub
cmp
xlat
in
pusha
frstor
push
xchg
ja
lods
out
lds
xor
aaa
cmp
mov
addr16
es
add
xchg
stos
mov
ret
adc
icebp
ret
pop
dec
in
mov
xchg
mov
cmpsl
in
sub
aas
add
fisttpll
jo
jbe
push
ja
and
xchg
mov
fld
loopne
and
cld
sub
cmp
sub
xchg
jp
mov
addr16
pop
insl
add
rclb
inc
pop
xor
ljmp
inc
aas
aaa
xor
push
aam
mov
fidivs
lret
xchg
jge
jecxz
jmp
xor
xchg
cmp
xor
out
sbb
add
mov
push
lcall
sti
inc
xchg
add
ret
outsl
add
shl
ds
imul
cmp
mov
adc
and
imul
or
test
sbb
lea
outsb
rol
jmp
xchg
sti
dec
test
shlb
and
and
call
lods
cmp
lcall
aad
sbb
scas
inc
cmpsb
pop
sub
or
mov
lds
jmp
fsubrl
subb
xor
mov
fdivl
rcl
adc
sbb
pop
jle
test
mov
xor
cmp
xchg
outsl
sbb
sbb
cs
sub
and
adc
sub
sbb
sahf
imul
push
in
mov
lods
fdivrs
add
sbb
sub
ljmp
xor
filds
rclb
mov
push
adc
adcb
sub
pop
repnz
sub
sub
cmp
adc
dec
jae
push
cltd
mov
pop
mov
rolb
xor
mull
les
stc
adc
mov
pop
pop
mov
mov
std
cltd
push
jae
push
xchg
push
adc
in
jbe
sub
push
jb
mov
aad
inc
stc
int
or
popf
xlat
lods
mov
in
push
out
xorl
inc
cmp
daa
int
push
inc
xchg
or
adc
cmp
into
leave
push
xlat
cmp
outsl
and
sahf
outsb
lea
sti
jecxz
movsl
mov
or
loope
mov
xor
mov
es
popa
xor
mov
jo
mov
mov
adc
jecxz
mov
cld
push
add
repz
dec
int
les
lcall
or
notb
mov
dec
outsb
ffree
pop
in
mov
in
xor
subb
lock
scas
dec
lock
mov
jg
adc
and
pop
push
and
xor
inc
scas
fidivs
movsb
popf
mov
test
xchg
pop
cmc
rcr
stc
xchg
adcl
xchg
xor
xchg
cld
xchg
pop
xor
sub
mov
sub
push
sub
insl
jmp
faddl
cmp
fistl
loop
insl
push
mov
enter
ljmp
or
out
mov
or
outsb
inc
mov
pusha
stos
lret
mov
ret
leave
add
inc
fsubrs
cmp
sbb
out
sahf
lahf
push
pop
sbbl
test
dec
out
xor
jge
mov
cmp
xchg
and
sbb
test
popa
cmp
insl
orb
test
mov
xor
mov
les
ds
dec
rclb
and
or
inc
pop
test
icebp
fnclex
test
fcmovnb
jns
out
rorl
inc
das
sub
sub
nop
or
fnstsw
sbb
jge
out
mov
movsb
mov
mov
cmpl
cmp
inc
ret
lods
mov
lcall
cmpsb
fstps
addr16
sub
test
jno
mov
mov
into
jo
xchg
push
add
adc
loopne
xsaves
cmp
or
testl
gs
or
push
clc
fs
xchg
xchg
stos
out
sbbl
jno
popa
into
addr16
in
sbb
ret
sarb
fistl
aas
push
jb
or
fnstsw
push
lods
loopne
pop
pusha
jl
jne
push
jmp
mov
jno
mov
cmp
push
mov
or
test
in
loope
scas
and
add
repnz
js
cmp
cli
cltd
push
stos
rorb
lahf
lds
pop
cltd
and
es
cmp
add
movsb
scas
push
mov
push
subb
int3
inc
push
pop
mov
std
jne
cmp
jns
shll
int3
jle
mov
mov
test
mov
cmpsb
or
mov
add
out
dec
lahf
or
dec
pop
shlb
enter
push
aaa
inc
scas
push
gs
outsb
cs
mov
mov
movsb
ss
or
adc
jno
ret
dec
push
pop
ret
pop
cmc
mov
adc
adc
fs
mov
enter
jns
sub
fcomps
adc
adc
scas
and
mov
and
test
xor
hlt
inc
inc
xor
mov
popa
mov
mov
or
mov
pop
js
addr16
sub
xor
xchg
icebp
movsl
rclb
mov
int3
mov
and
or
xchg
popa
fwait
lods
xchg
mov
push
jne
in
cld
cmp
data16
mov
adc
inc
add
int
movsl
shr
push
push
dec
stos
cmp
mov
pop
jecxz
and
stc
movb
rcrb
stos
pop
clc
int3
pop
icebp
repnz
cltd
lea
adc
into
enter
outsb
mov
mov
lret
paddsb
outsb
js
pop
mov
rcl
cmpsl
lahf
xor
aaa
inc
add
and
scas
inc
or
pop
fisttps
das
fldpi
mov
jmp
insl
cltd
hlt
mov
test
cmpsb
js
mov
icebp
int3
inc
xlat
std
dec
or
into
pop
cmc
add
jl
movsl
fdivrl
jp
dec
lret
movsl
add
insl
cwtl
das
lahf
adc
into
mov
or
stos
mov
out
xlat
outsb
pusha
mov
jmp
jno
repz
sub
or
sarb
dec
stos
dec
or
cmpsl
pop
fwait
or
ret
sub
xchg
cli
dec
add
jb
pop
movsl
inc
bound
push
or
push
std
lods
mov
push
cli
pop
dec
jecxz
pop
negb
imul
loop
iret
xchg
push
mov
icebp
inc
fldcw
adc
cmpsb
addr16
insb
shrl
mov
mov
into
fildl
push
outsb
jmp
mov
dec
or
mov
je
mov
test
mov
push
test
out
insl
dec
and
adc
cwtl
lock
scas
xor
shlb
hlt
mov
xchg
nop
outsb
mov
mov
mov
lret
dec
push
sbb
sbb
mul
pop
pop
popa
push
stc
ss
nop
mov
cmp
mov
mov
pop
cmp
rorl
sbbb
mov
mov
sbb
sbb
int3
mov
sahf
cmp
xchg
clc
pop
push
imul
sub
or
ss
dec
and
lret
fsubrl
push
into
mov
aaa
mov
mov
test
or
inc
pop
mov
xchg
pusha
or
sub
mov
pop
ljmp
ret
stos
nop
fldcw
dec
dec
jae
cmpsl
ja
mov
pop
cli
aaa
lcall
int
adc
mov
xor
sti
add
fisubrl
and
ljmp
cli
push
dec
pop
scas
jl
ss
jo
mov
add
adc
gs
sub
into
inc
aam
fcompl
jbe
test
pop
int
mov
sub
dec
jnp
lock
je
in
sub
pop
and
sub
cld
sub
aam
cmpsb
inc
js
sbb
mov
push
cmp
sub
mov
aam
jbe
pusha
test
mov
inc
xchg
rorl
pop
dec
out
xchg
pop
xchg
pop
sarb
jecxz
icebp
enter
repnz
and
arpl
loop
xor
push
mov
movb
pop
iret
decb
push
imul
das
mov
in
jne
jns
push
xchg
pushf
xor
out
sbb
and
test
cmp
jno
add
js,pn
pop
fnstenv
sbb
xchg
mov
lahf
fisubs
xchg
mov
lcall
mov
lods
outsb
mov
jl
fidivs
push
push
aas
lcall
cmpsb
cmp
pop
cmp
ficoms
xchg
cmpsl
mov
cmpsl
movsb
xlat
scas
jb
inc
cmp
je
sti
jbe
sbb
push
xchg
cmc
fnstcw
push
mov
out
in
cmp
loope
rclb
pusha
dec
dec
jecxz
lret
cmp
repnz
ss
pop
adc
xchg
add
jne
pop
pop
cmp
scas
adc
xchg
fisttps
xor
mov
test
gs
cld
cmp
sub
sub
fwait
repz
mov
sbb
loop
stc
xchg
cwtl
sbbl
mov
shlb
mov
mov
jb
mov
mov
and
pusha
mov
jmp
add
adc
xchg
out
scas
inc
push
inc
outsl
mov
fdivl
mov
into
in
popa
sti
ret
repz
cmp
push
mov
daa
push
rol
cli
or
mov
lcall
fsubs
scas
xorl
jbe
lock
mov
dec
add
add
scas
mov
xchg
push
jmp
cmc
push
shrb
out
pushf
jp
in
mov
mov
icebp
adc
subl
popf
add
stc
xor
shl
int3
retw
lret
and
xor
test
inc
loop
arpl
call
stos
test
dec
sbb
repz
or
dec
test
dec
into
mov
push
in
mov
pushl
lods
les
lret
ljmp
fidivs
lock
inc
and
stos
jno
leave
fnstcw
xchg
jle
jbe
sbb
sub
out
lds
jne
movsb
in
imul
movsl
cmp
xchg
xor
adc
lret
mov
xor
or
cmp
or
iret
nop
daa
fiaddl
scas
inc
mov
cwtl
imul
int
adc
jmp
jecxz
mov
icebp
add
inc
mov
mov
gs
rcrl
ror
lcall
ljmp
push
imul
pop
or
push
mov
test
xchg
xor
sub
mov
pop
xor
xchg
pop
out
push
fildll
or
enter
mov
lods
push
push
int
and
mov
xchg
mov
push
shlb
test
repz
push
jns
mov
test
es
push
imul
fnstsw
fdivrl
sbbb
mov
inc
mov
out
jb
mov
xor
cmp
xor
push
addr16
inc
imul
inc
jo
and
jle
xchg
push
add
cmp
cmpsl
call
mov
push
andl
push
or
loopne
dec
sub
stc
xor
push
fs
ficoms
out
push
adc
dec
sbb
adc
xchg
add
test
inc
xchg
paddw
cmpsb
push
cmp
xor
movsb
shrb
pop
adc
inc
lret
shll
mov
sub
mov
out
cmc
in
imul
pop
dec
rcll
fistpl
leave
stos
enter
add
insl
push
jae
or
or
xor
nop
dec
sbb
fsubrp
adc
std
lods
xor
enter
fsubr
lret
mov
daa
add
enter
or
jns
shll
pop
and
repnz
or
push
push
xchg
out
pop
ja
lcall
adc
xchg
rorb
push
lods
and
inc
loope
or
push
mov
pop
dec
push
out
and
or
ret
loopne
sub
dec
insb
and
inc
mov
pushf
xor
gs
sub
in
fsubrl
pop
mov
lahf
push
or
rcrl
popf
xorl
inc
in
push
adc
addr16
out
sbb
loope
xchg
cmp
sub
xchg
in
enter
hlt
jmp
inc
pop
shr
test
loopne
insl
sub
out
cmp
jecxz
pop
adc
sbbb
subb
jp
aaa
or
test
aad
sarl
jge
push
mov
push
mov
sti
pop
adc
aad
lret
mov
enter
fsubs
filds
fidivl
mov
mov
and
cwtl
sarb
inc
sub
cmpsb
in
pop
push
adc
or
test
stos
sbb
pop
ret
cld
daa
cs
pop
sahf
pushf
mov
cltd
scas
mov
cld
inc
sti
mov
sbb
ljmp
or
bound
loope
jno
loop
cwtl
testl
test
dec
mov
loope
add
pop
jbe
adc
rcr
sbb
jle
mov
int
add
out
out
xchg
inc
mov
or
int3
xchg
pusha
ljmp
imulb
xor
insb
and
sahf
incl
repz
push
std
lods
xor
adc
push
pop
mov
je
sbb
push
sbb
inc
jl
dec
cmp
mov
iret
add
addl
popa
jmp
xchg
inc
push
pushf
cwtl
clc
lret
in
xor
mov
enter
sub
daa
sub
mov
inc
inc
packuswb
pushf
inc
negl
lods
inc
loope
adc
leave
push
push
mov
dec
jp
test
in
enter
sahf
push
clc
push
icebp
pop
inc
daa
aam
inc
sub
push
push
add
jmp
mov
ljmp
mov
xchg
dec
cmp
jmp
push
sti
repz
aam
sbb
adc
pusha
stos
fbstp
push
lret
out
cld
rorb
dec
fisubs
mov
pusha
call
in
push
es
mov
mov
mov
imul
xchg
sbbl
jecxz
adc
pop
out
int3
jle
sub
pushf
bound
fwait
out
jae
pop
mov
pop
jg
mov
cmpsb
les
xor
pop
cmp
pop
lock
add
jl
mov
ja
cmpl
movsb
jecxz
inc
push
ljmp
call
repnz
xor
popa
clc
jp
cmp
cmp
jp
cmp
add
rcrl
adc
sbb
and
in
mov
adc
sti
xacquire
fs
mov
xchg
sahf
and
cltd
movsl
test
push
or
neg
ret
inc
frstor
dec
adc
ss
popf
jo
jo
xchg
dec
mov
dec
je
jno
imul
aad
lods
rcrl
mov
push
out
cmp
sti
xchg
and
cmp
test
jae
mov
enter
pop
lret
mov
hlt
dec
out
sbb
jmp
push
pop
or
roll
mov
add
lods
inc
or
scas
mov
xor
inc
data16
je
pushf
orb
mulb
mov
pop
psubusb
scas
in
or
lret
inc
adc
jecxz
push
fs
push
stos
mov
pop
push
adc
cmp
mov
rcl
sbb
inc
cmp
push
or
notl
mov
fdiv
movsl
mov
std
in
cmc
rclb
je
add
dec
dec
push
fucomp
mov
mov
jge
push
sub
lahf
push
sub
jno
and
jg
lret
stos
mov
and
sbb
repnz
decl
ds
mov
fstp
bound
mov
lds
jmp
mov
ljmp
pop
outsl
adc
adc
test
and
adc
aas
push
stos
xchg
push
popf
enter
sbb
popf
popa
and
sub
xchg
jmp
jmp
loopne
and
mov
shll
dec
adc
clc
out
adc
dec
and
push
lock
push
insl
push
and
hlt
inc
loope
scas
add
imul
push
sub
adc
faddl
dec
out
arpl
ret
ljmp
jmp
fs
add
lods
negb
and
cli
inc
aad
sti
scas
adc
lds
xchg
push
sahf
in
sbb
out
mov
jp
cmp
negb
cmp
xchg
dec
sbb
adc
shrl
out
inc
adc
mov
pop
pop
cmp
inc
outsb
mov
jl
shrb
mov
fisubrs
sub
fcoml
jae
js
fldenv
rcrl
hlt
std
aam
add
cmpl
ror
adc
rcrb
sbb
test
xlat
push
cltd
mov
cwtl
dec
cmp
cwtl
and
dec
aaa
xlat
divl
jle
xchg
pop
push
subb
adc
pop
inc
fwait
fwait
push
pop
dec
negl
sbb
pop
lock
in
adc
adc
jae
lcall
push
add
jle
xlat
pop
aad
mov
fwait
ret
add
jecxz
push
in
add
int
pop
sbbb
push
out
out
mov
sbb
aam
sbb
xchg
sub
or
das
bound
sub
int
lahf
xor
hlt
push
jo
pop
mov
clc
or
inc
sbb
jecxz
in
out
jp
lds
pop
jle
add
adc
or
dec
loopne
push
out
test
out
leave
std
push
leave
hlt
pop
lahf
inc
scas
psadbw
nop
mov
push
ljmp
adcb
mov
mov
push
fists
push
cmpb
cmp
xchg
add
or
mov
mov
jmp
dec
pop
inc
mov
fwait
sti
push
test
mov
cmp
out
sbb
jp
pushf
cli
sub
lahf
dec
mov
out
enter
stc
xor
xchg
popf
mov
lock
push
ja
shlb
aas
xchg
xlat
jno
mov
mov
movl
pop
sbb
repz
les
xorb
ljmp
sub
jb
pusha
aad
jmp
add
outsl
ficoml
test
push
jb
push
pop
jl
out
scas
fcoml
or
inc
dec
leave
jle
andl
sub
cli
push
sub
iret
ja
shll
mov
in
inc
xlat
imul
scas
call
stos
jae
stc
push
ja
mov
repz
fstpl
xchg
xchg
inc
or
inc
mov
sub
insb
mulb
in
and
sarl
shr
enter
shr
mov
sbb
js
jmp
mov
pop
jg
fnstenv
mov
adc
xlat
pop
or
ds
cmpsb
dec
mov
xor
inc
cli
push
jg
les
ret
mov
icebp
adc
outsl
filds
pop
mov
xor
cmp
dec
sbb
pusha
lcall
scas
std
mov
push
fdivs
xor
out
mov
jp
add
xorl
dec
pop
xchg
jle
xchg
mov
lock
inc
xor
push
jnp
loopne
xchg
xchg
xlat
out
mov
sbb
cmp
cmp
dec
pop
pop
icebp
mov
cmc
cwtl
xor
and
xchg
cmpsl
repnz
mov
test
push
mov
test
outsb
arpl
cmp
movsb
es
xchg
sub
cmp
xorb
stos
arpl
lret
adc
divb
fisubrs
sbb
test
lods
lods
mov
loopne
call
inc
jg
sub
mov
inc
push
out
and
inc
inc
fidivrs
outsl
dec
out
clc
add
dec
fsubrp
addb
mov
loop
enter
jno
xchg
sarb
nop
cmpsl
decl
cs
in
xor
push
scas
aad
xchg
icebp
sahf
in
out
stc
rcll
add
int
push
sti
ret
in
xchg
outsl
dec
cmp
mov
lahf
iret
and
sbb
push
or
clc
push
mov
dec
aas
xchg
sti
ret
pusha
outsb
adc
subb
adc
stos
push
add
adc
pop
test
sub
mov
xchg
adc
sbb
or
or
mov
pop
pop
dec
mov
jno
dec
es
insb
add
inc
ret
push
daa
cmc
andnps
push
les
dec
ret
add
push
pop
repnz
cltd
mov
cmpl
cmc
das
shl
jp
ret
fwait
xchg
sub
cmp
insl
xorb
cmp
push
stos
jne
int
xchg
pop
xor
add
outsl
cwtl
out
and
jp
and
fnstenv
inc
pop
mov
pop
push
hlt
sahf
push
ljmp
mov
jge
sbbb
fcoml
int3
fldenv
mov
mov
lret
and
fidivrl
or
jmp
or
fbstp
adc
jno
in
or
aad
add
loop
dec
cltd
or
pop
or
mov
mov
in
data16
rclb
mov
repz
es
sbb
xchg
nop
ret
imul
cli
pop
ret
xorl
xchg
icebp
xor
mov
cli
mov
ljmp
and
fcmovu
addr16
adc
fdivrs
sti
js
sbb
inc
scas
mov
arpl
cld
xchg
mov
pop
mul
push
mov
enter
mov
movsl
mov
add
sub
adc
lock
inc
fdivs
mov
push
scas
fcomip
mov
int
sub
clc
mov
lods
sar
add
lahf
xorb
sub
cld
cwtl
les
sub
push
mov
jge
push
or
insb
scas
inc
cmp
mov
inc
lcall
xor
mov
cmc
inc
cld
pop
icebp
mov
ret
push
into
faddl
es
fbstp
sbb
and
cli
out
mov
pop
lock
pop
paddb
mov
and
sbb
push
xor
pop
lods
pop
xchg
aam
cld
or
and
shlb
mov
inc
shr
mov
shlb
adc
dec
and
add
neg
into
lods
rclb
fildll
outsl
push
push
dec
fidivs
mov
lret
movsl
mov
fcoms
imul
push
aam
add
xor
jno
push
lods
and
inc
outsl
push
cmp
aam
cmp
or
xchg
icebp
inc
adc
ja
inc
cwtl
shll
hlt
dec
in
mov
in
mov
test
xor
mov
mov
push
rclb
sbb
jno
loopne
andl
ja
mov
mov
enter
pop
xchg
rcll
movsb
xchg
mov
sbb
mov
andl
sub
leave
xchg
clc
mov
cmpsl
mov
mov
cld
cmovp
ss
repnz
adc
sahf
lods
mov
mov
xor
mov
das
stc
mov
js
sub
fisubrl
das
cmp
mov
pusha
xor
cmp
testb
jnp
sub
jg
lahf
jne
shrb
pop
jle
jge
push
mov
imul
lods
push
inc
adc
cmp
xlat
in
jl
pushf
dec
out
xchg
sbb
push
scas
int
cli
mov
push
add
movsl
fsubrs
mov
xchg
iret
cmpsl
sub
mov
pop
cld
mov
movsl
mov
mov
notb
push
iret
xor
sbb
cli
mov
sbb
adc
and
cmp
pusha
adcb
push
js
outsl
jp
ret
lods
mov
in
call
test
ljmp
pop
in
adc
jae
xchg
sub
xchg
inc
push
ret
insl
sub
push
out
sub
loopne
mov
test
cld
pop
inc
sbb
scas
jg
mov
arpl
or
mov
sub
xchg
xchg
sub
dec
or
sbb
add
movsl
and
push
lock
fwait
jp
test
push
fwait
in
test
push
mov
cmpsl
test
mov
mov
xchg
pop
push
sub
je
and
iret
pop
loope
sbb
insl
insl
sbb
jnp
into
pop
jns
xor
lock
int3
pop
jmp
mov
imul
aaa
lds
stc
xchg
jmp
dec
movsl
push
insl
aam
nop
pop
mov
pop
aaa
inc
sahf
inc
mov
popf
jne
add
pop
imul
xchg
inc
xchg
jmp
in
cmc
pop
xor
mov
cli
jmp
xor
xchg
mov
fistps
xchg
aam
mov
std
sbb
push
rcl
lds
add
push
cmp
jo
jp
insl
test
cwtl
icebp
sub
test
movsl
pop
mov
outsb
jbe
out
cwtl
dec
loopne
test
mov
push
std
cmp
inc
xlat
fistpl
mov
push
mov
insl
xor
sahf
xor
mov
pop
pop
les
insl
out
xor
cmpsl
pop
sbb
mov
cmp
fcompl
cld
nop
mov
mov
xchg
lock
push
js
or
push
in
or
cmp
lret
fadds
es
push
std
xchg
mov
sbb
lcall
gs
gs
and
fs
cld
outsb
les
pop
dec
sub
neg
jne
stos
cmpsb
cli
jle
je
scas
cmp
pushf
scas
sahf
dec
push
sbb
out
xor
cwtl
pop
xchg
mov
aaa
sahf
fadds
xchg
dec
add
sub
add
mov
insb
or
adc
and
dec
add
ss
add
movsl
into
gs
stos
enter
dec
pop
sbbb
push
out
nop
push
in
insb
cmc
ja
adc
scas
and
roll
mov
js
cwtl
jle
js
mov
push
jb
popl
inc
mov
jmp
imul
sub
mov
and
in
sbb
jbe
push
pop
das
fwait
push
jp
or
adc
test
push
mov
xor
sub
dec
testl
cmpsb
sub
adc
je
insb
shll
jb
aas
dec
loop
mov
cs
jg
mov
vrsqrtps
out
ss
sub
outsl
mov
jne
jne
xor
mov
das
push
jp
add
push
fldcw
lret
jmp
std
xor
and
movsw
xor
mov
dec
outsl
jo
adc
xor
dec
jbe
dec
bnd
lret
dec
dec
pop
adc
in
lret
cltd
mov
mov
fldt
popa
stos
and
imul
lret
xor
cli
jo
cmp
xchg
out
xchg
aaa
das
js
pop
jae
es
pop
cli
les
and
xlat
scas
es
js
adc
and
xor
push
xchg
nop
sbb
repnz
and
mov
sti
movsb
adc
mov
and
jge
dec
or
mov
jle
sub
setg
insl
mov
inc
call
shll
js
jmp
pop
jg
pop
in
sub
xchg
sub
push
decb
xor
frstor
mov
push
movsl
inc
and
fnsave
pop
sub
pop
pop
push
push
and
adc
sub
and
test
filds
dec
pop
std
arpl
dec
push
cwtl
mov
dec
aas
nop
push
lcall
pop
or
mov
rcrl
inc
or
mov
jb
lret
lret
leave
xchg
les
mov
cmpsl
dec
push
mov
push
cmc
push
sub
jae
int
fwait
inc
mov
lods
lcall
in
mov
cmp
push
ror
mov
jp
push
nop
clc
fwait
stos
cmpl
sbb
push
xchg
pop
scas
push
shlb
cmc
int3
out
popf
pop
inc
or
jnp
sbbb
mul
mov
lret
or
or
movsb
dec
and
jg
testl
fstpt
jp
enter
xor
out
xlat
outsb
les
cmp
movsb
adc
dec
cmp
lods
lcall
sbb
jmp
push
push
ret
hlt
adc
es
and
les
mov
add
test
jb
xchg
cmpsl
or
add
lcall
pushf
fisttpll
push
cmp
enter
mov
out
and
jne
dec
mov
jns
std
adc
mov
out
mov
mov
dec
jbe
adc
repnz
fbstp
fdivrp
fistl
daa
inc
js
inc
push
lret
sub
insb
in
inc
mov
dec
cmpsl
imul
mov
pop
push
lock
movsl
push
in
adc
jae
xchg
mov
add
cmp
pop
cs
js
fsubl
pop
cltd
add
dec
sub
inc
push
sub
sahf
mov
dec
orl
mov
mov
xchg
adcb
popf
cmc
enter
es
push
add
fidivl
dec
cwtl
jmp
fdivp
jl
fldt
push
iret
mov
sbb
or
aad
cmp
rcl
xor
ds
imul
popa
pop
in
test
cmpsb
gs
idivl
call
and
shll
add
and
sti
xchg
add
mov
cwtl
jge
and
movsb
out
popf
test
cmpsl
add
mov
scas
mov
pop
mov
dec
dec
add
push
aaa
pop
fsubl
shr
jle
repz
jno
jne
jg
outsl
jno
pusha
sbbb
inc
in
fwait
dec
loop
mov
cmp
and
adc
fsubl
mov
test
aam
cs
sqrtps
pop
cmpsl
lea
arpl
mov
out
mov
pusha
and
insl
repnz
cld
pop
xor
add
sahf
sbb
jno
call
dec
loop
jnp
out
add
or
test
lea
jg
and
push
popl
in
cli
mov
lock
lret
mov
add
push
jbe
les
xlat
adc
bound
mov
incb
mov
in
sub
les
inc
cld
xchg
pop
jp
mov
rol
xor
int3
sub
cmpsb
sub
daa
scas
xchg
push
jnp
sbb
jbe
pushf
cli
pusha
cmp
jbe
out
xchg
sbb
dec
cmc
mov
scas
mov
add
push
push
jns
adc
xchg
mov
ja
nop
cltd
and
and
and
shr
stos
pop
inc
fs
pop
andb
lock
aas
into
mov
pop
and
data16
and
sub
dec
mov
xor
or
sub
inc
or
jp
xchg
mov
les
add
add
stc
push
xchg
and
cmp
cmp
repz
test
inc
movsl
aas
jmp
arpl
mov
cmp
ljmp
movsl
subl
clc
or
sbb
imul
pop
jmp
imul
dec
mov
in
dec
hlt
pop
ja
cmp
pushf
inc
cwtl
inc
lret
sbb
into
xor
cmpsl
xchg
pop
xchg
insl
jnp
cmp
push
iret
je
in
daa
adc
daa
jne
xchg
add
pushf
int
sub
mov
mov
stc
lock
jp
divb
mov
sti
sub
dec
loopne
jns
xchg
mov
out
mov
lret
test
inc
rorl
dec
dec
cmp
sub
aad
addr16
aam
das
test
nop
mov
xor
ds
scas
pop
pop
scas
cmp
add
push
cwtl
sub
pop
addr16
aam
pop
push
dec
push
sub
cs
repz
ss
out
les
fidivl
stos
dec
lcall
dec
xlat
inc
fmuls
xchg
jne
data16
mov
data16
subb
les
lods
and
pop
pop
xchg
sub
movsl
pop
daa
pusha
mov
sub
xchg
insb
push
pop
mov
cmc
push
subl
call
xchg
aas
add
inc
dec
and
mov
xchg
push
or
lock
out
jae
into
cmp
rorb
inc
call
sbb
je
cmp
dec
or
jo
fidivl
xlat
and
fwait
xor
jno
push
loopne
mov
xchg
xchg
out
jl
sub
xchg
mov
sub
lods
pop
ja
pop
ret
xchg
popa
xor
cmpb
arpl
int3
pop
mov
push
insl
scas
fwait
nop
push
sar
xchg
test
xrelease
xchg
jmp
and
xor
stos
scas
nop
fidivs
mov
sbb
or
fisttpll
adc
cwtl
add
jne
lret
cmpsb
dec
mov
sbb
xor
scas
mov
inc
pop
subb
lock
inc
mov
inc
lods
xchg
sahf
aaa
ret
or
cld
rorb
jle
adc
sub
ss
xlat
jge
pop
sarb
jge
fsts
jmp
mov
xchg
leave
stc
dec
jbe
fidivl
aad
push
decl
fnstenv
xlat
fs
mov
loop
dec
fwait
or
movsl
cld
xor
xchg
fcmovne
jp
cmp
push
out
fcomps
mov
pop
push
ljmp
ljmp
mov
add
xchg
xchg
xor
push
xchg
pop
jle
aas
mov
lods
int3
enter
sub
pusha
xor
bound
aad
mov
adc
xor
lods
mov
shrl
cmp
arpl
push
lret
insb
int3
and
in
jb
xchg
popa
test
cmpsb
mov
mov
into
gs
pop
mov
or
pop
xchg
test
ss
jle
mov
push
push
adcb
jne
movsb
leave
and
mov
inc
scas
push
test
aas
loop
xchg
test
movsb
push
or
inc
rcrl
ret
insl
dec
mov
jo
sbb
sbb
pop
loop
jbe
lods
mov
sub
sbb
jge
imul
dec
loopne
loope
imul
cmpsl
sub
or
insl
xlat
popf
and
sqrtps
aam
push
repnz
jns
repz
test
dec
sbb
in
leave
cmp
cli
subb
imull
ds
ret
mov
in
cmp
mov
jo
jle
jns
adc
dec
pop
add
ja
mov
mov
jbe
aas
pop
mov
push
jmp
nop
aaa
cmp
push
inc
push
dec
ror
jmp
out
and
add
push
in
mov
cmp
test
jg
aas
test
inc
lahf
lcall
inc
fs
shl
mov
ljmp
push
idiv
in
xor
pop
adc
lock
sub
mul
jmp
jle
push
pop
or
inc
std
mov
mov
mov
loop
imul
mov
mov
jp
outsb
rcl
mov
xchg
cmpsb
dec
stos
fcmovbe
xchg
mov
inc
in
inc
ret
sti
imul
outsb
mov
push
dec
dec
loop
sbb
inc
jp
imul
xor
push
subb
push
push
subl
xor
mov
jbe
add
mov
mov
out
hlt
push
lret
xlat
in
push
jmp
and
jmp
sarl
sub
adc
ret
xor
pop
aad
into
xchg
mov
shrl
sub
mov
inc
dec
push
dec
lods
adc
push
jmp
xchg
jnp
push
pusha
inc
cmpl
mov
sbbb
pop
pop
push
out
fidivs
setge
aaa
push
jno
repz
jp
cs
jns
fisttps
push
mov
mov
cs
push
inc
pop
mov
mov
ret
adc
roll
sbb
shlb
push
lods
mov
mov
sti
mov
push
adc
push
xchg
cld
jb
and
cmpsl
scas
mov
mov
mov
sbb
stos
xchg
data16
inc
jmp
daa
cli
out
sbb
sub
jle
mov
loop
or
add
lds
test
data16
xchg
shl
xchg
repz
les
sub
scas
mov
xchg
pushf
inc
dec
adc
repnz
movsb
cs
pop
push
icebp
cmp
or
push
mov
fwait
sarl
push
fildll
adcb
shlb
sbb
inc
or
lea
pusha
scas
jns
insl
adc
hlt
sbb
les
xchg
adc
bound
cmp
clc
dec
jno
aaa
xchg
das
dec
dec
insl
xchg
and
jne
je
cmpsb
mov
adc
out
dec
mov
fwait
or
test
jb
in
jge
sti
mov
add
or
push
and
cmp
push
into
sbb
dec
out
movsl
cmp
mov
in
mov
mov
ljmp
mov
pusha
les
push
push
adc
js
mov
fmull
cmp
dec
loope
rclb
inc
gs
shll
xchg
sub
jp
popa
lods
mov
xchg
test
popf
or
xor
dec
adc
xor
in
mov
sbb
jae
xchg
pop
fadds
mov
decb
xchg
sub
movsb
negb
push
das
ja
cmp
mov
lret
shll
pusha
popf
sub
in
pop
mov
call
or
sbb
js
call
dec
cltd
fsubrl
rcr
jne
xor
lock
jo
mov
mov
in
out
xchg
inc
ret
ret
out
pop
out
ljmp
push
iret
shlb
mov
insb
inc
push
popf
xchg
cmp
loopne
mov
es
fwait
jmp
hlt
pusha
idiv
add
div
ljmp
imul
movsb
addr16
fdivl
sub
cli
xchg
pop
dec
mov
lds
cmp
addb
pop
sbb
iret
push
test
push
xchg
ficomps
jbe
mov
mov
movsbl
cmp
sbb
call
and
jno
add
add
leave
jne
jle
faddl
pop
dec
or
andb
es
dec
sub
fucomip
inc
dec
fwait
mov
andl
and
lret
popa
gs
sbb
sbbb
repnz
and
in
insb
inc
roll
dec
in
mov
xor
xchg
in
rcll
mov
xchg
stos
movsl
jo
inc
sub
cli
jns
jbe
add
pop
flds
or
add
xchg
cltd
push
sarl
pushf
ds
loop
aad
leave
das
pop
out
jecxz
jbe
mov
jp
mov
push
xchg
ret
in
aaa
xchg
xchg
add
cmp
movsl
addr16
and
dec
xchg
ficoms
push
cltd
sub
xor
xor
push
cmpsb
add
jno
je
push
sbb
xor
mov
rorb
push
hlt
sub
lock
scas
mov
jo
fwait
int3
dec
subl
inc
or
jnp
mov
jg
popa
add
adc
sub
das
adc
mov
mov
pusha
push
jne
fcmovb
out
jno
cmp
xchg
rcrl
xor
cmp
aad
jae
and
pop
call
sub
mov
js
ds
inc
repz
xchg
xor
orl
push
fsubl
out
xchg
or
jb
mov
xchg
adc
push
decb
outsl
test
aaa
xchg
popa
icebp
xchg
lret
scas
int
pop
adc
push
pop
jae
xor
stos
ds
dec
mov
ss
inc
stos
xchg
mov
jbe
mov
out
shl
sti
outsb
lcall
mov
inc
xlat
mov
inc
rolb
inc
ficomps
fnstenv
jg
xor
lahf
or
sub
add
cli
lods
pop
jb
lds
sub
aaa
into
mov
sbb
add
push
push
pop
pop
mov
add
add
pop
cmp
mov
fwait
pop
fbstp
jl
in
dec
dec
mov
dec
shll
or
fwait
cmp
sub
push
cwtl
loop,pn
adc
or
ret
mov
mov
inc
push
sti
out
sub
pushf
fsubs
pop
test
sbb
movsb
out
and
clc
push
cmp
pop
mov
fnstcw
addr16
inc
fidivl
jge
rcll
icebp
cmp
mov
aaa
fidivl
cli
push
fwait
push
inc
dec
notb
mov
js
mov
cltd
loop
cmpsl
or
xchg
in
xchg
testb
mov
jb
cmp
and
inc
xor
imul
inc
pop
dec
test
or
lcall
cmc
xor
cmpsb
les
jl
sbb
insl
cmp
fwait
jp
movsl
cmp
mov
sub
add
push
push
xchg
mov
and
mov
jnp
bound
adc
pop
ja
fnsave
add
jb
lock
lock
shr
aam
orb
xchg
pavgb
xor
pop
jecxz
xchg
xor
sbb
jmp
orb
xchg
decl
xor
aaa
lock
jle
jg
jno,pn
add
pusha
fisttpl
cmpsl
xchg
sbb
push
mov
popa
in
mov
adc
js
adc
xor
add
repnz
repz
mov
outsb
lret
rclb
sbb
push
xchg
int3
mov
enter
pop
pop
jle
repnz
addr16
or
decb
dec
sub
xchg
xor
dec
jo
jp
xorb
dec
adc
fstps
dec
flds
push
push
cmpsl
sbb
movsb
mov
dec
cmpps
or
jnp
ds
add
std
jne
in
xchg
fisubrl
cmp
push
loop
push
cmp
rcrl
pop
je
mov
jmp
mov
push
pop
jecxz
or
and
push
dec
inc
inc
mov
out
xor
jl
adc
das
mov
mov
ljmp
lods
jbe
sbb
jns
outsl
mov
jmp
and
xchg
and
rcr
xchg
out
mov
jnp
ds
cmpsb
inc
std
and
and
inc
leave
push
inc
push
rcll
imul
fsubs
jns
popa
sbb
cmp
jmp
dec
push
out
jmp
test
in
push
inc
arpl
loope
in
rorl
jno
sub
lock
cmc
or
dec
push
outsl
stc
mov
test
push
roll
addl
sbb
out
aad
mov
aam
dec
and
dec
out
aam
sub
lea
adc
push
cmp
gs
jne
out
mov
andl
cmp
jecxz
push
push
mov
or
adc
loopne
pop
mov
push
pop
daa
mov
lds
rcrl
inc
dec
mov
sahf
xor
loop
cmp
mov
call
imul
cmp
repnz
popl
clc
cmc
or
mov
bound
ds
scas
sbb
mov
jl
dec
pop
mov
icebp
adc
mov
stc
sbb
stos
pop
and
and
sbb
push
jne
insb
fists
in
icebp
add
mov
movsl
gs
sbb
xchg
insb
adc
insl
mov
out
xchg
enter
mov
mov
popa
orb
push
and
dec
jae
movsb
or
or
xlat
outsb
push
in
sub
jne
dec
sub
repz
jae
loopne
push
js
popf
test
mov
sarl
adc
insb
mov
add
jb
in
inc
es
not
cltd
in
loop
stc
test
mov
fwait
aas
cmp
xchg
cs
cltd
lods
out
mov
mov
cmp
add
adc
daa
jae
stc
inc
sti
mov
sbb
mov
jp
dec
xor
add
test
mov
sub
cmp
or
pop
push
dec
jmp
mov
sub
and
cmp
fcoms
enter
inc
sahf
fistpl
loopne
lock
stos
push
cmp
iret
cld
rcrb
mov
lods
pusha
jmp
jge
mov
push
inc
push
lods
mov
in
or
add
mov
push
jp
mov
jle
aad
push
xor
xor
or
call
add
repz
movsb
jecxz
xlat
dec
addl
scas
mov
sub
mov
inc
cld
jl
add
out
clc
pop
add
stos
mov
and
push
push
aam
pop
mov
sbb
jle
add
shll
xor
loop
adc
fstpt
cmp
das
sbbb
dec
dec
lods
inc
movsb
cmp
cmp
mov
roll
push
sbb
pop
push
mov
and
push
pop
push
xchg
movsl
mov
mov
push
in
andb
nop
rcrl
cmp
jnp
sub
xchg
idivl
xchg
stc
insb
adc
xchg
mov
push
push
fisttpl
call
jae
imul
mov
insb
mov
or
inc
cmp
aam
into
inc
out
push
xchg
pop
and
ja
mov
cmpsl
popa
sub
and
insb
bound
mov
test
fildll
mov
movl
dec
mov
dec
movsl
andb
loope
loopne
add
mov
fsubl
decb
pop
xor
ret
outsb
or
xchg
stc
lds
xor
outsl
sub
fwait
out
push
int
mov
xor
sbb
iret
inc
push
add
inc
and
xor
loope
daa
sbb
sbb
hlt
lds
mov
mov
bound
rcll
xor
push
xor
jae
pop
frstor
sbb
cmc
jle
adc
inc
add
fnstenv
mov
and
ficompl
outsl
pop
mov
sbb
mov
jb
xor
mov
adc
into
push
andb
or
lods
xchg
dec
xor
mov
fs
daa
mov
pusha
and
lret
aas
andl
test
sub
aaa
add
push
aas
jbe
push
shl
jno
test
leave
xor
fdivl
dec
jmp
cmp
push
pusha
mov
insb
adc
sbb
aam
aaa
mov
mov
sbb
ds
aas
int3
loope
add
cmp
lahf
call
xor
sbb
inc
iret
call
popa
add
add
jae
test
nop
les
fs
push
push
jae
popf
sub
nop
scas
mov
rcrb
mov
int3
jl
pop
in
sbb
aam
push
sub
iret
ror
pop
xchg
inc
add
outsl
test
aaa
inc
lea
std
aaa
fisttpl
andb
aaa
cld
dec
aad
stc
icebp
aad
mov
shll
mov
dec
fstps
sub
lret
loop
cmp
dec
jecxz
sub
inc
pop
and
xchg
xor
in
xorl
push
inc
dec
loop
dec
mov
fists
xor
cmpsb
rcrb
in
aam
push
mov
loopne
sbb
mov
sub
push
cli
test
adc
rcrl
push
arpl
pop
xor
loop
test
pop
enter
lret
dec
add
or
inc
cs
sbb
jo
push
pop
aaa
mov
jmp
cmp
mov
pop
pop
ret
lret
cltd
inc
fwait
dec
dec
sbb
cld
int3
in
ds
js
sbb
xchg
scas
and
divb
lods
push
mov
lcall
mov
push
inc
mov
sbb
in
pop
movsb
cmp
push
mov
out
adc
aam
insb
int
stos
inc
inc
out
mov
fmull
shrb
jmp
gs
adc
inc
data16
jg
iret
es
cmpsl
or
xlat
mov
mov
push
pop
jl
insl
push
cltd
xor
pop
push
push
and
jbe
lods
cmp
pop
incl
pushf
jge
and
test
pop
or
mov
stos
negl
in
push
sahf
adc
xor
push
rcrb
mov
jbe
and
dec
stos
add
dec
xchg
and
arpl
cmp
sub
inc
loopne
push
pushf
loop
mov
mov
xor
rcll
ljmp
sbb
out
xchg
sub
les
xor
jecxz
js
jo
adc
add
shrl
jnp
lods
push
out
mov
mov
push
movsl
pop
clc
and
add
test
insb
out
test
vunpcklps
pop
std
push
je
mov
ja
shr
addb
repnz
jb
sub
or
mov
das
pop
lret
pusha
cmp
lods
xor
jg
cwtl
sub
or
push
iret
fisttps
stos
inc
stos
add
sbb
cld
inc
mov
and
cmp
call
ret
xchg
shrl
cmpsl
mov
adc
icebp
or
stc
outsl
pop
filds
xchg
inc
roll
lret
mov
mov
cmp
dec
int3
cmc
cmp
sub
dec
pop
push
sub
cmp
sbb
loop
push
add
cmpsb
lods
movsl
xlat
andl
out
dec
ds
subb
or
pop
jne
int
cmp
fsubrs
and
cmp
shll
push
sbb
xchg
mov
sub
hlt
sbb
cmp
adc
mov
pop
mov
rorb
call
push
in
xor
je
xor
flds
pop
imul
das
setns
and
jo
xchg
xchg
mov
push
in
and
add
push
hlt
cmp
mov
lock
fnsave
push
clc
mov
pushf
fucom
mov
test
test
jns
xchg
add
aad
addb
mov
inc
cmpsl
jg
push
cwtl
test
js
fs
xor
lret
sub
pop
in
jmp
mov
jno
int
fsubrs
mov
mov
ds
into
mov
nop
jmp
push
cltd
dec
loop
leave
dec
sub
sub
xor
sub
xchg
mov
jne
mov
sbb
push
or
adc
sub
ljmp
mov
xchg
das
lcall
mov
cmp
dec
sti
xchg
jp
cmp
mov
hlt
int
xchg
ljmp
insl
stos
insl
gs
xchg
xchg
lret
xor
xchg
sub
and
out
push
cmpsl
cmc
jmp
out
lahf
mov
jle
pusha
sbb
rol
pusha
pushf
xor
xor
xor
xor
push
pop
mov
sub
negb
hlt
addr16
and
inc
cld
mov
push
dec
mov
mov
or
lahf
mov
push
ljmp
lock
stos
lahf
stos
cs
push
gs
jmp
xchg
sub
sub
data16
mov
inc
lret
fstl
and
pop
pop
pushf
jno
jl
xor
ljmp
adcl
movsb
mov
mov
cmp
ds
test
mov
fldcw
scas
sbb
filds
pusha
adcb
dec
loop
xor
fsubs
mov
lock
addr16
mov
sbb
and
adc
mov
out
repz
jbe
mov
imul
jno
ret
jp
push
popf
fiaddl
jo
pop
jno
clc
lret
or
into
push
aam
cmp
js
repnz
cmc
jnp
add
add
loope
mov
psubd
jnp
cmp
mov
mov
pop
jp
push
mov
ret
pop
and
js
xchg
js
mov
es
push
mov
aam
test
imull
movsb
ret
mov
push
sub
xchg
dec
mov
mov
mov
add
ljmp
lods
pop
stc
jg
into
notb
je
adcb
cld
push
pop
orb
and
loop
cltd
inc
sbb
loop
push
popf
in
repnz
stos
ss
xor
sub
push
xchg
scas
xor
push
in
cmpsb
fistps
mov
test
je
into
gs
adc
fwait
cwtl
mov
jne
test
ret
repnz
cmp
push
mov
xor
out
sbb
lret
sbb
add
mov
cmp
movl
mov
ret
shrl
stos
dec
and
or
nop
mov
mov
lock
sbb
fstpt
mov
cmp
dec
imul
add
xchg
xor
pop
lods
adc
xor
outsl
test
cmp
sbb
rcl
xlat
cmc
addr16
aas
movsb
out
sub
insb
cmp
rolb
add
mov
movsl
inc
xchg
repz
bound
jbe
and
xor
push
push
testl
aad
mov
adc
lret
sub
add
icebp
inc
test
enter
rorb
fmull
outsb
adcl
fldcw
lock
cmpl
lock
leave
outsl
push
push
fcoml
ljmp
scas
addr16
fs
sti
xchg
add
fdivs
lea
rolb
lea
mov
mov
mov
inc
jl
xor
inc
dec
add
fistpll
or
rclb
xchg
jbe
idivl
and
test
cmp
xor
mov
lods
xchg
rcrl
mov
arpl
xchg
scas
push
in
pop
out
mov
or
push
out
add
mov
xor
aas
mov
in
cmpsl
pop
adc
or
push
out
inc
adc
bound
das
inc
addr16
adcb
push
cmpb
movsl
cmp
push
mov
pop
or
test
pop
sti
push
add
jbe
mov
pusha
sbb
ljmp
negb
popf
loop
lock
ja
movsb
pushf
stc
ret
dec
push
inc
dec
xor
movshdup
push
xchg
mov
out
pop
int3
andl
adc
pop
jo
das
subl
orb
out
jnp
stos
inc
mov
xlat
xor
push
fwait
sbb
out
push
loop
aad
aas
outsb
jg
sub
mov
out
or
iret
fcmovnbe
lock
ret
rcll
movsl
lds
rorb
lret
mov
adc
pop
popf
outsb
mov
dec
mov
enter
hlt
sarb
cld
dec
jno
popa
int
inc
pop
xchg
arpl
popa
pop
push
cmp
lret
mov
lahf
hlt
cmp
push
sahf
add
jbe
shrl
inc
xor
add
iret
cwtl
mov
lock
jl
push
cmp
cld
bound
and
sbb
mov
aad
in
pop
xchg
out
mov
iret
pop
push
clc
dec
or
mov
xchg
shrb
pop
mov
dec
popf
jo
xor
aaa
jbe
testl
loopne
or
sub
sahf
dec
mov
fwait
test
inc
cmc
sbb
sahf
clc
push
lea
mov
jl
mov
rcrl
movsb
add
xor
and
lret
test
add
push
sbb
test
mov
divps
inc
mov
adc
aas
or
call
adc
fs
dec
mov
pop
mov
sub
add
push
and
lds
into
jno
add
stc
xchg
fnstenv
cmp
sub
dec
aaa
into
jle
pop
shrb
pop
push
in
dec
dec
dec
ss
inc
aas
imull
fildl
mov
stc
push
mov
adcb
add
add
sbb
mov
shl
jo
xor
xchg
aad
cltd
fisttps
push
dec
scas
cmp
rcrl
mov
add
and
lods
push
into
and
repnz
test
jecxz
int3
mov
shrl
inc
mov
and
orb
mov
adc
mov
hlt
mov
sti
shrb
sub
sub
mov
mov
aad
leave
xor
xor
fisttpl
test
pop
or
aam
jae
and
lds
mov
in
fisubrl
fldl
and
daa
mov
scas
inc
mov
clc
inc
ljmp
xor
dec
inc
fmull
stos
arpl
dec
jo
repnz
adc
int3
sub
test
icebp
mov
rolb
dec
or
lahf
xchg
mov
cwtl
insb
dec
inc
jecxz
mov
rclb
xlat
nop
pmaddwd
out
pop
fildll
jle
jle
cmp
fsubr
iret
sub
stc
popf
cmp
cmp
rcl
rorl
xchg
in
xchg
scas
mov
mov
mov
or
test
adc
scas
mov
inc
cltd
bound
xor
sub
jmp
icebp
xchg
xor
outsl
jnp
push
xchg
stos
xchg
outsb
jl
int3
sbb
fdivl
ss
xchg
lods
push
out
rcrl
mov
outsb
adc
sbb
inc
mov
pushf
xchg
sbb
mov
fyl2xp1
fwait
push
mov
je
rep
andl
pop
loopew
mov
sub
rol
mov
aam
scas
out
movsl
sbbl
sub
cmpsb
push
jmp
mov
pop
xor
dec
xor
mov
insb
inc
add
adc
gs
xchg
pop
adc
test
fwait
push
loope
dec
jecxz
add
mov
faddl
add
mov
inc
fiadds
jno
insl
repz
gs
sub
add
mov
adcl
in
ret
xlat
pop
sub
rclb
adc
sbb
cmp
sbb
push
dec
lods
lahf
xor
in
push
sub
xlat
xor
lret
dec
mov
mov
mov
xchg
out
in
mov
cmc
mov
xchg
jns
les
out
fistpl
cmc
push
adc
pop
push
test
push
add
loopne
es
bound
pop
xchg
dec
sbb
shll
fstpl
xor
stc
imul
xchg
pop
mov
dec
nop
pop
notl
pop
lret
das
inc
adc
call
dec
dec
jl
add
cwtl
sbb
mov
ret
jns
and
adc
sub
rcl
in
fsubrs
insl
out
sub
mov
ret
mov
mov
mov
xchg
icebp
fxch
leave
popl
mov
push
inc
fs
outsb
lea
fsubrs
int3
into
daa
lds
add
mov
arpl
dec
xor
jae
pop
mov
fisubl
cli
mov
arpl
push
lcall
stc
nop
jmp
mov
xlat
adc
repz
fcom
hlt
mov
subl
dec
sarl
rol
into
jl
fwait
sub
dec
pop
adc
xor
jl
adc
pushf
inc
pop
add
stc
and
inc
inc
das
hlt
cmp
push
mov
lret
or
adc
pop
sub
dec
fs
dec
test
aas
mov
cmpsb
cli
rol
xchg
adc
out
sub
repnz
add
or
lods
pusha
pop
xchg
dec
ss
adc
or
ret
shlb
jb
movb
mov
add
mov
cmc
inc
ds
cmpsl
outsl
fs
mov
cmp
popf
pop
xor
adc
cltd
xrelease
inc
push
fbstp
fstpt
jmp
mov
xchg
xor
inc
add
sbb
add
mov
ret
ret
int
cmp
or
jg
dec
insl
or
or
aad
jne
cmp
ss
hlt
addr16
lcall
cmpsl
fcomps
mov
pop
rcl
aas
imulb
mov
dec
mov
adc
sbb
push
sub
dec
pop
adcl
push
jo
and
es
jle
inc
scas
push
sub
dec
inc
jecxz
inc
in
inc
pop
movsl
mov
xorl
xor
insl
in
mov
ds
and
add
call
adc
push
jb
fidivrl
hlt
cmp
or
pop
mov
repnz
pop
cmp
repz
dec
push
dec
push
stos
inc
mov
dec
leave
sub
lea
sti
xchg
jo,pt
push
into
dec
pop
mov
fmulp
int
xchg
sub
or
mov
push
sbb
or
cmp
jl
out
and
or
mov
lcall
lret
lock
jnp
scas
les
inc
movsl
arpl
xchg
repnz
sub
jbe
mov
les
sbb
mov
leave
sub
or
mov
mov
mov
mov
mov
fcomip
into
xchg
shlb
xchg
push
test
arpl
fwait
addb
mov
or
je
or
aas
mov
mov
in
fdiv
int
lods
inc
aaa
in
int3
mov
pop
jmp
jl
mov
mov
cmp
js
movsb
mov
int3
test
add
je
dec
xchg
test
dec
jg
lock
mov
ficompl
mov
cmpsb
cmp
or
loope
mov
jns
dec
outsl
sub
dec
ja
and
addb
lock
xchg
loopne
cmpsl
rorl
mov
push
adc
xor
xlat
mov
cmp
mov
lods
push
push
shrl
mov
jo
data16
jl
mov
lods
mov
sbb
aam
push
push
hlt
xor
or
sbb
cltd
jbe
jns
xchg
andl
add
stos
sbb
pushf
inc
ljmp
mov
cwtl
inc
sbb
ret
jbe
jp
xlat
outsb
xchg
xchg
stc
pop
or
popf
mov
jmp
mov
xor
push
mov
ss
insl
push
fldl
pushl
sbb
aad
add
cwtl
add
and
lods
shl
repnz
in
sbb
jmp
aad
pop
jb
aaa
jbe
imul
loop
mov
stos
call
test
mov
xor
mov
jle
pushf
scas
jae
icebp
bound
cld
sub
jmp
mov
pop
jne
int
jg
jle
outsl
cmp
enter
jge
or
mov
cmp
mov
shll
mov
iret
xchg
call
and
pop
add
mov
es
pop
pop
lret
sbb
pop
decl
or
outsl
daa
lcall
mov
call
push
and
ror
enter
push
push
push
xchg
movb
mov
clc
xchg
fnstsw
test
add
outsl
ret
outsb
pop
inc
fimull
rcrl
out
mov
xchg
push
frstor
jns
mov
mov
adc
jno
cmovae
outsl
pop
insb
outsl
mov
lods
in
stos
dec
xchg
jge
test
jp
std
fmuls
mov
je
push
imul
iret
in
js
mov
inc
push
popf
repz
adc
xchg
lea
cltd
insl
jge
cltd
movsl
sbb
fs
int3
aad
ret
jmp
shrb
pusha
mov
mov
outsb
in
test
pop
in
fs
xor
inc
pop
rorb
and
push
dec
loope
cltd
or
push
cltd
push
jae
repz
and
popf
ja
dec
cwtl
cld
rol
daa
sbb
pop
sub
pop
hlt
push
cs
xor
je
lds
add
jbe
aad
movsb
lods
ss
les
int
inc
test
out
lret
mov
aas
mov
lahf
fidivl
pop
or
mov
jns
and
push
test
fwait
cli
cmc
movsb
mov
jnp
lds
js
jg
divl
lret
mov
test
cmpsb
and
icebp
nop
pushf
js
jge
adcb
ret
or
shlb
sub
push
or
outsb
cmpsb
push
inc
daa
mov
int3
nop
fnstsw
cwtl
push
in
ret
inc
pop
jl
cmp
js
popa
movsb
das
mov
jae
imul
and
notb
aas
fcoms
push
mov
outsb
mov
sub
xlat
push
lods
out
daa
bound
xchg
jp
cld
push
add
sbb
pusha
push
mov
adc
cmp
xchg
imul
out
ret
stos
std
insl
hlt
xorb
push
mov
ss
iret
jmp
cmp
imul
das
push
xlat
outsl
and
inc
jl
mov
dec
mov
adc
and
jle
pop
jae
dec
push
hlt
inc
pop
aam
ja
sub
xchg
mov
inc
fiaddl
push
test
bound
popa
cmp
jo
adc
sarb
in
pop
out
rolb
inc
mov
jmp
cmpsb
out
out
pushf
cli
inc
mov
clc
mov
mov
xor
dec
out
mov
hlt
stos
and
mov
or
inc
in
scas
pop
lcall
call
jp
sbb
jg
mov
ss
pop
sub
in
pop
pop
incl
pop
inc
subl
inc
insb
inc
lahf
in
push
out
sbb
fnstsw
dec
and
push
sbb
ss
lret
in
pop
out
pop
mov
and
mov
js
mull
fildl
push
bnd
aam
js
jmp
test
dec
lret
or
je
loop
test
popf
cmp
or
sbbb
mov
add
push
xchg
add
data16
adc
cmp
dec
ret
jle
loop
decb
jmp
insl
mov
pushf
jne
sti
shr
mov
add
stos
push
cs
test
push
cmp
or
xor
pop
jmp
mov
call
sti
inc
mov
outsl
push
cmp
cmpsb
mov
jmp
sbb
jb
sub
bnd
adc
andb
pop
imul
js
dec
add
insb
sub
repz
jnp
or
lahf
cmpsb
inc
hlt
push
inc
sbb
sti
mov
push
movb
shlb
sbb
pusha
mov
inc
call
test
mov
dec
sub
jmp
sbb
dec
lret
mov
push
add
push
and
std
pushf
cli
cs
and
rorb
repnz
ficoml
cmpsl
push
pusha
insl
scas
enter
sbbl
out
jb
mov
test
cmpsb
mov
popa
sbbl
fcomi
sub
add
pop
into
out
cmp
mov
jbe
push
jecxz
test
movsl
lods
lea
jo
jo
pop
ret
sub
add
dec
imul
int3
bound
jg
daa
xchg
dec
mov
or
push
mov
inc
fs
mov
sbb
mov
dec
mov
lret
push
aaa
sarl
push
ss
push
stos
pusha
mov
andl
pushf
bound
adc
sub
push
xchg
pop
sub
sar
and
xchg
xchg
pop
addr16
xor
scas
mov
jg
out
jl
pop
addr16
mov
cmc
mov
push
push
add
dec
mov
mov
shll
popa
fstpl
mov
jle
rcrl
mov
push
jo
push
and
mov
loop
adc
push
jns
jns
mov
inc
dec
hlt
pop
pop
ja
mov
jmp
jo
push
pusha
pop
in
stos
xchg
es
mov
sbb
inc
push
fdivrs
lret
jne
and
mov
lds
inc
rcl
es
mov
lret
fsub
mov
addr16
int
loopne
or
sub
fwait
pop
cmp
adcb
adc
pop
mov
lock
roll
cmp
pusha
sub
clc
stos
inc
sub
or
int
outsb
push
in
add
dec
pop
std
and
cmpsb
out
lret
shll
mov
cs
das
int
fimuls
pop
cmc
call
insl
icebp
add
ret
dec
or
popa
inc
mov
hlt
xor
or
pop
in
into
stos
insl
jg
and
or
cmp
adc
in
pop
ljmp
cmp
mov
dec
imul
cmp
and
xor
cmpsb
cmp
mov
hlt
in
es
sub
and
sub
mov
lcall
std
mov
fwait
jmp
lea
call
xchg
cmp
cmp
lds
jecxz
inc
push
out
sub
cmp
rorl
les
mov
test
push
ljmp
pop
xor
std
sub
les
aaa
andl
iret
cmp
mov
or
pop
jecxz
cmpsl
jge
mov
out
stos
ret
cmp
icebp
fdivrs
js
xchg
jl
or
mov
jle
lahf
or
loopne
or
cmpsb
xchg
dec
dec
inc
mov
call
push
jmp
mov
and
xor
xchg
xor
sbb
cmp
lods
jp
pop
mov
pop
fiadds
lea
andb
stos
jno
je,pn
dec
cwtl
xor
mov
mov
mov
jo
xchg
adc
pop
hlt
lea
add
mov
push
lret
add
mov
sub
jle
jbe
mov
scas
sub
lea
sub
inc
lahf
xor
lds
push
sub
push
push
dec
mov
push
sbb
ret
mov
in
cmp
cmp
and
imul
add
scas
in
mov
lret
iret
cli
pushf
inc
xor
pop
jecxz
inc
lcall
shll
pop
mov
int
out
ror
loop
imul
jne
aaa
int
push
add
inc
dec
dec
mov
data16
xor
sbb
mov
push
test
jne
scas
jg
movsl
hlt
cmp
test
aaa
xor
add
popa
xsha256
cmpsb
xchg
addr16
test
pop
mov
mov
push
pop
clc
imul
xchg
mov
mov
xor
lods
inc
sbb
and
icebp
lahf
stos
adc
lcall
outsl
pop
push
ret
push
lods
jmp
jo
mov
and
xchg
loop
and
dec
pop
push
sbb
add
xchg
jmp
xor
fistps
loopne
xor
clc
pusha
push
notl
test
enter
mov
or
jno
cmp
repz
inc
jl
jb
dec
popf
loop
bound
mov
pop
ss
pop
pop
mov
ret
xor
es
xchg
mov
shl
sub
in
cmp
mov
shll
loope
dec
and
mov
adc
push
lcall
in
push
dec
movsl
into
or
sub
xchg
rcrl
mov
mov
stc
call
rolb
lea
outsl
or
or
sub
imul
in
cmpb
inc
add
jp
aaa
addr16
test
test
add
push
push
adc
jmp
xchg
stos
cs
xchg
pop
xor
and
sahf
fs
inc
mov
xchg
js
mov
das
jge
in
jns
xchg
imul
fldl
xor
adc
inc
jp
jg
in
mov
sbb
in
xchg
stc
dec
repnz
mov
cmp
xor
xchg
pushw
mov
shll
mov
dec
hlt
and
pop
pushf
xchg
nop
dec
gs
sub
insl
or
lcall
adc
out
repz
jb
sbb
sbb
rcrb
lret
repz
xor
bound
xchg
jecxz
cmpsb
fadds
sub
xlat
pop
xor
cmp
scas
mov
xchg
lods
inc
and
in
popf
fs
lods
mov
cs
and
push
add
pop
xchg
bound
mov
dec
and
mov
or
xor
dec
lock
add
out
imul
inc
cmp
cltd
xchg
push
mov
jns
ds
int3
sti
sbbl
xor
add
aas
iret
add
sahf
adc
fists
xor
adc
dec
cs
cmp
popa
dec
inc
mov
mov
sub
out
jb
inc
jecxz
jmp
mov
imul
loop
sbb
mov
stc
aad
stos
mov
fbstp
sub
das
shlb
xchg
mov
mov
push
or
pop
lcall
pusha
dec
mov
add
shrl
mov
adc
xchg
and
jbe
adc
dec
and
pop
sahf
jecxz
cmp
mov
jb
mov
mov
push
push
clc
rcl
bound
repz
cli
sahf
mov
cltd
roll
xchg
adc
iret
sbb
mov
add
or
mov
jae
ja
lock
push
lods
mov
jne
or
jp
pop
pushf
adc
push
adc
inc
das
jecxz
sbb
bound
bound
sub
arpl
dec
add
push
cmpsw
adc
rclb
push
in
arpl
xor
into
sti
mov
inc
jo
inc
sbb
cmc
insb
sub
mov
leave
into
cmp
push
in
inc
sbb
inc
fists
scas
pop
popa
orl
idiv
in
push
orl
mov
mov
es
inc
mov
push
out
and
loopne
xor
sbb
lahf
jp
dec
jecxz
mov
cmc
push
xchg
pop
sti
adc
add
and
xor
jo
jo
or
adc
imul
and
fnsave
push
cmpb
and
stos
test
push
test
vpmacsww
out
mov
sahf
iret
mov
sahf
xor
add
cmc
loopne
rcll
les
inc
dec
fcoms
in
pusha
data16
ljmp
sti
jne
lds
repnz
out
aam
fiadds
jno
jb
out
nop
ret
mov
cmc
dec
xor
fsubrs
xor
pop
mov
cs
stc
or
jne
sub
fnsave
int
loop
sbb
loop
inc
sbb
movsl
xor
aas
sub
mov
test
shrb
push
lock
pushf
sbb
sbb
imul
std
push
push
xchg
lcall
faddl
das
xor
in
les
push
mov
pop
or
iret
cmp
repz
rclb
outsl
repz
cmpsl
ja
push
jmp
xchg
pop
mov
clc
cltd
and
inc
adc
cmp
subb
out
enter
inc
mov
xor
sub
cld
jns
and
mov
jmp
mov
fsubl
push
insl
leave
hlt
rolb
or
cmc
pushf
arpl
push
in
push
lods
dec
jne
mov
or
or
dec
icebp
jnp
cltd
test
ret
jb
daa
mov
aad
or
movsb
int
mov
mov
mov
lds
add
mov
loop
cld
repz
and
stos
xchg
jge
xchg
pop
add
cld
add
cmp
in
fnstcw
in
lods
jmp
mov
hlt
mov
lods
pop
cltd
pop
mov
and
xor
xchg
bound
dec
dec
inc
mov
test
add
outsl
xor
cmpsb
inc
out
lds
aad
add
in
mov
sub
inc
pop
std
xchg
addr16
in
rcll
sbb
outsl
mov
inc
arpl
aad
sub
movsl
jo
dec
push
dec
shlb
push
in
push
jns
imul
pop
arpl
iret
push
xor
adc
daa
jne
pop
subb
or
ror
or
xchg
fists
lods
push
add
mov
inc
inc
fbld
addr16
xor
jp
int
shl
int3
or
jg
inc
dec
cmpps
ficompl
mov
sbb
jl
fnstenv
scas
gs
lcall
in
aas
push
lahf
xchg
push
inc
aaa
mov
jo
dec
inc
xlat
mov
jmp
rep
lods
jmp
je
andl
sbb
je
jb
cmp
sub
add
mov
push
push
mov
cmc
xor
pop
std
push
jg
decb
inc
outsb
mov
sbb
cmp
outsb
ss
adc
outsl
jbe
and
scas
mov
andl
mov
mov
sub
mov
or
decl
inc
sub
pop
loope
push
sub
add
incb
xlat
lock
pop
xchg
sti
aam
mov
jmp
push
rcrb
xchg
inc
out
or
push
in
das
ficoms
imul
gs
or
or
or
inc
inc
xchg
ficomps
out
adc
pop
lock
and
push
sub
ja
sbb
cli
into
je
sbb
xchg
xlat
pop
and
mov
cmpsb
pop
arpl
daa
lock
jae
add
dec
pop
add
js
fisttpl
xor
decl
adc
push
es
xor
mov
int
sub
or
repnz
dec
push
adcl
xor
divl
lds
je
ljmp
xor
mov
cmp
push
incb
sub
into
pop
add
pop
aam
lret
ret
je
iret
leave
lret
dec
and
ljmp
hlt
push
jmp
add
dec
dec
inc
mov
push
test
push
icebp
cmp
mov
dec
sbb
or
dec
iret
mov
or
mov
sbbl
cmc
jmp
and
int3
mov
mov
add
inc
stos
cmpsb
fisubl
call
mov
imul
push
ljmp
mov
jmp
call
bound
cmp
xchg
inc
rclb
mov
nop
ljmp
outsl
ret
adcb
rcrb
jno
or
ret
les
adcl
lods
cmp
fimuls
push
sub
out
cmp
in
vandpd
inc
aas
sarb
into
stos
hlt
mov
inc
and
stc
mov
out
enter
lock
fdivrs
aas
cli
shl
insb
cmp
xor
pusha
arpl
mov
mov
mov
mov
imull
es
fwait
call
in
push
or
js
mov
int3
out
xor
loop
xchg
sbb
cmp
enter
xchg
dec
popa
movsb
ja
inc
or
inc
xor
leave
pop
mov
jne
xor
or
cwtl
insl
fabs
ja
jne
xor
cmpsl
ds
push
pop
loop
lds
xchg
push
push
iret
pop
out
mov
jle
std
cmpsl
jbe
cltd
pop
mov
loop
clc
lods
xlat
movsb
and
add
frstor
insb
imul
sub
push
push
mov
sbb
xchg
negl
pop
push
cmp
mov
fdivr
in
out
jbe
or
sub
vfrczps
sbb
sub
jg
insb
mov
fwait
mov
subl
clc
xchg
cmp
cs
popf
les
xchg
jl
mov
into
fdivrl
inc
arpl
movsl
addr16
mov
sbb
lea
movsl
shrb
sahf
and
repz
mull
mov
cmp
xchg
sbb
lock
mov
cmp
cmc
aaa
loopew
aas
and
ja
lahf
stos
xchg
pop
cmp
or
mov
jg
fcomi
mov
rolb
stos
stos
mov
mov
cmc
xor
arpl
jbe
sbb
cld
ss
sarb
or
bound
stc
push
adc
push
aad
testl
ficoms
and
mov
mov
movsl
sahf
add
dec
sub
xchg
loop
mov
fidivl
inc
ljmp
insl
push
or
fnstenv
xchg
push
sbb
mov
fistps
idivl
add
ret
scas
nop
pop
scas
repz
cmp
mov
shll
push
test
les
mov
sbbl
in
mov
fistpll
xchg
aam
lea
cmp
dec
mov
cmpb
arpl
xchg
xchg
cmp
mov
mov
xchg
or
mov
push
pop
ljmp
aas
xlat
dec
inc
insb
add
sub
js
xchg
cmpsl
jp
jb
jmp
jp
cmp
lods
es
sarb
inc
ljmp
js
dec
sub
rorl
xchg
andb
add
clc
scas
mov
pop
sbb
ret
pop
sub
inc
insl
add
or
fstpt
mov
xor
sbb
adc
lret
mov
mov
dec
pop
ret
cld
dec
push
out
mov
adc
push
roll
bswap
inc
mov
dec
mov
ret
ljmp
loope
fwait
dec
inc
int
dec
outsl
push
ss
insl
jbe
fiaddl
data16
jmp
sbb
insb
xor
ffreep
push
jae
lods
pop
mov
movsl
jne
wrmsr
sahf
xor
inc
inc
jmp
das
xchg
mov
mov
mov
sub
add
testb
loopne
push
jecxz
mov
or
ds
fdivl
imul
pop
and
icebp
adc
fistl
pop
jbe
es
pop
outsb
fiaddl
mov
stos
push
insl
pop
push
sbb
popa
fsub
not
pop
mov
andl
cwtl
mov
movsl
mov
add
loope
ds
or
jb
int
mov
adc
jp
adc
fnstcw
cltd
mov
push
pop
les
pop
incb
sbb
cli
xor
in
mov
cmpsl
sub
lods
push
jle
and
jg
fisubl
mov
jb
imul
or
out
mov
dec
in
dec
ficomps
and
dec
jecxz
repnz
or
rorl
xor
push
lcall
xchg
sbb
sti
pop
dec
sub
lret
cmpb
pop
in
sub
insb
shl
xor
mov
mov
shlb
xchg
mov
dec
dec
inc
es
push
aas
sub
add
imul
xchg
int
pop
pushl
jmp
pop
pusha
fld
xchg
jns
mov
push
bound
shlb
mov
cld
call
xor
daa
or
xor
out
mov
leave
in
sbb
sti
add
sbb
sahf
clc
pop
push
pop
jmp
mov
stc
outsl
mov
mov
dec
stc
push
out
ljmp
mov
sbb
orl
dec
movsl
mov
test
pop
test
sbb
cmp
bnd
jmp
and
cmpsl
sbb
lods
mov
popf
mov
clc
nop
orl
mov
cmp
imul
push
int
mov
lds
jg
cmp
sbb
cmp
lret
insl
cs
adc
or
fbld
sbbb
fdivl
sub
xchg
sub
xlat
add
or
jno
je
mov
adc
pop
add
call
mov
out
mov
lods
sar
fidivl
pop
aad
das
pop
stc
jle
lods
mov
fistps
scas
jb
push
dec
push
pop
cli
fnsave
mov
fcomps
jle
sub
sbb
sbb
imul
insl
repz
cwtl
mov
cwtl
sub
pop
mov
out
sbb
std
or
xlat
jmp
stos
ret
or
mov
sbb
add
push
mov
ret
rcll
mov
adc
inc
pop
das
push
jae
mov
mov
push
ret
jl
or
dec
pusha
lcall
pop
clc
enter
pop
addl
lret
xlat
icebp
out
insb
fnstsw
mov
outsb
cli
sbb
pop
add
pop
lods
daa
ret
pop
jbe
or
mov
inc
fstp
mov
and
add
push
stc
jle
mov
mov
jge
adc
std
xchg
jno
into
and
xchg
sbb
dec
std
mov
ja
add
aaa
or
mov
pushf
jno
jmp
push
lds
das
mov
or
jb
push
iret
or
xchg
push
jmp
mov
sbb
ret
inc
dec
sbb
adc
or
cmp
sub
fdivrs
or
cmp
mov
shl
mov
add
cmp
ljmp
scas
shrl
adc
inc
data16
pop
xchg
insb
jne
xor
cltd
cmp
ret
sar
rorb
xor
mov
jns
or
fdivl
jg
cld
sub
or
int
out
sub
repnz
bound
xor
add
cmp
lahf
imul
mov
sub
xor
cmp
xor
sub
inc
in
cmp
fimuls
out
movsb
subb
push
add
mov
adc
adc
jg
cli
mov
xchg
gs
cs
test
mov
and
jnp
push
or
mov
popf
ret
aad
mov
jle
xor
push
hlt
xchg
pop
sbb
stc
aam
cmp
sub
test
cs
leave
aam
outsl
ret
push
mov
loop
and
pop
push
adc
movsl
jmp
sbb
mov
notl
mov
movsl
not
movl
out
ret
movsl
lea
push
loope
aas
jmp
adc
pop
or
mov
adc
mov
sahf
sub
xchg
outsb
or
mov
pop
aas
gs
out
subl
push
jle
xor
inc
dec
inc
popa
je
mov
mov
add
pop
adc
test
jp
jbe
jmp
fldcw
jmp
xchg
cmp
stc
mov
int3
lea
adc
pop
add
mov
daa
out
mov
cwtl
mov
lahf
ss
outsb
out
dec
xchg
sub
mov
mov
stos
cmp
push
jmp
cmp
push
fwait
add
inc
push
sbb
test
cmp
xchg
andl
push
push
frstor
jg
sbb
into
fsubl
ja
add
dec
adc
fnstsw
lods
mov
jnp
xchg
clc
das
mov
scas
mov
xlat
outsb
in
shlb
inc
fcomps
xor
je
cmpsb
in
or
leave
xchg
push
or
daa
mov
mov
inc
enter
bound
in
fwait
dec
shll
repnz
test
push
xchg
clc
lods
inc
loopne
scas
xchg
data16
icebp
daa
mov
in
inc
xchg
xchg
cmp
inc
pusha
lcall
outsb
push
stos
mov
out
das
pop
leave
jecxz
mov
shrl
scas
aas
ljmp
mov
inc
insl
hlt
sti
test
push
xchg
outsl
adc
pop
subl
dec
test
xchg
sub
jns
mov
test
arpl
js
lret
xchg
mov
and
in
or
popa
hlt
add
jmp
pop
sub
cmp
dec
adc
mov
shlb
les
sub
addr16
cmp
xchg
out
ss
lea
dec
fldt
adc
int
sbb
adc
das
sbb
dec
xchg
aam
and
std
xchg
add
cmp
cs
and
popf
push
insb
iret
sbb
scas
shl
xchg
stos
mov
mov
enter
mov
pop
xchg
repz
arpl
sbb
dec
mov
add
repnz
sbb
mov
daa
adc
adc
push
push
pop
dec
sbb
dec
sub
xchg
xor
lds
mov
imul
mov
lods
jge
cmp
add
fs
int
icebp
cmpsb
push
fdivs
adc
insl
das
cmp
faddl
je
test
sbb
xor
aaa
jg
lods
cmp
cmp
out
mov
imulb
add
or
pop
sarb
xchg
scas
bound
testb
inc
adc
xchg
sti
stos
and
cmc
lahf
ss
xor
cmp
mov
loopne
repnz
adc
dec
add
push
in
out
cltd
nopl
add
pop
xor
inc
jg
fsubl
fucomi
das
gs
xchg
adc
inc
lahf
cmp
bound
enter
sub
dec
out
xor
ret
cmp
aad
sbb
testb
cmp
stos
int
mov
add
jg
inc
out
stc
or
mov
cmc
mov
inc
ret
mov
aad
fidivrl
add
movsb
stos
inc
shrl
je
stos
mov
jne
orl
ljmp
ljmp
or
imul
cmc
lcall
push
js
inc
stos
int
sbb
pop
sbb
inc
mov
push
push
xor
or
sarl
daa
jecxz
dec
pop
sbb
fbld
sti
jecxz
adc
movsl
leave
and
inc
push
dec
cwtl
imul
cmp
and
sbb
std
add
pop
icebp
sub
add
jmp
xor
adc
inc
inc
fidivl
add
dec
leave
loopne
add
or
movsl
dec
and
les
orb
stc
rol
insb
and
jno
pop
mov
fnstenv
iret
mov
aad
jns
lahf
pop
inc
xlat
cmp
push
inc
xor
sub
repnz
push
sub
adc
jp
mov
cmp
add
mov
jle
shrb
shr
loopne
data16
faddl
jns
xorb
repz
fs
xchg
pop
cmc
push
andb
sub
jg
outsb
in
andl
and
lock
inc
stc
adc
in
in
xchg
pop
xor
or
iret
cmp
push
push
cld
xor
je
and
sub
dec
pop
hlt
lahf
ss
ror
out
inc
sbb
repz
iret
add
dec
inc
in
cwtl
mov
ljmp
adc
mov
nop
stos
adc
cmc
dec
std
xor
frstor
into
movsl
cmp
sti
ljmp
shl
xchg
push
loop
sub
pop
fildl
push
out
mov
cmpsb
movups
jbe
mov
mov
insl
test
push
xor
mov
pop
mov
movsb
pop
and
out
dec
cmp
or
xor
xor
rcll
mov
loop
push
push
xor
std
cs
adc
cwtl
push
jmp
xor
lret
adc
loop
sub
les
dec
test
and
orb
nop
sub
jns
stc
bndstx
mov
into
dec
and
add
stos
andb
or
es
stos
jmp
adc
mov
pop
test
filds
test
pushf
test
fiadds
inc
cmpsl
mov
and
jl
fs
or
in
popf
xor
repz
loopne
js
push
lea
mov
and
adc
or
mov
push
stos
pop
sbb
test
pop
mov
mov
mov
xor
jo
cwtl
cmpsl
dec
inc
cmp
sub
push
insb
outsb
rcrb
test
xor
test
or
loop
fimuls
iret
data16
pop
inc
inc
mov
mov
stc
adc
mov
icebp
out
stos
jae
sub
ds
sub
push
adc
ss
push
pop
jo
push
xor
sub
test
loopne
ds
stos
dec
hlt
xchg
jle
fdivrs
pop
jbe
sbb
jbe
lret
push
pop
adc
ss
loopne
ljmp
icebp
jl
addr16
sbb
testl
adc
and
adc
add
pop
pop
jg
and
movsl
ds
jg
popf
xchg
int3
lcall
pop
xchg
rorl
and
sub
lea
cmp
scas
rcrl
and
data16
pop
js
out
inc
sbb
sbb
or
outsl
jecxz,pt
das
paddusb
jmp
out
sub
push
jl
sub
rol
mov
push
insl
loope
mov
push
adc
scas
frstor
inc
daa
lret
mov
ret
xchg
cmp
pop
insl
and
outsl
add
rcrl
xchg
mov
mov
and
dec
jb
imul
push
xchg
into
adc
adc
leave
mov
pusha
fistl
stc
sub
sbbb
push
movsb
xor
xchg
std
nop
imul
in
adc
icebp
dec
mov
cmp
stos
add
adc
mov
repz
mov
inc
ljmp
in
xchg
xor
and
aaa
jbe
sar
popl
iret
mov
push
mov
in
sub
mov
loopne
cmp
ds
inc
mov
or
xor
xor
xchg
iret
mov
aad
pop
mov
cmpxchg8b
iret
xchg
push
inc
mov
mov
xchg
inc
sbb
cmp
mov
jne
lods
cmp
sbb
pop
mov
mov
and
mov
adc
shrb
test
push
xor
stc
outsb
adc
pop
sub
xor
sbbb
xchg
jns
out
mov
pop
xor
lea
xor
mov
push
insl
imulb
and
pop
shrl
add
ret
mov
mov
jne
pop
out
int3
jle
jle
jecxz
xchg
dec
pop
or
nop
jecxz
add
mov
xor
aaa
mov
repnz
out
aas
sbb
mov
rcrb
and
ret
inc
push
xchg
ficompl
int
xchg
mov
scas
or
aad
inc
out
jns
lret
ja
cs
mov
add
test
pop
and
mov
das
sub
ficoms
bound
stc
les
movsb
inc
idivb
inc
sarl
add
mov
add
movsb
xchg
stc
xchg
push
inc
sti
and
in
das
and
mov
and
pushf
xor
lods
sub
fnstenv
lcall
dec
rolb
pop
xchg
jns
mov
das
mov
xor
cmp
and
sbb
push
fs
inc
push
repz
add
inc
sbbl
ss
xchg
sbb
push
aam
adc
mov
mov
sbb
cmp
aaa
jmp
sub
mov
cmp
cmpsl
addr16
pop
adc
push
das
ret
mov
addb
shrb
add
mov
sub
sarb
lods
pop
push
lea
xor
mov
andl
cmp
dec
mov
scas
cmp
and
cs
inc
pop
mov
jg
inc
scas
add
lods
mov
fwait
in
out
push
stos
lea
pushf
rorb
lcall
sub
fucom
jns
repnz
pop
lcall
scas
jne
cmpsl
mov
pop
shl
rcll
xchg
nop
cwtl
mov
jae
xor
xor
adc
test
inc
push
mov
fdivrs
sahf
std
inc
inc
cmp
push
jle
scas
cmc
rcrb
pop
repnz
mov
dec
jbe
stc
aas
jge
cmp
sbb
je
jnp
in
rorb
and
pop
repnz
dec
pop
stos
repz
pop
jne
or
in
and
mov
push
jo
jnp
sub
lcall
in
jg
add
cmp
or
dec
mov
jne
fsubrs
fdivs
shlb
fimull
mov
fldl
out
mov
loop
fld
mov
mov
mov
nop
cli
lret
jno
ror
and
xor
loop
mov
jno
sub
js
and
iret
scas
aaa
incb
in
rcrl
punpckldq
inc
cmc
mov
mov
cmp
pop
xor
jle
call
xor
loopne
inc
bswap
and
stc
jo
outsl
push
pop
cmpsl
sub
popa
shrb
xor
push
mov
cmp
daa
xlat
push
push
mov
add
inc
rcrb
mov
fsts
ja
std
inc
mov
aad
mov
mov
fwait
mov
repnz
cmp
sbb
mov
sub
mov
stos
dec
imulb
add
fldenv
notb
out
sub
bound
outsb
or
sbb
fprem1
insl
sub
mov
sub
in
sub
mov
inc
movsl
outsl
cli
mov
push
in
dec
xchg
sbb
faddl
in
mov
jbe
sbbb
fwait
sbb
cld
xor
mov
popf
push
jmp
mov
orb
mov
paddb
sbbb
push
insb
jg
mov
jg
xor
fidivrs
shll
dec
sub
push
mov
sbb
rorb
shrb
mov
je
adc
loop
mov
xorb
lods
and
mov
leave
int
xor
pusha
test
sub
lods
sub
or
scas
pop
hlt
xor
popf
pop
fistpll
mov
notb
popf
and
aas
add
mov
rorl
xchg
testl
iret
adc
xor
or
into
loopne
or
sbb
popf
fwait
adc
and
mov
jmp
shlb
sub
movb
test
ljmp
std
or
push
mov
lds
inc
push
mov
sbb
cmp
imul
push
sub
push
pop
insb
cmp
fldenv
enter
xchg
push
xor
xchg
jbe
lret
push
xor
inc
xchg
stc
or
mov
pop
mov
js
xor
push
js
lds
mov
fisttpll
pop
adc
loop
sbb
nop
mov
fs
insl
push
push
hlt
mov
jne
movsb
test
hlt
jl
sub
dec
jns
lret
pop
es
cmp
cs
scas
and
push
adc
xor
add
adcl
je
pusha
jns
mulb
push
fldenv
js
fwait
in
xchg
popa
int3
cmp
scas
nop
vphaddwq
xchg
mov
movsl
xchg
outsl
fsubrl
cmp
subl
pop
or
mov
idivl
sarb
bswap
push
fwait
scas
repz
test
mov
pop
mov
out
out
add
jno
sbb
mov
pushf
sub
mov
mov
repnz
stos
fsubl
jecxz
out
sbb
adc
popf
aaa
fs
add
adc
loop
xor
dec
inc
push
addb
js
fsubs
and
jo
into
adc
or
addl
loop
lock
sbb
sbb
enter
inc
pop
hlt
sbb
pop
ljmp
push
js
pop
stos
das
nopl
stos
fdivl
pop
fcomps
mov
xchg
sub
adc
je
xlat
add
mulb
js
push
ljmp
xchg
jo
shl
movsb
xchg
sbb
rcl
addr16
xor
sub
mov
nop
stos
xor
cmp
mov
es
mov
or
jl
dec
stos
push
fwait
pop
or
mov
lock
jge
jb
push
sahf
fbstp
or
mov
jge
xchg
scas
shll
popf
idivl
sahf
push
xor
xor
adc
inc
ja
cmpsl
mov
push
ljmp
jb
out
inc
je
push
outsl
sbb
mov
pop
sarb
orb
inc
es
dec
add
cmp
lahf
or
dec
jbe
out
out
xchg
xchg
and
loop
in
dec
aaa
adc
xor
fisttpl
inc
call
ds
inc
jmp
test
xor
addr16
mov
add
push
leave
stc
popf
lret
aaa
and
test
add
aaa
iret
orl
scas
pop
cmp
inc
loope
inc
inc
sarl
cmc
xor
xor
cli
int
out
add
dec
ret
xlat
inc
lahf
pop
das
fsubrl
inc
pop
fidivl
jmp
mov
push
fsts
jge
mov
adc
jmp
ja
jmp
std
dec
mov
xor
sti
std
inc
negl
cs
push
cld
insl
shl
dec
hlt
push
jo
jl
iret
rcl
pop
imul
repnz
sarl
mov
push
cmp
shll
mov
add
push
ds
lahf
outsl
addr16
test
dec
and
xor
into
dec
push
pop
dec
sbb
jne
insb
aas
cs
add
xlat
pop
xchg
pushf
lret
jmp
and
fiaddl
pop
add
push
cmp
insl
push
cltd
mov
cwtl
and
mov
jne
in
js
sub
adc
sub
scas
scas
mov
sbb
insl
cmp
cwtl
xchg
xchg
pop
mov
or
scas
push
dec
enter
daa
jp
mov
sbb
xchg
lds
mov
dec
fcomps
pop
out
scas
xchg
nopl
cmpsl
loope
push
daa
inc
jecxz
ja
aad
adc
mov
add
or
adc
icebp
fcompl
sub
in
jae
clc
lods
negl
push
fidivrs
mov
outsl
call
lock
dec
hlt
dec
xchg
mov
adcl
xchg
push
lds
mov
push
shrl
arpl
addr16
mov
insl
push
ljmp
mov
in
push
mov
mov
xchg
sbb
psllw
lock
sub
xchg
insb
cld
fwait
and
and
pop
add
in
arpl
mov
fidivrl
cwtl
mov
dec
cmc
loopne
out
mov
add
dec
lret
int
sbb
in
xor
xor
xor
popa
rcl
mov
scas
mov
lret
sub
ret
lcall
les
std
pop
adcb
and
lods
jge
test
mov
push
test
pop
test
push
mov
xchg
test
push
rolb
and
jb
call
ficomps
dec
and
ljmp
or
ljmp
test
mov
mov
dec
cmpb
xlat
xchg
out
lods
divl
stos
cwtl
rol
inc
lods
push
and
rcrl
push
sbb
outsb
in
push
cli
repz
adc
and
push
push
inc
cmp
cwtl
mov
jnp
jmp
jne
dec
push
mov
cmpsb
cmp
jge
aaa
stos
movsb
adc
inc
push
sbb
filds
add
mov
bound
jmp
mov
sti
mov
fbstp
insl
sarl
hlt
push
fwait
in
xlat
in
sahf
cmc
mov
leave
or
mov
lret
push
jmp
lods
lret
pop
sbb
mov
es
dec
xor
jp
ds
imul
lret
dec
pop
out
ljmp
aam
lods
subb
shlb
cmpsb
jg,pn
test
popf
hlt
sbb
pop
movsl
mov
push
and
test
int
addr16
pop
aad
xchg
and
add
aas
data16
xor
jns
gs
ds
xchg
es
ljmp
jno
mov
sub
or
nop
jecxz
pop
rcr
popa
es
xor
xchg
mov
repnz
inc
dec
cs
dec
fs
cli
int3
jne
and
xor
mov
inc
xorl
enter
adc
xchg
jmp
in
mov
cmpsb
cmp
push
rorb
sbb
add
daa
mov
pop
mov
pop
insl
push
cwtl
mov
add
cld
int
jnp
sub
sti
sbb
adc
mov
sti
daa
jns
pop
sbb
sub
ss
je
ss
push
pusha
add
in
jl
maxps
jl
jg
movsl
inc
jns
lcall
das
fadds
mov
xlat
orb
sub
or
lods
add
shrb
fadd
subl
ljmp
mov
adc
jae
ror
add
je,pn
xchg
test
push
out
out
test
xor
repz
outsl
add
cmp
movsl
pop
je
mov
loope
dec
idivl
scas
xchg
mov
movsb
mov
xlat
popa
rcrl
inc
js
cmp
mov
fdivrs
leave
int
pushf
cmp
mov
pop
xchg
imul
je
repz
sub
mov
in
fucom
adc
cmpsl
rcll
or
ds
mov
mov
and
iret
imul
push
mov
and
movsb
fiaddl
shl
cmp
push
dec
aam
shlb
push
in
jns
daa
lock
jae
testb
fistpll
xchg
jl
sti
in
fst
pop
and
lods
xchg
or
cmc
int3
cmc
dec
iret
jno
jmp
sbb
mov
jle
ret
shrl
jmp
xchg
dec
ret
mov
adc
call
or
out
fnstcw
test
sub
jb
mov
pop
and
and
test
inc
mov
test
sarb
jp
pop
lods
pop
jecxz
adc
enter
push
in
push
cltd
int
jne
sub
xchg
cmp
icebp
dec
jae
jne
mov
and
add
xchg
xchg
inc
jp
leave
stos
gs
cmpsb
push
int3
jne
aad
testb
pop
adc
cmc
sbb
pop
in
push
sbb
outsl
mov
cwtl
sahf
and
insl
inc
scas
lret
add
test
add
xchg
push
xor
xor
fs
xchg
mov
pop
lods
sbb
ficoms
fildl
scas
sbb
rol
pop
js
icebp
icebp
mov
cmpsb
adc
xor
mov
imul
pushf
lret
add
out
jge
adc
test
scas
mov
ret
mov
andl
add
adc
hlt
imul
or
call
test
int
cs
pop
lods
loopne
lock
pop
js
loope
filds
push
je
test
movsl
xor
jg
ja
popa
inc
aaa
mov
fcoml
clc
or
mov
movsl
lock
stos
es
jae
jg
add
sub
repz
push
xor
xchg
scas
out
jl
push
and
xorb
ret
inc
out
pop
nop
jnp
jae
adc
pop
cli
pushf
mov
push
ljmp
mov
test
jnp
outsb
push
ja
adc
jp
cmp
lret
addr16
add
inc
mov
sahf
lods
mov
imul
adc
hlt
mov
cmc
pop
xor
bnd
lret
adcl
fbld
jne
aaa
and
out
mov
jp
lret
push
stos
xchg
mov
inc
adc
fadds
xor
or
scas
mov
add
jg
negb
jnp
sub
sub
sub
cmp
fwait
cli
lods
push
sarb
icebp
jne
test
xchg
sbb
pop
out
push
jne
aas
cmp
dec
jmp
mov
fisubrs
cmp
xchg
daa
ds
jg
xor
data16
das
popf
lods
add
out
arpl
sti
or
je
sub
lods
sub
fisubrs
mov
jbe
in
js
mov
push
les
push
push
les
ret
xor
inc
stc
orb
mov
int
xor
insl
add
jb
lds
mov
dec
pop
mov
or
test
add
fimull
pop
cmp
out
movsb
pop
cmpsb
std
adc
xchg
jo
js
sti
and
data16
mov
bnd
rolb
adc
mov
fistpl
hlt
rol
inc
mov
push
or
cmp
xor
sub
lret
aaa
push
sbb
pop
push
push
pop
adc
inc
push
mov
adc
and
mov
in
test
fsubrs
mov
test
cltd
int3
rolb
mov
mov
push
rcrb
fstpt
and
mov
test
xchg
je
mov
dec
das
sbb
outsl
sahf
in
lea
mov
sub
mov
mov
cmpsb
cltd
mov
fs
mov
ret
and
test
pop
sub
xchg
xor
iret
in
add
aaa
stos
mov
jae
sbb
xchg
sbb
jne
aaa
call
stos
pop
xabort
scas
mov
jno
jge
xor
out
sbb
adc
cmp
push
nop
insb
add
pop
ds
enter
testb
imull
mov
pop
test
in
dec
decl
out
lds
test
and
and
std
xchg
xor
mov
jns
cmpsl
out
std
pop
je
mov
xchg
dec
or
push
xchg
add
cmp
int3
movsb
imul
je
mov
fpatan
adc
popa
and
mov
loopne
gs
or
dec
sub
cwtl
in
xchg
sbb
inc
fdivrs
push
pop
dec
fcomps
repnz
jbe
mov
pop
data16
ljmp
inc
in
dec
and
ret
pusha
mov
test
mov
jp
mov
sti
sub
mov
cmp
or
popa
jnp
pop
outsb
xchg
repnz
ret
push
jmp
sub
iret
fnstenv
xor
jae
mov
test
out
rcl
outsb
add
cs
sub
sub
xor
jecxz
ret
cmp
jmp
dec
pop
jg
mov
xchg
sbb
sbb
sar
scas
lock
and
adc
push
pop
clc
ljmp
sbb
hlt
into
outsl
mov
mov
ret
jp
dec
in
mov
add
testb
sub
ret
mov
scas
xchg
ljmp
insl
cmpsl
mov
or
clc
mov
or
nop
push
sub
orb
leave
xor
push
xlat
pop
push
outsl
outsb
sahf
ss
lcall
popf
mov
and
testw
loope
sub
out
mov
mov
inc
scas
push
cmc
cmp
mov
cli
fcoms
lret
pop
cmp
or
jo
pop
xchg
xchg
je
les
or
pop
lock
stc
and
sahf
test
dec
inc
adc
jae
sti
cltd
adc
aam
xor
or
xchg
in
adc
and
loopne
mov
and
pusha
aad
insl
pop
stos
repnz
jne
insl
idivb
cmp
and
dec
mov
or
jge
mov
inc
jecxz
pop
sbb
add
adc
ja
xchg
and
gs
xchg
sub
cld
loope
repz
icebp
iret
pop
and
mov
mov
movsl
daa
jecxz
add
xor
mov
cld
inc
call
jge
fwait
sti
cvtpi2ps
dec
and
mov
aad
lods
mov
popa
loopne
sbb
push
mov
mov
or
mov
cmc
pushf
scas
rcll
leave
pusha
mov
pop
mov
cmpsl
jb
dec
adc
subb
jb
pop
shr
mov
xor
jbe
push
fisubl
rolb
fstl
xor
jns
leave
push
nop
push
fcomps
add
jmp
cli
sbb
lcall
imul
paddd
outsl
mov
push
mov
inc
pop
loopne
and
lods
cmp
xor
mov
mov
fcmove
out
adc
push
mov
shll
sbb
lods
mov
aaa
push
out
sbb
adc
test
test
aaa
mov
jae
fisubl
loope
repnz
insl
movsb
or
clc
mov
hlt
fwait
jne
das
cmp
in
aaa
push
jge
push
mov
xchg
popa
push
cltd
add
mulb
shl
mov
sbb
jo
cli
push
mov
divb
sbb
sub
jne
shlb
loop
mov
divb
adc
sub
cltd
pop
xchg
push
push
jb
xor
cmp
mov
fs
fsqrt
mov
cmp
loopne
out
push
jl
shlb
or
notb
mov
mov
jb
or
add
sub
jl
setno
sub
mov
aaa
loop
jns
jmp
scas
inc
ret
cmp
cltd
or
jmp
aas
inc
mov
cmp
cs
add
minps
sub
mov
loopne
pop
flds
test
popf
arpl
cmc
mov
push
add
pop
test
mov
pop
test
dec
add
push
xchg
test
push
jmp
xchg
mov
pushl
cmpsl
pop
mov
test
int3
ss
lret
push
xor
mov
das
sar
mov
adc
es
lods
aaa
sarl
push
sub
sbb
cs
test
repz
ljmp
ds
pop
insb
test
mov
scas
push
js
xor
movsb
pop
jge
ljmp
fs
jmp
xchg
mov
pop
inc
cmp
mov
daa
adc
mov
jne
jne
or
mov
lcall
loope
loop
cmp
dec
xor
lret
jmp
int
lret
ss
pop
repnz
imull
lds
mov
xchg
repz
push
adc
cwtl
das
test
mov
js
test
leave
sub
ljmp
xorb
or
jne
inc
lock
test
adc
cs
mov
into
rolb
mov
or
cmpsl
mov
pusha
xor
or
fnstcw
sub
push
cli
insl
int
sbb
mov
das
jnp
imul
aad
jl
push
dec
xlat
rorl
sub
fs
loope
lods
outsl
xchg
dec
dec
jae
xor
in
loop
mov
mov
and
push
repz
adcb
sbb
cwtl
movsb
and
outsl
and
popa
and
mov
movsl
jecxz
rol
xchg
jb
xor
xchg
jle
loop
outsl
lahf
and
enter
jnp
test
out
pop
and
lods
bound
mov
mov
xor
jne
ss
jns
dec
call
outsl
cli
fstps
and
mov
pop
or
mov
push
dec
inc
pop
scas
call
sub
xor
add
push
pop
pop
cli
test
cmp
mov
add
ds
daa
or
mov
mov
mov
jnp
insl
lods
mov
ret
mov
out
pop
sub
inc
ss
movb
push
mov
jno
xor
test
adcb
sub
xchg
push
and
xchg
push
mov
push
xchg
sbb
divb
xchg
sub
cmpsb
adc
or
cmp
jb
lods
jle
and
lods
pop
inc
or
test
dec
xchg
nop
dec
sub
fwait
lret
pushf
mov
fisubrs
sub
lods
cmp
call
jns
int3
ljmp
add
cmp
rcrb
fwait
cs
mov
cltd
xor
push
enter
and
jbe
fwait
pop
cmpsl
popf
mov
jg
dec
pop
jmp
mov
sbb
xchg
adc
ss
ss
sub
lahf
sbb
mov
fnstsw
loope
or
ja
sbb
mov
xlat
loop
or
push
sub
ljmp
push
lock
lret
scas
and
negl
jmp
adc
pop
xchg
scas
inc
ret
pop
test
sub
movsl
and
dec
outsb
aad
pop
and
xor
sub
mov
dec
push
fdivl
lret
push
cmc
aad
fsts
xlat
aad
push
inc
lock
popa
add
dec
mov
xchg
cmp
stos
cmp
popf
dec
pop
add
mov
daa
shll
sub
aam
dec
popa
jg
ja
frstor
push
lcall
pop
sub
das
and
iret
sbb
cltd
lock
add
mov
test
fists
lea
popa
subb
xchg
mov
adc
inc
jecxz
inc
jg
xchg
insb
fdivrl
dec
adc
adc
cmp
jb
in
insl
xchg
xchg
ja
xchg
dec
rclb
in
sbb
fucomp
sbb
mov
inc
test
rolb
mov
sub
nop
mov
jnp
xor
jl
jl
xchg
scas
hlt
js
out
xchg
aad
xchg
push
rorb
push
mov
sub
jmp
data16
ljmp
addr16
fdivrs
jg
out
cmp
popa
clc
and
jg
sti
stos
xor
mov
and
sbb
dec
inc
outsl
scas
mov
aam
mov
movzwl
xchg
sub
insb
loopne
fs
adc
adcb
jmp
into
cmp
out
dec
in
rcrb
sbb
dec
repz
push
mov
imul
fdivrp
mov
insb
clc
and
es
sub
and
out
mov
xchg
daa
std
nop
pop
out
loopne
ljmp
fnstcw
jno
addr16
pusha
or
cld
push
and
imul
mov
add
ret
push
xor
xor
jnp
ja
cmc
fimull
sub
enter
lret
cmp
or
adc
js
rorl
adc
movsb
dec
sti
pop
fsts
lods
mov
ret
bound
push
repnz
pop
xchg
hlt
mov
movsb
pop
lret
cmp
and
push
loop
ljmp
test
and
idivb
popf
pop
roll
sahf
add
js
jnp
push
fdivl
mov
jno
fcompl
or
int3
testl
into
or
inc
test
ds
cmpsl
ds
xchg
lds
aad
sti
neg
subl
mov
outsb
sub
fwait
gs
xor
mov
lea
lods
cmp
test
in
add
xchg
popa
dec
fcompl
dec
xor
lock
mov
push
mov
loop
add
test
xchg
mov
mov
jmp
push
xchg
jecxz
mov
cmp
loop
pop
fwait
cmpsb
mov
mov
jg
push
mov
fstps
cld
pop
fisubl
ret
jp
call
inc
pop
icebp
or
push
push
cs
mov
push
out
das
icebp
pop
test
pop
je
jae
aas
loopw
cwtl
mov
xchg
sub
cmp
mov
lahf
mov
xchg
mov
xchg
sbb
dec
sbb
pop
push
cltd
xor
cmp
pop
xchg
mov
push
jge
lea
sahf
enter
pop
imul
cli
jg,pn
xorb
movsb
push
cmpsb
cmp
fdivs
ret
mov
bound
addl
and
shlb
in
stos
xchg
das
mov
cmp
cmpsb
arpl
and
jp
das
test
xchg
push
xchg
stos
les
loop
sti
xchg
cmp
dec
dec
or
cltd
mov
outsb
mov
and
lods
mov
clc
or
inc
ficompl
in
int
mov
test
mov
stos
in
mov
jecxz
in
sub
pop
lcall
sub
sbb
cld
imul
or
pop
es
mov
rorl
pop
and
je
push
es
xchg
xchg
pop
mov
ret
outsb
sbb
lret
mov
jmp
cmp
scas
gs
pop
rcrb
lea
pop
lahf
adc
dec
jns
andl
ret
push
out
shr
jmp
and
mov
mov
pop
sub
in
test
pop
or
adc
mov
add
inc
push
pop
sbb
les
je
cmpsb
push
push
imul
mov
pop
or
mov
jns
test
insl
jo
or
lret
mov
inc
inc
sarl
add
sub
sub
rorl
dec
pop
fucomip
loopne
int3
sbbl
cld
in
mov
jno
cmc
mov
out
mov
mov
icebp
mov
xchg
or
push
mov
adc
ret
stc
test
mov
aam
nop
xchg
test
adc
test
lret
and
icebp
sahf
lea
addr16
ja
ret
inc
fcoms
int
imul
arpl
imul
sahf
test
mov
cmpsl
loopne
mov
push
add
mov
inc
outsl
or
mov
sub
bound
ja
sub
adc
repnz
mov
push
mov
xchg
ret
leave
sbbl
push
xchg
xor
gs
ds
test
movsl
mov
sbb
cmp
mov
out
jae
pop
jl
dec
push
scas
sub
push
sbb
adc
gs
movsl
xchg
xor
add
pusha
xchg
add
xchg
daa
rclb
push
hlt
in
daa
xor
cmp
in
and
cmp
sbbl
rcll
inc
pop
sub
adc
add
hlt
push
jl
push
sbb
outsl
xchg
add
sbb
and
movsl
inc
roll
rcrb
dec
mov
mov
pop
jecxz
cmp
mov
ja
out
cmc
orb
imul
or
dec
fstl
stos
fsubrp
or
int3
mov
lock
dec
mulb
mov
cmp
imul
lock
push
mov
lcall
inc
xor
jl
push
loopne
push
xchg
jl
sub
mov
popf
std
nop
or
scas
inc
ja
inc
cli
out
test
jbe
ja
stc
js
shll
leave
add
xorb
xor
and
cmp
mov
iret
dec
jecxz
jge
test
dec
pop
or
pop
xor
jmp
test
xchg
test
xchg
orl
xor
mov
ficompl
fdivl
push
push
mov
pop
lcall
dec
scas
pop
push
jb
xor
lods
pop
ja
dec
lcall
es
add
xorb
push
popf
movsb
cli
data16
fidivs
push
ljmp
jle
or
push
mov
inc
inc
mov
jnp
push
mov
xchg
pop
mov
hlt
aaa
lret
jo
das
push
push
lock
sbb
mov
ret
dec
int
loop
gs
sahf
push
mov
cli
mov
jnp
xor
outsl
or
bound
in
inc
cmp
shl
and
into
lods
iret
in
les
in
addb
xlat
movl
mov
hlt
int3
xchg
dec
loop
mov
add
adc
std
mov
insb
add
out
and
and
or
shrl
inc
popf
xor
iret
int
popa
call
iret
cmpsl
jp
mov
or
sahf
sete
sti
bound
fnstenv
loopne
sti
into
and
sbb
dec
hlt
dec
dec
mov
and
lods
ljmp
mov
fldcw
mov
shrl
movsl
cmp
int
push
sti
jns
stc
test
into
ret
stc
ret
pop
mov
lret
xor
addb
inc
xlat
inc
out
jae
lret
cmp
cmp
mov
js
test
shld
outsb
stc
aas
call
sbb
jl
mov
xchg
add
loopne
and
aas
adc
push
loop
mov
jo
loop
cmp
ret
into
dec
pusha
out
push
lahf
xchg
add
daa
hlt
mov
push
aam
leave
adc
cmp
fwait
lcall
dec
dec
ss
outsb
jg
sub
call
push
inc
pop
inc
stos
aam
leave
data16
int3
fnsave
mov
xchg
icebp
jae
and
pop
sub
or
lret
cmp
repnz
push
mov
insb
je
stos
js
rcr
fnstenv
in
xchg
dec
push
inc
pop
mov
mov
sbb
mov
xor
movsb
ret
inc
mov
xor
add
test
lods
es
fcoml
mov
and
test
mov
mov
sub
ja
sbb
aaa
ja
data16
mov
and
push
mov
insb
gs
push
xchg
push
xchg
mov
xor
sti
inc
or
inc
and
mov
xlat
lods
rcll
sarb
lret
and
pop
pop
dec
sarb
test
pushf
add
pop
in
lods
mov
loop
inc
cmp
add
adc
xchg
ds
push
fstl
neg
lret
das
data16
xchg
lods
mov
inc
and
cli
inc
pop
cwtl
sbb
mov
sub
sbb
cmp
cld
push
sub
pop
xor
cmp
and
add
sub
push
fs
cld
mov
fisttpll
mov
or
bound
mov
mov
adc
pop
sub
mov
dec
mov
ficoms
jno
mov
aad
lea
das
lock
sbb
cmpsl
testl
xor
fsubs
add
mov
aad
cmp
and
pop
pop
push
xchg
stc
add
pop
stos
test
xor
add
jle
jp
adc
sbb
and
bound
mov
pop
and
scas
daa
movsb
shrb
loope
xchg
out
jl
jle
dec
push
ljmp
fiaddl
mov
call
cmp
ss
aaa
push
adc
and
iret
enter
imul
in
adc
test
adc
lret
jle
sbb
leave
xor
sub
pop
jne
mov
pop
fpatan
xor
pusha
test
mov
mov
fistl
mov
insl
sub
scas
mov
loopne
pop
mov
add
sbb
dec
push
cmp
inc
jl
les
movsl
fisubs
mov
shrb
outsb
clc
andl
jnp
xor
cmpsl
sahf
clc
mov
pop
adc
cs
daa
lea
shrb
scas
inc
pop
leave
inc
inc
je
mov
pop
xchg
mov
mov
jl
icebp
call
fistpl
ss
lock
ljmp
cwtl
mov
gs
jne
stos
fisubrs
addr16
hlt
aaa
inc
fsubrl
xchg
fistps
add
mov
xor
enter
dec
out
pop
mov
or
or
stc
mov
xor
push
dec
sbb
das
jle
data16
mov
adc
pop
fistpl
data16
es
dec
pop
lret
dec
mov
movsl
lds
cs
pushf
nop
pop
jmp
adc
popf
mov
mov
popf
pop
or
pop
pop
pop
das
or
loope
popf
push
push
gs
lret
data16
push
aad
inc
push
in
and
js
push
jb
jno
lret
xchg
jae
mov
ljmp
popf
pop
rolb
jmp
or
sbb
mov
adc
and
test
pop
shll
enter
and
je
bound
or
cmp
int
push
mov
mov
jmp
in
push
and
fistl
xchg
xor
mov
pop
xor
ds
adc
fists
ret
dec
adc
mov
push
pop
xlat
test
inc
sti
jge
xchg
sahf
jg
mov
sahf
mov
pop
inc
imul
xor
push
lock
adc
out
push
sti
lock
insl
push
mov
jns
adc
ds
xor
mov
sub
call
jp
es
mov
jno
out
sub
xchg
push
cmc
mov
test
jo
ret
pop
ljmp
inc
sbb
outsb
pop
mov
dec
xchg
outsb
xor
sub
fwait
jns
pop
es
xchg
xchg
jmp
xor
mov
lcall
or
push
int3
push
cmp
mov
or
mov
jb
add
cld
sbb
mov
dec
gs
loop
pusha
xor
cmpb
repnz
scas
stos
push
in
fsubl
ss
adc
int3
fidivs
cltd
xor
and
dec
push
repnz
mov
imul
out
cli
orl
jne
add
pop
fwait
xchg
sub
pop
imul
lods
push
push
add
cmpsb
and
shrl
stc
bound
scas
push
jae
fcmovbe
imul
repnz
out
xchg
or
xchg
mov
je
addr16
or
les
jns
sub
notl
dec
mov
cltd
scas
fiadds
cld
mulb
rorb
adc
and
neg
jbe
leave
dec
call
aas
pop
jmp
pop
xchg
orb
cmc
xchg
test
push
lcall
idiv
xchg
sub
mov
movsb
mov
pop
pop
jb
scas
inc
cmp
cmpsb
sbb
movb
mov
cmp
fsubl
mov
mov
jecxz
add
fists
aas
data16
jno
cmc
mov
mov
push
jbe
jp
insl
adc
mov
rcll
xchg
es
jl
andl
in
adc
mov
xchg
jmp
sbb
pop
mov
pop
mov
or
cmp
lcall
scas
les
mov
mov
fidivrl
sub
mov
mov
cmp
icebp
fidivl
or
jl
lods
stc
xchg
ljmp
insb
jg
mov
outsl
sbb
outsb
rolb
push
mov
leave
loope
jle
xchg
cmp
sub
adc
cli
addl
mov
xchg
sub
in
or
mov
cmpsb
addb
aad
push
fsubs
scas
push
sbb
pop
movsb
jge
mov
jmp
and
mov
cmp
adc
or
es
xchg
int3
lret
xchg
push
shr
out
xchg
push
cmp
jle
xor
or
mov
ficomps
or
int3
int3
fxtract
fsubr
loopne
rcr
sub
std
in
mov
xlat
xchg
sbb
aam
cltd
mov
push
stos
jo
jae
cmpsb
les
add
cli
push
gs
xchg
filds
and
je
cmpsb
dec
lcall
mov
aad
xchg
or
into
dec
js
add
sbb
outsb
add
bound
insb
add
mov
mov
pushf
inc
xchg
mov
mov
jns
fdivrp
dec
pop
xchg
cmp
and
jmp
inc
push
movsl
ja
cld
repz
sub
lret
or
adc
sarb
push
cltd
addr16
inc
pop
cmp
insl
dec
lods
mov
in
jg
test
xchg
hlt
push
mov
push
cmpsl
fs
test
fimull
out
addl
xor
sbb
mov
inc
ja
stos
push
fadd
dec
and
mov
add
mov
pusha
ljmp
popf
push
and
pop
mov
insb
ss
xor
push
call
pop
cs
popa
xlat
mull
fistl
mov
test
shl
popa
scas
cmpsb
dec
cmpsl
lock
jo
xchg
inc
pop
dec
jns
pop
push
add
mov
roll
xchg
add
mov
fistpl
test
jb
loopne
daa
xor
popa
xchg
shrl
and
sarb
inc
push
scas
aas
xchg
sub
pop
sub
repnz
out
add
jb
outsl
push
add
jecxz
mov
test
mov
mov
add
push
jmp
negl
push
aas
jb
xchg
negb
jle
push
lods
dec
arpl
aas
pusha
test
fsubl
or
fs
mov
inc
and
push
mov
addr16
xchg
sbb
test
imul
sbb
dec
test
jge
sbb
rolb
jmp
dec
add
or
xor
imul
fnsave
sahf
fisttps
sti
xchg
loop
sub
lcall
adc
pop
mov
jno
xchg
in
mov
inc
or
iret
fisubl
add
das
inc
push
mov
xor
jle
popa
push
imul
inc
cmp
es
cwtl
das
xchg
add
ror
sub
sahf
loope
mov
cmp
mov
mov
push
int3
adc
std
inc
fisubs
out
jp
ja
dec
or
dec
pop
lods
add
adc
cmp
mov
inc
add
and
mov
pop
mov
ficompl
outsb
inc
loope
pusha
pop
jecxz
outsl
sahf
shr
outsb
mov
push
jae
mov
aad
add
or
push
lds
out
or
fstpt
push
inc
push
divl
and
dec
jge
xchg
scas
test
and
mov
int
mov
sahf
lret
dec
mov
xchg
mov
jo
mov
in
sub
xchg
inc
sbb
mov
mov
testb
ret
outsb
sub
push
jecxz
iret
xor
and
add
jle
fwait
mov
adc
sub
jns
mov
jp
fstps
xchg
sub
scas
out
mov
push
insl
ljmp
mov
and
cmp
or
mov
out
mov
and
in
lret
rol
gs
fmuls
jbe
xor
sar
repz
pop
test
push
fidivrl
movsl
push
jge
add
je
ret
gs
adc
inc
push
std
test
inc
test
pop
xchg
mov
push
add
pop
fstpl
xor
sub
js
inc
inc
mov
data16
mov
and
lea
shll
insb
mov
push
sahf
or
and
mov
pop
add
cs
jmp
stos
jecxz
sti
sbb
ss
cmp
prefetcht0
pushf
ss
xor
sarb
pop
stos
inc
inc
mov
push
xor
pusha
or
adc
mov
scas
jae
fsubrs
xor
pop
dec
adc
cmp
and
pop
negl
fnstcw
lcall
and
or
js
mov
mov
mov
int3
inc
push
gs
stos
fidivl
data16
das
dec
pop
adc
lds
pop
stos
pop
les
sub
cld
mov
filds
cltd
sbb
push
and
popf
cwtl
or
mov
dec
push
xsha256
cmpsb
xchg
jg
lea
loope
cs
les
xchg
sbb
rorb
cmp
push
inc
repnz
push
stos
cs
sub
rcrl
sbb
cwtl
and
rorb
sbb
cmp
fnstsw
scas
mov
mov
lock
xchg
nop
lds
inc
lock
loope
xor
cli
pop
xor
sbb
push
and
jo
inc
sub
dec
data16
pop
out
mov
push
mov
jbe
or
bound
adc
cltd
add
dec
ds
nop
sbb
scas
das
and
jg
or
imul
push
push
inc
popf
clc
xor
in
shll
dec
in
rcrb
mov
out
inc
pop
lea
in
mov
popf
stc
sub
adc
out
bound
mov
js
mov
or
lret
mov
ret
rorl
add
das
xchg
daa
xchg
cs
into
dec
add
divb
test
sbb
pop
fidivrs
testb
and
es
cli
pop
gs
je
jge
jne
mov
arpl
mov
dec
inc
sub
adc
adc
xchg
mov
popa
xor
rclb
aas
enter
lea
rcr
inc
and
xor
mov
pushf
stos
jp
xchg
jne
call
adcb
add
mov
fsubr
ss
or
mov
dec
pop
lfs
out
jge
fs
mov
push
push
lcall
pop
sarl
mov
jno
in
add
sub
xchg
sub
in
jmp
aaa
iret
adc
rclb
mov
fsubs
sbb
stos
push
push
pop
repz
ja
push
ljmp
jnp
mov
sbb
sub
sarl
ret
sbb
outsb
clc
xchg
sbb
adc
and
dec
in
loop
js
sbb
stc
nop
sbb
pop
loopne
jle
mov
popa
inc
fistl
mov
jns
cli
adc
sub
sub
cmpsb
sbb
scas
movl
sbb
xor
or
mov
pop
sub
dec
scas
pop
add
pop
xchg
jecxz
fnstsw
jp
out
cmp
test
int3
cli
test
sub
inc
mov
in
not
leave
fnstcw
divl
daa
lcall
jnp
fnstsw
je
imul
adc
mov
xchg
movsb
or
les
pop
leave
sbb
mov
push
adc
sbbl
xchg
xor
or
cs
push
outsb
ror
shll
jnp
mov
cltd
rcrb
and
out
scas
mov
loope
mov
lods
add
ret
ja
movsb
mov
aam
dec
imul
push
sub
fidivl
out
sub
outsl
xchg
lods
faddp
nop
adc
adcl
pop
cs
subl
dec
out
in
loopne
push
mov
stos
inc
pop
call
rorb
sub
mov
pusha
inc
push
inc
mov
fmulp
inc
scas
pop
mov
fists
inc
dec
dec
ret
imul
cmp
adc
sub
mov
mov
jg
add
jl
arpl
mov
ja
int3
xor
scas
mov
in
pop
xchg
sbb
popa
push
stos
sti
scas
pop
sub
repz
and
lea
sub
mov
jg
mov
lcall
sub
sbb
rcrb
es
adc
test
aad
sbb
cmp
outsb
xor
lahf
mov
mov
cld
xchg
sub
enter
mov
ret
enter
testl
outsl
aad
mov
inc
repz
test
mov
fstl
stos
jp
cmpsl
mov
lret
add
cmp
mov
movsb
jnp
in
insl
jge
incb
fstps
pop
mov
jns
or
dec
ds
add
dec
or
sarb
push
in
popf
stc
outsl
andb
sub
pop
ret
cmp
sti
out
jb
fwait
shlb
or
jecxz
xor
addr16
or
repnz
dec
push
cmp
cld
add
adc
or
mov
jle
mov
sub
test
loop
ljmp
enter
xchg
xor
ss
mov
and
out
push
adc
daa
mov
sbb
rcll
pop
mov
add
stc
push
test
out
inc
scas
mov
sbb
in
test
lea
lahf
xchg
ds
xchg
repz
icebp
xchg
lret
and
data16
rcrb
fsubl
mov
cs
int
push
nop
cs
adc
adc
inc
jo
mov
call
leave
pop
ret
fcmovnu
bound
cmp
bound
xchg
std
enter
test
fmul
push
push
movsl
mov
jge
pushw
mov
mov
or
adcl
xchg
cmpsb
rcll
jg
adc
xor
lds
push
aad
lahf
pop
rcrl
and
add
inc
or
adc
ja
and
mov
xor
pop
std
test
adc
jnp
jmp
out
nop
mov
mov
ret
inc
gs
dec
loope
fcomps
pop
push
outsb
fcoms
loop
jne
shlb
mov
xchg
pop
repz
test
adc
push
mov
sahf
mov
shlb
inc
jo
mov
xchg
cmp
sbb
in
pop
sbb
shlb
lret
add
call
fidivrl
aad
push
test
pop
mov
and
lods
inc
enter
repz
aam
cmpsl
mov
popf
pop
fsubrs
mov
jno
test
lcall
movsl
cmp
cmp
aas
sbbb
dec
push
mov
dec
pop
stc
and
mov
pop
loopew
add
xchg
test
xor
push
ss
cmpsl
incb
scas
push
mov
loop
cmp
sbb
stc
and
inc
les
inc
out
push
mov
lea
rcl
ret
xor
fwait
dec
dec
dec
aam
cmpsb
push
jno
mov
jmp
xchg
mov
fnstenv
ljmp
dec
and
xchg
dec
jmp
repnz
mov
push
xor
pushf
sti
mov
ljmp
adc
bound
repz
sbb
pop
lock
ds
mov
pop
xlat
jns
jne
push
cmp
andb
leave
hlt
adc
and
sahf
sahf
out
lds
dec
pop
dec
faddp
pop
sarb
or
xchg
xchg
in
push
shrb
jg
stos
push
push
fdivrl
push
popf
outsl
mov
adc
or
pop
lcall
repz
out
leave
in
mov
mov
add
xchg
inc
adc
bound
cmp
cltd
cmp
jns
enter
xor
int3
mov
roll
xchg
rcr
push
clc
dec
in
mov
jl
xchg
gs
inc
pop
fwait
sar
lds
movsb
push
adc
xor
xchg
fsubrs
push
mov
cs
lea
mov
jbe
cld
lcall
arpl
mov
popa
stc
scas
jmp
lret
adc
mov
iret
data16
lock
and
int
lahf
jmp
dec
xor
mov
fsub
cli
cmp
mov
jno
jae
scas
push
cmp
jo
lahf
sbb
cli
dec
push
inc
add
cmp
das
js
push
in
push
test
lea
push
add
mov
pushf
sbbl
dec
jnp
ljmp
test
movsb
sub
xchg
cld
pop
outsb
fdivl
es
cmp
pusha
jnp
loope
dec
aam
add
xlat
jge
cs
or
dec
loop
mov
insl
loopne
das
adc
mov
jnp
je
or
xchg
arpl
stos
sub
lods
push
ret
inc
fbstp
movsl
dec
movsl
fisttpl
lcall
and
sbb
cmp
and
movsb
push
jle
mov
adc
push
and
imul
lock
jecxz
in
sub
pop
ja
jbe
mov
cmp
pop
dec
mov
or
xor
xlat
or
into
pop
call
push
loop
mov
daa
sti
and
mov
movsl
pop
test
lock
push
xchg
test
adc
sub
cmovno
and
ljmp
jmp
aam
test
sbb
and
and
or
jecxz
and
cmp
dec
mov
lods
imul
std
push
ljmp
es
aas
enter
mov
sub
ret
outsl
jo
les
sub
stos
inc
lock
mov
lds
and
adcl
and
out
addr16
mov
iret
imulb
adc
nop
mov
or
cmpsb
fsubrs
sahf
lods
outsl
xchg
test
push
sbb
iret
hlt
dec
jbe
pop
fimuls
in
fmull
or
add
cmpsl
ds
stc
fadd
sbb
dec
outsb
int
dec
mov
pop
js
sahf
jp
fldenv
pop
fimull
push
sub
mov
into
push
in
push
movl
sbb
es
and
pop
dec
jge
mov
mov
orb
repz
mov
fs
push
jae
xor
cmp
or
cmpsb
cli
lea
lds
rol
xchg
xchg
addr16
loope
int
hlt
cli
xchg
sbb
inc
sbb
lds
ds
mov
movsb
movsb
xchg
adc
sbb
adc
sbb
hlt
dec
xor
shrb
test
addb
cmp
push
pop
mov
mov
ds
andb
inc
mov
jg
jno
jmp
jo
add
and
mov
lods
mov
jne
mov
push
lds
pop
dec
push
bound
sub
jg
test
call
push
push
insl
push
aad
fmull
and
aas
mov
je
stos
sub
adc
fisttpll
dec
aas
jnp
sbb
xor
sub
inc
inc
xchg
fwait
push
or
inc
inc
xor
aad
pushf
xchg
xor
in
iret
xor
sub
aam
rolb
hlt
mov
push
or
push
xchg
push
dec
subl
push
sbb
add
sarb
lret
mov
ja
add
hlt
xchg
and
push
bound
dec
add
mov
xor
xchg
mov
add
stos
in
inc
out
mov
inc
testb
outsl
inc
mov
stos
push
mov
inc
shrb
pop
or
adcb
pop
pop
outsl
enter
mov
jp
cmp
loope
sbb
cmp
dec
subb
add
dec
rcrl
push
outsl
negb
aad
daa
ljmp
push
repz
out
jno
mov
incl
mov
xchg
mov
repnz
movsb
call
dec
addl
lock
test
dec
adc
in
outsb
cwtl
or
mov
fistps
stos
jno
adc
scas
fcomi
popf
gs
std
sahf
or
mov
ljmp
fsubs
adc
push
popa
pushw
adc
jo
dec
xor
and
lods
inc
ret
xor
mov
mov
and
orl
xchg
push
lret
rorb
insl
loop
jae
imul
idivb
adc
adc
movl
push
insl
fsubr
push
jecxz
fistl
fdivrl
add
bnd
scas
mov
dec
dec
sub
xor
scas
push
mov
adc
jecxz
shl
mov
and
mov
dec
inc
inc
cmp
fsubl
push
xor
std
push
jno
je
add
ficomps
repz
outsl
push
push
jmp
sub
imul
jecxz,pn
sbb
lds
jg
mov
pop
mov
repnz
lret
xchg
outsl
psrad
movsl
and
pusha
loope
stc
or
mov
cmp
not
jae
adc
pop
jne
mov
sub
sbbl
aaa
push
rol
mov
pop
mov
or
jp,pn
xchg
sbb
fnstsw
inc
adc
les
mov
bound
push
flds
cmc
inc
mov
push
into
xor
aaa
stos
daa
sar
xchg
mov
sub
subb
hlt
imul
sti
push
dec
rcr
or
orl
jmp
in
cltd
cld
dec
in
jge
mov
iret
cmp
insl
add
scas
mov
data16
adc
aaa
cmpsl
lds
mov
daa
xchg
icebp
adc
and
mov
mul
add
and
jbe
arpl
adc
jp
pop
push
sub
scas
ja
js
addr16
aas
ret
mov
and
in
mov
ljmp
call
inc
jge
cmpl
or
mov
mov
mov
fdivrs
hlt
xchg
push
mov
sahf
clc
jg
lods
add
push
dec
mov
inc
shl
int3
mov
ficoml
mov
aas
push
xchg
sub
mov
lea
pop
push
testb
enter
xchg
xor
pusha
mov
jae
arpl
sbb
or
es
add
mov
cmp
add
xor
mov
nop
popa
xorb
pop
outsl
jmp
sbb
jae
sub
aam
fcomps
pusha
and
adc
push
lret
pop
push
cwtl
fmull
mov
test
inc
pop
push
xchg
movsb
adcl
pop
mov
cmp
pop
gs
cwtl
aad
rol
ss
mov
movsb
adc
inc
push
mov
pop
jnp
dec
pusha
lods
inc
add
das
or
mov
icebp
xchg
cmpsb
sub
push
fsubl
fildll
cld
pushf
lcall
idivb
es
pop
jge,pt
add
sahf
jne
rcr
insb
iret
mov
push
mov
imul
sub
mov
pusha
adc
mov
pop
xor
addr16
sbb
mov
int
out
or
adc
jl
or
or
cmp
fdivrs
lcall
fdivrp
sahf
pop
cmc
sbb
loop
mov
notl
sub
mov
ja
andb
faddl
stos
ss
stos
rcrl
mov
mov
fisubrs
dec
adc
cltd
pop
jo
pop
out
js
pop
sub
inc
stos
js
dec
fnsave
test
jbe
mov
and
pop
rol
shll
pop
pcmpeqb
lods
mov
sahf
sbb
or
mov
and
scas
mov
xor
ss
dec
mov
adc
daa
xchg
add
xchg
jne,pt
jmp
loopne
mov
jo
fcmovnbe
lods
js
fstpt
adc
pop
pop
lods
pop
lods
add
cmpsb
into
lcall
icebp
iret
or
rcrl
mov
pop
mov
mov
or
lahf
jg
es
scas
fwait
je
push
lods
sbb
pop
add
test
xchg
sbb
in
insl
xor
jmp
mov
loope
dec
add
out
jno
sbb
scas
fnsave
sub
add
faddl
mov
iret
mov
bnd
pop
xchg
adc
push
xchg
pop
test
pop
fstl
pop
xchg
xor
xchg
jp
mov
div
push
jle
push
cmp
pop
cmc
imul
sbb
mov
orb
loop
push
les
sbb
repnz
xchg
mov
mov
xchg
adc
repnz
or
adc
jp
out
jmp
xchg
je
rorl
movsl
pop
sahf
repz
push
imul
in
inc
test
push
dec
aaa
mov
or
xchg
int3
cmp
arpl
mov
inc
dec
jecxz
out
jle
xlat
in
dec
outsb
and
mov
pop
mov
sbb
ret
mov
out
aam
and
notl
inc
mov
fisubrs
xor
sahf
stc
dec
mov
add
adcl
andl
cltd
dec
xchg
pop
popa
cmp
arpl
inc
pop
and
push
or
scas
sarb
inc
dec
mov
pushf
push
shlb
ljmp
das
or
and
negl
mov
and
gs
push
lret
movsl
and
or
jl
inc
jl
mov
push
loope
adc
test
rcrb
mov
sub
mov
enter
dec
inc
lea
jmp
bound
push
sbb
mov
inc
pop
shr
xchg
dec
xor
popf
and
adc
outsb
add
adc
push
call
push
xchg
in
aad
jle
fsubrs
outsl
push
and
push
test
dec
bnd
mov
mov
push
incb
movsb
aas
in
lods
dec
sub
cmp
jg
dec
inc
icebp
mov
pop
pushf
mov
fdivrl
mov
push
sub
or
addb
sub
test
notl
shrb
popa
scas
shll
mov
roll
out
loop
subl
pop
jg
clc
movsb
adc
jmp
and
pop
in
sub
aas
jne
jge
ret
xchg
mov
ret
pop
inc
pop
push
nop
bound
fcmovne
out
sti
cmp
shrl
mov
mov
test
decl
mov
popa
jne
sub
add
mov
push
ret
loopne
and
pop
lret
sub
xchg
sub
test
cmc
cmp
enter
xchg
sub
xlat
xchg
add
mov
mov
jb
imull
scas
incl
add
cltd
sub
out
xor
xchg
scas
inc
ret
mov
int
push
cmp
jp
mov
dec
out
dec
faddp
clc
jp
clc
xor
push
rolb
dec
inc
loop
xor
imul
sbb
jnp
imul
jge
je
xor
push
inc
inc
adc
jp
enter
sbb
test
loopne
adc
popf
je
push
xor
pop
add
jl
divb
je
sub
call
orb
mov
arpl
cs
dec
loope
int
cmpsb
mov
bnd
mov
sbb
addr16
sub
or
in
push
xchg
call
mov
mov
mov
lods
mov
cltd
repnz
jge
mov
popf
pop
pop
fdivl
mov
jg
jo
mov
inc
mov
loop,pt
stos
push
or
pop
movsb
fisubl
test
roll
out
cltd
das
lods
push
stos
in
inc
fstps
cmp
inc
shlb
mov
sahf
hlt
mov
push
test
mov
xor
shlb
jb
cmp
xchg
out
pusha
stos
pop
fldcw
mov
mov
fistl
cltd
loopne
mov
add
or
popf
pop
dec
inc
inc
fidivl
jnp
mov
mov
nop
mov
mov
sbbl
jnp
movsl
mov
je
test
inc
push
shlb
sbb
xor
imul
clc
and
jmp
in
scas
add
pop
jae
ja
sub
jmp
cmp
xchg
lock
repnz
dec
loop
pop
adc
ret
aad
ficoml
loope
notb
ja
bnd
std
pop
jnp
lds
or
cmpsl
adc
fisubrl
data16
dec
mov
cmp
mov
push
jmp
jno
popf
loop
xchg
or
iret
inc
out
test
pop
mov
mov
cmp
mov
test
adc
sbb
das
mov
ds
sahf
stos
cmp
cmpsl
out
sahf
call
adc
push
nop
or
xchg
mov
push
pop
inc
test
adc
jns
mov
adc
je
mov
xor
sbb
aam
test
pop
and
sbb
add
dec
lcall
push
mov
mov
sahf
lea
jecxz
sub
xchg
movsb
dec
pushf
add
mov
sub
mov
orb
rcrb
mov
fnstcw
adc
jo
cmp
sub
inc
jbe
aam
bound
pop
jb
jle
lahf
scas
sahf
lea
out
stos
dec
imul
mov
mov
add
or
movntq
hlt
fwait
outsb
inc
pusha
js
aas
std
movsl
lods
inc
nop
negb
idivb
lahf
dec
add
popf
jg
insl
mov
mov
xchg
adc
sahf
xor
xchg
mov
mov
jge
cmp
fldt
sbb
and
jg
jp
push
sbb
cmpsb
push
inc
daa
or
add
jge
ljmp
push
aas
push
aaa
test
mov
cmpsw
lret
xchg
jmp
fs
lds
xor
cmp
dec
in
inc
mov
iret
jp
in
dec
fsubr
push
cs
fwait
cmpsl
and
add
cmc
sub
pop
mov
sub
or
sbb
pop
push
xor
dec
push
mov
cmpsl
enter
rol
cmp
ret
sbb
lahf
mov
adc
std
or
sti
out
xchg
pop
and
loopne
fistpl
loop
jmp
aaa
dec
pop
push
fsubrs
mov
adc
mov
or
in
xorb
cs
mov
jmp
dec
dec
jle
sahf
sbb
cmp
movsb
cmp
inc
pop
fnstenv
mov
mov
sbb
jnp
push
mov
push
cld
pop
data16
xor
pushf
or
jp
daa
or
sub
adc
icebp
push
loop
adc
arpl
sbb
cs
testb
sbb
mov
pop
xchg
out
fdivrl
mov
mov
pushf
add
int
shl
out
and
inc
cmp
xchg
push
jg
mov
hlt
in
push
cltd
out
mov
mov
adc
xchg
inc
push
pusha
mov
jge
sub
inc
adc
ss
inc
or
push
outsl
mov
jnp
iret
shlb
dec
xchg
adc
sbb
addr16
xlat
idivb
inc
std
cltd
div
jge
clc
adc
mov
cld
jb
adc
aam
out
stc
in
mov
cmpsb
mov
cmp
jnp
mov
adc
xor
mov
pusha
addr16
adc
lret
jmp
fistl
mov
ja
loopne
inc
mov
les
xor
pop
ds
add
inc
sub
push
cltd
test
aas
sahf
sbb
into
insb
xchg
sbb
lock
fadd
cmp
repnz
in
push
cmp
imul
sbb
sbb
mov
dec
mov
pop
jae
jmp
xchg
in
cmpb
sti
fnstcw
popf
leave
leave
jecxz
fidivl
and
mov
shrl
mov
fstps
or
xor
adc
cld
mov
shll
pop
mov
and
adc
jecxz
add
fsubrl
scas
cmpsl
loope,pt
xlat
outsb
jl
fmulp
pop
dec
cmc
adc
pop
call
jae
jo
push
out
jne
pop
push
pop
outsl
daa
adc
aad
xor
sbb
fcmovnbe
outsl
jae
push
mov
clc
jns
shrb
dec
leave
mov
fcoml
cmp
sub
popf
push
je
rcrl
inc
scas
inc
aaa
inc
xor
sbb
mov
or
mov
fists
mov
sub
sub
mov
mov
clc
aas
into
and
inc
inc
jnp
ds
add
frstor
repz
in
lret
push
and
loope
xor
xor
loope
push
cmpsb
icebp
or
into
dec
and
pop
adc
ds
popa
ja
cwtl
fyl2x
leave
movsl
decb
sbb
nop
adc
mov
mov
leave
hlt
mul
cld
and
cltd
addl
push
rorl
pusha
stc
cltd
push
std
xor
sbb
push
mov
mov
stos
add
lcall
jmp
ds
cli
pop
imul
sub
in
ss
sub
orl
scas
bound
add
bnd
jns
mov
test
iret
out
jl
dec
inc
lret
bound
aam
sbb
outsb
xchg
mov
sbb
sbb
cmp
dec
add
outsb
sub
push
cmp
lods
les
mov
xlat
dec
test
loop
adc
xor
pop
xchg
mov
subl
mov
rcrb
mov
lock
jae
jge
movsb
lret
cmp
pop
dec
ficoml
push
test
or
or
xchg
push
sti
outsl
adc
push
mov
nop
rcrb
in
test
sub
xchg
test
mov
lock
or
or
and
push
and
pop
adc
push
aad
jnp
cmpsb
inc
or
add
scas
xchg
loopne
add
mov
pop
inc
and
xchg
scas
or
lcall
inc
mov
cli
stos
and
xchg
push
add
lds
fidivl
into
dec
lret
dec
popa
std
imul
push
das
push
inc
jno
je
dec
pop
xor
sub
and
pop
outsb
stos
call
xor
cwtl
outsl
mov
adc
add
mov
xlat
leave
pusha
leave
pop
pop
xor
insb
out
push
xor
xlat
mov
push
mov
gs
pop
lcall
sti
adc
stc
daa
mov
push
jns
mov
std
sahf
xor
data16
cli
xchg
in
inc
test
fbstp
cltd
shlb
arpl
subb
cmp
mov
mov
jle
movsl
sub
mov
cmp
cmp
out
addr16
neg
xor
aad
jmp
mov
or
dec
es
adc
add
push
xor
stos
push
jno
jmp
sub
data16
xorb
aad
inc
inc
movb
mov
dec
mov
repz
ret
ret
fcomip
cmp
mov
les
aam
mov
jle
ret
insb
outsl
push
sahf
out
push
and
inc
jle
jecxz
stos
inc
das
push
cmp
inc
ds
push
mov
test
mov
sahf
dec
mov
sbb
divb
jg
xchg
enter
bswap
inc
nop
aas
sub
or
push
xchg
sub
mov
xor
jno
mov
or
or
sbb
and
cmp
mov
shll
jnp
in
dec
out
sub
pop
outsl
ror
aam
aaa
pop
bound
mov
imul
add
mov
pop
sub
and
mov
loopne
lcall
sbb
adc
xor
sbb
ds
pop
ffreep
mov
xchg
dec
int
ja
leave
movsb
es
call
or
sbb
filds
shrb
mov
inc
push
test
mov
inc
test
mov
sbb
enter
lods
sarb
and
xchg
das
cli
dec
scas
pusha
into
fsubrl
cmc
push
pop
push
and
ja
xlat
pusha
pop
xor
test
lea
notl
insb
incb
fprem
add
cmp
sub
xchg
movsl
push
insl
aam
push
hlt
outsl
icebp
adc
into
aas
addr16
xchg
aaa
iret
inc
fsubr
or
hlt
inc
test
mov
addr16
js
inc
inc
xor
loope
fxam
movsb
dec
inc
repnz
cltd
call
push
xchg
dec
and
mov
cltd
xchg
add
push
xor
mov
sub
pop
lea
adc
pop
push
jne
mov
std
movsb
std
xlat
rcrl
mov
cmpb
pop
cmp
mov
js
cmp
dec
nop
push
outsl
inc
imul
lcall
ficoml
ror
dec
pop
sbb
sbb
add
rol
movsl
mov
cmp
adc
movsl
xor
cld
jmp
ret
in
xchg
sbb
lret
or
jp
mov
in
incl
pop
sub
push
popa
nop
sbb
lods
pop
cmp
mov
dec
pop
mov
push
lahf
jbe
shrl
push
mov
jno
andb
enter
out
bound
add
inc
repz
dec
ss
cli
ds
call
or
mov
test
hlt
add
cmpsb
movsl
sahf
aaa
mov
mov
fdivrs
mov
mov
enter
nop
lock
gs
arpl
push
in
and
mov
popf
pop
shrl
mov
and
in
and
or
sub
cs
lock
subl
xchg
push
dec
mov
mov
mov
ret
mov
shl
call
repnz
xor
pop
xchg
inc
xchg
fucomp
and
sbb
jbe
cli
push
or
pop
and
jne
mov
add
scas
mov
lods
lock
sub
mov
jmp
jbe
mov
push
sbb
int3
push
mov
mov
and
xchg
pop
lock
inc
sbb
add
xchg
aas
and
push
call
sbb
pop
pop
inc
iret
fdivl
fbstp
sbb
insb
fwait
jl
xchg
or
pop
cwtl
pop
mov
sti
cmc
cltd
sub
push
push
dec
adc
cmp
push
cs
mov
lahf
cmp
aam
pop
imul
mov
cwtl
push
add
in
mov
pop
in
pop
arpl
sbb
xchg
sub
or
test
lock
mov
xchg
sub
pop
push
adc
inc
repnz
mov
inc
stos
fwait
jmp
inc
fsubrs
mov
notb
rcr
out
cli
and
mulb
jne
adc
cli
xchg
ffree
aad
jo
add
mov
ss
std
and
test
ss
out
or
xor
sbb
mov
cwtl
pop
cmp
cmpsb
sub
cmp
lahf
push
cmc
adc
scas
outsb
jle
cmp
pop
pop
push
xchg
ss
sahf
mov
fldcw
iret
pusha
repnz
cmp
inc
xchg
xor
ret
cmpsb
xchg
push
pushl
xchg
dec
push
pop
stos
xchg
mov
xchg
cltd
sbb
mov
cmc
push
pop
insb
push
test
inc
inc
fidivs
mov
adc
orl
push
or
jns
jmp
mov
out
out
xor
es
jle
jle
push
xchg
jns
jecxz
pop
shrl
fdiv
dec
shlb
cmc
iret
or
fcmovbe
pusha
adcb
and
dec
data16
sarb
test
push
sahf
mov
inc
dec
mov
adc
cmp
sbb
xlat
loope
or
adc
adc
dec
push
inc
inc
push
pop
mov
mov
dec
adc
add
cmp
sbb
pushf
mov
imul
mov
mov
mov
mov
mov
ja
adc
outsb
jno
mov
std
or
std
jecxz
cltd
mov
inc
leave
push
pop
jne
or
popa
sbb
push
ret
sub
outsb
add
jmp
or
mov
xchg
addr16
mov
data16
pushl
je
pop
sbb
cwtl
clc
mov
adcl
push
test
add
dec
mov
sbb
lret
lods
add
lcall
insl
dec
pushf
xchg
jle
shll
pop
popf
lock
jp
xor
loop
push
cmp
andl
bound
mov
ss
arpl
mov
mov
xchg
fxtract
sahf
inc
movsb
push
or
roll
push
mov
cmp
cmp
daa
mov
out
dec
push
jbe
sbb
xchg
icebp
jmp
das
test
mov
aaa
hlt
dec
dec
adc
pop
xor
test
lock
call
sahf
sarl
outsb
loope
aas
lods
jp
cmp
mov
inc
cmp
mov
sub
xchg
jne
cmc
cmp
and
mov
and
push
push
xchg
shrl
pop
inc
enter
loope
jge
fs
hlt
int
aas
enter
dec
mov
cmc
iret
stos
and
adc
push
jle
fistl
add
xor
movsl
jl
and
out
and
insb
jg
icebp
and
pushf
xor
add
fcomip
push
or
movsl
jnp
adc
leave
shlb
mov
out
in
or
fsts
notl
mov
mov
imul
pop
cltd
jecxz
xor
aam
ja
sub
test
inc
xor
data16
push
sub
dec
fiadds
aaa
in
mov
rcrb
mov
sbb
pusha
pop
cwtl
movsb
testl
insb
jecxz
lea
ljmp
mov
or
sarl
movsl
fsubs
sbb
loope
lcallw
mov
lret
sub
and
mov
mov
jp
pop
and
add
js
sub
pop
rclb
mov
leave
push
xor
push
mov
test
in
loopne
ret
and
adc
cmpb
scas
out
loop
inc
insb
das
lahf
pop
mov
cmpsl
adc
insl
fstpt
dec
enter
and
jge
xor
bound
out
xor
shlb
pop
hlt
inc
or
ljmp
sub
fldcw
mov
xchg
sbb
loope
mov
pop
addb
xchg
rcrl
sbb
xorl
mov
add
sbb
test
pop
pop
cmp
cmp
jecxz
push
adc
mov
gs
jge
in
in
std
add
push
adc
iret
mov
stos
xchg
ja
dec
inc
sub
push
scas
fcompl
sub
gs
iret
das
addr16
int3
pop
mov
imul
or
sarb
push
scas
push
push
fcmove
cmp
andb
cmpsb
fldenv
fcoms
jae
add
movsl
xor
mov
adc
or
cmp
fwait
incl
mov
aam
imul
fidivl
cmp
lret
test
call
push
cmp
outsb
mov
dec
stos
jl
int3
lods
or
mov
pop
movsb
sbb
mov
and
xchg
aas
sub
jecxz
jmp
insl
es
cli
jnp
sbb
sbb
rorl
push
fmull
rcll
mov
sti
iret
add
enter
int
std
dec
and
mov
adc
inc
pop
call
or
jp
pop
push
fldcw
or
or
test
cmp
stos
cmp
and
push
cmpsb
ja
in
cmp
cwtl
mov
mov
xor
fs
cwtl
lds
call
add
adc
and
sahf
lods
lods
js
cmp
push
out
sarl
test
lcall
leave
sub
out
xchg
cmp
mov
and
xor
push
jns
mov
pop
pop
enter
ret
addr16
cs
xlat
mov
mov
stc
jecxz
sbb
adc
dec
dec
xchg
inc
call
mov
out
adc
xchg
add
mov
pop
jb
xchg
out
lcall
sbbl
test
popf
mov
cltd
cmpsl
lock
sbbb
sub
nop
in
out
push
repnz
cmp
push
mov
sub
rcll
repz
rolb
jo
test
sbb
push
jb
mov
xchg
jg
mov
mov
fnstcw
ljmp
and
insb
sub
lret
sub
and
sub
sub
pop
jne
add
cltd
scas
or
cmp
data16
lcall
gs
nop
dec
inc
or
ljmp
imul
fsubl
aad
dec
inc
outsb
daa
inc
ret
ja
fstps
test
jo
pushf
dec
cmc
sbb
jl
adc
sti
adc
xor
mov
loope
sarb
shl
sbb
adc
lret
sti
jmp
sub
jns
ljmp
jno
dec
fnstenv
hlt
pop
and
cmp
push
es
shrb
sarb
xchg
nop
addr16
ficompl
mov
test
adc
ja
push
into
cmp
sar
inc
mov
je
lret
jns
das
lock
dec
and
or
dec
les
das
mov
mov
addb
cmp
adc
mov
loopne
outsb
fbstp
mov
or
jp
insb
out
lock
cmpsl
xchg
inc
jle
cmp
xlat
dec
mov
lds
mov
ret
inc
push
addr16
add
lock
inc
sbbl
pop
out
int3
or
add
in
mov
pop
push
pop
out
xchg
incb
pop
cmp
mov
pop
cmc
faddp
scas
adcl
or
lods
cmpsl
pop
mov
mov
cmp
xchg
outsl
push
popf
jbe
and
repz
std
push
pop
lock
sbbl
sub
push
stos
mov
mov
pop
pop
cs
rcrb
jmp
scas
icebp
rcrb
xchg
dec
sarl
les
jo
test
xor
insb
push
xchg
mov
mov
push
add
cmp
jge
subb
ss
lods
inc
mov
push
test
lret
into
pop
mov
stos
mov
das
sbb
out
lret
mov
inc
mov
les
mov
or
adc
mov
cli
std
xchg
sub
push
xor
insb
sbb
fists
das
mov
jns
mov
inc
xchg
push
pop
shlb
jecxz
lret
movsl
inc
rclb
push
lods
pop
xchg
push
push
dec
mov
ss
jno
mov
in
push
push
call
push
jne
push
and
je
out
dec
shrl
in
pop
mov
and
sub
std
mov
sbb
lods
inc
cmp
xor
loop
mov
sti
jecxz
aaa
fidivl
and
inc
dec
pop
dec
pop
shr
jae
mov
stc
lea
or
inc
inc
jbe
cmp
jl
sbb
fwait
outsl
xchg
jle
sbb
movsl
aaa
push
stc
test
fstps
and
mov
or
inc
fwait
ss
into
pop
aaa
inc
in
shrb
sbb
xor
mov
add
lods
into
stos
mov
rcll
mov
imull
aad
mov
scas
call
orl
mov
arpl
xchg
pop
in
mov
outsl
lods
fbld
fists
cld
or
xorl
testb
mov
cltd
jno
pop
mov
jle
std
scas
mov
les
ljmp
inc
inc
insl
lret
js
dec
inc
enter
or
inc
xlat
into
dec
rorl
retw
sarl
pop
cltd
xchg
cmc
negb
fisttpl
mov
loopne
das
decb
cld
mov
sahf
enter
mov
call
mov
push
lcall
jo
out
push
adc
dec
add
push
mov
cltd
stc
xor
addr16
ret
or
js
mov
mov
dec
pop
into
rclb
pop
and
call
jmp
jo
cmp
icebp
jl
push
enter
ret
jle
mov
ja
daa
imul
hlt
jbe
mov
push
mov
je
lods
aad
push
out
fsubr
xchg
add
mov
incb
popf
inc
xchg
jl
clc
xchg
adc
sbbb
orb
icebp
and
fstps
hlt
out
sub
popf
shlb
xchg
add
out
stos
pop
push
adc
sbb
pop
js
and
dec
inc
pop
push
push
lret
dec
data16
daa
aad
cmp
push
aaa
mov
cmc
stos
mov
mov
push
gs
xorl
ljmp
pushf
test
je
pop
into
fildl
repz
gs
inc
out
lea
nop
fnsave
std
ljmp
popl
out
scas
mov
ljmp
push
push
sysenter
add
stos
push
cltd
adc
or
adc
test
jno
popf
and
test
xchg
popa
adc
pop
and
icebp
cs
cmpsl
sub
cs
lcall
fdivr
adc
popa
add
mov
jl
clc
or
fsubrs
push
jmp
out
add
bound
jo
lea
xchg
mov
call
xchg
add
cwtl
popa
xorb
xor
mov
pop
andb
sbb
mov
push
ljmp
push
mov
sbbb
lods
es
out
in
mov
mov
push
sub
lock
scas
addl
dec
or
movl
outsb
mov
out
xchg
xchg
xchg
push
in
push
mov
ds
lea
add
ljmp
lods
pop
mov
mov
jmp
jns
cmpsl
shlb
cmp
jmp
repnz
xchg
sbb
mov
repz
cmp
xlat
pop
andb
rolb
mov
shlb
loop
stc
out
pushf
je
mov
jg
cmp
add
cmp
pop
sahf
shrl
add
mov
mov
imul
or
sub
leave
pop
or
sbb
loop
hlt
lods
or
fsubrl
xchg
mov
jns
dec
lock
jle
and
push
sub
leave
es
adc
and
call
mov
js
fdivrl
lret
decl
sub
shl
pop
test
setle
cmp
mov
push
pop
mov
loopne
push
push
sub
push
scas
icebp
ljmp
dec
pop
dec
or
sub
xor
cmc
leave
jl
rcrl
sbb
jp
scas
mov
jo
xor
and
push
pushf
add
xor
bound
sub
orl
add
dec
xchg
ja
lahf
xchg
add
pop
sbb
loop
insl
adc
lods
into
shll
incb
loop
pushf
push
pop
lock
shll
jmp
xor
push
jp
inc
mov
mov
cmpsl
out
add
cwtl
movsl
or
fdivrp
repnz
jmp
mov
or
cwtl
pusha
addb
rorl
push
test
push
add
cmp
xchg
repnz
xchg
dec
cmp
xchg
mov
loop
mov
cltd
or
sub
sub
pop
xor
jl
repnz
mov
jge
cmp
aam
adc
jb
sub
iret
and
popa
sub
inc
xchg
cli
pop
fsubr
cmp
push
jl
mov
sbb
dec
xor
fidivs
int
pusha
mov
or
mov
scas
pop
or
lods
fwait
sub
mov
jp
pop
in
or
insb
test
test
and
fdiv
adc
in
dec
in
lret
and
popa
mov
xor
mov
inc
mov
insl
adc
or
popf
push
or
fstps
lods
xor
add
mov
ljmp
lods
test
repnz
loopne
out
mov
mov
pop
dec
pop
xor
jmp
mov
pop
xchg
inc
in
stos
sub
lea
dec
adc
cmp
loopne
loop
sbb
cmp
sahf
cmp
cltd
or
mov
or
push
or
popa
ret
in
leave
pop
dec
mov
mov
pop
fwait
sub
into
mov
xor
jo
or
sub
loopne
movsl
sub
out
dec
sbb
loopne
dec
loopne
insl
mov
fildll
xlat
jne
mov
mov
enter
cwtl
enter
fsubrp
data16
sbb
mov
fidivrs
push
or
xchg
cmovnp
xchg
negb
loopne
std
int3
cli
ds
stc
daa
in
std
jo
and
pop
jne
bound
in
dec
sbbb
notb
jp
repz
xchg
or
sbb
hlt
out
fdivr
std
inc
pop
push
int
movsb
mov
and
scas
mov
jp
jg
xor
mov
mov
mov
lret
inc
jae
int
push
jmp
mov
ljmp
jge
mov
nop
cmp
mov
lret
push
daa
xchg
rcl
mov
mov
mull
dec
into
jne
or
pop
push
mov
stos
mov
int3
lods
cmp
insb
or
out
les
dec
dec
cs
insb
push
daa
pop
repnz
cmc
mov
js
cmpb
xlat
mov
pop
cmpsb
stc
out
sbb
xchg
nop
insl
add
sub
loopne
scas
xchg
or
sub
out
sbb
mov
ret
repz
dec
add
adcl
into
popa
in
andl
sbb
jo
dec
movsl
cmp
aas
fwait
pop
sub
ret
lahf
jae
outsl
test
mov
xchg
sahf
pop
out
sbb
cwtl
xchg
jnp
pop
cmp
repz
or
test
fnstsw
js
ret
pop
mov
fdivrs
push
push
imul
mov
int
testl
mov
ja
lods
out
sub
fldenv
dec
push
inc
dec
inc
mov
imul
sub
or
xchg
scas
fbld
aas
loope
int
ucomiss
mov
nop
push
imul
fcomi
cmp
out
mov
aad
mov
in
pop
pushl
movsl
test
testb
aaa
shlb
out
aam
add
aas
mov
mov
popf
psrlq
adc
or
pop
insb
call
repnz
test
mov
push
sub
rcl
test
std
ret
loop
bound
mov
roll
sahf
fsubr
lret
xchg
mov
add
xchg
icebp
mov
pop
loope
fldenv
xchg
repnz
in
cmpsl
rcr
or
sub
sub
cmpl
shr
mov
jne
js
divl
int
mov
cmc
in
xchg
aaa
outsl
sbb
pop
pop
pop
lret
pop
lcall
sbb
stos
cmc
adc
pop
jmp
or
lahf
mov
cwtl
mov
loopne
ret
push
rolb
ret
in
fcompl
repz
cmp
cmp
in
pusha
cmp
loop
jmp
mov
test
push
push
mov
adc
mov
sub
out
scas
aas
mov
ret
sbb
adcb
or
mov
pop
repz
div
sbb
jp
jae
sbb
pusha
ss
scas
xchg
cmp
fsubrs
push
push
sub
in
jmp
mov
dec
push
jae
mov
push
mov
add
fidivl
push
dec
dec
or
lret
inc
in
jle
test
ret
scas
inc
push
xor
sbbl
mov
into
mov
loopne
roll
sub
nop
aas
pop
cmp
outsl
inc
aam
nop
and
jecxz
repz
aas
cmp
scas
int3
jg
je
fwait
jp
notb
add
shl
stc
sbb
inc
and
xor
pop
pop
jnp
movsl
xchg
pushf
adcb
push
cmpsb
sahf
dec
fwait
inc
iret
popf
stc
dec
es
fsubs
lea
mov
test
push
add
cs
dec
and
lock
popa
daa
jae
mov
xor
push
icebp
cmp
dec
in
flds
pop
xchg
movsl
cmpsb
mov
jmp
or
insb
aaa
ljmp
and
mov
adc
fbstp
cmp
push
leave
test
scas
xchg
xor
ds
stos
push
dec
roll
mov
aam
pop
jb
jmp
ss
sarl
jge
pusha
cwtl
hlt
jle
lock
jb
fstl
sub
dec
pop
sub
addr16
inc
and
ret
dec
out
sbb
lods
enter
xchg
stos
mov
stos
inc
adc
jl
outsb
daa
scas
aaa
cltd
mov
icebp
call
mov
cmp
pusha
mov
test
mov
mov
enter
dec
adc
mov
sub
mov
mov
or
dec
gs
mov
and
es
xchg
inc
dec
inc
jp
lock
push
mov
jge
les
aad
imul
mov
orl
scas
jno
inc
push
add
lret
jnp
cld
adc
xor
mov
add
xor
fdivp
mov
aam
outsb
or
adc
imul
lea
out
fistps
out
jge
jecxz
dec
and
subb
in
roll
cltd
cs
mov
cli
mov
dec
push
nop
cmp
jecxz
mov
ss
out
adc
in
or
mov
and
pop
xchg
mov
shll
inc
js
pop
jns
dec
fucom
mov
fisubrs
repnz
arpl
sbb
xchg
and
sub
mov
or
and
data16
ret
mov
dec
leave
mov
pop
jnp
shll
fildl
aam
push
xchg
or
jmp
xchg
add
ds
mov
inc
push
jo
pop
jne
mov
and
cmp
mov
aad
dec
inc
mov
dec
mov
adc
or
jmp
out
ret
sbb
jmp
je
push
dec
push
sub
sti
mov
or
insl
ss
pusha
imul
enter
js
pop
aam
bound
sub
jbe
push
add
fstps
mov
ss
xor
add
push
cmp
js
adcb
ret
fsubrl
fsubp
inc
leave
push
jl
jecxz
decb
cmp
sarl
push
mov
aam
cmp
mov
in
sbb
mov
or
lock
cmpsl
push
dec
lods
or
jmp
out
lods
pop
in
mov
pushf
adc
xchg
jbe
pop
lcall
inc
arpl
sbb
stos
arpl
and
mov
sub
jmp
call
cmp
pop
mov
jae
sti
data16
insl
test
ja
mov
seta
les
dec
ret
sub
fildll
push
jge
lods
pushl
dec
and
pop
hlt
cmp
pusha
in
jbe
xchg
cmp
xchg
mov
push
repnz
stc
adc
test
xor
fbld
push
mov
notl
xor
std
shrb
inc
leave
aas
nop
sbb
aam
scas
dec
cmc
mov
dec
sbb
lds
inc
push
shr
dec
push
fpatan
movsb
jnp
or
mov
jg
mov
in
stos
adc
mov
cmpsl
cs
loopne
leave
and
imul
test
lret
adc
or
imul
shlb
push
xchg
in
imul
jmp
pop
out
outsl
test
jno
mov
pop
pop
sbb
mov
sbb
ljmp
aad
fmul
cmp
push
lods
pusha
fldt
pop
addr16
les
in
lret
or
rcl
jmp
mov
mov
mov
sub
popf
scas
test
lods
jne
dec
clc
and
push
lods
and
pushl
ret
mov
pop
repnz
pusha
in
mov
ret
das
testl
pop
test
fstpt
lock
call
subb
cmpb
sub
pusha
ss
pop
xor
addb
arpl
out
mov
push
inc
js
rcr
int
sbb
mov
xlat
aas
xor
xor
test
mov
es
mov
or
cmp
addr16
inc
inc
movl
insl
inc
mov
mov
pop
mov
test
movsb
xor
fisubrs
sti
sbb
inc
movsl
sub
mul
jle
stc
mov
sahf
jl
adc
in
ds
pop
repz
mov
add
cld
mov
in
in
push
pop
cwtl
dec
in
stos
mov
into
push
es
add
repz
jle
xlat
jl
ficoml
push
mov
leave
aas
fstl
dec
xor
mov
out
ljmp
call
cmp
mov
xchg
stos
adc
lret
test
push
jmp
pop
insl
cwtl
pusha
xchg
stos
jne
test
sub
jmp
inc
clc
adc
cmc
mov
out
popa
stc
test
mov
sti
sub
pop
xor
xchg
sub
xchg
movsl
fadds
inc
adc
dec
add
test
jb
loopne
and
inc
cmpsb
jl
push
loope
adc
imul
in
xchg
aam
out
xor
je
cs
fists
mov
push
shll
movsb
cmp
inc
and
xor
xchg
lods
cld
mov
aaa
jl
in
clc
adc
out
sbb
mov
mov
cmp
sbb
cmp
xchg
jg
jns
cmp
cmp
ret
lea
movsl
fwait
sti
mov
in
test
mov
out
inc
jp
ficomps
sub
mov
or
ficomps
inc
xlat
lcall
pop
cmc
sbb
popf
sbb
enter
gs
xchg
xor
mov
xchg
hlt
xchg
daa
iret
xchg
add
popf
es
dec
xchg
fsubs
add
pop
mov
dec
dec
test
data16
stos
hlt
xor
xchg
add
or
sahf
mov
mov
bound
lock
icebp
mov
stc
test
add
xchg
xor
sbb
cs
pop
sbb
into
inc
jb
cltd
mov
sbbl
rcl
je
testb
pop
test
outsl
in
or
int
js
sub
pop
sub
sub
xchg
cmc
pushf
pop
mov
lcall
mov
xor
scas
fwait
jp
inc
mov
in
test
xchg
testb
or
add
movl
jnp
xor
jl
iret
mov
cmc
mov
dec
push
cmp
mulb
adc
scas
loop
call
repnz
cmpsb
lock
adc
fldenv
xchg
repz
movsl
pushf
fimull
lds
dec
fmull
test
ja
daa
lret
xchg
pop
sub
dec
xor
mov
push
mov
adc
sbb
mov
xchg
call
mov
arpl
mov
fstpl
addl
or
addr16
mov
lds
mov
js
gs
lock
adc
dec
cmp
inc
cwtl
in
mov
push
mov
cltd
mov
xchg
mov
jnp
leave
leave
leave
jp
or
xchg
dec
bound
mov
jbe
mov
addl
or
mov
or
push
jmp
mov
push
dec
cmp
pop
sub
int
jg,pn
popf
aam
rcl
rcrb
sub
or
xor
push
cmp
pop
lea
cld
out
xor
jg
adc
mov
ds
cmpsl
inc
xchg
bound
aad
lret
icebp
cmp
xchg
gs
xor
pop
hlt
cs
xchg
add
xchg
movsb
xchg
cmp
loopne
push
lods
jl
dec
push
sbb
or
into
jo
stos
mov
pop
mov
out
xchg
lods
or
xor
adc
or
mov
push
push
dec
ret
mov
into
or
push
scas
or
push
insl
push
sbb
push
inc
sbb
arpl
mov
and
ds
jo,pn
push
mov
xlat
ss
out
rclb
jmp
es
xlat
scas
ret
shlb
mov
xchg
push
sbbb
aaa
fidivrs
and
aaa
xchg
sub
mov
and
outsl
out
mov
and
mov
xlat
pop
xor
int3
loop
fsubl
fcmovbe
out
lret
fnsave
cld
bound
jmp
or
test
stc
cmp
pcmpeqw
xor
out
sub
or
inc
sub
adc
sar
or
nop
mov
insl
push
into
stos
stos
push
sti
lcall
stos
pushf
or
push
cmpb
jnp
loopne
cmp
sbb
fmul
shl
sbb
repz
push
repnz
out
aam
jecxz
pop
scas
or
out
adc
sub
xchg
mov
scas
stos
lret
inc
push
das
fs
adc
xorl
sub
cmp
lds
sbb
pop
lret
inc
aas
or
sbb
inc
outsl
xchg
add
sbb
mov
movb
xor
pop
adc
xor
loope
mov
push
sub
add
pop
jbe
nop
nop
add
dec
add
cmc
add
inc
iret
jle
call
pop
inc
insb
sub
mov
inc
push
add
push
das
popf
mov
sub
push
inc
and
mov
mov
rorb
jecxz
jecxz
mov
pop
jns
hlt
fs
ss
or
loope
vpunpcklwd
push
mov
cmpsl
xor
mov
hlt
dec
shrl
add
fs
jmp
jne
loopne
mov
sub
jle
stc
pop
dec
sub
inc
ss
xchg
call
sbb
xor
shr
das
lret
adc
xchg
fisttpl
sbb
ljmp
or
adc
bnd
push
rolb
dec
mov
int3
ret
add
fs
sti
into
jne
loop
imul
jmp
test
into
push
lret
xor
jge
adc
xchg
sub
adc
jecxz
mov
jmp
xchg
sub
xor
and
xchg
lods
nop
xor
fildl
mov
add
mov
sub
clc
xchg
scas
fstpt
cmp
adc
inc
in
add
or
mov
lret
and
xor
jp
pop
fcmovnb
dec
dec
je
fcomip
push
and
pop
mov
lods
out
and
movsl
roll
int3
ljmp
add
push
mov
stos
inc
sub
pop
mov
int3
leave
pop
stos
test
out
repz
fbld
pushf
cmp
popf
in
pop
cmp
int3
push
ret
fiaddl
out
aas
sbb
inc
loope
jg
adc
dec
xchg
test
gs
push
inc
mov
inc
sbb
push
fmul
add
loope
inc
pop
hlt
fs
mov
fprem1
insl
pop
rcrl
sbb
jge
cmp
push
jns
push
mov
in
stos
cmpsb
mov
shr
ss
in
sub
aaa
xor
inc
xlat
mov
iret
mov
fldenv
mov
cmpsb
lea
fwait
mov
aam
mov
mov
cmp
lods
lods
in
jae
sub
mov
pop
jne
ja
cmp
in
adc
jns
insl
jecxz
adc
add
mov
cmp
jo
cmp
or
adc
inc
jecxz
mov
xchg
xor
lea
bound
sub
imulb
stos
movsl
enter
test
pop
addr16
push
mov
bound
push
adc
in
dec
push
cmp
xor
push
out
dec
cmp
dec
lea
xchg
test
mov
stc
je
inc
xchg
push
mov
xlat
mov
or
mov
xlat
mov
xchg
aaa
ss
mov
lahf
inc
aaa
loopne
imul
aaa
ficompl
ficoml
mov
and
inc
jbe
cld
mov
adc
es
and
addr16
or
aad
push
call
call
ljmp
fs
iret
gs
mov
nop
push
in
add
and
outsb
mov
xor
decl
jp
icebp
lds
xchg
cwtl
push
les
inc
and
dec
jp
ja
lahf
ss
pop
call
cmp
dec
ljmp
push
lret
sub
mov
mov
lret
mov
cwtl
xchg
es
xor
bound
jae
aaa
or
mov
cmpsl
jle
pop
movsl
daa
xchg
jecxz
movb
scas
xchg
inc
fidivrl
add
in
sbb
movsl
icebp
push
loopne
xor
adcb
data16
popa
and
lock
mov
pop
into
gs
fidivrs
adc
push
repz
repnz
jg
outsl
mov
loop
pop
shrb
fnstenv
daa
jp
call
lock
ds
aas
push
sbb
xchg
ss
out
test
push
lods
sqrtps
daa
dec
xchg
add
dec
sub
inc
cli
add
adcl
or
test
call
aad
pop
xchg
cmp
ljmp
mov
xchg
inc
insl
in
xor
mov
test
int3
mov
push
fsubl
mov
in
repz
pop
mov
inc
pop
callw
and
fsubrs
cmp
pop
dec
mov
xchg
xor
jmp
hlt
cmp
or
cmpsb
and
ror
les
sbb
xor
data16
xchg
xor
cmp
xor
lea
cmp
scas
dec
sahf
mul
jno
insl
sub
push
dec
dec
js
inc
adc
mov
and
xor
cmpsl
les
jbe
xor
adc
xchg
aad
adc
mov
or
cmp
cld
lcall
sbb
dec
add
xchg
push
dec
stos
push
push
sahf
mov
cmp
inc
push
outsb
daa
notl
out
insl
add
scas
repz
stos
mov
inc
push
xlat
mov
push
shlb
int3
mov
ss
dec
xchg
mov
pop
pop
xchg
adc
pusha
add
bound
pop
imul
adc
ret
es
dec
xchg
leave
push
mov
nop
mov
ror
pop
jp
imul
loopne
jno
or
sti
cmc
mov
gs
cmp
int
sbb
mov
mov
rcll
fdivs
out
cli
dec
and
int
insl
push
push
cs
in
fs
and
mov
cmc
pop
xchg
sub
add
inc
add
jmp
mov
xor
pop
call
aaa
int
sub
xor
and
push
mov
into
mov
xor
popa
xchg
and
cmpsb
addr16
add
icebp
xor
inc
ds
pop
mov
gs
xor
mov
cmp
fbld
add
clc
nop
mov
jne
popa
test
dec
xor
je
mov
push
pop
pop
xor
sub
roll
xchg
push
pop
enter
repnz
movsb
add
repz
out
lds
fcoml
mov
hlt
ret
xor
and
jl
movsb
out
sub
mov
out
cmp
lcall
hlt
repnz
into
cmp
xchg
xchg
imul
lock
xchg
xchg
lcall
push
dec
cwtl
mov
loopne
inc
lods
inc
sbb
int
or
jns
out
lahf
daa
fldenv
sub
ljmp
pop
repz
and
das
xor
inc
shlb
push
in
repz
cmc
sub
jne
adc
xchg
mov
sti
in
lret
lahf
insl
sbb
call
jecxz
dec
loop
sub
sub
arpl
ret
add
pop
push
cmp
cld
xor
daa
pop
fcmovb
das
sub
cmp
repnz
stos
xor
and
push
mov
jb
jge
ret
mov
xor
adc
mov
mov
cmp
rorb
mov
or
lods
test
stos
mov
or
mov
cltd
ds
cld
xor
cmpsl
cwtl
aam
mov
cmp
mov
pop
in
cmp
inc
push
jno
xor
in
js
inc
sti
mov
push
cmpsb
sub
mov
lret
gs
pop
xor
cmp
cli
pushf
xchg
out
cld
or
pop
inc
adc
jmp
mov
cmp
xor
in
xchg
cmc
mov
movsl
sub
inc
adc
jl
insl
pusha
push
xchg
cmc
loop
cmp
push
jns
push
jecxz
cmc
nop
inc
stc
adc
lds
xor
push
lods
test
filds
mov
jbe
pop
andb
std
mov
scas
repnz
lea
jmp
stos
repnz
adc
xchg
sbb
add
test
add
jle
fbstp
pop
data16
cs
mov
adc
push
sarl
sbb
cmp
or
xlat
sbb
dec
inc
mov
fisubrl
sub
cmp
enter
mov
mov
or
or
aaa
std
test
ljmp
sbb
shll
vmovaps
push
and
dec
jg
mov
fistpll
lock
cmp
orl
pop
mov
dec
leave
flds
negl
dec
in
sub
inc
or
mov
add
shlb
dec
fs
repz
adc
lods
or
cmp
mov
pop
in
xchg
js
in
jg
mov
push
xlat
add
aaa
cld
inc
inc
fisubs
aaa
les
out
inc
add
in
xchg
sub
setle
lcall
sti
sub
and
ljmp
or
inc
sti
push
pushl
je
or
out
decb
sbb
pusha
or
push
adc
popa
and
dec
shll
dec
mov
in
and
push
out
and
popa
pop
inc
jne
in
pushf
pop
push
fwait
mov
or
sub
enter
xchg
ljmp
std
sbb
les
cwtl
mov
sti
mov
idivb
and
sbb
pop
inc
repnz
pop
adc
jle
std
test
scas
repz
mov
mov
das
iret
mov
lock
enter
negb
sbb
or
in
and
insl
mov
nop
dec
cmpsb
pop
sub
dec
shlb
shlb
lods
pop
lea
push
scas
adcl
or
ja
int
pop
outsl
mov
lods
xchg
mov
xchg
cmp
or
repz
ret
out
fs
sidtl
jmp
push
stos
xor
cld
sbb
or
loope
pop
mov
fs
fbstp
mov
nop
cmp
stc
pop
in
jae
lods
test
add
movsb
or
sub
test
dec
cmpsb
mov
sub
cmp
and
inc
repnz
lock
movsl
int
dec
xorl
leave
ds
test
mov
out
outsl
das
add
jae
jecxz
mov
mov
out
test
sub
sbb
aas
aaa
movsb
jge
mov
add
cmp
es
fs
inc
inc
inc
popf
sub
or
std
mov
dec
test
and
lahf
lret
or
ds
es
lret
in
mov
fwait
jo
testb
xchg
push
add
inc
out
lods
repz
inc
fnstenv
xor
hlt
dec
arpl
dec
xchg
cmp
out
fidivs
xor
jmp
mov
inc
push
and
xor
call
testb
or
sub
out
imul
test
inc
fimull
fs
sub
scas
mov
fnsave
outsb
mov
dec
xor
int3
mov
mov
je
push
mov
fidivrs
loop
jp
push
mov
pop
movsb
pop
adc
lds
shll
push
cmp
push
xor
add
inc
ljmp
inc
adc
xchg
subl
nop
divb
jge
mov
rorb
test
loope,pt
ss
and
mov
repnz
sbb
xchg
sub
add
test
dec
push
out
xchg
inc
push
inc
mov
xchg
mov
rorb
and
mull
js
pop
sahf
sbbl
sbb
cmp
outsb
outsb
pusha
mov
xor
lahf
cmp
push
enter
and
js
imul
sbb
inc
out
popa
out
inc
pop
xlat
repz
loopne
push
ret
shlb
add
dec
insl
jo
jle
daa
mov
sub
pop
lock
jp
inc
scas
rolb
push
or
mov
sahf
jne
add
movsb
mov
frstor
fs
xchg
mov
fnsave
dec
adc
mov
push
das
in
mov
adc
lods
mov
cmp
dec
fisubrs
ds
or
pop
xorl
outsb
fwait
xor
shrl
fisttpll
mov
bound
mov
push
repz
cld
sbb
sub
push
xchg
push
add
mov
and
movsb
cmp
fldt
dec
in
test
xor
mov
add
sbb
jne
insb
adc
jbe
mov
rcl
jge
and
enter
lods
rclb
add
mov
lret
cld
dec
movsl
and
hlt
sbbl
outsb
in
dec
push
xor
mov
ljmp
out
xchg
sub
test
mov
aaa
xor
insb
mov
int
push
fbstp
enter
push
pop
xchg
push
cwtl
cmp
test
lcall
cli
sub
adc
adc
cmpb
xchg
pop
sti
jne
shr
mov
ret
inc
push
push
rcll
popf
mov
fbld
fildll
adc
movsb
lock
pushf
in
push
pop
out
aas
push
sahf
ja
loope
adcb
out
jp
mov
ja
in
dec
fdiv
xor
lods
mov
inc
lods
add
pop
lahf
aam
sbb
lock
mov
ljmp
xor
mov
subl
mov
fdivr
rorl
xor
out
aas
dec
add
hlt
gs
adc
std
leave
push
xor
sbb
pusha
sbb
in
rol
inc
xchg
jp
mov
ret
sbb
xor
xchg
shr
jl
add
iret
fsubl
int3
lods
push
in
push
sti
insb
call
cs
sahf
scas
rcrb
sbb
rep
lret
fbld
sbb
inc
push
ds
cmp
fcoml
adc
xchg
lret
fs
add
int
sbb
or
rcrb
cmp
je
adc
out
lahf
push
fsubrl
cmp
test
frstor
mov
hlt
dec
sub
jg
sbb
sbb
dec
lret
fwait
cmp
or
repnz
cmpsl
inc
lcall
or
cld
sahf
xchg
push
fstpt
xchg
push
lcall
mov
rcll
sbb
adc
aaa
xor
mov
stos
out
pop
cmp
inc
mov
sub
pop
jmp
or
mov
icebp
dec
mov
jecxz
es
or
or
pop
arpl
jge
cld
lcall
mov
push
pop
mov
mov
jg
xchg
pop
sub
fsubrs
rcr
dec
push
stc
cmpsl
mov
jae
leave
push
cltd
rolb
pop
roll
sub
xchg
clc
movsl
dec
push
or
push
jb
out
cmpsb
in
js
adc
mov
dec
into
insl
inc
movsl
cmp
push
addr16
push
dec
and
inc
cli
mov
shlb
inc
std
mov
push
jns
insl
jle
cmpsl
mov
mov
mov
lret
ss
xchg
pop
cmp
pop
mulb
xchg
mov
or
dec
shlb
mov
sub
jmp
div
les
xchg
fistpl
add
lock
push
jmp
jp
mov
movsb
pop
xlat
sub
jle
mov
jns
daa
mov
stos
pop
add
icebp
mov
adc
shlb
jno
cld
xor
and
sub
xchg
and
mov
pop
xchg
jne
cmpsb
xchg
out
ret
cmpsl
insl
sub
cmp
jecxz
jecxz
xor
inc
push
jp
xchg
sbb
fdivs
jbe
xor
int
dec
ficoms
inc
pusha
into
pop
aam
rcrl
js
add
xchg
subl
mov
fistpll
test
and
jno
sub
daa
fs
cwtl
repz
jne
jns
test
out
lea
pusha
ret
hlt
dec
push
mov
cmc
outsb
add
dec
xor
daa
adc
je
movsb
ret
inc
jno
fldl
movsl
mov
dec
test
popa
in
and
or
add
or
fdivl
cmpsb
inc
pop
lret
hlt
pop
dec
test
push
mov
lods
mov
lea
xor
sbbl
inc
push
or
scas
push
in
lahf
mov
aas
rorb
mov
jg
and
mov
mov
ss
mov
enter
pop
fidivrs
mov
aas
sub
dec
jae
or
inc
aaa
mov
fcoms
pop
xor
xor
pop
ret
xchg
pop
mov
loopne
add
mov
adc
rcll
rol
jmp
add
out
cli
mov
rcl
xor
std
inc
data16
xor
arpl
rcll
jg
mov
jecxz
cmp
ret
mov
or
add
jg
jnp
dec
dec
pop
jnp
add
cmp
sub
or
imul
popa
repz
adc
jg
adc
mov
ret
les
mov
xchg
mov
inc
mov
add
das
mov
leave
test
dec
pop
call
in
xchg
ds
jno
or
iret
jle
aas
test
add
enter
fwait
pop
outsb
mov
stc
je
pusha
inc
adc
or
gs
pop
pop
pop
fwait
leave
mov
flds
mov
je
es
xchg
sbb
jno
cmp
mov
movsb
push
cli
lods
mov
cmpsb
xor
int3
loop
jp
outsl
shlb
movb
ret
push
ret
sub
mov
push
int3
cmp
jp
insl
sahf
scas
cmpsl
js
adc
and
sti
push
push
mov
fnstcw
ljmp
inc
mov
and
cmp
mov
inc
js
lock
lahf
push
push
xor
mov
aas
push
mov
aam
bound
addb
mov
repnz
inc
sarl
push
clc
push
ja
andl
lahf
xchg
lea
fstpt
add
scas
fidivl
loope
sbb
sbb
lods
jno
mov
or
and
and
fs
sub
ja
cmp
fistps
lret
fldt
and
adc
dec
mov
jg
dec
das
mov
inc
mov
stos
aas
adc
hlt
data16
xor
sub
mov
add
cmp
jg
cmp
out
pop
add
insb
or
mov
insb
call
cmp
pop
add
lcall
push
mov
mov
xor
test
movb
jecxz
mov
je
in
aaa
test
rcr
mov
je
incl
cmp
dec
in
inc
add
icebp
jg
and
and
fldcw
cs
outsb
inc
in
jns
into
jb
dec
mov
sbb
cwtl
cmp
hlt
inc
cmc
adc
add
push
fsubl
mov
xchg
notb
out
stos
cmp
or
cmp
cmp
add
dec
sub
hlt
push
out
sti
mov
movsl
outsb
popa
ss
push
insb
push
xchg
add
gs
fistps
cld
popa
cmp
xchg
fxch
fwait
lea
jbe
lret
aad
out
push
testl
mov
jmp
push
inc
mov
sbb
add
push
je
es
jg
or
icebp
xchg
xor
stos
fcmovne
dec
test
imul
pop
cmp
and
jae
aas
push
jge
adc
pop
in
je
insl
rcrl
xchg
or
aaa
clc
loop
scas
pop
jnp
adc
push
add
cltd
cmpl
into
xor
cmpsl
inc
pop
leave
arpl
popf
xchg
ljmp
mov
jmp
dec
in
xor
ja
sbb
les
cmp
repnz
fisubrl
dec
pop
sub
adc
aaa
push
jns
xor
mov
push
adcb
sub
ljmp
xor
xchg
fiaddl
pop
mov
inc
aaa
daa
fisubs
pushf
mov
push
in
ja
stos
or
cmp
sti
and
cmpsl
mov
lods
mov
in
jmp
mov
mov
cmp
mov
xorb
xchg
test
cmp
stos
push
cmp
inc
adc
jl
xchg
outsb
push
mov
cmp
imul
out
dec
sub
adc
dec
cmp
bound
fdivs
xchg
into
gs
dec
and
push
and
int
jns
subb
jns
sub
inc
mov
inc
test
or
mov
and
ds
cmp
subb
icebp
sbb
fisttpll
and
ds
repnz
in
ljmp
fiaddl
pop
push
es
push
ffreep
insl
pusha
pop
mov
mov
insl
sub
xchg
sub
inc
call
jae
mov
mov
lods
pop
jecxz
shll
mov
xor
pop
mov
mov
aaa
push
in
jns
std
or
cmp
out
stc
popf
jmp
mov
lahf
cmp
loope
and
and
lods
inc
notl
fnstcw
push
mov
dec
add
inc
hlt
js
movsb
dec
cmpsl
cltd
aaa
into
or
sub
fucomp
shrb
and
and
inc
sahf
aad
shl
cmc
or
dec
mov
in
loop
push
adc
in
inc
push
mov
mov
sbb
dec
insb
rcll
arpl
fcomi
and
mov
mov
mov
out
std
adc
aaa
scas
or
pop
in
dec
dec
loop
out
push
mov
add
imul
and
xchg
ss
xchg
sub
dec
fdivr
jg
cmp
movsl
add
dec
mov
sbb
xor
leave
cs
and
out
scas
lahf
out
xchg
ss
pop
or
mov
outsl
lret
push
and
das
and
xchg
mov
adc
or
xor
mov
cld
test
xchg
push
cmpsl
adc
clc
or
and
jle
pop
das
inc
inc
popa
cli
lret
callw
ficompl
test
dec
lds
addl
es
jl
inc
push
stos
movsb
dec
in
aas
inc
pusha
fwait
movsb
imul
pop
fmul
mov
and
mov
stos
push
inc
sub
insb
adc
inc
mov
dec
xchg
out
scas
gs
test
mov
xchg
mov
xchg
mov
xchg
stos
ja
mov
xor
or
cmp
cmpsl
adc
shl
xchg
cmp
out
mov
lea
inc
aaa
inc
push
jbe
outsb
push
les
push
jb
sbb
stos
xchg
xlat
cs
mov
pop
xlat
jmp
pop
loope
in
arpl
mov
out
es
mov
inc
icebp
jb
mov
pushf
lods
inc
into
push
add
xchg
add
mov
sbb
fisttpll
bnd
mov
push
or
js
add
xor
or
notb
dec
add
jecxz
dec
popa
sti
jg
sub
pop
mov
ja
inc
fidivl
iret
fiaddl
inc
cmp
lret
xlat
movsb
call
daa
out
sub
imul
loop
in
out
insl
sub
xchg
cmp
shl
cmp
andl
dec
hlt
mov
shr
jnp
jge
adc
push
sahf
adc
clc
in
call
bound
inc
mov
call
sbb
mov
in
call
test
and
fisubs
scas
call
add
ljmp
cmp
push
mov
push
lret
fmul
jecxz
popa
pop
pushf
mov
push
dec
push
xchg
or
adc
add
insl
sbbl
into
mov
pop
outsb
sbb
imul
and
add
adc
shrb
sub
push
fnstsw
les
shlb
cmp
adc
loop
fcmove
or
push
scas
sti
mov
rolb
sbb
dec
loope
ljmp
call
aam
adc
mov
pop
ret
sahf
data16
and
stos
dec
xor
dec
test
adc
push
sub
sbb
pusha
into
std
inc
cld
sarb
xchg
sarl
cmpsl
mov
icebp
aad
insl
test
push
mov
fs
and
cmp
sbb
cmc
int3
jle
xchg
dec
out
sbb
mov
les
and
mov
dec
out
xchg
sahf
test
jecxz
add
scas
repz
push
inc
clc
jb
imul
test
aad
xchg
in
xor
aad
lcall
pop
pusha
pusha
push
mov
and
mov
jl
fnstsw
jns
lds
les
adc
ret
mov
adc
ljmp
mov
xor
fs
fprem
xchg
testl
fstl
jp
stc
je
adcl
repnz
scas
lcall
shrb
sbb
ljmp
jns
sahf
xor
fistl
pop
dec
inc
sbb
into
cmpb
push
mov
subb
dec
mov
mov
in
jbe
inc
mov
sub
adc
dec
or
mov
js
cmpsb
inc
sahf
pop
or
jno
cwtl
inc
xlat
cli
stos
pop
mov
jg
cli
int
push
int
subl
in
jo
bound
popa
into
psllw
push
cs
je
adc
rcll
enter
or
dec
pop
loop
jns
imull
xor
xchg
pop
dec
popa
mov
xor
in
sgdtl
xor
and
jo
les
pop
add
sahf
push
out
cltd
jge
push
xchg
cmc
mov
scas
mov
pop
sub
add
xor
mov
push
cs
cmc
adc
sbb
jnp
dec
jae
inc
mov
cmp
adc
pop
dec
add
or
fbstp
sbb
lea
mov
dec
add
das
pushfw
out
out
xor
mov
sbb
popf
aad
adc
mov
add
out
ss
in
mov
das
rol
fdivl
std
test
test
sub
inc
inc
inc
in
inc
out
push
lods
xchg
fs
add
mov
loop
lgdtl
ds
imul
cmp
adc
cld
pop
jmp
jbe
adc
pusha
pop
mov
shll
push
lods
xchg
push
jns
sub
insb
aam
decl
fmull
js
fldcw
pop
fldl
push
psrlq
mov
push
push
xor
imull
pop
cwtl
std
popf
loope
iret
push
loop
xor
int
dec
xor
mov
pushf
push
icebp
sbb
push
sti
aas
mov
mov
mov
inc
jno
sbb
sub
negw
sarl
pop
lds
iret
insl
pop
pop
adc
mov
jbe
xchg
push
lock
dec
stc
or
add
xor
das
adc
nop
and
pop
sarl
mov
adc
das
pop
iret
jb
sbb
lahf
and
inc
jnp
adc
sbb
push
repz
test
or
push
data16
pushf
sbb
sbb
mov
lock
push
icebp
fsubrl
mov
sbb
subl
inc
xor
jns
fiaddl
arpl
add
pop
jl
icebp
adc
mov
xlat
clc
insl
add
mov
push
xor
movsl
adc
test
imul
inc
pop
scas
jno,pn
sahf
inc
dec
out
mov
sbb
jmp
mov
popf
jg
push
dec
test
dec
and
cld
scas
mov
cmpsl
dec
lods
mov
push
jnp
xchg
xor
sub
cmp
jp
fdiv
notb
movsb
push
mov
push
and
ja
cmp
rol
in
pop
cmpsb
or
xor
gs
imul
cmpsb
fstpl
gs
outsb
push
fistpl
push
push
add
test
dec
pop
fimuls
mov
sbb
or
jecxz
gs
in
push
and
fmuls
addr16
push
jecxz
aad
std
aas
xchg
mov
cltd
jae
cmp
pop
xchg
shl
call
cmpb
mov
push
xchg
mov
jge
mov
in
or
fs
fwait
fs
stc
inc
pop
punpckhbw
and
daa
inc
xor
pop
aaa
js
jle
lods
test
push
jmp
cmp
loop
push
sbb
sbb
add
cs
inc
push
popa
xchg
data16
push
imul
adc
bnd
dec
fs
dec
fcomip
ret
adc
leave
mov
out
test
adc
mov
leave
xlat
ficompl
xor
xor
mov
rorb
add
or
inc
pop
fdivs
aam
cmp
cli
addr16
inc
rcl
mov
arpl
vcvtdq2ps
out
inc
xchg
outsl
pop
lock
sarl
cwtl
pop
inc
cltd
les
add
fldt
pop
inc
sbb
scas
loopne
pop
xchg
jg
push
inc
inc
mov
shr
into
inc
int
mov
aam
roll
daa
gs
shll
cli
add
cmp
fiaddl
clc
jl
xchg
leave
add
aaa
push
inc
in
push
sub
aam
pop
cmp
popl
push
mov
xor
outsl
sbb
hlt
inc
enter
mov
xchg
push
pusha
addb
dec
fisttpl
dec
das
mov
fstps
inc
lods
mov
cmpsl
dec
aam
scas
and
push
mov
jae
jno
sbb
fstl
std
lret
xor
cmp
and
mov
stos
fsubl
je
repz
mov
nopl
mov
jae
mov
dec
and
or
jb
imul
lods
stos
inc
clc
int
push
mov
stos
add
and
int3
addr16
stos
in
adc
gs
cmc
inc
imull
int3
ljmp
mov
std
subl
jne
js
out
fnsave
fdivl
fsincos
xchg
in
lods
fistl
sbb
mov
sub
aam
sbb
loopne,pn
and
push
mov
cmp
lcallw
movsb
aaa
test
mov
xor
lret
aaa
out
cld
mov
inc
mov
jb
pop
loopne
dec
out
and
xchg
pop
mov
pop
lahf
mov
lea
enter
or
fildl
or
inc
push
jae
push
insb
std
sbb
aas
iret
adc
cmp
dec
and
pop
dec
std
lcall
in
stos
pop
cmc
nop
mov
mov
out
pushw
cld
lcall
in
add
data16
lret
cld
or
jb
pop
dec
push
scas
mov
pushf
shl
fdivp
faddp
loop
leave
das
mov
cwtl
pop
popa
pop
ja
xlat
negl
dec
out
nopl
inc
scas
mov
xchg
xlat
sbbl
sub
dec
cwtl
loope
pop
scas
mov
adc
bound
mov
aad
sbb
outsb
or
lcall
in
mov
testb
fisubrl
and
sti
das
lds
mov
pop
inc
cmp
pop
test
or
push
ds
cmp
popf
lock
push
sbb
adc
or
xor
test
sub
jne
test
lret
fildll
xchg
push
lock
adc
inc
xchg
sub
arpl
cli
jne
shrb
xchg
pop
scas
enter
negl
aam
sub
lea
xchg
mov
inc
push
push
jmp
rolb
xchg
adc
sbb
cli
xor
test
xchg
xor
sahf
cld
push
xchg
sbb
push
movsl
cmp
inc
push
pop
insb
test
cmp
fisttpl
or
out
xchg
popf
xchg
cmpsl
jbe
ja
test
lahf
filds
mov
xlat
call
xchg
lea
mov
sub
mov
jb
insb
in
imul
sub
dec
xchg
xchg
in
insl
dec
inc
lahf
cmpsl
sbb
and
jno
jns
decl
fnstcw
add
and
mov
mov
ljmp
mov
int3
arpl
xchg
push
pop
dec
mov
not
arpl
mov
pop
mov
and
mov
lret
test
adc
fcmove
dec
sbb
iret
pop
and
push
mov
shrb
push
mov
icebp
fucomi
aaa
decl
cli
cmp
pop
jge
or
sbb
movsl
fs
sub
outsl
jl
daa
pop
jo
add
push
int
or
adc
adc
test
int
enter
stos
in
enter
mov
ficoms
test
xlat
jle
pop
mov
in
mov
and
insl
mov
sbb
mov
imul
mov
imul
adc
pop
fdivrl
notb
movsb
fdivs
push
xchg
mov
jg
jns
sbb
dec
dec
lahf
scas
push
lea
mov
mov
and
jne
into
jnp
mov
in
test
pop
hlt
pop
stos
das
or
rorb
popf
fdivl
cwtl
ret
sub
popf
inc
sub
lret
add
sub
and
cmp
jb
hlt
lret
add
ljmp
inc
loop
and
rolb
mov
mov
mov
xchg
mov
fistpll
imul
fsubr
insl
xchg
scas
jns
mov
fimuls
stos
xor
addr16
inc
cmp
push
addr16
dec
fbstp
pop
mov
test
mov
push
push
out
lods
das
pop
cmp
xor
jmp
pop
sbb
lahf
mov
push
xor
nop
xor
lcall
push
sub
xchg
sub
stos
dec
add
and
sti
test
popf
pop
lods
clc
pop
repz
sub
jmp
std
and
xchg
xchg
dec
ljmp
xor
push
mov
xchg
es
out
bound
daa
leave
inc
imul
addr16
jmp
test
xchg
repz
lods
stos
rcll
jle
jo
ror
std
xchg
jl
aad
sub
nop
sub
fdivs
push
mov
mov
dec
dec
cmp
sub
push
pop
test
add
iret
adc
fisubs
or
push
mov
cmc
into
in
adc
fmul
cmp
bound
pop
jl,pt
daa
notl
cmp
xchg
call
int
inc
push
jg
mov
sub
popa
sub
mov
out
arpl
jo
add
cmp
imul
push
sbb
adc
ds
or
push
push
adc
and
mov
test
loope,pt
dec
add
adc
in
loope
jb
xlat
add
xchg
fiadds
cltd
xchg
js
dec
fwait
mov
jp
aad
out
cmp
andb
xor
xchg
mov
lds
test
mov
lret
inc
test
jle
sub
dec
and
sub
sbb
jecxz
pop
sub
cmp
in
inc
ds
nop
dec
aas
fsubrs
push
stos
inc
repnz
mov
cwtl
push
fs
test
and
pop
into
push
scas
stc
inc
fldt
fwait
xor
fistps
mov
cmc
mov
stos
es
pop
mov
movsb
test
sbb
push
add
cmp
mov
adc
xlat
sbb
adc
adc
and
cmp
jne
sbbl
cmp
sbb
out
loopne
pop
test
cmp
ja
pop
aaa
decb
jnp
inc
and
cld
xchg
or
movsb
cmp
loop
cwtl
sti
out
aaa
mov
stos
sahf
movsb
js
enter
mov
mov
ret
jmp
inc
sbb
or
hlt
aam
cli
adcl
pop
ret
jle
add
cmp
setge
push
and
lret
cmp
dec
sbb
into
xchg
lahf
mov
in
push
mov
pop
push
dec
sbb
jg
cmp
mov
push
adc
push
xchg
or
xchg
xor
verw
sti
push
dec
popa
sbbl
push
in
adc
out
out
pushf
xor
or
jge
cmpsl
ljmp
mov
or
sub
es
jns
mov
stos
xor
iret
xor
mov
xor
loopne
test
xchg
std
jmp
mov
mov
loop
outsl
mov
dec
or
cmp
fdivrs
fwait
push
mov
mov
cld
or
mov
loop
dec
dec
push
lds
mov
mov
inc
fildl
rcrb
movsb
jnp
mov
dec
pop
inc
mulb
gs
out
into
scas
adc
and
cmp
inc
fmul
daa
lods
fcomp
mov
loopne
adc
ret
push
ss
xor
mov
sub
loopne
sbb
mov
stos
movsl
lret
fst
int3
xor
fbstp
push
inc
in
mov
sbb
xchg
jne
ret
rclb
jp
hlt
mov
outsl
push
ds
je
cwtl
xor
push
std
pop
xor
daa
mov
sub
push
push
repz
mov
call
mov
loopne
stos
cmp
sub
ljmp
lea
loopne
pop
push
pop
adc
mov
xor
and
mov
mov
into
sarb
out
fistpl
cmp
rcrl
push
sbb
lea
adc
adc
xor
movsl
dec
aad
inc
stos
inc
xchg
pop
push
sub
gs
lods
outsl
stos
outsb
pushf
mov
push
mov
push
cmp
jae
push
sub
stos
fcos
stos
mov
in
test
lock
faddp
scas
cld
sub
nop
pop
fldl
dec
addr16
mov
pop
outsl
jecxz
push
in
jg
or
lahf
fadds
mov
jecxz
push
sbb
sbbl
push
xor
and
pop
and
sti
dec
sbb
fisubs
daa
xchg
ljmp
xchg
fiaddl
pop
divb
mov
xchg
push
cmp
xor
dec
cmpsb
adc
arpl
sub
decl
lahf
xchg
sub
rcrl
sub
out
cld
mov
test
mov
mov
xlat
dec
cmpsb
ja
cmp
std
shrb
push
subl
cmp
adc
xorl
cmc
cmp
nop
out
repnz
mov
fldl
push
std
dec
xor
mov
pop
stos
add
add
filds
sub
loopne
pop
xor
aas
lret
lret
repnz
das
pop
mov
push
sub
lods
inc
jno
mov
inc
cmpl
jnp
dec
in
aad
sub
xor
clc
in
mov
xchg
xchg
sbb
sarl
cmp
mov
add
push
cmp
cmpsb
daa
inc
aam
out
inc
xor
pop
in
enter
sbb
or
inc
cmc
daa
icebp
inc
loope
shll
mov
lock
test
cmp
clc
jb
out
xchg
or
int3
outsb
mov
lcall
out
dec
in
pop
sbbb
adc
dec
dec
push
cli
xchg
push
lahf
and
icebp
enter
cs
into
lds
rcrb
and
lret
sub
pop
mulb
sub
sbb
mov
jp
pop
dec
shrl
jecxz
lcall
data16
cmpsl
rolb
fbstp
add
rcrb
mov
mov
inc
int
cltd
arpl
movsl
movsb
mov
cmp
adc
jmp
decl
jg
nop
outsl
iret
jno
fidivl
testl
ret
push
es
xchg
imul
mov
sbb
inc
stc
jg
add
js
adc
mov
sub
adc
adc
arpl
adcb
adc
xor
mov
fimull
push
mov
mov
std
push
in
xchg
clc
push
lcall
ljmp
loop
js
int
std
push
js
sti
mov
mov
clc
add
cwtl
pop
js
pusha
icebp
mov
shrl
rorb
cmpsb
cmp
ret
cwtl
mov
es
fwait
rorl
cld
outsl
mov
cmp
jo
insl
jno
aam
sbb
cmc
idivl
outsb
xchg
out
mov
arpl
ljmp
jmp
inc
lds
stos
mov
loopne
xchg
dec
adc
jo
shrl
pop
fwait
mov
rol
pop
repz
or
cld
jnp
push
and
outsb
jb
mov
pushf
add
movsl
lcall
mov
or
sub
movsb
mov
aad
arpl
subb
inc
lret
mov
cmp
into
pop
leave
adc
sub
pushl
xchg
sbb
shlb
xchg
es
jns
xor
enter
jecxz
sahf
mov
inc
loopne
xor
mov
mov
and
jb
ficoml
xlat
test
int3
and
outsb
dec
rcr
scas
stos
fcomp
nop
pop
loop
stos
inc
fstps
cltd
and
inc
fxch
cli
sbb
arpl
jno
jge
mov
rcrb
jae
sub
mov
in
les
jbe
in
dec
cmpsb
adc
or
jle
call
mov
shlb
fldt
inc
fcmove
leave
sbb
jmp
dec
test
push
loop
inc
add
scas
movsb
negl
mov
cli
daa
cli
jno
mov
fwait
mov
mov
push
std
mov
stos
out
add
jle
ret
fs
movsl
test
pop
push
jns
ljmp
cmp
std
sti
popa
add
cmpsl
stc
enter
cltd
jo
call
notl
sbb
pop
mov
xlat
seto
and
sub
mov
sarb
pop
rcrb
push
mov
ret
cmp
outsl
xchg
mov
push
adc
inc
iret
addr16
shrb
pop
stc
dec
add
repnz
mov
rolb
sub
int3
sahf
jg
imul
clc
jmp
dec
cli
cmp
inc
and
cli
lea
jge
push
aad
pusha
and
adc
ficompl
sub
jbe
iret
and
mov
dec
int3
xchg
daa
cwtl
aad
leave
dec
insl
loope
xchg
cmpsl
lds
stos
push
mov
push
jecxz
scas
add
in
xorl
ljmp
sahf
lods
dec
dec
test
push
xlat
enter
lcall
xchg
mov
lret
mov
daa
and
jb
adc
cld
push
xchg
add
xchg
sbb
sub
out
pop
call
push
mov
cltd
jae
aas
xchg
jmp
and
mov
je
push
mov
dec
enter
scas
fs
movsb
mov
cmpsb
mov
adc
and
dec
scas
push
jb
inc
int3
ljmp
leave
rcl
into
fsubl
out
lock
lock
xor
in
ret
outsb
jecxz
out
aam
int3
fs
jmp
mov
aam
insl
sarl
movsb
icebp
mov
lea
pop
add
inc
mull
sub
stos
push
push
mov
dec
adc
or
mov
jo
scas
test
lret
jbe
pop
mov
sub
xor
and
or
out
lds
pop
mov
mov
inc
es
pushf
push
sbb
mov
cli
loope
popa
and
mov
jbe
lahf
dec
ss
leave
sub
xor
movl
jne
mov
cmpsl
jne
int
sbb
mov
xor
push
cmp
popf
and
ss
insl
arpl
inc
je
cwtl
add
mov
xchg
call
sbb
jg
push
push
jle
mov
enter
jnp
loopne
or
and
mov
mov
or
or
fiaddl
lcall
or
xchg
mov
iret
in
test
jge
dec
mov
jbe
sbb
out
xor
push
leave
mov
test
sbb
mov
xor
sub
mov
jg
xlat
jmp
jle
cmpsb
cmp
dec
mov
adc
loop
pusha
test
push
popf
out
mov
leave
mov
mov
add
push
push
dec
roll
lcall
int
xchg
pop
cmp
cld
into
mov
mov
out
sub
add
leave
jo
out
mov
shl
cltd
hlt
xchg
test
pop
fiadds
mov
pushl
jle
bound
call
jp
xlat
jno
sarb
bound
xchg
ja
pop
sarl
sub
jbe
in
push
dec
stos
push
fprem
mov
cmp
xchg
out
add
stc
dec
loopne
popa
mov
or
shll
add
cmp
popf
add
orb
test
jg
push
adc
push
mov
xlat
scas
repnz
shrb
or
cmp
jp
inc
xchg
sbb
out
test
psllq
adc
sbb
pop
adc
xor
xchg
fdivrs
arpl
mov
push
mov
mov
pop
pop
loopne
adc
dec
and
sbb
adc
clc
mov
cld
adc
lret
shlb
fiadds
xchg
call
adc
dec
mov
xor
aam
fisubrl
fdivr
orl
dec
out
hlt
sbb
enter
aas
aad
daa
gs
push
enter
sahf
mov
fildl
push
stos
inc
lcall
pop
mov
mov
fistpl
daa
mov
imul
mov
xlat
sub
lock
xor
dec
out
xchg
dec
es
push
pop
ljmp
gs
sbb
add
icebp
pop
sub
out
inc
daa
fiaddl
in
push
xor
xor
faddl
leave
enter
add
adc
loope
adc
xchg
pop
test
fdivp
xchg
fisttpll
stos
fldenv
dec
pop
mov
call
test
xchg
xor
jle
dec
cmc
out
mov
outsl
pop
mov
or
ret
pop
xor
stc
loopne
xor
adc
xchg
mov
in
loopne
lcall
wrmsr
aam
out
fsubp
add
mov
mov
xor
std
jnp
xor
pushf
cmpb
inc
dec
sub
dec
push
sbb
jb
stos
nop
lock
fstl
ret
lret
outsb
jp
data16
scas
imul
cmp
lods
jl
std
scas
rcrl
shlb
dec
mov
ljmp
or
leave
sub
sbb
xor
test
insb
add
lahf
decb
xchg
mov
ret
rorb
add
push
fwait
xchg
or
shrl
in
mov
rol
inc
inc
mov
push
ret
dec
pop
movzwl
jge
repnz
xlat
dec
lds
xchg
fidivs
inc
push
lea
adc
dec
arpl
mov
mov
cmpsb
cmp
pop
mov
or
addr16
sub
stc
cmp
lret
shl
jg
aam
shrb
xor
aas
std
xchg
testb
cmp
icebp
loop
stos
inc
and
jle
mov
cmp
es
add
pop
adc
stos
test
pop
gs
xchg
jle
jnp
inc
jnp
xchg
loop
or
lcall
and
add
xchg
mov
ds
dec
lock
test
bnd
mov
arpl
arpl
mov
add
adc
adc
or
cmp
sub
test
cmc
repz
cs
mov
repnz
cltd
notl
jne
scas
add
inc
xor
inc
sbb
push
xor
pushf
jbe
push
daa
negl
or
dec
mov
insb
and
hlt
in
xor
mov
test
sub
mov
test
mov
stc
stos
mov
cmp
cwtl
loop
jns
fldenv
pop
dec
incb
dec
fdivl
mov
mov
paddsw
aaa
pop
imul
je
lods
out
imul
and
lea
std
jo
and
jmp
mov
hlt
les
lcall
loopne
pop
mov
pop
inc
cmp
pop
xor
push
mov
fimuls
leave
inc
cmp
jne
and
and
ss
mov
xorb
sub
inc
les
inc
push
cltd
je
repnz
cltd
sub
cs
xor
es
in
xchg
and
movsl
pop
xor
js
jl
ret
movsl
or
dec
pop
dec
or
sub
mov
sbb
jmp
sbb
shll
ja
jmp
sub
or
stc
mov
xchg
cmpsl
or
push
xchg
jne
fistpl
add
dec
sbb
lret
mov
xchg
adc
pop
imul
and
mov
shll
mov
xor
fisttps
data16
jge
movsl
xchg
and
arpl
adc
test
inc
sti
add
mov
push
pop
scas
cs
xor
inc
sti
xchg
ja
xchg
and
mov
das
outsb
adc
xchg
push
mov
js
sub
dec
nop
pop
test
aam
outsb
test
mov
das
sti
imul
vcvtdq2ps
sbb
pushf
jae
imul
and
outsl
loop
loopne
cmc
dec
ficoml
xchg
lods
je
sbb
dec
pop
pop
mov
imul
sub
daa
js
in
add
in
push
clc
or
orb
pop
cmp
pop
loope
jl
mov
fcoml
shlb
sbb
cmp
mov
mov
les
lahf
ds
and
push
push
std
or
xchg
and
mov
iret
imul
std
mov
imul
aad
aaa
mov
push
add
idivb
mov
and
cs
lsl
add
cli
sub
push
lret
xchg
sbb
scas
inc
arpl
xchg
pop
out
adc
add
out
test
jp
scas
pop
add
xchg
cmc
cmp
mov
scas
loopne
sbb
jmp
sbb
leave
dec
gs
mull
push
and
call
rcrb
nop
xchg
inc
std
pop
jns
push
dec
push
out
mov
or
lret
push
jo
ret
daa
sti
ret
gs
test
jnp
jmp
add
int
bound
mov
mov
test
cmpsb
add
test
sbb
pop
mov
inc
sub
or
arpl
fnstenv
fisubl
daa
push
stos
mov
fnsave
push
and
inc
popf
mov
lea
mov
or
popf
adc
aaa
push
rorl
test
mov
mov
adc
jp
mul
in
cld
sbb
add
sub
insb
add
test
mov
mov
mov
xchg
jae
xchg
movsl
cmpsb
mov
rolb
and
add
push
push
lea
dec
adc
loop
push
imul
xor
dec
and
inc
lods
fucomi
loope
mov
in
or
testb
lcall
imul
test
add
bnd
out
lret
repz
in
andl
pop
dec
fmuls
enter
adc
mov
mov
test
data16
lcall
jne
jns
sbb
dec
cmpsl
mov
stos
xchg
int
popf
jne
sbb
dec
cmp
cwtl
nop
fdivs
adc
stc
inc
pushf
jg
adc
push
cltd
mov
sub
xor
aam
cmpsb
cli
mov
mov
cld
mov
subl
xor
mov
dec
out
push
outsb
jl
pop
mov
mov
inc
data16
xor
inc
arpl
dec
and
mov
test
jbe
pavgw
or
sub
repnz
jb
sub
xchg
xor
jg
hlt
mov
mov
sti
push
add
mov
imul
es
push
and
push
and
and
xchg
push
loop
popa
ret
sbbb
push
in
mov
sbb
or
imul
mov
sub
popf
imul
cld
mov
fldl
mov
call
xor
aas
loopne
mov
jae
or
pop
cmp
pop
add
push
lret
arpl
jp
mov
dec
and
mov
add
dec
mov
shl
insb
and
jp
repnz
pop
popa
jle
push
stos
es
test
push
in
cmp
cli
xchg
arpl
mov
dec
pop
push
mov
fists
pop
pusha
rolb
lahf
or
rcrl
mov
cmpsl
testb
pop
ds
xchg
das
lahf
add
cmp
and
insl
arpl
lcall
mov
pop
stos
lods
xor
xchg
jns
cmp
sub
jnp
adc
xchg
add
inc
jmp
or
adcb
mov
pop
xchg
xor
lds
ret
jne
test
or
jmp
orl
xlat
fsubr
rclb
lods
jae
add
pop
dec
repz
and
push
xchg
jge
xor
iret
dec
dec
pop
jge
stos
inc
int3
xchg
mov
loop
lods
lcall
in
imul
lds
sbb
sbb
adc
xor
push
xchg
arpl
popa
inc
inc
push
mov
cmp
inc
mov
lock
dec
fbstp
insb
xlat
xor
mov
mov
cmpsb
cmp
lods
daa
rclb
mov
dec
and
imul
pop
mov
push
jb
lds
sub
jg
push
std
jecxz
cs
push
and
xor
sbb
xor
aad
adc
or
out
fldt
out
nop
dec
fnstsw
fisubl
jecxz
xlat
mov
mov
cmp
ds
jb
cli
jne
sbb
lock
adc
mov
xor
es
push
insl
xchg
fucomip
push
pop
xchg
jge
ja
mov
jp
and
pop
fsub
fsubrs
pop
testb
jge
or
and
dec
notl
push
sub
popa
cmp
pop
call
fsts
add
xchg
aas
popa
ficomps
icebp
ss
and
pop
out
jle
in
movhps
call
adc
cmp
bound
lahf
cld
xchg
lods
cs
mov
sbb
inc
xor
mov
fisttpll
cmpsb
push
cltd
pusha
jecxz
add
test
stc
adc
mov
hlt
shll
xchg
shlb
dec
loop
aam
xchg
push
push
or
icebp
ljmp
fwait
push
and
jnp
sub
inc
movsb
push
icebp
mov
pop
add
pop
sub
mov
scas
mov
stos
pop
jl
ret
loope
push
sti
lods
les
repnz
pop
loope
int3
call
rcrl
pop
and
hlt
pop
std
and
mov
sbb
add
push
mov
or
cmpsl
loop
push
sub
pop
mov
dec
cltd
mov
pop
mulb
nop
sbb
or
jecxz
adc
and
mov
push
lret
xor
cld
xchg
add
fstpl
enter
sbb
inc
mov
fcoms
pop
and
sysexit
pop
mov
das
popf
jb
shll
rclb
hlt
dec
pop
es
subb
es
mov
les
std
es
sbb
xchg
les
sti
sub
jnp
in
repnz
rorl
jmp
outsb
pop
dec
out
mov
ret
movsl
inc
call
aas
dec
iret
icebp
pop
adc
or
push
imul
sbb
cmp
jecxz,pt
notl
lods
mov
cwtl
inc
cmpsb
enter
inc
or
roll
movsl
xchg
stos
mov
sub
sub
repnz
cmpsl
pop
jmp
push
pushf
jmp
mulb
aas
pop
pop
adc
cmp
add
push
lcall
mov
jo
cmp
jns
add
push
out
ss
sub
dec
dec
dec
inc
orb
fmull
mov
pop
fwait
pop
sub
cs
bound
in
int
fs
js
insl
jmp
mov
and
dec
mov
test
popa
cmp
lea
imul
clc
popa
jge
imul
or
out
or
adc
or
scas
inc
sbb
inc
repnz
lds
jno
cmpsb
daa
cli
push
sbb
pop
fadds
inc
cmc
enter
sub
aas
leave
sub
test
ss
cmpsb
in
adc
push
fsubs
sbb
xchg
mov
or
mov
cwtl
add
iret
popa
pop
add
lret
sbb
pop
inc
fisttpll
xchg
fs
sub
sahf
xor
cmpsl
mov
sub
xchg
adc
adc
les
mov
push
leave
je
jae
dec
lods
insb
fisttps
rorl
fsts
jnp
xchg
inc
scas
and
popa
roll
cmp
pop
outsb
inc
cwtl
addl
mov
lock
fiadds
fsubp
jge
es
pop
add
cmp
pop
shrl
adc
out
and
mov
jge
stc
sbb
ret
daa
xchg
pop
test
movsl
out
and
repz
rolb
push
call
lds
rorb
addr16
xor
and
sarl
aaa
imull
dec
scas
call
shrl
cmp
pop
cmpsl
aam
xor
iret
push
inc
pop
gs
pusha
xchg
repnz
movsl
test
cmpsb
in
pop
xor
cli
or
call
mov
icebp
leave
mov
jnp
xor
or
jnp
mov
pop
fwait
push
movsb
in
adc
fiaddl
inc
dec
jnp
nop
out
fisttpl
int3
mov
sbb
inc
cmpsb
pop
xchg
cmp
jecxz
loopne
mov
js
clc
and
push
mov
sbb
scas
pop
addr16
mov
cld
inc
xor
sub
or
mov
pop
push
lods
mov
je
imul
mov
dec
xchg
repz
test
cmpsl
dec
jle
cmpsl
imul
lods
int
outsb
decl
sbb
loopne
repnz
rcrb
sub
mov
jns
push
sbb
or
sbb
xchg
mov
sbb
cwtl
cwtl
bound
cmp
mov
xor
movb
mov
pop
and
inc
xor
jne
jg
inc
pop
mov
cmpb
jle
mov
cwtl
cmp
jo
stos
fwait
push
inc
test
inc
rep
xor
mov
mov
mov
inc
cltd
fstps
or
loope
sub
push
out
sub
sbb
fwait
xchg
inc
fsubrs
and
jmp
fstpt
out
pop
push
xchg
loop
and
cmp
pop
xchg
mov
sbb
test
and
lret
dec
and
jecxz
or
arpl
movsb
sub
and
sub
popf
bound
inc
pop
je
mov
add
in
rcl
xchg
pop
inc
repnz
or
shl
int
mov
pop
xchg
mov
jbe
sub
adc
adc
in
jne
shl
and
inc
dec
lcall
adc
fdivrs
rcrl
loope
inc
call
test
dec
xor
loope
gs
mov
xor
fwait
test
xchg
sbb
jp
dec
pop
sub
popf
adc
cwtl
out
sub
movups
and
ret
push
mov
adc
xchg
add
clc
addr16
cmp
clc
enter
test
mov
sbbb
sub
fs
pop
aam
dec
push
inc
xlat
testb
mov
push
hlt
ja
mov
mov
das
push
jno
push
mov
nop
rol
flds
cmp
cmp
test
andb
dec
add
sbb
mov
andb
popf
mov
xlat
movsl
adcl
clc
fucomi
lods
les
pusha
xor
aam
mov
mov
push
jbe
sbb
and
push
cmp
jnp,pn
add
dec
out
mov
icebp
adc
jbe
mov
rol
outsl
imul
in
push
cltd
cmp
mov
mov
fmul
xchg
dec
pushf
test
and
xchg
sti
test
dec
fbld
jnp
mov
add
int
push
add
aaa
ror
and
dec
xchg
in
push
cmp
sub
iret
mov
mov
push
pop
mov
outsl
push
and
xor
loopne
push
adc
xchg
clc
cmp
push
pop
clc
sbb
mov
push
jecxz
aas
outsb
test
or
xchg
sti
dec
lahf
or
test
dec
movsl
or
pop
lcall
and
xor
mov
mov
xchg
bound
addr16
and
out
or
in
pop
pop
jno
enter
and
aas
jae
push
or
fidivs
add
pop
jne
mov
inc
push
in
in
xor
leave
imul
add
jns
sub
enter
fldcw
sbb
pop
dec
mov
mov
add
clc
and
inc
jg
jmp
push
and
xor
cmc
test
jno
fadds
jmp
je
in
clc
pop
shrl
ret
or
mov
jne
repnz
pushf
in
pop
icebp
xchg
mov
lods
inc
lahf
pop
adc
push
jbe
ret
in
xchg
fldenv
clc
xchg
sbb
jle
jle
cmp
push
jns
mov
push
adc
mov
lds
xor
push
mov
jno
cmpsb
jmp
out
cmp
push
sbb
mov
jecxz
pusha
ds
sub
testl
push
ror
xchg
andl
push
xor
sti
iret
je
cld
lock
or
adc
jno
fsts
sub
lods
cld
xor
dec
inc
loopne
adc
push
pop
pop
push
cmp
test
push
and
dec
ja
repz
clc
xchg
jmp
pmulhuw
mov
mov
mov
adc
mov
mov
stos
mov
mov
adc
notl
shlb
sbb
push
clc
pop
les
jb
into
data16
xchg
flds
sti
aaa
jae
pop
popf
xchg
inc
repnz
cmp
push
popa
push
pop
pop
mov
jle
mov
int3
jnp
jge
cmp
sub
inc
int3
insb
xlat
fldenv
push
gs
ds
xchg
jle
add
out
bound
mov
aad
imul
pushf
xlat
fildll
mov
sbb
ret
shll
addr16
or
and
aad
xchg
lods
rcl
cs
test
inc
mov
je
fldenv
sbb
adc
movl
sbb
es
mov
outsb
jecxz
leave
adc
pop
mov
mov
out
and
xor
mov
xor
shrb
in
mov
bound
sbb
sub
adcb
stos
lds
mov
cmp
mov
pop
addr16
pusha
add
dec
pop
test
cmpsl
and
mov
cwtl
cmpsl
xchg
dec
pop
scas
sbb
or
stc
add
xor
adc
cmp
or
cmpsl
push
inc
adc
sbbl
push
inc
pushf
daa
test
and
rclb
xchg
fimuls
inc
andb
xchg
std
mov
jge
lock
movhps
hlt
imul
loop
push
aad
movsb
les
or
mov
lock
adc
dec
lret
daa
int
pop
mov
pop
mov
dec
or
xchg
out
jge
pop
out
or
popa
pop
add
fiaddl
popa
cmp
and
inc
jns
popf
jecxz
mov
mov
or
aaa
shll
lret
in
clc
clc
xchg
bound
in
cmp
aas
sub
movsb
outsl
int3
push
jo
sbb
imul
cmp
mov
cmp
rcr
xchg
xchg
push
lret
sub
lret
call
mov
test
insl
bound
mov
cld
loopne
pop
dec
xor
jle
andb
jno
jmp
mov
sub
stos
out
addl
push
nop
cmovp
pushf
jo
pushf
xor
jae
es
mov
dec
jbe
inc
loope
cltd
sbbl
movl
int3
xchg
add
mov
inc
adc
movsl
rclb
mov
mull
scas
mov
and
xchg
xlat
fisubs
mov
stos
in
xchg
arpl
pop
dec
sbb
orb
cmp
cs
sub
fnstenv
xchg
push
fistps
mov
pop
insl
xchg
shr
and
push
loope
out
mov
shl
xchg
adc
cli
mov
push
outsb
pop
stos
jo
xor
ud0
sbb
dec
movsl
icebp
cmp
lahf
xchg
mov
dec
mov
pop
sbb
insl
loop
sbb
sub
jg
adc
mov
xlat
fwait
in
aad
sub
adc
xchg
dec
bound
or
xor
std
inc
inc
xchg
cld
outsl
adc
or
sbb
cli
jne
push
insl
mov
xlat
test
adc
push
xchg
pusha
mov
lods
xchg
jb
std
push
arpl
add
rcrl
jno
jle
push
sub
in
out
add
daa
xor
jecxz
push
xor
repz
jo
mov
mov
xchg
mov
cltd
cli
scas
dec
xor
scas
ljmp
movl
lock
xchg
and
push
ds
inc
fwait
push
mov
mov
mov
ret
pop
scas
adc
mov
iret
in
aaa
sbb
pop
inc
rcr
mov
shl
fwait
jp
icebp
les
or
xchg
jg
sub
lds
cmpsl
in
test
out
insb
scas
inc
mov
push
addl
pop
xor
mov
adc
jbe
test
pavgb
cmp
mov
add
sub
cmp
cmp
mov
lods
mov
ret
es
inc
dec
xor
rcll
mov
test
aad
mov
in
jo
jge
push
mov
movsl
dec
jo
pop
jne
or
inc
mov
scas
pop
ss
jecxz
sbb
cmp
sbb
and
arpl
inc
ds
lods
pop
push
pop
or
mov
sbb
and
xchg
mov
mov
stos
pop
adc
addr16
orl
pop
pushf
std
push
ljmp
push
hlt
mov
sbb
scas
jecxz
mov
mov
mov
adc
adc
fildll
test
addr16
and
repz
sub
mov
cmc
xchg
repnz
sub
dec
xor
push
cmp
pushf
lret
pop
cli
ljmp
rcrb
cmp
inc
inc
ret
jle
fwait
sub
int
fsubl
cli
jo
mov
lods
fwait
pop
lock
out
push
and
scas
outsb
jle
pop
into
and
ljmp
dec
or
pop
sbb
in
mov
add
and
xor
mov
imul
daa
leave
cmpsl
xlat
jl
out
enter
out
js
or
add
adc
jl
outsl
xor
mov
popf
je
sahf
add
test
sbb
inc
mov
add
xchg
dec
and
mov
cmp
cltd
test
cmpsl
andb
cli
pop
addl
adc
mov
jmp
fwait
mov
rcrb
rcrb
mov
xor
hlt
aas
sahf
sub
inc
dec
xchg
sti
jmp
int3
cld
adc
arpl
jmp
xlat
in
cs
lods
test
fstp
mov
or
push
loop
pusha
push
cwtl
pusha
xchg
mov
in
clc
mov
cmp
lds
xchg
stc
mov
and
adc
mov
cld
daa
pop
test
cmp
sbb
inc
inc
push
adc
sub
mov
sub
cmpsb
subb
je
xor
push
leave
dec
push
aaa
movsb
add
inc
mov
fldt
xchg
xchg
shl
leave
test
dec
jecxz
mov
mov
dec
out
stc
in
add
imul
sbb
inc
cmp
push
add
push
push
icebp
pop
repnz
mov
aad
out
jl
mov
cmpsl
sbb
jl
scas
dec
rorb
inc
loopne
stos
push
loope
push
xchg
enter
mov
cmp
mov
cwtl
in
out
addr16
out
cmp
add
loopne
add
add
das
rcr
outsl
les
insb
call
dec
out
inc
pop
sbb
dec
sbb
adc
push
sbb
ja
pop
scas
out
ffreep
cltd
in
orb
inc
sbb
jl
sbb
aam
shrl
testl
adc
addr16
cltd
or
xchg
sbb
or
add
pop
pop
outsl
add
sub
pop
cs
in
ret
in
and
rorb
or
outsb
cli
stos
mov
cs
loope
dec
insb
mov
repnz
aas
pop
mov
stos
jnp
inc
jmp
dec
fwait
out
xchg
out
mov
push
iret
adc
xchg
sbb
data16
pop
pop
repnz
push
flds
testb
jne
jmp
inc
mov
out
ss
fiaddl
jbe
sbb
sahf
inc
pop
jge
dec
push
and
adc
sbb
je
push
xor
jbe
jp
cmc
and
dec
push
call
mov
sub
mov
mov
js
cmp
add
pushl
mov
loopne
sarb
dec
mov
fcmove
pop
inc
cs
mov
insb
mov
pop
sbb
adc
push
jmp
xor
fwait
addb
in
sbb
mov
xor
xchg
pop
xchg
loopne
sub
mov
jnp
adc
mov
std
push
inc
cltd
jae
scas
push
jmp
and
xor
enter
push
insb
in
inc
sub
push
test
mov
push
iret
inc
cmp
push
icebp
test
mov
mov
int3
cmpsb
aas
rclb
jne
cmp
mov
mov
push
jle
gs
mov
adc
in
mov
and
or
stos
mov
div
pop
jb
push
and
shlb
nop
push
lods
jb
loopne
stos
stc
je
sbbb
xor
xchg
inc
fsubp
mov
insl
cmp
jmp
cwtl
dec
cmp
mov
out
addl
or
inc
leave
and
sub
or
inc
add
xchg
push
and
dec
iret
pop
mov
jb
cmp
into
mov
add
stos
out
repz
loop
xchg
pop
inc
push
push
lea
clc
xor
cmpsb
ja
aam
mov
adc
scas
std
lahf
negb
daa
or
insl
mov
xchg
mov
cmp
cld
mov
jne
sbb
push
ret
out
rclb
es
addps
mov
in
loopne
ret
dec
dec
push
out
inc
xlat
xchg
cltd
out
cltd
mov
lea
jl
out
addr16
adc
hlt
orl
push
ja
popl
stos
gs
int3
mov
push
lret
hlt
popa
clc
and
cli
xchg
scas
sub
mov
sbb
les
inc
sahf
xchg
enter
nop
dec
arpl
outsl
cs
ss
cs
arpl
sbb
mov
pop
lock
jbe
mov
sbb
rol
pop
cltd
sbb
enter
pusha
iret
pop
adc
call
repz
ljmp
ds
pop
push
rcrl
shlb
mov
jl
mov
dec
stos
addr16
xor
cmp
out
movsl
push
push
inc
inc
adc
enter
add
xchg
sbb
xor
test
mov
xchg
xor
in
or
ja
inc
add
mov
xchg
and
div
mov
cli
pop
js
pushf
adc
xchg
ret
sub
rorl
in
xor
hlt
out
fldl2t
cmpsl
cmp
testb
mov
aas
dec
sub
je
or
pop
jae
outsb
sbb
repnz
dec
pop
cltd
repz
mov
cld
add
xchg
pop
sbb
repz
cmp
mov
pop
aaa
pop
xor
push
out
out
ljmp
loope
out
dec
cmc
pop
repnz
test
and
pop
push
sub
xchg
gs
arpl
scas
loope
pop
dec
sub
icebp
js
mov
cmp
push
cmc
or
xlat
push
movb
sub
sbb
sbbl
mov
hlt
int
test
enter
cs
mov
mov
mov
mov
add
xchg
pop
lea
fwait
push
mov
jp
pusha
cmpl
mov
test
cmp
dec
in
mov
call
add
rcrb
jo
xor
jae
sti
cmp
pop
add
cmc
icebp
cld
cmp
push
mov
push
imul
ret
xor
push
cmc
pop
jg
xchg
pop
cmp
shr
test
gs
mov
filds
pop
scas
or
in
ja
sti
imul
pop
xor
sbb
les
dec
popf
out
gs
jo
popf
mov
enter
test
fsubrp
pop
lods
sbb
clc
outsl
and
sbb
ds
out
fsubrp
hlt
push
fidivrs
adc
sbb
push
popf
mov
ja
or
subb
clc
lahf
xchg
nop
or
jae
scas
cmp
das
movsb
jns
shlb
adc
repz
mov
and
xchg
vpsubq
sub
mov
daa
jmp
push
inc
test
mov
ja
fsub
pop
lret
call
push
dec
jno
dec
daa
clc
push
fdivrl
add
out
lods
das
sti
fsubrs
fldt
jp
test
stos
xor
push
pop
popa
js
xchg
roll
in
xor
pushf
push
movsb
jecxz
popa
into
xchg
add
ljmp
imul
pop
jo
mov
pop
add
ret
in
ret
int3
call
inc
addr16
imul
mov
lds
mov
lock
sbb
xchg
jns
cmp
mov
repnz
leave
sbb
inc
jo
pop
sub
out
and
mov
aaa
pop
or
mov
arpl
pop
xchg
cmp
mov
cmp
xchg
popf
repnz
adc
push
jmp
adcl
jmp
add
xchg
add
cmpsb
or
sbb
mov
call
and
aaa
mov
push
arpl
sbb
mov
adc
mov
scas
fsubl
fistpl
cmp
push
push
cmpsb
nop
pop
mov
aam
mov
cmc
or
mov
push
shll
insb
pop
xorl
xor
inc
rol
popa
clc
in
mov
xchg
fmuls
jg
dec
lods
fistl
out
sbb
popa
lret
xor
xor
cmc
aam
push
outsl
daa
xchg
mov
pop
jb
xor
mov
fnstenv
cmp
loope
fildll
cmp
stc
dec
cltd
movsl
push
ja
xchg
mov
and
sub
xlat
in
jns
outsb
jo
sbb
jne
add
lock
jns
pop
dec
int
jecxz
mov
iret
sbb
add
cmpsb
dec
dec
mov
icebp
mov
dec
js
subb
push
cmp
dec
sbb
fadd
mov
ja
add
call
xchg
and
push
loop
xor
stc
jl
out
jbe
pop
sub
and
xchg
scas
std
rclb
jb
int3
das
fcmovnu
outsl
or
push
fnstsw
xlat
outsb
jmp
sbb
mov
insb
or
mov
and
sub
js
orb
ret
hlt
es
adcb
ljmp
data16
rcrl
cmpb
pop
mov
sub
ljmp
or
dec
movsl
in
into
jge
bound
sbb
es
arpl
push
cwtl
in
or
fs
test
les
scas
daa
lret
in
mov
adc
pop
mov
jnp
cmpsl
pop
jg
pop
dec
mov
arpl
dec
pop
adc
stc
and
xor
lret
hlt
mov
test
fdivs
pop
pop
notb
sbb
cmp
enter
das
xchg
sbb
movsb
inc
dec
mov
enter
aas
or
popl
or
pop
mov
les
data16
push
rclb
loope
out
xchg
push
call
ret
outsl
or
pop
ds
jecxz
xor
sbb
adc
scas
jle
cmp
lahf
ss
in
mov
in
sub
and
jno
rcrl
rcrb
adc
fs
add
shlb
pop
cmp
pop
inc
in
aaa
lock
and
stos
or
das
arpl
add
cwtl
push
cmp
push
stc
or
jge
repz
pushf
stc
dec
cmp
cmp
mov
push
dec
add
negb
test
shr
mov
scas
mov
push
mov
ficompl
jecxz
xchg
imul
or
push
mov
in
test
jmp
jne
sbb
inc
sub
jbe
sbb
sahf
push
cmp
addr16
cmpsb
aad
lea
xchg
sub
ja
inc
dec
loope
out
ss
dec
mov
xchg
cmp
pop
mov
and
loope
test
xor
push
xchg
cld
lea
xchg
pop
fdivr
adc
lods
cmpsb
pushf
sti
push
inc
in
push
jae
jg
int
pop
imul
inc
jne
cld
insb
add
hlt
mov
mov
xchg
cs
mov
aas
je
lds
inc
out
jnp
movsb
icebp
jmp
or
or
sti
iret
or
dec
dec
pop
jae
xor
lods
addr16
scas
xor
sub
data16
mov
in
and
xor
lcall
test
xor
mov
leave
xor
cli
shrl
or
cmpsb
sbbl
cmp
insl
and
movsl
les
push
push
in
push
push
xchg
popa
clc
ret
sub
cld
sbb
cltd
mov
xchg
push
pusha
mov
faddl
in
jge
in
xchg
popf
jo
inc
loop
inc
adc
cmpsb
lock
jp
add
lahf
adc
jge
lods
jb
fidivrs
sub
xchg
insb
jl
mov
cmp
ja
les
repnz
mov
scas
loop
loopne
ficoml
jno
pop
and
stos
sbb
leave
movsl
cmp
cwtl
xchg
enter
aaa
addr16
push
jl
inc
fistpl
push
fnstenv
std
cld
mov
loope
repz
test
dec
stc
cmp
cwtl
imul
adc
loope
xor
fnstenv
or
fdivs
scas
rcl
pop
cld
push
jl
inc
loop
and
jno
mov
clc
js
fwait
cld
outsl
cmc
out
sub
inc
xor
inc
loop
imul
test
mov
pop
sbb
jb
test
mov
and
clc
pop
imul
push
jne
cmp
enter
insb
test
sbb
sub
out
scas
es
mov
inc
cli
xlat
outsb
pushf
jecxz
jae
mov
test
mov
pop
and
andl
test
lret
mov
iret
inc
gs
lcall
int
shl
arpl
xor
xchg
js
push
xor
das
inc
xchg
inc
adcb
out
in
cmp
mov
xchg
ja
mov
aad
mov
push
jb
cs
push
mov
jle
push
xchg
jg
jl
add
mov
mov
out
out
jae
xchg
cld
sub
daa
ret
shrb
and
add
cmp
pop
mov
mov
insb
sub
adc
mov
cmp
xlat
insl
bound
les
mov
or
test
mov
jg
and
ja
idiv
cmp
xchg
xchg
jmp
fsin
out
imul
xchg
jnp
xchg
push
xchg
xor
push
cwtl
bnd
push
inc
cs
inc
scas
xor
adcb
cmp
repz
cwtl
loopne
nop
stos
sbb
out
pusha
std
sub
dec
popa
add
cmpsl
mov
jp
jl
cs
mov
sbb
add
xor
cmp
pop
push
or
add
mov
scas
mov
mov
je
push
push
mov
and
mov
fdivs
dec
push
sahf
add
punpckhbw
icebp
daa
ss
add
push
or
mov
mov
mov
popa
cld
rorl
inc
pop
cli
jns
sub
pop
adc
mov
cmpsb
or
es
out
int
lods
add
inc
xchg
call
sbb
decl
adc
sti
stos
mov
sub
add
cmp
repz
xlat
in
in
mov
xchg
xchg
push
jne
addr16
repnz
dec
rol
in
mov
es
shl
testb
adcl
add
inc
xor
lret
or
mov
pop
out
push
or
mull
sub
pop
insb
inc
int3
push
out
mov
sub
xlat
and
lahf
andl
out
jb
add
jbe
ljmp
mov
push
and
outsb
lods
dec
push
mov
dec
es
ret
mov
inc
mulb
imul
xor
in
sbbl
movsl
xchg
pop
xorb
sbb
pop
ds
test
mov
clc
inc
es
pop
test
add
push
cli
adc
aad
dec
push
jg
clc
arpl
xchg
mov
ss
adc
test
int3
pop
push
pushf
add
pop
adc
pop
decl
push
pushl
fimull
sti
sub
sub
sbbl
in
test
dec
sub
sbb
rcrb
scas
test
xchg
sub
jmp
xor
cmpsb
sub
mov
push
jecxz
pop
and
in
dec
icebp
mov
or
ds
loope
inc
pushw
add
ja
push
sti
adc
andl
adc
jb
add
insb
xchg
dec
popf
pop
cmp
outsl
sbb
pop
repnz
test
push
out
jno
mov
call
insl
jge
xchg
add
cmp
and
and
sbb
cli
pushf
xor
fucomip
lods
clc
push
loopne
fmull
ret
bound
fstpt
pop
aam
dec
push
hlt
cmpb
rorb
dec
push
out
pusha
ret
out
xchg
ja
hlt
lret
shlb
add
enter
mov
int
add
inc
sbb
stc
xor
ret
lock
jecxz
jmp
mov
jne
icebp
or
loope
cmp
test
dec
inc
out
insl
dec
sbb
jle
leave
fildl
and
rcrl
cmp
jb
cmpsb
mov
xchg
mov
dec
enter
adc
int3
mov
fisubrs
adc
dec
inc
popf
repz
stos
mov
shll
or
adc
enter
fwait
mov
sti
cli
cmpsl
xor
push
imul
push
push
sbb
rolb
das
cmpsb
xchg
push
adc
cmp
mov
lahf
sbb
inc
repz
inc
loopne
push
xor
add
nop
mov
sbb
xor
enter
jge
stos
inc
sti
pop
or
jno
stc
adc
imul
mov
jecxz
incl
nop
mov
stos
inc
dec
aam
pop
adc
add
lcall
pop
je
lcall
sub
add
and
lock
aam
test
mov
sbb
push
popa
cmp
inc
jno
mov
popf
pop
xor
jmp
pop
pop
shll
push
mov
add
and
pop
loopne
adc
xchg
mov
pop
test
hlt
jno
xchg
shrb
or
in
xchg
inc
adc
mov
push
xor
paddsb
mov
addr16
loop
and
cmpsb
ret
dec
dec
jmp
push
loop
or
pop
xchg
mov
dec
ljmp
cmp
pop
inc
out
test
lret
jp
xlat
jno
lahf
pop
xor
scas
inc
add
scas
lcall
testb
orb
and
cmp
bound
test
lods
repz
mov
sbb
jns
imul
out
scas
jo
jae
cmpsl
xchg
xor
repz
push
jne
cltd
xor
fbstp
adc
xor
mov
xchg
push
popf
or
mov
pusha
jns
push
cltd
push
fucomip
test
ss
push
gs
loop
add
test
xchg
stos
xchg
ds
adc
nop
bound
mov
out
push
lock
lret
xor
mov
push
movsl
xchg
sub
lock
adc
js
push
repnz
leave
mov
ret
scas
add
sbb
es
out
ljmp
jecxz
add
mov
xchg
out
jge
scas
daa
adc
mov
sub
int3
jns
cmp
cs
rcl
xchg
imul
pop
sbb
xor
out
enter
fisttpll
sarb
mov
cmc
mov
adc
mov
data16
sti
xchg
pop
es
xchg
negb
cld
lods
hlt
js
scas
movsl
pop
test
jle
or
jle
sbb
pop
jg
or
pop
add
je
xchg
add
dec
in
inc
ds
insb
shl
push
xchg
mov
sub
push
add
mov
adc
dec
insl
lcall
imul
push
clc
test
icebp
repnz
lret
cmp
cltd
divl
cmp
pop
cmp
in
mov
push
or
outsb
mov
adc
mov
aad
roll
mov
pop
icebp
mov
xor
aam
inc
xchg
btr
and
xor
lret
pop
xchg
mov
mov
sub
push
pop
sbbb
mov
xor
mov
decl
test
xchg
mov
iret
sti
jl
dec
push
push
call
xchg
ljmpw
test
outsl
dec
xor
jp
iret
repz
popf
xchg
sbb
shlb
leave
lds
push
into
push
iret
mull
std
push
ret
call
xor
mov
movsl
mov
scas
pop
movsb
addr16
push
mov
into
in
les
mov
pushf
inc
int
stc
iret
popf
push
push
push
xchg
sti
popf
in
clc
pop
mov
pushl
nop
inc
aam
mov
outsl
and
xchg
add
addb
ficomps
or
mov
push
fs
sbb
pop
iret
mov
add
jnp
scas
call
mov
fs
sub
fwait
scas
jl
iret
cmpsb
mov
and
push
inc
sti
movsl
fnsave
std
cltd
imul
out
xor
xchg
jmp
cmp
mov
lahf
sbb
inc
push
cltd
repnz
int
mov
ret
imul
dec
bound
nop
mov
into
and
je
sti
shll
jecxz
out
xchg
test
aas
mov
pusha
dec
pop
cmp
test
ja
mov
add
nop
popf
stc
ljmp
jb
jb
and
pusha
lods
fistpl
dec
mov
cmp
inc
das
cmp
adc
cmp
out
inc
out
jbe
jg
les
and
test
inc
push
cmp
sahf
out
push
scas
call
cld
mov
mov
out
or
push
cmpsb
sbb
cs
inc
or
in
fdiv
jmp
or
imul
andb
out
xor
jbe
cmp
mov
sahf
sub
jl
sbb
pcmpgtd
sbb
adc
and
loopne
xlat
sub
jno
mov
out
and
cmp
xchg
hlt
push
pop
cmp
rcll
out
addr16
sub
dec
jecxz
mov
shlb
test
mov
daa
data16
add
iret
cwtl
pop
sbb
or
pusha
xchg
sub
sub
sub
loop
sub
cbtw
dec
xchg
or
pushf
subb
mov
dec
std
adc
adc
pusha
outsl
cmp
flds
pop
cmpsb
xchg
fistpl
adc
mov
sub
inc
jnp
hlt
inc
mov
adc
xchg
aad
scas
push
into
dec
fildl
hlt
stos
xchg
and
adc
jno
in
or
repz
mov
xchg
fdivs
int3
mov
cmc
cli
mov
sbb
pop
jne
insb
cmc
test
mov
sbb
mov
mov
cli
loope
mov
mov
ds
insb
jo
xchg
mov
in
mov
cmpl
mov
mov
hlt
xchg
mov
jnp
fwait
outsl
jns
leave
imul
jne
pop
adc
ljmp
or
sbb
and
mov
mov
pop
clc
add
xor
push
cmpb
mov
and
adc
cmc
sub
xchg
insb
xor
sti
cmpsl
mov
lds
jo
sub
mov
aad
sahf
push
gs
lret
das
jnp
scas
in
in
fadd
sbb
lret
sub
idivb
ret
pop
insb
push
push
xchg
pop
xchg
mov
or
pop
xchg
int3
rcll
cs
clc
iret
xlat
jg
mov
add
sahf
in
shl
insl
cmp
cmp
xor
scas
nop
xor
jns
int
test
out
lret
movsb
xchg
leave
mov
lret
imul
sti
mov
fdivrp
clc
or
clc
xchg
rcr
pop
jo
mov
and
cltd
aaa
loopne
aaa
outsl
loop
dec
cmp
adc
int
lahf
push
jnp
mull
push
pop
aam
popa
popa
xchg
mov
pop
xorb
aas
sbb
mov
jmp
mov
leave
cmp
inc
xor
shr
and
add
dec
pop
xchg
jmp
add
jmp
add
push
xchg
shrl
lods
mul
add
pop
xchg
jbe
mov
pop
insb
add
sub
dec
sbb
pop
int3
mov
daa
clc
push
addr16
fwait
pushf
enter
sbb
jle
stos
mov
pop
jge
mov
xor
iret
loope
sbb
jne
jg
out
js
cmp
test
pop
jmp
das
insb
and
aad
dec
cmpsl
ret
xor
dec
xchg
xor
ret
call
in
push
mov
andb
leave
je
out
cmpb
nop
push
inc
mov
sahf
mov
sbb
cmp
xor
and
dec
ret
push
data16
in
aad
dec
jb
jp
pop
js
cwtl
mov
leave
xchg
mov
fwait
imul
test
in
iret
mov
je
arpl
imul
mov
sub
aaa
adc
mov
jge
xchg
and
ss
jno
in
cltd
dec
clc
ret
repz
xchg
outsl
mov
inc
push
mov
push
test
cmc
fdiv
fists
lds
mov
fisubrs
daa
mov
push
call
sbb
rolb
push
loopne
pop
pop
scas
out
movl
lods
fdivp
aam
push
int3
loope
pop
add
in
inc
dec
dec
inc
sub
xchg
add
mov
inc
test
add
xchg
test
scas
call
pop
adc
pop
sub
xchg
jne
sbb
sbb
cli
lret
jge
lcall
test
add
pop
rcrl
cmp
mov
xchg
mov
mov
imul
sahf
jecxz
inc
pop
jnp
loopne
clc
pushf
in
mov
or
int3
mov
pop
mov
fwait
js
mov
sub
adcb
mov
data16
pop
cmp
push
in
in
popl
call
and
fistpl
out
and
jbe
test
mov
jmp
loopne
inc
jns
inc
mov
jno
hlt
push
mov
and
std
iret
cmp
jbe
jp
es
fisubs
je
mov
push
insl
in
ja
mov
push
cmc
mov
pop
aaa
mov
test
iret
stos
push
jle
cmp
aam
mov
out
les
xchg
mov
lods
ljmp
loope
fdivs
decl
xchg
adc
dec
sub
in
int3
pop
lret
add
sub
xchg
sbb
cmp
mov
sbb
pop
push
cmp
loopne
inc
lods
cmc
add
test
scas
jmp
or
daa
xor
mov
jmp
sbb
test
push
mov
loopne
repz
test
and
movsl
in
cmp
insb
mov
pop
es
mov
ret
dec
outsl
push
jle
sarb
gs
jne
push
push
pop
or
ret
jge
outsl
mov
jecxz
add
mov
aad
std
cltd
xchg
out
negb
inc
mov
iret
fstpl
in
and
mov
into
adc
cmovb
sub
mov
and
adc
sub
rcll
mov
dec
pop
cld
js
or
fisubrs
loop
push
and
rcrl
js
jl
sub
ret
xchg
sti
sbb
cmp
cmp
je
mov
cli
adc
popa
clc
pop
xor
fcmovnu
inc
fistl
imul
rcr
sbb
incb
and
in
sub
mov
sbbl
xlat
inc
arpl
jns
cmc
pop
sub
mov
mov
fwait
xchg
jmp
cmp
mov
cmc
pop
mov
jns
pushf
inc
and
cs
jle
xchg
pop
hlt
je
fnsave
dec
addr16
jb
pop
lahf
push
add
adc
cmpsb
dec
outsb
or
test
sbb
fucomp
sahf
daa
mov
adc
ss
addr16
ret
and
lret
inc
dec
loope
dec
xchg
in
movsb
sbb
lret
ret
cld
mov
or
divl
lret
lahf
xchg
mov
fisttps
imul
cmp
xor
clc
insb
jbe
movsl
outsb
cmp
fistpll
hlt
xchg
and
iret
mov
adc
mov
insl
cmp
jle
sbb
mov
imul
or
pop
mov
inc
cmpsb
gs
out
jge
daa
in
jl
and
adc
mov
mov
pop
aaa
ret
scas
aad
xchg
pop
rorb
add
movsl
leave
in
mov
adc
lods
inc
jo
cs
fdivrs
ds
cmpsb
cmp
js
shl
and
add
shrb
adc
call
and
imul
xor
and
xor
cmc
add
movsb
pop
hlt
push
out
xor
xchg
lahf
scas
pusha
jae
push
movsl
xorl
mov
add
xchg
dec
ja
mov
fimull
mov
mov
adc
xor
and
sub
popa
clc
or
loope
push
mov
add
mov
adc
cmp
inc
cltd
test
pop
loopne
cld
loope
push
popf
lea
and
jne
loopne
addr16
test
idivb
mov
mov
or
xchg
mov
inc
xor
cltd
push
pop
inc
bound
jge
sbb
outsb
push
orl
scas
inc
scas
decb
pop
push
sub
loope
inc
test
adc
rclb
mov
jo
push
lods
addr16
push
mov
lahf
xor
xsha1
cmpsb
dec
js
mov
jmp
adcl
addl
and
fists
add
xchg
insl
adc
jns
imul
mov
add
xor
push
xchg
fucomi
iret
jnp
and
fucomip
mov
jge
test
rcrb
outsb
jl
push
outsl
not
mov
sti
es
xor
mov
xor
push
je
mov
lods
mov
fsubrl
sti
and
mov
fs
xchg
test
in
pusha
xor
jo
andl
ss
jnp
mov
adc
jo
jg
outsl
loope
pop
sahf
mov
push
es
lea
ss
rcl
fdiv
add
leave
push
mov
mov
add
cs
xchg
sub
pop
cld
dec
dec
cmp
aaa
fidivs
push
mov
fwait
cld
test
int
daa
push
scas
xor
lret
inc
sub
xchg
dec
test
out
jl
mov
sbbl
mov
and
xor
popa
xchg
xchg
inc
cld
or
movsb
fdivs
jne
gs
rol
dec
add
loop
rcrb
mov
outsb
push
mov
cmp
loope
es
leave
sub
lods
rclb
scas
jp
int3
mov
push
jmp
sbb
sbb
inc
mov
cmp
jbe
dec
push
mov
xor
mov
push
das
cmpsl
loope
roll
rol
jnp
inc
movsl
inc
aaa
jbe
hlt
mov
or
ljmp
xchg
test
ja
dec
jle
xchg
adc
inc
popa
mov
push
dec
pop
fiadds
out
xchg
jns
and
push
jge
mov
je
inc
out
jle
js
mov
test
fisubrs
pop
adc
loope
insb
xchg
jle
clc
pop
jge
pop
xor
or
add
xor
inc
mov
jno
nop
aam
pop
lock
leave
adc
test
out
shr
and
sub
in
push
pop
std
pop
cmp
push
jae
sbb
mov
dec
lds
inc
mov
sub
dec
push
fwait
dec
xor
sub
orb
mov
lds
testl
rorl
cmp
mov
and
pop
xchg
adc
pop
jecxz
mov
sub
cmc
shl
int
inc
pop
pushf
repz
and
mov
sub
and
adc
dec
sbb
add
stos
popf
hlt
fwait
les
sub
push
inc
xchg
push
adc
inc
pusha
mov
adc
icebp
add
data16
repz
test
ret
mov
push
mov
jb
add
shr
fiaddl
sbb
pusha
push
mov
mov
insb
in
shrb
and
push
or
int3
mov
adc
imul
imul
pop
jno
push
pop
jle
pop
mov
out
xchg
or
xchg
call
sbb
pop
add
dec
cmp
inc
xchg
imul
mov
or
and
pop
inc
xchg
mov
andl
add
ljmp
jno
push
mov
test
mov
push
lock
call
out
test
push
xlat
aas
loope
and
xchg
test
xchg
xchg
in
icebp
js
jg
les
movsl
test
mov
cmp
int
jmp
mov
sub
cmpsb
mov
pop
sub
xchg
push
cs
lret
les
leave
pop
movsb
xor
inc
out
in
mov
daa
popf
sbbb
fmull
add
sbb
mov
addr16
shlb
lea
or
add
bound
loopne
adc
orb
jmp
imul
jb
mov
mov
aas
dec
cwtl
xchg
sti
xlat
stc
or
sbb
xchg
sub
mov
fsts
add
fistpl
mov
mov
inc
and
mov
mov
stos
sbb
pop
xchg
daa
or
push
xor
mov
adc
dec
add
scas
into
xchg
loopne
sbbb
sub
add
mov
fnstsw
pop
fstpl
mov
sbb
xor
cmp
imul
adc
mov
sub
pop
fdivl
sti
push
in
sbb
out
test
mov
stc
nop
lcall
xchg
sub
dec
mov
sbb
xor
jno
fcomps
and
stc
clc
and
mov
mov
daa
int3
or
xor
sub
in
flds
sub
insl
push
push
jecxz
jp
iret
js
add
adc
cmp
notl
dec
pop
insb
add
sub
lds
decl
xor
icebp
jno
push
data16
dec
out
sti
pop
xorb
hlt
mov
lahf
stos
test
sti
mov
and
cltd
push
xor
stos
sub
xor
push
shr
or
mov
popa
jecxz
xor
popa
xchg
outsl
jge
adcl
mov
outsl
sarl
subl
sbb
ja
jae
adc
mov
sbb
mov
inc
xor
dec
or
movsl
cmp
sub
aad
pop
push
sbb
sbb
insl
in
inc
dec
dec
jmp
cmpl
mov
and
jo
loopne
or
push
in
inc
dec
lcall
pop
lock
dec
mov
shl
cmpsb
mov
pop
cmp
mov
mov
adc
dec
dec
cmovle
pusha
mov
loopne
pop
pop
mov
inc
sub
cmp
push
flds
cmp
pop
fbstp
fstps
fstpl
xchg
mov
pop
repnz
aad
cs
mov
mov
adc
aad
xchg
sbb
out
repnz
mov
inc
or
cmp
sbb
xlat
sub
lahf
cs
imul
dec
into
test
aaa
js
es
xchg
dec
pushf
add
mov
lock
ljmp
jmp
fs
jl
pop
sahf
out
loopne
shlb
mov
aaa
push
or
inc
mov
js
outsb
mov
push
ja
mov
bound
stc
adc
sub
add
jne
push
mov
xchg
out
leave
cmp
sbb
ss
movsb
cmpl
outsl
sbb
jge
mov
push
and
or
cwtl
das
and
pusha
idivl
fdivrl
push
xlat
arpl
pop
scas
lret
jns
dec
pop
push
sub
sbb
fs
adc
mov
call
out
fbstp
mov
cmpsl
ret
jbe
aam
pop
jno
xchg
sub
and
nop
in
mov
push
cwtl
gs
nop
iret
inc
fcmovb
or
xlat
mov
and
popf
jecxz
iret
and
add
add
es
inc
fdivl
sbb
std
fnsave
popa
cltd
push
je
push
push
mov
aaa
inc
xlat
mov
test
mov
or
dec
lcall
gs
sbb
in
sbb
clc
cmp
jp
xchg
mov
pop
repz
cmp
fdivp
mov
xchg
jne
adc
adc
dec
in
test
ljmp
mov
push
xchg
mov
jb
mov
js
mov
xchg
push
or
bound
fnstcw
sahf
fwait
cmp
mov
inc
lods
mov
shlb
adc
sbbl
mov
out
push
fbld
les
int3
bound
ljmp
scas
jbe
lret
bound
cmpsl
jmp
dec
mov
mov
push
adc
sub
aaa
or
fnstsw
dec
jmp
cld
cmpsl
stc
je
fwait
jge
and
inc
ja
push
cli
stos
push
jp
xor
mov
fistpl
js
cmp
std
and
iret
push
mov
or
jmp
xsha1
cmpsb
int
es
add
cmpsl
sbb
mov
xlat
insl
shr
addl
negb
hlt
dec
mov
repz
aad
adc
ror
pop
cs
mov
loopne
sbb
or
jns
nop
sub
fxch
gs
inc
or
cs
fs
loope
sbb
fwait
inc
cld
add
test
mov
hlt
jl
lcall
inc
cmp
cmc
fdivrs
mov
inc
test
and
andb
add
inc
dec
xlat
icebp
test
xchg
xchg
sub
in
add
push
mov
or
cmp
test
rcrb
adc
jns
dec
inc
gs
testb
mov
add
test
and
mov
out
ret
push
ret
fisttpll
cwtl
das
sbb
xchg
adc
cmp
pop
loope
fs
ds
adc
loope
popf
scas
aas
inc
push
out
jae
lret
xchg
or
out
inc
or
mov
xchg
inc
add
inc
xlat
pop
notl
push
repnz
or
lcall
ljmp
mov
xor
test
xor
popa
cmpsb
jo
inc
dec
call
rorb
xchg
dec
push
jle
mov
jns
bound
dec
pop
lods
cmpsb
fdivs
pop
adcl
add
sbb
inc
fcomps
in
je
xchg
aam
add
cmp
xchg
cwtl
stos
enter
fisubs
test
decb
ja
or
pusha
jl
aas
or
fisttps
jbe
sub
lods
lret
sti
mov
sub
add
aas
sub
push
inc
in
dec
das
shlb
in
ret
jnp
aas
lds
mov
add
or
repnz
xchg
mov
adc
mov
mov
lret
jg
enter
pop
or
scas
mov
loope
imul
jnp
cmp
cmp
repz
jg
cmp
mov
dec
jo
jmp
inc
add
dec
mov
inc
xlat
pop
cmpsl
sub
pop
shll
sbbl
enter
jnp
sub
lret
enter
pop
jl
inc
xchg
cmp
push
leave
shl
dec
mov
sbb
mov
fcomip
cmp
push
jo
pop
inc
dec
ds
rcr
xor
mov
mov
jne
movsl
adc
adc
xchg
sub
mov
cmp
and
sub
xchg
nop
push
push
movsb
dec
push
adc
mov
dec
inc
into
mov
imul
pushf
fistpll
mov
jl
push
adc
outsl
inc
ret
xchg
xor
jle
movsl
adc
sarb
xor
aaa
pop
sub
mov
cwtl
pusha
rclb
mov
xor
xchg
push
inc
lret
push
mov
mov
fs
sbb
pop
cmpsb
iret
cmpsb
push
jl
mov
int3
mov
rcl
popl
cld
xchg
mov
adc
push
repz
jl
call
sahf
or
subl
rol
xor
mov
add
divl
cmp
mov
push
xrelease
cmp
push
dec
gs
addl
dec
pop
loopne
mov
push
inc
pop
sti
fnstsw
sahf
stos
pop
insl
and
jno
loopne
out
pop
mov
add
test
sub
mov
jbe
shrl
pop
pop
dec
int3
xchg
push
lods
movl
mov
ds
adc
outsl
pop
imul
push
pop
mov
push
jae
mov
ds
inc
pop
imull
pop
insl
pop
add
xchg
pop
lcall
sub
pop
aaa
or
enter
lret
sub
std
jae
sysenter
divl
int3
pop
cmp
cmp
call
adc
ja
int
cmp
movzbl
sbb
ret
push
mov
shl
das
push
rorl
pop
jo
and
push
scas
rcr
subl
xor
popf
ret
push
mov
int
and
aaa
add
xlat
xchg
aas
clc
mov
xchg
gs
divb
jp
in
insl
popa
pop
mov
dec
in
add
mov
or
pop
aad
es
pop
and
sub
push
jnp
lret
xor
dec
outsb
enter
or
jo
mov
pcmpgtb
ja
jecxz
adc
fidivs
ret
data16
inc
hlt
mov
or
adc
outsl
dec
xchg
mov
movsb
cmpsl
aad
jno
aam
pusha
push
push
jmp
xchg
mov
pop
xor
ja
adc
push
mov
insl
shr
xchg
pop
sbb
mov
lret
pop
test
and
data16
test
push
mov
cmpsb
int3
pop
cmp
popf
jbe
movb
push
test
imul
rclb
mov
scas
jnp
lods
xchg
jg
jbe
mov
lret
adcb
push
out
mov
aaa
push
shlb
lds
cs
pop
xchg
xor
pop
mov
pusha
andb
mov
movsl
loop
mov
loop
sbb
lea
lcall
nop
and
pusha
jb
mov
mov
rol
out
inc
and
and
push
test
inc
imul
sbb
call
mov
jge
and
fwait
sbb
and
inc
inc
lea
inc
ss
in
xchg
cmp
popf
daa
jmp
push
adc
and
das
jp
test
insl
inc
lahf
aad
cltd
lock
mov
pop
cltd
fwait
push
mov
jge
pop
lods
ljmp
in
cwtl
jae
mov
or
ds
enter
cmp
out
pop
js
cmpsl
mov
cs
or
pop
jno
adc
dec
xor
mov
adcb
imul
stos
mov
fsubl
fisubrl
ja
xor
xchg
pop
in
or
out
shrl
insb
aas
lea
jl
cmp
imulb
jp
decl
mov
sbb
and
out
fs
push
jp
cli
sub
and
push
mov
std
sbb
cmpsb
mov
test
popf
or
mov
fs
mov
arpl
and
pop
inc
leave
and
sub
cmp
sti
jae
sub
add
and
fwait
dec
jo
inc
imul
jb
mov
xchg
sub
jl
adc
ljmp
hlt
or
or
repnz
mov
push
dec
mov
pushf
sub
inc
cmp
sbb
or
push
cmp
lret
stos
outsb
jmp
mov
fcmovnu
fiadds
test
repnz
pop
mov
push
dec
insl
call
cmp
inc
add
out
shlb
and
dec
in
jne
sub
or
in
dec
mov
shrl
or
out
sbb
sub
movb
icebp
insb
sub
rorb
sbb
mov
dec
outsb
xor
adc
pop
stos
mov
ret
sarb
or
mov
push
call
movsb
or
js
inc
pop
and
mov
dec
push
push
mov
aad
les
sbb
scas
mov
lock
adc
xor
cmp
and
lret
xor
inc
push
jb
out
dec
icebp
test
jmp
fistps
push
inc
out
call
inc
mov
test
push
sbb
add
call
ja
sub
mov
popa
leave
fwait
in
scas
out
popf
test
mov
mov
insb
pop
hlt
popf
pushf
std
add
cmp
out
or
xor
ljmp
scas
add
mov
gs
loopne
in
pop
xchg
cmp
insl
mov
in
in
xor
or
outsb
repz
xchg
dec
add
hlt
mov
dec
xchg
loope,pt
in
sbb
dec
xlat
cmc
pop
das
mov
dec
or
cmp
test
push
je
inc
lret
mov
ror
lods
inc
inc
gs
sbb
lret
bound
lods
fs
cmpl
lock
test
es
inc
scas
pop
push
jmp
dec
leave
es
cmp
or
push
mov
cli
daa
ds
fld
sbb
cmp
cld
mov
fwait
push
add
jge
in
cmpsb
push
data16
das
out
test
inc
or
movsl
mov
mov
dec
je
inc
jno
sub
mov
mov
push
std
or
push
nop
mov
push
xlat
cmc
pop
mov
in
pushf
cmp
add
jp
pop
mov
inc
cltd
lret
stc
pop
std
mov
cli
xchg
or
insl
sbb
sub
sub
iret
enter
adc
mov
fidivrl
aad
push
pop
push
mov
in
inc
sbb
jle
pop
push
outsb
jns
fdivl
or
or
test
pop
jg
jle
pushf
cmp
adcb
pop
ljmp
xor
push
sbb
mov
lret
cmpsl
and
dec
dec
inc
cs
cmp
add
add
xchg
pop
mov
pop
mov
cmp
inc
mov
leave
fnstenv
mov
stos
addr16
jmp
mov
jg
pop
movsl
test
mov
insl
sti
mov
xchg
add
fsubs
test
pushf
and
insb
add
lods
stos
cmp
pop
call
fs
testb
shll
inc
cmp
jne
ret
ret
rol
bswap
mov
mov
stos
or
out
sti
stos
jns
rorb
push
imul
sbb
std
xorl
mov
or
push
adc
cmp
cmpsb
jl
sub
cwtl
cmpsl
add
pop
cmp
in
dec
loopne
add
insb
push
xor
mov
lahf
fdivrl
leave
dec
cmp
lret
sub
mov
js
jp
and
lods
pop
inc
inc
cmc
dec
adc
fnstenv
in
js
sbb
out
add
mov
daa
movsb
sbb
dec
inc
subl
fnstcw
icebp
lea
push
xor
insb
xor
jmp
mov
mov
dec
jp
mov
loopne
and
dec
push
xor
cmp
mov
dec
mov
outsb
mov
jb
push
movsb
cmp
xchg
sbb
lcall
jl
jmp
add
imul
in
int
push
fs
testb
pop
xchg
gs
xor
push
out
scas
andl
inc
mov
pop
mov
fsubrp
add
mov
adc
mov
pusha
jne
mov
rcrb
pop
ret
pushfw
mov
push
loop
adc
mov
pop
xchg
mov
lea
movsb
inc
pop
pop
dec
inc
inc
jnp
fbstp
sahf
nop
or
andl
cmp
adc
pop
rcrb
insb
push
pop
in
cmp
sub
aad
enter
mov
jbe
or
mov
fyl2x
mov
mov
not
leave
fisubl
stos
add
stc
push
lret
sar
cmc
jbe
lret
outsl
push
inc
pop
inc
dec
imul
fs
jae
fimuls
ret
lret
mov
fwait
cli
fldenv
orl
or
in
xchg
test
cmp
xchg
mov
adc
std
sbb
insb
rcr
andl
and
mov
jecxz
lock
xchg
and
loope
push
jmp
outsl
mov
mov
cmpl
sbb
jp
leave
mov
jb
add
xchg
inc
stos
sub
decl
mov
stos
js
repnz
jnp
xlat
stc
sbbl
dec
cltd
jo
andl
cli
scas
inc
in
fmull
inc
cld
push
jmp
sbb
and
imul
aam
inc
xlat
repz
push
mov
fs
lret
dec
in
and
jo
ss
mov
jge
pusha
ss
xchg
mov
pusha
jae
mov
jecxz
xorb
adc
in
in
lret
pop
lret
inc
sahf
scas
xor
or
add
cmp
cmp
xchg
xchg
mov
cmc
cmp
mov
dec
mov
jns
jne
mov
js
pop
and
andb
pop
sub
pop
jmp
shlb
nop
mov
dec
mov
test
jb
lret
adc
sbb
and
mov
cld
xor
mov
push
dec
sbb
cmp
push
aad
pop
dec
repnz
inc
test
fstps
push
mov
cmp
mov
mov
cmpsl
jge
pop
enter
lcall
inc
cmp
pushf
in
xor
dec
sahf
stos
in
cmp
fucomp
jle
popa
in
push
bound
add
cmp
pop
lcall
psrlq
inc
fbstp
movsl
nop
fistps
push
movsl
add
icebp
dec
and
dec
lcall
cmp
mov
and
orl
pop
cmp
imul
in
mov
arpl
mov
dec
push
call
add
mov
inc
loop
js
rep
inc
test
push
mov
aad
test
push
outsb
add
pop
jmp
inc
adc
jae
dec
lea
jmp
in
cld
js
jmp
pop
pop
sub
imul
adc
xchg
sarb
popa
test
js
dec
sarb
movsb
jp
dec
push
frstpm(287
cmp
pop
stos
adc
pushf
cmp
push
jb
jo
int3
mov
add
popf
pop
dec
inc
sbb
jl
xchg
mov
lahf
lods
fidivs
xor
rcl
add
ja
mov
sbb
cmc
mov
pop
arpl
mov
jl
mov
adcl
sub
pop
jo
ficomps
dec
dec
lea
inc
jp
rclb
std
cmp
jo
jmp
pop
inc
ss
jne
shl
and
mov
addr16
mov
and
ljmp
pushaw
cmpsb
xor
push
xchg
and
js
jle
push
subl
jne
in
push
add
in
push
popa
sbb
and
add
mov
popf
xor
fsubrl
rcll
mov
or
mov
movsl
insl
and
les
or
sti
xchg
clc
mov
mov
stos
adc
mov
jo
push
lret
lahf
daa
outsl
movsb
in
adc
sub
ret
or
pop
push
int3
mov
pop
jg
xchg
pop
sbb
mov
rcrl
lock
pop
xor
push
xchg
add
push
sbbl
mov
data16
aam
test
mov
std
xlat
dec
mov
mov
adc
push
ja
dec
test
mov
jecxz
repz
sbb
pop
addl
sub
addb
inc
push
daa
jl
shlb
cmp
test
cmp
cmp
pop
push
aam
lea
mov
mov
mov
cld
movsb
mov
xchg
cwtl
xchg
xor
scas
add
adc
and
and
leave
cmp
cmp
loop
sub
jg
cld
nop
addr16
push
int3
fldt
popa
dec
inc
std
jo
loope
xchg
fucomip
out
add
inc
stc
add
xchg
cld
stos
int3
dec
into
jmp
jne
lods
pop
xchg
repz
mov
mov
cmp
shrl
and
and
add
adc
in
jno
call
xchg
iret
ret
mov
dec
in
cmp
jns
dec
sub
add
mull
lock
xchg
dec
js
push
fwait
sbb
popa
xchg
lahf
mov
ror
cld
or
xchg
cmp
and
stos
lcall
jb
nop
jl
shr
stc
pushf
aam
inc
push
jmp
sti
iret
or
xor
xor
std
gs
dec
mov
jne
lea
outsb
pop
push
stc
add
mov
cwtl
sub
andb
inc
fs
cmc
dec
and
aad
push
jb
dec
dec
pop
scas
das
jp
iret
mov
xchg
movsb
pop
push
test
icebp
movsl
xchg
mov
loope,pn
add
cmp
xchg
pop
test
mov
mov
in
shrl
push
jae
loopne
xchg
aam
mov
lea
mov
push
iret
popa
push
test
imul
mov
adc
icebp
inc
aam
repnz
in
movsl
mov
loope
dec
dec
push
xor
or
push
in
xor
aad
sub
cmp
xchg
pusha
stos
enter
aas
inc
sub
pusha
notb
paddusb
sub
loope
adc
addr16
fldz
popf
lret
xchg
nop
xor
inc
jb
das
ret
clc
push
push
test
aad
xor
add
out
ret
fbstp
jae
push
mov
outsl
bound
and
pop
xlat
in
xchg
mov
push
inc
jno
fcoms
cmp
push
add
pusha
mov
ljmp
mov
rcr
pushf
popa
btr
adc
in
insb
push
push
push
add
test
xchg
out
pop
add
shl
into
dec
add
mov
shl
leave
mov
lret
mov
arpl
jecxz
fdivr
pand
jnp
ret
xchg
push
jp
aas
push
loopne
sbb
out
roll
loopne
cmp
mov
mov
mov
cltd
push
mov
cmpsl
rcll
and
sbb
out
jnp
data16
std
dec
sub
and
mov
fiadds
ljmp
shl
adc
lods
sti
pop
shl
inc
or
mov
loopne
sbb
fcmovu
js
inc
stos
cli
push
or
mov
pop
rclb
sbb
nop
insl
jge
push
dec
fucomp
xchg
sbb
packuswb
and
sub
in
push
cs
xchg
sub
mov
mov
loope
cmp
in
cwtl
mov
cltd
dec
mov
lds
popa
mov
cs
cmp
sub
sbb
add
jnp
sub
cmp
or
inc
movsl
sti
pop
je
cmp
or
or
out
outsl
jnp
push
xor
fsubr
jbe
sub
cli
dec
mov
pop
scas
test
dec
xor
hlt
jp
push
push
mulb
inc
mov
xchg
dec
stc
test
sub
mov
into
cmc
leave
mov
mov
pop
and
or
mov
xchg
mov
aam
mov
cltd
rorb
cmp
test
cmpsb
movsb
xchg
xlat
das
vmovq
and
test
out
sbb
ljmp
inc
jmp
cmp
clc
mov
mov
and
out
or
inc
fs
je
dec
push
cmp
jb
pop
cwtl
or
xchg
out
loope
cld
pop
cmpsb
mov
push
add
ret
add
mov
test
out
lret
fs
pop
xor
mov
in
push
jae
xchg
aas
aas
xor
pop
lahf
pop
ds
daa
cmp
lods
dec
andb
xor
mov
xchg
sbb
ja
sub
sub
movsb
mov
jmp
repz
inc
push
rcrb
mov
fs
fmull
hlt
mov
inc
aad
outsl
ret
ss
fnstenv
push
sti
and
push
or
jae
pusha
jmp
sbb
pop
int
inc
ffree
in
mov
out
add
sbb
xchg
mov
sti
jne
xchg
cltd
jmp
xchg
ds
and
mov
dec
mov
pop
xchg
xor
addr16
andb
mov
push
jl
ficoms
pop
popa
scas
pop
xor
push
shrb
addr16
bound
and
mov
lods
sub
jecxz
xchg
imul
push
movsl
notl
sub
cld
cmpsl
shlb
and
andl
dec
divb
or
xorb
cmp
jp
out
jecxz
and
push
or
stos
mov
popf
or
push
pxor
mov
in
test
jmp
std
xchg
movsb
or
or
mov
pop
jb
inc
scas
mov
and
fmuls
test
push
adc
and
mov
ret
test
xchg
sbb
inc
das
test
popa
gs
imul
cs
pop
mov
pop
imul
xchg
mov
xchg
mov
xchg
loop
les
pop
mul
add
lods
imul
ds
cmp
in
pop
push
bound
shl
mov
inc
push
loopne
adc
dec
packsswb
xchg
jle
jecxz
xlat
push
mov
les
sub
and
repnz
dec
idivl
lds
add
repz
dec
pop
rol
inc
add
cltd
sub
push
push
out
push
adc
bound
pop
std
lods
and
lods
or
and
add
lods
mov
lds
and
flds
pusha
pusha
ss
or
aaa
testl
xchg
and
ds
lds
mov
jecxz
pop
mov
cmc
push
fucomip
lods
bnd
call
pushl
lock
mov
push
jno
dec
outsl
adcl
inc
inc
shrl
pop
cmpsl
xchg
jmp
cmp
or
push
in
pop
mov
cwtl
es
cmp
adc
out
nop
jl
add
lea
push
roll
or
gs
notl
push
jbe
or
and
xchg
notl
and
pusha
es
ja
sub
dec
roll
sub
aaa
mov
cmpsb
or
inc
sbb
jle
or
sahf
clc
adc
popf
and
jbe
jns
ss
xchg
lods
jns
in
xchg
jmp
pop
call
xchg
fwait
rep
adc
stos
inc
insb
lcall
mov
sub
out
xor
cwtl
pusha
addl
test
push
nop
cmp
jp
cmp
clc
jg
xchg
sub
lds
lahf
test
adc
mov
fwait
xor
or
into
std
mov
dec
xor
mov
daa
adc
int
das
sub
cmp
xchg
ja
cwtl
das
test
pop
out
stc
out
jmp
xor
icebp
mov
lahf
xrelease
ljmp
mov
ds
mov
fadds
xchg
jl
jno
inc
in
push
test
filds
jb
sti
mov
je
sub
jns
hlt
sbb
lea
xchg
or
mov
mov
negl
jle
outsl
imul
fldcw
mov
lret
pop
sahf
or
inc
outsl
jbe
jo
dec
repz
lret
or
jg
jmp
mov
adcb
mov
cmp
loopne
add
lret
mov
inc
xchg
cmp
mov
insl
jge
outsl
ret
in
or
test
enter
mov
jne
mov
mov
pop
push
or
outsb
int
and
sbb
ds
pop
pop
pop
and
lret
push
jns
mov
add
push
mov
ret
lret
repz
outsb
push
dec
cli
sub
jne
sbb
jnp
ret
fcoms
fsubs
or
rorb
fsincos
push
jecxz
je
gs
cld
cmp
mov
aam
or
sub
xor
cmpxchg
and
cmpl
movsl
push
rclb
repnz
adcl
out
xor
xchg
sub
pop
mov
pop
push
sti
inc
or
or
push
add
jecxz
int
test
fdivl
imull
sbb
mov
dec
pop
jl
negl
mov
push
or
scas
subb
leave
ds
lahf
in
dec
ja
pop
test
sbb
cmpsb
push
push
and
dec
in
enter
shlb
shr
push
cmp
xor
movsb
pushf
ljmp
cmpsl
loop
xorl
sti
xor
push
xorb
push
mov
sbb
jle
jecxz
sarb
movsb
fimuls
mov
mov
xchg
scas
xor
jno
repnz
adc
daa
adc
out
lret
cs
loope
push
push
sub
and
enter
push
stos
in
fstl
lcall
arpl
or
mov
mov
jno
loop
jl
fsubr
ja
push
loopne
jae
scas
add
lods
cmp
push
cmc
enter
cmpsb
lock
push
lods
test
insb
cli
jns
or
dec
sbb
sahf
adc
sub
mov
mov
pop
test
mov
fstp
aam
mov
dec
xchg
mov
dec
imul
outsl
jae
shl
insl
enter
loopne
in
lock
ret
sub
pop
lret
clc
out
fidivrl
mov
repnz
cmpsb
cmp
cmp
rorb
lea
bswap
int3
dec
out
insl
xchg
pop
sbb
add
cli
jnp
jb
es
subl
mov
data16
adc
inc
and
push
jmp
daa
dec
jo
icebp
stc
stc
std
jno
es
mov
not
adc
sub
imull
jae
sahf
xchg
or
sub
xchg
add
std
repnz
jb
xor
add
cmp
or
push
xor
dec
cmp
in
cmpsl
mov
add
jnp
pop
pusha
cmp
mov
cmpsb
lock
mov
add
mov
fs
jecxz
jge
fstl
in
push
or
cli
inc
cmp
clc
aad
lds
adc
aad
bound
daa
mov
mov
loopne
or
lret
js
arpl
mov
es
mov
sub
and
xor
xchg
xor
push
adc
mov
push
jmp
in
dec
hlt
aas
rolb
popa
rcr
loop
je
mov
xchg
mov
and
mov
cwtl
js
test
and
mov
dec
push
pop
dec
xchg
aas
inc
xor
inc
in
fnstenv
test
jl
pop
test
sub
jns
jl
test
pop
popa
xchg
clc
stc
popa
sub
sub
jnp
adc
stos
fidivrs
jcxz
sub
aaa
adc
adc
inc
outsb
xlat
enter
clc
cmc
adc
mov
loopne
shrb
les
popa
mov
pop
inc
addb
add
fnsave
shlb
mov
sbb
jmp
fsubrl
adc
jb
into
sub
inc
sahf
fstpl
cmp
mov
mov
or
mov
inc
push
loop
outsb
dec
mov
cmc
sub
std
int3
shrl
xchg
xchg
lock
add
dec
es
sbb
inc
mov
add
pushf
pusha
xor
pop
mov
jge
outsl
mov
inc
dec
pop
mov
jns
xor
mov
lods
add
xor
sub
lea
jge
mov
fstps
inc
dec
mov
jae
aas
ficomps
xor
push
inc
sub
nop
insb
aad
xchg
dec
movsb
jns
aad
insl
jmp
xchg
mov
sbbl
inc
push
repnz
leave
dec
or
and
clc
cs
loop
lods
jnp
mov
jae
sbb
test
mov
lcall
cmpsb
rcr
mov
mov
mov
dec
mov
pop
outsl
daa
push
xor
pop
jb
cli
lods
mov
sub
jno
mov
imulb
jmp
test
and
mov
sbb
clc
stc
push
test
sti
inc
das
js
js
xchg
shrl
fiaddl
mov
inc
cmpsb
cmp
icebp
mov
add
push
mov
mov
dec
xor
dec
dec
push
test
push
xchg
dec
jecxz
test
xor
popf
xchg
add
clc
sub
or
leave
jo
push
push
and
push
pop
popa
js
js
push
mov
inc
inc
sbb
fdivrl
cs
in
in
jmp
cld
mov
push
decb
inc
insb
and
cwtl
push
lea
adc
inc
pushf
arpl
out
stc
xor
data16
scas
add
shll
sub
gs
mov
inc
addr16
dec
pop
scas
xchg
push
jge
rcr
mov
mov
adcl
dec
xor
xchg
jp
das
fs
lcall
aad
cltd
int
popa
bound
repnz
rcll
xchg
dec
aaa
or
mov
dec
ljmp
mov
push
std
add
mov
ds
test
and
mov
jp
stos
les
adc
xchg
pop
jae
add
xorl
hlt
or
cmp
xchg
imul
dec
imul
mov
adc
cmp
insb
sti
sbb
popa
lret
cmp
add
mov
popa
xchg
outsl
push
inc
xor
push
ja
sbb
dec
mov
push
inc
mov
enter
lcall
add
stos
mov
imul
in
mov
mov
scas
jae
and
stc
mov
je
iret
arpl
mov
scas
jns
push
xchg
mov
inc
ficomps
mov
clc
gs
enter
ja
mov
jg
jae
cmp
loope
fbld
jo
data16
cmpb
leave
xchg
jae
test
adc
xchg
test
in
jne
and
je
inc
cmc
shrb
bound
ret
sub
dec
pop
lods
getsec
push
dec
stos
xchg
sub
jb
mov
incb
repz
scas
xor
subl
call
subl
inc
fnsave
pop
mov
cwtl
jp
fstpt
sub
fs
pop
mov
mov
mov
addb
sarl
add
mov
stos
pusha
sub
div
lods
inc
out
sti
js
jp
mov
push
pop
imul
or
stc
jmp
in
pop
push
mov
nop
cld
notb
xor
cmp
push
pusha
bound
jl
push
inc
ret
pop
icebp
or
je
in
les
ja
dec
push
aaa
pop
outsl
cmp
repz
sub
das
mull
lds
xor
xchg
in
fbstp
xchg
mov
cmp
sub
dec
sub
push
in
adc
xchg
es
mov
movsl
imul
loop
dec
or
ret
xor
hlt
dec
mov
pop
mov
dec
daa
cmpsl
outsl
add
push
cmp
xor
mov
push
in
mov
mov
cmp
cmp
fcomps
test
mov
mov
adc
jnp
imul
push
aam
cmp
fstps
aaa
adc
in
lock
inc
push
push
test
sti
jp
push
sub
push
cld
dec
ja
notl
jbe
je
insl
add
adc
mov
jb
add
cmp
fstpl
cmp
or
push
jb
movsb
mov
in
movsl
mov
sub
dec
insb
test
mov
test
jge
add
stc
cld
and
movsb
test
push
in
jl
inc
lods
fdivl
fisubl
ficomps
icebp
mov
ss
adc
dec
mov
or
inc
ficoml
aas
popa
into
lahf
or
cmpsl
ja
scas
test
shrb
rcrl
mov
dec
lret
data16
clc
mov
xor
mov
mov
mov
js
rcll
and
or
mov
cs
jne
ja
mov
popf
sbb
outsl
sub
scas
loope
fcoml
rolb
mov
cmp
cmc
xor
ret
push
xchg
fldl
cmc
out
sub
xor
int3
mov
sbb
xrelease
imul
inc
outsb
or
push
stc
sub
cwtl
stos
es
adcb
xchg
sub
dec
fwait
jl
add
sbb
cmp
dec
pop
push
xor
inc
mov
and
ficoms
scas
jb
loope
dec
jecxz
xchg
pop
dec
sahf
push
mov
mov
shr
pop
out
mov
aaa
cwtl
cli
call
or
inc
sub
push
decb
push
push
lds
or
xor
xor
mov
outsl
push
adc
rol
add
or
stc
dec
stos
cld
repz
mov
jmp
dec
and
test
ss
xor
pop
jge
xchg
jb
jnp
std
scas
icebp
movsl
mov
xor
pushf
mov
xor
sbb
pushl
test
je
xor
decb
shrb
mov
pop
xor
clc
push
push
in
mov
cltd
lock
mov
cli
mov
fldl
sahf
popa
out
push
xchg
mov
pusha
mov
jb
inc
add
in
mov
aaa
lahf
dec
adc
xchg
inc
in
mov
xchg
dec
xchg
das
frstor
cmovbe
sbb
mov
xchg
clc
adc
push
jbe
add
icebp
adc
dec
and
jno
call
iret
inc
fwait
sti
pop
rclb
mov
pop
xchg
test
aas
pop
ret
xchg
and
dec
mov
sbb
pop
scas
mov
fcmovb
pop
andb
push
test
adc
cmp
mov
lret
hlt
shlb
std
inc
pop
and
sub
xchg
inc
jge
sub
into
insb
jmp
mov
ds
and
icebp
dec
cs
arpl
inc
shl
jae
pop
out
dec
js
test
sub
gs
pop
loopne
popf
scas
mov
xchg
ret
testb
js
mov
cmp
jecxz
lock
fsub
nop
jp
stos
push
sbbl
xchg
add
xchg
jb
adc
test
ficoml
lret
mov
setnp
leave
xorl
pusha
mov
inc
xchg
inc
popf
mov
and
xor
sub
data16
aad
or
aad
rclb
mov
fsubl
jge
test
mov
in
add
rol
pop
pop
mov
rclb
jbe
pop
sub
push
movsl
in
dec
aad
inc
mov
lock
testb
jae
test
mov
xor
outsl
push
loope
loope
xchg
cmp
dec
pop
add
call
aam
push
mov
pop
jne
iret
jge
mov
mov
mov
push
std
xchg
sbb
pop
test
arpl
repz
push
in
xor
cs
push
movsb
lahf
push
out
cmpsb
push
jecxz
jmp
inc
icebp
addr16
xor
inc
les
shl
and
fists
pop
mov
int3
cmp
xchg
subl
and
cmp
xchg
cli
jne
femms
movsl
inc
ds
pop
loopne
mov
arpl
lock
sbb
jle
sbb
adc
cs
xchg
test
fcmovbe
clc
aaa
pop
dec
shlb
push
mov
jle
sbb
rorl
pop
sahf
addr16
pop
or
cmp
mov
add
out
add
mov
dec
push
adc
jns
xchg
mov
xchg
mov
lock
rcrb
mov
int3
pop
jg
xchg
cmp
mov
push
xchg
dec
push
aas
jle
or
das
lret
mov
into
mov
jno
cwtl
and
xchg
adc
std
out
inc
mov
fucomi
nop
push
std
xchg
mov
push
repz
xchg
cwtl
and
daa
mov
mov
cmp
insb
adc
push
pop
cmp
mov
dec
mov
jnp
push
testb
sub
fwait
sbb
jnp
inc
pop
ljmp
addb
push
push
jno
mov
mov
leave
pop
daa
je
movsb
stc
cmp
es
mov
inc
fildl
stos
shlb
aam
inc
pusha
add
mov
leave
cmp
push
testl
adc
inc
adc
rcrl
movsb
cmp
mov
jl
xchg
jne
mov
jbe
adc
pop
adc
lcall
lcall
mov
adc
pop
jns
mov
mov
mov
cmp
inc
sbb
test
js
mov
or
inc
test
jp
or
mov
aam
ret
dec
insb
cmc
aad
add
fwait
cli
or
ds
inc
xchg
inc
xor
xchg
jge
testl
or
mov
lahf
xor
rolb
enter
cld
fiadds
sbbl
fsubrl
clc
xchg
jmp
loop
jle
out
add
mov
cmp
daa
mov
pop
add
xor
mov
sub
iret
jecxz
sti
daa
outsl
and
aaa
sbb
imul
fadds
xchg
scas
mov
push
rcrb
clc
dec
jbe
shrb
sbb
cmp
sarl
fsubs
stos
in
pusha
iret
fbstp
xchg
lds
scas
mov
add
rol
ss
pop
inc
rcll
arpl
push
rclb
outsb
cli
push
popa
repz
lahf
fs
mov
sbb
inc
mov
filds
insl
loopne
pop
mov
xchg
loop
test
test
pushf
pop
scas
insl
jnp
adc
ss
shlb
pop
xchg
insl
stc
and
mov
push
stc
push
clc
inc
daa
pop
in
xor
inc
inc
clc
mov
mov
loopne
scas
bound
cmp
push
pop
mov
loopne
fcomp
xor
sbb
and
fstp
pop
divl
cmp
push
call
fcmovnb
es
fisubrs
push
out
jg
add
outsb
dec
pop
cmpsb
xchg
shlb
push
fadd
mov
xor
in
test
pop
mov
loopne
mov
add
shlb
mov
loope
and
xchg
rcrl
xor
imul
mov
jle
mov
fcmovnbe
imul
jmp
adc
fwait
pop
sahf
int3
sbb
stc
dec
out
fists
dec
pop
cmp
and
fstl
in
insb
xchg
movsb
xchg
out
pusha
mov
lea
xchg
std
test
add
dec
sbb
xor
ss
inc
fdivrl
loopne
fistps
xchg
test
dec
and
test
in
sar
stc
sbb
sbb
je,pt
je
fimuls
jle
mov
dec
call
hlt
jp
jp
mov
shrb
aaa
arpl
cli
loop
cli
add
xor
ljmp
pusha
test
fildll
sti
cmpsl
mov
add
addl
sbb
shl
or
mov
pop
add
xchg
lretw
filds
call
jl
sbbb
inc
lods
cmp
push
xchg
scas
aaa
mov
mov
insl
pushf
inc
pop
xchg
mov
je
or
cmp
inc
fs
fs
pop
adcb
clc
sbb
jne
xchg
mov
or
push
imul
scas
mov
or
lock
clc
nop
and
pop
jmp
into
add
test
mov
push
shrl
push
xlat
pop
mov
cmpsb
out
sarl
xlat
mov
stc
pop
mov
fwait
mov
push
inc
mov
mov
hlt
pop
and
leave
sub
ret
idivl
in
aas
lods
inc
dec
repz
ret
data16
lret
outsb
dec
mov
fbstp
lds
add
and
in
jp
fildll
mov
lahf
adc
repnz
and
sub
or
pop
xor
lods
out
test
das
mov
push
nop
std
xchg
pop
mov
xor
movsb
dec
mov
fsub
scas
add
addl
aad
mov
aad
push
pop
int
push
adc
int
add
cmpsb
jns
cwtl
xor
and
mov
lcall
scas
loopne
mov
pop
push
pop
fidivrl
inc
or
enter
stc
incb
stos
jmp
aaa
test
mov
push
push
cmc
popf
xor
push
jle
out
sbb
cmc
jb
adc
in
mov
lcall
xchg
jo
nop
inc
gs
popf
push
popf
ja
pop
mov
xlat
popf
push
lds
iret
andb
call
or
pop
dec
mov
sahf
jno
std
jo
push
stc
mov
mov
mov
les
mov
repz
push
and
push
cli
xchg
test
lea
cmp
add
stos
or
push
xchg
idivb
mov
pop
cmpsl
push
inc
inc
adc
cltd
lcall
push
insl
add
test
sub
cmp
pop
dec
dec
dec
sbb
cltd
rcl
push
punpcklbw
shlb
mov
push
dec
sub
scas
jo
and
mov
push
insl
cmpsl
ds
sub
push
add
mov
push
stos
daa
mov
xor
xchg
cmpsl
xlat
movsb
cmp
aad
add
jmp
mov
and
ret
sbb
mov
jne
dec
add
and
and
lds
mov
outsb
xchg
adc
cmpsl
cmc
or
push
inc
mov
jns
jle
pop
cltd
push
fsubr
ss
scas
and
sti
fmul
sub
shlb
dec
stos
inc
jg
xor
enter
push
push
out
pop
cmc
dec
cs
test
out
sub
aas
and
mov
jmp
pop
cmpsb
data16
push
js
jnp
hlt
ret
jg
lret
mov
jnp
and
jge
mov
pop
nop
pop
aad
mov
cltd
sub
push
push
dec
jne
shrb
xchg
mov
repz
sbb
adc
js
adc
and
call
push
cmpsl
stos
rcrb
jno
mov
roll
xchg
push
cmc
lret
cltd
sub
xchg
stc
nop
pop
je
xchg
repnz
out
pop
push
jo
cmp
ja
sbb
dec
sbb
fildll
cmp
pop
out
scas
test
aad
mov
pop
cld
and
aam
mov
pop
mov
std
test
je
leave
rorb
inc
sbb
mov
or
dec
sbb
mov
cmp
jle
or
sub
les
int
and
sub
mov
shlb
pushf
stc
roll
enter
sub
cmp
std
inc
fsubr
lcall
leave
ja
sbb
sub
adc
push
xor
insb
sbb
inc
xchg
push
in
test
dec
loop
ds
repz
fdivrl
rcl
adc
roll
fnstenv
fwait
les
roll
shll
push
push
pop
icebp
inc
or
cmc
cmpb
mov
xchg
sub
setge
sarb
test
add
testb
loope
sbb
inc
xchg
jnp
add
es
pop
enter
aam
mov
dec
sahf
xor
dec
dec
push
sahf
mov
jae
sub
in
sti
shlb
mov
or
fwait
cmpsb
bound
out
push
divps
js
je
sub
sbb
sub
out
or
xor
mov
loopne
xor
mov
cmp
mov
ret
js
dec
imul
in
lods
sbb
add
call
xor
or
imul
sahf
hlt
jp
aaa
add
pushf
lret
pop
loop
fdivs
icebp
mov
cmp
push
add
jg
and
imul
icebp
movsl
inc
in
addr16
movsb
sub
add
aas
jnp
loope
repnz
xchg
bt
xor
mov
je
dec
push
mov
and
xor
loope
pop
rolb
lahf
xchg
mov
es
popa
icebp
adc
adc
mov
push
in
sbb
inc
sbb
insb
add
add
stos
addl
js
lahf
imul
lret
xor
sbb
int
mov
mov
add
or
data16
insb
jl
test
movsl
stos
sbb
dec
xor
add
rcrl
dec
in
push
sbb
or
lcall
aam
mov
cmpsl
cltd
push
inc
dec
adc
into
mov
stos
adc
mov
push
sbb
orb
adc
jnp
mov
ss
mov
cmpsl
mov
sahf
and
mov
xchg
xor
imul
shll
mov
mov
mov
add
mov
iret
and
adc
loopne
test
movsl
ds
enter
sbb
pusha
imul
push
mov
pop
pusha
sbb
inc
dec
xchg
mov
sbb
aas
sarb
or
dec
xchg
adc
pusha
or
mov
jmp
mov
inc
loop
jbe
sbb
dec
jbe
cmp
mov
mov
addr16
pop
rcrl
shlb
xchg
and
cmp
ja
sti
xor
ss
inc
in
add
iret
xchg
test
push
inc
pusha
sbbl
mov
lods
cmpsl
sbbb
shlb
sbb
jb
jle
cmpsb
out
inc
mov
mov
xlat
out
aaa
sub
aad
pusha
sbb
xor
push
in
mov
mov
push
je
sub
lods
xor
mov
lods
adc
sahf
sub
loope
sub
mov
popa
gs
nop
out
test
cmp
adc
push
xor
push
mov
and
and
lret
push
cmp
cmp
mov
mov
pushf
jns
sti
push
push
fistpll
add
std
xlat
loope
jns
rep
addr16
sbb
mov
jecxz
mov
cmp
add
pop
xor
sub
imul
test
faddl
pop
inc
mov
mov
dec
pushf
xor
lds
jmp
mov
xchg
sub
add
fistps
jl
cwtl
xor
sub
mov
cmc
push
mov
mov
pop
das
cmp
arpl
add
xor
and
mov
inc
fcmovb
rorb
xchg
ljmp
xor
xchg
jnp
adc
xchg
xchg
sbb
scas
outsb
mov
or
xor
xor
xchg
xor
and
lret
sub
testb
mov
pusha
test
mov
aad
mov
xor
cli
cmpl
pushf
rcrl
test
cld
xchg
popf
leave
fdivrl
ja
mov
sbb
cltd
stos
inc
xor
jge
imul
jmp
sarb
sbb
out
sbb
iret
cmp
adc
mov
adc
sbb
cmp
mov
or
daa
mov
nop
add
fwait
inc
aas
mov
cld
in
or
fists
lahf
jecxz
cmp
push
xchg
test
mov
jbe
test
dec
pop
lret
fidivs
test
cld
cmpsb
loope
fcomps
in
test
mov
sarb
pop
in
sarb
jecxz
mov
xor
xchg
xchg
inc
and
push
push
push
push
jle
mov
add
out
ds
out
mov
loopne
dec
fcmovbe
mov
mov
loope
pop
data16
push
mov
pushf
icebp
iret
pop
leave
fnstenv
mov
popa
xor
jns
pop
adc
pop
cli
ja
mov
in
push
pushf
xor
gs
lcall
dec
or
leave
and
lods
inc
jmp
iret
push
mov
enter
out
lea
ja
addr16
adc
xchg
xor
lret
fildl
jge
pop
cmp
mov
lret
xchg
sub
push
shrb
dec
mov
cmpb
jo
into
xor
out
mull
mov
push
std
loop
cmc
lcall
stos
fwait
dec
add
mov
cmp
push
ljmp
mov
inc
fiadds
push
scas
test
mov
gs
subb
mov
push
cmp
and
add
int3
call
mov
cmp
mov
arpl
jle
mov
push
out
jae
mov
shl
dec
mov
call
cwtl
xor
mov
and
cmpsl
add
ret
mov
adc
hlt
pop
mov
mov
mov
dec
pop
pusha
mov
sahf
scas
outsb
mov
addr16
rcrl
jg
cs
pop
out
dec
fcom
insb
daa
rcl
repnz
hlt
and
push
adc
sahf
mov
fdivr
inc
rclb
dec
adc
ss
cmp
mov
cmp
mov
jb
cmpsl
sub
cmp
int
and
subb
cmp
dec
or
push
jp
in
aas
push
aam
pop
push
inc
pop
mov
and
out
jmp
daa
jle
cmp
and
les
cs
jle
xchg
es
std
outsl
add
faddl
jle
hlt
adc
nop
addl
sbbb
in
loope
mov
xchg
outsb
fwait
sub
jne
cld
outsb
xchg
inc
adc
inc
jecxz
lret
mov
sub
lret
int
ret
rorl
and
push
push
pop
negb
pop
xor
push
dec
mov
jae
movsb
and
inc
ja
sbb
ljmp
cwtl
mov
mov
inc
xlat
pop
mull
sub
iret
push
pop
enter
jnp
or
stos
cmp
fcmovnbe
clc
popl
push
lods
roll
pop
out
sub
xor
adc
enter
pop
xchg
cs
sub
ret
imul
fcmovnb
sub
sub
fidivrs
mov
shll
jmp
jecxz
aas
push
add
or
inc
mov
bndstx
cli
fdiv
arpl
movsl
imul
jmp
sbbl
lea
push
and
or
mov
sbb
lea
lock
push
pop
scas
xchg
lahf
mov
rcrl
inc
xor
pop
popf
icebp
sti
xchg
sbb
and
cmp
js
into
mov
add
push
out
jl
cmc
adc
ss
push
mov
xchg
jecxz
xor
sbb
push
out
loope
add
lea
sbb
and
jb
mov
add
add
repnz
and
sbb
movsb
and
mov
inc
cmp
jp
aad
or
and
mov
stc
inc
xor
jno
push
out
adc
adc
adc
paddw
mov
or
pop
int
rol
ret
repnz
test
out
mov
jns
inc
mov
cmp
xchg
pop
inc
andb
inc
mov
sbb
bound
pop
mov
inc
jbe
mov
pop
push
ja
or
and
addr16
outsb
adc
out
xor
in
jnp
inc
les
and
cmpsl
add
pop
sub
mov
in
push
inc
adc
cmp
dec
mov
or
movsb
insb
fnstenv
rorl
mov
fbstp
repz
popf
mov
adc
push
in
pop
sub
sub
scas
sub
jmp
test
stos
enter
inc
inc
push
imulb
xlat
rcrl
jecxz
push
or
push
repz
lahf
ds
fnstenv
inc
les
add
int3
xor
shll
xor
in
mov
xchg
ret
shll
dec
mov
adcb
sbb
jmp
pop
mov
pop
sbb
mov
outsb
pusha
dec
in
sti
dec
pop
clc
rep
push
test
pop
adc
testb
dec
lahf
cltd
jnp
cli
jle
dec
dec
xor
fucomip
imul
xchg
scas
out
xor
out
mov
xchg
jbe
fwait
lret
cmc
lds
negl
mov
ret
adc
pushl
lods
push
xchg
dec
loope
cmpsb
mov
shlb
pop
movsl
pop
pop
ret
lock
fcom
decb
jb
jns
stc
sub
xorb
jo
data16
cmp
punpcklwd
cmc
inc
or
dec
lret
mov
enter
sub
dec
sbb
pop
jb
repnz
cmpsb
dec
lods
scas
cmp
sbb
icebp
movsl
mov
xchg
stos
jg
mov
push
fldl2t
lock
rorl
sahf
jcxz
push
and
push
add
pop
and
fisttpl
or
scas
pop
mov
xchg
rcrb
or
sbbl
lret
and
iret
and
ss
insb
stos
sti
inc
ss
xor
push
add
cmp
rorb
dec
or
sbb
out
pop
hlt
das
sbb
jne
sbb
adc
pop
adc
incb
ljmp
mov
clc
mov
fidivrs
repz
push
sub
leave
pop
je
mov
pop
test
test
mov
decb
adc
sbb
fidivrl
dec
sti
enter
sub
xor
or
cmp
popf
scas
in
filds
xchg
mov
clc
or
sbb
iret
scas
jbe
cmp
in
and
aam
xlat
repz
and
xchg
stos
or
jle
lock
aas
or
sub
gs
nop
jns
xchg
or
or
daa
mov
fisttpll
idivb
ret
hlt
jp
out
test
add
sbb
pushf
mov
lock
in
repz
jmp
iret
adc
cmc
movsl
hlt
test
adc
cmp
fs
xchg
mov
loop
test
xchg
fldt
jnp
cld
mov
and
les
mov
cltd
adc
lret
in
outsb
jl
test
mov
mov
push
dec
xor
aas
push
frstor
mov
xchg
jo
push
sbbl
push
out
pop
add
rorb
int
sbb
mov
popf
mov
add
int
outsb
into
cmp
add
sbb
dec
push
loop
ret
push
mov
iret
popa
mov
iret
inc
pop
cmp
aad
mov
cmp
out
lret
repz
adc
movsl
int3
mov
fcom
sub
sub
xchg
ret
stos
aam
xchg
jo
aad
adc
lcall
mov
movsl
xor
call
xchg
cwtl
ljmp
stos
inc
addr16
jmp
stos
mov
cmp
mov
ret
cmp
push
xor
test
arpl
test
xchg
ja
ljmp
mov
pop
inc
jl
les
imul
add
arpl
movsl
add
push
lods
push
imul
push
push
inc
jo
xchg
andl
and
std
push
daa
jne
stos
test
xchg
add
xchg
imul
xchg
mov
icebp
adc
testb
push
adc
xchg
jo
sub
sbb
sub
out
dec
xorb
jmp
leave
hlt
aam
jo
lret
adc
mov
mov
push
int
cmp
push
jmp
mov
fldenv
std
andl
cmp
out
xor
insb
push
add
dec
xor
mov
xchg
lcall
orb
adc
xlat
and
jnp
push
imull
jae
pop
sbb
adc
popa
mov
cs
pop
mov
and
data16
jl
shll
mov
sbb
add
or
dec
scas
or
loop
sti
cmp
rorb
test
fnsave
sbb
ljmp
jnp
call
sbbl
jnp
arpl
add
dec
xor
push
sbb
fbld
xchg
xchg
cld
fisubrl
inc
lods
add
in
xorl
or
xchg
push
jb
test
popf
pop
jno
push
sbb
sbb
test
fldcw
int
jg
jb
cmp
ss
jbe
inc
test
mov
push
insb
xchg
repnz
cmp
add
push
popa
rcl
adc
test
adcl
jo
xchg
imul
lods
insl
xor
insl
fwait
cld
sub
push
mov
in
or
adc
nop
xchg
xor
adc
cmp
or
xchg
es
and
push
add
cmovg
adc
ss
jp
mov
popa
adc
mov
jge
mov
lock
bound
lret
push
mov
loope
adc
rorb
pop
adc
xchg
in
ret
imull
int
movsl
stc
cmp
push
or
mov
cwtl
stos
dec
scas
cwtl
das
jmp
stos
in
mov
jecxz
rcrb
inc
in
je
dec
es
pushf
add
aam
arpl
dec
mov
das
cmp
xor
rclb
cmp
mov
call
test
push
cmc
scas
inc
daa
loop
mov
mov
fistl
cmp
jbe
stc
adc
push
outsb
lahf
xor
pop
data16
jns
lret
mov
cwtl
outsb
add
push
sub
cmpsb
jle
cmp
fdivp
roll
gs
pop
call
xchg
xchg
push
jae
enter
adc
jg
mov
push
sbb
push
push
stos
mov
jno
pop
sub
inc
fcom
jbe
mov
jle
rclb
out
dec
fisubl
cld
test
cs
ljmp
cmp
jno
lcall
scas
mov
popa
loope
sub
push
sub
movsb
cmp
ret
and
out
out
in
es
cmp
sbb
adc
add
dec
or
out
mov
sbb
mov
in
lcall
subl
push
cmp
push
add
mov
dec
out
jle
aaa
pop
xor
fists
cmp
and
cmp
dec
test
sbb
addl
repnz
out
sbb
insb
and
mov
and
xlat
and
ficompl
arpl
divb
repz
stos
gs
mov
inc
pop
mov
mov
xor
mov
sub
add
sarb
insb
sub
repz
xchg
dec
in
fs
push
add
pop
nop
daa
mov
adc
stc
scas
jno
daa
and
jecxz
sbbl
pop
nop
xchg
dec
lock
adc
mov
cmp
mov
sub
nop
push
out
dec
cmp
push
or
les
pop
inc
test
sub
push
xor
je
push
das
fs
jbe
push
jge
jns
or
cmpsl
insl
jge
jmp
mov
push
mov
fimuls
insb
je
aaa
movl
imul
jbe
xchg
inc
inc
add
bnd
add
cmpsl
int
mov
loope
and
icebp
inc
in
daa
jns
sbb
fsubs
addr16
cltd
out
in
inc
shll
out
cmpb
loope
pop
xchg
cmp
cmp
inc
dec
test
sahf
xor
sbb
inc
in
mov
sbb
dec
int
ds
xor
mov
adc
rorb
insl
inc
sub
mov
push
adc
jbe
stos
dec
cmp
inc
lea
leave
mov
xchg
mov
mov
ljmp
mov
or
loope
fcompl
mov
jle
stc
mov
sub
shl
xor
push
movsl
cmp
roll
out
mov
mov
test
inc
jecxz
mov
in
cmp
lahf
movsl
addl
loopne
lds
dec
rclb
int
jp
test
shrb
pop
lock
mov
or
inc
inc
mov
aaa
dec
pop
std
rolb
pushf
negb
js
fidivs
add
xor
jg
add
jno
add
pushf
xor
jmp
jmp
jg
jmp
dec
lret
call
sahf
ljmp
xor
stos
inc
cltd
push
mov
adc
and
pushf
cmp
dec
mov
shrl
loop
mov
cmp
mov
mov
push
xor
mov
mov
daa
or
inc
sbb
outsb
icebp
mov
xchg
in
in
nop
cmp
mov
out
sahf
lods
mov
pop
andb
xchg
jne
ret
jae
in
ljmp
jno
js
das
xchg
stos
hlt
push
fnstsw
stos
and
push
inc
inc
pusha
xchg
mov
jecxz
xchg
sub
jbe
jecxz
or
in
mov
add
inc
ficomps
ret
pop
push
loope
pushf
inc
insl
out
push
mov
sbb
cld
movsb
push
push
enter
push
mov
fisubl
orl
cwtl
xchg
mov
cmp
mov
dec
fs
mov
inc
cmpsl
loope
sub
test
inc
out
jp
sahf
lods
jge
in
dec
xchg
in
cwtl
loopne
lahf
and
dec
push
fildl
movsb
inc
repnz
repz
jnp
jnp
cmp
ret
pop
xor
pop
loop
xchg
rclb
sbbl
popf
pop
ds
dec
outsb
jle
mov
outsb
aam
jecxz
mov
icebp
mov
sarl
sbb
inc
hlt
push
imul
mov
mulb
lret
bound
cwtl
or
jo
jg
sbb
repz
dec
sbb
sbbl
mov
cmp
cs
add
and
push
sub
shll
push
gs
sbb
mov
out
popf
adc
push
pop
mov
pop
push
fucomp
shrl
jge
jo
and
mov
insl
jge
lock
xchg
mov
and
adc
push
sub
mov
int3
cmp
jae
test
icebp
mov
jns
add
push
inc
and
pop
ss
push
negb
dec
fs
xchg
sbb
and
popf
sbb
fiaddl
pop
xor
pusha
in
test
sti
int
or
int
lods
jo
ret
call
cltd
pop
jo
mov
sbb
mov
cld
mov
jmp
push
loope
cld
add
jecxz
inc
and
sarl
pop
mov
lds
mov
dec
pop
fstps
adc
lahf
int3
dec
push
add
movsb
into
in
addr16
mov
out
ljmp
xchg
xchg
adc
aam
bound
cmp
adc
insl
in
mov
push
aaa
mov
jmp
shrl
push
adc
xchg
repz
fbstp
adc
arpl
pop
adc
rorl
mov
mov
sbb
int
xchg
add
pop
cli
add
decb
insl
bts
lock
add
mov
fildll
shlb
mov
pop
and
fwait
std
js
ud0
sub
pop
int3
mov
hlt
outsl
je
mov
adc
sahf
inc
dec
testl
aaa
int3
dec
push
jmp
or
jb
and
idivl
inc
out
in
test
fsubr
push
cmp
ret
insb
das
das
dec
stc
pop
sbb
nop
sbb
outsl
std
movsl
or
pushf
xlat
cmp
movswl
jae
mov
mov
and
iret
cltd
sbb
inc
adc
mov
in
push
lods
fs
mov
xor
mov
pop
cltd
test
and
hlt
cmp
xor
ljmp
sahf
or
imul
mov
add
scas
cmpsl
xchg
int
rcl
bnd
ret
sub
cmp
dec
outsb
add
cwtl
dec
adc
sub
ss
testb
inc
movsb
aad
and
gs
shl
in
dec
and
or
and
mov
add
pop
and
aam
fimull
mov
andl
loopne
cld
dec
jo
pop
out
sbb
jecxz
mov
push
pushf
or
mov
push
add
jg
pcmpgtb
mov
cmp
in
pusha
pop
xor
cltd
pop
fnstsw
push
jno
lods
jb
loope
sahf
sub
xchg
cmpl
push
xor
outsl
fiadds
push
pop
push
dec
dec
jnp
fs
lcall
xchg
sbb
dec
jl
jl
push
ret
nop
fmulp
jb
cld
fsubrl
and
cwtl
push
pop
in
jne
sub
enter
ret
cli
jge
cmc
outsb
adc
popf
hlt
jo
push
add
inc
enter
xchg
in
test
push
or
scas
xor
mov
mov
sbb
popf
bndstx
and
clc
daa
stc
movsb
xchg
mov
call
xchg
stc
mov
fsubrl
in
fwait
cwtl
add
es
mov
xorl
fdivrs
dec
cwtl
rcr
repnz
mov
roll
mov
jb
mov
mov
enter
dec
sub
inc
dec
or
ds
movsl
andb
xchg
int3
pop
push
mov
je
mov
sub
pop
lds
cmp
inc
xor
andl
pop
cwtl
stos
mov
data16
call
insb
outsl
imul
enter
inc
push
dec
iret
cmp
cmp
xor
push
jge
pop
insl
sub
bound
dec
cmpsb
mov
pop
std
and
sub
adc
cwtl
loopne
adc
cmpsb
cmp
mov
out
iret
mov
in
fdiv
jae
mov
mov
aam
xchg
mov
lods
inc
cmp
sbb
adc
push
movsl
sarb
scas
inc
icebp
push
mov
lret
jnp
cmp
cmp
imul
and
andb
add
lea
jp
mov
and
lods
push
cwtl
das
push
repz
loope
inc
fcomps
xlat
jno
lea
test
insl
sub
jo
hlt
jae
fsubrs
pop
insb
adc
fs
push
call
jecxz
outsl
adc
dec
outsl
addl
sti
xorl
xchg
push
mov
adc
je
cmc
das
test
ljmp
adcl
sahf
ljmp
cmpsl
mov
leave
sbbb
sub
pop
xchg
movb
outsl
rcrb
mov
jbe
ljmp
pop
jg
loop
sahf
mov
daa
mov
stos
test
notl
and
movsl
stos
sub
dec
test
cmp
xor
jae
aas
adc
aaa
mov
jno
subl
shrl
pop
shll
outsl
daa
jb
push
inc
lret
mov
inc
fisttpl
call
and
fsubrp
inc
push
fnsetpm(287
mov
xchg
cmp
or
gs
cmp
fidivs
std
ret
mov
add
push
das
xor
jg
sarl
repz
add
jecxz
out
adc
dec
pop
div
pop
repz
push
loop
dec
push
push
jmp
jp
repnz
and
fsubl
shrb
push
les
aas
sbbl
or
out
cld
pop
fstpt
dec
and
push
pop
push
inc
xor
lods
cwtl
push
bound
lods
ja
push
mov
mov
push
sbbb
mov
mov
pop
shl
jle
loopne
sbb
mov
fstps
cli
cmp
mov
pop
xchg
inc
fcomps
cmp
mov
roll
or
push
ljmp
lock
nop
in
xchg
fists
stc
rcl
repnz
stc
mov
jp
stos
and
xchg
notl
enter
jns
in
mov
add
mov
imul
cmp
inc
or
add
xchg
pop
push
cmp
sbb
divb
add
xchg
push
push
hlt
pop
leave
cli
and
test
and
sub
dec
pop
sbb
jnp
push
lea
xchg
stos
push
in
ds
sahf
xlat
fdivrl
cmp
xor
ja
pop
popl
cs
sbb
outsl
xchg
imul
mov
in
addb
addr16
movl
scas
inc
js
outsl
push
rcrl
lea
push
stos
pop
cmp
inc
jae
stc
data16
jmp
jne
cmp
imul
push
in
fisubrs
inc
lret
je
scas
movsl
mov
dec
mov
dec
cld
inc
nop
jo
repnz
add
pushf
repz
in
in
ja
push
filds
lcall
and
loopne
add
sbb
inc
cmc
into
push
or
jne
movsl
cmpb
adc
xchg
xchg
inc
or
cmp
sbb
sub
clc
and
fsts
popa
xor
mov
fwait
out
aam
stos
dec
cmp
cwtl
outsl
das
jnp
adc
subb
cmpsl
call
inc
mov
pop
imul
sbb
sbb
dec
push
adc
mov
mov
jnp
jl
shrl
add
movb
fstps
aaa
adc
cmp
inc
rcrb
mov
or
cld
push
inc
push
sbb
clc
xchg
dec
xchg
hlt
mov
add
cs
xchg
mov
out
fucomp
clc
fwait
movsb
mov
push
inc
pop
ret
arpl
repz
mov
sar
or
filds
mov
idivl
call
mov
mov
pop
adc
sub
jbe
add
loop
mov
sub
mov
dec
aam
call
mov
push
push
jecxz
cmp
add
popa
mov
and
inc
jns
xchg
xor
pop
icebp
dec
sub
popa
test
ljmp
xor
lds
test
add
shll
cmp
xlat
dec
add
mov
dec
sbb
lcall
lret
fxtract
xchg
dec
adc
inc
out
popf
jg
pushf
push
fstl
int3
mov
mov
mov
movsl
in
out
xchg
mov
mov
aaa
or
inc
push
repnz
or
xchg
push
shrl
mov
loop
mov
cwtl
decb
jp
cmp
popf
pop
in
scas
sub
out
dec
xchg
rcrl
stc
sub
sbb
push
js
mov
rorl
and
ljmp
lock
call
push
ljmp
scas
out
mov
inc
imul
mov
fs
fdivrs
push
push
jmp
popa
pop
mov
mov
cmpsl
dec
in
inc
enter
ljmp
call
cmp
and
cli
push
xlat
lcall
pop
sti
and
in
shlb
nop
insl
dec
xor
push
pusha
int3
fs
inc
leave
sub
test
jle
adcb
mov
push
je
push
xchg
insb
hlt
test
jl
test
ret
mov
jle
scas
fimuls
add
idivb
ficoms
cmp
fcoml
sbb
add
add
mov
jns
scas
pusha
enter
ja
fwait
and
inc
mov
mov
xchg
enter
lods
cmp
xchg
mov
xchg
popa
out
ds
dec
add
mov
pop
xor
loop
iret
adc
std
inc
xchg
xor
mov
xor
inc
or
in
xor
pusha
and
mov
xlat
mov
adcl
movsb
aam
ds
xchg
mov
pop
mov
and
and
mov
mov
scas
jmp
lret
mov
xbegin
sahf
pop
pop
in
mov
lcall
mov
sahf
fs
movsl
ret
out
fnsave
test
or
mov
jmp
jns
lret
xor
scas
mov
mov
mov
pop
mov
xlat
push
inc
into
mov
jns
fldl
push
inc
add
xchg
and
sbb
dec
stc
mov
cmc
ss
lods
popl
vmread
xchg
xrelease
lret
sbbl
cmp
mov
and
add
push
or
jno
xchg
lret
sbb
popa
push
adc
xlat
jnp
ja
cmc
mov
ret
hlt
mov
and
aam
mov
sti
in
ret
scas
es
pop
addr16
cs
push
mov
aam
es
xor
adc
cmp
cmp
mov
xchg
clc
in
aam
test
mov
sbb
adc
shlb
and
call
call
aad
push
loop
cli
pop
or
roll
sti
sbb
inc
dec
bound
popa
dec
stc
push
lcall
adc
cwtl
aaa
mov
loopne
push
xchg
sarb
sbb
out
popf
pop
dec
fdivl
sub
mov
pop
arpl
xchg
lods
cmpsb
rcrb
into
pop
loop
xlat
imul
imul
push
mov
push
xor
mov
sbbb
xchg
mov
cwtl
popa
push
int
push
cmpsb
push
pop
loope
push
clc
mov
call
push
or
jg
out
imul
sub
dec
scas
fnstsw
ljmp
outsl
xchg
mov
mov
pop
xchg
js
pop
stos
xchg
popa
or
jle
xor
aad
enter
or
jmp
andb
imul
decl
lods
aad
xchg
sub
icebp
mov
scas
jae
aad
or
mov
pop
inc
notb
jb
dec
or
gs
ja
mov
scas
int
pop
inc
xor
ss
push
mov
push
or
stos
mov
out
fdivrl
xchg
jmp
mov
movsb
aaa
into
shlb
stos
push
mov
int3
xor
xorl
adc
push
lret
arpl
push
arpl
pop
fisubs
mov
les
ljmp
jecxz
mov
cmp
in
lock
and
dec
jne
leave
insl
in
les
or
mov
aaa
into
add
ucomiss
push
or
mov
cmp
cltd
insl
sarb
dec
cmc
sbb
cltd
or
push
mov
mov
dec
sbb
add
inc
gs
mov
jge
andl
mov
or
iret
inc
rcrl
jbe
enter
push
xchg
lods
push
data16
lret
inc
fprem1
out
incl
icebp
xchg
notb
push
or
pop
adc
out
xlat
inc
and
jne
mov
andb
lret
rcll
divb
push
movsb
pop
mov
rclb
outsl
daa
inc
mov
jp
inc
rcll
cmp
stc
sub
sbb
adc
jo
cmp
ret
mov
cli
push
shll
sarb
filds
shl
inc
ljmp
inc
mov
lods
outsl
fwait
das
add
sbb
add
out
jbe
xchg
ja
xor
decb
ret
and
mov
ret
xor
hlt
push
fstps
fildll
jle
scas
cmpsl
push
ljmp
movsl
jmp
pop
xor
imul
xor
fidivs
dec
fsubrp
sbb
jbe
fistpl
lea
sub
imul
nop
incl
out
dec
and
fwait
sub
ja
icebp
mov
cwtl
or
sti
fidivl
or
dec
adc
insl
andl
loopne
xlat
xchg
mov
inc
repnz
imul
andl
inc
daa
out
add
test
pop
subl
roll
jns
rcrl
repz
push
xchg
cltd
xchg
ja
divl
mov
ret
and
lds
mov
jl
jns
je
test
lods
arpl
sbb
leave
popa
inc
orb
out
mov
mov
push
push
imull
and
arpl
and
sbb
aas
lret
jb
and
stc
nop
les
mov
lcall
scas
mov
mov
sub
aad
cli
xchg
mov
cli
in
mov
sbbb
dec
xor
data16
sub
pop
addr16
out
aad
into
test
jl
setae
jo
adc
std
es
inc
scas
push
fbld
mov
push
frstor
movaps
scas
movsl
pop
mov
adc
ja
adc
arpl
sbbb
int3
xor
lret
xchg
ds
xor
enter
cwtl
fnsave
jle
das
push
ljmp
movsb
addr16
sbb
adc
imul
ljmp
add
daa
adc
pcmpeqb
dec
xchg
push
movsl
pop
and
pop
push
shll
add
jne
fidivl
sbbb
fwait
xchg
test
adc
jp
repz
mov
push
add
rclb
mov
fucomip
pushf
pop
stos
mov
fdivl
pusha
mov
sbb
mov
ljmp
sub
insl
mov
les
scas
cmc
lods
mov
fbld
and
inc
cmp
fisubl
popf
push
or
mov
mov
pusha
js
test
and
lods
xchg
ss
or
popf
mov
dec
popf
cmp
fstps
sbb
sub
mov
popa
mov
in
ficomps
addb
xor
jle
aam
mov
scas
fwait
cmpsl
fisttps
jns
jmp
push
sub
fcomip
mov
jns
push
ss
arpl
xlat
jmp
mov
ja
test
mov
lea
and
cmp
jno
xor
cmp
push
mov
mov
aas
lods
leave
icebp
jmp
gs
nop
daa
pop
subb
sti
scas
mov
je
packssdw
cmp
or
xor
lcall
xchg
leave
mov
rcl
jge
in
mov
add
cmpsl
fsqrt
lds
cmp
lds
and
xchg
adc
ror
xor
scas
cmp
push
fnstsw
mov
dec
jmp
dec
call
pushf
pop
xchg
cs
in
push
testl
cltd
fnstsw
and
xchg
xchg
cmp
and
sbb
sbb
cmp
mov
push
or
fcoml
fsubrp
addr16
add
mov
mov
pusha
daa
mov
sub
sti
and
sahf
pop
fnstenv
or
shlb
imul
and
std
jne
xchg
addr16
js
cmp
out
sub
fiaddl
push
cli
mov
sub
push
ljmp
push
enter
cld
xlat
imul
xor
xchg
outsb
test
add
and
in
pop
inc
bound
fimull
jle
jbe
jns
mov
aam
fildl
sbb
mov
jnp
int
mov
sub
and
ret
push
cmc
pop
push
push
jp
jg
pop
fs
mov
lret
and
ds
shlb
int
xor
mov
cmp
sub
sbb
cmp
sub
xor
adc
jbe
imul
aad
push
sti
sbb
ret
cmp
std
lods
mov
xchg
add
mov
sub
repz
xchg
je
ret
add
or
jg
mov
cld
hlt
inc
int
and
xor
movsl
mov
xlat
fwait
out
cmp
ds
and
dec
xchg
add
mov
xor
push
addr16
std
cld
into
cmpsl
out
and
sbb
cmp
xlat
repz
inc
dec
aaa
mov
pop
mov
or
cs
adc
arpl
mov
lds
fbstp
gs
hlt
cmp
ss
push
int
add
and
rcr
in
stos
push
jmp
xchg
mov
push
sbb
jge
cmp
aam
inc
fidivrs
mov
int3
and
sub
push
lods
out
into
sbb
insl
jg
cld
shrb
push
popa
cmp
mov
push
test
imul
xor
adc
arpl
fwait
imul
mov
mov
aad
push
faddl
dec
cli
in
shl
lock
out
ds
adc
jno
mov
and
mov
fstl
mov
ret
out
add
and
shl
jnp
shlb
lea
test
mov
jne
and
std
dec
out
pop
repnz
in
cmp
adc
mov
pop
lret
adcb
shrl
sub
mov
fisubs
test
or
mov
aaa
jo
daa
sub
mov
call
inc
cli
ljmp
dec
fucomip
jg
sahf
add
push
cmp
out
mov
js
mov
xchg
rclb
std
mov
frstor
dec
inc
cmp
mov
or
repnz
notl
pusha
pusha
test
adc
cwtl
jnp
dec
and
es
adcb
push
mov
cmp
and
pop
xor
cmc
dec
pop
bnd
adc
adc
push
imul
xlat
xchg
adc
adc
cmove
fisttpll
lret
imul
inc
je
idiv
mov
sub
add
pop
dec
outsb
push
mov
lahf
fisubl
pop
cmp
lret
cmc
jg
push
aas
cwtl
pop
jp
xchg
mov
mov
shrl
nop
push
inc
mov
stos
inc
dec
and
and
xchg
das
mov
repnz
enter
mov
ret
pop
cmp
dec
leave
fstpl
pop
pusha
inc
dec
inc
pop
out
inc
out
dec
shll
stc
xchg
or
inc
rcrb
mov
loope
aas
mov
jns
push
fdiv
push
and
push
out
cmp
mov
or
js
pop
daa
xor
sahf
scas
movsl
or
aaa
int3
das
movsl
or
sub
stos
or
jle
sbb
aas
add
sahf
push
cs
fstps
scas
and
add
jle
imul
leave
mov
push
lret
fnsave
mov
jge
ljmp
inc
mov
cs
mov
fidivs
push
mov
cld
repnz
adc
in
je
imul
popf
xor
insl
add
push
xchg
sub
jno
mov
ljmp
scas
shrb
frstor
lret
rcl
icebp
push
jb
mov
out
inc
xchg
pop
add
add
jae
or
xchg
mov
mov
inc
loopne
pop
aad
xchg
repnz
shll
add
ret
enter
imul
jns
loop
mov
test
mov
mov
add
fwait
or
test
jg
cmp
push
mov
jg
fsubr
sbb
test
mov
push
fiaddl
pop
insl
sub
repnz
xor
sub
or
add
adc
cltd
xor
sbb
fisttpll
das
data16
je
roll
push
mov
imul
ret
flds
ja
out
in
fldenv
cs
bound
or
mov
add
daa
push
hlt
incl
loopne
in
pop
sub
ja
mov
mov
arpl
lods
ror
adc
or
push
add
inc
add
cmp
mov
push
data16
cmp
iret
jp
cwtl
das
popf
fwait
push
in
cwtl
add
push
cmp
dec
xor
adc
mov
xchg
stos
in
adc
mov
divb
sub
mov
decb
bound
pushfw
add
scas
jb
fidivrs
mov
insb
inc
cs
inc
lea
xchg
call
arpl
sbb
or
jmp
or
mov
daa
nop
nop
cmc
mov
jo
aaa
int
int
fs
cmp
int
sub
xor
rolb
fabs
push
xchg
adc
inc
sbb
mov
iret
ret
add
push
hlt
mov
mov
stos
jnp
fstpl
pusha
mov
in
nop
adc
test
mov
sbb
cli
dec
xor
xor
stc
nop
mov
pop
mov
aad
cli
inc
mov
mov
inc
imull
sub
inc
mov
mov
inc
mov
lods
push
cmpsl
xor
shrb
lock
sub
and
push
add
ret
imul
mov
cmpsb
iret
repz
fcomip
adc
outsl
mov
cmpsb
cmp
outsb
andb
push
mov
fcoml
dec
pop
arpl
mov
lods
js
push
mov
jmp
pop
hlt
and
jo
sbb
add
sahf
add
pushf
ss
frndint
xchg
or
sub
sub
sub
ja
push
movsl
mov
sbb
push
sbb
pop
ret
inc
cli
loope
in
xor
sbb
and
and
add
in
not
mov
cmp
mov
jnp
adc
adc
push
add
adc
pop
hlt
hlt
cmpb
sbb
xchg
test
mov
push
pop
mov
xchg
push
movsb
add
inc
lea
sub
in
testb
and
ret
jbe
mov
push
jmp
push
dec
inc
mov
jb
xchg
sbb
rcl
adc
ljmp
sub
pop
mov
dec
in
jl
pop
lret
pop
into
nop
cli
rcr
dec
mov
add
push
mov
mov
movsb
test
pop
lahf
xchg
outsl
andl
mov
pop
loope
pop
dec
mov
ja
xchg
jno
nop
sub
lret
xchg
in
stos
enter
fs
pop
sub
pop
mov
push
cmpsl
jge
jnp
arpl
ja
sbb
sub
mov
scas
aaa
mov
or
dec
dec
and
clc
sbb
test
add
sub
lcall
mov
mov
cmp
fdivs
lret
push
popf
jne
int3
imul
and
add
push
lret
bound
sahf
adc
dec
push
sahf
data16
sbb
push
outsl
jmp
popf
sbb
or
scas
aaa
imull
cmp
mov
and
xchg
push
push
or
imul
loope
rcll
add
scas
mulb
loope
add
adc
insl
out
or
dec
and
repz
test
popf
cmc
loope
and
inc
mov
iret
push
fnstenv
sub
cwtl
outsl
loopne
idivb
jbe
jnp
jbe
repz
or
repz
pop
mov
movaps
xchg
xchg
cs
mov
jge
dec
mov
test
sbb
xchg
mov
bound
rcr
mov
mov
cmpsl
mov
out
sti
and
dec
dec
mov
rorb
pop
jae
and
fwait
popa
idiv
data16
lcall
push
xchg
cmpsl
fldenv
mov
subb
lods
imul
mov
test
fsubrp
mov
jmp
sti
or
orl
push
adc
jl
lret
sbb
jp
scas
and
pop
loope
enter
sub
sti
sbb
scas
inc
xlat
loopne
addr16
mov
mov
cmp
repnz
mov
shrb
cwtl
add
gs
inc
shr
adc
jmp
mov
rolb
and
test
aas
fisubrl
mov
pop
jg
stc
mov
rolb
adc
iret
aas
add
das
addr16
xlat
pusha
inc
mov
mov
into
sbb
lods
jo
scas
pop
pop
jno
inc
lahf
daa
ret
bound
sub
xor
xchg
or
jnp
mov
xchg
stos
movl
dec
cmp
hlt
dec
mov
mov
pusha
xor
push
jg
push
cwtl
xchg
and
in
jo
cwtl
push
adc
outsl
out
ret
sbb
xor
fs
mov
loopne
xor
and
push
scas
dec
test
js
jecxz
fiadds
sbb
adc
stos
mov
lock
cld
mov
ret
adc
inc
stos
push
call
mov
adc
fidivs
data16
mov
fsubrl
loopne
ds
jb
arpl
cmpsl
jmp
sub
repz
push
dec
test
dec
mov
sbb
sbb
rcrl
and
cmpsb
pop
scas
fcoms
inc
sbb
push
js
ret
leave
pushf
dec
out
int
sub
aad
add
xchg
pop
test
mov
dec
fnstenv
xchg
mov
pusha
fldcw
adc
lea
mov
xchg
das
and
subl
dec
fiadds
cltd
pop
sub
pop
adc
int
ljmp
inc
cmpl
sub
jmp
sbbl
mov
xchg
int
sbb
inc
dec
mov
push
jg
xor
movsl
or
sub
push
inc
sbb
mov
sbbb
mov
mov
test
jge
icebp
mov
mov
cli
out
in
fistps
aaa
into
insl
test
add
sub
add
repz
pop
mov
mov
in
aad
add
mull
mov
push
adc
mov
fnsave
push
mov
fwait
dec
out
arpl
cltd
push
cmpsl
push
jmp
jecxz
cmp
pop
gs
push
cmpsl
jb
push
out
fst
cmpsb
cltd
xor
push
aam
sbb
xor
lock
cwtl
stos
inc
or
loop
jo
daa
repz
or
mov
shlb
test
dec
flds
and
loope
mov
cmp
fildll
sub
dec
mov
test
jbe
xchg
sub
jle
outsl
push
and
and
aad
push
js
hlt
inc
mov
mul
push
fucomp
jp
add
aam
inc
test
jle
test
fildl
xor
test
xchg
lods
lea
cwtl
fstl
shl
push
data16
jb
fildll
xorl
ret
push
daa
ja
std
in
das
xchg
mov
pop
loope
shrl
xor
xor
cwtl
addb
xor
cmp
mov
cmpsl
iret
jne
cmp
dec
or
adc
daa
mov
cli
int
arpl
loope
mov
mov
out
or
ret
add
in
inc
stc
cmp
inc
add
int3
fnsave
nop
push
fpatan
mov
in
mov
push
js
pusha
jp
push
pusha
dec
push
daa
inc
in
or
shlb
sbb
imul
add
dec
ror
jecxz
sub
popa
jge
shrl
add
fmull
mov
jp
mov
xchg
dec
mov
xlat
dec
testl
inc
pusha
fidivs
add
cltd
mov
jns
int3
dec
outsb
iret
dec
loope
and
pop
test
jle
repz
out
cs
es
mov
sbb
dec
cmp
pushf
aad
fcompl
in
mov
push
push
sub
mov
xorb
jl
fdivrl
push
add
test
lods
pop
lods
in
cs
and
jg
and
jb
jne
into
push
stos
mov
inc
jmp
mov
xchg
adc
jns
loop
mov
mov
fisubrs
mov
or
je
xchg
out
sti
add
lret
push
inc
es
cmpsb
mov
in
pop
ds
adc
fwait
jno
pop
mov
andl
sub
add
ds
cmp
dec
cmp
loop
aaa
aad
and
dec
rcrl
mov
jle
lret
data16
push
add
aam
mov
sbb
in
dec
cmc
popa
jg
lahf
scas
inc
cli
mov
push
out
jl
fdivr
enter
out
mov
fiadds
xchg
push
jno
lods
neg
cmpsl
inc
pop
popf
aaa
ret
jae
jo
enter
push
and
jb
push
std
sbb
or
fs
xchg
in
negb
insb
fldenv
xor
repz
shlb
int3
scas
inc
or
test
xor
xor
mov
xor
in
aad
pusha
jp
jg
arpl
mov
arpl
fwait
movsl
inc
sbb
mov
mov
pop
ffree
aaa
sti
loop
icebp
adc
mov
xchg
ds
xchg
outsb
push
fdivrl
lds
loopne
pop
adc
orb
mov
imul
sarl
ret
pop
cmp
mul
add
mov
mov
mov
outsb
inc
fstpl
outsl
in
xchg
mov
cld
cwtl
leave
mov
mov
jmp
test
lahf
rcrl
jge
mov
mov
subl
cs
loopne
in
mov
xchg
adc
adc
add
lcall
sti
in
pushf
push
popf
popa
mov
movsl
sub
xor
fwait
jno
fsubl
cmpsl
mov
mov
mov
inc
movd
sbb
dec
mov
iret
add
cltd
das
clc
popf
in
les
sbb
sahf
cli
ja
sub
leave
and
jl
mov
pop
fldcw
push
mov
inc
mov
jge
jecxz
cmc
nop
ljmp
mov
aaa
sub
testl
cwtl
sub
scas
divl
inc
imul
loopne
scas
push
outsb
jne
cmp
cmc
push
xchg
xchg
cmp
dec
add
sub
outsl
negb
sbb
fcmovnbe
mov
mul
jge
ljmp
ss
es
fisubrs
inc
fsubrs
pop
cltd
or
cmc
lods
xchg
mov
sub
mov
mov
dec
jmp
push
int3
mov
lea
and
shr
mov
stos
xor
jecxz
dec
sbb
in
cmp
imul
push
icebp
popa
cmp
mov
push
cmp
xchg
dec
fisttps
sub
loop
push
push
jnp
enter
cmp
aaa
jp
ds
daa
in
mov
sahf
cmp
cld
insb
sar
or
movsb
ljmp
jge
subb
bound
xor
fcmovne
mov
lcall
cmc
fwait
lcall
mov
cmp
push
pop
push
imul
andl
js
xchg
inc
push
inc
arpl
push
movsl
xor
call
scas
popf
mov
aam
cmp
test
cmc
mov
or
lods
pop
and
xchg
xchg
sbb
shlb
mov
pop
shl
subl
andb
inc
jl
mov
inc
data16
out
sti
dec
xchg
in
stos
shrb
xchg
push
or
jp
adc
insb
sbb
sbb
fidivs
gs
stc
or
mull
inc
aad
pop
jae
mov
fwait
xchg
gs
push
icebp
adc
shll
inc
mov
out
cvtdq2ps
mov
push
xchg
stos
inc
xor
les
sbb
imul
pop
xchg
mov
pop
cmp
pop
dec
pop
mov
jge
notl
sbb
call
lahf
orps
hlt
mov
mov
push
fwait
pop
std
lcall
in
push
popl
movq
repz
test
mov
pop
push
inc
flds
inc
jne
pop
in
pop
cmp
sbb
cmovle
add
mov
in
ret
push
out
jg
test
testl
cmpsb
sbb
pop
jb
xchg
out
mov
dec
mov
lods
ret
xchg
aam
ss
pop
arpl
clc
push
out
xchg
xchg
mov
in
dec
shll
cmp
sti
ret
mov
xor
repnz
mov
jge
jae
dec
pop
inc
push
in
addr16
jle
in
mov
xlat
dec
xlat
imul
xor
xchg
loop
stos
pop
pop
and
xor
mov
das
out
push
xor
shl
out
jmp
andl
mov
pop
add
mov
add
jp
iret
pop
pop
jbe
mov
je
xor
jl
push
fidivrl
sbb
cmp
xchg
adc
shlb
hlt
push
mov
mov
leave
cmc
enter
adc
cmp
sbb
cli
or
lods
or
mov
ja
add
xor
dec
mov
jmp
andl
scas
popa
scas
ret
jge
mov
in
pop
mov
sub
ja
cmp
repz
jbe
mov
mov
and
adc
cmpsw
cmc
aas
push
sub
sub
sbb
pop
mov
mov
mov
mov
leave
dec
fwait
lods
dec
mov
jg
cwtl
fildll
inc
loopne
xor
xor
movsb
add
sub
mov
loop
negl
mov
out
iret
xchg
push
jbe
and
mov
test
lds
fists
inc
mov
pop
int
jns
xor
and
es
sbb
fsubs
mov
andl
insl
xchg
inc
and
jle
test
fmul
lcall
in
push
hlt
sub
dec
sub
or
jb
mov
les
cli
mov
pop
mov
sti
fistl
mov
pop
pusha
jecxz
xor
dec
popa
notl
stos
add
adc
jge
jmp
arpl
arpl
repnz
add
stos
inc
sbb
inc
lret
mov
pusha
lcall
bound
sub
fwait
xor
imul
jmp
in
repz
sbbb
push
in
mov
leave
inc
push
out
gs
sub
lret
shlb
dec
xor
sbb
cmp
scas
lods
lahf
out
add
mov
fs
sub
xor
fstl
add
sbbl
and
test
adc
sbb
cmp
or
sbb
mov
jo
push
push
mov
aas
jnp
popf
clc
dec
adc
mov
ds
cld
jp
inc
int
xchg
cmpsl
add
jo
xor
dec
arpl
jg
jp
mov
and
in
inc
pop
push
inc
into
pushf
divl
loope
popf
ljmp
lret
inc
xchg
shl
inc
bound
fldenv
mov
jnp
inc
jg
pop
insb
adc
pop
ds
mov
cs
mov
ja
subl
enter
add
fstpl
inc
mov
fdivr
out
sub
push
pusha
orb
xchg
jo
dec
sbb
inc
in
stos
in
jnp
out
fdivl
dec
sbb
hlt
sbb
cmp
xchg
push
push
adc
das
jbe
mov
jp
jne
jns
mov
xchg
imul
adc
mov
jae
xchg
push
jl
stos
mov
insl
aas
ja
pop
pop
mov
sbb
sahf
cmpl
rorb
scas
fsubr
lahf
ss
mov
jg
lret
adc
pmulhw
js
sbb
fmull
andb
push
pop
fnstcw
mov
cmp
jecxz
mov
jge
ljmp
lcall
ss
mov
mov
sub
cmp
mov
cmp
jb
mov
mov
std
xchg
xor
cld
sbb
mov
xorb
jp
or
jle
jecxz
mov
add
scas
add
sub
int3
cmp
mov
ret
sub
cmpsb
shlb
dec
idivb
test
cli
push
push
cmpsl
mov
mov
cmp
clc
cmpb
pop
imulb
aad
adc
push
adc
dec
loop
loop
pop
fidivrs
mov
or
movsl
xor
insb
adc
fsubr
mov
cwtl
aam
pop
and
xchg
out
sub
fsubr
das
jnp
in
dec
daa
inc
dec
mov
shll
mov
push
adc
xchg
and
imul
jg
add
jl
popa
mov
push
cs
jbe
movsl
inc
xchg
push
mov
stos
inc
mov
sub
cmpsl
jle
jl
add
push
or
lds
test
std
cs
mov
xchg
mov
das
sbb
sbb
jno
mov
ret
add
std
shlb
loop
testl
jmp
xchg
mov
lret
jno
push
outsl
mov
out
hlt
mov
addr16
stos
inc
push
pop
sub
adc
test
outsb
iret
cs
rcr
jl
frstor
pusha
and
ror
cld
adc
int
fdivs
cld
sbb
ret
and
pop
arpl
pop
loope
dec
mov
dec
and
cmc
mov
js
int3
ds
sub
jge
sbb
cmp
mov
inc
fcmovnb
pushf
sub
shlb
fs
push
call
jb
pop
add
test
adc
and
mov
pop
int
dec
adc
mov
lock
add
cmpsl
sub
lods
ss
fists
sbb
test
jge
jbe
addr16
aam
inc
imul
adc
das
xor
push
cmc
aad
or
popf
pop
sub
lock
mov
cli
lret
scas
and
test
inc
mov
push
leave
das
xor
fnstcw
cld
add
in
or
ror
mov
lods
push
ljmp
ljmp
pop
xor
movsb
pop
cs
hlt
aam
stos
mov
daa
mov
pop
inc
lea
xor
and
fs
mov
out
outsb
inc
imul
mov
push
stos
xchg
fildll
daa
mov
mov
xor
sbb
popa
sarl
into
xchg
stos
jnp
push
mov
cwtl
or
cltd
and
mov
xchg
lods
add
dec
pop
ljmp
xor
push
clc
iret
int3
sbb
lret
leave
in
pop
and
dec
loop
dec
daa
outsl
call
xchg
mov
sbb
iret
pop
jecxz
mov
cltd
in
mov
dec
cltd
popa
loop
clc
cmpsl
cltd
mov
js
sbb
mov
ret
inc
and
inc
pop
sbb
sub
dec
outsl
pop
dec
and
xchg
adc
adc
rcrl
mov
mov
enter
mov
daa
dec
pop
ret
rcl
jmp
das
xchg
enter
inc
jecxz
mov
jge
push
pop
in
push
gs
lahf
mov
cmc
pop
inc
xchg
imul
xchg
loopne
lea
mov
cmp
fisubrl
test
pushf
mov
cmp
jle
popa
add
fnstenv
in
aas
push
or
mov
jno
jnp
push
popf
fdivrp
leave
pushf
into
enter
cld
cwtl
repz
xorl
push
or
ret
ss
into
mov
xor
xor
sub
pusha
pop
aas
mov
aas
mov
fstpt
jecxz
lods
adc
jge
add
push
mov
popf
jns
and
jge
inc
pop
leave
sahf
je
dec
clc
and
call
push
lods
aas
insb
add
iret
push
fdivrs
sbb
mov
adc
or
lea
push
jecxz
test
stc
mov
sub
mov
mov
adc
fcmovbe
fistpl
inc
gs
fistps
lahf
pop
outsl
mov
repz
mov
xchg
xchg
xor
idivb
xchg
fbstp
mov
adc
stos
test
vpmuludq
jnp
mov
or
shrl
sub
lods
push
div
stos
push
jmp
setle
orb
mov
loope
adc
pop
insl
xchg
xor
push
dec
into
fs
push
rorb
lods
lods
jmp
mov
int
dec
hlt
mov
pop
addr16
into
jecxz
jl
mov
mov
push
in
dec
pop
xchg
sbb
mov
test
pusha
sub
loopne
cmp
pop
add
iret
ret
repnz
lcall
mov
and
add
mov
loopne
neg
testl
out
xchg
ret
pop
ret
lar
mov
pop
out
pop
fsubs
mov
pop
iret
inc
enter
cmp
pop
popf
mov
into
adcl
ljmp
pusha
cmp
ja
inc
pop
dec
push
jno
test
popa
add
push
lods
or
imull
mov
sub
dec
ja
notb
inc
gs
push
fwait
mulb
pop
dec
dec
jb
mov
pop
xor
pop
mov
cwtl
stos
aaa
jno
dec
ds
dec
pop
mov
cmp
add
xchg
popa
mov
or
loope
xchg
clc
nop
mov
subb
popf
add
and
scas
pop
scas
adc
in
pop
subl
insb
sub
jno
movsb
or
out
pop
notl
xor
adc
push
push
pop
icebp
nop
stc
fsubr
cs
test
jge
jge
sub
xchg
pusha
rcl
jecxz
mov
cmp
icebp
movsl
jecxz
ja
push
test
dec
jo
cmp
les
xor
cmc
mov
es
loopne
adc
xchg
mov
cld
rclb
cmpsl
nop
jl
xchg
and
mov
jae
imull
mov
xchg
pop
inc
mov
jb
cmpsb
add
sbb
stos
push
sahf
js
lds
push
inc
ret
inc
fsubrp
push
jmp
and
or
bound
int
mov
call
xlat
arpl
add
dec
fists
movsb
clc
adc
arpl
sbb
insl
xchg
montmul
cmpsb
ret
stos
ss
aam
cmp
adc
repnz
xchg
cmp
sbb
cmp
divl
sbb
lock
inc
mov
cmpsb
xchg
jnp
inc
arpl
pop
xlat
lret
cmp
jns
add
pop
cmpsl
out
push
xor
mov
xor
mov
pop
mov
cmp
ljmp
xchg
cmp
xor
outsb
rorl
inc
xchg
mov
jmp
icebp
ret
dec
outsb
jecxz
and
mov
mov
push
test
call
sub
sub
jae
lods
rolb
mov
into
push
leave
xor
and
push
push
mov
lret
push
lea
int3
enter
repnz
stos
lds
dec
dec
mov
push
dec
dec
sti
in
inc
fdivrs
push
pop
jle
outsb
das
mov
mov
sbb
mov
add
pop
mov
lret
cmp
icebp
sbb
ficoml
inc
cltd
cmpsb
lea
aas
lea
inc
ds
mov
loopne
lahf
in
jp
inc
fmull
xchg
ret
ljmp
ret
inc
stos
dec
sbbl
shll
pusha
iret
dec
popa
lret
je
addl
imul
pop
movsb
out
or
fdivrs
data16
call
insl
inc
sahf
icebp
repnz
shlb
pop
cmp
and
sub
orb
inc
xchg
add
in
pop
jl
adc
cmp
mull
cmp
dec
sbb
push
aaa
sub
jnp
stos
popa
out
jle
pop
mov
xchg
call
lea
jb
daa
inc
push
cmp
jecxz
movsb
push
stc
push
aas
cmp
inc
daa
int3
push
addr16
std
cwtl
test
aas
push
jmp
cmp
ss
cmp
cmc
dec
cmp
dec
and
iret
dec
roll
lods
ljmp
out
sti
jae
dec
dec
lret
js
mov
push
std
cltd
aaa
inc
daa
cmp
mov
cli
pushf
pop
inc
addr16
ja
cld
outsl
xchg
sbb
pop
subb
nop
mov
outsl
mov
sahf
std
xor
out
mov
gs
lods
push
mov
add
mov
aas
xchg
push
push
mov
outsb
in
push
repz
pop
mov
xor
add
insb
cs
sub
or
pushl
mov
pusha
mov
fcoml
push
int3
shll
cmc
bound
or
mov
mov
and
pusha
fwait
jne
sbb
ret
mov
pop
xor
fsubrl
cmp
imul
mov
push
movsl
mov
xchg
inc
jns
out
cmpl
add
je
iret
lock
lcall
data16
add
lds
retw
shrb
fs
int3
jb
add
pushf
or
shll
popa
fmull
loope
adc
loopew
adc
fildll
jmp
xchg
iret
sub
aas
shll
xchg
pusha
movsb
and
std
insl
loope
adc
add
cwtl
sbb
jb
push
push
cli
shll
sub
mov
sbb
and
adc
xor
push
pop
cmp
cmovne
jns
outsb
sub
pop
hlt
pop
test
adc
sbb
xchg
mov
fnstenv
imul
and
push
fsubs
adc
inc
sbb
pop
movsb
bnd
lahf
sub
js
push
and
sti
mov
mov
cmpsl
mov
int3
js
out
cmp
adc
lahf
in
xor
push
mov
jne
push
aam
adc
mov
movsl
push
lret
sub
into
jne
sbb
notl
cwtl
inc
mov
decb
mov
push
andb
xchg
mov
add
fcoml
repnz
inc
test
in
arpl
adc
stos
sbb
ret
pusha
mov
sbb
mov
cs
js
cmc
xchg
sub
cltd
lret
mov
xchg
cmpsb
push
mov
shll
movsb
fcoms
daa
and
or
lods
dec
aad
mov
and
lahf
pop
insb
jle
aam
xor
push
xchg
push
push
or
mov
out
sbb
mov
in
imul
cs
ja
push
mov
mov
dec
jl
imul
sub
shlb
sbb
outsl
aas
and
or
mov
adc
mov
fildl
mov
addr16
inc
fstps
mov
pusha
xor
or
or
cmp
test
ret
sub
jp
scas
mov
fidivs
ret
add
jge
pop
jnp
dec
jmp
inc
or
dec
out
mov
sbb
scas
pop
push
les
les
jmp
ret
add
movsb
mov
cltd
sbbb
mov
sub
lods
ds
lea
sahf
sub
add
pop
outsb
lock
arpl
push
cmp
or
mov
ficompl
mov
push
xchg
cmpsl
sub
jmp
push
jle
test
in
jnp
cwtl
push
fbstp
jnp
xchg
inc
lods
inc
popa
decb
test
jp
push
lock
testl
cmp
scas
pop
lcall
lahf
jmp
das
adc
inc
into
fidivrs
xorl
andl
jg
adc
out
push
cmc
mov
cmp
dec
in
dec
por
out
test
out
cmp
jecxz
fisubs
fbstp
aad
and
push
shl
decl
adc
or
in
push
xor
adc
gs
pop
into
gs
daa
ljmp
add
mov
inc
and
popa
push
jns
push
test
mov
dec
ffree
xlat
inc
flds
out
ds
pusha
negl
sbbb
cmp
and
xchg
aaa
push
mov
out
mov
sarb
std
or
shrb
push
adc
jnp
xchg
xor
xor
aam
push
out
shrw
jns
mov
stc
and
call
test
inc
mov
ret
repz
test
ret
mov
loop
push
jmp
mov
out
push
xlat
sahf
xor
push
inc
fcoml
lds
negb
sbbb
dec
loopne
je
sbb
push
ror
decb
push
call
lods
dec
outsl
and
adc
and
pop
add
insb
fistps
sbb
pop
mov
sub
or
push
push
jg
mov
jge
inc
ja
pushf
mov
shr
addl
stos
jmp
jbe
movsl
push
xlat
fwait
jbe
add
xbegin
xchg
and
pop
fcomps
inc
mov
gs
stos
insb
aaa
cltd
xchg
push
popf
xor
cmp
mov
xor
call
and
scas
and
pop
cs
loopne
mov
clc
out
in
into
xchg
sbb
or
fdivl
pop
nop
daa
clc
xor
pop
loope
mov
jecxz
jne
inc
in
push
mov
iret
data16
rcll
test
icebp
push
arpl
cltd
aam
js
test
adc
ss
mov
adc
cwtl
jmp
sub
cli
maskmovq
lret
mov
mov
lods
shl
inc
or
subl
cmp
inc
dec
inc
mov
pop
aaa
mov
xor
andl
xchg
xchg
xorl
xor
out
add
mov
sub
scas
cmpl
mov
mov
faddl
int
pop
xorb
mov
inc
cs
jne
cmpl
or
mov
popf
mov
in
test
cmpsb
push
add
jmp
sbb
mov
push
clc
stc
aas
inc
add
cmpsb
out
lock
cltd
xchg
out
mov
dec
data16
test
push
mov
push
or
jnp
mov
jge
in
inc
jae
push
or
push
xchg
decl
lds
mov
cltd
pop
aad
lret
pop
pop
daa
add
mov
mov
lods
fcoms
or
jle
hlt
mov
test
xlat
mov
dec
adc
sub
push
and
leave
jecxz
inc
cld
lcall
push
stos
push
or
lret
add
pop
insl
fistps
cvtps2pd
ja
xor
xlat
out
ljmp
pushf
ds
ror
fld
cld
push
mov
push
das
or
mov
mov
in
sub
mov
add
mov
push
mov
outsb
xor
stos
mov
jecxz
xchg
repnz
mov
or
or
cmpsl
sub
cld
sub
repz
testb
or
pop
mov
insl
mov
inc
fildl
push
repnz
outsb
ror
jno
mov
mov
mov
loope
cmp
cmp
idivl
ret
push
sarb
scas
push
jae
mov
xchg
push
mov
out
mov
inc
inc
push
dec
xchg
fucomi
or
in
fwait
das
mov
inc
and
jl
fcoml
cld
xchg
jno
xchg
fwait
out
push
mov
icebp
xor
shll
js
jo
pushf
cmp
cld
aam
sbb
stos
shl
mov
fimuls
daa
fs
sbb
repz
jno
aaa
xchg
add
or
gs
dec
in
mov
jge
push
pushf
arpl
in
pop
cmpl
dec
mov
icebp
cmpsl
sub
test
dec
cmpsl
or
and
loope
in
push
dec
call
adc
std
push
popa
arpl
in
mov
xchg
test
nop
mov
std
jp
mov
push
mov
cli
pop
insl
into
std
xor
outsb
outsb
in
int
or
data16
gs
sub
lcall
adc
daa
mov
je
mov
std
xchg
stc
adc
xor
arpl
fdivrl
or
movsl
in
sti
add
out
inc
lahf
add
jmp
xchg
sbb
ficomps
rcll
scas
stc
mov
lea
dec
and
push
test
std
arpl
rorb
xrelease
loopne
jb
iret
dec
mov
jge
mov
push
xchg
in
sahf
lods
mov
lret
adc
add
sbb
jmp
pop
xchg
xor
push
dec
ds
mov
nop
orl
lret
iret
data16
jge
data16
sbb
pop
cmpsb
mov
shl
xchg
xchg
jnp
ja
adc
popf
loopne
dec
imul
add
adc
scas
pop
pushf
mov
hlt
xorb
shll
adc
repz
pushf
stc
cmc
in
cmp
pop
dec
loop
push
in
adc
inc
lods
stos
repnz
lock
fsub
pop
fwait
xsha1
cmpsb
int3
sub
test
and
dec
push
xchg
test
das
ds
push
xor
adc
adc
test
pop
jns
inc
mov
xlat
outsl
mov
ss
pop
push
mov
in
sub
mov
cmp
inc
jb
bound
ss
mov
cmp
in
cmc
imul
mov
mov
fwait
adc
inc
mov
andl
dec
or
mov
fcomip
lea
jmp
mov
inc
nop
dec
hlt
cmc
jmp
pop
xchg
push
jl
dec
out
push
enter
das
inc
cmp
jae
jmp
cli
mov
mov
inc
xlat
popa
pop
cmc
insb
insb
pop
bound
mov
jo
sbb
pop
lcall
lds
popf
add
jmp
push
fldt
sbbb
stos
inc
inc
mov
clc
scas
jmp
pushf
mov
dec
push
cmpsl
bound
adc
pop
jae
mov
pop
mov
push
pop
pushl
mov
jae
addr16
cli
fs
jmp
dec
push
jno
or
shrl
adc
inc
fsubrl
and
adc
aad
push
fucomi
loop
adc
add
repnz
jno
mov
mov
sub
popa
hlt
in
stos
inc
jmp
sahf
push
mov
aaa
arpl
leave
xchg
pop
loop
mov
stos
mov
scas
lock
rol
pop
add
ja
lcall
pop
push
mov
iret
or
lret
fstps
add
sub
mov
xorb
mov
scas
int3
repnz
and
stc
repnz
or
stos
adc
imul
or
les
xlat
outsl
mov
xchg
jmp
and
mov
out
mov
sub
xchg
hlt
jp
test
xchg
scas
pop
addr16
in
xchg
mulb
or
shll
js
mov
push
sbb
push
mov
arpl
xchg
lods
jg
xor
push
sub
in
inc
pop
mov
rolb
jne
or
add
fisubl
pop
fnstenv
xchg
xlat
ret
mov
and
jns
sub
int
xor
inc
cmp
pop
jae
popa
inc
sub
fdivrs
lods
fs
cmc
jp
lds
jecxz
sub
cwtl
push
push
jmp
fstpl
mov
clc
inc
push
lods
mov
loopne
subb
xchg
arpl
test
je
push
lock
inc
pop
sub
cmp
repnz
cmpb
lods
add
cli
xor
outsb
std
push
out
adc
xor
xor
arpl
mov
xchg
call
inc
fildll
cs
xchg
push
stos
mov
loope
cmp
je
jp
mulb
jo
out
sbb
push
mov
jnp
pop
lods
cmp
sbb
or
mov
ret
cmp
sahf
sub
or
es
insb
dec
imul
mov
push
mov
scas
push
inc
or
movsl
cmp
pop
add
jg
push
and
or
mov
pop
sar
je
not
imul
mov
and
popf
lcall
lock
jno
in
pop
orb
mov
lock
in
jl
hlt
aas
adc
subb
pop
hlt
outsl
pop
shl
pusha
push
fst
popl
call
mov
shll
jne
and
and
shrb
jmp
ret
fcompl
mov
push
xor
dec
inc
jl
insl
sbb
shrb
test
mov
adc
push
lret
ret
stc
cmc
in
lahf
testl
adc
test
imul
or
scas
push
mov
jne
or
push
cmp
cmp
fsubrs
pop
cld
jae
jns
mov
inc
mov
js
bound
sbb
dec
inc
out
xchg
xchg
pop
dec
inc
outsb
insl
hlt
loope
lock
add
into
and
push
scas
lock
clc
adc
movsb
ds
outsl
shrl
cmp
popf
pop
mov
push
in
je
stc
ss
jg
data16
insb
std
leave
int3
and
mov
scas
lods
mov
lret
arpl
mov
ljmp
add
xor
shll
cltd
loop
int
sub
mov
clc
inc
push
mov
push
jno
aas
lods
pushf
jbe
into
fdivp
adc
xchg
mov
ret
hlt
leave
jg
pop
adc
jg
adc
stos
jle
pushw
mov
daa
push
jle
sti
mov
shrl
mov
push
jb
adc
ror
dec
rcrl
repnz
nop
push
out
mov
pop
xor
jne
jnp
or
cmp
ss
push
hlt
faddp
push
orb
sbb
loopne
sbb
scas
fwait
addr16
cmp
arpl
pop
or
dec
sar
pop
pop
es
mov
mov
fstp
mov
out
adc
andl
call
shll
mov
sbb
cmc
adc
push
inc
adc
cwtl
and
sbb
movl
dec
pop
adc
lret
jmp
rcr
dec
dec
jns
pushf
sub
and
mov
cmc
sub
stos
cmpsl
dec
inc
outsb
sub
mov
ficompl
mov
ja
push
cmp
addb
push
inc
pop
push
inc
pcmpgtb
push
sbb
decb
pop
push
cmc
adc
scas
xchg
jns
lea
xchg
sbb
dec
call
sub
pop
mov
lret
sti
icebp
cmp
adc
rolb
jno
jmp
push
cltd
cmp
out
xor
mov
test
pushf
fldenv
and
sarl
lahf
xchg
push
and
jbe
imul
call
dec
mov
dec
add
xchg
mov
pop
sub
jle
jbe
push
push
dec
mov
ret
lock
inc
and
in
push
subb
add
mov
icebp
js
icebp
movzwl
lahf
push
icebp
xchg
sbb
inc
out
nop
sub
mov
dec
pop
mov
sub
add
adc
inc
xor
insl
arpl
inc
mov
into
fnstenv
adc
sub
xchg
fldt
mov
cmp
mov
inc
fmull
leave
pusha
push
test
out
in
lcall
fists
loop
aas
dec
loop
movsb
jp
pop
call
loopne
mov
pop
aas
xchg
stos
sti
frstor
shlb
xlat
rolb
cmp
aam
js
sbb
int
and
mov
lock
sub
shll
incb
mov
adc
fs
aad
scas
aaa
sub
stos
mov
push
mov
dec
add
jle
or
in
sbb
mov
cmp
mov
and
and
iret
cli
adc
pop
nop
add
push
pop
push
xchg
nop
fisubrl
pop
gs
les
cld
xchg
jecxz
out
mov
shrb
jp
mov
xor
enter
mov
outsl
faddl
outsb
add
xchg
mov
add
xor
sti
dec
dec
and
xor
pop
iret
pushf
sbbb
fdivl
and
pop
xor
push
mov
daa
fwait
cwtl
adc
cmpsb
es
imul
fiadds
sarb
scas
test
mov
sub
out
jl
or
cs
pop
mov
mov
jne
movsb
mov
jb
jmp
push
dec
test
mov
xchg
mov
mov
inc
bound
and
pop
xchg
sti
clc
int3
fs
addr16
andb
outsb
notl
js
xlat
outsb
cltd
loope
or
xor
jp
nop
or
mov
cmp
add
push
and
popf
mov
fsub
mov
loopne
rep
inc
xchg
cli
jg
stos
pushf
sbb
cmp
sub
je
scas
push
pop
adc
jle
cmp
dec
or
dec
out
scas
enter
aad
mov
sub
sub
popf
stos
popl
cltd
js
popf
sub
lods
inc
fcmove
enter
xor
lods
inc
sub
push
cmc
mov
pop
push
cltd
add
and
xchg
jg
out
aaa
rcr
repnz
in
gs
and
sbb
adc
cmp
int
insl
mov
mov
mov
push
mov
mov
adc
cmp
mov
out
ss
xchg
sub
out
ds
lea
or
mov
popa
pushf
mov
lret
dec
xor
cmc
in
pop
push
add
push
pop
jmp
fsubrs
push
imul
push
mov
insl
das
pop
dec
lods
aaa
push
hlt
jne
cmpsl
aas
outsb
cmpsb
xor
je
lds
mov
lds
sti
imul
bound
add
xchg
inc
dec
push
pop
push
scas
mov
add
inc
pop
cmp
pusha
mov
mov
fdivrp
shrb
adc
pop
xchg
xor
sarl
mov
stos
rcl
lret
push
xchg
rcrl
cmpsl
sahf
lods
loopne
pop
popa
adc
and
inc
inc
jne
ljmp
jb
sub
call
push
adc
pushf
mov
inc
fdivrs
push
push
sbb
dec
jp
push
mov
ljmp
enter
sub
orl
outsb
nop
popf
adc
outsb
add
cmovle
xor
and
js
adc
movsb
int3
ss
stc
sub
and
or
dec
daa
shlb
xor
adc
xor
cmp
fnstsw
dec
xchg
fs
es
jle
xchg
into
aam
add
dec
push
rcrl
dec
loop
nop
xor
aad
orl
sarb
push
push
test
fs
adc
mov
jle
and
adc
mov
jl
fldenv
les
lock
push
fsubr
aaa
mov
inc
call
push
movsb
outsb
jl
jne
fldcw
in
inc
sub
pop
in
fistl
push
insb
sti
lret
incl
pop
std
shl
inc
cmc
int
aaa
lahf
inc
out
test
fnstenv
je
and
rep
cltd
es
test
mov
push
mov
call
xor
or
test
subl
or
xor
adc
imul
sbbl
into
aas
mov
popa
jae
lcall
mov
andl
insb
out
dec
mov
lret
and
push
ja
mov
and
sub
pushf
push
fdiv
sbb
mov
cmc
sub
sub
popf
mov
or
stc
aaa
daa
mov
mov
loope
mov
aad
lret
aas
ret
adc
jmp
fwait
xchg
cmp
add
idivb
xchg
aaa
into
lds
add
xchg
dec
pop
sbb
sbb
pop
xchg
shl
lcall
shlb
add
mov
push
inc
in
cwtl
mov
jmp
test
adc
jecxz
rcr
push
xor
sti
gs
jmp
push
and
cmpsl
testb
je
movsl
fdivp
xor
xor
sbb
dec
imulb
mov
enter
cmp
in
pop
jge
mov
pop
into
or
lods
jns
inc
popa
mov
cmp
xor
dec
dec
jbe
mov
push
shr
sub
inc
sub
pop
shrl
call
pop
in
fsubr
adc
and
cmp
mov
cmp
sarb
add
xchg
adc
push
add
jne
aam
sbb
shll
xor
test
mov
aam
jp
sub
pushl
stc
cli
pop
cmc
mov
push
stc
fistps
in
rcl
push
scas
cmp
adc
cwtl
jns
xchg
cli
pop
lret
sub
fwait
xchg
out
pop
mov
pop
fildl
push
xchg
mov
push
mov
and
jo
in
inc
push
jne
nop
cmc
cmp
fmuls
add
outsb
xchg
loopne
add
mov
shl
aaa
push
and
cli
fucomip
movsl
int3
xchg
push
ja
andb
mov
dec
sub
rcll
lret
hlt
add
scas
or
xor
fisttpl
shrb
or
stc
es
or
xchg
push
mov
pop
insb
popf
stos
cwtl
das
mov
lret
xor
push
ret
pop
inc
in
or
add
pushf
push
fwait
and
and
lods
xor
mov
jae
sub
ret
shll
bound
dec
pop
adc
adc
mov
ror
aas
insl
sti
mov
add
xchg
aad
dec
push
rcll
sahf
push
sbb
mov
push
movsb
cmp
mov
data16
sbb
jge
xchg
outsb
int3
pusha
push
sub
fwait
sbb
scas
add
ljmp
stos
mov
jge
pusha
aad
pop
push
add
mov
mov
inc
ss
fldt
push
push
sbb
mov
cmp
sarb
pop
inc
mov
loopne
loope
subb
pop
aad
loop
dec
insb
psubw
sub
jo
fbstp
xchg
fstpt
xchg
aam
adc
repz
lcall
rcll
or
mov
jmp
or
in
addl
mov
mov
inc
shrw
es
sub
dec
mov
pop
fucomp
mov
and
mov
inc
in
fcomps
cmpl
stos
cmp
dec
cmp
mov
les
jmp
mov
jae,pn
fisubrl
sbb
stos
aaa
mov
adc
loope
adc
mov
lret
icebp
inc
jae
arpl
loopne
pop
pop
inc
adc
pop
jb
xchg
aas
rcrb
lcall
ljmp
sbb
pop
in
cmc
adc
dec
fucom
adc
lods
xor
pop
push
add
jae
adc
cli
test
push
cmp
addr16
cmp
xchg
fcompl
imul
scas
mov
jns,pn
fwait
jmp
iret
pop
inc
mov
or
lds
sbb
popf
cmc
into
fcoml
mul
xchg
mov
adc
cwtl
sbb
hlt
xchg
sbb
mov
xor
cld
lcall
popa
add
push
sbb
adc
rcll
pop
mov
out
mov
sub
dec
loopne
aas
shl
pop
jo
adc
sub
xor
int
in
xor
iret
bound
loopne
gs
mov
out
dec
push
mov
or
fsubrs
mov
outsb
ds
enter
cmp
loope
ja
sub
decb
pop
adc
add
lcall
push
jge
mov
mov
outsb
rol
pop
div
scas
mov
jae
push
xor
ja
fdivl
sub
sub
lods
dec
shl
test
pop
add
mov
bound
cmp
rcr
mov
bound
aas
fdivp
or
out
adc
jnp
out
sub
cmp
out
lcall
dec
jb
popa
test
xchg
addl
loop
cmp
inc
pop
imul
cmc
jb
aaa
push
add
scas
repnz
xchg
xorl
mov
mov
frstor
cmp
mov
jns
lea
fwait
lahf
fsubrs
es
push
mov
pusha
add
addr16
sub
pop
sti
fucomi
and
sbb
pop
or
repnz
cmp
imulb
inc
fnstcw
push
xor
fists
xchg
xor
push
arpl
jnp
xchg
and
inc
push
stos
out
jge
jmp
or
lea
jns
insb
or
sbb
adcb
mov
pop
jp
pop
into
fiadds
mov
dec
pop
xchg
sbb
mov
xor
ret
addr16
dec
jmp
pop
popa
out
jmp
and
cmp
inc
pop
or
pop
cmp
fcompl
mov
jne
cltd
push
int
mov
sbb
mov
insl
out
pop
popf
or
cmp
sti
mov
subb
jnp
sub
xchg
mov
fcmovnbe
repnz
lds
add
iret
jecxz
add
stos
mov
sub
subb
or
pop
hlt
xchg
cs
jnp
pop
cmp
cmp
inc
xor
sub
pop
addb
xchg
imul
push
sbb
in
xchg
out
mov
cmp
cmpsl
daa
outsl
dec
fs
adc
js
lods
rcl
cltd
addr16
cmp
test
arpl
jae
ds
jle
movsl
jae
cmp
xor
arpl
cmp
fsubrs
push
or
mov
dec
xchg
jae
shll
ret
xchg
pop
mov
dec
dec
icebp
cmp
lods
jmp
cmp
or
ss
insb
rolb
mov
jnp
daa
cmp
loope
imul
inc
icebp
add
xor
ljmp
scas
test
shrl
test
movl
xchg
pop
and
fcmovnb
test
fbstp
jns
push
add
aam
push
jmp
nop
bound
lcall
insb
rcrl
cwtl
bnd
in
lea
inc
adc
repnz
mov
jge
je
sub
push
add
aad
shl
adc
xchg
jae
arpl
jge
addl
pop
in
dec
cmp
aas
dec
scas
push
xchg
sub
mov
jle
dec
pop
lods
in
dec
loope
jbe
divb
pop
lahf
sarb
call
and
sbb
adc
cmpsb
jge
xor
lock
sub
pusha
lcall
hlt
push
lret
shlb
jmp
mov
push
fisttpl
loope
adc
aad
insb
lods
jmp
sub
lods
cmp
xchg
fcomps
aas
shrl
and
or
cmc
cld
jle
lret
cmp
inc
push
push
mov
ss
sti
xor
subl
add
mov
sub
or
lods
insb
sbb
sbb
rcll
lcall
push
jbe
outsl
jp
mov
lds
addr16
jo
add
jb
mov
lret
add
dec
shr
and
adc
pop
out
fisubrs
jmp
push
jmp
mov
jbe
inc
arpl
dec
cmpsl
into
hlt
xor
popf
arpl
cli
inc
dec
xor
adcb
adc
lcall
push
ret
push
call
dec
adc
adc
repnz
out
fcomi
jge
shll
xorb
cmp
aad
bound
cmp
xchg
pop
and
popa
insb
push
lods
stc
dec
lock
mov
add
adc
mov
lods
loope
fiaddl
push
aam
fs
in
stc
jmp
mov
iret
mov
in
lds
scas
fwait
and
lods
xchg
pop
not
add
mov
call
push
xor
mov
pop
out
mov
mulb
jmp
popl
sbb
sbb
fwait
scas
and
push
inc
ljmp
out
loope
and
mov
mov
jmp
clc
mov
mov
inc
pop
pand
andb
in
scas
fwait
das
xchg
stos
pusha
mov
lock
pushf
shrb
and
pusha
xorb
sbb
out
sub
mov
push
pop
popf
ret
xor
mov
enter
insb
test
sahf
xchg
into
mov
ficoml
dec
in
test
jg
push
xchg
or
arpl
lahf
aas
mov
dec
sub
and
outsl
pop
mov
cmp
cmpsb
cmp
mov
cmp
aad
xchg
pmaxsw
aaa
ret
leave
or
jae
inc
movsl
aam
dec
xchg
rorb
mov
xchg
loopne
mov
insb
lret
xor
repz
push
loopne
jmp
adc
daa
lods
scas
xor
push
int
sbb
das
xchg
popf
xor
push
mov
ljmp
inc
out
cmp
insl
add
sub
rcr
jle
or
pop
jnp
popl
cltd
test
add
cmpsl
mov
repnz
lea
jmp
or
mov
sub
adcb
daa
les
pop
lahf
scas
push
out
jae
xchg
bound
rclb
divb
jge
cmpsl
cmp
arpl
xor
or
mov
inc
call
outsl
push
lahf
dec
mov
imul
xchg
sub
std
mov
push
iret
or
aad
mov
cmp
leave
sub
enter
push
sub
sub
out
icebp
cwtl
scas
mov
jg
outsb
adc
push
push
sbb
jb
cmc
jb
push
inc
push
mov
fidivs
cmp
xchg
cld
xchg
lahf
imul
les
xor
and
iret
push
xchg
das
test
in
lds
mov
cmp
movl
and
out
push
or
cmp
mov
mov
mov
jmp
or
mov
jae
mov
sarb
call
lods
push
imul
mov
fwait
idivl
jbe
jo
test
std
shll
int3
xchg
daa
inc
pop
pop
mov
ljmp
fldcw
iret
ror
adc
cltd
mov
mov
sti
xor
push
rclb
sbb
mov
pop
icebp
sbb
sbb
add
mov
icebp
adc
cwtl
add
fnstenv
orl
add
cltd
xor
nop
xchg
pop
pop
daa
sbbb
jge
and
inc
pop
icebp
ljmp
push
xor
cld
inc
jle
and
xlat
sahf
aam
pop
stc
sti
xor
fs
pop
int3
data16
repnz
divl
aas
cli
mov
xor
nop
push
in
push
ds
push
jne
clc
mov
flds
jnp
lods
inc
sbb
mov
pop
rcl
into
adc
push
mov
push
je
imul
addl
cmpsb
rcrb
loope
sarb
incb
outsb
fwait
push
js
adc
dec
mov
mov
xchg
jnp
cmp
ja
rorb
jl
clc
inc
lods
xchg
fwait
das
lahf
rol
sub
mov
push
out
pusha
add
pop
shll
les
lahf
shr
int3
lock
lods
dec
mov
push
inc
xlat
fnsave
lods
div
movsb
ds
sub
aad
jnp
fcomip
mov
out
xchg
or
pop
push
mov
loopne
test
test
cmp
lret
add
push
lcallw
pop
hlt
cmc
jg
xor
mov
inc
pop
mov
mov
mov
sbb
jb
xor
aaa
fwait
cmpsl
dec
push
dec
cmp
out
sti
test
cmpl
cmp
xlat
cmc
sbb
lret
xchg
movsb
or
mov
test
pop
leave
jge
repnz
pop
insl
mov
cli
mov
xlat
dec
adc
mov
ljmp
scas
mov
adc
push
sarb
jbe
inc
es
negl
xchg
dec
sbb
mov
and
data16
push
shrb
pop
divb
cmpsl
out
sbb
pop
jne
jbe
add
xchg
pop
push
and
jne
cli
in
adc
and
pop
xor
lods
or
leave
stos
mov
imul
popf
lret
testb
rclb
cmpsl
rcll
les
lds
mov
mov
dec
into
mov
jmp
shrb
or
mov
int3
data16
lock
insl
add
cmp
sti
hlt
iret
or
jne
sbbl
shl
and
repnz
jle
jmp
in
fistpl
pop
andl
push
aad
dec
or
push
cmpsb
sbb
mov
push
mov
stos
fmuls
xor
popa
dec
inc
or
sbb
shll
dec
mov
scas
push
stc
cmc
mov
js
push
push
inc
or
jg
dec
es
not
in
adc
dec
stc
idivb
addr16
mov
cmp
in
jbe
lds
and
jg
fimuls
lods
gs
in
xchg
xor
fbstp
lcall
cmp
dec
xor
iret
xchg
cli
xchg
adc
je
fwait
jg
es
out
xchg
sarl
fistl
scas
les
popl
jp
sbb
andl
lods
inc
and
cli
into
ds
or
movsb
repnz
fstps
cmp
loopne
pop
ret
sbb
mov
add
lods
xchg
pushf
and
out
cmpsl
dec
sub
add
outsb
cs
mov
xchg
movsl
fcomps
add
push
mov
mov
jno
mov
xorb
mov
jl
ja
call
cs
popa
xor
jne
cmp
cs
cmc
add
call
jecxz
divb
xor
inc
popa
jmp
cmp
mov
xlat
in
rolb
data16
cltd
insl
sub
jl
cmpsb
mov
mov
test
jne
outsl
pop
or
in
cmpsb
inc
insb
out
movsl
mov
out
ljmp
in
xor
paddq
xor
jecxz
jns
xor
scas
push
xor
addr16
call
out
lock
push
in
xor
dec
jne
out
bound
jg
xorl
dec
or
shrb
jb
inc
cmp
mov
jmp
add
push
sub
mov
push
mov
xor
push
cmpsb
mov
sbb
pop
inc
iret
fistl
push
xor
pop
or
or
xchg
lods
sub
loope
jns
jmp
or
jb
dec
and
in
fimull
add
rolb
mov
mov
ljmp
shll
out
out
js
cld
test
mov
jmp
fisttpl
les
and
subb
xchg
daa
inc
push
movsl
dec
out
pop
fmuls
neg
ja
loop
mov
jbe
out
test
rorl
mov
and
xchg
dec
movq
and
and
inc
lea
push
mov
inc
mov
data16
pushf
sub
inc
adc
mov
scas
inc
inc
lret
mov
lods
add
mov
sbb
cmpsl
xchg
loope,pn
sub
mov
leave
cmpsb
sub
cmp
sbb
mov
sub
mov
push
subb
fdivrl
fnstsw
fisubl
stc
push
scas
push
cmp
insl
outsb
cmc
mov
mov
lock
mov
cltd
loope
jp
adc
and
push
arpl
jle
movsl
mov
pop
sbb
cld
enter
call
and
adc
sti
in
mov
lds
mov
cmp
push
inc
pop
mov
sti
mov
mov
test
cli
jle
push
into
cwtl
insb
mov
arpl
shlb
int3
jnp
inc
xor
mov
lock
push
mov
call
shrb
inc
pop
lock
xchg
and
ret
pusha
ja
xchg
in
fcoms
ss
addr16
lods
inc
cmp
add
or
in
sbb
jmp
lcall
in
xorl
clc
insb
add
flds
jmp
lcall
in
or
jmp
lcall
in
test
jmp
pushf
jle
add
mov
xchg
cli
sbb
aaa
adc
rolb
into
pop
mov
cmpsb
rorl
mov
pop
insl
out
imul
rorb
mov
sub
ss
repz
jns
push
xchg
ret
jge
fsubl
or
cmpsl
ja
mov
mov
adc
andb
jns
push
stos
jg
or
cmp
es
jno
cmp
dec
xchg
dec
inc
xchg
cmpsl
icebp
in
shl
or
pop
sub
add
xor
mov
int3
psrlq
mov
ljmp
mov
aas
stos
adc
into
in
les
mov
shrb
cwtl
adc
addr16
int
hlt
arpl
pop
cmpsb
into
fcoml
adcb
ljmp
out
jae
cmpsl
push
mov
mov
or
mov
push
pop
mov
out
push
out
pop
mov
dec
mov
pop
enter
sbb
dec
jge
cmpl
add
xor
xlat
in
cmp
mov
mov
imul
mov
mov
inc
fmul
rolb
or
mov
imul
sub
out
negb
xchg
cmp
sbbb
ret
jnp
and
test
xor
lods
sbbl
xor
add
imull
hlt
push
call
jo
outsl
inc
roll
xor
add
aaa
pop
imulb
xchg
js
stos
std
and
popf
push
mov
mov
or
testb
std
adc
loope
in
sub
scas
xchg
cmp
dec
roll
pop
les
adc
inc
jae
and
dec
iret
mov
ja
mov
fcmove
lds
add
in
push
mov
shlb
inc
pop
sti
dec
adc
mov
fcmovb
and
jns
xlat
testb
movsb
cli
fimuls
addl
mov
insl
or
fstpl
sbb
loop
sbb
xchg
movsb
mov
out
and
adc
sbb
inc
in
std
adc
push
adc
push
inc
mov
insb
hlt
push
insb
cmp
and
imul
mov
jmp
test
nop
cmp
clc
jb
mov
popa
clc
or
pop
sahf
add
es
clc
and
sbb
iret
pop
jg
aad
das
or
pop
cmc
jne
push
jmp
xchg
aam
cmpsl
aam
inc
or
push
cs
inc
push
cmp
iret
and
rorl
mov
loopne
in
add
add
aas
lods
and
mov
jecxz
pushf
ret
dec
into
mov
stc
imul
es
pop
push
and
inc
xchg
scas
lcall
mov
leave
dec
and
xchg
add
out
cld
lock
bswap
pop
cmc
aaa
mov
push
xchg
mov
adc
test
xor
jge
cmp
lods
lcall
test
jnp
jo
sbb
lcall
xchg
push
stos
pushf
mov
inc
and
fnstsw
jae
sbb
xor
andl
inc
push
das
push
mov
or
mov
cmp
pushl
bound
adc
sahf
test
in
fdivrs
nop
ss
xchg
mov
push
daa
xchg
idivl
xchg
mov
xor
xchg
ret
push
loopne
jmp
xchg
inc
andl
loopne
add
sbb
aad
pop
add
dec
aas
jo
jbe
jb
mov
dec
idiv
cmpsl
sbb
cmp
add
xchg
mov
mull
sub
mov
aas
push
cmp
mov
loop
mov
lds
lock
out
ds
and
mov
jmp
mov
ror
pop
dec
push
jae,pt
stos
adc
movsb
rolb
popa
jl
fsubr
or
push
jmp
in
mov
mov
loopne
in
add
cmpsb
xchg
jmp
pop
xchg
daa
dec
ljmp
das
cmp
sub
dec
lret
jle
scas
sub
dec
mov
outsl
sub
clc
jae
mov
push
and
dec
loope
or
xchg
jmp
fisttps
into
aam
scas
jecxz
and
in
fnstsw
push
clc
cwtl
das
sub
push
stos
jmp
in
mov
push
lods
inc
inc
andl
rclb
mov
xchg
cmp
jmp
push
popf
jp
icebp
das
inc
das
and
xchg
push
sbb
shll
or
adc
daa
cli
int
pop
pop
cmp
data16
outsl
imul
mov
jbe
xchg
out
int
into
dec
not
mov
mov
imul
push
mov
fcmovnb
arpl
movups
dec
adc
imul
jg
jne
cli
push
mov
inc
bound
push
mov
out
data16
imul
ja
push
push
mov
push
mov
int3
aaa
mov
and
insl
lods
sbb
mov
cmp
push
push
scas
es
mov
idivl
js
outsb
stos
pop
sbb
fmuls
test
fiadds
xchg
pop
in
out
push
repnz
out
jb
sub
icebp
icebp
xchg
jns
dec
adc
out
cmp
hlt
sbb
mov
clc
mov
testl
daa
divb
cltd
add
je
pusha
loop
mov
ja
adc
test
test
push
pushf
mov
and
andb
adc
sub
push
jle
lret
mov
iret
xchg
inc
xlat
rcrb
repz
mov
repnz
xor
pop
out
and
add
sahf
jmp
sbb
pushf
adc
ss
pop
bound
test
insb
popf
cmpsb
adc
scas
fwait
pop
daa
in
mov
popa
cltd
mov
xchg
dec
sbb
mov
in
adcl
mov
movsb
popa
jne
push
bound
mov
xacquire
pushf
xchg
scas
push
rolb
adc
mov
sbb
stos
daa
iret
pop
int3
mov
push
jge
mov
push
pop
cmc
test
mov
pop
adc
test
sbb
jne
push
lds
shrb
and
out
cmp
dec
stos
mov
mov
pop
in
cmp
adc
pop
jo
mov
testl
clc
xchg
pop
xor
pop
and
int3
pop
hlt
clc
out
cmp
pop
in
sahf
cwtl
pop
jne
mov
sub
loop
and
xchg
pop
jae
push
mov
sbbb
bound
call
xchg
inc
mov
sbb
mov
icebp
sub
pop
sub
out
and
jp
sbb
mov
fs
pop
jmp
or
jmp
movsl
sub
sti
dec
jle
inc
pop
sti
shlb
jb
mov
fldenv
insb
inc
inc
ljmp
mov
jmp
cmp
fistpl
mov
scas
pop
add
mov
lret
jge
sub
add
clc
aas
fstpl
mov
mov
rolb
arpl
call
cli
and
push
sbb
mov
xor
push
adc
xor
xchg
sti
pop
mov
mov
inc
fisubrl
xor
sub
sub
push
dec
dec
xorb
cmp
dec
popf
adc
adc
shlb
xchg
loope
cmp
xor
shlb
pop
mov
imull
fmul
or
pushf
inc
movsl
push
outsl
mov
jns
mov
mov
mov
dec
lds
and
stc
nop
outsb
xor
jle
cmpsl
test
add
mov
fildl
or
xor
xchg
icebp
jp
adc
push
sbb
clc
xor
scas
xchg
lock
xchg
add
dec
loope
andl
add
jae
mov
push
pop
xchg
sub
stos
scas
mov
lods
je
in
into
enter
push
inc
sub
scas
filds
aaa
adc
pop
jo
cs
jo
dec
jb
cld
ja
jg
sub
sub
lret
cmp
jg
aam
pop
lock
cmc
mov
loope
ja
int3
jp
hlt
dec
in
cmpsb
push
xor
jb
popa
add
loope
and
jl
cwtl
cs
dec
and
dec
test
in
das
add
out
adc
mov
mov
mov
mov
iret
lret
sub
mov
sahf
mov
sbb
out
ret
test
or
outsb
popa
andl
jg
pusha
xchg
lock
js
mov
sbb
sahf
ss
push
and
test
push
mov
sub
cmp
mov
fistpll
pop
outsl
or
enter
dec
iret
push
mov
pop
fiaddl
cmpsl
inc
sar
imul
mov
mov
adc
sbb
pop
rclb
xacquire
aas
loop
repnz
cmc
movsb
pop
lcall
jl
iret
xor
addr16
andl
jns
std
insl
ljmp
mov
sbb
mov
bound
lock
sti
mov
mov
hlt
push
mov
pop
sahf
inc
inc
pusha
fdivl
xchg
xor
cmc
lods
push
mov
cmp
mov
test
lods
push
sub
sub
pop
pop
lods
popl
outsl
cld
dec
push
js
icebp
and
fisubs
lret
das
cmpsl
add
sti
push
xor
xchg
mov
add
inc
mov
pusha
ficompl
jns
out
dec
pop
mov
es
mov
sub
scas
add
test
ret
movups
fwait
ljmp
pushf
scas
xor
xchg
cltd
insb
adc
outsb
aad
roll
dec
sbb
inc
add
push
pop
outsb
out
push
mov
xchg
mov
shlb
pusha
and
inc
sbb
jo
out
push
clc
mov
pop
adc
xor
xor
inc
js
test
adc
xchg
mov
mov
cmp
cmp
mov
ja
mov
sub
test
cmp
push
int
jg
popa
mov
dec
inc
pop
and
ficoml
fucomp
aas
into
lods
ljmp
pushf
cli
or
mov
outsb
sub
repnz
mov
out
mov
adcb
stos
jle
dec
insl
dec
cmp
or
stos
cmp
inc
xor
fs
in
cmp
inc
mov
or
push
into
or
mov
push
mov
cltd
ljmp
lahf
shlb
cmp
jl
js
fimuls
stos
and
test
inc
jae
into
sbbl
call
push
adc
inc
jmp
rcll
jmp
or
jge
push
fcomp
scas
inc
jmp
pop
pop
stos
jmp
sub
gs
dec
and
notl
and
pushf
push
push
sub
mov
or
xor
rep
rcr
inc
pavgw
cmp
int3
cltd
repnz
jo
test
jo
jns
add
xchg
or
mov
and
loope
inc
pusha
ljmp
mov
and
pop
pop
sub
es
xor
negb
loope
jp
add
push
cli
mov
dec
sbb
mov
xlat
or
jmp
or
xor
sub
push
sub
shlb
and
push
and
jmp
test
pop
xchg
mov
adc
lcall
stc
ss
es
cld
adc
jne
jmp
rcl
sbb
cmc
push
adc
adc
mov
cmp
inc
jmp
sbb
jle
loopne
and
rcll
divb
adcb
int
and
fwait
das
add
mov
aam
pop
repnz
mulb
cmp
add
sbb
test
sbb
mov
inc
add
test
mov
dec
jge
dec
mov
cli
sbb
jle
ret
fisubrl
or
lea
xchg
adc
mov
mov
mov
out
add
and
adc
mov
cmpsb
inc
adc
cmpsl
sub
adc
int3
mov
mov
mov
ret
cwtl
call
sbb
pop
in
addr16
shrb
cmpsl
stos
std
cltd
test
enter
test
in
incb
lods
push
xchg
clc
mov
ljmp
scas
xchg
and
cmp
inc
inc
stos
inc
mov
mov
and
aas
test
bnd
jns
pop
cmpsl
sti
test
stc
dec
pop
repnz
adc
add
icebp
rclb
dec
xor
jno
sbb
test
jb
fildll
xchg
stos
sub
ds
mov
push
inc
in
jmp
adc
lods
cmp
xchg
pop
icebp
dec
cmp
dec
ljmp
imul
cmp
fcompl
add
jb
cmp
xor
loop
or
mov
leave
cs
jae
dec
mov
inc
imul
push
mov
xor
add
cli
aas
add
in
cltd
icebp
mov
mov
popa
adcl
cmpsl
ret
mov
xchg
cltd
jl
cmp
xor
ljmp
fwait
cmpsl
movsl
xor
jno
mov
push
popa
xor
mov
mov
mov
mov
stc
and
dec
mov
push
or
push
addb
mov
pop
push
mov
xchg
popf
add
add
xor
lea
mov
stos
lock
dec
pop
repnz
xchg
cmp
out
pop
add
addb
imul
out
test
mov
cltd
mov
sarb
sbb
or
sub
pop
pop
loop
jecxz
fwait
sbb
pushf
imul
dec
out
xchg
cmc
inc
adc
sub
fsts
mov
lcall
mov
mov
stc
push
push
aas
lea
lea
out
dec
mov
jne
xor
add
xchg
dec
pop
sbb
sahf
lods
loope
push
fdivrl
cmp
jb
fnsave
iret
sbb
jns
push
xchg
pop
out
jl
lds
repz
jb
les
add
popf
pop
gs
jg
enter
lea
cli
gs
mov
mov
div
mov
dec
sbb
dec
jecxz
mull
dec
dec
xor
push
lret
pushf
inc
std
aas
sbb
sbb
cltd
jae
jge
xor
push
jns
pop
ret
pop
jecxz
std
xchg
repz
push
cmp
fnclex
dec
cmp
cmp
sub
fldl
fdivrs
mov
fcmovb
push
jmp
cmp
jecxz
pop
jle
lea
or
and
pop
or
sbb
cmp
jg
dec
mov
push
sbb
push
movsl
ret
and
xor
sub
lea
aad
cmc
and
xorl
mov
mov
imul
mov
cwtl
push
dec
loopne
adc
jo
daa
lcall
dec
jmp
fistps
adcl
add
shrb
loopne
dec
sub
jle
cmp
push
mov
fiaddl
call
mov
mov
std
test
icebp
pop
aas
hlt
jne
mov
xor
jmp
lret
sub
in
and
ds
loopne
popa
fs
jno
data16
imul
cli
data16
popf
fwait
and
inc
gs
in
ja
cmp
mov
adc
add
inc
pop
out
cmpsb
out
lahf
or
shrl
cltd
mov
insl
push
mov
add
and
push
movsl
lds
cmpsb
inc
clc
and
push
movsb
dec
mov
data16
push
lock
dec
out
test
push
sub
cmpsl
xor
dec
in
push
fstps
xor
jnp
and
repnz
jl
dec
jo
jnp
add
ljmp
dec
adc
jnp
add
into
out
dec
in
movsb
lea
je
cmc
cltd
cmpb
or
sbb
hlt
jnp
mov
add
rcr
adc
mov
outsl
jnp
sub
fnstcw
cli
es
or
ret
sub
adc
sbb
cmp
and
addb
insb
inc
daa
popa
mov
sbb
sub
cmp
cmp
or
nop
in
push
in
adc
adc
push
js
rclw
in
push
leave
mov
xchg
add
add
inc
negl
pop
sbb
sub
add
lods
mov
push
scas
nop
inc
sub
sub
mov
cmp
bound
popf
jmp
pusha
adc
xchg
repnz
hlt
push
inc
imul
je
sbb
mov
pop
arpl
stos
les
fimull
js
mov
stos
dec
sub
mov
mov
jl
push
jo
mov
loope
jp
stc
and
sub
mov
adc
scas
adc
mov
add
aam
cmp
in
mov
jae
in
sub
ret
jae
sub
and
dec
sbb
inc
cwtl
mov
mov
sub
push
repz
cwtl
ja
push
or
pop
orb
pop
xchg
mov
cmpsb
xor
cmovb
ja
inc
mov
add
pop
in
sub
inc
and
xchg
rolb
data16
enter
mov
pop
addr16
and
mov
out
cmpsb
mov
fdivs
test
or
push
inc
in
inc
jp
mov
dec
aam
dec
sbbl
hlt
add
sbb
shl
push
push
xor
jne
pop
andl
sbb
push
icebp
inc
xchg
inc
or
xchg
pop
xchg
push
inc
lcall
pop
jmp
add
push
stos
jle
mov
arpl
push
pop
pop
fwait
xchg
and
and
cmp
cmp
sub
pushf
sub
movsb
push
lea
cmc
xor
pop
or
add
cli
int3
test
addl
inc
scas
and
loopne
mov
push
lret
jecxz
adc
lods
repnz
dec
mov
int3
add
or
imul
or
movsl
add
aam
push
mov
stos
popf
pop
nop
sub
mov
cltd
mov
orb
or
dec
test
mulb
jns
push
ror
mov
divb
dec
dec
test
insl
subl
idivb
sti
ret
sti
lds
and
pop
add
jo
stos
push
insb
data16
and
push
in
xchg
rorb
push
js
out
dec
pop
mov
je
pop
sub
mov
cmp
mov
pop
fcompl
fisubrs
mov
clc
push
mov
jno
mov
inc
fwait
push
movsb
ss
mov
std
mov
jae
fidivrl
push
addr16
aas
stos
test
pop
dec
negb
insl
push
jl
jle
hlt
xchg
sbb
push
dec
sub
adc
inc
and
adc
jge
jbe
mov
clc
mov
imul
lods
stos
jnp
loopne
clc
lar
mov
lods
mov
mov
xor
imull
flds
dec
out
mov
xlat
js
outsl
faddl
and
addr16
dec
pop
rcrb
sub
and
dec
add
hlt
js
push
out
cmpsl
pusha
std
hlt
push
pop
data16
loopne
push
insl
jne
pop
inc
dec
pop
lret
sbb
pop
imul
mov
js
out
sahf
addb
lds
movups
out
mov
sub
push
ss
jge
sbb
jae
xchg
movsl
jmp
out
mov
or
notb
popa
sbb
aad
cli
jns
ficompl
gs
mov
adc
or
push
insb
aad
outsl
jl
pop
push
push
lret
bound
jbe
jg
fldcw
add
push
jbe
ds
sarl
xchg
jmp
pop
cmp
add
cmp
inc
cltd
ds
add
into
data16
fistl
mov
mov
jg
push
and
sub
in
add
addr16
insl
mov
push
out
and
jmp
outsb
fcmovb
arpl
lock
mov
fcmovnb
lods
xlat
inc
iret
fdivrs
int3
shll
fiaddl
fadds
fsts
xchg
shlb
jne
mov
data16
xor
int3
mov
fwait
xor
fcomp
jbe
lahf
cmp
shll
xchg
mov
xchg
push
push
fcoms
in
icebp
dec
mov
push
out
xor
loopne
std
push
inc
ljmp
popf
out
mov
xchg
pop
adcl
add
ja
dec
mov
xlat
test
pop
in
mov
aaa
mov
fst
cmp
repnz
aaa
or
inc
das
sbb
push
into
and
sti
mov
movsb
ja
add
test
cmp
in
pop
pop
std
fbld
jne
loope
mov
fisttpll
hlt
cmp
push
cmc
inc
xchg
insb
daa
push
fcmovnb
inc
push
pop
fisttps
loop
les
icebp
int
pushf
test
test
je
mov
jnp
test
dec
out
cs
pusha
subl
outsb
push
into
xor
pop
or
sub
inc
call
sub
lahf
xchg
loopne
out
mov
movsl
mov
inc
loope
lock
cmpsb
cli
push
ret
pop
cmp
movsb
cmp
loope
in
ret
push
js
ljmp
mov
inc
mov
adc
add
inc
push
aas
cmp
fisubl
pop
jle
xchg
mov
xor
imul
lcall
scas
lret
adc
mov
fcmovnbe
and
xor
cmp
fbld
lods
add
adc
stc
sub
mov
fsubs
sbb
push
inc
loopne
jl
mov
js
iret
jb
inc
in
xchg
xchg
aad
and
stc
cmpsb
adc
jmp
cmp
dec
mov
mov
loop
mov
imul
cmc
decb
adc
outsl
adc
ss
idivl
fldt
ret
dec
add
les
mov
or
cmpsl
adc
jmp
inc
push
hlt
lea
rcrb
aam
repz
jmp
sbbl
fwait
out
je
sub
outsl
fldcw
cmpsl
loop
je
mov
fisubrl
andl
push
popf
and
lods
ljmp
lret
sti
mov
sub
repz
in
leave
pusha
pusha
outsl
stos
inc
mov
jg
fdivl
cmpsb
cmp
pop
enter
add
cwtl
jb
xor
lret
cmp
jmp
inc
inc
sub
fwait
imul
pop
mov
dec
dec
mov
push
ljmp
sbb
or
fdivrs
mov
fnstenv
dec
xor
jns
lods
imul
inc
add
or
in
hlt
je
sahf
movsl
adc
call
dec
xlat
rcrl
add
shlb
xchg
sub
add
aas
mov
cmpsb
ljmp
push
out
add
mov
sbb
stc
nop
jno
jnp
push
xchg
pop
jg
shlb
adc
adc
test
iret
xchg
or
decb
lock
mov
mov
lds
pop
hlt
jne
out
xchg
xchg
jnp
lcall
ja
push
addr16
aaa
mov
mov
fisttpll
xlat
outsb
jl
dec
loop
sahf
cmc
mov
xchg
jbe
popf
adc
jns
stc
ds
scas
sbb
pop
dec
jnp
push
lods
insl
in
lahf
into
mov
inc
cmp
mov
rolb
push
out
add
testb
stos
adc
loopne
adc
dec
push
mov
test
test
aas
ljmp
hlt
insb
cmp
test
lea
mov
leave
std
xchg
cld
insl
aad
lahf
sbb
repz
imul
mov
fcoml
or
cli
xchg
push
pusha
imull
sbb
rcr
jmp
and
inc
push
mov
jno
repnz
xchg
int3
arpl
xlat
mov
popa
mov
xlat
outsb
pop
lods
call
mov
jne
shlb
pop
lock
cltd
jb
lret
add
push
test
loope
in
rcll
fnstenv
inc
lds
testl
jecxz
sub
and
out
gs
dec
fbstp
add
mov
repz
ret
adc
jmp
fsubrl
lahf
mov
jne
cmpsl
inc
cmp
jno
in
cmp
xchg
int
inc
fidivrs
pop
mov
mov
cld
mov
inc
fcomp
out
cld
xchg
and
pop
imulb
sbb
jg
cmp
mov
dec
fistps
hlt
cltd
xor
cmp
inc
fidivs
data16
mov
fmulp
popa
or
or
addr16
out
test
rorl
push
cltd
xor
jbe
push
daa
insl
add
js
aad
js
mov
push
rcll
push
mov
les
mov
movsl
jno
add
enter
jge
cmc
and
push
adc
sub
lods
fs
xchg
xchg
int
pusha
sti
mov
sbb
sbb
xor
jg
push
fbstp
hlt
mov
movsb
testl
xor
pop
cwtl
das
mov
cltd
xor
mov
lock
mov
lahf
dec
insl
jle
test
out
lcall
aas
jmp
inc
fmuls
test
inc
fstpt
rcll
test
jg
mov
dec
cmpsl
pop
sahf
aad
jno
push
dec
mov
jg
dec
fists
lret
scas
inc
call
loop
es
push
lahf
push
out
int
mov
test
es
push
xchg
lds
push
add
and
outsl
push
mov
bound
jmp
mov
div
push
sub
mov
pop
repnz
pop
sahf
sahf
sub
pop
xchg
inc
rep
and
mov
mov
gs
nop
cwtl
and
push
test
mov
loopne
cld
insb
sbb
push
jge
push
mov
or
fwait
sub
jge
mov
mov
bound
xchg
xor
fs
cltd
xor
testl
mov
mov
cltd
sub
mov
xor
xor
jnp
mov
push
lock
add
pop
mov
ret
push
lods
clc
push
stc
push
subl
add
test
and
rclb
bound
add
pushf
push
adcb
lret
sti
insb
sbb
push
jp
add
iret
push
call
mov
jl
insb
mov
push
out
std
imul
cmp
out
mov
bound
xchg
push
xor
dec
mov
pusha
mov
mov
cmp
jmp
mov
jno
dec
movsb
pop
cmp
dec
jge
outsb
mov
push
jmp
fwait
adc
mov
aad
add
pop
lods
inc
mov
and
push
pushf
push
ljmp
jl
ds
lods
insl
add
mov
add
aaa
mov
and
jecxz
dec
jecxz
ss
inc
ds
inc
outsl
mov
adc
mov
or
outsb
mov
in
mov
sub
ds
icebp
outsb
mov
or
mov
mov
bound
nop
daa
push
pop
repnz
rolb
imul
ret
push
mov
insl
cmc
add
cmp
jg
push
push
mov
cmpl
stos
mov
jno
int3
in
test
or
jo
adc
iret
inc
insb
add
insl
lcall
or
inc
push
lea
arpl
cwtl
addr16
sub
mov
xor
push
mov
cmp
inc
pop
inc
xlat
push
add
subb
ja
add
nop
daa
sub
outsb
mov
out
lods
sbb
pop
aam
fbstp
repz
sub
lret
mov
rcrl
mov
and
or
js
dec
fbstp
int
lret
xchg
movsb
cmp
lock
out
jecxz
rcrl
in
test
lods
inc
insb
sahf
ja
rorb
adc
or
sub
fistpl
xchg
cs
jle
cmp
and
sti
inc
test
push
dec
xchg
lds
or
push
sub
mov
popa
clc
add
add
push
mov
mov
mov
jne
mov
dec
jmp
or
push
int3
sahf
xor
lcall
and
push
xor
sbb
add
or
xchg
sub
jmp
mov
shl
mov
pop
decb
mov
aam
cmc
movsl
cmp
iret
icebp
or
inc
les
sub
or
jl
pop
scas
out
movsl
sbb
shr
add
sub
cmp
test
lcall
or
adc
fs
jl
sub
jno
nop
mov
int
scas
and
inc
jno
mov
xchg
ret
cmp
sub
fdivp
inc
or
cmp
pop
test
shl
lods
f2xm1
fiadds
imul
push
call
mov
cwtl
das
faddl
sbb
daa
push
sti
xchg
orl
jp
shrl
xchg
sahf
xor
and
dec
loope
push
daa
mov
insl
stos
das
filds
jnp
and
clc
xor
inc
fimuls
cmc
mov
fdivl
enter
std
ds
test
lea
arpl
mov
insl
add
or
addb
dec
nop
push
lahf
ss
mov
mov
in
cltd
push
mov
push
xor
mov
les
orb
jae
sub
lods
cmp
pop
gs
cmp
insb
roll
loop,pn
dec
sub
sbbb
sbb
lahf
dec
in
xchg
inc
fisubrl
mov
call
orb
push
mov
push
add
lcall
jp
inc
dec
mov
loopne
and
xor
jno
jmp
xor
pop
or
imul
repz
ja,pt
inc
inc
jae
rolb
test
mov
add
out
xchg
pop
pop
lahf
insl
sbb
cli
cmpsb
dec
ja
push
adc
mov
xor
pop
mov
jp
ret
xchg
push
loope
or
lock
les
hlt
rcrb
aad
dec
mov
negl
jp
jne
repnz
inc
lret
adc
cwtl
xorb
aas
ds
fdivrl
sbb
xor
aaa
lret
outsl
push
insl
rclb
adc
mov
add
sbb
movsb
pop
mov
es
xor
dec
mov
shld
shll
sub
sbb
data16
lahf
and
push
mov
out
mov
sti
stos
push
mov
aas
lret
and
push
push
mov
stos
gs
out
xchg
push
popf
test
sbb
mov
js
imul
adc
mov
jg
jg
insl
inc
gs
fwait
iret
inc
push
stos
xchg
jl
outsl
mov
xchg
jge
sub
into
rorl
popf
jp
sbb
lods
outsl
in
mov
mov
nop
add
mov
imul
mov
test
ret
dec
or
push
jmp
or
mov
stos
mov
add
scas
push
ret
hlt
cmp
jbe
xor
xchg
das
pusha
cwtl
mov
sub
mov
add
inc
mov
scas
scas
pop
mov
pop
cmp
pop
shlb
scas
aaa
sub
dec
loopne
fsubrs
aad
or
testl
lret
andl
outsl
mov
fwait
icebp
pop
stos
lds
outsb
cltd
lods
int3
push
call
sbb
xchg
ja
cmc
divl
mov
loope
int
imul
pop
stc
add
enter
pop
fucomp
sbb
ljmp
push
shr
sub
fiadds
mov
les
sbb
xor
push
int
fstl
scas
push
mov
out
loope,pn
mov
in
popf
arpl
cmp
iret
cmp
mov
mov
jecxz
in
inc
arpl
jb
mov
mov
pop
or
cmpsb
popa
fwait
add
add
push
in
push
and
mov
adc
rorb
rclb
jno
xlat
inc
mov
cwtl
xchg
inc
outsl
mov
push
pop
insl
add
and
les
cmp
ficoms
xor
int3
pop
test
or
ljmp
shl
mov
scas
int3
lds
ret
xor
xchg
adc
rcr
mov
stc
add
and
les
fnstenv
into
pop
or
cmpl
movl
mov
push
mov
jle
jns
sub
xor
sbb
aas
or
outsl
fists
fs
repnz
cmp
ss
imul
popf
xchg
mov
jne
mov
icebp
dec
mov
cltd
scas
push
and
dec
in
jb
jne
or
dec
scas
inc
mov
sub
sbbl
mov
imul
insb
shrl
inc
stos
xchg
fs
add
or
rcll
pop
fstpt
adc
pop
add
xchg
push
xchg
cmp
pop
dec
outsl
xor
stos
cmp
or
jle,pt
pop
add
ss
mov
inc
xor
leave
pusha
push
gs
pop
jne
jmp
pop
ret
gs
jb
mov
lea
push
push
xchg
jno
xchg
xlat
sub
jnp
cltd
cmp
es
cs
popa
lock
rorb
sub
xor
daa
jmp
xchg
xchg
or
sub
ljmp
ret
lods
xchg
jmp
cmpsl
insl
fwait
and
sub
scas
push
and
bound
mov
pop
movsb
cwtl
add
hlt
inc
mov
pop
fists
sbb
inc
insb
jle
push
dec
orl
xchg
and
imull
cmp
clc
xor
or
sbb
xor
push
xchg
xchg
xor
adc
pop
movsl
pushf
into
arpl
in
in
stos
test
cli
jge
lret
jo
aam
stos
les
fisttpll
mov
movb
les
subb
daa
push
test
subl
insb
test
jno
inc
or
mov
popa
jbe
inc
pusha
call
ret
inc
mov
mov
subl
push
pop
adc
adc
inc
jnp
bound
and
cs
test
pusha
adc
pop
jns
popf
mov
push
lret
pop
fwait
dec
fstl
fimull
rcrb
jl
out
push
inc
lret
insb
test
sub
icebp
testl
adc
ret
add
add
xor
enter
jns
inc
ds
adc
or
or
and
fwait
sub
pop
pop
scas
insb
mov
imul
cmovo
pop
inc
into
inc
push
dec
sbb
cmp
adc
jl
test
cmp
dec
mov
jae
xchg
insb
into
ja
push
lods
out
xor
lcall
fisubs
sbb
insl
add
sub
sbb
shrb
xchg
jp
sbb
or
mov
and
mov
cmp
jbe
push
mov
mov
push
add
gs
xor
jno
xchg
dec
and
testl
into
in
out
add
ljmp
or
iret
push
in
dec
lock
adc
pop
mov
push
jmp
repnz
jg
mov
xchg
or
mov
pop
mov
pushl
jecxz
enter
scas
push
add
dec
je
mov
pop
xchg
cmpb
mov
dec
cltd
xor
cmp
push
xlat
push
xchg
xchg
sahf
subl
imul
pop
stos
aas
outsb
pop
or
pop
sub
xor
add
pop
stos
ja
fisttps
sub
fwait
lahf
sbb
dec
mov
push
out
rcl
cmp
sub
daa
out
dec
popf
nop
popa
into
sbb
movsl
out
sbb
loop
ljmp
jmp
lods
leave
ds
bound
xchg
push
shll
out
in
ret
cs
sbb
mov
mov
inc
fsubrp
pushf
int
or
jp
sub
push
int3
xchg
pop
into
gs
add
xorl
aam
sub
jp
imul
movsb
outsb
inc
sbb
outsb
dec
inc
scas
bound
pop
adc
daa
popf
mov
pop
outsl
mov
fsts
insb
stos
sarb
add
sub
imul
pop
ficoms
adc
fs
pop
or
push
mov
pmulhw
movb
sbb
aad
inc
pop
push
out
and
fwait
mov
divb
pop
pushf
test
push
hlt
push
cmp
xchg
in
pop
cs
pop
mov
das
push
lods
pop
adc
mov
xchg
add
dec
rcll
cmp
andl
add
inc
jbe
sbb
pop
push
mov
pop
mov
xor
or
jae
out
clc
and
loopne
mov
jne
lcall
xchg
cmp
adc
fisttps
ss
inc
mov
fisubs
shll
add
fcoms
std
out
negl
mov
adc
cld
xor
sahf
stc
sub
dec
lret
lret
mov
jl
repz
xchg
out
ret
cmpsb
addl
add
cwtl
dec
fisttps
add
out
mov
mov
sti
xchg
out
jno
adc
mov
popl
or
push
stos
test
sub
cmpsl
data16
ss
fmuls
fistpll
cld
pop
into
jmp
xor
insb
scas
sub
sub
jg
jae
adc
dec
aaa
pop
mov
mov
out
lods
ret
popl
add
scas
push
mov
sbb
cltd
loopne
pop
repnz
iret
int
scas
inc
and
pop
out
int3
mov
ret
push
pop
fistps
out
sbb
insb
push
xchg
enter
jecxz
push
leave
adc
das
hlt
div
lods
jne
mov
sti
mov
mov
repz
lds
mov
daa
divb
jno
sti
mov
leave
out
loopne
adc
sbb
ss
cmp
jns
out
adc
popa
scas
dec
aaa
sti
jo
scas
pop
mov
sbb
pop
sahf
or
mov
xor
inc
xchg
mov
test
leave
mov
xchg
leave
fisubrl
xlat
fidivrl
ret
mov
call
or
pop
stc
icebp
out
mov
or
xchg
mov
dec
shrb
jge
cmp
fisttpl
sbb
into
dec
xlat
jb
shrl
dec
mov
fwait
testl
mov
pop
shrl
mov
or
mov
imul
xor
inc
popf
or
aad
gs
leave
jl
insl
add
xor
mov
repnz
lods
rcrb
sub
adc
sub
loopne
fsubs
negl
sbb
jno
test
incb
mov
lds
inc
mov
in
jns
mov
lods
inc
rcr
dec
mov
xlat
cmpsl
push
mov
or
das
sub
jp
jmp
xor
pop
decb
dec
loop
sbb
test
inc
xor
mov
inc
xchg
jbe
sub
push
dec
dec
and
outsl
dec
lcall
cmp
call
stc
cmp
xchg
sub
pop
xchg
push
or
push
add
sbb
rcrb
movsl
stos
xchg
sub
in
rcrl
push
add
clc
or
insb
mov
aaa
xor
loopne
stos
adc
imul
call
push
adc
inc
cmp
jle
xor
sahf
lahf
inc
leave
das
sbb
or
xchg
add
stc
ja
adc
or
or
mov
xor
adc
push
fsubr
pop
xchg
push
int
repz
mov
das
mov
or
sub
es
jns
inc
int
sbb
arpl
cmp
je
adc
les
inc
out
pop
mov
stc
mov
xchg
ret
movl
insl
aad
sub
mov
dec
mov
pop
mov
cmpl
scas
push
mov
repnz
push
mov
add
push
sahf
rorl
loop
rol
loopne
cmp
mov
and
ljmp
mov
scas
jbe
lahf
xor
outsb
jb
push
xor
jle
push
xchg
and
fs
push
mov
call
cmpsb
pusha
adc
pushf
pushf
nop
or
jp
pushf
fs
loop
addl
cs
lods
cmp
xchg
push
leave
pushf
gs
pop
into
stos
inc
xchg
inc
push
shlb
xchg
jle
xor
cmove
pop
int3
jbe
xlat
pop
movsb
bound
jo
fstpt
nop
rorl
jl
sbb
push
cmp
mov
loopne
ficomps
push
or
les
cmp
xor
ret
mov
scas
inc
mov
loopne
xchg
in
ja
in
push
enter
int3
enter
aad
mov
vmread
lods
fmuls
ljmp
aad
fisttpll
adc
gs
sub
clc
daa
inc
nop
jmp
jp
scas
jne
sub
jns
mov
add
jns
and
push
enter
loopne
xor
sbb
and
and
mov
fidivs
rcll
fldenv
shll
pop
loope
pop
aad
cmp
ja
inc
int
cmp
fstpt
das
fcoms
in
jns
inc
leave
jb
and
jp
aaa
fisubrs
adc
mov
xor
jne
cmp
lcall
hlt
sub
pop
popf
fnstenv
popa
stos
fnstenv
dec
iret
fstl
in
arpl
mov
add
fldenv
out
sahf
iret
loop
aad
fldl
mov
test
bound
mov
out
insb
mov
lock
ss
inc
cmp
outsl
inc
cld
pop
push
dec
push
in
push
fisttpl
xor
mov
das
mov
xor
addl
js
inc
insl
aad
jnp
ds
push
mov
fnsave
sbb
stos
xchg
ja
mov
sbb
orb
pusha
push
call
xchg
call
in
test
fnsave
mov
inc
lret
fdivrl
pushl
lret
shl
dec
enter
aam
scas
pop
mov
mov
mov
pop
xchg
andl
mov
cmp
pop
sarl
fisubrs
add
jb
pop
push
mov
les
dec
stc
inc
pop
pushf
xchg
mov
push
stos
test
imul
dec
sbb
leave
pop
outsl
lods
cmp
push
test
ror
cmp
pusha
push
ljmp
xor
stc
in
inc
xlat
rcrl
addb
ljmp
cld
notl
stos
cwtl
sbb
addb
jns
out
adc
js
dec
iret
das
fwait
push
mov
mov
loope
dec
in
inc
mov
add
addl
cwtl
je
stc
in
sarb
xlat
mov
shl
filds
or
cmpsb
cmp
xlat
clc
xor
icebp
lret
push
ror
in
in
movsb
mov
sahf
mov
or
mov
push
mov
sbb
roll
pop
or
mull
mov
leave
cmp
sbb
ficoml
cmp
adc
push
add
cmpsl
test
pop
arpl
int3
cmp
jle
lea
pusha
test
cmp
test
mov
jp
push
xchg
dec
scas
cs
push
out
push
ss
push
loope,pt
inc
sub
arpl
repz
daa
or
inc
push
fwait
push
push
inc
fistpl
and
xor
xlat
aas
popa
das
xchg
mov
fimull
mov
mov
test
int
xchg
mov
mov
in
bound
fucomi
push
jmp
lods
les
jo
xchg
mov
movsb
jle
push
dec
cwtl
orl
lret
jmp
fistpl
mov
xor
adc
mov
or
sbb
and
mov
dec
imul
sub
nop
in
inc
adc
add
push
test
into
xor
popf
xor
popa
sub
xchg
inc
or
cmpsl
pop
push
jmp
mulb
xlat
mov
sub
xchg
pop
add
xchg
push
push
mov
mov
cmp
in
inc
pushf
sbbb
adc
les
mov
mov
popa
mov
pop
mov
in
mov
bnd
ljmp
outsb
clc
bound
fstpl
mov
mov
mov
hlt
jnp
es
push
inc
mov
insl
and
xchg
push
movsl
scas
and
xor
fiaddl
xor
xchg
mov
xor
xor
jns
cmc
ds
movsb
cwtl
outsb
pop
scas
lahf
push
dec
aad
sbb
lds
pop
lods
pop
dec
and
incl
unpckhps
mov
out
jecxz
mov
das
shll
and
push
int
push
add
and
push
sbb
sbb
pushf
ss
sub
scas
or
push
clc
fnsave
or
mov
add
lods
jg
leave
ds
cmp
mov
dec
mov
fwait
xor
lods
mov
jbe
fwait
or
mov
fcoml
sbb
in
adcb
es
sbb
addb
mov
push
jo
pusha
mov
jo
lea
outsl
push
es
and
in
fiadds
cmp
push
xchg
scas
pop
mov
in
mov
push
dec
mov
fwait
nop
push
xchg
jne
add
sbb
and
enter
inc
mov
std
mov
sub
popl
ss
aaa
sub
fstpt
sub
inc
ss
fdivl
fnsave
ficoml
or
gs
out
testb
mov
test
push
xor
outsl
and
ficoms
in
jbe
xor
jecxz
stos
lret
bound
push
or
and
nop
jb
repnz
adcb
sub
divl
mov
loop
shl
push
fdivs
xor
arpl
popa
lock
outsl
call
mov
mov
push
mov
sub
movsb
js
imul
sub
pop
les
dec
loop
or
push
cld
in
cs
lret
das
inc
dec
fiadds
and
sbb
mov
jle
imulb
test
mov
inc
cmpl
les
push
xor
jge
mov
sbb
out
fs
jo
push
movsl
ljmp
mov
pop
adc
jge
adc
jmp
mov
lret
out
arpl
lcall
lds
mov
int
aaa
adc
scas
lahf
mov
ret
jle
movsb
popa
leave
dec
or
fldl
xchg
jl
inc
sahf
xchg
cmp
mov
adc
mov
lret
inc
xorb
jge
or
jecxz
call
clc
and
pop
mov
cs
and
and
js
loopne
movsb
addr16
cmp
xchg
xor
sahf
pusha
mov
sbb
test
out
mov
or
push
pop
pop
lret
cmp
dec
mov
dec
pop
push
xchg
dec
cmp
test
sub
push
icebp
cmc
xor
repnz
leave
xchg
adc
in
call
test
cmp
xor
dec
shrl
jo
jecxz
lcall
push
dec
sbb
jns
imul
add
xchg
xchg
xor
inc
out
push
fsubrp
and
cmp
or
jg
leave
mov
xchg
add
shll
rclb
loope,pt
pop
mov
jle
sbb
jp
sbb
ficoms
mov
lods
clc
call
test
pop
shrl
aam
mov
push
orl
imul
dec
jb
ss
and
imul
inc
or
pop
sub
rcrb
mov
lgdtl
jae
sbb
jle
lahf
mov
or
add
imul
mov
adc
aam
das
jge
ja
or
leave
push
dec
jecxz
ljmp
push
rcl
loop
sub
pop
mov
ja
jp
mov
sub
push
push
into
push
jl
insb
outsl
inc
inc
cmp
lea
cmp
imul
js
pop
cmp
pop
loop
pop
andb
push
repz
mov
cmp
sarb
dec
push
ljmp
push
xchg
mov
push
inc
dec
sbb
inc
aas
out
aaa
js
xchg
xchg
jno
into
gs
push
test
mov
dec
mov
shrb
xchg
call
push
add
fimuls
mov
fimull
cmc
adc
cwtl
xchg
mov
xor
jne
push
fistps
pop
inc
mov
addr16
push
mov
aas
call
mov
jecxz
pop
mov
mov
subb
adc
pop
mov
and
sti
pusha
sbbb
daa
adc
imul
shrl
jne
pop
pop
jge
dec
dec
push
mov
jb
pop
lea
dec
fwait
xchg
dec
bound
cmpsb
fwait
push
mov
rsqrtps
cmp
xor
pop
dec
pop
filds
mov
xlat
dec
inc
fwait
pop
inc
sub
mov
jae
popa
fwait
jne
jmp
or
push
movsb
pop
outsl
mov
test
aaa
mov
mov
repnz
sti
shlb
sarb
jecxz
lods
mov
scas
adc
xor
enter
das
or
jecxz
adc
and
addb
cmp
mov
fadds
scas
pop
les
fstpt
into
dec
add
and
mov
sarl
jmp
cmp
jb
rclb
aaa
lods
aas
sub
fsubl
mov
out
aad
sbb
mov
inc
mov
xchg
sbb
jno
mov
imul
mov
jo
mov
les
out
mov
or
movsl
xor
sub
insl
sbbb
push
sub
or
push
hlt
xor
jne
dec
inc
pop
loopne
jns
sbb
mov
mov
ss
add
sub
pop
test
and
mov
mov
push
int3
repz
cltd
xchg
fnstsw
imul
cmp
push
xchg
pop
data16
lea
test
loopne
les
add
jns
push
rcrl
add
flds
pop
mov
cli
std
xchg
sub
cmp
mov
movsl
pop
repnz
lahf
cmp
shl
jns
sub
push
out
and
jge,pn
jne
jbe
mov
rclb
shrl
jmp
dec
sbb
ds
data16
xsha1
cmpsb
leave
xchg
in
test
ljmp
push
cmp
sub
push
mov
mov
fsubl
or
sbbl
mov
pop
mov
fsub
js
aad
push
pop
xor
xchg
bound
fnsave
sbb
xchg
lods
aad
rolb
iret
sbb
pop
and
into
push
jp
push
lods
jae
in
movsb
int
sub
lds
mull
mov
push
sbb
imul
mov
xsha1
cmpsb
dec
adc
test
sub
mov
out
mov
shl
push
inc
or
cmp
pop
push
cmp
lods
xchg
ss
into
sbbl
call
pushf
xor
xchg
sub
jae
lods
movsb
sub
shl
fdivl
cmc
testl
jns
sbb
fxch
ss
test
push
icebp
and
inc
js
add
es
pop
jbe
sub
int
out
js
push
stos
test
mov
fbstp
cmp
pop
and
test
sub
rorb
mov
add
pop
negb
insl
push
jl
hlt
lods
jbe
xor
lret
cli
rcrl
dec
adc
popl
xor
fs
lods
xchg
notl
xor
xor
and
test
jno
xor
jb
sub
iret
rcrb
mov
icebp
mov
and
mov
sub
stos
orl
cwtl
int3
and
aam
cli
pushf
xlat
test
adc
ss
mov
int3
adc
mov
loop
fs
xchg
mov
ficoml
sub
cli
push
and
packuswb
cmpsl
shll
inc
in
outsl
ret
pop
imul
mov
fnstenv
or
jmp
int3
xlat
push
or
push
ror
in
ja
jne
adc
dec
lahf
in
mov
xchg
arpl
lret
imul
push
adc
nopl
dec
inc
inc
rol
orl
mov
in
test
das
insl
mov
popa
pop
cmpb
or
xor
inc
push
das
pop
jge
pop
add
inc
mov
aas
and
jle
ror
inc
mov
sub
xorb
mov
test
test
cmpsl
push
jl
mov
or
in
sub
and
xor
mov
add
loopne
sub
mov
pushf
jge
bound
hlt
mov
sub
inc
divb
imul
cmp
inc
mov
repnz
addr16
jle
jl
insl
int
add
pop
in
adc
mov
xor
mov
adc
pop
bound
movsl
outsl
mov
fcoml
int
inc
xor
cmpsb
or
xchg
push
add
push
dec
scas
add
stos
push
jl
jge
push
sub
pop
fidivrs
adc
jo
ss
fwait
out
out
fldl
fmul
push
adc
scas
insb
push
cmp
loope
mov
mov
add
fs
in
add
add
subl
aaa
fdivl
sbb
cltd
cli
add
std
fisubs
and
movsl
mov
add
jge
test
mov
mov
and
mov
xchg
dec
lea
adc
xchg
ss
aad
mov
ja
add
ss
out
pushf
iret
sbb
xchg
pop
push
mov
dec
sbb
pop
ficompl
movsl
pop
js
dec
sub
sarb
loop
aaa
mov
push
ud1
ljmp
inc
xor
cld
push
popf
out
jg,pn
mov
stc
insl
add
mov
jae
xor
inc
mov
mov
sbb
xchg
cmp
gs
mov
dec
sub
ds
adc
shlb
mov
jb
push
jbe
pop
push
sbb
mov
test
pop
cli
xchg
dec
pop
jnp
push
std
enter
push
in
shlb
pop
test
push
call
adc
mov
cli
jecxz
movsb
aam
push
sbb
ja
mov
loope
jo
test
xor
es
mov
lods
mov
test
pop
mov
pop
sbb
mov
fnstenv
aam
push
es
pop
cli
add
pop
popf
aaa
shll
push
add
push
int3
mov
xor
mov
test
aad
jno
adc
and
cld
mov
mov
or
les
in
pushf
xorl
enter
stc
sub
pop
rcrb
call
daa
ds
imul
pop
pop
jnp
jmp
nop
xchg
cmp
ret
mov
stos
loope
add
xchg
aaa
push
xchg
cmp
sbb
jns
pop
cmp
hlt
ss
xchg
ds
jns,pt
or
js
pop
mov
rcrb
push
push
clc
xchg
inc
lcall
sub
pop
adcl
mov
push
xchg
rcrl
mov
mov
mov
xchg
xchg
mov
filds
mov
rclb
push
std
sub
inc
dec
adc
dec
jge
loopne
jo
dec
mov
movl
fdivrs
das
fwait
aas
std
sbb
pop
add
xor
add
lahf
sahf
inc
or
pop
xchg
aaa
jo
pop
add
gs
adc
jmp
dec
push
dec
adc
imul
push
sub
lea
cmp
insl
outsl
dec
clc
mov
je
loopne
popa
push
filds
xor
mov
lds
into
sarb
ja
cmc
lret
aas
loope
jo
sub
mov
push
cld
andb
fsubs
div
pop
cmc
xor
call
mov
divb
in
add
push
repz
adc
out
jne
xor
or
popf
mov
jae
xchg
movsl
call
add
div
pop
hlt
dec
mov
cmp
sub
addb
jae
test
andb
mov
movsb
in
jbe
mov
add
jae
add
jne
test
mov
push
sub
je
loop
leave
mov
loopne
ljmp
in
insb
pushf
sbb
xor
ja
add
pop
mov
in
jp
adc
aam
dec
dec
dec
pop
xchg
xchg
sub
mov
jne
mov
or
jp
xchg
add
or
lret
adc
pop
dec
push
jo
or
mov
mov
fsubr
cld
rolb
push
dec
sub
add
loop
mov
or
dec
fwait
insb
rolb
lahf
cmp
jo
movsb
jo
test
mov
dec
and
rolb
lahf
ljmp
mov
test
pop
imulb
inc
adc
cltd
fstps
mov
fwait
imul
aaa
push
jl
mov
test
sbb
adc
mov
rcll
int3
outsb
ljmp
inc
psllq
mov
mov
add
xchg
aad
lods
jp
leave
mov
mov
shlb
stos
sub
and
mov
cmc
inc
jg
in
mov
ret
rcrb
xor
pop
clc
movsb
cs
test
xor
or
push
mov
lds
stos
test
mov
js
jo
mov
divb
add
or
mov
inc
psrld
lret
ja
js
xor
imulb
dec
or
mov
pop
push
adc
mov
movsb
test
push
cmc
or
pop
inc
cs
xchg
fs
shlb
jne
mov
in
imul
cmc
dec
adc
jns
les
sbb
jbe
daa
mov
adc
lock
mov
je
int3
xchg
pop
gs
ljmp
cmp
mov
mov
jno
js
push
jbe
int3
xchg
dec
push
inc
or
aaa
aaa
add
in
daa
aaa
popf
in
jecxz
test
rorb
sarw
lcall
adc
push
cld
roll
jge
orb
aad
jne
cmc
pop
loope
sarb
repz
sbb
mov
stos
orb
push
std
je
jne
icebp
push
mov
pushf
sbb
leave
dec
out
jb
push
orl
out
jb
outsl
lret
xchg
push
pushf
mov
adc
call
out
jmp
lcall
push
imul
stc
adc
scas
xor
dec
adc
loope
push
popf
pushf
inc
mov
push
lret
jmp
int
xchg
sbb
daa
cmp
sub
xchg
test
inc
loope
and
push
icebp
pop
nop
cmpb
insb
int3
pop
add
jnp
cmp
shlb
aad
cmc
pop
inc
add
pop
lcall
pop
je
xchg
cmp
arpl
add
lret
cmc
ljmp
push
mov
imul
orl
push
fs
xchg
lret
je
insl
pop
sbb
nop
ds
add
imul
fidivrl
jg
rdtsc
popf
in
push
cld
lret
outsb
pop
push
mov
and
adc
imul
mov
fdivs
lds
insb
pop
push
cmp
xor
push
add
jnp
rorl
add
out
push
out
insl
iret
div
gs
sbb
xchg
lods
aas
imul
mov
or
jle
push
test
mov
insb
fsubp
jne
jbe
addr16
push
test
dec
push
rolb
nop
imul
mov
mov
insl
ror
addr16
push
movsl
jge
pop
fwait
mov
leave
mov
push
lock
mov
aaa
lds
imul
outsb
out
repnz
repnz
xor
ljmp
xchg
sbb
pop
into
ret
jl
addr16
insb
push
stc
and
xor
imul
push
ljmp
sbb
sub
sub
sub
add
aas
fwait
push
pusha
aam
push
push
add
jae
icebp
dec
cmp
jae
cwtl
and
adc
dec
sbb
testb
add
pop
es
nop
popf
cmp
jle
idivb
test
push
jb
je
mov
roll
mov
xor
subl
cmp
or
push
add
pop
dec
daa
mov
inc
pushf
cmp
mov
push
sbb
xlat
je
pop
in
cltd
adc
mov
push
mov
sarl
or
adc
dec
and
inc
sti
fs
shlb
and
adc
aaa
fiadds
mov
imul
leave
clc
and
out
lds
cmp
lret
push
test
or
jne
popf
inc
mov
cltd
inc
mov
sbb
ficomps
insb
jae
jmp
pop
jnp
faddl
andl
push
rcr
or
insb
testb
push
sti
jae
sub
jne
jmp
add
rolb
inc
rcll
jbe
pop
or
jp
inc
pop
add
mov
cld
mov
mov
push
add
and
xor
dec
or
jle
stos
cmc
sub
test
lahf
fnstsw
adc
adcb
mov
xor
fisttpl
int3
dec
jg
in
xchg
inc
jg
lea
fs
mov
cmp
fcomps
cmpsb
fbstp
shrb
or
xchg
mov
xchg
pop
xchg
cmp
adc
sbb
das
nop
dec
and
inc
ret
mov
xlat
or
pop
sub
inc
ljmp
lea
mov
fstl
xchg
pop
cmp
inc
push
jge
dec
lea
add
fs
out
xor
and
add
push
data16
test
pop
idivl
or
cld
nop
fnstcw
pop
std
stc
fcomi
fs
push
push
clc
imul
mov
cmp
test
jecxz
dec
in
jge
lds
clc
popa
icebp
mov
mov
xchg
ds
cmpsl
sub
dec
test
into
clc
sahf
cmp
sbb
and
pusha
data16
or
lock
nop
inc
arpl
aam
sbb
stos
mov
movsb
fidivrs
insl
in
outsb
jnp
push
enter
test
push
push
fidivrl
pop
sbb
leave
mov
inc
lods
daa
adc
dec
jns
mov
shrl
bound
lock
jge
adc
mov
gs
sbb
arpl
xorl
inc
hlt
inc
or
xchg
cmp
mov
sbb
js
mov
imul
xchg
lods
arpl
lods
xor
loop
and
inc
xor
and
lahf
jb
negl
push
call
xchg
out
out
repz
dec
jnp
ret
fs
outsb
scas
fdiv
bound
mov
fwait
aaa
sbb
js
inc
inc
popa
hlt
inc
mov
out
nop
xor
mov
jb
test
push
jo
cld
adc
ja
mov
mov
fisttpll
mov
test
test
mov
mov
push
mov
popf
mov
mov
lods
aas
pushf
adc
enter
mov
mov
xchg
int
and
mov
pop
loop
mov
andl
xor
addr16
repz
cmp
out
mov
cmp
sbb
arpl
push
mov
lods
push
inc
inc
jo
push
test
out
lds
sarl
scas
xor
into
nop
cmp
push
out
pop
pusha
test
stc
jge
sub
fwait
imul
lret
xchg
flds
sub
cmp
pop
fstl
inc
fstpt
pushf
xor
hlt
mov
jp
cltd
pop
adcl
lock
push
ljmp
sub
cltd
jne
faddl
fnsave
sub
inc
xlat
jo
xor
addr16
rorb
xor
les
jbe
adc
leave
sub
test
lea
mov
mov
stos
adc
ljmp
xchg
sbb
dec
or
mov
push
stc
bound
je
xchg
cmp
movsb
add
jg
mov
fdivr
ja
and
lahf
movsl
call
mov
shrb
fwait
loope
sar
int3
xor
inc
enter
xchg
cli
arpl
xlat
js
and
jmp
inc
xor
pop
stc
and
lds
ss
popf
fidivs
gs
or
xchg
hlt
mov
mov
cmp
dec
or
test
arpl
stos
fcmovnu
addr16
clc
pop
sar
pop
jp
xchg
bound
stos
lea
pmullw
pop
push
in
test
xor
ret
imul
js
add
add
mov
push
repnz
pop
pop
test
push
incl
andl
inc
or
pop
mov
pop
test
jae
cmpl
pop
fmuls
mov
jmp
adc
shrb
mov
in
add
sub
mov
fisttpll
fisubrl
mov
jecxz
imul
xchg
subl
jmp
iret
jecxz
adc
outsb
repnz
cmp
mov
das
loope
push
push
dec
or
lods
pusha
repnz
adc
jmp
repz
mov
or
icebp
rol
xchg
cmp
cmpsb
das
xor
stc
pop
or
jne
lea
mov
lea
incb
mov
push
mov
mov
movsb
loope
test
xsha1
cmpsb
or
dec
out
sub
int3
xor
imul
mov
mov
mov
aad
mov
xchg
cmpsb
push
je
fisttps
mov
push
ret
shlb
test
xor
push
std
cltd
sub
mov
test
mov
sub
xor
jecxz
mov
mov
test
jecxz
adc
pop
jb
mov
lods
test
fstpt
mov
lock
shr
pop
lret
xchg
aad
mov
adc
out
sbb
xchg
inc
addr16
mov
dec
clc
rcrb
dec
in
fdivs
xchg
mulb
sub
aad
popf
fstpt
test
stc
pop
push
dec
dec
push
fwait
mov
jnp
in
aaa
pop
pushf
cmp
pop
mov
sarb
jecxz
insb
mov
test
or
inc
cmp
call
std
scas
das
out
insl
push
not
cli
ljmp
and
pop
jo
ret
imul
cltd
jbe
aam
dec
push
orl
lahf
je
xor
inc
inc
iret
xchg
ss
jns
push
jl
out
hlt
jno
ja
call
loopne
movhlps
xchg
push
inc
push
sub
jge
inc
cmp
fistps
pop
mov
jnp
add
pop
iret
push
jnp
imul
push
pop
std
mov
test
stc
cmc
pop
add
jmp
aas
add
push
fldl
push
pop
repnz
nop
loope
ja
les
pop
cli
aaa
lods
sub
in
mov
cs
test
mov
cmpsl
movsb
xor
bound
dec
or
dec
xchg
sub
imul
mov
nop
mov
es
scas
jnp
imul
movsb
xor
jmp
mov
cmpsl
cmp
xlat
gs
fistl
jb
push
or
sub
ds
out
filds
ret
adc
cltd
inc
and
mov
ss
cmp
mov
sarb
fstpt
push
movsl
add
and
xor
add
arpl
in
adcl
or
rcl
mov
pop
clc
imul
cwtl
movsl
push
je
xchg
inc
or
fsubs
movsb
repnz
leave
xchg
jmp
adc
cmp
nop
cmp
in
outsl
out
imul
push
mov
sub
push
cltd
mov
cmp
sub
mov
gs
lahf
inc
dec
jb
mov
mov
movsb
daa
push
fbld
fisttpl
loopne
dec
cmp
das
mov
sub
mov
push
int3
nop
ds
aam
lea
pop
cmc
jnp
pushf
mov
enter
inc
or
inc
or
push
les
inc
xchg
push
div
xchg
cmc
push
cli
in
mov
lock
cmp
mov
fiaddl
pop
enter
push
insl
repnz
insl
repnz
cmp
hlt
dec
loope
xchg
lcall
pop
push
mov
mov
insl
mov
lods
xor
inc
push
xchg
out
fidivrl
nop
cmp
mov
mov
movsl
pop
leave
and
pushf
mov
mov
xchg
aaa
stos
subl
mov
js
xlat
lods
and
imul
jnp
cld
loop
pop
cmp
mov
loopne
mov
stos
repnz
mov
xchg
jne
in
popf
or
in
pop
outsl
hlt
addl
sub
inc
push
aaa
lds
mov
cwtl
pop
stos
das
daa
int
aam
xor
mov
jbe
jl
call
cs
ds
or
lods
push
std
lods
xchg
pop
mov
lock
int
movntq
out
and
sar
loop
add
mov
ret
scas
inc
mov
xchg
sarl
fildl
mov
jl
lcall
inc
pop
xchg
inc
std
lcall
sarl
add
cmp
xor
sub
mov
pop
inc
repnz
cmpsl
test
cmp
cs
pop
iret
dec
push
mov
xchg
dec
or
bswap
pop
gs
inc
dec
subl
pusha
mov
jge
or
fnstcw
insb
rolb
lock
jg
out
sub
sbb
outsl
call
iret
test
cmp
dec
xor
loopne
or
fwait
inc
scas
pop
adc
aaa
jge
and
mov
js
or
cli
pop
aam
sub
aad
imul
jne
push
add
fcomps
mov
aaa
mov
adcb
roll
xor
call
outsl
addl
test
stc
pop
es
push
mov
scas
aas
movsb
mov
stos
push
loop
pop
add
repnz
in
out
call
icebp
pop
cld
mov
fnstcw
lods
js
pop
frstor
lahf
ffreep
xchg
add
je
jmp
jle
inc
fcom
lahf
mov
pop
jle
or
fcoml
or
testb
stos
out
lods
ret
nop
add
adcb
ljmp
jbe
cli
inc
adc
hlt
out
rorl
xchg
inc
add
pop
fidivrl
adc
lods
daa
cmp
rolb
push
int3
in
push
pop
and
xor
cs
push
sar
xor
pop
adc
insl
adc
ss
mov
loopne
lret
mov
adc
jae
inc
sbb
mov
xchg
or
imul
mov
mov
mov
mov
push
mov
cltd
pop
mov
pusha
in
mulb
flds
xor
and
lret
stc
push
cli
ja
mov
add
push
outsl
out
mov
or
push
fstl
fisttpl
icebp
fisttps
dec
or
cmpsb
add
jp
dec
pop
repnz
mull
jmp
fldl
pop
mov
sub
mov
xor
sar
mov
add
lods
cmp
cmp
aam
jle
fiaddl
or
stos
ret
int3
mov
loope
fcoms
sub
push
mov
mov
mov
cmp
arpl
inc
or
ja
lock
mov
call
push
lret
push
ret
rorl
push
das
scas
fs
nop
sub
and
inc
jle
in
clc
adcb
dec
push
inc
pop
outsb
jmp
inc
fcoml
jbe
mov
test
mov
scas
mov
stc
pop
sub
in
and
jle
mov
pop
xchg
movsl
xchg
sub
push
sti
dec
adc
pop
lds
add
imul
sarb
pop
adc
dec
add
mov
pushf
in
mov
flds
mov
stos
sbb
cli
cwtl
xchg
roll
jae
and
sbb
mov
js
loop
pop
dec
xchg
loop
movsl
sub
idivl
jne
add
fwait
jp
sub
xor
lock
and
sbb
pop
sbb
pushf
mov
cmpsl
mulb
hlt
mov
cli
loop
js
pop
std
sub
xor
jae
fdivl
in
outsb
repz
mov
and
repnz
jg
xchg
out
test
lods
leave
sub
ljmp
idivl
cmpsl
clc
pop
dec
jno
leave
ficoml
mov
int
push
xchg
cmp
xchg
call
fildll
fadds
and
outsb
cmpsl
fnstsw
ja
sbb
out
inc
jbe
lds
dec
pushf
pop
cli
movsl
xchg
scas
sub
mov
stos
sub
fstpt
sbb
fcompl
aas
dec
je
jle
jg
rcrb
mov
push
inc
mov
addr16
push
xor
daa
mov
push
insb
sub
and
sahf
inc
and
push
mov
insl
pop
iret
nop
cmpl
mov
scas
jmp
add
mov
sub
push
in
xchg
sbb
or
mov
pop
cld
xchg
mov
mov
sti
sub
push
mov
mov
ja
add
pop
stc
insb
pop
push
add
jne
lret
mov
test
dec
faddl
jae
mov
dec
jbe
rorl
lcall
add
push
inc
pop
test
mov
cmpl
inc
or
cmp
adc
mov
or
pop
sti
gs
pop
jbe
push
mov
mov
jns
lcall
adc
fcmovbe
imul
or
push
add
jno
pop
pop
pusha
idivl
jns
mov
fstp
dec
adc
lock
outsb
push
loope
mov
stos
out
jae
mov
jns
addr16
jl
leave
pop
push
mov
xor
cs
cmpsl
jbe
nop
adc
cltd
popf
lret
adc
jno
movsb
xor
or
and
push
inc
jae
pop
pop
scas
sub
xchg
rcr
jp
xor
fsubrp
das
stc
pop
arpl
pop
inc
jle
aas
sub
pop
stos
jno
inc
insl
mov
pop
add
add
and
mov
shlb
pushf
inc
js
jle
pop
jo
outsb
loopne
add
vpunpcklqdq
icebp
pop
cld
pop
cwtl
ljmp
pushl
orl
pop
rorl
pop
ret
ja
inc
test
mov
cmp
cmpsb
cmp
push
mov
mov
xchg
insl
or
pop
cmpsl
sub
sbb
lahf
jp
and
loopne
sarb
or
in
repnz
add
and
add
pop
sar
and
clc
lock
pop
cmpsb
out
cmp
insb
test
clc
cld
pop
idivl
mov
or
imul
mov
gs
test
lea
ds
movsl
aam
xchg
loop
push
add
std
addr16
ja
mov
shl
jne
pop
vpmacssdqh
das
mov
inc
adc
push
out
daa
mov
jns
lds
pop
or
roll
pop
and
mov
inc
or
rclb
test
and
jg
pop
dec
in
and
popf
push
mov
outsb
call
stc
cltd
inc
test
jp
pop
imul
mov
imul
jp
jnp
cmp
jmp
test
ljmp
jae
push
leave
ljmp
nop
repz
repz
xchg
cmp
orl
inc
stc
lea
popf
fcmovu
fidivrl
add
jmp
push
stos
sub
sbb
scas
inc
adc
test
mov
push
adc
je
or
dec
mov
scas
push
std
lahf
hlt
or
outsb
into
mov
sub
test
xchg
add
mov
push
xchg
cmp
xchg
fidivl
test
std
sbb
fsubr
mov
std
xchg
es
push
push
flds
loop
xor
adc
mov
out
inc
aam
jns
push
push
aam
push
add
adc
add
lock
pop
add
add
push
add
mov
in
jo
sbb
mov
in
adc
inc
or
add
mov
dec
sbb
or
mov
pop
cmpsl
push
idivl
cmp
jo
sub
mov
cmp
lock
out
test
push
ljmp
mov
cli
test
sti
jns
arpl
rcr
jno
pop
fimull
push
clc
adc
mov
ljmp
or
pop
xor
adc
fmuls
mov
xchg
gs
inc
jo
xor
jns
add
mov
push
adc
inc
xchg
cmp
mov
pop
movsl
xor
inc
lds
jae
lret
test
xchg
js
orl
or
add
sub
pop
pop
push
stc
ret
mov
sub
fdivrs
xor
into
ret
xchg
adc
cmp
pop
add
repz
enter
cmp
pop
push
shlb
sarb
sbb
out
inc
fistpl
cmpxchg
push
push
dec
adc
mov
fs
scas
cmc
pop
mov
lods
std
arpl
dec
adc
adc
add
adc
aas
movsl
inc
inc
movsb
sub
xchg
xlat
jl
stc
cmpsl
sub
test
test
sti
pusha
pop
xchg
mov
cmpsb
adc
dec
cmpsl
sub
mov
lea
adc
xchg
mov
sub
roll
jp
pop
push
adc
repnz
ja
out
add
ret
fiaddl
aam
pop
add
addr16
and
jnp
mov
cmp
loop
xchg
jl
add
pusha
testl
sub
jno
or
mov
stc
or
repnz
std
gs
inc
or
sub
sar
sbb
sub
mov
inc
fs
aaa
jno
cmpl
sub
inc
insb
and
aad
jp
pop
adc
mov
mov
imul
daa
jns
sar
into
lea
inc
push
or
pop
std
fcomp
fidivrs
add
jo
clc
pop
add
sub
pop
xchg
mov
je
test
roll
jbe
jg
push
imul
dec
mov
bound
lods
sub
leave
bswap
movsb
add
mov
mov
or
repnz
inc
fisttpl
test
mov
cmp
jns
xchg
dec
adc
pop
stc
bound
mov
fisttpl
int3
xchg
sti
or
xchg
rclb
dec
adc
mov
loope
cltd
mov
fldenv
sub
xlat
and
imul
mov
xorl
fsubl
lock
fdivrs
popf
xor
cs
arpl
fstl
sbb
shrb
icebp
popa
pop
xor
jae
inc
pop
cli
mov
cmpsb
mov
sub
mov
push
add
dec
or
test
cmp
mov
lods
call
or
popf
mov
lds
xor
nop
cmp
pop
fstpt
gs
fidivs
cwtl
call
cld
iret
xchg
xor
test
push
rcrl
inc
mov
xor
aas
jns
and
add
adc
inc
mov
lock
add
call
xchg
cmp
mov
lret
sahf
aas
fisttps
cltd
testb
ja
loope
and
cli
inc
push
xchg
repz
arpl
fdivrl
jbe
push
cli
pop
sbb
or
inc
lret
mov
fsubr
insb
insb
repz
inc
jno
xchg
cltd
out
mov
mov
out
test
lods
xor
sbb
push
mov
jl
mov
xor
and
push
shll
inc
or
add
mov
jnp
stos
mov
push
out
scas
xor
rcrb
inc
int3
push
add
lahf
jle
aad
mov
mov
and
xchg
loopne
outsl
jne
inc
xchg
and
lds
mov
inc
and
cmp
int3
movsl
fcmovne
mov
mov
push
add
dec
stc
pop
mov
mov
fbstp
xchg
pushf
xor
shlb
add
mov
loope
sub
sarl
dec
inc
or
adcl
add
mov
mov
adc
hlt
or
les
xchg
aam
jge
push
push
test
jbe
movb
sbb
sbb
mov
mov
push
pop
gs
xor
mov
jns
jnp
mov
dec
movzwl
xchg
fdivs
mov
scas
lahf
inc
aam
jne
push
add
mov
mov
outsl
rcrb
rcrb
xchg
mov
outsb
jmp
ror
filds
sbb
pusha
mov
mov
outsb
clc
lcall
cmpl
dec
adc
ds
push
dec
fnstcw
fdivrs
mov
ror
iret
in
push
adc
lea
mov
mov
inc
fcomp
roll
or
repz
clc
inc
or
rolb
rcrb
fisubrs
rolb
push
ret
xorb
mov
movsb
and
push
es
pop
sahf
mov
jnp
into
xchg
addr16
test
inc
jo
mov
mov
mov
inc
xchg
loopne
push
push
push
jp
mov
mov
push
js
push
jmp
cmp
sar
fs
int3
icebp
gs
pop
test
lahf
in
cmp
adc
lahf
sub
cmp
aad
add
or
jnp
sub
add
mov
lock
aad
stc
pop
ficoms
pusha
repz
leave
mov
cmc
imul
outsb
push
mov
cmp
in
xchg
xor
call
hlt
imul
stc
hlt
or
call
testb
mov
mov
inc
mov
ret
xchg
jl
jle
pop
rolb
sbb
les
fstpl
mov
dec
testl
xor
and
dec
sub
dec
mov
sbb
icebp
rorl
movl
test
cltd
xchg
or
ret
and
pop
dec
or
arpl
lock
jge
aam
rcrb
cmpsl
rcr
inc
push
orb
int
sbb
jecxz
lock
sub
imul
fistpl
inc
mov
jb
repz
push
lret
jne
mov
mov
mov
stos
movsb
pop
jmp
mov
ss
int
add
scas
add
mov
lock
xchg
pop
jmp
xchg
aas
loope
pop
sti
test
insl
add
cli
sbbb
push
mov
jns
add
lret
mov
loopne
xchg
push
repnz
scas
lret
out
out
outsb
lock
ret
ljmp
lods
lods
test
into
movsl
cs
add
test
jne
popf
shll
out
lret
out
sti
outsb
icebp
mov
lods
clc
arpl
add
pop
mov
inc
nop
fldl
jo
scas
xor
gs
mov
out
adc
mov
data16
or
sahf
or
inc
or
add
int
mov
rorl
mov
test
aas
cltd
xchg
out
pop
sbb
push
jbe
ret
push
ficomps
mov
int3
xchg
dec
out
loopne
and
xor
stos
xor
dec
clc
popa
fwait
sbb
js
jae
daa
popf
test
call
repnz
insb
adc
jno
jge
push
movsl
mov
inc
or
mov
lods
inc
push
mov
movsb
aam
adc
jecxz
orl
sub
pop
clc
jo
insl
ljmp
insl
jmp
rcr
aas
xchg
fists
fdivrl
add
std
jno
imul
outsl
lcall
mov
mov
add
jle
lahf
mov
dec
enter
xor
pop
stc
test
rorl
inc
pop
ret
dec
test
cwtl
clc
xchg
sub
jmp
fidivl
flds
or
mov
outsb
or
in
pop
pusha
push
shrb
mov
jno
mov
test
push
aad
jp
clc
push
adc
loope
cmc
fs
cli
mov
xchg
xchg
cmpsb
subb
mov
out
loope
cmpsb
mov
cmc
arpl
scas
bswap
sbb
jecxz
dec
inc
lods
cs
pop
std
and
aas
fnstcw
test
scas
jne
ds
ljmp
mov
movl
mov
aas
mov
inc
push
jp
mov
imul
push
js
lods
adc
dec
xchg
inc
sub
arpl
ss
sbb
popf
sub
sub
xor
mov
pop
ja
pop
lea
and
mov
mov
fstpl
leave
nop
cmp
inc
pop
jg
sub
jo
jns
ljmp
sbb
clc
ds
jns
cs
rclb
cmc
ljmp
push
pop
repz
stc
push
sbb
insb
add
or
lods
ss
call
and
cmp
mov
clc
xchg
popf
xor
sbb
ja
jmp
xchg
lahf
cmp
jo
rcrb
testl
adc
lock
xor
lret
ja
jmp
or
push
or
dec
nop
sub
imul
add
mov
ror
pusha
add
cmpsb
mov
jle
stos
sub
pushf
test
dec
loop
lret
sti
dec
imul
dec
mov
pusha
negl
sarl
inc
ret
pop
jns
popf
xor
lcall
cltd
in
call
in
inc
sbb
popl
cmp
ret
popa
push
lods
xchg
in
lock
ss
push
mov
or
lods
fisubrs
shrl
ljmp
xchg
or
sbb
sub
pop
stc
pop
sahf
sub
loopne
dec
and
popf
inc
fcmove
pop
xchg
and
cmp
mov
clc
xchg
popf
xor
sbb
js
out
push
sbb
xchg
lahf
cmp
jo
rcrb
mov
loopne
lods
adc
icebp
xchg
xor
lret
js
jmp
or
push
or
dec
nop
sub
push
jl
inc
scas
add
mov
iret
leave
pusha
add
cmpsl
mov
out
push
stos
cs
add
jecxz
enter
dec
push
sbbb
mov
shrl
popf
hlt
cmpsb
cmp
icebp
inc
les
adc
jns
gs
xchg
push
mov
push
mov
or
ds
cmp
ret
lods
nop
jecxz
icebp
adc
xor
jecxz
js
addr16
ljmp
jno
mov
mov
or
shrb
std
lods
inc
das
xor
mov
lret
bound
movsb
jmp
ret
pop
testl
loope
dec
and
std
fwait
inc
fcmove
push
xchg
push
in
popa
clc
push
jb
cmp
aas
jg
jno
ret
pop
notl
loop
dec
in
push
pop
insb
add
push
push
mov
mov
mov
ficoms
repnz
xor
lret
jns
out
push
call
cmp
outsl
push
push
pop
mov
mov
lea
scas
aam
loope
stos
inc
lods
add
mov
adc
push
cmpsl
das
fdivs
popf
movsb
stc
dec
in
and
testl
fimull
mov
shrb
clc
fwait
icebp
cmpsl
and
lds
sahf
xor
leave
arpl
sbb
pop
mov
or
nop
cmp
cmp
scas
mov
pop
repnz
jns
add
test
or
test
daa
fisubrl
shrl
sti
scas
inc
sub
dec
int3
arpl
mov
sub
lahf
es
loop
inc
es
sti
cltd
inc
fcmovne
sbb
pop
dec
jmp
stc
sbb
cmpsb
cmp
outsl
ret
les
nop
sahf
xor
dec
jecxz
push
adc
fidivl
mov
clc
mov
fcoml
lods
or
cs
pop
mov
adc
adcb
push
cltd
xor
shlb
add
mov
mov
aad
fistpll
inc
stos
add
mov
lret
lret
push
adc
push
movsl
xor
jno
sahf
mov
les
add
inc
fildl
mov
into
push
test
and
pop
je
lahf
ss
xchg
in
popa
mov
cltd
sbb
and
cmp
scas
mov
pop
clrssbsy
int
xor
bound
push
in
xor
jae
test
mov
or
aam
pop
stc
scas
inc
sub
mov
rclb
cmpsl
add
lds
or
cmpsb
inc
daa
mov
stc
xchg
inc
fmul
sbb
cli
sbb
mov
rol
repz
jnp
loope
push
adc
cltd
cltd
xor
jb
mov
stc
nop
mov
ficoml
scas
or
hlt
nop
sub
int3
pop
mov
adc
jle
ljmp
jno
add
dec
mov
es
stos
insl
fnsave
inc
test
hlt
mov
lret
cld
push
adc
dec
mov
or
es
es
jns
inc
faddl
mov
int3
addr16
cwtl
in
test
pop
mov
pop
jb
mov
jnp
pusha
mov
cltd
pop
mov
jae
cmp
mov
pop
sti
xchg
cmp
sbb
or
jp,pn
pusha
call
xor
jae
adc
dec
pop
movsl
xchg
sub
sub
imul
inc
sub
scas
dec
int
jge
adc
shll
lds
or
movsl
inc
daa
mov
clc
xchg
inc
fadd
sbb
cli
sbb
ds
cmp
pop
repnz
jnp
loopne
push
adc
cltd
cwtl
xor
jb
mov
stc
nop
mov
fsts
scas
or
hlt
sub
adc
jge
ljmp
jno
add
dec
mov
es
stos
insl
fdivl
inc
cmpsl
std
hlt
mov
leave
lret
sti
push
adc
dec
mov
or
and
inc
insb
add
inc
faddl
mov
lret
data16
xchg
in
test
push
mov
pop
jno
mov
jnp
pop
mov
cltd
push
mov
jae
aaa
and
cmp
sbb
or
aaa
into
push
in
das
sbbl
dec
push
movsb
xchg
sub
daa
aam
pop
imull
mov
into
adc
iret
and
push
lock
movsb
inc
daa
mov
notl
and
arpl
pop
insb
test
sahf
cmp
pop
icebp
mov
jl
fidivrs
lcall
and
mov
inc
xlat
cmp
pop
scas
or
cmc
mov
xor
adc
jnp
ljmp
jno
call
push
xchg
nop
daa
push
test
outsb
fidivl
inc
movsl
sti
cmc
mov
dec
adc
dec
mov
or
and
daa
mov
jbe
inc
fldl
mov
leave
fs
xchg
ljmp
jmp
or
jl
pop
mov
lcall
and
xchg
mov
fstps
or
jnp
pop
cld
push
in
sub
dec
je
adc
dec
add
xchg
sub
and
mov
daa
jns
mov
int3
adc
int
xor
dec
out
or
mov
ret
insb
add
xchg
inc
ffree
push
mov
dec
in
sti
adc
sbbb
mov
mov
jge
fdivrl
fwait
xchg
das
fdivl
mov
mov
mov
inc
fdivrs
aad
scas
push
pop
pop
testb
adc
jns
jmp
add
std
push
mov
sub
fsubrs
jno
inc
mov
vpcmpgtb
dec
adc
jge
in
orl
leave
iret
imul
pushf
lock
out
mov
outsb
add
inc
xchg
mov
bound
xchg
call
sbbl
cmp
pop
insl
or
jge
pop
rclb
add
adc
and
xor
inc
xlat
mov
sbb
or
jl
pop
cli
push
out
sub
xor
sarb
sub
and
insl
push
repz
and
inc
iret
data16
adc
lret
sbb
enter
mov
mov
shrl
nop
inc
faddp
adc
and
gs
adc
inc
lcall
pop
in
xchg
jle
fidivrl
pushf
xchg
sub
and
mov
inc
fnstenv
rcrl
mov
pop
pusha
testl
ja
in
test
pushf
xor
lret
cld
push
mov
sub
fsubrs
jo
inc
mov
into
testb
jnp
in
test
xor
int
or
pop
mov
outsb
add
inc
xchg
mov
lds
std
xchg
out
inc
sbb
pop
imul
cmp
mov
jge
pop
rcrl
add
adc
and
xor
sbb
test
pop
cmc
push
cmpsl
cmp
fsubs
jl
pop
stc
pop
out
sub
xor
into
mov
sub
and
insl
push
repnz
and
hlt
mov
enter
cwtl
out
test
sbb
enter
mov
sahf
cmp
insl
add
vprotb
mov
inc
loope
std
adc
inc
cwtl
xor
jmp
mov
jle
fld
push
or
pushf
xchg
sub
jne
mov
mov
mov
inc
fnstenv
push
pusha
testl
jbe
in
cmpsl
cld
pushf
xor
leave
je
sti
dec
mov
sub
fsubrs
outsl
mov
mov
ret
iret
data16
dec
adc
jns
out
test
xor
lret
imul
sbb
outsb
add
aas
xchg
mov
ret
pusha
addr16
xchg
in
inc
push
mov
sbb
aaa
enter
movsb
cmp
mov
jge
pop
ret
fldl
push
lods
loopne
fildll
and
xor
sbb
cmc
add
cmp
xlat
and
pop
lock
xor
int3
mov
sub
pop
xlat
outsb
push
lock
and
mov
adc
enter
dec
jmp
push
out
cmp
ret
outsb
add
mov
fbld
adc
xchg
xor
pusha
jmp
or
jg
xlat
rcrl
push
popf
pop
mov
mov
scas
add
xor
sbb
xchg
cmp
push
cmpsl
jg
fnstenv
movsl
cli
popf
xor
jne
stc
dec
mov
sub
jo
insl
mov
lahf
repz
ja
out
xchg
xor
leave
addr16
call
jmp
outsl
push
outsb
or
loope
lea
pop
push
inc
adc
xchg
addr16
cmp
mov
jle
push
ret
pop
mov
add
js
sub
call
mov
sbb
testb
cmp
aad
jge
push
negb
daa
js
xor
lret
mov
sub
push
fsubrs
out
mov
and
lea
adc
notb
lret
or
call
push
outsl
push
out
mov
mov
frstor
push
arpl
popa
mov
popa
call
or
cmpb
rcrl
pop
sahf
mov
fbstp
scas
and
xchg
lods
add
into
sbb
test
cmp
push
movsl
adcb
jb
out
mov
lds
testl
sub
sahf
fidivl
imul
and
push
lods
jne
lock
lret
gs
movsl
xchg
call
sub
jmp
or
cmp
imul
adc
lret
add
jg
push
les
flds
popf
or
and
pop
std
add
scas
dec
push
mov
shlb
add
jle
push
hlt
pop
icebp
and
inc
js
js
mov
sub
dec
in
mov
push
jo
mov
ret
adc
xchg
adc
push
movsl
push
push
sub
push
mov
mov
fldt
or
lods
inc
xchg
sub
lret
out
movsb
cmp
rol
pop
add
es
pop
lods
es
stos
incl
int
mov
push
stc
sbbb
rclb
adcb
jno
lock
les
testb
jnp
xchg
sub
into
push
dec
pushf
out
clc
and
push
lods
jae
icebp
mov
xor
lds
xchg
out
jmp
call
or
mov
add
scas
mov
loope
lret
add
jg
push
lds
push
popf
or
and
pop
cld
add
lods
dec
pop
mov
into
pusha
idiv
mov
jg
push
repnz
repnz
cmpsb
inc
jns
jbe
mov
cs
sbb
jno
ljmp
mov
rcll
repnz
icebp
mov
adc
cmpsb
adc
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
xchg
sub
push
pop
mov
arpl
jg
cmp
add
ret
pop
add
or
push
stos
daa
mov
stos
std
inc
fsubrl
int3
sbb
cli
sbbb
rorl
sbbl
mov
ret
js
cmc
inc
mov
cs
lcall
fwait
in
stc
nop
pop
mov
pop
scas
jno
repnz
xor
cmpsl
xchg
in
ljmp
jno
push
mov
add
mov
loopne
lret
bound
test
xor
pop
xchg
pop
sahf
push
test
jnp
daa
and
cltd
sub
inc
fisubrl
int3
popa
clc
std
lahf
ds
push
adcb
icebp
pop
repz
xor
jne
mov
das
enter
dec
jmp
stc
nop
sahf
cmp
imul
scas
lock
repnz
adc
int
loop
cmpsl
adc
xchg
xor
lds
jb
call
or
add
pop
scas
inc
sub
fs
cmpsb
cmp
xor
push
or
push
test
add
sub
push
mov
dec
fs
jle
cmp
sbb
outsb
pop
repnz
repnz
adc
inc
mov
das
inc
cwtl
fdivl
addr16
cltd
jmp
xchg
sbb
sbb
inc
nop
ss
popa
adc
adc
or
dec
in
xchg
add
lods
mov
fisubrs
test
xor
pop
test
or
fsubs
es
sub
fldt
lret
stc
cld
popf
ds
sbb
pop
repz
mov
les
das
pop
fdivl
out
dec
sbb
xchg
popf
cmp
imul
out
repnz
loopne
cmpsl
adc
in
xchg
xor
lds
jae
out
dec
jecxz
or
add
pop
mov
mov
mov
pop
scas
into
gs
cmpsb
cmp
xor
les
push
or
push
test
rcr
add
sub
push
mov
dec
gs
jge
cmp
sbb
insb
pop
repnz
icebp
mov
adc
inc
mov
das
inc
xchg
fnsave
mov
xchg
ljmp
jmp
sbb
ds
aaa
into
rcrb
nop
loope
in
adc
jae
gs
in
xchg
add
stos
mov
fsubrl
aas
das
sub
mov
pop
adc
mov
and
add
test
lret
sti
fwait
ds
sbb
sbb
pop
repz
jo
aaa
mov
ret
mov
das
les
fnsave
mov
pop
push
xchg
pushf
cmp
imul
mov
mov
mov
ficoms
cmpsl
punpckldq
xchg
xor
lds
je
out
dec
jecxz
pop
xchg
sub
aam
add
pop
mov
lea
mov
pop
scas
iret
data16
cmpsb
cmp
xor
les
push
or
test
jecxz
push
cmpsb
sub
xlat
jae
cwtl
movsb
clc
dec
fildll
pop
mov
dec
data16
jnp
ds
pushf
test
into
push
repz
out
mov
adc
inc
rclb
cltd
xor
fidivs
arpl
xchg
sbb
sbb
cmp
cmp
mov
fists
adc
je
arpl
dec
out
test
add
xlat
mov
or
into
gs
sti
test
xorl
or
aam
sub
es
frstor
enter
cltd
aas
lret
sbb
hlt
sbb
mov
adc
mov
xor
adc
jne
jecxz
dec
adc
ss
push
mov
mov
fcoml
test
pusha
push
out
xchg
cs
pop
mov
or
orb
add
imul
pop
mov
mov
shlb
js
ds
out
test
int3
lds
or
sbbl
jnp
movsb
sub
aad
add
daa
lds
mov
dec
data16
jns
aas
dec
lcall
lcall
adc
inc
rclb
lcall
bound
xchg
sbb
sbb
cmp
adc
push
scas
xor
loopne
je
popa
add
xor
outsb
add
pop
cmpsl
mov
fldcw
into
gs
cli
stos
inc
sub
in
subl
or
shll
sub
and
inc
and
negl
sbbl
ljmp
sahf
cmp
adc
mov
xor
adc
jne
loop
dec
adc
cld
xchg
cwtl
xor
sbb
mov
fistl
test
sub
jne
loop
dec
in
add
add
dec
mov
and
shlb
ja
aas
test
lret
pop
std
push
or
sbbl
sub
shll
lcall
and
ja
inc
xlat
inc
cwtl
test
lret
cmc
cltd
jmp
cmp
rclb
fwait
xor
fidivs
popa
mov
xchg
push
mov
outsb
out
sbb
cmp
adc
mov
push
in
or
xor
fildll
push
call
mov
outsl
push
test
mov
add
es
gs
stc
stos
inc
sub
subl
mov
rcrl
sub
push
repnz
fisubs
les
cmc
xchg
inc
fadd
push
test
dec
call
mov
adc
mov
fwait
xor
loopne
push
adc
xchg
xor
outsb
gs
mov
xchg
mov
fsts
stos
or
lea
xor
pop
scas
jbe
loopne
dec
out
add
add
push
mov
xchg
mov
push
test
push
cmpsl
sti
out
xchg
dec
or
jge
mov
add
mov
ret
repz
addr16
jne
inc
cld
xchg
hlt
mov
add
cmp
pop
add
push
jns
dec
data16
int
mov
pop
sub
xlat
movsb
xor
lea
jge
scas
ret
and
push
imul
imul
jge
dec
adc
rcrl
movb
repz
cmpsb
inc
or
dec
push
out
mov
fdivl
mov
xor
jle
lret
jg
shlb
rcll
out
adc
les
xchg
jp
jbe
and
fisubrs
dec
jmp
stos
push
enter
pop
cmp
jo
mov
neg
mov
int3
ljmp
leave
fimull
mov
push
icebp
mov
xor
das
mov
aad
lods
into
cmp
dec
stos
mov
jb
fdivrs
add
jne
mov
xor
icebp
les
hlt
mov
sub
into
mov
inc
push
push
add
call
imul
pop
test
ret
mov
out
repnz
nop
in
ja
sbb
mov
popf
jne
sbb
lock
mov
decl
push
push
jae
or
mov
jno
rcrb
and
jle
add
in
mov
mov
mov
mov
jno
and
cmp
mov
call
add
stos
xchg
xor
pop
jne
mov
mov
and
push
jmp
mov
aas
or
mov
and
mov
test
popl
in
pop
test
ljmp
fs
mov
pop
in
cmpb
xlat
popa
std
imul
sub
mov
loopne
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
sub
adc
out
fsubrl
addl
mov
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
aas
jge
lahf
ret
dec
aas
cmp
fstpt
pop
insb
cmpsl
sub
jno
subl
out
jb
cld
stos
imul
pop
cmpb
roll
mov
add
lock
inc
mov
jmp
jb
nop
das
or
idivb
pop
fcom
fidivl
rolb
or
xchg
push
test
sub
stos
loopne
jg
dec
sbb
rol
add
out
aad
and
mov
and
xchg
clc
mov
cmp
fwait
dec
sti
push
xchg
mov
enter
xchg
inc
ret
shrl
repz
insl
addr16
fucomi
mov
test
cmp
lcall
pop
xor
push
aas
fimull
jmp
jge
ds
adc
repz
pop
sbb
.byte
