adc
and
add
inc
add
add
add
pop
and
push
out
add
bound
fimuls
sub
or
mov
pushf
mov
mov
inc
push
rcr
or
cwtl
adc
sbb
rorb
cs
adc
sarb
pop
cmp
push
push
add
ror
arpl
or
mull
clc
mov
jg
or
addl
dec
add
sbb
inc
xor
mov
ret
dec
xor
lahf
sub
fadds
xchg
dec
lahf
push
and
dec
fnstcw
and
cmp
in
aam
mov
jae
imul
xchg
mov
mov
cmpb
call
xchg
mov
mov
movsl
xorl
mov
pop
bound
cmpsb
add
xchg
push
sahf
add
inc
xor
mov
lds
inc
add
test
sbb
out
loope
lds
add
xor
mov
inc
xor
int3
inc
cmpsl
test
dec
mov
outsb
mov
aas
add
and
cmp
xor
inc
xor
out
or
shl
or
adc
rorl
push
dec
scas
mov
and
test
push
mov
mov
ret
rorb
nop
adc
adc
xchg
pop
jns
ds
insl
mov
adcl
jge
jmp
jne
mov
and
add
inc
outsl
test
sbb
lret
aas
add
cld
mov
sub
fwait
aad
jb
fldl
or
and
add
pop
push
loopne
stos
scas
mov
and
bound
and
xchg
leave
stc
sub
pop
lods
sbb
pop
xor
push
nop
pop
std
icebp
add
and
xchg
test
mov
inc
jmp
lea
call
add
sub
xorl
add
jle
int
ja
orb
jae
add
adc
fs
call
adc
stos
out
scas
bound
les
bound
rcrl
sarb
cmp
stc
mov
add
adc
loope
or
sbb
dec
sbb
cs
sbb
in
pop
in
push
push
arpl
test
inc
xor
push
and
mov
popa
xor
add
insl
cmc
jnp
in
loopne
mov
orl
in
mov
add
cmp
push
lds
dec
add
stos
add
stos
sbb
xor
mov
in
nop
or
test
gs
push
adc
cmpsb
lds
xor
or
push
mov
push
or
dec
push
xlat
inc
fs
cmpl
mov
pop
imul
xchg
add
or
xchg
mov
fwait
loopne
cmp
ss
fwait
mov
xor
rolb
jae
jbe
sbb
mov
sub
sbb
inc
stc
in
dec
cmp
xchg
repz
addr16
insb
nop
lret
mov
jae
unpcklps
or
addr16
xchg
ss
inc
add
enter
xchg
jg
ljmp
enter
lahf
jp
add
leave
and
mov
bound
fsubrs
inc
or
enter
push
jb
ficoms
push
push
pop
in
scas
sbb
mov
pop
and
adc
dec
pop
mov
or
cs
int
inc
or
cltd
jge
mov
data16
pop
shll
orl
add
mov
push
mov
cld
loope
mov
push
and
stos
sbb
push
dec
mov
or
adc
mov
xor
xchg
adc
ret
xor
les
push
bound
movsb
add
sbbl
and
pop
out
in
test
mov
movsb
mov
daa
push
or
xchg
in
movsb
or
lods
xchg
cltd
mov
add
cltd
pushaw
insb
xchg
or
bound
aaa
test
adc
lret
outsl
push
lods
adc
mov
and
push
cmpsl
ljmp
mov
int3
aaa
test
test
dec
fidivl
es
outsb
ja
mov
sub
pop
or
insl
sbb
jge
or
add
lods
filds
dec
mov
mov
dec
cltd
aaa
add
push
cltd
push
xor
jo
imul
adc
add
adc
mov
add
adc
test
inc
pop
mov
mov
inc
xor
add
or
and
scas
pop
lods
fs
loope
mov
shrb
sub
out
sbb
cmpsb
fldcw
ljmp
loopne
add
test
pop
frstor
adc
movsb
stos
sub
mov
mov
test
jnp
pop
subl
std
cmp
imul
inc
sub
or
xchg
dec
and
inc
jno
int
jb
pusha
mov
pop
movsl
mov
add
inc
and
addl
xor
rorl
mov
push
sub
and
popa
pop
stos
movsb
or
out
mov
sub
loope
popa
sub
jne
add
mov
lcall
add
mov
cmpsb
stos
inc
adc
inc
imull
es
fnsave
leave
cmp
adc
in
mov
jge
enter
inc
dec
pop
jmp
mov
or
fbld
add
adc
push
bound
sar
scas
push
test
pusha
sub
nop
pop
mov
mov
sub
fs
lea
add
mov
addl
push
add
cmc
das
pop
and
xor
insl
aad
cltd
mov
cli
sti
push
sbb
sbbl
repnz
mov
cmp
out
cmp
pop
jno
push
leave
add
mov
loopne
and
sarl
xchg
xchg
and
pop
stos
add
mov
push
pop
mov
insl
adc
loopne
sub
push
inc
aad
sbb
and
movsb
cmpsl
dec
dec
fnstcw
and
inc
in
enter
jns
mov
xor
iret
add
shrl
jns
jb
push
mov
in
rcrb
movups
push
adc
dec
push
shl
pop
xlat
js
push
sub
mov
xor
rcrb
mov
into
pop
pop
pop
adc
push
sbb
pop
sub
inc
push
sbb
stc
in
outsl
loope
push
ljmp
add
jno
add
dec
and
mov
mov
adc
ret
stos
push
or
or
dec
repz
push
shrb
ljmp
mov
ret
or
and
inc
push
sahf
aad
add
gs
pop
mov
movl
push
lds
dec
adc
arpl
loop
push
and
add
pop
dec
scas
push
jb
xor
adc
enter
mov
loopne
xor
lods
movlps
mov
cmp
mov
and
pop
xor
jno
mov
cmp
push
jns
xchg
xor
mov
sub
xchg
cmovle
mov
rcr
cmp
test
inc
cmp
push
mov
cmp
jno
push
mov
push
inc
or
push
inc
shll
mov
std
aaa
std
pop
and
leave
xchg
imul
movl
lea
and
lea
mov
jne,pn
lea
sub
add
jg
cmp
sbb
cmpsb
jae
inc
stos
outsb
mov
fstpl
and
add
rdtsc
push
mov
test
cmp
or
call
inc
out
test
outsl
push
enter
inc
jb
xor
push
mov
or
push
dec
mov
push
cmpsb
push
int
mov
inc
or
or
sbb
inc
xlat
mov
pop
sbb
or
sub
sbb
enter
ret
outsl
inc
int3
pop
ljmp
and
push
pop
ror
mov
imul
xor
rcll
aaa
rorl
pop
mov
out
cltd
pop
push
jmp
mov
out
sarl
add
add
jbe
pop
and
roll
push
dec
dec
sti
sub
adc
xor
jo
adcl
mov
je
xchg
cmpb
dec
rolb
outsl
inc
ret
inc
add
cmpl
fldenv
pop
adc
inc
xchg
scas
imul
mov
test
jbe
cmc
inc
mov
les
xchg
sub
or
nop
or
in
ficomps
push
and
or
pop
xchg
scas
pusha
adc
add
push
imul
xor
out
mov
ffree
dec
mov
cmpsb
mov
and
mov
mov
xchg
aaa
bound
adc
dec
mov
sub
xor
pop
mov
mov
nop
mov
aas
or
in
lods
adc
ret
push
fmull
push
dec
dec
jo
cmp
add
xor
scas
or
aad
dec
scas
movl
fisttpll
inc
jb
sbb
inc
jecxz
stc
xor
mov
mov
push
in
add
stos
bnd
adc
cmpb
icebp
push
push
mov
sbb
in
test
push
add
mov
mov
and
cmp
fs
rclb
mov
in
mov
test
cmp
xchg
adc
add
stos
pop
cli
je
mov
imul
pusha
or
daa
movb
aas
aad
movsb
pop
adc
nop
push
pop
sub
sbb
pop
jp
fs
addl
mov
imul
mov
orb
cmp
aad
and
xchg
stos
je
scas
xchg
out
xchg
popf
mov
es
jecxz
aaa
xor
xor
out
mov
mov
out
and
sbb
into
adc
push
aam
sbb
push
pop
adc
inc
jne
sub
cwtl
inc
dec
cmpsl
lods
out
imul
add
xchg
adc
mov
not
add
or
popa
subb
pop
push
loope
inc
loope
leave
popf
les
push
bound
or
xor
dec
push
and
jg
jbe
pop
sahf
cmp
mov
or
ret
mov
jmp
outsb
popa
ja
mov
sbb
and
cmpsl
les
addb
and
xor
leave
out
mov
stc
aad
add
or
es
pop
add
sbb
jb
sbb
push
push
inc
mov
push
mov
jo
movl
add
test
inc
jo
sbb
jns
xchg
jp
inc
sub
into
sbb
add
pop
cmp
dec
mov
inc
fnstcw
xchg
orb
mov
inc
cmpb
fcomps
mov
pusha
add
pop
roll
rorl
mov
rcrl
iret
rclb
xor
out
jle
rcll
mov
mov
enter
xchg
mov
leave
test
sar
xchg
mov
insl
push
or
xor
shrb
ja
xchg
cmp
mov
dec
pushf
sub
add
pop
jecxz
add
ret
xchg
mov
lea
jb
mov
cs
test
cmc
dec
jb
sub
inc
js
xlat
fdivrs
sbbb
push
in
or
mov
in
fwait
push
bound
imull
popa
add
and
add
add
mov
leave
inc
cwtl
cmpsl
cmp
or
jecxz
dec
es
gs
aad
ljmp
and
out
adc
jo
mov
inc
cmpsb
mov
cmp
push
add
or
popa
or
or
mov
outsl
xchg
and
push
xchg
cwtl
push
imul
adc
stos
sbbb
test
push
add
add
out
nop
les
shlb
adc
jbe
sbb
mov
addr16
pop
or
xor
add
push
rolb
loop
sbb
sbb
pusha
test
add
lds
aas
pop
adc
loopne
inc
aam
push
or
sub
lds
enter
adcb
mov
xchg
mov
mov
stos
cltd
test
sub
aad
enter
add
mov
lea
in
xchg
sbb
mov
pop
lea
push
push
repz
push
xchg
xchg
inc
in
adc
pop
sbb
lds
inc
xor
mov
into
xchg
pop
imul
adc
cmp
aam
loope
add
stc
jl
dec
lods
es
lods
inc
pop
push
inc
pop
push
cmp
jae
addb
inc
or
mov
inc
aas
cltd
adc
xchg
stc
cmp
scas
call
mov
inc
test
or
bound
ds
dec
pushf
shrb
add
or
roll
fisttpll
sbb
les
rcll
sbb
pushf
fwait
nop
push
add
leave
or
pop
sbb
xor
enter
cltd
inc
mov
inc
inc
mov
xor
roll
mov
in
cmp
gs
mov
fistpll
add
mov
adcb
pop
xor
call
dec
adc
cwtl
dec
mov
dec
inc
adc
xor
je
lea
jne
cmp
jns
mov
lcall
sub
sub
movsb
test
test
ja
pop
xchg
lcall
add
sbb
test
add
imul
add
sti
imul
jae
pop
push
cmp
ret
icebp
mov
pop
and
jae
pop
outsb
jmp
call
dec
mov
add
xchg
inc
xchg
jo
shll
mov
stos
xor
subl
test
add
roll
bound
cmpsb
jecxz
cmc
mov
xchg
lea
loopne
cmp
xchg
adc
sub
or
xor
xchg
jae
add
test
and
xchg
adcb
inc
dec
clc
add
and
lds
inc
add
xchg
je
add
mov
or
add
adcl
movl
int3
pop
sbb
sbb
out
inc
sub
adc
aam
pusha
jge
insl
pop
andl
add
jmp
dec
inc
adc
or
xor
sub
push
jecxz
xchg
inc
sub
xor
sub
push
lods
daa
xor
aaa
push
add
xor
das
xlat
mov
push
xchg
shll
movsb
jge
mov
add
sti
xchg
sub
push
lea
jnp
jmp
and
loop
stc
shll
adc
je
test
jecxz
mov
sbb
mov
mov
je
cmpl
and
add
les
rorb
sbb
add
adc
mov
movsb
add
bound
sub
in
sub
cmpsb
cmp
outsb
add
pop
push
mov
lods
add
or
sub
lret
jno
add
pop
and
stc
mov
fneni(8087
or
loop
and
sbb
sub
out
bound
icebp
xor
andb
sub
jae
roll
push
push
dec
dec
scas
mov
les
out
rolb
stos
ss
cmp
add
sbb
push
and
push
stos
inc
inc
stos
add
loope
movsb
sbb
push
cmp
lock
and
push
movl
shll
mov
xchg
jo
lds
jne
mov
push
sbb
pusha
loop
sbb
inc
jle
addl
test
test
dec
iret
jp
add
movsb
iret
rclb
add
jne
pop
lock
popa
mov
pop
testl
xor
jge
mov
les
dec
add
ffreep
roll
dec
cmp
ljmp
dec
scas
loope
stos
push
pop
int
add
roll
jno
add
stos
xchg
aaa
jle
jecxz
jns
lret
add
loop
or
repz
rol
mov
sbbb
sub
rclb
je
cld
scas
loop
in
inc
mov
cmp
sub
ret
in
int3
sub
jb
add
cmp
xchg
jmp
mov
or
xchg
mov
or
and
shrl
in
pusha
test
mov
pusha
orb
inc
mov
push
fmuls
inc
dec
xchg
imul
movsb
add
cmp
inc
test
mov
movsl
orl
cmp
fnsave
sub
pop
dec
jne
inc
push
imul
lret
inc
pop
add
mov
push
test
or
loopne
movsl
pop
xchg
push
inc
push
push
adc
test
call
ja
adc
pusha
out
nop
mov
pop
stos
or
pcmpeqb
jnp
loope
aad
or
leave
aad
adc
push
sub
inc
jmp
in
mov
push
cwtl
mov
rclb
dec
mov
test
or
cwtl
or
imul
add
dec
test
inc
stos
xor
mov
pop
xor
push
pop
push
lds
adc
and
xchg
cmp
rclb
popf
mov
iret
dec
sbb
push
sbb
cmpsl
adc
inc
fldcw
xor
push
xor
lret
aad
and
les
sub
pop
add
cmpsl
add
nop
stos
add
push
mov
inc
dec
insb
pop
xlat
rcl
imul
lds
cmpsb
fs
and
adc
mov
mov
xchg
push
inc
jb
lea
xchg
stos
adc
xor
inc
adc
push
mov
fldl
jo
xor
insb
mov
or
adc
add
push
adc
subb
and
sub
and
cmp
push
or
call
fstpt
xor
add
add
arpl
icebp
mov
mov
cmp
add
mov
and
aas
and
cltd
or
push
leave
aad
movsl
mov
push
push
and
push
sbb
mov
sbb
movsl
bound
or
jne
pop
sub
sti
mov
mov
adc
pop
aam
mov
aad
dec
sub
inc
dec
inc
lret
shrb
add
rcrl
lds
pop
test
fdivl
pop
das
ret
loope
inc
add
and
pusha
xor
sub
add
sbb
mov
cs
enter
lds
add
addl
sub
popf
ljmp
mov
cmp
pop
jne
sar
es
add
mov
xchg
mov
pusha
addl
push
push
loop
or
movb
push
or
mov
inc
inc
push
adcl
call
and
fcoms
or
imul
ja
hlt
dec
scas
sbb
jno
mov
and
push
adc
and
mov
adc
mov
mov
adc
inc
inc
mov
and
inc
push
test
and
mov
rolb
imul
add
inc
cltd
sbb
rorb
push
jno
cltd
dec
mov
andl
adc
push
es
mov
mov
mov
xor
add
fcomps
sbb
jmp
or
mov
test
push
lods
sbb
push
stos
jo
std
daa
iret
in
add
adc
push
lret
and
and
or
and
inc
push
sbb
pusha
adc
push
xchg
je
sbb
cmp
jecxz
jl
xor
dec
cmpsl
pop
out
lahf
xor
xchg
dec
adc
xor
adc
xchg
adcl
adc
push
lods
inc
lea
lock
mov
mov
cmp
inc
xchg
push
xchg
add
pushf
outsl
test
loope
pop
test
aad
cmc
shll
adc
inc
popa
nop
xor
and
movsl
andl
push
jne
mov
inc
roll
loope
cmc
adc
inc
add
orl
add
in
mov
add
dec
push
xchg
dec
insb
and
popa
cli
push
add
test
loope
sbb
sbb
jo
push
nop
xor
push
or
in
es
scas
insb
lds
pusha
add
roll
sub
push
cltd
adc
push
loop
rorl
or
aad
dec
insb
lds
sbb
movsb
adc
mov
loop
movsb
pusha
mov
or
or
aad
pusha
je
sarl
mov
dec
addl
jno
xchg
xor
jb
cmpsl
ss
pop
iret
xchg
push
xor
sub
jo
cmp
fsts
stc
mov
push
pop
inc
gs
jno
jo
fbstp
lret
cmp
sbb
ljmp
nop
pop
out
fbld
adc
popa
add
cs
jne
push
loopne
dec
xor
mov
xchg
cmpsl
sarb
xor
mov
xchg
mov
scas
jge
or
jo
shr
push
inc
iret
arpl
subl
and
inc
lods
pop
dec
xor
jno
xlat
fldt
push
ljmp
cmc
adc
mov
push
repnz
and
push
sbb
lahf
dec
rclb
testl
repnz
bound
mov
cmp
aaa
mov
inc
test
dec
pop
das
rcrl
and
ret
cmp
sbb
bnd
sbb
or
sbb
js
les
dec
shrl
es
mov
pop
aam
mov
roll
dec
inc
cs
pop
clc
pop
or
mov
pop
dec
sbb
cmp
int
dec
sbb
and
xor
mov
and
or
jmp
add
cmp
cmc
adc
and
movsl
mov
popf
stos
xchg
cmpsb
aad
data16
adc
hlt
lea
data16
xchg
movsb
mov
loop
or
stc
jmp
jae
sbb
xchg
or
or
mulb
testb
xorl
or
loopne
fxtract
and
or
bnd
mov
movsl
lahf
call
or
push
je
dec
pop
daa
cmpsb
loopne
mov
sub
push
mov
loop
mov
pop
and
in
inc
push
int
push
in
pushl
daa
jns
cs
or
pop
and
xchg
leave
xor
std
sub
sbb
andb
mov
adc
xor
sub
bound
shlb
das
imul
in
rcll
and
scas
movsb
jle
jno
sub
iret
sbb
add
jo
shll
inc
repnz
repz
es
push
stos
sbb
in
push
jno
cmp
movsl
adc
sub
jecxz
push
push
push
mov
mov
or
sbbb
loope
sbb
mov
icebp
add
mov
je
or
cmp
adc
gs
push
sub
lods
xchg
dec
sbb
and
xorl
xlat
pop
adc
adc
dec
aaa
rclb
jo
sbb
xor
or
ljmp
cmpb
in
jge
dec
arpl
mov
pop
arpl
test
cmp
adc
sbb
push
push
shll
jo
adc
addr16
push
mov
inc
add
cmpl
add
sub
lcall
sub
jno
cwtl
sbb
dec
jne
add
mov
add
les
inc
sbb
jecxz
push
loop
sbb
sbb
les
lods
or
daa
mov
adc
test
cmp
fs
data16
push
fwait
cltd
or
cltd
fldl
push
bound
fbld
push
jno
push
rolb
cmpl
test
inc
pop
in
inc
xchg
lea
in
sub
es
mov
add
xorl
outsb
inc
enter
adc
mov
les
orb
xchg
sbb
push
sub
sub
es
inc
mov
cmp
pusha
and
pop
mov
dec
and
mov
daa
xor
sbb
sbb
loope
push
xchg
push
ret
sbb
mov
movl
jns
or
and
pop
dec
dec
and
jle
lret
or
scas
cltd
outsl
dec
push
and
ja
orb
or
dec
pop
inc
andl
adc
jno
in
out
mov
mov
and
inc
and
and
es
vmovhps
sbb
sub
and
mov
ret
mov
imul
mov
jg
xchg
mov
and
bound
iret
mov
mov
lods
sub
shll
pop
rorl
mov
test
je
mov
shrl
push
or
push
mov
or
pcmpgtb
ret
cmp
sub
test
imul
fisttpll
int
scas
add
scas
test
adc
es
push
push
inc
sbb
in
inc
pop
rclb
roll
sub
or
add
pusha
sub
lret
loopne
push
jg
jecxz
cmp
js
push
inc
xchg
test
sbb
xor
shrl
xchg
xor
mov
cmp
ret
xor
ja
inc
push
gs
push
insb
fnstenv
push
push
cmpsl
mov
pop
shlb
sub
sbb
pop
lds
movsl
cmp
mov
dec
xor
sub
xor
adc
movsl
and
gs
jp
sub
sub
sbb
add
push
mov
pusha
push
imul
aam
lds
mov
inc
dec
in
push
test
rcll
mov
pop
fwait
pop
es
out
test
adc
cmp
add
out
pusha
test
je
jno
xor
pop
ret
gs
adc
jnp
push
xchg
adc
or
fstpt
lods
xchg
xchg
adc
mov
pop
data16
mov
fmul
xor
add
sbb
adc
push
sbb
mov
nop
mov
incb
cltd
push
das
jns
sbb
out
inc
dec
xor
add
jno
sbb
and
cmp
imul
xor
xorl
test
sub
or
call
out
imul
mov
push
std
ja
mull
adc
lret
movsl
enter
and
or
or
inc
adc
nop
push
add
xor
ljmp
pushf
dec
add
das
popf
inc
ss
out
sbb
push
and
jbe
lock
nop
mov
in
sti
pop
cmp
pop
sub
dec
dec
sbb
repnz
jns
and
mov
das
add
and
jle
adc
adc
jno
push
or
or
jno
in
sub
rclb
dec
and
lret
sub
mov
stos
xchg
repz
push
aam
pop
aaa
repnz
mov
xchg
inc
pop
and
clc
push
inc
jle
sub
xchg
or
or
inc
cmc
or
inc
leave
adcl
inc
outsl
es
jle
sub
cld
pushf
sbb
mov
or
cs
xor
dec
xor
jge
hlt
outsl
fmuls
repnz
push
sbb
xchg
pusha
jbe
cs
jno
movsb
dec
sbb
jmp
rcrb
test
sub
movsb
xchg
dec
in
mov
pop
adc
adc
push
cmp
push
mov
dec
mov
call
pusha
push
decl
or
push
mov
inc
push
add
clc
aaa
jecxz
jmp
pushl
ret
dec
mov
pusha
cs
mov
and
popf
mov
ret
call
sbb
lahf
out
sub
mov
adc
cmp
sti
das
dec
mov
addb
jns
and
ss
ja
add
bound
pusha
nop
sbb
push
cltd
xchg
mov
cwtl
jge
inc
pop
sub
inc
sub
add
xchg
lret
mov
and
pop
lret
xchg
mov
xor
and
or
jae
push
mov
and
das
cmp
es
lea
xchg
push
xor
mov
fldlg2
sub
xchg
arpl
add
mov
cmp
push
stos
cmp
mov
xchg
and
gs
push
sbb
and
pushf
push
xor
sbb
sbb
fldenv
xchg
cmovbe
and
xchg
lret
xor
dec
push
stc
lea
inc
dec
or
gs
out
inc
jmp
ja
dec
push
or
repnz
movsb
jnp
ret
and
in
lret
mov
dec
inc
shll
aaa
out
sbb
loopne
inc
mov
sarl
popa
and
sub
xchg
ret
std
jmp
xchg
pusha
lea
xor
or
in
jae
mov
and
jmp
cmovae
pop
ret
cmpsl
sbb
xchg
xchg
jno
sti
aad
aaa
cwtl
test
pusha
and
inc
sahf
push
add
or
je
xor
jno
and
dec
mov
repnz
push
sbb
popf
cmc
and
fwait
pusha
sub
aaa
imul
das
xchg
xor
aad
ret
lret
push
adc
fldenv
cwtl
lea
dec
inc
xchg
sub
hlt
daa
insb
in
jnp
inc
xchg
pop
test
inc
cmp
repz
dec
dec
push
cmp
arpl
bnd
popf
adcb
rolb
xchg
sub
aaa
push
aaa
shrb
sbb
and
gs
inc
rcll
xchg
lahf
inc
cmpsl
or
push
int3
test
in
sub
jae
cmpsl
adc
dec
sbb
mov
into
movsl
adc
int3
inc
cmp
jg
inc
dec
add
lret
jbe
adc
mov
sub
loop
scas
or
cmp
sbb
in
mov
ljmp
jb
je
test
bound
ljmp
sub
addr16
inc
out
cld
or
push
fucomp
jne
addr16
call
es
sbb
popf
add
cmc
test
sbb
xchg
mov
cld
lcall
add
in
mov
mov
adc
inc
js,pn
popf
fildll
das
and
pop
xor
rolb
cmp
or
sub
jmp
ret
add
cmp
sysexit
jg
mov
rcll
cmp
cmpsb
cwtl
pop
out
mov
cmp
or
and
jmp
fbstp
mov
pop
in
test
sbb
sbbb
inc
xchg
xchg
popa
and
sub
push
sahf
lret
lret
popa
adc
icebp
mov
sbb
and
push
aaa
bound
test
and
push
popf
cmp
sti
orb
add
imul
cmpsl
dec
stos
xchg
loope
dec
jmp
and
inc
sub
popa
out
cmc
cmp
imul
adc
xor
add
xor
adc
ss
leave
ret
pop
mov
jecxz
inc
xchg
scas
inc
sub
dec
and
push
sub
pusha
movsb
push
mov
cmp
outsb
sbb
pop
pop
jecxz
jecxz
xchg
jnp
or
and
xlat
in
and
dec
orb
xor
leave
xor
push
xor
test
push
add
xchg
ljmp
ror
shlb
push
dec
mov
fs
sbb
xchg
xchg
out
inc
cmp
xor
lock
int3
jb
mov
imulb
cmp
das
jbe
imul
cmc
xchg
adc
arpl
sub
lret
in
stc
fisttpl
jae
adc
push
adc
outsl
in
lea
adcb
inc
sbb
mov
sbb
mov
inc
mov
daa
stos
les
mov
fsts
lock
push
mov
je
jo
and
lods
adc
popf
add
jbe
cld
stc
dec
jo
pushf
popa
in
jb
loopne
es
sbb
xor
xor
pop
cwtl
jno
pop
cs
jbe
jl
xor
push
jp
xor
sub
jne
mov
inc
and
inc
gs
add
mov
andb
cmp
lea
fldt
imul
and
sbb
cmp
sti
imulb
aaa
push
loop
popa
lret
xchg
or
test
dec
sbb
repnz
dec
xchg
push
mov
sub
and
or
rclb
sub
add
dec
pop
int3
mov
call
sub
and
adc
imul
fisubl
aaa
mov
add
inc
xor
mov
xchg
sub
push
push
mov
xchg
adc
pushf
adc
testl
inc
movsb
shrl
sub
movsb
insb
testb
add
cmp
imul
xor
das
iret
bound
lahf
es
scas
popf
cmp
inc
fiaddl
mov
outsb
pop
cs
mov
jae
add
pop
cmc
push
xchg
dec
xor
das
frstor
outsl
inc
pusha
cmpsb
sbb
out
push
inc
cmc
or
pop
mov
jo
pop
pop
pusha
push
mov
and
dec
scas
jo
mov
jle
jne
and
inc
sub
fstpl
sub
or
sub
cmp
imul
push
xchg
xchg
or
dec
movsl
xor
test
icebp
outsb
or
andl
test
jecxz
lock
sbb
and
sub
and
xchg
mov
inc
xchg
outsl
adc
xchg
jbe
and
adc
sbb
adc
mov
sub
js
or
jecxz
test
cs
clc
xor
lret
popf
pop
inc
mov
insl
and
mov
pop
cmp
xchg
mov
mov
inc
cmp
xchg
jmp
in
ret
les
xor
std
add
rolb
scas
cmp
andl
xor
fldcw
insl
adc
movsb
repnz
sub
adc
shrb
movsl
jno
and
adcb
movsb
aad
inc
and
dec
cmp
addr16
inc
xlat
dec
xchg
ss
adc
xor
inc
clc
cmp
xor
cltd
add
pop
lock
in
mov
aas
mov
or
or
cwtl
jle
sub
sbb
add
inc
dec
pop
mov
adc
stos
test
jno
mov
dec
pop
mov
jl
rorb
pop
mov
cmpsl
xchg
addb
fucomp
loopne
ljmp
cld
xchg
cmp
fisttpl
xor
aam
inc
push
jns
shrd
adc
mov
inc
sbb
mov
clc
mov
mov
adc
inc
mov
pop
mov
or
and
in
fildll
ja
xor
popa
adc
and
add
subb
sbb
adc
ljmp
sbbl
pop
mov
xchg
fstp
xchg
jmp
or
xor
mov
and
insl
mov
je
movsb
xor
push
sbb
add
jbe
addr16
jp
minps
pushf
or
repz
aaa
js
mov
cmp
je
nop
mov
mov
push
sbb
jmp
mov
xor
or
and
mov
aaa
add
and
jmp
adc
xchg
in
jbe
add
fxam
sar
mov
lods
sbb
outsb
dec
xchg
inc
cltd
nop
lahf
xor
inc
sbb
popf
in
add
adc
pop
movsb
arpl
and
mov
enter
and
inc
out
mov
adc
mov
negb
jno
mov
and
mov
jne
and
cmpsb
mov
push
aaa
daa
adc
es
test
xchg
cmpsl
mov
and
jbe
and
movsl
movlps
jecxz
in
inc
xchg
push
out
push
jl
aaa
bound
sbb
cs
add
sbb
inc
xchg
jns
xor
sub
bndldx
push
clc
jns
sub
fsts
lret
sub
push
xchg
dec
xchg
outsl
icebp
in
or
sub
xchg
dec
mov
and
lret
pop
pop
lods
xchg
outsl
cmp
sub
sub
jecxz
push
loopne
push
or
mov
ror
push
loope
adc
cmp
dec
aaa
sahf
pop
ds
sbb
popf
movsl
pusha
stc
test
loope
scas
sbb
aad
and
mov
pop
int3
push
std
aas
mov
add
xchg
and
mov
sbb
adc
jae
jmp
xchg
push
mov
mov
icebp
cmpsb
push
aaa
push
movsb
xor
daa
sbb
xor
pop
mov
rclb
adc
fmull
cmpsl
fisubl
xor
mov
stos
pop
inc
dec
and
adc
xor
cmp
out
js
adc
mov
cmp
xchg
and
sbb
mov
sub
inc
sbb
cmp
out
add
lods
js
xchg
or
scas
inc
aas
jmp
loopne
sub
inc
addr16
lock
sbb
push
push
or
mov
pusha
aaa
pop
iret
das
mov
mov
enter
or
and
mov
loop
shrl
add
ss
xchg
adcl
movsl
cmc
inc
inc
in
shlb
xchg
mov
pop
jecxz
sbb
test
push
push
dec
mov
mov
and
pusha
or
or
sbb
fisttps
or
add
mov
sbb
sbb
shrl
pop
loopne
jmp
pop
sub
sub
cli
lahf
int3
flds
lds
and
loope
addr16
hlt
mov
test
add
or
inc
rorb
dec
stos
or
popf
or
jmp
jns
sti
cmpsb
rcrb
aad
test
xchg
inc
or
and
je
xlat
cmc
adc
xor
jmp
xor
sbb
adc
xchg
mov
add
repnz
dec
and
lret
imul
or
aas
cld
push
pop
cmp
shll
dec
xchg
cltd
repnz
mov
rcl
fidivl
lds
or
imul
in
test
cmp
xchg
push
in
inc
mov
dec
in
xor
mov
xor
add
repz
aam
sbb
and
sub
popa
rclb
mov
xor
mov
inc
sub
jmp
push
ljmp
inc
rcll
lock
dec
dec
xchg
and
movsl
sahf
lcall
jno
xor
add
jg
mov
xor
jmp
cmp
pop
cs
adc
or
mov
es
xlat
mov
sbb
jnp
mov
pop
sub
in
add
pop
popa
xor
outsl
movsb
dec
lods
inc
and
daa
pusha
pop
andb
add
mov
cmp
add
repnz
cmp
xor
or
xor
aas
cmp
and
dec
inc
outsl
and
mov
cmpsb
push
jns
pop
add
jae
push
pop
dec
jno
sbb
ret
cmp
xor
repz
push
cmp
adc
cs
pop
jbe
sub
hlt
std
mov
and
sbb
sbbb
ds
cmp
jecxz
stos
inc
jecxz
fstps
and
mov
push
sahf
add
pop
out
inc
fisubs
enter
jmp
adc
stc
sub
and
add
and
repz
dec
or
add
gs
incl
popf
daa
in
mov
dec
mov
leave
xchg
xchg
inc
xchg
mov
jo
into
pop
push
lea
call
dec
or
inc
out
mov
cltd
xchg
psrad
outsb
lea
sahf
jmp
jo
push
sub
add
pop
jns
int3
enter
cli
inc
pop
int3
es
cmp
iret
ds
imul
cmpsl
add
dec
outsb
sbb
repz
dec
in
ljmp
or
pop
xorb
fisttpl
notl
xor
in
sub
xor
cmpsb
js
shll
sarb
xchg
in
cmp
dec
sbb
xchg
sub
mov
pop
repnz
cmp
mov
scas
xor
inc
int3
scas
ret
outsl
dec
jns
es
push
sbb
or
add
scas
ja
sbb
adc
dec
clc
bound
inc
jb
adc
jne
dec
push
cs
sub
xchg
outsl
adc
rorb
fscale
mov
dec
ret
scas
and
popf
fs
fistl
push
sub
ficoml
mov
sub
add
outsl
mov
lods
sbb
sub
jp
and
adc
dec
icebp
out
push
cs
test
mov
dec
push
test
iret
mov
lea
es
scas
sti
cs
add
pop
add
push
mov
xchg
adc
and
push
xor
mov
xor
mov
sbb
push
cli
push
imul
inc
js
shll
or
sub
rorb
xchg
or
dec
or
test
cltd
out
and
mov
ret
fucomp
jmp
or
daa
jecxz
adc
hlt
mov
xor
adcb
test
adc
nop
movsb
ret
addb
out
and
scas
int3
push
xlat
pusha
add
pop
pop
lret
ss
adc
add
mov
cmp
or
push
icebp
or
xor
xor
jnp
sub
adc
fnstenv
mov
fwait
addr16
inc
outsb
js
cmp
jmp
adcb
add
xchg
sbb
push
cmp
es
out
jae
cmp
loopne
ja
and
push
or
leave
lds
clc
or
repnz
sub
pusha
filds
cmp
sbb
mov
and
movsb
adc
cmp
pop
sarb
and
and
push
cmpsl
dec
dec
cmp
insb
jo
aas
bound
and
test
add
lds
and
aam
arpl
or
shrb
mov
xchg
push
pop
or
pop
push
dec
popa
and
cli
xchg
xchg
negl
lcall
mov
fs
aad
in
pop
repnz
test
sub
jg
pop
pop
pop
subl
mov
sbb
lods
mov
xchg
cmp
sbb
dec
add
xlat
test
popa
popf
fwait
xor
adc
lea
cwtl
lds
aad
loopne
fnstsw
or
lods
add
rorb
mov
stc
adc
push
xor
icebp
cmpsl
dec
pop
jno
negl
insl
or
cmp
pop
pop
icebp
xchg
push
cwtl
push
adcl
sbb
xchg
mov
cmp
mov
and
mov
add
aam
inc
mov
mov
dec
mov
leave
add
mov
aam
fnstenv
sbb
imul
dec
testb
adc
pusha
rorb
and
push
sarb
add
jge
cmpsb
sbb
sub
push
inc
aaa
or
push
add
xor
movb
stos
jo
adc
or
jne
fucomp
cs
ja
in
xchg
push
xchg
pop
icebp
sbb
sbb
stos
negl
pop
push
mov
fnsave
push
push
std
in
lahf
inc
or
pop
rcrl
lea
insl
ljmp
pop
xchg
lods
or
lods
test
aad
scas
push
pop
and
mov
out
insl
loope
jno
cwtl
mov
sub
push
or
pop
das
and
pop
add
js
push
xchg
and
sub
adc
insl
and
mov
add
inc
lahf
mov
xchg
push
cmp
mov
outsl
xchg
outsb
mov
mov
or
and
cmp
jo
pop
inc
adc
adc
loope
or
pop
cmp
sbb
xor
inc
and
sub
sbb
punpcklwd
mov
lea
jge
pop
imul
es
in
mov
add
sub
inc
mov
xchg
cmp
lahf
sub
mov
and
iret
push
xlat
or
fsts
xchg
lds
lds
cmpsb
cwtl
jecxz
cmp
and
xchg
inc
out
dec
push
pop
fnstcw
shlb
imul
mov
les
jnp
sub
scas
mov
mov
dec
sbb
in
jae
jae
inc
int
es
xor
cmp
pop
movsl
insl
add
imul
cmp
cwtl
mov
xor
xor
pushf
xor
clc
inc
add
dec
cli
sbb
mov
mov
dec
push
push
icebp
in
mov
mov
add
and
xchg
or
shl
repz
cmc
mov
je
or
je
xor
mov
mov
xor
jp
out
pop
imul
mov
jl
push
dec
cmpl
pop
xchg
aaa
mov
pop
repnz
or
sti
in
mov
rcrb
aad
mov
pop
imul
and
shll
cmp
and
inc
bound
out
cwtl
test
xor
pop
pop
iret
addr16
pop
cwtl
in
jmp
inc
stos
and
inc
sbb
xor
inc
xchg
add
bound
cltd
xor
out
test
add
loopne
mov
jne
xchg
inc
sub
stc
shll
mov
loop
jl
or
jle
xor
je
cmp
dec
xor
adc
and
mov
mov
mov
fwait
push
jo
ss
dec
dec
jne
push
pop
in
sub
imul
push
movsl
sbb
xchg
loope
hlt
add
pop
pop
into
gs
mov
in
or
lret
fbstp
and
xchg
rcll
adc
nop
cwtl
in
out
insl
test
mov
push
test
xchg
fbstp
ret
push
dec
lahf
xor
stos
lea
in
scas
aad
popa
mov
mov
or
jmp
xor
xchg
inc
push
testb
shr
push
fists
rclb
mov
xor
jecxz
xor
dec
push
jg
add
arpl
cmp
addr16
cmp
or
dec
cmp
cmc
pusha
stos
adc
jne
dec
xchg
lret
inc
inc
bound
fdivl
sub
rclb
imul
dec
imul
and
pop
jb
es
jno
stos
and
xor
loope
xor
mov
adc
dec
cmp
mov
mov
dec
add
push
or
push
sub
mov
add
and
adc
lock
sub
pop
mov
cmp
and
xor
cmp
sub
ret
cmpb
arpl
inc
fimull
push
leave
sub
xchg
push
dec
aas
or
pop
fwait
mov
sub
cmp
outsl
es
call
sbbl
lea
int
cwtl
dec
xor
leave
and
xchg
icebp
add
mov
shr
mov
pop
repnz
jmp
lds
mov
icebp
and
movsl
dec
cs
sub
lcall
lea
lret
les
pop
fs
cwtl
insl
and
lahf
adc
xchg
sub
xchg
mov
mov
call
mov
dec
mov
ds
sub
mov
mov
sub
popa
sbbb
inc
or
add
xchg
inc
cmp
shrb
mov
ret
das
test
mov
add
or
and
test
mov
mov
test
mov
rol
mov
mov
jns
into
sub
adc
dec
jmp
or
imul
ret
add
stos
and
adc
gs
dec
or
dec
adc
dec
test
test
or
mov
add
inc
mov
jmp
mov
jmp
add
rorb
adc
fidivs
sti
pop
cmpb
sub
mov
roll
ret
inc
xchg
es
sbb
lods
push
dec
xor
ret
add
aam
stc
cmp
pushl
dec
mulb
inc
jbe
cwtl
test
test
jb
and
cmpsb
jge
xor
inc
mov
sub
mov
fcoml
gs
out
cs
and
push
fists
xchg
xchg
jmp
jne
lods
addb
movsl
xor
lock
mov
loopne
and
jno
ljmp
xor
clc
xchg
psrld
outsl
aad
pop
mov
imull
je
movsl
sub
ds
sub
incl
cwtl
sbb
and
pop
adc
jb
pop
aam
add
pop
pushf
fs
pusha
fs
pop
jge
push
sub
mov
xchg
cmp
stos
push
pusha
push
xor
pop
inc
imul
jmp
ror
dec
shrl
adc
inc
jnp
js
jo
ds
gs
iret
mov
jmp
dec
mov
pop
loope
mov
std
test
les
mov
sbb
jge
pop
sarb
jmp
je
lea
lds
xor
ficompl
and
outsb
fsubl
std
mov
sarb
jl
aaa
mov
out
jbe
push
into
xchg
incl
sbb
cmp
cmp
jecxz
sbb
aam
fiadds
push
call
in
push
xchg
pop
adc
call
insb
jp
cmp
test
jnp
xchg
incl
sbb
repz
andb
mov
lahf
fisttpl
mov
aad
loope
scas
lcall
data16
cltd
rcll
sahf
xchg
pop
ljmp
add
push
ror
mov
flds
sbb
arpl
adc
in
ljmp
pop
sbb
int3
push
out
xchg
movb
in
and
ljmp
mov
movsl
clc
cmp
cmpb
jge
cltd
xchg
call
scas
and
sbb
fsubl
xor
xor
sbb
dec
aas
dec
jg
push
and
sbb
call
dec
jns
lods
in
pop
insl
xor
mov
inc
fcomps
scas
dec
test
repz
jmp
xchg
jmp
and
add
adc
insb
loopne
lods
lock
incl
jns
jns
das
dec
out
xchg
fs
add
jg
in
in
or
cmp
xchg
aad
call
or
mov
es
mov
ljmp
xor
sbb
or
popf
push
out
mov
mov
dec
xchg
ljmp
pushl
mov
inc
mov
cwtl
andb
push
testb
dec
lods
or
xor
sbb
lcall
enter
insl
jecxz
mov
dec
jecxz
jno
stos
call
xchg
std
imul
mov
call
jne
lds
or
adc
sbbb
jle
and
pop
and
ljmp
ret
es
push
dec
xchg
ja
cld
out
cmp
testb
je
xchg
jns
int3
cmp
adc
pop
scas
push
push
xor
repz
jg
or
add
ja
push
iret
loop
cmp
push
add
lahf
jle
or
js
adcl
push
sub
dec
je
hlt
mov
cmp
movsl
mov
test
adc
pop
enter
pop
pop
jp
adc
aaa
fs
adc
lods
push
out
cmpsl
and
jne
test
filds
jp
jmp
jmp
and
lock
into
leave
inc
pop
frstor
enter
inc
jge
xor
in
aas
hlt
sbb
daa
xchg
les
ja
out
push
push
fistps
cmp
repz
mov
scas
add
push
out
xor
fstl
in
jg
mov
mov
sub
pop
lock
pop
push
nop
inc
xor
mov
adc
dec
inc
mov
data16
push
or
jge
movsl
adc
inc
shll
mov
jo
sbb
adc
sar
call
or
bound
cmc
mov
inc
std
mov
sarb
cmp
test
dec
dec
xchg
cmp
push
cmp
loopne
sbb
xor
hlt
mov
mov
dec
inc
lcall
aad
cmpsb
adc
adc
push
push
push
loop
vshufps
mov
add
jmp
pop
pop
sub
test
fiaddl
lds
cmp
cmp
cmpsl
dec
lcall
jo
mov
add
and
nop
and
push
fsubrs
push
stos
push
xor
or
mov
outsl
xchg
jmp
stc
sub
insb
hlt
dec
subl
cmpsl
in
out
clc
scas
rcll
es
jp
mov
nop
sbb
loopne
incl
insb
lds
and
xor
fildl
mov
mov
adc
push
push
cmp
ljmp
xchg
cmp
popf
push
scas
dec
gs
mov
pop
popf
pop
movsl
cltd
bound
decl
xchg
insb
mull
fwait
ret
cltd
rol
push
inc
enter
sub
popa
cld
mov
push
scas
call
mov
das
aam
jge
es
mov
push
cmc
dec
push
fs
enter
dec
call
clc
jmp
xchg
ljmp
add
test
jb
mov
xchg
mov
test
cmp
ljmp
int3
out
cltd
mov
add
mov
add
pop
shlb
push
insb
ljmp
nop
aas
cmp
and
mov
imull
ret
pop
repnz
and
xor
loopne
aam
pop
je
nop
and
ja
hlt
lock
jg
fcomip
add
dec
push
jno
jne
cmp
push
in
repz
pop
adc
mov
mov
mov
inc
popa
aas
add
cmp
mov
ss
and
jns
cs
inc
push
dec
das
stc
jns
mov
inc
xlat
push
inc
mov
out
and
sbb
nop
ja
mov
cmp
dec
divl
out
push
jecxz
xor
jnp
cmp
lock
dec
jg
mov
sub
ds
dec
daa
jb
jmp
pop
mov
enter
mov
adc
mov
add
sahf
jp
ss
push
push
test
push
stos
roll
mov
add
xchg
bound
dec
mov
xlat
cmp
pop
lcall
adc
aaa
dec
jb
jo
adc
adc
imul
dec
mov
cli
jl
iret
rolb
add
or
cld
lds
jno
mov
mov
sub
lcall
insl
inc
or
adc
or
or
mov
add
mov
decl
lock
imul
out
inc
lahf
inc
lea
add
fildll
sub
popf
sub
adc
loop
lret
lock
jbe
jg
call
fistps
xchg
cmpl
out
inc
dec
mov
mov
sub
lods
repz
enter
xor
in
add
mov
or
mulb
jecxz
and
mov
mov
xor
ret
push
add
clc
call
scas
push
mov
mull
js
popl
mov
cmpsb
add
sbb
call
into
sti
push
dec
pop
or
outsl
out
adc
lods
xor
loop
mov
loope
dec
mov
shll
xorb
dec
mov
mov
ds
ja
pop
andb
lcall
sbb
xlat
test
les
jmp
mov
push
test
cmp
fimull
jns
incl
pop
or
sub
push
add
jge
mov
ja
shrd
mov
cmp
aam
clc
cmp
dec
sarl
jge
push
repnz
or
out
pop
repnz
out
std
adc
fcmovnb
mov
mov
adcb
notb
pop
cmpsb
movsl
mov
or
mov
add
push
xchg
or
cmpsb
and
sbb
call
bound
es
and
test
ficoml
adc
testb
or
out
push
add
scas
mov
pop
inc
es
add
das
out
inc
adc
add
add
sub
add
out
xchg
in
dec
aaa
call
aas
xor
nop
xchg
add
mov
add
nop
add
xchg
loop
xor
push
inc
ficompl
sub
addl
add
nop
pop
xor
pushl
addl
or
addb
adc
sbb
push
addb
mov
adcl
push
mov
sub
xor
pop
sti
decl
xor
mov
in
unpckhps
adcb
dec
xorl
pushaw
sti
jg
and
add
sub
rorl
shlb
fs
or
push
mov
repnz
jge
scas
jnp
incl
shrb
rolb
dec
or
sbb
push
or
data16
jg,pt
add
mov
shll
or
dec
sub
std
cmp
fwait
cmpsb
cmp
inc
add
pop
repz
cld
cmp
fucom
jnp
dec
roll
lcall
dec
jl
mov
stos
dec
sub
xor
add
out
imul
dec
xor
sub
jb
mov
add
stc
cmp
push
xchg
mov
ja
cmp
popa
or
icebp
sbb
mov
movsb
mov
sbb
stos
rcrl
imul
sbb
pusha
scas
inc
cmpsl
or
mov
jnp
addr16
repz
test
imulb
mov
loopne
jecxz
or
inc
in
sahf
dec
repz
dec
arpl
repnz
cmpsl
repz
das
stos
int
adc
jg
dec
sub
pusha
jns
loopne
adc
cmc
mov
pop
rorl
mov
mov
inc
repz
pop
dec
cs
and
loopne
aaa
loopne
push
jnp
mov
xchg
imul
daa
dec
lahf
cmpsl
jge
rcr
mov
test
sarb
push
shlb
add
in
icebp
shrl
lea
inc
and
xor
cmpsl
loope
sti
out
jae
scas
mov
inc
loope
stc
in
loope
filds
cmp
addl
add
mov
cwtl
rcrl
loopne
inc
adc
in
xchg
mov
cmp
dec
inc
sar
xor
add
pusha
xchg
jg
jno
rcrl
dec
inc
mov
mov
sbb
pop
xor
stos
sbb
or
shl
lahf
dec
loope
pavgb
loope
div
popa
pusha
mov
aas
je
pop
int
and
sbb
das
icebp
cmp
xor
bswap
mov
push
or
fcomps
andb
fildll
and
loopne
mov
jg,pn
pusha
js
adc
add
jg
pop
dec
scas
sub
test
int
jl
movsl
push
xor
xor
xlat
mov
xor
add
movsl
xor
cld
fwait
mov
xor
xorl
jo
dec
mov
sub
aas
add
sbb
imul
mov
das
xor
push
adc
dec
int
idivb
xchg
add
dec
dec
repz
inc
call
adc
mov
add
sbb
in
adc
push
les
add
lock
imul
mov
xor
sbb
fdivs
add
sbb
xlat
mov
push
imul
dec
or
jecxz
incb
mov
xchg
lock
cmp
inc
xchg
jbe
test
mov
mov
jg
pop
shlb
jo
test
push
adc
xor
jge
ds
xor
sub
adcb
mov
stc
mov
and
sub
and
sub
loopne
std
pushl
mov
andb
sbbb
scas
icebp
add
mov
mov
push
inc
and
sub
imul
jg
fcmovnbe
rolb
es
loope
int
xlat
add
popa
mov
and
clc
add
dec
pop
hlt
loopne
ds
mov
and
lock
jo
xlat
shll
fadds
ljmp
xchg
pop
cltd
cmpsb
popa
and
ret
xor
mov
mov
ljmp
xchg
adc
bound
ret
shll
xchg
mov
mov
lods
int3
mov
icebp
add
and
push
bound
sbb
cmc
sub
loop
add
xor
mov
inc
add
lods
dec
adc
xchg
xchg
pop
add
add
jmp
xchg
xchg
xchg
xchg
add
lcall
addl
mov
add
mov
mov
mov
ljmp
mov
mov
movsl
movsb
cmpsl
add
lods
lods
scas
add
push
cmc
hlt
testl
cli
std
cld
incl
loope
jecxz
in
out
out
call
iret
or
ljmp
cmc
add
in
in
out
add
adc
adc
adc
sbb
sbb
lcall
add
add
inc
push
or
or
or
xor
xor
xor
pushl
add
cmp
cmp
cmp
and
and
and
sub
sub
sub
push
push
call
push
push
push
add
pop
pop
pop
pop
pop
pop
add
inc
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
outsl
push
mov
jo
jb
je
nop
js
jp
sti
lcall
jl
add
arpl
add
push
outsl
jle
decl
add
std
push
pmuludq
rcrb
pusha
fcmovu
negb
rol
ret
mov
dec
add
cld
add
scas
and
add
xchg
fsubrp
shl
dec
add
add
inc
lahf
add
sbb
outsl
outsb
outsb
xchg
pop
add
add
add
cmc
inc
mov
push
scas
sbb
aam
repz
cli
outsb
add
adc
sarl
sbb
and
addb
and
inc
imul
mov
cmp
push
nop
mov
mov
loopne
xor
adc
and
lea
in
imul
mov
adc
mov
mov
add
pop
add
invd
add
mov
xchg
mov
or
and
adc
mov
js
jo
and
out
scas
jne
enter
sub
decl
in
shlb
jp
mov
jg
dec
inc
add
adc
enter
stos
push
mov
sub
repz
mov
xchg
mov
adc
pop
sbb
mov
lcall
jp
insl
cmp
lret
stc
test
sarb
push
lcall
test
rep
jb
push
nop
push
jne
xor
add
sbb
xor
lcall
xchg
jmp
mov
push
roll
dec
xor
inc
popl
pushl
in
clc
dec
add
ljmp
xor
and
push
negb
fstps
add
sub
jo
ficomps
gs
in
jle
rclb
cs
jecxz
loop
or
mov
xor
lds
pop
sbb
mov
les
xchg
mov
inc
mov
pushf
sbb
pop
pop
adc
xchg
mov
lcall
mov
mov
fdivr
popf
lods
cli
add
in
jae
and
add
xor
push
mov
in
mov
aam
xchg
add
dec
or
dec
test
inc
push
adc
addl
push
jae
pop
mov
add
add
jbe
loop
fisubrs
xchg
add
mov
sbb
sub
mov
or
add
sub
or
ret
push
push
fistps
push
andb
out
xchg
mov
add
jno
mov
sub
xor
and
xor
sub
and
addb
or
daa
sbb
pop
sbb
mov
subb
in
cmpsb
xor
roll
dec
sti
cmp
and
clc
sub
fwait
mov
mov
popf
adc
imul
je
pop
gs
faddl
cmp
insl
xor
push
stos
jmp
repz
addb
in
daa
xor
add
sub
rcr
imul
mov
mov
nop
test
insb
imul
add
sbb
cmp
scas
pop
cmc
cmp
adcb
mov
lods
imul
inc
push
fsubr
push
xor
sub
subb
mov
aad
mov
rolb
rclb
jmp
fistpl
rorb
or
push
in
repz
sbb
mov
int3
aaa
inc
rorb
into
push
gs
int
jmp
add
shlb
or
pop
rolb
adc
shrb
loopne
adc
mov
inc
cmp
icebp
add
int
xor
imul
addb
add
stos
pop
test
lcall
faddp
sub
push
or
push
fnsave
xchg
shrb
stos
cwtl
shlb
nop
pusha
rolb
cwtl
aas
into
sbbb
shrl
test
shrb
sub
mov
shlb
mov
mov
outsb
fiadds
push
and
add
cld
stc
fildll
sbb
and
rcrl
cmp
fsubrs
cmc
fs
leave
loopne
aas
out
in
adc
pop
cmp
rolb
add
aam
rcll
mov
scas
cli
lahf
rcrb
loopne
cmp
insb
dec
add
sbb
xchg
pop
popl
push
sbb
jg
out
scas
cmp
mov
add
add
add
popa
fwait
cs
mov
xor
loopne
jp
pop
int
int
add
les
cmpsb
add
rclb
add
ret
test
pop
fdivl
stos
insl
push
aam
loop
daa
dec
jnp
mov
adc
cs
dec
loopne
pop
sbb
outsl
mov
mov
pop
in
or
lods
or
lcall
mov
outsl
outsb
mov
adc
loopne
jmp
lods
in
jns
out
and
int
loopne
shrl
cmpsb
mov
movsl
add
stc
mov
outsl
mov
jno
adc
imul
mov
cs
dec
sub
pop
dec
xlat
push
sbb
cmpsb
jns
loopne
sub
cmp
imul
cmp
add
adc
mov
insl
fidivl
ds
fsts
adc
dec
insb
iret
xor
mov
mov
add
sti
add
adc
dec
imul
rcll
loopne
stos
loopne
pop
aad
adc
gs
fstps
add
and
repnz
sarw
dec
sbb
fsubs
add
in
gs
mov
and
dec
jg
cmpb
add
push
mov
mov
or
fldt
xor
pop
stos
je
xor
pop
loopne
or
sbb
dec
and
loope
loopne
cmc
inc
mov
cmp
fldenv
push
adc
sub
xchg
loop
adc
sub
pop
popf
jp
mov
sbbl
mov
pop
mov
pop
sub
jmp
pop
add
cmpsl
loopne
stos
adc
stos
icebp
ds
mov
dec
loope
enter
shrb
std
imul
mov
jb
shl
dec
xor
sbb
and
jbe
xchg
cmp
mov
sbb
pusha
add
jg
lock
jnp
mov
stos
lea
stc
scas
imul
jne
scas
inc
add
es
pop
and
loopne
mov
dec
repz
test
add
dec
leave
pop
loopne,pt
xchg
push
pminub
fs
jge
cmpsl
mov
dec
outsb
add
dec
fimuls
inc
sahf
fwait
push
lahf
loopne
fldl
mov
rcrb
sbb
ret
mov
loopne
movsl
xchg
add
jecxz
push
loopne
nop
call
push
icebp
push
mov
mov
div
adc
fimuls
in
lock
sbb
jo
or
xchg
jo
sbb
adc
fdivl
stc
sahf
dec
jo
lock
repz
mov
add
jnp
xor
pushf
cld
int
jle
xor
lods
nop
aaa
nop
lret
nop
cmp
nop
cmp
cld
int
cmc
nop
cmp
in
nop
ds
ljmp
dec
int
cld
int
and
nop
and
scas
nop
daa
lret
nop
push
xchg
sub
cld
int
cld
nop
sub
nop
sub
dec
xchg
das
nop
out
nop
cs
int
in
nop
push
nop
lds
nop
test
push
xchg
nop
pop
nop
popf
int
cld
int
pop
mov
pop
lahf
nop
inc
nop
adcl
nop
nop
inc
rcll
call
dec
int
pause
jno
les
nop
stos
nop
ja
nop
jns
pushf
int
cld
int
jnp
nop
jge
mov
nop
adcb
cld
nop
arpl
nop
imul
nop
outsl
or
mov
repnz
outsb
scas
xchg
xor
lcall
xchg
ficoml
movsl
add
xchg
mov
adc
xchg
sub
or
mov
jo
cltd
inc
adc
pop
xor
lea
std
and
int
fildll
xchg
lcall
adc
cld
or
mov
xchg
add
xchg
mov
xor
stos
scas
xchg
adcl
nop
cmp
or
mov
xchg
xor
mov
js
notb
fisttpl
xchg
fisubrl
mov
xchg
xchg
mov
aaa
jg
nop
inc
xchg
fstl
xchg
jecxz
dec
stc
push
mov
sti
cmp
nop
nop
jbe
mov
cld
int
push
xchg
mov
arpl
lds
loop
adc
cmp
fstpt
add
mov
xor
mov
fwait
mov
mov
cmp
mov
cmp
mov
cmp
mov
aas
jbe
ds
push
mov
mov
xor
xchg
aaa
mov
xchg
cmp
daa
cmp
sub
mov
sub
mov
sub
mov
das
sub
push
mov
mov
push
push
mov
push
pop
mov
fwait
mov
mov
pop
pop
mov
pop
pop
mov
pop
xchg
inc
mov
xchg
dec
mov
xchg
dec
mov
mov
jno
inc
jo
inc
xchg
jae
inc
shlb
inc
xchg
out
out
mov
xchg
js
dec
jnp
dec
xchg
jp
dec
stc
out
jge
dec
xchg
jl
dec
jle
dec
xchg
bound
xchg
or
xchg
sub
sub
xchg
push
xchg
mov
push
out
mov
push
xchg
mov
push
mov
push
xchg
mov
push
mov
push
xchg
mov
pop
outsl
out
mov
xchg
pop
mov
xchg
pop
mov
outsl
out
xchg
pop
mov
xchg
inc
mov
xchg
inc
out
mov
xchg
inc
movsl
xchg
inc
xchg
movsb
xchg
inc
cmpsl
xchg
inc
xchg
cmpsb
xchg
dec
outsl
out
test
xchg
dec
stos
xchg
jno
rcll
xchg
out
out
xchg
jb
xchg
jne
aad
je
xchg
ja
xlat
xchg
jbe
out
xchg
jns
fsts
xchg
fistl
xchg
fstl
outsl
fcoml
jle
xchg
popa
xchg
rcll
aaa
jg
inc
xchg
xor
xchg
ret
rclb
les
repz
xchg
ss
xchg
cmp
xchg
cmp
repz
jg
xchg
cmp
xchg
xchg
aas
xchg
iret
xchg
ds
xchg
and
cs
xchg
xchg
and
and
stc
fwait
stos
adc
es
xchg
sub
xchg
stc
fwait
mov
xchg
sub
xchg
sub
xchg
das
xchg
lahf
xchg
cs
xchg
push
xchg
fists
xchg
mov
push
xchg
movsl
xchg
fwait
mov
xchg
push
xchg
aad
push
mov
xchg
pop
test
stc
pop
xchg
test
pop
stos
xchg
pop
xchg
stos
xchg
pop
lods
xchg
pop
xchg
lods
xchg
pop
mov
xchg
inc
xchg
scas
xchg
inc
ficoms
inc
rclb
fwait
mov
xchg
inc
xchg
cmpsl
xchg
inc
mov
xchg
dec
ficoml
dec
xchg
cmpsb
xchg
dec
fsts
dec
fcoms
dec
mov
xchg
jno
mov
jae
adcb
test
je
jp
mov
jbe
adcb
aaa
jg
aaa
mov
jp
xchg
jge
mov
repz
jg
xchg
mov
xchg
mov
xchg
mov
fbstp
aaa
jg
xchg
gs
mov
fs
addr16
data16
int
cld
int
push
xchg
xchg
mov
pop
aad
xchg
outsl
xchg
mov
outsb
mov
xor
les
xchg
sbb
xor
cmp
sbb
xchg
cmp
xchg
cmp
xchg
ds
test
outsl
cmp
xchg
and
xchg
and
pop
xchg
daa
xchg
out
out
xchg
es
xchg
sub
xchg
sub
out
pop
xchg
push
xchg
xchg
xchg
push
add
push
add
xchg
push
outsl
out
pop
xchg
push
xchg
push
xchg
pop
or
pop
or
out
xchg
pop
or
xchg
pop
setb
push
xchg
inc
add
outsl
xor
inc
xor
inc
mov
inc
xchg
inc
adc
xchg
dec
xchg
cmp
xchg
and
jae
xchg
jb
and
xchg
and
ja
xchg
stc
fwait
mov
xchg
jns
xchg
js
sub
xchg
sub
mov
sub
jg
xchg
jle
cs
popa
push
xchg
pusha
xchg
push
xchg
fwait
mov
xchg
bound
xchg
fs
push
xchg
addr16
xchg
int
mov
xchg
imul
xor
cltd
popf
mov
add
int
cld
mov
cltd
mov
xor
mov
cltd
xchg
mov
xor
cmp
cld
int
xor
mov
or
cmp
mov
cltd
xor
int
cmp
sub
icebp
mov
hlt
cld
int
cld
mov
cltd
mov
push
cltd
mov
cltd
xchg
mov
int
lods
mov
cltd
shlb
cltd
inc
mov
lock
cltd
mov
int
dec
adc
dec
mov
mov
mov
int
cld
mov
cltd
mov
addr16
add
cltd
xchg
mov
out
filds
mov
cltd
add
mov
cwtl
push
mov
add
outsl
out
popf
mov
cwtl
pushf
mov
fwait
mov
cwtl
mov
js
mov
cwtl
out
out
mov
xorl
lods
mov
out
sub
pusha
add
sub
gs
lea
mov
addr16
movsl
mov
mov
mov
fwait
add
mov
aaa
jg
aaa
xchg
mov
fwait
xchg
mov
xchg
mov
fwait
cltd
mov
cwtl
mov
repz
jg
fwait
fwait
mov
test
cmp
mov
jg,pt
aaa
jg
mov
fwait
ret
lds
and
mov
fwait
mov
out
mov
enter
mov
mov
adc
stc
sub
mov
mov
lret
fwait
int
push
mov
mov
int3
mov
fwait
iret
mov
xor
mov
pop
enter
push
fldt
cli
mov
fwait
es
fwait
pop
mov
fwait
adc
mov
add
fcmovnu
cld
fwait
lea
fwait
mov
fwait
mov
mov
divb
fwait
cmp
pop
dec
fwait
daa
mov
fwait
pop
adc
aas
mov
fwait
ja
out
jo
cmp
and
xchg
mov
outsl
jg
ja
jl
fwait
cmp
fwait
sub
mov
mov
jge
repnz
mov
fwait
hlt
popa
out
mov
mov
push
arpl
andb
mov
fwait
mov
addr16
cld
mov
fwait
shrl
fwait
shll
fwait
test
int
xchg
mov
fwait
mov
mov
cmp
stos
lcall
ja
push
lcall
push
lcall
lcall
lcall
negb
pop
inc
lcall
inc
lcall
lcall
insl
lcall
rcrb
xchg
popf
inc
xchg
jae
inc
adc
stc
fwait
mov
popf
inc
je
inc
xchg
ja
inc
jbe
inc
xchg
jns
dec
mov
popf
dec
xchg
jnp
dec
jp
dec
xchg
jge
dec
jl
dec
xchg
jg
fwait
mov
popf
dec
xchg
popa
popf
jno
popf
jo
arpl
fwait
mov
popf
jne
popf
je
addr16
ja
popf
jbe
imul
xchg
imul
xor
xchg
lahf
xor
int
xor
xchg
lahf
aaa
pushf
xchg
ss
xchg
lahf
cmp
cmp
int
fwait
cmp
cmp
pushf
lahf
aas
pushf
lahf
ds
int
cld
pushf
sahf
lahf
and
and
and
int
and
test
pushf
xchg
pushf
mov
int
mov
pushf
mov
pushf
mov
cld
int
cld
pushf
mov
pushf
mov
push
pushf
mov
pushf
mov
push
pushf
mov
cld
int
push
pushf
mov
push
pushf
mov
pushf
mov
pop
pushf
mov
pop
int
cld
int
mov
pop
pushf
mov
pop
pushf
mov
cld
pushf
mov
inc
pushf
mov
inc
pushf
mov
int
inc
pushf
movsb
lahf
inc
pushf
cmpsl
inc
pushf
cmpsb
lahf
dec
pushf
test
dec
int
cld
int
stos
dec
pushf
scas
lahf
dec
pushf
scas
jno
rcrl
cld
int
cld
pushf
rcrl
pushf
aad
je
aam
pushf
xlat
lahf
jbe
int
jns
fstps
pushf
fistpl
pushf
fstpl
int
fsubl
rcrl
ret
lahf
bound
cld
pushf
lds
pushf
lahf
pushfw
imul
sbb
lahf
mov
mov
lahf
movsl
mov
mov
cmpsl
mov
lahf
test
cmp
fwait
mov
lahf
lods
mov
lahf
scas
mov
lahf
rcrl
lahf
shlb
lahf
shlb
lahf
aam
fwait
mov
xlat
mov
lahf
fldenv
lahf
lahf
fisubl
lahf
fsubl
lahf
fisubs
mov
shlb
ret
lahf
lds
mov
mov
lahf
leave
mov
lahf
lret
mov
lahf
lret
lahf
int
lahf
int3
mov
lahf
into
mov
mov
lock
lahf
repnz
inc
jg
aaa
repz
cmp
cmp
lahf
cmp
dec
lahf
aas
jne
repz
dec
lahf
orb
dec
lahf
and
jg
aaa
sbb
and
lahf
and
jae
daa
sbbb
repz
sub
lahf
sub
lahf
sub
jg
sub
jnp
das
sbbb
sbbb
xorb
repz
lahf
cld
mov
lahf
jmp
mov
aaa
jg
gs
adc
addr16
sbb
lahf
pop
mov
mov
push
sub
outsb
mov
cmpb
sub
add
rolb
insl
fistpl
and
xor
inc
mov
push
aaa
mov
mov
mov
cmp
mov
cmp
inc
fldt
outsb
push
mov
push
cwtl
loopne
stos
lcall
jmp
mov
scas
inc
mov
add
cmp
sbb
cmpsb
jns
inc
jmp
shll
lcall
mov
sarb
add
mov
push
leave
mov
or
pop
mov
sbb
pop
xchg
push
imul
rolb
jecxz
sarl
mov
mov
dec
sarl
mov
mov
repz
mov
sbb
xchg
out
stos
push
mov
or
and
lock
imul
inc
push
pushf
jle
add
xor
cli
cmp
dec
jnp
xor
ds
loopne
and
and
cmp
xchg
and
sahf
cmc
and
daa
mull
imul
imulb
int
sub
clc
repnz
je
dec
das
push
fisttpl
push
or
push
test
add
push
push
out
xor
push
negb
out
jmp
dec
call
pop
imul
cmpsb
imul
imul
cmpsb
imul
inc
push
jo
jae
dec
imul
xor
and
add
lock
or
mov
xchg
int
int3
xchg
cmp
into
fwait
jmp
adc
add
adc
add
mov
or
add
jmp
clc
dec
data16
push
lret
bound
mov
stos
lret
xchg
jae
int
jmp
add
dec
add
insb
nop
xchg
jns
jg
jbe
sahf
hlt
pop
or
mov
sbb
mov
add
cli
cwtl
std
or
stos
ja
lea
push
mov
and
push
sbb
iret
or
mov
or
add
shl
mov
dec
sbb
add
sahf
iret
fidivs
jae
into
cld
mov
mov
mov
dec
push
cmp
mov
sub
sbb
mov
sub
push
decl
mov
xchg
sbb
push
or
or
faddl
mov
add
jmp
pop
add
xor
jne
xchg
add
mov
fisttps
repnz
ret
ficomps
mov
imul
xor
pushf
lcall
cs
clc
xor
fimull
mov
das
cld
test
shll
repnz
xchg
ljmp
mov
jmp
test
clc
pop
cld
mov
fldt
pushf
imul
add
mov
inc
cmc
pop
jmp
outsl
pop
fidivrs
sar
push
jg
js
pop
icebp
movsl
jnp
xchg
lock
lret
dec
test
cmpsl
mov
aam
aaa
imul
test
sbb
add
push
mov
push
filds
add
std
mov
xlat
fst
out
scas
scas
aam
pop
aaa
cmp
jnp
xor
fbstp
xchg
dec
adc
je
push
mov
cmp
push
enter
cmc
aaa
cld
dec
push
xchg
add
inc
adc
cwtl
aaa
int3
daa
jge
lret
call
mov
das
insb
add
out
pushl
jmp
stc
stos
andl
ret
mov
add
mov
ja
lcall
ds
je
mov
lea
jmp
notb
std
jmp
mov
fnstcw
js
test
xor
sbb
iret
insl
or
xchg
add
into
out
add
iret
daa
insb
sub
add
int3
pop
enter
gs
cld
aaa
lcall
add
lds
sub
add
inc
dec
jmp
fbstp
cmc
incl
mov
das
clc
jl
icebp
sbb
rol
lcall
out
cli
push
mov
arpl
push
bound
sbb
ds
mov
add
movsl
inc
movsb
in
movsb
jle
subl
sub
decl
push
out
pop
push
add
je
movsl
adc
add
sub
sbb
pushl
add
and
subw
mov
in
sti
sbb
mov
mov
das
sahf
out
test
mov
adc
out
imul
add
repnz
shrl
inc
in
mov
dec
mov
imul
test
or
add
lcall
jp
pop
enter
popf
pop
xlat
popf
insl
lock
mov
test
out
les
jg
mov
ss
call
inc
sar
cmp
jp
xchg
mov
xor
sbb
rcrl
into
add
xor
int3
nop
ds
pop
lock
cmp
mov
arpl
iret
cmp
add
mov
std
sbb
sti
and
int
push
inc
ja
inc
xor
jg
fdivl
testb
jge
xor
decl
mov
cltd
jmp
out
cmp
mov
imul
jmp
dec
pushf
je
out
jae
mov
or
test
out
xchg
fcmovnbe
ljmp
add
push
adc
pop
add
imul
ss
cmc
add
jo
out
divl
pop
push
je
xlat
pop
imul
xchg
xchg
das
or
add
or
mov
mov
fsubrl
negb
sbb
lcall
lcall
sbb
add
imul
push
icebp
jnp
xchg
int3
push
test
je
loopne
cltd
mov
aaa
or
dec
nop
rorb
add
jo
std
rcrb
adc
stos
movsb
jnp
add
add
mov
clc
out
adc
aaa
mov
in
pop
stc
and
or
mov
ret
add
mov
jp
out
shlb
jmp
pop
test
jb
in
inc
sarb
loopne
mov
enter
lock
pop
testb
add
mov
push
mov
stos
hlt
add
fdivrp
push
mov
bound
sbb
in
fistps
mov
cwtl
loop
out
movsl
shll
repnz
loop
bound
stos
adc
outsb
add
add
xchg
sahf
jbe
hlt
jecxz
jmp
mov
shl
hlt
lock
and
aam
out
data16
cld
cs
shrl
das
repnz
and
call
pushf
fwait
data16
pop
or
mov
xchg
mov
clc
divl
cmp
mov
decb
in
mov
adc
lock
xor
hlt
repnz
push
hlt
mov
div
dec
mov
arpl
mov
xor
outsb
inc
insb
repnz
add
or
push
sbb
loope
push
mov
popa
cmpsb
add
popa
inc
ret
ljmp
mov
pop
lock
or
mov
add
aam
push
sbb
sahf
in
push
lock
stos
mov
sub
add
jecxz
lcall
adc
mov
in
clc
inc
rorb
add
notb
orl
mov
int3
fisubrs
lcall
cmpsb
mov
bnd
cld
outsl
push
mov
jo
xor
clc
xor
xchg
das
mov
clc
sbb
adc
testl
fdivrs
add
add
call
and
add
mov
fcomps
nop
or
mov
add
cmp
gs
xor
jno
or
rcr
arpl
orb
aaa
fdivrl
jle
pusha
cmc
cmc
xlat
clc
inc
adcl
std
int3
stc
shlb
add
sbb
loopne
clc
or
inc
and
loopne
pusha
daa
push
daa
jmp
hlt
stos
dec
in
adc
or
add
std
cmp
jbe
jo
jno
rcl
stos
jge
repz
adc
jne
add
dec
rorl
inc
pop
pop
scas
adc
sbb
sub
adc
and
repnz
inc
mov
incl
loope
mov
rcl
lock
repnz
add
jp
mov
add
mov
adc
xor
xor
xor
add
mov
push
xchg
dec
xchg
les
mov
dec
movsl
cwtl
fbstp
ret
or
into
fcomip
xor
nop
jecxz
in
lods
add
cmc
pusha
push
clc
in
lar
jecxz
sub
adc
add
sub
mov
fisttpll
cwtl
stc
in
loope
mov
ffreep
ret
test
call
loop
aaa
cld
pop
hlt
push
orb
mov
xor
jbe
lds
loope
pushf
jl
in
cld
cli
stos
mov
cwtl
clc
jmp
popa
cli
add
aas
mov
ss
jmp
divl
shll
fdivrp
notb
sbb
jl
in
cli
hlt
cmc
push
push
add
mov
mov
call
imull
mov
mov
push
add
cmp
outsl
lods
call
clc
mov
add
mov
inc
fisubl
lret
lds
imul
fdiv
mov
mov
ret
in
call
rcrb
addb
addb
mov
test
pop
clc
mov
mov
cld
ret
adc
ds
lock
ficompl
jecxz
loop
div
sarl
cmpsb
push
stc
xor
cmc
cs
mov
mov
pop
div
outsl
pop
or
inc
add
inc
dec
imul
cmpsl
incl
cld
inc
inc
inc
arpl
sahf
sbb
or
or
decl
sub
or
sub
cmp
xor
xor
cmp
ds
xor
xor
push
mov
lods
mov
divl
mov
jle
out
jo
xchg
adcb
adc
shl
div
fdivr
repnz
jecxz
mov
jne
dec
push
dec
inc
pop
dec
pop
dec
jg
jg
cld
pop
pop
pop
pop
pop
inc
fwait
cltd
popf
mov
orl
or
adc
lahf
xchg
xchg
lahf
xlat
test
mov
sub
jecxz
stos
mov
mov
div
cld
mul
stos
mov
sub
in
in
scas
hlt
out
movsb
loop
loopne
and
out
clc
lret
testb
mov
ret
mov
pop
xor
xor
aas
xor
cmp
sbb
lahf
dec
sti
ljmp
ja
imul
pop
inc
dec
pop
pop
dec
pop
dec
pop
dec
push
imul
and
jns
fs
xor
dec
push
popa
pop
pop
dec
inc
pop
js
jl
scas
add
dec
fimull
stos
mov
test
repz
mov
cld
test
mul
in
movsb
cli
aad
into
scas
stc
sar
or
cmpsl
icebp
inc
mov
fistpll
mov
cld
out
jle
aaa
fs
scas
mov
stos
hlt
mov
inc
cld
ljmp
hlt
hlt
mov
out
dec
ljmp
divl
lea
fs
outsl
gs
rcl
int3
lret
xchg
mov
into
xchg
mov
lcall
sarl
pushf
out
popf
add
cwtl
fwait
lahf
enter
aad
orl
clc
decl
icebp
mov
ljmp
mov
call
mov
jmp
ljmp
test
rcll
fwait
lahf
dec
push
out
clc
call
push
dec
push
gs
pop
pop
pop
pop
inc
pop
cmp
and
sub
sub
and
adc
and
sbb
add
adc
sub
sub
call
mov
and
das
es
outsb
add
adc
add
pop
add
adc
adc
jmp
or
or
add
adc
xor
add
and
cmp
sub
das
sbb
cs
cmp
add
xor
aas
xor
and
inc
add
sbb
mov
add
jnp
jno
jae
jle
jg
push
push
adc
push
adc
ljmp
fcmovne
lret
int3
sar
adc
orl
std
test
popf
fadd
xlat
sarl
pushl
sub
push
into
lret
lods
add
ja
adc
adc
sub
or
dec
add
xchg
or
pop
dec
add
inc
inc
dec
dec
or
add
pop
inc
inc
push
cld
call
sbb
push
push
push
pop
push
push
adc
inc
adc
push
es
or
add
sar
incl
inc
adc
dec
sbb
sbb
dec
add
adc
pop
push
push
sbb
push
sbb
incl
das
insb
cmp
idiv
clc
mov
std
hlt
lock
out
lock
ljmp
jmp
es
xchg
add
rcl
push
out
fucomip
fxch
enter
push
rol
ret
call
push
in
jmp
jge
jp
jl
popa
jne
test
fwait
xchg
mov
jg
call
lcall
addb
fmulp
iret
lret
lret
incl
sbb
rcr
shl
fcmovu
lret
test
int
into
in
jg
fcmovbe
fcomp
xlat
ffreep
fdiv
lret
pop
dec
pop
jno
pop
pop
inc
dec
dec
inc
fwait
decl
push
jp
pop
dec
add
pop
or
xchg
add
xchg
adc
add
adc
or
xchg
or
outsl
call
inc
push
js
push
dec
je
inc
inc
dec
inc
dec
dec
pop
dec
fs
pop
dec
inc
inc
push
ljmp
sar
pop
pop
inc
dec
inc
rcl
rcl
rol
mov
lret
into
mov
xchg
xchg
pushf
lahf
nop
xchg
mov
mov
ljmp
cmpsl
lods
scas
mov
mov
faddl
sub
inc
cmp
es
cmpsl
mov
jecxz
mov
mov
cmpsl
mov
cmc
out
repz
sar
jmp
pushl
in
fcomp
int
rcl
rorl
sbb
or
pop
xor
add
incl
mov
mov
mov
mov
cmpsb
cmpsb
test
lock
fstp
fcmovne
lret
int3
ret
std
aad
aam
stos
mov
mov
mov
int
lods
mov
mov
mov
jb
mov
jg
mov
and
adc
and
and
bound
mov
push
push
inc
push
out
in
cli
jmp
imul
add
cmp
cmp
cmp
add
nop
ljmp
hlt
cmc
mov
std
jmp
test
cli
out
in
std
mov
mov
data16
jo
fists
in
fistpll
cs
pop
fsub
in
dec
fstp
pop
shlb
cli
repnz
insb
divb
push
sub
fildll
sbb
pop
xor
xchg
add
pop
sbb
push
dec
push
aas
adc
sub
xor
cmp
pop
push
call
outsl
pop
cwtl
mov
cld
mov
lea
xchg
subb
cld
in
fcomi
call
hlt
out
ret
repnz
in
mov
mov
in
mov
dec
int
ret
xlat
mov
iret
add
rol
ret
ror
icebp
mov
mov
incl
cld
das
and
cmp
jnp
jns
jge
dec
jb
imul
mov
loop
ljmp
add
fistl
aas
stos
mov
push
add
sti
adc
ljmp
ss
stc
in
std
stc
out
call
rol
shl
xlat
jg
cli
or
enter
fld
dec
repnz
test
int
dec
int
ror
fstps
popa
cmp
jg
jge
jp
push
scas
cmpsl
mov
in
lea
mov
rorb
call
inc
or
or
data16
pusha
arpl
sub
in
adc
clc
in
cld
clc
mov
fcompl
fists
sub
mov
inc
pop
in
jg
push
pop
push
xchg
mov
orb
dec
push
pop
push
pop
jl
mov
ret
mov
idivb
push
mov
mov
lods
mov
mov
movsl
mov
nop
cmp
incl
mov
inc
xor
js
push
adc
out
sub
test
mov
mov
mov
lea
mov
test
mov
mov
mov
xorb
cmp
sub
cmp
adc
or
push
adc
push
sub
sbbb
jle
sbb
sbb
pop
das
sbb
orl
orb
fisttpll
ret
test
sbb
scas
push
adc
cmp
aas
add
push
call
push
add
lods
in
mov
stos
scas
in
push
mov
lcall
mov
xchg
lea
mov
mov
icebp
mul
add
fcmove
cmp
lret
lahf
addr16
jle
mov
pop
sub
xor
xor
das
daa
and
and
cs
decl
sub
daa
sub
sub
outsl
arpl
pusha
push
jno
mov
adc
add
in
push
out
xor
into
rol
push
jge
gs
fisttps
aas
js
jle
jne
movsb
mov
test
movsb
cmpsl
scas
inc
pushf
xchg
mov
adcl
sahf
xchg
scas
mov
stos
push
sar
in
movsl
cmpsb
movsl
test
stos
test
xor
out
scas
mov
pop
mov
dec
jg
fmulp
out
adc
or
pop
inc
add
and
ja
loope
and
and
sub
stc
loope
stc
ljmp
loopne
inc
dec
pop
inc
insl
jo
mov
sub
fs
int3
fcomp
rcl
jmp
xchg
cmp
loop
cmc
loop
in
jmp
out
icebp
out
jns
enter
mov
and
sti
pcmpgtb
arpl
push
aad
int3
lret
ret
aad
out
jmp
stos
push
popa
stos
add
push
test
fmulp
push
nop
iret
jmp
in
xchg
loop
mov
stos
mov
div
lods
repz
movsb
lea
decl
or
push
push
pop
sub
push
and
sbb
hlt
out
mov
mov
jmp
mov
push
call
das
sub
or
inc
sub
jmp
out
pop
sub
jle
daa
aaa
daa
jbe
or
decl
mov
inc
adc
xchg
pop
cmp
sub
add
sbb
das
inc
adc
cmpsb
or
mov
and
das
cmp
cmpsl
lock
div
fcmovb
ljmp
sbb
sbb
fcmovu
lcall
stc
bound
imul
jb
jo
pop
pop
add
cmp
cmp
push
pushl
xor
adc
sbb
pop
or
sbb
adc
pop
loopne
loopne
ror
fimull
les
sar
lock
fcom
test
rcl
fadd
in
loope
aas
clc
add
sti
in
in
or
daa
ds
and
and
das
shrb
lock
not
icebp
ljmp
cmpsb
cltd
cmpsb
mov
jmp
mov
cmp
pop
or
sbb
dec
add
or
sbb
bswap
clc
imul
push
icebp
fnstsw
inc
cli
out
mov
ss
stos
scas
mov
adc
dec
dec
mov
mov
mov
loop
push
xchg
repnz
xchg
xchg
xchg
scas
bound
test
jecxz
test
fsubrs
mov
mov
mov
data16
ror
aam
ret
popf
lret
fcmovnbe
rcl
rol
fnclex
outsl
fsubs
jg
cs
xor
aaa
jge
sub
and
cmp
hlt
out
sub
jmp
cmpsl
int
cli
stc
jmp
hlt
adc
cld
repz
in
incl
push
pop
bound
jl
sub
insl
imul
outsl
jne
je
imul
les
lcall
pop
pop
jno
push
dec
pop
dec
dec
jp
push
inc
inc
push
dec
dec
dec
or
inc
add
ljmp
push
addr16
xor
dec
cmp
jl
pop
rcl
rcrb
pop
outsl
adcb
push
std
push
mov
jne
cmpsb
fs
outsb
jp
daa
mov
mov
aaa
clc
push
dec
inc
push
push
inc
push
inc
push
inc
loopne
addr16
jae
and
dec
add
push
push
push
dec
push
add
push
testl
cmp
aas
sub
jns
push
lahf
cmp
fistpll
push
aad
rol
ffreep
ret
xchg
filds
dec
gs
insl
data16
cld
mov
push
adc
js
inc
jnp
push
mov
lea
dec
inc
push
punpcklwd
dec
pop
inc
dec
pop
adc
pop
es
pop
push
dec
adc
pop
push
push
gs
or
push
fcomip
stos
cs
dec
mov
negl
jg
sub
hlt
mov
adc
mov
pop
insb
and
adc
lock
fs
addr16
and
incl
and
mov
movsb
xchg
mov
mov
mov
mov
jmp
lods
mov
mov
rol
adc
inc
push
aaa
xor
decl
add
push
add
out
and
or
adc
jmp
sbb
pop
sbb
or
or
sub
adc
sub
icebp
add
sub
add
cmp
cmpsb
incl
add
xor
push
das
idiv
clc
lock
repnz
cli
jmp
push
cmp
ss
mov
sbb
lods
xor
sub
outsb
or
cmp
sbb
adc
add
or
dec
inc
inc
dec
inc
inc
jne
out
cmp
andb
dec
inc
push
push
inc
push
inc
je
inc
dec
ljmp
add
push
pop
inc
cwtl
sbbb
inc
push
pop
dec
sbb
or
push
outsl
jae
jno
push
outsb
outsb
jnp
arpl
dec
addr16
jecxz
add
hlt
int
push
rcr
enter
fucomp
sti
fsubrl
fisttpll
in
sti
inc
fmulp
fcmove
ret
roll
in
clc
out
xlat
clc
icebp
stc
out
test
fisttps
push
pop
adc
pop
dec
jl
sub
call
pop
pop
add
pop
jo
jbe
cmp
and
push
push
fs
jb
popa
mov
sub
gs
push
pop
out
pop
xchg
add
push
or
sbb
push
outsl
cli
mov
outsl
incb
idivb
mov
cmpsl
mov
movsl
movsb
mov
rcrl
cmpsl
stos
lods
test
movsb
add
xchg
mov
fcmovnbe
lds
inc
js
sti
add
mov
or
xchg
nop
mov
or
idiv
stc
jmp
stc
std
out
hlt
mov
xlat
mov
hlt
cmpsb
es
pushl
jmp
loope
add
ficoml
rol
jmp
rcl
cltd
add
icebp
sub
or
add
mov
ror
call
out
cmp
xor
cmp
pop
std
ffreep
aas
das
xor
jo
jo
add
and
add
decl
pop
sbb
sbb
push
pop
sbb
or
pop
add
fcomip
pop
lock
add
or
fdivl
imul
cmpb
jnp
xor
xor
jae
arpl
pop
orb
mov
jl
or
pop
pop
dec
xchg
dec
inc
pop
mov
inc
decl
aaa
mov
jb
inc
pop
dec
add
inc
xchg
setno
mov
outsl
clc
mov
sbb
mov
test
out
mov
add
aaa
jmp
mov
mov
lahf
cltd
xchg
lcall
xchg
pushf
test
add
test
mov
xchg
jg
adc
mov
mov
dec
inc
dec
or
inc
push
inc
sub
adc
adc
add
lret
aad
aad
hlt
lcall
add
xchg
into
cmpsb
call
push
iret
int
ret
js
lret
iret
sar
add
cli
dec
dec
dec
cmp
add
jl
jge
ja
arpl
jg
push
mov
insb
outsl
gs
imul
mov
add
jo
je
out
jno
jnp
mov
cmc
outsl
insl
push
dec
and
jle
or
xor
cs
pop
sbb
add
add
inc
push
inc
inc
dec
push
cld
stos
sbb
xor
push
das
call
push
push
and
aaa
sbb
adc
and
or
push
dec
or
mov
xchg
test
sub
push
dec
push
decl
jb
movsb
test
lret
and
ret
xchg
jmp
cmp
add
aam
enter
pop
fxch
xchg
mov
test
sub
dec
inc
inc
dec
cmpsb
dec
inc
add
jno
imul
je
pop
rorb
jns
inc
popa
adc
pop
cld
inc
push
adc
add
leave
fists
mov
rol
xchg
sahf
lret
mov
mov
aam
rcl
mov
in
mov
subl
jge
add
cmp
outsl
rclb
jl
and
ljmp
xchg
les
ret
mov
leave
inc
push
out
lahf
incl
stos
call
stos
jecxz
cwtl
push
cld
mov
mov
inc
fcmovb
fwait
nop
pop
jg
mov
and
fstp
rcl
fldl2e
xchg
add
test
cli
or
sub
imul
inc
mov
loop
cs
add
xor
inc
roll
int
andb
mov
fcmovb
xchg
ja
jg
out
cwtl
mov
shll
xchg
sahf
pshufw
xchg
fdivs
cli
loop
loopne
cmp
sub
adc
es
mov
add
cmp
pop
sbb
jne
jo
outsl
and
cs
call
sub
add
inc
push
clc
or
push
push
push
and
sub
incl
inc
mov
lock
mov
add
lods
cmpsl
add
pop
mov
div
clc
adc
xchg
cwtl
pusha
ret
das
les
test
lret
mov
pop
dec
xlat
cwtl
xchg
xchg
adc
mov
mov
lret
mov
and
cmc
clc
loope
fisttps
xor
into
xchg
add
ret
add
loopne
lods
ljmp
movb
in
cmc
incb
inc
add
stos
jg
roll
sar
in
lock
jecxz
cld
fadd
fcoml
std
incl
shll
clc
loop
incb
div
inc
or
push
inc
hlt
inc
add
mov
hlt
jecxz
ret
clc
jmp
jbe
gs
ret
orl
adc
loopne
cld
data16
std
hlt
imul
arpl
inc
cmp
fbld
std
repz
pusha
add
sbb
rol
loopne
jecxz
fldt
sub
loope
clc
xor
and
or
and
pusha
push
add
aad
out
repnz
adc
sbb
pusha
pop
ret
rclb
rorl
fdivp
sti
mov
loopne
sar
mov
aad
test
dec
mov
and
pusha
dec
pop
in
adc
ret
or
add
xorb
rolb
sbb
xor
mov
pop
sbb
mov
sbb
cmp
mov
mov
repnz
cmc
or
sbb
sbb
in
lock
test
jecxz
call
push
fldt
and
stc
andb
test
fadds
clc
ljmp
int3
push
sub
in
call
jecxz
rcrb
cmp
sub
aas
add
in
inc
add
push
cmc
jecxz
or
aad
inc
popa
add
inc
add
lock
mov
lock
or
shrb
jg
fwait
andl
hlt
inc
rol
lds
push
cli
hlt
lcall
pop
icebp
cmpb
adc
test
popa
add
jecxz
bound
add
pop
or
addb
sub
lret
and
push
jecxz
xlat
insb
ret
mov
dec
inc
fwait
add
lods
add
pop
out
inc
adc
mov
leave
push
jmp
cmp
mov
insb
fiaddl
test
faddl
add
adc
test
shrl
pusha
xor
add
add
mov
sbb
mov
aad
aaa
sub
decb
call
repnz
sub
add
mov
fistl
mov
or
ds
std
jmp
or
and
hlt
add
add
loopne
popa
or
and
pop
mov
or
add
mov
mov
adc
push
stc
pusha
or
cmc
pusha
or
mov
mov
add
sbb
rclb
outsl
mov
test
xchg
in
add
sbb
xchg
in
cld
divb
fcoml
mov
mov
rcl
stos
pop
loop
push
push
sahf
daa
push
shrl
pop
pusha
mov
ret
jns
push
cmpl
sahf
es
cltd
ret
sti
pushl
addl
lahf
outsb
sahf
ds
sahf
add
popa
sbb
push
jnp
inc
sbb
outsb
inc
daa
aam
mull
out
dec
xchg
arpl
fwait
outsl
fistl
inc
pop
sbb
add
stos
pop
sahf
push
push
or
cld
incl
pop
mov
into
sbb
add
xchg
dec
adc
in
subl
sbb
sbb
les
push
adc
outsb
pushf
or
rclb
adc
xchg
mov
stos
insb
jecxz
outsb
jle
mov
xor
subb
inc
xorl
sbbb
insb
shrb
outsl
pop
mov
mov
add
test
add
push
xchg
ficomps
cld
mov
decl
push
popf
popa
push
adc
ret
mov
inc
mov
mov
add
add
in
jne
cmpsl
mov
test
test
cltd
fwait
lods
loopne
dec
xchg
add
pop
add
bound
sar
int
push
sbb
sbb
outsb
stos
fmull
mov
loopne
inc
sbb
push
aam
jno
insb
popa
pop
test
lret
sbb
jge
in
gs
adc
pop
stos
in
sbb
lock
in
lahf
adc
jp
stos
in
stos
in
arpl
stos
popa
in
fildll
jo
or
xchg
jo
adc
lcall
sbb
in
xchg
roll
jp
pop
push
sbb
nop
sahf
xlat
mov
subl
mov
rcrl
push
sbb
mov
ds
mov
sub
dec
add
in
lcall
or
and
fdivl
in
inc
sbb
jno
in
lea
or
or
call
mov
jle
sbb
dec
roll
sbb
popf
pop
sbb
fldt
sbb
inc
imul
adc
mov
insb
ret
pop
xchg
dec
sbb
cmpsb
dec
adc
mov
mov
gs
inc
stos
push
in
rorb
movsb
jno
push
inc
pusha
adc
mov
loopne
push
jp
lock
call
push
test
mov
cltd
sbb
mov
mov
fwait
or
in
ja
lock
gs
fdivl
and
ja
mov
sbb
xor
sbb
call
adc
ss
add
nop
adc
sbb
mov
lcall
into
lock
mov
sar
filds
jp
mov
adc
fmuls
clc
incl
imul
or
mov
add
mov
xor
stos
aaa
xlat
das
call
mov
jp
adc
pop
jge
inc
sub
addl
jo
push
sti
lock
adc
ds
orl
push
dec
pop
add
je
push
push
dec
mov
jns
les
in
sarb
gs
jns
push
insl
shrb
pop
lds
movsb
fcompl
jbe
jle
sbb
lahf
outsb
mov
xchg
cli
in
sub
push
adc
adc
xchg
cmp
call
dec
out
ret
sbb
mov
xchg
sbb
stos
mov
faddl
adc
sahf
xchg
fstpt
sub
xchg
test
adc
lods
mov
shll
out
push
inc
out
adcl
sub
int
pusha
out
jle
les
int
ss
outsb
adc
xchg
stos
ficoms
pop
hlt
stos
test
sahf
xchg
sbb
push
xlat
cmpb
sti
stos
insl
push
add
cltd
sbb
xchg
in
adc
add
les
mov
fdivrp
or
outsl
les
xlat
xchg
popf
xorl
inc
sbb
outsb
mov
rorb
rorl
add
sarb
dec
decl
xchg
popa
adc
in
pop
rcll
addb
adc
push
mov
push
nop
nop
adc
insb
pushw
jns
push
ljmp
mov
adc
push
sarl
fsubs
aam
in
mov
addl
subl
inc
mov
insl
mov
inc
cld
pop
or
or
or
into
sbb
cli
push
push
iret
pop
push
xor
mov
fisubs
cmp
push
mov
cmp
or
sbb
jno
and
adc
adc
inc
xor
popf
fwait
imull
out
jp
sub
bound
cmp
jne
je
lock
outsl
mov
inc
jb
jo
imull
jg
in
movsb
insl
sbb
xor
sub
call
pop
sti
cmpsb
cli
pusha
les
aas
sub
cmp
rcrl
inc
and
mov
inc
andl
cmp
inc
push
cmc
push
dec
add
jecxz
jns
gs
sub
cmp
out
sbb
aas
call
add
push
xchg
inc
add
add
inc
inc
cmp
std
push
mov
std
in
cmp
xor
addr16
cmp
adc
aaa
aad
call
sbb
inc
fdivl
cmp
pop
jp
pop
insl
jp
aad
cmpsb
adc
xchg
add
mov
inc
mov
je
cltd
cmpsb
negl
movsl
push
ret
in
mov
mov
loopne
or
push
imul
xor
adc
mov
punpcklwd
rorl
cmp
cmpsl
cmp
inc
xor
xchg
std
dec
sub
jbe
sbb
movsb
cmp
sbb
fistpl
xor
aas
imulb
imul
xor
or
lock
in
sub
mov
imul
hlt
dec
or
pop
sbb
ds
mov
push
cmp
mov
xchg
and
shlb
xor
sub
dec
sarl
push
jp
inc
aas
cwtl
sbb
push
xchg
in
std
or
and
xchg
adc
mov
sub
and
jns
out
pop
xchg
nop
add
push
cltd
std
mov
orb
push
add
dec
in
xor
push
in
jae
push
inc
hlt
mov
jns
sbb
lahf
mov
adc
jmp
clc
aas
or
mov
pushl
pusha
pop
add
les
in
adc
divb
ss
mov
add
inc
inc
push
inc
inc
push
inc
push
outsb
and
shl
dec
shlb
gs
notb
test
rcll
inc
adc
and
mulb
pop
pop
xchg
dec
push
inc
outsb
ret
add
fadds
popa
sbbl
rcll
fildll
adc
test
jbe
add
cld
pop
or
es
add
ror
mov
ret
and
imul
hlt
dec
pusha
jge
add
xchg
cmp
cltd
jne,pn
mov
insl
add
adc
sub
int3
jno
and
notb
jo
xor
popf
lcall
pop
mul
lock
jns
add
in
add
jbe
movsb
jmp
lods
lcall
mov
mov
add
add
dec
and
popa
shrb
add
xchg
add
mov
add
jp
xchg
jbe
stos
pop
push
jbe
xlat
xchg
dec
stos
incb
ret
movsb
popa
dec
jp
pop
lock
jge
add
jns
sbb
jo
ret
or
jge
xchg
dec
int
or
push
adc
jnp
or
jp
ds
push
jae
imul
pop
aas
ret
sbb
add
and
or
std
popf
add
cmpsb
nop
sbbb
push
mov
adc
adc
adc
vmwrite
hlt
push
test
and
adc
pop
test
imul
cmp
add
insl
andl
add
movsl
sbb
mov
adc
orl
inc
mov
movsb
cld
xorb
popa
add
and
mov
and
ljmp
test
or
inc
add
movsb
mov
dec
es
sbbb
js
mov
sub
cltd
add
push
mov
clc
and
mov
add
inc
jo
sbb
xchg
dec
lods
mov
lods
xor
adc
stos
add
jbe
outsb
mov
jp
mov
push
xchg
adc
roll
aam
sti
and
sarb
fidivrs
or
inc
add
adc
ret
fisubs
adc
mov
imul
lods
dec
cmpsb
mov
pop
sbb
sub
mov
adc
or
adc
inc
or
or
nop
sbb
fisttps
push
rcll
cmpsb
dec
or
dec
sbb
addb
xchg
mov
ret
or
cld
sbb
fcmove
mov
lock
push
out
or
xchg
inc
adc
test
out
sbb
fcoml
dec
inc
adcl
push
lods
push
add
stos
ret
jnp
lds
es
jns
lcall
add
scas
push
xchg
push
into
mov
dec
jns
xor
cli
sbb
sbb
lock
in
enter
out
not
xchg
push
jbe
cltd
orb
js
sub
inc
adc
push
hlt
inc
pop
inc
sbb
pop
icebp
outsl
out
outsb
sub
push
rorb
dec
jns
add
inc
xor
push
and
cmp
dec
test
es
inc
bound
cmc
mov
pop
sbb
enter
aam
andl
sub
fucom
inc
or
mov
add
sbb
inc
addl
inc
cli
sahf
push
add
in
mov
out
nop
mov
dec
test
test
add
insb
cli
mov
jae
adc
and
cltd
shlb
adc
stos
inc
jecxz
xor
sbb
rcrb
mov
inc
sbb
push
in
arpl
jp
loop
repnz
mov
pusha
pop
xorb
mov
add
mov
in
or
add
adc
jne
ret
fidivs
adc
in
into
xor
jns
adc
int3
add
and
jge
mov
and
inc
mov
mov
xor
xchg
mull
stos
sbb
addb
xchg
jp
xor
rclb
push
jl
dec
mov
pop
add
inc
push
mov
push
push
add
icebp
iret
inc
mov
loop
cwtl
popa
call
popa
xlat
inc
insl
data16
adc
sub
shlb
in
sbbb
and
dec
pop
mov
mov
push
add
xchg
loop
and
in
scas
push
in
cli
jne
push
and
or
add
adc
test
mov
add
pop
jo
jbe
dec
icebp
in
sbb
hlt
xchg
or
addr16
out
xchg
adc
aas
sub
push
divb
dec
loopne
adc
loopne
shrb
fisubs
mov
lods
push
cmp
mov
jns
sbb
scas
cli
push
xchg
mov
loop
sbb
test
pop
sbb
nop
stos
jle
push
xor
jecxz
xchg
out
popf
cs
cli
inc
in
inc
js
and
xor
sbb
cld
fistpll
or
jle
xchg
and
push
loop
loopne
mov
xor
sbb
push
xchg
sub
movsl
xchg
add
mov
xchg
cmp
jl
fdivrp
push
fisttps
ret
or
and
out
mov
and
jg
ja
int3
or
pop
xchg
or
jecxz
inc
or
rclw
loopne
subb
clc
push
mov
nop
fstl
xor
sbb
sbb
loop
inc
mov
fstl
jge
testb
rclb
adc
pop
sbb
jge
inc
mov
mov
cltd
mov
std
in
adc
inc
loop
pusha
add
add
push
sbb
rcrl
add
popf
in
outsb
test
js
sub
into
jbe
add
ret
fxam
test
lods
jo
or
mov
lds
andb
inc
shlb
sbb
pop
and
icebp
inc
incl
test
jns
sbbb
add
add
fcoms
mov
inc
pop
xor
sbbb
add
push
out
test
js
insb
sarb
les
popa
js
xor
call
cwtl
xchg
iret
jp
mov
sti
xchg
sbb
sti
mov
or
push
push
and
int3
lahf
jns
inc
in
adc
xchg
rclb
and
idiv
pop
add
fcoms
add
xchg
mov
push
mov
pusha
xchg
jno
sbb
push
loop
lock
sbb
cmp
test
xchg
sbb
mov
push
sbb
mov
jecxz
stos
jg
adc
cmp
cli
addr16
or
pusha
xlat
lock
mov
jmp
adc
and
filds
pushl
insb
dec
rol
inc
addl
add
orb
xlat
test
icebp
pop
add
clc
rol
inc
aas
sub
sarb
adc
sbb
sbb
jbe
mov
incl
js
sbb
mov
push
inc
popf
cmp
pop
ja
pop
cmc
jno
lock
sbb
lahf
and
mov
cwtl
sbb
add
lock
mov
xlat
mov
out
bound
shrl
mov
cmp
xor
in
push
aam
out
fsubr
add
inc
into
push
imul
mov
and
cmp
stos
jne
enter
mov
outsb
push
push
jbe
int
lock
mov
xor
fmull
mov
cli
mov
in
or
push
push
mov
test
pop
and
cld
in
repnz
or
sub
outsl
outsl
adc
inc
sarl
inc
sbb
mov
fwait
adc
or
pop
push
and
mov
cmp
mov
adc
cmpsl
adc
jp
testb
adc
xchg
adc
shlb
add
adc
imul
test
hlt
jns
mov
sbb
sbb
andl
add
lea
pusha
add
dec
mov
outsl
push
mov
jb
mov
mov
jo
inc
rclb
push
or
sbbl
neg
fbstp
push
js
lcall
bndldx
jae
pop
shrb
cld
in
call
pop
cltd
lcall
add
add
jecxz
and
nop
mov
ss
xor
and
cmp
bound
adc
mov
add
sti
popf
stc
addl
ret
push
xchg
loopne
add
cltd
stc
shl
xchg
testb
sarl
jns
or
adc
outsl
mov
sub
mov
or
sbb
sbb
mov
add
push
insl
or
dec
sbb
push
jb
test
loope
mov
lcall
cmp
push
jg
lcall
not
mov
fisubs
hlt
jge
push
jge
roll
outsb
incl
mov
lcall
lods
sbb
sub
mov
testb
push
jno
add
inc
rorl
mulb
jae
and
outsl
sub
pushl
scas
jns
inc
mov
lock
shlw
fnstcw
or
adc
jno
int
adc
cmpsb
pop
inc
push
or
out
add
push
sub
add
jno
fildl
fildl
sbb
and
pop
adc
push
seto
das
clc
add
in
jp
jns
nop
or
and
sub
mov
or
and
jno
shll
daa
fiadds
sbb
icebp
loopne
push
pop
xor
mov
inc
hlt
xorb
fwait
inc
sahf
xor
add
test
fsubr
imul
xorl
sti
cmp
insl
xchg
adcb
mov
lods
nop
insl
dec
push
aam
push
add
aam
inc
add
inc
cltd
sti
mov
or
movsb
or
call
xchg
mov
test
jno
sbb
push
inc
sbb
sub
sub
xor
xorl
dec
push
adc
add
pop
stos
fdivp
rcrl
dec
sbb
sub
adc
push
ret
inc
add
xchg
scas
mov
add
sbb
or
hlt
sbb
jg
dec
sahf
pop
bound
aaa
stc
mov
or
mov
daa
push
cmp
add
sub
test
pop
push
push
mov
inc
adc
add
test
test
icebp
jbe
in
sti
outsb
repnz
xor
mov
mov
sbb
push
jge
cli
dec
add
or
and
adc
pop
out
leave
sbb
int3
xchg
or
or
push
cmpsl
insb
add
es
jne
imul
mov
fstp
push
jle
sbb
shl
inc
dec
fwait
sti
sbbb
lret
loope
push
jns
add
xchg
cwtl
stos
aam
jecxz
push
jp
or
mov
stos
adc
or
adc
js
add
inc
sarb
pop
add
stos
push
lock
mov
jmp
inc
fadds
jo
mov
and
roll
fldcw
loopne
fidivl
fnsetpm(287
adc
sbb
push
mov
jo
add
fildll
mov
cld
jae
shlb
push
rcll
cmc
pop
movsb
mov
orb
sbb
and
jnp
jmp
fcomps
mov
lcall
jg
loopne
and
jns
stos
loopne
dec
adc
dec
cmp
mov
pop
pop
jno
mov
inc
add
jle
ret
mov
pop
nop
lea
inc
fidivrl
and
mov
xchg
mov
rcrb
andb
add
fs
inc
add
cltd
adc
sti
xchg
mov
pusha
adc
inc
dec
adc
shr
imull
rorb
in
das
lcall
scas
inc
xor
sbb
dec
sbb
gs
dec
adc
adc
stos
add
mov
pushl
add
inc
sahf
add
jo
adc
outsl
add
lahf
idivl
popf
adc
xchg
or
mov
in
das
add
dec
sub
gs
and
jle
xchg
mov
and
std
stos
pop
loopne
push
adc
adc
inc
mov
popa
addr16
sbbb
cltd
inc
arpl
add
lods
loopne
sbb
xor
roll
movsb
aam
nop
ja
stos
lret
mov
aam
add
mov
int3
xchg
sub
scas
std
sbbl
inc
push
adc
add
das
xor
jg
push
subb
nop
adc
cmp
dec
jl
pop
shlb
test
push
add
inc
add
mov
push
ret
int3
push
inc
movsb
mov
push
xor
and
sub
movsl
fiaddl
pop
shlb
movsb
mov
ret
orl
sahf
xchg
mov
outsl
cmp
or
cwtl
sarb
push
dec
das
xor
add
mov
pop
in
orb
cwtl
sbb
add
add
xchg
push
sub
or
add
cltd
mov
js
add
sti
nop
sub
cmp
aas
add
pop
mov
sbb
xchg
inc
pop
adc
fldl
lds
push
jo
adc
push
mov
add
push
sub
push
xor
fsts
adc
rcll
adc
dec
dec
lcall
cmp
cmpsb
add
push
sbb
incl
or
cmpsl
sbb
jns
sti
add
push
jo
cmp
and
stos
nop
dec
pop
sbb
loop
sbb
push
sbb
cmp
push
ja
adc
ret
add
inc
lcall
inc
push
pop
pusha
ficompl
add
test
icebp
data16
sbb
pop
enter
xchg
sbb
jle
es
ljmp
sub
lea
movsb
adc
inc
scas
bound
pusha
sbb
push
fcomps
cltd
adc
push
scas
cmp
jb
inc
cmp
add
shrl
in
outsb
cld
in
adc
out
ret
outsb
nop
sub
add
gs
adc
imul
clc
incl
or
jns
addl
popa
aaa
xor
pop
out
fs
add
mov
mov
add
sti
pop
and
addb
in
or
in
inc
and
add
ret
sub
adc
add
cmp
inc
inc
vzeroupper
lcall
mov
out
xor
cmpsb
and
xchg
sbb
xorb
imul
in
test
adc
or
xchg
dec
pop
lea
adc
adc
pcmpgtd
addl
add
add
jp
dec
stos
inc
fcoml
outsb
adc
xor
cltd
push
stos
sub
sbb
sbb
and
rcrl
stc
xchg
arpl
sar
inc
fisttpl
xchg
insb
mov
nop
ret
adc
out
mov
sbb
jg
cld
shll
pusha
pop
lahf
sbb
add
outsb
out
sub
ror
mov
push
jg
in
xchg
xor
adc
add
rclb
jo
inc
mov
inc
xorb
add
dec
clc
mov
fisubl
mov
aam
fcom
cltd
sahf
adc
ja
in
mov
mov
mov
sbb
pop
push
lea
dec
hlt
popa
push
or
push
and
push
out
push
xor
add
xchg
or
outsb
mov
dec
loop
sbb
add
or
push
adc
add
mov
adc
test
adc
xchg
sbb
add
cmp
es
or
xor
fimull
cmp
mov
std
es
xor
aam
orb
inc
adc
in
rclb
dec
cltd
fs
addb
mov
adcb
mov
cld
aaa
lods
jecxz
pop
adc
or
add
fmull
push
aam
adc
pusha
fcoml
pop
rorb
cmp
sbb
push
xchg
sbb
xchg
xchg
fwait
in
inc
loopne
and
push
or
mulb
add
add
in
push
hlt
and
or
je
mov
pop
sbb
add
daa
shlb
loopne
pop
pop
mov
add
mov
call
popf
inc
cmp
outsl
loopne
imul
mov
popl
repnz
push
pusha
xchg
bound
add
js
addb
or
loope
lcall
mov
popf
adcb
adc
sbb
mov
add
pcmpgtd
add
fistpll
add
adc
out
mov
sbb
and
mov
mov
jp
rclb
in
mov
aad
filds
add
rolb
xor
mov
dec
inc
sub
sub
and
int
add
sbb
fisubl
out
mov
xlat
mov
add
roll
rol
add
scas
push
repnz
jg
rcll
dec
or
adc
mov
inc
pushf
inc
or
or
nop
orb
or
pop
push
jns
add
outsl
add
bound
push
aad
or
mov
or
sbb
das
js
and
and
fcmovu
and
and
insb
rcr
outsl
clc
loopne
mov
sbb
xor
xor
xor
gs
decl
pusha
mov
pop
pop
add
inc
out
push
xor
std
aad
stos
xor
imul
xchg
out
js
mov
adcb
sbb
loop
mov
jmp
xor
push
jo
stos
xchg
fsubrl
xor
pushl
clc
faddl
dec
inc
mov
xor
push
inc
xor
and
nop
mov
push
mov
mov
mov
gs
mov
push
in
or
or
xor
cmp
rcl
jecxz
jg
push
pop
inc
and
pop
xor
push
mov
and
pop
lods
sbbb
inc
fists
xchg
bound
add
in
popf
push
xlat
test
inc
fcoms
pop
inc
les
cmpl
xchg
mov
loopne
fdivrs
stc
sbb
orl
out
mov
and
sub
mov
sub
das
add
std
mov
subb
and
fisubs
and
xor
add
js
outsb
out
test
and
aad
ffreep
out
loopne
sbbl
push
rorb
mov
incl
mov
ret
inc
add
inc
add
pop
mov
ljmp
push
in
lods
mov
and
mov
cmp
mov
inc
daa
or
dec
loopne
rcrl
inc
aam
and
mov
xor
add
xor
sbb
ljmp
mov
add
mov
xchg
jno
adc
adc
or
bound
mov
jmp
inc
pusha
push
js
rorl
mov
fistps
int
or
mov
jp
dec
push
add
jo
outsl
js
out
js
xor
jl
mov
sahf
adc
mov
add
pushl
dec
sbb
or
pop
or
or
add
rcrl
xorb
test
out
inc
adc
and
sbb
xor
repnz
adc
jno
xorb
add
mov
push
arpl
fcoml
es
mov
xchg
push
stos
fiadds
pop
adc
ds
ljmp
pusha
add
adc
loop
and
push
sbb
sbbl
pop
js
push
outsb
subb
push
push
addb
sub
movsb
cmp
and
sub
add
out
ljmp
sbb
lods
or
xchg
mov
and
ud0
in
and
adc
sbb
in
pop
dec
or
xor
das
rcrb
xchg
adc
sahf
fisubl
aaa
mov
jo
imul
ljmp
mov
mov
sub
mov
or
xchg
incl
xchg
add
or
fdivrs
mov
shrb
imul
mov
hlt
fists
or
jno
js
insb
outsb
outsb
sbb
inc
rcll
dec
adc
fidivl
or
xchg
insl
adc
cld
sub
pop
lock
pop
xchg
adc
add
mov
aam
cli
add
mov
jecxz
jb
fistpl
rclb
adc
orl
fidivrl
and
adc
addb
sahf
test
cmp
jg
jbe
push
int3
xor
in
dec
sub
xchg
add
fldenv
rcll
add
pop
sbb
cwtl
int3
sub
pop
mov
icebp
dec
cwtl
hlt
dec
jp
add
mov
sbb
dec
les
adc
hlt
mov
add
push
add
aad
in
jg
sbb
cwtl
nop
dec
out
xchg
push
dec
sbb
pop
add
inc
test
shlb
and
jg
mov
mov
loop
sbb
mov
mov
icebp
and
jns
aad
ret
inc
and
and
fsubr
shl
pushl
outsl
mov
adc
sbb
or
xor
insb
fs
add
sahf
lret
sub
mov
add
jo
adc
adc
adc
or
xchg
in
push
sub
push
lock
and
std
sarb
jg
loopne
or
mov
rol
lea
sti
ret
fistpll
mov
cmpb
lea
adc
sub
inc
incl
push
mov
ljmp
stos
xlat
mov
pop
add
js
jo
call
ljmp
dec
jp
sub
fistpl
aam
loop
roll
sahf
inc
pop
into
sub
std
add
push
push
sbb
fisttps
or
sbb
nop
jp
adc
pop
mov
push
adc
xchg
add
out
roll
lock
add
xlat
incl
fnstenv
xchg
rolb
jp
inc
push
mov
mov
push
mov
cltd
int
pop
icebp
movsb
xlat
std
and
push
push
adc
xchg
jmp
rolb
loop
sahf
lods
adc
call
and
add
add
mov
fcompl
pop
or
mov
loopne
jbe
or
xor
jno
pop
xor
loopne
in
addl
js
inc
inc
add
pop
xchg
jp
add
out
sbb
fdivr
jmp
outsb
push
aam
sbb
cmpsb
sbb
nop
inc
push
or
adc
jle
lock
jecxz
mov
and
int
push
sahf
push
and
mov
pusha
ret
xchg
sbb
adc
fistl
fs
nop
sbb
loopne
lock
test
js
push
sbb
adc
ja
jg
pop
cwtl
js
arpl
mov
sub
mov
and
add
jp
test
test
or
xchg
mov
add
pushl
orb
shrb
inc
mov
inc
lock
or
enter
loopne
nop
rcrb
rorb
pop
shr
gs
js
pusha
inc
adc
test
xchg
mov
mov
addr16
cltd
sub
js
inc
add
sub
rolb
xor
add
nop
js
hlt
add
add
pop
outsl
mov
xchg
mov
outsb
cmpsl
filds
test
push
js
dec
add
or
jp
and
pop
icebp
loopne
aam
pop
rclb
imul
add
icebp
dec
jl
add
out
es
in
mov
add
into
dec
xchg
dec
add
lods
mov
inc
push
imul
inc
test
icebp
es
mov
push
dec
insl
add
icebp
ljmp
xchg
stos
xchg
adc
add
sarb
push
add
call
sub
stos
std
jo
out
or
add
mov
or
xor
inc
lods
xor
jno
or
jbe
jle
fstpt
popa
add
and
out
dec
lods
fwait
sub
jmp
add
mov
push
and
add
cmc
or
mov
pop
sub
cmp
repz
cmp
and
jg
fildl
push
add
addb
xor
subl
mov
push
add
push
imulb
cld
aaa
imul
rclb
sbb
verw
ret
add
add
psubsb
lods
fs
xor
pusha
decl
add
xor
add
and
xor
fstpt
divb
inc
addr16
add
fsubrs
mov
pop
fidivrs
adc
xor
push
jl
ljmp
push
mov
dec
sbb
xchg
adc
cltd
adc
cmp
jg
jmp
mov
add
ftst
xchg
call
fwait
inc
inc
rcrl
push
les
lods
xlat
cmp
std
jg
shlb
out
lods
fcompl
data16
mov
dec
fidivrl
adc
sub
sbb
xchg
inc
push
xlat
pop
and
insl
push
rclb
add
gs
xchg
outsb
sahf
add
push
sbb
pop
mov
fldcw
cld
fisubrs
sbb
cmpsb
rorl
cmc
das
adc
orb
adc
lcall
sub
popa
or
stos
daa
pusha
cmp
inc
pop
in
mov
test
loopne
push
push
or
xchg
js
cmc
les
dec
jecxz
test
add
add
add
nop
out
dec
repnz
ja
stos
adc
jle
adc
les
dec
adc
test
push
aam
and
aaa
std
outsl
add
addb
mov
or
add
mov
push
mov
gs
lock
addb
out
hlt
sahf
mov
inc
cmpsb
loope
addl
sarb
incl
inc
pop
add
inc
inc
cmpsl
add
cmpsl
push
lcall
jae
dec
stos
cmp
out
adc
outsl
in
lret
and
add
and
pop
movsb
and
rclb
sbb
cmp
inc
and
dec
loope
sub
shrb
sbb
xchg
and
test
pop
out
test
adc
add
sahf
and
push
sbb
inc
test
pop
dec
jp
pop
cld
clc
call
or
nop
add
push
xchg
adc
in
mov
mov
aaa
or
inc
andl
add
inc
xor
popa
ret
add
ret
add
scas
fsubs
push
mov
jo
inc
xchg
mov
inc
pop
pop
lods
cmp
mov
and
rorb
fadds
popf
adcb
add
mov
inc
sub
ss
loop
mov
shrb
jmp
or
cld
mov
sbb
pusha
insl
stos
pop
in
lods
and
pusha
or
inc
mov
pop
rolb
mov
adcb
arpl
ja
test
jb
mov
pop
addb
inc
out
sarb
loopne
push
iret
sbbb
xchg
loopne
loop
aam
rol
or
and
sbb
mov
add
sbb
adc
dec
xchg
incl
sbbb
inc
movsb
rolb
inc
add
stc
loope
in
loopne
mov
aam
subl
roll
mov
ja
das
or
gs
sbb
test
inc
test
mov
sbb
or
jnp
sbb
add
fs
popw
sbb
mov
es
loopne
fidivs
cmpb
pop
sarl
in
inc
dec
nop
sbb
jg
divb
or
andl
loopne
mov
push
jp
adc
std
js
movsl
add
test
mov
xchg
dec
shlb
pop
mov
mov
inc
or
flds
push
adc
push
add
cmp
and
jmp
addr16
push
pop
mov
adc
subl
test
sbb
sub
outsl
sub
pop
icebp
insl
sub
mov
arpl
aas
jnp
jge
sub
sub
or
rcl
add
test
inc
fs
and
adc
lock
fists
sbb
clc
insb
sub
movsb
mov
xor
pushl
std
mov
xchg
dec
hlt
xor
je
test
mov
or
neg
or
mov
pop
and
jo
mov
mov
pop
xor
jge
ss
in
xor
lock
cmp
sbb
scas
mov
push
insl
mov
imul
mov
lods
div
out
js
ret
adc
les
orl
add
mov
es
add
loopne
sbb
jno
rclb
sahf
das
adc
and
sbb
push
xchg
andb
sahf
sub
inc
pop
popa
jmp
hlt
or
push
mov
pop
notb
imul
add
ljmp
loope
push
pop
fsubs
aam
adc
ljmp
adc
dec
out
mov
sub
add
ss
mov
add
jp
cmp
mov
add
inc
std
test
push
nop
push
inc
dec
xchg
push
ficoml
xchg
add
subb
out
push
js
xchg
mov
js
xchg
dec
lock
shlb
mov
pop
xor
movsl
dec
pusha
in
sub
add
xor
lock
rclb
neg
mov
pop
adc
add
popf
add
or
pushf
in
adc
mov
std
movsb
out
icebp
pusha
push
repz
lcall
loop
and
push
out
push
js
inc
add
loop
adc
ja
popf
lcall
push
leave
adc
mov
mov
add
imul
adc
pushf
arpl
mov
jns
orl
lcall
xchg
or
in
hlt
add
arpl
cmp
fadds
and
stc
add
sbb
push
adc
add
adc
cwtl
call
and
adc
js
or
bound
std
call
insb
mov
and
pusha
adc
jo
arpl
aam
add
leave
xor
mov
xor
stos
loopne
and
inc
cld
or
inc
lcall
ljmp
adc
mov
dec
js
mov
idiv
filds
cmpb
cmovs
pusha
xor
inc
push
jnp
lods
std
xchg
and
mov
pop
dec
or
mov
jmp
lock
pop
testl
add
inc
add
fistpll
stos
adc
dec
mov
jge
in
jne
push
adc
jg
mov
xor
out
add
sbb
stos
push
in
jmp
dec
loop
in
push
adc
mov
sbb
aaa
mov
pusha
add
push
cmp
ja
push
cld
out
sbb
pushf
shlb
lods
dec
stos
adc
pushl
mov
fsub
and
jp
mov
inc
add
negb
dec
fwait
lcall
clc
nop
push
ret
push
pop
jne
push
outsb
mov
or
pop
int3
xchg
push
xor
filds
pop
jp
mov
dec
aam
and
or
add
shlb
mov
mov
mov
adc
cmp
adc
jg
imul
sub
jo
mov
or
js
fs
mov
stos
mov
add
ficoml
add
rcrl
add
std
mov
push
rcl
stos
push
in
fadds
mov
cli
mov
or
add
add
cmovno
jmp
negl
add
fwait
mov
or
inc
or
sbb
lea
out
xor
into
xchg
or
mov
or
incl
pushf
daa
push
sbb
add
sbb
adc
adc
adc
mov
fildl
dec
push
jecxz
aaa
addr16
sbb
adc
sbb
ja
push
push
adc
test
add
mov
dec
mov
pusha
xchg
adc
fiaddl
dec
xorl
xchg
pop
lea
mov
clc
xchg
sub
insb
sub
les
jmp
push
pop
bound
movb
test
bound
push
mov
adc
insl
add
cmp
add
test
imulb
sbb
cwtl
fnsave
frstor
subb
ljmp
or
icebp
add
pushf
in
xchg
xchg
jp
mov
mov
and
dec
xchg
add
xchg
imul
subl
call
lcall
add
push
rcr
test
lods
ja
lock
cwtl
mov
divb
lea
in
cmpsb
loopne
jp
or
cs
jo
scas
lea
sbb
fstpl
movl
add
jo
inc
push
in
insl
rcrl
add
adc
rcrb
lods
add
jbe
adc
mov
cmp
mov
add
sub
popa
jp
jbe
sti
xchg
xorb
xor
xor
sub
inc
fs
or
pop
jp
push
rolb
lea
inc
jns
push
inc
inc
add
dec
mov
push
add
adc
sahf
adc
rolb
imul
shl
jp
xor
pop
addb
insb
cmp
sbbl
mov
adc
inc
daa
cmpb
and
lock
adcb
imul
lods
outsb
out
loope
pop
lods
mov
lcall
js
aad
fiaddl
or
mov
roll
push
js
rcrl
mov
adc
and
sub
dec
jp
jmp
pop
dec
orl
jp
cmp
xorl
inc
cmp
shlb
push
cltd
adc
sbb
mov
sub
inc
xor
std
addb
roll
test
or
inc
sub
jp
out
std
jmp
insl
dec
xorl
cltd
shrb
sub
pusha
js
rolb
push
sub
inc
push
add
ljmp
popa
push
js
fnstsw
and
and
inc
or
js
xchg
pop
mov
sbb
add
push
xor
adc
clc
fistpl
cltd
and
sbb
add
gs
or
cs
sbb
lcall
xchg
adcb
cmp
cld
dec
ret
outsb
lea
outsb
add
xor
jl
shll
jmp
std
data16
dec
xchg
loopne
faddl
sarb
mov
jg
mov
cmpb
jb
in
sbb
andb
in
or
xchg
mov
and
test
decl
ds
push
mov
or
lret
inc
adc
sbb
or
lret
rorb
inc
push
jmp
in
adc
and
stc
test
cltd
in
inc
movsl
push
add
mov
dec
outsb
sbb
xlat
loope
fs
inc
push
mov
mov
add
int
in
js
and
lds
fwait
fcomip
popa
fwait
push
xchg
push
pop
mov
nop
pop
mov
in
test
inc
pop
fld
fwait
shrl
fwait
addb
inc
adc
push
dec
adc
cli
inc
mov
in
and
jno
sar
es
out
lcall
cmp
lea
pop
adcl
sub
adc
or
adc
xor
and
mov
orb
adc
adcb
xchg
jne
mov
adc
jg
idivb
lock
jbe
push
loopne
rcrb
xchg
fadd
mov
loopne
add
lcall
imul
mov
in
mov
mov
sub
gs
test
xchg
inc
xor
repz
pop
fs
bound
adc
xor
loopne
fstps
cmp
outsl
push
add
call
dec
add
add
clc
sbb
loope
stos
stos
mov
add
fcomip
jg
add
and
loop
aam
test
xchg
add
out
pop
gs
cld
pushl
xor
mov
mov
mov
xchg
loopne
jp
lret
loopne
add
lock
mov
ja
lar
inc
lcall
mov
jns
dec
inc
jnp
shlb
sub
mov
add
add
decl
bound
xchg
insb
ljmp
loop,pn
cmpsb
pop
lods
in
ffreep
arpl
or
addl
add
loopne
stos
call
insl
push
andb
jne
jecxz
rcl
pop
icebp
sub
lahf
push
or
adc
push
adc
loop
inc
je
ja
lcall
cmpsb
loopne
icebp
inc
cmpl
inc
pop
jae
mov
add
pop
notl
inc
mov
mov
inc
js
insb
je
and
adc
push
mov
insl
push
adc
sub
pop
sar
mov
add
push
adc
icebp
xchg
pop
xchg
jle
lret
mov
cltd
sar
decl
jo
lahf
adc
adc
js
xor
nop
adc
shll
loop
dec
add
aad
outsl
inc
in
addl
test
pop
ror
cmp
push
lret
pusha
or
pushl
adc
inc
or
jo
popa
adc
ja
xchg
mov
add
sahf
pop
xor
mov
add
test
sub
mov
in
push
mov
mov
add
adc
adc
and
add
xchg
or
stos
call
pop
adc
dec
push
adc
cmp
push
jg
jp
lds
add
mov
add
into
push
add
pop
add
or
push
and
out
mov
subb
mov
cli
ljmp
or
nop
xor
mov
repnz
inc
pop
jl
pushl
fbld
or
cmp
js
mov
js
ret
ljmp
adc
and
arpl
mov
add
scas
add
adc
in
adc
icebp
mov
adc
xchg
cli
add
fst
dec
cwtl
sbb
xchg
icebp
mov
cmp
xchg
mov
xlat
lea
mov
and
add
xlat
mov
adcl
rclb
mov
js
sbbb
push
stos
add
test
inc
je
fisttps
cmc
add
or
pushf
in
lods
adc
add
add
cltd
xor
js
xchg
pop
cmp
adc
xor
testl
pusha
adc
push
jle
jg
mov
lds
lods
xor
jp
addb
adc
addb
inc
aam
pop
test
mov
jecxz
cmp
fidivrs
xor
pop
pop
jg
test
lock
rorb
push
or
or
call
test
mov
add
and
lcall
inc
adc
lahf
inc
rcrl
insb
adc
xchg
sti
push
add
mov
outsb
xchg
sbbl
rcll
loop
push
leave
mov
ljmp
lods
fsub
addr16
in
sbb
mov
xor
in
sub
dec
fidivs
rorb
jle
lods
mov
mov
sub
add
adc
add
std
and
adc
lods
mov
adc
add
and
imul
mov
sahf
cmpsb
xlat
gs
shll
pop
mov
mov
fs
out
orb
insb
mov
pop
out
adc
pop
rorb
jmp
in
lahf
xor
dec
jbe
sbb
testb
movsb
jb
add
repz
aaa
jle
ret
stos
or
add
jo
mov
jo
sti
ficoml
clc
ja
pop
or
out
or
sbb
add
popf
fsubs
test
push
jns
and
inc
negb
fcoms
hlt
adc
orb
pop
std
mov
inc
mov
add
add
mov
or
fildl
movsl
add
lods
xchg
cmc
add
ret
lods
dec
subl
flds
scas
sbb
fdivl
arpl
mov
rcll
shll
xor
mov
stc
mov
dec
mov
imul
push
sbb
dec
repz
sbb
push
xor
sbb
push
cmc
add
jle
pop
shlb
test
xchg
adc
mov
loop
lret
inc
repz
adc
push
lods
imul
mov
or
roll
clc
lcall
je
jge
adc
xchg
aas
les
outsb
lcall
add
sbb
test
sbb
mov
jge
pop
xchg
push
jp
inc
pusha
mov
mov
push
push
ljmp
pop
sbb
push
dec
sahf
jae
xchg
nop
sti
insb
js
push
fwait
stos
push
mov
cmpsb
jno
adc
push
xor
cwtl
or
adcb
hlt
js
aaa
mov
mov
fnop
aas
sbb
push
inc
sar
or
nop
es
dec
stos
rcl
sahf
mov
stos
out
or
sbb
ljmp
and
lahf
xchg
jo
popa
sub
scas
aam
add
shl
lcall
mov
xor
add
stos
and
fs
insb
ds
pushl
js
pop
xlat
cltd
es
push
jns
lcall
add
adc
xlat
mov
hlt
xor
pop
popf
xor
xchg
add
sbb
push
sbb
lea
add
pop
cmp
sbb
xchg
lret
cmpsb
out
sbb
add
cmp
les
push
adc
add
decl
incb
or
test
cmc
add
std
add
or
sti
mov
inc
xchg
push
add
icebp
fwait
sbb
dec
test
add
push
adc
jmp
xchg
sti
mov
sbb
mov
int
mov
movsb
sete
cmp
outsb
push
lds
jecxz
adc
in
add
pop
xchg
in
and
std
mov
je
movsb
in
sti
js
mov
jl
mov
les
int3
pop
adcb
push
xchg
pop
adc
and
outsw
and
cmp
orb
xchg
inc
cmpsb
lcall
add
mov
rorl
mov
pop
gs
add
decl
mov
cmp
add
push
jp
sub
sub
or
orb
mov
cltd
cmp
add
sbb
addb
faddl
call
adc
fwait
pushf
inc
sti
pushf
adc
sbb
sbb
adc
mov
cmp
adc
xlat
popf
push
xchg
and
mov
jmp
into
xchg
sub
lea
jno
les
mov
enter
cmpl
sar
scas
clc
pop
mov
or
loop
jmp
push
pop
in
mov
outsb
xchg
sbb
loop
xchg
push
sbb
adc
rorb
call
inc
adc
push
aam
nop
add
cs
xchg
cli
mov
or
xor
add
add
xor
push
call
stos
pop
enter
aad
mov
sar
out
inc
dec
jns
sub
push
adc
sbb
sbb
loopne
or
push
arpl
mov
adc
pop
js
xor
addr16
mov
mov
adc
dec
xchg
push
push
rolb
lock
dec
mov
xchg
inc
shlb
dec
frstpm(287
mov
xchg
mov
ret
or
or
stos
test
sub
mov
jecxz,pn
inc
mov
jge
xor
and
xor
mov
add
loop
mov
roll
xchg
rclb
add
cmp
or
insl
in
sbb
fcoml
sbb
test
stos
mov
mov
jno
sbb
mov
add
fistl
pop
shlb
insl
rclb
push
insb
cld
mov
ja
imul
stos
nop
test
inc
lcall
inc
jb
inc
in
sbb
nop
stos
cmpb
sbb
lods
xor
call
cs
jge
adc
sub
gs
shrb
mov
in
stos
sbb
mov
cmp
movsb
add
mov
inc
dec
cmpsb
sbb
push
pop
sahf
adc
lcall
pop
add
aas
dec
addb
adc
jns
xor
idiv
ja
or
sbbl
pop
sahf
add
add
add
stc
jp
xchg
inc
add
sbb
sbbl
sbb
sbb
jns
cmpsb
sbb
mov
cmp
clc
jg
and
push
sbb
push
test
adc
mov
jmp
test
add
rcll
orb
clc
mov
call
mov
or
mov
into
popf
loop
adc
inc
add
jo
lods
popf
test
jge
stc
pop
and
in
adc
in
or
push
lods
jns
jnp
mov
ret
les
call
out
dec
push
in
stos
push
sahf
adc
stc
mov
stos
imul
aam
or
inc
cs
jg
jg
mov
fldl
add
nop
fabs
add
movsl
cli
push
aad
jl
int3
insl
push
adc
das
rorb
mov
pop
rcl
mov
mov
ret
fmull
or
sbbb
add
std
pop
or
test
loop
dec
test
mov
lcall
std
mov
xchg
insl
pusha
cmpsb
adc
mov
lcall
mov
add
xchg
pop
add
xor
loopne
adc
mov
push
xchg
sbb
nop
mov
and
outsl
call
inc
in
test
xchg
loop
inc
xor
mov
pop
jg
add
mov
inc
or
dec
dec
xchg
mov
xchg
cmpsl
dec
cld
sbb
and
imul
sbb
push
insl
in
adc
adc
out
mov
pushl
jl
mov
mov
push
movsl
xor
jg
jecxz
enter
pusha
pop
adc
sub
mov
out
xor
addb
lods
mov
push
std
push
push
and
push
dec
or
jle
jne
mov
add
sbb
je
add
in
pop
push
add
push
out
adc
mov
mov
nop
xor
add
and
mov
cmp
mov
sbb
xchg
js
xchg
sti
add
mov
adc
dec
sbb
lea
jg
xchg
in
mov
sbb
jecxz
adc
adc
or
or
popf
mov
loop
xor
sbb
loopne
out
fwait
outsb
add
add
mov
add
sub
in
mov
mov
insl
fmuls
add
mov
inc
fmull
ljmp
idiv
add
mov
aaa
andl
add
cltd
adc
nop
dec
mov
sbb
je
adc
sbbb
sbb
push
or
insb
sar
inc
sub
add
mov
fldl
test
aaa
adc
rcll
inc
xlat
jns
push
xlat
addb
or
in
adc
xchg
jns
inc
rolb
jge
jno
hlt
lcall
pop
mov
pushf
aam
xor
testl
inc
mov
cmp
shl
loope
or
loope
inc
mov
pushf
lret
test
jns
mov
incb
lock
outsb
or
sbb
insb
xor
or
stos
loopne
popa
inc
add
fists
fdivl
mov
movsb
dec
add
lock
cmpb
pop
add
in
loope
adc
xchg
or
jns
mov
mov
or
adc
mov
jns
or
pop
lock
adc
or
test
out
xor
rorb
mov
xor
adc
sarl
cli
jg
ds
out
mov
stc
inc
adc
loope
jns
jg
loope
xor
push
add
xchg
rcrb
outsb
and
pop
mov
sbb
jo
mov
mov
inc
push
inc
cmpsl
push
sti
pushf
adc
mov
inc
sbb
addl
add
or
loope
adc
lret
fdiv
fbld
push
push
sbb
in
push
mov
sub
or
adc
movsb
in
outsb
in
dec
sar
in
xchg
or
xchg
add
inc
add
xchg
and
add
sbb
xor
inc
xchg
out
xchg
bound
mov
sbb
mov
bound
xor
push
popf
add
inc
jns
push
push
in
pop
shl
lahf
addb
adc
and
pop
int3
test
sahf
pusha
add
and
js
add
xchg
inc
ret
popf
inc
cmp
mov
mov
and
push
iret
roll
pop
fisubrl
mov
popa
sbb
inc
pop
in
mov
adc
adc
rolb
mov
pop
stos
mov
push
and
mov
sbb
clc
or
enter
lock
dec
lock
push
subb
add
pusha
aaa
jmp
orb
test
jo
jns
adc
or
xor
mov
xchg
push
or
addr16
and
jge
cmc
lods
dec
je
rorl
loopne
dec
roll
jmp
xorb
test
les
add
or
cmp
fildl
adcb
mov
fstpt
insb
aam
inc
xchg
ss
push
push
rorl
mov
lea
out
fcomps
xchg
and
adc
fcomip
and
sar
xor
lcall
inc
nop
popa
mov
test
and
mov
movb
cs
fldt
cs
aad
sahf
fdivl
sbb
ret
jg
mov
push
inc
inc
popf
jns
lock
aam
adc
xchg
addr16
xor
push
mov
lret
sub
push
fsubrl
imulb
mov
inc
add
mov
in
ljmp
add
xor
rclb
or
pop
pusha
or
mov
int3
addl
jp
jmp
fs
negl
insb
popf
xlat
inc
add
or
mov
or
mov
int
cmc
int
or
rol
inc
pusha
sbb
push
and
sbb
or
jecxz
insl
adc
daa
adc
push
push
adc
imul
jns
mov
lock
add
xchg
orb
xchg
jmp
dec
and
outsl
jp
sub
sbb
clc
stos
push
in
push
xchg
imul
jmp
jl
dec
pop
cli
xor
sub
xchg
push
outsl
push
adc
mov
into
outsb
sub
push
pusha
dec
xchg
dec
mov
push
push
mov
mov
push
push
mov
add
call
xor
pop
xchg
pop
sbb
ljmp
or
adc
sbb
inc
push
jnp
pusha
sub
jg
outsl
mov
mov
ja
adc
notl
mov
sub
inc
mov
jae
add
add
lcall
add
adc
iret
adc
and
dec
xchg
push
shll
pop
mov
push
pop
pushl
and
add
and
jmp
jecxz
mov
xlat
lcall
adc
xor
lcall
adc
cmp
inc
inc
push
cmp
add
mov
xor
mov
add
sbb
nop
xor
out
add
addl
ret
mov
add
and
and
push
jns
push
add
or
sbb
outsb
mov
sbb
cwtl
mov
lock
imul
sbb
imul
jg
loopne
lret
and
popa
add
xchg
sub
or
jecxz
add
mov
nop
jns
repz
xchg
push
pop
insb
lods
mov
add
enter
fstl
fists
movb
add
adc
adcb
in
push
notw
scas
out
rcl
stos
inc
in
sti
push
ret
push
sbb
fistps
outsb
push
adc
xor
fstpt
add
insl
sbb
jg
fsubr
jnp
stos
inc
out
sahf
and
dec
pop
sbb
cli
fcomip
ja
add
repnz
push
mov
test
lods
adc
adc
pushf
imull
lods
call
in
shll
adc
add
or
jle,pn
imul
in
fisubrs
pushl
mov
add
call
and
and
int3
clc
stos
mov
sbb
js
cwtl
out
sbb
jp
dec
loopne
dec
dec
in
outsb
push
jmp
js
cmp
add
sarl
pop
sti
dec
add
cltd
loopne
jne
adc
cmp
imul
insb
jg
filds
imul
xlat
jp
inc
push
out
mov
add
mov
xor
add
in
inc
adc
std
aas
dec
push
adc
dec
mov
inc
lret
cltd
ret
mov
movl
push
push
adc
rcrb
faddl
xchg
nop
add
stc
add
es
fidivs
pop
or
xor
inc
inc
outsl
pop
xchg
cli
outsl
fistpl
ret
jp
push
push
shlb
out
adc
lock
pavgw
aad
loopne
add
mov
fs
loop
push
adc
add
xor
fistpll
je
test
test
inc
dec
test
sbb
fwait
inc
adc
loop
mov
xchg
data16
push
test
adc
jbe
adc
push
inc
pop
inc
xchg
in
push
popa
sbb
adc
lock
pop
xchg
push
lahf
int3
leave
add
xlat
repz
dec
int3
xor
inc
lahf
pop
jp
add
int
shl
push
cli
addb
mov
pop
test
xor
push
add
pop
adc
out
cmp
adcb
push
jecxz
push
insb
inc
fiaddl
in
js
xchg
sbb
nop
mov
sbb
xchg
pop
pop
mov
loop
sti
fwait
into
data16
sbb
add
sbb
cmpsb
clc
adc
stos
sub
xchg
sbb
shll
addl
rol
xchg
add
into
into
sbb
stos
das
mov
xchg
pop
pusha
jecxz
iret
lret
mov
test
jb
gs
cwtl
adc
nop
jmp
lahf
add
lcall
add
aad
inc
jp
mov
pop
clc
push
popf
test
and
ficoms
dec
jo
cs
sbb
pop
testl
addb
xchg
xchg
sbbb
jp
sbb
addb
es
jecxz
xchg
cmp
mov
xchg
add
push
cld
jp
push
add
dec
and
pop
call
cltd
mul
jae
test
push
xor
ret
adc
in
push
dec
repnz
and
or
cwtl
add
or
imul
nop
mov
gs
test
mov
mov
mov
in
push
dec
add
popf
sbb
sbb
notb
mov
popf
sbb
addb
mov
rorb
test
lock
es
sbb
in
mov
shlb
lcall
jnp
out
ret
jns
and
mov
aad
cwtl
sbb
insl
sbb
inc
xor
and
dec
or
std
shlb
inc
adc
shl
or
insl
scas
dec
xor
shll
xchg
jo
js
mov
imul
add
ret
loope
adc
jmp
ljmp
call
out
inc
xadd
ret
jns
andb
cmp
pop
shrb
adcb
pop
jo
pop
sbbb
add
inc
mov
popf
jns
shlb
decl
adc
shlb
add
arpl
and
fcoml
mov
aas
inc
das
xchg
add
jmp
sbbb
pushf
out
cltd
inc
inc
insl
inc
dec
jbe
or
sbb
lock
mov
mov
nop
sub
xchg
test
add
jp
sbb
std
mov
pushf
out
xchg
shrb
push
imul
addb
arpl
inc
xchg
js
lock
es
insl
test
std
aaa
stos
or
push
aad
rcll
mov
fwait
push
in
out
int3
stc
cmpsb
mov
xchg
fadds
in
inc
pop
test
inc
xor
es
jp
sti
mov
sbb
push
js
and
add
in
ljmp
adc
cmp
mov
cmp
push
les
stos
fwait
fs
rcrb
jl
sbb
sahf
or
fwait
shlb
add
jne
add
arpl
mov
cmpsb
mov
je
ds
sbb
sbb
mov
add
addb
inc
pop
out
sbb
stos
dec
jecxz
add
xorb
test
in
add
insl
xchg
and
incl
mov
mov
gs
les
push
imul
push
mov
push
orb
adcb
and
or
add
ret
add
mov
push
imul
cs
cmp
lcall
inc
scas
lock
jmp
or
and
mov
push
or
adc
test
inc
cmp
add
aam
add
pop
lret
ljmp
movsb
imul
mov
leave
div
out
adcb
jecxz
mov
push
popa
mov
xor
sub
lahf
movsl
add
add
and
jb
push
fs
adc
int3
mov
mov
enter
pop
mov
add
sbb
popf
dec
test
rcrb
add
test
lds
fst
js
pusha
lcall
mov
push
mov
xchg
bound
ret
push
sub
lds
jg
lds
test
scas
sbb
and
mov
cwtl
pop
stos
pop
mov
mov
inc
in
adc
dec
jp
cmc
mov
add
lahf
cmc
push
scas
mov
sub
jle
loop
inc
mov
add
ficompl
push
loop
inc
and
push
and
subb
adc
sahf
adcl
loope
mov
movsl
cmp
sub
xchg
mov
in
rcrb
adc
es
jp
add
test
push
xchg
add
decl
and
add
dec
sub
xchg
mov
sub
pushl
stos
pop
in
pusha
fcoms
inc
add
mov
negb
addl
popa
xor
or
cli
and
int
cltd
dec
add
xchg
mov
movsb
or
jns
cwtl
mov
mov
outsb
test
dec
adc
cli
sbb
outsl
idiv
mov
mov
pop
lret
rolb
popf
add
jne
and
dec
cmp
push
mov
out
add
je
imul
push
and
sbb
ljmp
or
fdivr
sub
jmp
popa
add
and
inc
jge
rol
je
sbb
pusha
add
cmp
icebp
call
cmp
mov
dec
in
add
outsb
cmpsl
jns
fsubl
mov
pusha
mov
adcl
lds
sub
adc
add
fwait
hlt
mov
call
test
adc
jo
pusha
and
pop
dec
nop
pop
mov
loope
inc
add
call
popa
xchg
fcoml
and
push
add
and
pop
add
stos
pop
fs
or
sar
popf
scas
xor
inc
xor
pop
xchg
pop
inc
push
in
pusha
pop
xchg
out
mov
sar
insb
push
push
or
adcb
fimuls
sbb
adc
xchg
jns
and
sbb
push
insl
testb
mov
xchg
subl
lock
adc
cltd
push
lcall
jo
push
es
add
jo
jno
sbb
popf
add
add
push
add
add
jp
adc
inc
sbbl
cmp
std
fisttps
add
add
mov
adcb
in
lcall
inc
sar
mov
adc
int
aas
xchg
pusha
inc
negl
nop
add
adc
push
adc
nop
roll
inc
sub
pop
lcall
sbbb
lods
fwait
inc
in
lods
pushf
in
mov
jecxz
jle
test
loopne
mov
nop
rclb
adc
or
adc
loopne
cltd
rcrb
push
fwait
mov
adc
and
xlat
lea
mov
sti
add
jbe
push
mov
cmpsb
jle
dec
mov
out
ljmp
je
dec
adc
inc
jg
mov
das
outsb
xchg
dec
in
push
stos
out
and
lods
aaa
sbb
iret
mov
bound
nop
add
test
xor
push
movsl
add
ss
shlb
test
cmp
mov
add
push
ljmp
lea
adcb
hlt
pop
adc
sbb
mov
lock
stos
iret
nop
sbb
and
in
mov
add
popf
sbb
outsb
addr16
adc
rcrl
dec
sbb
decb
icebp
mov
adc
add
add
es
and
test
xor
adc
aam
sahf
or
dec
push
dec
in
sub
xchg
in
adc
in
mov
dec
jg
adc
mov
stos
pusha
filds
sahf
sub
int
outsb
stc
push
in
shrb
jp
inc
mov
push
and
rcrb
pop
fsubl
repnz
mov
xchg
test
scas
cmpsb
fiaddl
cmpsb
pop
shr
inc
add
rorb
aaa
cmp
push
xchg
push
xor
nop
pusha
push
in
inc
syscall
std
jg
icebp
or
lahf
mov
cltd
sbb
fists
inc
loop
lock
je
popf
adc
shlb
adc
js
dec
mov
sbb
inc
sarb
inc
rcrb
inc
nop
aam
mov
mov
test
inc
jns
pop
sbb
mov
adc
jmp
and
mov
push
pusha
mov
notl
add
mov
xor
cmp
jge
jp
fwait
dec
das
mov
and
xor
js
push
xor
add
lock
push
aam
loope
lock
push
sbb
and
adc
mov
mov
push
push
inc
inc
mov
nop
outsl
fdivrs
fisubs
xchg
add
mov
ljmp
pop
icebp
inc
add
push
mov
and
add
add
dec
add
rclb
sbb
add
rcrb
adc
push
xor
add
clc
in
inc
xchg
sbb
push
xor
test
jl
ret
mov
pop
jo
sbb
data16
mov
xor
and
lea
enter
add
xor
decl
jge
mov
leave
stos
outsb
push
mov
jno
add
loopne
test
dec
adc
jge
ret
inc
test
add
ret
std
fistps
shlb
popf
adc
test
add
inc
xchg
push
jae
rolb
push
inc
xlat
push
mov
push
lret
jle
mov
dec
inc
xor
std
mov
incl
cmp
mov
sti
xchg
jb
add
je
cwtl
mov
jmp
xchg
and
bound
out
int
add
inc
add
pusha
test
xor
leave
and
xchg
inc
fidivrl
in
push
jo
stos
xor
xor
add
mov
imul
jg
mov
bound
push
ljmp
jno
in
jo
sbb
andb
pop
dec
sbb
mov
aaa
push
sub
push
and
xlat
data16
outsb
inc
adc
or
incl
mov
adc
dec
imul
or
xchg
adc
jl
xor
in
sub
das
shlb
rclb
add
outsl
fwait
sub
dec
push
and
pop
pusha
imul
or
andb
add
cmpb
push
cltd
jecxz
inc
inc
dec
cs
popa
sbb
ss
add
icebp
add
int3
fbld
hlt
mov
lahf
rcl
mov
mov
imul
bound
popf
mov
xchg
xchg
pop
add
add
or
ljmp
fisttpll
icebp
add
stos
fcompl
fsubp
pop
add
sbb
rcrb
bound
or
mov
lods
push
jp
ljmp
les
sbb
push
jo
mov
arpl
ja
or
mov
mov
pop
iret
lret
xor
addb
into
or
xorb
hlt
push
adcl
loop
aas
mov
popa
adc
rcrb
and
and
imul
cwtl
ljmp
imul
cmpsb
jo
add
cwtl
and
enter
sub
add
out
adc
sbb
inc
push
scas
pusha
fdivr
sbb
rol
sbb
enter
pop
mov
pop
addb
push
sbb
add
test
adc
in
and
xlat
sbb
shlb
int3
fs
push
jae
fwait
pop
test
sub
sbb
jnp
push
jo
fwait
sti
mov
add
xchg
fwait
inc
stos
insb
adc
xchg
cltd
out
cmpl
pushf
insl
sbb
and
icebp
xchg
js
adc
add
lret
mov
jbe
popl
xchg
mov
scas
push
sub
add
lods
outsl
dec
out
adc
add
add
or
pop
and
orl
jp
cmpl
cltd
sbb
jp
jecxz
inc
mov
sbb
orl
outsb
mov
nop
repz
add
sbb
xchg
insl
sbb
fldcw
push
stos
push
pushl
scas
adc
ret
ret
cmpsl
loopne
clc
mov
orb
add
add
popf
fs
and
into
imul
repnz
ds
xchg
adc
lods
jmp
add
insl
sbb
xor
add
dec
in
js
add
lcall
in
or
xor
in
je
pop
pop
or
pop
stos
or
test
addb
sbb
sbbl
sbb
fsts
adcb
ret
mov
add
movb
cwtl
insl
sbb
int3
cli
add
cmp
add
int
pand
clc
rol
test
in
inc
sbbb
or
lret
inc
cld
add
scas
add
add
andb
mov
xchg
or
ret
pop
jns
lret
loope
xchg
in
mov
mov
sti
dec
or
add
std
in
in
in
cltd
rcrb
sbbb
mov
push
add
cltd
addl
dec
ficoms
sbb
fbstp
jg
orl
in
jle
rol
push
mov
fildll
lea
add
jp
dec
stos
cli
in
nop
incl
ljmp
adc
push
in
outsb
inc
adc
ret
jne
subb
mov
aaa
sub
jp
mov
xchg
fisubl
sti
outsb
inc
xor
in
or
and
push
sub
mov
inc
xchg
inc
inc
or
adcb
orl
mov
adc
loop
inc
jne
aaa
sbb
lret
shlb
add
andb
lcall
mov
movsb
inc
roll
jg
or
cmova
xor
inc
adc
jmp
subl
pushl
stos
push
in
adc
sub
push
or
stos
outsb
cmpsb
mov
andb
xchg
add
hlt
push
out
mov
add
roll
xchg
rcrb
idivb
lods
sub
loopne
xor
subb
into
xor
dec
ljmp
add
sub
stc
add
nop
sahf
sub
dec
jnp
stc
loope
sbb
hlt
sub
cmp
sbbl
mov
lcall
adc
pop
rorl
sub
pop
jl
lcall
xor
test
test
aad
inc
ret
adcb
xor
and
cmp
cmp
push
in
xchg
mov
sbb
inc
jge
fs
stc
rolb
add
inc
jae
ret
sbb
jle
inc
or
or
outsl
pop
rorb
and
sub
inc
mov
push
sbb
dec
mov
push
popf
and
push
andb
pop
jns
push
adc
popf
dec
cmp
sub
mov
es
mov
fmuls
mov
jns
add
push
out
adc
inc
jne
das
and
int3
push
test
stc
or
mov
inc
push
jne
mov
push
and
cmp
inc
fdivrs
mov
mov
adc
insb
adc
mov
or
aas
roll
dec
cltd
add
jl
dec
and
xchg
lock
arpl
andb
mov
add
add
add
push
stos
sbb
or
add
xor
sbb
inc
cld
push
push
dec
push
or
shl
ret
decl
aam
mov
pushf
and
xchg
mov
mov
shl
jmp
aam
or
aaa
shlb
and
test
loop
outsb
inc
push
gs
or
les
jge
test
and
into
iret
push
pop
mov
cmpsb
mov
xchg
sahf
lods
sbb
or
xchg
add
movsb
mov
xor
and
mov
loopne
loope
rclb
ljmp
imul
add
pusha
cltd
add
scas
adc
outsl
fldt
push
sbb
insl
outsl
outsb
add
aas
cltd
sbb
jp
incl
in
sar
pusha
es
mov
or
ss
push
push
fsubl
aaa
cli
push
xchg
or
mov
lahf
sbbb
jno
inc
fs
sahf
std
xchg
push
ret
in
fnsave
jl
loopne
and
outsl
xchg
aaa
inc
shrb
and
inc
or
add
movsl
and
decb
bound
add
pusha
pushf
push
test
adc
sbb
add
rorb
cmp
rcr
loopne
ret
movsb
push
je
stos
xorl
addb
pop
adc
sbb
decl
sub
loopne
sbb
add
inc
popa
ds
or
cwtl
into
mov
clc
add
psubw
fldcw
incb
add
shl
fs
jb
aam
jb
icebp
pop
and
fcmovb
push
testb
add
or
enter
pop
pusha
sub
loopne
adc
enter
jp
inc
adc
lods
push
arpl
ret
mov
inc
add
leave
adc
test
in
mov
lock
push
sbb
std
jg
loope
sbb
adc
adc
add
jae
dec
cli
mov
sti
xchg
push
lods
rolb
popa
test
movsb
cli
and
cwtl
pusha
repnz
lret
rcl
adc
jg
cmc
inc
mov
pusha
shlb
sub
insl
adc
mov
mov
sbb
inc
adc
inc
xchg
add
jb
pop
loope
push
inc
iret
cmpsb
sbb
push
mov
out
out
mov
lret
fs
clc
or
jg
inc
cmp
add
jp
add
inc
sub
lods
aas
add
sar
shl
adc
mov
push
cmp
ret
into
cmpsb
add
adc
add
add
or
addr16
mov
pop
test
xchg
adc
xor
add
leave
mov
and
and
aad
data16
push
cli
adc
mov
bndldx
loopne
jbe
rcrb
mov
xchg
popa
cld
or
push
mov
popf
cs
and
lea
fimull
push
dec
xor
cmp
inc
jo
popf
jo
add
dec
mov
mov
jp
lcall
or
inc
and
mov
adc
mov
loopne
jbe
xor
test
mov
jecxz
daa
cli
sbb
or
xor
xchg
inc
inc
or
push
sarb
push
sub
sar
imul
andps
xchg
dec
jo
dec
inc
out
es
adc
test
test
popf
cwtl
or
xor
test
and
in
aaa
arpl
cwtl
sti
cltd
ret
les
jno
cs
ret
jge
jns,pn
dec
and
outsb
adc
jmp
push
test
and
ljmp
adc
in
ficoms
sbb
insl
pusha
push
and
or
mov
add
lea
xorb
mov
push
push
dec
xlat
and
add
inc
pop
ds
mov
push
inc
ret
fcomip
stos
mov
or
jns
push
inc
hlt
xchg
in
scas
nop
mov
add
and
sub
scas
clc
add
push
cmpb
sahf
test
movb
add
jo
ret
sub
sbb
pop
fnstenv
pop
sbb
push
stos
sarb
or
sub
or
add
lcall
std
push
jb
in
push
int3
in
jo
jmp
mov
cmp
roll
icebp
mov
mov
or
mov
inc
rolb
add
or
mov
or
mov
in
pop
sub
xor
lcall
ljmp
fidivl
andl
add
pop
push
popf
jns
clc
and
bound
subb
andl
mov
xor
jne
dec
lock
jns
mov
in
mov
sbb
mov
outsl
or
fsubl
daa
gs
out
insl
scas
test
add
mov
pushl
xchg
jo
test
sahf
adc
jo
jp
notb
icebp
fwait
stos
test
push
loopne
inc
in
mov
nop
je
mov
cmc
mov
and
jmp
imul
test
subl
mov
push
mov
out
mov
outsb
ret
sub
dec
clc
or
push
repnz
or
jg
lock
inc
lcall
jno
pop
shrb
mov
movsl
loopne
add
and
hlt
jg
or
popa
shlb
inc
adc
add
les
nop
dec
sbb
push
jbe
sub
rolb
mov
pop
add
in
outsl
sub
add
or
add
int
dec
and
stos
pusha
nop
fs
cmp
or
mov
in
jns
inc
pusha
push
jmp
aas
ret
jge
loopne
ret
jmp
repz
pusha
and
cmp
adc
add
incl
push
inc
sbb
push
pop
shrb
imul
mov
sbb
mov
popa
mov
push
loopne
push
xchg
loopne
sbb
pushl
sbb
push
add
shl
jns
mov
ret
jne
push
lret
sub
add
pop
insl
in
stc
cwtl
adc
mov
adc
adc
add
in
icebp
jne
jns
lds
inc
lds
enter
mov
pop
mov
xchg
out
xchg
mov
jns
dec
aam
mov
ret
add
fwait
cmc
mov
xchg
sbb
ret
lcall
and
lcall
adc
mov
mov
cmp
jne
mov
add
mov
xor
cwtl
add
inc
lret
push
in
add
or
sbb
adc
shlb
fadds
shrb
cmp
mov
sbb
xchg
rclb
aaa
and
and
adc
decl
or
shlb
faddp
inc
pop
loopne
mov
or
sbb
xlat
pop
cmp
mov
dec
and
adc
adc
in
cmpb
jns
xor
cmp
mov
and
call
or
fwait
rcrb
inc
sldt
popa
push
inc
dec
mov
les
mov
shll
aad
fcompl
test
cmp
push
sbb
mov
nop
loope
rolb
data16
shrl
dec
mov
fwait
mov
xor
test
fwait
nop
repnz
rclb
int
xchg
push
add
fisubrl
xchg
push
lret
cmpsl
scas
xor
add
push
push
jns
add
sbb
mov
jle
adc
imul
xchg
sahf
lods
add
gs
shrb
mov
fcoms
cld
out
dec
push
lock
and
loopne
orl
fldl
push
lds
mov
int
je
ljmp
mov
dec
inc
loop
frstor
pusha
sbb
adc
push
push
add
sarl
or
mov
cmp
js
mov
xor
flds
int
mov
push
inc
test
adc
sbb
loopne
dec
or
push
pop
pop
popa
mov
jo
sub
rolb
addb
and
les
popa
mov
aad
pop
add
test
sub
jno
icebp
sub
fs
xchg
inc
lock
sbb
add
bound
push
out
mov
ret
mov
shll
mov
mov
push
mov
add
xchg
pop
mov
xchg
push
pusha
arpl
test
adc
push
fnstcw
dec
mov
mov
filds
xlat
mov
in
add
subb
cmpsb
cli
adc
test
cltd
ret
mov
adc
mov
pop
aad
cld
mov
mov
push
jecxz
loop
xchg
push
xchg
xlat
add
pop
adc
sbb
insb
out
push
mov
dec
adc
and
pop
push
out
pop
and
or
lds
leave
jns
add
shll
or
fstl
push
aaa
jo
lods
adc
and
fnstsw
add
push
fxch
add
sbb
push
andl
sbb
loope
sbb
mov
addb
push
ret
int3
pop
in
push
fsts
test
lds
cmpsb
jle
sbb
in
rcr
incb
sbb
nop
stos
sarb
loop
fnstenv
leave
test
xchg
dec
inc
add
xchg
sbb
stos
mov
add
inc
jbe
inc
push
xlat
pop
lock
popf
dec
mov
mov
add
stos
add
cltd
loop
lds
mov
int
xor
sahf
add
add
lret
xchg
or
pop
lret
xchg
sarb
sub
mov
fisttpl
push
data16
add
call
jmp
xchg
addb
jmp
add
sbb
push
and
clc
imul
adc
test
mov
ss
push
and
rcr
jns
sbb
cmp
sti
jmp
sbb
xchg
subl
mov
xchg
push
and
into
rorl
js
sbb
fstpl
arpl
ja
mov
mov
jbe
jbe
in
sub
scas
xor
out
push
add
in
push
inc
sbbb
test
dec
popf
add
push
in
lods
stos
adc
fimuls
dec
hlt
pop
pop
adc
cmpsb
movsb
xchg
mov
jp
and
repnz
popf
sbb
sub
outsb
jp
lret
or
lock
sbb
jbe
mov
outsb
inc
in
es
lahf
je
add
in
cmpsb
ss
push
imul
jb
sbb
jcxz
xchg
push
test
push
pushl
jne
cmp
inc
movsl
bound
out
sbb
and
add
fiaddl
popf
xor
int
sahf
sbb
pop
add
sub
rol
mov
stos
shlb
or
adc
xlat
shl
lea
cli
push
addb
pushl
jg
stos
pop
out
fcomps
flds
fnstcw
test
cmpb
inc
add
sub
test
xorb
mov
adc
addl
movsl
add
hlt
outsl
mov
out
cmp
inc
and
shlb
call
dec
xor
andb
inc
arpl
xchg
inc
add
js
out
push
cmp
out
popa
js
cmpsl
jl
sbb
sbb
push
xchg
pop
inc
push
leave
test
mov
cli
cmpb
adc
adc
pusha
or
lret
mov
add
ret
cmpb
roll
mov
push
xlat
add
add
inc
popf
nop
inc
xor
ficoms
shl
lret
scas
and
fs
rolb
sub
nop
mov
add
lcall
pusha
add
jns
andb
aad
int3
js
jbe
lea
mov
push
pop
fs
addb
shrl
subl
shlb
mov
aad
adc
and
stos
clc
cmp
loope
imul
in
stos
fsts
xchg
cmpl
dec
lret
ja
xor
inc
xor
adc
pop
adc
leave
sub
adc
xchg
inc
js
push
roll
adc
icebp
or
sbb
pop
sarb
mov
addl
mov
fistps
lret
hlt
sbb
sbb
ljmp
add
shlb
bound
mov
inc
sarb
fisttpl
inc
sbbb
in
mov
filds
addl
inc
orl
add
mov
loope
iret
rolb
xor
mov
lods
outsl
xchg
sbb
jecxz
and
sub
jns
loopne
xchg
cmc
cmpsl
push
jl
rcll
scas
push
addb
and
outsb
fstl
dec
adc
mov
lock
sbb
adc
mov
aad
xchg
iret
adc
xchg
loop
inc
mov
inc
jg
outsl
mov
data16
jns
rolb
jle
and
mov
mov
hlt
add
jb
sbb
mov
add
fdivr
sbb
mov
data16
mov
loop
insb
stos
jns
and
mov
iret
xchg
mov
fmuls
cs
inc
stos
cmp
and
push
xchg
jecxz
mov
add
inc
rolb
decl
push
insl
mov
ljmp
sarb
addb
add
sub
aaa
lret
inc
rcrb
dec
push
and
sbb
adc
pop
mov
aam
sbb
and
cmpb
aas
test
lock
dec
mov
fildll
loopne
into
mov
sub
fiadds
sbb
inc
mov
mov
inc
data16
mov
inc
mov
movl
pop
jg
cwtl
call
xchg
xor
sbb
shrb
mov
pusha
push
lcall
xor
fstp
xchg
pop
lcall
adc
and
pushf
nop
stos
and
mov
lods
call
add
sbb
mulb
adc
icebp
sbb
adc
cmc
pusha
add
sbb
push
pop
orb
sbb
inc
loop
mov
mov
addb
pop
jmp
stc
call
dec
stos
dec
in
add
push
jecxz
shrl
mov
call
aas
or
lods
mov
push
adc
cmp
and
popa
loope
call
outsb
sub
mov
jmp
inc
mov
loopne
int
add
int
mov
call
cld
ja
test
rorb
rolb
mov
add
mov
xorb
adc
lock
push
mov
adc
push
xchg
mov
sbb
xor
mulb
xorb
sar
pop
inc
sub
in
in
mov
jp
add
inc
cmp
adc
cmp
adc
mov
jb
in
clc
jg
push
lea
test
push
out
lods
mov
sub
mov
lcall
and
ljmp
sbb
add
jns
push
decl
adc
nop
inc
movsl
dec
xchg
jecxz
xchg
or
lds
or
test
sub
inc
les
dec
push
add
sub
lock
pop
xchg
xchg
fst
stos
pop
out
cmc
stos
es
dec
out
rorb
xchg
outsb
lea
xor
jle
cld
mov
call
add
mov
rolb
adcb
push
push
pop
rorl
ljmp
push
push
ss
outsb
jp
nop
jo
jp
pop
mov
add
mov
sbb
data16
mov
sub
or
mov
out
shrb
push
pop
nop
jns
mov
stc
adc
push
std
pop
push
jns
xor
adc
testb
jp
jno
or
dec
fadds
adc
clc
mov
pop
std
and
popf
outsb
loopne
loope
rorl
mov
es
andl
push
sbb
rolb
lock
xor
cmpsb
dec
rclb
clc
gs
adcb
fmull
fiadds
inc
pop
pop
inc
jg
ja
lahf
sbb
popa
add
push
into
push
jg
mov
bound
mov
mov
clc
sbb
jp
addb
filds
fldl
scas
push
fisubrs
mov
popf
xor
fimull
dec
push
mov
cld
sbb
imul
inc
ret
nop
js
subb
hlt
mov
xor
jle
adc
popa
dec
mov
sahf
pop
or
insl
jp
xor
add
or
sub
mov
sbb
push
stc
push
mov
clc
int
or
mov
or
insl
orb
sbb
xchg
sub
inc
mov
call
das
push
sbb
cmp
dec
sbb
mov
or
lea
xor
and
or
jge
js
and
or
adc
and
les
insb
jo
cld
dec
sbb
cmp
sbb
decb
xchg
adc
and
mov
and
pusha
jecxz
stos
push
std
mov
imul
cmpl
pop
inc
lock
jns
xor
clc
inc
jno
lcall
es
mov
adc
mov
mov
das
cli
cmp
gs
pop
rol
jb
xor
sbb
orl
imul
add
dec
mov
xchg
or
jp
rclb
dec
bound
cmpsl
lock
orb
dec
add
inc
add
or
jo
jp
pop
jo
insl
je
mov
xchg
mov
and
and
je
mov
or
sub
addr16
sarb
adc
or
adc
repnz
sar
in
mov
pop
push
nop
loopne
imul
lock
ja
decl
stos
and
add
sti
xchg
sti
nop
rorl
jbe
push
cmp
adc
in
les
add
jo
adc
mov
fwait
gs
rcll
mov
push
pop
add
jno
cwtl
rol
divl
jo,pt
dec
pusha
cmp
add
push
pop
add
loope
add
in
sub
nop
mov
in
xor
decb
out
inc
adc
pop
mov
mov
xchg
lahf
or
add
inc
add
out
adc
ret
or
outsb
in
adc
add
mov
stos
push
mov
dec
inc
pushf
jp
leave
xchg
pop
test
insl
cmp
add
lock
sbbb
sbb
ret
stos
dec
pop
ss
imul
sahf
push
iret
into
and
leave
punpckhwd
push
incb
pop
push
in
rorl
push
nop
sbb
push
or
sahf
jo
push
jmp
and
fs
or
loopne
push
outsb
mov
lock
mov
sbb
push
push
adc
xchg
mov
stc
inc
add
adc
jns
add
push
testl
rorl
push
push
inc
sub
stc
loopne
and
xorl
addb
jns
pusha
add
sub
adc
shlb
inc
adc
iret
dec
sbb
add
xchg
lods
xchg
sub
pushl
cmpb
in
test
shrl
loope
adc
push
add
aam
push
call
jg
or
std
inc
stc
mov
sbb
cmc
inc
push
shlb
and
sub
aam
subb
push
sub
shlb
fistpll
and
outsb
jae
sub
lods
outsb
and
xchg
add
mov
jbe
push
sbb
xor
push
jg
rorb
xchg
jo
test
or
pop
outsb
inc
lock
sbb
mov
push
adc
mov
adc
aaa
add
push
loopne
aam
vunpckhps
adc
shl
call
sub
insl
add
mov
bound
jmp
fiaddl
aaa
rcrl
xchg
cmp
fdivs
lret
hlt
adc
or
mov
cmp
xor
pop
add
and
mov
push
inc
pop
jecxz
xor
repnz
pop
icebp
mov
out
sbb
outsb
push
mov
arpl
sub
movsl
and
jns,pt
add
addr16
xlat
sub
push
fs
bound
jp
and
ret
mov
jp
sbb
jns
add
out
sar
pushl
shll
xchg
mov
mov
inc
and
and
mov
xor
add
push
outsb
add
pop
insb
cltd
rol
popf
stos
daa
or
test
or
add
inc
std
push
roll
insl
push
jp
sbb
stos
movsl
adc
xor
inc
push
cli
adc
roll
insb
fsubrp
pop
push
add
dec
fadd
sti
addb
loop
xlat
dec
movsb
add
sbb
adc
cmpsl
shll
add
push
pop
lock
cli
aas
out
and
add
cmpsl
test
xchg
sti
sbb
andb
dec
test
mov
xor
add
movsb
jge
add
sub
jo
data16
or
add
loopne
add
lret
sbb
pop
xor
in
sbb
push
pop
cmp
pop
cmpsb
push
xor
sbb
push
add
add
add
imul
jg
pop
js
xorb
orb
cwtl
into
lret
adc
add
sbb
mov
roll
mov
outsl
xchg
stos
cmp
sbbb
movsl
rcrb
ret
add
sbb
add
ffree
jo
mov
mov
or
call
shll
test
xor
or
aam
addl
or
and
pop
in
and
sub
cld
orb
pushf
sbbb
push
adc
std
pop
andb
push
xchg
popf
add
out
xor
andl
pop
and
push
adc
sbb
mov
jg
add
imul
pop
scas
ret
pop
or
mov
imul
jmp
or
inc
nop
cmp
add
cli
fwait
cmpl
add
inc
cmp
push
or
add
dec
adc
mov
adcb
push
les
sub
mov
or
sbb
or
xchg
dec
jp
jns
addb
lods
into
ret
outsb
outsb
dec
test
sub
subb
add
subb
mov
push
push
inc
ret
addl
pop
mov
outsb
jl
mov
in
scas
cmpb
push
add
cmp
iret
incl
rolb
addb
rolb
ret
pop
pusha
inc
and
xchg
and
pop
or
push
dec
loop
lret
mov
rol
xchg
xor
push
shll
test
movsb
jae
add
jno
daa
lcall
add
fmuls
scas
jb
pop
xchg
test
cli
mov
sbb
mov
add
addb
fcoml
add
int
push
lds
xchg
pop
and
scas
dec
dec
inc
jnp
dec
lcall
mov
jb
add
or
xchg
hlt
inc
jecxz
inc
jecxz
stos
rorb
cltd
add
xchg
shl
nop
or
fisttps
pusha
pop
mov
lret
rorb
inc
xchg
push
pop
mov
add
mov
fcmovnb
xchg
or
test
sbb
or
sbb
adcb
ja
es
mov
sahf
cmp
inc
jnp
sahf
pop
clc
inc
dec
push
pop
adc
inc
add
adc
xchg
xor
add
xchg
inc
push
or
push
loopne
mov
push
inc
sub
sbb
and
add
mov
xchg
adc
in
fnstenv
icebp
dec
aaa
add
adc
js
pusha
push
das
and
outsl
inc
inc
jp
rcll
ljmpw
sub
mov
add
add
aaa
stos
push
out
and
in
mov
push
xchg
jo
std
and
lcall
mov
mov
rclb
test
inc
add
ljmp
lret
in
or
and
and
imul
push
xchg
jle
fchs
inc
arpl
mov
jo
jl
adc
adc
sbb
int3
inc
sti
xchg
jp
cmp
push
jns,pt
push
mov
mov
mov
push
mov
dec
and
push
popf
mov
ret
sub
sub
or
daa
stos
and
and
cltd
sbb
ljmp
add
push
scas
and
jp
mov
fsubs
add
pop
test
sbb
and
jns
pusha
or
adc
mov
add
xchg
inc
and
gs
loope
xor
and
mov
xlat
pusha
fs
add
cmpsb
push
loope
adc
adc
mov
shl
fs
inc
mov
push
mov
push
adc
pusha
pop
roll
or
sub
ffreep
sbb
jns
outsl
out
push
jecxz
decl
pop
and
mov
push
in
or
fmul
rolb
push
fisubrl
daa
movsb
push
int3
loope
add
and
jp
test
xor
mov
aam
add
iret
add
xchg
mov
mov
orb
lcall
addb
jp
rorb
jmp
sbb
mov
mov
pop
and
inc
loopne
xor
push
fcoml
jns
sbb
sbb
pop
add
inc
ljmp
orb
dec
ftst
sarb
add
rcrl
mov
incl
in
xorb
add
iret
movsl
adcl
pusha
add
fs
loopne
xor
jmp
pusha
sub
and
push
andl
mov
orb
clc
sbb
push
loope
or
push
ret
das
cli
xor
jnp
fs
insb
inc
aam
fmulp
orb
and
mov
inc
add
jg
mov
and
xchg
int
and
jbe
loopne
cmp
lods
cmpl
and
fcomip
ja
adc
and
push
repnz
and
push
jo
rcl
sbb
pop
test
call
sub
add
sbb
or
inc
sub
clc
mov
test
nop
adc
movsl
mov
adc
pushf
jno
cmp
mov
pushf
adc
clc
fcoms
push
dec
mov
adc
push
test
subb
sarb
cmp
adc
add
clc
mov
add
add
jl
cld
sub
fldenv
movsb
in
outsl
adc
xor
stos
pusha
add
pop
add
and
popa
inc
inc
xor
sbb
add
mov
or
mov
or
in
adc
xor
outsl
pop
push
xor
dec
and
sub
push
stos
mov
outsb
push
xchg
add
and
call
insb
xchg
pushf
xchg
push
add
loope
jns
mov
xor
jmp
jno
add
rcrl
addl
js
fistpll
loop
pop
xor
add
and
push
add
and
mov
stc
dec
cmp
adc
sub
xchg
xchg
add
jp
push
add
xlat
cmpl
sbb
mov
inc
movsl
fldl
or
sbb
mov
jns
mov
and
and
sarb
mov
lods
sub
mov
cmp
and
cld
add
cli
data16
aaa
outsl
jo
xor
loope
inc
add
movsb
cmp
in
sbb
push
mov
sbb
jp
lcall
add
bound
or
cltd
mov
jg
jg
roll
jns
jo
sub
pusha
cltd
stos
adc
sbb
mov
or
lock
mov
or
xchg
lods
rcrl
push
add
add
mov
nop
push
cld
decl
aaa
jmp
int3
popa
and
and
and
mov
sub
sahf
or
cld
inc
loope
xchg
inc
jns
cmp
data16
popf
clc
pushl
sbb
jo
jo
jne
or
iret
mov
xchg
ret
jle
pop
inc
inc
mov
adc
inc
jne
push
subb
jbe
aad
fcmovnbe
das
ret
pusha
loopne
iret
pusha
push
mov
cltd
and
add
ret
mov
push
ret
loop
pop
sarb
and
mov
dec
pop
push
lock
sub
stos
lcall
cmp
adc
add
iret
jp
xchg
movl
es
jmp
in
gs
sarb
popa
adc
sub
loop
lcall
shrl
shrb
clc
xchg
stc
test
xor
lods
test
sub
andl
mov
mov
pop
pop
xor
pop
adc
sbb
das
enter
lcall
lock
aam
pop
add
test
test
xor
daa
cwtl
movsl
add
stos
in
int
jmp
jp
jno
mov
cwtl
mov
add
cmp
ja
sbb
popf
sbb
jbe
push
sub
xor
leave
loope
loop
sti
sbb
pushf
ljmp
lcall
jo
fwait
push
adc
jns
jne
sbb
mov
or
jl
and
mov
imul
sbb
xchg
sti
mov
and
lock
das
mov
lahf
nop
add
shrl
xor
push
rolb
inc
pop
shlb
xor
dec
lock
bound
jbe
cmpb
scas
add
orl
xchg
lock
jo
inc
inc
test
add
in
addr16
clc
add
or
in
push
add
in
ljmp
loop
push
pusha
neg
jp
inc
jp
rolb
outsb
das
xor
or
push
sarl
sbb
popf
sbb
outsl
rolb
aam
mov
lock
mov
add
sahf
lock
cmp
xchg
adc
bound
sub
sub
pop
in
lock
popf
icebp
and
rcr
lcall
adc
imul
or
subl
cli
and
add
add
mov
loop
mov
adc
xchg
pop
pusha
push
test
rcrb
filds
mov
cs
mov
cmp
push
adcl
mov
rcll
ret
pusha
mov
inc
adc
push
adc
loopne
pop
cwtl
push
jb
adc
outsb
nop
dec
rol
add
inc
cld
add
insl
mov
and
mov
jo
adc
fsubrl
pusha
stos
movsb
mov
push
push
adc
jo
adc
inc
sbbb
inc
pusha
add
xchg
ror
jp
inc
fstpt
sub
es
adc
nop
or
test
add
mov
leave
leave
loopne
push
or
or
add
out
clc
sarl
or
ret
adc
rcll
out
sbb
dec
mov
push
and
call
adc
or
lock
pop
outsb
push
shlb
push
scas
inc
cmp
push
adc
loope
arpl
mov
les
ja
int3
and
adc
cmpsl
lcall
jns
mov
xor
add
and
pop
adc
lods
cmp
push
std
call
mov
push
mov
add
add
add
sbb
in
pusha
jne
rorb
out
pushf
mov
jge
push
dec
mov
in
nop
out
mov
adc
cmc
and
mov
stos
pop
mov
mov
lock
mov
push
subb
negl
cltd
mov
push
mov
pop
sbb
adc
xor
lea
clc
xchg
in
add
sub
inc
and
bound
mov
push
and
jge
push
in
loopne
add
mov
out
xor
push
call
sub
dec
lahf
add
jge
push
daa
pusha
dec
aam
mov
sbb
mov
test
adc
pushf
aam
and
fldl
push
rcll
or
add
jns
xorb
les
in
sahf
cmp
fisubs
xor
inc
add
test
sub
cmc
jecxz
es
or
into
dec
bound
add
push
shlb
mov
dec
call
push
arpl
ret
fdivrp
or
outsb
inc
fnstsw
aam
ret
stos
lods
cmc
add
mov
icebp
and
xchg
pusha
nop
mov
mov
add
cld
xchg
add
add
mov
add
hlt
add
add
dec
sub
add
inc
cmp
inc
add
inc
into
add
lock
dec
mov
inc
add
fildl
or
xor
cmpl
ljmp
bound
loop
bound
movsb
lea
cmp
outsb
lods
inc
and
add
incb
mov
mov
add
push
pop
inc
sti
cmc
roll
addb
sub
in
mov
sbb
ds
or
and
test
add
adc
cmp
out
sbb
jo
push
cld
adc
push
or
adc
imul
mov
xchg
mov
push
push
push
es
mov
inc
add
jle
add
jl
lds
xchg
popf
mov
shrl
fdiv
or
dec
lock
insb
xor
mov
adc
insb
cmp
mov
sarl
adc
or
push
adc
jns
pop
mov
adc
fxam
popf
ftst
lods
sub
es
or
xchg
mov
jle
and
cli
sbb
inc
pop
sar
lods
out
mov
inc
xor
xor
je
adc
jp
rcrb
fdivl
lds
outsb
cmpsb
ds
dec
push
and
in
push
lret
ja
inc
mov
push
and
int
inc
arpl
movsl
ljmp
mov
inc
adc
ret
decb
cltd
or
mov
inc
push
adc
mov
lcall
sti
ss
and
or
jmp
push
cwtl
hlt
jo
int
cli
adc
push
mov
movsb
pop
addb
sub
mov
dec
cltd
mov
lcall
inc
push
xchg
sbb
clc
adc
add
rcrb
mov
scas
mov
add
rorb
insl
sub
lea
xchg
adc
addr16
sbb
adc
fnsave
xchg
xchg
push
testl
xchg
lcall
cli
testb
fiaddl
in
dec
rclb
jl
test
add
mov
xchg
xchg
push
xchg
jns
bound
push
cltd
lods
sbb
jl
sbb
pop
sar
adc
adcb
fmull
adc
clc
aad
push
sub
inc
bound
shr
outsl
inc
roll
or
addb
outsl
decl
push
sarl
popa
adc
outsl
lcall
xchg
jbe
enter
jns
lock
sbb
push
mov
cmp
add
rcrb
jns
xlat
faddl
mov
push
jp
loop
sbb
cmp
xchg
sbb
movsb
inc
movb
or
inc
js
sbb
popa
mov
pop
add
xor
rolb
cli
push
loopne
ret
inc
in
les
mov
fisubl
mov
adc
loope
call
lret
popf
inc
xchg
sbb
jg
rcr
xchg
add
jns
xchg
rorl
clc
pop
dec
add
sub
ljmp
xchg
sub
mov
ficoms
call
sub
adc
mov
sti
fwait
fs
sub
rcrb
jg,pt
jo
ret
lods
inc
jl
pusha
add
jl
and
pop
adc
inc
sub
cmpsb
loopne
outsb
loop
sub
test
and
rolb
insb
sbb
outsl
scas
mov
mov
sub
push
test
in
test
test
fisubrs
mov
lea
rolb
or
jo
scas
sbb
ds
add
dec
mov
lock
sbb
outsb
adc
testb
inc
mov
add
cld
insl
jp
adcb
test
dec
fldl
inc
add
sbb
mov
xchg
mov
fistpl
rorb
push
shrb
pop
movsb
adc
clc
cwtl
ret
pop
mov
mov
dec
lock
in
fs
push
popf
add
or
loopne
loopne
xchg
add
in
adc
push
fdiv
test
test
adcl
mov
and
arpl
add
xor
fbld
inc
push
mov
bound
inc
push
fbld
xchg
sub
scas
dec
fwait
push
and
neg
mov
cwtl
and
cmpsb
and
xchg
and
outsb
pusha
daa
push
and
rolb
cmp
daa
add
add
mov
jo
jg
add
das
add
addb
inc
add
sahf
xor
movsb
sub
loopne
adc
add
cli
cmp
data16
mov
ljmp
shl
or
mov
sbb
xchg
rorb
sub
xlat
xor
dec
popf
mov
pushf
inc
roll
inc
ja
addl
add
pop
jmp
xchg
rcll
mov
add
aam
sahf
fsubrl
pop
jecxz
dec
inc
pop
lods
or
jno
adc
adc
lds
lods
xchg
jmp
decb
jno
cwtl
shlb
mov
cld
xchg
adc
test
push
les
fwait
inc
repnz
in
inc
je
sbbl
scas
scas
shll
test
call
mov
push
fcoml
sub
scas
bound
ja
adc
mov
inc
cmovle
adc
lock
in
sbbb
loop
or
xchg
xchg
inc
sbb
outsl
in
push
jb
or
dec
push
or
sub
int
in
aam
or
and
lcall
and
sbb
adcl
popa
sbb
jl
pop
lcall
pop
sbbb
and
shlb
or
rcrb
fwait
fwait
outsb
lea
cmp
pop
add
sbb
shll
jne
mov
add
pusha
xor
or
stc
fwait
movsl
or
xchg
mov
inc
or
dec
les
and
add
jae
and
add
rclb
and
test
xor
pusha
out
sbb
adc
movsl
test
mov
call
es
sbb
rcl
mov
or
add
mov
neg
fstps
mul
pop
jo
sahf
or
xchg
sbbb
mov
adcb
mov
test
dec
sub
jge
cltd
in
push
and
shlb
xchg
test
in
jg
into
ret
xchg
mov
lock
and
add
pushl
icebp
sbb
adc
das
xchg
xor
mov
or
outsl
test
jmp
push
jg
hlt
incl
test
cld
sbb
lods
andb
hlt
adc
inc
shrl
add
lret
test
shlb
push
je
test
rclb
clc
aad
add
hlt
test
push
cs
les
in
fcomps
and
test
test
add
mov
arpl
mov
and
repnz
pushf
sub
cmp
std
stos
mov
push
xchg
mov
sub
bound
adc
jp
add
lcall
nop
add
fsubp
cmpsl
add
mov
ret
add
add
dec
stos
inc
scas
mov
in
xlat
sub
stos
mov
scas
pop
mov
les
movsb
shl
inc
inc
mov
mov
add
lcall
adc
outsb
mov
pop
inc
jp
sbb
dec
pop
test
nop
and
add
out
ja
sbb
add
hlt
jns
mov
add
jp
mov
adc
jae
xchg
jbe
js
lods
lret
ret
loop
push
and
int3
movsl
call
and
or
pop
in
rolb
push
ljmp
loope
lret
je
js
and
rclb
add
mov
mov
push
jns
add
and
and
fiadds
inc
or
in
into
outsb
fmuls
js
jg
int3
gs
mov
add
cltd
nop
xchg
popa
sti
pop
mov
inc
cmp
add
xchg
pusha
inc
add
xchg
ljmp
or
xor
shrb
inc
pop
or
sbb
push
add
xor
out
nop
sbb
and
or
cwtl
xorl
fxam
xchg
sub
or
sbb
lahf
inc
sub
lahf
xchg
xor
inc
adc
fcomip
pushl
ret
push
push
cltd
sbb
mov
mov
push
mov
sbb
pushl
add
add
add
adc
fldl2t
decl
and
pop
or
adc
sahf
aam
pusha
or
ret
cmpsb
shl
add
adc
sbb
icebp
shl
mov
ret
mov
inc
and
outsb
fidivl
jo
push
add
adc
xor
adc
shrb
pop
rorb
mov
movsb
bound
subb
or
and
and
mov
insl
mov
mov
scas
loopne
test
jecxz
pushl
out
cltd
lods
scas
in
mov
sarb
aam
jge
or
bnd
repnz
call
and
pop
or
pop
mov
inc
sbb
pushl
sbb
shll
mov
xchg
lods
lods
pop
sahf
adc
rcrb
outsb
loop
adc
mov
data16
or
fldt
xchg
add
test
gs
ror
jns
nop
out
int3
dec
cld
xor
rcll
loopne
push
xchg
sti
xchg
into
stos
mov
out
dec
push
add
adc
test
js
sbb
xor
pop
sub
add
xchg
add
aam
loop
adc
xchg
cs
scas
clc
mov
sub
mov
jecxz
into
add
dec
sar
dec
call
fcmovnb
or
add
loope
in
jg
pop
lds
fwait
in
loop
lods
adc
pop
icebp
popa
push
adc
xchg
out
sti
xchg
stc
insl
mov
or
mov
adc
out
push
xchg
mov
cld
outsl
lock
xchg
mov
sbb
ljmp
fbld
pop
iret
addb
push
xchg
aam
cltd
into
sbb
or
adcb
mov
push
push
mov
sbb
ret
add
mov
and
mov
pushf
mov
shl
nop
popf
test
add
push
jg
or
add
in
add
out
sbb
inc
nop
mov
adc
imul
adc
adc
xchg
dec
adc
push
mov
rol
pop
adc
adc
push
mov
xchg
pop
jo
xor
nop
sbb
xchg
xchg
je
adcb
cli
push
push
pusha
adc
or
icebp
mov
push
mov
push
sarl
cmp
xor
and
adc
sbb
inc
xlat
mov
xchg
out
loopne
lock
jg
push
mov
xchg
stos
sbb
add
cltd
adc
ss
pusha
and
mov
xorb
push
jbe
imul
mov
inc
stos
dec
in
clc
sbb
test
mov
add
addl
out
test
out
and
mov
out
sarb
shrb
pop
cwtl
lock
pushf
lods
xchg
stos
in
das
clc
mov
jecxz
mov
in
jo
pusha
lock
add
mov
jbe
mov
cmp
loop
icebp
mov
inc
adc
push
pushf
out
fsubrl
std
fistl
imul
shll
es
loopne
in
add
xchg
lock
sub
add
cmp
inc
jp
mov
xlat
xchg
add
mov
mov
or
nop
sbb
test
lret
mov
or
xor
mov
dec
mov
js
adc
mov
add
test
mov
loopne
jl
pusha
mov
sbb
jb
inc
insl
stos
inc
loop
add
adc
pop
add
rcll
sarl
call
cltd
jae
mov
push
in
fisubl
push
pop
dec
xor
cld
mov
push
xor
push
mov
mov
pop
sahf
insl
add
and
push
mov
xor
loop
insb
sbb
jns
add
adc
xchg
lcall
and
add
dec
stos
push
ss
cmp
insl
hlt
or
jns
sub
adc
test
sub
inc
adc
rolb
and
inc
addb
and
add
add
mov
cmp
int3
dec
mov
ret
pusha
fwait
sarb
push
popa
in
movsl
dec
imul
loopne
sbb
mov
test
adc
add
sub
push
aaa
push
stos
pusha
int3
pushf
fwait
cmp
push
add
cmp
sbb
xor
fisttps
dec
xchg
dec
xchg
lcall
or
pop
int3
popa
test
jle
xor
popf
sar
outsl
stos
add
or
cmp
jbe
out
or
jns
addb
clc
jg
leave
and
push
and
push
fcmovbe
sbb
cli
jg
cmp
icebp
adcl
xchg
jns
ss
hlt
dec
mov
add
sub
jns
add
jmp
jns
call
mov
jbe
pop
mov
scas
sbb
scas
nop
and
add
add
insb
push
jns
or
jb
add
inc
sbb
jg
mov
out
add
xchg
stos
shll
adc
dec
inc
mov
stc
sbb
fists
inc
ds
addb
jp
ret
mov
push
dec
jmp
add
lods
and
inc
daa
mov
das
fisttpl
js
int3
mov
xchg
subb
cmp
sbb
outsb
jns
ret
push
sbbb
sbb
adc
sbb
push
pop
push
add
and
adcl
or
lods
pop
jno
add
xchg
cltd
adc
xchg
daa
xchg
or
aas
or
mov
rorb
fcmovb
pop
and
push
cmc
aas
ret
clc
lods
ret
in
add
push
push
vmwrite
nop
push
iret
sbb
inc
add
fadds
inc
sbb
ret
fildll
jno
cs
xchg
sbb
xchg
insl
or
inc
out
add
sbb
decl
xchg
sbbl
sti
test
insl
in
adc
push
aam
sub
mov
sahf
add
dec
rcrb
xchg
xor
fisttpl
cwtl
or
je
pusha
pusha
inc
out
xor
lea
xlat
js
addr16
adc
jg
popf
addb
sub
out
cltd
jp
sbb
aam
stos
inc
sbb
loope
rolb
sbbb
mov
jp
lock
orl
inc
or
and
add
iret
pushf
mov
pop
add
add
ret
sub
jle
mov
and
adc
mov
dec
insb
out
dec
sub
cmp
ffreep
imul
ret
ljmp
test
or
pop
insb
loopne
pushf
enter
and
test
or
inc
loope
bound
or
enter
fisubrs
loopne
push
mov
stos
inc
stc
loopnew
test
adc
test
mov
test
jl
stc
popf
and
test
inc
pop
dec
incl
sub
imul
call
and
add
pop
push
sbb
or
or
and
das
xchg
inc
mov
dec
mov
dec
push
push
inc
pop
inc
fsubs
xlat
adc
loopne
jecxz
mov
outsb
cltd
loope
data16
xchg
jg
fcomip
in
adc
pusha
aam
loop
rcll
mov
inc
add
mov
add
xor
pop
icebp
inc
xor
sahf
imul
mov
jmp
notl
add
xor
adc
incb
cltd
push
sub
lods
and
das
nop
push
pop
push
ret
pop
mov
in
hlt
xchg
xchg
mov
mov
and
imul
pop
xchg
bound
push
test
in
add
fiaddl
test
jns
xor
in
push
cmp
push
or
orb
jbe
leave
les
add
add
add
out
aam
push
mov
adc
mov
mov
push
push
aad
xchg
inc
test
loope
pop
or
dec
and
or
adcb
popf
sar
or
pop
aaa
outsb
inc
outsb
sbb
add
mov
shlb
push
mov
jne
or
jns
lret
sbb
or
sbb
int
and
test
push
sbb
add
jmp
out
sbb
inc
lret
inc
mov
adc
jp
nop
add
jg
and
and
push
push
add
sbb
add
les
add
ljmp
movsb
mov
sbb
in
mov
and
or
sbb
rorb
pop
jno
imull
loopne
push
mov
push
cld
les
cmp
cmp
sahf
mull
push
mov
or
scas
push
leave
jp
cmp
stos
mov
xchg
loopne
cs
inc
inc
sbb
test
add
jle
cmp
int3
fs
fildl
popf
jl
pusha
or
loop
iret
outsb
mov
push
jns
mov
inc
jmp
ret
sub
add
ret
pop
mov
add
jmp
or
sbb
add
jmp
movsb
or
cmp
jns
and
subb
lcall
sahf
jns
shrb
mov
and
pop
sub
orb
push
pop
stc
sbb
adc
or
sbb
cmpsb
mov
pop
xchg
aas
decl
inc
add
adc
push
pop
push
inc
hlt
lods
mov
or
test
decl
add
or
mov
adc
and
add
jns
adc
notb
adc
outsb
xor
aad
mov
mov
call
xor
xchg
scas
test
out
rolb
jmp
incb
push
test
and
adc
lcall
jp
xlat
scas
jecxz
or
mov
test
les
mov
aaa
adc
mov
inc
addr16
add
xor
popa
add
iret
inc
pop
and
mov
ret
adc
call
mov
mov
xchg
or
mov
imul
shlb
test
ljmp
adc
outsl
mov
xchg
push
mov
jno
sbbb
mov
sbb
fidivl
inc
int
popf
jo
mov
or
imul
xor
adc
dec
es
inc
pop
out
jbe
out
mov
cli
add
sub
idiv
repz
sub
jp
cli
subb
cmc
xor
rolb
adc
das
sar
outsb
out
aam
pop
sbb
scas
negl
outsl
int
pop
sbb
pushf
lret
adc
idiv
jg
push
xchg
inc
xchg
inc
stos
inc
in
push
mov
cltd
mov
mov
inc
ret
add
push
fmuls
push
xchg
stos
jp
xor
pop
jp
stos
cmp
bound
sub
mov
ret
data16
jg
cmc
sarl
hlt
sti
sbbl
jns
addb
pop
adcb
xchg
lock
repnz
xchg
push
roll
add
xor
ljmp
int
lock
mov
sbb
pop
fisubl
or
adc
fbstp
hlt
xor
jmp
scas
dec
loopne
es
data16
adc
and
mov
add
push
cltd
rcrl
rolb
sarb
inc
pop
andb
icebp
add
jp
adc
roll
addr16
dec
inc
rorb
lock
loopne
fistpll
aad
cltd
subl
sbb
ret
push
pop
iret
popf
xchg
lea
test
rclb
inc
js
incl
push
xor
test
orb
loopne
mov
ds
xchg
pusha
jle
inc
sub
addr16
rcrb
lock
aaa
dec
data16
xchg
jl
xor
shrb
rcrl
mov
mov
frstor
mov
mov
subb
and
cld
mov
nop
mov
inc
push
and
dec
push
inc
rolb
test
mov
flds
mov
outsb
cs
scas
or
add
imul
sbb
cld
pop
push
ss
addb
ror
mov
xchg
pusha
pop
adc
subl
pushl
and
lcall
loopne
repz
ja
cmc
rclb
sub
mov
add
call
clc
and
push
adc
nop
adc
daa
subl
adc
test
jecxz
mov
shll
mov
sbb
ret
ficoms
stos
pop
fcoms
mov
cltd
ljmp
outsb
out
xor
insl
test
xchg
cltd
mov
and
adc
push
loope
and
das
push
nop
in
xor
xchg
jns
nop
xor
mov
rolb
popf
loopne
and
nop
jns
add
mov
add
pop
push
in
mov
xchg
lock
xchg
mov
js
loope
and
add
out
mov
add
add
push
add
nop
enter
adcb
testb
push
add
jg
mov
loopne
xchg
pusha
pop
sbb
sbb
xor
adc
sbb
add
daa
push
sbb
mov
adc
and
fs
add
inc
sub
sbb
outsb
loope,pn
adc
add
into
aas
add
stos
cmp
dec
add
mov
push
roll
add
inc
and
sar
sub
lahf
in
xchg
lss
or
jecxz
sarw
ja
xchg
aad
enter
jns
push
enter
mov
cli
mov
add
into
cltd
mov
enter
mov
sbb
push
add
mov
in
and
inc
push
or
or
dec
mov
or
out
test
inc
inc
into
jo
int3
push
andl
mov
push
or
inc
sbb
adc
sbb
push
sbb
cld
push
xor
inc
fnstenv
pushl
pushf
sbb
add
lahf
rcrb
rclb
xor
mov
rcl
push
and
sbbl
in
push
add
inc
sub
inc
ss
shrb
enter
js
mov
cmp
sbb
das
mov
push
imul
lret
mov
stc
icebp
pop
rclb
push
adc
test
pusha
or
mov
dec
stos
and
mov
or
test
xor
sub
fistps
cmc
sbb
dec
lods
inc
outsb
push
and
fwait
lret
inc
test
mov
add
add
outsb
in
orb
in
test
push
jno
xchg
mov
or
lahf
jns
fucomip
xchg
stos
nop
or
nop
lret
stos
xchg
push
jmp
loopne
repnz
lret
jecxz
and
cld
lcall
int
inc
xchg
adc
xor
or
repnz
in
xchg
leave
insl
loope
icebp
mov
mov
fimuls
add
sbb
jg
test
pop
sarb
or
add
xchg
xor
add
outsl
and
push
add
into
lret
ja
mov
xor
stc
sub
scas
mov
cmpsb
scas
cltd
jo
mov
ret
cmp
mov
fsubs
add
xor
pop
aad
mov
mov
decb
int3
pop
mov
adc
push
xchg
movsb
inc
ret
lea
rcr
shll
push
loope
ret
jae
cli
xorl
xchg
mov
sub
or
cltd
mov
addl
sbb
dec
lea
fnstsw
mov
push
xchg
subb
adc
and
cmp
or
mov
lods
mov
popf
mov
loopne
and
add
or
lods
xchg
sbb
or
mov
sub
je
sub
outsb
fdivrl
js
arpl
nop
xchg
push
and
movsb
mov
push
sbb
outsb
js
pushf
add
lret
add
nop
mov
lods
mov
sub
movhlps
cltd
outsb
push
popf
mov
mov
xor
mov
arpl
sbb
je
int3
test
ret
test
mov
fstpl
pusha
cmp
inc
sub
sbb
out
loope
mov
adc
popf
add
and
push
cs
push
mov
and
ss
or
orb
jg
movb
sbb
adc
jge
xor
push
push
repnz
or
sbbb
push
inc
lcall
ret
int
inc
mov
inc
scas
add
mov
and
mov
cli
popa
sbb
outsb
lret
cmp
sub
add
xchg
test
xor
add
imul
adcb
and
jno
test
inc
mov
add
lret
js
incb
jno
imul
pusha
xor
mov
fst
pop
add
out
push
gs
mov
lock
add
sarb
call
mov
stos
inc
push
in
dec
ret
jmp
aas
sbb
aas
clc
add
test
jbe
enter
jbe
cmp
push
jp
pop
jg
mov
pop
addb
dec
in
les
sbb
sbb
insb
test
xlat
shlb
in
sbb
jns
cmp
cld
or
dec
mov
mov
add
test
shrb
movsb
ljmp
push
push
lea
push
or
inc
xorb
cmp
sub
js
sub
sub
lcall
sub
popa
adc
insb
lds
inc
ret
lahf
adc
push
cs
xor
rcrb
ljmp
xor
xor
stos
in
add
adc
jmp
inc
xchg
iret
orl
or
test
inc
insl
inc
lods
lcall
mov
add
add
cmpsl
sub
incb
adc
xchg
adc
jg
fldt
and
add
test
or
pop
stos
mov
pop
and
add
pop
inc
out
inc
add
cmp
adc
movb
inc
or
cltd
sub
or
mov
push
orb
add
addb
test
push
push
sbb
inc
cli
xchg
sbb
pusha
fwait
outsb
ret
imul
adc
test
adc
roll
popa
adc
add
cs
sbb
fwait
ret
jns
mov
int3
push
pop
mov
test
in
inc
cmp
and
rcll
pop
sbb
mov
cmp
pop
or
adc
je
dec
stc
loope
shlb
popf
xchg
mov
add
loop
fadd
xor
loopne
sbb
inc
or
int
sbbb
add
test
mov
adc
gs
add
or
push
xor
loope
pushl
outsb
sub
shll
jns
rclb
insl
or
push
movsb
or
insl
mov
orb
or
mov
rcrb
es
mov
lock
fs
es
orb
add
push
push
inc
mov
pop
stos
int
add
push
sbb
sub
pop
test
mov
adc
xchg
xor
ja
pushl
jecxz
and
cld
inc
push
iret
inc
loope
sbb
push
daa
test
mov
dec
add
mov
add
pop
mov
cli
jnp
test
popa
pusha
cmp
jns
mov
addr16
nop
cmpsl
mov
add
jne
andb
jns
add
mov
test
out
xlat
add
addr16
sbb
clc
mov
inc
sbb
insl
in
imul
cltd
inc
mov
push
nop
xchg
adc
mov
rcrl
pusha
add
add
lods
xchg
in
les
ds
xchg
nop
adc
mov
push
add
mov
ret
fcom
push
cmpsb
add
clc
popf
and
roll
aad
sbb
sbb
and
inc
mov
dec
sbb
bound
popa
inc
shl
ret
or
pusha
lahf
jecxz
ret
sbb
and
add
xchg
addb
adc
std
fildll
push
jmp
add
push
sbb
xor
pop
repnz
add
and
push
mov
add
lods
jo
out
add
in
sub
cmp
add
push
or
and
sbb
xor
stc
lods
stos
sarl
outsb
xchg
shll
cmpsb
cltd
xor
pusha
add
shll
insb
cmp
je
push
fiadds
addb
or
xorb
pusha
or
test
fs
sub
rorl
loopne
xor
xor
sbb
adc
gs
pusha
xor
add
add
or
bound
in
outsl
ljmp
bound
jecxz
add
sbb
dec
stc
inc
or
xor
incl
cltd
pop
loopne
inc
adc
inc
inc
sub
ja
jns
adcb
add
mov
mov
mov
addb
add
stos
ret
stc
add
lea
aam
pusha
jno
pop
and
pop
lcall
mov
xor
mov
call
in
mov
test
cmp
jp
es
mov
cmp
outsl
sbb
roll
xchg
fwait
jle
pusha
int3
in
popf
push
push
or
jae
xchg
in
push
imul
add
mov
subl
test
push
roll
pop
lock
leave
popa
aam
cmp
xchg
xor
ficompl
outsb
push
inc
add
fmuls
or
insl
and
mov
jb
cli
cmpsb
adc
push
xchg
mov
mov
jns
add
mov
jb
xor
sbb
add
scas
xchg
dec
sbb
in
dec
jmp
push
mov
sbb
add
rclb
int3
leave
and
adc
sbb
mov
push
outsl
pop
mov
into
aad
add
jnp
aam
jge
jg
pusha
push
and
roll
sti
stos
sub
mov
jns
jl
testl
add
dec
jns
test
testl
es
inc
add
loope
das
addb
xorb
inc
xor
imul
mov
sbb
jns
fsts
sbb
js
sub
mov
mov
outsl
jnp
add
jp
jns
adc
shlb
adc
add
rol
ret
sbb
sar
or
adc
and
xchg
ds
stc
xchg
adc
xor
popa
outsb
inc
add
or
sahf
inc
into
cmpb
sti
cltd
mov
mov
push
std
nop
or
xor
cmpsb
xchg
enter
mov
add
add
test
in
in
inc
xchg
push
out
int
add
lock
sub
add
or
xchg
test
js
pusha
and
sbb
jge
dec
andb
jp
add
out
aas
push
push
fidivrl
pop
sbb
fiadds
jno
ja
mov
bound
add
xchg
stos
adc
data16
xor
cmp
push
nop
repz
adc
add
mov
pusha
loope
add
les
jg
mov
pusha
push
jp
sti
xchg
rolb
xor
incb
jecxz
lret
xchg
aam
jns
adc
clc
push
hlt
in
inc
addb
add
add
and
jg
push
out
sti
outsb
out
orb
and
adc
push
les
sbb
inc
divl
and
fs
sbb
stos
add
icebp
test
or
fisttps
test
test
dec
insl
loopne
add
push
stc
pop
sub
jg
adc
push
sbb
sbb
pop
mov
push
movl
adc
loopne
call
sbb
push
jno
arpl
push
faddl
movsl
pop
add
xor
mov
sbb
nop
cmpl
fs
in
jns
int3
jge
or
gs
dec
ss
clc
sbb
imul
pop
fs
xor
mov
xor
sbb
add
sbb
dec
es
push
lcall
lret
dec
add
xorb
cmp
jo
lods
pop
orb
mov
or
movsb
lcall
hlt
sti
popa
xor
loopne
loopne
mov
data16
test
mov
fadds
rolb
mov
popf
incl
shll
jno
cmp
incl
leave
xor
adc
subb
mov
ret
fcoml
mov
lds
push
in
mov
mov
add
adc
xor
sub
mov
sub
xchg
lcall
or
movsl
or
loopne
jp
xor
mov
nop
clc
leave
icebp
push
imul
pusha
add
sbb
les
std
mov
pop
mov
adc
out
test
mov
push
pushf
sti
or
pop
cmp
mov
and
jae
push
popa
add
ljmp
ljmp
je
leave
add
pop
in
inc
test
popa
insl
xor
adc
jo
in
orl
mov
ret
dec
add
lds
shlb
rolb
stos
psraw
hlt
and
icebp
je
cmc
loop
les
inc
push
dec
mov
jns
rclb
add
adc
outsl
int
insb
adc
add
push
add
mov
sbb
xor
mov
cwtl
andb
adc
nop
and
nop
in
sti
cmp
add
into
fdivl
and
mov
ljmp
and
mov
js
rcrb
pop
cltd
mov
push
add
push
andb
xor
sub
sub
pop
fcoml
ret
xchg
in
sbb
subb
aad
adc
jmp
mov
xor
add
cmpsl
push
jno
in
lods
jno
in
lods
inc
xor
in
dec
xor
cmc
js
cmpsb
push
push
ja
inc
lock
in
or
es
sahf
les
int3
loopne
mov
js
call
mov
ret
pusha
add
cmp
add
or
outsl
jp
pop
std
jg
inc
mov
mov
icebp
popa
add
cmp
stc
adcl
das
adc
lea
xor
jg
pop
mov
adc
shrb
adc
or
add
pop
add
or
cs
or
adc
add
loop
pushl
dec
hlt
or
adc
stos
sub
shll
sub
push
pop
jle
and
scas
sahf
pop
fcom
stos
add
xor
pop
test
bound
add
sub
cmp
dec
ret
jg
ljmp
lock
nop
fcoms
xor
outsl
aaa
call
nop
ss
shlb
nop
sar
outsl
jp
dec
loopne
dec
xchg
mov
pushf
add
mov
mov
xor
notl
imull
add
cli
lcall
sbb
ljmp
jge
adc
popa
mov
sbb
imull
mov
or
push
and
ret
add
xchg
cltd
dec
insb
xor
out
xchg
mov
add
hlt
pop
movsb
jns
imul
mov
mov
call
lock
push
inc
xor
jo
pop
roll
aam
xchg
inc
xor
sbb
shlb
sbb
out
mov
xchg
add
dec
mov
in
push
pop
out
xchg
add
out
in
shlb
push
push
shlb
aam
and
add
pusha
add
cmp
ss
mov
push
jns
jns
add
sbb
mov
push
outsb
and
fs
imul
ja
cmc
enter
dec
and
aad
sbb
xchg
inc
mov
xor
lods
pop
test
push
decb
shl
mov
or
ljmp
stos
inc
and
cmp
inc
and
add
aad
push
shrb
cwtl
mov
in
jns
imul
mov
in
adc
cmp
adc
jge
jns
push
jae
jne
rorl
and
ret
andl
pushf
fwait
stos
add
xchg
addr16
lcall
test
mov
adc
test
andl
mov
fisubrs
lock
xchg
add
movsb
cmp
lods
adcb
xorb
stos
and
or
and
xchg
shll
push
xor
inc
mov
mov
adcb
add
or
popf
adc
push
gs
adc
imul
jg
xchg
in
ret
stc
xor
jp
addl
orb
xor
add
aas
add
sbb
push
loopne
lahf
sub
jge
or
xchg
test
mov
xchg
lea
or
push
std
outsl
lcall
orb
xor
test
xor
or
orb
data16
das
mov
int3
andb
add
jo
sbb
sar
ret
xor
inc
pop
sub
inc
addr16
loope
pop
sub
pop
or
or
push
push
mov
roll
adcb
outsl
adcb
mov
inc
jno
or
js
inc
test
out
rorb
dec
xchg
xchg
rorb
or
cltd
inc
sub
push
mov
adc
pop
sub
int
adc
pop
xor
mov
and
sbb
insb
or
and
aaa
add
and
or
in
lods
mov
shrd
sbb
in
movl
xor
sbb
xchg
int3
or
js
fnsave
lods
stos
imul
icebp
filds
add
jns
push
sbb
rolb
or
pop
fwait
aad
in
in
ret
roll
test
addr16
jg
fs
lret
xchg
outsb
movsb
test
mov
mov
in
jns
add
rcr
adc
adc
inc
mov
gs
nop
or
add
cli
or
pusha
or
rclb
iret
fisubl
pusha
adc
fs
test
adc
mov
xor
subl
cmpl
xchg
movsb
add
add
inc
pop
cmp
pop
cmp
pusha
rorb
loop
andl
rolb
push
rolb
inc
and
inc
push
adc
or
in
cs
insb
sbb
and
and
mov
mov
push
add
mov
lea
jge
loopne
and
int3
adc
adcl
loopne
push
and
orb
pop
insb
je
insl
js
insb
adc
fisttps
mov
mov
fidivs
sbb
rcrl
add
call
pop
in
out
rorl
cmpl
mov
fstps
les
rolb
outsl
nop
mov
sbb
outsl
mov
data16
frstor
popf
xchg
inc
add
jp
sub
adc
pop
dec
cld
fbstp
mov
xchg
pop
sbb
xchg
jg
stos
mov
loopne
popf
inc
jp
lea
mov
mov
add
pushf
xchg
movsb
xchg
add
cs
cmpsb
std
inc
jecxz
mov
mov
pusha
add
add
inc
jmp
add
or
push
popa
out
mov
or
push
mov
pusha
mov
outsl
xor
loopne
enter
add
xchg
dec
cld
inc
sbb
das
add
cs
inc
xchg
outsb
xchg
loop
mov
and
add
push
jg
outsb
xor
dec
and
inc
fldl
xor
outsb
or
sbb
push
pop
push
test
add
in
repnz
and
mov
pusha
add
adc
adc
jg
js
adc
jbe
xchg
and
in
fcmovnu
and
or
add
and
sbbb
test
lcall
jne
add
inc
push
test
ficomps
xor
test
clc
bound
mov
stc
cmp
and
pop
movsb
mov
les
adcb
cmp
andl
popf
xor
sbbb
and
scas
pusha
or
mov
loopne
inc
and
sbb
cld
out
or
in
lods
roll
nop
and
movsl
sub
push
and
adc
mov
mov
jns
pop
mov
push
sti
adc
stc
shll
add
jns
push
mov
decl
bound
or
bndstx
cmpsb
xchg
lock
mov
lea
push
or
shrb
int
sbb
push
jecxz
cmpsb
fcoms
mov
sub
lret
adc
xor
filds
call
test
mov
adc
xor
xchg
and
mov
and
repnz
in
lock
jp
test
or
pop
xor
hlt
lods
jp
lock
in
test
sti
xchg
add
ficoml
in
lods
nop
icebp
aad
xchg
jp
aam
lock
push
aaa
cld
sbb
out
in
inc
add
sti
xchg
jp
add
test
fwait
and
inc
mov
pop
sbb
shll
or
adc
sbb
adc
add
push
fdivp
jg
pop
or
jl
sbb
or
or
out
testl
inc
daa
or
mov
sbb
nop
sub
mov
stos
adc
nop
add
push
inc
sti
inc
not
xchg
push
negl
mov
pop
xchg
mov
push
push
mov
dec
pop
dec
insb
mov
mov
xchg
jle
pop
call
cwtl
jns
filds
loope
les
push
sbb
sub
dec
sbb
int
dec
popa
add
std
jg
mov
pop
sub
addl
and
and
jp
ja
or
sub
push
jns
push
aam
and
scas
pushl
mov
sub
dec
add
fldcw
sub
add
push
xchg
shrb
and
andb
add
or
add
scas
xor
push
cltd
in
fdivrp
pushl
or
push
loop
adc
nop
fwait
in
xchg
jo
jp
jo
sbb
or
rclb
cld
and
add
cmpsl
push
popf
out
jp
add
in
adc
inc
or
push
or
iret
adc
out
adc
test
add
je
jp
xchg
add
lock
daa
adc
inc
notb
sub
mov
test
xchg
xchg
pop
hlt
and
inc
negb
jp
sub
stos
mov
add
add
dec
mov
add
ja
sbb
outsb
pushf
imul
sbb
ret
mov
pop
add
in
add
push
adc
push
jns
push
and
es
jg
nop
and
sbb
pop
nop
sub
mov
pop
cld
xchg
pusha
fwait
bound
cmp
ficompl
xchg
jns
adc
xor
and
sbb
aam
adc
loop
in
add
push
mov
cltd
bound
imull
sbb
aad
add
add
xor
fcmovu
mov
and
cmp
xorl
test
insl
rorl
xchg
or
pop
lea
int3
xor
cmpsl
pop
fisubrs
sti
lcall
push
orb
sbb
xorl
or
mov
mov
ss
adc
jnp
sbb
pushf
inc
rorb
dec
push
mov
orl
test
test
rorl
adc
test
or
adc
dec
adc
pusha
xchg
scas
sbb
sbb
mov
fwait
mov
push
incb
lcall
inc
cld
in
sar
xorb
pop
test
mov
inc
pusha
mov
fmuls
xchg
es
or
in
rcrb
lret
ljmp
add
push
or
lret
test
and
mov
inc
mov
push
lcall
stos
pop
mov
add
push
pop
cli
addr16
xchg
jg
sti
push
js
xchg
shlb
mov
enter
sbb
and
xor
jmp
test
and
mov
mov
push
inc
clc
incl
imul
or
adc
inc
adc
fsubp
fs
imul
inc
dec
ljmp
rorl
test
sbb
or
inc
cmpsb
stos
ja
outsb
icebp
es
jmp
mov
ficoml
mov
inc
leave
jns
inc
ret
fbstp
lcall
fs
adc
fisubs
inc
les
adc
out
cmpl
sbb
mov
mov
enter
inc
pusha
mov
andl
and
xor
jnp
mov
mov
fwait
testb
js
add
mov
and
xor
sar
lret
sbb
in
sub
cli
scas
mov
xor
and
sti
outsb
push
sbb
loop
test
dec
es
sbb
incl
stc
mov
add
cmp
scas
jg
popa
inc
add
loopne
mov
add
in
inc
push
or
jb
int
push
mov
in
xchg
fsubp
test
in
and
fwait
cmp
sbb
shl
les
inc
clc
dec
push
and
or
or
add
jns
sbb
lock
decl
subb
imul
sub
rol
lret
jl
arpl
push
dec
ret
dec
push
bound
mov
fldenv
and
mov
mov
push
stc
adc
inc
jg
outsl
and
mov
add
out
add
lock
adc
mov
or
mov
int
add
pop
outsb
loope
add
xlat
xor
sbb
sub
jmp
add
insl
outsb
add
movsbl
std
int
out
scas
mov
fwait
out
push
sub
fdivrl
sub
shlb
xor
cwtl
inc
xchg
and
orl
popf
clc
aad
outsb
cwtl
addb
sub
and
xchg
lcall
pop
lock
mov
nop
sbb
adcb
and
and
stc
lds
jle
xor
subl
add
movsb
out
sbbl
push
push
push
out
in
xchg
adc
add
in
fistps
dec
repnz
negl
adc
xor
sbb
test
sub
jns
or
adc
cmp
jp,pn
xor
in
or
into
loopne
clc
push
cli
add
loop
sbb
mov
loopne
mov
imul
sbbl
or
mov
inc
insl
jns
outsb
add
xor
shrl
sarb
div
sbb
hlt
adc
push
adc
call
add
or
mov
and
test
mov
xor
adc
xor
stc
lock
inc
add
cmp
or
fdiv
mov
xor
xor
cmpsb
adc
add
or
inc
sbb
orb
pop
adc
add
push
push
jns
test
push
clc
and
push
add
inc
sbb
push
inc
movb
outsb
call
sbbl
add
cltd
leave
sub
inc
test
jns
adc
scas
pop
sbb
xchg
sub
inc
adcb
icebp
cmpsb
dec
adc
call
fdivl
out
mov
or
pop
sbb
loopne
js
lods
adcl
imul
push
ret
jge
stc
cmpsb
push
shrb
mov
add
mov
mov
add
xor
idivb
push
stc
xor
adc
mov
pop
scas
pop
and
rcrb
and
or
scas
jle
jp
push
imul
add
jmp
ja
imul
or
mov
mov
stos
aam
jno
lods
push
sahf
sub
mov
fwait
je
mov
cmp
call
sub
xchg
push
xchg
into
and
push
adc
mov
dec
enter
sti
cwtl
sub
inc
push
cld
dec
call
inc
dec
xor
sub
push
rorl
mov
jge
mov
cmp
inc
inc
add
cltd
into
or
inc
pop
movb
das
adc
loopne
or
or
fists
das
cli
sub
push
jns
add
add
inc
sti
dec
adc
sbb
cltd
mov
mov
inc
dec
bound
icebp
mov
inc
or
cltd
addl
adc
jns
pop
inc
and
in
add
lahf
sarl
inc
cmp
dec
sbb
add
dec
lret
in
xchg
push
xlat
mov
sbb
push
sbb
xor
sbb
inc
scas
rolb
pop
adc
ljmp
and
rolb
test
iret
adc
lea
or
xchg
lods
xor
adc
jg
push
inc
addb
mov
adc
les
insb
xchg
xchg
in
add
xlat
mov
inc
imul
and
jns
add
push
movsl
jns
dec
filds
jns
loop
aad
xor
js
outsl
shlb
mov
push
popf
jecxz
mov
mov
mov
push
fmuls
in
or
inc
in
sbb
jmp
and
out
popa
jns
in
mov
js
dec
sbb
pushl
dec
adc
and
jns
pusha
push
jp
sbb
inc
mov
mov
and
fiadds
push
xor
push
or
je
xchg
dec
orb
gs
sbb
jnp
xor
inc
dec
ret
pop
bound
and
inc
inc
pop
sbb
add
sbb
pusha
cld
aaa
inc
insl
xchg
dec
aam
add
and
sub
cs
cli
jg
imul
sbb
inc
add
call
andl
or
cwtl
clc
adc
or
mov
cmpsb
dec
adc
loopne
and
mov
leave
and
lret
jns
adc
rolb
push
nop
loopne
faddl
fbstp
fisubl
add
and
sti
fldt
add
nop
adc
adc
xchg
int
bound
lock
pop
stc
sbb
rolb
lahf
les
in
sbb
mov
bound
push
mov
xchg
add
mov
cmp
lcall
inc
and
sub
push
xchg
cmp
and
lcall
sarb
sbbb
push
mov
inc
jmp
loop
mov
loopne
sbb
mov
mov
or
ret
outsl
mov
pop
mov
mov
add
enter
ds
test
les
cld
bound
cs
nop
sbb
adc
add
and
and
sbb
xor
int3
sahf
jp
addb
cltd
add
xor
cmp
sub
dec
arpl
stos
jg
xchg
in
sbb
or
adc
mov
jecxz
dec
xor
dec
inc
sub
dec
loopne
js
sub
jb
nop
push
and
cli
fisubl
cmp
js
jo
xor
pop
lods
test
or
sub
sbb
in
daa
icebp
aad
push
outsl
push
in
cmpsb
sbb
leave
enter
js
lods
rclb
mov
pusha
stc
ffree
sbb
jg
pop
jo
pop
jge
mov
pusha
mov
dec
nop
stc
shl
subb
das
sbb
inc
test
fistl
inc
and
add
xchg
imul
jl
add
jp
sbb
test
pop
loop
and
in
inc
pop
jne
pushaw
and
lcall
fs
scas
or
fcoml
in
jp
repnz
and
shll
add
adc
mov
jns
loopne
adc
test
mov
sbb
xchg
and
inc
pop
cli
pusha
adc
dec
test
add
mov
clc
or
dec
pop
outsb
inc
js
bnd
add
push
loope
adc
shlb
sbb
push
add
popf
jp
push
nop
in
mov
or
xor
xor
xchg
orl
subl
push
push
pusha
add
xchg
push
sbb
and
lea
bound
jo
negb
xor
imul
jns
in
rorb
out
xor
ja
call
adc
stos
sub
add
push
jg
into
push
ret
daa
adc
xor
pop
in
pusha
test
mov
xchg
jle
cs
add
push
or
lock
cmpsb
xchg
sbb
push
sbb
add
lret
jbe
adc
pop
add
push
and
scas
adc
xchg
or
imul
inc
data16
ret
inc
clc
mov
fiadds
mov
cli
push
test
es
scas
adc
mov
and
clc
fildll
loopne
es
xor
test
mov
nop
or
andb
or
adc
add
sarb
out
or
xchg
add
std
out
fidivl
mov
sub
mov
sbb
test
adc
mov
test
add
outsb
test
pop
mov
test
gs
xorb
stos
adc
mov
push
jl
jb
mov
out
sbb
cmpb
pop
ret
push
jbe
jge
lret
adc
sbb
roll
test
add
out
xchg
call
loopne
repz
sub
fisubrl
in
add
mov
stc
test
push
mov
cmpsb
xchg
push
addb
shl
faddp
mov
or
or
jmp
jg
mov
fcomps
inc
mov
sbb
xor
or
mov
pop
mov
mov
mov
push
or
add
stc
add
inc
incl
add
xchg
into
jns
test
pusha
popa
add
inc
mov
add
push
dec
stc
int
sbb
adcl
push
xchg
jp
xor
pop
mov
mov
jns
adc
xor
push
jo
xor
enter
add
adc
pop
push
loopne
push
cmp
inc
jp
test
cmp
pop
xor
add
data16
cs
cmc
or
or
je
fsts
shrb
xlat
push
repnz
test
add
xor
out
test
or
sub
pop
test
jo
mov
test
adc
add
pop
or
movsl
sbb
jno
jae
ljmp
fcomps
fadds
popf
sbb
mov
add
add
xchg
mov
call
shl
jns
jo
nop
cmp
fstpt
or
pusha
pop
outsb
cmpsb
jns
cld
shrb
adc
xor
scas
movsb
sub
stos
mov
jp
sti
cltd
stc
add
or
jg
or
in
cmp
sub
lcall
je
int3
xor
shll
sub
mov
out
adc
in
scas
sbb
out
sti
test
bound
xor
jo
imul
aad
or
mov
xor
sub
fmulp
in
inc
sub
jns
jo
inc
movsb
cmp
and
lea
dec
rolb
mov
test
fs
cmovno
xor
lock
pop
mov
or
insb
mov
mov
and
add
push
rolb
adc
addr16
xor
adc
enter
es
lcall
test
cmp
orl
sub
lods
mov
popa
cld
idiv
inc
add
leave
orb
icebp
jns
rolb
push
sbb
or
or
jns,pn
mov
nop
loope
xlat
incl
mov
pusha
dec
testb
cmc
pusha
sub
sub
stc
loope
sbb
add
push
cmp
jns
stc
adc
test
jns
mov
adc
or
xor
add
mov
mov
mov
cltd
sbb
and
jg
jg
inc
cmp
fldl
add
in
loop
aad
loope
gs
sub
jg
mov
jnp
sub
adc
or
lcall
xor
addl
dec
adc
loop
jle
andb
shrl
and
push
lret
cmp
mov
sub
jle
mov
lea
incl
mov
mov
in
popa
push
loopne
in
jl
lock
clc
add
jg
or
add
pusha
dec
mov
inc
sub
bound
add
ja
adc
lea
inc
dec
mov
sti
or
mov
bound
lahf
nop
fldenv
outsb
cmp
and
add
ret
jmp
and
adc
js
insb
push
js
sbb
push
or
lahf
inc
or
lcall
pop
pop
and
sbb
pusha
xor
or
push
jl
and
decb
mov
pop
cli
adc
pushf
mov
subb
add
sbb
jns
mov
adc
sub
dec
push
push
cli
add
lock
or
sti
mov
sbb
mov
and
or
rorb
jp
jge
or
mov
mov
cmp
push
jge
push
add
lock
xchg
popf
mov
jns
loop
mov
or
add
loopne
add
mov
pushf
sub
and
xchg
out
sub
ljmp
push
push
push
lock
ja
mov
jno
xor
aad
mov
add
adc
mov
or
gs
mov
pusha
mov
sbb
fwait
in
mov
jl
mov
arpl
xor
daa
mov
dec
rol
jns
pop
pusha
fs
cmp
add
outsb
mov
addb
push
push
and
outsb
movsb
pop
into
nop
gs
add
add
add
mov
subl
imul
pop
add
lods
cs
clc
orl
gs
jecxz
inc
pop
scas
add
sbb
sahf
add
add
add
aas
aad
insl
push
jb
sbb
push
loop
or
or
adcb
test
stos
in
and
add
push
adc
bnd
call
mov
push
sbb
cmpsb
cs
cmp
les
int
addb
imul
lock
push
subl
orb
loop
or
mov
sub
es
xchg
ds
pcmpeqd
mov
adc
mov
js
add
subl
mov
xchg
adcl
sub
lock
cmpsl
sahf
push
fidivrs
adc
mov
or
shrl
pop
xchg
and
dec
jle
adc
add
imul
push
insl
inc
dec
sbb
in
dec
sub
push
bound
add
cld
inc
mov
das
sub
pop
fmuls
orl
jg
or
in
in
sahf
in
stc
or
add
mov
and
shll
add
pop
mov
add
inc
inc
aas
lods
jp
add
cmc
inc
out
insb
popf
or
xchg
je
lods
fildl
movsb
stos
jl
xchg
aaa
fisttps
rclb
push
popf
stos
int3
imul
les
popf
addb
jmp
iret
fstl
and
inc
jnp
mov
idiv
fcomip
leave
ret
xchg
in
sahf
sbb
inc
fwait
push
xor
cmp
adc
cmc
sub
fists
and
into
les
fdivr
aad
or
sahf
es
ret
arpl
call
lods
jo
and
ljmp
fdivrp
dec
add
dec
mov
adc
add
mov
add
xor
push
lret
cwtl
mov
icebp
jmp
adc
int3
ret
or
adc
ss
inc
shr
clc
in
incl
add
push
xor
or
popa
xchg
inc
adc
jg
fldcw
popa
inc
add
xchg
iret
mov
and
in
out
loopne
dec
mov
ret
mov
jg
outsb
jb
fcmovnu
sbb
ljmp
rsm
pop
sbb
jne
sbb
ljmp
cmp
add
lahf
rcrb
fnsave
jg
or
pop
or
jmp
jg
rolb
sbb
xor
xchg
popa
rcrb
dec
lock
incb
popf
or
xor
or
xchg
sbb
inc
mov
incl
dec
adcb
call
sbb
movsl
shrb
jle
sarl
in
xor
rorb
jp
cli
adc
rolb
add
xchg
adc
mov
lock
in
mov
std
popa
rcll
and
test
std
jbe
outsb
cmpsl
into
test
adc
inc
sbb
jle
pop
sahf
push
aas
stos
push
popa
nop
pop
jecxz
jmp
jae
decb
sub
jmp
imul
mov
or
loopne
pusha
sahf
push
sbb
insb
call
cmp
andl
push
pusha
or
pushl
fsts
mov
loope
jg
imul
add
add
pop
mov
pusha
loop
ljmp
arpl
loopne
sti
sbb
enter
pushf
adc
outsl
inc
pusha
xor
dec
movsb
test
or
pusha
and
xor
push
xor
cmp
pusha
add
popa
xchg
loopne
fadd
sahf
inc
popa
in
scas
cli
leave
or
jecxz
cwtl
test
sahf
ljmp
outsl
jmp
sub
add
inc
std
adc
lahf
loopne
movsb
or
std
out
xchg
fistpl
mov
ret
inc
or
cwtl
inc
mov
or
add
fwait
decl
mov
adc
std
loope
loopne
xchg
add
aaa
sbb
std
inc
dec
inc
jb
push
mov
fsubs
and
ja
pusha
jle
mov
xchg
pop
mov
data16
imul
notb
inc
jle
fisttps
std
mov
mov
and
sbb
mov
movsb
ljmp
into
inc
dec
sti
loopne
orb
sub
mov
jns
hlt
push
push
decl
add
inc
stos
movsl
mov
xchg
add
clc
ljmp
call
push
and
or
xchg
mov
xchg
mov
cmpsb
dec
mov
xchg
ret
mov
into
iret
rcl
ja
jle,pt
loopne
dec
add
fwait
cmp
mov
outsl
scas
shll
popf
add
push
aaa
xchg
outsb
nop
sub
test
mov
ljmp
push
sub
xchg
lods
fiaddl
cmc
and
cwtl
out
leave
adc
ret
push
sti
jg
and
fchs
ss
loopne
inc
mov
imul
insl
inc
outsb
daa
inc
mov
je
inc
adc
and
div
loopne
xchg
mov
mov
ss
loopne
xchg
push
mov
ds
push
jecxz
and
fdivp
mov
inc
inc
bound
cwtl
mov
sbb
mov
dec
lods
loopne
fcoml
bound
mov
fistpll
sahf
sub
pusha
jbe
test
add
popaw
pop
sbbb
inc
jno
adc
ljmp
xchg
in
sbb
insb
loop
pusha
bound
lcall
mov
xchg
in
loopne
loopne
adc
sbb
out
shll
pop
or
xorb
inc
shrb
leave
pusha
cmpsl
std
push
add
or
push
and
and
cwtl
dec
pop
dec
fs
add
mov
and
fwait
sbb
adc
enter
ljmp
and
aaa
inc
push
inc
jb
push
xor
push
cmp
cmp
dec
add
mov
lcall
addr16
aad
sbb
or
add
mov
push
mov
pop
cwtl
insb
or
icebp
jg
pop
fsubrl
sbb
loope
mov
es
ljmp
aam
lcall
decl
pusha
pop
lea
pusha
push
jmp
or
out
nop
and
push
clc
or
sbbb
out
cli
rcl
imul
dec
jg
andl
push
xchg
mov
push
cltd
xchg
add
outsl
mov
cmp
inc
sbb
lea
add
xlat
inc
ja
hlt
jg
stos
sub
adc
xor
scas
jae
jo
lock
aam
das
add
repnz
das
jo
dec
test
inc
add
xchg
mov
push
xor
jae
pop
jb
mov
and
jg
cli
fistps
add
fdivl
jns
repz
xchg
adc
add
dec
xchg
jmp
pop
es
xchg
xorb
add
std
mov
jns
mov
and
add
adc
jae
int
jns
mov
jge
sahf
sar
jg
sarb
ret
mov
repz
mov
sbb
pop
sub
outsl
xor
jns
mov
jp
dec
movsb
movsl
jl
int3
add
cmp
jmp
jo
xorb
enter
pop
jb
xchg
filds
xor
add
rorl
push
or
clc
sbb
adc
or
subb
jmp
mov
scas
ret
add
pusha
aas
jmp
es
imul
fdivl
lcall
adc
int3
int
mov
pushw
nop
mov
jp
out
and
cld
pusha
adc
mov
sub
mov
out
inc
and
fmuls
popa
sar
jge
ret
adc
sarl
inc
or
add
lods
jnp
or
jae
add
adc
int3
popa
lods
dec
or
sub
xorb
das
test
xchg
and
pusha
rcll
xor
add
outsb
loope
or
incl
ret
loopne
xchg
push
and
dec
das
std
mov
fistps
push
pop
int
mov
sar
xchg
sbb
adc
mov
aam
xor
mov
mov
add
push
xor
xchg
pop
nop
push
add
adc
std
jne
loope
test
rcr
popa
enter
mov
and
enter
push
call
push
fnstenv
stc
xchg
adc
cmpsl
sbb
jo
jns
xor
xchg
or
hlt
outsb
or
xchg
jns
orl
mov
pop
test
lret
popa
or
in
pop
sahf
test
or
nop
sbb
inc
mov
push
sub
mulb
call
or
mov
inc
sti
lret
add
inc
mov
jns
addl
loope
add
mov
bound
sbb
loope
add
pop
pushl
shrb
enter
mov
fcomps
and
addl
mov
adc
push
movsb
sbb
repnz
sbb
roll
pop
shrl
mov
jg
test
in
cmpsb
sub
cmpsb
jns
mov
incl
jmp
add
add
xchg
add
add
or
add
test
repz
xchg
test
nop
scas
cltd
lock
push
test
sbb
add
addr16
lock
push
lods
mov
ss
test
cltd
in
fstpl
movsl
movb
mov
cmp
sbb
push
add
push
rclb
incb
int
mov
add
ja
in
sbb
cmp
pop
nop
mov
add
sbbb
push
sbb
mov
mov
jns
icebp
ds
test
add
pop
and
xorb
xchg
outsl
lods
notb
mov
dec
je
into
push
ret
inc
rorb
xchg
dec
push
push
rclb
cmp
fbstp
fidivs
stc
add
or
incl
adc
mov
inc
pusha
shlb
cs
ret
fiadds
mov
ret
fmuls
add
and
ret
push
add
mov
pusha
into
popa
jle
enter
xor
mov
lds
nop
cmp
mov
mov
loope
int3
test
mov
insb
stos
incb
inc
in
rolb
in
incl
pusha
fistl
sbb
inc
std
fs
xor
sti
fistpl
clc
icebp
or
inc
adc
shrb
push
push
adc
add
ss
inc
pushf
pushf
mov
xor
decl
xorb
mov
rol
jo
xlat
in
ljmp
test
out
jns
enter
lret
mov
decl
push
lods
stc
xchg
lock
dec
mov
jae
mov
mov
stos
jg
pop
jle
push
add
add
add
inc
hlt
push
daa
les
push
xchg
sahf
xor
add
test
das
out
mov
rcll
loopne
and
loop
mov
add
mov
add
push
mov
xor
std
mov
fmull
xchg
dec
add
adc
push
scas
rclb
xchg
call
js
push
or
cmp
or
sti
out
pop
inc
pop
add
jo
xchg
sbb
sbb
pushf
push
js
je
mov
loop
push
push
mov
ljmp
mov
fbld
lock
cltd
mov
or
movsl
dec
ret
fs
aam
bound
pusha
movsb
int3
mov
adc
mov
dec
inc
imul
or
jmp
inc
jae
jns
push
push
shlb
xchg
jns
add
pop
push
mov
adc
jg
jno
push
mov
push
or
popf
es
add
arpl
xchg
push
sbb
mov
sahf
fcoms
mov
xchg
imull
mov
dec
mov
addr16
mov
ficoms
lea
xor
insl
pop
push
cmp
ret
add
adcb
xor
mov
loope
lea
jnp
ljmp
add
inc
xchg
call
mov
sub
lcall
jns
pop
insl
xor
lea
sbb
add
mov
add
outsl
dec
rolb
sub
cmc
jns
jmp
in
add
dec
sahf
stos
rorb
add
mov
xchg
stc
jp
and
pop
add
std
add
push
add
filds
inc
addb
out
push
mov
xorb
in
adc
mov
mov
add
mov
das
test
cmc
add
or
in
push
ret
or
add
jp
mov
dec
in
lods
and
inc
lret
mov
outsl
and
or
push
add
inc
mov
jmp
or
out
adc
adc
sbb
or
iret
inc
les
fidivrs
push
and
nop
andb
out
add
js
movsl
pop
xor
or
sub
jns
push
test
jae
push
xorb
xorl
jo
push
fists
dec
add
pusha
hlt
out
adc
out
inc
cwtl
fisttpll
xor
cmpb
jl
sub
negb
sbb
mov
add
and
rolb
push
mov
xor
ja
mov
xor
cmc
scas
and
and
sbb
outsb
in
and
mov
sbb
orl
push
add
pop
sbbl
jbe
jmp
mov
add
repz
outsb
cld
mov
sbb
add
lock
fwait
jns
xchg
push
bound
jge
inc
inc
cli
hlt
jns
adc
ret
iret
mov
jno
inc
jns
roll
orb
inc
ret
cmp
pop
push
icebp
adcb
xchg
pop
xor
or
add
in
sbb
mov
into
dec
test
or
mov
inc
add
lea
js
push
movsb
add
push
xchg
add
addb
cmp
ljmp
jo
pop
jns
xor
jp
xchg
orl
loop
xchg
inc
pop
add
add
orb
sub
inc
stos
xor
mov
out
lock
imul
lods
adc
jp
cs
adc
sub
sbbb
jp
loope
push
mov
rorb
inc
out
mov
sbbb
xchg
sbb
sub
inc
jae
xchg
adc
adc
aaa
ds
mov
mov
mov
add
inc
das
popf
fsubs
int3
pop
sbb
das
js
test
scas
push
pusha
es
int3
popa
jns
rcr
adc
push
adc
cs
or
push
sahf
in
push
add
jp
mov
addb
xor
fwait
lock
cwtl
adc
cld
out
cli
outsl
lret
sbbl
gs
rcrb
mov
adc
xchg
dec
je
jg
jge
rolb
mov
subb
popl
pop
mov
pop
xor
sub
loop
daa
loope
in
and
and
pop
cmpb
rcrb
sub
pop
test
mov
pushf
mov
push
inc
add
out
inc
div
or
bound
dec
sub
in
mov
test
rclb
cmc
or
lahf
stos
adc
dec
xor
add
test
sbb
add
test
addb
fcmovb
xlat
xor
pop
add
push
jecxz
inc
leave
lock
mov
sahf
pop
mov
fdivrs
add
mov
or
insb
push
or
add
rol
in
and
into
mov
push
jl
in
int
mov
mov
adc
orl
sbb
filds
xchg
lods
mov
mov
loopne
es
adcb
mov
mov
subb
cld
inc
add
sub
lods
or
cmp
inc
push
pushf
add
jp
outsl
fwait
test
dec
loopne
inc
jge
orb
mov
adc
pop
dec
repnz
xchg
xor
adc
movsl
cltd
add
adc
adc
pop
jns
xchg
cmp
cli
pop
sbb
les
dec
loope
cmpb
sub
pop
movb
mov
pop
mov
add
and
lds
jmp
pusha
lods
push
inc
mov
lcall
inc
adc
jecxz
jp
out
adc
pop
push
pop
outsb
test
add
ss
add
loope
xchg
rcrb
nop
mov
rorb
or
sub
push
out
lret
push
fildl
data16
and
pop
fldcw
mov
mov
ret
and
push
xlat
push
sar
jg
out
in
jge
and
loope
xchg
stc
or
inc
push
adc
std
call
push
xchg
sarl
inc
and
mov
mov
aaa
push
fwait
cmp
xchg
popf
or
inc
loope
jbe
push
add
pop
sub
cmp
mov
test
mov
insl
lods
push
cmpsb
popa
idivl
sbb
popf
enter
cmp
subb
test
add
test
jmp
das
xorl
add
and
out
ret
loopne
or
jns
sub
mov
stc
popa
leave
inc
jle
jmp
ret
inc
jns
inc
add
lret
aaa
xlat
fsubrs
mov
add
pusha
lods
negl
pusha
filds
test
loope
aam
test
adcb
inc
cli
add
addl
or
andl
push
incl
jo
dec
js
sbb
push
adc
loopne
pop
test
shrb
shlb
push
jg
insl
xor
int3
loopne
setne
inc
lock
adc
rolb
scas
xchg
sbb
out
xchg
sarb
scas
incb
and
inc
enter
ret
xchg
ja
mov
add
das
data16
xchg
rorb
inc
xchg
mov
mov
dec
sbbl
scas
add
flds
xchg
mov
lds
testl
ljmp
out
int3
sbb
mov
xor
push
in
and
lods
sbb
shlb
sar
cmpb
lcall
adc
cld
jg
mov
bound
add
pop
cmpl
mov
in
fs
or
sbb
or
adc
add
push
iret
jns
push
jno
mov
lcall
das
add
test
add
mov
or
cli
jbe
sub
mov
adc
lcall
movsb
js
lds
lds
loopne
mov
adc
sbb
push
pop
icebp
fsubs
rolb
add
addl
addb
enter
add
jo
loope
ret
add
inc
xor
jg
adc
es
aaa
cld
jg
and
mov
mov
aas
roll
fwait
mov
jmp
sti
mov
fmuls
jg
mov
ljmp
adc
push
test
pop
test
lock
push
iret
je
decl
xchg
fmull
push
adc
mov
pop
shll
call
or
sbb
sbb
and
push
pop
mov
mov
jg
ret
clc
xorb
movsb
stos
and
adc
lock
pushl
outsb
inc
jno
add
push
mov
stc
fs
jg
test
jb
or
outsb
fnstenv
orb
xchg
sti
ja
sub
pop
pop
shrl
sbb
jecxz
mov
sub
arpl
test
movsb
lods
int3
lcall
add
aad
add
mov
push
push
push
push
in
lock
sbbb
xchg
sbb
add
inc
lcall
pop
add
sub
sahf
mov
call
xor
mov
loopne
mov
jns
mov
add
add
subl
jle
loop
mov
loopne
xchg
aam
fidivrs
je
inc
js
lock
sarb
loope
pusha
sbb
adc
test
sub
push
inc
faddp
imul
cmp
clc
loopne
mov
jo
int
stos
lods
push
orb
adc
or
shrl
data16
adc
adc
imul
jg
out
xchg
nop
inc
out
shlb
sbb
jb
sbb
mov
rorl
shlb
aaa
pusha
jle
ljmp
rorb
movsl
adc
pop
outsb
mov
rcr
popf
push
es
dec
push
es
sbb
inc
rcl
or
ja
xchg
mov
add
jns
and
movsl
xchg
or
jg
jns
xchg
push
add
scas
addb
cmpsl
xorl
rorb
stos
nop
cmp
and
mov
mov
sti
and
mov
data16
xchg
in
mov
xchg
mov
inc
stos
or
adc
je
mov
push
or
sub
outsl
fsubrs
or
add
nop
js
fidivl
push
hlt
xor
mov
and
mov
or
pop
sar
mov
adc
inc
and
mov
mov
js
lods
mov
xor
sbb
adc
pushf
xorl
std
into
lahf
loope
sbbl
outsl
nop
sbb
add
push
xchg
ss
stos
jge
pop
sbb
add
pop
jbe
fdivl
icebp
add
shlb
sbb
mov
xchg
push
sbb
lret
je
dec
or
push
clc
rorb
movsb
mov
outsl
jb
aam
push
add
in
or
fcomip
or
jns
dec
lock
popa
push
push
push
and
subl
mov
in
xchg
sbb
mov
jns
lock
and
mov
fsubl
and
jb
fmull
ljmp
pop
fidivrs
pop
and
jne
mov
mov
mov
pop
rolb
xchg
xor
icebp
adc
jbe
ficoml
mov
inc
pop
rol
sbbb
add
push
or
and
loope
mov
je
ds
pushf
mov
stos
sub
scas
adcl
push
testb
icebp
mov
lock
mov
pop
sarb
sub
xor
pop
das
xor
pop
mov
and
sti
in
xor
mov
stos
xchg
pop
xor
sbb
push
cmp
add
dec
cmp
icebp
decl
sbb
add
cmp
or
pop
adc
xchg
sbb
sbb
add
or
mov
push
outsb
mov
sar
mov
stc
aam
inc
repnz
daa
mov
xor
adc
mov
pusha
clc
ss
and
insl
fldt
js
xchg
pusha
xor
jo
and
mov
xorl
cmp
jno
cmc
adc
or
xor
pop
jns
hlt
xor
push
fs
add
jb
jp
adc
jecxz
call
inc
sub
adc
or
and
mov
xlat
shll
push
orb
mov
mov
out
ljmp
or
fidivrs
fdivrp
sbb
xchg
cld
xor
jbe
jp
sbb
sbb
jp
out
mov
movl
cmp
sbbb
roll
push
xchg
fisubl
inc
push
adcb
xor
or
or
push
or
aaa
mov
or
adc
fcompl
decl
jns
nop
adc
test
jns
inc
mov
pop
sbb
scas
mov
jmp
fdivrp
mov
inc
add
jns
adc
sbb
incl
lds
add
subw
sbb
test
push
in
add
xchg
sbb
dec
cwtl
lods
jns
pusha
and
or
scas
mov
aam
or
aad
xor
dec
inc
in
in
fildl
mov
shll
sub
inc
mov
ret
stos
xor
inc
outsb
ds
mov
xor
mov
add
adc
mov
or
mov
sub
xchg
in
sub
imul
sbb
jmp
inc
ret
repnz
sub
fmuls
or
cwtl
sbb
call
xchg
fidivl
add
cmpsb
push
div
bound
fwait
adc
rclb
call
sbb
add
hlt
pop
ret
loop
frstor
sbb
movsb
fdivl
jbe
bound
or
add
repnz
insb
adc
out
push
fadd
out
and
add
rcll
sbb
cmp
jns
mov
neg
popf
adc
jno
das
stos
popa
rcrb
mov
sub
sbb
cmp
pop
push
dec
pop
sbb
test
add
jecxz
or
fistpll
or
cmpsb
or
sub
inc
sub
roll
or
add
arpl
inc
cmp
pop
fadd
mov
sub
movsl
lea
loop
imul
into
lcall
add
fstl
pushf
mov
outsl
xor
xor
popf
jns
cmp
rolb
in
add
stc
subb
adc
sbb
nop
add
mov
add
inc
cld
mov
adcb
subb
aad
inc
mov
shlb
cmp
in
pop
test
mov
dec
aas
adc
sbbl
ffree
push
or
fiaddl
es
sub
es
add
addb
rclb
push
mov
ds
or
or
pusha
fdivrs
data16
cmpsb
loopne
inc
jns
inc
pop
xchg
push
dec
std
sbb
addb
xchg
popf
inc
cmp
ret
insb
insl
js
aas
push
ret
movsb
mov
push
in
push
dec
lret
js
or
rcll
jmp
mov
addl
imul
loop
add
jle
test
sub
pop
sub
enter
mov
mov
jns
mov
adc
mov
add
xor
adc
push
xchg
pusha
xor
rcrb
sbb
xchg
cmpsb
loop
decb
rclb
scas
nop
jns
subb
dec
into
ret
add
inc
mov
or
add
out
fwait
dec
mov
push
or
nop
shr
add
enter
adc
ret
and
popf
push
mov
pushf
in
jl
inc
fistpll
ja
mov
inc
rclb
pop
orb
fcomip
movsb
jns
pushf
outsb
in
inc
mov
add
orl
sbb
out
inc
or
xchg
mov
sub
add
loop
int3
ret
mov
or
pop
sti
and
pusha
movsl
cmc
in
outsb
push
xorb
push
in
inc
out
lret
shlb
push
mov
xchg
js
push
ja
outsl
fldt
bound
cwtl
sbb
cltd
push
inc
inc
add
push
xor
push
fdivl
or
rclb
xchg
in
push
adc
mov
inc
xor
enter
mov
add
clc
aaa
xor
cwtl
in
hlt
out
pop
sti
push
sahf
adc
inc
cli
xor
fistps
or
push
jp
add
leave
mov
mov
stos
mov
or
pop
sbb
and
or
jle
mov
adc
ljmp
pop
sahf
loop
loopne
data16
xchg
ljmp
int
stc
ja
inc
sti
fidivrl
jo
add
mov
pop
ljmp
push
jns
inc
or
jae
mov
jno
and
jp
push
int3
adc
cmp
notb
and
test
cmp
jg
fildll
imul
and
adc
or
or
xor
les
loope
pusha
add
ret
pushf
and
add
lea
or
mov
jnp
faddl
jle
jp
mov
in
add
jns
cwtl
jecxz
jp
push
dec
popa
shlb
subb
add
cmp
shrb
xchg
sbb
lcall
rolb
in
xor
mov
pop
punpcklbw
and
cs
sub
cltd
inc
sub
and
or
jmp
and
repz
and
push
and
movsb
in
aaa
push
sbb
jmp
adc
xor
pusha
or
je
lea
mov
and
shrb
andb
and
mov
inc
sub
or
xor
bound
cmc
inc
cmp
test
add
jb
and
mov
pop
and
es
or
or
sub
incb
xorl
inc
or
cmp
add
or
mov
lcall
push
test
inc
out
jecxz
outsl
mov
clc
rol
shll
add
stos
mov
into
pusha
jns,pn
ret
xchg
mov
js
shrl
ljmp
test
clc
repnz
stos
add
add
incl
popf
sbb
stos
rcl
dec
leave
add
ret
lock
mov
mov
cld
mov
push
loopne
mov
xor
add
adc
adc
mov
and
jbe
insl
jge
mov
and
add
mov
rcr
ds
push
fwait
dec
mov
and
xor
jl
roll
icebp
mov
mov
jns
rcrl
cmc
mov
cmp
pop
jns
pusha
movsb
cmpsb
movb
out
mov
mov
or
sbb
mov
or
mov
inc
jns
push
inc
imul
loopne
xchg
add
imul
subl
insl
and
fldcw
mov
xor
mov
push
popa
outsl
int
fdivs
mov
cmp
in
aam
into
iret
outsl
xchg
sbb
mov
jne
add
jmp
andl
mov
push
xchg
lods
fldpi
xchg
stos
dec
push
inc
xchg
xchg
push
cs
push
std
jg
add
xchg
or
xchg
mov
inc
add
push
lods
enter
ret
jns
stc
fcoms
push
loop
mov
cmp
sub
xor
jmp
xchg
cltd
stos
lahf
jecxz
push
inc
push
push
push
push
lcall
and
jns
cmpsb
xor
or
pushl
adc
push
add
mov
fldl
xchg
xchg
xor
scas
and
add
or
sbb
sbb
das
mov
lcall
popf
nop
and
sbb
das
xor
add
dec
and
iret
inc
inc
xorb
idiv
dec
adc
jns
mov
adc
push
mov
xchg
bound
pop
cmp
sub
xchg
mov
mov
add
imul
jne
loopne
lret
and
xchg
adc
pushl
sbb
adcb
loope
xor
loopne
sbb
imul
xrelease
add
add
and
add
ret
or
mov
stos
sbbb
xor
insb
add
idivb
icebp
cltd
in
fucom
mov
push
push
adc
std
roll
xchg
lret
mov
pop
mov
shll
lock
add
mov
mov
aam
and
rclb
lods
xor
incl
add
or
icebp
adc
sti
pusha
xchg
lods
adc
cmp
lods
add
jo
and
sub
inc
adc
sbb
push
sbb
pop
xor
add
push
adc
call
inc
fwait
es
rcrb
xchg
mov
pop
push
add
and
decl
out
push
add
add
mov
inc
adc
int3
cmpsl
xor
mov
mov
test
in
pop
jno
outsb
mov
scas
sbb
add
push
stc
mov
jbe
arpl
out
ljmp
repnz
daa
sub
sti
mov
ss
mov
rorb
lods
and
loopne
xchg
inc
pop
cmc
stos
mov
test
or
jo
and
pop
and
mov
jae
je
inc
ret
nop
adc
mov
push
push
or
sbb
cltd
inc
xor
incl
adc
adc
int
aas
adc
cmp
loop
ljmp
inc
mov
xor
inc
sbb
aam
pop
loopne
mov
or
add
xchg
mov
cli
fldt
add
andb
pusha
add
stos
add
push
pop
in
loopne
cli
xlat
pushf
add
mov
repz
pusha
pop
dec
lock
stos
pusha
lea
lods
mov
addr16
subl
xor
shlb
js
shlb
js
adc
adc
inc
ljmp
push
roll
xor
mov
mov
jmp
inc
sar
lcall
jmp
out
adc
jmp
sbb
mov
clc
or
lods
les
xor
xchg
mov
andl
push
movsb
aaa
std
movsb
mov
loope
pop
xchg
or
test
pop
incl
mov
push
jo
push
shlb
ret
pop
dec
jmp
sti
and
adcb
or
or
adc
sahf
mov
add
push
and
and
and
lock
test
mov
xor
sbb
lods
mov
aam
stos
or
lcall
daa
idiv
mov
or
inc
mov
movsl
aad
jns
lret
pusha
aas
mov
call
mov
shll
ret
pop
adc
inc
mov
ftst
mov
or
sbb
sbbl
lock
mov
icebp
mov
mov
or
pop
pop
adcl
or
or
rorb
jo
inc
icebp
rolb
fbld
add
jns
push
pusha
test
fnstcw
and
data16
decl
adc
push
adc
adc
mov
clc
push
add
dec
mov
aad
dec
inc
mov
rclb
jbe
call
sbb
sbb
mov
adc
mov
mov
cmpsb
inc
fldenv
jmp
ret
jbe
mov
pusha
cltd
sbb
push
mov
loopne
dec
insb
jl
int3
or
inc
int3
pusha
push
sar
sti
mov
push
cld
xchg
xchg
adc
push
pop
add
inc
xor
ljmp
mov
add
push
inc
or
pop
dec
or
jno
aam
lcall
pop
fistpll
mov
and
js
loop
jb
push
or
or
pop
mov
mov
stos
sub
idiv
sarb
push
jns
lds
lock
add
roll
test
mov
cmp
push
jecxz
jns
sarl
cmc
mov
or
fwait
loope
cwtl
nop
add
add
imul
xlat
mov
lock
adc
add
fwait
add
xor
adc
mov
mov
adc
jb
jns
sbbb
add
stos
aaa
cld
call
in
push
sbbb
jns
and
test
inc
call
data16
movsb
push
and
in
jo
in
xchg
mov
jns
in
sub
or
sub
jle
fcomip
sub
mov
leave
or
pop
add
addl
repnz
adc
sahf
or
jl
lods
push
cmpsb
nop
mov
das
mov
pusha
stc
shl
mov
sbbl
jb
and
sbb
and
inc
push
sub
cmp
push
in
xor
sahf
xlat
int3
lret
xor
scas
pop
and
jo
xchg
jns
or
fstps
sbb
sub
iret
mov
xchg
mov
sub
sbb
add
add
test
hlt
icebp
xchg
inc
push
stos
pop
adc
sbb
outsb
mov
jns
or
pop
push
adc
loopne
call
or
lret
in
lret
movb
sti
dec
test
mov
loopne
loopne
jns
lock
or
push
lret
mov
fimuls
push
aad
jb
sbb
imul
xchg
and
sub
shrb
xor
sbb
add
shlb
mov
sbbb
lcall
inc
mov
addl
cmp
and
call
rcl
scas
insl
into
lret
rol
rol
xorb
jb
mov
popa
cwtl
fimuls
xlat
mov
rcrl
xorb
test
stos
xorl
andb
fisubs
cmpsl
cmp
mov
add
xchg
in
sub
add
fsubl
mov
xlat
xchg
dec
cli
mov
adc
xchg
fnstenv
outsl
sar
mov
add
sub
push
popa
jne
rclb
adc
and
mov
add
hlt
and
ss
dec
fsubl
movsb
aad
push
sbbl
lods
jle
call
adc
jecxz
sbb
movsl
cmc
ja
pusha
adcb
mov
call
adc
cmpl
andb
and
push
inc
popf
lock
scas
pop
gs
sub
xchg
push
or
stc
add
xchg
enter
mov
loope
sub
or
and
xchg
jns
cmpsb
add
lret
or
push
shlb
cmpsl
insb
mov
outsb
sbb
or
xor
or
dec
cli
lods
push
subl
mov
in
mov
mov
push
adc
mov
enter
orb
pop
mov
into
xchg
nop
das
mov
mov
popa
adcb
fmuls
arpl
jae
pusha
int3
pop
or
aad
mov
pop
mov
decl
xchg
sub
mov
popf
stc
xchg
les
inc
add
mov
stos
addl
stc
or
pop
or
sti
mov
mov
stc
popa
mov
or
add
adcb
in
sbb
mov
dec
pcmpgtw
addl
jno
adc
rclb
mov
or
or
push
insb
sub
mov
lea
dec
call
lea
or
lahf
rcl
pusha
mov
or
mov
xchg
out
mov
jg
rclb
add
enter
outsb
sub
sbb
adc
rolb
data16
lods
imul
ret
cmp
les
pushl
lods
push
rcll
test
sub
andb
push
mov
shlb
imul
inc
popf
out
roll
push
cld
popf
push
insb
add
testl
data16
sbb
shlb
adc
fiaddl
mov
stos
inc
inc
popf
movb
sarb
mov
insl
sub
aam
sub
insl
sub
inc
pop
jle
inc
unpckhps
dec
sbb
call
and
inc
pop
jns
pop
lods
fmuls
test
xchg
and
add
or
inc
jle
adc
outsb
adc
jno
stc
rorb
sub
adc
lods
fs
add
test
jns
insb
mov
lods
jmp
shll
or
ljmp
clc
push
sub
push
les
stos
push
loop
into
loopne
sbb
or
push
jns
xor
ljmp
and
push
out
pop
ret
mov
jecxz
dec
jmp
adc
add
aas
sbbb
stos
pusha
and
rorb
or
clc
sub
les
loopne
movb
pop
mov
aaa
enter
shlb
stc
jmp
inc
mov
test
and
mov
add
and
cs
fnstcw
insl
push
mov
test
rcll
mov
sbb
fisubl
orb
sub
sub
inc
push
mov
push
adc
mov
iret
jecxz
add
js
push
ret
and
mov
inc
sub
addb
pop
gs
or
popa
sbb
add
push
std
les
shrl
push
mov
add
lcall
mov
add
js
mov
cmp
jo
add
xchg
imul
and
mov
incb
sub
jg
jns
fldl
pop
icebp
or
cmp
or
inc
clc
inc
add
sbb
add
add
scas
mov
fiaddl
xor
aas
or
jl
xchg
adc
xor
imul
andl
mov
pop
dec
lds
adc
outsb
call
jnp
add
loop
incl
or
or
mov
out
add
adc
push
sbb
and
jns
outsb
add
jg
fcoml
jns
add
insl
das
cli
ljmp
or
jns
call
push
or
fldl
push
inc
fbstp
push
and
and
decl
adc
jecxz
or
out
sbb
add
andb
sar
icebp
out
test
loope
xorb
and
hlt
jg
sub
xchg
and
pop
add
sahf
test
mov
mov
sbb
pop
and
scas
dec
add
pop
in
dec
sbb
push
negl
xchg
inc
or
repz
lcall
aam
flds
xlat
sbb
add
lea
cld
sbb
fsubrs
lods
leave
mov
orb
enter
add
push
xchg
lock
ror
xor
int
push
push
and
leave
xchg
shlb
push
aam
test
cwtl
scas
add
aam
roll
push
adc
mov
fisttps
pop
xorb
mov
push
shll
mov
notl
add
adc
jp
hlt
mov
popf
insb
mov
es
movsb
push
test
movsl
add
adc
and
loopne
fistl
inc
sbb
jp
and
add
lret
mov
jle
xor
mov
addr16
shlb
insl
and
mov
pop
or
testb
in
push
mov
vcvtps2pd
test
ret
pop
and
jle
test
rcll
fisubs
mov
mov
sbb
pushl
xchg
jecxz
iret
into
inc
xchg
push
xchg
test
jnp
add
push
test
jmp
jo
cmp
sahf
das
lods
sahf
std
push
mull
sub
divl
sbb
dec
or
lret
lods
mov
popf
xlat
push
or
pushf
cltd
adc
int3
movb
mov
lods
dec
rcrb
adc
add
cmpsb
insb
cld
push
pop
sub
adc
inc
jle
jecxz
nop
incl
add
clc
push
add
xor
add
fistps
sbb
fcomps
add
rorb
idivb
addl
incl
jns
dec
mov
xchg
or
outsb
xchg
add
xchg
mov
xchg
rorb
pop
sub
fidivrl
push
sbb
mov
xor
mov
push
push
rcl
push
pop
jecxz
sbb
sbb
cmp
rcrb
cwtl
adc
fsubp
arpl
arpl
ljmp
sbb
add
in
out
push
pop
cld
out
lods
sub
into
shll
adc
into
push
and
push
add
insb
mov
jbe
sub
adc
stos
or
jns,pt
push
lock
cltd
jns
mov
fimull
ljmp
nop
mov
icebp
scas
mov
lock
xchg
xor
ljmp
add
pusha
cltd
sbbb
add
lock
sub
sahf
xor
xchg
push
fcmovnb
add
out
push
lahf
adc
cmpsb
xchg
xor
movsb
pop
nop
or
add
push
cltd
lock
inc
incl
mov
cmpl
loopne
adc
and
xchg
ljmp
in
nop
or
mov
add
ljmp
mov
adc
mov
xchg
jp
stos
pusha
cld
jg
pop
pop
sahf
insb
es
popa
add
addb
jb
sbb
mov
inc
add
jno,pn
push
ss
lods
mov
inc
cltd
enter
lods
xchg
dec
loopne
cld
mov
fdivl
or
cmp
and
jmp
insb
rol
ljmp
adc
xchg
data16
cld
jno
lahf
outsb
or
out
xor
sbb
lahf
add
in
cmp
ljmp
shrb
divb
push
push
add
xchg
mov
sti
nop
xor
popf
loope
bound
setno
pop
xchg
ret
push
mov
push
ss
inc
mov
icebp
push
jo
sti
aaa
add
mov
or
cmpsl
or
incl
add
mov
dec
fsubrs
mov
mov
sub
sbb
mov
ss
dec
hlt
push
and
inc
lret
fists
test
adc
shll
push
or
or
mov
inc
adcb
or
fwait
add
or
dec
jg
or
or
scas
or
movsb
or
int
or
jns
xchg
sub
push
xor
cmpsl
fists
mov
pop
cmp
ds
or
nop
jae
in
aam
pushl
clc
add
push
jns
roll
xor
push
imul
call
or
adc
test
jbe
andb
stc
sub
lock
jne
pop
push
add
notb
subl
sarb
flds
imul
xor
filds
inc
mov
dec
mov
push
add
dec
xchg
and
lret
insl
jae
in
in
popa
and
in
and
fldenv
push
add
in
fwait
pop
mov
jge
inc
dec
nop
push
addb
sbb
shlb
es
cmpsb
sbb
adc
and
cli
sahf
and
cmp
roll
stc
push
loope
mov
pop
and
push
push
sbb
add
xor
pop
out
gs
inc
stc
and
lcall
dec
dec
stos
jns
jge
push
lds
or
sub
nopl
std
pop
pushf
add
popa
pop
push
stos
push
pusha
pop
lcall
dec
or
jns
inc
push
rorb
cmpsb
and
jns
sahf
sub
dec
inc
or
cmpsl
fs
cmp
adcb
mov
adc
fldl
inc
mov
inc
jno
add
outsb
mov
pop
xorb
jle
stc
sarl
jmp
lcall
lcall
jge
call
ret
mov
cmp
mov
inc
lds
lahf
stos
inc
rolb
int
add
cmp
xor
ljmp
xchg
addl
aad
and
jp
sti
jbe
jns
add
jge
inc
adc
incb
or
sar
jg
in
push
xorl
icebp
pop
push
and
ja
inc
push
std
sub
pop
pop
sbb
inc
jb
add
mov
cmc
xchg
or
imulb
inc
jnp
mov
sahf
fsts
pop
sahf
inc
fstps
cs
mov
stc
pop
shlb
in
or
lret
sti
jg
test
adc
or
in
xor
outsl
jg
mov
or
inc
cmpb
inc
and
mov
and
mov
add
or
or
cmp
add
popa
test
push
inc
adc
pop
ret
xchg
cmpl
push
lock
and
xchg
dec
aad
jg
movsl
loop
inc
int3
sbb
dec
loope
loope
lock
add
inc
les
push
mov
push
inc
lods
sub
movsb
jb
jo
adc
jle
rolb
repnz
inc
sub
stos
inc
and
or
addr16
cmp
in
dec
arpl
outsb
fldl
mov
sbb
out
dec
jns
fs
inc
xor
adc
adc
and
mov
sahf
mov
sbb
mov
lcall
data16
add
dec
inc
insb
mov
adcb
mov
lea
xchg
adc
adc
push
or
fdivrl
fisttpll
sbb
sub
xchg
mov
ret
and
pop
adc
add
jp
sbb
add
ret
pop
cmp
testb
cld
jle
dec
or
add
addb
inc
sub
mov
and
jg
inc
rol
and
push
in
mov
inc
add
mov
add
es
jbe
dec
addb
add
aad
mov
adc
and
in
and
rorl
inc
xor
aam
adc
xchg
jns
mov
adc
mov
push
dec
sub
fists
adc
xchg
sbb
lcall
std
push
jecxz
jle
xchg
subb
adc
shrl
adc
xchg
out
adc
rolb
adc
in
add
addb
ret
dec
jb
add
data16
ret
insb
out
cmp
lea
in
mov
cmpb
je
jns
stos
adcb
test
inc
cwtl
add
sarl
mov
aaa
add
pop
inc
js
or
or
mov
xchg
dec
das
cmp
dec
jo
dec
out
sub
mov
mov
push
adc
cmp
cmp
push
call
mov
orl
add
adc
bound
pop
xchg
scas
neg
ljmp
adc
or
or
mov
jns
add
sbb
add
pop
rorl
lock
orb
add
inc
sub
iret
pop
fs
pusha
jle
mov
sti
test
loopne
dec
dec
test
add
dec
inc
push
and
in
push
cltd
clc
lcall
sbb
aaa
shlb
cmpl
adc
cwtl
movsl
jnp
popa
in
dec
mov
cs
jo
sbb
shrb
test
sub
adc
dec
aas
dec
mov
lods
add
orb
dec
rolb
sbb
or
push
jo
add
push
roll
testl
add
xorl
movsb
add
sti
cmp
inc
cltd
push
loopne
push
mov
lods
or
cli
push
inc
add
add
adc
les
stos
adc
leavew
inc
push
test
mov
pop
data16
and
mov
mov
xorb
jle
lea
inc
sub
imul
xchg
aaa
sar
inc
rcrl
xchg
add
sar
adc
cltd
mov
add
mov
addb
les
cwtl
inc
add
and
jg
daa
aam
rcrb
or
inc
xchg
loop
out
mov
xchg
cmc
call
cltd
in
stc
add
cltd
add
sub
ss
shrb
aad
fiadds
sub
add
push
subb
flds
add
dec
loopne
or
pushf
scas
shrl
add
pop
jns
adc
aam
fwait
or
pushf
jb
xchg
in
les
call
vandps
dec
cli
cmc
popa
add
or
mov
add
mov
cltd
inc
xchg
aas
scas
fwait
or
jp
fisubrs
jo
or
pop
fs
push
jns
pop
hlt
cwtl
push
mov
rclb
dec
push
clc
decl
push
sub
mov
dec
movsb
leave
and
cltd
and
push
rorb
test
mov
push
les
outsl
cmpsb
fldl
sbb
cld
orb
test
in
inc
push
ja
outsl
xchg
xchg
sti
in
dec
in
dec
jne
add
test
loopne
fwait
sub
hlt
call
adc
or
adc
adc
ljmp
adc
sbb
mov
mov
sbb
shlb
out
mov
mov
add
loopne
inc
mov
and
cmpl
lock
fwait
push
aad
mov
nop
js
and
jne
fists
loopne,pt
sbb
mov
sbb
or
lds
fldl
mov
popa
jae
aam
adc
cmpsb
push
cmp
ja
loop
mov
mov
pop
dec
pusha
push
pop
in
add
pop
sbb
and
sub
jns
loop
pop
mov
and
xor
jge
or
pop
lcall
inc
loopne
add
adc
or
pusha
adc
add
cmpsb
dec
adc
fisttps
mov
gs
scas
or
rcrb
loope
cs
mov
push
jecxz
xchg
loop
dec
test
shl
sti
cli
decl
push
jnp
xchg
xchg
bound
and
sub
ret
test
scas
xor
inc
in
sbb
mov
incl
loopne
subb
mov
mov
inc
andb
push
orb
sub
inc
cmp
ss
or
inc
sbb
rorl
arpl
ror
xorb
test
mov
in
pusha
les
add
pop
and
inc
cmp
out
mov
lock
sub
enter
lea
adc
add
inc
inc
pop
dec
jle
js
jns
sub
outsl
jp
cs
mov
sub
test
sub
and
pop
pop
add
testb
and
call
mov
sarl
outsl
and
mov
sub
mov
add
pusha
cltd
notb
adc
inc
add
icebp
adc
pop
push
mov
outsb
mov
adc
jo
sti
js
adc
leave
cmp
and
outsb
lods
stos
in
mov
test
add
fisubl
sub
loopne
nop
aad
lcall
outsb
jp
mov
aam
fstps
and
sub
mov
stos
scas
mov
jo
bound
dec
inc
mov
daa
andl
mov
shlb
xchg
out
mov
mov
jp
add
sbb
test
sbb
adc
pop
sahf
das
push
imul
or
nop
xor
and
rcrb
push
xchg
popa
fdivrs
out
pop
mov
inc
xor
mov
push
insb
bound
and
adc
stos
push
loop
pop
push
loop
xchg
sbb
lods
insl
adc
mov
cli
fstpt
and
jp
sbb
lods
test
xchg
loope
push
outsl
pusha
stos
pusha
mov
in
ret
bound
pop
filds
pop
sub
mov
std
scas
inc
aas
push
jp
dec
ret
rolb
jg
call
mov
add
or
nop
adc
imul
or
add
inc
pusha
inc
adc
mov
mov
push
add
scas
es
test
jp
out
mov
and
and
pusha
loopne
mov
push
push
or
inc
into
jb
adc
jo
or
sbb
lcall
or
in
subb
dec
fisttpl
rorb
lock
mov
decl
test
add
inc
jo
sub
jns
mov
push
sbbl
add
cld
adc
pop
jl
sbb
fildll
mov
pop
rorb
push
and
stc
pop
adc
clc
inc
or
and
and
inc
popl
jp
pop
jo
sub
inc
test
addb
shl
into
add
lock
adc
loopne
insb
add
fsubs
xchg
sbb
sbb
fmuls
out
mov
lock
in
fildll
adc
loopne
js
sub
jge
fbstp
and
mov
orl
xchg
js
jns
and
mov
cli
fists
sub
adc
xor
xchg
loopne
icebp
cmp
or
je
and
stos
dec
fnstsw
inc
scas
jbe
jns
inc
or
push
push
lret
or
push
jo
pop
rclb
push
sbb
inc
lcall
pop
dec
mov
popf
xchg
push
rclb
outsb
mov
nop
and
sub
xchg
jb
pushf
pop
shlb
mov
add
shlb
negb
aam
or
and
les
adc
xchg
dec
in
ret
adc
inc
and
sbb
into
in
mov
rorl
int3
xor
loop
dec
sbb
and
arpl
xorl
fwait
movsb
pushf
fldcw
ret
subb
fdivl
xor
add
add
xchg
lods
mov
adc
insb
or
dec
or
xchg
in
and
and
cli
adc
or
cmp
jb
sbb
push
adc
push
or
xorb
xchg
add
rcll
and
adc
popf
xor
lods
pop
fisubrl
xchg
dec
and
call
jb
cwtl
push
stos
dec
push
mov
dec
adc
lea
sbb
lcall
mov
shlb
jg
mov
pop
negl
or
adc
add
sbb
scas
clc
or
adc
filds
test
imul
aaa
push
adc
mov
dec
repnz
dec
or
mov
incl
ret
mov
roll
pop
push
mov
inc
out
xchg
js
rolb
mov
sarb
and
cld
sub
mov
or
and
outsl
inc
push
inc
call
dec
mov
outsb
or
shlb
movsl
clc
mov
push
mov
xor
shrb
lret
dec
sbb
mov
or
mov
clc
call
in
aam
adc
mov
jns
cmove
cwtl
test
roll
cmp
or
add
jg
shll
adc
rorl
xorb
pop
inc
pusha
movl
ret
add
inc
lea
inc
pop
dec
loop
jne
rclb
and
and
sub
cwtl
cwtl
and
xchg
js
mov
sub
fisttps
sbb
cmp
and
jae
push
outsb
adc
incl
sub
cmp
mov
jno
cmp
sbb
cmp
dec
adc
adc
in
cld
lds
or
inc
sbb
cld
jle
jmp
mov
jns
shlb
adc
add
ljmp
xorb
xor
orb
scas
push
in
jp
rcr
rcr
in
mov
adc
std
or
mov
fadd
adc
or
and
add
inc
je
outsl
sub
add
cwtl
push
adc
lock
and
xchg
in
sti
pop
mov
inc
lock
rcl
mov
nop
pop
mov
cmp
popa
pop
lods
loope
clc
call
pop
mov
add
mov
cs
or
gs
add
stos
lock
inc
sbb
mov
filds
add
outsl
pop
push
sub
testb
mov
xor
sbb
adc
pop
add
ret
test
lahf
sub
das
cli
jg
adc
adc
adc
mov
mov
movsl
xchg
pusha
adc
pushl
adcl
xchg
and
inc
inc
pop
popl
adc
xchg
adc
test
add
mov
pushf
xchg
mov
call
dec
mov
and
add
mov
mov
sub
xchg
or
cmp
add
jge
push
xor
loopne
mov
scas
lock
pop
jl
xchg
mov
add
add
adc
ds
add
movsw
mov
sti
push
clc
test
icebp
sub
shlb
pop
or
pushf
jns
mov
test
ds
add
sbb
inc
xchg
incl
xor
and
xchg
xchg
stos
pusha
shl
add
push
stos
push
mov
xchg
inc
in
insl
lods
push
dec
clc
and
adc
and
jno
ljmp
add
aas
or
cmp
loope
mov
mov
cmp
rol
mov
push
pop
mov
lods
dec
lea
shrb
aam
icebp
or
imul
jg
cld
test
dec
add
test
dec
mov
add
pusha
xor
mov
fwait
sahf
movsb
pop
sub
xchg
add
adc
je
push
movb
orl
sub
mov
jg
arpl
add
cmp
add
lock
orl
inc
lock
mov
dec
xor
add
sub
popa
ljmp
adc
push
fwait
cmp
int3
push
adc
mov
in
add
test
add
popl
mov
rcll
add
push
das
inc
sub
add
and
test
pop
push
sub
add
inc
outsb
inc
test
add
gs
icebp
xor
stos
push
out
popf
or
or
sub
or
fadd
scas
jo
mov
push
inc
mov
frstor
push
adc
outsl
xchg
shrl
test
xchg
in
inc
test
cmpl
or
popa
add
xchg
pop
ficompl
ret
and
xchg
mov
xchg
aas
cmpsl
and
pop
inc
dec
mov
shll
ret
es
xor
inc
popf
xchg
dec
rolb
push
ret
shl
mov
xor
sbb
rolb
pop
add
and
mov
or
mov
push
mov
pusha
out
mov
cmp
push
addl
add
inc
fnsave
js
mov
mov
and
push
sub
xchg
jno
inc
aas
nop
dec
das
xchg
mov
inc
inc
je
xchg
sbb
xchg
lahf
dec
add
add
in
dec
push
pop
add
fs
xchg
xorl
subb
push
pop
cmp
sbb
mov
push
dec
ret
mov
xchg
data16
nop
aam
push
je
add
add
lods
movsb
out
shr
call
jnp
sub
inc
outsb
in
pop
dec
aam
xchg
shrb
mov
sbb
orps
setp
pusha
jl
incb
pop
mov
test
lahf
xor
ret
bound
in
mov
jp
mov
jne
pop
jle
mov
xchg
dec
cli
das
sarb
cmpsb
rolb
or
inc
loop
lcall
pop
sahf
and
fiaddl
popa
push
pop
nop
test
fsubrs
lcall
or
add
in
data16
and
add
mov
xsave
outsb
or
or
sub
mov
push
loopne
push
stos
ficoms
or
test
dec
popf
out
mov
gs
pushf
enter
adcb
add
sub
outsb
ja
and
in
subb
add
fs
adc
xor
gs
lret
jle
or
insl
test
inc
cmpl
ret
lea
push
sub
test
movb
aam
and
scas
push
pop
jns
xlat
loope
in
ret
push
test
les
insb
test
add
or
loopne
jecxz,pt
jbe
dec
xchg
icebp
xor
xchg
jbe
add
push
lock
push
adc
adc
push
andb
push
jae
cmp
sub
lret
lods
outsl
xchg
or
push
fdivs
mov
adc
orb
call
loopne
sbb
cmc
mov
inc
outsl
jl
inc
js
inc
sub
push
pusha
je
add
xchg
pushf
movsb
push
lret
and
nop
jp
push
cmpsb
inc
in
or
bound
jno
push
xlat
and
aam
jo
or
cmp
fidivl
push
clc
decl
xchg
stos
push
xor
aaa
mov
or
adc
or
popf
push
test
outsb
pusha
cltd
cmp
mov
push
in
cmp
adc
lret
sbb
std
lcall
lods
add
pop
rorl
and
mov
into
sbbl
pop
jmp
rclb
mov
jns
addb
adc
and
test
mov
sub
ret
pop
sti
fcomip
pop
lret
loopne
in
into
inc
or
push
loope
in
cmpsl
add
sahf
insb
sbb
fdivrp
adc
pop
xchg
add
daa
into
inc
cmpsl
mov
je
aam
jbe
or
ret
in
inc
mov
movsb
pop
pusha
test
cmp
fisubrl
xchg
mov
fistpll
sahf
rolb
or
push
pusha
sarb
or
loope
in
pop
lock
pop
movsl
inc
pop
mov
inc
pop
jne
push
adc
cli
mov
add
mov
adc
mov
mov
cmp
inc
mov
inc
adc
ja
sbb
dec
hlt
or
jp
lock
add
or
sbb
cltd
ret
ljmp
and
add
mov
fiadds
mov
xchg
mov
mov
enter
popa
xchg
out
mov
dec
leave
data16
mov
icebp
mov
mov
idivb
sbb
popf
mov
add
sbb
scas
dec
cs
test
cwtl
add
sbb
sbb
sub
xchg
add
push
inc
xor
cltd
sbb
xor
addr16
pop
or
insb
jne
lds
mov
cli
pop
jb
popa
add
and
lock
sbbl
push
jecxz
mov
dec
jp
lods
sub
fwait
mov
scas
adcl
jo
sbb
loopne
xor
cmpsb
pop
add
ds
adc
pop
bound
add
add
push
inc
lods
mov
imull
add
xchg
mov
test
and
lcall
adc
add
cltd
lock
inc
add
jo
cmpsb
or
add
test
lods
pusha
add
icebp
adcb
mov
pop
sub
sub
xor
jno
or
lock
outsb
inc
popa
sbb
sbb
inc
in
ficoms
or
adc
mov
pop
xchg
test
sahf
sbb
mov
add
or
or
aam
cmp
call
push
add
inc
push
add
aam
mov
add
adc
add
inc
les
and
adc
sbb
push
dec
frstor
add
mov
jl
hlt
dec
pusha
pop
into
lods
shl
and
outsb
mov
sub
xor
sub
out
mov
sarb
out
cmpsb
dec
loopne
negb
push
aam
jo
popf
rolb
sub
lock
imull
pop
add
mov
mov
outsl
or
mov
sbb
scas
push
dec
pop
inc
sbb
rclb
lret
or
add
sbb
test
cmp
mov
testb
mov
pop
inc
cld
outsl
and
pop
in
adcl
pop
and
cli
lock
sub
pop
movb
in
ss
add
jo
or
push
lcall
and
and
push
pusha
das
ret
nop
stc
adc
sbb
subl
inc
adc
or
mov
lcall
nop
pop
outsb
in
popf
and
add
jg
inc
and
mov
or
sub
xorb
push
mov
pop
jg
push
adc
in
push
mov
adcl
sbb
mov
pop
or
or
jno
mov
psraw
add
sbb
decb
lahf
add
sti
sahf
rolb
test
xchg
scas
ljmp
sbb
roll
xlat
pop
cli
and
out
gs
in
outsl
ljmp
mov
xor
int3
xchg
jo
sti
dec
lahf
pop
add
bound
cld
jbe
push
sbb
ds
adc
idiv
scas
adc
sbb
push
cltd
in
clts
or
xor
add
sub
xchg
xor
jp
xor
jb
inc
popa
bound
js
lock
inc
jo
aam
mov
int
movsl
nop
popa
ss
xor
pop
sub
stos
add
idivb
pop
pusha
es
pushf
rclb
cltd
sbb
roll
push
rcrl
mov
pusha
adc
es
jp
jo
test
add
jns
sub
jns
mov
push
mov
adc
push
in
stos
loope
add
push
push
test
pop
icebp
movsb
sbb
incl
add
subb
cmpsb
jns
jo
rorb
mov
push
ret
mov
pop
xchg
mov
cmp
test
sub
test
enter
xor
xor
push
shr
or
push
jo
cmpsl
adc
mov
sub
jae
mov
mov
jp
nop
or
addr16
nop
leave
add
out
add
orb
adc
fdivrp
lcall
xchg
adc
cmp
jns
or
sbb
stos
iret
xchg
stos
sbb
loop
add
sbb
inc
adc
icebp
xchg
mov
lcall
test
or
dec
outsb
out
arpl
sbb
mov
mov
aas
shll
add
sub
repz
ljmp
xchg
sbb
mov
adc
test
jns
and
mov
les
or
mov
outsl
das
into
outsb
mov
adc
and
or
sub
cs
mov
cmp
and
cmp
sbb
adc
test
mov
jecxz
cmpl
call
or
rcrb
mov
lods
mov
xchg
nop
popa
jmp
test
mov
adc
mov
push
mov
ljmp
inc
adc
fistpl
jp
inc
popf
sbb
add
les
loopne
outsb
or
xor
pushf
adc
das
or
stc
rol
shl
fdivp
add
inc
loopne
sbb
lock
jle
cmp
dec
mov
jp
nop
sbb
adc
cwtl
ss
fwait
adc
adcl
and
andl
cmp
xor
pop
loop
in
repnz
push
inc
ss
push
mov
movsl
adc
movsb
jge
add
aaa
add
pop
xor
pusha
add
daa
movsl
jp
outsb
push
push
and
fdivr
dec
les
xor
popa
add
incl
fldl
adcb
cmpb
jl
mov
push
push
cmpsb
add
cbtw
add
add
cmpsb
xchg
dec
outsb
mov
add
cmp
push
into
push
push
pushf
inc
lods
sub
and
push
push
lock
cmp
push
jmp
mov
imul
push
push
xor
pop
add
mov
jno
test
rcl
scas
push
and
or
xor
rcr
sbb
jmp
push
jns
rorb
add
xchg
mov
or
xor
ret
out
cmp
cmp
fcoms
xchg
in
mov
inc
adcb
nop
adc
mov
xchg
add
cmp
cltd
loop
sub
pusha
addb
sti
cmc
adc
cs
shlb
adcb
insb
or
xchg
idiv
add
loope
test
leave
cltd
addb
add
jmp
insl
add
and
add
and
stc
lock
and
or
adc
sbbl
jl
je
inc
in
add
push
cmc
test
ja
lods
aam
fs
sbb
in
std
jg
inc
and
mov
xchg
addb
or
mov
fwait
mov
insb
and
jmp
aas
add
out
insb
arpl
xlat
test
push
add
push
sub
lcall
add
orb
nop
mov
inc
add
push
lret
adc
jp
lret
icebp
jmp
xchg
sbb
and
ret
test
cmp
roll
mov
push
mov
mov
subb
and
pop
inc
insl
ret
scas
adc
add
outsb
js
aad
test
enter
cmp
in
cwtl
jg
in
cmpsb
push
nop
jnp
push
add
popf
sbb
in
push
add
mov
mov
aam
jb
ficomps
and
add
in
add
jns
xchg
shlb
roll
lret
fs
mov
outsb
inc
cwtl
mov
cmpsb
je
mov
inc
data16
std
int3
fdivl
or
and
push
je
xchg
addb
dec
cmp
mov
cmp
sti
mov
rorl
sub
shlb
loope
call
adcb
inc
popa
rclb
or
inc
mov
add
mov
sub
dec
cli
clc
inc
addr16
imul
fisttpll
or
dec
or
add
adc
lcall
les
pop
add
lcall
notb
pop
pop
cmp
add
dec
jg
push
add
sub
int
push
push
pop
shlb
sbb
adc
xchg
push
cmpsb
pusha
add
jg
pop
push
cs
lds
push
inc
and
ljmp
mov
shlb
aad
mov
jns
add
jmp
and
ret
cwtl
xchg
add
jns
addl
inc
and
jns
fs
stos
divl
push
ret
sbb
adc
shll
add
mul
jp
sub
or
push
les
enter
rol
out
scas
test
add
push
cs
rorl
ret
int3
and
mov
mov
and
xchg
add
inc
sbb
and
das
lret
jns
jmp
jle
xor
or
pop
sbb
repnz
and
lods
adc
jecxz
dec
ret
loopne
test
adc
es
push
mov
inc
push
test
inc
jns
mov
in
nop
mov
int
filds
decl
inc
sbb
sbb
sub
in
loopne
dec
stos
mov
fs
fistpll
adc
and
ljmp
inc
test
clc
or
jns
icebp
or
mov
push
fdivr
decl
inc
rcl
push
mov
cmp
or
dec
push
les
addb
inc
lds
mov
pop
loopne
jns
sbb
inc
inc
sub
mov
adc
das
scas
adc
pusha
sub
sbb
fcoml
xchg
and
add
jmp
mov
popf
add
or
or
popf
inc
or
lahf
int3
fdivrs
mov
mov
das
mov
jle
movsl
mov
cmp
fs
add
scas
adc
add
mov
push
ljmp
aaa
sar
es
pop
sahf
fcoml
xor
jg
dec
cmp
mov
jl
or
add
xchg
mov
mov
fnstenv
pop
xchg
in
or
testb
in
call
jp
shlb
jno
fidivrl
fiaddl
and
cltd
pusha
or
unpcklps
int
add
stos
add
cmp
sbb
rolb
adc
rolb
out
adc
and
shrb
rorl
subb
fs
add
in
and
push
mov
add
adc
push
ljmp
push
pusha
in
test
ja
push
decl
rolb
sbbb
shll
ljmp
shl
xorl
sbb
mov
jp
hlt
and
outsb
adc
ljmp
add
pop
push
mov
xorb
sub
add
push
mov
inc
imul
mov
add
cltd
inc
or
dec
mov
and
push
jo
and
adc
sub
mov
add
mov
popa
addb
and
popf
add
rorb
jns
inc
inc
sub
push
mov
dec
lcall
jbe
inc
clc
or
lahf
and
pop
sbb
and
inc
add
icebp
out
imul
pusha
mov
cwtl
fcompl
aad
je
push
push
jbe
lock
shrb
mov
test
nop
xor
dec
loopne
pop
hlt
inc
shlb
imul
icebp
shrb
pop
xchg
sub
mov
or
popf
and
push
xchg
jns
fs
int3
xchg
clc
sub
sbb
mov
or
ja
pusha
xor
mov
inc
mov
jecxz
adc
hlt
lret
pushf
inc
clc
mov
loopne
mov
push
sub
mov
int3
jno
sbb
and
mov
or
das
test
mov
testb
or
mov
add
mov
fstpl
mul
and
cmc
add
mov
out
scas
es
insb
inc
adc
push
nop
and
cltd
xchg
fsubrl
in
or
push
ss
mov
imul
add
fsubrl
xchg
add
and
stos
sar
inc
icebp
scas
adcb
jns
repnz
jge
into
and
pop
mov
sbb
xchg
fwait
dec
and
push
popl
inc
fisttpll
stos
inc
out
rclb
in
mov
test
ja
or
push
pop
sbb
pop
popf
fimull
out
sahf
fcoms
dec
adc
and
or
xchg
movsb
lods
jns
pop
adc
and
hlt
ss
sbbl
andb
movsb
scas
loopne
fdivrl
test
push
push
add
scas
xchg
outsb
push
in
sbb
jo
pushf
sub
add
sar
data16
subl
outsb
or
xchg
jl
xchg
push
cli
push
mov
jp
aam
or
add
fcmovb
inc
add
nop
inc
xchg
add
mov
cmpsb
shlb
or
lods
jns
std
push
jbe
sub
aaa
mov
sbb
sbb
test
or
jno
mov
pop
mov
add
movsb
mov
add
push
subb
lock
and
mov
dec
xor
jne
pusha
out
clc
or
imul
test
out
mov
inc
push
inc
aaa
movsb
pop
loopne
insb
add
xchg
sub
and
jno
jno
lock
xchg
add
sub
push
add
ficomps
test
adc
enter
rcrl
sub
sub
mov
xor
loopne
and
mov
cmpsl
jo
mov
js
sahf
loopne
mov
dec
js
dec
or
mov
mov
mov
sbb
jns
nop
addl
cmc
cmp
add
xchg
xor
stos
adc
jno
inc
jns
das
push
adc
jge
push
mov
add
sub
incl
outsl
outsl
outsb
adc
push
imul
test
xchg
mov
inc
pusha
insl
add
dec
sbb
andb
add
cltd
adc
jp
loopne
add
push
popf
mov
push
mov
jge,pt
shlb
jno
add
mov
push
mov
mov
lea
or
inc
add
xchg
roll
cmp
lret
dec
push
dec
sbb
and
mov
fistl
movsb
in
jne
and
pusha
je
sarl
xlat
add
sbb
rolb
add
rolb
pop
jnp
roll
xchg
mov
xchg
loop
incl
pusha
adc
out
push
xor
leave
incl
mov
subb
rolb
mov
in
adc
stos
mov
add
movsb
pusha
out
xchg
fisubl
lods
pop
in
adc
xchg
dec
jns
ret
add
ficomps
shll
mov
cmp
hlt
and
and
fstl
or
xchg
sahf
lods
lock
pushl
popa
lcall
inc
dec
jecxz
sbb
xor
movsb
outsb
es
jle
in
rcll
stos
lods
out
ret
sbb
popf
and
mov
decb
hlt
sbb
xor
xchg
dec
and
sbb
loop
js
push
pushf
shl
add
pop
mov
sub
mov
jge
and
mov
jns
jbe
inc
ss
outsl
fs
andl
ficoms
sti
in
jmp
lods
mov
mov
mov
add
sbb
cld
push
in
mov
mov
gs
into
mov
rclb
cmc
fwait
movsl
popf
ret
push
sahf
inc
orb
or
cwtl
add
add
jns
nop
xor
adcl
cltd
loopne
and
add
jmp
mov
add
jns
add
push
into
adcl
mov
push
and
into
xchg
and
xchg
jp
incl
lock
pop
loopne
jns
xor
mov
xor
mov
add
rorb
test
fisttpll
fs
or
scas
sbb
inc
xchg
lret
nop
loopne
dec
out
pusha
mov
dec
call
jns
shll
adcb
sbb
fldcw
pusha
rcll
repz
push
fprem
push
call
jns
addr16
or
cs
mov
mov
push
out
add
sub
push
out
cld
ljmp
push
popf
or
add
js
sbb
mov
lods
stos
in
xchg
adc
sub
dec
xlat
mov
push
push
stos
push
add
push
or
mov
xor
outsl
sub
mov
xor
sbb
sbb
mov
roll
loope
sub
stos
mov
lret
xchg
cmp
push
mov
aam
xchg
dec
mov
sub
hlt
nop
pushf
jge
aam
lds
add
loope
sbb
xor
les
insl
add
adc
fidivs
mov
icebp
push
rclb
pop
js
pop
jae
inc
inc
inc
pop
dec
inc
sub
mov
add
or
add
test
sti
lea
jno
insl
sti
js
pop
xor
popa
or
stos
dec
push
popf
inc
out
mov
insb
jge
lock
xchg
lret
xchg
xchg
leave
sub
dec
fs
sbb
movsb
outsl
push
fists
jp
adc
adc
add
sub
adcb
out
mov
mov
lahf
inc
lock
push
jp
fwait
adc
or
xchg
adc
subl
int3
push
outsl
sbb
in
sti
test
popa
or
adc
lret
push
insb
stos
jbe
subl
mov
xor
push
negb
nop
xchg
test
sbb
test
sbb
push
xchg
fwait
sbb
lea
test
mov
loop
stos
scas
jecxz
and
mov
add
adc
add
mov
add
cwtl
push
cmc
add
push
adc
sub
stos
xor
test
lea
ret
rorl
subb
divl
mov
and
rcrb
pushf
addl
test
and
int
cli
bound
cs
mov
cwtl
xor
lds
pop
mov
subb
jle
sbb
lret
negl
test
repnz
add
adcl
add
xor
dec
or
adc
add
sbb
add
mov
push
sub
adc
hlt
push
or
jp
add
and
sbbb
call
mov
xchg
pop
js
xchg
lcall
cli
push
and
enter
imul
clc
add
aad
pop
mov
mov
mov
movsl
sahf
and
out
mov
data16
mov
sub
sbb
add
adc
lcall
or
jnp
or
or
data16
and
fs
popa
jns
addb
cld
psrlw
sub
adc
dec
orb
dec
aam
jecxz
sbb
and
sub
jle
xchg
sub
lea
sbb
jns
or
pop
lret
dec
popa
inc
ret
push
xor
sarl
ss
xchg
scas
adc
stos
cld
movsl
dec
inc
adc
sbb
and
cmp
sahf
adc
outsb
out
sub
test
mov
rcrb
mov
adc
pusha
jecxz
inc
rolb
addb
push
pop
push
xchg
inc
or
xchg
jp
add
sbb
or
or
jns
and
loopne
sbb
adc
ret
sub
adc
push
sbb
leave
xchg
mov
rolb
or
fiadds
in
cltd
mov
and
jns
add
jl
lods
loopne
inc
les
push
and
sub
outsl
xorb
adc
aas
cli
pop
mov
dec
push
pusha
xchg
scas
xchg
mov
or
and
nop
int3
inc
or
addl
sub
sub
xchg
enter
loop
push
cld
add
push
add
jns
inc
push
mov
and
jnp
dec
pushw
push
mov
push
mov
ljmp
ljmp
ljmp
pop
dec
int3
jns
add
xchg
test
sbb
ret
outsb
es
ja
sub
inc
push
in
and
inc
mov
hlt
or
sbbb
xchg
pop
lock
xchg
ds
loop
mov
adc
fcom
cmpsb
subl
mov
push
notl
xor
fcmovnu
push
pop
mov
cltd
xchg
loop
mov
int3
add
push
xchg
sbb
test
adc
rolb
sub
adc
int3
jp
test
addl
test
adcl
popa
outsl
mov
int3
inc
and
sub
jp
jb
mov
add
stc
flds
add
shrl
add
pop
sbb
xchg
addl
mov
mov
fbld
out
xchg
cmpsb
xchg
movsb
test
cwtl
mov
mov
sbbl
mov
nop
lock
mov
lea
xchg
xchg
add
cwtl
fldt
sub
inc
ret
add
xchg
pop
xchg
or
sub
ret
and
push
lahf
lods
addl
rolb
add
and
in
sbb
fdivs
pop
popf
popa
or
and
ljmp
mov
inc
or
add
push
int3
push
lds
gs
insb
inc
popa
mov
jbe
je
cld
lods
or
mov
dec
push
xchg
and
enter
add
push
inc
repnz
hlt
inc
push
and
outsb
adc
fimull
je
lea
gs
sub
fs
push
pop
rorb
in
jns
out
jl
sub
add
push
out
jns
popa
and
fwait
or
sub
add
add
jp
add
and
popa
sbb
loope,pn
sbb
xchg
hlt
fistl
add
shlb
icebp
pop
push
cli
add
xchg
addr16
test
leave
gs
shl
add
popa
cld
lock
pop
mov
and
mov
or
add
sar
in
fwait
in
mov
pop
sarb
cli
or
popa
pop
pusha
xor
cli
jge
insb
mov
rol
mov
insb
add
ss
je
movsl
sub
adc
in
call
adc
adc
mov
xor
add
mov
loop
data16
mov
jbe
into
and
and
sahf
or
cmp
scas
int3
gs
mov
out
mov
stos
rclb
mov
cmpsl
and
cmpsb
sar
es
push
repnz
ja
inc
sahf
mov
adc
ret
mov
cs
xor
mov
or
sti
outsl
push
add
xchg
sahf
adc
movsl
inc
mov
push
inc
int
jl
popf
sbb
cltd
jp
jbe
lcall
stos
push
and
mov
add
std
aaa
adcl
shrl
cmp
das
and
fisubs
incb
mov
arpl
jle
outsb
sub
mov
jns
dec
loopne
es
mov
clc
ljmp
adc
adc
loop
add
mov
jnp
add
nop
and
stos
pusha
adc
js
test
es
into
mov
xor
cmpsb
add
sub
loopne
jns
into
addb
mov
add
adc
or
jns
or
fsubl
outsb
mov
lahf
cs
fcomps
jns
and
int
add
data16
addr16
fildll
in
dec
jg
jns
shrb
add
fs
into
js
fiadds
loope
pusha
outsl
mov
jge
inc
repnz
mov
loope
mov
sbb
mov
and
dec
xor
or
lret
or
xor
mov
mov
add
and
outsb
push
test
cwtl
mov
movd
jmp
test
enter
cwtl
sub
js
aaa
out
adc
inc
xchg
ret
push
fcoms
xchg
inc
inc
adc
js
outsb
lods
xchg
adc
stc
filds
pop
and
popa
add
scas
clc
inc
or
pop
data16
and
fisubs
mov
movsl
hlt
test
mov
out
pop
lea
push
add
jp
outsl
in
incl
mov
lock
xor
outsb
mov
pop
add
jmp
test
dec
xchg
rorb
jp
sub
and
sub
inc
dec
in
loope
jmp
jns
add
sub
jno
jns,pn
aam
inc
pop
movsb
imul
adc
push
xor
add
pop
scas
xchg
add
out
add
add
popa
adc
sti
mov
mov
aam
or
add
pop
sahf
aam
fdiv
mov
mov
adc
inc
xor
adc
jg
out
mov
or
outsb
xchg
fisubl
xor
les
jb
lock
insl
add
push
xchg
mov
push
test
push
push
adc
add
inc
xchg
mov
or
pop
add
jg
pop
mov
iret
xchg
pop
jo
inc
add
sbbb
js
adc
pop
adc
sahf
cmpsb
roll
sti
mov
ficompl
add
stc
das
outsb
mov
pop
mov
jp
mov
add
clc
xchg
into
cmp
inc
es
add
mov
sarb
lds
push
movsb
push
jp,pn
adc
add
loope
inc
in
sbbl
pop
dec
jns
mov
pop
mov
jns
mov
inc
xor
xchg
push
fiadds
and
lock
xor
gs
add
mov
jne
enter
mov
nop
nop
les
incb
loopne
and
mov
or
jno
xchg
andl
and
pusha
js
lock
add
dec
nop
cs
dec
sbb
or
sar
mov
dec
jo
sbb
xchg
pop
lcall
and
mov
xchg
fwait
sub
adc
lret
shl
dec
les
cli
mov
inc
mov
test
repnz
sbb
xchg
mov
xor
pusha
push
mov
lock
movsb
adc
cmp
lea
imul
std
ljmp
in
mov
mov
ss
jno
lea
cmpsb
mov
add
or
add
sti
sbb
mov
add
or
mov
push
adc
insl
cmc
sbb
sbb
sbb
popf
push
test
jecxz
sub
add
ficoml
add
pop
inc
loope
in
xchg
mov
add
sub
jb
lcall
roll
dec
into
iret
push
pop
js
nop
test
pusha
insb
test
pushf
loope
mov
xor
lock
sbb
daa
mov
pop
xor
js
xor
subl
mov
fwait
stc
jns
aas
jns
sbb
in
dec
inc
aaa
stos
xor
pop
jecxz
dec
xchg
xchg
aaa
add
insb
sub
dec
mov
adcl
cmpsb
xorl
xor
cs
subb
add
loope
or
inc
addr16
add
mov
inc
push
sti
adc
sbb
inc
inc
adc
hlt
pavgb
adc
cli
ja
xchg
sbb
aas
test
cmp
adc
loopne
push
movsl
mov
xor
cwtl
add
dec
add
sbb
imul
popa
out
shrb
loope
rcll
nop
push
aaa
lret
loop
imul
stc
cmpl
adc
pusha
cld
fsts
pop
pusha
inc
ret
push
push
inc
and
mov
add
mov
movsb
mov
or
mov
xor
or
cmp
icebp
push
out
xor
bound
add
mov
stos
decb
rolb
adc
lock
orb
xchg
out
mov
xor
in
mov
hlt
mov
loope
fs
movsb
rol
mov
push
ljmp
jle
ret
outsb
scas
pop
add
jp
mov
cli
push
jle
adc
loopne
sbb
mov
jp
inc
addr16
ds
sbb
inc
dec
pushl
xchg
xchg
mov
jge
pop
inc
xchg
sub
add
and
inc
mov
pushl
lock
jno
sbb
inc
rorb
stos
or
add
popf
ss
stos
mov
scas
jge
ret
outsb
and
sub
jns
sbb
stos
jo
inc
add
outsb
ret
pop
mov
sbb
pop
rolb
sbb
push
sbb
fbld
std
pop
sbb
inc
add
rcll
orl
xor
add
cmp
mov
sahf
cmp
and
push
and
addl
cmp
and
std
rclb
push
add
popa
addb
xor
pop
push
add
inc
adc
fdivp
sub
incl
int
sbb
add
cwtl
hlt
out
rclb
push
inc
stos
push
in
lods
popa
mov
push
pop
sarb
test
or
mov
lods
xchg
inc
outsl
cmpb
dec
or
fs
js
rclb
mov
add
dec
imul
pop
ret
push
push
fsubrp
orb
bound
add
and
js
loopne
shll
stos
sar
inc
and
icebp
nop
or
test
jo
xor
add
outsb
xchg
push
inc
mov
sbb
nop
add
xchg
add
in
jmp
mov
jecxz
test
push
mov
call
scas
mov
mov
icebp
sbb
adc
inc
xchg
lea
mov
mov
jo
sbb
adcl
inc
into
xor
adc
fiadds
mov
cltd
adcb
sarb
and
sbb
sub
dec
mov
sub
mov
xor
cmp
push
add
sub
push
pop
pusha
daa
push
or
xchg
or
movsb
imul
faddl
xor
push
imul
add
add
push
or
inc
mov
sahf
or
adc
out
fildll
test
and
in
or
add
test
popf
or
popa
mov
das
adcl
js
rol
stc
cltd
jbe
cmpl
xchg
xor
add
push
loopne
test
add
inc
inc
mov
lahf
adc
push
stc
xor
mov
xor
add
fs
mov
pop
shrb
inc
push
add
jbe
mov
pop
imul
pop
nop
ret
stos
push
rolb
push
lret
lret
aaa
shlb
ss
mov
add
xor
hlt
add
mov
jns
ret
mov
jo
add
sub
lock
in
cmpsl
jmp
sbb
xor
mov
ret
cmpb
xor
es
add
adcl
lcall
sbb
add
adc
insl
cld
push
sar
stos
sub
xor
or
pop
test
repz
orb
push
filds
sub
inc
dec
or
popa
lods
add
sub
mov
mov
mov
add
dec
ret
add
and
jo
add
ss
test
ret
cli
pop
inc
loope
test
cltd
addb
orb
xchg
shrb
inc
cmp
hlt
add
cmpsb
mov
xchg
pop
inc
push
clc
jbe
fwait
cmpb
adc
sti
jns
xchg
mov
add
cmp
int
mov
xchg
test
mov
call
push
and
xlat
push
push
lds
push
pop
or
dec
sbbb
add
loop
loop
jp
push
inc
pop
rol
sarb
std
sbb
pop
xorb
jns
cmpb
or
xchg
addb
xchg
insl
add
es
or
cwtl
ss
mulb
and
dec
xchg
shrb
adc
sub
adc
int3
popl
sbb
clc
push
test
jg
sbb
sbbb
jns
rcrb
adc
or
fdivr
shlb
outsb
out
ljmp
and
inc
and
add
shrl
rol
push
sbb
subl
addl
test
push
inc
sub
into
adc
sub
xchg
movb
mov
mov
push
adc
scas
jp
nop
xor
into
adc
cwtl
sar
push
adc
popa
inc
xchg
ret
addl
aas
gs
lcall
mov
aam
subl
pop
add
iret
add
movsb
inc
mov
mov
jmp
imulb
in
push
in
shr
mov
addl
loopne
xor
or
adc
rolb
push
jne
loope
push
inc
push
push
xor
mov
aaa
movsl
mov
sbb
inc
adc
push
or
push
push
adc
cmp
in
jge
ret
mov
add
cld
movb
cmpsb
je
ja
dec
les
adc
mov
test
jecxz
jp
inc
or
fbld
xor
xchg
hlt
jbe
and
in
loopne
incl
sub
ja
or
mov
dec
jbe
add
dec
movsl
dec
test
adc
ret
sbb
xchg
icebp
stos
lods
sub
loop
add
std
std
add
sbb
jo
inc
xchg
incb
insb
mov
sub
sub
std
pop
mov
cmp
xchg
call
add
loope
mov
or
fs
out
jne
push
js
data16
cmc
sbb
adc
or
rorb
movsb
imul
pusha
stos
mov
and
in
shrl
add
aam
movsb
mov
fnsave
outsb
stc
lret
jg
sub
adc
jnp
or
push
pop
mov
in
pop
add
jge
add
and
dec
push
inc
jge
dec
dec
lcall
add
mov
inc
push
push
sbb
mov
mov
jb
ljmp
xor
cmp
out
push
push
nop
nop
sbb
in
rolb
stos
pop
adc
and
push
mov
mov
dec
mov
and
inc
loopne
sub
add
cs
xchg
subb
inc
xor
imul
negb
mov
pop
or
jb
push
scas
inc
mov
les
lock
sub
test
test
dec
loop
and
test
mov
stc
adc
jns
sub
add
loopne
call
test
ret
aad
dec
add
jge
sbb
mov
fmul
fldcw
push
mov
pop
sbb
bound
stos
arpl
sub
enter
sbb
jmp
mov
loope
popl
mov
adc
pop
loop
in
push
mov
xchg
cli
add
and
add
fidivl
cli
sbb
push
outsl
mov
mov
inc
mov
inc
gs
and
xchg
and
or
pop
sti
scas
adc
sub
and
jns
ret
inc
adc
mov
add
sbb
icebp
into
sbb
test
or
adc
test
hlt
and
cmc
es
dec
les
lahf
mov
out
cmpsb
in
hlt
stc
xor
loope
ret
inc
loopne
loop
es
test
xor
inc
ljmp
insl
mov
and
jp
jns
jno
add
insb
into
add
or
jbe
xchg
test
dec
cli
es
sbb
ficompl
jmp
and
jo
add
mov
clc
xorb
push
push
bound
add
sub
mov
subl
inc
mov
mov
nop
mov
xor
data16
jecxz
sub
mov
adc
stos
and
loopne
insl
pusha
bound
cmp
sub
push
shrl
adc
aad
test
fs
fwait
add
and
mov
fstl
or
push
pop
xor
pop
push
sbb
loop
add
lods
add
jp
fldt
jp
or
mov
sub
inc
inc
push
sti
scas
mov
test
mov
inc
sbb
push
clc
mov
adc
roll
inc
sub
clc
in
sar
inc
out
cmpsb
mov
dec
mov
in
pop
rclb
mov
pusha
mov
or
dec
fwait
negl
mov
or
mov
and
test
inc
cmpb
jae
xchg
es
jmp
mov
sbb
fcompl
cmp
and
ret
sbb
push
loop
pop
xchg
lret
inc
xorl
clc
mov
in
lcall
xchg
into
adc
sbb
add
sbb
and
ret
sbb
add
sub
loopne
adc
add
decb
stos
sbb
adc
nop
or
adc
lcall
pusha
mov
push
mov
orb
inc
xchg
mov
lcall
add
shrb
aam
inc
gs
lcall
pop
jmp
insb
push
xchg
loope
and
sbb
rorl
pop
cmp
add
rorb
cmp
dec
rcl
jne
outsl
inc
mov
inc
call
and
cs
add
inc
push
sub
mov
fcompl
xor
data16
lock
push
sub
add
adc
shll
movsl
lock
add
inc
cmp
or
outsb
movsb
icebp
lret
mov
add
push
mov
xor
leave
pusha
pop
call
cltd
and
cmp
and
jbe
add
subb
mov
in
mov
jno
xchg
sub
adc
xchg
or
pop
lock
cld
xchg
add
stc
lods
cmpl
pushw
xchg
inc
ja
push
incl
lock
rclb
rolb
shl
xchg
test
es
addl
push
cli
jns
push
xor
adc
xchg
jns
les
inc
dec
add
mov
pop
orb
subb
mov
insl
rolb
int3
iret
into
add
cs
rol
or
xchg
mov
xor
cmp
push
rorl
hlt
in
push
cwtl
les
add
add
push
shl
shrb
xor
pop
mov
add
or
sbb
push
fsubs
mov
add
xor
xor
sti
sahf
jp
sbb
sub
add
xor
pushf
add
add
and
add
lods
jns
dec
outsl
sub
push
sub
pushl
push
sub
jb
add
mov
stc
popa
sbb
jge
add
ja
push
filds
xor
aam
out
and
push
loope
jne
push
shll
sbb
arpl
cmp
pusha
mov
loopne
dec
nop
inc
nop
pop
dec
xor
cmp
cltd
jbe
and
jle
or
push
add
je
adcb
jns
repnz
add
mov
rol
in
push
inc
loop
add
pusha
or
xchg
xor
dec
data16
add
xor
dec
mov
push
xchg
in
adc
lock
pushf
insb
mov
sub
sbb
or
sbb
adcb
shl
xlat
sti
xchg
jo
or
les
test
pushl
mov
push
xor
in
mov
xor
or
mov
adc
outsl
add
lock
or
jo
std
sbb
inc
mov
icebp
push
es
adc
pop
fwait
rclb
push
xor
sub
lret
cli
xchg
or
arpl
xchg
adc
rcl
cmp
mov
fwait
sbb
rclb
subl
aas
adc
push
cmp
scas
cmp
mov
movsb
pop
or
into
push
rcrb
pusha
sub
test
sbb
push
les
jge
mov
or
adc
dec
loop
in
mov
rorb
and
daa
xorl
cld
daa
lea
inc
jns
adc
mov
pop
add
inc
sbb
mov
mov
nop
sbb
fildl
lods
add
and
add
nop
xchg
mov
or
add
adc
add
push
lcall
pop
mov
out
sbb
dec
shl
fldt
movsl
mov
add
push
jle
ret
pop
cld
ret
mov
out
jb
sub
std
push
jmp
xor
or
pusha
rorb
pop
cli
filds
jo
adc
in
icebp
vphaddbw
rorb
add
decl
add
push
inc
xchg
or
mov
sub
jns
test
mov
sub
mov
pusha
pop
xchg
adc
mov
push
sbb
mov
loope
scas
inc
cmp
push
push
incl
sub
jns
aaa
xor
icebp
mov
sti
mov
icebp
or
scas
fdivrs
adc
test
test
mov
xchg
or
jo
mov
movb
outsb
js
rorb
prefetcht1
pop
jl
movsl
mov
sbb
js
add
lods
jp
mov
es
push
mov
sub
xchg
sbb
jg
and
xorb
lods
mov
loopne
loopne
mov
rol
sti
outsb
shlb
addl
push
js
gs
repnz
mov
inc
xchg
out
xor
xchg
lock
inc
iret
lahf
jns
outsl
jg
inc
call
pop
addb
add
fisubs
mov
xor
icebp
or
stc
test
pop
hlt
sub
call
cltd
cs
rcl
mov
pop
add
jle
aad
mov
test
adc
sub
add
inc
xor
sbb
push
add
in
outsb
pop
les
cmc
jg
shr
lret
jp
add
mov
pop
mov
add
add
xchg
fwait
dec
frstor
adc
sahf
insb
sub
inc
inc
ret
or
push
pop
add
xor
bound
les
push
addb
pop
mov
xchg
or
and
ret
inc
ja
fs
jns
pusha
testb
xchg
push
mov
cmp
testb
stos
mov
jle
mov
pushf
fbld
notb
mov
clc
ret
xor
add
and
push
add
or
add
insb
add
inc
mov
add
rolb
add
popf
in
pop
cld
outsb
or
sbb
adcb
mov
push
dec
adc
add
cltd
mov
jae
repz
cmp
adc
push
aam
roll
subb
add
push
add
and
push
sbb
sub
mov
mov
out
test
sub
pop
pop
pop
and
and
in
out
scas
sbb
mov
mov
subl
mov
clc
or
mov
in
add
into
or
inc
push
add
jp
add
xchg
jmp
inc
shrl
add
jns
add
xor
pop
cwtl
testb
jp
jno
xor
loop
and
cmp
dec
lods
out
es
in
sub
jno
jns
fidivrl
jp
dec
or
push
hlt
pop
cwtl
pop
cmp
adc
sbb
jae
push
clc
hlt
subb
cmp
and
sbb
rcrb
mov
xor
inc
dec
cld
push
lods
mov
shlb
fs
jo
decl
out
sahf
daa
into
or
insl
lods
dec
mov
insb
add
inc
inc
sti
shlb
orl
adc
pusha
adc
jl
dec
inc
add
outsb
nop
add
push
imul
xor
push
xchg
and
push
jp
gs
shrb
ficoms
adc
loope
sbb
xchg
mov
test
push
xor
inc
mov
hlt
fildll
mov
sbb
js
jmp
fstpl
sbb
push
adc
add
scas
jle
mov
clc
adc
sbb
test
pusha
jge
add
adc
push
pop
roll
aam
ret
inc
outsb
mov
pop
lock
fidivrs
adc
sahf
mov
ljmp
push
popf
test
gs
inc
lock
mov
mov
into
movsl
mov
shll
mov
cmp
in
add
add
adc
push
sub
sbb
mov
test
iret
imul
xchg
out
jns
mov
pop
shrb
mov
sbb
push
or
int3
insl
push
cmpl
and
lcall
movsb
jns
inc
mov
lock
push
andb
inc
stos
or
outsb
sub
xchg
xor
clc
fisttpl
push
jp
sahf
xor
add
es
push
in
xor
pop
mov
or
mov
jmp
push
jne
in
fistl
adc
or
gs
add
cmpsl
imul
sbb
mov
lcall
and
outsl
jno
add
adc
fcmove
jno
pop
lock
push
adc
jnp
sbb
int
aam
push
pushf
jae
cli
cmp
sub
neg
divl
add
stos
aad
std
sahf
jns
popf
sbb
mov
jl
sahf
push
movsl
aam
push
loopne
pop
rcr
int3
test
xor
jl
xchg
sbb
lret
in
outsb
push
push
loop
mov
and
and
sahf
or
and
out
in
or
push
loope
jge
sbb
inc
dec
inc
jno
test
and
dec
add
insb
sbb
sbb
or
pop
movsb
imul
add
clc
push
lea
pusha
in
add
jbe
add
xor
movsl
pop
mov
and
mov
cli
pop
xchg
adc
or
pop
data16
mov
push
enter
enter
lods
or
or
cmpsl
mov
jp
cli
jmp
loop
in
ret
pop
inc
mov
shll
add
xchg
movsl
and
add
das
or
nop
lcall
ror
cmpsb
jns
or
mov
add
xchg
les
popa
cmp
push
repnz
mov
sarl
or
mov
push
outsb
xchg
or
and
icebp
decl
movb
add
mov
mov
test
jnp
mov
dec
fdivs
jns
adcb
sarb
mov
dec
inc
ljmp
arpl
into
ret
les
inc
adc
stos
or
jle
inc
movb
adc
ljmp
jb
inc
dec
je
pop
mov
popf
loop
rol
and
mov
sub
jns
test
sub
inc
sub
aaa
add
decl
nop
adc
add
leave
mov
ljmp
loopne
sarb
jg
lock
push
stos
inc
icebp
push
fcomp
xchg
dec
lock
in
xchg
adc
jg
mov
mov
jno
movl
mov
in
or
or
adc
cs
adc
inc
add
shll
pusha
and
jecxz
add
add
mov
or
adc
inc
push
mov
pop
add
pop
in
andb
xchg
xor
fmull
cli
jg
outsl
inc
push
adc
jecxz
add
inc
jo
data16
mov
or
pop
in
sbb
or
mov
add
out
adc
jo
ljmp
lea
mov
shl
sub
or
fdiv
add
xor
lahf
mov
or
sti
movsb
aaa
mov
test
push
cmpxchg
push
and
sbb
or
ret
dec
push
cmp
mov
loope
cmp
shll
push
or
sti
stos
xchg
add
imul
test
mov
loop
loop
lock
pop
popa
or
lcall
addl
adc
pop
cltd
subb
mov
roll
ret
add
mov
pop
push
xchg
insb
cwtl
push
or
gs
or
scas
enter
ret
fwait
jo
push
inc
outsb
or
jbe
xchg
adc
sbb
pop
gs
cmp
rorb
cmp
popa
push
ret
sti
xorb
into
xchg
jo
imul
and
ja
push
je
or
xchg
loopne
aad
rcrl
pop
sar
sahf
jns
dec
outsl
and
into
mov
cmp
inc
shlb
inc
adc
push
cld
adc
mov
andl
sarl
xor
imul
xor
jns
xor
hlt
push
jmp
inc
adcl
or
mov
jmp
loope
xchg
orb
push
sti
pop
or
or
push
lds
adc
ljmp
leave
sbb
adc
rcrb
iret
test
and
inc
lcall
adc
mov
cli
xor
pop
cld
orl
lods
and
and
mov
sbb
icebp
add
mov
jae
ljmp
adcb
jg
push
rolb
aad
jne
roll
mov
and
mov
call
stc
nop
sub
pop
sarb
mov
push
or
scas
add
adc
inc
cmc
mov
add
or
mov
inc
std
dec
cmpsb
popf
orb
mov
outsl
adc
icebp
loope
pop
roll
add
adc
mov
clc
fisttpl
or
add
pop
pop
pop
fbld
mov
xchg
nop
add
mov
inc
and
xchg
movsb
pusha
mov
pusha
movsl
test
adcl
or
add
mov
decb
jo
push
cmpb
push
sarl
nop
pop
dec
mov
lds
adc
push
or
sub
sub
sub
mov
popa
loop
rol
inc
adc
movsb
mov
mov
dec
fsubl
push
rcrl
dec
adc
rcrl
adc
adcl
dec
add
or
adc
and
mov
add
pop
jne
bound
add
in
cmpsb
adc
into
add
lock
les
and
lea
sub
xor
inc
add
sti
movsb
and
xchg
xchg
insb
imul
and
rorb
adc
test
cli
xchg
ss
inc
sahf
add
inc
cmp
sbb
in
and
std
fwait
addl
sbb
inc
fs
dec
clc
pop
ja
cmp
jmp
lcall
add
or
mov
sub
leave
cld
dec
push
and
andl
cmp
stc
shrl
adc
popa
aam
in
jns
jmp
loopne
xchg
andb
nop
ret
imul
ss
ret
rclb
push
jge
sti
lahf
lock
push
enter
add
xor
ret
jo
test
fcmovne
rolb
enter
add
and
mov
sbb
adc
popa
xchg
movsb
xorl
xchg
out
sti
int
push
or
popa
and
sbb
loop
sar
mov
jo
sbb
or
add
divb
cmc
jg
cli
sti
rorl
sub
add
ljmp
fdivl
sahf
aad
pop
fbld
imull
movsb
push
push
inc
mov
test
xor
aad
stos
test
push
aaa
pop
adc
repnz
sbbb
fsubrl
sti
enter
outsb
pushl
call
loope
stc
addr16
or
ljmp
stc
js
or
add
icebp
push
push
or
in
mov
addb
mov
add
adc
rep
in
jge
xchg
pop
or
push
push
push
adc
add
test
dec
stos
dec
jo
pop
mov
test
cld
in
roll
mov
test
mov
pop
cmc
push
insl
adc
cld
sbb
flds
sbb
stos
adc
cltd
push
outsl
fbstp
aaa
sti
aad
nop
lock
and
sbb
inc
incl
adc
mov
push
xorb
push
or
or
sub
push
dec
cmp
add
and
sbb
rolb
les
lods
sub
movsl
cli
andl
imul
jne
idivb
outsb
xchg
sbb
sar
imul
adc
add
jns
cld
xor
loope
jno
add
sbb
dec
add
out
add
dec
fisubrl
nop
daa
push
fs
outsb
ss
xchg
xchg
inc
xchg
movsl
pop
or
jne
out
add
in
jmp
adc
push
loopne
in
inc
fs
shlb
cld
xor
outsb
loope
xor
inc
add
add
sub
and
nop
out
std
jp
subb
adc
mov
add
imul
ficomps
pusha
dec
and
dec
cmp
js
call
hlt
add
mov
push
pop
and
adc
inc
ret
xchg
lcall
adc
fcompl
pop
and
pop
sbb
push
loop
add
cmp
or
or
cmp
orb
mov
ss
sub
xchg
push
inc
gs
jno
push
rcll
and
push
stos
es
lret
and
lret
mov
add
enter
subb
add
sub
jbe
ljmp
into
add
dec
jns
movsl
addb
inc
jns
or
xor
or
or
push
or
rolb
xchg
adc
adc
pop
lcall
adc
xorb
add
sbbl
jge
adc
lret
or
sub
insl
pusha
add
pop
shlb
test
outsb
test
sub
lea
add
or
popa
mov
outsl
bound
adcb
push
push
adc
jns
inc
inc
dec
out
int3
mov
jns
mov
cld
add
repz
fistps
notb
cld
or
or
inc
adcb
xchg
add
sub
xor
fcom
rcrb
mov
mov
or
dec
add
push
inc
or
enter
aad
gs
roll
mov
stos
data16
pusha
stos
out
inc
mov
inc
movsl
xchg
add
sub
jno
adc
xor
mov
add
adc
mov
mov
sub
stos
test
pusha
mov
xor
shlb
fs
mov
adc
sub
pop
adc
fidivrs
inc
inc
movl
inc
xchg
clc
lcall
xchg
xchg
rolb
sti
leave
inc
or
inc
or
or
mov
mov
movb
dec
or
inc
or
in
cmpb
dec
sarb
icebp
imul
pop
add
xlat
aaa
mov
fcmove
sbbb
add
aaa
rcrb
sbb
push
and
out
xchg
subl
loop
aad
aam
adc
mov
sbb
fsts
and
add
xchg
shrb
and
or
sub
ret
rorb
cltd
addb
push
cmp
ss
pop
aam
imul
hlt
sub
pop
add
jb
and
and
nop
dec
or
imulb
fldl
push
push
test
dec
or
or
sub
xchg
xor
xor
rcrb
cmp
stos
mov
cmp
sub
loopne
add
orb
inc
push
mov
push
add
stc
and
xchg
cmp
or
imul
xchg
test
les
sbb
push
pop
movsb
sbb
dec
push
inc
fisubrl
outsb
into
and
and
push
add
cwtl
adc
rcrb
movsb
add
loop
push
shll
inc
jmp
dec
adc
test
loop
sahf
and
clc
inc
cld
push
stos
inc
pop
adc
mov
xchg
inc
cmp
bound
cmc
push
rcrb
and
rolb
aaa
add
push
or
sbb
push
jmp
shrb
adc
jg
mov
dec
ret
sbb
les
loopne
xor
popa
add
addr16
and
incl
add
sti
inc
and
cmp
and
outsl
xor
adc
push
rclb
bound
ret
stc
mov
xchg
gs
and
dec
and
pop
ret
add
shlb
scas
scas
mov
pop
rolb
cli
add
add
pusha
mov
pop
mov
sbb
jne
in
xchg
shll
frstor
pop
xor
pusha
inc
insb
lock
jb
popl
hlt
incl
fsub
sti
sbb
cltd
sti
rcrl
hlt
ljmp
movb
jmp
xchg
sbb
movsb
mov
and
jecxz
test
and
cmc
or
inc
jns
popa
push
imul
fdivs
mov
mov
jo
decl
loope
roll
or
mov
xchg
jo
adc
inc
jl
ret
icebp
and
pop
dec
mov
test
and
fiadds
stos
cltd
inc
add
fwait
outsb
hlt
sbb
cli
xor
mov
pop
rcrb
not
loopne
add
sarb
pop
xorb
add
and
loop
dec
sti
stos
lcall
mov
mov
push
add
pop
sub
movsb
dec
xor
add
or
mov
adcl
and
scas
loop
push
arpl
cmpsb
pop
rol
sarl
in
lcall
mov
dec
cld
mov
pop
mov
sbb
popf
in
out
xor
gs
rorl
xchg
pusha
sbb
push
mov
rorb
cmp
add
aam
adc
mov
imul
popa
int
aam
add
sub
loopne
ret
inc
scas
adc
outsb
adcb
mov
ror
add
lret
iret
push
adc
popa
or
sti
movsl
nop
or
aaa
jecxz
adc
call
add
inc
cmp
add
cmc
inc
aaa
sar
cltd
jns
rcrb
addl
cmp
ret
inc
push
int
jmp
sahf
test
add
adc
stos
shl
mov
xchg
popa
decl
sbb
in
jle
push
and
mov
mov
and
loop
inc
xorb
and
adc
xor
jp
mov
in
mov
ret
test
sahf
cld
pop
aam
pop
in
cmc
jmp
add
add
and
jae
or
mov
lcall
mov
rorb
add
gs
sbb
scas
hlt
mov
sbb
xor
cs
add
jecxz
lahf
pop
or
mov
inc
add
jns
xor
dec
push
add
arpl
nop
push
jns
jmp
adc
add
fnstenv
sbb
dec
add
and
lret
andb
rolb
and
xor
mov
or
sub
cmp
sbb
push
mov
pushl
pop
jns
pop
andb
pop
into
push
add
aam
int
or
sub
call
push
add
nop
adc
fiadds
sub
and
pop
clc
xor
jo
mov
cs
xchg
loope
stos
or
mov
sbb
push
add
or
outsl
pop
mov
nop
cld
jle
fcmovbe
xlat
stos
pop
in
adc
mov
dec
imul
pop
and
adc
sti
or
jb
dec
inc
ret
movb
lret
fsubl
dec
inc
frstor
rolb
or
or
rorb
sarb
or
stos
int3
stc
add
ja
push
xchg
jns
mov
rcrb
and
xor
stos
push
push
mov
lock
mov
adc
mov
addr16
addl
in
fs
rcrb
js
inc
jp
mov
pop
das
pusha
push
xchg
or
mov
inc
mov
adc
xor
sar
jg
dec
add
stc
and
pop
xchg
mov
popl
pop
inc
mov
lea
popf
sub
add
aad
mov
pop
sub
jno
or
or
repz
push
add
add
insb
pop
mov
xchg
jns
xor
loop
nop
adc
jb
mov
ror
adc
insl
imul
xchg
mov
adc
insl
adc
lock
add
mov
fbld
sbb
test
mov
add
lea
scas
mov
les
clc
sahf
push
sbb
mov
push
jle
mov
or
push
out
adc
fiadds
subb
jnp
add
sti
add
mov
inc
push
lock
jbe
loopne
test
jbe
adcb
push
pop
outsl
outsb
mov
lret
icebp
decl
mov
outsl
push
ret
sbb
pop
and
aaa
adc
scas
push
or
or
cmpl
inc
push
loop
jns
mov
cmpb
jb
adc
cltd
shlb
incl
xor
pop
pop
sti
mul
cwtl
push
add
testb
pop
movsl
popa
test
jge
test
mov
out
sub
jbe
cli
mov
in
test
test
jo
aam
stos
mov
push
insl
lock
xor
scas
xor
insl
push
in
sti
stc
mov
and
dec
es
ret
or
jge
aaa
add
sub
loope
jb
push
mov
outsb
in
pusha
jns
nop
pop
lock
mov
test
das
cli
xchg
inc
orb
movsb
mov
sub
decl
push
jo
adc
xor
pop
rol
nop
push
push
popa
clc
leave
cli
in
fbstp
cmp
pusha
mov
cmpl
std
dec
add
push
xchg
adc
cld
or
rclb
popf
rcll
sarb
addr16
outsl
filds
sarl
pushw
adcl
xor
data16
push
cltd
lock
sub
adcb
ds
or
adc
and
arpl
and
and
push
sbb
sarb
jns
push
push
stos
rol
sbb
push
sbb
and
add
loopne
ljmp
mov
sbbb
add
je
pop
sbb
sbb
xchg
stos
dec
in
jo
add
mov
pop
lock
sbb
dec
pop
xchg
fimull
or
mov
adc
xchg
jg
pop
sbb
pushf
and
mov
adc
in
push
adc
sbb
add
xor
mov
mov
test
andb
in
jbe
add
pop
add
aad
cli
rorb
pop
add
insb
sbb
in
jbe
jg
int3
popf
rcl
stos
sbb
jge
adc
loopne
push
jp
push
adc
sub
mov
dec
sub
and
push
cmc
inc
and
roll
stc
mov
jmp
xchg
shlb
in
and
xchg
lcall
adc
repz
ljmp
xorb
insb
xor
gs
out
inc
mov
inc
inc
inc
mov
outsb
inc
loopne
pop
les
sti
hlt
pop
fisubrs
mov
inc
rol
cltd
sbb
add
xor
add
add
shrl
cli
jo
xchg
adc
pop
lcall
mov
ret
or
cmp
lock
pushl
adc
adc
ss
rclb
shlb
mov
jno
sub
ljmp
inc
push
dec
adc
lock
pop
pop
cmpsb
sbb
in
addl
jne
mov
inc
and
mov
push
push
and
lds
in
adcl
push
push
inc
clc
outsb
mov
dec
sub
mov
xor
inc
int
and
xor
sbb
loopne
sbb
dec
roll
lock
xor
sub
sti
decl
jecxz
mov
test
inc
popf
sbb
inc
subb
imul
test
pop
rorb
inc
or
sub
adc
imul
mov
and
lcall
mov
cmp
fcomps
push
js
mov
add
and
mov
sbb
fbstp
jae
dec
mov
rolb
mov
bound
adcb
xchg
push
add
xchg
ds
or
cmpl
sub
mov
push
mov
push
jbe
push
inc
or
add
add
push
es
push
or
jo
pop
sub
adc
addb
mov
jl
ret
adc
inc
adc
mov
add
add
add
add
push
or
inc
add
and
insl
ret
loop
mov
and
cmpb
jb
std
addb
push
in
push
out
and
push
and
xchg
adc
or
ja
cmc
mov
dec
mov
dec
jno
add
sbbl
or
add
pop
fwait
mov
sub
int3
push
shll
leave
adc
xchg
movl
scas
aaa
lods
ljmp
mov
add
jns
xor
adc
xchg
adcb
orb
dec
shrb
adc
sti
xchg
sbb
jge
dec
and
jns
into
mov
jg
pop
and
cmc
add
rol
rcrb
push
jecxz
lock
cmp
cs
jb
mov
mov
xchg
mov
dec
int3
pop
cmpsb
push
add
and
add
pop
xorb
insl
ret
pop
gs
cltd
inc
outsb
inc
mov
ljmp
sahf
sti
out
push
mov
lea
sub
sbb
pop
push
mov
xchg
xorb
popf
push
insl
stc
adc
sbb
loop
jmp
rolb
pusha
ds
sub
sbb
adc
inc
push
hlt
test
test
dec
int3
add
lock
into
push
fldenv
inc
lods
push
in
sbb
xchg
jge
dec
in
orl
adc
stc
out
mov
movb
mov
aas
ret
sub
sbb
push
outsl
inc
push
fbld
add
lea
xchg
push
add
cmpb
cli
inc
or
lods
sti
jmp
push
add
ror
jns
adc
rorb
push
jmp
test
xor
or
ljmp
and
test
mov
sub
inc
stos
test
shlb
sub
push
in
ret
aad
les
das
subb
sub
mov
xchg
or
inc
incb
enter
jp
mov
xor
xchg
cmp
es
inc
lods
outsl
orb
or
call
stos
test
push
movb
inc
adc
std
ljmp
add
add
or
or
jns
cs
das
test
pop
adc
xlat
sti
lret
cmc
in
dec
sub
and
sbb
and
mov
jns
push
into
push
or
cmp
enter
adc
pusha
jnp
test
and
jg
mov
mov
jg
incl
jns
daa
and
mov
into
or
les
lock
or
jns
pusha
xor
in
ret
test
out
sbb
filds
adc
roll
sbb
lcall
adc
addl
stos
push
andb
out
xor
bound
jns
or
push
lcall
rorb
and
inc
jge
add
dec
lods
fidivs
jge
addr16
ret
jge
dec
push
or
test
arpl
and
insb
aaa
loope
imul
inc
add
add
dec
or
test
aaa
enter
std
pushl
insb
xor
push
xor
cmp
mov
add
decl
jl
rolb
gs
shlb
or
andl
mov
and
jno
cmpsb
mov
roll
sbb
mov
add
sbb
xor
test
mov
mov
cli
dec
test
sub
or
loope
inc
adc
loopne
pushl
cmp
mov
and
jbe
dec
add
add
rcrb
mov
int
adc
incl
adc
add
add
outsl
push
cmp
mov
std
in
jg
mov
pop
aad
adc
pop
mov
or
and
lea
mov
fwait
fwait
push
xor
sub
inc
xor
das
add
enter
test
and
sub
adc
pusha
sbb
pop
pushf
mov
imul
sbb
adc
inc
outsl
xchg
decb
test
orb
dec
adc
add
in
or
out
stos
in
or
movsb
mov
lea
push
xchg
data16
dec
stos
and
xor
jecxz
pusha
adc
js
xchg
add
sbb
data16
push
lock
adc
mov
pop
push
mov
lea
dec
rolb
movsl
push
jge
and
mov
scas
add
mov
pop
sbb
arpl
outsl
and
decl
shlb
popl
lea
scas
pop
push
test
push
aaa
mov
xchg
and
cltd
nop
enter
ret
mov
and
mov
cltd
mov
mov
inc
inc
and
jns
out
fcoml
sti
cltd
xor
cmpsb
decl
push
jecxz
jb
jns
xchg
dec
sbb
mov
insb
inc
movl
xor
push
mov
xor
mov
mov
jg
xchg
xor
insl
cwtl
xor
dec
jns
insb
dec
sub
and
pop
shrl
out
xchg
sbb
sub
jo
add
and
js
adc
loopne
sbb
nop
mov
test
push
add
xchg
push
push
shll
nop
mov
jo
stos
inc
in
scas
aaa
cmp
add
add
sar
jg
rcl
sbb
jle
sbb
popf
xchg
add
rcl
push
jbe
sub
push
pop
orb
xchg
lock
dec
ljmp
and
sub
lcall
popa
test
icebp
xor
push
add
add
icebp
add
dec
push
addb
push
out
or
sub
popa
add
add
xor
jns
vcomisd
pop
sub
sub
pop
add
cmp
icebp
xor
shrb
sbb
test
pop
ljmp
jmp
fnstsw
add
es
nop
push
imul
mov
pop
jns
mov
push
clc
adc
test
mov
ret
push
push
xchg
aad
nop
movsb
jns
or
sub
movsb
imul
adc
add
mov
xor
jns
inc
aam
lret
ljmp
add
inc
add
add
lahf
in
jp
mov
das
rorb
daa
add
or
nop
gs
push
xchg
or
shll
movsl
or
lods
push
test
sub
aam
push
sbb
pop
cmp
mov
mov
movsl
mov
or
xchg
shrl
sub
js
outsb
inc
xchg
int
mov
loope
sbb
xor
inc
scas
add
jge
mov
roll
shlb
pop
mov
push
repz
sub
aaa
and
pop
xor
xchg
subb
mov
les
inc
test
xchg
cwtl
xor
repnz
aaa
sub
inc
lret
cld
cmpsb
adc
adc
pop
nop
and
cmp
inc
pop
and
inc
cmp
popa
aaa
outsb
pusha
inc
jns
cmp
adc
jno
cwtl
sub
xor
jns
loop
adc
cmp
adc
add
cwtl
and
adc
mov
sub
inc
jo
aam
mov
sbb
mov
ret
mov
dec
dec
adc
int
stos
and
bound
cmp
pop
adc
negb
adc
das
push
inc
xchg
xor
fidivs
pop
sbb
cltd
pop
and
push
sbb
adc
movsb
mov
mov
adc
lock
push
xchg
test
mov
inc
lret
lcall
std
decl
bound
push
add
mov
je
push
sub
pushl
das
orb
nop
adc
loope
rcrb
mov
jl
add
push
and
and
inc
mov
push
test
loopne
sarb
in
stos
ja
cmp
int3
adc
inc
cvttps2pi
or
jg
hlt
inc
inc
data16
xchg
cmpsb
xor
fisttps
dec
push
inc
mov
adc
xor
sub
lock
in
xchg
sub
jge
mov
lret
xor
cmpsb
cmp
mov
xor
add
fcomps
lock
jo
mov
push
mov
push
js
movsb
xor
and
out
and
adc
outsl
nop
test
sub
or
or
incl
pop
push
sub
subl
xchg
in
dec
jns
mov
std
loopne
ret
inc
in
adc
push
popa
add
sbb
pop
dec
jb
add
inc
int
jo
movb
xor
sahf
mov
sbb
sub
xor
xor
lahf
add
test
mov
adc
xor
adc
notb
sbb
inc
dec
sbb
out
scas
dec
movsb
xor
cmp
jns
jne
adc
add
cli
call
add
mov
jne
add
xor
stos
jns
or
or
or
decl
lahf
loopne
push
sbb
nop
subb
lret
jmp
stos
jno
loopne
loopne
arpl
or
imul
lcall
shll
jmp
mov
bnd
call
mov
jbe
and
js
push
loopne
addb
adc
mov
cmp
decl
jo
add
je
jns
push
cmp
inc
adc
xchg
mov
mov
call
sbb
shlb
add
pushl
mov
test
add
add
test
scas
std
or
sub
cld
lock
lret
mov
mov
mov
pop
into
or
mov
subb
cmp
subb
inc
push
mov
shr
mov
sbb
xchg
mov
sbb
cmp
out
xor
push
cmc
pop
and
add
lcall
sub
dec
push
adc
movsb
mov
add
pop
add
fs
add
fwait
sbb
adc
les
aaa
mov
xlat
adc
or
scas
add
push
mov
push
mov
in
adc
mov
in
mov
push
adc
mov
dec
adc
add
call
out
sti
test
in
inc
add
fnstsw
test
cmp
inc
push
ret
push
push
inc
xchg
push
leave
nop
in
scas
pop
les
movsl
fiadds
rcll
cmp
jle
and
sar
int3
push
pop
inc
pop
ds
cmp
pusha
or
cmpsb
add
sub
daa
adc
aaa
pop
add
sbb
popa
mov
movsb
movb
xor
dec
into
outsb
mov
mov
add
ja
mov
sbb
ds
inc
lea
sub
mov
xchg
dec
ja
fcoms
sub
push
mov
popa
cmpl
inc
pop
sub
fisubl
xchg
add
enter
test
fdivl
dec
js
mov
into
cmp
mov
jl
rol
cld
adc
repnz
add
dec
lock
sbb
add
inc
push
jmp
adc
or
and
hlt
xlat
js
out
loop
pop
rclb
movsb
jns
cli
movsl
lock
lcall
loopne
adc
subb
add
or
sbb
pop
add
add
aaa
add
sub
scas
clc
sub
and
sub
adc
jo
sub
inc
add
push
fs
pop
xorl
push
push
push
adc
xor
imul
sub
jmp
fldl
scas
and
andl
mov
cmpsb
idiv
sub
sarl
cmp
add
jo
insl
sbb
popa
xchg
adc
out
into
dec
adc
add
add
fidivl
and
and
sub
les
fimuls
scas
mov
rcrb
pop
loop
sub
inc
mov
or
rclb
xchg
adc
or
add
pop
jne
test
push
rcl
or
orl
jmp
adc
jmp
xchg
movsb
xor
enter
or
sti
lret
pop
add
mul
addb
jne
rclb
mov
adc
andb
sub
test
fidivrl
inc
cmpb
and
test
dec
xchg
mov
adc
mov
sub
in
sub
push
push
sbb
push
jge
ret
inc
fucomip
int
enter
inc
adc
add
inc
mov
pop
lret
loop
das
adcb
jge
and
jmp
je
sub
sub
daa
or
mov
dec
or
sub
sahf
sbb
pop
or
mov
add
shll
adc
mov
inc
cmp
add
sub
mov
or
jne
mov
sti
jecxz
movaps
les
sub
xor
fwait
outsl
outsb
xor
sub
mov
imul
inc
xchg
xor
fwait
mov
rcrb
and
inc
mov
and
and
sub
jl
divb
add
jle
inc
sub
sbb
call
inc
cld
out
cmpsb
das
mov
sub
push
push
sub
add
imul
push
inc
stos
inc
add
loopne
ret
sarl
jg
sub
or
sahf
aaa
or
out
mov
inc
dec
inc
or
ss
in
dec
sub
jae
mov
jg
imul
test
loopne
push
and
add
xchg
xchg
jno
mov
jae
test
fimuls
sub
inc
and
xchg
jnp
das
jge
jecxz
imul
sub
xchg
arpl
push
clc
xor
mov
out
sub
inc
jae
sub
imul
fstps
loopne
sub
dec
add
push
xchg
sub
push
xchg
sub
or
sub
add
inc
outsl
outsl
cltd
sub
sub
mov
inc
add
mov
fiaddl
push
ret
sub
cmpl
test
sub
int
xchg
xchg
add
andb
lods
cwtl
and
mov
adc
sub
aaa
pusha
mov
out
mov
lods
jns
add
mov
les
inc
jnp
jg
adc
or
fdivrl
mov
xor
or
and
sub
sbb
add
aam
or
int
aad
jl
sub
popa
add
scas
sub
and
sti
dec
lods
mov
sub
sub
rclb
adc
sub
inc
jmp
js
sti
out
loopne
xlat
ror
loop
fldcw
aam
jno
idivb
xchg
sub
ret
cmp
sub
push
rorl
incl
inc
sub
orl
outsb
mov
adc
leave
sub
incl
lret
sub
and
add
sub
mov
out
sbb
push
sbb
test
mov
sti
push
cmc
sub
xchg
cld
adc
sub
push
cmpsb
mov
mov
sub
push
or
out
and
lock
adc
sbb
jecxz
or
in
jg
lea
push
test
pusha
sub
push
push
or
push
mov
add
sbb
xchg
push
mov
fldenv
sbb
popa
rorb
xor
nop
ja
add
lcall
cmpsb
imull
and
test
negl
add
add
adc
dec
mov
pop
add
or
push
cld
push
add
test
pusha
insl
and
loope
pop
jmp
imul
addr16
ja
nop
jb
add
stc
xchg
roll
push
loope
or
and
ljmp
data16
outsl
adc
jl
jno
mov
sbb
sbb
cmc
shrb
ss
mov
js
sarl
insl
insb
xchg
inc
in
in
and
and
add
lock
sahf
xchg
dec
dec
aad
outsb
mov
pop
add
jb
mov
dec
pop
sarl
push
push
shrb
call
popa
outsl
add
add
sub
mov
cmp
add
mov
add
jo
mov
cwtl
fcoms
and
sbb
xchg
dec
lock
clc
data16
mov
or
add
xchg
add
iret
decl
jno
movl
gs
in
jge
mov
inc
and
xor
add
mov
add
lret
aaa
sub
or
push
push
jg
jne
add
popf
adc
rcrb
dec
nop
cmp
mov
je
out
insb
dec
pop
push
dec
adc
sub
push
push
imul
xchg
sbb
add
adcl
in
or
out
push
sar
orb
cli
fidivs
jg
js
jns
xor
push
imul
aaa
std
push
adc
and
rcrb
leave
sub
arpl
test
mov
enter
decl
add
jle
lock
lock
inc
mov
aaa
insl
jge
push
std
xor
inc
xor
or
sub
dec
and
lock
and
mov
dec
pop
mov
and
pop
adc
jb
xor
pop
ss
cld
jns
mov
cltd
inc
mov
push
mov
lods
rolb
or
ss
xchg
ret
setle
dec
loopne
cmp
inc
mov
sbb
mov
push
sub
nop
jno
shl
add
ret
pop
addb
cmp
ds
sub
rorb
cli
daa
rorb
push
nop
addr16
push
sub
add
mov
sub
shlb
adc
and
or
jno
test
fwait
hlt
sub
addl
and
pusha
add
insb
loope
into
ss
add
xor
es
xchg
popa
andl
jg
or
cmp
or
pop
or
push
or
jo
inc
movsl
test
loopne
pop
dec
adc
std
jb
inc
add
cmp
aaa
pop
jle
inc
gs
or
adc
jo
sbb
test
les
fwait
xchg
xor
pop
in
jp
pop
adc
and
mov
int
xchg
push
inc
test
cmp
ljmp
and
mov
jb
shlb
adc
dec
test
dec
xchg
or
mov
lret
les
in
cmpsb
loop
test
nop
in
sbb
mov
rcrb
jl
rorb
bound
pop
and
dec
cwtl
pop
mov
popf
mov
fs
in
idiv
xchg
push
push
cld
pop
adc
cwtl
mov
js
lock
inc
loopne
sahf
add
xor
xor
inc
adc
clc
nop
sbb
inc
mov
mov
mov
push
sbb
mov
rorb
dec
push
pop
jo
sbb
mov
add
sti
xchg
addl
pop
in
adc
movsl
push
add
pop
clc
insb
insb
clc
mov
inc
loope
add
jle
repnz
push
inc
add
fisubs
mov
push
inc
pop
push
mov
inc
rorl
xor
adc
add
sub
inc
das
int
jns
mulb
arpl
push
xor
sarl
dec
in
push
popf
nop
aaa
mov
rcl
push
mov
and
in
stc
push
add
imul
adc
jp
adc
mov
cli
or
sbbb
popa
and
sub
adc
scas
mov
pushl
push
adc
add
sbbb
pusha
pop
or
test
stc
mov
add
sub
and
cmc
sahf
loopne
add
pop
sbb
insl
mov
add
adc
pop
mov
fbld
pop
jecxz
sbb
sub
rorb
and
ss
xchg
xchg
or
push
data16
aam
pop
push
sbb
or
bound
or
lock
inc
sbb
xchg
mov
push
nop
xchg
rcrb
mov
into
mov
rcll
mov
sub
or
pop
inc
dec
pop
rclb
out
insb
adc
xlat
add
sub
push
jecxz
adc
adc
dec
xchg
inc
xchg
into
je
mov
pop
add
push
push
call
and
xchg
add
push
testb
pop
adc
stos
dec
jmp
mov
mov
add
inc
sbb
mov
mov
call
cmc
xchg
stos
sahf
out
push
mov
loop
insl
loopne
inc
adc
dec
loopne
jb
shrl
adc
jo
outsb
xchg
in
ret
shlb
and
add
outsb
sub
mov
jo
sub
mov
dec
adc
add
add
sub
je
mov
test
sbb
out
scas
push
fimuls
inc
mov
xor
xor
fcom
mov
and
mov
or
push
test
add
add
push
test
push
mov
mov
arpl
sub
xchg
mov
mov
mov
cs
sbb
sub
stos
inc
mov
push
mov
adc
lcall
push
nop
or
jns,pn
inc
inc
faddl
rorb
fiaddl
je
and
adc
dec
nop
xchg
dec
push
sbb
mov
add
add
orb
add
mov
ljmp
mov
mov
mov
adc
sahf
or
addl
adc
adcb
push
pop
inc
imul
cli
popf
sahf
daa
adc
cmp
bound
inc
lods
inc
mov
fsts
mov
and
fstpt
adc
or
ret
test
xchg
mov
out
sbb
add
cmp
xor
into
in
or
jecxz
sti
lahf
subb
push
pop
inc
mov
add
rol
xchg
push
aaa
adc
cmpl
mov
shrb
add
mov
add
jns
addb
jle
in
jo
fwait
ljmp
decl
test
cmp
pop
mov
inc
adc
xchg
into
sub
mov
sti
das
adc
xor
push
sahf
pop
mov
sbbl
xor
add
mov
mov
sub
cld
jo
xor
pushf
outsl
fst
push
inc
mov
mov
insl
outsb
adc
add
xor
sub
je
xadd
fs
and
gs
sbbb
or
ftst
test
mov
push
rorl
sub
dec
std
mov
mov
mov
add
out
add
dec
movsb
mov
cld
and
push
push
jp
push
sbb
shlb
add
push
hlt
sub
jge
add
ds
and
shlb
hlt
push
les
fiadds
rcrb
jns
shlw
and
cmpl
call
jo
add
or
xorl
dec
icebp
popa
add
loop
mov
xor
ljmp
adc
xorb
jbe
and
dec
push
addb
xor
mov
lods
or
mov
jns
xchg
arpl
dec
fisubl
aam
outsb
xor
sub
das
popf
shrl
dec
insb
into
leave
and
add
add
sar
rolb
jmp
mov
cmp
add
push
add
dec
rcrl
dec
cmpsb
adc
xchg
clc
shlb
push
test
jg
and
xor
sahf
es
clc
addr16
jnp
dec
jl
in
pop
pop
push
jle
add
test
sbb
ds
ss
push
and
mov
add
sahf
aad
add
push
call
or
sbb
jno
add
and
xchg
pop
stos
adc
es
dec
adc
jb
stos
bound
jns
pop
cmp
cmpsb
mov
and
xchg
sub
jle
add
xchg
jecxz
add
daa
mov
stc
mov
pop
outsl
fildl
cld
dec
pop
mov
push
subb
int3
add
inc
add
add
and
in
in
jno
xorb
and
test
icebp
xchg
sub
cld
sub
mov
nop
adc
pop
sahf
adc
or
inc
into
xchg
loop
inc
push
out
xchg
les
jne
and
add
test
or
bound
sbb
inc
pop
sub
arpl
add
sbb
sti
sbb
test
xor
scas
jo
xchg
inc
in
pop
sub
fs
sbb
push
ret
fmuls
out
outsb
push
aaa
icebp
ja
sahf
popa
test
inc
adc
movsb
inc
and
pop
andl
fsubrs
and
sbb
pop
xchg
clc
add
and
or
cli
sub
adc
mov
nop
cs
lcall
mov
in
jp
adc
dec
inc
inc
cmp
dec
push
push
pop
jns
push
loope
in
inc
cld
test
sti
add
addb
fsubs
mov
incb
and
pop
rclb
add
mov
adc
mov
xor
adc
insl
xchg
sub
rol
mov
add
adc
add
push
and
pusha
mov
jge
dec
addb
stc
mov
cmp
inc
ret
sbb
js
loopne
cld
rorl
xor
add
mov
and
push
fnsave
push
scas
js
inc
mov
andb
sub
data16
stos
dec
cmc
call
scas
pop
out
dec
in
dec
and
push
mov
push
in
loopne
push
mov
or
in
mov
mov
aaa
movsl
test
mull
out
ss
lret
insl
mov
aad
xor
cltd
mov
add
mov
loopne
popf
loopne
add
clc
pop
cmc
subl
sti
or
xor
add
mov
dec
mov
dec
sbb
adc
push
mov
xchg
loopne
mov
in
xor
ljmp
test
mov
cmp
and
aad
mov
fwait
push
and
jbe
lds
mov
xor
int
inc
or
adc
cld
xor
stc
incb
or
leave
xchg
push
fdecstp
fbstp
cmp
cmc
xchg
and
mov
xchg
hlt
enter
add
cmp
shl
push
loopne
outsb
outsb
mov
outsl
push
mov
mov
and
mov
sti
or
mov
js
cld
adc
scas
mov
xlat
mov
dec
cmp
movsb
out
cmp
and
fwait
sbb
enter
or
popf
sar
push
or
xor
orb
aas
xchg
or
mov
mov
pop
and
inc
pushf
adc
cmp
or
sbb
jle
test
js
dec
in
sti
inc
mov
sar
sarl
es
mov
lock
adc
lds
mov
sub
sbb
popa
add
adc
lods
in
in
adc
outsl
sub
test
jo
lcall
xchg
ss
hlt
cld
inc
shrb
or
mov
mov
pop
imul
add
sbb
sahf
sbb
pop
addr16
aam
push
adc
pop
out
sub
inc
adc
adc
cmp
popf
push
mov
cli
or
dec
clc
test
add
add
cli
mov
outsb
icebp
das
sarb
stos
sti
les
pcmpeqd
adc
js
data16
push
fcoms
push
xchg
cmovo
mov
das
xor
rolb
in
sbb
adc
stos
and
or
xchg
mov
loop
outsl
ljmp
and
xchg
loop
sbb
stc
add
sti
loope
lea
call
jbe
mov
xor
popf
fs
mov
or
fdivl
loopne
ja
push
pusha
xchg
xor
outsb
mov
icebp
dec
test
test
call
add
push
add
add
push
dec
fisttps
jp
adc
call
call
add
lds
shr
fisubl
decl
adc
inc
adc
lods
sar
ljmp
xchg
sbb
and
or
adc
inc
sub
dec
outsb
mov
call
mov
sub
or
adc
mov
incl
push
icebp
repnz
jmp
adc
test
pop
jle
push
xor
rcl
or
xor
push
adc
jge
popa
mov
dec
add
xor
in
adc
gs
mov
or
loope
inc
mov
dec
into
mov
test
inc
psubsw
add
scas
insb
xchg
xor
stc
nop
adc
insl
inc
jl
repnz
jge
pop
fs
out
mov
pop
mov
outsb
hlt
add
sbb
movsl
mov
sbb
mov
in
insb
lods
mov
xor
sub
pop
cli
outsb
and
pop
test
bound
jne
mov
push
push
and
xchg
cmc
pop
xor
xor
int3
aam
or
xchg
popf
movsb
bound
rorl
or
sbb
test
cli
mov
dec
inc
xlat
cltd
shlb
nop
pop
dec
mov
cld
add
add
mov
cmp
adc
popf
cs
add
mov
imul
cli
mov
test
mov
xlat
insl
sbb
or
xchg
inc
xchg
outsb
xchg
push
imul
sbb
or
iret
inc
fcmovb
add
xchg
mov
or
add
xor
es
push
push
rcrb
mov
outsb
jo
test
aam
icebp
add
outsb
add
cmp
jl
daa
movsl
mov
jle
push
sti
cld
imul
cmp
rolb
shll
daa
loope
shlb
mov
movsb
adc
movsl
out
idivb
imul
sarb
and
lea
sub
sarl
loope
fsubl
rcrb
jo
in
ret
ds
lods
movsl
cmp
test
insl
insb
rol
popa
dec
inc
mov
aaa
sbb
cmp
lods
imul
jns
rcrb
xor
sahf
and
sbb
call
xlat
lods
pusha
mov
inc
sbb
jb
xchg
mov
add
shrb
push
or
and
data16
xor
rcrl
cmp
pop
icebp
pusha
or
adc
outsl
mov
sub
adc
prefetcht1
add
outsb
in
lock
shll
push
int
add
push
adc
jo
stos
loop
push
xchg
add
pop
arpl
xchg
aam
in
aam
popa
daa
ret
cmp
mov
add
dec
xlat
adc
xlat
es
scas
and
popf
and
xchg
add
in
xor
mov
loopne
xor
add
call
in
mov
pop
push
pushf
cmp
out
mov
jbe
mov
or
pop
sbb
roll
test
lcall
inc
es
push
fldenv
mov
mov
push
sbb
push
shrb
loopne
xor
inc
or
and
xor
mov
sbb
push
sub
jno
and
or
addl
sbb
outsl
push
add
popa
jl
sbb
add
jecxz
xor
mov
pushl
mov
add
xor
adc
test
mov
fstpt
movsl
and
add
ret
fisubs
push
mov
dec
jle
add
sbb
or
push
lods
mov
rclb
add
xchg
and
or
adc
orb
mov
cltd
inc
mov
push
jg
scas
cmp
push
std
xor
cmp
sbb
cmpsb
rcl
sbb
jg
sbb
in
mov
aam
add
insl
xchg
sahf
sub
add
mov
sbb
adc
add
sbb
inc
das
xor
push
jns
subb
adc
je
jp
push
xchg
inc
mov
push
or
dec
mov
xchg
push
xchg
shrl
sarb
mov
sbb
mov
sar
sub
mov
ss
fistpl
mov
cmp
ret
imul
or
jns
cli
pop
or
cli
inc
sbb
outsl
push
fdivs
add
fidivl
pop
andl
push
cmp
push
and
or
sbb
rorb
cmc
sbb
push
xchg
xchg
es
pop
popf
shlb
add
jbe
mov
jnp,pn
add
add
add
test
mov
xchg
jne
push
insl
mov
or
insb
xchg
loop
inc
xor
push
add
aaa
jo
mov
movb
mov
xchg
and
call
test
ljmp
and
jle
sub
aad
mov
or
add
mov
adc
push
sbbl
sub
add
gs
in
dec
xor
call
popa
or
xorb
push
adc
xor
fiaddl
or
push
icebp
das
inc
test
dec
adc
push
adc
pop
test
outsl
sub
push
dec
addb
mov
xchg
jo
add
test
adc
inc
inc
cmp
adc
mov
push
jno
or
ret
rcrl
sub
pushaw
add
es
mov
ss
cld
push
add
adc
data16
sbb
mov
sbb
insb
fnstcw
pushf
add
pop
push
cmp
or
or
test
sbb
inc
fiaddl
pop
je
sub
add
push
js
inc
call
inc
ds
and
mov
mov
and
movsb
orb
mov
dec
inc
adc
adc
test
xchg
adc
loopne
xchg
cli
xchg
push
adc
add
jp
sub
sub
mov
mov
push
add
orb
push
inc
xor
or
rclb
inc
adc
mov
xchg
mov
and
addl
adc
adc
pop
dec
mov
push
subb
add
or
stos
and
jns
daa
cli
data16
les
jns
insb
inc
mov
testb
test
mov
dec
adc
dec
adc
ficoml
mov
adc
cltd
or
add
insl
dec
xor
push
adc
inc
sbbb
movl
or
or
das
les
loopne
loope
pushf
pop
aad
test
out
clc
mov
lds
and
and
ss
xor
xor
inc
push
movsl
or
and
mov
lea
scas
or
mov
sahf
lods
and
mov
adcb
add
lcall
push
in
sub
sbb
mov
add
pop
mov
mov
mov
inc
sbb
mov
or
lcall
mov
inc
add
ret
push
cs
xchg
fidivrl
add
test
mov
andb
aas
mov
in
in
dec
jp
push
add
pop
shrb
push
xchg
cli
aaa
in
mov
fiadds
adc
test
mov
adc
sbb
outsb
ret
push
inc
lcall
mov
mov
adc
adc
jne
adc
sbb
mov
pop
sub
cmp
xchg
and
or
or
sbb
rorl
inc
pop
scas
test
inc
add
imul
inc
scas
sbb
push
ret
xor
and
jl
icebp
scas
ficoms
in
pop
add
or
or
test
cld
add
pop
jp
nop
add
popa
adc
pop
mov
mov
mov
cmp
dec
or
fs
loope
in
add
sbb
adc
iret
xchg
push
jno
stos
adc
jmp
xor
mov
dec
imul
push
test
add
hlt
iret
into
xor
lret
jecxz
pop
clc
pop
xchg
mov
mov
sub
out
push
je
shlb
inc
inc
mov
aaa
adc
jns
push
pusha
aaa
out
mov
add
out
rorb
mov
inc
push
xor
push
xor
mov
test
loopne
push
push
sbb
mov
mov
mov
rorl
or
fucomp
xor
or
inc
mov
filds
add
sub
sub
inc
pop
add
lret
push
popa
loopne
orb
adc
imul
mov
mov
push
mov
add
or
test
and
hlt
dec
nop
incb
xchg
jnp
mov
gs
call
stos
jp
mov
cs
nop
sbb
mov
push
and
std
jbe
pushf
pop
mov
add
sbb
int
xor
jo
cltd
nop
andl
lods
mov
add
push
outsl
pop
pop
cmp
xor
add
nop
addr16
outsb
les
popf
xchg
xchg
adc
or
dec
lcall
pusha
jae
sub
sar
mov
test
inc
add
mov
stc
nop
sub
inc
push
pop
test
add
mov
pop
add
and
add
stos
pop
fs
xchg
shlb
cs
shll
jge
jg
inc
fs
sbb
stos
add
mov
xor
sahf
xchg
adc
mov
addl
adc
jo
dec
and
push
mov
mov
and
or
sub
scas
ljmp
sti
add
sbb
mov
push
lock
sub
sbb
nop
push
xlat
push
stc
push
xlat
xchg
lock
mov
fwait
push
cmp
test
imul
fisttps
pop
loopne
jae
inc
leave
cmpsl
jl
adc
xor
lsl
and
aam
enter
jge
test
pusha
es
dec
ja
jl
dec
into
pop
int3
xor
nop
ret
pop
mov
shlb
pop
gs
xor
lock
mov
add
or
add
sahf
int
adc
int3
imul
push
sbb
cltd
jns
jge
rclb
push
test
incl
inc
pusha
ret
inc
add
mov
mov
sub
sbb
add
fsubl
ret
les
lods
add
pop
pop
sahf
pop
cmp
rolb
cld
cmpsl
cld
out
test
sti
mov
in
leave
add
fmul
sub
leave
jns
pop
cmp
adc
adc
aas
and
ffree
orb
roll
shrb
dec
lods
sar
fldl
add
mov
adc
adc
adc
mov
pushl
push
aam
or
pop
adc
scas
hlt
sbb
xchg
push
mov
push
add
xchg
pop
inc
inc
push
add
jecxz
sti
mov
cmc
and
sarl
xchg
inc
sti
mov
divb
add
jp
das
or
repnz
outsb
dec
inc
rcll
dec
mov
push
adc
cmp
data16
f2xm1
pop
lcall
ljmp
inc
pop
adc
mov
in
loope
jl
add
mov
lock
lahf
testb
push
mov
add
mov
data16
movsl
jle
xchg
or
aad
and
jp
xchg
nop
mov
aaa
add
fmulp
or
outsb
add
cli
sbb
test
xor
fdivr
add
fisttps
loope
xchg
jo
push
ret
imul
push
jecxz
or
jle
orb
paddw
loope
test
add
in
mov
adc
or
lods
sub
dec
ret
sbb
orb
popa
inc
jae
roll
push
push
adc
inc
jne
loopne
js
outsl
add
mov
in
rcrb
cmp
push
sub
jo
cwtl
addb
adc
fimull
das
xchg
or
andb
sti
push
inc
dec
fildl
dec
pop
push
movsl
test
mov
cltd
push
inc
lods
dec
sbb
dec
push
push
in
pop
dec
mov
inc
mov
scas
adc
jg
push
and
add
sbb
add
repnz
add
push
xor
pushf
sahf
movsb
adc
mov
add
xchg
or
or
or
ret
cli
ret
test
mov
nop
dec
rorb
aad
rorl
xchg
adc
shlb
and
dec
inc
loop
push
xchg
jp
add
add
andl
cmpsl
and
lea
pop
cwtl
jg
hlt
xchg
aam
stos
pusha
sbb
movsb
pusha
sbb
in
mov
js
ljmp
and
insl
inc
lret
cld
dec
shrl
ss
lahf
sub
mov
imul
test
dec
mov
in
pushf
addr16
mov
xchg
in
repnz
int3
loopne
and
es
mov
sbb
pop
fsubs
pop
dec
in
xchg
pop
in
stos
dec
mov
orl
rcrl
test
mov
shl
push
rorb
cltd
adc
mov
in
ljmp
xchg
lret
fsubs
mov
sbb
into
inc
repnz
add
lock
sub
add
test
mov
leave
rcrb
in
notb
mov
pusha
rorb
or
sti
mov
mov
and
adc
pop
fadds
mov
outsb
adc
push
xor
add
ljmp
sbb
outsl
arpl
add
push
std
fildll
dec
mov
or
add
sbb
add
aaa
or
or
push
xchg
nop
push
cmp
dec
xor
ljmp
xchg
jns
sbb
insl
sti
and
call
int3
mov
mov
cmpsb
jmp
add
push
mov
push
push
jno
jno
lret
cmc
mov
add
jg
jmp
je
ret
or
int3
xor
stc
test
sub
sbb
and
mov
mov
sarb
hlt
jg
or
xlat
inc
add
imul
addb
sub
shll
mov
outsl
lcall
adc
jp
xchg
rol
xchg
push
xor
nop
or
mov
add
jp
mov
sub
mov
dec
sub
in
or
js
insb
lret
je
in
xor
pop
fxch
jb
ret
pop
pop
add
daa
sbb
jne
addb
push
sti
inc
aaa
or
add
xor
mov
ss
and
add
pop
push
and
fwait
mov
loopne
pusha
mov
test
outsb
dec
mov
std
push
hlt
daa
push
adc
lock
fisubl
lret
xchg
xchg
outsb
inc
and
pushf
mov
add
adc
test
test
cmc
ljmp
shlb
int
mov
dec
or
xor
xchg
js
hlt
in
stos
popa
enter
nop
ss
lea
das
mov
scas
clc
add
rclb
movl
sbb
jnp
jle
pop
add
jl
sbb
inc
cmp
inc
fs
pop
inc
xchg
mov
icebp
add
add
push
inc
mov
addr16
sbb
sub
popa
sub
sub
scas
mov
mov
imul
sbb
outsb
mov
cli
test
and
mov
sbb
or
movsl
test
mov
cmc
sbb
orb
aam
or
push
add
push
in
add
scas
in
imull
pusha
scas
in
inc
pop
addb
pusha
jecxz
test
clc
inc
mov
inc
out
pop
push
push
add
mov
xor
xchg
xor
adc
sub
push
test
in
fbstp
testb
stos
test
sarb
push
xchg
ficompl
adc
add
push
or
clc
or
scas
clc
mov
ret
ret
sbb
sti
aaa
adc
out
sbb
sbbb
sbbb
incl
and
faddl
or
add
in
adc
inc
mov
stc
andl
mov
sbb
aaa
xchg
fbld
in
sbbl
xchg
mov
movb
popf
jns
test
ljmp
imul
mov
add
inc
mov
xchg
xchg
mov
adc
cld
inc
mov
push
std
xchg
add
xchg
xchg
add
fdiv
cli
outsl
jg
stc
jne
add
push
push
jp
les
jo
mov
lcall
pop
imul
addr16
ret
push
add
or
jmp
or
es
inc
jnp
cld
imul
shll
dec
inc
or
xchg
inc
in
add
aad
push
sbb
rol
or
xor
push
std
push
pushf
adc
adc
lahf
and
stc
mov
fsubs
ljmp
inc
or
adc
or
xchg
test
pop
sub
pop
inc
daa
lea
in
cli
dec
loope
mov
out
sbb
xchg
inc
addl
pop
push
negb
mov
xor
es
shrb
adc
sbb
inc
pop
xor
imul
sub
pop
pushf
sarb
push
mov
enter
jg
in
sti
adc
dec
push
push
scas
cmpsl
test
add
lcall
and
mov
inc
push
loop
and
in
out
push
aam
sub
or
jae
xchg
adc
icebp
sub
int3
js
add
lods
adc
adc
in
dec
xor
fwait
int3
insb
out
sub
push
add
jecxz
pop
aad
call
push
out
sub
and
xchg
push
sub
ret
inc
ljmp
mov
jns
inc
dec
add
pusha
sbb
cmc
xor
jno
mov
insb
popf
ss
out
and
pop
lea
add
jmp
out
inc
inc
fisttps
ret
andb
and
sbb
cs
es
add
adc
test
adc
inc
mov
dec
xor
add
adc
sbb
jp
sti
cmpb
icebp
mov
roll
adc
enter
loopne
xor
push
add
pop
add
in
or
ljmp
lods
adc
push
lock
add
add
sbb
mov
mov
add
sahf
adcb
ret
incb
les
inc
add
std
add
and
xchg
push
les
jp
sbb
test
fisttpl
mov
jns
cld
loop
mov
test
loop
sahf
mov
add
xchg
ret
mov
movsb
push
mov
adc
cmc
add
add
aaa
std
outsl
or
imul
and
fsubrs
or
sub
cmpsb
xor
mov
shrl
xchg
add
cmpsb
xchg
add
enter
mov
sbb
sahf
add
cmpsb
add
rcrb
popa
sbb
xor
inc
or
push
subb
aaa
mov
cld
rolb
bound
inc
pop
cli
xchg
shrb
les
inc
adc
inc
movsl
in
ret
lea
mov
jle
pop
and
mov
xor
add
es
sbb
sbb
lods
test
decb
sahf
lcall
fmuls
int3
outsb
xchg
mov
mov
dec
or
ss
rorb
lods
stos
jg
jg
cltd
loopne
and
or
fsubl
mov
addr16
push
jp
mov
dec
popf
adcb
sahf
inc
lret
ret
cld
sbb
lds
mov
add
outsl
lcall
pop
push
test
loop
ljmp
xor
testb
sarb
or
rcrl
add
decb
sbb
rcrb
and
sub
push
pop
js
loopne
sbb
adc
xchg
lock
out
lods
fcmovnu
outsl
adc
xor
loope
and
sbb
push
adc
or
push
adc
loopne
aaa
nop
jb
cs
jns
jp
xor
mov
xor
adc
jns
jg
add
add
cld
xchg
mov
push
test
loop
and
aas
inc
sub
mov
orb
mov
int
adc
cltd
push
jl
push
loopne
negb
andb
xchg
jbe
es
and
jl
loope
mov
mov
movl
rcrb
cltd
and
xchg
cmp
icebp
pop
mov
inc
push
std
pushl
sub
pop
dec
push
sbb
jns
repz
jne
or
mov
std
jmp
jbe
popl
dec
add
mov
inc
lcall
sub
xor
mov
xchg
xchg
or
adc
sbbb
add
dec
xchg
jbe
clc
mov
adc
adc
push
inc
nop
stos
add
mov
fcomip
sbb
adc
sbb
jns
outsb
mov
add
adc
cmp
adc
test
das
pop
repz
mov
jo
jns
push
add
sbb
xor
push
adc
sub
in
sub
mov
int
insl
shlb
and
push
stos
mov
pop
fnstcw
mov
rcll
movsb
adc
js
xor
les
out
adc
pop
add
sbb
cltd
outsb
push
push
lea
out
mov
sbb
data16
orb
pop
inc
add
sahf
mov
xchg
clc
jp
xor
or
or
pusha
das
loop
outsb
add
xor
rcl
cs
dec
dec
push
in
inc
fs
push
inc
pop
pop
sbb
add
lods
or
adc
sbb
aam
xchg
icebp
fwait
push
mov
and
sahf
cmpsb
imul
sbb
dec
imul
xor
stc
test
rcrl
jo
lea
push
icebp
fwait
nop
add
add
and
scas
xor
fiaddl
imul
lods
mov
fisttpll
push
pop
aaa
sarb
stos
lock
push
inc
sub
fisubl
scas
pop
sub
or
mov
push
in
aad
jmp
fnsave
add
and
shll
add
or
xor
pushf
cmp
mov
mov
imul
xor
loopne
xor
xchg
mov
adc
jno
idivb
lock
inc
mov
adc
sbb
xchg
sub
test
mov
mov
pop
add
xor
xor
xor
pop
and
cmp
shll
xor
stos
add
fdivl
push
ja
pop
das
dec
mov
xor
push
lods
push
outsl
push
push
xorl
and
pop
mov
clc
xor
ds
mov
xchg
cld
mov
insb
insl
movsbl
ss
mov
stos
in
add
push
push
icebp
add
sbb
push
jg
push
std
mov
lods
jg
add
in
fwait
out
je
xor
add
inc
es
cmc
push
push
pop
cmpsb
cmp
out
call
pusha
sub
push
adc
sbb
xchg
stc
jo
mov
pop
jecxz
push
mov
ret
xor
ret
fnstenv
mov
xorl
gs
add
imul
dec
pop
add
cld
cmp
jno
out
add
cmp
cmpsl
xchg
xor
push
test
psadbw
sub
lock
push
sbb
stos
sub
push
push
scas
outsb
addl
in
add
fs
ret
xor
jo
adc
push
pop
mov
sub
xor
jb
adc
sbb
lock
push
ja
aad
add
aas
jns
lock
push
cmpsl
add
dec
jbe
mov
xor
push
std
out
add
arpl
pop
jmp
test
mov
rol
test
dec
ret
sbb
inc
lcall
icebp
popf
ja
or
add
sarl
insl
stos
fstpl
shrl
and
mov
cmp
mov
lea
cmp
cltd
add
add
lcall
lcall
sbb
dec
imul
imul
rcrl
xor
mov
pop
xorl
stos
rcrb
add
pop
outsl
in
addb
ja
cmpb
addb
xor
and
adc
add
fdivrp
fwait
in
outsb
or
daa
adc
push
pop
in
inc
gs
mov
lea
dec
sbbl
cmpb
dec
jnp
add
jge
lods
pop
jne
sti
ljmp
adcb
pop
addb
adcb
inc
xchg
push
sbb
pop
sbb
push
les
mov
orb
add
jmp
hlt
sbb
mov
mov
jp
cwtl
push
repnz
push
imul
icebp
sbb
leave
lds
sti
adc
flds
dec
sarb
aad
add
push
push
xor
imul
sbb
roll
sub
mov
sarb
cwtl
shlb
xor
jge
jne
dec
dec
out
shll
andnps
lcall
sub
imul
or
add
adc
adc
jmp
sarl
rcrb
mov
sbb
aad
cmp
lods
stos
pop
xor
sbb
mov
sbb
int
pop
adc
add
mov
add
sti
sbb
pushf
repz
mov
es
lahf
ret
dec
push
aas
outsl
int
jl
je
cmpsl
rolb
dec
rolb
out
fwait
inc
inc
rolb
pop
add
xchg
sub
and
jnp
mov
pop
or
add
add
dec
sbb
push
adc
adc
lcall
loopne
push
das
sub
daa
and
aas
cmp
sahf
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
xor
arpl
jnp
ja
jns
cmpsb
jns
dec
inc
inc
pop
dec
adc
add
dec
loopne
test
push
into
mov
cmp
inc
inc
stos
sub
inc
mov
inc
stos
inc
inc
jl
loop
inc
loope
loop
outsl
lcall
into
lret
mov
cmpsb
jns
ret
pusha
add
in
xor
sti
pusha
add
sti
int
inc
mov
jecxz
in
xor
cmpsl
xchg
xchg
in
add
stos
sbb
out
in
stos
in
out
and
stos
in
or
outsl
xchg
icebp
sbb
jg
jnp
lods
insl
add
sub
inc
add
rcl
scas
sbb
add
lock
sbb
and
aas
cmp
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
aas
fwait
out
ret
lcall
scas
xor
pop
lcall
pop
xor
repz
mov
mov
sbbl
sahf
out
xor
imul
xor
stos
movsl
mov
shll
pop
push
push
jo
andl
stos
mov
mov
mov
cmp
stos
mov
mov
ret
add
je
push
xor
sahf
add
xor
and
xorb
mov
mov
out
lods
xchg
cmp
add
repz
je
out
lcall
imul
sub
push
cmp
fwait
test
adc
mov
aam
and
mov
push
pop
fistl
add
add
in
or
push
sub
es
xchg
or
push
add
mov
aam
iret
lret
enter
mov
mov
jo
mov
add
nop
mov
sub
insl
jnp
aaa
pop
sbb
fwait
add
xchg
adc
adc
inc
mov
orb
nop
popa
es
mov
add
add
inc
pop
add
test
frstor
add
xchg
mov
mov
xchg
add
sbb
mov
xchg
in
adc
add
and
jo
pop
adcl
or
nop
pop
push
lret
lock
mov
and
push
into
push
and
jmp
push
inc
aad
push
inc
testb
cwtl
cwtl
jns
or
std
and
inc
add
mov
push
mov
ficoms
xchg
inc
add
clc
icebp
add
adc
add
jns
xchg
add
adc
push
jp
jo
jg
pop
jb
sbb
mov
inc
jb
in
mov
and
outsl
pusha
and
cmp
roll
nop
adc
jo
lock
push
push
or
fwait
jns
or
or
add
in
push
fsubl
int
or
mov
dec
mov
inc
clc
mov
push
lock
xchg
and
mov
pusha
fwait
mov
mov
or
add
xorl
adc
add
mov
push
in
add
notl
sbb
pop
outsl
call
adc
add
roll
sbb
lods
pushl
outsl
or
xchg
add
mov
or
adcl
mov
xchg
in
fcomps
jo
lret
add
and
call
sbb
mov
adc
pushl
push
mov
arpl
and
add
mov
or
les
ret
xor
sub
pop
test
or
outsl
inc
ljmp
add
repz
lock
sub
das
decb
loope
loope
lcall
xor
inc
rclb
sar
mov
add
inc
add
ja
rolb
add
jl
dec
icebp
mov
pusha
or
add
adc
and
loop
adc
nop
out
xchg
push
jns
or
mov
insb
bound
fwait
nop
popa
push
sbb
add
mov
int3
mov
mov
fstl
xchg
push
push
mov
ljmp
adc
subb
adcb
cmpsb
inc
les
sahf
fs
jnp
fistpl
xor
jns
add
nop
test
pushl
int3
adc
mov
in
add
fwait
dec
mov
adc
call
fdivrp
lret
adc
lret
add
xchg
add
jns
inc
or
adc
jp
add
mov
in
inc
adc
clc
fisttpl
in
jns
sbb
add
add
mov
jbe
mov
insb
mov
test
fistpl
or
cmp
add
xchg
aaa
lods
imul
add
or
adcl
add
add
add
andb
nop
xor
push
in
pop
icebp
inc
xor
fwait
pusha
xchg
in
jns
in
idiv
pop
sbb
aaa
lods
adc
add
stos
and
negb
xor
enter
or
and
in
enter
pushl
inc
or
push
movsb
int
inc
les
or
add
movsl
fnstenv
push
test
fmuls
jmp
and
and
jecxz
inc
add
andb
add
mov
inc
push
test
push
sbb
mov
add
daa
hlt
add
and
in
jns
std
push
sub
test
shll
es
inc
sbb
jo
jnp
pop
cld
add
mov
in
inc
adc
add
push
pop
sub
sub
and
shrb
xor
in
shll
orl
mov
push
adc
push
in
inc
xor
add
imulb
enter
xlat
or
mov
cmpsl
rorb
jb
jns
and
xor
popf
fmuls
xchg
jns
inc
rcr
outsb
sbb
xchg
push
cmpb
mov
add
fistpll
inc
mov
pop
and
add
sbb
lds
stos
jns
es
or
inc
xor
mov
pop
sbb
mov
lret
or
insb
es
and
aam
or
addb
addr16
pushl
mov
add
daa
add
xchg
inc
inc
fstp
dec
loope
sbb
and
push
sbb
in
fbstp
xchg
add
add
in
lods
aas
in
adc
loopne
or
in
lods
sahf
in
jp
and
fwait
or
and
and
pop
cld
out
cmpb
or
adc
or
mov
lods
cmp
mov
cmp
cmp
popl
mov
mov
lods
std
inc
push
cld
inc
push
call
inc
push
js
adc
fstps
clc
incl
push
add
adc
imul
cmp
popf
movl
test
lods
adc
add
mov
subb
push
and
stos
andb
mov
xchg
fidivs
clc
jl
xchg
out
repnz
decl
xchg
pusha
or
sbb
jnp
sbb
jo
dec
es
enter
sub
pop
inc
sarl
repz
push
lcall
cmpsb
adc
loop
inc
inc
add
sbb
xchg
inc
rorb
and
inc
mov
outsl
stos
mov
call
mov
popa
pusha
push
sub
ja
incl
mov
adc
dec
xor
and
cwtl
cmp
dec
and
sbb
xchg
mov
add
sub
mov
or
adc
jecxz
movsl
jmp
test
insl
mov
add
in
mov
orb
lds
inc
inc
add
and
test
adc
sbb
int
pmulhuw
push
add
test
push
pushf
mov
cmp
cmp
add
or
mov
cmpsb
or
pop
jns
pop
sbb
call
add
mov
je
mov
inc
sbb
sub
mov
loope
mov
loopne
clc
out
mov
ret
push
mov
jl
stos
fldt
outsl
add
pushf
pop
mov
cld
insl
loopne
aad
pop
push
popf
cmp
add
scas
testb
sub
inc
inc
mov
inc
sbb
or
sahf
xor
mov
and
add
arpl
adc
pop
cs
outsl
add
xchg
xor
and
fwait
cmc
mov
mov
cmc
push
dec
cmp
sub
pop
sti
push
lods
adcb
pop
mov
cld
mov
add
js
std
pop
in
add
sub
cwtl
test
mov
lods
add
xor
and
popf
xchg
add
loope
mov
lea
sti
idivl
push
or
loopne
test
mov
int
jecxz
lcall
sarl
js
movsl
sub
cmp
adc
inc
cld
mov
or
paddq
call
roll
in
or
xchg
sub
outsl
mov
mov
push
mov
lcall
jne
lock
jnp
inc
fucom
pop
adc
ficompl
aas
lods
push
and
imul
lods
pop
add
jmp
subl
rdtsc
add
lock
or
out
jecxz
ficompl
shrl
fcomps
jno
enter
adcl
dec
add
mov
pop
push
inc
mov
test
ds
xor
outsl
mov
xchg
xchg
dec
test
and
imul
xor
pop
inc
gs
sub
sarb
repnz
fdivrp
cmpsl
cs
cmp
rcr
lcall
adc
out
xor
ret
sbb
pop
push
lock
mov
or
mov
dec
fwait
dec
jg
mov
sub
jecxz
aaa
in
addl
push
adc
inc
fsubrp
imul
popa
lock
dec
push
lock
out
fists
mov
or
loope
leave
arpl
data16
and
add
sarl
lods
mov
xor
clc
pop
insb
inc
push
popa
and
mov
adc
mov
fdivrs
jo
sbb
sub
push
cmpsb
dec
push
mov
jo
shlb
idiv
pop
push
add
xor
std
imul
mov
mov
imul
jg
mov
inc
cmp
adc
data16
shl
fwait
stos
xchg
addl
sbb
ret
add
jno
popa
cmpsl
loop
rorl
pop
and
xor
divps
daa
mov
push
sti
ja
bound
or
pushf
mul
jge
jecxz
repz
dec
cmpsl
pop
addl
adc
mov
ja
jo
mov
and
adc
cmc
mov
scas
nop
cmp
or
sbb
arpl
add
inc
and
push
xchg
xchg
pushf
in
push
jg
pop
push
leave
dec
dec
jb
push
add
push
in
daa
cmp
das
push
sti
push
jns
xchg
pushf
repz
lgs
and
movl
mov
adc
inc
stos
xor
xchg
pop
xor
push
insl
pop
pop
adc
pop
adc
sahf
cmp
push
addb
lock
xchg
lcall
js
jl
popa
adc
add
mov
mov
add
sub
inc
xchg
rolb
insb
xchg
lock
or
clc
in
jecxz
inc
idiv
hlt
fdivp
or
mov
xchg
fisttpl
loop
ret
add
sbb
loop
hlt
jmp
inc
add
jmp
add
lock
lock
jg
pop
or
nop
xlat
clc
adc
clc
cld
inc
loop
lock
aad
and
call
hlt
inc
cld
loope
cmp
add
xor
scas
lods
lahf
test
fistl
hlt
add
std
push
jns
jecxz
add
jle
mov
add
jecxz
inc
in
xor
xchg
imul
inc
add
add
negl
ret
lea
inc
hlt
adc
mov
rcll
mov
push
pop
add
sub
cmc
das
fcomps
loop
cld
movl
add
subl
add
xor
mov
jecxz
inc
push
add
cmp
sbb
loopne
fisttpl
nop
subb
mov
mov
jle
f2xm1
incb
jnp
subb
testb
in
or
nop
shl
jecxz
add
addb
xchg
fidivrl
in
lock
add
push
addl
fwait
fistpl
jbe
shl
sti
or
test
shl
call
adcl
sbbl
mov
andl
sbbb
cmp
cmc
sbb
stc
mov
or
fstpt
std
in
shr
in
push
jl
and
adc
xchg
or
jg
sbb
cmc
les
cmp
rcrb
mov
inc
jg
les
dec
fsubr
add
ret
add
add
add
mov
or
inc
and
jb
mov
push
rol
and
adc
inc
dec
push
inc
adc
inc
dec
cwtl
lret
lock
or
ljmp
lock
xor
push
les
rorl
notb
subb
add
lock
es
stc
orl
push
jp
xor
sub
fwait
shl
in
shlb
lds
jmp
jo
lcall
sarb
ret
lcall
mov
fdivr
inc
pop
xchg
sar
push
xchg
or
lds
xor
add
inc
or
inc
xchg
inc
add
mov
ret
pop
lcall
inc
ss
jg
aam
orb
adcb
dec
lcall
loope
jecxz
aaa
aam
add
pop
shl
std
sbbb
clc
dec
cs
sbb
inc
dec
jle
es
das
les
data16
std
stc
mov
loope
ret
decl
stc
loopne
arpl
pop
adc
hlt
stos
loop
or
and
out
and
lcall
fcmovb
loopne
in
mov
add
fadd
pop
bound
inc
in
mov
add
in
call
add
add
mov
decl
popa
or
jne
mov
xchg
hlt
out
mov
or
and
loop
add
je
push
imul
decl
test
push
stos
and
jbe
mov
ffreep
push
dec
cmpsb
arpl
loope
data16
and
dec
mov
loope
cmpsb
rcrl
mov
adc
jecxz
aam
icebp
or
cmp
pushl
std
inc
dec
shlb
sbb
mov
ret
add
dec
and
mov
add
lret
out
pop
dec
mov
jle
loopne
out
test
jmp
add
and
adc
xchg
aad
inc
rolb
and
out
ret
adc
orb
loop
hlt
out
and
jg
dec
sbb
xchg
add
pusha
adc
cld
pushl
sub
out
mov
sbb
loope
arpl
add
dec
adc
aad
cmp
dec
mov
fcomp
bound
mov
iret
and
mov
xor
xchg
fs
es
inc
pop
loopne
das
xchg
inc
pop
loope
dec
cli
mov
movsb
add
jmp
mov
mov
vpsrad
xchg
lock
mov
add
ret
cli
stos
cld
push
inc
lods
sahf
loopne
loop
adc
insl
add
jmp
bound
pusha
inc
or
ror
popa
pop
loop
stos
add
inc
sbb
push
push
and
loope
xchg
jecxz
sbb
jbe
add
push
addr16
addl
aad
scas
sub
in
std
mov
push
bound
mov
stos
sbb
mov
mov
adc
loope
in
call
xchg
sbb
mov
out
call
jo
inc
xchg
dec
cld
sub
xchg
fildl
pusha
add
sub
call
in
push
push
mov
jb
fcmovbe
ret
add
mov
xchg
dec
add
xchg
or
push
xorb
ljmp
js
add
in
stc
jg
ljmp
mov
pop
add
mov
shr
ret
xlat
mov
adc
nop
sub
add
adc
dec
adc
lods
out
nop
loope
mov
je
jecxz
hlt
xchg
xor
nop
rcrb
dec
jle
repnz
xlat
add
hlt
sbb
nop
push
pop
mov
xchg
cli
sub
clc
add
xchg
lds
std
lock
push
push
hlt
mov
add
test
fiadds
push
push
mov
or
cld
bound
ljmp
add
fmull
inc
mov
jle
adc
mov
xor
adc
add
push
loope
add
je
nop
ret
mov
sar
scas
push
roll
or
repz
sbb
mov
xchg
or
ljmp
cwtl
xchg
push
sbb
push
in
cmp
jo
cmc
fnstenv
ret
jmp
lods
daa
dec
rolb
and
inc
sub
add
dec
pushf
jecxz
subb
add
mov
repnz
mov
adc
incl
loopne
sbb
add
add
push
subl
add
cmc
mov
ljmp
xchg
orl
push
or
xchg
add
add
add
add
inc
adc
lcall
xor
ret
ret
jg
outsl
inc
xor
jno
jae
icebp
pop
xchg
and
mov
xchg
push
pusha
xchg
in
push
lods
fcmovnbe
push
add
add
rol
xor
cmp
sbb
sar
ljmp
fists
add
jno
mov
mov
mov
inc
ja
or
rorb
clc
les
push
sub
cltd
adc
in
adc
hlt
push
cmpsb
mov
incb
call
push
ljmp
add
add
inc
add
lods
or
rorb
pop
test
loope
lock
cmc
loopne
lock
add
xchg
mov
shlb
pop
pop
jo
or
cld
adc
add
in
inc
xor
cmp
stos
jb
cs
pop
ret
seta
mov
push
adc
cmc
sub
stc
mov
sub
cmpb
repnz
or
cmp
inc
es
push
add
or
cmc
xchg
popa
out
lock
std
fcomip
or
or
cmp
sbb
add
push
mov
dec
push
outsl
cmc
and
xor
mov
sub
xlat
jecxz
sbb
loop
popl
nop
sub
mov
pop
cmp
out
clc
add
adc
push
es
fdivr
clc
std
ret
add
add
jno
rorb
jg
clc
push
push
je
in
add
sbb
xor
pop
xor
fcompl
jb
sti
mov
sbb
add
pop
xchg
add
pushf
add
loope
pop
mov
mov
sub
pop
add
call
lock
mov
mov
jno
add
sub
nop
fldcw
mov
add
jo
mov
lods
jo
lret
add
in
and
add
xchg
mov
adc
shrl
nop
lret
repnz
pusha
loopne
mov
and
fwait
sahf
les
ficoml
add
push
xchg
test
ja
jmp
ret
mov
and
shr
decl
ret
cmc
add
fcmovu
aad
repnz
push
xlat
sub
ret
mov
push
shlb
call
f2xm1
loop
xchg
or
data16
sub
nop
roll
sbb
insb
mov
and
cmc
and
nop
lcall
add
roll
jo
repnz
adc
fs
sbb
shlb
adc
inc
xchg
add
mov
ret
rcr
mov
leave
jg
jecxz
lret
cld
ret
adc
mov
dec
add
ret
xlat
xchg
sbb
fcomip
jno
cmp
xor
nop
add
repz
or
fst
orl
nop
cmpsb
in
pushf
andb
cmp
dec
ret
xchg
pop
mov
push
sbb
inc
aad
loop
adc
mov
aad
repnz
sub
pusha
fadd
add
cmc
add
mov
pushf
push
nop
push
cli
ret
jl
push
xchg
cmp
div
lock
push
cltd
lods
js
pop
in
call
mov
insl
push
in
adc
and
and
sbb
ss
push
jecxz
add
xor
out
and
lock
ss
testb
add
movlps
xor
clc
lock
add
cmp
call
stos
lret
fcoml
ret
es
filds
mov
add
xorps
ret
pop
fsubl
mov
add
push
add
cmc
sti
in
loop
xchg
outsb
cli
push
clc
imul
mov
hlt
subl
pop
movsl
sub
jg
dec
push
and
or
mov
xchg
adc
adc
fildl
jns
add
add
pop
in
adc
push
incl
pop
inc
cld
ret
out
add
cmpsl
sbb
frstor
push
dec
push
hlt
mov
orb
out
mov
cld
add
sbbl
rcr
add
adc
nop
dec
in
hlt
mov
or
loopne
call
loop
cmpb
movsb
pop
push
cmp
inc
loop
or
jge
pusha
es
sub
fadd
add
cmpsb
xlat
and
ja
jg
sbb
aaa
test
mov
cld
push
add
mov
mov
pusha
loop
xorb
bound
es
std
and
add
ss
or
cli
orb
inc
or
inc
or
sub
or
push
xor
lods
cmp
clc
add
fistl
cs
outsb
scas
xor
inc
xor
xchg
testb
adc
inc
and
push
ljmp
add
push
insb
dec
xchg
shlb
decb
or
mov
jle
loop
or
fldl
bound
incb
mov
jb
je
dec
inc
adc
orb
mov
ss
sbb
cmp
pop
and
pop
push
inc
inc
shrb
add
pop
rolb
nop
ret
scas
adc
cs
inc
int3
test
or
pop
fldl
pop
das
clc
aad
shl
mul
xchg
inc
push
fldl
sahf
rcr
mov
add
ja
mov
inc
pop
lods
inc
mov
lods
add
sub
and
xor
jl
pushf
pushf
and
inc
xchg
std
clc
jmp
push
in
adc
hlt
rcr
ret
sub
jp
shrb
add
shrl
les
mov
add
mov
sub
movsb
or
mov
fdivp
ret
push
testl
pop
add
ret
adc
clc
sub
icebp
pop
adc
loope
mov
rolb
mov
bound
hlt
out
hlt
jo
mov
movsb
movsb
push
outsb
sbb
loopne
orb
push
clc
pusha
pop
loop
push
hlt
fsub
loope
or
pop
ret
add
loopne
arpl
out
out
xor
movb
dec
ret
imulb
in
jg
cs
and
clc
adc
add
in
mov
outsl
clc
pop
bound
and
aad
arpl
add
lahf
and
mov
sbb
icebp
mov
aam
incl
add
push
stos
loope
pop
sbb
test
add
loope
fdivr
repnz
popa
add
nop
cli
jg
add
dec
and
and
out
into
test
cmp
and
jg
or
mov
enter
sbbl
fwait
mov
loop
ret
inc
loopne
nop
rcl
leave
jecxz
inc
or
mov
mov
call
ret
add
loope
loop
dec
add
aaa
movsl
shlb
mov
insb
xchg
fbld
sbb
push
loope
dec
and
loopne
sub
adc
shrb
mov
in
ret
or
rol
sbb
push
cmp
loope
call
jg
orl
fcomps
or
mov
mov
data16
add
sbb
addr16
add
pop
push
gs
ret
loopne
icebp
popa
mov
mov
inc
sbb
pop
es
pushf
je
add
add
xchg
inc
add
shll
movsb
loop
add
or
pop
cmp
xor
cmpsl
add
outsb
cli
out
test
fstps
cld
aas
shl
jl
cmpsb
add
pop
and
int
outsb
mov
lock
scas
je
and
and
inc
call
call
mov
sbb
sub
shl
lock
sbb
and
cmpsb
add
and
in
ss
cld
decl
or
es
add
test
imul
jp
hlt
mov
push
outsl
mov
fs
add
fdivs
add
lock
aam
adcb
fcomip
aam
xchg
std
xor
mov
adc
ror
clc
mov
xlat
mov
ss
push
cmpsb
add
add
adcb
les
add
call
ljmp
in
inc
add
cltd
or
jg
incb
cltd
xchg
stos
add
pop
movsb
push
mov
sti
enter
outsb
push
push
andb
sub
int
daa
lcall
mov
je
test
pop
add
xchg
and
add
fisubl
sbb
pop
mov
push
movsl
push
dec
mov
fistps
mov
sti
add
dec
and
aad
sti
iret
mov
pop
test
repnz
sti
adc
jb
lods
imul
or
add
sub
shll
pop
lods
add
shlb
imul
mov
pusha
mov
fnstenv
jg
out
sti
add
adc
adc
mov
lret
add
mov
add
cmpsb
testl
mov
call
add
add
mov
fldenv
std
adc
lods
sub
pop
lods
inc
lods
dec
stc
pushl
jg
lods
jge
lods
insl
xchg
lods
popf
lods
test
mov
mov
lods
std
lods
in
in
adc
lods
outsl
negb
lods
and
lods
pop
lods
inc
lods
lods
jne
jge
outsl
out
lods
lods
xchg
scas
popf
scas
test
scas
movsl
scas
out
scas
aad
scas
std
scas
in
scas
adc
scas
outsl
out
scas
xor
scas
scas
push
scas
pop
scas
inc
scas
scas
jne
jge
outsl
out
gs
scas
xchg
scas
popf
scas
test
scas
movsl
scas
out
scas
aad
scas
std
scas
in
scas
adc
scas
outsl
out
scas
xor
scas
scas
push
scas
pop
scas
inc
scas
scas
jne
jge
sub
scas
gs
insl
add
cmp
in
fiaddl
mov
lods
adc
mov
int
stc
fwait
mov
in
in
adc
mov
mov
stc
fwait
sub
inc
mov
mov
mov
popf
mov
mov
mov
aad
frstor
outsl
mov
in
mov
add
cmp
out
mov
inc
mov
mov
mov
out
test
mov
mov
out
mov
in
mov
add
cmp
out
mov
inc
mov
mov
mov
out
test
mov
mov
out
mov
in
mov
add
cmp
out
mov
inc
mov
mov
movsl
popf
ljmp
movsl
aas
mov
mov
aad
frstor
scas
push
pop
cmpsl
inc
cmpsl
dec
cmpsl
jne
jge
fcomip
cmpsl
cmpsl
insl
push
cmpsb
popf
cmpsb
test
mov
cmpsb
aad
frstor
in
dec
cmpsb
cmc
cmpsb
std
cmpsb
in
in
cmpsb
adc
and
stos
push
es
hlt
ljmp
pop
stos
inc
stos
inc
stos
dec
inc
icebp
push
test
pop
out
mov
and
sahf
imul
test
stos
cmpsl
scas
mov
scas
inc
scas
aaa
dec
ss
test
pop
add
notb
pop
adc
sti
fistpll
or
cmpsl
sub
leave
lods
and
scas
mov
jbe
clc
sub
shlb
mov
sti
inc
jmp
cmpsb
dec
test
test
bound
and
ljmp
outsb
test
lcall
jg
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
ljmp
into
test
test
test
test
test
test
test
test
test
test
test
test
test
ljmp
push
test
test
test
test
test
test
test
test
test
test
test
test
test
mov
inc
test
test
test
test
test
test
test
test
test
test
xchg
push
ljmp
add
push
stos
xor
ds
and
cs
push
stos
push
ljmp
inc
stos
inc
stos
dec
stos
dec
stos
jb
jbe
jp
jle
bound
outsb
stos
xchg
stos
xchg
ljmp
sahf
stos
subb
stos
mov
mov
mov
stos
cmpsb
stos
pusha
stos
rolb
sbb
jg
outsl
push
mov
push
jle
fwait
movsl
mov
mov
movsl
cmp
call
movsl
imul
movsb
mov
movsb
lret
movsb
icebp
movsb
adc
andl
cs
fisttpl
repz
cmpsl
jnp
xchg
test
mov
mov
lock
test
in
test
test
and
mov
cld
lock
outsb
call
dec
sub
ljmp
js
popf
stos
mov
mov
lods
pop
lods
jno
ljmp
lret
or
and
lods
mov
mov
ret
scas
out
sbb
inc
scas
jbe
xchg
loopne
leave
scas
cli
scas
loopne
jmp
adc
call
xchg
mov
cmp
cli
jg
test
lret
mov
inc
and
fsubl
jmp
shll
lock
daa
mov
cwtl
movsl
mull
push
aas
sbb
inc
mov
movsb
mov
ret
cmpsl
jmp
mov
add
test
repnz
rcl
decl
cmp
mov
push
inc
in
pop
cmpsb
jbe
xchg
test
jl
movsl
cli
cmp
sub
test
stos
add
pop
out
stos
pop
stos
js
push
xchg
lods
add
lods
call
lods
push
lods
inc
pop
cmp
rep
adc
pop
lods
aaa
or
dec
lods
js
lcall
lock
subb
scas
ljmp
dec
scas
jl
lock
mov
cmpsl
scas
repnz
clc
sbb
jno
loope
lahf
popa
hlt
mov
adc
mov
loop
xchg
mov
adcl
sbb
mov
ljmp
movsl
pop
movsl
sbb
movsl
xor
cmp
movsl
sub
pop
decl
inc
movsl
inc
cli
dec
movsl
jb
jnp
arpl
pushf
movsb
andl
pop
pusha
add
movsb
aad
movsb
dec
ljmp
movsb
bound
cmpsl
popf
cmpsl
andb
cmpsl
cli
lcall
inc
cmpsl
dec
cmpsl
jno
jns
xor
push
cmpsb
dec
cmpsb
cwtl
test
push
test
jle
inc
test
imulb
fsubrl
jo
popl
stos
mov
int3
stos
imull
cld
lods
add
sub
aas
jecxz
lods
fisubl
imulb
scas
out
scas
pop
scas
push
sub
decl
scas
outsb
scas
push
shrl
call
mov
aaa
adc
int3
movsb
add
test
cli
dec
test
shl
test
stos
insl
stos
add
mov
jg
repz
adc
add
mov
jbe
xlat
cmpl
test
mov
pop
push
mov
sarb
jp
add
mov
scas
mov
push
mov
lahf
mov
pop
mov
sbb
jb
jnp
andb
lret
movsl
mov
call
movsb
or
clc
movb
lods
fisttps
pop
insl
push
test
outsl
mov
mov
dec
lock
mov
popa
mov
cmp
movsb
xchg
ljmp
clc
ret
cmp
mov
lock
std
cmpsb
jmp
mov
aad
jnp
mov
ret
decl
stos
pop
lods
jnp
sahf
lods
adcb
cs
clc
clc
fwait
call
outsl
scas
mov
loop
scas
sti
scas
add
in
scas
adc
push
scas
inc
scas
dec
scas
jg
push
es
js
mov
fwait
push
mov
cmpsl
jmp
ljmp
mov
or
sub
mov
jmp
mov
ret
lret
mov
mov
jmp
out
mov
sbb
inc
mov
addl
cmp
pop
lcall
mov
clc
cli
ljmp
popf
movsb
std
movsb
dec
movsb
je
aaa
or
sub
popf
test
test
test
test
mov
ljmp
or
repnz
push
stos
dec
xchg
xchg
lods
xchg
lods
push
or
jg
bound
js
jg
imul
subb
mov
lods
xchg
scas
jecxz
imul
imul
mov
xlat
inc
dec
mov
cmp
mov
scas
xor
movsl
scas
movsl
aam
ret
movsl
cmc
movsl
out
movsl
adc
or
addr16
jg
jmp
ret
movsb
in
movsb
icebp
cmpsl
push
add
cmpsb
sub
jg
cmpsb
xchg
pop
test
call
test
ret
test
test
stos
mov
clc
stos
stos
stos
divb
stos
inc
stos
je
sub
into
push
stos
inc
stos
dec
stos
jg
rcl
push
lods
pop
lods
dec
lods
mov
lods
or
jnp
lods
mov
adc
scas
popa
push
rcll
movsl
jns
cmpsl
loopne
mov
lock
push
mov
mov
out
or
inc
movsb
movsb
mov
xor
filds
icebp
cmpsb
out
cmpsb
sub
lods
test
inc
clc
push
fcoml
xor
dec
jo
mov
daa
stos
sub
add
jg
shrb
add
push
lods
xchg
xchg
add
scas
shrb
scas
in
scas
scas
rcll
loop
decl
xor
adc
jg
jb
jp
push
xchg
cmpsl
lcall
cmpsb
mov
test
jb
test
push
mov
add
das
outsb
pop
lods
add
sahf
stc
sahf
dec
mov
hlt
jmp
jmp
inc
mov
add
push
std
jg
mov
adc
ljmp
andl
test
xlat
pop
jb
test
push
outsl
stos
mov
mov
lods
sub
scas
arpl
loope
and
pop
mov
inc
mov
sub
inc
mov
fldl
enter
dec
repnz
mov
push
xchg
movsl
rep
loope
xor
dec
movsl
jge
imul
mov
pop
lods
cmpsl
aad
fisubs
icebp
cmpsl
add
adc
jl
cmpsb
inc
cmpsb
mov
cmp
inc
test
cs
popa
test
mov
jecxz
push
sbb
pop
push
es
inc
test
hlt
xchg
cld
test
test
stos
cmpps
subb
sahf
lods
push
xchg
scas
cltd
scas
subb
xchg
stos
scas
shrl
pop
or
scas
push
scas
xor
push
scas
pop
scas
dec
scas
jo
jnp
add
cmp
dec
rcr
lock
outsl
out
cmc
mov
mov
out
mov
jmp
sbb
stos
mov
enter
sub
pop
mov
loopne
jecxz
jae
xchg
mov
mov
or
pop
push
movsl
frstor
rcr
cmpsb
mov
stos
fldcw
lods
xchg
scas
fisubrl
add
ljmp
push
mov
push
inc
out
xor
movsb
movsb
push
movsb
inc
movsb
jne
mov
push
test
fmul
mov
das
add
cmpsl
xor
popa
cmpsl
xchg
loope
mull
sub
popf
decl
jg
pop
inc
loopne
in
test
cs
addr16
push
data16
inc
and
test
test
mov
ret
mov
movsb
stos
stos
int
jle
stos
sbb
dec
pop
stos
dec
stos
popa
stos
test
cmp
dec
stos
jne
jnp
std
cmc
filds
lods
mov
push
imul
int3
lods
ljmp
lods
jg
adc
adc
sub
test
lock
test
push
test
lock
daa
lcall
lods
mov
lods
lret
push
pop
lods
lods
fisubrl
lahf
and
add
pusha
popf
out
cmp
out
sbbb
lcall
or
mov
mov
adc
jecxz
movsl
das
lret
fldenv
movsb
lahf
ret
mov
dec
dec
pop
cmp
and
ljmp
jbe
mov
cmpsb
and
clc
pushl
jle
xchg
test
ret
test
push
xchg
outsl
ss
test
subl
ss
test
test
test
ret
pop
ret
cld
test
stos
cwtl
stos
sahf
scas
out
add
ljmp
aas
jl
stos
clc
stos
out
adc
stos
pop
stos
or
stos
aas
stos
and
add
push
stos
pop
stos
inc
jnp
stos
gs
sar
dec
xchg
mov
lods
scas
pop
fisubrl
cmpsb
push
lods
stc
lods
adc
lods
xor
fdiv
jg
pop
xchg
popa
lods
lods
mov
iret
clc
push
cld
xchg
jle
lods
loope
out
in
repnz
icebp
test
scas
xlat
mov
scas
cmp
pop
scas
imul
scas
stos
scas
shrl
out
ljmp
scas
and
jae
nop
add
ljmp
shlb
cltd
mov
or
push
lea
push
mov
icebp
das
cli
call
movsl
jno
movsb
inc
movsb
mov
outsb
cmpsl
in
cmpsl
adc
push
mov
push
pop
add
scas
jle
jge
mov
xlat
scas
pop
cmpsb
sahf
inc
test
mov
jecxz
stos
decb
nop
outsb
mov
incl
stos
sub
stos
lcall
fbld
insl
lods
xchg
push
sbb
push
lods
cmovs
cld
lods
bound
inc
xor
clc
mov
scas
scas
add
inc
pop
fidivs
mov
mov
xchg
push
mov
mov
shll
or
mov
sti
mov
loope
mov
mov
push
mov
aaa
fisubs
mov
add
pop
mov
outsl
outsb
dec
mov
pusha
mov
aad
and
dec
mov
mov
mov
cmpsb
dec
shlb
sar
and
lret
mov
loop
jmp
push
adc
cmp
out
mov
xor
ds
sub
fbstp
inc
dec
dec
mov
xchg
mov
imul
mov
fs
cld
mov
mov
int3
loop
mov
jb
dec
nop
rolb
das
push
add
pop
nop
add
or
cmp
mov
add
mov
xchg
mov
std
mov
mov
mov
movsl
iret
adc
mov
or
push
cmpsb
subb
jg
test
stos
in
stos
arpl
ja
jno
loopne
push
sbbl
mov
int3
movsl
pop
movsl
movsb
loopne
xchg
cmpsb
mov
jmp
push
lret
test
loop
scas
stos
jo
mov
lods
in
xor
orb
scas
sbb
call
lahf
mov
bound
mov
lock
xchg
lods
dec
xor
and
out
les
mov
push
mov
test
stos
mov
loopne
fisubrs
stos
sbb
lods
lods
std
lods
into
lods
outsb
scas
mov
jae
sbb
push
loope
jg
mov
addb
mov
and
scas
lock
insb
out
mov
mov
add
adcb
mov
movsb
push
movsb
pushl
loopne
movsb
and
xchg
lret
cmpsl
lock
mulb
aas
mov
inc
scas
popf
cmpsb
mov
cmpsb
loopne
add
sub
dec
cmpsb
jne
mov
test
cmp
test
test
xchg
add
inc
test
add
ss
jbe
icebp
scas
push
in
or
mov
pop
mov
adc
jp
mov
fsubrs
add
test
lods
cld
lods
xchg
lods
cmp
outsl
inc
mov
sbb
adc
scas
pop
scas
push
jo
out
scas
cmp
jno,pt
xchg
out
push
repz
mov
scas
adc
scas
pop
scas
or
push
icebp
ret
imul
add
push
shlb
in
sub
mov
mov
push
adc
mov
lcall
push
sub
mov
mov
ffreep
add
mov
outsl
mulb
adc
sbb
mov
scas
in
add
fisubs
push
mov
jle
imul
mov
shll
sbb
movsb
xor
add
add
xorb
add
mov
xchg
adc
sbb
add
mov
cmpsb
inc
loop
jnp
mov
cmp
ss
add
sub
lods
xchg
scas
jnp
je
scas
mov
and
push
dec
adc
sbb
cmpb
mov
andb
nop
fwait
mov
dec
sub
xor
std
subb
sbb
cltd
movsl
clc
sub
lcall
inc
movsl
js
mov
aas
movsb
push
orb
outsl
jo
sbbb
cmpsl
cmpsb
cmpsl
test
sbb
adc
or
aad
xor
cwtl
push
sub
lcall
dec
lods
bound
insb
outsb
sbb
sub
sub
sbb
mulb
jne
xchg
and
sub
add
push
lods
pop
add
cmp
sub
inc
in
fcmove
pushf
ljmp
cmp
jne
adc
pop
ret
movsb
lock
pop
scas
stc
in
push
push
decl
add
or
add
or
push
add
pop
and
mov
pop
inc
cli
push
pop
xlat
cmc
sahf
sbb
xchg
outsl
clc
decl
call
jb
pop
lret
add
inc
sbb
loope
xor
rcrb
hlt
mov
ljmp
into
xor
xor
mov
decl
ss
cmp
push
cli
fwait
xlat
dec
test
mov
nop
adc
jl
mov
mov
stos
insb
addr16
icebp
icebp
pop
hlt
and
pop
push
nop
fnsave
icebp
fsubr
add
inc
js
fcoms
jmp
clc
jbe
add
call
push
xchg
xchg
test
push
pop
pop
scas
jbe
adc
add
mov
xor
push
je
mov
clc
lcall
decb
xor
push
test
pop
add
fucom
or
mov
or
aaa
pop
push
repnz
test
cs
std
inc
sbb
pop
scas
cmp
xchg
mov
mov
inc
fdiv
pushl
push
hlt
xor
add
popf
f2xm1
xchg
xchg
inc
or
sbb
decl
xchg
jl
je
add
ret
fisttpl
pop
sbb
push
adc
and
fldt
sarb
int
mov
jp
sub
movsb
nop
sarl
xor
mov
add
mov
or
into
adc
fwait
sbb
mull
repz
aam
orl
flds
in
mov
xlat
add
mov
mov
cs
mov
or
bound
pop
mov
add
in
pop
adc
xor
adc
cld
in
das
js
push
xchg
idivl
push
cmp
cmp
jnp
push
cld
mov
ret
stos
loop
xor
adc
mov
jne
int3
mulb
in
push
dec
mov
sub
lods
adc
pop
aam
flds
lods
jg
mov
add
push
fdivl
xchg
adc
lret
xchg
mov
xchg
add
mov
ljmp
sub
xor
jl
sarb
lock
imulb
mov
shlb
or
incl
xlat
fisubrl
bound
cmp
sub
xorl
subb
in
add
das
negb
mov
mov
cmp
das
add
xor
mov
rcl
das
push
adc
testl
push
add
test
js
inc
insl
or
cli
mov
out
jp
lret
jno
adc
cmp
pop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
push
add
call
push
sti
negl
push
ficoml
mov
pop
push
testl
incl
lods
and
repz
xchg
rcll
ss
testl
adc
jg
cmp
xorb
push
lcall
push
mov
cmpl
jnp
lods
pop
cmp
inc
push
movsb
adc
jle
outsb
outsl
test
pushl
testb
mov
fwait
push
mov
fwait
paddsb
mov
inc
or
push
adc
dec
lahf
mov
lahf
jns
mov
pusha
mov
aas
and
jle
into
ljmp
pop
lods
movsl
divl
mov
xchg
pop
mov
xchg
lahf
push
mov
daa
fstpt
rcrb
mov
mov
xchg
dec
xchg
fdivr
pop
cld
je
xchg
sti
fmull
dec
xor
jb
rcll
and
fists
push
jbe
mov
mov
pushl
push
xchg
jnp
push
fnstenv
fldl
fidivrs
lahf
mov
jmp
mov
daa
mov
fimuls
push
aaa
add
hlt
or
out
out
ja
mov
insb
mov
mov
push
stc
adc
jae
jno
dec
fwait
imul
outsl
jle
mov
or
mov
cld
fstl
scas
cs
jg
lahf
mov
xchg
test
mov
mov
jp
push
jb
rclb
lods
clc
fcmovnu
repnz
test
in
fstl
mov
stos
mov
out
frstor
sub
bound
fcmove
mulw
aad
and
push
outsl
mov
lcall
mov
or
and
sbbl
dec
fistl
push
pusha
fstpl
fs
adc
pop
cmp
push
jecxz
sbb
call
roll
cmp
xor
pop
dec
and
cltd
push
arpl
push
cld
outsl
clc
loope
leave
xchg
cs
inc
lcall
cwtl
push
movsb
jg
pop
lock
dec
mov
mov
lahf
lods
fstl
cmc
ret
mov
pop
push
push
clc
inc
dec
into
shlb
mov
push
pop
stc
xor
pop
adc
sar
cmp
shlb
test
jle
aad
xor
jle
push
xchg
add
insl
divl
jg
mov
fsts
mov
adc
xor
cwtl
fidivrs
gs
mov
jmp
ficomps
add
adc
xchg
cmpsb
jle
decl
aad
cltd
shlb
mov
mov
scas
push
push
jl
leave
push
and
cmpsb
jl
aad
and
rcrl
push
mov
inc
push
addl
mov
add
out
push
push
aad
stos
push
dec
push
xchg
mov
pushl
test
xchg
repz
sbb
cs
lods
incl
pop
pop
pop
adcl
add
pop
lock
negb
mov
aas
cli
call
pusha
int
icebp
iret
test
clc
xor
sarl
les
fdiv
incl
fwait
add
mov
sub
jl
in
jle
pop
stos
sar
decl
test
jle
aad
mov
push
xchg
sti
lock
pusha
out
inc
add
push
push
decl
inc
add
push
dec
push
lret
push
pop
fdivrp
in
aas
cld
jle
rcrl
out
negb
sbb
push
dec
jg
ljmp
jb
test
xlat
add
sahf
fidivl
test
xlat
push
in
nop
adc
pop
das
lcall
out
sub
mov
aam
mov
sti
add
pop
push
adc
pop
out
cpuid
mov
cmc
jg
jg
mov
xchg
mov
pop
mov
and
jl
sbb
rcrb
out
cwtl
push
rep
adc
pop
ss
xchg
fsub
testl
dec
mov
jl
clc
dec
imul
flds
cmc
stos
jg
test
push
jnp
push
jle
fisubrs
fstl
dec
jg
sbb
adc
test
decl
test
push
rcr
jl
movsb
repnz
jecxz
add
mov
and
jp
movsl
es
lea
shlb
jg
push
jle
shl
jb
test
jnp
ljmp
insl
sbb
jbe
add
outsb
or
xchg
cmpb
push
xchg
mov
jg
je
add
jno
shlb
fwait
or
jb
mov
sbb
mov
sbb
xchg
dec
pop
pop
rcrl
test
sub
adc
adc
lcall
into
sbb
pop
mov
lods
and
insl
cmpsb
inc
cmp
jmp
adc
decl
mov
addr16
push
push
xchg
mov
aaa
pop
pop
lods
adc
or
xchg
jbe
decb
and
iret
pushl
sbb
mov
pop
scas
sub
mov
push
andb
push
cmp
inc
fildl
js
inc
dec
push
push
cmpsb
incl
add
dec
push
dec
jne
push
xor
push
in
mov
jne
push
arpl
addr16
jb
push
dec
xor
dec
lcall
cmp
inc
outsb
push
xor
push
pop
add
idiv
js
inc
push
insl
xor
push
dec
arpl
dec
push
outsl
jbe
add
dec
call
rcl
dec
fs
push
push
add
fdivrp
dec
dec
pop
jp
push
dec
inc
xor
outsb
pop
cli
mov
outsb
jae
fs
dec
inc
xor
pusha
std
ljmp
imul
pop
add
jns
inc
data16
dec
dec
imul
jg
lcall
cmp
jb
aaa
push
push
inc
pop
xor
ljmp
add
imul
dec
popa
inc
dec
je
dec
dec
push
pop
push
jp
push
push
dec
in
push
imul
push
imul
push
sbb
dec
arpl
push
jno
cmp
std
add
outsl
xor
imul
insb
xor
push
mov
add
adc
data16
push
jg
sti
mov
bound
je
inc
bound
jae
inc
xor
dec
mov
ss
push
dec
xor
inc
dec
push
cmp
addr16
ja
bound
gs
dec
dec
inc
imul
pushl
insb
inc
push
push
cs
pop
inc
cmp
xor
dec
push
jbe
imul
inc
inc
outsw
clc
data16
insl
dec
push
jbe
adcb
fs
gs
push
jno
mov
xor
add
cwtl
and
dec
ja
push
insl
insb
clc
pop
nop
aam
jne
push
inc
inc
cmp
ja
jg
das
push
dec
jae
push
push
mov
push
dec
push
aaa
mov
outsl
sbb
push
cmpsb
ss
add
xor
push
lock
jno
cmp
inc
adc
push
pop
push
das
js
insb
jne
push
jae
pop
inc
push
and
push
inc
in
mov
popa
cmp
jp
les
dec
dec
inc
gs
inc
insb
xor
jbe
jno,pt
jno
aaa
sbb
inc
insb
pop
dec
xchg
mov
popa
pop
outsb
ss
sarb
aaa
cmp
cmp
gs
push
pop
je
cld
sub
outsb
inc
xor
aaa
jae
mov
inc
dec
push
xor
adc
popa
xor
data16
insb
push
je
xor
fldt
clc
aaa
inc
addr16
jae
jno
dec
push
pop
jo
bound
adcb
sbb
clc
pop
jae
jns
push
xor
dec
dec
clc
cmpb
xor
dec
xor
xchg
dec
jne
sub
sub
fimull
adc
aaa
ret
cmp
icebp
inc
inc
dec
inc
sbb
lret
aaa
dec
mov
aaa
neg
mov
or
xor
gs
xor
jno
jns
ret
icebp
or
jo
add
bound
jecxz
or
jns
xor
pop
sbb
adc
int3
mov
cld
push
popa
scas
lock
pop
jb
dec
cmp
es
popa
insb
dec
js
jne
imul
mov
xchg
pop
or
mov
xchg
out
xor
jns
push
ss
cli
insl
jp
incb
jb
sbb
inc
arpl
xor
aam
jne
inc
push
adc
data16
push
inc
jno
ja
xor
lock
jns
and
inc
test
jb
imul
add
mov
subl
cmpsb
es
dec
je
or
xchg
out
dec
outsl
jo
dec
inc
jno
push
and
cmp
ja
enter
shlb
inc
jae
imul
sub
in
stos
push
sub
aaa
arpl
push
adc
gs
mov
inc
shlb
js
roll
dec
push
pop
push
jp
addr16
jbe
adc
push
add
aas
add
push
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
push
adc
inc
xchg
adc
add
inc
add
dec
add
dec
shrl
add
gs
imul
arpl
gs
ja
in
adc
push
outsb
imul
jne
insb
imul
in
fcmovnu
outsb
push
push
gs
push
jae
dec
gs
inc
jle
fldenv
sub
push
dec
dec
inc
xor
imul
adc
outsl
fs
jne
push
sub
mov
shlb
jae
xchg
pop
xor
push
push
inc
gs
arpl
imul
pop
arpl
jo
outsl
jb
popa
arpl
jo
xor
mov
jo
enter
and
cmp
xor
lret
shll
imul
pop
mov
fs
add
inc
sbb
jb
jne
jl
or
pop
inc
and
add
pusha
outsb
je
and
loop
lock
sub
je
push
jae
insb
clc
push
sbb
mov
nop/reserved
insl
aad
popa
jae
inc
jle
fmuls
pusha
pop
push
sub
push
push
clc
jle
or
lcall
gs
push
insl
repz
data16
insb
dec
outsb
outsw
scas
push
jns
insl
inc
je
rolb
or
shlb
nop
pusha
daa
popf
popa
stos
out
jle
mov
dec
insl
sub
jae
addb
pushf
jb
aaa
jmp
jbe
inc
push
dec
jae
push
popa
imul
or
dec
bound
jae
data16
icebp
ds
imul
push
enter
xor
ja
outsb
addr16
aas
sub
imulb
int3
aam
xor
data16
pop
push
mov
xchg
frstor
filds
int3
push
dec
imul
sbb
adc
mov
shll
jge
je
imul
mov
inc
inc
xor
lahf
inc
lods
ljmp
push
lods
imul
push
push
push
jae
mov
push
imul
cmpsl
jmp
arpl
xor
push
lds
shll
aad
sahf
dec
cmp
jb
jg
addr16
js
sahf
repnz
fidivs
push
subb
stos
pop
lods
xor
pop
push
outsl
data16
xchg
adc
outsb
push
or
push
inc
add
dec
add
add
loop
loopne
popl
add
add
sbb
push
movsl
out
decb
add
adc
xor
popw
add
add
lods
int
dec
adc
cmp
insl
lods
lea
sbb
rorb
and
lds
sub
pusha
scas
push
add
or
imul
push
add
add
xorb
pushf
xchg
jbe
leave
leave
inc
mov
cmpsl
mov
mov
add
and
add
dec
push
add
cmpsb
imul
jnp
out
jae
arpl
rorb
pushl
jns
aaa
inc
ds
aam
add
and
add
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
enter
in
add
add
in
add
add
add
add
add
add
add
lock
add
or
add
add
add
add
add
add
add
dec
add
dec
add
add
or
or
xor
and
clc
dec
pop
mov
out
and
inc
imul
push
pop
mov
or
cmp
lds
mov
int3
mov
paddq
lea
mov
je
fstpt
neg
je
aas
lret
push
jbe
inc
daa
jae
mov
mov
enter
pop
sti
sub
fwait
mov
sbb
cmp
sub
inc
jne
out
icebp
pop
mov
cmp
add
sbb
lea
fbstp
add
mov
pusha
mov
mov
sbb
mov
xchg
es
sub
sti
mov
arpl
or
sarb
mov
stos
jae
arpl
push
or
push
cld
std
adc
sbb
push
jle
mov
adc
iret
repz
and
test
add
lds
dec
dec
and
inc
jb
divl
inc
cmp
dec
enter
insl
and
out
inc
mov
push
pop
shrl
cmp
pop
mov
mov
into
inc
out
sub
rolb
add
xorb
pop
sti
fidivrl
xchg
dec
and
aaa
and
push
popa
adc
mov
cwtl
jne
stos
pop
jle
xchg
fdivl
rcrb
xlat
stos
mov
pop
jo
sahf
xchg
stos
and
aam
sub
mov
daa
dec
test
mov
add
lret
jecxz
hlt
cmpsl
push
nop
mov
dec
test
adc
mov
cmc
sub
or
jg
fistpl
pop
push
sub
movntps
push
add
or
dec
shll
xor
je
je
adc
cltd
cld
dec
outsl
nop
shll
imul
or
inc
dec
dec
sbb
and
adc
dec
or
or
aam
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aad
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
fmuls
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
or
add
add
add
or
sub
or
data16
add
or
outsl
or
add
or
jbe
or
inc
or
add
add
add
or
mov
add
or
mov
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
jb
gs
xor
add
gs
xor
ja
outsb
je
jne
je
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
gs
imul
fs
je
insl
push
add
add
je
inc
add
add
outsb
push
gs
data16
jb
jae
