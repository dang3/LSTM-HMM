push
icebp
iret
xor
add
cmp
outsb
xchg
cmp
movb
das
enter
add
test
add
subb
xor
out
leave
push
aam
add
push
sahf
sbb
mov
add
sbb
rcrl
mov
sbb
sbb
mov
sbb
jle
mov
out
dec
jg
mov
mov
or
xchg
mov
fisubs
faddl
xchg
ficoms
movsb
xorl
orb
adc
adc
push
ret
mov
lahf
addl
jp
fisubrs
add
add
sbb
mov
sahf
sbb
sbb
sbb
lahf
negb
rcrb
jmp
fsubr
fcompl
rcrl
sahf
aad
sbb
sbb
fiaddl
nop
ja
add
popf
rcrb
sahf
add
jmp
sahf
inc
rcrb
or
or
or
rcrl
call
sbb
fs
rcrb
sahf
movsb
push
pop
jmp
fcoml
arpl
das
movsb
es
in
fnop
sbb
sbb
push
test
adc
xchg
inc
mov
imul
adc
popl
lahf
sbb
ja
lahf
rcrl
and
rcrl
sbb
nop
popf
sbb
sbb
pop
pop
data16
sarl
sahf
sbb
xchg
lea
mov
sub
xchg
cmp
daa
jnp
mov
dec
mov
dec
jge
push
and
sbb
add
push
push
xlat
pop
mov
cmpl
and
fidivl
push
push
and
xchg
pop
fcoms
sbb
daa
roll
sahf
sbb
pop
jb
xchg
adc
fistpll
sahf
lcall
cmp
shrb
sahf
movsl
adc
incl
and
sbb
gs
loop
sbb
sbb
popa
lods
pop
pop
push
ret
ret
pop
pop
nop
xor
insl
sbb
pop
call
sub
lea
mov
negl
and
pop
dec
pop
out
push
xchg
rcrb
in
jo
push
xor
out
mov
aam
xchg
mov
push
mov
sbb
rclw
data16
aaa
add
out
test
mov
fistpl
inc
movsb
jo
or
stos
and
mov
lahf
rcrl
shrl
xor
xchg
adc
movsb
and
pop
ret
lcall
or
rcrb
add
out
mov
sbb
add
sbb
sbb
lret
popa
add
sbb
adc
xor
sbb
sbb
and
sbb
add
bound
dec
sahf
sbb
pop
sahf
xchg
rcrb
add
ficompl
push
pop
inc
xchg
aam
shll
cmpb
adcl
mov
outsl
test
sbb
or
jbe
sub
jp
cltd
fisubrs
add
or
movsb
adc
sbb
jne
outsb
jmp
in
pushf
fwait
sbb
sbb
push
stos
push
fisttpl
sub
sbb
add
sbb
test
pop
sahf
je
sahf
push
xor
sbb
add
push
mov
push
adc
xor
sbb
imul
mov
sbbl
lods
and
cmpsb
sbb
test
rclb
cltd
pop
mov
mov
add
pop
sahf
sbb
pop
sahf
sbb
pop
shlb
sahf
push
push
dec
pop
shrb
pop
sbb
pop
shlb
fstpl
jbe
sahf
sbb
andb
imul
sbb
add
sbb
xor
sbb
rcrb
xor
pop
shrb
push
rcrl
sahf
movsb
and
lds
rcrb
pop
daa
jmp
xchg
add
pop
cwtl
test
push
inc
xchg
xchg
in
mov
pusha
lret
arpl
xchg
sub
xlat
push
pop
test
scas
or
lea
sbb
adc
and
sbb
movsb
and
test
cmpb
inc
outsl
rcrb
adc
daa
outsl
in
mov
arpl
pop
cwtl
imul
xchg
push
push
sbb
adc
push
inc
xchg
pop
daa
pop
andl
fmuls
cmc
jne
sahf
xlat
inc
mov
sahf
xchg
movsb
mov
cmp
mov
aad
rcrl
ljmp
mov
mov
sbb
movsb
daa
pop
imul
cmpsb
xchg
mov
mov
sahf
daa
nop
andl
adc
add
mov
pop
fimuls
das
imul
filds
add
pop
add
and
fimuls
repz
push
stos
and
roll
sahf
sbb
testb
jb
and
pop
mov
dec
insb
in
and
rorb
xchg
sbb
sbb
pop
pop
subb
sti
xchg
sbb
xchg
pop
sbb
adc
push
xorl
xchg
dec
and
jne
ret
sbb
or
xchg
sbb
sti
xchg
sbb
push
adc
mov
fists
sbb
sbb
sbb
push
add
and
andb
fildl
test
sbb
shrl
add
mov
dec
rcrb
sahf
movsb
adc
jmp
fcoml
imul
sbb
enter
jecxz
sub
test
mov
aam
push
cmp
sbb
xor
jnp
and
sbb
sbb
sbb
sbb
sbb
out
imul
or
imul
aam
xor
xchg
pop
mov
gs
shrd
pop
nop
sbb
out
imul
and
jl
and
in
js
and
xchg
and
jno
xor
adc
inc
rcrl
insl
aam
xor
push
scas
adc
sub
cmp
xor
loope
jno
xor
fwait
pslld
add
fmull
xor
or
repnz
jne
dec
jle
xor
push
xor
loop
push
sbb
sub
dec
lea
out
xor
fbstp
aam
xchg
xor
das
xchg
jg
push
jbe
or
xor
inc
adc
cmp
pop
aam
pop
xor
hlt
pop
mov
pop
adc
cmp
xchg
mov
push
dec
jo
push
jmp
shl
and
fdivrs
mov
out
push
mov
out
xchg
xlat
xor
out
ret
inc
push
adc
jge
cmp
cld
inc
pop
mov
addr16
fstps
and
fs
inc
lret
or
and
stc
adc
sbb
push
pushf
dec
sbb
mov
adc
jg
inc
mov
and
and
hlt
ljmp
or
jmp
xor
das
jae
scas
cmp
pop
xchg
push
xchg
pop
cmp
dec
jne
mov
lea
push
jo
test
cmp
sbb
add
fcoms
cld
int
ljmp
mov
mov
sahf
cmpsl
mov
cmp
inc
sbb
push
fimull
inc
movsb
es
and
xchg
push
pop
pop
sbb
and
insb
sahf
pop
sbb
pop
mov
scas
or
adc
sub
daa
cmc
xchg
in
push
into
pop
jp
aam
ds
rcl
rcrl
push
shlb
out
sbb
sub
add
sbbb
in
ret
sbb
imul
shlb
gs
insb
xchg
push
in
xor
xchg
fld
mov
cltd
clc
rorl
push
sub
lret
into
std
sbb
insl
fldt
mov
sbb
ficomps
les
jge
jmp
xchg
test
sbb
and
mov
push
nop
outsl
jp
xor
xchg
popa
sbb
mov
jge
jns
mov
lea
sbb
int
xor
adc
push
sbb
cmp
mov
lret
mov
iret
mov
inc
cli
xor
and
mov
or
aad
js
mov
xchg
jge
cli
sbb
sbb
dec
or
cli
xchg
push
dec
push
fnstcw
or
hlt
push
xchg
push
ret
xlat
lret
jecxz
pop
pop
shrb
jns
push
mov
sub
xchg
sub
in
sahf
mov
aad
mov
ret
push
sbb
sti
push
xchg
push
pop
fisubs
and
lret
jl
jle
inc
movsl
insb
push
shlb
aad
cmp
mov
mov
arpl
ds
adc
int3
in
jns
aam
and
sbb
jle
ret
mov
mov
mov
sarb
xchg
mov
inc
pop
sub
push
cmpl
xchg
mov
xchg
pop
test
mov
inc
mov
add
adc
pop
jecxz
sahf
pop
pop
mov
cli
ror
ret
jo
inc
not
cs
out
jg
xor
cmp
shrb
inc
imul
adc
das
xchg
add
rcrb
push
leave
stos
outsb
test
cmpsl
push
cmp
jmp
mov
push
sti
fisubrl
sbb
rorl
out
sbb
pop
repnz
sbb
jle
out
fsubl
int
xlat
test
pusha
xlat
fucomip
cld
dec
iret
or
sub
fldt
cmpsb
cwtl
mov
rolb
xor
sbb
inc
testb
rcrb
iret
ret
cmpsb
and
in
ret
mov
cmp
adc
sbb
rcr
insb
bound
imul
pushf
scas
add
les
dec
js
into
push
icebp
in
insb
xor
stos
hlt
sarl
data16
adc
roll
scas
xchg
cwtl
mov
test
subb
xchg
outsb
xlat
xchg
add
sbb
cmp
lret
inc
les
xchg
cmp
push
pop
xor
iret
sbb
adc
rcll
sub
mov
rorl
push
in
popa
lock
jo
pop
jl
dec
sahf
jb
push
leave
je
fldenv
sbb
fbstp
push
int
inc
sahf
sub
popf
or
jp
fistl
mov
jo
xchg
lds
or
adc
mov
rorl
xchg
repnz
fwait
mov
pusha
nop
std
hlt
aaa
ja
fisubs
mov
arpl
or
cmp
cmp
cmp
sbb
cltd
cmpsb
pop
sub
mov
xchg
lcall
ret
pop
jl
bound
jmp
push
sbb
mov
push
or
mov
fwait
push
and
fwait
push
dec
adc
call
repz
sub
sbb
or
mov
cmp
sbb
and
inc
sarb
cwtl
aas
push
les
in
inc
rolb
dec
push
ljmp
daa
xchg
int
std
mov
jne
ds
mov
xor
jmp
shll
mov
mov
test
pop
fsubl
xchg
xchg
adc
adc
dec
sub
js
xchg
pop
rcrb
adcb
sbb
sub
sbb
xchg
cmp
ret
daa
cmc
sbb
js
scas
push
jg
jp
sbb
cwtl
std
inc
xchg
mov
jp
orb
cs
sbb
xchg
dec
mov
mov
mov
not
shlb
xchg
inc
mov
out
out
push
mov
jmp
loopne
in
shrl
call
adc
rcl
test
push
scas
negl
push
sbb
sbb
loopne
jecxz
dec
jnp
inc
jge
pop
and
stos
adc
ja
scas
rorb
ret
mov
scas
dec
cmpsb
sub
pushf
dec
in
cmp
cmp
cmp
xor
lock
rclb
fldenv
dec
pop
cmpl
or
xor
jns
popa
add
sbb
sbb
pop
push
mov
notb
fsub
pop
xchg
sbb
mov
insb
in
cmp
test
dec
cmp
insb
mov
xchg
cmp
mov
push
xchg
push
movsb
mov
push
inc
lods
aam
pop
fwait
cmp
sbb
daa
sbb
clc
pusha
pop
sbb
shrl
adcb
in
adc
dec
mov
test
pop
rorb
jnp
test
sub
add
pop
mov
or
or
pop
sti
push
mov
or
sbb
dec
and
pushf
cmovb
outsl
pop
adc
fwait
shll
dec
sbb
cli
arpl
cmc
pushf
ret
test
lret
adc
and
push
cmp
in
lcall
xchg
in
push
int
adc
leave
jp
fcomps
pop
mov
adc
xchg
scas
mov
cmp
xchg
sbb
lock
sahf
xchg
or
pop
mov
imul
mov
mov
jmp
ja
pop
xchg
jmp
cmp
rcll
aam
cmp
sub
inc
shl
jge
sarb
les
jl
iret
push
rclb
addr16
sub
out
push
lea
dec
insb
sahf
jns
push
dec
jmp
add
sbb
bound
sarb
cmc
xor
sbb
imul
push
setl
xchg
push
jg
push
mov
dec
cld
adc
sbb
fwait
out
xchg
out
mov
xchg
push
sbb
push
sbb
mov
aam
or
xchg
jp
pop
mov
cmpsb
pop
fisttps
push
add
icebp
or
cwtl
pushf
bound
mov
out
sbb
or
pop
sahf
jno
ja
movsl
es
in
cmc
cmp
dec
lahf
jo
scas
jmp
mov
lcall
sbb
pushf
push
mov
sbb
pop
xchg
sbb
stos
nop
push
inc
aam
and
xchg
addl
je
insb
mov
mov
ret
xchg
mov
sbb
dec
es
cmp
sub
sbb
mov
jno
shlb
in
dec
sbb
cwtl
mulb
push
dec
and
or
jo
mov
sbb
xor
loope
mov
stos
adc
inc
leave
in
sbb
sub
jmp
mov
sub
xchg
jae
lods
and
sub
mov
outsb
loop
sbb
jmp
xchg
xor
mov
iret
inc
sahf
and
push
gs
sbb
mov
lods
inc
inc
psrad
mov
or
js
scas
sbb
xor
mov
push
subb
inc
dec
sub
cmp
mov
sub
mov
inc
mov
rcr
push
dec
imul
xor
inc
pop
xor
xchg
cwtl
rolb
in
xchg
aam
sub
sub
xchg
fs
mov
xchg
mov
xchg
lret
cld
bound
push
cmp
push
shl
mov
mov
mov
negb
sti
shrb
xchg
push
data16
xchg
or
js
out
cwtl
fldcw
in
and
mov
fbstp
stc
lods
xorb
jge
dec
cmpsl
pop
push
je
movsl
cli
inc
add
inc
dec
pop
mov
cli
pop
adc
cltd
mov
stc
fiaddl
add
jecxz
jp
out
in
and
fists
leave
jle
push
cmpb
add
rcrb
enter
in
les
mull
shrb
and
or
jbe
scas
mov
jb
notl
jmp
xchg
nop
sbbl
lock
xchg
pop
sbb
xchg
out
fadd
sahf
xlat
roll
int
and
mov
aas
xor
sub
mov
mov
sub
mov
xchg
leave
xor
and
pop
lds
ljmp
pop
mov
jp
xchg
inc
repnz
cmp
sbb
sub
frstor
push
add
xchg
insl
xchg
sbb
sbb
adc
sub
das
inc
cmp
push
sbb
xchg
mov
aad
outsb
pop
sub
bnd
lcall
xchg
sub
sub
and
outsb
popa
fldt
shll
jb
sub
mov
pop
rcll
test
lock
push
pop
test
ds
xor
mov
fimull
loop
ss
subl
mov
push
add
mov
or
repnz
jne
into
pop
lret
pusha
sbb
add
push
push
rolb
sub
cmp
sbb
daa
pop
test
test
aad
cmc
pop
sub
test
xchg
lods
push
mov
jl
pop
pop
xlat
xor
and
xlat
jbe
sbb
push
mov
sub
xor
int
stc
cmp
fimull
shll
and
xor
add
movsl
xor
jmp
sbb
jne
push
vpsubsw
pop
cmpsb
dec
sar
sbb
cmp
aas
inc
dec
mov
outsl
sahf
add
dec
sbb
and
sbb
fmulp
pop
adc
imul
mov
out
push
mov
popf
sbb
mov
jle
add
notl
les
jmp
hlt
fs
call
mov
inc
xchg
outsl
mov
sbb
lods
mov
int3
icebp
sar
mov
dec
fwait
xlat
xchg
stos
sbb
mov
les
lock
sub
pushf
push
cmp
std
mov
push
mov
cs
rorb
out
ret
test
add
sbb
cmp
movsl
or
xchg
aas
rcll
rorl
and
jae
xor
inc
outsb
sub
push
pushl
inc
mov
fimull
in
pop
out
dec
fcompl
or
sbb
insb
or
xlat
call
mov
mov
xchg
cmp
push
fsubl
aad
jmp
leave
in
aas
sbb
fisubrs
inc
mov
test
fidivl
inc
scas
fcomps
imul
mov
mov
sarb
dec
ja
adc
out
add
pop
insl
or
das
push
sahf
lds
jl
jg
je
xor
pop
adc
mov
mov
ret
jg
fldcw
in
lds
xchg
sahf
lret
xlat
and
scas
mov
insb
std
mov
outsb
sbb
adc
and
xchg
jle
mov
xor
rolb
and
mov
lahf
pop
mov
or
dec
mov
pop
addr16
dec
sarb
push
ficoms
hlt
pop
imul
xor
and
or
nop
loopne
int3
gs
xor
and
jbe
insb
fists
sbb
insl
leave
repz
push
sbb
xor
pop
and
push
in
mov
fisubrl
xorps
nop
mov
pop
lcall
aas
fstpl
fwait
xchg
lcall
push
sbb
stos
jg
xorl
xchg
lret
mov
test
cmp
ror
sti
jl
lock
sbb
in
push
js
ret
pop
sbb
sbb
movsb
lds
scas
out
push
arpl
rcrb
push
pop
rclb
xchg
daa
or
push
cmp
or
pop
pop
xchg
sti
movsb
out
lods
mov
push
fisubrl
fmuls
xchg
or
les
mov
push
mov
dec
sahf
jns
loopne,pn
adc
sbb
dec
enter
in
mov
out
and
fs
mov
add
sbb
in
mov
ss
and
inc
sub
sbb
xor
aaa
jle
xchg
jbe
and
xlat
pop
and
sbb
xchg
rcr
rolb
mov
imul
pop
and
inc
inc
icebp
jae
divl
inc
push
xor
sub
inc
mov
adc
repz
addr16
pop
xor
sub
jecxz
mov
ficoml
es
fcoms
sub
mov
hlt
ficompl
push
lock
xchg
cli
jo
ljmp
dec
mov
testl
jecxz
aam
mov
sahf
sbb
icebp
repz
dec
cmpsb
add
and
test
inc
sbb
and
add
mov
data16
adc
dec
sub
inc
cwtl
clc
mov
xchg
lret
ffreep
and
hlt
adc
aam
jle
cmp
cld
lods
lret
addl
fwait
mov
dec
push
insb
pop
sub
push
jp
cmp
mov
inc
jge
out
adc
sahf
dec
sbb
test
sbb
inc
dec
pop
mov
and
xchg
xchg
adc
push
iret
pushf
arpl
aaa
pusha
sbb
xor
xchg
xor
test
mov
inc
je
outsb
pop
add
pushf
pop
mov
fadds
mov
fs
iret
aaa
mov
std
int
scas
pop
rol
dec
cmp
mov
ljmp
pop
div
shlb
daa
ss
mov
sub
rcr
or
sbb
mov
icebp
sarb
adc
ret
test
add
push
push
xchg
cmpsl
out
ja
repz
sbb
std
mov
jg
adc
xchg
test
push
stos
cmpsl
les
xchg
sarl
stc
shlb
in
aaa
lret
sbb
mov
cwtl
test
and
or
mov
mov
dec
and
icebp
push
push
mov
fwait
dec
sbb
ret
repz
mov
stc
rcrb
bound
sub
or
in
shl
fucom
insl
sbb
lret
popa
int
mov
pop
push
out
adc
jae
sahf
dec
int3
outsl
ja
stos
outsl
sahf
xchg
dec
loopne
mov
sbb
test
and
mov
int3
mov
loope
jp
xchg
out
call
popf
jnp
and
cmp
push
ds
mov
push
fucomi
shlb
pslld
in
or
jg
outsl
test
call
testb
sti
in
xor
cld
fs
and
pop
pop
push
push
iret
ss
dec
cltd
jbe
push
aas
clc
mov
jecxz
fldt
push
movsl
dec
pop
pop
lahf
stc
fwait
lods
dec
out
in
push
insl
bound
cmp
adc
dec
sbbb
add
lea
xchg
inc
mov
jmp
adc
xor
mov
fsubrs
and
mov
rcrb
mov
sub
icebp
sub
xchg
jecxz
mov
pushf
out
inc
push
cltd
inc
repnz
cmp
idivl
mov
mov
aad
mov
cmp
shr
in
and
jge
pop
inc
sbb
adc
mov
xchg
push
mov
ret
enter
sbb
or
sub
xchg
nop
xchg
cmpl
cltd
jp
int
sub
inc
dec
outsb
xor
adc
out
scas
lock
sbb
pop
divl
cmpsb
mov
iret
inc
add
jl
insb
cld
fsubp
inc
pop
jnp
cmp
mov
inc
loop
ljmp
fistps
jg
mov
pop
out
lret
mov
dec
fs
push
sbb
mov
test
push
bound
cmc
out
add
push
sbb
and
adc
and
push
cs
addb
movsl
js
jbe
and
add
dec
lret
mov
and
mov
fwait
in
sbb
mov
inc
aas
sub
into
mov
sarl
stos
cmp
sbb
cmc
scas
movsb
negl
popf
pushf
push
jae
pop
fmulp
mov
mov
pushf
jae
sar
pop
fadd
rcrb
xchg
cli
jecxz
lcall
sahf
rclb
sarb
mov
iret
lret
sbb
inc
imul
in
xchg
xchg
or
sbb
fdivrs
cltd
iret
xor
jns
push
adc
sub
ror
inc
push
popf
fwait
jp
test
and
jmp
pop
cmp
inc
stc
lods
pop
rcrb
sbb
ret
dec
clc
cwtl
fdivrl
dec
sahf
xchg
lret
mov
inc
mov
or
push
xchg
xor
test
jmp
mov
add
arpl
xor
xchg
pop
add
aam
int
cmp
data16
nop
int3
xchg
cmp
inc
lret
sarb
clc
dec
loope
mul
adc
pop
out
push
sbb
scas
shll
dec
fcmovnb
rcll
mov
in
ja
xchg
pop
loopne
pop
lgs
sbb
int
mov
push
pop
hlt
lahf
pop
ljmp
mov
push
shlb
iret
idivb
out
hlt
in
xor
dec
das
cli
push
repz
sbb
cmpsl
adc
sub
iret
adc
jmp
out
mov
pop
clc
xchg
xchg
mov
rcll
lret
add
mov
and
cmpsb
jnp
idivb
cmp
in
and
lock
ret
cltd
movsb
mov
sbb
inc
jae
les
pop
xchg
rol
and
int3
inc
mov
and
and
pusha
push
ljmp
xrelease
sbb
mov
jae
mov
dec
push
or
ja
lahf
sub
icebp
movsl
icebp
scas
mov
nop
incb
test
ljmp
and
mov
push
sbb
fldcw
xchg
mov
adc
push
cmp
adc
sub
notb
in
pusha
icebp
sbb
arpl
and
aad
hlt
lds
cmp
into
fidivrs
shll
inc
add
jg
xchg
xlat
fistpl
rcr
inc
fstl
cmpsl
sahf
or
pusha
stos
or
loop
xchg
inc
popa
xchg
xor
sbb
push
pusha
imul
cld
in
sub
aas
push
mov
das
or
fidivl
xchg
insb
cli
test
and
lcall
lcall
jmp
sbb
nop
pop
mov
xchg
lds
ss
push
inc
repz
xor
icebp
pushf
shl
sub
ficompl
and
or
adc
inc
aas
or
sbb
je
xlat
push
xorb
nop
push
mov
jae
push
stos
int3
jo
loop
mov
push
addr16
mov
imul
cmp
popf
es
xor
mov
aam
sbb
aas
cmp
shll
xlat
pop
sub
push
mov
loopne
dec
arpl
stc
xchg
xchg
shll
shrb
jb
xlat
lcall
push
or
sbb
fwait
sti
jns
mov
enter
cs
push
int
popf
cmp
popa
sbb
pusha
adc
cmpsb
out
movsl
sbb
sbbb
jge
hlt
push
imul
pop
pop
aaa
shrb
mov
and
fwait
sar
or
sub
ljmp
stos
imul
add
mov
add
out
test
inc
inc
in
push
std
mov
adc
cmp
sbb
daa
aas
dec
push
incb
daa
cmpsl
iret
push
ds
out
pop
imul
jmp
loope
rcrl
outsl
xlat
movsl
scas
pushf
xchg
cli
cmp
or
mov
adc
jnp
and
xor
inc
imul
jge
mov
jo
cmp
add
cmp
xchg
fstpl
popa
jne
sbb
fldl
mov
jne
xchg
push
int
pushf
push
and
add
dec
filds
inc
shlb
rcrb
das
inc
jo
stos
into
pop
sbb
je
push
div
lods
rorb
into
fs
and
iret
in
jae
int
js
or
cmp
repnz
push
xor
push
add
cmp
sub
out
push
mov
lock
rorw
or
xchg
or
shrl
xor
pop
int
ret
or
fsubrs
push
adc
sub
pop
xchg
decb
add
lret
dec
push
lods
mov
adc
movsl
call
repz
and
mov
outsb
fstpl
stos
cli
add
sbb
lock
int3
out
inc
mov
xchg
pop
shl
and
fnstsw
outsb
add
cs
sub
and
mov
xchg
xchg
aam
jne
idivl
les
xchg
sub
and
and
pop
pop
push
adc
fstpl
je
nop
outsb
mov
les
pop
pushl
lret
std
out
xchg
sbb
xor
cmp
sahf
jp
or
cmp
jns
xchg
rcrb
pushf
and
xchg
aad
push
xlat
addr16
mov
inc
and
sbb
inc
sbb
push
xchg
xchg
stos
mov
ret
inc
xor
cld
sbb
int3
mov
adc
sub
lds
sbb
adcb
out
out
sbb
push
cmp
aad
inc
and
adc
sbbb
daa
sbb
mov
xor
pop
pop
pop
in
pop
test
subl
into
sbb
mov
sbb
cmpsb
fcomp
xchg
adc
pop
cmp
sbb
ret
sbb
stc
or
fcomi
mov
or
popf
stos
jb
sbb
mov
je
add
jle
pop
lods
movsb
xchg
add
jl
int3
push
mov
sub
inc
aad
shlb
test
in
jns
lods
outsl
mov
xchg
inc
into
mov
mov
or
mov
ret
lods
out
xlat
push
sbb
cmp
xorl
and
pop
push
rcrl
lret
inc
pop
stc
push
fsub
push
dec
inc
mul
rcrb
xor
cmpsb
mov
lock
outsl
xchg
dec
xor
call
adc
gs
xchg
sarl
push
std
inc
rcr
movsb
cmp
xor
test
inc
aad
out
sbb
aam
xlat
adc
jne
sbb
das
insb
imul
test
mov
out
daa
mov
notl
lods
lahf
shrb
xchg
ret
add
mov
or
test
int
shlb
outsl
ret
xchg
sbb
xchg
aas
push
test
xchg
xchg
pusha
lcall
into
sbb
lret
jle
cmp
dec
call
xchg
sbbl
aaa
add
out
test
and
pop
lcall
push
add
push
adc
adc
push
shll
cmp
sbb
scas
lret
loop
sub
cmp
adc
jns
iret
pop
fildl
ret
pop
cmpsb
test
jo
loope
lock
ficompl
pop
mov
imul
mov
repnz
sub
xor
rorl
xchg
add
sbb
cmp
add
xchg
inc
cmp
push
or
sbb
aas
lock
dec
xor
xchg
dec
pop
lret
stc
xchg
ret
shrb
cmp
xor
pusha
or
cmc
xchg
aas
ret
mov
push
das
xchg
add
push
jo
repnz
push
std
into
pop
dec
out
sub
popf
sub
sbb
jmp
adc
dec
pop
jno
les
jp
jge
mov
imul
pop
test
mov
xchg
sub
jecxz
out
fwait
pop
add
test
jl
xlat
je
loope
arpl
aas
pushf
in
call
aas
jle
jnp
scas
inc
rcrb
test
jb
inc
or
cs
ss
cwtl
or
test
mov
xchg
sbb
fs
lock
sub
or
cmp
jns
jnp
rcr
cld
loopne
xor
sub
mov
mov
inc
stos
jp
imul
push
nop
sbb
negb
xor
mov
imul
ja
cmp
sbb
push
add
dec
jecxz
xchg
fs
flds
fwait
cltd
sbb
push
mov
stos
arpl
sar
sub
js
sbb
gs
xor
movsb
sbb
cmp
sbb
push
das
sbb
popf
orl
gs
xor
std
mov
pop
hlt
jecxz
sub
cltd
aad
scas
xor
hlt
dec
loope
push
pop
adc
push
jb,pt
outsb
pop
jecxz
pop
fistpl
inc
mov
mov
sub
lds
and
out
sub
in
sub
hlt
xchg
inc
push
cmp
popf
cmp
jecxz
mov
fidivrl
std
es
in
sbb
jo
clc
push
sbb
mov
rcrl
shll
inc
push
inc
test
mov
aad
bound
pop
inc
aas
jle
lods
jb
push
je
or
xlat
icebp
fwait
repz
sahf
stos
cmpsl
ret
lods
lock
sbb
mov
aas
test
lcall
lds
int
in
or
pop
sahf
inc
xorl
aas
out
sbb
or
repnz
jbe
shrb
push
clc
call
pop
rcr
ljmp
sahf
test
fistl
sbb
cmp
addr16
mov
lods
shlb
mov
xor
xchg
or
ret
cmc
pop
add
adc
cltd
test
push
lcall
test
inc
sbb
sbb
nop
mov
dec
inc
sahf
lea
push
lds
loopne
push
test
push
sub
sub
jge
fisubrl
sub
int3
xor
adc
aad
sub
jnp
inc
add
inc
lahf
data16
sbb
cmpsb
xor
xchg
lock
push
movsb
shrb
nop
inc
fcompl
mov
dec
dec
sbb
roll
and
sahf
add
adc
nop
daa
leave
adc
shlb
or
and
mov
stc
jae
shr
adc
std
flds
pop
gs
jp
sti
xchg
rclb
js
push
cld
add
lcall
pop
push
pop
fwait
sub
sbb
xor
xor
pop
js
mov
sbb
enter
insb
mov
xorl
jle
cmp
xchg
jp
mov
aaa
addr16
scas
inc
sbb
cmpsl
mov
mov
clc
mov
sbb
addl
popa
enter
aas
push
push
sbb
and
or
xchg
xchg
xchg
inc
mov
xchg
jno
rcrb
cmp
rolb
and
mov
loopne
pop
daa
xchg
jp
bound
add
sbb
notb
iret
rcll
insb
sahf
lcall
xchg
mov
mov
mov
push
push
and
cli
dec
mov
sbb
sub
fsubrp
sub
mov
dec
insl
stos
lds
sub
pop
rorb
shl
subl
mov
rclb
adc
shl
lea
xor
pop
jecxz
mov
out
xchg
pop
push
pop
leave
adc
shlb
popf
imul
rclb
mov
jecxz
popa
cmpsl
cmc
sbb
pop
or
mov
fwait
sbb
push
and
xor
mov
flds
cwtl
shlb
clc
mov
fcoml
mov
icebp
add
jae
xlat
dec
sbb
mov
lahf
ret
mov
fstp
imul
pop
jne
pop
mov
fildl
andb
dec
mov
sub
sahf
push
movsl
xor
add
sub
push
insl
lret
push
add
dec
or
pop
jo
cmp
outsl
stos
fst
mov
push
pusha
mov
mov
sti
hlt
pushf
and
push
pop
orl
movsl
sarl
or
cmp
add
jae
and
movsb
cs
iret
into
in
arpl
into
lret
inc
pop
and
cmp
cli
mov
pushf
imul
pop
out
ds
sbb
out
aad
cmp
xchg
push
pop
push
es
sbb
cli
shl
xchg
dec
faddp
dec
xchg
xchg
push
mov
adc
inc
imul
xchg
pop
dec
leave
pop
mov
xchg
in
fists
in
jae
or
int3
data16
imul
jb
ret
add
adc
lods
mov
out
push
out
inc
gs
out
xchg
push
mov
movsb
and
sbb
daa
pop
jne
mov
out
push
jmp
mov
adc
adc
inc
rcrb
mov
mov
and
es
mov
filds
mov
jae
xlat
inc
jmp
clc
aam
fmul
leave
adc
and
das
add
add
jb
add
imull
xchg
mov
jp
test
lods
shlb
cwtl
fmul
sbb
outsl
ret
mov
cli
xchg
mov
clc
shr
fdivrl
pand
push
dec
outsl
pop
je
stos
js
or
lcall
imul
ds
xlat
xchg
je
das
insb
rorb
inc
and
cmp
lret
sbb
xadd
xchg
mov
cmpsl
out
mov
mov
js
add
loopne
hlt
xchg
rep
or
aaa
aas
inc
not
cwtl
adc
data16
lds
xchg
stos
mov
push
jle
sbb
or
pop
jae
cs
sbb
sbb
jg
sub
lahf
test
movb
fwait
icebp
xchg
mov
loope
mov
push
push
lret
jge
xchg
mov
dec
push
push
xchg
pop
sub
push
pushf
cmp
sahf
ret
xlat
dec
xor
xchg
jo
jp
loope
mov
shl
fistpll
mov
push
outsl
dec
adc
ljmp
loope
iret
or
adc
mov
jp
jecxz
cmp
xchg
push
mov
sbb
or
popf
inc
pop
sarb
add
cmp
or
sbb
jo
pop
sahf
xchg
dec
push
mov
aad
sbb
fmulp
add
cld
test
push
sbb
pop
sahf
xor
dec
sbb
mov
sbb
mov
jne
flds
jge
xor
sbb
inc
mov
sahf
sahf
sub
aaa
or
cld
add
and
xchg
xchg
push
leavew
shll
lret
cli
push
push
icebp
mov
test
ds
sbb
fstps
xchg
jo
dec
movsb
xor
sub
lret
mov
mov
imul
pop
fistl
ret
cltd
lret
lds
dec
stos
jp
scas
xchg
les
and
and
mov
outsl
inc
cltd
jbe
pop
int
or
xchg
sbb
popf
add
jnp
stc
rorb
cmp
daa
mov
movb
icebp
mov
pop
jg
cs
mov
popa
cmpsl
jne
fcomi
ret
xlat
ja
mov
jnp
cmp
movsb
xor
adc
data16
and
dec
movsl
xorl
mov
sub
sbb
imul
sahf
or
sbb
cmp
xchg
pop
popf
jnp
call
sahf
or
cld
pop
cld
push
jle
mov
out
sub
int
mov
ret
adc
jnp
jl
mov
sbb
mov
add
xchg
call
fisttpl
lcall
cmp
or
cmpsb
inc
inc
pop
xchg
rorl
gs
lods
mov
dec
stos
xchg
ret
jg
and
enter
mov
mov
pop
mov
rclb
lahf
jle
outsb
mov
sbb
ja
pop
sahf
pop
loopne
lcall
pop
into
mov
or
push
xchg
daa
or
rorl
mov
lods
ljmp
sub
repnz
out
sbb
insb
jns
stos
lock
rclb
sub
or
dec
sbb
and
lods
or
insb
push
loopne
or
push
and
push
jle
fdivl
push
push
pushf
sbb
sbb
cli
fs
iret
sub
add
fcmove
sbb
add
push
pusha
mov
jp
jmp
jp
testb
cmpb
test
inc
add
mov
orl
sti
cmp
sbb
cs
xchg
psubb
xchg
cmp
bound
sti
scas
jns
jns
pop
cs
cmp
in
pusha
push
inc
fiadds
xor
jo
stos
adc
mov
sbb
daa
push
mov
push
shll
pop
mov
xor
push
pop
mov
adc
js
hlt
or
das
add
and
pusha
lahf
push
sarb
adc
push
and
adc
mov
gs
jno
out
push
insl
mov
lds
aad
rorb
jmp
mov
pop
and
mov
mov
jmp
repz
pop
sbb
jmp
xor
hlt
repnz
push
dec
sahf
sub
jbe
and
bound
iret
pushf
vandnps
fyl2x
testb
sbb
add
sub
push
sbb
cmp
sbb
xchg
je
push
rcrb
mov
fnstsw
pop
pusha
cmp
push
dec
mov
pusha
aad
cmpsl
sbb
dec
add
xor
push
sahf
or
test
or
push
cltd
dec
adc
mov
aas
pop
sbb
aam
push
cmp
adc
dec
cmp
sbb
and
cmp
mov
test
and
lock
mov
stos
rcrb
cli
out
inc
leave
test
cmp
cmp
clc
inc
jne
call
push
in
and
shrb
int3
and
sbb
adcl
mov
out
ds
push
inc
sub
push
or
push
mov
je
pop
out
pop
pop
jg
sub
fmuls
mov
test
pop
inc
dec
lock
loope
mov
int3
ja
pop
sub
sbb
rclb
or
pop
sbb
pop
push
mov
jecxz
sahf
jg
cmpsl
adc
mov
mov
popf
js
repnz
rcrl
sbb
pop
push
cli
dec
cmc
pop
xor
dec
shl
sbb
inc
xor
xlat
mov
out
mov
cltd
pushf
addl
rcll
add
sub
in
pop
cwtl
inc
dec
cwtl
xor
shrb
jl
mov
sbb
sub
xchg
xor
sbb
dec
cmpsb
xchg
pop
cmpsb
scas
or
test
ja
sub
ret
push
pop
lahf
test
pop
fistpl
xchg
adc
cli
outsl
dec
or
cmp
pop
sbb
cmp
cld
loop
notb
mov
fldl
or
gs
push
pushf
inc
pop
cmp
cli
imul
cmp
fmull
inc
jmp
xchg
adc
push
imul
add
sbb
shlb
idivb
test
xor
inc
ret
cmp
mov
cmp
lock
jns
mov
ds
arpl
mov
call
loope
inc
dec
mov
fnstsw
pop
aam
pop
push
repnz
and
push
and
sub
jbe
rorb
fldenv
sar
lods
pop
rcll
shl
mov
mov
ja
and
adc
sarl
lock
push
inc
call
xchg
sbb
pop
mov
dec
push
push
and
xchg
cmp
in
leave
mov
mov
das
jp
push
push
push
fcmovbe
or
mov
shl
test
imul
or
mov
into
and
push
sahf
cmp
movsl
adc
sbb
mov
xchg
sti
jb
push
xchg
dec
sub
rclb
push
inc
xor
mov
pop
adc
xchg
iret
jl
js
loop
shlb
add
lods
xchg
pop
movsl
mov
sbb
popa
cmpsb
adc
xor
mov
sbb
mov
xor
sbb
in
sbb
fs
push
sub
movsb
les
popa
sbb
jp
add
cmp
dec
dec
add
sbb
push
inc
idiv
das
push
inc
mov
adc
sbb
mov
aam
jle
mov
pop
sbb
repnz
and
sub
mov
jge
sbb
and
sahf
mov
hlt
icebp
rcl
push
repnz
and
pop
inc
sbb
pop
push
and
mov
scas
fildl
or
gs
pop
dec
mov
repz
lea
sbb
loopne
cwtl
push
lods
cmp
insb
push
daa
mov
cwtl
aas
sbb
xchg
and
movsb
loopne
cmpsb
inc
rol
and
out
mov
insl
jg
sub
shlb
jbe
rorb
cmp
mov
addr16
scas
fwait
jo
out
inc
imul
jo
dec
dec
shl
jo
sub
add
shlb
dec
cmpsl
and
clc
xchg
ljmp
cmpsb
test
mov
das
pop
cmp
cmpsb
push
sahf
sti
mov
popf
xor
and
and
int
fisubrs
rcl
pop
dec
rcll
mov
das
ffree
mov
nop
mov
pop
fcompl
imul
lea
lods
xchg
xchg
hlt
popf
push
cmp
cmp
add
aaa
lds
xchg
pop
pusha
imul
adc
fld
mov
or
test
adc
xchg
xor
mov
cld
adcb
gs
lcall
pushf
dec
rorb
data16
outsb
hlt
ja
cmp
jg
mov
inc
pusha
in
sahf
cmpb
sbb
sub
in
xchg
js
mov
sbb
pop
test
out
lods
sub
rolb
cmp
sbb
repz
cmp
xchg
xlat
sti
cmp
jne,pn
loop
add
pushf
lcall
xor
sbb
xchg
pop
out
lret
repz
mov
frstor
inc
loopne
test
mov
cmpsl
ljmp
sbb
jb
shlb
lret
jmp
cmp
mov
sbb
lock
outsb
shl
dec
push
push
xchg
stos
stos
popa
sbb
mov
sarl
movsl
mov
in
and
dec
rorb
scas
push
pop
in
jo
push
jns
orl
ret
mov
pop
dec
adc
in
inc
outsb
adc
shrb
mov
scas
sbb
out
addr16
push
xchg
pushf
mov
mov
repz
pop
push
mov
add
aas
shl
dec
sbb
ljmp
push
sbb
mov
leave
mov
mov
mov
rorb
and
jbe
dec
xchg
xchg
pop
leave
clc
mov
in
bound
xchg
sub
pop
cmp
jae
or
mov
insl
pushl
jp
fwait
icebp
mov
sub
push
jg
shll
dec
ret
fistpll
inc
adc
and
fcomps
dec
stos
xchg
leave
imul
xchg
cmp
jp
and
xchg
sub
jnp
push
or
in
pop
sbb
clc
jmp
mov
pop
icebp
outsb
sbb
movsb
push
sbb
jne
imul
rolb
pushf
aam
sbb
mov
jl
pushf
dec
push
sbb
rorb
loope
mov
cmp
ds
push
fwait
dec
pop
aas
call
adc
ficomps
mov
jo
jnp
pop
hlt
daa
fmuls
sbb
xor
jno
inc
aam
adc
subl
shr
sbb
aas
lds
faddp
xchg
adc
in
mov
bound
sbb
fwait
je
les
pop
shrb
fistpll
inc
xchg
add
loope
lcall
push
nop
shlb
xor
mov
sbb
and
ss
sahf
pop
push
mov
xor
fdivr
rcrl
mulb
pop
inc
sahf
jnp
fldl
popa
movsl
lea
leave
fsub
stos
push
dec
notl
sbb
push
ljmp
pop
mov
mov
jle
jge
cwtl
inc
pop
inc
sti
jno
cli
sbb
sub
sub
ljmp
xor
sbb
jmp
add
sub
stos
test
into
sbb
dec
push
nop
or
cwtl
and
cvtpi2ps
ja
dec
pop
test
lcall
inc
lods
dec
sbb
repz
in
fndisi(8087
mov
inc
pop
xchg
into
push
mov
repnz
jbe
fwait
push
inc
and
loopne
es
fldenv
mov
jbe
mov
add
or
push
negb
fsubr
sub
mov
ds
mov
lahf
sbb
jns
add
xchg
out
je
mov
pop
cmp
mov
xor
dec
jnp
leave
dec
call
cwtl
mov
mov
adc
aad
testl
sbb
dec
fidivrl
sub
or
cmp
inc
and
jecxz
jns
adc
cmp
lahf
int
push
dec
shlb
push
mov
pop
shrl
dec
push
rcl
jle
outsl
ljmp
shrb
push
xlat
pusha
pop
loope
adc
iret
repnz
xor
xlat
or
inc
xchg
rorl
or
sbb
test
pop
cmp
push
mov
call
add
pop
sbb
jle
mov
enter
xchg
scas
push
dec
test
adc
leave
out
jo
jae
xorl
adc
or
out
jle
movsl
sub
sub
aas
inc
lcall
or
dec
sahf
cs
cmpsb
roll
mov
push
in
lods
adc
test
pop
sbb
jae
xor
stc
loop
jl
sti
adc
cwtl
js
shll
fisubs
inc
lock
mov
mov
divps
dec
jmp
sbb
jecxz
dec
rcl
ffreep
ret
inc
imul
shrb
pop
shll
mov
in
mov
mov
mov
cmp
sarb
or
lock
add
sbb
jo
sbb
leave
mov
sti
push
fcom
mov
lahf
xorb
scas
pop
ja
xor
push
cs
jmp
out
push
data16
popa
sbb
pop
loop
sahf
jne
lods
or
jnp
add
sti
sbb
mov
shrb
xchg
cmp
or
aaa
mov
data16
xchg
pop
xor
mov
xchg
cmp
xchg
sahf
jne
push
jbe
xor
dec
ret
ljmp
in
xchg
pop
cmpsb
loope
xchg
out
push
sbb
clc
addr16
call
jle
aam
faddp
sbb
or
insb
push
adc
add
inc
xlat
or
loop
addr16
sbb
fldcw
insb
inc
sbbl
lods
std
in
dec
in
cmp
xor
cmpsl
push
je
inc
cmp
mov
sbb
lds
ficomps
xchg
rolb
push
dec
push
stos
stos
sbb
mov
xchg
mov
jg
cmp
sbbl
xchg
xchg
jle
dec
popf
mov
ja
sbb
cmpl
xlat
inc
xor
jae
xchg
xor
mov
jle
xchg
add
comiss
out
pop
imull
sbb
dec
mov
in
xlat
inc
lret
and
lods
popa
out
pop
push
mov
sbb
ljmp
imul
fmull
sbb
cwtl
adc
xchg
xchg
aad
jl
pop
ret
or
imull
or
or
sahf
mov
jg
adc
sbb
sub
mov
test
cmpsl
fcmovnu
lret
call
sahf
enter
mov
daa
jge
add
shrl
imul
mov
scas
fwait
nop
mov
shr
jb
and
pop
jbe
push
lea
mov
ss
or
jmp
dec
sbb
movsl
ljmp
sbb
call
outsl
mov
inc
cmc
jno
sbb
dec
jge
sbb
push
in
mov
sub
adc
ficoml
sti
jne
in
lcall
inc
ror
push
sbb
das
sarl
ror
mov
std
inc
adc
outsb
or
daa
mov
mov
rcr
notl
test
adc
mov
jns
sti
push
xor
pusha
sbb
test
add
shll
icebp
das
loopne
xchg
pop
in
mov
mov
fstps
push
outsb
pop
lods
push
sub
add
nop
pop
inc
inc
lea
sbb
jbe
jae
inc
jecxz
outsb
pop
clc
adc
aad
stos
ss
mov
in
out
pop
xchg
cmpsb
imul
inc
pop
ret
lret
imul
mov
cwtl
sbb
test
adc
addr16
lods
lds
imul
or
mov
rol
sbb
mov
mov
sub
sbb
push
popa
dec
and
pop
lea
add
sub
lcall
sbb
lahf
arpl
flds
cli
aaa
sbb
sbb
dec
adc
repnz
insb
insl
fsubp
and
lea
xchg
test
and
cs
out
xor
out
cli
xchg
ja
mov
bound
ror
jg
lahf
cmp
cs
lods
loope
clc
sbb
lea
jbe
cmp
sbb
repz
dec
adc
adc
in
hlt
or
sbb
icebp
xchg
sahf
mov
jbe
rorb
outsb
add
pop
loop
or
nop
mov
or
sbb
and
xchg
ret
push
adc
mov
mov
inc
cmp
pop
or
into
sbb
int
inc
clc
and
cltd
imul
mov
out
scas
cmp
push
sahf
dec
pusha
mov
pop
dec
and
adc
lds
sbb
inc
dec
or
addr16
out
push
fs
enter
mov
mov
push
arpl
add
jge
and
ror
or
sbb
xor
jmp
pop
ja
pusha
lods
cmc
or
loopne
sbb
pop
andb
jle
gs
dec
dec
cmpsb
jp
and
repnz
sbb
das
push
xchg
mov
sti
xchg
xchg
iret
std
ret
lods
bound
sti
push
cs
movl
push
and
out
mov
outsl
mov
mov
aam
pmaxub
or
in
shlb
adc
cwtl
add
notl
dec
mov
push
repnz
adc
call
jle
sbb
push
push
sub
xor
nop
mov
sbb
jb
xchg
or
sbb
shlb
out
imul
xchg
out
scas
ja
fcmovu
sbb
mov
or
and
icebp
mov
sbb
cmc
push
or
push
fstpt
and
nop
mov
das
sbb
nop
mov
xchg
sbb
xchg
sbb
inc
push
mov
jge
popf
sbb
mov
mov
push
sbb
adc
and
mov
adc
push
int
mov
lods
aam
sahf
sbb
push
or
lret
push
xchg
and
sbbl
loop
lcall
sbb
aam
loope
push
pop
xor
addr16
jne
arpl
sbb
dec
aaa
push
sahf
andb
scas
rorb
sar
fcompl
data16
mov
push
lcall
sbb
and
jecxz
loop
or
stos
popf
shl
sub
out
and
in
adc
inc
test
sbb
daa
fiadds
shll
push
and
jns
inc
mov
cmp
imul
mov
std
into
sbb
jp
push
mov
sbb
iret
icebp
xchg
inc
sahf
inc
lock
push
jb
sbb
mov
ret
push
js
cmpb
push
lcall
push
fstps
idivb
fdivs
mov
aad
imul
popf
mov
das
int
arpl
cmp
loopne
mov
and
fistpll
adc
dec
push
mov
jmp
cli
repnz
sbb
iret
add
sbb
cmp
or
sbb
mov
and
jge
cmp
mov
dec
movsl
rolb
stc
xchg
jno
pop
mov
gs
push
cmp
dec
mov
jbe
mov
nop
mov
je
mul
repnz
mov
in
xchg
das
arpl
adc
in
cmp
add
popa
inc
pop
add
aaa
sbb
shr
cmpsb
cli
xchg
shll
mov
lods
pop
loop,pt
dec
arpl
roll
xchg
or
cmp
pop
mov
cmpsb
and
push
jmp
bound
into
js
rolb
in
fdivr
sbb
dec
daa
adc
sbb
adcl
sub
icebp
push
ret
adc
sahf
daa
out
scas
les
cmp
ds
xchg
ss
clc
push
adc
push
shll
outsb
popa
cmpsl
movsb
inc
and
movb
mov
or
push
inc
sarb
lods
add
test
out
shr
xor
adc
xor
lods
loop
clc
push
ret
xor
cmp
lahf
push
movsl
push
mov
int3
hlt
aas
mov
push
xchg
repnz
sbb
add
pop
rcrb
movsl
inc
jle
call
scas
adc
jmp
dec
movsl
inc
or
ss
push
imul
pushf
mov
sub
sub
sbb
push
fwait
jnp
dec
stos
jo
mov
sahf
xchg
test
sbb
inc
testl
orb
sarb
xor
or
rcrl
jae
sub
gs
sti
sbb
push
sbb
mov
push
pop
out
fiaddl
and
and
inc
test
dec
jnp
sbb
cmp
fsubs
mov
mov
xchg
mov
mov
in
add
push
pop
testl
mov
sbb
rcr
pop
ret
jo
je
fwait
pop
mov
sub
sbb
stc
jle
push
push
outsb
ja
sbb
jo
or
stc
icebp
xlat
insb
push
vmovlps
xorb
in
into
stc
inc
jmp
mov
adc
stos
add
xchg
sbb
or
push
inc
sahf
or
rorb
mov
subl
arpl
mov
mov
mov
cmp
ret
jecxz
pop
je
push
fldt
dec
mull
nop
adc
addr16
xchg
movsb
jge
dec
cld
sti
gs
in
mov
outsl
push
int
aad
outsb
lds
xchg
xchg
inc
jmp
mov
sti
push
pushf
cmp
das
shrb
mov
sub
jbe
add
repz
push
leave
mov
cwtl
sbb
mov
jns
add
lret
outsb
adc
mov
mov
push
ret
dec
pop
sbb
stos
fstl
pop
js
aam
test
sbb
scas
cmp
and
fbstp
dec
mov
fwait
mov
stc
mov
pop
mov
arpl
xchg
mov
pushl
ljmp
js
pop
pusha
push
jge
pop
sbb
into
push
movsl
add
imul
jp
mov
adc
call
push
sbb
nop
inc
mov
rorb
repz
sub
in
sbb
dec
adc
notl
adc
and
cmp
adc
loop
outsb
cmp
xchg
xchg
mov
jmp
adc
shr
inc
sahf
xor
lea
sbb
rolb
inc
sarb
push
test
gs
loopne
repnz
pop
or
xor
cmp
cld
push
jg
jecxz
sbb
sub
push
out
sbb
into
dec
cmc
sub
inc
xchg
pusha
fsubs
mov
sbb
jne
push
pusha
ljmp
add
mov
mov
jae
pop
cmp
sbb
xchg
js
je
es
stos
insl
cld
ja
ljmp
xor
mov
push
push
imul
insl
mov
sbb
inc
test
fstpt
mov
xor
fiadds
mov
hlt
imul
pop
xchg
pop
imul
mov
sbb
inc
pop
mov
or
sarb
push
popf
push
mov
sub
jle
es
sbb
out
fsubr
jp
push
adc
fdivs
adc
push
repnz
aaa
or
je
jae
lods
pop
dec
lea
cmp
push
xor
fcoms
sbb
sbb
rcr
aad
mov
jmp
pop
into
add
ret
shlb
inc
mov
scas
testb
push
xchg
orb
movsb
cmp
xchg
sbb
hlt
ffree
ljmp
out
and
mov
jno
cmp
shll
fcoml
sbb
out
jns
xchg
in
sarb
sbb
xor
cmp
xchg
js
push
and
mov
lock
mov
cmp
leave
mov
jle
cwtl
xlat
stos
sbb
mov
mov
adc
fucomp
shl
add
test
push
push
cmpsb
jecxz
fisubrs
and
cld
xlat
insb
push
jbe
mov
call
fmull
push
push
ret
loop
mov
test
sbb
and
jecxz
notb
sahf
mov
xchg
fildll
add
mov
shr
push
push
mov
aaa
adc
out
add
xchg
fsubrl
or
sti
mov
mov
fildl
bound
jge
jecxz
adc
jbe
sbb
ret
lods
sub
sbb
pop
or
cmp
sbb
push
jno
and
jbe
ret
dec
and
sub
pushf
sub
js
mov
sahf
xor
sub
sbb
push
dec
add
mov
pop
nop
leave
cmp
das
fiaddl
jmp
jge
pusha
sub
sbb
in
adc
sbb
aad
aad
push
int
push
pop
mov
dec
pop
int
shrb
mov
xor
ret
rcr
ret
fisttps
rclb
sub
pop
push
shlb
mov
jecxz
cmp
mov
sbb
jbe
mov
sbb
and
dec
jmp
rolb
lea
xor
enter
loopne
faddp
cs
push
jbe
fs
xor
andb
ljmp
shll
push
gs
cmpsl
into
adc
sub
out
sbb
in
mulb
or
je
leave
sbbb
xchg
lds
sub
add
enter
scas
sbb
pop
dec
rclb
into
outsb
xchg
pop
sbb
pushl
jno
sbb
adc
das
rcll
cmpsb
adcb
sbbb
jb
pop
shlb
mov
push
popf
imul
mov
shlb
xor
cmp
fcmovnbe
or
das
int
xchg
fwait
xor
aad
push
sahf
xchg
ljmp
sbb
fsubr
shlb
push
cmpsb
cltd
repnz
sbb
out
lea
jle
push
in
test
mov
adc
adc
lods
lock
adc
xlat
sbb
lcall
lea
fs
sbb
in
jb
dec
out
sti
xchg
pop
mov
imul
sbb
xor
dec
aas
pop
shll
mov
aam
in
ret
hlt
sbb
fwait
jbe
pusha
leave
sbbl
int3
test
sbb
mulb
outsl
fcomps
ret
pop
sahf
jbe
mov
cmp
xchg
insb
or
mov
push
gs
mov
cld
push
leave
inc
scas
mov
pop
js
cmc
popa
add
aaa
jp
pop
inc
out
push
xchg
jmp
xor
pusha
and
and
pop
test
and
push
cmp
add
add
push
sub
sbb
nop
mov
imul
mov
mov
out
leave
mov
mov
or
push
sbb
and
adcl
fdivp
cmc
in
repz
pop
sub
dec
mov
lahf
rclb
xor
pop
and
adc
sahf
pusha
out
faddl
hlt
in
mov
leave
jo
or
inc
outsl
xor
xlat
mov
sub
ja
rcrb
add
xchg
rclb
ss
aas
sti
insb
push
push
push
adc
enter
lret
sbb
out
mov
xor
inc
mov
imul
test
testl
and
pop
jl
add
shrl
mov
jb
and
sahf
and
bound
pushf
jmp
faddl
leave
shlb
pop
pusha
rcrb
test
sub
add
push
push
ror
sbb
shlb
shll
popf
sbb
jne
int3
stc
xchg
sbb
push
sbb
xor
imul
outsl
daa
call
push
xor
leave
or
jb
pop
jecxz
inc
push
adc
out
out
xor
jo
pop
test
and
push
pop
repnz
inc
dec
pop
sahf
xchg
mov
call
outsl
out
hlt
mov
out
cmp
push
jne
lods
bound
jns
ret
sbb
add
je
es
insb
mov
clc
fiaddl
mov
sub
ss
sub
clc
call
xchg
sahf
inc
icebp
add
push
sbb
add
in
xor
inc
or
push
xchg
sarb
mov
int3
xor
stos
push
push
outsb
sahf
out
and
cmp
jg
xor
mov
cmp
das
rorl
sub
mov
jb
scas
cmc
add
sahf
and
scas
test
sbb
sbb
mov
add
xchg
adc
sub
adc
ds
fmuls
sbb
jp
es
rolb
adc
scas
insl
cld
cwtl
imul
pop
rolb
push
hlt
fstl
pop
jo
adc
push
rcll
sahf
clc
dec
push
lahf
pop
dec
and
inc
and
popa
imul
jb
xorl
mov
push
dec
mov
push
and
lret
xchg
fsubrl
lret
mov
aad
jmp
pusha
cmp
mov
cmp
mov
jno
sahf
es
mov
adc
sbb
mov
inc
sahf
js
mov
in
ss
aad
pop
cmc
dec
lahf
lret
hlt
pop
setno
xor
dec
jns
popa
sbb
jbe
add
inc
nop
xor
in
sub
rclb
cmpsb
push
jge
in
insb
shlb
shrb
adc
nop
lahf
icebp
mov
ret
mov
cmpl
inc
or
std
cmc
movsb
ret
rcrl
pop
mull
outsl
xlat
fcmovb
mov
add
mov
sbb
push
hlt
sbb
cmp
pushf
jp
lcall
sbb
fldcw
addr16
cltd
popf
fs
aam
adc
sbb
mov
xchg
mov
hlt
cwtl
sub
and
loopne
pop
jmp
and
pop
jge
lahf
push
sub
sbb
mov
mov
pop
cwtl
or
pop
add
mov
sbb
lcall
into
pop
in
scas
mov
mov
je
sbb
outsb
push
repz
loopne
fisubrs
mov
sbb
je
popa
shlb
out
call
clc
fstpt
fsubl
sbb
inc
aam
out
xchg
lock
pop
test
jno,pn
cs
sbb
fisubrl
movsb
jae
mov
cmp
push
inc
sbb
push
pop
pop
shrb
push
sbb
fildl
stos
enter
das
cmp
orl
not
insb
subb
fiadds
arpl
cld
xor
rorb
pop
popa
ds
sbb
adc
push
sbb
sarb
or
jp
lods
aas
imul
rcl
sub
shrl
and
xchg
mov
loopne
fs
sbb
add
jp
mov
xor
or
mov
scas
xor
lret
or
jg
xchg
adc
sbb
das
jae
stos
notl
ret
jns
push
sbb
rcrb
rcrb
in
fld
lock
jbe
and
sbb
mov
and
mov
pop
pop
nop
sbb
cltd
das
ret
in
loopne
fists
mov
adc
and
loopne
push
mov
sbb
je
imul
popf
or
fwait
mov
cmp
sbb
out
pop
jp
sbb
pop
lcall
mov
sbb
decl
nop
wrmsr
rorb
cmp
sub
cmpl
repz
arpl
sbb
or
jne
mov
shlb
xchg
mov
aas
das
pop
sbb
sub
xchg
in
xchg
mov
mov
mov
js
insl
fnstsw
out
xchg
lahf
std
pop
rorl
mov
out
roll
test
pop
cltd
aaa
xor
adc
rcrl
mov
cmp
rclb
rcll
fbld
add
inc
add
mov
cs
in
movsb
jg
test
jbe
mov
shlb
ret
sbb
sbb
sarl
loope
sub
rep
stos
cli
push
xchg
rorb
shlb
outsb
movsb
add
mov
sub
sbb
and
jne
inc
sub
jecxz
sbb
jp
adc
ss
shrb
mov
push
test
loop
mov
add
pop
out
push
scas
outsb
imulb
sub
sbb
scas
or
mov
push
push
lahf
test
fsubs
mov
add
shrb
test
sbb
xchg
mov
addl
push
jne
bound
test
sbb
test
adc
jle
popa
or
sbb
sub
inc
dec
imul
stc
jo
xorl
cmp
in
fstpt
adc
pushl
repz
push
mov
cmp
mov
mov
sbb
int
shlb
lds
xor
mov
mov
mov
add
repnz
sbb
lret
and
xchg
inc
jnp
pop
push
inc
mov
out
or
push
subl
sub
xor
xlat
push
xchg
sbb
xchg
mov
xchg
or
jae
pop
sbb
mov
sbb
mov
push
or
fwait
dec
mov
adc
stos
mov
sbb
jb
mov
inc
push
or
aaa
mov
mov
fucom
push
sub
mov
mov
inc
sahf
ds
rol
push
jecxz
mov
xor
xchg
pushf
bound
jle
sbb
imul
into
mov
mov
ljmp
sub
imul
push
std
or
into
mov
mov
inc
push
push
adc
mov
and
loop
sub
insl
add
adc
xchg
xlat
dec
bound
lds
stos
pop
mov
adc
mov
int
push
push
mov
sbb
hlt
sbb
rclb
imul
outsl
jns
popa
adc
xchg
outsb
inc
or
mov
outsb
cmpsb
out
and
mov
loope
sbb
loop
sbb
dec
sarb
fisttpl
xorl
xchg
adc
cmp
pop
imul
ljmp
xchg
std
dec
dec
pop
push
adc
or
das
ret
iret
xchg
sub
push
dec
mov
dec
sbb
imul
shrb
jnp
loope
mov
dec
repz
push
jge
stos
jo
mov
sbb
das
mov
loopne
sarl
and
sbb
xchg
adcl
fdivs
xchg
jp
aas
sub
icebp
outsb
jle
shrl
sarb
addr16
sbb
adc
adc
adc
xchg
push
les
rcrl
sbb
xchg
xchg
push
add
sub
xchg
insb
je
xchg
mov
ja
out
stos
sub
enter
mov
cmpsb
sti
mov
and
sbb
shl
adc
xchg
push
dec
mov
or
int3
out
mov
les
test
adc
aad
cld
xchg
jbe
dec
xchg
pop
test
cltd
jmp
sbb
jmp
ss
outsl
inc
push
mov
cmpsb
mov
ljmp
rorb
ss
dec
sbb
insb
or
push
pop
add
push
mov
frstor
mov
in
xchg
and
add
imul
sbb
leave
enter
jecxz
insl
jecxz
dec
mov
sbb
imul
sub
and
adcb
lahf
cmc
sbb
test
lds
inc
xchg
insb
andl
xor
cmp
fmull
jle
sti
mov
jecxz
test
jge
cs
mov
xchg
push
and
push
push
lods
push
adc
lret
mov
xchg
je
popf
xlat
cmc
repnz
push
ja
add
sbb
pop
loop
das
cmc
rclb
dec
cmpsl
add
jne
scas
or
outsb
add
imul
xor
jg
cmpl
test
dec
pop
push
daa
adc
pushf
or
ds
bound
pop
push
ret
jecxz
mov
insb
add
ljmp
push
and
add
sbb
cmp
in
push
xchg
jmp
rcll
mov
jno
sbb
divb
aam
inc
rcrb
mov
push
js
push
pop
in
mov
imul
jge
cmp
cmp
xor
push
outsl
test
daa
das
pop
sahf
inc
popa
cmpl
or
mov
jl
add
jmp
fisubrs
mov
cmp
jae
call
inc
scas
cmp
and
adc
cmpb
call
sub
fmuls
mov
popf
xor
cmp
pop
ljmp
sahf
jmp
mov
sbb
mov
fnop
inc
out
jp
shlb
cmp
sbb
push
xor
mov
cmc
pop
add
data16
ja
lds
push
ret
push
test
xchg
lret
xchg
mov
test
es
pop
test
sbb
add
adcb
cmpsl
int3
lea
lret
unpckhps
mov
adc
repz
xor
jg
or
cmp
inc
enter
aam
ret
mov
or
movsl
or
jnp
jecxz
xorb
pop
or
mov
jmp
cmpsl
shrb
or
into
ja
or
imul
test
inc
dec
sahf
sbb
out
jae
push
sbb
add
and
sbb
push
fwait
lods
xchg
mov
mov
test
rcrb
aad
ljmp
sub
mov
add
repnz
jae
outsl
ss
sbb
sbb
scas
cli
adc
jg
int
stc
rclb
rcrl
rep
pop
out
push
adc
add
add
fcmovnbe
or
loopne
dec
cmc
lea
dec
sbb
in
cltd
popa
stos
push
rclb
repz
cmp
cld
sbb
xchg
les
cmpsb
sub
or
imul
and
inc
jecxz
dec
sahf
ja
push
out
sbb
inc
insb
mov
xlat
arpl
std
push
aas
cmp
stc
lret
xor
lock
outsb
push
jbe
add
ss
pop
cmp
sbb
mov
push
jae
add
nop
adc
adc
pop
arpl
insb
mov
jae
out
lret
sbb
fildl
or
adc
or
pop
mov
sbb
fildl
aam
xchg
int3
loope
out
add
hlt
movsb
mov
adc
shll
icebp
js
push
dec
jmp
pop
int
out
rcrb
mov
ljmp
sbb
dec
sub
mov
stos
fs
inc
sbb
cmp
sbb
add
pop
rorb
sbb
mov
mov
popa
mov
xor
adc
out
lret
lcall
inc
mov
inc
ret
lea
xchg
mov
out
imul
dec
repz
mov
sbb
xchg
rcr
mov
fcomps
sbb
insb
je
addr16
pushf
das
lods
pop
xchg
cmp
test
push
lcall
testl
sbb
fsubl
pop
aad
xchg
data16
test
push
sahf
dec
mov
popf
iret
sbb
xor
cmp
aad
fs
leave
testb
icebp
adc
add
nop
lahf
add
lcall
das
rcrb
inc
daa
sbb
push
push
cmp
jl
loop
movsb
or
mov
rorb
jp
popa
sbb
xor
inc
pop
sub
jl
jmp
push
mov
testb
push
adc
inc
mov
pusha
lcall
mov
loop
arpl
pop
outsl
flds
cmp
mov
push
and
pop
fucom
sbb
pop
sbb
ds
cwtl
mov
movsb
jge
insl
pop
ja
test
push
push
sub
sar
cmp
out
jp
lret
scas
push
lods
push
js
test
fst
xchg
arpl
xor
pop
dec
push
jmp
sahf
into
mov
push
daa
sub
sbb
inc
adc
or
aad
mov
sbb
hlt
pop
cmp
je
cmp
sub
bound
int3
xchg
sbb
lea
aad
add
cmp
cmp
mov
leave
xlat
psrlw
xor
xchg
std
aaa
jb
enter
lret
imul
sbb
adcb
jl
sarb
lret
xchg
and
mov
icebp
int3
fidivrl
xchg
in
mov
jbe
xor
js
outsl
sbb
daa
or
sbb
es
adc
lcall
fisttps
rcrb
push
inc
stos
fstl
xchg
mov
pop
cmpsb
je
pushf
xor
aaa
lret
sbb
je
xchg
rorb
pop
sub
lcall
jno
jne
cmp
inc
data16
dec
jo
inc
ftst
rolb
repz
dec
mov
sbb
pop
lahf
jae
stos
add
jne
addr16
sbb
scas
paddb
gs
aad
xorl
mov
mov
fists
jne
arpl
or
fnsave
push
pusha
dec
dec
cwtl
cmpsl
aas
hlt
rorb
jmp
mov
mov
inc
sbb
out
mov
js
xchg
stos
push
dec
push
in
ret
dec
int
lock
cld
xor
mov
shll
sbb
les
sub
sbb
or
in
push
loope
sbb
or
push
daa
mov
or
lahf
shll
cltd
cmp
mov
div
cmp
cmp
xor
lret
pop
xor
fwait
adc
test
inc
cmp
ret
cld
pushf
xchg
inc
stc
test
in
mov
out
lret
jns
dec
and
pusha
xchg
inc
mov
push
push
bound
sbb
xor
sub
cmp
xchg
outsb
popf
or
push
leave
loopne
gs
jmp
sbb
xlat
xchg
ja
mov
shlb
sbb
push
sbb
aam
addl
fcomps
ret
push
mov
stos
cwtl
lods
or
subb
leave
sbb
fs
mov
push
cltd
lahf
rcl
sbb
fwait
pop
jl
inc
mov
jno
mov
push
movsl
ds
jge
push
int
in
jne
xchg
cmpsl
xor
mov
das
or
sbb
aas
or
fidivl
jecxz
js
ss
lret
push
mov
xor
aam
int
jns
add
dec
push
rcrb
in
cmp
pop
in
rcrb
aaa
test
push
fsubs
scas
into
movsl
pause
xor
ret
mov
sahf
int
dec
out
cltd
mov
xlat
stos
mov
sbb
xchg
test
shl
dec
dec
xchg
das
sbb
cli
or
stos
std
and
push
jl
adc
adc
aas
add
adc
xchg
xchg
mov
and
sbb
pop
shrb
shrb
call
or
sbb
shlb
in
mov
push
push
aam
sbb
fs
push
pop
jno
pusha
sarb
scas
add
stos
sub
sub
sbbb
inc
xchg
mov
dec
sbb
sbb
call
mov
out
pop
ja
or
mov
shlb
lahf
mov
sbb
xor
xchg
sub
mov
sub
xchg
movsb
sbb
push
push
xchg
dec
cli
dec
inc
xchg
push
push
bound
inc
jo
ret
xor
addr16
and
jl
je
rcl
inc
inc
cmc
and
dec
push
mov
sbb
cmpsb
mov
mov
daa
leave
or
ljmp
data16
call
ret
jecxz
add
add
add
and
jbe
lret
mov
repnz
shlb
adc
sub
sub
sub
popa
dec
xchg
xchg
push
jg
push
dec
loopne
or
rcll
movsb
gs
cs
popa
sahf
test
jnp
xor
xor
call
sarb
fnstsw
subl
arpl
xchg
jl
cmpl
nop
mov
sahf
mov
push
mov
mov
mov
rorl
out
fdivrp
addr16
sbb
lds
fwait
push
std
sbb
cvtps2pd
subb
pop
lods
insl
rorb
cltd
mov
and
nop
ljmp
lea
cmp
and
repnz
xor
stos
aaa
adc
cs
in
sbb
enter
pushf
sbb
push
aas
int3
ret
inc
push
iret
mov
repnz
loopne
adc
test
outsl
jne
adc
pop
xor
shlb
sbb
and
xor
pop
enter
xchg
out
adc
imul
scas
sub
pusha
cmp
pusha
adc
adc
out
ret
xchg
aaa
mov
push
or
push
lcall
leave
ds
loop
sbb
aad
sti
inc
lods
arpl
mov
fnsave
pop
call
lock
cli
sti
pop
cmpsl
mov
mov
sub
int3
sub
cmpsl
popa
sub
push
sub
dec
sbb
jmp
and
xchg
rcl
fadds
sbb
xor
ja
loope
mov
xchg
lock
loopne
sbb
fwait
mov
movsb
nop
inc
mov
mov
pop
ljmp
cli
sbb
call
sahf
popa
in
rolb
cmp
sub
lea
dec
xchg
aas
in
shrb
cmpl
ja
lods
fdivl
xchg
pop
movsb
icebp
stc
lret
dec
sbb
or
jne
pushf
leave
shl
mov
fs
faddl
int3
xchg
fidivrl
xchg
aam
in
in
imul
or
jmp
pop
push
add
and
lcall
push
mov
lods
clc
adc
ret
adc
jmp
outsl
fldl
sbb
pusha
xchg
mov
jno
jnp
out
lret
cmp
and
xchg
mov
sbb
sbb
and
pop
cli
fwait
mov
jmp
dec
push
ret
mov
sub
xor
lods
mov
jnp
fwait
dec
jle
shrl
adc
sbb
lcall
add
sbb
add
loop
xchg
push
mov
sti
sbb
pop
add
push
sbb
aad
xchg
mov
popa
das
or
cmpsb
xchg
stos
or
and
sbb
inc
xchg
shl
pop
push
push
push
fsubs
add
jnp
sar
pop
sub
and
sbb
or
je
je
shrb
mov
mov
cmpsb
daa
sbb
std
scas
mov
sarb
dec
mov
pop
arpl
rcll
sub
icebp
dec
xchg
clc
ret
mov
das
pop
push
mov
out
lcall
outsb
fwait
mov
xor
test
or
int3
sub
pop
movsl
mov
push
mov
mov
xchg
arpl
jmp
into
mov
inc
pop
push
xchg
dec
xchg
lods
mov
jne
sbb
sbb
mov
pop
fisubl
inc
fildl
pop
sahf
or
repz
sbb
push
add
or
punpckldq
sbb
rolb
push
jecxz
lret
adc
lea
fimuls
fnstenv
jle
sbb
out
idiv
in
cwtl
rcll
icebp
dec
fbstp
jecxz
pushf
rclb
xlat
arpl
jno
call
leave
or
dec
sbb
ljmp
sbb
lret
popa
repnz
pop
jno
or
adc
daa
push
mov
lret
jns
mov
aam
or
jge
cld
sbb
add
mov
divl
jnp
es
pop
mov
test
insb
imul
mov
out
dec
inc
dec
nop
add
pop
xchg
leave
adc
jno
pushf
test
or
sbb
jns
jnp
pushf
sbb
xlat
out
dec
mov
stos
xchg
lods
test
fsubr
inc
iret
scas
sbb
mov
mov
mov
xchg
lcall
mov
repnz
add
jns
fwait
jne
jmp
loopne
in
ror
and
sub
test
out
cmp
call
xor
xor
jo
ja
negb
jns
sbb
fists
sbb
lahf
je
xor
pop
mov
enter
rolb
mov
hlt
stos
dec
sbb
push
in
or
mov
mov
out
js
xchg
push
sbb
loop
add
and
mov
ljmp
roll
push
arpl
sahf
jmp
mov
xchg
gs
mov
inc
sub
mov
shlb
sbb
sub
ss
and
imul
test
out
and
push
adc
stos
dec
cmp
repz
testb
dec
fiadds
inc
mov
sbb
inc
ret
pop
aad
xorb
cmp
sbb
add
rolb
jne
jae
cs
push
xchg
add
add
inc
xchg
aaa
shlb
shlb
les
or
into
cmp
push
in
jge
dec
pop
sahf
cmpsl
and
xor
mov
xchg
lods
fmulp
xchg
inc
or
cmp
and
mov
fsts
js
sbb
repz
and
push
add
jb
fs
bound
push
mov
fsubrl
mov
add
push
cmpsb
cmp
mov
push
jnp
xor
jmp
xchg
arpl
xor
lret
push
sbb
loop
dec
mov
pop
ror
mov
cmpsb
cmpsl
stc
popa
and
push
stc
ljmp
cmp
lods
jb
sub
cmp
ret
push
outsb
in
fwait
pushf
mov
jo
cmp
cmpsl
mov
out
in
int3
neg
addr16
pusha
ljmp
jl
repz
inc
jmp
xchg
rolb
es
mov
pop
mov
sarb
ja
test
mov
xchg
jo
mov
packssdw
testl
push
xchg
and
pop
mulb
push
push
lds
adc
sbb
ja
lea
or
sbb
insb
fistpll
cld
rcrl
popa
out
ljmp
fmulp
ret
cmova
loopne
dec
mov
test
test
leave
scas
mov
mov
rep
bound
cmp
inc
in
cmpsl
dec
out
out
jns
xchg
hlt
pop
adc
sahf
xchg
sahf
and
ret
add
mov
fcoms
repz
adc
push
sbb
adcb
stos
inc
shll
roll
icebp
inc
sbbb
push
jae
scas
fst
inc
popa
flds
cwtl
stc
cmc
cmp
mov
insb
arpl
jle
pushf
adc
inc
shlb
stc
mov
xchg
outsl
pop
lds
data16
sbb
adc
insb
lds
sahf
and
cmp
ror
inc
and
pop
in
rcrb
aad
sub
xchg
inc
sub
inc
cmp
mov
mov
icebp
jae
test
rcr
xchg
push
cmp
lahf
out
sbb
ficoms
mov
loop
repz
inc
dec
xlat
cmp
jno
sbb
xlat
lds
jl
mov
sub
aad
sbb
inc
nop
adc
lods
fdivrs
and
inc
cwtl
xor
pop
lret
sbb
add
mov
sub
adc
gs
jg
sbb
call
insb
out
inc
add
adc
jle
xchg
iret
jg
fdiv
sbb
mov
mov
mov
adc
sbb
fistl
or
mov
jp
nop
jp
fidivrl
jmp
xchg
rcrl
or
mov
mov
insb
mov
fwait
mov
aaa
sbb
cmp
pcmpeqd
shrb
ret
les
sbb
ss
jg
dec
adc
pop
inc
movsb
sub
dec
call
outsl
sub
and
dec
movsl
xchg
push
xor
orl
xchg
fwait
lcall
and
addl
xchg
xor
imul
push
inc
adc
stc
lcall
rolb
popa
fs
test
mov
jle
into
lahf
mov
xor
in
addr16
in
push
sbb
cmp
mov
jl
or
dec
xchg
jp
cmp
nop
add
pop
roll
popa
mov
dec
push
daa
rcrb
inc
stc
sub
jecxz
cmp
fucomp
ja
and
sub
out
and
cmpsb
imul
xchg
jle
repz
or
ljmp
mov
imul
xchg
xchg
jnp
loopne
test
or
mov
xchg
sub
xor
insl
mov
lret
or
ljmp
mov
stos
sbb
pop
and
dec
stc
fidivl
je
xchg
inc
test
mov
sbb
int3
sub
xor
cltd
insl
mov
rorb
pop
es
outsl
cs
sbb
push
push
cld
aaa
cmp
jbe
in
ret
sahf
push
sbb
xor
inc
mov
xchg
scas
ss
sbbb
sbb
pop
and
nop
mov
mov
and
push
sub
test
adc
inc
push
ja
ljmp
add
repnz
in
sub
movsb
adc
sbb
stos
xchg
rcrb
add
sbb
fcoms
es
ret
insb
pop
sbb
dec
xchg
inc
pop
cli
std
push
les
rclb
mov
das
fs
fwait
shr
mov
test
sbb
popa
leave
mov
xchg
shrb
sbb
idivb
mov
xchg
cmc
les
sbb
gs
into
rorb
sbb
cs
dec
sbb
xor
pop
add
test
jge
sub
out
or
into
stos
xor
inc
push
lahf
arpl
jecxz
out
fst
or
data16
mov
xchg
sbb
clc
ret
inc
push
pop
shrb
int
in
icebp
mov
xor
add
mov
pop
outsb
sub
rcrb
wrmsr
pop
insl
das
pop
shlb
pop
xchg
jle
xor
mov
movsb
loop
icebp
daa
idiv
sbb
or
stos
mov
jge
or
sub
xchg
fidivrl
xchg
jecxz
iret
sbb
sbb
dec
push
call
aam
jge
add
rcrb
and
out
pop
add
sbb
mov
cmp
movsl
sub
push
mov
test
sbb
clc
repnz
jle
mov
inc
cmpsl
push
pop
movsl
inc
mov
sbb
xchg
jns
clc
pop
dec
jb
mov
lock
ja
or
and
rclb
xchg
sbb
xor
xchg
and
frstor
xchg
adc
adc
pushf
push
fidivl
mov
push
xchg
and
fdivrs
mov
and
addr16
jmp
jnp
or
inc
mov
adc
xor
lock
inc
pop
push
sub
sbb
loop
jecxz
or
push
insb
jmp
hlt
fistpl
out
cli
sub
insb
inc
fcompl
push
inc
das
outsl
or
cld
add
cmp
jmp
mov
clc
pop
dec
add
mov
xor
shlb
aas
loopne
push
push
cmp
xor
inc
loope
out
sbb
jl
and
push
enter
cltd
lcall
pop
lock
sub
das
mov
jo
scas
dec
xor
lea
mov
popa
rorl
test
rol
and
fnstenv
sbb
jge
test
shrb
sbb
in
cmp
es
jp
mov
mov
aaa
cli
lds
lock
jmp
push
or
sar
jg
sbb
jbe
inc
into
xor
es
cmp
jae
fwait
cld
out
lret
and
dec
pop
xchg
sbb
xlat
xchg
xchg
lods
movsb
sub
loopne
pop
sbb
lcall
mov
fcos
pusha
dec
or
sub
iret
lahf
fisubl
xor
andb
mov
rorl
push
jae
push
cmpsl
sbb
test
pop
sbb
aam
aad
pop
and
mov
or
push
push
test
dec
rorl
jge
fidivrl
mov
repnz
dec
out
sbb
xorb
rcrb
push
insb
icebp
inc
or
into
xor
inc
push
xchg
cmp
repnz
or
dec
sbb
inc
ljmp
push
lahf
and
flds
inc
dec
sarb
jle
or
adc
jle
leave
dec
mov
mov
push
cmp
insb
and
pop
std
jae
xchg
jmp
sbb
lret
pop
mov
outsl
sahf
jmp
ljmp
imul
cmp
or
mov
pushf
div
push
mov
lods
xchg
movsb
fdivs
leave
popf
psubb
cmp
or
sub
adcb
push
adc
jno
shlb
xchg
and
dec
cli
xor
or
ds
push
les
stc
add
loop
jbe
mov
push
frstor
jno
and
test
jl
cmp
xchg
dec
orb
js
roll
cmpb
mov
nop
and
ljmp
fs
pop
call
out
aaa
inc
pop
test
pop
outsb
mov
dec
and
dec
sahf
mov
sbb
ficomps
adc
adc
mov
or
sbb
cmp
xor
outsb
fwait
jmp
xor
rclb
add
sbb
icebp
and
lods
pop
lods
jno
lret
mov
aaa
mov
sbb
scas
mov
rorb
loope
mov
mov
imul
data16
cmp
pop
pusha
loopne
rcl
and
leave
pop
call
push
add
sbbl
jp
dec
xor
add
xchg
out
sahf
inc
cmp
pop
ljmp
loop
pop
ret
icebp
daa
jno
adc
sub
les
popf
xlat
mov
xor
mov
data16
inc
push
clc
pop
jae
sahf
pusha
in
dec
jle
add
xor
std
xchg
cmp
and
aad
js
test
dec
sahf
xchg
mov
stos
sbb
icebp
xor
sbb
jp
leave
xchg
push
push
sub
or
sbb
mov
cs
and
pushw
mov
mov
mov
in
fstpt
nop
sahf
ret
xchg
sbb
cmc
mov
test
sub
dec
lea
and
mov
inc
loopne
dec
test
push
push
cmc
aam
pop
and
fwait
sbb
adc
repz
dec
xchg
test
push
push
stc
repnz
fimuls
mov
lods
sbb
loopne
scas
jge
xchg
icebp
cmc
cwtl
mov
js
sbb
inc
dec
xchg
xchg
loopne
xchg
out
je
mov
or
nop
mov
in
cmp
pop
sahf
xor
mov
or
and
daa
ja
mov
adc
inc
jnp
rol
mov
nop
shrb
test
mov
je
dec
xor
popa
push
fwait
fs
mov
xchg
add
cmpsb
mov
xlat
cld
push
stos
ret
mov
or
mov
sub
adc
sbb
mov
inc
ficomps
loopne
jo
call
imul
sub
sti
cmp
xchg
dec
sbb
xchg
mov
out
out
mov
icebp
fcmovb
inc
jno
ret
add
movsl
xchg
imul
pop
add
xchg
xchg
cmp
fwait
rcrb
mov
scas
xor
int3
dec
xchg
addr16
jge
subb
push
lret
data16
sbb
inc
sub
ljmp
fisubrs
mov
and
sbb
pushf
fs
out
add
lret
fidivs
and
adc
push
push
out
test
add
rcl
mov
mov
subl
xchg
mov
imul
or
jecxz
or
sbb
sti
lods
cmpb
cmc
fistl
dec
mov
in
sub
inc
xor
divb
jmp
adc
imul
cmp
mov
pop
or
mov
mull
sbb
jl
es
sbb
lahf
inc
lods
pop
and
jbe
xchg
xchg
mov
push
pop
sbb
add
ret
xchg
inc
mov
cmp
addr16
and
test
outsl
inc
ret
lcall
xchg
fdivs
inc
sahf
aaa
aam
adc
shl
sbb
popf
xor
shrb
jg
and
cltd
mov
cmpsb
int3
aas
xchg
xchg
inc
adc
jnp
cmpsl
loope
and
add
stc
xchg
out
mov
mov
inc
mov
pop
and
adcl
imul
fldcw
adc
pop
dec
out
ret
add
ds
cmpsl
and
adc
mulb
rorb
test
add
jbe
outsl
sti
dec
push
roll
push
push
xor
and
pusha
or
cmp
adc
loopne
adc
call
xor
nop
sbb
pop
outsl
dec
jmp
or
leave
add
adc
ljmp
and
sbb
mov
mov
shr
adc
pusha
outsb
xor
jle
cmp
pop
clc
popf
push
fcmovb
mov
gs
dec
je
sbb
int
scas
imul
dec
dec
lods
add
test
cmp
aam
int3
sbb
iret
fidivl
loope
lret
loope
ja
jg
pop
sbb
imul
inc
test
imul
add
xchg
arpl
xrelease
call
outsb
jae
sub
mov
or
addb
mov
jl
cmp
cmp
jb
mov
xchg
sbb
lret
sbb
shlb
jmp
lret
rcrb
cmc
mov
sbb
loope
jb
dec
outsl
pusha
fdivs
push
out
outsl
sarb
or
push
jns
push
cltd
sbb
cmp
icebp
les
push
dec
push
movsl
js
gs
shrb
rcrb
adc
es
jmp
xlat
adc
jmp
shl
test
sbb
lret
fbstp
jecxz
icebp
stc
and
add
loope
adc
daa
xchg
sbb
loop
push
sbb
fdivrl
push
cli
movl
dec
xor
xchg
sub
jp
inc
faddp
xchg
test
leave
add
sbb
mov
jne
fdivrs
push
add
sub
inc
call
mov
push
insb
loopne
mov
fistl
mov
sbb
cmp
jmp
movsl
add
mov
ficomps
jae
jge
cwtl
inc
or
loopne
xor
fmuls
sub
ret
lahf
and
mov
xor
push
jo
rclb
jns
int
mov
jbe
sub
mov
aaa
fsubrs
fcmovnu
adc
xchg
and
xorb
xchg
aaa
xchg
or
ret
and
adc
dec
jg
xor
insl
pop
jnp
and
pusha
inc
jbe
or
cld
xor
xor
inc
mov
sub
and
stos
add
iret
rorb
or
cmp
cmc
xchg
sbb
cmp
aad
cli
dec
sahf
daa
sub
shll
negl
sbb
and
sar
add
jno
add
jl
sub
pop
jbe
xchg
gs
jno
lret
ljmp
lods
dec
add
pusha
addl
mov
inc
sahf
ret
sti
cwtl
pop
test
std
ret
ljmp
xchg
hlt
clc
in
icebp
andl
movsl
inc
rcrb
in
and
lods
popa
mov
adcl
sbb
mov
fmul
out
fstpt
push
lods
pop
inc
and
sbb
mov
jle
jle
or
inc
push
pusha
sbb
outsl
jg
jne
push
jae
mov
lcall
ds
sbb
sbb
xchg
and
insb
addl
scas
rcr
adc
insb
cmp
ljmp
mov
dec
shl
xchg
fistpl
sbb
mov
movsl
jns
js
sub
mov
fimull
pop
sbb
repnz
dec
mov
jbe
mov
aaa
cs
sub
shll
in
adc
and
xchg
sbb
pop
sbb
jne
mov
aad
out
in
add
test
add
dec
test
std
mov
mov
push
pop
mov
adc
sbb
test
adc
and
jp
xchg
or
mov
mov
or
jne
push
ret
add
jbe
bound
mov
or
xlat
orl
cltd
insl
leave
jns
mov
adc
sbb
mov
xor
hlt
fwait
divb
adc
and
bswap
and
stos
xor
idiv
jmp
cmp
outsl
cltd
repz
sub
mov
or
lea
loope
ret
shrl
mov
add
xchg
pop
cmp
cmp
push
insb
pop
push
lods
and
push
loopne
shr
aaa
ficoml
repnz
jbe
adc
fstpl
repz
pop
xchg
mov
js
sti
nop
movsl
int3
test
sbb
lret
pushf
shlb
cmp
jg
lret
sbb
es
cmp
sar
cmpsb
push
adc
cmp
loope
out
mov
pop
aad
insl
addb
or
repnz
lret
sahf
out
mov
adc
aam
jb
cmp
sub
push
fnstsw
lock
fmull
xchg
or
int3
int
push
add
sbb
dec
aam
mov
mov
sbb
lock
adc
mul
dec
repz
fwait
and
jns
dec
cmpsl
ss
sbb
xchg
aaa
test
dec
in
mov
sbb
enter
inc
pop
pop
jnp
out
scas
ficomps
xchg
jl
sbb
mov
outsl
mov
int3
cli
xchg
stos
xchg
xchg
dec
dec
imul
shlb
xor
shr
mov
cltd
sbb
fldt
rclb
jb
sbb
jnp
lds
xchg
in
mov
pop
movsl
mov
and
xor
xor
and
daa
dec
adc
and
inc
jno
xchg
pop
push
sarb
push
clc
cmpsl
enter
cmp
punpckhwd
ljmp
incw
adc
xor
bndstx
clc
mov
shlb
subb
inc
sub
rcrb
mov
movsb
jmp
fdivr
inc
into
mov
inc
cwtl
mov
fistpll
scas
or
out
or
add
pusha
out
jb
pop
xlat
xchg
fsubrp
hlt
popa
xchg
inc
repz
nop
bound
cmp
repnz
sbb
inc
inc
cld
mov
jp
sahf
fstps
iret
add
sbb
andl
out
iret
mov
jnp
sbb
push
xor
cmpsb
rcrb
out
sbbb
mov
pop
sbb
xchg
popa
mov
or
sahf
mov
ficomps
push
push
data16
add
outsl
xor
mov
sahf
dec
out
pop
adc
incb
inc
movb
loope
push
bound
inc
jne
dec
adc
mov
rolb
mov
mov
imul
or
data16
cmpb
push
ds
jo,pt
leave
jecxz
pop
sahf
mov
sbb
jno
and
xorb
sub
sbb
outsb
in
and
jns
sub
sbb
add
mov
pop
sbb
mov
int
mulb
and
lock
popf
pop
push
pop
dec
jle
iret
dec
pop
jb
in
mov
negb
inc
push
mov
stc
push
sub
cmp
sbb
clc
sub
es
sbb
push
xchg
or
xor
cmpsb
sub
dec
add
push
or
or
sub
inc
jns
push
insl
lret
adc
test
shl
inc
flds
jbe
hlt
inc
sbb
adc
xchg
fildl
xchg
xor
pop
cwtl
or
in
arpl
cltd
xor
mov
aas
or
fstpt
ds
and
ljmp
or
jp
sub
mov
hlt
sbb
sbbb
in
jne
push
xchg
dec
rorb
pop
sbb
imul
outsb
pop
bound
add
cmpb
cmp
push
push
das
pop
pop
inc
jp
imul
xor
and
cwtl
imul
fwait
cmp
push
jbe
jo
pop
imulb
repnz
inc
mov
stos
fisttpll
addr16
sbbl
add
dec
sbb
movsb
or
jo
daa
xchg
dec
bound
dec
loop
sbb
or
add
clc
je
call
lcall
xchg
mov
add
sahf
adc
sbb
imul
xchg
xor
mov
add
sbb
adc
stos
sbb
hlt
stc
sbb
xchg
negb
lret
jl
popf
mov
pusha
shll
hlt
faddl
add
mov
lods
or
aas
xchg
sub
repnz
pop
sbb
scas
jns
stos
mov
imul
loope
fsubrl
orl
xchg
cli
add
movb
sbb
clc
test
stos
jnp
xchg
shrb
mov
pop
xchg
movsb
aam
pop
pop
sbbl
pop
cmpsb
jae
imul
adc
push
mov
test
or
rcll
dec
dec
sbb
push
out
mov
stc
jg
cs
mov
fisttpl
test
sbb
and
mov
aad
push
repz
stos
es
xchg
xlat
pop
add
or
adcl
push
and
mov
dec
and
add
or
sbb
imul
push
sbb
mov
cmp
lods
push
iret
clc
xlat
mov
push
divb
mull
mov
sbb
xchg
jae
jns
dec
rolb
sub
into
add
dec
xchg
fistl
xlat
addr16
adc
lea
loope
add
adc
lcall
loop
imul
loop
cmpsl
jnp
pop
push
nop
push
jecxz
pop
imul
scas
mov
jae
and
cmp
ja
add
cmp
movsb
int
sbb
cld
outsb
out
faddl
add
adcl
fisubl
jecxz
out
hlt
outsl
jns
scas
mov
pop
imul
clc
iret
mov
les
cmp
mov
iret
sbb
ss
inc
add
test
jmp
ds
sbb
fisttpll
movsb
decl
shl
sbb
pop
cmc
add
mov
test
aaa
fs
dec
pushf
jle
sbb
sub
xchg
fstpt
loop
and
js
sbb
sub
jge
dec
push
sahf
lret
ds
jo
adc
xor
repz
mov
jmp
in
push
dec
xchg
mov
ds
repz
sub
or
loopne
rcll
sar
mov
mov
out
sti
sbb
mov
and
mov
out
mov
test
out
jno
push
jg
imul
jo
mov
sbb
xor
mov
sbb
jmp
push
pop
sbb
cwtl
test
divb
xchg
mov
sub
ja
sbb
in
and
fcom
pushf
gs
repnz
insl
test
xlat
imul
cwtl
xlat
lds
jbe
xchg
jl
lahf
fnstenv
ret
sbb
sbb
loopne
sbbb
repnz
sbb
pop
repz
mov
jp
mov
mov
push
test
gs
popf
mov
lcall
xchg
dec
cli
into
fwait
std
dec
mov
sar
adcb
enter
xchg
fcompl
cmp
or
nop
dec
jge
mov
stos
jmp
dec
xchg
arpl
adc
jge
rcr
lds
pushl
hlt
sbb
jl
dec
sub
xchg
pop
cmc
je
ror
fstpl
xlat
cmp
sbb
imul
dec
outsl
cmp
nop
lods
xchg
mov
pop
push
push
cli
xchg
out
jecxz
push
or
insl
sahf
push
inc
xor
add
sub
negl
sub
aad
pop
sub
sbb
sahf
insl
pop
mov
les
mov
cmp
sub
leave
js
adc
jno,pt
mov
loopne
fisubs
ljmp
cld
rcrl
ret
dec
sbb
shrl
xchg
xchg
pop
adc
jne
sbb
and
addr16
arpl
jno
test
in
test
aam
adc
push
push
lods
cmp
sbb
jae
pop
dec
or
pop
jno
adc
out
sub
imul
mov
imul
std
cmpsb
and
lods
jno
mov
pop
nop
sbb
push
mov
dec
or
push
pop
das
push
arpl
test
sti
dec
sbb
mov
mov
add
cmp
in
mov
shll
vpunpckhwd
fildll
xchg
pop
scas
push
cltd
div
jno
lods
xor
sbb
add
mov
mov
sbb
dec
jne
mov
sbb
pushf
mov
rclb
ja
sbb
mov
sbb
inc
dec
xchg
ja
xchg
sbbl
adc
add
and
inc
adc
test
mov
mov
adc
mov
int
mov
iret
inc
and
adc
jg
xchg
aad
fsts
or
je
sbb
push
sbb
in
pop
adc
push
imul
or
leave
xorb
cmp
pop
lods
aam
cltd
ficompl
loope
xchg
inc
xchg
jo
xchg
iret
xchg
push
pop
shl
out
cld
lret
cmp
pop
aas
das
push
xchg
mov
jmp
dec
inc
fdivr
cmp
mov
sbb
pusha
mov
or
xchg
xchg
mov
int3
pop
pop
mov
outsb
jbe
pop
sahf
mov
inc
fstpl
sti
and
pop
xchg
xor
push
int3
stc
push
imul
inc
sbb
jns
rcrl
inc
inc
or
repnz
andl
fwait
sbb
std
cmp
in
mov
adc
inc
lahf
dec
push
and
test
shl
jnp
xchg
aas
push
jl
mov
cmp
pop
jge
test
jecxz
mov
or
pop
mull
push
mov
xchg
outsl
pushf
imul
lods
in
pop
fildl
and
repnz
lock
xchg
fcmovu
jge
in
xlat
hlt
cmp
js
mov
jecxz
add
lods
rolb
leave
or
push
repnz
rorl
aam
dec
jg
sbb
mov
jl
daa
lods
lret
dec
pop
mov
pop
push
adc
cmc
out
mov
movsl
sbb
lcall
inc
aad
push
insb
sbb
dec
in
nop
popa
hlt
lret
pushf
sbb
inc
cmp
sbb
fcoml
pop
pop
mov
mov
test
mov
fdivl
mov
sbb
mov
adc
int
sub
mov
aad
sub
dec
sti
xchg
xchg
and
jge
or
mov
sub
icebp
sbb
pop
jle
dec
hlt
mov
cltd
push
in
sbb
add
mov
add
scas
xchg
cwtl
rcrb
mov
xchg
ss
sti
mov
mov
xor
sbb
in
inc
ficoms
loopne
loopne
rcrl
int3
xchg
sub
xchg
inc
inc
rcl
std
mov
and
cmp
lcall
jg
test
sahf
jl
inc
xchg
mov
pop
jmp
xchg
mov
incl
add
sub
inc
push
inc
repz
outsb
pop
repz
push
push
inc
repz
movsb
lcall
sti
add
push
sarb
jmp
negb
jmp
lcall
or
xor
inc
xlat
mov
je
in
pop
xchg
and
les
lret
filds
jp
xor
cmpsb
neg
xchg
inc
negl
popa
mov
lods
int
pusha
shl
xchg
cmp
inc
sahf
push
mov
sbb
mov
jp
push
and
ret
movsl
in
gs
std
sbb
sub
jg
movsl
mov
or
ret
jbe
bound
and
enter
mov
shl
mov
inc
jmp
jge
or
xchg
cmpsl
cltd
add
adc
sub
rclb
mov
mov
pop
lock
xchg
xor
and
add
sbb
aad
addl
loopne
mov
sub
rclb
add
pop
jge
sahf
inc
mov
add
sbb
lahf
scas
mov
and
sarb
dec
pop
iret
xchg
xor
repz
rorb
rolb
icebp
add
mov
pushf
cmp
lods
pop
and
xchg
shlb
xlat
sbb
ret
shl
arpl
pushf
ficomps
jns
les
mov
in
outsb
ret
xor
jnp
aad
ss
mov
push
sbb
lods
ljmp
data16
out
add
push
xor
jle
pop
popf
loopne
mov
cmpsl
xchg
leave
pop
lret
cli
lea
dec
mov
fs
xchg
les
gs
inc
scas
divb
dec
sahf
jge
push
aas
or
xchg
push
add
cmp
shr
enter
jp
and
scas
flds
mov
stos
and
dec
sub
dec
mov
or
cmp
fidivs
cmp
xor
lret
shrl
lret
push
xchg
shlb
mov
adc
or
std
arpl
fstl
xchg
stos
sbb
stos
enter
xor
icebp
add
outsb
push
lcall
clc
mov
jb
inc
sahf
icebp
ja
and
fsts
sbb
sub
sbb
xchg
jae
rolb
or
popa
push
mov
mov
dec
in
mov
inc
mov
xor
adc
nop
test
pop
add
push
rcrb
push
std
dec
jmp
data16
es
pop
test
sti
gs
in
sub
cmp
not
jnp
xor
or
sbb
popf
mov
lret
push
or
jnp
das
sub
inc
sbbl
mov
pop
lret
or
sbb
mov
mov
pop
sbb
cwtl
mov
sub
mov
neg
ret
jle
xchg
or
and
es
mov
fistpl
and
cmpsb
ljmp
lret
insl
in
pop
int3
jbe
adcb
or
push
es
xchg
adc
sti
mov
pop
imul
or
inc
inc
jns
les
jle
push
fildl
rolb
dec
int
in
pop
cmc
xchg
inc
pop
mov
xor
jnp
movsl
push
push
out
fst
xchg
mov
sbb
pop
test
daa
insl
cltd
shlb
sub
sbb
in
arpl
xchg
in
push
int3
loop
dec
subl
push
rcll
mov
sbb
mov
dec
xchg
out
pushf
sub
ret
faddp
cwtl
xchg
cmc
lods
dec
nop
pusha
xor
cs
fsubl
pop
add
imul
jb
repnz
cwtl
sbb
rolb
push
jmp
sbb
jbe
xor
fisttpll
push
push
and
outsb
sbb
bound
rolb
out
imul
or
je
pop
or
popa
or
adc
lahf
lret
cli
inc
sub
jnp
pop
out
fwait
push
lock
mov
cli
add
test
add
lods
mov
fldl
lods
pop
arpl
pop
xchg
cmp
adc
fwait
outsb
mov
xchg
xlat
push
jne
in
ja
ficoms
sahf
dec
enter
mov
xchg
dec
mov
sub
test
mov
cmpsl
sub
rcrb
lea
lea
stos
pop
jnp
sub
shlb
sarb
pop
mov
mov
test
sbb
adc
mov
loop
inc
sbb
and
divl
fldenv
mov
and
push
cmpsl
xchg
adc
lods
rolb
push
lea
cmp
add
frstor
jg
cmc
ret
adc
adc
jecxz
adcl
insl
icebp
or
sbb
pushf
jl
jl
lahf
dec
aas
stos
inc
sahf
pop
and
vaddss
push
or
shll
pop
pop
add
push
sbbl
sbb
out
testl
nopl
lret
das
in
shr
rol
call
or
xlat
mov
aaa
sub
pushf
es
out
and
clc
mov
lahf
cmpsl
mov
sbb
enter
and
pop
sti
ret
pop
inc
push
js
shl
roll
push
push
popa
rorb
lret
or
jg
mov
mov
mov
jp
mov
int
push
rorb
test
mov
js
js
jns
mov
call
je
popf
mov
cmp
insl
dec
add
negl
adc
adc
jbe
sbb
lcall
jp
jge
sbb
lret
imulb
cmpsb
pop
mov
int
mov
hlt
insl
jae
stos
sbb
pop
popf
icebp
mov
pop
neg
sbb
ss
fs
cmp
test
cmp
loop
cmp
pop
movsb
mov
lods
lret
and
sbb
pop
xchg
sbb
shrb
cmpsl
inc
insl
sbb
mov
notl
or
test
jmp
sub
xchg
dec
enter
dec
jecxz
mov
les
mov
aam
jns
mov
cmp
sbb
ja
push
lahf
xor
jg
add
lods
das
inc
loopne
int
ret
andb
and
push
mov
jnp
mov
mulb
mov
push
aas
xchg
int
jmp
fistpl
xor
mov
xchg
dec
lret
xchg
or
pop
out
jle
push
jb
fiaddl
xchg
addb
jne
pop
repz
out
and
add
xor
rcrb
sti
add
pop
and
dec
jge
mov
nop
push
add
mov
out
push
outsl
mov
pop
xchg
mov
js
jns
adc
ss
cli
rclb
xor
sbb
idivb
cmp
lock
sbb
lea
sarb
pop
cmc
stc
ds
fsts
jle
enter
lret
push
jno
push
pop
or
xchg
push
sbb
aad
jmp
or
add
adc
int3
enter
outsb
mov
stc
in
stc
and
fwait
lock
outsl
daa
push
jno
sbb
ds
dec
les
sahf
jmp
loopne
mov
adc
rcrl
xor
sbb
scas
xor
fstpt
inc
jmp
decl
jo
adc
aam
sti
jg
movsl
js
jle
adc
movsb
sar
sbb
and
cmp
push
push
mov
and
jo
imul
adc
insl
pop
mov
mov
dec
int3
pop
dec
in
push
cmpsl
xchg
les
mov
inc
inc
jl
push
mov
fwait
mov
add
pop
sahf
mov
test
iret
mov
clc
xchg
mov
lock
lea
out
jle
pop
push
sbb
rcll
inc
insb
add
outsb
sbb
xchg
test
xchg
cli
fdivrs
cmp
cli
lahf
adcb
cld
hlt
ror
leave
jbe
mov
and
cmpsl
jmp
repz
mov
lea
ljmp
mov
mov
rol
shlb
push
scas
fimuls
add
rcl
shrl
int
testb
jo
xchg
movsl
fimull
mov
enter
lods
xlat
hlt
and
mov
mov
and
pop
int
in
shl
mov
and
sub
imul
dec
pop
in
or
stos
test
xchg
adc
ss
aam
insb
mov
adc
pop
sub
sbb
push
sub
jo
inc
lahf
sarb
xchg
bound
lcall
fwait
inc
lods
imul
or
sbb
mov
in
rolb
xor
aaa
or
push
sbb
sbb
jb
pop
sahf
test
mov
int
in
in
aam
imul
test
pop
mov
dec
and
fdivs
ret
sbb
stc
sbb
lret
lock
mov
cmp
ret
fistpl
xor
cmpsb
shlb
fmul
xchg
jns
negb
xor
sbb
in
fcoms
pop
sbb
add
enter
das
int
call
out
addb
jecxz
or
cmp
mov
xor
test
sbb
ss
xor
cmp
mov
xchg
mov
cmpsl
ret
test
shrb
push
js
loop,pn
pop
dec
cld
rolb
mov
mov
jg
adc
and
jg
sbb
ror
lds
mov
cwtl
mov
sbb
rcrb
in
mov
jecxz
add
outsl
ret
imul
add
popa
mov
imul
add
repz
pushf
pop
iret
sbb
inc
and
mov
dec
or
cmp
aam
cmpsl
lock
test
outsl
aam
popf
popf
mov
inc
stos
inc
lock
movsl
sbb
xchg
div
and
nop
insl
mov
sbb
push
xor
std
fistpll
add
inc
lahf
sub
and
or
imul
rclb
mov
jo
insl
arpl
mov
inc
outsb
aad
clc
rclb
pop
daa
ja
push
mov
mov
pop
orb
iret
xor
jb
adc
dec
call
mov
cmp
or
stc
pop
aad
pushf
sub
pop
mov
inc
je
fwait
cltd
jmp
mov
enter
jmp
popa
mov
gs
dec
dec
mov
or
addr16
ljmp
dec
xor
out
adc
sub
sub
shr
mov
push
xchg
xor
mov
leave
pop
lods
pop
inc
test
mov
popf
push
loop
out
pushf
leave
das
sbb
out
mov
int3
cmpsb
jecxz,pn
inc
inc
inc
jo
pop
dec
sbb
leave
mov
inc
push
fwait
shl
sbb
jle
scas
pop
mov
xchg
mov
lock
sahf
xchg
pusha
add
and
call
cltd
push
add
mov
xchg
push
or
jb
repz
and
pop
in
jno
out
inc
dec
aam
insb
int
inc
xor
inc
addr16
pop
jo
movsb
hlt
xchg
push
les
xor
jmp
fiaddl
rol
sbb
outsl
push
adc
mov
fildl
push
test
mov
xchg
jnp
test
xchg
clc
movl
dec
add
dec
xchg
push
sahf
int
std
setno
in
movsl
xchg
ss
sbb
inc
jns
rclb
inc
adcb
sub
mov
fidivl
cmpb
mov
pop
mov
and
push
rclb
testb
test
mov
dec
inc
mov
adc
push
inc
adc
dec
shrl
mov
jns
mov
sbb
mov
aas
mov
dec
loopne
fisttps
jge
push
mov
push
lods
loopne
inc
popf
dec
mov
sub
aas
mov
pushf
aas
sbb
in
jae
rolb
out
pop
cmp
mov
rcrl
in
cmpsb
pop
orl
dec
in
les
xchg
sbb
inc
add
fwait
bound
loopne
jb
fwait
mov
loopne
inc
mov
dec
xchg
or
sahf
fildll
mov
jg
pop
lods
aaa
push
out
movsb
pop
sahf
ja
outsl
ret
pusha
lret
lret
mov
test
mov
rolb
lcall
inc
and
mov
inc
inc
pop
lock
test
sbb
test
pop
rcrb
inc
shll
push
addr16
lret
mov
daa
ja
pop
std
jge
cmpsb
sbb
and
fwait
adc
dec
rol
push
jecxz
sbb
inc
cld
push
mov
rcrl
leave
add
in
push
and
mov
pop
ret
test
sahf
out
pushf
fwait
call
adc
jmp
xor
andl
push
push
cwtl
add
inc
movsl
sbb
push
imul
into
shll
pop
mov
fwait
test
sub
pop
push
xlat
js
ds
or
mov
rcrb
mov
sahf
lods
sbb
push
and
ja
repz
lret
xor
std
pop
jp
sbb
ss
aad
popa
ror
mov
push
arpl
sarl
inc
sbb
push
lock
pop
out
xor
jmp
sbb
aaa
les
jmp
insb
xor
add
sti
sbb
mov
jecxz
sbb
and
in
inc
and
loope
xchg
mov
inc
mov
sbb
hlt
clc
in
jp
hlt
xchg
or
mov
xchg
mov
push
xor
in
sahf
add
xchg
xchg
or
fnstsw
sbb
push
jmp
fistps
scas
sbb
dec
add
mov
cmpsl
test
bound
nop
sub
mov
inc
adc
aas
xchg
adc
adc
jl
lcall
sahf
int
dec
adc
into
dec
dec
sbb
pop
out
loope
adc
repz
xchg
into
bound
dec
fiaddl
aaa
sbb
aaa
mov
in
mov
fs
sti
xchg
rolb
cvtdq2ps
pop
in
jg
loope
mov
mov
loope
jecxz
adcl
sbb
mov
push
push
sarb
leave
lahf
shll
xchg
pop
jge
or
mov
jecxz
cmp
testb
sbb
jnp
gs
dec
sbb
lods
push
pop
xor
mov
cs
sahf
jne
cltd
sbbl
jge
lahf
pusha
push
mov
mov
aam
aad
fdiv
sbb
push
inc
lock
dec
sbb
dec
ret
aam
ds
push
imul
xchg
repnz
or
ret
inc
in
arpl
push
dec
pop
jnp
rcrb
push
jmp
sbb
or
or
mov
das
loop
jle
adc
xlat
stos
lret
ror
pop
icebp
int3
in
outsl
jl
fwait
mov
push
jle
popf
push
fldt
xor
inc
test
inc
ficompl
dec
jbe
scas
push
outsb
dec
fiadds
dec
and
rcrl
mov
in
inc
mov
adc
cmp
fcom
mov
cmp
sbb
arpl
xor
dec
insb
pop
sbb
jle
fnstcw
lods
push
lods
add
sub
js
cmp
mov
ficompl
daa
xchg
dec
xchg
sub
push
push
sahf
pushf
gs
call
mov
mov
xchg
gs
xor
xor
outsb
jge
mov
test
sub
mov
cmp
and
xchg
adc
in
out
loopne
xchg
pop
dec
subl
outsb
sbb
jbe
xor
pop
sahf
xor
lods
sbb
lret
adc
mov
lds
jp
mov
sbb
push
push
fwait
adc
rcl
mov
cmp
iret
mov
sbb
mov
sahf
mov
push
push
test
mov
adc
lahf
add
jecxz
out
dec
enter
pop
jo
xchg
aaa
xorps
rcrl
and
and
mov
ret
push
arpl
js
mov
roll
xchg
dec
sahf
in
les
sbb
int3
mov
add
ss
sbb
imul
fdivl
cld
xchg
push
inc
lock
dec
sbb
cltd
inc
xor
fs
jo
hlt
aaa
test
sbb
fbld
pop
and
movl
cs
sbb
ds
rcr
cltd
aas
fwait
or
sub
imul
lcall
popf
shll
shll
sbb
ret
fimuls
sti
arpl
push
lods
xchg
pop
sbb
xor
dec
shlb
in
mov
das
xchg
push
aaa
out
pop
test
push
insb
mov
pop
pop
push
sbb
insl
cmp
mov
sarb
jecxz
fcomip
pop
or
mov
popf
int3
xchg
cmp
xchg
test
fildl
inc
jg
divb
pop
pop
adc
or
addl
clc
pop
arpl
xor
fs
sbb
lahf
mov
push
sahf
in
imul
das
out
shll
je
fs
lods
pusha
xor
movsb
outsb
sbb
jle
xor
stc
xchg
shlb
xor
push
adc
adc
imul
nop
cwtl
cmpsb
xchg
mov
loope
cmp
add
rcr
mov
pop
sub
inc
pushf
xchg
cmp
jl
xchg
push
out
jle
or
movsl
pop
mov
cmp
jns
jmp
or
mov
out
sbb
push
sbb
test
xchg
and
pop
xchg
and
cmc
int
xor
push
es
inc
mov
mov
aaa
push
fisubl
stc
nop
pop
ss
push
xor
sub
sbb
and
int3
mov
fildll
mov
clc
or
loopw
mov
out
dec
call
lea
loope
cmp
mov
ja
int3
xchg
fsts
mull
mov
xchg
mov
addr16
mov
sbbl
shlb
push
jp
sbb
and
popf
mov
xchg
fldt
popa
jp
lea
xor
fdivs
pop
inc
in
xchg
fcmovnb
push
mov
fcomip
lahf
push
mov
cmp
or
iret
pop
dec
pop
sub
popa
lret
movsl
sahf
fcompl
lds
pop
hlt
mov
xchg
jno
mov
insb
ret
cmp
mov
xchg
in
mov
test
fildll
pop
push
pop
add
or
mov
leave
sbb
inc
sub
xchg
jne
pop
lods
addr16
add
push
or
xor
aam
xchg
push
or
setl
leave
push
imul
aad
mov
or
das
outsl
mov
cmp
or
and
pop
cld
jno
mov
scas
adc
adc
pop
sbbb
or
pop
ror
jge
mov
addr16
jge
push
cld
dec
sub
movsl
xchg
fsts
pop
sbb
sub
sub
mov
out
sahf
lret
cmp
ja
pop
enter
xor
xor
mov
xchg
leave
int
jno
dec
mov
mov
outsb
add
sbb
pop
mov
and
gs
xor
in
popa
sbb
clc
sub
enter
fistpll
popa
push
sahf
xchg
in
sub
mov
xchg
insl
xchg
cltd
sysret
jb
sahf
mov
fwait
mov
pop
jae
pop
dec
xchg
popf
mov
xchg
jg
xchg
test
sub
data16
cmpsb
xor
es
outsb
adc
sub
mov
frstor
pop
data16
jp
push
jo
pop
fbstp
and
or
add
ds
sbb
and
xchg
aam
xor
jp
inc
fistl
cli
adc
imul
dec
shl
and
iret
pop
jns
lea
mov
imul
ret
push
aas
icebp
sbb
outsl
clc
ss
pop
dec
lods
shll
and
sbb
jge
mov
rclb
sub
pop
mov
loop
mov
xchg
das
hlt
lea
xchg
mov
cmpb
pop
or
movsb
loopne
xchg
punpckhdq
imul
mov
or
jno
xlat
xchg
fistl
movsb
jl
or
inc
adc
adc
or
outsl
cmpsl
pop
pushf
sbb
pop
loope
rclb
call
xchg
mov
rorb
push
fdivs
pmulhw
call
adc
lea
pop
out
adc
mov
adc
hlt
xchg
and
or
mov
push
ret
scas
jmp
imul
adc
in
cmp
xchg
int
pop
mov
subb
insl
sub
and
adc
jbe
push
or
leave
mov
xchg
pop
movsb
nop
xchg
movsb
jecxz
test
mov
push
jns
imul
and
nop
dec
test
sub
cmp
push
cltd
xor
rolb
push
mov
jo
mov
adc
adc
ss
push
pop
mov
out
jns
sbb
imul
pusha
test
in
push
sbb
jo
in
mov
rol
jg
cmp
adc
pcmpeqb
stc
cmpsb
pop
or
or
js
repz
insb
cmp
sahf
sub
sub
inc
ljmp
mov
xlat
idivb
in
in
fists
les
xor
roll
sbb
inc
sbb
rcrl
movsb
push
add
mov
xchg
rorl
aas
scas
push
dec
in
pop
sub
stos
ss
out
jb
dec
call
test
push
call
insl
dec
jmp
scas
ror
test
mov
sbb
push
pop
subl
inc
sahf
mov
test
cmp
data16
xor
cs
loop
sub
sbb
mov
or
sbb
pop
add
add
xchg
bound
xor
std
add
and
loop
mov
sbb
ret
call
xchg
ret
shlb
test
dec
pop
cmp
lahf
rcrl
or
inc
xchg
jnp
lea
inc
add
dec
sbb
sbb
dec
loop
adc
outsl
lret
in
arpl
pop
sbb
mov
cmpsl
push
sahf
iret
xor
subl
les
or
jle
notb
dec
cmpsb
imul
sbbl
scas
test
hlt
push
setno
dec
xchg
mov
sbb
addb
fnsave
push
cmp
add
lret
cwtl
pop
and
push
call
stc
add
fiaddl
ror
jbe
hlt
cmp
sbb
jne
or
rolb
mov
mov
fsubrl
fcmovbe
mov
call
and
adc
stc
rclb
mov
xlat
rcrb
ljmp
movsl
mov
nop
pop
es
pop
mov
mov
sbb
sub
shl
push
lock
adc
mov
adc
mov
neg
int
adc
jecxz
fidivs
call
adc
dec
mov
rcl
push
jno
pop
and
sahf
test
mov
push
add
dec
adc
xchg
mov
pushf
lea
shll
test
lret
pop
mov
test
repnz
and
mov
xchg
mov
in
mov
sbb
clc
adc
call
test
sar
adc
sub
shl
fwait
mov
pop
cmpsb
and
sbb
loope
sbb
stc
sub
lahf
xchg
cmp
aas
lcall
mov
inc
lcall
sub
bnd
hlt
adc
fildl
push
shlb
mov
sbb
mov
push
or
sahf
inc
adc
jecxz
sbb
mov
nop
and
icebp
shl
cmp
int
mov
xchg
sbb
sbbb
xchg
pop
adc
arpl
loope
sub
cld
mov
push
iret
cmpsb
shlb
mov
mov
ficompl
pop
sahf
fisubl
mov
sbb
aas
into
xchg
jecxz
add
mov
ja
arpl
adc
dec
pop
xchg
js
pop
imul
push
lods
aas
sbb
shll
xchg
out
mov
loop
sbb
sbb
arpl
mov
rcl
pop
lods
mov
mov
aaa
leave
mov
sahf
jo
and
xor
xchg
inc
mov
shll
dec
mov
loope
insb
and
mov
pop
push
xchg
and
rcr
enter
push
js
xchg
icebp
mov
add
add
mov
cmp
push
and
and
movsl
lahf
cmp
xor
pop
mov
in
sahf
inc
mov
ds
dec
ror
sub
add
jnp
mov
movsl
xchg
fdivrl
add
sbb
cwtl
pop
push
imul
movsb
into
pop
sahf
dec
cli
xor
je
lock
and
jge
xchg
loope
test
mov
popa
pop
and
push
out
out
out
xchg
dec
lret
jmp
mov
cmp
movsl
mov
out
sbb
sub
or
dec
pop
clc
xor
add
push
jg
sbb
cmpsb
ret
add
movsb
imul
cs
cmpb
jno
movsl
push
repz
sbb
mov
sub
mov
xor
jge
sbb
lret
clc
xlat
pop
sti
fcoml
lahf
ljmp
aas
test
cmp
jp
inc
rcrb
pop
lret
cltd
jno
sub
cli
lea
aaa
pusha
rorb
in
or
push
push
sbb
jo
xchg
jl
xchg
aas
push
rcrl
xchg
cmpsl
xchg
shl
sbb
mov
sahf
idivb
and
xchg
jecxz
repnz
mov
aam
lds
dec
in
enter
sbb
dec
mov
sbb
mov
sti
imul
mov
lods
cmp
rcll
jle
pop
xor
cmp
cmp
popf
or
or
inc
and
sahf
xlat
cli
xchg
jns
xchg
xor
movsb
mov
adc
shrl
pusha
jne
fs
mov
pop
cli
add
sub
mov
xchg
sub
cli
stos
and
dec
or
rcrl
iret
push
mov
nop
rolb
xchg
adc
mov
jl
mov
jmp
cmp
in
inc
ljmp
add
push
cmp
xchg
out
inc
outsl
inc
or
push
mov
sub
inc
sbb
dec
icebp
bound
sahf
fwait
pop
inc
xor
push
cmp
or
jmp
iret
xchg
sub
outsl
push
pop
jae
xor
insl
inc
sbb
decl
and
xor
int
mov
fldt
pop
pop
jle
shl
out
dec
addr16
xchg
mov
negl
inc
arpl
cld
adc
lcall
into
rcrb
jno
inc
sbb
fadd
sub
xchg
mov
jb
mov
sbb
jnp
nop
enter
outsl
cmp
xor
sub
adc
mov
imul
push
scas
nop
cld
add
jbe
jnp
pop
push
dec
xor
xlat
dec
andb
cmp
adc
inc
mov
ja
push
lcall
pop
jns
push
das
rcrl
cs
insl
insl
movsl
sbb
fnstenv
mov
rorl
sbb
or
outsb
xchg
mov
pop
pop
dec
test
push
xchg
jno
test
movsl
xor
cmc
mov
sbb
sbb
mov
inc
mov
pop
adc
or
or
pop
xlat
inc
in
insb
add
or
mov
pop
mov
jns
jns
mov
push
adc
mov
mov
imul
adc
fs
mov
push
sbb
int3
jmp
push
jecxz
cmpsb
push
sbb
fs
xchg
rcl
loope,pn
rorb
jae
cli
xchg
inc
jle
and
loopne
sahf
addl
jecxz
fstps
nop
mov
or
sbb
outsl
jne
jle
push
pop
and
jne
je
push
add
aas
dec
dec
fstpt
js
add
sbb
pop
repz
sbb
out
add
nop
pop
sub
xor
or
and
xor
sbb
out
sahf
dec
sub
xchg
jnp
cmp
add
popa
or
mov
dec
stos
cli
rcrb
ja
sbb
pop
mov
and
rcrl
loop
and
cmp
mov
sbb
repz
sbb
jg
xor
imul
shlb
cltd
insl
jae
mov
push
jecxz
pop
dec
ja
sbb
ret
push
ffree
mov
loop
data16
fst
xor
jno
jle
fnstcw
pop
xchg
add
insl
ficompl
fwait
sbb
mov
jl
jns
xlat
iret
push
int3
sbb
push
stc
aad
add
movsb
inc
out
andb
inc
push
dec
sbb
inc
jecxz
aad
adc
aam
xchg
div
push
lret
sbb
dec
xchg
aaa
movl
push
rcrl
inc
dec
xchg
push
add
cmp
mov
es
je
push
add
call
ljmp
or
dec
in
xchg
sti
inc
out
cltd
lods
sbb
sbb
scas
in
enter
movsl
push
mov
pop
rcrb
pop
dec
pop
mov
scas
xlat
iret
int
pop
rcrl
aad
insb
cmp
xchg
cmp
arpl
push
in
sbb
das
mov
inc
fwait
aam
je
adc
out
sahf
push
push
push
repnz
test
xchg
mov
mov
adc
ret
push
dec
xchg
jne
out
push
int3
pusha
push
push
test
mov
out
pop
aas
shll
mov
pushf
add
mov
xor
jo
aaa
cmp
pop
fidivl
add
sbb
js
xchg
sar
inc
pcmpgtb
iret
jb
sub
data16
xchg
mulb
push
jb
imul
inc
xlat
dec
cmp
push
xchg
push
mov
les
and
push
jmp
ret
cmpsl
mov
lods
cwtl
xchg
dec
cmc
push
in
and
test
dec
cmp
hlt
lods
shrb
jno
fimull
inc
inc
sbb
pop
cltd
dec
cmpl
jge
cmp
je
sbb
add
xor
dec
shrb
or
loop
xor
add
std
iret
xorb
pop
fldl
add
cli
sbb
fcmovnbe
addr16
mov
int3
fidivl
rolb
sbb
pop
add
adc
pop
mov
inc
stos
fmull
sbb
rorl
repz
and
inc
jl
or
gs
repz
rcl
cwtl
and
scas
inc
xchg
sbb
xlat
mov
and
mov
xchg
sahf
mov
icebp
inc
jo
popa
stos
lret
dec
cwtl
adc
adc
movsbl
shl
fimuls
inc
or
nop
pop
stc
jb
mov
lea
fstps
xor
mov
cmp
jmp
dec
mov
push
icebp
mov
cmp
jae
jp
repnz
pop
sbb
inc
adc
mov
xchg
lock
inc
inc
sbb
cmpsl
mov
fisubl
inc
lea
sbb
mov
divl
aad
cld
aam
mov
xor
rorb
mov
sbb
aad
sbb
mov
aaa
xchg
mov
lea
movsb
call
push
pop
mov
pop
jbe
xchg
ja
mov
rcr
rolb
adc
imul
scas
movsb
adc
and
sahf
and
jns
popa
test
push
inc
cmc
inc
pushf
shlb
outsb
push
out
adc
lret
es
mov
push
int
adc
jns
dec
rcrb
pop
rclb
jnp
insb
sbb
mov
lods
fistl
imul
clc
aas
inc
lret
push
and
rclb
into
daa
aam
sbb
mov
fsts
ret
jp
pushf
sahf
int
pop
pop
out
xor
cmp
cmc
inc
mov
sarl
andl
aam
cltd
mov
mov
push
int3
xchg
imul
fsubs
and
movsl
out
rclb
aaa
je
stos
push
shlb
test
hlt
fwait
jp
fwait
lret
sar
ja
mov
pop
imul
popa
mov
mov
mov
cmc
push
and
imul
jg
dec
push
jne
mov
jnp
sbb
cmp
int
lods
or
rorb
mov
lcall
push
daa
adc
xchg
mov
adc
mov
call
and
stos
in
push
cmc
add
dec
rcrb
dec
inc
adc
adc
push
ret
cmp
out
pop
dec
xchg
sbb
cmp
xchg
clc
sbb
push
sub
les
stc
or
and
inc
incl
subb
sbb
pushf
std
in
iret
rclb
cmpsb
imul
or
stos
push
popa
lods
sbb
es
pop
lods
add
test
sbb
stos
add
cwtl
fdivrs
shrb
repz
jne
push
in
dec
in
fmuls
xchg
push
fstpt
mov
shl
pop
jle
sub
xlat
leave
pop
push
fstl
add
and
jnp
pop
sahf
popl
int3
and
lock
insl
pop
fcoml
add
cmp
fs
xor
out
sbb
push
dec
sbb
xchg
jg
sub
mov
add
popf
in
and
ret
in
push
ja
push
fiadds
sub
cs
pop
push
xor
jno
dec
pop
cld
repnz
mov
sbb
sti
ss
int
push
imul
jnp
sahf
add
pop
adc
xchg
sbb
in
lds
rcr
jno
stc
push
pop
push
addr16
js,pn
shrb
mov
ljmp
or
ret
lcall
push
mov
xchg
repnz
pop
sbb
sbb
out
out
inc
push
push
xchg
mov
movsl
dec
xor
popf
dec
ja
lea
dec
pop
es
add
xchg
enter
lods
sbb
adc
mov
fwait
sub
jl
test
inc
xor
xchg
inc
mov
push
jg
enter
sub
aaa
mov
aad
inc
push
xor
lret
mov
dec
jo
insl
push
sbb
xlat
into
xchg
mov
push
jb
xchg
hlt
nop
negl
xchg
mov
rorl
push
shl
push
rorb
pop
mov
insl
push
fsubs
sbb
inc
jecxz
jge
rsqrtps
mov
mov
and
lcall
rorl
hlt
mov
xchg
xchg
adc
push
inc
js
sub
xchg
cmp
fwait
cltd
xlat
jge
jb
test
sbb
sbb
test
push
push
sbb
aad
sbb
sbb
pop
and
mov
int
cmp
dec
mov
push
sahf
enter
ja
out
push
or
adc
sbb
mull
test
fs
adc
pop
fwait
mov
loopne
push
sub
loop
shrl
cmp
call
adc
daa
cmp
out
mov
dec
add
fsubl
xor
xor
pop
xor
xlat
inc
sbb
sub
adc
pusha
aam
mov
cmpsb
or
sbb
mov
dec
neg
pop
sahf
or
sbb
push
lods
and
push
cmp
xorb
mov
xor
or
shrb
movsb
inc
rcrl
push
aam
push
repnz
cs
sahf
and
rcl
mul
adc
mov
cmc
fwait
mov
cmpsl
iret
add
stc
loope
sbb
cld
sbb
in
nop
sarb
lahf
xor
add
or
xchg
adc
fcmovnbe
jl
pop
xor
out
and
mov
rolb
dec
aaa
es
jbe
mov
mov
jg
aam
cmc
and
jns
xchg
or
sahf
sub
fwait
dec
sbb
mov
jno
lds
les
cmp
mov
cmpsl
sub
lret
sbb
push
fstpt
xchg
mov
adc
sub
std
or
fisubs
mov
int
xor
jmp
push
sbb
inc
sbb
js
adc
fcomps
mov
ret
gs
add
mov
mov
aam
inc
sbb
imul
lods
dec
sahf
es
fwait
jmp
adc
mov
add
cwtl
outsb
fmulp
xor
shlb
fistpll
xchg
jge
repz
rcll
jle
in
movsb
xor
sbb
xchg
push
out
fildll
cltd
and
jne
jns
sbb
dec
fisubrs
add
push
scas
and
sub
sbb
cwtl
je
rcll
mov
out
sbb
stos
mov
dec
xor
loope
repnz
and
or
dec
push
repz
mov
sbb
inc
les
mov
jp
mov
sbbl
dec
mov
cltd
popa
xor
push
mov
mov
imul
sub
pop
dec
xlat
or
cli
pop
xor
cli
xchg
in
mov
xor
pop
shl
hlt
dec
cwtl
push
lret
mov
push
sbb
or
ja
mov
or
jno
cwtl
sbb
xchg
ds
rcr
inc
test
loop
xchg
xor
arpl
jns
nop
push
mov
incb
int
xlat
cmp
call
mov
sbb
adc
push
test
lods
adc
adc
push
push
mov
pop
jmp
dec
fildl
add
out
inc
push
xor
jmp
mov
rcl
xchg
daa
stos
xor
adc
jp
cmpsl
mov
xchg
jne
jo
inc
xchg
jmp
sbb
rclb
mov
leave
mov
xchg
jecxz
add
out
jns,pn
cmp
ror
mov
sti
inc
xlat
push
sub
xorb
sub
mov
shrb
popf
in
mov
adc
repnz
mov
jae
ja
lcall
cmp
fs
bound
lret
andl
and
daa
jl
add
shlb
movsl
loope
pop
ret
adc
cmpsb
mov
dec
xchg
push
mov
sar
out
xchg
dec
cld
test
cmp
ljmp
fs
arpl
inc
pop
sub
icebp
pop
mov
pushf
mov
imul
lock
dec
push
mov
repnz
cmp
sbb
shll
push
rcrl
loopne
or
mov
pop
int3
mov
rcl
stc
lret
push
add
mov
aaa
shlb
mov
push
shlb
inc
xchg
ss
das
sarb
cwtl
xchg
xchg
dec
bound
fnstenv
mov
sbb
data16
adc
push
add
pop
lock
inc
jg
fildl
or
push
cmpsl
xor
sub
xchg
aaa
ds
pop
and
sti
sbb
add
das
ja
adc
jmp
imul
cltd
push
dec
dec
sbb
xor
aam
das
aam
movups
bound
cwtl
neg
out
add
orl
xchg
ret
jae
lahf
pop
mov
mov
push
mov
xchg
rsqrtps
push
jle
sbb
and
adc
popa
fistps
stos
test
outsl
adc
inc
jmp
mov
sti
lods
sbb
pop
cmp
mov
fwait
cmpsb
ss
pop
test
xchg
adc
sbb
imul
push
and
sub
ret
mov
stc
pop
ret
cmc
ret
or
push
dec
sub
ror
sbb
fsts
mov
gs
or
not
mov
sbb
or
pop
add
mov
or
lea
pop
shrb
inc
and
mov
pop
mov
mov
jmp
add
adc
daa
or
dec
xlat
sbb
test
adcl
xor
sbb
sub
sbb
gs
pop
or
movsb
sbb
rcl
pop
dec
shr
mov
js
xor
test
sub
dec
aas
push
xor
shlb
addr16
sbb
jp
xor
and
mov
adc
adc
dec
xchg
pop
push
js
mov
mov
popf
ror
push
push
sbb
mov
mov
push
dec
inc
xchg
cmpsb
fistl
popa
dec
pop
enter
sub
pop
inc
jmp
int3
xor
sar
add
sbb
dec
ret
push
inc
and
xlat
sbb
lods
clc
ret
add
lds
push
sbb
xchg
xor
int
movsb
out
push
cmpsl
xchg
push
in
out
sbb
mov
mov
mov
dec
outsb
mov
clc
ret
mov
out
test
or
pop
lcall
lret
xor
push
test
clc
sbb
rcrl
push
out
ret
xchg
push
jns
lret
stos
fimull
push
jl
leave
sbb
cmp
or
jns
fsubs
mov
mov
pop
setno
jns
mov
notl
test
decl
shrb
loope
fsubrs
dec
ds
in
or
and
mov
cld
outsb
sahf
adc
cmpsb
lahf
mov
sbb
pop
data16
push
inc
bnd
add
push
sub
fildl
outsb
das
lods
xor
aaa
push
xlat
outsl
rolb
sub
fdiv
xchg
js
imul
push
cld
cmp
stos
fsts
mov
xchg
dec
mov
mov
sbb
fwait
sub
inc
stos
jecxz
fucomip
aas
xor
jg
push
movsl
jae
daa
dec
and
nop
pop
ret
adcl
mov
ret
cmp
adc
test
clc
test
sbb
sbb
jb
push
ror
out
outsl
cld
scas
js
arpl
out
clc
push
nop
mov
mov
mov
in
mov
cmpsl
sbb
insl
or
mov
subl
sbb
divl
jl
stos
shrb
jmp
imul
inc
in
shrb
xchg
mov
aas
lahf
leave
lock
fists
test
popa
movsb
mov
fistpl
fstl
jne
push
mov
and
xchg
lret
xor
sbb
and
call
scas
pop
fsubl
loop
mov
mov
jg
daa
cmp
popf
xor
sbb
jp
addr16
push
or
mov
bound
sbb
popf
dec
mov
ja
scas
ret
fsts
mov
sbb
jmp
in
mov
lds
push
cmp
add
sbb
mov
fimuls
or
xchg
mov
inc
pop
xor
leave
xchg
pop
fwait
loope
jae
xchg
adc
adc
xor
sub
js
iret
not
fwait
cmp
shl
rclb
dec
xchg
push
into
gs
shlb
pop
mov
jp
xchg
mov
push
fimuls
fiaddl
insb
rolb
pop
cmc
adc
jb
fwait
cmp
inc
sbb
fnstenv
idivb
jl
inc
or
and
and
sbb
loope
movsb
ficompl
arpl
inc
popa
xchg
mov
push
cmp
or
xchg
icebp
scas
sti
push
dec
in
sbb
sti
aaa
xchg
xchg
mov
sbb
in
insb
jle
push
fldl2e
xchg
adc
mov
sub
mov
cltd
mov
and
mov
hlt
and
adc
stc
sbb
and
or
shll
cmp
inc
sbb
cwtl
sbb
xchg
pop
fstpt
rorl
cmp
call
cwtl
dec
leave
stc
mov
das
adc
xor
cmp
or
xchg
shrb
or
sbb
pusha
jnp
or
xor
xor
dec
push
sbb
movsb
jg
mov
aam
clc
rorb
adc
inc
lret
les
xchg
loopne
in
scas
arpl
jns
jae
add
rcrb
jns,pn
mov
fsubrl
jp
les
sbb
mov
lcall
imul
jb
shl
jo
cmp
je
mov
cli
rorb
or
sub
pusha
and
mov
xchg
cli
loope
lea
mov
sub
arpl
and
rorb
mov
jns
imul
data16
in
repnz
aad
sbb
xchg
ja
dec
mov
mov
stos
in
sbb
hlt
cmp
xor
inc
repnz
mov
pop
inc
mov
pop
es
or
sbb
add
lahf
shl
das
push
sub
ret
nop
xchg
ficoml
jmp
adc
add
jae
ficoms
adc
inc
push
add
adc
in
mov
sbb
push
movsb
xchg
imul
inc
jns
inc
mov
inc
repnz
test
or
xchg
inc
mov
testb
scas
dec
xchg
sbb
nop
out
jg
imul
push
shrb
adc
pusha
inc
xor
add
pop
pop
jge
aad
cmpsl
sbb
sub
arpl
jae
cmc
mov
int
jg
xchg
sahf
idivl
pop
pop
xor
fbstp
insb
adc
testl
dec
pop
fcmovu
sbb
push
out
decb
mov
hlt
jmp
push
xlat
mov
push
lcall
push
out
xchg
pushl
fs
and
fdivp
sbb
pop
pushf
data16
test
jmp
sbb
popf
cmp
adc
push
inc
int
in
sbb
int3
mov
mov
jge
jmp
ss
sub
test
imul
xchg
iret
xchg
gs
movsl
idivl
lds
cli
shl
pop
cwtl
dec
sbb
lock
jo
dec
out
inc
sbb
push
mov
mov
sbb
adc
daa
aas
xchg
insb
lea
data16
out
mov
leave
dec
pop
sbb
adc
adc
sbb
pop
test
test
mov
pop
or
in
nop
sub
and
and
pop
fiadds
sub
sbb
int
or
pop
cwtl
bound
cmp
jle
xchg
mov
lods
lods
sbb
lcall
ljmp
cmpsl
dec
mov
test
mov
cmp
and
pop
mov
jmp
dec
lock
xchg
cmp
sbb
pushl
push
dec
and
mov
push
pop
jns
sbb
mov
shlb
ss
cmp
pop
jnp
fsubrs
out
shll
jge
iret
sbb
aas
jbe
mov
in
test
sbb
dec
andl
push
cmp
mov
imul
lea
dec
jno
sbb
shrl
adc
xchg
rcl
jmp
push
and
adc
adc
into
dec
inc
xor
xchg
insl
sbb
stos
in
pop
push
xchg
out
cltd
mov
pop
jecxz
xchg
lea
add
xor
test
cwtl
mov
test
mov
dec
inc
into
lods
cmp
adc
hlt
mov
sub
cmp
cmp
ss
dec
fisubrs
sub
and
repz
mov
mov
or
cld
xchg
test
lret
in
ret
repnz
xchg
test
mov
roll
adcl
sbb
clc
lahf
xchg
fs
rcll
ds
cmp
cld
and
cltd
in
sbb
les
pop
aam
xor
push
loopne
and
sbb
sahf
rorb
or
out
out
leave
xchg
out
xor
pop
adc
inc
sbb
sbb
xchg
fistl
cmc
cltd
shlb
pushf
shl
lods
into
mov
push
jg
shlb
xchg
sub
jae
pop
mov
dec
outsb
aas
movsb
pop
sahf
outsb
lret
mov
pop
cli
and
inc
push
mov
sub
jo
cmp
or
push
inc
add
js
jmp
xchg
fst
and
mov
lcall
repz
in
pop
inc
jb
inc
sbbl
sub
mov
mov
negl
mov
inc
xchg
push
mov
ss
das
adc
aaa
and
mov
inc
fwait
sub
stc
push
rclb
sbb
and
sbb
mov
fnstcw
sbb
adc
dec
pop
jae
fwait
arpl
add
xchg
or
push
rorl
and
or
bound
ljmp
lods
cli
or
jge
out
sbb
gs
test
adc
sahf
and
mov
inc
negl
sti
cmp
inc
loopne
xchg
sbb
sarl
inc
push
add
fildll
jae
jmp
icebp
sarb
mov
dec
sti
aaa
push
fbld
mov
adc
lea
mov
cs
sub
sbb
jne
shl
lods
mov
shlb
int
das
cmp
dec
sbb
push
mov
jns
and
out
ds
pop
xchg
rorl
fstps
push
adc
das
jl
mov
adc
rcrb
pop
dec
out
inc
mov
xlat
lret
pop
sar
ret
add
aad
andb
je
mov
cmp
push
ja
pop
adc
call
lret
xchg
push
push
xor
cltd
mov
in
enter
jo
adc
add
cmpsb
outsl
push
iret
fidivrs
ds
mov
push
fwait
xlat
push
or
ret
and
inc
mov
mov
test
xor
std
sbb
lahf
and
aad
push
mov
cmpl
jge
ljmp
or
jp
push
test
sbb
mov
ret
ss
sti
add
inc
test
add
iret
rolb
sbbb
shlb
mov
mov
sbb
dec
jge
pusha
push
mov
lcall
hlt
sbb
xchg
gs
mov
jecxz
inc
sbb
cli
lret
stc
fdiv
cmc
push
sete
mov
jmp
sbb
aaa
ja
jg
and
sbb
jno
pop
imul
push
mov
sbb
mov
fwait
rcrb
pop
adc
repnz
fstps
subb
jns
mov
mov
pop
dec
dec
sbb
push
adc
rcll
rclb
cmp
mov
push
cmp
shrb
push
and
dec
insl
mov
mov
in
adc
mov
dec
cmp
inc
lods
inc
cmp
cltd
inc
ror
dec
mov
push
jmp
bswap
push
ret
or
in
inc
cli
std
adc
add
shr
cmp
movl
js
xchg
mov
stc
inc
mov
xor
loope
call
push
sahf
hlt
in
lea
dec
int
repnz
cmp
pop
ss
xchg
pop
adc
out
or
sub
mov
mov
mov
insb
dec
dec
leave
or
ja
out
test
pop
adc
sahf
sbb
or
std
mov
mov
or
push
imul
add
icebp
jns
hlt
sbb
push
cmpsl
adc
stos
orb
je
lret
hlt
ss
mov
xor
push
pop
mov
push
mov
adc
xor
ljmp
adc
jp
xchg
push
ja
xchg
bound
or
stos
cmp
in
add
insb
pop
lea
xchg
outsl
sbb
arpl
mov
mov
xor
dec
aaa
mov
aad
jo
cmp
push
or
jne
cld
fwait
push
mov
jp
cmp
or
repz
in
mov
shlb
clc
icebp
jle
je
pop
mov
sbb
imul
xorl
sbb
ret
sub
repnz
test
fwait
into
pop
fstps
in
push
add
mov
or
xor
pop
add
xor
lds
inc
inc
sub
xchg
lcall
hlt
sbb
out
add
pop
arpl
mov
mov
cwtl
mov
ss
loope
sbb
jnp
xchg
inc
sahf
movl
pushf
int3
mov
notb
xchg
dec
sub
push
sub
or
dec
add
mov
dec
stc
shll
rol
dec
repz
aad
sbb
mov
sbb
push
sahf
sub
loope
sbb
mov
fstps
inc
jo
dec
out
jae
xchg
dec
rclb
push
jmp
cli
out
aam
inc
rol
fisttps
popa
rol
stos
stc
test
mov
ds
idivb
shlb
pop
mov
sahf
divb
push
sbb
push
and
mov
idivl
jl
cmp
adc
dec
push
mov
dec
pop
jmp
pushl
movsl
adc
ficompl
add
in
lret
mov
mov
inc
in
sbb
dec
jae
pop
mov
ss
push
les
adc
xorb
push
sbb
fisttpll
xchg
or
add
stos
sub
sbb
mov
sbb
dec
add
hlt
adc
sbb
xor
and
mov
pop
shr
pop
in
cli
fcmovbe
mov
jle
mov
ret
ja
mov
or
push
rclb
jge
xlat
mov
mov
jns
pop
push
setno
jecxz
inc
cmp
push
cmp
fs
mov
dec
xchg
adc
iret
sbb
mov
sbb
pushf
xchg
cmp
sahf
lahf
jbe
fisubl
nop
adc
and
rcrl
int
pushf
mov
cmp
lcall
jno
xchg
cmpsl
sbb
imul
test
or
or
call
cmpsl
dec
aaa
sbb
xchg
stos
cmpsb
xor
xlat
div
pop
int3
xor
mov
pop
in
adc
pop
jnp
js
jmp
sbb
dec
inc
push
in
popf
or
pop
push
lods
scas
sbb
xchg
inc
inc
mov
mov
inc
shrb
in
push
es
sti
repz
mov
push
loop
cmp
mov
fistl
and
loope
add
and
or
lcall
xchg
je
in
fwait
inc
dec
es
aam
outsl
and
fldt
mov
and
ja
and
flds
xor
mov
jne
push
bound
adc
push
mov
mov
fistps
pushf
dec
xchg
cmp
scas
jle
push
fwait
inc
sbb
rcr
insb
test
popf
sbb
test
sub
add
dec
add
in
lcall
stos
testb
jo
mov
sub
inc
loope
ret
and
pop
sbb
in
adc
dec
cmc
add
sbb
push
loope
aaa
lds
rcrb
subb
push
sub
clc
mov
int3
into
xchg
jle
and
mov
add
in
lods
sbbb
test
mov
ret
pop
int
insl
jns
pop
or
push
ret
mov
lock
sbb
fisubrl
jns
mov
int
bound
jge
andl
ret
fwait
insb
rcll
popa
ret
xor
orl
add
mov
nop
mov
inc
repz
jnp
xlat
adc
and
jge
adc
mov
bound
xchg
aas
enter
into
sbb
or
sahf
pop
andl
mov
mov
loope
jg
aas
xchg
scas
movsb
nop
or
insb
incl
mov
sbb
add
pop
and
xchg
lret
in
sbb
paddw
ret
mov
jl
and
data16
mov
loopne
jmp
xchg
repz
mov
lods
popf
pop
push
stc
out
fwait
cmpl
push
jl
sahf
aam
push
clc
cmpsl
jle
jae
jbe
push
mov
cltd
mov
fwait
jb
scas
test
fs
or
imul
jmp
mov
cmpb
pop
ret
fs
aaa
pushf
call
jmp
cmp
cmpsb
cmp
xlat
mov
jp
mov
xchg
test
call
roll
cmp
lock
xlat
jo
xchg
pop
xor
pop
inc
je
add
add
into
inc
int3
pop
sub
cmp
shl
cmpsb
enter
jne
add
sub
or
mov
insl
jo
test
sbb
hlt
and
ret
adc
negb
stc
into
test
lock
std
sbb
jl
pop
ret
push
and
fwait
adc
sbb
mov
sbb
and
xchg
push
arpl
sti
and
mov
mov
sbb
int
mov
pop
cmp
and
shrl
push
or
add
es
mov
jl
mov
insb
and
and
lahf
dec
pop
rcrb
out
into
js
xor
das
gs
pop
jp
adc
aaa
inc
arpl
cmp
and
stos
xchg
mov
xchg
jecxz
add
fwait
dec
xorb
dec
popl
inc
subl
jne
cs
in
sbb
fistps
sarb
jnp
call
orb
test
cmp
cltd
inc
ss
insb
fildl
pop
fidivrl
or
inc
fstps
rclb
shl
adc
movsl
mov
xchg
popf
push
fwait
sbb
lds
rorb
scas
test
shll
mov
or
scas
inc
sbb
cmpsl
cmpsb
sub
mov
daa
popa
push
pop
sub
popa
adcl
testl
scas
add
or
fwait
cmpsb
and
sahf
popf
in
leave
jge
ds
sbb
mov
inc
daa
fnsave
std
loope
ret
pop
jge
pop
mov
or
imul
je
xchg
in
xchg
cltd
sbb
negl
lea
stos
jbe
mov
cmp
dec
ljmp
jbe
xlat
shlb
ja
lea
xorl
out
mov
xchg
cltd
add
push
and
adc
sarb
shlb
fucomi
pop
test
sbb
movsb
shll
cmp
mov
push
pop
xor
mov
or
pop
loope
test
xor
mov
pop
rclb
inc
xor
mov
or
shrb
int3
imul
jne
sbb
jge
xor
jb
outsl
fnop
push
pushf
cmp
push
repnz
rcrl
xor
jne
out
enter
fs
pushf
insl
mov
mov
jnp
out
pop
mov
push
shl
es
gs
lcall
mov
sub
mov
adc
in
lods
loope
xor
std
sub
xchg
mov
cmp
sbb
ret
movsl
fidivrl
sbb
and
sti
loopne
sbbl
ror
repz
adc
jmp
mov
adc
repz
loope
leave
dec
fadds
inc
push
test
rcr
push
push
hlt
int
divb
xorb
push
pop
push
xchg
lods
shl
rolb
cmpsl
adc
enter
icebp
xchg
fldenv
mov
pop
sbb
fwait
out
mov
call
add
nop
dec
xor
xchg
mov
xchg
ja,pn
je
sti
or
sbb
fldcw
dec
or
and
pop
stos
jecxz
pop
shrl
push
jae
sarb
stc
jne
dec
clc
pop
lcall
mov
sbb
stos
lret
lret
dec
xchg
xchg
sbb
cmp
jns
mov
sub
and
push
pop
arpl
xchg
ret
mov
pop
add
sbb
lods
pop
xchg
cld
push
adc
dec
sub
jecxz
arpl
test
icebp
movsl
xchg
adc
jne
pop
shr
sbb
jecxz
push
dec
out
mov
jo
mov
jl
fcmovbe
fsts
jp
sahf
repnz
xchg
dec
and
sbb
sub
jne
fistps
fstp
add
push
test
lret
adc
lret
mov
sti
xchg
and
std
lret
or
adc
cs
cmp
dec
and
jecxz
hlt
push
adc
inc
mov
sahf
jge
inc
dec
ss
sub
add
sub
icebp
xchg
add
mov
lea
sbb
sbbb
lods
rclb
and
add
jge
pushf
jns
mull
lock
loopne
jp
ret
and
mov
int
xor
xchg
lret
sbb
fsubrp
add
outsl
icebp
cltd
sbb
add
add
xchg
adc
sub
adc
dec
movsb
shrb
push
rclb
test
pusha
jmp
and
or
cli
mov
fwait
mov
cli
in
out
inc
rolb
and
daa
pop
jle
push
test
sub
sbb
push
fists
lcall
insb
ret
cltd
cmc
mov
xchg
movsl
es
and
cmp
pop
push
insb
iret
dec
or
push
lret
stos
sbb
cmp
mov
pop
fimull
sbb
xchg
mov
pushf
out
or
sbb
push
sahf
int
adc
decl
cli
mov
dec
mov
push
mov
cmp
and
xchg
add
adcb
adc
jbe
notb
std
mov
dec
loopne
push
mov
into
add
sbb
ret
test
add
fistpl
cmp
pusha
sbb
shlb
mov
aad
xchg
in
int3
cltd
adc
mov
aam
aaa
pop
fists
inc
iret
scas
adc
sub
sbb
lds
and
test
stos
dec
adc
into
sbb
test
mov
inc
and
es
in
scas
and
push
sub
sbb
movsl
inc
pop
mov
sbb
ret
pop
loop
shl
push
pop
push
enter
shll
push
ret
and
mov
sbb
add
aaa
fwait
rcl
pop
adcl
clc
rcrl
js
repnz
mov
aam
jno
test
or
cwtl
sub
dec
hlt
and
shl
cltd
sub
mov
fwait
ljmp
sarl
aaa
push
mov
lcall
sarl
rcr
pop
dec
sbb
stos
pop
pop
sbb
addb
adc
pop
push
jo
fstpl
aaa
mov
pop
dec
rorb
sete
pop
arpl
inc
xchg
rclb
lock
and
jns
ret
xchg
in
leave
cmp
xchg
or
out
mov
cmp
pop
xchg
lds
roll
sbb
lcall
sarb
sbbb
pop
fstpl
adc
lcall
adc
xchg
add
mov
and
in
addr16
lret
mov
xchg
fnstsw
or
adc
lcall
stc
xchg
movb
adc
enter
xchg
and
adc
imul
pop
arpl
incb
cmpb
cmp
adc
sub
push
add
push
cltd
repnz
ret
xchg
sub
vxorpd
test
clc
es
mov
out
scas
and
or
mov
test
jge
mov
rorb
cmp
add
lahf
sbb
xacquire
mov
sub
or
pop
mov
cs
sahf
xchg
out
mov
andl
pop
repnz
cmp
es
loop
dec
cmp
or
and
sahf
push
icebp
notl
testb
stc
icebp
mov
sahf
outsl
pop
sub
scas
mov
pop
out
sbb
mov
out
inc
addr16
jns
insl
inc
repnz
pop
xor
imul
mov
ret
jmp
int
push
xchg
mov
add
add
sbb
cld
xchg
add
inc
jns
test
clc
xchg
cwtl
call
add
sbb
imul
and
lcall
add
scas
aam
cltd
push
shlb
mov
xor
jecxz
xor
daa
js
in
lods
adc
xchg
hlt
xor
mov
ret
int3
out
fistpll
lock
icebp
sbb
lret
pop
xlat
pop
std
pop
test
sbb
inc
and
dec
sahf
push
in
push
push
mov
scas
data16
dec
add
das
dec
imul
sbb
mov
xchg
sarl
sbb
inc
jb
push
popf
xchg
inc
and
adc
ret
dec
shrb
jae
inc
rolb
adc
test
mov
jne
cmp
xor
int3
rcrb
lret
push
xchg
xchg
or
jbe
int
notl
add
inc
xchg
aad
bound
in
mov
xchg
jmp
jnp
loopne
cmc
mov
jne
mov
addr16
lea
out
lahf
in
popa
push
xchg
test
repnz
sti
jecxz
sbb
popf
repnz
xlat
bound
fistps
mov
push
pop
adc
lock
movsl
push
sub
push
sbb
xchg
loop
mov
daa
mov
popa
cmp
fildl
push
rcrl
mov
or
push
push
adc
inc
fisubrl
sbb
clc
adc
das
xor
imul
sbb
cmp
daa
sbb
aas
cmpsb
cld
aas
pushf
outsl
dec
dec
pop
cmp
xor
inc
xchg
lret
test
mov
insb
out
cmc
mov
cli
jp
pusha
and
mov
sbb
repz
cld
popf
add
sbb
mov
mov
int
adc
out
sti
jns
int3
sbb
inc
sbbl
or
push
cmp
sbb
dec
dec
aaa
jg
rorb
sahf
cmp
dec
sbb
cli
mov
push
sahf
xchg
or
adc
sbb
pop
mov
shlb
mov
sbb
xor
stc
int3
jle
and
xchg
out
sbb
push
mov
sbb
rcll
rcl
inc
xchg
fistps
pop
push
cmp
inc
mov
sbb
dec
test
fnsave
sbb
scas
insb
sub
repnz
xchg
xchg
push
aad
inc
xchg
cli
sbb
ja
imul
xchg
push
and
push
xchg
cmpsb
add
xchg
mov
push
add
sbb
and
jno
or
xchg
in
shrb
add
dec
negl
in
fisttpll
mov
jae
loope
repnz
gs
sbb
pusha
push
je
fisttps
mov
aas
aas
pushf
mov
sbb
sub
xor
xchg
mov
mov
popa
or
sbb
mov
add
pop
addr16
pusha
insl
rcrb
mov
lock
push
fnstsw
enter
or
sub
push
dec
jae
xchg
lret
int
push
lret
shlb
jbe
sub
jp
sbb
pushf
cs
jle
mov
movsl
xor
mov
out
jmp
xor
mov
sbb
lahf
cmp
adc
xchg
in
jmp
pop
fwait
or
pop
mov
rorb
cmpsl
imul
outsl
fwait
adc
lret
cmpsb
mov
mov
mov
sbb
and
fwait
cmc
sahf
fs
jae
push
shll
nop
xchg
cltd
dec
xlat
sbb
pop
and
dec
sahf
lods
xchg
hlt
enter
cmp
inc
add
push
bound
xchg
cmpsb
shr
shlb
mov
call
outsb
push
imul
mov
dec
les
enter
lea
adc
addr16
sbb
sub
std
mov
in
dec
mov
adc
insb
fwait
jg
mov
clc
pop
pusha
jae
push
test
jg
jo
pop
push
sbb
das
jg
fldenv
mov
ficomps
cmpsb
les
jnp
dec
xchg
xchg
js
jae
subb
in
sbb
out
rorl
enter
mov
leave
mov
cmp
pop
fildl
dec
sub
mov
push
cmp
mov
int3
push
fs
or
push
jnp
pop
push
jecxz
out
push
fstpt
test
mov
mov
lock
sbb
lret
pop
inc
rclb
fistpl
fucomp
sbbl
test
imul
sub
in
xor
jno
aaa
and
scas
fcoml
pop
cmp
inc
fs
inc
sbb
pop
ret
xor
mov
inc
pop
and
adc
inc
dec
data16
fwait
pop
aad
sbb
add
sbb
mov
push
sahf
xchg
push
pop
mov
and
adc
movsl
orb
fbld
out
out
cli
xchg
and
les
push
shll
lahf
mov
inc
clc
inc
pop
xorb
pop
aaa
xor
loop
xchg
lock
pop
push
inc
das
aad
es
outsl
push
cmp
mov
mov
jmp
adc
add
les
sbb
or
lret
aad
mov
mov
mov
aaa
jnp
out
sbb
fstps
xchg
outsb
mov
adc
sbb
pop
cmp
loope
add
aaa
inc
int3
fidivs
js
por
or
mov
ret
push
sbb
jae
lret
lods
pop
imul
lock
sbb
insb
xlat
sub
inc
jge
bound
add
or
jmp
lahf
lock
mov
push
inc
push
scas
jge
mov
sbb
add
mov
inc
mov
jl
sbb
popf
iret
movsb
cltd
xchg
mov
in
repnz
or
sbb
inc
insl
lret
in
sub
nop
xor
push
push
or
nop
ss
adc
movsb
sbb
test
adc
xchg
pop
xor
mov
movsl
sbb
pop
call
addr16
xor
iret
adc
xchg
mov
mov
or
or
xchg
cs
fiadds
jecxz
jne
jns
fisttpl
pop
icebp
xchg
mov
inc
in
out
adc
mov
dec
sub
ja
mov
ljmp
dec
lods
or
or
stc
cmp
cmc
pmaxub
sbb
lret
fcmove
data16
or
pop
push
inc
out
jl
mov
sbb
mov
js
xchg
xor
sub
loopne
pop
sbb
push
inc
mov
add
movsl
stc
inc
pop
iret
mov
sbb
outsb
movsb
scas
xchg
adc
lds
dec
test
mov
or
lods
mov
cmpsl
or
cli
push
sbb
rcrb
jg
psraw
aaa
je
jl
jbe
into
lret
imul
addr16
mov
inc
mov
sbb
sahf
push
pusha
sbb
jbe
push
rcr
call
sub
inc
in
hlt
push
jae
fldenv
mov
xor
sbb
gs
ficoms
cmpsb
mov
mov
sarl
mov
repnz
or
inc
mov
ds
dec
ljmp
mov
test
jb
sbb
mov
divl
xor
jae
rcl
push
iret
xor
fbld
xchg
mov
mov
ljmp
push
sbb
sbb
je
and
xchg
loope
xchg
bound
push
pop
mov
nop
pushl
sbb
inc
mov
cwtl
jae
in
xor
cs
xchg
sar
ja
das
xchg
sbb
xor
pop
push
pop
test
xchg
inc
xchg
std
daa
adc
hlt
sbb
cmpsb
inc
lret
push
push
rclb
fnsave
push
pop
mov
in
add
vmread
jbe
cmc
sbb
repz
rclb
inc
loopne
mov
pop
mov
jnp
ds
dec
sub
inc
or
repz
js
pop
mov
pop
cltd
adc
js
sahf
jge
sub
push
inc
into
mov
push
sbbl
xchg
ja
repnz
xchg
outsb
mov
push
js
sbb
push
push
insb
dec
xor
stos
xor
mov
pushf
jp
dec
jne
test
addl
mov
loop
mov
inc
cmp
cmp
xchg
scas
adc
fwait
mov
iret
pop
pop
sahf
cmp
dec
lret
sbb
mov
int
loope
stos
mov
movsb
mov
adc
sbb
imul
and
pusha
lds
xchg
jg
xchg
ds
outsb
jp
jns
sbb
ret
pop
pop
jp
inc
lods
dec
sbb
filds
in
ljmp
lret
repz
jg
int3
in
fbld
fwait
in
dec
mov
jecxz
or
cld
out
pop
sbb
pop
pop
rol
iret
in
push
lret
lds
movsl
out
xor
aam
int
das
mov
aad
cmp
xor
mov
xor
dec
rcrb
xchg
sbb
adc
jb
test
mov
mov
jo
pop
inc
sti
fisubrs
xchg
jl
cli
ss
sbb
dec
mov
iret
mov
push
in
call
dec
sarl
jns
insl
mov
adcl
rorb
pop
stos
js
xchg
pop
dec
and
adc
mov
mov
mov
ror
jg
inc
push
mov
les
push
push
scas
cmpsb
cli
dec
jle
sub
xor
xchg
xlat
shrb
dec
adc
sbb
and
inc
inc
int3
rclb
dec
xorb
jns
jp
mov
cmp
pop
shr
test
and
xchg
aam
fsubl
sbb
cs
cmpsl
cmp
jb
add
mov
push
cld
fdivrp
fnstsw
pop
outsl
jp
ljmp
fadds
sbb
insb
add
shlb
cmp
repnz
clc
adc
pop
data16
mov
xlat
iret
xchg
and
out
dec
pop
lock
fidivrl
cwtl
jnp
pop
xchg
mov
shlb
sub
push
add
adc
cld
loope
jle
jg
dec
outsb
jecxz
dec
add
sbb
xchg
aad
jnp
fldl
sahf
mov
push
or
sub
sbb
into
mov
in
outsl
jbe
aaa
and
scas
adc
sub
pop
lret
cld
lret
movl
add
push
adcl
cmp
push
ds
adc
out
outsb
lcall
jno
loopne
mull
rcll
adc
stos
push
inc
mov
dec
adc
insl
sub
dec
sub
adcb
ds
clc
int3
in
lret
xor
mov
xchg
inc
mov
iret
or
pop
and
adc
pop
push
xor
sbb
push
in
into
dec
cmp
cld
xchg
xchg
pop
fwait
inc
xlat
gs
mov
ret
ficompl
mov
pop
adc
jl
pusha
push
dec
sbb
inc
je
sar
shrb
cmpsl
test
pop
push
xchg
bound
xchg
push
mov
xor
int
fadds
sbb
rclb
push
in
push
out
and
push
nop
clc
or
popf
jbe
sbb
andl
pop
cmpsl
push
ret
xchg
arpl
jb
pop
sahf
aas
lret
inc
icebp
xchg
movsb
push
pop
out
movsl
stc
mov
sub
popa
sbb
sub
fwait
mov
mov
das
testb
add
pop
outsb
xchg
lods
imul
mov
jg
icebp
xchg
push
mov
cs
lret
sbb
push
jo
in
jo
sub
shr
jge
pusha
inc
cltd
negl
enter
in
outsl
std
adc
pop
jg
push
fiadds
pop
sub
sbb
test
lret
and
aam
rol
and
out
hlt
mov
stos
nop
sub
movsb
dec
cmc
xchg
dec
stos
nop
mov
aas
jbe
xchg
mov
and
insl
shr
pop
rol
xchg
outsb
icebp
adc
sbb
aad
and
out
jp
sahf
mov
xchg
pop
and
jbe
sbb
fcoml
pop
rorl
inc
pop
hlt
sub
push
mov
pop
jg
cmp
push
or
mov
inc
push
dec
push
mov
push
fldenv
xchg
xor
jp
jmp
jge
cmpsb
and
sahf
hlt
jne
rcrl
rorb
xor
jnp
std
test
movsl
push
sub
je
lds
outsb
movsl
imul
scas
xchg
or
sbb
cld
pop
sbb
testb
sarb
cltd
fiadds
sbb
or
ret
mov
lods
fdivrs
lods
mov
ss
aaa
enter
jne
clc
fsts
outsb
add
lret
add
mov
xchg
pop
daa
inc
in
cmp
imul
push
xor
out
lock
inc
cmp
xlat
xchg
add
or
sbb
fucomip
ds
or
sahf
lds
or
icebp
sbb
sbb
mov
aaa
cmp
mov
push
cltd
pushf
ss
sbb
outsl
mov
push
mov
iret
sbb
cwtl
outsl
or
mov
mov
psubw
xor
in
jb
jmp
sub
insl
push
imul
mov
xor
xchg
enter
dec
adc
mov
lret
aas
ret
mov
and
or
pop
cli
rclb
adc
pop
test
mov
fimull
sub
cmpsb
pop
pop
sbb
pop
xor
cmp
pop
jnp
fwait
testb
js
mov
cmp
jg
sub
sub
xchg
sbb
outsl
sub
or
xchg
add
xlat
movntps
and
outsl
xor
out
push
loopne
fldcw
movsb
push
and
xchg
loopne
inc
mov
sbb
jg
sub
ficoml
push
mov
rcrl
pop
cmp
repnz
enter
pop
mov
dec
and
pop
aad
fnstcw
addb
cmp
sub
dec
sub
nop
stos
sti
test
test
pop
jae
and
or
mov
mov
adc
or
stos
ljmp
lds
dec
rcrb
push
std
hlt
fnstcw
shlb
psubsb
movsl
popf
mov
inc
dec
out
in
sub
fisubs
insl
mov
xchg
fldl
gs
fdivrs
mov
aam
int
jle
push
lock
inc
xlat
out
fdivl
nop
dec
push
in
std
xorb
mov
and
leave
xchg
rcrb
popf
ds
sbb
jge
cwtl
outsb
push
shrb
mov
xor
es
and
xchg
push
mov
js
mov
xchg
mov
jb
fldcw
cmp
cltd
ja
idivl
loopne
sbb
jns
arpl
xchg
cmp
rorl
or
es
adc
ljmp
stos
outsl
rcrl
mov
push
enter
jmp
das
fst
push
mov
add
or
test
xchg
cmp
push
add
mov
lret
aas
cmp
xlat
cmp
addr16
or
add
mov
outsl
repnz
and
fstps
or
ficoms
xchg
adc
ja
xchg
jl
outsb
out
and
xchg
xorb
rorb
xchg
cmp
push
sbb
in
in
test
neg
lods
jecxz
sub
out
xchg
fs
sbb
xchg
ficoms
xchg
xchg
or
ljmp
iret
stc
imul
pop
call
lods
fsubs
push
seto
sti
dec
jne
mov
call
cwtl
into
gs
stos
adcl
mov
mov
rclb
outsb
sub
pop
ret
bound
sub
add
ss
int3
mov
ss
dec
push
loope
pushf
and
stos
sbb
test
mov
mov
das
movsb
dec
sbb
imul
jl
jbe
je
add
popa
sbb
adc
mov
dec
mov
insl
jne
mov
jle
xchg
dec
fcompl
subl
rcrl
out
bound
into
cmp
xor
cmp
fdivl
sub
jne
arpl
scas
repnz
data16
sub
xchg
cmovge
dec
stos
adc
aam
stos
ficompl
lea
in
rcr
xchg
loopne
push
fsts
nop
adc
mov
rcrb
xor
les
lret
mov
fiaddl
lods
cmp
jb
scas
data16
ror
outsl
rcr
cmp
stc
push
mov
sbb
or
cli
sub
and
outsb
xchg
xor
movsb
test
sbb
insb
cmpsb
lds
push
aam
cmp
scas
loop
fwait
or
add
test
cld
dec
pmovmskb
mov
sbb
push
cwtl
sar
sbb
pop
ljmp
xor
inc
xchg
push
and
bound
jnp
lret
jecxz
push
out
xchg
cmp
lret
sbb
dec
stc
mov
jns
nop
dec
movsl
jp
es
mov
jb
or
dec
add
fistpl
loope
hlt
adcb
mov
dec
aaa
hlt
push
or
dec
lret
dec
mov
out
mov
pop
dec
xchg
and
push
add
sub
adc
cmp
fistpll
ds
out
imul
sbb
das
cmp
std
mov
sbb
data16
fcmovb
jns
adc
mov
cmpsb
lcall
ss
jbe
les
rcrl
dec
ja
mov
stc
inc
sbb
rolb
xchg
or
cmc
addr16
and
jae
push
jnp
push
adc
push
pop
out
push
add
jnp
int
jo
or
fnsave
mov
jb
stos
pop
cmp
jge
push
xor
mull
cld
cmp
cmpb
sbb
xor
popa
and
adc
rclb
fstps
ljmp
pop
stc
pop
out
jne
xchg
mov
mov
bt
xchg
sbb
add
bound
stos
inc
cmp
cmp
scas
cli
fists
jno
je
sbb
bound
adc
ljmp
xchg
xchg
pushw
jmp
sarb
rcrl
jl
or
mov
loopne
lcall
stc
jnp
or
mov
div
stos
push
push
loop
out
sbb
lahf
lahf
sti
bound
add
add
mov
sub
sbb
pop
xchg
sbb
mov
sarb
into
jp
jecxz
sbb
xchg
xlat
imul
pop
cwtl
int
lds
fbld
pop
push
hlt
loope
movsb
sarb
mov
in
add
fcmovne
xchg
or
addl
inc
push
jl
mov
xor
jl
or
mov
pop
cwtl
hlt
xor
xchg
or
inc
fisttpl
dec
sbb
jl
ss
leave
mov
rcrl
xlat
xchg
pushf
popa
or
push
xor
mov
testl
sbbb
dec
pop
xchg
mov
into
cmp
mov
popf
sbb
pusha
pop
icebp
decb
sub
shlb
ret
leave
push
mov
pop
or
std
mov
xor
clc
rolb
dec
hlt
mov
sbbb
sub
push
mov
pusha
mov
cmpsb
inc
xchg
mov
sahf
sbb
lock
pop
pop
rolb
xchg
pop
xor
mov
sub
inc
jo
call
fildl
stos
ja
fstpl
xchg
mov
jmp
jno
pushf
mov
inc
push
test
in
add
mov
jns
arpl
sbb
fdivr
nop
lods
mov
repz
mov
cmp
cmp
divl
adc
sbb
imul
rcrb
push
fwait
lcall
mov
push
inc
subl
sbb
dec
xorb
fst
push
rorb
cmpb
sbb
pushf
dec
sbb
xchg
sti
pop
ljmp
stc
or
adc
mov
dec
mov
inc
pop
xor
enter
push
pop
push
xchg
jno
les
ret
idivl
roll
xlat
xchg
cld
faddp
out
inc
and
stos
in
out
sbb
outsb
xor
shlb
add
aam
mov
xchg
and
add
in
adc
xor
in
ror
jno
dec
imul
add
int
lret
shrb
and
or
xor
xchg
repnz
sbb
lcall
sbb
or
push
xchg
cli
sub
pusha
push
addr16
push
xor
pop
xor
cmp
scas
rclb
loope
test
sub
sbb
jle
and
mov
add
xor
or
and
sub
cmp
call
or
sbb
ds
pushf
cmp
sbb
icebp
negl
sahf
loopne
mov
mov
lret
dec
insb
jg
into
ja
ret
lcall
into
out
rcrl
dec
mov
adc
int
pop
dec
cmp
mov
mov
jmp
cmp
mov
mov
hlt
outsb
lea
cld
sub
push
sbb
lods
adc
fwait
mov
sub
test
mov
pop
cmc
xlat
test
push
mov
stos
mov
sbb
scas
or
les
mov
mov
call
push
mov
pop
es
sbbb
loopne
jle
shl
sti
lock
ret
fstps
rcrb
push
ja
and
sub
fwait
cld
out
mov
rol
movsb
push
insl
ja
sbb
inc
test
and
pusha
fcom
outsb
fdivrs
pop
out
push
subb
cld
stos
dec
xorb
mov
mov
or
fwait
dec
dec
adc
mov
les
pushf
fidivl
call
xchg
adc
test
sahf
imul
mov
pop
into
outsl
in
stos
add
xchg
loope
adc
push
cmp
xchg
hlt
push
lea
pop
mov
inc
in
lods
push
stos
add
mov
or
lea
loop
cld
mov
mov
movsb
loopne
push
push
in
sub
pushf
and
hlt
pop
push
add
shl
and
add
rclb
popf
fsubp
cli
pop
jbe
loop
pusha
rolb
iret
cmp
leave
xor
loopne
xchg
fildll
push
mov
mov
and
mov
sub
fistl
mov
mov
push
lret
aad
iret
sbb
mov
call
ljmp
jns
sbbl
cmp
pusha
jp
sbb
lahf
mov
outsl
push
add
push
inc
sti
cs
neg
jmp
sbb
mov
cltd
xor
ficoms
cli
incl
push
imul
push
sahf
push
or
je
mov
sub
sahf
insb
jl
push
stos
rorl
imul
ret
test
mov
lods
mov
dec
sub
test
xchg
ds
pop
lcall
outsl
pop
loop
jmp
repz
scas
stc
push
loope
mov
xor
cmc
les
nop
mov
or
jge
rcr
dec
imul
pop
dec
ret
push
xchg
mov
sbb
sbb
jns
fldt
sbb
mov
push
arpl
mov
mov
mov
fisubl
int
shrb
xor
scas
movsl
xor
pop
ret
dec
nop
jb
sub
pop
jae
fxch
test
push
xor
mov
push
adc
lret
mov
addr16
xlat
inc
in
cmp
xchg
pop
sbb
xchg
push
mov
xorb
out
xor
and
lcall
xchg
clc
cmp
lret
nop
jecxz
inc
pop
movsb
outsl
jnp
pop
add
push
shrb
sbb
adc
in
hlt
xchg
incb
ss
imul
arpl
or
sub
fdivr
rorb
lahf
cld
rcrl
mov
stos
add
xlat
mov
add
data16
sbb
aad
mov
inc
mov
inc
dec
push
rcrb
icebp
rcrb
sar
imul
std
sbb
sbbl
sub
sub
test
push
rcr
inc
sub
xchg
jae
sbb
loope
mov
shlb
call
ss
repnz
es
or
mov
push
enter
inc
add
inc
jl
sbb
out
jnp
add
inc
xor
ja
jmp
pop
xor
dec
out
fisttpl
scas
test
dec
add
out
xchg
xor
inc
and
xor
dec
jno
pop
jle
aad
fistps
xchg
pop
cmp
out
mov
and
cmp
pop
jmp
rorl
add
sbb
push
ja
mov
push
mov
xchg
movaps
push
shl
add
jl
jbe
xchg
jg
ds
ret
cmp
xchg
mov
and
fcmovu
ret
dec
xor
scas
push
sti
das
mov
sbb
loopne
dec
mov
cmc
rclb
ficompl
mov
sbb
pop
mov
push
mov
adc
insb
cmp
out
mov
in
add
xor
testb
and
and
sti
mov
lods
sahf
inc
sub
sbb
fs
inc
test
jmp
data16
jae
cmp
sub
adc
pop
jne
push
sahf
mov
adc
std
cmp
push
repz
sahf
ja
inc
fistps
dec
push
cmp
dec
mov
push
adc
jne
lcall
push
out
rol
sub
inc
je
orl
cltd
mov
add
dec
add
fwait
dec
mov
aad
jbe
int3
push
jno
enter
popa
sahf
rorl
rorb
sbb
or
movsl
lret
enter
jmp
xor
data16
or
aas
fwait
mov
or
push
pop
pusha
sahf
js
pop
dec
mov
mov
lcall
xlat
push
cld
dec
in
xchg
cmp
mov
in
inc
sbb
push
and
or
push
es
sub
and
xchg
jne
pop
push
jne
xlat
shlb
jno
fiadds
cmp
and
cmp
pop
push
pop
adc
jg
push
cmpsl
cmp
cmpsl
insb
sbb
jg
jp
fwait
cld
stos
out
lret
aaa
mov
in
pop
sbb
or
jno
adc
movsb
ficoms
fwait
and
insl
sbb
inc
push
add
ja
and
fstpl
xchg
mov
xchg
rclb
cmp
push
cmp
mov
int3
rorb
subl
jecxz
sbb
in
pop
jbe
mov
add
xchg
jb
sub
sbb
dec
not
dec
loopne
test
or
adc
lret
cltd
xchg
mov
pop
shlb
repz
ja
shrl
mov
and
dec
cmp
call
lahf
xchg
push
jmp
test
jecxz
sbb
push
pushw
in
iret
mov
rorl
or
ja
outsb
imul
sbb
lods
sub
mov
fwait
xor
sbb
mov
int3
mov
and
xchg
pop
pop
scas
rorb
out
pop
push
into
sbb
fidivrl
aam
jno
test
sbb
cltd
jmp
jg
fwait
dec
outsb
out
mov
push
sbb
aam
imul
fistpll
cmp
jg
adc
mov
stos
ss
adc
in
add
jecxz
lea
les
inc
push
adc
sbb
cmc
in
push
inc
jns
stc
cmp
or
aam
mov
js
shll
jne
pop
test
adc
mov
pop
inc
push
sub
jo
and
jle
xchg
xchg
sub
fdecstp
cwtl
ljmp
pop
adc
push
test
outsb
dec
sbb
sub
sahf
js
cmp
insl
sbb
xorb
rcrb
ret
or
and
cld
out
nop
sub
rol
jle
jecxz
push
push
push
adcl
pop
sub
xchg
pop
sbb
lcall
sub
sbb
ja
sbb
add
cmpsl
dec
les
adc
outsb
add
les
push
shlb
add
scas
dec
movsl
jbe
sub
cmpb
sbb
pop
nop
and
outsl
push
xor
aad
or
xchg
sbb
inc
pop
or
xchg
push
lcall
mov
test
dec
cmp
pop
push
sahf
and
mov
lcall
mov
adc
rclb
rcrl
adc
push
xchg
add
fwait
das
sbb
fistps
cmp
sbb
xchg
cmpsl
push
sbb
bound
rcr
adc
cwtl
les
dec
jmp
in
push
adcl
add
adc
cmp
in
dec
adc
xor
adcl
jno
dec
lea
jns
cs
pop
nop
add
and
pop
rclb
mov
rclb
sar
xchg
push
cmp
test
shll
xor
js
xchg
jno
lret
add
jge
add
js
jmp
stos
out
and
sbb
cltd
int
mov
das
leave
testb
xchg
inc
and
mov
mov
sbb
movsl
das
gs
insb
sahf
mov
test
push
xchg
rcrl
sub
push
out
jae
cmp
mov
mov
shll
add
repz
repz
jp
mov
inc
mov
sbb
mov
cmp
sbb
xchg
bndstx
sar
cmpsl
sbb
sar
add
aad
rorl
or
cs
sahf
stos
cmpb
xchg
imul
movsb
and
in
mov
xchg
inc
nop
stos
pop
mov
popa
aaa
xor
ljmp
aad
ficoms
cwtl
subb
sub
mov
insl
jae
dec
test
fsubs
or
insl
push
pop
out
and
push
ficoml
mov
rol
fdivr
lahf
pop
add
in
popf
leave
outsl
jmp
test
movsl
xchg
add
inc
sbb
popl
gs
rclb
stos
in
cmpsb
sbb
xor
das
mov
jle
inc
sbb
push
jle
jbe
je
loop
pop
pop
add
cltd
xchg
cmpsl
lods
mov
sbb
cli
jle
orb
pop
cwtl
das
mov
inc
shlb
out
cmp
in
cmp
or
xchg
cwtl
xor
lea
aad
fsts
in
and
test
pop
xchg
pop
pop
inc
lods
leave
mov
sbb
cmp
cmovae
repz
cwtl
push
nop
mov
dec
fs
cwtl
sub
fwait
mov
stos
or
pop
sub
in
adc
mov
test
movsl
lock
jl
dec
mov
or
aad
lods
cmpl
outsb
sahf
lss
scas
ljmp
orl
ljmp
sbb
ficompl
stos
push
cs
push
inc
sbb
pop
or
leave
adc
xchg
call
fidivrl
or
aaa
xor
or
loope
sub
or
pop
cmp
shr
fmul
xor
out
aam
icebp
popf
inc
push
lret
cmp
rcl
xor
pop
mull
sahf
sub
push
push
sbb
out
loope
jge
ja
adc
jbe
outsl
lahf
sbb
add
cmpsl
and
mov
inc
insl
shl
movsl
das
fistps
scas
fistpll
jns
cmp
pop
jbe
fsubp
enter
dec
cmp
pop
mov
fisubs
and
sbb
aas
xor
dec
out
and
xchg
and
insb
cmp
sbb
cmp
and
imul
out
dec
xchg
daa
in
mov
rorb
xchg
push
jo
in
sub
sbb
or
fisubs
jmp
lock
daa
jl
pop
dec
xchg
xchg
cmpsl
ss
xor
arpl
xchg
loop
cmp
xor
mov
and
push
xchg
adc
lret
jecxz
rcr
adc
adc
pushw
and
repz
sbb
pop
or
sbb
xor
cmp
fldenv
pusha
addb
imul
clc
xchg
push
sahf
push
xorb
push
ret
dec
mov
xlat
jl
cmp
push
hlt
ucomiss
mov
out
cmp
push
add
mov
jno
insl
bndstx
jg
shrb
xor
dec
inc
pop
rclb
cwtl
pop
sub
xor
xchg
xor
aad
loope
push
cmp
xchg
mov
dec
mov
clc
inc
dec
out
sbb
out
xor
fildll
cmp
sbb
mov
frstor
aam
mov
lock
inc
addl
push
and
rorb
into
in
sbb
leave
pop
sbb
lret
add
repnz
mov
bound
xlat
adc
mov
mov
scas
hlt
mov
cmp
and
shrb
push
dec
lret
cmpsb
outsb
add
mov
mov
add
pop
sbb
add
sub
loopne
aaa
shl
adc
cltd
xor
sbb
das
xchg
jae
pop
sti
rclb
jnp
xchg
loope
negb
or
sub
mov
lds
xor
ret
sbb
mov
lret
jecxz
out
and
inc
testb
cmp
inc
ja
push
sbb
cs
cwtl
mov
enter
ss
aam
jbe
jmp
sbb
xor
push
inc
sbb
cli
ljmp
and
fidivrl
mov
dec
push
movsl
shlb
xchg
daa
sub
icebp
pop
sbb
iret
jns
sahf
inc
lret
cli
mov
cld
xor
xchg
sbb
push
loope
mov
lret
cmpb
pop
pushf
mov
repz
adc
outsb
jp
pop
sub
sub
cmpsl
cwtl
sbb
shlb
sbb
addr16
sub
jge,pt
out
mov
push
lds
add
dec
sub
in
xlat
addr16
lods
xor
sub
adc
enter
cmpsb
pop
sbbb
xlat
mov
mov
ja
mov
push
bound
jnp
lock
pop
sbb
sbb
xor
sbb
in
fistl
push
xchg
insl
shr
push
nop
sbb
pop
push
call
xchg
adc
clc
adc
jno
jb
lods
push
insl
pop
adc
pop
daa
jae
push
xchg
gs
mov
es
cmp
sbb
dec
or
mov
nop
mov
les
mov
push
add
in
test
push
fstps
jnp
push
nop
jne
in
mov
jge
aad
les
jl
cmp
cmp
ljmp
push
lea
dec
js
cs
lret
ret
adc
fsubr
xchg
stc
push
cmp
cmp
lods
add
ret
jno
push
sbb
add
ljmp
xchg
mov
jns
and
shl
sbb
repz
push
pop
add
adc
and
xor
flds
dec
dec
cmpsb
jecxz
jmp
loope
fidivrl
mov
lret
cmpl
dec
ljmp
aad
add
movsl
imul
push
adc
fs
daa
xchg
fwait
test
or
mov
sbb
sbb
pop
dec
divl
jnp
jno
inc
loop
pop
in
insb
sbb
xlat
push
pxor
xor
pop
iret
std
nop
sbb
movl
pop
mov
fwait
addr16
cmpsl
mov
sbb
mov
jge
adc
jbe
sub
sbb
sbb
pop
in
jge
ffree
pop
add
dec
sbb
pop
lret
cld
push
test
mov
jae
in
sbb
mov
or
mov
adc
dec
sub
ret
xchg
push
imul
and
mov
call
ljmp
inc
mov
push
pop
pusha
bound
mov
pop
daa
int3
adc
and
dec
ss
notl
xchg
addr16
xchg
fnstsw
and
ja
sub
jmp
jbe
xchg
shll
bound
xor
cmpsl
sahf
jne
sbb
jmp
push
push
add
mov
sub
sub
dec
mov
cs
arpl
lock
push
das
sub
mov
pop
pusha
daa
testb
testl
int
sbb
loopne
xor
xor
stos
cmp
mov
adc
in
cmp
int3
lcall
outsl
push
incb
sbb
mov
sbb
and
cwtl
bound
adc
cmc
negl
adc
aaa
fwait
dec
repnz
lea
nop
inc
and
jo
xchg
movsl
and
fmull
pop
dec
sbb
add
lret
sub
insb
push
or
push
cmp
inc
mov
mov
xor
add
int
fs
ljmp
mov
add
lret
enter
out
das
sbb
mov
and
sti
cli
inc
fwait
dec
movsl
aas
lret
out
and
mov
mov
cmpsb
or
ret
incl
adc
mov
jle
mulb
cld
je
loop
jae
rolb
inc
xor
fs
repnz
cmc
adc
push
andl
push
inc
les
pop
fwait
and
add
rcll
into
stc
inc
push
adc
mov
pop
pop
xlat
xor
mov
sti
mov
adc
out
mov
jle
addr16
mov
inc
inc
inc
insb
mov
sbb
ss
sub
and
sbb
mov
xchg
daa
aam
pop
shlb
inc
imul
sbb
shrl
jmp
inc
pop
divb
or
cltd
push
mov
aad
cmpsb
xchg
out
cmp
inc
loopne
push
imul
jp
mov
push
repz
xchg
mov
mov
dec
test
sbb
mov
mov
fwait
inc
pop
xor
outsl
outsb
adc
int3
push
aas
push
inc
cmp
xchg
dec
sbb
dec
sbb
pop
add
xor
out
pop
sbb
jne
sbb
jno
or
in
popa
dec
scas
push
xor
pusha
push
xchg
daa
push
jo
or
sbb
js
pop
shlb
scas
xchg
lock
fs
mov
jb
adc
cmpsb
add
cmp
cmpsl
adc
loope
mov
gs
out
test
int
addb
inc
sbb
push
leave
pop
shlb
or
sbb
dec
stos
aas
repz
mov
sarl
mov
mov
ja
or
mov
lock
fcompl
sbb
dec
adc
sbb
inc
mov
add
sub
das
rcrb
insb
fcomps
aam
outsl
mov
sub
jle
or
xchg
popf
idiv
mov
push
ss
aaa
test
mov
rcr
push
ficomps
cmp
mov
xchg
notl
dec
add
cmpsl
sbb
push
xlat
stos
add
mov
shr
jl
fsubrs
xor
and
inc
data16
sub
mov
dec
jno
dec
adc
sub
bound
loop
ret
xlat
cmp
out
mov
push
adc
stc
pop
jle
cld
dec
sbb
push
fnstcw
mov
mov
cwtl
mov
jno
xchg
sub
jo
cmpb
sahf
xor
fildl
repnz
pop
into
std
jmp
hlt
fwait
je
pop
sbb
sub
cltd
rcrb
xlat
sub
dec
lahf
mov
or
adc
jno
lret
mov
add
jns
int
and
loop
shll
pop
ret
jae
pop
cvtps2pd
sbb
fnstenvs
test
sbb
mov
xchg
lea
cmp
jb
sbb
push
jp
gs
fs
mov
jle
fs
add
xchg
js
pop
andl
add
popa
sbb
imul
mov
sub
xor
jo
fisttps
popf
sbb
sub
dec
popa
sahf
daa
ja
mov
jns
sbb
adc
pop
je
jb
das
jle
inc
lods
stos
xchg
sub
push
xchg
push
outsl
ds
nop
mov
cvtps2pd
adc
push
cmp
sbb
mov
ljmp
ja
js
xchg
out
adc
iret
adc
fwait
call
mov
jg
mov
mov
xchg
jg
push
in
mul
mov
inc
sbb
xchg
xor
push
mov
sbb
leave
mov
jg
dec
jae
sbb
push
or
cmp
sti
andb
pop
in
call
and
mov
xchg
out
int
shl
mov
jae
mov
push
jb
cmp
sbb
cltd
adc
xchg
jnp
cmp
adc
sets
dec
rorb
ss
out
inc
lods
jo
shll
adc
fcmovnu
add
test
rcrb
and
stos
adc
xor
add
or
icebp
das
push
sahf
lods
fcmovnu
sbb
jmp
dec
xchg
sbb
and
mov
adc
test
mov
jnp
dec
jmp
fistps
rcrl
xchg
jmp
xlat
cli
bnd
pop
cmp
inc
mov
adc
dec
pushf
jmp
inc
push
cltd
pop
push
roll
out
xchg
and
xlat
cmpsl
sbb
mov
mov
daa
ds
fstpt
enter
bnd
sbb
cwtl
or
or
mov
sbb
addr16
mov
test
mov
addr16
shll
nop
push
shl
pop
adc
rclb
or
shl
clc
call
sti
sbb
mov
in
sub
std
iret
xchg
out
inc
push
shrb
or
iret
stos
mov
mov
outsb
cmp
jp
jo
jns
fwait
cmc
sbb
mov
insl
aam
inc
mov
jecxz
lds
sbb
xchg
inc
push
xchg
jecxz
add
sbb
adc
cmp
lea
stos
pop
sti
sub
jle
inc
pop
xchg
ljmp
dec
enter
pusha
test
sahf
shl
mov
scas
cmp
aad
repz
rcl
cli
cltd
das
bound
sbb
sarb
in
mov
rolb
mov
loopne
sbb
call
xchg
cltd
xchg
das
xor
sbb
shrb
shlb
pop
sbb
sbb
jmp
and
cmpsb
dec
das
mov
pop
sub
sti
stos
ret
lods
xlat
inc
stos
mov
in
lret
mov
and
outsb
jbe
aaa
aaa
jg
sub
movsb
dec
xchg
sbb
and
mov
pop
mov
mov
cmc
loop
adc
scas
in
out
xchg
push
je
or
and
inc
bound
pop
sub
mov
adc
xor
sbb
inc
mov
add
sbb
popf
mov
aad
lods
aaa
sub
or
sub
ret
lret
fstl
cmpsl
adc
cli
or
lcall
sub
out
or
cmp
sbb
negl
xchg
xor
sbb
bound
jne
sbb
push
call
pop
pusha
mov
xor
js
mov
dec
mov
fstps
or
fisubrl
mov
rcr
fwait
jae
inc
repz
hlt
fistpll
push
sbb
call
dec
add
stc
mov
divl
stos
fadds
adc
leave
out
ja
xchg
dec
push
jno
rcll
jns
pop
cmpsl
push
pop
loop
pop
pushf
shlb
inc
ljmp
jnp
sahf
mov
imul
jno
add
push
push
add
icebp
sbb
lods
dec
divl
pop
sbb
jge
nop
aaa
icebp
lcall
aad
jae
or
jl
mov
jmp
enter
inc
outsb
or
xchg
cmc
insb
fs
int3
mov
cmpsb
test
movsl
imul
sbb
out
out
add
and
sahf
mov
cmp
dec
mov
sbb
inc
dec
pop
xchg
mov
inc
push
or
sbb
fisubrl
lret
scas
push
sahf
repz
ljmp
sub
push
push
mov
xchg
ljmp
dec
shrl
sbb
cwtl
push
sub
ds
jmp
adc
jbe
rclb
pop
adc
sbb
jmp
mov
cmpsb
mov
sahf
das
mov
push
dec
int
adc
push
shll
shlb
inc
mov
lods
jbe
jmp
test
push
mov
les
sbb
sbb
lea
pop
out
xor
mov
aad
sbb
ret
jp
adc
mov
addb
or
mov
es
leave
inc
sahf
pop
je
int3
faddl
mov
inc
jno
test
dec
loope
cmp
sbb
inc
popa
lret
fists
int
xchg
hlt
jp
mov
int3
imul
lock
mov
popf
xchg
icebp
aas
pop
sub
xor
mull
adc
mov
mov
rolb
test
pop
push
mov
pop
imul
xchg
mov
fnsave
and
ds
int
and
xchg
rcl
push
fisttps
leave
out
dec
fwait
mov
jbe
scas
lds
sti
mov
push
call
addps
or
mov
mov
into
je
mov
ret
jnp
sarl
movsl
cltd
dec
iret
mov
pop
aam
xbegin
insl
mov
pop
push
pop
sbb
orb
ss
xchg
xchg
add
aas
dec
inc
test
mov
cld
lret
cmp
sbb
push
inc
xchg
xlat
pop
adc
subl
imul
sub
bnd
mov
inc
loopne
adc
aad
call
cmpsl
int3
in
scas
stos
sbb
mov
xor
mov
push
mov
sbb
jecxz
lcall
xchg
loopne
push
clc
push
jo
into
shrb
aas
xlat
push
sbb
push
xchg
daa
mov
add
sub
sahf
mov
ljmp
rcll
pop
clc
push
jb
sbb
cmpb
movsl
fwait
sbb
mov
cmpsb
ljmp
es
xchg
push
mov
push
sahf
xchg
sbb
shlb
cld
sbb
jmp
add
loopne
jno
call
fcmovnu
xor
call
sbbl
jle
pop
push
xlat
pop
es
jl
sbb
mov
rolb
or
inc
mov
xchg
sbb
xchg
inc
lods
cwtl
scas
rcll
cli
sub
dec
add
ret
mov
sub
rorb
mov
ficomps
mov
inc
inc
dec
sahf
push
daa
shll
pushf
mov
scas
push
sbb
push
lds
negb
loop
add
adc
xchg
sub
push
in
xor
fldcw
jl
sub
les
ret
pop
stc
or
mov
xlat
pop
test
jecxz
adc
sbb
and
roll
mov
jecxz
inc
shrb
adc
push
clc
jnp
sub
lret
adc
and
shrl
xor
clc
rcl
xchg
pop
sub
cmp
aad
xor
dec
in
xchg
mov
pop
lods
stos
in
and
sti
mov
push
pop
push
call
xchg
icebp
sbb
dec
les
test
mov
outsb
sahf
aas
jecxz
lret
je
and
xchg
xchg
imull
xlat
cmpsl
sbb
xchg
cmp
push
and
push
jle
mov
jecxz
ss
jmp
and
sub
movsb
add
cmpsb
xor
shll
xor
mov
stos
lods
not
test
add
data16
pop
sbb
dec
clc
movsb
addr16
pop
or
sbb
sbb
das
xchg
or
mov
pop
inc
push
lret
hlt
in
sbb
js
cmp
fisttpl
xchg
test
rcrl
mov
sbb
mov
xchg
or
push
pop
ja
cmpl
pop
sbb
jne
adc
popa
mov
test
mov
and
sti
push
daa
pop
jnp
pop
fstps
push
xchg
shl
and
scas
pop
sbb
bndldx
js
and
sbb
dec
push
lock
xchg
pop
insl
jnp
dec
xor
pop
mov
dec
rcll
and
mov
cmpsb
hlt
test
lret
outsb
fildl
or
mov
cmp
addr16
sbb
lret
and
jl
pusha
movsb
adc
out
sbb
xchg
out
add
icebp
stc
imul
cvtdq2ps
dec
data16
sbb
stos
fwait
xor
pop
scas
cmpsl
pusha
mov
xor
aas
nop
mov
cld
testl
or
mov
cwtl
shll
pop
int3
repz
mov
lods
inc
add
icebp
js
or
mulb
int3
sbb
stc
sahf
mov
into
aam
push
ds
sbb
pop
int3
jne
sbb
and
lret
push
sahf
add
mov
lahf
xchg
jmp
cwtl
cmpsb
mov
push
lret
sub
jb
pop
push
sub
xchg
pop
xor
xlat
ja
xchg
dec
jmp
ficompl
or
cmp
testb
fsubl
dec
inc
mov
add
das
rclb
gs
inc
pop
aad
sbb
movsb
sbbb
aaa
cmp
jmp
sbb
push
xor
xchg
in
fisubrl
cmp
jmp
add
xchg
fwait
repnz
inc
int3
sbb
pop
and
cmp
fmuls
mov
and
pop
mulb
pop
mov
and
sub
inc
insb
cmp
test
aad
stos
stc
inc
sahf
addb
sarb
shrb
sahf
mov
xchg
int
push
sub
fsubs
sub
mov
sub
std
or
hlt
std
arpl
sub
pop
adc
xorl
or
imul
daa
pop
push
push
data16
jns
leave
fildl
jno
in
fstpl
dec
js
mov
in
xchg
cmpsl
lcall
adc
and
fsubrl
mov
xchg
mov
pop
jmp
push
sub
sub
jp
lret
jp
push
into
sbb
ret
movnti
mov
addr16
mov
into
push
push
jecxz
cmp
decb
in
fucomip
shl
ficomps
movsb
add
pop
shld
mov
add
jno
clc
les
mov
clc
pop
or
sarb
ret
sub
adc
cs
sbb
scas
mov
out
pushf
sbb
rol
mov
sahf
incb
daa
lcall
push
shl
push
sub
cmp
clc
aaa
xchg
pushf
dec
pop
sbb
addr16
movsl
inc
cwtl
or
sbb
sbb
imull
lods
bound
cmp
popf
pushf
sahf
sub
movb
fcmove
cmp
sub
mov
lock
insb
scas
sar
xor
cmp
shrb
dec
push
addr16
popa
sbb
out
xor
lret
xchg
lds
xor
pop
mov
adc
push
pop
call
sbb
std
inc
nop
pop
xor
xor
movl
inc
pop
repnz
or
sbb
out
inc
add
mov
dec
pop
dec
test
rcrb
rcrl
pop
add
shll
xchg
clc
jmp
fldt
or
adc
imul
and
rcl
push
faddp
fisttpll
outsb
inc
mov
lods
test
mov
sarb
cmp
mov
das
imul
jl
dec
popf
push
lods
dec
es
mov
rcrb
fsubl
or
fwait
mov
adc
push
in
test
filds
mov
shlb
and
psubq
inc
rcr
popf
rolb
aad
xorb
push
xchg
mov
popa
jl
mov
sbb
mov
mov
mov
call
mov
out
fldcw
call
stos
cmp
sbbl
fwait
sub
ljmp
jo
xchg
xchg
mov
sbbl
pop
xor
in
cs
sahf
pop
loopne
dec
sbbb
arpl
in
fcmove
cli
jmp
test
xchg
sub
sbb
mov
xor
mov
addl
fs
sbb
add
xchg
dec
bnd
and
adc
mov
sbb
imul
sbb
adc
icebp
sbb
nop
les
push
lcall
or
subb
push
jbe
pushl
sbb
std
and
bound
xor
fsts
aad
addl
sbb
and
adc
mov
fcmovnb
jmp
iret
lcall
push
mulb
iret
bound
out
cmp
int3
pop
ret
adc
mov
lock
js
dec
test
jnp
mov
jne
jnp
into
jg
jb
sarl
enter
push
sbb
mov
jbe
jno
jnp
or
je
test
lea
pop
xchg
pop
mov
jl
outsl
aam
out
pop
in
sar
mov
sub
sbb
or
sbb
fdivrl
leave
mov
dec
imul
xor
push
mov
dec
shll
sub
pop
jmp
jl
idivl
lea
jno
int
xor
sbb
pushf
push
rorb
inc
cld
push
adc
pop
icebp
cmp
lahf
adc
aaa
mov
mov
mov
push
pop
je
add
cmpsl
jge
mov
sbb
lcall
xchg
cltd
sub
popa
jle
push
lahf
sbb
ja
lock
cmp
mov
dec
xor
fs
loope
xchg
ret
aas
pushf
push
bound
mov
pop
out
mov
mov
sub
sub
cwtl
sbb
cmp
mov
xchg
arpl
or
idivl
sbb
jb
mov
outsb
dec
shrb
mov
iret
inc
js
aas
xchg
mov
out
xor
nop
je
pop
pusha
into
jns
lret
sub
xchg
fwait
cltd
fstpt
ljmp
or
sbb
mov
imul
mov
inc
scas
jle
repz
ss
stos
sbb
mov
pusha
xchg
xchg
push
lcall
cmp
xlat
xor
shlb
push
add
mov
mov
add
sbb
inc
pop
mov
xchg
aas
xchg
push
rcr
and
popa
sub
repz
inc
test
mov
and
adc
inc
mov
inc
fiadds
rolb
jnp
rorb
pop
ret
push
push
cmpsl
xchg
or
jno
sub
sbb
sahf
into
repz
stos
rcr
insb
sti
out
or
and
pop
popf
dec
in
orb
rcll
dec
fwait
mov
insl
idiv
or
rcrb
loop
push
mov
aam
out
push
mov
int3
adc
mov
shl
pusha
cmp
bound
out
xchg
or
or
outsl
and
sbb
jecxz
dec
add
jecxz
sbb
adcb
sarb
pushf
or
xchg
rclb
out
inc
pop
pop
ja
les
mov
dec
mov
jo
cld
push
call
fwait
iret
insb
movsl
pusha
fildll
pop
inc
sbbl
xlat
imul
mov
lea
test
aam
rcr
inc
lods
repnz
cmp
test
insl
lret
icebp
push
pop
mov
sbb
lahf
push
sarb
shrb
mov
sbb
mov
mov
in
xchg
pop
push
mov
sbb
and
popf
rolb
add
jge
pop
jmp
pop
cmp
fildl
aam
into
push
push
inc
cmp
popw
mov
popf
popf
in
cmp
outsl
pop
cmpsl
sbb
inc
push
out
shlb
xor
repnz
ljmp
movsb
jl
cwtl
sub
insl
xchg
sbb
orl
add
fbld
sbb
ss
in
mov
out
sub
push
push
dec
add
jae
lahf
lcall
shrl
jge
mov
sbb
sahf
jns
or
mov
inc
out
aad
sbb
xchg
adc
call
mov
addr16
adc
std
push
pop
into
dec
push
jne
movsl
cmp
add
adc
sbb
dec
inc
adcl
mov
shll
mov
pop
in
mov
rclb
and
in
mov
ret
inc
cli
push
test
ror
pop
xor
mov
icebp
inc
dec
cmp
cli
ja
fstpt
sbb
neg
cmp
int
push
lods
xchg
xchg
adc
mov
stos
mov
popf
cmp
fidivl
mov
mov
rorl
out
jge
jecxz
xchg
hlt
mov
jecxz
movl
sbb
jg
push
jl
xchg
mov
push
in
adcb
xchg
setle
cmp
add
xchg
mov
fisttpl
scas
jns
das
adcb
into
sbb
jns
sahf
sti
jo
outsb
lret
shrl
sbb
popf
add
jnp
jnp
push
sbb
movsb
js
jo
push
xchg
xchg
sub
lret
mov
push
push
jecxz
aad
fcmovnbe
jge
and
xchg
iret
mov
adc
push
stos
loopne
cmp
push
cltd
and
xchg
int3
pop
or
jb
pushf
lcall
imul
aas
jnp
lods
rcl
in
or
test
lret
clc
mov
mov
je
cmp
rcr
push
test
ds
pop
nop
fwait
call
repz
sbb
jne
outsb
in
stos
outsl
mov
mov
fimuls
sbb
xchg
cli
push
dec
adcl
aam
sbb
push
fstl
jge
add
int3
inc
and
hlt
out
sbb
sbb
inc
call
jge
sarl
sahf
and
inc
sbb
xor
test
sbb
xor
jmp
dec
mov
mov
insb
mov
idivb
int3
adc
js
jae
shlb
and
in
addr16
sbb
fisubs
flds
and
in
enter
adc
movsl
push
fsts
hlt
scas
inc
rcrb
aam
push
lds
push
and
mov
xor
cmp
mov
pop
cmc
xor
arpl
lock
repnz
sub
lahf
add
pop
xor
sbb
pop
cmp
pop
and
xchg
or
jle
in
sbb
ja
cmpl
fwait
lret
rolb
xchg
adc
add
icebp
jle
js
or
cmc
in
or
mov
lcall
movsb
push
mov
movsb
imul
rcrl
enter
adc
xchg
xor
sahf
xchg
add
sub
sbb
pop
orl
shlb
roll
cmpsb
sub
cmp
inc
sahf
cmp
xchg
sbb
jl
cmc
icebp
icebp
adc
ljmp
sub
jecxz
mov
mov
or
mov
clc
mov
fidivs
dec
pushf
nop
in
sbb
and
cli
sarb
out
mov
test
aad
or
sahf
lcall
out
sbb
xlat
cmp
jp
jb
adc
sbb
sub
rcrb
dec
test
imulb
push
sbb
je
stc
jle
sbb
cmp
cmp
or
test
sub
pop
mov
repnz
mov
jecxz
hlt
test
push
mov
or
or
ds
mov
jl
dec
or
lea
pop
xchg
mov
jp
adc
dec
mov
sarl
push
add
jp
and
das
loop
push
daa
shll
daa
xchg
mov
dec
cmpsl
mov
in
xchg
into
pop
add
mul
rclb
dec
mov
rcr
mov
rcrl
jecxz
lret
es
mov
mov
xchg
cs
add
sbb
inc
adc
mov
xor
fucomi
push
inc
cs
xorb
negb
call
fldl
shl
and
push
push
inc
mov
adc
add
shl
movsl
shlb
adc
loopne
int
popf
fldcw
lods
rolb
mov
stc
cmp
xchg
xor
mov
sbb
outsl
insl
stos
push
ficoms
cmpsb
insb
pushf
nop
rclb
mov
sub
dec
je
mov
lahf
xor
sub
pop
testl
popa
in
sbb
xor
das
rcrb
pop
xchg
mov
stos
rclb
testb
outsl
mov
fidivrl
js
in
repz
sbb
xchg
dec
pushf
int
loope
popf
lds
loop
bound
mov
inc
mov
sbb
mov
mov
pushf
mov
sbb
stos
jge
imul
lcall
sbb
cmp
call
jo
jle
rol
push
pop
inc
push
xchg
adc
enter
imul
daa
push
int3
leave
and
sbb
stos
stos
stos
xor
add
mov
fwait
add
cmc
sbb
pop
jae
or
or
sbb
mov
push
stos
rcl
cli
sub
push
sbb
mov
sbb
popf
mov
mov
sbb
add
push
jnp
test
fbld
mov
mov
xchg
mov
mov
sar
sarb
sbb
cltd
div
pop
sub
dec
bound
sub
bnd
rcl
mov
imul
push
sbb
mov
jecxz
add
imul
icebp
jg
dec
sbb
cmc
fcoms
or
cltd
outsb
ret
imul
into
or
in
sbb
pop
lcall
aad
mov
lea
ljmp
push
push
repz
leave
xchg
dec
fiaddl
sbbb
orb
int3
inc
mov
mov
jne
sbb
pop
jbe
mov
popf
scas
xor
jecxz
in
sbb
pop
xor
push
fsub
sbb
test
xchg
cmp
inc
sub
out
pop
push
int
insb
sahf
test
lock
lret
loopne
mov
sub
xchg
and
mov
stos
xchg
test
cmp
pop
mov
daa
sbb
jbe
int
dec
shll
inc
adc
mov
int3
pop
push
cmp
adc
pop
rorb
mov
xor
push
lods
and
repnz
cmpsb
push
push
loope
movsb
popf
imul
push
pop
out
and
aas
pop
fidivs
push
mov
xchg
sbb
cmpsl
mov
cmp
push
cli
pusha
jbe
aad
xchg
clc
xchg
sbb
lret
pop
mov
fdivr
inc
into
add
sbb
iret
sbb
movsb
mov
pop
and
jl
jne
dec
pop
inc
sbb
pop
cli
push
lock
insb
add
shrb
push
adcb
and
ret
nop
mov
dec
adc
sbb
add
and
adc
xor
iret
sarb
loopne
subl
and
test
sub
sbb
test
hlt
sbb
pop
insb
mov
test
cmp
popa
xor
cmpsb
not
mov
dec
mov
push
mov
inc
mov
hlt
and
aas
cmp
sbb
aas
push
push
push
add
cs
arpl
call
stc
nop
xchg
jo
push
faddp
sbb
ljmp
dec
push
and
loope
pop
push
outsl
faddp
insb
sbb
add
mov
rclb
sbb
add
cmp
aad
shlb
repnz
adcb
rcrl
xchg
cwtl
idivl
daa
jae
jge
inc
jp
and
sbb
sbb
mov
test
shll
daa
out
push
inc
add
xchg
sbb
into
or
sbb
divb
cwtl
les
mov
repz
sbb
and
cmpsl
outsl
xor
push
mov
rclb
mov
das
fildll
xchg
add
mov
mov
and
cmp
jae
ljmp
push
or
fiaddl
push
cmpsb
js
push
dec
or
xor
dec
sub
lea
mov
nop
push
popa
fwait
mov
faddp
sbb
mov
arpl
and
fldenv
mov
mov
and
ljmp
mov
lret
xchg
rcll
add
lcall
outsb
xor
adc
mov
insl
xlat
push
int
xchg
jge
clc
out
jbe
pop
push
mov
and
dec
ret
int3
cmpsl
fs
sbb
xor
add
push
sub
in
scas
xchg
sahf
les
fs
cltd
cwtl
adc
jns
sahf
mov
inc
lock
sarb
sbb
sar
mov
mov
xlat
adc
sbb
and
imul
and
push
and
dec
sbb
std
popa
add
xrelease
clc
and
das
ficomps
xchg
lds
testb
adc
insb
xchg
dec
sbb
pop
push
pop
sub
and
shlb
sub
cmpsl
sbb
stos
push
lods
lret
sbb
dec
dec
inc
and
cmp
sbb
rcrl
into
shll
add
in
pushf
cwtl
call
cwtl
pop
sub
jns
lcall
aam
push
or
sahf
dec
sbb
in
add
btr
out
pusha
out
in
ret
xchg
lcall
push
jo
pop
pop
adc
out
pop
test
push
xchg
idivb
in
orb
dec
shrb
inc
adc
call
jno
pop
xor
jmp
leave
add
mov
sub
int3
ds
cmp
xchg
adc
dec
jb
cmpsl
push
outsl
sbb
push
mov
out
lods
xchg
push
and
push
push
pop
inc
cwtl
mov
add
xchg
mov
mov
hlt
inc
dec
and
inc
sbb
cmp
out
jmp
leave
cmp
mov
sbb
inc
repnz
loopne
add
ret
mov
sub
sarb
nop
inc
pusha
push
and
arpl
mov
mov
xchg
dec
sub
xchg
lret
dec
repz
lea
xchg
mov
push
pop
adc
xchg
lret
cs
cwtl
mov
mov
xchg
dec
cmpl
ja
sbb
hlt
and
insl
jg
movsb
rcrb
sub
stos
cltd
adcb
mov
inc
test
int
mov
mov
hlt
popa
ret
push
jno
pop
jne
pop
sti
sbb
fstps
adc
xor
sbb
cmpsb
mov
inc
xor
mov
mov
std
mov
pop
sub
xchg
adcl
sbb
adc
xor
xor
mov
and
lea
pop
stos
scas
sbb
shlb
push
pop
pusha
scas
push
movsb
pop
lret
ret
xbegin
mov
add
std
hlt
jns
sbb
xchg
sahf
jbe
mov
outsb
jp
addr16
das
icebp
adc
sub
xor
fbstp
stos
pop
xchg
add
in
sbb
pop
cmpsb
xchg
addr16
rclb
adc
popa
ja
push
mov
push
adc
mov
sbbl
stos
addb
movsb
mov
mov
and
push
int
js
pop
dec
jmp
mov
xchg
ss
sbb
xchg
push
xchg
sbb
xor
xchg
jb
ret
repz
sub
in
rclb
cltd
mov
fcompl
dec
movsl
and
sub
pop
jae
sub
imul
stos
imul
popf
cmp
sbb
sub
movsl
outsb
movsl
jae
daa
sbb
pop
outsl
les
pop
jmp
cltd
xchg
data16
cmp
jle
jo
loop
iret
xchg
bound
hlt
mov
das
lcall
shl
rorl
pop
push
add
push
aas
das
arpl
fidivrl
cld
jge
insl
repz
xor
push
xchg
pushw
dec
jbe
jg
mov
jae
imul
xor
jge
sub
adcb
scas
push
jl
not
or
push
push
jge
jge
push
adc
sbb
inc
fs
fdivrp
mov
or
mov
testl
test
sub
icebp
xchg
mov
sbb
js
mov
push
mov
mov
mov
les
sbb
inc
pop
xor
pusha
shll
fs
or
fisttpl
in
jle
fdivl
sbb
add
dec
and
js
inc
jecxz
out
jp
mov
pop
test
rcl
mov
mov
and
cmc
push
mov
mov
pop
bnd
lcall
xchg
or
jg
xchg
rcr
inc
lahf
mov
leave
xchg
jp
xor
sub
stos
xor
lret
in
jnp
jnp
add
shr
mov
in
xlat
int
pop
rclb
rep
ljmp
jp
jae
push
sahf
or
scas
push
xor
repz
call
movsb
adc
aas
xor
adc
dec
shll
aam
sar
xchg
xchg
mov
mov
mov
mov
xchg
stc
or
dec
sbb
adc
push
in
cmp
sbb
fwait
and
xlat
mov
sbb
out
gs
mov
mov
mov
icebp
cmp
push
outsb
sarb
push
sbb
push
mov
xchg
adc
adc
jno
inc
aas
rorb
call
outsl
push
rol
loopne
popf
int3
sbb
pavgb
adc
hlt
in
movsb
pop
fwait
movsl
stos
inc
pop
xchg
jns
sbb
dec
dec
repz
dec
aad
dec
and
cmpsl
scas
cmp
mov
mov
add
or
leave
lods
xchg
mov
out
jge
jbe
adc
mov
ret
mov
xchg
mov
mov
xchg
or
push
sub
mov
jmp
sbb
call
dec
xor
pop
lock
cmp
flds
sbb
xchg
xor
xchg
clc
push
rcl
push
xchg
paddsw
jecxz
lods
sbb
xor
mov
pop
aaa
pop
mov
sbb
mov
sub
sbb
adc
jnp
sbb
adc
jmp
jbe
enter
icebp
aad
or
test
enter
lcall
adc
ret
pop
in
test
xchg
shl
sbb
inc
pop
pop
mov
addr16
add
shl
xlat
stos
cli
push
adcb
inc
movsl
xchg
fdivrl
and
outsl
push
add
push
shl
pop
xlat
sbb
xchg
imul
mov
loope
stos
addr16
imul
pop
jle
lahf
fisttps
mov
mov
and
into
xchg
sbb
jb
enter
mov
inc
cmc
add
and
popa
and
lcall
pop
or
jle
jmp
jl
sbb
scas
adc
xor
lock
adc
cmp
es
sub
push
lods
lds
dec
mov
lea
in
rcrl
gs
lret
ret
or
sar
cli
cli
jecxz
in
out
mov
iret
xchg
xchg
rol
lret
aam
or
xchg
mov
sub
xchg
mov
in
fcomps
es
int3
jmp
or
adc
xchg
pop
jp
adc
out
mov
jns
cmp
sub
mov
mov
addb
or
icebp
inc
push
daa
xor
rcl
push
mov
sbb
dec
xchg
rcrl
adc
jg
cmp
fldz
inc
push
sbb
sbb
repz
mov
cld
push
into
jns
hlt
push
sbb
jg
push
pop
stos
add
inc
inc
sub
add
leave
sbb
ljmp
shlb
or
js
inc
pop
cmp
clc
pop
fcmovnb
popf
mov
aam
jae
mov
mov
out
add
rcrb
inc
sbb
dec
test
lods
xchg
mov
shll
pop
daa
mov
lock
call
into
mov
insb
jnp
jns
sbb
ret
mov
sub
dec
sbb
and
rolb
shlb
das
sbb
sbb
je
lahf
jmp
xor
xchg
jge
xor
ds
mov
aaa
sbb
sub
adc
cli
call
gs
cmp
adc
cli
xchg
jmp
andl
aaa
shll
adc
je
lods
ficomps
inc
jmp
pop
push
ficoms
insb
inc
xchg
jl
xor
lods
or
sub
jg
rcl
dec
cmp
jmp
dec
shl
xchg
outsb
lds
mov
mov
xor
nop
ljmp
push
sbb
mov
push
jge
mov
aam
cmpsb
adc
add
psubq
pop
rolb
test
jbe
mov
sbb
add
sbb
faddl
xor
inc
mov
lcall
or
adc
sub
pop
stos
xor
mov
cmpxchg
sbb
stos
xchg
mov
shrb
lock
rcr
push
mov
lret
fsin
aam
add
fldt
jns
ficomps
jmp
test
mov
call
and
aas
sbb
mov
test
insb
adc
xorl
cmpsb
mov
std
shr
fs
pop
scas
rorb
mov
movsb
testb
mov
push
xchg
add
or
sbb
es
push
xchg
out
in
repz
add
xchg
mov
mov
enter
sub
lea
mov
pop
inc
aaa
cmp
incl
insl
es
add
xchg
fildl
movsl
mov
ror
test
sbb
cli
and
es
mov
inc
outsb
sbb
sbb
add
dec
sbb
mov
adc
inc
push
insb
lret
insb
dec
mov
xor
scas
xchg
xor
lds
jbe
cli
cmpl
bound
mov
dec
pusha
inc
out
inc
jmp
cs
inc
inc
mov
daa
pop
stos
xorb
inc
push
dec
movsl
mov
repz
sub
mov
adc
and
pop
shrl
pop
sbb
push
sbb
gs
mov
and
lods
push
sbb
jo
dec
sbb
das
pop
mov
jge
sub
and
cli
fimuls
jmp
lds
mov
xlat
sbb
and
leave
mov
adc
and
push
sbb
bound
ret
bound
outsb
and
dec
sbb
pop
mov
mov
mov
les
gs
stc
jns
add
inc
fwait
js
dec
in
and
sub
sbb
pusha
jp
jg
lret
xchg
loope
sub
and
fistps
aad
ret
ret
jp
sahf
jae
les
sbb
xor
fcomps
adc
push
shrl
rorl
cmp
les
jno
push
dec
sarl
add
adc
push
pop
data16
sbb
ret
push
inc
xchg
mov
bound
xchg
ret
aad
xchg
je
inc
pop
sub
roll
pop
add
or
and
and
add
xchg
pop
sbb
gs
in
sub
test
or
mov
sbb
pusha
cmp
rcrb
xor
mov
jg
jecxz
sbb
push
mov
ret
data16
mov
int
and
cmp
test
sub
dec
test
add
cmp
mov
add
push
cmp
push
aam
sub
repnz
cmp
in
idiv
xchg
xchg
and
shrl
lock
mov
mov
rcl
mov
cli
sbb
pop
es
in
lock
pop
inc
scas
pop
in
mov
inc
inc
std
and
sbb
data16
jb
pushl
push
push
mov
jle
adc
rcrl
pusha
pop
push
push
mov
xchg
sub
xor
fstpl
sbb
mov
fiadds
xor
jle
imul
adc
aaa
sub
int3
clc
loopne
nop
sub
fwait
mov
adc
sbb
pop
jl
push
bound
xchg
pop
or
rorb
sbb
sbb
bnd
sahf
jecxz
lcall
call
ja
sbbl
cs
adc
fstps
or
ljmp
fucom
test
ret
ret
bndstx
test
inc
dec
nop
or
inc
or
sbb
and
gs
ret
sbb
sub
stc
shrb
cmpsl
add
sbb
jmp
xor
shll
push
fcmove
inc
dec
pop
sub
pop
pop
xor
imul
mov
ss
push
fimuls
rorl
pusha
pop
aad
sub
sub
rolb
sbb
mov
rcl
clc
cmp
push
rolb
rclb
and
sti
push
sbb
dec
clc
stc
mov
cld
sbb
in
jl
aas
addr16
in
repnz
aad
push
cmp
sbb
sub
xchg
push
out
push
fmul
ss
pusha
dec
pushf
lret
sub
or
jecxz
add
jno
push
insb
ficomps
sbb
lea
cmp
xchg
popf
mov
test
cmp
ja
sbb
cmpsl
ljmp
cmc
roll
jg
xchg
js
cwtl
int
mov
mov
aaa
ret
and
mov
mov
mov
hlt
scas
xchg
xlat
jne
stc
in
fdivp
mov
sbb
sub
loop
jae
dec
xchg
mov
xor
pop
mov
sbb
cli
shll
insl
and
or
jecxz
mov
jg
mov
xor
mov
jge
add
stos
cmp
push
push
jp
fiaddl
fs
sahf
sbbb
jb
dec
addr16
inc
out
aas
rclb
lea
popf
int3
aaa
lods
jns
rcr
dec
subb
add
imul
push
and
xchg
mov
orl
scas
dec
int3
add
xchg
testb
rcr
dec
movsb
popa
cmpsl
sbb
xchg
mov
push
in
mov
mov
ljmp
mov
xchg
cs
sub
sub
pushw
adc
pop
push
gs
cmp
mov
movsb
sbb
push
inc
pop
xchg
lods
push
sahf
loop
dec
pop
orb
mov
dec
repz
sub
imul
cmp
mov
push
and
pop
negl
stos
cld
rcrb
jl
jmp
cs
jl
repz
mov
cmpsl
inc
out
rorb
fmull
sbb
xchg
xor
xor
xchg
in
lcall
je
mov
pushf
adc
fiadds
mov
out
add
icebp
add
shl
lock
add
lea
jb
xchg
ror
mov
daa
outsb
ds
js
in
imul
mov
sbb
fistpl
arpl
dec
icebp
xchg
or
xchg
and
xchg
test
imulb
dec
sub
push
add
fdivr
push
pushf
mov
pushf
pop
shll
pop
add
dec
sbb
cmp
lcall
xchg
repz
pop
add
das
sbb
jae
pop
les
add
shrl
sahf
divl
mov
and
xchg
xchg
icebp
ja
inc
inc
jmpw
out
neg
aad
shll
sbbl
nop
mov
mov
jo
push
or
sbb
xchg
mov
inc
and
pop
sbb
or
fcoml
push
or
sti
popa
inc
sbb
mov
mov
mov
and
fdivs
bound
sub
xchg
sbb
sbb
cltd
out
pop
mov
in
pop
lea
jle
adc
out
inc
outsb
lods
ja
mov
jecxz
xlat
xchg
repnz
std
gs
dec
mov
add
imul
std
aad
xor
into
dec
jnp
ss
push
xchg
xchg
mov
cmpsb
fstpl
insl
mov
pushf
xchg
daa
loope
shr
inc
xchg
dec
cmp
outsl
inc
pop
pop
mov
sbb
fmul
cmp
lods
test
xchg
cmp
or
daa
sub
fucomi
xchg
jle
in
rolb
shlb
xchg
push
mov
pop
push
sbb
inc
in
nop
mov
sbb
jns
fnsave
fwait
outsl
je
sar
aad
dec
out
dec
in
ret
push
xchg
and
roll
pushf
and
in
dec
loopne
outsb
push
cmpsb
int3
push
mov
subb
mov
in
jo
and
xorb
jns
adc
stos
jae
push
in
rcrl
push
xor
lcall
mov
mov
sub
cli
and
jg
stos
aad
movsb
jnp
sbb
mov
insl
out
mov
rorb
iret
jge
cmpsl
jae
sbb
bound
lea
jno
pop
and
in
add
mov
cmp
xchg
nop
xorl
mov
das
fcmovne
ds
dec
cmp
imul
pop
aad
nop
xchg
add
dec
dec
leave
enter
pop
adc
add
icebp
and
xchg
jbe
add
hlt
xchg
push
test
cs
jp
sbb
jmp
adc
inc
sbb
cmp
jmp
popf
jb
pop
in
mov
out
in
jge,pt
mov
push
in
mov
dec
jecxz
sbb
and
and
je
and
mov
mov
orl
pop
jge
lock
adc
loop
cmp
xchg
cli
mov
push
rcl
sub
jecxz
xchg
hlt
add
dec
jne
rclb
lcall
adc
pop
mov
shl
mov
cmp
push
sbb
imul
mov
rcrb
sub
sbb
jp
sarb
in
enter
ret
inc
mov
mov
addr16
shrb
mov
xchg
push
dec
jo
mov
push
push
cmp
out
fildl
shlb
inc
cmp
jns
frstor
inc
pusha
push
pushf
enter
fcmovbe
xor
sbb
cmc
ss
mov
rol
clc
jnp
xchg
mov
jb
cmpsb
sbb
sbb
and
mov
pop
mov
repnz
sbb
rorl
xchg
cli
xorb
lahf
sbb
dec
push
add
into
in
push
push
jb
test
les
test
sbb
ja
dec
incb
jb
inc
dec
sbb
je
add
inc
adc
popf
jae
sbb
push
es
pop
dec
sti
pushf
and
int3
xchg
jg
or
sbb
or
rclb
loopne
test
jno
add
add
popa
sbb
adc
popf
minps
push
push
pushf
repnz
mov
sahf
mov
pop
ja
push
jo
mov
shr
daa
mov
jg
loopne
cmpb
xchg
dec
outsb
mov
xor
push
sub
imul
sarb
push
cmc
mov
jo
shl
loopne
repnz
pop
cld
das
nop
mov
outsb
add
rcl
pop
ljmp
cs
test
movsl
adc
aas
pop
push
mov
sbb
xchg
in
in
jnp
fnstenv
jmp
push
jl
sbb
xchg
aam
shl
movsb
mov
mov
mov
arpl
outsb
dec
cld
push
sub
push
cltd
fadds
out
cmpsb
xchg
xchg
add
dec
cmp
xchg
xor
push
and
fcmovnbe
cmpsl
mov
cmp
cmp
sbb
mov
mov
xchg
fstpt
mov
into
sbb
enter
or
pop
sub
push
cltd
int
mov
rcr
aad
pop
push
movsl
jo
adc
mov
les
jge
out
cltd
sbb
out
xchg
inc
dec
sub
add
adc
orb
cld
insb
rol
mov
loop
sbb
je
in
xchg
int3
jp
dec
shlb
lds
rcrb
insb
les
xchg
fcompl
fdivrl
jmp
pop
repnz
inc
jne
shrb
mov
cwtl
sbb
inc
mov
std
cmc
sahf
sbb
jge
es
pop
xor
xchg
push
and
jo
test
push
faddl
adc
mov
js
push
aaa
push
int
push
dec
xor
pand
incl
test
dec
ret
stos
fstl
mov
out
lret
add
or
sub
mov
push
cld
or
push
mov
push
loop
xchg
out
test
rorl
xchg
adc
jmp
lods
ss
gs
ficoml
fsubs
sbb
in
lods
out
inc
cwtl
jl
roll
dec
push
out
add
dec
adc
xchg
sbb
test
lret
mov
or
sbb
fucomi
xchg
fs
mov
fwait
pop
shrl
and
mov
adc
sbb
outsb
push
in
pop
negb
js
push
pop
or
sbb
enter
lods
cmp
cmc
and
std
mov
inc
push
dec
dec
jb
daa
cld
push
testb
mov
rcrl
psrld
xor
or
fistl
stos
and
filds
xor
sbb
loopne
inc
das
rcll
mov
jnp
or
xchg
push
xor
sbb
inc
lahf
xchg
add
or
sbb
test
cmpsb
rcr
movsl
inc
lret
xor
pop
aaa
hlt
push
jo
adc
in
call
mov
jo
add
mov
xchg
mov
and
in
fiadds
outsb
sahf
jg
mov
lea
cltd
adc
xor
push
jg
decb
mov
mov
pusha
sahf
hlt
push
call
push
les
nop
xor
dec
push
std
rorb
mov
xchg
arpl
add
mov
xlat
xorb
mov
shlb
and
sbb
mov
addr16
ret
xchg
ret
aam
idivb
imul
test
jmp
pop
mov
ret
inc
mov
push
sbb
cmp
jle
add
inc
sbb
jp
out
adc
cmc
in
insb
adcl
call
and
cmp
fldl
pop
push
xchg
cmp
jle
je
mov
vunpcklps
push
pop
je
jle
aad
imul
cli
enter
jo
or
pop
andl
dec
sbb
mov
fbstp
push
inc
push
adcb
push
fwait
pop
push
jbe
mov
adc
fisttpl
test
pop
ret
dec
dec
xchg
pop
adc
jbe
sbb
iret
jecxz
pop
sahf
outsl
jmp
fdivp
xchg
jo
ja
stos
ret
rorb
inc
push
loop
sbbb
mov
nop
mov
in
setno
ret
jbe
shlb
pop
mov
mov
and
inc
nop
mov
les
jecxz
or
aam
sbb
scas
cltd
adc
mov
jo
xchg
pop
add
xor
xchg
sbb
shlb
pop
ret
adc
push
out
sbb
adc
movb
loop
and
lahf
sbb
mov
xchg
adc
dec
push
sbb
inc
lods
out
add
push
inc
in
movsl
pop
imul
imul
stc
sub
xchg
es
cltd
roll
repnz
sbb
fcompl
or
dec
ss
xor
push
sbb
sbb
fistpl
imul
out
xchg
sub
int3
xchg
fcomi
addl
sbb
pop
sub
cmpsb
inc
rclb
dec
popf
test
cmp
push
add
movsb
pusha
sbb
fildl
int
insb
cmc
icebp
push
jo
sbb
loop
popa
pusha
mov
mov
mov
pop
jno
rorb
hlt
jg
xchg
rcrl
inc
push
pop
dec
lods
cmpl
or
sbb
xor
pop
dec
stos
repnz
lea
cmpb
and
sti
fwait
inc
xchg
iret
mov
inc
dec
cmpsb
lcall
dec
sbb
loopne
cmc
cmc
mov
add
outsl
std
jb
mov
add
xchg
movsb
test
cmpsb
add
out
rcrb
aad
loopne
loop
mov
out
icebp
shlb
sahf
stc
lret
sub
xchg
lock
xor
sahf
ja
stos
sbb
pusha
adc
fnsetpm(287
mov
out
inc
and
mov
int
sub
jg
cmp
ss
stc
dec
push
sbb
add
incb
xchg
xchg
out
loopne
mov
xchg
xchg
nop
xchg
jae
dec
mov
mov
sbbl
int
lods
aad
xor
imul
lods
mov
fimull
xchg
jnp
fcoms
pusha
std
cmp
adc
xor
mov
jp
mov
mov
mov
push
shlb
xchg
xchg
das
cmp
daa
cli
jno
mov
pop
inc
in
mov
xchg
sbb
pushf
jae
add
leave
cmp
rcll
call
nop
or
dec
cmpsb
mov
imul
iret
lods
mov
adc
sbb
popa
aas
out
call
sahf
lahf
push
push
push
pushf
jns
pop
test
mov
xor
cltd
jnp
out
hlt
inc
cmp
movsl
push
xor
jae
fsubrp
mov
hlt
xchg
test
cmc
cmp
inc
inc
inc
fiaddl
je
adc
popa
lret
jl
insl
lock
nop
cli
add
adc
sbb
scas
pop
jae
test
mov
aas
mov
fisttpl
mov
je
dec
mov
fst
inc
mov
xor
mov
stos
aam
adc
xchg
jp
lahf
popf
rcl
ja
push
and
push
das
mov
pop
adc
sbb
and
sbb
pushf
outsl
dec
push
and
xchg
test
loopne
pushf
xchg
sbb
leave
add
dec
mov
sub
sbb
mov
pmuludq
sti
sub
and
mov
sbb
scas
or
fisttpl
cmc
sub
mov
pop
pop
sub
sbbb
dec
daa
sub
dec
lock
sub
inc
out
cli
fs
nop
out
test
test
pop
xor
pop
pop
xor
or
int
arpl
loope
fucomi
scas
mov
pop
jg
and
jle
xchg
icebp
or
fmulp
out
push
pop
adc
data16
test
icebp
sbb
dec
xor
stos
mov
cld
cld
sti
aam
pop
mov
xor
mov
xorb
adc
fwait
pop
pop
sahf
stos
jge
xchg
dec
or
ds
cld
mov
outsl
lods
loop
mov
jmp
sbb
or
lcall
push
sahf
rorb
js
adc
cmpl
mov
test
mov
enter
cmp
movsb
hlt
pop
inc
aad
xchg
fsubl
dec
out
lods
adc
lret
and
xorl
mov
aam
lock
xchg
insb
rcrb
shll
inc
adc
mov
lahf
outsl
jns
fistl
inc
insb
sbb
aam
iret
cmp
bound
dec
xor
mul
sbb
aad
gs
mov
sbb
pop
fistps
xchg
js
jge
sbb
dec
and
js
loope
sar
push
and
stos
iret
jbe
pop
sahf
call
lock
sahf
mov
les
ss
sbb
jg
push
repz
lret
jo
xor
arpl
mov
dec
ja
and
xchg
outsb
movsb
pop
add
push
dec
jge
and
mov
cld
or
adc
test
dec
fld
dec
mov
shrl
or
ja
into
sarl
and
jae
das
and
mov
push
mov
shr
dec
adc
xchg
cmp
js
gs
gs
pop
jp
dec
scas
lahf
sti
jmp
push
push
popf
outsb
adc
cmp
jnp
and
mov
and
ss
cwtl
mov
mov
pop
leave
sbb
mov
data16
xchg
mov
pushf
push
adc
and
fidivrl
cmp
adc
xchg
out
inc
aam
lret
pop
mov
jg
adc
or
test
fimuls
test
sbb
push
pusha
mov
sub
loop
push
arpl
in
mov
sbb
mov
sbb
cli
stos
fsubrs
or
outsb
add
and
nop
cmp
ficoml
subl
pop
imul
test
xlat
sbb
mov
mov
cmpsb
pop
call
pushf
dec
mov
aas
sahf
inc
mov
xchg
stos
add
sub
xchg
and
les
pusha
mov
jno
jl
cmpsb
ljmp
dec
sbb
lock
pop
cwtl
daa
stc
shr
mov
adc
mov
xchg
pushf
sar
jnp
rcr
int3
xchg
sbb
xor
xchg
ret
das
add
fstl
sbb
sarl
or
adc
in
mov
sbb
pop
clc
push
sahf
mov
in
gs
out
fwait
or
xchg
mov
jle
push
push
jmp
lea
std
push
dec
cmp
dec
pop
nop
xor
mov
xchg
test
shll
ret
or
or
add
rclb
scas
xor
sbb
cmc
dec
xchg
pushf
fdivp
hlt
clc
mov
sbb
negl
rclb
jnp
xchg
les
cmp
mov
test
je
jno
nop
lcall
jno
sub
xchg
sbb
xor
jmp
mov
push
or
or
or
in
fstpt
leave
aaa
rorl
mov
mov
sbb
pop
in
cmp
add
shlb
sub
cwtl
loop
sub
mov
push
sbb
xchg
jno
cmpsl
cmpsl
movsb
jno
shlb
mov
adc
sahf
jg
loop,pn
icebp
adc
jbe
cmc
pop
sahf
orb
repz
test
sarb
mov
xchg
and
pusha
inc
mov
push
mov
mov
mov
mov
repnz
xor
adc
add
add
adc
loope
pop
xchg
outsl
and
stos
jns
fcompl
sub
sbb
xchg
out
xor
data16
lds
ret
adc
adc
sarb
add
dec
test
cmpl
mov
shrb
data16
pop
add
out
rolb
in
imulb
pop
insb
pop
sbb
cmpsb
lret
and
movsb
and
adc
call
sbb
or
add
sub
jg
sbb
or
inc
pusha
inc
adc
int
mov
sub
push
xchg
mov
lods
push
adc
dec
mov
mov
xor
mov
mov
and
jl
adc
xchg
fcompl
sahf
sbb
stos
fwait
ret
jl
mov
mov
lret
int3
scas
mov
xchg
xorl
adc
sbb
mov
mov
mov
xchg
push
cmp
push
jnp
cmp
adc
in
sbb
mov
xor
mulps
adc
pusha
loop
cwtl
dec
rcll
inc
fwait
and
cmpsl
cmp
lods
rclb
ljmp
or
pop
outsl
or
outsl
cld
fisubl
mov
pop
fcmovne
mov
mov
fldl
push
push
jmp
fwait
mov
mov
sahf
add
xchg
inc
adc
mov
sbb
movsl
hlt
mov
push
push
pop
sbb
popf
loop
push
pop
mov
dec
jmp
and
cmpsb
mov
xchg
push
nop
popf
jmp
test
pop
fwait
jmp
sbb
mov
jo
icebp
out
rorl
mov
ficoms
dec
mov
fstp
xchg
popf
inc
dec
adc
cmpsl
mov
movsb
sarb
fs
test
xchg
sub
les
bound
hlt
add
xchg
sub
lret
out
sbb
lcall
addr16
das
loopne
sub
in
out
pushf
aaa
sbb
not
stos
sub
dec
xor
out
sbb
adc
loopne
pop
push
xorb
pop
nop
xchg
int
lcall
rcl
and
aaa
push
roll
pop
shl
dec
stos
pop
nop
mov
lods
gs
stos
sbb
orl
in
fs
add
lahf
mov
sbb
adcb
movsb
pop
scas
push
pop
sub
inc
push
jmp
out
xchg
lock
cmc
xor
clc
jmp
sbb
inc
xor
or
jo
out
pop
dec
jne
push
or
jmp
pop
in
lahf
jo
lods
sti
in
lds
les
add
xor
cmp
mov
sbb
pop
jmp
push
rcll
fnstsw
pop
jecxz
lret
fwait
leave
xor
popf
loopne
sbb
mov
lret
jnp
call
out
loopne
stos
mov
lods
push
jmp
or
inc
cmc
xchg
outsb
movsb
roll
sbb
jge
out
dec
ljmp
or
pop
data16
xor
and
jbe
insb
shlb
pop
fidivs
sahf
push
sub
scas
sbb
xor
mov
sbb
sahf
pop
ss
fidivl
push
xchg
fcompl
lret
in
mov
lods
adc
data16
sti
push
xor
pop
mov
rclb
sub
aas
xchg
push
mov
pushw
add
das
and
xlat
adc
in
movsl
cmpb
push
test
je
sub
sti
sub
sub
jno
or
dec
arpl
insb
pop
mov
push
mov
call
lock
xchg
cli
ljmp
or
outsl
notb
int3
popa
lds
adc
nop
xchg
xchg
aam
or
fadd
jl
and
ret
xchg
insb
mov
cmp
int3
jecxz
aas
sbb
push
xor
cld
mov
push
or
lods
pop
xor
pop
dec
sbb
stos
outsb
or
jo
push
fnstcw
mov
dec
push
cltd
rcrb
into
les
popa
xchg
lret
cmp
jmp
xchg
sbbb
popa
sbb
dec
sahf
xor
mov
and
notb
std
pop
sbb
push
subl
mov
lds
loopne
imul
cmp
ds
mov
ja
push
xor
stos
gs
rclb
sbb
xchg
dec
enter
pop
in
rcrb
das
xchg
jb
je
shlb
and
dec
mov
lods
sarb
daa
adc
ficoms
fstps
lods
les
pop
stos
jo
lds
in
xchg
test
push
shr
lret
dec
and
int3
xchg
rolb
rcll
sbb
sbb
stos
fsub
xchg
xor
cmc
in
sbb
mov
cmp
add
rcl
xchg
repnz
cld
fsubrp
cli
mov
cmp
rclb
and
sbb
and
fwait
push
movsb
or
jg
xorl
pop
push
insb
mov
mov
sbb
adc
mov
shrb
sbb
and
sub
leave
xor
add
fimuls
mov
scas
jo
das
pop
xchg
pop
mov
xchg
lea
cld
aad
and
in
jl
xor
int3
movsl
hlt
test
push
sbb
mov
sbb
jmp
cmp
popf
and
mov
pop
loop
inc
adc
push
fsubrl
pop
mov
pop
lods
push
adc
mov
mov
add
nop
cmp
fildll
fisubrs
cmp
call
std
cmp
test
pop
movsl
arpl
inc
mov
add
mov
dec
stc
loope
sbb
lcall
jns
and
js
jp
adc
xor
fidivrl
xorl
jmp
xchg
xchg
aam
push
stos
sbb
jo
cmp
xchg
in
outsb
mov
mov
jae
or
jmp
jmp
arpl
mov
jl
scas
or
sahf
call
push
sbb
push
test
movsl
mov
xchg
push
inc
push
mov
sbb
dec
sbb
add
and
insb
lret
dec
cmp
dec
pop
sbb
adc
or
cmp
dec
jbe
cmpsb
sbb
jecxz
shr
sbb
sbb
jne
and
mov
imul
fnop
sub
out
xor
arpl
mov
mov
xchg
into
cli
lret
outsl
mov
sbb
test
jmp
aaa
not
xchg
jmp
out
xor
cwtl
push
mov
movsb
xlat
sti
insl
shrb
daa
in
negl
push
push
add
nop
xor
sarb
rorb
inc
sbb
pop
scas
aad
sahf
fisubl
pop
dec
adcb
clc
inc
mov
cmp
cmc
stc
stc
fwait
xchg
mov
aad
pop
xlat
inc
fs
push
pmullw
pop
xor
test
aam
jno
mov
pop
sahf
push
mov
imul
clc
mov
ret
jmp
fwait
sbb
sbb
or
cwtl
jnp
jns
jae
and
xor
jmp
clc
rol
xchg
outsl
fiaddl
and
cmp
push
inc
sahf
inc
cmp
add
add
xor
rcl
movsl
fcmovb
dec
mov
fildll
xchg
les
mov
jmp
cmp
xchg
ret
in
inc
mov
pop
mov
iret
div
sbb
nop
push
add
jmp
adc
fistpl
pop
hlt
mov
popf
sarb
xlat
fcoml
cmp
sbb
jp
xor
fdivl
popf
pop
cli
sbb
stos
and
orl
mov
and
shll
push
push
sbb
cli
mov
mov
bnd
xchg
push
icebp
lods
pop
sub
sbb
sbb
test
mov
lea
imul
orb
mov
sbb
dec
icebp
push
xchg
add
sbb
out
gs
sbb
sub
dec
cmp
jnp
mov
pop
pushf
or
cli
fcmovbe
in
add
or
push
jp
in
mov
sbb
push
stos
scas
xchg
mov
cmpsl
pop
icebp
jmp
clc
push
cmc
dec
push
mov
add
cmp
xchg
int
sub
in
pop
push
lahf
or
mov
cmp
cmc
dec
dec
xor
sbb
inc
aaa
sub
jb
icebp
pop
data16
in
repz
cmp
notb
mov
pop
cmp
jae
stc
pop
and
lock
shlb
cmp
xchg
inc
je
imul
fwait
xchg
adc
cs
aaa
sbb
mov
fmuls
cmpsl
dec
xchg
shlb
or
jbe
icebp
fstpl
sti
iret
es
sbb
in
frstor
pusha
outsl
out
call
aas
sbb
sub
push
icebp
sbb
mov
push
stos
and
pop
push
sbb
push
shll
pop
shll
sti
sub
mov
sbb
xor
xchg
dec
std
add
push
jo
loopne
ret
mov
xor
sar
mov
jle
lret
sbb
mov
xchg
sub
inc
pushf
movb
aam
xchg
jnp
mov
push
inc
gs
cwtl
out
mov
cmpsl
call
sbb
shrl
lcall
dec
mov
sbb
lret
insl
xchg
pop
fstl
aas
popa
mov
repz
add
pop
cmp
je
cmp
sbb
or
push
sbbl
jns
jge
xstore-rng
cmpsl
ret
cwtl
xor
das
mov
lahf
cmp
adc
insl
in
jnp
scas
out
sahf
xchg
pop
fisubrl
jle
fsubrs
loopne
pop
dec
sbb
inc
mov
or
mov
mov
sahf
enter
ljmp
rorb
mov
leave
sbb
xlat
loope
cld
sbbb
enter
sbb
lods
test
out
dec
test
mov
xor
fisttpl
mov
mov
mov
repz
out
cmpsb
nop
sti
daa
xchg
stos
lds
cmp
rorb
scas
cmp
sbb
pop
call
xchg
xor
fidivrs
pushf
lahf
adc
xor
jge
faddl
cmp
mov
xchg
cwtl
adc
or
mov
outsl
inc
xor
jge
out
xchg
outsl
and
cmp
adc
in
test
xchg
ss
push
popf
call
sti
adcl
int
rorb
mov
jecxz
adc
rclb
and
push
and
dec
rolb
sahf
and
mov
fucomi
mov
std
ljmp
sbb
jno
lcall
insb
inc
icebp
mov
and
mov
xor
test
xchg
arpl
sbb
xor
and
mov
xchg
mov
xor
jbe
xor
cmc
dec
pushf
push
xor
aam
jo
xchg
inc
xchg
jno
mov
sbb
xchg
and
push
or
mov
shrl
in
push
and
std
ja
jb
pop
mov
out
xchg
shrl
push
sub
cmp
sbb
aam
sub
les
jae
test
outsl
lret
loop
add
mov
adc
add
cmpsl
js
pop
stos
ret
or
pop
test
ror
xrstor
jp
sbb
jo
sbb
jmp
data16
mov
std
enter
lods
aad
cs
sahf
xor
dec
fisttpll
adc
fucomp
mov
or
mov
ret
push
mov
mov
inc
divb
or
push
push
sbb
fdivrl
sub
test
push
int3
cmp
ljmp
ja
push
cmp
dec
xor
outsb
les
sar
jecxz
stos
out
inc
xchg
leave
inc
or
mov
sbb
add
mov
adc
loop
add
sahf
sbb
and
mov
xchg
lcall
or
mov
pushf
push
negb
xchg
aaa
or
pop
xor
mov
je
cld
xor
jo
pop
pusha
pusha
sbb
out
push
std
iret
xchg
ss
jl
hlt
sub
jge
add
sub
or
add
cli
mov
int
sbb
rcl
lret
out
icebp
test
mov
push
ss
aaa
outsl
bound
pop
dec
sub
jne
shl
jp
push
sahf
icebp
add
and
cmp
repnz
jbe
std
in
psllq
movsl
sbb
adc
ret
push
and
jge
xchg
mov
fyl2xp1
xor
orl
or
scas
mov
pop
por
ja
lea
mov
in
vmaxps
adc
lea
addl
xchg
pushf
cmpsb
or
out
fiadds
cmpsb
adc
in
xchg
mov
sbb
pop
inc
jb
mov
popa
sbb
fwait
push
and
iret
rolb
ljmp
les
and
in
fidivrs
lret
jp
sbb
add
sub
adc
sbb
mov
rcrb
outsb
test
aaa
bound
sbb
cmp
sub
hlt
aam
and
add
adc
inc
sahf
ja
mov
insl
addl
int3
mov
sub
imul
adc
loopne
sbb
lock
pop
sahf
lock
or
inc
mov
xor
mov
in
xchg
pop
fwait
xchg
mov
loop
cmpl
rolb
jmp
jge
inc
outsl
add
jge
lock
imul
fcmovbe
xchg
dec
ficomps
jecxz
mov
xor
sbb
rorl
movsb
or
out
adc
sti
hlt
pop
mov
and
cmp
xor
les
aam
popf
pop
imulb
mov
sub
ret
in
sbb
enter
stos
mov
add
xchg
and
xlat
hlt
jecxz
test
sti
dec
sbb
test
rorb
or
xchg
pushf
push
sbb
cmc
jo
popl
into
test
pop
push
push
faddl
sbb
pop
xor
cltd
xor
mov
shrb
jecxz
mov
call
dec
mov
shlb
sub
mov
inc
roll
imul
shl
fidivs
push
dec
or
push
out
cwtl
fsubl
in
cmp
lcall
xchg
fildl
sbbl
mov
jb
mov
xchg
lahf
lds
and
lret
call
bound
in
rclb
mov
sbb
dec
ficomps
xchg
imul
shl
jae
mov
xrelease
push
shl
dec
loopne
jns
xchg
mov
and
sub
xorl
cwtl
mov
dec
rclb
sbbb
adc
sbb
inc
mov
cmp
mov
adc
dec
adc
es
sbb
rclb
and
shl
dec
mov
sbb
or
outsb
and
in
jae
push
cwtl
inc
or
mov
rcrb
cmp
lock
xor
pusha
sbb
pop
enter
cmp
push
out
push
xchg
out
add
aaa
sbb
dec
mov
rcrb
fnstenv
sbb
pop
pop
pop
js
sub
dec
inc
lcall
adc
cmp
mov
pop
fcoms
in
stc
sbb
or
xchg
test
aaa
inc
and
jecxz
mov
push
popa
into
inc
fstp
jno
in
sbb
cmpsl
sahf
inc
xchg
daa
std
sarb
mov
push
imulb
cs
nop
scas
dec
sbb
fdivrs
mov
fwait
aaa
adc
cltd
sbb
and
dec
mov
pop
or
pop
in
outsl
mov
xor
add
scas
xor
mov
sub
ret
ljmp
jp
pop
je
movsb
adcb
rcrl
mov
mov
lds
repz
arpl
add
imul
mov
out
mov
ficoms
sbb
pop
push
xor
add
dec
aam
or
fs
pop
dec
daa
imul
xchg
sub
pop
or
out
xchg
xchg
pop
dec
outsb
lods
sub
imul
and
xor
inc
out
inc
sahf
inc
bound
mov
lret
ficomps
addr16
mov
xchg
dec
addr16
out
clc
or
push
inc
sbb
scas
andb
out
sbb
and
inc
imul
xchg
outsb
stos
push
and
fstpt
clc
bnd
enter
mov
xor
ret
imul
jae
push
mov
ja
sahf
cmp
add
shlb
sbb
in
lea
pop
enter
fcoml
and
loopne
sbb
cmpsb
jno
sahf
mov
xor
inc
in
or
xor
fiadds
xchg
js
inc
cmp
add
ss
adc
fistpl
or
cmpsb
or
dec
pop
mov
inc
push
subl
pop
test
out
repz
lock
movsl
lods
or
loope
add
mov
scas
insl
fdivp
or
mov
sub
xor
xlat
sbb
mov
bound
adc
or
mov
pop
ds
jo
insb
push
sbb
cmp
cmp
sbb
dec
xchg
int3
mov
jp
or
test
insl
sbb
lock
fists
cld
xchg
xchg
add
xor
movsb
insl
sbb
imul
pop
jb
mov
xor
inc
testb
out
add
rcrb
aas
ljmp
cmpsl
mov
movsb
adc
vphadduwd
outsl
and
push
cmp
mov
ljmp
push
mov
push
mov
ss
cmc
cld
xor
ret
movsb
lcall
repz
popf
adcl
cli
dec
loopne
xchg
sbb
xor
ss
sarb
subl
sub
lret
stc
sarb
popf
ret
movsl
adc
or
test
dec
mov
sbb
push
loope
insl
ss
inc
addr16
rclb
adc
mov
enter
add
mov
dec
sahf
jbe
lds
adc
sbb
inc
push
push
rolb
dec
cwtl
or
jnp
fwait
add
xchg
lods
push
dec
out
jle
mov
shll
push
mov
es
xor
imul
clc
lock
fmuls
adc
lds
and
shll
jns
jnp
mov
push
add
shlb
push
call
mov
inc
push
adc
in
adc
sub
fadds
fidivrs
lods
mov
insb
mov
sbb
test
jecxz
or
push
adc
sbb
fstpl
push
pop
jl
inc
arpl
xchg
cmp
mov
pop
sbb
add
mov
lcall
inc
adc
add
xchg
and
jns
adc
ficoml
jno
push
out
sbb
push
jl
rorb
fstpl
or
arpl
repnz
xchg
cmpb
in
sbb
push
mov
mov
xchg
xchg
cmp
xor
sub
xchg
repnz
mov
jae
mov
or
lahf
mov
sub
stc
in
lret
jbe
fstp
inc
int3
aad
sbb
jo
test
fwait
les
in
cmp
mov
sbb
fst
outsb
sarw
nop
xor
push
call
call
test
sti
outsb
push
das
fsub
je
mov
push
dec
dec
leave
hlt
imul
ret
aas
dec
mov
mov
and
lea
push
int
jne
scas
adc
shrb
movsb
inc
mov
push
std
mov
sbb
mov
adc
insb
fsubr
cwtl
or
sub
adc
lret
test
sahf
loop
dec
in
lret
sbb
test
xchg
cmp
mov
add
outsb
push
outsl
imul
in
scas
push
popf
mov
mov
dec
gs
sub
inc
push
xchg
nop
in
and
movsb
orb
jle
aas
sti
sbb
std
or
lcall
cmp
push
push
ficomps
dec
insl
in
sub
fmuls
jecxz
cmp
rcl
sahf
in
or
fucomp
jmp
fistpl
xchg
aaa
and
push
fiadds
frstor
xchg
push
push
sub
mov
xchg
inc
pop
mov
jmp
cmp
into
pop
xlat
test
adc
sbb
mov
jl
pop
pop
setge
pop
xor
adc
adcb
sub
sbb
adc
lret
jno
jle
add
add
jno
jg
icebp
lock
xchg
sub
loope
arpl
sbb
xchg
shlb
or
adc
sbb
ljmp
insb
inc
out
jmp
xchg
rclb
aas
aam
roll
jge
and
push
mov
sahf
int
ficomps
push
inc
fists
leave
out
cli
xchg
sbb
mov
stc
sbb
in
add
mov
test
popa
or
daa
xor
dec
push
cmp
pusha
int3
xchg
jno
cli
push
jnp
sbb
inc
bound
sbb
cmp
arpl
mov
xchg
xor
mov
inc
push
sbb
lds
dec
pushf
icebp
sub
adc
imul
cmp
push
jbe
cli
mov
scas
addr16
daa
nop
jmp
adc
mov
je
fcoms
movsl
inc
sub
inc
pop
cmp
sub
xchg
sub
sub
push
mov
jne
imul
push
dec
cmp
or
cld
sbb
sub
and
cmp
push
mov
fistpl
add
xor
mov
or
cmp
daa
roll
and
cmpl
ss
or
fwait
sbb
fcomps
jo
xchg
mov
adc
loop
shll
cmpsl
pop
xchg
cwtl
outsl
fisttpl
xchg
dec
xchg
std
push
push
dec
ds
popf
sbb
es
cmp
addr16
mov
push
cli
popa
mov
rorl
test
sbb
jl
imul
loope
mov
sub
xchg
jge
mov
inc
mov
addr16
sub
sbb
or
js
pushf
fs
fstpt
pushf
mov
cmp
sbb
popa
in
add
fldt
add
and
sub
jns
adc
into
subb
test
lret
push
movsb
gs
pop
sbb
inc
scas
xchg
cmpsl
js
dec
xchg
cmp
ljmp
mov
cmp
add
insl
imul
and
sbb
inc
lock
imul
push
jbe
cmpl
add
js
ret
repnz
jle
mov
or
daa
shlb
pop
adc
sbb
stos
adc
js
and
mov
daa
sbb
inc
sti
subb
data16
das
scas
cmpb
mov
test
out
and
pushf
pop
dec
subl
lods
cli
push
mov
xchg
loop
sub
sub
lcall
fmull
sahf
addb
or
fmulp
sbb
in
mov
shlb
or
push
sub
push
cmp
xchg
or
xor
mov
jmp
or
xchg
mov
sbb
aas
jo
sahf
in
push
mov
out
sbb
shll
sub
xchg
push
stc
xchg
add
enter
push
in
std
mov
inc
push
nop
mov
jle
adc
and
andl
cli
dec
sbb
push
adc
ljmp
inc
sahf
and
jae
clc
sbb
jno
or
mov
lahf
jb
mov
dec
mov
mov
sar
imul
push
xor
test
push
sahf
sarb
lret
es
pop
push
and
stos
dec
sbb
cmpsb
dec
daa
imul
inc
sbb
mulb
shrl
lret
int
sbb
or
cmp
inc
jge
iret
push
cltd
call
mov
ja
jg
nop
sbb
inc
gs
mov
add
addr16
inc
out
adc
add
daa
sbb
jmp
es
jle
push
add
sub
jae
sahf
xchg
or
xchg
jmp
test
xchg
hlt
in
sub
jno
mov
nop
shl
xchg
pop
pop
mov
sbb
mov
movb
sbb
aaa
addb
push
xor
mov
sub
sbb
add
ds
out
xchg
jns
mulb
test
add
fdivs
push
dec
jno
or
inc
fisubl
xchg
lods
mov
push
mov
stc
mov
pop
cmp
jnp
adc
sub
mov
lea
xchg
sub
stc
shl
rcrl
cmpsl
xor
fiadds
xchg
inc
sbb
jp
inc
fucomi
mov
adc
pop
int
outsl
jae
sub
and
std
nop
adc
shrl
test
stos
hlt
push
push
sbb
mov
pop
sub
sbb
and
jb
jg
push
add
mov
mov
nop
stos
pop
popa
call
pop
xchg
push
fcmovnu
sbb
jle
int3
xchg
sti
int3
into
sarl
into
add
jmp
dec
and
loope
xor
adc
sbb
lods
int3
pop
sahf
faddl
push
call
orl
sbb
mov
dec
fldenv
dec
out
mov
or
sbb
mov
cwtl
icebp
cmpsl
pop
inc
loop
arpl
cli
xchg
ret
lret
mov
ror
and
and
imul
icebp
lcall
in
add
mov
xor
inc
mov
arpl
sahf
add
loope
mov
cmp
repnz
mov
sbb
mov
xor
sbb
call
push
pusha
sbb
cld
xchg
pop
jne
out
rolb
ss
gs
mov
xlat
clc
imul
repz
push
push
or
test
mov
sbb
and
inc
shlb
xor
shr
das
ficompl
scas
xor
and
sub
mov
mov
inc
imull
and
das
inc
aam
das
sahf
divps
roll
mov
lock
sbb
ljmp
xchg
jle
xor
push
cwtl
cmpsb
xchg
push
pop
ljmp
dec
jbe
inc
jge
jg
ret
jl
mov
push
sbb
sbb
fwait
jmp
aad
imul
jecxz
inc
pop
shrb
xchg
xor
push
sub
mov
pop
mov
jns
sahf
cmp
fsubl
out
jmp
sbb
pop
test
rclb
jmp
add
dec
sbb
sahf
subb
jo
xchg
sbb
mov
xorb
xor
addl
inc
pop
fmull
stos
add
sbb
mov
mov
jmp
or
dec
lods
lret
sbb
aam
jae
push
inc
adc
adcl
in
divl
rcl
mov
adc
nop
mov
cli
mov
sub
in
and
sbb
int
xchg
jne
nop
inc
mov
inc
push
xchg
lret
outsb
jmp
cmc
adc
xchg
std
aad
adcl
pop
push
jg
and
test
cmp
mov
sub
jo
lods
dec
mov
push
fnstenv
fistpll
cs
outsl
adc
and
loopne
dec
fstps
xor
rcll
sbb
mov
fidivs
movsl
cld
outsl
jmp
cli
cs
js
mov
or
mov
xchg
mov
addl
ljmp
dec
sarb
imul
lcall
cmp
data16
jnp
pop
into
pop
and
cmp
inc
stc
and
sar
xlat
dec
xchg
xlat
aaa
push
xor
mov
sahf
and
adc
adc
inc
xor
push
xlat
iret
sbb
cmpsb
lods
push
sbb
stos
loop
mov
int
mov
jmp
rep
aad
rcrb
mov
rclb
push
loop
lcall
mov
cwtl
xchg
ds
negl
mov
mov
fcmovnbe
dec
or
cmp
lret
jmp
sbb
dec
test
cltd
clc
mov
into
fisubl
repnz
popa
test
adc
leave
nop
mov
push
push
xchg
adc
lcall
or
hlt
adc
pop
pop
and
mov
aaa
js
mov
jg
inc
jbe
sbbb
rclb
popf
ja
push
sbb
mov
or
dec
jmp
inc
rcrb
divb
push
add
inc
cmp
jne
add
stos
dec
pop
into
and
mov
mov
xchg
pop
add
ds
fistps
jb
adcl
shrb
cli
rorl
bound
sub
jp
mov
dec
jo
add
inc
es
fs
xchg
fisubrl
jnp
out
stc
cmp
jae
stos
popa
or
jne
rcr
rol
lock
jne
pop
sbb
push
jl
sub
inc
pop
sahf
pop
xor
test
jmp
rorb
pop
icebp
xor
outsb
mov
inc
mov
mov
nop
je
push
xchg
addr16
sbb
push
rolb
or
out
sahf
mov
push
xchg
mov
rolb
cmp
js
jo
jns
sbb
lods
std
fwait
inc
xor
sahf
sub
hlt
je
shlb
cld
adc
xlat
mov
mov
hlt
outsl
inc
sub
and
xlat
jge
sbb
mov
jno
sbb
push
sbb
cmp
add
mov
jle
sbb
jmp
lahf
aaa
fwait
xor
mov
sbb
push
cmp
mov
jnp
mov
mov
sub
aaa
cltd
sbb
inc
loop
adc
shrl
mov
mov
sbb
in
movb
xor
pushf
inc
sub
and
nop
ljmp
and
xchg
stos
negb
or
or
fs
lret
pop
sub
add
sbb
mov
mov
notb
mov
sbb
cmpb
cmpsb
mov
movsb
and
daa
push
cmp
inc
xchg
push
mov
lahf
fwait
sbb
repnz
lcall
imul
push
xchg
jb
es
rcr
pop
fimull
mov
sbb
fbld
aas
sub
outsb
cld
out
mov
cld
pop
pop
aaa
fwait
or
loopne
lahf
adc
stos
jns
nop
scas
push
int3
aas
nop
push
fimuls
mov
daa
and
punpckhwd
jb
les
adcb
push
dec
rolb
cltd
mov
xchg
cmp
lret
adc
dec
mov
fcoms
xorl
sbb
out
je
ret
inc
pushf
inc
sahf
sbbl
jecxz
and
lret
push
cmp
add
cmp
xchg
mov
or
loope
mov
push
clc
sbb
sub
clc
adc
and
dec
pop
jge
into
cmp
lret
pop
mov
mov
mov
pop
ficomps
xchg
and
movsb
adc
ret
jecxz,pn
jnp
pushf
rorb
je
shr
xor
orl
pusha
mov
mov
pusha
flds
in
or
sbb
cmp
xor
jg
mov
mov
mov
cmc
mov
int
fcomp
dec
add
inc
push
jo
mov
add
and
inc
fdivs
or
sbb
add
sub
jge
fcoms
lock
pop
and
stc
mov
xchg
pushl
xchg
pop
sahf
mov
fwait
loop
sarb
inc
add
sarb
lahf
lret
ret
fsubr
sbb
dec
mov
jg
add
mov
pop
cmp
or
xchg
add
or
js
xchg
push
les
add
rcrb
inc
mov
xor
arpl
iret
rolb
test
sbb
div
push
xor
movsl
xlat
clc
movsl
push
jp
jns
or
xchg
int
int
fistpl
xchg
enter
int3
rcrb
sbb
shlb
insl
enter
mov
push
repnz
cmp
sub
jmp
es
adc
push
mov
out
xor
inc
push
scas
scas
rol
sub
fnstenv
flds
into
sbb
and
sbb
mov
rcl
stc
shr
stc
lcall
jnp
fsubl
mov
cmp
lea
sbb
sub
jge
mov
imul
sbbl
sbb
in
popf
leave
pop
sub
add
mov
push
sbb
pop
xor
shlb
ja
push
repz
orl
dec
int3
mov
cmp
xchg
cmp
mov
pop
inc
inc
movsl
sbb
adc
push
mov
lds
mov
inc
sbb
add
nop
lcall
adc
stos
pop
push
loop
fldl
rclb
and
aam
mov
stos
iret
pusha
mov
paddsw
rol
cmp
xchg
push
xchg
jecxz
mov
cmp
add
sbb
pusha
outsb
jns
inc
std
and
mov
mov
adc
sbbl
xor
daa
sbb
mov
mov
rcrb
shrb
jbe
pop
sbb
fmuls
inc
jp
mov
pop
fs
pop
jno
je
cmc
sbb
andb
es
dec
push
jb
or
mov
cwtl
in
subb
sbb
jb
jnp
push
lret
and
das
push
or
sbb
shlb
dec
push
cli
fcoms
addr16
test
xor
mov
mov
adc
test
sbb
push
add
iret
inc
movsl
xchg
push
clc
arpl
je
loop
xchg
popf
mov
or
rcll
xor
pop
rcrb
mov
sub
js
idivb
incb
cmp
xchg
or
pop
fidivl
rcll
int
mov
sbb
sbb
psadbw
push
loop
cmp
pop
ret
hlt
insl
sbb
jnp
pop
dec
add
cmpsl
xchg
dec
std
sbb
adc
pop
push
or
pusha
mov
xchg
adc
jg
sub
sub
dec
or
add
and
xor
mov
mov
mov
lcall
test
dec
xor
je
lods
jecxz
cmp
into
xchg
fidivs
lods
xchg
test
fwait
dec
shlb
push
dec
mov
out
push
add
pop
adc
cld
jge
mov
nop
cmp
xor
fistl
inc
out
or
cmp
subb
fwait
push
sbb
fimuls
dec
mov
mov
shlb
pop
mov
loope
jp
adc
mov
sahf
popf
jb
mov
sbb
mov
lret
and
scas
aad
imul
scas
push
loopne
ret
ds
stos
pop
push
xor
pop
rclb
leave
incl
inc
mov
xor
inc
shlb
pop
iret
cwtl
dec
jns
fildl
pop
xchg
xor
push
xchg
inc
iret
push
mov
dec
outsb
jmp
and
pop
add
mov
pop
test
sub
xchg
adc
push
pushf
inc
dec
pop
into
lret
pop
test
aaa
xor
outsl
fcoml
add
xchg
rcrb
pop
sub
popa
popa
jo
daa
stos
mov
xchg
sub
push
leave
push
xor
mov
test
mov
popa
into
xchg
mov
cmc
inc
push
sahf
es
sbb
pop
mov
xchg
adc
fstpt
jae
and
cmpsb
shll
int3
sbb
push
rorl
xlat
std
je
aam
mov
clc
inc
cmp
rolb
cmp
in
scas
xor
xchg
push
nop
xchg
mov
and
jecxz
test
xor
shlb
jg
fucomip
mov
sbb
repnz
shrb
div
xchg
scas
adc
std
test
add
ja
ret
orb
out
lcall
fwait
sub
jb
mov
xor
jae
dec
sbb
mov
fcmovnbe
mov
dec
jne
aaa
cld
dec
test
int
rorb
inc
sub
lea
pop
sbb
jb
sbb
scas
pushf
sbbl
sbb
add
stos
xchg
jne
lahf
add
add
addb
and
sbb
push
xor
add
in
add
nop
addb
add
add
pop
and
xchg
mov
mov
inc
inc
or
or
mov
dec
jne
adc
xchg
insl
inc
add
add
mov
or
adc
add
mov
loopne
test
mov
sub
add
add
inc
and
add
or
add
push
and
add
inc
or
cwtl
rolb
popa
add
xchg
add
leave
dec
add
fistl
add
xchg
add
add
push
nop
xchg
add
add
and
adc
or
and
and
inc
add
xorb
add
mov
or
orb
pop
add
adc
pop
add
inc
xor
orb
sub
stos
pusha
mov
add
mov
add
add
addl
add
sub
add
popa
pop
and
nop
add
jb
test
sbb
jg
inc
add
and
inc
or
xchg
add
or
adc
and
es
xor
add
add
inc
adc
andl
add
aad
or
and
rorb
nop
or
add
and
or
add
add
and
inc
loope
mov
sbb
jp
and
adc
or
addl
mov
add
pop
add
add
mov
add
inc
inc
add
and
sbb
test
and
add
xor
or
adc
insl
or
or
dec
inc
add
add
add
cli
add
inc
and
inc
or
test
cmp
push
adc
inc
add
inc
xchg
add
rclb
add
add
add
inc
add
and
adc
add
or
pop
add
adc
add
adc
add
sbb
add
mov
add
add
mov
dec
jo
push
adc
and
add
or
jle
add
test
jo
and
test
add
ret
loopne
xchg
and
and
or
xor
add
orb
and
inc
inc
loopne
or
and
add
add
enter
add
or
push
and
andl
shl
add
andl
xor
add
and
add
push
add
pusha
ret
inc
and
or
add
add
dec
ret
loop
cmp
sub
inc
add
and
inc
push
add
add
add
add
xchg
mov
sbb
adc
push
rcr
push
add
push
adc
rolb
sbb
add
add
es
adcb
addb
test
add
nop
add
and
test
sub
and
add
push
add
rol
dec
add
sub
inc
xchg
test
adc
pop
push
mov
add
ss
mov
cwtl
cs
pusha
add
adc
adc
xchg
lds
adc
push
add
cwtl
and
add
mov
dec
mov
add
inc
inc
orl
test
or
or
push
adc
push
or
and
rcrl
adc
nop
mov
or
mov
adcb
or
mov
pusha
add
nop
add
add
add
dec
or
shrb
add
add
inc
adc
add
add
push
movsb
jno
xchg
add
and
add
add
adc
add
add
cmp
mov
add
and
test
adc
adc
push
add
bound
hlt
rolb
adc
or
cwtl
orl
inc
xchg
add
and
cwtl
cwtl
adc
mov
adc
add
sbb
push
add
or
add
xchg
adc
orb
les
rolb
adcb
sub
test
mov
lods
add
add
add
sub
add
add
pushf
inc
sub
and
and
inc
or
adcb
adc
and
xor
xchg
add
mov
add
or
add
and
adc
adc
add
fsub
adc
int3
add
add
rolb
inc
push
add
gs
pop
add
adc
and
pusha
add
pushf
test
nop
addb
inc
jb
pop
add
adc
push
and
push
add
test
loopne
xchg
or
add
inc
sbbb
add
or
shl
sub
inc
rolb
xchg
push
loopne
mov
orb
add
or
stos
or
or
adc
inc
or
add
and
add
add
add
and
movl
push
ret
mov
xor
add
xchg
add
xor
or
push
adc
add
inc
adcb
add
ret
push
and
addb
add
add
or
xor
push
inc
je
add
add
add
adc
push
adc
test
addl
rclb
or
cmpsl
shrl
dec
add
inc
sbbb
inc
dec
mov
mov
or
inc
adc
adc
and
enter
int
or
andb
pop
mov
and
add
mov
addl
shll
add
and
xor
xor
addb
or
add
dec
adc
add
addl
inc
add
add
add
adc
dec
addb
bound
enter
pop
add
push
sbb
lods
and
add
push
and
add
add
add
pusha
shlb
xor
nop
addb
sub
sbbb
or
lods
add
addb
adc
or
sub
inc
add
sbb
push
inc
rclb
adc
dec
test
or
js
rorb
pusha
add
adcl
add
arpl
push
add
add
mov
xor
fs
add
sbb
add
pop
or
mov
mov
mov
jo
addb
xchg
sub
pop
add
add
ret
add
dec
sub
loopne
add
dec
add
andb
adc
inc
ret
sub
sub
addl
and
subb
add
add
add
inc
addb
pop
xor
dec
cwtl
add
jno
xor
enter
ret
orb
or
aaa
or
and
and
inc
adc
lock
add
mov
add
inc
and
test
pop
add
pop
and
mov
push
mov
cmp
outsb
adc
orl
test
inc
mov
inc
xchg
adc
pop
pop
add
add
addb
sbb
sbb
and
movsb
popa
add
mov
adc
add
add
add
and
pusha
or
adc
xchg
add
add
add
inc
xor
lea
xor
addb
sub
inc
andl
add
sub
add
orl
add
add
mov
adc
mov
lcall
movsb
or
sbb
push
cmp
add
call
ret
andb
mov
mov
inc
mov
adcl
or
add
pusha
addb
add
push
inc
push
inc
inc
xor
enter
dec
and
add
or
or
and
add
add
add
adcb
mov
add
add
pusha
sbb
and
add
addb
test
add
add
inc
add
xorb
inc
add
adc
stos
adc
enter
inc
cltd
or
dec
lods
es
adc
add
push
les
cwtl
daa
and
and
add
or
test
add
pop
test
mov
test
and
add
or
pop
inc
sbb
and
dec
adc
adc
add
nop
shlb
mov
or
and
cwtl
adc
movsb
adc
inc
inc
sub
add
adc
and
add
or
test
add
add
add
inc
rolb
int3
inc
push
test
and
mov
add
mov
adc
sbb
mov
inc
and
push
dec
adcb
jecxz
add
push
xor
adc
popa
or
xor
or
and
add
and
and
dec
orb
add
and
inc
lds
dec
add
add
inc
mov
les
inc
add
adcb
imul
addl
add
and
dec
push
movsb
add
add
and
add
sub
mov
pop
and
shrd
mov
add
test
and
add
or
addl
add
adc
mov
invd
add
add
add
adc
add
in
add
add
addb
add
inc
add
cmpb
or
xchg
adc
or
add
xchg
mov
sarb
pop
lds
add
test
push
or
mov
xchg
mov
and
add
adc
or
addl
lock
sub
adc
adc
mov
inc
adc
dec
push
add
rorb
add
mov
jl
add
jns
inc
shlb
inc
xorb
sub
int3
inc
add
in
xor
or
sub
inc
sbb
mov
dec
push
or
inc
jbe
add
add
or
test
and
add
add
inc
rcr
add
gs
mov
add
add
and
inc
popa
andl
orl
mov
dec
rorb
nop
addl
or
jo
add
pusha
test
add
mov
inc
add
or
nop
and
pop
add
mov
adc
movsl
mov
add
add
add
shrl
movsb
test
add
add
sbb
icebp
add
inc
add
or
and
pop
add
pusha
push
rorb
adc
and
add
inc
loopne
and
inc
add
sbbl
and
or
sub
add
andb
add
add
sbbl
or
ret
addb
or
adc
inc
mov
add
arpl
mov
inc
adc
add
lret
add
sbb
test
fs
add
adc
cwtl
add
or
inc
orb
and
and
add
add
adc
sub
or
rolb
mov
or
or
add
inc
add
rorb
xor
xor
inc
lcall
add
fs
xor
mov
mov
xchg
and
and
inc
inc
sbb
adc
add
jo
add
test
xor
add
add
nop
dec
adc
andl
or
add
bound
dec
or
xchg
adc
xorb
nop
adc
daa
mov
sub
adc
subb
xchg
add
fs
adc
add
mov
add
or
addb
xor
add
or
add
lret
xchg
jo
sub
add
add
inc
add
or
or
subb
mov
add
pop
push
es
adc
or
mov
ret
sbb
add
sbb
xor
popa
adc
and
or
or
adcl
xor
andb
nop
addb
xor
pusha
inc
sub
test
add
add
test
sub
adc
cmp
adc
inc
pusha
push
add
inc
and
sbb
and
xor
add
test
add
test
add
lds
add
inc
loopne
dec
push
lds
mov
add
addl
and
or
adc
add
and
xchg
and
add
add
add
addb
add
test
inc
adc
or
fadds
fs
inc
or
add
adc
and
adc
or
lret
inc
repnz
dec
sbb
or
add
inc
and
dec
adc
add
add
add
rcrl
inc
add
or
loop
and
xchg
adc
arpl
add
adc
push
add
sbb
and
adc
mov
dec
xchg
xor
bound
mov
or
push
orl
and
adc
addl
adc
mov
sub
xor
movl
pusha
adc
inc
dec
add
add
or
and
adc
add
and
add
pop
test
sbb
xchg
dec
adc
mov
inc
add
lock
nop
push
xor
xchg
and
add
loopne
adc
add
rcrb
pusha
inc
add
add
and
add
xor
mov
dec
add
add
add
loope
push
adcb
or
and
cmp
adc
mov
and
add
adc
and
addb
and
andl
xchg
andb
and
add
pop
pusha
add
xor
adc
mov
adc
xchg
or
and
sub
ret
test
inc
and
and
add
dec
push
add
test
int3
cwtl
xor
xchg
and
shll
sub
inc
add
add
push
push
dec
add
inc
add
or
inc
shlb
add
inc
inc
inc
xor
inc
add
push
add
aam
xchg
sbb
and
and
xor
sub
sbb
or
inc
add
and
test
mov
adc
add
daa
pusha
lret
add
movsb
xchg
addb
pusha
xor
inc
xor
pop
add
or
add
sahf
push
addb
inc
or
mov
add
add
or
inc
add
and
adc
adc
add
orb
and
addb
popa
jo
inc
sbb
xorl
xor
nop
add
movsb
mov
inc
sbb
and
orb
add
add
push
and
xor
add
add
add
imul
add
xchg
add
adc
or
and
rolb
mov
inc
or
or
xor
or
or
and
adc
and
push
sub
add
and
pusha
add
cmp
pusha
push
or
add
test
dec
add
add
adc
adc
xor
add
or
add
xchg
adc
add
or
mov
andl
add
shlb
push
add
adc
les
add
add
adc
inc
and
shrb
lods
ljmp
add
add
push
dec
and
andb
and
or
push
or
add
add
and
or
arpl
sbb
add
lret
push
cmp
inc
push
add
pop
lret
xchg
add
push
out
mov
movsb
dec
add
rolb
push
jecxz
adc
sbb
adc
and
pusha
test
inc
or
mov
and
and
mov
cmp
add
movsl
addb
movsw
pop
add
add
les
or
add
add
adc
test
test
add
adc
sbbl
pop
arpl
inc
add
add
pushf
push
push
xor
adc
add
inc
rolb
add
mov
and
adc
or
push
mov
add
mov
or
sbb
sub
or
inc
add
cmp
add
test
test
and
and
subl
or
adc
mov
sub
add
jo
test
add
add
adc
and
sub
sub
inc
addb
inc
and
pusha
add
add
or
or
and
subb
add
inc
cmpsl
and
push
sub
and
mov
outsb
or
test
js
sbb
add
sbb
add
fnstenv
or
adc
or
push
bound
push
nop
orb
mov
add
xor
addl
and
push
and
add
andb
xor
xorl
pop
pop
daa
add
test
add
nop
add
add
add
and
adc
adc
push
or
test
inc
inc
and
nop
add
mov
or
orb
adc
add
mov
rolb
popa
sub
add
or
adc
and
and
inc
inc
pop
inc
inc
adc
add
add
push
adcb
inc
or
cltd
sbb
mov
or
add
mov
inc
loop
inc
and
cwtl
xorb
push
ret
and
adc
add
add
add
add
and
push
pusha
inc
or
sbb
add
add
dec
add
cmp
add
xor
pop
add
adc
adc
add
adc
addb
adc
mov
add
add
xchg
inc
pusha
add
push
inc
inc
lret
xor
push
mov
adc
movsb
add
xor
sbb
and
rol
and
nop
sub
or
sub
or
add
or
push
push
or
or
or
dec
and
dec
pop
cwtl
add
sbb
add
lea
adc
xorb
and
add
test
add
loopne
subb
addb
add
xor
push
or
pusha
add
and
sbb
scas
sbbb
add
add
adc
inc
or
add
mov
test
add
and
les
rolb
xchg
add
xor
enter
mov
add
subb
fmull
adc
xor
add
sbb
adc
add
mov
insb
xor
add
or
test
andl
add
add
add
adc
mov
add
or
addb
movsb
add
adc
add
push
jecxz
mov
mov
test
dec
or
dec
dec
add
add
bound
inc
addl
adc
sub
and
add
lock
mov
jb
add
inc
push
or
and
and
add
addb
mov
or
dec
xchg
add
adc
inc
xorb
movsb
adcb
add
andb
add
or
and
adc
mov
addl
inc
sbb
cmpsb
andb
inc
add
add
test
adc
push
or
and
and
addb
add
inc
pop
inc
ret
adc
sbbb
xorb
add
add
adc
xor
sbb
xor
and
mov
add
rolb
dec
push
push
add
or
sbb
add
inc
test
add
or
add
add
or
sub
push
mov
add
add
adc
or
and
add
mov
xchg
addb
aam
add
push
add
add
pop
add
and
push
inc
inc
or
push
add
or
or
addr16
data16
add
inc
arpl
cmp
mov
mov
sub
push
add
and
test
add
adc
mov
mov
add
sub
inc
add
push
or
push
sub
mov
add
nop
push
add
mov
add
inc
adc
nop
xchg
add
add
add
and
add
addb
inc
addb
push
aam
sbb
adcb
sub
andb
pusha
dec
xchg
js
inc
andb
and
and
xor
jo
adc
add
inc
add
dec
sbb
add
or
and
xchg
and
add
adc
adc
or
add
inc
or
add
subb
add
movsb
adc
or
xor
pop
mov
add
nop
xor
insb
addl
add
les
addb
inc
seto
add
push
add
add
bnd
xor
rolb
addb
loopne
mov
inc
or
add
xor
sbbl
pushf
mov
add
add
test
inc
adc
pusha
adc
dec
add
or
dec
add
dec
pusha
xor
inc
stos
adc
dec
push
jo
and
dec
mov
or
and
and
xor
push
adc
loopne
add
inc
rorb
inc
sbb
add
sub
add
add
addb
inc
or
push
pop
adc
and
mov
addb
dec
popa
lea
test
sbb
add
and
xchg
add
popa
add
push
add
add
or
or
add
xchg
fs
adc
adc
and
push
inc
inc
add
orl
mov
inc
add
add
dec
adc
test
xor
and
and
push
andb
inc
lods
add
inc
and
add
and
add
inc
test
add
add
sbb
xchg
add
push
and
adc
dec
or
addb
test
add
or
flds
inc
gs
dec
mov
and
add
nop
and
mov
inc
test
inc
and
and
inc
push
add
mov
add
or
lock
mov
xor
test
addb
add
mov
add
add
add
add
pop
test
dec
and
or
hlt
add
add
add
sbb
xor
add
mov
add
add
add
add
or
pusha
test
or
add
add
adc
adc
jno
adc
add
add
adcb
or
or
adc
inc
add
add
and
pop
sbb
nop
and
mov
adc
adc
test
imul
sbb
push
loopne
and
rolb
mov
subl
dec
add
or
xor
or
add
icebp
add
add
adc
inc
mov
nop
add
lods
sbb
rolb
ret
test
inc
adc
push
adc
or
inc
add
sub
add
adc
mov
ret
add
lcall
push
dec
mov
and
and
adc
xorb
add
cmp
add
sub
sbb
enter
test
sbb
inc
adc
add
inc
add
add
cmpb
add
sub
or
add
adc
addb
or
push
add
rolb
leave
add
or
jo
loop
addb
and
xor
add
dec
inc
enter
enter
add
andl
add
or
leave
or
push
les
add
inc
add
repnz
push
or
sbb
add
pop
shll
push
test
add
add
loope
or
add
lcall
inc
dec
sub
add
pusha
test
add
dec
add
add
and
dec
inc
adc
inc
inc
and
nop
push
addl
xor
bound
add
push
and
add
adc
adc
adc
test
dec
adc
add
adc
sbb
add
add
lea
add
mov
and
adc
adc
add
add
push
add
sub
rorb
sub
mov
add
add
and
add
and
or
xchg
add
cmp
and
add
adc
add
nop
mov
and
add
adc
nop
adc
add
addb
inc
xchg
add
addl
inc
adc
add
inc
xchg
or
sbb
add
add
pop
pop
and
push
add
test
andb
add
mov
sub
addb
inc
add
or
lock
push
inc
adc
add
or
mov
inc
adc
and
add
or
sub
inc
and
add
inc
mov
sbb
inc
add
add
xchg
and
pusha
or
pop
adc
and
rcll
pusha
or
add
add
xor
add
mov
add
inc
inc
add
jb
mov
subb
xor
inc
add
enter
fcoms
xor
add
and
or
adc
adc
cld
xchg
add
push
add
movsl
inc
movsl
mov
andb
adc
inc
add
mov
inc
add
pushf
pop
adc
inc
add
loop
or
rolb
test
add
mov
xor
add
test
and
adc
roll
rorl
adc
mov
adc
add
add
push
addb
push
orb
rcll
pop
add
or
subb
mov
add
and
inc
adc
push
mov
sarb
inc
add
test
and
push
sub
and
add
xchg
and
push
and
or
rorb
adc
mov
inc
adc
or
dec
mov
adc
mov
imul
movsb
movl
add
add
addb
or
dec
adc
and
add
add
add
push
rclb
addb
add
adc
and
andb
xchg
xor
iret
mov
es
add
mov
and
mov
adc
inc
jmp
inc
adc
sub
add
pop
add
add
sbb
test
pusha
or
and
add
and
xchg
test
and
inc
xchg
and
xchg
mov
addb
mov
add
inc
add
test
rorb
enter
and
test
xor
addb
mov
dec
push
and
mov
inc
nop
add
inc
andb
adc
add
test
push
add
push
bound
xor
push
or
or
push
add
adcb
inc
dec
loope
add
add
add
push
rolb
adc
fadds
and
mov
inc
and
add
ret
rolb
dec
and
mov
adc
inc
adc
push
xor
inc
adc
nop
push
xor
add
add
add
add
mov
rolb
or
adc
xchg
push
xchg
xchg
add
add
movsb
and
add
dec
and
pusha
push
mov
addb
sub
mov
add
xchg
and
jno
sbb
or
add
and
and
inc
add
add
addb
inc
dec
and
and
sbb
sbb
dec
and
test
add
sub
bound
test
or
add
add
inc
add
adc
adc
nop
add
mov
and
push
orb
xor
and
adc
inc
dec
and
sub
addb
add
and
add
nop
inc
adc
adc
add
adc
dec
adc
inc
ror
adc
pusha
orb
or
sbbb
xor
xor
inc
adc
push
dec
js
addb
adc
inc
subl
xor
and
or
add
push
or
adc
add
and
add
inc
and
adc
push
inc
loop
add
inc
add
xchg
dec
sub
adc
addb
sbb
and
adc
addb
add
or
add
xor
inc
adc
adc
lods
push
addb
inc
inc
nop
add
and
add
lds
add
mov
add
and
add
inc
or
and
xorb
inc
pop
xchg
lret
ret
adc
inc
add
movsb
xchg
xchg
inc
add
inc
imul
sub
test
inc
add
add
add
or
int3
les
rolb
add
adc
and
adc
and
call
add
test
push
lods
adc
add
adc
add
pop
and
pop
sub
add
add
add
aaa
sbb
addb
or
inc
add
adc
adc
call
test
sub
add
or
xchg
add
movb
push
sub
popa
inc
adcl
mov
adcb
add
loop
test
mov
sub
mov
or
adc
add
subb
pusha
or
sahf
add
mov
inc
test
addb
add
add
add
adc
mov
add
adc
and
add
hlt
add
loopne
or
and
loopne
or
inc
addb
push
addl
loop
inc
cmp
mov
inc
dec
add
xchg
or
rcll
fldl
adc
rclb
sub
dec
or
inc
test
and
adc
add
adc
dec
jo
and
add
and
cwtl
sub
push
inc
adc
mov
adc
inc
and
or
xchg
xchg
adc
movsb
pop
add
je
push
addb
inc
fs
orb
nop
add
xor
inc
and
and
test
dec
mov
adcb
orb
dec
inc
movsb
add
and
inc
roll
dec
and
test
loope
and
orl
push
inc
add
add
or
andb
xor
or
add
and
xlat
dec
push
inc
test
sub
dec
inc
movsb
xchg
or
add
daa
and
andl
add
or
add
xchg
add
adc
add
xor
add
sbb
fadds
inc
add
inc
or
movsb
add
inc
clc
adc
push
pop
lcall
jb
add
add
outsl
adc
nop
shll
mov
or
or
xor
inc
xor
add
adc
inc
sbb
mov
and
sub
nop
popa
sub
add
add
in
and
rclb
and
or
mov
addl
inc
orb
push
mov
and
or
sbb
or
adc
push
inc
add
and
inc
and
nop
popa
add
push
in
fwait
addb
into
add
add
and
mov
lods
mov
mov
adc
orb
shlb
pusha
inc
and
addl
add
add
rclb
add
or
push
nop
or
add
and
inc
add
cwtl
or
or
inc
jo
or
ret
add
les
shrb
or
xchg
and
les
les
add
add
or
inc
add
lods
or
insb
adc
inc
nop
or
loope
mov
adc
inc
adc
cmc
add
add
pop
fstps
add
adc
add
adc
add
mov
and
add
inc
xor
loop
add
add
push
and
and
add
adcb
add
inc
enter
or
or
and
or
adc
add
adc
or
add
add
shll
add
push
mov
rorb
mov
or
adc
add
add
ret
adc
cmp
orl
adc
lret
add
add
mov
add
add
add
add
xchg
mov
sbbb
and
add
sbb
add
add
push
les
inc
add
jne
adc
add
sub
or
add
and
or
inc
mov
mov
mov
sbb
addb
es
add
mov
add
sbb
roll
test
push
add
sub
xor
adc
mov
xchg
add
add
mov
adc
addb
mov
xchg
add
or
lds
cmp
bound
add
add
add
xor
add
adc
add
add
shrl
or
and
mov
inc
push
inc
addb
inc
or
inc
push
add
adc
aam
and
test
add
add
fadds
rolb
push
inc
adcl
push
or
mov
adcb
adc
and
adc
or
push
add
jb
adc
sub
add
inc
add
mov
or
add
or
mov
push
add
mov
nop
push
mov
add
add
inc
inc
or
lods
and
nop
add
sbb
adcb
add
xor
pop
add
jo
ret
sub
mov
adc
call
sub
inc
add
add
push
adc
or
adc
and
add
rorb
adc
add
or
or
add
addb
add
add
adc
dec
adc
and
orb
add
or
adc
add
orb
inc
inc
push
add
cmp
adc
dec
adc
inc
add
dec
mov
or
and
lds
add
adc
adc
sub
adc
inc
addb
adc
sub
call
addb
xor
push
dec
sub
mov
test
xor
adc
add
adc
adc
pop
shrb
mov
push
sub
add
adc
test
add
adc
push
add
dec
stos
aam
add
add
add
inc
inc
subb
adc
jle
adc
enter
test
add
lods
or
adc
adc
dec
jns
xchg
and
and
ret
or
mov
test
mov
add
andb
popa
adc
sub
andl
and
add
or
xorb
add
xor
sbb
pop
addb
inc
mov
xor
and
add
inc
pop
add
and
adc
dec
mov
inc
add
and
andb
adc
nop
add
test
test
add
gs
or
or
inc
dec
test
or
add
or
push
add
test
orl
or
adc
add
inc
adc
inc
orb
inc
xor
mov
push
and
xchg
or
add
andb
and
inc
and
or
inc
or
inc
add
add
push
test
xor
add
adc
lea
and
add
xor
pop
add
add
sbb
fs
adc
adc
rcll
and
addb
push
inc
addb
xchg
adc
nop
shlb
add
or
sbb
mov
shl
inc
adc
and
mov
add
add
inc
mov
inc
add
add
xor
orb
inc
loopne
xor
push
dec
and
add
or
add
add
or
popa
add
addl
push
xor
roll
or
sbb
mov
ret
add
popa
add
jb
rol
cmp
xor
add
add
and
add
sub
add
push
add
dec
push
mov
mov
sbb
push
and
add
add
mov
adc
add
adc
and
add
or
or
adc
adc
and
or
movsl
shll
and
mov
inc
add
add
add
pop
inc
adcb
orb
add
inc
jo
dec
sub
nop
inc
add
addb
or
add
add
push
add
add
mov
add
dec
adc
addb
mov
and
rolb
adc
test
and
add
adc
push
and
inc
sbb
mov
and
adc
adc
dec
adc
adc
mov
push
add
add
dec
bound
cmp
adc
inc
sub
or
sbb
inc
mov
adc
inc
add
inc
adc
or
arpl
add
add
sub
sbb
orb
bound
or
add
enter
call
or
sub
add
push
sub
xor
push
addb
push
sbb
or
mov
cltd
pusha
and
add
add
pop
add
nop
add
and
mov
mov
orb
add
sub
inc
and
xor
inc
push
add
xor
adc
push
inc
mov
pop
add
adc
add
les
xor
call
mov
push
push
or
rolb
addb
add
mov
sub
add
or
jno
daa
popf
pusha
adc
add
sbb
add
mov
add
mov
or
xor
in
and
ret
andb
add
and
or
add
or
mov
sub
jmp
add
adc
andb
nop
push
add
add
add
adc
add
sbb
cmp
adc
inc
mov
adc
imul
push
and
addb
add
addb
sbb
andb
adc
and
or
nop
add
add
xor
rolb
data16
shlb
inc
sbb
or
addb
inc
or
inc
rolb
mov
pusha
inc
add
mov
mov
and
inc
addb
or
mov
loope
adc
jo
xchg
gs
adc
mov
push
and
dec
loopne
push
or
nop
or
add
sbb
inc
inc
add
sbb
adc
and
pusha
or
add
and
add
and
mov
add
mov
mov
verr
add
pusha
push
push
push
mov
and
adc
xchg
add
adc
xor
pop
addl
andl
cmp
push
inc
or
and
or
orb
add
add
add
add
movsb
or
add
mov
add
mov
inc
mov
stos
nop
rclb
fs
adc
adc
movsb
mov
lea
xor
adc
inc
stos
or
mov
push
push
inc
or
or
add
sub
rolb
push
add
daa
and
or
add
or
or
mov
and
cmp
and
inc
inc
adc
inc
xchg
test
add
lds
push
and
pop
add
sbb
shll
hlt
and
and
add
inc
inc
call
sbb
daa
inc
mov
adc
sbb
addb
add
jo
push
add
or
add
cmp
adc
addl
add
and
add
inc
mov
and
add
add
or
or
inc
popa
push
enter
mov
add
or
add
nop
mov
inc
inc
and
add
popa
dec
or
dec
sbb
mov
adc
xchg
or
add
dec
sub
or
sbb
push
inc
add
add
add
bound
add
mov
and
push
loope
or
add
les
movsb
and
mov
or
add
add
mov
inc
addl
or
push
test
push
push
adc
and
and
and
addb
adc
pushf
inc
stos
and
add
inc
adc
add
adc
add
xchg
and
or
and
add
mov
add
add
mov
add
sbb
rolb
mov
add
and
shlb
add
add
pop
or
xchg
mov
or
shl
addl
pusha
or
sbb
addb
and
and
adc
nop
add
adc
push
xchg
lock
or
subl
pusha
rcl
movsl
add
add
cmp
cmpb
add
add
or
add
add
or
adc
and
xchg
nop
mov
sub
xor
adcl
mov
or
mov
push
or
and
and
add
inc
sbb
and
data16
inc
fwait
add
adcb
or
add
add
and
pusha
adc
addb
adc
call
rolb
mov
inc
addl
and
orb
add
sub
mov
add
sbb
add
adc
adc
mov
push
lret
dec
inc
or
or
mov
movsb
rorb
xchg
add
xor
nop
add
and
sbb
push
addb
or
and
addl
add
add
enter
or
orb
xor
adc
add
mov
add
inc
xchg
inc
xchg
add
xchg
and
inc
mov
enter
add
add
add
adc
movsb
sbb
pop
inc
add
inc
add
push
fs
pusha
mov
test
mov
sub
popa
push
add
test
or
mov
add
or
push
adc
or
dec
add
or
jecxz
dec
push
add
add
add
inc
push
nop
and
or
add
push
daa
addb
push
mov
inc
xor
mov
add
push
adc
and
inc
cwtl
and
and
adc
push
add
dec
addb
sub
inc
or
adc
mov
addb
or
pusha
rclb
adc
adc
mov
mov
or
adc
add
add
loope
dec
test
add
enter
add
pusha
inc
adc
or
add
je
jb
adcb
add
push
sub
sub
inc
add
add
addl
and
dec
push
add
add
sub
sbb
pop
adc
sbb
adc
and
add
xchg
addb
or
test
test
xor
rcrb
add
or
push
xor
adc
rorl
or
adcb
addb
or
push
xor
add
cwtl
adc
test
sbb
sbb
and
nop
add
add
xor
and
xor
add
and
add
adc
test
push
add
dec
push
rorb
mov
sbb
adc
xchg
adc
add
add
and
xor
and
add
inc
addb
or
add
add
sub
add
addl
sbb
mov
mov
addb
inc
add
or
push
inc
add
adc
add
add
adc
bound
push
sbb
add
cmp
pop
pop
push
xor
add
adc
add
push
inc
mov
add
add
push
add
sub
sbb
rolb
and
add
xchg
inc
push
add
mov
add
adc
adc
mov
fadds
mov
inc
mov
addb
mov
xchg
andl
inc
sbb
inc
leave
subl
adc
add
mov
add
adc
add
adc
js
inc
cltd
or
and
add
mov
nop
add
pop
and
test
roll
daa
or
loopne
and
rcll
dec
roll
sub
add
inc
add
add
and
and
orl
push
sub
or
adc
add
int3
adc
add
push
dec
add
test
test
adc
inc
adc
xchg
pop
stos
and
inc
ret
add
shlb
ret
add
and
add
and
lock
dec
add
aaa
cmpsl
andb
add
and
inc
sbb
adc
add
les
inc
push
in
add
and
push
adc
lods
sub
inc
and
add
daa
pusha
add
and
adc
andb
inc
or
push
or
int3
pusha
inc
inc
cwtl
mov
test
adc
and
add
or
add
dec
push
les
or
and
mov
add
adc
adc
pusha
shl
adc
adc
test
adc
sbb
and
add
dec
sub
inc
addb
addb
adc
sbb
adc
add
and
and
xor
add
loope
jno
adc
xor
add
or
add
nop
add
add
mov
adc
add
addl
inc
inc
orb
add
and
add
test
addb
mov
and
add
rolb
cmp
adc
pop
add
add
add
add
adc
mov
sbb
add
pop
and
add
xchg
subl
add
adc
and
adcb
andb
add
add
rolb
add
add
add
inc
andb
xchg
add
addb
xor
adc
add
adc
or
add
adc
add
or
inc
or
mov
adc
scas
or
addb
adcb
shl
dec
inc
push
or
push
inc
add
add
add
or
add
xor
add
cltd
xor
xorb
add
cs
add
xor
addb
or
add
and
rorb
movb
cwtl
add
test
push
add
and
add
add
movsb
adc
inc
lret
sbb
add
fadds
adc
add
add
and
add
inc
cmpsb
adc
or
inc
add
inc
pop
inc
inc
add
or
inc
and
inc
and
movsb
adc
sbb
push
add
movsb
add
test
or
inc
nop
or
bound
mov
inc
inc
and
and
add
mov
add
mov
adcl
or
adc
or
mov
add
addb
add
or
dec
dec
cwtl
or
mov
add
add
addl
or
mov
and
test
xor
inc
daa
add
add
push
adc
pusha
or
nop
add
adc
inc
adc
or
or
inc
add
inc
add
inc
inc
or
or
push
and
pusha
inc
or
xor
add
add
shrl
lods
inc
inc
or
nop
sub
inc
inc
and
pop
adc
push
add
add
add
or
xchg
and
adc
push
adc
test
adc
sahf
dec
push
inc
hlt
sbb
add
sbb
inc
or
xor
cmp
add
add
loopne
add
dec
test
add
mov
insb
lret
mov
inc
add
inc
adc
jo
pusha
adc
cwtl
and
adc
add
adc
xor
adc
aaa
in
pusha
add
add
dec
adc
add
or
or
xchg
inc
mov
adc
subl
adc
andb
inc
push
sub
adc
inc
pushf
add
mov
add
add
andb
movaps
add
inc
mov
jno
add
dec
sbb
addb
xor
or
or
add
adc
nop
add
add
adcb
add
pop
or
lret
inc
mov
add
addb
add
pusha
mov
add
and
sub
and
add
addb
push
add
adc
add
inc
dec
add
add
push
add
orb
andb
add
add
push
mov
shlb
roll
sbb
cmp
or
jmp
adc
nop
inc
mov
gs
or
adc
and
xor
sbb
sub
or
add
add
add
sub
and
inc
add
sub
add
xor
inc
add
inc
add
add
add
and
push
or
adc
push
add
add
inc
cwtl
add
xchg
add
mov
add
or
enter
addb
or
add
aaa
adc
add
add
add
and
add
adc
add
and
sbb
ret
and
push
addb
adcl
inc
imul
add
add
and
rolb
inc
pusha
dec
movsl
sbb
xchg
sbbb
add
jno
mov
inc
adc
loopne
push
in
or
or
inc
adc
popf
test
cmp
inc
add
add
gs
xchg
insl
add
push
nop
add
cmpsb
and
adc
adc
or
add
add
and
add
popa
inc
popa
add
orb
xor
add
adc
add
and
pop
dec
test
int
cmp
and
inc
cmp
lret
xchg
andl
inc
xchg
mov
inc
push
inc
add
mov
add
xchg
inc
push
inc
dec
and
addb
inc
add
inc
adc
add
and
push
movb
add
dec
xor
and
sub
adcb
add
or
popa
inc
add
xchg
mov
adc
or
add
in
shlb
cwtl
xchg
mov
add
test
sbb
add
pop
sbb
pop
adc
add
and
adcb
add
add
test
sbb
loopne
or
and
enter
sbb
inc
pusha
inc
adc
add
dec
dec
and
mov
inc
add
pop
xchg
add
and
jo
adc
add
lcall
dec
or
in
test
scas
rolb
add
or
xchg
pop
adc
adc
add
dec
and
movsl
addl
or
daa
or
aaa
sbb
inc
and
mov
inc
add
int3
or
sub
addb
test
insb
push
addl
or
and
add
add
ret
addb
imul
test
pusha
test
xchg
orb
push
addb
adc
add
add
sbb
sbb
inc
add
add
loopne
add
movl
addl
add
add
xor
adc
add
adc
mov
and
add
adc
andb
adcb
mov
addb
mov
pop
mov
sub
addb
mov
add
add
inc
add
add
mov
add
push
cmp
dec
and
add
pop
adc
adc
add
loopne
andb
add
and
push
sbb
push
inc
add
or
add
adc
inc
adc
add
add
or
or
inc
xchg
inc
shlb
lret
add
dec
add
inc
add
xorb
add
adc
das
push
inc
and
add
sbb
add
and
and
test
test
add
mov
add
and
or
rorl
jns
or
add
adc
pop
add
and
inc
add
or
push
xchg
addb
rolb
and
test
and
add
add
mov
cmp
add
adc
and
add
lods
add
inc
pusha
add
pusha
push
cwtl
pusha
add
push
add
mov
and
add
adc
xchg
inc
add
adc
adc
addb
xchg
addl
and
push
adc
add
add
add
adc
add
or
add
sbb
add
mov
add
or
or
xor
xor
sbb
inc
add
add
xchg
and
inc
push
movb
addb
adcl
adc
inc
sub
push
adc
add
add
shlb
ret
adc
xor
inc
add
mov
loope
roll
sub
inc
sub
add
xor
adc
add
movlps
and
mov
inc
add
adc
cmp
sbb
or
mov
roll
in
add
lds
adc
inc
lcall
dec
adc
add
sbb
inc
and
adcb
add
adc
add
xor
add
add
roll
adc
inc
add
sbb
add
add
mov
add
imul
or
add
mov
or
and
cmpb
push
ss
inc
add
add
mov
sbb
sbb
addb
sub
adc
add
bound
adc
add
xchg
or
add
inc
add
or
add
push
add
add
or
inc
inc
loop
or
or
mov
xor
lcall
push
add
or
add
add
addb
add
push
mov
sub
add
and
pop
and
mov
add
and
sub
and
or
or
xor
add
xchg
sbb
inc
cmp
mov
addl
xlat
add
add
xor
add
adc
or
inc
inc
or
and
add
inc
or
addb
mov
pop
and
or
test
sbb
jo
inc
ss
mov
and
nop
and
add
push
or
inc
orl
cmp
adc
adc
mov
mov
inc
fldl
add
add
push
add
add
or
inc
insl
inc
test
or
xor
and
xchg
xor
rcl
add
or
adc
dec
add
pop
add
adc
and
add
andl
add
add
adc
xchg
lods
or
or
push
mov
xor
mov
add
adc
and
dec
and
and
add
adc
es
or
or
andb
push
dec
add
mov
inc
add
mov
test
add
inc
test
popa
add
daa
movsb
mov
les
inc
and
adc
pop
or
mov
test
test
dec
pop
movsb
adc
add
cwtl
or
xor
orb
sub
push
pusha
nop
adc
inc
push
add
or
inc
or
lea
adc
roll
sbb
add
adc
xor
add
add
add
inc
or
add
mov
rolb
add
push
and
add
adc
addl
fs
xor
or
adc
or
inc
mov
or
xchg
adc
add
or
dec
in
rolb
or
add
or
test
or
push
adc
les
add
nop
mov
push
cmp
add
add
rolb
or
addb
add
insl
add
add
addb
in
adcb
js
inc
xor
add
sub
inc
rolb
add
adc
push
or
pop
add
or
adc
add
push
adc
mov
adc
add
adc
pusha
inc
sub
add
adc
push
add
adc
andb
add
sub
push
and
add
or
fs
andb
sub
inc
rorl
or
adc
add
adc
add
shl
sub
addb
faddl
push
adc
add
push
xchg
adc
add
or
adc
sbb
addl
and
add
test
adc
adc
add
adc
inc
add
add
and
mov
sub
xor
pop
and
inc
pusha
add
mov
imul
add
and
enter
and
xorb
bound
add
les
or
and
adc
push
daa
or
add
les
add
mov
pop
jb
xchg
add
add
or
sub
sub
in
fcoms
or
add
aad
adc
add
inc
and
add
rol
and
add
andb
xor
mov
inc
sub
sub
les
or
and
and
add
sub
add
add
and
fs
test
push
daa
mov
add
test
rcll
addb
inc
add
adc
or
xor
inc
mov
mov
test
or
scas
test
adc
lods
add
or
mov
movsb
push
xor
add
inc
add
bound
mov
add
xchg
test
sub
inc
cwtl
add
xor
xor
inc
test
adc
adc
or
inc
push
pusha
sbb
mov
ret
inc
or
inc
adc
add
and
addb
add
and
add
enter
and
jecxz
xchg
popa
dec
shlb
inc
xor
and
cmp
lret
inc
add
inc
inc
lret
sbb
or
or
inc
and
add
adc
dec
imul
inc
add
cltd
add
add
add
dec
add
pusha
and
addl
add
add
adc
mov
or
xchg
add
xchg
xor
and
xor
sbb
mov
add
dec
and
ret
xorl
jae
subb
add
and
inc
nop
or
cmp
jo
and
add
addl
or
add
pusha
movsb
bound
pusha
cwtl
pop
inc
or
add
pop
or
add
or
add
test
xlat
or
nop
pusha
add
rorl
inc
jno
inc
lds
mov
inc
and
and
stos
orl
jbe
add
add
adc
or
outsb
or
roll
or
add
add
push
adc
add
or
push
pusha
adc
sub
add
add
js
rolb
and
push
add
or
add
add
and
addb
add
add
lock
mov
add
stos
mov
mov
add
and
es
add
pop
adc
or
loopne
and
mov
add
cmp
or
cmp
add
and
ret
inc
movb
inc
inc
and
add
xor
or
push
addl
test
adc
lods
add
add
add
and
adc
or
pusha
pusha
adc
pushf
mov
lea
add
mov
addl
push
adc
mov
add
xor
inc
add
jp
mov
les
add
dec
pop
inc
inc
add
dec
cltd
add
sbb
or
add
or
xchg
int3
adc
add
test
rolb
addb
inc
and
sub
or
adc
push
add
inc
or
xchg
add
add
or
and
popa
or
add
addl
fadds
and
xor
add
add
addb
sub
and
bound
and
add
add
or
or
adc
xor
adc
test
adc
add
dec
add
add
or
rolb
adcl
pop
fimuls
loope
xor
and
or
aad
inc
rorl
add
addb
ret
movsb
inc
mov
cmp
add
add
rolb
add
mov
add
dec
inc
and
xor
orb
dec
mov
movsl
push
or
adc
add
or
inc
add
or
or
and
inc
add
add
adc
add
pusha
push
mov
pusha
adc
rolb
inc
adc
sub
pop
push
or
add
add
loop
push
orl
pusha
andl
and
add
cs
or
test
inc
pusha
inc
and
test
test
add
push
add
add
or
popa
inc
add
adc
or
and
adc
test
add
addb
add
nop
sbb
xchg
or
add
push
inc
and
add
ret
subb
add
adc
add
xor
or
int3
add
add
add
add
inc
sub
sub
leave
addb
add
and
mov
sub
mov
add
push
push
push
push
push
call
add
push
mov
mov
push
mov
call
xor
push
push
call
add
cmp
jne
push
call
add
mov
push
add
test
jne
cmp
je
sub
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
add
call
sub
cmp
je
xor
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
call
add
mov
mov
mov
and
mov
mov
or
mov
mov
mov
cmp
jne
mov
or
cmp
je
mov
cmp
jne
or
mov
mov
mov
mov
mov
sub
cmp
jne
push
push
push
call
add
mov
cmp
je
mov
xor
mov
lea
push
call
add
mov
mov
cmp
jne
mov
add
mov
push
push
call
add
mov
cmp
jne
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
push
call
add
push
push
push
push
call
add
test
je
xor
mov
cmp
je
push
push
push
push
push
call
add
mov
or
mov
push
push
push
call
add
push
push
call
add
cmp
je
add
mov
push
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
cmp
je
mov
push
push
push
push
call
add
add
push
push
push
push
call
add
add
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
mov
push
push
call
add
mov
xor
mov
or
mov
xor
test
jne
mov
mov
add
mov
and
mov
or
mov
mov
mov
sub
push
push
push
call
add
push
push
push
call
add
mov
cmp
jne
cmp
jne
mov
call
cmp
jne
sub
push
push
push
push
push
call
add
cmp
jne
mov
cmp
jne
xor
mov
test
je
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
add
mov
mov
push
push
push
push
push
call
add
sub
test
jne
cmp
jne
add
mov
test
jne
sub
mov
push
push
push
push
push
call
add
mov
push
push
call
add
mov
mov
mov
mov
push
push
call
add
lea
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
push
cmp
jne
add
mov
cmp
jne
cmp
je
add
mov
push
push
push
push
push
call
add
mov
cmp
jne
sub
test
je
mov
cmp
je
mov
mov
push
push
push
call
add
push
mov
sub
cmp
je
mov
sub
mov
mov
mov
call
mov
add
mov
push
call
add
push
push
push
push
push
call
add
mov
cmp
je
push
push
push
push
push
call
add
shr
mov
cmp
je
cmp
jne
xor
mov
cmp
jne
sub
push
call
add
push
push
push
call
add
mov
mov
test
jne
mov
mov
mov
mov
add
mov
sub
cmp
je
push
push
call
add
pushl
push
pushl
call
mov
mov
xor
call
addl
mov
add
push
call
add
push
push
push
call
add
mov
mov
mov
call
or
mov
mov
mov
mov
mov
mov
mov
call
test
jne
xor
mov
push
push
push
push
call
add
call
call
push
push
push
push
push
call
add
cmp
jne
cmp
je
mov
test
je
mov
mov
mov
cmp
jne
push
push
call
add
cmp
jne
push
push
push
call
add
xor
mov
cmp
je
or
mov
push
push
push
call
add
cmp
jne
mov
sub
push
push
call
add
push
push
push
call
mov
mov
mov
call
or
mov
cmp
jne
and
mov
cmp
je
cmp
jne
mov
mov
mov
push
push
call
cmp
je
mov
call
or
mov
mov
mov
mov
mov
push
push
call
mov
or
cmp
je
mov
push
push
push
push
call
sub
mov
cmp
je
sub
test
je
push
push
push
push
call
add
mov
add
push
push
call
add
mov
push
push
call
add
push
push
push
push
push
push
call
cmp
je
mov
push
push
push
push
push
call
call
push
push
push
push
push
call
mov
push
push
call
add
push
push
push
push
call
mov
add
push
push
push
call
add
call
add
mov
call
mov
push
push
push
call
mov
push
push
push
push
push
call
mov
call
cmp
je
push
push
push
call
add
push
call
xor
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
call
cmp
je
cmp
jne
mov
push
push
push
call
add
cmp
je
mov
push
push
push
push
call
push
push
push
push
call
add
push
push
call
push
call
add
push
push
call
or
mov
push
push
call
mov
push
push
push
push
push
push
call
cmp
jne
mov
mov
mov
pop
add
cmp
jne
mov
mov
push
push
push
call
add
pop
mov
cmp
je
cmp
jne
push
call
add
mov
xor
test
jne
mov
xor
mov
push
push
push
call
add
push
call
add
cmp
je
mov
add
cmp
jne
mov
add
cmp
jne
sub
mov
push
push
call
add
pop
mov
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
push
push
push
push
call
add
push
mov
push
mov
xor
push
push
push
call
add
push
add
mov
mov
movl
and
mov
cmp
jne
mov
mov
mov
mov
push
push
push
push
call
add
add
push
push
push
call
add
mov
call
mov
mov
push
push
push
push
push
call
add
call
xor
cmp
je
mov
cmp
jne
mov
test
je
mov
mov
mov
cmp
je
mov
call
test
jne
mov
cmp
jne
mov
mov
mov
mov
cmp
je
call
mov
mov
xor
mov
add
mov
mov
mov
call
push
call
mov
or
je
mov
mov
addl
mov
lea
mov
mov
inc
mov
cmp
je
cmp
jne
mov
cmp
jne
cmp
jne
mov
cmp
je
xor
mov
cmp
je
or
mov
mov
mov
test
jne
test
jne
add
mov
sub
add
mov
cmp
jne
and
mov
mov
mov
mov
cmp
je
mov
sub
mov
push
push
push
push
push
call
add
xor
call
cmp
je
mov
push
call
add
cmp
je
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
cmp
jne
mov
sub
push
call
add
mov
mov
pop
mov
or
push
push
push
push
call
add
push
push
push
call
add
pop
mov
pop
sub
cmp
je
mov
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
call
add
push
mov
call
push
mov
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
or
mov
push
push
push
call
add
rdtsc
mov
mov
sub
mov
mov
cmp
je
add
mov
mov
mov
mov
mov
sub
mov
mov
and
mov
mov
mov
push
push
push
call
add
sub
test
jne
push
call
add
mov
mov
push
push
push
call
add
mov
mov
mov
rdtsc
mov
xor
mov
cmp
je
cmp
je
mov
add
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
test
jne
mov
mov
xor
mov
mov
pop
sub
mov
cmp
jne
and
mov
mov
mov
mov
pop
cmp
jne
and
mov
cmp
je
cmp
je
mov
sub
mov
test
je
mov
mov
mov
add
cmp
jne
cmp
je
xor
mov
pop
sub
cmp
jne
test
je
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
sub
push
call
add
push
mov
push
push
push
call
add
mov
mov
mov
mov
mov
cmp
je
mov
decl
mov
mov
xor
xor
mov
cmp
jne
mov
addl
mov
add
mov
cmp
jne
cmp
jne
cmp
je
sub
cmp
je
cmp
je
xor
mov
mov
sub
or
mov
mov
cmp
je
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
cmp
je
add
mov
jmp
sub
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
pop
sub
mov
mov
mov
pop
and
mov
cmp
je
add
mov
cmp
jne
xor
mov
mov
cmp
je
cmp
je
mov
push
push
call
add
add
push
call
add
mov
push
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
mov
sub
mov
movl
mov
add
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
movzbl
movzbl
xor
mov
mov
mov
movsbl
sub
mov
mov
mov
movsbl
mov
movsbl
lea
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
test
je
add
cmp
je
mov
cmp
je
mov
add
mov
push
sub
cmp
jne
mov
xor
cmp
jne
sub
cmp
jne
and
mov
mov
mov
add
cmp
je
mov
mov
cmp
je
mov
mov
sub
cmp
jne
mov
mov
add
cmp
je
mov
sub
mov
mov
mov
pop
add
mov
cmp
je
mov
add
mov
mov
cmp
je
xor
mov
cmp
jne
mov
cmp
jne
mov
add
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
sub
test
jne
xor
mov
cmp
je
add
mov
mov
mov
mov
mov
mov
mov
pop
cmp
je
mov
mov
pop
xor
cmp
jne
and
cmp
je
cmp
je
mov
mov
cmp
jne
add
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
push
mov
sub
mov
mov
push
sub
mov
cmp
jne
mov
mov
sub
mov
xor
mov
cmp
je
mov
cmp
jne
mov
mov
or
mov
cmp
je
mov
mov
cmp
jne
xor
mov
cmp
je
mov
mov
xor
mov
mov
cmp
je
mov
mov
mov
mov
mov
pop
cmp
jne
mov
or
cmp
je
xor
mov
pop
mov
cmp
je
xor
mov
pop
mov
leave
ret
add
call
sbb
repz
sbb
pop
mov
imul
add
ljmp
std
imul
mov
jbe
mov
data16
push
je
pop
gs
mov
inc
mov
mov
movsl
jle
ficomps
lahf
enter
pshufw
sbbl
inc
mull
cli
rolb
test
into
add
mov
mov
lock
je
cmp
sbb
out
push
or
inc
push
aaa
push
push
push
ja
outsb
push
pop
test
rorb
clc
or
aam
adc
repnz
mov
rcrb
scas
pusha
fcmovnb
mov
xor
or
std
inc
xchg
in
imul
sub
push
xchg
mov
out
inc
rcr
xor
xrelease
into
mov
repnz
cmpsb
push
cmpsb
aad
sbb
add
cmp
push
pushf
ljmp
pop
mov
mov
lahf
cmpsl
rorb
pop
into
jge
out
sbb
or
outsl
xchg
cmp
js
sbb
mov
inc
pop
xchg
mov
add
fwait
gs
add
jmp
pop
pop
cwtl
jnp
lods
mov
sbb
cld
ret
sar
pop
pop
mov
xor
lcall
fcmovnbe
jle
push
xor
sbb
pop
mov
xchg
adc
cltd
sub
xor
and
movsl
add
shrb
xlat
jns
and
mov
xor
enter
arpl
adc
ja
dec
mov
cmp
in
mov
mov
insb
loopne
movsb
push
mov
mov
ds
sub
cmp
icebp
repnz
adcl
jl
jle
pusha
int
sub
xchg
pop
dec
in
mov
pop
xor
pop
add
mov
into
adc
loope
dec
aam
pop
addr16
or
push
xchg
sarb
adc
cmp
push
xchg
xchg
out
mov
add
jnp
xchg
in
inc
xchg
adc
data16
xchg
repz
xchg
cmp
shll
or
cmc
add
daa
cmpsl
xor
daa
fsts
out
cmp
push
popa
sub
fwait
mov
ljmp
std
js
xchg
imul
push
sarb
lds
shrb
mov
cld
xchg
inc
mov
cmp
cmp
sbb
xor
or
call
mov
mov
xor
stos
popa
js
je
pop
jecxz
push
adc
adc
test
and
clc
add
outsl
out
xchg
ljmp
sub
insl
mov
mov
rcrb
xor
gs
imul
xchg
add
cli
adc
cmp
ss
and
jl
shlb
outsb
fwait
inc
push
jl
xchg
push
add
sub
mov
sub
popa
inc
sbb
inc
fbstp
stc
fistl
push
pop
lock
cmp
mov
inc
sbb
jle
pop
cmpsl
nop
rcll
test
ds
sbb
rcrb
mov
sub
out
pop
add
mov
call
push
rep
add
addl
lcall
sbb
nop
and
cmpsb
cmp
jle
fistpl
cwtl
sbb
subb
mov
jle
repnz
cmp
sub
mov
sbbb
xor
aaa
shlb
outsl
mov
xchg
shlb
xchg
mov
stos
xor
je
pop
ja
out
mov
repnz
inc
mov
push
fwait
xchg
nop
jecxz
dec
sbb
mov
les
and
sbb
cli
and
dec
mov
or
xor
lea
push
shlb
in
xchg
stos
ficoms
xchg
adcb
push
outsb
push
shrl
cmp
gs
fists
inc
repz
sub
jp
jo
fucomi
push
dec
cltd
div
rclb
leave
jbe
sbb
idivb
rorb
je
xchg
inc
sub
fs
icebp
int3
bound
jle
push
adc
rolb
sbb
test
iret
push
hlt
cmp
cmp
mov
shlb
stos
mov
jo
push
push
dec
sahf
addr16
js
mov
jge
sub
fcmovb
and
subb
aaa
or
lods
sarb
gs
ficomps
sub
mov
push
sahf
in
pop
hlt
add
daa
add
aad
in
roll
shll
or
or
sub
inc
mov
cmp
sahf
cmp
cmp
xchg
xchg
rcl
mov
cmp
outsb
push
nop
std
aas
cmpsb
sbb
mov
cmp
out
fs
push
lahf
lcall
daa
mov
fildl
rclb
or
cmp
mov
aaa
xor
cmc
sbb
call
and
pop
sahf
ja
push
enter
sbb
push
cs
sarb
dec
push
cs
mov
bnd
adc
fcompl
jno
jle
inc
jbe
rclb
mov
and
pusha
mov
mov
mov
sub
hlt
dec
mov
fwait
sbb
aaa
pop
xlat
mov
aam
cmpsb
loopne
push
mov
rcrb
mov
shlb
dec
je
or
test
or
shrl
xor
popa
imul
dec
push
fisubrs
test
mov
sub
push
mov
subb
jb
mov
add
loop
sub
cmpsl
xchg
stos
jp
in
xlat
pop
pop
outsb
xor
add
mov
imul
iret
mov
sbb
popf
jnp
test
lcall
jmp
loopne
orb
imul
pop
lret
or
es
in
cmc
rcl
pop
xchg
fwait
jae
pop
je
jbe
and
sti
es
xchg
mov
fcmovu
adc
add
mov
andps
mov
rorl
cmpsb
mov
sub
fwait
push
or
cwtl
into
loope
clc
mov
aad
cli
cmp
je
sbb
inc
test
rcrb
fcoms
sbb
hlt
out
xor
inc
repz
jl
orb
lcall
shl
test
xchg
mov
push
sbb
jae
cmp
xchg
inc
mov
sbb
fldt
mov
das
in
mov
sbb
cltd
loope
xor
jnp
mov
xor
sbb
xorb
and
out
jb
lret
pop
scas
shl
in
fcmovne
rcrl
lahf
pop
aam
arpl
add
ret
push
push
and
push
xlat
adc
xor
add
repz
js
jp
repz
adc
loop
or
stos
int
mov
xorl
mov
rcrb
loop
out
mov
lods
jge
jge
push
xchg
xor
lock
lds
outsb
pushf
mov
dec
mov
loopne
ret
cld
mov
sahf
cmp
ret
xor
test
out
push
mov
aam
pop
mov
rcr
jbe
loop
mov
pop
cmp
sub
mov
fcmovnu
xchg
cmp
inc
jl
sarb
sbb
xchg
loope
nop
rorl
inc
insl
sbb
jp
dec
mov
sahf
mov
xchg
adc
sbb
adc
rorb
nop
imul
push
scas
jl
pop
push
jg
nop
add
fwait
insb
mov
dec
sbb
pop
mul
jmp
jb
popf
inc
rclb
or
fstpl
cmp
lods
sbb
jbe
mov
mov
or
test
ljmp
rol
adc
ror
mov
pop
push
sbb
fsubrp
add
mov
sub
cmp
pop
fs
cwtl
stc
or
adc
ljmp
mov
adc
popa
cmp
enter
xchg
push
xor
insb
jg
pop
insb
jnp
test
testl
shl
sub
xchg
sub
xorb
sbbl
lahf
ret
shr
and
cmpsl
sbb
movsb
test
aas
add
cmp
jno
sti
cmp
sub
pop
dec
rolb
int3
jno
xchg
mov
cwtl
cli
sbb
jmp
dec
xchg
jl
adc
dec
imul
cmp
je
jmp
dec
and
scas
insb
xchg
sbbb
jg
lods
xlat
pop
arpl
rorb
lea
je
or
imul
dec
nop
lret
pop
shl
mov
push
mov
js
aaa
push
sbb
mov
push
dec
xlat
lds
fisttps
cmp
mov
int3
mov
cmpsb
inc
push
ret
shlb
in
clc
test
pop
pop
mov
outsl
jp
movsb
stc
mov
out
pop
or
xor
dec
mov
push
add
sbb
repnz
mov
jbe
imul
dec
push
sbb
pusha
shll
sbb
sub
inc
pop
cmp
xor
inc
xchg
pop
test
sbb
xor
cmp
push
sahf
adc
xchg
pop
push
sbb
pusha
dec
xchg
and
shll
test
nop
rolb
xchg
xchg
lock
stc
xlat
scas
xchg
ljmp
cwtl
sbb
fs
scas
mov
add
sbb
sub
gs
cmp
fstpt
jmp
inc
cmp
xchg
shlb
mov
mov
jbe
sbb
or
fwait
mov
sub
popf
jnp
jne
push
mov
adc
roll
sub
pop
and
leave
test
pop
mov
mov
lcall
sub
jl
or
inc
sbb
cmpsb
mov
rcrl
add
adc
and
out
aad
insb
mov
pop
xor
lea
mov
cs
sahf
mov
not
popa
cmp
xchg
sbb
in
sub
mov
sbbb
or
sti
fs
jecxz
jne
sahf
sbb
cld
inc
sub
cltd
sbb
aad
push
sbbb
in
lds
add
add
inc
das
sbb
and
mov
addb
xor
add
and
xor
and
enter
cltd
jne
jo
xor
fimuls
aad
out
mov
cld
pushf
addr16
or
mov
test
add
fwait
adc
sbb
cli
add
shrl
lcall
add
or
int3
push
iret
pop
std
xchg
sbb
hlt
lea
scas
in
xchg
bound
mov
sub
sbb
inc
adc
sub
int
out
add
cmp
xchg
outsb
das
sbb
jbe
mov
push
mov
dec
mov
pop
xchg
push
inc
cmpl
rorb
pop
in
dec
dec
sti
sbb
add
sbb
out
out
out
sbb
adc
xorb
shrb
iret
repz
jmp
sbb
icebp
insl
cltd
or
pop
cmc
xchg
mov
mov
push
aas
daa
das
sbb
cli
aad
lods
xchg
cmpsb
jnp
je
mov
jns
das
dec
fisttpl
fistpll
mov
or
xchg
pop
add
mov
xchg
fimull
jmp
jle
ficompl
pushf
movsb
movsb
push
loopne
xlat
lahf
aam
fsubrl
xchg
rcll
mov
inc
fldl
xor
add
shlb
testl
lock
mov
outsl
or
xchg
adc
cmpl
and
mov
int
jo
adc
in
push
sarb
les
adc
jo
pusha
fnstenv
xchg
push
pop
pop
mov
sbb
into
add
mov
mov
lds
push
sbb
lret
mov
orb
nop
or
fistpl
mov
sbb
es
rorb
inc
xor
sbb
sub
fimuls
test
lgs
xorl
adc
and
and
pop
sbb
repnz
xchg
int3
push
mov
push
cmpl
and
das
xchg
shlb
inc
test
ficompl
jo
stc
pushf
jge
or
subl
pop
xorb
dec
sbb
outsl
aaa
pop
xchg
test
popa
add
daa
in
sub
mov
cwtl
sbb
divb
adc
je
mov
setno
jb
lods
adc
adc
les
fcmovnb
adc
mov
repz
add
and
in
or
push
push
mov
mov
out
xchg
insl
enter
fsubrl
shrb
or
pop
out
cmp
es
and
sbb
leave
xchg
fldt
call
push
js
arpl
jmp
sub
lods
xchg
fwait
addr16
shr
push
aam
lods
ret
pop
mov
push
sub
daa
shlb
cltd
and
gs
cmc
test
fstpt
xchg
les
adc
loopne
addr16
push
inc
pop
nop
xlat
sub
lcall
sti
adc
xor
or
ret
jne
jge
pusha
outsb
stos
inc
dec
sahf
enter
test
fwait
dec
sbb
popf
mov
leave
pop
out
inc
mov
inc
insb
xorb
sbb
aam
ret
mov
xlat
dec
data16
out
cmpl
sbb
xchg
adc
shlb
call
xor
out
inc
and
rcl
add
outsl
fcomps
ljmp
fcomps
push
ret
inc
fwait
daa
jne
ss
imul
push
rorb
add
and
lret
pusha
sbb
and
push
outsl
es
sub
sbb
sbb
xor
enter
inc
in
xchg
mov
and
mov
and
pop
inc
cmp
sbb
adc
imul
aaa
xor
in
nop
add
popf
jo
pop
dec
dec
sahf
lods
push
repnz
incb
mov
popa
ja
bndstx
test
mov
pop
push
and
or
mov
push
jle
jnp
imul
or
lret
sbbl
out
into
pop
stos
leave
sbb
xor
adc
push
mov
xor
cmp
xchg
inc
push
cvtps2pd
mov
cwtl
scas
icebp
mov
pop
push
out
cs
rcrb
push
add
sbb
shll
cmp
daa
xchg
imul
fiadds
pop
push
adc
sbb
jo
inc
or
fdivrl
or
sbb
or
in
and
push
sarb
in
cmp
and
bound
sbb
insb
xlat
ret
aam
inc
shll
cld
scas
xchg
rolb
addl
lods
jns
xor
dec
out
imul
sbb
adc
or
mov
cmpsl
or
xor
sbbb
int
push
inc
cmc
pop
shl
cmpl
jg
insb
stos
imul
jns
pop
repz
sbb
cmc
mov
test
cs
and
sbb
sub
push
or
adc
in
aas
bound
xor
inc
sbb
jecxz
ret
lret
jb
test
pop
jmp
or
loopne
mov
cli
rcl
mov
ret
push
push
push
push
lods
push
mov
push
mov
fsubr
in
push
icebp
cwtl
fidivrl
xchg
dec
fwait
mov
xor
push
mov
pop
dec
test
out
mov
sbb
push
je
jle
adc
iret
loopne
pushf
or
xchg
cmpsl
outsb
fstpl
outsl
pop
pop
dec
xor
push
pop
jle
out
jb
sbb
xor
mov
add
adc
test
hlt
in
dec
ljmp
cmpsl
push
inc
cmp
pop
aad
out
stc
int
adc
jmp
sbb
mov
xor
addb
pop
adc
enter
sub
insl
lock
push
gs
sbb
jbe
mov
leave
jb
nop
jns
and
ret
and
aas
cmp
iret
outsb
jecxz
jo
nop
scas
hlt
mov
sarb
stos
cmp
popa
fstl
pop
into
inc
sub
and
sbb
popl
sub
jle
jno
adc
fsts
sbb
sbb
mov
ret
cltd
cmp
stos
push
mov
xchg
pop
sbb
mov
add
add
xchg
rclb
sbbl
cli
add
or
clc
xchg
inc
cmp
inc
popa
jg
stos
mov
lcall
push
dec
sahf
rolb
inc
sub
sbb
jo
jmp
push
cld
es
pop
pop
lea
fwait
je
xchg
xor
jo
inc
mov
jle
xchg
push
add
mov
sahf
and
inc
xor
cvtpi2ps
mov
or
inc
int3
sbb
sub
movsl
outsb
push
sti
popa
cmpsl
pop
faddl
sbb
dec
fsubrl
insb
dec
or
out
and
shlb
push
mov
xchg
movsl
pusha
jg
incb
dec
stos
sbb
cmc
pusha
enter
cmp
scas
outsl
fwait
pop
dec
bnd
das
jg
adc
ret
shrb
popf
mov
nop
pusha
cmpsb
je
pop
fs
sbb
xchg
fcomi
rcrb
mov
mov
sbb
mov
scas
mov
out
jp
adc
jmp
sbb
hlt
pop
mov
shrb
xchg
pop
bound
or
insb
je
push
outsb
sbb
orb
push
notb
sbb
sub
call
xchg
pop
insb
add
popf
jg
cwtl
push
cwtl
mov
adc
fcmovne
call
adc
add
cli
clc
loop
push
shlb
jnp
addb
xchg
sbb
cmc
cmp
in
jmp
sbb
rorb
push
aaa
adc
sbb
icebp
fsubr
inc
xor
pop
cmp
and
cmc
adc
andb
popf
sbb
push
mov
ja
cltd
ror
jp
lcall
push
imul
out
xchg
mov
outsl
je
orl
pop
xor
lcall
fldcw
pop
ret
ljmp
mov
dec
cli
and
shlb
inc
shll
lahf
ljmp
or
push
fwait
cmp
sbb
pop
pushl
jge
gs
mov
std
sbb
jne
imul
sbbl
cmp
and
ffree
sub
and
push
dec
pop
clc
shll
cld
aad
and
push
call
mov
and
cltd
les
cltd
pop
jle
adc
aaa
xchg
jge
das
arpl
mov
sbb
test
aad
mov
ret
jno
cli
ljmp
push
mov
cmp
lret
xchg
cmpsb
mov
xchg
mov
push
subb
sub
mov
lea
mov
out
inc
jle
fchs
mov
sub
adc
sbb
xlat
mov
lahf
fwait
in
outsl
pop
rcrb
xchg
pop
mov
dec
xchg
ljmp
pop
sub
push
dec
js
ss
mov
mov
lds
fs
iret
nop
adc
fistl
idivl
jno
lretw
pop
mov
rclb
loop
mov
pop
fidivs
xchg
adc
mov
mov
sbb
aam
pop
or
lcall
out
xchg
inc
cmp
cmpsb
sbb
cwtl
push
loopne
insl
shr
loopne
aaa
push
xor
xchg
push
incl
jno
pushf
femms
xor
inc
add
into
lret
xchg
rclb
xlat
jbe
cmpsl
das
push
cmp
lret
mov
pop
mov
or
push
rolb
arpl
inc
pop
stos
fsubl
and
adc
sbb
mov
test
rcl
add
sub
rcrl
mov
jmp
mov
mov
mov
ret
call
loope
lods
and
das
xchg
in
cmp
cmp
mov
pop
movsl
dec
cld
fisubl
jo
and
std
and
cs
push
sbb
pop
aas
fildll
xchg
xchg
push
pop
xchg
cltd
push
mov
iret
repz
shlb
out
mov
xorb
sbb
mov
mov
in
sub
sub
sbb
sahf
fs
xchg
sbb
dec
movsl
pop
jg
sti
fidivrs
leave
mov
push
push
add
sti
xor
fildll
rolb
sub
mov
xchg
lock
outsb
pop
mov
sbb
or
xor
xor
sbb
lods
cwtl
lock
stos
xchg
inc
into
popf
fptan
idiv
loopne
mov
adc
mov
sub
and
inc
cmp
sbb
repz
test
xadd
sti
sbb
push
cld
das
imul
adc
pop
fwait
push
sbb
pop
xchg
xchg
adc
movsl
aaa
pop
imul
adc
and
in
je
add
sahf
into
adc
sbb
and
jecxz
negl
pop
sub
cmp
cwtl
out
inc
cmp
scas
xlat
jne
jmp
cmp
js
inc
aad
push
xlat
mov
mov
fisubrl
lret
clc
rorl
sbb
adc
or
inc
rolb
adc
mov
sbb
into
mov
aam
out
fisubrl
inc
pop
das
or
cmp
add
rcrb
pop
inc
mulb
xor
push
rcr
movsl
stc
push
mov
pop
pop
mov
sub
pop
mov
lea
add
in
xchg
cltd
pop
push
and
adc
mov
adc
insb
dec
sbb
jae
adc
push
sbb
cmp
jge
push
pop
popf
sbb
sub
cs
inc
jmp
insb
sub
mov
into
push
jno
sbb
xor
lods
cmp
mov
in
push
fstl
pop
int3
imul
cmp
dec
fsubrp
xchg
push
fldt
jg
adc
sbb
sbb
icebp
mov
jae
stc
inc
filds
cld
or
rcrl
push
rclb
shlb
insb
outsl
push
pop
xchg
sbb
mov
rcl
stc
mov
adc
inc
sub
pusha
sbb
js
mov
ljmp
lods
or
movsl
fmul
add
in
mov
and
mov
das
lret
aaa
mov
sbb
lcall
pop
sbb
pop
push
sbb
dec
sbb
lret
sarb
xor
mov
cwtl
hlt
sbb
icebp
adc
sub
repnz
cwtl
and
adc
pusha
mov
mov
jnp
jg
push
sub
fcmovnb
xor
out
fwait
mov
call
nop
cmp
rcl
test
jg
sbb
push
adc
or
cmp
imul
sub
xlat
idivl
pop
jecxz
mov
aam
ss
push
xchg
cld
scas
sbb
mov
inc
sahf
mov
test
sub
shr
fwait
jg
sub
xchg
pop
sbb
adc
fcoml
fildll
mov
pop
sar
xchg
pop
push
scas
jecxz
dec
imul
mov
in
fisttpl
xchg
jne
out
mov
fwait
fwait
or
loop
mov
rcrl
pop
sbb
jecxz
jnp
sti
push
adc
mov
sub
mov
xchg
and
adc
outsb
jle
xchg
jp
xor
add
imul
pop
add
jge
adc
ss
sub
xor
ja
and
jecxz
xchg
dec
sbb
mov
cmp
jb
push
mov
push
ret
in
call
sbb
push
add
repz
mov
pop
inc
mov
or
scas
xchg
outsl
ss
popa
sbb
or
xor
pop
push
ljmp
lea
pop
sub
lret
fs
jns
add
sub
push
mov
push
xchg
cmp
push
dec
xor
int3
mov
cld
out
push
mov
mov
and
push
sbb
js
out
inc
add
push
out
out
push
add
sbb
sub
repnz
sahf
push
ss
loope
dec
loopne
add
subb
test
in
ret
push
mov
daa
pusha
xchg
out
dec
sbb
scas
pop
movsl
fstpl
cmpsb
adc
fst
push
jge
xor
sbb
divl
xchg
cmpsb
into
xchg
xchg
or
sbb
cmpl
pop
mov
imul
nop
jo
addb
fnstcw
cmp
or
sbb
and
clc
pop
adc
xchg
jns
hlt
push
sbb
add
sub
or
or
popf
push
sub
pop
xor
and
push
xor
mov
inc
xchg
push
and
mov
ss
add
jl
loop
out
push
test
insl
sti
sbb
jo
test
mov
pushf
mov
cmp
push
adc
lods
hlt
fmul
shrb
rcr
pop
sub
push
enter
pop
mov
sbb
push
sbb
mov
jno
or
mov
xchg
sbb
iret
jge
sahf
lret
lret
xchg
mov
enter
mov
loope
jp
sub
sarb
or
jo
dec
push
aad
in
mov
xchg
sbb
xor
mov
push
jecxz
lods
ret
xchg
cltd
test
fwait
pop
cmp
xchg
lahf
pop
xor
pop
ret
sub
pop
mov
push
movsl
fsub
adc
popf
int3
repnz
pop
push
xor
sbb
es
add
scas
cmp
cld
dec
xlat
sbb
sbb
arpl
sarb
mov
lods
xor
sub
xor
sbb
jo
dec
sbb
shlb
lret
xor
push
xchg
push
or
push
inc
arpl
inc
clc
pop
lods
sbbb
cmp
fistpl
jns
mov
pcmpeqb
imul
xchg
dec
mov
aaa
add
ljmp
adc
push
mov
cmc
call
xor
mov
jmp
sbb
jne
sbb
adc
out
sbb
adc
rorb
xor
repz
repz
leave
adc
mov
fs
rol
sbb
inc
iret
xchg
sti
fdivl
or
test
loopne
or
mov
push
mov
jno
lds
out
sbb
outsb
daa
or
xchg
rcll
sbb
and
popa
sahf
out
push
dec
jo
xor
cwtl
call
sub
cmp
inc
hlt
dec
cwtl
jecxz
jg
push
je
js
inc
or
dec
ror
aad
sbb
mov
in
cltd
push
pop
and
out
adcl
out
femms
lock
cmpsl
outsb
pop
mov
mov
subb
push
loope
and
jge
imul
cli
dec
sti
sbb
rcrl
imul
mov
rclb
popf
idivl
shr
dec
cmp
pop
mov
mov
inc
jg
mov
loopne
cmpsb
sbb
lea
shlb
mov
jle
rorl
inc
jns,pn
ret
stos
push
xor
imul
arpl
jge
adc
int3
sbb
cwtl
mov
xchg
xor
insl
dec
leave
inc
shl
mov
mov
adc
sbb
mov
cmc
fmuls
ret
sbb
jnp
cmp
add
mov
cmp
mov
fisubrs
sub
lds
enter
mov
push
sbb
pop
push
loope
pushf
pop
jmp
cwtl
adc
sti
in
add
icebp
dec
xor
shrb
loopne
outsl
mov
ficomps
adc
pop
fstps
xchg
lret
or
sub
sbb
cmp
xor
pop
sarl
sbb
pop
jns
aad
lcall
mov
ficompl
insl
xcrypt-ecb
cmpsl
push
dec
ja
stc
ficoms
gs
repnz
jle
adc
scas
addr16
xchg
or
mov
pushf
inc
ror
pop
int
push
xchg
gs
cmc
and
sbb
cmpsl
loop
inc
int3
sbb
mov
ret
xor
dec
cmp
mov
mov
jo
rorl
aad
pushf
mov
cltd
xchg
std
dec
and
push
outsb
cmp
dec
fwait
jno
stc
pusha
dec
cmp
es
popa
mov
xor
sbb
fistl
sbb
insl
ret
sub
mul
cmp
popf
rcr
jecxz
jle
hlt
in
xchg
shr
xchg
inc
push
and
pop
or
pop
or
rcrb
jnp
pop
push
loope
lods
sub
mov
adc
adc
push
pop
sahf
dec
dec
xor
stos
cltd
pop
push
pop
mov
icebp
stc
pop
sar
sbb
push
adc
mov
lret
xlat
push
jno
repnz
int
pop
sahf
cmp
mov
mov
or
mov
outsl
lret
and
push
jecxz
push
sub
pop
cmp
jo
mov
or
mov
jge
int3
ja
mov
dec
pop
push
push
push
sbb
pop
jb
adc
aad
ds
cmp
sbb
push
outsl
loopne
shr
addl
int3
ret
xchg
jp
out
fsubr
and
out
pushf
push
arpl
xchg
xchg
leave
sbb
sub
cld
mov
xchg
rcrb
ds
decl
inc
adc
sti
hlt
ret
jg
stos
xchg
xchg
icebp
fisubrl
and
push
shlb
jl
inc
sbb
imul
enter
arpl
mov
iret
in
sbb
subl
out
pushf
gs
sbb
jge
mov
jg
leave
pop
sub
sbb
mov
sub
pop
mov
insl
in
jb
adc
pop
dec
push
loop
adc
int
call
lds
test
mov
out
jl
out
adc
push
rcrl
pop
pushf
push
loopne
daa
mov
movsb
xchg
jmp
dec
fidivrs
shlb
sbb
repz
imul
cmp
hlt
fidivrs
hlt
movl
push
lcall
icebp
adc
push
jp
mov
lds
and
sti
jb
xchg
mov
xor
fstpl
pop
stos
ror
cmp
mov
popa
lea
mov
cmp
sbb
jno
popf
shlb
inc
mov
add
pop
or
dec
cmpb
repnz
rol
jno
adc
ja
adc
lds
inc
shll
xchg
addb
and
mov
les
xor
inc
mov
int
cmp
xchg
lock
jecxz
loope
sbb
out
mov
mov
mov
in
aas
sbb
push
stc
scas
pop
out
ret
dec
add
shlb
push
sbbl
mov
notl
xor
push
xchg
mov
stos
jmp
or
fiaddl
add
mov
jbe
and
shl
mulb
jb
popa
sub
cmp
xor
pop
out
sbb
cmp
sbb
nopl
or
sub
lret
mov
stos
jo
xchg
std
rolb
bound
sti
arpl
roll
test
or
sbb
fildll
mov
ss
sub
outsl
dec
xor
lods
shll
xor
cmpl
adc
jle
ss
jns
sbb
rolb
xor
xchg
jmp
sbb
mov
add
xchg
jl
test
mov
arpl
xor
or
xchg
pop
int
in
sbb
je
scas
jmp
cld
inc
pop
cmpb
fstpl
add
xor
cmp
cmp
xchg
stc
mov
push
sbb
sub
adc
push
shll
add
insb
rcrl
sbb
fnstenv
int
add
push
cltd
ja
repz
imul
pop
and
cmc
pop
addr16
adc
inc
nop
adc
push
pop
mov
cli
hlt
cs
sbb
filds
aad
adc
inc
or
inc
ror
cmp
frstor
mov
pop
pusha
fwait
xor
and
aaa
push
inc
xchg
nop
inc
mov
arpl
roll
add
dec
mov
sub
rorl
adc
xlat
xor
xchg
dec
sbb
es
sbb
ret
and
loopne
sbb
frstor
pop
mov
in
repnz
loop
mov
push
lret
mov
adc
push
mov
xchg
sbb
and
fdiv
pop
aaa
mov
pop
cmp
pop
fsubr
ror
adc
mov
xchg
test
repz
mov
int
add
loope
jb
cmp
dec
shl
test
dec
ss
xchg
xchg
mov
movsl
xor
add
neg
push
mov
hlt
nop
inc
and
sar
xchg
in
mov
jmp
inc
insb
jp
into
push
sahf
dec
xlat
js
stc
push
jge
sbb
shlb
rcll
xchg
xor
xchg
inc
lret
stc
lods
xchg
pop
in
sub
xor
test
inc
sbb
out
push
insl
mov
rcr
mov
cld
jne
inc
mov
js
xchg
adc
mov
call
sbb
fidivs
adc
jl
pop
repnz
mov
in
jnp
mov
adc
aam
in
lods
cwtl
cmp
sahf
clc
and
cmp
sub
mulb
hlt
sbb
xchg
push
hlt
push
pop
cmp
pop
sbb
stos
push
push
nop
sahf
or
repz
sbb
rcr
cld
cs
test
movsb
xchg
jp
repz
sbb
dec
xchg
push
pop
fistpl
jmp
pop
jmp
sbb
pusha
mov
test
je
push
gs
or
sbb
xor
jmp
push
imul
add
mov
cwtl
add
test
sub
shrb
push
push
dec
dec
ja
cmp
push
push
xchg
call
cmpsl
pop
lods
cmpsb
xor
stos
jge
ss
jmp
bnd
outsb
cmp
addr16
cmpsb
dec
jge
bnd
push
into
dec
and
repz
inc
das
jge
jmp
sub
xchg
or
add
jnp
fndisi(8087
mov
lret
mov
aad
sbb
dec
ficoms
shl
int
ds
ret
mov
jg
push
mov
mov
mov
pop
cmp
push
lcall
rorb
fcoml
fisubrs
add
jmp
jno
mov
lcall
xor
push
cmp
xchg
icebp
mov
ficompl
int
out
out
imul
test
fisubl
pop
xchg
addl
push
loope
es
xchg
mov
mov
in
push
hlt
dec
dec
loope
or
mov
xor
mov
std
leave
insb
ds
insl
mov
mov
scas
xchg
push
sahf
push
neg
inc
and
cltd
addr16
std
insb
cmp
clc
ret
sbb
dec
pop
cmp
aam
or
xchg
push
sbb
push
or
int3
sbb
inc
loope
push
pop
fwait
or
cmp
inc
jp
jb
adc
lods
xor
xorl
test
pop
jmp
std
jmp
cwtl
mov
icebp
push
mov
jae
mov
gs
push
test
incb
xor
cmp
xchg
mov
xchg
daa
xor
ret
jle
fcomps
subb
out
negb
mov
jmp
imul
and
and
mov
fldcw
adc
clc
cmc
fsubrl
mov
sbb
add
jb
xor
mov
dec
pop
hlt
icebp
das
mov
nop
xchg
mov
fwait
aam
jnp
rorb
jg,pt
sbb
in
pop
push
lods
cltd
leave
aaa
add
repnz
jne
shlb
sbbb
fnsave
clc
xor
shrb
cmp
jbe
cwtl
adc
fimull
push
rorb
sbb
mov
daa
inc
xor
jnp
mov
movsl
fnstenv
arpl
add
inc
dec
inc
mov
sbb
mov
scas
push
jno
xchg
cmp
sub
out
jg
rolb
jbe
sbb
pushf
or
mov
scas
pop
mov
push
and
loopne
loopne
push
mov
xlat
arpl
mov
fistl
mov
jne
push
pop
push
cmp
xchg
divl
psllq
addl
outsb
inc
sub
repnz
rcl
mov
ds
sbb
fldenv
pop
ljmp
sahf
and
push
adc
es
mov
or
mov
mov
in
cmp
fwait
cmp
cmp
fisubl
cmp
stc
rclb
push
jmp
inc
sub
jo
pop
mov
nop
pop
mov
scas
sub
pop
call
jno
ljmp
adc
popa
mov
insb
sbb
gs
jp
xchg
stc
lahf
sbb
stos
adc
sarl
xor
xor
xchg
aam
pop
insb
sbb
adc
inc
shlb
jne
sbb
jecxz
sub
out
or
jp
xor
mov
repz
mov
flds
call
sub
js
inc
mov
mov
fildl
pop
imul
mov
dec
jle
daa
pop
jmp
sbb
loope
leave
xchg
sarb
ljmp
cwtl
movsl
push
cli
add
sbb
sbb
pushf
or
sbb
jno
adc
dec
sahf
aas
jbe
pop
pop
or
sbb
fidivs
push
jle
les
add
sbb
sbb
or
loop
repz
std
testl
adc
lock
lret
mov
faddl
jo
aas
in
call
lods
aam
xchg
aaa
mov
imul
jo,pn
push
xor
mov
es
ljmp
xor
mov
jns
mov
and
outsl
xchg
xchg
push
sbb
lods
xorl
pop
and
cmp
int3
fwait
rcll
lods
pop
sarb
into
pop
and
inc
mov
jne
adc
lea
outsl
cltd
rclb
fmuls
sbb
sub
pop
xchg
or
shlb
sbb
fdivr
sbb
jnp
daa
je
xchg
xchg
call
mov
push
mov
adc
out
test
pop
inc
fnop
cmpsl
cltd
testl
orl
inc
aam
adc
sbb
cmc
std
inc
pop
jae
daa
daa
hlt
sub
shrl
sbb
shr
subl
xchg
push
pop
cmp
fcmovnbe
outsb
or
and
aaa
movsb
aam
sbb
sti
jmp
cmc
pop
mov
jl
movsb
add
aam
mov
sbb
inc
popa
fs
fstpl
daa
jne
cmpsb
and
sbb
cmpsb
nop
xlat
cs
adc
dec
xor
push
sbb
jge
mulb
lret
pop
pop
mov
jne
inc
sbb
stos
lret
inc
ret
inc
xchg
adc
and
mov
sbb
in
push
cmpsb
dec
sahf
xchg
push
or
lds
mov
add
and
or
lods
mov
cmp
sbb
testl
int3
aas
fs
inc
sub
cmp
sbb
mov
rcll
ja
jge
pop
aam
jbe
filds
xor
sbb
inc
push
shl
in
iret
sub
jecxz
sbb
popa
cmc
add
fists
add
jecxz
shlb
call
dec
in
and
jno
addr16
sbb
ljmp
xlat
or
lret
popf
adcb
adc
push
pop
dec
and
add
cmpsb
lods
xchg
add
insl
push
jle
jbe
pop
mov
rcl
fistpl
xchg
call
pop
jp
jl
dec
sti
data16
mov
test
test
aas
fmull
mov
cmc
clc
push
push
aas
repz
inc
xor
arpl
stos
dec
jg
xchg
imul
sbb
js
lods
and
test
shlb
std
add
push
and
sub
pop
fstp
mov
roll
mov
cmc
cs
fs
jmp
jmp
imul
push
xor
xchg
stos
fldenv
mov
add
or
mov
int
sbb
das
pop
test
sbb
and
sub
pushf
sbb
or
test
xchg
cli
repz
sbb
and
js
out
imul
pusha
out
lcall
sbb
pusha
les
rcrl
jb
sub
push
pop
pop
cmc
jge
pop
sbb
cmc
inc
or
sbb
mov
dec
test
pop
sahf
push
arpl
add
cmp
pusha
sbb
push
jge
rcrl
shll
push
movsb
and
cmp
lahf
pop
test
xchg
aad
scas
fiaddl
mov
push
sbb
std
aam
shll
inc
in
orb
call
fdivl
cli
jle
shl
pushf
sbb
xchg
icebp
add
arpl
stos
cltd
and
aas
ret
aaa
cmp
jae
dec
jo
shll
outsl
xorb
sahf
pushf
jl
int3
inc
pop
sbb
xor
add
push
loope
cmpb
push
rcrb
mov
dec
imul
mov
sarb
loope
lds
pop
rcrb
outsb
sbb
daa
invd
push
movsb
jo
push
mov
scas
and
roll
cmp
dec
in
movsb
jnp
cmp
fwait
xor
mov
jmp
addr16
fstpt
and
pshufw
mov
mov
pop
sbb
ja
mov
subl
jnp
mov
pop
or
inc
adc
dec
jne
cs
cmp
pusha
sbb
push
lods
inc
cmp
jno
xchg
cmp
in
sbb
cmc
dec
jns
out
lds
nop
mov
imul
pop
scas
jns
inc
sub
fwait
xor
aaa
push
jnp
adc
fidivs
clc
sbb
ljmp
adc
leave
imul
lea
mov
into
pop
jno
shr
clc
mov
pop
mov
sub
mov
stc
rcl
insb
and
ljmp
repnz
mov
xor
mov
lahf
push
loope
inc
xchg
pop
pusha
add
pop
mov
test
fdiv
add
sbb
xlat
roll
adc
mov
sarb
sbb
pop
repnz
lcall
jo
aaa
sbb
lds
jecxz
xor
adc
push
add
sub
shll
jo
lock
xchg
mov
add
xchg
adc
mov
dec
nop
and
mov
sbb
jl
xchg
mov
or
cmp
jle
sub
push
xchg
stos
call
sbb
ret
xor
not
sbb
dec
movsb
sbb
jg
js
mov
inc
pushf
loop
nop
dec
sbb
call
pusha
mov
or
jae
xchg
dec
sbb
xchg
mov
fimuls
push
xor
in
push
sahf
jge
mov
xchg
clc
lar
cli
repnz
mov
xchg
mov
adc
inc
xadd
insb
adc
sbb
sub
repz
rcr
imul
pop
test
dec
jnp
pop
mov
pushf
dec
adc
dec
push
fwait
xchg
sbb
inc
nop
jae
cmp
fwait
les
jmp
jl
sbb
inc
push
dec
cld
aad
pushf
ficomps
or
sub
sbb
pop
inc
stos
fstp
rcl
push
or
dec
hlt
adc
sub
mov
push
mov
push
push
das
cmpsb
stc
mov
sahf
add
xor
jns
xchg
movsb
mov
add
mov
pop
insl
add
push
test
pop
jl
push
scas
xchg
mov
jg
jge
sbb
pop
and
xchg
es
dec
in
testl
mov
sbb
fcmovnbe
cmp
test
daa
jno
cmp
pop
jne
shrb
cli
test
jmp
sbb
push
push
mov
mov
cmp
and
sbb
and
mov
adc
faddl
mov
jbe
mov
test
or
inc
pop
push
outsb
or
das
cmc
aas
adc
stos
mov
lret
insb
loop
add
push
je
insl
adc
shlb
sub
fistpl
mov
outsb
lods
imulb
push
adc
cli
rorb
sbb
ds
push
shrl
cmp
xchg
mov
mov
sbb
add
xchg
push
ret
mov
sub
pop
loope
rclb
and
rorl
and
inc
test
outsl
cli
adc
jo
pop
mov
dec
mov
xchg
xor
adc
adc
popf
sahf
dec
pop
loop
jl
lods
inc
sti
and
add
adc
lea
nop
push
mov
inc
mov
int3
inc
leave
subl
mov
xor
jo
insb
push
shlb
enter
xchg
mov
cmp
pop
daa
xchg
cwtl
mov
fcmovnb
sbb
jne
fidivrl
das
fstpt
push
cmpb
xchg
adc
cli
mov
cmp
inc
aas
sbb
rorl
jle
das
sbb
sub
sbb
cmc
push
icebp
cli
add
sbb
inc
push
pop
pop
sbb
hlt
hlt
imul
dec
sahf
fistpll
ss
sbb
sbb
sub
sbb
cld
push
jne
into
mov
xchg
stc
scas
add
fisttps
xchg
orb
push
insl
jae
sbb
in
pop
out
lea
sarb
push
jge
pop
lret
addl
pop
push
dec
xchg
in
jecxz
sbb
mov
test
lds
adc
dec
lock
or
pop
sbb
cmp
mov
jae
cli
xchg
push
jb
pop
jne
lock
mov
shl
push
jg
repz
cmpsb
daa
movsl
gs
jp
ja
fstpt
inc
in
pop
fidivl
sub
push
inc
or
pop
pop
pop
sbb
pop
mov
out
and
popa
mov
rcll
mov
outsl
outsl
push
jno
into
xchg
jo
jb
clts
xchg
cmp
adc
test
xchg
mov
or
push
int
sarb
icebp
jmp
icebp
adc
jns
dec
xchg
adc
mov
orb
incb
jp
outsl
scas
jmp
mov
sub
jmp
insb
jo
push
repz
adc
sbb
sbbl
push
push
jnp
insl
mov
dec
sbb
add
test
andb
imul
or
add
loopw
adc
jle
mov
leave
out
arpl
mov
fcomp
cmc
mov
pop
jp
mov
iret
not
cwtl
mov
sub
cmpl
xchg
mov
arpl
sub
dec
cld
aas
sbb
sbb
jo
or
pop
loop
sbb
adc
sbb
mov
scas
xchg
add
cmpb
mov
jle
fisubs
mov
sbb
sbb
xchg
mov
rolb
fcompl
push
jle
test
jne
rclb
std
mov
jg
out
cmpb
jae
xchg
xor
sbb
sub
sbb
lods
xlat
sub
inc
pop
xchg
and
and
mov
xchg
and
sub
pop
in
adc
dec
inc
xchg
push
sbb
dec
mov
mov
xchg
adc
iret
cli
xchg
push
movsl
push
mov
adc
sbb
out
sar
jns
outsb
xor
jmp
stos
mov
mov
or
daa
les
ficompl
push
lret
ja
jne
mov
cmp
arpl
push
pop
sbb
push
clc
cmpsl
cmp
repz
data16
sub
push
mov
sar
cltd
fldt
lahf
xchg
int3
xor
pop
inc
push
cmp
xor
inc
outsl
xor
outsl
js
mov
inc
pop
aad
inc
pop
ret
lret
sbb
mov
bound
pop
xchg
sbb
jge
mov
xchg
inc
sbb
inc
test
and
mov
dec
call
inc
lds
ja
fidivrs
aad
mov
or
int3
mov
insb
and
sbb
dec
or
popa
sbb
dec
xchg
mov
or
cli
dec
xor
or
pushf
sbb
shll
arpl
nop
dec
lret
and
sub
mov
popf
and
dec
push
and
ss
xchg
cmc
pop
stc
pop
ret
xchg
cmpsb
outsl
icebp
cld
sub
jp
jnp
cmp
int3
pop
push
or
repz
hlt
ror
and
dec
fildl
shlb
push
inc
mov
fcmovbe
test
push
imul
push
sarl
add
loop
fsubrs
aaa
test
push
subl
shlb
lds
sbb
xchg
nop
mov
sub
mov
sbb
sub
scas
pop
mov
cmp
sub
mov
sbb
inc
push
inc
jmp
sbb
xchg
adc
lahf
clc
sbb
lea
pop
jne
or
mov
test
mov
clc
sahf
add
out
or
xchg
daa
aam
sahf
jae
icebp
idiv
push
adcl
xor
ret
out
jo
pop
cmp
ret
adc
movsl
and
adc
jno
in
rcrl
sbb
pop
bound
add
adc
jmp
sbb
test
xchg
and
mov
sti
push
movsb
rclb
inc
out
ja
shrb
mov
into
es
mov
xor
xchg
pushf
cmp
fisubl
mov
addr16
sub
loope
and
mov
lret
mov
stos
fdivrs
adc
cmpsb
push
add
jmp
test
ret
sbb
dec
xchg
add
outsl
je
xor
fucom
adc
jle
push
adc
mov
stos
pop
cmp
sub
mov
push
mov
lods
testb
pop
and
sahf
lahf
mov
ret
sub
dec
mov
pop
lea
xlat
stc
imul
push
fldcw
cs
fisttps
or
jb,pn
mov
cmpb
into
stc
movsb
scas
pop
fisttps
movsb
rorb
test
push
push
ds
sbb
pop
mov
iret
mov
shlb
and
rolw
xchg
sti
gs
lahf
inc
pusha
stc
sbb
test
and
push
jge
mov
cmp
loop
in
sahf
adc
imul
sbb
outsb
mov
stc
pop
pop
sub
lods
test
iret
adc
xor
add
sbb
int
xchg
dec
sbb
imul
sub
cmp
stos
xchg
ret
in
lret
mov
and
push
pop
dec
push
daa
pusha
mov
outsl
mov
xchg
fstp
sbb
xchg
jo
ljmp
imul
cli
cli
gs
iret
cmc
and
jge
or
jo
xchg
jb
sahf
sbb
lds
popa
pusha
shl
pop
rol
packssdw
loop
pop
adc
cs
pushf
loop
or
out
roll
add
mov
scas
jo
js
dec
sub
insb
sbb
cwtl
mov
fs
xor
mov
dec
popa
push
sub
mov
nop
xchg
pop
out
enter
inc
inc
ljmp
sbb
rclb
out
in
push
pop
test
aas
mov
lahf
in
xchg
jge
aam
int
or
pop
jb
adc
orb
lock
mov
ror
mov
rcrb
pop
jbe
sbb
cltd
xor
incb
xchg
mov
ret
mov
sbb
xor
pop
lods
lret
mov
cwtl
lds
lahf
sbb
orl
rcl
xchg
add
fisubs
cmc
sbb
jb
test
xchg
add
push
je
jle
mov
sub
push
push
jbe
xchg
mov
pop
jg
insb
rcll
ret
out
in
lock
fwait
sub
out
ret
insb
dec
test
rcrb
int
in
sbb
xchg
and
cltd
cwtl
sbb
adc
sub
lcall
icebp
jno
sarl
xchg
jmp
cmp
inc
into
jp
xor
lods
mov
sbb
bndstx
sbb
adcb
xor
sub
jmp
fstpt
push
dec
mov
dec
insb
mul
pop
and
push
jmp
subl
ds
loop
insb
fs
movsl
sti
in
xchg
mov
enter
pop
jb
sub
cli
fs
push
lret
aad
sbb
out
push
lods
aam
cwtl
insl
mov
fwait
mov
add
mov
int
test
shlb
movl
es
sub
push
mov
std
jle
out
es
pop
mov
sbb
jle
pop
sbb
adc
jl
xchg
popf
loop
push
push
cs
out
mov
scas
test
push
or
push
nop
inc
and
fcompl
scas
lea
clc
jle
jge
imul
sub
sti
fcmovnu
sub
outsb
shrb
and
pusha
mov
mov
xor
popf
rcrb
cld
sub
sbb
or
insl
rolb
repnz
sbb
mov
mov
rorb
in
ret
leave
adc
out
add
dec
cmp
pop
push
stos
rcr
xor
mov
shlb
repnz
cli
sbb
add
mov
ljmp
sbb
stos
rclb
sub
or
pop
jo
jmp
adc
jo
xchg
sbb
stos
call
or
cmp
mov
pop
add
xchg
in
mov
shrl
ja
push
imul
mov
fistl
andl
xchg
popf
xchg
adc
movsb
jge
cs
sbb
mov
jecxz
sub
jp
ja
xchg
jle
andb
push
mov
sub
xor
loop
mov
push
add
hlt
jmp
and
sbb
inc
aas
add
lea
nop
mov
fisttpll
xchg
pop
pop
mov
pop
push
xchg
sub
lods
imul
and
stos
gs
pop
stos
lret
nop
mov
gs
js
jns
xchg
cmc
cmp
sti
aaa
fistl
rcl
jne
fwait
push
push
insb
pusha
ja
mov
arpl
es
in
sarl
xchg
pop
sbb
mov
inc
mov
nop
xchg
fwait
mov
xchg
and
cmpsl
xchg
dec
sub
mov
shlb
cmpsl
bound
sbb
leave
fs
push
mov
test
xor
mov
adc
cs
cmpsl
js
pop
rclb
xlat
push
adc
data16
pop
pop
rcl
adc
fistpll
jmp
cmc
jl
out
rclb
out
popa
sbb
mov
or
pop
push
imul
jp
int
sbb
mov
scas
sub
and
adc
xlat
dec
cmp
sbb
xchg
in
rolb
pop
ja
push
cmp
lcall
ljmp
bound
out
testl
pop
sbb
dec
stos
mov
pop
lret
jnp
and
adc
mov
push
inc
hlt
test
and
push
outsb
sbb
jecxz
pop
andl
mov
adcb
add
jmp
mov
pop
xlat
xor
cli
cmp
lret
dec
adc
pushl
movsb
or
int
data16
xchg
jmp
not
push
adc
pop
sbb
fwait
push
cmp
insb
adc
shl
adc
call
jl
sti
xchg
pop
push
jge
in
pop
pcmpgtb
rcrb
mov
sahf
insb
sti
int3
pop
cmp
outsl
sbb
or
push
sub
scas
scas
or
pushl
lcall
ss
lods
sbb
sbb
pop
imul
sub
rorb
xchg
mov
sbb
call
xchg
pop
sbb
adc
sbb
fwait
pop
sub
cld
imul
push
addr16
loope
mov
test
inc
jmp
sbb
enter
mov
pop
xor
sub
repnz
sbb
mov
push
pushf
xorb
fdivs
jb
push
lret
mov
pop
sti
cmp
imul
or
fwait
xchg
test
in
mov
lds
sahf
mov
fs
push
and
sbb
dec
imul
fldcw
pop
aad
clc
fucomi
push
pop
imul
mov
sbb
and
subl
pop
jbe
aad
aam
push
push
or
icebp
jg
mov
cs
aaa
mov
dec
pop
mov
and
mov
sbb
push
mov
out
push
lret
xchg
sub
insb
fwait
call
cmp
xor
push
sub
adc
pop
ret
jl
jno
js
push
cmpsb
cmp
stc
js
fldl
mov
sbb
adc
and
cmp
nop
xchg
inc
push
fstpl
lods
dec
sbb
add
insb
mov
adcb
fmull
dec
lock
sbb
xorb
pop
mov
xchg
pop
sub
xchg
xor
sbb
sbb
jecxz
xchg
push
rolb
pop
shll
cmpsl
sbb
mov
mov
mov
lods
add
jae
sbb
or
pop
mov
sbb
icebp
fdivs
pop
das
push
push
cmc
xchg
inc
push
and
or
imul
daa
mov
in
and
punpckhbw
cmp
test
mov
sbb
pop
mov
nop
xchg
jbe
push
imul
sbb
adc
xlat
sbb
xrelease
data16
xor
loopnew
shll
xchg
in
lods
cld
inc
loop
out
out
sti
outsb
mov
sbb
xor
imul
pop
rorb
push
or
adc
cmp
fs
xchg
push
pop
push
das
add
fwait
roll
mov
in
icebp
rcrb
fsubs
cmp
ret
mov
sbb
sub
add
dec
andb
addl
xchg
std
and
fstpl
out
test
int
stos
hlt
xor
mov
sbb
pop
mov
push
pop
xchg
mov
lret
stos
mov
popa
sti
push
or
mov
cmp
ret
ffreep
jmp
hlt
sbb
sub
push
or
lods
pop
imul
subl
mov
mov
shlb
sub
sbb
data16
jl
or
adc
adc
dec
mov
ror
and
and
shrb
or
jo
bound
insl
or
test
outsb
cmp
pop
sbb
ljmp
mov
pop
scas
xchg
push
pop
test
mov
jecxz
nop
xchg
cs
xor
popf
jae
cmp
jmp
lock
push
xor
mov
out
shlb
les
dec
dec
sti
pop
sbb
jae
xor
xchg
sbb
xchg
lock
out
movl
lods
xchg
jecxz
les
jle
lret
pop
xchg
jge
rol
push
ret
idivb
pop
pop
aaa
cwtl
push
adc
shrb
mov
sub
inc
and
push
adc
jecxz
lds
xchg
inc
lcall
xchg
call
lret
sbb
in
mov
inc
fsubs
stc
loop
adc
sbb
jbe
jl
pop
rol
pop
lcall
adc
jb
xor
std
mov
push
rcrb
enter
decl
pop
std
mov
lret
xchg
ja
jle
ret
push
mov
lahf
dec
and
fwait
jno
cli
sub
mov
mov
xchg
sbb
clc
dec
mov
popf
push
dec
js
sahf
inc
sarb
aad
int3
sub
loopne
sbb
pop
xchg
xor
mov
pop
pop
mov
sbb
inc
loope
xchg
jp
ljmp
xchg
std
cld
js
fadds
jg
xchg
adc
rorl
nop
aaa
movsl
add
sbb
xchg
cmp
js
or
pop
lret
insl
add
or
add
sbb
or
xchg
push
and
mov
fistl
rclb
mov
imul
and
addr16
pushf
sbb
adc
into
das
lods
dec
mov
xchg
int3
xchg
push
mov
lcall
jno
sahf
pusha
fs
nop
mov
cmp
mov
rolb
hlt
lock
mov
shrb
sbb
sbb
xor
push
sub
shrb
inc
mov
push
outsl
sub
fimuls
enter
jp
sub
add
mov
das
dec
mov
and
pushf
xorl
xchg
repz
jo
sub
mov
pop
pop
push
mov
dec
push
cmp
xchg
mov
xor
fwait
mov
out
je
cltd
js,pt
add
pop
dec
jg
xchg
push
adc
ret
adc
pushf
xchg
or
xchg
xor
adc
sbb
shrl
and
rclb
push
jg
sbb
sbb
cmp
add
lcall
ja
lcall
xchg
mov
mov
cmp
iret
jge
scas
mov
or
repz
out
cs
mov
and
outsl
aad
add
cld
pop
jne
pop
adc
movsb
insb
sbb
mov
in
adc
pushl
add
ret
shrl
push
int
jl
fisttpll
push
pop
ja
testl
mov
mov
mov
inc
jl
and
pop
jg
jne
aas
inc
cmpsb
aaa
cmp
xchg
sbb
xor
or
rcrb
fcmove
in
je
dec
pop
jae
data16
outsl
xchg
jle
test
pop
gs
sbb
sti
mov
arpl
das
sbb
lock
rcrl
cs
cmp
nop
test
bound
call
call
cmp
int3
cs
sbb
add
mov
xchg
popf
std
leave
mov
jne
aad
cmc
sbb
cmp
jne
in
bndstx
in
sbb
roll
pushl
or
sub
mov
push
adc
mov
mov
ret
jl
sbb
cs
cmc
nop
xchg
or
jle
fildl
mov
lret
ja
dec
movsb
cwtl
bound
dec
sahf
xor
pusha
sbb
or
loope
mov
es
ficomps
and
pop
push
aas
lock
sbb
out
add
push
adcl
sbb
or
push
mov
jge
pop
xlat
cmovle
sub
mov
stc
aas
or
pop
xchg
inc
cmp
xchg
jnp
mov
push
in
dec
pusha
ret
cmp
ds
adc
dec
mov
fstenv
lahf
shrb
popa
out
mov
sbb
inc
lds
clc
sarb
pop
test
popf
mov
sbb
add
rol
add
dec
lea
repz
pop
sub
xchg
xor
mov
xor
mov
repz
xor
push
popf
daa
sarl
pop
xchg
mov
sub
push
int
mov
test
data16
pop
xchg
dec
sbbb
nop
pop
rcr
dec
in
cmp
xchg
std
sbb
daa
imul
stos
or
outsb
xor
inc
sbb
in
add
cld
mov
mov
add
cltd
jae
shrb
sbb
aaa
sub
sbb
push
mov
jmp
rcll
ret
testl
mov
mov
mov
icebp
sbb
sti
jp
xchg
xchg
mov
data16
leave
xchg
pusha
push
sarb
inc
rolb
fdivr
imul
mov
mov
cmp
sub
out
and
pop
les
lds
inc
sahf
sbb
xchg
sbb
roll
jns
int3
ljmp
scas
cmp
sbb
mov
mov
push
rcl
ljmp
loop
dec
push
mov
cli
lcall
jmp
and
shl
and
jo
test
push
mov
lret
scas
rcl
fldt
push
in
fnstenv
or
mov
roll
xor
adc
fsubl
sbb
xchg
inc
test
push
fwait
cwtl
outsl
lds
xchg
out
popa
dec
fwait
lahf
test
mov
push
loopne
lret
sbb
mov
pop
sub
inc
popf
cmp
leave
sbb
sahf
rcrb
push
cmp
xor
shrl
pop
jb
lods
rolb
jns
push
jne
mov
je
mov
mov
out
jecxz
sbb
add
push
cmpsl
inc
dec
cmp
shrb
cmp
sbb
add
inc
add
add
add
add
add
add
add
push
or
add
addb
inc
or
inc
and
enter
add
add
add
add
add
cmpsl
inc
add
or
subb
add
inc
add
add
dec
mov
and
inc
xchg
adcb
adcb
dec
and
lock
sbb
mov
add
adc
add
addb
add
xor
or
push
add
add
add
inc
add
inc
add
add
inc
sbb
add
xor
pop
inc
inc
cwtl
inc
sub
add
add
push
inc
or
inc
xchg
add
or
add
stos
nop
lds
add
inc
and
sbb
nop
and
adc
sbb
mov
rolb
and
xor
inc
inc
add
addb
add
sbb
add
xchg
shrb
rclb
add
or
add
add
or
add
nop
inc
pop
inc
roll
inc
add
andb
popa
and
add
add
cwtl
inc
or
or
add
add
mov
add
rolb
cmp
mov
test
or
adc
xor
add
mov
pop
add
push
mov
addb
push
addb
test
xor
and
or
add
pop
add
sub
adc
mov
add
add
add
inc
sbb
inc
or
add
addb
and
add
mov
add
and
or
addb
sbbl
adc
roll
add
and
inc
inc
xor
adc
add
xchg
nop
or
push
adcb
inc
and
add
inc
push
orb
and
orb
addb
addl
and
loopne
inc
loope
and
add
jo
adc
mov
add
sbb
mov
add
lea
inc
and
dec
add
add
inc
addl
addb
and
add
or
add
rorb
adc
insl
dec
push
inc
add
add
or
sub
sbbb
addb
add
roll
add
inc
inc
add
inc
add
add
add
add
or
andb
or
addb
add
add
test
sub
or
adcb
adc
daa
or
and
les
or
xor
sub
movsl
add
sbb
andl
inc
les
inc
adc
add
add
in
adc
push
add
add
and
mov
and
adc
inc
add
add
addb
cmp
sub
mov
test
and
adc
lea
add
add
sbb
add
and
add
addl
dec
push
add
add
and
sbb
inc
rolb
add
addb
add
add
enter
adc
and
cwtl
pop
mov
loopne
mov
adc
add
dec
lds
add
inc
and
leave
and
adc
addb
add
and
andb
add
dec
sbb
or
add
test
add
add
rol
add
xor
adc
xor
add
inc
inc
inc
add
push
inc
loope
and
add
inc
add
xor
or
int3
adc
add
inc
and
push
add
and
adc
and
sbb
add
add
add
addl
push
loopne
and
add
add
and
inc
test
add
add
add
sub
rorb
addb
dec
adc
add
daa
adcb
or
add
and
and
xor
xchg
or
add
add
add
add
xor
add
add
push
jo
adc
push
adc
mov
inc
add
and
adc
or
mov
add
add
shlb
add
add
sbbb
or
adc
and
inc
add
inc
add
jl
adcb
add
adc
addl
sub
mov
les
add
push
addb
cltd
xor
add
add
rolb
add
add
mov
and
add
addb
movl
add
add
add
add
adc
inc
test
add
clc
add
and
addb
xchg
movsl
add
add
add
add
mov
mov
add
add
mov
jo
and
addb
nop
add
punpcklbw
and
sub
or
push
and
sub
and
add
add
or
ret
and
xorb
add
add
add
addb
subb
and
add
xchg
xchg
add
push
addb
dec
inc
push
add
push
dec
add
mov
add
and
push
or
add
add
add
adc
dec
mov
adcb
xor
or
and
add
pusha
adc
and
or
inc
and
dec
mov
and
add
add
rclb
xchg
add
roll
dec
mov
add
dec
add
les
adc
adc
add
mov
add
add
add
lods
test
sub
add
adc
test
add
add
add
add
or
add
add
add
or
adc
jo
xchg
inc
add
dec
pusha
add
add
add
add
and
add
add
xor
sbb
add
and
inc
add
inc
add
add
adc
add
test
ret
push
add
inc
sub
mov
and
add
inc
add
or
add
push
inc
addb
js
inc
add
addl
and
push
add
xchg
ret
enter
inc
adc
dec
add
add
and
sub
add
add
xchg
add
and
movsb
add
add
add
loopne
add
add
inc
add
inc
or
add
sbbb
pop
add
and
pop
dec
shlb
inc
dec
and
and
addl
ss
or
add
add
add
and
add
or
push
adc
push
pusha
adc
test
add
inc
shlb
add
or
adc
or
mov
add
inc
add
adc
adc
adc
and
add
add
add
addb
or
and
add
adc
push
or
add
sbb
inc
add
movl
inc
add
rolb
add
adc
and
add
inc
addl
add
or
add
adc
add
add
add
add
pusha
adc
addb
or
add
adc
and
add
inc
sbb
and
add
add
sbb
and
adc
inc
add
add
dec
add
add
add
add
add
xchg
add
addl
add
adc
and
sbb
addl
inc
or
pushf
pusha
add
inc
add
add
mov
inc
adc
adc
pop
sbb
pusha
orb
add
push
sub
add
add
sbb
add
nop
ja
add
inc
inc
add
add
rolb
or
lret
or
inc
add
addb
test
fs
push
inc
add
push
or
inc
addb
add
add
addb
mov
or
add
add
add
add
nop
inc
mov
inc
add
or
addb
add
and
inc
inc
movsb
add
add
or
inc
or
adc
sbbl
pusha
addb
add
addl
inc
add
add
and
inc
mov
mov
andb
add
popa
cwtl
or
inc
or
dec
jl
and
add
add
and
add
or
or
or
add
sub
add
add
mov
inc
push
or
add
xor
add
add
push
add
popa
adc
add
and
add
add
add
or
test
and
sbb
rolb
or
sbb
xor
add
bound
add
or
addl
add
add
rolb
or
inc
or
addb
add
inc
inc
add
andb
and
add
add
pop
or
or
add
inc
and
add
add
adc
inc
inc
pusha
add
add
add
andl
add
rolb
or
loopne
add
add
add
dec
add
andb
or
adc
rolb
add
jo
add
sbb
add
shlb
pop
and
mov
or
xor
sbb
dec
inc
pusha
add
add
add
inc
add
add
add
add
inc
add
add
sbb
inc
add
add
add
add
and
and
adc
test
add
ret
and
adc
add
jo
test
inc
add
add
or
xor
add
dec
mov
xor
addb
lcall
sbb
and
add
and
inc
inc
les
add
add
or
add
cmpsb
orl
cmp
jecxz
rorb
sub
add
enter
sub
adc
add
add
inc
inc
mov
add
and
push
inc
loopne
inc
add
dec
adc
add
and
addb
add
add
adc
or
add
inc
add
add
add
or
push
adc
adc
or
add
and
clc
add
dec
and
add
adc
or
add
add
add
or
test
add
inc
adc
add
adc
add
or
add
adc
add
add
addb
push
fsubrs
inc
or
andb
add
add
add
add
push
add
movsb
in
insb
and
addb
add
rolb
bound
dec
add
test
add
and
add
xor
adc
add
add
add
push
bound
inc
adc
xor
adc
adc
inc
addl
inc
adc
add
add
and
add
mov
mov
add
push
or
sbb
adc
adc
adc
inc
sbb
or
add
or
inc
add
and
xor
add
inc
inc
movsb
test
test
add
gs
inc
adc
adc
inc
or
cwtl
or
or
add
jb
add
and
or
adc
inc
add
add
and
add
addb
xor
or
inc
push
add
add
mov
add
add
inc
or
adc
inc
addb
add
mov
inc
nop
add
add
or
sub
rolb
or
add
add
add
or
dec
cmpsb
add
and
add
and
adc
addb
enter
inc
add
and
pop
add
or
mov
loopne
push
add
inc
add
add
ret
inc
add
adc
add
add
add
mov
inc
add
pop
arpl
and
add
add
add
inc
dec
add
add
add
or
add
or
add
inc
inc
add
push
add
add
add
roll
inc
add
add
add
add
push
inc
or
mov
sbb
add
mov
mov
add
aad
or
add
adc
and
dec
int3
addb
add
and
add
roll
gs
and
sub
and
dec
xor
inc
addb
adc
mov
add
add
and
add
inc
es
add
sub
add
orl
test
dec
ret
xor
push
ret
add
dec
add
pusha
add
add
add
mov
add
add
shlb
add
or
add
and
inc
add
add
add
inc
add
add
add
pop
or
add
inc
and
add
inc
add
and
addb
add
and
inc
add
add
add
inc
add
push
push
or
inc
or
addl
addb
add
add
add
and
adc
add
.byte
mov
add
movsb
dec
add
push
dec
add
cmp
add
dec
add
mov
dec
add
ss
add
hlt
dec
add
mov
dec
add
pop
dec
add
adc
add
add
add
lret
add
add
adc
add
add
fmull
add
dec
add
and
add
ret
add
dec
add
mov
add
add
fmull
lock
add
dec
dec
add
insb
dec
add
add
add
mov
add
dec
add
dec
add
bound
add
add
add
pop
dec
add
jo
add
out
add
fmuls
add
add
cli
dec
add
xchg
dec
add
or
add
dec
add
mov
dec
add
orb
add
add
and
add
add
cwtl
dec
add
and
add
add
push
add
dec
dec
add
mov
dec
add
js
add
in
add
aam
add
xor
add
add
enter
testb
xor
add
dec
add
inc
push
add
cld
dec
add
orb
ljmp
add
push
add
ficoms
add
add
add
push
add
inc
push
add
adc
add
ss
add
and
add
add
push
add
or
add
test
add
add
push
add
enter
jb
add
fs
add
add
add
push
add
ss
add
dec
push
add
js
add
add
add
push
add
adc
add
add
add
add
repnz
add
xchg
push
add
stos
push
add
cmp
add
add
jbe
add
rclb
mov
push
add
mov
add
push
add
mov
add
and
add
push
add
ficoml
add
add
add
adc
aad
add
xchg
leave
inc
add
add
in
inc
add
add
add
inc
add
add
pusha
inc
add
sub
add
inc
dec
ja
fisubrs
outsl
out
xchg
cmp
mov
cltd
mov
jo
mov
and
lds
cld
xchg
cmp
pop
xor
and
sbb
lock
xchg
mov
lods
and
jnp
call
adc
lret
into
daa
ret
mov
sub
mov
mov
ret
daa
into
sbb
movsl
dec
jp
test
dec
test
scas
xchg
aas
mov
sbb
faddl
sahf
fbstp
cmp
scas
les
pop
gs
outsl
mov
sahf
jge
lods
cmpsl
js
in
mov
mov
mov
nop
push
lds
lahf
mov
or
pop
sahf
adc
sbbl
sbb
sbb
push
scas
ret
inc
lret
shlb
inc
xchg
mov
int3
in
mov
mov
inc
mov
mov
sbb
mov
adc
xchg
add
jp
popf
rclb
pushf
scas
cmp
xchg
mov
xchg
cs
cli
repnz
xchg
iret
sbb
icebp
xchg
mov
cld
and
loopne
cld
push
adc
fdivrl
lret
jbe
loop
jno
sahf
adc
sub
mov
ficompl
mov
add
rcll
xchg
scas
movsb
add
sar
mov
xor
rorb
jne
notl
inc
jmp
mov
mov
or
xchg
and
into
or
incl
mov
adc
and
clc
pop
pop
stc
in
pop
xlat
jg
sub
inc
cmp
jbe
add
push
mov
sahf
push
data16
jle
jns
inc
pop
mov
cmp
stos
sbb
inc
or
dec
dec
imul
jmp
lea
decl
mov
adc
dec
das
pop
fs
mov
lods
in
xchg
pop
test
jg
inc
mov
xchg
pushfw
stos
cmp
rorb
fstpl
inc
jne
mov
mov
mov
dec
ljmp
shrb
add
xchg
pop
stc
jl
in
shl
movsb
aam
jle
jnp
stc
dec
out
daa
sbb
sbb
xor
sub
clc
jp
sub
out
sbb
cmp
das
loop
add
mov
and
inc
dec
pop
jb
test
popf
sub
sbb
mov
scas
and
loope
jne
jmp
mov
push
into
scas
insl
or
mov
dec
sbb
adc
addb
rorb
test
lret
cld
pusha
sub
or
sub
xchg
outsb
and
icebp
cmc
sbb
imul
int
mov
into
call
sbb
push
xchg
or
lock
jne
mov
daa
jno
inc
add
mov
pop
shrl
insb
jmp
stos
test
in
sar
loop
jecxz
insl
xor
stos
xchg
or
dec
das
xchg
nop
ja
push
out
insl
and
mov
sbb
push
sbb
and
into
sbb
dec
sbb
cld
mov
sub
push
xchg
sbb
dec
call
push
mov
les
adc
out
adc
xchg
test
hlt
xor
ret
mov
cmpsl
xchg
insb
aad
ja
inc
inc
aam
dec
jae
repz
jp
cmp
mov
sub
int
stc
cmp
jg
adc
push
les
rolb
lahf
aaa
stos
push
or
add
or
test
fidivrs
push
mov
adc
bound
mov
les
xor
pop
push
add
lret
adc
bound
aaa
cmpsl
jno
pop
lock
cltd
les
sbb
je
cmpsb
pop
lcall
mov
adc
data16
push
in
fcoml
xchg
into
push
ss
enter
cmpsb
xor
pushf
pop
dec
popa
ja
mov
sbb
mov
jle
inc
fwait
dec
mov
jmp
adc
jno
mov
sbb
or
int
les
cmp
push
xor
mov
enter
mov
loop
mov
sbb
push
mov
test
daa
sbb
fistpll
dec
nop
pusha
fnstcw
enter
push
xorb
cli
inc
push
xchg
das
sbb
movsl
stos
sub
sbb
cmpsl
out
es
sbb
lea
pop
cmp
rorb
jns
sbb
xor
sbb
mov
xchg
mov
outsb
ficomps
sbb
bound
std
cmp
ja
jbe
nopl
xor
stos
loope
out
sbb
or
pop
or
inc
mov
dec
xor
jg
cmp
mov
or
push
cld
lods
push
sub
fs
sahf
out
pushf
cmp
sbb
mov
or
xchg
cmp
imul
xor
mov
in
ss
movsl
xchg
jl
adc
jmp
insb
lods
inc
je
push
adc
ret
adc
push
in
jl
shlb
jg
ss
cmp
jb
sahf
std
loop
ficoml
incb
inc
adc
lret
jns
and
fwait
cli
pop
push
mov
push
stos
orb
fisubrs
lods
sarb
adc
pop
jg
bound
and
sbb
sbb
cltd
mov
int
popf
rcll
es
jecxz
lods
push
sbb
mov
mov
jno
mov
ja
std
loop
test
clc
mov
inc
add
shlb
dec
cli
loop
in
jb
stc
jl
xchg
mov
pop
addr16
jge
daa
sbb
cmpsb
and
mov
pop
out
test
and
xchg
or
out
mov
xchg
mov
push
or
mov
pop
imul
xchg
nop
sub
pop
sbb
sub
mov
jb
jle
pop
loope
int3
xor
lret
faddl
aaa
mov
mov
jmp
popf
sbb
or
pop
cmpsb
dec
nop
int3
xchg
sub
jno
push
sbb
push
ret
int
inc
push
mov
fisubs
sbb
sub
mov
and
cmp
sub
mov
push
sti
dec
mov
mov
stos
mov
andl
jmp
lds
adc
or
and
in
pushf
inc
out
das
fcompl
pop
inc
sbb
aas
pusha
mov
xor
mov
ss
ja
and
cmpsb
cmp
xchg
push
pop
negb
aas
and
lods
sbb
lock
or
dec
les
shll
jp
adc
sub
popa
dec
aam
or
out
mov
hlt
inc
mov
xor
or
sahf
jl
cmp
xchg
pop
test
add
negl
rorl
add
push
incb
push
repnz
inc
fcompl
pop
fistl
icebp
out
lahf
dec
popa
sbb
lods
jle
rcrb
push
jb
fs
jno
push
sub
xchg
xchg
push
push
push
loop
pushf
lea
nop
js
sbb
rorl
pop
cmp
and
xchg
or
dec
and
sbb
insb
mov
popa
xchg
test
insb
jbe
repnz
jl
push
pop
lods
enter
repnz
out
xlat
loopne
mov
sub
adc
or
mov
xchg
and
dec
movsl
shrb
or
call
xchg
and
leave
fdivl
nop
sbb
dec
in
dec
mov
jp
je
sbb
xchg
cltd
xchg
sbb
cli
jnp
int
popf
dec
jb
cs
ret
stos
js
push
sub
push
mov
cmp
sahf
mov
jp
and
stos
or
fld
jns
xchg
outsb
sahf
aas
pop
jo
xchg
add
dec
jo
test
fxch
ds
push
xchg
xchg
dec
int
xchg
negl
hlt
adc
or
addr16
jl
or
xchg
js
shrb
cmp
xchg
or
mov
cli
mov
sbb
sub
dec
push
lods
inc
das
or
sbb
dec
mov
or
jp
hlt
int3
adc
jg
outsb
mov
cltd
adc
je
dec
xchg
mov
aad
or
inc
cmpsb
xor
sbb
out
sub
or
shl
rcl
sub
xchg
mov
je
stos
sbb
add
push
xor
cmp
sbb
sbb
ffree
imul
push
sbb
dec
inc
jb
out
popa
sarb
inc
loopne
imul
mov
sub
xchg
inc
je
inc
ja
sbb
icebp
jo
jge
shlb
push
xchg
aaa
fistpl
stos
xchg
add
dec
mov
loop
nop
fisubl
xchg
cmpsb
insl
sahf
dec
cmpsb
sub
mov
mov
jns
imul
cmc
inc
out
popa
bound
outsl
sbb
hlt
loop
sahf
push
jae
adc
jl
add
jge
loop
add
std
rcll
and
mov
mov
jo
dec
scas
adc
push
lcall
int
stos
adc
sbb
ret
sti
fsubrp
es
mov
shl
es
in
sbb
or
lret
ror
sahf
loope
jg
mov
sbb
call
add
mov
pop
popa
add
rcr
shrb
sub
pushf
adc
sbb
pop
add
data16
popl
in
out
cwtl
sahf
push
sahf
mov
stc
dec
sub
cmp
mov
pop
jns
xchg
test
push
scas
adc
sbb
jecxz
stc
out
ret
iret
mov
pop
call
pop
mov
dec
std
adc
movsl
jecxz
pushf
cmp
mov
pop
rcr
and
shlb
pop
push
cmp
loop
in
cmc
pop
adc
push
nop
rclb
fldcw
clc
xlat
arpl
nop
addr16
into
pop
lcall
test
dec
mov
sbb
daa
cmp
sbb
mov
dec
out
call
mov
mov
daa
dec
aaa
sbb
into
sbb
mov
es
inc
sub
sbb
sti
xor
mov
sub
hlt
push
jg
sub
stc
gs
mov
xchg
testl
lahf
es
pop
fldt
ret
iret
or
push
lock
cmp
out
in
popa
dec
ror
dec
movsb
lcall
sub
cwtl
out
mov
xchg
sbb
cs
mov
cli
sbb
pop
scas
ret
jecxz
das
adc
loope
popf
mov
insb
pop
adc
xor
mov
lods
push
or
mov
mov
ror
add
cmp
inc
mov
xor
adc
sarl
cmp
mov
fwait
sbb
rclb
add
les
sub
jno
sub
mov
xchg
js
inc
cmpsl
dec
pop
adc
pop
test
ret
leave
outsl
pushf
rcl
inc
nop
jle
ja
jl
mov
mov
call
pop
fwait
loop
xor
test
adc
xchg
js
lea
fcmovnb
inc
in
inc
adc
fs
mov
loopne
into
insb
sbb
adc
sub
repz
test
xchg
dec
int
adc
pop
push
jge
fmulp
rclb
adc
repnz
sbb
inc
iret
sub
stos
cld
test
repz
dec
imul
mov
or
sbb
push
adc
sbb
pop
xor
call
mov
sbb
inc
or
push
jecxz
icebp
xor
call
andb
int
adc
cmp
je
sbb
mov
pop
or
in
popw
xchg
into
loop
xor
or
sbb
inc
divb
int
inc
mov
movsb
lods
jp
clc
sbb
pop
fisubrl
xchg
js
add
xor
cmp
xor
sub
xor
repz
jae
ss
dec
pop
shlb
xor
hlt
push
mov
xchg
test
pop
mov
cmp
cltd
int
xchg
sbb
lret
hlt
xchg
and
push
je
adc
jmp
ret
add
jb
int3
mov
lahf
mov
data16
xchg
inc
ds
mov
ljmp
lods
sbb
or
xchg
andl
mov
pop
das
es
xchg
leave
mov
jns
add
adc
sbb
cmp
push
aam
jp
fldl
mov
xchg
sbb
pop
pop
cmp
into
dec
or
adc
scas
ds
add
shrb
sbb
sti
jnp
lods
add
mov
aas
dec
fdivs
xlat
push
jg
sbb
mov
pop
sub
xchg
testb
fsubrp
xchg
ret
data16
enter
mov
rclb
xchg
lods
jecxz
adc
popf
sahf
sub
aaa
jbe
xchg
enter
add
mov
loope
fdivr
cmp
dec
pop
add
aaa
cmp
aam
push
jecxz
xlat
jle
in
sbb
push
or
ljmp
les
scas
sbb
xor
test
jl
dec
mov
sbbl
cltd
jmp
dec
repz
sbb
jmp
pop
fildl
dec
pop
adc
pop
nop
mov
imul
and
aaa
out
adc
std
sbb
or
jns
sbb
notl
jg
stos
fists
xlat
sbb
jae
sub
ljmp
and
test
loop
rcl
test
add
insl
dec
bound
jo
sbb
lcall
adc
xchg
mov
inc
push
push
test
adc
loope
shl
pop
movsb
lret
pop
adc
add
enter
aam
in
push
lcall
sbb
pop
jl
call
rolb
xor
xor
sbb
mov
xchg
mov
gs
adc
pop
sub
insl
mov
jp
mov
cmpsb
lret
mov
flds
jmp
rclb
cmp
cld
and
scas
sbb
test
aad
add
scas
ficomps
jae
or
adc
xchg
adc
adc
shrb
out
fwait
shll
xlat
stc
fdiv
out
jb
xor
repnz
loop
mov
rclb
nop
mov
sbb
test
mov
jno
xchg
enter
fnsave
sbb
push
fildll
jb
mov
loope
lret
sbb
rclb
jo
insb
xchg
jmp
add
in
sbb
aam
js
and
rcrb
xchg
xchg
xor
lret
daa
fdivrl
sub
add
movsb
fwait
mov
sbb
adc
cli
imul
repz
or
mov
pop
pop
fstpl
jno
not
mov
dec
sbb
dec
cltd
ds
arpl
lock
pop
adc
pop
clc
in
inc
push
jae
sarb
mov
xchg
adc
cmp
mov
xchg
lea
mov
jecxz
int3
mov
pusha
pop
adc
sarl
iret
stos
cld
inc
subl
cmpl
and
fistl
sarl
push
push
stos
sub
sti
cmpsb
jle
imul
sub
jmp
lea
sbb
inc
sbb
push
dec
inc
je
add
add
sbb
aad
mov
cmpl
xchg
add
pop
sbb
jmp
and
fwait
rcll
mov
aad
dec
arpl
in
rcrb
xchg
dec
mov
cmp
clc
mov
fwait
jnp
mov
shll
sub
adc
in
pop
cmc
mov
inc
xor
ljmp
call
xchg
icebp
jno
xchg
xor
dec
pop
jmp
mov
imul
icebp
mov
fidivrl
push
and
sbb
rcr
fdivl
cltd
xor
in
xchg
aam
adc
mov
dec
pop
pop
xchg
push
xchg
cmc
popf
mov
cmp
rolb
test
lea
jge
mov
pop
nop
mov
and
test
mov
pop
adc
rcrl
stos
out
scas
leave
out
inc
outsl
mov
orb
adc
fdivl
rolb
sbb
push
inc
sub
xchg
psrlq
push
fisubs
lock
shl
shl
pop
test
sbb
mov
mov
and
sub
sbb
stos
aaa
cmp
lods
mov
pop
xorb
xor
sarb
sub
xor
std
cmp
fistl
jge
jge
js
or
pop
pop
enter
xchg
loopne
cltd
repnz
pushf
and
mov
adc
sbb
cmpsb
push
pop
jo
rorb
or
addr16
mov
ljmp
cmpsl
stos
jae
mov
cmp
xor
mov
xchg
sbb
into
xchg
mov
jns
nop
insb
sahf
cmpsl
popa
push
icebp
xor
sbb
push
xor
inc
xlat
and
test
adc
or
mov
mov
xor
or
hlt
cld
rcrl
pop
dec
jecxz
cmpsb
insb
rorb
push
push
sbb
inc
and
sub
push
mov
pop
dec
outsl
and
xor
xchg
outsl
inc
test
push
outsb
rclb
pop
int
sbb
xchg
sub
ret
in
fisubl
leave
sti
dec
push
cmp
pop
pop
adc
sahf
mov
fcmove
inc
jb
adc
sub
pop
ljmp
out
enter
jnp
and
inc
jbe
sbb
mov
lret
repnz
ds
adc
push
dec
mov
lock
sbb
cmp
sbb
testl
jecxz
push
push
sub
xor
sbb
sub
mov
pusha
call
sub
adc
jecxz
cltd
cmc
jp
xchg
push
int
xor
xchg
pop
mov
aas
sti
fwait
and
adc
pop
repnz
mov
loop
sahf
push
popf
dec
outsl
jp
leave
xchg
jns
sbb
outsl
push
inc
xchg
stos
sbb
cmp
pop
jnp
and
sti
into
mov
pop
push
jg
out
dec
cli
or
mov
adc
sub
aam
movsb
cltd
loopne
aam
mov
lret
mov
insb
push
in
outsl
jl
mov
cmc
sbb
push
sahf
dec
xchg
adc
or
fmuls
repz
push
mov
mov
add
sarb
outsb
data16
dec
add
jg
outsl
fwait
stos
movsl
pop
sti
dec
sti
lods
imul
sub
lock
jo
iret
jno
pop
int3
sbb
or
in
enter
rclb
push
test
mov
mov
xchg
push
push
mov
or
cmpsb
mov
rcrb
mov
cld
push
xchg
jl
in
leave
xor
pop
sbb
lret
jp
je
ret
ja
leave
xor
xchg
cmp
fcmovnu
mov
sbb
pop
mov
ds
mov
cmp
ja
imul
ret
mov
pushl
or
les
cmpsl
aam
daa
push
sub
sbb
inc
in
subl
repz
xchg
or
pop
sbb
sbb
cltd
and
dec
fwait
push
sbb
pop
repz
jbe
lods
loop
pop
mov
mov
jne
inc
sbb
mov
inc
adc
enter
or
movsb
lods
push
adc
pop
aas
out
sbb
xor
pop
jne
xchg
loopne
add
divb
test
xchg
shlb
mov
dec
sbb
popf
call
pushf
sbb
sub
fsubl
fnstenv
adc
mov
cld
sbb
and
add
sti
pop
test
lret
and
insb
adc
mov
lea
sti
mov
pushf
xor
roll
aas
cmp
fiaddl
cmp
mov
mov
xor
mov
aam
push
add
repz
cmc
xor
mov
push
test
lds
and
jmp
push
push
xchg
repz
xchg
cld
enter
clc
cmp
xlat
pop
xchg
sub
jmp
jmp
aam
pop
mov
fildll
daa
jg
stos
data16
sbb
sahf
gs
dec
pop
xchg
lods
mov
test
push
mov
test
jbe
stos
and
lea
das
pop
and
adc
sbb
jmp
shr
dec
jnp
xchg
mov
and
lret
je
sbb
popf
loop
or
test
test
lahf
rorb
mov
in
sbb
add
es
rorb
xor
fcomps
or
ret
rcrb
xchg
pop
xlat
fldl
int3
add
add
lret
cmp
loopne
sbb
imul
jne
mov
inc
adc
cmpsb
sahf
xchg
add
pop
inc
leave
cmc
mov
sub
and
sarl
cwtl
bound
push
pop
lret
xorb
push
lea
sub
lcall
or
fstpt
mov
in
sbb
aas
shll
cmp
stos
loop
cmpsl
inc
dec
dec
sub
inc
jp
cmp
xor
add
and
lods
je
push
movups
ret
add
inc
mov
adc
xor
call
shlb
clc
aas
cld
shlb
mov
sbb
mov
cmpsb
cmp
sbb
dec
shr
mov
cwtl
aas
sbb
add
lods
push
cmp
fisubrs
xchg
mov
outsl
fcmovne
cmp
cmp
inc
cmpsb
insl
sahf
ja
cmc
push
in
clc
and
cmp
xchg
shrb
adc
lods
sbb
stos
push
rorb
nop
dec
sahf
mov
in
mov
sbb
imull
mov
in
adc
lcall
push
sbb
xor
sbb
add
dec
push
dec
dec
push
dec
cs
insb
add
add
pop
inc
jb
popa
je
inc
gs
je
jo
inc
xor
add
add
insb
addr16
imul
je
outsl
insl
bound
outsl
js
js
inc
xor
add
add
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
pop
dec
jo
outsb
inc
jbe
outsb
je
outsl
addr16
inc
cmp
add
add
gs
jb
inc
jbe
outsb
je
inc
xor
add
add
pop
inc
gs
jae
jb
popa
insl
gs
cmp
add
add
jb
je
push
jb
jbe
je
push
jb
imul
jne
je
inc
xor
add
add
pop
inc
jne
insb
fs
outsl
insl
insl
inc
inc
inc
pop
inc
cmp
add
add
ja
jne
je
inc
jns
gs
jb
insl
push
imul
imul
pop
inc
gs
jb
jbe
je
push
jb
imul
pop
inc
xor
add
add
gs
gs
inc
js
outsb
je
outsl
imul
add
add
gs
gs
popa
insb
jne
pop
inc
xor
add
add
pop
inc
imul
jne
arpl
xor
add
add
pop
dec
outsl
popa
fs
insl
popa
addr16
inc
xor
add
add
gs
jne
jb
push
popa
insb
jne
inc
js
inc
xor
add
add
gs
jb
jbe
je
push
jb
imul
imul
add
add
pop
insb
jae
jb
insl
jo
inc
cmp
add
pop
dec
jo
outsb
inc
jbe
outsb
je
inc
xor
add
add
pop
inc
outsl
jo
inc
imul
xor
add
pop
inc
imul
outsl
ja
js
inc
xor
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
add
gs
outsb
jne
je
insl
dec
outsb
outsw
pop
inc
xor
add
add
pop
inc
gs
popa
je
inc
outsl
jb
popa
je
inc
xor
add
add
popa
imul
imul
add
pop
inc
gs
insb
addr16
jb
arpl
xor
add
add
outsl
popa
fs
imul
xor
add
add
gs
imul
imul
jns
inc
cmp
add
pop
push
outsl
jae
push
push
dec
gs
popa
addr16
inc
xor
add
add
pop
inc
push
jo
jb
jne
pop
inc
cmp
add
pop
inc
outsb
jne
inc
outsl
outsb
je
pop
inc
xor
add
add
pop
inc
gs
gs
dec
gs
imul
push
dec
push
push
push
xor
cs
insb
add
add
push
push
dec
inc
gs
gs
push
arpl
add
add
dec
inc
gs
outsl
outsb
outsb
arpl
je
push
add
add
push
push
dec
inc
gs
jb
bound
popa
jb
insl
add
add
push
push
dec
inc
imul
add
add
dec
push
jb
arpl
jne
gs
add
add
inc
outsl
outsb
outsb
arpl
addr16
jb
arpl
add
add
dec
dec
outsl
jb
push
gs
insb
je
add
add
push
push
dec
push
outsl
ja
outsl
jne
je
add
push
push
dec
inc
gs
gs
inc
imul
add
push
push
dec
push
jb
jo
jb
push
add
add
push
pop
jb
popa
fs
je
add
push
push
dec
inc
jb
ja
gs
outsl
outsb
outsb
arpl
add
inc
inc
push
pop
imul
add
push
pop
arpl
insb
outsb
add
add
push
push
dec
dec
jne
push
popa
jb
insl
jae
add
add
push
pop
arpl
je
outsl
insb
add
add
dec
inc
gs
popa
je
add
add
push
imul
arpl
imul
outsl
arpl
add
inc
inc
push
pop
arpl
jne
outsb
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
push
outsb
jb
imul
imul
popa
fs
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
add
popa
fs
outsl
outsb
jae
insb
gs
jne
jo
je
add
add
inc
insb
outsl
bound
inc
imul
inc
add
add
imul
jo
imul
inc
gs
outsl
outsb
jae
insb
gs
imul
add
insb
dec
outsl
jbe
dec
gs
outsl
jb
add
add
jne
dec
popa
outsb
addr16
addr16
jb
jne
dec
outsl
arpl
gs
add
add
gs
je
dec
outsl
bound
je
add
add
je
imul
inc
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jne
jb
outsb
je
imul
jns
add
add
push
gs
outsl
jbe
dec
outsl
arpl
inc
insb
je
jb
popa
je
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
inc
dec
inc
push
add
add
inc
outsb
jne
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
add
je
imul
jo
push
add
add
inc
gs
js
je
outsl
fs
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
fs
imul
add
add
push
gs
push
inc
outsl
outsb
je
js
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
outsb
dec
outsl
bound
push
arpl
add
add
outsb
fs
gs
jne
arpl
js
add
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
outsl
jb
outsl
insb
jne
gs
popa
insl
gs
add
push
push
inc
push
xor
cs
insb
add
add
push
imul
popa
jae
inc
add
add
push
outsl
jae
push
jne
je
gs
popa
add
add
push
imul
outsl
arpl
add
push
inc
push
push
cs
insb
add
add
pop
pop
jo
pop
arpl
insl
outsl
fs
add
gs
je
add
add
jne
insb
imul
pop
addr16
jae
push
gs
outsl
insb
add
add
pop
pop
jne
inc
dec
popa
insl
add
add
gs
outsl
jae
push
add
add
pop
outsb
fs
jb
popa
fs
add
add
bound
bound
outsl
insb
insb
add
add
gs
insl
jo
add
insl
bound
add
add
pop
jae
je
jae
pop
je
popa
outsb
jae
popa
je
jb
inc
pop
inc
push
ss
pop
dec
push
inc
push
pop
inc
pop
inc
inc
push
push
dec
dec
dec
pop
push
dec
dec
dec
push
inc
push
push
inc
inc
inc
pop
push
ss
pop
dec
xor
inc
pop
add
add
pop
pop
jo
pop
imul
pop
pop
addr16
popa
imul
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
push
gs
gs
popa
je
push
add
add
je
push
gs
popa
je
jbe
push
popa
je
push
outsl
inc
add
add
jb
popa
je
jne
inc
add
add
popa
jns
outsl
popa
fs
popa
imul
imul
add
push
je
dec
inc
popa
je
add
add
push
jb
dec
popa
jae
inc
add
add
push
popa
je
dec
jae
imul
add
add
push
gs
outsb
jne
push
push
dec
gs
add
dec
push
xor
cs
insb
add
add
dec
jae
gs
jb
jns
outsl
outsb
je
js
add
add
dec
jae
outsb
inc
imul
dec
outsb
gs
push
add
gs
popa
jb
arpl
dec
jae
insl
gs
outsl
fs
add
add
bound
outsl
outsb
gs
jb
jae
jne
insb
imul
dec
jae
bound
je
jne
bound
inc
outsb
outsl
fs
outsb
push
jne
insb
imul
dec
jae
gs
jb
popa
imul
add
add
jne
jb
dec
imul
outsl
imul
jae
imul
inc
jb
popa
imul
insb
imul
dec
jae
jne
jb
inc
dec
imul
jns
add
dec
jae
outsb
jne
push
jne
insb
imul
jae
imul
jne
insb
imul
dec
jae
outsb
push
gs
insb
jbe
push
jb
jbe
popa
bound
add
add
gs
jb
jns
imul
jae
outsb
inc
imul
addr16
popa
jb
add
dec
jae
gs
gs
jb
gs
jae
insl
gs
outsl
fs
add
add
add
add
add
add
xor
add
push
add
dec
dec
add
xorb
add
add
xchg
dec
add
shlb
add
mov
add
scas
push
add
xor
add
les
add
push
add
inc
xor
add
push
add
notb
add
push
add
mov
add
add
mov
add
movsb
dec
add
push
dec
add
cmp
add
dec
add
mov
dec
add
ss
add
hlt
dec
add
mov
dec
add
pop
dec
add
adc
add
add
add
lret
add
add
adc
add
add
fmull
add
dec
add
and
add
ret
add
dec
add
mov
add
add
fmull
lock
add
dec
dec
add
insb
dec
add
add
add
mov
add
dec
add
dec
add
bound
add
add
add
pop
dec
add
jo
add
out
add
fmuls
add
add
cli
dec
add
xchg
dec
add
or
add
dec
add
mov
dec
add
orb
add
add
and
add
add
cwtl
dec
add
and
add
add
push
add
dec
dec
add
mov
dec
add
js
add
in
add
aam
add
xor
add
add
enter
testb
xor
add
dec
add
inc
push
add
cld
dec
add
orb
ljmp
add
push
add
ficoms
add
add
add
push
add
inc
push
add
adc
add
ss
add
and
add
add
push
add
or
add
test
add
add
push
add
enter
jb
add
fs
add
add
add
push
add
ss
add
dec
push
add
js
add
add
add
push
add
adc
add
add
add
add
repnz
add
xchg
push
add
stos
push
add
cmp
add
add
jbe
add
rclb
mov
push
add
mov
add
push
add
mov
add
and
add
push
add
ficoml
add
add
cld
ret
fisubs
sub
sahf
mov
daa
sbb
xor
add
mov
xchg
leave
push
mov
aas
xor
jbe
shrb
push
mov
push
jmp
mov
pop
mov
popl
je
and
mov
insl
xchg
clc
mov
adc
lods
sbb
cmpsb
gs
fcmovne
shr
xlat
cmp
ljmp
push
mov
pop
pop
lea
sbb
imul
pushf
pusha
inc
sbb
pop
fwait
int3
jne
insb
int3
cmp
xor
xor
mov
cmpsb
idivl
addr16
test
sbb
or
pop
sub
rolb
xchg
mov
xchg
sbb
xchg
lods
inc
xchg
mov
adc
out
out
and
adc
pop
dec
ret
fistl
test
int
xor
in
je
scas
iret
rorb
add
pop
cmc
xchg
xor
mov
repnz
xchg
leave
shll
aas
and
push
add
mov
in
xchg
out
pop
in
cwtl
nop
xor
loope
add
push
dec
hlt
or
mov
xchg
rorb
mov
movsl
enter
jns
xchg
movsb
xchg
cli
in
dec
adc
jb
mov
sahf
jmp
lods
inc
pushf
and
cmpsb
in
jo
call
ret
lahf
or
in
xchg
cmp
cmp
push
sbb
push
add
mov
mov
negl
jle
psraw
rcrb
scas
sbb
aas
sub
cmp
sub
aaa
stc
in
jns
xchg
fimuls
rclb
push
and
nop
rorb
pop
insl
xchg
leave
xchg
and
cmpsl
mul
sbb
sbb
xor
cmpsl
xchg
repnz
aas
addr16
addr16
arpl
fnsave
lret
testl
jle
mov
cmpsb
xchg
jle
mov
pop
js
jnp
ja
cltd
cmp
xchg
lea
adc
xorl
mov
in
or
mov
aaa
sbb
std
lock
sbb
jecxz
pop
movsl
scas
ret
movsl
cmp
icebp
lcall
mov
pusha
stc
xchg
les
cwtl
lods
loope
and
sbb
push
popf
lcall
sahf
cmp
into
pop
push
or
fstpl
test
aam
adc
mov
mov
sub
push
cmp
sahf
out
fisubrl
adc
or
and
mov
pushl
rolb
xor
pop
jae
xchg
daa
sbb
in
xchg
mov
xlat
mov
cltd
mov
sbb
lcall
cld
mov
mov
aaa
cmpsb
xor
sbb
xor
pop
sahf
das
inc
cwtl
inc
jecxz
test
inc
popa
mov
sbb
pop
andl
jmp
push
sbb
cmp
loope
cmpsl
inc
mov
pop
mov
repnz
fdivs
rorb
rclb
inc
into
xchg
add
push
lret
jbe
dec
repnz
loope
cmp
sbb
add
pop
ljmp
sar
push
push
test
pop
cmp
inc
loope
test
adc
mov
shll
sub
add
jnp
mov
lret
adc
mov
push
sbbl
jg
repz
popa
fidivrs
test
pushf
xor
rorl
and
cmp
dec
add
jmp
dec
jg
sub
xor
lcall
das
mov
sbb
leave
jnp
jg
mov
daa
xorl
andl
push
aam
fistpl
sub
and
out
es
sbb
movsb
loop
mulb
xchg
xchg
pop
xchg
orl
mov
movhps
out
hlt
push
lahf
sbb
mov
or
jge
sbb
ja
mov
enter
and
mov
cli
sub
rcll
ds
and
les
sbb
cld
stos
mov
cwtl
sbb
inc
imul
fistpl
imul
sub
scas
mov
lret
sbb
rcrl
sahf
push
fistps
xchg
add
mov
xchg
mov
inc
adc
cmp
mov
shlb
jno
scas
sbb
cmp
adc
lahf
int
sahf
cwtl
cld
mov
fcomps
adc
jae
fcmovnbe
cmp
imul
pop
ja
jno
mov
push
push
sbb
push
cmp
adc
in
xchg
out
movsl
rcl
or
sbb
pop
fmulp
sub
xchg
addr16
stc
lods
adc
xchg
sar
fcmove
inc
lods
lret
pusha
nop
fcompl
sbb
dec
es
into
scas
cmp
je
stc
out
xchg
aaa
mov
push
or
pop
pop
sub
adc
shl
popf
jp
push
add
jecxz
lds
mov
sbb
xor
dec
ror
push
dec
push
mov
adc
mov
mov
sub
pop
mov
popf
cmp
insl
pushf
in
es
bound
and
sbb
xchg
and
sbb
ret
xchg
or
cmp
xchg
sub
aam
shll
lret
sahf
test
rolb
movsl
mov
es
sbb
sahf
push
adc
lods
dec
jne
sbbb
and
aam
jb
shlb
and
pusha
fwait
mov
mov
subb
gs
xor
movsl
icebp
insb
out
and
pop
stc
ds
lahf
pop
sub
push
lock
xchg
lret
stos
fsubr
push
sub
or
mov
data16
sbbb
push
pop
imul
leave
insl
sar
push
test
clc
pop
push
insb
sbb
hlt
icebp
imul
aaa
ds
sbb
pop
jg
add
pushf
cs
jne
mov
les
aas
and
pop
rclb
sahf
and
cmpsl
shr
jl
loopne
inc
aas
sbb
cwtl
inc
or
ret
test
lds
loop,pt
sahf
shll
and
sub
insl
xchg
jmp
adc
aaa
arpl
push
test
xor
rcrb
sarl
jb
cltd
mov
mov
repnz
out
cli
cmp
scas
sbb
xchg
insb
fcom
xor
adc
dec
sub
and
lret
test
inc
fistps
stc
adc
cmpsl
and
mov
dec
lahf
mov
xchg
sbb
add
out
xchg
pop
mov
push
push
sbb
cld
aaa
inc
shlb
gs
lea
orl
mov
xor
push
cs
rorb
fdiv
xor
jo
push
in
mov
push
xchg
fucomp
rclb
iret
adc
jns
in
push
sbb
shrl
enter
sub
mov
sub
sbb
add
adc
add
cmpb
and
ficomps
xchg
shlb
imul
sbb
pop
sub
xchg
rcrl
sub
cmp
repz
loopne
int3
xchg
sub
push
push
ds
sbb
xor
mov
xchg
mov
jo
pop
sbb
rorl
insb
dec
mov
sbb
sub
ja
cmp
jl
jl
xchg
lcall
sahf
mov
add
pusha
pop
sbb
fildll
add
sbb
xchg
sbb
leave
jo
push
sbb
repz
pop
data16
mov
sub
jmp
push
jle
movsl
cltd
xchg
push
adc
mov
movsb
out
pop
inc
push
jae
scas
or
daa
adc
mov
call
mov
iret
mov
xchg
inc
and
inc
loope
cmpsb
add
pop
fnsave
push
inc
jmp
or
adc
out
sbb
xlat
jb
cmp
ja
lock
call
add
test
cmp
mov
std
pop
inc
dec
cs
pop
xchg
pop
notl
in
pop
lods
push
cmp
mov
mov
ljmp
dec
xchg
lock
cmp
out
rol
adc
hlt
insl
push
push
iret
fwait
mov
call
sub
mov
mov
inc
pusha
and
jge
idiv
cmp
popl
mov
mov
mov
int
je
or
mov
fwait
mov
out
pushf
push
rorb
into
lret
je
xchg
lea
push
pop
xor
mov
lahf
aad
jp
and
movsl
lds
fidivrl
jnp
jnp
sbb
sub
pusha
jecxz
cmpsb
aad
test
stos
push
mov
sub
mov
add
das
shll
adc
repz
ljmp
das
mov
mov
scas
push
mov
sbb
fbld
and
push
call
aam
shlb
rorb
and
test
adc
fisubrs
add
int3
ds
sbb
cmp
rcrl
pop
xchg
fcoml
inc
push
int
dec
insb
fimull
and
pop
pop
aaa
xchg
sub
aaa
mov
and
jg
lock
sbb
xor
lea
arpl
arpl
les
sub
inc
roll
sbb
jnp
cmp
mov
std
jmp
mov
addr16
lods
xchg
push
daa
outsb
jnp
adcb
fists
xchg
and
pusha
cwtl
mov
outsb
mov
aad
loope
aad
nop
lea
xchg
jo
adc
dec
stc
cs
cmp
jo
cmp
pop
stos
sbb
push
rcrl
lea
push
mov
shlb
jge
lret
ss
fs
push
cmp
mov
and
pop
aaa
add
pusha
repnz
sub
adcl
int3
aas
fcompl
mov
push
xchg
or
lea
addr16
push
inc
push
testb
repnz
mov
inc
or
test
ljmp
lcall
shr
pusha
cmpsl
popa
and
jle
mov
aaa
xchg
arpl
mull
fildll
adc
or
xchg
dec
shll
xchg
fs
and
gs
cwtl
std
jbe
push
add
insb
jb
jp
orb
rcll
lahf
xor
cmp
cmp
xchg
lea
jle
icebp
loope
cwtl
int3
mov
jmp
pop
push
ficoms
add
sbb
into
rcr
adcb
xchg
mov
addr16
adc
insb
pusha
fnsave
fcomip
test
inc
jp
bound
pusha
jmp
xchg
aad
dec
mov
or
sbbl
mov
call
jbe
mov
into
jae
sbb
test
enter
xchg
mov
call
dec
dec
push
les
insb
jo
pop
in
xor
cmp
sub
jle
push
sbb
jae
xchg
jne
aad
xlat
mov
ss
movsb
lock
gs
mov
fmul
and
adc
shll
mov
roll
push
into
je
insb
pop
cmp
fbld
movsl
or
pop
cmp
popa
pusha
push
jne
nop
lahf
in
cmpsb
sbb
fdecstp
int3
push
outsl
add
arpl
in
xor
pop
clc
arpl
xchg
sub
inc
ss
mov
cmp
lods
mov
loop
ja
fnsave
sbb
loopne
mulb
cs
jbe
xchg
lods
pop
mov
hlt
pop
push
daa
inc
lods
jae
adc
dec
mov
gs
imul
lret
and
mulb
mov
std
jg
bound
push
sub
xchg
hlt
pop
push
mov
jae
adc
push
ds
repz
sbb
fnstenv
sbb
idivb
push
out
mov
in
dec
cmp
hlt
and
outsb
inc
out
jae
adc
xchg
mov
adc
fsubrs
rcr
call
xlat
sbb
push
idivb
push
fisubl
in
jnp
ret
addr16
outsl
pusha
dec
hlt
dec
push
cli
inc
std
jae
adc
daa
mov
sbb
lods
mov
sti
call
cwtl
sbb
push
pushf
sahf
xchg
dec
sub
sub
mov
int
add
pop
mov
aas
std
mov
push
cmp
pop
jp
call
movsb
sbb
pop
mulb
sub
fs
fwait
cmp
pop
jne
pop
jmp
push
out
inc
xchg
push
mov
mov
jge
pop
sub
call
div
xchg
push
sahf
inc
xchg
push
sub
mov
xchg
cmp
pop
mov
sub
lods
outsb
inc
aas
push
ret
lods
out
fistpl
xchg
call
cmp
notb
sub
bound
cmp
inc
loope
ret
arpl
hlt
lret
sub
adc
cmpsl
movsl
out
insl
xor
sub
pop
stos
das
jge
pop
aas
mov
loope
dec
jb
sbb
push
lock
pop
sub
cltd
in
sbb
pop
movsb
arpl
or
movb
mov
je
add
nop
push
lods
lods
jle
pop
cli
inc
jmp
out
dec
loope
divb
push
or
xchg
mov
arpl
in
cmp
pop
shll
pop
loope
push
hlt
in
and
jo
adc
mov
and
jge
pop
into
sbb
sbb
push
push
mov
mov
jecxz
adc
fdiv
or
cmp
jae
adc
or
jmp
mov
jne
sbb
loopne
negb
out
adc
adc
in
push
cmp
pop
repz
sub
ljmp
movsl
arpl
lods
push
mov
sbb
push
jne
sbb
loopne
imulb
pop
xor
arpl
pop
jg
mov
sub
pushf
jae
adc
jae
insl
out
ds
push
push
stos
mov
cmp
js
push
jb
sbb
loopne
testb
sbb
arpl
pop
xor
hlt
test
add
push
mov
test
jns
or
psubsb
mov
xchg
sbb
loopne
test
xchg
cmc
xchg
dec
sub
fs
xlat
cmp
push
mov
fs
fsubrs
movsb
inc
xchg
jae
adc
lds
xlat
push
test
in
call
ficompl
js
mov
dec
xchg
pusha
sub
inc
in
in
dec
pop
jl
pop
xor
jmp
inc
cmp
adc
call
ds
jge
pop
dec
dec
jmp
outsb
test
xor
xchg
sbb
arpl
pop
aad
pop
sbb
xor
push
sbb
jae
adc
stos
movsl
push
insl
test
pop
or
or
enter
std
loopne
mul
push
mov
imul
inc
in
ja
ljmp
dec
hlt
lock
inc
or
mov
inc
mov
fwait
push
jae
xchg
jle
pop
dec
adc
mov
adc
sbb
push
inc
xchg
add
fnstcw
arpl
in
jnp
pop
mov
hlt
sti
sub
inc
jo
adc
dec
mov
push
push
and
sbb
stos
lods
jle
pop
call
push
notb
or
xorb
jle
lcall
nop
arpl
add
sbb
adc
jmp
ja
pop
stos
inc
jge
pop
dec
inc
jmp
shl
and
sahf
sub
jo
bound
pop
mov
loop
pop
hlt
bound
inc
bnd
adc
xor
daa
push
ds
push
jge
pop
mov
inc
jmp
mov
test
das
mov
aas
sub
mov
inc
cmp
pop
adc
hlt
cmpsl
sub
inc
jae,pn
adc
loopne
inc
insl
mov
sub
lods
cwtl
lcall
sbb
push
jno
xchg
mov
in
imul
hlt
icebp
sub
inc
shll
adc
add
aas
insl
push
jmp
pop
jge
pop
adc
call
sbb
add
sub
mov
fsubrs
jg
int
cmp
push
xchg
hlt
and
test
adc
pop
mov
add
jle
pop
jno
call
add
pop
loope
negb
std
xchg
outsb
xor
and
push
psadbw
pop
xor
mov
dec
inc
lret
xchg
jle
adc
cvtpi2ps
mov
jecxz
loopne
and
sub
push
stos
movsl
push
sub
add
mov
lods
rorl
jle
ds
ja
mov
sbb
aaa
pop
mov
sbb
std
xchg
dec
add
or
call
xchg
in
test
xor
out
fstpt
movsb
xchg
cmc
test
adc
jo
xchg
test
jmp
add
loop
cmp
or
inc
imul
xor
cwtl
scas
push
fs
mov
loope
out
add
jge
lcall
outsl
mov
sahf
rcrb
mov
inc
mov
popa
lods
gs
cmp
pop
insl
das
add
daa
cs
cmp
push
nop
std
mov
out
cmp
mov
fwait
dec
mov
dec
sahf
into
xchg
pop
adc
das
in
sub
adc
dec
mov
cmpl
cmp
sbb
push
or
mov
sbb
iret
inc
push
xchg
and
std
xor
mov
lods
and
fldenv
xchg
repnz
movsb
mov
sbb
std
xorb
scas
std
out
xchg
adc
inc
pop
sbb
or
js
cli
xchg
aad
popa
push
jl
mov
adc
leave
sbb
in
and
jns
adc
lds
js
rolb
jne
insl
xor
movsl
adc
push
out
and
xchg
pusha
xor
pop
sub
xor
call
daa
lock
ficoms
pop
ret
xor
adc
stos
adc
push
sbb
sahf
inc
inc
mov
notl
push
ret
sbb
nop
pop
jno
leave
movsb
cmp
inc
dec
push
sti
adc
cmp
ja
sub
push
rorb
daa
fidivs
mov
fs
in
iret
out
stos
jb
shl
add
nop
pop
mov
sub
inc
lds
jo
dec
in
jge
pop
test
addr16
je
fisttps
les
js
cmp
es
fs
or
mov
push
stos
sbb
add
insb
pop
xor
out
sarb
adc
dec
jmp
shlb
not
mov
push
mov
in
and
shrb
cmp
lahf
xlat
sub
hlt
cwtl
mov
adc
stc
cld
or
jb
sub
mov
inc
or
xchg
and
rolb
ret
xor
leave
mov
pusha
scas
sbb
jae
lods
call
pop
xor
scas
dec
sahf
stos
mov
and
in
in
sbb
out
rclb
inc
shll
mov
inc
adc
xchg
fdivs
mov
lods
sbb
inc
push
and
adc
shrb
loop
xchg
ficoms
fwait
xchg
mov
sbb
push
out
std
hlt
scas
inc
shrb
loop
in
sub
sbb
sarb
ficoml
fnstcw
xor
adc
repz
mov
lcall
lds
popf
aam
sbb
cmc
push
mov
mov
jne
xchg
mov
and
dec
pop
testl
rorl
lods
sahf
stos
shlb
div
lds
pop
mov
push
out
imul
cmp
or
stos
pushf
divb
mov
xchg
clc
sar
mov
mov
repz
push
jle
lcall
pop
inc
cmp
mov
into
ss
in
mov
sub
dec
or
mov
mov
sbb
or
gs
xor
inc
mov
cmp
sbb
inc
cli
in
sarb
cmp
pop
xor
inc
lods
xchg
rcl
inc
fadds
add
mov
sbb
pop
xchg
stos
lret
cmpsl
popf
xchg
sarb
fistps
hlt
dec
dec
sbb
js
mov
mov
fdivl
bound
lahf
sub
pop
ret
rorl
repnz
std
jle
sbb
stos
das
adc
shr
sbb
ja
sub
jae
mov
push
fmull
stos
sub
dec
mov
adc
arpl
hlt
pop
cmp
movsl
sbb
aas
dec
push
mov
jge
pop
ja
call
add
and
push
inc
adc
or
in
cmp
pop
xor
pop
arpl
hlt
mov
jae
adc
loop
or
aas
pop
push
lods
idivl
pop
or
and
push
jb
sbb
loopne
test
aad
xchg
dec
sub
jno
lods
cmp
push
jg
pop
clc
arpl
inc
inc
jo
adc
and
bound
stos
gs
mov
sbb
sbb
loopne
testb
arpl
push
test
arpl
jae
adc
daa
movsb
lods
push
ja
xor
jno
addl
in
sbb
loopne
idiv
push
or
imul
in
push
jge
pop
nop
arpl
sub
inc
cli
jae
adc
inc
mov
cmp
stos
sahf
jle
pop
adc
cltd
movb
dec
testb
sub
jo
arpl
fwait
cmp
pop
shlb
and
hlt
shrb
fiaddl
jae
adc
dec
mov
mov
insl
stos
dec
jge
pop
xchg
xor
js
add
sbb
push
push
jnp
cvtps2pi
jg
arpl
xor
roll
jae
adc
cmpsl
movsl
arpl
stos
loopne
ficomps
icebp
call
sbb
loopne
testb
sahf
jo
arpl
pop
fwait
pop
pop
pusha
jbe
mov
dec
inc
movsl
jae
adc
arpl
inc
push
jmp
pop
mov
pop
loope
neg
push
add
pop
in
adc
pop
lea
hlt
xchg
sub
mov
adc
loope
xor
aas
and
push
stos
jnp
xor
xchg
push
jb
sbb
fcomp
cmp
in
cmpsb
cmp
push
push
mov
hlt
imul
adc
cwtl
movsl
xor
ds
cmp
cmp
call
pop
sbb
out
xchg
sub
push
in
push
cmp
pop
mov
push
hlt
mov
adc
jae
adc
push
shrb
pop
cmp
sbb
push
or
xchg
jo
arpl
in
and
pop
aaa
arpl
hlt
cli
sub
inc
xchg
sbb
pop
jge
pop
test
pop
xor
pop
sbb
loopne
notb
imul
pop
adc
pop
mov
hlt
sbb
push
inc
and
adc
mull
cmp
lods
dec
jge
pop
xchg
jl
addr16
gs
sbb
cli
mulb
es
xchg
leave
sub
jg
arpl
in
mov
push
pop
inc
pusha
cltd
hlt
je
loope
pop
jae
stos
outsb
adc
stos
hlt
jge
pop
out
call
insl
sbb
loopne
test
arpl
in
sub
jg
arpl
das
cmp
pop
pushf
arpl
hlt
jmp
jae
adc
push
mov
stos
push
iret
lods
push
jge
pop
std
insl
jmp
jl
loopne
sub
fcoms
sub
add
jae
adc
sbb
inc
push
xor
insb
jge
pop
andb
and
loopne
test
sub
jg
bound
jle
add
push
pop
arpl
js
in
inc
mov
insl
mov
sti
push
test
pop
mov
call
out
cmc
loopne
mulb
push
or
xchg
inc
sub
cmc
in
sub
pop
aas
arpl
hlt
lahf
sub
inc
cmpsl
jae
adc
push
mov
jg
std
lods
scas
jle
pop
loopne
call
sbb
push
idivb
mov
jo
arpl
push
cmp
pop
mov
hlt
fldcw
popl
jae
adc
push
fldcw
lock
sti
gs
sbb
push
lcall
mov
cmp
pop
ss
hlt
shrb
push
xchg
rcr
movsl
xlat
insl
fs
adcl
jge
pop
mov
jmp
dec
sbb
fcompl
xchg
adc
and
jo
lea
arpl
hlt
scas
sub
inc
adc
adc
fsubl
mov
shr
xchg
pop
jb
or
push
fwait
call
arpl
iret
cmp
push
arpl
cmpsb
jge,pt
outsb
daa
aas
mov
jle
pop
sub
scas
sti
jne
sbb
and
repnz
subb
nop
cmp
pop
pop
pusha
cmp
or
incl
add
dec
insl
aam
push
push
fldt
jb
call
int3
sbb
push
pop
mov
jg
arpl
in
stos
cmp
push
test
inc
push
xchg
inc
mov
mov
ds
jle
pop
jl
jmp
inc
mulb
sub
jo
cmp
pop
dec
pop
jmp
hlt
lock
adc
mulb
popf
push
loope
sbb
loope
in
mov
inc
sbb
push
mov
jo
arpl
push
xchg
hlt
sub
addr16
adc
andl
push
popf
lods
in
jge
pop
arpl
jne
sbb
push
ret
scas
jo
bound
in
stos
cmp
pop
or
pop
sbb
shrl
inc
adc
adc
pop
mov
ljmp
sub
mov
popa
and
cli
sahf
roll
shlb
jl
push
aaa
fs
inc
shll
jg
adc
pushf
andb
imul
push
xchg
inc
das
sbb
outsb
or
jns
cmpsl
lock
mulb
pop
fdivp
mov
adc
lret
sbb
jae
pushf
or
fiadds
push
jbe
sbb
int3
push
fdivs
lret
ja
pusha
add
push
fbld
push
cmp
push
js
pop
aaa
lret
and
in
xchg
lcall
mov
outsb
jns
mov
aad
and
dec
mov
xlat
add
sbb
sbb
dec
in
insl
subb
sub
push
in
fs
jae
xchg
loopne
fmul
lock
fdiv
jo
loop
fstps
or
ss
ficompl
sub
sti
fsubr
mov
sub
jae
xor
mov
stos
cmp
loopne
aam
pop
insl
nop
int3
and
xchg
pop
fistpl
push
jo
add
add
movsl
mov
jecxz
adc
pop
leave
rolb
cmpsl
int
and
ljmp
jbe
xchg
les
sub
adcb
cltd
or
repnz
sbb
push
imul
in
add
xchg
dec
ret
inc
push
push
ljmp
sub
push
lock
loopne
xchg
sub
pop
pop
in
xor
add
cmp
lea
out
push
xchg
aaa
movsb
add
or
push
popa
jo
add
inc
inc
dec
push
adc
lahf
mov
insb
test
sahf
and
pop
xor
add
out
ljmp
fcmovbe
add
lock
fwait
testl
daa
leave
jmp
es
testl
adc
xacquire
mov
cli
push
sbb
cmp
lods
dec
insb
xor
mov
dec
or
jmp
scas
daa
repnz
jmp
xchg
jno
lods
jmp
xor
mov
imul
or
std
loopnew
pop
pusha
out
popl
cwtl
fmuls
sub
pop
push
js
imul
push
aaa
cmp
cld
mov
popf
mov
adc
imul
into
xchg
inc
ja
data16
mov
mov
frstor
jns
jb
inc
add
push
push
push
ret
jl
ds
push
xchg
and
outsl
andl
xchg
pop
rolb
jmp
out
pop
mov
mov
or
pushf
hlt
rolb
leave
rcrl
xchg
jae
and
insb
fadd
pop
fistps
push
inc
push
add
and
sub
add
push
daa
push
push
and
lret
and
xchg
pop
pop
loopne
lds
rcll
or
addl
lcall
ljmp
push
adcb
adc
xor
mov
inc
inc
push
les
cmp
popa
movsl
dec
fldcw
adc
daa
xlat
inc
add
mov
mov
mov
jno
dec
and
mov
push
insl
jae
test
add
movsb
push
add
cmp
imul
jno
mov
pop
and
jo
xchg
add
xchg
sbb
inc
xchg
nop
les
shlb
call
mov
inc
nop
out
xor
jns
lods
push
loopne
daa
lea
and
in
cmpsb
in
push
lahf
mov
adc
shll
sub
xchg
stos
cs
lcall
nop
test
jp
shr
lds
mov
pop
in
addr16
and
jl
into
out
fwait
inc
fwait
pop
sub
push
jmp
imul
pushl
jecxz
add
in
sbb
or
sub
out
imul
jge
and
xchg
or
or
pop
popaw
jo
clc
daa
jno
loope
sub
imul
dec
data16
adc
xchg
sbb
mov
mov
ds
pop
ds
jb
ret
pop
shll
jno
and
adc
mov
and
jp
imull
sarl
imul
jbe
xor
push
cmc
sbb
outsb
lock
rol
popf
mov
lret
or
mov
add
loopne
push
jl
mov
out
sub
add
adc
push
mov
pop
insb
rclb
cmpsb
cmpb
cmp
sbb
popa
roll
imul
dec
jl
mov
loop
fsub
fisubs
sahf
cltd
in
jo
dec
verr
in
inc
xchg
adc
cmp
adc
adc
pop
mov
les
push
stos
hlt
xchg
inc
pop
and
or
shll
dec
out
jns
xchg
rcrb
xlat
and
mov
cli
push
rolb
push
lea
push
and
jnp
push
mov
xchg
std
repnz
fistps
push
sub
pop
cli
sti
fstp
inc
cs
daa
jnp
pop
sub
sbb
pop
shrl
inc
mov
mov
pop
pusha
jno
loope
jbe
fisubrs
sub
pop
sub
or
add
sub
bound
imul
rorb
push
or
pop
pop
out
jp
jns
fstl
sti
in
int3
and
sub
fildl
xor
jg
mov
xor
push
jmp
mov
jno
aas
loop
inc
insl
enter
jae
push
mov
roll
add
not
fwait
adc
sbb
adc
fwait
dec
popa
repz
mov
mov
shll
fistps
stos
je
adc
daa
jno
jns
jb
fdivrs
notb
test
ja
lahf
cwtl
sbb
sub
jno
xlat
jne
jl
push
pop
sbb
xchg
inc
mov
faddl
xchg
pop
pop
sub
repz
das
rolb
test
dec
add
into
sahf
sbb
xor
sbb
mov
adc
bound
and
mov
pop
jg
call
cmp
pusha
mov
shrb
mov
sahf
pop
mov
movsb
andl
adc
pop
outsl
pushf
movsl
adc
out
popa
sahf
lret
pop
mov
clc
push
or
mov
lods
dec
add
jl
mov
shrl
fiaddl
add
sbb
jp
bnd
cmpsb
push
jb
aam
pop
jecxz
pop
ljmp
adc
xor
jno
fstl
push
mov
and
xchg
adc
fwait
inc
loop
push
mov
mov
clc
mov
pop
mov
cmp
adc
pop
and
add
fistps
pop
ficompl
push
popf
mov
out
mov
es
loopne
cvtps2pi
hlt
in
add
cmp
mov
cmc
lahf
hlt
imul
movsl
pop
push
jo
adc
movsb
mov
ret
out
js
add
cmc
sbb
xor
pop
loope
shll
or
mov
mov
push
ljmp
adc
pop
cltd
dec
fmull
adc
orb
jno
fadds
sub
push
loop
add
dec
jo
in
fdivl
dec
rcll
mov
mov
jno
inc
push
push
sub
adc
pop
dec
stc
jl
jg
pop
inc
fwait
xchg
sbb
push
add
sub
mov
sbb
pop
and
sbb
and
ficoms
mov
adcl
andb
fidivrl
pushf
mov
out
divb
xor
mov
sub
add
jp
add
js
popa
sbb
xor
lds
pop
rcll
scas
mov
cmpsl
jecxz
lock
bound
xchg
insb
das
cmpsl
mov
in
cld
lods
add
in
or
pop
cmc
sub
pop
jbe
stos
xchg
cmp
insb
add
cmp
fstpt
or
mov
xchg
inc
jmp
sbb
int3
xor
cmp
cs
xor
xchg
cltd
ljmp
xchg
cmpb
loope
cwtl
insb
ret
xor
pushf
xor
fsubl
je
xchg
clc
inc
push
insl
lret
dec
pusha
call
pop
mov
dec
dec
cld
orl
fwait
inc
test
dec
loop
sbb
lcall
dec
and
aas
add
loop
jp
gs
sub
push
arpl
pop
aam
adc
jg
out
mov
das
rorl
pop
jmp
sub
jle
sub
pop
nop
add
and
icebp
das
push
fcomi
mov
cmp
loopne
xor
faddl
jecxz
loopne
ja
jno
arpl
xor
adc
adc
gs
icebp
test
dec
addr16
pop
imul
push
addb
outsb
les
and
sahf
xor
add
jge
push
dec
data16
js
sub
push
into
mov
outsb
nop
out
in
rorb
and
mov
cs
add
out
addr16
mov
adc
int3
sahf
xor
daa
pop
mov
or
add
loope
pop
cltd
movsb
fisubrs
cld
movsb
cmp
mov
ror
cmp
ja
xchg
stos
gs
nop
stos
popa
and
jb
fisubrs
cmpsb
outsl
in
mov
jmp
push
popf
cmp
out
push
add
ret
mov
adc
punpckhdq
ret
mov
dec
nop
pop
jle
jmp
insl
dec
and
jnp
stc
test
stc
jp
pop
or
imul
mov
adc
mov
xlat
in
or
xor
jl
inc
xlat
pop
pop
outsb
fbld
xor
and
dec
outsb
dec
xor
cmp
out
imul
insb
pop
sub
mov
movsl
or
lahf
jne
pop
push
imul
inc
xchg
movsl
xor
mov
sub
sub
mov
pusha
cmpl
cmp
rcrl
inc
add
push
movsb
je
sub
mov
cld
pop
pop
push
addb
ret
pop
faddp
movsb
push
lods
push
add
das
sbb
sbb
xchg
fmuls
jge
mov
mov
and
push
pushf
jns
mov
sbbb
in
sbb
jnp
push
inc
jmp
push
push
xchg
lods
jge
fildl
in
stos
repnz
sbb
and
mov
mov
in
add
cmpsb
lcall
xchg
js
jmp
mov
mov
or
negl
cs
mov
pop
sub
cmp
aad
test
and
outsl
cmp
cwtl
jg
mov
shll
dec
push
fdivl
jl
push
jle
or
jle
inc
pop
lea
fnstsw
add
push
scas
lds
rcr
pop
addr16
mov
cld
or
bound
ds
popa
and
xor
rclb
xor
cmpsl
xchg
stos
adc
inc
pop
xlat
push
sbb
sbb
inc
sbb
lock
mov
sub
jae
ljmp
out
mov
out
ret
mov
loope
and
add
add
imul
cltd
inc
dec
cmp
cmp
sbb
scas
loopne
lods
call
cli
loope
insb
jle
dec
or
cli
stos
ficompl
mov
mov
mov
mov
mov
add
adc
mov
push
add
lret
jo
ss
jg
adc
fisubl
or
pusha
mov
popl
mov
adc
push
mov
aad
pop
cs
es
lds
pop
xchg
js
cmc
rcrl
jo
push
cmpb
js
fisubs
sub
mov
xchg
and
fwait
sbb
orl
jle
cmp
adcb
ss
aas
sub
lds
add
sbb
mov
jmp
insl
jb
and
shrl
and
and
xchg
es
mov
loopne
into
and
and
lahf
leave
sbb
test
push
outsl
add
jl
push
sarl
push
pop
push
cmpsl
shlb
dec
dec
mov
je
cmpl
bound
xor
loopne
fs
xor
outsl
ss
mov
xchg
push
dec
pop
lret
cs
mov
add
xchg
mov
add
pop
sub
cmp
inc
mov
cmp
pop
push
push
pop
inc
js
xchg
and
sbb
xchg
cmp
enter
loopne
jno
aam
sub
xor
cmp
sub
insb
rolb
xchg
cmp
sbb
mov
mov
push
testb
cltd
lcall
jns
outsb
add
dec
push
divb
daa
call
inc
sub
pop
xchg
mov
mov
cmp
lods
dec
and
inc
xor
sub
movsl
push
out
jge
dec
sub
in
or
cmp
jecxz
sbb
outsl
add
sub
mov
outsl
cmp
and
xchg
dec
nop
jae
data16
ret
test
mov
mov
push
cltd
iret
pop
mov
cmp
inc
xchg
mov
ljmp
push
arpl
or
xor
inc
inc
pop
mov
sub
aas
mov
push
in
pop
jge
dec
inc
shrb
fiaddl
fisubs
mov
mov
mov
and
mov
dec
loop
inc
inc
enter
sbb
icebp
cs
test
lods
call
jnp
je
or
pop
scas
mov
ss
hlt
xchg
hlt
xchg
ljmp
jge
or
mov
pop
fdivrl
mov
daa
or
int3
test
rclb
rcr
dec
outsl
pxor
test
clc
orl
insb
pop
mov
pop
rcrl
sub
repnz
add
pop
inc
je
mov
cmp
dec
dec
loop
sub
dec
int3
mov
xchg
mov
stos
hlt
jno
call
lcall
inc
jmp
mov
xor
pop
add
cmpsb
pop
mov
sub
jne
dec
cs
sbb
scas
mov
rcrl
sbb
add
push
popa
dec
insl
arpl
je
push
pop
push
dec
ja
inc
xor
fs
push
jbe
js
outsl
dec
xor
dec
xor
xor
outsb
push
bound
inc
ja
inc
push
inc
push
push
inc
push
push
dec
jae
push
jne
imul
push
jp
dec
jo
push
jae
pop
push
jne
jb
ja
popa
imul
push
dec
inc
xor
jbe
cmp
dec
jae
push
inc
bound
dec
push
push
outsl
popa
xor
fs
push
outsl
push
inc
dec
aaa
insb
dec
jae
addr16
dec
ja
jne
dec
xor
pop
dec
xor
dec
push
xor
xor
dec
xor
insb
insl
bound
dec
add
add
ja
bound
outsl
inc
dec
aaa
jns
outsl
cmp
xor
aaa
push
inc
xor
imul
jne
push
jb
push
push
popa
dec
aaa
dec
push
push
aaa
arpl
push
jns
jbe
arpl
push
fs
jo
bound
push
inc
jo
jb
outsl
ss
push
dec
je
pop
xor
addr16
push
imul
dec
pop
inc
inc
imul
jns
dec
inc
insl
pop
jp
xor
arpl
dec
inc
outsl
inc
inc
dec
je
xor
dec
push
jb
insl
popa
outsb
jo
cmp
insb
dec
dec
data16
jb
ja
push
xor
dec
insb
popa
jne
data16
ss
dec
ss
insb
cmp
dec
popa
xor
xor
outsb
gs
push
insb
dec
xor
dec
je
inc
dec
inc
dec
popa
ss
add
imul
inc
push
inc
cmp
jne
push
outsl
insl
js
js
cmp
add
add
jp
jne
pop
push
push
jne
dec
outsb
imul
jo
insb
arpl
add
dec
inc
outsl
outsb
push
push
fs
insl
je
arpl
inc
xor
push
pop
xor
jns
arpl
dec
outsl
imul
xor
inc
dec
xor
bound
push
dec
inc
inc
inc
cmp
inc
dec
pushw
dec
insb
xor
push
xor
add
insl
xor
xor
dec
insb
insl
push
jbe
xor
jno
dec
jns
dec
je
dec
inc
jp
inc
push
popa
cmp
gs
push
push
inc
pop
push
inc
ja
push
push
jb
push
cmp
inc
dec
inc
dec
imul
dec
inc
insb
bound
jne
pop
dec
pop
inc
jne
inc
xor
dec
push
push
pop
dec
dec
outsb
push
insl
jne
jne
dec
jb
inc
dec
inc
ss
dec
jb
inc
push
dec
push
push
pop
jbe
dec
push
dec
jb
dec
insl
je
inc
outsl
inc
dec
jb
push
push
jo
jne
xor
imul
push
dec
cmp
insb
xor
xor
cmp
pop
arpl
xor
insb
js
je
push
xor
jbe
xor
jae
xor
add
fs
jne
imul
outsl
gs
push
aaa
inc
popa
push
xor
dec
xor
jns
ja
arpl
push
xor
xor
jne
xor
outsb
fs
je
bound
jno
inc
cmp
bound
pop
dec
imul
dec
inc
dec
push
dec
dec
xor
add
add
rorb
adc
dec
outsl
je
dec
addr16
dec
dec
inc
cmp
bound
xor
push
jo
xor
popa
ja
dec
cmp
push
push
push
add
dec
add
add
inc
add
add
dec
xor
push
arpl
push
je
push
xor
dec
outsl
pop
inc
jne
data16
xor
fs
jo
jne
inc
jns
push
pop
dec
fs
dec
gs
jno
dec
inc
dec
inc
inc
dec
inc
jo
xor
push
dec
ss
popa
jp
outsb
push
push
xor
addr16
js
xor
xor
inc
dec
outsb
dec
js
dec
pop
bound
jns
push
push
arpl
fs
jae
xor
dec
js
pop
inc
push
dec
push
jbe
push
gs
inc
jbe
inc
dec
imul
dec
push
dec
inc
push
je
xor
xor
dec
inc
jno
cmp
jne
dec
jno
dec
xor
inc
xor
cmp
dec
inc
outsl
inc
aaa
xor
xor
jne
dec
xor
add
pop
cmp
ss
xor
push
bound
cmp
add
xor
dec
jb
imul
push
insl
jbe
jo
xor
pop
gs
inc
push
insb
inc
cmp
inc
push
imul
outsb
dec
pop
imul
jbe
inc
jne
gs
imul
push
aaa
inc
jne
inc
pop
xor
xor
aaa
fs
xor
jbe
popa
fs
popa
xor
push
xor
inc
xor
outsb
dec
dec
addr16
insb
dec
jae
jno
xor
fs
inc
jbe
jo
jae
add
cwtl
dec
or
jb
xor
push
inc
inc
pop
bound
xor
outsl
push
cmp
push
push
je
dec
inc
jbe
dec
inc
jno
dec
pop
xor
jb
push
fs
dec
ja
push
push
jo
cmp
outsl
insl
imul
push
dec
jne
jb
xor
push
bound
push
inc
pop
inc
inc
arpl
pop
push
je
dec
jne
inc
arpl
cmp
push
gs
dec
jne
xor
aaa
cmp
cmp
inc
cmp
inc
bound
dec
push
xor
xor
push
data16
insb
jo
jae
imul
jo
inc
xor
jp
push
dec
push
xor
insl
inc
inc
pop
inc
jb
cmp
push
cmp
addr16
add
popa
jo
ss
aaa
push
inc
inc
dec
js
jne
insb
jne
ja
cmp
outsl
push
add
add
push
xor
dec
push
push
js
bound
inc
xor
inc
push
jae
imul
bound
imul
push
insb
inc
dec
cmp
push
push
insb
push
jb
jbe
inc
xor
outsb
push
jo
arpl
dec
cmp
push
dec
push
dec
xor
dec
ja
inc
dec
dec
push
je
je
push
push
pop
jns
arpl
inc
inc
jne
inc
push
xor
xor
xor
push
outsb
dec
push
xor
push
aaa
insl
cmp
dec
pop
inc
push
push
cmp
imul
dec
xor
insb
aaa
data16
dec
ja
bound
jb
dec
push
inc
inc
jne
dec
inc
push
je
dec
fs
imul
inc
jp
aaa
insl
gs
pop
pop
dec
push
jo
popa
dec
inc
dec
add
jbe
addr16
pop
dec
gs
dec
inc
outsl
push
push
jae
bound
insl
insb
push
push
cmp
popa
popa
js
cmp
jns
push
outsl
dec
push
je
dec
dec
cmp
popaw
inc
jbe
push
aaa
push
inc
push
inc
push
jns
je
push
jo
popa
outsl
push
imul
inc
push
inc
jns
pop
outsl
dec
cmp
jno
bound
xor
dec
xor
jns
inc
inc
push
xor
outsl
outsb
arpl
imul
push
push
inc
dec
push
imul
push
jae
inc
pop
push
cmp
push
xor
arpl
add
add
je
push
inc
jns
push
dec
arpl
insb
xor
ja
dec
je
push
jno
imul
pop
pop
ss
aaa
dec
imul
aaa
js
inc
imul
jbe
push
pop
je
popa
je
fs
inc
dec
xor
jo
imul
push
inc
inc
jns
push
outsl
inc
push
inc
inc
outsb
xor
pop
dec
xor
inc
dec
xor
push
push
dec
jbe
inc
cmp
xor
jp
jbe
cmp
ja
push
push
popa
jb
xor
dec
pop
push
push
jne
push
addr16
dec
push
insl
push
dec
inc
jno
dec
push
outsl
xor
outsb
dec
jns
jno
imul
dec
push
cmp
data16
push
push
push
jb
cmp
ja
arpl
outsl
dec
insb
bound
inc
bound
jo
pop
je
add
adc
or
push
inc
js
ss
imul
jo
dec
addr16
jno
popa
xor
dec
jbe
ja
arpl
fs
jne
inc
je
outsl
dec
push
add
dec
aaa
insl
outsb
arpl
xor
push
imul
inc
jae
push
dec
dec
jno
push
jb
dec
arpl
push
insl
jp
push
xor
xor
dec
push
xor
dec
aaa
dec
inc
jae
push
popa
xor
push
dec
push
jae
imul
xor
push
push
jne
jb
push
xor
inc
popa
jp
inc
push
ss
push
cmp
inc
push
bound
xor
push
bound
push
push
jp
je
jbe
push
insl
push
inc
add
add
sbb
add
je
inc
popa
outsb
insb
dec
insl
cmp
aaa
jno
jbe
arpl
cmp
push
xor
xor
gs
inc
outsb
ss
dec
dec
insb
xor
ss
arpl
push
push
ss
insb
jbe
popa
bound
dec
jbe
dec
ss
inc
jae
push
bound
dec
inc
jo
dec
dec
dec
inc
xor
pop
outsl
dec
dec
imul
push
inc
inc
xor
ja
inc
inc
dec
xor
jae
dec
imul
pop
bound
xor
xor
dec
outsb
insb
inc
dec
outsb
push
pop
push
jae
push
fs
inc
xor
push
dec
ja
cmp
push
inc
cmp
xor
dec
dec
inc
imul
dec
popa
xor
add
add
add
mov
in
add
pop
pusha
cmpsl
add
pushf
adcb
popa
outsb
xor
fs
dec
jo
push
dec
outsl
inc
push
push
pop
dec
addr16
inc
jne
js
inc
dec
outsl
push
jbe
push
inc
dec
jno
imul
xor
dec
jo
push
dec
dec
jno
jae
ja
outsb
bound
push
addr16
insb
cmp
inc
fs
xor
popa
fs
jae
popa
dec
push
push
dec
pop
jbe
imul
dec
dec
cmp
aaa
js
xor
xor
data16
inc
jp
jb
popa
gs
outsl
pop
dec
xor
dec
jbe
bound
cmp
inc
dec
dec
jo
xor
popa
ja
arpl
imul
arpl
push
dec
dec
jno
dec
push
push
insl
push
push
pop
imul
insl
push
inc
inc
inc
dec
jno
arpl
inc
dec
ja
insb
xor
xor
dec
inc
popa
xor
dec
push
inc
js
bound
dec
dec
xor
jns
pop
jns
push
dec
aaa
dec
ss
cmp
inc
push
push
arpl
add
cmp
xor
imul
popa
dec
dec
outsl
dec
insb
jo
je
push
push
inc
push
dec
addr16
outsl
push
aaa
xor
jns
ja
jo
cmp
outsb
dec
inc
jno
dec
js
xor
dec
jp
xor
inc
arpl
push
pop
dec
imul
inc
jo
js
push
jbe
jb
jo
dec
push
je
ja
xor
pop
push
dec
arpl
imul
inc
xor
insb
popa
xor
inc
inc
inc
cmp
dec
cmp
xor
xor
dec
push
push
push
inc
pop
inc
jne
pop
dec
push
dec
push
dec
gs
cmp
cmp
je
inc
dec
dec
jp
inc
popa
jne
xor
jae
add
add
and
dec
jns
add
inc
inc
push
inc
inc
insl
inc
jp
inc
gs
inc
insb
jns
jno
jno
push
outsl
dec
js
jae
dec
dec
insb
pop
addr16
inc
inc
arpl
push
push
push
inc
push
inc
jo
dec
outsl
addr16
jp
outsb
imul
push
push
ja
dec
dec
push
je
arpl
gs
cmp
push
cmp
jno
push
dec
inc
jns
dec
push
outsb
add
add
push
jo
dec
jae
push
push
inc
inc
push
inc
push
aaa
jne
dec
xor
jno
insb
xor
dec
pop
push
dec
jne
push
push
imul
cmp
imul
jbe
push
push
jno
imul
je
bound
push
bound
pop
inc
dec
jo
js
pop
arpl
outsl
xor
jns
pop
insl
arpl
push
push
push
push
imul
outsl
ss
dec
xor
xor
pop
xor
imul
jno
cmp
dec
jae
xor
push
jno
jb
xor
popa
ss
cmp
dec
push
js
push
push
js
inc
inc
arpl
jo
push
dec
xor
dec
jo
inc
pop
imul
bound
xor
push
xor
dec
push
dec
xor
dec
dec
addr16
insb
jno
cmp
insb
inc
push
arpl
ja
push
inc
jno
jp
jae
xor
push
inc
dec
arpl
push
jbe
push
add
add
dec
jae
imul
inc
dec
push
insb
push
jbe
xor
push
dec
push
inc
pop
dec
cmp
push
push
xor
jno
inc
insb
dec
inc
outsl
push
inc
outsb
push
jp
gs
push
pop
popa
dec
xor
jb
jno
pop
xor
aaa
jo
xor
dec
push
imul
je
dec
inc
jae
push
jae
outsb
inc
push
popa
arpl
inc
xor
dec
pop
imul
push
inc
ss
dec
inc
dec
pop
je
imul
dec
outsb
jp
pop
jp
pop
xor
jp
outsl
inc
jno
dec
inc
xor
dec
jo
inc
cmp
push
js
push
jae
cmp
imul
xor
pop
bound
pop
ja
jo
addr16
inc
jne
pop
xor
xor
inc
xor
outsb
push
dec
push
fs
push
pop
dec
jne
imul
jo
dec
jns
inc
push
push
xor
jne
push
imul
outsl
add
dec
add
add
insb
dec
xor
jp
cmp
insl
cmp
xor
xor
dec
cmp
inc
jae
push
jne
xor
push
inc
insb
dec
xor
inc
pop
pop
ja
pop
push
inc
gs
push
xor
inc
imul
push
push
push
inc
addr16
push
ja
xor
aaa
push
cmp
inc
jno
aaa
push
push
dec
jp
insl
inc
inc
arpl
xor
push
push
inc
insb
dec
push
inc
push
pop
jae
push
bound
aaa
pop
data16
push
push
xor
push
inc
jo
xor
push
add
add
push
inc
insb
jns
jo
inc
inc
aaa
arpl
jne
dec
popa
push
dec
popa
gs
ja
gs
insb
cmp
gs
jp
jno
inc
jne
ss
jno
xor
dec
addr16
inc
inc
dec
popa
pop
xor
js
aaa
cmp
add
add
jne
fs
push
dec
cmp
dec
ja
je
xor
aaa
inc
jo
cmp
xor
jp
dec
bound
ss
dec
dec
arpl
xor
je
dec
xor
push
cmp
dec
ja
jno
ja
jns
arpl
jo
insl
push
jbe
dec
xor
add
sbb
outsl
jb
ficomps
sti
out
add
arpl
ja
je
arpl
dec
inc
jb
addr16
outsl
xor
js
addr16
jp
cmp
imul
outsl
inc
pop
insl
push
insb
xor
pop
outsl
push
xor
inc
cmp
push
xor
bound
xor
push
inc
inc
inc
dec
inc
dec
xor
inc
xor
outsl
xor
outsb
cmp
fs
cmp
push
dec
push
gs
arpl
jo
inc
jo
cmp
gs
outsl
inc
push
js
push
cmp
pop
arpl
xor
cmp
inc
push
dec
push
arpl
pop
dec
push
dec
cmp
dec
push
js
jno
insb
push
jno
dec
cmp
push
fs
ss
pop
push
xor
ja
xor
add
aaa
push
jae
xor
data16
arpl
inc
push
popa
cmp
push
xor
push
outsb
push
dec
jo
push
jb
add
dec
jp
js
xor
inc
inc
bound
jb
xor
imul
imul
push
jae
cmp
push
xor
fs
pop
jae
push
jae
pop
cmp
jbe
inc
dec
pop
jbe
inc
jb
cmp
ss
imul
jp
arpl
push
jp
dec
dec
insl
xor
xor
push
pop
push
pop
jns
insb
dec
ja
inc
je
push
dec
xor
push
dec
inc
pop
add
add
add
adc
add
and
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
sbb
stos
sbb
add
add
add
add
add
pusha
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
inc
add
add
outsl
add
je
ja
popa
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
jno
xor
aaa
add
pop
add
jb
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
jp
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
xor
dec
add
jae
jbe
push
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
