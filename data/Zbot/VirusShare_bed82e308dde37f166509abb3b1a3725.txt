adc
add
jp
add
add
add
add
test
incl
push
mov
add
push
push
push
call
leave
ret
sbb
jle
testb
jno
add
lea
and
out
inc
pop
adc
dec
pop
mov
jne
push
lea
push
sbb
std
popa
xchg
leave
ret
sbb
sbb
add
add
jl
arpl
enter
neg
movsb
andl
fbstp
push
push
cmp
stc
mov
inc
fstpl
repz
push
adc
outsb
pop
sahf
push
dec
jg
clc
add
xchg
cmp
xchg
push
push
xchg
pop
call
xor
lea
push
and
mov
out
sti
push
push
mov
hlt
jle
in
fucomip
in
push
push
inc
lock
imul
lock
std
ret
addl
dec
aaa
cmp
or
les
in
push
push
push
adc
cmp
pop
in
sti
mov
out
inc
insb
push
push
arpl
add
test
dec
movsb
mov
pop
mov
jae
sub
pop
push
ret
test
sbb
test
add
push
push
push
outsl
ss
es
data16
enter
cmp
jo
aaa
sub
imul
xchg
gs
mov
pop
cmp
or
fmull
stos
ja
sub
push
sub
ja
jge
push
xor
jmp
sbb
sbb
insb
test
adc
cmp
jbe
jle
popa
push
jp
std
jmp
fdivrs
sub
dec
pop
mov
lahf
data16
pop
in
cld
pop
pop
out
and
pusha
and
mov
cld
decl
push
dec
pop
int
mov
outsb
jns
dec
inc
add
lret
inc
dec
out
test
pop
jecxz
push
push
cmp
push
sbb
xor
cld
into
outsb
fistpll
pop
mov
clc
es
add
mov
add
mov
and
pop
add
out
add
or
adc
mov
mov
sbb
inc
add
movsb
notb
mov
add
xchg
ja
add
movl
jo
mov
xor
iret
cmpsb
dec
in
mov
add
add
push
flds
sbb
addr16
or
fists
cmpsl
add
add
adc
sti
xchg
mov
add
or
add
push
ss
xchg
adc
popa
sbb
xchg
add
popf
xor
add
inc
in
fstps
dec
push
jl
pop
inc
sbbb
pop
dec
repnz
add
sub
mov
mov
aam
paddb
mov
outsl
pop
dec
inc
iret
inc
ds
in
out
or
sarb
inc
add
mov
out
mov
insl
clc
add
insb
add
adc
lock
xchg
dec
mov
mov
mov
and
mov
add
or
pop
movsl
xor
out
mul
sahf
in
mov
push
sub
add
int
xchg
xchg
sbb
sub
jecxz
push
fwait
iret
mov
clc
push
pop
inc
xlat
adc
loope
loopew
add
add
xchg
fistpl
repz
and
jno
js
pop
outsb
add
into
dec
lock
out
leave
inc
inc
or
sbb
insl
fsin
out
int
adc
mov
clc
fucom
xor
xor
lcall
aaa
fdivrl
inc
mov
iret
add
shlb
int
adc
push
inc
jne
leave
shlb
sub
inc
xchg
notb
ss
in
jae
or
sbb
pop
aas
jbe
jae
mov
adc
add
iret
insb
push
mov
sub
xchg
rolb
push
jge
ret
testb
mov
dec
sub
add
cmpsb
xchg
out
and
adc
mov
adc
jo
mov
push
inc
ja
cmp
add
imul
or
xchg
mov
aas
shlb
out
sahf
lock
ret
pop
out
xchg
jg
xor
or
and
pusha
pop
lahf
mov
xchg
pop
xchg
add
mov
adc
add
inc
add
bound
dec
imul
dec
jb
mov
je
adc
sbb
sti
in
roll
adc
icebp
sbb
popa
mov
mov
insl
lods
push
cltd
stc
rcrb
adc
xchg
jecxz
in
and
mov
flds
outsl
cmp
shll
ror
jmp
stos
inc
ljmp
adcl
das
and
push
ret
push
fstps
scas
sub
add
lods
pop
loope
pusha
ds
mov
mov
movsb
inc
sbb
add
loope
testb
sbb
sub
lods
ret
add
rolb
jg
push
paddw
mov
pop
mov
fs
js
mov
mov
stos
lods
add
pop
sub
popa
movsb
dec
bound
adc
jmp
pop
jae
repnz
jbe,pt
inc
pop
sar
and
nop
fnsave
or
adcb
ss
pop
and
jnp
test
addr16
ja
add
mov
add
mov
add
xchg
sub
mov
xor
fiadds
orl
xor
icebp
scas
aaa
mov
mov
xor
jecxz
addr16
pop
lahf
mov
hlt
and
enter
fstl
lret
shrb
out
adc
jle
shll
aaa
cmp
mov
mov
divl
add
scas
loope
mov
inc
mov
mov
jb
adc
add
clc
add
jl
aaa
pop
ret
jne
out
fdivp
add
cmp
pop
pop
jmp
test
xchg
call
and
les
in
jb
enter
bnd
int3
test
fbld
sbb
and
mov
cld
lcall
dec
loope
arpl
push
aaa
jl
mov
dec
push
jne
das
add
mov
divl
call
outsl
xor
jg
or
cmpxchg
cmp
mov
fcom
cld
adc
stos
adc
cmp
mov
adc
call
outsl
nop
js
mov
insb
ffreep
loope
sub
push
xor
mov
mov
mov
sub
cmc
gs
add
dec
dec
dec
filds
cmp
hlt
mov
cmp
lret
test
neg
loope
in
add
pushf
fisttpl
insb
adc
sbb
cmp
dec
and
sahf
shufps
add
test
jecxz
dec
rcrb
or
push
and
loope
mov
add
movsl
rclb
scas
or
fs
ss
jge
or
int
pop
mov
insb
cmp
xchg
cmc
adc
mov
inc
xor
push
fdivrs
cmp
lcall
test
loope
pop
sub
out
lock
xor
add
sti
pop
dec
jg
enter
dec
xchg
call
mov
adc
xor
clc
xor
jmp
dec
scas
loope
lret
add
mov
jbe
lcall
fs
jne
sbb
xchg
insl
dec
jp
aas
lahf
cmpsl
aas
inc
push
mov
xchg
mov
rorl
jle
or
or
loope
or
pop
xchg
xor
jnp
mov
jo
ja
mov
jmp
mov
and
xchg
or
sub
adc
mov
shl
pop
mov
pop
imul
shll
dec
cmp
arpl
jae
orl
fs
cmpsb
mov
cmp
pop
ja
dec
cmc
dec
jg
xor
push
mov
inc
leave
sahf
adc
jmp
mov
fcoml
bound
fistpl
lret
add
jo
mov
in
fwait
iret
pop
pop
adc
jne
testb
arpl
rcrb
or
sahf
dec
xchg
jecxz
mov
ficoms
jnp
xor
cmpsl
mov
mov
mov
movsb
cmp
jne
mov
dec
mov
call
das
aam
test
and
insb
xor
and
mov
cmpsb
mov
jno
fimull
inc
pop
push
in
inc
adc
inc
decb
jbe
push
or
sub
mov
jmp
mov
push
add
xchg
add
mov
jne
mov
and
mov
test
fstl
mov
add
xchg
stc
pop
jl
call
pop
mov
popa
mov
xchg
insb
inc
lods
movsb
outsb
xor
lret
dec
xchg
leave
addb
push
xchg
adcb
xchg
in
mov
les
out
push
mull
popa
mov
dec
movsl
pop
mov
in
in
jns
push
add
xchg
pushf
repnz
inc
xchg
lods
add
xchg
hlt
cld
pop
mov
pushf
scas
inc
lret
mov
pop
cli
jmp
push
popa
or
mov
push
cwtl
add
aas
cmp
jl
sub
and
fnstcw
mov
mov
ret
jge
jo
cmpsl
repz
test
int3
loopne
adc
ja
inc
add
sbb
dec
xor
arpl
in
test
pusha
add
mov
data16
pop
xchg
or
mov
and
xchg
pop
mov
adcb
xorl
sub
hlt
xchg
fisttps
in
dec
add
hlt
insb
incl
and
inc
fnsave
test
cmp
pop
xchg
jmp
adc
pop
adc
fildll
push
add
mov
jle
aam
or
mov
xchg
mov
shl
shrl
mov
outsl
ret
jbe
test
or
push
adc
leave
aam
popa
push
roll
inc
lcall
add
push
jl
insl
sbb
xchg
sbb
pop
mov
mov
mov
and
xchg
jbe
mov
mov
addl
or
inc
nop
xchg
jno
push
out
loop
jo
pushf
cld
incb
adc
mov
fstl
loopne
in
sar
aad
jno
and
and
jno
cwtl
ljmp
dec
lret
idivb
jnp
add
data16
pop
ja
adc
fbld
and
fs
aaa
popf
test
push
adc
bound
adc
adc
loop
jmp
adc
mov
or
daa
xchg
std
and
mov
mov
push
scas
xor
arpl
dec
pop
out
cli
add
cld
or
out
sub
lock
adc
add
mov
xor
fiaddl
test
mov
flds
jnp
cmpsb
repz
xchg
mov
adc
out
jbe
mov
push
mov
mov
dec
xor
adc
das
cmp
lods
xchg
lcall
add
ds
inc
dec
and
jecxz
adc
pop
sub
pop
ja
xchg
stc
add
int3
fiadds
addl
adc
lahf
sub
mov
and
daa
jle
push
pusha
ficoms
jno
adc
popf
shrb
mov
mov
mov
inc
daa
add
mov
dec
lock
dec
mov
mov
push
fisubl
lods
insl
loope
dec
adc
cmp
jmp
and
push
daa
test
insb
fisttpll
mov
push
inc
scas
loopne
pop
call
adc
leave
popa
cltd
xchg
sub
outsb
adc
add
inc
jmp
jl
adc
jp
mov
push
dec
sbbb
iret
lea
mov
scas
push
clc
andl
jo
stos
movsl
fldenv
mov
inc
out
and
loope
cmp
pop
and
fnsave
cmp
jp
loopne
cmp
repnz
sub
into
cmpsl
outsl
jmp
cltd
cmp
fstps
sub
sub
into
cmpsl
inc
int
insb
fwait
push
out
mov
sti
test
xor
ss
dec
mov
test
cmp
fcompl
inc
insl
add
fs
leave
xor
std
add
inc
mov
int
cmpsl
and
jbe
in
pop
push
add
xchg
xchg
hlt
lds
sti
push
ficomps
movsl
cmc
add
stc
fstl
sub
js
mov
pop
lods
dec
dec
test
dec
mov
stos
jge
fwait
outsl
ja
pop
jae
out
or
xlat
mov
jns
mov
std
ljmp
pop
xor
jo
jg
mov
aam
jl
loopne
pop
nop
and
pop
cmp
stc
test
fcoms
fwait
xor
cmp
push
add
outsb
shr
sbb
rorb
leave
xlat
ds
push
inc
call
test
mov
je
inc
das
pop
push
adc
inc
lea
xor
paddusb
fcompl
jno
loope
or
scas
test
mov
add
ret
sub
out
lods
xor
mov
pop
lods
fs
scas
sbb
mov
lret
push
je
testl
xchg
xchg
leave
call
fcompl
mov
sub
mov
sbb
aaa
sub
jbe
dec
jo
mov
or
je
cmp
pop
add
ja
popa
mov
xchg
daa
sbb
loope
jecxz
jae
inc
jmp
mov
xor
in
inc
dec
jl
pop
sbbb
cmp
into
fsubrs
jge
xchg
ret
scas
adc
ret
js
dec
xorl
mov
cmp
test
in
mov
xlat
jae
cmp
fcomps
mov
scas
jl
sub
lods
imul
pop
and
inc
loopne
test
xor
sbb
xor
daa
mov
movsb
popf
test
dec
test
imul
inc
add
mov
fmull
xorl
jae
and
negb
sti
aas
mov
ret
adc
jl
xchg
push
or
daa
adc
data16
cwtl
fdivs
fwait
lret
rorl
mov
loopne
cmp
or
addb
pop
jge
addl
push
std
xchg
nopl
pop
dec
push
mov
mov
dec
dec
sar
es
adc
cmp
add
bound
mov
pop
in
out
xor
pop
data16
cmp
push
and
leave
push
xchg
scas
ds
loopne
icebp
cmp
cltd
sub
iret
push
sbbb
sbb
sub
adc
aam
js
jg
imul
insl
jl
cmp
push
imul
int3
jae
sbb
fidivl
in
mov
fnstenv
es
xor
cmp
pushf
aam
jb
test
frstor
ret
inc
pop
mov
in
mov
shlb
movsb
or
inc
dec
nop
stc
loope
cwtl
push
out
fisttpl
or
mov
fxch
sub
xlat
int
in
test
push
sbb
popl
mov
in
mov
mov
jae
push
jle
mov
jecxz
loop
sahf
cmp
adcl
dec
cmp
arpl
sub
add
mov
xor
loopne
jnp
repz
or
pop
pop
clc
cmc
in
jns
mov
inc
aad
jbe
sbb
jg
pop
jecxz
dec
cmpsl
pop
fdivr
push
or
stos
jns
adc
inc
xchg
adc
dec
push
sub
adc
out
xor
loopne
adc
stos
jnp
push
sub
cs
mov
pusha
cmp
xor
lds
xchg
and
cltd
add
mov
stc
in
es
inc
je
jge
and
aas
ja
insb
or
adc
sbb
pop
fnstsw
dec
icebp
inc
ss
out
sub
rcrl
dec
xchg
xchg
outsb
cltd
push
lret
repnz
xchg
xchg
add
mov
mov
mov
fdivrl
hlt
push
flds
aaa
jns
shl
or
pop
push
mov
rcll
cmp
fstpl
sbb
jl
xchg
mov
lods
mov
and
inc
adc
jae
testb
insb
jecxz
in
jb
outsl
xor
and
xorb
jmp
fldt
or
add
jl
test
inc
and
mov
clc
jge
ds
adc
jl
adc
daa
mov
jp
cltd
mov
aaa
push
sub
push
xchg
inc
sahf
pop
xchg
inc
pop
mov
inc
sbb
aad
aam
dec
push
ss
mul
pop
ljmp
push
cmc
jnp
pop
sbb
mov
inc
roll
mov
push
jl
pop
arpl
fistps
and
loope
daa
int
cmc
out
mov
jbe
pushf
adc
out
iret
jle
inc
mov
ljmp
out
ficomps
ds
mov
xor
jecxz
testl
jmp
repz
mov
sar
push
jae
call
xchg
or
mov
mov
cltd
push
jo
popf
pop
std
insb
xor
in
push
dec
xor
sbb
out
call
jne
in
call
ds
jecxz
mov
sti
lds
test
and
xchg
testb
dec
mov
sub
jle
pop
xchg
pop
mov
push
loopne,pt
and
loope
cli
sbb
pop
xchg
dec
jno
mov
dec
sub
icebp
mov
and
ror
sbb
sbb
or
cli
adc
movhps
pop
lahf
test
andb
cmpsl
sbb
lcall
scas
mov
or
inc
movsb
add
mov
sahf
mov
inc
adc
sub
fmulp
push
dec
push
pop
lea
stos
cmc
insb
mov
inc
test
xorl
inc
sub
iret
addr16
adc
iret
mov
push
mov
adc
cltd
push
nop
and
shl
or
pop
dec
sub
aad
das
sub
add
or
xchg
xor
cwtl
pop
inc
jp
insl
sbb
mov
out
xor
mov
pop
insl
pop
clc
dec
add
je
inc
dec
rorb
idivl
bound
mov
adc
aad
add
or
adcl
xor
in
ss
arpl
xor
sbb
push
add
popf
mov
mov
icebp
push
iret
pop
or
jnp
mov
imul
adc
pop
lahf
js
dec
and
push
jecxz
ds
fcomp
push
pushf
xchg
andl
sti
jg
scas
bound
sarl
jl
pop
arpl
stos
mov
xchg
xchg
pop
es
nop
push
push
cmp
icebp
jmp
jae
dec
inc
sbb
sub
jl
dec
stos
pop
push
push
adc
or
and
mov
in
scas
xchg
and
push
xchg
lea
mov
insl
pop
push
jo
mov
ud2
push
out
cwtl
adc
outsl
add
inc
push
cs
or
insl
pop
outsb
add
add
pop
fiadds
mov
mov
add
add
aaa
aaa
xlat
push
lret
jl
cmp
adc
ds
cmp
loopne
daa
mov
outsb
or
sub
fmuls
xchg
clc
add
frstor
mov
mov
inc
pop
jno
vmread
mov
mov
jl
test
add
dec
xchg
mov
push
and
imul
xchg
jnp
repnz
repz
cmc
rolb
hlt
movl
cmc
cmp
loopne
jae
movsb
mov
fildl
ret
and
shl
mov
dec
icebp
leave
leave
popl
es
dec
cmpsb
mov
adc
out
or
sub
test
push
pop
xchg
mov
sub
xor
scas
jbe
jo
sbb
into
cmp
mov
mov
stos
insl
jnp
gs
adc
jae
xchg
lea
movsb
ljmp
incb
inc
pop
sub
sbb
pop
in
cmpb
mov
xchg
inc
mov
lcall
push
test
cmp
xor
sbb
and
sub
sub
aas
cmp
ds
mov
out
and
out
sbb
mov
sub
and
out
xchg
testl
test
dec
jle
jno
mov
cmp
inc
xor
add
sbb
aam
or
add
mov
bound
pushf
movsb
ds
pop
popa
jecxz
add
fwait
das
inc
in
or
rcll
push
jne
popa
out
and
cmp
lock
add
push
xorl
aad
es
into
ljmp
movsl
mov
adc
inc
or
stos
push
cmp
stc
sbb
in
jle
add
scas
insb
int
nop
mov
pop
lcall
in
lds
scas
sbb
lret
je
outsl
aaa
test
fbld
mov
movsl
cmpsl
mov
jle
mov
js
sar
inc
push
lret
pop
cmpsl
add
pusha
enter
std
fwait
test
inc
cld
addr16
insb
pop
insl
les
sbb
cmp
fidivs
mov
popa
sub
aam
aas
insl
cwtl
scas
icebp
xchg
push
fwait
sbb
jp
or
cmpsl
lock
inc
mov
add
pop
adc
shrl
imul
sbb
push
test
inc
jo
adc
rorb
pcmpeqb
mov
push
xor
dec
xchg
inc
addl
jbe
sub
sbb
idiv
cmp
xchg
test
mov
daa
and
mov
inc
je
pop
cmp
sahf
bound
pop
jnp
sti
ror
data16
xchg
sub
in
sarb
movl
mov
pop
insb
dec
dec
add
jp
or
inc
andb
push
das
orl
jae
push
push
mov
pop
pusha
jge
mov
or
clc
pop
fucomp
inc
adc
stc
cmp
pop
fdivrs
in
test
cmp
jecxz
pop
adc
xlat
jbe
mov
cmp
leave
mov
incb
lds
xor
sbb
dec
mov
out
lock
xorl
lock
fdivs
ret
dec
fnsave
push
cwtl
dec
int
sbb
adc
mov
jbe
inc
adc
mov
sahf
fisubrl
adc
aas
rolb
inc
call
lods
roll
fcoml
jecxz
aad
sbb
call
jg
test
sub
inc
mov
mov
and
rcrl
sub
lock
loope
dec
add
sub
and
inc
add
cld
ljmp
jbe
xorl
adc
sbb
mov
add
cmp
js
inc
mov
das
pop
mov
mov
push
dec
jge
xchg
jl
inc
jp
jne
sub
pop
adc
sub
xlat
out
mov
hlt
jmp
cmp
andl
push
or
pushf
add
add
add
movsb
mov
jnp
mov
movb
inc
loopne
add
mov
add
aad
inc
jnp
lods
movsl
add
in
arpl
sub
xlat
pop
sub
add
std
jp
lods
push
pop
jae
jns
add
pop
pop
icebp
and
pop
cmc
sahf
clc
dec
sub
loope
cmp
adc
ss
lea
outsl
mov
icebp
je
icebp
pop
xor
dec
test
out
stc
xchg
shlb
jbe
mov
jp
mov
jne
push
dec
mov
arpl
orb
pop
movsb
pop
ret
repnz
insb
fisubrl
mov
loop
addl
push
jo
xchg
cwtl
add
inc
sbb
adc
push
ds
and
jecxz
pop
push
fistps
pop
incl
push
xchg
cwtl
shll
das
adc
test
mov
imul
movsb
cmp
inc
ret
xor
cmp
popf
or
cmpl
mov
cld
adc
mov
aas
andb
pop
imul
add
mov
xlat
inc
jl
adc
pushf
inc
pop
aas
into
and
push
cmpsb
jmp
sti
and
in
aaa
cmp
xor
or
push
cmpl
fsubs
add
xchg
outsb
inc
icebp
xor
in
ja
push
nop
cmpsl
fisubrs
hlt
shll
fsts
sub
push
jp
loope
add
jl
sub
cmp
sarb
cmpsb
xor
adc
jo
mov
xor
pop
pop
cmp
cld
mov
add
xor
pop
pop
in
cs
rclb
mov
pop
mov
jmp
popa
ret
ja
cmc
pop
mov
xor
dec
jne
pusha
mov
pop
in
inc
out
pop
xchg
mov
cmpsl
test
xchg
iret
test
aaa
ror
pop
js
cs
out
ret
imul
mov
lods
pusha
mov
xchg
mov
int3
adcl
jg
ret
jl
cmpsl
push
lahf
xchg
adc
and
loop
and
mul
aas
cmp
push
movl
ja
adc
add
neg
xor
push
stc
jae
cmp
lock
orb
mov
xlat
inc
aas
addl
lods
addr16
mov
xchg
add
ror
xlat
test
cmp
ficoml
fcomps
fxch
test
inc
imul
mov
add
out
jno
pusha
xchg
cwtl
mov
add
mov
xchg
fs
icebp
jnp
addr16
cmp
popw
sbb
inc
jg
outsb
movb
pop
xchg
sub
xor
push
rorl
cmp
rcrl
outsl
push
test
pop
or
icebp
and
dec
cmp
ds
mov
cmp
popa
cmp
pusha
jno
pop
cmpsb
cs
pop
cmp
pop
pop
rclb
mov
repnz
shlb
mov
cli
pop
imul
and
jbe
icebp
decl
stc
lods
or
adc
aad
and
repnz
or
cmp
enter
inc
loope
jle
mov
pop
cmp
mov
rorl
and
outsb
dec
lea
jae
mov
cmp
jmp
scas
xchg
out
test
out
dec
in
jae
fxch
loope
sub
popa
mov
mov
repz
jnp
and
mov
fcmove
imul
mov
sub
sub
xchg
xchg
adc
imul
pop
xchg
cli
cmp
orb
pop
sbb
mov
jns
cmove
lods
cmpsb
mov
loop
xor
xor
push
add
adc
loop
xlat
inc
sar
or
divl
or
adc
xchg
fistl
insb
cltd
push
push
sub
push
popf
clc
sub
stos
jl
jns
ds
xor
and
mov
pop
popf
insb
cmp
ds
inc
aam
into
test
mov
lock
sbb
cmp
sub
jp
rorb
je
adc
je
into
push
out
das
aaa
lea
adc
inc
popf
sahf
mov
inc
enter
jae
imul
mov
and
mov
sbb
and
and
dec
xchg
andl
pmulhw
das
mov
xorl
inc
scas
cmc
add
scas
mov
add
sub
mov
ret
lods
sub
mov
loopne
sbb
pop
iret
or
push
mov
bound
sub
mov
sbb
dec
pop
jl
add
jno
dec
mov
add
stos
fwait
rorb
pop
mov
ss
jp
adc
adc
or
shl
nop
loop
adc
sub
and
repnz
or
icebp
jb
inc
cmpsl
loop
stos
pusha
jno
cmc
xchg
cli
jge
shrl
rorl
hlt
push
jo
xor
int3
push
cmp
push
das
cmp
mov
xchg
and
cmpsl
lret
xchg
repz
pop
fistpl
test
sbb
shrb
out
dec
push
add
mov
fisubs
sbb
sbb
pop
test
scas
loop
sbb
dec
shrl
sbb
mov
aaa
push
jo
inc
adc
add
jmp
sub
nop
addb
sub
mov
cld
shlb
mov
jae
mov
cmpsb
adc
les
das
jmp
inc
mov
push
cs
add
jl
lods
and
xor
jb
jbe
mov
bound
add
mov
mov
aad
mov
dec
inc
push
pop
mov
sbb
sti
mov
fs
mov
data16
pop
jl
sub
cmp
sti
xor
cmpsb
loop
out
dec
cli
stos
jb
xor
dec
cwtl
clc
pop
es
out
mov
push
pcmpgtd
and
cmc
jg
subb
insl
add
mov
loope
out
lods
clc
into
push
clc
nop
push
scas
int
fistpl
lock
sti
pop
das
fld1
mov
icebp
insl
and
mov
xor
and
ret
mull
push
test
mov
outsb
and
shll
loope
xlat
adc
sbb
dec
dec
loop
loope
xor
cld
push
lock
in
idivb
frstor
inc
mov
into
and
add
mov
jg
test
js
pop
test
out
xchg
pop
pusha
jmp
jb
sbb
cmpl
mov
iret
ljmp
ds
lods
cmp
call
jge
popf
in
fcoms
dec
inc
xor
xor
pop
ret
mov
seto
dec
js
int
and
mov
in
shrb
call
insl
adc
insb
and
roll
pop
test
inc
jmp
loope
push
addr16
cmovnp
or
or
push
lock
xchg
or
aam
fs
cli
subb
mov
out
in
test
xchg
gs
cmpsb
ss
lea
inc
jae
aad
insb
movsl
mov
pop
mov
lahf
mov
sbb
mov
pop
mov
rcrl
aad
add
pop
inc
xorb
push
mov
test
xor
jo
notb
mov
jecxz
and
js
mov
inc
push
jp
inc
dec
call
cmp
frstor
inc
pop
fcompl
cli
out
lret
ret
pop
sbb
add
ds
pusha
cmpb
and
inc
sub
lods
std
dec
or
mov
push
jg,pt
imul
popa
ret
pop
divps
test
into
xchg
push
xor
adc
adc
fbld
loope
lret
aas
and
xchg
mov
cli
inc
loopne
es
and
arpl
add
sbb
push
bound
shlb
push
loopnew
ret
pop
sbb
xlat
sub
sbb
shlb
stc
xchg
xchg
add
cmpsb
fsubrl
nop
out
inc
test
les
sbb
add
jl
lahf
push
fildll
sub
mov
fstpt
xchg
ljmp
cmpsl
fldt
dec
ja
adcl
push
movsl
roll
mov
pop
test
mov
repnz
sbb
outsl
outsb
daa
inc
addr16
lds
xchg
adc
out
rcr
lock
insb
or
shrl
mov
gs
addr16
pushf
cmp
push
scas
push
xor
mov
fcompl
mov
adc
pop
jp
movntps
jl
ret
jns
cmc
lret
and
jnp
mov
sbb
in
jle
into
cmc
pop
gs
aad
cmp
inc
or
fsts
fmull
adc
mov
push
jg
test
mov
dec
sbb
repnz
mov
ljmp
cmp
ja
into
mov
aad
nop
dec
cltd
insb
add
mov
sub
dec
lock
cmc
mov
aam
jbe
ret
jns
add
push
ljmp
inc
outsl
cwtl
pop
ss
pop
jp
and
aaa
cmpsb
daa
mov
xchg
repnz
insl
jne
sahf
mov
cmp
mov
out
xchg
dec
jle
fildl
sub
mov
inc
sbbb
mov
adc
inc
push
push
fiadds
and
push
and
push
pusha
mov
or
int
mov
xchg
dec
inc
sbb
rclb
test
dec
imul
xor
jle
sti
mov
and
in
imul
jp
test
adc
cwtl
mov
sub
in
insl
imul
mov
mov
jl
push
icebp
cld
mov
push
push
loop
mov
jo
or
pop
pop
xor
shrl
shrb
js
aad
test
aas
shl
fcompl
pop
mov
pop
scas
lcall
ret
jbe
ss
outsb
add
scas
jo
fdivl
lcall
mov
movsl
inc
push
je
or
sub
jae
sti
sbb
cli
arpl
dec
es
inc
lea
call
int3
lds
fdivs
lock
std
add
ja
adc
pusha
ret
lret
jle
fcomi
inc
inc
std
clc
sbb
push
push
mov
jnp
pop
ret
cmpsl
or
add
fsubr
xchg
mov
pop
sub
jbe
mov
mov
adc
mov
pop
lahf
adc
jno
pop
sub
mov
loopne
shll
xchg
dec
mov
fdivrs
or
push
mov
lea
fidivrs
mov
sub
scas
pop
lds
iret
ret
out
xchg
pop
xchg
in
pop
icebp
in
repnz
bswap
xlat
in
in
mov
xchg
fucomip
inc
test
loope
adc
pop
and
inc
lahf
out
lret
cmp
lea
das
rcl
push
jmp
or
cld
fdivr
sbb
sbbb
imul
fstpt
test
adc
jae
setno
call
xchg
outsb
in
xchg
and
fwait
xor
fldenv
jecxz
xor
mov
sbb
loope
sbb
mov
adc
mov
mov
and
sub
push
adc
push
inc
negl
mov
aam
sbb
xchg
bound
inc
pop
fistl
sub
jbe
test
icebp
popf
inc
aad
nop
in
lods
cmp
cld
xor
push
pushf
mov
aam
loope
push
in
andl
cmc
test
push
gs
mov
or
es
mov
outsb
and
xchg
mov
or
stc
xor
dec
pusha
inc
pop
or
mov
xor
lods
xchg
sub
mov
std
pusha
dec
cmp
xchg
sbb
jl
jnp
mov
stos
pop
inc
pcmpeqw
pop
jno
ds
cs
push
sbb
xor
push
mov
aam
popa
adc
fcoml
das
icebp
lea
add
jo
rorl
movsl
xor
push
push
pop
dec
mov
fs
dec
push
mov
rcrb
or
fildll
das
dec
and
and
push
arpl
and
insb
cmp
test
push
mov
mov
add
adc
or
cmpl
hlt
sbb
imul
pushf
mov
pop
cmpsl
xor
ja
test
imul
mov
int3
ret
xchg
in
xchg
mov
cmp
sub
adc
or
iret
popa
add
cmp
mov
ret
cmp
aad
fcmovnb
sbb
or
inc
popa
jno
out
jae
pop
ljmp
xchg
rcr
fwait
adc
xchg
test
dec
or
sbb
push
xchg
jno
mov
jle
xchg
mov
rclb
outsl
mov
test
imul
out
mov
or
fimuls
nop
inc
pop
pop
pop
xor
testl
test
enter
mov
adc
xchg
jmp
push
mov
test
inc
inc
outsb
pop
call
fiadds
push
ret
sub
stos
cmp
xor
push
mov
or
sub
pop
in
cld
lret
divb
mov
sbb
or
divb
mov
lahf
xchg
jge
mov
leave
inc
pusha
pop
and
cmp
out
dec
test
push
pop
icebp
cmp
shlb
pop
inc
ljmp
mov
push
push
bnd
insl
mov
hlt
into
test
add
test
add
mov
lods
arpl
add
dec
push
dec
jne
jae
or
sbb
mov
push
lods
mov
sbb
imull
jecxz
int3
into
insl
cmp
xchg
popf
fisubs
adc
push
in
mov
cmp
jmp
dec
cmc
shll
sub
xor
ret
jg
in
insb
fsub
and
jge
mov
gs
mov
sbb
jb
cmpl
ja
xor
cmp
fbld
andb
mov
out
sub
cmp
les
mov
test
mov
push
jb,pt
out
lock
fisubrl
jne
fimuls
pop
adc
inc
adc
sbbl
cmp
cmc
push
out
ss
jle
mov
loop
mov
or
clc
ss
cmp
xor
and
popf
insb
pop
test
int
mov
sbb
cmpsl
adc
lds
mov
ja
adc
pop
push
cmp
lock
mov
je
data16
inc
fninit
xor
jmp
roll
ret
in
mov
push
arpl
cmp
pop
xchg
repnz
ds
fadds
aam
add
mov
and
movsl
fcomps
popa
popf
aam
push
mov
faddl
pop
xor
push
repnz
sub
js
sub
sub
lea
fyl2x
pop
sbb
add
dec
aam
push
lods
filds
jle
lret
int
popf
aad
outsl
out
lahf
push
mov
cmp
idivl
ret
incb
in
lahf
jno
sahf
shr
pop
inc
xor
add
jo
mov
insb
xor
addr16
sbb
inc
jne
ror
testb
fstl
cld
mov
mov
lea
mov
gs
jne
pop
fimuls
out
mov
mov
jns
inc
add
cs
jge
popl
or
xchg
mov
int3
fiadds
je
add
push
cmp
dec
cwtl
dec
cld
mov
lret
mov
mov
pusha
sarb
ret
push
lret
outsb
sub
mov
into
aad
int
pop
mov
push
dec
push
add
or
stc
idiv
xchg
push
call
xor
repnz
xchg
ds
mov
jne
pusha
or
cwtl
lods
shlb
pop
aam
mov
xor
dec
hlt
loope
fmull
add
pop
imulb
arpl
pusha
inc
cs
cmc
add
fs
rcll
adc
cmp
inc
fucomip
fsubp
jnp
mov
push
push
subl
cmp
scas
shrb
jnp
test
stos
popf
fisubl
cmpsl
xchg
cmp
pop
cmc
ja
scas
addr16
mov
cmpsb
lahf
test
push
cmc
or
add
sbb
jg
sub
rorl
adcb
ljmp
lods
addl
adc
or
push
adc
xchg
addr16
fcmovb
xchg
scas
sub
mov
popa
shrb
xlat
fwait
or
push
sub
pop
ljmp
ror
imul
out
fisubrs
push
cmp
aam
pusha
loope
fadds
cld
mov
and
pop
js
pop
push
stos
xchg
adc
loopne
pop
outsb
enter
aaa
les
pop
jge
into
shrl
xchg
inc
xor
cwtl
std
jl,pn
or
movsl
xchg
dec
ss
mov
sbb
test
mov
std
popa
jno
pandn
push
push
adc
xchg
add
sbb
rorb
in
adc
lds
mov
or
int
or
and
icebp
add
lret
imul
push
scas
push
lahf
dec
adc
and
inc
pop
jg
rcl
mov
mov
adc
hlt
sti
pop
jmp
cmp
sbb
call
fbld
fsubs
mov
subb
icebp
jo
cli
pop
xlat
xchg
mov
popa
fidivrl
cld
data16
mov
xor
mov
call
inc
cld
xor
or
adc
jg
imul
inc
sbb
mov
ret
mov
stos
sahf
shrl
jae
pop
out
push
inc
push
das
dec
mov
les
mov
sbb
and
push
adc
adc
push
sbb
les
mov
sbb
ja
jb
dec
push
jl
sub
mov
mov
add
xchg
out
mov
xchg
icebp
ret
clc
pop
jo
jo
pushf
js
jle
dec
jmp
cmp
jno
push
adc
jge
aad
mov
mov
xlat
xor
out
pop
xor
mov
orl
out
fbstp
lret
pop
imul
lock
cmp
sbb
leave
popa
loope
and
mov
add
lods
outsb
outsl
and
push
mov
pop
lock
mov
bswap
movsb
push
sub
dec
mov
dec
repz
lret
xchg
mov
fmull
in
cmp
ret
inc
stc
daa
ljmp
test
mov
mov
decl
popa
push
subb
or
mov
iret
mov
inc
xchg
pop
andb
jmp
ja
cmp
jl
push
push
iret
arpl
sbb
call
test
add
cmovnp
pop
inc
push
pop
aaa
popa
leave
arpl
mov
popa
clc
aam
loopne
mov
xchg
lcall
sbb
jb
sbb
rorb
fdivr
and
mov
push
je
lds
dec
ss
jne
sbb
push
sub
mov
stos
paddsb
ljmp
adc
pop
sbbl
imul
sti
sub
mov
in
mov
adc
lcall
mov
clc
lock
sub
in
daa
cmp
jo
loop
rclb
xchg
mov
mov
cmpsb
sub
mov
ja
das
fisttps
add
mov
adc
nop
mov
std
mov
inc
negb
mov
fucomip
mov
or
out
jns
loope
xchg
cs
push
rol
cmp
jp
pop
add
jo
mov
in
in
lods
pop
dec
xor
lods
aas
sub
les
adc
outsl
dec
and
movsb
lods
aaa
xor
pavgw
jnp
pop
or
pop
xor
pop
push
dec
ljmp
mov
out
and
and
xchg
xor
xchg
mov
ja
pop
sti
aad
cmp
pop
popf
outsb
add
sbb
mov
shll
push
fidivrl
test
sbb
adc
aaa
aam
into
sub
loope
loope
sub
cltd
std
mov
fldt
movsl
mov
scas
roll
mov
push
movsl
mov
inc
mov
fisttpl
and
xor
in
pop
push
sub
loopne
fisttpll
and
leave
clc
insb
les
mov
test
mov
in
sbb
pop
rclb
in
dec
and
mov
mov
adc
scas
or
pop
dec
aas
loopne
ret
xchg
dec
mov
mov
add
jp
cmp
dec
arpl
mov
enter
sbb
dec
outsb
pop
pop
pushf
inc
adc
mov
sti
add
lds
sbb
and
pop
pop
subb
xchg
adc
cltd
fdivrs
mov
test
dec
frstor
je
xchg
ss
aam
je
cmovg
cmc
inc
push
xchg
pop
push
in
pop
xchg
push
push
outsb
daa
mov
xchg
jecxz
mov
lods
or
add
inc
jb
cs
aas
inc
popa
push
mov
pop
push
dec
sbb
stos
outsb
movsl
push
bnd
pop
push
cld
divb
lea
pop
fcomps
mov
inc
dec
cmp
sar
mov
cmp
lea
loop
icebp
pop
lea
xchg
ljmp
imul
call
ficompl
and
fwait
arpl
cmp
jmp
mov
lds
jmp
or
dec
int3
mov
es
jmp
adc
push
sub
test
loopne
push
leave
dec
mov
pop
movb
gs
xchg
xor
jo
add
pop
cmp
xchg
mov
dec
or
sbb
sbb
mov
mov
mov
cmp
bndldx
jo
fwait
stc
mov
mov
iret
sub
and
xchg
add
xor
mov
sub
push
jge,pn
imul
fucom
pusha
xchg
adc
or
pop
jbe
pop
aam
dec
enter
ret
addb
cli
nop
push
add
rclb
cltd
inc
loopne
xchg
and
sahf
jns
aad
sahf
arpl
push
les
pop
add
insl
or
in
nop
outsl
sub
push
push
cli
mov
addr16
and
fadd
movl
loopne
ljmp
cmp
in
mov
lar
das
lahf
mov
ret
cmp
mov
adc
add
or
pop
in
nop
mov
push
add
inc
out
iret
cmc
or
daa
cli
dec
fildl
sub
aad
adc
pop
outsb
jl
shrl
jae
dec
adc
insl
shll
dec
clc
mov
dec
mov
nop
mov
dec
sbb
mov
add
or
insl
stc
add
adc
push
outsb
sub
jo
inc
pop
inc
in
movsb
incb
outsl
ds
cld
mov
cmp
or
lds
mov
pop
lret
cmc
popa
or
sbb
xor
fs
add
xchg
mov
stc
mov
imul
ret
push
adc
mov
and
cltd
xor
or
ficoms
sti
add
jp
fmul
mov
inc
sub
orl
in
fnsave
lret
push
idivb
push
lds
and
stos
mov
movsb
je
sub
inc
in
js
adc
lret
mov
ja
mov
push
jbe
aad
idivl
push
popa
push
leave
enter
stos
xchg
fldl
sbb
push
ja
jb
push
movsl
leave
or
inc
push
aaa
inc
out
ss
hlt
push
inc
pop
int3
push
idivl
pop
cmp
dec
xchg
inc
daa
add
jbe
or
jp
xor
cmp
xor
aas
pop
rolb
ss
and
pop
dec
iret
aad
cmp
xor
cld
pusha
pop
in
cmp
scas
jle
lahf
in
fidivrs
loopne
sub
gs
rol
mov
jns
icebp
dec
mov
test
or
ss
xchg
inc
rcl
inc
imul
push
mov
adc
mov
mov
inc
mov
dec
cmpsb
test
sbb
popa
idiv
movsl
test
sub
gs
aas
and
mov
int3
outsb
rol
shrl
sbb
xor
lods
fildl
push
jecxz
push
add
insl
les
lret
mov
in
dec
mov
sub
andl
insl
test
pop
icebp
dec
xor
ljmp
cmpsl
cli
inc
push
movsl
ss
in
dec
pop
or
gs
popa
hlt
flds
push
cmp
cmp
dec
ret
sub
dec
sti
iret
sbb
adc
or
pop
loop
test
das
push
xchg
neg
les
push
push
daa
push
jl
xlat
pop
pop
leave
ret
inc
adc
adc
mov
xor
pop
mov
xchg
cmpsb
ffreep
addl
push
dec
adc
add
mov
sbb
dec
outsb
inc
jbe
pop
mov
pop
inc
or
out
jnp
fs
das
adc
loop
testb
fdiv
neg
pushl
ficompl
fucomi
incl
ret
neg
pushl
dec
pop
push
not
jnp
testl
push
inc
push
lcall
mov
add
inc
andl
sbb
sbb
pop
xchg
inc
fadds
jne
mov
pop
sahf
insl
mov
aam
jno
push
hlt
call
sub
cwtl
and
pop
push
push
js
cmp
and
ret
fucom
inc
lahf
push
gs
jmp
mov
dec
jp
or
neg
popa
sub
sub
sub
fsubr
jbe
sub
cmpsl
gs
push
arpl
xor
inc
fbstp
ja
clc
incl
shl
xlat
mov
adc
dec
xor
clc
push
inc
in
das
add
rorb
sbb
adc
xor
ja
insb
fxch
mov
inc
cmp
gs
js
jo
jbe
test
movdqu
out
outsl
pop
push
fistps
stc
jge
xchg
bound
into
mov
inc
jae
pop
popa
dec
cld
or
pop
addl
aaa
sti
in
imul
test
inc
xor
js
cmp
cld
inc
shrb
sub
in
fsts
gs
nop
push
push
inc
xor
mov
pop
xchg
sbb
arpl
xchg
push
push
jmp
iret
fs
imull
arpl
dec
xchg
mov
sub
fs
push
add
jns
bound
nop
lea
das
insb
pop
ss
dec
shll
inc
push
test
aas
loope
rcrl
mov
data16
push
aaa
add
sahf
mov
filds
dec
mov
mov
hlt
bound
jl
jl
in
popa
mov
les
sbb
iret
cmp
mov
pop
or
idivb
dec
inc
lcall
sti
xor
and
hlt
imul
xchg
mov
push
ss
push
add
mov
cli
cmp
dec
testl
inc
mov
pop
jl
stc
mov
push
inc
push
orl
pushf
pop
das
cld
outsb
cmp
cwtl
adc
je
lret
ss
sbb
dec
call
mov
xchg
jo
mov
sbb
push
shl
int
fisttps
cmp
mov
inc
inc
pop
add
rcr
xor
lock
hlt
push
xchg
xchg
add
outsb
inc
cmp
mov
test
ret
jbe
xor
ljmp
std
push
push
les
lret
clc
imul
out
test
lahf
cld
orl
js
js
push
jmp
mov
push
or
push
bound
outsb
repz
sahf
fsub
bound
pop
gs
rorl
dec
or
pop
ret
sub
dec
push
push
fxch
xchg
add
arpl
clc
lea
add
insb
outsl
and
add
pop
cmp
shr
in
sub
lods
loope
push
mov
xchg
sti
in
pop
push
push
imul
pop
jg
not
inc
add
and
imul
push
dec
push
mov
adc
sbb
insl
cmp
arpl
nop
gs
mov
clc
xchg
push
or
sbb
lods
aaa
jns
jne
push
int3
cmp
sbb
xor
sbb
cmp
in
sub
test
jg
out
popa
movsb
adc
fdivl
insb
out
mov
sbb
aaa
cwtl
imul
sbb
mov
and
mov
loopne
push
imul
cld
mov
rcrb
pop
shr
popa
pop
push
iret
mov
enter
ret
mov
cmp
dec
push
mov
xchg
addr16
inc
imul
mov
loopne
and
aaa
push
cmpb
shll
mov
dec
push
sbb
cwtl
pop
push
add
sbb
sbb
andl
add
jo
xor
repz
loop
sbb
lret
bound
je
xor
sub
gs
or
and
pop
fisttpl
arpl
adcl
ds
in
cmp
jl
shll
push
cwtl
div
push
pop
jecxz
adcl
ret
aam
push
dec
xor
sub
inc
lcall
adc
rcll
push
lods
xchg
dec
fs
add
fucomip
loopne
fcmovu
adc
sbb
push
lock
lods
rcr
iret
fcom
mov
andb
and
cmp
sub
inc
lock
push
sahf
data16
cmp
or
imul
or
sbb
je
cld
sub
adc
rol
mov
addr16
mov
cmc
push
in
adc
mov
fcoms
pop
dec
push
popf
aaa
sahf
mov
dec
add
sbb
movsb
mov
xlat
andl
jb
sub
cmp
popf
in
bound
and
inc
pop
fimull
clc
stos
push
and
xchg
into
in
add
xchg
pop
sub
out
outsl
lock
mov
or
sbbl
loopne
sbb
dec
xor
or
sti
leave
fisubrs
mov
popf
les
imul
int3
push
cmc
and
clc
gs
cmp
mov
push
fistpll
lea
ficompl
xor
fstpt
jbe
ja
push
popw
lods
testb
mov
xor
jne
in
out
rclb
sbb
add
mov
ss
rcrb
and
push
bound
divps
imul
popa
cmp
adc
pop
pusha
push
arpl
pop
jmp
xchg
push
inc
mov
push
push
scas
or
push
insl
loope
xor
js
aam
clc
pop
jno
popf
push
pop
sbb
sub
je
inc
jbe
pop
inc
sbb
mov
dec
sub
cld
movsb
and
jns
stc
std
lret
xchg
mov
sbb
cmpsb
push
inc
add
rcrb
repnz
or
mov
jb
scas
inc
pop
fcompl
push
pop
jbe
pushl
fcmovbe
test
dec
popa
rcrb
pop
call
jmp
enter
xchg
mov
sub
mov
andb
out
sbb
sub
jmp
cmp
cmp
dec
inc
popf
shl
loopne
or
sub
or
out
js
ja
add
push
aaa
dec
push
and
xor
inc
out
mov
inc
xor
fstpl
sub
mov
push
bound
add
sub
shlb
pop
addr16
test
loope
fildll
push
jno
dec
inc
push
push
pusha
les
dec
xorl
hlt
mov
push
pop
in
pop
or
pop
lods
cmp
inc
sbb
movsb
repz
aam
push
mov
xchg
bound
mov
shrb
push
inc
cli
push
push
dec
pop
cmp
sahf
out
inc
cld
push
push
and
rcr
add
test
outsl
add
jns
je
or
push
mov
andb
popa
lret
lods
movsl
pop
cmpsb
pop
sub
xchg
pop
mov
jle
push
jmp
mov
jae
pop
sbb
ja
cwtl
add
fcomps
jbe
orb
mov
testb
addr16
push
out
dec
push
push
push
inc
sbb
je
mov
push
repnz
in
add
xlat
pop
mov
jge
xlat
xor
jbe
jo
decl
ss
sub
and
xchg
cmp
in
jg
fisubl
xchg
push
push
lret
jns
dec
lea
xchg
psubb
mov
adcb
loopne
xor
into
in
sbb
jge
mov
js
sub
scas
adcl
outsl
aaa
and
and
mov
roll
sbb
imul
lret
cmp
imul
shl
inc
les
inc
jo
sbb
pop
sub
xor
inc
jbe
dec
xchg
pop
push
mov
xchg
sbb
pop
pop
fdivs
dec
jnp
or
scas
mov
sub
and
in
pop
jae
dec
jle
pushf
ret
mov
decb
pop
mov
or
cli
fildll
xchg
xlat
mov
lret
dec
ret
fadd
xor
pfadd
clc
pushf
inc
ss
mov
mov
cmp
and
rorl
mov
push
je
cmp
out
pop
inc
xor
cmp
mov
jns
faddl
adc
addl
or
bound
xor
xchg
pop
or
pop
test
push
aam
dec
sbb
sbb
fstpl
in
clc
push
inc
fucomi
mov
fisttps
lock
loope
or
dec
and
repz
and
sar
xchg
cs
cmp
repnz
sub
adc
push
inc
inc
mov
adc
mov
adc
dec
out
pop
fdivr
int
and
into
dec
pop
sub
inc
adc
insb
or
or
dec
sub
jp
sub
inc
pop
mov
dec
inc
adc
sar
sub
mov
push
add
dec
insl
or
xchg
inc
push
out
lea
add
push
clc
jne
aam
cmpsb
cwtl
mov
into
cld
insl
and
pop
push
dec
cld
data16
adc
in
insl
mov
bound
lcall
fs
push
cmp
outsb
push
jne
fdivr
add
sbb
test
outsl
push
mov
mov
add
or
cmpsb
push
cmp
cmp
inc
mov
xor
ret
rcrl
or
or
add
das
cld
xchg
push
pop
lock
add
pop
inc
jnp
dec
sub
push
inc
das
shr
cld
jecxz
inc
add
jmp
inc
clc
inc
data16
insl
call
and
loope
cmc
xchg
ret
ficomps
js
outsl
out
push
fs
les
mov
ds
shrb
sbb
sub
scas
cmc
adc
xor
add
out
jg
cwtl
loop
sbb
jae
inc
xchg
jl
push
inc
jbe
fwait
xor
shlb
in
cli
sub
dec
arpl
inc
data16
or
fnstenv
fdivrs
fs
push
aad
lea
inc
enter
lock
mov
inc
insl
aaa
mov
or
adc
sbb
cmp
mov
aaa
push
into
mov
lds
push
lea
outsb
dec
inc
dec
inc
inc
and
fmuls
fildl
iret
sbb
dec
pop
pop
outsb
test
cmpsb
sbb
roll
push
arpl
add
decb
sbb
pop
adc
mov
add
jb
pop
add
dec
aam
xor
pushf
divl
add
add
dec
pop
aad
mov
punpckhbw
loopne
push
jae
push
add
lea
add
xor
ret
hlt
push
js
dec
aam
cli
inc
loopne
cmp
sbb
leave
mov
inc
add
mov
test
sbb
mov
adc
nop
push
add
add
orl
and
adc
jmp
dec
jb
jb
popa
inc
add
inc
inc
dec
push
add
push
inc
lcall
outsb
xor
add
push
push
dec
inc
dec
dec
xor
hlt
xchg
in
in
mov
xor
add
add
pop
imul
movsl
aam
jge
enter
sbb
xchg
mov
dec
arpl
in
out
mov
mov
jecxz
xor
lock
add
pop
xor
adc
int3
es
push
push
in
into
mov
sbb
push
imul
mov
add
andb
loopne
popa
scas
aad
std
jg
sub
add
fmul
jb
cmp
scas
call
mov
out
sbb
add
mov
mov
inc
outsl
ja
inc
jo
imul
xor
adc
mov
cmc
pushf
test
in
lret
outsl
jl
and
push
dec
call
mov
mov
push
cmp
testl
js
loope
add
or
add
and
add
xlat
mov
inc
dec
cld
pop
add
popf
cltd
fildll
jg
add
and
or
arpl
add
out
and
mov
daa
test
iret
in
add
xor
mov
adc
lcall
loopne
lret
sbb
and
add
fildll
pop
sub
ja
cmp
push
scas
and
pusha
push
sbb
loope
sti
mov
push
jg
sbb
adcb
push
mov
mov
inc
inc
sbb
mov
push
inc
lock
add
inc
add
inc
stc
in
fmul
mov
gs
clc
test
leave
mov
rep
mov
add
lods
mov
and
mov
enter
jle
push
fnsave
mov
enter
data16
inc
sbb
lret
or
loope
add
pop
insb
bound
pushw
aam
mov
icebp
addr16
pop
add
lret
inc
pop
inc
mov
lods
xchg
add
add
mov
sub
sbb
movsl
ret
push
mov
inc
sbb
jae
sub
mov
movsl
dec
sbb
adc
adc
scas
mov
mov
add
add
add
mov
mov
inc
dec
dec
ret
fisttpll
adc
jmp
lock
add
jae
adc
mov
in
mov
xchg
adc
fwait
icebp
xor
lcall
test
add
xchg
loope
pop
sti
fwait
ja
jle
or
inc
mov
insl
in
imul
aaa
leave
mov
mov
mov
fcom
jo
and
sbb
add
cli
dec
add
clc
pop
popa
xor
out
xor
mov
mov
lret
jbe
call
add
out
lcall
sub
push
dec
call
arpl
in
js
jmp
lahf
xor
pusha
shrl
ret
xor
mov
test
pop
add
pop
sti
mov
scas
out
das
inc
add
or
mov
outsb
push
and
call
jg
jl
add
addl
in
sbb
cmp
push
pop
out
jne
call
in
push
jo
jl
pop
outsl
aas
add
fs
fistpll
add
jo
xchg
inc
push
lods
pop
jnp
fildl
lahf
mov
push
mov
cmp
mov
loop
jne
decl
jl
loopne
inc
adc
jg
sub
cmp
inc
shrl
jns
and
nop
in
fldt
jge
jne
mov
outsb
pushf
clc
ja
adc
arpl
enter
aam
mov
ret
arpl
jle
enter
push
pop
xor
mov
push
roll
mov
andl
add
xchg
enter
leave
jge
jg
mov
cmpsb
cmp
rclb
cmp
dec
mov
daa
xchg
push
xchg
bound
fdivrl
push
push
pop
mov
lret
dec
lcall
add
mov
xchg
test
or
xchg
lretw
mov
lods
jl
add
lds
cs
ret
outsb
and
jnp
fstpt
ljmp
int3
adc
mov
aaa
mov
push
pop
or
jo
arpl
iret
mov
sbb
ret
add
movsl
cmp
lods
xchg
loope
dec
mov
stos
jbe
fbld
ret
and
sbb
shlb
cld
jo
fs
scas
push
mov
jmp
into
lahf
fistpll
xor
shll
ret
mov
jge
sbb
icebp
stc
xor
mov
sub
dec
xchg
lcall
test
adc
fwait
mov
or
xchg
mov
adc
nop
pop
add
mov
orl
call
shl
push
movb
cld
mov
ja
shll
sbb
mov
lcall
xchg
pop
xrelease
imul
outsb
dec
jmp
lret
enter
loop
fidivrs
jmp
sbb
inc
out
sahf
les
add
mov
jmp
pop
sbb
pop
cld
into
dec
cmp
dec
xor
fdivs
jg
shl
mov
mov
mov
push
scas
xchg
lea
pop
decb
popa
rolb
push
retw
mov
lods
nop
fsts
push
mov
and
dec
xchg
fdiv
cmp
and
fldt
mov
mov
sbb
gs
dec
mov
jmp
pop
sub
cmp
pop
cmp
jge
mov
mov
scas
cwtl
dec
mov
std
cmp
into
sub
adc
dec
btr
xchg
adc
mov
adc
arpl
loope
daa
es
xor
fwait
xchg
mov
jmp
data16
gs
test
xor
inc
das
aam
sub
mov
push
test
pop
jecxz
scas
push
aam
push
bound
addr16
mov
sbb
out
lahf
inc
hlt
lea
pop
push
inc
xchg
inc
test
xor
xchg
adc
xor
outsb
stc
aas
loope
sahf
dec
cld
or
xchg
mov
and
dec
jae
pop
addr16
sbb
push
adc
movsb
and
pop
ja
insb
jmp
in
xor
in
pop
xchg
and
and
push
dec
js
mov
rorb
shr
dec
fistps
inc
lahf
out
mov
loopne
int3
scas
and
popf
stos
das
mov
xlat
jecxz
push
or
fwait
push
cmp
lret
fwait
das
pop
cli
lock
andl
xchg
and
es
out
mov
and
cmpsb
push
mov
push
jp
adc
adc
push
and
shll
add
sub
decl
hlt
dec
pop
mov
call
fisttpl
mov
sbb
bndldx
and
aam
mov
and
pop
push
cmp
fucomp
fwait
call
cmp
mov
adc
popa
inc
xor
adc
and
inc
xlat
mov
pop
cmp
cli
adc
int3
std
jne
pusha
lods
add
ja
ror
ds
lods
and
ret
repnz
inc
adc
cmp
xchg
inc
jecxz
mov
mov
popa
sbb
add
orb
popf
pop
fdivl
out
inc
movsl
jno
cld
cwtl
add
cs
adc
insb
xor
rcrb
pop
dec
mov
ret
xor
adc
mov
pop
jge
inc
lret
inc
xor
xor
mov
xor
jmp
mov
sbbb
psrlq
xor
loop
jmp
or
or
dec
xor
pop
or
icebp
jmp
aam
notl
es
mov
mov
xchg
in
dec
push
jno
in
or
xor
sbb
jbe
mov
lahf
mov
lret
inc
dec
imul
or
dec
aam
mov
cld
xchg
sbb
daa
js
je
sti
xor
xor
leave
ja
ret
xchg
mov
mov
push
inc
pop
xchg
iret
out
mov
mov
sub
lea
imull
pop
jmp
stos
pusha
mov
xor
jecxz
outsl
mov
push
add
mov
aad
sub
and
idivb
push
rorl
adc
gs
mov
movsl
cs
jp
fsub
push
cmc
sub
les
cltd
movb
xor
push
xor
ljmp
dec
adc
lea
in
in
sbb
xchg
cmp
pop
fisubl
cmp
or
xchg
dec
imul
or
stos
scas
sub
pushf
xchg
dec
incb
jle
push
repnz
jg
fsubrs
or
test
xor
jmp
lods
and
fstpl
jecxz
in
dec
sub
out
lods
test
xor
cmp
sub
neg
lret
mov
adc
or
cld
push
icebp
sbb
cmpsb
lods
hlt
pop
gs
add
into
lods
fcmovbe
lret
xchg
add
lods
dec
xchg
push
addr16
loopne
push
inc
test
das
xor
aaa
or
call
add
push
jmp
fcoml
rolb
mov
push
shl
rclb
lcall
lock
hlt
jge
pusha
dec
je
aas
es
fsubs
push
mov
mov
mov
sbb
jge
ret
pop
lcall
pop
js
inc
ret
js
aad
ds
pop
xchg
mov
je
mov
outsb
inc
rcrl
adc
sbb
outsl
mov
jnp
and
test
adc
sbb
add
movsb
daa
fs
cltd
sbb
fisubs
into
test
add
or
push
aaa
insl
mov
mov
sbb
movsl
in
insb
int
stos
insl
xchg
add
ret
mov
das
inc
mov
or
into
adc
shlb
sbb
insl
adc
fiadds
mov
sbb
js
mov
pop
aad
test
pusha
jp
ret
mov
adc
dec
jmp
pushf
in
jbe
nop
stc
mov
mov
push
or
xchg
jno
out
test
imul
xor
xchg
stos
add
lea
js
or
test
inc
ja
fwait
or
loop
jb
and
jecxz
cmpsl
cmp
movsb
icebp
cmc
push
mov
scas
cs
push
aam
shll
push
cmp
add
subl
fucomi
sbb
outsb
nop
roll
fwait
jle
inc
add
lods
sbb
test
inc
pop
inc
inc
call
incb
movsb
mov
push
out
pop
add
pop
xor
stos
jmp
jle
push
mov
es
aaa
mov
mov
and
add
fcmovb
mov
sub
adc
xchg
or
dec
aad
cmpsl
jb
jo
jo
shlb
rclb
inc
add
inc
mov
popf
dec
xchg
std
daa
jl
sub
cltd
xchg
cmp
adc
int3
inc
movl
mov
cmp
enter
sbb
rcl
int
repz
ljmp
inc
pop
dec
js
sti
pop
add
into
sub
jmp
mov
pop
pop
pushl
xor
bnd
flds
data16
push
pop
int3
mov
stc
ret
xchg
loop
movsb
adc
mov
rcll
insb
stos
dec
sub
add
scas
push
outsb
scas
or
lods
insl
xor
imul
pop
pop
pop
popa
and
or
cmp
into
cmp
mov
in
mov
mov
fstpt
or
cmp
adc
xchg
jnp
sbb
pop
out
cmp
mov
mov
fimuls
mov
mov
js
fstpl
mov
add
push
push
dec
adc
nop
or
loop
loopne
sti
jae
pop
and
push
xlat
ret
xor
shl
push
push
sub
adc
lods
jecxz
cmp
or
cmp
ficomps
stos
mov
xor
xchg
add
int
dec
lods
mov
divl
das
sbb
ds
daa
imul
dec
or
mov
scas
dec
test
cmpsb
lahf
cmp
inc
mov
adc
test
jne
jb
mov
xor
jl
movl
mov
aaa
cmp
div
popf
push
add
or
repz
xchg
inc
ficoms
stos
mov
sbb
push
jmp
fs
inc
xor
sub
call
into
jmp
out
sub
adc
lret
sbb
loope
jecxz
dec
xlat
es
dec
arpl
dec
mov
mov
mov
inc
lret
mov
adc
movsl
call
add
mov
cmc
clc
out
cmp
jecxz
scas
test
pop
test
cs
mov
xchg
lret
out
dec
ljmp
out
shlb
cmpsl
xchg
cmp
sub
mov
push
push
ret
add
ret
out
jb
ja
add
pop
js
cld
mov
dec
ffreep
in
call
sbb
pop
rcrb
ret
mov
sbb
jg
jmp
shl
sub
pop
ret
jmp
jl
in
in
pop
push
adc
loope
call
sbb
add
test
es
fs
mov
loope
ret
shlb
xor
sbb
mov
sbb
cltd
dec
push
data16
insl
mov
daa
xchg
jmp
loope
mov
xchg
iret
adc
ret
icebp
roll
sbb
repnz
lock
fdivrl
and
inc
add
flds
mov
scas
sbb
adc
mov
pop
inc
push
mov
insb
sbb
pop
dec
push
add
pop
pop
push
or
cwtl
lods
add
jl
icebp
les
icebp
xor
mov
outsl
jecxz
add
ret
movsl
ret
jmp
mov
stos
inc
sti
xor
aam
mov
subl
jecxz
inc
dec
stc
mov
aas
loopne
dec
and
sbb
xorl
jae
or
and
out
add
test
sub
mov
dec
fnsave
arpl
xchg
dec
adc
mov
or
cmc
in
dec
mov
dec
test
jg
andl
jp
cmp
enter
or
and
adc
mov
das
xchg
pop
in
nop
pop
pusha
mov
mov
push
mov
addr16
xchg
sahf
fcmovnu
pop
adc
ror
lock
rol
and
xor
dec
rorl
and
addr16
faddl
or
mov
aas
push
daa
sub
js
ss
push
cld
jb
mov
xor
mov
adc
jo
and
push
jle
push
je
pop
in
push
lods
add
sbb
cmp
outsb
inc
jb
inc
jns
xor
sbb
push
pop
hlt
mov
jle
jmp
sti
adc
popa
dec
and
loopne
jp
mov
test
or
push
push
flds
movsb
cmpsb
pop
ficomps
int
mov
gs
inc
aaa
icebp
imul
mov
leave
rcrl
adc
out
lret
jp
adc
in
add
xchg
jge
or
call
movsb
mov
jl
fistps
out
das
mov
mov
divl
add
push
clc
sbb
ljmp
loop
jge
int
cmc
sbb
jbe
shll
cmp
sbb
cli
xorb
dec
ret
jns
xor
out
ss
in
mov
or
add
and
cli
and
sub
add
jmp
xor
jb
jbe
mov
jl
jae
iret
push
dec
aam
dec
sub
jnp
mov
test
pop
or
mov
pop
stos
sbb
xorl
mov
push
bound
cmp
xor
mov
xchg
mov
sahf
cmpl
adc
jno
inc
flds
mov
jo
popa
leave
jb
push
lahf
pop
divl
cwtl
cld
inc
fldl2t
lods
shl
mov
insb
vpsllq
jecxz
test
sbb
cmp
insl
push
cmp
popf
shl
inc
cmp
dec
jno
repnz
pop
add
nop
push
or
mov
pop
jecxz
aam
fdivs
sbb
mov
cld
jne
jle
pop
ret
lahf
adc
adc
sub
cld
mov
push
stc
mov
nop
push
mov
dec
out
cmc
inc
sbb
test
and
sub
lods
hlt
fists
jae
add
lret
js
push
xor
mov
out
jb
mov
cmp
fidivrs
and
or
shrl
xbegin
cmp
xchg
mov
aaa
jno
xchg
cmc
pop
daa
pop
sbbl
pusha
jmp
ljmp
roll
jb
pop
shlb
inc
push
jl
enter
jmp
add
cltd
outsb
mov
das
cmpsb
xchg
pushf
pop
sbb
add
pop
aad
shr
jle
mov
jne
dec
jg
pop
js
shll
mov
pop
mov
scas
ds
push
xor
jge
dec
sbb
inc
cwtl
push
sahf
test
jmp
jmp
js
aam
or
adc
push
ffreep
nop
adc
cmp
hlt
jae
mov
adc
adc
sbb
mov
outsb
notb
bound
mov
lea
int
xorb
or
push
hlt
subl
pop
test
sbb
and
jnp
jle
inc
xor
add
sbb
pop
xor
adc
iret
cmpsl
psraw
cmpsb
or
pop
lahf
fadd
shr
jp
mov
push
jp
jle
aad
aam
cmp
and
sti
lret
aaa
xor
fiaddl
daa
mov
cmp
hlt
sub
xchg
shll
mov
add
lcall
mov
add
jg
clc
gs
popf
inc
loope
mov
cmp
mov
fcos
inc
shlb
cli
add
and
fstpl
sahf
mov
and
test
add
push
xlat
daa
xchg
nop
push
add
push
jl
and
mov
scas
xchg
mov
sarb
out
clc
adc
mov
adc
jns
out
mov
jmp
mul
jge
and
hlt
gs
test
clc
dec
sbb
or
loope
fucomp
jp
out
dec
xchg
pop
movsl
cld
or
jo
ljmp
aaa
js
adc
push
iret
adc
or
lret
mov
sbb
push
add
cld
jecxz
bound
mov
loop
gs
jne
push
cmp
je
mov
cwtl
jb
movsl
sbb
add
xchg
dec
mov
rcll
xchg
loopne
sahf
int3
loop
lcall
sbb
es
pusha
insb
test
ret
pop
fwait
inc
dec
je
sub
rorl
fbstp
dec
sub
xor
stos
and
or
or
mov
cmpsb
divb
or
add
dec
xor
in
cli
or
rolb
pop
push
dec
sub
loope
mov
popf
insb
clc
loop
outsb
pop
jg
and
leave
cwtl
inc
push
jb
adc
popl
mov
int
clc
int3
mov
xor
jp
testl
mov
test
add
or
xor
incl
fs
mov
sub
inc
hlt
push
xchg
cmp
and
ficompl
rorb
das
pop
adc
adc
or
rcrb
pop
mov
jmp
scas
jmp
test
xor
and
sbb
pop
insb
fs
std
clc
sarl
inc
in
mov
lret
cmp
dec
outsb
add
push
test
xchg
pop
sbb
push
fstps
in
and
aad
js
mov
mov
mov
outsl
push
xchg
mov
cmp
sub
mov
push
push
xchg
mov
xor
loope
jae
mov
mov
incl
fstp
nop
addl
icebp
loope
pop
sbb
fnsave
sbb
inc
fsubs
cmp
sbb
mov
jno
push
movsl
test
shl
mov
sbb
stc
and
addb
imul
cmp
mov
inc
or
sarb
fistps
je
sbb
loop
mov
cmp
cli
sub
loopne
pop
dec
mov
lods
jae
lock
clc
in
and
pop
leave
or
into
jb
adc
movsl
mov
mov
sub
cmc
shlb
loopne
push
mov
jb
and
push
or
jg
frstor
add
hlt
mov
pushw
mov
sbbb
lods
jmp
mov
das
les
stos
lret
inc
jle
ds
ja
bound
lahf
stc
jle
not
jns
cli
stos
ja
xor
or
les
jecxz
mov
clc
jmp
mov
lods
lcall
sbb
daa
and
sub
xor
cmp
flds
and
inc
add
inc
stos
xchg
dec
enter
or
sbb
call
jbe
icebp
imulb
mov
or
pop
inc
add
and
cs
imul
cli
jnp
jl
fcmovnbe
ficompl
pop
aas
sbb
jge,pn
std
in
daa
pop
lock
jecxz
notb
call
aam
or
adc
fwait
and
ja
dec
inc
ret
pusha
xchg
mov
daa
stc
dec
inc
test
jge
mov
cmp
pop
int3
push
rorl
pusha
jbe
mov
jecxz
loopne
jl
xchg
scas
movsl
cmpsb
pop
or
scas
aam
xchg
adc
add
frstor
insb
sub
mov
dec
jge
out
pause
outsl
ret
sbb
mov
sub
push
ds
call
movsb
cmovle
je
cmpsl
jmp
pop
fadds
push
dec
test
cmp
xor
in
movsb
andb
imul
jge
int3
or
xchg
pop
cwtl
stos
rcrb
leave
mov
das
push
sub
dec
loope
mov
and
std
dec
jnp
inc
subb
cmp
add
call
inc
addr16
loop
fildll
dec
mov
mov
jae
pusha
mov
push
das
daa
test
xor
shrl
lods
and
jecxz
movsl
add
mov
cmp
movsb
or
xchg
pusha
add
xor
jp
and
es
xchg
push
jl
icebp
mov
cmc
inc
cld
int3
sub
fs
fcoml
or
cmpsb
inc
mov
mov
scas
pop
loopne
add
repnz
push
test
dec
fmul
push
js
cli
xlat
jb
and
subl
cmp
int
leave
inc
cmp
ljmp
sub
arpl
outsb
clc
or
add
sub
testb
mov
std
stc
push
fildl
xchg
mov
and
sub
sbb
scas
pop
xchg
add
dec
lret
sub
fwait
clc
out
push
fwait
cmpsb
dec
in
sub
lock
or
jp
xchg
mov
jae
mov
shll
cmp
les
rolb
lcall
lods
int
pop
scas
push
dec
jecxz
mov
arpl
cld
jns
lret
dec
push
loopne
arpl
jb
mov
or
ds
addl
pop
mov
jp
add
call
mov
mov
dec
fcmovu
inc
mov
shll
adc
push
sbb
inc
cltd
mov
sub
mov
dec
jl
lock
mov
lock
inc
and
lock
pop
mov
cmp
inc
popa
cwtl
cmp
sbb
out
setno
out
dec
pop
mov
aad
mov
ror
cwtl
sbbb
je
pop
sbb
push
and
xor
lock
mov
pop
rcrl
fs
xor
xlat
mov
add
lods
insl
pop
or
jp
adc
fs
mov
xor
xchg
and
sbb
pop
jns
push
fyl2x
mov
jne
in
inc
out
push
jecxz,pn
or
push
adc
inc
or
cmp
gs
stc
out
in
cli
icebp
pop
add
push
jbe
push
scas
or
push
push
mov
sbb
addl
sbb
or
lcall
popf
jle
outsl
iret
in
scas
lods
adc
loopne
push
mov
pop
les
pushf
mov
xacquire
es
adc
jns
orl
outsb
pop
fists
insb
or
bound
cmp
notb
push
fidivl
in
push
stc
push
cltd
loopne
xor
call
scas
jl
ljmp
daa
inc
ss
add
stos
cwtl
loop
mov
lods
mov
fcom
mov
out
ret
jb
push
lods
mov
add
mov
cmc
mov
pop
pusha
movsb
adc
out
xorl
dec
xor
add
sar
call
mov
loope
cwtl
and
cmp
mov
cwtl
sub
ss
mov
mov
sti
lret
dec
scas
cmpsl
xlat
sub
popa
lret
addr16
ss
xchg
inc
andl
jo
movsl
cwtl
cmp
fistl
outsl
mov
mov
xchg
movsl
sub
outsb
insl
mov
jno
mov
je
or
or
loop
mov
lcall
insb
stos
addr16
inc
faddl
mov
bound
inc
daa
mov
or
and
push
jno
sti
aaa
or
xchg
sti
jne
cmp
loop
jmp
les
cmp
jecxz
jne
imul
outsb
fcompl
lock
aas
dec
stc
adc
movsb
movsb
imul
fidivrl
inc
xchg
mov
in
lar
lret
mov
xor
testb
nop
sarb
cmp
outsb
ja
mov
pop
es
pop
cmp
mov
jne
cmp
arpl
imul
mov
sbb
dec
jge
ret
arpl
ljmp
adc
pop
repz
pop
fdivl
popf
xchg
inc
inc
sbb
clc
enter
in
jecxz
push
jmp
rolb
mov
imul
adc
cmpsb
jmp
fs
adc
push
pop
fwait
test
shlb
push
add
test
xchg
xor
imul
mov
cs
add
test
icebp
movsb
jmp
xor
mov
mov
and
jp
bound
not
xor
aaa
adc
jb
fucom
out
pop
mov
arpl
popa
popa
iret
mov
std
jne
ficoml
mov
adc
jb
lea
sbb
or
or
push
loopne
sbb
add
loope
icebp
andb
rorb
clc
fcom
or
dec
aam
cmpsl
and
add
mov
shll
sub
lods
cwtl
xor
cli
mov
add
dec
push
mov
dec
sub
mov
xchg
dec
inc
xor
jne
push
dec
push
fcoms
das
testb
cmp
std
mov
mov
dec
int
or
ja
popf
lea
out
insl
jbe,pn
inc
dec
jle,pn
rolb
hlt
insb
es
icebp
mov
arpl
stc
mov
enter
jge
push
or
sbb
adc
call
inc
ljmp
adc
sbb
or
sub
orb
das
in
xchg
out
adc
xchg
ljmp
jle
mov
mov
leave
int3
not
mov
aam
movsl
pop
arpl
xchg
pop
call
cmp
les
in
mov
daa
sbb
push
std
imul
les
adc
jb
jnp
jp
and
stos
popa
ret
jnp
cmp
movsb
test
and
push
or
aam
test
xor
fimuls
push
inc
adc
push
rcll
ljmp
dec
leave
sbb
inc
sub
and
jae
xor
cmp
mov
pop
add
mov
adc
hlt
add
jl
lock
sub
sub
jecxz
mov
jno
xor
outsl
ljmp
out
adc
aaa
ret
xor
clc
mov
loop
jmp
mov
das
js
cs
xchg
jp
push
mov
idivl
hlt
cmpb
inc
add
add
add
lea
xor
inc
lea
lahf
push
jmp
andb
mov
mov
mov
ds
cltd
xor
pop
pop
clc
xchg
movsl
jl
mov
mov
pop
mov
fildl
shrb
inc
icebp
mov
out
cld
ds
jnp
outsb
pop
xor
adc
fiadds
sub
adc
addr16
outsb
stos
mov
inc
fsub
inc
call
ret
mov
nop
pop
cmp
js
sbb
loop
mov
sub
out
xor
mov
dec
or
mov
icebp
add
jl
aas
in
lea
outsb
loope
cs
ret
fwait
sti
outsb
xchg
and
xchg
arpl
push
mov
cmpsb
pop
ret
hlt
inc
pop
pop
xor
xlat
or
lods
xchg
mov
mov
inc
or
sbb
dec
and
dec
and
outsl
sub
mov
sbb
xchg
or
jno
ret
mov
or
jae
ljmp
test
mov
enter
pop
mov
call
jecxz
xor
pushf
mov
outsl
mov
mov
cmpsb
push
movsl
rcr
movsb
mov
das
ret
fidivrl
call
sub
mov
aam
stos
or
rclb
sub
pop
std
lret
out
cltd
push
jle
orb
dec
mov
test
int3
stc
sarb
les
movsb
ret
mov
ds
in
cwtl
dec
cld
sbb
stos
and
es
inc
and
adc
fsub
or
push
dec
xor
mov
shrl
push
inc
lea
adc
inc
std
inc
push
jae
stc
sub
pop
jb
arpl
mov
in
mov
mov
js
les
shrb
stos
cmp
shlb
fidivs
lock
mov
hlt
bound
xchg
stos
dec
shrl
mov
ret
add
hlt
cmp
mov
ret
ror
or
xchg
mov
in
mov
inc
add
mov
scas
cmpsb
pop
aaa
dec
push
mov
loop
stos
xchg
dec
int
inc
mov
idivb
popa
stos
test
sub
test
mov
sub
cmpl
push
cmp
adc
mov
sbb
add
ret
sbb
and
pop
push
push
dec
ja
in
sbb
mov
pop
jp
inc
mov
dec
fldenv
add
mov
lods
loope
sbb
pop
test
scas
mov
sbb
mov
cmp
cmovae
lret
enter
push
and
int
fdivp
js
je
push
inc
mov
add
dec
scas
in
mov
ja
call
imull
mov
pop
mov
test
rcl
and
sbb
lock
stc
mov
xchg
mov
pop
pop
mov
and
fidivrl
outsl
popa
xor
jecxz
cmp
sbb
and
pop
jns
fimull
cltd
orb
jg
jne
dec
cmpsl
outsb
inc
dec
cmp
loope
insl
fs
sahf
fsubl
lahf
popf
out
pop
shrb
fisubrl
mov
pop
add
fistps
pushf
xchg
repnz
rsm
sbb
jge
cld
jp
mov
dec
xchg
cmp
popf
int
mov
scas
jns
sbb
ljmp
in
add
out
sarb
inc
pushf
lea
nop
hlt
gs
mov
pop
fnstenv
pusha
fsubp
jno
fs
sub
xchg
jge
scas
pop
xor
sub
imul
push
pop
cmpsl
jo
jne
xor
movsb
cmpsl
jbe
outsb
mov
and
lock
cltd
mov
movsb
test
pop
in
cmp
sarb
mov
and
push
mov
imul
mulb
ljmp
push
mov
sbb
dec
fsubrs
add
fmuls
pop
mov
data16
lock
inc
addr16
les
clc
mov
test
fwait
inc
cs
mov
insb
sub
jge
adc
fildl
mov
mov
movsb
mov
pop
fsubrs
ret
xor
adc
xor
push
pop
sbb
cmpsb
push
sub
stos
sbbl
pop
out
hlt
stc
movsl
pop
js
popa
fstpl
cmc
mov
dec
arpl
pop
and
jg
shrb
pop
daa
or
ja
sbb
testb
addr16
js
rcrl
lret
mov
sbb
inc
insl
iret
xchg
or
addr16
dec
cmp
loopne
mov
sub
inc
inc
and
mov
xor
mov
stos
fnstenv
or
or
movsl
js
jb
arpl
or
or
add
or
pop
clc
pop
outsb
jns
mov
lods
jno
sbb
stos
adc
and
inc
dec
mov
fwait
xor
icebp
shrb
jl
inc
sub
dec
sub
mull
in
mull
in
stc
xchg
lret
sarb
sub
mov
jne
pop
xlat
jp
push
lahf
out
inc
jns
fdivr
push
in
and
xor
mov
xchg
subl
ljmp
cmp
mov
lods
mov
test
ljmp
ja
test
inc
pusha
sbb
mov
mov
dec
dec
cwtl
jg
cmp
or
mov
ljmp
or
pop
aas
rorb
out
outsl
pop
push
mov
adcl
add
daa
jmp
mov
sbb
pop
pop
loopne
shll
add
lods
movb
cmp
or
lcall
or
mul
cmpsl
cmp
sti
fsubl
pusha
fwait
sub
aaa
les
cmpsl
ret
jg
sub
mov
test
push
mov
scas
sub
push
add
push
adc
add
pop
adc
out
ss
rcl
inc
inc
dec
aad
or
dec
enter
lret
mov
xchg
mov
test
test
and
loope
lea
sbb
jmp
and
jbe
loopne
icebp
mov
inc
fisttps
dec
nop
add
adc
sub
fsubs
popa
leave
mov
or
pop
fcmovne
sbb
std
sbb
aas
xor
add
je
rcl
mov
insl
or
mov
clc
dec
popf
and
xlat
or
dec
inc
int3
cmp
mov
mov
shlb
inc
inc
daa
xchg
jp
xchg
and
mov
mov
and
je
sarl
mov
daa
shr
push
push
ds
cmpsl
sub
nop
adc
pop
xchg
adc
pop
push
jnp
add
test
cmpsb
xor
mov
test
push
or
cwtl
outsl
jge
lds
and
in
xor
lods
jge
mov
jge
imul
dec
je
xchg
pop
and
add
xchg
fstl
or
lret
int3
adc
cmp
lods
mov
stc
push
shrb
ficoml
jno
pop
outsl
shrb
sbb
daa
jnp
jnp
clc
fsts
dec
ret
movsb
cmp
push
push
dec
es
push
mov
jle
sbbb
jmp
jns
mov
dec
lods
rolb
sbb
sub
and
inc
and
popl
adc
add
lahf
or
outsl
jg
sbb
push
jl
push
push
dec
rcrl
insb
dec
lahf
lods
cli
jne
sub
stos
xchg
push
dec
mov
incb
sub
outsl
mov
jle
addb
sbb
insb
movsb
in
subl
mov
std
mov
push
jmp
push
pop
sub
jp
pop
mov
test
or
inc
std
fnstsw
push
in
pop
rorl
mov
push
bound
repz
mov
or
out
popf
ret
lock
ja,pn
push
rcr
movsl
add
test
lret
push
psadbw
mull
adc
int
jae
rolb
lock
mov
jge
xchg
rclb
loope
ds
pop
jbe
mov
jns
lret
sub
loopne
nop
out
jno
mov
mov
mov
call
pop
or
fnstenv
out
test
sbb
hlt
jb
push
lret
pushf
xchg
pop
xor
or
dec
aas
es
xlat
push
pop
bound
jl
lea
ljmp
jo
inc
loope
dec
ret
mov
xor
jnp
test
push
rcr
enter
insl
imulb
add
jmp
and
ret
test
fistl
cld
jmp
loopne
inc
fnstsw
mov
xor
lahf
js
ds
rorl
or
lods
xorl
or
sub
cmp
fmull
sub
sub
and
loop
jp
xchg
and
push
adc
mov
jecxz
imul
cmp
in
loop
sbb
aad
mov
les
inc
jno
jecxz
dec
int
lods
sub
out
mov
je
jg
arpl
out
mov
or
inc
test
aam
aam
inc
test
cli
mov
call
punpckldq
xchg
inc
jae
adc
pusha
jnp
int
sub
and
fistpl
sbbl
call
mov
xor
pop
fisttps
cmpsl
fs
cmpsb
out
repnz
add
fdivl
xchg
inc
sahf
jmp
inc
cmp
gs
pop
test
inc
xchg
lahf
mov
sbb
lea
aas
xor
xchg
das
syscall
stos
cmpsb
or
mov
add
add
cmp
push
and
sahf
inc
mov
test
push
jecxz
sub
rcr
cld
testl
js
push
outsl
pop
push
jb
cld
sbb
or
inc
out
sub
scas
cld
xor
sbbb
mov
mov
inc
add
ret
jne
pusha
lock
xrelease
arpl
inc
test
dec
jb
rcr
inc
insb
pop
adc
je
sub
lret
outsb
or
lods
pop
rcrb
popf
push
xor
cli
in
inc
in
jb
jb
inc
mov
pusha
dec
or
lcall
loopne
sub
push
mov
sub
mov
loope
mov
sbb
mov
xchg
jle
mov
es
cs
je
pop
cld
aaa
jne
pop
mov
ljmp
xchg
into
aam
add
gs
xchg
call
push
pop
nop
dec
ljmp
jne
ja
test
fmul
jb
jo
cmp
testl
cs
out
rcrl
hlt
fadds
daa
lahf
mov
fisttpl
mov
movsl
aas
xor
outsl
sbb
lahf
pusha
icebp
xor
in
mov
das
xchg
call
and
lods
fdivl
xchg
andl
push
xchg
pop
loop
ds
push
and
cmp
das
xchg
scas
add
rclb
and
aas
mov
loope
test
inc
pop
scas
std
negb
cmpsb
add
mov
aas
cld
lods
cmp
mov
push
test
adc
mov
filds
dec
jmp
lock
fmull
fbld
lret
lea
stos
jo
inc
loope
xlat
xor
fld1
leave
leave
sbbl
mov
sbb
iret
aam
xchg
xor
adc
mov
int3
jns
insl
pop
je
push
lea
mov
movsl
xlat
stos
lods
sub
test
and
sbb
dec
cmp
insl
loopne
hlt
xorb
in
sub
sbb
pop
push
es
les
jge
xor
pop
pop
fsubrs
les
sbb
lret
andb
mov
test
outsb
rcl
insb
sbb
bound
pop
clc
pop
outsl
pop
movl
roll
add
adc
scas
mov
cmp
insb
jbe
ja
add
add
popa
in
add
xlat
imulb
outsb
lcall
js
mov
les
inc
and
adc
and
xchg
and
adc
dec
arpl
inc
hlt
add
xchg
pop
inc
lahf
cmp
fidivrl
pop
loope
mov
push
outsb
mov
inc
adc
xchg
mov
in
neg
sbb
cs
inc
adc
lock
jbe
rolb
test
sub
pusha
sti
decl
mov
sbb
cmpsl
enter
xchg
scas
lock
xor
movnti
fistpll
mov
push
pusha
insl
sbb
mov
movsl
mov
mov
jmp
pop
mov
inc
scas
cld
adc
cli
les
popa
or
sbb
int
add
dec
roll
inc
mov
xchg
push
setns
or
daa
mov
xor
jnp
sbb
iret
pop
insl
cli
pop
jg
and
lods
ret
pop
sub
jg
cmp
rclb
lret
ja
cwtl
sbb
inc
xchg
and
cs
xchg
sar
push
mov
pushf
and
mov
jl
jl
or
mov
dec
movl
jbe
inc
inc
data16
jp
test
pop
test
or
xchg
sti
std
loopne
push
pop
mov
mov
sub
pop
push
sbb
xorb
call
and
clc
pop
mov
sub
test
inc
aaa
cld
mov
and
inc
pop
outsb
loop
ret
fsubs
push
lds
push
jmp
push
popf
incb
jne
or
or
add
pop
icebp
rcrb
push
lock
mov
mov
mov
xor
mov
nop
lods
sbb
mov
mov
je
es
sub
jl
add
jae
sbb
ror
mov
mov
xchg
xchg
inc
fildll
add
xor
call
mov
push
dec
dec
in
push
add
stos
add
mov
lock
jnp
or
in
cs
out
mov
test
loope
dec
cli
movsb
push
mov
mov
daa
xchg
add
daa
js
or
mov
ljmp
lcall
sbb
mov
add
lcall
mov
in
loop
sarb
inc
into
mov
cld
out
and
dec
cmp
loope
pop
jne
pusha
add
mov
push
sti
push
mov
pop
mov
lahf
pop
enter
lcall
jp
mov
dec
mov
mov
mov
dec
pop
test
lods
clc
xlat
push
adc
inc
mov
ret
imul
lds
gs
inc
pop
out
sti
sti
adc
rorb
pop
outsl
pop
mov
push
cmc
inc
out
loope
mov
push
push
fidivrs
or
decb
popf
mov
dec
sub
inc
data16
add
bound
inc
cmp
ds
lock
or
dec
push
aaa
mov
stos
ss
jb
enter
mov
in
or
or
push
aam
jb
and
insl
insl
dec
mov
mov
or
fwait
mov
mov
ficompl
pop
imul
lds
std
orl
push
pop
sbb
sbb
inc
inc
inc
stos
xchg
inc
pop
pop
jne
hlt
cmp
pop
sahf
push
mov
cmpsl
xor
imul
push
mov
scas
or
add
stos
and
mov
push
outsl
test
xchg
fbld
xchg
orb
outsb
insl
arpl
hlt
mov
jecxz
push
popf
sarb
and
cmpsl
stc
out
sub
mov
arpl
pop
mov
icebp
lea
aaa
mov
jecxz
lock
xor
mov
daa
add
mov
sbb
jbe
adc
mov
push
adc
outsl
adc
popf
mov
mov
aaa
ds
shll
lret
xor
test
xor
mov
dec
clc
adc
nop
jmp
mov
inc
mov
mov
fsubs
add
imul
ret
mov
std
add
cmpsb
arpl
dec
roll
mov
cmc
shlb
push
in
xchg
mov
test
mov
push
sbb
outsb
ss
ljmp
pop
movsb
or
pop
lock
pop
ss
loopne
push
cmp
sarl
and
xchg
sub
scas
or
jae
repnz
shrl
inc
or
aad
xchg
out
mov
fisttpl
adc
sbb
xor
sbb
iret
add
sub
nop
dec
aas
cmc
hlt
in
mov
mov
aam
shrl
sbb
sub
cmp
jle
ja
jmp
xor
stos
pusha
fcoms
mov
or
xchg
repz
cwtl
rclb
adc
push
push
sbb
push
mov
cmp
cmp
cmp
xorl
mov
daa
sub
jo
fidivrs
mov
jge
mov
sub
mov
aam
and
pop
shlb
mov
cld
fsts
inc
ficoms
insb
icebp
in
in
adc
dec
mov
aaa
xor
test
or
adc
pop
pop
out
fiaddl
sbb
sahf
cli
cmpsb
mov
push
push
insb
lea
and
mov
mov
mov
mov
pop
cmc
mov
fdivl
movsl
js
and
cmpsl
pop
subl
shll
movsb
cmpsb
add
lock
lret
push
adc
sub
fistps
inc
js
lock
pop
jecxz
mov
dec
mov
dec
subb
ja
popa
test
jb
jne
inc
mov
outsb
pop
sahf
pop
and
sbb
lods
shlb
and
and
loopne
pushf
movsl
int3
mov
mov
push
xchg
leave
mov
adc
stos
ss
insb
cmp
inc
mov
mov
aam
enter
add
rol
mov
hlt
pop
les
cmp
pop
and
mov
cmpsl
mov
sbb
push
daa
jl
xchg
test
add
insl
iret
mov
add
decl
insl
sbbl
mov
mov
in
fcompl
pop
fmull
fwait
test
inc
mov
testb
sub
dec
mov
ds
fidivrs
in
xchg
in
scas
push
sub
jl
dec
icebp
ss
mov
pop
stc
pushf
and
lcall
popf
mov
jmp
aad
insl
test
mov
cwtl
cmpsb
inc
insb
lods
ret
jecxz
mov
jne
mov
sub
push
aam
lods
mov
jns
subl
outsl
pop
pop
movl
addb
gs
jmp
nop
fs
push
cwtl
sbbb
das
xor
sti
lahf
sub
in
dec
xlat
aaa
in
inc
xchg
dec
mov
sbb
jb
loope
test
pop
lods
sbb
pop
les
pop
push
test
add
mov
ret
test
dec
pop
in
cmp
dec
sbb
outsl
fdiv
jmp
and
mov
jecxz
cmpsb
ja
js
xchg
mov
jns
add
scas
aas
push
inc
cld
pop
xchg
pop
sub
push
push
clc
popa
or
jl
sub
shrl
sbb
jl
cltd
js
ret
bound
push
loopne
xchg
clc
testb
cld
mov
cmp
dec
inc
ljmp
xchg
mov
push
mov
jo
inc
jecxz
adc
roll
push
mov
dec
adc
sbb
je
push
lods
sub
pop
sub
mov
insl
into
mov
das
loop
mov
pusha
orb
call
js
mov
xchg
in
jb
fnsave
xchg
adc
mov
in
pop
push
cmc
pop
xchg
sub
sti
mov
mov
push
sarl
outsl
sbb
push
addl
mov
xor
xchg
xor
cmp
dec
mov
aad
or
dec
cmpb
out
enter
scas
pop
add
shlb
data16
in
pushf
sub
dec
adc
dec
loopne
mov
xchg
push
scas
and
xchg
xchg
jp
ret
jge
dec
popa
pop
pop
fidivrl
sbb
pop
outsl
dec
mov
cli
ret
or
mulb
inc
pop
ret
je
xchg
lods
jo
mov
fistpl
lahf
mov
push
in
mov
loopne
push
cli
rcll
insl
or
mov
mov
imul
loope
in
push
outsl
stc
jo
mull
cs
outsb
adc
inc
stos
xchg
out
sti
mov
mov
shl
movsl
jl
test
das
addr16
or
sub
outsb
lds
fists
xchg
mov
sar
dec
pop
cmp
ds
in
jns
or
fwait
pop
sbb
outsl
xor
push
mov
add
pop
cmp
push
ja
fnstcw
lds
rolb
add
je
out
sti
adc
lds
cld
arpl
mov
xor
pushf
jecxz
mov
out
cmp
push
and
mov
into
outsl
jg
popf
ljmp
push
fdivrs
cmp
subl
mov
push
cli
gs
cmp
testb
mov
pushw
push
sbb
enter
mov
jb
inc
sub
daa
das
inc
es
out
adc
sub
clc
loope
push
test
pusha
dec
pop
lock
outsb
dec
rol
cli
ret
adc
addb
ffreep
vandnps
inc
and
stos
sbb
in
or
and
add
dec
adc
shl
add
mov
push
loope
ret
xchg
mov
sti
sbb
aaa
inc
xchg
rcl
sbb
add
pop
cli
adc
test
rolb
xchg
cmpsl
inc
mov
push
pusha
or
xchg
sbb
add
push
inc
jmp
sub
ja
loope
es
bound
push
add
or
dec
add
and
jle
mov
imul
shlb
outsl
mov
hlt
fisubrl
jns
adc
inc
es
sbb
and
imul
repz
push
sti
or
or
leave
mov
jecxz
ret
insl
fldt
icebp
add
ljmp
fcomps
call
or
and
out
mov
adc
outsl
icebp
inc
negl
add
mov
outsb
pop
jmp
scas
mov
cwtl
fisttpl
push
in
mov
rclb
fstp
repnz
andb
push
pushf
xorb
aaa
mov
outsl
divl
addb
xlat
mov
rorl
mov
mov
jmp
cltd
xchg
mov
pusha
loope
loopne
dec
pop
inc
jmp
sar
roll
adc
dec
fistpll
cli
stos
es
xor
fistpll
xchg
loope
mov
popl
lea
push
and
pop
inc
loope
mov
not
mov
push
jecxz
test
addr16
cmp
mov
jle
or
insb
xchg
in
es
sti
popa
cmp
arpl
cli
dec
cmp
cmpsb
mov
mov
pop
xchg
sub
dec
mov
xchg
xchg
test
pushl
popf
loopne
cmp
and
jb
dec
jno
test
orl
scas
lret
pop
cmp
xor
mov
inc
mov
hlt
shll
js
lcall
mov
insl
sbbb
add
mov
in
push
add
lods
shrb
sub
aas
add
push
mov
movsl
aas
aad
dec
sbb
push
call
adc
lret
movsl
in
adc
inc
pop
mov
cltd
arpl
inc
and
lea
add
pop
cmpsb
in
ret
mov
fcom
push
mov
dec
lock
imull
xor
sbbb
or
js
imul
mov
inc
mov
sub
scas
mov
and
push
dec
and
aad
add
and
jecxz
mov
pop
clc
outsl
adc
jo
pop
push
idiv
xchg
les
and
ljmp
fbstp
cmpsb
add
hlt
add
add
insl
shrb
jnp
pop
jbe
mov
sbb
fisubs
push
mov
out
imul
push
fdivrs
clc
out
test
cmpb
inc
lock
ds
xchg
pop
lds
jg
cmc
dec
sub
cld
xlat
daa
jbe
out
pusha
push
inc
and
lea
jge
dec
or
cmp
bound
or
mov
dec
or
add
inc
outsb
and
sbb
jg
cltd
inc
fcoms
dec
dec
mov
push
and
pop
orl
dec
aam
out
push
add
pop
inc
shrl
jbe
jle
pop
dec
xor
mov
push
sbb
jo
pop
push
dec
jge
cmpsb
cmovno
addr16
xchg
sub
mov
clflush
bound
filds
in
push
mov
cmpsb
pusha
fdivrl
in
fdivp
aam
sti
and
aad
test
fidivrs
lret
sti
or
shrl
add
pop
or
out
outsb
dec
ret
mov
push
dec
jl
out
push
add
mov
out
and
icebp
or
sbb
daa
jecxz
iret
inc
inc
dec
je
ljmp
mul
in
sub
mov
inc
scas
dec
addr16
mov
loope
lahf
loopne
sub
je,pn
in
and
popf
inc
add
out
cwtl
and
or
mov
sbb
xchg
neg
adc
xor
outsb
mov
pop
in
push
incl
cmp
pop
fiadds
insl
ss
mov
push
mov
fbstp
xchg
sbb
xlat
stos
adc
add
int
icebp
and
add
ret
pushf
aam
insl
imul
jbe
lods
xor
out
push
clc
in
imulb
inc
stos
dec
clc
add
dec
outsl
mov
movl
xor
lds
push
cmpsb
and
rcrl
int3
xchg
sub
dec
jo
cmpsb
movsl
xor
ss
push
jno
repnz
and
aam
or
lcall
mov
sub
sbb
mov
popa
mov
cmp
adc
shll
sarb
push
das
dec
notb
pop
arpl
and
jl
and
dec
mov
mov
push
out
and
adc
push
call
stos
jns
nop
orb
xchg
mov
lock
imul
loope
pminub
and
xorl
aad
xor
cmpsb
dec
rcrl
mov
cmp
gs
fisubs
pop
cs
icebp
pop
pop
aaa
popa
clc
or
adc
mov
scas
or
fldl
push
add
or
insl
jno
sbb
je
sarb
or
adc
lods
ds
cmpsb
and
fisttpll
mov
push
inc
inc
and
add
sbb
andb
or
sbbl
in
dec
add
iret
pop
gs
out
std
int
imul
mov
call
jbe
gs
add
shlb
sub
push
aas
insb
test
mov
gs
loope
outsb
push
xor
test
jno
sbb
rolb
negb
cltd
add
push
push
out
sub
enter
or
push
mov
pop
scas
jb
pop
mov
add
pop
pushf
aad
mov
jl
inc
adcb
lock
lret
xor
or
mov
inc
add
sub
punpckhdq
xor
cmpsl
aam
mov
loop
push
jge
jle
jno
clc
pop
popf
sbb
mov
jns
pop
jnp
mov
mov
pop
xchg
ds
stc
cmp
jmp
testl
cmp
insl
mov
fists
jecxz
jl
pop
pop
xchg
out
sub
add
mov
fmuls
cld
xchg
in
pop
js
or
mov
insb
subb
aaa
mov
or
cli
mov
and
mov
cmp
iret
pop
iret
cmp
add
mov
fwait
ljmp
mov
or
push
mov
fcomi
sbb
and
test
pop
sbb
dec
mov
push
sbb
inc
adc
inc
mov
sbb
sbb
stos
mov
hlt
aad
mov
test
roll
ret
je
fdivrp
push
cmc
daa
cmp
movsl
loope
popf
movl
jmp
stos
arpl
mov
fcmovne
inc
shlb
test
cs
out
mov
lods
pop
ljmp
test
add
pop
fidivrl
lea
shlb
icebp
popa
jmp
jge
lahf
stc
mov
mov
inc
jg
mov
add
fidivrs
inc
daa
pusha
jmp
push
jp
daa
push
pop
test
fsubrl
les
into
jbe
mov
popa
or
lea
cmc
jl
mov
cli
jns
aad
xor
xor
pop
test
or
adc
sub
jbe
cwtl
outsb
insl
mov
mov
popf
sbb
pop
inc
mov
pause
mov
dec
in
test
cmp
mov
call
or
clc
mov
add
fdivs
cltd
into
fcmovu
imul
js
das
push
fsubr
xchg
jl
adc
lock
push
and
push
adc
mov
popf
mov
cmp
mul
xchg
mov
xor
mov
stc
cs
aaa
hlt
sbb
cld
inc
fcom
mov
js
cmp
fidivrs
pop
pop
mov
stc
pop
cmp
cmp
aam
das
sub
sbb
push
inc
scas
xchg
out
js
add
fsts
lret
mov
push
mov
mov
test
xor
xor
aam
stos
and
outsb
out
outsl
aaa
mov
call
leave
icebp
or
mov
ds
add
mov
fwait
lahf
arpl
and
testb
push
mov
test
push
sbb
les
lret
es
pop
aam
mov
jnp
sbb
arpl
cmpsl
outsb
push
mov
xor
push
ss
cli
ret
mov
sbb
xchg
lock
adc
mov
dec
out
js
imul
fcomps
mov
or
pop
add
stos
adc
push
ljmp
dec
sarl
mov
and
rcll
and
fnstcw
mov
jle
dec
lea
or
rclb
mov
push
mov
movsb
and
lret
and
or
popa
or
rorl
jle
outsb
cmp
sti
aad
cmp
int
sbb
and
or
jb
subb
fistl
cli
lahf
out
divps
das
xor
dec
cmp
mov
mov
cmp
add
push
push
int
fs
test
inc
push
mov
xor
or
aaa
mov
aad
orl
and
std
sub
mov
add
repnz
sub
mov
jbe
lock
inc
jne
push
arpl
flds
jo
hlt
push
xor
push
pop
subl
fiadds
fisttpl
xorl
out
mov
fildl
push
les
pop
lea
push
mov
dec
or
jo
scas
push
outsb
cmp
mov
mov
vunpcklps
add
or
adc
dec
sbb
shrb
pop
adc
daa
bswap
sub
insb
sarl
std
out
std
addb
jmp
test
call
mov
insb
jns
fildll
mov
inc
mov
cmpsb
pop
data16
pop
push
ret
xchg
xchg
daa
dec
outsl
das
pop
mov
ret
or
and
xlat
pop
lcall
or
js
jne
jnp
add
pop
xchg
bnd
dec
sbb
test
mov
jae
sub
test
dec
iret
jmp
scas
pop
mov
cmovo
hlt
xor
add
xor
jge
push
call
fs
outsb
inc
add
out
pop
push
sahf
mov
cmp
aad
jg
je
dec
jle
std
sbb
popa
jle
sbb
mov
pop
cs
cmpsl
push
pop
cld
ret
add
mov
sahf
lods
mov
fdivp
jae
mov
test
test
aam
in
stos
add
push
pop
add
mov
mov
ljmp
in
fwait
pop
jo
icebp
xchg
lahf
imul
lcall
rorb
cs
or
push
jmp
mov
inc
xor
push
or
sbb
mov
adc
mov
movsl
and
rcrl
movsb
shlb
inc
fmull
sbb
jle
inc
and
mov
or
dec
sbb
test
scas
incb
lea
stc
sbb
push
hlt
test
es
cli
push
aas
mov
and
icebp
aaa
pop
outsb
pusha
and
repz
mov
fwait
call
xor
mov
hlt
aas
sbb
xchg
iret
or
je
jbe
imul
cwtl
mov
dec
fstp
jle
decl
jl
rclb
mov
es
loope
nop
test
dec
loope
jns
inc
xor
stos
mov
cmp
icebp
cvttps2pi
xor
fildll
pop
push
outsb
push
cmp
nop
daa
pusha
xor
fwait
sub
ret
mov
and
push
mov
imul
push
lods
xor
or
ret
faddl
add
lret
mov
jecxz
and
nop
rcr
adc
call
cmpsb
icebp
adc
call
in
and
or
adc
inc
ret
mov
ja
in
or
shrl
and
mov
orl
in
xor
pop
or
je
inc
push
inc
jecxz
mov
push
dec
fprem
inc
sub
out
mov
push
pop
out
out
lods
mov
daa
js
adc
dec
ret
popf
jae
sarl
mov
push
push
mov
jnp
mov
cs
fistps
aad
adc
cmp
leave
mov
adc
xchg
scas
add
dec
popa
pushf
push
and
loope
cmp
mov
cld
fs
sub
call
xor
xchg
int3
out
test
insl
or
pop
aaa
pop
mov
add
sbb
mov
pop
sahf
jns
arpl
jo
inc
call
sarl
scas
insb
xchg
dec
push
aad
jo
adc
lcall
lock
xor
nop
imul
scas
je
aas
sub
mov
lea
inc
jge
out
and
daa
mov
loopne
push
cmp
add
hlt
in
or
push
shll
mov
js
jbe
ja
lea
push
hlt
test
cli
xchg
mov
adcb
ror
xchg
xor
adc
or
inc
stos
inc
sub
icebp
sub
push
pop
pop
inc
das
mov
jg
add
das
mov
ljmp
jle
mov
inc
xchg
sbb
xor
jmp
inc
sub
rcrl
sti
pop
dec
adcl
mov
and
std
sub
repz
cmc
shrl
add
xchg
xor
testl
mov
clc
cmp
icebp
lods
shll
and
xchg
push
sbb
jns
push
cmp
in
cmpb
inc
fstl
and
out
mov
clc
mov
test
sti
mov
out
rcll
outsl
sub
fs
insb
mov
mov
mov
aad
sub
and
push
std
movsl
push
pop
push
hlt
add
mov
fimull
mov
and
xchg
mov
pusha
jnp
stc
dec
insl
inc
jmp
pushf
push
ja
xchg
mov
add
push
pop
out
hlt
push
stc
dec
sub
dec
iret
enter
sub
add
and
add
cmp
mov
xor
jle
jbe
mov
imul
cltd
adc
iret
ja
cld
lods
fwait
inc
enter
push
or
cmp
lock
addb
xor
dec
dec
jg
ret
and
inc
sub
adc
out
pop
scas
mov
outsl
xchg
sbb
xchg
je
loop
xchg
xchg
jb
outsl
sbb
cli
aaa
mov
cmpsb
xchg
xor
mov
sub
mov
mov
testb
add
out
cltd
push
dec
je
lods
aas
mov
mov
and
dec
icebp
fcmovnb
mov
sbb
and
fwait
add
loop
shlb
sbb
mov
or
nop
add
sbb
hlt
shr
xchg
addb
jg
jbe
push
js
clc
dec
cmc
jg
xor
and
fcompl
jg
test
xchg
cmp
or
mov
aam
mov
pop
mov
sub
repz
in
cmpsl
mov
fisubs
pop
std
mov
mov
scas
mov
jle
fs
lock
sub
jno
mov
fs
or
aaa
clc
xor
add
mov
adc
aaa
mov
and
xchg
out
int3
inc
lds
negl
dec
mov
mov
mov
mov
pop
sbb
int
cmp
movsl
dec
mov
mov
jno
and
mov
decb
daa
inc
pop
mov
mov
jp
addb
jmp
cli
cmp
fadds
adc
fisubs
cld
jmp
test
mov
xor
xchg
jae
mov
das
shll
mov
jae
push
add
sbb
imul
push
xor
dec
inc
cmp
outsb
cmp
xor
lret
jo
fidivrl
enter
sub
mov
mov
enter
push
aas
mov
jnp
cmpsb
pop
dec
inc
ds
enter
mov
faddl
mov
and
fiadds
jp
clc
push
mov
or
mov
es
loope
test
cmp
lods
data16
call
pop
test
mov
rcrb
shrb
fwait
inc
icebp
push
xchg
mov
push
mov
sbb
sar
sub
mov
jbe
xchg
and
mov
sub
shrb
add
mov
fsts
inc
adc
mov
push
mov
push
cs
outsl
xchg
mov
ret
subl
call
test
ret
test
in
or
outsl
mov
xchg
mov
cld
push
test
int
mov
pop
stos
pop
inc
fiaddl
fidivs
mov
xchg
and
xor
cmp
sub
in
pop
jbe
aam
sub
or
insb
sbb
pop
mov
mov
out
inc
inc
pop
adc
lea
ja
les
movsb
jbe
int3
cli
mov
xor
fildl
xor
ret
in
add
lds
xchg
inc
and
inc
call
jl
in
cmp
jg
xchg
jg
dec
push
pop
add
lret
shrl
cli
gs
mov
jb
rorl
icebp
orl
in
iret
sbb
xchg
rclb
insl
xor
scas
js
pushl
fisubl
cld
incb
movb
mov
cld
imul
push
int
mov
inc
dec
push
jbe
pop
push
enter
int
xchg
pop
outsl
lahf
outsl
pusha
adc
insl
lcall
mov
dec
sub
ss
lret
mov
sbb
add
aad
lcall
mov
rclb
adc
popa
fildl
stos
lock
mov
pop
xchg
hlt
sbb
mov
lods
and
and
pusha
rcl
fdivrl
xchg
into
test
sub
mov
mov
aas
pop
add
mov
mov
pop
sub
jge
lds
loop
mov
pop
test
stos
pop
das
jnp
xor
mov
fildll
push
in
insb
inc
clc
not
adc
movsl
pop
sbb
rorl
loope
jge
sbb
out
pop
lret
test
add
fiaddl
out
int3
movb
and
inc
gs
inc
sub
cmpsb
enter
or
pop
insl
sbb
or
adc
scas
fisttpl
jb
jge
je
das
mov
int3
rcr
jnp
divb
dec
fldt
shl
inc
nop
inc
and
sarb
movsl
dec
je
pop
ja
mov
loope
int
push
icebp
xor
and
fistl
xor
cbtw
xchg
and
dec
std
push
cmc
in
push
cmpsl
addl
xlat
test
iret
insl
stc
or
outsl
rcl
inc
pop
pop
ret
jl
roll
adc
jl
js
lock
inc
cmpsb
lods
add
cli
push
pop
aam
out
loopne
aam
xor
jbe
push
jle
pop
or
cli
xchg
ret
sbb
ss
pop
nop
out
sbb
lods
and
jp
jg
fstpt
push
mov
test
mov
xchg
dec
icebp
movb
push
or
enter
lret
outsb
pop
movsl
add
dec
or
mov
sbb
test
jmp
or
push
pop
dec
jno
or
sbbb
andb
cmpb
sbb
out
inc
xchg
pop
jle
insl
cmpsl
lret
mov
mov
call
clc
mov
imul
jg
xor
dec
aaa
sbb
or
lods
mov
mov
xor
xor
mov
jmp
mov
rcrb
das
sbb
data16
cmp
cmpsl
push
mov
jbe
pop
mov
and
add
fstp
pop
push
fidivrs
notl
jmp
mov
sub
jb
xchg
mov
jbe
adc
pop
xlat
sub
cmp
xchg
xchg
ss
push
out
jo
fs
cmc
fistps
push
or
shrl
add
ss
test
and
pop
aam
mov
fdivrp
cmp
mov
jmp
push
mov
sti
cmp
mov
mov
or
lods
loopne
mov
or
jmp
dec
ss
pop
push
test
insl
loopne,pt
fmuls
sub
push
mov
add
and
cmp
test
movsl
call
int3
cmp
ret
or
pop
xor
xchg
sub
dec
jbe
or
jg
jnp
mov
jl
jl
hlt
stos
fucomip
dec
lds
sarl
cli
out
in
lcall
xchg
jge
jmp
sub
ja
sbb
fstpl
mov
fildl
pop
movsb
aas
movsb
cmc
leave
scas
inc
or
fistl
out
in
aam
push
aas
xor
push
mov
clc
push
movsb
in
fistpl
inc
xchg
pop
sub
jbe
and
add
ljmp
xor
cmp
pop
jp
pusha
sbb
nop
imul
adc
data16
push
and
cmp
mov
mov
repnz
pop
fadds
jnp
call
push
popa
jg
mov
cmp
arpl
mov
pop
cmp
ljmp
add
dec
xchg
adc
lock
out
jo
xchg
dec
dec
jae
dec
sub
jecxz
outsb
mov
sahf
sub
pop
xchg
and
mov
dec
test
icebp
outsl
mov
scas
mov
fcmovu
mov
push
push
inc
fimuls
ljmp
lods
stos
lock
adc
jbe
popa
inc
xchg
cwtl
fwait
xchg
push
test
mov
fsubl
rolb
push
lock
loope,pt
imul
and
jp
cmp
or
call
stc
sahf
fdivs
cmp
jne
mov
xchg
adcb
gs
mov
push
rcll
lcall
or
xor
or
mov
mov
and
fcmovnu
ficomps
jnp
into
and
std
int3
movsb
mov
test
mov
or
lcall
push
pop
mov
sbb
mov
cmp
hlt
repnz
pop
push
sbbb
test
jge
sub
jge
pop
dec
sbbb
clc
add
es
notb
add
nop
out
xchg
mov
push
mov
jno
xchg
pop
dec
xor
cld
add
jo
or
mov
xor
pop
aaa
add
icebp
mov
lret
fwait
sub
out
mov
imul
rol
data16
cmpsl
ljmp
ja
xchg
and
or
shlb
or
adc
xor
or
inc
jge
and
pop
jp
in
loopne
shr
mov
scas
xchg
rcrb
daa
rol
pop
dec
shrb
pop
or
rcrl
imul
in
or
call
push
xor
xchg
jns
jp
lret
das
pop
mov
sub
test
cmpsl
outsb
inc
and
out
dec
fsubrp
jns
shll
dec
inc
pop
call
cli
cmp
dec
std
jmp
pop
add
stos
sar
lds
lock
repnz
inc
cmp
inc
and
pop
mov
fsub
lods
adc
sub
stc
add
ficoml
sub
andl
mov
mov
mov
pop
adc
jnp
jmp
stos
jge
fsubl
inc
test
jbe
sub
xor
cmc
dec
push
push
jg
stos
sbb
mov
mov
fiadds
mov
cmp
std
mov
cmp
aam
ds
mov
test
or
inc
push
movsb
nop
scas
fdivs
leave
add
repz
mov
je
fcoml
push
push
mov
push
out
sub
fdivrs
mov
and
inc
adc
das
mov
pop
loope
lcall
mov
jmp
mov
add
inc
pop
pop
jl
lahf
rclb
stc
and
test
ret
jb
ret
xor
push
fstpl
and
cwtl
arpl
call
add
test
aaa
mov
rcll
and
arpl
push
shl
pop
mov
js
adc
mov
stos
jge
or
pop
cmp
xchg
mov
aad
push
inc
jp
cmp
or
incb
xchg
cmp
mov
sar
lds
sti
pop
fcmovbe
aam
sub
mov
pop
imul
lahf
rolb
shrb
stos
mov
int3
aaa
in
fcoml
jbe
call
add
add
add
test
xor
dec
lret
push
clc
fistps
jle
xchg
or
rorl
mov
inc
inc
ja
mov
cmp
out
xlat
add
movsb
lret
add
hlt
add
mov
ljmp
test
cmc
cli
shlb
sti
push
loopne
fcoms
and
push
subl
bound
insl
inc
jp
sbb
stos
scas
sahf
adc
dec
enter
sub
sbb
adc
js
rclb
sbb
sti
nop
xchg
mov
lds
jle
lcall
mov
or
push
jg
cmpb
pop
loope
loop
rolb
iret
shrl
mov
and
xchg
dec
push
repz
addb
fcomps
pop
sub
mov
cmp
fldt
fsubl
and
cli
movsl
jno
mov
adc
or
adc
lock
mov
pop
and
pop
cmc
sub
loop
mov
mov
sbb
sbb
dec
out
outsb
adc
ljmp
clc
rolb
dec
int3
out
outsb
insb
jg
pop
adc
xchg
inc
scas
push
inc
shlb
test
insb
orb
push
pop
sbbb
fwait
call
ret
xchg
fistl
das
cmp
icebp
and
cmp
js
mov
or
in
inc
sub
test
inc
cltd
jp
in
mov
sbb
mov
adc
in
subl
or
or
xor
and
push
adc
push
outsl
in
fisubrs
inc
inc
jno
sub
ss
int
fcomp
push
pop
mov
and
push
sbb
stc
lds
loop
bound
and
mov
imul
xchg
jle
ljmp
and
cmp
jp
sub
je
sbb
push
jge
push
rcrl
pop
mov
cmpsb
add
arpl
push
xor
xlat
pop
fwait
mov
adc
mov
sbb
mov
addr16
push
repz
rcrl
jl
cmp
cmp
jge
sbb
lahf
adc
lret
pop
add
out
in
mov
incl
pop
jecxz
movsl
fwait
push
out
iret
lods
pop
pop
mov
push
jg
cs
mov
js
inc
je
testl
cwtl
cltd
inc
xor
mov
pop
popf
mov
add
aas
push
jb
xor
dec
loope
mov
dec
shll
lds
mov
insl
call
push
sti
and
int3
stc
mov
addr16
je
xor
xor
sub
test
fstpl
mov
test
pop
pop
in
std
push
pop
or
xor
in
mov
insb
push
mov
sbb
mov
jmp
xchg
fildll
inc
dec
jnp
xchg
and
hlt
test
fisubrl
push
aad
pop
xor
mov
xor
push
mov
xor
add
fdivr
lahf
push
pop
mov
clc
movsb
adc
add
aaa
and
ficoml
xor
daa
ja
mov
fbld
push
nop
add
arpl
xchg
pop
ss
or
loopne
mov
cmpsl
sbb
add
cltd
mov
push
mov
sub
test
add
enter
mov
inc
cmc
aad
test
sub
sub
pushf
clc
jle
add
jg
push
mov
mov
mov
mov
orl
aas
jne
aaa
or
inc
xchg
inc
movsb
out
outsb
mov
movsb
shll
fsubs
stc
test
ret
test
xor
dec
inc
adc
adc
sarb
push
or
cmp
mov
movsb
mov
add
xchg
and
and
clc
mov
add
movsl
dec
push
mov
call
rclb
or
fildll
add
std
sbb
rorb
push
dec
in
in
mov
mov
mov
and
mov
mov
mov
or
or
imul
inc
pushf
cmpsl
sub
adc
push
lods
fnstsw
out
add
push
insl
in
rorb
inc
jmp
cmpsb
rorb
or
sbb
dec
sbb
je
filds
or
cltd
jle
je
and
clc
pop
and
je
push
jp
jmp
mov
jg
dec
test
inc
into
or
jecxz
sbb
icebp
xchg
mov
or
pusha
arpl
movsl
cmp
sub
scas
add
push
sub
push
mov
addr16
pop
jp
rcr
dec
pusha
jp
push
test
sbbl
pop
sbb
and
jo
push
je
xchg
push
fsincos
ret
add
cmp
push
fldl
addr16
mov
push
pop
mov
arpl
pop
mov
push
andl
outsl
sti
outsl
mov
test
fcomip
std
ljmp
popa
insl
cli
enter
repz
clc
ret
testl
push
adc
cmpsl
test
hlt
mov
mov
or
jne
movsb
sub
outsb
pop
or
adc
mov
mov
repz
xchg
daa
sub
inc
sar
cld
and
les
loopne
jb
mov
xchg
test
mov
insb
or
xchg
cmp
push
cltd
std
into
sbb
pop
pop
push
call
dec
xchg
cltd
add
lret
insl
sbb
inc
insb
stc
mov
and
jne
push
mov
inc
dec
mov
ljmp
or
iret
out
jle
mov
js
mov
in
pop
xchg
adc
scas
xchg
mov
fisubrl
cwtl
add
mov
mov
sbb
clc
inc
cs
push
lock
mov
ljmp
cmp
scas
icebp
test
and
or
push
sub
out
jle
mov
ret
adc
dec
rclb
or
mov
mov
jbe
push
into
jmp
push
mov
xchg
push
rorl
push
out
xchg
xchg
bound
pop
loope
fstpt
jle
jle
imul
mov
iret
mov
xchg
cld
xchg
mov
fcomip
jo
mov
xor
push
mov
insb
mov
stos
lock
mov
mov
fldt
das
out
stos
push
stos
sub
lcall
outsb
mov
pop
mov
js
adc
mov
pop
push
or
xchg
scas
scas
lahf
shl
call
and
or
jle
ret
adc
lock
out
push
lods
cmpsl
xchg
xchg
xchg
scas
fcompl
xor
ljmp
inc
bndldx
add
outsl
inc
pushf
jne
add
addb
mov
add
movsb
in
sub
sbb
sbbl
push
jns
clc
nop
mov
mov
clc
mov
sub
loop
and
insl
stos
cmc
cmovne
fstps
dec
mov
lahf
jo
mov
and
push
sbb
outsl
inc
pop
xor
mov
dec
sub
xchg
rclb
lahf
push
dec
mov
add
outsb
add
ds
push
lods
jmp
cmpl
mov
dec
mov
or
rclb
ljmp
pusha
jmp
adc
sbb
pop
jo
push
rolb
movsb
loop
cld
ret
and
push
xor
and
sub
test
pop
xchg
mov
insl
loope
xchg
lcall
clc
sub
xor
aad
aas
icebp
fistpll
test
and
and
fldt
add
outsl
mov
inc
cs
adc
push
mov
lahf
movsl
bnd
cmp
orl
ss
icebp
mov
shlb
stos
mov
jmp
js
sub
jnp
adc
adc
inc
sub
dec
push
jp
pop
adcb
pop
jo
shlb
mov
mov
fildll
es
adc
add
xchg
mov
mov
push
push
out
adcb
popl
sbb
sbb
fmull
sbb
pop
mov
and
jns
push
adc
push
sub
imul
and
jne
sahf
and
mov
sahf
fcmovnu
popl
das
jge
or
cmc
movsl
mov
das
push
sub
insb
div
outsb
cli
inc
lcall
or
adc
inc
aam
jbe
inc
dec
push
pop
mov
mov
cmp
stc
out
ds
lods
sbb
inc
lds
outsl
pop
add
cmp
cmp
lcall
push
dec
dec
rolb
cwtl
mov
jns
pop
jo
loop
jb
lea
push
loope
add
fstpl
dec
push
pop
lea
pop
mov
test
rclb
pop
dec
sbb
addl
add
fnsave
in
adc
add
lahf
or
dec
stos
fcom
jae
inc
movsw
hlt
in
pushf
push
mov
lret
sub
dec
sub
adc
mov
fstl
std
into
sub
push
add
movsb
inc
mov
ret
mov
stos
inc
lds
data16
es
lcall
mov
lods
fildl
inc
test
ja
icebp
sub
dec
xor
mov
push
int3
sbb
mov
or
stc
fidivrl
cli
movswl
pop
mov
or
or
outsl
sbb
inc
add
rcrb
ljmp
and
jae
ljmp
ljmp
test
cmpsb
pop
jnp
rolb
jle
repnz
sub
push
inc
mov
jle
mov
sub
push
lds
imul
popl
shrl
movsl
shll
movsl
in
in
fbld
jno
dec
mov
adcl
sbb
and
scas
mov
and
inc
bound
stos
out
mov
aad
jmp
in
mov
mov
insl
lock
and
inc
jge
or
fisubrs
aaa
sbbb
cmp
out
in
xor
jl
pop
push
cli
shr
add
fildl
cmpsl
add
push
mov
fsubrs
xchg
mov
ficompl
clc
pop
mov
lea
push
inc
jne
hlt
mov
add
cwtl
jp
pop
add
and
out
clc
in
sbb
add
les
pop
push
fucomi
fstpl
ret
fcmovnbe
enter
outsl
outsl
std
xchg
bound
ret
lea
test
call
lcall
in
out
adc
mov
out
cmpsb
xchg
clc
mov
mov
test
test
mov
inc
xorb
cmp
stos
sbb
adc
xor
push
xor
cmp
lock
xor
mov
divb
pop
arpl
ret
add
dec
add
jge
icebp
lea
mov
mov
loop
pop
iret
ss
outsb
cwtl
and
pop
jo
fcmovnbe
dec
icebp
adc
mov
out
sbb
sub
aam
cli
xchg
cmc
inc
pop
jp
je
rolb
ret
enter
push
dec
pop
loop
pusha
sbb
push
scas
lret
mov
sbb
fadds
mov
jmp
subl
ds
mov
fisttps
jbe
xchg
scas
cwtl
inc
pop
insl
sti
ja
xor
add
mov
inc
mov
jge
std
lods
in
mov
andb
xor
mov
push
pushf
jp
sbb
push
rorb
push
bound
cmc
cmp
pop
or
jb
cmp
mov
push
imul
inc
cwtl
and
jle
daa
test
xor
jmp
mov
call
xchg
mov
sbb
std
jg
xor
mov
xor
inc
dec
in
mov
sbb
xor
and
fcmovnu
sarl
cmc
adc
jo
sub
cmc
xchg
std
xchg
jne
inc
lret
add
sbb
xchg
pop
fsubl
les
mov
lock
lret
mov
test
dec
and
ret
inc
sub
dec
shlb
jp
mov
pop
stos
fstpl
rcl
hlt
push
inc
ss
clc
pop
mov
lds
shlb
jg
push
mov
xchg
push
dec
sub
mov
dec
idivb
or
ret
and
xor
dec
push
or
inc
adc
insl
and
sbb
inc
pop
aam
loope
nop
rcll
call
or
andl
and
lods
add
mov
sub
fdivs
int
ja
jge
shrl
das
adc
in
mov
jmp
test
subb
fadd
scas
lods
gs
rorb
shl
clc
push
js
cmp
mulb
daa
test
fisubrl
mov
add
je
das
cmpb
fbstp
loopne
fs
outsl
pusha
mov
incl
mov
mov
add
inc
sub
fwait
mov
mov
addb
mov
add
and
ret
mov
movsb
mov
fimuls
jb
jge
jg
imul
pop
mov
pop
sub
cmp
clc
stos
outsl
dec
int
inc
test
lock
and
or
cli
mov
fstpt
lcall
jmp
es
iret
lcall
rcrb
stc
sub
mov
sub
rcll
lock
mov
pop
nop
jg
test
jne
std
or
lret
jo
incb
adc
inc
xor
push
inc
movsl
or
add
or
mov
addr16
pusha
test
das
jl
je
pop
popa
add
or
lea
iret
xor
mov
xchg
imulb
push
out
stos
in
and
jb
in
mov
mov
shrl
roll
aaa
cmc
pusha
inc
mov
mov
mov
cmp
cmp
inc
fistl
cmpsb
adc
xchg
sub
pusha
std
push
mov
adc
jmp
mov
and
shll
push
rcrb
cmp
cmove
rclb
jne
sahf
jmp
pushf
add
push
fstl
cwtl
push
jb
pop
fistpl
mov
imul
or
cmp
hlt
cmpsb
mov
or
mov
mov
mov
lods
pop
fidivrs
jne
out
and
imul
inc
cmp
clc
xchg
imul
mov
test
imul
in
filds
es
xor
shr
jge
push
fstpt
push
lcall
clc
insb
lods
mov
shrl
sub
mov
adc
or
cltd
push
add
js
gs
inc
or
jbe
pop
clc
push
mov
test
xchg
decl
mov
lea
mov
cld
and
roll
adc
adc
jnp
sub
pop
loopne
xchg
push
jmp
sub
pop
ret
xorl
mov
cmp
push
push
fistps
sbb
lea
repz
or
mov
push
cmpsl
mulps
nop
push
cli
push
insb
aaa
push
movl
jbe
int3
mov
mov
loope
push
adc
mov
xchg
jp
or
cld
stc
push
loopne
pop
fldl
mov
popf
mov
ss
sub
faddl
shl
out
push
sbb
sbb
xchg
xor
inc
imul
das
mov
jmpw
and
jle
mov
enter
out
scas
mov
mov
adc
cmp
jp
cld
push
add
ja
out
push
dec
dec
and
mov
pop
adc
xlat
inc
mov
es
mov
test
or
out
outsb
pop
test
cmpsb
stos
sbb
mov
clc
mov
inc
push
enter
mov
fildl
stos
xor
or
jge
pop
and
and
inc
rcl
dec
icebp
sbb
jl
lods
inc
or
test
inc
in
mov
dec
jp
scas
lods
dec
mov
lock
cmp
and
sahf
add
aad
lds
cli
pushf
dec
cmpsb
pop
jae
push
sub
mov
mov
sub
andnps
insb
jle
ja
sbb
mov
dec
ja
sbb
sbb
lea
roll
outsl
adcb
outsl
add
cmpsb
add
test
sarb
push
mov
aam
ficoms
pop
jge
int3
cmp
pop
inc
dec
ret
cli
fdivr
jbe
mov
and
test
push
pop
mov
andb
cwtl
jg
mov
lea
push
pusha
out
add
mov
hlt
mov
dec
xor
test
pop
in
sub
leave
in
mov
in
jmp
loopne
fildll
in
push
pop
lods
out
mov
push
daa
sub
mov
or
loopne
fisubrs
enter
inc
and
jp
arpl
fists
pop
and
test
mov
std
and
inc
ja
push
cmc
or
pushf
movsl
xchg
sbb
mov
aad
call
fildl
in
int
or
test
fcoms
insl
imul
mov
ljmp
in
cmc
stos
pop
inc
mov
lock
test
push
insb
cmp
fwait
stc
mov
lods
mov
lret
bound
pop
in
add
gs
push
test
sbb
sbb
inc
xchg
inc
in
lea
daa
mov
out
psrad
cs
aam
mov
push
mov
loope
mov
rcl
outsb
les
fadds
xchg
in
lock
inc
xchg
outsl
cmp
jne
push
dec
mov
xor
je
gs
gs
or
pop
lea
lcall
inc
pop
icebp
imul
jle
inc
push
jecxz
inc
add
sar
or
mov
negl
mov
pop
jmp
xor
jnp
jecxz
push
dec
mov
cld
xor
clc
sbb
cld
aam
jl
call
nop
xorl
mov
jae
push
push
pop
loop
pop
loopne
icebp
dec
mov
shlb
pop
mov
dec
lods
sbb
cld
cmp
jbe
dec
xor
pop
push
inc
mov
mov
push
fstl
lock
mov
xor
jns
je
sub
or
sub
adc
imul
lods
test
inc
push
pop
lea
adc
or
and
sbb
and
mov
pop
xor
in
lea
sub
subb
jmp
pop
mov
sarb
inc
addb
pop
sub
mov
sbb
mov
mov
ret
icebp
sahf
jb
inc
lcall
outsb
shll
mov
jns
in
rcrb
pop
scas
fdivs
inc
jno
pop
out
loopne
stos
xor
adc
lea
js
rcr
pop
ret
bound
xchg
xor
pop
cli
inc
xlat
xor
aam
mov
sub
cmp
inc
jecxz
sub
sub
dec
ds
rcl
lea
pop
icebp
lods
add
bound
adc
outsb
lock
dec
loopne
filds
pop
and
push
cmp
jecxz
adc
mov
push
insl
mov
pop
mov
fld
sbb
cmp
ret
stos
push
pop
mov
loop
adc
lods
push
lock
add
fisttps
cld
and
popf
inc
fdiv
fistpll
fcoml
xor
adc
dec
xor
aaa
mov
add
pop
adc
xchg
mov
jmp
cld
sub
dec
pop
add
push
push
jle
pushf
arpl
or
loop
xor
ja
xchg
pop
xor
roll
outsb
test
push
add
cmpsl
xor
lods
test
mov
push
push
push
lods
out
test
jb
repnz
or
outsl
mov
cltd
sub
cld
jno
pop
clc
or
push
iret
aad
jnp
cli
jg
mov
mov
push
repz
push
sub
jbe
pop
inc
and
xlat
xor
push
cld
out
lock
push
scas
adc
shll
mov
loope
mov
mov
test
pop
test
fnstenv
mov
fisttpl
mov
jno
jb
add
dec
sbbb
lods
cmp
add
or
and
mov
jno
sub
cli
ret
add
mov
mov
subl
clc
xchg
in
dec
add
aaa
push
in
ljmp
movsl
test
mov
xchg
push
push
dec
lret
mov
rcrl
jp
and
push
fcomps
icebp
add
stos
frstor
cli
aaa
mov
fs
jo
inc
call
out
lds
dec
ljmp
mov
dec
inc
pop
fsubrs
mov
cli
xor
add
xor
mov
mov
pop
call
lods
in
pop
and
shrb
pop
jmp
frstor
cli
cmp
or
xchg
fiaddl
bound
jg
cs
lods
or
and
das
mov
daa
lret
mov
sub
rcrb
clc
sub
xor
mov
jb
xchg
jecxz
add
xor
aad
push
xchg
imul
lahf
mov
push
rcrl
inc
fwait
outsb
push
loopne
mov
xor
push
xchg
leave
push
fsubrl
loop
mov
push
pop
sub
insb
sbb
jmp
movsb
cltd
das
stc
mov
popa
pop
mov
dec
cmpsl
filds
fisttpl
hlt
fldt
mov
loope
adc
add
push
ljmp
mov
xchg
cmp
dec
ja
cmp
or
fisttpl
popf
or
add
push
rcrb
test
add
cpuid
xor
cs
push
push
xchg
push
and
push
push
cmc
lods
jg
cmpl
dec
cmc
mov
pop
add
sub
mov
aaa
addr16
call
mov
sbb
or
mov
shll
dec
push
pop
mov
sbb
hlt
sbb
test
ja
xor
xchg
sub
and
push
addl
dec
add
xor
test
dec
sbb
push
imul
aad
adc
mov
sbb
das
insb
sti
mulb
in
add
mov
fidivrl
imul
scas
loop
cli
shl
push
sbb
or
ljmp
rcrb
fwait
push
jbe
sti
jo
shl
or
cmpsl
ds
xchg
sub
stos
in
fdivrs
lock
jmp
fdivl
mov
push
cmp
mov
add
int
call
add
iret
mov
sub
inc
xor
sbbb
std
adc
jmp
push
test
std
push
aas
dec
rorb
dec
ret
int3
push
inc
jmp
jmp
pop
movsb
or
and
cli
sub
and
call
and
sbb
jnp
mov
pop
push
mov
in
mov
jmp
push
mov
xchg
mov
xchg
mov
xor
mov
add
sbb
lahf
clc
popf
in
and
or
arpl
imul
lock
cld
add
mov
mov
aaa
push
fldcw
cmc
es
push
fbstp
adc
inc
cltd
cmpsl
sub
push
fidivrl
inc
cwtl
int3
or
ss
outsl
mov
pavgb
mov
mov
add
sub
add
mov
test
popf
pop
jb
icebp
pop
mov
ret
and
pop
mov
add
loop
adc
insl
pop
jle
push
mov
fcmovnu
sbb
loope
pop
imul
push
mov
pop
push
or
or
adc
jmp
loopne
or
mov
inc
or
pop
cld
shl
mov
repz
js
add
cmp
and
movsb
cmpsl
pop
mov
cmp
sbb
lret
or
mov
int3
ret
hlt
add
loope
xchg
xchg
fidivrs
add
and
adc
and
push
enter
rcrl
ret
sbb
stos
and
pop
push
and
orl
sub
fadd
xor
xchg
mov
outsl
cld
aaa
mov
gs
mov
mov
xchg
aad
insb
jne
inc
loop
sbb
inc
adc
push
incl
popf
add
frstor
inc
cmp
dec
lret
outsb
xchg
ss
mov
pop
xor
fildl
mov
pushf
inc
mov
rcrl
pop
mov
dec
or
sbb
jb
int3
pop
fidivrl
adc
pop
addr16
movb
xlat
outsb
insl
adc
xorb
ret
jo
lock
movb
push
push
sti
sub
mov
push
mov
xor
faddl
sbb
icebp
cmp
xchg
adc
xchg
aad
loop
dec
adc
std
push
sbb
dec
sbb
xchg
into
rclb
inc
dec
fucomp
scas
mov
gs
cmp
or
subl
push
movsb
cmpsb
push
call
fs
test
fnsave
xor
clc
or
add
inc
hlt
xchg
popa
rcrb
mov
cli
into
repnz
and
out
out
jne
mov
inc
mov
pop
sub
cmpsl
int3
or
adc
das
lret
fdivr
inc
aam
jle
sahf
das
rclb
mov
ja
xor
and
loope
test
sbb
ud1
dec
and
dec
les
stos
xchg
pop
call
ficoml
xor
jp
insb
adc
fadd
push
and
pop
xchg
fisubs
xchg
or
fldenv
in
cmpsl
mov
movsl
sbb
lds
call
imul
popf
sbbl
sbb
lret
jo
lcall
sbb
scas
insl
shll
shlb
or
mov
jo
sub
xchg
repz
dec
add
insb
mov
es
and
pop
subl
or
push
xchg
adc
jno
pop
add
pop
pop
xorb
popf
test
into
mov
ret
or
push
cmp
jae
or
fcmovnu
mov
push
jae
xor
mov
pop
add
dec
adc
out
sub
xor
push
scas
and
dec
mov
sub
iret
jbe
add
or
push
mov
or
mov
push
jmp
addl
pusha
jne
push
arpl
cmc
aaa
push
adc
or
je
cli
sahf
adc
jmp
popa
negb
clc
in
mov
mov
push
gs
scas
add
xlat
test
fistps
or
packsswb
pop
dec
pushf
mov
arpl
out
push
test
stos
fistpll
push
pop
sarb
fdivl
fwait
dec
inc
dec
and
xor
filds
test
clc
pusha
cmc
ret
and
lods
cmp
xchg
push
cld
dec
add
pop
pop
sbb
pop
sub
fdivrs
push
repz
mov
cmp
stos
mov
sti
ret
movsb
xchg
adc
cmp
pop
mov
js
adc
pop
mov
mov
pop
fisubl
pop
mov
jmp
loopne
mov
add
inc
sub
lods
jno
test
rorl
sbb
xchg
dec
jp
dec
inc
ja
push
repnz
and
push
inc
shl
sbb
insl
mov
sbb
add
xchg
mov
jp
or
int3
addr16
dec
pop
push
movsl
jle
adc
mov
push
fcmovnb
mov
cli
test
lods
das
mov
out
inc
pop
push
das
loopne
xor
adc
mov
fnsave
lcall
test
dec
jmp
mov
or
mov
aaa
mov
sub
xchg
jnp
les
or
in
repz
cmp
add
add
or
int
inc
out
dec
loope
fldcw
pop
loopne
mov
arpl
mov
rcr
dec
dec
mov
sub
inc
mov
and
mov
inc
and
test
lock
mov
pop
push
push
adc
insb
out
mov
add
cmc
mov
dec
mov
les
dec
or
add
insl
rcrl
dec
sahf
shlb
push
pop
std
pop
rcl
leave
xchg
and
adc
icebp
push
cmp
lods
imulb
js
lock
jno
loope
adc
mov
push
shlb
movsl
inc
inc
lret
roll
cltd
pushf
lods
aas
and
jns
xor
out
repnz
cli
int
loope
call
getsec
add
adc
lds
jl
ffreep
or
jg
ss
mov
jbe
inc
pop
fistl
inc
mov
dec
pop
lahf
pop
cmp
ret
pop
imul
mov
mov
pop
stos
mov
jae
in
mov
ljmp
dec
mov
aas
sbb
mov
mov
pop
mov
lods
and
xor
mov
test
pop
jbe
fstpt
push
push
push
faddp
cmpsl
xchg
arpl
gs
sub
xor
daa
and
ds
push
inc
dec
and
mov
addb
lock
xchg
sub
rcr
jge
aad
push
mov
sbb
inc
mov
mov
sbb
push
aam
push
aaa
sarl
or
mov
lods
push
lahf
in
inc
and
sahf
fs
jae
icebp
adc
lods
add
mov
add
jno
dec
ret
push
ss
pop
xchg
xchg
cmp
mov
and
test
xchg
or
add
out
in
sahf
pop
xor
fwait
mov
adc
lock
inc
pop
loope
dec
insl
icebp
fldt
mov
xchg
mov
pop
loopne
mov
stc
adc
add
and
cmp
mov
mov
inc
push
cli
jmp
negl
test
dec
mov
das
mov
jle
rcr
and
rorl
pop
outsl
outsl
cld
push
shrb
loopne
jne
hlt
bound
outsb
cmp
fldenv
jg
mov
pop
jle
mov
pop
insb
loop
mov
mov
outsb
aam
xor
mov
mov
mov
jp
mov
call
sar
popa
jnp
mov
push
mov
mov
fnstsw
loope
sub
les
pop
pusha
or
jmp
inc
dec
xor
shl
mov
cmp
loop
shr
fildl
or
or
in
pushf
and
enter
xor
loope
call
je
stos
push
inc
testl
jmp
sbb
cld
inc
jmp
or
faddl
xchg
sbb
inc
xor
dec
pop
jno
jle
adc
dec
or
pop
ss
addr16
adc
call
push
mov
sbb
push
jecxz
clc
pop
popf
pop
subb
mov
mov
jle
fcom
insl
mov
std
adc
push
or
aad
xchg
add
mov
mov
push
jmp
cmpsl
movsl
cld
jbe
push
je
mov
insb
push
cmc
out
lcall
in
inc
jg
jle
dec
pop
cwtl
ror
pop
pop
fsubrs
xchg
mov
out
cmp
add
aam
push
sub
fcmovu
outsb
outsl
loopne
lods
jns
ss
push
test
push
inc
rcrl
jmp
cs
adcb
repz
or
int3
jl
mov
rol
dec
or
adcb
push
fisubl
fildll
stos
cli
test
cmp
adc
ret
incl
adc
mov
sbb
pop
jecxz
inc
sub
ds
int
pop
mov
in
int
xchg
cmpsb
xchg
xorb
fildll
fiaddl
xchg
stos
xorl
mov
call
mov
loopne
jp
scas
xchg
into
add
inc
jbe
fcomp
inc
push
jbe
sbb
lods
imul
mov
in
add
xchg
inc
pop
xchg
test
mov
jl
and
test
inc
xor
mov
mov
push
add
cmp
and
mov
jae
popa
add
xor
out
or
ljmp
aas
sbb
lret
add
cmp
daa
out
lret
pop
rcrl
scas
or
data16
out
daa
cmp
pop
test
dec
out
dec
sarb
pop
ljmp
test
clc
out
outsl
fistps
pop
es
jo
enter
mov
xorl
pusha
pop
dec
xor
mov
sarb
insl
xchg
fcmovb
nop
in
xor
ja
push
mov
stc
jl
mov
dec
and
pop
sbb
je
pusha
pop
cld
mov
out
xor
mov
adc
cmp
pop
pop
sub
mov
cli
insl
popa
or
push
sahf
es
shll
jo
push
push
outsl
outsb
sbb
cmc
add
lahf
and
push
fnsetpm(287
lret
mov
xchg
fistpll
mov
andl
lods
inc
aas
pop
jns
enter
xchg
pop
out
outsb
gs
je
clc
ret
mov
dec
adc
out
xchg
mov
and
movups
add
xor
pop
cld
jo
test
fwait
push
adc
mov
adc
jae
push
andb
and
testb
dec
orb
mov
xor
xor
cltd
and
pushw
and
sahf
mov
cwtl
pop
mov
fs
and
xchg
movsl
sub
mov
sbb
enter
and
scas
dec
pop
je
adc
mov
adc
shrb
rcr
insl
xchg
imul
sub
fidivl
xlat
mov
adc
mov
xchg
adc
leave
hlt
cmp
subb
jne
jno
mov
roll
jne
imul
and
icebp
pop
push
jmp
mov
mov
adc
popa
or
adc
mov
xchg
lcall
jae
rolb
xchg
push
sbb
ja
out
out
call
scas
cmc
or
mov
ja
mov
push
mov
mov
cs
fmuls
or
movsl
xchg
xchg
insb
cmpsb
inc
add
xchg
xchg
dec
jns
cmpsb
lods
loope
cli
cmp
dec
sbb
mov
push
stos
bound
insl
testl
cmp
pop
lret
movsl
js
rolb
fs
out
ror
push
jle
mov
xchg
sarb
sti
stos
insl
push
int
or
std
ret
stc
pop
sbb
pusha
ljmp
ljmp
xor
loopne
lods
jge
cmp
mov
inc
and
push
mov
sub
ja
fwait
jmp
cmp
push
adcw
cmp
pop
push
mov
and
je
push
cld
fistps
xor
xor
mov
test
nop
jae
and
lea
xor
dec
repz
sbb
jmp
add
push
xchg
dec
pop
mov
pop
pushl
stos
jbe
fstpt
adc
xchg
stc
sbb
aaa
ss
divb
mov
ret
sbb
pop
aaa
faddp
cmp
dec
jge
and
sub
jno
push
aad
push
insb
dec
outsb
mov
mov
lret
push
addr16
fdivl
sarb
jae
rolb
loop
mov
in
pop
fcmovnb
xor
push
push
inc
mov
outsl
mov
pop
insl
xchg
xor
mov
in
nop
sbb
dec
js
pop
rclb
out
shll
in
pop
inc
roll
jmp
cmc
cmp
xchg
subl
roll
cltd
cmp
sbb
adc
das
hlt
push
stos
aas
ljmp
and
sub
test
jo
mov
or
call
inc
dec
push
ja
inc
or
pop
push
shll
jnp
mov
inc
xor
insl
mov
mov
mov
xor
mov
cmpsb
popa
xchg
dec
push
decb
gs
loope
fcoms
lret
js
mov
xor
out
push
cmpb
pop
mov
xchg
lds
fdivp
pop
adc
lock
je
push
mov
pop
ficompl
cmc
mov
into
inc
enter
dec
push
fwait
jmp
lret
adc
add
mov
or
in
stos
sbb
cmp
or
adc
cmovl
scas
mov
fwait
inc
adc
pushl
mov
or
cmp
ljmp
fwait
xor
push
test
clc
sbb
sub
push
xchg
nop
jmp
inc
adc
mov
mov
in
dec
orl
push
xor
adc
lahf
repz
xor
rcrl
and
cli
icebp
into
cmp
loopne
xor
bound
push
inc
jae
cs
dec
sub
ret
arpl
das
cmp
pop
push
or
mov
and
lods
push
scas
sub
or
sahf
iret
xor
out
adc
add
bound
frstor
filds
cmc
xchg
sub
mov
mov
adc
ljmp
and
push
hlt
inc
icebp
fistpl
stc
cwtl
jmp
test
mov
inc
call
rol
mov
add
fs
cmp
ret
div
ret
and
sub
pop
sub
adc
movsl
cmc
icebp
xchg
or
mov
pusha
jp
leave
sbb
mov
cwtl
fprem
scas
mov
push
xor
inc
loope
test
sbb
sub
stos
filds
aaa
pop
jbe
sbb
or
adc
add
push
push
sahf
pop
das
pop
adc
pop
daa
not
ret
xor
jp
ret
sub
insl
sub
cltd
mov
push
adc
add
inc
pop
mov
mov
dec
arpl
inc
dec
shl
push
or
cwtl
lods
push
pusha
and
mov
fidivrl
lcall
cmp
outsl
cld
or
stc
cmp
in
in
cmp
mov
pusha
mov
and
pminub
jo
aad
jmp
jno
popf
xor
mov
fadd
bts
or
pop
mov
mov
cmc
xor
mov
pop
sbbb
cmpsb
lea
push
push
mov
mov
mov
sbb
cs
dec
movsb
bound
dec
xor
cmpsl
push
cld
aad
add
hlt
push
arpl
icebp
or
iret
inc
test
loopne
jg
mov
out
movsb
lea
cmp
subb
mov
pop
fmull
bound
rorb
mov
xor
add
repnz
dec
lea
cmp
sub
sub
mov
pop
insb
adc
inc
cmp
cmpsl
inc
pop
and
push
xchg
inc
jl
pop
lock
call
jecxz
aaa
mov
and
popf
addr16
gs
ret
mov
cmc
or
test
mov
push
mov
pop
sub
es
adc
int
add
fists
inc
das
inc
xlat
negb
dec
ja
je
or
rcr
out
adc
adc
arpl
mov
pushf
mov
jo
adc
sub
and
cmp
jno
jmp
scas
imul
ja
push
mov
clc
dec
hlt
aaa
aam
lret
test
sub
int
shr
hlt
dec
pop
mov
movsl
xchg
push
fisubl
or
fcomps
outsb
sub
fadds
sbb
sub
cmp
out
subb
cs
sarl
jg
lea
sbb
arpl
fsubp
xlat
sbb
clc
rorb
lret
mov
mov
push
mov
xor
jp
or
sub
mov
lods
inc
out
mov
push
xchg
inc
sarl
mov
movsl
imulb
or
lods
call
adc
add
push
daa
daa
push
out
lds
lock
ss
outsb
push
sbb
cmp
loop
cwtl
call
sub
xor
and
ret
std
inc
mov
scas
test
adc
pop
rorb
out
arpl
jo
pushw
jp
xor
push
sub
pop
cwtl
clc
das
push
test
push
cli
mov
in
loop
dec
rolb
fildl
aad
cmp
add
lret
data16
or
sub
sub
sub
jmp
dec
out
adc
xor
inc
dec
lock
pop
clc
ds
jb
cs
jo
inc
fisubrl
jl
mov
test
push
jo
stos
cmp
rorb
fs
add
add
lods
jmp
sbbl
shll
pop
sahf
jo
sbb
int
in
sub
in
cmpl
movsl
inc
jge
adc
cwtl
aaa
rcr
fiaddl
pop
sub
or
fs
xlat
mov
les
lods
ret
es
inc
jl
push
in
sub
mov
cmp
orb
dec
mov
fmuls
xchg
mov
adc
push
pop
cli
add
fnsave
popa
enter
adc
xor
inc
add
cmp
or
arpl
cmp
test
mov
decb
aad
sub
fbld
push
loope
mov
sbb
jecxz
xchg
iret
and
dec
cmp
or
inc
rcll
jle
mov
in
and
pop
xchg
mov
lea
pop
mov
or
mov
mov
jbe
inc
push
incb
stos
xor
adc
mov
aas
aas
xchg
xor
and
push
jns
mov
loop
mov
test
jle
mov
or
cmp
mov
jp
push
mov
xchg
imul
jbe
mov
lock
xchg
push
imul
jbe
add
movsl
jg
jno
push
stos
push
sub
jne
sbb
stc
xchg
dec
repnz
das
inc
add
loopne
push
dec
sub
jmp
fdivl
lods
lret
mov
fstpt
lds
push
mov
push
xchg
dec
xor
jbe
dec
hlt
jns
flds
mov
shll
inc
jl
icebp
push
or
sub
mov
mov
push
lock
clc
shlb
jns
push
incl
ds
out
pop
loope
pop
aam
sti
push
jns
leave
bound
bnd
pop
cmp
call
cltd
adc
inc
ja
mov
movsl
cmp
mov
fists
mov
loope
push
inc
mov
mov
sbbb
push
lock
icebp
cmpxchg
rcll
xchg
mov
add
jae
jmp
sbb
add
je
faddp
push
fdivrs
push
sbb
jmp
push
pop
mov
sub
pop
add
jns
add
jp
mov
fwait
cld
fdiv
popa
mov
lds
movsl
push
adc
ljmp
pand
outsl
insb
ret
ror
add
outsb
insl
add
ret
mov
mov
loope
mov
sahf
sarl
inc
mov
sbb
push
test
fldt
dec
mov
push
fiaddl
add
lret
mov
fsubrs
cmp
leave
xor
and
lcall
pop
test
adc
cld
stos
mov
push
cmp
ja
sbb
stc
xor
lea
filds
lock
or
into
inc
mov
mulb
mov
fwait
out
addl
outsl
mov
inc
jl
add
aas
aaa
xchg
mov
ljmp
inc
adc
pushf
and
jge
int
mov
adc
jl
lret
subb
mov
mov
push
and
xchg
and
cmp
fsubrl
leave
nop
and
dec
addb
and
dec
jge
sbbb
enter
in
inc
or
popf
or
mov
pushf
cmpsl
jmp
int
xchg
clc
cmpsl
mov
fildl
cmp
ljmp
test
mov
data16
xchg
pop
mov
cmp
jl
mov
or
sub
into
xchg
fsts
jg
push
rorl
sub
call
inc
das
ret
insb
mov
add
push
out
out
push
daa
jecxz
dec
das
rorb
dec
jae
mov
inc
lock
cltd
loopne
xchg
push
jecxz
int3
push
les
test
icebp
das
inc
or
sbb
outsl
insl
pop
inc
cmpsl
push
mov
adc
inc
cs
add
xor
lcall
pop
aad
fcomip
inc
adc
and
je
in
nop
push
movsb
mov
mov
bnd
push
dec
fldcw
sbb
pop
and
ss
push
add
in
mov
loopne
adcl
pop
je
xor
ds
dec
aas
mov
or
cmp
out
in
lods
lea
or
sub
js
int3
add
addb
mov
lahf
jg
jo
fstpt
frstor
sub
xchg
and
fiadds
lret
imulb
inc
xlat
xchg
and
das
xchg
andb
das
inc
popa
adc
add
ret
push
xchg
jno
sub
push
or
and
imul
jne
out
mov
insl
sub
add
and
dec
push
hlt
push
dec
push
lcall
idivl
cwtl
inc
es
pop
stos
imul
add
in
int
jae
gs
push
pop
jnp
scas
add
into
sub
outsl
and
cld
leave
fwait
xor
sbb
ret
daa
sub
push
pop
cs
cmp
add
popf
or
call
fucomi
fdiv
cmp
lcall
sub
in
ret
xchg
test
jnp
xchg
ss
jmp
sti
rcrb
dec
fmuls
pop
or
add
insb
ret
push
mov
hlt
ja
inc
adc
push
adc
mov
lods
push
cwtl
adc
je
ja
cli
fildll
sub
cmpsb
adc
mov
mov
jle
xchg
loop
jmp
in
icebp
jmp
dec
cmpsl
xchg
add
out
add
and
xchg
test
adc
xchg
cmp
call
jle
adc
std
inc
in
call
pop
adc
cltd
push
pusha
mov
ss
clc
dec
shrb
jbe
mov
jp
sti
ja
scas
andl
xchg
pop
sbb
push
xor
mov
adc
fbstp
rol
test
cmp
je
xchg
lods
mov
dec
push
adc
push
xor
xchg
cmpsb
xchg
and
hlt
mov
xor
adc
aaa
mov
push
mov
mov
xchg
cmp
cmp
mov
mov
sbb
iret
outsl
rol
inc
js
aam
pushf
ror
enter
mov
xchg
lock
scas
mov
jl
clc
shl
add
pop
inc
mov
mov
int3
daa
lret
add
or
xchg
rcrb
xor
lea
mov
sbb
call
xlat
pop
gs
xchg
loope
mov
inc
jb
insb
pop
add
daa
jg
mov
test
sbb
pop
sub
pop
addr16
pop
or
push
into
mov
jnp
fwait
mov
aaa
jle
add
push
or
test
loopne
daa
test
inc
mov
mov
insl
xor
and
pop
ja
xchg
cmp
inc
mov
dec
test
push
dec
jge
pop
lcall
sub
fiaddl
fcomps
jg
outsl
cli
sbb
in
xor
sub
mov
push
imul
pop
dec
mov
shlb
ja
push
shll
or
stc
jnp
or
outsb
xchg
out
es
fstl
push
xor
mov
call
fiaddl
and
xor
dec
push
adcl
ljmp
add
dec
lods
jno
ret
je
mov
sbb
mov
fadd
sbb
mov
push
fdivrp
pop
fdivs
insb
je
enter
adc
scas
push
out
mov
cmp
pop
lock
xor
xor
push
cmpl
or
xor
or
mov
cltd
in
jb
mov
xchg
pusha
sbb
jg
stos
xor
andl
cmp
in
pop
adc
jbe
inc
lds
push
or
aam
stos
pusha
or
jbe
push
mov
int3
loope
movsl
dec
mov
pop
pop
mov
rcll
popa
mov
loope
hlt
int
pop
jge
inc
inc
lock
mov
int3
sbb
and
fs
and
jp
inc
inc
fs
scas
xchg
dec
roll
push
jle
mov
fstl
push
movsl
inc
fwait
outsl
outsb
xchg
arpl
jmp
imul
mov
hlt
ja
xchg
cmp
xor
push
inc
push
out
mov
or
loope
adc
and
mov
pushf
and
divl
pop
sbb
or
stos
xor
pop
insb
mov
or
shll
dec
pusha
clc
jge
cmp
ffreep
xchg
lret
pop
bound
dec
inc
pop
xchg
xor
push
int
out
sbb
xor
cmovl
add
push
lea
pop
and
sar
mov
out
arpl
jg
dec
not
mov
aam
scas
xchg
pusha
mov
inc
jo
mov
xor
push
dec
or
jae
inc
hlt
or
inc
sub
movb
or
call
inc
adc
mov
jecxz
mov
add
pop
jo
insl
mov
int
push
adc
dec
fcompl
ret
dec
aam
stos
push
inc
dec
fs
or
aam
xchg
lcall
pop
cmp
scas
fistl
scas
pop
fwait
push
ss
inc
pop
mov
clc
idiv
adcl
push
popf
push
arpl
push
mov
in
or
push
cmp
fistps
xchg
jne
cmp
dec
xorb
bound
lock
cmp
decb
outsl
sbb
leave
rcrb
lret
or
dec
in
adc
add
inc
mov
cmp
divb
push
es
fwait
pop
test
adc
test
jp
jb
pop
and
or
inc
ljmp
mov
mov
push
pop
add
rcrl
xchg
jp
inc
and
hlt
outsl
xchg
mov
and
stos
or
dec
jge
fcmovnb
add
lret
or
adc
adcl
sar
or
mov
mov
movsl
je
inc
push
sub
inc
dec
js
ljmp
ss
push
mov
adc
neg
subb
dec
stos
mov
or
movsl
fildll
xor
push
push
inc
jl
jnp
test
push
mov
loop
pop
fiadds
mov
scas
rorb
movsb
sub
stc
loope,pn
std
pop
in
dec
sahf
jge
sbb
inc
or
aaa
jle
pop
shlb
cmpl
or
pop
pop
push
pop
cmp
push
xchg
mov
inc
pushf
mov
subb
inc
add
stos
sub
mov
lds
mov
pop
sub
dec
daa
sub
adc
stos
lret
js
pop
jne
add
filds
popf
lods
sub
pop
mov
xlat
stos
adc
cli
es
rol
lds
push
movsb
roll
add
push
inc
loop
inc
ret
or
orb
arpl
sub
pop
lcall
aaa
push
adcl
hlt
test
fst
ret
pop
sub
outsb
fbld
das
scas
add
insl
fimull
fbstp
je
add
adc
mov
inc
aad
add
sbb
jl
movsb
jecxz
jne
lock
mov
xor
inc
lea
test
mov
sahf
push
xchg
out
insl
sbb
mov
mov
pop
shrl
scas
mov
inc
and
adc
adc
cli
inc
lahf
nop
mov
pop
orb
or
or
pop
lods
add
push
mov
loop
inc
stc
pop
pop
insb
sbb
cmpb
jne
aaa
cmp
scas
movsl
ror
sbb
mov
dec
sub
sub
aaa
and
add
add
push
push
mov
adc
and
call
push
push
sub
mov
push
xchg
or
push
stos
cmpb
xor
jl
sub
lods
sbb
divb
pop
add
ss
ljmp
stos
pop
jge
or
sbb
jge
stos
imul
shr
test
ja
inc
jl,pt
mov
adc
push
test
stc
lods
in
or
sub
iret
cld
xchg
xor
sbbb
loopne
rcl
pop
bound
and
inc
adc
xchg
dec
loope
rorl
ret
push
mov
shlb
insl
lods
xchg
xchg
in
xchg
and
jne
mov
jg
xor
inc
test
ret
mov
push
stos
fstl
adc
loopne
clc
aam
ret
adc
mov
imul
xchg
mov
sbb
cmp
jbe
inc
and
pushf
adc
push
je
das
push
push
int3
jb
pusha
pop
sub
outsl
cmp
pop
cmp
inc
fimull
jo
cmpsl
adc
jb
xor
or
orb
insb
push
add
pop
mov
adc
les
jle
inc
fsubrl
lahf
in
mov
rcl
push
cld
xchg
test
sbb
pushl
jmp
mov
sub
mov
push
jno
push
xchg
sbb
das
cmp
stc
scas
ss
jo
jge
and
pop
push
xchg
sbb
stos
sub
fsubrp
ljmp
add
out
into
jle
inc
mov
aas
rolb
mov
jle
add
add
cli
fxch
jb
test
movsb
dec
mov
out
je
lcall
testb
pop
add
fists
movzwl
push
scas
pop
movsb
test
pop
dec
jne
clc
mov
jge
cli
out
pop
dec
mov
in
sub
cmp
andb
outsl
add
or
aaa
or
lods
add
mov
or
jl
mov
jnp
or
pop
xor
xchg
jnp
sti
jmp
stos
sbb
mov
or
aam
mov
dec
jl
mov
mov
call
jns
pop
xchg
mov
iret
mov
dec
repnz
std
adc
js
jl
sbb
js
lds
mov
js
shrb
add
or
mov
ja
pop
mov
pop
imul
mov
mov
mov
loopne
mov
cmp
xchg
std
movsl
pop
pusha
jl
inc
mov
popf
sub
mov
push
lds
sub
mov
roll
mov
add
scas
pop
outsb
les
xor
adc
xor
lret
sahf
inc
push
and
add
fsubrl
push
dec
mov
mov
jge
pop
adc
cli
cmp
movsl
mov
jno
xchg
jbe
lahf
mov
jge
cmp
repz
or
jmp
movsl
ja
jge
fs
in
js
repz
push
ret
std
pop
repz
rcrl
sub
stos
out
mov
jecxz
mov
cs
ljmp
sar
mov
pushf
sub
js
insb
sub
push
sub
mov
andl
adc
popf
push
in
or
loop
pop
mov
jge
mov
inc
push
std
cmpsl
push
xor
out
stos
push
mov
mov
roll
mov
mov
hlt
movsl
div
push
es
insb
add
mov
scas
loop
jne
sub
push
or
or
pop
sarl
push
stc
push
mov
adc
mov
cmc
push
and
adc
cmp
xchg
adc
aaa
mov
pop
mov
inc
clc
inc
rcl
test
sub
inc
in
push
xor
cmp
mov
add
dec
or
fucom
add
repnz
sbb
inc
jge
lret
xlat
popf
inc
and
sti
sbb
adc
pop
and
pop
inc
cwtl
inc
gs
xor
mov
xlat
push
ljmp
fiaddl
inc
lahf
add
rcrb
hlt
mov
clc
lcall
pop
fdivrp
push
push
add
jle
addb
fs
nop
mov
mov
leave
pop
rcll
jmp
testb
mov
mov
jmp
inc
fbstp
icebp
push
jns
les
and
inc
aad
sbb
jo
inc
and
loopne
sub
mov
fimull
pop
mov
das
sub
mov
jns
xorl
in
sub
mov
cmp
mov
inc
jo
rorl
dec
pushl
add
and
jnp
pop
sbb
fistl
fistpl
test
addr16
leave
jb
inc
add
or
mov
adc
add
ret
popf
add
repz
hlt
das
sub
aaa
imul
leave
lds
pop
mov
mov
hlt
jne
mov
loop
sub
arpl
and
jg
std
jns
cmpsb
cmp
int3
xor
movsb
push
repz
out
scas
std
or
inc
incl
daa
insl
sbb
fdecstp
addr16
mov
das
jmp
mov
insb
scas
std
mov
fistps
ss
jno
fldenv
xchg
or
xchg
xchg
push
addr16
mov
fsub
mov
fisttpll
push
sbb
fsts
cmpsb
or
jb
rcrl
xor
imul
nop
sbb
add
scas
inc
sbb
xchg
mov
sbbl
add
loope
movups
bound
jnp
xor
fistpl
jg
jo
mov
inc
arpl
jge
shll
mov
jecxz,pn
ret
mov
cmc
rclb
jae
add
test
add
mov
enter
sbb
in
mov
filds
add
push
cli
or
push
les
or
imul
sub
int
fwait
mov
fcmovnbe
inc
stos
cmpxchg
dec
xlat
adc
jle
push
xor
mov
and
jo
insl
iret
mov
daa
inc
jge
mov
fildl
test
cmp
lods
xor
pop
xchg
push
insl
andl
inc
mov
insb
mov
cld
mulb
jb
loope
test
fldt
lret
sahf
in
shl
jecxz
mov
xadd
dec
add
insl
faddl
mov
lods
push
fnsave
inc
popa
and
ss
lds
jl
cld
pop
roll
fcomp
fidivs
dec
and
mov
cmp
lea
ljmp
je
mov
adc
leave
imul
pop
adc
inc
push
mov
sahf
out
test
and
fst
push
push
or
lods
mov
or
sti
rorl
das
outsl
xchg
sbb
jne
cmp
cld
mov
or
jbe
ja
xor
sbb
dec
xchg
mov
and
dec
push
inc
mov
mov
mov
ljmp
je
cmpb
mov
fs
inc
dec
jns
pop
or
pop
cmp
movsl
fildl
and
xchg
adc
dec
or
push
stos
imul
in
add
and
pop
aaa
nop
sti
decl
xorb
mov
or
lods
jbe
pusha
inc
test
xchg
fdivp
stos
dec
rolb
loop
test
loop
das
or
js
inc
inc
inc
mov
xchg
ficoml
decb
mov
fsubrs
out
push
mov
outsl
cmc
out
sbb
adc
into
mov
mov
test
cmp
sbb
xchg
lock
int
sbb
fmul
enter
mov
adc
add
adc
test
mov
and
idiv
std
aas
js
lock
sbb
addb
test
mov
push
test
sbb
adc
test
add
inc
adc
hlt
lahf
shll
ja
pop
gs
fistpll
xchg
scas
call
jns
pop
inc
sbb
rolb
or
dec
rorl
pop
call
repz
mov
out
and
outsb
xor
pop
aaa
and
pop
mov
hlt
pushw
mov
push
les
dec
pop
push
push
inc
cmp
inc
mov
mov
orb
inc
fldt
fs
and
sbb
sarb
mov
mov
addr16
addl
sub
or
jns
inc
je
jecxz
jge
xchg
lahf
lods
int3
cmp
mov
adc
cld
neg
insl
cmp
and
movsl
adc
dec
test
adc
lods
mov
lea
cmp
hlt
cwtl
pushf
popa
xor
addr16
loope
jns
pop
leave
adc
mov
mov
jo
or
bound
mov
push
fmuls
in
push
sbb
push
or
mov
filds
leave
xchg
and
sbb
xlat
sbb
jge
dec
roll
fwait
mov
cs
inc
shlb
les
in
dec
cmp
fwait
ljmp
pop
aaa
cmpsb
idiv
ficoml
add
ret
jge
test
ret
ds
jae
lock
mov
rcrb
and
mov
inc
push
fildl
test
scas
mov
in
mov
jmp
dec
jmp
inc
mov
jne
shl
test
sub
mov
xorb
pop
add
in
ljmp
mov
sarl
loope
into
cmp
loop
repnz
sub
fwait
imul
jle
push
fadds
cmpl
out
mov
ljmp
pop
jg
mov
jb
cs
mov
rclb
je
lods
cld
jb
add
pop
pop
outsb
das
mov
sub
push
les
pop
subb
dec
add
mov
rcll
mulb
pop
fidivrs
addr16
addr16
jns
subl
dec
and
loope
adc
fwait
inc
fnstsw
movsb
scas
pushfw
jecxz
loope
cmp
sub
and
shl
mov
ret
in
aaa
and
push
cs
mov
clc
in
fiaddl
cmp
jmp
jge
xchg
sti
mov
adc
cmp
test
lea
sbb
pusha
mov
gs
fbstp
adc
sbbb
cmpsl
mov
rcr
mov
into
imul
mov
gs
pushf
mov
pop
fnstsw
mov
loop
push
mov
lcall
inc
aaa
test
pushf
subl
lods
push
bound
ret
lock
mov
dec
jo
cwtl
loopne
lcall
dec
call
es
mov
test
adc
or
inc
daa
mov
sub
mov
mov
insb
pop
mov
lock
pop
addr16
jl
outsl
jg
cld
mov
imul
lods
xchg
js
jl
pop
clc
incl
mov
mov
insb
lret
movsl
fstpl
adc
neg
add
push
xor
addr16
aaa
push
stos
aas
decl
pop
cmpsb
daa
jmp
lods
mov
sub
xor
data16
push
ret
rolb
aas
mov
rcr
sub
mov
pushf
cmp
and
pop
shll
and
cs
or
cmp
nop
pusha
add
clc
gs
or
adc
dec
push
dec
unpcklps
xchg
xor
inc
mov
movsb
mov
fimull
push
inc
gs
push
loope
sbb
gs
add
fstpt
pop
test
mov
aam
roll
lds
inc
sub
pushf
pop
inc
fucomi
movb
cli
jo
incb
lock
in
or
jl
jno
rorl
loope
popf
test
jns
push
adc
xchg
ljmp
sbb
into
sahf
es
lods
fbstp
adc
mov
test
leave
sub
pop
and
mov
sbb
cmp
inc
fst
sbb
mov
popa
push
add
add
lahf
das
mov
int3
jmp
in
mov
jge
movsb
push
cwtl
or
mov
cmc
cmp
dec
inc
sahf
cmc
dec
sbb
fildll
stos
xor
mov
and
adc
sub
lcall
sahf
std
pop
popa
fisttpl
pop
lret
inc
adc
and
hlt
inc
cmc
ret
ret
sbb
adc
and
dec
lcall
mov
sbb
push
xor
rorb
std
lea
mov
cmp
dec
or
repz
sbb
sbb
add
idiv
or
pop
or
bound
shl
adc
popf
decb
mov
push
test
insl
aam
cmp
scas
ljmp
in
jmp
mov
inc
jmp
rcrb
cmc
negb
repz
dec
pop
push
inc
cmp
test
es
add
inc
mov
inc
mov
aas
jmp
lock
xchg
ja
nop
in
bound
out
dec
mov
adc
insb
in
ret
jge
fwait
adc
jmp
ret
xor
push
pop
xchg
add
icebp
mov
mov
xor
inc
les
hlt
pop
nop
or
orb
rcrl
not
testb
mov
arpl
cmp
mov
sub
and
add
adc
imul
lret
jbe
loope
and
in
mov
adc
loope
mov
sub
xor
in
mov
xor
cltd
xchg
cmc
cltd
and
inc
aaa
repz
mov
adc
pop
jge
push
in
xlat
in
jo
outsb
or
jo
adc
push
push
mov
mov
jg
push
loop
mov
dec
jo
loope
mov
test
movsb
xchg
and
je
daa
sbb
loop
cmc
or
add
sbb
inc
push
pop
jo
mov
xchg
cmp
adc
add
xchg
cmp
pop
ja
subl
jbe
jmp
mov
mov
or
lods
jbe
test
mov
push
jle
lret
hlt
popa
arpl
fnstcw
arpl
mov
lahf
stos
test
mov
inc
shrl
pushw
loopne
addb
sub
inc
sub
sbb
ret
stc
adc
xor
repz
sti
ret
jmp
push
pusha
out
jns
jle
and
mov
dec
es
stos
add
or
xchg
cmp
clc
push
jl
int
lret
or
js
movsb
inc
lcall
adc
push
dec
mov
outsl
or
in
movsl
mov
stos
inc
int3
sbb
push
std
adc
lods
sti
lea
andl
cld
call
jb
pop
frstor
lods
in
push
out
sbb
pusha
jbe
das
mov
outsb
fwait
les
mov
fcomp
sub
mov
sub
fildl
ljmp
mov
push
mov
loop
or
adc
add
xchg
clc
insl
push
jl
push
pop
cmp
push
xchg
pop
push
mov
dec
dec
mov
fsubrs
inc
movsl
push
cmp
aam
fsubrl
hlt
push
cmp
push
jle
xchg
pop
pop
pop
lret
pop
add
jnp
lock
mov
add
mov
push
xchg
je
inc
jbe
adc
test
xchg
mov
das
dec
iret
lock
push
dec
movsb
fdivrl
jecxz
in
fmul
insb
pop
adcl
call
ja
push
cmp
fstpt
mov
aas
movsl
in
shl
nop
mov
outsb
fnstsw
mov
xor
icebp
fisttpl
inc
jle
ss
mov
pop
fidivl
inc
movsb
jp
sbb
fidivrl
mov
lods
pushf
xor
fcomi
xor
push
lea
enter
xor
adc
mov
sbb
je
push
movsl
pop
dec
mov
mov
cmp
add
add
mov
lret
inc
movsl
nop
or
inc
test
jnp
adc
sub
in
or
sbbl
pop
jp
mov
xor
jno
lret
bound
sub
pushl
leave
in
push
inc
lret
mov
mov
out
and
mov
test
jns
pop
lahf
aaa
adc
jle
xchg
loopne
and
pop
outsl
lahf
ret
gs
cld
add
sub
pop
inc
xor
loopne
push
adc
push
add
movsl
inc
sub
push
lock
push
loope
pop
add
test
dec
popl
xchg
pushf
test
adc
cli
cmpl
xchg
lea
fnstsw
lret
test
jle
mov
bound
dec
cld
popf
mov
and
mov
sub
dec
sbb
and
cmp
pop
mov
fisubrl
adc
setae
stos
sbb
es
popf
mov
ret
pop
pop
cmp
mov
pop
out
or
jno
outsl
sub
xchg
adc
jbe
ja
stos
dec
adc
es
mov
inc
pop
xor
int
sahf
or
pop
inc
ret
out
and
movsl
push
inc
push
mov
jmp
je
cwtl
inc
je
jne
daa
xchg
cmp
in
jl
lock
mov
push
or
push
adc
xor
jo
push
les
les
xchg
jo
fiadds
aaa
dec
jbe
push
jne
pusha
cmp
test
fsubs
jnp
fcomi
out
or
dec
out
jmp
dec
pop
das
jl
repz
out
cmp
addr16
or
popf
gs
je,pn
push
sub
insl
test
outsl
into
dec
xchg
pop
mov
sbb
xlat
mov
adc
mov
xchg
xchg
jns
and
adc
repz
inc
and
insb
das
lcall
dec
mov
repz
sub
jmp
lahf
das
lcall
pop
ret
dec
adc
lock
mov
lods
test
pop
add
jl
addl
shr
cli
push
stos
cs
xchg
cld
sbb
nop
jns
xchg
jp
fwait
dec
dec
orb
xor
push
ret
pop
inc
cmp
push
rcrl
push
inc
arpl
stc
ret
mov
mov
adc
stos
pop
push
xchg
ret
fiaddl
bound
add
push
jmp
mov
stos
fstpt
inc
inc
or
mov
lods
loop
inc
xor
add
and
adc
adc
push
sbb
clc
xchg
pusha
dec
add
rcll
in
or
stc
sti
inc
pusha
dec
rclb
clc
adc
jle
daa
test
inc
push
push
dec
mov
dec
movsl
mov
enter
mov
std
test
xchg
inc
jl
daa
mov
clc
outsl
sub
mov
int3
das
mov
cltd
pushl
sbb
inc
notl
lds
pop
rolb
popa
inc
insl
rcll
sbb
push
push
adc
aad
loopne
jo
aaa
movsl
inc
icebp
xor
cmc
fisttpll
sbb
mov
in
mov
sbb
sub
mov
or
aam
pop
les
cltd
sbb
dec
loopne
orl
xor
js
push
pop
inc
ja
pop
jb
lea
inc
enter
push
rolb
mov
push
lret
push
iret
or
sub
ret
lds
movsl
mov
xor
fiaddl
incl
adc
sbb
ret
lods
outsl
sbb
dec
jg
scas
mov
lahf
loope
mov
aad
xor
inc
mov
scas
sbb
fdivr
fbld
mov
fisubs
or
fstpl
and
fistps
cmpsb
addr16
fs
dec
mov
jno
loope
in
pop
or
movsb
js
xor
or
inc
leave
subb
loop
js
xor
pushw
pushf
jb
cs
push
push
jno
les
sbb
mov
adc
dec
aam
pop
dec
call
push
mov
out
pop
in
jnp
inc
outsl
push
push
jbe
and
pushf
pop
cmp
cmp
mov
add
lret
lock
and
jg
dec
and
inc
cmp
mov
clc
dec
dec
xchg
insl
out
xchg
adc
pop
sbbl
or
and
and
add
mov
cmp
pop
je
push
mov
mov
sub
ljmp
mov
fistps
mov
jmp
jg
popa
or
xor
lods
mov
lcall
inc
dec
stc
mov
mov
push
xchg
ret
pop
dec
int
shll
loop
dec
push
test
fimuls
push
je
lods
movsl
scas
ret
xchg
arpl
mov
xchg
es
punpckhbw
or
shr
insl
jg
icebp
xchg
xor
ja
cmp
jmp
shlb
push
mov
jge
nop
inc
cmp
add
hlt
xchg
movd
add
inc
mov
cmpsb
call
mov
ja
sbb
rorl
cmp
push
inc
out
mov
mov
mov
add
xor
imul
push
or
push
arpl
sbb
fimuls
repz
adc
xchg
into
test
in
push
stos
mov
xchg
lret
lds
add
mov
or
push
inc
negl
add
mov
push
push
hlt
mov
add
cli
sbb
sbb
add
mov
loopne
mov
popf
mov
push
out
test
push
jae
adc
cmp
fisubs
add
ret
xchg
rcll
adc
xor
test
popf
jae
mov
imul
iret
sbb
sbb
and
lret
movsl
arpl
cmp
pop
cmp
rclb
sbb
dec
outsb
xorb
testl
aad
add
outsb
shlb
sub
jmp
cmp
and
mov
jnp
cli
add
scas
fsubrs
mov
cmp
addl
mov
hlt
adc
insb
sbb
int
mov
cli
fnstsw
add
loope
cmc
push
inc
cltd
aaa
adc
mov
daa
push
cmp
lea
sarb
sbb
in
and
loopne
jmp
adc
cmp
dec
push
mov
mov
mov
sub
xchg
sbb
int
test
push
lcall
add
fcoml
aas
xchg
cmpsb
outsl
adc
das
movsl
lahf
dec
imul
outsl
lods
faddl
test
and
fistpll
mov
dec
aaa
loop
cmc
inc
mov
pop
add
add
mov
cli
dec
or
icebp
xor
push
inc
cmp
fcoms
or
mov
das
cs
out
push
cwtl
xor
sub
stos
add
mov
outsl
fadd
push
aam
mov
imul
loopne
jle
xchg
cmpsl
push
out
and
cmp
push
sti
aam
xchg
fisttps
test
fldcw
fildl
pop
jne
push
and
fwait
mov
cwtl
xchg
and
inc
ret
pop
cmp
add
cmpsb
pop
pop
add
mov
js
adc
sbb
sar
sbb
push
mov
lret
mov
pop
add
dec
lods
add
xchg
fists
pop
je
push
jmp
mov
fbstp
dec
jmp
insl
and
testb
outsl
push
adc
lcall
scas
pusha
xchg
fcmovb
rol
add
sbb
or
lods
add
pop
mov
ret
dec
mov
xor
lea
xor
out
mov
andl
shll
mov
rclb
mov
cli
imul
mov
add
and
pop
lcall
mov
sbb
jle
pop
and
jne
push
movsb
adc
icebp
cmpsl
jbe
sub
mov
pop
stc
sahf
rcl
push
jp
adc
sub
lds
xor
xchg
or
cwtl
cmp
pop
pop
dec
inc
cmp
add
mov
or
cmp
jl
test
adc
ds
xchg
mov
fwait
dec
aad
out
fsubl
sbb
inc
adcl
jbe
jl
push
sub
leave
inc
cmpl
inc
lock
stos
jbe
les
xchg
mov
into
icebp
mov
or
cvtpi2ps
xchg
loop
and
aad
cld
cs
stc
sbb
scas
or
popa
sbb
js
push
pop
fidivs
pop
call
fisubrl
adc
jae
add
rolb
mov
mov
stc
test
add
xchg
or
fiadds
mov
dec
iret
xor
jno
test
ja
repnz
xchg
sbb
pop
mov
cli
and
dec
std
je
addr16
add
je
sarl
xchg
mov
fs
and
bsf
lds
push
cmp
jbe
inc
push
adc
test
mov
clc
popf
dec
xchg
fdivrs
lret
ja
in
inc
ja
adc
mov
xorb
push
add
insl
pop
push
mov
mov
sbb
jge
jle
stos
push
jnp
iret
sub
stc
pop
jbe
cld
dec
add
lahf
push
movsl
lea
push
fmull
aam
jno
sub
push
clc
jle
mov
stos
dec
push
fmuls
inc
lea
inc
jecxz
mov
dec
push
xor
and
pop
adc
and
enter
std
pop
loop
cmp
and
mov
scas
imul
inc
jns
push
fst
jp
filds
aas
mov
shlb
mov
stos
push
lret
sti
std
inc
ljmp
xchg
mov
pop
pop
sbb
jbe
mov
mov
psllq
scas
dec
adc
addl
or
cmc
jle
imul
mov
ds
dec
in
push
lock
pusha
lods
push
adc
inc
repnz
mov
jmp
cmp
pop
push
aas
mov
icebp
loopne
xchg
or
cld
push
fstps
imul
ret
outsb
adc
pop
jp
adc
ljmp
nop
jle
lock
out
or
out
xor
je
mov
sub
sub
lret
jns
aaa
lock
adc
sbb
push
out
mov
jecxz
js
daa
add
test
sahf
into
xchg
xchg
pop
cmp
or
xchg
insb
push
cmp
mov
pop
pop
mov
mov
cmp
and
mov
lods
out
lods
push
out
repnz
mov
sub
pop
call
push
dec
add
daa
lret
mov
or
or
cli
inc
sbbl
imul
pop
dec
push
dec
popf
sti
push
sub
stos
xor
shl
repz
mov
mov
mov
push
mov
jnp
jno
mov
outsl
adc
xchg
mov
sub
std
xchg
sti
xor
mov
imul
mov
clc
roll
mov
clc
and
cld
je
test
jg
lds
std
mov
inc
stos
hlt
pop
add
test
inc
leave
loopne
mov
lods
xchg
mov
movsb
outsb
movsl
sub
sub
mov
push
testl
cmp
cmp
pop
jnp
fstl
sbb
ljmp
jl
out
inc
mov
xchg
popf
jl
pusha
fildl
pop
dec
xor
lea
mov
inc
or
rcll
and
xor
sub
push
sti
sub
push
sti
pop
in
mov
push
jo
rclb
push
sbb
enter
xor
add
in
push
pop
inc
push
cmp
dec
dec
cld
insl
mov
and
nop
adc
sbb
pop
dec
je
mov
mov
lret
daa
movsl
loop
bound
jge
sub
test
into
js
inc
aaa
jo
xchg
xor
ficompl
fidivrs
nop
jle
or
cmpsl
dec
fcomip
adc
push
int
add
mul
scas
cmp
fdivrl
movsl
cmp
cmp
ss
and
shl
mov
push
cmc
mov
cs
loop
daa
lods
aaa
rcll
push
icebp
or
loopne
and
inc
pop
jo
imul
mov
cld
cmp
call
roll
ss
stos
mov
jle
mov
stc
daa
je
mov
pusha
push
fdivl
xlat
cmp
iret
data16
add
std
mov
rorl
sbb
sbb
add
lds
mov
adc
fbld
fdivrl
repnz
mov
pop
adc
inc
lods
flds
fcoml
adc
fsts
jne
add
ret
push
rcll
or
test
dec
pop
mov
icebp
inc
push
pusha
mov
add
push
sbbb
outsl
mov
inc
in
lea
data16
mov
cmpl
jle
pushf
xchg
shl
dec
dec
sub
cmp
cmpsb
int3
icebp
push
mov
insb
mov
inc
jecxz
cmp
mov
inc
shll
jmp
or
pop
push
lret
fsts
dec
rolb
mov
dec
xor
dec
incl
sbb
mov
adc
sbb
mov
sbb
sbb
xchg
imul
cmp
mov
lods
mov
mov
jle
add
inc
icebp
dec
lock
dec
sub
mov
mov
es
and
sub
cmc
pop
inc
xlat
mov
push
jbe
inc
adc
outsb
inc
mov
les
bound
gs
ss
xchg
sub
pop
out
jmp
insl
pop
aam
in
inc
hlt
inc
adc
clc
ljmp
push
lcall
push
push
mov
adc
xchg
dec
push
jne
test
mov
mov
clc
mov
xor
and
sub
mov
sti
xlat
ja
sub
std
jg
add
dec
outsl
xlat
or
popa
adc
sbb
in
in
in
aaa
mov
push
push
mov
cmp
push
outsl
andb
dec
jl
xor
outsl
inc
bound
lds
push
sti
or
int
bound
fprem1
movsl
rcrb
std
and
fs
les
lcall
std
add
jg
in
mov
stos
xchg
mov
add
push
lret
dec
or
clc
adc
scas
jle
fucomip
cmp
push
les
add
test
bound
mov
hlt
add
and
inc
push
and
push
and
rcrb
movsl
fnstsw
outsl
cwtl
jmp
and
jg
gs
or
loop
js
pop
fwait
out
fisubrl
sbb
jecxz
xchg
add
mov
pop
pop
insl
loop
mov
xchg
or
lock
xchg
cmpsb
cmp
movsb
mov
rolb
push
mov
pop
jmp
int3
int
push
insl
in
mov
push
fucomp
rcll
pop
push
pop
ret
rclb
jo
pop
adc
add
icebp
cmp
pop
cli
mov
push
jg
mov
into
xlat
lock
movsl
jp
iret
incb
mov
mov
fstps
jge
inc
cmpsb
adc
mov
loop
std
pop
mov
mov
das
or
mov
std
stos
iret
outsb
loope
inc
das
rorb
out
enter
jo
stos
or
mov
xor
aam
mov
dec
inc
adc
out
mov
mov
repnz
or
jo
insb
or
mov
lds
jl
adc
jne
out
roll
out
push
push
push
aam
loope
jae
fisttps
push
sbb
add
out
pop
jno
mov
imul
rorl
push
fdiv
in
in
add
or
mov
dec
cld
sub
push
jge
add
cmp
mov
push
jne
and
mov
and
sbb
fildl
shl
nop
sbb
mov
outsb
sti
pop
addr16
jle
out
ds
mov
outsl
fldt
in
push
loop
ss
dec
mov
mov
test
fdivs
sbb
loopne
pushf
push
ljmp
push
or
and
xchg
mov
mov
mov
sbb
mov
sbb
mov
cwtl
ljmp
inc
or
test
jmp
hlt
test
imul
jle
mov
pop
mov
push
dec
mov
cld
imul
mov
es
adc
adc
aaa
outsl
add
dec
xor
xchg
dec
sub
ss
fstpt
add
cmp
test
mov
jl
sub
lcall
test
movsl
outsb
jl
lods
sbb
cli
stc
adc
fdiv
jecxz
sub
mov
fldcw
into
adc
lret
idiv
jo
rolb
cmovb
rcrl
push
add
add
dec
push
push
and
loop
out
or
sub
pusha
push
inc
ret
cmp
outsl
aad
adc
pop
push
mov
pop
dec
mov
orl
mov
fimull
iret
stos
in
shrb
lock
or
and
sbbb
pop
push
jge
or
in
inc
jnp
mov
scas
test
jne
loopne
lea
add
dec
or
fstp
mov
pop
or
mov
dec
add
pop
pop
sbb
das
cmpsb
call
or
in
aaa
or
or
mov
out
pop
jb
mull
out
out
fcmovb
mov
sub
sbb
add
and
je
mov
and
adc
add
les
push
aam
adc
iret
dec
inc
or
mov
movsb
js
mov
movsl
dec
pushf
sub
mov
push
ficomps
dec
fistpl
cs
pop
inc
sbb
popf
test
clc
mov
sbb
sub
in
xor
outsb
add
outsb
mov
add
arpl
and
mov
mov
mov
and
add
xchg
out
add
xor
xor
push
movsb
pop
aam
xchg
fdivrp
loop
shll
xor
push
adc
loope
fadd
out
sar
stc
mov
and
ja
clc
push
push
adc
cmp
pop
add
ljmp
cmp
mov
xor
mov
std
mov
bound
add
scas
inc
mov
loop
and
jb
inc
sbb
ret
pop
or
cmp
add
mov
test
pop
lcall
mov
mov
sub
icebp
mov
jl
lods
cmp
stos
icebp
or
rol
sub
mov
fists
mov
sbb
je
mov
rcr
into
ret
push
dec
fbld
push
pop
cs
movsl
add
cmp
lock
and
mov
ret
test
add
dec
xchg
in
adc
addb
faddp
stos
dec
dec
and
inc
mov
in
fbstp
lahf
rcl
dec
std
inc
fsub
jecxz
pushl
push
daa
fidivs
adc
push
xchg
out
adc
movsl
imul
lcall
repnz
pop
mov
add
in
ds
push
xchg
xchg
pop
inc
ljmp
imul
dec
mov
dec
pushf
jmp
or
push
mov
pop
andl
loop
jbe
cmp
inc
mov
xchg
jno
pushf
cmpsl
push
cmp
ret
xchg
add
mov
std
aaa
flds
jg
jl
lahf
adc
sbb
add
fldl
aas
movsl
sub
mov
xchg
dec
adc
push
dec
js
aam
sbb
and
jns
add
add
out
adc
adc
inc
ja
test
inc
sbb
outsl
mov
loop,pn
jbe
mov
pop
fisttps
inc
and
mov
dec
push
mov
movsl
mov
ret
sub
push
std
push
mov
aam
add
jp
icebp
mov
or
lds
adc
and
outsb
xor
mov
fstpl
fimuls
push
fistps
stc
aam
jmp
xchg
or
int
adc
dec
int3
stos
pushf
push
sti
jbe
push
es
pop
icebp
popa
or
call
inc
inc
out
jb
addr16
in
and
adc
xchg
cwtl
jnp
lahf
das
mov
xlat
push
dec
xor
les
jg
dec
pop
xor
mov
nop
or
adc
xor
mov
mov
push
test
stos
add
outsl
pop
sbb
and
mov
cmpl
or
push
je
jl
fists
and
cli
add
xor
mov
lock
loope
mov
sahf
lds
fsubrs
mov
je
mov
dec
nop
jmp
pop
or
shrl
int
lret
push
lods
mov
push
stos
mov
jbe
mov
ds
loope
inc
ret
ljmp
add
or
movsl
cmp
add
inc
mov
loop
pop
jnp
fiaddl
das
adc
push
ss
gs
scas
loopne
or
test
rcrl
sub
inc
in
jae
mov
or
xor
mov
mov
adc
loope
jp
psrad
adc
and
xor
cmp
mov
ret
jbe
xchg
hlt
fistps
movsb
addr16
jg
cli
mov
mov
or
pop
fildl
cmpsb
lret
into
cs
mov
mov
ret
call
jne
mov
mov
and
pop
clc
push
fnstsw
cltd
mov
mov
in
ja
imul
outsl
loop
xchg
inc
mov
xor
jmp
or
push
shrl
out
mov
sub
clc
or
out
shld
pop
mov
fdivs
scas
sahf
or
loope
dec
fsubrl
loopne
mov
or
nop
lock
int
into
push
push
lret
adc
pop
insl
xorl
sbb
rclb
lcall
adc
lock
and
rcrb
icebp
inc
and
xlat
inc
inc
sbb
in
aaa
jbe
out
shrb
out
xor
lods
fs
cs
adc
addr16
int3
adc
xor
arpl
inc
jp
jnp
sbb
in
push
mov
cmp
and
jp
add
jns
pop
add
in
daa
movsl
and
jmp
xlat
add
cmpsb
xchg
sub
cld
mov
lds
dec
rol
mov
push
aaa
inc
jbe
mov
jno
fnstcw
outsb
loope
incl
in
and
jbe
lahf
scas
sbb
cmp
sbb
sbb
and
and
sti
stos
in
test
xchg
les
mov
pop
in
jge
sbb
lahf
iret
lods
iret
pop
mov
jp
scas
std
int3
dec
pop
int3
outsl
fdivl
mov
divl
aas
out
cmpb
add
fldt
push
nop
mov
scas
xchg
mov
mov
sub
arpl
xchg
and
lret
push
jle
mov
aam
lcall
dec
jne
push
mov
xor
add
sbb
push
ss
xchg
cli
cmpsl
dec
in
jbe
fbld
shll
js
maxps
pusha
xchg
lock
loopne
add
adc
out
jno
fiadds
or
andl
pop
xor
enter
sti
xor
inc
movsl
pop
mov
lret
dec
divl
push
xchg
jb
and
std
dec
mov
sbb
out
test
inc
mov
pop
fsubrl
rcrb
mov
sub
ret
fdiv
jnp
cltd
aaa
clc
add
movsl
sarl
push
popf
inc
xchg
or
pop
lret
cltd
arpl
push
dec
add
testb
inc
jae
jns
add
pop
js
out
mov
pushf
push
cld
dec
inc
and
flds
mov
sbb
movsl
inc
mov
pop
fcompl
andb
adc
jecxz
push
mov
sbb
push
pop
push
and
xchg
test
les
pop
in
ss
shll
aam
int
inc
mov
outsb
sbb
dec
popa
mov
fs
push
sub
adc
jbe
push
add
divb
adc
in
fldl
and
pop
jmp
xchg
xchg
jae
push
sub
jecxz
pusha
fdivl
jnp
xor
lret
pusha
xchg
aaa
shlb
cmp
sub
cmpsb
and
sub
mov
jno
push
loopne
sub
loope
or
inc
add
mov
fs
ja
adc
gs
ret
push
imul
loop
icebp
pop
movsb
fildl
or
cmp
faddl
in
dec
add
pop
ss
add
rcl
test
cmp
cmpl
loop
jbe
add
lcall
sub
cmpsb
xchg
adc
push
loopne
add
xchg
mov
outsb
ljmp
jle
sbb
mov
outsb
pop
loope
push
or
outsl
pop
push
test
cli
pop
push
and
add
incl
jb
test
lahf
cmpps
addb
loopne
adc
ss
sarl
mov
inc
sbbb
jnp
mov
fcmovne
dec
ljmp
sti
push
ljmp
inc
cmpsb
sub
cli
insl
add
mov
cs
mov
imul
mov
adc
sub
insl
faddl
into
pop
push
mov
sarb
mov
cli
and
pusha
fldt
scas
jo
inc
std
and
repnz
mov
cmp
add
insb
data16
imul
cwtl
sub
jmp
mov
mov
hlt
fstps
or
sti
test
mov
clc
movsl
push
inc
and
mov
dec
nop
xchg
mov
icebp
ja
lds
pop
mov
pushf
xor
push
mov
cmp
mov
subb
lea
mov
mov
push
xchg
or
mov
test
sub
cmp
push
flds
inc
mov
and
lea
std
mov
divl
inc
out
loope
mov
rolb
and
mov
xor
mov
or
lret
xorb
push
jmp
insb
clc
lds
jb
lcall
je
cld
dec
aam
popl
mov
mov
mov
arpl
mov
lcall
push
stc
xlat
and
cmp
cmpb
push
or
imul
xlat
cmpsb
dec
cs
mov
cs
jmp
add
shrb
std
cs
pop
jmp
cmp
add
es
xchg
jecxz
mov
xchg
or
mov
mull
test
loop
rclb
xchg
xor
jbe
mov
fwait
jns
test
insb
mov
je
xlat
jae
mov
outsb
ficomps
lahf
fldln2
mov
xchg
fisubs
sub
or
fisttps
adc
jmp
pushf
loopne
pop
mov
lock
mov
addl
push
push
cmp
push
nop
jmp
andl
pop
and
clc
out
and
dec
mov
add
sbb
call
int3
and
sub
push
pop
fisubl
xorl
pop
push
out
inc
mov
fildl
mov
lock
pop
sub
pop
cli
jg
push
pop
add
test
cld
xchg
cld
in
lds
icebp
dec
adc
mov
sbbb
es
je
jmp
mov
call
out
xor
add
jmp
into
test
outsl
push
mov
and
imul
rorl
adc
jae
pop
mov
push
push
repz
fsubrp
push
add
jbe
and
mov
push
into
adc
sbb
mov
inc
push
fnstcw
test
js
mov
mov
shrl
pop
pop
sbb
in
jp
inc
push
push
push
aam
cmp
adc
dec
ficoml
aas
in
clc
das
mov
insl
mov
mov
mov
out
ret
popf
cwtl
xorl
mov
je
pop
inc
mov
push
loope
dec
push
pop
dec
inc
fwait
stos
daa
fwait
jecxz
mov
ds
insb
in
adc
push
adc
mov
or
imul
push
mov
vmwrite
rcr
test
mov
mov
pop
sub
sub
inc
mov
ja
sub
shlb
cmpsb
call
out
pop
jle
ja
rol
mov
jae
mov
sar
ret
jg
imul
push
dec
cmp
sarb
pop
mov
mov
into
jg
add
dec
enter
jl
sub
insb
sub
test
in
out
int
pushl
scas
sub
mov
ljmp
and
lock
lahf
pop
dec
aaa
mov
mov
inc
das
and
mov
int
stc
or
xlat
and
add
into
cmc
rclb
in
lahf
cltd
lret
add
xchg
call
xchg
movaps
incb
jo
mov
and
or
or
or
sbb
or
push
mov
mov
dec
and
add
loope
mov
imul
mov
or
jl
out
sub
sub
sub
mov
ja
mov
and
inc
pusha
pop
pop
aas
adc
push
clc
xchg
add
mov
mov
ds
mov
xor
das
shll
out
add
xchg
cmp
xor
mov
int
mov
cmc
loop
jbe
jl
imul
xor
ds
std
sub
push
mov
leave
clc
xor
or
cmpsb
mov
stos
and
or
les
in
cld
icebp
xchg
jbe
cmc
outsl
fldl
mov
pop
xchg
stos
inc
xchg
out
mov
jg
pop
pop
mov
repnz
xor
sbb
idiv
ret
lcall
mov
mulb
incb
and
add
mov
clc
xchg
cmpsb
shll
cltd
insl
add
push
push
pop
jb
push
clc
das
inc
pop
stos
lds
mov
mov
and
or
adc
cltd
hlt
cs
insb
or
out
aaa
cmp
mov
cld
push
push
nop
int3
mov
xchg
ja
data16
jg
lods
loopne
jb
pushf
or
or
jne
arpl
jo
stos
mov
push
sub
enter
pop
pop
jp
and
or
and
push
push
or
cwtl
sub
or
xchg
add
scas
call
mov
add
rcll
out
mov
push
mov
pop
into
loopne
scas
sub
nop
mov
aam
loope
je
mov
insl
pop
pop
jp
les
mov
mov
ret
inc
fcomps
cli
fbstp
test
and
adcl
movsl
cmpsl
bound
and
sbb
ljmp
aas
adc
bnd
jecxz
mov
outsl
insl
repnz
lods
insl
stos
dec
mov
lret
test
test
enter
push
jle
fidivrs
and
inc
adc
add
or
pop
sbb
lds
aam
add
pop
aaa
jg
push
pop
mov
shll
lea
sub
stos
jo
int3
pushf
add
insl
test
movsl
mov
dec
mov
js
test
push
xchg
mov
xor
lods
pop
mov
mov
jne
testb
jg
mov
cmp
add
hlt
scas
sbb
scas
inc
add
cmp
mov
and
pop
scas
fstpt
mull
or
sahf
mov
cmp
je
outsl
cmp
jp
add
js
and
rorl
dec
faddl
add
cs
sub
sub
popa
mov
or
sub
shlb
lods
jb
pop
or
or
pop
rorb
insl
jmp
mov
and
inc
dec
loopne
dec
mov
adc
dec
lods
out
lds
mov
aam
jg
xlat
cli
scas
pushf
daa
jge
movsb
out
and
cmp
mov
inc
sbbl
jbe
xchg
and
lret
pop
fists
rol
ds
or
cli
shrb
cmp
inc
test
clc
pop
mov
sub
push
aaa
sbb
adc
push
xor
test
sti
clc
sbb
sub
sub
outsl
or
adc
mov
mov
popf
push
outsb
mov
js
ror
dec
cmpb
mov
int3
sub
xor
shll
movsb
or
call
jge
aas
fiaddl
add
cmp
add
mov
adc
dec
lret
or
xor
add
addr16
fstpt
pop
mov
pusha
push
loope
and
lock
lret
jne
std
push
fstpt
sbb
push
cmpsl
mov
dec
stos
mov
pop
fmuls
es
shlb
pop
test
test
or
push
popl
dec
mov
test
adc
lea
call
sbb
xchg
mov
pop
and
and
addb
lods
test
repnz
insb
iret
out
fnsave
aam
or
add
lea
sub
iret
sbb
sbb
jo
fs
add
out
ljmp
movsb
mov
jl
and
clc
inc
mov
jo
xchg
js
ja
cwtl
push
nop
call
sub
adc
lret
dec
int
mov
jo
ret
xchg
lods
ss
adc
jp
in
mov
aas
mov
pop
pusha
js
das
rcrl
syscall
fnsave
test
int3
iret
lcall
cmpsl
aad
inc
nop
dec
jbe
xchg
aas
inc
or
movsl
icebp
pop
lods
mov
ljmp
pop
jg
mov
sub
leave
dec
bound
cld
or
in
cld
inc
mov
sub
fdivrs
xchg
ljmp
fwait
adc
push
out
xchg
lret
mov
sbb
adc
dec
cwtl
jle
ffreep
fistpl
sbb
xor
mov
cli
sbb
sub
mov
adc
stc
scas
cmpsb
sbb
test
sub
or
adc
cmp
add
sbb
ljmp
shll
daa
and
sbb
loopne
sub
push
jecxz
dec
add
ret
add
xor
stos
xor
cmc
mov
arpl
xlat
jecxz
push
inc
jg
inc
jns
and
sbb
ds
call
pop
repz
roll
lea
enter
fstl
or
inc
adc
lea
sbb
mov
scas
jo
adc
sub
mov
pop
idivb
popl
lods
xorb
cmc
mov
sub
inc
mov
js
rcll
lods
stos
xchg
ror
mov
or
pop
mov
xchg
pushf
jnp
dec
lcall
sahf
daa
loopne
rcrb
loop
mov
adc
and
mov
sbb
pop
xor
rcrl
addr16
in
test
cmc
mov
adc
fsts
mov
jbe
mov
push
loopne
scas
ret
sti
lret
mov
inc
and
in
stos
sbb
mov
xchg
or
fnop
or
mov
add
inc
mov
loop
mov
jb
iret
sub
or
or
mov
xor
sub
sbbl
jl
or
fwait
jmp
ljmp
outsl
pextrw
nop
inc
adc
lods
adc
or
mov
adcb
add
pop
pop
call
sub
cwtl
pushw
das
cld
fstpt
roll
mov
and
adc
inc
popf
sbb
loopne
insb
pop
loopne
stos
hlt
or
xchg
outsb
test
int3
clc
push
push
call
cmc
cmp
nop
xchg
lock
mov
rorb
and
pop
adc
loopne
mov
fdivrs
aam
aas
outsl
outsb
lods
vorps
pop
fdivs
scas
mov
jne
iret
push
sub
out
or
mov
std
lods
mov
and
or
pop
sbb
das
lahf
outsl
ja
push
jmp
lods
xor
leave
jge
mov
dec
inc
or
in
cmc
push
fnsave
js
rorl
ja
ja
rcr
ror
jle
xor
in
shlb
jmp
enter
jne
cli
aaa
pop
imul
icebp
icebp
mov
insl
outsl
insb
push
sub
test
les
mov
and
pop
sbb
mov
inc
rcrl
jl
ja
sub
cs
xor
mov
loopne
jo
test
mov
xor
xchg
loopne
push
xchg
cmc
xchg
stos
pop
repnz
xlat
xchg
iret
cwtl
dec
jo
shr
add
adc
mov
jge
mov
sarl
push
out
dec
sar
out
and
stc
inc
pop
and
or
pop
sub
icebp
pop
inc
xchg
jbe
push
sti
mov
push
stos
push
into
fbstp
fidivrl
inc
push
mov
jo,pn
push
pop
outsl
sub
pop
mov
rclb
std
aad
push
inc
or
cmp
xchg
pop
cmpsl
test
inc
mov
dec
rol
jbe
inc
in
push
adc
fsubrs
mov
dec
rorb
call
dec
test
sar
jbe
cltd
fstpt
sbb
mov
adc
and
jmp
repnz
popf
cltd
adc
push
push
movsb
out
lds
add
icebp
bnd
imul
adc
call
fstps
xchg
daa
sub
or
in
out
adc
rolb
out
mov
popf
fcomp
inc
mov
dec
jge
mov
pop
mov
and
push
aaa
push
push
or
jp
int3
or
fbstp
out
in
push
dec
sar
inc
cmp
lea
pop
inc
aad
jp
fistps
mov
mov
test
sbb
inc
clc
repnz
push
mov
fbstp
mov
mov
jb
mov
movsl
push
jmp
into
repz
mov
insb
das
insb
push
aas
mov
inc
mov
cltd
jo
hlt
enter
xorl
insl
pop
cltd
pop
mov
test
repnz
push
mov
inc
sub
stos
xorl
mov
outsl
aaa
and
pushf
jbe
pop
cmp
ja
jo
mov
xorb
loope
sbb
and
or
and
and
fwait
or
and
push
jmp
fdivrl
cs
inc
clc
jbe
ljmp
inc
jae
inc
popa
adc
testl
ljmp
lea
xchg
mov
xor
aaa
dec
mov
std
or
daa
iret
xor
dec
movsl
or
xchg
jl
stc
xchg
sti
daa
sbb
add
or
jmp
insl
mov
addb
push
mov
or
mov
outsl
mov
xor
mov
fsub
mov
arpl
or
stos
aaa
insb
mov
aaa
mov
and
or
fidivl
mov
cmc
jno
push
pop
pop
inc
in
cmpsl
xchg
jg
iret
dec
add
les
les
push
pop
push
or
stos
xorl
xchg
add
sahf
out
jg
mov
inc
mov
xorb
ljmp
inc
lret
or
inc
fidivrs
cmp
bound
mov
sbb
lods
aaa
bound
pop
mov
jmp
jle
filds
js
mov
cmc
inc
shrb
fadds
loope
lock
dec
mov
gs
lret
insb
cld
cmpsb
pusha
xchg
insl
and
clc
ficomps
inc
orl
add
call
je
lret
pop
scas
fcom
lea
push
dec
arpl
push
shrb
insl
jg
cld
inc
ss
repz
int
orb
pop
and
xor
sub
out
scas
lea
dec
add
mov
idivb
rorl
loop
mov
xabort
aas
xlat
mov
mov
pop
sbb
or
push
aaa
shrl
enter
lock
push
or
fsubs
or
fdivrp
adc
fbstp
iret
and
lahf
pop
add
pop
adc
jle
rorl
pop
decl
xchg
sbb
imul
mov
mov
loopne
loopne
popf
mov
shrb
push
mov
xor
es
and
shlb
inc
mov
pop
push
xor
cmc
add
in
sub
adc
pop
out
adc
notb
inc
push
in
and
mov
push
mov
call
ret
pop
adc
mov
cmc
inc
stos
les
or
cmpsl
dec
in
xor
sbb
rorb
data16
aam
inc
mov
cli
fbstp
xor
nop
out
cmpsl
and
popf
pop
push
xchg
ljmp
stc
mov
push
xlat
xchg
push
call
jle
fistpll
mov
and
dec
jge
loopne
cmp
sahf
lret
or
clc
aas
xor
push
sbb
adc
roll
dec
dec
inc
pop
mov
or
adc
and
inc
add
incl
lcall
mov
loope
push
sbb
and
aas
ficompl
imull
rolb
pop
fdiv
jecxz
push
xchg
mov
mov
decb
xor
dec
aas
mov
jno
jae
mov
xchg
pop
xor
gs
pop
je
xchg
jl
inc
sti
add
in
jbe
pop
or
arpl
sti
dec
sub
aad
test
inc
add
sar
inc
mov
mov
bound
mov
cmp
lret
mov
sbb
jmp
pushf
dec
ds
cmc
aam
adc
mov
sbb
test
icebp
pop
rol
lcall
fs
fildll
fcompl
xor
ja
jno
or
rolb
aaa
je
gs
mov
jl
dec
sbb
les
stos
test
inc
push
imul
pop
pop
mov
xor
out
out
inc
add
das
pop
and
or
fcmovbe
lea
repnz
pop
adc
sbb
rorb
add
or
sbb
push
mov
in
xchg
inc
inc
mov
lds
stc
and
inc
mov
add
inc
bound
fiadds
incl
add
daa
les
mov
ljmp
pop
xchg
int
inc
mov
ret
sub
jge
mov
pusha
mov
jle
lods
and
sub
dec
test
mov
xchg
daa
mov
push
outsl
adc
and
adc
lea
sbb
stos
add
das
mov
xchg
mov
xchg
mov
push
xchg
sbb
ss
jg
imul
mov
xchg
and
mov
adc
mov
sarl
add
test
sar
dec
sbb
add
filds
jecxz
mov
lock
dec
outsl
mov
test
pop
dec
sbb
mov
xchg
xlat
dec
popa
adc
xor
or
loop
adc
testb
addl
or
or
out
push
mov
mov
cmp
sub
xor
addr16
lcall
stos
inc
pop
dec
mov
mov
stos
inc
mov
icebp
pop
scas
jb
ljmp
xchg
dec
leave
mov
in
add
fstp
pop
or
xorb
sar
aam
push
jmp
jle
cmp
xchg
xchg
hlt
sbb
adc
mov
jbe
adc
insb
int3
adcl
lcall
inc
cltd
in
divl
inc
js
lds
testb
dec
fwait
cwtl
out
pop
les
sti
lods
out
lret
outsb
fwait
mov
jb
sub
sti
ss
in
inc
adc
inc
push
js
dec
push
int
push
lock
pop
fcmovb
cmpsl
test
xor
push
mov
add
pop
lea
test
iret
or
call
jbe
mov
sbb
mov
or
push
mov
pop
repz
cli
push
jle
cmp
and
or
sbb
jl
cmp
push
into
sub
popa
cmp
xchg
out
xchg
fwait
loopne
or
scas
in
movb
xlat
add
movsl
jl
or
mov
fidivs
push
or
fcmovnb
in
daa
shlb
pop
icebp
lea
andb
test
lods
push
in
mov
xlat
ss
pop
jp
mov
mov
sub
and
insl
out
fldl
pop
jp
sarl
divl
aad
pop
sbbb
inc
adc
cli
rcrb
sahf
mov
mov
sub
jmp
scas
pop
adc
shl
sahf
test
movsb
rcrb
sub
push
cli
decl
rcrl
adc
mov
loope
jne
stos
sub
mov
into
mov
ljmp
dec
adc
jbe
sarb
outsl
mov
xor
insb
ret
das
adc
stos
adcl
jge
sahf
or
subl
mov
ja
adc
cmpl
addl
jb
mov
xchg
push
cmp
or
or
leave
mov
aam
notb
cli
jno
int3
rcr
jp
mov
in
outsb
lcall
jg
pop
jecxz
lds
out
test
arpl
test
adc
popf
ljmp
adc
xchg
and
pusha
mov
sub
cmp
push
test
js
icebp
pop
js
jbe
shll
scas
aam
xor
adc
dec
jnp
pop
loopne
cld
out
sbb
lods
and
cmp
xchg
push
xchg
cwtl
inc
dec
loopne
xchg
sti
stos
call
xchg
ljmp
in
push
xchg
pop
stos
mov
je
cmp
int
mov
mov
adc
mov
sbb
or
jg
dec
sbb
pop
push
inc
or
and
lea
cmpsl
fiaddl
xorb
add
and
mov
rcrb
push
movsl
inc
or
in
mov
fisubs
insl
inc
movsb
dec
andb
add
ret
adc
jg
insl
dec
inc
fisubrs
cmp
or
xchg
lret
cvtps2pi
mov
sub
orl
ja
outsl
sbb
push
aad
inc
cltd
mov
jecxz
mov
xchg
pushf
sti
std
xor
xchg
inc
emms
pop
mov
sub
sbb
sub
xor
push
xchg
mov
ljmp
enter
push
std
fistpll
sahf
cld
gs
pop
inc
fidivrl
lcall
cltd
cmp
cmp
outsl
in
ret
mov
jns
mov
aam
jg
push
xor
sbb
push
and
lret
pusha
xchg
test
cmp
or
adc
adc
lds
inc
lods
inc
jnp
mov
dec
ret
aad
mov
add
call
insl
adc
mov
loopne
popf
jmp
inc
or
pop
push
xchg
jno
in
add
test
test
addl
daa
movsb
jmp
mov
add
or
dec
add
inc
push
and
pop
in
addr16
sbb
cwtl
xor
es
adc
mov
imul
pushf
js
daa
mov
xor
push
ja
sbb
add
mov
stos
mov
mov
stos
das
sarb
stos
dec
inc
inc
mov
mov
decb
dec
dec
jecxz
push
cmp
jmp
push
cltd
jne
mov
pop
dec
jae
mov
iret
jno,pt
mov
inc
or
xor
mov
jp
sub
lea
sbb
mov
inc
jg
and
dec
sub
pop
cmp
stos
inc
jecxz
cld
pop
loope
mov
mov
and
insb
js
pop
adc
cmp
into
clc
pop
js
xor
cs
sub
hlt
das
add
insl
jge
std
stc
add
dec
xchg
rcrl
dec
push
movsl
jg
fnstcw
and
pop
mov
ljmp
arpl
movb
adc
inc
std
data16
aad
clc
js
add
int
cmp
cli
mov
xchg
scas
into
mov
mov
push
push
stos
lcall
in
int3
mov
int3
shlb
xrelease
pop
inc
jae
js
je
adc
xor
pop
mov
orl
xchg
shlb
aam
in
push
sub
cmpsb
xor
ja
into
sbb
add
dec
add
testb
ret
xchg
push
push
test
mov
cld
mov
dec
push
sti
push
je
test
and
push
cld
lods
cwtl
sub
mov
mov
push
clc
mov
sti
adc
pop
pop
stos
push
ljmp
pop
stos
mov
addl
and
loope
fidivl
sarl
add
hlt
in
rcrb
push
das
mov
inc
insl
mov
negl
mov
lcall
dec
cltd
sub
repnz
sbb
je
rolb
pop
pop
aaa
xchg
mov
mov
jo
pop
inc
inc
lock
adc
pop
ficoml
out
add
in
adc
ret
xor
fildl
repz
scas
mov
jp
xor
mov
not
fildll
test
pop
or
mov
pop
mov
mov
clc
leave
or
call
sbb
out
stos
push
cld
ja
push
dec
in
push
mov
rcrb
aaa
sub
push
mov
test
ljmp
ja
loope
filds
and
imul
inc
mov
imul
mov
mov
sub
in
loop
xchg
mov
mov
push
test
sbb
in
or
into
sarb
mov
rclb
or
and
negb
push
push
mov
fbstp
push
dec
push
es
and
xchg
in
subb
push
push
jbe
out
push
mov
sub
rclb
mov
mov
bound
scas
and
jp
inc
fst
pop
sub
test
out
mov
dec
jne
or
pop
das
lods
clc
mov
xchg
je
fidivrl
stc
mov
and
mov
push
dec
mov
jg
pop
pusha
add
xor
in
mov
or
sbbl
sub
in
push
ds
lret
daa
dec
adc
mov
in
negb
add
mov
loop
mov
outsl
jge
and
sbb
jmp
jb
mov
inc
xchg
jle
inc
adc
movsl
jg
in
jle
push
xchg
add
mov
sbb
loop
cmc
mov
inc
scas
inc
daa
cld
outsb
mov
cli
call
mov
jle
dec
add
cs
ds
cli
bound
fstl
sub
movsb
icebp
ret
jge
subl
lea
or
pop
or
lcall
ret
push
repnz
pop
stc
pop
mov
add
mov
jmp
stos
ror
push
cmpsb
scas
enter
push
lret
dec
add
sbb
pop
sbb
mov
test
xchg
adc
aaa
out
push
push
sbb
or
jne
and
push
std
cmc
inc
push
fs
mov
inc
mov
pusha
xor
or
ljmp
mov
dec
ja
movsb
add
sarl
clc
cmp
dec
insb
dec
jo
subl
push
jo
ret
dec
outsb
fildl
in
and
out
push
mov
lea
icebp
cmp
mov
pop
push
dec
repz
fldl
jmp
mov
xor
jg
or
add
ja
xchg
mov
les
sub
adc
int
add
dec
pop
push
es
jle
test
sub
std
push
icebp
jnp
jb
mov
mov
bound
inc
add
int3
push
and
inc
test
les
mov
out
jb
mov
bound
jne
sbb
xchg
add
push
add
cmpsl
js
adc
mov
sbb
xchg
jns
test
int
inc
mov
ljmp
and
jne
stc
pop
pop
pop
test
div
or
and
fildll
mov
lods
lock
adc
sub
ja
stos
mov
shl
sbbl
das
les
mov
out
xor
cld
and
test
xor
add
rcrl
fidivrl
pop
dec
mov
jecxz
cmpsb
or
std
neg
popf
fisttpl
jne
or
insb
push
pop
cmc
mov
mov
mov
xor
test
test
ja
pop
mov
lock
daa
sub
mov
das
adc
cli
flds
cmc
fwait
pop
insl
loope
loope
test
ja
repz
jno
xchg
mov
insb
or
aaa
adc
hlt
cmp
add
lcall
jmp
mov
add
sub
clc
and
mov
clc
pop
sbb
roll
sbb
mov
mov
mov
stos
sar
add
jge
in
xor
cld
rcrb
xor
sbb
mov
add
cltd
mov
lret
push
adc
add
sub
inc
mov
mov
cmp
and
jo
pop
xor
imul
test
fmull
mov
mov
jmp
mov
out
add
mov
or
and
cmp
jl
inc
add
stc
repz
mov
test
mov
pushf
xchg
sub
ja
in
test
pop
xchg
gs
push
fildl
dec
jge
mov
out
push
xor
test
das
xor
fldt
lret
mov
imulb
add
call
dec
push
ret
pop
add
xor
fucomi
mov
imul
add
jbe
js
leave
pop
in
decl
clc
jbe
roll
test
popa
add
jge
loope
sbbb
push
leave
into
push
es
push
dec
mov
xchg
pop
data16
inc
cli
sbb
inc
cli
pop
rolb
loopne
add
cmc
mov
or
inc
mov
xchg
lcall
clc
cmp
cmp
iret
fisubl
jp
sti
adc
xlat
cmp
decl
xchg
jg
push
rorl
add
lock
aaa
xchg
mov
add
dec
sbb
popf
fstl
fidivl
rolb
add
xor
sbb
jl
aaa
and
and
mov
mov
ret
sbb
in
inc
xchg
leave
push
stos
push
icebp
mov
out
test
jbe
mov
dec
vmread
cmp
adc
jecxz
lret
push
ffreep
movb
in
mov
push
fcomip
addl
fcmovu
into
add
and
push
cmp
sub
adc
sbb
xchg
mov
cmc
xchg
push
xchg
push
mov
mov
lret
inc
repz
push
push
out
add
sbb
stos
inc
inc
mov
sub
js
push
sahf
test
cmpsb
leave
adc
cs
mov
outsl
movsb
pop
inc
jmp
adc
mov
push
pop
repnz
jo
pop
js
add
cmpsl
mov
mov
mov
mov
jne
cltd
push
int
mov
xor
sbb
mov
dec
inc
stc
push
xchg
scas
imul
jne
dec
aad
adc
rcl
mov
stc
mov
push
dec
bound
js
jnp
fnstsw
jbe
les
loope
or
cmpsb
scas
mov
cmp
lock
fwait
aas
add
cmp
fldl
mov
push
or
aam
push
pop
fcompl
bound
loope
insl
ret
pop
adc
sbb
and
mov
pusha
rolb
call
jmp
leave
mov
inc
inc
mov
push
add
mov
gs
fistpll
iret
add
dec
sub
mov
insb
pop
ds
ret
inc
xchg
xchg
dec
sub
int3
frstor
cmp
in
shrl
shr
test
test
mov
jnp
add
inc
jno
cmp
clc
adc
cld
ljmp
addl
pop
xchg
out
cmpsb
mov
lock
insb
cmp
add
mov
dec
out
push
sub
btl
lds
adcb
lret
jecxz
jg
cmp
lret
adc
mov
ljmp
mov
ss
test
jmp
mov
enter
jne
sub
jo
mov
pop
pop
push
pop
ret
mov
jb
fcoms
jl
add
inc
aaa
adc
test
adc
adc
lret
scas
je
loop
xchg
fldt
aam
stos
xchg
lea
inc
std
jecxz
mov
jbe
loopne
jle
fwait
mov
out
mov
sbb
fdivr
aaa
pop
js
add
mov
xlat
inc
bound
sub
decl
adc
push
inc
test
dec
jp
mov
pushf
insl
into
xchg
sub
mov
mov
in
push
push
int3
jb
sbb
jle
xchg
lock
or
js
jg
ljmp
outsb
add
mov
mov
adc
cld
pop
pop
clc
sarl
iret
lock
dec
cld
sub
insb
bound
dec
sbb
jne
insb
fwait
cmp
divb
test
cltd
xchg
fiadds
xor
push
shrl
out
jnp
sbb
subb
jae
mov
push
adc
xlat
fs
cmp
add
insl
lods
push
fcmove
pusha
xchg
scas
dec
mov
sub
stos
push
mov
pop
lcall
enter
loop
and
xchg
and
inc
xor
test
or
scas
aas
jg
andl
push
fs
push
mov
mov
lahf
movb
sbb
stc
ret
fcoml
cmpsb
jbe
stos
sub
icebp
call
sahf
scas
pop
fmul
pop
mov
int3
dec
test
mov
loope
outsl
gs
jo
clc
aaa
hlt
dec
mov
mov
rcl
loopne
ds
mov
lods
or
jno
mov
les
sub
pop
and
in
daa
cmp
xchg
pop
xor
jecxz
inc
icebp
xor
or
xor
hlt
sbb
icebp
sub
std
add
mov
pop
lods
xchg
adc
cs
add
decb
push
mov
fnstenv
sbb
pandn
or
arpl
mov
push
and
shr
in
icebp
inc
dec
jnp
insb
and
call
lods
dec
xor
inc
push
lret
bound
cmp
popa
stos
mov
sub
scas
fcoms
filds
mov
int3
insb
mov
repz
imul
loopne
hlt
das
rol
lret
leave
xor
scas
mov
cmp
xlat
pushf
hlt
mov
pop
lods
out
adc
icebp
inc
push
out
push
xchg
test
pop
adcb
adc
je
dec
fisttpll
push
push
jge
ret
arpl
jge
movsl
js
dec
sbb
and
fildll
incl
sub
aam
add
jo
cmp
fwait
lods
xor
push
or
jnp
mov
fs
add
adc
jecxz
mov
fisttpl
xlat
mov
and
outsb
mov
pop
push
addr16
scas
ljmp
inc
mov
mov
pop
aaa
ljmp
mov
clc
inc
shl
xchg
cmpsb
cli
mov
push
mov
dec
add
js
fsubrs
dec
add
in
sbb
call
inc
or
jne
jmp
push
add
adc
leave
jbe
sbb
repnz
xor
inc
mov
mov
inc
das
repz
incl
sbb
mov
nop
sbb
xor
lds
pop
movsl
ljmp
imul
mov
loope
or
nop
fs
int
jo
loope
rorl
sub
rorl
pop
xor
jecxz
movsl
push
std
mov
sub
and
movq
jg
ljmp
stos
in
mov
mov
dec
jae
in
jg
je
in
cmpsb
jge
loope
lods
icebp
in
int3
pop
sbb
ss
loopne
inc
rcrl
and
xor
xchg
inc
inc
xor
iret
lret
add
add
mov
xor
or
push
inc
xchg
push
cmp
cwtl
shll
aas
cmp
or
iret
mov
mov
or
test
inc
mov
adc
dec
jae
sub
jl
call
xor
sbb
push
add
dec
inc
cld
scas
jg
mov
push
xchg
jmp
and
ljmp
lds
ss
pop
sub
insb
mov
dec
and
iret
insl
mov
das
jmp
scas
or
sbb
adc
gs
jle
lea
es
inc
mov
cmp
adc
mov
mov
add
cld
mov
or
pop
aad
fidivrl
call
lock
adc
lock
and
inc
repnz
sub
jecxz
int3
inc
adc
mov
sarl
sbb
xor
cmp
sub
and
mov
idiv
mov
mov
iret
stos
clc
push
jge
lods
divb
jb
xchg
push
adc
mov
dec
pop
pop
sub
pop
std
in
fildl
jb
dec
and
popa
inc
inc
mov
sbb
mov
adc
cmp
push
jge
cli
rcl
movsl
leave
push
sbb
xorl
sub
in
dec
lcall
outsl
ljmp
gs
pop
mov
mov
lea
push
lcall
adc
mov
adc
mov
xchg
ss
mov
fisubs
or
test
mov
cmp
mov
cmpsl
pop
add
jae
pushf
mov
pop
cwtl
fidivs
mov
or
inc
idivl
xchg
pop
pop
loopne
jb
rcll
push
inc
insl
cmp
test
push
pop
shrl
jmp
add
push
pusha
and
icebp
nop
xchg
mov
mov
shll
inc
inc
mov
test
stos
fists
aam
mov
enter
sub
add
cwtl
decl
insl
insb
cs
das
imul
xchg
and
mov
paddd
push
and
cmpsb
mov
xor
das
into
push
outsl
inc
std
lods
jl
bound
subl
sub
dec
sbb
clc
lret
push
push
cs
xchg
loope
loopne
lcall
roll
pusha
loopne
test
fbld
cmp
pop
inc
adc
nop
sbb
and
sbbl
mov
lea
adc
in
aaa
cs
sub
or
push
fcomip
push
test
pop
int
mov
sbb
lods
sbb
ret
arpl
sbbw
cmp
or
mov
xor
adc
cmc
cmp
push
xor
push
mov
mov
xor
out
pop
inc
enter
adc
adc
daa
hlt
xchg
imul
insl
movsb
sub
lds
mov
jno
mov
xchg
lret
pop
mov
insl
dec
jmp
fs
sub
orb
int3
loop
fsub
imul
shll
push
je
sbb
ds
roll
js
xor
sub
movsl
bnd
jl
push
pop
jecxz
fcmovbe
movsl
mov
mov
cltd
inc
lahf
and
inc
xlat
cmp
aad
les
lahf
ja
shlb
push
jecxz
mov
jle
repnz
dec
mov
xor
sub
js
repz
and
and
dec
loope
adcb
in
out
das
cld
mov
aad
arpl
cwtl
and
sahf
shr
in
push
mov
lods
mov
rolb
pop
adc
inc
fldcw
mov
std
insb
push
fiadds
in
mov
jo
fisubrs
mov
fcomps
movsl
jmp
sub
mov
mov
and
cmpb
mov
in
insl
stos
mov
aaa
data16
pop
mov
adcb
lea
sbb
jb
push
lods
loope
test
fisttps
shll
orb
mov
adc
sub
push
les
je
mov
pop
andb
cmpsb
cwtl
adc
mov
xchg
add
cld
cli
lods
data16
mov
lods
mov
add
out
cmp
repnz
adc
push
mov
push
aad
mov
std
dec
push
daa
push
stc
out
and
gs
lock
and
mov
or
rol
jl
and
mov
jle
lods
shlb
scas
aad
cmp
ror
mov
mov
push
test
pop
cmpsb
dec
adc
dec
mov
mov
add
push
xor
inc
mov
adc
mov
fisttpl
insb
dec
das
out
lret
out
orl
ret
and
aad
xchg
sub
jecxz
je
mov
sbb
stos
pop
pop
pop
ss
cltd
mov
and
movsb
xchg
pop
inc
mov
repz
xlat
jo
pop
push
aaa
rcrb
shrl
in
leave
pop
adc
jb
adc
test
push
fisubrl
insl
je
add
popa
orl
roll
inc
test
leave
xor
add
ljmp
rcr
adc
test
jns,pn
mov
lods
test
fildl
loop
cmc
jg
movsl
or
dec
mov
lcall
dec
mov
mov
out
sbb
inc
lea
inc
dec
jmp
jmp
loop
or
test
sub
in
jg
sbb
dec
jecxz
loop
jno
pop
dec
mov
loop
mov
stos
jmp
inc
loopne
clc
xor
pavgb
fisubl
xchg
pop
inc
callw
mov
pop
lock
adc
pushf
cs
dec
xor
add
pop
mov
xchg
pop
leave
add
incl
add
fdivl
icebp
mov
xor
popf
xchg
mov
mov
inc
outsl
lock
inc
in
jecxz
cmpl
aad
xchg
fidivs
pop
les
fstps
outsl
adc
mov
push
mov
lods
push
in
mov
mov
jle
fs
mov
ja
mov
fistps
sbb
or
or
sub
cli
adc
int3
out
fidivl
inc
ror
filds
aad
pop
addr16
xchg
cmpsb
inc
int
xor
jne
inc
inc
int
pop
jp
push
in
stc
clc
jmp
insb
or
cmpsb
aaa
bound
addr16
lcall
lcall
mov
dec
fs
shrb
pop
call
xchg
insl
mov
movsl
fwait
mov
daa
mov
inc
bound
ffree
testb
test
inc
sbb
mov
or
lods
and
xchg
stos
xor
push
divb
xchg
sub
jge
mov
dec
lock
lcall
scas
mov
addr16
add
jne
jbe
dec
ljmp
ret
andb
cld
test
xchg
pop
clc
leave
mov
outsb
lock
mov
repz
jmp
inc
stc
and
outsl
cwtl
ljmp
imul
sub
push
mov
or
jmp
inc
adc
inc
repnz
jnp
shrb
adcb
das
sub
push
xor
mov
mov
or
sub
std
sbb
jle
and
or
jno
int3
adc
xchg
push
je
fmulp
fnstsw
and
repnz
aad
lcall
mov
mov
add
test
jne
cmp
mov
mov
or
pop
jl
mov
cmc
out
push
call
pop
stos
dec
rcrb
in
dec
mov
or
cli
sbb
jg
lds
fucomp
mov
add
lds
push
mov
jecxz
fwait
adc
adc
testb
mov
sub
dec
sub
test
adc
xchg
aad
mov
pop
ljmp
insl
jmp
das
add
icebp
mov
or
push
std
mov
inc
pop
sbb
sub
cld
cmp
cmp
dec
and
outsl
cmpb
add
jnp
or
and
in
mov
std
mov
ljmp
leave
out
fwait
lea
fst
lea
and
and
lock
cli
dec
push
sti
push
popf
insb
loope
hlt
inc
ljmp
pop
out
je
or
pop
mov
push
inc
sub
andb
and
mov
xor
repnz
jg
aad
cmpb
mov
adc
test
sbb
jbe
pop
sub
popf
pusha
jne
cmp
testb
mov
lcall
jecxz
add
xor
xchg
sub
push
fisubrl
mov
ret
movsl
mov
pop
lods
lods
das
or
dec
lret
enter
xchg
stos
inc
scas
and
call
push
loope
push
sbb
xor
or
xchg
in
mov
mov
adc
or
cs
xor
and
xor
adc
adc
faddp
cli
je
rcr
es
mov
xorl
and
orl
lahf
add
adcb
lods
mov
push
insb
pop
mov
mov
or
mov
or
jo
popa
and
add
insl
and
out
mov
divl
inc
outsl
lret
jg
xchg
pop
mov
in
dec
mov
push
xchg
xchg
and
inc
enter
scas
push
push
je
sbb
and
adc
sub
sarl
push
sbb
sti
push
mov
pop
xchg
push
mov
loope
rcl
ret
icebp
insb
insl
jmp
jl
scas
loopne
sti
mov
sub
inc
es
mov
mul
cli
mov
lret
xchg
add
rcrb
pop
fimull
cwtl
mov
cmpsb
outsl
scas
lods
je
in
dec
and
insl
scas
ljmp
xchg
dec
stc
mov
loop
xchg
cmp
hlt
push
stos
dec
das
add
lahf
pop
jo
jmp
pop
mov
sub
sbb
xlat
push
ret
dec
rolb
cltd
lea
in
ret
sbb
enter
pushfw
dec
loope
dec
repnz
in
outsb
xchg
mov
mov
dec
mov
push
mov
sbb
or
ret
lcall
push
xchg
shr
dec
push
clc
test
in
popf
stos
push
xchg
test
adc
adc
insl
add
je
push
daa
mov
xchg
imul
aas
mov
xchg
sbb
cwtl
rolb
mov
mov
and
fiaddl
loope
dec
mov
mov
push
add
pop
repz
mov
clc
add
bound
sarl
inc
dec
adc
loop
push
jg
fisttps
mov
das
cld
das
mov
cmp
loope
rclb
lds
test
sti
out
inc
and
mov
jg
or
jl
and
cmp
dec
inc
cld
pushf
cmpsb
imul
jo
cmpb
lret
cmp
mov
outsl
pop
lcall
pop
cli
cmp
xchg
adc
mov
jnp
mov
fnstcw
xorl
jmp
inc
sbb
mov
stos
xchg
push
sbb
lea
push
mov
mov
mov
lods
or
push
pop
movsl
into
or
int3
push
lcall
iret
jmp
out
pop
out
mov
cmp
and
dec
pop
lahf
rclb
sub
andl
xchg
adc
mov
leave
push
jb
clc
push
mov
cmpb
jg
rorb
pop
rorl
jns
adc
mov
inc
nop
scas
or
push
mov
jnp
jnp
arpl
mov
mov
or
jg
sbb
scas
sbb
movsl
lea
scas
cmp
call
lret
fbld
scas
shll
lahf
and
test
loope
lock
or
adcl
add
popf
les
popf
pop
das
aad
mov
fcomip
lods
lds
push
add
push
cltd
in
xchg
sbb
leave
movsl
nop
mov
xorl
push
adc
pop
scas
sbb
cmpsl
or
in
xchg
arpl
mov
push
push
adc
loopne
lods
cwtl
cltd
adc
rolb
shrl
jb
mov
inc
icebp
cld
ljmp
sti
push
repz
outsl
cld
incl
jb
shll
filds
sub
or
jle
pushl
cmp
dec
hlt
fcoms
jle
je
std
test
sub
xchg
inc
sbb
cmp
sbb
call
sbb
add
jg
pop
aad
mov
xchg
mov
fldl
push
rorb
rcl
inc
mov
xchg
dec
adc
push
imul
cmc
xor
xor
cmp
int
mov
mov
out
jecxz
outsl
mov
repnz
sbb
xor
mov
jmp
mov
ret
or
adc
bound
add
movsb
bound
and
jns
sbb
mov
dec
jns
lahf
fs
mov
std
dec
jp
ljmp
cmp
mov
pcmpeqb
ds
shlb
adc
xor
in
outsb
lods
stos
mov
sub
mov
and
sbb
xchg
fcoml
dec
test
sti
in
pop
aam
psraw
pop
sbb
jnp
mov
cmpsl
pop
call
or
loopne
jg
loop
adc
faddl
inc
cli
lea
or
xlat
add
mulb
rclb
cmp
mov
lods
pop
push
repnz
insl
rcll
push
mov
lahf
mov
dec
jo
push
mov
nop
jle
fdivrs
mov
add
adc
add
pop
dec
xor
shll
push
das
cld
mov
jnp
fs
inc
mov
mov
jo
lea
inc
shlb
test
out
xorl
pop
lea
cmp
clc
cmp
das
jmp
out
jg
inc
cwtl
dec
enter
dec
push
pop
cmpsb
loopne
outsb
adc
adc
loop
add
cmpsb
mov
test
push
aad
xchg
fdivs
test
negb
fiadds
decl
shr
incl
mov
outsb
xchg
andb
test
mov
mov
mov
lret
and
je
and
mov
call
pop
pop
fldenv
sbb
sub
sbb
pop
adc
dec
and
mov
xor
xor
pusha
and
cld
outsb
ja
sub
mov
inc
lea
and
fimull
addl
pusha
mov
dec
icebp
and
mov
cmp
adc
sub
cmc
mov
mov
add
test
cmp
stc
ffree
adc
push
in
in
sub
cli
jle
add
dec
sub
cld
icebp
pop
ficoms
adc
stos
cmp
mov
inc
jmp
stos
inc
jp
mov
add
push
rorb
pusha
into
push
aam
fbstp
mov
clc
pop
xchg
inc
xchg
adc
xor
sbb
and
loopne
gs
loopne
int
dec
call
dec
iret
xchg
sbb
inc
inc
mov
add
push
stc
cld
test
outsb
cld
dec
dec
jo
add
and
xchg
mov
test
mov
dec
or
pop
sbb
add
rolb
jle
push
mov
test
fldz
inc
sbb
fwait
in
xchg
jge,pn
jno
scas
ds
xchg
enter
notb
insl
mov
aam
adc
in
icebp
sahf
inc
mov
ljmp
and
sbb
or
cwtl
and
rcr
fcmovu
jae
addr16
fs
and
push
aaa
test
dec
sub
inc
add
loopne
fwait
pop
or
xchg
pop
sbb
adc
pop
inc
in
in
or
and
pop
addr16
testb
pop
push
and
push
or
cs
pop
push
shll
rorb
push
or
sbb
cmp
cld
jl
and
ficomps
cs
imul
cld
add
clc
or
daa
add
icebp
mov
loop
xchg
mov
dec
add
loopne
enter
jecxz
xorb
outsl
cmc
fs
sbb
sbb
mov
cmc
inc
or
insl
outsl
mov
outsl
scas
inc
cmpsb
jns
movl
adc
adc
mov
dec
flds
rcrb
js
mov
ret
xor
test
push
dec
xchg
sbbb
dec
jo
pop
or
inc
cmp
dec
outsl
jo
mov
and
arpl
sti
pop
ljmp
icebp
xchg
mov
push
push
adc
push
incb
adc
pushf
shll
mov
bound
ficoms
neg
jl
iret
popa
mov
or
xchg
clc
add
aad
cmp
push
jp
adc
fadds
out
js
es
das
pop
xor
aam
adc
mov
inc
shlb
xor
hlt
xor
push
inc
aad
scas
or
cmp
shlb
test
adc
mov
roll
aas
xchg
mov
inc
je
in
call
mov
xchg
arpl
ret
dec
subb
jmp
std
add
jbe
mov
ret
test
adc
aaa
mov
dec
sahf
inc
jns
push
aad
push
dec
mov
push
pop
into
iret
je
imul
jg
outsb
mov
pop
cmpb
data16
push
mov
sar
add
fistpll
cmp
sbb
jb
adc
lods
or
jp
stc
sub
xchg
jg
pop
das
and
test
pop
aas
push
mov
dec
jb
adcb
stos
xor
sub
fistl
enter
mov
add
cmp
mov
push
loopne
fistpll
int
and
aaa
fimuls
popf
adc
enter
fsub
jbe
push
jp
pop
add
mov
in
pop
mov
adc
mov
sbb
data16
rcrl
cli
and
sti
xchg
loop
je
outsl
lcall
orl
push
je
mov
xchg
std
lcall
lcall
cmc
iret
faddl
or
cmp
sbb
icebp
int3
cmp
mov
mov
aam
mov
fstps
inc
mov
ja
outsl
pusha
fisubl
pop
decl
push
out
adc
and
mov
xchg
decl
arpl
or
xchg
dec
movsl
xchg
or
xorl
xchg
lret
sub
aas
test
cmpsl
outsl
or
lahf
pop
inc
or
push
add
fadd
inc
sub
jns
push
jbe
test
cmc
mov
outsl
imulb
inc
push
push
sbb
inc
inc
add
sarb
xor
jmp
arpl
adcb
addl
ja
rclb
out
mov
push
pop
xor
cmpsl
xchg
insl
cld
fists
aam
jbe
mov
nop
mov
cmpb
ja
mov
shr
lcall
int3
adc
testb
mov
mov
cld
or
sbb
inc
or
in
jae
mov
imul
cmc
cmc
popf
divb
mov
loope
aad
adc
faddp
adc
or
test
les
jge
mov
or
cmp
imul
mov
mov
dec
xor
or
mov
roll
das
jne
leave
in
inc
lret
adcl
in
shlb
gs
xchg
push
pop
mov
add
dec
push
fs
leave
adc
xor
cmp
scas
sbb
testb
jnp
js
ret
cmp
shr
ja
jae
pushf
jno
rol
es
xor
xor
jg
mov
ja
mov
inc
out
dec
or
xor
mov
inc
lock
subl
fs
in
or
or
sub
jnp
imul
jns
lret
idivb
mov
mov
xchg
dec
xchg
adcl
mov
decb
pop
insb
pop
mov
daa
sub
insb
pop
inc
dec
and
inc
and
out
push
mov
lret
in
dec
ret
cmpsl
xor
rcl
popa
mov
sahf
jg
test
push
rorl
xchg
and
push
sub
mov
sahf
outsb
cmpb
mov
lods
xor
push
insb
sbb
jl
sahf
adc
add
shrb
sub
mov
fnsave
add
mov
ja
pop
push
mov
ja
dec
outsb
std
xchg
xor
pop
jbe
fisttpll
lods
mov
mov
test
dec
pop
mov
fs
test
pop
pop
popf
pop
lret
xor
leave
scas
dec
push
jne
push
add
mov
movsb
loope
add
js
cmpl
imul
and
mov
sub
mov
mov
ds
cmp
cmp
vpsubusw
clc
movsl
jg
testb
cmp
notl
mov
cmp
sbb
enter
jp
adc
xor
xor
decb
orl
sbb
stc
inc
push
dec
lret
lock
call
and
inc
inc
add
in
mov
and
push
lret
dec
sbb
in
mov
sub
orb
inc
push
sti
add
and
xor
adcl
insl
insl
push
test
fildll
roll
cmpsb
push
insb
js
outsl
outsl
hlt
sbb
mov
mov
subb
push
incl
jmp
mov
mov
push
cld
dec
in
aaa
ljmp
lret
or
sbb
and
cmp
or
scas
mov
push
cmp
shl
xor
sub
rcll
testl
lret
fisttps
ds
cwtl
pop
sub
mov
imul
mov
sbb
mov
xchg
or
sbb
pop
push
test
mov
inc
jnp
icebp
out
out
xchg
fwait
xchg
push
test
mov
addr16
jns
clc
imul
or
pop
clc
dec
lds
hlt
and
jnp
push
icebp
dec
add
out
inc
lods
xor
inc
in
pop
aaa
cli
movsl
mov
mov
mov
xchg
sbb
cs
jecxz
jb
lds
and
push
clc
push
push
jbe
lret
cld
in
testb
das
pop
add
sbb
xchg
call
cmpb
std
sbb
mov
movsl
or
lods
out
inc
sahf
ja
test
aas
aas
ret
sub
ja
or
idivl
add
adc
lret
push
push
pop
cld
and
push
cmp
repnz
fisttpll
inc
mov
sbb
jae
incb
sbb
or
leave
cmp
mov
sbb
mov
dec
imul
and
stos
mov
sbb
sahf
sbb
dec
mov
mov
mov
divb
cltd
repz
imull
add
jecxz
movsb
loopne
fs
popf
cld
xchg
fcoms
mov
dec
sub
ret
jecxz
inc
push
cs
sub
jns
push
loope
push
mov
or
ja
jge
ljmp
cmpsb
xor
sub
add
add
jmp
sub
ja
jnp
daa
or
roll
in
mov
xor
jb
add
aaa
mov
or
fcmovb
mov
mov
aad
add
push
mov
out
rolb
sbb
and
ljmp
scas
cmp
lock
js
pop
mov
aad
xor
sar
insl
add
bound
mov
inc
call
add
into
cmp
mov
mov
dec
cmp
inc
pop
cmp
adc
sub
jo
cmovo
xor
xchg
in
popa
outsl
inc
add
push
testb
in
je
enter
movsl
sub
inc
mov
inc
sub
lea
inc
adcl
andl
icebp
mov
pop
cwtl
mov
mov
rcll
outsl
cmp
pushl
xchg
mov
shll
jo
sarb
add
pop
ja
data16
dec
adc
rolb
ftst
sbb
or
les
jg
popa
imul
xchg
sub
cmpl
out
add
lods
enter
cmp
and
ret
and
imul
mov
inc
daa
jns
add
rcrl
mov
popa
xor
mov
sub
cmpsl
xchg
nop
xchg
push
cmp
sbb
enter
push
popa
xchg
shlb
lods
jmp
mov
xchg
movsb
inc
push
inc
repz
dec
lea
mov
gs
rcll
cltd
adc
loopne
inc
push
push
xor
enter
popf
enter
mov
je
test
push
aaa
stos
mov
stos
jmp
imul
xor
into
cltd
pop
jo
in
add
jecxz
adc
push
adc
add
pop
shlb
cmc
adc
sub
pop
mov
ds
scas
xchg
cli
jg
das
dec
pop
and
jmp
xlat
dec
repnz
hlt
and
jnp
push
lock
dec
nop
shlb
mull
aam
inc
ja
filds
fsubl
cli
ljmp
pushf
cmpsb
lahf
and
xchg
test
xchg
pusha
jno
sbb
dec
insb
fnstsw
mov
repnz
dec
call
mov
stos
sbbl
in
rcl
out
lea
out
sti
decl
or
pop
das
push
test
outsl
sbb
or
lahf
push
adc
outsl
sbb
int3
push
mov
test
aad
push
and
mov
sahf
push
andb
xchg
aas
negl
lods
aaa
lahf
inc
pop
popa
xor
loop
popa
call
sti
mov
push
adc
xchg
rcrl
jg
dec
xor
cs
cltd
cmp
xchg
mov
pop
js
cmp
call
ficompl
pop
std
fbstp
mov
int
popa
adc
jo
div
popl
adc
xor
push
dec
sub
popf
aas
icebp
call
push
out
or
mov
pop
mov
pop
sbb
stc
mov
stos
fbstp
pushf
stos
xor
dec
lahf
enter
mov
dec
iret
rcl
xor
mov
inc
in
add
movsl
je
or
mov
inc
mov
jbe
sub
outsl
stos
mov
loop
and
xchg
xor
pop
jl
push
aas
and
mov
and
int3
push
loop
cli
aas
adc
mov
mov
push
pop
xlat
rorl
loopne
sahf
jge
mov
lods
aaa
test
paddq
sub
test
lahf
jne
sub
mov
push
cmp
pop
push
sbb
pusha
sarb
stos
and
lock
out
push
mov
popa
or
mov
lea
out
test
js
pop
mov
ret
setp
mov
jge
mov
rolb
or
cmpsl
and
add
jp
loope
in
nop
out
and
dec
shll
dec
dec
jbe
lea
add
pusha
imul
xlat
lret
add
pusha
fs
gs
adc
jg
push
or
js
mov
test
lods
adc
and
fdivrs
roll
jo
pop
and
push
sub
or
mov
cmpsl
cli
and
dec
and
mov
out
or
outsl
and
add
stos
xor
pop
sub
movsl
les
hlt
negl
push
mov
xchg
xchg
pop
mov
mov
sub
xchg
cs
sbb
xchg
arpl
shr
cltd
inc
ja
mov
xchg
mov
push
inc
pusha
jns
rcll
sub
out
ja
lahf
adc
push
iret
subl
sub
lahf
add
sbb
jp
pop
test
je
push
rcl
pop
mov
inc
cmp
xor
sub
loope
pushf
movsl
sbb
or
mov
mov
jl
mov
sbb
repnz
sahf
out
jmp
clc
subl
je
dec
lock
and
cltd
shlb
dec
cli
out
pop
js
inc
pop
iret
ljmp
test
jl
dec
lea
out
in
push
ds
pop
hlt
es
pop
popf
mov
xor
inc
stos
pop
pop
mov
mov
add
shll
xor
mov
sub
clc
ja
sbb
add
add
sbbb
sub
push
cmpsl
inc
lret
clc
test
inc
popa
clc
movsl
and
add
ja
stc
test
scas
loopne
pop
lahf
ja
cltd
mov
inc
decl
push
clc
in
or
mov
out
push
mov
sub
loop
jg
arpl
and
sbb
out
or
mov
dec
fisttpl
cmc
mov
jmp
sub
push
push
or
xchg
and
and
arpl
sarb
aam
jg
dec
scas
add
insb
es
push
icebp
fistpll
jb
pushf
mov
std
sbb
lcall
jb
test
push
loopne
xchg
sahf
adc
addr16
js,pt
insb
xchg
arpl
out
test
mov
cmp
loop
orl
and
cwtl
mov
jg
jno
out
mov
int3
pop
and
adc
push
imul
mov
aam
dec
push
dec
dec
or
mov
inc
ljmp
inc
jp
push
or
xchg
ret
jle
or
nop
jo
lock
shll
cmpsl
xor
push
mov
jl
mov
out
add
jp
popl
outsl
push
hlt
mov
subb
notl
mov
mov
fiaddl
decl
add
std
inc
repz
mov
xchg
xchg
flds
push
inc
pop
inc
daa
jle
push
mov
loope
setno
xchg
mov
mov
adc
leave
test
fadds
imul
or
inc
adc
sbb
or
cli
ret
stc
jb
lcall
and
jae
jg
inc
inc
adc
mov
cmp
subb
sub
mov
mov
mov
jnp
pop
push
cmp
xchg
mov
cli
push
testb
bound
add
mov
cmp
lea
roll
or
repz
enter
jl
mov
pop
mov
dec
sahf
cmp
push
cltd
add
leave
sbb
add
mov
fistl
mov
pop
imul
inc
push
pop
repz
lds
lock
mov
adc
test
mov
ljmp
call
adc
test
mov
inc
add
addb
inc
xor
mov
cs
adc
rclb
mov
pop
push
test
pop
mov
xor
add
push
insb
fbld
data16
xor
jae
push
pop
cld
aaa
bound
cmpsb
jmp
cs
mov
mov
jnp
test
rcrb
arpl
iret
mov
clc
sbb
inc
pop
adc
outsb
mov
sub
mov
lods
cmp
mov
mov
dec
inc
mov
std
push
les
xorb
pop
inc
push
std
dec
je
xor
in
ret
adcl
clc
fildll
shll
cmp
daa
or
aas
rclb
ds
flds
jb
xchg
sbb
icebp
push
push
mov
jmp
xlat
or
jae
mov
std
call
xchg
sub
pop
sub
in
sbb
mov
lock
push
cld
out
jb
sbb
mov
inc
or
cwtl
ret
rcl
and
fists
sbb
push
cld
das
es
mov
cmp
shl
lahf
jl
mov
sbb
and
ljmp
jge
sub
adc
xchg
adcb
lret
push
cmpsb
aaa
icebp
add
xchg
mov
sbb
sub
mov
stos
lods
sub
push
out
fdiv
lret
xor
cmp
cltd
pop
idivl
or
adc
incl
mov
adc
fistps
adc
hlt
ss
add
sub
push
mov
test
and
test
or
mov
fiaddl
mov
xchg
push
arpl
cmc
or
adc
jnp
jb
inc
or
pop
mov
adc
ljmp
push
movl
inc
ds
or
adc
xorl
and
and
push
ret
test
ret
in
outsb
inc
push
mov
movsl
out
mov
jp
and
fistpl
push
in
cmpb
jg
mov
divb
leave
rcr
pop
imul
push
outsl
cmc
mov
int
jg
jl
xlat
inc
test
ret
loopne
decb
out
iret
std
cwtl
jbe
lahf
mov
orl
out
rclb
add
fcomps
mov
adc
adc
shlb
xor
push
mov
mov
and
icebp
cmc
dec
bound
movsl
sbb
jmp
or
loop
ds
hlt
adc
inc
rol
or
cmp
or
pop
dec
jecxz
jl
loop
mov
icebp
fstpl
inc
push
pop
mov
es
addr16
dec
xlat
outsl
push
sub
mov
das
push
push
lea
pop
cmc
in
clc
in
jnp
es
loopne
test
push
arpl
xor
es
xor
aas
bound
inc
ret
and
loope
mov
aam
movsb
outsl
outsb
fnstsw
xor
cmc
scas
jb
cli
add
in
mov
sub
mov
lock
clc
mov
mov
sub
adc
movsl
dec
pop
sub
dec
mov
mov
shlb
lock
insl
mov
notb
les
test
test
adc
dec
popa
fs
roll
lods
aad
mov
inc
bound
fimull
out
nop
ret
or
xor
out
sbb
cmp
fcompl
lods
cmpsb
adc
fisttpll
lods
shl
ret
add
dec
xchg
sti
dec
adc
lock
lods
xor
jp
ljmp
sbb
jge
push
inc
inc
mov
push
dec
lock
daa
inc
and
ret
or
push
pop
aas
push
outsb
or
mov
and
jo
sti
mov
xchg
cmp
movsb
add
lea
stos
aaa
xor
mov
and
adcb
mov
repz
test
xorb
adcb
testb
or
pop
pop
roll
sbb
shll
les
ret
jge
shlb
test
adc
movsl
inc
add
fcmovnu
pop
mov
pop
mov
sti
cmp
fcmovu
push
js
jo
cmc
push
sahf
stos
out
fidivs
xor
rorl
or
sub
jbe
adc
inc
push
insb
fisubl
arpl
mov
aad
js
sbb
pop
mov
mov
mov
or
xchg
adc
lahf
mov
jo
shl
lods
ljmp
loope
pop
loopne
lock
inc
clc
hlt
push
adcl
in
push
cmp
inc
movsl
mov
dec
jne
fcoms
mov
pop
mov
sub
nop
and
or
outsb
xor
in
aam
leave
mov
jg
daa
xchg
xchg
fcompl
dec
inc
push
pop
fildl
fmulp
inc
bound
aam
retw
add
sbb
mov
push
or
hlt
jmp
andb
sbb
in
nop
aad
and
out
push
or
pop
add
sbb
popf
dec
jg
fisubrl
and
loope
sbb
stc
adc
push
xchg
xchg
lds
loop
je
adc
or
dec
jp
add
cmp
out
dec
mov
and
mulb
popa
call
rclb
rorb
pop
mov
sbb
dec
dec
sahf
sub
mov
mov
scas
inc
jmp
cltd
pop
sub
xchg
pop
push
sub
movsl
jle
push
pop
jo
imul
clc
fistpl
js
pop
xor
mov
jp
lret
lcall
test
ljmp
shrb
mov
mov
jnp
divb
jbe
aad
cli
inc
cmpsl
mov
sbb
pushl
mov
cwtl
movsl
popa
inc
testb
pusha
xor
push
pop
outsl
clc
jg
in
sub
shll
mov
mov
stos
sub
jbe
push
imul
test
sub
call
insl
pusha
sti
jne
popf
call
inc
inc
push
call
imul
and
movsb
pop
jecxz
mov
inc
or
jnp
test
push
and
rcll
andb
jbe
push
jge
ss
pop
mov
jbe
jge
adc
inc
push
out
fidivl
test
jg
push
lods
std
mov
add
mov
out
dec
aad
inc
cmpsl
sub
xchg
dec
mov
scas
add
loop
xor
add
jnp
push
push
mov
add
fsubs
mov
inc
bound
lcall
jne
add
pop
adc
lahf
mov
xchg
stos
add
or
stos
pop
pop
je
cltd
imul
push
enter
push
sarb
cmp
sbb
xchg
test
sti
ss
rclb
fcmovb
jns
sbb
int
mov
or
jno
out
lret
dec
pop
xor
movb
arpl
lods
push
fisttpl
cmp
mov
out
jae
adcl
and
popa
in
xchg
xchg
add
js
clc
movsb
jmp
pop
shrl
push
cmp
mov
mov
push
inc
pop
loope
lds
fwait
divl
or
jns
test
xchg
enter
mov
xchg
sub
xor
test
test
pop
mov
xchg
jno
das
xchg
dec
lret
lods
pop
mov
pop
shl
or
lods
mov
mov
fldcw
adc
clc
xor
inc
in
jne
xor
xchg
cmc
inc
hlt
fisttpl
mov
cmpsb
lcall
enter
sub
xchg
sti
outsl
pop
add
test
hlt
sbb
jbe
add
jmp
ret
lods
mov
push
or
adc
pop
mov
or
xchg
rcrb
ljmp
fidivs
scas
sarb
pop
mov
out
adc
inc
or
scas
mov
std
js
add
pop
ficoml
adc
insl
inc
lahf
push
call
ljmp
mov
mov
enter
fsub
test
test
cld
sbb
inc
test
leave
jns
mov
fisubrs
cmp
jmp
add
mov
or
xchg
insb
mov
jb
nop
adc
ds
push
ret
jmp
scas
das
pop
pop
xchg
out
jmp
mov
adc
fbstp
dec
cmp
gs
out
mov
shrl
add
and
and
mov
sub
mov
add
mov
mov
sbb
push
push
das
cld
decl
roll
leave
icebp
jge
add
into
imul
xor
pavgb
ljmp
roll
stos
in
sbb
in
push
pop
std
pop
mov
rorb
push
inc
in
mov
arpl
scas
jbe
shrl
aad
xchg
clc
push
insb
iret
xchg
cmp
push
pushf
leave
mov
fildl
pop
sub
cli
stos
push
push
mov
das
inc
rolb
shlb
iret
out
aaa
mov
popf
test
pop
sti
pop
mov
pop
in
stc
add
jmp
mov
mov
cmpsb
mov
jno
inc
mov
pop
or
std
ljmp
pop
sbb
ret
mov
stc
xchg
cmpb
ds
in
mov
outsb
stos
lock
call
inc
lret
push
clc
aad
addb
sbb
out
xlat
sbb
dec
sbb
lea
push
fnsave
orl
mov
loop
scas
inc
loopne
mov
lea
cs
mov
adc
push
pusha
scas
cmp
test
mov
outsl
loope
jnp
shlb
inc
or
icebp
mov
stc
mov
rorb
lods
cmpsl
popf
cmp
sbb
sub
xor
push
lahf
loopne
sub
sub
loop
sar
push
sbb
mov
ror
jo
aas
jbe
sbb
and
int
inc
mov
cmp
movsb
sub
mov
lahf
adc
mov
into
cs
and
add
jbe
adc
lea
imul
fsubs
jecxz
push
push
jp
push
mov
cli
fbld
cwtl
pop
xor
fidivrs
outsb
mov
cltd
pusha
sbb
mov
dec
sarl
sub
and
test
xor
cmpl
xchg
mov
cmp
mov
inc
sarl
and
mov
insb
push
int3
adcb
push
pop
je
inc
fwait
lds
das
sub
sti
jle
nop
sub
pop
mov
orb
cmc
jne
sbb
hlt
mov
mov
jg
mov
ret
and
mov
xlat
in
lcall
xor
fcomps
xor
fildl
fmuls
call
mov
aas
out
rcrl
pop
les
insl
mov
test
push
in
mov
xchg
mov
sbb
inc
dec
stos
insl
ja
push
cltd
insl
jl
mov
shlb
mov
jg
dec
adc
sub
inc
shlb
repnz
push
pop
xchg
mov
addr16
dec
fdivs
test
cmp
mov
mov
sbb
cmp
mov
dec
mov
jb
push
and
mov
sarb
dec
push
fnstenv
xor
cld
icebp
xor
daa
cmp
sub
push
mov
inc
cmp
cmp
stos
data16
dec
or
inc
hlt
or
aaa
bound
shrl
ja
out
xchg
jmp
int3
fbld
nop
outsb
pop
mov
test
mov
lret
jo
and
outsl
mov
inc
fbld
mul
xchg
sbb
inc
out
sbb
popa
xor
jo
jmp
subl
xor
adc
stos
mov
fsubrl
jecxz,pt
lea
sbb
pop
movsb
push
fisubrl
push
mov
sti
fs
test
add
ja
sbbb
mov
or
clc
shlb
repnz
xchg
jp
movsl
outsl
and
outsl
cwtl
cli
dec
xchg
nop
xor
push
das
push
decl
cmp
or
or
nop
outsl
pop
leave
cmp
add
mov
or
imulb
dec
pusha
mov
es
sbb
push
and
enter
aaa
jne
test
ret
inc
leave
sub
adc
inc
mov
mov
lret
pushl
cmp
or
dec
das
scas
outsb
mov
in
cli
mov
stos
arpl
insb
cmp
rcll
sbb
fchs
cs
out
cmpsb
lock
cmp
add
clc
outsl
add
pop
xchg
sub
push
add
xor
lret
sub
inc
inc
jnp
pop
mov
add
test
mov
adc
das
cmc
pop
insb
clc
stc
int
mov
popf
inc
cmp
inc
push
or
stos
inc
sarb
fcmovu
rcrb
cltd
mov
sbbb
mov
inc
arpl
loopne
clc
and
mov
hlt
pop
dec
enter
add
mov
push
sbbl
dec
mov
jg
aad
pop
dec
test
and
scas
fsubl
fbstp
cli
push
lock
pop
pop
mov
sub
or
lods
add
ljmp
push
mov
addr16
out
xchg
and
inc
mov
mov
push
andb
test
out
dec
jge
lahf
pop
dec
xor
mov
xchg
mov
pop
cmpsl
fs
xor
cli
aaa
fstl
into
movsl
xchg
imul
scas
jp
inc
pushf
outsl
cmp
or
pop
outsl
cwtl
pop
cmpsb
aaa
or
int
aaa
fimull
pusha
call
aad
lret
mov
cmp
jmp
jl
jo
or
popa
cld
jno
stos
add
mov
loopne
call
mov
shll
nop
jmp
sbb
mov
mov
push
ret
sub
negb
cwtl
mov
sti
test
in
push
and
push
jmp
mov
mov
sbb
cmp
and
mul
or
and
sub
push
fadd
sbb
xor
jl
lret
sbb
add
icebp
shlb
adc
jge
icebp
push
push
jo
add
pop
jbe
mov
outsb
sub
cmp
fisttpll
icebp
pop
sbb
mov
loopne
push
scas
inc
out
test
pop
inc
xchg
outsl
daa
pop
xchg
pop
cwtl
int3
inc
or
ffreep
inc
cltd
orb
popa
jmp
ret
sti
in
add
add
pushl
pop
sbb
mov
jno
mov
or
mov
lret
les
insl
mov
xor
sbb
jne
in
sbb
mov
push
pop
shll
inc
add
and
mov
sub
jmp
test
lcall
fcoml
mov
sbb
test
jmp
aad
jp
aaa
ljmp
or
jb
arpl
mov
mov
sbb
outsl
and
xchg
cmp
jb
mov
mov
test
notb
mov
std
aas
rcl
push
cmp
sbb
mov
mov
mov
mov
jo
pop
shlb
cmp
jg
add
xchg
std
imul
push
cmc
mov
adc
std
loop
sbb
jbe
notl
roll
cld
lcall
pop
arpl
ljmp
push
sub
arpl
das
xchg
rclb
add
inc
outsl
pushl
xor
out
dec
bound
sub
add
mov
adc
mov
xchg
or
cmp
sbb
rclb
jns
jmp
rorb
jg
adc
adc
fsubrs
mov
jg
jo
push
mov
fs
aam
inc
es
cwtl
lea
push
push
mov
add
fcmovne
sub
pop
push
gs
popa
mov
fldt
dec
int3
rorb
dec
mov
in
sbb
mov
int3
push
rclb
pop
jle
decl
pop
ss
je
ret
push
scas
sahf
adc
mov
mov
call
test
dec
push
incb
fdiv
inc
dec
or
or
cmp
adc
add
sahf
mov
mov
push
clc
out
outsb
push
adc
cmp
dec
icebp
lea
je
out
xor
and
iret
rorl
xchg
ficoml
jmp
inc
adc
pop
pusha
movsb
lret
movsb
std
mov
push
data16
js
pop
lret
mov
inc
mov
cmp
add
loopne
loopne
lods
mov
mov
dec
lahf
cmp
pop
pop
mov
xchg
dec
stos
std
iret
sar
mov
jecxz
jno
inc
int
lahf
xor
xrelease
push
out
mov
cmp
jmp
in
inc
and
mov
mov
xor
pusha
loop
insb
outsl
xchg
inc
cwtl
sbb
mov
mov
sub
sbbl
hlt
cmp
push
imul
add
cmpb
in
mov
push
aam
adc
or
cs
mov
mov
pop
outsl
xchg
mov
cmp
lcall
icebp
or
pop
push
push
cltd
incb
orb
sub
inc
inc
inc
into
scas
mov
xor
js
mov
cld
dec
xor
mov
jno
xchg
rorl
fs
mov
and
outsl
or
mov
inc
inc
and
fiaddl
mov
sti
in
fwait
in
cmpsb
aad
cmp
mov
xchg
repz
sbb
mov
outsl
push
jge
push
ror
lea
xor
insb
lcall
je
dec
out
or
push
fldenv
test
and
mov
mov
sahf
mov
add
fadds
lock
out
and
fwait
stos
idivb
xor
sbb
int3
mov
jecxz
loopne
inc
mov
pop
dec
sub
pop
mov
mov
mov
add
pop
push
adc
xchg
mov
rcll
cmp
sbb
stos
insl
xor
iret
sub
ret
mov
aad
push
push
addr16
push
icebp
bound
mov
outsl
push
pop
push
aaa
inc
and
jbe
mov
push
shlb
addr16
aaa
loope
adc
cmp
cmp
push
into
sbb
lcall
outsl
aam
inc
rolb
push
xchg
ficoml
mov
jg
inc
lds
in
adcl
jmp
pop
mov
cmp
pop
clc
lods
aaa
lds
and
push
inc
cli
js
fldt
xor
mov
mov
imul
int3
lods
loope
push
mov
sti
xor
mov
sti
xchg
data16
or
lret
add
jge
push
jecxz
mov
pop
clc
inc
or
int3
out
inc
stos
fistps
incl
mov
into
fistl
lret
sbb
lds
imul
fimull
sti
push
inc
or
sbb
int
test
gs
stc
jae
mov
sub
icebp
jns
mov
and
dec
mov
jg
shrl
sarb
arpl
fs
lods
loop
test
lea
lds
or
je,pt
iret
test
mov
mov
mov
stos
in
mov
aad
aad
lock
aad
mov
jbe
mov
flds
mov
adc
fsubrl
and
dec
nop
mov
mov
in
mov
aas
ret
lds
mov
cli
or
jecxz
push
xor
cmp
mov
ret
xchg
data16
pusha
sbb
adc
xchg
ret
jmp
xchg
movb
sarl
popa
xchg
shlb
adc
jns
sbb
pop
xchg
scas
mov
push
xchg
ljmp
hlt
insl
lods
test
and
es
inc
cmpsb
and
cmp
mov
add
mov
jne
cmp
inc
pop
insb
insl
sub
pop
jno
push
insb
out
incl
sub
push
sub
cwtl
sub
xchg
push
cmc
outsl
push
stc
cmp
inc
sti
push
andb
jecxz
iret
ret
jg
daa
nop
adc
sub
out
mov
mov
adc
jae
sub
sar
jo
mov
xchg
cmc
out
gs
adc
sbb
sbb
js
pushl
push
mov
jle
in
mov
push
mov
pop
sub
sahf
cmp
sbb
cli
push
inc
or
push
push
jmp
mov
subl
xchg
into
adc
imul
jo
daa
in
mov
pop
or
mov
dec
dec
int3
bound
aaa
push
adc
int3
cli
add
mov
mov
or
jo
pop
or
mov
inc
push
and
and
daa
mov
inc
push
push
push
xlat
rorb
jmp
scas
lods
dec
scas
scas
out
jae
push
sub
mov
fistps
mov
adcb
aad
adc
lods
cmp
or
stos
sub
popf
pusha
sti
in
into
xor
pop
pop
fidivrs
add
movsb
das
add
mov
push
loop
mov
adc
lock
repnz
insl
inc
loopne
push
jno
lods
sub
sbb
jg
imul
push
and
popf
or
cmpsl
xchg
in
loop
fisubrs
jnp
adc
mov
outsb
jbe
push
js
jb
insl
mov
jmp
insb
fwait
data16
cmp
jne
adc
sbb
fistl
fidivrs
lea
bound
mov
push
push
adc
imul
jmp
mov
mov
roll
and
cmp
inc
push
mov
inc
dec
pop
pop
inc
ja
push
inc
xchg
test
mov
std
mov
inc
lea
scas
orb
popf
jb
jbe
or
pop
pop
add
mov
sbb
fists
jb
mov
or
jo
fmuls
and
mov
mov
loope
adc
mov
add
pusha
sbb
inc
aam
loopne
movsl
mov
and
push
pop
addr16
mov
sarb
dec
shrl
push
sbb
lock
roll
sub
test
das
adc
ss
js
jns
or
bound
jle
or
into
stos
loopne
mov
or
or
push
pop
stc
and
pop
sbbl
in
decl
shlb
xchg
jo
xor
sbb
in
scas
sub
mov
cmc
pop
mov
in
and
mov
lahf
add
mov
mov
fldl
sbbb
and
adcb
cwtl
adc
sbb
lahf
sub
jnp
incb
hlt
xchg
nop
mov
xlat
push
push
jno
scas
rol
pushl
aas
sbb
add
push
pop
mov
dec
subl
xchg
inc
mov
addb
xor
cmp
push
std
inc
pop
xor
clc
sbb
out
pop
scas
scas
mov
jecxz
fisttpl
cltd
pusha
call
outsb
loopne
testb
xchg
dec
call
jge
dec
sarb
lock
test
adc
mov
xchg
push
incl
sub
xor
enter
shrl
rcll
rcrb
hlt
cmpsb
fldt
insb
xchg
fs
add
and
adc
adc
xorb
mov
xchg
mov
inc
lds
mov
add
add
lret
adc
or
test
outsb
cmp
jg
ret
sub
dec
cmp
pop
xchg
xor
and
adcb
cmc
xchg
nop
and
mov
sbb
sub
sbb
cmp
mov
dec
shr
or
loope
addb
mov
inc
jnp
mov
pop
inc
out
add
lea
jmp
sbb
pop
sub
mov
dec
popa
mov
sub
mov
mov
and
add
or
nop
mov
fists
orb
mov
xchg
cmp
push
xlat
sbb
jmp
add
movsb
xor
or
jmp
mov
stos
pop
aas
pop
std
adc
test
xchg
mov
or
lds
mov
cmc
fwait
dec
fsubrl
shlb
repz
inc
sbb
fwait
jmp
sbb
cmp
and
pop
bound
stos
mov
cmpsb
xchg
fsubs
cmc
test
lea
mov
cwtl
mov
xchg
mov
in
sub
push
fdivl
jl
inc
inc
daa
xorl
pop
addb
insb
rol
stc
add
cltd
mov
and
dec
inc
into
popf
mov
and
inc
dec
sarb
sti
push
mov
outsb
mov
cltd
mov
and
xchg
pop
sbb
jecxz
lea
pop
nop
dec
out
mov
scas
or
enter
ljmp
std
test
fsubrs
pop
xor
adc
fcomi
shlb
insb
cli
push
testl
outsb
insl
ret
pop
cmp
and
std
lods
sub
insb
ficompl
hlt
loop
fucomi
fnstcw
cmp
loop
xchg
sbb
stos
in
hlt
das
cmp
or
lret
call
cltd
in
or
test
mov
mov
xor
mov
int3
add
rclb
xchg
ret
arpl
test
cmpsb
test
mov
popl
ret
push
jle
mov
rclb
lods
aaa
mov
pop
xchg
cld
out
enter
repz
adc
scas
mov
aad
pop
sti
add
incb
orl
pop
aam
mov
inc
in
push
fcmovnb
idivb
das
inc
dec
push
add
add
pushl
shrb
mov
mov
jb
inc
pop
adc
and
adc
test
and
ret
xchg
sub
mov
test
and
add
jp
cmp
cwtl
mov
orb
dec
pop
enter
incl
dec
jge
cmp
xchg
pusha
xor
aad
jg
aam
and
aaa
jmp
ret
inc
out
xchg
mov
dec
movsl
push
test
xor
es
jae
lea
cltd
and
jbe
pop
xchg
mov
test
push
sub
sub
lds
or
xor
jge
jg
aam
add
lds
sub
and
mov
in
js
andl
mov
ret
gs
push
mov
int3
icebp
das
inc
sti
mov
pop
ret
inc
cmc
addl
adc
outsl
ja
push
jg
mov
mov
lcall
mov
lds
dec
dec
movsl
cli
lods
ds
lea
add
mov
add
ret
icebp
cmpsl
daa
xchg
pop
add
orl
popa
sub
mov
or
fs
mov
in
fildl
repz
mov
cmp
xchg
lods
mov
inc
mov
enter
outsl
fstps
ja
popf
filds
lret
push
loopne
pop
cmp
cwtl
and
ret
and
xor
dec
lea
sub
sub
and
testl
sbb
sbbl
add
shl
and
addr16
clc
mov
pushf
xor
and
xchg
push
jnp
mov
lods
mov
and
shl
dec
jbe
xor
jg
dec
inc
cmpsl
pop
mov
pop
or
cld
cmp
jle
jge
inc
xchg
sti
dec
icebp
sub
sub
cmp
mov
dec
dec
call
mov
sub
outsl
jg
dec
adc
arpl
add
xchg
add
outsb
test
jne
xchg
xchg
mov
fwait
and
je
push
enter
clc
cld
adc
mov
inc
in
les
mov
dec
mov
jae
incl
push
sti
xor
xor
hlt
xchg
je
ljmp
xor
xchg
cmp
lds
cmpsl
imul
inc
push
dec
push
inc
adc
dec
les
xchg
and
mov
mov
cmp
push
mov
push
sbb
inc
mov
pop
xor
fiaddl
loopne
insb
mov
pop
pusha
push
cmp
dec
fwait
jmp
ffreep
jo
cmpsb
xchg
mov
int
xor
add
movsl
in
dec
js
push
mov
xchg
fs
pop
not
repnz
cld
lods
sbb
incb
xchg
fwait
sti
or
push
pop
flds
pop
fucomip
lea
clc
xor
lret
pop
aaa
outsb
sbb
scas
cmp
cmpsl
imul
out
data16
jmp
jmp
shll
lods
mov
inc
sub
xchg
jp
ljmp
jne
hlt
dec
iret
imul
pop
pop
aam
test
repnz
sub
jge
or
shr
mov
jp
outsl
cltd
inc
inc
aas
adc
or
add
iret
push
aam
adc
das
xor
ret
filds
add
movsl
imul
sub
int3
ljmp
nop
andl
mov
pminub
mov
mul
sub
sub
movsb
pop
je
jae
repz
sbb
je
out
xchg
mov
mov
push
jle
inc
iret
lods
pushf
pusha
jmp
mov
loop
das
adc
push
add
push
mov
xchg
orl
lcall
mov
cmp
add
dec
sub
test
or
ljmp
jg
lret
imul
pop
loopne
loop
pushf
dec
adc
inc
outsl
or
sub
ret
jmp
imul
pop
sub
inc
lods
add
or
rcrl
data16
lret
pop
popa
test
shrb
outsl
ffreep
xor
aas
int3
sbbl
imul
negb
and
mov
cld
push
push
repnz
pop
test
popf
ljmp
adc
js
int3
mov
or
test
adc
cmc
add
jge
sarl
les
es
push
shll
pop
scas
push
sahf
and
outsb
lods
les
push
add
mov
inc
sbb
cmp
aas
push
push
shll
xor
xchg
andb
ja
or
movsl
pop
cli
test
mov
lea
int3
sub
adcb
or
dec
cmp
cli
pop
scas
std
dec
mov
pop
sbbl
sbb
or
in
dec
repnz
enter
mov
fldt
mov
call
cmc
push
das
jl
add
test
and
sbb
jle
addr16
sub
mov
push
xor
mov
insb
clc
fildll
hlt
lods
sarl
xchg
js
xor
inc
cmp
jne
shlb
push
adc
out
jmp
in
mov
xchg
dec
das
aam
js
notl
test
mov
dec
dec
sub
inc
sarl
stos
cs
mov
insb
or
movsl
jle
pop
ljmp
outsb
jns
dec
mov
dec
rcll
lock
cwtl
cld
sbb
push
sub
push
mov
adc
stos
jmp
xor
ljmp
outsl
push
sbb
mov
andb
push
adc
mov
xchg
push
lds
pop
insb
lret
pop
aas
in
sbb
fs
xor
test
fs
mov
dec
mov
add
adcl
enter
mov
jbe
movsl
lods
leave
inc
xor
insl
xlat
jg
sbb
ss
bound
es
popa
add
add
je
fisttpl
xor
jecxz
out
arpl
push
ret
sub
leave
cmc
inc
push
test
xchg
lcall
mov
or
xor
and
fnstcw
sti
imul
xor
call
push
dec
leave
shll
inc
or
or
add
sti
xchg
xlat
pusha
push
mov
or
pop
test
jmp
mov
jle
dec
and
aam
scas
fadd
test
addb
lahf
sbb
xorb
mov
mov
pop
mov
pop
das
insl
push
cld
xor
out
arpl
stos
jg
mov
mov
pop
sbb
jo
mov
roll
sub
cmpb
enter
push
hlt
bnd
push
sub
adc
lea
xchg
jae
push
scas
pop
loop
aad
cmc
fwait
call
mov
cli
fcomi
out
jnp
pop
jecxz
mov
cli
es
mov
fisttpll
test
inc
push
jg
in
pop
push
ret
and
mov
das
cld
test
cli
stos
fcomip
es
hlt
sbb
ficompl
out
add
mov
imul
pop
lret
push
loopne
fildll
mov
cmp
ja
fucomip
test
pop
cmp
inc
and
mov
xchg
pop
movsb
push
mov
pusha
lea
lock
or
jb
and
sbb
nop
icebp
inc
or
fdivs
dec
std
insl
sti
das
cmp
add
and
push
add
sbb
add
fs
xor
push
or
xchg
loope
xchg
or
cmpsl
enter
pushl
int3
rcll
dec
cli
cld
mov
mov
scas
imul
and
ret
or
aaa
fsubp
outsb
fsts
jne
shlb
push
jecxz
addr16
mov
jp
rcrl
je
jecxz
bndldx
pop
mov
jle
mov
lds
icebp
or
add
add
lds
xor
inc
push
lods
std
inc
ljmp
mov
cs
inc
fldcw
push
or
xorb
push
lahf
inc
dec
aam
test
jns
dec
fadd
mov
and
cltd
stc
add
lock
cmp
dec
pop
mov
shl
pushf
fs
push
mov
std
das
lret
mov
sub
aad
jle
xor
fisubrs
inc
jl
mov
cmp
and
sbb
ret
mov
inc
ret
and
nop
push
cmpsb
mov
insl
xchg
stc
insl
push
dec
add
stc
sbb
insb
pop
inc
out
mov
lcall
clc
mov
repz
inc
out
std
inc
pop
jmp
mov
or
out
cli
shl
dec
and
mov
rcll
xchg
repz
ljmp
sbb
pusha
data16
jae
ffreep
or
lea
adc
rorl
imul
push
add
pop
lods
cmp
xor
daa
insb
pop
dec
outsb
xchg
outsb
pop
pop
lret
cld
into
repnz
cld
mov
pop
pop
jb
xchg
mov
fbld
ljmp
aad
and
or
iret
daa
add
hlt
adc
add
dec
and
mov
dec
bound
orb
mov
push
push
gs
pop
mov
fmull
mov
insl
leave
inc
enter
movsl
cmc
mov
sub
fistl
xchg
into
sbb
mov
or
xchg
jns
lea
outsl
push
xor
mov
movl
jnp,pt
mov
scas
push
xchg
sbb
xor
roll
add
fisttps
dec
cltd
pushf
cmpsb
adc
jp
mov
pop
fmuls
adc
call
das
roll
push
out
dec
or
dec
lcall
addr16
cmp
orb
jns
das
lcall
pop
xor
aas
push
jns
test
adc
shr
inc
test
aam
pop
sub
insb
ret
lods
ret
or
push
stos
mov
ret
mov
mov
mov
sbb
lret
cmpsl
aam
rcl
and
cmpxchg
fsubrl
and
aaa
fimuls
cmp
xor
rcrl
int
push
pop
mov
adc
cs
adc
adc
sub
pop
and
lret
pop
arpl
leave
cmpsb
and
cs
addr16
lret
and
inc
or
cmpsb
in
inc
mov
lret
and
fbstp
lcall
stc
ret
test
std
mov
adc
fwait
jg
dec
and
and
and
push
and
mov
test
repnz
sbb
aas
test
or
sbb
loopne
int
cmc
inc
add
jae
sbb
add
and
or
clc
sub
push
mov
dec
lcall
scas
sahf
pop
mov
pushf
rclb
jle
cli
jae
loopne
mov
mov
mov
mov
es
add
mov
and
mov
int
xor
pop
jmp
pop
js
mov
mov
inc
adc
out
pusha
and
sbb
add
push
xor
clc
push
pop
fdivs
in
jae
mov
xor
sarl
pop
shll
jp
jno
dec
js
clc
mov
js
mov
loope
cwtl
std
mov
mov
push
ret
mov
mov
xor
add
ret
lock
int
repnz
insl
jp
in
inc
sbb
fbld
and
dec
sbb
cwtl
xchg
outsb
fistpll
loopne
call
push
mov
lods
ret
mov
mov
les
push
aas
pop
and
push
or
mov
outsl
xchg
pop
ds
mov
ljmp
or
mov
mov
stos
addr16
sbb
out
adc
xlat
inc
lock
pop
mov
mov
shlb
ds
mov
cltd
ret
cmpsl
dec
mov
add
mov
xchg
jo
mov
mov
or
lods
fstpt
sub
jp
scas
bound
or
lret
into
fisubl
sbbb
mov
cwtl
movsb
jge
imul
hlt
and
adc
cli
inc
cmp
testb
cmp
push
pop
xchg
rcrl
add
outsl
inc
push
adcl
sub
daa
clc
or
add
mov
sbbl
decb
sub
cld
cmp
hlt
cmp
out
sbb
incl
or
out
test
jl
xor
xchg
dec
push
xchg
and
mov
out
iret
mov
das
push
aas
out
cmc
jp
daa
mov
cmp
jge
pop
push
les
jle
imul
repnz
je
in
jmp
inc
clc
fisttpll
fs
sbb
jge
mov
mov
stos
or
and
ret
shll
or
mov
add
and
test
pop
jl
fsubl
mov
mov
loopne
outsl
sbb
jecxz
pop
xchg
leave
icebp
outsl
add
aam
arpl
ljmp
sbb
jb
call
cmp
fcom
pop
ljmp
mov
les
xchg
sarl
xchg
mov
adc
mov
inc
das
adc
ret
xchg
cwtl
sbbl
pop
add
dec
loopne
std
ds
or
push
add
je
pop
call
mov
push
test
dec
inc
scas
push
outsb
dec
jl
add
test
call
sarb
cltd
mov
push
jmp
sti
lods
dec
addl
dec
push
popa
jl
jns
in
mov
add
repz
insl
outsl
insl
int3
mov
cmp
push
scas
inc
cmp
pop
adc
ret
or
aam
icebp
inc
adc
negb
jle
std
mov
add
mov
pop
aas
xchg
mov
dec
mov
jmp
push
mov
xchg
mov
push
lea
xchg
fcom
daa
adc
hlt
mov
outsb
mov
cmp
lods
add
and
in
dec
es
ljmp
cmp
orb
jg
ret
incl
adc
cs
je
movsb
mov
test
rcll
ss
push
repnz
out
inc
adc
cmc
mov
cmp
xchg
jb
push
les
mov
incl
pusha
loope
dec
mov
sbb
dec
jmp
es
ja
call
movl
mov
stos
mov
mov
jbe
cmp
insl
mov
insb
test
test
decl
cwtl
mov
in
and
sbb
jl
mov
sbb
test
xor
mov
adc
jmp
dec
dec
adc
mov
incl
imul
sbb
fnstcw
or
xchg
aam
fcmovnbe
pushl
jg
outsl
ror
gs
aad
or
sbb
jb
test
xchg
fxch
mov
loopne
lods
sub
push
xchg
xor
jecxz
push
dec
cmp
decl
adc
sbb
or
pop
xchg
xor
sbb
dec
cld
ja
adc
add
nop
lcall
test
sahf
adc
lods
push
xlat
pop
jb
mov
fmull
or
cmp
add
js
mov
and
ljmp
adc
adc
push
inc
push
jne
xchg
dec
lods
xor
mov
int3
sti
inc
pop
or
decb
popf
inc
inc
cltd
adc
test
or
or
bound
push
popf
inc
push
adc
xor
xor
aas
and
mov
mov
inc
pusha
xor
xor
xchg
inc
test
cli
pop
or
dec
iret
inc
and
icebp
mov
jno
inc
cmp
push
push
lea
push
mov
shll
mov
push
call
push
xchg
mov
adc
push
lret
push
loopne
xor
decb
cwtl
add
mov
jmp
xchg
adc
icebp
in
or
and
mov
movsl
scas
pop
mov
je
xor
jb
mov
mov
lods
xchg
test
clc
add
loope
or
xchg
idivb
xor
xor
jmp
addr16
jmp
add
inc
ljmp
inc
test
cwtl
sbb
clc
insb
fisubrl
mov
lea
adc
jle
pop
xor
push
mov
mov
jl
lret
ret
test
jg
das
pop
fs
inc
mov
mov
dec
test
mov
and
xchg
inc
out
mov
in
inc
sbb
dec
daa
mov
xchg
jae
mov
mov
or
add
ja
push
xchg
push
aad
or
pop
lret
lret
dec
shl
test
adc
push
daa
adc
hlt
push
push
and
inc
mov
fsub
jbe
jb
xchg
daa
sub
scas
adc
pop
push
mov
push
pop
jo
adc
jmp
ljmp
or
in
or
insl
and
push
ficoml
mov
incb
out
dec
lods
cmpsb
adc
shrb
xchg
sub
jbe
jl
cmp
incl
mov
inc
inc
pop
and
iret
call
jmp
push
in
inc
aaa
inc
ja
in
mov
and
mov
adc
or
inc
pop
ret
dec
fldl
push
add
mov
jnp
shll
mov
imul
add
mov
adc
orb
inc
call
icebp
ja
loope
dec
cwtl
adc
repz
in
jae
pop
add
mov
mov
push
sar
cwtl
shrl
pop
push
rclb
adc
incl
mov
lea
ljmp
ja
int
mov
scas
push
and
loopne
icebp
pop
loopne
cltd
push
or
and
or
sbb
mov
pop
sub
xor
sar
jecxz
dec
lret
cmp
cmc
orl
out
mov
lods
out
xchg
add
sub
jge
xchg
es
sub
ret
add
sarl
sbb
jmp
in
sub
dec
cmp
jp
cli
pop
jecxz,pt
ret
and
mov
insb
call
sahf
jns
xor
and
jo
fdivr
fcmovnb
push
pusha
das
and
int3
adcb
mov
fbld
cmpsl
aam
scas
rorb
movsl
loope
shrb
push
cmp
rorl
inc
or
loopne
mov
outsl
and
sbb
decl
aad
push
repz
dec
mov
jnp
mov
fstpt
adc
sub
fldenv
mov
ds
test
cwtl
jne
xchg
ret
lds
mov
sahf
das
test
das
std
or
pop
mov
xor
jb
fs
fists
mov
inc
scas
mov
dec
roll
sbb
or
jne
push
or
push
xor
call
dec
loope
xchg
push
mov
test
out
xchg
pop
xor
std
es
sub
pop
jg
call
movb
into
arpl
inc
jmp
clc
cmp
shrl
xor
lret
mov
and
jnp
test
xor
pop
adc
inc
cmp
ret
cltd
sbb
test
daa
das
xor
inc
sbb
cli
cmc
push
and
mov
fldl
pusha
mov
movb
mov
ffreep
dec
shrl
mov
sbb
lods
std
hlt
or
and
mov
pop
or
dec
or
hlt
sbb
mov
jbe
loopne
push
ljmp
inc
dec
xchg
sbb
adc
push
vcvttps2dq
in
jb
fdivs
adc
test
push
push
lods
repz
loop
mov
xchg
cmp
jge
out
xchg
cld
cltd
test
addl
sbb
inc
add
shll
cs
jl
push
test
lret
cmp
mov
fstl
mov
pop
lock
pop
inc
mov
push
rolb
dec
subl
ljmp
and
pushf
cmp
lds
loope
or
cli
ja
movsl
xchg
mov
xchg
sub
pop
cmp
sbb
adc
fisubs
outsl
dec
inc
jecxz
imul
shll
dec
outsb
mov
mov
ret
add
icebp
mov
faddl
xor
or
jns
call
add
popa
sub
mov
jae
jmp
and
test
pushf
xor
aam
rclb
stc
mov
or
add
into
sub
lds
in
or
add
test
jbe
cs
test
add
jns
sbb
or
mov
jl
pusha
loope
insl
adc
pop
inc
outsb
aaa
gs
jmp
insb
dec
mov
sbb
adc
fnstsw
dec
lea
leave
inc
aad
xchg
dec
ljmp
pop
clc
mov
hlt
dec
pusha
push
jb
add
mov
sbb
hlt
lcall
rcrb
cmp
push
imul
jle
inc
lods
adc
dec
roll
jns
xchg
outsl
lock
fstpt
mov
daa
fucomip
sbb
call
xchg
xchg
dec
mov
cmp
je
leave
push
insb
das
orb
call
push
lahf
icebp
lret
lea
add
sub
dec
lods
jae
pop
pop
pop
ud2
adc
into
jmp
dec
popa
pop
inc
into
xor
inc
ret
and
mov
and
fisttpl
and
dec
andb
pop
jno
cli
enter
xor
xor
call
pop
fcoms
dec
xchg
dec
shrb
mov
nop
inc
jbe
sti
enter
ret
icebp
stos
push
ret
jg
vmovaps
loope
shrb
xor
and
mov
xchg
add
bound
dec
daa
push
test
and
ja
push
sti
test
xchg
jno
sbb
into
sbb
into
inc
add
jno
les
and
add
inc
fisttpl
les
inc
mov
bnd
and
mov
int3
mov
jecxz
lods
push
sbb
pushl
xchg
add
mov
dec
popa
sbb
add
arpl
jb
push
mov
cli
mov
mov
pop
sub
add
je
sub
jno
mov
xchg
dec
mov
cld
xor
pushl
fwait
add
rclb
mov
xor
cmp
fnstcw
cmpsb
aad
mov
out
and
adc
inc
xchg
out
dec
mov
mov
pop
cltd
in
sbb
push
mov
dec
xchg
leave
add
push
fadd
scas
popf
dec
lods
push
mov
dec
pop
mov
sti
mov
push
cmp
inc
inc
or
fwait
hlt
shrb
or
sarl
jp
fiadds
hlt
sahf
test
les
jnp
pop
sub
cmp
push
pop
and
sti
pop
lods
sbb
mov
mov
push
sbb
jge
nop
andl
lods
stos
lock
pop
inc
jo
sbb
and
sarl
lods
out
sbb
adc
loop
mov
cmc
push
inc
push
mov
add
imul
aaa
pop
icebp
adc
and
inc
ja
adc
and
test
lods
nop
fs
mulb
aad
dec
rorb
scas
mov
imul
int3
pop
push
inc
adc
or
mov
xchg
jb
push
mov
mov
test
cmp
sbb
jne
mov
cmpsl
dec
rol
pusha
mov
jbe
dec
jle
outsb
jnp
icebp
test
call
aas
cmp
pop
sbb
xchg
xor
test
sub
mov
cs
or
or
jmp
inc
fisttpl
popa
clc
add
lods
mov
push
leave
cmp
sub
jne
das
mov
orl
inc
adcb
push
and
push
ficoml
jg
sub
cmp
sub
xchg
in
les
insb
push
dec
sarb
pop
sbb
int3
and
outsl
mov
js
imul
sub
jl
jge
mov
pop
pop
pop
push
popa
pop
push
lods
incl
stos
stos
dec
adc
imul
ss
adc
lock
mov
mov
jle
aas
gs
repnz
jbe
pop
shll
outsl
aaa
and
dec
fiadds
sub
pop
or
lds
dec
push
fldt
dec
daa
test
jl
loope
inc
pop
mov
add
js
cmp
add
push
or
and
sbb
or
adc
pop
lea
and
cmp
sbb
and
add
imul
je
leave
add
fstps
push
aad
sahf
outsl
mov
lret
inc
pusha
xchg
lcall
dec
adc
adc
sbb
add
add
adc
test
adc
push
imul
mov
and
sar
stos
pop
sub
fisubs
rcr
pop
dec
and
pop
xor
test
push
cwtl
mov
push
fisttpl
leave
xchg
stos
push
mov
mov
adc
ret
mov
stos
incb
sbb
scas
pop
ljmp
push
pop
repnz
shlb
mov
ja
add
and
sub
das
icebp
pop
xor
jle
inc
jb
cmp
test
mov
out
and
jmp
jns
popa
icebp
and
pop
cli
or
repnz
shlb
jns
xchg
add
sbb
inc
fcomps
daa
adc
jmp
out
jle
sbb
mov
lds
and
jg
out
clc
jg
inc
arpl
test
xchg
xchg
jmp
pop
in
mov
imul
int3
andl
pop
gs
fwait
add
sub
push
jg
call
pop
push
inc
adc
adc
jmp
fstpt
test
pop
cmp
je
cwtl
loopne
pop
insl
cli
aaa
inc
in
loope
fsts
loope
dec
lods
les
jns
jae
das
sbb
mov
js
pop
xchg
lahf
inc
inc
in
lret
lcall
bound
add
cli
add
cmp
popa
inc
jbe
cmp
add
lret
scas
cli
xor
adc
sub
push
fbld
or
dec
jle
shlb
sub
js
test
test
dec
pop
jp
jecxz
leave
mov
jno
stos
adc
into
fistpl
sbb
cmp
fs
and
in
outsl
call
and
out
aam
xor
mov
pop
sbbb
fists
sahf
inc
ja
in
outsb
jae
insl
pop
bound
rolb
push
pushf
pop
clc
mov
into
and
aaa
stos
adc
lret
sar
pop
in
inc
or
jne
dec
jge
sbb
mov
xchg
mov
push
inc
lods
mov
mov
mov
inc
adc
fists
pop
inc
adc
mov
fildll
scas
pop
fsubl
and
mov
sti
and
in
mov
push
fwait
inc
or
pop
push
das
insl
mov
and
out
mov
or
decl
and
xor
pop
pop
outsl
xchg
bound
push
pop
push
in
stc
in
mov
add
mov
xchg
movsb
xchg
dec
jge
test
mov
lods
pop
pop
dec
add
mov
add
xor
add
loope
pop
fwait
jae
aaa
lods
jmp
mov
sub
mov
fdivl
mov
dec
fstpt
adc
loopne
pslld
aaa
dec
mov
mov
sub
jae
inc
adc
and
loop
mov
or
mov
addl
dec
push
mov
dec
pop
in
movsb
pushl
adc
or
sbb
js
lcall
pop
outsl
mov
aas
repz
inc
aas
adc
jle
push
mov
sub
fcomps
xchg
mov
sub
das
push
aam
ja
fistpl
mov
outsb
dec
icebp
xor
ss
popf
sbbb
lcall
outsb
sbb
jle
call
jle
cmpsb
icebp
push
add
xchg
xor
js
movsl
dec
push
push
call
jge
xor
fstpl
hlt
cltd
cmp
mov
scas
daa
adc
aad
idiv
dec
ret
jle
cmc
cmp
outsl
out
js
jno
mov
pop
das
pop
xchg
xor
nop
pop
adc
adc
enter
fildll
int3
arpl
xlat
cltd
and
fsub
lfence
dec
dec
repz
cmp
outsl
cmp
cwtl
loop
lahf
pop
xchg
sbb
push
mov
mov
clc
push
add
je
lock
cwtl
in
xorb
fwait
stc
xor
and
leave
lods
bound
xor
lcall
inc
stos
dec
sarb
pop
or
adc
fs
outsl
mov
inc
es
dec
loope
dec
sti
inc
mov
inc
jb
addb
add
push
pusha
daa
and
add
icebp
pop
call
inc
inc
adc
inc
hlt
and
call
lcall
outsl
shlb
cltd
dec
test
xor
rorl
aaa
pop
cli
sub
js
mov
xchg
and
fstpt
pop
ja
loop
pop
cmp
jbe
adc
cmpsl
js
scas
xor
cltd
sub
mov
insl
adc
fbstp
add
lret
mov
add
push
test
inc
call
hlt
push
or
sbbl
leave
frstor
sti
out
pop
inc
invlpg
les
stos
cmp
sti
addr16
or
mov
test
mov
loop
inc
test
movsl
jg
and
pop
in
push
call
insb
rcrb
jl
jg
add
hlt
or
xchg
popa
cmp
movsl
mov
mov
jno
decl
andb
mov
negl
inc
inc
idivb
xchg
mov
sbb
xchg
enter
hlt
push
jecxz
lods
xchg
pop
mov
ss
push
or
sbbl
test
cmp
in
mov
adc
pop
push
mov
in
jl
sarl
jle
dec
data16
orb
cmp
stc
dec
mov
sbb
insl
push
sub
jo
scas
jnp
pop
clc
shrb
outsb
pop
inc
inc
and
arpl
lods
fistps
add
in
or
ffree
or
mov
data16
cmc
repnz
jnp
out
xchg
mov
pop
rcrl
aad
insb
push
popl
mov
popf
push
rorb
scas
sahf
icebp
mov
pop
lock
inc
adc
aaa
stc
pop
popa
inc
adc
cld
mov
push
leave
jo
out
jo
das
cmp
and
in
mov
or
cmpsl
xlat
popa
add
pop
test
adc
adc
sti
inc
loopne
mov
fwait
jns
fildll
jg
mov
loopne
mov
xchg
xchg
lret
mov
inc
mov
mov
test
fidivl
push
ds
cmpsl
mulb
jmp
loopne
push
mov
incb
jae
jbe
lea
jo
mov
mov
mov
mov
aaa
inc
xor
idivb
ja
fstenv
cmp
bound
sub
push
test
dec
test
scas
pop
jo
push
jmp
mov
subb
mov
mov
icebp
test
jg
subl
pop
dec
inc
mov
hlt
or
rcrb
jge
aaa
outsb
je
push
push
pop
xor
push
or
mov
test
pushf
sbb
fisttps
movl
jo
adc
fisttpl
mov
jo
or
or
dec
lea
fldl
jb
xchg
pop
iret
test
push
and
mov
mov
ja
dec
es
lret
js,pt
jg
fstpt
mov
mov
iret
push
cli
jp
inc
test
fwait
mov
negb
loope
xor
mov
xor
cltd
test
xchg
fildll
mov
sbb
cld
push
lcall
mov
push
out
int
mov
jg
fdivrp
lea
cld
mov
xchg
das
mov
jno
mov
xorb
cwtl
sbb
das
repz
adcl
xor
lock
movsb
mov
repz
clc
xor
lret
sub
ljmp
aad
or
je
daa
loope
imul
fistpll
test
mov
popa
aas
adc
mov
test
mov
aad
jecxz
mov
dec
inc
or
outsl
cmp
roll
inc
mov
movsb
sub
or
aad
bound
mov
push
pop
pop
adc
arpl
andl
cmpsl
fistpl
dec
dec
test
cmpsb
jle
mov
cmp
jp
mov
in
call
pop
outsl
sub
popa
sar
jmp
dec
jnp
js
mov
sbb
inc
lret
push
push
dec
sbb
mov
xchg
cltd
adc
mov
pushf
cmc
cmp
rorl
fsts
into
daa
lret
inc
dec
movsl
cli
or
lahf
insb
pop
aaa
data16
jg
dec
out
data16
sub
rcrb
call
in
ljmp
dec
jl
pop
jae
add
mov
add
inc
fnstsw
pushf
add
es
hlt
dec
cmp
jno
dec
js
in
push
stos
out
jns
inc
lcall
pop
rorl
outsl
cmp
mov
xor
xor
andb
inc
rcll
adc
inc
scas
lods
cltd
or
sbb
or
dec
test
inc
mov
cmc
or
call
ds
cmp
or
mov
and
pop
or
sub
jp
ja
jbe
add
adc
push
or
mov
lcall
filds
fisubrl
loope
int3
inc
sbb
pop
or
pop
inc
push
and
push
lock
and
pusha
push
mov
icebp
dec
cld
sarb
dec
pushf
fstpl
mov
ret
mov
xor
mov
sbb
loopne
sbb
fists
faddl
mov
aaa
cltd
jns
std
into
push
xchg
push
popf
add
std
pop
leave
daa
add
push
insl
pop
adc
add
mov
mov
arpl
mov
and
nop
xchg
or
push
ret
add
mov
mov
out
lret
mov
pop
xor
push
xor
pop
mov
pop
cmpsl
xchg
std
test
xor
fistps
std
jae
xor
stc
insb
inc
jge
push
addr16
jo
ja
sbb
sbb
push
pop
sub
mov
mov
les
mov
mov
add
jns
and
or
jp
ljmp
mov
outsb
sub
mov
push
sbb
inc
pop
pop
push
sub
cmp
cli
clc
roll
jl
andb
xchg
aad
inc
bound
pop
push
mov
push
mov
xor
aam
test
cmpsb
cmpsb
daa
sub
sub
inc
into
or
icebp
out
decl
fstpl
rcrb
cltd
mov
mov
leave
clc
inc
cvtdq2ps
jbe
fidivrs
sub
in
xchg
push
push
mov
jnp
pop
inc
fldenv
int3
add
and
outsb
push
mov
inc
xor
pusha
adc
pop
nop
adc
test
or
testb
insl
mov
ret
mov
test
jo,pt
fldenv
jl
pop
sub
mov
rcll
fcoms
inc
mov
lds
sbb
xor
sarb
je
adc
push
rorl
push
in
sbb
inc
jg
xchg
fucomp
cmpsb
into
fld
xchg
es
or
loopne
scas
adc
inc
outsl
call
jnp
lret
jo
dec
xchg
jecxz
jno
inc
sub
jp
into
popa
js
mov
scas
or
out
aam
std
adc
pusha
inc
cmpsb
inc
in
sar
jg
sbb
rcll
std
les
pop
pop
pop
cmp
or
idivl
pop
add
push
pusha
xor
inc
aam
lods
insb
mov
mov
adc
jg
or
out
sbbl
inc
mov
nop
jle
out
push
cmp
cld
mov
sub
in
ret
dec
shl
clc
xor
mov
add
cs
in
or
pop
cmpsb
adc
cmpsb
sub
jecxz
insb
dec
add
xchg
repnz
push
adc
int
dec
mov
aam
loope
cld
mov
add
test
inc
mov
cmpl
push
push
pushf
cwtl
in
add
jne
mov
and
lahf
pusha
pop
push
sbb
cwtl
js
or
pop
mov
mov
inc
mov
incl
fstpt
out
mov
adc
and
in
lods
ljmp
ds
inc
dec
cmp
mov
std
movb
in
in
mov
sub
in
push
call
ja
adc
xchg
cmpsb
pop
repz
mov
jle
sub
call
mov
xor
or
adc
leave
xchg
adcb
pop
movl
andl
sub
sub
gs
les
fs
add
adc
or
fists
mov
push
enter
sbb
in
mov
xchg
in
aam
popa
aas
nop
punpckhwd
fldt
scas
jle
pushl
jle
xorb
rcr
das
sub
fdivrs
push
loopne
aas
xchg
mov
mov
cmpsl
mov
adc
push
sbb
xlat
mov
ja
das
inc
lcall
popa
jle
and
and
pop
inc
sti
mov
push
fs
push
dec
les
lcall
hlt
outsl
scas
decb
mov
enter
xchg
xchg
hlt
and
pop
pop
inc
insl
sub
dec
hlt
adc
push
ret
push
sub
pop
sub
rcr
xchg
and
jl
bound
push
mov
test
stos
inc
push
jecxz
fisubrl
push
repz
imulb
aaa
mov
adc
cmpsl
push
dec
sub
outsb
dec
movl
in
jne
dec
pop
or
js
dec
sub
rorb
sub
sti
add
and
mov
jg
sbb
out
xchg
add
add
insl
jg
popa
stc
push
testl
out
ret
les
or
pop
jae
sbb
call
or
inc
pop
sub
cld
test
sub
and
inc
sub
push
add
test
xchg
pop
sbb
mov
add
mov
mov
std
xchg
mov
adc
ret
call
shlb
popf
xlat
inc
add
lea
cmpl
or
jo
test
mov
mov
out
cmpsl
or
gs
sbb
testb
mov
stos
fistpl
and
fadds
inc
inc
data16
lods
dec
hlt
sbb
aad
sub
adc
mov
mov
mov
in
jno
shrl
jp
cs
mov
xor
push
clc
lods
jmp
xchg
jg
adc
fisubl
ja
jne
outsl
mov
dec
mov
out
mov
lock
mov
add
mov
xor
jle
nop
nop
inc
jmp
test
xchg
lahf
pop
outsl
pop
in
cmp
lock
add
orb
mov
loop
mov
and
test
test
loope
movsb
lcall
cmpb
adc
or
mov
je
out
sbb
nop
and
jbe
sub
imul
mov
repnz
data16
cmp
cld
and
adc
pushl
and
imul
mov
aam
mov
into
int
jmp
and
pop
lcall
incl
movsl
popa
shll
adc
loop
pop
sub
aas
sbb
cmp
inc
mov
stos
inc
shlb
sub
hlt
sub
mov
int
test
add
decl
inc
in
bound
dec
push
rcll
xchg
popa
sub
popf
ljmp
outsb
push
inc
and
ja
xor
inc
cmp
sbb
loope
cld
jmp
or
test
mov
test
sbb
jp
pop
inc
addl
mov
pop
shrl
inc
xchg
pop
iret
dec
je
xor
daa
mov
aaa
lock
out
or
pop
sbb
call
inc
icebp
and
leave
aas
cmp
inc
inc
push
loop
jle
adc
testl
mov
fcmovnu
ss
enter
and
pushf
scas
ret
push
inc
mov
sti
pop
cli
enter
pop
outsl
cmpsl
jg
test
stc
pop
push
repz
push
push
mov
sbb
loop
adc
inc
popa
sbb
lods
pop
das
sub
jg
inc
dec
arpl
rcrb
fcmovnb
pushl
push
lcall
xor
call
sub
or
loope
fwait
jge
cmpsb
outsl
lods
fwait
pop
jle
and
imul
cmp
mov
adc
xchg
test
loop
sbb
sbbb
je
fs
cld
mov
or
push
test
mov
mov
outsl
push
and
in
sub
mov
lods
mov
mov
pop
or
jb
or
fnstsw
push
sub
call
addr16
or
rorl
rcl
mov
inc
push
pop
cmp
push
loopne
pop
dec
gs
jbe
pop
pop
adc
incb
cmp
mov
and
test
mov
mov
jno
sub
adcl
or
xchg
aam
iretw
jle
add
decl
lods
mov
add
test
sbb
push
pop
nop
fisttpl
call
into
fwait
aas
aad
add
dec
mov
mov
out
ffree
jo
sub
outsl
mov
sbb
inc
imul
inc
mov
pop
xchg
stos
test
mov
hlt
push
and
dec
sar
pop
pop
mov
mov
sbb
add
mov
rclb
mov
jns
outsl
lcall
outsb
jae
cmp
sahf
stos
addr16
call
outsl
mov
xchg
dec
pop
cld
xchg
mov
iret
sub
std
cmp
inc
pushf
enter
push
adc
scas
icebp
rcrb
movsb
outsb
add
add
cmpsb
adc
jo
lods
shrb
ret
and
add
jmp
cmp
mov
mov
cmp
test
andb
movsl
push
shrl
pop
push
loop
inc
bound
insb
ds
jecxz
aaa
fisubs
xor
adc
dec
les
andb
mov
lods
imul
orb
mov
aam
clc
or
cmpsl
sub
or
or
nop
and
in
xlat
mov
daa
mov
ds
mov
sbb
xor
and
mov
sub
sbb
mov
hlt
add
loop
fs
jo
cli
incl
insl
sub
arpl
int3
sahf
cmpb
stos
inc
stc
int3
mov
fildll
ret
jle
ret
sbb
loop
fiadds
cmpsl
mov
cmpl
mov
sbbb
sbb
xchg
out
inc
mov
cld
sbb
jmp
call
xor
hlt
popa
mov
mov
push
push
jns
scas
fsubrs
adc
pop
call
insb
je
movsb
or
push
inc
adc
hlt
fcoml
adc
mov
inc
nop
inc
mov
add
outsb
or
dec
sti
push
mov
lock
xor
fisttpll
sahf
xchg
fisttpl
aad
sub
add
gs
sahf
xchg
mov
test
xor
or
push
inc
stc
lods
addb
mov
decl
or
dec
dec
cmc
outsl
fcompl
xor
es
cmc
outsl
hlt
inc
add
sub
and
aam
dec
mov
outsl
jl
sahf
mov
jno
subb
incb
cmpsb
popf
in
mov
repnz
inc
sub
lds
mov
mov
lcall
test
jg
pop
pop
loop
mov
pop
jo
jmp
xchg
push
cmc
das
push
shll
lods
or
mov
decl
jno
mov
popa
pop
mov
test
mov
outsl
ret
ljmp
and
inc
jg
movsb
push
je
jne
mov
pop
cmc
scas
xor
push
inc
test
ljmp
or
xchg
pop
lret
mov
jbe
je
jnp
push
mov
scas
pop
fidivl
jae
mov
pushf
inc
jb
mov
mov
test
mov
inc
push
xor
inc
test
or
pop
inc
mov
scas
or
push
sbb
jmp
lods
pop
sbb
iret
rcr
jp
mov
sub
inc
mov
push
sub
pop
mov
or
outsl
push
in
fwait
or
mov
pop
or
call
mov
insb
subb
movsl
push
addr16
cli
inc
and
pop
or
imul
lea
loopne
int3
lea
mov
fwait
ss
nop
cmp
sub
push
xor
push
in
pop
fistpl
xchg
xor
push
cmc
stos
movsl
mov
mov
adc
cmp
std
push
lock
xchg
ds
lret
insl
push
pusha
mov
ss
cmp
inc
sbb
push
ja
xor
div
mov
sti
testb
jne
cmpsl
filds
sub
sbb
xchg
and
sbbb
jl
inc
dec
in
push
adc
fcomps
popa
das
adc
or
imul
loope
dec
push
push
test
call
adc
clc
cld
xchg
jle
fdivrs
test
xchg
jne
sub
imul
jmp
aam
mov
lret
bound
pop
mov
ficoml
inc
sbb
mov
and
push
insb
inc
and
and
mov
push
in
or
inc
andl
pusha
imul
insl
xor
pop
lods
pop
pop
sbb
or
fcomi
mov
or
adc
enter
insb
inc
scas
xor
and
pop
mov
sarb
push
jnp
bound
lahf
aaa
ljmp
jg
cld
jp
adc
xchg
popf
push
jg
mov
mov
mov
lods
mov
pop
dec
popf
adc
aas
inc
rcr
jae
xchg
add
xchg
in
fistpl
call
sbbl
adc
daa
fcomps
mov
icebp
imul
lock
add
inc
frstor
pop
mov
or
in
fistpll
mov
repz
pop
pop
mov
sbb
mov
jecxz
inc
adc
xor
sbb
xor
call
out
je
sbb
insb
movsb
clc
push
shlb
decb
repz
pop
jo
adc
and
mov
or
dec
mov
or
data16
jb
and
fs
notl
push
dec
jge
xor
bound
in
aad
or
aas
movsb
pop
repz
dec
mov
fsubp
pop
or
mov
cmp
popa
cmpsb
mov
dec
dec
adc
push
sub
outsl
mov
xchg
mov
repz
or
cli
pop
in
cmp
sti
ds
shrb
adc
leave
xchg
sbb
inc
fs
cmp
nop
push
jl
mov
mov
add
mov
js
pop
and
sti
sbb
pushf
adc
ret
mov
mov
dec
test
and
sbb
cmp
lret
push
cs
aaa
loopne
jns
xchg
sub
xor
fcomi
jbe
fbld
insb
lock
int3
cld
adcl
stos
xor
pusha
aas
mov
fisubl
jns
pushf
xor
shl
sbb
pop
pop
inc
sbb
jl
cmc
jg
xchg
std
lods
push
out
ja
pusha
or
or
test
ja
xchg
mov
jns
dec
xor
hlt
lea
add
lahf
sub
hlt
pop
sub
mov
test
stc
pop
push
jl
ss
popf
rorb
mov
fs
pop
ret
xor
dec
sbb
pop
cmpsl
push
lret
cmpsb
xor
or
nop
push
jo
insl
and
stos
mov
cmp
push
mov
cmpsb
push
xlat
xchg
mov
test
dec
lcall
mov
jbe
push
cli
pop
test
cmp
push
sub
cld
pop
jne
or
mov
nop
cmp
outsb
jno
xor
add
aas
adc
pop
xchg
cltd
movzbl
and
ja
mov
xchg
test
imul
movsb
mov
es
bnd
repz
inc
xchg
lock
mov
test
in
sbb
scas
jne
ja
sub
nop
aas
dec
add
mov
inc
xchg
sbb
xor
jae
ja
mov
imul
not
dec
cmp
ret
pop
cwtl
shr
lret
inc
fcmovnb
or
lret
clc
sahf
scas
mov
and
xor
inc
ja
and
gs
mov
pusha
mov
push
push
les
mov
mov
arpl
mov
lock
aad
daa
fimuls
mov
pushf
inc
or
add
xor
push
sub
fildll
imul
fucom
bound
dec
in
mov
and
test
xor
push
aas
mov
hlt
ss
dec
jg
dec
push
scas
or
hlt
or
push
aaa
fwait
push
stos
fiadds
jo
lock
push
mov
mov
or
std
pop
mov
inc
bound
aaa
rcl
cmp
call
xchg
sub
test
mov
push
int
aad
cmp
sbb
mov
inc
outsl
mov
jne
fldt
xor
cld
insl
aas
jbe
add
push
sub
jge
adc
jp
ss
stos
out
movsb
mov
nop
push
pop
or
test
push
fistl
sub
pop
out
cmpsb
enter
popa
shl
insb
pop
stos
push
add
xlat
sub
sub
rolb
into
ljmp
push
outsb
das
insb
jl
or
sbb
iret
adc
jmp
mov
jne
pop
xor
mov
lcall
and
js
sbb
xchg
push
jle
es
outsl
lock
cmpsb
push
and
daa
test
lds
cmpl
rorl
call
pop
jmp
dec
std
or
aas
sub
xor
lcall
pushl
outsb
call
imul
jl
cmpsb
pop
dec
inc
jb
rolb
jmp
jb
inc
and
nop
movsb
lahf
push
inc
xor
xor
jns
dec
lcall
mov
test
sbb
cmp
push
inc
jle
sti
cli
push
sbb
lret
in
arpl
ret
shl
adc
mov
imul
int
mov
aaa
cs
and
dec
jno
mov
mov
fisttps
fmuls
jmp
outsl
lock
mov
push
push
popa
in
cwtl
xchg
add
mov
or
mov
in
pop
loope
mov
je
dec
mov
je
mov
pop
adc
push
pop
outsb
pop
sar
call
cmp
cmp
scas
clc
jb
xchg
inc
sbbb
addb
cmp
jmp
sub
jg
aam
mov
inc
lock
lcall
in
push
mov
shll
pop
pop
jle
les
xor
rcrb
lahf
cmp
ret
mov
hlt
mov
pop
aas
loopne
mov
in
ja
inc
lods
add
sbb
cmp
call
dec
pop
ret
movl
data16
inc
loopne
iret
push
cmpsl
push
addb
mov
movsl
cltd
movsb
jnp
cmp
das
cld
sbb
and
mov
sub
mov
clc
incl
mov
add
and
mull
jecxz
out
add
push
mov
inc
push
inc
lret
mov
pop
xor
jmp
cld
inc
shll
ljmp
decl
cmc
rol
adc
leave
sbb
push
sbb
adc
jg
adc
jo
mov
xchg
xchg
fbld
fsubrl
push
aad
dec
adc
mov
push
sahf
and
push
loopne
stos
mov
iret
lea
call
sub
mov
jl
jbe
mov
xchg
push
outsb
mov
mov
int3
sbb
cmpsl
int
mov
lcall
pop
inc
mov
and
push
lea
xlat
cmc
lcall
rorb
leave
sbb
mov
adc
cmpsl
xor
jp
fistl
xor
cmp
adc
outsl
loop
aaa
cmp
pop
mov
aad
mov
lods
push
sub
sbb
or
inc
add
je
jns
fdivr
sub
jne
sub
into
push
shlb
xchg
stos
imul
jne
pop
cmp
jg
rclb
jns
mov
in
xchg
jp
or
mov
dec
adc
inc
loope
mov
mov
dec
push
jl
xchg
add
in
sub
aad
sti
pusha
mov
stc
rcrl
pop
loopne
xchg
or
sar
add
test
fcmovbe
xor
imull
decl
ret
pusha
mov
stos
xor
push
dec
jl
test
mov
int3
add
pusha
inc
mov
mov
push
xlat
dec
adc
in
in
outsl
test
call
sub
mov
ds
sbb
pop
adcb
and
fs
pop
mov
cmp
pop
adc
mov
popa
add
push
xchg
sbb
clc
push
aam
out
mov
sub
mov
incl
jg
jno
or
mov
push
xor
xchg
loopne
nop
test
adc
movsl
notb
adc
dec
xchg
das
inc
nop
imul
bound
mov
push
mov
insb
ret
jns
jle
mov
in
push
sbb
mov
daa
clc
test
mov
loopne
fistpll
popa
ret
push
adc
rcll
fwait
fwait
adc
fisubl
adc
jbe
jp
inc
rep
mov
imul
aaa
mov
or
scas
jg
jg
fcomip
or
test
jae
adc
test
shufps
pop
mov
cli
xor
jecxz
imul
stos
dec
inc
pop
leave
dec
push
push
in
adc
sub
sbb
fsts
sti
lcall
dec
jg
push
outsl
inc
push
jg
lock
mov
and
sbb
mov
push
sbb
mov
inc
add
shlb
dec
or
and
or
movsl
mov
dec
sub
jb
hlt
adcl
addb
and
aaa
rol
pop
xor
add
cli
arpl
cs
mov
jg
add
cmp
repnz
sbb
shrl
in
jg
js
sbb
test
je
or
clc
sbb
ds
adc
jne
popa
sbb
fistl
pop
xchg
addb
xchg
loopne
inc
mov
push
xchg
mov
pop
andb
ds
movsl
test
aas
xor
notl
xor
lret
imul
mov
in
mov
fcmovne
push
cwtl
test
repz
xorl
mov
adc
repz
adc
jge
pop
push
ds
add
std
pop
ficoms
inc
pusha
adc
lods
shl
sbb
test
push
fidivrl
cmc
cmp
mov
pop
js
mov
adc
sbb
mov
adc
jg
adc
sub
stos
or
mov
dec
inc
xor
jno
inc
insb
lret
mov
adc
and
mov
adc
dec
and
mov
lds
inc
jmp
inc
mov
aaa
jecxz
mov
xchg
fisubrl
bound
jno
pop
jno
mov
pop
xchg
iret
dec
or
mov
xlat
dec
sbb
add
or
cmp
dec
adc
push
lret
setns
cmp
stos
sbb
fwait
jge
pop
aad
cmpb
ret
sti
js
sub
cltd
imul
fidivrs
ljmp
or
push
rcll
xchg
sahf
xlat
xor
add
test
mov
iret
test
and
mov
mov
mulb
jmp
negl
repz
and
xlat
pop
lret
loop
mov
push
sbb
ror
pop
inc
scas
movsb
mov
xchg
push
and
push
fildll
push
xchg
in
jae
andb
lcall
scas
sub
ret
cli
popl
adc
ljmp
stos
sbb
pushf
or
aaa
cltd
mov
sbb
xor
movsl
push
or
outsl
or
sbb
jne
mov
movsl
divb
add
int
sub
rep
leave
mov
dec
inc
in
and
add
orl
mov
loope
inc
imul
mov
cli
adc
sub
xchg
leave
jbe
and
adc
pop
and
scas
pop
fs
mov
mov
scas
iret
rcll
cmp
and
or
push
rclb
popa
add
xor
roll
jmp
lods
or
xor
fisttpl
add
inc
gs
insl
insl
imul
aaa
packssdw
dec
scas
dec
fcmovnbe
sub
add
scas
push
test
aas
jae
lods
mov
mov
sub
jmp
stos
push
cli
push
data16
or
fbstp
sub
mov
dec
xor
push
mov
mov
stc
cli
cmc
stos
hlt
add
lods
push
icebp
jp
fimuls
xchg
or
xchg
shl
pushl
jne
xchg
adc
dec
cmpsl
xor
mov
lea
out
pop
xor
lock
fidivrl
in
dec
add
mov
mov
pop
xor
je
mov
push
scas
push
adc
adc
inc
xchg
dec
rcrl
push
cmpsb
mov
fstpt
in
push
push
mov
repz
jbe
xchg
aaa
push
pop
add
outsl
es
fdivrl
fistl
jo
adc
push
lahf
jecxz
adc
out
nop
sub
cmc
mov
pop
mov
and
inc
cwtl
test
and
cld
sub
shll
xchg
sub
nop
jle
scas
mov
clc
pop
jp
ss
sbb
lahf
cli
push
pop
pop
inc
notl
sar
test
aas
divps
inc
cld
pop
adc
movb
jg
aas
add
movsl
outsl
cmp
or
push
ret
pop
pusha
sahf
xchg
adc
xorb
push
mov
test
sub
repz
test
test
dec
stc
jnp
mov
mov
push
aad
xor
mov
cli
in
in
fstpt
gs
and
mov
or
int3
push
or
dec
lea
jge
and
pop
add
push
aaa
xor
mov
push
mov
subl
sbb
mov
adc
adc
dec
dec
fidivrl
adc
test
pop
jne
jp
push
insb
xchg
sbbl
add
les
mov
fmulp
out
insb
out
sbb
push
cmp
or
dec
mov
mov
jle
push
js
xor
mov
inc
pop
iret
sbb
nop
fs
fstps
pushl
mov
enter
movsb
jle
fdivp
ljmp
call
pop
cmp
into
loopne
lods
outsl
fists
lods
sbb
sahf
popa
call
mov
mov
jae
adc
xchg
cwtl
repnz
pop
pop
xor
lock
or
adc
mov
fwait
loope
pop
pop
add
jle
hlt
mov
cmp
in
lret
clc
out
in
cmp
lods
lea
in
mov
push
sbb
add
sub
mov
nop
xor
test
aas
mov
mov
test
sbbl
lret
cmpsl
ljmp
push
test
push
sub
insb
outsb
jne
fwait
jmp
sbb
fiaddl
or
jne
xchg
sahf
mov
fimull
jo
aam
jb
fs
loope
cmc
dec
stc
push
jb
test
push
in
mov
lcall
fidivrl
xor
add
nop
add
jecxz
push
test
aaa
push
pop
add
faddl
mov
test
dec
test
pop
fucomi
pop
jne
xor
jg
xchg
ret
popa
nop
aaa
bound
dec
jp
push
popl
insl
mov
lahf
adc
and
ja
in
dec
jns
mov
aaa
mov
scas
cld
dec
jecxz
int
cmp
sub
stos
push
outsb
sbb
push
xchg
mov
sub
fistpl
and
xorl
dec
mov
jbe
arpl
pushf
fstpl
xor
outsl
ljmp
popa
cmove
lds
stos
push
jmp
push
mov
push
inc
pop
pop
push
sbb
cld
mov
sub
lods
js
or
xchg
ss
mov
add
fcoms
cli
in
jecxz
idivb
jb
movsl
mov
sbb
add
lret
fsubp
jbe
ljmp
jbe
xchg
mov
pop
xchg
jne
das
cld
insl
leave
add
fsubrs
mov
out
lahf
and
cmp
incl
sbb
ds
int3
inc
popa
lods
inc
in
sbb
mov
and
or
addl
push
jb
lcall
shrl
das
cmp
or
aaa
test
clc
test
es
dec
in
push
or
mov
clc
rorb
icebp
sub
in
lods
pop
or
shll
sub
or
fld
fildll
lock
dec
iret
jb
sub
in
xor
mov
jg
std
pop
push
sti
dec
sub
push
ficomps
or
mov
fadds
xchg
sub
in
cmp
xchg
cltd
mov
pushl
loop
movsb
xor
push
xlat
push
jecxz
xchg
sbb
insl
add
push
push
push
cmp
inc
cmc
test
adc
rorb
push
in
xchg
cwtl
lahf
xchg
xor
jg
mov
insb
push
out
dec
stos
pop
sub
out
or
out
mov
outsl
sub
inc
mov
lcall
aaa
sbb
les
mov
repz
mov
ret
add
mov
ret
cmp
pop
fldl
ror
int
or
mov
jp
ret
roll
push
inc
imulb
out
dec
pop
cmc
jg
lock
cmp
popf
out
aas
jne
jnp
xlat
and
add
loop
repz
test
cmp
mov
in
xor
pop
imul
mov
fistpl
mov
repz
call
inc
sub
ljmp
mov
sub
shrb
outsl
sbb
sbb
outsb
repz
aam
outsl
sbb
mov
dec
pop
loop
xor
mov
inc
sub
add
mov
jg
std
dec
pop
jecxz
inc
inc
or
daa
cs
pop
mov
dec
pop
add
push
icebp
mov
sub
call
mov
jge
jmp
xor
div
cmp
jnp
mov
insb
scas
pop
lret
ljmp
aam
sbb
jecxz
das
mov
dec
add
repnz
dec
sbb
add
or
stc
pop
sub
cltd
xor
or
mov
mov
push
push
xchg
data16
and
xchg
and
adc
pop
cmpsb
pop
incb
jecxz
test
cltd
movsl
rcrl
mov
dec
mov
clc
or
mov
aas
pop
int
ljmp
outsb
rorl
sbb
jp
mov
lock
das
mov
mov
or
mov
shlb
leave
mov
ret
lea
movsb
push
es
cmp
push
mov
sub
jl
mov
add
ja
jg
pop
adc
push
mov
sbb
lcall
shlb
pop
sub
add
pop
mov
imul
jbe
push
push
in
mov
add
dec
mov
fldenv
inc
cmp
jbe
push
ds
or
xor
mov
cmp
jge
sar
call
idivb
dec
test
aam
inc
shrb
adc
inc
inc
cmc
ret
push
and
push
fisttpll
jg
inc
or
int3
scas
sub
sbb
or
inc
adc
movsb
cmp
fnstsw
push
inc
jo
or
adc
outsb
and
lcall
jmp
ljmp
xchg
jo
sub
shll
mov
mov
mov
mov
push
add
adc
mov
mov
dec
or
push
adc
in
pop
sti
ret
sbb
jno
push
arpl
in
adc
push
fdivrl
add
std
and
cmp
and
ror
int
lret
test
add
outsl
mov
pop
mulb
bound
bound
push
ljmp
roll
and
jno
xchg
lret
outsl
mov
add
cmc
cltd
aad
and
inc
lret
cmpsb
jne
push
incl
in
push
cmp
dec
les
mov
ljmp
sub
lcall
cltd
in
insl
mov
stos
outsl
jo
jne
imull
fists
test
pop
shlb
lret
pop
mov
mov
xchg
push
sub
pop
sub
adc
jbe
pusha
call
orl
bound
das
adc
out
mov
dec
pop
js
das
and
add
jp
pop
inc
aam
int3
dec
mov
leave
pop
movl
ret
or
push
in
stc
cli
pop
sbb
xor
flds
mov
xchg
pop
inc
cmpsb
lea
dec
mov
dec
mov
xor
inc
add
pop
cmpb
outsb
hlt
add
pop
lock
pushf
aad
lock
mov
fadd
jno
or
sbb
sbb
test
mov
test
and
sbbl
sahf
and
cli
lcall
stc
jb
inc
adc
dec
jb
scas
sahf
lret
sbb
add
rcl
push
stos
sub
mov
incl
dec
adc
jmp
lret
js
inc
xchg
cmc
test
lock
in
and
push
inc
xlat
call
mov
aas
pop
lods
inc
mov
dec
icebp
cmpsb
inc
outsb
mov
jg
xor
xchg
push
cmp
clc
add
xor
mov
inc
sub
mov
rol
push
rcrl
or
mov
nop
faddl
lods
subb
insb
test
mov
popa
ljmp
xchg
shll
sbb
inc
popl
in
aaa
sub
jecxz
ljmp
icebp
dec
xor
pop
mov
xor
rcrb
or
xor
aam
incl
mov
filds
dec
std
dec
mov
sbb
mov
jl
add
ror
push
loope
or
mov
out
leave
lret
pop
dec
add
jecxz
jae
and
lcall
outsl
xchg
cmpl
mov
adc
pop
inc
pop
lea
in
xchg
ret
mov
jb
outsb
mov
xor
or
push
test
stos
nop
dec
push
rcl
jb
lcall
iret
in
mov
adc
pop
outsb
inc
jge
cmp
mov
je
mov
add
shr
push
andb
mov
popf
or
sbbb
adc
cmp
cmpb
adc
popf
jecxz
adc
add
fwait
jno
inc
cli
fcmovnb
pushf
fldenv
sub
xor
mov
stos
xchg
add
jg
xchg
sbb
xchg
inc
xlat
push
lods
fistpl
mov
cmp
add
push
jge
cmp
cltd
gs
imul
dec
loope
adc
jp
cmc
or
mov
jp
push
lea
je
dec
ret
sub
adc
jne
pop
les
js
add
xchg
jns
fcoms
xchg
and
rclb
jne
movsb
dec
inc
fs
mov
stos
jp
jo
mov
push
jae
lods
add
sub
pop
mov
shrl
push
cld
insl
dec
pushf
mov
mov
test
xchg
mov
xchg
xchg
mov
lret
cld
repz
ja
stos
push
jecxz
out
test
test
pop
imul
ds
push
shll
push
movsb
pop
inc
cmp
lods
decl
pop
add
test
lds
add
mov
insl
aas
insb
sbb
clc
inc
movsl
into
lcall
and
lahf
xor
or
dec
in
xor
pop
test
xchg
test
pop
adc
daa
shlb
cs
cli
idivb
int3
punpckldq
sbb
inc
call
fcoms
nopl
inc
jns
inc
leave
or
push
mov
lcall
jle
inc
pop
cmp
inc
jae
rolb
mov
jne
in
adc
divb
mov
mov
adc
pop
pop
gs
xchg
or
test
rolb
leave
inc
mov
scas
xchg
jno
push
call
adc
push
fidivs
mov
push
lds
dec
ljmp
shll
repnz
les
aas
repz
jg
add
push
sbb
leave
shrb
or
stos
push
cltd
push
dec
add
int3
insb
push
jb
xchg
arpl
sub
daa
cmp
idivl
pop
fwait
cmpsb
dec
add
pop
enter
orl
subl
popl
mov
cmp
repnz
pop
jle
arpl
test
fsubs
sub
jnp
dec
jg
dec
sub
enter
imul
or
mov
xchg
shrl
fistpl
jb
enter
sqrtps
das
cmp
bound
mov
aaa
or
mov
adc
std
pushf
pop
fsts
or
pop
mov
dec
mov
jo
movsb
jg
into
ljmp
lods
dec
mov
push
pop
mov
jl
mov
mov
stos
xor
xlat
push
inc
mov
pop
inc
mov
int
out
insb
out
outsl
push
fst
in
xchg
mov
rcrl
loopne
enter
out
pop
scas
inc
xor
fsub
loop
les
cmp
decb
pop
mov
pop
ficomps
cltd
push
jo
xor
adc
cld
sbb
mov
push
push
xchg
je
fisttpl
lods
scas
loopne
xchg
in
fcomip
lea
subb
inc
inc
scas
jae
test
add
test
ficomps
and
dec
icebp
and
sarl
cmpsb
cli
scas
cltd
and
ret
dec
push
xor
mov
adc
jno
das
test
jg
mov
jne
cmp
pushl
sbb
jae
into
nop
or
jge
mov
xchg
aad
inc
push
loope
xchg
aaa
rcr
mov
orb
pop
add
add
test
pop
cmpsb
mov
inc
in
push
pop
add
bound
mov
call
imul
pop
push
mov
testb
pop
pop
adc
sbb
pop
icebp
cli
dec
adc
jno
sarl
and
dec
adc
ss
add
inc
xchg
or
sbbb
lmsw
daa
test
loope
scas
movsb
pop
pop
outsb
mov
shlb
sbbl
inc
inc
xchg
fisubrl
psubb
sub
sbb
cwtl
iret
in
nop
stos
neg
clc
test
rclb
subl
push
loope
test
cmp
mov
jae
mov
add
stos
aad
xor
and
imul
js
inc
lea
subl
jnp
repz
movsl
xchg
pop
push
lock
mov
in
loopne
iret
mov
jnp
lret
lods
and
lock
out
lods
adc
or
adc
mov
je
gs
test
cltd
adc
aas
cmp
sbb
jbe
or
jbe
jbe
nop
xor
fisubrs
leave
js
mov
inc
mov
cmp
je
lock
inc
adc
mov
inc
inc
sub
lods
js
inc
rcrb
or
out
insl
and
subl
mov
add
fisubrl
inc
fwait
clc
adc
mov
mov
or
aaa
mov
and
jno
shlb
les
or
jo
inc
rcrl
sub
mov
pmuludq
les
cmpsb
lret
idiv
mov
push
mov
shll
mov
mov
jecxz
sbb
stos
mov
and
cld
icebp
lock
in
xchg
psraw
test
add
ret
xor
imul
xchg
adc
pop
lret
pop
test
out
add
sbb
inc
test
loopne
outsl
rcr
xchg
cmpsl
push
aas
rclb
and
inc
in
mov
or
add
inc
inc
and
ljmp
mov
sbb
add
imul
outsl
jg
cli
inc
lds
or
mov
and
sub
std
outsl
aam
and
adc
add
movsb
dec
xchg
xor
fildl
and
imul
sysexit
xchg
xchg
pushf
add
sbb
sbb
cli
pushl
cltd
ret
fadd
adc
lret
in
adc
xchg
pop
test
mov
and
shrl
push
push
mov
add
push
and
lds
inc
adc
in
cmc
mov
xor
inc
inc
shr
adc
push
xor
sbb
mov
xor
jo
fists
push
in
dec
fsubs
stc
fs
mov
push
out
stos
ficompl
inc
loop
sti
cs
sahf
into
pushf
mov
push
or
jle
js
and
add
in
pushf
incl
call
push
add
fwait
dec
pop
lea
loope
push
mov
xchg
adc
mov
mov
dec
repz
sub
cmp
loopne
mov
rcll
add
push
sbb
stos
cmp
adc
test
mov
mov
insl
push
das
aas
mov
add
jg
stos
loop
cs
inc
dec
mov
add
add
pop
lret
xchg
ja
sbb
inc
adc
test
push
loop
and
adc
xor
scas
cli
fiadds
scas
inc
pop
cmp
and
jo,pn
jl
adc
mov
mov
jae
mov
les
lods
fsubs
jp
lds
aaa
pop
ret
out
je
loop
push
orl
add
push
dec
jae
and
or
rorl
xchg
adc
cmp
rcl
and
orb
decl
pop
adc
xchg
and
push
in
mov
or
add
or
insl
jmp
rclb
cmp
sbb
mov
sbb
push
fisttpl
add
shlb
leave
pop
notl
and
jge
ljmp
imul
adc
push
push
push
and
xchg
outsb
add
imull
ror
ljmp
or
cwtl
inc
xchg
pop
pushf
jmp
sarb
shl
subl
add
adc
push
mov
xor
icebp
push
in
mov
ja
les
fimull
inc
inc
push
jmp
ret
out
aam
pop
inc
pushf
mov
mov
shlb
jg
lods
adc
xor
loop
adc
cmp
scas
or
mov
mov
sub
pop
and
xorl
jno
subb
jmp
mov
mov
push
aas
push
mov
cmpsl
mov
outsl
and
xchg
xchg
loop
and
mov
hlt
addr16
and
jecxz
mov
and
fdivrs
mov
ret
mov
jp
mov
inc
out
loop
and
adc
push
and
mov
loop
dec
mov
pop
or
add
rcrb
push
mov
daa
mov
call
outsl
dec
loope
insb
pop
cmp
pop
push
scas
jl,pn
sub
mov
mov
xchg
mov
and
push
mov
ljmp
mov
je
jo
jmp
decb
lret
push
jle
loope
icebp
jbe
push
xchg
mov
fildl
sbb
pop
mov
nop
inc
xchg
ret
js
sbb
xchg
pusha
xlat
and
ret
gs
das
xchg
pusha
cmp
and
xchg
je
imul
and
jmp
mov
dec
sarl
and
ja
loopne
in
sahf
ret
xchg
or
out
movsb
pushl
jo
xchg
dec
sbb
orb
push
sbb
dec
sbb
fs
arpl
jl
or
loopne
ja
pop
push
pushl
add
ret
xchg
mov
or
movsl
push
pushl
ljmp
lods
cwtl
jmp
pushf
xlat
mov
xchg
pop
sti
or
imul
into
mov
or
lock
stos
add
dec
xchg
mov
inc
or
push
and
jns
or
or
sbb
add
xor
push
mov
lea
push
imul
adc
jecxz
jo
and
and
mov
push
mov
push
lock
adc
cld
dec
js
inc
cmc
and
add
mov
fcoms
jle
enter
sbb
loope
cmc
mov
inc
fwait
nop
popa
and
sub
and
and
inc
push
daa
inc
pop
pop
pop
pop
push
es
dec
out
jbe
es
loopne
jo
ljmp
jge
decl
sahf
xor
adc
mov
loopne
orb
jg
cmp
shlb
mov
sub
outsl
adc
inc
inc
xchg
arpl
dec
dec
out
sbb
ret
dec
outsl
cmc
pop
dec
out
test
sbb
jno
insl
inc
ljmp
in
movsb
lret
xchg
mov
adc
insb
std
aam
inc
jns
movsb
ja
pushl
adc
xor
mov
fildll
add
and
adc
ret
imul
mov
jno
repz
stos
xchg
and
jne
outsl
dec
das
cld
add
add
push
inc
sub
sub
mov
xchg
jae
fildl
sbb
lahf
mov
xor
rcr
test
movsl
pushl
and
jge
and
mov
or
jne
test
push
or
xchg
fidivl
lea
repnz
xchg
jge
push
fnstsw
outsb
or
dec
sub
and
add
fildll
push
imul
ret
insl
or
mov
jg
stos
movb
pop
cwtl
imul
ret
ret
pusha
sysenter
nop
jmp
shlb
popf
adc
loope
mov
mov
xlat
jns
mov
push
clc
inc
xchg
test
into
movsl
insb
into
jne
gs
mov
in
in
mov
xchg
pop
icebp
js
in
mov
fs
adcb
bound
test
inc
cs
lret
dec
pop
test
sahf
jp
sbb
outsl
adc
add
rclb
push
dec
push
es
adc
add
popa
add
stos
push
aam
into
xchg
jo
xorb
test
lods
pop
or
xchg
jno
sbb
cmc
das
jl
jbe
lock
das
pop
pop
fs
mov
adc
pop
lret
daa
xor
jno
lret
dec
push
arpl
lret
addps
aaa
mov
filds
mov
shl
xchg
je
mov
inc
pop
or
bnd
test
lcall
dec
cmp
fcmovb
or
pop
js
or
hlt
call
inc
in
ss
mov
ja
mov
roll
mov
lds
xchg
add
sbb
add
in
pop
loope
sub
mov
lcall
inc
cld
pop
sub
mov
js
sub
sti
test
jbe
jmp
jle
cs
pop
push
scas
cwtl
ss
mov
icebp
pop
sub
repz
cld
es
data16
jmp
in
ret
shll
insl
int
ds
mov
add
pop
inc
push
cmp
mov
push
loope
filds
and
cmpsb
test
loope
jg
pop
adc
into
icebp
mov
lods
or
fistl
dec
mov
jmp
cmp
pop
adc
scas
insl
and
pop
sub
cli
aaa
cld
push
push
cli
test
mov
repz
mov
jne
loope
push
lret
mov
shrd
cmpsl
pop
mov
add
jo
push
fs
mov
rcrb
pop
cmpsb
mov
pop
adc
mov
inc
jnp
mov
sbbl
rorl
ljmp
clc
cwtl
fsubl
xor
aas
and
aaa
clc
sbb
jnp
ret
push
pop
pop
insb
or
daa
push
jecxz
jmp
fyl2xp1
mov
jecxz
stos
pop
pop
adc
idiv
lcall
xor
push
push
fisttpll
mov
pop
mov
sub
adc
pop
jmp
sarl
xchg
lcall
cmp
jno
mov
adc
mov
ret
leave
jl
fwait
add
jecxz
out
sbb
or
cltd
sbb
mov
ret
cmc
movsl
mov
mov
stc
bswap
lods
push
add
notb
and
bound
jo
sbb
inc
jae
incl
insl
mov
sbb
mov
jp
icebp
outsl
jne
filds
loopne
or
jb
adc
lret
or
rcll
inc
mov
in
test
idivb
xchg
mov
je
dec
addr16
outsl
adc
inc
outsl
pop
call
mov
push
popa
mov
lahf
inc
fucomi
mov
sbb
jne
cmp
mov
xor
cmp
mov
cmp
pop
mov
lcall
lret
imul
jmp
test
in
sbb
inc
adc
push
add
inc
pop
lds
push
sub
push
adc
inc
fildl
mov
stc
icebp
imulb
inc
cld
add
dec
inc
dec
and
fistl
pop
sub
lcall
ret
jl
mov
in
and
mov
mov
sub
cmp
outsl
aaa
pop
sub
adc
add
test
sub
sbb
bound
shlb
repnz
bound
dec
push
icebp
test
inc
test
sub
popa
or
xchg
jno
mov
out
or
daa
lods
jb
aas
jnp
int3
ds
lods
push
test
adcb
lahf
pand
sub
and
ret
or
fistpll
mov
pop
push
mov
jmp
ret
outsl
add
push
mov
outsb
jns
xor
pushw
sub
data16
insb
jns
mov
push
push
in
xchg
aaa
xor
push
popf
fs
push
push
dec
push
inc
pop
hlt
outsl
pop
clc
dec
popa
dec
jno
adc
jge
insb
xor
cs
pop
call
xor
xor
xor
pop
dec
inc
pushl
mov
push
inc
push
inc
dec
inc
push
rolb
cld
aas
mov
sbb
jbe
or
mov
scas
outsb
adc
jle
daa
insb
mov
aaa
test
insl
xor
mov
out
fstpl
sub
mov
in
inc
push
mov
pop
push
call
mov
jg
mov
sub
xchg
ljmp
add
sbb
and
push
pushl
cmp
dec
add
cmp
push
sbb
pop
sbb
jg
mov
popf
jmp
pop
ja
pusha
insb
leave
ja
lcall
lcall
data16
loope
jecxz
ljmp
test
adc
lret
call
ljmp
sub
xlat
loop
inc
fsubr
cli
pop
push
pop
cmpsl
hlt
int
bound
lcall
lock
sub
ret
mov
cli
or
xchg
in
lods
mov
rolb
int
adc
mov
ljmp
sub
jno
fsubl
add
cmp
scas
sti
dec
and
in
imul
xor
cmp
fnstsw
jne
xlat
mov
sub
iret
cmp
stc
inc
sub
faddp
mov
fnclex
sub
xor
aad
fists
jae
clc
mov
int
outsb
add
sar
gs
insl
int
push
imul
shlb
push
mov
fs
xlat
out
sbbb
out
icebp
inc
xchg
xor
incl
call
test
call
xchg
mov
jmp
jmp
out
xchg
int
pop
inc
loopne
cmpsl
lahf
mov
push
icebp
push
jmp
dec
xor
pop
or
push
inc
scas
test
mov
sahf
and
xor
lahf
xchg
test
out
iret
subl
push
ljmp
jnp
jge
out
pop
jl
xor
jp
iret
xchg
loope
pop
jnp
psrlw
incl
jae
jge
adc
xchg
sbb
addr16
je
ljmp
lret
decl
sti
fs
and
jmp
jns
pop
mov
mov
xor
scas
hlt
cld
movsb
lock
hlt
dec
xchg
xor
cmp
lret
pop
das
mov
ret
movsl
cmp
paddb
or
movsb
ret
das
lock
bswap
sbb
xchg
mov
adc
loope
inc
adc
pop
fs
jmp
xor
push
jns
ret
test
fcmovnbe
insl
xor
cwtl
repnz
mov
hlt
call
sbb
adc
ret
and
pop
stc
lods
ss
jg
and
decb
fcmovnb
out
mov
fstps
movsl
mov
rorb
clc
call
xchg
test
xchg
lods
and
mov
jmp
xchg
or
fmulp
lds
pushf
cmp
decl
outsl
fstpl
jno
and
or
push
jge
jo
fiaddl
pop
jecxz
inc
add
mov
in
push
sub
repz
mov
cwtl
jne
je
and
and
arpl
lret
pop
pop
ljmp
cmp
or
mov
sahf
mov
inc
lods
cmpl
into
pop
xor
jge
mov
dec
fld
mov
stos
lcall
rorb
in
ja
sahf
xchg
ret
test
es
pop
incl
or
ror
daa
dec
dec
push
inc
sub
outsb
xor
cmpsl
mov
lcall
repz
xchg
push
mov
jns
stos
mov
sbb
jns
fwait
mov
sbb
xchg
push
mov
push
stos
sbb
cmp
adc
pusha
and
hlt
ljmp
pop
in
jns
xchg
stos
insb
adc
cld
sub
insb
clc
pushf
lret
mov
push
mov
pop
push
push
mov
xchg
mov
mov
mov
in
push
mov
in
int3
inc
movq
lcall
std
push
and
lret
dec
out
or
push
cmp
cltd
cmp
pusha
and
inc
or
pop
xor
gs
sub
mov
in
fnstcw
int
inc
cmc
ret
mov
je
pop
and
push
call
outsb
sarb
xorl
test
pop
insl
push
flds
dec
lcall
cli
hlt
popa
jo
jae
pop
sbb
dec
and
cmp
outsl
add
lea
aaa
cmp
int
jle
incl
int
pop
mov
les
cmpsb
push
lds
jb
and
das
icebp
pop
xchg
sbb
push
push
iret
push
lahf
jmp
loope
and
repnz
call
sbb
jmp
jmp
jbe
hlt
mov
sbbl
outsb
xchg
clc
int
pop
gs
pop
movsb
push
ret
mov
pushl
cld
in
xor
pop
xor
or
and
cmp
mov
and
fs
lods
xchg
jae
cvttps2pi
and
pushl
pop
push
push
imul
addr16
popf
pop
loop
dec
ret
jns
popf
inc
int3
cmpsl
movsb
cmpsb
mov
sub
or
jmp
xchg
insb
outsl
pop
sub
cmc
rcl
mov
pop
xor
mov
call
mov
jmp
mov
popa
fs
and
into
incl
dec
sub
data16
inc
test
or
pop
jnp
push
cmp
inc
sbb
lret
or
rcll
mov
jecxz
ret
mov
ret
into
cltd
fdivs
call
inc
xchg
loop
mov
sar
outsl
out
cmp
pop
addl
dec
insl
sub
or
jg
xchg
into
nop
jo
dec
cwtd
pop
inc
movlps
add
test
sahf
mov
mov
pusha
add
sbb
pop
call
decb
cld
inc
jmp
mov
inc
nop
cmpsl
jg
cwtl
mov
rol
clc
nop
inc
mov
loop
mov
pop
cmp
imul
mov
ljmp
adc
adc
sar
push
in
jmp
inc
nop
xor
xor
jecxz
int3
enter
mov
dec
xchg
loope
mov
pop
push
fstpl
test
sub
xchg
xchg
sbb
mov
push
imul
call
sub
inc
adc
lods
fidivrl
and
sbb
call
mov
or
sti
add
jg
mov
cltd
push
push
dec
out
pushl
mov
push
negl
fbld
bound
adc
mov
je
push
pop
loop
ror
jl
xchg
lea
jb
jle
dec
xchg
dec
xchg
test
or
xor
es
cli
cmp
and
aad
cmpsb
sub
mov
cli
fnstsw
inc
bound
xor
pop
and
test
push
popl
std
jmp
dec
mov
push
pop
push
rol
fwait
sbb
add
scas
mov
or
cld
repnz
call
push
sub
rorl
test
mov
add
rcrb
lcall
xchg
fistl
xlat
test
xchg
mov
jmp
xchg
cmp
shll
and
cs
icebp
jg
lds
push
pop
ret
adc
lahf
roll
rcrb
repnz
jnp
add
sbb
shll
ficoml
mov
and
jp
jge
push
lcall
ss
in
cs
cwtl
jno
mov
andb
push
in
sub
shl
sbb
sub
aad
dec
inc
sub
cld
fsubp
in
sti
or
and
movsb
jno
arpl
or
lcall
fildl
cmp
or
cmp
ljmp
int
cmp
out
jge
push
pusha
dec
fsubl
inc
inc
out
movsb
mov
outsb
incl
jns
les
decl
jbe
pop
pop
add
xchg
ja
es
xor
cmp
fwait
xor
xchg
inc
cmp
inc
repz
and
test
xchg
lahf
mov
out
shlb
lret
adc
popf
sub
jbe
adcb
sbb
jle
sub
push
jmp
fildll
bound
and
push
push
push
stc
pop
repz
push
cmp
pop
movsl
pop
pop
int3
rol
outsb
das
jge
push
mov
pop
or
cmp
decl
aaa
popf
lret
mov
cmp
rol
insb
les
sbb
lret
aaa
sub
das
mov
fcomp
fadds
push
xchg
loope
decl
sbb
in
sub
das
mov
sub
loope
out
out
push
loope
lret
dec
sti
fisubrs
lcall
jbe
cmp
pop
movsb
repnz
and
enter
adc
or
mov
stos
cmp
and
popa
sahf
scas
mov
stos
lcall
aam
ljmp
mov
inc
gs
call
scas
fs
scas
lods
pop
lods
clc
inc
bound
je
shll
dec
into
jnp
addb
push
out
mov
lea
and
push
int3
rep
jle
dec
add
jecxz
jo
inc
push
pop
sarb
hlt
mov
ficoml
es
pushl
scas
cmc
mov
insl
lock
push
mov
enter
xchg
pop
cld
popf
movsb
out
dec
lret
in
push
mov
sar
mov
sub
inc
xchg
into
in
lds
out
sub
int
fwait
leave
xor
push
in
sar
mov
insl
and
mov
and
mov
nop
pop
jb
out
subl
or
jo
mov
lods
scas
lret
shrl
lret
std
or
in
dec
scas
cli
inc
pop
xlat
pop
inc
scas
jbe
jl
lods
adc
pop
push
das
test
push
nop
cmc
test
repnz
sahf
cwtl
cwtl
arpl
jg
call
les
and
ror
mov
jnp
pop
push
loope
and
pop
test
dec
adc
push
dec
push
in
icebp
aam
pusha
mov
call
jo
sbb
scas
repnz
test
loope
add
cmp
jnp
sub
cmp
icebp
call
mov
pop
cmp
cmc
inc
ret
or
inc
lcall
or
loop
mov
inc
inc
xorl
add
push
xor
test
push
jecxz
incb
pop
mov
out
fucom
pushl
and
gs
loope
cmp
dec
ljmp
call
mov
fisubrs
sbb
clc
and
je
ret
xor
inc
scas
jl
or
jno
dec
and
incl
xchg
in
cmp
cmp
add
ds
into
sbb
aaa
into
inc
or
idivb
frstor
enter
jl
sahf
insb
jae
dec
sti
pusha
xor
call
add
out
jbe
jbe
inc
sbb
inc
jmp
inc
pop
push
inc
push
add
jb
jb
outsb
call
je
jb
dec
push
je
inc
push
dec
pop
push
xor
push
push
neg
movsl
imul
imul
addr16
or
insl
push
adc
add
jl
adc
add
sbb
ss
je
jne
jb
pop
sti
imulb
push
push
adc
popa
insb
gs
outsb
outsw
push
sbb
push
gs
jb
outsl
add
pushl
dec
imul
xor
outsb
outsl
ja
inc
fildll
imul
ss
outsl
insl
jo
inc
imul
imul
je
inc
jns
push
push
imul
subb
adc
mov
push
adc
jae
outsb
inc
js
mov
jle
gs
mov
xchg
mov
ja
sbbl
pop
scas
jae
daa
int3
std
jnp
pop
xor
fs
inc
int
in
add
jl
aas
dec
insl
popa
gs
je
ljmp
adc
insl
pop
add
mov
sub
popa
jae
gs
pop
push
sbb
imul
gs
jbe
jbe
mov
pop
pop
and
xchg
push
jns
fcomps
xchg
push
add
push
outsb
jae
mov
jbe
push
inc
dec
sbb
mov
out
and
lahf
inc
push
je
insl
dec
outsb
dec
inc
icebp
lock
clc
pop
sbb
push
push
lods
add
adc
pop
dec
outsl
mov
fsubr
xlat
fcoml
sbb
ret
xor
mov
dec
sub
pusha
xor
sbb
dec
icebp
inc
dec
mov
outsl
mov
push
gs
inc
insb
popa
adc
cmpb
inc
dec
imul
jo
xor
and
push
insb
push
fcoml
gs
pop
or
xlat
and
push
dec
pop
push
gs
mov
addr16
push
icebp
sbb
or
push
outsl
outsl
fsubrs
aas
shll
mov
jne
jo
shlb
push
lock
js
inc
inc
test
and
jb
push
mov
sbb
jo
push
popa
imul
lods
sub
outsb
mov
out
dec
cmp
ret
imul
fldt
sbb
lahf
outsb
jne
mov
mov
mov
pop
je
popf
jb
mov
lds
sbb
jo
or
out
pop
xor
in
ficoms
addr16
jne
popa
inc
insb
or
pusha
xchg
mov
jnp
dec
jae
je
push
xor
push
xchg
fimull
sbb
xor
xor
jb
ret
push
jae
das
push
outsb
pop
arpl
je
push
das
test
popa
jo
jae,pn
jo
pop
fcomps
les
jnp
out
mov
mov
mov
fnstenv
and
pop
loope
cmpsb
popf
insb
or
in
outsb
popa
int
mov
bound
push
popa
shlb
mov
gs
mov
pop
imul
jno
ret
jmp
and
dec
add
jnp
push
sbb
push
push
les
xor
ficoml
xor
push
adc
jle
xor
xchg
pop
mov
imul
and
push
ret
dec
dec
popa
adc
jne
iret
sti
fisttps
adc
push
pop
aaa
mov
das
cmp
pushf
and
dec
xchg
inc
sahf
cmovne
dec
repz
test
sti
into
mov
dec
push
xchg
dec
les
rol
push
cmp
pusha
mov
into
mov
push
call
insb
cmp
cltd
pop
or
mov
and
cwtl
inc
jne
cmp
add
push
js
dec
mov
inc
insb
addr16
inc
inc
mov
je
imul
outsb
mov
xchg
ds
inc
nop
popa
jl
shr
xchg
shll
aam
inc
or
inc
aam
jo
js
addl
aam
xchg
int
sarl
insb
popa
jg
addl
out
cmp
jp
mov
jnp
adc
add
push
jne
pop
add
sub
push
inc
orb
adc
xchg
or
ficomps
imul
sidtl
add
adc
int
adc
jo
inc
or
cmp
add
sbb
xchg
insb
pusha
addr16
pop
push
add
and
jns
je,pn
scas
add
dec
jmp
and
sbb
sub
pop
mov
inc
add
es
add
add
jle
cmp
jae
arpl
pop
inc
add
sbb
add
add
add
add
inc
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
jmp
xlat
mov
jns
adc
mov
mov
int
xchg
adc
xchg
inc
out
push
popa
out
jle
ret
pop
loop
out
pop
cmc
and
lods
cld
mov
lds
xchg
mov
pop
outsl
xchg
pop
into
int3
addl
and
pop
mov
fstl
pop
xchg
mov
fldenv
inc
test
cmc
cmc
push
mov
fsubrs
lret
sub
outsl
push
ljmp
xor
jno
pop
call
sbb
ret
cld
mov
adc
call
ja
das
mov
rcll
or
aad
sar
adcl
mov
das
xchg
push
idivb
sub
cli
lods
pop
xchg
loop
mov
fisttpll
and
lret
pop
and
xchg
xchg
add
and
lock
push
lret
cmpb
dec
cwtl
lret
pushf
enter
ret
mov
push
std
cwtl
mov
out
pop
imul
pop
inc
sub
lods
aam
add
cld
test
das
pop
dec
faddl
pop
mov
fmuls
push
bound
sub
sbb
outsl
bound
sbbl
lea
jp
mov
aaa
cld
pop
cmp
mov
cwtl
mov
mov
shrb
cmp
pop
mov
add
xor
or
stc
gs
pop
sub
adc
jbe
inc
mov
pop
xchg
repz
nop
scas
mov
fsubs
mov
int
int
pop
imul
mov
inc
mov
stos
sub
nop
push
stos
inc
jg
mov
jl
xchg
cmp
adc
lock
mov
test
push
ja
mov
ja
fucomp
or
pop
dec
push
sbb
xor
gs
movl
pop
.byte
pop
push
add
add
add
add
sub
add
enter
adc
add
or
add
add
add
add
add
push
add
addb
add
js
add
mov
add
add
add
add
add
dec
addl
add
add
sbb
add
xchg
push
add
add
add
add
mov
push
add
add
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
addb
add
sbb
add
add
add
mov
sbb
add
dec
push
add
sub
add
xor
add
pusha
add
add
add
mov
add
out
incb
push
add
scas
mov
add
scas
mov
add
mov
mov
fucomp
incl
fistpll
add
out
testb
pushl
add
popf
mov
pop
test
js
es
cmp
xchg
mov
lods
jl
mov
jno
aam
or
pop
jae
or
iret
jge
ret
fcmovne
in
sub
aas
into
xor
add
inc
into
sub
shlb
cmp
in
sahf
fsubrs
xchg
ret
xchg
push
call
cmp
fmuls
loope
push
push
in
or
fmul
int
xchg
bound
stos
out
inc
jo
shrb
sub
inc
cltd
lea
or
mov
pop
fadd
jle
cmp
int3
stos
or
ss
rolb
xor
sbb
add
shrl
sbbl
rcll
ror
imul
out
in
mov
inc
mov
mov
divb
xchg
iret
fwait
mov
pop
insl
sbb
sbb
lods
lret
jne
incl
mov
insb
inc
mulb
ja
sub
in
mov
xchg
fsts
adc
jg
push
ret
push
xchg
xor
xchg
lods
jnp
pop
shlb
pop
mov
sbb
jb
mov
std
sbb
push
scas
dec
xlat
cmpsl
loop
inc
daa
mov
fadds
jb
sub
mov
jle
push
xor
ret
jg
imul
and
lret
in
int3
outsl
jno
and
test
movsb
push
dec
js
bound
mov
aas
mov
cli
hlt
outsb
pop
ds
loopne
arpl
shl
jge
or
fmull
fcomps
js
push
adcl
add
mov
dec
pop
add
sub
push
fisubs
xor
js
push
mov
xchg
jbe
jbe
jo
and
xor
or
and
lock
xor
insl
dec
and
sub
xchg
mov
movsl
lcall
and
and
lret
test
stc
adc
fdivrs
cmpsb
nop
adc
int
mov
mov
add
lahf
addl
mov
add
mov
jmp
jl
mov
les
or
inc
xor
ss
dec
jle
adc
fs
fdivrs
shr
mov
repz
sub
sbb
out
repz
ljmp
scas
bnd
and
das
cld
mov
sbb
mov
xchg
sbb
add
xchg
movsb
popf
mov
rcl
pop
or
mov
imul
or
test
jne
in
repnz
mov
xor
test
cli
push
cwtl
xor
and
lea
mov
mov
mov
and
and
xchg
cmp
popl
popf
cs
sarl
lds
mov
lock
ss
push
out
sbb
xchg
jae
cli
test
mov
add
xchg
push
mov
repnz
lock
mov
insl
lret
outsl
pushf
les
sti
ror
in
jne
push
fmuls
mov
sbb
and
cmp
pop
sti
mov
sti
xor
dec
xor
les
mov
bound
scas
ds
pop
out
test
inc
inc
mov
test
and
push
jp
pop
lds
push
mov
add
inc
cmp
push
ljmp
mov
loopne
push
incl
push
nop
and
pop
and
ljmp
shl
add
scas
out
add
mov
call
jbe
in
jl
adc
pop
dec
xor
imul
inc
orl
mov
push
mov
push
xchg
lods
sub
das
cmc
mov
lock
cs
mov
xor
in
incl
cli
les
insb
in
clc
push
lcall
jae
jnp
push
mov
xor
and
in
shrl
push
sti
jnp
mov
loope
mov
movsl
mov
mov
mov
mov
or
push
call
push
fwait
mov
inc
mov
add
mov
sub
add
add
add
add
add
add
add
add
add
sti
fildl
jge
xlat
add
call
add
xlat
add
sti
add
incl
pop
sti
fildl
fildl
pop
filds
std
sti
filds
jg
repz
roll
pop
mov
filds
pop
sti
xlat
add
subl
incb
lds
loop
popa
push
add
aam
nop
mov
mov
cmc
jbe
mov
pop
inc
sbb
das
roll
lods
nop
pop
fists
dec
scas
dec
mov
dec
jmp
mulb
mov
add
sbb
ror
loopne
and
ljmp
and
jne
mov
xchg
jnp
pushf
out
mov
pusha
cmp
jl
inc
mov
cmp
cmp
ljmp
ljmp
add
jbe
sub
inc
out
insb
jmp
in
ljmp
and
ss
cmc
mov
xchg
mov
popf
adc
sub
int
and
mov
nop
enter
adc
lret
mov
add
gs
pushf
test
pop
lds
notb
adc
clc
jle
faddp
xor
sarb
cmpsb
jecxz
data16
jl
js
dec
jne
sahf
ds
sbb
add
pushf
xchg
cmp
scas
mov
adc
sub
fiadds
xchg
testb
xor
or
pop
data16
data16
es
imul
outsl
out
repz
or
or
orb
adcb
movsb
push
jl
cmpsb
les
mov
pop
shrb
or
sbb
es
jmp
mov
push
adc
xchg
xchg
mull
lock
cmc
inc
test
test
ja
es
sbb
cmp
insb
and
and
mov
cltd
add
pop
xor
bound
int3
sub
pushw
jle
cli
and
stos
pop
xorb
mov
lahf
mov
lods
ljmp
sub
pop
nop
scas
sti
in
add
mov
mov
rcr
jle
testb
xchg
xchg
sbb
add
add
add
add
add
add
add
add
addr16
cli
incl
mov
std
std
add
iret
fldl
repnz
mov
jg
mov
jg
jge
add
xlat
fldl
mov
jg
add
std
jns
dec
insl
pop
jl
or
push
ljmp
rol
jb
or
adc
rcll
push
lahf
divb
and
xchg
enter
mov
xor
mov
pop
cwtl
inc
dec
stos
ret
fcompl
xchg
xor
je
gs
sub
dec
adc
js
jp
xor
dec
scas
pop
pop
loope
inc
pop
mov
movsl
push
fs
ficomps
push
mov
std
mov
add
add
add
add
add
xor
add
add
push
add
and
add
add
push
add
adc
add
add
push
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
dec
add
add
add
aas
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
xor
cmp
xor
xor
inc
add
add
cmp
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
popa
add
add
add
popa
add
add
js
js
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
popa
add
add
add
jbe
bound
add
add
insl
add
add
add
je
jno
jne
jno
js
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
aaa
add
add
and
xor
aaa
add
and
xor
xor
xor
sub
and
xor
xor
xor
add
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
insb
add
add
insb
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
popa
add
add
add
popa
add
add
js
js
and
xor
cmp
cmp
cmp
sub
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
popa
add
add
add
js
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
popa
add
add
add
jbe
bound
add
add
insl
add
add
add
je
jno
jne
jno
js
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
and
xor
xor
xor
sub
and
xor
xor
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
nop
add
adcb
add
nop
add
pushf
nop
add
out
add
movsb
nop
add
repnz
add
lods
nop
add
cld
nop
add
mov
add
or
add
adc
add
push
xchg
add
sub
add
cmp
add
dec
xchg
add
pop
xchg
add
push
add
add
add
add
add
xchg
add
xchg
xchg
add
add
add
scas
xchg
add
add
add
mov
add
add
xchg
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
dec
inc
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
push
dec
dec
dec
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
insl
popa
addr16
imul
ja
add
outsb
jae
popa
jb
outsb
je
insb
je
add
gs
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
gs
insb
inc
js
arpl
gs
add
add
dec
outsb
jne
add
jb
jne
jb
push
popa
insb
jne
push
