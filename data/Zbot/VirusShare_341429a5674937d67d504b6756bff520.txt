movl
mov
movl
mov
mov
mov
ret
push
mov
push
movzwl
sbb
movl
add
mov
negl
mov
orl
sub
xor
xorl
add
push
movl
jne
mov
mov
xor
add
or
mov
adc
mov
xor
mov
andl
add
adc
mov
subl
xor
push
mov
mov
xorl
sub
cmp
pop
je
mov
jmp
mov
add
xor
sub
jmp
mov
add
xor
sub
pop
leave
ret
push
mov
sub
movzbl
adc
push
xor
add
mov
xor
movl
mov
and
push
movl
movl
mov
xor
xor
sub
sub
mov
andl
push
adc
mov
sbb
add
sbb
mov
xor
adcl
mov
andl
sub
sbbl
mov
movl
sbbl
pushl
subl
call
sbbl
mov
mov
mov
add
andl
xor
sub
movl
cmp
jne
mov
andl
add
adcl
xor
sub
jmp
addl
pushl
pushl
sbbl
call
mov
negl
mov
sbb
mov
movl
add
orl
xor
adcl
sub
cmp
je
mov
dec
mov
or
mov
mov
mov
sbbl
add
mov
and
mov
and
mov
sbbl
add
xor
mov
mov
mov
subl
add
andl
mov
movzbl
movl
movl
mov
mov
cmp
movl
jae
or
mov
mov
adc
mov
mov
sub
mov
orl
add
mov
mov
mov
movl
cmpl
movl
je
movl
movl
jmp
movl
mov
movzwl
xor
mov
add
xorl
xor
andl
sub
cmp
je
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
not
mov
mov
mov
neg
mov
mov
mov
sbb
mov
subl
mov
sbbl
add
adc
mov
subl
xor
xor
add
or
mov
mov
sbbl
sub
mov
sbb
movzwl
mov
movl
adc
movb
lea
mov
mov
mov
sub
mov
sub
mov
andl
sub
xor
xorl
add
mov
xor
movl
adcl
movl
adc
mov
adcl
add
notl
xor
movl
sub
mov
movzwl
add
mov
xorl
add
adcl
xor
sub
movl
jmp
mov
movl
mov
cmp
movl
jne
sub
mov
xor
mov
add
sbbl
xor
andl
sub
movl
mov
movl
cmp
je
xor
mov
sbbl
mov
mov
sbbl
add
adc
mov
xor
add
mov
subl
sub
movzwl
mov
mov
or
mov
add
sbb
movzwl
adcl
mov
xorl
xor
sbbl
sub
mov
mov
mov
movl
mov
inc
movl
mov
movl
cmp
movl
jne
adc
mov
mov
add
sub
xor
sub
sub
mov
mov
adcl
lea
adcl
xor
movl
lea
mov
movl
inc
mov
movl
cmp
movl
jb
movl
sub
mov
mov
mov
mov
xor
add
mov
movb
mov
movl
mov
sub
movl
mov
mov
and
mov
adcl
add
add
xor
adcl
xor
sub
orl
sub
cmp
movl
jae
andl
lea
addl
mov
mov
imul
mov
movl
add
add
mov
adcl
xor
add
movl
mov
movl
cmp
jne
or
lea
and
mov
sub
mov
mov
sbbl
sub
orl
add
cmpl
movl
mov
movl
jne
adc
mov
mov
sub
andl
xor
sbbl
add
adcl
mov
sbb
mov
mov
or
mov
addl
sub
mov
xorl
imul
movl
cmpl
movl
mov
jne
movl
movl
movl
mov
movl
cmp
jne
subl
movl
not
mov
xorl
mov
xorl
lea
movzwl
and
mov
mov
sbb
mov
mov
andl
add
xor
xorl
add
inc
adcl
incl
orl
sub
notl
mov
movl
cmp
jb
mov
xorl
test
jne
addl
or
mov
movzbl
or
mov
mov
mov
movzbl
or
mov
mov
movzbl
sub
mov
mov
xor
xor
sub
mov
movb
mov
sub
mov
movl
and
mov
or
movl
mov
sub
mov
add
xorl
add
orl
xor
andl
xor
sub
orl
sub
movl
cmp
jae
subl
lea
mov
adcl
mov
andl
imul
orl
mov
add
mov
xorl
xor
adcl
add
mov
movl
cmp
jne
orl
lea
movzbl
add
mov
add
mov
mov
adcl
sub
addl
add
movl
cmpl
mov
movl
jne
mov
xor
xor
adc
mov
sub
xor
adcl
add
orl
mov
add
mov
mov
sbbl
sub
dec
mov
imul
cmpl
mov
mov
mov
lea
mov
jne
mov
movl
cmp
jne
movl
mov
mov
add
xor
add
inc
incl
sub
mov
cmp
jb
mov
test
je
mov
mov
movsbl
add
xor
sub
cmp
je
mov
mov
add
xor
lea
mov
incl
jmp
xor
jmp
mov
add
xor
sub
mov
mov
mov
mov
mov
add
xor
sub
cmp
je
mov
mov
movzwl
mov
mov
mov
jmp
incl
jmp
mov
add
mov
mov
test
je
movl
mov
push
mov
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
add
xor
sub
mov
mov
mov
cmp
je
lea
mov
mov
add
mov
mov
mov
mov
add
xor
lea
mov
mov
mov
cmp
jne
mov
mov
add
xor
sub
mov
movl
mov
add
add
mov
add
cmp
jne
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
mov
div
out
mov
out
push
movb
mov
adc
or
mov
imul
add
add
inc
call
mov
push
mov
sub
mov
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
or
mov
movl
mov
movl
mov
push
movl
push
mov
push
movl
mov
call
mov
mov
mov
mov
add
mov
adc
mov
mov
mov
add
adc
sub
push
sbb
push
xor
xor
push
push
call
mov
mov
sub
sbb
pop
mov
pop
mov
mov
xor
pop
leave
ret
push
mov
mov
addl
andl
mov
orl
sub
cmpl
movl
push
movl
push
movl
push
movl
jne
movl
movl
lea
and
mov
lea
sub
mov
adc
lea
mov
or
movb
sub
movb
movl
sub
mov
mov
sbb
movl
mov
adc
add
xor
sub
mov
mov
call
mov
sub
mov
dec
mov
adc
mov
add
mov
subl
xor
adc
sub
mov
sub
mov
addl
movl
andl
mov
movzbl
sub
mov
xor
mov
mov
xor
or
sbb
mov
neg
mov
incl
movl
mov
xor
or
sub
sub
movl
movl
adc
mov
sbbl
mov
mov
subl
add
sbb
mov
mov
subl
mov
mov
adcl
dec
sbbl
not
subl
and
movzbl
sbb
mov
movl
movzwl
or
mov
movl
dec
movl
movl
movl
movl
sbbl
mov
mov
lea
xor
mov
add
mov
inc
mov
mov
addl
add
adc
addl
xor
xor
adcl
add
mov
movl
mov
notl
adc
andl
mov
add
mov
mov
mov
adcl
xor
xorl
addl
mov
add
mov
mov
movl
adc
movl
mov
cmp
movl
ja
movl
jb
notl
mov
movl
cmp
jae
jmp
adc
mov
mov
mov
add
xor
orl
lea
and
mov
sbb
mov
add
mov
push
pop
movl
adc
xor
adcl
xor
addl
add
movl
adc
movl
cmp
movl
jne
movl
cmp
movl
jne
mov
mov
orl
mov
subl
mov
movzwl
xor
mov
add
xor
sbb
sub
xor
andl
add
add
mov
mov
add
adc
movzwl
xor
mov
xor
mov
mov
xor
add
movl
adc
addl
xor
orl
xor
add
mov
movl
adc
dec
mov
addl
add
movl
adc
addl
add
movl
mov
movl
adc
add
adc
incl
xor
movl
xor
orl
add
adc
mov
cmp
jb
ja
cmp
movl
jb
not
mov
xorl
mov
and
mov
mov
sbbl
add
movl
adc
xor
xor
negl
add
movl
mov
mov
adc
xorl
mov
sbbl
add
not
mov
mov
movl
adcl
adc
xor
xorl
mov
add
mov
mov
adc
mov
movl
cmp
ja
movl
jb
mov
movl
cmp
jae
jmp
mov
xor
mov
mov
mov
sbb
mov
orl
add
addl
add
andl
xor
xor
sub
add
xor
add
mov
add
adc
subl
xor
xor
adcl
add
movl
adc
movl
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
xor
or
adc
mov
subl
mov
decl
mov
add
xor
xorl
sub
orl
or
andl
add
movl
cmp
jne
movl
cmpl
movl
jne
neg
mov
add
mov
add
mov
xor
mov
xor
movzwl
xor
sub
andl
mov
adc
mov
add
sub
xor
mov
adc
sub
sub
or
xor
add
adc
sub
adcl
mov
mov
sbb
mov
mov
andl
add
adc
xor
addl
xor
andl
add
adc
subl
xor
subl
xor
add
mov
mov
adc
adcl
add
movl
adc
adcl
add
adc
mov
adc
mov
mov
mov
andl
add
movl
adc
andl
xor
subl
xor
sbbl
add
adc
movl
mov
cmp
movl
jb
movl
ja
cmp
movl
jb
xor
xor
sbb
mov
mov
xor
mov
add
xor
mov
orl
sub
orl
add
jmp
mov
mov
andl
sub
mov
movl
mov
sub
mov
mov
mov
mov
andl
add
xor
subl
sub
mov
movl
mov
movl
mov
movl
cmp
jne
mov
not
mov
sbbl
add
xor
andl
lea
mov
mov
orl
mov
subl
add
xor
andl
sub
movl
cmp
jb
sub
mov
addl
add
xor
addl
dec
addl
xor
addl
sub
mov
movl
jmp
sub
decl
mov
test
movl
je
xor
movl
movl
mov
mov
subl
mov
andl
mov
movl
mov
add
xor
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
mov
mov
add
xor
sub
cmp
je
mov
mov
mov
add
mov
mov
mov
movl
movl
movl
movl
movb
mov
mov
mov
mov
mov
movl
mov
mov
mov
add
xor
add
cmp
je
xor
movb
mov
mov
add
adc
xor
xor
add
mov
mov
mov
mov
adc
mov
mov
mov
mov
add
adc
xor
xor
add
adc
mov
mov
mov
mov
add
adc
xor
xor
add
adc
mov
mov
mov
cmp
ja
jb
cmp
jae
jmp
mov
mov
mov
add
xor
add
incl
mov
mov
mov
mov
xor
add
adc
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xor
add
cmp
je
movl
movb
movl
movl
movl
mov
mov
add
xor
sub
cmp
jne
movb
mov
mov
add
xor
add
mov
mov
cbtw
mov
add
mov
xor
mov
sub
mov
movzwl
movsbl
cmp
mov
je
mov
add
xor
sub
mov
mov
add
xor
sub
xor
add
adc
xor
xor
add
adc
mov
mov
mov
mov
add
xor
sub
cmp
jne
mov
add
mov
xor
sub
cmp
mov
mov
jae
add
xor
mov
sub
add
mov
jmp
mov
add
xor
lea
mov
mov
mov
andl
jmp
pop
pop
pop
leave
ret
push
mov
sub
or
movl
movl
sbbl
movl
movl
movl
sbb
movl
mov
sbb
movl
or
mov
mov
notl
add
andl
xor
andl
sub
cmp
movl
jne
xor
or
sub
mov
mov
sbb
mov
pushl
push
call
mov
call
mov
lea
add
mov
mov
mov
leave
ret
push
mov
sub
mov
subl
mov
mov
movl
lea
addl
push
subl
lea
movl
movl
orl
push
movl
movl
movl
subl
movl
xorl
movl
movl
movl
call
addl
push
call
movzwl
sub
pop
push
movl
call
neg
pop
adcl
push
push
orl
lea
push
subl
lea
push
push
movl
call
cmpw
je
xor
leave
ret
call
mov
lea
add
leave
ret
push
mov
sub
push
orl
movl
xor
movl
push
movl
movl
movl
push
movl
movl
cmp
movl
jne
add
movl
movl
dec
movl
movl
movl
mov
or
movl
sbb
mov
add
add
xor
sub
sbb
xor
add
movl
adc
mov
xor
xor
xor
movzwl
sbb
add
movl
adc
mov
mov
mov
mov
mov
jmp
or
xor
mov
mov
xor
mov
mov
mov
movl
mov
mov
sub
add
movl
adc
addl
xor
subl
mov
movzwl
adc
mov
sbbl
xor
add
movl
adc
movl
xor
addl
xor
sub
movl
mov
inc
sbb
mov
mov
or
mov
add
mov
or
mov
mov
add
add
mov
xor
mov
sbb
mov
sbbl
add
adc
mov
mov
mov
sub
imul
mov
mov
mov
xor
mov
or
add
sub
mov
addl
mov
mov
mov
sbb
mov
movl
xor
incl
add
movl
adc
orl
xor
xor
andl
add
movl
adc
cmp
movl
jb
ja
movl
cmp
jbe
mov
movl
jmp
mov
addl
lea
movzwl
add
orl
xor
orl
sub
mov
mov
adc
mov
mov
addl
add
xor
adcl
lea
mov
not
mov
orl
add
movl
adc
orl
xor
orl
xor
subl
add
movl
adc
xorl
xor
cmp
movl
jb
movl
ja
mov
movl
cmp
jb
movl
jmp
sub
mov
orl
mov
adcl
mov
orl
add
adc
addl
xor
andl
xor
addl
add
notl
mov
incl
lea
movl
push
mov
mov
push
push
movl
push
pushl
movl
adc
addl
mov
call
mov
mov
mov
or
mov
adcl
add
add
adc
orl
xor
subl
xor
xorl
add
movl
adc
movl
or
movl
jne
subl
push
negl
push
push
push
sbbl
pushl
xorl
call
xor
add
sbb
mov
add
mov
xorl
mov
sbbl
add
adc
xorl
xor
subl
xor
sbbl
add
movl
adc
sbbl
or
movl
jne
and
mov
sbbl
push
adcl
push
push
push
addl
pushl
xorl
call
add
movl
cmpw
movl
jne
sub
mov
and
mov
subl
add
xor
xor
xor
mov
orl
sub
adcl
mov
sbbl
mov
addl
add
subl
xor
sub
incl
mov
movl
mov
sbbl
add
orl
xor
incl
sub
cmpl
movl
mov
movl
movl
movl
movl
movl
je
cmpl
je
cmpl
jne
adc
mov
not
mov
mov
sub
mov
add
mov
movl
and
mov
orl
mov
or
mov
addl
add
xor
subl
add
addl
mov
or
movl
movl
add
movl
sub
movl
sub
movl
movzwl
and
movl
sub
mov
sbbl
add
orl
xor
notl
xor
adcl
sub
xorl
add
adc
andl
xor
orl
xor
add
adc
cmpl
movl
mov
mov
movl
je
movl
cmpl
movl
je
movl
sub
mov
mov
xorl
add
subl
xor
subl
add
xorl
mov
movzwl
xor
mov
mov
xorl
test
je
lea
xorl
push
adc
mov
xorl
add
xor
subl
sub
movl
push
or
pushl
xor
mov
pushl
push
subl
push
push
adcl
pushl
orl
call
mov
xor
mov
andl
mov
xorl
mov
add
mov
jmp
adc
mov
xor
mov
mov
mov
add
movl
adc
movl
xor
orl
xor
andl
add
mov
movl
mov
movl
adc
movl
mov
cltd
movl
mov
cmp
movl
jne
mov
movl
cmp
je
andl
andl
movl
cmpl
movl
jbe
mov
push
add
xor
movzwl
or
pop
div
test
je
mov
mov
addl
sub
movl
incl
mov
cmp
movl
jb
add
mov
mov
add
orl
xor
addl
sub
adcl
mov
sbb
mov
mov
mov
addl
xor
mov
xor
mov
add
movl
adc
xor
orl
xor
add
movl
mov
adc
mov
or
andl
movl
mov
or
movl
adcl
mov
sub
movl
mov
movl
mov
mov
mov
add
adc
xor
xor
add
adc
cmp
jne
test
jne
mov
mov
add
adc
xor
mov
mov
xor
add
adc
xor
xor
sub
mov
sbb
mov
add
adc
xor
xor
sub
sbb
add
adc
xor
xor
xor
add
adc
mov
mov
mov
mov
add
adc
xor
mov
mov
xor
add
adc
xor
xor
sub
mov
sbb
mov
add
adc
xor
xor
sub
sbb
add
adc
xor
xor
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
xor
add
mov
mov
add
adc
xor
xor
add
adc
mov
xor
cmp
ja
jb
mov
cmp
jae
mov
mov
mov
add
xor
lea
mov
test
mov
mov
jne
mov
mov
sub
xor
add
mov
jmp
add
mov
mov
mov
add
xor
mov
sub
mov
add
mov
mov
mov
mov
add
xor
sub
ror
mov
mov
movl
movl
mov
mov
add
adc
xor
xor
add
adc
xor
cmp
jb
ja
cmp
jb
mov
mov
mov
add
xor
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
mov
add
xor
add
xor
lea
jmp
mov
add
xor
sub
cmp
je
mov
add
xor
sub
cmp
je
mov
add
xor
sub
cmp
jne
push
add
xor
sub
push
call
mov
mov
add
xor
lea
xor
sub
lea
xor
lea
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
movl
or
mov
addl
push
push
adcl
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
mov
mov
add
mov
adc
mov
push
mov
mov
add
adc
sub
push
sbb
push
xor
xor
push
push
call
mov
mov
sub
sbb
pop
mov
pop
mov
mov
xor
pop
leave
ret
push
mov
push
movl
movl
movl
leave
ret
sldt
mov
sldt
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
xor
xor
mov
xor
div
lea
movl
movl
mov
mov
xor
sub
xor
push
pop
div
mov
xor
xor
sub
mov
mov
mov
add
xor
mov
xor
sub
mov
mov
mov
xor
or
mov
sub
or
lea
mov
imul
mov
div
mov
xor
mov
sub
mov
mov
xor
mov
imul
add
xor
mov
sub
cmp
jbe
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
cmp
movl
jne
andl
movl
xorl
call
adcl
push
call
orl
lea
addl
push
addl
call
call
push
mov
sbbl
push
push
push
push
call
call
mov
lea
add
leave
ret
push
mov
and
sub
push
push
push
push
push
call
push
call
call
call
push
push
push
call
lea
mov
lea
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
xor
mov
sub
mov
movl
movl
mov
mov
movl
mov
add
xor
sub
mov
lea
mov
movl
movl
mov
mov
mov
add
cmp
mov
je
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
add
mov
xor
sub
jmp
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
add
adc
xor
xor
add
mov
mov
cltd
adc
cmp
jne
cmp
jne
mov
mov
mov
add
mov
mov
pop
pop
mov
pop
ret
push
mov
sub
xor
mov
add
mov
movb
movl
sbb
movl
and
mov
mov
add
movl
movl
add
movl
mov
sub
mov
movzbl
add
mov
mov
andl
lea
adc
mov
orl
xor
sbbl
add
mov
and
mov
adcl
push
or
push
sub
mov
mov
mov
add
add
addl
xor
orl
xor
sbbl
lea
and
shll
xor
mov
movl
cmp
movl
jb
mov
xor
mov
or
mov
mov
mov
xor
mov
addl
div
movl
test
mov
movl
je
add
addl
movl
adcl
mov
xor
div
andl
add
movl
cmp
movl
jae
xor
addl
mov
mov
adcl
mov
subl
xor
div
jmp
addl
adcl
jmp
mov
xor
div
add
cmp
jae
addl
mov
adcl
mov
xor
div
add
jmp
addl
adcl
mov
sub
xor
add
movzbl
add
addl
adcl
mov
test
jne
mov
pop
pop
leave
ret
push
mov
sub
or
mov
mov
and
mov
mov
mov
movl
movl
andl
mov
xor
mov
addl
push
movzwl
xor
mov
push
sub
push
addl
mov
or
add
mov
xor
mov
mov
sub
imul
mov
adc
sub
sub
mov
sbb
mov
andl
xor
mov
add
mov
adc
mov
sbb
mov
xor
xor
mov
sub
or
mov
mov
mov
mov
xor
xor
mov
add
mov
sbb
mov
movl
mov
or
movl
dec
mov
mov
xorl
add
addl
xor
andl
sub
movl
cmp
movl
je
mov
mov
mov
sub
movl
mov
xor
movb
sbb
mov
subl
add
add
adcl
xor
xor
andl
sub
subl
sub
cmp
je
or
mov
adcl
mov
orl
mov
andl
add
orl
xor
sub
jmp
and
mov
add
xor
inc
xor
xor
sub
inc
mov
mov
inc
mov
movzbl
mov
mov
mov
mov
movl
mov
movl
cmp
jb
movl
subl
mov
subl
mov
adcl
mov
mov
adcl
add
xor
lea
mov
movl
xor
movl
adc
mov
andl
mov
add
orl
add
xor
andl
xor
sbbl
sub
sub
movl
mov
cmp
movl
jae
and
add
add
mov
mov
xor
add
mov
or
imul
movzbl
and
xor
sbbl
add
sbb
xor
xorl
mov
xor
mov
mov
mov
mov
div
test
je
mov
sub
mov
mov
addl
xor
sub
adcl
or
addl
sub
movl
jmp
mov
orl
mov
or
add
xorl
and
mov
sub
mov
sbb
mov
sbbl
add
add
xor
orl
xor
sub
sub
mov
movl
cmp
movl
jae
add
add
movzwl
sbb
mov
mov
mov
add
xor
xor
or
sub
add
xor
mov
sub
imul
add
xor
inc
sub
or
mov
xor
mov
div
test
movl
je
movzwl
sbb
mov
xorl
xor
sub
or
subl
sub
jmp
mov
add
mov
or
orl
add
and
movl
mov
cmpl
movl
jne
pushl
pushl
movzbl
adc
mov
mov
adcl
pushl
call
mov
adcl
mov
subl
mov
addl
incl
incl
addl
add
xor
xorl
sub
cmp
jb
mov
incl
xorl
incl
adcl
add
xor
sub
cmp
movl
jb
adcl
mov
add
andl
xor
andl
sub
mov
mov
add
xor
xorl
sub
mov
mov
mov
jmp
mov
xor
mov
add
addl
xor
addl
sub
neg
mov
add
mov
add
sbbl
xor
sub
mov
mov
mov
mov
cmp
je
decl
mov
sbb
mov
addl
add
sbbl
xor
sub
mov
mov
mov
cmp
jne
andl
mov
mov
or
mov
mov
movl
movl
movb
movl
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
xor
mov
mov
sub
add
adc
xor
xor
add
adc
mov
cmp
ja
jae
pushl
mov
push
push
push
call
mov
mov
add
mov
adc
mov
mov
mov
mov
sub
push
pop
sbb
add
adc
mov
mov
mov
add
xor
sub
xor
cmp
jne
cmp
jne
pushl
pushl
pushl
pushl
mov
pushl
pushl
call
mov
mov
mov
xor
add
adc
add
adc
mov
mov
mov
xor
push
mov
sub
pop
sbb
mov
mov
add
adc
mov
mov
mov
mov
mov
add
push
pop
adc
add
adc
xor
xor
add
adc
mov
cmp
jb
ja
cmp
jb
lea
mov
mov
mov
add
mov
mov
mov
mov
or
pop
pop
pop
leave
ret
mov
mov
adcl
or
mov
movl
jne
mov
sbbl
mul
ret
adcl
push
xor
mul
sbbl
mov
or
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
xor
push
sbb
movl
movl
xorl
mov
mov
xor
mov
sub
mov
push
and
push
add
mov
mov
add
add
xor
mov
xor
xor
xor
xor
sub
xor
adc
mov
sub
addl
sub
addl
imul
mov
cmp
mov
jne
sub
mov
add
movl
add
xor
xor
sub
sub
imul
jmp
add
xor
sub
mov
imul
add
mov
mov
pop
pop
leave
ret
adc
push
adc
outsb
jo
add
adc
fbstp
add
pusha
adc
xchg
add
adc
or
adc
pushf
arpl
add
jp
add
push
adc
das
jo
add
adc
mov
jl
add
adc
push
jle
add
adc
mov
adc
insl
arpl
add
adc
mov
add
add
push
adc
lock
add
aaa
adc
pop
adc
mov
sub
add
pop
adc
movsb
pop
adc
pop
and
add
ja
add
cmp
add
adc
in
pop
adc
mov
aas
adc
pop
add
add
jne
add
adc
jae
adc
push
movups
jae
adc
mov
add
dec
adc
sub
add
adc
pusha
push
adc
pop
push
adc
int
adc
mov
adc
sub
mov
jl
adc
sbb
add
inc
adc
cmc
arpl
add
inc
adc
inc
ret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ret
inc
add
ja
outsl
cltd
xor
repnz
pop
repz
pop
repz
std
jns
stc
ja
call
xor
hlt
repnz
hlt
and
mov
cmp
jns
ljmp
jns
loope
cmp
repnz
ja
xchg
jl
out
mov
jne
sub
idiv
mov
pop
clc
mov
pop
clc
mov
pop
clc
adc
or
sahf
jp
lcall
jne
pushf
mov
repz
mov
repz
jp
jmp
mov
jp
lcall
scas
fdivrs
cmp
mov
cmp
mov
cmp
mov
cmp
push
mov
movsb
adc
cmp
adc
cmp
pushl
cmp
cmpsb
hlt
mov
cmp
fidivrs
bnd
ljmp
jns
test
call
push
hlt
cmc
div
and
xlat
mov
dec
lret
cmc
jns
adc
ss
je
pop
cmc
div
jl
divb
and
cmp
inc
inc
sbb
repz
ja
cmpsb
repnz
bnd
std
inc
inc
sbb
jle
in
bnd
clc
push
idiv
bnd
lods
lock
cltd
cli
and
cmc
jnp
in
andl
mov
div
ja
cld
jp
push
in
bnd
jnp
stc
ja
push
lock
jbe
lock
sub
stc
ja
nop
lock
inc
dec
xlat
cmc
div
add
sti
jns
dec
repnz
bnd
repnz
jg
repnz
icebp
mull
push
add
pop
mov
jl
clc
repnz
adc
leave
sarb
cmc
idiv
or
or
jnp
idiv
repnz
or
mov
cmc
loopne
mov
repz
cmc
pop
sbb
push
pop
mov
jl
clc
repnz
adc
leave
sarb
cmc
idiv
or
or
jnp
idiv
repnz
or
mov
cmc
loopne
mov
repz
cmc
pop
sbb
push
ja
cld
jp
xchg
in
bnd
je
ret
xchg
jnp
stc
ja
mov
cmp
adc
ret
ret
pop
mov
sarb
pop
adc
leave
sarb
testl
inc
push
stc
test
int
sarb
mov
js
hlt
cmc
mulb
adc
insl
idiv
repnz
int3
mov
cmc
adc
sti
repnz
iret
push
mov
stc
fcompl
pop
jbe
cmc
lds
in
or
stos
mov
mov
mov
add
repz
mov
test
xor
mov
mov
cmc
test
mov
hlt
cmc
idivb
js
std
jnp
in
repz
jp
pushl
scas
out
cmc
negb
add
add
jp
pop
in
bnd
jnp
stc
ja
nop
lock
jbe
sti
and
hlt
cmc
popf
cmpsl
and
cmp
jl
push
out
hlt
cmc
mull
repnz
ja
sahf
jl
cli
js
xchg
icebp
div
ja
cld
and
jge
div
add
cld
jp
pop
in
repnz
and
cmp
jp
xchg
in
bnd
and
inc
dec
or
idiv
cltd
adc
hlt
cmc
push
jl
cli
js
pop
icebp
div
repz
push
je
xchg
repz
data16
bnd
cltd
sbb
push
jl
in
loopne
mov
ret
test
popa
repz
cmc
jl
outsb
es
cwtl
jb
add
push
add
or
jp
pushl
out
cmc
idivb
and
and
cmc
push
jl
cli
js
pop
icebp
div
repz
push
jp
sbbb
repz
pop
push
jns
loop
push
jo
out
mov
rcrl
sahf
shlb
repz
cmp
icebp
mov
iret
mov
lcall
or
mov
andb
jle
test
mov
div
jbe
fistpll
mov
mov
fwait
xchg
hlt
ja
mov
jp
popa
ret
fidivrs
repz
inc
jo
lcall
jnp
fucomp
mov
out
add
cmp
sub
ret
jns
repz
jbe
stos
rcl
divl
mov
mov
imul
push
sub
icebp
jne
in
lcall
loope
lea
jg
test
sarl
cmp
icebp
mov
sub
bnd
ljmp
mov
mov
call
cmp
repz
lcall
js
lahf
adc
push
and
loop
cmp
icebp
cli
js
loope
push
out
mov
in
xchg
mov
idivb
loope
cmp
ja
call
add
pushf
daa
and
icebp
jne
nop
jp
pushl
mov
in
repz
and
add
fadds
repz
repnz
xlat
test
testb
jbe
out
andl
xorl
sub
cmc
idivb
or
imulb
jbe
jmp
jne
div
ja
cld
jp
mov
cmc
divb
repnz
test
and
hlt
fimull
icebp
xchg
and
insb
out
clc
add
js
xchg
jns
jmp
cmp
mov
ja
sbb
faddl
xchg
adc
es
out
cmp
xchg
pop
aad
insb
out
hlt
push
add
pushf
icebp
js
int
jae
in
pushf
jno
lock
clc
lret
idivl
xchg
xchg
movsl
and
ficoms
std
fndisi(8087
or
jecxz
jnp
loope
scas
fldcw
js
in
repz
test
lcall
xor
mov
aaa
jo
mov
iret
mov
inc
repz
out
mov
mov
jnp
jmp
or
pop
icebp
and
cmp
xor
pop
cltd
jns
out
jl
fidivrs
jmp
fdivrs
repz
ja
mov
out
clc
fcmovb
cmp
jb
sti
lret
pop
mulb
inc
insl
in
outsl
mulb
je
sti
pop
mov
bnd
imul
ja
xchg
enter
cwtl
mov
clc
ret
sub
fistpll
xchg
hlt
mov
mov
jns
fwait
xchg
hlt
and
cld
int3
pop
imull
ja
mov
out
mov
ja
call
xlat
test
mov
repz
jp
mov
pop
clc
mov
pop
clc
mov
pop
clc
mov
pop
clc
mov
pop
clc
mov
pop
clc
je
mov
jl
mov
andb
faddl
repz
out
cmc
mulb
xlat
test
jp
xchg
out
andb
fiaddl
icebp
andl
cmp
add
js
std
jnp
out
cmpl
and
add
cmp
add
clc
push
mov
add
jnp
fucomp
andl
ja
sbb
sub
ret
outsl
adc
div
jbe
fcomip
andl
subl
mov
jae
in
repz
jp
mov
loopne
ja
mov
jecxz
lods
in
je
int
xchg
mov
push
cltd
jb
out
jne
into
jno
mov
pop
sub
cmc
div
je
xor
cmc
div
inc
inc
xor
cmc
testb
push
idiv
repnz
add
popa
repz
cmc
mulb
jbe
jmp
mov
add
lcall
xchg
js
std
jnp
mov
jae
lock
out
andb
fiaddl
icebp
andl
cmp
insb
cmp
lret
xchg
std
ret
int
repz
int3
pop
idivb
stc
ja
nop
lock
jbe
mov
fdiv
test
mov
test
jnp
fucomp
andl
repz
testb
jbe
xchg
out
jl
mov
in
shr
andb
fiaddl
icebp
andl
cmp
insb
mov
add
js
std
imull
inc
jp
div
clc
repnz
jbe
jg
cmc
idiv
and
cld
jp
xchg
repnz
and
push
popf
iret
shl
bnd
xchg
jnp
in
add
repnz
sub
sti
jns
mov
hlt
cmc
repz
mov
test
jnp
in
andl
repz
testb
adc
or
or
or
jl
into
out
cmp
push
jmp
imul
jbe
mov
push
jo
testb
xorl
jg
in
test
icebp
mov
icebp
jno
cli
fdivl
push
pop
or
jmp
test
adcl
imulb
sbbb
popf
out
icebp
repnz
out
sub
xor
call
jno
sarl
repz
cltd
lock
ret
jp
cmc
div
jae
je
test
mov
inc
sub
pushf
cld
sub
or
jno
ret
div
cld
or
add
jbe
xlat
jb
lods
cmp
mov
sahf
jnp
into
jmp
addb
lcall
lods
loope
jb
repnz
push
pushf
shlb
mov
repnz
out
fdivl
lock
in
ja
sub
add
xor
pop
xor
xor
pop
out
sahf
std
repz
add
lcall
or
or
or
push
iret
ljmp
lahf
cmc
fwait
mov
es
icebp
repnz
movsl
loope
mov
imulb
or
std
movsl
stc
popa
jmp
clc
add
insl
jmp
imul
cmc
pop
jl
out
xchg
inc
icebp
div
mov
div
ja
mov
cmpsl
lea
jl
jle
idivl
xchg
jg
add
jl
mov
cmpl
js
mov
adc
cmpsb
sbb
sti
icebp
mov
adc
lock
add
mov
repz
ds
ja
mov
mov
cld
adc
cmp
cwtl
sub
mov
push
icebp
div
imul
jo
scas
xchg
repnz
add
sti
adc
in
in
repz
lcall
bnd
adc
push
mov
icebp
div
jne
nop
fidivl
sbb
div
jbe
fadds
mov
mov
enter
hlt
cmc
jae
lods
sti
js
xchg
jae
in
pop
lock
repnz
scas
sti
inc
stos
or
out
repz
jp
lahf
aad
repz
jp
fdivrl
loopne
add
jp
xchg
icebp
pusha
fs
jo
mov
sbb
add
shlb
cmpsl
icebp
icebp
repnz
xchg
cmp
mov
and
lock
pop
div
bnd
sbbb
sti
idivl
test
adc
stc
hlt
cmc
repz
sbb
adc
testl
sahf
lods
icebp
repnz
lock
hlt
hlt
jno
jg
add
xchg
xchg
repz
cmp
jl
mov
out
jnp
in
mov
cmp
fsubrl
js
fstpl
es
icebp
cmp
je
out
stos
out
jo
les
cmc
clc
repnz
inc
pop
shrb
jnp
shll
in
fisubrl
je
js
fnstcw
in
jb
js
mov
leave
notb
lcall
lock
repnz
lods
nop
cld
or
jmp
xchg
jl
xchg
scas
xchg
std
pop
jp
xchg
jbe
in
adc
jbe
scas
lds
lock
les
ja
mov
xlat
mov
sbb
hlt
cmc
icebp
lds
shrb
sti
sub
rorb
pop
inc
jne
divb
shrl
lods
nop
cld
jge
rcl
ja
lds
clc
lds
shll
jnp
movsb
repnz
hlt
cmc
fstpt
lock
sbb
ss
xchg
cli
xlat
cmp
xlat
test
xlat
or
hlt
mov
mov
inc
sbb
xor
fwait
sub
jo
testb
cmp
je
xchg
mov
mov
cmp
test
repnz
pusha
repnz
loopne
jne
cmpb
mov
cmp
sub
jns
repnz
outsl
and
repnz
cmp
inc
cmp
cmp
jp
ret
insb
lods
in
outsl
test
faddl
in
movsl
lret
mulb
stos
mov
cmp
mov
xor
hlt
and
or
jnp
repnz
add
out
jb
in
xor
push
jge
test
xlat
adc
std
inc
jge
div
bnd
pop
icebp
div
std
hlt
and
or
ja
jnp
mov
mov
mov
mov
imul
mov
cmp
icebp
mov
add
insb
and
push
div
jbe
lret
inc
cmp
pop
insb
lods
in
outsl
imulb
and
hlt
fiaddl
jns
mull
ja
and
and
outsb
scas
out
cmp
pop
jle
test
rcll
incb
icebp
bnd
pop
repnz
repnz
cmc
and
scas
aam
mov
sub
xchg
jp
xchg
out
mov
pushf
shlb
and
jl
and
out
jle
in
ja
pushf
jp
fwait
out
andl
inc
jb
push
add
sbb
sti
jbe
sub
add
pop
jns
jnp
out
add
jns
cli
jp
ja
jns
jnp
out
insb
push
hlt
cmc
idivb
fdivs
hlt
js
stc
jnp
jbe
pop
jns
repz
jne
loopne
add
icebp
xchg
test
mov
add
cltd
in
icebp
bnd
xchg
jl
mov
shl
push
xorb
repz
jae
icebp
repnz
xor
call
jge
cmp
jns
fnstenv
test
xorl
jns
lcall
test
pop
add
push
mov
mov
ja
cwtl
jp
xchg
mov
mov
xor
jle
cmpl
jl
ret
cmc
jbe
jb
pop
sbbb
fldl
mov
mov
scas
mov
dec
jb
clc
xor
sbb
insl
loopne
in
imul
ds
stc
outsl
daa
mov
add
jns
repz
out
mov
or
jnp
in
mov
fldt
ret
out
testb
div
jl
mov
ds
mov
cmc
idivb
mov
or
test
test
mov
mov
sub
mov
push
mov
or
xor
jp
es
jle
lock
cmc
jp
iret
mov
xrelease
out
test
cmp
lods
ret
repnz
enter
clc
push
xrelease
test
mov
xlat
adc
add
fcomip
repz
add
repz
mulb
clc
or
js
jne
div
jne
and
pushl
lock
jae
shll
and
lahf
jbe
xchg
jns
sahf
jl
xchg
lock
test
mov
jnp
cltd
ja
cwtl
xacquire
out
scas
jns
sahf
jl
xchg
lock
test
cli
pop
push
adc
pop
repnz
adc
jae
in
bnd
jnp
jbe
fists
in
testl
or
jb
or
mov
mov
test
movsl
mov
idiv
mov
fbld
div
clc
mov
pop
clc
mov
pop
clc
mov
pop
clc
mov
pop
clc
mov
pop
clc
inc
cmp
ja
out
jl
lret
push
icebp
div
ja
int3
jp
iret
jbe
push
out
cmc
idivb
sub
sub
mov
dec
icebp
div
insl
lods
cs
and
jns
mov
fldl
pop
jl
insb
lods
push
push
mov
sub
imul
ja
sarb
jbe
testl
jmp
add
inc
cmp
push
imulb
repnz
div
jp
lret
int
push
lds
sarb
mov
idivb
js
leave
jns
in
ja
les
lret
je
sti
jns
ret
jbe
stc
jnp
lds
div
xchg
jns
into
jl
lret
push
icebp
div
ja
dec
lock
jbe
fsubr
js
jmp
cmp
adc
lret
jp
jb
add
hlt
cmc
mov
pop
idivb
pop
idivb
frstor
hlt
cmc
idivb
frstor
hlt
cmc
idivb
lds
enter
icebp
repnz
xchg
div
pop
jne
lods
jb
into
pop
jne
cmpsb
add
dec
ljmp
cmp
cmp
jl
sbb
mov
mov
ja
sbb
mov
pop
out
sbb
pop
outsb
mov
jp
push
inc
push
rcrl
push
jo
in
jp
mov
sbb
mov
sbb
push
clc
repnz
negb
inc
adc
cmc
divb
in
jbe
sbb
clc
repnz
xor
pop
repz
cmc
jb
cltd
pop
jne
fs
clc
inc
xor
sbb
popa
repnz
sbb
arpl
repz
sbb
insl
repnz
jns
xchg
jl
mov
mov
jb
lods
mov
pop
sbb
mov
add
stos
test
div
notl
out
subb
cld
icebp
repnz
xchg
xlat
stc
div
jp
sti
popf
hlt
clc
bnd
pushf
jp
fwait
out
mov
jg
jb
push
add
sbb
std
push
jnp
out
mov
xchg
sbb
pop
cmpsb
xlat
cmc
hlt
cmc
sbb
jle
fldl
div
insb
xchg
aad
cmc
idivb
stc
xchg
repnz
jl
lcall
jge
jo
push
or
insl
mov
or
hlt
mov
fwait
and
stos
aas
cmp
fdiv
cmc
negb
inc
sti
div
insl
xchg
clc
div
jns
cli
mov
idiv
jbe
fwait
jns
lcall
push
add
outsb
mov
idiv
je
out
cmp
shl
push
repnz
insl
cmc
jnp
loope
hlt
cmc
jp
jecxz
repz
jns
loop
or
js
dec
icebp
div
cmpsl
in
outsl
div
scas
mov
cmp
and
and
jmp
jp
icebp
div
jbe
fistpll
lret
data16
hlt
cmc
repz
mov
not
lods
jbe
jp
jecxz
or
jns
jbe
icebp
repnz
mov
lods
xchg
out
div
sbb
mov
mov
sbb
mov
repz
mov
js
mov
cmc
sbb
cmp
jp
subb
jne
test
sbb
andb
jb
sbb
jo
lock
inc
cs
das
fucomi
je
out
out
adc
mov
fsub
scas
jnp
xchg
cmp
lock
repz
xchg
lock
insl
fiadds
div
insb
xchg
aad
cmc
negb
ds
jbe
jmp
or
hlt
mov
addl
hlt
jns
out
hlt
mov
sbb
daa
jle
pop
test
inc
cmp
pop
jbe
jmp
mov
mov
add
jnp
cmc
testb
cmp
jns
pop
repnz
repnz
and
cmp
or
repz
mov
jge
mov
jns
xchg
daa
lods
imul
imul
sub
je
and
dec
addr16
push
faddp
sub
inc
sub
pop
jne
add
idiv
inc
add
js
hlt
cmc
divb
xchg
sbb
or
sub
add
hlt
cmc
jb
loopne
jne
or
idiv
inc
sub
jns
sbb
mov
hlt
cmc
idivb
pop
jne
adc
idiv
outsb
mov
adc
repz
mov
out
div
sbb
adc
clc
repnz
gs
sbb
xor
hlt
cmc
jp
sbb
div
mov
sbb
sub
mov
cmp
idiv
inc
fs
sbb
aas
repnz
mov
out
div
sbb
aaa
idiv
repnz
cmp
clc
repnz
lods
lret
sbb
push
hlt
cmc
inc
lfs
jne
add
idiv
jbe
fistpll
loop
jle
mov
or
ja
ljmp
hlt
fsub
pop
in
or
sbb
loope
jbe
out
andb
inc
inc
or
lods
inc
repz
in
lods
mov
xlat
out
out
push
in
jbe
jp
jecxz
jno
icebp
andb
jge
jmp
jb,pt
stos
dec
cmc
jbe
fistpll
loop
jle
mov
xor
push
lock
jne
cmpsl
inc
icebp
cmpsb
mov
div
sbb
insl
idiv
repnz
lods
cld
sbb
arpl
hlt
cmc
inc
push
lock
jne
push
mov
hlt
cmc
jnp
jbe
sbb
inc
je
lcall
fistps
ja
inc
sbb
div
jl
outsl
lods
icebp
sbb
cmp
jae
fistps
jbe
outsl
inc
outsl
ret
movsb
push
in
cmc
negb
add
dec
sbb
jae
ljmp
jne
inc
jp
sbb
mov
inc
cmpsb
inc
out
div
sbb
jge
mov
jne
dec
and
cmp
lock
mov
loope
sbb
xor
pop
jne
enter
jbe
sbb
aam
repnz
mov
div
pop
jne
aam
idiv
inc
sub
sbb
shl
repz
jno
es
div
inc
sub
sbb
fdivr
bnd
and
js
hlt
cmc
testb
sbb
xlat
idiv
repnz
xchg
in
cmc
negb
div
inc
sub
clc
repnz
push
jp
notl
jne
and
idiv
test
sbb
js
hlt
cmc
imulb
sbb
das
repnz
lods
cmpsl
pop
div
sbb
daa
idiv
repnz
sub
and
cmp
icebp
mov
mov
and
sarb
cmc
imulb
ds
jl
mov
mov
cmc
div
and
daa
in
imul
div
fs
ja
in
repnz
subl
jo
push
mov
lock
inc
cli
div
pop
pop
lods
cmpsb
xlat
stc
div
sbb
scas
jp
out
out
jg
mov
or
or
cmp
jp
out
jbe
out
ljmp
inc
jb
xchg
xchg
cmc
fucompp
and
outsl
mov
mov
hlt
cmc
mulb
clc
je
out
out
dec
push
sub
idiv
repnz
inc
inc
jl
clc
repnz
bnd
out
hlt
scas
pop
mov
add
enter
add
push
jp
push
xorb
jns
in
sub
pop
jns
inc
jge
out
repz
ja
lcall
test
lahf
outsl
cmp
idivb
jmp
dec
jmp
repz
icebp
mov
add
cmp
cli
dec
lock
add
hlt
div
clc
add
jl
xchg
js
xchg
jnp
icebp
repz
cmc
jp
lods
sub
jns
inc
ret
lcall
jo
nop
test
xrelease
mov
jnp
div
icebp
ja
enter
repnz
loop
fisubs
div
clc
repnz
mov
repnz
jns
mov
lock
std
hlt
imul
lods
dec
in
repz
popf
mov
icebp
bnd
lea
test
mov
mov
sbb
lods
push
in
repnz
stos
push
repnz
repnz
dec
stc
div
jbe
dec
out
cmc
idivb
ss
jp
lret
bnd
shl
clc
jbe
lret
lds
and
pop
jp
popa
cli
jl
mov
hlt
cmc
mov
cmc
jp
jecxz
cmp
cmc
insb
clc
push
imull
repz
imulb
cltd
call
jle
repz
cmc
jp
xlat
outsb
push
hlt
popa
iret
jl
shlb
leave
mulb
ja
lock
clc
jbe
shll
into
pushf
div
push
imulb
cltd
in
cltd
cmc
notb
adc
cmc
or
enter
jbe
push
out
cmc
divb
les
icebp
div
jns
lds
repnz
bnd
jb
icebp
bnd
jle
icebp
bnd
jb
icebp
bnd
jp
icebp
bnd
lds
div
repnz
jae
repnz
jp
dec
in
bnd
out
jbe
fadd
repnz
stos
add
ja
xchg
enter
icebp
mov
jae
repnz
inc
ds
jne
pushf
mov
clc
bnd
jnp
bound
mov
aam
out
add
push
clc
bnd
adc
xor
js
pop
das
jp
je
ljmp
stos
retw
or
out
call
mov
jne
jbe
jp
popa
cld
jl
mov
enter
fs
or
clc
cmp
jo
jmp
jb
pop
mov
stos
fs
or
jbe
xchg
cmc
cmp
je
cli
lock
jno
pop
push
jnp
cltd
ret
lods
add
mov
div
cmp
jae
stc
out
mov
sahf
sub
loop
outsb
adc
clc
repnz
and
mov
mov
jo
and
sar
cmpsb
test
bnd
call
lret
pop
cmc
jp
jmp
mov
outsl
div
mov
mulb
cmpsl
mov
scas
jne
cwtl
jp
jmp
cmp
jns
ljmp
mov
in
jnp
in
jbe
lock
out
mov
sub
ret
outsl
mov
div
jbe
out
cmp
hlt
sbbb
fnstcw
push
out
cmc
idivb
js
jne
div
out
test
sbb
lods
les
lock
ja
cld
repnz
scas
inc
inc
icebp
xor
mov
test
jns
loop
sbbl
or
sbb
repz
fdivs
lds
jmp
jge
repnz
daa
xor
mov
idivb
js
jmp
fdivs
cmp
sbb
cmp
repnz
jns
ljmp
test
mov
mov
test
flds
lock
jns
test
call
out
cmp
jp
incl
out
cwtl
mov
clc
je
mov
pop
hlt
jns
xabort
mov
xchg
icebp
div
repz
jns
xabort
mov
xchg
icebp
div
repz
mov
out
addr16
pop
cmc
jp
jmp
andl
fidivrl
mov
ljmp
out
mov
inc
jbe
cwtl
mov
clc
jbe
ret
jns
xchg
repnz
repnz
jge
ja
cli
clc
add
js
jmp
fdivs
mov
rcrb
fdivs
js
cmc
div
jl
out
mov
daa
cmp
js
cltd
repz
inc
jo
lcall
cltd
in
repnz
and
mov
shl
jns
ljmp
cltd
mov
bnd
ljmp
jns
loope
add
xacquire
xlat
mov
or
js
mov
nop
push
mov
subl
out
cld
js
out
cmp
cmc
ja
call
mov
sub
pop
fdivrs
ljmp
mov
aad
mov
leave
ja
in
cmp
out
cmc
test
mov
cmc
insb
sahf
clc
add
cwtl
jp
sti
out
cmp
jns
jl
mov
hlt
cmc
jae
jmp
hlt
imul
clc
jp
jmp
add
icebp
mov
sub
mov
rcrb
inc
jo
lcall
fwait
ret
div
mov
les
jne
jns
out
jl
mov
mov
in
xchg
mov
idivl
js
xor
scas
xchg
lock
out
mov
lea
clc
bnd
loope
push
mov
lret
mulb
xlat
mov
bnd
call
xlat
mov
cmp
jl
out
cld
jp
out
xchg
out
js
jmp
mov
mov
div
or
fwait
outsb
xchg
and
pop
hlt
mov
pop
hlt
jns
cli
or
jp
jl
out
jae
test
xor
scas
test
and
repz
or
cmc
idivb
js
std
rep
and
mov
pop
idivb
xchg
ja
call
in
scas
and
and
xlat
icebp
daa
test
in
jno
repnz
bnd
in
jnp
stc
out
jl
cmc
div
jbe
sti
jns
out
fsubl
js
jmp
fcoms
jno
sub
jae
repnz
jp
jmp
in
out
hlt
jp
fidivrs
repz
mov
div
jbe
out
out
ljmp
cmc
je
vphaddwq
repz
inc
or
jne
clc
jp
xchg
xchg
jbe
xchg
jnp
cmc
ret
lods
xor
bnd
sahf
jl
lcall
into
mov
jecxz
jb
jp
sti
ret
scas
out
jp
lcall
out
in
call
mov
idivb
mov
cwtl
jp
lahf
out
in
out
hlt
sub
imul
adc
fsubr
daa
xchg
imul
jbe
ja
xor
je
imul
cmc
add
outsb
inc
ja
in
cmp
jns
loop
adc
lock
and
xchg
sbb
shll
mov
cmp
jns
ljmp
jmp
in
xchg
enter
cmc
idivb
addl
jmp
lods
and
mov
cld
cmc
or
mov
div
mov
pop
clc
mov
pop
clc
jbe
out
or
mov
repnz
hlt
and
fidivl
cmp
repz
fdivs
cmp
jns
xchg
jl
xchg
and
cmp
jbe
fistpll
loop
mov
add
jo
jecxz
lret
jp
out
or
and
cmp
cli
into
pusha
bnd
cmpb
push
mov
add
dec
pop
idivb
pop
idivb
stc
jne
enter
insl
repnz
hlt
cmc
jnp
cmc
jns
lds
repz
bnd
int
mov
cmc
idivb
js
std
jno
jmp
repz
jo
into
aaa
repnz
cwtl
ret
repnz
test
hlt
jp
jmp
andl
fidivrl
add
jnp
stc
ja
cld
repnz
je
lret
jns
push
jle
ret
outsl
push
icebp
div
mov
clc
jbe
mov
xchg
test
mov
add
jnp
lock
jbe
js
sub
ret
out
or
jl
inc
out
hlt
cmc
jnp
je
imull
mov
out
cmc
testb
std
jns
loop
mov
mov
addb
or
clc
add
js
mov
std
ja
add
mov
add
mov
icebp
bnd
leave
jnp
cmc
ja
push
lock
je
js
int
addr16
repz
add
jns
cli
jl
es
scas
aas
mov
jns
jmp
scas
pop
imul
test
sbb
je
lret
sub
repz
jp
jmp
andl
fidivrl
add
lock
test
jl
andb
xchg
jp
repz
cmc
jnp
jmp
or
or
jnp
sub
cmc
js
mov
popa
push
jl
scas
icebp
cmp
pop
jbe
out
icebp
cmp
pop
cltd
and
push
in
cmp
jp
out
mov
mov
subl
int3
jp
out
cmp
jns
repnz
cmp
incb
js
in
jnp
cltd
ja
test
fucomip
andl
inc
jp
xchg
xchg
cmc
jp
iret
je
jmp
cmp
enter
icebp
mov
js
int
test
sub
hlt
cmc
jp
lret
jbe
inc
out
cmc
idivb
sub
insb
fidivrl
js
xchg
icebp
div
inc
or
out
mov
mov
test
ja
mov
pusha
add
repz
jl
enter
hlt
cmc
jnp
leave
ja
enter
in
bnd
xrelease
sbb
jb
in
bnd
ljmp
jae
stc
bnd
cltd
scas
sbb
pop
hlt
inc
cmp
dec
int3
pop
test
pop
idivl
push
jbe
movsl
jns
popf
mov
pusha
bnd
cld
test
cmp
repnz
cmp
mov
sbb
mov
mov
mov
or
idivl
stc
outsl
jb
sti
sbb
jne
daa
cmc
div
popa
andb
js
hlt
cmc
idivb
adc
hlt
cmc
js
jg
cmp
xor
inc
cld
cmpsb
jbe
dec
jns
inc
mov
clc
pop
lret
js
pop
repnz
ja
add
repnz
repnz
pop
idivb
cmc
dec
into
pusha
repnz
clc
xor
pop
cmc
mov
hlt
dec
int
clc
mov
testl
clc
repnz
repnz
lret
pop
idivb
imul
imul
hlt
inc
int
clc
je
jae
cmp
xor
add
sarb
adc
cmp
int
mull
je
jnp
idiv
bnd
out
jne
into
jno
mov
repnz
xor
out
rcrb
js
leave
jnp
in
repz
inc
inc
sub
repz
push
push
repz
jns
xchg
repnz
repnz
dec
shl
clc
repnz
add
add
jp
mov
cmp
js
dec
icebp
div
repz
mov
xorl
mov
mov
cmp
jl
out
cmp
fdivrs
jne
test
jl
ja
test
cmp
sub
jns
into
jl
inc
out
hlt
cmc
sub
push
jnp
inc
in
repz
jp
iret
es
lret
jbe
dec
out
cmc
idivb
js
ret
jns
sahf
hlt
mov
jns
lods
ja
int3
imulb
add
push
popf
jg
bnd
jb
icebp
bnd
lret
lret
stc
sahf
cmp
repz
jnp
jae
repnz
imulb
repnz
bnd
lds
div
bnd
leave
jnp
inc
in
repz
jp
push
in
bnd
jnp
je
xor
dec
repnz
bnd
stc
sub
push
icebp
div
inc
or
ja
mov
pusha
add
repz
jp
lret
jbe
mov
cmc
idivb
mov
scas
js
int
arpl
mov
pop
bnd
cld
jp
xlat
insb
lods
in
ss
divb
leave
cmp
cmc
jno
mov
stc
pop
ja
fdivrl
sti
out
lods
jbe
sarl
mov
divl
shll
bnd
ret
aad
xor
ja
sarb
je
negl
ja
aam
cmp
jns
jp
ja
aam
repz
mov
mov
push
idivb
cwtl
out
and
scas
leave
testb
xchg
les
or
lods
push
lret
cmpsb
test
bnd
pusha
cmp
jns
cli
jl
cli
lock
sub
or
repz
out
adc
daa
adc
popa
aam
popf
out
aaa
jo
push
fnsave
fnstsw
faddl
push
rep
jbe
inc
popf
out
aaa
jo
push
rcl
icebp
daa
in
pop
mov
mov
adc
adc
xchg
jno
sarb
sbb
cmc
test
mov
cmc
test
xchg
inc
cmc
test
ljmp
out
adc
test
xorb
jle
push
cmc
test
mov
hlt
cmc
test
lcall
xchg
js
cmc
test
loop
sbb
idivb
stos
std
aaa
div
lods
js
in
and
jp
jb
movsb
mov
clc
popa
repz
jo
and
imul
loope
push
icebp
repnz
icebp
repnz
icebp
bnd
in
jnp
in
and
cmp
jp
cs
repz
fiaddl
cmp
repz
ja
call
mov
out
or
icebp
pop
lods
jns
sahf
cld
stos
movsb
test
neg
xorl
nop
push
repz
fiaddl
cmp
jb
jo
cli
cld
repnz
fstpl
aad
not
fsubl
jle
out
jl
subb
enter
lods
js
fiaddl
hlt
cmc
sub
div
sbb
mov
clc
cmc
or
xor
or
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
mov
div
jbe
xchg
jns
mov
sti
iret
repz
and
push
icebp
bnd
div
ret
cmpsl
pusha
mov
jns
ljmp
or
hlt
cmc
scas
jnp
xchg
imull
mov
hlt
in
jmp
push
cmc
mov
cmc
neg
xorl
mov
mov
xchg
cmpsl
div
icebp
mov
div
mov
div
mov
div
mov
div
ja
mov
subb
jecxz
or
mov
or
jge
adc
inc
jo
sub
fwait
out
cmp
or
ja
adc
testb
ja
mov
repnz
jge
loop
push
movsl
cmpsl
mov
sub
hlt
fidivl
cmc
repnz
or
shll
movsb
pop
div
xlat
lods
jns
out
stos
ja
cwtl
cli
mov
jnp
loopne
or
faddl
adc
movsl
mov
mov
mov
xchg
sub
cmc
notb
adc
cmc
or
xor
cmp
mov
cmp
sbb
ja
mov
sbb
jp
jle
cmp
jbe
mov
sarb
jmp
cmp
jecxz
icebp
jne
cwtl
push
jns
test
jp
out
rcll
out
int
sbb
jo
xor
js
outsl
loopne
pop
ja
outsb
scas
push
or
jp
out
out
mov
add
outsl
insb
jbe
jmp
rcl
icebp
ja
in
jl
arpl
mov
shlb
inc
clc
xor
mov
js
jns
hlt
jns
out
jns
hlt
jnp
ja
clc
jbe
jmp
jge
cld
jbe
jmp
in
icebp
xor
fcomip
loope
loop
inc
cltd
mov
repnz
mov
fnsave
in
jp
sti
inc
es
add
and
xlat
in
mov
lock
out
faddl
clc
es
inc
cmp
out
fsubrl
out
cmp
pop
jecxz
inc
lcall
jae
test
clc
adc
or
ja
jno
ret
cli
mov
pop
repz
pop
repz
add
jmp
into
pusha
repnz
push
jp
out
in
xor
out
mov
lret
cmp
pop
pop
mov
pop
mov
or
movsb
xchg
js
jmp
and
icebp
jnp
jnp
jmp
lret
hlt
mov
in
mov
fdiv
and
add
fdivrl
out
ret
repz
and
and
add
repnz
stc
cltd
mov
bnd
loopne
jne
out
mov
out
out
and
xlat
test
mov
cmp
jns
sbb
jne
jns
out
or
lods
out
hlt
or
fwait
outsb
xchg
das
add
mov
jno
icebp
icebp
repnz
cmp
ja
loop
add
js
std
jno
push
pop
fildl
andl
cmp
lods
add
insl
and
dec
ja
mov
lea
mov
mov
xchg
cmp
jp
mov
mov
push
xchg
ja
nop
mov
ja,pn
lock
and
pop
mov
push
out
mov
in
ret
jp
cmc
div
js
les
div
icebp
ja
xchg
jp
xchg
jbe
mov
mov
jg
jge
jb
negl
mov
imull
repz
fucomi
jbe
xchg
leave
xchg
out
xorl
fucompp
int3
subl
aaa
add
outsb
jg
and
outsb
mov
outsl
xor
jne
je
xchg
xchg
jl
mov
mov
jmp
test
sbbl
lock
outsb
fcomip
and
xchg
leave
xchg
jnp
out
mov
mulb
outsl
in
hlt
fidivrl
mov
jg
and
scas
mov
imul
xchg
jle
push
pop
sbb
add
ja
xchg
jl
fidivs
xchg
jnp
loope
add
jp
mov
repz
out
out
mov
negl
xorb
repz
hlt
ja
out
jnp
jle
jle
div
repnz
imull
jne
ret
hlt
cmc
idivb
js
xchg
repz
mov
or
jge
jbe
out
sarl
ja
call
fstpl
mov
jg
and
sub
fidivrs
lea
test
jne,pn
add
pmullw
add
add
or
ja
sub
sub
xchg
mov
add
mov
repnz
jns
mov
mov
negl
xorb
repz
hlt
ja
mov
jnp
jle
outsl
sbb
repnz
imull
jne
ret
cmc
div
clc
push
sahf
mov
adc
mov
jp
jb
shr
hlt
cmc
mov
pop
idivb
pop
testb
cmp
or
int
clc
jbe
xchg
or
repnz
repnz
repnz
cmp
mov
addr16
cmp
cld
cmc
div
jbe
js
loope
push
xchg
out
mov
push
sbb
fidivrl
cmp
jnp
cltd
ja
loopne
xchg
mov
mov
out
scas
and
in
inc
ds
idiv
je
jmp
cmp
jl
out
jo
xchg
in
bnd
loope
push
in
mov
stc
xchg
mov
imulb
cltd
pop
jnp
out
mov
je
jmp
cmp
repz
jns
fwait
sbb
cmp
hlt
sbbb
fnstenv
out
cmp
jns
jp
stc
ja
cld
jbe
jmp
stos
mov
cld
jp
lahf
jbe
sti
icebp
xchg
test
mov
mov
out
cmc
jp
jmp
mov
add
jnp
fucomp
test
addl
xchg
mov
idivb
stc
ja
loopne
mov
fnstcw
add
jp
fwait
jbe
jecxz
mov
sub
js
in
repz
adc
scas
adc
lods
pop
mov
icebp
testb
xchg
js
stc
jae
sar
jle
cvtpi2ps
cli
les
div
icebp
daa
lods
lds
div
repnz
xlat
cmc
hlt
cmc
scas
inc
div
repz
hlt
cmc
js
out
je
fbstp
ljmp
sbb
add
pusha
addr16
js
hlt
repnz
hlt
cmc
js
out
stos
add
jp
sti
inc
idivb
jp
out
and
enter
inc
in
div
pop
daa
test
jnp
stc
ret
lods
out
sub
icebp
pop
sub
dec
stos
in
lds
div
cmc
sbb
out
and
stos
icebp
repnz
ljmp
loopne
clc
cmp
sbb
ljmp
fwait
std
repnz
push
cltd
pop
jl
cli
les
repnz
shrl
clc
fadd
jp
div
clc
push
mov
adc
mov
add
jno
shl
repz
and
hlt
cmc
and
inc
mov
vpshab
or
or
fincstp
outsb
stc
ja
pushf
pop
out
clc
repnz
cmp
js
pop
inc
cmp
ja
pop
inc
aaa
sbb
movsl
inc
jge
repnz
js
mov
cmc
idivb
stos
inc
jp
div
icebp
jne
test
jl
icebp
bnd
mov
ja
out
hlt
cmc
jns
lods
inc
jns
lock
je
mov
icebp
bnd
mov
repz
jp
jp
dec
and
js
xchg
ja
mov
xchg
mov
ds
repz
cmc
divb
add
xchg
jns
cmc
divb
subb
jle
outsl
cmp
scas
je
shll
mov
jbe
xchg
jns
xchg
hlt
mov
test
scas
and
sbb
bnd
xchg
js
xchg
jbe
cmp
andb
cmp
or
push
mov
test
cwtl
lret
jo
xchg
add
mov
jb
jp
xchg
jbe
sti
adc
cmp
and
dec
jae
bnd
xchg
js
xchg
jbe
xchg
jns
xchg
hlt
mov
test
xchg
mov
push
add
repnz
repnz
bnd
sub
imul
jnp
lds
aam
add
out
scas
jbe
mov
int
mov
cmp
jl
mov
lahf
je
jmp
mov
hlt
je
jmp
mov
ds
and
pushf
out
ja
pushf
jp
xchg
ret
das
sub
pop
add
add
insl
jns
mov
scas
ja
jbe
adc
ja
ljmp
mov
jmp
jle
or
sub
imul
add
jle
pop
cli
jns
cmpb
cmp
idivb
stc
pop
xchg
js
loope
jp
xchg
sub
in
pusha
dec
adc
js
or
jns
or
push
icebp
div
ja
cld
popf
loopne
bnd
pop
icebp
div
pop
mov
std
adc
dec
lods
js
adc
repz
ja
dec
lock
xchg
lret
sti
div
sub
stc
cmc
mulb
shl
repz
sbb
outsb
lods
in
jno
lock
inc
in
div
pop
daa
mov
mov
mov
jne
jns
dec
repnz
repnz
js
out
cmc
divb
lcall
pop
jbe
and
xor
js
jno
fisubrs
mov
dec
lock
out
mov
fwait
insb
xchg
mov
push
call
fcompl
and
and
and
sub
in
mov
out
icebp
mov
repz
mov
cmc
idivl
lret
mov
mov
int3
into
adc
mov
add
adc
sbb
mov
or
ror
sarb
aam
cmp
xchg
and
movsl
jnp
div
pop
out
mov
loopne
div
repnz
xchg
xor
icebp
jp
cmc
ja
clc
ret
jl
lds
repnz
xor
out
aaa
pop
jge
mov
insl
inc
js
hlt
cmc
notb
jae
sub
stc
lods
mov
test
sti
sub
jne
enter
imul
xchg
rol
jg
lods
cmp
idivl
stos
jbe,pn
leave
ja
xor
and
pushf
test
jle
lods
stos
enter
divb
jns
lds
xor
repz
jl
stc
lods
add
idiv
repnz
xchg
cli
repnz
cli
repnz
scas
sub
pop
fnstcw
stc
jnp
lods
xchg
ret
jl
xor
es
lods
xchg
sti
jl
xor
es
jns
leave
cmp
add
cmc
div
sbb
mov
clc
cmc
and
xor
repnz
out
repz
pushf
out
sbb
or
fwait
outsb
xchg
and
pop
hlt
mov
pop
hlt
jns
ljmp
repz
movsl
lret
mulb
mov
shlb
sti
fnstcw
out
jno
icebp
icebp
bnd
stc
repz
lods
fdivrs
sub
hlt
cmc
jnp
rcrl
ja
ljmp
jl
cli
js
lds
push
pop
fildl
ret
in
fbstp
stc
scas
add
js
and
dec
js
xchg
repz
shl
outsb
jge
cmp
add
sbb
mov
fbld
cmp
in
add
js
loope
xor
js
icebp
add
push
mov
or
clc
outsb
in
lds
icebp
repnz
jge
icebp
bnd
out
or
js
popf
repz
adc
bnd
imull
repz
fucomi
jbe
jecxz
xchg
fucomp
xorl
and
mov
outsb
jg
and
outsb
mov
outsl
xor
jne
je
xchg
jns
out
jo
lock
jmp
xchg
jp
xchg
push
xor
jb
imull
repz
jecxz
xchg
jnp
fucomp
mov
mulb
outsl
in
hlt
fidivrl
mov
jg
and
scas
mov
imul
xchg
jp
mov
jbe
mov
out
add
jbe
ja
mov
xchg
jg
repz
out
in
xchg
jb
negl
mov
cmc
xrelease
hlt
ja
mov
daa
xchg
jle
div
repnz
imull
jne
ret
hlt
cmc
idivb
js
loope
test
mov
or
jge
jbe
imull
js
and
adc
jne
insb
jno
pop
je
and
sub
cli
js
popf
jnp
xchg
jb
jne,pn
add
pmullw
lds
xchg
jnp
lea
clc
ja
sub
lods
sub
xchg
mov
es
repnz
jns
xchg
lock
jb
negl
mov
cmc
xrelease
hlt
ja
mov
daa
xchg
outsl
sbb
repnz
imull
jne
ret
cmc
div
jl
ljmp
leave
cmp
and
cltd
clc
jnp
in
lods
and
or
ja
jno
push
cmp
hlt
int
imull
js
out
jbe
mov
cmp
div
ja
jns
mov
out
hlt
cmc
jnp
out
add
add
jecxz
cmp
or
mov
xor
mov
repz
repz
cmp
repnz
ja
out
cmp
js
add
cmp
sub
loop
js
jns
loop
leave
ja
sub
or
cmp
xchg
xorl
out
lods
cwtl
icebp
jp
add
jns
ljmp
jns
jge
cmp
repnz
ja
stos
jl
out
or
repz
fdivs
cmpsb
mov
pop
repz
pop
repz
pop
repz
lea
imul
mov
popa
adc
pop
mov
sarb
bound
adc
push
js
xchg
icebp
div
std
hlt
les
jbe
imul
idivb
out
hlt
cmc
inc
push
push
cld
add
add
jp
cmpsb
xchg
arpl
div
jbe
out
mov
jbe
in
ds
cmp
cmc
insb
cli
jl
ficomps
je
xchg
jns
lcall
sahf
jp
mov
lea
cmc
xlat
scas
ja
mov
js
cltd
jnp
shr
clc
jp
es
fwait
jbe
idivl
lcall
cmc
scas
clc
lret
ja
mov
int
test
pop
test
pop
testl
inc
push
mov
add
inc
add
jp
mov
jmp
fdivrs
outsb
in
hlt
cmc
jno
jge
lret
pop
test
aas
in
repz
pop
cli
clc
push
push
clc
or
rcrb
fdivs
cmp
out
cmp
pop
mov
xchg
xchg
cmc
js
fwait
jbe
jmp
add
hlt
mov
and
scas
dec
cmc
jbe
xchg
jno
cli
sub
imul
mov
push
sbb
inc
cmp
aam
repz
jns
ljmp
mov
pusha
int3
jnp
in
mov
add
inc
cmp
pop
cltd
lock
idivb
lea
icebp
mov
cli
js
cmp
jbe
out
xchg
test
test
fnstcw
push
out
cmc
idivb
js
repnz
sti
jns
cmp
ja
call
ret
test
lods
ret
outsl
jl
div
jbe
xchg
jns
repz
jne
cld
jp
xor
xrelease
add
mov
mov
adc
div
ja
mov
hlt
mov
std
jnp
ss
jns
ljmp
mov
mov
scas
lds
repnz
bnd
lea
out
mov
jne
aaa
cmc
jp
xchg
jbe
lock
test
shll
mull
lods
ja
nop
jp
hlt
sbbb
jbe
lds
ss
push
mov
push
lea
icebp
xchg
test
ret
cmp
sbb
jge
icebp
bnd
mov
mov
clc
jbe
cmp
jnp
test
icebp
xchg
test
ret
cmp
sbb
cli
out
andl
ja
jne
aaa
cmc
pop
mov
add
and
je
ret
inc
mov
repnz
in
es
repz
jp
xchg
jbe
lock
stc
ja
cmp
jl
xchg
xacquire
je
ret
jns
cmp
sbb
jns
xchg
jl
out
test
cmpl
jbe
cmp
and
clc
xrelease
xorb
inc
mov
mov
mov
hlt
mov
std
jnp
ss
jns
xchg
jl
out
test
cmpl
jbe
cmp
and
clc
xrelease
xorb
jp
xor
add
test
test
roll
mull
jmp
mov
push
add
jbe
pop
sub
out
mov
jbe
in
ds
mov
cld
cltd
mov
repnz
mov
jge
cmp
jp
out
mov
sub
ret
outsl
sbb
idiv
jbe
out
add
hlt
mov
sub
in
jnp
mov
inc
jae
xchg
mov
negb
push
leave
imull
inc
cmp
sahf
xor
repz
jns
ljmp
mov
pusha
daa
jnp
jmp
mov
sub
jmp
mov
add
leave
inc
ds
add
jbe
out
mov
add
leave
inc
ds
add
jbe
fwait
jno
lret
jle
imul
jge
cmp
cmp
xchg
div
jl
out
add
fdivs
ja
in
jp
fwait
out
mov
sub
pop
jns
out
hlt
mov
push
clc
push
repz
add
jbe
out
mov
add
insb
dec
jl
ds
push
lahf
imul
hlt
cmc
jp
dec
jbe
inc
icebp
mov
and
repnz
shl
dec
jbe
aas
icebp
add
fdivp
jb
hlt
add
jns
jl
dec
out
cld
jp
dec
out
cmp
cmp
js
shl
push
mov
mov
add
jns
xchg
sbbb
inc
jns
fwait
xchg
hlt
sub
hlt
cmc
jp
call
adc
mov
testl
ret
or
mov
cmp
out
cmc
idivb
js
jp
sti
jbe
lret
cmpsl
das
sub
jno
idivb
out
add
jb
loop
in
cmc
test
add
nop
bnd
in
jecxz
enter
rep
enter
inc
sar
fcomi
cmp
ja
cld
jp
sti
out
fnsave
cmc
jae
icebp
jne
loopne
jne
jbe
mov
outsb
jg
and
jae
icebp
out
in
jns
loop
out
fstl
testb
out
jecxz
out
divb
mov
addr16
ret
in
insb
lock
daa
call
data16
cld
gs
clc
std
xchg
test
cmc
idivb
js
stc
repz
mov
and
jae
icebp
out
ffree
ljmp
adc
sub
imul
pop
lret
hlt
imul
outsb
aam
insl
jmp
sub
je
cwtl
jb
insl
pushl
div
loopne
nop
icebp
outsl
in
hlt
and
hlt
fldt
cmc
js
jecxz
jno
jns
ret
outsl
xor
out
je
repnz
cmp
jmp
int
adc
sbb
jb
and
adc
sub
push
repz
mov
and
jae
icebp
out
fnsave
mull
and
sub
pop
imull
jp
dec
cli
pop
or
insl
ficompl
jl
and
fcomip
or
adc
mov
shl
or
fwait
cld
std
js
std
jnp
cmc
ja
int3
add
cmpsb
sub
jp
repz
lcall
jo
shrb
mov
aad
ja
in
repz
jp
jl
sarb
push
icebp
div
ja
icebp
xor
jl
sarb
xchg
icebp
div
ja
rclb
pop
icebp
and
hlt
mulb
adc
hlt
jg
add
cmp
jnp
cmc
repz
repnz
mov
ljmp
insl
iret
repnz
std
sahf
cmc
lock
jns
jl
idivb
leave
jnp
out
scas
and
pop
lret
jl
mov
mov
mov
ds
out
adc
repz
add
or
fnstsw
aad
jo
imulb
lods
add
daa
mov
jle
repnz
repnz
test
movsl
pop
cli
sub
jg
in
repnz
insl
jmp
mov
jo
icebp
div
insl
icebp
loop
fbld
jb
icebp
repnz
repz
fisubl
enter
hlt
cmc
jno
fiadds
sub
pop
iret
outsl
repz
fisubl
enter
hlt
cmc
jno
call
jge
icebp
repnz
repz
jp
pushl
div
xorb
pop
xorl
jb
push
add
jbe
ret
jns
ret
mul
ja
jp
mov
outsb
cmc
ja
les
ret
out
jge
mov
jae
icebp
pop
xor
jae
icebp
outsl
loopne
and
hlt
mov
fadd
jecxz
adc
lock
testb
test
in
and
outsl
scas
sub
repz
push
subb
mov
cmc
or
imul
outsb
rorl
hlt
imul
outsb
mov
insl
sti
repnz
bnd
jns
lret
adc
or
adc
or
jnp
cmc
ja
cld
jp
sti
out
jge
mov
and
mov
in
lods
push
push
mov
je
repz
std
jns
cmc
ja
cld
jp
sti
out
jge
mov
and
adc
cmp
or
xchg
les
ret
out
lock
mov
push
jnp
aad
jle
mov
je
repnz
rolb
mov
loop
mov
add
sbb
clc
xchg
es
cmc
divb
ljmp
mov
outsl
xchg
repz
insb
lock
fisubs
mov
fsubl
ret
outsl
xor
clc
insb
lock
fisubs
enter
sbb
repnz
sub
hlt
cmc
cwtl
enter
hlt
imul
outsb
aam
insl
ret
repnz
push
idiv
xchg
out
cmc
testb
lods
in
fisubl
ds
hlt
cmc
idivb
frstor
hlt
cmc
idivb
loope
or
jo
xor
js
push
divb
pop
jns
add
mov
js
jmp
add
ja
cli
clc
push
imull
add
imul
outsb
xchg
repz
imulb
repnz
bnd
call
lods
sti
hlt
or
fwait
outsb
mov
jno
fiaddl
or
repnz
repnz
inc
xor
leave
add
imul
outsb
leave
repz
imulb
repnz
loope
hlt
cmc
jp
lret
je
iret
clc
jp
rcl
jns
lds
div
bnd
shll
jle
ret
outsl
ja
div
repnz
iret
shl
rcl
jnp
int
hlt
test
shl
ja
sar
jnp
int
inc
cmp
jns
int
js
shll
hlt
sub
sar
jbe
iret
clc
jp
shl
ja
sar
jnp
inc
in
repz
jp
jl
into
ret
jns
push
repnz
repnz
ja
bnd
jnp
jbe
daa
inc
add
pop
jbe
js
repnz
ret
daa
lret
je
in
repz
jp
rol
ja
jns
jnp
xor
js
lcall
rcrl
xor
icebp
bnd
sar
jl
push
out
hlt
cmc
jnp
je
iret
sarb
cmc
ja
dec
lock
jbe
jbe
rol
jl
into
idivl
jle
icebp
bnd
jp
jp
into
mov
jbe
ja
cmc
idivb
repz
rol
jbe
iret
clc
jp
in
bnd
stos
icebp
xor
mov
into
aaa
inc
repz
repz
mov
icebp
bnd
rcr
js
pop
sbb
ror
outsl
fwait
hlt
popa
xor
pop
pop
cmp
lret
aas
push
fdivrp
pop
into
fcomi
popa
rcr
repnz
iret
fdivrl
shll
mull
into
hlt
pusha
rcl
clc
pop
into
iret
jns
shrb
repnz
ja
shlb
js
rcr
clc
xorl
int
jp
popa
les
idivl
repnz
int
idivl
ret
jns
sar
jbe
xchg
cmc
idivb
mov
rcrb
js
rol
jl
into
mov
mov
jl
into
idivl
sar
jbe
xchg
cmc
idiv
sbb
jae
lock
repnz
cltd
enter
jne
rol
jnp
int
js
sar
jl
data16
hlt
cmc
jnp
in
cli
adc
or
.byte
lods
lret
hlt
.byte
inc
outsl
aaa
xor
cmp
gs
gs
xor
dec
gs
imul
addr16
aaa
je
imul
cmp
push
outsl
je
push
jp
xor
aaa
cmp
ja
add
imul
xor
outsb
imul
add
popa
jae
xor
xor
xor
add
insb
jae
fs
fs
xor
xor
outsb
outsl
xor
add
je
xor
xor
xor
xor
jb
xor
je
xor
inc
jne
xor
bound
ss
imul
cmp
xor
push
jne
jae
xor
aaa
jo
outsb
fs
imul
bound
jae
data16
xor
jo
popa
jae
pop
xor
fs
ja
xor
xor
xor
cmp
xor
jb
gs
ss
jae
bound
insl
imul
gs
jae
bound
xor
cmp
add
jo
arpl
aaa
xor
outsl
jo
xor
bound
xor
cmp
popa
insb
gs
popa
jae
add
jae
xor
xor
xor
ss
data16
insb
xor
imul
jae
xor
jns
outsb
jae
xor
outsb
add
je
xor
xor
jae
xor
ss
xor
push
add
jns
je
imul
cmp
cmp
xor
add
add
popa
add
xor
cmp
xor
cmp
add
inc
add
jne
jb
xor
cmp
xor
xor
bound
popa
add
data16
popa
add
add
add
add
add
add
add
add
add
add
imul
outsl
add
je
cmp
xor
cmp
xor
xor
add
inc
add
je
xor
xor
cmp
xor
add
add
add
add
add
cmp
add
add
bound
jae
xor
aaa
add
add
add
add
add
imul
add
jb
add
inc
add
add
add
add
add
imul
xor
jo
popa
add
add
add
add
add
add
add
add
dec
add
je
xor
outsl
add
je
outsl
add
jae
cmp
imul
jne
insl
add
add
add
add
add
add
add
add
jns
imul
add
add
add
outsl
add
add
push
add
add
add
add
add
add
imul
ja
outsb
add
xor
cmp
xor
dec
outsl
js
cmp
jo
ja
xor
insl
imul
jo
js
jne
popa
xor
jb
cmp
arpl
xor
popa
fs
xor
xor
jo
popa
outsl
push
jb
insl
jae
jne
outsb
jne
add
inc
add
mov
add
rorb
mov
clc
mov
loopne
jns
mov
divl
aam
cmp
clc
cmp
or
mov
clc
mov
loopne
jns
mov
divl
ljmp
clc
scas
sbb
mov
clc
mov
aam
jp
jne
xchg
clc
cmp
mov
dec
mov
clc
xchg
clc
mov
clc
jp
aam
jbe
xchg
clc
ja
scas
cmp
leave
dec
mov
clc
mov
xchg
clc
mov
clc
jp
ljmp
clc
scas
dec
mov
mov
imul
xchg
clc
fcomip
mov
aam
jp
loop
jne
xchg
clc
ja
scas
pop
mov
mov
jnp
jp
clc
jmp
testl
clc
xchg
clc
jbe
scas
insl
mov
mov
mov
notl
clc
ret
clc
jp
fcomip
jne
xchg
clc
cmp
mov
fwait
mov
notl
clc
clc
jp
jne
xchg
clc
ja
scas
lea
fwait
mov
clc
mov
testl
clc
scas
popf
mov
mov
mov
mov
clc
xchg
clc
fdiv
clc
ret
clc
clc
fdivp
jl
xchg
clc
jbe
scas
mov
leave
lret
mov
clc
add
pusha
test
inc
add
inc
add
inc
add
add
xchg
inc
add
xchg
inc
add
mov
add
inc
add
add
mov
add
lds
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
pop
cmpsl
pushl
inc
add
xor
popf
nop
and
add
inc
add
int
push
cli
xchg
inc
add
test
popfw
lock
mov
inc
add
daa
lods
ucomiss
test
adc
call
mov
adc
scas
cmp
sbb
pop
mov
push
add
add
jae
pop
cmpsl
ljmp
cli
call
add
add
inc
add
push
or
add
add
mov
fiadds
pop
xchg
sub
add
add
fwait
xchg
pop
add
pop
or
clc
xchg
clc
sar
clc
lock
hlt
divl
ljmp
clc
mov
lcall
xchg
inc
add
cmp
pop
add
add
data16
imul
pop
add
add
jo
pop
add
imul
add
add
push
add
je
jae
pop
add
imul
imul
arpl
outsl
add
jae
je
add
add
je
imul
pop
add
add
add
add
js
add
add
inc
and
jo
arpl
add
add
pop
jno
incl
popf
hlt
addb
repz
aad
call
sbbl
jl
stos
decl
subb
data16
add
add
add
add
dec
add
dec
add
pop
add
add
ja
add
add
add
inc
add
ja
ja
add
insl
add
add
add
jae
das
add
jb
outsl
add
imul
add
push
add
add
outsl
add
jns
cmp
add
xor
xor
cmp
xor
xor
xor
xor
xor
add
add
add
push
loop
incl
repnz
xor
cmp
xor
aaa
xor
xor
add
add
arpl
jb
je
insl
jo
jb
jb
add
je
gs
and
and
jb
popa
insb
add
add
xor
xor
add
add
adc
div
neg
mul
div
not
negl
clc
add
out
neg
negl
clc
loopne
fdivp
lock
negl
clc
add
fdivp
fcomi
xlat
testl
neg
notl
add
add
add
inc
mov
jbe
xchg
mov
mov
push
mov
sub
sub
inc
mov
inc
mov
inc
mov
and
fsts
mov
xchg
lock
or
cld
and
mov
sbb
icebp
imul
lahf
and
add
lret
mov
in
sub
in
loope
bound
add
add
add
lret
add
push
add
mov
add
jge
incl
aaa
and
mov
gs
push
mov
add
xor
dec
jns
jae
xor
cmp
push
xor
fs
outsl
outsl
je
popa
ja
add
add
xor
xor
popa
popa
jb
gs
insb
xor
ss
jne
insb
aaa
insl
jne
xor
insl
gs
jae
imul
push
popa
jo
outsl
imul
xor
cmp
xor
ja
xor
cmp
cmp
aaa
addr16
xor
push
popa
outsb
xor
cmp
push
xor
outsl
outsl
jp
xor
aaa
xor
insl
jo
xor
aaa
jo
jne
xor
jbe
gs
cmp
xor
inc
js
gs
jae
xor
je
fs
xor
outsl
jae
xor
imul
aaa
cmp
xor
add
pop
gs
xor
xor
push
add
outsl
fs
bound
popa
add
xor
xor
push
xor
push
imul
jae
add
outsl
jae
xor
imul
add
push
imul
aaa
xor
aaa
cmp
xor
xor
bound
jae
bound
jae
xor
add
jo
popa
push
aaa
xor
add
outsb
xor
push
push
imul
xor
xor
jns
je
gs
xor
popa
popa
jae
imul
xor
xor
je
xor
popa
outsb
xor
xor
xor
push
outsl
jae
aaa
xor
popa
ja
imul
jne
cmp
cmp
cmp
inc
xor
cmp
cmp
outsb
xor
cmp
xor
xor
xor
gs
jo
xor
inc
jne
outsb
push
je
cmp
xor
xor
aaa
xor
outsb
xor
jo
xor
xor
cmp
ss
xor
xor
cmp
cmp
xor
xor
xor
xor
xor
cmp
ss
outsl
fs
xor
bound
jae
imul
inc
gs
jae
aaa
cmp
bound
imul
insb
insb
aaa
popa
jb
jae
xor
jns
xor
xor
imul
xor
push
imul
imul
outsl
insb
insb
gs
bound
xor
inc
push
push
in
xchg
into
mov
inc
ret
addl
add
inc
cmp
imul
imul
jo
push
jb
popa
insb
jo,pn
bound
add
add
pushf
outsl
mov
add
add
add
add
in
add
in
add
adcb
xchg
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
add
add
add
lock
add
add
add
add
add
add
fadd
add
in
add
in
ret
xchg
aas
add
xlat
push
add
cli
ret
pop
ret
add
add
add
jae
insb
outsl
outsb
cs
add
inc
push
push
inc
pop
push
dec
inc
inc
push
inc
inc
pop
inc
pop
dec
push
gs
outsb
je
popa
insb
inc
jb
popa
jns
inc
push
dec
add
inc
dec
dec
push
push
push
push
inc
push
dec
dec
inc
dec
inc
inc
pop
inc
pop
dec
push
gs
outsb
je
popa
insb
inc
jb
popa
jns
inc
push
dec
add
adc
push
inc
adc
test
adc
clc
ja
add
arpl
add
adc
test
add
pop
adc
movq
add
and
add
jne
add
js
add
adc
pop
xor
add
adc
xchg
jns
add
xor
add
add
pop
adc
jbe
adc
ficompl
adc
adc
cmp
add
inc
adc
clc
dec
adc
push
inc
adc
js
adc
scas
sub
or
loope
jbe
stc
roll
add
add
add
in
enter
mov
ret
cli
fnstenv
cmc
std
sarl
xlat
cmc
ljmp
repz
adc
pop
lock
jecxz
ljmp
repz
fdiv
out
sub
sbb
sub
sub
cmp
shll
lret
loop
hlt
fnstcw
lock
cli
rcr
push
stc
leave
clc
ror
into
repnz
loop
sbb
call
rcr
adc
out
incb
icebp
testb
sub
or
pop
sbb
and
and
and
mov
lds
xabort
mov
add
cli
ret
mov
imul
fdivr
int
adc
call
int
rclb
adc
in
jmp
jmp
out
push
adc
adc
adc
jmp
add
fidivrs
loopne
in
jmp
scas
lret
out
cmc
shl
int
or
loope
dec
clc
ljmp
loop
jmp
adc
adc
paddw
fcmovnbe
cli
or
in
cmc
stc
add
add
pop
mull
lock
adc
fmulp
mov
mov
cmc
out
ret
mov
out
int3
mov
iret
mov
fisttpll
add
or
jecxz
fldl
clc
adc
aam
pop
testl
and
adc
or
ljmp
adc
xor
imul
out
lock
repz
in
jmp
icebp
cli
mov
add
rcl
lret
dec
push
in
in
adc
add
jecxz
out
clc
or
sbb
pop
testb
add
fistl
cld
add
pop
sbb
add
and
sbb
out
shl
mov
in
shll
stc
mov
int3
dec
lock
frndint
mov
loopne
bnd
syscall
repnz
xlat
out
sbb
sbb
loopne
repz
sti
in
add
out
xor
and
ss
scas
mov
jmp
lock
fmulp
fbstp
repz
add
lret
in
add
jecxz
add
pop
sbb
in
out
loop
clc
es
in
out
out
femms
sub
ret
mov
ret
enter
loop
mov
leave
fnstcw
out
add
sti
sar
or
out
sbb
iret
push
xlat
pop
in
out
sbb
adc
sbb
add
sbb
adc
add
enter
stos
shlb
lods
mov
out
mov
neg
mul
flds
loope
lock
iret
call
aam
adc
clc
add
loop
add
push
sub
sbb
and
xor
adc
adc
loope
int
leave
scas
lds
mov
mov
int3
not
mov
incl
cmc
in
stc
int3
loope
leave
rcl
int
icebp
sbb
repnz
div
mov
and
std
out
push
es
and
or
sbb
adc
sub
syscall
or
rol
mov
out
cmc
mov
aad
mov
mov
fildl
repz
jecxz
stc
lret
add
lock
jmp
sbb
iret
pop
out
cli
stc
add
add
loope
fists
adc
sbb
push
incl
repnz
and
stos
fcmovu
les
shl
enter
in
lret
mov
mov
aam
add
fdivr
int
pop
iret
add
add
aam
adc
pop
fsubrp
or
fsubl
sbb
sub
in
add
std
pop
adc
pop
add
xlat
in
stos
fdivrl
in
repz
not
mov
mov
or
push
clc
add
out
add
or
in
rorb
or
sbb
sbb
fucomip
cld
out
loope
std
std
sub
call
and
or
notl
stos
lods
mov
shl
leave
cli
lret
into
xlat
jmp
std
shl
loope
mov
movl
repz
ljmp
and
jmp
fucomp
fucomp
incb
ljmp
sti
repnz
and
add
call
hlt
ljmp
hlt
ljmp
call
loopne
enter
pop
loope
loope
repnz
pop
div
in
jmp
fcmovu
loop
sbb
repnz
ljmp
sub
and
or
loope
lret
call
repz
sti
iret
sar
iret
add
fsubp
jmp
ffreep
add
fldl
fmulp
add
fcmovnbe
sbb
hlt
clc
sbb
sbb
daa
pop
add
pop
sbb
and
add
icebp
and
in
call
bnd
jmp
lret
aam
hlt
sar
rorl
fcomp
movb
int3
adc
into
cld
vpmullw
adc
loop
or
push
push
in
icebp
sbb
std
sbb
jecxz
in
call
pop
or
adc
ss
enter
out
icebp
lret
jmp
iret
enter
hlt
fxam
fcmovnu
loop
enter
fcomp
in
fmulp
fucom
adc
in
sbb
out
maskmovq
sbb
loopne
and
sbb
push
or
out
sbb
push
sub
hlt
lock
stos
loope
loop
into
shr
in
jecxz
repnz
lret
cld
mov
sti
call
fcomi
shl
out
mul
out
testl
fcomp
and
sbb
cld
sub
cli
push
add
icebp
adc
adc
scas
lock
int3
mov
loopne
neg
mov
fucomi
aam
mov
in
shr
add
leave
or
add
imul
loope
jecxz
ljmp
sbb
fstpl
and
cld
in
and
or
es
ror
in
call
in
scas
mov
int3
in
call
stc
add
cld
call
add
fmulp
adc
jmp
pop
jmp
xlat
std
cli
adc
adc
stc
push
add
cli
push
in
or
xor
out
xor
pop
adc
mov
ljmp
mov
stc
mov
push
mov
hlt
or
ljmp
icebp
bswap
sbb
ljmp
cld
out
sbb
and
out
ljmp
or
pop
adc
or
into
stos
ret
mov
lods
clc
clc
jmp
lret
in
cli
cld
out
div
cli
lret
fmuls
into
hlt
jmp
iret
rolb
adc
or
or
stc
repnz
adc
in
push
push
sbb
in
in
and
add
out
das
or
in
int
mov
in
mov
cli
cli
aad
fstp
loop
xlat
add
call
hlt
push
adc
adc
pop
in
jmp
in
sbb
loopne
jmp
clc
cld
pop
idiv
xor
add
adc
push
or
fsubr
mov
leave
mov
rcl
shl
jmp
scas
fistpll
loope
clc
iret
roll
aad
add
repz
hlt
out
testb
shl
clc
sti
std
jmp
adc
clc
push
ljmp
or
cld
and
call
hlt
in
out
imull
lret
int3
lret
in
vaddsubps
lret
hlt
ljmp
loope
out
in
hlt
clc
or
int
int
rorl
sti
cld
or
adc
add
in
adc
adc
sub
sbb
icebp
and
adc
int3
ret
out
jmp
clc
shl
sti
fsubr
rcr
loopne
fiadds
enter
ret
add
adc
call
add
sti
xlat
std
out
sbb
sbb
cli
or
fisttps
and
add
and
and
cld
and
adc
sub
mov
enter
cmc
in
jmp
lret
std
lret
repz
out
out
loope
loop
movl
lret
adc
add
in
loope
repz
pop
es
lcall
cmc
in
clc
and
push
xor
jecxz
mov
mov
mov
iret
fdiv
fnstenv
fucom
out
loopne
xlat
add
push
or
imul
lret
jmp
xlat
in
adc
or
add
add
push
in
lcall
out
xor
and
lods
ror
lock
shll
mov
lock
add
cmc
sti
lret
or
rorl
adc
in
push
aad
in
adc
sti
or
negl
in
out
clc
add
out
and
loop
cs
or
or
adc
jecxz
ljmp
ljmp
mov
out
add
pop
or
lret
pop
push
or
or
hlt
adc
jecxz
out
cld
out
cld
loope
fiadds
sub
and
push
cmp
lods
test
mov
out
in
mov
fadd
mov
into
loope
mov
stc
neg
fiaddl
jecxz
repz
int3
enter
int3
adc
fucomi
lock
cld
add
cmc
add
das
or
icebp
sub
cld
and
sbb
shll
icebp
mov
dec
stc
loopne
ret
cld
fscale
test
lds
fucomip
adc
push
int3
jmp
clc
xlat
push
out
adc
aam
out
and
testb
and
add
incl
out
or
and
into
scas
ret
ret
fadd
shr
repz
rcl
mov
stc
aam
ljmp
fcomi
or
dec
or
add
push
lock
adc
aad
push
sbb
loop
hlt
es
lock
pop
pop
cli
out
repnz
icebp
sub
adc
mov
lock
fsubr
out
lret
ljmp
or
xlat
loopne
add
out
repnz
lret
or
or
push
adc
adc
adc
jecxz
call
ljmp
add
add
rcl
test
in
fidivl
mov
push
out
ljmp
fucomp
adc
lret
loopne
fldz
adc
stc
fmull
decb
jecxz
and
and
jmp
push
cs
push
xor
xor
loope
shl
test
cmc
in
sti
out
int
icebp
in
loop
add
loopne
fld
or
stc
or
icebp
loop
hlt
or
add
fistl
lock
lock
sub
or
negb
and
or
push
adc
and
mov
mov
test
cld
cli
xlat
out
mov
mov
or
in
out
in
jecxz
cld
or
add
xlat
in
hlt
fimull
out
movhps
cli
loopne
and
add
push
and
add
jmp
jmp
xor
ret
lods
mov
stc
ret
leave
stc
out
fdecstp
mul
fistpll
add
in
iret
std
or
in
ficoms
into
push
aam
cli
cli
adc
adc
adc
adc
sbb
and
add
jmp
push
xor
daa
in
icebp
imulb
iret
lods
fsub
enter
hlt
not
cmc
out
icebp
mov
lock
loop
xlat
icebp
iret
not
not
or
out
in
fldl2e
int
std
or
jmp
adc
clc
icebp
in
clc
daa
push
cmc
push
pop
push
jmp
or
xor
push
sub
hlt
movsl
call
stos
shl
hlt
loope
in
int3
mov
mov
loop
enter
enter
into
add
or
push
out
aam
shl
jmp
push
sbb
adc
jecxz
cmc
out
sub
cs
adc
in
lock
mov
mov
add
les
mov
or
loop
loope
out
loop
adc
add
cli
lock
fcomp
out
cld
sbb
es
add
cld
sbb
and
das
mov
aam
icebp
rcl
mov
lret
cld
sti
neg
sar
add
loope
add
jecxz
add
add
or
iret
psubsw
sbb
fdivr
div
out
hlt
and
add
clc
std
or
or
sub
jmp
xor
loop
lret
lods
int
mov
jecxz
icebp
out
ljmp
icebp
lock
sti
cmc
or
testb
fldl
or
in
sbb
rcrb
fimull
cli
rcl
cmc
adc
loopne
sbb
pop
adc
sbb
jmp
out
push
jmp
sub
in
loop
into
mov
leave
lods
lods
enter
rol
out
mov
shl
lock
stc
jecxz
hlt
or
jmp
fxch
idiv
in
or
iret
or
out
adc
adc
cli
adc
repnz
add
or
loope
push
clc
paddd
jmp
sub
sub
pop
fucomi
jecxz
jecxz
cmc
imul
stc
clc
in
out
fdivp
xlat
into
lock
aam
fsub
add
add
in
or
add
or
loop
adc
or
fcomi
pop
or
fldenv
fcomip
sti
std
sub
and
sbb
and
or
push
sub
int
shlb
rcl
in
in
shr
mov
add
lock
fadd
enter
in
iret
std
jmp
add
call
icebp
call
in
repz
in
loope
add
sbb
jmp
repz
sub
stos
in
mov
shl
mov
lret
std
icebp
add
rcl
in
aam
out
add
add
fisttpll
add
rcl
repz
in
in
or
loope
std
add
add
in
cs
sub
xor
sbb
mov
ljmp
mov
rcr
fdivr
out
sar
in
fcom
ret
out
jecxz
or
int
fmul
decl
pop
rorb
shr
icebp
or
lock
fistps
in
sbb
out
sbb
add
pop
clc
and
add
push
aaa
adc
lods
sarl
mov
enter
mov
fisttpll
sti
lret
loopne
fcmove
push
in
les
adc
in
ljmp
loop
add
push
and
call
or
out
repz
icebp
jmp
lock
enter
fsubr
stc
cld
icebp
add
loopne
add
bswap
faddl
jecxz
push
pop
out
or
add
sti
push
sbb
clc
and
and
ljmp
adc
mov
mov
mov
fcom
shl
mov
hlt
shr
cld
cli
loopne
std
fdivrp
ret
ffreep
jmp
adc
loop
jmp
out
adc
repz
adc
out
adc
hlt
or
add
or
sub
add
mov
into
cmc
mov
clc
lret
ljmp
out
ret
loope
std
fucomi
add
push
or
out
repz
or
repnz
lock
and
sbb
pop
adc
sbb
in
jmp
adc
add
fcmove
stos
mov
shrb
jmp
sti
lret
fdiv
xlat
fnsave
call
int3
jmp
cli
fsts
int3
rcr
adc
xlat
out
in
or
fiadds
add
add
and
das
and
sub
pop
sub
add
test
shr
out
mov
leave
in
fdiv
mov
loope
test
fcomp
movb
lret
ljmp
aad
add
shl
or
push
add
fcompl
out
and
in
and
cs
out
xor
xor
adc
xlat
loopne
lret
ret
in
in
test
mul
shl
mov
call
add
in
fst
lret
aam
or
or
sbb
xlat
sbb
sbb
adc
add
mulb
sbb
call
or
pop
adc
aaa
into
ljmp
mov
mov
xlat
mov
repz
in
aam
in
repnz
in
loope
int3
lock
aam
or
in
lock
fsubr
adc
xlat
sbb
sti
adc
sbb
pop
sbb
repnz
sbb
xor
adc
in
shr
imulb
out
lock
hlt
into
stc
add
ljmp
leave
cli
lret
in
adc
loop
repnz
or
sbb
clc
push
std
in
push
add
sub
add
sub
or
adc
mov
rcl
int3
mov
leave
jmp
leave
cld
faddl
repnz
hlt
add
out
out
out
in
leave
icebp
jecxz
or
out
or
sbb
or
adc
es
or
pop
es
push
jmp
adc
xor
mov
scas
ljmp
int
call
hlt
cli
stc
loop
mov
stc
loope
pop
jmp
in
aad
stc
call
icebp
adc
decl
adc
or
out
por
icebp
jmp
hlt
add
cmpsl
xlat
rcr
ror
mov
mov
fcmovbe
fcomi
cmc
ror
mov
div
add
stc
decb
jecxz
in
leave
iret
fxch
lock
in
rclb
out
rcr
flds
in
add
add
stc
loope
or
sbb
daa
or
lock
or
movsl
fsubrp
lods
scas
repnz
repnz
mov
ljmp
lret
sti
pop
aam
aam
in
add
in
ljmp
hlt
stc
adc
or
or
call
adc
cmc
sub
in
daa
and
xor
add
ss
mov
out
ret
mov
in
mov
fsubrl
shr
fdiv
sarl
out
add
in
push
or
rorb
ljmp
in
adc
sti
add
loope
jmp
in
pop
or
adc
test
rcl
shl
div
mov
hlt
repnz
leave
loope
rcr
ret
jecxz
add
testb
add
into
add
aad
or
call
cld
jmp
and
icebp
push
std
pop
pop
cld
and
sti
and
add
lock
jmp
loope
loopne
ljmp
jmp
out
aad
rcl
add
mov
rol
push
testl
adc
cmc
adc
in
stc
icebp
fsin
clc
sbb
sbb
and
stc
adc
cld
or
jmp
mov
cmc
scas
ret
loop
cld
mov
out
jmp
in
add
les
push
out
lock
fiadds
call
push
call
loope
cli
add
sub
sbb
and
daa
jmp
and
incb
into
mov
int
in
fadd
ljmp
repz
mov
lret
icebp
sti
or
aad
add
stc
adc
push
adc
sbb
stc
and
pop
adc
add
or
or
cs
sbb
fmulp
out
shl
in
jmp
lret
int3
iret
xlat
stc
repnz
fcmove
jmp
aam
xlat
cmc
cld
out
push
add
adc
shr
call
adc
sbb
sbb
in
sub
adc
lock
out
mov
in
les
mov
rcl
out
repnz
shr
add
jmp
incl
out
int3
aad
rcl
adc
fcmovu
std
in
adc
sbb
sbb
out
fists
sbb
and
cli
stc
adc
and
in
sub
mov
fsubrs
loop
sar
lods
sti
rcr
mov
rcr
add
fcomip
lock
testb
in
loopne
or
pop
or
iret
add
or
or
iret
ljmp
add
sbb
cmc
add
sti
sub
out
sub
out
cs
sub
xor
in
lock
out
clc
in
out
cld
lret
jmp
mov
cli
stc
mov
lret
out
add
cmc
ror
call
adc
push
cli
in
unpcklps
and
out
or
add
adc
xor
and
out
fldt
mov
jecxz
repz
lock
fsub
or
push
add
fucom
repnz
sbb
ljmp
add
out
or
in
sbb
sti
add
pop
and
into
test
loopne
stos
xlat
iret
stc
rol
out
icebp
in
cli
aam
lret
into
cld
loop
ret
out
or
loop
std
call
or
loop
negb
xlat
adc
loopne
push
adc
push
out
testb
idiv
sub
adc
mov
call
ljmp
in
enter
into
clc
stc
test
call
int3
rorb
out
call
rcll
out
in
out
add
push
adc
cld
ljmp
or
shr
mov
call
int3
mov
repz
repnz
mov
xlat
test
incb
add
cmc
or
jmp
xlat
adc
icebp
fsts
jmp
idiv
fnstsw
adc
icebp
and
jmp
xor
pop
adc
scas
int
jecxz
faddp
in
in
fmul
mov
lret
add
out
std
leave
testl
les
in
adc
int3
adc
paddusb
sbb
cld
in
clc
push
push
fstl
and
out
and
adc
and
xor
mov
loope
jecxz
int3
fdivp
iret
mov
loop
loope
out
add
call
aad
repnz
or
or
cld
jmp
sti
push
pop
add
cli
loop
and
or
movaps
and
and
ljmp
in
leave
lret
jmp
fsubr
repz
shl
mov
jmp
add
lret
adc
adc
out
adc
push
out
or
add
adc
and
es
xor
scas
rcr
out
ffreep
lret
into
jmp
loop
int
jecxz
mov
int3
inc
pop
loop
std
maskmovq
testl
fst
or
in
in
cli
sbb
jecxz
pop
sub
hlt
daa
jecxz
and
sbb
xor
adc
test
stos
lods
loopne
fmul
sti
iret
fcmovnu
lock
add
loope
clc
repnz
adc
into
adc
loop
push
repz
or
add
sbb
faddl
push
stc
daa
adc
cs
add
jmp
and
ffree
mov
ret
icebp
mov
mov
out
xlat
jmp
std
out
fmul
clc
out
mov
cld
adc
out
or
push
loop
cld
push
ljmp
and
std
and
call
cs
adc
loope
loop
out
int3
repz
icebp
out
in
mov
neg
fst
mov
lock
hlt
jmp
add
ljmp
shl
call
fucomip
in
add
notb
sub
jmp
add
sti
xor
adc
sub
icebp
lret
lret
shll
mov
mov
jmp
jmp
or
call
cmc
shl
adc
add
pop
adc
lock
and
sub
adc
or
cs
fld
bnd
mov
out
idiv
int
mov
jmp
std
repz
sti
xlat
repnz
loope
add
ret
lret
sar
aam
or
clc
out
pop
negl
loopne
and
in
push
adc
pop
jmp
cld
add
icebp
daa
shl
out
lret
loop
mov
shl
ret
mov
mov
shl
or
fxch
add
rorb
psrld
notl
icebp
icebp
idiv
ficompl
std
ud0
fcomip
adc
add
sbb
pop
sub
out
push
adc
lret
in
mov
into
loop
ror
mov
idivl
add
call
incb
rolb
pop
leave
push
adc
sti
sbb
cmc
lock
adc
cli
pop
fistl
sbb
add
add
or
adc
shlb
les
mov
mov
mov
out
ret
push
or
ljmp
call
fmull
fstpl
sub
ljmp
and
decb
sub
into
jmp
rcl
fmul
mov
rcl
fstpt
mov
pop
lret
jmp
xlat
in
in
add
adc
jmp
push
loopne
adc
out
sbb
or
and
sub
cli
or
lock
lock
cmpsl
mov
into
aam
iret
call
aam
sarb
cmc
fdivr
stc
loop
test
lret
adc
adc
add
shl
adc
sbb
fsub
loopne
add
decl
loop
in
out
pop
sbb
and
and
mov
movsl
shrl
aam
repnz
div
clc
loop
add
repz
repnz
loope
add
jmp
repz
repz
adc
pop
sbb
and
and
and
add
out
std
xor
lock
and
mov
ret
mov
mov
iret
mov
cld
clc
not
mov
rcl
fdivrp
aam
ret
add
jecxz
into
out
adc
not
or
or
or
call
loope
loope
cld
and
loop
add
sub
cli
in
add
sub
lock
lret
lods
mov
ljmp
cmc
mov
mov
shl
pop
fcomip
decb
std
jecxz
ljmp
out
or
push
in
and
add
xor
xor
ror
stos
jecxz
cmc
leave
out
int
mov
out
out
leave
fiaddl
loop
or
jecxz
push
int3
or
xlat
jmp
add
loopne
adc
lock
daa
adc
sub
cmc
sbb
and
sub
adc
lret
leave
lret
into
int3
fmulp
in
shl
test
leave
fcomp
rcr
mov
stc
fcmovnu
repz
fldl
jecxz
rolb
icebp
call
add
cmc
call
adc
push
loopne
push
and
lock
testl
in
out
adc
das
pop
jmp
scas
lods
mov
ljmp
out
fcmovnu
ret
repnz
mul
jmp
loop
sti
lock
pop
iret
into
iret
sbb
idiv
adc
or
out
sbb
out
and
sbb
out
fistps
push
or
xor
movups
jmp
jecxz
mov
sarb
mov
add
add
aad
out
jmp
or
filds
loop
adc
push
in
call
repnz
repz
pop
daa
and
push
in
or
lock
out
sub
lds
in
fldln2
call
repnz
mov
sar
or
neg
in
leave
adc
fucomp
in
xlat
adc
adc
push
or
ficoml
sbb
push
sbb
es
pop
or
sub
in
jecxz
loope
out
scas
mov
in
mov
out
fldl
std
add
sar
jecxz
loope
loope
std
or
fisttpl
pminsw
hlt
pop
div
adc
lock
hlt
sti
aam
push
stc
cli
sbb
add
cmc
in
sbb
or
sbb
shr
call
xlat
mov
int
mov
add
or
pop
add
fisttpll
rorl
out
loope
call
push
fcmovnu
adc
cmc
and
add
add
adc
sub
pop
or
jmp
iret
ret
lock
repnz
ror
lret
out
stc
int3
lret
in
in
femms
fldl
push
adc
sbb
cli
adc
sbb
pop
stc
sub
sbb
add
cmc
or
int3
out
mov
shr
mov
ror
mul
add
clc
hlt
add
add
enter
add
adc
call
out
repnz
incb
in
clc
cmc
in
push
stc
idiv
or
icebp
pop
out
or
add
repnz
mov
rol
mov
mov
mov
incl
loopne
stc
fildl
clc
into
in
shl
add
or
loope
rorl
repz
out
and
add
sbb
fsqrt
adc
push
jmp
sbb
sub
push
out
ljmp
divb
stos
fucomp
int
shll
fnstsw
into
shl
loopne
fmul
or
push
lock
in
add
adc
aam
icebp
in
repnz
loopne
fdivrp
clc
lock
jecxz
in
or
out
add
sub
fidivs
into
fcmovbe
int
out
stc
mov
test
xlat
call
push
fadds
in
in
out
add
xlat
sbb
cmc
cld
or
fsubr
or
pop
pop
sti
daa
out
sub
sbb
xor
and
xor
notb
out
mov
call
jmp
mov
stc
into
cmc
fcmovnu
jecxz
fdivr
in
or
or
add
add
add
fcomps
xlat
adc
psllw
fistps
nop
and
add
pop
jmp
sbb
pop
ud0
push
out
mov
rol
ret
in
lret
call
jmp
loop
idivl
ret
add
stc
push
fcomip
shr
stc
adc
adc
adc
adc
icebp
aam
neg
sbb
jecxz
call
idiv
lock
repz
mov
into
loopne
mov
lret
scas
fsubrp
ljmp
mul
or
in
in
in
add
add
icebp
push
loop
sbb
stc
adc
adc
in
pop
sbb
and
adc
add
ljmp
add
mov
leave
cmpsl
out
enter
shl
lock
ror
fucomi
loope
in
ret
stc
repnz
ret
fmuls
enter
out
add
lar
add
roll
sbb
cmc
add
sbb
push
or
add
or
ljmp
xlat
aad
in
icebp
mov
xlat
stc
iret
rcl
loope
push
loopne
add
out
push
or
in
sbb
adc
repnz
jmp
adc
in
in
loope
incl
and
mov
in
int
loopne
fcmovbe
cli
clc
repnz
idiv
aam
add
push
or
or
cmc
call
or
shl
out
pop
stc
shl
adc
add
push
sub
or
and
daa
xor
xor
cmpsb
mov
jmp
cli
icebp
mov
rol
in
lock
fimull
fninit
add
in
push
in
fsubp
iret
pminsw
sti
out
sbb
out
jecxz
in
loop
sbb
or
std
cli
out
jmp
sub
call
out
out
lock
ljmp
repz
mov
add
fcmovnb
add
fldl
ljmp
push
call
lock
idiv
and
in
out
pop
sub
pop
adc
es
pop
adc
mov
loope
jmp
mov
mov
jmp
in
or
add
or
flds
or
lret
out
loope
rcl
sti
pop
add
push
adc
repz
sbb
pop
sti
clc
sbb
sub
sti
clts
or
daa
ss
leave
loopne
mov
in
repnz
cli
leave
fcmovnu
shl
loopne
jmp
add
or
int3
shl
or
in
or
adc
sbb
cli
push
rcrl
or
jecxz
push
out
out
sub
sti
out
loop
sub
adc
bnd
mov
scas
xlat
loope
cld
fcmovnu
div
mov
mov
inc
xlat
aam
clc
neg
call
movlps
ljmp
sbb
sti
and
daa
repnz
mulb
add
or
and
icebp
sbb
into
stos
lret
jmp
out
stc
mov
loopne
cli
mov
clc
fucom
ljmp
lock
push
out
or
adc
out
cld
out
add
sub
call
sbb
sub
push
ss
cmpsl
jmp
in
shl
mov
leave
out
cli
test
push
call
jmp
int3
rcl
std
jecxz
out
notb
fucomp
fcomi
stc
and
add
cli
or
sub
sbb
in
add
mov
ljmp
mov
ret
cmc
aam
ror
mov
aam
add
call
add
out
icebp
ljmp
adc
in
jecxz
add
mul
testl
push
jmp
pop
adc
ret
shll
jmp
mov
cli
rcl
test
in
loopne
lret
cli
fxch
adc
in
loope
adc
clc
or
xlat
pop
cmc
pop
sbb
in
adc
add
es
and
sub
add
and
icebp
cmc
rol
in
jmp
ljmp
add
aam
lret
int3
int3
add
lock
fldl
aam
iret
out
stc
push
stc
in
in
std
push
clc
add
loopne
push
in
jmp
daa
cli
add
and
hlt
add
ffreep
iret
shll
in
out
out
cmc
out
ljmp
sar
leave
loopne
jmp
adc
out
adc
add
add
xlat
and
adc
icebp
loopne
and
and
xor
and
mov
mov
int3
cmc
lods
int3
enter
ror
cli
mov
fsub
add
out
clc
std
fmull
repnz
add
aad
out
ljmp
sbb
stc
adc
push
decl
fistps
push
and
sbb
std
repnz
pop
in
ret
loopne
mov
iret
ror
aad
clc
iret
jmp
leave
sti
jmp
cld
sarb
lds
iret
fists
out
in
sbb
fldl2t
adc
pop
in
loope
and
pop
sub
sbb
or
mov
enter
jecxz
ljmp
mov
add
loope
icebp
std
add
in
jmp
jecxz
aam
clc
add
add
push
in
cli
push
repz
adc
repz
sbb
in
sbb
sbb
sbb
add
in
out
cmpsb
in
lds
ret
xlat
jmp
aam
mov
push
cmc
xlat
ffree
lret
jecxz
in
icebp
shl
xlat
not
out
xlat
pop
repnz
fstps
add
and
repz
ljmp
in
pandn
into
fsubrp
int
enter
mov
sar
mov
mov
repz
or
add
push
rclb
shl
adc
loope
adc
push
fdiv
aam
sbb
loop
add
sub
fisttpll
or
out
pop
add
mov
lret
ret
mov
out
into
leave
in
call
hlt
cld
leave
jmp
lret
add
adc
out
std
testl
loop
fistl
push
and
cs
das
and
in
aad
out
iret
mov
shl
jmp
int3
rolb
rolb
fcmovnu
aad
loopne
out
or
iret
shl
in
call
repnz
or
or
add
cmc
ljmp
das
sbb
and
fnstsw
enter
mov
int
sarb
in
in
cld
jecxz
pop
or
into
in
add
add
xlat
stc
sbb
cmc
lock
adc
repnz
in
pop
sub
and
mov
repnz
or
lret
mov
leave
enter
lret
shl
idiv
fmul
mov
add
add
lds
add
add
or
lock
frndint
icebp
rclb
and
fdivr
add
pop
stc
and
sbb
std
sub
xor
sub
sub
loopne
les
loop
in
ror
sti
mov
mov
icebp
mov
out
loop
push
cld
add
add
testb
or
repnz
and
sbb
fdivr
pop
hlt
call
sub
daa
and
mov
ljmp
out
leave
lods
fcmove
fnstsw
stc
out
fucom
add
dec
loope
add
add
or
jmp
fcmovnu
testb
add
add
notb
loop
add
out
daa
daa
sti
or
pop
xor
mov
shr
jmp
into
out
hlt
lret
mov
stc
sar
hlt
ret
out
leave
add
fimull
cld
shl
std
fucom
ljmp
ficoml
adc
fcompl
add
daa
lcall
cli
call
sbb
and
sti
pop
jmp
sub
shl
aam
cmc
lock
jmp
enter
fildl
into
shr
out
mov
out
loope
or
shr
lock
shr
rcr
sbb
sbb
adc
cld
paddb
filds
loope
sbb
std
sbb
xor
adc
enter
repz
ror
fldl2e
div
rolb
clc
std
hlt
lret
in
shr
or
loop
jmp
fcom
out
cld
jmp
sbb
std
or
or
and
or
leave
in
out
stos
xlat
fadd
mov
rcl
in
lock
fmul
into
fst
clc
add
jmp
decb
stc
pmaxub
repnz
push
ror
adc
cld
pop
out
or
sbb
sbb
in
sub
or
or
xor
clc
iret
xlat
fdivl
out
repz
lret
lds
mov
std
add
mov
jmp
add
fdivp
loop
in
or
jmp
repz
hlt
adc
or
es
sti
or
stc
sub
and
repz
repz
ljmp
mov
mov
loop
fcmovb
add
loopne
fadd
jmp
out
sti
shl
pop
icebp
or
adc
call
adc
and
ficoml
repz
pop
adc
cli
or
jmp
or
sti
das
repnz
out
in
lret
jmp
fdecstp
fxch
aam
lock
loopne
push
in
fld
stc
jmp
vcmppd
hlt
adc
aam
or
jecxz
pop
out
pop
adc
pop
sbb
stc
div
in
adc
sub
pop
and
sub
das
loopne
mov
jecxz
rol
shlb
add
cmc
int3
aam
icebp
in
aam
add
in
lret
lret
or
out
call
adc
or
adc
and
pop
push
push
and
and
or
hlt
xor
mov
out
mov
fadd
imul
lret
ljmp
jmp
in
push
cld
call
lds
in
decl
loope
repz
call
adc
aad
lock
out
fstl
or
sub
sub
call
shl
scas
in
enter
mov
mov
add
mov
loop
jmp
incb
lock
push
pop
aam
cli
or
xlat
std
or
or
fdivr
sbb
add
adc
psubsb
and
sbb
in
fdivl
jecxz
mov
out
mov
mov
jmp
icebp
xlat
jecxz
rcr
add
cmc
call
lret
or
std
loop
repnz
icebp
add
adc
rcrl
adc
and
clc
pop
sbb
fisubrs
and
out
sub
add
faddp
f2xm1
lret
jmp
jecxz
jmp
mov
cld
cmc
vcmpgtpd
fsqrt
filds
int
add
pop
add
icebp
xlat
idiv
adc
fistps
sbb
daa
adc
loop
call
sbb
es
enter
xlat
xlat
rcl
int
mov
icebp
fldl
add
out
mov
push
loopne
lock
or
push
std
add
out
fcmovbe
out
or
mov
out
add
pop
out
incl
in
or
sub
push
jmp
xor
pmaxsw
ror
ror
leave
not
in
lock
iret
call
shl
fstpt
or
or
filds
lret
cld
push
adc
int3
in
adc
ficoml
adc
and
and
jmp
sub
pop
or
bswap
stos
mov
iret
enter
fcmovnbe
mov
mov
cli
out
jmp
std
out
int
or
lret
repz
cld
negl
clc
sbb
lock
adc
cli
out
or
cld
sbb
lock
and
mov
lret
stos
shl
mov
cmc
repz
sar
ror
fcmovu
enter
or
out
fistl
add
int
cmc
jecxz
jecxz
or
add
std
adc
sbb
out
fisubl
repz
sbb
and
or
xor
in
int
mov
aam
clc
cld
jmp
mov
rcl
aam
add
test
flds
out
loop
repnz
push
jmp
push
stc
add
pop
sbb
out
add
jmp
adc
sub
ss
ljmp
cmc
scas
mov
int3
clc
mov
loope
xlat
add
rolb
cld
in
leave
or
iret
or
add
in
jmp
repz
add
icebp
sbb
out
adc
sbb
pop
cs
add
scas
lods
shr
shrb
out
lret
lods
out
in
out
rcl
cli
fdivr
fld
aad
out
jecxz
adc
into
add
add
add
fdivr
hlt
or
adc
pop
repz
push
out
or
and
add
xor
nopl
mov
fucomi
xabort
in
mov
shr
iret
add
in
pop
push
lock
add
cld
add
loopne
push
pop
or
aam
in
cmc
aad
lock
repz
and
add
cmc
repnz
and
pop
paddsw
str
adc
jmp
lret
loope
repnz
in
mov
mov
cli
fidivrl
loope
fiadds
fdivr
add
int3
or
add
ljmp
or
fistps
fistpl
fists
sbb
pop
add
add
out
repz
or
mov
mov
jecxz
xlat
cmc
call
cmc
ret
icebp
hlt
flds
les
add
lret
add
lock
invd
call
not
jmp
div
and
and
and
pop
and
add
add
in
adc
mov
shl
jmp
fsubr
leave
mov
mov
stc
mov
loopne
lret
add
in
in
add
push
or
adc
sbb
jmp
pop
and
daa
pop
and
std
jmp
testl
xor
add
xor
stos
fsubrs
aad
mov
mov
repz
hlt
icebp
mov
lock
in
enter
in
out
jmp
or
loop
fsts
sbb
sbb
std
loopne
cmc
push
or
adc
pop
es
push
add
push
repnz
fdivp
in
enter
lret
repz
in
xlat
fcomi
fcmovbe
shl
shl
sar
in
lret
or
or
lock
add
adc
or
or
sbb
and
daa
sbb
jmp
add
and
and
loope
lret
ror
shll
iret
out
in
in
neg
in
loope
rcr
loopne
loope
out
add
fimull
or
pop
sbb
sbb
fdiv
sbb
stc
or
repz
adc
jmp
push
cmc
or
fcmovne
mov
int
leave
cmc
mov
idivl
repnz
out
enter
int
or
int3
add
adc
out
in
lock
adc
in
or
add
prefetch
or
or
es
call
push
cmc
sub
in
ljmp
shrb
out
rolb
fstpt
out
fdivr
cmc
add
lret
adc
call
or
out
pop
std
out
cld
sbb
repnz
or
adc
and
adc
adc
repnz
leave
sarl
shl
icebp
enter
out
in
loope
fndisi(8087
add
mov
std
ljmp
push
or
add
in
jmp
sbb
adc
sbb
adc
sbb
out
sub
out
out
or
out
es
in
sub
ljmp
fsubp
rol
repnz
aam
fnstsw
in
dec
rorb
inc
into
filds
cli
in
fldl
push
out
icebp
add
testb
hlt
in
negb
sbb
adc
loop
es
or
xor
cs
cmc
sub
loopne
mov
icebp
int3
out
lock
out
iret
fucomip
mov
pop
mov
jecxz
lret
add
leave
adc
out
jmp
shl
clc
rcr
call
sbb
sbb
cli
ficomps
sub
sub
adc
xor
xor
add
fldl2t
fmul
mov
in
jmp
int
test
mov
call
dec
idiv
stc
or
call
out
cli
adc
in
shr
in
clc
fcoml
adc
sbb
cmc
out
add
push
adc
pop
add
adc
out
in
cmpsl
mov
jmp
rol
in
clc
sar
jmp
lret
clc
iret
repz
jmp
jecxz
std
or
push
iret
adc
stc
repnz
in
or
or
in
push
in
mov
fcoml
in
es
or
ret
mov
out
mov
clc
ret
lock
mov
cmc
flds
enter
int
lret
out
in
int3
add
or
push
shl
imul
push
ficomps
in
loopne
sbb
std
and
jecxz
sub
and
xor
and
mov
leave
lret
repz
lret
mov
cmc
int3
cmc
add
les
hlt
ljmp
sti
fisttpll
pop
fists
pop
in
cmc
ljmp
add
adc
out
cmc
or
sub
or
icebp
sub
sub
sarb
scas
lock
aad
rcr
mov
mul
xlat
add
fdivrp
loop
cli
iret
adc
in
ljmp
push
pop
push
paddb
loop
sbb
adc
sub
push
pop
sbb
daa
sbb
in
xor
pop
adc
movsl
mov
fmulp
lods
aad
int
mov
mov
aam
rcr
iret
into
mov
pop
aam
fisttpl
or
int
out
into
out
ljmp
cmc
jmp
or
out
decb
sbb
cli
sub
sbb
or
sub
sub
stos
leave
out
ljmp
mov
sar
mov
ret
ret
cld
loopne
aam
hlt
add
jecxz
loope
or
div
repz
icebp
push
xlat
pop
stc
sbb
lock
sub
div
out
out
pop
jmp
and
repz
fmulp
int3
in
mul
mov
mov
rcr
fdiv
cld
div
out
loop
clc
fucomip
or
out
fcoml
adc
push
or
adc
adc
sbb
push
fstl
in
adc
repz
add
and
call
add
add
into
out
fnstcw
ror
mov
out
mov
mov
fyl2xp1
aam
ret
loop
or
repz
jmp
in
push
add
icebp
icebp
out
ljmp
add
add
add
pop
sub
in
and
add
into
in
movsl
stos
shrl
shr
repnz
int3
mov
fcmovnbe
loop
lret
leave
cli
adc
int3
add
call
sbb
adc
or
or
loop
fsubl
adc
cli
sbb
and
sbb
test
loope
int
call
ret
mov
leave
out
add
fdivp
out
add
aad
add
or
decl
shl
cmc
cmc
fcom
rcrb
pop
ficoml
stc
std
sbb
stc
psubusw
fcomi
push
sbb
sub
or
sub
push
adc
fstp
movsb
les
lds
loope
in
sarl
out
cld
loope
jmp
shl
out
aad
iret
in
sbb
ljmp
loopne
clc
add
sub
push
sub
in
or
sub
add
fdivl
leave
neg
ret
enter
lret
fcmovnu
jmp
mov
repz
out
enter
sar
lret
incl
push
adc
add
push
call
in
negl
add
add
and
and
sbb
out
and
or
mov
in
ret
test
aad
mov
in
in
jecxz
add
cmc
ret
int3
or
in
add
faddl
invd
out
push
iret
sbb
or
std
out
adc
adc
fsubl
sbb
and
in
sub
das
adc
shl
mov
call
call
f2xm1
mov
repnz
cmc
hlt
ret
int3
or
out
add
rcl
push
jecxz
fstps
out
testl
sbb
fucomi
or
and
add
add
out
xor
out
icebp
shrb
mov
icebp
in
stc
mov
hlt
rcl
aad
push
fdecstp
mov
in
push
jmp
jmp
adc
stc
sbb
fmull
or
std
in
out
in
sbb
jmp
sub
icebp
adc
out
mov
int3
out
lret
shr
int3
into
sti
hlt
add
fildl
loop
add
movb
loopne
jmp
or
adc
out
sbb
sbb
clc
add
and
sub
es
xor
daa
das
sub
mov
in
int3
in
jecxz
xlat
in
mov
repnz
enter
shl
out
out
idiv
vpsrad
shr
out
or
int
repz
fdiv
out
and
jecxz
sbb
push
sub
or
add
call
repz
xlat
imul
int
xlat
hlt
mov
fstp
or
cld
add
icebp
add
add
hlt
enter
or
push
adc
sbb
repnz
in
loop
sbb
stc
and
sbb
jmp
add
adc
xor
test
mov
int
stc
out
mov
lret
fdivr
leave
mov
flds
icebp
or
cli
or
int3
sti
loop
int
or
lret
pop
jecxz
sbb
fcmovbe
adc
push
repnz
adc
call
sub
add
jmp
xor
loopne
ret
shl
out
mov
leave
jmp
cli
neg
lret
lock
ret
add
add
icebp
repnz
jmp
sbb
out
pop
add
repz
pop
std
push
sbb
or
in
daa
jmp
push
ljmp
mov
scas
scas
faddp
enter
repnz
ror
icebp
in
std
or
ror
out
add
jmp
push
push
rcrb
shl
push
icebp
or
push
loope
in
and
or
adc
jmp
mov
shl
mov
mov
int3
fdivrs
or
jmp
loop
in
loope
in
rcr
iret
shl
shr
or
adc
loope
loopne
and
testl
das
sbb
push
push
repz
fst
int
lock
out
fxtract
out
shr
cld
mov
sti
loop
repz
hlt
add
fcoms
cld
int
add
lock
fcoms
stc
add
pop
cmc
and
icebp
out
sub
clc
sbb
out
and
int
mov
shrb
out
jmp
mov
mov
clc
std
pminub
jmp
in
add
decl
std
repz
add
sbb
icebp
sti
adc
hlt
push
jmp
sbb
cli
std
and
jecxz
loopne
iret
mov
hlt
leave
mov
cld
mov
cld
hlt
fcmovnbe
add
loop
vpmaxub
or
icebp
jmp
icebp
out
into
jmp
fsubr
sti
jecxz
clc
in
cld
and
xor
or
and
xor
mov
icebp
lds
fcomi
stc
lock
fbstp
loop
mov
out
into
pop
add
rcll
in
testl
fcmovbe
add
out
adc
icebp
hlt
and
and
sti
pop
sub
add
and
cmc
shlb
enter
xlat
rol
hlt
leave
out
mov
out
cli
loop
fst
std
leave
loop
add
in
call
adc
adc
fst
and
loop
cld
pop
loopne
sbb
loope
ljmp
adc
adc
test
lods
scas
lret
mov
jmp
mov
clc
fst
idiv
add
add
pop
add
clc
in
roll
push
rcrb
push
add
or
sbb
adc
or
add
sub
xor
repnz
lock
iret
ret
mov
lds
fcom
iret
mov
les
add
ror
push
add
shr
loope
in
idiv
hlt
ficompl
repz
or
loopne
and
sub
and
in
or
in
into
ret
test
ljmp
mov
std
fiaddl
lret
add
ffree
ljmp
or
cmc
sbb
fcos
adc
pop
add
loopne
sub
idiv
or
es
cmc
adc
jmp
mov
mov
xlat
cmc
mov
enter
mov
rcr
or
loopne
out
fucomi
in
or
or
xlat
clc
fistl
pop
adc
loope
loopne
in
or
fimuls
paddsb
in
add
and
cmp
mov
ror
mov
cli
mov
std
mov
shl
shr
loope
xlat
in
shr
les
in
or
icebp
pop
adc
adc
in
lock
repnz
clc
clc
and
sbb
xor
adc
mov
mov
stc
shr
scas
hlt
jmp
in
ret
clc
cli
add
in
decl
jmp
call
aam
std
or
pop
shl
lcall
loope
push
daa
and
sbb
or
sbb
or
in
lods
lret
out
loop
in
mov
shl
sar
jecxz
shl
add
or
ljmp
or
or
clc
pop
or
clc
adc
add
adc
or
das
std
and
sub
stos
jecxz
mov
jmp
hlt
in
lds
add
iret
ret
ret
shr
or
call
or
adc
or
icebp
lret
out
std
push
adc
cld
adc
and
adc
adc
out
das
xor
vpmulhuw
scas
scas
neg
hlt
stc
jmp
lock
hlt
cmc
repz
std
jmp
adc
adc
fpatan
jecxz
push
movss
jecxz
or
sbb
repnz
ss
sarl
into
iret
mov
in
iret
ljmp
into
hlt
mov
in
loopne
stc
pop
lds
out
or
out
adc
not
or
stc
sbb
call
push
or
fsubrp
cld
icebp
and
add
daa
add
add
lods
call
shl
mov
lock
sar
not
mov
sti
rol
loopne
cmc
lock
adc
ror
paddd
adc
or
fsubrp
jmp
or
fcmovnu
adc
cli
and
and
add
and
and
jmp
repz
mov
rcl
mov
into
repz
loopne
aam
add
lret
or
sar
call
in
add
jmp
sbb
jmp
and
add
call
sbb
and
adc
int3
jmp
lret
mov
call
sti
divl
int
mov
lock
fcmovnb
mov
frstpm(287
cld
loop
in
or
int3
fcomp
push
pop
std
sbb
repnz
sub
push
hlt
cld
sbb
or
jecxz
jmp
das
stos
lods
out
in
lret
lret
ljmp
repnz
shr
sarb
xlat
or
ljmp
or
or
sti
loopne
repz
stc
sbb
add
sbb
sub
call
call
ror
clc
mov
in
mov
iret
ror
mov
repz
fcomp
mov
out
fsubr
ljmp
pop
lock
adc
shr
cmc
std
add
adc
cli
sbb
pop
or
adc
es
or
and
in
mov
stos
mov
in
fcmovb
loopne
stc
fcomp
fmuls
flds
or
stc
loop
icebp
add
sti
jmp
add
out
or
mulb
add
and
sub
cld
add
cs
or
es
xor
mov
enter
shr
mov
int
enter
fcmovbe
out
mov
fdiv
or
into
adc
or
adc
or
std
pop
sbb
or
push
pop
sbb
sbb
add
in
adc
das
adc
sub
repnz
out
test
lret
fmul
std
shr
fcom
rcr
fsubr
icebp
or
or
in
ret
rcl
push
call
rclb
adc
icebp
adc
add
adc
testb
or
sti
and
ljmp
and
sub
or
fucomi
scas
in
aam
leave
mov
in
loopne
idivl
sti
add
ljmp
in
adc
loop
adc
push
in
maskmovq
or
and
and
out
sub
in
or
das
adc
xor
es
fadd
loope
rol
lods
ret
mov
clc
scas
ljmp
out
add
test
out
iret
push
or
adc
int
out
adc
repz
or
fsts
sbb
neg
in
pop
adc
in
add
sub
or
daa
adc
rol
test
test
out
fcmove
test
fmul
loopne
cmc
hlt
std
leave
cli
leave
fstp
or
shr
add
jecxz
cld
or
or
or
syscall
cmc
and
pop
in
sub
cli
or
out
cmp
into
hlt
in
mov
loopne
ror
out
int
ljmp
out
call
loope
icebp
iret
dec
jmp
int3
push
sti
out
xlat
imul
sbb
pop
and
loope
add
and
adc
adc
or
jmp
jecxz
mov
jecxz
iret
clc
mov
sarb
fstp
add
in
add
out
int
in
stc
or
fprem1
or
sbb
loopne
and
ljmp
stc
out
add
adc
xor
mov
scas
lock
les
cld
fcomi
add
shl
in
jmp
lret
icebp
fdiv
add
fcomp
aam
jmp
adc
and
in
pop
call
push
and
in
ljmp
rcl
stos
scas
lods
call
aad
mov
fcomi
fxch
shl
std
shr
incl
into
ljmp
or
add
sti
or
or
add
loopne
repz
loopne
and
repnz
stos
mov
lret
int
lock
mov
sarl
clc
add
mov
add
or
in
cmc
repnz
call
or
rcll
repnz
icebp
pop
add
stc
out
sbb
pop
pop
out
or
or
and
pop
adc
int
hlt
icebp
shrb
xlat
mov
ffreep
fyl2x
add
loop
loopne
cld
loope
lock
push
or
ljmp
fmull
sbb
push
and
das
sub
es
push
xor
ljmp
repz
out
jecxz
jmp
mov
add
cli
mov
jecxz
add
icebp
in
in
iret
adc
into
or
repnz
or
adc
sbb
in
sti
sbb
loope
sbb
push
out
std
sub
repz
adc
enter
repnz
ljmp
mov
fucom
cli
shl
in
or
out
out
leave
rolb
call
lret
adc
in
aam
fmuls
in
hlt
es
adc
call
add
add
xor
xor
add
stos
stos
ret
scas
in
ljmp
out
hlt
stc
lret
jmp
pop
out
sti
jmp
or
or
or
sti
xlat
cld
rcll
cld
adc
adc
clc
fsubs
and
sub
call
xor
cmp
out
loop
enter
fdivr
bnd
mov
or
in
fcmovu
lret
or
fcoml
cli
hlt
stc
lock
in
cli
push
cli
hlt
adc
push
or
add
adc
and
mov
fnsave
enter
aad
mov
fdiv
pop
rcr
loopne
pop
or
out
add
adc
sbb
and
mull
add
and
negl
sbb
push
call
es
or
and
in
icebp
scas
ret
out
enter
out
icebp
xlat
mov
std
rcl
sar
or
repnz
int
pop
enter
or
lock
pop
cld
or
or
sbb
and
jecxz
cmc
sbb
pop
and
repz
xlat
fidivl
repnz
ror
mov
fidivrl
int3
out
mov
fmull
les
fnop
out
out
push
mul
add
sbb
or
sbb
adc
or
add
push
adc
or
das
mov
out
mov
loope
loop
mov
ljmp
cmc
out
repnz
mov
call
paddsb
add
repz
sti
testl
clc
xlat
cld
and
sub
cld
imul
clc
add
sbb
adc
add
mov
loop
mov
jecxz
std
lret
cmc
mov
mov
enter
push
add
loope
aad
clc
cmc
clc
hlt
testb
cld
and
out
call
add
add
add
add
push
push
pop
xor
mov
loope
out
hlt
call
in
mov
int3
in
iret
repz
or
jmp
icebp
rclb
vpsrlq
pop
loop
or
fimull
fcos
adc
or
sti
push
icebp
imul
cld
add
lock
rcl
hlt
in
aam
stos
mov
hlt
rcl
call
repnz
mov
leave
lret
out
iret
in
lret
or
rcr
sbb
or
push
cmc
or
icebp
adc
mull
std
sbb
loop
cmc
fucomip
or
std
and
adc
lock
int3
jecxz
ret
lods
lock
int
icebp
mov
fcmovu
shr
jmp
sarl
cld
fstp
clc
xlat
loopne
pop
in
jecxz
or
push
or
add
adc
pminub
std
icebp
out
pop
loope
adc
in
jmp
sub
repz
int
scas
shlb
fucompp
add
aad
fiaddl
stc
in
out
jecxz
int3
or
or
int
loop
out
or
icebp
pop
jmp
repz
repz
cmc
pop
and
or
jecxz
add
movntps
jmp
or
ror
shll
repz
fdivp
aam
repnz
add
xlat
add
call
adc
adc
call
cld
sti
out
adc
mul
add
sbb
push
sbb
ljmp
enter
leave
out
test
leave
fmulp
aam
lret
shl
loope
loop
xlat
out
add
adc
in
adc
ljmp
jmp
fcmovu
add
sbb
sub
add
out
cli
das
adc
sub
sub
fsubr
aad
repnz
call
std
neg
add
xlat
in
clc
fmuls
out
cld
hlt
dec
fists
rcrl
neg
add
and
stc
hlt
lock
add
sbb
or
or
out
sbb
mov
leave
enter
stc
lret
mov
xbegin
cmc
loopne
fcom
fcmove
fdivr
into
cld
out
ficoms
rcrl
negl
sbb
aad
cli
cmc
pavgb
sti
in
out
sub
or
and
lock
or
out
and
fcmovb
lock
into
ret
lock
in
out
fadd
xlat
add
into
mov
ret
fldl
add
lret
out
or
in
or
push
pop
out
add
adc
push
push
add
cld
in
and
add
sub
mov
cmc
leave
mov
stc
stc
xlat
lock
in
cmc
jecxz
hlt
cli
or
ret
std
or
in
icebp
add
or
out
adc
adc
adc
adc
cmc
out
and
icebp
notl
add
or
and
adc
or
leave
in
jmp
xlat
sarl
fidivs
clc
rolb
aad
sar
div
or
loope
out
in
into
aad
add
out
shl
stc
fcoms
add
frstor
in
adc
and
sbb
jmp
push
sti
pushl
add
add
test
in
jecxz
in
mov
enter
out
icebp
cli
aam
mov
mov
loopne
lock
adc
fmul
cld
adc
adc
loopne
sbb
loop
sbb
out
std
pop
ljmp
adc
lock
lret
repnz
divb
loopne
rcl
cld
fdivr
fsubr
aad
or
adc
in
or
into
shl
push
stc
in
repz
neg
negb
sub
add
and
or
sti
in
icebp
jmp
iret
lret
repnz
aad
enter
mov
faddp
loopne
cmc
add
add
faddp
in
int3
std
pop
int3
rcll
add
adc
sbb
adc
neg
cmc
out
sub
adc
repz
sbb
sub
ljmp
in
in
ljmp
mov
iret
loope
aad
lret
ret
jecxz
jmp
in
lret
jmp
add
hlt
aad
push
loopne
loopne
pop
and
loopne
or
and
adc
das
std
adc
adc
scas
call
jecxz
int3
fdivrs
mov
rol
aad
fadds
add
push
add
or
out
icebp
or
int
add
pop
cmc
cli
cli
call
clc
icebp
sbb
sti
std
cli
out
or
xor
sbb
xor
mov
call
scas
in
int3
icebp
lret
mov
shl
pop
out
add
in
iret
shr
adc
in
adc
sbb
adc
cli
sbb
out
sbb
and
daa
push
push
das
sub
or
bts
fdiv
int
mov
mov
aam
mov
mov
fdivp
add
out
pop
add
into
in
imul
adc
pop
sti
negb
add
out
mull
sbb
rdtsc
std
and
jmp
out
ret
in
repz
rcl
mov
in
lret
mov
lds
shl
lret
jmp
in
or
aam
or
or
sbb
sar
jmp
ftst
add
or
pop
jmp
pop
and
and
shrb
hlt
mov
call
lock
cld
add
fxch
out
icebp
push
out
cld
hlt
into
rcl
fdiv
adc
neg
add
sbb
sbb
sub
add
out
add
or
fsubp
mov
lret
hlt
cmc
aam
call
add
mov
in
jmp
int
out
stc
enter
ror
repnz
add
hlt
push
not
icebp
cli
lock
psllq
testl
ljmp
add
or
in
fsubr
mov
jmp
out
lock
mov
xlat
mov
fsub
aam
fcmovnb
add
out
add
lock
add
push
add
in
out
rcl
clc
paddusw
rorl
loope
and
clc
jmp
sbb
jmp
sub
daa
xor
int
lods
lods
in
fsubr
cmc
vpmullw
out
loop
loopne
loop
loopne
or
or
adc
or
call
lcall
cli
fdiv
push
or
push
or
and
adc
daa
xor
add
and
movsl
fadd
shr
mov
lock
call
enter
sar
repnz
hlt
loope
fiaddl
fdivr
fdivrp
or
int3
adc
push
stc
sbb
loopne
sbb
adc
cli
and
in
ljmp
pop
sbb
lods
mov
mov
stos
int3
mov
fdivr
not
mov
cmc
add
or
cli
jmp
fsubrp
repnz
repnz
repz
clc
idiv
sti
adc
fcomip
cmc
push
add
sbb
sub
das
call
leave
lods
loop
cmc
mov
loope
imul
not
enter
shl
rol
fcmovnbe
ret
cmc
xlat
jmp
in
std
jecxz
or
aam
adc
ljmp
cli
sti
in
push
or
and
cld
or
cmpsb
icebp
shrl
lock
int
lock
add
shl
lock
pop
push
sti
adc
iret
pmaddwd
out
out
add
ljmp
adc
notl
stc
add
sbb
xor
push
ret
loopne
icebp
mov
out
mov
in
mov
mov
roll
mov
out
in
jecxz
mov
leave
in
rcll
jmp
or
pop
sbb
negl
adc
call
and
sub
pop
mov
lret
mov
fcmovbe
lret
mov
cmc
clc
fsubp
fdivrl
ret
fcmove
pmaxsw
call
out
div
fmuls
notl
sbb
sbb
loop
and
sbb
sub
repnz
and
in
pop
sub
lds
icebp
mul
lock
shr
in
enter
loopne
mov
add
repnz
or
faddl
add
lret
adc
sbb
rorl
in
adc
idiv
and
adc
cld
sub
sbb
sub
sbb
or
xor
test
ljmp
iret
mov
ror
out
int
cli
sti
mov
or
ret
add
repnz
jecxz
or
clc
in
in
fstps
std
clc
add
out
clc
loopne
or
in
sbb
std
and
xor
repz
mov
jmp
int3
ror
fsubr
mov
hlt
hlt
mov
loop
test
out
leave
jecxz
or
adc
add
sbb
out
cli
verr
loop
pop
daa
stc
adc
es
sub
sub
add
mov
loope
shrb
out
mov
in
int3
aam
in
fdiv
jecxz
fdivrp
fmull
add
or
cld
call
sbb
lret
add
out
pop
fdiv
adc
out
fucom
and
cld
loope
or
icebp
push
adc
sbb
cmpsl
scas
mov
lret
iret
lods
hlt
mov
loop
iret
jmp
fcomi
into
add
add
clc
or
pavgb
or
add
sbb
add
adc
frstor
and
incb
out
out
sub
and
and
pop
sub
or
out
out
rcl
jecxz
ljmp
mov
or
out
out
fisttpl
loopne
out
out
adc
adc
in
push
adc
std
and
sbb
fsub
sti
or
std
or
sub
adc
and
xor
int
ror
mov
mov
icebp
cmc
mov
fmul
loopne
cld
repz
std
add
flds
enter
rolb
out
add
push
sbb
and
clc
cmc
and
and
or
and
clc
in
jmp
in
not
loopne
mov
int3
idiv
shl
aad
cli
aam
pop
clc
in
add
fmul
iret
in
decl
or
or
fcoms
div
pop
cmc
in
cli
out
push
and
loope
repz
sbb
incb
and
or
icebp
add
stos
rcl
stos
mov
lock
repnz
icebp
mov
xlat
mov
stc
ror
in
or
in
adc
iret
out
jmp
shl
icebp
cmc
std
pop
repz
jecxz
in
incl
and
loope
std
sbb
and
getsec
into
in
int3
mov
mov
hlt
shlb
cli
jmp
mov
or
jecxz
add
call
or
cmc
fcoms
adc
pop
out
out
and
fsubp
repnz
sbb
clc
add
daa
testl
add
sub
shrl
mov
aad
in
ror
shlb
rol
fcomp
fstp
or
or
ret
fucompp
jmp
idiv
not
add
call
nop
in
add
jecxz
add
cld
or
pop
cmc
jmp
into
mov
mov
hlt
mov
jmp
stc
int3
out
add
loope
cld
stc
rcr
xlat
add
loopne
loope
add
or
or
push
sbb
clc
cmc
add
std
and
add
sbb
std
out
and
add
or
lret
lret
scas
out
ljmp
fucompp
int
add
mov
leave
fucomip
stc
enter
ljmp
sbb
sti
negb
sbb
sbb
div
add
daa
es
ljmp
add
sub
or
int3
cmc
cmc
in
mov
mov
icebp
lret
fcomi
in
loopne
div
mov
sar
fldpi
fsubr
add
fcomip
leave
or
shr
push
ljmp
sbb
adc
hlt
fists
cli
or
out
sub
push
xor
decb
sub
mov
out
call
ret
aad
shr
mov
iret
shl
aam
repz
pop
bswap
or
cli
sti
jmp
push
shl
fistl
call
lcall
pop
std
adc
and
add
cld
sub
sub
sbb
lret
in
jmp
lret
mov
int3
iret
repnz
mov
rcr
mov
neg
jmp
les
out
add
add
push
adc
add
aam
call
fucom
sbb
stc
ficomps
sub
push
pop
sbb
xor
sub
and
aaa
sub
mov
rol
repnz
xlat
imul
jecxz
fdivr
dec
ror
repz
fsub
stc
pop
add
lds
std
out
push
push
cld
fucomip
cmc
add
push
testl
or
jecxz
call
clc
and
sub
and
or
add
fsubp
in
lock
fdivs
out
clc
call
cld
mov
out
or
paddusw
rcll
in
adc
adc
in
adc
hlt
sbb
jmp
and
cs
sbb
pop
out
rep
mov
out
mov
out
repnz
rcl
enter
enter
fld
out
fldl
neg
jmp
or
or
int
add
sbb
or
fcoms
out
cli
adc
and
mulb
loope
call
pop
or
adc
scas
lods
loop
in
loopne
mov
repnz
add
fscale
fisttps
loope
std
add
fmulp
leave
out
out
out
out
int
in
pop
in
cld
adc
cld
pop
adc
push
negb
sti
out
add
and
push
and
jecxz
out
ret
iret
mov
icebp
aad
mov
neg
sarl
in
add
mov
fdiv
in
repz
rorb
add
adc
cmc
pop
pop
add
out
adc
out
pop
hlt
and
cmc
jecxz
or
stc
or
std
adc
sub
out
stos
lret
shll
mov
jmp
mov
cld
mov
loopne
fmuls
add
or
sar
fists
aad
xlat
adc
aam
sbb
in
sbb
fiadds
out
add
pop
in
nopl
out
sub
loop
ror
repz
in
mov
xlat
icebp
repz
xlat
fcomp
ret
vpaddd
std
call
loope
iret
icebp
loopne
jecxz
push
sbb
repz
ficoms
loopne
repz
fbld
sbb
or
jmp
aaa
cmp
fsub
int
in
rcr
fadd
stc
sar
fnstenv
mov
in
out
pop
fisttpll
push
std
add
clc
neg
aad
clc
hlt
adc
sbb
push
lock
adc
call
cld
or
or
or
stos
fadd
stos
stos
lods
cmpsb
ret
int3
ljmp
call
mov
fnstcw
add
fnclex
loopne
std
cld
fucom
in
iret
adc
repz
sbb
pop
std
in
and
add
add
das
in
push
or
call
jmp
repz
add
rol
in
fcmovb
ljmp
or
or
adc
aad
add
icebp
add
sbb
sbb
sbb
lcall
stc
fucom
sbb
pop
push
cs
sti
sub
push
sub
stos
shl
jmp
mov
in
ror
aam
call
not
out
cmc
sar
ret
fucomi
into
clc
loope
cld
lock
loope
in
std
push
sbb
sbb
add
std
out
sub
jecxz
pop
sti
xor
adc
lock
mov
fidivrs
lock
ret
jmp
loope
add
ret
fsincos
les
leave
lret
or
in
shr
into
add
sti
add
adc
and
out
loope
fcmovu
cld
sbb
sub
and
push
das
sbb
loope
shr
shl
lods
iret
loop
xlat
cmc
std
lock
mov
add
into
rolb
clc
aam
fdivr
call
out
or
or
stc
add
repz
adc
cmc
loopne
lock
stc
sbb
icebp
sbb
cmc
sbb
or
adc
repnz
incl
adc
mov
loope
mov
repz
ljmp
aam
cli
in
in
loope
in
add
add
hlt
negb
push
or
cld
adc
sbb
and
and
loop
and
sub
ljmp
add
shl
int
in
in
out
mov
fsub
ljmp
out
out
rcl
lret
ljmp
loope
in
out
out
sbb
in
notb
negb
std
and
stc
adc
pop
lock
add
scas
ret
icebp
lret
aam
ret
ljmp
shl
mov
repnz
or
fucomi
add
loopne
push
push
add
in
aad
movntq
out
adc
adc
pop
and
jecxz
pop
adc
out
or
add
pop
xor
adc
ror
lods
jmp
mov
mov
add
cmc
fnstsw
repnz
ljmp
add
or
notl
jecxz
aam
cmc
sti
pop
out
or
sbb
add
or
pop
lock
xor
repz
ret
cmpsl
fucomip
in
in
stc
in
leave
fsubr
stc
mov
fcmovu
cmc
repnz
fsubrp
ljmp
lock
sbb
adc
negl
sbb
and
sbb
and
or
daa
es
ljmp
in
ljmp
jmp
mov
in
repz
out
ljmp
in
jecxz
add
rcr
sbb
adc
push
ud2
jmp
sbb
hlt
loopne
std
or
sub
or
call
xor
sbb
iret
out
mov
fsubrs
repnz
jecxz
icebp
add
hlt
ret
filds
enter
enter
movhlps
pop
lock
or
adc
sbb
faddl
out
paddusw
sub
add
or
sbb
or
sub
add
icebp
or
lds
call
mov
sti
mov
fnstcw
ret
sar
call
cld
sti
add
adc
add
sbb
ljmp
sbb
stc
in
jmp
cli
cs
or
fidivrs
icebp
shrb
shl
mov
fcomi
shr
fcmovne
cmc
leave
sti
ret
filds
add
add
shl
in
out
sti
or
stc
adc
aad
fdivr
and
sub
in
testb
adc
or
push
rcr
test
jmp
stos
lret
out
fsubr
out
lock
out
jmp
loope
out
repz
or
aam
fmuls
in
lock
ljmp
negl
call
in
std
sbb
and
call
jmp
int3
movsl
lods
jmp
icebp
out
ljmp
loopne
mov
jmp
add
loopne
add
fcomps
fmuls
icebp
ljmp
mul
add
and
repnz
and
or
sub
add
int
mov
mov
out
iret
call
mov
imul
fsubrp
ljmp
adc
shr
loopne
clc
fcom
or
adc
jmp
push
pop
fiadds
repnz
push
daa
push
out
or
in
add
add
stos
enter
loopne
mul
out
cli
clc
fsubp
loopne
lock
rcr
out
out
leave
repz
loopne
int
add
adc
pop
push
movlhps
sbb
sbb
pop
and
add
or
adc
or
repnz
mov
jmp
rcl
jmp
clc
leave
call
fucomi
iret
ret
out
mov
imul
or
in
adc
pop
loopne
in
sar
out
adc
or
pop
and
pop
nopl
sbb
sbb
in
sbb
xor
mov
mov
ljmp
into
mov
in
jmp
ffree
add
lret
pop
add
loope
shl
in
add
adc
in
sbb
fstp
lock
adc
and
sti
or
and
sub
repz
push
repz
icebp
lret
jmp
out
icebp
call
mov
add
out
clc
inc
add
jecxz
add
out
in
repnz
in
in
adc
adc
sbb
add
adc
std
lock
hlt
or
sbb
push
or
xor
xor
call
fdivl
cli
lret
in
hlt
lret
hlt
aad
repnz
int
push
add
jmp
loopne
shr
in
call
roll
call
loopne
loop
pop
fists
add
sub
add
or
sub
repnz
mov
out
icebp
in
in
ret
shlb
ror
loop
shl
fidivrs
sti
or
jecxz
add
adc
or
sbb
repz
push
or
or
or
and
pop
stc
sbb
cmc
in
or
sub
sub
sub
and
fdiv
scas
out
loope
repnz
cli
dec
ljmp
sar
aad
loop
into
lret
pop
shl
int
in
out
jmp
adc
cli
add
push
adc
add
sub
add
add
add
and
loope
ror
mov
loop
in
fscale
mov
in
call
clc
out
in
into
cld
adc
add
loope
out
pslld
testb
push
movlhps
repnz
adc
call
add
add
sub
add
or
out
rol
repnz
mov
out
neg
lret
div
faddp
jmp
div
cmc
enter
loopne
shl
add
repz
ficompl
repz
push
pop
sub
cli
jmp
out
cli
std
das
out
and
mov
mov
in
shr
int
lret
icebp
neg
lock
xlat
sar
std
xlat
add
or
fdiv
in
aam
aam
in
or
aam
repz
aad
repz
sbb
add
jmp
add
out
or
add
mov
hlt
shl
hlt
int3
stc
call
ljmp
aam
ret
fsubp
int
push
sti
or
adc
lock
roll
fcoml
out
adc
adc
sbb
negl
or
ljmp
and
sub
add
loopne
mov
aam
iret
clc
lock
lock
ljmp
movl
std
or
int
or
pop
or
pop
adc
or
nop
push
std
and
jmp
sti
sub
xor
add
rol
mov
lods
scas
mov
ret
shl
lret
mov
mov
fdivr
repnz
or
fstp
rcr
adc
or
repz
roll
out
hlt
and
adc
or
and
ljmp
adc
mov
in
repnz
ret
rcr
scas
out
fldz
leave
fprem1
add
add
add
add
jecxz
lock
fcomip
pop
sar
or
cld
neg
cld
and
icebp
jecxz
add
sub
mulb
adc
push
or
in
and
es
lods
out
ret
ret
shr
scas
in
lret
aam
aad
xlat
stc
add
push
jecxz
loopne
push
aam
neg
fcomp
or
adc
adc
fdivr
sbb
pop
fstpl
add
jecxz
and
cmc
sub
sub
cs
add
pop
and
fdivrs
aam
mov
fcmovbe
hlt
jmp
add
int
std
pop
ret
cli
repnz
aad
enter
enter
cmc
jmp
push
stc
push
test
adc
in
jecxz
push
fisubrl
loope
jecxz
call
in
pop
xor
imul
stos
cmpsb
lret
in
loop
rcl
rcl
ljmp
push
div
clc
add
aad
fstp
out
cli
icebp
out
add
shl
rclb
out
negb
add
and
sbb
cmc
clc
and
cld
sbb
adc
out
cmp
enter
lret
mov
cli
fcomi
int3
int3
mov
cld
mov
hlt
mov
loop
add
iret
not
repnz
call
icebp
std
adc
clc
repz
mull
call
es
pop
or
scas
enter
out
repz
out
mov
add
cmc
ljmp
add
add
jecxz
lret
sbb
or
cli
sbb
hlt
icebp
cld
fcomi
sub
add
or
or
add
comiss
xor
lret
mov
lock
scas
int3
sar
int3
inc
loope
out
add
movl
call
rorl
or
adc
jmp
loop
adc
push
clc
add
and
and
cs
push
sbb
xlat
loope
mov
ret
out
mov
lock
add
ffreep
sar
sti
fcmovu
ret
clc
add
add
adc
rcl
fcomp
xlat
or
adc
adc
pop
call
clc
adc
in
and
sub
icebp
aaa
mov
mov
mov
in
mov
sti
not
enter
cmc
fld
loopne
aam
out
add
icebp
adc
aad
prefetch
sbb
adc
fsubr
clc
pop
and
repz
add
cld
or
add
cli
and
hlt
and
in
in
movsl
loopne
lret
xbegin
aam
rcr
hlt
out
add
test
cli
lret
ror
fsubr
in
add
or
call
sbb
sub
incl
or
sbb
sarl
jecxz
lret
mov
sti
mov
shl
clc
in
add
dec
in
adc
or
std
or
in
aad
or
or
fcomps
add
in
out
out
push
add
sbb
out
and
icebp
lock
repz
in
fneni(8087
jmp
mov
std
in
idivl
in
aad
movb
add
iret
fucomp
out
cld
fmulp
iret
fcomip
sbb
push
hlt
sbb
loope
sbb
sbb
sbb
add
cld
out
and
or
repnz
mov
mov
ljmp
sar
int3
mov
aam
clc
add
in
cld
cld
out
lret
loop
repz
testb
fcoms
adc
repnz
adc
and
pop
add
sub
sub
repnz
or
enter
aam
call
int3
shlb
loope
vpaddusb
jmp
add
ret
add
add
push
cmc
or
std
or
push
pop
and
sbb
push
in
sub
ljmp
into
jmp
scas
hlt
jecxz
mov
in
fdivrp
mov
in
iret
repz
call
inc
push
jmp
ljmp
pop
jmp
sbb
push
adc
add
clc
icebp
adc
fdivr
sbb
push
out
stc
out
xor
decl
add
sbb
repnz
ret
lock
sti
fdivr
mov
mov
mov
jecxz
aad
mul
aad
int
icebp
shl
lret
shl
lock
or
in
fcoms
call
fbld
std
adc
adc
push
sub
sub
out
out
sti
and
add
sub
ffreep
mov
mov
scas
mov
lret
fprem1
repz
sar
roll
add
enter
add
adc
jecxz
or
jecxz
fucomi
push
clc
push
pop
and
idiv
loop
hlt
repz
sub
xor
and
mov
ret
rol
ret
shlb
mov
aad
ljmp
std
or
add
fdivrp
repz
lock
add
pmuludq
or
sub
or
daa
clc
jmp
sbb
xor
jecxz
fucomp
rcl
scas
iret
fucomip
aad
in
xlat
lret
lret
loopne
std
mov
add
add
loope
in
in
int3
or
repz
cmc
jmp
ficompl
repz
pop
adc
clc
add
add
add
adc
and
push
and
icebp
jmp
rcr
out
lods
lods
mov
mov
in
mov
out
add
shlb
stc
hlt
loopne
push
add
lret
icebp
jmp
aad
neg
or
fcoml
and
add
loopne
or
or
and
sbb
xor
sub
lods
in
loopne
enter
aad
int3
mov
out
fucomp
mov
fstp
cld
in
imul
out
or
psrlq
enter
adc
into
out
fstp
icebp
cld
cld
sbb
push
fdivr
add
es
in
cli
and
add
xor
loope
mov
test
repz
lock
std
shl
or
mov
cld
or
out
adc
adc
repnz
adc
fcompl
fcoms
lock
out
out
sub
xor
in
xor
leave
out
jmp
repnz
in
int
lret
mov
in
or
add
call
push
push
or
add
testl
adc
pop
call
fisubs
push
loop
sbb
sub
icebp
icebp
adc
add
in
iret
jmp
out
into
sar
lock
add
fcomp
mov
in
std
add
fildl
or
or
add
adc
shl
adc
and
and
stc
clc
in
or
add
sti
adc
sub
pop
xlat
mov
out
ret
in
fscale
out
out
mov
fiaddl
loop
clc
aad
fcomp
out
sti
fisttps
roll
or
in
lock
out
std
or
sbb
repz
push
sub
adc
in
adc
in
out
or
lods
stos
mov
fdivp
ljmp
hlt
jmp
into
into
std
std
loopne
jmp
stc
dec
cld
sti
adc
out
cli
push
push
adc
cmc
cli
adc
cli
and
and
stc
sub
out
sbb
in
sub
xor
rcr
lret
repnz
call
mov
std
add
ror
out
ljmp
jmp
or
cmc
add
in
sbb
xlat
std
cmc
repnz
clc
add
cld
adc
sbb
repz
add
in
lret
test
lret
rol
lret
enter
shl
fdivrp
std
int3
loopne
shl
mov
fmul
or
int
jmp
adc
int
or
pop
fucomp
fcos
fiaddl
and
stc
out
icebp
out
and
lock
shl
scas
in
scas
icebp
mov
out
sti
jmp
mov
aad
lret
add
push
add
loope
adc
rcll
lock
out
cld
add
psllw
add
add
or
adc
call
jecxz
rol
jmp
lret
mov
add
rcl
std
fcmovnb
cli
lret
add
icebp
leave
call
aam
aad
clc
repnz
faddl
sbb
or
or
or
divl
enter
lock
mov
int
iret
roll
into
aam
call
cld
call
loope
into
rclb
add
or
push
stc
sti
jmp
adc
std
lock
sub
and
jmp
sub
cld
ljmp
ret
fcmovnb
mov
xlat
clc
shr
xlat
icebp
in
jmp
into
cmc
add
out
hlt
add
repz
jecxz
add
int3
add
or
or
iret
jmp
fdiv
push
adc
fneni(8087
out
sub
sub
std
or
adc
out
adc
aaa
adc
test
hlt
cmc
mov
rol
int3
jmp
std
hlt
std
loope
add
std
xlat
push
push
add
or
out
push
lock
in
aam
sti
neg
add
loop
add
out
adc
cli
add
and
xor
jmp
ljmp
out
icebp
hlt
out
lret
icebp
call
mov
fdivr
sar
ljmp
cld
adc
shl
iret
xlat
jmp
fsubrp
sbb
fisubs
repnz
daa
mul
push
sub
clc
add
pop
ret
in
loop
iret
rol
repnz
int3
mov
fsub
aad
add
sarb
jecxz
imul
in
adc
adc
adc
fildl
sbb
ficomps
push
mul
adc
cmc
or
sti
or
cs
unpcklps
loopne
test
lret
mov
fsubr
rcl
out
cld
idivb
add
out
enter
add
fmul
testb
add
push
repnz
pop
imul
and
add
add
and
clc
or
adc
pop
or
push
xor
sub
loop
fcmovnu
into
lret
loop
lret
repnz
cld
mov
mov
dec
fdivp
sti
leave
vmovntdq
shufps
add
push
negl
jmp
fdivp
pop
and
repz
clc
ljmp
sub
or
leave
mov
aad
cli
lret
mov
cmc
mov
aam
std
out
dec
ror
adc
fsts
aam
hlt
jmp
imul
lock
sbb
incl
or
das
cld
out
in
pop
add
and
lret
iret
test
in
lret
repz
in
fdecstp
fdivp
cli
mov
in
vpsrad
adc
icebp
loop
out
lock
in
adc
cmc
loop
icebp
in
cld
push
or
sbb
or
das
and
adc
xor
daa
stos
in
scas
iret
stos
stos
rol
out
mov
call
fidivrs
hlt
frndint
loope
cmc
enter
or
in
lds
repnz
loope
sbb
sbb
sbb
hlt
or
cmc
add
daa
loope
sub
sti
sub
add
sbb
add
adc
fdivp
mov
rol
hlt
out
sti
leave
loopne
std
icebp
rol
push
cli
fucom
or
xlat
out
add
pop
adc
or
sbb
jmp
loope
loopne
pop
cmc
fninit
sbb
out
sub
add
add
lock
aad
call
int3
mov
xlat
in
in
jecxz
in
loopne
or
jmp
out
push
out
adc
aam
fdivp
or
sub
out
or
add
add
sbb
lock
and
pop
loope
fnsave
aad
out
out
dec
cmc
shr
jecxz
std
out
repz
loopne
adc
lret
push
repz
sbb
shl
sbb
push
pop
fstpl
sbb
fldl
loopne
sub
add
push
add
or
sub
fadd
fdiv
rcl
int
ljmp
mov
shr
repnz
loopne
aam
lret
loop
in
jecxz
pop
pmaxub
aam
iret
jecxz
into
stc
fstps
push
add
adc
loop
cld
hlt
in
loope
sbb
daa
in
pop
sub
mov
jmp
rol
not
into
lret
mov
cld
rcl
fsub
cld
in
loopne
lret
ljmp
or
pop
adc
xlat
or
sbb
adc
add
sub
jmp
and
sti
adc
xor
repz
xor
fidivrl
les
jmp
mov
aam
loopne
or
hlt
or
rclb
rcr
repnz
stc
sbb
testl
repz
adc
jmp
and
or
icebp
pop
mov
iret
call
in
into
out
repz
fidivrl
clc
push
loop
push
lret
or
add
add
out
add
repz
sbb
fiaddl
ficompl
lock
sbb
and
in
add
pop
add
adc
in
loopne
mov
mov
call
int
mov
rcl
iret
lock
in
testb
pop
call
jmp
lock
call
and
adc
fcompl
push
add
adc
add
es
call
das
sbb
sarb
ret
out
shl
cmc
repz
fnstcw
cld
repnz
testb
clc
out
repnz
or
lock
adc
in
push
hlt
out
fsubr
icebp
faddl
loopne
sbb
pop
in
sbb
ljmp
in
push
movsl
rol
sarb
mov
mov
shl
or
rol
loope
out
adc
loop
std
ror
adc
out
decb
add
jmp
add
std
add
and
sub
xor
cld
daa
push
sub
daa
jmp
repnz
lret
out
fnstsw
into
mov
fcomp
or
mul
flds
add
std
add
jecxz
or
add
ficoml
and
nop
sbb
or
or
sti
pop
jecxz
sub
xor
mov
lret
shl
jmp
out
cmc
repz
in
add
hlt
shl
test
adc
incb
in
adc
pop
push
lock
paddusw
adc
repz
sti
repz
in
hlt
and
sub
sbb
daa
cmc
repz
ret
lods
les
repz
scas
mov
stc
enter
fiadds
repnz
sti
or
fmul
loopne
lock
hlt
cmc
xlat
adc
cmc
aam
or
and
adc
out
add
sbb
in
in
imul
or
push
jmp
xor
mov
mov
repz
fldz
add
fadd
out
loop
lret
add
in
rolb
out
fpatan
sti
or
adc
adc
and
push
out
sbb
adc
clc
pop
sbb
das
and
adc
lret
scas
shl
aam
out
shl
xlat
lret
xlat
lret
ror
mov
ret
jecxz
clc
sti
add
jmp
loope
sbb
in
clc
fcmovu
or
and
jecxz
idiv
sbb
es
adc
and
das
sub
xor
and
lds
out
rol
int
mov
cmc
repnz
add
in
or
leave
add
out
rorl
adc
stc
repnz
testl
and
repz
pop
out
out
adc
xor
or
les
out
lock
aam
fdivrp
mov
into
fcmovnb
in
xlat
fcmovbe
in
lret
cli
in
leave
adc
push
rcl
iret
add
cli
iret
pop
sti
out
sti
sbb
and
add
pop
cli
sub
daa
or
and
decl
in
and
out
shr
mov
lret
test
add
int
clc
mov
movb
jmp
out
icebp
cmc
xlat
loope
or
stc
adc
call
repz
and
loope
and
or
sbb
hlt
and
sub
fisubrl
in
in
lock
hlt
cli
fxch
repnz
or
loope
out
fmul
or
in
ljmp
aad
icebp
notb
adc
and
push
pop
adc
ljmp
sub
sub
mov
fnsave
iret
fucomi
ljmp
add
repnz
cmc
call
loop
add
or
std
sar
adc
icebp
cmc
sbb
or
daa
out
daa
pop
add
sub
call
mov
into
out
mov
sti
leave
in
out
icebp
enter
in
add
loope
fdivrp
in
out
pop
fmull
jmp
rclb
adc
pop
or
sbb
in
cmc
adc
add
out
add
out
lock
xor
hlt
es
loop
cmpsl
lret
hlt
repnz
ret
aad
clc
leave
clc
cmc
mov
fadd
stc
call
mov
call
add
icebp
adc
sbb
faddl
stc
ud0
and
in
push
hlt
adc
and
add
push
sbb
out
mov
shrl
scas
aad
mov
divb
xlat
jecxz
hlt
out
sti
ljmp
incb
or
add
ljmp
std
adc
lock
add
clc
daa
jmp
push
add
add
out
cs
iret
fsubr
lret
cmc
lret
rol
fdivs
lret
mov
cld
sarl
aad
in
jmp
in
fucomp
or
sysret
add
out
in
out
clc
jecxz
lock
push
out
sub
pop
cli
in
sub
sub
adc
fdiv
into
jmp
in
xlat
iret
mov
cld
mov
sti
lock
fdivr
or
mul
adc
adc
adc
in
cmc
repz
notb
sbb
icebp
or
sbb
lock
or
push
add
adc
jmp
in
and
jmp
shl
rcl
jmp
fsubr
mov
int3
clc
loop
roll
mov
add
fcomp
add
or
add
push
roll
ljmp
sbb
in
sbb
or
sbb
and
sub
icebp
lret
jmp
jecxz
ret
lret
call
mov
leave
clc
ljmp
cmc
jecxz
stc
leave
or
call
out
in
push
push
sbb
adc
out
and
pop
and
sti
add
add
push
sub
into
fcmove
icebp
ljmp
in
mov
hlt
shll
int
stc
add
or
cld
ret
add
sti
leave
fcoml
int
or
add
out
fucomi
icebp
xlat
and
cld
sbb
hlt
sbb
or
sbb
decb
xor
mov
out
rcl
aam
out
iret
iret
repz
imul
fdiv
cld
fcmovb
stc
add
mov
fsubr
ljmp
lret
rcrb
sbb
or
add
adc
jecxz
add
and
and
add
negl
push
call
in
add
shl
int3
lock
lds
int
mov
loope
add
aad
pop
enter
loope
jmp
hlt
out
nopl
adc
or
icebp
add
sub
es
add
and
frstor
lods
mov
loopne
mov
std
sar
loop
hlt
add
call
or
fdivr
or
fcomip
ljmp
push
fcomi
fisubl
fucomp
adc
jecxz
cld
and
call
xor
add
adc
fstp
mov
mov
sti
lock
int3
lock
aad
or
hlt
stc
fdivr
aad
out
int3
or
jmp
out
sbb
in
add
or
in
and
ficompl
adc
push
or
sub
add
cmc
icebp
xor
ret
out
loope
ret
lods
iret
ret
mov
aam
icebp
mov
cli
xlat
shl
fdivrp
repnz
in
into
lds
sti
unpcklps
push
or
xlat
or
hlt
adc
or
add
jmp
fbld
cli
and
sbb
or
das
sbb
icebp
adc
ret
in
in
rep
lock
ljmp
mov
add
mul
or
cld
into
cli
lret
shr
or
pop
adc
fscale
cmc
sbb
sti
add
out
pop
divl
add
add
adc
mull
out
ret
stos
les
loopne
shll
out
lret
idivl
testl
or
add
icebp
or
into
or
out
push
icebp
add
adc
cld
daa
or
repz
add
add
daa
adc
add
cmc
loop
out
lock
shll
mov
out
shl
fnsave
ret
lret
fisttpll
lret
push
fists
notb
lock
sbb
fdiv
out
pop
std
es
clc
sbb
and
add
or
xor
scas
cmpsl
loop
rol
cmc
test
mov
mul
xlat
lock
repnz
shl
in
fmull
pop
leave
or
push
add
or
jmp
add
call
comiss
jmp
sub
enter
enter
aad
enter
out
loope
xlat
fstpt
in
loopne
cld
or
in
loope
pop
in
or
repnz
neg
ljmp
or
adc
sbb
sbb
jecxz
or
sub
add
mov
lods
loope
ljmp
clc
into
sar
fiaddl
faddl
div
ljmp
iret
lret
testb
sti
sbb
lock
pop
call
or
adc
lock
in
mov
int3
repnz
ret
fcmovu
stc
iret
sti
out
mov
clc
pop
ret
fnstsw
cli
in
fmul
enter
jmp
cmc
cmc
pop
hlt
adc
push
sbb
notl
or
adc
pop
repz
sub
sub
lock
es
lods
lret
shrl
in
mov
xlat
repz
aad
int
add
sti
cmc
add
add
fisttps
cli
xlat
in
pop
ljmp
lock
or
push
sbb
fcmovu
adc
add
sbb
sub
or
xor
in
and
aad
out
out
int3
call
repz
testl
loopne
adc
fcoml
add
mul
in
add
out
and
cld
adc
add
and
cmc
cmc
idiv
cli
cld
sub
in
or
xor
lock
imull
ret
lret
hlt
int
std
int3
fsubrp
test
icebp
aad
add
enter
neg
lds
lock
repz
jmp
or
call
adc
or
add
push
out
and
and
sub
sub
adc
adc
or
das
enter
out
lods
mov
rol
les
mov
repnz
std
cld
loopne
cld
out
or
repz
or
jmp
fmuls
add
add
pop
out
sub
xor
paddw
mov
mov
int3
int
hlt
mov
std
fcomi
int
add
ret
flds
in
jmp
std
repnz
int
or
fdiv
clc
cli
stc
nop/reserved
in
jecxz
and
cld
loop
sub
cli
adc
xor
fucom
repnz
scas
cmc
out
lret
mov
lret
hlt
hlt
shl
cli
ljmp
loop
call
out
notl
pop
or
or
cli
cli
sbb
add
fsubp
loopne
add
clc
jmp
out
jmp
sub
or
in
in
in
int
int3
mov
mov
lret
aam
enter
fcomp
add
repz
shl
jecxz
dec
shl
add
cli
push
add
fisubs
adc
das
or
jecxz
incl
scas
jecxz
out
out
repz
in
not
mov
in
int
repnz
jmp
rcr
mov
ljmp
icebp
adc
or
push
adc
fimull
adc
and
in
nopl
add
call
call
adc
adc
ret
mov
lods
lret
leave
aad
shl
cli
aam
repnz
in
shl
in
or
clc
or
or
leave
add
lock
adc
xlat
clc
hlt
por
div
add
in
push
sub
loop
sub
push
push
xor
repnz
fsubl
loopne
xlat
aam
int3
out
sti
mov
jmp
fadd
rcr
in
hlt
into
add
out
or
cld
sti
adc
adc
loope
cli
or
and
fisubrl
sbb
sub
add
jecxz
and
add
enter
mov
mov
cmc
ret
les
neg
repz
mov
aam
stc
out
imul
push
fdivr
push
in
call
push
fsubr
cli
sti
repz
in
adc
out
in
pop
out
out
sub
sub
adc
mov
fdiv
mov
test
fcmove
fdivr
lret
add
mov
mov
or
fst
loop
out
jmp
negl
aam
in
jmp
out
in
cmc
add
repnz
sub
das
sub
and
adc
loopne
fdivrs
mov
icebp
fnstenv
fcmovu
repz
clc
out
add
add
loopne
test
enter
or
add
adc
or
adc
neg
and
icebp
pop
adc
and
sbb
and
add
and
xor
ret
mov
shll
mov
fucomip
repnz
sar
shl
fcomp
fcmovnu
mul
stc
loopne
std
or
lock
repnz
add
adc
or
mul
adc
sbb
cli
adc
add
xor
in
cmc
fsubp
int3
mov
loop
cld
mov
aad
fadds
std
out
clc
jmp
stc
fsubr
ljmp
adc
jmp
sbb
testb
and
and
sub
clc
sbb
cs
fadd
mov
mov
loope
into
ret
fmul
into
hlt
fucomi
mov
repnz
in
cli
sti
adc
lret
in
into
xlat
aad
aam
into
sbb
adc
and
daa
add
and
ljmp
sbb
fadd
jmp
mov
lods
hlt
fsubrs
fcomi
iret
hlt
ljmp
loope
pop
or
loope
into
lock
hlt
icebp
fsubp
adc
cmc
adc
sbb
imul
and
jmp
icebp
cli
sbb
cld
and
sub
das
out
adc
hlt
or
add
mov
cmc
loope
into
test
clc
shl
in
mov
jecxz
ret
loopne
fiadds
loopne
sti
into
loope
add
adc
adc
jmp
loopne
loope
fsub
adc
or
imulb
add
cld
push
add
xor
test
loop
mov
shl
repnz
leave
lret
mov
into
rol
rol
loope
out
in
call
not
add
aad
or
sbb
push
add
sbb
sub
cld
or
add
ss
and
jmp
out
jmp
stc
shll
cmc
mov
add
loopne
loop
incl
enter
lock
loop
pop
jmp
add
or
pop
hlt
notb
sbb
and
sub
and
cld
add
sti
or
sub
repz
scas
into
mov
ror
stc
out
fsub
fdivp
in
mov
stc
fyl2x
or
idiv
in
cli
push
out
shl
decl
or
fimull
cld
icebp
add
repz
and
sub
or
hlt
std
out
das
or
in
add
and
icebp
ljmp
aam
lret
jecxz
in
mov
aad
mov
mov
cmc
ret
add
add
lock
sti
add
or
stc
cli
or
out
adc
adc
sub
mul
pop
adc
or
in
add
imull
test
shl
mov
lret
repz
aam
fcomi
int
add
add
test
add
add
std
loopne
adc
int3
adc
sbb
xlat
aam
and
fcomps
std
fists
stc
loope
sbb
or
push
sub
sbb
adc
pop
adc
adc
xlat
xor
xor
xor
bound
cmp
jbe
insb
je
xor
aaa
jl
or
andb
push
mov
loopne
mov
add
dec
jns
add
fucom
leave
out
rcl
imul
mov
fdiv
in
in
sar
out
or
in
push
clc
repnz
call
testb
repnz
push
stc
in
adc
repnz
add
cvtpi2ps
sbb
mov
ret
stc
ret
int3
fldln2
aam
enter
add
mov
rcl
stc
add
shr
adc
aad
shr
add
push
hlt
fcomi
aad
add
sbb
sbb
adc
mull
sbb
push
repz
les
mov
lret
jmp
aad
cmc
in
jecxz
cmc
out
rcr
jecxz
lds
or
or
adc
mul
or
push
sbb
or
jmp
es
cli
sub
or
pop
sbb
in
mov
out
cmc
int3
loop
lods
out
stc
into
movl
lock
add
fxch
int3
pop
lret
adc
add
out
por
cmc
in
sbb
pop
or
fcomip
stc
add
push
sbb
stc
sub
xor
or
adc
test
mov
icebp
lret
cmc
out
in
rol
repnz
fcmovnu
loop
mov
ljmp
loope
adc
sbb
std
sbb
add
jmp
es
pop
sbb
cmc
lods
in
out
in
in
loope
out
div
jecxz
mov
xlat
lock
repnz
shl
icebp
stc
jecxz
incb
testb
adc
jecxz
out
lock
or
out
or
repnz
out
adc
sbb
jmp
sbb
add
or
repnz
repnz
loope
in
in
mov
in
icebp
jecxz
call
mov
leave
idiv
cmc
testl
push
add
in
out
adc
pop
stc
jmp
loope
and
loopne
or
in
or
jmp
or
hlt
sub
loop
fcomip
lret
int
mov
iret
int3
cmc
out
into
fidivrl
in
ljmp
or
pop
enter
cli
pop
neg
bndstx
xlat
jmp
push
add
pop
and
cld
sub
add
in
jmp
div
or
hlt
lret
mov
les
int3
mov
stc
jecxz
jmp
lds
cld
or
out
jecxz
add
out
shl
adc
sti
hlt
adc
out
or
add
in
and
or
ret
mov
aam
jmp
shll
in
clc
lret
ret
pop
add
add
jmp
incl
or
adc
rorl
adc
decb
fimull
adc
add
in
and
imul
decl
loope
add
or
pop
push
das
adc
mov
mov
rcl
cmc
in
out
mov
flds
in
pop
out
out
add
or
ljmp
in
adc
sbb
adc
pmulhw
es
add
lcall
adc
or
or
icebp
idivb
enter
mov
jmp
call
mov
rcl
std
ret
call
or
jmp
in
adc
sti
push
loope
cld
sbb
sti
sbb
add
or
in
icebp
push
sub
repz
loope
icebp
int
in
les
stc
ljmp
les
std
or
std
or
adc
adc
or
adc
repz
add
sbb
call
add
add
mov
lret
in
shl
mov
in
int
out
ljmp
jmp
lret
ljmp
cmc
or
add
clc
add
loope
fistl
in
push
and
and
stc
sbb
xor
ljmp
in
mov
scas
mov
lret
cmc
mov
into
add
lock
ljmp
fcmove
decb
shl
hlt
int
adc
adc
fmull
adc
and
sti
mul
sbb
sub
or
or
sbb
sub
sub
and
fxch
mov
mul
shl
leave
lock
ljmp
ret
add
movl
or
hlt
into
loope
cmc
aam
adc
idiv
jmp
cld
fldl
sbb
in
daa
es
add
mov
jmp
in
enter
mov
sar
mov
mov
pop
or
int3
jmp
add
adc
repz
lret
out
ljmp
stc
add
sbb
es
add
pop
sti
sub
or
push
or
push
xor
lret
lods
ret
into
in
aam
into
lret
sarb
sar
out
fucomi
jmp
in
loop
fucom
or
ljmp
hlt
push
in
and
loope
repz
push
adc
or
cli
and
jmp
add
adc
lret
cmc
mov
fdivs
rcl
ret
vcmpps
idiv
out
les
faddl
push
add
aam
lock
adc
sbb
stc
out
adc
and
daa
and
sbb
add
add
push
sub
out
les
loope
divb
sti
mov
loope
std
aad
in
jmp
int
call
call
sbb
fcomi
adc
out
sbb
sbb
in
call
in
or
repnz
mov
jmp
in
sti
cld
repz
rcl
xlat
loopne
out
jmp
cli
or
or
or
lock
fimuls
sbb
faddl
std
in
sbb
add
das
adc
sub
into
int3
call
into
lret
scas
repnz
out
idiv
test
add
jecxz
mov
out
int
jmp
in
jecxz
adc
sbb
or
loope
adc
sbb
and
sub
adc
leave
loope
mov
xlat
ret
repz
lock
cli
out
add
leave
in
cmpxchg8b
int
or
rcl
shl
sbb
lock
aad
or
sbb
and
sbb
add
push
in
and
out
xor
sub
xor
test
shr
out
std
mov
iret
mov
fcmovb
add
dec
psrld
iret
out
lock
pop
in
cli
ljmp
adc
decl
out
add
sbb
sub
aaa
cmp
ret
mov
int
scas
mov
cmc
mov
out
mov
mov
icebp
in
or
add
out
jmp
push
fdivp
adc
repnz
hlt
sbb
sbb
rcrl
std
jecxz
adc
in
stc
or
pop
adc
sub
leave
icebp
in
in
ljmp
in
mov
dec
stc
ret
or
sti
fucomp
jmp
add
call
clc
or
movups
sbb
adc
and
push
sbb
sub
sub
pop
and
enter
in
clc
out
scas
jmp
in
jmp
aam
loopne
hlt
rol
div
shl
add
or
out
adc
into
xlat
jmp
add
not
sbb
sbb
sbb
clc
and
add
stc
adc
or
sub
or
call
lods
loop
icebp
hlt
in
in
iret
fsubr
clc
rcr
hlt
icebp
sar
cli
add
lret
pop
ficoml
repz
in
testb
aad
adc
icebp
sti
fsubp
icebp
adc
loope
sub
and
push
and
sub
sub
icebp
out
adc
into
mov
iret
lods
enter
xlat
out
out
stc
incb
repnz
fcmovnbe
lds
std
add
sti
leave
decl
invd
repz
not
loop
jmp
add
jmp
repz
out
in
cs
lock
and
out
mov
rcl
out
cmc
call
lock
mov
mov
fcomp
int3
in
or
add
out
incl
icebp
icebp
sbb
cld
adc
idiv
fsubl
sti
fldl
and
pop
add
or
sbb
or
xor
in
mov
vpavgw
mov
rcr
in
mov
mov
int3
add
clc
xlat
sar
lds
aam
or
add
or
sbb
xlat
out
and
and
adc
cld
adc
loop
cs
push
call
add
cmc
adc
mov
shl
rcr
sarl
shl
ret
lock
xlat
ret
in
or
cli
or
std
leave
out
int
call
adc
adc
loope
add
in
stc
repz
ljmp
cs
leave
cmpsl
ret
loope
cmpsl
mov
out
out
rcl
call
fcmovb
repnz
cmc
std
movb
or
loopne
or
loop
add
aam
adc
in
nop
repz
push
adc
out
and
xor
out
or
call
cmc
out
fsubp
repz
lret
repz
jmp
neg
or
roll
decb
iret
std
testb
or
or
adc
adc
add
hlt
jecxz
in
sbb
sti
or
jmp
cmc
or
push
in
fsubr
stos
shll
in
stc
out
mov
fldlg2
cld
loop
sti
out
out
shl
in
fiadds
fcmovnu
jecxz
in
into
or
add
loop
int
push
repnz
and
pop
out
or
pop
sbb
add
in
or
sub
mov
lods
test
xlat
ret
in
mov
lock
mov
add
add
fidivrl
icebp
push
jecxz
repnz
stc
sti
icebp
push
in
adc
call
pop
stc
clc
repnz
sub
call
ljmp
aaa
in
fsubrs
mov
fsubrs
out
cmc
enter
out
sti
fcmovnbe
add
out
std
out
or
icebp
leave
or
std
movups
pop
call
out
fsubl
hlt
ficoml
fistps
add
adc
push
add
add
xor
cmpsb
stos
loope
repz
jecxz
shr
out
fcmovnb
fstp
sarb
fildl
jmp
int3
rcr
add
repz
aad
iret
or
notl
sbb
add
xor
add
add
pop
and
sarb
idivl
xlat
std
mov
in
mov
enter
or
add
adc
int3
adc
aam
add
rcr
or
pop
fisttpl
testb
nop
sbb
ljmp
add
adc
fsubrp
jmp
lods
hlt
shl
loope
xlat
shl
fcom
lret
sarb
roll
aam
cli
lret
neg
or
loopne
into
add
rolb
adc
in
sbb
or
sti
clc
add
cmc
push
and
push
and
out
sbb
and
div
and
stos
lret
in
fisubrs
in
mov
aad
loopne
lret
shl
out
icebp
fcmovbe
or
fidivrl
cli
loopne
push
hlt
adc
movlps
aad
push
pop
fcoms
in
add
push
in
add
out
daa
add
icebp
icebp
add
add
sbb
out
mov
stos
mov
rcr
in
fucomi
mov
int3
jecxz
mov
cli
mov
or
adc
rol
pandn
adc
jmp
or
cld
sbb
sbb
or
sti
and
ljmp
out
ret
mov
mov
out
test
aam
not
iret
fildl
mov
in
add
lret
icebp
add
adc
jecxz
or
lock
es
adc
or
push
add
xor
xor
mov
out
in
xlat
aam
out
cld
mov
repz
leave
rcr
or
in
repnz
out
out
movlps
jecxz
push
sti
hlt
fstps
in
pop
add
lcall
es
add
pop
or
das
sub
ljmp
in
out
lret
out
int3
aam
hlt
loopne
mov
repz
jmp
or
roll
or
in
jmp
out
repnz
repz
or
and
adc
imull
add
add
icebp
xor
leave
jecxz
leave
shrl
loope
aam
mov
fucomp
fxtract
out
into
add
icebp
std
shl
add
push
in
push
or
loop
clc
jmp
or
add
sbb
in
in
in
repnz
pop
push
push
sbb
and
xor
adc
mov
in
stc
cmc
in
out
mov
les
fidivrs
loopne
in
or
call
psllq
ficompl
testl
and
sbb
cld
or
sub
clc
jecxz,pn
lock
push
xor
mov
icebp
aad
lret
repz
stos
repnz
ljmp
push
aad
shl
sti
add
loope
add
ror
fisttpll
aam
in
or
adc
repz
adc
adc
sbb
and
push
adc
add
das
pop
int
test
in
cmc
imulb
mov
mov
add
aam
sti
ljmp
int3
or
adc
in
sbb
negl
and
out
cmc
cld
pop
in
or
add
sti
prefetch
or
sbb
cmpsb
lret
loopne
lret
out
not
mov
sti
lock
fdivr
add
hlt
out
enter
hlt
test
push
add
adc
out
int
jmp
repnz
out
sbb
and
pop
sub
loop
sti
pop
pop
sbb
adc
daa
ss
aaa
test
cmpsb
fsubr
enter
ljmp
cld
sti
aad
fiadds
std
push
mov
fsub
fimull
loop
or
add
out
adc
out
repz
sbb
out
loope
and
out
out
sub
sub
pop
xor
adc
mov
out
cmc
enter
in
mov
iret
clc
rcl
aad
int
incl
stc
call
add
or
in
loop
sbb
or
out
or
or
add
cli
adc
and
and
add
and
or
add
cs
xor
fld
mov
test
jmp
int
mov
iret
shl
sar
ljmp
add
or
adc
fiaddl
sbb
cmc
loopne
cmc
cmc
cmc
and
and
and
or
pop
push
xor
repz
out
stos
shlb
iret
neg
loopne
sti
mov
ret
idiv
ret
in
flds
out
loopne
add
out
notb
out
sbb
fcoml
sti
sbb
repnz
out
std
jmp
add
add
sbb
xor
add
in
shl
stos
in
mov
stos
lret
fld
ljmp
add
stc
mov
in
add
into
fdivrp
lret
int
in
hlt
aam
or
jmp
adc
adc
ficomps
sbb
add
or
add
lock
test
in
not
fld
mov
sarl
lret
fcmovu
aam
hlt
add
aad
lds
add
add
out
add
adc
or
negb
or
in
adc
pop
or
add
call
hlt
sub
sub
out
in
sti
mov
cld
mov
aam
movl
sti
loopne
add
rcll
ljmp
sbb
out
jecxz
fninit
sbb
sub
mull
incb
sub
add
sub
shl
enter
mov
ret
rcr
mov
mov
idiv
fldl2t
sar
or
lock
cli
rcr
in
aam
jmp
sbb
jmp
es
sbb
sbb
das
and
or
adc
add
stos
lret
mov
mov
call
int3
shl
fdivp
rol
std
in
lret
into
pop
shl
or
xlat
or
repz
adc
sbb
fstp
call
add
push
out
ljmp
sub
mov
icebp
leave
lret
jmp
les
fucomi
repz
repnz
add
add
in
aad
or
add
repnz
adc
hlt
and
notb
cld
sbb
adc
icebp
out
and
sub
sarb
shl
lret
ljmp
repnz
sti
in
add
loop
jmp
adc
les
fists
or
push
call
repnz
loope
out
sbb
and
add
sub
add
sub
std
pop
ljmp
into
lods
scas
mov
scas
mov
int
std
mov
add
loop
loopne
add
sar
add
lock
cli
jmp
clc
add
add
adc
fdivp
repz
push
es
xor
and
or
repz
int3
out
fsubr
icebp
scas
lock
cli
in
fnstsw
lret
shr
mul
enter
xlat
or
lret
push
int3
or
loop
jecxz
add
rorl
or
clc
sbb
or
repz
std
icebp
out
add
or
xor
out
and
xor
adc
ret
aam
loope
bnd
imul
into
aad
mov
rcl
out
push
enter
adc
out
adc
stc
cli
fsts
sbb
fsubr
stc
and
sbb
fildll
icebp
cli
clc
sbb
add
sub
and
add
lret
cmpsl
out
loope
rol
iret
mov
shl
repnz
in
repnz
ret
shl
ffree
call
fstp
loop
int
add
fisttps
iret
sbb
or
fstps
fcmovnu
fcoml
loope
std
and
sti
pop
sub
or
or
sbb
sub
pop
out
and
fstpt
shl
xlat
in
clc
mov
mov
add
icebp
cli
out
or
sar
adc
clc
or
adc
add
add
clc
out
loop
loop
in
ljmp
lock
cmc
int3
mov
out
mov
call
mov
mov
push
or
jmp
add
jmp
or
adc
ljmp
fsubs
cld
repz
lock
sub
mull
adc
sub
push
div
lret
test
enter
int
mov
aad
mov
mov
out
jecxz
leave
rcl
or
aam
shl
sbb
sbb
adc
loop
loopne
call
pop
sbb
sub
or
sub
ret
mov
lret
mov
call
fmulp
in
aad
aad
fdiv
into
add
fldpi
in
out
fcomp
fisttpll
or
in
std
aad
repz
hlt
and
fstl
loope
add
jmp
jmp
adc
mov
mov
in
fidivs
iret
mov
stc
aad
clc
loopne
std
clc
loopne
fxch
adc
into
adc
jecxz
adc
jecxz
or
pmullw
call
notl
out
stc
jmp
clc
cld
and
in
icebp
adc
add
mov
int
in
loop
lods
mov
stc
aad
aad
lock
lret
loop
sti
rol
ret
add
jecxz
jmp
jecxz
in
aad
hlt
fbld
push
adc
sbb
sbb
repz
and
and
std
add
adc
out
enter
out
lds
cmc
leave
cmc
cli
mov
loopne
add
call
std
fdivp
add
adc
out
add
sbb
or
add
pop
cld
out
icebp
and
cli
and
push
and
xor
and
lods
loop
loop
sarb
rcl
scas
out
call
in
shl
hlt
mov
add
repnz
or
pop
sar
adc
sti
ljmp
push
add
add
or
sub
xor
pop
adc
and
cmpsb
loopne
ret
enter
rol
rol
out
idiv
mov
cli
fsubp
clc
fsubrp
fisttpll
out
adc
sar
adc
push
pop
call
sbb
in
stc
and
and
std
sbb
std
jmp
push
ss
in
rol
out
loop
mov
mov
idivl
fmuls
push
add
or
enter
or
call
adc
aad
sbb
loope
sbb
loop
loope
or
std
add
jmp
add
cli
sub
movntps
fmul
rcr
stos
stos
mov
sti
clc
mov
mov
fcmovbe
add
ret
not
fcomip
or
add
adc
or
idiv
push
lock
ljmp
and
loop
clc
and
idiv
pop
jmp
incb
and
mov
out
rol
out
scas
rcl
int3
repz
mov
rcr
repz
fcos
add
jmp
or
adc
incl
ljmp
adc
sbb
sbb
push
icebp
cli
add
stc
call
in
or
add
int3
mov
int
shl
enter
mov
fst
fincstp
fadd
hlt
aam
or
cli
jmp
repnz
adc
rcll
push
mull
cli
loopne
and
cli
add
sbb
or
add
lock
repz
loop
jmp
ret
jmp
call
neg
cmc
repnz
ret
mov
cli
in
add
icebp
shl
or
add
fdiv
adc
pop
cli
cmc
jmp
fistpl
loopne
add
or
jmp
jecxz
in
and
adc
pop
lret
enter
lods
ljmp
shr
call
icebp
aad
neg
sar
mov
lret
ret
push
jmp
notb
adc
sbb
or
in
clc
std
fisubl
out
jecxz
and
sbb
or
ljmp
ret
lock
fmul
fmul
sar
fildl
xlat
jecxz
add
fcmovne
or
call
in
loope
lret
loope
in
adc
out
cmc
pop
repz
push
push
add
out
jmp
sbb
pop
add
iret
mov
mov
ret
fdivr
in
lock
call
out
lock
jmp
mov
or
loop
aad
repz
maskmovq
notl
out
in
and
add
sbb
cli
loope
and
xor
push
sub
cmp
in
fucomip
scas
loope
into
lods
cmc
mov
out
sar
mov
flds
dec
loopne
push
mov
add
into
icebp
add
jmp
or
adc
testb
fildl
add
sbb
push
cmc
jmp
sub
cli
xor
add
out
and
into
mov
lods
shl
into
repnz
enter
fdiv
sarb
cld
add
in
ljmp
hlt
in
add
pop
adc
lock
sbb
shlb
adc
pop
and
es
push
and
cli
or
jmp
sub
std
lock
xor
into
int
shr
icebp
div
mov
shl
mov
ror
aad
icebp
hlt
add
std
enter
repz
or
jmp
stc
clc
std
fstpl
sbb
sbb
adc
icebp
sbb
adc
std
stc
in
sub
out
sbb
les
rcl
divl
cmc
mov
cli
mov
add
fcomip
or
loop
add
in
ficoms
rcl
out
push
lock
out
repz
push
xlat
or
pop
in
add
loop
loop
sbb
and
call
out
xor
xor
rcl
into
loope
lds
enter
add
fldl
ret
lds
rcl
fcoml
rcl
psubw
adc
hlt
pop
sbb
lock
cld
or
adc
ljmp
sbb
xor
and
iret
fucomi
scas
repnz
out
leave
clc
ljmp
sti
add
push
mov
out
ljmp
adc
lock
cli
call
mull
fsubrp
in
in
hlt
cli
sbb
add
sbb
and
adc
in
xor
sub
loop
lds
int
ret
int3
mov
add
loope
pop
or
stc
fdivrp
fimuls
fsubr
adc
pop
pop
icebp
fistpl
repz
in
repz
and
fcomip
cld
fdivrp
sbb
or
sti
add
xor
or
in
lds
mov
rol
out
lret
mov
add
fcompp
int
filds
stc
add
jmp
loop
std
add
or
jmp
add
in
out
hlt
cli
icebp
out
add
jecxz
adc
adc
push
sbb
and
and
sub
mov
mov
ret
in
iret
int
repz
fcmove
sti
shl
roll
add
or
add
or
iret
add
loopne
jmp
nop
loope
testb
es
call
adc
and
shl
in
mov
hlt
stc
mov
loope
int3
xlat
in
mov
enter
add
adc
fisttps
idiv
neg
pmaddwd
xlat
push
and
add
or
sub
add
or
sub
lret
fdivrl
mov
stc
int
fdivs
lock
cli
repz
sti
ret
int
jmp
adc
fucomip
jmp
in
pop
cmc
repz
out
push
loopne
or
or
sbb
sub
add
adc
and
add
int3
loopne
lods
in
ret
test
cli
clc
iret
sarb
ror
rcl
rcr
or
out
add
or
adc
in
iret
adc
cmc
adc
jmp
add
and
cld
push
add
filds
add
push
and
xor
or
iret
stos
shrb
scas
ret
hlt
repz
in
into
loopne
ffree
cmc
mov
add
add
dec
or
add
rcl
lret
in
add
pminsw
adc
fucom
sbb
out
or
cli
std
or
sbb
or
xlat
in
lret
loop
out
out
ljmp
int3
mov
in
clc
aad
leave
cld
les
in
iret
fdivrp
incl
sbb
or
div
cli
adc
adc
pop
mul
sub
daa
pop
jmp
adc
int
ljmp
jecxz
repnz
enter
hlt
fucomp
clc
or
rol
add
push
or
repnz
incb
into
rcl
icebp
shl
or
pop
adc
jmp
push
cld
sti
push
notb
cld
in
sbb
add
xor
in
pop
add
into
ror
mov
loope
out
lret
into
into
mov
rcl
idiv
sti
lock
pop
leave
movl
incb
fsub
add
cli
in
fsubp
sbb
stc
fiadds
out
sbb
hlt
cli
and
push
xor
cs
movsb
in
ror
movsl
leave
in
xlat
aam
cmc
rol
out
fstp
test
add
add
or
enter
add
fcomip
out
shl
pop
adc
fiaddl
in
sbb
imul
jmp
pop
es
pop
push
push
or
add
sbb
or
ljmp
xor
mov
idiv
mov
xlat
shr
in
jmp
hlt
out
repnz
ret
fucomip
adc
out
push
in
rolb
cmc
icebp
idiv
and
sbb
fcomip
out
and
std
or
out
pop
and
add
xor
out
call
imul
repz
leave
leave
aad
out
idiv
sarb
ret
mov
cli
femms
movl
sbb
adc
icebp
push
repnz
fdiv
and
icebp
sbb
sbb
sbb
and
sub
add
and
lds
lds
fdivl
add
rol
icebp
add
test
int
adc
out
repz
repz
loope
out
aad
call
cld
push
add
and
loope
stc
or
or
pop
cld
adc
adc
pop
scas
into
mov
mov
rcl
in
int3
stc
xlat
mov
add
or
neg
or
cli
leave
add
stc
adc
loope
loop
out
shr
out
adc
repnz
cmc
push
and
lock
adc
clc
add
sti
push
nopl
xor
xor
fucomp
mov
int3
enter
jmp
iret
aad
in
mov
cld
clc
aad
pop
add
mul
fucomip
call
adc
in
or
in
hlt
loop
std
add
sbb
loopne
or
sub
or
and
pmaxsw
lret
iret
enter
cli
mov
mov
mov
jmp
loopne
repnz
add
or
loope
cmc
or
push
pop
out
in
sti
xlat
sbb
add
paddb
xlat
and
call
push
sbb
or
or
cs
ss
loope
out
repnz
in
out
int3
enter
in
mov
hlt
pop
aad
mov
int
out
in
add
repnz
into
sbb
pop
or
sbb
push
adc
and
ljmp
cli
push
add
clc
int3
lret
enter
cmc
ret
mov
mov
idiv
lret
in
mov
fiaddl
hlt
jmp
aam
mul
out
sti
out
adc
push
lock
adc
clc
in
sbb
flds
sbb
loopne
add
clc
fcomip
add
ljmp
adc
enter
shl
fdiv
lock
jmp
mov
std
loopne
add
cli
loop
or
int3
or
loope
in
pop
out
call
stc
sbb
add
in
sub
in
negb
sbb
cld
daa
sub
mov
loopne
lock
ret
enter
jmp
out
in
out
mov
jmp
stc
add
enter
in
psraw
shr
cmc
or
push
pop
and
and
and
adc
and
xor
loope
shll
enter
out
icebp
add
out
loopne
repz
in
leave
call
shl
aam
sbb
or
pop
repz
loope
adc
and
adc
clc
pop
and
and
mov
aad
xlat
jmp
mov
cld
rcr
jmp
int
clc
aam
rcr
clc
loopne
in
add
add
jmp
negb
out
adc
cld
hlt
or
daa
sub
repnz
leave
cmpsl
loopne
mov
xlat
mov
ljmp
cld
aam
ret
mov
or
ret
out
call
loopne
adc
xlat
hlt
fstps
out
in
jmp
jmp
std
add
in
and
hlt
jecxz
add
sbb
xor
in
out
lcall
lock
in
mov
repz
lret
mov
in
fst
fsub
out
fsubr
jmp
loopne
jmp
adc
rcr
sbb
repz
push
hlt
and
sti
stc
push
xor
or
sub
sub
fidivs
in
mov
hlt
mov
out
mov
jmp
out
stc
fcmovbe
out
int3
pop
add
fsubr
fucomp
ljmp
sbb
lock
cli
fistps
push
in
sbb
cli
sub
std
and
add
add
ror
repnz
mov
ret
sti
clc
fdivr
enter
fnsetpm(287
fidivrl
aam
or
add
add
add
adc
adc
sbb
out
rclb
out
and
in
sbb
loop
loope
and
decb
add
or
xor
in
in
fistpll
mov
mov
loope
cld
push
jecxz
loopne
stc
ret
fimull
cmpps
or
loop
jecxz
out
ljmp
rcll
std
ficoms
notl
push
add
ljmp
push
add
add
add
shl
call
out
leave
rcl
cld
mov
xlat
mov
add
sti
jmp
loop
in
add
add
adc
jecxz
xlat
or
jmp
nop
and
hlt
add
and
pop
out
sbb
in
daa
cld
xor
or
add
cmpsb
lret
shr
aad
lods
iret
hlt
out
in
mov
aam
rol
xlat
loop
add
cmc
dec
or
rcr
int
or
lock
in
push
jmp
sti
negb
and
sbb
cld
stc
in
add
push
or
push
sub
imulb
sub
in
fucomip
enter
repnz
mov
in
in
out
mov
cld
out
enter
jmp
or
or
testb
sti
cld
sbb
cmc
out
pop
in
jmp
adc
out
out
sbb
jmp
call
test
scas
sti
mov
int3
hlt
lret
cli
jecxz
out
lock
filds
push
stc
jmp
repz
loopne
adc
adc
in
xlat
adc
stc
and
negl
add
in
daa
add
xor
sub
repz
and
fistpll
hlt
in
mov
iret
cmc
fdivr
xlat
cld
fcmove
in
add
repnz
incl
aad
or
out
ud2
add
in
negl
pop
fcoml
add
sbb
or
out
ljmp
das
sbb
in
icebp
pop
and
ret
loopne
mov
in
std
in
fucomi
repnz
cli
fcomi
cli
add
div
loop
push
add
adc
repnz
or
jmp
sbb
pop
fadds
clc
sbb
fdivr
adc
sub
sti
daa
and
pop
in
and
add
loop
hlt
in
fbstp
out
mov
test
or
shl
adc
or
out
sti
call
add
cli
clc
sbb
push
and
sbb
sbb
adc
repnz
ror
jmp
enter
mov
jmp
sti
shl
not
stc
pop
fndisi(8087
enter
call
push
adc
rorb
ficoml
repz
adc
out
and
and
idiv
and
jmp
adc
or
out
fsubr
scas
mov
not
leave
in
scas
in
out
fdiv
add
loope
std
add
ljmp
cld
add
int3
adc
adc
push
out
sbb
sti
sti
call
push
add
adc
add
add
jmp
and
sub
rep
ret
div
shl
xlat
hlt
mov
loope
fcmovne
cld
shl
loop
add
into
add
pop
aad
add
out
jmp
out
pop
in
pop
push
stc
clc
and
daa
or
pop
push
clc
sub
sub
and
xor
in
fcomip
mov
leave
xlat
mov
iret
in
divl
add
fdivr
loopne
out
ret
add
rclb
repnz
in
in
out
std
out
lock
fdivr
or
adc
stc
add
or
out
and
jecxz
fldt
in
mov
jmp
fst
ljmp
sti
mov
in
iret
int3
push
pslld
iret
adc
loope
add
adc
or
or
push
out
push
and
or
jmp
in
adc
rol
in
int3
call
mov
idivb
roll
ret
ret
out
add
rcl
repz
out
int
imul
or
or
out
xlat
loope
add
loopne
and
sbb
testb
or
repz
or
mov
jmp
ret
loop
fdivrs
ret
jecxz
roll
out
stc
add
fsubrp
adc
iret
push
jmp
div
or
fisttpl
cmc
adc
sbb
std
cli
icebp
sbb
fdivrp
loop
sub
and
add
add
or
ret
call
scas
aam
enter
mov
iret
add
mov
fcmovbe
fcmovnb
in
loope
into
std
add
aad
in
loope
ljmp
or
and
adc
add
out
or
in
std
cld
or
sub
out
clc
out
shll
icebp
into
loopne
repnz
call
jmp
push
add
adc
clc
fucompp
icebp
add
testb
adc
add
add
sbb
push
pop
daa
lock
out
sarl
leave
fcmovb
ljmp
std
in
add
out
push
out
or
add
int
repz
leave
aam
ljmp
add
stc
and
div
pop
icebp
push
daa
loop
cld
and
add
out
xor
out
mov
icebp
lods
clc
in
repnz
lret
fdivr
jmp
in
rolb
sti
loope
loopne
lret
in
fcoml
loope
jmp
sbb
or
or
and
and
and
cli
in
and
or
std
adc
or
sub
add
jecxz
mov
lret
in
ret
aad
rcl
int
int3
int3
add
fiadds
cld
loope
xlat
fimuls
idiv
int
add
or
add
call
jmp
frstor
adc
add
daa
std
negb
pop
daa
sub
ljmp
push
cmc
adc
fcomp
in
out
jecxz
rcr
into
in
iret
std
enter
add
bnd
jmp
leave
cli
push
call
adc
rcll
sar
rclb
std
push
or
sbb
jmp
psubb
sbb
pop
out
sub
out
daa
cld
adc
and
jmp
test
mov
loope
aam
leave
ljmp
loope
cli
rcr
call
loope
loopne
jecxz
repnz
int
add
out
xlat
sbb
psllq
fcoms
cmc
and
add
es
and
add
pop
pop
sbb
in
ret
in
icebp
jmp
lret
int
call
add
out
ret
rcl
ret
push
or
add
cld
add
push
out
sbb
add
adc
sbb
lock
and
std
hlt
repz
std
add
and
and
scas
ror
repnz
mov
shrl
idivb
shl
stc
shl
jmp
std
fimuls
clc
fdivrp
hlt
int3
ljmp
cld
in
repz
add
and
adc
or
daa
das
adc
add
rol
in
ljmp
stc
fxch
in
xlat
sarb
add
call
out
std
call
icebp
por
icebp
into
aam
fprem
and
adc
sbb
loope
repnz
out
add
or
add
fmulp
out
test
std
out
lret
repnz
cld
add
cmc
add
or
add
or
fmul
add
in
lock
add
cmc
push
adc
adc
add
and
or
and
and
cld
sub
adc
test
scas
int3
shl
ret
fcmovbe
lock
faddl
xlat
mov
fdiv
shl
jecxz
std
ret
cli
fmul
fsin
fldl
jecxz
pslld
aad
repz
fst
adc
and
pop
and
pop
std
ljmp
and
add
and
pop
in
test
jmp
loopne
fidivl
mov
cli
loopne
ret
add
fdivr
add
clc
fcomp
fisttpl
lret
out
aad
call
in
sbb
std
shll
and
push
repz
out
or
sbb
ljmp
or
add
into
lret
jecxz
loopne
mov
mov
out
fptan
std
aad
or
jecxz
rcl
leave
pop
ror
loopne
repnz
or
sbb
testl
in
sbb
sub
in
or
jmp
idivb
ljmp
mov
rcr
mov
int
shl
loopne
rolb
mov
leave
ljmp
or
xlat
cli
adc
adc
sbb
out
lock
or
in
add
or
adc
stos
fdivrl
scas
scas
stc
cmc
leave
shl
shr
add
rolb
loop
repnz
loopne
add
mov
sti
in
out
out
adc
cli
adc
or
loopne
and
hlt
fldl
pop
loope
cli
sti
or
and
and
ljmp
lret
in
scas
lods
movsl
into
shl
in
fcmovne
xlat
std
enter
rcl
fdiv
repnz
filds
out
lret
loop
in
add
sbb
in
stc
jmp
fucomi
add
adc
repz
das
and
in
sbb
mov
mov
leave
iret
loop
mov
out
cmc
rcl
enter
mov
pop
les
add
or
enter
ljmp
out
pop
cmc
out
loopne
adc
sbb
push
sbb
adc
or
push
in
testb
test
stos
call
loop
out
out
les
neg
rcl
out
add
dec
push
or
fstl
lock
add
add
cli
fimuls
incb
and
loop
fstpl
and
add
and
repz
ljmp
shl
loop
stc
rol
xlat
repz
ret
filds
std
or
leave
out
in
or
aam
fstp
repnz
sti
sbb
clc
and
push
cli
sub
in
add
sub
and
add
adc
int
mov
ret
mov
fdivs
fsub
out
clc
hlt
cld
aam
cld
call
jmp
repz
aad
call
add
loope
out
push
sbb
sbb
xor
and
out
mov
out
sarb
call
ror
neg
aad
or
ret
fnsetpm(287
sti
fucomip
sti
adc
div
out
lock
aam
jmp
add
fistl
psrad
sti
std
decl
sbb
in
push
es
lock
call
in
mov
in
out
xlat
out
cmc
shl
shr
cli
enter
lret
fadd
loop
add
incb
lock
sbb
pop
fdiv
pop
pop
std
sbb
pop
push
push
add
out
push
sub
repz
and
ret
iret
mov
lods
out
leave
leave
test
call
mov
loopne
loop
fildl
in
cli
leave
int
lret
or
shl
aam
adc
add
cli
rcrl
loope
sbb
jmp
out
sub
sub
adc
lock
sub
in
mov
mov
repz
aam
stc
mov
out
lret
fdivrs
pop
jecxz
f2xm1
in
or
out
cmc
adc
rcrl
add
cli
jmp
sbb
icebp
fdivr
pop
es
and
sub
pop
imul
out
add
and
sub
daa
lret
int
fneni(8087
out
mov
shr
icebp
jmp
cli
jmp
jmp
ret
fcmovu
shl
pop
ljmp
or
xlat
negb
adc
pop
add
sub
sub
push
jmp
pop
add
int3
lock
mov
mov
call
cld
lret
lret
add
clc
fsubp
repnz
add
or
or
dec
or
in
add
push
pop
sti
repnz
ljmp
add
stc
pop
sub
repnz
or
stos
out
out
rcr
in
test
mov
mov
out
push
rcl
incb
incl
fucomip
rcl
jmp
pop
adc
icebp
aad
sbb
icebp
idiv
sub
sub
pop
add
and
stos
scas
out
mov
mov
mov
mov
fst
fxam
std
leave
movb
out
push
jmp
in
push
shr
adc
std
repz
cld
sbb
adc
fcoml
or
or
sub
adc
and
mov
out
ror
enter
fnstcw
add
cli
rol
or
or
into
jmp
icebp
icebp
call
add
ficompl
std
push
add
pop
sub
pop
sbb
push
or
adc
xor
int
fucomi
lock
in
repnz
mov
cld
loopne
ffreep
add
loope
or
out
iret
jmp
rcr
in
fsts
pop
adc
add
cmc
push
add
add
and
stc
sub
pop
add
add
or
lret
shrl
in
ret
mov
mov
mov
cld
test
enter
aam
or
adc
fmuls
call
sbb
and
add
cs
add
ljmp
scas
fcomip
lods
call
mov
ljmp
clc
lret
not
iret
icebp
mov
or
in
lds
int
out
repz
sbb
pop
fsubr
stc
or
in
or
or
out
and
and
sub
jmp
test
mov
fdivr
into
ret
sti
clc
sarb
in
ljmp
or
rcr
fyl2x
pop
adc
sti
icebp
hlt
aad
in
faddl
loope
fcoml
in
sbb
and
push
sub
push
and
mov
scas
aad
mov
sti
icebp
xlat
clc
aam
out
out
icebp
xlat
or
add
adc
sbb
or
imul
cli
pop
adc
adc
cli
daa
adc
out
adc
or
adc
test
mov
ror
out
icebp
iret
ror
icebp
out
std
loopne
rcl
roll
repnz
add
into
loope
icebp
hlt
shl
aad
loope
shr
cli
cld
sbb
and
in
and
in
call
and
xor
and
call
in
lds
in
ret
int
or
sar
stc
movb
out
iret
std
testb
repz
clc
cli
fdivp
fiaddl
ficomps
cli
adc
stc
adc
sbb
and
cli
sbb
pop
add
and
mov
mov
mov
jecxz
into
mov
idiv
loopne
in
in
shl
out
in
lret
cli
add
repnz
lock
jmp
or
out
lock
add
pop
and
pop
adc
cli
out
add
sub
pop
or
jmp
out
ffreep
stos
jmp
loop
hlt
icebp
fnstsw
in
hlt
mov
enter
add
or
adc
adc
shr
out
add
stc
or
or
fsubr
sti
in
in
add
hlt
push
sub
and
and
add
rcr
rcl
cmc
cmc
repnz
sti
pushl
mov
fdiv
hlt
leave
loop
lock
cld
adc
std
adc
lret
mul
fdiv
or
and
out
mul
nop
testl
in
out
or
or
mov
mov
mov
in
in
lock
mov
into
iret
repnz
ret
push
or
jecxz
out
add
out
adc
sbb
add
call
adc
sbb
or
pop
cmc
push
hlt
daa
sarl
loop
mov
not
iret
aam
leave
in
cli
mov
call
fdivr
xlat
ljmp
mul
in
push
lock
paddw
push
add
adc
sbb
sub
push
ljmp
xor
das
sbb
loope
icebp
jecxz
enter
jmp
fistpll
fcomip
in
jmp
lret
fisttps
dec
std
std
add
push
or
into
add
push
nopl
sbb
loop
es
es
xor
in
call
out
and
into
jecxz
int
shl
enter
int3
xlat
mov
mov
add
in
out
add
push
out
out
add
or
sbb
shl
add
push
fists
negl
out
and
sbb
and
push
pop
das
xor
sti
sbb
hlt
or
out
mov
enter
mov
fsub
sti
test
repnz
fcom
cmc
clc
lret
call
out
iret
repnz
or
sbb
cli
loopne
jmp
jecxz
push
jmp
pop
stc
and
ljmp
add
lret
mov
out
enter
mov
rcr
shl
out
cld
ljmp
roll
loopne
call
or
adc
loop
adc
pop
and
daa
in
and
mul
psubsb
add
xor
or
mov
enter
int
out
clc
repz
cld
lock
test
call
jecxz
add
adc
rcll
cmc
xlat
out
fdivr
adc
notl
pop
or
add
push
das
and
add
in
mov
ret
les
std
int3
icebp
jmp
hlt
out
mov
loop
enter
out
add
cld
testb
fisttpl
and
push
push
fistps
cli
es
std
jmp
std
add
std
add
sub
ljmp
lret
rcl
into
in
ret
repz
mov
stc
fabs
sar
in
add
sti
add
in
adc
loopne
rcl
fcom
push
or
pop
adc
sti
and
stc
in
sbb
or
pop
in
maskmovq
idivl
int3
ljmp
mul
in
ror
out
std
mov
mov
stc
mov
ret
out
out
add
shl
repz
imul
bnd
xlat
or
fptan
loop
sbb
add
cmc
daa
in
and
xor
add
out
add
daa
cmpsl
out
iret
rol
shr
clc
out
shr
mov
repz
jmp
mov
cld
ret
fisttpl
repnz
out
or
fdiv
lock
or
cli
repz
add
sti
sub
sbb
or
es
xor
out
call
scas
out
mov
sti
jmp
repnz
les
ffree
out
in
jecxz
or
or
in
out
not
out
or
hlt
fdiv
sti
adc
push
adc
or
xor
in
or
es
cmpsb
mov
jecxz
aad
lock
fidivrs
sar
sar
add
pop
or
repnz
rcl
xend
in
push
pop
fists
or
mul
fistl
add
daa
das
movups
and
loop
out
mov
fsubrp
mov
mov
into
in
loop
vpmaddwd
into
sti
ljmp
aam
out
out
stc
sbb
fldenv
sbb
icebp
and
jecxz
call
sbb
lock
adc
cmp
lods
mov
call
fstpt
push
pop
mov
fimuls
add
into
in
into
fsub
aam
add
jecxz
push
adc
flds
adc
in
and
cli
cli
add
or
cld
in
sbb
and
sbb
adc
xor
lret
out
jmp
lock
lret
ret
jmp
aam
icebp
out
mov
jmp
add
out
lret
add
add
sbb
nopl
repnz
icebp
jecxz
adc
push
adc
and
cs
or
adc
mov
xlat
aam
into
shlb
int3
mov
repz
fsubrp
leave
clc
jmp
adc
aad
push
adc
adc
pop
stc
sbb
push
or
or
sbb
add
in
lock
out
decl
mov
icebp
loop
mov
in
jecxz
icebp
out
stc
jmp
in
repz
into
add
add
faddl
or
push
add
cli
icebp
ror
ljmp
adc
hlt
repnz
in
and
loopne
lock
std
add
loop
xor
and
jmp
out
leave
shrl
mov
cmc
mov
rol
neg
fcmovb
or
add
in
in
shl
fmuls
cmc
adc
adc
pmovmskb
pop
and
adc
wbinvd
or
sub
repnz
sbb
into
test
lods
hlt
shl
in
sarl
call
loope
cli
clc
fpatan
inc
sti
jmp
add
out
adc
push
adc
adc
jecxz
adc
ljmp
add
sub
mov
in
vpmulhw
mov
repnz
ljmp
mov
int
pop
ret
fucomip
aad
into
adc
repz
rorb
in
in
lock
fcompl
icebp
sti
pop
loopne
pop
add
stc
or
sub
adc
sub
ret
mov
lock
icebp
mov
call
int
int
mov
add
loopne
enter
cld
add
repnz
adc
or
sbb
and
in
add
sbb
cmc
ror
lret
repnz
cmc
mov
test
neg
lret
add
ret
in
lock
repz
add
out
add
sti
fmulp
loopne
adc
shl
std
in
fsts
jmp
add
add
std
add
jecxz
sbb
in
pop
pop
push
adc
push
or
ret
in
in
les
jmp
mov
shr
int3
fcomi
mov
cmc
mov
add
icebp
adc
call
repnz
loopne
cmc
add
out
pop
push
adc
stc
or
add
add
sbb
int3
shr
lret
shl
lock
hlt
lret
repnz
icebp
aad
icebp
icebp
push
clc
lret
icebp
lret
cmc
in
rcr
or
stc
call
jmp
sbb
es
cli
push
neg
sbb
std
jmp
adc
xor
sbb
add
out
repnz
rcl
aam
stc
leave
jecxz
fstpt
testl
out
fisttps
add
or
push
ljmp
sbb
sbb
sub
adc
or
add
jmp
hlt
sub
leave
in
out
mov
int3
leave
mov
divb
mov
sti
fmul
loopne
loopne
out
add
add
out
jecxz
hlt
adc
in
or
fisttpll
fst
adc
std
push
sbb
pop
cli
and
daa
daa
in
sub
ss
jecxz
in
cmc
jecxz
xlat
fcmovu
mov
mov
fnsave
enter
or
lret
loopne
icebp
cmc
or
or
sbb
out
jmp
fimull
or
fsubp
loop
add
sbb
adc
or
cs
add
mov
int3
mov
scas
rol
test
mov
sti
jmp
mov
or
stc
call
decl
in
repz
clc
ljmp
sti
repnz
std
negb
stc
cli
out
in
add
push
and
or
xor
lret
mov
scas
aad
rol
loop
mov
fucomi
hlt
leave
sarb
aad
hlt
loope
or
lret
ljmp
pop
push
or
sbb
or
sbb
in
or
adc
lcall
and
or
ljmp
and
notb
mov
leave
repz
idiv
in
shr
lock
icebp
mov
loopne
ret
in
loopne
ret
dec
adc
loop
lock
adc
rcr
adc
push
or
cld
push
sbb
push
sbb
sbb
sbb
and
out
or
iret
shl
scas
cmpsb
lds
fdiv
jmp
leave
ljmp
in
sti
ret
jecxz
mov
repz
lock
or
notb
neg
lock
fsubrp
adc
ljmp
jmp
add
lock
mov
stos
lock
scas
loope
in
neg
clc
fprem
mov
icebp
fnstsw
ret
add
add
pop
out
pop
add
cmc
cmc
sbb
fldenv
cmc
repnz
sbb
sbb
or
sbb
sbb
adc
sub
ffreep
scas
lock
mov
mov
shl
cli
fnstsw
or
ficoml
iret
push
adc
iret
in
push
sbb
adc
aad
cli
sbb
sbb
add
pop
adc
sbb
sub
or
sub
mov
shrb
fnstcw
in
aam
int3
repz
icebp
mov
or
decl
jmp
std
add
lock
ljmp
rclb
sbb
adc
and
es
add
sbb
sub
hlt
daa
cmp
out
icebp
shlb
into
xlat
mov
mov
in
or
fldl
lret
rcr
repnz
icebp
adc
sbb
adc
and
pop
sub
sub
adc
out
out
repz
add
sub
loope
test
out
call
fucomi
clc
clc
loope
cmc
sarb
mov
loopne
fadd
stc
shr
jmp
call
add
push
es
sub
std
xor
leave
int
lret
lods
ret
xlat
scas
xlat
in
mov
rcr
lock
mov
std
out
add
jecxz
push
lret
loopne
add
ljmp
imul
and
sbb
add
add
sbb
ljmp
xor
in
xor
mov
shl
jecxz
rol
lret
mov
mov
fimuls
ljmp
iret
pop
int3
pop
adc
or
add
in
fisubl
add
push
sti
adc
stc
push
cld
adc
clc
cs
decl
push
xor
mov
cmpsb
hlt
lds
leave
sti
sar
in
repz
incb
xlat
fadd
or
or
cld
add
or
clc
adc
in
aad
std
cmc
adc
sti
pop
push
repnz
push
out
lcall
lock
das
add
add
leave
iret
mov
ror
stc
mov
out
mov
aam
mov
icebp
push
flds
loop
fldpi
in
jmp
loope
add
jecxz
hlt
ljmp
mov
add
adc
fisubs
adc
call
sti
add
add
icebp
push
ss
les
ret
loope
jmp
into
repnz
fdivl
lock
pop
stc
jmp
call
shl
in
out
pop
adc
negl
out
adc
loopne
idiv
sti
out
or
sbb
or
sub
mov
iret
iret
jmp
stos
mov
cld
iret
fcmovu
jmp
out
rol
repz
out
jmp
out
lock
iret
add
hlt
or
fcmovu
cld
clc
sbb
adc
or
sbb
and
sub
add
ljmp
ljmp
stc
mov
mov
cli
enter
lret
out
or
add
out
lret
sti
or
ljmp
in
sbb
and
sbb
sub
or
push
cli
in
ss
scas
repz
jmp
lret
xlat
fsubr
mov
ret
ret
fisttpl
call
in
push
clc
lock
cld
adc
loop
lock
or
and
std
sbb
sbb
daa
lock
loop
mov
mov
icebp
ret
fadd
iret
fldl
cld
fsub
rcr
fadds
int
loope
loopne
out
repnz
repz
out
cmc
out
aam
fisttpll
sbb
adc
std
pop
push
pop
in
sbb
push
call
out
or
in
lods
loopne
sarb
into
jmp
mov
sti
sarb
repz
or
leave
call
in
or
fldlg2
icebp
ljmp
out
stc
out
in
add
or
sub
femms
add
or
or
mov
leave
iret
icebp
sti
mov
leave
rcr
fdivrs
rolb
mov
decb
jmp
loope
jmp
add
ljmp
sbb
or
adc
in
sub
lock
cld
and
shl
int
imul
mov
fdivr
mov
iret
repz
add
int
jmp
shr
clc
xlat
jecxz
or
jmp
notb
adc
and
sub
adc
stc
fnstsw
sub
repnz
and
ret
out
int
mov
int3
shl
hlt
in
mov
mov
sti
pop
add
lret
out
out
icebp
adc
pslld
sbb
bnd
push
sbb
sbb
sbb
push
or
or
adc
add
int3
jmp
iret
mov
ror
leave
cmc
into
in
jmp
sti
hlt
loopne
rcl
stc
jmp
enter
out
in
pop
or
jmp
cli
in
in
clc
fucomp
pop
jmp
repz
ljmp
add
xor
stos
call
jecxz
ret
idiv
ljmp
loop
cli
icebp
loopne
mov
lret
ljmp
or
or
cli
shl
fmull
add
lock
add
add
jecxz
or
sbb
or
call
mov
sti
mov
fidivrs
ret
shr
cli
leave
or
ljmp
adc
or
shl
cli
out
sbb
add
sbb
adc
clc
es
call
and
fildll
hlt
loope
icebp
leave
std
sar
cld
loopne
fcmovnbe
stc
icebp
stc
cld
add
leave
call
add
pop
loope
cli
or
out
call
adc
pop
adc
loopne
add
add
stc
sub
sbb
adc
daa
sbb
out
lods
lods
test
loope
out
sti
std
jmp
add
pop
sar
cmc
cmc
add
add
or
adc
out
loope
icebp
aam
push
adc
fdivr
aad
add
push
adc
adc
in
sub
pop
sub
and
mov
mov
jecxz
lret
out
into
leave
cld
mov
shr
shl
aad
out
adc
icebp
or
out
pop
mul
adc
hlt
clc
sbb
sbb
cli
add
std
sbb
and
or
sub
sub
fsubl
ret
mov
enter
lret
mov
ret
fprem1
fadd
push
idiv
clc
out
loopne
add
pavgb
pop
sysret
adc
lock
repnz
out
jecxz
adc
and
clc
or
hlt
jmp
in
add
and
push
pmovmskb
stos
stos
mov
stos
shl
enter
mov
mov
out
mov
cmc
fucomi
add
add
ljmp
adc
hlt
lock
aad
stc
adc
adc
loope
and
repz
ljmp
in
das
repnz
shl
mov
ret
call
out
in
std
fxch
add
mov
add
leave
or
clc
fstp
adc
into
repz
in
cld
stc
add
adc
sbb
sub
in
or
add
in
or
in
mov
ljmp
cld
out
jmp
ror
incb
in
in
incb
enter
hlt
jmp
loope
rcrl
in
aam
fsubrp
and
imul
sbb
testl
jmp
pxor
push
and
or
pop
and
shl
mov
ffree
int
in
fld1
mov
rcl
mov
fcom
fcmovnbe
loop
add
leave
aad
add
fucomp
shr
out
add
add
stc
or
or
negl
hlt
and
mull
push
daa
adc
imulb
push
std
sub
sbb
fmul
fsubp
ljmp
xlat
repnz
lret
in
sarb
enter
add
sar
lret
shl
out
shl
cli
out
fistpl
aam
in
std
repz
psubq
or
adc
mul
or
std
adc
jmp
hlt
and
lret
in
iret
scas
jmp
mov
fdivp
fstp
add
faddl
add
clc
aad
or
lock
icebp
in
adc
shl
adc
or
cld
fistps
jecxz
hlt
std
fdivp
add
and
and
add
push
add
adc
adc
loop
fcmovnu
lods
lret
in
in
shl
ret
cmc
in
test
in
add
call
std
add
iret
in
in
or
mul
adc
faddl
lock
fucomp
sbb
push
and
or
sbb
jmp
and
cs
mov
cmc
shl
lods
stos
int3
lock
mov
icebp
hlt
mov
hlt
fcmovne
add
std
ljmp
adc
xlat
aad
fprem
std
or
neg
add
sbb
sbb
hlt
fstl
decb
and
add
jmp
or
out
call
sarl
mov
flds
jecxz
jmp
lret
call
out
iret
sbb
notl
out
sbb
clc
repz
in
icebp
fcoml
lock
loop
cld
stc
std
sbb
sub
push
ss
or
lret
mov
mov
mov
icebp
fdivrp
mov
clc
lds
testl
or
int
in
shl
pop
div
stc
f2xm1
ljmp
loope
incl
and
in
push
and
or
sub
mov
loop
out
shrl
leave
shl
lret
sti
fcmovbe
add
mov
mov
rorl
jecxz
add
fisttpl
push
push
add
sbb
aam
stc
fists
repnz
repz
sub
push
add
and
xor
lock
xor
ret
shr
mov
mov
int3
leave
jmp
in
std
mov
not
hlt
std
xlat
in
stc
or
lock
xlat
sbb
repnz
div
sbb
adc
or
and
sub
and
push
movhlps
loopne
jmp
hlt
lret
fdiv
fninit
fidivrl
shl
jecxz
loop
cmc
xbegin
pop
fmull
iret
shl
rcrb
out
call
stc
sbb
loop
repnz
hlt
std
sbb
mul
push
das
out
in
sub
sub
scas
jecxz
int
out
in
loopne
xlat
iret
in
out
fcomi
loop
aam
rolb
add
out
adc
sti
adc
add
sbb
jecxz
call
and
adc
adc
sub
repz
and
or
adc
jmp
cmpsb
mov
out
jmp
leave
mov
out
mov
mov
mov
or
jmp
fucomi
adc
loope
not
adc
or
xlat
ljmp
and
cli
add
add
out
cli
add
repnz
test
shrl
call
hlt
fucom
fmul
rcr
mov
cli
rolb
les
int3
testl
out
out
or
or
icebp
icebp
push
lock
es
sbb
and
clc
sub
jmp
in
adc
movsl
stos
mov
loopne
aad
call
ror
sar
fsubp
hlt
ret
repnz
or
icebp
ljmp
or
psubusw
or
or
and
pop
pop
repz
es
fsubp
fldt
les
jmp
fprem1
push
fcmovnbe
aam
jmp
faddl
or
cli
psrlw
in
in
rcll
sbb
adc
push
xacquire
clc
cld
pop
or
sbb
std
sub
xor
adc
and
lret
loopne
mov
leave
in
leave
xlat
cmc
fdiv
mov
inc
fdivrp
fld
or
filds
enter
adc
sbb
adc
adc
and
jecxz
sub
pop
add
sbb
in
pop
and
lods
fdivp
mov
rol
shll
lret
leave
aam
mov
loope
call
int
push
add
pop
sbb
xlat
icebp
adc
in
fcompp
out
repz
and
es
add
pop
in
or
out
lret
loopne
out
icebp
ljmp
scas
lret
aad
lret
iret
in
hlt
out
test
out
out
call
or
or
adc
roll
adc
cli
hlt
pop
push
out
daa
sbb
push
and
xor
or
out
add
fadd
test
enter
mov
in
lret
ret
hlt
out
repz
idiv
in
out
pop
adc
aam
rolb
out
add
aam
push
clc
shr
clc
fyl2x
sti
std
sti
cli
or
or
stc
lcall
jmp
repz
mov
in
ret
lods
out
icebp
into
xlat
in
add
call
add
in
cld
in
fucom
or
adc
adc
icebp
loop
out
out
repz
push
and
pop
pop
cld
testl
out
in
es
sub
daa
add
fsubr
rol
mov
loopne
int3
clc
enter
mov
out
ret
stc
in
pop
std
in
jecxz
lret
push
in
loopne
aam
pop
repz
out
out
cld
fstpl
pop
adc
ljmp
in
incb
or
int3
shr
scas
ret
mov
mov
lret
fcmovbe
mov
les
fsubp
cld
in
add
out
ljmp
pmovmskb
xlat
hlt
or
fcoml
push
pop
adc
stc
es
es
ljmp
cmc
fmul
stos
ret
aad
ret
shl
fxch
mov
add
mov
add
jecxz
loop
iret
movl
cld
out
in
out
ficompl
fdivr
add
adc
jmp
sbb
ljmp
ss
leave
iret
leave
lods
cmc
out
into
sarb
repnz
call
call
repnz
psubusb
in
or
lock
or
sub
adc
and
and
sub
in
sub
lock
call
out
mov
imulb
loopne
sti
cmc
sarl
aam
out
in
xlat
fmul
ljmp
in
adc
jmp
jmp
add
adc
push
jmp
and
and
lock
xor
enter
repz
out
loop
sarb
leave
icebp
fdivrl
aad
roll
leave
or
sar
incl
jmp
push
fmuls
fptan
cld
adc
adc
adc
and
and
imul
das
jmp
adc
sub
fucomi
out
stos
out
mov
jmp
cmc
fcom
in
call
not
fld
sti
fcomp
out
or
push
or
loop
call
shr
aam
sbb
aad
push
push
stc
cmc
loop
add
add
ljmp
and
adc
icebp
or
in
int
icebp
rcl
int
divl
cmc
repnz
add
rcl
loope
lret
mul
les
add
in
jmp
out
stc
push
icebp
hlt
add
add
add
fldenv
decl
sbb
and
in
sbb
push
adc
out
adc
in
movsb
repz
shlb
mov
fcomi
add
add
or
add
clc
or
add
rorl
ljmp
and
fiadds
push
and
cli
sub
cld
lcall
out
out
das
pop
and
out
out
mov
iret
mov
aad
int3
mov
rolb
aam
rcl
mov
or
in
add
sti
fiadds
add
or
shr
adc
push
fcoml
pop
push
sbb
aad
add
std
jmp
daa
sbb
cld
in
cli
sbb
add
or
add
int3
fucomip
jecxz
stos
stos
ljmp
stc
ljmp
mov
call
or
into
leave
lock
shr
add
loop
sbb
in
sbb
fisttpl
fisubl
and
stc
jecxz
and
sub
sub
das
or
adc
mov
out
in
aad
loope
in
call
add
sarl
ror
in
in
incl
sti
fsubrp
add
div
pop
jmp
adc
in
sbb
add
and
push
sbb
sbb
sub
xor
in
out
int3
cmc
jmp
lret
out
mov
add
or
not
out
in
loopne
jmp
loope
loope
add
or
adc
loopne
and
and
sbb
push
jecxz
sub
std
out
sbb
add
mov
shl
xlat
fld
leave
lock
jmp
mov
icebp
pop
aam
cld
in
jmp
add
jecxz
adc
fdivp
icebp
pop
adc
cld
aam
sbb
fistps
cmc
stc
imulb
or
call
add
add
add
lock
movsl
out
mov
in
loope
into
shrb
mov
mov
aam
loope
ljmp
or
out
or
adc
sbb
and
cld
neg
fcomip
cmc
incl
pop
and
in
or
out
ret
mov
shl
out
lods
mov
out
mov
fucomi
lock
fucom
into
in
in
adc
pop
clc
push
hlt
adc
push
sbb
lock
icebp
repnz
add
out
sub
and
and
daa
out
or
stos
mov
repz
in
enter
clc
hlt
leave
call
fcmovnb
fsub
lret
push
clc
add
loopne
or
jmp
lock
repz
or
neg
add
std
add
add
hlt
sub
imull
sbb
out
sub
xor
or
in
out
out
int3
cmc
mov
aam
cmc
lret
mov
call
lock
in
not
sti
in
in
add
out
repnz
fstl
out
loopne
jmp
hlt
jmp
fcomi
pop
push
fucomi
sti
add
and
out
add
adc
sub
sbb
shl
shr
jecxz
iret
sti
leave
fstpt
cmc
mul
std
add
mov
xlat
out
inc
lock
ljmp
or
ud2
fimuls
sbb
fcomi
push
jecxz
stc
or
push
or
std
sub
in
or
aaa
out
ljmp
fstp
hlt
aad
out
out
rcr
ljmp
cmc
aad
aad
mov
std
lret
adc
loop
adc
rcl
add
cld
sbb
sbb
fcompl
sbb
or
or
cli
sub
xor
sub
lods
lret
fucomp
repnz
rcl
leave
in
out
cld
mov
loop
ror
push
push
stc
rorl
rorl
test
jecxz
jecxz
pop
cli
adc
sbb
ljmp
repz
loop
and
ljmp
add
cmp
mov
jecxz
rol
mov
mov
loopne
ffreep
incl
rcr
rol
add
or
add
icebp
adc
push
add
or
roll
fldenv
loop
sbb
idiv
sbb
add
call
and
and
cmpsb
cmpsl
shl
shl
out
ljmp
icebp
add
rcl
ret
pop
cld
aam
out
jecxz
out
in
int3
in
ror
in
rorb
fdivr
repz
adc
fnclex
cmc
es
daa
out
cmc
add
out
add
sbb
icebp
enter
int
mov
xlat
in
fsubrl
not
fsubr
vcmpss
in
cmc
cmc
decb
enter
fdivrp
add
or
or
fcoml
fcompp
filds
add
in
daa
daa
pop
or
push
sub
in
cmc
aaa
jmp
shl
ljmp
scas
in
jmp
iret
fadds
loope
add
int3
out
cli
loopne
adc
or
adc
pop
in
sbb
sti
cmc
sbb
out
loope
jmp
sbb
and
adc
adc
das
xor
mov
out
mov
mov
ret
fdivrs
mov
fstpt
in
add
jmp
in
adc
adc
add
add
out
clc
add
repnz
fucomip
add
sbb
div
clc
das
jmp
add
xor
lods
enter
int3
lock
xlat
rep
ret
clc
mov
clc
lret
mov
in
ljmp
add
out
adc
pop
lret
fstl
jmp
add
sti
in
push
cmc
adc
sbb
out
sbb
add
add
ljmp
lods
repz
aad
cmc
cld
repz
mov
loop
aam
stc
stc
push
ffree
fisttpll
fcmovnu
or
bnd
iret
stc
loop
shl
xlat
out
adc
sbb
or
in
loop
sbb
and
pop
sub
xor
out
adc
adc
enter
fucomp
loop
mov
ret
cli
fdiv
int3
imul
mov
out
jmp
idiv
add
repnz
in
repnz
push
in
adc
sbb
loope
adc
or
sbb
or
es
repz
add
mov
stos
mov
mov
out
fnstcw
cli
mov
repz
add
lret
out
iret
lock
adc
or
adc
lock
or
and
notl
icebp
in
pop
sub
add
or
out
xor
sub
or
xor
jmp
lret
neg
mov
cld
mov
add
cli
aam
or
lret
loopne
leave
pop
fimull
add
ljmp
ljmp
and
sbb
sbb
icebp
in
sub
xor
test
scas
out
jmp
xlat
stc
out
std
mov
divl
call
in
out
loopne
loop
rol
int
loop
pop
sbb
fsub
add
and
push
in
cld
in
neg
push
sub
or
and
adc
in
or
hlt
out
mov
mov
into
out
stc
mov
out
mov
mov
cmc
jmp
cmc
or
fmulp
fucomip
lret
adc
rorb
fcoms
sbb
sti
push
sbb
and
add
stc
and
std
and
xor
sub
out
loop
sarl
in
mov
neg
in
fucomi
repz
mov
cli
loop
out
loope
jmp
call
or
ud2
push
in
sar
std
or
and
adc
icebp
loop
add
push
add
jmp
mull
das
or
hlt
or
movsl
loope
fadd
lods
iret
fcomip
out
out
mov
ljmp
stc
add
fcmovu
in
pop
lock
add
fdivp
rcl
add
cld
sbb
movups
or
and
add
add
adc
call
ret
int
in
div
out
icebp
lret
out
call
sti
lock
or
in
loopne
in
push
in
icebp
or
cli
add
repnz
sbb
and
cld
push
push
sbb
out
sbb
cld
das
pop
add
call
loopne
rcl
out
loope
loopne
mov
enter
out
rcr
out
cli
add
hlt
add
call
hlt
hlt
aad
adc
or
sbb
repz
fstl
repnz
push
fstpl
and
and
mull
add
and
or
in
xor
and
enter
lock
test
scas
mov
repnz
mov
std
add
out
ret
test
or
call
add
xlat
sbb
and
adc
add
sbb
out
or
movntps
leave
ret
leave
in
rcl
loop
mov
xlat
cmc
enter
int3
testb
in
loope
fmulp
sti
or
fcmovne
or
push
jecxz
rorb
cli
hlt
push
sbb
hlt
fsub
adc
adc
clc
add
in
icebp
xor
lock
adc
jecxz
mov
jmp
jecxz
repnz
loopne
aad
shl
hlt
test
out
jecxz
push
or
adc
icebp
aad
sbb
out
or
adc
add
adc
adc
in
and
sub
xor
add
mov
fsubr
leave
test
out
fstpt
xlat
cli
roll
loope
loopne
add
loope
in
icebp
add
push
call
repnz
fmull
push
and
or
sbb
out
mov
push
or
aaa
lret
shr
into
cmc
out
int
fcmovbe
cli
in
fsubr
repnz
aam
fcomp
call
stc
out
add
adc
lock
adc
into
jmp
call
adc
or
sbb
sub
push
and
repnz
test
repnz
jecxz
ljmp
mov
loop
add
out
rcl
ljmp
or
iret
shr
repnz
or
fstps
icebp
adc
or
adc
filds
in
add
or
add
adc
out
repnz
mov
mov
fcmovnbe
iret
out
fidivrl
shl
repnz
jecxz
or
lret
ljmp
loope
cmc
repnz
adc
loope
add
adc
sbb
sub
sub
icebp
adc
out
test
mov
jmp
sti
sarb
cli
add
fcmovnu
icebp
hlt
aad
or
or
shl
loope
push
adc
sbb
or
in
loope
and
push
and
jmp
sbb
jmp
sub
mov
in
shr
ret
shr
mov
mov
aam
fcmove
or
ljmp
lret
or
call
push
fcoms
adc
sbb
add
and
push
adc
sbb
out
mov
in
lret
mov
add
ret
or
idiv
push
int
out
hlt
adc
pop
stc
push
pop
sbb
push
lock
stc
and
pop
push
loopne
stc
out
sub
and
repz
stos
loopne
lods
mov
icebp
stc
in
lods
in
call
add
jecxz
mov
jecxz
cld
stc
iret
iret
push
adc
loopne
clc
xlat
fsts
add
sbb
icebp
push
pop
out
in
and
sub
add
push
push
fcom
loop
lock
int
shl
shlb
mov
aam
loopne
ffreep
ret
fcompp
jmp
adc
hlt
in
aam
xlat
push
out
push
adc
jmp
out
aad
and
adc
loope
pop
call
mulb
adc
and
scas
test
fdiv
lods
lret
sar
mov
mov
into
vpsubsw
loopne
decb
or
loope
adc
or
in
clc
sbb
cld
repz
adc
stc
loope
sbb
std
sub
repnz
adc
sub
or
out
jmp
scas
iret
scas
leave
aad
aam
cmc
iret
mov
add
std
int3
neg
jmp
lock
iret
pop
aam
add
sar
or
or
out
out
sbb
loopne
pop
and
push
cli
daa
adc
icebp
or
and
stos
lods
shl
fildll
cmc
ror
cld
sti
int3
fcmovnu
mov
loopne
leave
cld
sti
lret
fsub
rcl
int
adc
pmulhw
aad
fcomps
out
loopne
push
adc
and
stc
and
icebp
add
out
adc
ljmp
int
call
mov
stc
mov
cld
xlat
shl
or
ljmp
iret
repz
pop
aad
rcrl
adc
sbb
lock
adc
sub
call
add
repnz
aaa
xor
fucom
aad
int
aad
cld
sti
mov
neg
in
jmp
rcl
fildl
hlt
or
aad
fmul
loopne
add
fists
add
add
call
xlat
in
sbb
pop
pop
loope
loop
and
sub
lock
in
push
xor
jmp
lods
jmp
mov
clc
mov
mov
repz
frstpm(287
mov
or
call
lret
out
adc
adc
push
adc
or
out
cmc
add
es
sub
and
and
or
loop
fistpll
ljmp
mov
in
mov
mov
lret
or
add
or
add
adc
mul
fisttpl
or
sbb
sub
pop
add
in
call
out
add
fst
mov
scas
lods
stos
shl
ret
rcr
out
mov
loopne
add
mov
fldl
add
jecxz
aam
in
in
adc
clc
adc
add
icebp
cmc
adc
fsubp
add
std
or
and
out
das
or
out
and
add
lret
repnz
cmc
jecxz
out
icebp
hlt
mov
out
stc
hlt
filds
cmc
fcomp
ret
rol
clc
fcmovu
jecxz
add
call
icebp
repnz
std
add
icebp
pop
push
sbb
and
clc
pop
and
add
or
adc
ret
ror
lods
ret
clc
mov
clc
rcr
f2xm1
in
loop
repnz
neg
fmull
ret
in
loop
int
jmp
std
add
repnz
add
fcmovnu
pop
sbb
and
or
cld
in
add
and
and
xor
in
in
mov
sarb
enter
mov
in
shl
shl
repnz
lret
add
rolb
ljmp
shl
sbb
cli
adc
sbb
loopne
adc
sub
or
sub
or
es
fcmovb
mov
repnz
jecxz
mov
jmp
mov
ret
xlat
mov
fmull
pop
sti
cli
std
in
or
cmc
shl
jmp
in
stc
fcomp
fisttpl
mul
std
and
push
or
sub
add
and
or
lods
fsub
scas
iret
int3
shl
shlb
fcmovu
into
shlb
cli
pop
call
out
into
out
out
sbb
out
pop
sbb
and
cmc
testb
repz
and
negl
and
sub
in
add
icebp
pop
or
icebp
in
int
mov
hlt
mov
shr
fsubp
shl
mov
jecxz
in
push
fcoml
lock
or
out
or
repz
fists
or
or
out
sbb
or
add
into
lret
iret
mov
divb
imul
ret
xlat
or
out
or
lret
into
add
push
or
shr
into
or
icebp
adc
neg
sbb
adc
adc
out
in
out
or
daa
push
cmc
and
repnz
loop
shlb
bnd
cmc
repz
fmul
enter
jmp
lret
out
or
sbb
clc
int3
aam
jmp
adc
out
cld
add
or
adc
unpcklps
es
out
lock
lods
fildll
jmp
into
mov
enter
mov
add
std
cmc
out
int
in
cld
out
adc
jmp
out
ljmp
hlt
add
add
jecxz
and
loopne
stc
fisttps
push
push
adc
and
test
cmc
mov
shl
mov
xlat
stc
shl
into
mov
cmc
iret
fmulp
mov
fstp
in
cld
psrld
neg
cld
fistl
repz
loope
pop
fsts
repz
sbb
and
out
or
sub
mulb
int
mov
mov
out
mov
sti
mov
repnz
loop
aad
hlt
or
enter
add
int
iret
loope
or
adc
fdiv
or
adc
icebp
out
in
es
and
das
call
in
cs
aaa
lret
jmp
out
shl
ret
scas
mov
fnstsw
int
into
cmc
add
in
out
or
loop
leave
add
or
icebp
sbb
repz
pop
or
adc
or
sub
add
ss
test
ljmp
mov
test
clc
icebp
fsub
mov
mul
ffreep
adc
pop
add
lock
sbb
aad
fistps
or
add
pmaddwd
sbb
sbb
sbb
icebp
add
out
mov
scas
out
clc
rcl
in
stc
into
out
xlat
shl
loopne
ret
mov
loopne
push
rcr
push
fiadds
jmp
cmc
aad
pop
call
in
adc
sti
adc
adc
add
stc
add
add
incb
xor
xor
lret
leave
cmpsl
fcmovnb
rcl
call
icebp
mov
mov
fiadds
in
lret
in
adc
or
int
adc
into
jecxz
push
out
iret
adc
sbb
sbb
sbb
add
out
jecxz
testl
adc
pop
mul
lret
in
stos
int3
lods
aad
mov
into
icebp
lret
aam
mov
shl
fcmovnb
cli
out
lret
iret
lock
psubsw
push
enter
out
cli
sbb
push
sbb
adc
testb
in
ljmp
or
aaa
and
scas
jmp
ror
ret
mov
mov
aad
add
call
icebp
int3
iret
cmc
cli
add
or
sbb
testl
sbb
mull
sbb
lock
repz
mov
int
mov
mov
sti
fsubr
sar
add
cmc
f2xm1
add
repz
out
fldl
adc
or
cli
or
fcomp
and
out
repnz
cmc
pop
icebp
loop
sub
sub
in
add
adc
and
or
icebp
lods
lods
mov
mov
shrl
ljmp
shl
shl
xabort
pop
int
ud0
out
push
add
fisttpl
adc
notb
std
stc
pop
sub
sub
nop/reserved
add
sub
lods
mov
fsubrp
sarb
neg
lock
add
add
movb
les
adc
or
or
loop
int
adc
push
and
fdivr
lock
pop
sbb
sbb
sub
sbb
decl
and
lods
leave
mov
lret
out
into
lds
mov
in
cld
out
ffree
stc
pop
sti
iret
into
loope
loope
adc
stc
adc
clc
fucomip
adc
repnz
add
imul
adc
sbb
in
xor
adc
jmp
enter
loop
repz
not
out
in
fdivrs
inc
mov
int3
pop
out
in
fxch
or
jmp
rclb
push
fcompl
push
fcoml
negl
out
adc
std
sub
pop
clc
in
out
or
adc
or
cmpsb
cmpsb
call
in
lret
lret
fld1
scas
int
mov
lock
add
jmp
int3
or
in
int3
loop
jecxz
out
rorb
pop
push
adc
and
pop
sbb
add
ud2
cli
xor
std
das
push
sub
mov
mov
ljmp
mov
shl
add
out
test
fiadds
in
call
verw
loop
adc
adc
sbb
cli
jmp
sbb
daa
out
cli
loope
add
pushl
or
and
sub
rol
fdivp
lret
icebp
mov
aam
cli
fucomp
repnz
cmc
out
testl
icebp
lret
repz
pop
test
or
repz
repz
or
push
and
jecxz
adc
jmp
sub
or
jmp
sysexit
push
ljmp
in
fsubr
jmp
loopne
sar
xlat
rolb
xlat
push
out
or
jecxz
push
or
aam
sbb
sbb
sbb
repz
cld
push
or
adc
out
mov
int
cmc
out
jmp
push
fdivr
rcr
mov
or
out
lret
jmp
jmp
notb
adc
push
add
push
adc
hlt
push
jecxz
sbb
notb
or
add
mov
ljmp
hlt
mov
shrl
fcmovne
loope
shl
ljmp
or
push
adc
add
lret
or
lock
loope
push
cld
idiv
repnz
add
or
sbb
pop
and
sub
scas
stos
in
jecxz
cmpsb
aam
shll
rcr
std
in
loopne
int
out
in
repz
ljmp
sti
push
jmp
out
rcl
in
jmp
push
push
jmp
repz
sbb
and
push
jmp
push
sub
fcomp
in
movsb
rcr
aad
iret
loopne
mov
ljmp
clc
in
shl
call
int3
faddp
repnz
in
in
aad
out
notl
sbb
cld
stc
sbb
sbb
add
add
sub
or
sbb
add
add
ljmp
out
in
shr
shrb
lret
mov
fcmovu
fdivr
ret
in
in
cld
fldl
fsubp
fcomp
rcll
jmp
fimuls
std
sbb
sbb
adc
pop
push
cmc
lcall
sbb
jmp
add
sub
icebp
pop
mov
mov
cmc
cli
shll
shll
loope
sti
add
adc
cmc
loopne
out
rorl
cli
div
fcompl
jmp
out
clc
adc
out
add
sub
pop
jecxz
jmp
xor
divb
int3
ljmp
aam
clc
rcr
stc
out
clc
repnz
cld
or
testl
aam
or
or
jmp
adc
add
adc
sbb
stc
or
and
jmp
cs
call
loope
stos
loopne
jecxz
mov
mov
mov
aad
sti
roll
stc
ljmp
stc
jecxz
fstl
add
aad
adc
hlt
sbb
sbb
icebp
fcoms
es
pop
incl
in
out
add
sub
add
repnz
mov
lock
sar
std
scas
rcr
iret
ffreep
icebp
fyl2xp1
lock
repz
loopne
pop
in
ret
lret
pop
adc
shr
loope
out
or
sbb
pop
and
and
jecxz
sbb
and
das
xor
sbb
aaa
in
clc
cmpsl
ljmp
ret
in
enter
mov
sti
int
add
xlat
add
add
jecxz
ljmp
into
roll
idiv
out
push
not
adc
adc
jmp
sti
mull
jmp
in
and
and
and
test
lods
fidivrs
stc
out
std
fdivr
loope
out
icebp
rol
std
add
into
iret
fimuls
into
int3
or
sbb
sbb
xlat
in
repz
and
cli
repnz
cli
and
xor
push
or
call
shr
test
xlat
mov
mov
lock
cmc
stc
stc
in
rolb
shl
fstp
lret
lret
fsubr
in
in
adc
or
pop
push
hlt
and
adc
es
fldl
and
cli
cs
adc
lcall
in
in
hlt
icebp
int
enter
mov
fcmovnbe
fnstsw
idiv
jecxz
loop
adc
fisttpll
out
out
in
out
cld
loop
push
add
add
add
imull
adc
sub
or
mul
jecxz
scas
lods
rcr
shr
fcom
int
fdiv
fpatan
shr
mov
rcl
repz
loopne
ljmp
add
cmc
adc
lock
rcrl
repnz
add
cld
std
push
in
or
pop
jmp
adc
sub
ss
int3
repnz
repz
int
fdiv
mov
leave
aam
fidivrs
sar
xabort
cli
bswap
ljmp
or
pop
aad
push
hlt
or
hlt
sbb
sbb
sbb
push
sbb
cld
sti
or
or
and
out
out
call
mov
mov
enter
into
int3
in
cli
idiv
shl
jecxz
add
call
hlt
ror
rorb
add
negl
std
icebp
repnz
icebp
add
pop
pop
sbb
push
in
in
and
and
pop
lods
enter
iret
ror
out
int3
loope
xlat
mov
leave
mov
out
or
xlat
out
push
call
push
ljmp
jmp
adc
jecxz
sub
sgdtl
cs
in
add
call
scas
mov
shlb
repnz
fnstcw
or
call
call
cmc
out
pop
cmc
stc
cli
or
adc
out
stc
adc
loopne
loop
cli
cli
add
sub
or
add
mov
int3
rol
loop
mov
jmp
add
shl
or
add
pop
lret
filds
in
std
aam
or
fcompl
pop
filds
adc
adc
sbb
in
jmp
and
and
sub
incl
test
lret
mov
rcr
iret
out
leave
stc
fsubr
rol
not
fucomp
or
stc
fcmovnu
fstl
cld
aam
ljmp
imul
pop
fsubrp
add
pop
add
call
or
and
cmc
and
out
in
repnz
test
into
enter
std
hlt
ret
cmc
rol
ret
mul
into
cli
push
pop
add
aam
in
add
rclb
or
sbb
cld
sbb
or
fdivr
sbb
das
and
adc
adc
add
loopne
shr
lods
scas
scas
stos
jmp
jmp
rolb
clc
mov
pop
stc
std
add
iret
fildl
adc
into
int
hlt
aam
out
adc
add
mov
sbb
pop
daa
push
adc
stc
es
jecxz
xor
test
ret
loope
mov
out
mov
sarl
hlt
icebp
shl
add
enter
in
enter
add
cmc
in
in
fdiv
out
or
std
add
add
push
push
or
sti
adc
or
out
shr
scas
iret
scas
into
out
int3
iret
icebp
cld
shl
shl
cmc
ret
stc
rol
out
clc
push
jmp
or
pop
stc
adc
ljmp
sbb
sbb
repz
loop
and
push
call
add
stos
mov
hlt
loopne
mul
fnstcw
shl
call
stc
flds
lock
loopne
jecxz
shl
push
jmp
push
fisttpll
sub
adc
add
mov
shll
mov
in
repnz
lret
lock
repnz
jecxz
aad
fucomp
adc
or
add
add
jecxz
adc
lock
cmc
repz
fdiv
repnz
cli
decl
sbb
pop
sbb
push
sub
pop
hlt
add
imul
jecxz
test
out
stos
faddp
mov
call
ljmp
add
loopne
add
out
add
fmulp
or
add
add
xlat
out
sbb
repz
sbb
adc
sbb
sub
and
sub
sub
out
fldcw
mov
hlt
iret
jmp
out
fidivrl
fsincos
loopne
cli
loopne
loop
stc
decl
lret
fdivp
out
sti
stc
adc
jmp
fstp
pop
stc
cli
sub
daa
ficoms
or
sub
add
das
stos
stos
lret
test
mov
int
repnz
mov
aad
enter
enter
call
lock
stc
push
add
cld
pop
cld
out
imul
icebp
jecxz
testb
std
std
jmp
add
daa
push
lock
add
mov
enter
neg
int3
std
out
into
repnz
fildl
cld
add
jmp
lret
in
add
add
into
add
cli
sbb
fmull
ficompl
pop
loop
adc
and
adc
push
pop
in
sub
or
sbb
shr
shrb
jmp
cld
dec
add
mov
in
fdivrp
or
or
call
jmp
sbb
std
aad
stc
notb
and
and
es
jmp
cli
sub
sub
daa
add
loopne
out
shrb
shl
loop
lret
out
clc
in
mul
in
jecxz
xlat
fdiv
xlat
cli
pop
bswap
jmp
in
loop
in
adc
add
in
clc
add
adc
repnz
add
or
adc
xor
testb
stos
out
mov
in
mov
leave
mov
clc
mov
call
mov
loope
add
vpminub
in
lret
add
testb
adc
cld
iret
testb
es
repnz
hlt
push
imul
call
adc
and
fstp
out
out
into
ljmp
lret
iret
iret
ret
add
sti
cli
fnclex
int
cld
iret
call
or
adc
cli
sbb
add
sbb
and
adc
cli
sbb
sbb
and
xor
pop
or
fninit
out
iret
lock
sti
out
xlat
add
mov
in
or
enter
call
fisttpll
adc
icebp
cli
adc
or
aad
ficomps
pop
out
in
jmp
sub
sub
adc
push
push
and
in
lret
test
icebp
leave
fdivrs
lock
int
into
add
fidivrs
lret
rcl
in
push
add
pop
stc
sbb
push
out
ficoml
sbb
cld
incl
icebp
sbb
sub
or
and
lcall
es
sub
movsl
int3
fdivp
imul
lret
aad
test
jmp
xlat
out
repz
aad
shr
clc
mov
cld
or
push
or
sbb
sbb
repnz
repz
std
adc
add
sub
sbb
sub
call
stos
loopne
rol
loopne
lret
ror
in
fcmove
clc
out
fnsave
or
stc
fucomi
lret
out
fdiv
or
out
cli
ljmp
pop
loop
xlat
adc
push
add
call
and
sub
repz
repnz
movsl
iret
out
out
out
lock
xlat
rcl
lock
mov
in
ret
out
loope
std
sti
call
repnz
div
add
sbb
out
or
in
and
in
sbb
loopne
repnz
daa
push
idiv
stc
or
and
and
and
mov
lods
in
mov
stc
mov
leave
icebp
fsubr
into
add
repz
push
iret
filds
icebp
adc
in
add
mul
call
jmp
push
pop
pop
or
and
and
add
or
lods
fildll
shl
iret
mov
loop
in
into
fcmovu
out
int3
mov
hlt
call
idiv
loopne
jmp
hlt
in
add
lock
push
or
call
idiv
and
in
add
add
jmp
repz
xor
mov
int
int
out
into
mov
mov
cld
rcr
fidivrl
faddl
bnd
out
loop
in
out
push
repz
int
fprem1
shr
cmc
icebp
adc
sbb
ficomps
push
and
fcomip
adc
sub
adc
adc
incb
and
fistpll
int3
in
lock
shl
ret
out
stc
aam
lret
mov
add
std
sti
or
out
fsubr
ror
iret
add
loop
or
pop
or
out
in
jmp
push
cli
xor
sti
xor
xor
or
stos
loope
aad
out
loopne
mov
mov
or
aad
fsub
int3
fiaddl
rol
adc
psubsw
rcrb
or
sar
or
pop
filds
in
sbb
sbb
repnz
sbb
cs
and
in
out
xor
hlt
das
out
mov
loop
jmp
mov
lret
mov
rolb
mov
lret
out
lock
int3
rcr
add
loop
shl
cld
adc
or
std
add
repnz
fistpl
xor
das
bnd
mov
ret
lock
in
leave
fldl2t
xbegin
mov
add
add
fdivrp
neg
add
cld
adc
or
in
jmp
adc
daa
and
daa
call
adc
loopne
ffree
stos
lods
int3
cmc
shrl
mov
shlb
enter
out
or
or
pop
or
adc
jecxz
adc
notl
adc
sbb
std
push
in
out
pop
sub
or
adc
adc
xor
cmpsl
fisubrs
fdivp
enter
enter
into
stc
hlt
mov
loope
or
out
int
call
out
loop
testb
sbb
sbb
adc
imul
sub
std
and
adc
repnz
lods
movsl
out
shll
stos
loop
imull
out
cli
into
sti
or
mov
faddl
adc
loop
xlat
add
call
jmp
adc
loop
out
push
es
push
sub
call
push
add
in
movsl
lock
loopne
repz
fbstp
repz
shl
repz
or
std
cmc
aad
stc
std
loope
fdivrp
push
iret
out
adc
fcmovnbe
fimull
out
sbb
loope
psrad
out
cli
and
pop
movups
incb
adc
in
iret
jecxz
iret
shl
shl
in
repz
mov
fcmovnu
or
or
neg
fucomi
paddd
add
adc
into
out
aam
jmp
icebp
lock
incb
div
hlt
loope
adc
sbb
or
adc
sub
and
lret
int3
aam
repnz
xlat
lret
fdiv
lret
std
std
add
mov
faddl
lds
in
add
add
pop
add
stc
out
sbb
bndstx
cmc
clc
and
sub
sub
add
ret
in
xlat
mov
in
fdiv
repz
mov
int
fld
add
repnz
idiv
or
lret
or
adc
sbb
cld
jmp
or
loope
std
sbb
jmp
or
mov
sidtl
loopne
test
in
fadd
mov
lret
mov
stc
fiadds
aad
add
out
decb
repz
loope
cmc
add
jmp
adc
lock
add
in
or
sbb
or
std
out
xor
sub
mov
ret
mov
scas
shl
repz
in
in
cld
stc
int3
sarl
in
call
movl
movb
lock
adc
fsub
xlat
add
add
adc
cld
sub
clc
and
push
incl
psllw
icebp
cmp
out
into
mov
jmp
shr
ret
cmc
in
out
mov
clc
rol
or
fnstcw
fdiv
add
int
adc
cld
div
fsubs
fistps
adc
adc
adc
push
and
out
out
ljmp
stos
fsubrp
scas
in
loopne
ret
loope
mov
int
clc
jmp
add
pop
icebp
fucomip
add
femms
int
pop
cmc
or
sbb
icebp
adc
adc
and
out
adc
sti
hlt
in
sbb
cs
and
mov
fbld
leave
leave
cmc
mov
mov
int3
add
fdivrp
add
call
stc
std
adc
loop
pop
sbb
cld
in
neg
std
fcomi
loopne
cmc
fbld
cld
sub
sti
add
adc
daa
and
mov
ljmp
call
sti
rcr
les
add
or
int3
or
or
into
rcl
or
push
sti
sbb
psrld
out
pop
pop
adc
pop
clc
ljmp
or
sub
push
sub
add
add
jmp
in
mov
xlat
iret
mov
ffree
loop
lock
cli
fiadds
testb
loop
fisttps
sti
lret
ljmp
adc
adc
or
out
and
daa
pop
cmc
in
push
and
add
sub
enter
in
icebp
aad
out
mov
repz
mov
lret
cli
repz
loope
fcmovnu
icebp
ror
in
pmaddwd
adc
call
jecxz
out
fucom
and
pop
sbb
in
push
add
or
add
sub
adc
scas
lods
mov
rcl
mov
hlt
into
div
jmp
fcmovb
xlat
or
stc
out
loope
idiv
jmp
adc
or
icebp
hlt
bnd
incb
out
adc
push
push
sub
add
call
hlt
or
ret
mov
divl
out
sti
mov
fadd
add
repnz
push
stc
lret
add
sti
shl
push
repz
iret
sbb
cli
sti
std
in
and
or
or
testb
es
sbb
sub
scas
repz
mov
mov
repnz
ljmp
add
jmp
fucom
or
adc
fistl
in
int
sbb
sbb
cli
or
fisubl
cli
stc
pop
repnz
and
adc
sub
push
in
cld
or
adc
and
loopne
fcmove
cmc
aad
loopne
mov
int
lret
out
add
sti
shr
hlt
fcomip
jecxz
jecxz
repnz
loopne
add
add
or
adc
lock
adc
lock
lar
sbb
sbb
cs
xor
verw
mov
lret
aam
lret
mov
rolb
aad
cld
stc
rcl
test
jmp
stc
push
or
adc
clc
or
in
sbb
clc
cld
fadds
push
pop
adc
lock
fistps
in
add
push
adc
adc
add
out
out
loopne
leave
call
lret
stc
mov
stc
ror
out
aam
add
repz
cld
out
out
add
adc
std
in
repz
std
lock
adc
fprem
and
and
sbb
in
loope
pop
add
or
call
leave
mov
lock
mov
cmc
cld
in
shl
icebp
mov
ret
idiv
pop
aam
into
or
fsubp
jmp
xlat
in
stc
fimuls
repnz
in
sbb
repnz
or
call
pop
xor
push
or
scas
lock
fmulp
shlb
cli
mov
shl
idiv
jmp
loopne
call
adc
in
mul
fmull
std
add
and
adc
and
loop
or
or
call
repnz
int
jmp
cmc
ret
jmp
fnstsw
fdivrs
fld1
cmc
out
fisttpll
call
add
push
add
shl
imul
cld
add
in
sbb
fldl
add
sti
cli
add
repz
out
scas
mov
mov
ret
out
div
hlt
ljmp
in
jmp
ljmp
out
hlt
hlt
call
sbb
sbb
and
sbb
mul
in
cld
das
or
decl
lret
test
mov
out
out
mov
mov
icebp
std
icebp
in
sti
dec
or
add
fcmove
ror
rorb
adc
ljmp
or
push
fdiv
push
loope
loopne
adc
jmp
add
daa
jmp
daa
adc
lret
mov
mov
lret
out
loopne
mov
clc
ret
fsubrp
repnz
fucomip
ficoms
in
enter
jecxz
iret
or
or
fsts
clc
repnz
out
pop
fcomi
add
add
in
and
or
pop
xlat
loope
int
iret
cmpsb
lret
aam
int3
mov
lock
lock
cld
sti
fcom
mov
out
fucomip
call
repnz
call
sbb
xlat
add
or
add
sbb
pop
es
sub
cs
or
fadd
les
mov
out
mov
in
std
fidivrl
xlat
vpmaxub
les
dec
icebp
jmp
cmc
fucom
adc
sbb
adc
clc
push
neg
adc
and
adc
or
loopne
sbb
add
clc
adc
or
ror
mov
hlt
loope
shr
sar
lret
fcom
shl
cld
enter
std
add
int3
or
out
loopne
or
or
push
in
push
mulb
sbb
out
stc
sbb
stc
push
stc
jmp
incb
xor
cmc
add
jmp
icebp
jecxz
mov
out
ljmp
lret
in
push
pop
fiaddl
ret
div
add
loop
adc
adc
or
push
xlat
jmp
imul
or
sbb
ficomps
loopne
and
das
sub
and
xor
in
int3
ret
shr
rcl
lret
cld
imul
mov
div
lock
or
add
in
add
lock
aam
repz
or
adc
out
aad
or
or
in
sbb
sbb
and
sti
sbb
or
xor
and
ret
mov
aam
cmc
ret
aam
fst
jmp
in
hlt
add
hlt
push
fdivr
pop
int3
push
fsub
add
clc
adc
cmc
out
fucomp
repnz
loop
push
and
or
add
push
push
sub
and
cld
adc
sub
call
out
faddp
iret
mov
mov
lret
fdivs
not
fimull
leave
push
in
int3
adc
aam
jmp
aad
fcmovbe
or
adc
push
incl
or
pop
or
or
call
xor
test
lock
out
mov
test
int
sti
idivl
rcl
rorb
fucom
cmc
in
in
push
repnz
add
loop
sbb
add
pop
and
cmc
fdivr
daa
sbb
sti
in
sub
or
xor
fmul
shl
ss
je
xor
outsl
gs
ss
addr16
ja
cmp
and
adc
lods
sbb
add
jnp
add
xor
adc
out
adc
dec
xor
add
cmp
add
push
adc
rcrb
adc
les
add
adc
cmpsl
ja
add
adc
cltd
jae
add
adc
popa
sbb
add
adc
add
adc
adc
iret
sub
adc
int3
xor
add
jp
add
adc
mov
adc
push
jne
add
mov
add
mov
add
or
mov
add
gs
add
lret
mov
add
or
xlat
mov
add
mov
add
out
mov
add
add
add
mov
add
cmp
add
pop
mov
add
jno
add
jge
add
add
add
xchg
mov
add
mov
add
sarl
add
add
add
push
jb
inc
gs
popa
jb
push
add
dec
push
inc
push
dec
cs
insb
add
add
inc
push
jo
popa
dec
jne
gs
arpl
adc
popa
arpl
je
jns
je
insl
dec
gs
popa
addr16
add
arpl
jo
jns
add
gs
gs
popa
addr16
outsl
jae
repz
jne
insb
push
arpl
push
inc
push
xor
cs
insb
add
leave
add
jae
popa
insb
jo
popa
add
ret
add
jae
outsl
ja
jb
insl
jae
arpl
cs
insb
add
xchg
add
je
imul
je
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
dec
add
arpl
outsb
inc
add
inc
gs
jb
arpl
jae
gs
jo
add
inc
imul
jne
arpl
add
push
dec
inc
dec
xor
cs
insb
dec
insb
sete
mov
cmc
dec
in
pop
bound
xchg
in
add
dec
jns
add
cmp
loope
int3
cld
jmp
aam
ror
fcomi
repz
loope
call
in
cld
push
into
iret
rcl
into
add
repz
in
adc
pop
icebp
sbb
add
or
sub
in
push
sub
sti
and
out
and
cmc
fsub
jmp
mov
cmc
imul
jmp
repz
in
push
vcvttpd2dq
push
cli
add
adc
add
hlt
ljmp
adc
adc
hlt
adc
loopne
adc
repnz
es
sbb
adc
or
pop
adc
repnz
shlb
mov
mov
cli
fidivrl
jmp
out
enter
adc
or
jmp
sbb
or
std
pop
and
stc
jmp
add
sub
call
sub
and
jmp
in
lret
lret
in
cld
std
ljmp
add
idiv
loopne
or
or
out
aam
adc
adc
repz
sbb
in
repz
push
sub
sub
add
out
xor
das
in
sub
into
mov
mov
hlt
mov
mov
not
rcl
lret
fincstp
loop
aad
out
ljmp
lock
add
jmp
jecxz
call
hlt
lock
loop
add
daa
sbb
sbb
std
or
add
sub
scas
into
stos
out
loopne
scas
ror
imul
imul
int3
mov
cli
add
repz
fdiv
shl
flds
or
or
adc
pop
out
in
aam
hlt
pop
push
sbb
hlt
repz
fucomp
sbb
and
loop
imul
stc
loope
pop
cld
or
sub
add
ret
iret
mov
loopne
in
lock
aad
cli
stc
mov
fyl2x
out
cmc
enter
stc
in
loope
jmp
pop
sbb
shl
or
call
negl
sti
daa
push
adc
sbb
adc
and
in
in
sub
xor
ror
ret
in
loop
shrl
fsub
std
rolb
push
add
clc
fdivr
fisttpll
or
cld
hlt
add
rcl
loope
rorl
jmp
ficoms
jmp
cmc
in
daa
pop
jmp
in
in
xor
das
repz
lods
mov
sti
xlat
lock
cld
ret
mov
rorl
les
hlt
rorl
push
in
jecxz
in
pop
std
or
in
adc
repz
and
std
or
loop
push
and
adc
mov
mov
shll
sarl
mov
pop
in
lret
cld
lret
iret
loopne
shl
call
testl
in
sbb
call
or
or
ljmp
in
lods
ret
xlat
cmc
divb
lock
cld
clc
repz
fisttpl
ljmp
call
adc
aam
clc
int
sbb
adc
loopne
sbb
repz
out
clc
sbb
cli
lock
repnz
in
xor
iret
movsl
mov
loop
cld
call
fdivrs
inc
add
cmc
ret
idiv
add
or
shr
loope
negb
jmp
adc
jmp
or
adc
sub
es
and
pop
adc
adc
int
scas
repz
jmp
enter
mov
aam
ret
in
fildl
xlat
ret
bnd
iret
loope
out
hlt
adc
repz
add
cmc
repz
repnz
decl
pop
or
cld
clc
add
or
in
or
pop
sub
repz
cmpsb
scas
loope
leave
out
cmc
int
int
mov
aam
mov
in
fnstsw
or
in
fmull
rorb
in
out
repnz
cli
paddsw
sbb
pop
sbb
pop
and
sbb
loop
sbb
in
and
xor
in
hlt
mov
in
ret
shl
mov
cli
ret
fldln2
cld
loop
ffreep
ljmp
repnz
in
jecxz
jecxz
imul
fisubs
adc
pop
adc
and
push
es
fcomip
jmp
or
adc
and
in
out
rcl
idivl
fdivrs
mov
ljmp
cld
call
add
push
shl
ljmp
fucom
and
sbb
sbb
or
es
push
adc
shlb
rcl
ror
neg
repz
sti
fcmovne
icebp
out
lock
or
out
add
in
add
adc
jecxz
pop
aam
adc
or
pop
or
repnz
pop
pop
cli
or
and
ljmp
stos
iret
mov
lret
leave
int3
aad
rcl
std
div
add
out
ret
loop
leave
add
fcmove
add
adc
push
in
sbb
sti
loopne
fsubl
call
sub
push
push
cs
lock
lret
fidivrl
repnz
aam
call
into
rol
mov
sti
add
aam
fucomi
mul
lret
rcr
lret
add
loop
add
in
clc
sti
sbb
or
add
loop
push
daa
sti
stc
cli
jmp
adc
lods
fst
test
fnstcw
add
mov
ret
cld
fadd
idiv
or
or
out
add
sti
add
fyl2x
adc
fistl
add
loopne
push
testb
incb
das
and
add
or
add
movsl
ror
stos
ret
aad
mov
icebp
mov
std
mov
fisttpl
call
fiaddl
in
out
std
loopne
repnz
add
cld
add
fcoml
and
repz
sti
cld
and
push
sub
pop
adc
xor
or
scas
stos
rcr
icebp
ret
mov
ret
out
leave
stc
jmp
sarb
std
add
out
roll
push
or
rorb
repz
or
adc
fcomi
sbb
fdiv
sbb
adc
add
sbb
or
sti
or
imulb
mull
stos
jecxz
into
lock
in
mov
out
cld
mov
in
rolb
shl
add
out
or
or
jmp
or
adc
adc
out
or
out
adc
and
in
and
and
sbb
pop
push
daa
adc
mov
int
scas
in
fidivrl
repnz
mov
call
add
in
add
cld
jmp
rorb
shl
std
repz
jmp
add
stc
adc
loop
and
stc
sub
xor
or
das
das
out
fldlg2
fsubrl
shlb
stc
shl
add
xlat
fadds
fisttpll
loope
roll
or
shr
loope
adc
or
pop
frstor
in
adc
push
push
add
out
das
decl
test
loope
rol
lods
hlt
jmp
cmc
out
out
mov
int3
mov
mov
ret
push
push
or
in
cli
ror
or
add
jecxz
adc
negb
out
or
cmc
sbb
sbb
push
sbb
push
stc
sub
out
out
divb
fcmovbe
out
shrl
idiv
fcmovnbe
fdivp
mov
std
repz
loopne
hlt
roll
idiv
lret
or
in
aam
rcll
add
fstl
negb
clc
and
push
daa
and
sbb
cld
sbb
jmp
out
cs
and
fisubrl
lret
stos
call
fdivp
loop
repnz
add
fmull
out
loope
int3
jecxz
loop
sbb
sbb
fisttpl
xlat
fstp
adc
repnz
add
sub
repnz
iret
in
out
int
shll
mov
aam
add
std
in
mov
lret
out
or
jmp
add
sbb
in
sti
jmp
add
or
std
lock
push
add
hlt
repnz
mov
scas
fidivs
sar
out
std
into
iret
rolb
cmc
or
fsubp
fimuls
or
lock
shl
jmp
out
loopne
adc
push
push
sbb
jmp
testb
sbb
and
das
enter
out
into
int
call
out
push
aam
fcos
clc
mov
imul
out
fcompp
in
lret
out
pop
or
fcoms
or
adc
or
sbb
and
and
add
pushl
sbb
xor
sub
and
lock
test
rcr
in
in
in
repnz
mov
clc
repz
add
or
fisttps
fadds
out
movb
shr
adc
fistl
pop
adc
sbb
pop
push
es
call
cs
xor
mov
stos
out
repnz
in
mov
out
ror
icebp
mov
fcomip
out
loop
aam
push
std
push
add
lock
adc
lret
out
hlt
cmc
clc
add
std
loopne
sbb
adc
sbb
daa
out
in
icebp
lock
repz
leave
lock
mov
fdivr
ljmp
in
aam
ljmp
or
adc
repnz
ljmp
add
aad
in
loope
out
adc
add
push
sub
ljmp
fnstcw
fmul
iret
vpmaxsw
mov
fcom
std
cld
fldl
mov
faddl
stc
in
sti
leave
fiaddl
or
sar
repz
or
pslld
fldl
pop
lock
and
fdivrp
and
in
pop
or
cs
adc
mov
in
not
icebp
not
loop
fsub
int3
into
lock
les
out
jmp
add
loope
aam
fdiv
rcll
psubq
icebp
sbb
pop
cmc
add
add
in
add
out
adc
or
cs
call
stos
int
aam
repnz
fadd
iret
fsub
in
loopne
sti
filds
fdivr
iret
enter
add
adc
aad
aad
sbb
pop
call
and
in
std
and
loope
call
and
es
call
fst
loopne
test
ljmp
mov
lret
aad
jecxz
into
fcmovu
loope
add
add
clc
repnz
pop
push
flds
lcall
daa
in
add
loope
std
repnz
sub
xor
rcr
out
in
shl
shl
shl
in
mov
xlat
rol
into
in
aam
loopne
ljmp
add
ljmp
fsubr
repnz
pandn
clc
adc
loopne
sbb
call
sti
jmp
or
out
xor
add
fmul
call
iret
mov
mov
add
out
shl
imul
sti
ljmp
jmp
push
cli
pop
psubq
idiv
in
repnz
fdiv
cmc
clc
lock
std
or
in
sub
icebp
pop
or
scas
into
leave
in
mov
shr
enter
mov
fidivrl
fdiv
push
ret
pop
or
loope
or
shl
pop
adc
cmc
jmp
sbb
pop
adc
and
or
out
and
xor
loopne
lods
in
out
repz
lret
cmc
out
int3
cli
leave
add
mov
fucomip
or
cld
enter
pop
or
int3
rcr
in
adc
xlat
adc
fadds
clc
pop
fisubs
fisttps
in
incl
sbb
and
sbb
xor
sub
stos
rcr
out
stos
leave
shr
mov
rcr
clc
std
jmp
aam
loopne
mov
loop
or
jmp
std
repnz
add
jmp
in
fadds
jmp
pop
push
and
add
cli
and
cmc
push
pop
or
sbb
add
xor
mov
mov
cmc
in
leave
aad
icebp
in
mov
call
out
mov
aam
stc
or
iret
jecxz
out
adc
or
or
sti
jmp
add
and
fistps
sti
sub
or
sub
xor
sbb
adc
adc
mov
mov
ljmp
fucom
repz
icebp
or
leave
push
jmp
fdivr
loopne
jmp
out
add
pop
into
lock
stc
in
in
in
and
jmp
out
xor
cmpsb
in
loope
mov
out
mov
enter
sarl
cmc
not
cmc
in
or
add
fcos
loop
out
adc
lock
or
out
adc
add
sbb
std
negb
sub
and
and
push
cmc
and
into
ljmp
int
lock
mov
iret
std
mov
sarl
ret
in
roll
lret
push
adc
lock
sbb
and
and
or
jecxz
sbb
and
or
and
and
fucom
in
jmp
out
ret
mov
in
mov
mov
lock
loopne
ret
add
loopne
jmp
repnz
rcl
aam
sbb
sbb
or
sti
icebp
cmc
sti
pop
add
or
or
sbb
sub
out
and
or
out
scas
fnstsw
ljmp
icebp
mov
call
mov
in
repnz
fucom
or
fsubr
call
repz
rolb
adc
pop
aad
div
out
jmp
icebp
in
icebp
in
or
sbb
cvttps2pi
sub
add
cmpps
leave
mov
ret
aad
hlt
jmp
out
fiadds
vpsrad
aad
jmp
rorb
push
in
add
sbb
pop
or
adc
std
add
and
push
sub
and
lock
push
es
shl
out
mov
in
repnz
fld
iret
cld
hlt
fstpt
iret
hlt
mul
repz
cld
xlat
decb
ljmp
jmp
cmc
or
or
imul
sti
fsubl
add
call
and
or
add
call
lods
out
stos
shl
imul
lret
aam
out
fst
mov
or
fcmovu
add
decl
adc
pop
add
push
push
ror
in
in
pop
rorl
sbb
fiadds
hlt
and
add
testb
testl
and
int3
mov
fmulp
in
loop
shl
mov
imul
std
aam
xlat
shl
sti
sti
or
or
add
fdivp
or
xlat
jecxz
fucomi
pop
and
or
adc
es
das
sbb
icebp
out
hlt
or
fnop
leave
leave
scas
aam
out
enter
mov
ror
sti
aad
add
or
vpsraw
fxam
adc
loop
repnz
out
or
add
fimull
and
push
add
adc
negl
or
daa
daa
add
adc
les
out
mov
cmc
mov
leave
mov
loop
mul
add
fimull
push
add
out
add
or
jmp
add
into
fisttpl
sbb
pop
daa
push
sbb
add
sbb
out
mov
fstp
repnz
mov
lods
into
cli
mov
fadd
std
ret
cli
in
enter
out
cld
out
out
cmc
or
sbb
or
in
std
fstpl
adc
or
sub
push
sub
daa
out
xor
hlt
or
repnz
loope
ror
in
into
into
int
mov
in
mov
not
faddl
fucomi
push
sar
add
enter
ror
call
or
out
adc
cmc
or
hlt
adc
stc
fstl
add
cli
jmp
decb
out
jmp
adc
mov
lds
test
fsin
int
mov
rolb
cli
call
or
adc
repz
int
cmc
testb
adc
imul
sbb
adc
sbb
and
ljmp
or
push
or
push
add
sbb
lret
lret
iret
call
mov
mov
rol
sti
push
lret
pop
repz
push
adc
out
rorl
push
stc
out
sti
loope
icebp
and
or
add
out
and
adc
sti
or
or
sub
ret
loopne
rol
in
mov
clc
lret
fcom
fistpll
mov
out
loop
int
or
rcl
sbb
adc
or
add
fcompl
or
std
push
daa
and
sub
hlt
lods
in
shll
lret
std
rcl
aad
ftst
repz
stc
add
jmp
or
shr
ljmp
mull
pop
adc
in
sub
adc
call
add
in
shr
jecxz
leave
div
fdivr
shl
lret
stc
rcr
cld
sti
jecxz
or
or
into
out
adc
lret
in
adc
adc
or
push
push
adc
loopne
and
sbb
adc
add
cs
scas
int
fisubrl
hlt
clc
divb
stc
shl
cli
add
aam
ret
add
flds
add
add
call
in
call
sti
repz
push
hlt
flds
fisubs
sbb
incb
repz
or
add
push
or
or
scas
test
ror
aad
mov
out
repz
rol
stc
repz
fdivr
or
ret
pop
flds
in
lret
loopne
decl
adc
adc
push
or
rcrb
cli
fstpl
push
std
sub
add
sub
jmp
and
out
iret
in
rcr
xlat
shr
lret
rcr
xlat
ror
sarl
fadds
out
add
lret
fmulp
push
into
in
out
notb
pop
out
fsubr
add
adc
loop
push
std
and
cli
and
push
push
adc
xor
test
neg
clc
mov
stc
in
int
mov
aad
iret
pop
out
out
add
idiv
iret
icebp
repnz
push
adc
hlt
pmaddwd
in
fisttps
call
imulb
in
cs
and
and
cmc
add
loopne
loop
loopne
jecxz
aad
sarb
sar
imul
add
in
fucomp
add
add
in
adc
shl
adc
adc
fpatan
sbb
repz
sbb
in
add
or
sbb
std
cs
sub
jmp
lock
mov
mov
clc
add
cmc
iret
clc
add
in
or
cli
push
in
adc
push
in
icebp
add
adc
loopne
clc
in
cli
fildll
cli
std
and
sti
in
pop
sub
xor
sub
fidivrs
ror
ret
mov
fdiv
int3
in
shl
ret
add
fcmove
add
jmp
into
sbb
sbb
sar
adc
std
and
out
sti
push
pop
adc
sub
repz
and
std
add
stos
loop
lret
int3
lret
mov
mov
in
in
shl
lret
ljmp
std
testl
out
lret
adc
loopne
adc
or
out
push
icebp
adc
cld
out
sbb
neg
hlt
in
call
xor
call
and
lock
mov
mov
sar
lret
lock
mov
mul
mov
jecxz
stc
loop
add
jmp
or
lret
sbb
cmc
out
adc
adc
sti
fists
loop
add
loop
jecxz
and
push
sti
and
sub
pop
and
loopne
fidivs
shll
xlat
out
std
fcmove
loope
mov
in
add
wbinvd
push
std
or
add
or
push
add
call
and
loop
call
push
and
das
add
daa
and
and
mov
jecxz
lods
in
loopne
mov
mov
stc
sti
mov
add
in
aad
cmc
ljmp
lock
ljmp
push
bndstx
aad
icebp
and
and
sub
or
sbb
sub
xor
ud0
sub
scas
lods
lret
ffree
loop
xlat
lret
cli
aam
out
aad
std
icebp
out
in
cld
mov
out
add
add
cli
rolb
rorl
or
in
call
jecxz
sbb
in
das
out
daa
sti
call
add
pop
cmc
mov
mov
lock
out
xlat
mov
mov
ret
fcmovnb
in
out
fiadds
add
jmp
push
or
call
sbb
push
add
sbb
out
daa
add
pop
add
and
add
and
int3
iret
repz
jmp
mov
mov
shl
ljmp
inc
or
cli
lret
cli
adc
aam
add
pop
adc
sar
or
out
add
incb
pop
add
and
sbb
jmp
jecxz
lods
ret
ret
mov
int3
shl
aad
repz
add
roll
vcmpsd
lret
lret
or
in
or
pop
push
or
push
stc
imul
std
adc
ficomps
cli
lock
in
stc
push
sbb
out
adc
adc
and
ret
out
out
enter
loop
jmp
mov
int3
fstp
std
std
sti
or
mov
adc
rcr
out
cld
rcr
ud2
loop
out
push
repnz
fnstsw
fsub
notb
sbb
pop
or
ljmp
adc
pop
xor
cmpsb
mov
lods
fmulp
aad
shr
jecxz
aam
mov
fadds
out
movb
add
xlat
enter
lret
adc
cld
jmp
in
ljmp
out
icebp
fiaddl
repnz
negl
pop
cli
sub
and
out
sbb
and
ret
jmp
out
ljmp
test
lret
lock
mov
loopne
out
jecxz
cmc
out
in
push
add
add
adc
sbb
or
xlat
pop
add
loop
add
add
in
pop
add
and
std
out
pop
call
iret
neg
mov
repnz
jmp
lret
cli
mov
add
fadd
fcmovne
std
out
or
add
sbb
in
cli
out
sbb
or
sbb
negl
sub
sbb
in
or
adc
aaa
hlt
hlt
mov
icebp
ret
out
enter
cli
in
mov
stc
lock
fdivr
rcl
clc
testb
ficoml
ficoms
add
out
in
unpcklps
add
fcmovnbe
adc
and
sti
loopne
push
call
cld
xor
hlt
add
xor
out
sarl
lock
scas
out
mov
rcr
stc
add
lret
lock
add
stc
xlat
add
or
or
notl
out
bndldx
or
and
add
sub
add
and
test
mov
iret
out
loop
lock
add
shl
add
enter
add
enter
adc
ljmp
pop
sbb
push
cli
div
neg
and
adc
or
sub
repnz
and
loopne
int
in
jecxz
jmp
cld
aam
iret
fsubr
rcr
aad
xlat
ret
or
add
lret
into
or
sti
xlat
cmc
adc
neg
fstp
add
sbb
repz
add
sub
add
out
adc
mov
mov
mov
mov
lret
imul
mov
repnz
fcmovu
or
fcmove
lret
shl
cmc
or
paddsb
adc
jmp
hlt
cmc
in
xlat
add
icebp
clc
adc
pop
or
jmp
out
std
lock
add
shrb
call
shr
fincstp
call
add
loopne
icebp
ret
add
adc
adc
hlt
iret
or
add
push
out
aam
fsubrp
cld
add
and
sub
stc
out
negl
sbb
sbb
or
shr
in
test
jmp
mov
cli
std
rol
in
lock
test
in
loope
in
fildl
call
push
rcr
sbb
add
sbb
faddl
out
sbb
cli
or
pop
repz
in
shrl
mov
std
ror
stc
out
lret
in
aam
or
sar
add
fprem
lock
lret
loope
sbb
imul
repz
adc
icebp
out
push
adc
or
clc
in
cli
or
std
pop
adc
push
and
or
mov
call
mov
aad
int
fadd
fdiv
roll
lret
fdivrp
fimuls
or
fldl
fcmovbe
sbb
sbb
and
adc
add
cld
add
jmp
daa
and
xor
lods
out
repnz
leave
into
mov
rcl
mov
mov
add
push
add
loop
loopne
push
out
out
icebp
call
out
adc
or
call
add
pop
and
jecxz
call
das
or
out
test
fucom
lret
leave
mov
enter
mov
idiv
mov
fstp
icebp
stc
add
fsubr
cli
cli
aam
or
lret
lret
jmp
into
in
adc
push
in
repnz
pxor
adc
add
add
adc
pop
out
cs
add
xor
fistpll
mov
icebp
cmc
fxch
hlt
fcomi
mov
neg
loop
loop
or
leave
lock
icebp
adc
jmp
sar
ljmp
push
adc
out
add
add
ljmp
sti
xor
xor
add
mov
into
out
aad
int3
mov
mov
cmc
jmp
aad
stc
add
jmp
loope
in
or
rolb
add
out
push
cmc
out
std
fsub
fbld
adc
div
jmp
add
and
sub
in
xor
push
fsubrs
in
jecxz
out
loopne
aam
mov
stc
mov
jecxz
out
or
pop
call
or
shl
shl
adc
pop
pop
or
adc
icebp
fcomp
adc
stc
sub
sti
jecxz
in
add
icebp
push
adc
ret
mov
repz
ret
cmc
mov
fcom
sarl
jecxz
loope
hlt
pop
fucomi
add
fcoml
repnz
adc
push
in
div
repz
and
push
in
sbb
and
or
or
in
and
in
jmp
mov
jmp
repz
cli
xlat
rcr
fldl
mov
or
icebp
call
or
cli
movlps
and
out
or
in
cmc
and
cs
add
sub
mov
int3
int
out
sti
test
shl
cmc
add
fcom
or
cld
fmul
out
faddp
icebp
out
fucomip
fucomp
push
in
jmp
rcrb
jmp
sbb
adc
sbb
sub
sub
pminsw
xor
xor
and
mov
out
jecxz
rcr
mov
xlat
mov
repz
rcr
hlt
out
add
iret
add
add
add
adc
hlt
hlt
out
stc
out
sbb
hlt
hlt
in
cld
repz
in
in
push
and
sti
sub
ret
ret
ror
scas
cmc
lock
mov
rcr
mov
loopne
clc
aam
in
push
sti
lret
fdivp
or
adc
adc
fmuls
fcmovu
add
std
cld
or
ljmp
aaa
out
int
ror
aad
out
fsub
mov
fld
fdivr
fxch
stc
mov
jecxz
testb
in
push
out
leave
int3
leave
int3
int3
or
out
int3
or
or
xlat
push
or
adc
loop
adc
pop
pop
pop
out
sti
out
push
adc
and
in
out
mov
int3
mov
fcmovnu
fxch
repnz
hlt
hlt
repnz
lock
aad
cmc
stc
out
int
add
in
or
push
repz
and
out
out
daa
es
xor
jmp
add
sub
not
in
int3
xbegin
lret
mov
mov
fcmovnb
jecxz
xlat
fmuls
ljmp
rcl
jmp
or
add
and
adc
adc
sti
or
sub
sbb
cld
add
sbb
lods
mov
mov
clc
repnz
cmc
fldl2e
lret
fld
rolb
fmuls
faddp
or
or
xlat
call
jmp
pop
icebp
add
jmp
or
in
testl
push
sub
and
sub
sub
mov
ljmp
call
clc
fdivs
lds
out
xlat
or
loop
rolb
or
in
testb
ljmp
sbb
sub
push
das
sub
or
adc
xor
in
sub
in
lret
ret
out
lret
out
lret
mov
ror
sti
loopne
xlat
fisttps
loopne
enter
or
pop
out
sbb
fsubrp
ljmp
pop
or
out
jmp
sub
repnz
shrb
lock
divl
fsub
fsubrp
fcmovb
loope
clc
neg
mov
movb
or
add
pop
sbb
in
out
aam
fcomp
std
cld
and
and
std
sub
sub
sbb
push
and
cs
loopne
fadd
mov
aad
jmp
ror
iret
cmc
repnz
testl
cmc
or
add
push
adc
pop
out
int
fdiv
lock
or
fcomi
mul
adc
imull
sub
cld
and
push
xor
loopne
out
leave
shll
ljmp
loope
rcl
mov
fcomp
fcomip
add
adc
int3
hlt
in
add
jmp
imul
out
adc
clc
pop
and
in
fldt
add
add
adc
adc
sub
icebp
fmul
in
mov
stos
out
icebp
loop
sti
leave
scas
fdivs
ret
call
in
in
call
jecxz
add
add
ljmp
and
lock
daa
fisubs
or
and
in
xor
rol
mov
icebp
mov
mov
stc
int3
out
cld
shl
loope
add
mov
pavgb
in
shl
push
lock
shr
or
sbb
add
div
std
sbb
pop
sbb
pop
adc
out
adc
add
shll
stc
ljmp
stc
in
loope
int
aam
out
std
fmull
adc
push
adc
jmp
ficoml
adc
icebp
adc
lock
cld
jmp
or
out
add
add
and
in
lds
into
shr
leave
mov
fildl
add
mov
cmc
fidivrl
fnstsw
out
or
out
add
add
cmc
or
or
sti
sbb
sti
hlt
sbb
daa
fsubrl
push
add
std
push
xor
add
and
out
les
lock
xlat
out
mov
flds
lock
out
add
or
in
fdivrp
jmp
pop
adc
or
testl
cld
cli
push
jecxz
add
sub
pop
into
cmpsl
shrb
out
mov
fsub
mov
idiv
idiv
cli
shl
mov
or
lret
jmp
loop
fsubp
add
loop
fdiv
aam
sbb
adc
loopne
out
adc
notb
push
add
imull
out
sub
out
or
repnz
jmp
scas
lods
out
ret
clc
call
jmp
clc
fadd
out
ret
in
add
add
or
in
loop
adc
or
fsubr
hlt
ljmp
and
add
pop
in
or
push
in
or
cs
stos
scas
jecxz
rcl
ljmp
mov
add
in
mov
clc
out
fcmovu
paddw
lret
out
out
shl
adc
add
lock
out
or
adc
or
and
out
xor
push
push
repz
aaa
cmp
mov
out
fucomip
int
into
fcmovnbe
ljmp
std
sar
icebp
jecxz
faddp
incl
enter
repnz
adc
adc
adc
sbb
adc
ljmp
push
jmp
sub
mov
jmp
in
mul
imul
cld
out
enter
mov
roll
in
push
out
vpavgb
in
adc
pop
push
sbb
repz
or
adc
and
sbb
sub
push
ljmp
or
sub
mov
stos
in
in
mov
mov
out
aad
mov
xlat
shl
mov
or
or
add
fcmovne
loop
add
out
notb
jmp
fstps
lock
and
sbb
decb
add
scas
shrb
shlb
xlat
call
mov
vpsubq
test
std
loope
in
aam
ljmp
fcmovbe
lock
xlat
cld
lock
icebp
adc
in
push
sbb
or
push
add
push
ljmp
in
shr
rcl
int
repz
std
hlt
fcmovnb
rol
ret
add
vpaddd
rolb
repnz
rorb
loope
pop
push
sbb
push
ficomps
add
and
div
es
jmp
push
add
decb
adc
xor
out
mov
jmp
leave
leave
fcmovbe
sti
repz
clc
ljmp
pop
int3
in
push
in
clc
out
out
imul
out
or
cli
fstl
out
sti
sub
sub
psubd
and
adc
call
es
call
in
ror
mov
cli
ljmp
ljmp
add
into
loopne
loopne
into
out
repnz
loopne
sti
adc
fsubr
cli
jmp
in
div
add
and
sbb
daa
sbb
out
and
ss
out
lods
in
stos
mov
shl
aam
jmp
loopne
jecxz
imul
in
rcl
in
add
cli
add
adc
add
xlat
pop
clc
stc
adc
fdivp
or
fildl
sub
sub
and
push
out
in
sub
xor
loopne
in
lods
in
lret
mov
mov
in
cmc
jmp
mov
repnz
aam
ret
loope
lret
in
push
lock
jmp
loope
add
adc
pop
adc
loopne
neg
fsubp
loope
in
and
sub
out
add
xor
sub
iret
icebp
lret
loopne
sar
hlt
stc
hlt
mov
hlt
int
xlat
lock
in
mul
enter
lret
repnz
lock
loopne
pop
push
sbb
icebp
fisttpl
fstp
fdivr
negb
jecxz
adc
add
or
sub
and
xor
lods
shr
in
rcl
int3
in
mov
mov
cmc
stc
add
stc
mov
loope
add
xlat
loope
sti
or
repnz
into
add
adc
in
cld
jmp
adc
loopne
sbb
adc
ljmp
std
or
and
das
or
lock
out
scas
jecxz
in
fucomp
in
in
ret
jmp
inc
shl
sar
rcr
fdivr
jmp
cld
loop
fstp
icebp
in
pop
jmp
fistl
repnz
sub
and
sub
sbb
or
add
xor
in
stos
shrl
repz
ljmp
hlt
fiadds
std
fisttps
lret
add
lds
fstl
add
in
in
rolb
push
jmp
negb
cli
push
sbb
sub
jmp
sbb
push
sub
adc
sub
mul
out
jecxz
test
jmp
iret
sti
fistpll
mov
icebp
cld
leave
jecxz
add
or
adc
sbb
or
add
or
and
push
sbb
sub
sbb
add
and
xor
repnz
enter
lock
jmp
fsqrt
std
aam
mov
mov
idiv
in
int3
out
out
movlps
or
adc
aad
adc
and
or
sbb
and
in
jmp
and
cmp
lods
stos
enter
ljmp
int
mov
mov
aad
add
fmull
testb
leave
loop
dec
paddw
or
out
or
out
push
jmp
adc
pxor
sub
cs
sub
and
in
mov
leave
in
out
fmul
mov
int
loope
jecxz
in
flds
fcmovnbe
ljmp
in
int
adc
aad
adc
sbb
adc
stc
adc
fistpl
sbb
std
or
daa
out
add
add
call
aam
iret
cld
sti
cmc
xlat
jmp
out
cli
iret
out
push
or
cli
clc
cld
out
push
filds
icebp
jecxz
out
xlat
or
cld
sbb
adc
and
stc
add
or
and
push
out
enter
int3
stos
call
out
mov
sti
aam
mov
or
lret
jmp
add
shl
testb
rolb
xlat
ficoml
adc
std
stc
adc
sbb
call
loopne
adc
sbb
and
and
mov
fnstsw
repnz
xlat
fsub
loop
clc
cld
or
in
add
rcr
out
adc
idiv
f2xm1
repnz
fmuls
sbb
or
and
cli
or
or
mov
mov
out
mov
mov
iret
shl
fucom
ret
push
add
loopne
ret
lret
out
cli
leave
push
loope
int
xlat
notl
imul
aad
and
jmp
adc
out
mul
pop
add
jmp
and
cmpsl
movsb
loope
jmp
icebp
jmp
in
xlat
jmp
ret
fsub
add
lret
add
loope
jecxz
in
cmc
std
aam
out
in
cli
in
adc
fdiv
and
repnz
sub
pop
pop
cvtps2pi
add
in
sub
hlt
xor
into
lret
shl
iret
bnd
mov
in
into
loope
xlat
push
hlt
shr
or
call
adc
or
pop
stc
rorl
fisubl
idiv
add
or
sbb
sub
sub
sbb
sbb
sub
jecxz
in
scas
idiv
ret
lret
into
out
sarl
add
hlt
cmc
lret
jecxz
add
add
add
adc
stc
icebp
or
push
push
sbb
and
in
in
sub
hlt
or
sub
or
mov
mov
hlt
aam
fbstp
mov
mov
icebp
fstpt
loop
cmc
or
aam
ljmp
out
or
xlat
out
sbb
repz
fnsetpm(287
in
adc
cmc
add
sbb
std
and
jmp
clc
mov
int
hlt
repz
lock
mov
xlat
call
cld
in
cli
or
add
adc
icebp
testl
fstpl
adc
or
sub
push
daa
das
adc
and
out
out
mov
out
scas
lret
jmp
in
int3
aad
ffree
loop
lret
or
clc
fcmovnbe
push
iret
fmulp
adc
pmuludq
or
xlat
out
out
repnz
fsts
repnz
and
sbb
ljmp
sub
xlat
out
jmp
mov
out
fcmovb
call
std
rcl
sti
ret
mov
in
in
fucom
icebp
icebp
out
out
in
rcl
lock
adc
and
push
and
adc
cli
add
idiv
in
and
repz
lret
int
mov
enter
in
hlt
iret
mov
xlat
out
lret
rolb
les
out
in
out
push
aam
notl
out
loope
jmp
and
add
div
cld
idiv
sbb
daa
sbb
cld
call
das
and
icebp
leave
into
mov
iret
jmp
fcmovbe
mov
repnz
sar
cld
rcr
add
fsub
cli
add
jmp
add
push
pop
sbb
shl
stc
aam
or
fdiv
hlt
loope
fisubs
cmc
sbb
out
icebp
repnz
adc
test
in
jecxz
scas
ljmp
mov
faddp
xlat
ffree
in
add
into
add
ljmp
fistpl
idiv
lock
and
adc
hlt
sbb
or
and
sbb
add
xor
and
fadd
jmp
lods
out
call
mov
mov
out
aam
add
jmp
leave
in
push
shr
out
out
pop
cld
in
fcompl
loopne
and
cs
in
add
repnz
ss
repz
jmp
clc
cmc
in
cli
stc
icebp
fcmovbe
add
pop
rcl
add
loope
adc
or
add
repnz
sti
or
fisttpl
loop
or
or
and
add
xor
int3
shrl
out
in
stc
in
mov
mov
loope
loopne
hlt
or
loope
in
fdiv
call
aam
repnz
push
fldenv
fldlg2
sbb
fiadds
or
sbb
sub
adc
mov
icebp
out
ffree
lock
in
mov
hlt
int3
clc
iret
add
jecxz
push
or
int3
out
lret
out
call
or
faddl
sar
and
push
in
loop
or
call
and
or
mov
loope
mov
cmc
fucomp
iret
rcl
lret
shr
shlb
std
ljmp
adc
push
pop
clc
push
mov
or
in
out
fmull
sbb
sub
out
or
cs
das
or
jmp
into
mov
mov
ljmp
int3
mov
fdivrl
add
in
hlt
cmc
out
sbb
out
adc
sbb
repz
out
adc
fstl
daa
pop
sub
sbb
push
cvtps2pi
add
pop
cs
jmp
into
jmp
cli
out
fsubr
mov
add
add
push
out
repz
ret
push
or
or
rcl
clc
hlt
hlt
ljmp
sbb
and
and
ljmp
icebp
push
adc
test
into
ljmp
fucomi
lret
mov
rcr
fcmovbe
lock
add
add
ret
fiaddl
sti
loope
in
repz
add
into
jmp
push
clc
cld
sbb
add
adc
add
sub
adc
add
incb
push
and
leave
in
in
into
in
mov
aad
fdiv
lret
repnz
cld
icebp
mov
sti
aam
add
enter
sti
in
push
jecxz
fdiv
jmp
add
fcomip
or
in
sbb
sti
sbb
add
add
sbb
cs
sub
scas
leave
les
int3
lock
std
mov
in
out
lock
out
add
in
imul
push
adc
sbb
clc
add
sbb
jmp
or
adc
pop
cmp
ret
mov
cmpsb
lret
fistpll
jmp
int
loopne
fnstcw
fcmovnbe
cli
sti
xlat
or
push
movhlps
repnz
add
ficoml
adc
sbb
add
adc
loop
add
add
sbb
stc
sbb
std
and
mov
and
shrl
sarb
iret
loop
ret
add
hlt
add
pop
out
or
in
adc
aam
decb
clc
add
adc
cmc
rorb
ficomps
in
and
adc
cli
sub
sbb
std
in
or
or
lock
in
bnd
lds
into
add
shr
mov
leave
lret
fcmovu
ret
add
add
call
out
out
fimull
adc
or
adc
sbb
add
sub
add
xor
add
ret
fsubrp
clc
lret
out
mov
in
lock
cld
not
test
cld
loope
in
add
div
or
shl
push
lock
and
fbld
fstl
and
sub
adc
xor
adc
out
fucomp
mov
mov
mov
neg
add
mov
or
ret
enter
or
in
iret
push
adc
hlt
adc
sbb
and
sbb
pop
sub
push
and
or
add
lock
mov
idivb
mov
lock
aam
rcr
call
add
lret
add
repnz
adc
pop
leave
not
div
aam
out
or
or
and
negl
add
in
and
pop
divb
stos
ret
out
lock
out
fxch
icebp
out
in
lock
into
cmc
loop
clc
filds
aam
push
in
icebp
fists
ljmp
repnz
ljmp
std
and
repz
in
and
or
sub
xor
loopne
in
rcl
ror
fcmovnbe
out
fnstenv
shl
hlt
or
or
or
out
jmp
xlat
pop
xlat
ljmp
or
cmc
loopne
sub
div
in
or
jmp
adc
or
sub
fidivrl
scas
icebp
in
in
shl
aam
jmp
mov
in
cmc
loop
or
out
rorl
rcl
mul
in
adc
fldenv
or
pop
jecxz
and
and
in
add
std
sub
mov
mov
lds
mov
iret
mov
in
shl
cli
loop
jecxz
add
add
out
jecxz
ljmp
adc
add
stc
call
cli
add
sbb
loop
add
sbb
sbb
cli
in
push
adc
xor
add
in
enter
cmpsl
mov
ljmp
repnz
shl
fadds
rcr
push
push
out
clc
int3
repnz
iret
jmp
pop
or
out
ficompl
fcomi
aad
add
adc
out
in
out
or
and
ljmp
fucom
scas
clc
enter
lret
add
add
rcr
mov
add
into
cld
call
or
clc
add
fdiv
or
fcoml
loop
sbb
add
add
adc
add
add
jmp
icebp
mov
mov
mov
out
loopne
fsubrp
repnz
add
call
in
icebp
jecxz
in
loope
adc
or
and
add
loop
or
out
sub
out
daa
icebp
and
les
aam
in
loop
stc
fnstenv
into
fistpll
loopne
or
push
add
enter
add
jmp
push
adc
ljmp
hlt
and
repnz
std
stc
es
sti
clts
decb
add
or
out
out
mov
cmc
mov
aam
ljmp
cld
aad
in
push
shl
jecxz
pop
add
add
pop
jmp
add
or
sbb
xlat
movhps
push
icebp
and
sbb
adc
sub
or
sub
scas
lods
mov
shr
into
shl
repnz
repnz
jmp
loop
sti
mov
push
std
or
hlt
into
adc
or
bnd
shl
pop
clc
adc
in
out
adc
ljmp
sub
in
sub
fxam
jecxz
out
cmc
out
hlt
iret
mov
std
mov
rcr
mov
leave
add
incl
leave
fsubrp
lret
hlt
icebp
hlt
jecxz
stc
shl
adc
in
ud0
add
push
pop
sub
adc
and
repz
int
stos
ror
ljmp
jmp
mov
jmp
jecxz
push
sar
ret
imul
or
add
icebp
add
loope
in
or
cli
fimull
cld
hlt
out
sbb
push
cmc
adc
call
out
out
ljmp
mov
in
scas
fnstsw
rcl
enter
lret
out
leave
mov
repz
icebp
mov
or
int
push
adc
add
notl
icebp
hlt
sbb
out
and
adc
repnz
cmc
or
jmp
or
push
and
cmpsb
leave
fsubr
lds
aad
mov
in
jecxz
mov
loopne
hlt
push
fildl
incb
or
add
sbb
adc
sbb
loope
sbb
and
das
out
or
sub
xor
stos
out
cmpsl
test
loope
test
mov
mov
fcmove
hlt
rol
fsub
lret
push
or
call
pop
int
add
in
out
in
fsub
fcomi
push
loopne
push
and
add
and
cli
or
sub
repnz
in
mov
out
ljmp
mov
in
mov
ffreep
loop
vpaddsb
adc
pop
adc
jmp
fcmovnbe
shl
sti
fcoms
jmp
push
sti
sbb
call
sub
out
or
or
pop
ljmp
fdivp
hlt
repz
in
enter
mov
iret
cld
decl
enter
lock
wbinvd
adc
loop
adc
or
sti
out
lock
add
out
sub
and
or
and
adc
sub
or
add
scas
ror
int3
mov
into
lret
lock
in
aad
lock
add
or
in
mov
enter
loop
lret
in
pop
or
adc
std
paddb
sub
adc
incb
sbb
adc
xor
sub
out
lods
ret
mov
xlat
lret
clc
rcr
jmp
rcl
iret
in
int
add
push
mov
loop
repz
out
testb
or
push
testl
push
sbb
or
sub
add
sub
sub
in
loope
mov
mov
iret
lods
shl
scas
icebp
lock
out
hlt
std
loope
jmp
call
in
adc
out
push
push
fstpl
ljmp
pop
sbb
cmc
push
hlt
push
add
or
push
psllq
mov
cmc
loopne
ret
mov
ljmp
in
stc
ret
or
or
icebp
call
iret
add
jmp
or
sti
sbb
pop
call
or
stc
cs
add
add
ljmp
leave
mov
ljmp
idiv
iret
hlt
aad
loop
les
out
loope
pop
jmp
in
ljmp
repz
loopne
and
adc
call
mul
add
ljmp
cmpsb
sarb
test
int3
out
sarl
fdivr
repz
faddp
stc
int3
or
lret
fstp
iret
loopne
enter
fimull
repnz
fsubr
adc
and
and
cld
jmp
out
sub
sbb
adc
ud2
mov
frstpm(287
shrl
std
lret
fmulp
cli
in
clc
sar
fisttps
mov
cli
in
jmp
out
add
jmp
adc
in
icebp
sbb
repz
sti
or
and
and
xor
xor
sub
fbld
ret
ljmp
mov
clc
add
flds
jecxz
fadd
loop
lret
pop
repnz
roll
notb
loop
or
adc
sbb
sti
adc
and
es
testl
xor
and
add
fcomp
int
lods
mov
xlat
leave
mov
jmp
mov
loope
out
ret
loop
aad
in
fisttps
incl
push
add
ftst
cmc
fcmovnu
negb
sbb
incl
sbb
adc
cli
sbb
push
out
or
and
and
frstpm(287
enter
shl
int
in
fdivrp
out
out
mov
fcmovu
cld
sti
cli
clc
add
fscale
lock
adc
push
fistl
hlt
stc
pop
add
sbb
stc
add
das
push
std
out
adc
pop
push
or
out
int
mov
clc
aad
fdivrs
in
xlat
in
lock
call
adc
out
lds
lret
hlt
ljmp
or
add
sbb
push
sbb
xor
icebp
das
daa
sub
loopne
leave
jmp
leave
aad
in
mov
icebp
ret
std
repz
add
in
enter
adc
add
div
or
in
add
and
adc
cmc
call
sbb
or
add
loopne
shrl
mov
in
mov
cmc
cld
sarb
clc
cmc
enter
fcompp
push
add
in
icebp
int
into
psrad
hlt
or
sti
sti
std
negl
fisubs
pop
neg
clc
pop
hlt
or
jmp
sub
and
xor
repz
xor
iret
ret
iret
shrb
int3
mov
mov
out
lret
clc
fdiv
incb
loopne
repz
out
enter
fisttpl
adc
bswap
or
hlt
call
out
fisubs
and
adc
or
call
sub
add
cmpsb
call
rol
rol
in
icebp
mov
shr
mov
lret
add
clc
into
add
jecxz
shl
add
or
or
movups
and
sti
push
and
add
and
lock
sub
in
lock
int3
loope
mov
ljmp
enter
stc
cli
mov
decb
loop
in
fisttps
add
adc
jecxz
or
cli
pop
sbb
push
adc
and
jmp
and
add
pop
add
iret
stos
mov
ror
loop
int3
lock
call
cli
repz
out
lock
ffreep
enter
or
add
sar
icebp
fdivp
adc
or
incb
ljmp
jmp
xor
in
and
adc
rol
scas
out
enter
out
cli
sti
out
idivb
loope
sar
icebp
testb
bswap
jmp
out
call
stc
neg
adc
hlt
xlat
add
adc
loopne
add
and
rdtsc
pop
daa
es
and
mov
mov
int
shll
shr
jecxz
mov
leave
hlt
flds
out
out
int
or
add
xlat
pop
sbb
adc
cmc
ficomps
loop
daa
push
pop
sbb
or
call
xor
add
in
mov
lods
leave
icebp
cli
mov
std
leave
rcr
clc
mul
add
add
jecxz
fucomip
push
in
push
lret
xlat
out
testb
in
aam
push
or
or
and
and
pop
sub
sbb
out
sub
sub
sub
scas
xlat
out
mov
out
hlt
ljmp
leave
stc
in
in
xlat
out
shr
rorb
jmp
stc
enter
jmp
filds
push
fptan
jmp
adc
fprem
pop
and
add
repz
and
pop
ljmp
lods
lret
ffree
fadd
loope
mov
shr
repz
sarl
aad
add
not
call
incl
loop
shl
push
add
adc
aad
repz
push
or
add
clc
in
cld
std
xor
adc
push
into
lds
out
into
mov
rcl
lret
std
loopne
mov
repz
test
jmp
out
jmp
adc
shr
out
adc
pop
adc
stc
out
and
and
push
clc
push
es
add
and
movsl
int3
out
scas
in
lret
leave
jmp
hlt
cld
std
loop
filds
hlt
in
imul
ret
fisttpl
adc
repz
or
aad
adc
adc
icebp
repnz
push
out
adc
and
sbb
or
enter
test
mul
repz
jmp
enter
sti
fcomp
rcr
neg
repz
out
loopne
in
prefetchwt1
enter
in
pop
sbb
or
fnstsw
out
in
and
pop
cmc
jmp
ljmp
xor
loop
les
mov
iret
repz
lock
mov
les
shl
idiv
ljmp
adc
or
clc
call
sbb
push
and
adc
loop
call
add
es
out
into
loope
out
jmp
hlt
clc
clc
fcmovnb
mov
xlat
repz
in
sti
sti
cli
cld
in
std
loop
pop
shl
repz
shl
sti
sti
or
adc
jecxz
out
sbb
jecxz
stc
sbb
sbb
sub
lock
mov
scas
fdivp
aam
jmp
jmp
lock
in
jecxz
mov
idiv
fiadds
pop
add
rclb
shl
add
adc
ud2
out
adc
fdivr
loope
in
sub
repz
in
sbb
add
in
xor
sub
sub
ret
mov
scas
in
shr
cmc
in
hlt
mov
rcr
fnstcw
cmc
rcl
sar
loopne
icebp
in
or
push
add
lock
fstp
add
call
push
adc
in
and
idiv
ljmp
add
fidivs
scas
lock
stc
repnz
out
hlt
add
cli
mov
roll
add
or
fstp
add
out
adc
in
adc
add
add
out
pop
push
sbb
push
sbb
adc
add
add
jmp
jmp
jecxz
add
push
push
sub
ret
int
out
in
call
mov
out
repz
add
mov
or
cld
call
jecxz
add
add
aad
adc
repz
sti
out
lcall
and
clc
add
xor
sbb
out
shl
jmp
lret
jecxz
xlat
mov
mov
fcmove
aad
loopne
out
ret
sarb
jmp
adc
cld
iret
or
adc
repnz
adc
aad
sbb
and
add
adc
and
push
jecxz
or
lock
notl
iret
stos
in
loope
stos
lods
test
in
jmp
out
mov
mov
cmc
fsub
fldl
jecxz
aad
aam
adc
notb
lock
fcomp
fldl
and
loopne
add
sub
sub
push
sub
repnz
ffreep
rcl
mov
in
int
iret
xlat
leave
aad
add
int
add
fpatan
rcr
jecxz
fstp
leave
lret
fcoml
in
call
pmaddwd
add
add
loopne
fdivr
push
and
jmp
sbb
sub
adc
mov
shlb
in
call
repnz
mov
fdivr
int3
in
or
jecxz
jmp
add
cmc
or
or
in
push
adc
sbb
std
adc
es
sbb
das
incl
std
sub
sub
das
stos
loop
out
out
ffreep
mov
lret
out
loope
fucomip
loope
loop
repnz
or
or
iret
in
adc
loopne
adc
xlat
aad
sbb
in
fimuls
cld
and
adc
in
sub
add
adc
or
aaa
mov
mov
out
shl
fucomi
mov
lret
repz
testb
add
xlat
fisttps
jmp
adc
adc
icebp
fimull
cli
and
imul
add
adc
sbb
sub
xor
xor
xor
lret
stos
loopne
shlb
stc
xlat
mov
add
rcr
out
in
out
stc
call
jmp
jmp
rcl
adc
adc
cld
mov
pop
sub
pop
add
and
sub
or
out
scas
jecxz
fsubrp
ljmp
repnz
lock
mov
fcmovnbe
div
jmp
int
jmp
int
out
add
add
push
in
sti
or
fcomp
sbb
adc
sti
hlt
add
adc
add
or
adc
adc
and
cmpsb
fnstenv
imul
stc
xlat
in
ljmp
xlat
in
mov
xlat
incb
add
jmp
adc
out
adc
pop
adc
cld
fmull
ljmp
and
jmp
sub
and
adc
add
les
loop
mov
mov
lods
aam
fldpi
int3
loop
fsin
repz
or
std
out
fildl
add
or
add
add
cld
adc
idiv
or
ljmp
sbb
and
and
mul
lret
in
lret
shr
lret
div
lret
jmp
stc
int3
xlat
fdivr
clc
inc
clc
ret
pop
add
in
fcmovne
out
ljmp
adc
add
in
add
out
sub
push
push
lock
xor
and
fsub
mov
mov
leave
mov
int
out
mov
lock
add
lret
or
jmp
fdiv
into
out
loop
ljmp
or
add
testb
push
and
in
call
out
es
ret
fucomi
in
rcl
ret
ljmp
call
icebp
ret
add
or
int
pop
loope
out
cmc
or
or
in
testb
adc
and
fcompl
push
loope
daa
pop
adc
push
cmc
pushl
or
loope
fisubrs
shl
loope
mov
fsubr
jecxz
shl
mov
add
pmulhuw
out
int3
fisttps
push
jmp
xlat
clc
adc
ljmp
sbb
out
sbb
jecxz
push
out
sbb
adc
loop
repz
div
divl
clc
mov
std
into
mov
vshufps
in
or
pminsw
xlat
loopne
or
or
xlat
push
adc
fdiv
sbb
lcall
jmp
and
add
or
xor
in
iret
fadd
lods
repz
hlt
call
mov
rcr
ljmp
aam
fst
enter
adc
jecxz
adc
or
push
pop
adc
add
hlt
std
sti
and
jecxz
or
stc
and
push
pop
add
scas
repnz
mov
mov
cmc
fldl
mov
add
fnsetpm(287
cld
out
adc
adc
push
adc
pop
testl
adc
lock
in
or
daa
out
xor
in
stos
test
mov
repnz
aad
divb
lock
mov
sti
call
or
out
call
repz
pop
sbb
out
sbb
notl
push
hlt
cmc
and
in
or
icebp
add
hlt
cmc
xor
rcr
shr
fldt
out
mov
mov
sti
out
stc
mov
hlt
fadd
fmul
mov
shl
or
push
shl
lock
in
or
pop
ljmp
lock
repz
push
push
cs
out
and
mul
sarb
in
loop
out
enter
aam
repnz
clc
mul
rol
fcmovne
adc
out
into
adc
out
or
shl
icebp
cld
add
sbb
clc
push
out
cli
sub
pop
add
clc
and
add
xor
push
and
xlat
loopne
icebp
rcl
call
in
mov
fcmovnbe
not
idiv
inc
cld
pop
push
loop
out
lret
fcmovne
adc
adc
xlat
adc
fdivr
push
adc
lock
in
xor
and
add
out
das
xor
out
scas
in
out
out
xlat
icebp
leave
int
mov
inc
cmc
jecxz
fst
out
add
sti
std
in
jecxz
adc
adc
repnz
loop
or
icebp
rcl
push
cld
push
push
adc
pop
add
add
sbb
add
out
cmc
test
mov
fmulp
fstpt
cli
clc
incl
out
int3
or
cld
shl
add
in
stc
hlt
clc
in
sbb
lcall
psllq
pop
std
or
hlt
and
jmp
push
add
add
and
enter
shlb
fsub
out
in
lret
into
mov
ret
add
in
mov
in
out
or
jecxz
or
out
repz
xlat
out
cli
sti
and
out
pmulhuw
loop
sbb
sti
push
sbb
and
add
daa
xor
out
repz
mov
jmp
stc
mov
loope
push
iret
sar
out
inc
add
call
ror
adc
sbb
pop
cmc
or
add
loope
adc
sbb
and
or
sbb
clts
xor
sub
out
in
mov
stos
stos
iret
imul
ret
jmp
jmp
aad
repz
enter
fnstsw
enter
push
rcl
repnz
pop
in
jmp
aam
add
in
repz
std
or
and
daa
das
sub
or
repnz
lods
out
mov
mov
stc
in
xlat
hlt
out
mov
repz
or
ljmp
push
pop
jmp
psadbw
or
push
loop
push
out
add
add
adc
and
icebp
or
fldl2t
fst
into
icebp
in
repnz
jmp
icebp
call
fdiv
shl
mov
add
cli
enter
repz
aad
out
in
repz
std
fmull
in
jmp
push
sti
and
in
sub
stc
sti
in
and
pop
repz
test
scas
ljmp
shl
mov
std
pop
ljmp
fisttps
out
pop
add
sbb
std
sbb
cmc
loope
adc
testb
sbb
or
in
sbb
sub
lret
shl
jmp
mov
fdivs
out
incl
test
repz
pop
mul
or
rcl
call
pop
out
cld
cld
out
sbb
adc
pop
and
testb
cld
sbb
in
idiv
out
or
and
call
leave
scas
loop
loope
jecxz
cmc
scas
fmul
aad
clc
rol
cmc
lock
cmc
loopne
or
fcmovb
fxch
push
out
adc
or
add
psubw
fsub
in
fcmovbe
or
or
adc
sbb
and
adc
sub
and
sub
and
lock
int3
jecxz
jmp
icebp
fsub
into
into
std
loopne
bnd
jecxz
fldl2t
add
jmp
not
repnz
in
adc
call
loopne
sti
cli
pop
ljmp
in
jmp
clc
and
ljmp
call
aad
divl
mov
add
div
lock
icebp
add
cli
loop
fimuls
add
repz
add
fcom
not
in
sbb
add
lock
in
pop
loop
sub
jmp
ljmp
repnz
cmpsl
fcmovnu
icebp
ret
lret
jmp
mov
jmp
hlt
not
mov
fiaddl
loopne
fsub
add
clc
stc
in
adc
adc
in
push
adc
hlt
into
jmp
idiv
adc
in
sbb
jmp
sub
or
and
fisubs
mov
in
in
lret
out
stc
add
sar
rcr
loopne
aad
add
dec
loopne
int
out
adc
sti
in
push
out
ficomps
notb
call
cld
cli
das
incb
and
sub
in
jmp
not
imull
aam
int3
repz
in
fdivrl
lret
into
fisttpll
call
repz
add
hlt
or
notl
push
in
std
idiv
pop
and
ljmp
adc
decb
or
ret
int3
int
scas
mov
fnstcw
clc
mov
aam
lret
in
loopne
out
int
in
aad
into
or
adc
push
jmp
aad
sti
cld
push
fildl
sti
or
and
cs
iret
mov
ljmp
mov
mov
fcmovnb
incl
decb
ret
jmp
int3
adc
iret
repnz
jecxz
fcompl
in
push
xlat
cli
clc
add
adc
push
testb
and
call
xor
sub
repnz
out
scas
scas
jmp
lock
scas
neg
mov
enter
in
mov
mov
fsub
adc
loope
hlt
aad
xlat
aad
or
add
nop
mul
testb
pop
sbb
das
xor
adc
sub
shr
loop
lret
rol
lret
jmp
mov
fucomp
fldl
lock
cmc
ret
add
ror
movl
out
sar
loopne
ficoml
jmp
or
or
lock
testb
adc
or
sti
and
and
in
and
movsl
rcr
ret
out
rol
jmp
repz
mov
mul
in
mov
out
out
loopne
or
or
out
adc
lock
in
repz
fiadds
pop
icebp
sti
cli
or
loop
pop
in
adc
adc
xor
lods
scas
mov
int
sar
sti
mov
int3
mov
rcr
rorb
cmc
out
imul
std
loopne
jmp
add
sbb
cmc
pop
adc
rcll
add
fbld
add
add
sbb
push
or
in
rol
mov
mov
cli
shr
fstpt
fxch
fstp
enter
out
loop
in
call
aam
or
fsqrt
fdivr
add
fiadds
adc
hlt
call
sub
add
xor
lods
leave
in
movsb
mov
in
scas
jecxz
rcl
in
iret
out
neg
lret
mov
add
cld
jmp
lock
std
out
roll
div
in
push
out
out
or
sbb
adc
clc
sbb
idiv
in
sbb
or
sub
add
out
fcomi
cli
imul
fdivl
aam
repnz
mov
mul
or
lret
int
add
add
lock
aam
sbb
adc
cld
and
sub
das
or
sbb
add
fldenv
repnz
rol
int
jmp
in
mov
cld
sar
add
in
sar
add
or
in
lock
adc
ljmp
jmp
notb
and
sub
out
out
std
adc
and
mov
in
out
in
cmc
jecxz
fpatan
hlt
fistpll
int
repz
ret
loope
in
jecxz
loopne
out
push
jmp
adc
clc
add
add
or
lock
add
and
or
std
sub
pop
add
call
imul
into
stos
mov
out
mov
fadd
mov
repz
fnstsw
lret
psubw
sti
fcmovu
out
or
icebp
ljmp
and
repz
push
cli
repz
sbb
sbb
or
and
xor
cmp
lock
mov
into
loope
xlat
mov
icebp
jmp
jmp
int
in
neg
repz
in
add
int
loope
or
or
sti
adc
stc
and
stc
and
std
sub
jecxz
ud0
lock
ss
adc
in
out
enter
in
shll
loopne
loop
clc
push
mov
fucomp
cmc
in
enter
call
in
add
lock
pop
add
sbb
sub
sbb
pop
sbb
xor
add
mov
call
ljmp
mul
mov
repz
add
fcomp
int
lret
out
lret
icebp
xlat
or
pandn
push
sbb
add
testb
daa
pop
add
sub
out
out
out
iret
mov
mov
jmp
ret
mov
out
scas
mov
rol
add
cld
cli
mul
ret
cld
ffree
ljmp
mul
repnz
or
repz
add
and
clc
push
add
clc
sbb
daa
stc
sbb
daa
pop
leave
in
icebp
loop
fdivp
iret
cmc
out
div
lret
xlat
shr
push
lock
out
cld
fmul
call
into
loopne
or
cmc
shl
shl
adc
add
in
adc
push
clc
cld
incb
ljmp
push
xor
ljmp
cmpsl
mov
out
ret
ret
clc
in
int3
icebp
ror
loopne
rcl
loope
div
or
cld
fsin
into
ljmp
or
adc
cmc
pop
sbb
and
add
sbb
imul
adc
add
or
rep
ret
mov
loop
in
in
out
aad
in
rolb
fucomi
fcmovu
neg
int
cld
call
lret
rcr
or
in
sbb
push
icebp
clc
push
fsubp
and
sub
call
sti
sub
sub
iret
lods
mov
out
loop
repz
mov
mov
sti
out
cli
fprem
add
or
lret
sti
std
or
add
out
pop
sbb
or
jmp
or
or
or
cmc
ljmp
repnz
or
cmpsb
mov
les
cmc
rcl
add
mov
stc
sar
cmc
jmp
adc
add
or
clc
out
fsincos
sti
adc
fcompl
pop
loop
adc
add
sub
cli
jmp
clc
stos
fucomp
ffreep
int3
out
lret
lods
fsubrs
repnz
fistpll
loop
ret
add
jmp
ret
std
jmp
call
sbb
jmp
cli
adc
and
lcall
fistps
out
add
repz
jecxz
in
mov
in
clc
stc
fidivrl
loope
clc
mov
or
call
enter
or
jmp
fsub
or
clc
adc
clc
es
add
or
add
ljmp
cld
sub
adc
ffree
into
fsubrp
sarb
icebp
mov
mov
fucomp
fcmovu
in
div
in
or
sti
enter
ficoms
adc
add
shl
lock
iret
cli
sbb
prefetchnta
push
out
and
out
and
ljmp
add
and
sbb
in
shll
ljmp
faddp
ret
in
cld
stc
add
aam
enter
loopne
or
loopne
pop
out
add
jmp
adc
in
stc
clc
stc
adc
push
sbb
add
add
xor
les
xlat
scas
in
lret
cmc
iret
call
cld
aad
add
in
sti
add
jecxz
or
or
or
not
sbb
xlat
ljmp
adc
clc
sub
add
adc
xor
or
lods
aad
ljmp
in
into
jmp
test
fchs
shl
mul
or
fsub
adc
rcr
adc
adc
adc
add
and
or
push
ljmp
add
add
lret
ljmp
scas
scas
lret
enter
sti
lret
repz
in
fiadds
mov
ljmp
testb
push
call
cli
sbb
fldz
push
or
jmp
sbb
jmp
clc
add
repz
push
cmp
stos
mov
out
out
test
mov
mov
inc
std
fisttpll
in
loope
int3
int
add
idiv
add
sbb
cld
sti
adc
push
repz
add
fstl
es
loop
cmc
pop
adc
sub
std
push
push
and
mov
scas
into
fsubr
clc
mov
mov
mov
fsubp
mov
fstpt
wbinvd
lret
add
add
repnz
or
sbb
loopne
icebp
idiv
and
repz
sti
and
and
xor
pop
push
in
mov
ljmp
aam
mov
iret
mov
loopne
stc
fucompp
stc
jmp
fneni(8087
in
loope
jmp
out
push
unpcklps
sbb
fists
repz
and
pop
daa
sub
add
out
std
out
cmc
add
lret
fcmovne
scas
mov
xlat
shlb
mov
shl
in
std
or
aad
lret
enter
iret
push
adc
pop
jecxz
out
adc
fisttps
in
push
mov
adc
and
out
sbb
pop
in
adc
or
repnz
icebp
mov
jmp
add
rcr
aad
testb
or
fists
jecxz
shl
ljmp
hlt
jmp
and
es
or
loop
jmp
cli
or
add
mov
call
neg
lret
mov
mov
stc
fmulp
stc
into
filds
rcr
or
jmp
jmp
int
in
push
or
pop
psrld
add
add
sbb
push
add
add
sub
push
adc
cmc
in
out
shll
leave
ret
mov
ret
mov
fcomp
idivb
ljmp
lock
or
or
cmc
adc
sbb
sbb
sbb
stc
sub
pop
cld
sbb
call
add
xor
and
mov
call
rcr
icebp
aam
cli
repz
into
decl
rol
lret
loopne
or
fucomp
rcl
jmp
out
or
or
fsubl
push
cli
sbb
push
sbb
cli
sub
sbb
ljmp
fisubrl
lret
in
mov
loopne
loope
icebp
add
fcomi
lret
ljmp
icebp
loopne
loopne
pop
iret
pop
cmc
shl
fcmovnu
sbb
push
jmp
sbb
out
push
sbb
push
push
add
adc
fsubrs
lock
fsubr
iret
in
fst
icebp
add
stc
mov
ret
add
or
or
mul
stc
call
adc
adc
or
out
and
and
and
add
in
and
call
pop
push
lods
stos
enter
in
shl
int3
loop
repnz
mov
sar
mov
add
fiadds
call
out
loope
pmaxsw
clc
pop
push
adc
add
pop
adc
loop
in
or
sbb
sub
adc
adc
leave
aad
hlt
mov
cmc
cli
flds
enter
loope
fsubrp
lret
push
pop
repz
push
rcll
adc
adc
and
sbb
or
sti
add
and
or
in
mov
jmp
in
fcmovnu
mov
fdivrl
xlat
add
rcr
fmul
add
add
out
aad
rclb
add
jmp
out
and
std
out
or
in
pop
sbb
in
push
add
sub
jmp
mov
mov
jecxz
mov
fdivr
in
jmp
cld
in
fisttpll
jecxz
int
in
stc
int3
add
jmp
leave
loopne
or
push
out
out
idiv
cld
or
pop
and
adc
cmc
sbb
adc
in
and
or
repz
ret
aam
lock
mov
div
mov
out
leave
mov
fildl
add
jmp
out
cld
fsub
aam
add
loopne
out
or
adc
pop
out
loope
loop
es
mulb
and
daa
jmp
and
call
ret
shlb
rcl
mov
add
add
add
push
in
out
fsubr
or
pop
loop
cmc
aad
or
ljmp
and
or
or
push
sbb
daa
in
or
add
sub
lret
lds
repnz
fcmovb
mov
test
or
or
or
in
add
push
loope
jmp
or
fimull
repz
sbb
sbb
and
pop
and
cvttps2pi
adc
hlt
ljmp
ret
out
leave
in
in
repnz
mov
repnz
call
out
fisttpll
out
rcl
rorl
testl
cmc
incl
adc
jecxz
push
adc
jmp
out
and
jmp
ss
lds
mov
in
out
aad
std
jmp
roll
hlt
cld
fidivrs
out
add
or
adc
negb
repnz
icebp
adc
stc
jmp
and
jmp
cvttps2pi
les
cmpsl
mov
hlt
call
sarb
vpaddb
ret
add
mul
ficoms
loopne
jmp
stc
lock
in
fisttpll
push
push
repz
cld
add
pmaxub
add
loop
sub
or
adc
icebp
add
in
lods
hlt
mov
enter
mov
xlat
mov
mov
loope
add
or
add
in
in
loope
repnz
push
in
pop
out
in
push
fstp
or
in
stc
loopne
or
adc
or
sbb
adc
push
push
xor
in
mov
mov
mov
iret
repz
cli
mov
filds
enter
in
fadds
cld
leave
or
in
lock
in
in
sti
aam
or
adc
or
jecxz
stc
cli
repnz
pop
xor
daa
in
daa
pop
cmp
mov
into
loop
scas
lret
mov
int3
rcr
clc
mov
mov
rol
out
clc
cli
enter
call
loope
repz
repnz
cld
sbb
jmp
adc
push
idiv
add
out
es
cs
sub
adc
iret
rol
lock
mov
int
in
repz
jecxz
xlat
roll
jecxz
enter
into
jmp
add
in
adc
aad
pop
ficomps
lock
div
jecxz
loop
sti
jmp
and
ljmp
xor
adc
and
ret
in
repz
rcr
ret
fucomi
fucomi
fucom
cld
out
sarb
repnz
lds
jmp
or
in
aam
out
out
lock
lock
daa
push
cld
out
in
sbb
testl
in
repz
loopne
int
mov
lock
jmp
mov
aam
div
stc
fldln2
lret
adc
or
lar
idiv
sbb
decb
not
lock
add
fstl
loopne
cli
adc
sub
or
add
push
ret
fmul
fsubr
in
jecxz
lret
shrb
jmp
sar
mov
jmp
cld
or
cli
push
rcr
int
lock
or
fmuls
and
in
fpatan
sbb
cmc
or
es
sub
cs
icebp
pop
and
or
fisubl
lock
fmul
rol
idiv
push
cmc
add
std
mov
fpatan
rorl
or
in
call
add
shl
in
in
clc
invd
cli
call
sbb
and
adc
push
sub
push
or
and
push
push
push
xor
lds
loopne
out
ret
mov
mov
rolb
icebp
out
fsincos
or
push
in
ljmp
hlt
adc
pop
pop
and
or
repz
or
call
in
out
hlt
adc
in
rcl
out
out
lret
out
clc
mov
sti
cmc
mov
or
or
or
add
adc
sbb
or
out
adc
in
or
add
add
xor
lods
sarl
loop
leave
cli
mov
idivb
out
out
movl
into
or
in
lret
out
out
sbb
adc
notl
stc
pop
stc
hlt
filds
sbb
repz
in
and
ljmp
repz
sarb
stc
lock
leave
repz
lret
jecxz
mov
icebp
xlat
or
ljmp
add
adc
pop
xlat
in
out
in
adc
sbb
loopne
sbb
out
out
es
in
add
or
adc
cmp
out
mov
hlt
ret
in
fadd
iret
out
ljmp
idiv
hlt
xlat
lret
or
jmp
or
in
icebp
or
repnz
cld
adc
loopne
icebp
repnz
sub
add
adc
push
adc
and
add
scas
fidivrl
mov
jmp
scas
into
ljmp
in
fcmovbe
fmulp
lock
or
aam
into
add
adc
aad
push
stc
in
cmc
add
and
out
sbb
add
and
out
xor
and
stos
out
shr
lds
mov
into
cmc
sti
aam
mov
in
out
mov
cli
icebp
or
add
jecxz
push
push
pop
sbb
or
ljmp
out
adc
pop
or
jmp
in
mov
in
clc
out
mov
fucomp
in
fdivr
loopne
iret
add
out
lret
fmulp
icebp
std
loopne
loop
or
or
icebp
fmuls
idiv
pop
sbb
loope
lock
add
in
imulb
ljmp
icebp
repnz
lret
test
mov
stc
stc
mov
fcmovnu
mov
out
add
fcos
xlat
iret
repnz
add
jmp
lock
adc
pop
fyl2xp1
clc
cld
or
out
or
hlt
and
push
sti
add
lcall
adc
pop
out
jmp
ljmp
ljmp
rcr
add
bnd
fld
push
or
int3
jmp
enter
or
out
in
lock
or
adc
sbb
and
or
icebp
call
and
cmpsl
mov
iret
mov
ret
mov
iret
icebp
rcl
repnz
rcr
push
xlat
in
or
sti
jmp
roll
enter
sar
shr
or
call
add
repz
sbb
sbb
in
call
push
or
and
out
out
out
jecxz
int3
mov
loop
rcl
sti
mov
mov
hlt
add
clc
dec
call
shr
or
aad
add
sbb
adc
lcall
es
or
sub
lods
out
out
out
int
aad
mov
jmp
jmp
std
jecxz
repnz
out
std
jmp
idiv
movb
loop
in
or
adc
or
sbb
pop
push
daa
loop
adc
sub
cli
out
add
and
sub
mov
out
stos
imul
lock
cmc
aam
rcl
fcomp
shl
sar
enter
ljmp
iret
or
stc
or
repz
sbb
sbb
and
add
add
sub
lods
leave
loop
in
shr
repz
jmp
shl
fdivr
fsubrp
cmc
repnz
shl
cli
call
int
adc
rorl
add
sar
aam
bnd
rcr
add
in
sbb
adc
add
or
adc
pop
in
repz
icebp
adc
shlb
mov
cli
not
mov
mov
incl
cli
fcmovnu
loop
add
out
in
adc
or
add
sbb
in
or
loope
clc
and
fbld
cli
and
in
pop
out
sbb
repnz
or
lods
in
int3
scas
into
loope
in
mov
mov
enter
fidivrl
jmp
add
adc
out
adc
adc
push
hlt
add
negl
sbb
sbb
sub
out
and
cli
das
and
out
cvtps2pi
sbb
iret
icebp
int
hlt
not
icebp
mov
loopne
out
jecxz
les
incb
rol
fucomp
or
add
add
in
loop
call
sbb
repnz
loope
in
cli
adc
jmp
repnz
add
mov
in
enter
aad
jmp
mov
rol
shr
call
add
rolb
out
jmp
aam
pop
icebp
rcrl
adc
sbb
repnz
in
add
add
add
icebp
sub
sub
pop
loop
icebp
ret
shl
cmc
hlt
mov
out
jmp
clc
rcl
fptan
fucomip
cli
sti
add
ret
aad
loop
enter
into
or
or
out
idiv
jmp
loopne
fdivrp
add
or
in
repnz
and
adc
lods
jecxz
lock
rcr
mov
leave
xabort
cmc
mov
mov
stc
fcom
jmp
ficoml
rorb
adc
ljmp
ficoml
adc
push
add
es
push
jmp
jmp
adc
adc
sub
into
mov
jmp
enter
ret
mov
shr
test
sar
testl
cli
jecxz
loopne
push
aad
or
ficompl
call
loope
in
and
adc
add
and
push
std
adc
sub
adc
mov
loope
into
loop
in
fnstsw
fstp
aam
in
testl
add
out
lret
add
stc
adc
icebp
ljmp
adc
std
add
out
es
add
and
or
cmpsb
ret
lock
lods
loopne
stc
into
fdivl
roll
ret
ret
or
ret
lock
fiaddl
out
aad
push
movups
in
push
push
in
push
add
cld
add
pop
sub
add
jmp
in
incl
out
lods
lock
jmp
mov
stc
std
loop
call
ret
add
or
lret
int3
in
adc
lock
push
adc
out
xlat
xlat
adc
adc
add
std
out
push
cmc
fisubs
repz
sti
and
and
cld
sub
hlt
or
cs
hlt
in
rol
out
ror
mov
mov
mov
fadd
add
add
aam
jmp
dec
repz
in
shr
sbb
movntq
sbb
fucom
and
fdivrp
icebp
push
in
add
or
adc
push
xor
call
mov
lock
iret
loop
fxch
rcr
jmp
add
idivb
fincstp
or
ficoms
pop
adc
add
loop
out
stc
cli
out
pop
adc
fcoml
cli
and
out
pop
cli
call
sbb
or
cs
or
in
scas
in
in
mov
mov
ret
stc
out
mov
repz
rcl
fdiv
mov
in
adc
adc
out
jecxz
in
shr
sti
adc
and
icebp
adc
pop
sbb
std
push
in
sbb
out
or
out
aaa
ss
mov
shl
scas
aam
mov
aad
fstp
loop
idiv
call
xlat
in
out
push
enter
shr
add
in
lock
fstps
loope
sti
adc
add
and
sbb
and
and
shl
lods
lods
rcl
out
ret
lret
bnd
aam
out
aad
repz
out
add
shr
or
jmp
in
cld
sbb
out
in
and
loopne
sbb
jmp
daa
out
and
hlt
add
faddp
ret
shl
lods
scas
aad
rcl
in
aam
mov
icebp
shr
rol
ret
decl
ret
or
or
in
ljmp
push
fisttpl
xlat
sti
adc
and
out
or
adc
or
sub
int
int
iret
in
jecxz
lds
fnstcw
add
fistpll
fcmovu
or
jmp
fcmovnu
rolb
sbb
out
sbb
maskmovq
adc
loop
clc
pop
out
and
sti
sbb
push
in
push
push
or
in
out
mov
rcl
out
in
clc
enter
testb
add
repz
in
out
or
push
into
shl
out
jmp
in
sbb
push
std
loope
testb
push
sub
or
or
and
std
aaa
pop
adc
ror
fcomip
in
call
int
lock
stc
fmul
idiv
into
roll
call
int3
lret
clc
in
fimuls
fmull
add
call
clc
loope
icebp
in
sbb
in
sbb
in
or
add
cs
sub
daa
out
loop
in
lret
mov
rcl
int
clc
lret
iret
filds
call
sti
aam
cld
cli
jmp
add
in
lret
jmp
hlt
repz
adc
pop
cmc
push
sbb
in
push
and
pop
or
cli
and
push
pop
repnz
movsl
shr
iret
stos
loop
ror
int3
lret
jmp
ljmp
rol
test
in
add
enter
int
loopne
jmp
cmc
clc
icebp
add
daa
out
or
sti
add
ljmp
add
or
rcr
cmpsl
leave
shl
shrb
call
loope
shl
loop
stc
jmp
repnz
hlt
add
rorb
cli
div
sbb
loope
and
and
in
stc
loope
add
or
out
pop
and
sbb
loopne
lock
enter
stos
in
clc
fstp
loope
cmc
jmp
mov
fcomip
fiadds
in
push
stc
adc
lock
or
rcrl
or
push
in
negl
pop
hlt
cmc
hlt
and
loope
adc
sub
push
add
lods
mov
lock
mov
vpminub
leave
mov
icebp
leave
cmc
testl
add
adc
clc
lret
cli
lock
and
and
sub
and
sub
or
ffree
ror
lret
ret
icebp
mov
rol
jmp
idiv
jmp
out
aam
fneni(8087
add
mov
ffree
repz
lret
rcr
std
stc
fucomip
sbb
out
push
push
add
and
sti
adc
and
out
jmp
mov
fidivs
fcmovbe
fcomp
cld
in
repz
pop
in
or
loope
testl
repnz
aam
push
cmc
sbb
sbb
rcrl
cmc
and
adc
in
sbb
add
ljmp
shl
in
repz
ror
out
aam
fcomi
mov
fdecstp
vpminub
add
shl
hlt
out
loope
out
std
jmp
fcomps
sbb
lock
cld
or
add
clc
call
xor
icebp
and
out
loopne
loop
leave
scas
out
mov
enter
lret
dec
ror
jecxz
shl
sti
loope
int3
enter
sar
adc
int3
in
lock
sti
and
mov
pop
and
jecxz
sbb
push
sbb
out
xor
adc
sub
lods
stos
fisubrl
mov
in
leave
leave
fdivrp
std
aad
aad
loope
cmc
clc
cli
aam
lret
add
add
jecxz
in
ljmp
xlat
fisttpl
sbb
adc
cli
add
icebp
call
or
mov
mov
jmp
call
fnstenv
incb
repnz
stc
out
add
or
adc
fdivr
adc
or
sbb
and
out
push
das
sub
adc
or
repnz
iret
repnz
lods
mov
loopne
idiv
call
mov
std
pop
in
aam
push
push
hlt
pop
cli
adc
adc
add
icebp
or
pop
pop
jmp
or
adc
jmp
ljmp
in
fidivl
repnz
rorl
aad
std
ljmp
icebp
or
shl
jmp
sbb
in
push
cli
daa
fists
push
std
sti
cld
pop
pop
sti
sbb
in
sbb
cmpsb
enter
stos
int3
shr
jecxz
lods
in
mov
in
add
loope
cld
lret
in
loopne
out
adc
jmp
sbb
ljmp
lock
add
sbb
add
stc
add
push
and
ret
lret
cmc
stc
mov
out
clc
mov
stc
fdivrs
jmp
cli
fadd
lock
fcmove
loopne
iret
add
in
rcrb
in
or
repz
pop
and
sub
sub
adc
sub
or
ss
test
jmp
rol
jmp
enter
sarb
cli
add
jmp
movl
std
call
or
push
clc
adc
fstl
call
and
add
cmc
fucomip
cld
sbb
or
cmc
push
or
mov
scas
in
mov
out
out
mov
fadd
fiaddl
cmc
test
or
pop
or
ljmp
adc
negb
adc
adc
adc
jecxz
adc
sub
or
loope
sbb
xor
or
or
mov
mov
jmp
clc
out
mov
repnz
fcmovu
loop
in
jecxz
into
iret
adc
pop
iret
hlt
out
fcoms
in
into
add
adc
add
incl
repz
loop
cli
in
and
push
idivl
shl
ret
scas
int
enter
fcomp
lret
add
loopne
cld
out
or
out
out
in
rorb
jecxz
in
out
icebp
push
repnz
repnz
icebp
icebp
clc
mull
add
out
or
or
repnz
lods
lock
ret
mov
mov
mov
mov
add
cmc
loopne
aam
aad
loope
cld
or
into
icebp
call
push
adc
clc
psllw
cmc
sbb
loop
or
stc
sub
pop
sub
sub
and
or
adc
push
loopne
in
jecxz
int3
rol
shl
mov
jmp
hlt
enter
shl
fcmovb
aam
xlat
testl
lret
ror
add
sar
call
loopne
repz
in
cli
and
pop
or
sbb
add
xor
xor
movsb
ljmp
mov
jecxz
jecxz
mov
repz
add
add
ret
fcmovnbe
or
loop
repnz
out
div
out
repz
adc
lock
movups
pop
push
add
mulb
and
out
and
repz
es
xlat
lret
shl
shl
jecxz
fsubr
cmc
mov
ror
fst
leave
iret
roll
into
clc
out
fucom
ljmp
add
adc
adc
out
fbld
cli
fisttpl
and
or
sub
in
mull
out
movlps
test
scas
iret
lret
cmc
mov
repz
mov
lock
icebp
repnz
aad
fnclex
jecxz
fcmove
fcmovb
add
add
cmc
testl
adc
in
push
add
pop
testb
sub
daa
push
jmp
jecxz
xor
pop
pop
and
lret
lods
stos
mov
in
mov
cmc
cld
mov
xlat
add
aad
out
int3
push
std
out
or
leave
jmp
icebp
icebp
sbb
hlt
and
clc
lock
jmp
sub
sbb
add
repz
out
ret
mov
call
mov
in
xlat
mov
clc
add
fisttpl
jecxz
call
int3
adc
adc
cld
add
clc
or
incl
std
add
and
and
out
or
add
sub
loope
mov
iret
shl
enter
cld
les
loop
fidivrs
jmp
lret
push
lock
or
out
sbb
push
repnz
and
loope
sti
or
push
in
pop
call
adc
add
out
rcl
icebp
jmp
mov
iret
leave
lret
in
int
lock
incl
in
fsubr
cli
or
or
fdiv
ficoml
sti
add
or
cli
and
pop
and
cmc
adc
sub
add
adc
mov
in
jmp
int3
shlb
loopne
mov
fsubp
lock
or
fcmovb
clc
fimull
adc
jmp
loopne
clc
unpcklps
sbb
or
push
push
loope
cmc
sti
in
hlt
fists
testb
std
in
or
ljmp
add
ret
lods
shlb
out
fxch
not
lret
fptan
out
aam
loop
ljmp
jmp
psrlw
repz
in
adc
cld
add
push
push
and
adc
and
sub
std
and
or
adc
in
das
call
out
ljmp
rol
fyl2xp1
rcl
clc
loopne
fadd
in
int
in
stc
mov
into
fucomi
out
add
jmp
out
or
loope
sti
fmull
add
adc
add
sbb
adc
xor
adc
push
fisubrs
sarb
out
ror
in
xlat
fcmovbe
iret
aam
sarl
xlat
or
call
or
pop
sbb
in
fdivr
adc
adc
adc
push
repz
sub
add
sub
xor
lret
repnz
lret
mov
iret
mov
icebp
cli
mov
rol
cli
neg
ljmp
pop
loop
ljmp
fildl
clc
sbb
icebp
sbb
pop
repnz
and
pop
sbb
adc
or
ljmp
mov
in
into
in
ljmp
cmc
add
hlt
add
cli
shl
add
or
adc
push
in
adc
jmp
test
lock
in
adc
sbb
cmc
out
clc
push
out
out
das
xor
repz
xor
stos
scas
shrb
mov
call
icebp
in
fmul
out
add
cli
notb
int
adc
adc
in
sbb
int3
push
hlt
or
push
cld
neg
and
adc
fcompl
cli
sbb
or
add
or
ret
jmp
int3
ljmp
repz
aam
lock
out
cmc
fcmovnb
cli
repnz
aad
cld
sti
sti
add
or
into
jmp
or
stc
ficoms
repnz
and
and
in
sbb
out
and
test
ror
jecxz
rcl
repnz
mov
fcmovnbe
iret
xlat
into
add
fildl
jecxz
repnz
xlat
leave
in
jecxz
loop
into
hlt
in
into
sbb
adc
or
push
fdivrp
sti
pop
adc
add
jecxz
call
add
or
std
or
out
in
in
mov
mov
fcmovbe
sarb
cli
add
hlt
ljmp
add
loop
clc
push
jecxz
call
sbb
adc
cli
and
and
sub
or
add
out
mov
mov
shr
out
clc
sti
mov
clc
in
or
lret
call
or
add
out
shl
fcoms
aam
out
fsubp
aam
loope
pop
loope
in
pop
and
cli
push
and
or
sub
add
movntq
repnz
rcl
loope
enter
fdivr
cld
mov
aam
clc
rolb
in
int
adc
into
leave
rolb
add
or
jecxz
adc
and
jmp
adc
loop
sbb
das
or
es
test
into
aam
int3
rcl
fcmovbe
cli
shr
aam
mov
lret
cmc
loop
fldl
or
add
enter
add
fiadds
leave
pop
adc
adc
push
fcompl
sbb
icebp
add
sbb
add
or
out
cli
and
xor
push
add
scas
ljmp
fsubrs
mov
mov
fmull
fucomip
out
int3
adc
add
call
jmp
jmp
stc
or
cmc
out
sbb
std
and
and
or
and
and
xor
adc
mov
les
in
icebp
jmp
mov
mov
or
rcl
in
or
adc
negl
or
push
push
stc
lock
adc
stc
sbb
add
daa
sti
and
das
sub
pop
cmpsb
jmp
mov
mov
ror
sarb
fcmovnb
add
add
ret
incl
loopne
add
testl
rclb
sbb
or
hlt
in
sbb
and
and
mov
lods
enter
shl
sti
lret
leave
fstp
out
int3
sarl
cld
cli
jecxz
lret
call
out
or
aad
push
sbb
jmp
out
loop
cli
repz
and
adc
in
icebp
or
repz
adc
out
in
mov
repz
xlat
aam
ret
mov
aam
mov
out
neg
out
add
int3
call
adc
cmc
in
sbb
call
adc
sbb
sub
add
sysret
and
in
cmpsb
mov
sti
out
call
loope
mov
loopne
fisttps
loopne
in
into
loope
leave
add
out
cmc
icebp
or
xlat
paddsb
cld
sbb
and
out
adc
and
add
in
std
repz
out
mov
lods
shll
sti
repz
leave
stc
lret
fsubr
mov
mov
leave
rorl
rorl
repnz
fimull
cli
lock
adc
adc
pop
or
sub
adc
sub
scas
test
out
mov
scas
mov
out
lret
aad
repnz
mov
in
in
mov
add
cld
add
out
push
cli
fistl
or
adc
or
in
cld
push
add
sbb
pop
add
and
icebp
add
call
and
daa
rdpmc
add
adc
stos
mov
out
clc
mov
jmp
shl
out
pop
fxch
out
loopne
add
or
aad
or
or
jmp
or
sbb
fcomp
push
pop
add
loop
jmp
push
sbb
adc
xor
push
and
or
iret
ror
out
xlat
clc
cld
fcmovnbe
int3
fmul
iret
shl
std
sti
ret
add
out
lock
fdivp
loopne
jecxz
push
or
adc
jmp
sbb
adc
repnz
add
add
and
and
repnz
fdivrl
test
out
cmc
out
mov
into
stc
into
hlt
loopne
pop
clc
jmp
rolb
or
or
loope
adc
or
pop
fstpl
or
fbld
clc
frstor
clc
adc
loope
and
xor
repnz
lret
leave
rol
ret
clc
mov
mov
int
mov
movb
int
or
in
repz
add
repz
out
loopne
push
fistl
loop
or
push
sbb
jmp
lock
ffree
lods
stos
in
mov
mov
fcomi
out
mov
repz
lret
lret
sti
std
adc
int3
out
pop
add
loop
add
negb
sbb
and
cli
add
push
pop
sbb
decb
sbb
jmp
shl
aad
mov
sarb
fdivrp
repnz
flds
lock
fndisi(8087
push
add
hlt
sti
sar
icebp
in
iret
add
ljmp
or
adc
testl
push
add
and
adc
xor
scas
iret
shr
call
fdiv
out
scas
cli
iret
ffreep
loope
shl
mov
cld
faddl
sti
fcmove
pop
add
loope
xlat
loopne
sti
repz
or
cld
not
aad
and
or
adc
and
lock
adc
adc
mov
xlat
cmc
mov
sti
leave
add
cmc
aam
icebp
out
loope
or
or
or
int3
lret
push
in
out
filds
jmp
testl
jmp
std
add
pop
in
out
es
stc
xor
jmp
lock
add
mov
mov
clc
into
lock
in
fcmovnbe
leave
loopne
rol
in
faddl
imul
cld
testl
adc
or
push
in
out
cmc
stc
pop
stc
repz
and
and
and
adc
cli
cli
or
xor
sbb
and
enter
fcmovu
fisubrs
call
fdivrl
mov
in
add
in
jecxz
fimuls
aam
cmc
clc
adc
stc
or
aam
cld
adc
sti
and
or
pop
in
add
add
cmc
stos
jecxz
sarl
xlat
mov
mov
sar
fistpll
add
or
call
bswap
add
jecxz
adc
cmc
negb
std
loope
in
adc
hlt
cld
clc
adc
es
or
out
and
das
mov
repz
out
test
sar
add
lret
fisttpll
add
adc
lret
add
out
xlat
cld
call
and
and
sbb
and
ljmp
xor
or
divb
fstp
les
aam
mov
in
lret
ror
lret
rcl
std
mov
add
pop
int
into
or
fldz
rcl
cmc
xlat
cmc
adc
repz
adc
out
in
out
std
add
sub
adc
jmp
lret
out
lock
in
mov
hlt
sarl
add
add
in
xlat
out
or
or
out
int3
sbb
pop
out
decb
out
cld
div
in
pop
std
and
add
and
testb
loope
out
in
mov
jmp
rol
shr
in
aam
int
rol
shl
hlt
jmp
out
cli
call
hlt
hlt
jecxz
pop
push
add
fcom
or
sbb
loop
es
add
add
sub
sub
or
into
in
jmp
repnz
lock
mov
imul
std
repz
repnz
jmp
add
std
icebp
call
push
call
icebp
fimull
fcmovnu
sbb
loopne
out
adc
and
sbb
xor
adc
mov
stos
loop
ffreep
into
repz
stc
add
add
jmp
add
jmp
push
pop
imul
cld
repz
pop
bndldx
fistl
push
clc
lock
and
sbb
and
push
adc
lods
mov
call
cmc
mov
cmc
int3
clc
lock
add
div
in
enter
fucomp
repz
shr
testb
push
push
or
out
sbb
loope
stc
pop
sbb
in
stc
push
sbb
cld
std
add
add
cmc
mov
stos
fldt
in
lock
int
neg
mov
fucom
hlt
fucomip
xlat
loop
ret
cld
adc
cmc
in
or
sbb
aam
adc
xlat
fcompl
idiv
in
and
daa
and
decl
adc
push
xor
sub
and
int
ret
into
mov
jmp
add
lock
out
sar
stc
add
iret
adc
ljmp
out
ficoml
adc
sbb
idiv
sti
sti
push
and
in
sub
push
jmp
and
lds
out
lret
icebp
shll
lret
loopne
fst
repnz
sar
add
ret
or
lret
add
lret
jecxz
jecxz
out
aad
adc
repnz
lgdtl
adc
sbb
or
cli
incb
or
xor
stos
fsub
repz
jecxz
mov
int3
in
cmc
sar
clc
iret
repz
add
pop
leave
fimuls
leave
out
repz
out
adc
out
call
or
adc
div
sbb
cli
sbb
push
ljmp
or
adc
call
out
in
xlat
in
in
lods
clc
fsubr
rcl
repz
sti
idivb
or
pop
loope
invd
or
loopne
push
or
pop
repz
add
in
push
sbb
sbb
and
push
sbb
or
ss
cmpsb
fcmovnb
mov
jmp
stc
int
fdivrl
ret
lock
std
out
push
iret
adc
add
bnd
sbb
add
fstl
clc
push
sbb
push
push
loope
or
add
xor
sub
fcmovnb
out
jmp
aam
out
cld
mov
enter
add
fucomp
vpmullw
or
call
stc
repnz
add
add
clc
in
fsts
ficomps
xlat
or
add
in
lcall
and
and
cs
ljmp
fdiv
out
lds
sar
cld
loop
cmc
aam
lret
or
in
hlt
add
or
in
clc
icebp
hlt
fcomi
pand
or
hlt
push
fisubl
out
add
and
jmp
ss
out
sarb
lods
loop
ret
rcl
mov
cli
idivb
add
out
mul
loope
or
adc
or
int
icebp
jmp
push
ljmp
or
testl
jecxz
loop
sub
jmp
push
and
mov
mov
xor
xor
popa
jae
cmp
xor
aaa
cmp
je
xor
inc
aaa
and
sahf
lea
sub
andl
dec
jns
add
call
repz
mov
in
fdiv
shr
shr
pop
add
repnz
add
cli
pop
or
add
xlat
out
jmp
or
repnz
fucomi
notl
pop
and
adc
or
sbb
adc
adc
xor
add
mov
icebp
int3
rcr
in
mov
std
iret
aam
ffree
add
pop
jmp
fmulp
adc
or
not
ljmp
and
neg
daa
hlt
adc
sbb
out
add
adc
daa
psllq
and
shrb
mov
lods
call
repz
std
repnz
loope
repz
jmp
ud0
or
add
loopne
or
sbb
incl
div
repnz
add
testl
and
adc
test
stos
iret
loop
repnz
mov
into
out
fnstcw
fdivr
lret
iret
hlt
in
loopne
int3
add
jmp
add
rcll
adc
jmp
stc
stc
sbb
std
add
out
add
add
and
push
sub
out
pop
or
scas
stos
in
in
in
sarl
jmp
icebp
out
add
lock
testb
add
jmp
loop
into
loopne
push
or
adc
in
adc
clc
sbb
sbb
fistpl
std
cli
push
or
or
jmp
sbb
push
pop
adc
lods
ror
lock
icebp
lret
call
shll
repz
repnz
fcomip
repnz
sti
add
fmulp
iret
lret
adc
add
repnz
jecxz
lock
jmp
div
sbb
and
clc
notb
jecxz
push
xor
and
adc
pop
add
in
fnsave
out
ret
mov
ror
jmp
fnstsw
fldl
ljmp
call
lret
jecxz
into
cmc
ljmp
repz
add
loopne
sub
or
adc
xor
adc
loope
lret
fucomi
les
out
in
shl
jmp
out
cmc
fldl
aad
add
add
fdivr
xlat
lret
repnz
loopne
adc
out
repz
in
out
cld
pop
div
and
sub
sbb
out
sub
mov
scas
shl
rcl
mov
aad
cld
cli
add
idivl
fst
sar
ljmp
call
add
sbb
psubsw
loope
sbb
sbb
jecxz
es
push
stc
and
add
jmp
into
ljmp
mov
aam
repz
repz
mul
into
std
rcl
aam
or
ljmp
push
clc
loopne
fucomip
adc
adc
sub
cmc
cld
sub
xor
out
sub
in
call
ret
out
sar
fst
repz
iret
ret
aad
mov
fcmovnu
in
jmp
lock
add
rcl
repnz
hlt
and
fcomip
loopne
testl
ljmp
es
pop
jmp
iret
loope
scas
loop
into
int
clc
iret
fucomip
out
add
lock
add
or
enter
out
or
cmc
icebp
loop
sbb
fadds
notl
out
sbb
in
sbb
add
and
push
in
es
mov
jmp
call
cmc
repnz
int
in
mov
neg
or
loop
stc
out
shl
aam
hlt
or
loope
adc
cli
adc
cld
sti
ljmp
and
xor
sub
adc
mov
scas
out
in
in
sarb
loop
rcl
out
icebp
pop
cli
cmc
stc
neg
adc
cld
sar
adc
leave
pop
push
loop
cli
sbb
idiv
or
repz
sti
and
sti
sbb
out
es
maskmovq
divl
scas
stos
leave
fxch
in
into
lock
mov
jmp
loopne
aam
shll
stc
xlat
ljmp
add
or
adc
adc
incb
cld
sbb
add
and
cli
sub
add
and
ljmp
lret
into
mov
leave
lret
in
icebp
cli
jmp
ret
ret
add
push
incb
fisttpl
into
enter
hlt
in
hlt
adc
sbb
cld
pop
clc
stc
adc
stc
adc
pop
in
sbb
push
pop
add
xor
adc
movsl
mov
jecxz
loopne
lock
repnz
mov
add
rcl
fldl
in
out
lock
lock
icebp
out
push
pop
fsts
pop
loopne
adc
add
add
call
sub
add
enter
enter
imulb
in
fdivp
mov
in
in
aad
fcmovnu
fdiv
imul
push
sti
icebp
or
aam
aad
paddsb
repz
or
testb
repz
incl
sub
and
xor
pop
repz
mov
jmp
fdiv
int3
hlt
int
ret
xlat
cmc
std
jmp
fsubp
or
or
cmc
out
add
sbb
ljmp
hlt
cld
loop
and
and
and
or
or
and
scas
ret
jmp
aam
xlat
mov
iret
fucomip
xlat
aam
aam
roll
les
in
fcmove
or
ljmp
fists
iret
add
or
or
sbb
sbb
repz
jmp
sub
sub
fcomip
stos
shll
aam
mov
repz
iret
lret
in
roll
pop
or
push
xlat
ror
or
loopne
add
add
loopne
push
add
push
and
sbb
sbb
xor
sub
iret
loope
leave
leave
scas
repz
aam
std
in
aad
loopne
lock
out
sti
add
fildl
sti
std
or
jecxz
call
clc
shr
fcomi
out
or
or
fstpl
repnz
add
sti
sub
out
sbb
push
out
out
mul
lds
into
call
sti
mov
mov
mov
mov
xlat
clc
add
cmc
or
loope
int
add
add
in
out
or
sbb
repz
decl
cmc
in
and
add
sub
hlt
pop
daa
pavgb
sarl
repnz
shl
out
int3
call
lret
sti
aam
jecxz
cld
loop
out
in
add
or
out
pop
out
in
xlat
add
lock
psraw
call
jmp
add
xor
cld
sub
jmp
repz
leave
repnz
lods
into
mov
jecxz
repz
leave
in
int
std
or
icebp
cld
loope
repnz
in
rcr
std
jmp
repnz
or
push
sub
notl
and
or
call
ffree
shl
lret
int
repnz
iret
shl
mov
mov
sti
enter
aad
enter
loope
in
lock
or
div
pop
clc
adc
fcomp
adc
push
sbb
add
or
sbb
add
es
repnz
mov
icebp
ror
aam
sar
fcmovnu
stc
rcl
lret
out
in
jecxz
call
cmc
into
add
out
in
int
aad
xlat
stc
loop
shr
clc
hlt
std
fdivr
fldl
sbb
and
sub
sbb
or
and
xor
add
cmc
mov
mov
cmc
int3
mov
divb
into
imul
filds
cmc
loop
jecxz
add
stc
push
idiv
into
or
adc
testl
fucomi
and
and
pop
cli
add
or
and
cmc
daa
shl
mov
lods
hlt
ljmp
imul
iret
cmc
out
loop
mov
fsubr
or
div
lret
fucom
rorl
clc
loope
sbb
pxor
std
push
hlt
fistpl
adc
add
add
add
lock
repnz
adc
jmp
in
mov
iret
enter
rcr
out
icebp
ror
add
ret
cmc
jmp
fimull
or
or
testl
std
out
push
adc
sbb
sbb
negl
sub
adc
adc
lret
mov
mov
icebp
not
call
std
fdivp
ret
xlat
enter
call
repz
fsts
or
push
in
sbb
repnz
psraw
adc
push
and
out
add
and
cs
fsubr
out
jmp
loop
stc
fnop
fidivrl
int
add
enter
fxch
into
ljmp
add
pop
stc
stc
cmc
pop
in
or
add
and
imul
push
ficompl
daa
sbb
and
and
and
sub
test
mov
in
shr
out
jecxz
jmp
mov
stc
into
clc
fistpll
inc
lret
decb
or
icebp
or
fisttps
sbb
pop
out
fucomp
add
lock
in
stc
push
clc
sbb
loopne
in
in
and
add
repnz
fmul
enter
icebp
in
iret
aam
enter
int
jecxz
clc
clc
cld
shr
sti
add
int3
jecxz
jmp
out
add
out
in
stc
cld
jmp
icebp
adc
adc
and
fstl
sbb
icebp
xor
add
imul
mov
ret
leave
faddp
ret
iret
mov
sarb
repnz
add
call
jmp
stc
fisttpll
add
jecxz
adc
add
sbb
adc
sbb
out
loopne
and
and
cld
and
or
in
lock
push
sub
test
mov
jmp
loop
lret
jmp
mov
cmc
test
out
add
add
out
int3
into
fiadds
adc
repnz
jmp
or
clc
std
sub
sbb
sub
xor
or
vaddsubpd
scas
hlt
enter
into
mov
in
lret
fxch
fcompp
div
loopne
loope
sar
or
adc
loope
lock
out
hlt
or
rcll
sbb
stc
cli
mul
incl
add
fdiv
notb
sub
das
ljmp
and
mov
shl
stc
cmc
stc
cli
out
in
int
add
test
add
or
out
decl
out
push
sbb
adc
pmuludq
in
add
repz
add
add
das
repz
add
stos
fadd
iret
ret
rol
in
out
out
shll
aam
les
add
lock
fdivr
add
push
xlat
rcrl
or
push
std
icebp
or
pop
std
fcomi
push
adc
in
in
and
out
pop
sbb
pop
add
fisubrl
into
leave
int
out
mov
mov
mov
mov
fsubp
add
repz
clc
rorl
aad
out
in
in
cmc
fstp
sbb
sbb
sbb
sbb
adc
ljmp
and
es
mov
lock
mov
lds
lret
cld
mov
out
enter
clc
leave
fucom
jmp
or
loope
in
lock
in
adc
push
clc
sbb
and
add
pop
jmp
cs
xor
mov
xlat
sarb
lret
call
into
sti
out
lret
mov
aam
call
or
pminub
or
or
adc
or
sbb
sbb
testb
sbb
das
sub
or
cmp
mov
loopne
in
repnz
leave
icebp
mov
into
mov
iret
mov
rorl
fldln2
loopne
std
in
hlt
iret
prefetcht1
in
or
sbb
or
cli
in
sbb
es
sub
and
out
sub
loop
ret
loope
ror
xlat
iret
lret
in
in
scas
push
repnz
idivl
add
std
fndisi(8087
jmp
jmp
pop
push
fcoms
add
sbb
sbb
pop
or
add
xor
or
sub
loop
loop
lret
mov
mov
clc
repz
out
fnstcw
ret
in
sar
loopne
out
add
adc
out
int
repnz
aad
adc
out
jmp
sbb
pop
sub
and
jmp
sub
add
pop
pop
sbb
out
mov
mov
ror
into
imull
aad
stc
add
aam
fadd
stc
loop
or
adc
out
adc
push
decl
iret
rcll
sti
adc
or
stc
out
es
sub
loopne
sub
daa
aaa
xor
in
loopne
leave
mov
in
stc
in
rcr
mov
sarb
repnz
add
in
add
jmp
fdiv
hlt
testb
adc
adc
in
sbb
cli
sbb
jmp
and
sub
ljmp
out
mov
ror
clc
repnz
sti
iret
fcmovnu
mov
mov
inc
sar
in
out
add
decl
add
push
aam
sbb
std
sbb
fbld
and
mull
repnz
and
xor
hlt
adc
sub
mov
rcl
out
rcl
mov
call
fsqrt
hlt
stc
fdivr
shl
fmuls
in
fcomip
adc
pminsw
roll
lock
push
out
call
hlt
notb
sbb
incb
loop
sub
push
sbb
lock
icebp
adc
cs
int
shll
cmc
mov
enter
mov
shl
cli
leave
fcom
stc
or
loope
fstp
fst
leave
jecxz
jmp
notl
hlt
jmp
fiadds
pop
and
sbb
loop
sub
and
sub
in
lods
in
ret
lock
stos
int
rol
scas
aam
fistpll
std
stc
add
lret
loope
push
int
leave
iret
icebp
pop
ljmp
ljmp
or
jmp
call
ljmp
mov
lods
repnz
shl
into
cli
lret
fcomp
leave
fstp
fcom
loop
loop
cli
ret
jmp
jmp
fsub
push
push
dec
int
adc
sti
icebp
clc
clc
std
icebp
push
out
add
pop
out
loop
sbb
nopl
icebp
xor
mov
fsub
mov
mov
in
int
xlat
out
add
ret
sar
shl
out
cmc
ljmp
in
add
in
sbb
push
sbb
loope
add
idiv
add
out
es
cs
clts
or
test
mov
loope
mov
out
hlt
in
cld
loopne
fcomi
mov
add
or
lock
pop
loop
sbb
testb
adc
repnz
in
sub
jmp
or
shl
fcmove
icebp
in
in
into
stc
hlt
jmp
fdiv
repnz
fdivp
inc
aam
std
out
icebp
adc
int
jmp
adc
adc
out
or
and
icebp
out
sbb
adc
call
call
and
and
adc
lock
out
mov
lock
call
std
out
out
std
aad
add
lock
sti
faddl
fcmovnu
icebp
out
lock
enter
adc
icebp
not
std
testb
out
call
in
or
call
mulb
fbstp
icebp
aam
sti
ror
int3
out
rolb
in
aam
add
mul
ret
ljmp
lret
rcl
xlat
sbb
fimull
push
fdiv
in
adc
ljmp
std
add
and
cs
mov
out
aam
ret
call
mov
add
jecxz
iret
mov
or
enter
inc
out
iret
lock
rclb
in
aad
or
sbb
loop
repnz
es
and
pop
xor
sub
adc
mov
lret
leave
loop
shr
int
testl
iret
shl
fcmovne
jmp
push
fcos
enter
repz
adc
adc
shl
sbb
fdecstp
cmc
loopne
adc
pavgb
or
sbb
sub
pop
add
sub
xor
mov
call
scas
fsubr
cli
mov
icebp
ror
cld
bnd
jecxz
lret
in
jmp
adc
clc
add
cli
in
repnz
out
or
push
in
sti
and
pop
sub
jmp
ss
out
enter
lods
mov
in
cmc
stc
icebp
icebp
iret
stc
repz
cld
add
roll
add
std
push
in
adc
or
out
or
push
or
loop
adc
hlt
add
decl
add
pop
sub
leave
fidivrs
test
cmc
stc
jmp
in
jecxz
cmc
cld
rcr
jecxz
lret
sti
lret
jecxz
in
fists
push
hlt
fcom
in
sbb
push
hlt
adc
out
icebp
adc
sti
loop
pop
sub
push
jmp
pop
in
xor
in
mov
cmpsl
int
call
mov
shl
mov
fldl
cmc
in
movb
or
out
or
or
in
add
out
maskmovq
fcoms
hlt
pop
in
jecxz
and
daa
and
sti
daa
cli
or
sub
or
ror
mov
lock
in
lock
cli
lock
out
out
push
loop
fcmovne
ror
int
in
loop
or
pop
idiv
loopne
loope
and
push
sbb
loop
sub
loopne
add
xor
sbb
fsubp
fcmovb
shl
out
enter
sti
mov
rcr
std
mov
mov
jecxz
sti
int3
unpckhps
shl
pmuludq
out
std
cld
adc
fsubrp
and
push
sub
add
sti
push
add
xor
out
xor
sub
out
loopne
loopne
shll
cli
mov
loop
out
loope
cli
int
cld
sti
int
icebp
or
not
adc
aam
out
lock
sbb
in
clc
call
es
and
sub
lock
cmpsl
mov
fucomp
shl
mov
leave
out
mov
loop
cmc
add
fnclex
ljmp
adc
fmul
in
sbb
clc
sti
push
sbb
sar
negl
loope
in
in
or
in
cs
pop
in
xor
and
test
out
lret
call
clc
into
out
into
fcmovne
fcomip
xlat
f2xm1
out
sti
sar
ror
or
iret
or
add
ror
adc
in
push
fistl
stc
cld
repz
adc
neg
add
jmp
cld
add
icebp
adc
or
add
daa
mov
ffreep
scas
in
fldcw
aad
fxch
repz
add
cli
stc
jmp
fimuls
iret
rcr
lock
roll
cli
int3
adc
push
adc
and
std
and
and
adc
sub
out
sbb
or
pmulhuw
test
repnz
lret
mov
cmc
fnstsw
mov
add
into
jecxz
add
enter
add
or
shr
pop
add
sbb
repnz
adc
or
or
cli
pop
sub
add
lock
adc
out
out
add
out
int3
jmp
hlt
scas
rcl
out
rcl
sarl
shr
sar
add
or
or
aam
iret
add
bnd
repz
push
adc
fdivp
in
sbb
out
std
daa
sub
add
ss
das
mov
shrl
fidivrs
fcmove
call
ret
in
repnz
enter
loope
jmp
adc
shl
rolb
adc
adc
adc
sbb
sbb
fbld
incb
add
sub
add
std
xor
cmpsl
enter
stc
aad
xlat
std
rcr
repnz
jecxz
in
idiv
or
or
pop
or
std
rcl
or
repnz
decl
add
add
sub
sti
in
in
pop
and
xor
add
add
adc
in
out
lods
shlb
mov
out
stc
enter
in
sar
jecxz
add
out
add
into
clc
int3
or
pop
bswap
repnz
or
fildl
std
in
jecxz
or
ljmp
and
cs
loopne
fcmovnu
lock
ret
hlt
shll
lret
add
ret
ret
rol
aam
mul
in
add
jmp
loop
out
repz
push
pop
adc
push
pop
loop
fcmovnu
out
daa
lcall
sbb
sub
xor
in
out
fisubrl
jmp
jecxz
mov
fdivrs
sarl
jecxz
lock
int
adc
add
fstl
cmc
stc
adc
add
pop
sbb
out
or
sbb
add
jmp
loope
in
lret
aad
loop
ljmp
lret
icebp
mov
loop
ljmp
adc
movhps
add
out
or
icebp
push
out
adc
push
adc
add
notl
adc
cs
in
or
xor
stos
mov
mov
in
enter
hlt
ljmp
in
mov
cld
out
or
in
leave
sbb
icebp
call
push
jmp
cmc
adc
adc
pop
cld
es
sbb
push
xor
fldenv
int
test
out
fld
fistpll
mov
or
testl
jmp
adc
adc
fcoms
out
sbb
loop
hlt
and
pop
sub
and
sub
xor
fucomp
fucomp
aad
fcomip
fprem
sarl
loope
in
filds
jmp
add
jmp
loop
into
call
repnz
sbb
fcmovu
adc
ljmp
push
imull
loop
sub
push
adc
cmpsb
leave
out
jmp
shl
in
jmp
cli
mov
hlt
incl
roll
shl
rolb
or
sti
adc
add
add
sbb
pop
sti
cli
sbb
fyl2x
and
cmc
push
sbb
cld
pop
and
out
push
and
lock
sbb
call
out
movsb
mov
mov
out
sar
mov
in
mov
out
incl
lret
push
lret
call
out
aad
adc
in
pop
or
adc
push
hlt
push
add
pop
and
jecxz
daa
sbb
sub
or
xor
fadd
int
lret
repz
hlt
enter
int3
out
shl
inc
loopne
hlt
hlt
stc
or
leave
enter
pop
or
lock
sbb
out
fsts
lock
sbb
pop
or
sbb
xor
es
in
sub
cmpsl
shlb
test
ror
loop
xlat
out
mov
fidivrl
jmp
out
std
loopne
fiaddl
loope
jecxz
sbb
std
and
icebp
xlat
and
or
push
or
in
fucomp
mov
test
mov
ljmp
shl
out
hlt
in
mov
out
clc
jecxz
loopne
add
div
iret
or
in
repnz
and
or
mull
sbb
hlt
and
out
push
and
add
push
cs
call
lret
fsubrp
test
fdivrs
mov
iret
repz
xlat
xlat
vpaddw
iret
add
add
sbb
push
adc
lock
sbb
add
repz
mul
add
cli
repnz
sub
and
stos
jecxz
int
enter
mov
mov
in
test
cli
sarb
fstp
jmp
lret
leave
jmp
add
pavgb
add
repnz
sub
cli
adc
sub
sub
repnz
les
divb
lret
out
shr
idivb
mov
in
or
lock
paddsw
shl
pop
aad
fdiv
add
mul
sbb
add
imulb
add
jmp
push
pop
in
and
shl
lods
rol
aam
in
repz
test
in
fucomi
leave
cmc
sar
shl
fucom
clc
loopne
neg
std
fstp
push
add
in
in
lock
add
shl
fsub
push
out
fldl
sbb
out
add
cmc
fisubl
or
or
jmp
add
into
stos
mov
shr
in
mov
add
in
mov
ret
cld
repz
out
sti
roll
ror
add
cmc
fcmovnu
stc
push
lock
sbb
stc
es
repz
fisubrs
out
xor
cs
adc
mov
enter
loopne
into
cli
idiv
shl
fbstp
fiaddl
clc
sti
fstp
add
cmc
in
or
lock
in
shr
in
ljmp
sbb
sub
sub
ljmp
test
shl
imul
cli
ret
out
fucomp
clc
aad
int3
ret
aad
fucomip
push
fucomi
call
loopne
in
loop
adc
push
fstps
repz
jmp
lock
decb
std
add
sti
es
or
push
repnz
mov
cmpsl
mov
mov
cmc
aad
add
xlat
ret
jmp
call
lret
adc
or
or
cmc
in
div
adc
cli
sbb
idiv
and
jmp
and
lock
xor
sub
repnz
loop
mov
icebp
mov
out
sti
mov
add
idiv
mov
fmulp
ror
add
cld
shl
add
push
fsub
lock
adc
sbb
adc
in
push
and
jmp
std
push
in
daa
sub
lock
into
scas
xlat
scas
repnz
mov
mov
ljmp
fsubr
fprem
lret
or
loope
pop
paddusw
fimuls
or
out
or
imul
loopne
push
sbb
std
jecxz
add
add
sbb
xor
loopne
out
out
into
out
into
lret
jecxz
into
out
out
lret
clc
sar
fsub
lds
in
int3
int3
or
add
in
adc
push
xlat
and
fiadds
adc
std
sbb
sub
pop
out
add
in
icebp
mov
rcr
in
jmp
div
fdiv
in
loopne
mov
fiaddl
add
in
jmp
ljmp
rclb
lock
fdiv
pop
or
sbb
sub
pop
cli
out
sbb
and
add
sub
neg
out
fucomp
scas
lret
ffreep
loope
int3
jmp
mov
jecxz
shr
repz
fisttpll
or
out
jmp
pop
clc
adc
or
sbb
std
push
and
sub
stc
pop
sub
push
sbb
add
or
hlt
repz
int3
out
ret
lods
shll
mov
fxch
fdivr
mov
les
stc
rol
fimuls
sti
decl
adc
loopne
test
push
adc
and
adc
push
wbinvd
and
or
xor
and
std
repz
in
cmpsl
mov
call
fcmovbe
sti
les
hlt
in
lock
jmp
jecxz
stc
in
push
cld
adc
out
add
cmc
sbb
cld
add
cmc
stc
icebp
or
sbb
daa
or
add
push
hlt
movsl
in
fbstp
mov
shr
sti
leave
lret
out
jmp
into
sti
ret
cld
cli
or
add
add
adc
add
add
push
testb
out
shl
in
jmp
push
and
daa
out
or
loop
add
cld
adc
add
add
sub
into
in
jmp
jecxz
int3
in
aam
lret
repz
shr
lret
call
mov
enter
fcmovb
fimuls
out
ljmp
out
stc
push
adc
add
adc
sbb
push
adc
out
and
adc
lock
push
and
jecxz
ljmp
loop
xlat
int3
xlat
xlat
mov
mov
jmp
lret
fabs
out
jecxz
sti
out
or
clc
cli
out
adc
psllw
fcompl
psadbw
add
pop
clc
neg
ljmp
adc
sub
hlt
xor
fsubrp
ror
div
aad
fsub
repnz
mov
inc
clc
lds
lret
int
enter
add
imul
sbb
hlt
fcmovnbe
std
aad
add
fldl
sbb
add
add
add
out
shrb
repz
jecxz
std
int
repz
fst
ret
fadds
add
cmc
push
movb
lcall
out
ljmp
fcoml
push
and
sbb
in
sub
pop
and
add
add
cmc
mov
int3
in
int
jmp
in
leave
in
mov
rolb
int3
repz
call
in
leave
in
repz
enter
or
cmc
adc
push
adc
sbb
in
and
and
sub
pop
and
ret
jmp
shl
rol
fsubr
leave
mov
mov
mov
stc
jecxz
jmp
add
aam
sti
sar
xlat
pop
fcomp
or
adc
add
hlt
push
and
add
ljmp
or
adc
loopne
rol
leave
out
ret
mov
mov
fadds
hlt
enter
cli
loopne
rcll
rcl
jmp
sbb
or
sbb
sbb
and
and
pop
pop
sbb
push
and
sub
and
fbstp
stos
repz
jmp
mov
div
mov
repz
or
jmp
shl
fstl
add
call
sti
sti
add
pop
sti
ljmp
icebp
xor
sub
push
xor
mov
mov
cmc
lret
iret
int
jmp
in
loop
pop
jecxz
rol
cld
clc
ret
push
repnz
leave
or
unpckhps
or
jmp
pop
faddl
clc
out
adc
sub
or
add
es
out
repnz
hlt
into
movsl
cmpsl
shr
jecxz
loopne
in
fcmovnu
icebp
clc
shl
ret
cli
rcr
xlat
jecxz
ret
add
lock
cld
add
adc
sbb
loope
repz
pop
call
in
pop
sbb
es
incl
cmc
or
and
mov
ret
icebp
lret
into
int3
mov
imul
rcr
in
shr
stc
repnz
jmp
int3
fstp
out
out
icebp
shl
loop
pop
or
out
adc
cmc
fcomi
hlt
stc
sbb
stc
loope
out
or
xor
adc
ljmp
in
mov
into
mov
clc
mov
mov
add
add
out
jmp
or
in
leave
in
pop
or
push
adc
add
pop
or
and
cli
or
push
sub
or
call
into
in
loope
in
mov
fnclex
aad
lock
incb
call
faddl
ror
cmc
add
in
jmp
jmp
fsub
incl
std
add
or
std
out
out
add
icebp
add
add
mov
fcmove
fdivl
repz
int3
sti
out
jmp
mov
fsubr
jmp
out
jmp
lock
or
add
cli
in
cld
push
sbb
adc
repz
lock
and
pop
pop
push
push
pop
and
cs
adc
adc
cmpsl
mov
scas
rol
int
jecxz
aad
mov
les
div
jmp
testb
adc
jmp
out
sti
add
add
fcomip
fcomip
or
es
add
std
sub
push
pop
cs
stos
out
jmp
jmp
aam
repnz
shlb
ret
lret
in
flds
enter
in
add
or
or
icebp
push
cld
lock
and
icebp
adc
cld
cli
or
sub
out
xor
fsubp
lods
enter
into
out
mov
mov
icebp
hlt
or
in
xlat
std
xlat
fld
out
adc
fst
cmc
mul
pop
stc
icebp
lock
adc
adc
paddsw
sbb
adc
and
pop
jmp
sbb
std
in
xor
cmc
sub
fmul
mov
hlt
leave
in
int
hlt
stc
mov
sti
ret
aam
loope
leave
adc
in
leave
jmp
or
out
lock
or
filds
fucomip
sbb
repnz
adc
sbb
sub
or
test
lret
shl
loop
lret
in
in
mov
out
shll
into
sar
cmc
add
cld
jmp
add
hlt
adc
ljmp
adc
fstl
adc
hlt
cld
push
out
cld
or
add
add
in
cld
jmp
pop
lock
mov
mov
out
mov
stc
mov
jmp
jecxz
aad
call
or
in
call
pop
aad
in
sbb
out
fstp
paddd
out
in
testl
pushl
add
leave
test
fmul
out
leave
mov
lock
sti
fcomip
fdivr
or
loopne
cmc
or
ffreep
lret
add
loope
or
add
or
fsubp
loopne
sbb
std
adc
sbb
push
pop
sbb
and
add
sub
out
out
daa
in
jmp
iret
out
in
lds
repnz
iret
mov
rcr
fchs
mul
sti
fildl
test
notl
or
clc
negb
or
adc
sbb
add
loop
add
add
and
scas
mov
jmp
mov
repz
jmp
mov
cli
ret
flds
loop
cld
loop
int
rorb
fdivr
in
cld
jmp
fdiv
fisttpl
sbb
jmp
push
cs
push
push
add
mull
int3
out
ljmp
fdivrl
jmp
cmc
mov
or
in
cli
add
in
adc
or
or
hlt
call
hlt
or
in
incb
out
adc
pop
loop
repz
std
std
sbb
adc
and
pop
add
add
in
mov
mov
mov
aad
mov
sarl
leave
idivl
cld
or
call
push
stc
push
in
jmp
pop
sbb
sbb
and
and
and
adc
sub
jecxz
movsl
shr
ret
scas
jmp
aam
shl
in
fcomp
std
fucomp
rcr
add
in
or
lret
add
fdivr
or
pop
adc
std
decb
hlt
and
loope
sbb
and
and
invd
cs
add
add
lods
les
repz
lock
cmc
out
lret
call
call
xlat
add
loop
imul
lret
adc
pop
adc
ljmp
loopne
loope
pop
mul
add
or
add
sub
sbb
push
out
sub
ret
fsubr
into
repnz
int
lret
mov
mov
out
neg
call
incl
adc
in
in
xlat
loop
cli
in
out
sbb
decl
and
daa
out
call
out
or
add
pop
pop
and
in
cmpsl
out
call
mov
stc
jmp
out
fcmove
add
cli
fadd
rcr
lret
out
lock
call
psrlw
clc
fmuls
adc
pop
in
pop
add
lock
icebp
push
sbb
out
sbb
clc
or
and
das
xor
mov
fbstp
ret
mov
fnstenv
call
lds
jmp
lret
leave
in
pop
or
call
loopne
and
testl
sbb
or
xor
sub
loope
stos
jecxz
ret
loopne
mov
iret
div
icebp
fxam
fdiv
stc
loope
add
adc
jecxz
out
jmp
add
sbb
and
add
repz
hlt
sbb
sbb
and
adc
fsubr
int
ret
shrb
shl
hlt
out
into
mov
iret
call
clc
in
add
add
out
adc
repz
shl
ljmp
in
daa
pop
fisubl
sbb
in
sub
adc
lock
std
repz
loop
in
movsb
shrb
enter
repz
rcl
shl
stc
add
mov
or
cld
int3
int
adc
out
pop
sbb
out
fdiv
sbb
or
loope
in
add
fisttpl
clc
out
add
sub
adc
rol
loop
scas
iret
rol
mov
std
lds
rcl
add
loope
imul
cli
ljmp
adc
shl
lock
sbb
xlat
cmc
cmc
aam
sbb
adc
and
sbb
and
repz
daa
sub
ret
ret
jmp
mov
ror
aad
in
jmp
add
add
add
add
fprem1
in
iret
icebp
add
push
loop
testl
pop
ficoms
and
push
fsub
sti
sbb
adc
add
add
push
das
out
or
std
and
out
mov
shl
enter
stc
fcom
in
mov
hlt
jmp
lret
std
int
repz
push
lock
rcl
lock
sbb
sbb
sti
push
push
and
and
push
das
jmp
push
and
and
fmul
cmpsl
mov
out
call
icebp
mov
fdivr
jmp
std
fcmovbe
fmulp
std
ret
cld
lret
or
rorb
in
clc
cmc
rcrl
fcomps
or
clc
sbb
out
add
adc
sub
out
out
add
out
out
jmp
int3
shr
enter
out
mov
sti
jecxz
xlat
aam
decl
repz
out
add
jmp
adc
repz
and
sti
incb
or
out
adc
out
and
and
testb
sarb
mov
mov
icebp
mov
mov
loopne
jmp
mov
out
add
int3
sti
pop
lret
in
lock
shr
sti
sbb
ljmp
adc
sub
or
sbb
or
sub
lods
out
mov
shl
icebp
clc
jmp
sarb
faddp
out
cli
rcr
lock
out
jmp
fmull
movntq
out
aad
or
call
fcomp
adc
sbb
clc
daa
sbb
add
in
xor
ss
into
jecxz
cmc
aad
fcomip
mov
fdivl
leave
in
rolb
rcl
or
out
cld
div
push
loop
rcll
jmp
add
sbb
idiv
out
add
clc
or
and
cli
or
icebp
push
jmp
rcl
int3
mov
rcl
icebp
repz
into
mov
add
add
out
hlt
sti
ret
in
fmul
add
in
in
in
or
push
out
add
fcmovbe
sbb
xlat
in
and
adc
and
call
testb
in
add
add
mov
call
leave
shlb
clc
mov
stc
cld
ret
bswap
int
in
add
add
jmp
out
call
jmp
adc
loopne
and
out
hlt
jmp
adc
cmp
movsl
lods
cmc
out
clc
lret
iret
int3
mov
enter
repz
out
jmp
lret
add
add
into
decb
cmc
shr
or
idiv
fstps
sti
adc
add
adc
push
add
push
or
or
out
sub
mov
scas
shl
ljmp
cld
mov
xlat
add
neg
jmp
loop
std
add
or
clc
aam
push
adc
jmp
paddw
and
or
and
std
or
add
std
in
pop
movaps
in
int
int3
call
in
in
jmp
loope
out
out
out
enter
into
femms
int
pop
aam
pop
sbb
adc
out
adc
out
cmc
stc
icebp
icebp
out
add
jmp
sti
push
and
and
xor
fucomi
ret
in
mov
ror
sarl
fidivrl
fsubp
out
or
fcmovnb
fldl2t
icebp
std
add
adc
pop
sbb
xlat
push
ljmp
loopne
add
sti
sbb
icebp
cs
xor
into
mov
mov
mov
in
out
mov
int3
ret
sar
add
lret
flds
in
lret
add
loopne
push
adc
or
jmp
add
mull
and
sbb
adc
sub
add
sbb
loop
jmp
iret
fcmovnbe
fsubp
imul
hlt
lret
call
out
ret
test
les
cld
or
or
out
pop
rorl
adc
sbb
sbb
adc
in
sub
add
stc
jmp
sti
pop
or
adc
mov
lds
cli
mov
clc
add
add
out
loopne
or
or
repnz
or
adc
push
push
sbb
adc
adc
push
adc
and
icebp
loop
add
sti
or
xor
into
lret
lods
mov
rol
mov
fcmovu
mov
aad
out
fidivrl
fiaddl
cmc
fiaddl
leave
adc
add
repnz
pmulhw
cmc
out
cmc
pop
lock
and
and
in
or
out
rdtsc
in
xor
xor
fucompp
leave
in
call
mov
in
jmp
in
repnz
out
push
in
out
add
mul
jecxz
pop
ret
lret
leave
or
repz
pop
ljmp
sbb
loope
push
cli
sbb
clc
das
xor
and
psubsb
or
jmp
int
jecxz
in
jmp
ror
clc
fdivr
repnz
fucomip
out
add
jmp
hlt
or
int
lret
out
jmp
stc
add
fisttpll
add
or
out
or
push
sbb
in
scas
fcmovnu
into
fucomip
call
enter
cmc
fmul
std
in
cli
fdivr
or
fcomip
ffreep
call
sti
in
int
repnz
loop
stc
jmp
in
or
fildl
cld
fdivr
fisubl
and
ljmp
sub
or
xor
call
fsubrp
out
lds
mov
aam
cli
jecxz
loopne
loop
xlat
add
fstp
mul
cli
adc
lret
call
stc
aad
push
or
or
adc
sbb
adc
and
sub
cld
sub
ljmp
not
divl
jmp
shr
lock
rolb
fsubp
idiv
or
faddl
repz
or
aam
adc
push
or
add
sbb
adc
call
adc
sbb
cs
out
or
lock
in
xlat
ret
mov
aam
out
f2xm1
neg
mov
repnz
icebp
loopne
add
mov
or
ljmp
xlat
out
out
testb
or
add
adc
sbb
out
or
and
sti
sbb
call
icebp
xor
mov
lods
into
jmp
fstp
shl
fcmovu
repnz
stc
cli
roll
add
add
syscall
loope
rcll
fcomi
fcomi
ljmp
push
push
cmc
ljmp
cld
icebp
sub
and
int
in
rcl
out
loop
mov
int3
rol
call
aam
or
add
iret
adc
or
or
rorl
or
sbb
push
sbb
fstl
fistps
sti
sbb
sbb
movups
sub
stos
test
lret
ljmp
lock
mov
mov
mov
or
out
out
faddp
cli
rcl
in
add
rolb
add
jmp
or
fucomi
adc
repz
cld
push
daa
jecxz
sbb
adc
xor
loop
rol
call
sti
cmc
not
mov
out
idiv
out
loopne
mov
push
in
fldl
loop
iret
std
repz
out
add
sti
adc
push
cld
clc
cmc
sbb
negb
sbb
cld
sbb
cld
and
in
in
cs
aaa
sub
out
fdivl
ror
sarb
fucomp
stc
repnz
rcr
xlat
lds
push
pop
clc
add
cld
repnz
ljmp
sbb
out
loop
repz
push
sbb
add
and
out
or
pop
and
xor
call
mov
mov
stc
hlt
cld
cli
fscale
fadds
cld
push
imul
add
add
out
or
or
or
rorb
or
call
out
adc
repnz
hlt
std
add
add
or
sub
icebp
sbb
out
lret
out
stc
cmc
jmp
out
mov
add
add
int3
jecxz
into
cld
iret
fildl
lret
idiv
out
add
adc
repnz
hlt
sbb
lock
add
push
and
and
or
out
lods
loop
out
lret
loopne
ljmp
cli
lock
hlt
divb
add
cmc
add
enter
push
add
adc
adc
sbb
repz
add
lock
add
push
pop
sbb
and
xor
das
xor
and
enter
mov
in
sar
fcmovnbe
shl
fstpt
mov
add
cli
leave
in
adc
cld
jecxz
out
rcll
adc
or
lock
lock
loope
add
or
adc
scas
lret
fcmovbe
call
mov
lock
mov
lock
in
add
sti
leave
fisttpll
lret
add
cmc
shr
aad
add
sti
adc
push
push
push
stc
and
ljmp
sub
sti
sub
and
ljmp
mov
int3
mov
shl
lock
fiadds
cmc
rcr
fcmovb
jmp
in
fcomip
adc
add
add
adc
hlt
std
adc
loopne
and
incl
sbb
out
in
cld
es
adc
add
sub
mov
in
lock
sti
lret
aam
cmc
mov
aam
incl
add
std
jecxz
shr
or
pop
rorl
out
adc
hlt
fisttpl
pop
lock
sbb
std
push
xor
add
adc
iret
jecxz
in
mov
mov
in
lret
mov
mov
fst
jmp
loop
adc
out
jmp
call
stc
sbb
adc
adc
pop
push
pop
sub
pop
and
sub
mull
bnd
or
out
mov
in
in
xabort
out
in
fdivrp
ljmp
cmc
jmp
aam
fucomp
adc
fucomip
ljmp
rcrl
repz
or
fsubl
add
repz
sbb
and
loop
or
es
jmp
xor
int
sarl
mov
lret
aad
iret
stc
ret
add
not
ljmp
int
into
loop
add
adc
adc
push
aad
hlt
push
repnz
sbb
cmc
stc
adc
cld
cli
sbb
or
or
std
adc
hlt
and
mov
scas
leave
mov
mov
repz
in
repz
jmp
into
fstp
or
jmp
add
shr
rorl
in
roll
add
out
sbb
or
sbb
daa
es
or
sti
sub
add
out
and
out
or
sub
enter
movsb
mov
repnz
into
div
rol
aam
faddl
fscale
mul
fucomp
fcompp
loop
add
in
or
add
or
add
cld
std
out
fistl
shr
loope
push
out
and
loope
pop
push
add
lock
sub
add
lock
lods
test
enter
ffreep
jmp
aam
fcmovbe
stc
icebp
mov
out
rcl
sti
ffreep
jecxz
stc
push
add
into
push
iret
shl
adc
in
or
rolb
adc
in
sbb
pop
and
add
sub
jmp
xor
add
xor
repz
scas
in
out
mov
jmp
call
cmc
clc
pop
cli
jmp
int
adc
ror
ljmp
or
or
and
fistl
loop
add
in
cld
push
pop
and
sub
push
add
push
or
stos
into
leave
ljmp
lret
cmc
fcmovu
lock
out
out
ret
add
int3
iret
add
loope
or
iret
or
or
adc
adc
daa
std
sub
push
out
sub
add
adc
daa
push
and
jmp
lret
lret
repnz
mov
std
add
mov
add
loop
or
lock
fcomip
or
adc
push
or
cmc
and
cli
in
adc
add
cmc
std
loop
sbb
das
das
xor
sub
mov
mov
leave
mov
mov
mov
int
movb
or
adc
or
fimuls
adc
clc
pop
sbb
or
es
sub
and
push
sub
in
lock
das
and
ror
out
rcr
icebp
ror
icebp
enter
iret
aam
ljmp
loopne
mov
push
out
or
push
std
out
cmc
testl
in
lock
add
add
sbb
and
or
clc
sbb
sub
or
in
les
bnd
ret
hlt
out
sarl
rolb
aad
testl
loope
lock
adc
aad
negl
fldenv
pop
pop
loopne
adc
sti
add
sbb
sbb
std
out
ljmp
mov
loope
leave
out
aad
out
cmc
mov
aam
cli
hlt
int
lret
clc
loope
shl
ret
fiaddl
jmp
imul
lock
push
or
fmuls
sti
cld
or
add
adc
add
std
add
loop
or
sbb
push
pop
and
or
cs
loop
in
mov
rol
scas
fidivl
fucom
fcom
cld
ret
repz
in
add
push
call
push
pop
jmp
sbb
and
and
in
or
sub
and
and
and
out
pop
ss
into
call
lret
mov
cmc
mov
ljmp
iret
loopne
loope
or
aad
repnz
out
not
out
sbb
neg
fstl
push
sbb
loope
fsubrp
add
in
paddsw
fcmove
fdivp
ret
clc
repz
fiadds
fnstsw
std
add
lret
rclb
jmp
out
aad
lock
sbb
lock
daa
push
pop
sbb
sub
pop
xor
sub
stos
mov
mov
loop
clc
loop
cmc
out
mov
cld
push
cmc
les
in
out
sti
fists
in
add
cmc
push
ljmp
adc
fcomi
hlt
and
cld
notl
jmp
sub
sub
xor
into
fcmovu
icebp
out
scas
ret
jecxz
ret
lret
in
add
neg
stc
int
add
mov
in
lds
add
jecxz
out
sbb
sbb
loop
loopne
add
and
add
add
sub
push
add
out
stos
scas
mov
aam
test
lret
mov
ffree
pop
or
pop
or
sti
incl
pop
prefetchw
push
push
in
or
aam
pop
jmp
in
sbb
hlt
or
sub
call
in
adc
lods
fsubp
in
mov
mov
lock
int
jmp
hlt
add
aad
stc
sti
loopne
out
add
or
add
adc
or
add
pop
stc
stc
loop
sub
and
lock
adc
fcomi
mov
rol
icebp
mov
shl
xlat
stc
fucomp
add
aad
or
iret
loopne
adc
cmc
repz
out
sbb
out
fsts
add
push
sbb
sbb
add
sbb
add
sub
lods
leave
jecxz
loopne
ret
lret
icebp
cli
fcmovne
repz
shl
aam
movl
or
or
or
loop
jecxz
xlat
or
fucomi
fcomp
fcomi
adc
stc
and
sbb
sti
add
lods
mov
vpavgw
jmp
std
fidivl
out
clc
out
in
hlt
push
or
call
iret
fsubrp
cmc
ljmp
std
icebp
sbb
fcmovu
pop
fistps
out
loop
call
sub
or
in
add
int
loopne
loope
loop
hlt
repnz
stos
fxam
repz
div
incl
shl
mov
fadd
aad
or
icebp
filds
or
cmc
sar
adc
adc
sbb
jmp
cld
fcoml
fsub
cld
out
cld
pop
pop
and
cld
add
lock
or
mov
jecxz
iret
in
repnz
icebp
mov
out
stc
add
xlat
shl
fcmovu
loope
xlat
or
iret
jmp
icebp
adc
shl
rcl
rcll
aad
fdiv
fists
and
out
std
out
adc
pop
sub
sub
and
push
sub
sub
in
loopne
mov
out
stc
repnz
fadds
rcl
out
in
add
push
psrlq
stc
aam
push
sbb
fbld
jmp
repz
cli
sbb
pop
call
out
daa
es
lar
stos
shll
out
out
lods
lock
iret
add
xlat
ret
or
aad
testl
rcl
int
push
pop
adc
movups
fdivrp
fdivrp
push
sbb
ljmp
adc
or
icebp
call
mov
jmp
in
mov
int3
fcompp
rcr
mov
in
loop
add
std
loop
icebp
ret
loopne
hlt
rolb
out
in
into
cli
pop
pop
or
clc
fistpl
out
and
daa
call
hlt
xor
or
mov
in
leave
aad
in
ret
in
int3
mov
loop
icebp
inc
mov
fdivr
in
psubsw
loopne
jecxz
sbb
sbb
or
fcmovbe
or
loop
push
jecxz
imul
stc
adc
jecxz
in
call
xor
call
iret
test
clc
sti
fdivrl
into
cli
cld
cmc
ret
clc
fucomp
add
add
jmp
push
push
out
or
push
call
ljmp
push
sub
or
pop
std
add
or
das
decl
adc
scas
test
jecxz
call
mov
lock
add
loope
clc
mov
clc
jmp
std
aad
pop
out
aam
pop
out
decl
add
cld
adc
push
lock
adc
ljmp
sub
std
or
and
int
aad
aad
cmc
leave
rcr
repnz
stc
fdivrs
mov
fcmove
add
or
or
ljmp
cld
sbb
aad
or
cld
sbb
jecxz
or
sub
add
cs
loop
add
sub
movsl
fmulp
shrl
mov
fnstsw
roll
push
loope
sar
jecxz
testl
loope
into
jmp
or
hlt
or
pop
jmp
idiv
idiv
sti
notb
add
daa
and
and
sub
sbb
cmpsl
icebp
mov
in
repz
into
aam
cld
mov
mov
mov
ret
in
push
call
decb
rorb
fstpl
out
sbb
adc
push
adc
sbb
stc
add
and
add
lods
mov
enter
mov
in
in
mov
aam
add
cmc
leave
aad
loope
in
adc
in
push
cmc
testl
fcoml
rcl
adc
loop
std
unpckhps
pop
sbb
sub
or
and
lock
es
repnz
aam
repz
shr
mov
mov
iret
rcr
add
or
ljmp
add
or
repnz
aad
or
sbb
clc
sbb
in
hlt
sbb
sbb
sbb
xor
and
sub
jecxz
rol
bnd
in
stc
in
mov
aad
mov
not
cmc
rol
jmp
ljmp
out
shl
or
push
sbb
loopne
loopne
and
loopne
add
sti
ljmp
in
push
out
adc
or
or
out
loope
ror
lock
mov
les
call
or
leave
or
push
iret
pop
or
fcompl
pop
and
in
and
paddsw
and
out
mov
in
in
jmp
repz
ret
push
mul
stc
in
or
fnclex
loopne
fsub
loop
int
in
out
ficompl
shll
push
add
push
in
repnz
daa
push
clc
sbb
and
and
and
xor
fucomip
in
test
out
loopne
ljmp
aad
add
fcmovu
cmc
push
leave
clc
stc
sti
std
push
or
in
or
pop
aam
out
rorb
jecxz
fmull
fisttpl
ljmp
loope
adc
adc
sti
sub
sub
and
and
shl
fdivrl
out
out
aad
sti
fucomp
mov
add
mov
jmp
mov
icebp
icebp
shl
rclb
testb
out
lock
adc
repnz
fsubp
hlt
push
and
or
xor
out
das
adc
jmp
call
shl
out
loop
sar
fucomp
mov
jmp
lret
enter
roll
adc
in
fmull
cmc
or
pop
fistps
add
or
out
and
push
or
xor
xor
shrb
shl
ret
int3
mov
mov
ror
call
cld
cli
out
repz
fsub
pmaxub
call
ljmp
adc
sbb
add
daa
adc
sbb
sub
sbb
out
pop
xor
add
jmp
mov
enter
fcmovu
out
hlt
lock
clc
in
fcmovnu
clc
sar
sti
mov
ljmp
adc
out
adc
or
sbb
pop
push
push
repz
fstl
add
add
jmp
push
jmp
sub
add
fstp
icebp
mov
out
ret
mov
shr
out
mov
cmc
lret
add
rcl
shl
int3
in
or
jmp
jmp
adc
hlt
fcmovbe
add
push
ljmp
pop
or
adc
ljmp
and
rep
shlb
mov
hlt
hlt
mov
repz
add
add
loop
or
ljmp
lret
hlt
or
adc
xlat
stc
idiv
sbb
or
add
xlat
hlt
sub
loopne
clc
imulb
jmp
std
out
adc
daa
sub
add
loop
into
les
icebp
rol
repnz
aam
fldpi
jmp
in
repz
or
testb
in
cld
cli
ljmp
sbb
in
or
adc
loopne
add
adc
or
sub
jmp
pop
in
or
or
in
shr
out
mov
enter
mov
sti
clc
add
fcomp
shl
in
cli
add
out
lock
or
psubw
in
std
stc
std
and
jecxz
adc
neg
ljmp
push
adc
push
in
add
or
call
repnz
aad
in
leave
enter
mov
fucomp
loop
mov
push
fldl
or
imul
or
or
add
hlt
add
fistps
clc
in
repnz
or
push
daa
es
add
testb
out
out
loope
fucomip
mov
ror
mov
aam
idiv
mov
add
out
aam
call
or
shl
adc
lock
repz
adc
add
sbb
push
pop
out
or
or
mov
mov
aad
mov
loope
lret
icebp
flds
fildl
stc
rolb
int
fcoms
ljmp
adc
add
add
faddl
and
and
sub
pop
add
and
call
scas
jmp
enter
stos
stc
xlat
cli
out
lret
lock
cld
roll
faddl
in
fldln2
lret
jecxz
aam
out
or
fmuls
icebp
push
in
pop
sbb
or
stc
add
or
and
jmp
div
movsl
xlat
mov
aam
imulb
call
cli
mov
jecxz
std
fucomi
or
fldl
or
shl
in
rcl
fcmovnu
psllw
push
sbb
pop
adc
jecxz
pop
and
in
pop
sbb
and
add
mov
int3
stos
call
in
cld
stc
int
mov
lret
fucomi
fst
sti
hlt
jecxz
jecxz
cli
or
leave
add
add
adc
shr
shl
int3
or
sti
fmull
adc
pop
push
adc
daa
sti
sub
in
clc
in
add
icebp
xor
or
sub
into
mov
loope
rcr
ret
loope
rcl
cli
int3
cld
xlat
out
idivb
or
ljmp
rcll
add
or
sbb
sti
psadbw
and
add
or
sub
or
jmp
and
mov
mov
icebp
mov
enter
add
fdivrl
add
add
int
adc
std
in
out
add
adc
in
cli
cld
fucomp
and
adc
add
push
jmp
add
jmp
out
ror
aad
in
clc
stc
jmp
aam
std
cld
aam
sti
in
clc
jmp
stc
std
movb
aam
loope
jmp
push
sbb
lock
out
sub
cld
push
sbb
sbb
paddd
in
das
fadd
ljmp
mov
mov
into
lock
mov
mov
add
or
lret
ror
aad
xlat
sti
hlt
or
out
jmp
add
sbb
hlt
in
and
add
cs
add
push
das
or
scas
shlb
jmp
repz
mov
into
call
sarl
xlat
jmp
shl
push
loop
add
cmc
neg
xlat
in
cld
lock
fcmovu
fiadds
repz
mull
or
daa
or
pop
and
or
out
repnz
ret
rcl
in
mov
aam
loope
into
neg
rcr
cld
fndisi(8087
loop
out
add
or
sti
cmc
add
out
lock
or
or
jmp
mull
add
adc
loop
sub
out
adc
or
fldenv
shll
cmc
div
hlt
clc
mov
out
std
test
add
std
add
add
in
shl
sar
adc
out
adc
fcomi
and
and
jmp
sub
pop
ljmp
and
cmc
adc
fstp
mov
ret
mov
repz
call
call
neg
add
xlat
push
or
mov
ljmp
jmp
ljmp
ljmp
and
or
adc
das
xor
out
sbb
out
out
and
hlt
mov
scas
ljmp
xlat
leave
std
loope
clc
stc
fcomip
enter
leave
cli
int
dec
or
enter
aad
out
adc
loope
jecxz
fdivrp
pop
negl
sub
sbb
daa
xor
sub
or
stos
iret
rcl
mov
int3
into
repz
jmp
faddl
fucomi
icebp
cmc
clc
fcom
or
hlt
push
std
add
in
or
add
hlt
aad
fmuls
push
or
cld
sbb
daa
out
daa
sub
sub
das
adc
sub
sub
sub
int3
repnz
lret
ret
clc
mov
fidivrs
add
ret
cmc
jmp
in
loope
adc
out
nop
pop
fcmovnu
sti
add
or
fcompl
pop
cli
pop
call
testl
and
jecxz
scas
mov
loopne
mov
out
cli
fcmove
fucomip
add
std
jecxz
ret
loopne
loop
fsubr
fsubr
jmp
in
pop
add
jmp
in
adc
push
aam
repz
and
sub
or
ljmp
add
xor
sub
ljmp
int
jecxz
mov
cmc
aam
cli
filds
ret
add
mov
push
fstp
add
rcl
icebp
add
fcoml
fsubl
icebp
out
loopne
adc
pop
stc
loopne
cmc
sub
add
std
add
int
out
in
mov
out
mov
in
lret
shl
lret
out
cld
rcl
mov
adc
movl
int
sbb
cli
in
or
flds
and
adc
add
sub
xor
and
pop
pop
and
mov
mov
lret
out
mov
jmp
mov
add
lret
add
out
in
lret
pmulhw
or
xlat
sbb
lock
repnz
sti
push
adc
in
or
push
loopne
or
repz
daa
and
loope
leave
fisubrl
mov
stc
repz
stc
out
mov
mov
fsubrp
in
aad
out
loopne
leave
call
int
add
add
sti
out
hlt
in
or
pop
pop
es
and
das
and
sub
hlt
daa
repz
scas
loop
in
mov
ret
icebp
enter
mov
out
xlat
or
in
or
lret
lret
add
adc
out
jecxz
clc
fincstp
push
cmc
sti
adc
std
mul
div
sub
push
es
jmp
or
repnz
ret
ror
repz
iret
lret
fsincos
mov
loope
aad
lret
jmp
out
add
loope
ljmp
fcoml
xlat
add
fcomip
and
loope
jmp
and
sub
sub
sbb
sub
and
fucomp
ffreep
jmp
aad
mov
scas
fcmovne
fucompp
fdivs
fcmovnb
ror
out
or
or
adc
lret
fcomip
loope
add
adc
bnd
loope
in
lock
adc
add
adc
sub
sub
adc
xor
out
in
in
ljmp
aam
in
call
fcomi
add
testb
fld
fdiv
add
in
adc
or
call
fisttps
adc
fisubs
adc
in
sub
sub
ljmp
adc
es
out
scas
int
mov
leave
mov
mov
in
sti
aad
testl
cld
fmul
add
add
lock
repnz
clc
fmuls
add
lcall
hlt
push
testl
std
das
add
cli
push
sub
or
loope
in
call
cmc
shl
mov
mov
mov
shl
repz
add
fcmovu
cmc
adc
add
repnz
xlat
fildl
cmc
repz
sbb
adc
out
idiv
sub
mull
or
and
sub
daa
xor
mov
ret
movsb
scas
icebp
ret
enter
jmp
aad
mov
sti
fdivp
fdiv
cmc
add
fisttps
int
in
add
hlt
adc
jmp
icebp
jmp
clc
push
add
loop
es
in
in
sub
decl
adc
jmp
out
aam
mov
fst
add
int
add
add
incb
pop
out
repnz
loop
add
frstpm(287
in
pop
ljmp
neg
notl
cli
add
and
and
and
jmp
lret
in
out
ljmp
in
out
leave
int
mov
loopne
shl
mov
hlt
aam
add
loope
loope
adc
out
lock
ljmp
adc
fdiv
push
fcomip
pop
in
sub
in
add
sub
and
and
add
int
stos
shlb
cld
call
add
out
repz
rcr
shr
jecxz
add
jmp
or
sbb
or
or
and
jmp
or
add
add
daa
in
fldt
fidivs
les
ljmp
push
sti
hlt
push
pop
call
push
int3
out
into
lock
or
adc
jmp
and
adc
and
ljmp
nopl
adc
sub
add
ror
sarl
neg
icebp
icebp
mov
int3
int
shl
shl
fyl2xp1
fdiv
or
or
loop
add
out
out
mul
clc
or
sbb
call
and
or
or
ljmp
in
ret
in
stos
cli
cli
sti
fyl2x
mov
sarl
cld
decl
add
dec
push
out
roll
test
sar
cld
adc
icebp
and
call
sbb
jmp
jmp
add
or
push
std
xor
jmp
enter
mov
shl
ror
clc
mov
in
mov
fdivp
add
fmuls
ret
or
in
or
fcomi
int3
std
repz
pop
int3
out
out
fcomp
sbb
sti
push
cmc
fsubl
jmp
push
sub
or
xor
cmpsl
fsubrs
repnz
cld
std
lock
sti
add
cli
out
ret
ljmp
loop
loope
add
jmp
testl
icebp
loope
stc
in
repz
or
cld
and
icebp
sub
and
repnz
loope
repnz
jmp
shll
test
mov
add
shufps
icebp
add
shr
div
out
std
adc
sbb
add
sbb
jmp
ljmp
or
mov
rol
mov
mov
icebp
mov
ret
call
out
in
out
repz
pop
push
add
in
pop
adc
and
fcmovnu
out
and
sbb
loopne
jmp
in
in
loope
and
repnz
add
mov
out
call
mov
clc
hlt
add
fcmovnu
loopne
repnz
or
adc
or
notb
iret
sti
lock
sbb
sbb
cmc
push
add
push
sbb
call
adc
cld
ljmp
jmp
mov
mov
mov
rcr
mov
faddl
xlat
or
fisttpll
adc
shl
fsubrp
add
adc
aad
repnz
call
adc
sbb
sbb
add
sti
in
daa
xor
add
add
adc
out
lret
into
loopne
int3
ret
out
loopne
int
fmul
in
stc
sti
in
mov
push
in
or
or
add
xlat
jecxz
lock
cmc
fcomps
add
adc
add
sbb
sub
jecxz
and
icebp
in
mov
int
ror
shl
shll
add
fisttps
add
clc
or
push
cld
cli
or
push
not
or
fdivrp
icebp
sbb
push
pop
or
or
add
pop
or
sbb
call
out
icebp
mov
lret
hlt
call
hlt
int
fcomi
add
mov
jmp
fmull
add
add
aad
repz
negb
or
and
icebp
add
cld
or
cli
stc
or
ljmp
loope
stos
ljmp
mov
in
repz
ljmp
mov
call
ret
int
pop
icebp
aam
push
icebp
repz
adc
adc
sbb
sbb
sbb
adc
cli
jmp
clc
std
adc
pop
lock
sub
mov
jmp
scas
mov
les
out
out
iret
incl
enter
add
add
add
fcom
ljmp
cli
jmp
in
add
adc
repnz
push
sub
leave
test
mov
lods
ret
cmc
sar
rcr
ror
add
mov
loop
cli
clc
add
repnz
ljmp
neg
cli
adc
loope
push
add
adc
or
sbb
adc
or
fst
leave
out
mov
lods
div
ljmp
cld
add
enter
jmp
lret
movl
or
sbb
cld
fcos
cmc
ficoms
icebp
in
testl
call
or
sub
or
shrl
in
loop
mov
mov
fcom
fsub
rol
shl
jmp
jmp
int3
or
repnz
sti
adc
sbb
and
or
in
sbb
incl
sbb
push
cs
das
add
push
mov
loope
cmc
iret
sti
into
mov
call
aad
loop
fsub
in
jecxz
sar
in
fdiv
jmp
hlt
cmc
aam
sbb
sbb
sbb
repnz
add
clc
sbb
std
adc
pop
call
mov
out
jmp
lret
in
lret
mov
out
hlt
pop
jmp
fucomi
add
iret
in
adc
iret
stc
or
sbb
call
and
and
loope
or
movntq
out
adc
or
repz
cmpsl
mov
aam
out
leave
ret
fld
ljmp
out
int
add
call
or
fneni(8087
ljmp
mul
div
out
ljmp
adc
out
sbb
or
in
sub
or
adc
push
call
out
call
shlb
std
lret
add
mov
in
fmull
or
fcom
or
cld
adc
in
stc
out
paddb
fsubr
fsts
cmc
add
add
in
add
and
or
sti
xor
out
pop
or
ror
int
mov
leave
mov
shl
mov
rcl
stc
rol
imul
int3
cli
or
adc
loopne
jmp
int3
icebp
out
lock
stc
aam
adc
adc
repz
add
call
and
cld
cs
or
lock
ror
mov
int
mov
jmp
fucomip
hlt
idivl
mov
jmp
add
int3
adc
out
or
sbb
or
ficompl
adc
push
add
hlt
in
pop
or
in
daa
and
add
mov
mov
mov
int
out
aam
sti
stc
loope
loope
ffree
pop
ret
aad
jmp
in
loope
aam
loope
add
sbb
sti
jmp
nop
or
fdivrp
and
loopne
and
push
sub
sbb
adc
sbb
in
sub
mov
call
fdiv
not
mov
aam
add
or
or
loop
lret
add
out
add
clc
or
add
faddl
and
sub
pop
sub
stc
pop
adc
adc
sub
lods
les
scas
int
out
mov
mov
stc
mov
into
roll
out
cmc
sar
in
mov
icebp
out
jecxz
cmc
lock
jecxz
notb
adc
cld
in
ficoms
fcomp
and
sbb
out
xor
and
or
add
mov
mov
scas
clc
int3
mov
icebp
ljmp
int3
iret
mov
ror
loopne
lret
enter
adc
out
icebp
aad
push
sbb
adc
adc
fildl
adc
cli
clc
hlt
pop
add
push
jmp
out
stc
sbb
hlt
or
cmpsl
int
int3
int3
int3
fnsave
mov
hlt
mov
ret
fldl
call
jmp
loop
or
or
out
fsub
div
adc
adc
hlt
icebp
and
cmc
and
sub
pop
in
or
lret
mov
shrl
fdivl
in
fdivr
add
sar
stc
stc
shl
in
jmp
add
out
shr
adc
loop
pop
add
ljmp
or
out
sbb
clts
xor
std
sbb
repz
sbb
into
int
movsb
shrl
jecxz
mul
mov
imul
faddl
lret
mov
rol
fcmovnb
lret
int
loope
adc
testb
cmc
out
sbb
sbb
push
and
cli
sbb
fsubrl
jecxz
notl
cs
xor
int3
fcmove
out
repnz
rol
stos
mov
enter
clc
clc
cmc
in
fdivp
out
in
ret
movl
add
in
add
rorb
add
adc
fcomp
adc
in
cmc
add
call
sbb
xor
in
out
mov
bnd
vpaddb
mov
in
mov
rcr
in
hlt
cmc
out
add
iret
jecxz
aam
push
adc
jmp
in
adc
ficomps
negl
push
push
jmp
pop
add
stos
lods
mov
mov
repnz
hlt
sti
mov
jecxz
not
fisttps
add
aad
push
adc
cld
or
jmp
stc
lgdtl
in
in
clc
sbb
pop
psubq
or
out
adc
xor
scas
in
fstp
out
jmp
loope
fnstenv
add
loopne
add
cmc
shl
ret
add
stc
or
incl
iret
aam
icebp
rclb
adc
adc
stc
pop
out
icebp
loope
add
ljmp
cld
and
sub
loop
stos
hlt
cmc
rcl
mov
in
out
into
cld
std
mov
add
clc
ret
push
in
push
add
push
out
xlat
add
adc
or
push
repz
push
cli
jmp
ljmp
add
les
in
aad
int3
mov
mov
mov
sti
mov
loopne
aad
stc
decl
add
out
add
adc
ljmp
xlat
push
aad
sbb
or
adc
add
daa
incl
imulb
sub
incb
repnz
fildll
int
loop
cli
fnsave
in
mov
ljmp
add
adc
adc
adc
adc
out
pop
and
sbb
pop
add
daa
sbb
sub
das
call
lock
jmp
fucompp
int3
into
fsubrp
out
aad
into
fdivr
fst
mov
ret
mov
add
in
sar
add
push
ljmp
or
negl
push
cld
out
sti
repz
sbb
sbb
and
or
sbb
test
lret
out
rol
les
repnz
int
xlat
icebp
fcomp
aam
loopne
std
decb
les
or
shr
ljmp
push
out
jmp
sti
cli
loope
adc
sbb
std
repz
or
call
or
adc
cmp
shl
div
scas
aam
xlat
test
fdivl
fstp
aad
lock
aad
fyl2xp1
into
adc
or
adc
add
aam
aad
adc
fsubr
fstp
adc
adc
and
and
and
add
cli
pop
pop
lock
adc
xor
mov
in
mov
in
mov
mov
faddl
std
stc
leave
loope
adc
loopne
push
or
or
cld
push
psllw
and
cmc
pop
push
pop
std
loope
ljmp
push
in
sub
ss
enter
int
aad
cmc
aad
mov
aam
fdiv
lret
mov
in
loope
fadds
ret
add
in
or
add
div
jmp
cmc
push
and
jecxz
push
clc
out
stc
out
and
sub
hlt
add
out
lods
in
mov
mov
cli
aam
stc
iret
clc
repnz
mov
ret
ljmp
loope
jmp
aam
sbb
and
fstps
fisubs
and
cs
add
push
sub
pop
add
mov
out
enter
jmp
icebp
fdivp
sti
jmp
out
mov
in
adc
jmp
loope
not
rcl
or
neg
fistl
cmc
out
incl
cmc
push
push
or
sub
and
xor
stos
loope
rcl
rol
aam
mov
mov
repnz
add
pop
cmc
into
out
fsubrp
repz
jmp
rorb
sti
hlt
or
cmc
in
hlt
jecxz
sbb
jmp
sub
repnz
xor
and
mov
into
scas
mov
not
repnz
cmc
repnz
mov
add
rcl
ffreep
clc
fdivr
ljmp
push
in
ftst
cli
sti
pop
sbb
fprem
sbb
sti
out
add
or
add
or
or
xlat
in
loopne
out
into
mov
int3
into
repnz
mov
out
sar
mov
xlat
ret
cli
fisttpl
add
icebp
rolb
in
cmc
or
cli
push
in
cld
adc
in
sbb
push
add
jmp
out
add
shl
mov
into
icebp
scas
jecxz
jmp
into
mov
in
xlat
sar
int
or
or
lock
hlt
fldlg2
adc
ljmp
in
add
sub
add
add
daa
xor
mov
int
repz
lock
cmc
in
mov
sar
iret
rolb
or
loopne
cli
in
sti
add
or
sbb
adc
adc
adc
out
fsin
pop
pop
hlt
out
sub
push
add
adc
add
xor
cmpsb
mov
lods
lock
in
mov
mul
out
leave
jmp
out
fdivrl
in
out
call
out
push
add
in
fcomi
sbb
and
add
adc
sbb
sbb
cs
add
sti
and
and
add
or
in
jmp
shl
rcl
int3
in
mov
shll
cld
repz
std
repz
out
fcmovne
loop
pop
or
or
rcl
add
sbb
ljmp
out
fldl
and
adc
sbb
jmp
lock
hlt
ret
fldcw
repnz
stos
mov
enter
mov
std
std
repnz
out
jmp
into
or
push
cmc
in
add
cmc
sbb
aad
add
cmc
adc
and
in
daa
push
and
and
and
and
and
and
stos
in
lods
fcmovb
out
mov
ljmp
mov
incb
add
fsin
in
fsubr
jecxz
lret
out
add
pop
pop
sar
jmp
lock
sub
call
es
push
add
or
ljmp
shr
lock
into
fcomp
sti
mov
fst
ret
jmp
add
fcmove
fcomip
jecxz
enter
ljmp
and
sbb
cli
cli
sbb
in
push
push
call
call
adc
loopne
out
ljmp
scas
cmc
mov
mov
clc
stc
ret
vpavgb
out
in
add
add
clc
jmp
pop
jmp
hlt
fldl
and
call
daa
add
sub
and
and
out
mov
jmp
rcr
repz
jmp
loop
add
fcomp
jmp
int3
add
repnz
or
adc
aam
adc
adc
and
and
add
out
or
sti
add
cs
jmp
loopne
stos
jmp
int
imul
cli
cmc
lret
mov
in
jmp
or
shr
shl
adc
out
add
add
ficomps
repnz
clc
adc
sub
adc
or
cs
in
push
push
push
out
add
in
mov
out
loopne
int3
call
loope
loop
loop
out
std
hlt
in
rol
flds
hlt
aam
add
out
hlt
sbb
stc
and
and
fiadds
sbb
and
cli
clc
xor
in
or
lret
shlb
ret
imul
into
mov
fxch
test
aad
add
out
in
adc
add
aam
repnz
add
aad
lock
aad
cld
out
testb
negl
sbb
add
or
shl
enter
mov
cmc
fcmovu
rcr
loope
lret
add
rcr
or
into
out
or
cmc
adc
testb
in
pop
sbb
fsub
in
and
adc
add
cs
adc
repnz
sub
add
iret
lret
mov
mov
fdivrl
fxch
add
fdivrp
or
jecxz
out
ljmp
add
out
out
push
sbb
adc
sbb
sti
sbb
sbb
adc
add
xor
test
iret
int
loopne
mov
cld
into
out
lret
sar
mul
loope
push
shl
jmp
ljmp
adc
iret
or
lret
icebp
in
stc
sbb
sbb
or
adc
fucom
add
or
pop
or
pop
adc
xor
or
out
scas
shl
mov
lret
out
mov
add
in
out
aam
cld
or
enter
fsubp
in
add
jmp
fsubs
or
add
and
and
add
push
and
add
aaa
xor
mov
out
int3
mov
lret
divb
add
rcr
lds
leave
fisttps
fdivrp
lret
lock
jmp
in
sbb
or
std
and
fists
in
add
pop
add
sbb
loop
in
and
and
jecxz
in
repz
shl
neg
stc
lret
icebp
mov
clc
cld
rcr
cld
fcmovu
add
fisttps
cli
loope
hlt
or
in
in
pop
cld
or
pop
loop
and
push
add
or
and
and
adc
test
mov
mov
rol
int
ljmp
lret
leave
or
in
stc
or
in
jmp
or
in
or
or
pop
push
call
or
and
sub
and
or
add
stos
fucompp
ret
jmp
fcmove
imul
hlt
mov
mov
rorl
add
iret
lock
rcl
adc
div
aad
std
bndldx
add
ficomps
daa
add
add
loop
call
or
push
out
ret
scas
jecxz
in
leave
rcr
cmc
cmc
in
shl
xrelease
cmc
or
fmul
cli
adc
in
adc
aad
shr
aad
or
and
and
cld
push
out
or
clc
daa
clc
sub
in
add
cs
in
in
shrl
out
fcomp
stc
mov
aad
mov
loopne
cld
lock
enter
fsubrp
lret
str
in
pminsw
adc
pop
hlt
sbb
or
cld
sbb
in
or
xor
xlat
cmpsl
mov
into
out
repnz
repz
mov
jmp
sti
fdivrs
stc
fisttpl
rolb
leave
rcr
enter
icebp
in
cmc
in
push
out
jmp
adc
and
out
push
cld
sti
and
cld
or
adc
repnz
shl
out
mov
shll
lock
add
mov
test
clc
out
in
rorb
push
ljmp
sbb
fdivp
hlt
ficoml
and
sbb
sub
out
add
test
jmp
ljmp
pushl
loope
add
fsubr
mul
xlat
cli
cli
cli
add
sar
out
clc
jmp
push
adc
cli
sbb
loopne
ljmp
fildl
and
daa
pop
add
add
sub
sub
repz
rol
scas
icebp
mov
mov
mov
mul
mov
loop
repz
jmp
in
out
pop
or
lret
rolb
adc
add
or
add
fcmovu
pop
cli
add
sti
icebp
or
sti
and
in
add
sub
lock
repz
lret
fsubrp
into
shl
mov
jmp
lock
xlat
lock
aad
add
int3
sti
jecxz
int
aam
jmp
pop
cmc
or
push
call
sbb
out
repnz
loope
sbb
and
das
and
push
repnz
loope
fcmovnbe
shl
shr
mov
out
ljmp
in
cli
mov
jmp
add
add
or
pmaddwd
or
fcmovnu
sbb
and
pop
or
add
or
or
add
and
in
mov
cmc
mov
shl
fcmovb
int
repnz
mov
aad
fcomp
fucomip
stc
adc
out
out
or
out
fcmovnbe
sti
jmp
ljmp
pop
and
pop
ljmp
sub
and
and
int3
mov
mov
shl
sti
mov
fsubr
mov
icebp
icebp
loopne
aam
cli
xlat
sti
loope
call
test
shl
sbb
pop
in
out
sbb
lock
push
es
push
std
jmp
push
adc
daa
xor
repnz
fsubl
loope
jmp
xlat
fcmovu
clc
fldl2e
add
int
roll
dec
leave
add
add
add
call
repz
aam
lock
mulb
add
adc
add
add
sbb
xor
scas
jmp
icebp
int3
hlt
bnd
jmp
std
mov
rcr
out
stc
roll
ljmp
adc
std
lock
out
or
pminsw
testl
push
in
pop
pop
loope
push
out
cld
and
repz
in
push
push
scas
scas
cmpsb
loope
mov
into
icebp
repnz
fsubrl
faddl
add
lock
loop
add
cld
sti
adc
add
rcll
or
fsts
in
add
and
sbb
jmp
sub
add
sub
int
shrb
jmp
enter
loope
into
in
into
std
hlt
cli
add
neg
int3
out
out
ret
add
int3
adc
xlat
pop
not
lock
push
adc
sbb
sbb
out
sbb
add
and
in
call
sub
xor
jmp
int
lock
mov
lock
mov
lock
mov
in
loope
out
or
push
out
adc
testb
cmc
and
and
fists
adc
or
or
or
jmp
sbb
xor
push
xor
leave
in
lods
test
in
repz
xlat
mov
lret
repz
aad
or
or
cld
jmp
pop
jecxz
adc
adc
adc
cld
cmc
adc
stc
add
add
sbb
add
ret
ftst
lods
jmp
lods
out
lock
mov
xlat
int
enter
fucom
loopne
lock
push
add
ljmp
add
fdivr
ljmp
adc
call
sub
sub
sbb
or
add
ljmp
into
aam
jmp
in
jmp
loopne
add
hlt
mov
mov
call
or
ljmp
sbb
push
and
fistps
and
clc
sbb
out
icebp
add
repz
xor
int
mov
lret
imul
fcmovbe
cld
mov
jmp
xlat
stc
int
in
out
fucomip
out
call
in
repz
jecxz
add
pop
cld
fcomps
out
push
loop
hlt
push
or
sbb
push
out
sub
lock
aaa
in
lret
out
out
int
test
mov
ret
mov
fcom
lock
add
leave
or
add
cmc
push
loopne
repnz
out
call
adc
in
neg
or
sbb
clc
sti
std
out
sub
in
add
ror
leave
loope
loop
ret
rcr
enter
std
mov
decl
lret
ret
call
rcl
fldpi
sbb
cmc
adc
cld
pop
std
icebp
es
and
and
jmp
push
push
sbb
xor
add
jmp
sub
fsubrl
shr
ret
mov
icebp
bnd
mov
repz
ljmp
in
or
jmp
cmc
int
fstps
or
icebp
stc
add
sbb
sbb
out
and
leave
into
hlt
in
mov
shl
mov
int
clc
ljmp
or
fcmovne
or
add
add
loope
push
adc
adc
or
cli
adc
ficoms
or
hlt
sbb
pop
pop
pop
cs
std
adc
adc
test
lret
mov
mov
in
in
lret
mov
fadds
ret
out
mov
cmc
cmc
in
cli
fmul
add
add
rorb
loop
adc
ljmp
or
push
es
sub
pop
hlt
add
in
pop
daa
in
or
into
into
fucom
cmpsl
shl
call
icebp
mov
add
iret
inc
hlt
cld
jmp
lock
rorb
pminub
call
sti
loopne
cld
adc
imulb
and
sub
repz
into
icebp
scas
fcmovnb
loopne
aad
int3
imul
mov
jmp
repz
stc
shl
loope
fdivrl
icebp
or
add
loope
pop
adc
adc
adc
add
fsubp
and
out
push
cmc
and
sbb
jecxz
daa
daa
xor
xor
ret
ret
scas
fsub
mov
not
lret
scas
mov
mov
idivl
xlat
cld
cli
movl
shl
in
out
add
aam
clc
jmp
flds
icebp
ficomps
repz
in
add
daa
or
sub
and
sub
jmp
stos
in
test
aad
mov
mov
repnz
loope
rol
mov
clc
vpsrad
add
or
mul
or
fxam
fcmove
adc
adc
add
add
in
sbb
add
sub
sub
add
adc
test
iret
rol
cli
mov
mov
stc
out
neg
add
cld
stc
fisttpl
stc
in
out
adc
out
iret
add
in
adc
push
or
fildl
add
sub
and
sbb
push
out
add
mov
in
lock
mov
loop
lret
shlb
in
shl
rorb
ret
clc
int3
or
out
adc
jmp
or
xlat
or
sbb
sti
in
sbb
loopne
adc
sbb
adc
and
repz
jmp
ret
mov
shlb
rcl
in
repnz
mov
add
in
std
loope
or
filds
in
loope
in
loope
push
neg
adc
clc
out
sbb
sbb
pop
clc
or
sub
stc
or
xor
pop
incb
add
and
rol
out
les
in
fcmovbe
icebp
ror
loopne
add
flds
lret
clc
push
push
add
add
adc
iret
loopne
aad
add
fprem
adc
fimull
in
adc
adc
push
sbb
and
and
sbb
mov
mov
leave
stc
into
cld
mov
mov
fcmovbe
cld
ret
jmp
loopne
hlt
add
repnz
add
adc
repz
icebp
ficompl
repnz
clc
lock
cli
add
and
sub
pop
test
fcmovnu
ret
lret
mov
fdivr
mov
loopne
in
hlt
out
out
jmp
add
out
push
in
sbb
pop
pop
imul
adc
es
adc
add
daa
sbb
cs
sub
scas
loope
leave
mov
mov
cmc
cld
cld
fadd
mov
in
stc
ret
fiaddl
ret
fldl
or
ljmp
adc
fstps
or
adc
repz
sub
sub
adc
and
fsubrl
cmc
mul
out
in
mov
fdivr
mov
fcmovbe
call
loope
adc
out
or
adc
jecxz
bnd
stc
out
and
sbb
push
cmc
fdivrp
or
add
sub
repnz
adc
xlat
int
test
in
leave
mov
out
aam
mov
cli
int
loopne
add
loope
jmp
add
sti
in
repnz
unpcklps
jmp
shl
sbb
out
clc
sbb
cli
and
pop
add
add
std
or
in
jecxz
mov
call
in
jmp
lret
loope
aad
lock
cld
aam
or
jecxz
in
out
or
aam
cmc
adc
sti
and
and
std
adc
or
and
and
call
repnz
mov
mov
mov
cld
rcr
mov
cli
jecxz
ret
pop
or
fmuls
xlat
in
shr
jmp
out
sbb
adc
cmc
aad
out
loopne
loope
add
and
sti
add
iret
faddp
lods
stos
fdivl
mov
neg
rol
repz
cmc
add
in
loopne
fcmovbe
int
or
notb
push
mul
cmc
xlat
fcomip
stc
repz
and
sbb
ljmp
jmp
add
in
rol
mov
lret
ljmp
enter
stc
add
mov
ret
enter
ror
add
hlt
or
fstp
or
sbb
push
negb
add
and
adc
push
repz
test
into
out
mov
mov
fpatan
mov
mov
mov
repz
fcmovb
jmp
or
adc
add
loop
in
or
cmc
out
stc
jmp
fisubl
loopne
pop
push
stc
or
in
cld
and
adc
xor
lret
shr
in
loopne
mov
int3
cld
scas
mov
mov
loop
repz
clc
fadd
incb
push
call
or
add
adc
or
or
add
and
sti
pop
pop
sbb
add
xor
or
xor
jmp
mov
lret
leave
in
jecxz
aam
repnz
fnstenv
loop
aam
out
add
jmp
out
fdivr
adc
or
or
out
push
shr
pop
cli
push
clc
adc
repnz
push
and
out
lsl
repnz
in
clts
in
in
mov
shl
ret
scas
mov
fsubp
in
add
int
mov
in
cmc
sti
psubq
push
add
rcl
out
pop
adc
cli
flds
repnz
jmp
push
and
sub
fsubrp
jmp
add
ljmp
cmpsl
ljmp
idivb
cmc
in
leave
shr
hlt
add
fldl
loop
xlat
int3
jecxz
push
int
add
adc
adc
adc
adc
push
filds
sbb
cmc
add
adc
es
and
xor
fidivrs
repz
aam
mov
test
fdiv
loop
add
iret
icebp
icebp
fildl
out
or
icebp
fcmovne
jmp
add
add
stc
shl
cli
std
repnz
or
adc
and
or
sbb
or
add
adc
lock
in
in
loop
leave
out
xlat
in
out
into
jmp
icebp
fadds
stc
add
stc
aam
or
out
lret
loop
push
dec
aam
out
rcl
adc
out
psubsw
sbb
hlt
push
add
loop
jmp
cli
add
sub
fsubrl
out
shl
mov
sarl
int3
rolb
fucom
fdivr
xlat
cli
cmc
vpsubw
filds
out
pop
aam
pmuludq
jmp
stc
add
ljmp
xor
add
mov
mov
mov
leave
icebp
rcl
add
mov
stc
cli
fcmovne
jmp
ret
or
lock
add
out
out
cli
or
cli
std
adc
sbb
daa
sbb
es
jmp
sub
adc
add
and
out
fnsave
lds
int3
int3
aam
test
int3
icebp
fistpll
pop
or
push
jmp
in
add
or
or
push
or
cli
out
sbb
repnz
std
sbb
loop
adc
add
add
lods
lds
in
cmc
out
int
sar
rcr
leave
mov
cmc
fcmovnb
add
fcmovnbe
in
ljmp
push
repz
aad
or
or
sbb
in
push
sbb
call
xor
das
pop
jmp
sub
fadd
jmp
mov
clc
into
in
fstp
shl
mov
add
enter
out
fdivr
in
in
iret
loop
or
push
or
pop
or
cld
add
loop
adc
sub
or
sbb
out
xor
pop
sub
icebp
testl
out
in
hlt
in
shl
in
enter
shr
mov
out
call
fcmove
lret
int3
loopne
push
or
out
adc
rorl
pop
sub
jmp
sbb
psubw
in
pop
xor
xor
lock
loop
out
loop
cmc
mov
sarb
shl
jmp
fxch
lock
in
shl
repnz
and
cli
adc
sbb
pop
out
sti
out
pop
mul
or
sub
xor
das
repnz
loop
mov
in
enter
call
repnz
int3
aad
xabort
fiaddl
imul
add
add
add
in
ljmp
adc
xlat
or
and
in
in
add
or
sub
in
sub
and
xor
adc
fcmovne
iret
lret
into
mov
jecxz
int3
fidivrl
into
mov
jmp
loope
fucomip
icebp
loope
repnz
or
add
or
push
stc
push
push
and
and
and
sbb
adc
fdivrl
jmp
out
rol
aam
not
shl
int3
mov
bnd
movl
adc
icebp
shl
adc
sbb
or
fsts
adc
psubd
daa
clc
or
or
out
lock
add
mulb
pop
sarb
out
loopne
icebp
ret
out
mov
sti
neg
aad
cmc
mov
jecxz
add
repnz
fdivp
adc
in
std
out
out
adc
add
adc
cld
and
sbb
and
or
xor
repz
cmpsb
mov
shrl
rcl
fidivrs
add
ret
in
jecxz
iret
add
jecxz
or
adc
rorb
repnz
icebp
fistl
out
lock
sbb
repnz
sub
clc
decl
or
adc
aaa
repz
fcmovnb
rcr
mov
mov
lods
lret
lret
aad
loope
mov
loopne
loopne
sti
lret
std
loop
cmc
rorb
out
fsubr
or
push
fcomp
icebp
push
add
jmp
in
sub
and
sub
sub
or
mov
fildll
mov
idivb
loope
mov
add
clc
std
push
out
hlt
jmp
into
sbb
adc
add
fstp
and
negl
push
jecxz
sbb
out
or
and
repz
push
xor
loop
lret
out
in
repnz
lret
out
ljmp
repnz
fld
clc
push
ret
in
add
rcr
loopne
fcoml
ljmp
iret
push
or
and
hlt
adc
push
icebp
and
and
or
pop
sti
std
add
sbb
adc
sub
loope
out
aam
in
leave
int
shl
fsubr
add
mov
incl
out
push
adc
rorb
pop
push
out
in
sbb
sti
ljmp
sbb
icebp
in
and
idiv
xor
xor
call
out
mov
test
hlt
repz
add
rol
loopne
add
or
fmulp
call
leave
add
or
in
or
repz
adc
cli
or
push
add
jmp
and
loopne
out
add
stc
xor
xor
adc
and
mov
ret
lret
iret
mov
scas
jmp
into
fdivp
loope
iret
sti
roll
repz
fstp
cld
push
in
lret
fisttpll
into
add
adc
adc
mull
cli
add
negb
add
push
in
sbb
es
add
xor
jmp
out
lret
idiv
fidivrl
std
neg
shlb
out
aam
clc
jmp
adc
add
adc
add
cli
negb
cli
and
and
sub
and
add
mov
in
rol
div
aad
lret
fnstsw
out
aam
stc
in
leave
fimull
ffreep
call
into
hlt
or
flds
sbb
push
sbb
push
loopne
pop
or
add
adc
sub
adc
das
xor
adc
in
shl
mov
fdivp
leave
cld
rol
ret
cmc
jmp
ret
in
add
cli
into
fucomp
rclb
loopne
ljmp
cld
add
adc
icebp
sbb
or
add
cld
in
push
add
xor
in
mov
scas
div
vcvtdq2pd
mov
roll
or
or
adc
lock
iret
sbb
pavgw
call
and
push
in
pop
sub
sub
pop
sbb
pop
sbb
daa
daa
and
xor
xor
rcr
in
movsb
mov
ljmp
rcr
loope
fdiv
mov
fcomp
stc
ljmp
repnz
loope
add
mull
loopne
bnd
and
adc
sbb
pop
or
and
std
cmc
aaa
pop
cmpsl
lods
icebp
f2xm1
loop
rcl
mul
xbegin
aam
sarl
pop
pop
stc
fucomp
icebp
add
shr
push
jmp
shl
jecxz
jmp
pop
out
cld
jecxz
out
push
cld
std
add
jmp
sbb
or
xor
and
out
mov
scas
lods
lods
sar
vpsllw
mov
repz
clc
hlt
clc
pop
or
in
leave
iret
pop
add
aam
or
rorl
fpatan
icebp
ljmp
sbb
sbb
repz
or
cld
ljmp
and
sarb
mov
leave
leave
iret
mov
fdivrs
rcr
shl
ffree
xlat
or
ljmp
lret
or
in
lock
or
or
and
notl
in
clc
adc
cld
sbb
or
sub
cld
sub
and
repz
jmp
mov
out
out
idiv
add
repz
fcomi
xlat
out
enter
adc
call
out
or
sbb
pop
sti
neg
hlt
adc
adc
sub
sbb
and
icebp
or
or
lods
loop
loopne
fsub
hlt
jmp
ljmp
lock
mov
loop
incb
or
ljmp
aam
or
and
loopne
add
sub
std
jmp
and
xor
or
fstp
icebp
repz
repz
add
pop
stc
or
add
dec
add
loop
adc
jecxz
adc
xlat
sbb
sar
sbb
clc
hlt
loope
cmc
sti
adc
or
daa
or
adc
and
lock
repnz
xlat
repz
mov
mov
repnz
jecxz
mov
loop
or
cld
pop
or
repnz
adc
idiv
notb
sbb
out
unpckhps
hlt
std
in
add
pop
add
sti
repz
push
sbb
in
out
repz
sub
movsl
int
scas
repz
imulb
out
shl
mov
loop
std
cld
fisttpl
push
std
iret
or
iret
ljmp
adc
fsts
sbb
sbb
daa
pop
adc
stc
pop
in
push
or
in
jmp
sbb
loopne
ret
in
iret
out
fsubr
fdiv
neg
test
jecxz
ret
jecxz
cli
lret
jecxz
lret
adc
loope
in
in
sbb
iret
adc
xlat
jmp
out
cld
adc
pop
sbb
jmp
jmp
sbb
out
lock
in
scas
call
fmul
in
mov
fdivrp
add
sarb
fcos
loope
shr
adc
lret
ljmp
sbb
jmp
ljmp
es
sbb
sub
sbb
or
add
stos
in
stos
enter
aam
hlt
mov
hlt
repnz
out
testl
cld
add
or
lock
int
int3
hlt
lret
jmp
stc
sti
sbb
add
pop
adc
es
sub
or
jmp
sbb
adc
and
mov
int3
hlt
mov
lock
clc
rcr
aad
repz
dec
in
pop
clc
add
jecxz
adc
out
into
icebp
or
sbb
push
or
std
add
testb
ljmp
cmpsb
mov
lret
scas
out
scas
stos
mov
fcmovnbe
mov
rcr
add
ljmp
or
or
push
xlat
or
repnz
or
fmuls
add
out
pop
adc
and
pop
or
or
adc
and
ret
rcr
jmp
rcl
mov
iret
loope
hlt
faddl
roll
sti
loopne
add
lret
fcmove
add
loope
or
ljmp
or
or
sbb
or
in
adc
in
loop
in
in
aad
shl
div
dec
hlt
loop
fabs
cld
out
rol
add
out
in
in
incl
rorl
adc
iret
rorl
jecxz
sbb
std
or
filds
adc
and
loop
adc
sub
call
adc
or
out
ffreep
ljmp
jmp
leave
jmp
shl
mov
iret
loope
pop
testb
in
loope
or
or
clc
aad
hlt
add
in
jecxz
xlat
es
loopne
ljmp
adc
cld
cs
pop
xor
mov
out
mov
in
jmp
cli
fdivrl
fcomp
loop
repnz
add
in
add
adc
cmc
imul
in
aam
call
hlt
sbb
cmc
sub
pop
in
and
sbb
sub
add
xor
ret
ret
loope
lds
shl
mov
add
loope
int3
cld
fcmovnu
in
in
loope
cmc
into
add
aam
repnz
ljmp
div
call
pop
cli
daa
cs
and
in
repnz
fucomi
shl
in
repz
out
out
mov
icebp
cmc
rol
clc
pop
ret
clc
push
out
out
cld
or
push
clc
int3
div
pop
lock
sbb
adc
adc
sbb
sub
sub
sti
add
sbb
fdivp
mov
repz
enter
fdiv
fdivr
mov
fucomi
add
add
or
lret
out
out
push
div
or
sbb
sti
cli
push
aad
adc
add
and
jmp
decl
sub
ret
in
out
scas
jecxz
in
cld
rcr
mov
mov
out
loopne
leave
enter
in
clc
add
lds
out
icebp
add
push
rcll
loopne
out
ficompl
sbb
and
or
xor
xor
add
int
out
mov
lret
lret
shl
divb
jecxz
lock
jecxz
or
leave
adc
in
icebp
loop
or
jecxz
out
out
out
in
or
push
sbb
adc
and
sbb
push
in
or
or
jmp
ret
lret
aad
vpsubb
mov
add
add
stc
add
ficoms
shl
add
aam
out
icebp
in
clc
not
cmc
aam
fdivr
adc
and
sub
push
sti
push
push
and
and
pop
xlat
call
loop
test
ret
aad
call
add
aam
ljmp
pop
int
lock
loop
adc
jmp
pop
pop
in
add
repnz
and
xlat
unpckhps
and
and
filds
and
pop
sti
incl
push
and
out
loop
scas
lret
mov
fstp
fstp
imul
sti
aam
fdivr
or
cmc
enter
in
lock
adc
roll
jecxz
sbb
add
pop
loopne
pop
and
add
or
sbb
adc
sub
int
mov
test
leave
leave
mov
jecxz
not
add
loopne
xlat
leave
rolb
rcl
lock
cmc
in
xlat
out
adc
fdivr
loop
fmuls
and
add
adc
std
pop
out
sbb
add
add
fcmovbe
loope
mov
cmp
jae
xor
xor
outsb
popa
jo
jae
xor
.byte
add
add
sub
add
add
or
adc
push
xor
xor
xor
xor
pop
xor
imul
lods
xor
xor
xor
xor
sbb
xor
xor
push
xor
outsb
xor
mov
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
push
xor
pop
xor
jno
jne
jge
xorl
mov
xor
xor
xor
xor
xor
xor
xor
and
xor
cmp
xor
dec
xor
pop
xor
outsb
xor
xor
xor
xor
xor
xor
xor
sub
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
inc
xor
push
xor
push
jl
nop
xor
mov
shlb
xor
push
sub
aas
ss
ss
ss
ss
mov
shll
jmp
ss
aaa
xor
dec
aaa
arpl
jge
lea
xchg
aaa
pushf
aaa
mov
aaa
mov
aaa
fdivs
fdivl
call
cmp
cmp
cmp
cmp
jae
ja
xchg
xchg
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
cmp
dec
cmp
push
cmp
push
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
cmp
cmp
dec
cmp
push
cmp
cmpb
cmp
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
jl
cmpb
aas
mov
mov
aas
ret
aas
add
add
add
add
or
sbb
xor
jl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
xor
ja
test
mov
sahf
xor
fidivs
add
add
rdmsr
push
xor
xor
imul
popf
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
mov
mov
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
dec
xor
insl
xor
shll
xor
push
ss
ss
ss
ss
xorb
mov
ss
ss
shll
fdivl
in
ss
ss
or
or
aaa
cmp
pop
aaa
popa
aaa
addr16
jae
jns
test
xchg
aaa
mov
aaa
mov
aaa
aad
fnstenv
jmp
divl
or
or
adc
cmp
cmp
pop
cmp
je
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
je
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
inc
cmp
pusha
cmp
cmp
jns
jge
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
cmc
cmp
cmp
cmp
ds
ds
ds
xchg
mov
mov
ds
ret
sarl
in
jmp
idivl
adc
aas
inc
aas
dec
aas
pop
aas
gs
cmpb
aas
movsb
aas
mov
sarb
aas
in
in
aas
repnz
sti
aas
add
add
add
push
add
add
xor
sub
xor
xor
xor
jl
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
imul
xor
xor
fdivs
in
repnz
xor
xor
xor
xor
xor
pusha
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
je
xchg
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
es
dec
xor
pop
xor
jnp
xorl
xor
enter
xlat
xor
ljmp
or
push
ss
and
sub
ss
ss
ss
ss
ss
jge
lea
xchg
ss
mov
ss
mov
shlb
fnstenv
in
jmp
add
or
pop
aaa
pop
aaa
sub
cs
ss
cmp
inc
aaa
push
aaa
pop
aaa
pusha
aaa
push
jae
xorb
aaa
cwtl
aaa
cmpsl
aaa
mov
mov
cmp
cmp
cmp
cmp
cmp
xor
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
das
cmp
cmp
push
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
fnstcw
add
add
add
add
add
xor
arpl
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
data16
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
dec
xor
xorb
xor
shll
jmp
push
ss
ss
ss
ss
mov
ss
ss
ss
ss
or
adc
sub
xor
dec
aaa
push
aaa
pop
aaa
pusha
aaa
push
jo
jl
xorb
aaa
mov
xchg
aaa
pushf
aaa
mov
aaa
shll
aaa
iret
aaa
aad
in
jmp
cld
aaa
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
arpl
jbe
jp
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jb
js
jl
mov
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
push
ja
jl
xchg
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
inc
cmp
pop
cmp
jno
ja
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
dec
cmp
pop
cmp
jle
cmpb
cmp
aam
fidivrl
in
cmp
pop
cmp
inc
ds
ds
ds
ds
ds
aas
out
aas
repz
stc
aas
add
add
xor
xor
xor
push
xor
pusha
xor
je
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
add
inc
xor
push
xor
fdivl
loopne
in
call
xor
xor
xor
xor
xor
or
or
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
pop
xor
xor
les
xor
add
add
add
enter
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
cmc
pop
loopne
in
push
dec
inc
sbb
notl
mov
xor
add
dec
jns
add
outsl
ljmp
call
fidivrs
fsubp
ret
add
cld
fmuls
loope
adc
into
or
or
or
in
out
add
and
stc
or
icebp
clc
jecxz
add
and
es
sub
mov
ret
loop
idivl
icebp
fiaddl
aad
aam
out
incb
in
icebp
push
or
out
hlt
call
pmullw
adc
repz
sbb
in
add
in
sbb
call
adc
mov
lret
out
shl
mov
mov
mov
mov
hlt
in
fcomip
add
add
or
int
cli
enter
or
pop
in
in
in
sbb
push
adc
sbb
add
stc
in
out
sub
adc
es
jecxz
ret
loope
lret
enter
int3
into
int
mov
add
fsubr
lds
in
adc
fsubrp
fisttps
shl
sar
add
adc
adc
std
sbb
hlt
sbb
sbb
pop
or
sub
out
in
lods
in
ret
loop
ret
leave
jmp
aam
int
jecxz
sar
rcl
jecxz
incl
add
adc
into
jecxz
out
hlt
test
roll
pmaxsw
adc
add
sub
sbb
add
sbb
mov
jecxz
into
test
sti
movb
out
fld
aad
fcomip
cmc
or
fdiv
or
cli
loopne
jecxz
int
repnz
imul
out
hlt
out
psllq
jmp
add
cmc
in
pop
and
es
add
and
icebp
pop
fdivrs
lods
in
out
shl
loop
lret
mov
jecxz
div
sti
jecxz
testb
fcmovu
jmp
lock
sbb
out
xlat
hlt
cli
adc
jmp
icebp
add
push
std
in
hlt
or
sbb
push
sub
add
xor
stos
lret
out
stos
into
scas
out
loopne
lock
mov
hlt
shl
fprem1
fdiv
out
mov
add
in
add
add
xlat
add
lock
xlat
sbb
negl
testl
add
push
sub
add
sub
xor
mov
lret
shrb
out
faddp
fdivrp
int3
mov
loop
xlat
repnz
int3
add
out
fsub
std
or
in
ljmp
sbb
adc
adc
faddl
daa
adc
repz
sub
pop
out
sbb
jmp
bnd
icebp
int3
mov
div
in
jmp
ror
add
sti
lock
shl
add
ret
or
fucomi
out
out
icebp
out
in
pop
jmp
out
pop
repz
push
push
call
loop
loop
and
jmp
daa
xor
xor
and
loope
fucom
fcmovnu
mov
cmc
shl
hlt
cmc
out
call
shll
ffree
or
out
or
jecxz
adc
sbb
hlt
shl
add
out
adc
jmp
pop
sub
or
sub
mov
fsub
repnz
xlat
ljmp
call
int
add
fadds
cli
loopne
faddl
add
out
or
roll
adc
xlat
push
imul
notl
cmc
add
sbb
sub
imull
mov
prefetch
sub
sub
shl
lret
aad
out
mov
lods
ljmp
mov
out
or
fimull
cld
rclb
fists
push
into
sbb
repz
sbb
clc
adc
in
or
and
pop
pop
sub
or
sub
sub
loope
rcr
leave
in
ljmp
fdivp
idiv
add
add
add
ror
adc
rclb
fdivr
add
adc
or
movshdup
sbb
sti
cld
in
adc
out
in
sbb
cmc
xor
adc
hlt
mov
ror
loop
out
in
enter
fcmovbe
jmp
std
add
fimull
cli
add
add
add
fucomp
repnz
adc
push
loop
rcrb
sbb
repnz
sti
std
adc
pop
sti
add
or
incl
sbb
ljmp
mov
iret
mov
jmp
clc
incb
cmc
cmc
bnd
add
push
lret
add
push
add
pop
rcl
int
adc
adc
in
in
hlt
loop
push
fiadds
or
push
pop
pminsw
incb
aaa
sub
shl
in
hlt
lret
fadd
out
stc
icebp
lret
roll
ret
loope
add
add
fdivrp
fsub
out
fldl
add
hlt
sbb
push
jmp
loop
and
adc
sbb
call
xor
std
push
pop
sub
jecxz
rcr
hlt
jecxz
cmc
scas
stc
leave
hlt
call
idivb
fucom
fcmovne
out
cli
dec
clc
fdivrp
add
iret
rorl
icebp
negb
push
or
lock
and
repnz
adc
or
jmp
adc
in
cmpsl
int3
shl
ror
rcr
jecxz
xlat
into
mov
hlt
add
or
testb
fsin
repnz
add
fdivr
aam
sbb
ljmp
pop
and
pop
or
pop
xor
lods
mov
les
divb
cli
stc
mov
repnz
ret
std
jecxz
stc
in
or
loope
aad
aad
or
fdivr
adc
add
adc
sub
push
imul
decb
and
sbb
negb
or
mov
mov
rcr
int
mov
leave
mov
loope
out
in
in
or
push
add
rorb
ljmp
cmc
fdiv
pop
negl
out
and
in
sub
pop
push
add
daa
push
in
in
or
push
stos
loope
loopne
iret
out
mov
out
mov
fucomi
mov
into
testl
in
fmull
jmp
pop
out
or
lock
stc
frstor
repz
adc
push
stc
out
add
add
add
ljmp
ret
mov
repnz
mov
mov
mov
fucomip
lret
lock
rol
mul
add
ljmp
in
or
pop
or
roll
sbb
out
ljmp
add
add
add
sbb
sub
sub
adc
out
lret
int
fmul
stos
mov
in
mov
in
fnsave
mov
ret
cmc
fsub
into
in
fmul
adc
jecxz
fmull
cld
adc
lock
sbb
push
std
and
and
out
xor
xor
adc
les
stos
ret
shll
mov
hlt
stc
sarb
fsubp
jmp
cmc
add
xlat
lret
repz
repz
repnz
or
notb
adc
adc
and
or
in
pop
add
loopne
lods
mov
shlb
repz
clc
sti
cli
add
loopne
out
shl
flds
in
cld
in
fstl
call
stc
sbb
cld
fcompl
fsubp
and
es
pop
imulb
and
and
decl
cmc
push
lret
shl
mov
enter
rcr
les
mov
fcomp
fnstcw
lret
xlat
in
lret
add
push
out
out
rcrb
pop
or
rcll
push
or
and
mul
repz
sti
add
ljmp
daa
movsl
leave
fnstsw
fsubl
fcmove
ljmp
loope
std
hlt
add
fcmovu
out
lret
fcomp
out
adc
jecxz
into
repnz
add
iret
ljmp
and
in
sub
push
or
cld
in
xor
push
sub
aaa
or
cmpsb
jmp
mov
enter
xlat
lret
repnz
into
loopne
xlat
ret
mul
fldl
stc
add
cli
fstp
out
out
aad
in
cmc
rorl
repnz
cli
sti
pop
add
in
loopne
hlt
fisubs
in
sbb
adc
sbb
mov
mov
ret
ror
out
fldlg2
jmp
fscale
iret
sar
mov
add
in
out
fmulp
jmp
or
out
shl
adc
ficoms
lar
add
cli
or
sbb
and
or
incl
in
repnz
in
hlt
in
in
mov
jecxz
ror
call
or
cld
fsubrp
int
hlt
psubusw
or
lock
or
div
in
and
add
xor
adc
adc
test
scas
ffreep
loopne
out
scas
iret
iret
shr
cld
cmc
fcmove
loope
hlt
loop
mov
or
stc
add
loop
add
int
out
clc
lock
por
adc
div
jmp
add
sub
add
and
paddsw
or
and
in
es
iret
out
loop
in
lret
out
in
cld
cmc
jmp
shlb
ret
add
out
call
shl
add
loop
aad
in
pop
fucomp
cld
cli
adc
sbb
cmc
stc
sbb
call
or
push
out
cmp
leave
ret
fbstp
in
shlb
sarb
add
movl
jecxz
int3
adc
or
adc
iret
or
repz
push
cli
and
adc
push
or
es
and
or
out
lret
lret
ret
mov
leave
int
fidivrs
rcl
fcmovnu
add
aad
aad
call
in
push
out
add
sbb
add
out
in
pop
and
or
add
cli
add
or
add
and
movsl
cmpsl
leave
mov
shll
cli
mov
stc
ljmp
rcl
cmc
std
cli
add
in
ror
lret
mul
loopne
sbb
sbb
neg
in
sbb
sbb
out
add
jmp
sbb
add
in
mov
int
xlat
mov
leave
icebp
in
cld
into
lret
add
loope
add
mov
push
add
out
lret
push
in
adc
add
sbb
adc
adc
add
cld
and
cld
or
sbb
or
or
add
into
out
shrb
fdivs
mov
xlat
add
out
lock
loop
clc
sti
filds
icebp
in
out
cmc
iret
pop
roll
pop
icebp
in
out
jmp
sbb
call
and
add
sbb
out
or
sub
pop
mov
shrl
iret
in
jmp
mov
rcl
or
ret
rorb
lret
push
or
aad
sti
or
out
out
and
add
sbb
repz
fsub
sti
and
in
and
sub
or
fucomip
mov
shr
icebp
aam
enter
mul
int
hlt
fdiv
cmc
add
roll
or
loop
in
add
pop
sbb
push
adc
cmc
sbb
push
out
lock
adc
and
or
stc
es
or
add
loopne
into
ffree
jecxz
icebp
out
ljmp
sti
roll
fldl
push
add
fisttpll
enter
or
adc
not
rcr
or
adc
cli
out
idiv
loope
sti
daa
sbb
or
cld
add
and
and
xor
leave
mov
lret
enter
repz
out
shr
add
jecxz
mov
fcmovnb
fdivp
fdivr
into
sti
icebp
or
out
repz
ljmp
fcmovu
cli
in
add
loope
and
push
ljmp
push
adc
cmp
int
mov
in
ljmp
faddp
add
add
in
fsubrp
fadd
loopne
rcl
or
push
into
call
std
repnz
repz
lock
sbb
sbb
and
or
std
out
push
or
lock
test
out
int
shr
shrl
mov
mov
fld
leave
std
add
into
add
rcl
jecxz
jecxz
adc
sbb
push
jmp
fucomp
stc
sbb
repz
cmc
sti
lcall
push
cs
sbb
jmp
jmp
lock
enter
mov
mul
out
rol
out
std
in
in
cld
jecxz
or
int3
lock
out
repnz
hlt
in
cmc
jecxz
and
stc
sbb
sub
sub
push
lock
bnd
ret
les
fcmovne
les
add
ret
rolb
fucomi
out
in
or
in
icebp
sbb
or
aad
ljmp
cld
loop
or
sub
imull
sub
push
or
repnz
fsubrp
cmpsb
call
clc
mov
mov
clc
shr
cli
xlat
loop
aad
repnz
std
jecxz
fdiv
add
std
adc
ljmp
cld
sbb
cli
repz
adc
daa
repz
sbb
cld
xor
and
shl
jecxz
fdiv
shlb
aam
fcmovnu
ret
idiv
out
cli
ret
les
add
call
call
or
cld
sbb
adc
frstor
fdivr
push
out
jecxz
and
testb
sbb
adc
pop
cvtpi2ps
mulb
stos
shr
mov
shll
clc
aad
mov
xlat
out
aam
loop
in
lret
shr
adc
stc
sbb
or
ljmp
loope
cld
and
clc
add
sub
or
repnz
cmp
ljmp
stos
out
imulb
iret
fidivs
hlt
stc
jecxz
idiv
cli
pop
or
icebp
or
adc
shl
or
push
roll
lock
and
fisttpl
push
adc
add
xor
sbb
add
or
add
sarb
ret
mov
shlb
mov
in
clc
div
mul
add
fcmovne
fldl
add
xlat
loope
or
fistl
adc
lar
sti
icebp
jecxz
push
sub
stc
das
adc
xor
xor
das
scas
mov
repnz
in
leave
mov
lock
cmc
not
mov
mov
in
testb
out
cli
decl
ljmp
adc
fcmovnu
in
sbb
pop
and
loop
sub
daa
es
hlt
jmp
mov
repz
in
fstp
sar
mov
add
repz
fadd
jmp
or
push
push
add
in
fsub
add
push
sbb
jecxz
lock
and
or
loop
out
add
or
add
adc
jmp
mov
shll
out
call
rol
sti
lock
call
psubusb
loop
jecxz
in
adc
add
lock
filds
hlt
adc
sub
es
ljmp
pop
sub
lds
test
rcl
hlt
jmp
enter
add
out
loope
lret
in
iret
jmp
clc
or
pop
push
or
or
sbb
pop
pop
or
adc
sbb
jmp
and
mov
loope
ljmp
enter
ljmp
mov
mov
mov
in
fdivp
add
into
shl
in
add
add
repnz
jmp
and
push
pop
loope
testl
cld
xor
push
sub
ffreep
test
mov
shrl
lret
idivb
in
in
add
or
repz
cmc
imul
add
fmull
out
jmp
add
out
ficomps
clc
sbb
das
stc
or
cld
xor
pop
cs
repz
loopne
shrb
repz
out
mov
test
rcr
add
out
or
add
jmp
repnz
out
out
sbb
stc
loop
add
fsubr
sbb
or
sub
lock
or
mov
vpavgb
stos
int
mov
mov
or
cld
fldl
imul
ljmp
shl
fcmovu
fmull
or
fucomi
cmc
in
clc
sbb
loopne
or
sub
das
sbb
adc
add
and
loope
icebp
mov
mov
ljmp
cmc
mov
aam
sarl
in
in
stc
leave
out
adc
clc
adc
or
repnz
sbb
add
add
add
and
push
push
or
in
std
icebp
daa
xor
mov
leave
mov
fidivl
mov
repnz
mov
aam
out
jecxz
into
or
loopne
or
ljmp
jmp
jmp
push
out
adc
fndisi(8087
push
and
push
sbb
ljmp
sbb
shl
lret
int
aam
mov
iret
call
add
repz
jmp
jmp
call
lret
hlt
or
negb
hlt
cld
push
push
cmc
in
cli
add
out
jmp
out
or
xor
icebp
enter
sarl
clc
mov
fbstp
shl
mov
out
or
lret
or
loopne
or
add
movups
adc
fstl
sub
repz
sub
and
sub
out
in
ret
fsubrp
aad
scas
int
xlat
lret
mov
std
repnz
fidivrs
fcomp
fldl
ljmp
adc
in
or
icebp
pop
xlat
sbb
push
sbb
hlt
adc
add
sbb
ljmp
cs
sub
repnz
or
sub
mov
shl
lret
jmp
cld
jmp
mov
into
cmc
in
fildl
enter
incl
lock
out
fdivp
adc
aad
or
testl
sbb
adc
loopne
std
or
decb
xor
add
das
adc
adc
repz
enter
repz
mov
sarl
stc
out
fimuls
or
leave
or
out
or
not
jmp
push
adc
repz
pop
fdivrp
sbb
and
sti
sub
or
and
add
out
cmpsl
mov
int
imul
hlt
into
enter
sar
add
bnd
out
loope
or
in
out
shl
fsubr
hlt
adc
fcomps
sti
out
and
and
adc
sbb
ljmp
xor
jecxz
sarl
scas
mov
icebp
jmp
mov
rol
fadd
shr
jecxz
sar
loope
out
in
bswap
add
aam
fistpl
in
es
in
in
cld
in
and
in
push
sbb
sub
icebp
das
scas
int
out
fldt
lret
fldz
shl
sti
mov
add
cmc
mov
sti
or
or
incb
or
lock
clc
xlat
out
sbb
pop
lock
or
add
add
adc
clc
pop
clc
add
in
and
push
and
add
sbb
fisubrl
ret
shlb
int3
lret
mov
rcl
add
push
out
adc
or
repz
aam
repz
out
adc
sti
adc
push
hlt
sbb
out
add
push
push
xor
mov
test
mov
int
into
lret
loop
incb
rolb
stc
decb
fsubp
push
fcmovbe
lret
adc
rcl
call
fsubrp
loopne
incb
add
sbb
sbb
lock
sub
das
icebp
sub
enter
imull
in
imul
int
in
fdiv
test
push
jecxz
in
loopne
imul
push
into
fneni(8087
push
or
jmp
ficoms
push
lock
pop
sbb
push
or
and
push
std
pop
cld
es
add
sysret
loop
stos
int
stos
int3
in
mov
in
out
mov
xlat
sar
filds
ret
out
shl
lret
loope
std
or
jecxz
push
ljmp
or
or
add
adc
add
cli
or
in
stc
and
cmc
jmp
lock
mov
out
lock
shr
fidivrs
add
inc
call
add
sti
adc
push
out
out
call
stc
out
sbb
add
push
and
pop
in
daa
ljmp
sub
daa
rol
ret
mov
out
ljmp
jmp
fstpt
add
mov
mul
leave
ljmp
into
loop
cld
push
or
loop
cmc
cli
add
adc
sub
stc
and
es
out
push
add
mov
icebp
call
jmp
repz
rcr
push
enter
in
in
cld
loope
add
or
in
ljmp
sbb
and
pop
adc
loope
std
cmc
es
jmp
xor
push
out
test
ret
loopne
in
hlt
jmp
aam
into
fdivp
shl
lock
stc
testb
add
ret
push
jmp
xlat
sbb
sbb
adc
pop
jmp
and
out
sbb
sub
or
or
pop
adc
daa
out
ret
test
out
fld
sti
std
clc
into
cld
inc
add
aad
call
loope
push
int3
stc
loope
fsts
fiadds
add
or
add
sbb
sbb
and
sbb
pop
sub
sub
cs
add
pop
movaps
or
int
rep
test
in
ljmp
fdivrp
mov
mov
testb
fucompp
add
hlt
lsl
adc
or
or
and
in
notb
and
jmp
cmp
in
out
int3
in
lret
mov
in
clc
repz
fcom
mov
fdivrp
stc
add
ljmp
adc
in
in
or
aad
pop
fcoml
push
and
out
cld
or
or
sbb
and
out
cs
stos
iret
lret
les
mov
aam
ret
out
cmc
call
add
add
push
out
in
icebp
call
repz
sbb
pop
sub
repz
sub
add
lsl
or
stos
lret
out
in
jmp
fnstcw
ret
int
add
fcom
enter
leave
add
pop
out
jmp
sar
adc
adc
in
out
lock
sub
and
call
out
and
ret
fmulp
ljmp
into
clc
int
leave
xlat
aam
repz
push
not
in
loopne
out
ljmp
imul
repnz
add
pop
add
out
loop
das
add
and
sub
out
int
movsl
int
jmp
fnstcw
fxtract
incb
add
out
add
loope
out
in
rcr
wbinvd
rcl
cmc
leave
in
rorb
add
sti
sbb
add
push
jmp
push
fdivrp
repz
in
jecxz
or
and
push
divb
mov
out
ret
ljmp
stc
mov
int
fdivrl
jmp
leave
leave
in
push
out
loope
hlt
out
or
rcrb
idiv
cli
lock
adc
sbb
jecxz
or
hlt
add
add
sti
jmp
add
push
or
mov
mov
mov
ffreep
repnz
xlat
mov
stc
add
loopne
idiv
loop
xlat
dec
lret
std
add
out
loope
icebp
int3
pop
fldpi
call
and
sbb
adc
sbb
adc
sbb
sub
and
adc
int3
in
movsl
ffree
icebp
shl
out
fsub
lret
in
iret
mov
in
std
fucom
or
out
fsubr
add
fsubrp
out
repz
or
sbb
push
fdiv
icebp
push
xlat
pop
stc
loop
sub
sbb
negl
adc
or
out
int3
ret
icebp
hlt
enter
aam
mov
in
add
or
std
int3
adc
int
aad
in
int3
adc
out
push
and
sti
or
adc
sub
sub
push
sbb
cs
or
add
test
mov
into
jmp
ret
scas
jmp
fstp
roll
ret
clc
shl
fiadds
aam
call
adc
pop
adc
or
ljmp
sti
adc
fsubp
and
hlt
and
jmp
sbb
repnz
lret
mov
out
loopne
idiv
neg
out
fcmovnu
fcomip
iret
add
cli
mov
cli
enter
filds
add
fcoms
icebp
std
push
adc
hlt
add
or
ljmp
pop
cmc
loopne
sub
add
add
push
jmp
out
out
out
shl
in
out
hlt
leave
out
cmc
fcmovb
aad
iret
mov
jmp
add
std
rolb
int3
out
push
or
in
add
idiv
pop
sbb
push
adc
or
and
push
ljmp
rol
mov
ffreep
out
hlt
in
in
out
cli
sar
mov
push
aad
leave
std
add
cld
out
fsubr
out
or
adc
push
or
out
out
ficoml
hlt
adc
icebp
cld
push
sub
out
sbb
push
ret
lock
mov
ret
jecxz
fdiv
leave
fcmovnbe
mov
rol
shr
ljmp
in
fdivr
icebp
or
add
fdiv
xlat
hlt
lock
mulb
sbb
cmc
cld
or
and
or
xor
pop
jmp
lods
enter
loopne
out
into
mov
loope
in
mov
out
repz
add
or
fstps
add
or
add
and
jmp
add
pop
sub
sbb
add
cmpsl
fcmovnu
iret
stos
shlb
mov
cld
icebp
mov
mov
std
or
fucomip
jmp
add
jmp
or
repnz
fdiv
out
icebp
out
fldenv
call
or
jmp
mov
in
aad
ror
out
mov
out
add
sti
iret
ret
shl
in
movb
enter
lret
notb
adc
repnz
repz
aad
out
in
stc
out
adc
fdivrp
daa
imulb
in
out
stc
movups
cmc
int
lock
hlt
jmp
fcmovbe
out
jmp
fidivrs
in
enter
fiaddl
rorb
cmc
notl
sar
repnz
push
add
idiv
add
adc
and
stc
cs
add
xor
stos
mov
leave
out
stos
mov
mov
xlat
repz
div
repz
add
fchs
fdivr
fadd
cli
push
out
dec
iret
adc
adc
fdiv
in
out
pop
out
clc
add
sbb
cmc
add
and
sbb
lock
sbb
xor
xor
loop
shl
mov
mov
imul
out
sti
stc
sti
flds
jecxz
loope
neg
or
add
shl
sar
call
in
cmc
iret
call
cli
add
mul
jmp
sbb
out
and
das
sbb
movhlps
adc
sarb
rcl
mov
xlat
stc
enter
in
in
add
aam
or
jmp
adc
out
clc
loop
adc
adc
fcompl
fcmovnu
clc
cld
adc
add
sti
and
out
loope
icebp
in
or
and
or
mov
mov
int
lret
ljmp
shl
stc
rcl
std
leave
or
lret
out
rcr
lret
loope
in
aad
div
psubusb
adc
adc
repz
or
and
or
scas
sarb
loope
rcl
sti
mov
sar
in
loop
ret
lret
jmp
pop
add
add
out
add
shl
aad
or
ljmp
sbb
or
jmp
jmp
xor
add
and
shrb
lock
out
out
mov
cmc
mov
lock
cmc
in
loope
paddd
adc
add
adc
hlt
sbb
movups
adc
loop
adc
push
in
or
xor
ss
call
vpavgw
shlb
sarb
repnz
fcmovb
jmp
add
add
or
iret
icebp
add
repz
stc
add
adc
lock
and
sbb
out
sub
sub
adc
xor
bswap
test
loope
test
stos
mov
fadd
scas
repz
cld
repnz
mov
lret
jecxz
add
push
aad
stc
push
aad
ficoms
repnz
or
out
push
repnz
clc
and
sub
and
repnz
mull
stos
in
jecxz
aam
ror
out
call
loopne
lret
mov
add
mov
or
decb
int3
or
adc
sbb
in
icebp
repz
and
lcall
or
loopne
sbb
sbb
ljmp
hlt
test
loopne
test
into
mov
rol
test
clc
in
mov
iret
add
hlt
in
xlat
fmull
add
or
aam
aam
rcl
in
cli
fst
adc
repz
adc
adc
and
sbb
cs
add
add
out
mov
icebp
shr
hlt
in
into
int
leave
fcmovbe
mov
add
out
loop
fsub
clc
aam
cld
loope
jmp
jmp
rclb
add
out
aad
pop
fcmovnu
fcomi
movaps
cld
push
add
sub
out
pmaxsw
enter
rcr
lds
mov
jmp
lret
fucom
xlat
fstp
pop
idiv
leave
call
fisttps
pop
repz
aam
sbb
sbb
in
in
and
lcall
adc
add
stc
xor
or
pop
ss
sub
out
test
mov
mov
lods
in
hlt
mov
out
mov
push
rorb
in
or
lret
or
icebp
into
or
fprem
fpatan
frndint
sbb
fistps
adc
sbb
and
sub
cvtpi2ps
and
out
call
mov
icebp
test
xlat
mov
stc
std
fcmovu
call
or
or
add
in
rcl
call
ljmp
pop
sbb
hlt
push
or
add
sub
out
out
jmp
out
in
xor
lods
fcomi
int
aam
lret
mov
mov
out
shl
iret
mov
out
rcl
out
add
jmp
or
jmp
or
jmp
into
out
repz
lock
in
or
jecxz
add
call
jmp
sbb
test
out
mov
repz
jecxz
fcmovnu
aam
jmp
mov
sti
in
mul
lret
fucomip
shl
out
icebp
call
add
sti
xlat
fisttps
add
adc
jecxz
call
in
sub
and
xor
sub
sbb
out
mov
scas
into
fcmovnb
in
mov
shrb
stc
hlt
mov
repnz
enter
or
rorb
out
lock
in
lock
hlt
cld
adc
cld
add
adc
loop
or
add
sbb
in
xor
std
movntps
mul
stos
enter
mov
repz
ret
hlt
aad
out
lock
in
mov
mov
enter
ret
int
fisttpll
aad
sbb
fisttpll
stc
fcomip
loop
add
add
in
in
add
add
and
or
push
or
ror
cmpsl
in
ljmp
fdiv
lret
repz
cmc
fisttpll
leave
enter
fucomip
lock
repz
pop
decl
ficoms
fldl
in
add
or
std
sbb
std
stc
and
add
lock
shlb
hlt
out
xlat
iret
int
test
in
lret
int3
fmul
sti
in
out
in
loop
aam
fcoms
or
pop
cmc
in
adc
adc
adc
daa
in
sub
jmp
or
int
in
out
fucomip
jmp
jmp
in
out
mov
iret
add
icebp
out
add
jmp
out
add
in
jmp
negb
cmc
or
push
jmp
loopne
and
sbb
sbb
incl
push
sbb
and
add
sub
add
ret
shl
lods
loope
ljmp
neg
loopne
mov
out
repz
dec
or
in
loop
adc
shl
adc
or
icebp
call
adc
loope
and
pop
out
and
std
and
in
cld
add
jmp
push
test
jmp
lret
leave
fsubr
mov
in
rcl
jmp
mov
mov
in
mul
hlt
aad
ljmp
ror
or
rcll
or
fdecstp
or
repz
and
fimuls
adc
push
adc
div
in
push
sbb
push
daa
and
adc
hlt
aad
enter
mov
cli
clc
aad
clc
lock
sti
in
sti
cld
or
push
in
add
in
push
call
cli
testb
push
sbb
out
adc
fists
loope
push
push
push
lar
out
lock
and
cmp
int3
mov
loopne
mov
call
mov
out
std
int3
int
add
fninit
pop
loope
hlt
adc
sbb
out
clc
adc
sbb
in
adc
icebp
adc
clc
jmp
loope
or
es
and
mov
repnz
repnz
enter
idiv
add
fcom
sti
ffree
mul
loope
jmp
lock
adc
adc
out
adc
push
fdiv
repnz
fildl
jmp
in
sub
push
pop
and
sub
ret
jmp
in
shl
stc
mov
mov
loopne
incb
add
jmp
in
loopne
in
adc
fucomp
push
sbb
adc
or
std
sbb
out
cld
add
out
sbb
fistpl
pop
and
and
sub
int
ret
mov
int3
lds
cli
add
icebp
mov
in
out
fldl2e
out
lock
in
pop
add
adc
out
rorb
ljmp
clc
and
or
and
add
add
add
jmp
lock
mov
into
mov
mov
ljmp
pop
sar
pop
idiv
push
loopne
rcr
sti
adc
adc
rcl
add
push
push
fists
sbb
pop
pop
cmc
and
sub
add
xor
repnz
daa
or
xor
ror
fidivl
cmc
enter
mov
mov
out
stc
sti
fcomi
aad
pop
rcl
mov
rcr
or
pop
add
pop
out
shl
or
pop
adc
frstor
push
pop
testb
and
sub
xor
shr
sarl
lret
enter
shl
add
stc
sar
ret
aad
or
les
pop
adc
shr
jmp
adc
and
cli
sbb
neg
pop
sub
adc
unpcklps
add
add
stos
out
fcmovb
leave
leave
out
shl
sar
mov
shl
in
add
rolb
add
std
add
not
aad
icebp
add
add
sbb
faddl
out
or
sub
cli
or
add
or
daa
stos
jmp
lret
loopne
mov
loopne
clc
iret
enter
frndint
cmc
iret
roll
add
in
in
faddl
add
sti
adc
out
lock
aad
bnd
cld
ficoms
std
repnz
sbb
out
and
fsubp
push
add
and
push
in
jmp
and
lret
mov
lret
int3
mov
int3
int
sarl
loop
sti
movl
pop
shr
or
in
repnz
fists
adc
sbb
sbb
jmp
push
adc
and
sub
xor
mov
in
mov
rol
lock
hlt
loop
icebp
ret
out
add
sar
push
or
jmp
adc
or
out
jmp
int3
or
ljmp
adc
in
sub
add
sub
push
and
out
jmp
icebp
aad
leave
out
lds
int3
in
into
jecxz
sar
cmc
enter
adc
or
testb
stc
sbb
add
fdivr
nop
push
repz
add
sbb
stc
pop
sti
ljmp
sub
fucomi
mov
mov
enter
rcl
repnz
ret
ljmp
call
add
repnz
adc
adc
sbb
loope
pop
cli
out
add
or
xor
or
lret
scas
movsl
call
hlt
mov
fprem1
int3
sti
mov
loopne
jecxz
jmp
int
in
add
fstl
loopne
loop
testl
adc
and
daa
adc
adc
jmp
clc
sbb
out
sub
add
pop
jmp
mov
jecxz
mov
leave
lock
std
into
mov
cld
aad
aad
lret
call
fcmovbe
shl
in
shl
add
out
in
sti
in
cld
fcmovnu
fcomip
hlt
add
testl
or
ljmp
repnz
stos
loope
ljmp
lret
xlat
aam
mov
fdiv
fsub
fadd
xlat
stc
fsub
add
dec
ljmp
or
in
lock
adc
or
adc
out
out
add
push
adc
or
and
pop
adc
mov
out
repnz
mov
ror
mov
push
stc
add
in
into
add
cmc
out
div
out
or
repnz
stc
fistl
repnz
sbb
and
sbb
and
sbb
sbb
sti
adc
adc
stos
lods
leave
ret
in
in
shr
ror
in
lock
xlat
ret
aam
shl
or
aam
enter
out
rorb
testl
cld
or
and
and
and
loopne
jecxz
add
lock
adc
push
psadbw
call
mov
stos
enter
hlt
hlt
int3
mov
mov
shl
or
fstp
add
jmp
or
cmc
sbb
push
pminsw
sbb
push
sbb
loopne
hlt
ljmp
and
sub
add
into
out
ljmp
ret
cld
icebp
xlat
fcomip
xlat
mov
mov
mov
jecxz
rcl
call
out
rcr
fimull
fsts
fcomi
cmc
sbb
cli
add
testl
jmp
add
cmc
cmc
movsl
loopne
loop
ret
fucomip
hlt
in
hlt
out
int
hlt
sti
sti
lock
repz
incl
out
int3
in
loop
jecxz
in
out
fstps
fdivr
clc
stc
fistl
repz
in
push
repz
and
add
sbb
daa
in
sti
add
sti
lock
fsub
in
stos
in
iret
out
aam
cli
lret
mov
clc
shl
cli
rcr
loope
mov
wbinvd
out
jmp
add
out
adc
hlt
and
or
idiv
in
sbb
ljmp
ret
rcl
mov
lods
vmaskmovdqu
cli
iret
out
aad
stc
ljmp
enter
add
enter
ljmp
cli
pop
lock
sbb
sti
add
daa
clc
add
fisttpll
sbb
xor
iret
mov
mov
scas
loopne
xlat
into
icebp
into
cmc
xlat
fdiv
sti
clc
icebp
out
rol
aam
ret
add
int
rcr
hlt
in
shl
hlt
in
iret
cmc
or
sbb
rorl
imull
and
sub
in
sub
lock
adc
sub
sub
push
lods
ret
stos
out
enter
enter
cmc
out
fsubrp
shr
add
cld
out
into
add
stc
add
or
leave
add
int3
jecxz
xlat
ljmp
mull
push
and
adc
pop
in
or
in
sub
or
repnz
adc
ljmp
ret
mov
int
out
in
loope
mov
rcr
out
or
add
out
out
out
or
sbb
adc
and
mul
fadds
and
jecxz
sub
sub
xor
ss
loope
mov
mov
out
cli
ret
jmp
repz
iret
cld
ror
rcl
in
pop
add
adc
lock
in
out
out
or
adc
ljmp
repnz
testl
or
in
or
lock
fsub
ljmp
out
mov
hlt
out
int
out
clc
sti
or
into
icebp
loope
or
pop
xlat
shl
icebp
shl
sbb
in
ficoms
pop
sub
pop
clc
add
or
call
sub
sub
cmpsb
out
iret
out
into
mov
out
mov
jmp
rorb
out
xlat
fsubp
out
loop
or
call
or
add
cli
in
sbb
fldpi
in
adc
adc
and
and
or
sub
in
sub
fsubr
ljmp
shr
fcomp
clc
fdiv
std
hlt
add
icebp
ret
add
add
int3
imul
jmp
loopne
aad
aam
wbinvd
rcrl
fcomip
repnz
out
sbb
sbb
or
and
adc
adc
and
lock
int
xlat
lret
mov
ljmp
add
add
out
div
rol
inc
fmul
jmp
in
out
adc
adc
or
repz
push
adc
not
jmp
add
adc
jmp
in
add
and
add
repz
in
out
repnz
mov
aad
in
repnz
cld
rol
out
stc
faddl
add
fdivrp
in
fmull
adc
rcr
sbb
in
negl
sbb
sub
sbb
in
out
out
or
or
adc
xor
scas
lret
iret
loopne
ror
ret
ror
enter
mov
sar
fnstcw
cli
loopne
hlt
stc
loopne
leave
push
fstp
fucomip
loopne
out
notb
out
add
out
cld
loope
adc
push
sbb
add
xor
std
and
adc
test
loop
mov
lret
enter
test
in
repnz
aam
shl
cli
jmp
or
jmp
out
adc
out
out
cli
or
adc
repz
or
sub
and
sub
in
enter
int
rol
hlt
out
lds
aam
iret
sti
loop
stc
mov
or
stc
int3
adc
lret
out
add
repz
sbb
cmc
out
fdivp
sbb
loope
fildll
decb
and
adc
xor
fsubrs
out
mov
loop
shr
cli
rcl
into
lret
not
clc
repnz
out
ljmp
jecxz
or
rclb
cld
sbb
cmc
fstps
sti
fsub
call
std
sub
hlt
and
and
mov
lret
out
mov
mov
sti
fucomi
fcmovne
lock
cmc
sar
in
pop
or
ret
adc
in
push
repz
fistl
adc
loopne
std
loop
daa
daa
add
mul
sbb
or
ss
out
fucom
mov
shl
mov
mov
loopne
ret
add
ret
or
in
std
add
out
shl
ljmp
adc
cld
cli
or
adc
add
loop
or
add
adc
pop
hlt
adc
stos
call
lods
lods
int3
ror
xlat
shl
repnz
clc
mov
add
add
jmp
enter
iret
lock
adc
in
iret
cmc
repz
fincstp
loopne
add
stc
and
std
sbb
adc
sub
add
out
adc
and
jecxz
mov
out
rol
lock
fmulp
out
int
stc
imul
loope
pop
leave
pop
or
stc
fcmovne
icebp
lock
push
or
adc
add
or
pop
cld
pop
add
hlt
jmp
xor
adc
std
lock
in
aam
scas
rol
mov
fptan
leave
repnz
add
jecxz
imul
jmp
add
or
repnz
femms
fdiv
and
sbb
loope
sbb
and
ljmp
ljmp
adc
shl
repnz
test
fdivrs
aam
add
stc
std
dec
adc
or
jecxz
pop
out
fcoms
push
sbb
sbb
xlat
sbb
adc
add
in
add
cli
sub
jmp
sub
stos
leave
mov
mov
aad
jmp
lret
repnz
loop
xlat
into
repnz
std
out
jmp
out
or
imul
push
rcrl
sbb
adc
out
repnz
clc
sti
frstor
add
and
sbb
aaa
and
loope
shl
ret
ljmp
cmc
loopne
lret
mov
or
out
loop
add
movntq
rcr
add
or
cli
or
or
add
cld
out
sub
push
or
or
daa
and
out
xor
jecxz
scas
jmp
jmp
xlat
lret
in
aam
repz
int3
incl
repz
roll
out
ror
lret
jmp
or
out
loopne
add
pop
negl
fsubp
push
out
and
push
pop
sub
adc
push
sub
sbb
jmp
fucomp
hlt
mul
xlat
ror
sar
idiv
fldl2e
jecxz
in
rol
fcmovnb
or
into
or
loop
push
fcomps
in
fdivr
adc
cld
sbb
sbb
push
jecxz
push
hlt
adc
clc
and
xor
or
ljmp
scas
lock
in
loopne
lret
loope
out
mov
jmp
faddl
add
enter
push
fxch
adc
add
repnz
enter
fiaddl
in
hlt
cli
sbb
add
cld
add
sbb
es
add
and
and
hlt
xor
mov
mov
jecxz
mov
aad
call
jecxz
idivb
int
or
add
or
or
add
adc
push
adc
loope
sti
adc
sub
in
add
es
jmp
out
in
ljmp
shlb
xlat
not
call
out
fcmovne
iret
fucomip
push
aam
add
cmc
lock
lock
fcoms
add
fscale
es
sti
icebp
loope
and
sbb
decb
xor
xor
or
fucom
mov
shl
clc
clc
out
iret
xlat
jmp
mov
rcl
jecxz
dec
in
shl
jmp
push
out
or
adc
hlt
sbb
or
adc
push
sub
call
sub
sbb
xor
lock
or
adc
sub
out
cmpsl
int3
mov
shr
out
enter
fstp
shl
add
rcr
repz
lds
lret
lock
lret
shl
repnz
push
out
adc
or
fstp
adc
in
pop
loope
fiadds
adc
incb
in
and
or
in
adc
xor
into
fmul
rcr
lret
shl
hlt
mov
mov
int
iret
cmc
icebp
rcr
call
in
iret
icebp
pop
out
or
lcall
stc
bnd
hlt
in
adc
notb
es
incl
in
pop
sub
add
add
add
mov
lret
mov
int3
sar
fcmovbe
out
iret
jmp
stc
mov
stc
xlat
enter
loope
mov
fucomi
adc
adc
pop
rorl
lock
call
push
icebp
incb
add
sbb
daa
add
cli
or
pop
add
adc
or
shl
div
aam
fucomp
rcr
aad
sti
hlt
shl
sar
loope
in
jmp
lret
out
idiv
in
sbb
cmc
ljmp
in
add
sub
testb
pop
cld
and
nopl
fmul
call
aam
lock
in
aad
xlat
mov
loop
std
out
mov
add
jmp
in
add
ljmp
or
lock
add
out
fbld
sub
mull
and
jmp
or
and
test
fsubp
iret
int3
in
mov
div
les
repnz
add
repnz
call
add
enter
or
repnz
jecxz
repnz
fimuls
and
fisttps
std
and
push
or
lock
sub
fsubp
mov
out
jmp
into
cmc
lret
mov
int3
mov
push
push
clc
neg
jmp
cld
out
aam
loopne
in
jmp
sbb
call
paddsw
push
repnz
call
out
or
xor
xor
out
mov
lret
mov
aad
hlt
out
lock
out
roll
mov
lret
leave
fadd
lret
out
in
adc
ljmp
in
sbb
adc
hlt
decb
add
call
or
and
adc
fcmovnu
enter
in
rcl
fnstsw
stc
loope
idivb
call
shl
add
or
rcrb
add
sbb
adc
add
push
fcoml
fdivrp
push
and
std
jmp
ljmp
fsubrl
int3
shlb
icebp
int
iret
repnz
int
mov
hlt
add
int
repz
icebp
rcr
xlat
cmc
or
push
push
adc
and
ficoml
pop
add
lcall
push
out
sub
or
loope
in
jmp
lods
shrl
out
mov
cli
stc
add
loop
std
fildl
out
pop
ljmp
movups
cmc
xlat
ljmp
sbb
fstp
xlat
in
lock
sub
sub
push
sbb
sub
add
out
stos
rol
leave
mov
aam
aad
cmc
enter
lret
out
add
out
jmp
int3
decb
pop
call
cmc
notl
in
clc
cli
rclb
jmp
aam
sbb
adc
and
in
xor
pop
add
adc
hlt
and
fdivrs
in
hlt
loope
stos
ret
divb
idivl
shl
out
add
fistl
or
rclb
shr
add
call
adc
in
negl
lock
and
in
out
add
add
add
out
adc
scas
lret
stos
icebp
in
jmp
mov
scas
jmp
div
cmc
cli
repnz
or
iret
fdiv
loop
shl
out
adc
into
out
in
or
xlat
loopne
std
or
mull
push
cld
sub
or
repnz
movsl
ret
in
mov
call
in
sti
repz
shr
jecxz
loope
call
not
push
fsub
ret
loop
or
adc
in
std
add
adc
fsubp
add
stc
in
or
sub
call
in
mov
hlt
jecxz
out
hlt
out
jmp
stc
aad
mov
jmp
in
jmp
in
adc
add
hlt
or
sbb
and
jecxz
sbb
stc
or
xor
or
hlt
add
lret
ret
jmp
out
out
ret
cld
mov
loop
ret
mov
filds
inc
in
repnz
shl
push
rorb
xlat
aam
push
out
idiv
jmp
and
fsubrp
and
sub
adc
and
in
daa
sub
and
ljmp
sub
shlb
jecxz
loop
mov
lret
cmc
int3
mov
ret
ret
decb
rorx
hlt
out
shl
hlt
or
adc
sbb
sbb
push
pop
loop
daa
loope
daa
in
and
add
push
push
or
push
lret
scas
fld
mov
iret
hlt
mov
enter
cli
std
mov
ret
xlat
add
or
or
rcll
in
ficompl
shl
fprem
push
fisubl
pop
sbb
sbb
cmc
cli
and
add
in
xor
mov
lods
stos
mov
mov
enter
not
aad
mov
stc
rol
out
dec
in
or
int
add
add
in
hlt
ficoml
and
adc
and
clc
sbb
out
in
pop
and
das
sub
and
or
lock
in
test
int3
stos
mov
out
lods
mov
call
into
loopne
mov
clc
rcr
out
leave
out
lret
psllq
sar
sbb
sbb
sti
div
stc
testl
decl
and
add
xor
sub
adc
in
rol
shl
xlat
in
std
add
sar
decl
fcmovne
out
lret
add
repz
aam
out
fcmovbe
add
sbb
sbb
es
sbb
push
icebp
jmp
int3
lods
mov
mov
int
into
neg
aad
lret
xlat
stc
fld1
out
in
cld
or
icebp
out
fsubp
add
loop
adc
in
cmc
std
push
in
and
sbb
and
sub
add
daa
adc
out
out
comiss
mov
mov
lret
out
aad
mov
sarl
in
clc
loop
or
add
adc
add
jmp
fcmovbe
pop
call
push
push
pop
cld
loope
sbb
add
and
and
cmc
repz
mov
fucom
mov
loope
lret
stc
mov
cld
mov
repnz
stc
lret
or
jecxz
adc
push
lar
hlt
fsubr
call
pop
sbb
sbb
push
std
sbb
pop
out
nop
imull
leave
xlat
jmp
fidivs
mov
int
mov
std
hlt
hlt
lds
xlat
enter
out
in
adc
adc
add
and
and
add
add
add
loop
or
out
repnz
ljmp
ret
cmc
xlat
mov
hlt
jmp
in
push
add
adc
call
or
out
in
sbb
nop
or
push
sti
fadds
push
in
sub
in
push
or
lock
hlt
or
enter
shl
mov
ret
into
sti
lret
repz
mov
mov
out
or
push
in
in
shl
lock
div
out
or
jmp
sti
adc
stc
fisubrl
hlt
imul
or
and
daa
or
int
in
out
icebp
mov
into
out
in
add
into
mov
sti
push
or
pop
in
push
in
lret
out
push
sbb
adc
jmp
div
sbb
push
adc
cld
ljmp
idiv
in
adc
adc
lret
scas
loope
ffreep
mov
call
icebp
mov
iret
iret
neg
rcr
fcomip
or
add
lock
adc
or
fcmovbe
jmp
idiv
adc
repz
in
pop
and
and
add
out
push
add
xor
out
in
lods
cmc
out
vpsubw
mov
xlat
mov
aam
push
ret
mov
leave
cld
or
lret
lret
or
aad
pop
fldln2
pop
or
add
loope
cli
sbb
call
in
adc
adc
cs
leave
out
out
scas
lret
mov
iret
mov
fldl2e
lret
add
push
test
add
incb
int3
enter
sbb
fcomps
fstp
fdivr
testl
mul
or
stc
clc
sbb
add
adc
add
cmpsl
mov
mov
out
mov
repnz
jmp
in
vpsubusb
rorb
out
add
ficoml
std
neg
in
jmp
lock
lock
cli
and
div
or
cld
sub
out
ret
ror
shr
mov
fstp
int
rcr
sti
sti
mov
repz
std
fdivr
fcomip
incb
adc
clc
cmc
or
push
add
hlt
hlt
and
push
sbb
push
clc
or
xor
jmp
adc
icebp
leave
rcl
mov
shl
mov
call
jecxz
sti
pop
add
add
fcmove
lret
push
neg
sar
into
hlt
decb
sbb
clc
hlt
fsubp
in
sub
es
negl
out
add
sti
add
or
lock
in
mov
in
mov
fidivs
idiv
testl
add
sti
add
out
repnz
shl
icebp
ljmp
fldlg2
add
div
and
add
or
add
cmc
push
and
or
add
stos
lock
jmp
repnz
mov
fdiv
fcmove
mov
xlat
out
std
mov
fldl
lds
adc
ljmp
lock
and
adc
pop
call
xor
and
loope
fucomp
shl
imul
stos
mov
enter
mov
fxtract
push
loop
jmp
leave
loope
pop
icebp
repz
notb
rcl
or
sbb
adc
and
in
sbb
call
sbb
xor
in
leave
loop
icebp
loope
loopne
les
leave
in
mov
std
mov
loopne
add
in
add
adc
fsubr
add
or
xlat
daa
repz
add
sub
push
or
xor
mov
mov
mov
loope
mov
fst
mov
into
ret
jecxz
std
or
sti
loopne
push
icebp
iret
adc
aad
out
sbb
fsubr
add
cld
cli
adc
adc
loopne
or
push
or
or
cmc
repnz
lret
mov
mov
stc
repnz
lock
aad
or
or
int
or
or
out
jmp
notb
ljmp
cli
push
daa
out
sbb
or
sbb
fld
stos
ret
shl
jmp
int3
rcl
in
mov
in
int3
hlt
hlt
add
aam
mov
jmp
add
push
or
idiv
pop
xlat
and
fcmovnu
out
sbb
loop
sub
sbb
jmp
adc
in
add
mov
mov
fmul
in
in
int3
lock
stc
clc
out
fst
cld
std
vpmaxub
vmovq
sti
icebp
lock
ljmp
int
or
adc
hlt
repz
cmc
jecxz
and
and
repnz
hlt
cmp
int3
shl
ror
mov
mov
cmc
shr
shl
hlt
into
iret
mov
loopne
in
iret
std
adc
mul
in
fsubr
cmc
push
push
aam
sbb
jmp
and
sbb
out
or
push
push
pop
in
sub
adc
and
lret
scas
mov
jmp
jecxz
stc
icebp
fcmovu
call
mov
call
push
lret
ror
or
or
add
adc
in
or
adc
add
and
out
std
std
and
add
or
cs
pop
pop
adc
adc
out
cmpsb
les
shl
test
aam
repnz
enter
or
or
in
iret
ljmp
in
sbb
out
adc
adc
and
sbb
adc
sbb
sub
jmp
icebp
adc
out
lock
lock
int
aad
int3
enter
clc
out
sarb
ljmp
adc
or
psrad
sbb
push
icebp
fscale
jmp
ljmp
lcall
repnz
std
adc
cs
pop
sub
cmc
into
icebp
fsubrp
int3
lods
repnz
out
mov
cli
scas
leave
repz
icebp
loop
cli
lds
xlat
fmuls
repnz
add
push
hlt
in
jecxz
pop
icebp
repz
and
repnz
sbb
sbb
and
cs
and
lret
into
fdivl
fcmovb
fnstcw
fadds
in
iret
mov
add
out
or
pop
int
add
loope
or
cld
pop
sti
or
std
adc
clc
pop
adc
sbb
paddsw
sub
and
fld
lock
in
aam
shr
lret
mov
stc
leave
lret
mov
add
std
fxam
jmp
std
decl
jmp
cld
xlat
push
in
shr
and
add
sbb
or
push
add
es
adc
or
mov
ffree
int
stos
mov
mov
fldpi
lret
mov
clc
sar
stc
add
in
iret
call
in
psraw
hlt
or
push
jmp
jmp
sbb
sub
pop
jmp
and
adc
add
xlat
call
loopne
ror
fdiv
cli
mov
add
lret
or
clc
fabs
aam
aam
into
cmc
add
push
ljmp
sbb
hlt
es
out
sti
sbb
adc
add
out
rol
fdiv
mov
aad
mov
sti
cli
lret
fsubr
aam
mov
shl
aam
call
push
pop
in
in
jecxz
add
sbb
cmc
in
lock
sti
fildl
out
and
out
testb
jmp
push
jmp
cmp
out
loop
fidivs
fdivs
repnz
lock
sar
hlt
repz
add
ljmp
push
ljmp
out
or
call
sbb
in
hlt
sbb
pop
and
and
xor
or
xor
in
out
enter
mov
in
mov
out
mov
mov
faddl
lock
hlt
aad
fcmovnu
jecxz
adc
jecxz
out
or
pop
adc
sbb
out
fsub
adc
sbb
clc
adc
jmp
clc
call
adc
cmc
or
jmp
rol
test
out
bnd
add
in
roll
jmp
lock
pop
in
adc
pop
repz
in
loop
adc
adc
sbb
sub
sub
fsub
in
mov
mov
divl
loopne
add
jecxz
sar
ffree
aad
jecxz
rcr
sti
loop
add
leave
in
stc
add
cld
or
out
sbb
in
sbb
add
sbb
jmp
movaps
add
repz
or
fcmovnu
out
lret
fsubrl
in
out
in
mov
fmulp
rcr
lds
into
loopne
add
or
negl
rorb
cld
cli
hlt
sti
ficompl
jecxz
loope
out
es
and
cli
and
ljmp
mov
mov
clc
mov
in
clc
jmp
out
lret
lret
shl
repz
cli
rcr
aam
in
std
out
jmp
jecxz
loopne
call
imul
cmc
sbb
ficompl
pop
jecxz
stc
std
cli
call
out
sbb
push
or
push
into
mov
mov
lods
mov
cld
jmp
iret
mov
std
enter
out
icebp
pop
ror
adc
adc
adc
fsubr
sbb
repz
or
pop
sub
or
add
xor
in
lret
leave
out
aad
mov
jecxz
fsubr
fsubr
clc
shr
fptan
out
out
fsubrp
ret
int3
into
pop
call
add
adc
or
aad
push
ljmp
push
call
out
add
push
pop
das
es
pop
xor
loop
mov
loope
out
loopne
xlat
lods
jmp
idivl
rcl
hlt
aad
pop
rolb
loop
push
fsubr
loope
push
fisttps
or
shl
adc
call
sti
sbb
push
add
std
and
and
in
xlat
out
movsb
mov
lock
lret
mov
mov
cli
cli
idiv
or
or
aad
lret
lock
add
out
add
shl
sbb
push
out
hlt
adc
stc
add
fdivp
stc
pop
sbb
cld
and
pop
sub
xor
add
lods
mov
rol
divl
idivb
rol
loopne
shl
add
ret
int3
add
stc
cli
int3
or
add
out
testl
in
cmc
adc
add
sbb
in
rdpmc
pop
rdtsc
add
jmp
in
ror
out
scas
mov
fadds
iret
fimull
add
loop
jmp
jecxz
adc
testb
rcll
push
notb
aam
pop
fdiv
fnsetpm(287
add
push
daa
sub
adc
xor
xor
out
mov
shr
shl
mov
aam
mov
lock
fistpll
aad
call
adc
decb
add
rcll
prefetchwt1
or
clc
jecxz
adc
loop
or
or
sbb
xor
shrl
jmp
ror
mov
in
hlt
add
add
out
in
adc
adc
push
icebp
push
adc
icebp
out
adc
sbb
sti
daa
sbb
and
sbb
add
sbb
push
jmp
icebp
sub
mov
loope
mov
sarl
mov
repz
out
in
or
sbb
jmp
ljmp
clc
push
add
stc
pop
sbb
sub
cld
out
daa
sub
loopne
mov
out
lods
hlt
mov
rcr
sti
not
iret
fdiv
ret
lret
jmp
repnz
adc
push
sbb
incb
sbb
ljmp
push
add
cld
or
sub
es
and
lods
ljmp
leave
mov
div
shl
lret
hlt
out
imul
mul
lret
loope
or
or
hlt
adc
push
out
and
out
jecxz
fistl
ficoms
out
and
sub
sbb
in
out
out
or
add
sub
int3
ror
jmp
shl
lock
fnstcw
cmc
lock
cli
lds
fadds
call
in
adc
or
std
sbb
adc
jecxz
sti
out
fstps
add
and
or
and
sub
adc
das
adc
pop
mov
in
repz
fdivr
icebp
jmp
mov
pop
rcr
ret
ret
fsubp
testl
add
adc
push
adc
xlat
adc
pop
loope
sbb
negb
loop
loop
adc
cli
sbb
hlt
fildll
iret
ret
leave
out
int3
lret
iret
mov
mov
test
push
movl
ljmp
fmuls
sbb
sbb
sbb
idiv
cs
or
sub
repnz
out
mov
mov
out
mov
lock
iret
fiaddl
loop
loop
add
fisttpl
adc
clc
add
or
push
sbb
in
cld
loopne
add
repz
sub
das
pop
and
or
out
push
out
fbld
mov
in
ljmp
mov
lds
aad
stc
hlt
or
sti
loope
jecxz
adc
call
pmullw
pop
loop
cld
loope
adc
add
adc
add
repz
add
fcmovbe
shr
jmp
mul
out
call
stc
int
int3
cld
pop
add
add
add
add
loop
aad
aad
adc
std
pop
adc
adc
fisubs
sbb
sub
jecxz
sbb
out
add
or
out
iret
mov
enter
neg
clc
mov
mov
rcr
lock
clc
fcom
lret
call
push
fdiv
or
pop
nop
sbb
and
add
sub
out
das
clc
add
xor
xor
in
enter
fsubp
loope
mov
out
mov
out
fcmovnbe
loop
mov
fmulp
hlt
or
or
sti
iret
rcll
adc
sbb
repz
clc
mul
sbb
and
daa
in
or
sbb
or
in
in
cmc
in
in
in
mov
rcr
fstp
sti
add
rol
add
div
filds
out
repnz
adc
adc
sbb
sbb
mul
push
fisubs
pop
add
sti
jecxz
add
sub
sub
xor
ffree
fcmovne
ret
mov
imull
clc
fnstcw
div
vpsubusb
clc
fsubp
in
out
in
int3
ror
pop
paddq
push
icebp
hlt
into
stc
cli
or
lock
stc
out
and
sub
es
adc
lock
into
stos
jecxz
out
cmc
loop
cli
in
mov
into
ror
fucomip
ret
fxtract
loope
fcmovu
fisttps
into
add
loop
loope
lock
repnz
pop
fucomip
or
sbb
xlat
filds
adc
adc
out
loopne
in
and
sub
movsb
scas
lock
test
rcl
in
hlt
leave
mov
fdivp
out
cmc
loopne
sar
fdiv
loop
push
in
adc
ror
adc
sbb
ljmp
add
pop
ljmp
or
push
pop
pop
lock
sub
adc
xor
ljmp
loopne
mov
int3
out
aam
cld
into
lret
aad
int3
aam
clc
push
pop
xlat
cld
xlat
enter
clc
push
icebp
adc
in
hlt
in
add
sbb
aad
loopne
hlt
add
add
cld
sti
out
or
add
xor
rcl
int3
ljmp
mov
mov
add
fildl
call
fmulp
lret
adc
add
adc
repz
xlat
or
icebp
adc
clc
sub
in
add
or
xor
adc
push
sub
icebp
lods
lods
fildll
ljmp
mov
add
mov
loopne
cld
or
or
adc
sbb
push
adc
loopne
adc
jmp
in
pop
pop
add
cs
sub
lods
rcr
repz
rcr
hlt
fcomi
mov
into
out
aad
repz
ret
or
add
push
bswap
aam
sar
lock
out
call
and
sbb
cld
sbb
es
ljmp
ljmp
iret
scas
jecxz
leave
ret
jmp
mov
into
int3
add
fdivrs
clc
out
lret
into
smsw
add
loope
shr
or
clc
repnz
hlt
pop
adc
sub
sbb
or
daa
push
and
test
loope
mov
rol
in
lret
ljmp
mov
or
add
incb
push
int3
adc
jmp
aad
pop
jmp
in
and
pop
or
adc
or
call
adc
out
and
cmc
movsl
cmpsl
rol
mov
call
sarl
iret
clc
mov
in
add
out
sti
icebp
lret
fmull
int
in
adc
adc
or
push
out
sbb
sbb
idiv
repz
and
or
jmp
push
or
sbb
test
aad
rol
rol
rol
fnstsw
ret
cmc
fst
icebp
loopne
ret
in
add
or
or
or
fucom
hlt
or
add
stc
or
fcmovnu
adc
adc
ficoms
sti
out
or
and
and
adc
push
in
and
mov
rol
xlat
out
aad
in
divl
loopne
aad
les
add
cli
adc
into
ljmp
jmp
adc
stc
sbb
daa
in
adc
sbb
stc
or
in
xor
hlt
psadbw
mov
jmp
cmc
mov
ret
fidivrl
lock
std
out
rcl
out
inc
ljmp
add
sbb
or
push
sbb
adc
fcompl
adc
push
clc
push
sti
sti
add
repz
hlt
add
in
in
rcl
jecxz
jecxz
mov
mov
ret
cmc
out
push
add
or
fdiv
std
add
adc
jecxz
add
rcr
or
or
add
stc
cli
and
cli
cld
es
and
cli
loopne
in
stc
sbb
daa
cs
rol
shr
hlt
sar
repnz
mov
int3
shl
std
fucomp
roll
vpmulhw
std
fsubr
pop
or
pop
hlt
dec
bnd
cli
lock
jmp
pop
sub
cmc
jmp
pop
add
jmp
sub
or
repz
adc
lods
lods
shll
iret
mov
lock
fdivrs
or
lret
shl
aad
sar
hlt
sbb
call
cld
and
sub
and
stc
or
add
sub
aaa
and
scas
ror
out
loope
fst
mov
jmp
aad
mov
cld
aad
hlt
cmc
xlat
add
loop
add
in
int
in
push
or
aam
cld
out
push
stc
push
and
push
div
cli
and
push
in
sub
add
sub
scas
in
test
int3
in
call
shl
mov
movl
add
or
hlt
adc
clc
imul
jecxz
call
adc
fdivp
add
push
sti
and
stc
or
mul
and
adc
and
fucomp
in
ljmp
ret
ret
out
mov
call
shl
fcmovu
loopne
idiv
add
sti
add
repnz
jmp
clc
in
out
adc
std
cmc
faddl
pop
div
and
repz
sbb
push
sbb
icebp
cld
push
add
lods
scas
lods
loop
mov
stos
shrl
mov
jmp
fnclex
mov
xlat
ret
rolb
or
adc
lock
xlat
in
in
sbb
push
push
repnz
fcoml
adc
adc
das
daa
std
in
add
incl
fsubrs
rcl
rcl
enter
lock
fnstcw
add
add
push
jmp
add
fimull
rolb
adc
leave
loopne
add
push
stc
sbb
adc
hlt
stc
es
pop
sub
pop
clc
push
sbb
xor
loope
in
mov
loope
mov
jmp
loope
add
in
lock
mov
add
pandn
in
repnz
aam
div
sbb
adc
fsubrp
std
sbb
sub
out
sti
loop
sbb
xor
and
and
movsl
shr
call
jmp
mov
sar
add
cld
test
faddl
fldz
int
fstp
adc
push
repz
out
in
cmc
sbb
push
clc
clc
out
repz
in
es
out
or
sub
add
or
shrl
shrl
out
mov
out
fyl2x
add
or
add
add
call
jmp
stc
loop
aam
repz
clc
or
cli
cli
and
repnz
push
sbb
notl
ljmp
ljmp
shrb
div
mov
clc
fidivrl
iret
fnop
leave
add
or
leave
fsub
cld
sti
icebp
jmp
loope
mul
adc
pop
sbb
clc
add
jmp
repz
in
stc
hlt
sub
or
add
adc
or
mov
loop
lock
ljmp
jmp
fidivrs
jecxz
aam
in
cli
push
lret
ljmp
repnz
call
sti
and
imul
and
out
in
or
adc
in
ss
mov
ljmp
lret
call
loop
add
aad
lock
icebp
out
repz
jecxz
stc
in
fst
or
adc
push
loopne
add
hlt
sbb
and
sub
push
rcr
lock
test
mov
not
fistpll
add
testb
fdivp
fmuls
xlat
jmp
into
aad
out
stc
out
adc
sbb
lock
sbb
repnz
hlt
and
or
or
add
sbb
lret
cmpsl
out
rcl
shrb
xlat
out
testb
loope
stc
stc
xlat
call
jecxz
or
std
movl
sbb
decl
adc
adc
pop
jmp
clc
and
sub
cld
in
adc
out
into
in
repz
leave
mov
icebp
repz
into
int3
fcomp
into
sarb
loopne
ret
incb
out
add
out
int3
int
or
or
pop
flds
or
fsubs
fdiv
push
repz
es
cld
daa
sub
icebp
cs
mov
stos
lods
loope
hlt
aam
icebp
in
aam
stc
mov
in
loop
incb
jmp
out
iret
aad
or
fcmovbe
repz
psubd
sbb
call
sub
sbb
mov
leave
ljmp
clc
call
mov
out
leave
leave
out
fsubrp
loope
leave
or
adc
adc
stc
imul
push
pop
rcll
ficoml
add
clc
push
call
add
and
icebp
and
jmp
jmp
mov
call
sti
stc
fsub
ljmp
add
pop
adc
cli
fcoms
or
push
or
in
repz
cmc
push
loopne
jmp
or
add
push
add
div
int
fisubl
in
imul
ljmp
testb
cli
fadd
out
movl
fiaddl
in
call
pop
or
or
add
fisubs
cld
clc
and
out
and
sub
xor
call
clc
cmc
jmp
neg
loope
in
loopne
loop
ret
out
call
or
add
or
in
div
roll
negl
fcompl
stc
add
sbb
sub
xor
cli
xor
in
daa
repnz
in
out
mov
mov
repz
shl
into
xlat
sti
xlat
fdivr
repnz
ret
faddl
or
enter
add
sti
ror
enter
in
adc
stc
sbb
fstps
ljmp
push
notb
negb
sti
sbb
xor
xor
ss
call
repnz
mov
mov
mov
add
clc
sar
aad
add
loope
jmp
iret
loop
adc
jmp
iret
add
shr
lock
paddusw
fstps
add
std
out
hlt
pop
and
sbb
sub
sub
jmp
out
in
lock
ljmp
hlt
lret
repnz
test
shl
clc
std
dec
pop
cld
or
or
adc
aad
or
in
repnz
std
adc
add
and
pop
cld
or
pop
sub
in
sbb
out
out
fcmovnu
loope
shl
test
test
add
into
ror
lock
rol
out
fldl
fldl
out
out
loopne
testb
sbb
repz
cmc
adc
faddl
and
and
pop
negb
jmp
in
pop
and
ret
int
int
enter
in
out
leave
sti
std
repz
jecxz
fadd
ret
xlat
cld
jmp
or
call
dec
loop
out
aam
sbb
lock
out
adc
and
push
pop
add
loop
sbb
sub
adc
add
iret
out
fisubrl
jecxz
mov
fcmovb
fcomi
fchs
xlat
loope
jmp
aad
cmc
shr
or
or
out
rolb
out
into
push
ljmp
lock
lock
hlt
add
and
sbb
sub
push
sbb
sbb
xor
sub
out
icebp
aam
scas
mov
aad
mov
fcomip
stc
les
lds
add
in
enter
leave
in
jmp
adc
sbb
cli
sti
sbb
icebp
fdivrp
or
push
sub
and
cld
add
or
xor
ljmp
or
jecxz
out
int3
jecxz
mov
mov
in
iret
fdivr
aad
mov
in
ret
add
std
fiaddl
push
add
hlt
pop
and
sbb
push
cld
sub
adc
add
push
or
mov
shr
out
mov
cli
int
aam
int3
test
cld
mov
add
pop
idiv
fisttpl
clc
leave
enter
push
aad
pop
call
lock
pop
and
adc
fsubl
loop
daa
loope
sub
xor
icebp
pop
test
in
mov
int
jmp
icebp
ljmp
ret
cmc
add
add
aad
fdivr
loop
jecxz
in
int
add
into
out
shl
fcmovnu
sbb
and
add
repnz
cld
add
add
out
and
and
in
and
cmp
scas
movsl
int3
in
int3
stos
out
mov
out
ret
cmc
cmc
mov
shl
mul
xlat
aad
ret
jecxz
fsubp
adc
shl
or
adc
loopne
sti
sbb
sbb
cmc
cli
and
imulb
or
cld
add
push
sub
out
fsubrl
lods
mov
ror
icebp
mov
clc
jmp
add
mov
or
lret
stc
fst
sti
int
repz
icebp
xlat
stc
sbb
flds
and
and
cld
jmp
divb
and
and
or
int
in
scas
into
scas
lret
mov
mov
clc
into
aad
enter
fld
aad
loope
fsubrp
idiv
add
in
iret
rolb
ljmp
stc
lock
add
repz
notl
or
sub
in
or
add
jmp
das
loope
lret
out
out
out
rol
repnz
out
int
repnz
loop
in
fdiv
icebp
fsubp
add
in
or
fcomi
or
aad
adc
add
or
add
sbb
out
push
sbb
sub
or
adc
xor
out
out
out
in
in
ret
enter
mov
cld
mov
loope
xlat
in
pop
xlat
rol
fsubr
int3
lret
add
iret
adc
ljmp
xlat
fistps
sbb
sbb
stc
and
notl
or
sub
or
hlt
or
ret
fcmovnb
lret
aam
jmp
mov
cli
ret
out
mov
loope
in
int
adc
fisttpll
loopne
or
out
or
adc
or
loope
out
call
add
or
push
paddw
ss
fcomip
shl
int
rcl
sti
repz
mov
repnz
or
in
roll
call
cmc
or
stc
in
paddusb
sbb
cli
adc
push
adc
cli
sbb
sub
cld
or
and
scas
leave
loop
fadd
out
in
fincstp
lock
into
mov
iret
cld
pop
call
or
out
add
lock
jmp
or
push
sbb
loopne
in
add
adc
sbb
or
call
in
adc
stos
shlb
out
mov
mul
cmc
cmc
cli
aad
icebp
mov
loope
add
add
adc
pop
loop
adc
adc
or
ljmp
and
out
in
sti
std
add
or
rcr
out
repz
ret
in
mov
leave
cld
repz
int
out
dec
hlt
add
fdivr
or
std
in
leave
or
push
add
push
adc
cmc
icebp
out
std
sbb
pop
add
sbb
in
clc
add
cld
adc
repnz
or
scas
scas
shrl
cli
mov
fucomp
leave
lret
aad
pop
faddl
in
lock
add
loope
lock
add
fisttpl
or
icebp
or
add
sbb
add
or
ljmp
push
das
sbb
leave
test
iret
out
shr
int
sar
mov
out
mov
mov
jecxz
or
or
add
fxam
fsubrp
add
out
out
aad
lock
sbb
sbb
paddsb
stc
and
hlt
add
jmp
and
sub
lar
adc
out
shrl
clc
shl
repz
flds
add
loopne
in
out
fcmove
fists
std
push
shl
iret
testb
or
fxtract
sbb
es
sbb
repnz
adc
loope
int3
fldt
shlb
std
out
repz
add
sti
pop
in
fld
loop
sti
cld
add
adc
jmp
jecxz
imul
push
sti
loope
sbb
cli
adc
add
or
sub
jmp
sub
icebp
xor
cmp
sarl
out
ret
stc
mov
out
ffreep
repz
rcl
fxch
jmp
in
add
fucomp
in
add
adc
or
fstl
sbb
push
loopne
and
loop
call
adc
das
sub
loope
in
ljmp
fsubr
enter
rcl
lret
add
mov
hlt
fucom
stc
push
stc
fxch
out
sti
std
repz
test
sbb
or
and
adc
jecxz
pop
icebp
out
loop
or
or
or
xor
xor
lock
ljmp
out
cmc
clc
leave
jmp
mov
in
shl
loopne
add
add
sti
incb
fsubr
or
call
adc
call
sbb
daa
push
pop
jmp
or
add
mov
enter
fidivl
aad
roll
add
icebp
loopne
pop
or
fiaddl
jmp
adc
aam
jmp
or
fsts
jmp
loop
stc
sti
testl
or
jmp
cs
or
add
lock
scas
rcl
aad
lock
mov
fcmovnbe
stc
or
cld
neg
cld
neg
ljmp
in
in
cmc
push
out
adc
and
icebp
cld
clc
pop
sub
lcall
push
ljmp
sub
sub
xor
vpsadbw
jmp
leave
mov
fildl
loop
iret
call
or
in
lock
or
lock
adc
fstpl
or
add
fstpl
and
pop
sub
xor
std
adc
decb
sbb
ror
out
ljmp
int3
fcomp
rcr
add
enter
or
adc
add
push
idiv
clc
or
cmc
in
loope
adc
es
jecxz
add
sbb
sub
int
test
divl
repz
fdivp
cmc
out
fscale
aam
mov
add
loope
pop
jmp
or
jmp
fucom
and
or
add
in
std
hlt
adc
lret
in
in
jmp
fdivp
mov
ror
iret
fxtract
lret
mov
rcl
std
leave
fiaddl
jmp
call
push
in
clc
fxam
idiv
adc
repz
loopne
loope
pmaddwd
add
jecxz
and
sub
repz
hlt
adc
shlb
out
icebp
shrl
mov
std
out
fdivs
add
xlat
add
rclb
out
enter
in
jecxz
or
out
repnz
sbb
adc
push
pop
push
stc
fsubp
push
push
sub
push
pop
add
in
fld
ljmp
rol
out
out
std
fcmovbe
in
add
shl
or
or
adc
loopne
loope
in
sbb
fistl
adc
clc
repnz
sti
and
sub
sub
add
sub
xor
out
out
loopne
hlt
mov
repnz
rol
fxch
mov
loope
std
ror
add
fcomp
loop
or
loopne
jmp
out
pop
clc
fxch
sbb
adc
push
or
sbb
out
cs
and
in
add
lret
out
lret
loopne
mov
repnz
into
in
test
repnz
mov
add
movb
or
loope
in
incb
call
fcmovnu
push
fdivr
notl
add
sbb
and
sub
and
lock
sub
repz
mov
leave
vcvtdq2pd
jmp
clc
fcmovnb
test
fldl2e
lret
leave
in
loop
jmp
adc
out
jmp
fstp
ficoml
pop
out
adc
sub
or
push
adc
add
xlat
mov
hlt
in
mov
jecxz
jmp
div
clc
mov
mul
add
add
in
femms
in
add
add
xlat
fldl2e
hlt
repz
add
clc
adc
push
or
add
add
scas
lret
scas
out
out
mov
out
fmulp
ror
filds
shl
xlat
or
fadd
leave
add
fucomp
push
decl
ljmp
out
fcomi
shl
adc
sbb
adc
and
jmp
sub
decl
sbb
or
cmc
and
sub
icebp
test
fsubrl
int
mov
aad
shl
int3
sti
fdivp
in
repz
fildl
or
out
push
jmp
or
sti
sbb
pop
sbb
ficoms
repz
out
or
or
and
sbb
sbb
xor
sub
enter
mov
imul
lret
leave
mov
repz
shr
loop
push
or
or
loope
add
rclb
add
call
jecxz
repz
adc
sbb
adc
filds
out
push
jecxz
daa
std
push
add
sub
mov
out
mov
out
shrl
leave
div
ror
mov
hlt
jecxz
fisttpll
or
or
into
add
add
sbb
in
cli
sbb
jecxz
hlt
lock
and
sub
pop
or
es
and
cmpsl
stos
shl
mov
out
icebp
cli
cli
aad
cmc
clc
mov
aam
cmc
mov
add
fildl
out
add
add
or
or
fxch
sti
add
fists
out
loopne
sbb
mulb
add
repnz
scas
stos
stos
hlt
mov
in
div
stc
fmul
cld
std
fcos
call
clc
out
rcl
or
fldln2
push
loope
jecxz
imul
aam
jecxz
or
icebp
adc
adc
sbb
or
or
and
jmp
mov
loopne
into
sarb
dec
mov
jmp
add
or
ljmp
std
jecxz
jmp
adc
rcl
in
adc
testl
sbb
add
daa
adc
std
or
adc
pop
add
test
fildll
mov
clc
mov
shl
cld
add
aad
clc
in
les
call
ljmp
out
out
pop
or
sti
sbb
pop
idiv
sub
jmp
pop
or
repz
in
test
ret
scas
vpextrw
leave
mov
idivb
in
rol
add
cli
push
out
add
in
add
repnz
or
loopne
icebp
stc
out
sbb
adc
negb
sbb
cld
in
pop
push
pop
sub
fnsave
int
div
ljmp
mov
out
aad
call
loop
int3
fimuls
fucomip
fdiv
or
in
fcomps
out
adc
add
icebp
push
call
out
and
add
fcomp
shl
scas
ret
loop
iret
stc
int
mov
mov
fnstsw
stc
stc
in
in
shl
adc
jmp
add
repnz
aad
push
fdivrp
fistps
sbb
and
push
and
pop
or
es
add
sti
or
call
icebp
ret
mov
out
test
lret
lock
int3
add
add
fstp
out
iret
add
out
fdivrp
adc
adc
add
cmc
in
adc
pop
and
add
adc
push
ljmp
sub
add
mov
mov
aam
stc
lods
sti
shr
test
out
in
into
into
fcomi
add
add
add
ljmp
loopne
rclb
adc
int3
cmc
out
or
div
out
loopne
imul
sti
sbb
add
or
add
out
and
in
out
stos
enter
ret
ror
in
out
repnz
lret
lret
lock
mov
shl
loope
pop
lock
icebp
psubw
or
cli
hlt
idiv
out
stc
sbb
loop
and
sub
loop
pop
add
std
sbb
sbb
and
fldcw
scas
out
out
mov
aad
mov
mov
add
idiv
movb
or
out
add
jmp
repz
xlat
adc
or
loope
jecxz
sbb
and
sbb
clc
adc
cld
xor
call
out
int3
lret
in
mov
leave
std
f2xm1
mov
mov
rcl
push
loop
imul
or
add
in
ljmp
out
adc
div
ljmp
add
and
pop
and
and
in
femms
repz
lods
fcomp
mov
stos
jecxz
mov
aad
lock
out
mov
mov
jecxz
add
clc
fcmovnb
add
stc
loope
inc
call
repnz
lock
add
fdivrp
psubw
clc
adc
or
sbb
lock
adc
stos
in
jmp
fcomip
loop
int
mov
mov
mov
leave
ljmp
iret
faddl
in
pop
enter
rcrl
cld
adc
push
add
pop
and
repz
sub
sub
sbb
xor
add
out
cs
lret
scas
loopne
cli
in
enter
fnstsw
repnz
add
movntq
out
or
push
fisttps
rcrl
jmp
loope
out
in
and
or
negl
in
std
sbb
sbb
ror
leave
test
out
test
jmp
dec
mov
aam
stc
mov
mov
fstl
sbb
push
or
testb
and
psllq
lock
sti
clc
incl
add
pop
or
repnz
mov
fst
test
leave
icebp
jmp
mov
call
idiv
loop
add
push
lret
int
ljmp
add
adc
sub
and
sbb
sbb
add
sub
jmp
mov
mov
mov
fsub
ror
add
fmuls
or
add
jmp
sti
adc
not
out
hlt
adc
in
sbb
call
sbb
repz
mul
div
add
lock
xor
mov
loopne
rcl
idiv
loop
fidivl
iret
add
rcr
add
xlat
or
sar
push
or
out
adc
push
sbb
stc
notb
or
clc
cli
repz
adc
push
add
es
or
xor
in
sub
das
hlt
divb
in
in
lock
leave
jmp
mov
stc
stc
call
cld
out
lock
jecxz
prefetch
or
loop
fmuls
pop
pop
or
fsubs
or
sbb
sbb
add
or
push
call
out
das
cmpsl
mov
loopne
call
into
ljmp
in
cli
repnz
ret
jmp
or
add
or
hlt
sbb
and
add
sbb
in
ljmp
adc
and
and
repnz
call
repnz
loope
lret
fprem
mov
add
ret
shl
cld
lds
cli
std
lret
int3
cld
adc
loop
in
jmp
push
adc
sbb
lock
sti
testb
loopne
fsub
sbb
adc
add
pop
push
jmp
lret
icebp
mov
shr
int
mov
aad
mov
mov
aam
jecxz
pop
cmc
ffree
cld
loope
adc
lock
adc
ljmp
out
push
cld
add
and
and
sub
or
sub
std
call
leave
lods
mov
mov
loope
mov
clc
loope
call
ret
add
out
iret
out
call
adc
fdivr
adc
repnz
adc
repnz
sbb
or
or
sub
leave
jmp
mov
mov
add
rcr
in
ret
clc
call
or
into
push
pop
add
add
cld
adc
fstps
and
push
adc
sub
stc
sbb
out
jmp
sub
xor
xor
out
jecxz
cmc
ret
out
into
fdivr
int
ljmp
add
repz
add
fldl
shr
cld
shl
movlhps
push
add
adc
and
es
in
in
in
add
add
stos
ffree
in
lock
mov
aad
clc
clc
into
fidivs
fcmovnbe
out
or
jmp
in
or
fcmove
into
iret
out
add
call
adc
loopne
fistps
adc
stc
add
sbb
sbb
pop
xor
jmp
mov
ret
in
clc
ret
repnz
out
lret
rcr
cmc
fsubr
hlt
or
in
fiadds
or
or
add
adc
rcrb
jecxz
cmc
or
jmp
adc
add
es
sbb
push
sub
in
sysexit
adc
cmc
mov
ljmp
fucomi
fxch
mov
lret
mov
repnz
xlat
roll
add
clc
cli
in
ljmp
pslld
push
ljmp
stc
testl
add
push
add
push
pop
jmp
icebp
test
mov
into
cmc
mov
iret
iret
mov
div
out
loope
clc
pop
int
sti
lret
jecxz
push
into
add
cmc
sbb
sti
adc
push
adc
icebp
adc
negl
cmc
push
div
add
in
lar
add
and
and
jecxz
int
ffreep
leave
in
xlat
shr
hlt
std
mov
out
add
ret
mov
mov
or
add
adc
in
pmuludq
push
sbb
sbb
cli
out
std
mulb
in
and
add
push
sub
sub
adc
sub
fcmovu
call
ror
in
mov
call
shl
add
shl
loop
enter
add
adc
push
repz
stc
out
or
adc
std
std
add
or
ljmp
or
push
stos
int
in
out
repz
lret
mov
hlt
repz
fnstenv
in
rol
rcr
add
in
test
loope
pop
in
into
loope
imul
push
iret
fimull
cli
add
add
loopne
add
pop
in
stc
pop
cs
ss
sub
enter
enter
out
mov
fdivr
loope
jmp
hlt
add
sar
add
call
iret
push
hlt
ljmp
iret
hlt
sbb
in
pop
sbb
in
stc
lock
adc
sub
adc
int
lret
in
out
int3
jmp
out
ljmp
shl
into
out
loope
push
add
pop
push
add
or
loopne
or
push
cld
push
aad
pop
sbb
cld
and
add
push
jmp
jmp
jmp
repz
and
les
fsubrl
mov
jmp
shr
add
mul
loope
out
add
repz
add
loopne
rolb
in
fdiv
push
sbb
out
adc
and
fcompl
clc
stc
sub
or
push
pop
adc
repnz
sbb
lods
in
int
mov
call
out
lret
ret
out
mov
or
std
in
or
in
int3
loope
loope
shr
call
out
fprem1
sti
lock
jecxz
cld
add
or
or
sti
cli
add
ljmp
out
scas
int3
mov
cmpsl
jecxz
repz
in
rcl
in
std
mov
push
fadd
enter
lds
repz
fsubp
in
push
repnz
add
push
and
add
or
and
sub
pop
aaa
sub
out
shrl
shll
int3
hlt
lret
clc
add
xlat
rcr
add
add
or
loopne
add
or
out
cli
repnz
or
in
sbb
in
cli
or
jecxz
or
sbb
jmp
and
add
out
call
mov
mov
aad
mov
add
clc
ret
in
loope
adc
out
out
or
aad
into
sbb
fsts
adc
repz
add
out
pop
sti
pmaxsw
and
movsl
loop
stos
mov
mov
cmc
lds
fucomip
cld
loope
fidivrl
ljmp
loopne
fldl
aad
repz
sbb
decl
jmp
fisubl
loopne
cmc
and
cli
add
or
or
add
push
adc
hlt
hlt
repnz
jecxz
mov
test
out
cld
loop
mov
shl
neg
fneni(8087
lock
enter
in
clc
adc
out
adc
pop
loope
pop
sbb
sub
and
and
sbb
out
sbb
adc
xor
loope
leave
iret
leave
shr
out
fdecstp
divl
lret
into
repnz
cld
cld
out
mov
inc
mul
repnz
hlt
unpckhps
push
or
cld
sbb
out
pop
push
icebp
in
hlt
or
add
call
add
fucomi
test
stos
out
mov
fmul
stc
fcmovnu
repz
div
clc
mul
cld
xlat
ljmp
enter
int
hlt
aad
out
sbb
sbb
adc
add
adc
std
push
sbb
pop
adc
xor
mov
mov
clc
out
lret
lret
mov
rolb
loop
cli
ret
push
in
lret
add
push
adc
or
cmc
paddusw
stc
jmp
fstl
hlt
jecxz
in
daa
imul
add
adc
add
xor
and
leave
test
int
mov
jmp
mov
mov
std
into
mov
loope
push
lret
jmp
stc
idiv
xlat
adc
xlat
sbb
loopne
or
daa
sub
sbb
or
sti
sub
ljmp
loop
out
in
in
mov
repnz
enter
std
repz
fcmovbe
hlt
sar
loop
cld
add
or
ljmp
lock
ljmp
jmp
fistl
fldl
add
and
adc
add
and
cmc
pxor
cmpsl
mov
repnz
lret
enter
fcomp
mov
faddp
fsubp
testb
add
flds
out
jecxz
push
adc
or
fdiv
jmp
out
sbb
in
out
add
add
cld
daa
cli
in
add
push
and
add
icebp
test
mov
ror
fadd
clc
mov
xlat
sar
in
jmp
loop
loop
or
or
in
xlat
rcl
cmc
in
and
push
push
stc
add
adc
add
out
pop
add
sbb
sbb
or
lret
fbstp
lret
cmc
div
call
lock
idivl
std
movl
aam
lock
adc
call
repnz
out
es
daa
add
sub
cs
pop
sbb
add
pop
sub
shr
repnz
out
mov
mov
out
jmp
repz
lret
mov
mov
add
add
into
leave
ljmp
add
repnz
in
sub
sbb
and
adc
icebp
std
and
es
lret
scas
aam
loope
in
sar
cmc
not
mov
ror
faddp
jecxz
out
or
fcomip
int3
out
in
loop
jmp
into
push
or
decl
in
clc
loopne
es
and
clc
fstpl
jmp
std
cli
sbb
xor
mov
movsl
shl
hlt
test
hlt
cmc
loopne
out
rcl
aad
lret
in
sar
cli
repz
rorl
in
push
or
cld
or
fldpi
in
hlt
and
notl
call
add
sbb
or
adc
cs
jmp
mov
in
ror
out
mov
repz
repz
not
incb
or
sti
add
or
repnz
adc
aad
sbb
sbb
or
or
clc
loope
sbb
add
sub
xor
and
cmc
es
mov
loopne
loope
in
ret
rcl
mov
rolb
iret
mov
stc
add
or
or
add
jmp
add
or
fdivr
add
adc
pop
and
and
adc
in
cvtps2pi
std
or
xor
and
fldt
cmpsb
mov
in
cli
mov
shl
fsub
pop
in
test
add
fisttpll
add
in
out
repnz
adc
adc
add
pop
and
or
sub
add
xor
cs
das
push
and
mov
lods
fistpll
aam
leave
mov
fcomp
ret
shl
in
add
out
vpsllw
fucomip
in
clc
in
push
cli
pop
jmp
push
decl
call
add
push
adc
icebp
and
es
sub
pop
or
xor
or
in
mov
divl
repz
imul
lock
push
ret
jecxz
lret
jmp
push
pop
cld
int
sbb
or
fildl
in
cld
clc
lock
and
adc
clc
sbb
ljmp
sub
daa
es
enter
scas
mov
aam
lock
shl
fstp
aad
fadds
pop
stc
fadds
sar
or
in
call
repz
call
add
or
add
std
or
cs
sbb
out
les
rcl
repnz
rcl
lret
jmp
shl
fucomp
or
loop
add
fsub
hlt
call
pop
jmp
icebp
adc
pop
and
cli
push
repz
testb
out
jmp
adc
and
or
jmp
out
mov
leave
shl
int
repnz
lock
or
or
cli
in
push
jecxz
lock
and
pop
add
and
es
or
adc
daa
sub
ret
iret
fbstp
test
out
fsubr
mov
hlt
loopne
fdecstp
shr
int
psubsw
out
loope
add
rorl
repz
fistl
sti
ficoml
and
repz
sbb
adc
adc
or
xor
mov
iret
out
scas
fmul
aam
icebp
out
aad
fcomi
out
add
out
xlat
stc
call
faddl
add
or
sbb
ficoml
notl
pop
cli
icebp
add
sbb
loopne
sub
cld
xor
and
shrl
ret
cli
lock
in
mov
add
fdivr
ret
loop
add
pop
out
add
std
in
shr
jmp
sbb
nopl
adc
or
pop
adc
sub
out
sbb
repz
out
fadd
cmpsb
lret
not
mov
out
rcr
rcl
div
ret
jmp
ror
or
adc
adc
neg
or
or
or
hlt
in
and
sbb
adc
add
out
es
out
repnz
repz
jmp
shr
in
clc
lds
fndisi(8087
imul
mov
test
loopne
in
sti
fiaddl
jmp
or
icebp
leave
add
or
cld
or
sti
add
loopne
adc
in
or
or
add
or
or
out
loope
fsub
mov
repnz
repz
mov
stc
fdivr
fnstcw
fyl2xp1
loop
out
add
std
adc
out
sbb
in
sbb
sti
loop
and
adc
and
loop
daa
jmp
xor
and
hlt
add
out
shr
in
jmp
enter
sarb
in
mov
xlat
jmp
int3
or
int
pop
icebp
jmp
lock
adc
and
push
jecxz
and
push
sub
xor
and
scas
iret
shl
leave
repnz
int3
fld
call
cld
fdivr
jecxz
mov
jmp
jmp
call
movups
out
out
sbb
adc
sbb
loop
std
add
in
add
test
mov
in
scas
in
aad
aam
shlb
xlat
out
roll
lds
leave
pxor
filds
fldl
enter
in
out
in
or
jmp
push
add
es
loope
sub
fistps
out
out
add
jmp
fld
lock
lret
shl
leave
mov
cmc
out
add
mov
loop
stc
aam
xlat
jmp
fsub
repnz
loop
hlt
adc
adc
or
adc
adc
sub
sbb
sbb
push
adc
add
push
add
add
adc
lret
cmc
out
repnz
out
ljmp
hlt
rolb
repz
add
or
int3
lock
call
out
push
icebp
icebp
sbb
cld
push
icebp
std
sub
sub
push
add
jmp
pop
and
fsubp
mov
ret
out
call
shr
rcr
iret
add
fcmovbe
aam
cli
or
pop
lret
jmp
shl
not
paddq
push
fistpl
xlat
jmp
testb
and
ljmp
cmc
sub
and
repnz
ljmp
loop
lret
div
jmp
dec
aad
rolb
out
hlt
lock
neg
leave
leave
stc
int
add
incb
testl
push
psllq
add
and
sti
push
add
sbb
jmp
daa
sub
int3
repnz
lds
ror
out
loopne
into
fildl
mov
or
fimull
icebp
aam
or
adc
adc
aad
fmuls
loopne
cld
repnz
push
or
cli
std
sub
adc
out
into
jmp
fnstcw
iret
icebp
xlat
mov
loopne
dec
enter
out
ljmp
sbb
or
fisttpll
and
or
pop
and
ljmp
fildll
mov
int3
sar
in
aad
stc
add
fcom
fidivrs
add
fmul
out
loop
in
add
call
or
sti
or
pop
pop
neg
out
jecxz
pop
push
or
sti
sti
add
sub
fneni(8087
mov
shrb
rol
out
mov
out
cld
hlt
add
ret
int3
or
or
jmp
push
or
push
pmaddwd
push
and
adc
and
cld
sbb
and
or
lret
fdivrl
test
aad
push
mov
cli
jecxz
add
repz
fisttpl
out
adc
repnz
cli
pop
in
adc
hlt
fucom
cmc
sbb
loop
and
jecxz
pop
or
add
out
pop
xor
stos
loop
mov
mov
loopne
shl
aad
repnz
mov
push
fxtract
ret
fcmove
lret
adc
push
aam
in
hlt
lock
clc
adc
adc
add
sbb
ljmp
paddsw
sbb
cmc
cmpsb
test
leave
scas
lret
fcmovb
int3
mov
fsub
out
into
mov
jecxz
cmc
fiaddl
loop
or
into
in
out
adc
fcmovnu
repz
fisubl
aam
fimull
stc
cmc
and
add
pop
pop
pop
sub
and
adc
adc
xor
stos
int
mov
leave
mov
shl
fdivr
add
mov
out
ffreep
fdivr
add
add
dec
iret
add
adc
in
xlat
sbb
or
or
add
add
pop
adc
sub
add
or
das
or
stos
int3
shrb
mov
mov
sar
mov
shr
testl
loope
jmp
pop
add
or
idiv
jmp
or
decb
icebp
stc
frstor
hlt
in
daa
hlt
sbb
jmp
hlt
out
es
out
mov
enter
out
idiv
inc
repz
icebp
hlt
add
enter
shr
push
loop
dec
clc
in
jmp
hlt
sbb
out
fcoml
or
cmc
filds
cli
cld
adc
and
sti
std
jmp
and
sub
and
movsb
mov
cmc
cmc
lock
in
mov
enter
mov
aam
stc
loopne
faddp
in
lret
lret
lret
call
idiv
pop
decb
or
repz
loopne
push
and
and
clc
sti
and
sub
or
xor
or
loope
ret
out
call
hlt
aad
fdivr
fdivrs
mov
fcmove
xlat
jmp
add
in
std
repz
in
aam
pop
push
in
in
or
or
jecxz
fistpl
sti
clc
add
sub
adc
into
test
ror
in
ja
arpl
jae
xor
xor
jne
cmp
cmp
add
add
add
add
add
add
add
and
add
js
add
add
add
add
add
add
or
adc
add
nop
add
adcb
add
test
add
rolb
adcb
add
add
adcb
add
or
add
and
add
cmp
add
push
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
in
add
add
add
js
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
std
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
in
add
add
add
or
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
decl
or
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
lock
add
incl
add
incl
add
lock
add
str
lock
add
incl
ud0
add
push
add
add
incl
add
add
add
add
ja
ja
push
ud0
decl
incl
ud0
decl
push
add
clc
mov
ud0
decl
lock
add
add
psubb
add
incl
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
clc
mov
ud0
push
add
incl
add
ud0
decl
lock
add
add
add
add
decl
add
ud0
incl
jmp
inc
inc
incl
push
ud0
icebp
ud0
lock
push
add
push
add
lock
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lock
push
add
incl
add
add
add
add
add
add
in
add
add
clc
popfw
fwait
push
jge
xchg
hlt
ljmp
inc
invlpg
push
je
stc
lahf
push
push
jmp
popa
push
insb
sub
mov
stos
mov
push
pop
sbb
into
out
mov
pusha
mov
imul
lock
icebp
xchg
jo
mov
int
lds
mov
or
pop
mov
test
inc
mov
push
mov
push
mov
js
int3
adc
inc
popf
xor
pop
push
and
ss
mov
rol
stc
sbb
cmp
shll
nop
jae
mov
cmpsb
inc
cmpsb
outsb
cmp
dec
rorl
movsl
add
fidivs
cld
and
add
aad
sub
pop
mov
pop
cmc
jecxz
nop
push
and
addr16
rol
jb
and
jmp
test
xchg
test
test
jp
pop
andb
mov
test
mulb
incl
sti
jne
je
and
and
xor
sarb
and
pop
jbe
cmpsl
dec
dec
test
adc
leave
mov
es
imul
jno
sahf
push
xchg
std
dec
inc
cmp
jbe
pop
sub
int3
cmp
cmp
adc
mov
cmpb
xor
shll
in
add
insl
lods
out
sbb
imulb
jmp
xchg
orb
popf
sbb
jns
movsl
add
push
dec
inc
bound
out
xchg
das
or
xchg
mov
add
aam
or
popf
pop
pop
repnz
cmp
test
cmp
mov
jae
push
movsb
cmp
push
sub
mov
xchg
pop
scas
outsb
ss
mov
pop
push
daa
mov
jp
ljmp
out
mov
movsl
mov
pop
cmp
or
cmpsb
fs
dec
jbe
imul
lods
sub
jb
xchg
sub
shl
cli
nop
outsb
nop
popw
or
scas
hlt
inc
cld
les
xchg
inc
movsl
jne
adc
or
aaa
xchg
les
add
fsubs
jns
xor
out
sbb
inc
dec
or
mov
mov
pop
aad
lods
out
push
adc
cmp
or
cmp
aad
jmp
jg
daa
imul
dec
jle
nop
fninit
add
push
data16
inc
lahf
sub
ret
mov
icebp
sub
add
sbbl
xchg
and
and
call
mov
add
lock
mov
lret
outsb
pop
inc
repz
mov
lods
sbb
stc
cld
pusha
icebp
and
stos
addl
inc
hlt
inc
ja
or
sbb
das
test
pop
xor
cmpsb
cmp
dec
ret
xor
lods
cwtl
arpl
xor
daa
mov
andl
ljmp
xor
fildl
sbb
push
push
loope
bound
xchg
mov
int
iret
sub
es
mov
mov
add
lcall
mov
lcall
or
add
push
mov
movsb
and
sub
push
out
pop
jp
pop
enter
mov
mov
mov
shrb
inc
xchg
cmp
mov
dec
mov
pop
es
mov
cmp
inc
repnz
in
mov
adc
push
scas
inc
lcall
adc
jbe
out
fwait
stos
lcall
ficompl
icebp
imul
nop
fdivrl
inc
cld
out
mov
add
add
add
mov
add
cmp
add
pop
mov
add
jno
add
jge
add
add
add
xchg
mov
add
mov
add
sarl
add
add
