push
mov
sub
push
push
push
mov
movzbl
mov
sub
mov
mov
movzbl
mov
shl
mov
mov
mov
imul
sub
add
mov
mov
movzbl
sub
mov
mov
or
sub
mov
movzbl
movzbl
mov
sub
mov
add
mov
mov
shl
mov
movzbl
xor
mov
add
movzwl
sub
mov
movzbl
mov
movzbl
or
mov
add
mov
movzbl
sub
mov
add
mov
mov
mov
xor
div
mov
mov
movzbl
xor
mov
movzwl
movzbl
imul
sub
cmp
je
mov
mov
movzbl
xor
mov
movzbl
shl
mov
mov
movzbl
xor
or
mov
movzbl
or
mov
imul
mov
movzbl
movzbl
or
sub
mov
sub
mov
jmp
mov
movzbl
xor
mov
add
mov
mov
mov
mov
movzwl
and
add
mov
mov
add
movzbl
movzbl
imul
add
mov
movzbl
movzwl
xor
add
mov
mov
add
movzbl
movzwl
or
add
mov
movzwl
mov
mov
movzbl
add
sub
mov
mov
movzbl
movzwl
and
sub
mov
movzwl
movzbl
imul
add
mov
mov
mov
add
mov
and
sub
mov
mov
mov
movzwl
or
cmp
je
mov
mov
movzwl
imul
mov
mov
imul
mov
movzbl
movzwl
xor
mov
mov
add
movzbl
movzwl
xor
add
mov
movzwl
or
xor
mov
movl
movzbl
movzwl
or
mov
movzbl
movzwl
or
mov
movzbl
mov
movzbl
sub
cmp
je
mov
mov
movzwl
add
mov
movzwl
and
mov
sub
mov
mov
movzwl
xor
and
mov
mov
test
jne
mov
shl
mov
shr
or
mov
jmp
cmpb
jbe
mov
mov
mov
movzbl
or
and
mov
mov
movzbl
xor
mov
add
mov
movzbl
shl
mov
cmpw
jbe
mov
shl
mov
jmp
cmpw
jb
movzwl
mov
xor
div
mov
jmp
cmpw
jbe
mov
mov
jmp
mov
test
jne
cmpl
jb
movzwl
mov
jmp
jmp
mov
test
jne
mov
test
jne
mov
add
mov
jmp
cmpl
jne
movzwl
jmp
jmp
cmpl
jne
mov
or
movzwl
imul
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
xor
sub
mov
mov
sub
mov
movzbl
xor
add
mov
mov
test
jne
cmpl
jne
mov
imul
imul
mov
jmp
mov
test
jne
mov
test
jne
mov
xor
add
mov
mov
add
mov
jmp
cmpl
jne
mov
mov
jmp
cmpl
jbe
movzbl
and
movzbl
xor
mov
jmp
cmpl
jne
mov
sub
mov
mov
add
movzbl
sub
add
mov
mov
sub
mov
sub
mov
movzwl
mov
mov
shr
mov
mov
or
add
mov
mov
mov
add
mov
movzbl
add
sub
mov
movzbl
add
mov
add
mov
mov
mov
add
mov
mov
shl
mov
movzbl
xor
sub
mov
add
mov
movzbl
xor
add
push
mov
movzbl
or
sub
push
push
movzbl
or
push
call
mov
mov
mov
movzbl
imul
mov
add
mov
movzbl
and
mov
mov
movzbl
or
add
mov
add
mov
movzbl
shr
mov
mov
test
jne
mov
sub
mov
movzwl
and
movzwl
and
mov
jmp
mov
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
or
movzbl
mov
sub
add
mov
movzbl
add
add
mov
mov
or
mov
mov
or
movzbl
imul
movzbl
movzbl
mov
xor
div
movzwl
movzbl
sub
push
mov
or
sub
push
call
mov
mov
and
mov
sub
mov
mov
xor
divl
movzwl
movzbl
and
mov
mov
add
movzbl
mov
test
jne
cmpb
jne
cmp
jne
cmpl
jne
mov
test
jne
push
push
call
movzbl
jmp
cmpb
jbe
movzbl
add
mov
jmp
cmpb
jbe
mov
xor
movzbl
jmp
cmpb
jbe
mov
xor
divl
movzbl
jmp
cmpl
jne
mov
mov
jmp
mov
and
sub
mov
movzbl
and
or
mov
movzbl
movzbl
or
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzbl
mov
shr
movzwl
mov
xor
or
movzwl
mov
shr
mov
mov
movzwl
mov
mov
xor
div
movzwl
cmp
jne
mov
movzwl
jmp
cmp
jne
mov
xor
movzbl
jmp
mov
test
jne
cmp
jne
mov
xor
movzwl
jmp
mov
test
jne
call
movzwl
jmp
cmp
jb
mov
imul
movzbl
jmp
cmp
jbe
mov
sub
push
push
push
push
movzwl
xor
push
call
movzwl
mov
mov
imul
movzbl
movzbl
xor
movzbl
imul
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
mov
shr
mov
mov
movzbl
mov
test
jne
mov
xor
sub
mov
jmp
cmp
jb
mov
sub
movzbl
jmp
cmp
jb
mov
imul
add
push
push
mov
and
push
mov
and
mov
add
push
mov
imul
sub
push
call
jmp
cmp
jbe
mov
and
add
movzbl
mov
test
jne
mov
sub
add
mov
jmp
cmp
jne
mov
and
mov
sub
mov
jmp
cmp
jbe
mov
sub
add
mov
jmp
cmp
jbe
mov
shl
movzbl
jmp
cmp
jb
mov
jmp
mov
shr
mov
mov
sub
sub
mov
mov
xor
mov
add
movzbl
mov
movzwl
or
add
mov
mov
sub
mov
movzwl
and
sub
mov
add
mov
movzwl
xor
div
mov
movzwl
sub
add
mov
mov
mov
movzwl
add
sub
mov
add
mov
mov
xor
mov
mov
mov
mov
sub
mov
mov
xor
div
mov
mov
cmp
jae
mov
mov
movzwl
or
movzwl
or
mov
movzwl
xor
mov
mov
mov
mov
mov
mov
mov
movzwl
sub
mov
movzwl
movzwl
and
add
mov
movzwl
movzwl
add
sub
mov
movzwl
shl
mov
mov
test
je
mov
mov
movzwl
and
movzwl
add
mov
movzwl
add
mov
mov
shl
add
mov
add
xor
mov
shr
add
xor
mov
sub
mov
mov
shl
add
mov
add
xor
mov
shr
add
xor
mov
sub
mov
mov
add
mov
mov
sub
mov
movzwl
movzbl
or
add
mov
sub
mov
movzwl
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
mov
movzwl
imul
mov
mov
add
mov
jmp
mov
xor
div
movzbl
mov
movzwl
and
sub
mov
add
mov
mov
shl
mov
cmp
jne
movzbl
movzwl
imul
mov
mov
mov
jmp
cmp
jbe
mov
movzbl
jmp
cmp
jb
movzwl
imul
mov
movzbl
add
movzbl
mov
movzwl
imul
sub
mov
add
push
mov
imul
add
mov
add
push
call
movzwl
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
shl
movzbl
mov
shl
mov
mov
add
movzbl
mov
sub
movzwl
mov
sub
mov
mov
mov
mov
shl
movzbl
mov
test
jne
mov
test
jne
push
push
call
movzwl
jmp
cmp
jb
movzbl
mov
jmp
jmp
cmpb
jbe
movzbl
shl
mov
movzbl
shl
mov
mov
xor
div
mov
mov
xor
movzbl
sub
mov
mov
mov
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
or
mov
imul
movzbl
mov
imul
mov
sub
mov
mov
xor
mov
mov
sub
mov
mov
xor
and
mov
cmp
jne
mov
test
jne
cmp
jbe
mov
imul
mov
sub
push
mov
xor
mov
add
push
mov
or
push
push
mov
and
add
push
call
jmp
cmp
jbe
mov
shl
mov
jmp
cmp
jbe
mov
or
sub
movzbl
jmp
cmp
jne
cmp
jne
pushl
push
push
pushl
call
mov
mov
shr
mov
mov
and
mov
mov
or
sub
movzbl
mov
and
and
mov
mov
add
movzbl
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
shr
movzbl
mov
mov
mov
sub
mov
mov
xor
imul
mov
mov
cmp
jbe
mov
jmp
cmp
jne
mov
or
movzbl
jmp
cmp
jne
mov
mov
xor
div
mov
jmp
mov
test
jne
cmpw
jbe
mov
jmp
jmp
cmpw
jne
movzwl
add
mov
jmp
mov
test
jne
mov
test
jne
cmpw
jbe
movzwl
mov
xor
div
mov
jmp
cmpw
jbe
movzwl
mov
xor
div
mov
jmp
cmpw
jne
mov
or
or
mov
jmp
mov
test
jne
cmpw
jbe
mov
or
mov
jmp
cmpw
jbe
mov
movzwl
xor
add
push
mov
movzwl
and
and
push
call
movzbl
mov
and
xor
push
movzwl
sub
add
push
mov
or
push
call
mov
and
push
push
mov
xor
movzwl
xor
push
push
mov
movzwl
or
push
push
call
call
movzbl
push
mov
and
mov
imul
push
call
push
call
mov
and
push
call
mov
mov
add
push
mov
xor
sub
push
movzwl
imul
push
call
push
call
jmp
cmpw
jne
movzwl
push
mov
add
push
call
mov
push
mov
imul
push
mov
imul
push
call
mov
and
push
push
mov
xor
or
push
movzwl
or
xor
push
call
mov
push
mov
and
movzwl
sub
push
call
mov
and
movzbl
movzwl
or
push
mov
and
add
push
call
mov
mov
movzwl
xor
mov
imul
push
call
call
jmp
mov
test
jne
movzwl
push
call
mov
jmp
cmpw
jbe
movzwl
mov
xor
div
mov
mov
mov
mov
and
movzbl
mov
mov
xor
div
movzbl
mov
mov
movzwl
shr
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzwl
mov
mov
xor
div
movzwl
mov
shl
movzbl
mov
movzwl
mov
add
mov
mov
mov
mov
test
jne
movzwl
push
movzwl
push
push
push
call
movzwl
mov
xor
movzwl
xor
movzwl
mov
shr
mov
movzwl
shr
movzwl
cmp
jne
mov
or
mov
jmp
mov
test
jne
call
mov
mov
shr
mov
mov
add
mov
mov
add
movzwl
movzwl
mov
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
shl
movzbl
mov
sub
mov
mov
mov
and
mov
imul
mov
mov
sub
movzbl
mov
mov
mov
shr
mov
cmpb
jne
cmp
jne
mov
jmp
test
jne
call
mov
jmp
cmp
jbe
movzbl
push
mov
movzbl
or
imul
push
call
jmp
cmp
jne
mov
mov
jmp
jmp
cmp
jne
mov
or
imul
push
pushl
movzbl
push
mov
sub
sub
push
mov
add
sub
push
call
mov
movzbl
mov
imul
movzbl
mov
and
xor
mov
mov
and
mov
cmpb
jbe
mov
jmp
jmp
cmpb
jne
call
mov
mov
shr
mov
mov
add
mov
mov
sub
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
shr
movzwl
mov
xor
mov
imul
movzwl
mov
mov
cmp
jne
movzwl
shl
movzbl
jmp
mov
test
jne
push
push
push
push
call
movzbl
jmp
cmp
jbe
mov
or
movzwl
mov
shr
mov
mov
add
movzbl
mov
add
movzbl
test
jne
push
movzwl
push
push
pushl
call
mov
mov
add
movzbl
movzwl
and
movzwl
sub
mov
mov
shr
mov
movzwl
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
add
mov
mov
movzbl
mov
and
mov
sub
mov
mov
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
mov
movzwl
xor
div
mov
cmpb
jbe
movzbl
jmp
jmp
cmpb
jne
movzbl
push
call
mov
jmp
cmpb
jbe
movzbl
add
push
mov
add
push
push
movzwl
xor
push
mov
or
movzwl
add
push
mov
or
push
call
mov
xor
mov
add
mov
mov
movzbl
xor
push
mov
add
push
call
mov
sub
push
call
push
call
mov
mov
or
mov
push
movzbl
push
call
mov
jmp
cmpb
jb
mov
or
mov
jmp
cmpb
jbe
mov
or
movzwl
add
mov
mov
mov
mov
shl
mov
movzbl
xor
div
mov
mov
xor
movzbl
xor
mov
movzwl
and
mov
add
mov
mov
test
jne
cmpw
jne
push
movzwl
push
call
mov
jmp
cmpw
jne
mov
xor
add
mov
jmp
cmpw
jne
mov
movzbl
and
mov
jmp
cmpw
jne
mov
imul
movzbl
sub
mov
jmp
cmpb
jbe
movzbl
sub
mov
jmp
cmpb
jbe
mov
or
mov
imul
push
call
jmp
cmpb
jne
push
movzbl
add
push
call
mov
imul
mov
mov
and
mov
add
push
mov
add
push
mov
or
push
movzbl
push
movzwl
or
add
push
mov
imul
push
call
movzbl
movzbl
xor
sub
push
movzbl
and
push
push
movzbl
movzbl
xor
sub
push
mov
sub
sub
push
movzbl
xor
xor
push
call
mov
imul
push
movzwl
and
push
call
mov
mov
or
mov
movzbl
xor
mov
add
push
mov
xor
movzbl
xor
push
call
mov
mov
mov
and
add
push
movzbl
xor
movzbl
or
push
mov
xor
push
call
mov
jmp
cmpb
jbe
call
mov
shl
mov
mov
or
mov
imul
mov
movzwl
shl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzwl
mov
test
jne
cmp
jbe
mov
mov
jmp
jmp
mov
test
jne
mov
test
jne
cmp
jb
mov
movzwl
jmp
cmp
jne
mov
jmp
jmp
cmp
jbe
mov
movzwl
jmp
cmp
jb
mov
add
movzwl
jmp
mov
test
jne
mov
sub
mov
add
mov
jmp
cmp
jbe
mov
or
movzwl
jmp
cmp
jne
mov
jmp
jmp
cmp
jne
mov
or
movzwl
jmp
cmp
jne
mov
sub
add
movzwl
jmp
cmp
jb
mov
and
imul
push
call
jmp
cmp
jne
mov
imul
add
movzwl
jmp
cmp
jne
mov
mov
xor
div
movzwl
jmp
cmp
jne
mov
shl
movzwl
jmp
cmp
jbe
mov
shl
movzwl
mov
movzwl
mov
imul
mov
mov
mov
shl
movzwl
mov
and
mov
sub
mov
mov
sub
add
mov
mov
test
je
mov
mov
movzwl
shl
mov
movzwl
movzwl
and
mov
mov
mov
movzwl
add
mov
mov
add
mov
mov
mov
movzwl
movzwl
sub
add
mov
add
mov
mov
mov
mov
movzwl
movzwl
sub
add
mov
sub
mov
mov
movzbl
cmp
jne
mov
mov
movzwl
shl
mov
mov
mov
mov
movzwl
sub
mov
mov
sub
sub
mov
mov
test
je
mov
mov
mov
shr
mov
mov
mov
xor
div
mov
mov
test
jne
mov
movzbl
mov
mov
mov
add
mov
mov
add
mov
mov
test
jne
movzwl
sub
mov
jmp
cmpw
jbe
movzwl
sub
mov
jmp
cmpw
jbe
movzwl
mov
jmp
cmpw
jbe
movzwl
mov
jmp
jmp
jmp
mov
movzbl
cmp
jne
mov
mov
mov
add
add
mov
mov
or
add
mov
mov
movzwl
sub
mov
mov
movzwl
add
mov
jmp
mov
add
add
mov
add
mov
mov
movzwl
mov
and
mov
mov
mov
xor
add
movzwl
mov
sub
mov
mov
or
sub
mov
add
mov
mov
add
movzwl
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzbl
mov
or
imul
movzbl
mov
add
movzbl
mov
imul
movzbl
mov
xor
mov
add
movzbl
mov
or
mov
imul
mov
cmpw
jne
movzwl
mov
jmp
jmp
cmpw
jne
mov
mov
jmp
jmp
mov
test
jne
cmp
jbe
movzwl
movzbl
jmp
mov
test
jne
cmp
jne
mov
or
movzbl
jmp
mov
test
jne
cmpw
jbe
movzwl
or
movzbl
jmp
cmpw
jne
mov
mov
jmp
jmp
mov
test
jne
call
movzbl
jmp
cmpw
jne
mov
imul
movzwl
imul
movzbl
jmp
cmpw
jbe
movzwl
shl
movzbl
jmp
cmpw
jne
mov
add
movzbl
mov
movzbl
mov
mov
movzwl
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
imul
mov
mov
shl
movzwl
cmp
jne
mov
mov
jmp
jmp
cmp
jbe
mov
or
push
push
call
mov
xor
xor
push
mov
and
or
push
mov
imul
push
call
movzwl
push
mov
or
imul
push
mov
sub
push
push
mov
and
push
mov
imul
push
call
push
mov
and
push
mov
add
push
call
jmp
mov
test
jne
push
push
push
push
call
movzwl
jmp
cmp
jb
mov
mov
jmp
cmp
jne
mov
and
and
push
mov
and
push
mov
and
push
mov
sub
push
mov
and
push
mov
and
add
push
call
mov
xor
movzwl
mov
xor
push
mov
imul
push
push
call
movzwl
mov
add
push
push
push
call
call
mov
and
and
push
push
mov
or
push
call
movzwl
mov
and
push
push
push
call
movzwl
mov
xor
mov
add
movzwl
mov
or
mov
imul
mov
mov
shr
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
and
xor
movzbl
mov
shl
mov
mov
mov
mov
shl
mov
mov
shl
mov
mov
test
jne
push
push
push
push
call
movzbl
jmp
cmp
jne
movzbl
shr
movzwl
jmp
cmp
jne
mov
sub
push
call
mov
mov
and
or
push
movzbl
push
call
mov
mov
movzbl
and
mov
mov
movzbl
xor
xor
mov
movzbl
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
mov
xor
div
movzbl
cmp
jne
mov
add
sub
movzbl
jmp
cmp
jne
mov
imul
sub
movzbl
jmp
mov
test
jne
push
call
movzbl
jmp
cmp
jb
mov
movzbl
jmp
cmp
jbe
mov
mov
xor
div
movzbl
mov
shl
movzwl
mov
movzwl
mov
mov
mov
mov
xor
div
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
and
or
mov
mov
movzwl
mov
or
or
movzwl
mov
shr
movzwl
mov
or
and
movzwl
mov
or
movzwl
mov
and
mov
mov
mov
mov
movzbl
or
movzwl
cmp
jne
push
push
push
call
movzwl
jmp
cmp
jne
mov
xor
div
movzwl
jmp
cmp
jbe
mov
mov
jmp
mov
or
mov
mov
add
movzwl
movzbl
mov
movzbl
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
add
movzwl
mov
shr
mov
cmp
jb
mov
and
imul
push
mov
and
mov
add
push
push
push
call
jmp
cmp
jbe
mov
or
xor
movzwl
jmp
cmp
jne
cmp
jne
mov
mov
jmp
jmp
cmp
jbe
mov
xor
div
mov
jmp
cmp
jne
cmp
jne
call
mov
jmp
cmp
jne
mov
and
xor
movzwl
jmp
cmp
jne
push
mov
or
or
push
push
mov
xor
sub
push
call
jmp
cmp
jne
mov
xor
mov
sub
mov
jmp
cmp
jb
mov
and
push
push
call
mov
and
mov
mov
or
and
mov
movzbl
xor
mov
movzbl
shr
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
shl
movzwl
mov
shl
mov
mov
xor
and
mov
mov
add
mov
mov
and
xor
movzwl
mov
and
imul
mov
mov
xor
div
movzwl
cmp
jne
mov
xor
mov
jmp
cmp
jne
mov
xor
div
mov
jmp
cmp
jne
pushl
call
mov
mov
shl
mov
mov
mov
mov
xor
div
mov
mov
and
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
and
movzwl
mov
imul
imul
mov
mov
sub
mov
mov
shl
mov
mov
shr
mov
mov
shl
mov
movzbl
mov
mov
imul
imul
movzwl
mov
xor
movzwl
mov
shr
mov
cmp
jne
mov
mov
jmp
jmp
test
jne
cmp
ja
mov
mov
jmp
jmp
cmp
jne
mov
jmp
jmp
cmp
jne
cmpl
jae
mov
xor
divl
movzwl
jmp
cmpl
jne
mov
mov
jmp
cmpl
jne
push
movzbl
push
pushl
call
mov
jmp
cmp
jbe
mov
jmp
cmp
jbe
movzbl
add
mov
jmp
cmp
jbe
push
mov
xor
xor
push
mov
and
push
movzbl
push
call
mov
movzwl
movzbl
xor
xor
mov
mov
or
mov
mov
xor
sub
mov
movzbl
shl
mov
push
mov
xor
push
call
mov
mov
test
jne
movzbl
push
call
mov
jmp
cmp
jbe
mov
sub
sub
mov
jmp
cmp
jbe
mov
mov
jmp
jmp
cmp
jbe
movzbl
mov
jmp
mov
xor
div
mov
mov
xor
div
mov
mov
movzbl
shl
movzwl
mov
shr
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
movzbl
mov
add
add
push
mov
xor
sub
push
call
movzbl
mov
movzbl
mov
mov
mov
sub
add
movzbl
mov
imul
mov
mov
add
mov
movzbl
sub
mov
mov
xor
divl
movzbl
mov
movzbl
add
mov
cmpb
jne
call
movzbl
movzbl
xor
divl
movzbl
mov
mov
movzbl
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
mov
add
movzwl
mov
mov
mov
mov
xor
div
movzbl
mov
xor
add
mov
add
mov
mov
or
xor
movzbl
mov
add
mov
mov
add
add
mov
mov
mov
mov
add
sub
mov
mov
or
sub
mov
mov
imul
cmp
je
mov
mov
mov
mov
movzbl
mov
mov
shr
mov
mov
mov
movzbl
or
sub
mov
movzbl
mov
mov
mov
imul
mov
cmpb
jbe
mov
movzbl
imul
imul
push
movzbl
movzbl
xor
push
movzbl
or
push
call
mov
movzbl
add
mov
movzbl
or
push
call
call
movzbl
xor
imul
mov
movzbl
push
movzbl
push
call
call
mov
jmp
cmpb
jne
cmpl
jne
movzbl
and
movzbl
add
mov
jmp
cmpl
jne
movzbl
xor
sub
mov
add
mov
jmp
cmpl
jb
mov
or
movzbl
or
push
movzbl
push
call
movzbl
push
pushl
movzbl
push
call
movzbl
xor
movzbl
add
push
call
mov
movzbl
xor
mov
mov
movzbl
sub
sub
mov
add
mov
mov
movzbl
imul
sub
mov
sub
mov
movzbl
xor
movzbl
add
mov
jmp
mov
mov
xor
div
mov
mov
imul
add
mov
add
mov
mov
and
mov
add
movzbl
mov
mov
mov
mov
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
sub
mov
and
movzwl
mov
mov
add
movzwl
mov
mov
mov
imul
sub
movzwl
mov
mov
mov
mov
mov
add
add
or
mov
mov
mov
mov
mov
mov
and
test
je
mov
movl
mov
mov
mov
mov
cmp
jne
movw
movzwl
and
mov
movzwl
shr
mov
movzwl
movzbl
or
mov
mov
movzbl
shl
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
movzbl
shl
mov
movzwl
xor
sub
mov
movl
mov
mov
movzbl
movzwl
xor
sub
and
mov
mov
mov
shl
mov
xor
jmp
mov
or
sub
mov
mov
movzbl
sub
mov
mov
cmp
jne
movw
movzwl
and
mov
movzwl
sub
mov
movzwl
imul
mov
mov
mov
add
mov
mov
xor
jmp
movzbl
xor
mov
movl
mov
cmp
jne
movl
mov
xor
sub
mov
movzbl
mov
movzbl
xor
divl
mov
movzbl
movzbl
sub
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
and
movzbl
add
mov
movl
movzbl
add
mov
mov
movzbl
movzbl
sub
sub
cmp
jne
movl
mov
movzbl
sub
sub
mov
mov
movzbl
movzbl
movzbl
imul
add
cmp
jne
movl
movzbl
movzbl
or
movzbl
add
mov
mov
test
je
mov
mov
and
mov
mov
xor
jmp
mov
imul
sub
mov
mov
movzbl
movzbl
xor
sub
cmp
jne
movl
mov
movzbl
movzbl
movzbl
add
sub
cmp
jne
mov
movzbl
mov
mov
and
mov
cmpl
jne
movl
movzbl
and
mov
mov
test
je
mov
movl
mov
mov
xor
jmp
movzbl
mov
mov
test
jne
mov
mov
mov
movzbl
imul
sub
and
mov
mov
movzbl
sub
mov
xor
inc
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
shr
mov
mov
cmp
jbe
mov
or
mov
jmp
cmp
jne
cmp
jb
mov
add
push
mov
add
push
push
mov
and
push
mov
imul
imul
push
mov
imul
push
call
mov
mov
xor
div
mov
mov
xor
and
push
call
jmp
cmp
jne
mov
sub
add
mov
add
mov
jmp
cmp
jb
mov
xor
div
mov
jmp
cmp
jbe
mov
shl
mov
jmp
cmp
jne
mov
imul
sub
mov
jmp
cmp
jne
mov
sub
mov
mov
xor
div
mov
mov
imul
add
mov
add
mov
mov
and
xor
mov
mov
or
sub
mov
mov
mov
mov
and
sub
mov
mov
shr
mov
mov
sub
sub
cmp
je
mov
mov
mov
imul
mov
movzwl
mov
movzbl
movzwl
or
sub
mov
cmpb
jbe
movzbl
jmp
jmp
cmpb
jne
cmpb
jne
movzbl
movzbl
xor
add
mov
movzbl
mov
mov
jmp
cmpb
jne
movzwl
mov
jmp
jmp
cmpb
jne
movzbl
shl
mov
movzbl
mov
movzbl
movzbl
sub
add
mov
add
mov
movzbl
movzbl
and
imul
mov
movzbl
movzbl
or
add
mov
add
mov
mov
imul
movzwl
imul
mov
cmpw
jne
cmpb
jbe
mov
movzbl
and
push
movzbl
sub
movzbl
sub
push
mov
movzwl
xor
movzbl
sub
push
call
movzbl
push
movzbl
and
movzbl
imul
push
movzwl
movzwl
and
push
call
movzwl
movzbl
add
push
movzwl
xor
movzwl
sub
push
movzbl
or
mov
add
push
pushl
movzbl
xor
movzbl
sub
push
movzwl
movzbl
and
push
call
jmp
cmpb
jb
movzbl
and
sub
push
mov
xor
movzbl
add
push
call
jmp
cmpb
jne
cmpb
jae
movzbl
mov
jmp
cmpb
jbe
mov
sub
mov
jmp
cmpb
jne
movzbl
xor
divl
mov
jmp
cmpb
jne
cmpl
jne
movzbl
xor
divl
mov
jmp
cmpl
jbe
movzbl
jmp
jmp
cmpl
jbe
mov
mov
jmp
jmp
cmpl
jne
cmpw
jne
movzwl
xor
mov
imul
mov
jmp
cmpw
jne
mov
and
mov
jmp
cmpw
jbe
pushl
movzwl
or
movzbl
add
push
call
jmp
mov
test
jne
mov
sub
mov
jmp
cmpw
jbe
movzbl
xor
divl
mov
movzwl
or
xor
mov
jmp
mov
movzbl
and
sub
mov
add
mov
mov
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
movzbl
mov
movzbl
mov
imul
mov
mov
add
mov
mov
shl
mov
movzwl
shr
mov
mov
or
mov
add
mov
mov
mov
cmp
jne
push
call
mov
mov
imul
movzbl
movzbl
mov
mov
movzwl
or
and
movzbl
mov
and
movzwl
imul
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
sub
movzbl
mov
shr
movzwl
mov
and
mov
cmp
jb
mov
movzbl
jmp
cmp
jbe
mov
sub
push
mov
or
mov
add
push
mov
xor
and
push
call
jmp
cmp
jne
mov
jmp
jmp
test
jne
mov
test
jne
mov
test
jne
push
push
push
call
mov
jmp
cmp
jbe
mov
jmp
jmp
cmp
jne
mov
xor
imul
mov
jmp
cmp
jbe
mov
xor
mov
add
mov
mov
mov
xor
div
movzbl
mov
or
mov
mov
mov
xor
div
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
or
and
movzwl
mov
sub
mov
mov
add
mov
mov
movzwl
mov
or
sub
mov
mov
xor
divl
mov
mov
shr
mov
cmp
jb
mov
jmp
mov
test
jne
cmp
jbe
mov
and
push
mov
movzbl
or
or
push
movzbl
sub
push
call
mov
imul
add
mov
mov
imul
push
mov
sub
push
mov
xor
push
call
mov
sub
push
mov
or
push
call
mov
movzbl
and
mov
imul
push
push
call
mov
jmp
mov
test
jne
cmp
jbe
mov
xor
divl
mov
jmp
cmp
jne
call
mov
jmp
cmp
jbe
mov
mov
jmp
cmp
jne
movzbl
xor
push
call
jmp
cmp
jbe
mov
or
mov
imul
movzbl
mov
movzwl
mov
movzbl
mov
add
movzbl
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
mov
xor
mov
imul
movzwl
mov
mov
mov
xor
movzwl
imul
movzwl
mov
movzwl
mov
and
movzwl
add
mov
movzwl
xor
div
mov
cmp
jbe
mov
sub
mov
jmp
mov
test
jne
cmp
jne
mov
xor
div
mov
jmp
cmp
jbe
movzwl
jmp
jmp
test
jne
push
push
call
mov
movzwl
and
mov
movzwl
mov
mov
movzwl
or
sub
movzwl
mov
shr
mov
cmp
jbe
mov
sub
movzwl
jmp
cmp
jbe
mov
mov
xor
div
mov
jmp
test
jne
push
movzwl
push
push
call
mov
mov
shr
mov
mov
xor
div
movzwl
mov
mov
xor
div
mov
movzwl
xor
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
or
sub
mov
mov
and
add
mov
add
mov
mov
mov
imul
sub
mov
add
mov
mov
xor
mov
mov
mov
mov
shr
mov
movzbl
sub
sub
mov
mov
mov
movzbl
sub
sub
cmp
je
movl
mov
shr
mov
mov
add
sub
mov
mov
or
movzbl
add
mov
movzbl
and
sub
movzbl
mov
mov
movzbl
and
xor
mov
movzwl
or
sub
mov
add
mov
movzwl
add
movzwl
sub
mov
movzwl
imul
add
add
movzbl
shl
mov
mov
movzbl
add
sub
mov
sub
mov
mov
movzbl
add
mov
jmp
movzbl
add
sub
mov
add
mov
mov
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzwl
mov
and
mov
sub
movzwl
mov
and
mov
sub
movzwl
mov
add
mov
mov
mov
mov
and
add
mov
add
mov
mov
and
imul
movzwl
mov
imul
mov
mov
mov
mov
movzwl
movl
mov
mov
or
sub
cmp
je
movl
mov
imul
mov
add
mov
mov
shr
mov
movzbl
shr
mov
mov
add
add
mov
movzbl
mov
mov
movzbl
and
sub
mov
add
mov
movzbl
shr
mov
mov
sub
add
mov
add
mov
movzbl
movzbl
xor
mov
mov
xor
sub
mov
sub
mov
movzbl
and
xor
mov
jmp
mov
shr
mov
mov
or
sub
mov
add
mov
movzbl
imul
movzwl
mov
mov
mov
mov
shl
movzwl
movzbl
pop
pop
pop
mov
pop
ret
mov
push
stos
jl
add
mov
push
daa
aaa
mov
xchg
mov
pop
clc
dec
outsl
cmp
aad
fcoms
rcrl
cmp
sub
mov
or
movsl
enter
test
cmp
cs
or
sub
out
pop
mov
cmp
pmaxub
jl
pop
dec
cmp
inc
and
in
rclb
mov
push
scas
adc
mov
hlt
sub
es
inc
addl
dec
leave
pop
add
dec
add
aaa
dec
or
and
into
push
out
mov
mov
out
bound
xchg
arpl
xchg
mov
xor
xor
cli
or
sub
repz
adc
out
pop
shlb
xor
jmp
std
sbb
mov
cmp
inc
xchg
push
pop
xchg
shrb
dec
stc
mov
pop
iret
xchg
cwtl
std
jo
imul
pop
insl
stos
lea
adc
in
data16
lods
test
out
popa
cmp
loopne
enter
mov
test
inc
shll
push
xchg
pushf
in
clc
aas
cmp
adc
cmpsb
fdivs
in
jne
ret
add
pop
pop
inc
pop
insl
mov
push
nop
xor
aam
pop
push
xor
xlat
jne
sbbl
imul
popa
cmp
shl
mov
in
sbbl
lahf
push
mov
jmp
xor
ds
mull
xchg
sub
ljmp
push
dec
sbb
push
repz
ja
test
jmp
inc
ret
mov
jnp
mov
gs
push
jne
out
cmp
enter
idivl
jl
and
fnsave
add
scas
sti
cmp
pop
into
ljmp
sbb
and
cmpsl
adc
lods
lods
enter
pop
jbe
xchg
mov
mov
jmp
sub
cmp
inc
add
stc
roll
mov
mov
rcll
jae
out
in
outsl
or
adc
jo
lret
cltd
daa
dec
shl
push
and
jmp
or
cld
jecxz
fwait
les
mov
cmp
jmp
test
sub
fnsave
xchg
xor
out
lcall
decl
repz
sub
mov
mul
test
push
aas
adc
cmpsb
outsl
ret
mov
roll
bound
or
repnz
incl
cwtl
inc
pop
cs
pusha
pop
fbstp
add
ja
mov
stc
mov
mov
jno
or
jbe
mov
aas
xor
jle
push
in
arpl
cli
xor
mov
cmp
mov
dec
push
pop
leave
and
cmp
clc
push
mov
movsb
or
add
adc
in
inc
int
pop
ja
cmp
es
and
bound
das
mov
ret
or
fs
ljmp
shlb
inc
enter
pop
push
arpl
lock
orl
cs
insb
sub
mov
outsl
sub
sub
xchg
outsl
imul
xor
sbb
out
pop
mov
mov
mov
scas
cmp
addr16
jecxz
ljmp
hlt
mov
xor
repnz
daa
and
cmp
stc
mov
ss
scas
lcall
mov
popf
repz
lret
cmpsb
dec
pop
into
pop
jge
push
mov
roll
pop
and
jbe
jns
ficoms
xlat
sbb
inc
stos
loopne
iret
fidivrs
add
push
aas
into
pop
nop
push
test
cmp
jge
rol
xor
mov
ja
cmp
in
xor
xchg
sub
in
cmp
gs
dec
xor
push
mov
add
cmpb
dec
loopne
lock
pop
cmp
icebp
repnz
out
push
cwtl
jno
push
mov
fildl
mov
adc
cmp
xchg
push
sbbb
cmp
push
sub
pop
pop
jno
dec
adc
in
sbb
ss
sub
cmp
cwtl
rcrb
int3
ret
and
dec
cmp
adcb
cmpsl
subb
pop
test
in
stos
fsub
add
xor
sbb
dec
mov
out
movsl
mov
sti
pop
into
sub
mov
pushf
mov
loope
sbb
stos
cmpsl
ds
xor
rclb
rcrb
data16
and
outsb
mov
fidivl
lods
or
mov
ret
lods
fsubl
ljmp
jecxz
test
pushf
test
pop
inc
fmull
push
fsubs
in
repnz
lods
push
mov
es
clc
test
lret
cmp
xor
dec
jnp
imul
ret
les
stos
aaa
js
push
sbb
cwtl
push
movsb
sahf
jl
cli
or
out
out
aad
add
fwait
sub
dec
xchg
lcall
adc
mov
daa
sub
aam
cli
les
pop
rcrl
test
sti
cmpsl
push
leave
inc
sbb
push
xchg
cli
hlt
lahf
xchg
call
inc
mov
shl
mov
jecxz
out
fisttpll
mov
insb
or
jmp
or
out
xor
mov
jmp
adc
in
mov
repnz
xchg
dec
in
enter
das
in
inc
push
push
scas
inc
cltd
test
add
mov
into
pop
mov
clc
and
imul
stos
rcrl
pushl
stos
cmc
les
xchg
std
pop
aaa
int
lods
mov
mov
lods
xchg
pusha
icebp
add
pop
inc
cwtl
idivb
dec
sti
add
in
xchg
sar
sti
cld
cmp
sarl
cmpsl
adc
daa
int3
call
mov
iret
jp
fsub
mov
mov
and
orb
ds
xlat
bound
xchg
mov
vmaxss
gs
ss
movsl
call
mov
push
pop
add
lds
push
shlb
stc
fwait
out
mov
shll
inc
rcrl
cmp
sub
mov
push
shlb
and
fiaddl
aad
xor
jo
hlt
push
sub
ljmp
push
imul
push
xchg
jb
mov
sahf
inc
mov
dec
mov
out
cmp
cmp
in
sti
cli
sbb
dec
adc
adc
xor
gs
xlat
jnp
mov
ret
adc
shlb
lret
jb
aam
adc
fs
mov
and
jo
inc
test
mov
call
cmp
idivb
scas
xchg
add
and
mov
enter
popa
roll
stos
dec
add
cltd
test
sbb
test
imul
jg
add
or
loopne
xchg
jecxz
out
cmpb
mov
cld
push
imul
pop
fwait
xor
jns
jl
ret
pop
stos
loope
mov
rcrl
movsb
sti
mov
cmp
add
sub
cltd
in
pushf
fisttpll
and
ds
jge
push
ror
adc
push
mov
jb
mov
sub
popf
sub
fsubrs
jnp
dec
cmp
shrb
iret
test
pop
jbe
push
aas
dec
aaa
xor
jae
gs
popf
int
in
push
mov
inc
in
scas
scas
mov
dec
aas
sbb
mov
adc
pop
lret
int
mov
ret
mov
push
xor
repz
das
xor
and
add
adcl
jge
js
out
in
sar
adc
enter
push
scas
pop
mov
cmp
sbb
data16
test
dec
mov
mov
mov
mov
adc
nop
addr16
std
mov
call
inc
repz
pusha
inc
fistl
insb
outsl
fnsave
or
adc
pop
xlat
dec
popf
fistpl
xchg
mov
stos
dec
pop
jbe
xchg
sahf
push
or
mov
adc
xchg
out
jecxz
mov
fisubs
and
cmpsb
lcall
and
jmp
inc
data16
xor
jnp
xchg
or
and
mov
and
xchg
mov
pop
rcrl
dec
push
sub
stc
jp
inc
shl
sbb
add
and
mov
loopne
out
idivb
push
loop
ss
fldt
adc
sbb
inc
inc
dec
or
inc
lods
xrelease
ss
sub
jge
sub
int
gs
pop
scas
lea
movhps
stos
push
mov
sub
cmpsb
shl
lret
jmp
sbb
mov
icebp
push
in
dec
nop
mov
adc
jb
dec
mov
loop
mov
arpl
fldenv
loopne
leave
mov
cmp
mov
mov
cs
add
scas
pop
nop
ret
incl
rclb
leave
mov
adc
stos
or
sbb
stos
xor
fmulp
mov
enter
jb
call
in
xchg
and
inc
rolb
out
mov
pop
data16
cld
insl
fisubl
cld
in
pop
pop
cmpsb
dec
xchg
mov
ficoms
sub
iret
aas
mov
sbb
mov
push
loop
jl
jl
into
push
pushf
sahf
jmp
test
inc
and
lock
jb
movsl
sbb
push
lea
fcomip
inc
push
cwtl
sahf
adc
shr
inc
mov
mov
jo
inc
pop
lcall
xchg
inc
or
dec
or
push
arpl
fcomip
or
pop
in
daa
add
sub
aad
mov
mov
jo
inc
loopne
mov
mov
push
mov
bound
cld
pop
mov
and
aas
cmp
add
xchg
ss
sbb
sub
cli
cs
ret
or
aaa
mov
jl
sahf
sti
ja
adc
orl
dec
jg
push
xchg
stos
pop
jbe
sub
aaa
sub
sub
fldcw
or
inc
pop
sub
dec
mov
enter
dec
xchg
in
or
cmp
and
lret
mov
outsb
inc
aam
outsl
sbb
and
jae
shl
nop
idivl
repz
aas
jnp
lahf
sbb
pop
xchg
xchg
inc
sbb
pop
sbbb
add
mov
dec
jnp
sbb
xchg
fcmovnbe
cwtl
adc
lahf
mov
and
mov
push
ljmp
push
and
jb
daa
popl
addl
stc
insb
sub
lock
or
xorl
push
sub
xchg
jmp
mov
les
test
xor
in
insb
imul
dec
pop
pop
in
fistl
je
and
leave
mov
push
rclb
and
js
insb
clc
xor
adc
mov
in
add
ljmp
add
std
mov
dec
bound
shl
xor
in
jnp
push
xor
out
jo
clc
pop
and
jae
push
mov
sub
or
stos
cmp
jp
xor
repz
loope
mov
xchg
shl
mov
pop
inc
ret
mov
data16
mov
jne
mov
mov
stos
xchg
imul
hlt
jge
xchg
add
fildll
jp
mov
fsubrl
imul
stc
cmpl
ljmp
dec
fstps
pop
int3
add
test
popf
sarb
cltd
jmp
push
mov
push
sahf
mov
cmp
adc
add
jbe
das
loopne
lea
lock
fwait
cld
in
pop
pop
stos
adc
aad
or
pop
outsb
mov
inc
fwait
sub
std
adc
xor
movsl
lods
arpl
adcl
cwtl
dec
add
imul
inc
sbb
cmpb
out
sub
loope
out
enter
mov
pop
out
pop
sarb
stos
in
or
xor
jns
mov
out
jbe
and
xchg
xor
cmc
mov
sbb
xor
adc
outsl
jl
mov
dec
test
loop
sbb
daa
or
dec
shll
repnz
add
cmp
or
add
xor
and
mov
cmc
arpl
jecxz
stos
sbb
inc
fs
mov
out
sahf
mov
xchg
cmp
xchg
inc
push
lcall
icebp
iret
outsl
jmp
orb
push
in
push
push
call
mov
stc
xlat
pop
cmpsb
or
mov
movsb
jecxz
cmp
hlt
dec
cmpsl
xchg
mov
movl
push
je
dec
fneni(8087
outsl
imul
inc
cmpsl
fs
add
sbb
pop
lret
push
insl
push
stos
and
outsl
xchg
mov
and
mov
adc
lds
std
push
pusha
mov
pop
jl
mov
mov
and
cmp
addr16
out
icebp
rcl
movsb
aam
sbb
or
mov
xor
push
bound
mov
mov
lea
xchg
xlat
in
shlb
xchg
aad
adc
pop
mov
add
imul
stc
adc
mov
sti
loop
xchg
aaa
in
mov
js
xchg
sub
push
test
dec
cmp
or
lods
pop
and
cli
jno
aad
xchg
testb
xor
je
sub
cmpsb
hlt
push
loop
int
or
sbb
push
hlt
ss
cmp
clc
lahf
aaa
pop
movsb
push
add
adc
ja
mov
cmp
xchg
inc
adc
stos
xlat
push
mov
fimull
out
pusha
jno
ljmp
cmovbe
ss
mov
in
loop
cmp
ljmp
push
inc
xor
dec
mov
add
or
xchg
popa
pop
shll
and
cmp
mov
fwait
je
dec
in
imulb
fistps
xchg
lea
cmpsb
mov
test
hlt
shlb
inc
ds
dec
inc
dec
leave
les
je
cwtl
inc
das
push
and
notl
jns
adc
mov
mov
pusha
repnz
mov
mov
xor
aam
sbb
mov
pop
dec
loopne
insl
dec
cmp
or
ret
adc
repnz
sbb
into
cmp
imul
ret
lahf
loope
stos
test
pop
jnp
jae
jbe
mov
pop
push
call
pop
shrb
sub
pusha
fwait
int3
or
cltd
mov
fisubl
jne
lea
xchg
fucomip
dec
cli
cmp
xchg
mov
mov
std
bound
push
outsb
pop
mov
ret
sub
lods
test
mov
mov
xchg
cli
rorb
icebp
lock
sub
out
cmp
or
daa
mov
ficoms
lods
fiadds
mov
jmp
mov
push
adc
vbroadcastss
pop
mov
mov
in
sahf
loop
xchg
dec
xchg
jmp
int3
aad
fistps
push
loop
xor
lds
cmpsl
mov
mov
mov
rcl
mov
xchg
leave
pop
icebp
outsl
sahf
cmp
xor
pop
or
or
adc
jecxz
inc
daa
pop
dec
bnd
or
fidivs
sbb
xchg
pop
sarl
fimuls
mov
js
inc
movsb
dec
ror
lods
fidivrl
stos
inc
ret
popw
fs
pop
loopne
mov
mov
dec
ljmp
std
popa
loop
cmp
rorl
bound
popf
xchg
aas
cs
jb
mov
int
pop
fs
xor
subl
outsb
into
sbb
aad
je
jae
inc
jae
enter
cmp
pop
clc
rcl
lods
inc
cmp
inc
cmc
mov
sub
and
popl
bound
lcall
jp
xchg
test
cs
add
ja
add
fildll
or
bound
repnz
out
fldl
add
ret
or
add
mov
mov
dec
fndisi(8087
call
shll
iret
adc
mov
lahf
jae
adc
stos
cmpsl
jb
mov
add
and
mov
adc
mov
cwtl
ficoml
fistl
pushf
cmc
xlat
ret
and
stc
jmp
dec
pop
cmp
int
dec
loop
popa
mov
mov
mov
ja
sub
xchg
in
fsubrp
fiaddl
jecxz
or
shll
pop
outsb
daa
sti
or
cmc
adc
sahf
notb
xchg
mov
mov
or
arpl
repnz
mov
jp
iret
cs
mov
lret
inc
lock
iret
mov
repz
xor
loope
and
or
sub
iret
fiaddl
xor
add
mov
fstl
bound
jae
mov
stos
out
out
aam
mov
pop
mov
xchg
je
jae
out
mov
and
lods
mov
inc
jp
mov
jno
xchg
and
mov
int3
jg
pop
pop
sbb
mov
loope
push
sbb
mov
push
fnsave
ljmp
pop
inc
cmp
mov
jae
addb
push
pop
ja
loop
jns
pusha
cmp
mov
cmp
inc
loope
es
mov
cs
ficoms
in
or
add
mov
addr16
div
sbb
jl
jmp
mov
and
loope
test
in
shll
pop
leave
sub
mov
out
xchg
sarl
jbe
icebp
bound
hlt
sbb
sbb
ss
push
mov
dec
mov
dec
in
out
pusha
in
jb
add
pop
clc
and
aaa
pop
dec
fsubrp
arpl
jbe
or
ret
cld
xchg
jmp
mov
mov
cli
ss
jl
add
push
push
push
xor
addl
int3
lock
hlt
fistps
jbe
icebp
out
mov
sbb
mov
sbb
adc
into
cmp
mov
push
dec
jmp
jmp
mov
jmp
push
aam
sbb
xchg
lret
dec
jbe
pop
push
call
add
in
sar
jl
xchg
mov
or
cld
outsl
push
sbb
sbb
adc
jp
mov
xchg
pop
rclb
mov
jle
mov
mov
cmp
sahf
cld
out
xchg
mov
pop
cmp
jge
sub
adc
vzeroall
pop
jecxz
enter
arpl
into
jl
insl
loope
lock
sub
enter
mov
insb
xchg
into
xor
cmp
adc
mov
mov
ffreep
lds
outsb
adc
sub
adc
mov
xor
aad
pushf
daa
sub
nop
push
xchg
cmp
jb
setle
fdivrl
cmp
ss
add
mov
mull
mov
xor
in
xor
xlat
mov
inc
flds
xchg
dec
daa
xlat
pop
sarb
cmovl
cmp
mov
push
stos
test
lahf
sahf
xor
out
stc
and
lcall
ljmp
aaa
push
in
in
and
addr16
nop
cs
nop
in
add
adc
popa
push
dec
into
lret
test
je
loopne,pn
popa
mov
add
lods
adc
mov
cld
push
sahf
hlt
and
ret
pop
repnz
je
stos
xchg
pop
inc
stc
testb
ret
cld
scas
pop
loopne
mov
out
repz
arpl
inc
shlb
mov
xchg
dec
inc
loop
push
mov
xchg
add
pop
xor
cmp
xor
ss
insl
std
jg
mov
xchg
call
fidivrl
andb
stos
fwait
and
jne
test
push
cltd
ds
imul
jns
mov
push
cld
clc
cmpsb
imul
repz
mov
cmp
fucomp
adc
adc
sub
ds
lea
jbe
clc
jo
clc
enter
cld
ljmp
mov
xchg
out
and
inc
sub
ljmp
pop
fldl
fwait
ss
imul
in
cmp
test
in
cli
mov
xchg
push
add
test
sub
sbb
mov
mov
jno
xor
mov
jl
mov
clc
hlt
mov
sahf
push
push
sbbl
mov
cli
dec
dec
pop
sbb
rclb
div
and
add
div
nop
aas
lahf
jne
out
fmull
xlat
xor
sbb
dec
call
or
popf
jmp
movsl
and
popf
and
and
cmpsl
add
adc
jo
adc
es
jb
adc
rclb
mov
push
jle
jecxz
and
aaa
dec
ds
arpl
cwtl
jmp
push
enter
jecxz,pt
lcall
cmp
ja
lock
mov
add
les
pusha
jno
jnp
shrl
mov
lods
sub
xlat
in
jno
pop
mov
push
jecxz
fs
or
dec
lcall
mov
push
fs
out
jle
jnp
sbbl
sbb
outsl
mov
jnp
sahf
out
jno
or
call
pop
dec
mov
stc
rcl
nop
inc
mov
enter
fisubl
pop
pop
mov
cmp
ret
daa
je
mov
pop
cmp
sti
out
jns
lret
ror
movsb
adc
jl
jne
aas
sbb
inc
xor
lea
sahf
dec
ficoml
xor
js
cmpsl
je
adc
mov
jnp
mov
mov
mov
or
xchg
test
xor
movsb
mov
adc
ret
ds
xchg
xchg
mov
or
pop
xor
mov
push
ja
jo
mov
adc
fnsave
jecxz
dec
push
push
dec
mov
out
insl
stos
fists
xor
popa
mov
cmp
gs
dec
rorl
sub
fidivrs
xchg
push
stos
int3
and
repnz
cltd
sub
enter
jne
je
cwtl
dec
xchg
cmc
cld
aam
mov
int
cmp
call
mov
add
aam
or
fistps
mov
cld
xchg
outsb
jge
push
cld
das
adc
into
and
insb
cltd
sbb
mov
or
xchg
lret
mov
dec
addr16
push
lock
sub
fidivrs
cld
xchg
outsb
jge
push
cld
das
adc
loopne
jp
adc
cltd
sbb
imul
sub
imul
addb
jg
xchg
fcompl
pop
pusha
add
lret
bnd
mov
xchg
pop
lret
outsb
add
cmc
das
pop
or
or
je
push
fdivr
sti
rorl
jbe
add
or
mov
adc
out
lds
mov
call
adc
pop
lahf
test
lret
jecxz
pop
ret
and
and
mov
jnp,pn
pusha
and
pop
jne
sbb
pop
daa
aad
mov
test
idiv
cmc
stos
and
jno
xchg
leave
inc
fistps
pusha
pop
dec
inc
stos
inc
sub
movsb
fnclex
cmp
jmp
jg
and
jae
push
ucomiss
fsubr
sahf
mov
sbb
adcb
adc
push
pop
xor
adc
sbb
loope
imul
cmp
jne
push
xchg
fisubrs
clc
loop
sbb
iret
cwtl
or
and
sub
aaa
mov
fiaddl
mov
and
sbb
xor
mov
jns
into
ret
lock
test
sub
sub
repz
mov
movsb
cmpl
pop
in
xchg
aaa
jge
cli
pop
lock
jb
fs
mov
js
inc
cmpsb
add
push
jg
fwait
or
xor
adc
push
mov
push
xor
push
pop
mov
push
cmp
hlt
aas
stc
aaa
daa
int3
stos
xchg
lods
xor
push
inc
xchg
inc
xchg
mov
inc
int
es
sbb
lea
lods
push
int
aam
push
inc
mov
push
out
adc
scas
mov
aaa
lret
mov
dec
addr16
push
lock
or
sub
popa
mov
pop
mov
and
inc
and
mov
sbb
and
cs
repz
std
test
cld
addr16
addr16
mov
pop
fldz
cmpsb
pop
or
mov
sub
gs
imull
jge
lret
fldenv
test
mov
loope
pop
inc
addr16
or
sbb
sub
data16
out
xor
fcmovb
insl
and
push
ret
mov
cmp
jne
mov
stos
cld
xchg
ljmp
adc
sub
cwtl
ljmp
sub
dec
cmp
push
and
iret
jmp
test
sbb
movsl
test
fistl
sbb
cmp
lock
jbe
scas
jbe
add
cld
into
cmc
jns
mov
test
add
xchg
adc
out
in
sahf
sub
add
inc
push
sub
call
notl
jmp
xor
sarb
mov
insl
lock
or
insb
mov
int3
xchg
das
cs
cli
jae
jns
scas
jns
daa
mov
out
ret
lods
dec
adc
jmp
cld
mov
aas
pop
insb
popl
pop
dec
lahf
jo
inc
push
xorl
pop
sahf
xchg
lods
popa
and
pop
push
jg
je
dec
hlt
add
bound
xor
insl
imul
js
inc
stc
pop
lds
push
pop
pushf
adc
ljmp
call
cmp
rorl
jns
inc
adc
out
mov
repnz
daa
or
test
fwait
mov
jge
notb
and
insb
repnz
sbb
clc
mov
fimull
pop
imul
sbb
icebp
stc
pop
out
add
push
xlat
pop
in
jo
lods
xor
sub
psrad
popa
int3
loop
mov
movsl
lods
adc
jl
loope
xchg
pop
shlb
push
bound
movsb
push
cltd
inc
xchg
and
aad
aaa
cmp
insb
cmp
sub
scas
jmp
mov
and
mov
push
adc
or
divl
fldcw
cmp
mov
cmpsl
das
xchg
xchg
mov
lods
es
or
hlt
xchg
cmpsl
cwtl
test
out
js
js
xlat
cmp
dec
rcrl
pop
ds
shl
fimull
fldl
push
shlb
cmpb
cmc
pop
out
jle
sti
insl
hlt
push
mull
ljmp
nop
outsl
pop
xor
push
cmp
dec
ficoml
mov
add
mov
aad
mov
cwtl
mov
jbe
out
aaa
pop
jb
inc
cmp
ret
sbb
bound
je
lret
lahf
and
push
shrb
negl
ds
mov
sub
cli
mov
sub
pop
xchg
call
neg
scas
test
or
js
vmulsd
dec
leave
clc
mov
mov
jmp
das
popf
xchg
scas
mov
mov
and
inc
mov
and
test
in
imul
adc
ss
mov
cmp
jno
or
mov
cmpb
push
mov
cmc
scas
js
fdivrp
in
fists
cmp
shr
pop
outsb
mov
cli
ret
mov
pop
addl
mov
jns
add
scas
jns
aad
enter
jge
shlb
insb
inc
xchg
cmpl
daa
add
xchg
add
mov
dec
dec
inc
sbb
mov
dec
jne
inc
sub
lock
adc
sub
popa
repnz
lea
lahf
dec
xchg
jmp
lods
int3
xlat
add
mov
icebp
popa
adc
push
notl
pop
lahf
jno
mov
popa
fsub
pop
loopne
mov
xor
xorw
adc
mov
adc
xchg
xchg
and
push
in
daa
pop
and
sub
fwait
mov
push
pop
fisttpl
or
shrb
and
rcrb
fnstsw
push
cmp
mov
pushf
inc
mov
push
lock
adc
mov
mov
mov
es
aaa
in
cmc
mov
sub
ja
fisubrl
inc
inc
sahf
scas
mov
lods
push
addr16
and
lcall
mov
int
cltd
adc
push
pop
push
xor
mov
push
js
str
fldenv
jecxz
imul
cld
or
adc
mov
mov
call
ds
cmp
lds
cmc
cmp
sub
out
cmp
cmc
push
ja
mov
cmp
sbb
cmpsl
cmc
add
mov
xor
in
cmp
xchg
and
mov
adc
lods
jl
lea
cmp
mov
fiaddl
and
insb
xor
dec
sbb
repnz
ljmp
scas
mov
mov
loopne
bound
into
test
pop
push
jle
add
addr16
iret
inc
jle
adc
sub
and
and
sub
jno
mov
stos
popa
jo
sub
clc
push
xchg
lds
icebp
jo
or
js
mov
hlt
ja
sbb
and
data16
xchg
es
inc
shrd
pop
movsl
sbb
push
movq
sti
inc
stc
sub
pop
jbe
in
push
dec
stos
into
add
mov
sti
outsl
or
shlb
lcall
inc
cmp
cmp
xchg
fs
sbbb
cmp
in
out
enter
ja
add
das
cmp
clc
roll
lret
adc
inc
mov
dec
fcomps
sahf
mov
mov
das
push
mov
mov
inc
xchg
fwait
sbbl
inc
outsl
inc
cltd
mov
cli
xor
dec
nop
cmpsb
push
iret
cmp
fldl
xchg
push
lock
xor
movsb
bound
out
jmp
adc
hlt
icebp
and
inc
push
lds
sahf
scas
in
movsl
movsb
xchg
mov
mov
int3
jg
push
enter
pmuludq
rcll
xor
jge
aad
adc
cmp
imul
shrl
int
jge
insl
ficoms
test
rorb
cmpsb
xchg
jbe
scas
pop
pushf
jp
mov
xlat
mov
test
push
mov
cmp
add
pusha
aam
scas
ja
dec
push
xor
push
push
addr16
lahf
inc
xchg
jle
pop
xchg
fists
fdiv
aad
popa
sbb
test
inc
or
adcb
xchg
sub
or
xchg
inc
push
aam
mov
fidivl
lods
fidivrs
pop
jno
adc
dec
stos
mov
js
aad
mov
rorl
pop
mov
je
lds
inc
mov
mov
mov
jae
nop
out
add
adc
mov
jnp
fisttpl
push
iret
and
or
mov
sub
xchg
xchg
sahf
cmp
or
and
cmp
jnp
sbb
stos
or
fnsave
mov
iret
js
jb
fwait
dec
lret
addr16
jl
inc
inc
cmp
jb
fwait
test
jle
sarl
add
pusha
xlat
and
sbbl
push
add
mov
xor
add
xor
nop
mov
test
movsl
bnd
jb
dec
mov
addb
orl
jg
and
inc
movsb
loop
into
mov
dec
jecxz
decb
sub
repz
xor
cmp
mov
xor
push
sub
jb
or
int3
inc
xorl
xor
inc
and
cltd
mov
cmpsb
sbb
out
daa
imul
cmp
adc
mov
adc
rcrl
rorb
jno,pn
xchg
xlat
out
mov
leave
ljmp
push
mov
je
movsl
pop
popf
push
aad
movsb
add
mov
rcl
adc
test
and
shrl
or
pop
test
arpl
jb
clc
mov
fdivl
sub
mov
dec
hlt
push
adc
icebp
test
aad
inc
sbb
lea
mov
and
jl
sub
bound
push
int
imul
cwtl
jp
xchg
jmp
sbb
pop
mov
fsubrl
mov
xchg
adc
movlps
add
cmpsl
mov
and
xchg
xchg
popf
cmp
mov
inc
cwtl
and
loope
inc
lods
add
pop
xchg
cli
gs
js
jecxz
jge
loop
cmp
xor
adc
int
js
divl
pop
call
je
adc
lds
add
fldl
push
mov
sub
shl
push
imul
mov
in
sub
pop
sti
clc
vmwrite
jp
mov
sub
and
xor
cmp
add
push
pop
out
dec
add
mov
mov
pop
test
or
sbb
sub
imul
jb
push
xchg
imul
cmp
addr16
or
jge
lcall
mov
movsb
repnz
hlt
jns
cmc
ja
in
push
sarl
frstpm(287
jne
aad
cwtl
xor
repnz
test
fwait
out
or
scas
and
sub
cmp
cmp
int3
xor
xor
mul
rcrl
mov
orl
mov
xor
dec
mov
inc
das
mov
cmc
mov
lcall
cmp
fnstenv
enter
test
inc
fdivs
sahf
icebp
cmp
inc
jnp
cltd
xchg
in
or
dec
insb
mov
out
cmp
add
mov
out
hlt
mov
sbb
push
adc
jg
adc
sbb
push
jns
xchg
adc
icebp
rcll
fcoms
jmp
xchg
jbe
push
mov
mov
test
xchg
fs
rcl
ds
xor
xchg
out
cmp
aas
or
unpcklps
gs
mov
xchg
dec
imull
xor
jge
sbb
sub
jl
std
xorl
push
or
adc
cmpsb
mov
jecxz
inc
push
arpl
adc
test
mov
jae
xchg
dec
adc
jns
and
inc
sahf
add
bound
frstor
rolb
loope
in
out
push
mov
mov
mov
adc
or
sub
dec
mov
aaa
daa
pop
fisubrs
xorl
loop
leave
or
pop
mov
pop
mov
movsb
les
punpckhwd
cli
pop
stos
mov
mov
cmp
gs
sbb
pop
stc
loopne
cmp
push
iret
in
pop
dec
add
ss
testl
dec
stc
aad
data16
mov
adc
aaa
ljmp
bound
pop
pop
pop
mov
cmpsb
mov
xchg
fisttpll
mov
lret
jo
mov
adc
jge
syscall
insb
cmp
adc
push
rorl
enter
sbb
dec
cmp
addr16
and
inc
xor
nop
mov
pop
cmp
or
ret
in
ja
sar
movswl
mov
jne
dec
push
xchg
jno
and
popf
inc
xchg
fisubrs
call
loopne
xor
sbb
fisttpll
pusha
in
stos
dec
ss
dec
std
xchg
add
outsl
or
cmp
test
outsb
js
mov
fidivrs
rolb
xchg
movsl
jl
dec
dec
ds
push
lea
add
push
fdivrl
mov
mov
test
ja
pushf
ja
pop
push
shrb
mov
mov
imul
sbb
sbb
es
shll
mov
xor
push
and
pop
jns
js
aaa
cmp
or
push
adc
into
inc
sbb
std
or
imul
pop
test
lahf
xchg
fwait
mov
push
rclb
stos
sub
sub
test
cmpb
jg
cwtl
and
xlat
sub
fmuls
mov
imul
push
data16
inc
sbbb
cwtl
into
push
inc
sbb
popa
jmp
pop
mov
push
fisttpl
aaa
fcomps
orb
jmp
mov
jmp
push
add
jge
adcb
mov
jbe
ss
mov
sub
int
pop
ds
test
out
dec
add
inc
nop
mov
and
mov
mov
rcrl
xlat
and
jae
cmc
xor
mov
inc
mov
les
cmp
push
inc
jge
std
repz
sarb
mov
movsl
or
jl
dec
xor
jge
jp
mov
sub
xlat
lret
stos
pop
repnz
push
test
or
in
inc
sbb
movsb
pop
fwait
mov
jnp
leave
cmp
popl
decb
cmp
xor
mov
pop
jb
push
push
xchg
orl
mov
mov
xor
push
cld
outsl
sbb
mov
jno
push
xor
lret
int3
notl
adc
dec
js
xor
and
stos
orl
out
sub
hlt
leave
adc
into
sbb
jl
std
popf
mov
mov
test
mov
push
mov
rcrb
popa
std
xorl
push
popa
hlt
jno
stos
inc
lods
or
jmp
pop
imul
mov
mov
fisttpl
das
mov
mov
ja
sub
hlt
nop
cmp
jle
push
arpl
rolb
and
push
and
pop
mov
leave
jmp
xor
leave
cld
mov
sub
lds
out
cmp
push
push
xor
jne
mov
icebp
into
iret
jb
out
xchg
repz
sbb
jnp
daa
jnp
cmp
add
int3
rcll
xor
lahf
testl
jbe
push
data16
and
jecxz
push
aad
jg
insl
shll
daa
dec
inc
filds
int3
shl
iret
pop
test
lea
je
nop
xor
mov
out
push
pop
and
rorb
adc
stos
stos
cmp
dec
and
sub
sub
push
push
lret
insb
cmp
jl
jb
into
sbb
ds
in
sbb
ret
push
mov
leave
pop
dec
jnp
mov
sub
repnz
lcall
and
inc
xor
loop
leave
jb
add
shll
jne
es
sub
imul
addr16
or
cmpsl
sbb
lods
sub
fadds
je
out
adc
gs
adc
in
dec
scas
mov
sbb
jge
data16
daa
imul
scas
pop
push
test
repz
dec
in
stc
clc
inc
ds
enter
std
mov
movsb
fdivrs
adc
sbb
mov
jo
sahf
lods
cmp
jecxz
lcall
xchg
and
in
xchg
mov
inc
out
jle
leave
nop
jle
std
loopne
cmpsl
add
je
inc
movl
cmp
pop
lods
fwait
or
mov
out
in
ljmp
pop
xor
adc
loopne
into
test
push
sbb
insl
add
outsb
inc
out
jbe
insl
dec
push
notl
jge
mov
push
das
pop
cld
clc
jnp
ror
jo
mov
cmp
jge
and
nop
xorl
and
push
jl
mov
ds
fisttps
cmp
scas
shrb
push
in
fld
sbb
insb
pfpnacc
pusha
cmp
fnstenv
jg
xchg
jae
dec
aad
mov
mov
test
sbb
pop
pop
fnstenv
out
les
inc
jns
cmc
mov
push
cmp
sub
insl
xlat
dec
iret
mov
in
aaa
sub
or
aas
adc
dec
scas
mov
cmp
mov
in
popa
lcall
jo
enter
push
xchg
les
scas
fwait
rcr
push
or
jmp
ja
in
jo
sti
ret
mov
hlt
aaa
dec
mov
data16
aaa
fdivr
mov
ret
add
lcall
nop
mov
imul
cli
sub
xchg
pop
je
pop
insb
subb
iret
xor
cld
mov
outsl
pop
or
out
and
adc
push
and
adc
aad
test
rorl
outsl
or
mov
popa
push
into
xor
lods
xor
lret
shl
fwait
scas
inc
sub
and
xorb
mov
pusha
mov
dec
gs
push
hlt
xchg
xor
cwtl
jno
adc
mov
inc
rol
pop
ss
data16
pop
or
mov
jg
fldl
cltd
adc
out
jl
adc
sub
mov
cmp
out
mov
mov
xor
in
push
jbe
test
pop
and
mov
jle
jbe
jbe
daa
js
xor
iret
push
imul
push
mov
cmp
in
imul
jo
push
push
sub
ret
mov
jbe
jmp
imul
loopne
clc
fs
inc
pop
out
or
shrb
insl
aas
jae
ljmp
fs
insb
movsl
xchg
cmp
imul
push
or
push
rcll
pop
out
sbb
sti
inc
adc
xlat
repnz
push
push
insl
mov
lahf
dec
ja
pusha
outsb
mov
mov
xchg
cli
into
sbb
iret
movsl
ficoms
xchg
xor
push
lods
stos
mov
push
lods
bound
inc
jbe
outsl
adc
or
jb
out
mov
mov
fucomip
pop
dec
int3
sbb
cmp
out
call
sar
shll
pop
scas
xchg
mov
sbb
xlat
lahf
add
int3
push
jo
mov
sub
mov
ja
daa
mov
adc
iret
dec
sub
and
fwait
btsl
mov
cmpl
outsb
mov
inc
add
ds
sbb
xchg
sar
xchg
push
in
dec
xor
inc
jge
mov
jne
pop
popa
fsts
scas
mov
mov
test
pop
sub
fdivr
testb
sbbb
cmp
adc
pop
loopne
adc
add
and
out
sbb
loope
xlat
test
pop
adc
out
ja
dec
add
cld
mov
pop
outsb
bnd
jno
cwtl
popa
mov
cmp
out
cmp
fcomip
inc
inc
imul
mov
adc
sbb
in
add
jb
cmp
gs
xor
pop
and
pop
inc
cwtl
scas
fiaddl
dec
icebp
cmp
ficompl
out
daa
mov
push
test
in
into
adc
mov
mov
push
frstor
in
mov
mov
mov
sub
arpl
int
out
dec
dec
mov
jg
xchg
dec
cmpl
dec
cmp
sbb
sub
repz
sub
aas
pop
cmp
xor
mov
aad
cmpsb
call
fstl
and
out
iret
int
fistpll
cmp
sub
push
add
pop
push
jnp
out
push
pop
lods
dec
ret
or
inc
enter
push
jo
push
rclb
or
subl
xchg
stos
xchg
movsb
inc
mov
dec
scas
lock
clc
faddl
or
cltd
filds
jne
add
add
pop
adc
xlat
scas
orb
xor
xor
lea
jo
push
imul
ret
pop
mov
mov
test
shlb
push
data16
loopne
shlb
pop
xchg
xlat
jbe
fcomps
xor
mov
xchg
jg
jecxz
cmp
push
fsubs
outsb
mov
hlt
insl
mov
data16
movsb
push
lods
outsl
into
cmp
rcl
and
loopne
sbb
inc
arpl
push
pushf
scas
popa
dec
cmp
xor
adc
pop
mov
fists
inc
lds
out
adc
insl
and
cmc
test
pusha
xor
push
push
jmp
jnp
xor
es
rolb
bnd
out
aad
ret
mov
add
movsb
jo
das
imul
je
cltd
rcrb
adc
sti
or
pop
pop
xor
xlat
xchg
and
cmp
loopne
sbb
mov
mov
push
mov
sbbl
jae
insl
push
pusha
xor
icebp
jmp
mov
sub
std
pop
es
inc
stos
shll
loope
lret
imul
jo
fwait
or
pop
subb
pop
or
into
aad
outsb
sbb
mov
push
lcall
bound
adc
ret
lds
out
jbe
push
xchg
cmpsb
push
sbb
mov
sub
sub
bnd
dec
mull
jmp
rcll
push
pop
adc
add
fldenv
fwait
xchg
pop
cli
jle
popf
sbb
or
pop
out
inc
mov
push
dec
mov
mov
stos
mov
push
repnz
cwtl
xchg
and
pop
inc
cltd
jno
xchg
movsb
and
inc
mov
xchg
ficompl
jecxz
push
mov
fistl
imul
rorl
pop
loop
dec
sbb
movl
int3
cmp
xchg
jmp
arpl
xor
in
xchg
pop
xlat
cmp
push
mov
jns
jbe
adcb
adc
pop
dec
pop
ret
cld
push
pop
out
jle
push
out
lret
push
inc
sbb
jmp
es
lock
mov
xchg
imul
andl
cmp
in
dec
inc
or
sub
sbbl
adc
adc
mov
and
mov
xchg
sbb
out
out
imul
jl
aaa
cmp
stc
or
lock
fstp
push
call
lods
in
xchg
addr16
out
iret
maskmovq
testl
sub
push
jecxz
pop
sbb
jns
sbb
hlt
push
mov
fmul
fistl
lret
sub
movsl
push
pop
push
pop
pop
hlt
xchg
mov
cmpb
cltd
adc
test
pop
repz
andb
adc
dec
in
repnz
push
sbb
push
xor
mov
push
sbb
ljmp
test
insb
in
data16
andl
inc
popa
mov
jmp
fwait
repz
daa
mov
adc
pop
jb
ja
test
out
mov
or
ret
fwait
aad
jne
pop
das
push
out
cmp
imul
xchg
jmp
gs
iret
mov
rorb
jg
sub
mov
adc
movsl
mov
sub
or
push
js
repz
ss
cmp
push
adc
xor
cmpsb
inc
lret
popa
stos
cli
inc
sub
nop
pop
mov
outsb
jecxz
in
ret
lret
jmp
aam
jne
push
frstor
jl
jne
into
arpl
cld
dec
fbld
mov
or
loopne
daa
es
lods
rclb
mov
and
aad
xor
xrelease
lea
pop
insb
out
mov
mov
lods
test
and
mov
lds
lods
and
bound
call
aas
aam
inc
inc
jo
and
push
xchg
mov
lcall
or
mov
leave
push
aaa
cmp
cmp
gs
mov
push
and
leave
enter
adc
sti
outsb
mov
cmp
jle
inc
fs
fisttps
imul
dec
scas
and
inc
mov
test
sub
aad
push
xor
jecxz
dec
sbb
jns
jle
imul
lar
ret
mov
test
or
in
lcall
outsb
popl
inc
sbb
cld
ss
mov
mov
mov
hlt
iret
fdivs
xor
pop
addb
sbb
or
adc
dec
adc
adc
fwait
pop
sub
enter
js
sbb
cmp
add
sub
fcmovbe
repz
into
mov
arpl
jp
adc
jmp
jmp
gs
scas
adc
enter
pop
sbb
xchg
hlt
int
pop
and
pop
or
ret
jbe
call
nop
rorb
push
xorb
lret
gs
cmpsl
inc
cmp
cmp
movsb
add
decl
cmp
adc
mov
jecxz
mov
ret
push
dec
loop
cwtl
jbe
shll
sahf
stc
pop
fdivrs
in
or
scas
imul
dec
cmp
xor
outsl
cwtl
mull
aam
lock
dec
push
dec
fistpll
cmp
and
int
cltd
fsubr
jg
or
or
and
sbb
rorl
adc
rcll
mov
testl
sub
cld
push
cmpsb
loope
out
pop
dec
mov
inc
mov
adc
in
mov
movl
inc
add
mov
clc
push
mov
sldt
mov
adcl
add
add
addl
inc
cmp
add
mov
add
add
dec
mov
jnp
push
mov
inc
jns
clc
mov
add
inc
cmp
add
add
add
mov
mov
dec
dec
inc
inc
mov
dec
add
movzwl
mov
inc
mov
mov
clc
clc
mov
mov
inc
mov
lmsw
mov
mov
mov
push
mov
push
push
add
push
lmsw
clc
cmovne
mov
orl
mov
clc
inc
push
dec
inc
dec
mov
add
mov
clc
clc
inc
inc
mov
add
mov
add
dec
addl
str
mov
mov
mov
mov
clc
mov
mov
mov
orl
xorl
inc
mov
push
sldt
mov
inc
dec
orl
jns
mov
mov
clc
add
clc
mov
mov
dec
push
inc
add
mov
mov
inc
mov
jnp
addl
mov
inc
dec
dec
mov
dec
mov
inc
clc
dec
add
mov
add
inc
mov
mov
add
mov
push
add
orl
push
mov
orl
mov
mov
dec
mov
add
orl
psubb
mov
mov
mov
dec
mov
mov
add
push
push
inc
inc
movzbl
inc
add
add
add
clc
mov
addl
add
add
mov
mov
push
add
mov
add
xorl
adcl
movzwl
cmovge
mov
dec
mov
dec
dec
add
mov
inc
mov
xorl
mov
mov
inc
add
add
mov
inc
add
orl
mov
dec
xorl
mov
add
add
mov
clc
mov
mov
addl
mov
mov
mov
dec
add
clc
mov
mov
add
mov
mov
clc
mov
push
movzwl
mov
inc
mov
clc
dec
jno
mov
push
mov
clc
mov
jnp
add
andnps
add
dec
push
dec
mov
mov
add
inc
mov
andnps
orl
add
mov
mov
push
mov
orl
add
dec
mov
mov
mov
mov
inc
push
dec
mov
mov
add
mov
mov
mov
add
clc
clc
add
mov
mov
add
mov
mov
mov
add
mov
mov
add
dec
inc
mov
mov
jns
add
mov
xorl
inc
push
mov
andnps
add
mov
cmp
mov
push
orl
cmovne
mov
dec
xorl
jno
push
dec
addl
mov
mov
mov
mov
add
add
push
orl
orl
mov
add
inc
add
inc
mov
mov
mov
push
clc
orl
add
mov
mov
inc
mov
dec
clc
add
dec
mov
psubb
add
orl
push
movzwl
add
add
push
mov
mov
add
addl
clc
mov
movzwl
cmovge
push
push
push
addl
add
dec
inc
inc
add
mov
dec
mov
mov
mov
mov
mov
add
add
dec
add
jns
mov
mov
orl
mov
dec
cmovne
addl
mov
dec
add
mov
clc
mov
add
add
push
add
push
clc
mov
inc
cmovne
addl
mov
add
adcl
mov
dec
mov
inc
mov
inc
add
addl
mov
add
add
push
push
inc
mov
mov
addl
dec
mov
add
mov
push
mov
mov
dec
clc
dec
add
mov
cmovne
mov
add
push
mov
add
dec
push
mov
jns
movzbl
mov
mov
clc
addl
orl
clc
clc
mov
mov
mov
clc
mov
add
sgdtl
mov
clc
dec
add
mov
mov
mov
mov
mov
mov
inc
add
mov
addl
push
dec
inc
mov
sgdtl
inc
mov
dec
clc
mov
mov
sgdtl
mov
pmulhrw
dec
orl
mov
mov
mov
add
orl
dec
xorl
jns
movzwl
dec
clc
inc
clc
mov
mov
add
add
add
dec
clc
add
mov
mov
inc
clc
cmovge
clc
push
sgdtl
xorl
mov
mov
mov
mov
push
add
dec
xorl
push
push
mov
push
mov
dec
mov
clc
mov
mov
mov
mov
jns
orl
mov
mov
movzbl
clc
mov
mov
add
mov
jns
clc
mov
mov
mov
inc
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
inc
mov
inc
addl
clc
dec
inc
add
add
clc
jno
push
mov
dec
clc
mov
mov
add
mov
dec
mov
clc
mov
mov
add
mov
clc
add
xorl
add
add
add
mov
mov
mov
add
clc
mov
inc
add
mov
mov
mov
mov
addl
mov
mov
mov
mov
add
dec
clc
mov
mov
xorl
add
mov
add
mov
movzbl
mov
mov
orl
mov
mov
clc
jno
add
orl
add
inc
clc
add
mov
cltd
pop
movsl
shrb
jns
arpl
das
cmp
xchg
push
sahf
psubsb
jne
add
test
cmc
add
popa
repnz
addr16
xchg
faddl
sbb
int
or
xchg
mov
xchg
jg
or
xor
sub
mov
cld
mov
cmp
dec
fdivr
jns
add
inc
mov
ja
sub
cmp
cltd
js
outsb
std
cs
outsb
xchg
fsts
pop
xor
mov
fs
fmul
rcll
fdiv
jmp
test
leave
out
pop
mov
les
jnp
into
add
lcall
or
and
mov
notl
xchg
enter
hlt
mov
rcl
jg
jo
inc
lods
pop
push
outsb
loop
std
lock
pop
out
bound
sbb
adc
xchg
loopne
jae
and
inc
xchg
or
jno
pop
dec
ljmp
sti
sub
sub
sub
add
cmp
int3
pop
inc
mov
cmp
lods
cmp
call
leave
or
gs
pop
gs
call
jl
inc
lahf
fidivrl
xchg
pop
lss
jle
jne
sarl
cmpsb
and
push
mov
test
les
inc
mov
inc
mov
fsubp
das
sbb
ja
mov
xor
and
mov
cld
je
and
or
test
xor
aad
inc
mov
jb
rcll
cmp
pop
push
sbb
je
das
sbb
or
adc
add
lods
or
pop
xchg
and
xchg
xchg
push
inc
and
add
sbb
adcb
nop
shr
hlt
ja
add
jnp
push
xchg
inc
dec
xchg
xlat
test
inc
fmull
stos
in
mov
aam
jmp
push
inc
fwait
xor
xor
mov
pop
or
jmp
scas
adc
push
shrl
pop
cmp
daa
ja
cmp
jmp
mov
jg
pop
mov
sti
ja
push
testb
mov
xchg
cltd
xor
jge
stos
mov
and
fisttpl
add
inc
rcl
lret
sarl
push
jl
mov
jnp
jp
dec
sbb
push
imul
fs
dec
popl
lods
ljmp
bound
jp
dec
pop
repz
repz
mov
xchg
jp
jl
and
jecxz
sbb
out
push
jnp
mov
jbe
lea
rol
jo
popf
aad
add
dec
fidivrl
inc
add
and
pop
push
jb
stc
mov
inc
in
mov
sbb
insb
dec
dec
mov
fcoms
fbstp
sbb
rolb
clc
pop
arpl
and
pop
cmp
mov
fisubrl
test
sbb
push
adc
inc
mov
push
adc
xorb
xchg
cltd
and
es
les
mov
mov
cmp
or
dec
aas
std
sbb
rorl
test
lods
out
pop
and
xlat
ret
and
dec
xor
push
sbb
popa
out
in
add
loopne
divl
sbb
movsb
cs
lar
js
or
ljmp
xor
scas
jl
cmp
xor
dec
mov
enter
and
sub
testl
add
xchg
dec
cmp
aas
mov
pop
xchg
xchg
jno
mov
nop
mov
mov
ss
pop
les
out
push
push
xor
js
lock
dec
movsb
cmpsl
shll
mov
xor
mov
inc
jecxz
mov
aam
cmc
pop
inc
mov
mov
mov
je,pt
imul
and
and
mov
add
dec
sbb
jmp
cmpsl
push
mov
pop
loope
mov
jne
iret
enter
jle
mov
jo
push
xorl
daa
and
sarl
mov
lods
sahf
mov
out
xchg
shll
pop
push
aas
lret
and
jo
test
mov
sbbl
cmp
shll
lock
or
in
bound
dec
push
repz
mov
out
xchg
movsl
dec
jge
out
stos
leave
enter
jl
jmp
or
jae
cmp
mov
nop
call
xor
imul
scas
mov
iret
lcall
leave
fldenv
mov
repz
in
jg
and
inc
rolb
ds
mov
addl
push
test
insl
adc
enter
outsb
lcall
lret
ljmp
sbb
mov
and
cltd
mov
cmp
outsb
lret
stc
jmp
inc
mov
pusha
ret
insl
push
vmovlps
xchg
insb
lret
push
adc
cmp
sbbb
dec
movsl
xchg
sbb
pop
sbb
cmpsb
repz
mov
mov
lcall
sti
xchg
xchg
xlat
imul
movsb
mov
in
outsb
loopne
pop
xchg
lcall
hlt
dec
pop
popf
pop
arpl
ds
out
lock
and
mov
mov
icebp
hlt
loop
dec
fildl
stos
cmpsb
adc
or
inc
jns
sbb
jno,pn
movsb
jo
pop
xchg
addr16
mov
add
adc
test
int
inc
jle
rclb
arpl
sbb
mov
and
cmp
cmp
push
pushw
test
dec
clc
or
in
jns
mov
push
adc
daa
dec
dec
mov
sub
or
sub
pop
aas
push
mov
xchg
mov
cld
ljmp
iret
imul
mov
scas
shrb
mov
sahf
ret
daa
adc
mov
jbe
pop
bound
aas
mov
or
mov
sahf
push
repnz
adc
into
xor
and
inc
subb
into
jge
out
add
popf
rorb
mov
dec
pop
push
push
enter
pop
pop
imul
mov
mov
in
repnz
add
sub
push
gs
loop
mov
inc
xor
clc
mov
add
jl
call
mov
mov
xor
lret
push
add
xchg
insb
inc
dec
loopne
cmpsb
cld
mov
lods
std
out
sbb
pop
fwait
shrl
cli
pop
mov
inc
pop
jns
jge
aam
xchg
sbb
in
inc
mov
or
mov
sbb
insl
xor
sahf
cmp
inc
sar
push
adc
arpl
ja
sbb
push
lret
mov
stos
addr16
mov
push
mov
inc
xor
daa
jnp
fnsave
jns
pop
lds
jmp
push
stos
pop
xor
dec
ljmp
adc
data16
jbe
adc
repnz
lea
push
xor
jns
daa
out
in
rcrb
rcll
or
in
jbe
cs
adc
insl
shll
mov
and
pop
data16
stos
and
jne
mov
mov
loope
jne
push
push
inc
sahf
in
and
mov
shrl
notb
push
xchg
je
in
add
adc
jo
iret
rdtsc
mov
lahf
sti
lock
popf
int3
cltd
pop
xlat
push
cmp
push
dec
or
add
addr16
aaa
pushf
enter
mov
lods
push
sub
gs
and
add
pop
add
dec
fnstenv
int3
sbb
add
stos
jmp
loopne
mov
jae
cmpsb
lds
mov
inc
ljmp
fdivp
inc
lret
out
mov
inc
bound
addr16
stos
jmp
dec
cmp
pop
adc
and
or
and
outsb
jl
sub
stc
rcll
sahf
sbb
push
mov
cmp
cltd
xchg
aam
pusha
mov
sahf
mov
ss
dec
xor
lods
lods
dec
mov
in
jecxz
scas
das
jb
xlat
mov
into
loope
push
xchg
mov
popf
cmp
jl
or
rcrl
pop
int3
cmpsb
clc
inc
addr16
fwait
pop
shlb
add
mov
add
jmp
ret
loopne
dec
fsubrs
push
mov
inc
xchg
pop
xchg
clc
out
mov
sbb
push
or
push
sahf
or
pop
pushf
nop
cmpsl
jg
pop
movsb
jg
push
jl
sbb
lods
mov
push
mov
in
out
mov
negb
mov
mov
sub
fistl
mov
lcall
cmp
and
data16
and
inc
ret
xchg
aaa
faddl
out
fstpt
push
sub
mov
mov
std
insl
out
lds
push
pusha
faddp
rep
mov
cmpsb
push
popf
mov
aas
lahf
cmp
stos
mov
or
xor
sbb
movl
es
jae
mov
leave
ja
xchg
and
rorb
aaa
pusha
fldl
into
out
popf
aaa
sbb
push
dec
fisubs
inc
int3
mov
sbb
dec
test
xchg
ja
xchg
xor
xchg
or
xchg
or
push
scas
lods
int3
add
jnp
fcoms
aas
fimull
adc
jge
in
mov
pop
push
fldt
cmp
sub
xchg
mov
bound
jmp
cmp
xchg
scas
cli
adc
ljmp
fnstsw
jne
and
out
jno
addr16
rorl
test
push
mov
inc
xchg
imul
pop
rcrl
lcall
ljmp
mov
scas
hlt
cli
inc
push
fistpll
in
pop
dec
mov
mov
sarb
xchg
and
ss
fadds
dec
negl
rorb
sub
in
push
pop
mov
shlb
out
es
fbstp
sub
imul
mov
sub
loopne
pop
lcall
rorb
cmp
pop
rol
hlt
sub
cmp
mov
sub
push
cmp
mov
add
shll
pop
xor
jl
cmc
stos
sub
mov
in
xchg
pusha
hlt
int3
mov
cwtl
inc
jg
lahf
mov
aam
lret
sub
adc
mov
pop
xchg
or
stos
and
mov
xchg
cmp
xchg
mov
mov
and
stos
adc
jnp
jne
xor
xchg
je
dec
jbe
mov
ja
shll
test
hlt
jl
mov
test
lcall
fcomp
pop
adc
cltd
xchg
repnz
mov
mov
das
test
jns
lock
push
pop
xor
imul
sbb
sar
push
jl
imul
fildll
in
hlt
pop
dec
pop
sbb
out
push
arpl
insl
outsl
outsl
dec
pop
mov
imulb
pop
jne
xor
jbe
in
push
ficompl
lods
cmp
mov
sahf
mov
jb
daa
outsl
imul
inc
clc
jb
mov
adc
pop
das
leave
divl
subl
mov
lock
sub
shl
lods
cltd
lret
jnp
mov
jnp
loop
sbb
pop
xchg
repnz
dec
add
cmpb
int3
and
sar
mov
adc
stos
ficompl
rorb
push
fisttpll
in
adc
mov
fnstcw
jb
adc
rorl
out
inc
jnp
in
fildl
in
out
stc
shrb
sbb
push
inc
add
cs
pop
pop
jp
test
ds
xchg
int3
stc
in
mov
je
push
xor
iret
pop
pop
cli
and
xor
sbb
and
mov
add
mov
bnd
fidivs
mov
cmpsl
xchg
js
fists
sub
out
faddl
mov
add
loope
rorl
adc
mov
xlat
stc
fdivrl
pushf
jp
mov
jge
filds
mov
and
or
jl
out
push
xor
fildl
dec
dec
sbb
adc
aad
inc
das
and
int
sgdtl
call
je
jnp
mov
das
jne
cmp
mov
mov
idivb
mov
sbb
or
jmp
out
inc
out
adc
call
adcb
fldcw
or
sbbb
mov
push
add
js
mov
test
fstp
mov
fdivrp
mov
ljmp
adc
push
dec
cltd
adc
sbb
cmpsb
lcall
insb
mov
push
push
cmp
add
mov
dec
fistpl
xor
xchg
int
insb
adc
bnd
arpl
pusha
shll
sub
pop
adc
adc
push
mov
out
jp
xchg
repz
out
dec
movsl
mov
adc
dec
xor
icebp
bound
jnp
test
dec
pop
xchg
mov
aaa
xchg
mov
xor
push
lahf
add
xchg
push
sbb
and
aaa
mov
sbb
pop
jecxz
inc
xchg
int
into
mov
sarb
ljmp
push
lods
inc
pop
int
or
scas
lock
mov
cmpsl
fdiv
or
stos
mov
inc
push
std
mov
nop
fwait
mov
das
fidivl
hlt
jae
mov
dec
cmp
sbb
pop
ficoms
jmp
mov
mov
aas
sarb
iret
cmpsl
inc
mov
sbb
jae
loope
lock
lahf
mov
add
pop
mov
inc
cld
mov
mov
test
insb
inc
or
fiadds
imul
adc
stc
and
mov
cmp
sarl
or
and
or
inc
test
lcall
les
jg
dec
sbb
mov
int3
cmp
dec
aaa
jl
and
dec
std
and
subl
push
xchg
aad
leave
mov
out
faddl
in
jg
cmc
in
rcr
xchg
and
call
add
das
add
mov
or
popa
or
daa
jo
sub
leave
pop
lahf
into
xchg
mov
push
cmpsl
fcoml
adc
sti
add
mov
loopne
fwait
das
sahf
fmulp
mov
bound
aad
sub
push
stc
out
les
int3
pop
repz
inc
test
lods
jmp
xor
lcall
pop
dec
popa
jns
lds
int3
jbe
lock
jle
aaa
dec
push
orl
out
decb
push
jne
out
call
push
jmp
pop
sahf
jbe
jb
mov
lcall
mov
mov
clc
dec
cld
pcmpgtb
inc
ret
jnp
lcall
hlt
clc
or
or
shll
loop
in
jae
add
inc
push
push
hlt
sub
inc
mov
or
cmpsl
sub
loope
ret
daa
mov
sar
pop
fidivl
lahf
iret
out
and
dec
dec
imul
mov
xor
adc
adc
mov
jns
lods
pop
test
xorb
mov
int
test
jg
dec
into
daa
movsb
fisttpl
xchg
cmp
lods
movsb
divb
in
inc
das
dec
adc
mov
movsl
in
sbb
notb
xor
sub
loopne
ja
fwait
popa
ss
loop
movsb
cmpsl
test
jae
mov
mov
mov
leave
sahf
repnz
sub
lcall
js
dec
mov
and
scas
cmpsl
fxsave
ja
aam
inc
leave
push
push
adc
mov
lret
shlb
imul
in
xor
pop
push
jb
dec
cmp
arpl
pop
ret
test
push
sbb
shlb
scas
rcrb
or
dec
pushf
bound
cltd
push
mov
lods
mov
movsl
lcall
cs
in
push
gs
fs
repnz
mov
or
pusha
scas
rcll
push
jb
pop
scas
adc
clc
mov
push
dec
jmp
dec
mov
lds
into
sbb
lahf
ss
mov
ja
test
xor
pop
rolb
outsl
jg
inc
je
and
aaa
sbb
xchg
mov
adcb
addr16
or
pop
jae
bound
dec
in
inc
in
add
adc
into
iret
xor
sbb
add
mov
sbb
jp
shll
stos
popa
cmp
and
in
in
icebp
sub
inc
jl
mov
ret
xchg
stos
shr
sbb
out
iret
push
sbb
sub
jne
mov
outsl
dec
inc
roll
mov
shrl
mov
jnp
pop
jg
mov
cmc
ficomps
mov
fstpt
outsb
ret
scas
aas
and
jb
test
rcrl
out
pop
sbb
sbb
sub
dec
pop
inc
adc
repz
inc
cmpsb
test
cmp
pop
mov
mov
cmc
xchg
pop
and
lcall
lcall
dec
cltd
lods
mov
jle
add
ret
mov
mov
loope
in
out
cld
dec
out
mov
daa
in
jle
mov
and
pop
je
xor
add
and
xor
out
movsb
push
es
dec
inc
sar
xor
pop
iret
les
lcall
cli
mov
pop
stos
leave
sbb
cld
cli
iret
and
xchg
add
out
mov
push
xor
sub
mov
pushf
adc
mov
cmc
push
jp
sub
enter
push
sti
pop
xchg
or
inc
sbb
into
push
pop
inc
sub
mov
jle
push
fwait
ljmp
push
add
xchg
jmp
jmp
fbstp
or
in
inc
clc
sbb
jns
popa
enter
std
mov
add
fsubl
fisubrs
xor
adc
and
sbb
jae
adc
jle
push
scas
call
lcall
je
mov
mov
jmp
or
cmc
xchg
mov
and
xchg
fcoms
jl
mov
outsb
or
inc
push
stos
xchg
adc
div
add
arpl
fidivs
lea
lcall
fistpl
imul
rcrb
mov
movsl
dec
push
adc
ret
mov
loop
mov
dec
or
inc
push
ret
jo
popf
sub
lahf
subl
pop
aaa
or
nop
in
stos
jae
jnp
mov
cli
push
clc
aaa
sub
mov
sub
jge
hlt
cmp
jnp
sbb
test
cmpsb
in
xor
lahf
sbb
mov
xchg
cmpsl
mov
popf
sub
xlat
mov
ficompl
sub
scas
jbe
popl
pop
inc
jmp
or
xor
loop
pusha
hlt
xlat
fbstp
ljmp
add
mov
cmp
or
data16
repz
xchg
lret
xor
sub
push
sub
pop
rcr
mov
and
fnstcw
sbb
mov
popa
xchg
aaa
shrl
pop
out
pop
cmpsl
pop
cmp
push
repz
lcall
shr
mov
mov
clc
jecxz
push
mov
movsb
out
imul
js
cmp
fisttps
inc
dec
sbb
fcoms
popa
jnp
adc
sub
push
enter
lea
add
xchg
shr
pop
cmpsb
jl
fs
je
imul
push
je
std
add
pop
inc
jae
mov
sbb
int3
lds
fnstcw
sbb
pop
rorb
lret
daa
dec
add
pop
add
xor
in
pop
dec
data16
ljmp
pushf
mov
sub
push
mov
and
mov
jecxz
orb
in
scas
int3
sub
imul
push
daa
sub
or
and
ret
aaa
dec
xchg
xchg
shll
rcr
call
adc
xchg
jae
sub
lea
out
jl
mov
xlat
jge
add
jecxz
xchg
jne
fstp
fsubs
push
dec
pusha
push
rolb
leave
addr16
lcall
jecxz
jmp
arpl
ja
adc
es
jge
mov
outsl
sti
xor
js
inc
fstps
cmp
sub
loopne
call
cld
or
push
sbb
mov
mov
and
ss
dec
pop
nop
addr16
mov
in
pop
insb
sub
cmp
ljmp
loop
hlt
and
sbb
inc
dec
gs
dec
pop
shr
mov
int3
ljmp
push
loopne
daa
inc
jb
push
and
sbb
pop
mov
sarl
pop
nop
pop
jecxz
cmpsl
addr16
push
iret
fucomi
xor
pop
arpl
aad
push
pop
lret
sub
fnsave
adc
fiaddl
and
mov
adc
scas
ja
pop
pop
inc
lods
push
jb
gs
loop
xchg
push
iret
imul
mov
xchg
adc
outsl
xchg
cmp
fcoms
cld
sub
pop
add
and
add
mov
mov
mov
lock
adc
push
js
push
call
push
cltd
enter
ret
adc
add
xchg
sub
arpl
xchg
je
cmpsb
or
xor
push
std
ss
xor
push
add
outsb
xor
cli
cmp
imul
enter
mov
inc
ss
test
add
jne
cmp
xchg
hlt
repnz
inc
and
add
adc
push
outsb
inc
es
dec
psllq
nop
add
nop
sar
gs
sbb
scas
cmpl
mov
shrb
cmpsl
jg
or
jns
lods
in
popa
push
push
js
dec
mov
add
lds
ja
lcall
aad
xchg
inc
ror
mov
nop
inc
adc
jb
int
ret
scas
lea
stc
ret
jo
cmp
test
push
jns
nop
das
or
fstl
in
pop
dec
cmp
dec
xor
fldenv
fadds
inc
out
mov
imul
insb
cmp
push
iret
nop
cmp
and
mov
mov
pop
xchg
addl
in
xchg
aas
adc
lahf
adc
sub
push
mov
mov
inc
jnp
test
pop
mov
xor
dec
es
pop
hlt
jno
addr16
mov
mov
adc
cmp
in
shrb
mov
daa
in
mov
push
mov
lock
or
xchg
popf
xchg
push
mov
push
cs
gs
pusha
repz
mov
daa
pop
out
jns
adc
leave
sti
es
adc
cmp
cmpsb
and
push
cmpsb
sarl
sbb
mov
sub
sbb
leave
rcrb
and
ss
sbb
test
fwait
sub
lods
outsb
movsb
lock
rolb
imul
xchg
mov
push
mov
hlt
xor
cmp
sbb
mov
daa
adc
cmp
push
and
jne
sahf
jmp
testl
or
push
insl
rcr
inc
aas
pusha
addr16
shrl
xor
fistpl
je
test
lods
ja
ljmp
ss
xchg
jle
sbb
lahf
iret
ss
rolb
xchg
hlt
xlat
cwtl
cmc
nop
movsl
inc
in
movl
pop
subl
pop
mov
rep
fildl
lret
pop
xchg
adc
jmp
push
jbe
mov
adc
cltd
and
or
xlat
es
hlt
call
push
mov
repz
pop
mov
mov
lds
push
pop
sbb
aad
test
jge
inc
gs
insl
lods
add
mov
fwait
es
pusha
and
ja
into
int
and
push
inc
inc
cwtl
pop
cmc
negb
jns
jmp
aaa
int3
xor
adc
or
out
das
push
hlt
pop
loopne
jg
pop
rclb
adc
mov
sysret
adc
mov
xor
mov
sbb
orl
pusha
push
sub
pop
jo
lret
std
cmpb
aam
pop
ss
ljmp
icebp
mov
stos
mov
xchg
or
dec
cmp
pop
inc
aaa
mov
inc
xor
mov
cmp
aaa
and
mov
dec
lods
cmp
movsl
push
icebp
lock
stos
add
pop
inc
ficoms
aad
cmpsl
sub
mov
inc
inc
enter
push
push
jbe
ljmp
cs
mov
jl
lods
pop
inc
imulb
clc
or
shlb
mov
ljmp
leave
bound
aaa
fdivp
sbb
clc
xadd
movsl
loop
and
cmp
filds
rolb
add
pusha
in
mov
shl
mov
pop
out
sub
cmp
scas
sub
rcrb
repz
incb
mov
cwtl
mov
outsb
inc
repnz
outsl
fists
repz
pop
cmc
ret
xchg
add
daa
lods
fadds
in
add
mov
cmp
aad
mov
pop
outsb
cmp
push
inc
daa
lahf
fsts
mov
in
mov
mov
jno
movsb
push
jle
sub
icebp
mulb
cmp
push
jns
enter
jmp
bound
mov
jg
gs
es
ret
fbstp
lods
stos
mov
out
jae
sub
ss
add
aad
adc
cmpsb
stos
shl
rcrl
xchg
xchg
and
imul
mov
das
aad
out
or
and
add
into
iret
hlt
enter
mov
mov
cmc
hlt
or
ss
push
jae
data16
sub
ret
pop
cmc
lock
inc
pop
mov
push
mov
and
xchg
sub
or
lahf
sbb
jbe
out
in
fsubl
pushl
in
xchg
int3
sbb
movsl
jne
jnp
mov
shrb
pop
sub
outsb
scas
jl
aam
cmp
xchg
add
pop
aad
in
sub
sbb
push
popa
sbbl
in
aam
cmp
loopne
cltd
mov
movsl
jns
or
popa
in
sbb
sbb
push
ror
pop
loopne
in
lret
and
ficoml
fstpl
dec
jo
inc
xor
mov
cmp
negl
enter
rcrl
push
sbb
push
sbb
inc
mov
mov
arpl
jns
aaa
dec
test
rcll
xlat
push
leave
sub
inc
aad
sahf
cltd
scas
cmp
jo
pop
add
xchg
pop
lret
data16
mov
sub
pop
add
xor
cmp
ds
test
lds
jmp
jl
pop
movsb
imul
icebp
mov
add
insl
out
push
nop
mov
rorl
adcl
idivl
jg
imul
jge
lds
aad
jge
add
push
fsubrs
fsts
jns
jl
sbb
shrb
ret
jp
add
xchg
cs
lret
push
mov
pop
cs
out
pop
jmp
xlat
mov
das
dec
xor
roll
loope
movsl
mov
inc
imul
pop
mov
mov
leave
xchg
jmp
fucomi
icebp
pop
sbb
or
subl
outsl
pusha
imul
mov
mov
mov
stc
mov
dec
pop
mov
pop
pusha
dec
mov
roll
cmc
mov
mov
js
push
mov
repnz
aas
das
inc
in
into
pushl
xlat
cmpsl
dec
cmp
repnz
inc
inc
fstpl
or
push
mov
jnp
scas
push
iret
sbb
push
or
dec
insl
and
das
lahf
cwtl
push
mov
mov
and
rol
sbb
int3
xor
mov
jecxz
pop
es
jecxz
addr16
mov
pop
andb
cmp
mov
repz
out
enter
shr
scas
test
test
add
push
std
stc
test
pushl
in
jecxz
adc
xor
aas
push
loope
imul
mov
xchg
pop
test
fldenv
inc
pop
jb
xchg
jmp
cmp
dec
ss
mov
jle
lret
add
lock
mov
xor
push
loop
jl
mov
int
rcrb
scas
cli
mov
mov
mov
mov
add
pop
pop
adc
jae
adc
iret
inc
rcrb
ja
mov
mov
ss
fidivrl
inc
mov
jnp
jno
adc
nop
adc
shll
mov
push
push
xor
cmpsl
incb
stc
shl
ret
js
rclb
in
repz
mov
push
cmc
inc
add
test
lahf
pop
lea
sahf
notb
bound
stos
sub
call
jge
add
imul
inc
stos
sub
movsl
mov
imul
inc
aaa
sub
test
orl
cmpsl
cltd
jno
out
dec
movsl
xor
scas
mov
inc
popa
outsl
mov
mov
xchg
cwtl
inc
repz
xor
inc
bound
pushf
jno
fsubrs
inc
sarl
ret
add
jmp
xchg
mov
xchg
push
and
sub
dec
fdivr
sbb
cmp
cmc
hlt
shl
push
and
cli
push
cltd
xchg
sti
inc
stos
cmp
pop
jo
icebp
insb
inc
mov
fdivl
mov
outsl
or
or
xchg
decb
in
or
cmp
and
and
ss
mov
push
add
and
fs
push
cwtl
fildll
xlat
sbb
mov
xor
mov
and
lods
gs
xor
sub
test
lahf
xor
push
or
adc
daa
xor
mov
mov
and
repz
loope
adc
jg
out
les
xorl
aaa
pushf
imul
and
andl
mov
sti
fcompl
mov
je
sbb
ss
iret
and
mov
in
or
loopne
repz
sbb
jae
stc
xor
dec
cld
ret
or
cmpsb
mov
xorl
call
adc
push
or
stos
ret
mov
les
addl
cmp
jecxz
lods
insl
lret
xor
stc
into
pop
repnz
jp
fcomps
clc
lods
adc
imulb
sub
add
jg
testl
aaa
sbb
cwtl
cld
iret
test
loop
or
hlt
cltd
inc
rcrl
inc
std
push
loopne
fsubl
xor
and
xchg
es
fsubrs
pop
jnp
lods
inc
std
insl
add
xor
cwtl
and
sub
mov
out
icebp
and
mov
dec
lea
and
xor
aad
mov
push
rclb
in
xor
movsl
jmp
out
cmp
in
jg
pop
imul
lahf
js
mov
rolb
fldl2e
push
sbb
movsb
outsb
adc
rorl
lret
shll
xor
push
jo
add
mov
idivl
jb
lods
jmp
cltd
cs
mov
out
loopne
pusha
jl
dec
and
sbb
in
jae
loope
cmpsl
cmpsb
and
sarb
sbb
ret
or
mov
insl
addr16
mov
mov
call
push
pop
cwtl
fidivs
jno
ret
movsb
and
gs
mov
jge
movsl
in
or
das
push
cmp
lea
lods
and
push
inc
lcall
adc
das
push
adc
jae
mov
data16
xor
ret
jle
xchg
pop
icebp
mov
mov
add
repz
dec
imul
out
ss
xor
mov
imul
inc
push
xchg
das
stos
lcall
jmp
inc
push
add
sbb
inc
dec
dec
das
cmp
cwtl
xchg
lods
xor
add
das
pop
in
cltd
sbb
push
insl
enter
adc
add
flds
roll
add
lahf
sbb
pop
outsl
xchg
std
mov
dec
sub
orb
add
sub
int3
mov
cmp
mov
push
push
fdivrp
mov
cli
and
adc
jle
scas
pop
sub
xorl
cmp
pop
jno
jnp
in
and
mov
mov
mov
loope
test
dec
pop
and
frstor
subb
jl
push
mov
pop
insb
cmp
and
push
pusha
ss
or
mov
mov
aam
into
ret
mov
nop
aas
scas
loope
pop
mov
mov
inc
mov
inc
dec
mov
loopne
rorl
jmp
lock
mov
lods
sub
inc
addr16
xor
sub
iret
divl
xchg
inc
mov
cli
pop
xchg
int
jnp
pop
orb
inc
inc
icebp
movsl
movsb
mov
inc
call
outsl
std
sbb
dec
movsl
push
lods
mov
fsubrs
cmpsb
leave
mov
push
cld
jle
sub
cmp
sub
data16
inc
mov
xor
jl
push
ret
incb
inc
sub
fcomip
dec
xchg
sbb
cmpsl
push
cld
or
sbb
and
lds
pop
mov
fstps
or
mov
cltd
mov
and
cld
dec
sub
outsb
popl
pop
pushf
repnz
mov
out
into
pop
or
lds
sbb
push
je
dec
sub
or
jmp
daa
adc
subl
mov
push
push
adc
cmp
jae
jae
sbb
mov
js
xchg
std
aam
insl
dec
mov
retw
xchg
xchg
repz
pop
jl
fidivrl
out
jo
mov
jns
lcall
fcomp
imul
cli
mov
out
inc
aaa
leave
dec
in
mov
cmp
mov
xlat
cmp
and
sub
xor
es
int
aad
les
push
pop
fwait
gs
stc
sbb
leave
cwtl
mov
shr
test
xchg
icebp
add
call
andb
fucomp
xchg
dec
data16
imul
adc
mov
push
xorb
mov
jmp
sbbl
mov
mov
scas
pop
push
fimuls
add
mov
xchg
std
dec
sbb
add
test
mov
pop
lahf
daa
xor
push
push
movswl
popl
jp
nop
xor
push
mov
mov
clc
cmpl
ret
and
inc
xor
mov
add
xor
cmp
mov
ret
jae
dec
out
insb
movsb
dec
dec
adc
mov
je
jae
add
test
rcrb
pop
dec
push
in
hlt
mov
and
les
sbb
add
jns
sbb
push
xchg
and
clc
imul
jnp
iret
sbb
imul
jecxz
jno
imul
ds
mov
mov
cs
push
dec
insb
pop
cwtl
insb
sub
test
je
dec
pop
shrl
sub
adc
repnz
out
test
mov
add
aam
mov
cmp
out
mov
aam
mov
test
jl
notb
repz
lahf
adcl
jmp
inc
dec
sbb
test
aam
int3
add
lods
dec
mov
mov
jecxz
aas
cs
leave
imul
lock
mov
add
xor
lahf
loopne
mov
lret
add
repz
aas
sub
roll
mov
mov
fwait
dec
fmuls
cltd
cmc
dec
popa
icebp
push
mov
mov
pop
or
mov
pusha
push
iret
or
arpl
or
sti
ljmp
adc
inc
sbb
in
shrl
sarb
xor
inc
and
outsl
sarb
inc
cmpsl
mov
fnsave
dec
dec
stos
push
jb
xor
or
fwait
enter
es
cmp
sbbb
aaa
les
xor
bound
cmp
cli
std
or
je
xor
dec
aaa
mov
push
sbb
cmp
mov
cmc
lret
pop
xchg
xchg
nop
cmp
rcrl
pop
nop
movsb
jle
push
add
push
inc
mov
js
shll
xchg
sub
cwtl
inc
jge
cmpsb
addl
ljmp
dec
fisubs
gs
sub
out
or
xchg
jp,pn
inc
mov
popf
in
push
dec
imul
inc
mov
adc
and
out
mov
and
clc
cmpsl
jecxz
pop
lock
xchg
ljmp
mov
ljmp
mov
cmp
repz
int
andl
sbb
lock
pop
lret
jmp
fcmovnu
mov
mov
mov
adc
pop
sbb
cli
pop
ds
jo
insb
insl
inc
arpl
mov
sbb
into
push
jno
nop
mov
jae
xor
sbb
ficomps
cmp
movsl
scas
dec
imul
mov
and
mov
jecxz
push
xor
stos
lock
inc
ljmp
adc
sub
repz
cmp
ljmp
testb
xchg
cld
adc
dec
addb
ja
rorb
mov
adc
jg
ret
inc
jmp
into
movsb
xlat
pop
xor
sahf
sbb
cmp
out
add
je
popa
sub
cmp
sti
pop
fisubl
cwtl
cmp
jno
cmp
cmpsb
test
jecxz
mov
dec
and
scas
push
loop
popf
push
xchg
xchg
jae
push
shl
pop
xor
mov
cmc
icebp
push
clc
lahf
and
sub
jo
push
lds
sub
ret
movsb
lods
or
mov
mov
push
xor
scas
adc
pop
cmp
xor
xchg
scas
inc
cld
cmpsl
mov
movsl
outsl
or
outsb
pop
mov
cmc
fnstsw
das
shlb
mov
fidivrl
sti
fiaddl
push
and
and
sbb
mov
xor
sbb
pop
dec
cwtl
pop
dec
cmp
adc
dec
jbe
dec
xchg
orl
lahf
rcr
push
pop
fs
add
or
dec
cmp
test
arpl
cmp
mov
mov
les
cmp
cltd
xchg
xor
ljmp
pop
push
shll
xor
stos
xchg
xorb
cld
adc
jecxz
divb
xlat
enter
sbb
in
sar
push
hlt
cmp
fldl
ljmp
adc
subl
cmc
xor
ljmp
adc
movd
lcall
cmc
ss
mov
mov
in
cmp
call
mov
int3
mov
lret
cmp
fcoms
scas
cmp
ljmp
push
cmp
stc
pop
and
add
je
addr16
inc
mov
xchg
pop
mov
mov
jge
xor
cmc
in
mov
jnp
inc
mov
or
mov
push
fimull
mov
and
prefetch
or
loop
inc
lods
dec
dec
inc
imul
call
frstor
inc
les
mov
orb
mov
fwait
mov
call
cs
jb
push
fisubrs
cld
hlt
or
test
mov
fimuls
xchg
fnstsw
cld
jg
lds
inc
xor
inc
xchg
jno
xchg
pushf
mov
outsl
dec
xchg
cmp
xchg
scas
xlat
adc
xor
mov
testl
cltd
pop
fcom
fisubrl
mov
in
sub
xor
fidivrl
jbe
xlat
mov
xchg
xchg
outsb
int
nop
jle
add
insb
in
icebp
int3
nop
and
push
sbb
mov
mov
mov
mov
dec
xor
xlat
inc
xchg
das
das
inc
andb
test
test
loop
je
jnp
jge
pop
mov
push
dec
cmpsl
add
mov
adc
adcl
and
jbe
fidivs
daa
ret
daa
xor
cli
bound
movsb
movsb
pushf
repz
daa
mov
sahf
inc
stos
fiadds
sbb
pop
inc
mov
mov
into
rol
subl
inc
imul
sbb
inc
mov
cmpsl
push
scas
int
or
pop
cmpsb
lcall
push
dec
test
xchg
pop
dec
or
enter
cmc
push
push
xor
sbbb
inc
mov
xchg
sbb
sub
negl
out
dec
xchg
js
insl
data16
mov
mov
and
stos
jae
jp
call
jg
cmp
sti
push
icebp
fsubrp
push
pop
rcrl
mov
push
sbb
ror
aas
sarl
mov
cmp
or
xor
in
lret
fcomp
loop
lret
mov
sbb
ja
pop
fwait
pop
in
mov
cmpb
inc
test
outsl
in
adc
faddl
dec
cwtl
mov
or
mov
mov
pop
cmp
es
test
pop
mov
add
push
pushf
stc
xor
dec
pop
and
ljmp
fs
fists
cli
fdivrs
mov
jl
jmp
ja
movsb
shr
mov
mov
jbe
insb
lahf
setno
dec
cld
repnz
sbb
sbb
adc
hlt
aam
rcll
mov
movsb
arpl
xchg
or
scas
xlat
jae
xor
adc
mov
stc
add
or
fidivrl
push
scas
mov
out
push
mov
xor
stos
jle
enter
aad
js
les
inc
jnp
and
imul
jg
movsl
dec
in
aas
mov
push
or
jp
push
icebp
jl
adc
mov
fisttpll
and
pop
jmp
xchg
push
in
dec
jo
sbb
xor
cmp
dec
ljmp
stos
call
jns
xor
fwait
mov
cwtl
push
rolb
mov
pop
pop
fs
lea
fs
add
cltd
jle
xchg
mov
les
dec
inc
fs
ss
shlb
adcb
aaa
sbb
jnp
and
addr16
out
mov
push
hlt
les
mull
stos
add
pushf
mov
test
inc
test
inc
push
cltd
mov
movsl
mov
sbb
or
and
sti
orb
arpl
push
mov
jle
es
sbb
lds
mov
divl
and
adcl
gs
flds
loopne
dec
lahf
shll
push
cmp
xorl
fwait
cmp
sarb
icebp
cwtl
scas
mov
and
add
in
inc
mov
sub
in
neg
iret
insb
decl
iret
fnstsw
push
scas
pop
xlat
xchg
in
mov
push
pushw
rcrl
mov
push
sbb
aaa
adc
sub
enter
insl
lds
int3
push
pop
xchg
or
sbb
inc
add
push
js
sub
push
mov
jp
jns
mov
arpl
mov
clc
sub
dec
push
xchg
or
int3
test
dec
and
xchg
push
dec
daa
or
jnp
rcll
roll
imul
add
xchg
sub
insb
call
mov
mov
lcall
cld
jnp
pushf
filds
mov
mov
pusha
addr16
sbb
lds
lret
je
lock
push
out
stos
rol
lds
popf
push
mov
pop
mov
mov
cltd
test
cmpsb
xchg
inc
call
mov
pop
lcall
adc
rcrb
fldt
jno
loop
aam
enter
mov
iret
jnp
or
out
push
cmp
xor
jns
pop
in
jae
add
mov
jns
clc
inc
mov
fildll
rcl
mov
push
popf
loope
xchg
aaa
and
push
icebp
aaa
repnz
and
adc
sbb
test
les
sub
push
out
scas
rorl
lods
fwait
jo
aam
cmp
push
mov
dec
pusha
jge
punpckhdq
mov
aas
out
pop
lds
mov
sub
push
out
xor
inc
inc
scas
add
fwait
cli
lret
jmp
in
jmp
testb
das
add
dec
repnz
adc
and
mov
jne
mov
adc
sbb
pop
in
push
cwtl
out
rcrb
xchg
mov
cmp
jno
test
cmp
mov
nop
pop
dec
dec
xchg
mov
jp
lret
in
imul
inc
cltd
xor
pushf
addr16
push
mov
and
jecxz
fimull
fisubrs
cmp
jp
call
push
lret
cmp
xchg
jbe
call
in
mov
fsubp
daa
rcrl
jecxz
mov
in
fcomip
dec
jnp
dec
cmp
clc
or
mov
jo
addl
or
cli
subb
aas
or
push
lock
xchg
loop
mov
sahf
das
jmp
adc
push
fnstsw
shlb
push
stc
mov
shlb
jne
out
inc
test
std
mulb
pop
orl
push
sub
out
addr16
hlt
roll
pop
jecxz
aaa
mov
mov
fmull
mov
dec
sub
jle
jl
popa
mov
in
popa
rol
sbb
fldcw
inc
add
and
cmp
adc
mov
cmp
popf
jne
lcall
leave
mov
sbb
or
dec
jge
add
into
scas
dec
jbe
xchg
mov
std
and
sbb
jecxz
and
xor
adc
ja
testb
mov
mov
or
ret
sti
jl
xchg
ss
dec
add
cmp
mov
imul
mov
and
push
pop
sbb
pop
scas
insb
pop
pop
fcomps
icebp
jb
cmp
dec
insb
dec
jge
fistpll
std
sbb
mov
movsl
fisttpll
pushl
pusha
mov
lock
lea
rcrb
push
push
jb
inc
adc
imul
repnz
pushf
loopne
subl
movb
sbb
jno
push
pop
adc
xchg
sbb
cld
out
add
sbb
or
pop
pop
jp
test
cltd
adc
jbe
xchg
cltd
mov
jl
adc
popf
lods
out
push
rcrb
ja
fcomip
and
and
es
xrelease
cld
jp
push
or
imul
fcomps
xlat
out
imull
xchg
rcrb
xor
jl
push
adc
mov
jb
sub
mov
jl
stos
ror
adc
or
xor
pop
cwtl
nop
add
inc
xor
dec
clc
clc
adc
mov
dec
jg
mov
shlb
cli
adc
adc
jge
insb
notl
scas
push
sahf
test
add
inc
sbb
or
lods
pop
dec
shrl
sbb
lods
xor
xchg
xor
icebp
push
cmpsl
xor
sub
and
pop
fs
jp
jecxz
mov
outsl
or
std
dec
push
repz
add
xchg
push
pop
jl
pushf
cmpsl
jns
stc
cmp
mov
daa
in
cmp
pop
in
mov
rorb
push
test
push
or
and
lds
sbb
add
pop
xchg
test
xchg
scas
jae
lret
dec
cli
dec
mov
jo
adc
lret
call
fiadds
cmp
or
out
jo
idivb
dec
xor
adc
pop
sbb
add
punpckhwd
and
add
test
popf
xor
cltd
mov
cltd
mov
add
scas
adc
inc
iret
movsl
or
or
push
cli
and
std
adc
mov
sbb
cmp
sti
push
jo
sbb
cmp
hlt
repz
daa
ss
cmpsl
stc
or
and
lea
fstpt
adc
xor
lds
and
pop
ja
sbb
mov
outsl
shl
mov
shrl
push
fistpll
pop
scas
shrb
push
or
in
leave
pop
fisttpll
iret
sub
jmp
mov
or
push
stos
repz
push
arpl
jb
std
in
add
xchg
je
sbb
xchg
lods
lret
sarl
and
mov
mov
sub
xchg
push
and
inc
jmp
sub
das
int
stos
ja
cmc
pusha
cmp
fsubl
pop
add
cmp
inc
cltd
and
xchg
push
xchg
fwait
push
fstps
ficoml
push
and
mov
add
cld
lock
int3
or
fsubrs
push
out
pop
test
xor
mov
into
xchg
cld
mul
shll
and
mov
jmp
aad
xor
outsl
or
into
in
cltd
mov
out
fildl
imul
stos
enter
adc
jg
shll
into
notb
js
nop
xchg
xchg
ret
or
xor
xor
jb
xor
ja
mov
pop
mov
test
aas
repz
es
mov
pop
cmp
cmp
jmp
subb
or
rorl
mov
dec
adc
rcrb
in
in
add
shlb
fistpll
mov
orl
mov
or
dec
loope
pop
add
mov
int3
scas
jmp
int3
sbbb
fcmovnb
cmp
inc
sbb
mov
pop
sub
loope
testl
push
or
mov
cli
cmp
add
stc
scas
sub
xor
lcall
and
rol
sub
sbb
sbb
jmp
rol
aaa
and
or
xor
pop
les
sub
adc
mov
aad
mov
inc
mov
dec
dec
push
out
inc
leave
mov
dec
add
and
mov
xor
xor
sbb
xor
mov
push
jo
xor
and
adc
lcall
push
adcl
mov
mov
jb
push
adc
mov
ljmp
icebp
inc
xor
sbb
jge
push
xor
and
xchg
jnp
in
sti
notl
loop
test
in
in
cld
test
or
pop
xor
shrl
jns
mov
dec
out
xor
adc
lcall
jno
aas
adc
xchg
adc
fwait
dec
mov
and
sub
popf
sub
rcrb
fidivrl
dec
dec
lea
mov
hlt
das
sub
xchg
pop
nop
mov
jno
push
outsb
sbb
cmp
imul
sbb
ja
add
das
dec
cmp
out
inc
cmp
mov
cmpsb
std
sub
sub
call
fistpll
mov
cmp
xchg
push
lcall
and
out
mov
xchg
inc
jb
cwtl
shl
adc
add
mov
pusha
test
xchg
popf
adc
scas
orb
mov
fidivrs
inc
out
sti
testl
mov
insb
or
add
lcall
mov
cmpsl
and
xchg
mov
xchg
test
sti
leave
jbe
aaa
enter
into
jno
add
pop
lods
arpl
xor
sti
xchg
aad
xchg
dec
adc
insb
daa
imul
psraw
test
sub
push
popa
in
icebp
pop
push
mov
repnz
sub
xchg
std
nop
iret
sbb
pop
pushf
and
pop
mov
mov
xchg
adc
jge
xor
and
lds
addr16
enter
cs
scas
cmp
cs
push
mov
outsl
les
jne
mov
mov
jo
mov
sub
ljmp
inc
sub
jns
xor
sbb
stos
not
js
sub
and
sub
dec
cmp
int
js
in
push
xor
xchg
je
addr16
leave
dec
jecxz
cli
or
xchg
mov
cmp
les
test
and
negb
mov
or
ret
dec
int
lcall
popf
insb
sti
cmp
jnp
mov
daa
mov
test
lret
mov
loope
xchg
loop
fcoml
loopne
int
nop/reserved
sub
inc
ret
jno
pop
ja
jae
sarb
notb
ret
stc
imul
rcrb
outsl
push
mov
nop
inc
adc
sbb
mov
mov
ret
dec
mov
and
cmp
loop
pop
mov
sbb
in
popa
aam
push
ljmp
rclb
mov
push
testb
outsb
cmpsb
push
aaa
inc
cmp
in
in
ss
pop
ljmp
push
dec
jns
mov
cmc
pop
or
jno
push
mov
fbstp
inc
pop
mov
outsb
adc
sbb
les
sub
std
pop
jle
call
cli
xor
or
jecxz
out
push
int
push
fldl
pop
push
lods
jp
xchg
rcrl
outsb
cmp
sub
test
mov
mov
add
push
test
cmc
pusha
nop
aam
jo
jne
cmp
repz
push
cmp
mov
arpl
fcomp
sbb
pop
in
in
pop
jbe
std
xchg
outsl
aaa
xchg
pop
ljmp
inc
add
or
in
in
mov
pop
cmc
add
xchg
jne
jnp
std
sti
test
sub
and
in
movsl
sbb
push
inc
adc
jmp
cmpsb
push
fdivrl
jg
sbb
cli
test
jge
mov
in
jb
cmpsb
mulb
add
dec
mov
mov
push
lods
ret
adc
hlt
or
xchg
jl
not
xchg
rorl
push
test
jae
fidivl
jl
mov
or
mov
push
ja
pop
xor
jp
push
enter
sub
notb
iret
cmp
out
andl
dec
movsb
test
call
push
push
cld
sahf
mov
xchg
leave
test
repnz
fdivrl
xchg
loopne
mov
test
mov
xlat
mov
xor
pop
pop
adc
imulb
shlb
or
outsb
and
xor
jns
adc
adc
fstpt
dec
ror
xchg
outsl
ret
xchg
sub
cmp
sbb
add
xchg
cmp
ror
xor
pop
out
mov
mov
int
inc
out
dec
push
fldcw
fcoms
xchg
roll
cmp
push
cmc
or
mov
dec
jae
push
mov
ss
xor
int
sarb
push
out
xor
gs
cmc
mov
into
cmc
rdtsc
mov
mov
and
mov
adc
cld
mov
rcr
mov
jl
pusha
mov
add
inc
out
ficomps
ret
mov
jnp
fisubs
arpl
mov
and
jg
mov
loopne
mov
stos
ds
mov
xchg
mov
mov
jae
jne
fs
xor
loope
cmp
mov
loope
mov
inc
out
ja
and
into
mov
fwait
in
js
adc
mov
popa
incb
mov
inc
js
cmp
jge
cmp
sub
out
clc
fisttpll
sbb
outsb
std
mov
jns
add
flds
fcomps
mov
outsl
imul
mov
cmpsl
jae
xchg
mov
decb
inc
std
daa
aam
xor
mov
push
fsubl
arpl
mov
ds
add
add
icebp
dec
imul
xchg
cwtl
mov
clc
xlat
int
in
mov
sti
cmpsl
mov
cwtl
ljmp
jmp
js
xchg
pop
cs
push
aad
sahf
cltd
shl
lret
loope
out
sub
jae
add
sbb
aas
jp
xor
gs
jg
enterw
inc
fs
sahf
add
ret
sarb
xor
mov
mov
adc
xor
lcall
andb
popf
sti
mov
cmp
pop
in
je
mov
inc
add
mov
cwtl
jnp
in
out
add
out
repnz
test
or
pop
das
add
shlb
mov
pop
jmp
mov
aas
xchg
add
mov
in
sbb
push
aaa
faddp
incb
mov
rcll
pop
sahf
jbe
stos
notl
sbb
xchg
cmp
aaa
xchg
pop
daa
sbb
xor
loope
imul
iret
cmp
mov
imul
xchg
inc
rcrb
xor
xchg
adc
xchg
mov
sub
jne
dec
jle
mov
and
cmp
xchg
or
popf
adc
jb
sbb
add
scas
push
push
xor
sar
loopne
dec
in
cwtl
or
mov
push
or
imul
rorl
cmpsl
mov
adc
es
cli
sub
pop
call
jne
jg
in
or
cltd
cmpsl
mov
mov
mov
adc
call
jne
cmp
mov
xchg
outsb
inc
aas
and
aaa
in
call
or
fisubrs
and
add
add
stc
mov
jbe
push
push
mov
ja,pn
stos
lret
aam
dec
jo
rorb
push
add
ds
jp
add
mov
xor
mov
and
lds
mov
fdivp
sbb
push
mov
mov
xor
sub
push
xchg
sub
lock
fidivs
push
xchg
add
pop
sar
adc
mul
shl
mov
ss
std
add
imull
and
stos
stos
adc
sub
daa
fwait
add
movsl
or
pop
in
push
outsb
negl
sbbl
sbb
repz
test
push
subl
outsl
mov
rcr
aaa
mov
pop
add
jg
sbb
int3
sbb
leave
lahf
fs
jnp
mov
pop
mov
arpl
sbb
adc
xor
push
add
lods
imul
imul
test
lds
leave
xor
mov
pushf
pop
stos
jae
jmp
mov
jns
pop
cmpsb
or
es
pushf
fimull
xor
inc
into
mov
xchg
jle
repz
and
xor
xchg
inc
int
mov
into
dec
ja
push
loopne
pop
out
mov
addr16
mov
dec
inc
lea
fiaddl
xchg
xchg
dec
xchg
in
adc
cs
daa
lcall
xor
out
cmc
xchg
jno
dec
movsb
int3
and
dec
fistpl
mov
mov
inc
and
push
sub
lahf
fidivl
add
or
imul
cli
aaa
clc
add
aam
div
cli
cmpsl
repz
jo
aad
daa
loope
pop
add
pusha
in
loop
push
out
test
aam
inc
andb
jmp
xor
mov
dec
mov
mov
sahf
or
mov
loop
lds
mov
movsb
mov
in
xor
icebp
andb
adc
mov
insb
push
mov
inc
dec
in
jp
js
aad
mov
jne
xor
add
fcompl
pop
lock
rorb
xlat
repnz
mov
mov
mov
mov
iret
mov
mov
sbbl
imul
outsb
lret
lret
hlt
pop
jl
in
fbld
mov
mov
clc
mov
mov
mov
add
ljmp
loop
xor
aas
lret
loop
mov
jecxz
popf
clc
sbb
cmpsb
jge
pusha
dec
ret
daa
or
mov
adc
adc
nop
jmp
add
cmp
lret
adcb
mov
arpl
inc
scas
dec
jge
aam
jb
push
pop
push
mov
inc
xor
push
shlb
ret
pop
or
push
xor
shll
push
ror
and
fidivrl
enter
pop
js
jnp
ja
nop
test
jl
mov
rcrl
xor
cmpsb
mov
dec
pop
or
test
jp
inc
jo
or
fldenv
arpl
dec
push
lret
sbb
adc
lret
push
pop
push
pop
test
fildl
lods
inc
fs
lcall
dec
repnz
shrb
mov
out
push
sub
outsb
adc
test
ds
adc
cmp
out
push
or
jp
jge
sub
jg
dec
pop
ror
xor
xor
jge
push
and
jle
repz
sbb
fbstp
mov
push
out
mov
cmpsb
sbb
test
nop
jmp
test
outsb
daa
setp
inc
mov
pop
add
xor
es
jne
icebp
loope
lds
pop
outsb
fs
cmp
and
insl
inc
cli
mov
fisubs
clc
popf
scas
push
pushf
imul
or
repz
rolb
dec
sub
cmc
xor
jecxz
das
and
sub
gs
inc
scas
in
nop
dec
shlb
nopl
test
andb
out
das
push
loope
aam
arpl
or
out
xor
xor
lods
data16
test
jno
enter
inc
stos
or
sub
ficomps
pop
xchg
adc
test
sbb
jns
mov
cmp
sub
dec
sarb
mov
std
inc
clc
mov
imul
inc
repz
ret
inc
inc
repz
xchg
ss
inc
xchg
inc
fisubl
jmp
int3
or
stos
xchg
dec
aas
mov
xchg
mov
fists
mov
jecxz
cmp
xchg
outsl
js
pop
xchg
or
scas
cmpsb
imul
or
pop
dec
sub
arpl
js
inc
test
pop
cmc
jge
std
stos
aas
mov
jo
dec
lea
jecxz
lods
or
sbb
jnp
inc
sbb
inc
mov
mov
jae
stos
push
and
add
jns
xchg
xor
pusha
mov
xchg
inc
rolb
add
call
inc
inc
inc
out
jnp
shll
daa
cmp
sbb
dec
movsb
push
subb
repnz
loopne
add
add
inc
push
push
into
outsb
or
pop
cmpsb
aam
in
jg
push
mov
test
pusha
add
subl
adc
cmp
inc
fs
mov
sub
push
repnz
and
cmpsl
dec
in
mov
jp
jb
mov
push
enter
hlt
repnz
int
pusha
daa
sbb
push
ja
sub
push
xor
dec
inc
mov
scas
out
fdivrl
jno
jmp
push
cmp
and
mov
mov
pop
cmp
or
cmp
cs
inc
mov
and
stos
out
jle
xchg
stc
mov
insb
inc
mov
push
das
and
aad
push
xchg
cmp
test
cmpsb
sahf
cs
push
xor
dec
test
jle
movl
sbb
and
outsb
xchg
or
jp
or
inc
movsl
add
mov
test
out
and
and
pop
andb
lods
sub
fiadds
test
repnz
pushl
pop
or
outsl
ficoml
or
inc
xchg
mov
aam
sbb
repnz
push
or
je
xchg
sti
xor
xchg
dec
adc
add
repz
cmp
addr16
add
subb
jmp
jne
cmp
push
adc
push
repz
rolb
pop
fs
dec
cmp
fmul
sub
xor
xor
push
adc
or
xchg
mov
add
xchg
and
in
dec
jg,pt
fs
or
lds
lea
call
sbb
aam
jge
push
jle
jecxz
rolb
loopne
aad
fildl
loope
dec
shr
outsl
js
or
fistpll
or
in
test
sbb
mov
sub
bound
les
add
pop
cld
fisttpll
mov
mov
icebp
imul
add
jne
nop
cmp
rcrb
imul
adc
inc
jb
out
dec
cltd
sub
mov
data16
sbb
loope
imul
mov
jle
adc
outsb
or
pop
ljmp
lock
add
mov
mov
inc
mov
xor
imul
pop
and
cwtl
pop
mov
pop
pop
push
xor
orl
mov
cmc
nop
jb
mov
clc
hlt
mov
jo
mov
and
inc
adc
mov
or
movsb
adcl
shrl
xor
jb
and
pop
cli
cmp
dec
cmpsb
pop
aam
sbb
call
rol
setbe
lods
addl
stos
mov
adcb
pop
adc
inc
mov
sahf
ds
loop
fadds
cmp
lods
push
cmp
out
ror
dec
repnz
jge
mov
divl
or
leave
dec
sbbb
cmp
cld
sbb
int
stos
int3
xor
jbe
sti
mov
int
cmp
inc
arpl
mov
stos
dec
push
mov
add
lock
push
dec
xchg
aas
pop
fdivrs
scas
into
fsubrl
mov
push
inc
lcall
data16
icebp
dec
js
or
icebp
and
dec
test
cmp
mov
pop
xchg
fwait
cwtl
inc
mov
cltd
es
xchg
jmp
add
stc
popa
lock
loope
mov
lea
hlt
xchg
add
mov
rolb
aam
cmp
xchg
mov
pop
add
rcr
addr16
andl
andl
dec
stc
inc
in
dec
and
js
test
adc
adc
or
mov
pop
pop
jmp
cli
push
mov
dec
mov
or
or
xlat
sub
cmp
add
xchg
or
mov
insb
add
and
or
pop
popa
sbb
data16
jae
add
dec
cmp
test
adc
lds
notb
mov
jl
jb
or
xchg
in
pushf
add
and
fwait
cs
call
mov
fsubrl
in
ja
push
pop
cmp
mov
jg
jge
aas
jae
sarl
je
or
xchg
hlt
add
stos
adc
shlb
mov
repnz
daa
dec
mov
jno
loopne
cli
dec
xchg
popa
fldenv
pop
mov
outsb
push
int3
or
fsubrl
daa
lock
sub
test
ficompl
jge
sbb
sti
clc
xchg
cmp
rcrl
cmpsb
faddl
cwtl
fbstp
shl
mov
jns
jge
cld
xor
sub
add
push
add
pusha
fsubrs
notl
enter
add
mov
cmp
test
and
aas
shl
fs
lds
mov
inc
mov
enter
mov
sbb
mov
je
mov
jns
out
dec
subb
push
lcall
pop
addr16
jno
into
dec
testb
mov
inc
fistps
js
mov
push
and
cmp
push
xor
icebp
repz
jo
xor
add
mov
pop
and
cmp
pop
xor
sbb
or
ret
imul
inc
outsb
aaa
mov
mov
mov
outsb
and
inc
clc
push
test
add
jge
xchg
sbb
mov
hlt
fdivrl
imul
mov
lret
mov
test
sub
push
jbe
cmp
nop
pop
xorb
popl
dec
add
push
xor
iret
cld
mov
dec
cltd
rorb
xchg
mov
ret
rorb
push
lcall
mov
in
outsl
dec
xor
mov
jno
cwtl
mov
push
mov
push
jecxz
xor
pop
push
add
fistpll
sub
test
in
sbb
or
xor
mov
outsl
in
in
cmp
fldcw
push
rol
jg
and
xor
js
pop
push
xchg
pop
dec
jno
enter
jecxz
or
lret
mov
js
in
and
scas
icebp
insl
addl
mov
ljmp
mov
in
bnd
and
cmp
movsl
cmp
jae
xchg
cmp
mov
in
push
cwtl
mov
dec
dec
mov
pushf
test
orb
or
out
inc
movsb
jle
fucom
rorl
js
iret
test
lahf
cld
out
adc
iret
lock
cmc
dec
mov
xchg
sahf
adc
addb
push
hlt
jg
inc
add
rol
xor
xlat
cmp
mov
push
sbb
pop
jl
addr16
cmp
jnp
and
lods
inc
cmp
mov
mov
lret
inc
pop
adc
pushf
aad
ljmp
push
in
jge
jo
fs
sbb
sbb
mov
xor
jmp
inc
and
lock
lcall
pop
xor
inc
andl
dec
add
shlb
mov
jg
jae
mov
push
fwait
loop
imul
les
mov
int
mov
int
test
adcb
ja
inc
mov
enter
and
xchg
fisubrs
adc
and
xlat
pop
cli
inc
gs
pop
mov
mov
mov
outsb
lods
stos
stos
sbb
scas
sbbb
jp
push
inc
call
lods
mov
mov
jae
jmp
int
push
mov
pop
or
enter
bound
dec
out
insb
xchg
cmp
movsl
jp
jle
rcrb
subl
inc
sbb
rorl
rcl
test
xor
mov
xor
ficomps
mov
mov
fstpl
push
dec
inc
dec
dec
jae
stc
dec
insb
xchg
sbb
inc
push
pop
loope
sahf
shrb
insb
das
mov
jg
sub
push
in
loopne
and
pop
rorb
jmp
stc
push
sahf
fs
push
push
aaa
mov
fld
pop
jae
sahf
pop
xor
push
iret
jnp
imul
adc
xchg
test
in
imul
ss
push
lea
hlt
push
jnp
mov
jecxz
xor
sbb
dec
lods
dec
push
in
mov
lea
jmp
cmpsl
mov
sub
dec
std
push
jl
jmp
fscale
cmp
xor
add
std
pop
mov
popf
jne
inc
les
jge
mov
lcall
imul
add
mov
insl
adc
dec
nop
fldt
adc
sbb
add
jbe
iret
adc
mov
jnp
es
or
pop
sbb
dec
leave
adc
push
negb
mov
in
iret
xchg
insl
or
sub
loope
popf
or
dec
jb
xchg
imul
xchg
xchg
in
popa
sub
gs
pop
dec
push
sbb
jo
jnp
push
pop
pop
add
nop
or
adc
mov
div
scas
addr16
jecxz
and
pop
adc
pop
jb
mov
in
mov
aaa
xor
xchg
fistps
mov
push
out
jnp
loope
adc
fisubrs
add
les
sbb
sbb
push
nop
jns
nop
nop
mov
xor
pushf
xor
mov
cmp
lods
scas
mov
ljmp
roll
jne
outsl
sbb
xor
mov
cltd
xor
adc
jle
jge
bound
rcrl
xchg
sbb
arpl
jge
pop
inc
repnz
adc
pop
test
std
popa
shrb
imul
gs
scas
sbb
push
push
nop
mov
jne
es
adc
lea
mov
addr16
lds
cmp
and
inc
repnz
xor
shl
xchg
lret
jecxz
lock
pop
push
mov
push
dec
lret
xchg
xlat
movsl
jno
es
sub
cmc
fs
call
pop
mov
fwait
aas
lods
sbbb
sub
pop
sbb
fldl
cld
dec
enter
nop
sub
out
pop
jb
adc
cwtl
scas
xchg
cmp
push
mov
out
mov
mov
out
mov
js
inc
cmp
repnz
out
shlb
jl
je
in
push
and
loope
jp
jo
cmpl
push
fdivr
addr16
bound
jo
test
setns
aas
xchg
lret
mov
pop
mov
sbbb
jge
cmp
xchg
lcall
jnp
mov
inc
scas
sub
gs
ja
pop
push
int3
call
ljmp
sub
push
jecxz
loopne
mov
mov
mov
decl
push
mov
push
sbb
aad
aad
repz
sbb
or
ds
and
add
sbb
hlt
lea
shr
aad
js
adc
xchg
mov
mov
pop
mov
inc
stc
push
push
and
jnp,pt
mov
mov
lods
or
mov
leave
and
and
cmp
adc
ficompl
adc
scas
mov
es
xor
jmp
or
dec
xor
stos
mov
outsb
and
gs
sti
cmp
mov
popf
inc
mov
adc
arpl
mov
iretw
xchg
lock
into
stos
repz
sub
fs
nop
andb
lods
shlb
aaa
mov
and
or
je
cltd
in
xchg
xor
jmp
cmpsb
adc
xchg
dec
out
movsb
sbb
divb
fwait
js
and
mov
cmp
out
test
push
pop
xor
push
xchg
and
sbb
aad
cmp
inc
in
lret
push
push
into
dec
kmovw
fsubs
xchg
scas
add
xchg
add
and
add
out
in
cmpb
dec
daa
rcll
test
sub
out
cmovl
jecxz
loop
xchg
sahf
sbb
push
pop
rorb
and
add
idivb
and
pop
orb
test
sub
xchg
fidivrs
lods
mov
push
daa
dec
into
fldl
push
ret
mov
loop
or
lods
and
stos
inc
adc
inc
in
jecxz
push
mov
or
nop
ss
lods
stc
ret
cmp
pusha
mov
push
jne
push
add
or
bound
mov
pop
or
sti
and
mov
mov
mov
pop
in
cmc
hlt
xor
shr
push
fidivs
adc
dec
popl
jno
bound
dec
dec
daa
push
push
mov
xchg
clc
push
cmp
inc
stos
cmpsb
adc
fs
inc
or
lock
loope
negb
jnp
jns
or
dec
into
pop
mov
je
iret
mov
popf
loop
xchg
imul
push
mov
test
lahf
out
inc
xchg
xchg
inc
jae
out
push
mov
xchg
sub
je
testb
in
and
in
or
ud1
cmpsl
pop
das
mov
sbb
jne
fwait
jecxz
xchg
sub
cs
pushf
xchg
cmp
lods
adc
jg
xchg
dec
cs
movb
mov
xor
andl
sub
cpuid
pop
lds
pop
xlat
jle
mov
cli
aad
add
and
pop
jecxz
sbb
mov
xchg
mov
inc
adc
adc
cs
cmp
mov
sahf
es
stc
outsl
cmp
arpl
test
aam
jae
roll
out
sub
jae
cmp
repz
lcall
ss
sub
xchg
inc
in
add
add
adc
xor
stos
sahf
std
inc
mov
hlt
xchg
out
loopne
or
enter
lods
lods
in
out
xchg
shlb
pop
mov
cmovb
imul
sbb
adc
jo
aaa
repnz
test
and
xchg
dec
jge
push
jl
fwait
mov
pop
mov
jle
ret
out
inc
jp
mov
lods
lret
dec
out
mov
aaa
sbb
lods
cld
cltd
clc
mov
mov
cwtl
inc
xor
pop
jno
sbb
cmpsb
or
sahf
imul
inc
mov
push
hlt
cmp
daa
mov
les
inc
insb
imul
dec
push
jne
pop
fs
sub
in
out
sbb
sbb
cmp
shl
and
adc
outsb
ja
xchg
sbb
push
lcall
cmp
xchg
mov
sub
out
insl
mov
sub
xchg
lahf
imul
mov
aad
stos
mov
push
add
nop
clc
xchg
cmpl
test
xor
sbb
fcoms
daa
es
test
jno
test
adc
jns
cwtl
data16
nop
lods
fdivl
xor
cmp
mov
loopne
add
enter
imul
xchg
mov
js
repz
push
mov
and
icebp
cmpsb
ja,pt
xlat
mov
add
add
cmpsb
mov
pop
popa
jmp
test
aaa
inc
xor
stos
sub
jmp
dec
and
jb
sub
fnstsw
popa
and
into
lods
aam
gs
ffreep
je
inc
cmp
rorb
mov
imul
outsl
cli
repz
jp
dec
xchg
inc
lods
jnp
clc
hlt
mov
push
rorl
cs
or
test
jo
xchg
or
out
xor
cmp
xchg
stos
sub
cmp
or
aaa
fildl
shl
cltd
adc
add
nop
int3
or
mov
or
rcll
push
mov
out
sbbb
adc
repnz
xor
and
dec
or
pusha
and
dec
cmp
adc
cli
sub
xchg
pop
cmp
push
test
rcrb
enter
pop
aas
jnp
fcoml
adcl
add
mov
xchg
movsb
rcrl
ret
push
mov
out
test
outsl
ret
cmpsl
rcr
mov
push
cltd
insb
mov
pop
sub
roll
ss
outsl
mov
es
adc
fnstsw
fs
cmpsb
inc
sti
ss
xor
lea
ss
out
mov
mov
dec
xchg
inc
mov
cltd
jb
lods
xchg
cmp
adc
xchg
in
ficoml
lret
push
push
push
lret
dec
je
mov
mov
xor
push
push
imul
sti
adc
lea
rcl
fildll
subl
inc
aas
mov
mov
sub
sbb
mov
pusha
popw
dec
mov
xor
fcomps
cli
mov
push
and
adcl
xor
sbb
stos
inc
int3
jp
dec
repz
fstps
fsubrs
pushf
and
jo
add
inc
jnp
inc
in
xor
jl
aaa
mov
add
in
outsb
push
stos
mov
mov
xchg
and
shrl
cmp
loopne
ret
movsl
ss
in
inc
xor
mov
pop
mov
bound
icebp
popf
ret
xchg
dec
bound
stos
or
jnp
dec
lods
xor
adcb
mov
xchg
adc
cld
popl
outsl
popa
jbe
test
repz
sub
mov
ret
int
jmp
jo
and
add
repnz
dec
cmp
jecxz
lea
insl
sbb
dec
push
mov
icebp
mov
mov
push
pop
imul
xlat
popa
or
movsb
push
sti
aad
cmp
rcr
inc
jecxz
in
jo
push
dec
jo
sbb
sar
and
and
push
add
and
rclb
lods
sbbl
fbstp
or
mov
xchg
int
dec
cld
mov
and
sub
sub
jp
push
and
imul
lea
xor
stos
outsl
loop
mov
mov
pusha
test
out
push
dec
test
pop
pop
mov
in
fidivrl
divl
test
push
inc
stos
cmp
pop
imull
arpl
adc
xchg
lock
adc
xor
sbb
add
fildl
and
mov
xorl
dec
mov
fstpt
jae
sbb
lock
fs
add
stos
lcall
mov
or
and
inc
push
int
gs
cmpb
pop
mov
adc
fcompl
aas
xor
xchg
jo
xchg
push
inc
aaa
mov
sbb
imul
aaa
cld
icebp
and
mov
out
stos
std
or
push
data16
lods
add
test
mov
gs
shrb
mov
push
xchg
bnd
pop
xor
mov
imul
lcall
insb
int
rcrb
mov
dec
jl
or
sbb
movsb
insl
repz
shl
int3
mov
ret
or
clc
les
callw
sbb
or
leave
lods
add
mov
insb
das
es
and
mulb
mov
jae
leave
inc
sbb
pushf
cmpsb
hlt
insl
mov
shl
out
sbb
push
xchg
gs
or
sbb
jge
imul
jnp
or
mov
inc
pop
stos
jno
popf
stos
jecxz
iret
xor
mov
mov
lods
sub
jp
adc
adcb
cld
push
pop
arpl
xchg
test
sub
or
jae
lods
nop
add
aaa
mov
push
gs
jns
sub
xchg
out
ds
idivb
outsb
jo
mov
fisubl
int3
dec
mov
stc
xor
xlat
xor
cmp
sub
push
fwait
pop
rolb
test
push
aam
or
jno
sbb
inc
cmc
mov
jmp
int
outsl
or
sarl
jg
mov
sbb
mov
imul
pop
movsb
in
out
call
icebp
fwait
aam
inc
xor
stos
jbe
es
repz
shrb
inc
inc
rep
xchg
cmp
out
ret
imul
mov
sub
mov
jo
js
insl
xchg
xchg
lea
test
mov
dec
sar
sbb
cmp
test
dec
cmp
imul
mov
shrl
cmp
mov
test
out
adc
adc
or
sbb
cmc
es
cwtl
aas
sub
cmp
mov
sbb
mov
popf
xchg
sbb
push
fmull
xlat
mov
insb
pop
pop
es
sti
in
push
cmpb
stos
sub
cmp
shl
ljmp
mov
roll
xchg
xor
pop
mov
push
mov
or
pop
mov
cmp
fistpll
pusha
add
and
stos
mov
outsl
pop
arpl
cmpsl
adc
arpl
into
aaa
jg
mov
out
adcb
fidivrl
movsl
dec
xorb
enter
jne
outsb
push
dec
fnsave
addb
xlat
clc
sti
cli
pop
adc
int3
or
xor
or
sti
jae
cmpl
or
leave
ljmp
add
and
cld
mov
aad
cltd
enter
jl
js
adc
fcompl
clc
scas
mov
pop
pop
cmp
push
out
xchg
mov
add
mov
mov
in
and
ret
fs
sub
mov
and
xchg
push
mov
rcrb
aaa
adc
aad
mov
ljmp
sahf
pop
fstp
inc
mov
xchg
stos
pop
cmpsl
cmpsl
mov
bound
and
outsb
xlat
imul
or
decb
ja
sub
push
out
dec
out
mov
mov
pusha
sbb
dec
jl
adc
cvtps2pd
cmc
xchg
rol
les
int
lds
inc
sub
mov
inc
mov
mov
ret
pop
lret
shl
daa
data16
jmp
cmp
inc
fs
daa
nop
out
xor
arpl
push
push
push
pop
cmp
ja
scas
mov
push
mov
pop
addr16
inc
das
xor
stos
sbb
mov
jbe
ss
sub
dec
rcrb
outsb
sub
idiv
xchg
cltd
ja
mov
pop
sub
push
push
cltd
daa
pop
stos
int
ljmp
add
leave
dec
jmp
pop
push
ljmp
pop
rcrb
ret
mov
sbb
mov
sub
out
imul
cmp
sbb
pop
cli
xor
xor
mov
jl
aad
popf
leave
pusha
jo
test
ret
dec
jp
sbbl
or
push
jno
aam
sub
bound
rcrb
adc
cmp
sbbb
fdivs
mov
pop
out
andb
mov
cmp
mov
xorl
mov
mov
mov
mov
xchg
loopne
loope
fwait
xchg
add
mov
dec
lock
xchg
ret
lock
and
shll
push
fwait
or
pop
pop
jns
es
jno
or
sarb
lahf
push
xor
gs
sub
add
push
mov
mov
int3
jb
rcl
xchg
and
stc
das
lret
cmp
icebp
cs
xor
mov
push
pop
lods
mov
pop
xchg
or
test
inc
cmp
stc
or
adc
jno
je
aam
push
mov
or
outsb
dec
stos
or
push
sbb
cmp
out
clc
mov
das
js
xchg
jecxz
mov
movsb
daa
fcmovnbe
sub
aas
mov
mov
mov
inc
push
in
decl
mov
movb
loope
mov
adc
jbe
mov
cmp
lods
jne
and
inc
decl
int3
imul
pushf
aad
xchg
or
mov
andl
mov
jp
jae
ljmp
jge
out
pop
sub
addr16
jnp
lea
movsb
hlt
aas
adc
adc
lods
cwtl
jno
xor
xor
out
sbb
mov
call
xchg
mov
pop
ret
seta
push
sti
aad
xlat
mov
addb
xchg
mov
divl
fsubs
out
adc
dec
pop
xor
aaa
jl
scas
add
dec
aad
mov
xor
pop
lods
xchg
dec
out
imul
or
je
sti
pop
sub
jb
xchg
pop
lods
or
arpl
mov
push
out
adcb
test
mov
rclb
lahf
xchg
test
leave
int
or
xor
shrl
and
out
les
fwait
sub
mov
add
iret
ss
cmp
and
decl
or
dec
or
js
leave
sbb
mov
push
dec
mov
push
mov
mov
popa
mov
sbb
cmp
lcall
mov
mov
xchg
into
bound
mov
xor
xor
jp
xchg
andl
push
iret
aam
push
loop
xchg
cli
jmp
popa
fstps
xchg
dec
pushf
pop
lahf
or
or
push
mov
popf
dec
cltd
mov
push
into
push
push
push
into
fnsave
pop
enter
les
or
push
jo
lock
roll
fwait
dec
sub
cmpsl
push
mov
inc
or
adc
mov
std
mov
mov
push
jne
jmp
xchg
aaa
sti
xchg
out
outsb
push
lods
fcoms
pushf
fnsetpm(287
ss
subb
cwtl
mov
push
icebp
out
rcr
lret
or
stos
repnz
fbld
cwtl
fnstenv
mov
sbb
gs
mov
xor
test
repnz
sbb
imull
aaa
cmp
sbbb
in
sub
xchg
enter
pusha
inc
or
insb
pop
shrl
stc
test
sbb
jg
cmp
jo
movsb
sub
ret
lcall
xor
addr16
sub
cmp
push
adc
lret
into
shr
sbb
and
mov
fimuls
mov
inc
dec
xchg
fstps
ss
ljmp
or
xor
jecxz
fimuls
xchg
stos
xchg
xchg
cmpsb
mul
mov
push
or
mov
xchg
shrb
fwait
ds
pop
or
fstl
frndint
mov
js
movsl
add
andb
out
test
and
aam
repnz
mov
cmp
scas
scas
scas
or
loope
imull
stc
sahf
ds
or
xor
inc
pop
pop
bound
js
les
xchg
pop
lods
icebp
or
jns
sub
cmpsb
mov
aad
lcall
xor
loope
adc
lods
xor
idivl
jle
das
xchg
ret
ret
gs
and
jne
adc
shlb
jne
mov
aaa
fdivrl
mov
imul
dec
dec
sbb
cmp
out
mov
inc
mov
es
pop
sbb
jbe
ficoml
js
repz
out
iret
cmpsl
push
mov
mov
gs
notb
add
dec
fldcw
int
in
nop
or
pop
sti
and
outsb
cmp
insl
xor
mov
pop
ja
xlat
lock
pop
mov
sub
adc
adc
lahf
sarb
out
iret
mov
inc
leave
cltd
adc
ds
ret
jg
mov
and
loope
or
add
jnp
in
add
dec
xor
cltd
jae
xchg
fcoml
aaa
and
pushf
xor
hlt
and
cmp
push
ljmp
aaa
inc
jb
decb
inc
jmp
lods
ja
mov
fwait
push
jp
sbb
adc
push
imul
leave
pop
xor
clc
pop
popf
insl
adc
ss
sbb
inc
jge
fwait
sbb
mov
lret
cmp
pop
int3
out
fcmovnbe
stos
mov
cli
inc
clc
scas
loope
in
mov
repnz
dec
lock
sbb
dec
sahf
scas
bound
fisttps
and
shll
lret
leave
loope
dec
cs
fisttpll
scas
jle
add
cmpsb
mov
cmp
scas
inc
cmp
jo
sbb
cmp
push
sbb
cmc
mov
mov
xor
push
arpl
stc
decb
dec
flds
sub
rorb
xor
jg
es
mov
sbb
push
scas
and
pop
and
jmp
xchg
aas
pop
mov
mov
cwtl
push
out
and
sub
inc
adc
mov
ficompl
notl
mov
das
dec
fdiv
imul
xchg
cmp
jl
out
dec
mov
cmpsb
mov
xchg
pop
paddw
subl
mov
mov
les
in
xchg
pop
addr16
xor
iret
cmc
int
sbb
push
lds
rorl
pop
shrb
inc
fstl
and
jnp
lock
scas
add
jne
jns
jge
ret
dec
cs
mov
in
in
int3
fcomi
dec
pop
jno
pop
xlat
mov
sub
ficoml
mov
adc
mov
xchg
xchg
daa
cmp
lods
xchg
aaa
xor
sbb
jecxz
cmp
lcall
xchg
aaa
enter
jns
mov
xchg
and
ja
xchg
movsb
pusha
aas
xchg
das
pusha
cmp
ret
leave
sbb
pop
mov
xchg
xor
mov
fcom
rcll
notb
loope
jne
imul
nop
push
dec
lcall
shlb
xchg
xchg
pop
push
push
lods
mov
popa
push
loop
inc
dec
cmpsb
int3
pop
add
jns
and
shrl
push
or
dec
jno
loope
enter
mov
stos
jb
push
dec
stos
popa
cmpsl
or
jp
sbb
dec
popl
pop
xchg
sub
call
lret
jnp
xchg
xchg
loopne
push
cmp
fstpt
lods
ljmp
ret
mov
rolb
movsl
loopne
mov
shlb
mov
mov
call
ljmp
adcb
xor
cli
fistl
nop
nop
jp
inc
and
in
xchg
inc
push
push
leave
in
sub
mov
cmpsb
testl
pop
sub
lds
push
lea
repz
cwtl
mov
mov
add
lods
dec
leave
mov
cs
bndldx
xor
outsl
das
cwtl
outsb
push
jecxz
std
sub
test
jg
in
dec
mov
push
sarb
push
inc
movsb
cmpsb
jb
cmp
push
orl
fsubrl
inc
cmp
fs
inc
rolb
adcb
aad
bound
jbe
jbe
in
das
xor
fidivrs
mov
das
or
xchg
sahf
sbb
addb
or
stos
mov
sub
je
imul
inc
cld
fsubl
fisubs
dec
std
mov
and
pop
pop
jle
ret
push
andl
and
push
imul
leave
add
fnstenv
lcall
or
inc
notl
leave
inc
or
imul
test
insb
call
enter
outsb
adcb
loop
mov
insw
cld
adc
scas
pushf
push
mov
lods
nop
mov
cmp
movsl
negl
shl
pop
cmp
call
lahf
adc
adc
popa
xor
cmpb
sbb
lret
and
mov
ds
and
sbbb
ja
stos
push
lock
mov
jp
roll
jecxz
stos
mov
dec
mov
inc
std
mov
pop
ss
fstps
je
adc
adc
sbb
inc
add
dec
or
push
imul
fstpl
pusha
sub
sub
xor
loope
rolb
hlt
add
fwait
pop
add
add
inc
mov
mov
or
ficomps
ret
adc
les
andb
xor
adc
mov
mov
aad
pop
js
jns
sub
clc
pop
jl
test
cmp
or
jmp
daa
lods
lods
xchg
sbb
lea
xchg
mov
mov
pop
inc
cmc
aas
mov
dec
inc
fiaddl
inc
test
jno
inc
adc
sub
push
mul
and
jo
js
jbe
mov
insb
pop
jbe
inc
cwtl
nop
and
jnp
sahf
pop
sub
loop
adc
xchg
ljmp
cmp
and
add
loop
popl
sub
add
fcmovnu
dec
loopne
mov
shll
mov
jnp,pn
dec
mov
mov
add
pop
xor
push
xor
imul
es
add
mov
adc
pop
xchg
add
xor
call
pop
fmul
iret
pushf
test
cmc
mov
cld
xlat
pop
mov
loope
push
mov
sub
rcl
xchg
andb
cmp
inc
cmp
cltd
and
or
adc
xchg
lods
fiadds
sub
sub
xchg
shll
repnz
sub
push
cmovb
jnp
jne
out
in
jge
add
call
or
mov
data16
xor
pop
jns
mov
cltd
sub
sbbl
insb
rcrb
mov
sbb
and
xchg
jb
out
and
cs
mov
stos
adcl
shll
mov
pushf
push
cs
cmp
repz
push
add
pop
adc
xchg
jmp
push
mov
out
sbb
fldcw
movsb
nopl
lret
inc
mov
ror
leave
add
sbb
and
imul
inc
repnz
xor
loope
test
mov
std
push
mov
test
test
fucomp
adc
loopne
cwtl
movsb
push
xchg
cmp
mov
gs
or
inc
jecxz
loop
fdecstp
in
and
pop
mov
pop
add
push
pop
push
and
cmp
shlb
xlat
data16
out
loope
js
dec
mov
loop
inc
ds
pop
lret
xor
dec
xchg
mov
mov
ficoml
shll
inc
dec
or
xor
pop
mov
pop
lds
xchg
fs
add
int3
xchg
arpl
mov
fdivr
and
out
cli
inc
push
cld
movl
push
ja
and
test
push
stc
insb
xor
cld
dec
xchg
repnz
ljmp
mov
add
js
lcall
mov
test
imul
scas
out
movsl
out
imul
call
xchg
out
adc
pop
insb
and
jg
xor
jp
jle
popf
xchg
std
add
mov
or
push
imul
insl
cwtl
arpl
mov
sub
mov
arpl
hlt
sub
aam
add
mov
mov
dec
mov
adc
aad
addr16
inc
mov
test
dec
mov
mov
cmpsb
jmp
mov
hlt
jbe
lods
push
xchg
pop
mov
mov
mov
jo
prefetch
or
ss
jo
stos
push
addb
xor
lahf
aad
mov
faddl
cmp
push
shr
add
das
cmp
mov
mov
mov
mov
xchg
jg
push
lahf
imul
or
push
popa
mov
insl
mov
out
dec
mov
iret
jl
mov
jnp
loopne
sub
inc
jl
xor
test
sahf
inc
popa
jl
jbe
xchg
jns
outsl
aaa
pop
xchg
sbb
fsub
fwait
jmp
mov
mov
decl
and
insb
xchg
in
movsb
pop
sti
addr16
jne
sahf
fldl
xlat
repz
mov
pop
push
push
daa
mov
and
pop
or
js
aas
data16
call
fimull
and
dec
andl
sub
lea
jmp
dec
dec
xor
popf
pop
sub
inc
in
loopne
adc
push
ret
xor
aad
cmp
sub
pop
mov
sbb
insl
inc
cld
lret
or
mov
push
in
and
pop
out
mov
dec
ss
aad
push
xor
jb
ret
hlt
inc
fildll
and
clc
push
int
in
or
mov
mov
popl
fbstp
mov
pop
push
sbb
hlt
das
or
lods
or
add
movsb
out
scas
push
leave
sub
call
xor
cmpsb
dec
jge
lahf
adc
mov
add
scas
add
mov
xchg
xchg
mov
shrb
popa
call
jmp
stos
mov
jg
adc
mov
out
and
jno
sti
sti
fnstsw
outsb
and
mov
mov
loope
adc
cltd
inc
adcb
mov
pop
mov
pushf
cmp
sub
mov
pop
js
jns
stc
sbb
clc
lds
and
addl
pop
xor
jge
mov
fistps
push
inc
lcall
pop
movsl
out
and
jo
adc
negl
mov
inc
iret
push
sub
gs
adc
imul
fidivrl
sbb
xchg
sahf
jmp
out
add
int
clc
cli
xor
test
test
jb
or
pop
or
xchg
gs
jl
divb
out
out
and
or
push
pushf
xor
repnz
imul
sbbl
sti
mov
cmp
icebp
dec
out
push
sbb
in
mov
jle
pop
inc
push
push
dec
mov
loopne
pop
jle
mov
jne
jae
jno
inc
enter
jg
add
cs
sbb
mov
jne
jl
iret
lds
push
and
sub
stos
or
scas
popa
addr16
aas
je
mov
imul
bound
mov
pop
dec
jae
das
repz
outsb
je
pop
jle
ret
cwtl
movl
sub
fwait
cmp
fsts
mov
gs
inc
fcomps
jecxz
mov
and
jmp
xor
pop
out
xchg
div
xchg
xrelease
rclb
cmpsl
popf
add
in
or
aas
test
add
push
sbb
icebp
fstl
sti
ret
outsl
sub
push
pushf
hlt
mov
movsl
xor
dec
addb
mov
cmp
push
pop
sbb
inc
mov
xor
sub
mov
add
inc
test
adc
pop
int
push
movsl
and
bound
push
inc
or
mov
sbb
jae
sbb
jle
imul
js
iret
mov
xlat
call
loope
pop
inc
lahf
loopne
shll
fdivr
xor
loopne
int3
dec
xchg
inc
fs
dec
jnp
push
sti
and
fs
fstpt
mov
out
rcrb
push
pop
notb
in
fisubl
mov
xorl
clc
mov
loopne
out
mov
push
xchg
cmp
xor
scas
jne
ds
scas
mov
mov
mov
xchg
fwait
daa
stos
fmul
movsb
or
shrb
add
mov
xchg
sub
cltd
or
pop
fsts
mov
adc
fucom
push
ret
subb
adc
mov
fs
js
add
cmc
push
mov
mov
test
adc
aaa
mov
call
adc
add
xor
je
pop
into
adc
xchg
or
fstpl
out
aam
cmp
test
mov
stos
bound
push
push
outsl
and
and
and
push
ret
repnz
jnp
push
xlat
mov
dec
jno
imul
stos
ja
push
jne
ljmp
pop
out
pop
rcl
jecxz
int3
adc
dec
jns
loope
pop
add
pop
in
je
mov
push
or
pop
lods
repnz
pop
repnz
lea
std
adc
jae
dec
cwtl
aas
andl
inc
sbbl
mov
add
inc
ficomps
dec
arpl
mov
and
lods
adc
outsb
mov
dec
xor
fcoms
mov
lahf
jb
jns
nop
adc
movsb
or
fildll
inc
adc
roll
loopne
push
or
das
repz
xchg
aam
mov
adc
pop
out
jg
icebp
loopne
push
jmp
idiv
adc
sahf
jnp
or
out
out
jp
mov
jbe
pop
mov
cmpsl
out
into
rcr
jl
or
inc
pop
cwtl
push
cli
xchg
and
mov
xorl
jecxz
add
adc
sub
dec
mov
call
xchg
mov
sub
push
xlat
leave
add
xchg
scas
mov
dec
repnz
imul
nop
or
mov
insb
dec
inc
mov
cmpsb
ja
out
mov
or
out
nop
mov
push
sahf
test
pop
stc
in
xor
mov
inc
stc
enter
imul
in
loopne
loop
xor
mov
aaa
mov
fdivl
sahf
adc
xchg
shrb
imul
lock
adc
sahf
pop
add
test
lret
cmpsb
test
pushf
xor
out
cli
dec
mov
pop
negb
push
mov
lods
inc
fiaddl
out
mov
insb
scas
jmp
push
inc
subb
repz
and
cwtl
sbb
in
cmp
insl
je
push
pop
fimuls
mov
jae
mov
pusha
jmp
rolb
addb
cmp
divl
sub
or
jnp
repnz
mov
push
and
and
inc
test
mov
push
rcrb
cmp
sub
lods
xchg
xchg
push
jno
out
jnp
in
sbb
mov
cmc
push
push
aam
jo
stos
xchg
xorb
inc
stc
mov
das
add
ret
lea
scas
xor
stc
adc
mov
sahf
cmc
adc
sub
adc
xchg
mov
sahf
pop
dec
jb
mov
xlat
pop
add
xor
in
in
cmp
fisubs
dec
mov
sub
push
cmp
shlb
mov
xchg
sub
cmp
insb
cmpsl
push
aad
jle
outsl
jmp
cmp
ret
jecxz
jns
cwtl
sbb
sbb
std
cmpl
push
mov
xor
sub
dec
sub
out
inc
inc
hlt
popf
roll
mov
test
mov
inc
add
lret
cltd
out
sarb
cli
sub
rcrl
shlb
mov
xlat
mov
pushf
adc
pop
cmp
or
pop
popa
lods
mov
decl
ljmp
adc
adc
adc
ja
leave
and
push
adc
cmp
jl
outsl
mov
dec
add
or
dec
cmc
jg
rol
popf
icebp
fisttpl
cmp
and
mov
ret
pop
int3
js
outsb
mov
cli
xchg
or
repz
test
imul
ja
add
cld
xor
cmp
fadd
dec
adc
mov
add
jno
js
mov
push
daa
xor
sub
lods
fisttps
adc
push
sub
ret
js
les
dec
fldt
cmp
sbb
xchg
ffreep
mov
jb
cli
mov
mov
cmp
out
and
xchg
adc
outsl
daa
xchg
and
push
negb
ss
jns
pusha
cmp
stos
cmpl
jmp
shrb
sbb
push
inc
lret
iret
std
mov
jnp
loope
dec
adc
flds
mov
pop
jne
lods
or
mov
pop
hlt
add
jo
clc
sbb
mov
mov
jne
lock
shll
mov
cmpsb
sbb
icebp
sahf
andb
dec
negl
pop
leave
inc
sbb
adc
fucomip
int3
std
fwait
lahf
add
xor
sub
jo
sti
lret
bound
sahf
adcb
mov
pshufw
mov
push
nop
cmp
cs
sbb
add
push
jb
xchg
insb
rcll
and
arpl
lea
out
aas
les
mov
inc
aad
xor
ss
mov
mov
daa
test
insl
cwtl
out
insl
lds
mov
push
ret
je
mov
mov
pop
xor
mov
push
and
adc
dec
mov
xchg
mov
movsb
int
sub
movsb
mov
mov
jecxz
or
cltd
dec
push
mov
adc
jbe
fcomps
pop
pop
out
push
test
out
jmp
and
pop
arpl
out
fldl
dec
out
jnp
test
or
inc
lea
lret
shrl
fidivrl
jnp
stos
ss
frstor
repz
cltd
js
cmp
dec
add
cwtl
fst
dec
pop
fildl
shll
and
mov
mov
std
sbb
je
mov
pop
mov
dec
imul
pop
dec
lods
pop
mov
test
dec
or
mov
fbstp
inc
hlt
mov
add
push
jbe
int
lahf
call
sbb
shlb
xor
call
push
mov
add
or
jecxz
lea
and
divl
or
push
sub
sub
dec
test
add
aaa
outsb
bound
lret
insl
test
sbb
aad
adc
rclb
sub
into
jne
dec
dec
dec
and
rcrl
mov
jae
mov
mov
pop
pop
add
addr16
sub
int3
popf
jo
push
adc
pop
shlb
movups
xchg
iret
adc
adc
fcmovnu
out
sbb
push
sub
xor
es
outsl
pop
sbb
adc
outsl
lcall
push
mov
lods
inc
andl
je
out
rcrb
scas
sbb
lds
fsubrs
aaa
push
popa
in
adc
push
mov
test
and
filds
and
std
call
inc
jo
in
imul
int
aas
std
les
lods
jle
loopne
inc
push
in
xchg
sub
loopne
movsl
pop
bound
push
xorl
aas
adc
jo
pop
call
js
or
adc
je
es
xchg
negl
sbb
daa
add
aaa
sbbb
icebp
and
sbb
sbb
sbb
or
xor
push
pushf
mov
je
sbb
mov
fwait
mov
sub
fadds
mov
aad
stos
clc
cmp
xchg
pusha
cmp
imul
pop
insb
sahf
addr16
lret
cmp
add
pop
loopne
sub
fidivrs
mov
sub
not
or
mov
ljmp
dec
cmp
cmp
lds
jl
sbb
push
push
arpl
jne
out
js
aaa
aad
xor
loop
call
les
xor
aaa
fstpt
xchg
pop
push
gs
iret
cltd
popa
push
jns
into
into
arpl
pop
or
testl
fbld
scas
jmp
adc
push
lds
add
insl
jle
xchg
fs
xor
fucomp
cmp
jo
sbb
lcall
call
incl
push
loope
mov
push
dec
or
xchg
inc
cmp
in
cli
pusha
aam
inc
sub
mov
fs
sbb
mov
add
mov
adc
mov
nop
cmp
inc
cmp
scas
add
ds
mov
ret
and
ds
cmpsb
out
out
push
in
mov
inc
jle
xlat
and
add
out
push
cmpsl
movsl
jae
push
cltd
cmpsb
inc
sahf
je
out
ljmp
iret
push
mov
add
idivl
pop
add
in
jmp
ja
das
into
push
movsl
call
cmp
mov
xchg
adc
movsb
inc
xchg
pop
out
jo
sbb
inc
in
sub
loope
ss
push
mov
movsb
mov
popa
fldl
pop
shlb
jecxz
mov
pusha
adc
cmp
stc
ret
and
xchg
push
int
in
incl
mov
sbb
inc
ljmp
push
adc
mov
mov
decb
fcoms
pop
lea
inc
adcb
jne
xchg
ret
sub
fsubrs
out
mov
jae
inc
pop
out
adc
inc
andl
ja
inc
jge
xchg
or
xchg
jg
mov
repz
imul
test
les
cmp
dec
hlt
negb
dec
jne
push
push
js
cmp
add
sub
in
push
push
sub
stc
sub
push
outsl
popl
jo
cli
dec
rcr
inc
repz
fildll
push
mov
and
dec
sub
inc
or
imul
add
idivb
pop
insl
cwtl
out
jecxz
cmp
fsubrs
sahf
jns
push
inc
ret
fnstcw
xorb
ja
rcr
out
shrb
in
push
sub
sub
movsl
sbb
pop
lea
lods
test
shl
std
jnp
loopne
lcall
ja
inc
lea
sahf
push
cmp
arpl
adc
xchg
cmp
push
pop
push
addr16
push
jg
push
mov
bound
pop
arpl
jns
adc
andb
fldl
dec
popf
xor
popf
xchg
addr16
movsl
lods
scas
loopne
add
jle
mov
pop
push
adc
pop
mov
mov
je
dec
cmpsb
jb
mov
daa
arpl
lds
xchg
aam
push
cwtl
rcll
push
mov
xchg
imul
sub
loop
sbb
sahf
in
fucom
sub
jae
gs
lret
test
adc
jb
mov
imul
inc
sbb
sti
gs
mov
fmuls
out
pop
mov
test
ret
push
in
fdivrl
jp
push
jb
sub
inc
in
and
mov
lret
pop
dec
lods
js
popf
cltd
xor
out
in
mov
mov
imul
xchg
mov
xchg
push
mov
xor
lahf
stos
insl
out
idivb
inc
ret
xor
xor
jmp
push
fs
sbb
outsl
dec
fcompl
aad
mov
jmp
ret
push
stos
mov
fisttpl
test
rolb
pop
push
mulb
dec
fistpl
cmpsl
ljmp
loopne
mov
das
cwtl
or
pushl
int
inc
sbb
nop
cld
mov
out
nop
pushf
sbb
jl
inc
call
adc
sarl
xchg
hlt
mov
adc
enter
or
dec
mov
mov
cld
pop
pop
pop
ret
fcmovnbe
jno
add
into
xor
xor
mov
xchg
repz
xlat
dec
mov
add
mov
dec
inc
outsb
xchg
and
inc
add
sub
adc
jnp
lahf
inc
bound
mov
movb
xchg
push
iret
inc
xchg
mov
cmp
mov
adc
lds
fucom
mov
xchg
imul
decb
jnp
or
popf
and
jns
mov
out
std
xlat
cmp
mov
pop
cltd
test
jno
in
ret
ficompl
mov
in
dec
jne
and
and
call
xor
gs
movsb
pop
scas
dec
shll
adc
jge
enter
jno
mov
dec
in
popf
pop
add
subb
out
in
in
xchg
pop
jp
adc
sbb
cmp
ds
fidivl
jns
xchg
out
or
mov
lahf
out
icebp
and
orb
lret
mov
jno
add
cmpsl
fs
orb
add
jno
inc
sub
pop
js
pop
xchg
pop
mov
or
cmc
sbb
fsubs
push
inc
loope
and
sub
ficoms
repnz
lret
pop
int
mov
ficoml
movsl
rcrb
xchg
imul
sbb
into
jmp
jecxz
xchg
bound
cmp
add
cmpl
loop
test
out
or
loope
in
sub
ja
arpl
subb
and
les
adc
dec
and
sti
pushf
stos
push
rcll
outsl
or
test
loopne
cli
in
in
cmp
xchg
cmp
jge
and
iret
or
insl
xor
xor
incl
adc
popf
loopne
add
sbb
pop
inc
inc
imul
test
out
lcall
rorl
inc
add
mov
xchg
dec
dec
inc
sub
jns
push
sbb
inc
adc
xor
stos
mov
mov
push
lcall
roll
in
cmp
sbb
clc
sahf
sarl
pop
xor
mov
andl
jle
aad
push
xchg
mov
daa
js
fistpll
cmp
or
jmp
inc
roll
push
mov
int3
daa
jo
dec
arpl
addb
std
sub
mov
or
insb
sbb
outsl
aas
insb
mov
hlt
push
mov
out
fnstenv
and
test
add
inc
pusha
dec
fistpll
adc
or
inc
clc
xor
out
push
cs
ret
jle
mov
loop
jne
dec
xchg
jg
xor
sahf
sub
stos
sbb
push
jne
mov
pop
addr16
sbb
decb
popf
out
or
sbbl
dec
jecxz
jae
ret
arpl
pusha
mov
jno
sbb
jo
mov
icebp
and
cmc
andb
insl
sbb
pop
repnz
movsb
pop
sub
pop
and
ret
fwait
sub
iret
pop
xor
ja
xchg
xchg
in
nop
add
cmp
adc
pop
push
cli
loopne
dec
pushf
xor
push
add
adc
roll
jns
mov
jne
enter
xchg
mov
or
pop
lods
test
sbb
add
gs
imul
and
inc
icebp
aad
in
push
das
inc
out
xchg
sti
push
iret
jnp
push
loop
mov
sbb
inc
pop
or
data16
mov
lods
addl
mov
hlt
int3
not
jae
push
sbb
jge
xor
fs
cld
ret
push
xor
sbb
insl
xor
jbe
mov
cmovg
test
mov
ret
cmpsl
cltd
cltd
fucomp
mov
xor
adc
xor
xchg
fcmovbe
or
or
enter
or
pop
lahf
pusha
out
pop
xor
stos
lods
jbe
mov
push
mov
push
dec
enter
out
mov
ss
adc
push
rcrl
mov
ret
pop
test
scas
inc
cmp
popf
into
sub
call
in
add
pop
adc
pop
icebp
std
sahf
push
jae
dec
cmp
and
or
xor
lods
aas
push
jg
sub
cmp
mov
xchg
out
ret
pusha
mov
push
push
cmpsl
popa
inc
push
pop
push
pop
imul
dec
ja
test
ja
mov
pop
push
std
push
jg
sbb
iret
mov
lds
mov
andl
cmpsl
sbb
mov
dec
xchg
dec
stos
pushf
movsl
dec
mov
scas
cs
in
in
mov
and
dec
enter
push
dec
test
xchg
lahf
outsb
loop
mov
pusha
ret
mov
xchg
xor
mov
sub
std
iret
loop
jno
repnz
int3
mov
loop
rcrb
in
leave
mov
mov
arpl
pusha
push
xchg
xchg
mov
in
fsubr
in
add
and
inc
jle
xchg
nop
pop
addr16
mov
add
testl
cmpsl
into
xchg
inc
pop
pop
lahf
or
lahf
out
adc
jno
adcl
inc
jmp
pop
jp
lds
dec
inc
loopne
ljmp
lret
or
cmpsl
xlat
and
inc
pop
jmp
leave
mov
in
daa
cmp
pop
or
push
sbb
addr16
inc
in
mov
dec
por
cltd
push
dec
lret
loope
addl
rorl
cmp
dec
inc
cmp
pop
mov
mov
push
pop
clc
out
out
adc
sti
sub
cmpsl
addr16
aaa
or
sbb
sub
mov
stos
sahf
scas
lahf
shlb
pop
pop
scas
xor
lahf
hlt
jnp
cmpsl
popf
les
in
ficoml
sub
xchg
dec
insb
les
aas
and
jl
inc
cmpsl
ss
push
xchg
and
gs
push
push
sub
inc
jo
mov
pop
loope
or
mov
or
icebp
jge
xor
out
jo
adc
dec
sbb
repnz
pop
pop
jecxz
aam
repz
mov
cmpsb
mov
ret
addr16
push
sbb
mov
subl
lret
in
add
scas
push
leave
lds
out
fdiv
and
iret
mov
popf
icebp
xor
stos
push
pop
lahf
push
lahf
mov
jl,pt
mov
adcl
mov
int3
sub
xchg
or
sub
mov
mov
orb
movl
lahf
push
or
cmp
into
stos
inc
subl
mov
add
dec
dec
shr
cmp
cmpsl
aam
pop
test
inc
lret
or
ret
sti
adc
ret
mov
mov
pop
imul
gs
jae
mov
daa
gs
popf
pop
add
mov
cmc
mov
fisttpl
adc
fbstp
cs
insl
mov
imul
lods
sbb
aas
ret
insl
or
jb
sub
mov
icebp
out
mov
repnz
adc
mov
les
mov
push
mov
pushf
pop
fwait
jecxz
xchg
add
scas
rorl
jbe
outsb
lahf
push
dec
push
subb
ds
dec
jg
cmp
mov
mov
pop
cmp
inc
pop
jp
cwtl
sub
mov
cmp
mov
clc
pop
and
xchg
sti
test
sub
inc
lds
js
xchg
mov
jl
cmc
fdivrl
test
push
rcrl
pop
mov
icebp
imul
pop
inc
jne
lock
cmpsl
jae
xrelease
jg
loop
fucomp
cmp
ret
lahf
cmp
or
sub
jl
lret
outsb
pop
fldenv
subl
sbb
shl
dec
xor
jg
ret
jb
push
mov
push
fwait
shll
mov
push
cmp
int
push
imul
jae
jg
stos
add
repz
mov
xchg
inc
bound
int
cmp
test
incb
icebp
pop
and
add
mov
jnp
mov
cmp
mov
mov
addr16
push
xchg
aam
rcll
int
pop
or
fwait
push
ds
push
xor
fstl
cmp
mov
jle
mov
aam
test
repnz
addr16
or
push
daa
aas
imul
enter
mov
sbb
xchg
test
loope
lcall
fiadds
sub
subb
jb
mov
enter
das
xor
jmp
jg
add
lret
cs
pushf
scas
cmp
fidivrs
jae
add
fcoms
hlt
sbb
aaa
or
pop
adc
push
into
inc
repnz
push
adc
shrl
xchg
gs
jle
shlb
loopne
fs
loop
mov
pop
xchg
pushf
ss
scas
gs
ja
pusha
psllq
cmp
imul
mov
dec
call
mov
xchg
xchg
loop
addr16
ud1
test
adc
addr16
scas
scas
sub
jnp
inc
test
ror
sub
pop
xchg
pushf
cli
sti
mov
fldl
sub
jecxz
cmp
mull
mov
lock
lahf
pusha
sub
shrb
roll
scas
mov
pop
inc
inc
mov
xlat
sahf
jo
rsm
into
adc
add
dec
push
lods
ret
mov
aaa
cltd
dec
push
push
scas
lss
rcll
mov
outsb
mov
and
push
jnp
sbb
clc
adc
xchg
and
es
fildl
push
sub
loopne
aas
xchg
sbb
and
and
imul
cld
cmpsb
dec
xor
popf
push
addr16
jge
cld
cwtl
jo
pusha
mov
push
mov
cli
int
jle
test
fnsave
subl
add
bound
scas
lds
sbb
sbb
and
sbb
mov
je
movsl
xchg
adc
imul
das
or
push
mov
inc
adc
popa
mov
pop
xchg
and
out
dec
and
fadd
in
sbb
push
mov
iret
add
fistl
imul
jl
ret
loope
inc
repnz
push
xchg
mov
xchg
mov
jmp
scas
pop
out
push
and
in
out
mov
adc
push
int
cmc
shr
jecxz
rcrl
push
lea
mov
inc
pop
inc
shr
adc
out
in
repnz
sti
dec
or
push
jo
aaa
jae
leave
xchg
dec
in
sub
mov
and
fiadds
out
mov
add
dec
imul
test
insl
sub
hlt
cmp
mov
add
popa
add
push
rcrl
dec
pop
int
jne
popf
out
push
mov
das
inc
xorb
jmp
mov
sbb
mov
clc
pop
in
adc
cmp
out
mov
and
xchg
sbbb
sub
adcl
mov
arpl
scas
inc
pop
or
das
bound
test
fstl
push
dec
imul
push
popa
add
into
je
in
mov
pop
pop
inc
clc
sti
fidivl
pop
mov
jmp
xchg
stos
sub
push
lods
cmp
xadd
mov
push
jne
dec
inc
loope
pop
ds
idiv
and
daa
fcoms
dec
mov
mov
int3
pushf
shl
rorb
cmpsb
xlat
lds
cmc
inc
cmp
divb
pop
xchg
test
sbb
and
dec
add
fldenv
push
push
mov
push
outsb
push
mov
scas
mov
and
out
jno
iret
js
pusha
xchg
ss
es
jl
rolb
adc
xchg
in
popa
pop
mov
add
dec
jnp
rorl
dec
rcrl
in
int3
cltd
fcos
xor
aaa
push
push
popf
or
mov
xchg
jb
mov
pusha
and
aam
jg
jns
adc
lret
mov
xlat
hlt
jl
jo
xchg
sub
adc
das
lcall
push
push
inc
dec
mov
dec
sbb
lea
in
mov
xchg
adc
mov
jp
sti
mov
dec
inc
or
inc
pusha
mov
push
ret
xor
jmp
ljmp
jle
mov
adc
repnz
inc
mov
and
mov
fmulp
jle
jns
test
lds
out
popf
imul
mov
xchg
mov
popf
adc
std
pop
out
ss
adc
mov
sbb
pop
add
outsb
sahf
nop
push
inc
inc
add
or
cmp
in
data16
jmp
mov
mov
popa
lcall
inc
sub
aam
and
insl
xor
cmp
cmp
inc
ret
adc
fsubl
aaa
xor
es
into
rcr
leave
out
cmpl
mov
out
nop
aad
or
sbb
mov
jnp
pusha
arpl
outsb
ja
inc
cmpb
out
imul
adc
lods
dec
pop
imul
mov
jno
xor
stos
sahf
jl
push
xor
lods
rcr
add
mov
and
ficompl
sub
push
mov
ret
sbb
movsb
mov
xchg
pop
inc
inc
pusha
lret
lcall
hlt
xchg
dec
aaa
and
std
hlt
mov
add
pushf
mov
cmp
and
adc
mov
or
cmp
dec
je
mov
cltd
aad
lret
and
in
icebp
mov
jecxz
push
cmp
lods
add
xchg
mov
pushf
ficoms
sub
xor
or
pop
pop
jl
cltd
mov
lds
into
aam
or
cld
jb
cmpsb
aas
pushf
lock
and
aam
cmp
into
shrl
dec
mov
clc
mov
xchg
mov
repnz
add
jno
sub
fs
mov
mov
xchg
leave
inc
sbb
push
stos
inc
mov
mov
add
sub
test
inc
divl
inc
ljmp
into
push
add
lock
scas
cmp
outsb
pop
lods
and
push
inc
jge
dec
lock
lcall
loopne
mov
adc
push
fdivs
and
out
jge
in
in
out
mov
mov
movsl
je
loope
pop
sub
ss
jg
lods
xor
pop
lret
mul
lea
push
fwait
daa
divb
sbb
push
daa
push
shlb
adc
ja
and
cmp
bound
xchg
sti
rorl
pop
insb
in
adc
loopne
cld
inc
les
fsts
shr
jne
push
add
sbb
mull
lahf
pop
test
jecxz
cmp
sub
pop
mov
test
mov
pop
bound
cld
xchg
push
pop
into
or
dec
inc
ss
xorl
push
and
push
in
push
nop
inc
pop
lods
out
dec
add
in
sub
inc
sbb
inc
dec
push
cmp
push
cmpsl
pop
inc
dec
or
dec
dec
enter
push
cmp
out
inc
mov
and
mov
jne
xchg
add
and
out
leave
orl
scas
hlt
xchg
jo
inc
clc
lcall
call
jnp
and
call
sub
xor
pop
ss
push
pop
sub
adc
mov
mov
adc
lret
pushf
pop
std
cwtd
repz
jbe
insl
lea
jnp
in
pusha
xlat
mov
pop
pop
add
out
lea
fs
push
push
cmp
fwait
lahf
out
sub
mov
inc
sbb
jb
cmp
repz
jl
mov
xlat
mov
sti
les
movsl
shll
push
xor
cmpsl
cmp
movsl
fdivrs
inc
ret
add
jg
push
out
out
iret
push
cmp
or
mov
cs
or
fsubrs
pop
adc
jns
int3
out
inc
jb
test
or
jl
out
insb
mov
out
jp
repnz
add
fldcw
addr16
pushf
outsb
es
insb
and
in
popa
mov
lods
sarl
scas
out
outsb
and
sub
mov
xor
call
jmp
jne
hlt
inc
xor
xchg
sbb
and
jno
push
rolb
cmp
push
xor
xlat
mov
lods
mov
dec
cwtl
scas
and
mov
pop
cli
dec
lret
inc
add
sar
aam
jle
pop
fsubr
arpl
in
cmc
add
cmp
test
stc
ljmp
inc
adc
sbb
push
and
inc
movsl
sub
in
sbb
push
pop
add
mov
fstl
push
mov
add
add
or
pop
mov
inc
loop
lock
aad
dec
cmc
insl
mov
xchg
test
lret
rcrl
or
xlat
add
jecxz
pop
popf
inc
loop
jae
movsl
xor
or
out
rcrb
xchg
je
lds
sbb
cmpsl
inc
push
repnz
cltd
dec
mov
lods
mov
rorb
inc
xor
push
mov
stos
mov
fdiv
call
iret
out
mov
lahf
lea
sub
and
clc
data16
addl
pop
jo
lahf
fldt
mov
cmp
jno
daa
je
xor
add
aad
xchg
call
jecxz
idivl
add
sbb
ja
push
xor
sbb
cmp
imul
xor
iret
icebp
push
or
push
add
bound
xor
clc
test
int3
fildll
or
inc
push
and
inc
mov
les
or
stos
mov
or
adc
fidivrs
es
mov
lock
xchg
adc
inc
pop
push
ret
push
pop
ja
insb
das
and
pop
sub
daa
pop
xchg
sub
push
ror
and
mov
out
jno
mov
inc
rcrb
fwait
pop
pop
mov
icebp
dec
push
jae
pop
inc
xchg
pop
stos
jecxz
ficoml
mov
jno
popf
cli
cli
es
lock
test
test
or
mov
jb
fbstp
cmp
push
sub
add
std
cmp
push
aaa
dec
cmp
jne
sub
hlt
and
sarb
adc
fisubrl
xor
fcompl
xchg
mov
inc
add
xorl
mov
mov
loop
lahf
push
jl
sub
negl
aam
into
rep
je
xchg
outsb
pop
and
test
inc
adc
mov
test
pop
sub
add
subl
xchg
stos
sub
inc
aas
xchg
cmp
inc
out
and
sbb
dec
cli
sar
mov
cmc
sbb
lods
ret
jno
cli
pop
repnz
sbb
ss
sar
xor
cmp
mov
sub
mov
les
outsl
pusha
je
and
popf
pushf
mov
jnp
mov
xchg
add
xchg
lea
jno
dec
arpl
inc
adc
stos
aad
mov
and
sbb
dec
push
out
xchg
arpl
icebp
xor
fdivs
mov
jns
mov
pop
cltd
push
lods
stos
fdivrs
xchg
xchg
loopne
dec
sbb
and
out
es
out
push
or
negb
mov
call
repnz
frstor
jns
cli
mov
push
cmpsb
imul
pusha
pop
shll
dec
xor
test
pusha
ss
add
mov
inc
lfs
out
dec
in
xchg
dec
jg
push
cmp
pushf
loope
lds
stc
aaa
pop
dec
mov
pop
jmp
rcr
pop
lret
lock
mov
push
popa
jg
nop
add
mov
jno
lock
mov
mov
xchg
inc
mov
sarb
xor
negl
lea
lods
fsubl
cmp
dec
mov
sbb
pop
imul
dec
into
inc
mov
push
cmpsb
cmc
pop
lods
or
push
repnz
and
addr16
xchg
rcr
or
pop
or
cltd
loopne
inc
and
pop
pop
mov
js
or
sbb
sbb
pop
xor
fs
fcoml
cmp
sti
sar
test
gs
repnz
add
popf
lods
jmp
sub
pushf
push
sbb
outsb
or
daa
divl
lret
add
fadd
jmp
and
push
adc
mov
mov
idivb
xchg
popf
sbb
jo
cmp
lock
add
sbb
xchg
jmp
sarb
cwtl
jnp
int
xor
mov
fdivr
jo
cwtl
jne
shl
dec
fildl
xor
inc
add
jle
ds
mov
push
sbb
cmp
mov
scas
sub
sub
lock
sbb
test
mov
loope
popa
daa
movsl
in
scas
fcoms
int3
inc
jmp
ljmp
mov
psubq
mov
pop
dec
out
stos
fnstenv
push
repz
mov
loop
test
and
aas
pop
jmp
nop
or
ds
inc
xchg
stc
mov
add
mov
sarb
xlat
rcl
shrb
lahf
rol
mov
popl
shlb
shrl
mov
aaa
or
int3
mov
pop
enter
mov
push
arpl
mov
ja
pop
mov
aaa
or
ss
xor
in
scas
aam
out
sbb
loopne
mov
jg
fcmovne
pop
dec
jne
ficomps
insl
dec
jmp
cmp
int3
incl
xchg
jg
insl
pop
daa
sahf
dec
in
xor
add
mov
mov
mov
clc
dec
sar
fcompl
pop
sti
mov
pop
jge
call
lods
xor
inc
cmp
jp
lahf
xchg
push
xchg
dec
imul
repz
in
int3
pop
pop
add
mov
jo
and
cmp
push
fldcw
cld
cmpsb
movsl
sti
mov
addb
jmp
dec
jo
into
hlt
inc
xchg
imulb
es
pop
fisubrs
xchg
and
cmpsl
jne
push
jns
nop
mov
out
jl
push
inc
inc
sub
orb
stc
sub
hlt
in
xor
addr16
add
and
xchg
mov
lcall
fnsave
scas
arpl
cmp
sar
mov
pop
push
mov
loope
sbb
enter
mov
aas
jecxz
mov
loop
lea
in
push
cmc
dec
adc
or
adc
mov
mov
mov
xor
test
sub
mov
add
out
adc
sub
shll
xchg
and
arpl
mov
filds
in
das
dec
jnp
clc
mov
cld
mov
and
add
imul
cmp
adc
and
push
test
jae
push
fwait
stos
aad
sub
dec
push
sbb
xchg
pop
shl
add
xor
mov
fwait
cmp
stc
sub
aaa
fists
popa
ss
push
cltd
jnp
je
mov
jno
pop
aam
add
pop
mov
leave
sarb
es
xchg
adc
push
sbb
mov
pop
jg
lods
cli
mov
pop
loopne
or
shll
xchg
mov
rorl
add
pop
pop
xchg
sbb
push
sub
xchg
out
movsb
push
das
mov
fnstcw
inc
or
xchg
or
movsl
lock
repnz
jns
or
filds
inc
adc
jle
cs
daa
ret
in
jg
sbb
sbb
notb
outsb
pusha
adc
rolb
pop
and
shrb
push
or
addr16
xchg
sbb
inc
shr
addr16
ss
call
mov
dec
orb
inc
or
daa
pop
add
push
lahf
fmul
ja
push
sti
dec
ljmp
sar
xchg
cmpsb
clc
xor
or
enter
shlb
pop
mov
aaa
xchg
xchg
jp
mov
xchg
popf
cltd
sbb
pop
out
mov
loop
push
jg
ret
jle
add
adc
pushf
cmp
in
mov
rcrl
cmp
mov
fimull
cmp
adc
xchg
dec
push
jns
push
repz
push
push
pop
sbb
and
sbb
mov
pop
jg
push
fcomps
mov
and
ret
jb
cmp
xchg
fistpll
mov
mov
jne
hlt
push
mov
or
movsl
jno
dec
mov
xorb
ljmp
ss
test
add
ljmp
adc
sbb
loopne
pop
outsl
sbb
add
mov
jmp
sti
out
mov
mov
mov
pop
dec
add
fidivl
int3
and
and
pop
aaa
mov
dec
xchg
jne
sub
cwtl
call
mov
xchg
pop
lahf
mov
repz
pop
pop
dec
test
add
in
pop
xchg
rcrb
inc
imul
sub
add
popf
cwtl
inc
ljmp
or
insb
repz
push
push
popf
stc
sub
lds
out
or
fucomip
mov
mov
addb
cltd
insb
iret
mov
mov
mov
addr16
notb
push
outsb
into
ja
add
xor
add
test
daa
mov
dec
adc
inc
ret
call
push
add
les
inc
subl
fistl
and
xchg
add
and
mov
jmp
mov
mov
int3
inc
out
sub
arpl
rolb
xor
sbb
jg
rorl
sti
shrb
jecxz
sbb
ljmp
lods
popf
dec
gs
pop
stos
pop
cmp
mov
mov
lods
dec
ret
dec
lock
pop
push
mov
pop
mov
loopne
inc
js
xchg
jecxz
push
mov
pop
test
xor
dec
arpl
pop
xor
sbb
aaa
in
dec
add
fsubrp
fwait
subb
jecxz,pn
jmp
repnz
outsb
pop
mov
push
jns
repnz
inc
dec
mov
cmpsb
gs
das
jns
pop
test
adc
ds
mov
pushf
cmp
cmpsb
lods
xor
cmovb
push
lret
or
lcall
mov
adc
jae
stos
test
xchg
test
aas
dec
mov
ss
mov
cs
push
mov
jb
lock
pop
in
rcll
and
and
in
xchg
mov
outsb
shll
mulb
push
xchg
add
cmp
sbb
sub
mov
mov
dec
ljmp
loopne
inc
enter
or
lea
pop
mul
and
dec
mov
inc
pop
inc
cmc
mov
inc
pusha
adc
aas
in
aam
fiaddl
mov
sbb
and
dec
pop
inc
push
ds
ja
test
out
jecxz
std
loopne
add
jo
mov
dec
sti
and
xlat
mov
dec
jle
sbb
addr16
hlt
sarb
xor
push
cmp
adc
push
push
pop
pop
mov
rcrl
inc
dec
inc
in
out
fidivrs
jmp
or
xor
subl
xchg
hlt
dec
ret
lock
xchg
mov
das
imul
pop
mov
jo
inc
inc
pop
mov
inc
jae
lret
jmp
pop
cmovl
imul
aad
fldenv
and
jae
movsb
mov
ret
xchg
inc
insl
jnp
mov
add
stos
lcall
jecxz
fsts
clc
shl
jae
mov
xchg
popf
pop
xor
mov
pop
pop
mov
sub
xor
ljmp
ds
xchg
ljmp
sub
mov
rol
lret
faddl
adc
xchg
mov
inc
mov
xchg
sub
mov
cmp
sbb
fisubl
ret
jl
cmc
sub
mov
mov
sub
shrb
and
xchg
and
dec
and
push
fstp
adcl
dec
mov
xor
js
jecxz
sbbb
and
or
inc
cld
into
arpl
popa
inc
nop
inc
and
repz
add
lock
sbb
arpl
mov
leave
mov
mov
inc
movsb
dec
pop
andb
mov
xlat
sbb
loope
sub
jbe
les
sbb
add
in
or
mov
dec
fnstenv
mov
jl
inc
cmp
xor
xchg
cmpsb
push
dec
jp
data16
cs
sbb
jne
ret
daa
fisubs
outsl
addb
scas
jbe
lret
mov
popa
inc
inc
inc
xor
adc
stc
adc
mov
out
adc
sbb
xchg
pop
aad
lahf
add
pop
push
les
andb
ret
in
int
push
sbbb
pop
sub
add
sub
iret
cmovno
mov
mov
cmp
sbb
ret
fs
push
cli
or
lods
les
iret
pop
aad
insl
out
ljmp
mov
push
call
xchg
in
call
and
or
jo
mov
pop
push
repz
aad
xor
gs
jno
scas
and
mov
xchg
rcrl
inc
imul
loop,pn
sub
ds
aaa
mov
jg
lods
orl
push
mov
inc
mov
les
insl
call
mov
mov
dec
pop
sub
xor
rcrl
shll
aam
in
add
out
push
inc
xor
inc
pushf
bound
fldenv
adc
adc
jne
push
adc
cmp
inc
jge
jbe
repz
lods
rolb
insl
loope
sub
jle
cld
push
pop
out
jg
inc
add
test
pop
ds
xchg
mov
jne
mov
mov
lds
and
call
nop
fidivrl
sbb
popa
loope
stos
out
icebp
jno
sbb
xor
xchg
jl
clc
inc
xchg
loop
call
and
lds
outsb
and
xchg
roll
mov
xchg
xchg
jecxz
rcr
aam
sub
mov
hlt
xchg
das
xchg
enter
jecxz
inc
sub
ja
call
mov
dec
mov
cmp
mov
mov
loopne
push
jmp
xchg
dec
pop
popf
add
pop
nop
add
jg
dec
xor
js
adc
adc
xor
mov
adc
inc
mov
push
push
std
sub
mov
jge
pop
ljmp
bound
idivb
rcrb
dec
hlt
js
leave
sbb
std
mov
shrb
nop
push
mov
pushf
cmp
mov
xor
cmc
or
jle
lods
xchg
and
cmpsb
cmp
cmp
pop
clc
andl
int3
cmc
push
mov
xchg
adc
out
jl
and
es
dec
ss
pusha
xchg
inc
adc
dec
xchg
popa
add
xor
xchg
mov
sub
imul
pop
mov
lds
movb
and
imul
jb
fs
rcll
cmp
push
imul
or
mov
imul
or
inc
adc
sahf
cld
jecxz
aam
je
inc
imul
arpl
insl
and
stc
jecxz
filds
ljmp
mov
inc
jge
xor
popl
or
mov
insb
xor
lds
aaa
sub
add
cmp
pop
add
adc
xchg
rcll
pusha
mov
out
enter
dec
push
or
cmpsb
pop
and
cli
xchg
sbbb
shl
pop
aad
add
jns
push
loope
int3
mov
push
icebp
dec
out
cmp
sbb
ds
mov
jbe
bound
sbb
lea
aas
outsl
fsubl
fwait
je
push
outsl
aaa
mov
pop
push
pop
mov
xchg
or
mov
dec
jne
test
mov
or
jecxz
rol
push
mov
fwait
cld
cmp
mov
repnz
dec
push
push
adc
imul
add
testb
jne
pop
push
inc
mov
mov
jecxz
lcall
cmp
sbb
mov
mov
data16
lea
jno
mov
push
insb
push
stos
push
loopne
xchg
sub
mov
movsb
jb,pn
hlt
push
or
mov
test
or
sub
jg
in
outsl
inc
or
divl
out
int3
jne
jp
cmc
lock
xchg
push
int3
pop
pop
aam
dec
mov
and
in
outsb
xchg
cmp
adc
adc
add
js
add
xchg
in
subb
stc
pop
out
lfs
pop
les
lahf
mov
cmp
xor
stos
movl
push
cmpb
inc
sbb
jae
adc
fstl
stos
outsb
mov
and
or
sbb
les
add
mov
movsb
inc
sub
test
rolb
fwait
orb
xchg
test
stc
and
mov
mov
aam
insl
push
jp
jl
shll
sbb
inc
fbstp
subb
sub
xor
ja
adcl
sub
test
stos
xchg
aam
insl
mov
inc
pop
aaa
test
into
and
push
jb
hlt
sbb
xor
xor
cld
loope
push
add
jmp
fsts
sbb
or
ficoml
pop
dec
xchg
lea
addl
and
js
xor
mov
push
pop
imul
jno
dec
je
fisttpll
push
cmp
jno
repnz
out
mov
sarb
dec
pop
outsb
jge
add
ja
imul
cs
insb
hlt
adc
popa
jae
or
push
jge
adc
mov
dec
sbb
fwait
inc
xor
xchg
out
aaa
inc
lock
jne
cmp
pop
cs
dec
gs
adc
add
mov
pop
outsb
add
push
out
orl
outsl
cltd
test
jecxz
push
cmp
xorb
fidivrl
push
imul
mov
subw
inc
add
stos
add
cmpsl
inc
adc
mov
int
sar
or
lret
adc
xorb
mov
loope
inc
out
xor
rcl
rep
hlt
cmp
mov
sarl
arpl
arpl
lods
rcrl
jns
mov
cmp
std
mov
test
lods
adc
cltd
in
cmpsb
lret
add
std
adcb
gs
test
cld
out
cs
push
mov
inc
dec
jnp
std
cmp
and
gs
pop
inc
jp
xor
jne
pop
insb
and
mov
test
push
or
sbb
mov
leave
xor
mov
add
in
pop
out
mov
add
out
popa
sub
mov
cmc
xchg
dec
pop
jb
fisubrs
jno
or
cmc
jp
in
fs
push
xchg
fdivrl
sub
pop
and
mov
loopne
jb
pop
adc
xchg
daa
or
pop
add
ss
adc
dec
dec
jge
jp
fs
ds
sahf
xchg
lock
push
jle
aaa
popf
pop
jg
shlb
andl
inc
daa
cs
mov
loopne
jno
sti
ret
pushf
mov
lock
add
lock
js
adc
cwtl
testl
rolb
add
jno
int3
mov
aam
mov
popa
and
addl
mov
aam
mov
ret
xchg
in
inc
mov
inc
dec
xchg
add
int3
shll
fisttps
mov
das
pop
jp
ss
rorl
rcl
dec
pop
cli
mov
cs
scas
push
int
mov
iret
mov
psrld
sub
sahf
mov
and
dec
outsl
cld
mov
pop
and
push
xchg
icebp
inc
sub
lock
pusha
jbe,pn
insb
cmp
mov
push
in
mov
jne
shll
iret
rcl
dec
mov
mov
rclb
arpl
call
mov
lods
data16
sbb
add
push
outsb
adc
enter
fcompl
mov
fisubl
ret
sti
loope
cli
jp
pop
and
fs
int3
int
in
or
orl
pop
out
dec
push
dec
push
xor
dec
xchg
cmp
xlat
scas
movsl
jo
rorl
and
pop
gs
js
daa
dec
or
inc
pop
cmpl
jo
lahf
out
inc
fadds
nop
pop
pop
mov
pop
cmp
movsl
inc
cltd
scas
insb
les
das
cmp
mov
dec
mov
dec
mov
movsb
sbb
xchg
or
pusha
fcom
pop
and
inc
lds
push
dec
popl
push
cmpsb
out
push
mov
sub
push
jne
mov
fisttps
or
adc
and
addb
clc
leave
add
jl
push
dec
mov
lods
pop
gs
repz
test
pop
push
aad
sbb
out
mov
mov
sahf
push
or
pusha
lret
cmpsb
pop
mov
jg
adc
sbb
dec
adc
adc
mov
mov
fidivrl
addl
ds
jmp
sub
mov
and
arpl
sbb
sub
mov
pop
fcoml
popa
stos
lret
faddl
and
sub
mov
xor
leave
daa
fsubrs
push
mov
pop
xchg
ret
insl
int3
fsubp
iret
or
sahf
outsb
or
push
hlt
fsts
lcall
sub
or
fcompl
sarl
or
neg
xor
push
out
jns
add
lret
jnp
pop
xchg
cmp
lret
lea
test
movsl
lcall
push
sbb
jl
fdivrs
ret
sub
popa
jo
clc
sbb
outsb
and
hlt
in
loopne
fisttps
sub
mov
lea
push
mov
out
rcrl
pop
mul
lock
mov
mov
and
out
xchg
mov
cmc
sahf
outsl
inc
aas
cmp
fidivs
adc
add
jb
fucomp
lcall
enter
and
jg
xor
into
fwait
dec
mov
cmp
push
aam
ss
insl
push
les
and
in
xchg
sub
dec
inc
adc
push
push
movsl
test
mov
insb
pop
cmp
movsl
xor
xor
jg
jge
jecxz
push
insl
pop
adc
notb
daa
fdivl
mov
add
jnp
and
icebp
mov
or
jge
jl
inc
mov
or
ss
or
test
cmp
ud2
and
ds
loop
sub
gs
cmp
jg
sub
pusha
movsl
jg
adc
mov
xor
ret
xchg
push
jmp
mov
xchg
cmp
pop
jl
and
lods
cmp
imul
idiv
ret
jmp
cltd
jp
pop
sub
int3
xchg
loop
scas
inc
stos
std
ret
mov
dec
pop
inc
pop
mov
add
or
mov
jnp
daa
ss
dec
mov
pusha
lret
cmp
mov
cmc
mov
lock
fwait
jl
xchg
jne
outsl
push
add
or
add
adc
hlt
loopne
jg
jnp
mov
iret
push
xchg
mov
add
test
icebp
pusha
jb
fcmovbe
xor
adc
xchg
sub
push
jecxz
repnz
xchg
sbb
jbe
or
or
dec
jno
sbb
and
mov
cmp
push
mov
pusha
or
inc
ss
js
scas
shrl
outsb
movb
mov
in
mov
mov
addb
movsl
push
pop
mov
iret
jno
insb
fstp
out
mov
or
add
push
jle
lods
adc
pop
push
call
xchg
mov
dec
fldl
inc
mov
movzbl
xor
sahf
mov
and
repnz
cmpsb
pop
ret
loop
xor
lcall
fcmovbe
mov
lods
sub
subb
mov
mov
and
test
repz
test
outsl
imul
cmpsb
ja
lods
cwtd
cmp
pop
aas
rcr
mov
jg
dec
or
adc
push
push
cmpsb
pop
sbb
ret
daa
stos
sub
xchg
cwtl
pushf
jo
mov
xor
hlt
dec
or
jne
js
or
mov
push
jo
jl
sti
iret
cmpsb
mov
pop
jbe
lret
cmp
jno
outsb
cmp
add
fcomip
adc
jle
addr16
dec
mov
pop
or
scas
jno
outsl
jns
or
lret
lods
stos
int3
and
mov
cmp
movsb
rcrb
cmpsl
pop
aas
jne
mov
push
aas
inc
lcall
inc
push
mulb
xchg
push
inc
fnstsw
cmpsl
hlt
les
stc
bound
and
push
cmpsl
fisubrs
inc
mov
addr16
loope
inc
add
add
xchg
sbb
cmp
add
or
mov
popa
inc
xchg
push
sbb
and
in
push
outsb
adc
data16
inc
push
bound
cltd
inc
cmpsb
into
mov
ja
bound
dec
sub
lahf
in
jmp
mov
add
pop
xchg
andl
imul
add
gs
lahf
nop
xchg
cmp
inc
dec
fmul
sbb
sbb
xchg
scas
jmp
cmp
mov
lret
cld
lfs
push
or
jns
or
xor
cli
push
xor
loope
pop
adc
xchg
aam
add
test
adc
in
rcrl
cmp
jge
mov
and
xor
add
sbb
cmpsb
and
inc
xor
push
and
cmp
jg
cmp
cmp
sbb
in
jnp
fabs
or
or
or
sbb
dec
rcr
fsubr
repz
inc
ljmp
or
adc
fwait
aam
outsl
popa
out
popf
xchg
popa
iret
imul
xor
pop
orl
out
cwtl
xchg
push
push
mov
lods
lret
in
jecxz
dec
jp
cmp
test
aaa
push
inc
pop
lods
sbb
fcompl
inc
ds
lds
adc
lock
jl
rcr
fwait
ds
sub
xchg
mov
ret
mov
nop
add
jno
imul
push
or
mov
hlt
sarb
cmpsl
cs
out
idivb
shrl
pop
and
rcll
cmpsl
mov
leave
pop
aam
mov
pushf
movsb
subl
fwait
out
push
fsubl
cmp
aad
fidivrl
insb
or
jno
mov
adc
out
popa
xor
call
sahf
jo
stc
and
xor
sub
in
outsb
mov
adc
jbe
push
or
sbb
sbb
or
lods
rcl
xor
test
sub
aaa
inc
dec
jb
or
dec
and
sbb
mov
aaa
rcrl
push
cmp
bound
xor
push
mov
inc
fs
mov
push
add
sub
pop
inc
pop
xor
sar
adc
mov
popf
ljmp
jg
das
out
lret
jmp
ret
cmp
jae
or
dec
std
dec
or
cmp
mov
mov
xchg
test
negb
mov
out
or
push
push
jb
mov
add
popf
cmp
mov
pop
loope
hlt
outsb
adc
movsb
sahf
mov
dec
inc
pop
mov
dec
leave
in
adc
jmp
rcrb
xchg
xlat
out
or
and
push
sbb
add
out
or
imul
aad
cmp
jmp
inc
rcrb
lods
push
sbb
mov
mull
mov
int
pop
xchg
pop
in
and
jo
out
push
cmp
insb
fbld
mov
jp
adc
cmp
mov
mov
xchg
je
enter
repz
cli
icebp
pop
bound
xchg
js
iret
repnz
push
jae
push
mov
push
pop
mov
movaps
into
push
pop
push
or
pop
inc
fwait
inc
repz
mov
xor
jle
xor
ret
addr16
insl
lret
xor
dec
insb
or
daa
fwait
dec
ror
push
mov
adc
mov
out
bound
xchg
push
push
sub
fsts
push
mov
in
jbe
xchg
xor
jge
sub
in
jmp
test
mov
mov
clc
push
xor
sbbl
inc
aas
movsl
add
lock
addr16
cmpsl
push
in
mov
loope
mov
jno
in
adc
cmpb
subl
fwait
inc
outsl
stc
mov
fstpl
fmull
mov
inc
or
or
pop
cmp
sbb
push
movsl
cmp
ror
shl
xor
and
pop
push
cmp
outsb
loope
add
mov
cmp
sbb
scas
mov
and
incw
cmp
bound
and
imul
add
push
sbb
mov
pop
jecxz
stos
je
adc
imul
cltd
repz
pop
js
mov
fildl
stc
add
xor
add
les
and
sub
add
add
ds
aad
roll
cmp
xchg
nop
clc
scas
daa
lret
int
sbb
adc
js
mov
nop
xlat
sub
mov
adc
mov
add
loope
and
pop
xchg
mov
cmp
cmp
aaa
inc
push
mov
stos
lahf
adc
lock
inc
sbb
fwait
outsb
push
lea
jge
cmpb
aas
cmp
ja
sub
inc
dec
hlt
sub
aaa
test
iret
test
push
and
ret
sub
mov
iret
mov
jbe
pop
inc
int3
fimuls
adc
mov
lret
or
ds
dec
xor
mov
scas
mov
push
inc
jl
mov
cld
inc
mov
gs
xchg
or
push
pop
mov
pop
insb
mov
fnstcw
repnz
push
data16
aaa
sbb
mov
or
mov
sub
sbb
mov
adc
lea
xor
mov
push
mov
jnp
iret
cwtl
fcomps
bound
aas
mov
addr16
cmp
out
jecxz
ret
sbb
inc
pop
mov
mov
pop
fisubrs
rcr
mov
fnsave
jle
rorb
cmp
hlt
fnstsw
out
fcomi
rorb
mov
les
js
subl
push
push
jg
dec
sbb
xor
adc
push
xor
dec
dec
dec
jne
test
pushl
jnp
xor
jb
mov
loop
lret
dec
aaa
js
and
xor
dec
xchg
mov
notl
jnp
jbe
dec
xchg
cmp
out
je
cmp
xchg
js
or
inc
xor
data16
les
push
divb
cmp
fsubrl
mov
and
and
push
je
pop
rorl
dec
mov
gs
or
adc
dec
mov
aam
push
or
dec
scas
loope
dec
mov
outsl
fldl
push
lods
sti
js,pn
fnsave
cld
cmpsb
insl
sbb
jae
or
jno
das
lds
mov
dec
mov
mov
sahf
pushf
rclb
or
cmp
sub
mov
lret
adc
cmpsl
mov
popf
mov
and
stc
ljmp
xor
pop
jns
cmp
inc
and
or
mov
daa
mov
mov
movsl
cmc
push
cmp
sahf
iret
add
insl
jecxz,pt
inc
mov
pushf
lds
push
inc
cmp
xchg
mov
mov
cltd
out
mov
sbb
mov
scas
iret
fdivrp
fcmovu
inc
mov
jl
js
je
cld
mov
mov
in
in
adc
repnz
ret
dec
aas
mov
mov
mov
call
bound
int
mov
jbe
xchg
mov
and
mov
shll
xchg
xchg
and
arpl
mov
pop
mov
lcall
sub
pop
aam
mov
add
in
cmp
pop
das
cmp
push
lret
rolb
or
int3
movsb
loop
add
xchg
push
adc
jae
fisubrl
hlt
mov
jecxz
out
xor
out
xchg
and
stos
xchg
loop
stc
add
loop
popf
mov
mov
shrl
inc
and
add
popf
sub
enter
das
test
mov
dec
insb
fldl
loopne
shr
out
cmp
pop
cmc
pop
into
testl
stos
xor
jae
cs
fbstp
mov
popf
cmp
pop
imul
dec
in
inc
fcmovnbe
inc
enter
mov
into
orb
jno
jno
xor
mov
repnz
addr16
sbb
mov
divl
imul
push
sub
stos
shr
mov
inc
scas
stc
jmp
in
fimull
mov
or
les
insl
add
in
adc
jae
mov
xchg
movsb
sbb
out
jp
mov
dec
jbe
pop
loop
outsb
divl
adc
dec
repz
lret
jb
mov
inc
push
rcrl
mov
sbb
mov
imulb
cmp
mov
inc
mov
cmp
aad
pushf
mov
sub
xlat
sbbb
stos
movsb
jp
xor
lock
in
jb
mov
pop
push
jp
test
jmp
mov
out
loopne
nop
in
mov
hlt
lret
push
rcrb
or
add
xor
mov
pop
push
push
cltd
into
or
inc
cmp
sub
scas
loope
push
dec
cmp
xchg
leave
dec
cmpb
push
popa
sti
je
inc
lds
push
mov
push
jbe
ret
sbb
sahf
mov
adc
daa
mov
pusha
dec
add
xchg
insb
in
int3
push
ror
test
dec
mov
or
icebp
mov
loope
popf
fadd
inc
xchg
and
jnp
cmp
or
iret
mov
push
push
mov
sub
pop
push
fs
dec
sub
pop
je,pt
loopne
xor
jnp
or
mov
cmp
mov
jne
pop
add
ds
testl
adc
add
sbb
pop
jecxz
mov
outsb
sbb
out
ja
inc
push
pop
add
sbb
pop
and
xchg
or
test
cmp
mov
inc
shrl
mov
stos
int
aas
cltd
cmc
mov
int3
mov
mov
jbe
outsl
xor
imul
xchg
push
leave
insl
loope
outsb
out
cmpsb
subl
xlat
jns
repz
popa
icebp
adc
je
mov
sahf
mov
hlt
mov
jmp
scas
stos
adc
sbb
xchg
xchg
adc
fimuls
cli
mov
movsl
stc
mov
fmuls
ljmp
add
dec
pop
push
inc
sub
out
ljmp
insl
mov
gs
mov
mov
xor
sbbb
ret
es
into
clc
insl
sbb
ljmp
testb
int
fisubrs
sub
lret
inc
outsb
sub
jecxz
or
icebp
int
inc
inc
sahf
data16
outsb
add
rcll
insl
test
insb
mov
push
xchg
mov
or
inc
cmpsb
mov
sbbb
push
insl
in
insb
loopne
fdivrl
stc
aad
mov
mov
test
ja
add
mov
pop
xchg
mov
es
enter
sub
dec
into
call
xlat
mov
pop
sub
mov
cmp
and
popf
nop
icebp
movsl
loop
sub
negl
xor
xor
xchg
mov
inc
jne
inc
sahf
pop
mov
adc
pop
cmp
ds
cmpsl
xchg
push
jg
push
cmpsb
clc
fisttpl
push
mov
pop
add
arpl
jbe
sarl
xchg
cmc
and
mov
or
jl
adc
out
mov
add
pushf
aas
or
push
xchg
dec
imul
fimull
adc
dec
push
ljmp
je
cli
push
movaps
sub
jg
popf
and
sbb
fisubs
pop
adc
cmp
or
fcmovnu
ret
xchg
out
or
mov
pop
pop
notb
popf
dec
push
xor
je
in
test
fldt
and
xchg
jge
pop
inc
mov
cmp
stos
xchg
aaa
clc
pop
outsb
jne
test
lcall
jge
cltd
jo
mov
ret
cmc
pop
in
push
xor
rorl
cmp
push
in
lods
sub
rcr
push
into
mov
fmull
xorl
jnp
push
or
in
mov
pop
xchg
xchg
mov
xchg
jl
mov
sarl
in
inc
mov
mov
pop
je
inc
in
js
or
and
adc
lods
test
xchg
fcmovnbe
js
popa
xchg
jl
call
cmpsb
lret
outsl
mov
adc
pop
insb
idivl
icebp
xchg
or
loopne
push
adc
test
inc
mov
mov
jp
das
sbb
mov
addr16
xchg
fdivl
mov
ret
sbb
daa
or
roll
fbld
mov
sbb
imul
dec
mov
mov
out
push
xchg
call
mov
pop
rep
addl
fstpl
lods
jecxz
pusha
pop
in
test
dec
sub
pop
adc
insb
mov
fistpl
imul
imul
clc
idivl
add
mov
cmpsl
or
add
insl
das
pop
js
sti
iret
push
rolb
fmulp
out
lods
sti
push
mov
jp
lcall
negl
leave
mov
cmp
dec
leave
sub
cltd
dec
imul
and
std
add
add
aaa
aaa
xor
adcb
or
cmp
fsubrs
rcrb
pop
aad
test
pop
pop
lock
loope
xor
cmp
test
sahf
mov
jmp
ret
xchg
lods
cmc
jbe
jmp
jp
and
test
dec
jecxz
out
aad
rcl
mov
add
inc
in
loope
and
cmc
outsb
xorb
insl
loop
pop
adc
loope
lods
lahf
shrl
inc
mov
mov
mov
cs
dec
imul
xor
lds
stos
xor
push
sub
mov
pop
stc
sbb
in
jp
or
jmp
mov
push
nop
mov
dec
mov
fcompl
cltd
pop
mov
push
cmp
xor
in
xor
cmpsl
push
or
cmc
inc
cmp
jns
lret
push
add
mov
nop
mov
psllw
gs
daa
cmp
fs
mov
dec
xor
mov
ljmp
mov
and
mov
or
out
aaa
test
inc
aas
movl
xlat
stc
xlat
inc
cmp
and
jmp
dec
iret
repnz
and
dec
pop
sarb
cmp
sbb
cltd
mov
sub
mov
pop
hlt
xchg
cli
scas
push
nop
out
lock
pop
dec
mov
daa
sub
sbb
out
and
add
fistps
jno
and
xchg
push
mov
in
lcall
inc
sbb
bswap
mov
xor
mov
enter
xchg
subl
cld
orb
inc
add
cmp
and
mov
push
mov
jle
cmp
lcall
mov
test
mov
movsb
xchg
sub
inc
sub
mov
test
pop
xor
cmpsb
jnp
lahf
mov
out
mov
xchg
adc
jge
cmpsb
shr
add
pop
aad
outsl
iret
cmp
mulb
iret
and
mov
pop
xor
xchg
add
mov
jp
lea
outsb
sub
push
aad
cmp
push
push
xorb
fstpt
add
mov
mov
int3
ret
mov
and
pop
push
das
add
mov
sbbb
push
fwait
imul
pop
lahf
mov
jmp
dec
pop
xor
pop
cld
xor
push
mov
imul
addl
cmpsb
dec
sub
stos
adc
out
call
leave
pop
and
aaa
push
out
add
sbb
mov
xor
or
imul
sti
jb
int3
out
inc
das
inc
add
test
or
sbb
call
and
push
mov
mov
pop
push
xor
fnsave
mov
push
out
mov
mov
add
jnp
pop
leave
pop
mov
pop
cmp
lods
movsl
and
mov
dec
cmp
rolb
inc
sti
or
out
xchg
mov
lods
clc
lds
arpl
lods
adc
std
cli
pop
jnp
movsb
in
jo
lock
gs
cli
mov
addr16
sbb
pop
aaa
fdivrl
mov
sbb
pop
mov
rcll
fwait
mov
xor
push
daa
mov
xchg
sub
adc
lret
dec
cli
dec
iret
dec
stos
iret
sarb
addr16
lea
mov
or
or
test
out
xor
cmovb
out
add
movsb
sub
push
add
cmp
jmp
pusha
inc
test
rcrl
repnz
int
jae
sbb
pop
and
xchg
push
cld
aam
cmp
mov
jno
or
push
mov
xchg
leave
push
outsb
mov
or
jge
sti
mov
and
jo
pop
adc
jns
jo
adc
ljmp
or
xor
loop
out
mov
jnp
cmp
push
xchg
jmp
test
call
cmp
and
mov
add
stos
xlat
pop
jnp
sbb
rep
pop
push
mov
adc
call
daa
sub
imul
jne
sbb
jb
xchg
dec
test
cmpsl
xbegin
add
cwtl
bound
xchg
stos
clc
mov
cltd
bswap
xor
push
ret
jl
pop
jae
or
movsb
outsl
les
cmp
sub
mov
mov
cmp
jge
cmp
add
mov
iret
sub
inc
out
shll
das
push
sahf
cmp
in
add
push
je
lock
cmpl
rcr
inc
and
sbb
std
xlat
pop
dec
mov
add
jecxz
icebp
or
add
es
pop
ss
ss
mov
fwait
imul
pop
es
out
movl
pop
inc
dec
pop
mov
sbb
arpl
mov
int
in
inc
and
pusha
sbb
pop
push
xchg
mov
inc
std
xchg
iret
clc
cmpsl
dec
dec
lcall
add
lds
inc
cmp
popa
test
inc
pop
repz
jne
sbb
and
push
mov
xchg
clc
or
fcoms
inc
dec
xor
subb
orl
stos
aam
inc
inc
je
outsb
lock
or
addr16
das
push
jb
adc
mov
ljmp
in
dec
ficomps
cli
jbe
xchg
out
xchg
mov
aaa
mov
pusha
xchg
inc
gs
pop
dec
jbe
jns
jmp
adc
add
out
scas
decb
push
jge
gs
stos
call
out
mov
aaa
cmpsl
xor
cmp
sbb
imul
cmpb
fadds
movsl
movsb
jmp
out
jge
jmp
jbe
popf
mov
daa
pushw
data16
mov
imul
xlat
mov
rolb
mov
add
bound
and
dec
movsl
mov
jb
mov
rcll
mov
jno
jae
mov
dec
xchg
and
insl
xor
jl
mov
dec
inc
fists
push
mov
nop
and
aam
or
imul
imul
jae
jl
int
mov
push
in
sahf
stc
mov
xchg
xorb
int3
inc
or
dec
imulb
lcall
push
frstor
lss
jbe
mov
pop
adc
imul
adc
adc
fistps
nop
test
pop
ret
and
jle
sbb
mov
cmp
insb
push
xor
or
or
dec
adcb
dec
fldenv
adc
loope
pop
loop
mov
cmp
cmpb
or
fnstcw
insl
xor
fabs
inc
movsb
loop
insl
es
je
fidivl
scas
mov
sbb
adc
fs
push
jo
mov
sbb
cmp
repnz
aad
leave
pop
xchg
lret
arpl
mov
mov
sub
xchg
cld
dec
andb
cli
cwtl
jb
push
mov
cmp
mov
and
imul
mov
cwtl
mov
xchg
pop
adc
or
push
jne
adc
mov
adc
mov
aad
jbe
cwtl
mov
repnz
xor
mov
lds
scas
sub
inc
rcrl
lea
xor
xlat
popf
insl
out
pop
jecxz
pusha
test
dec
mov
cmp
adc
daa
pop
jl
ja
lret
cmp
pop
push
pusha
scas
inc
loop
xchg
xchg
stc
in
jl
stc
jp
push
pop
mov
movsl
lods
jno
or
je
insl
or
push
mov
test
lcall
push
xchg
push
out
fsub
jno
lret
pop
mov
test
aad
mov
int3
lret
clc
push
xchg
add
jb
jle
mov
fnstsw
xchg
aas
inc
out
test
sub
dec
mov
mov
xchg
js
xchg
pushf
fs
and
inc
sar
inc
andl
fmuls
out
das
subps
and
jg
adc
and
mov
xchg
push
sub
xchg
mov
push
orb
add
out
mov
out
mov
outsl
mov
test
xorb
push
fcomip
lock
lret
push
cli
aam
dec
jl
jge
inc
pop
mov
aas
cltd
push
faddl
jmp
hlt
xor
and
pop
dec
neg
cltd
mov
lea
jns
rdtsc
aam
or
mov
test
mov
and
je
lods
cmp
shl
dec
lret
and
mov
cmp
mov
mov
cwtl
xor
push
push
dec
mov
arpl
inc
pop
shrb
fdivrl
aad
int3
xchg
lods
and
call
jp
xlat
inc
out
cwtl
out
sbb
or
lds
dec
add
test
fwait
xchg
repnz
or
xor
inc
fwait
pushf
pop
lods
sub
jns
loope
in
pop
xor
or
xor
sarl
ja
insb
notl
lgs
or
inc
bound
ficoml
into
pop
dec
outsl
push
inc
dec
mov
adc
lea
inc
fisubl
out
aaa
adc
fstpt
sbb
add
or
push
nop
loop
fcoms
divb
xor
ret
and
jae
push
add
xlat
adc
inc
icebp
jnp
jbe
sahf
movsb
add
sub
pop
cmp
mov
negb
mov
call
inc
pop
and
outsb
push
xor
jl
int3
xchg
out
xlat
mov
stos
icebp
lods
cmp
xorb
mov
pop
clc
and
xchg
movsb
mov
mov
cmp
cmp
cmp
lcall
imul
xchg
loope
mov
fucomi
mov
ds
js
xor
scas
scas
pop
insl
repz
aad
stc
mov
pop
push
lahf
or
jo
stos
sti
repz
push
pop
int3
xchg
clc
nop
mov
fisttpl
jmp
mov
pop
sbb
adc
stc
adc
xor
sub
xchg
inc
add
push
inc
pop
inc
push
sbb
lods
clc
push
aaa
mov
push
mov
push
add
mov
int3
cmp
xchg
inc
and
ret
lret
push
push
stos
pop
nop
repz
pop
dec
hlt
fs
pop
ret
imul
popa
loop
movsl
scas
xchg
mov
add
jns
out
pop
mov
fmuls
test
jl
lods
xchg
cli
jge
adc
cmp
nop
mov
fisubrl
clc
inc
jnp
stc
repz
jecxz
lcall
aaa
xor
mov
jbe
mov
cmpb
rclb
dec
mov
pop
and
cmp
cli
xor
js
gs
out
cmpsl
mov
dec
lret
loop
call
gs
fidivl
cmp
rorb
mov
jns
int3
mov
jge
pop
add
or
mov
jo
xchg
jmp
scas
adc
pusha
sub
scas
xor
out
mov
imul
das
add
aaa
fs
pop
in
xchg
dec
inc
insl
mov
hlt
jecxz
inc
jns
jo
or
insl
je
es
movsb
add
inc
cmpsl
mov
dec
and
pop
sbb
pop
mov
icebp
stos
inc
push
data16
jae
neg
pop
cmpsl
rcll
aas
stc
fisttpll
ret
fisubrl
std
mov
imul
dec
lock
cmp
xlat
mov
adc
mov
sub
inc
mov
pop
jmp
idiv
cmpsl
inc
push
stos
movsb
jno
dec
mov
cmpsb
add
jle
das
imul
fs
and
cmpsb
inc
xchg
cwtl
or
jl
icebp
pop
mov
jecxz
fidivs
test
mov
sub
clc
push
ja
incb
mov
mov
shr
inc
xlat
sbb
sahf
lock
jns
push
and
fidivrl
shlb
jo
add
push
rcr
jnp
jmp
mov
mov
mov
movsb
add
add
out
inc
sbb
jbe
push
loope
addr16
cmp
jbe
add
sub
sbb
mov
mov
lahf
movsb
mov
or
or
push
mov
mov
jne
aam
cmpsb
push
idiv
scas
jae
push
and
sbb
sub
jmp
adc
roll
xchg
mov
outsl
xchg
insl
ficompl
pop
enter
mov
stc
mov
movsb
cld
aam
hlt
ffree
adc
push
in
and
cld
inc
ds
clc
mov
lret
and
xchg
stos
int
xorb
rcll
int3
push
xchg
adc
add
lret
xor
fwait
xchg
and
inc
aas
or
xchg
jecxz
push
scas
addr16
lea
cmp
add
and
lret
mov
lret
cmpsl
dec
loop
jmp
pop
sahf
lods
xor
sti
mov
or
push
popf
sub
int3
pop
ljmp
hlt
sti
add
mov
out
fsubl
mov
mov
xchg
push
pop
iret
pop
pop
pop
cmc
jge
add
mov
sub
push
scas
lods
enter
gs
iret
jo
scas
loop
sti
stos
inc
jo
sbb
lds
cmp
or
cltd
jns,pn
lret
xchg
lods
ja
repnz
sahf
outsb
pop
ss
pop
test
push
push
aam
cmp
push
in
lds
shl
repz
adc
add
ret
outsb
xchg
addb
in
aas
fildll
fsts
inc
inc
scas
cmc
sbb
fidivl
mov
mov
popa
pop
loop
pushf
popa
js
test
dec
lcall
int3
sbb
mov
mov
mov
mov
xchg
sbb
test
ret
mov
fisubrl
mov
adc
cmp
push
mov
pop
dec
mov
and
xchg
xor
pop
out
addl
jo
adc
lea
inc
jg
js
flds
and
adc
dec
cltd
orl
jle
cli
xchg
roll
arpl
shlb
sub
shrl
mov
insl
fildl
lcall
xor
mov
negb
push
shll
ljmp
lret
xor
push
movsb
lahf
dec
loop
or
xchg
cmpl
psubsb
out
xchg
sub
int3
rolb
cmp
stc
dec
add
xor
xchg
mov
push
jns
jp
adc
cmp
xlat
push
mov
popa
push
jmp
jae
push
push
aaa
push
movsb
icebp
js
ret
adc
fs
add
das
lahf
fs
xchg
mov
in
sbb
test
lock
jecxz
inc
xchg
xor
pop
fimull
and
frstor
sbb
xchg
mov
adc
movsl
xchg
sbb
rcrl
jbe
lahf
pop
adc
loope
lret
sbb
fnstenv
fildl
leave
sbb
mov
test
cmp
push
testl
pop
andb
ret
iret
jg
pop
mov
fbstp
mov
outsb
pop
xchg
test
movsb
jb
adc
pop
lahf
sub
fstps
xchg
fidivs
call
sahf
cwtl
lret
jb
jbe
push
and
dec
lods
dec
mov
cmp
cmp
mov
inc
dec
inc
and
mov
jns
cmp
or
in
sub
sarb
shll
jl
pop
mov
int
pop
xlat
dec
jmp
loope
mov
scas
xchg
mov
push
fdivrl
addr16
or
xor
sti
rcrb
cltd
and
jnp
xchg
push
add
jle
outsb
mov
and
xchg
jge
adc
sbb
gs
cld
mov
or
insb
and
sub
cmp
add
jo
sub
and
cmpsl
dec
fwait
mov
addl
xor
call
push
bound
das
and
inc
xor
movsb
pusha
enter
push
push
mov
cmp
mov
stc
clc
push
sub
rcrl
xor
cs
pop
repz
incb
jno
inc
imul
fists
rol
adc
popf
or
andl
ret
xor
popa
xchg
sub
ret
push
loopne
into
adc
nop
push
lcall
pop
xor
in
xor
mov
cmp
fs
push
mov
and
add
sub
add
or
xor
xchg
dec
inc
or
insb
cwtl
push
sahf
xor
outsb
push
or
jne
or
mov
mov
sbb
pop
call
xchg
mov
mov
cwtl
ss
cmp
repnz
popf
je
std
cmp
test
fdivrs
clc
xchg
ss
int3
bound
sahf
mov
jg
and
fistl
hlt
js
mov
push
mov
and
and
movb
adc
ljmp
jno
lahf
loop
sbb
pop
sbb
mov
lret
dec
loop
jp
xchg
jb
add
out
pop
in
mov
push
xchg
ret
lret
inc
sbb
imul
leave
sub
mov
mov
daa
pushf
shlb
sbb
dec
inc
popa
aas
and
cli
jge
jne
pop
cmp
testb
adc
cmp
data16
xor
mov
inc
mov
mov
ficompl
daa
sarb
mov
outsl
adc
lcall
push
mov
jns
icebp
or
popf
cli
jo
jmp
inc
jb
stos
fistps
call
dec
lahf
andb
cli
mov
xchg
pop
test
in
movsb
inc
mov
inc
sbb
adc
or
or
repnz
sahf
mov
decl
lds
xchg
cmp
jge
xlat
out
arpl
dec
pop
xchg
mov
inc
loopne
mul
in
movsb
ret
addb
mov
cmp
add
and
inc
in
pop
cltd
jae
gs
cmpsb
jno
mov
cmpsb
xchg
arpl
sti
test
and
mov
sbb
sub
and
cmpsb
push
mov
mov
mov
and
xchg
xchg
sti
arpl
and
mov
jmp
movsb
xor
xchg
call
sub
inc
scas
insb
xchg
push
scas
jmp
sub
mov
ror
mov
push
sub
or
mov
inc
cmpsb
test
mov
mov
xor
lret
pop
adc
cmc
adc
inc
stc
sbb
lret
inc
scas
adc
adc
lods
cli
push
jns
imul
jbe
sbb
inc
lods
sub
sahf
push
mov
push
inc
clc
loop
cltd
dec
int
xchg
push
std
call
sub
imul
jae
mov
push
cwtl
test
repnz
add
je
test
adc
xor
cmp
jns
xor
xchg
inc
pusha
out
pop
pop
cmp
pop
xchg
inc
sub
jmp
ljmp
xor
or
imul
mov
scas
push
pop
mov
hlt
cltd
xchg
insb
cmc
ja
lret
js
jns
sahf
mov
fisubrl
lods
out
xchg
jg
sbb
xlat
sub
mov
in
push
add
add
aam
jae
push
push
cmp
loop
sbb
mov
fiaddl
xchg
popf
popf
cld
clc
in
sub
jb
cwtl
adc
add
outsl
sub
sub
mov
insb
dec
jo
fmulp
jns
mov
pop
insb
xchg
fwait
xchg
mov
lahf
rcl
pop
aas
dec
outsl
push
push
push
enter
cmp
cmc
xor
adc
das
mov
sub
add
and
fmuls
ljmp
sbb
movsb
jle
mov
sub
int
repnz
push
push
lds
mov
cmp
repnz
repnz
adc
outsb
or
pop
mov
rcrb
inc
mov
lods
mov
sbb
shrb
jg
mov
subl
lods
xchg
fisubl
xor
in
jge
test
mov
fsubr
adc
rcrl
sbb
fiadds
pop
ds
mov
xchg
arpl
cltd
cs
push
jp
and
mov
fadd
stos
inc
aam
and
push
xchg
mov
cmp
xchg
fdivr
dec
repz
ret
cmc
xchg
inc
ret
aam
xor
shrl
adc
test
sahf
pop
xchg
ss
or
outsb
leave
jmp
sub
add
push
rcrl
jbe
or
xlat
cmc
ja
cmp
icebp
ret
pop
imul
dec
jl
mov
cmp
mov
sahf
addr16
icebp
or
ljmp
shrb
xchg
xor
pop
sarl
fcoml
mov
lods
lods
mov
push
mov
mov
out
dec
dec
out
pusha
and
pusha
dec
push
jb
mov
dec
or
and
aas
fs
cmp
mov
loopne
mov
mov
pushf
mov
out
inc
aam
sub
inc
pop
cmp
mov
push
jecxz
xchg
mov
leavew
jp
cltd
add
adc
pop
lods
mov
push
dec
jae
jbe
div
iret
sti
jns
xchg
push
ret
sub
lds
xlat
das
call
fldenv
add
adc
cmpsb
xchg
cmp
jns
dec
fdivl
sbb
jo
lock
fdivrl
in
inc
push
and
outsb
push
shll
daa
sub
stos
jl
add
pop
pop
push
dec
lock
lahf
mov
xchg
sbb
adc
jo
sub
outsb
jmp
mov
xchg
inc
out
cltd
cmp
add
hlt
shll
sahf
cmpsl
mov
xor
cmp
push
push
pop
or
or
std
sub
scas
dec
push
stos
fimull
add
ja
jg
popl
lcall
mov
inc
imul
dec
inc
sub
dec
pop
mov
and
rolb
fbstp
jno
fdivp
jmp
add
rorl
mov
jle
icebp
push
fnstenv
inc
loopne
pop
sub
int
jne
mov
and
cltd
and
std
mov
xchg
cmpsl
test
and
iret
mov
mov
je
lea
add
push
xchg
xchg
pop
mov
jne
sub
push
and
in
xor
mov
or
push
lcall
mov
cmpsl
frstor
or
popa
jmp
fst
div
add
stc
out
ret
xchg
incl
fwait
fs
sbb
or
xchg
loope
pop
js
pushf
xorl
add
cmp
mov
adc
ds
pop
stos
mov
es
push
in
mov
xchg
cmpsb
je
or
mov
ret
repz
adc
push
fwait
xor
cmp
aad
out
hlt
test
mov
or
gs
mov
mov
pusha
xchg
pop
dec
jbe
sbb
ljmp
lret
dec
loope
jbe
lret
loop
mov
mov
jae
rcll
push
fidivl
jnp
push
cld
push
mov
andl
test
pop
repz
data16
xchg
push
shlb
pusha
push
in
int3
jmp
adc
dec
cmpsb
mov
pop
or
xor
adc
sub
arpl
mov
lods
mov
out
sub
cld
adc
push
mov
loopne
jne
fsub
sbb
ljmp
lods
xorl
ja
mov
in
mov
nop
je
mov
subb
gs
dec
mov
stos
push
dec
inc
or
gs
jb
fucom
outsl
call
ds
jecxz
fimuls
jge
icebp
jl
push
pop
loop
dec
insl
ljmp
or
jecxz
imul
fwait
xor
fwait
ds
add
mov
or
pop
add
enter
rolb
addb
mov
push
mov
sub
pop
xor
out
xor
dec
fsubs
xor
scas
and
jmp
jno
aaa
imul
lods
int
mov
push
sbb
cmpsl
fistpll
cmp
cs
mov
stos
pop
xor
popf
out
gs
sub
hlt
mull
xor
add
loopne
sub
adc
fisttpll
ret
cs
push
xchg
add
pop
into
shll
pop
inc
sub
sahf
stos
or
arpl
xchg
mov
daa
sarl
sahf
cwtl
lcall
jmp
lea
cltd
aad
xchg
mov
lret
and
popa
popf
sub
push
lahf
call
scas
jecxz
sbb
pop
rorl
stos
pop
in
push
cmp
sti
je
stos
sbb
and
out
or
and
nop
sbb
sub
les
push
out
rclb
lods
shl
iret
and
popa
dec
and
push
lret
cld
adc
out
mov
push
pop
jmp
out
test
mov
mov
inc
jge
add
xchg
mov
hlt
push
pusha
shl
pop
nop
cmp
mov
fwait
daa
jl
mov
jge
fisubrs
test
mov
cmp
push
adc
jbe
cmp
icebp
mov
inc
icebp
push
dec
cmp
lods
push
jg
fiaddl
jbe
lods
sub
dec
lods
cmp
push
test
xchg
lds
xor
lret
push
ret
lock
adc
or
cmpsb
shl
xchg
xchg
iret
fwait
add
sub
xchg
jle
mov
push
fwait
push
sbb
int
and
dec
fmull
or
add
add
out
loope,pt
sub
and
cld
push
sbb
dec
inc
mov
add
out
xchg
cld
nop
leave
addr16
loope
push
imul
fsubr
lods
in
inc
and
cmp
mov
cltd
xor
ficoms
movl
pushf
ja
test
out
mov
lods
pop
ret
aaa
xchg
mov
hlt
cmp
xor
xor
pop
lahf
sbb
orps
push
or
lcall
mov
icebp
xchg
mov
jbe
dec
test
mov
xor
mov
jne
push
ss
dec
mov
sahf
rclb
scas
sbbl
adc
mov
adc
fnstenv
insb
add
xorl
fs
shrb
stos
inc
pop
adc
dec
dec
loop
fwait
pop
inc
fucomip
scas
push
sbb
adc
jmp
leave
in
imul
loope
adc
jle
inc
ds
push
int
pop
decl
nop
jne
aad
or
cmp
outsl
mov
mov
nop
and
dec
sbb
into
fistpl
bound
cs
shlb
jl
sti
jl
stos
out
sbb
pop
outsb
pop
push
pushf
repz
push
inc
dec
mul
or
sbb
inc
lods
stos
and
nop
test
repnz
jl
pusha
call
out
jnp
popa
out
push
test
sahf
and
mov
in
outsb
enter
mov
sbb
dec
and
mov
aaa
mov
ficoml
mov
repnz
mov
std
jl
or
scas
sti
add
repz
jg
add
mov
mov
push
mov
jmp
aaa
test
ficoms
sbb
dec
xchg
mov
shl
push
add
mov
mov
loope
fildl
clc
sub
jnp
add
pop
sbb
loopne
pushf
mov
lds
pop
fisubrs
pusha
sti
add
loopne
jmp
jg
in
ret
int
imul
dec
or
in
jne
xchg
flds
mov
mov
add
xchg
sub
insl
or
add
sysret
inc
sarb
jmp
mov
and
mov
cmp
cmpsb
inc
psrlq
mov
imul
or
add
stc
xchg
test
call
das
cmp
in
lcall
mov
inc
xchg
in
loopne
add
adc
pop
mov
cmpsl
adc
sbb
mov
xor
jae
cmp
int3
mov
jmp
lock
cli
push
cmp
nop
xor
insl
inc
xchg
daa
mov
sbb
sahf
aad
aad
addl
andb
mov
in
jnp
insl
mov
push
push
cmp
aaa
jle
out
push
sbb
or
in
jae
mov
mov
dec
icebp
repnz
jo
or
leave
sahf
pusha
daa
adc
pop
test
inc
mov
dec
test
iret
mov
push
jb
incl
in
sahf
int3
xchg
and
lahf
push
push
loope
popa
push
mov
fwait
jne
mull
push
stos
pop
and
jg
push
call
jecxz
push
imul
xchg
xchg
inc
inc
aad
sahf
fsts
add
mov
outsb
pusha
scas
jg
sbb
enter
push
into
pushf
inc
call
in
loopne
or
inc
das
mov
popf
jno
xchg
jge
and
iret
and
int
dec
in
loope
dec
fisubrl
xchg
fcomp
jns
xchg
mov
xchg
les
int3
call
lret
jns
movsl
rol
or
mov
mov
jp
out
xor
mov
jo
lcall
or
xchg
pop
fldcw
or
pop
pop
sub
adc
xchg
adc
xchg
jne
out
ficomps
lahf
movsb
mov
mov
adc
sbb
pop
and
aas
pop
int3
outsl
dec
ljmp
add
rcll
sbb
xor
imul
shr
aad
int3
lahf
ret
in
test
fs
fldcw
sbb
pop
dec
sbb
cs
cmc
ljmp
jecxz
cmp
xchg
jmp
sbb
enter
rcr
dec
jo
icebp
das
gs
adc
sbb
or
lds
pop
icebp
adc
cmp
loop
mov
add
cmc
add
pop
sarl
pusha
jb
loop
add
dec
es
xor
xchg
mov
cwtl
stos
loope
xorb
xchg
std
dec
or
add
or
std
xchg
cmovg
push
add
push
xchg
xchg
shll
and
les
mov
inc
add
mov
xor
shlb
mov
je
jnp
lcall
mov
lock
adc
cmp
push
mov
lret
les
in
jl
xor
sub
ljmp
sbb
push
xor
push
loopne
pop
notb
popa
sub
add
sarl
cld
push
lods
cmc
scas
jnp
jp
pop
jno
mov
imul
jp
pop
sbb
or
in
in
imul
rclb
std
or
add
xor
shlb
jae
xor
js
fstpt
or
into
ss
call
sbb
cltd
xchg
sub
add
or
jo
outsb
or
shl
mov
sahf
adc
cli
cmp
bound
cli
fisttpl
mov
add
cwtl
outsb
hlt
or
lods
sbb
adc
pop
stos
or
lret
jbe
or
xchg
jbe
das
cld
mov
int
cmp
lea
call
add
xchg
popf
push
or
negl
mov
xchg
cmp
jmp
sub
and
nop
aas
insb
sar
mov
mov
orb
fwait
mov
mov
dec
test
and
loope
gs
movsl
mov
test
out
pop
xchg
pop
loop
push
pop
ljmp
xor
insl
je
xor
push
pushf
jmp
adc
ret
jge
xor
popa
pop
mov
cwtl
push
xor
fstpt
push
fists
xchg
idivl
sbb
push
cmp
jb
mov
lea
lock
dec
push
add
test
ss
push
cmp
test
add
dec
mov
and
in
rcrl
arpl
and
ds
btr
icebp
and
sbb
cwtl
push
mov
cmp
sti
xchg
lret
in
mov
mov
jno
sbb
cmc
jecxz
xlat
lcall
sub
icebp
aaa
xchg
xor
scas
outsb
pop
or
inc
jl
xor
pop
push
push
cli
mov
ret
mov
imul
mov
cmpsl
sub
ss
cmc
lock
xor
fistl
push
jbe
cmp
jae
mov
jae
sbb
aam
cmp
or
in
add
mov
in
mov
stos
cmp
repnz
int3
mov
repnz
pop
pushf
cmpsb
dec
call
loope
sbb
sbb
jo
clc
sub
or
jno
jg
popf
stos
sbb
ficompl
sbb
fdivl
call
xor
loopne,pt
lock
or
fs
pcmpgtb
mov
or
adc
xchg
fcom
inc
out
lret
das
or
add
pop
in
mov
movsb
push
hlt
pusha
dec
xor
aaa
cmpsb
fisubrs
cmpb
ror
iret
loop
mov
xchg
lock
sub
mov
push
add
nop
mov
ljmp
and
stos
and
mov
dec
adc
dec
mov
mov
pop
pop
movsb
mov
fldenv
inc
pop
xchg
xorb
mov
and
fcmovnbe
das
popa
js
repz
pop
ljmp
mov
mov
push
lret
sbb
lea
sub
push
dec
insb
adc
mov
adc
mov
sarl
arpl
js
out
andl
into
push
and
and
adc
insb
jl
or
sar
and
test
cmpb
xchg
jg
aad
nop
pop
mov
xchg
dec
jmp
das
sbb
lea
arpl
sub
push
or
stos
aas
adc
out
sbb
daa
lahf
dec
ja
imul
js
push
loop
push
sub
mov
jle
into
ret
mov
push
sub
or
and
mov
push
pop
sub
mov
push
add
dec
jmp
int3
repz
fxch
int
cmp
mov
dec
nop
loopne
mov
sbbb
icebp
xchg
mov
js
ret
mov
sbb
mov
repnz
adc
rol
into
cmp
fidivl
mov
in
mov
cmp
repz
adc
and
pop
sub
lods
mov
test
jns
cmp
cmp
pop
mov
int3
fstps
dec
pop
xor
cmp
popf
jb
jne
aam
in
lods
fucomi
xchg
jb
cmp
jmp
fucomi
test
das
leave
les
pop
in
xor
mov
lahf
icebp
es
iret
in
movsb
lods
pop
les
add
rcl
stos
jp
push
shl
mov
push
sub
jp
lret
insb
int
int3
mov
es
or
ja
sbb
adc
sub
jge
out
xor
mov
cmp
pop
mov
adc
pushf
push
push
mov
iret
or
imulb
add
pop
push
pop
shlb
cmp
pop
sbb
cmp
dec
dec
stos
inc
and
sbb
xchg
or
jge
std
scas
push
sbb
push
cmp
aaa
lret
cmp
adc
daa
adc
jecxz
aad
push
jne
pop
mov
cs
sti
addr16
pop
pop
and
push
rol
imul
jns
xchg
push
cmp
mov
or
xchg
in
iret
xchg
and
inc
xchg
mov
xchg
mov
cmpl
call
mov
hlt
xorb
adc
xlat
aaa
fidivrs
cmc
scas
scas
cmp
mov
stc
jmp
or
xchg
js
sar
outsl
pop
stos
syscall
outsb
add
sbb
inc
rolb
dec
ja
adc
rcrl
andl
cs
cmpsb
jbe
cmp
in
movsb
jl
inc
mov
mov
dec
mov
push
jecxz
and
out
push
mov
lock
or
jg,pt
lods
mov
adc
or
sbb
xlat
mov
pop
test
jl
xlat
jg
adc
adc
push
les
sub
lahf
inc
sbb
nop
xor
cmc
out
mov
cltd
sbb
mov
lret
cli
shlb
add
and
xor
sbb
mov
sbb
mov
adc
sub
movsl
and
popa
sbb
test
jns
nop
cli
iret
xor
imul
lahf
daa
out
fiadds
mov
push
in
gs
mov
stos
das
cltd
out
sub
lock
cmpb
sub
cmp
out
js
clc
mov
mov
pop
mov
je
loopne
ja
fimull
je
imul
fwait
cli
xchg
sbb
into
andl
out
aas
imul
dec
pop
or
pushf
add
mov
test
into
sbb
pop
dec
icebp
out
and
add
add
cmp
enter
jo
fldl
pusha
gs
test
aas
aad
icebp
scas
fs
hlt
mov
or
es
mov
fs
mov
repz
dec
jle
fwait
cmpsl
xor
ret
je
dec
sbbb
xchg
andl
in
jae
xchg
mov
aam
orb
and
rcll
jbe
pushl
mov
call
inc
mov
repnz
push
pop
movsl
cli
scas
les
sar
and
test
dec
mov
mov
mov
setl
mov
fmuls
inc
xlat
iret
daa
cltd
adc
je
xor
fiadds
xchg
test
stc
jno
jno
or
sbb
or
in
imul
ds
xchg
cltd
adc
cli
lods
xor
sub
leave
ret
aam
pop
adc
scas
push
inc
dec
or
pusha
cmp
xchg
inc
cs
rorb
sub
sbb
daa
sbbb
adc
push
mov
shl
test
pushf
push
and
or
add
mov
ljmp
dec
ja
ja
pop
dec
loopne
inc
movsl
mov
pop
xor
mov
subb
jnp,pt
hlt
ljmp
popf
cltd
jbe
add
mov
jo
lods
cld
je
fisubrl
cmp
push
dec
scas
mov
and
mov
and
pop
divb
adc
enter
add
dec
lods
mov
insb
add
xorb
or
mov
clc
loopne
adc
out
and
push
jae
roll
ja
cmp
mov
out
xor
adc
xor
insl
out
fwait
ret
push
sub
scas
cs
movsl
lods
popa
test
cmp
sbb
push
mov
or
mov
fbstp
mov
scas
xchg
gs
lcall
sahf
lahf
pop
push
lahf
xlat
adc
icebp
es
mov
inc
movsb
xchg
jge
js
js
mov
push
cli
xlat
jle
dec
cld
jl
outsl
adc
fsubl
stos
int
imul
repnz
mov
jecxz
inc
or
push
dec
es
enter
and
mov
or
lret
rorb
dec
icebp
data16
stos
sbb
js
int3
adc
scas
aam
mov
xchg
and
mov
dec
aad
pushw
lods
loop
bound
add
ret
subb
fsts
jns
xchg
jns
outsb
push
xor
clc
sub
mov
cmp
xor
dec
das
xchg
cmp
aaa
cs
sub
jo
pop
dec
push
cmpsl
sbb
cmp
pushf
addr16
fucomp
subb
enter
cld
sub
jnp
xchg
cmpsl
pop
shll
sbb
inc
sub
nopl
jmp
idiv
cmp
aad
stos
mov
jle
jecxz
lock
cmpsb
push
in
in
inc
sub
les
js
arpl
jg
notb
xchg
sbb
dec
xlat
push
fwait
sub
mov
dec
addr16
push
add
push
lret
mov
push
mov
outsl
jecxz
std
and
lret
adc
sahf
data16
fwait
addl
test
pop
cmp
push
sbb
mov
sub
jbe
sub
pop
out
inc
clc
out
push
cld
dec
push
pop
push
pop
mov
mov
push
int3
fidivrs
call
add
mov
dec
mov
xchg
and
rorl
and
sbb
fstl
lret
mov
cmp
pop
das
pushf
sbb
adc
inc
push
sbb
les
iret
cltd
ficoml
push
scas
dec
daa
or
xor
cmc
cli
ds
sub
lcall
test
sbb
cmp
jns
pop
fsubrl
ud2
lret
data16
inc
icebp
pop
sub
inc
sbb
xchg
dec
push
nop
sbb
repz
sub
lock
inc
jmp
dec
add
enter
or
jno
filds
mov
add
sub
dec
stos
sti
mov
lods
mov
loopne
cmpsl
pop
sub
jno
dec
arpl
mov
jno
mov
sbb
jbe
adc
push
xchg
push
jnp
je
mov
sbb
pop
push
sub
dec
adc
or
dec
fcmovbe
stc
xchg
cltd
and
inc
loope
fisttps
inc
xor
dec
je
jns
test
aas
pushf
push
sbb
out
insb
mov
mov
add
daa
sbbl
adc
mov
sahf
inc
pop
xchg
mov
inc
xchg
in
fdivrl
push
jb
ljmp
testl
adc
jae
out
add
ret
or
je
or
insb
outsb
mov
add
movsb
sarl
mov
push
hlt
sbb
mov
dec
sub
mov
jmp
and
adc
dec
lods
dec
stos
mov
add
out
imul
popa
mov
jmp
xor
iret
sub
ret
pop
add
jp
and
xor
push
xchg
jl
hlt
insl
or
out
add
inc
pop
xlat
adc
adc
loope
lret
jmp
or
inc
les
sub
lods
and
mov
push
xor
mov
dec
jo
add
push
push
fistpl
mov
dec
pop
test
ficomps
mov
mov
mov
int
mov
cmpl
push
fs
scas
mov
mov
sbb
or
in
repnz
cltd
gs
enter
shlb
mov
mov
xchg
lds
sub
jb
rcl
mov
pop
mov
aas
mov
ss
imul
push
mov
inc
xchg
rcll
fstps
ja
dec
push
mov
jg
pop
mov
test
das
out
sbb
stos
rorl
adc
loopne
mov
sti
lods
adc
or
fbld
cmpsb
pushf
dec
xchg
fistps
mov
stos
adc
push
xlat
xor
sub
stos
cmp
mov
xchg
and
shlb
mov
outsl
cmpsb
std
inc
xchg
and
mov
pop
inc
lea
and
push
movsb
insb
mov
lcall
adc
inc
inc
loope
fcmovne
and
outsl
cmpsl
repz
dec
dec
pop
aad
mov
and
loopne
not
loopnew
shll
in
cmp
fsts
pop
xor
ds
xchg
dec
fucomp
cli
sbb
arpl
mov
fwait
test
jp
sbb
and
cmp
jmp
lods
mov
mov
and
mov
faddl
ret
jl
lahf
xchg
mov
inc
pop
sub
mov
movzwl
data16
fistl
ljmp
cld
rcrl
les
ss
or
pop
pop
push
or
mov
jne
into
in
xor
insb
in
gs
into
inc
adc
jmp
dec
outsb
dec
arpl
out
js
test
mov
mov
push
scas
jno
cmpsl
xor
sub
cmpsl
mov
into
ja
stos
ja
scas
jle
aas
xchg
test
push
dec
xor
xchg
mov
loop
mov
push
stos
cld
xor
ss
mov
jl
pop
mov
lods
pop
push
insb
fdivrp
sub
cmp
cmp
sub
sti
jle
add
sub
sahf
adc
and
lock
mov
ss
popf
not
sti
xchg
jp
pushf
dec
mov
fnstcw
clc
rorb
jmp
cmpsl
dec
dec
mov
mov
int
fmuls
rorb
or
fsubl
loop
out
or
stc
ficoml
jg
adc
jp
out
xchg
out
xchg
ret
xchg
test
adc
subb
cs
jle
iret
ds
cwtl
sbb
cs
cltd
add
lods
mov
dec
dec
mov
int
rolb
pop
arpl
test
cmp
mov
fisttpl
in
test
gs
xchg
and
inc
lds
mov
aam
push
lds
cmp
bound
xchg
lea
pop
mov
adc
jo
jp
roll
outsb
jbe
xor
adc
test
cmpsl
or
mov
aaa
lds
pop
out
addr16
icebp
cmpsb
push
push
fmul
shlb
fidivl
es
xchg
daa
iret
mov
xchg
jmp
shr
stc
dec
push
push
cmpsl
addr16
cltd
aam
cmp
mov
movsl
lret
or
loopne
or
dec
pop
inc
aas
daa
outsl
or
inc
ljmp
adc
push
xchg
pop
aas
pop
jmp
cld
push
mov
push
adc
pop
xchg
pop
call
sbb
popf
mov
dec
sub
push
rolb
leave
mov
inc
sub
scas
cld
push
stos
xchg
in
movsl
ja
adc
cmp
dec
or
rcl
fnstenv
rolb
stc
sbb
cld
sub
orb
push
popf
xchg
cmpsb
fnstcw
or
dec
dec
fimull
xor
or
jle
xchg
aaa
mov
call
nop
aas
fs
ret
xor
loop
aam
xchg
fsubs
rol
jg
mov
jecxz
fstpl
adc
mov
mull
lods
mov
jbe
or
jmpw
lods
sub
rcr
sub
and
inc
add
in
or
mov
mov
mov
push
inc
loop
jo
movsb
jge
mov
xchg
scas
cs
lcall
test
rorb
or
imul
dec
dec
addr16
mov
daa
mov
cmpsw
lock
jecxz
in
ja
or
add
rcl
sub
fdivrs
das
or
mov
ret
decl
js
jns
loopne
and
or
mov
sbb
mov
mov
mov
icebp
adc
dec
mov
lock
dec
arpl
xchg
add
xchg
push
pop
pop
jnp
je
or
mov
dec
jnp
cmp
pushf
lds
lock
gs
add
xchg
dec
in
das
mov
popa
xor
daa
mov
inc
stos
lods
cld
xchg
jae
gs
in
push
xchg
jle
mov
pop
or
scas
inc
in
pop
movsb
xchg
dec
mulb
cmp
fdivrl
fidivrl
mov
push
and
out
add
js
pop
adc
ja
lcall
std
sbb
aad
pop
stos
jbe
loope
jecxz
jae
outsb
xlat
outsl
mov
cwtl
cmp
jmp
xchg
std
enter
pop
adc
out
sub
mov
jno
jo
das
mov
js
or
dec
clc
pop
sbb
push
mov
pop
push
in
lods
out
stos
push
nop
push
arpl
fldenv
push
xchg
repz
movsl
stos
xor
xchg
mov
cwtl
sub
pop
mov
jge
or
out
mov
sub
movsb
ljmp
mov
addr16
mov
inc
push
outsl
inc
fimull
outsb
adcb
inc
decl
xchg
iret
repz
addb
mov
jl
pop
sub
nop
cmp
addr16
push
xchg
xchg
sbb
ret
inc
rorb
sahf
and
and
add
xor
les
xlat
or
cmc
add
hlt
add
and
dec
ljmp
enter
out
iret
and
fs
push
mov
inc
fwait
icebp
mov
inc
mov
incl
jne
pop
test
jp
mov
cmc
pop
mov
scas
inc
and
jmp
enter
xchg
and
and
push
xchg
dec
push
mov
nop
rclb
push
scas
lahf
aad
mov
jge
rcrl
movsb
movsb
gs
and
sahf
mov
cmpsl
or
outsl
adc
jno
fildl
aam
rorb
enter
fs
sub
cld
call
hlt
enter
mov
into
loop
mov
sti
ljmp
jmp
ds
loop
cmp
shll
hlt
xor
adc
test
sbb
daa
push
fcmovb
leave
andnps
dec
add
sub
sub
pop
mov
cmc
test
loopne
ret
mov
jnp
mov
imul
mov
pushw
cmpsl
ja
std
push
fisttpll
xor
or
pushf
daa
das
xorl
push
mov
repnz
jne
ss
test
repnz
mov
add
int3
pusha
xchg
out
or
in
sbb
xchg
cmc
leave
stc
mov
dec
fsts
push
stc
call
push
in
out
xchg
or
nop
sbb
into
sbb
addr16
jno
xchg
out
loopne
sub
lret
mov
loope
sbb
xchg
push
icebp
xchg
imul
int3
call
xor
jmp
sub
stos
scas
test
in
cltd
hlt
insb
cmp
xor
aad
jmp
mov
aaa
out
cwtl
in
push
jo
push
sbbl
leave
in
daa
fs
ss
dec
mov
je
idivb
jns
push
popa
mov
sub
and
lret
xor
andb
xor
movsb
sub
aad
pop
test
jl
les
adc
dec
pop
jne
fcmove
xor
adcb
adc
iret
inc
or
mov
mov
push
mov
fmul
adc
outsb
test
mov
aam
push
jmp
out
add
mov
and
add
inc
sbb
sbb
lcall
in
cmp
and
fnstsw
mov
aad
in
pusha
adc
xchg
inc
pop
jmp
xor
test
les
push
add
aam
sub
xchg
adc
adc
pop
shll
dec
push
cmp
xor
mov
adc
enter
mov
push
or
test
rorl
int3
sbb
lret
mov
mov
push
adc
mov
mov
aad
adc
add
inc
dec
mov
mov
inc
pusha
cld
xchg
inc
push
mov
fidivrl
cmc
in
call
cmp
mov
and
out
dec
divl
cmpsb
add
rorb
scas
mov
lock
sbb
xchg
mov
mov
stos
mull
int3
push
rorl
scas
outsl
mov
push
and
jp
xchg
jp
vpcmpgtw
jbe
mov
lea
repz
sbb
push
sar
dec
test
movsb
shl
rcl
loope
mov
rcrl
mov
xchg
xchg
jns
vunpckhpd
jo
and
mov
addr16
inc
jmp
fists
popf
repnz
mov
nop
push
test
loope
xchg
aas
adcb
mov
lds
pushl
mov
bound
cltd
bswap
sbb
sub
push
fwait
jp
jbe
movsl
sahf
or
mov
jp
arpl
mov
out
popf
fcoml
lahf
lock
push
inc
push
mov
xchg
pop
icebp
lcall
dec
stc
adc
cmp
adc
popa
jmp
sub
jno
cmp
mov
xor
pop
mov
mov
mov
xor
loopne
lea
xchg
andl
ds
sub
scas
cli
test
xchg
insb
push
testl
ljmpw
sub
mov
mov
outsb
jle
adc
mov
in
lock
cmp
xchg
add
xlat
add
inc
pusha
mov
and
or
int3
rcl
clc
cli
in
mov
pop
jge
sbb
mov
scas
cld
cs
ja
xor
cmp
sub
sbb
fsubrs
push
sub
scas
lret
xchg
sti
cmpsb
test
dec
fbld
cli
mov
push
xchg
dec
or
ds
pop
jp
cmp
xchg
test
jne
test
adc
ljmp
add
or
imul
cmp
pop
mov
cmp
outsb
out
in
push
rorb
mov
icebp
pop
xor
sub
pop
jl
rcll
pop
sbb
dec
mov
inc
std
jbe
rcl
xchg
jae
je
icebp
xchg
test
sar
sub
pusha
jge
nop
jae
inc
mov
rorl
pusha
nop
xor
push
outsb
jecxz
dec
pop
jmp
dec
aad
fwait
add
push
lcall
and
es
mov
mov
fldenv
lret
ret
dec
out
push
pop
sub
js
sub
enter
fidivrs
and
lds
inc
cwtl
xchg
push
xchg
and
and
xor
js
adc
lock
push
rolb
sar
stc
sbb
xchg
pushf
pusha
cwtl
lods
insb
out
inc
mov
cmp
sub
cmpsl
sbb
sbb
push
out
pop
outsl
jne
setg
xlat
aam
push
movsb
push
push
int3
xchg
dec
add
dec
or
sbb
icebp
cs
xchg
add
add
or
lret
push
push
out
loope
testl
adc
unpcklps
mov
outsb
dec
or
inc
sbb
adc
mov
cmp
ja
int
sub
sbb
mov
cs
and
and
addl
cmc
imul
cmp
jg
andl
dec
dec
push
in
pop
sbb
adcb
notl
js
das
in
js
dec
std
dec
mov
idiv
and
inc
sbbb
inc
cmp
lods
adc
lea
mov
fsubrp
cmp
cmc
rolb
mov
movsl
ret
out
sbb
ds
shrl
xor
inc
or
fidivrs
sub
add
dec
adc
fsubr
xor
adc
cmp
push
xchg
imul
subl
jp
inc
and
popf
into
je
mov
daa
in
jnp
pop
insl
and
xchg
and
push
and
xchg
push
je
out
lcall
mov
push
repnz
scas
data16
or
or
bound
cwtl
notl
jmp
cmpsl
or
addl
xchg
ret
jno
add
xorb
je
cltd
enter
dec
pop
push
fimull
inc
out
pop
add
jmp
enter
push
in
pop
mov
or
sbb
and
insl
mov
sub
popf
out
mov
testb
aad
mov
adc
into
lcall
pop
scas
or
in
aam
or
test
adc
cmc
adcb
sub
mov
test
shl
insb
fmuls
sub
daa
add
loop
shll
lcall
pop
pop
push
or
rclb
cmp
sbb
data16
int3
lods
movsl
mov
mull
es
pop
pop
scas
rcl
mov
mov
inc
inc
push
cmp
mov
testb
ja
insl
push
pushf
lods
xor
push
cld
sub
aam
or
movl
xor
pop
popf
cs
js
dec
mov
icebp
ja
mov
inc
int
or
jp
adc
adc
mov
mov
lock
outsl
xor
push
std
imul
mov
jae
je
mov
sbb
lock
scas
sbb
push
in
lahf
fs
aam
movsl
scas
jg
ret
popf
mov
push
clc
popa
movsb
cmpsb
mov
jb
or
daa
push
mov
dec
sub
mov
mov
sti
and
push
ror
xor
das
mov
xchg
push
sbb
popf
andl
and
nop
push
cmp
sbb
mov
mov
roll
push
std
out
roll
aad
sbb
insl
jno
mov
lcall
xor
les
pusha
dec
mov
add
fiadds
fcomi
add
data16
add
jg
push
movsl
loopne
push
xor
push
mov
rolb
mov
stc
adc
sub
clc
insl
cmp
das
aas
mov
mov
hlt
fisubs
call
in
bound
mov
xchg
inc
fsubl
idivb
cld
mov
loop
out
shl
and
int3
jl
dec
subl
lret
imul
sbb
scas
lea
sub
filds
jns
mov
aam
xchg
jmp
mov
cmpsb
shlb
fcmovb
ficoms
dec
test
cmc
xchg
sti
loop
sbb
imul
lret
popa
push
cmp
mov
jp
add
mov
arpl
mov
gs
adc
pop
or
xor
aas
add
adc
pop
adc
js
repnz
sbb
xchg
out
and
mov
xor
lcall
fcmovnbe
pop
jg
gs
xor
pop
hlt
add
rol
cmpb
loopne
jg
lods
or
popa
pop
rcl
mov
dec
sub
jge
and
mov
inc
jb
sub
ljmp
ja
cmpsl
jp
push
or
jae
mov
fcmovne
lock
xchg
imul
xchg
inc
xchg
cmp
fsubl
mov
fcmovnb
int3
movsl
icebp
cmp
push
pop
mov
hlt
jne
addr16
lods
adc
popa
shl
in
scas
add
fiaddl
xor
inc
std
cs
ret
in
lret
iret
lcall
aam
and
dec
int
push
es
mov
mov
jb
testl
push
adc
add
or
sub
pop
or
icebp
or
aam
jns
int3
dec
cwtl
cmc
mov
enter
sub
inc
cmp
or
fistpll
adc
pop
cmp
inc
lcall
lock
pop
add
mov
in
xchg
xor
das
sub
jmp
scas
fisubl
xchg
sbb
sub
mov
add
rclb
dec
test
jg
enter
jle
cmc
jp
xor
xor
inc
sbb
bound
lds
add
inc
cmpsb
mov
fcomps
dec
push
mov
xor
or
fnsave
dec
fucom
and
mov
jno
es
fwait
aad
fnsave
inc
aam
jnp
out
int3
ja
add
movsl
daa
jle
mov
add
sub
ja
roll
sbb
push
rcrl
idivl
pop
inc
scas
jnp
ret
jne
ret
mov
or
mov
xchg
xor
icebp
sti
andl
add
in
subl
xchg
imul
mov
scas
adc
sub
dec
aas
loope
in
loope
cltd
push
mov
loop
add
call
insl
icebp
loop
add
clc
call
dec
jb
ds
xorl
xchg
and
pop
cmpsb
inc
repnz
xor
iret
test
mov
aas
pop
cmp
pop
inc
inc
mov
sub
dec
push
lods
ret
loop
adc
int3
stos
sbb
mov
pop
aam
enter
push
ret
jns
jb
add
sub
in
clc
adc
rcrb
and
popf
ret
int3
jp
mov
adc
fs
ljmp
js
and
add
sub
hlt
dec
cmp
or
sub
test
in
sub
inc
inc
mov
cwtl
lahf
cmp
pop
shrl
sub
imul
rcl
mov
enter
outsl
or
lcall
push
xchg
sahf
or
inc
xchg
jnp
mulb
les
xlat
stos
fcompl
dec
das
cmpsl
pop
stc
enter
cmp
es
stos
mov
lcall
pop
push
add
push
inc
inc
xor
mov
sub
mov
push
std
pop
or
mov
lods
and
xchg
ret
arpl
push
lods
rcl
je
or
adc
xlat
xchg
pop
jae
enter
jbe
outsl
jns
leave
or
cli
xchg
out
cmp
adc
mov
imul
gs
mov
mov
jns
test
inc
jne
jecxz
adc
imul
cltd
nop
negl
xchg
lock
fucom
sarl
or
mov
jp
loopne
inc
push
mov
mov
cli
jg
mov
out
daa
pop
xchg
scas
sub
int
mov
int3
cwtl
out
pushf
rcrl
insl
movzbl
test
mov
mov
clc
push
add
push
push
fsubrl
loope
xchg
mov
repnz
je
lods
push
mov
xchg
sub
imul
insl
and
and
sub
jg
adc
stos
or
movsl
cld
cmp
in
mov
aad
dec
jl
sub
int
sbb
mov
jmp
fldcw
les
sbb
mov
in
xor
ljmp
js
dec
punpckhdq
mov
ds
adc
lret
lea
test
scas
mov
xor
jecxz
adc
mov
loop
or
rcll
call
aad
mov
out
adc
out
call
pop
adc
data16
sbb
outsl
inc
sub
inc
leave
andl
ror
lea
cmp
pushf
sub
push
mov
xchg
aam
aad
lds
cmp
or
mov
mov
add
repnz
sbbb
jl
jmp
fsub
aad
out
cmp
pop
bound
cltd
push
jp
sub
xchg
dec
andb
mov
adc
popf
push
or
mov
and
push
mull
inc
cmp
push
mov
jbe
xchg
insb
rorl
and
test
pop
mov
and
out
icebp
negl
fucomi
insb
xor
inc
pop
mov
pop
aas
out
insb
inc
mov
lea
push
inc
or
mov
jge
pusha
call
jge
xor
pop
out
ss
adc
out
sbb
jl
jns
add
in
fcompl
adc
inc
pop
dec
add
cli
inc
mov
nop
or
jmp
mov
adc
cmpsb
aam
sbb
aad
mov
jle
test
ljmp
and
push
mov
sbb
mov
mov
outsb
lods
aad
adc
xchg
repnz
cs
xchg
popa
in
sti
dec
sub
xchg
cmpb
xchg
imul
loopne
jl
fucomi
and
xchg
das
mov
dec
enter
notl
add
mov
subb
push
pop
shlb
sbb
adc
jne
cmpsb
in
mov
repnz
and
push
ret
mov
sub
lods
std
mov
jp
push
jo
sub
pop
push
hlt
in
jmp
out
adc
sub
push
bound
les
and
ja
jnp
ret
mov
inc
sbb
enter
inc
xchg
dec
inc
add
xor
sub
in
in
sub
bound
cmc
sbb
out
pop
cli
mov
cmp
xchg
idivb
pop
sub
shlb
fnstcw
pop
cmc
fdivs
add
into
xchg
cwtl
jl
add
mov
fcoml
enter
mov
and
inc
sub
xlat
push
cltd
fnstcw
mov
inc
xchg
mov
iret
rcrb
int3
xor
lcall
jmp
filds
lahf
add
in
mov
popa
jo
xchg
lcall
mov
jg
fwait
pop
jo
inc
or
addr16
sarl
xchg
jo
jecxz
adc
dec
call
mov
inc
push
jo
mov
xlat
ret
mov
rclb
clc
sbb
out
mov
rcrb
jnp
xor
mov
jbe
adc
add
mov
dec
pop
mov
sbb
pop
inc
lds
push
inc
and
adc
dec
and
push
pop
pushf
dec
xchg
out
adc
cmovp
or
dec
stos
fwait
pop
cmp
je
inc
or
hlt
add
dec
cmp
and
push
in
cwtl
pop
loope
adc
fucom
jnp
xchg
sub
aas
je
inc
push
push
or
push
test
push
lss
xchg
add
lock
mov
lahf
adc
mov
mov
shrl
sub
scas
add
out
jns
shlb
loop
dec
enter
popf
xchg
fmull
pop
or
cwtl
add
movsb
aaa
fcoms
fdiv
push
inc
frstor
aam
hlt
fldpi
mov
ja
in
and
mov
sbb
das
or
push
aaa
jle
outsb
pop
es
fcmovne
sbb
lods
mov
mov
xor
jns
sub
dec
jo
mov
mov
adc
repz
and
sbb
push
cmp
aad
xchg
loope
cmpsb
sbb
out
xor
fwait
mov
insl
dec
cmpsb
rclb
sbb
sub
stos
cmp
fwait
xchg
inc
in
inc
data16
dec
in
xlat
fxch
sub
arpl
mov
add
pop
mov
push
cs
movsb
fldenv
push
mulb
mov
mov
out
mov
pop
push
idivl
repz
or
or
outsl
sbb
loope
and
push
cld
mov
fisttpl
sbb
lods
enter
jns
jmp
jmp
ret
inc
ss
mov
lret
jg
shll
xor
lret
cmp
insl
fwait
jmp
cld
leave
fwait
add
xchg
mov
add
enter
jb
andl
jp
dec
xchg
lods
xor
dec
daa
mov
fs
xchg
imul
or
mov
fadds
xchg
add
mov
hlt
cmpsb
jns
and
mov
mov
mul
js
push
pusha
pop
addb
lcall
xchg
nop
cs
mov
popf
xlat
bound
fiadds
pop
rorb
fwait
pop
pop
add
pusha
les
inc
cmp
cmp
push
and
aad
add
cmp
sbb
push
repz
stos
jmp
push
jmp
xchg
mov
adc
cld
mov
mov
pushf
mov
pop
in
ret
push
jl
lahf
sub
adcl
adc
test
cmp
add
aam
jg
cld
mov
adc
sub
add
mov
add
nop
jbe
sbb
xor
popa
xor
sahf
faddl
jmp
jecxz
inc
or
mov
insl
out
pop
fldcw
movsl
ret
or
lods
adc
lock
dec
inc
jg
mov
aaa
push
xor
cmpsl
scas
shlb
imul
jg
push
and
data16
call
cmpl
in
popf
push
in
jno
mov
lcall
test
je
jb
test
scas
ljmp
and
mov
scas
test
out
mov
cwtl
rcl
pop
push
pop
and
jo
pop
xchg
jl
mov
inc
loope
xor
fs
add
pcmpgtb
idiv
sub
cmp
data16
xor
xchg
cltd
cmp
out
subl
xor
fsts
jge
outsl
cmpl
inc
test
in
cwtl
jnp
xchg
scas
sahf
popa
mov
fs
push
pop
inc
scas
inc
add
xchg
xor
push
and
push
dec
fists
adc
add
xchg
jno
fnstenv
mov
push
test
rclb
xchg
pushf
xor
sbb
out
mov
dec
test
mov
rol
aas
lea
add
xchg
xor
in
mov
stc
mov
dec
ret
shll
jbe
fistpll
js
pop
mov
dec
push
jg
fld
pop
popa
inc
enter
inc
in
push
movsb
cmp
mov
dec
jbe
ss
add
lods
mov
mov
insb
leave
fninit
fwait
test
mov
and
cmpsl
lds
nop
mov
mov
lods
and
aas
jns
out
dec
push
mov
sub
sti
in
roll
mov
push
ljmp
inc
shl
pusha
inc
jmp
xchg
push
or
sub
adc
stos
lahf
lds
mov
int
inc
mov
aaa
rcrl
push
xchg
mov
out
aam
inc
pop
adc
dec
jmp
inc
fcom
push
cld
into
or
dec
ficoml
mov
mov
jns
mov
cmp
add
mov
aam
pop
inc
dec
cs
dec
stos
pop
mov
sbb
test
scas
jns
pop
xorb
iret
sarl
pop
out
out
out
and
push
icebp
test
in
xchg
icebp
out
xchg
cmp
cmp
lods
sbb
cli
mov
mov
and
xor
xchg
push
inc
aad
pop
insl
dec
mov
dec
popf
ljmp
stos
pop
jecxz
aad
in
int3
dec
jbe
fidivs
mov
xor
addr16
jnp
push
pusha
jle
aas
and
jmp
imul
push
xchg
aas
mov
cmp
mov
push
das
mov
notl
shl
jnp
push
add
mov
xchg
jg
xchg
mov
loope
wbinvd
adc
lea
jo
outsb
xabort
mov
pop
stos
hlt
scas
xlat
sbb
dec
or
mov
je
in
imul
or
cmp
into
mov
dec
jb
xor
fldcw
loope
and
jle
mov
in
pushl
xor
sti
jae
int
outsl
add
out
iret
push
outsb
fadds
pop
mov
addr16
out
xor
mov
mov
pop
push
mov
adc
xchg
mov
lock
lods
inc
test
sub
lods
lcall
ja
movsb
mov
insl
into
shlb
xor
mov
into
and
jp
jo
jle
repz
js
jl
dec
push
xor
cmp
push
xchg
mov
lcall
aam
fsubrs
out
cltd
adc
mov
frstor
xchg
xchg
repz
cmp
cltd
js
out
add
stc
jmp
push
sbb
sub
or
inc
push
mov
mov
inc
ret
cwtl
das
pushf
mov
dec
pop
xchg
call
shrl
ret
or
pop
sub
and
int3
mov
es
pop
into
cmp
inc
mov
ss
lock
shrl
adc
inc
in
sbb
jge
cltd
xchg
adc
xchg
pushf
sub
shrb
mov
xchg
je
test
aam
dec
sbb
imul
dec
daa
insb
add
outsb
mov
lcall
test
dec
xchg
cwtl
lcall
dec
sub
loop
aaa
mov
hlt
or
mov
inc
pop
pop
out
push
mov
inc
imul
jbe
or
sti
dec
lahf
dec
gs
xchg
das
inc
cmc
lea
jbe
xor
imul
pushf
gs
xlat
push
out
pop
adc
push
dec
mov
out
insb
sbb
add
mov
aaa
sbbb
mov
out
cmp
or
and
aad
push
xchg
ljmp
rcr
test
jg
mov
lock
je
mov
mov
and
xchg
test
negl
cmp
xor
push
xor
ds
sub
mov
and
add
dec
jns
out
and
into
jg
push
xchg
outsl
push
ficoml
add
pop
mov
pop
sarl
sbb
lcall
pop
repz
aad
pop
mov
enter
pop
sub
or
aad
or
repz
xor
mov
sub
aam
fidivl
bt
outsl
jbe
loopne
cmp
push
sbb
das
int
mov
xor
jecxz
data16
push
mov
mov
ss
xchg
xchg
mov
push
lock
fsubrs
arpl
xlat
ljmp
and
inc
cmp
xchg
push
js
mov
ret
rcrl
pushf
in
insb
mov
pop
int
popf
or
out
pop
mov
lds
dec
adc
popa
pushf
in
sbb
xchg
pop
scas
ret
int3
push
adc
dec
popf
or
bound
pop
outsl
fcmovb
and
ds
pop
lock
or
cs
fisubl
pop
popa
scas
adc
mov
add
lea
ret
xor
shrb
sbb
loop
icebp
xchg
je
cmpsl
jb
inc
scas
orb
push
and
add
addr16
in
xlat
jg
xchg
fs
fidivs
sub
add
jle
jecxz
ret
lret
cmp
pop
testl
and
mov
xchg
mov
int
ljmp
repnz
cltd
jge
in
cmpsb
divl
bound
inc
or
popf
dec
out
and
xor
add
push
leave
idivb
sub
inc
push
movl
cmp
lcall
aaa
lock
adc
xlat
inc
jns
clc
adc
add
or
sbb
stc
nop
test
mov
and
add
jmp
add
hlt
pusha
adc
nop
adc
mov
add
or
dec
out
push
mov
movsl
inc
push
gs
cmpsl
lret
push
adc
mov
imul
xchg
cmp
xchg
cmc
dec
in
cli
inc
mov
cmpb
push
outsb
pop
dec
jmp
scas
jle
pop
dec
sahf
xchg
sbb
jnp
and
pop
pop
repz
out
bound
lds
mov
xchg
xlat
into
leave
adc
xchg
int
mov
xchg
xchg
add
stos
adc
cltd
xor
adc
or
sbb
lods
pop
into
hlt
mov
inc
xchg
iret
mov
and
jge
inc
fs
and
pop
rcll
inc
lods
push
push
push
xor
mov
mov
xor
mov
cmp
lods
pop
inc
adc
pop
xor
sub
mov
and
sbb
and
int
xor
sti
clc
outsl
pop
mov
imul
mov
cwtl
pop
mov
jg
push
xor
cmpxchg
pusha
in
insl
scas
and
shl
fstpt
or
pop
sti
add
fs
in
and
clc
mov
dec
imul
cli
xchg
pop
mov
shl
adcl
in
xchg
fdivs
sarl
add
adc
int
push
adc
adc
sbb
rorl
add
push
jmp
daa
mov
sub
ss
jp
sbb
xchg
inc
pop
dec
pop
aad
pop
mov
inc
push
movsb
les
dec
cmp
mov
adc
mov
push
sahf
sbb
nop
out
xor
jno
mov
push
scas
sub
adc
cmp
jns
mov
push
fsubl
int3
and
push
inc
ret
int
jecxz
leave
and
call
cmp
imul
push
cltd
std
add
movsl
jg
repnz
jge
ljmp
addr16
repnz
push
lock
jbe
mov
into
push
or
sbb
rorb
adc
jnp
jp
jmp
scas
imul
fcoms
fdiv
aam
test
ret
mov
mov
lods
dec
xor
pop
cmp
dec
xor
mov
daa
add
sbb
pusha
les
adc
not
inc
data16
out
mov
lcall
dec
lods
jns
sub
pop
inc
push
jmp
mov
adc
mov
and
test
cmpsb
cmp
adc
cmpl
push
imul
mov
xchg
out
push
outsb
mov
jecxz
pop
dec
cmpsl
dec
lahf
xchg
rcl
and
xchg
and
js
push
icebp
loop
add
rcl
or
dec
xlat
adc
nop
lret
xor
sbb
lock
adc
pop
cmp
fcmovne
mov
icebp
push
lret
add
and
dec
fsubrl
and
jne
lods
aam
sub
xchg
mov
aam
das
jns
push
add
xchg
setb
out
iret
setno
push
jne
dec
cmp
fldl
adc
xchg
mov
bound
xchg
add
ja
pop
cmpl
push
xor
imul
subb
jge
lret
test
cmc
lcall
arpl
push
mov
fsubr
push
iret
sbb
inc
js
push
inc
ret
xchg
mov
pop
shl
aam
xor
cmpsb
xchg
mov
cmp
cmp
sti
addb
loop
jbe
push
jge
mov
pop
dec
ljmp
dec
mov
arpl
adc
scas
shrb
xchg
adc
cli
cld
lods
movsb
leave
and
out
mov
cltd
push
fsubrs
mov
sbb
sub
jns
movsb
aad
cli
nop
mov
push
push
push
pop
mov
shll
lret
xchg
hlt
ja
insb
cmp
in
addr16
sub
xchg
add
mov
inc
jbe
out
aas
xor
inc
pop
cmpsb
les
add
mov
adc
and
clc
cmp
add
fisttpl
jle
mov
stos
je
jmp
sub
mov
insb
cli
push
out
inc
inc
pop
iret
push
call
push
xchg
insl
push
imul
add
push
daa
dec
xor
iret
dec
movsl
cmp
dec
xor
ret
xor
sbbb
mov
add
mov
pushf
test
stos
sbb
stos
sub
jp
inc
sahf
jl
and
rorb
push
cmc
test
cld
sarl
aaa
add
jns
mov
xorl
outsl
repnz
and
cmpsl
cs
out
add
pop
cmpsb
sbb
sub
out
je
imul
popa
lahf
mov
rorb
mov
testl
add
sub
fsubl
lds
je
sub
imul
sub
or
outsb
dec
pop
mov
cmp
rorl
push
inc
fs
xor
in
dec
ret
out
xchg
mov
in
jbe
xorb
cmp
and
cmp
mov
sub
shl
mov
xor
mov
insl
push
pop
pop
sub
or
xlat
mov
inc
gs
arpl
inc
movsl
ficomps
dec
mov
mov
insb
adc
data16
inc
xchg
daa
fisttpll
pop
fisubs
sti
sbb
pop
daa
cmpsl
pop
fimuls
test
in
into
mov
push
add
gs
cmp
add
pop
loopne
mov
mov
cwtl
ss
xchg
add
jno
mov
jbe
jnp
xor
xchg
in
push
cmp
jecxz
add
enter
jbe
adc
stc
dec
incl
mov
dec
add
inc
es
popf
sahf
pop
ds
jl
or
cmp
movsb
cmp
sbb
mov
mov
xorl
jle
dec
push
push
mov
mov
fs
insb
inc
loopew
mov
rcll
dec
mov
push
xchg
hlt
mov
lret
add
cmp
imul
lods
mov
sbb
ja
int3
pop
outsb
jmp
loope
jmp
sub
push
mov
sub
mov
sbb
push
jo
mov
inc
rclb
loope
ficoms
xchg
call
divb
sbb
mov
arpl
push
fsubp
icebp
add
loop
adc
daa
mov
dec
jmp
sbb
fdivl
lea
enter
das
inc
and
mov
sub
ret
and
out
xchg
inc
or
lret
push
loopne
jmp
adc
loop
inc
and
into
adc
data16
mov
inc
mov
lea
mov
push
push
scas
addb
push
xor
out
jne
inc
loop
mov
rclb
jl
jae
sarb
arpl
cmp
mul
jp
cmc
imul
add
xchg
mov
or
sub
adc
arpl
inc
mov
sbb
jo
add
fiadds
dec
cmp
je
xor
test
mov
sub
cwtl
addr16
and
ljmp
insb
xor
fs
cmp
xor
gs
pop
dec
int3
or
scas
ret
dec
in
gs
xchg
adc
add
insl
jle
es
and
xor
lods
sbb
cmp
xor
lcall
sbb
daa
jge
cwtl
outsl
mov
cmovbe
cld
mov
pop
cmp
jecxz
out
pop
out
or
mov
fwait
ss
lods
lds
in
pop
fcom
xchg
inc
cmp
xchg
sbb
pop
nop
mov
jp
clc
pushf
clc
stos
int
es
push
xor
rol
sbb
dec
xchg
push
rorl
cld
mov
loopne
inc
cmp
frstor
dec
outsl
push
stos
dec
pushf
xor
in
jbe
icebp
push
jae
shlb
in
pop
mov
shll
rcrl
add
dec
sub
mov
cld
subl
ljmp
inc
adc
in
mov
ja
rorb
enter
loope
loope
mov
push
cmc
clc
in
xchg
lock
jmp
mov
lds
cmpsl
pop
mov
stos
add
add
pop
sahf
int
lods
aaa
int
ret
or
imul
in
add
incb
aaa
xor
lret
xor
jge
dec
fmuls
inc
dec
inc
jo
and
insl
data16
repz
repnz
fisubl
mov
jo
out
or
daa
adc
addr16
pop
mov
aaa
mov
iret
sbb
insl
and
pop
fisttpll
jmp
cmp
xorb
sub
in
xchg
mov
sbb
frstor
ja
mov
out
push
pslld
fsubrs
fiaddl
je
xchg
sar
lret
jbe
ret
mov
dec
push
movsl
clc
mov
push
ss
xor
xchg
fisubrs
notb
xchg
dec
stos
stos
call
push
dec
fmul
out
out
fcomps
push
dec
outsl
in
dec
call
int3
mov
pop
push
or
cmp
mov
and
loope
pop
js
and
jne,pt
cmp
push
imul
test
push
dec
lds
test
pop
dec
xchg
test
push
rorb
mov
sub
mov
jne
cmpsb
push
mov
pop
lret
cltd
das
adc
adc
lds
pop
adc
jbe
jp
mov
xchg
mov
push
pop
int3
mulb
enter
add
mov
sub
arpl
mov
mov
inc
out
les
sbb
out
lods
push
sub
out
pop
jg
mov
jp
jns
push
sahf
cmc
sbb
inc
push
push
pop
mov
ds
inc
add
push
sbb
cli
dec
mov
dec
pop
jg
adc
cmp
aad
sbb
jnp
inc
stos
insb
xchg
mov
lahf
mov
pop
in
push
scas
mov
cmp
jae
and
dec
imull
adc
jo
adc
les
leave
sbb
ret
in
push
sub
pop
inc
lret
xchg
es
cmpl
pop
xorb
sub
jecxz
xor
inc
cs
dec
xchg
mov
and
adc
and
loopne
addl
mulb
xchg
push
mov
xchg
add
cmp
gs
movsb
pop
outsl
xor
stc
es
jle
pop
xor
mov
cmpsl
and
mov
dec
jo
icebp
andl
stos
jp
cltd
jecxz
in
cmp
sub
cmp
arpl
into
mov
enter
fisubs
outsl
pushf
lret
mov
pop
sbb
jl
nop
xchg
or
jp
push
addr16
push
gs
dec
mov
jo
push
fidivrs
dec
jbe
inc
loop
repnz
fwait
lcall
jo
ret
add
aam
push
mov
mov
add
or
mov
fistl
or
je
sub
mov
and
push
xchg
repnz
adc
push
div
dec
rorl
cmpsb
ljmp
pop
jle
lods
cwtl
pop
sub
test
mov
xor
lcall
stos
and
repnz
jno
out
out
stos
dec
pop
fcomps
xor
fs
xchg
xchg
int3
lahf
and
popl
inc
and
and
push
sarl
push
pop
xor
mov
sbb
pusha
clc
push
xor
pop
imul
imul
xor
stc
xlat
sub
mov
out
idivl
lcall
dec
mov
out
or
ret
arpl
xchg
jns
push
adc
or
or
fs
jg
push
ja
push
cmp
enter
mov
dec
xchg
jnp
mov
shlb
cmp
mov
imull
push
xchg
out
je
adc
pop
fists
adc
xor
dec
or
jns
leave
lods
jmp
test
mov
lcall
cmpsl
shll
mov
xor
add
cmp
push
xchg
add
sbb
in
in
aam
push
cmp
into
xor
data16
fmulp
xlat
rol
lods
and
pusha
paddusw
mov
shll
ja
or
into
jle
lock
rorb
jmp
dec
aam
cmp
test
das
xor
xchg
xlat
sbb
repnz
shll
jne
mov
jge
lahf
negl
leave
call
push
cmpsl
xor
xchg
xor
das
test
das
mov
inc
lret
int3
adc
loop
inc
cld
cmpsb
adc
aad
adc
pop
hlt
insb
dec
out
shll
push
out
mov
js
repz
or
or
dec
xchg
and
mov
jl
push
cmpsl
lock
jnp
pop
mov
mov
push
ja
jecxz
adc
cmc
je
mov
jle
and
sbb
jl
or
sbb
shrl
out
aad
imull
add
cld
sbb
addb
cmp
fsubs
leave
push
idiv
subb
sbb
pop
idivl
push
adc
mov
add
xor
fs
mov
testb
xorl
andl
jbe
cwtl
and
in
lahf
jg
sub
cmc
push
mov
xchg
cmpsl
xorl
push
das
movsb
add
inc
int
add
cmp
fsubrp
mov
or
mov
iret
pop
add
mov
nop
push
mov
mov
gs
cwtl
fisttps
int
xor
inc
mov
in
mov
movb
adc
jns
insl
movsl
mov
sbb
lahf
cmp
insb
cmp
dec
int
iret
pop
sbb
add
mov
insb
negl
stos
int3
sub
push
xchg
shrl
insb
filds
cmp
sbb
mov
mov
in
xor
out
jnp
aas
imul
sub
pop
into
sub
aad
push
aam
es
aam
cmovno
mov
mov
inc
adc
movb
sbbl
cmp
push
jae
jp
dec
shlb
sub
js
jge
rolb
scas
xchg
call
inc
inc
pop
les
push
cmp
test
pop
lds
xchg
inc
xchg
add
dec
adc
or
xor
mov
lret
pop
sbb
rorb
xor
inc
daa
out
inc
mov
xchg
cli
sbb
push
leave
xlat
je
jmp
push
jmp
pop
sub
jns
push
fmulp
pop
add
mov
xor
lods
mov
mov
adc
cmp
jp
dec
sti
fdivrs
scas
cmc
ficoml
test
push
inc
mov
xor
lea
pushf
shlb
insl
cmpsb
jne
xchg
mov
mov
mov
push
xchg
je
subb
movsb
jae
cltd
out
or
sub
mov
outsb
mov
lods
outsl
mov
stos
in
mov
lcall
pushf
adc
add
push
test
fadds
mov
insl
es
xor
repnz
into
sbb
jle
xor
or
pop
sbb
in
sbb
movsb
mov
cmc
or
sbb
push
push
mov
dec
adc
cmp
insl
cmp
shl
jns
clc
iret
push
jg
add
sbb
cmp
push
aad
or
loop
dec
jl
cmp
lods
sub
adc
jne
push
push
pop
pop
mov
pop
jle
inc
cmpl
dec
jnp
sub
sub
xor
and
push
cmp
cmc
mov
push
fcomps
fxch
push
inc
stos
shlb
pop
or
inc
dec
sbb
ret
jle
repz
add
add
or
mov
dec
xor
mov
ret
dec
scas
jecxz
mov
lods
push
push
inc
dec
push
stos
pop
repnz
jbe
mov
inc
xlat
adc
ror
dec
out
stos
add
mov
lods
mov
push
int
sub
sahf
js
nop
and
push
pushf
dec
xor
sbb
rcrb
les
sar
jns
dec
pushf
or
sub
std
pusha
mov
pop
lods
adc
dec
testb
mov
sub
and
nop
xor
or
lods
dec
lds
dec
jns
add
movsl
divb
jg
mov
and
aad
mov
sbb
stos
arpl
mov
ss
popf
fildll
ret
sti
mov
aad
sub
pop
pop
push
ficompl
call
nop
xchg
iret
mov
jnp
jne
sbb
or
cwtl
aas
pop
inc
xor
mov
jp
inc
repnz
xor
xchg
pop
out
daa
xchg
aad
addr16
dec
test
cmp
les
fdiv
xchg
out
jg
sbbb
sub
jnp
dec
fdivrs
or
pop
cmp
js
xor
xchg
outsl
mov
lea
mov
test
and
jno
mov
or
scas
subl
leave
xor
push
pop
int
mov
xchg
in
sbb
mov
sub
out
jns
loop
mov
daa
lahf
inc
enter
insl
cmpsb
imul
in
aas
jecxz
clc
sub
or
pop
mov
inc
mov
rolb
sahf
stos
lret
cmpsb
repnz
test
aad
outsl
mov
and
xchg
repz
je
mov
xchg
xor
into
lcall
out
arpl
xor
adc
mov
repnz
sbb
xchg
xchg
icebp
xchg
mov
mov
hlt
subb
imul
or
es
in
dec
mov
sbbb
and
out
jl
sub
cmpsl
xchg
cmpsb
call
pop
pusha
cmp
push
ss
mov
test
mov
stos
aam
fadd
adc
out
ds
test
mov
lret
mov
stos
inc
sbb
sahf
push
jno
imul
push
shr
repz
xchg
inc
leave
push
cmp
pushf
xchg
dec
xlat
sub
add
fisttpl
jb
jae
push
sub
mov
pop
sub
pop
mov
and
sbb
pop
insb
fisttps
ficoms
fwait
jo
dec
bound
dec
lock
inc
or
lret
outsb
inc
test
mov
fldcw
push
cmp
mov
add
pop
cs
mov
daa
outsb
push
mov
lock
sarb
sbbl
pop
stos
xchg
mov
jmp
mov
sbb
pop
js
mov
les
jo
xor
ds
cmpsl
test
lret
or
out
int3
sub
hlt
sbb
loopne
adc
loop
ficompl
notb
or
xor
mov
cmp
test
and
inc
xor
orl
out
xchg
sbb
push
pop
cltd
or
popf
jnp
aaa
mov
pop
jmp
add
xor
mov
imul
sub
inc
out
cmp
adc
mov
mov
popa
sti
pusha
mov
lds
sub
lret
push
pop
or
and
push
mov
mov
inc
repz
shlb
addr16
pcmpeqw
xor
mov
lock
xor
mov
mov
add
mov
bound
push
fdiv
les
mov
out
pop
insb
and
pop
or
loope
hlt
int3
mov
mov
sahf
daa
popa
into
cli
mov
cmpsb
movsb
fdivr
jno
lahf
push
sbb
outsl
xor
jnp
loopne
aam
dec
out
cmp
rcrl
push
adc
adc
mov
xlat
ret
jmp
push
repz
stos
pop
push
shll
mov
out
lods
mov
in
mov
mov
loopne
test
bound
es
sub
or
jp
lods
jmp
adc
data16
icebp
or
je
out
orb
jbe
ds
push
daa
xchg
inc
cmpsl
cli
repnz
mov
xor
mov
inc
lds
xor
jae
test
dec
or
repnz
sub
fdivr
mov
push
iret
push
rclb
shlb
pop
je
adc
sub
cltd
jns
ds
subl
pop
call
scas
mov
in
mov
icebp
fstpt
mov
stc
nop
and
shl
cmpsb
dec
nop
mov
adc
mov
movsl
cmp
jbe
jmp
cmpsl
js
stos
mov
and
push
fcompl
sbb
jecxz
test
std
cltd
sbb
adc
rorb
ja
cmp
and
xchg
loopne
sbb
mov
addr16
aaa
xchg
or
mov
mov
lahf
cld
shrl
sbb
es
orl
in
sbb
int3
dec
mov
mov
or
jl
popf
rcr
loope
hlt
pop
or
and
cmp
gs
add
mov
dec
jnp
ljmp
pusha
cwtl
in
xor
add
inc
fsubrs
repz
push
xchg
pop
push
addr16
pop
sbb
stos
ud0
jnp
das
rsqrtps
lea
lret
xchg
sbb
mov
cmp
jg
jae
es
adc
aad
cld
add
sub
fdivl
jae
repz
cmp
stos
xchg
adc
in
push
mov
mov
mov
icebp
xchg
push
mov
and
pop
push
jae
push
dec
sub
out
pop
and
std
movsl
inc
fldenv
inc
fldt
aaa
xor
push
or
pushf
and
push
push
lcall
mov
jnp
inc
jmp
dec
hlt
xor
adc
inc
lea
mov
xchg
pushf
xor
cmp
out
sahf
fs
inc
xchg
xchg
xchg
inc
xchg
push
subb
movsl
cmc
loope
sti
insb
fsubl
jno
or
mull
flds
cmp
xor
repz
test
insl
addr16
mov
pop
or
insl
ja
add
jns
clc
mov
mov
push
push
push
mov
add
dec
andnps
mov
dec
clc
mov
mov
add
add
add
mov
clc
inc
mov
add
mov
jnp
add
inc
mov
mov
mov
mov
mov
dec
orl
mov
mov
mov
mov
mov
sldt
add
mov
push
mov
push
mov
mov
push
clc
orl
mov
dec
add
jnp
addl
addl
xorl
mov
mov
mov
dec
inc
mov
dec
jnp
mov
mov
mov
inc
mov
add
mov
push
mov
mov
inc
mov
mov
mov
mov
orl
add
mov
add
sgdtl
dec
psubb
push
add
mov
mov
mov
mov
clc
mov
dec
mov
add
add
dec
dec
cmovne
mov
dec
add
mov
andnps
addl
add
inc
mov
push
mov
add
clc
clc
clc
mov
mov
mov
mov
inc
mov
push
mov
inc
add
dec
add
mov
jnp
add
mov
add
add
jns
jnp
mov
mov
push
add
inc
mov
addl
mov
mov
add
push
add
add
orl
mov
clc
dec
clc
clc
mov
add
push
dec
mov
add
mov
orl
mov
jno
add
mov
sidtl
inc
inc
add
inc
str
clc
mov
xorl
mov
mov
mov
dec
clc
push
add
add
push
mov
mov
dec
inc
xorl
cmp
add
dec
xorl
dec
mov
inc
inc
inc
mov
add
push
clc
mov
mov
push
push
xorl
mov
cmovne
add
mov
mov
mov
dec
cmovge
orl
mov
dec
mov
addl
add
mov
inc
mov
mov
dec
mov
mov
inc
add
addl
clc
push
mov
push
add
mov
mov
add
add
mov
mov
mov
orl
mov
clc
mov
mov
mov
push
dec
add
movzbl
clc
addl
add
inc
mov
add
mov
mov
add
jns
push
add
mov
dec
mov
clc
orl
addl
xorl
dec
addl
mov
mov
add
dec
dec
add
mov
add
mov
clc
mov
inc
add
mov
add
add
mov
mov
add
inc
mov
mov
clc
xorl
push
mov
add
add
inc
jno
mov
orl
mov
mov
mov
inc
inc
inc
inc
mov
push
mov
inc
xorl
add
mov
jno
clc
add
mov
dec
mov
mov
add
mov
mov
mov
inc
inc
mov
push
dec
mov
mov
mov
mov
add
mov
mov
add
clc
clc
mov
mov
mov
mov
mov
mov
add
add
add
mov
mov
dec
jns
push
mov
mov
clc
mov
mov
add
dec
mov
mov
mov
clc
add
mov
push
dec
add
clc
mov
mov
push
mov
mov
add
mov
setns
leave
xor
lcall
out
call
mov
sbb
xchg
push
fs
dec
dec
xchg
out
sub
pop
clc
clc
repz
push
daa
xchg
push
jp
cli
jmp
es
mov
mov
and
scas
outsb
pop
or
std
mov
add
iret
andb
jo
repnz
mov
shrl
cmc
mov
aas
xchg
movsl
loopne
scas
cwtl
dec
and
movsl
mov
mov
into
mov
xor
or
jle
call
push
xchg
testb
mov
dec
sbb
xchg
jmp
fcoms
adc
xor
mov
int
stos
repz
cmp
dec
sbb
lods
stos
insl
jmp
jle
ljmp
pop
cltd
or
je
cmp
mov
dec
mov
adcl
out
aas
push
xchg
out
subl
sub
shll
pusha
jo
nop
mov
stos
fstpl
sub
adc
idiv
int
enter
mov
mov
movsl
jbe
mov
sbb
sub
scas
or
mov
dec
mov
lret
adc
add
aad
in
sub
pop
jbe
rolb
fmul
adc
and
ljmp
xchg
fstl
test
or
imul
push
mov
bound
loop
and
mov
jmp
jg
adc
shrl
call
lcall
xchg
mov
lds
cmp
adc
add
jbe
push
fistpl
xchg
mov
ja
imul
das
push
mov
cli
jle
sbb
lea
jno,pt
bnd
or
andb
in
test
or
xor
and
out
icebp
pusha
xor
fldcw
aad
cmp
out
inc
faddl
sub
cs
adc
es
test
cmpsb
js
or
into
push
adcb
fxch
ljmp
call
fdivl
inc
cmc
pop
add
lcall
jae
jnp
and
in
inc
xor
mov
push
xchg
stc
or
mov
repz
adc
lret
imul
sbb
jne
jae
test
push
xor
cs
xchg
sbb
loopne
dec
pop
ret
leave
jle
ds
jge,pt
mov
ret
jecxz
push
jnp
dec
rcl
push
sbb
enter
daa
cmpl
sub
iret
cmpsl
rcl
xchg
or
lret
or
cwtl
mov
pop
js
inc
jnp
loop
mov
iret
out
xorb
and
xchg
or
scas
cvtdq2ps
jle
lods
in
jmp
push
or
repz
and
pop
adc
xor
shlb
out
insl
dec
scas
xchg
cwtl
sti
sub
test
out
stos
cmp
aam
ret
in
xor
mov
movsl
xchg
push
mov
arpl
xor
adc
xor
dec
stos
inc
push
xlat
arpl
pop
aas
add
loopne
clc
add
cwtl
dec
ficomps
jg
sarl
ja
mov
dec
loope
pop
sbb
sbb
xchg
mov
xchg
ffreep
aaa
sahf
bound
sub
cwtl
fimuls
cmpsb
sahf
bound
fmulp
mov
pop
sbb
jp
adc
mov
jge
adcb
shlb
enter
and
mov
fidivrs
adc
lds
lret
push
lea
aaa
lret
lods
cmp
out
add
mov
test
push
popa
push
cmp
andl
push
xchg
std
rorl
push
adc
jle
sub
push
mov
call
test
or
iret
idivl
xorb
dec
loopne
incl
call
insb
popa
mov
dec
jnp
fmull
test
push
shlb
inc
mov
push
xchg
mov
outsb
fs
sbb
jae
inc
into
leave
and
mov
aaa
push
push
and
lret
cli
jp
add
jb
stc
push
inc
and
mov
aad
fcompl
mov
daa
aaa
cld
imul
pop
sahf
jg
cmp
out
and
push
or
jb
stos
lcall
imul
repz
addl
test
xchg
test
jl
iretw
sbb
inc
xlat
mov
aaa
push
mulb
dec
das
insl
mov
cld
lea
popa
cmp
test
lahf
push
xchg
or
and
loope
mov
push
popf
test
in
or
cli
insb
mov
stos
xchg
dec
arpl
sahf
adc
mov
fnstenv
mov
inc
inc
jg
xorb
insl
lock
call
xchg
fcompl
clc
aam
sub
jle
int3
or
in
mov
push
jnp
lcall
and
xchg
jns
js
mov
std
mov
pop
mov
push
dec
mov
lds
dec
xor
pop
push
dec
inc
adcl
jne
sti
push
dec
xchg
jmp
xlat
xchg
ljmp
push
xor
sbbb
push
jmp
pop
push
sbb
es
push
sbb
sub
mov
pop
cmp
push
mov
mov
xchg
adc
inc
inc
sub
xchg
jge
rcrl
xchg
cli
out
jecxz
push
jmp
fimuls
out
cmp
sbbl
fsubrp
mov
inc
and
cmpsl
dec
add
fstps
sbb
mov
cmp
xchg
imul
mov
ds
sub
sub
or
inc
je
cwtl
imul
pop
mov
add
pop
pop
inc
pop
pushf
xlat
stos
adc
push
mov
fldenv
ljmp
xor
in
sbb
pop
adc
lret
push
out
fcmovnu
faddl
fsub
pusha
cld
leave
cmp
adc
cmpsl
ljmp
inc
jecxz
fdivrp
popa
dec
cld
out
in
out
js
loope
pop
sbbl
ja
push
mov
fldcw
or
push
lahf
sahf
lea
in
ror
lds
or
cmp
jae
rcrb
inc
shrl
aam
xor
push
mov
insl
mov
lahf
mov
xlat
push
adc
ljmp
sub
stos
adc
cmpl
add
lahf
pop
jnp
sub
jmp
fiadds
mov
sbb
inc
xchg
fs
std
insl
add
push
add
in
ffree
sub
xor
cmp
and
xchg
or
adc
mov
cmpsl
jb
add
and
imul
int
popf
clc
pushf
rcrb
mov
into
inc
jecxz
or
movsl
lahf
lods
xchg
cmp
mov
iret
and
inc
and
repnz
sar
imul
and
inc
or
arpl
ss
xchg
call
mov
cld
pop
xchg
pop
je
shlb
call
es
mov
sbb
pusha
enter
dec
daa
xchg
inc
popa
or
sbb
enter
imul
dec
mov
insl
ljmp
inc
fwait
insl
fdivs
cmpsb
cmp
dec
push
push
adc
inc
lahf
sbb
fwait
sbb
cmc
xchg
hlt
sbb
push
pop
scas
lsl
push
push
push
leave
cli
dec
pop
out
xchg
push
out
mov
and
aas
push
sbb
cld
jge
jne
sbb
out
ret
add
mov
dec
mov
jnp
lret
lock
jbe
inc
test
roll
outsl
jecxz
inc
xrelease
xorl
ljmp
mov
outsl
push
and
mov
pop
clc
xor
cmp
push
sahf
inc
shlb
xchg
push
pop
sbb
rorb
orl
mov
ds
test
mov
shr
jns
xchg
lret
cmp
in
cmp
or
gs
push
mov
push
enter
sbb
dec
jge
fwait
push
mov
repz
sbb
inc
push
in
cld
mov
mov
mov
inc
iret
icebp
shlb
or
sub
add
adc
outsb
int3
int
jle
call
pop
xor
movsb
loopne
jbe
mov
dec
insl
js
ret
stos
popa
jb
mov
fldt
mov
inc
xchg
inc
sub
loope
in
jbe
mov
inc
push
mov
jnp
fcoms
mulb
sbb
test
bound
pop
mov
int
mov
cmp
cli
jbe
mov
jp
xor
xchg
or
inc
xchg
roll
jp
mov
lcall
test
push
andb
push
cmp
loop
mov
mov
jnp
aas
or
gs
and
adc
aad
imul
cmp
stos
shlb
enter
mov
rol
outsl
movsl
pushf
cmp
out
cmpsl
movsl
out
sub
out
cltd
xchg
adc
ljmp
xor
mov
sbb
jns,pt
jns
in
mov
cld
fisubrs
popf
mov
cmp
sahf
fcomps
inc
ljmp
ss
ljmp
fsub
mov
std
pusha
add
dec
call
je
or
imul
dec
jmp
mov
cmp
hlt
push
cmc
or
lcall
dec
push
mov
adc
insl
scas
mov
std
fs
insb
mov
mov
mov
insb
pushf
push
add
dec
dec
rep
int
push
es
aas
rorb
jge
nop/reserved
dec
or
inc
push
cltd
jle
jb
lods
or
xchg
adc
out
xchg
jecxz
inc
or
xlat
lret
jecxz
xchg
mov
xlat
or
adc
add
pop
mov
pop
fnsave
mov
ljmp
fmulp
fbld
lcall
push
cmp
inc
stos
inc
outsl
jo
mov
out
push
pop
push
push
jb
mov
adc
cmp
dec
jecxz
orb
cltd
jnp
das
mov
sub
mov
mov
sub
adc
push
push
adc
je
adc
fiadds
and
xor
push
mov
sub
rcrb
pop
fisubrl
cltd
xor
fisubs
adc
roll
cmp
dec
jp
scas
cwtl
ret
dec
sbb
test
adc
sbb
clc
out
inc
xchg
push
sub
in
mov
mov
sbb
pushf
mov
sbb
lock
push
sbb
call
add
movsb
shl
xchg
xor
mov
xor
das
out
xor
jns
or
sbb
cmp
xor
scas
pop
sub
cmp
sbb
mov
fcomps
cmp
shll
jnp
call
aas
mov
mov
jnp
pushf
xchg
dec
dec
or
jl
out
sbb
xlat
lods
pop
movsl
bound
xchg
sar
rorl
jle
addr16
popa
jle
insl
ljmp
push
mov
cwtl
sub
mov
rol
out
add
cld
rorl
push
lds
shlb
and
push
push
mov
mov
add
je
mov
add
es
xor
sbb
push
cli
stos
aaa
jp
into
push
and
das
aad
cmp
in
push
jl
mov
mov
movsl
xlat
loope
xchg
or
pop
cld
popa
mov
pop
inc
dec
js
jl
cli
mov
rcrb
lahf
inc
mov
push
push
dec
sarb
ds
loop
mov
sub
repnz
cltd
pop
add
ds
adc
cld
xor
mov
mov
aaa
addr16
mov
pop
mov
mov
inc
mov
icebp
or
fsubrs
mov
scas
fiadds
jns
pop
mov
or
push
std
push
dec
jmp
fldl
pop
xor
mov
iret
sbb
and
cmpsl
call
lcall
out
mov
xlat
lahf
addb
sbb
xchg
loopne
xor
ss
andb
push
lret
clc
repz
jp
imul
dec
xchg
adc
in
dec
inc
mov
or
dec
xor
jmp
cmp
ljmp
add
cmp
lcall
mov
mov
pop
mov
sub
inc
in
jg
test
jo
sbb
adc
test
scas
cmp
into
outsb
fadd
loop
dec
inc
testl
xchg
int3
fcomi
enter
ret
jg
fcomps
dec
popa
inc
sub
in
mov
push
das
pusha
push
cmp
fstl
out
and
inc
and
ljmp
fisttpl
and
mov
ret
add
or
aad
popf
sbb
cmpsb
mov
mov
dec
push
ljmp
sbb
cli
inc
push
cmp
enter
cmpsb
inc
add
fsqrt
inc
adc
sti
in
test
notl
mov
pusha
inc
sbb
data16
popa
cmp
add
test
or
inc
pop
cmp
ret
jle
test
movsb
push
push
adcl
xchg
hlt
dec
loop
add
fs
mov
sbb
lods
push
fimull
fdivrl
sbb
idivl
sbb
push
fbstp
add
or
inc
jl
mov
loope
int
xor
xchg
add
cmpsb
sbb
leave
daa
arpl
dec
sbb
out
and
xchg
stos
add
aaa
hlt
sar
cmpsb
xor
sbb
push
xor
adc
add
fcoml
inc
std
mov
leave
scas
call
outsl
cli
mov
nop
pop
pop
lods
outsb
and
push
mov
ds
repnz
pop
fisubs
mov
xchg
cmpb
inc
jl
pop
popf
icebp
mov
lcall
das
mov
call
lods
sbb
jg
bound
adc
xchg
icebp
and
xor
ret
das
push
scas
or
fcomps
adc
dec
cmc
scas
mov
loope
aam
lcall
in
js
in
dec
mov
icebp
out
cltd
jmp
fldenv
int
dec
popa
xor
xor
test
jno
cmc
cmc
sahf
push
pop
addr16
fildl
jmp
sbbb
and
movsb
push
mov
mov
ret
outsb
rcl
test
cwtl
lret
and
stos
push
mov
dec
lea
sbb
out
loope
lds
sti
adcb
jp
pop
jbe
lods
rorb
in
ror
mov
mov
sti
push
std
mov
mov
addb
test
jno
int
fldl
adc
dec
outsl
insl
pop
in
push
dec
mov
pop
flds
jle
jle
pop
sti
jnp
jl
jae
adc
ret
fsubl
nop
xchg
mov
dec
mov
sbb
testb
test
mov
fistpl
sub
xor
cmp
adcb
test
and
mov
xchg
bound
add
adc
cmp
cmp
mov
es
mov
xor
add
xor
stos
sbb
fcmove
cld
push
out
sub
xlat
loope
push
mov
adc
mov
adc
inc
rcll
mov
shl
scas
stos
movsl
fsts
jae
jbe
sbb
leave
cltd
jle
test
adc
mov
jne
outsb
xor
add
movsb
sbb
pop
inc
js
lcall
inc
add
xlat
inc
mov
adc
inc
inc
dec
test
xchg
adc
aad
jg
add
popf
sbb
fiadds
imul
sbb
movsb
mov
push
jo
push
loope
or
test
and
jnp
mov
mov
sbb
jp
push
inc
adc
mov
call
shrb
fsub
jns
pop
sbb
push
jo
lea
jl
mov
int3
into
outsl
push
xchg
scas
sub
loope
xorb
mov
lds
out
inc
bound
cmp
fists
sub
push
cld
push
mov
fisubrs
mov
cwtl
jg
les
cmpsl
mov
fildll
shrl
mov
mov
push
shrl
mov
stos
out
incl
aad
rorb
lret
and
pushf
dec
mov
jae
adc
insb
mov
out
fwait
dec
insl
mov
pop
push
mov
cmp
xor
sbb
cld
inc
rcr
cmpl
cmpsb
xor
aad
ljmp
or
inc
sbb
mov
jmp
sbb
insb
lcall
cli
pusha
lahf
and
out
jg
sbb
sbb
cmp
lods
jl
into
fists
fsubr
out
mov
ss
loopne
jmp
jmp
shll
data16
mov
mov
mov
repz
xlat
and
xor
mov
mov
dec
clc
add
add
fildl
xor
inc
xor
fcoms
add
clc
jb
mov
jmp
mov
pop
and
into
jecxz
add
xchg
imul
add
xor
xchg
xchg
jb
nop
xorb
ds
jae
mov
rolb
jae
imul
xchg
ffree
fs
sub
imul
mov
mov
in
inc
mov
nop
leave
xor
das
jb
out
movsb
sub
pop
cmp
add
add
outsl
gs
push
add
mov
xchg
sub
mov
mov
pop
lea
aas
enter
cmp
pop
jnp
or
inc
ret
add
out
ljmp
stos
push
adc
and
jle
test
out
pop
cmp
sbb
sti
ljmp
test
gs
dec
mov
pop
jns
mov
dec
mov
mov
inc
stos
pop
mov
call
add
and
mov
int
dec
mull
cmp
add
xor
fdiv
std
push
cmp
movsl
loope
pop
rol
adcb
xchg
push
repz
in
xchg
stos
decl
inc
lods
lret
sarb
in
or
test
add
mov
ret
data16
jne
shrb
xchg
pop
shrb
cmp
leave
dec
push
fisubs
xor
mov
mov
or
sub
test
xor
sbb
dec
and
jmp
cmpb
sbb
push
lods
loop
pop
mov
mov
in
cwtl
pop
push
push
xchg
in
pop
or
push
into
sti
std
adc
ss
out
or
insb
arpl
test
sbb
cmp
arpl
ret
xor
ss
pop
cmp
es
and
out
sbb
inc
nop
adc
push
adc
rolb
cwtl
ljmp
pop
outsb
scas
mov
mov
xchg
test
jns
std
lcall
fnstenv
push
ret
lds
push
in
in
cmpl
cmc
lods
mov
push
xlat
ret
call
lret
mov
and
int
mov
ljmp
add
and
je
lea
in
xlat
jnp
js
ret
mov
sub
insb
sub
js
imul
ljmp
pop
stc
xor
or
or
or
rcll
imul
and
mov
insb
cmp
xchg
push
shrb
xor
or
mov
pusha
mov
add
cltd
inc
push
mov
sub
push
and
outsb
and
movsb
pushf
cmp
fwait
test
stos
lds
addl
mov
lret
dec
popa
jmp
stc
adc
or
iret
out
mov
mov
arpl
mov
push
in
push
sub
adc
in
mov
push
xchg
xchg
out
mov
das
dec
xor
lahf
shr
sbbb
adc
push
xor
sub
mov
inc
dec
xchg
adc
outsb
mov
lods
or
fs
roll
jp
adc
clc
cmp
inc
test
into
insb
test
jmp
int
lret
pop
or
add
gs
std
push
nop
add
mov
xchg
ja
in
aaa
ds
jge
mov
mov
xchg
cmp
jb
xor
outsl
push
jle
or
cli
mov
cs
xor
or
push
lock
cmp
leave
sti
add
mov
out
cmc
hlt
pop
sub
pop
or
mov
xor
ja
sub
mov
inc
xchg
and
adc
add
aad
push
and
jns
adcb
mov
jae
and
repnz
jp
or
add
movsb
lea
out
jbe
shr
ss
sub
out
pop
pop
dec
aaa
or
mov
pusha
adc
mov
mov
imul
das
repnz
jnp
cmpsl
and
stos
cmp
pop
dec
and
or
mov
sub
js
push
push
repnz
divl
inc
push
adcb
rcrl
push
adcb
cmpsl
sbb
std
lea
xchg
fcompl
cmc
dec
sub
mov
in
add
sub
or
inc
ret
mov
jb
dec
pop
out
jo
ljmp
out
addr16
dec
jns
mov
fs
call
repnz
inc
pop
icebp
gs
adc
sub
inc
pop
pusha
xor
mov
pop
jns
pop
or
ret
jne
dec
lods
rcrl
out
scas
fldt
inc
pusha
dec
loop
sti
sub
in
mov
add
fcoms
inc
pop
jns
add
loope
es
daa
or
inc
daa
cmp
fmull
les
sbbl
pop
mov
xor
xor
test
les
pop
imul
adc
add
inc
aaa
pop
into
call
inc
decb
repnz
stos
mov
dec
fwait
add
push
or
sarb
jae
out
mov
test
dec
in
xlat
mov
sub
xchg
mov
jns
shrb
xchg
les
mov
and
ds
call
adc
dec
bound
inc
lret
xorb
loopne
mov
xor
ljmp
cmpsl
inc
ljmp
xchg
mov
add
cld
push
mov
out
mov
nop
or
aam
or
addr16
sub
mov
push
mov
inc
in
sbb
add
sub
jne
das
or
les
xor
pop
cmpsl
lahf
cmc
dec
mov
movsl
sbb
cmp
push
inc
cmp
cmp
push
nop
rclb
call
add
outsl
jmp
pop
cli
cmp
inc
cmp
aaa
ljmp
clc
xchg
sahf
adc
or
testl
inc
inc
outsb
shrl
sbb
decb
mov
test
mov
rol
jb
jle
in
int3
cmp
pop
mov
fs
xchg
hlt
shld
push
scas
leave
mov
jne
test
rorb
data16
pushf
add
cltd
out
leave
jg
lret
testl
mov
scas
scas
jecxz
call
adc
lret
in
and
mov
repnz
sbbb
push
cli
xorb
adc
cmp
jnp,pn
outsb
adc
daa
bound
dec
sub
dec
push
stos
mov
push
movsl
jmp
xchg
push
jnp
adcl
fcmovu
incl
push
repz
pop
subl
loope
insl
imul
mov
nop
out
jmp
cmovne
and
ret
ret
xchg
fsubrp
mov
fnstcw
imul
sub
lea
push
sbb
jmp
cs
jnp
add
adc
sub
sub
cmpl
out
cld
loope
mov
fimull
fcmovnb
jno
sahf
popf
loopne
xor
xor
in
xlat
movsb
add
cld
into
cltd
enter
outsl
lcall
dec
cld
cmpsb
sub
int
jl
push
les
push
repnz
test
jl
nop
pusha
sub
sahf
dec
add
popa
jo
out
stos
push
mov
pop
repnz
insl
test
shll
jmp
je
add
jecxz
loop
movsl
std
clc
xor
movsb
int
fistpll
cltd
pop
cmpsl
mov
dec
cmc
imul
cmp
int3
orl
out
push
adc
adcb
pop
ljmp
pop
fwait
or
cmp
aam
out
hlt
aas
arpl
adc
pushf
add
push
rorl
test
mov
hlt
js
inc
cmp
aaa
mov
adc
xor
test
mov
add
fimull
sub
cmp
scas
xchg
sarl
in
in
dec
dec
popf
dec
mov
in
mov
add
adc
gs
ljmp
sub
add
xchg
data16
or
iret
fstenv
pop
mov
sbbl
testb
mov
stos
jmp
sub
cwtl
ds
push
push
scas
aad
and
loop
and
xor
addr16
outsl
out
out
lds
mov
cmp
jg
or
lods
adc
pop
sbb
push
clc
lea
adc
add
or
fsubl
subl
jmp
dec
jp
xchg
adc
lcall
adc
rol
jecxz
dec
xchg
cmp
loope
jmp
shll
jle
std
outsb
or
jnp
out
jns
mov
je
scas
adc
nop
das
in
mov
andl
push
adc
mov
dec
in
jecxz
cmpsb
jle
mov
les
mov
gs
xchg
ja
dec
push
xchg
fwait
lret
pusha
das
hlt
sbb
add
mov
xchg
push
and
arpl
pop
lods
mov
sahf
jae
and
inc
jnp
and
mov
stos
ljmp
pop
imul
cli
pushf
repnz
cs
es
mov
in
xor
jl
mov
outsb
lahf
cmc
into
mov
fdivrl
sub
sub
popf
adc
cmp
cltd
movsl
push
lret
and
xchg
sti
push
push
stos
mov
das
pop
xor
mov
pop
and
aad
cmc
loopne
jns
push
lret
or
mov
add
xchg
es
iret
mov
fsubs
push
hlt
and
sahf
sti
dec
cmp
out
cmc
xor
clc
xchg
jne
vpmulhw
mov
push
fidivs
or
mov
lods
push
jno
push
sbb
je
mov
fiadds
mov
sub
sbb
sub
and
sti
push
bound
mov
aam
ljmp
or
outsb
bound
dec
mov
xchg
push
xchg
sub
das
daa
dec
ficoms
shll
cs
idivl
lahf
aad
mov
mov
or
fldl
repnz
or
pop
imul
dec
push
repz
insb
idivb
pop
test
fwait
iret
pop
lret
sbb
sbb
fs
in
mov
cmove
sbb
mov
xor
add
xor
jno
xor
aaa
fcmovbe
mov
cwtl
rorl
test
xorb
jno
loopne
or
les
shlb
pop
iret
xchg
push
cwtl
mov
push
and
and
jno
mov
xor
sub
pop
hlt
inc
xor
fs
imul
scas
std
xchg
cmp
lcall
xchg
xchg
fidivrl
leave
mov
mov
sbb
cmpsl
mov
and
push
pop
xchg
inc
fldenv
in
jno
push
jnp
dec
mov
mov
popa
call
rclb
lds
pop
sbb
fsubrs
inc
repz
xchg
xchg
js
fisttpl
rcrb
stos
stos
test
inc
mov
xor
loop
pop
cmp
cli
pop
sub
and
sub
nop
or
int
push
arpl
push
jno
adc
repnz
sahf
addr16
push
xchg
add
outsl
test
cmpsb
inc
insl
add
arpl
push
dec
jl
mov
into
cmp
das
ss
mov
cmp
lods
out
adc
or
scas
sbb
lods
mov
push
sbb
mov
and
cmp
mov
inc
rcl
or
pop
cmp
lahf
popa
aam
mov
cld
test
int
sbb
mov
xchg
mov
lret
shlb
mov
popf
push
arpl
dec
xchg
aas
mov
fstpt
call
add
fs
cmp
xor
dec
rcll
sub
adc
dec
mov
mov
pop
pop
push
hlt
jp
out
aas
dec
fidivrs
cld
test
xchg
insb
pop
dec
shlb
popa
clc
mov
inc
mov
sbb
lahf
inc
adc
enter
cmpsl
iret
or
inc
adc
push
or
inc
ret
lods
fsub
scas
push
jmp
pop
cmp
add
and
dec
je
test
push
and
adc
insl
mov
aad
sbb
scas
push
clc
adc
scas
subb
cmp
lahf
fldt
adc
pop
push
mov
cmp
mov
hlt
aaa
sbb
lods
ror
mov
test
cmc
enter
xchg
push
push
xor
xchg
cmp
xor
loope
jae
jmp
add
mov
les
aam
push
or
and
fsin
rclb
fiaddl
xor
loop
dec
mov
add
xchg
mov
repnz
fs
daa
adc
and
push
sbb
push
push
sbb
add
pop
outsb
or
icebp
rcl
stos
imul
xchg
add
hlt
pop
lds
sub
add
inc
cmp
xchg
push
lea
enter
stos
shlb
adc
mov
push
cmc
enter
sbb
fstl
repz
insl
pop
cwtl
inc
pop
mov
fisubrs
push
xor
cmpsb
loopne
mov
cltd
dec
push
and
je
ja
xchg
mov
or
addr16
out
and
jae
pushf
sbb
fsts
sub
mov
push
sbb
mov
jmp
lret
lahf
push
xor
int3
stc
or
cmp
xchg
xor
mull
mov
ret
or
aam
add
xchg
mov
out
add
inc
les
mov
sbb
jl
popa
int3
jl
xor
shrb
out
icebp
sub
fdiv
ret
xchg
jp
mov
push
rcll
push
mov
mov
mov
daa
fsubrs
jns
ret
xchg
cmpsb
cmc
ret
xchg
or
add
daa
pop
repnz
jae
sarl
rcrl
xchg
rclb
xchg
push
sbb
jns
js
xchg
push
out
les
push
int
insb
add
cmp
ficoml
or
stos
dec
dec
inc
iret
xor
xor
lahf
sahf
aas
popf
xor
xor
insb
cmp
mov
or
test
mov
inc
dec
adc
in
aas
ret
push
das
dec
movsl
fbld
adc
cmp
sub
pop
adc
ja
xlat
jecxz
cmp
fisttps
int3
jnp
repz
cmpsb
es
lret
in
and
cltd
iret
repnz
addr16
andb
or
test
push
iret
cmp
loope
mov
enter
fucomi
imul
out
arpl
sbb
or
mov
adcl
sbb
mov
sub
aad
daa
das
cld
hlt
sti
mov
lds
aam
ja
cmp
push
lea
sbbb
push
add
dec
enter
sub
mov
out
add
loope
iret
repz
imul
jnp
hlt
xchg
ret
outsb
mov
in
mov
sti
inc
and
jae
aas
std
sub
negl
outsb
lea
je
shl
iret
mov
inc
pop
fwait
and
das
fstpl
jge
mov
in
stc
cmpsb
xor
mov
jns
adc
lahf
jmp
ret
shrl
testl
mov
xchg
mov
push
cmp
fistpll
cli
push
mov
cmpl
dec
loop
je
ljmp
mov
sub
and
mov
or
daa
lock
enter
inc
cmp
mov
sbb
cmpb
xchg
add
cld
xor
inc
cmc
cmc
stc
sbb
or
subb
mov
xchg
push
mov
fsubl
adc
push
sahf
pusha
into
pop
adc
in
jge
aad
push
sbb
push
out
push
cmp
xorl
pop
cmp
addr16
test
cmp
sahf
fisubs
mov
jmp
cmp
push
arpl
lods
ja
cli
pop
mov
xor
mov
jmp
adcb
ss
pushf
pop
dec
or
sahf
stos
jmp
mov
mov
filds
xor
jb
add
into
jp
push
testl
mov
mov
je
test
dec
into
pop
mov
sbb
pop
insl
pop
outsb
call
jl
lahf
aaa
mov
mov
ja
mov
jecxz
stc
in
and
xchg
mov
cmp
sbb
bound
cmp
lret
push
lods
jge
add
mov
dec
movsb
sti
sahf
add
jmp
mov
fsubl
and
es
or
jg
mov
add
adc
dec
jbe
push
cltd
fndisi(8087
outsl
iret
jne
into
dec
popa
xchg
push
shr
mov
outsl
subps
jl
sahf
aas
or
neg
int3
and
es
cmpsl
lods
cltd
xchg
mov
mov
arpl
in
mov
sahf
addb
push
push
dec
fs
add
push
push
jmp
in
mov
and
scas
jae
xchg
push
xor
xchg
out
aaa
dec
cmpsl
into
xchg
dec
lods
repnz
pop
sbb
in
dec
or
test
fadd
and
and
fwait
movsb
loope
cli
or
mov
mov
push
xor
dec
neg
scas
cli
mov
push
push
xor
jmp
sbb
mov
iret
into
cmp
dec
push
clc
shl
lock
hlt
arpl
push
rcll
std
jg
fsubl
out
shlb
mov
cmp
mov
cs
out
mov
pop
test
and
lods
lahf
push
push
ss
pop
fimull
xor
add
fisubrl
sub
cltd
jne
inc
adc
loopne
mov
sbb
sbb
dec
mov
jo
stos
in
orb
jp
fldcw
dec
cwtl
push
sbb
sbb
ja
cmp
push
pop
popf
das
popa
and
sub
mov
cmp
imulb
clc
push
mov
out
jp
ja
mov
sti
and
cmp
mov
stc
dec
push
je
mov
cltd
mov
push
bound
xor
sbb
testb
mov
adc
lds
push
adc
stos
iret
mov
jnp
xor
movsb
pop
enter
mov
scas
jb
mov
insl
mov
ja
cld
sbb
addr16
ljmp
xlat
pop
hlt
xor
cmp
lock
pop
xor
stos
fsubrs
cmpsb
out
xor
pop
sahf
mov
sub
out
mov
sarl
lock
mov
inc
xlat
xchg
jne
movsl
push
lds
out
mov
mov
lods
pop
mov
pop
shr
cmp
mov
pop
js
stos
jae
fldenv
pop
sbb
ficomps
insb
xor
cwtl
and
mov
mov
or
dec
mov
cmp
bound
repz
inc
popf
out
insb
lods
jp
nop
outsl
adc
inc
fnstsw
ret
fildll
push
icebp
xor
icebp
insb
jnp
push
orl
jbe
aaa
pop
mov
sub
sbb
xchg
bound
mov
pop
mov
lea
gs
inc
xchg
out
xchg
or
rcrb
mov
adcb
xchg
divl
leave
pop
nop
dec
cmc
and
push
mov
movsb
pmulhw
test
mov
arpl
aaa
ss
data16
dec
in
fisubs
pop
add
push
outsl
mov
lock
aaa
das
jp
insb
or
stos
into
mov
adc
int3
pop
mov
xchg
or
cmp
movsb
hlt
icebp
imul
imul
je
test
scas
out
sbb
cmp
cmp
dec
adc
daa
rcll
mov
test
lock
add
fldcw
sbb
add
nop
ja,pt
fildl
test
in
insb
jmp
dec
test
jge
dec
out
sahf
or
sub
xchg
les
adc
adc
cmp
adc
loop
js
push
sti
into
pop
fwait
es
pop
dec
jnp
and
mull
adc
jmp
daa
ss
out
mov
int3
mov
testl
je
aad
test
cmp
out
orl
adc
fnsave
adc
call
adc
adcb
add
dec
mov
cmp
int
test
push
mov
jl
adc
xor
jmp
jbe
adc
insl
adc
add
cmc
sahf
pop
mov
pop
and
loopne
xchg
or
fs
sbb
loopne
xchg
mov
mov
jns
mov
sub
es
shll
int
xchg
cmpsb
xchg
jmp
cmp
push
fildll
inc
popf
xchg
jmp
jmp
push
pop
rorl
add
aad
jmp
lds
xchg
and
sub
pop
fs
sbb
imul
test
out
jge
repz
inc
xchg
mov
push
xchg
and
dec
aam
sbb
cmpsb
out
inc
pop
jmp
stos
popa
out
xchg
sti
mov
cmpsl
popa
fsubrs
xor
popa
pop
lea
hlt
shll
cmp
arpl
and
cmp
pushf
pop
dec
outsb
nop
les
adc
push
inc
je
es
sub
pop
inc
push
loop
sbb
and
xchg
add
dec
lret
arpl
jle
mov
mov
mov
repnz
jo
xchg
inc
je
mov
mov
push
push
out
add
and
push
mov
dec
jge
mov
push
adcl
push
or
inc
sarb
xchg
pop
mov
jle
insb
or
mov
push
jns
jg
or
scas
jbe
popf
fidivrl
clc
push
xchg
cmp
inc
jns
into
fists
aam
out
cmc
fld
mov
push
inc
dec
pop
icebp
ja
pop
fmuls
push
int
shll
sarl
mov
loopne
test
stos
xchg
adc
ret
ror
and
pop
push
outsb
aad
cs
jmp
inc
adc
lods
lea
cmc
fldcw
sarl
xor
ret
cmpb
inc
xor
scas
jbe
sub
inc
clc
dec
sbb
dec
push
fdivp
xchg
mov
ljmp
push
xchg
pop
les
jbe
addr16
mov
mov
je
stos
xlat
push
lahf
cs
xchg
or
jo
ficompl
pop
mov
stos
dec
mov
or
leave
cmpsb
cs
jge
xchg
pop
push
mov
icebp
loope
gs
mov
mov
xchg
pop
int3
push
fidivs
inc
cmp
movsb
pop
mov
bound
adc
xchg
push
lods
mov
aam
insl
cmc
xchg
pop
xchg
insl
stos
dec
mov
lcall
mov
cmp
push
and
scas
xor
sbb
xor
add
addl
fs
test
pop
push
add
in
in
inc
lahf
imul
movd
xor
lds
out
pop
das
cmpsb
das
aaa
jo
dec
jp
repz
addr16
pop
pop
stos
add
dec
push
jecxz
add
xor
outsb
and
sub
cmc
lock
gs
push
jnp
cld
lret
je
xor
pushf
loop
sbb
mov
jae
cmc
aaa
lea
cli
int3
lcall
mov
sti
loop
inc
mov
adc
lret
pop
ja
fimuls
jne
shll
push
and
cld
and
out
sbb
sbb
aad
pop
lods
insl
in
add
dec
jae
mov
mov
push
adc
movsb
ret
bound
imul
xchg
cld
pop
and
cmp
stc
les
mov
stos
add
pop
mov
addr16
sbb
pushf
jns
test
mov
ret
xchg
scas
dec
and
fcompl
or
icebp
jb
add
mov
sub
jle
fsub
pop
stc
insl
enter
pusha
out
in
jmp
or
stc
pop
sub
popf
ret
jp
jo
shlb
ficomps
mov
repz
cmc
fildl
pop
nop
sub
hlt
mov
mov
int
lcall
adc
and
mov
push
movsb
push
scas
jl,pn
xchg
push
dec
mov
fcompl
jle
lret
loope
pushl
pop
mov
pop
mov
jecxz
jbe
dec
je
sub
out
cmp
stos
xchg
fidivl
adc
out
jl
push
cmp
xor
inc
nop
dec
ds
ficompl
loopne
xlat
add
imul
lahf
in
lea
xor
push
xor
sbb
or
jns
sti
jl
popa
xor
push
inc
xor
xchg
fsubl
ja
sbb
in
adc
sub
mov
movsl
inc
fwait
xor
scas
and
xchg
adc
orl
incb
loope
in
test
addr16
mov
cmp
jge
sbb
jbe
fidivs
jg
js
jp
xor
sbb
dec
imul
mov
adc
xchg
aad
fistl
stc
int
orl
fisttpll
sub
lods
dec
outsb
int3
clc
das
js
aaa
mov
dec
mov
ds
jmp
aam
push
xor
dec
mov
inc
xor
mov
mov
xchg
mov
jbe
outsl
inc
lods
popa
arpl
icebp
pop
rcr
std
xor
ljmp
mov
sub
gs
cmc
push
popa
xchg
mov
das
fidivl
dec
cmc
insl
ficoml
fistps
mov
inc
sbb
int3
sbb
popf
or
xor
cli
mov
mov
jle
fisttps
lds
sahf
add
std
mov
pop
daa
pop
sahf
idivl
push
outsl
outsb
and
and
xchg
cmpsb
xor
in
push
push
das
icebp
popl
in
ss
xchg
test
test
ds
push
adc
push
test
and
push
pop
cmp
out
out
xchg
jmp
pop
mov
xor
and
adc
xchg
push
fisttpll
push
add
nop
popl
fidivs
sbb
inc
mov
insb
lret
scas
dec
and
pop
not
mov
and
mov
sbb
mov
loop
imul
mov
pop
push
inc
ljmp
pop
push
aam
sbb
add
in
les
sub
cmp
pop
adcl
mov
and
mov
addr16
xor
lock
and
es
cmp
cwtl
pop
idivb
out
push
mov
mov
dec
or
lods
test
inc
push
inc
xor
fcompl
pop
repz
cld
int
xchg
clc
in
mov
aam
cwtl
xchg
bound
stos
js
insb
xlat
cs
sti
mov
shlb
insb
lret
push
xchg
rcrl
ret
add
testl
mov
enter
push
or
sti
in
jb
js
sbb
jmp
ljmp
rcl
xor
sub
in
jne
int
inc
mov
push
loopne
out
ret
cs
jp
aaa
mov
push
sarb
dec
pushf
adc
aad
mov
fisubrl
jle
out
push
cwtl
xchg
sbb
mov
xchg
fstpt
pushf
cmc
push
jmp
imul
adc
test
mov
xchg
jne
pop
add
mov
jns
in
repnz
mov
mov
idivb
pop
loope
cmp
lcall
movsl
dec
int3
ja
cwtl
ret
call
mov
ror
dec
out
mov
cs
jmp
sarb
sub
dec
mov
push
dec
arpl
cs
jnp
dec
sub
cmp
sbb
lods
or
jbe
pop
icebp
rcrl
jecxz
xchg
dec
add
inc
enter
popf
xchg
addr16
add
mov
cmp
fwait
stc
lock
adc
sbb
fistl
pop
xor
xor
lods
xchg
shrb
push
inc
in
jg
inc
cmpsl
fs
ficoml
xchg
mov
rcll
cmp
mov
xor
xor
pslld
xchg
loope
add
inc
adc
or
push
mov
cmpsb
inc
addb
jo
push
jg
insl
add
dec
out
push
dec
jo
test
insl
fisttpll
mov
fsubrs
mov
mov
mov
mov
push
jge
sbb
and
adc
dec
push
cmp
in
and
cmp
sbb
setno
and
fnstcw
ss
add
stos
inc
xchg
scas
add
or
enter
mull
test
test
sbb
mov
xor
sarb
jno
pushf
frstor
mov
mov
lods
mov
ret
or
cmp
jl
jne
ja
aad
adc
es
cmp
inc
insb
clc
fnstsw
shl
add
outsb
sub
or
mov
mov
mov
nop
dec
div
aad
mov
gs
push
add
icebp
mov
test
in
outsl
es
mov
xchg
mov
leave
js
xor
push
cmp
out
mov
add
wrmsr
xchg
ja
addl
fdivs
jae
hlt
fistpl
addr16
movsl
inc
push
xlat
arpl
movsl
cmpsl
cwtl
pusha
jg
xor
iret
stos
xchg
ss
lret
mov
dec
in
pop
pop
jg
sbbb
sahf
ficomps
ljmp
sahf
insl
lds
mov
and
xor
lcall
cmp
test
icebp
dec
int3
adc
sbb
lcall
push
cmpsl
clc
test
cmc
and
and
pushf
or
rorl
sbb
rolb
divb
scas
and
lds
xor
lock
mov
sbb
repz
clc
stc
sbb
clc
andl
pop
push
jnp
clc
xchg
cmp
xchg
xchg
arpl
lahf
and
gs
add
xor
add
mov
cmpsb
outsb
incb
das
daa
fwait
cmp
rol
push
dec
add
imul
stc
pusha
les
andl
inc
dec
mov
dec
mov
sbb
aaa
sbb
rol
fsubs
add
xchg
nop
mov
jmp
dec
enter
inc
data16
xchg
mov
in
mov
popf
dec
pop
xor
inc
or
xchg
dec
in
out
fidivl
scas
cmp
clc
ja
xlat
aam
adc
in
lea
push
std
dec
repnz
enter
or
add
sub
or
push
stc
mov
sbb
xchg
inc
push
leave
icebp
outsb
mov
in
in
xchg
adc
imul
adc
add
loopne
data16
movsl
mov
fld
sbb
add
stos
pop
add
sub
adc
sbb
icebp
lret
es
ss
fs
test
jp
fsts
jge
out
mov
into
into
lock
arpl
shl
pop
xchg
nop
mov
inc
mov
fidivs
mov
mov
mov
fwait
pop
in
jne
mov
out
add
sub
push
repnz
cmp
xor
xchg
cli
mov
add
fwait
lcall
sbb
xlat
mov
cmp
repz
movsb
pop
dec
imul
mov
jae
enter
out
cmp
adc
push
cltd
das
adc
xor
addl
adc
sahf
xor
ret
cs
and
sbb
sbb
push
jnp
add
pop
adc
pusha
fwait
add
out
mov
or
mov
mov
inc
sub
outsb
inc
cmp
cwtl
test
lock
or
hlt
das
mov
repz
scas
jg
cmc
mov
loop
mov
fdivs
ret
xchg
jl
pop
sahf
lahf
and
push
push
enter
call
fisttpl
nop
test
inc
test
icebp
xchg
stos
int3
sbb
cmc
sbb
stc
daa
push
inc
sti
xchg
mov
mov
idivb
jne
jb
dec
or
xor
iret
or
cmp
cli
mov
subl
dec
movsl
add
push
cmp
lock
xchg
pop
in
lahf
in
int3
xor
mov
cmp
pop
sbb
cmp
xchg
pop
push
xlat
jl
mov
inc
xor
and
aad
mul
out
fwait
hlt
iret
push
mov
xor
or
pop
xor
out
jbe
outsb
shr
add
lcall
mov
jo
aad
ja
iret
scas
or
punpcklwd
fldenv
enter
mov
ficompl
dec
and
in
push
mov
dec
test
pop
test
jmp
cmpsl
mov
dec
xlat
imul
negl
add
enter
nop
sub
mov
cltd
fwait
popa
mov
or
je
cmp
dec
dec
xchg
fldt
sub
imul
sub
movsb
hlt
out
sub
mov
ret
lock
jnp
jmp
movsb
repz
push
adc
mov
fcoml
jne
mov
aam
lahf
push
adc
xchg
add
mov
clc
jbe
xchg
mov
xor
out
adc
fwait
inc
and
add
dec
dec
pop
and
fwait
lods
mov
dec
cld
adc
rorb
mov
orb
sbb
stos
rcl
sub
mov
cmp
test
cmp
mov
stos
pop
repz
inc
xor
frstor
and
ja
pushf
jns
out
out
imul
movsl
nop
shrb
loope
lock
mov
cmpl
test
mov
sub
push
daa
bnd
inc
addb
cmp
imul
jnp
cwtl
mov
pop
test
mov
shlb
aam
xchg
sbb
andb
fs
das
adc
xchg
lcall
test
push
data16
popf
push
popa
scas
xor
jbe
addr16
mov
sbb
aad
dec
aad
insl
in
orl
mov
int
jl
jns
jbe
or
push
jecxz
js
mov
mov
xchg
in
cmp
sbb
mov
test
insb
inc
push
jb
repnz
in
setns
push
pop
stc
inc
xchg
mov
and
shrb
enter
xchg
or
xchg
fmuls
push
mov
mov
push
testb
mov
in
int
add
mov
mov
jp
and
jge
sub
push
inc
xchg
mov
in
pop
sub
push
repz
jo
cmp
flds
dec
insl
push
movsl
iret
imul
in
or
mov
aas
imul
scas
xor
movsb
into
aad
test
push
sub
mov
or
inc
sbb
sbb
jbe
pusha
jl
sbb
xor
xchg
cli
out
outsl
dec
push
mov
les
push
cs
cld
ret
push
pop
xor
mov
jae
cmp
leave
arpl
int3
jbe
mov
ds
ja
dec
nop
shll
sub
sub
mov
push
leave
mov
pop
inc
dec
or
dec
xor
test
dec
adc
ret
ds
mov
insl
and
or
cli
ljmp
insl
movsb
daa
mov
imul
int3
or
xor
das
pop
sbb
push
shlb
mov
jno
sbb
negl
out
mov
push
jge
and
outsb
loopne
jmp
lea
les
cli
dec
lea
into
fiaddl
jno
dec
cmp
sbb
dec
scas
or
adc
fwait
sbb
jg
and
xchg
mov
inc
movsl
dec
inc
jne
pusha
es
and
cmp
sub
mov
lds
cmp
jbe
dec
mov
jmp
cmp
sub
pop
mov
jg
not
mov
icebp
hlt
hlt
lret
push
pop
mov
movsl
das
sbbl
mov
cmp
xchg
xor
test
pop
imul
push
push
xchg
out
movsl
enter
out
outsl
insl
mov
cmp
into
mov
add
jmp
sub
icebp
lods
adc
jmp
or
xchg
shlb
bound
psubw
stos
pop
lcall
incb
cwtl
push
xchg
xchg
adc
les
jge
aaa
outsl
jbe
jno
sbbl
lods
cmpb
jne
pop
inc
in
adc
jmp
jp
pushf
inc
jmp
sti
cmp
outsb
scas
mov
lret
pushf
and
dec
xchg
int3
out
jmp
jmp
mov
fcomp
sbb
mov
xor
test
jb
or
dec
fcmovnb
jl
jle
nop
shll
xor
push
dec
or
rcr
inc
add
negb
in
lahf
insl
popa
imul
adc
popaw
cmp
xchg
out
nop
lods
lock
int3
jns
xor
sidtl
repz
sbb
ja
push
xchg
cmpsb
les
imul
ljmp
inc
gs
cmpl
push
cmc
int
jns
test
mov
shll
jl
outsb
sbb
push
mov
pop
adc
mov
and
cmpsb
sub
mov
pop
push
dec
mov
leave
movsl
jbe
push
bnd
mov
stos
jbe
out
add
test
sbb
xchg
mov
add
sti
add
call
fwait
push
into
out
adc
mov
scas
js
int3
sahf
arpl
gs
mov
add
jg
or
dec
adc
ret
mov
outsl
and
iret
push
pop
jge
fstpl
cmp
and
sbb
mov
mov
loopne
dec
mov
aam
sub
aam
sbb
icebp
jb
incl
pop
xchg
xchg
in
jmp
lea
in
push
mov
xor
jnp
data16
ss
aad
or
mov
jp
sub
popf
jne
and
shrb
add
add
inc
add
lcall
out
mov
fnsave
cli
icebp
das
xchg
mov
into
and
pop
xchg
push
pop
repz
je
popa
ret
xor
jo
jecxz
jb
mov
adc
stc
mov
and
jle
pop
push
jne
jl
shr
jne
xor
xor
addr16
iret
daa
jbe
aas
inc
es
rolb
xchg
mov
movsb
and
pushf
scas
daa
jmp
dec
jns
stc
mov
dec
into
iret
push
push
push
or
lods
dec
xor
pushl
lahf
inc
adc
push
mov
add
push
mov
push
mov
leave
cld
das
rol
xchg
inc
rcrl
mov
dec
je
cmp
sbb
and
test
add
enter
pop
push
test
sarb
mov
adc
lahf
les
dec
mov
and
test
arpl
pop
loope
jae
pushf
ja
aam
xchg
push
scas
xor
jnp
test
fistpll
and
imul
loope
int
sbb
add
aam
xchg
ret
pop
ss
popa
mov
arpl
mov
inc
scas
stos
push
mov
popa
mov
sti
or
movsb
stos
stos
mov
fwait
add
xchg
dec
test
int3
dec
aas
push
out
xchg
es
pop
mov
aad
mov
cli
jg
loopne
gs
cmp
fsubrs
dec
insl
adc
repz
mov
stos
into
es
cs
fistl
scas
int3
jo
jo
inc
test
ja
jge
dec
pop
inc
push
mov
jae
insb
cmpsb
adc
cmp
or
into
add
sbb
jecxz
xor
add
dec
js
sbb
std
sahf
mov
fwait
ljmp
xor
cmp
notl
xor
dec
leave
orb
sub
push
imul
rorl
adc
xlat
xor
repz
fisttpll
test
cmpsl
inc
mov
add
inc
add
xor
jns
and
jmp
loope
inc
insb
mov
push
xor
bound
or
in
das
iret
sbb
dec
xchg
add
loopne
pop
mov
in
xchg
pop
mov
jbe
iret
cmp
xor
icebp
in
jecxz
test
mov
scas
push
xchg
dec
pop
cmc
dec
mov
pop
mov
loop
pop
shlb
adc
sub
dec
xor
mov
mov
jno
mov
hlt
and
aas
dec
loope
test
xor
sub
movsb
ss
mov
mov
xchg
aaa
dec
iret
aad
pop
imul
ret
xor
sbb
mov
js
dec
mov
pop
mov
push
sarl
mov
inc
and
xchg
insb
push
js
jb
stc
sub
xchg
mov
cmp
sbb
fcoml
xor
les
aam
mov
push
filds
aas
scas
add
in
or
ret
pop
sbb
add
sahf
mov
loope
roll
xorl
xchg
mov
les
into
add
lds
das
stos
or
out
fldt
push
iret
jb
xor
sbb
jno
dec
inc
inc
fbld
xorb
stos
inc
test
arpl
cmp
mov
in
movsb
mov
in
push
add
mov
mov
clc
clc
addl
inc
mov
add
add
add
inc
dec
clc
mov
mov
mov
clc
mov
mov
addl
inc
push
clc
jnp
mov
clc
andnps
mov
push
clc
inc
cmovne
add
mov
dec
addl
add
add
addl
xorl
add
add
clc
mov
dec
mov
dec
inc
add
mov
inc
dec
dec
mov
mov
add
add
mov
lldt
addl
mov
inc
mov
mov
dec
inc
mov
add
orl
clc
mov
mov
add
mov
addl
mov
add
add
mov
clc
push
mov
mov
dec
push
push
mov
add
addl
mov
addl
sgdtl
mov
dec
mov
mov
pmulhrw
inc
mov
mov
mov
push
mov
mov
orl
mov
mov
clc
pfrcpit2
mov
add
add
mov
inc
add
push
mov
push
jnp
cmovne
mov
mov
mov
mov
add
mov
add
mov
mov
mov
inc
add
add
dec
clc
addl
add
clc
dec
inc
mov
addl
clc
inc
mov
mov
push
add
mov
mov
mov
addl
dec
add
mov
cmovne
clc
add
xorl
mov
mov
mov
mov
mov
adcl
mov
add
ficoms
mov
pop
and
loopne
faddp
mov
out
cld
and
mov
loope
mov
xor
jecxz
push
inc
xor
jecxz
gs
enter
sbb
adc
pop
lret
lds
pop
jecxz
dec
imul
mov
cmp
pop
out
inc
xchg
push
pop
or
cld
repnz
test
lcall
add
cmp
outsb
inc
clc
js
ret
notb
lcall
xchg
or
push
lock
dec
and
stos
adc
setae
outsl
daa
push
fs
movsb
jnp
xchg
sbb
lods
mov
cmp
loop
mov
inc
fcmovbe
outsl
movsb
pop
sbbl
sbb
adc
fcoml
mov
sbb
dec
in
mov
cmp
mov
xchg
jbe
and
lds
out
enter
repz
mov
int3
loop
sbbl
jns
push
mov
into
and
fwait
shl
push
loop
mov
push
mov
xchg
imul
sbb
mov
adc
push
add
xor
mov
gs
push
xorb
push
or
pop
xchg
xchg
xchg
cmpsb
push
push
cmpb
lcall
sahf
insl
pop
mov
add
pop
rcll
cmpsb
lock
sbb
fcoml
es
jnp
dec
add
mov
mov
dec
jp
insb
sbb
sbb
add
imul
addr16
in
fdivrs
les
gs
fstp
insb
fcompl
int
push
rorl
cmp
push
outsb
dec
xor
aad
xchg
adc
or
das
call
fldenv
xchg
adc
arpl
cli
stos
add
jmp
mov
mov
inc
incb
inc
add
dec
cmp
movsl
ljmp
add
jbe
push
push
mov
lret
movsl
scas
cmpsb
push
mov
ljmp
pushf
push
arpl
popa
pop
scas
push
out
lds
stc
xchg
test
inc
fldt
scas
mov
pop
int
shr
mov
jnp
outsb
ss
push
lea
sbb
lods
lcall
and
mov
inc
xchg
movl
inc
mov
lahf
aam
cld
in
and
dec
inc
insl
repnz
andb
lahf
adcl
outsb
push
mov
push
mov
add
jmp
ds
fldenv
rorl
ret
mov
bound
loop
push
loop
loopne
xor
lods
adc
push
fcmovnb
sub
jo
imul
jg
rorl
call
out
mov
pusha
push
packssdw
jbe
mov
in
cmpsb
mov
lock
stc
dec
fidivs
out
inc
mov
aaa
mov
sahf
insb
inc
adc
dec
xchg
and
test
sbb
pop
ja
test
enter
jge
and
fmul
mov
xor
cli
add
jns
adc
imul
cmp
mov
addl
mov
cmp
mov
xor
add
jecxz
push
sub
adc
add
ja
mov
scas
movsl
push
inc
das
popa
xor
lods
into
insl
mov
aam
or
jae
xor
cmp
stos
xor
call
sbb
sahf
lret
sti
movsl
inc
mov
clc
call
inc
mov
mov
mov
rol
and
xchg
inc
jge
loopne
or
lods
ds
arpl
and
mov
pop
iret
cs
and
mov
arpl
pop
ljmp
pop
mov
and
pop
mov
ret
lahf
mov
into
mov
mov
inc
test
lods
daa
xor
pop
pop
out
sahf
js
and
xor
mov
es
jns
enter
jnp
dec
pop
out
sub
mov
enter
int3
mov
xchg
hlt
aam
pop
jns
dec
into
fdivrl
les
pop
dec
in
loop
enter
cs
sbb
and
or
repnz
ret
xchg
std
cltd
dec
test
es
mov
aas
orl
movl
out
push
mov
mov
jne
pop
vcvtps2pd
into
add
imul
sbb
add
dec
inc
pop
loopne
lcall
ret
mov
inc
push
mov
xor
in
adc
dec
hlt
pop
sbb
add
fstps
out
xor
lret
jae
sbb
push
cmp
loope
stos
ret
repz
sbb
and
adc
incb
inc
icebp
mov
loope
dec
notl
fldt
pop
push
push
mov
sub
mov
call
insl
xor
cmpsb
js
mov
push
jbe
mov
xor
push
cs
imul
in
pop
ds
pop
test
sub
or
or
fs
sub
fisubl
or
movb
imulb
xchg
ljmp
addb
ret
insl
aas
int3
mov
sub
inc
nop
faddl
inc
push
dec
cld
ss
int3
fidivl
mov
inc
push
pop
push
out
xchg
sub
es
jle
add
cmp
ss
or
pusha
jne
test
and
scas
mov
push
or
fs
dec
sub
fcompl
push
mov
xchg
inc
inc
or
fldenv
xlat
daa
add
cmp
mov
push
sub
inc
inc
push
adc
adc
cmp
aas
mov
sbb
mov
sub
fistl
jmp
jl
xchg
mov
push
mov
pop
fdivrl
mov
inc
mov
scas
mov
les
jmp
dec
shrb
scas
testl
out
inc
cmp
jae
fiaddl
ljmp
jg
cs
cmpl
mov
lahf
lods
rol
dec
rcll
cmpsl
js
ljmp
repnz
sti
test
int
xor
lds
xor
xchg
test
mov
cmpsl
mov
mov
adc
hlt
and
sub
add
jg
inc
or
adc
pusha
xor
test
imul
inc
dec
fcompl
out
cld
pushf
lcall
test
mov
sahf
pop
loopnew
out
ljmp
cmpsb
int
add
out
inc
xchg
adc
in
dec
jae
pop
sub
sbb
lods
imul
mov
dec
push
lret
sbb
adc
rorl
xchg
cltd
adc
lret
int
add
sub
ss
imul
push
data16
dec
test
push
stc
sbb
ret
adc
mov
jecxz
adc
xor
ljmp
dec
faddl
je
push
sarl
push
add
mov
fwait
dec
push
mov
popf
sub
outsb
mov
dec
cwtl
fistpl
sub
sub
mov
or
sti
aas
sahf
aam
pop
sub
dec
or
mov
shl
mov
mov
nop
in
iret
pop
lahf
dec
sub
lret
aam
ss
arpl
std
lods
ja
sbb
xor
enter
notl
mov
mov
stc
sbb
sahf
push
rclb
mov
imul
scas
push
jl
pop
xor
loopne
mov
jmp
jns
adc
nop
imulb
add
add
cmpsb
dec
aas
enter
inc
iret
sub
cmp
movsl
xor
lea
into
mov
pop
mov
xlat
push
fucomi
cmp
fwait
pop
sbb
xchg
ret
dec
andl
mov
shrb
aam
into
into
push
das
out
inc
xor
inc
bound
repnz
loopne
mov
or
push
lods
push
out
inc
inc
lea
mov
inc
repz
sarb
movsl
pop
into
push
cld
mov
add
out
hlt
mov
dec
pop
fwait
es
popf
fldt
adc
push
stc
mov
or
test
xor
loope
cmc
stos
into
in
mov
inc
jns
aas
jmp
inc
sahf
sbb
push
xchg
push
inc
sbb
and
cwtl
xor
int3
loopne
mov
mov
jl
push
stos
gs
cli
fucom
jl
xchg
add
add
cld
xor
inc
adc
pop
jnp
jmp
inc
loop
std
gs
mov
inc
pop
cmp
xor
xor
idivl
leave
pop
ret
in
cmp
aam
jnp
mov
mov
inc
cmc
add
scas
aas
pushf
in
mov
sub
cld
adc
aad
mov
dec
inc
mov
or
push
pop
pop
enter
mov
push
in
lock
repz
pusha
jl,pt
add
push
sub
sbb
sbb
lock
sbb
adc
sbb
cmp
sbb
into
jb
jno
lcall
stos
mov
fisttpll
cwtl
hlt
dec
mov
pop
xor
adc
mov
pop
dec
dec
adc
in
mov
pop
sbb
adc
aas
repnz
imul
ss
push
jp
out
adc
adc
loope
adc
and
xorb
push
sahf
jns
inc
andl
mov
gs
out
es
sub
rorb
pop
test
fimuls
rorl
movsl
sti
dec
mov
cmp
push
jne
adc
aad
xlat
and
adc
xor
rorl
popl
pop
xor
pop
ljmp
pushf
addr16
insb
mov
adc
cmp
inc
jo
jp
and
insb
and
adc
sub
sbb
call
adc
rcr
add
push
xchg
jae
jge
scas
int3
adc
inc
mov
mov
bound
mov
movsl
sub
mov
and
insl
dec
inc
xchg
cmp
sbb
int
rcr
push
addr16
jecxz
push
ret
xchg
and
and
mov
loope
pop
xor
mov
bound
rolb
jg
xchg
push
and
cmc
fimull
outsb
dec
je
push
push
loope
lock
out
jl
subb
dec
push
fstpl
mov
xchg
xchg
push
jno
mov
ret
sbb
scas
lahf
fs
cld
xor
sahf
xor
sbb
pop
cmp
imul
mov
push
idivl
aam
pop
dec
sarb
mov
jo
dec
lret
jno
or
push
add
cld
fmul
cli
hlt
into
iret
xchg
pusha
mov
loop
mov
jb
add
push
pop
add
rolb
fdiv
or
shlb
or
pop
mov
pop
arpl
aaa
rorb
addr16
scas
jno
sbb
aas
or
and
jle
xor
sbb
cmp
cmpsl
pop
xor
push
test
mulps
movsl
stos
std
decb
xor
lret
and
test
sbb
fcoml
cld
leave
stos
push
cmpsl
lret
mov
or
and
pop
int
mov
push
xorb
mov
test
mov
push
jae
mov
sbb
pop
jecxz
or
xor
dec
popf
imul
lds
pushf
dec
push
dec
push
mov
lahf
or
daa
out
adc
mov
inc
shl
add
cmp
das
fdivrp
xlat
jo
insl
sbb
sub
popf
out
iret
adc
aaa
cmp
shll
sbb
or
lahf
lods
and
jmp
mov
sbb
jo
popa
xchg
mov
outsl
push
std
nop
jb
mov
add
jg
mov
les
lret
jmp
dec
fwait
mov
or
divb
ret
lods
loopne
in
ljmp
and
clc
les
dec
mov
dec
cmpsb
push
aam
cmp
pop
outsb
sub
scas
ret
repnz
data16
and
andb
fwait
ss
xor
jmp
pmaxub
in
sbb
lods
out
and
cmpsl
inc
imul
mov
sub
cmp
popa
pop
add
rorl
movsb
sub
divl
jp
jne
imul
jb
cmc
test
lahf
pop
das
xor
in
mov
shll
inc
mov
mov
jl
call
cmp
xor
hlt
dec
addr16
bnd
and
loopne
xor
push
es
leave
sbb
adc
mov
jecxz
mov
bswap
lods
insl
data16
sub
stc
xchg
pop
out
adc
xor
mov
sub
or
loop
in
iret
mov
lock
fisubl
ss
mov
sub
in
add
mov
push
inc
mov
mov
or
jmp
test
aas
imul
lods
in
lods
dec
pop
mov
out
lret
cltd
decb
and
xor
xchg
xchg
icebp
mov
mov
adc
je
jl
repz
or
and
jo
loope
sbb
fsubrl
lret
imulb
sbb
fisubrs
xor
xor
fbstp
sub
cs
imul
out
add
sbb
mov
push
cmp
lods
shrb
lea
outsl
inc
pushf
roll
mov
cltd
movsl
repz
jne
leave
xchg
dec
inc
js
icebp
mov
aam
test
lea
rcrb
cmp
cmpsb
or
sub
sub
xlat
sbb
ljmp
mov
fists
adc
xchg
jno
in
sbb
jno
aam
shl
push
xor
stc
and
sub
clc
fisubs
mov
inc
loope
dec
xor
faddl
sbb
lods
ret
cmp
or
pusha
sub
fildll
adc
push
das
cmp
pop
inc
mov
mov
mov
xlat
mov
mov
outsb
popl
dec
push
xor
cmp
push
and
cltd
xchg
lahf
and
ljmp
dec
push
inc
jg
je
dec
sbb
dec
fs
add
xchg
ficompl
les
divl
fldenv
jbe
jae
cmp
test
jne
hlt
and
into
mov
fstpt
pusha
jns
and
jmp
hlt
imul
imul
jns
dec
arpl
inc
pop
aaa
and
lods
call
sti
mov
rclb
sahf
fcoms
sarb
les
xor
push
loopne
and
movsb
ret
pop
clc
lock
test
pop
fstps
mov
pusha
fchs
cmpsb
push
or
push
fildl
mov
sub
sahf
mov
pop
mov
fyl2xp1
cmp
inc
bound
or
loope
leave
lret
jg
pop
loope
and
xor
enter
jno
ret
repnz
fsubs
dec
fsts
adc
repz
sahf
push
xor
clc
popa
stc
jg
mov
mov
mov
jns
sbb
arpl
cmp
mov
and
mov
and
call
ja
test
clc
test
mov
xchg
aam
cmc
arpl
pushf
sahf
icebp
sbb
sti
add
out
aad
clc
adc
lret
sub
insl
mov
jp
mov
outsl
cmpsb
out
mov
ss
and
dec
aas
add
lcall
testl
inc
mov
imul
xchg
in
and
jmp
lods
rcl
and
and
dec
inc
shll
popa
aad
addr16
int3
mov
inc
enter
in
mov
jl
fisttps
or
jns
imul
das
out
loopne
aad
sub
out
mov
test
mov
jbe
mov
loopne
push
mov
cli
imul
lcall
or
call
repnz
ds
mov
sbb
stos
cltd
sbb
pop
out
leave
jo
xchg
mov
add
popf
sahf
je
push
pop
gs
pushf
scas
add
xor
popa
sub
cmp
test
stos
adc
dec
push
stos
loope
mov
cwtl
xchg
dec
mov
push
shrl
gs
gs
push
push
push
xchg
pop
pushf
das
imul
gs
std
mov
dec
cmp
mov
mov
in
jne
insb
dec
cmp
insl
dec
push
shll
inc
jge
add
push
xchg
xlat
inc
fildll
leave
out
xchg
xor
jns
xchg
inc
mov
mov
cli
pop
testb
psllw
stos
dec
sti
mov
dec
and
inc
imul
fs
cmp
pop
xchg
outsl
mov
jb
ja
sbb
out
gs
cmpsb
fsubrs
sub
cmp
jns
xor
loopne
push
or
mov
out
xchg
stos
scas
mov
andnps
mov
fldt
pop
popf
lret
push
xor
xor
xor
jp
mov
mov
divb
pop
pusha
orb
jnp
jl
mov
add
adc
fists
icebp
ret
test
cld
mov
mov
ljmp
pop
pop
lds
mov
jmp
arpl
es
or
fimuls
pop
aad
fs
pop
clc
inc
enter
daa
jecxz
jb
pop
dec
cmp
insl
mov
inc
es
mov
ss
dec
push
ljmp
aas
inc
inc
sbb
lods
fimull
js
fildl
pop
add
jp
inc
lock
xor
rdtsc
push
int
xor
mov
movsl
xchg
out
push
notl
xchg
imul
insl
int
mov
xchg
arpl
imul
mov
sub
cld
pop
fstl
mov
dec
roll
sbb
cmpsl
pop
mov
jne
push
xchg
sbb
xorl
pop
mov
in
cmp
jae
sbb
int3
and
dec
adc
orb
lods
inc
clc
stc
sbb
pop
and
or
lret
repz
popf
mov
mov
dec
mov
shlb
sub
cmpsb
rorl
or
shl
xchg
aam
cld
mov
inc
push
xchg
lret
or
add
cmpsl
stos
jmp
addr16
nop
dec
xlat
and
std
inc
inc
jo
inc
push
loope
sarb
repz
mov
testl
add
pop
fs
mov
das
jmp
xchg
imul
andb
fldenv
or
adc
sbb
jmp
scas
into
into
xchg
mov
mov
xlat
pop
hlt
outsl
jno
dec
mov
dec
pop
in
adc
movsl
test
sbb
nop
ret
push
xor
xadd
out
and
jle
or
faddl
jns
lret
addb
idivl
sub
lahf
push
and
ss
add
arpl
mov
enter
mov
xor
ja
or
dec
adc
out
les
roll
cmp
add
sbb
fidivrl
pop
jne
pop
shlb
aad
cmpsb
pop
lods
jb
cld
in
rorl
mov
pop
movsb
jne
scas
fsubrl
cmp
pop
int3
lods
xchg
xchg
subb
mov
inc
add
daa
pop
rclb
mov
mov
ss
movsl
sub
fistl
jae
cli
jmp
pop
mov
and
push
inc
stos
pop
mov
ds
lret
fildl
mov
dec
jge
sub
inc
jae
sub
pop
mov
push
mov
lods
dec
or
test
cmp
inc
pop
jg
shl
jecxz
out
cmp
scas
jb
sti
xchg
mov
cmp
out
inc
lahf
iret
fwait
js
jo
push
lahf
or
dec
test
dec
mov
push
stos
cltd
adc
mov
lea
push
mov
mov
fsubrs
pop
movsl
cmp
ror
fmull
loope
add
inc
push
bound
ret
dec
or
cmp
inc
dec
int3
pop
xchg
dec
mov
insl
cmp
push
push
icebp
ret
imul
stos
stos
inc
jecxz
xor
les
fimuls
imul
jg
lods
loop
adc
test
inc
inc
dec
les
cmpsb
cmpsb
sbb
mov
push
jle
and
adc
add
push
aad
push
lcall
push
xchg
mov
rorl
cli
shll
add
imul
push
mov
mov
pop
sarl
push
jno
cmp
inc
in
and
or
xchg
cmp
add
jmp
popl
jmp
push
popf
mov
repnz
in
arpl
push
push
cmp
mov
and
rorl
adc
and
lods
add
xor
call
or
fistps
push
mov
loopne
adc
push
cld
jmp
cmp
pusha
cwtl
jne
sub
mov
pop
aaa
ret
xor
push
push
dec
js
cmp
and
jae
push
std
repz
test
inc
dec
mov
sar
es
add
fistl
popf
push
ret
pop
shlb
mov
lret
sbb
inc
dec
cmp
jp
callw
aad
aaa
inc
das
imul
popa
xchg
mov
lcall
fsubrl
sbb
jge
mov
sub
lret
jno
push
outsb
push
cmc
jl
dec
fstl
jae
pushl
xchg
dec
sarl
jmp
dec
scas
cmp
lahf
fsubrl
add
push
ret
adc
dec
mov
ss
insb
js
ja
adc
and
jbe
adc
sarb
imulb
scas
pop
add
ja
xlat
mov
es
shll
in
pop
les
mov
dec
test
mov
lods
movsb
sub
sub
adcl
aad
rcll
inc
lcall
icebp
enter
jae
out
dec
xchg
jmp
inc
xlat
mov
jnp
enter
pop
jne
rcrb
pop
subl
je
pop
ja
push
or
lods
add
daa
les
clc
sub
xorl
cmpsb
jbe
jb
inc
pop
mov
lods
xchg
cwtl
inc
inc
lret
cmp
iret
adc
mov
pop
mov
cltd
fcmovb
popl
xchg
jno
mov
adc
jecxz
insb
lret
xor
inc
sbb
add
in
popf
test
xorl
in
testl
push
ja
xor
cs
addr16
mov
movsl
jbe
data16
xchg
pop
inc
xchg
out
arpl
jae
push
es
rcrb
mov
ret
adc
cmp
fistpll
hlt
push
xlat
lock
inc
das
js
mov
add
or
xchg
xor
pop
cmp
pop
and
mov
cmpb
xchg
andl
cwtl
mov
jb
jle
sbb
scas
andl
jb
add
mov
push
call
jecxz
fwait
rcrb
dec
jne
ret
xchg
jmp
mov
or
fnstsw
add
imul
lret
fsts
outsl
xorl
sti
subb
in
loope
xchg
fistpl
sub
cmpsl
inc
leave
into
loope
fildll
arpl
rclb
es
addr16
xchg
and
stos
bound
dec
arpl
notl
push
addl
cwtl
lods
add
sub
fcoml
test
sbb
lods
sub
arpl
inc
cmp
aad
dec
jmp
adc
cmpsl
push
cmpb
sub
sbb
mov
pop
push
mov
rclb
shr
mov
mov
mov
mov
add
pop
ljmp
cmp
out
inc
out
insb
mov
pop
aam
stos
push
shrb
or
pop
pusha
mov
orb
les
sub
mov
loope
mov
sbb
sbb
adc
in
cmp
mov
mov
xor
adc
pop
bound
scas
inc
mov
daa
pop
mov
aas
mov
push
cmpsl
imul
inc
inc
jmp
fistpl
popf
pop
xor
push
inc
and
sub
je
clc
orl
dec
movsl
orl
mov
dec
fnstcw
lds
out
es
or
and
shll
jg
jno
lahf
pusha
and
aam
popl
cmp
ret
sahf
mov
or
push
fidivs
add
loope
faddl
sti
sahf
mov
xor
sub
imul
fdivrs
repnz
adc
inc
adc
mov
sub
inc
int3
mov
push
sub
and
cmp
inc
movsb
fwait
jo
fmulp
cltd
xchg
or
xor
xlat
fsubrl
cli
adcb
cmp
inc
outsb
pop
loop
or
pop
std
imul
incl
std
cmp
je
dec
jge
adc
add
fisubl
mov
mov
add
ret
inc
inc
add
xorb
dec
mov
push
movsb
das
ja
insb
cmp
inc
dec
and
fcomi
icebp
adc
dec
dec
in
jl
mov
and
jae
push
xchg
sti
cmp
adc
loop
pop
shlb
lret
cld
mov
mov
movsb
adc
lea
dec
pop
out
dec
fisttpll
clc
jmp
rcrb
cmp
jmp
sbb
sbb
gs
xor
mov
push
add
hlt
leave
loop
push
mov
xlat
mov
cmpsl
xor
hlt
cmp
and
lret
and
jl
cmp
mov
xor
das
or
stos
dec
fists
inc
add
or
xor
movsl
inc
add
adc
mov
sbb
or
xchg
push
sbb
mov
aad
je
or
mov
mov
jne
dec
dec
aam
pop
mov
jmp
cmpsb
mov
rorl
scas
pop
sbb
adc
scas
xchg
push
adc
add
mov
ficoms
cmpsl
sbb
outsb
inc
xchg
mov
jp
dec
std
jg
mov
sbb
gs
ss
lock
jg
xchg
adc
sahf
inc
mov
addr16
push
icebp
jne
aas
shll
out
push
push
inc
push
jbe
or
push
jecxz
jp
mov
dec
jnp
inc
adc
jbe
xor
out
adc
pop
sbb
sahf
xchg
lret
mov
lock
dec
push
sbb
es
jns
int
sub
arpl
aad
adc
clc
push
fcmovnb
adc
repz
push
popa
in
out
imul
jmp
mov
gs
xchg
shll
push
sbb
push
loop
adc
sub
daa
data16
mov
mov
add
rolb
cmp
sti
repnz
cmp
add
imul
push
mov
cmp
dec
dec
adc
aas
ljmp
fiadds
dec
or
out
mov
cmc
and
mov
mov
inc
cmpsb
sub
lret
sub
in
fstpl
pop
jl
outsl
push
sbb
adc
inc
jmp
pop
je
mov
inc
cmp
mov
dec
jmp
popf
sub
mov
inc
xchg
jle
ss
mov
cli
add
and
xchg
pop
sahf
stos
je
fisubrs
in
test
lds
mov
mov
cmp
mov
dec
inc
mov
icebp
sbb
ret
arpl
gs
daa
stos
sbb
les
imulb
das
dec
xchg
testb
mov
jg
lds
negb
insl
fs
sub
lock
mov
cwtl
add
addb
jl
pop
je
int3
mov
xor
pop
adc
adc
or
clc
jmp
push
sub
popf
xor
and
das
lods
test
cmp
loop
add
clc
and
test
adcl
adc
pop
aaa
dec
mov
leave
jmp
xchg
scas
ret
ljmp
std
or
es
push
mov
xor
push
lahf
xchg
add
xchg
pop
pop
cmc
sti
jl
jl
data16
cld
bound
out
sub
pop
in
leave
and
test
lods
lret
out
lea
pushf
rorl
xor
add
je
stos
das
test
dec
pop
mov
mov
ljmp
and
pop
in
pusha
cli
mov
daa
cs
scas
cmp
xor
jecxz
xchg
jecxz
jecxz
cmc
lret
xchg
insl
mov
inc
fsub
ficompl
repz
cmpsl
inc
fs
idivb
daa
lret
addr16
rcrb
adc
icebp
inc
orl
xor
fs
lret
gs
mov
mov
js
inc
clc
movsl
fildll
jge
hlt
orb
and
cmp
das
adc
push
pop
ret
mov
push
and
mov
fbld
ds
xchg
or
pop
push
xor
pop
cltd
dec
and
stc
xor
xchg
dec
xchg
add
sbb
xchg
cmc
cli
xchg
cmp
adc
dec
mov
fnstcw
idivl
sub
pop
or
je
xchg
mov
xchg
notb
ror
loopne
lcall
cmp
ret
fistpll
mov
cmp
inc
pop
xchg
xchg
push
push
dec
sbb
jns
mov
icebp
mov
sub
jb
cmp
inc
dec
outsb
jmp
imul
xor
inc
into
dec
inc
ss
dec
daa
mov
js
mov
jo
lea
sub
out
pop
and
dec
add
push
in
stc
mov
cmp
sub
insl
dec
push
cmp
out
or
fdivr
add
mov
inc
or
xor
jecxz
sub
data16
sbb
dec
ss
cmp
sub
sbb
insb
cmp
in
repnz
stos
sub
xlat
inc
ja
into
ret
fucomi
push
std
les
add
imul
into
stos
xor
xchg
add
mov
and
or
adc
ljmp
xorl
sbb
testb
popf
data16
out
sub
sub
sbb
test
push
xorb
add
sbbb
mov
out
popf
or
mov
daa
xor
sub
adc
jmp
sbb
or
sbb
cltd
mov
jmp
inc
stc
fnstcw
out
jle
add
push
or
aad
insb
aad
mov
repnz
cmpsb
faddl
fimuls
fmuls
lret
fisubs
and
or
inc
lea
jbe
pop
pop
mov
scas
leave
maxps
inc
nop
cmpsl
push
mov
fbstp
pop
cmc
shr
sub
lods
hlt
xchg
addl
mov
add
mov
sbb
xchg
jle
js
call
pop
imul
pop
lsl
dec
pop
cli
leave
into
or
sbb
mov
and
adc
jge
sub
ljmp
lahf
cmpsl
inc
loopne
add
aam
dec
fnstcw
iret
mov
test
cmpb
mov
fisubrs
gs
je
aam
push
jo
mov
mov
repnz
dec
js
push
ror
in
es
jl
inc
out
movsl
cmp
nopl
inc
out
pop
or
int
loop
fstpl
pop
sar
lods
pop
pop
xlat
jae
jno
andl
gs
ja
fnstcw
xor
pop
pop
loope
sbb
push
lret
dec
sbb
sahf
mov
shrl
aad
mov
mov
pop
scas
js
sub
lds
mov
shrb
addr16
mov
notl
clc
fisttpll
cld
mov
inc
push
mov
loop
inc
hlt
rcrl
or
jle
pop
out
out
pop
or
sub
or
add
popf
sbb
je
pop
jl
test
pop
rcrb
xchg
sbb
mov
xor
int3
xor
cmp
cmp
ret
out
inc
cmp
in
push
mov
xor
xchg
in
xchg
repz
mov
jae
xor
mov
stos
out
out
dec
adc
arpl
int
sub
orb
arpl
subl
cld
jb
adc
cmpsl
sahf
stos
inc
cmp
ljmp
mov
shrb
in
pop
push
aaa
rorl
in
fcomps
aam
add
out
add
xchg
adc
fadds
lock
sti
lock
pop
mov
std
jl
insl
jmp
pop
int3
imul
jge
jl
into
push
fnsetpm(287
cmc
mov
ret
insb
pop
inc
rcll
cmp
xor
out
gs
xorb
ret
inc
loop
and
cwtl
out
dec
jmp
int3
inc
mov
and
mov
loopne
adc
sub
mov
in
push
xchg
stos
stc
push
ljmp
mov
jne
xchg
insb
pop
rcr
inc
xor
test
pop
lahf
pop
mov
push
ss
loopne
xor
std
push
imul
and
lods
jle
test
push
test
push
gs
adc
sbb
inc
movsb
daa
clc
fistpll
inc
pop
int
cmp
and
xchg
mov
cmp
pmaxsw
cltd
mov
jne
add
adc
fbstp
mov
int
push
ss
jnp
sub
aad
sbb
jl
out
mov
scas
stos
mov
pop
shll
in
les
rol
or
push
pop
sbb
push
daa
and
loop
rolb
sahf
and
cmp
fcmove
gs
es
push
insl
flds
pusha
push
ljmp
push
adc
gs
pop
sbbl
outsl
popf
fwait
ret
push
mov
aas
rol
aad
push
sub
movsl
idivl
in
sub
pop
lds
fisubrs
push
push
xchg
aaa
lcall
sbb
push
mov
mov
les
ds
mov
sbb
sub
adc
fidivs
jp
stos
mov
in
insb
psadbw
lods
movsl
mov
aam
xor
call
out
push
seta
std
cmc
xor
sbb
mov
insl
lods
mov
movsb
in
ds
ljmp
outsb
out
or
pop
mov
xchg
mov
lret
ret
add
out
ss
pop
inc
in
push
dec
jle
add
xchg
repnz
jo
push
pop
lret
mov
adc
aaa
shl
sti
fisttpl
xchg
mov
test
or
sbb
mov
cld
nop
das
dec
mov
test
mov
gs
pop
leave
sbb
add
int3
in
mov
lret
inc
sbb
adcl
or
sbb
call
lret
xlat
add
push
les
and
imul
movsl
daa
stos
push
or
jl
and
jg
mov
sbb
and
mov
repz
repz
pop
dec
insl
sbb
pop
and
jo
lret
aad
mov
mov
push
add
out
jns
int
mov
loope
mov
pop
pop
pop
jae
push
sub
incb
pop
lock
mov
xchg
fistpl
shlb
stos
mov
sub
add
in
xchg
adc
cmpb
nop
lods
or
adc
pop
sbb
mov
scas
enter
movl
or
int
mov
cmpsb
push
jae
sub
or
cmpsl
loop
movups
bound
ljmp
cmp
push
sbb
xor
mov
mov
mov
or
pushf
jmp
popf
out
inc
mov
inc
mov
mov
fcoml
inc
and
pop
popf
jp
movsb
push
push
shll
push
mov
and
test
and
rorb
imul
sarb
mov
sub
adc
mov
mov
push
test
lcall
mov
cltd
and
scas
mov
xchg
mov
dec
rcrl
bound
or
dec
sbb
cmp
mov
ret
mov
test
jmp
stos
int3
outsb
and
mov
push
test
pop
cs
adcl
xor
xor
xor
test
jno
mov
and
leave
add
mov
xlat
aaa
pop
lahf
repnz
aaa
sbb
bound
push
cmp
adc
mov
dec
cli
pushf
popf
push
mov
xor
sbb
iret
mov
cli
jle
xorb
mov
mov
daa
adc
bound
jge
and
ss
or
sbb
aad
cld
out
jb
mov
adc
cmp
push
cmp
aam
imul
inc
imul
mov
cmp
test
mov
mov
xchg
dec
shlb
aas
pusha
push
add
sbbb
pusha
mov
cld
sub
xlat
sbb
ss
lret
push
push
aad
push
or
mov
loope
lahf
mov
mov
adc
aaa
je
push
push
or
lcall
ljmp
mov
or
mov
fsubl
mov
dec
xchg
das
mov
clc
push
mov
fstpl
inc
jmp
mov
adc
adc
mov
push
cltd
pop
shlb
lahf
rolb
shlb
ret
test
push
into
cmp
xor
mov
cmp
sbb
cmpsb
jae
cltd
xor
jo
sub
sub
lret
shll
outsl
dec
mov
pop
adc
lock
cmp
cmp
arpl
popf
in
out
jmp
test
and
mov
ljmp
mul
hlt
imul
lret
lret
or
adcb
lea
or
test
rorb
loopne
mov
xchg
sub
jmp
dec
imul
out
mov
or
push
int
movsl
movsb
fsubr
sbb
pop
out
cltd
xchg
push
stos
sub
dec
js
inc
mov
cli
fbld
mov
mov
pop
mov
lcall
sub
pop
scas
jp
les
cld
cmp
sbb
xchg
xor
cmc
mov
push
sbb
xchg
dec
negb
add
jo
cwtl
cmp
lea
xchg
cmp
adcb
add
pop
out
vpmaxub
jnp
sbb
add
jmp
and
sbb
mov
cld
mov
adc
test
fs
jmp
fnstcw
mov
jge
roll
push
jb
addr16
sahf
mov
xchg
cltd
or
mov
push
lcall
sbb
jns
push
rcll
rclb
add
in
sub
jno
inc
xchg
sarb
add
xor
das
je
movsl
or
xchg
inc
out
push
enter
out
jecxz
adc
xchg
xchg
rcl
jl
outsb
jno
iret
adc
sub
pop
mov
lods
fsubrl
jbe
lods
ficompl
popa
xchg
in
js
xor
andb
mov
mov
pop
push
sbb
mov
out
bound
cmpsl
adc
repz
pop
xchg
sub
xor
jmp
xchg
hlt
sub
lods
cmp
jno
stc
push
popa
push
mov
adc
int3
out
lea
mov
pop
std
orl
xor
push
leave
jmp
push
cmpl
cmp
mov
cmp
das
cwtl
mov
sbb
push
dec
ss
jmp
mov
and
ret
dec
push
je
fadd
mov
or
xchg
scas
pop
insb
sub
das
push
adc
fwait
fwait
jbe
loopne
xchg
or
inc
nop
and
mov
pop
jl
imul
mov
ret
aam
pop
outsl
adc
fs
cmpsl
inc
sbb
jmp
pop
add
mov
sbb
pop
xchg
jle
push
movsl
pop
idivl
and
inc
pop
xchg
addr16
push
cmp
loopne
out
mov
adc
mov
mov
pop
pushf
or
jb
imul
cli
jno
repnz
test
mov
push
orb
mov
jge
rcrl
adc
lods
sub
test
mov
sahf
xchg
movsb
pop
or
xchg
and
mov
or
data16
pop
pop
push
sbb
mov
int
push
clc
das
sbb
sti
push
xor
or
mov
cli
mov
cli
dec
test
test
jg
repz
mov
lret
enter
push
jns
scas
dec
cmp
adc
xor
lret
test
mov
xor
push
test
push
adc
xlat
ja
jg
mov
hlt
fisubrl
out
into
movsl
jns
mov
mov
pop
lods
push
lret
cmpsb
daa
cli
subl
inc
test
adc
push
and
adc
fisubl
cmp
fdivl
into
cmp
fsts
movsl
shrl
mov
pop
cmp
in
inc
mov
cld
stos
push
mov
jne
xchg
dec
repz
adc
jl
sub
push
add
add
fldcw
xor
xchg
mov
and
lahf
sub
stc
je
push
ror
xchg
das
stc
sbb
cld
lret
mov
dec
and
pushf
mov
adc
out
or
push
mov
inc
cmp
mov
test
das
mov
loope
pop
pop
bound
xchg
dec
leave
mov
ret
in
pop
notb
jmp
les
cmp
cli
arpl
dec
jbe
js
sub
ficomps
jg
push
push
movsl
or
je
dec
or
cmova
pushf
push
jbe
pushl
outsl
mov
adcl
sbb
cmpsl
push
add
repnz
push
dec
jae
sbb
push
or
cld
dec
or
std
jbe
pop
jo
in
aam
jb
ret
outsb
ret
lds
mov
mov
fisubl
mov
jae
ja
inc
pop
jl
loope
jp
or
cmc
jnp
out
push
movsb
rcrl
bnd
jl
xchg
stos
xchg
sub
test
and
sbb
or
and
std
dec
scas
lcall
sbb
test
push
out
cmpsb
push
out
push
repnz
sti
mov
push
fidivrs
jo
sbb
adc
xchg
iret
mov
jle
push
lds
or
rorl
into
inc
xorps
mov
shll
fstpt
stos
push
daa
sbb
in
push
jl
ja
cmp
adc
sbb
arpl
push
aas
fisttpll
mov
neg
les
es
mov
xor
rcr
mov
incb
push
jb
sub
jno
lds
xchg
and
sbb
in
icebp
shrb
xchg
dec
stos
dec
pusha
mov
inc
fwait
jecxz
fwait
mov
mov
mov
pop
nop
enter
add
mov
jnp
push
cld
movsb
scas
adc
add
int3
scas
fs
test
sti
and
xchg
iret
push
addl
pop
inc
jns
sbb
fcmovnu
into
mov
in
push
lds
cmp
ja
mov
call
lcallw
and
call
dec
push
inc
ret
pop
rcrl
dec
add
stc
adc
xor
fcmovb
ds
pusha
fstpl
and
scas
sbb
push
dec
lahf
xchg
xchg
shl
mov
and
push
and
outsb
hlt
lcall
xchg
fdivr
mov
adc
stos
test
lcall
fsubr
pushw
pop
ds
stos
mov
mulb
test
in
out
aad
js
dec
in
cwtl
cmovl
sbbl
test
mov
inc
xor
jmp
sub
jo
mov
mov
testb
sub
jb
out
adc
xor
mov
lods
inc
mov
inc
stc
aas
push
or
mov
out
daa
jo
bound
mov
mov
jle
ja
sub
cs
nop
repz
pop
cmp
xchg
loope
pop
shrl
mov
sbb
lods
loop
jbe
iret
xor
mov
mov
adc
mov
stos
addr16
inc
in
mov
stos
sub
inc
std
pop
cmpb
mov
cmp
mov
int3
push
enter
inc
adc
add
js
cmp
das
dec
cmp
scas
lea
push
sub
arpl
out
mov
lret
xchg
mov
cmc
dec
outsl
adc
in
cmp
mov
es
and
rorl
or
or
add
mov
cs
imul
ds
fstps
ret
dec
loope
jmp
xchg
imul
out
or
cmp
call
popa
cld
pop
subb
push
fs
stos
add
push
sahf
out
outsb
les
add
xchg
lods
add
fmuls
jmp
pusha
adc
push
hlt
aad
int
movsb
dec
inc
cmc
pushf
sub
jmp
push
dec
cmp
mov
inc
dec
or
or
sbb
or
pop
push
mov
inc
ret
into
out
into
dec
push
bound
sub
jl
test
dec
andl
js
pushf
add
adc
xchg
sbb
and
add
push
jbe
test
stos
insl
xchg
in
push
jo
gs
mov
shll
push
jg
addb
mov
shll
jmp
sbb
std
call
in
cmpsl
neg
outsb
sub
icebp
and
lret
fcoms
jl
pop
stc
sbb
jno
pop
mov
clc
sbb
stos
inc
mov
jl
adc
in
jge
shlb
mov
loop
xor
and
scas
shll
test
cmp
mov
cmp
test
sub
mov
jns
movsb
mov
mov
mov
or
jecxz
mov
in
push
stc
loopne
movl
fadds
xchg
sub
push
lds
cltd
js
xchg
fsubr
das
adc
les
pop
push
xor
mov
pcmpeqb
test
out
adc
frstor
in
test
repnz
cld
inc
adc
jg
ret
sub
fcomi
adc
adc
adc
adc
pushf
mov
adc
xor
icebp
ljmp
pusha
jnp
cmp
inc
out
dec
push
pop
push
pop
inc
pushf
mov
sti
add
pop
and
add
lea
lahf
jnp
popa
adc
inc
ss
dec
add
mov
xchg
mov
es
nop
adc
mov
test
inc
mov
outsl
or
cmp
aad
pusha
mov
push
and
mov
mov
sar
nop
jmp
cld
mov
mov
test
sbb
add
push
nop
pushf
stc
addr16
fcmovbe
repnz
jb
dec
mov
push
mov
pop
pop
pop
push
arpl
call
shrb
mov
das
iret
vxorps
adc
jbe
xor
out
jno
pop
dec
cmp
out
in
outsb
je
jbe
dec
fildll
aaa
xor
dec
dec
out
sub
loopne
in
addr16
push
xchg
adc
add
mov
push
mov
sub
rorl
pushl
sbb
sbb
sbb
stos
jae
lcall
xchg
add
es
pop
jmp
adc
int
enter
test
lret
inc
cmp
pop
sbb
push
pushf
xchg
inc
daa
xor
jle
test
cmpsl
nop
jo
mov
cli
adc
push
andb
push
fisubrl
insl
add
and
mov
xchg
pop
daa
or
shrl
test
push
cmp
leave
aas
lods
or
lret
hlt
mov
jo
int
pop
push
arpl
daa
adc
pusha
lods
addr16
adc
adc
push
pusha
cmp
shlb
hlt
mov
fimull
movsl
cmpsb
les
and
dec
std
sbb
and
testl
cmp
rorl
iret
mov
pop
insl
popa
pop
and
daa
stc
int
es
mov
sub
gs
or
pop
jnp
test
xchg
pushf
add
mov
mov
divb
test
les
pop
pusha
mov
out
sub
add
lods
pushf
imull
mov
cmpb
ficoms
lds
push
in
ret
sbb
int3
xor
dec
and
and
mov
xchg
cmc
shll
inc
pop
mov
mov
sbb
pushf
std
pop
pop
mov
or
xchg
sbb
and
push
cmp
dec
or
aas
inc
in
and
sbb
xor
sbb
in
jp
shl
ret
clc
xor
nop
push
popf
lock
pop
das
sbb
sbb
data16
cltd
jns
flds
lea
dec
leave
sub
lret
mov
xor
popf
sbb
in
aaa
mov
loope
cmpps
mov
lds
insb
jp
mov
cmp
test
outsl
xor
adc
push
mulb
or
and
xor
lds
or
pop
aaa
mov
pop
push
imul
js
adc
lods
inc
lcall
and
mov
push
mov
mov
mov
pop
aaa
and
popf
jbe
pop
mov
pop
cmc
sub
mov
cmp
jg
rcrb
jb
jns
lds
push
lret
xor
xlat
pop
movsl
ficomps
scas
or
add
push
testl
lret
je,pt
cmp
iret
stos
jno
xor
ljmp
in
out
mov
call
repnz
fldcw
sub
push
lods
iret
sbb
inc
push
pop
jno
push
pop
adc
aaa
and
dec
out
ljmp
sar
xchg
jns
xchg
push
lahf
pop
pop
aaa
xor
mov
lods
aam
pop
lcall
enter
pusha
or
push
lcall
clc
jae
stos
stos
cmp
nop
lods
or
icebp
adc
push
xor
mov
fnstenv
imul
je
xorl
mov
js
fstp
negb
int
mov
dec
cmp
push
addb
xlat
out
pop
xchg
xchg
mov
pop
inc
push
cmp
mov
mov
aam
adc
mov
cmp
adc
std
cld
xchg
les
int3
hlt
adc
stos
bound
daa
sbb
mov
subb
sahf
mov
fidivrs
mov
dec
sbb
scas
inc
add
sbb
sbb
push
jno
add
and
adcb
mov
jge
es
cmp
push
lds
test
mov
ds
inc
je
fs
cltd
pushl
push
out
adc
push
jno
int
xor
movsb
outsb
sbb
cmp
mov
ret
xchg
in
add
mov
sbb
cmp
jbe
jne
test
xchg
pop
xor
and
dec
jo
mov
in
movsl
xor
testb
sub
sbb
dec
or
push
gs
sub
sbb
mov
stos
xchg
mov
push
or
lahf
sub
jo
xor
jl
push
movsl
sbb
fldcw
jl
adc
mov
inc
cmp
pop
cld
cli
push
icebp
adc
lods
out
xchg
mov
cmpb
ret
dec
adc
push
nop
add
dec
pop
lcall
pop
dec
sub
push
lods
or
hlt
lcall
push
mov
or
sbb
mov
xchg
repnz
or
add
mov
pop
dec
or
mov
popf
negb
shll
imul
subl
stos
mov
in
ret
inc
cmp
mov
test
inc
xchg
add
mov
sbb
ljmp
pusha
push
mov
stos
mov
repnz
pop
inc
loop
mov
pop
push
inc
jmp
test
pusha
xchg
roll
dec
xor
inc
mov
loopne
mov
and
dec
mov
or
fnsave
out
mov
xor
jne
push
xchg
push
push
jae
es
inc
hlt
inc
clts
cmpsb
fsubrl
sub
lods
cmpsl
std
xor
mov
das
adc
push
not
incl
test
cli
xchg
es
cmp
jp
addr16
mov
bound
inc
mov
popf
inc
pop
pop
js
mov
daa
push
xor
repz
pop
add
xor
rcl
repnz
stos
or
mov
test
icebp
ja
aas
stos
mov
jmp
in
je
or
cmp
stos
dec
std
popa
sbb
negb
cltd
mov
dec
xor
fidivrs
clc
int3
ss
dec
nop
jp
in
aad
and
aas
mov
mov
icebp
xor
jp
idivb
cli
adc
adc
xchg
mov
jns
roll
or
out
or
sbb
push
andb
jp
lahf
sarl
jb
jb
dec
push
cmp
and
negl
sbb
movsb
sbb
push
xchg
mov
gs
inc
add
jbe
insl
dec
lahf
iret
xchg
fadds
inc
pop
movsb
add
jp
dec
inc
adc
xchg
or
pop
call
in
aam
inc
mov
and
movsb
mov
sub
popf
mov
mov
xor
std
xchg
push
sbb
leave
xchg
cmpsb
cmp
shlb
clc
sbb
pop
mov
imul
push
out
rclb
arpl
leave
rcll
mov
repnz
jne
repnz
or
xchg
fildll
jmp
cmp
fnsave
xlat
fcoml
rcrb
inc
mov
jo
mov
les
cmpsl
jmp
mov
add
inc
hlt
mov
ljmp
jecxz
or
movsb
cmp
dec
dec
daa
mov
nop
sub
call
xchg
add
jns
std
adc
mov
lock
lds
mov
iret
lahf
lahf
mov
sub
mov
or
js
rol
cwtl
inc
inc
popf
popa
push
cmp
cmp
dec
xor
data16
cmp
test
pop
mov
adc
lds
fnsave
insb
mov
and
jo
inc
in
jle
mov
in
ljmp
mov
popa
sbbb
adc
into
mov
shrl
mov
cwtl
call
sarb
push
dec
inc
outsb
jo
sbb
insl
mov
les
aaa
ljmp
and
jle
hlt
and
enter
xor
inc
jecxz
ds
xor
cmp
dec
sub
adc
cmpsb
sahf
pop
lret
ret
pop
sbb
push
movsl
in
mov
in
adc
clc
shrb
cmp
lods
adc
adc
sub
repz
cmp
mov
sbb
or
cltd
add
xor
pusha
sti
adc
jp
mov
lahf
pop
rorl
shlb
loopne
xlat
in
fisubrs
sub
cmp
stos
lret
push
mov
stc
jg
mov
xor
dec
xorl
arpl
jp
xchg
xchg
mov
inc
adc
sub
pop
mov
fucompp
inc
pop
xor
cltd
sub
test
test
sbb
std
sbb
sbb
cld
and
scas
out
sbb
les
dec
fucom
sub
mov
ds
xchg
repz
sbb
push
mov
inc
cmpsb
dec
lret
test
inc
addb
add
mov
pop
jp,pn
in
pop
dec
call
push
mov
mov
js
fs
fisttpl
addb
fsub
jns
push
je
mov
mov
inc
xor
in
es
xlat
xchg
or
call
push
pop
add
fstl
in
jl
test
aad
nop
mov
inc
pop
jbe
sbb
lret
leave
push
sarb
dec
xor
ret
mov
scas
add
lret
cli
sbb
outsb
fstps
add
fistpll
mov
pop
or
xor
rcr
xchg
mul
adc
into
rep
xchg
cmpsl
and
mov
push
jg
jb
pop
dec
dec
aad
leave
adc
mov
xor
pop
stos
jecxz
add
mov
push
lea
mov
inc
jg
add
test
mov
push
orw
imul
ds
inc
popf
loopne
les
jp
cmp
adc
sbb
sub
addps
loop
or
scas
sahf
push
loopne
ljmp
shlb
mov
lret
loopne
repz
scas
inc
negb
xor
data16
push
pop
mov
int3
pop
shrb
sbb
jmp
cmp
stc
and
in
les
mov
lds
inc
push
ljmp
aaa
scas
std
int3
cmc
ret
push
lods
adc
repz
cmp
jne
mov
or
inc
mov
mulb
sbb
aam
scas
add
outsl
lds
cwtl
divb
add
adc
cltd
dec
sbbb
mov
xchg
jg
xchg
add
in
xchg
out
outsb
xchg
jns
or
and
dec
mov
imul
scas
in
xchg
fs
mov
mov
outsb
push
into
mov
out
pop
mov
bound
push
dec
scas
xor
dec
sbb
jbe
fsts
mov
iret
outsl
popf
xor
mov
jb
clc
sbb
xchg
push
and
add
pop
sub
aas
hlt
mov
pop
mov
je
loope
mov
je
stos
repz
add
fbstp
pop
loopne
in
jno
lcall
adc
push
leave
sub
push
jmp
fstp
adc
cmp
jecxz
or
pop
ficomps
jmp
jns
stc
inc
lahf
lret
lret
in
jg,pt
fidivrs
in
insl
imul
and
inc
xchg
mov
jg
mov
lods
stc
fldl
sub
sbb
sub
fsubrl
inc
int3
push
fsts
iret
lahf
or
push
dec
adc
sub
mov
call
cmp
jecxz
ds
addr16
sub
xor
arpl
cmovo
jge
aam
in
testl
and
addr16
sarl
out
jp
mov
sub
jbe
adc
lahf
inc
sub
lcall
add
out
jge
add
dec
xchg
jno
push
addr16
andl
pop
int
nop
dec
jp
aas
xor
dec
fwait
in
lahf
dec
test
adc
add
dec
mov
jae
jno
in
int3
mov
mov
das
rcrl
add
imul
icebp
ja
mov
lods
mov
xor
sti
and
fstp
test
lcall
xor
hlt
outsb
cmp
xchg
jmp
mov
or
ret
mov
mov
xor
xchg
data16
jmp
fnsave
adc
and
sbb
cmp
cwtl
fstl
mov
jno
gs
pop
addb
mov
sbb
adc
lea
loope
popf
cmp
mov
mov
repz
push
jecxz
jecxz
popf
or
ja
add
add
icebp
mov
js
popa
sub
imul
pop
dec
addl
subb
lahf
icebp
push
pop
es
sbb
cmp
xor
sti
mov
mov
bound
cmp
sub
push
call
pop
sbbb
outsb
mov
mov
xchg
pop
insl
test
cmp
dec
cs
rcr
jmp
dec
sbb
popf
mov
sbb
call
push
push
mov
push
mov
push
push
jmp
xchg
xor
adc
lcall
or
jecxz
in
cmpsl
outsb
xor
sbb
jecxz
mov
push
shll
mov
js
or
xchg
repnz
xchg
imul
pop
jns
pop
sub
xor
xor
aaa
andl
xchg
out
rep
xlat
lcall
inc
mov
xchg
push
mov
shl
scas
push
inc
fwait
pop
test
push
jl
pop
sahf
jle
dec
pop
push
push
test
int3
adc
inc
xchg
jmp
stos
xor
cmp
in
jo
addb
sub
cmpsl
or
pop
out
rolb
popf
xchg
inc
fwait
mov
cwtl
and
les
cwtl
sbb
inc
lods
xchg
adc
fs
iret
and
or
xor
sub
insb
jb
pop
dec
inc
aam
xor
cmpsb
inc
xchg
xchg
ficomps
stc
outsl
xchg
ja
xor
inc
xor
mov
loop
hlt
mov
sub
movsl
mov
sbb
cmp
xor
cld
sahf
int
sub
nop
notb
jbe
and
movsb
das
and
xchg
mov
lds
cli
gs
inc
sbb
pushl
xchg
inc
dec
xchg
push
stos
movsb
sbb
cltd
popa
push
clc
push
adc
mov
xchg
out
test
add
adc
pop
push
fsub
sbb
loope
pop
jbe
dec
pop
pop
inc
jmp
cmpb
rcl
js
into
mov
jmp
push
xor
pop
mov
loopne
std
repnz
add
es
xchg
sbb
inc
scas
mov
xchg
fwait
jns
es
xor
adc
add
out
cltd
fistpl
mov
sub
les
sbb
jns
lret
fildll
int3
fcoml
flds
xor
popa
xchg
out
scas
pop
pop
inc
push
data16
in
jecxz
loope
sbb
adc
test
jle
std
mov
adc
and
push
ss
mov
mov
fadd
sbbl
movb
add
test
outsb
clc
std
jae
loope
movsl
decb
lahf
pop
in
or
imul
lods
sub
fcmovnu
push
lcall
ja
sbb
sub
xchg
and
and
mov
pushf
push
jnp
adc
push
xchg
orl
inc
inc
push
mov
hlt
sti
push
mov
dec
data16
leave
enter
in
sbb
push
lahf
in
mov
mov
mov
or
adc
cmp
test
sub
int3
mov
mov
int3
push
sbb
sahf
jmp
out
sub
ljmp
adc
pop
add
jo
iret
lret
pop
cmc
lahf
lahf
jle
mov
aas
ja
shr
rolb
or
or
fnstcw
dec
mov
mov
sub
dec
adcl
frstor
add
cmc
jp
sub
adc
int3
icebp
shll
add
dec
push
repnz
jl
jg
push
add
xor
adc
cmpsb
sub
jg
mov
call
mov
in
pop
hlt
sti
pop
mov
push
aad
aad
push
icebp
ds
jns
push
inc
fmulp
iret
and
cmp
push
popa
mov
loopne
mov
mov
scas
cmp
sub
shrb
ja
pop
arpl
pop
into
cmp
in
std
sbbb
or
ret
cmp
int3
call
rorl
mov
loop
inc
test
addr16
cld
aaa
mov
jae
mov
inc
xchg
mov
push
sbb
orb
inc
inc
cwtl
and
jno
jae
dec
in
es
sbb
sti
scas
xchg
cmp
mov
cmc
xor
mov
push
push
pop
xchg
xlat
lahf
xchg
scas
pop
push
pop
rcl
xlat
mov
and
movsb
or
inc
leave
fldt
push
push
iret
test
enter
loope
les
and
xchg
mov
xchg
cmp
cmp
imul
jo
lcall
rcrl
dec
dec
dec
cmpsb
sarl
in
push
mov
xchg
cmp
mov
loop
lods
sbb
push
push
shrb
stc
fnstcw
mov
mov
cwtl
dec
int3
pop
jbe
pop
clc
push
pop
je
scas
mov
dec
je
imul
enter
cmp
sbb
mov
inc
xchg
mov
es
rclb
popf
mov
mov
pop
cmpl
jp
sbb
xor
jnp
xor
addb
sti
imul
scas
fdivs
loopne
mov
push
xchg
aam
test
jle
or
inc
popf
cmpsb
xchg
sbb
outsb
dec
push
insl
mov
enter
cmpsl
sbbb
pusha
movsb
and
popa
stos
add
movswl
sub
add
sub
lods
pop
sub
mov
clc
push
mov
push
jae
or
fistps
decl
mov
pushf
cmp
sti
mov
adc
sbb
ficoms
lods
xchg
into
and
out
addr16
loop
cwtl
lret
ret
jmp
int
iret
sahf
lods
scas
mov
sti
sub
ljmp
sbb
repnz
pop
jnp
mov
lds
ret
push
sub
test
jae
sbb
fmuls
push
shl
adc
jb
imul
scas
push
mov
sbb
cmp
add
jecxz
push
les
jbe
fimuls
dec
test
test
orb
int3
jmp
loop
int3
pop
pop
push
aam
jmp
nop
push
fdivrs
ror
lds
dec
sbbl
out
fwait
imul
jle
fistps
sub
out
bound
mov
cmp
xchg
fdivp
movsb
imul
sarl
push
xchg
scas
sbb
dec
lret
add
xchg
xorb
dec
adc
mov
or
push
mov
sub
add
imul
test
inc
cmp
jmp
sbb
or
xorb
cmp
sbb
mov
inc
pop
sbb
or
cld
call
das
jge
cs
movsl
pop
mov
xchg
je
lcall
orl
ljmp
push
pop
leave
ja
cmp
add
inc
popa
stos
sahf
cmp
xchg
cmpsb
cltd
jo
xor
push
aam
scas
lods
jmp
fildll
inc
fimull
dec
adc
jecxz
xchg
xchg
pusha
adcl
xor
sub
mov
adc
dec
dec
cmp
jg
cmp
dec
fdivrs
mov
dec
adc
incb
sub
sbb
sbb
sub
out
inc
loop
shll
jns
int3
mov
mov
in
loope
fwait
adc
insl
pop
aas
jge
pop
cmp
mov
arpl
lahf
mov
mov
inc
xor
push
mov
dec
sbb
js,pt
aam
sahf
stc
test
fwait
pop
or
pop
and
or
mov
jo
sub
fstps
jecxz
cli
push
cltd
clc
lret
xor
sbb
je
dec
call
push
mov
and
lods
jp
scas
loop
fstpl
daa
add
insl
stos
jns
fsubl
roll
in
ret
inc
jae
or
dec
insl
jne
or
and
push
xchg
xorb
sbb
pusha
sbb
cmp
mov
in
int
insb
mov
jp
jbe
add
scas
aaa
inc
rolb
outsl
dec
imul
inc
int3
mov
jmp
gs
push
jg
insl
data16
sub
popa
add
out
cs
lret
lcall
cmp
cs
inc
shr
cli
push
scas
fcmovnbe
cmc
bnd
lods
add
jne
lock
lahf
cld
lods
jbe
dec
jbe
inc
inc
aaa
adc
push
dec
push
data16
push
sbb
mov
mov
inc
xorl
push
lods
lret
pop
adc
rorb
test
sti
sarl
lret
test
aaa
test
xor
insb
ret
jnp
push
popf
inc
scas
lret
jns
fcmovu
add
lcall
or
mov
fisubl
stos
andb
adc
pop
ljmp
aaa
aad
mov
mov
cwtd
pop
xor
mov
fisubrs
jle
leave
ss
icebp
push
pop
push
xor
dec
mov
insb
adc
add
push
xchg
dec
pusha
ficoml
xchg
or
cmp
fdivrs
mov
leave
jb
popa
sub
jmp
pop
mov
pop
and
sar
mov
adc
movsb
lods
jecxz
mov
pop
negb
xor
in
mov
test
mov
jns
inc
cltd
dec
test
add
push
imul
cwtl
testl
rcll
pop
mov
inc
insb
xor
dec
sub
add
mov
dec
cmpsl
add
push
jl
sbb
pop
pushl
adc
shll
add
sbbb
inc
jnp
fiadds
in
cld
or
sar
push
and
pop
mov
jns
aam
sub
cwtl
xchg
bound
mov
pop
std
mov
jb
adc
and
fmull
mov
pop
inc
adc
jle
add
shr
loope
sbb
mov
adc
mov
out
clc
mov
flds
inc
add
add
jge
pop
cmp
scas
jecxz
xchg
mov
push
cmp
mov
in
xorl
aam
pop
mov
inc
notl
pushf
dec
daa
mov
xchg
xchg
mov
loope
xor
testb
and
jnp
dec
jl
cld
mov
dec
mov
rcl
insl
pop
sahf
lret
adc
inc
mov
or
push
out
cmc
xchg
mov
ljmp
scas
bound
jbe
sbb
in
stc
mov
xor
push
ds
jno
mov
pop
adc
mov
into
sbb
callw
gs
push
push
andl
into
add
sub
add
pop
fiaddl
out
mov
aad
jo
adc
mov
test
push
push
cmp
sub
and
test
add
dec
or
pop
in
and
aas
mov
rcrl
daa
ficoms
cmc
sbbb
xchg
or
dec
sub
xchg
jg
pop
je
adc
arpl
or
add
mov
dec
mov
adc
xor
pop
fsubl
imul
movsb
xorl
arpl
push
xchg
or
inc
lods
cmp
dec
outsb
add
pop
mov
outsl
repz
out
test
jnp
mov
pushf
out
loopne
or
add
pushf
or
cld
bound
dec
xor
cmp
adc
and
add
arpl
push
pop
cld
std
fidivl
xchg
and
movb
lods
push
sbb
fdivs
pusha
sti
jb
mov
cld
int
dec
jmp
popa
call
push
lock
mov
fsubr
loope
popa
dec
mov
cmp
jl
stos
roll
cli
xlat
iret
leave
adc
sub
or
lea
lcall
sub
rorb
inc
push
and
cmp
repz
js
popf
shrl
push
icebp
daa
mov
mov
gs
jp
jecxz
pop
test
sub
sbb
inc
mov
test
out
das
std
cmp
or
jge
push
xor
pop
aas
pop
mov
jle
into
adc
dec
jp
lea
daa
mov
popa
int
push
adc
rorl
add
fmuls
sbb
mov
add
push
cmp
clc
mov
lods
cmp
pop
testb
xlat
or
insl
adc
or
aas
outsl
mov
sbb
sarl
fidivrs
jmp
pop
cmp
sahf
jae
mov
push
pop
movsl
jl
adc
sti
in
mov
insb
sub
push
dec
cld
cmp
push
xor
outsb
add
stc
and
sbb
jno
ret
das
in
in
lods
jae
push
inc
aas
dec
pusha
fldt
out
ljmp
test
fildll
sbb
add
dec
ljmp
jbe
sub
das
and
jmp
jns
add
std
dec
dec
clc
fdivs
pop
inc
sub
popa
xchg
pop
xlat
sbb
icebp
cmp
or
mov
or
movb
lods
jae
es
insl
xor
xchg
mov
sub
arpl
lock
sub
mov
ror
inc
cmp
outsb
gs
lods
xchg
add
add
pop
stos
lea
out
ljmp
xchg
or
test
lods
rolb
inc
test
cmp
xor
mov
jp
movzbl
inc
sub
sub
push
out
mov
jo
cltd
xor
adc
push
pop
stos
mov
ds
or
iret
pop
and
adc
pop
add
repz
cs
lods
xor
mov
xor
xchg
stc
shlb
mov
fucomi
into
cmp
inc
mov
mov
jne
push
jp
cmc
repnz
repnz
inc
pop
add
mov
out
xchg
ljmp
das
stc
daa
add
add
das
xor
jo
stos
into
push
fnclex
add
into
fidivrs
adc
rolb
nop
addr16
mov
and
sbb
das
sbb
jb
jecxz
dec
hlt
cli
ja
cmp
xchg
fadds
jae
push
fs
xor
insl
xchg
call
jmp
and
aam
js
push
cmp
mov
and
pop
notb
mov
sub
xor
push
push
outsl
mov
ljmp
mov
push
pushf
push
outsl
add
aad
hlt
lock
pusha
jp
fcmovbe
xor
dec
int
inc
mov
inc
add
push
ss
lock
mov
sub
cmpsl
sub
add
mov
mov
jb
les
jo
in
add
int3
insl
xor
stos
pop
and
pop
add
inc
je
insl
jle
pop
shlb
sub
mov
and
pop
jp
pop
push
cmp
lcall
adc
xor
mov
ds
adc
pop
pop
sbb
mov
mov
jmp
fstpt
mov
jmp
scas
inc
aas
es
cmp
push
test
sbb
pop
lds
push
js
outsb
inc
sarb
mov
ljmp
cmpsl
outsl
jge
sub
lock
xor
inc
mov
outsl
es
enter
sarb
push
xchg
jg
lods
fwait
sbbb
pop
push
jne
sub
mov
mov
cmp
mov
and
jge
es
push
pop
sti
shrl
xchg
je
test
fistpll
sahf
pop
or
sar
push
cmp
pop
imul
hlt
inc
and
and
mov
loop
adc
jle
jbe
inc
ret
mov
jns
popl
lds
aas
mov
sbb
jae
xor
adc
mov
lock
mov
nop
out
jnp
fnstenv
jmp
aaa
lahf
aaa
ss
add
loop
xchg
xchg
push
adc
jmp
dec
pop
jp
fcompl
pop
or
push
pop
mov
mov
pop
sbb
push
lret
call
mov
add
push
adc
repnz
enter
add
mov
ds
pop
sbb
ljmp
cmpsl
and
mov
xor
lea
imul
push
and
repnz
jno
dec
push
js
aad
sbb
push
movsl
gs
inc
jne
mov
leave
sbb
push
ljmp
int
lcall
sbb
lret
aam
loopne
and
lcall
lea
adc
or
in
pop
leave
push
mov
aaa
out
addr16
imul
dec
and
dec
or
addr16
or
sti
pop
push
loop
in
xchg
add
mov
xchg
int
adc
bound
mov
mov
fstl
pmulhw
or
in
cmp
out
adc
lds
jae
pop
in
leave
fcmove
stos
lea
outsl
out
or
mov
jg
inc
ds
dec
jb
hlt
inc
or
cmp
xchg
movsb
nop
js
add
pop
xchg
push
xchg
or
sbb
mov
shl
inc
mov
aam
and
cld
fcmovb
or
scas
pop
int
addr16
stc
mov
mov
cmpsb
std
out
dec
loope
pop
add
mov
dec
xchg
xchg
divl
jle
pop
popf
add
popf
inc
dec
popa
xor
loop
fidivs
outsl
test
mov
cld
daa
push
mov
add
gs
lahf
fcomip
xchg
loop
pop
mov
lock
loopne
sub
sarl
test
sti
pop
sti
dec
jno
mov
cmc
imul
mov
inc
cmpsl
mov
movsb
sub
scas
push
aaa
in
mov
mov
es
cmp
dec
aam
mov
mov
push
cld
aam
gs
push
mov
rcrl
mov
call
sub
adc
mov
push
cld
mov
mov
jne
push
daa
mov
daa
pop
adc
in
cmp
inc
out
xor
push
push
add
push
push
icebp
pop
mov
mov
stc
fisubl
push
mov
push
inc
leave
cwtl
daa
dec
and
aad
push
mov
mov
add
clc
mov
mov
mov
mov
mov
add
add
addl
mov
push
clc
clc
clc
mov
mov
xorl
add
inc
mov
mov
add
mov
mov
dec
mov
mov
dec
add
mov
mov
push
mov
mov
dec
clc
mov
clc
dec
mov
add
mov
cmovne
add
clc
add
add
mov
mov
mov
inc
dec
jns
mov
cmovne
push
inc
push
push
push
clc
andnps
mov
xorl
mov
push
clc
dec
inc
dec
add
mov
dec
addl
add
mov
clc
dec
push
mov
add
push
mov
dec
mov
inc
movzwl
addl
jns
mov
mov
inc
push
push
mov
dec
mov
inc
add
psubb
mov
push
push
mov
inc
xorl
mov
add
add
jns
mov
dec
cmovne
clc
mov
dec
inc
mov
push
add
add
add
addl
add
mov
dec
mov
mov
push
dec
add
push
mov
add
inc
andnps
mov
mov
inc
add
mov
clc
clc
inc
add
clc
cmovne
clc
mov
inc
mov
clc
add
dec
mov
dec
dec
movzbl
dec
mov
mov
mov
inc
mov
add
mov
add
addl
mov
add
push
add
inc
mov
mov
push
orl
mov
mov
mov
swapgs
inc
mov
add
mov
add
cmovge
mov
mov
orl
mov
mov
add
inc
mov
push
mov
add
dec
mov
cmp
jnp
dec
add
mov
add
clc
add
mov
andnps
mov
dec
add
mov
inc
dec
add
mov
clc
mov
mov
xorl
mov
cmovge
orl
psubb
lmsw
add
mov
clc
mov
clc
mov
mov
dec
dec
add
mov
push
inc
mov
addl
push
mov
add
mov
mov
mov
add
mov
cmovne
dec
add
mov
dec
mov
push
mov
mov
mov
cmp
inc
mov
clc
psubb
dec
mov
add
mov
add
clc
addl
mov
mov
psubb
mov
mov
mov
push
mov
addl
mov
mov
clc
mov
add
push
mov
mov
mov
inc
mov
dec
mov
inc
dec
inc
jnp
andnps
mov
add
add
dec
mov
jns
orl
add
mov
mov
mov
mov
add
clc
jnp
mov
push
mov
dec
mov
add
clc
jno
jnp
mov
mov
push
clc
mov
clc
dec
mov
mov
add
mov
add
add
jno
mov
addl
add
andnps
inc
movzwl
mov
xorl
mov
jnp
add
adcl
mov
mov
inc
clc
inc
add
clc
sgdtl
mov
jns
orl
add
mov
mov
inc
dec
add
mov
mov
inc
addl
mov
clc
clc
push
dec
add
mov
add
inc
mov
add
inc
mov
push
inc
add
mov
mov
mov
mov
add
mov
mov
mov
dec
inc
dec
push
dec
inc
dec
cmovne
add
inc
push
mov
add
mov
clc
inc
andnps
ret
add
mov
inc
cmovge
dec
mov
dec
dec
add
dec
mov
mov
inc
add
mov
clc
mov
add
mov
mov
inc
add
clc
dec
dec
xorl
mov
addl
cmovne
add
mov
mov
orl
add
mov
mov
mov
mov
mov
inc
clc
inc
push
mov
push
mov
clc
orl
mov
mov
orl
add
orl
add
movzbl
mov
mov
add
dec
mov
dec
add
mov
addl
movzbl
mov
add
mov
mov
mov
andnps
clc
xorl
add
clc
mov
clc
push
add
clc
clc
dec
jnp
mov
mov
add
add
inc
clc
orl
mov
inc
dec
cmp
dec
mov
mov
mov
add
mov
mov
mov
dec
inc
clc
movzbl
mov
mov
mov
mov
clc
add
inc
mov
jns
mov
add
mov
push
inc
add
push
mov
mov
mov
add
clc
mov
mov
jns
add
mov
add
mov
mov
mov
inc
push
mov
addl
clc
mov
mov
inc
mov
mov
mov
mov
mov
clc
addl
add
push
jno
add
inc
mov
mov
dec
mov
mov
jns
dec
add
clc
add
add
clc
dec
mov
mov
push
mov
mov
mov
mov
orl
clc
dec
mov
clc
mov
add
mov
mov
mov
dec
cmovge
clc
mov
mov
mov
mov
cmovge
add
mov
mov
mov
add
add
mov
cmovge
inc
clc
push
psubb
mov
add
mov
push
mov
mov
mov
mov
dec
add
push
add
add
jns
cmovne
add
orl
mov
add
dec
mov
clc
clc
mov
mov
add
mov
add
andnps
psubb
add
clc
mov
mov
clc
mov
add
mov
mov
add
add
mov
inc
mov
add
push
str
mov
mov
mov
clc
cmovne
mov
cmovne
add
mov
mov
mov
mov
add
mov
mov
add
add
add
inc
clc
mov
movzbl
clc
mov
inc
mov
clc
clc
clc
add
dec
add
xorl
mov
add
mov
sldt
push
mov
push
mov
mov
mov
jns
add
jno
mov
add
mov
dec
mov
mov
clc
mov
mov
push
add
push
inc
addl
mov
add
inc
ja
push
mov
mov
clc
mov
dec
clc
dec
orl
inc
mov
mov
add
add
mov
mov
push
mov
mov
add
add
inc
mov
mov
mov
mov
mov
clc
xorl
clc
inc
mov
mov
add
mov
mov
mov
movzbl
mov
movzwl
dec
add
mov
dec
andnps
movzbl
mov
mov
mov
push
inc
add
inc
add
dec
mov
inc
mov
mov
clc
dec
mov
mov
mov
add
xorl
mov
mov
clc
clc
mov
mov
push
mov
mov
mov
movzbl
inc
mov
add
inc
mov
mov
clc
mov
dec
mov
clc
dec
push
orl
addl
mov
mov
mov
mov
dec
inc
sldt
clc
mov
jnp
mov
push
inc
mov
dec
mov
inc
mov
inc
mov
orl
add
push
mov
mov
dec
jns
dec
lldt
inc
mov
mov
add
mov
mov
inc
add
sldt
push
dec
mov
add
dec
mov
mov
add
mov
orl
inc
clc
dec
mov
mov
add
clc
push
jnp
add
mov
add
mov
clc
mov
dec
add
add
cmovge
mov
cmp
mov
mov
clc
mov
mov
mov
movzbl
mov
dec
andnps
mov
push
mov
addl
mov
clc
jns
inc
mov
dec
mov
addl
orl
mov
add
add
mov
add
push
addl
mov
mov
inc
jno
psubb
dec
add
mov
add
push
inc
xorl
mov
inc
inc
mov
cmovne
inc
push
add
adcl
add
mov
inc
dec
dec
dec
add
push
mov
mov
add
add
dec
inc
mov
push
mov
mov
inc
psubb
mov
push
mov
movzbl
mov
jns
jns
clc
mov
mov
add
add
mov
inc
clc
push
push
inc
clc
inc
push
mov
add
mov
inc
inc
clc
addl
clc
cmp
push
inc
orl
adcl
push
cmp
add
andnps
cmovge
mov
inc
mov
push
mov
add
push
inc
clc
mov
add
adcl
dec
dec
addl
add
inc
mov
mov
mov
mov
mov
add
addl
push
mov
push
dec
mov
add
add
mov
psubb
add
push
mov
mov
inc
mov
mov
jno
mov
mov
cmovge
xorl
dec
add
clc
mov
inc
add
inc
dec
mov
push
mov
add
mov
dec
add
add
mov
add
mov
mov
add
push
dec
add
mov
add
mov
mov
dec
push
mov
sldt
mov
add
inc
clc
inc
push
inc
mov
clc
mov
mov
dec
mov
str
add
mov
mov
mov
mov
dec
clc
add
mov
push
adcl
add
mov
inc
add
mov
dec
push
addl
inc
push
mov
add
mov
add
xorl
andnps
mov
add
mov
mov
mov
mov
andnps
clc
mov
mov
mov
mov
mov
mov
clc
push
add
add
clc
mov
clc
add
dec
clc
inc
add
mov
dec
add
mov
mov
mov
mov
add
dec
inc
mov
add
psubb
orl
add
orl
mov
mov
clc
mov
dec
inc
mov
clc
push
mov
dec
dec
dec
mov
andnps
add
inc
mov
clc
clc
push
clc
push
mov
mov
mov
psubb
mov
push
add
addl
addl
inc
mov
mov
mov
add
dec
dec
mov
mov
inc
clc
psubb
add
mov
add
mov
mov
push
clc
mov
push
clc
mov
mov
clc
add
mov
add
add
dec
add
clc
inc
clc
dec
mov
add
mov
orl
mov
push
mov
mov
inc
mov
adcl
swapgs
mov
pfrcpit2
mov
addl
mov
add
mov
psubb
push
dec
mov
mov
mov
inc
inc
push
push
push
mov
dec
addl
mov
add
mov
xorl
xorl
jno
inc
add
clc
mov
dec
mov
mov
orl
mov
addl
inc
cltd
inc
inc
addps
loope,pn
mov
aad
insb
int
sarb
jae
pop
fsubr
mov
jmp
pop
sbb
mov
insb
mov
cmpsb
out
sbb
xchg
sub
js
jp
cwtd
pop
xor
push
movsl
push
leave
imul
fwait
xor
iret
inc
cltd
xchg
fsubs
dec
cmpsl
dec
xor
cmpsl
xchg
push
jns
push
cmc
inc
sub
xchg
into
ficoml
std
jmp
push
cmp
test
clc
lahf
in
mov
test
add
shrl
subl
gs
cmp
adc
push
sahf
mov
mov
fnstsw
hlt
mov
enter
popa
out
jp
xor
pop
shll
push
jae
pop
hlt
int
cli
dec
es
popa
xlat
stos
mov
lods
mov
imul
fisubs
mov
in
scas
adc
dec
jmp
add
lea
cmpsb
bound
daa
inc
add
and
fiaddl
data16
pop
mov
cmc
pop
bound
testl
sbb
mov
pop
add
jle
dec
push
test
add
sbb
sti
out
sti
cld
sahf
adcb
xchg
xchg
test
repz
dec
fdivrl
push
stos
out
fidivl
mov
outsl
push
je
stc
push
push
ss
push
or
cmp
addr16
inc
scas
sub
inc
aad
stos
mov
xchg
xor
xorl
xor
mov
push
lcall
pop
outsl
mov
sti
test
roll
stos
jae
jae
xchg
fnstcw
mov
insl
out
mov
push
jne
add
rclb
mov
jno
ficoml
je
shrl
imul
and
arpl
pop
jle
sbb
popa
ret
add
jb
mov
outsl
in
stos
ds
out
dec
testb
test
aas
scas
xlat
add
jl
ja
mov
mov
dec
or
or
add
dec
push
xorl
jne,pn
pop
pop
push
jge
ror
enter
sbb
mov
or
shrl
loopne
dec
pusha
andb
loope
ljmp
xor
test
cs
in
adc
inc
jp
stc
lret
sbb
repz
dec
out
xchg
pop
dec
rcll
pop
pop
jmp
cmc
mov
xor
mov
and
popf
mov
pop
mov
and
cmp
push
out
cmpsb
loop
and
xchg
ret
sahf
and
icebp
cs
mov
aaa
jmp
and
lock
lods
or
jecxz
das
mov
sub
leave
mov
daa
insl
mov
rcll
push
jg
lea
adc
insb
outsl
push
mov
xchg
imull
inc
xor
jle
pop
jae
pop
lock
movsl
adc
mov
hlt
ss
pop
xor
scas
mov
jge
mov
adc
pop
aaa
inc
cmp
stos
mov
mov
pop
xchg
jge
jmp
leave
in
mov
aas
sbb
mov
mov
jne
mov
pop
or
mov
insb
stos
cmp
cmp
xor
adc
sar
mov
jle
repnz
push
pop
mov
inc
or
les
shl
cmc
xchg
sub
mov
or
jg
lock
leave
aas
fstl
iret
sub
xor
cmp
imull
enter
mov
in
sbbb
lahf
xchg
insl
ja
sti
or
gs
shrl
push
lods
pop
mov
in
mov
sub
pop
movsb
adc
pop
outsb
ficomps
cmp
xchg
inc
outsb
pop
sub
cld
mov
mov
xor
fstpt
movsb
popf
daa
push
sub
ds
inc
ljmp
movsl
pop
sub
iret
pop
cmp
fnstcw
mov
sbb
aad
in
push
lret
dec
imul
push
adc
int
aad
cmp
adc
xchg
lods
xlat
xchg
test
mov
jge
sub
dec
sbb
mov
pop
stos
daa
shrb
idivl
popa
lcall
add
xchg
test
xchg
out
fnstenv
push
jmp
mov
sbb
daa
andb
ret
testb
xchg
xchg
pusha
push
out
and
stos
mov
outsl
shll
movsb
ret
mov
mov
add
xchg
mov
pop
pop
lods
jb
popa
dec
sbb
mov
mov
adcb
out
sti
jno
jmp
xchg
mov
mov
adc
insb
mov
cld
mov
adc
jp
sub
lds
xlat
inc
int3
fistpl
into
aad
int3
aas
push
fstpl
sub
mov
sbb
dec
xor
xor
test
mov
lods
push
mov
inc
pop
sub
addr16
jae
cmp
lods
adc
adc
sbb
rcl
scas
jmp
add
in
push
daa
xor
pop
add
jno
or
lods
fsubrs
adcb
in
push
jecxz
idiv
ja
push
outsb
push
enter
mov
ret
cmpsb
mov
or
mov
les
adc
cmp
out
sbbb
push
fwait
loop
push
mov
pop
pop
jg
daa
mov
call
pop
mov
pushf
fnstcw
sbb
pop
xor
es
ret
xor
inc
loopne
inc
xchg
mov
jecxz
inc
std
inc
loope
inc
cmp
outsl
sbb
or
cmc
mov
aam
xor
and
test
imul
mov
ljmp
scas
repnz
outsl
dec
sub
lcall
dec
les
mov
fiaddl
fdiv
nop
fcompl
jae
add
push
or
out
fidivl
sbb
xchg
sbb
add
mov
push
pop
push
pop
mov
arpl
hlt
sbb
aam
lret
sarb
adc
mov
dec
jl
jg
lea
xor
outsl
movsl
push
xor
mov
pop
inc
fnstsw
xor
cltd
adc
jp
leave
mov
les
cwtl
cmp
hlt
lcall
push
repnz
ja
scas
jae
sub
cltd
jmp
adc
xchg
movsb
pop
cmp
orb
jg
imull
in
jmp
enter
mov
push
imul
cmp
sub
sbb
sbb
lret
rorl
pop
shll
inc
mov
or
shrb
mov
sbb
lret
jb
dec
lret
repnz
sub
adc
mov
pushf
scas
cmpsb
mov
das
and
mov
fcmovu
ficomps
out
cld
ja
loop
out
cmp
out
pop
ljmp
js
xchg
cmp
adc
inc
push
in
or
dec
pop
sub
and
int3
cmp
jg
mov
sub
xchg
cld
in
push
out
dec
xchg
jb
ret
jns
mov
pushf
clc
sti
repnz
fmuls
cmp
add
fsubl
cmp
xor
ret
sub
mov
mov
adc
in
stos
cs
inc
pop
adc
imul
push
adc
cmp
enter
movsl
iret
jp
sbb
mov
cli
filds
pop
pop
mov
pushf
adc
nop
jle
pop
push
rcl
insb
mov
clc
idivb
adc
cmpsb
lret
repz
jge
leave
jl
test
pop
mov
and
jge
icebp
cmp
loope
jb
into
jnp
mov
inc
push
js
push
add
xor
fisttps
test
xchg
sub
cmp
in
shl
mov
into
jno
fs
movsl
mov
inc
xchg
dec
sti
stos
or
mov
push
scas
push
sbb
popa
fsts
test
out
mov
xchg
ja
addr16
bound
ficompl
xchg
lods
mov
addb
push
out
out
adc
es
dec
ljmp
mov
lock
pop
cmpsb
push
ja
mov
bound
or
mov
pop
jb
sub
pushf
in
add
xchg
addr16
jl
movl
push
mov
aad
out
or
or
jecxz
das
inc
mov
mov
fildl
addl
insl
fld
push
out
and
call
sti
add
scas
shr
dec
dec
xchg
stc
fstpt
push
xchg
pop
out
pop
mov
mov
outsb
call
push
sbb
dec
frndint
mov
mov
dec
loopne
add
pusha
jmp
and
jp
sbb
cmp
stc
imul
call
bound
sub
sbb
lcall
xchg
lods
aas
jo
mov
rcrb
pop
loop
jmp
xlat
xor
outsl
int
push
mov
mov
cmpsl
jge
les
pop
xchg
mov
pop
nop
xor
sub
sub
and
sbb
js
mov
cmp
jle
xchg
mov
sbb
mov
mov
push
mov
lods
fisttps
push
int3
mov
mov
add
xor
jns
jns
fisttpll
loop
push
test
sahf
jbe
or
inc
cltd
arpl
xlat
shll
mov
rolb
loop
int3
mov
mov
mov
int
pop
lret
lods
jb
outsl
fcmovbe
dec
xchg
cmpsb
stos
mov
addb
dec
stos
jae
pop
test
sub
out
pusha
dec
sbb
jl
fucom
sbb
and
decb
xchg
ret
ss
xlat
outsb
dec
and
test
call
mov
mov
scas
xchg
into
push
shl
test
xor
jo
jmp
mov
push
push
dec
mov
add
add
insl
jno
inc
jno
or
iret
scas
jae
std
xor
aam
notl
jmp
inc
jecxz
test
pop
jecxz
cmp
mov
cli
pop
mov
adc
inc
sub
xor
outsb
mov
mov
push
scas
hlt
cwtl
push
lods
cltd
lret
fcomps
jno
gs
rcll
out
pop
fwait
les
xchg
pop
add
stc
scas
ljmp
adc
dec
mov
mov
ja
mov
es
push
stc
fimull
mov
inc
jmp
daa
mov
xchg
mov
pop
in
mov
jle
jo
push
xchg
mov
test
sahf
arpl
pop
sbb
iret
test
mov
cltd
fucomip
adc
jb
mov
inc
mov
int
loop
add
pusha
jns
repz
pop
popa
jge
icebp
std
add
es
mov
ja
daa
das
out
icebp
dec
insb
push
sahf
lock
les
mov
pop
mov
xchg
rclb
mov
jno
and
sub
aam
xchg
lret
stos
xchg
insb
std
mov
rolb
mov
xor
mov
pop
xchg
je
dec
sub
jmp
loopne
sbb
sub
jnp
js
repnz
and
sbb
daa
or
and
sti
int3
int3
or
lods
outsl
pop
adc
pop
adc
push
mov
pop
orl
stos
xchg
arpl
loopne
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
push
push
push
call
pop
push
push
call
fldl
add
pop
ret
push
mov
test
je
cmpb
je
push
call
push
push
push
call
push
push
push
call
add
mov
mov
test
jl
cmp
jl
mov
mov
push
call
push
push
push
call
push
push
push
call
add
pop
ret
cmpl
jle
push
pushl
call
pop
pop
ret
mov
mov
mov
and
ret
call
test
jne
ret
push
pushl
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
xor
push
push
push
push
push
pushl
lea
xor
push
lea
push
call
mov
add
test
je
mov
mov
mov
jmp
lea
push
lea
push
call
pop
test
pop
jne
cmp
jne
mov
test
jne
cmp
jne
or
mov
mov
mov
sub
mov
pop
pop
mov
mov
fldl
pop
fstpl
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
call
call
mov
call
fnclex
ret
ret
mov
movl
mov
movl
movl
movl
mov
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
movl
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
je
movl
mov
jmp
sub
jmp
andl
movl
or
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
jne
movl
or
jmp
test
je
xor
jmp
or
jmp
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
testb
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
orl
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
decl
inc
add
mov
fmull
inc
add
mov
les
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
popl
add
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
nop
inc
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
nop
inc
add
nop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
push
cltd
pop
idiv
push
mov
mov
cltd
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmpl
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cltd
pop
idiv
mov
mov
cltd
idiv
lea
push
push
pop
push
pop
sub
shl
push
pushl
call
add
dec
js
lea
test
je
push
push
pushl
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
andl
lea
push
mov
pop
cltd
idiv
push
mov
mov
cltd
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
pushl
call
pop
test
pop
jne
push
pushl
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmpl
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cltd
mov
movl
idiv
mov
mov
cltd
idiv
andl
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
decl
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
andl
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzwl
mov
and
mov
mov
mov
mov
movzwl
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
pushl
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
pushl
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
pushl
orb
lea
push
call
mov
add
add
push
jmp
pushl
mov
andb
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsbl
sub
je
dec
dec
je
sub
jne
jmp
push
movl
pop
jmp
andl
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
mov
jmp
incl
mov
inc
jmp
cmp
jne
mov
jmp
cmpl
mov
mov
jne
cmp
jne
decl
mov
inc
jmp
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
decl
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsbl
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmpl
je
movsbl
lea
sub
mov
je
dec
dec
jne
orl
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
movl
xor
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
movsbl
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmpl
mov
je
push
pop
cmp
jbe
cmpb
jl
incb
mov
mov
dec
incl
jmp
mov
cmpl
jbe
dec
cmpb
jne
decl
incl
jmp
lea
push
lea
pushl
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
movl
mov
mov
mov
mov
cmpl
je
xor
mov
mov
xor
movl
jmp
cmp
jge
movl
jmp
pushl
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
movl
jmp
cmpl
je
xor
xor
xor
xor
movl
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
dec
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
add
xchg
inc
add
xchg
inc
add
in
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
ret
push
mov
sub
fldl
fstpl
fldl
fstpl
fldl
fdivl
fmull
fsubrl
fstpl
fldl
fcompl
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsbl
push
call
cmp
pop
je
inc
cmpl
jle
movsbl
push
push
call
pop
pop
jmp
movsbl
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fldl
fcompl
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmpl
pushl
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
cmpb
push
push
je
mov
mov
xor
mov
test
setg
push
xor
cmpl
sete
add
push
call
pop
pop
jmp
mov
push
push
fldl
fstpl
call
mov
mov
push
mov
lea
push
xor
cmpl
sete
xor
test
setg
add
add
push
call
add
cmpl
mov
jne
movb
inc
test
jle
mov
push
lea
mov
mov
mov
pop
mov
xor
push
cmp
sete
add
add
push
call
cmpl
pop
pop
mov
je
movb
mov
inc
cmpb
je
mov
dec
jns
neg
movb
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
add
mov
pop
pop
pop
ret
cmpb
push
push
mov
push
push
je
mov
mov
mov
cmp
jne
xor
cmpl
sete
add
add
mov
movb
andb
jmp
mov
push
push
fldl
fstpl
call
mov
mov
push
mov
add
push
xor
cmpl
sete
add
push
call
add
cmpl
mov
jne
movb
lea
mov
test
jg
push
push
call
pop
movb
pop
inc
jmp
add
test
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmpb
je
neg
jmp
neg
cmp
jl
mov
push
push
call
push
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
fldl
fstpl
call
mov
mov
dec
mov
mov
xor
cmpl
push
push
sete
add
mov
push
call
mov
add
mov
dec
cmp
setl
mov
mov
dec
cmp
mov
jl
cmp
jge
test
je
mov
inc
test
jne
and
push
pushl
push
call
add
jmp
pushl
push
pushl
push
call
add
pop
pop
pop
pop
ret
pushl
movb
pushl
pushl
pushl
call
andb
add
ret
pushl
movb
pushl
pushl
call
andb
add
ret
push
mov
cmpl
je
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
pop
ret
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
movl
ret
mov
mov
ret
cmp
jb
cmp
movl
jbe
movl
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
jne
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
andb
lea
mov
jmp
andl
movl
or
pop
pop
pop
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
push
mov
sub
mov
push
xor
push
test
push
movl
mov
je
mov
movb
jmp
andb
movl
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
je
movl
mov
jmp
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
movl
jmp
movl
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
orb
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
andl
movl
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
andb
mov
jne
test
je
testb
je
push
push
push
call
add
cmp
mov
jne
cmpl
je
jmp
andb
lea
push
push
push
call
add
test
jne
cmpb
jne
pushl
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmpb
jne
testb
je
mov
orb
lea
mov
pop
pop
pop
leave
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
stos
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
stos
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
inc
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fsubrs
inc
add
lods
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
inc
add
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shrb
add
lods
inc
add
lods
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
movl
mov
mov
mov
jbe
push
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
andl
andl
movsbl
mov
lea
push
push
call
add
incl
decl
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
addl
mov
mov
jmp
mov
test
jne
push
call
addl
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
lea
mov
mov
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
pop
cmpw
jg
cmpw
jg
addl
cmpw
jge
movswl
neg
add
mov
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
andl
and
add
andl
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sarl
and
cmp
je
lea
cmpw
lea
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
fstcw
pushl
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
pushl
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzwl
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
movb
test
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
andb
test
jl
cmpb
jl
dec
cmpb
jne
movb
jmp
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
push
push
push
sub
mov
movsl
movsl
movsw
call
mov
add
movsbl
mov
pop
movswl
mov
movl
mov
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzwl
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
push
call
pop
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
testb
je
add
jmp
orl
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
addl
lea
lea
mov
cmp
jae
andb
orl
movb
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
andl
movl
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
andl
movl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
testb
lea
je
mov
ret
andl
movl
or
ret
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
pushl
call
mov
pop
andl
inc
cmp
jl
mov
pop
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmpl
mov
je
mov
pop
pop
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
andb
test
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
testb
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmpl
jne
movl
or
pushl
push
call
pop
pop
jmp
jge
push
pushl
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
movl
call
mov
push
pushl
push
call
add
mov
pop
jmp
movl
or
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
andl
mov
cmpl
mov
je
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
call
test
jne
call
push
pop
cmp
jne
movl
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
andl
movl
or
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
sub
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
mov
test
jne
test
jne
cmp
jne
andw
movb
movb
movb
jmp
cmp
jne
mov
movw
cmp
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
pop
movb
pop
andl
jmp
push
lea
push
call
pop
movb
pop
jmp
movzwl
mov
mov
shr
imul
shr
andw
push
lea
mov
imul
mov
lea
mov
sar
mov
movswl
neg
push
lea
push
call
add
cmpw
jb
lea
inc
push
lea
push
call
pop
pop
testb
mov
je
mov
movswl
add
test
jg
jmp
mov
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
andb
add
add
incl
decl
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmpb
jne
movb
dec
jmp
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
andb
mov
pop
pop
pop
leave
ret
cmp
jb
cmpb
jne
dec
jmp
cmp
jae
andw
movb
movb
movb
andb
push
pop
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
mov
andl
pop
pop
ret
mov
cmp
jae
mov
mov
sar
and
mov
testb
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
movl
or
ret
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmpl
jne
or
neg
sbb
mov
and
add
pop
ret
movl
jmp
movl
or
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
int3
jmp
xchg
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
data16
add
add
mov
add
sahf
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
and
add
xor
add
fildl
add
add
pop
fildl
add
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
faddl
add
add
xor
add
inc
faddl
add
add
pop
faddl
add
add
js
add
mov
add
mov
faddl
add
add
out
faddl
add
fldl
add
fldl
add
fldl
add
add
push
add
jl
add
mov
add
lcall
add
add
loopne
add
repnz
add
fiadds
add
fiadds
add
fiadds
add
add
xor
add
inc
fiadds
add
add
pusha
fiadds
add
add
or
add
cmp
add
inc
jb
add
jb
add
insb
gs
insb
and
je
and
jno
outsb
arpl
add
inc
imul
jns
outsb
outsl
je
gs
jo
jns
inc
jne
arpl
outsb
and
je
imul
outsb
je
add
add
dec
outsl
and
imul
jbe
imul
inc
imul
je
outsl
and
add
add
jae
jne
arpl
fs
fs
outsl
arpl
popa
jbe
imul
gs
insb
je
je
outsl
and
add
add
inc
outsl
insl
popa
imul
jb
add
add
outsl
imul
jo
jo
add
and
outsb
jns
insb
imul
gs
fs
and
insb
and
jae
gs
add
add
jbe
insb
imul
add
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
and
and
add
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
outsl
outsl
and
outsb
jns
outsl
jo
outsb
and
insb
gs
imul
gs
add
add
jbe
insb
imul
outsb
je
add
add
and
imul
jns
add
je
popa
and
arpl
jns
dec
outsl
and
arpl
fs
arpl
add
jo
outsl
jo
jb
insb
imul
imul
je
add
jae
jne
arpl
fs
arpl
push
outsb
imul
outsb
and
jb
jb
add
inc
popa
and
fs
jae
add
jb
imul
fs
imul
outsl
je
outsb
outsl
jne
push
arpl
add
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
add
dec
outsl
and
imul
gs
gs
add
and
insb
and
arpl
jo
outsl
jb
inc
js
arpl
outsw
jb
popa
je
gs
outsl
jb
add
inc
jb
and
je
je
outsl
and
add
add
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
add
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
add
and
arpl
jo
outsl
arpl
jae
dec
outsl
and
arpl
imul
and
arpl
jns
add
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
jb
jb
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
ljmp
lcall
add
add
add
lock
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
sub
xor
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
incl
mov
inc
add
pushl
mov
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
jo
add
lret
add
rolb
add
add
mov
add
ret
add
flds
add
flds
add
flds
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
data16
add
add
mov
add
sahf
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
and
add
xor
add
fildl
add
add
pop
fildl
add
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
faddl
add
add
xor
add
inc
faddl
add
add
pop
faddl
add
add
js
add
mov
add
mov
faddl
add
add
out
faddl
add
fldl
add
fldl
add
fldl
add
add
push
add
jl
add
mov
add
lcall
add
add
loopne
add
repnz
add
fiadds
add
fiadds
add
fiadds
add
add
xor
add
inc
fiadds
add
add
pusha
fiadds
add
add
add
add
fldl
dec
outsl
jbe
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
stc
add
jb
popa
je
add
jne
inc
gs
gs
imul
jle
inc
js
je
push
add
loopne
inc
gs
outsl
outsb
jae
insb
gs
jne
jae
jb
outsb
outsw
add
icebp
add
outsb
push
gs
popa
jo
outsl
jb
inc
add
jecxz
dec
jne
inc
imul
gs
imul
popa
je
add
or
inc
gs
js
je
outsl
fs
push
add
push
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
outsb
fs
imul
gs
add
ja
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
cmp
inc
jb
popa
je
dec
popa
jb
dec
imul
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
je
add
inc
push
dec
outsb
outsw
add
push
gs
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
imul
gs
gs
jne
arpl
add
inc
add
gs
je
dec
jne
gs
add
add
inc
insb
insb
outsl
arpl
outsb
jae
insb
add
hlt
add
insb
jae
imul
add
gs
je
inc
jbe
outsb
je
add
add
je
gs
jo
popa
je
inc
add
movsl
add
push
gs
popa
insb
jne
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
ljmp
imul
outsb
addr16
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
ret
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cltd
add
popa
jo
insb
insb
outsl
arpl
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
popf
add
popa
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
je
popa
insb
inc
jb
add
jo
jb
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
jo
gs
insb
insb
outsl
arpl
sahf
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
sbb
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
lods
add
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
insl
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
das
add
insb
push
outsb
ja
outsb
fs
add
insb
je
inc
jns
gs
outsl
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
add
push
push
gs
imul
gs
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
jb
popa
je
inc
imul
gs
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
jl
push
gs
je
dec
popa
outsb
fs
add
popa
add
je
outsb
fs
inc
imul
gs
fs
imul
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
jne
push
inc
jne
data16
mov
inc
add
add
add
add
push
mov
add
jle,pt
add
add
add
add
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
mov
inc
add
jge
add
jge
add
inc
add
inc
add
inc
add
inc
add
aam
add
roll
fcom
inc
add
roll
mov
inc
add
inc
add
add
inc
add
inc
add
roll
and
inc
add
roll
add
inc
add
rolb
in
inc
add
rolb
rolb
mov
inc
add
rolb
pop
rolb
and
inc
add
inc
add
rolb
and
inc
add
rolb
clc
roll
in
roll
inc
add
roll
and
inc
add
inc
add
roll
push
roll
cmp
inc
add
roll
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
fcom
inc
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
aad
add
add
add
add
add
inc
add
add
add
inc
add
add
add
aad
add
add
add
aam
add
add
mov
add
add
add
add
add
add
add
add
add
je
inc
add
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
shll
inc
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
mov
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
mov
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
add
add
sbb
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
rolb
insl
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
cmp
arpl
imul
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
cmp
jae
arpl
imul
and
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
