push
push
push
push
movl
call
mov
xor
mov
imul
add
mov
call
mov
sub
call
movzwl
add
mov
shl
shr
xor
xor
xor
mov
inc
cmp
jl
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
push
call
push
push
push
mov
call
add
pushl
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
add
inc
add
adc
call
adc
fcoms
inc
add
adc
enter
rclb
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
inc
add
adc
inc
adc
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
adc
or
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pop
adc
adc
insb
adc
je
inc
add
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
adc
rclb
inc
add
adc
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
pushl
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
cmp
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jae
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
xor
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
int3
cmp
aam
inc
add
cmp
in
inc
add
cmp
hlt
cmp
cld
cmp
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
cmp
inc
cmp
push
cmp
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
jmp
clc
pop
add
push
pop
add
sub
add
inc
pop
add
push
pop
add
fs
add
je
add
sbbb
mov
add
pop
add
enter
aam
add
in
add
cli
pop
add
push
pop
add
xor
add
add
bound
add
add
mov
add
pop
add
ret
add
pop
add
ficomps
add
pop
add
clc
pop
add
or
add
pusha
add
es
add
xor
add
add
dec
pusha
add
push
pusha
add
push
add
jp
add
xchg
add
pusha
add
pusha
add
loopne
add
lock
add
push
popa
add
push
popa
add
sub
add
popa
add
dec
popa
add
pop
popa
add
add
add
call
adc
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
js
inc
add
add
add
add
mov
and
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
ljmp
xor
push
jb
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
mov
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
dec
inc
inc
add
inc
inc
add
inc
inc
inc
add
inc
inc
add
call
inc
inc
add
add
add
jmp
add
inc
add
add
add
inc
dec
inc
add
dec
inc
add
add
add
add
mov
pop
inc
add
add
add
add
xor
add
pop
add
add
add
pop
add
push
pop
add
sub
add
inc
pop
add
push
pop
add
fs
add
je
add
sbbb
mov
add
pop
add
enter
aam
add
in
add
cli
pop
add
push
pop
add
xor
add
add
bound
add
add
mov
add
pop
add
ret
add
pop
add
ficomps
add
pop
add
clc
pop
add
or
add
pusha
add
es
add
xor
add
add
dec
pusha
add
push
pusha
add
push
add
jp
add
xchg
add
pusha
add
pusha
add
loopne
add
lock
add
push
popa
add
push
popa
add
sub
add
popa
add
dec
popa
add
pop
popa
add
add
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
push
jns
je
insl
push
imul
dec
inc
dec
xor
cs
insb
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
push
add
popa
jo
insb
insb
outsl
arpl
scas
add
imul
jae
cwtl
add
je
jb
arpl
fs
jae
add
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
xchg
add
imul
mov
inc
gs
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
popa
je
add
jbe
push
imul
jb
add
dec
gs
jo
jb
add
jae
push
imul
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
dec
add
fs
imul
add
cmc
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
insb
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jne
jb
add
adc
dec
gs
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
push
dec
add
rolb
gs
jns
je
insl
push
imul
insb
gs
imul
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
add
insb
add
je
outsl
arpl
gs
outsb
outsw
inc
add
jns
push
imul
jb
je
arpl
mov
push
jns
je
insl
dec
outsb
outsw
add
add
and
add
aaa
inc
add
mov
in
mov
stos
int
lahf
jl
ds
add
sub
gs
inc
lcall
fimuls
fistl
cmpl
pop
nop
adc
imul
mov
add
cmc
xor
inc
jbe
lcall
add
push
sub
pop
and
cwtl
es
test
mov
insb
mov
addr16
add
insl
aaa
jecxz
in
cmpsl
aad
fwait
adc
rcrl
push
xor
add
fs
icebp
loope
shll
mov
lods
xchg
test
or
mov
into
shlb
popf
pop
std
movsl
mov
enter
pop
cmp
in
adc
mov
or
mov
jne
ljmp
xor
jecxz
mov
dec
cmp
jns
in
out
mov
xlat
mov
sbb
adc
pop
or
sti
outsb
jmp
call
cwtl
nop
add
push
aas
shll
fisttpl
ds
sbb
repnz
scas
test
sub
xchg
mov
and
cwtl
jno
inc
sbb
pop
and
js
fucom
adc
sub
stos
scas
mov
lods
bound
dec
repnz
je
lds
jl
stos
loop
jge
jbe
mov
subb
pop
sub
jne
fcomip
outsb
repz
mov
test
sbb
shlb
sbb
in
and
or
pop
fists
pop
push
std
and
or
push
je
inc
pusha
out
nop
xchg
or
jle
sub
pop
sub
dec
mov
pusha
les
nop
imul
test
icebp
sbb
adc
jg
orl
rcrl
sbb
xor
and
sbb
data16
ret
add
jns
or
sbb
sub
jo
mov
xor
or
test
cli
mov
xlat
inc
dec
lret
push
imul
leave
adc
inc
in
push
pop
nop
sbb
arpl
aaa
xorb
xchg
jge
push
inc
insl
pop
and
fadd
aad
pop
in
push
int
xor
fs
xchg
cmovo
js
sub
mov
sub
nop
jnp
xor
out
cmove
inc
orl
mov
cmc
mov
iret
hlt
repnz
in
and
sub
stc
sub
fld
mov
cmp
pop
mov
mov
ret
imul
or
js
mov
pushf
mov
cli
inc
dec
das
push
push
push
push
aaa
stc
fisubs
cmp
add
call
xor
xchg
cmp
imul
out
xlat
or
popf
push
mov
fisubl
cmc
sbb
dec
pop
movsb
aam
in
dec
adc
out
fisubs
shrb
push
jle
jp
push
aas
data16
jb
mov
add
or
mov
test
and
sbb
ljmp
and
and
pop
pop
add
sbb
xor
sbb
inc
mov
and
in
int
in
inc
ret
and
ljmp
clc
adc
popa
iret
inc
imull
repz
sub
mov
sbb
shll
and
and
inc
adc
adc
test
lods
ret
fadds
outsb
sbb
ds
lea
xchg
lods
xor
scas
je
das
add
xchg
cwtl
andb
or
test
ljmp
or
call
mov
jle
mov
jb
sbb
hlt
and
and
mov
rorl
adcb
xor
pop
negb
stos
jecxz
xchg
pop
xchg
dec
pop
push
ljmp
int3
clc
and
gs
fistpl
xchg
jno
xchg
and
aaa
cmpsb
jnp
lock
mov
inc
cwtl
loopne
iret
dec
jno
add
cmp
mov
loope
mov
imul
fidivrl
pop
scas
mov
ds
cwtl
mov
xlat
cmp
pop
add
cmp
cs
aad
xor
int
call
xor
das
xchg
xchg
scas
push
mov
dec
and
xchg
arpl
mov
in
imul
jno
into
lret
cwtl
mov
xchg
inc
push
stos
dec
imul
inc
push
clc
xchg
popf
aaa
ficompl
lods
fwait
sysenter
jb
lcall
xchg
jle
adc
mov
ret
xchg
mov
inc
inc
int3
jns
and
fwait
xchg
cmpl
adc
fadds
leave
xor
or
adc
xchg
outsl
xchg
test
dec
sub
xchg
inc
pop
rclb
cs
fcomp
jnp
insl
sub
dec
in
cmp
out
jg
or
rcrl
fwait
insb
ja
fwait
mov
inc
stos
dec
fwait
int3
movsb
movb
sub
fiadds
jmp
xchg
dec
pop
cmp
mov
jbe
push
cli
xor
mov
add
sahf
and
xchg
ja
mov
stc
cld
fisttps
cmc
jp
push
add
inc
xchg
insb
daa
sub
push
xchg
test
xchg
lock
cmp
or
mov
cmp
test
adc
jne
or
xchg
sub
xchg
roll
mov
leavew
mov
mov
aad
mov
or
nop
dec
sub
test
sub
jne
insl
push
xorb
pop
sbb
lahf
xchg
adc
clc
je
arpl
pop
scas
fldcw
xchg
clc
cmp
repnz
jle
mov
sahf
fld
gs
inc
arpl
or
jnp
rorb
arpl
add
nop
push
sbb
sbb
xlat
jmp
test
gs
xor
jle
sub
data16
into
in
push
pop
lock
mov
std
xchg
add
loop
xchg
jno
nop
aad
mov
xchg
mov
das
stos
outsb
xor
jle
or
inc
notl
dec
fmuls
les
xchg
cmp
mov
ret
jb
jp
adc
cs
dec
sbb
jge
ljmp
dec
movsl
xchg
sarb
jbe
adc
addr16
pop
jns,pn
mov
andb
add
sub
fcmovbe
mov
movsl
cmpsl
jb
cld
pop
daa
sub
daa
sarb
mov
mov
mov
call
mov
pop
mov
jnp
push
into
ror
imul
cmp
xchg
stc
int3
xorl
movsb
mov
push
cmpsb
xor
fs
ljmp
mov
movsl
sarb
pop
or
and
test
ss
dec
movsl
xchg
bound
mov
jnp
aad
fnstenv
xchg
sahf
or
cmpsb
dec
mov
cmp
pop
in
sbb
jno
mov
adc
jns
inc
rorb
sbb
sub
sti
dec
cmp
fcoml
pop
roll
shld
mov
jg
imull
push
gs
jmp
jo
cli
popf
pop
js
std
adc
add
mov
clc
cmp
mov
fmul
xchg
int3
pop
scas
nop
fadd
mov
cmovnp
sbb
movsl
mov
cmpsl
adc
stos
test
pop
gs
shlb
mov
fsubl
pop
bswap
fbstp
add
aaa
popf
push
dec
xor
xor
or
or
shrb
mov
dec
loopne
and
push
insl
addr16
push
ljmp
adc
dec
xchg
data16
out
mov
lods
mov
mov
popa
cmp
jle
stos
jae
aas
es
jg
xor
xchg
in
clc
xor
shlb
inc
or
fcoms
lods
pushf
test
mov
sarb
lods
outsl
rcll
sub
dec
or
mov
mov
lods
bound
xlat
imul
xchg
enter
cli
fadd
mov
or
sarl
sahf
call
mov
mov
popl
add
insl
push
mov
mov
inc
jecxz
xchg
mov
or
xchg
or
in
or
mov
sub
int
mov
sub
mov
dec
cli
pop
xor
pop
ss
dec
je
mov
filds
nop
add
in
pop
movsl
cmp
movsb
mov
div
pop
out
or
push
cwtl
add
movsl
and
rol
mov
jmp
lret
mov
pusha
dec
sub
pusha
cwtl
mov
les
mov
insb
popa
addl
ds
mov
incl
movsb
xchg
icebp
or
sbb
mov
insl
sbb
xchg
cli
mov
cmp
xor
jnp
xor
lret
and
cmpb
enter
mov
adc
fwait
push
adc
rorb
pop
add
stc
je
pop
in
in
sub
xchg
mov
sbb
add
fistl
sbb
mov
cmp
shll
mov
or
jle
and
mov
imul
pop
outsl
xchg
out
in
ret
mov
aas
out
loop
pusha
sbb
cmc
in
in
sbb
sub
mov
daa
loope
mov
xchg
lret
xlat
push
fdivl
stos
or
jb
jmp
xlat
or
and
js
pop
movl
cmpl
dec
mov
fwait
dec
mov
jle
jg
adc
movsl
push
sahf
pcmpeqw
inc
jno
insl
pop
sub
jne
and
imul
push
adc
pop
xor
ds
or
test
imul
jno
sub
dec
xchg
sub
es
rcll
lret
shll
adc
or
and
aas
incb
pop
inc
daa
and
jp
lds
dec
and
add
insb
xchg
loopne
jle
add
mov
pop
cmc
mov
pop
dec
push
add
ss
push
sub
xor
adc
sti
cmp
jno
insl
das
sub
std
xchg
daa
jo
inc
dec
and
inc
call
jle
xchg
aaa
and
mov
mov
loopne
fldcw
xor
push
inc
popf
lea
rcll
lret
std
inc
add
add
jne
push
test
xor
inc
xlat
movsl
push
jmp
call
pop
es
and
aaa
test
mov
dec
call
jbe
jmp
popf
hlt
outsb
mov
xchg
popa
popa
imul
iret
adc
cld
in
test
jecxz
jp
or
mov
in
jno
or
dec
jecxz
movsl
xor
cmp
outsb
ljmp
lahf
negl
mov
fcmovu
jl
test
xchg
pop
mov
scas
mov
lret
lock
in
lds
ds
ret
adc
in
xor
sbb
and
aaa
iret
add
and
mov
popa
sar
lret
cltd
sub
pop
hlt
js
inc
mov
jge
arpl
jb
add
cmc
sbb
call
push
push
adc
aam
pop
fisttps
in
dec
ror
orps
out
jae
sub
testb
add
xchg
mov
out
es
jg
divb
ss
bound
out
or
cmp
lods
icebp
sbb
push
sbb
sub
add
xor
xor
mov
test
fisubrs
dec
fldcw
lea
cli
xlat
dec
push
je
and
cli
imul
fldt
fisttpll
mov
fwait
inc
mov
push
mov
jne
cmp
icebp
aaa
out
fadds
push
add
daa
add
lret
xor
ss
loopne
rorb
in
iret
ja
nop
adc
push
data16
mov
out
jne
sbb
and
lods
mov
aam
rcll
mov
add
lcall
std
out
je
hlt
or
stos
out
cmpsb
push
xlat
iret
scas
test
sub
and
int3
push
jbe
mov
pop
inc
mov
sub
pop
arpl
inc
into
rcr
cmp
movsb
call
pop
mov
into
xchg
inc
mov
je
push
or
cmpps
fucomi
loop
in
add
aas
push
loopne
in
iret
push
push
and
lods
dec
std
icebp
pushf
daa
cmp
inc
leave
mov
or
aaa
loop,pt
das
xor
sub
pop
adc
pop
fisubrs
cmp
lcall
std
and
mov
and
loopne
mov
mov
std
jmp
jg
lahf
int
jle
jl
mov
cmp
fxch
addr16
bound
mov
fadds
push
lahf
or
cltd
jge
addr16
lahf
cmp
ret
xor
mov
jmp
cmpsb
pop
loop
adc
mov
cmp
pop
dec
or
orb
xorl
jle
addr16
sub
dec
cmpsb
mov
mov
outsl
pop
adc
cli
sbb
xor
push
add
sub
pop
addr16
test
add
dec
fcompl
insb
push
ljmp
push
mov
jle
imul
divl
mov
or
mov
jle
lahf
sub
adc
test
inc
fwait
and
mov
ret
push
into
mov
loope
add
jle
call
jno
push
aaa
pop
loopne
cmp
clts
in
loop
ret
pop
inc
adc
repz
mull
jecxz
movsb
mov
push
sbb
sbbl
mov
loope
shrl
dec
mov
jle
out
fwait
js
out
lea
ret
push
and
fdivr
aas
jecxz
out
inc
and
or
iret
ds
fs
xchg
scas
mov
cltd
xchg
fiaddl
push
aas
mov
push
sbb
mov
xor
sahf
xchg
and
add
and
cld
add
pop
ret
into
jne
jecxz
lods
sbb
cmp
loop
imul
ret
pop
mov
insb
push
jo
cmpsb
aaa
das
into
test
push
pop
fists
roll
inc
mov
pop
add
mov
cmp
loope
sbb
or
mov
lahf
mov
mov
or
jo
push
mov
out
adc
dec
or
sbb
inc
test
fst
dec
icebp
xchg
lcall
les
push
arpl
xchg
subb
outsl
filds
xchg
xlat
push
jge
jnp
cmp
adc
jle
cmpsl
pop
loope
inc
outsb
push
loop
test
and
cltd
add
mov
imul
add
scas
int3
inc
jecxz
push
jge
push
mov
push
out
cmpsl
iret
jns
push
andb
push
pop
add
and
inc
nop
iret
sahf
insl
jle
xor
sbb
xchg
mov
xorb
imul
in
push
outsb
std
popl
les
mov
fs
out
nop
mov
and
in
loopne
xor
and
or
xchg
push
lds
mov
xor
daa
or
scas
dec
pop
cmpb
addr16
dec
sahf
test
dec
cmp
jbe
daa
push
sahf
hlt
sbb
mov
mov
sbb
loop
pop
add
das
mov
mov
jb
aas
notl
mov
sbb
fsts
ljmp
scas
pmullw
fs
in
add
jl
data16
test
push
mov
push
cli
cwtl
sarl
in
imul
xchg
js
sahf
push
add
in
cs
incb
xchg
push
xor
inc
call
cltd
adc
or
aad
mov
adc
mov
mov
pusha
or
mov
mov
pop
stc
sub
cmp
xchg
xchg
xchg
popf
adc
cmp
xchg
call
lahf
orl
imul
pop
int
dec
mov
ja
mov
xchg
loope
adc
and
and
fwait
call
movsb
jmp
push
andl
pop
sub
scas
mov
nop
add
mov
sub
push
mov
shrl
outsl
and
push
iret
add
mov
lods
sbb
inc
icebp
xor
sub
jno
stos
fsubr
sbb
inc
movsb
cmp
inc
xor
jne
mov
imul
loope
subl
inc
sub
cmp
leave
gs
push
data16
cmpsb
push
imul
loopne
iret
test
test
out
daa
insb
adc
out
stc
jno
sbb
xchg
mov
jl
add
add
mov
adc
mov
sbb
jnp
mov
pop
cmp
jl
adc
aaa
add
inc
mov
push
mov
xor
lods
xor
ret
sbb
inc
pop
jg
dec
lea
in
jg
xchg
aaa
add
into
dec
jno
movsb
stos
je
pop
pop
pusha
ret
les
jle
pusha
loop
sub
mov
mov
push
lock
add
je
push
mov
dec
pop
xchg
inc
mov
fildll
mov
mov
popf
scas
ficoms
les
ret
xor
popf
outsl
jmp
rcrb
dec
mov
loop
cmp
movsb
sarl
pop
xchg
jmp
lock
pslld
xor
cmp
pop
pusha
ds
lock
bound
shrb
lods
ret
loope
inc
adc
push
aad
adc
inc
mov
pushf
sub
in
mov
add
fiadds
mov
sbb
arpl
outsl
ljmp
xlat
dec
xchg
loope
test
pop
out
frstor
xchg
jne
aad
sbb
cmp
idivl
or
addb
imul
lahf
push
sbb
in
popa
outsl
xor
dec
xchg
pushf
adc
loop
leave
les
mov
lahf
inc
lahf
jno
xchg
cmpsb
push
repnz
pushl
test
dec
in
sub
xor
mov
scas
jecxz
int3
test
mov
repz
sbb
fnsave
fistps
sbb
xor
sbb
mov
dec
jno
icebp
andl
das
jo
rorl
int3
clc
dec
mov
pop
mov
movsb
js
push
push
imul
mov
pop
movsb
pop
jae
movsl
sbb
pop
lea
imulb
push
adc
or
arpl
nop
adc
rcr
ret
sbb
imul
in
loop
subb
mov
pop
xchg
xlat
lret
or
sbb
mov
mov
mov
pop
jl
movsl
inc
fwait
rdtsc
mov
lcall
shll
pusha
fld
stc
mov
nop
add
cmp
loope
push
ds
jbe
fs
lret
add
pushf
movb
decl
xchg
fcoml
pop
psllw
xchg
mov
jg
xlat
push
insl
xor
push
mov
inc
push
inc
enter
in
fstps
cmp
nop
rcl
ret
imul
cli
sbb
hlt
or
in
push
sub
or
push
xor
adc
insl
popf
jg
sahf
mov
in
pop
leave
push
mov
int3
jo
fs
daa
iret
sub
rcl
jp
outsl
cmp
mov
aaa
cli
pop
ja
sub
cmp
adc
pop
pop
daa
int
sub
loop
popf
repnz
cmp
clc
enter
adc
mov
dec
mov
fistl
arpl
or
das
dec
rolb
test
push
rcrl
and
mov
lret
insb
jle
sti
adc
lahf
mov
sbb
push
ljmp
out
inc
daa
or
xchg
push
lahf
or
xor
jae
inc
movsb
rorb
inc
dec
jge
notl
sub
push
sbb
nop
mov
jge
lret
sbb
mov
dec
push
das
cwtl
dec
in
sarl
mov
lds
and
sub
sub
sti
outsl
cmc
jb
sti
pop
mov
ja
mov
fnsave
loope
cmpl
lods
or
fld
mov
add
movsl
push
xor
mov
xchg
jle
hlt
mov
imul
mov
push
mov
jp
fmulp
jmp
sub
sub
mov
or
imul
arpl
adc
cmp
mov
mov
jns
jge
pop
cmc
adc
outsb
xchg
popa
out
sub
lds
lock
pop
jb
cmp
popf
mov
fnsave
int3
ja
adc
ret
mov
push
xchg
repnz
mov
lods
sub
insl
mov
inc
jae
fldcw
pop
add
fs
or
lock
mov
inc
aad
xor
out
clc
leave
lcall
inc
xor
push
mov
xor
scas
push
imul
cmp
ret
add
or
jge
push
sbb
lret
mov
popf
icebp
mov
sub
mov
bound
cmp
jnp
mov
out
outsb
xchg
push
push
jle
out
enter
sub
pop
mov
js
cli
sbb
adc
ds
movsb
cwtl
xchg
loop
xor
fistps
out
fnstenv
scas
and
xchg
lods
mov
mov
xchg
and
stos
push
mov
call
mov
rcll
mov
mov
jmp
sysret
in
js
test
xchg
div
inc
in
push
outsl
pop
push
pop
mov
mov
dec
insl
xor
nop
jmp
push
int3
jns
and
and
sbb
iret
lods
adc
das
rorl
push
es
jnp
dec
push
jb
das
arpl
cli
aam
rorb
mov
pushf
shlb
jmp
sbb
push
add
sbb
mov
scas
xor
cmp
pop
lods
mov
pop
and
loop
mov
or
sub
shll
mov
loop
ja
xor
adc
repz
push
addb
aas
mov
and
lcall
mov
cmc
push
xchg
push
cmp
mov
fbstp
or
dec
imul
jne
and
sbb
mov
push
pop
sub
mov
lcall
mov
mov
shl
push
jmp
cmp
cmp
cmpsb
test
aam
adc
test
stos
jl
stos
rclb
pop
call
cmp
sahf
pop
mov
push
push
mov
cwtl
push
add
jno
fstp
sbb
loopne
subl
adc
pushf
mov
and
test
mov
cmc
sub
stc
leave
cmpsl
jo
leave
repz
outsb
imul
gs
ret
sbb
push
sbb
inc
jmp
pop
jmp
dec
sbb
dec
in
sbb
mov
fimuls
xchg
in
mov
push
add
push
cwtl
add
sub
in
sub
sbbl
sahf
xor
or
popa
fstpt
fidivrs
xor
outsb
inc
lret
test
stos
and
repz
mov
cmp
cltd
inc
and
or
mov
ds
cli
xchg
add
dec
adc
into
js
fistl
sbb
pop
xchg
pop
pushf
jle
jp
and
add
loopne
mov
push
shrb
push
leave
cmp
mov
fisttpll
sbb
xchg
cmp
pop
dec
jecxz
lods
cmpsb
cmp
cmp
push
cmc
stos
aam
test
sbb
lahf
push
int3
push
popf
jbe
and
adc
repz
and
sub
sbb
jb
in
fsubs
mov
std
mull
xor
jg
pop
jne
ret
arpl
imul
cltd
ds
js
mov
leave
in
mov
popa
mov
jae
push
imul
and
xor
sbb
stos
push
mov
mov
inc
jne
jnp
repnz
mov
push
mov
dec
in
sbbb
icebp
lds
dec
xchg
mov
xorb
or
mov
shll
mov
popa
test
fwait
out
jb
frstor
into
jmp
push
ss
sub
gs
add
and
xchg
mov
jae
out
mov
and
dec
pop
add
or
imul
jnp
push
hlt
imul
push
jbe
jg
cmp
xor
out
or
inc
into
int
push
mov
jmp
orb
dec
test
setbe
ror
sub
pop
imul
mov
movsb
insb
xor
cli
out
jge
jo
imul
sub
je
xchg
sub
xor
ja
add
mov
es
push
fsqrt
mov
pop
pop
insl
add
xchg
inc
xchg
test
out
and
adc
cltd
pop
in
inc
lahf
ljmp
out
sub
pop
gs
pop
dec
cld
xor
lcall
add
test
in
push
es
stos
adc
mov
push
scas
testl
inc
fistl
fstpl
stos
mov
imul
rorb
fsubrp
cmp
pusha
mov
ret
in
dec
lret
xlat
dec
jmp
ljmp
pusha
and
aam
fimuls
repnz
jo
mov
fwait
lods
rolb
jb
xor
or
jl
mov
mov
pusha
lds
jl
cmp
popa
mov
repnz
cmp
jnp
push
lods
arpl
jle
mov
or
es
add
cmpsl
hlt
sbbb
mov
movsb
outsb
lret
cld
aas
mov
mov
lret
es
in
dec
pop
outsb
xchg
shrl
dec
popl
out
mov
mov
jp
mov
and
xor
fists
add
fisttps
push
leave
das
cmpsl
ficomps
insb
aad
mov
mov
roll
inc
fwait
mov
pop
xor
movb
cmp
and
subb
jp
mov
xchg
sbb
xchg
dec
mov
add
sub
push
popf
pop
enter
daa
and
daa
sti
add
in
sbb
ficoms
in
dec
call
or
sar
stc
mov
xor
insb
clc
dec
adc
loop
lods
xchg
dec
mov
push
and
cmp
scas
fstl
popa
pop
imul
push
inc
lret
jb
sub
inc
stc
adc
lahf
cld
jle
cmpsb
push
adc
pop
call
mov
or
enter
pop
insb
test
mov
iret
test
mulb
outsb
ljmp
je
pop
mov
fiadds
xor
nop
xor
sbb
ds
pop
cli
mov
leave
add
test
xor
adc
xchg
adc
xor
iret
sbb
xor
test
je
and
shll
jecxz
mov
test
ss
dec
cltd
fidivrs
mov
testl
loopne
push
mov
and
outsl
push
sbb
negl
decb
cltd
and
pop
fldt
push
and
sbb
push
fldl
pop
cmc
mov
outsb
loopne
iret
sti
cltd
in
jl
sub
mov
mov
pop
pushf
enter
sbb
jecxz
out
test
push
ljmp
out
jecxz
faddl
fimuls
xor
push
xchg
decb
xor
pop
mov
pop
sbb
data16
pop
push
xor
int3
mov
jmp
outsb
lods
arpl
mov
push
jge
loope
xor
cmc
lret
xchg
in
push
push
sbb
xchg
inc
pop
xor
inc
jae
out
jns
push
xor
sbb
xor
sub
xchg
in
rclb
dec
fsts
add
mov
mov
bound
sub
cltd
push
xor
aas
mov
push
dec
jo
fiadds
imul
rorl
mov
inc
or
or
mul
mov
or
aam
jmp
and
adc
adc
movsl
or
pop
outsl
dec
insl
shll
cmpsb
fbld
pop
loop
push
lcall
insl
outsb
sub
stos
push
jle
xchg
out
jle
xchg
mov
push
dec
jl
sub
in
stos
cli
movsb
test
ja
adc
xchg
cmp
sub
loopne
pop
mov
fistl
jo
push
xor
test
push
ds
fstps
xor
sub
xor
cmp
clc
mov
pop
out
pop
xor
loope
push
jnp
mov
xchg
std
or
pop
adc
cs
pop
sti
pop
push
fsincos
mov
mov
xchg
inc
int
sub
mov
repnz
sbb
push
setne
push
incl
fyl2xp1
mov
xchg
xor
pop
or
mov
rcr
subb
lea
push
lock
cmp
fimuls
insb
lcall
or
scas
inc
jmp
mov
cwtl
dec
sti
stos
cmpsl
push
adc
pushf
jbe
sub
hlt
stos
add
xchg
xor
cmp
pop
or
aas
or
push
xchg
pop
enter
pop
test
mov
push
jmp
cmc
loop
ljmp
inc
mov
dec
divb
mov
adc
les
fldenv
sti
das
pop
cmpsb
pop
and
cmpsb
sub
cmp
jne
add
sub
mov
jns,pn
inc
lods
lea
mov
mov
das
jp
and
pop
int3
mov
xchg
fnsave
pop
ss
addr16
mov
pop
lods
sbb
aad
imul
lods
or
fcmove
negl
mov
cmp
cmp
sarl
fists
and
dec
ja
das
push
aaa
push
mov
jne
leave
pop
testl
adc
shl
and
addl
adc
cmpsb
imul
fnstsw
sub
sub
ljmp
push
jnp
push
mov
lods
cmovbe
test
das
jb
je
add
rcr
inc
in
sub
xor
mov
jae
cmp
cmp
lret
fstl
aad
jg
cltd
push
das
sahf
pop
add
dec
adc
lcall
clc
adc
mov
adc
add
fucom
adc
mov
cwtl
mov
sbb
fldenv
push
loop
lods
pop
aad
adc
sbb
enter
dec
loopne
pop
loopne
push
xchg
or
sbb
push
add
rorl
xchg
mov
test
jb
adc
int3
lods
sahf
adc
cmp
sbb
test
stc
leave
dec
ljmp
mov
rcrl
push
mov
jns
ds
out
inc
sbb
clc
jbe
mov
js
xchg
jb
xor
sub
adc
fnstsw
xor
jle
psrld
clc
ret
les
cltd
sub
jnp
mov
rclb
arpl
aam
orb
sub
pop
xor
cltd
push
jge
push
jo
outsl
mov
fstps
lahf
sub
fs
aaa
faddp
cmp
inc
cmpsl
inc
insl
loopne
cmp
test
or
insl
sub
mov
loop
sub
daa
or
inc
popf
pop
dec
cmp
mov
push
jp
dec
popf
jecxz
jb
imul
adc
les
jmp
dec
aad
fcoms
xlat
outsl
push
pop
pop
ret
fstps
add
rolb
out
loop
pop
pop
rcll
call
push
push
ret
add
nop
mov
lretw
jo
mov
sbb
and
mov
or
xlat
scas
pop
cli
lods
aam
push
icebp
test
stos
adc
and
dec
lahf
jl
dec
mov
mov
pushf
sbb
push
sbb
leave
dec
daa
or
fwait
push
repnz
je
mov
xchg
outsb
loope
inc
add
mov
mov
inc
data16
xchg
psubsb
mov
fwait
nop
inc
test
jecxz
or
jnp
loope
pop
xor
sahf
sub
inc
cwtl
push
xor
inc
inc
jle
xchg
mov
mov
fwait
push
or
jp
popa
add
mov
sbb
sub
mov
imul
scas
jle
and
and
dec
sub
push
sub
mov
xchg
mov
xchg
cmp
test
int
call
lock
aas
sub
fwait
push
adc
out
lcall
insl
lret
adc
movsb
inc
stc
adc
fidivrl
push
push
mov
icebp
loope
imul
adc
xchg
jns
int
repz
ljmp
xor
test
dec
mov
and
fldcw
pop
pop
mov
push
pop
cmp
in
sub
psrlq
pop
rclb
leave
push
jmp
clc
pop
push
repnz
and
dec
loope
inc
scas
lea
call
sub
pop
loope
pop
div
cmpl
pop
dec
test
mov
pusha
in
loop
push
ret
push
or
or
jae
xchg
sbb
xchg
inc
mov
aad
add
lret
jnp
sub
mov
das
lock
push
dec
mov
inc
and
jns
outsl
mov
insb
adc
pop
mov
pusha
test
dec
pop
mov
shrl
pop
ja
mov
imul
sub
mov
and
jno
fisubl
adc
adc
pop
nop
pop
adc
rclb
lret
pop
ret
dec
sub
xchg
pop
lcall
or
int3
push
cmp
adc
out
enter
lcall
lods
and
aad
pushf
clc
mov
lret
fcmovnb
adc
fs
add
pop
repz
mov
call
push
out
mov
nop
xor
lea
insl
push
inc
and
shrb
sahf
cmp
xchg
inc
rclb
dec
iret
cmc
jmp
clc
or
adcl
cli
mov
popa
jp
pop
or
int3
aam
jge
cmpsb
cli
pop
dec
inc
addr16
loop
fadd
sarl
push
jae
sbb
adc
insb
push
push
gs
jmp
nop
cmpl
mov
push
in
push
xor
imul
dec
push
dec
and
fbld
cltd
ja
adc
loope
lahf
mov
aad
dec
das
loop
push
and
push
dec
xchg
lret
out
mov
cltd
dec
push
nop
leave
dec
mov
fstl
dec
push
les
mov
or
fadd
jg
lods
loopew
and
jo
js
mov
movsl
fdivs
ja
cmp
fidivrs
add
lret
and
jne
sub
mov
xchg
gs
add
jg
pop
int3
repnz
mov
iret
cmpsl
mov
mov
or
leave
xchg
mov
insb
shl
mov
dec
into
or
jle
ds
rcrl
mov
xor
inc
xchg
sahf
lds
push
mov
dec
pop
dec
sbb
jbe
and
rcl
push
and
cli
insb
or
ret
pusha
jae
dec
inc
xchg
mov
xor
scas
sbb
int3
rolb
insb
out
aam
inc
ja
mov
out
mov
cwtl
inc
ss
and
sub
jno
add
mov
jne
jle
mov
mov
jno
aas
adc
push
rorl
sub
add
dec
in
cmp
data16
pop
or
iret
cmp
movsb
add
into
jecxz
movsb
mov
shll
out
pop
adc
mov
xchg
xchg
in
adc
mov
fildl
mov
add
movsb
sarl
mov
stos
xor
loopne
call
add
lea
cli
cmc
mov
sahf
mov
clc
divb
mov
std
rol
in
push
pusha
fucomi
call
mov
dec
adc
hlt
sbb
sub
pop
mov
sub
and
cs
jnp
add
xchg
imul
pop
insb
jnp
push
cs
mov
cmp
jg
cmp
push
cmp
mov
bsr
cmp
shl
adc
jbe
jb
cmp
data16
push
ljmp
shll
dec
or
in
pop
mov
daa
imul
lahf
jmp
xchg
outsl
cwtl
mov
daa
mov
pushf
aad
imul
imul
push
aam
addr16
mov
or
fdecstp
xlat
fsubrl
pop
or
aas
addr16
bound
testl
imul
push
sbb
arpl
pop
addl
jl
popa
lods
and
std
cli
imul
icebp
cltd
push
inc
mov
mov
fnsave
shrl
mov
or
iret
adc
js
hlt
testb
cltd
adc
hlt
mov
mov
pop
xor
push
mov
push
pushf
ret
subb
inc
iret
add
jb
and
push
jne
add
sbb
bound
and
rolb
rolb
movsb
ljmp
subl
and
push
jl
xor
ss
das
test
psubq
pop
in
popa
mov
pushf
push
adc
sub
je
cmp
cmp
inc
pop
std
push
mov
shlb
popf
push
sahf
inc
cltd
lret
shl
sub
xchg
test
gs
das
js
inc
or
mov
rcll
movsl
cmp
pop
cltd
jp
shlb
push
mov
in
out
lods
enter
fwait
sub
or
jle
push
in
cld
les
jge
push
adc
pop
cmp
test
adc
dec
and
and
inc
lds
lret
dec
xchg
adc
cs
pop
inc
push
xor
or
out
out
cmp
cmp
loopne
hlt
xor
xor
in
push
ret
sub
ret
loopne
shrb
hlt
adc
ficomps
cmp
mov
sub
andl
push
push
rcr
das
mov
fidivs
out
enter
rorb
test
xor
sub
mov
adc
push
jnp
mov
movsl
add
addr16
push
nop
inc
js
aam
adc
or
je
mov
and
scas
lock
mov
ret
jbe
xor
mov
nop
and
imul
xchg
mov
inc
push
mov
and
js
lods
inc
adc
and
cmp
add
cld
mov
cmc
dec
mov
lods
pop
sti
jecxz
sbb
add
outsl
dec
je
mov
mov
add
sarb
mov
aaa
xchg
hlt
cmp
shlb
and
pop
mov
es
cmp
incb
lret
push
xor
imul
loopne
incb
ss
es
dec
mov
scas
dec
mov
push
sbb
inc
rclb
pop
aad
xorb
or
mov
aam
jns
mov
jmp
cmp
or
push
adc
std
xchg
adc
cmc
cltd
ret
fisubs
adc
add
repnz
sbb
jno
out
xlat
mov
add
cmp
outsb
dec
fnstcw
add
fs
xchg
leave
or
fs
arpl
mov
repnz
xor
pop
call
stos
es
lock
jns
gs
mov
mov
jge
ret
flds
adc
fwait
popf
pop
roll
mov
mov
and
popf
adc
cmp
xor
jnp
push
push
pop
sete
outsl
out
or
repnz
popf
rorl
dec
pop
rorb
movsl
push
inc
fists
sbb
inc
pop
andl
cwtl
loopne
fcoml
adc
mov
add
xlat
xlat
jmp
lock
jb
mov
cld
stos
adc
lcall
mov
scas
call
jl
daa
dec
lcall
subb
adc
mov
mov
call
pop
leave
mov
xchg
aas
sub
aas
sbb
out
push
mov
bound
das
es
and
xchg
mov
or
add
scas
popa
jmp
lods
push
mov
or
fisttpll
adcl
cmp
fnstcw
sub
sub
movsl
scas
imul
adc
push
rcll
xor
int
xchg
cs
cmp
mov
push
imul
or
inc
mov
mov
stos
in
jp
mov
shrl
xchg
cmp
dec
lret
fs
decb
daa
daa
jns
push
add
repnz
inc
sub
and
xor
cmp
into
int3
and
call
ja
xchg
outsl
dec
popa
out
movsl
cmp
xor
cld
adc
pop
jmp
push
aaa
pop
or
dec
mov
xchg
cltd
in
jb
sub
repz
inc
cwtl
cmp
loopne
dec
mov
add
dec
test
pushf
in
mov
cwtl
fwait
jnp
stos
enter
rclb
mov
push
pop
or
add
aad
mov
lods
imulb
shl
and
xchg
jmp
mov
adc
xlat
out
jne
lret
das
add
cmp
xchg
cld
mov
in
adcb
addl
mov
jl
cmp
jno
mov
int3
mov
iret
xor
push
jo
push
mov
push
call
adc
push
insb
repnz
test
sub
cmp
cmc
negb
or
xchg
sub
mov
adc
pop
repz
mov
sahf
cmc
mov
add
outsl
jge
mov
pop
mov
pop
mov
dec
add
lea
imul
sub
dec
ljmp
or
dec
repnz
lock
arpl
das
jae
call
sub
sbb
push
xor
out
jno
pop
fmul
sbb
pop
out
mov
add
or
ret
xchg
push
push
mov
jl
cmp
xchg
cwtl
icebp
push
lock
mov
push
js
hlt
jne
rcl
leave
pop
mov
das
les
data16
mov
or
testb
outsl
leave
outsl
mov
shll
adc
mov
jne
std
and
sub
jp
pop
lcall
adc
inc
jl
jb
xchg
ss
fimull
dec
add
scas
xor
js
js
sub
cmp
lods
inc
mov
push
notb
pop
sarl
sub
mov
jmp
pusha
adc
mov
xchg
mov
hlt
cli
mov
sub
out
push
lea
and
clc
call
mov
ljmp
inc
mov
jmp
clc
or
in
pop
mov
or
in
mov
xor
mov
aas
push
mov
pop
push
jo
lret
movsb
add
ret
lds
pop
inc
push
mov
mov
mov
aam
aas
mov
pushf
pop
bound
xchg
icebp
std
or
mov
xchg
outsl
test
and
or
add
icebp
lea
sbb
jb
adc
mov
out
sbb
imul
pop
movsl
cli
addb
mov
add
lcall
or
jbe
mov
orb
into
xor
faddp
push
jp
cld
mov
mov
and
inc
xchg
addr16
lock
sbb
arpl
ja
bnd
fldl
daa
and
cmp
fcmovnbe
sbb
rcll
imul
jg
aam
es
adc
push
mov
pusha
jmp
andb
mov
xchg
enter
data16
fwait
xchg
mov
sub
inc
inc
pushf
in
lea
and
fdivrs
pusha
xchg
xor
sub
mov
sbb
push
sar
dec
lods
je
loope
sub
xchg
sbb
mov
fstps
adcl
js
pop
jb
or
mov
pop
sub
xor
call
js
aaa
mov
dec
xor
mov
dec
ds
mov
or
sbb
mov
pop
cmpsl
stos
pusha
mov
test
jmp
je
mov
cwtl
cmp
mov
int
mov
jmp
pop
jbe
dec
sub
jecxz
dec
popa
lret
lods
xchg
cli
push
rol
push
mov
adc
jnp
xchg
push
dec
xor
pusha
cmp
cs
data16
push
loopne
hlt
test
mov
cld
dec
sub
out
or
cmpsl
fdivs
shlw
adc
jmp
es
inc
or
out
lods
and
or
adc
lret
add
jnp
mov
shll
aam
cmp
push
outsl
cli
lds
push
lods
and
pop
out
sahf
cmp
fcmovbe
mov
cld
xor
outsb
js
mov
addr16
push
and
out
xor
arpl
adc
pop
cmp
inc
add
mov
inc
repz
dec
dec
lret
or
jae
jge
cld
mov
mov
mov
mov
fnstcw
insl
push
sbb
hlt
enter
cltd
mov
sub
push
jo
int3
inc
lret
insl
pop
xchg
ret
and
xor
stos
test
add
loopne
bound
add
push
mov
sbb
cmpsl
push
add
std
es
shrb
xchg
mov
adc
sub
aaa
mov
shr
repz
cmc
imul
out
jecxz
add
inc
daa
iret
fsts
lods
popf
mov
mov
rcr
icebp
and
mov
cmpsl
out
push
mov
dec
je
or
mov
cmp
mov
js
pop
mov
pop
add
xor
jne
cmp
aad
bound
stos
test
sbb
mov
mov
sbb
rorb
dec
ss
sti
fsubl
push
sbb
xor
dec
mov
inc
mov
in
int
mov
pop
pop
xchg
adc
cmp
scas
dec
mov
shl
loopne
scas
push
out
hlt
cwtl
jns
icebp
fidivl
in
out
inc
push
cmp
mov
dec
ss
sbb
insb
xchg
jne
ja
sti
push
in
aaa
jo
sub
leave
insl
and
xchg
mov
gs
mov
jno
adc
push
cmp
popa
lahf
decl
or
lret
mov
mov
aam
stc
or
pop
data16
js
aam
cwtl
dec
cmp
orb
sub
sub
push
das
inc
pop
call
sub
pop
dec
orb
stos
mov
cmp
push
and
stos
inc
add
mov
xchg
mov
xchg
stc
xchg
ja
xor
hlt
and
ret
jae
xor
xor
lods
pushl
out
or
and
filds
insl
stc
daa
fwait
xor
in
mov
les
xor
imul
jns
jecxz
lock
push
mov
xor
insb
stos
fstpt
lods
mov
or
popf
or
mov
xor
sti
dec
sbb
shlb
mov
repz
setg
rcl
cwtl
fbstp
in
sub
push
sahf
mov
scas
cmpsb
scas
mov
xlat
fistl
mov
mov
icebp
adc
popa
enter
inc
inc
les
mov
iret
sub
mul
mov
mov
lock
and
insl
scas
mov
and
jb
sub
fistps
aam
aaa
inc
mov
ret
mov
jecxz
add
cld
mov
in
or
cld
pop
mov
push
cmp
mov
dec
lcall
xchg
aam
cmp
inc
jmp
rcll
cmp
dec
sbb
dec
xor
jge
add
fldt
xchg
pushf
mov
or
xor
and
je
movsl
stos
movsl
mov
sbb
aas
push
cmp
push
pushf
pop
imul
test
call
jne
roll
loop
js
sub
loope
cmp
addb
jo
nop
cmpsl
push
ret
xor
sbb
dec
in
or
push
dec
and
jle
in
arpl
push
pop
adc
push
xlat
lahf
bound
mov
dec
mov
dec
sub
cmp
adc
imul
sbb
inc
iret
jecxz
mov
or
dec
xlat
stc
cld
mov
pop
sbb
dec
fcompl
xor
inc
int3
mov
insb
daa
add
inc
popf
sahf
cmp
jmp
mov
push
mov
pop
dec
jmp
daa
inc
leave
cmp
push
pop
outsl
jb
xchg
and
ljmp
ret
int
mov
pop
xor
pop
test
icebp
das
adcb
lea
lret
pop
cmp
outsb
dec
jp
mov
dec
lea
jae
inc
cmpsl
out
adc
xchg
je
stc
mov
inc
pushf
dec
ss
popl
and
pop
sbb
cmc
ss
mov
mov
push
ret
jne
rolb
pop
jo
sub
sub
mov
cltd
jns
mov
add
dec
sbb
mov
xchg
jecxz
pop
xchg
xor
adc
push
clc
xchg
pop
shl
cmp
pop
sahf
mov
and
pop
scas
nop
data16
sub
mov
lods
inc
mov
leave
mov
mov
test
sbb
imul
ss
lock
fsubrl
insb
nop
in
lret
pop
add
es
cltd
stc
inc
ret
inc
jo
sti
lock
jmp
das
arpl
cmp
jae
ret
jecxz
aaa
xchg
mov
lods
outsb
xchg
pop
loope
ret
loopne
mov
mov
mov
ss
ja
daa
pushl
jg
fiaddl
mov
add
in
xchg
lea
add
xchg
fsub
xlat
lret
ljmp
inc
inc
jle
int
mov
ret
lahf
ret
sbb
inc
enter
or
adc
dec
lods
push
dec
mov
add
into
or
jo
lock
shrl
adc
test
jle
test
stos
jg
mov
cmpsl
test
jl
mov
lds
aam
push
movsl
mov
jnp
mov
in
in
jbe
mov
test
ja
push
mov
or
sub
lods
fdivl
jecxz
pop
xchg
jmp
addr16
pop
dec
or
lock
xchg
ret
adc
mov
lret
or
adc
cmp
hlt
push
jb
adc
sub
xor
fst
or
xor
cmc
mov
ret
pop
mov
test
dec
scas
incb
inc
sti
nop
add
clc
lds
push
lods
fstpl
inc
xor
iret
cmp
jnp
cmpl
mov
les
add
sub
je
scas
imul
jbe
dec
push
arpl
stos
push
jae
stc
push
pop
sub
and
mov
and
pop
add
enter
sbb
pop
mov
stos
push
sub
lea
clc
add
dec
push
inc
test
mull
shlb
push
fildll
mov
and
jns
sbb
add
inc
arpl
push
lods
sub
movsb
test
dec
ficomps
push
sub
inc
mov
arpl
jo
push
xchg
mov
dec
xchg
mov
jl
or
data16
xchg
das
push
pop
lds
cmp
insl
sub
sub
cmc
cmpsl
cwtl
push
js
insb
test
push
mov
in
jno
lods
das
push
and
fidivs
icebp
fistpl
jo
mov
aas
test
adc
in
sbb
jno
sub
pop
cli
mov
and
inc
and
sbb
je
loop
cmp
cli
dec
lahf
sahf
cld
mov
lahf
repnz
xchg
jge
jecxz
add
test
pop
cmpsl
lret
icebp
icebp
inc
loope
dec
fwait
mov
es
outsb
insl
cmpsl
xchg
xlat
xchg
pop
sbb
rolb
pop
jne
iret
test
cltd
aas
sub
jle
sub
stos
jno
lds
sub
mov
mov
imul
aas
xor
and
in
sbb
in
imull
adc
jp
and
ja
addr16
cld
test
int3
push
das
lods
adc
sub
sti
insb
adc
pop
shrb
cltd
lds
sahf
scas
sbb
insb
adc
xorl
lea
cltd
push
cmp
mov
adc
addr16
push
int3
daa
cld
mov
mov
add
push
or
xor
or
mov
sbb
mov
mov
or
aas
test
push
cltd
cmp
cltd
push
pushf
out
cmp
pop
add
and
int3
adc
lret
movsl
xchg
int3
adc
jo
loopne
fs
adc
ss
icebp
aaa
mov
dec
movsl
fnsave
jmp
cld
jne
in
shr
fidivl
mov
out
xchg
loope
push
dec
push
aad
es
or
and
mov
fbstp
cmp
sbb
fists
arpl
dec
dec
lea
into
xlat
pop
xor
inc
jnp
repz
fmull
pop
sub
xlat
movsl
jno
pop
lcall
jp
mov
ficoms
jmp
add
iret
popa
xor
push
pusha
cli
push
addb
cmc
mov
stos
loope
sbb
dec
jb
xchg
stc
inc
mov
je
sub
in
sub
movsl
jbe
mov
add
rcrl
and
nop
ljmp
in
clc
mulps
xchg
xlat
les
sbb
xchg
popa
fsqrt
xchg
lret
cmp
push
push
inc
arpl
xor
xchg
shrb
out
or
int3
jecxz
dec
add
pusha
inc
adc
push
dec
pop
pop
addl
lea
int3
xchg
mov
and
std
ss
stos
lret
xchg
das
push
sti
xchg
hlt
sbb
cmp
sbb
mov
jl
adc
and
stos
stos
lock
adc
mov
sbb
pop
jno
inc
mov
xchg
mov
and
lret
jecxz
jle
pop
xchg
lods
out
xor
push
sub
sub
dec
add
insb
xor
sahf
mov
or
mov
push
test
mov
mov
inc
jl
push
gs
int
mov
out
fadds
xchg
data16
out
xor
pop
sbb
popf
xchg
fwait
movsb
pavgb
nop
jl
inc
jno
xchg
inc
pop
pushf
out
jne
cmp
inc
mov
add
push
std
sbb
jno
jbe
pop
jmp
pop
inc
adc
imul
int3
lcall
xor
dec
add
jne
lods
test
test
sahf
xor
in
pop
nop
cmp
pop
hlt
imul
sbb
push
mov
adc
xchg
lock
les
jne
call
and
out
out
out
xchg
rolb
fcmovne
ficoml
inc
ret
testl
int3
and
pop
ret
out
mov
arpl
insb
shl
divb
ds
out
cmp
dec
ss
push
out
sbb
in
in
outsl
jecxz
test
lea
sub
lock
sub
aas
push
mov
xchg
adc
sub
xchg
or
mov
fcomip
js
mov
add
mov
cmp
fmulp
mov
out
mov
mov
adc
adc
aam
lahf
dec
pop
pop
ja
testl
push
in
leave
in
mov
cmpsl
and
dec
sti
inc
pop
xchg
dec
mov
push
mov
ljmp
fstp
jo
sub
fs
inc
mov
sbb
xchg
and
out
ds
pop
xchg
pop
pop
jns
adc
push
mov
lcall
test
xchg
data16
jg
xor
pop
aam
out
loop
je
xor
jp
sbb
daa
test
cwtl
jle
mov
jnp
icebp
or
xchg
add
testb
jg
add
add
inc
add
out
into
gs
xchg
idivb
ja
imul
pop
mov
notl
outsl
nop
xor
dec
pop
inc
jns
adc
mov
insb
xchg
push
mov
js
jo
dec
rolb
or
adc
mov
clc
mov
adc
push
xchg
mov
xchg
out
dec
xchg
jnp
mov
repz
pop
inc
negb
lds
jp
sub
mov
mov
iret
inc
leave
iret
test
outsb
scas
xor
push
ret
std
push
push
dec
push
daa
movsl
bound
cmp
adc
mov
jle
mov
in
mov
push
mov
lahf
lods
mov
jp
icebp
nop
movsl
inc
fwait
adc
stos
scas
and
jb
jg
inc
stos
dec
pop
cmp
bound
rclb
ffreep
and
imul
mov
xor
popf
and
clc
std
jp
xor
leave
inc
sub
sbb
fiadds
mov
push
lcall
fwait
outsb
xchg
gs
lcall
mov
mov
push
sahf
xor
sti
fisttpl
outsl
sbb
inc
outsl
scas
clc
imul
mov
sbb
and
daa
push
cli
fiaddl
sbb
leave
sub
xchg
stos
adc
sub
aaa
dec
out
popf
out
movsl
inc
imul
jmp
scas
sub
out
push
xchg
dec
mov
movsl
dec
sub
jns
push
add
add
insb
or
jae
lahf
fdivrs
or
lods
mov
fstpt
bound
imul
xor
pushw
lea
aad
cmpb
inc
sbb
jns
jmp
sbb
xchg
pop
imul
lock
std
mov
aad
jle
and
lcall
mov
cmp
sbb
add
pop
mov
xor
and
cmpl
inc
movb
ds
clc
scas
xor
lds
aad
nop
or
push
add
test
push
outsb
outsb
lods
or
fstps
cwtl
notw
cmpb
mov
sbb
xchg
mov
arpl
fstpt
jp
mov
mov
inc
adc
pop
sti
mov
and
loop
pop
loopne
or
scas
aad
jns
test
leave
pop
sub
push
rclb
mov
lret
and
cli
mov
inc
pop
int
js
inc
jge
adc
aas
stos
lret
or
insb
std
aaa
jb
jae
aad
scas
and
push
push
incb
lcall
push
les
pop
cmpsl
jp
imul
mov
pushf
cmpb
es
in
pushf
jb
fadd
daa
push
dec
scas
iret
and
pusha
filds
sbb
xchg
push
int3
mov
cmp
int
ret
mov
pop
xor
xor
inc
rcrb
std
into
inc
fidivl
int3
in
mov
aad
nop
cmp
cmpsl
imul
aaa
xchg
adc
lret
and
fs
mov
jb
outsb
call
test
cmpsl
in
push
pop
inc
push
fcoms
hlt
sub
and
cmp
add
xchg
dec
cmpsl
cmp
mov
or
test
add
pushf
call
inc
insl
xor
jmp
leave
inc
inc
add
jnp
xchg
jecxz
cmp
pop
ljmp
add
push
cld
cld
sbb
subl
push
xor
ja
pusha
mov
pop
mov
mov
jns
inc
jbe
fdivp
sti
decb
push
dec
inc
into
cld
xor
jne
int
pop
sub
imul
fwait
inc
data16
pop
mov
mov
pop
sti
or
movsb
add
xchg
out
mov
pop
and
das
adc
xlat
popa
gs
popf
mov
cmp
adc
fcmove
out
adc
pop
pop
mov
xchg
mov
jbe
add
adc
clc
test
scas
or
mov
and
inc
mov
roll
add
out
stos
xchg
xchg
mov
mov
push
pop
mov
lods
push
cmp
or
jmp
adc
xchg
adc
icebp
sub
outsb
adc
das
adc
dec
loop
add
push
pushf
mov
aam
rep
lahf
mov
clc
mov
mov
les
jge
mov
shll
nop
insl
mov
lods
cmp
jno
clc
outsb
ret
adc
dec
test
jb
neg
mov
cmp
cwtl
fmull
test
jg
sbb
iret
jnp
scas
popl
cmp
mov
arpl
push
and
dec
dec
loope
or
jo
imul
out
mov
adc
cmpsb
sub
dec
scas
mov
mov
adc
pop
dec
fsubl
mov
shlb
or
fsubp
pop
mov
out
daa
shrb
test
mov
in
aam
and
cmp
dec
cli
loopne
mov
mov
in
aad
call
cmc
push
jmp
cli
rclb
pop
test
sub
mov
lret
mov
xchg
sub
scas
out
out
mov
cwtl
ds
push
sub
orb
add
rorb
scas
add
scas
lret
push
inc
and
test
movsl
jae
orl
push
aad
jmp
xchg
stos
data16
loop
enter
adc
and
sub
add
dec
dec
hlt
push
xchg
repz
sahf
popa
das
clc
pusha
xor
lds
pop
into
out
test
nop
push
insl
or
sbb
loop
push
cmp
mov
popf
ja
mull
mov
push
xchg
inc
enter
cltd
mov
mov
ljmp
mov
leave
inc
sbb
movsb
or
mov
inc
mov
out
stos
jle
pop
loope
outsb
pop
lock
and
mov
int
mov
jg
pusha
mov
pop
lret
xor
push
mov
daa
in
jo
stc
loope
jge
sub
add
sub
sub
mov
mov
pop
test
xchg
dec
cmp
enter
call
push
mov
mov
cld
nop
xor
sub
add
inc
sbb
pushw
mov
xor
ds
lea
fisubl
push
and
jb
arpl
scas
loop
lret
daa
xchg
dec
push
fldl
jl
and
add
or
or
sti
xchg
add
and
push
mov
cmp
lea
mov
lret
iret
nop
movsb
jne
dec
add
sbb
xchg
int
sbb
jno
xchg
mov
ret
in
data16
dec
xchg
cmp
inc
mov
loope
push
jl
push
daa
loope
ret
mov
jne
pop
leave
pop
pop
sub
adc
xor
pop
fdivrl
pop
test
jmp
pop
mov
dec
jne
je
rorl
cmc
movsl
cwtl
push
arpl
push
ljmp
adc
lcall
push
cmp
loopne
sbb
jae
aad
mulb
lock
xchg
pop
sub
inc
dec
jl
push
pop
inc
out
dec
bnd
xchg
xor
clc
sbb
nop
sbb
push
ficoms
mov
or
ret
sub
jns
enter
test
or
xchg
push
mov
xchg
mov
add
dec
pop
sub
xchg
aaa
cs
idivb
mov
rorl
xchg
xchg
lea
jns
add
scas
fwait
pop
jge
aaa
cmp
fs
repnz
pop
mov
call
rol
and
add
and
dec
jp
mov
sub
jae
xlat
xorb
repnz
call
add
push
adc
xchg
fldcw
in
xchg
out
pop
dec
jo
cld
cmp
sarl
imul
mov
jns
outsl
out
ds
and
mov
loope
mov
cmp
sbb
notl
cld
lods
repz
push
or
mov
xor
push
inc
pop
pop
out
mov
xchg
xchg
arpl
out
mov
les
or
xor
xchg
sub
lock
popa
adc
loop
outsl
xlat
push
push
mov
mov
pop
jnp
lock
or
mov
pop
jbe
stos
add
shll
sbb
xor
sbb
inc
ss
fwait
int3
and
out
mov
gs
xchg
je
mov
xor
add
xchg
and
inc
mov
push
jns
fs
xchg
push
pop
aaa
dec
data16
xchg
rorl
pop
popa
sbb
push
idivl
arpl
mov
fdivrs
mov
data16
lock
jp
js
push
mov
movsb
ficoml
rcrb
popa
xchg
dec
loop
add
xor
shll
jmp
or
and
jle
scas
repnz
xor
xchg
cmp
cmp
push
xchg
adc
push
mov
clc
outsl
jmp
dec
inc
mov
lahf
and
cmp
xchg
test
cs
pop
lods
or
pushf
pop
fldl
mov
imul
mov
jle
cmp
mov
mov
aam
in
cmp
pop
inc
je
dec
les
cmp
adc
rcl
xchg
je
ja
es
mov
daa
mov
ljmp
mov
pop
fmuls
mov
loopne
fildll
fmull
pop
loope
jno
in
js
mov
fldcw
je
aam
stos
cmpsl
mov
jbe
xor
js
fistpl
jo
dec
cmc
shlb
mov
adc
fdivp
in
sbb
pushf
pop
loopne
push
mov
mov
jno
icebp
xor
jo
xor
into
aad
lea
cmp
inc
ja
mov
push
xor
loope
into
add
jnp
push
test
scas
jmp
out
in
iret
jle
or
out
repnz
mov
enter
xor
mov
dec
adc
push
push
std
imul
rorb
adc
pop
pop
pop
hlt
add
lods
mov
sahf
les
cmp
xlat
mov
jno
mov
fstl
mov
in
cmpb
inc
fdivr
lcall
sarb
aas
cmp
push
insl
mov
das
bound
or
leave
sarl
ret
inc
pop
je
pusha
repnz
jne
dec
xor
andb
add
xchg
sbb
out
push
daa
arpl
lods
add
cmp
jb
adc
mov
incb
jo
cwtl
jbe
insb
fcomp
jne
movsl
and
push
ror
and
icebp
xor
scas
in
and
cwtl
pop
xor
or
mov
cmp
push
sarl
ja
scas
cli
push
sub
rol
lods
mull
sub
stos
jle
jo
sahf
xchg
fldcw
ret
or
fmull
lods
xor
addr16
testl
xor
dec
jecxz
movsl
mov
inc
xor
lock
loope
xor
dec
xchg
mov
pop
jmp
xchg
lahf
push
adc
daa
fstps
aas
lods
push
clc
test
sbb
mov
testl
lds
aaa
mov
mov
bound
aas
xchg
test
in
outsb
lcall
and
push
push
ljmp
cmp
inc
mov
adc
ljmp
out
out
push
mov
mov
mov
fistl
push
imul
sarb
cmp
test
mov
sbb
mov
mov
push
cmc
idivb
loop
xchg
nop
sbb
inc
push
out
sub
add
lret
subl
xor
inc
inc
not
call
mov
inc
xor
outsl
inc
jne
out
cmp
inc
mov
ficompl
mov
pop
outsl
or
lahf
shrl
pop
or
add
lret
jecxz
out
int
lret
lcall
sub
imul
rolb
sbb
push
pop
jo
outsb
jg
dec
jbe
xor
mov
lcall
das
xchg
out
dec
dec
cwtl
jp
aas
nop
lds
add
popf
sub
mov
std
imull
cmp
mov
sub
pushf
into
scas
and
jp
and
rclb
inc
pop
adc
push
push
enter
mov
ja
je
dec
mov
sub
mov
jo
ss
xchg
lods
ficomps
xchg
push
sub
and
dec
xchg
mov
aas
loopne
negb
pop
dec
in
lock
xor
jae
popf
clc
push
push
cld
movsl
or
adc
shrl
int3
popa
sub
adc
mov
cltd
cs
mov
sar
in
sub
mov
pop
ror
dec
mov
mov
aam
inc
sub
adc
pop
gs
or
fcompl
ffree
xor
nop
andl
popa
mov
add
push
or
fidivrs
dec
cmp
jne
sbb
or
add
js
pop
shlb
movsb
mov
xchg
out
out
icebp
loopne
and
sub
adc
cwtl
jle
cmpl
sbb
add
mov
jp
test
sub
push
ljmp
push
add
inc
jns
shlb
cs
push
push
in
jge
inc
cmp
fsts
adc
adc
inc
fdiv
push
pop
xor
movsb
pop
lods
dec
je
call
and
xchg
insb
mov
pop
or
push
aaa
lods
ljmp
shrb
out
xor
lret
mov
in
mov
jmp
dec
or
fimull
push
sti
aaa
or
aaa
sub
shll
pop
jmp
test
sub
fwait
ja
orl
shrl
sub
addl
mov
mov
ja
fildl
push
xor
and
stc
cmp
mov
mov
or
int3
sbb
dec
sbbb
adc
lods
jecxz
mov
or
mov
pop
pop
out
mov
adc
xchg
inc
std
icebp
push
loope
add
shll
add
jo
aas
cmp
mov
fwait
pop
addr16
lods
sub
fidivl
push
xchg
sahf
orl
in
sub
sub
pusha
lret
call
push
test
mov
push
mov
lock
orl
repnz
pop
xlat
cli
int3
sub
clc
sahf
push
mov
decb
testl
inc
pop
fsubl
out
xchg
sbb
nop
sbb
fsubrp
out
clc
insl
cmp
fiadds
jmp
int
cwtl
inc
mov
mov
xchg
jns
mov
adc
and
and
cwtl
jge
popa
mov
sbb
loope
cltd
movsb
mov
int3
add
loop
jl
xchg
es
adcl
lcall
divl
shlb
push
out
lahf
or
nop
out
hlt
jb
adc
out
inc
mov
cmp
addr16
sub
jb
pop
jmp
push
pop
or
dec
sub
xor
pop
sub
jne
jb
rcl
fcmovnb
dec
push
xor
fdiv
notb
mov
loop
and
outsl
loope
adc
xchg
fucomp
cli
jbe
dec
mov
add
cmpsl
mov
add
les
dec
adc
lds
sbb
cld
mov
out
mov
insl
arpl
bound
xchg
jle
mov
mov
mov
mov
cmp
add
idiv
lods
ds
in
call
or
xor
cmp
ret
rcr
cmp
dec
fisttps
lcall
inc
adc
xlat
lock
sub
movsb
sbb
xor
inc
out
shlb
pop
jns
data16
lock
cld
cmp
sbb
xchg
cld
fcoml
int3
lods
pop
pop
aas
and
je
sub
loopne
push
pop
aas
outsl
mov
pushf
push
sub
dec
push
bound
pop
jno
and
filds
inc
sti
pusha
add
add
out
inc
inc
inc
inc
fsubrp
pop
sbb
pop
insl
adc
add
shlb
xor
and
clc
adc
xor
inc
sbb
aad
jns
add
or
in
add
and
push
aaa
jae
iret
out
mov
jnp
les
dec
in
mov
test
pop
cld
mov
stos
ret
pop
cmpb
add
xor
xor
lcall
enter
int
test
out
in
ss
jnp
jbe
add
outsl
push
sbb
or
mov
arpl
adc
pop
data16
hlt
or
ret
ja,pn
cmp
sub
cmp
jg
lea
push
mov
fdivr
cmp
sbb
stos
adc
andb
add
popf
xchg
mov
add
clc
or
sbb
test
mov
jge
push
das
add
pop
scas
sbb
pop
in
and
fsubl
lods
es
test
sub
test
jb
pshufw
and
jmp
and
fidivs
dec
out
dec
pop
dec
dec
sbb
push
gs
int3
int3
sub
or
in
enter
sahf
sar
popa
movsl
dec
fcmovnbe
mov
push
push
pop
mov
xor
fildl
sti
inc
test
xor
jg
call
jne
xchg
and
ret
imul
cmpsl
mov
pusha
push
adc
or
leave
mov
pusha
adc
xchg
sahf
popa
jae
and
xor
jl
sti
loop
push
int
push
inc
scas
push
xor
dec
pop
into
cmpsl
mov
repnz
fstp
fdivl
and
ret
negl
add
icebp
mov
rep
pop
adc
mov
pop
fsubr
inc
std
mov
xchg
out
adc
add
fbstp
ja
ja
mov
addr16
mov
xchg
xlat
insl
enter
icebp
push
add
lods
pop
enter
sub
jmp
jl
sub
imul
scas
mov
repnz
mov
js
ret
test
add
sbb
sbb
fdivl
je
sub
ljmp
addb
out
inc
dec
test
loop
aas
cmc
roll
lods
jnp
inc
icebp
ljmp
inc
and
arpl
iret
sbb
cmp
fisubrs
sahf
test
xlat
mov
pop
xchg
in
test
push
and
xchg
cmp
adcb
fcoms
out
xchg
enter
cli
shrb
xchg
data16
mov
xor
mov
les
xchg
aaa
xchg
push
inc
outsl
jb
ja
push
shll
enter
icebp
mov
sbb
fwait
cmp
jmp
out
sub
shrb
push
pop
pop
loopne
lcall
comiss
repnz
add
mov
pop
mov
int
out
xor
add
inc
mov
iret
int
xor
and
mov
cli
lahf
adc
cmp
push
insl
and
dec
dec
jecxz
pop
in
sbb
lods
inc
adc
stos
repz
mov
pop
push
mov
xlat
lcall
xchg
mov
and
fwait
dec
jbe
imul
mov
test
lahf
lret
or
sbbb
xchg
gs
fildll
cmp
mov
adc
cmpsb
and
or
cmc
push
aas
fistps
add
imul
lret
xchg
push
jbe
adc
sbb
mov
mov
addr16
cmp
dec
sbbb
xchg
out
xor
push
xor
fs
mov
imul
push
test
and
push
add
pop
sbb
xchg
sub
lret
xor
push
push
pop
push
jecxz
mov
shl
daa
pop
xor
insb
icebp
shlb
sbb
mov
push
test
xchg
arpl
cmp
or
mov
popf
or
pop
mov
add
xor
or
rcl
or
jo
jle
out
dec
jge
adc
add
adc
mov
pop
icebp
sbb
lea
mov
mov
dec
inc
cmp
xor
enter
or
xchg
mov
movsb
cs
push
add
or
xchg
dec
xchg
adcl
test
and
shrb
jle
shlb
cmp
jmp
test
sarl
rcrb
mov
das
mov
outsl
fists
and
addr16
loope
jle
push
icebp
xchg
shll
add
adc
les
xchg
pop
sbb
sub
jl
cltd
inc
shlb
pusha
ss
lea
mov
push
mov
push
bound
lods
push
fidivs
fstl
outsb
cmp
mov
addr16
dec
mov
jge
mov
pop
in
test
ficoml
or
pop
xchg
mov
push
pop
cmp
or
xor
xchg
pop
or
xchg
mov
add
out
adc
arpl
jmp
mov
aam
sbb
xchg
xchg
cmp
aas
mov
pop
imul
xchg
sbb
xchg
enter
xor
cltd
push
shll
mov
add
addr16
pop
push
mov
push
push
repnz
pusha
or
sbb
mov
shr
lods
lods
scas
leave
or
fiaddl
add
jmp
xchg
mov
rclb
movsb
scas
inc
fnstsw
xlat
pop
ficoml
data16
or
add
in
aas
insb
in
ss
popa
dec
leave
push
idivl
sub
sub
sbb
sub
push
lahf
dec
add
xchg
cmp
cmc
or
test
lods
sbb
shl
jbe
push
inc
add
mov
mov
add
mov
hlt
insb
test
icebp
lods
stc
jp
push
scas
and
and
and
pusha
lcall
xor
orb
xorb
sbb
inc
xchg
test
inc
cli
cmp
scas
ret
data16
push
xchg
dec
mov
mov
jmp
popf
icebp
mov
adc
leave
clc
dec
xor
stc
mov
lea
fcoml
es
push
xor
and
scas
push
test
outsb
aam
jecxz
or
les
aam
loopne
pop
lods
sahf
ret
xor
push
jmp
adc
jne
mov
dec
pop
xchg
mov
seto
adc
add
or
lret
outsl
xor
popa
nop
jmp
and
mov
lock
iret
fst
push
popa
cmp
hlt
lods
lcall
popa
mov
nop
cmc
pop
mov
add
andb
mov
jle
dec
outsb
fisubrs
cmp
dec
push
cmp
clc
or
repnz
xor
mov
cmp
stc
inc
loop
das
jecxz
stc
mov
imul
es
push
in
and
mov
mov
sahf
pop
push
in
sbb
fists
sbb
sbb
xchg
stc
sahf
cmp
or
inc
sbb
cltd
scas
add
pop
inc
cwtl
dec
push
xchg
test
xchg
mov
cs
ret
jae
loope
repnz
push
lds
fisubs
pushf
fadds
and
stos
sub
ss
push
lds
mov
inc
mov
sub
push
or
push
adc
mov
cld
pop
lock
adc
xor
push
mov
jbe
jns
add
push
and
std
in
pop
or
jbe
push
dec
out
xor
sub
test
std
cltd
and
iret
adc
into
push
mov
pop
sbb
sbb
gs
sbb
inc
andl
mov
push
push
aad
in
pop
mov
out
stos
jns
repz
lods
into
stos
mov
jmp
push
int
lcall
movsl
gs
mov
xchg
mov
pop
add
xchg
rclb
in
pop
add
jb
lcall
lcall
jl
cld
mov
push
cli
mov
dec
pusha
pop
push
fsubrp
jg
jno
popa
jns
push
adc
scas
jns
ret
jne
xor
ds
cmc
mov
pop
or
or
mov
mov
movsl
out
rol
loope
xor
fsubr
aaa
or
xor
divl
cmp
dec
das
add
out
and
lds
xchg
loopne
mov
mov
jno
stc
push
cmp
enter
mov
clc
out
movsb
mov
push
test
sub
adc
pop
mov
out
std
data16
pop
jns
add
push
nop
jle
repnz
mov
push
dec
negl
dec
sbb
shr
ss
loopne
sub
movsl
pop
pop
mov
mov
xor
cli
xchg
mov
andl
cmp
mov
mov
cmp
cltd
negb
dec
js,pn
add
cltd
mov
mov
lds
mov
cld
or
xchg
loope
daa
clc
lods
pop
ds
cmp
cli
lret
cltd
test
cwtl
xor
ret
movsl
sub
enter
pop
fbstp
or
and
rol
push
lret
push
xchg
xchg
shrb
push
int
or
std
leave
mov
out
pop
add
pop
xor
mov
xchg
fsin
push
shrl
push
iret
cltd
scas
mov
jnp
int3
insl
add
lahf
pushf
push
mov
pop
inc
pusha
cli
jo
fistps
cmp
popf
and
dec
sti
test
xchg
clc
mov
add
fnstcw
fcoms
repz
test
jp
icebp
imulb
cld
repnz
imul
imul
pushf
or
lods
push
mov
mov
mov
cmovo
insl
test
cmp
mov
push
jnp
nop
stos
inc
in
or
cmp
icebp
mov
jae
push
adc
fsubrs
negl
jno
loope
sahf
mov
pop
and
test
aam
pop
pop
out
xor
dec
in
scas
jl
cmpsb
jp
lods
pop
or
add
jg,pt
xchg
imul
xor
imul
fdivs
test
jb
cmp
repz
mov
lcall
pop
movsl
push
ret
imul
sbb
xchg
push
inc
es
mov
jp
loop
cmp
in
xchg
sub
loope
mov
push
adc
jne
or
icebp
test
cmpsb
nop
testl
mov
jg
sbb
shl
jp
xor
jp
mov
aad
repnz
pop
lods
mov
insl
iret
scas
outsl
jbe
movsb
cmp
xor
loop
shrb
lahf
in
sub
jecxz
loopne
pop
push
push
sub
in
insb
adc
jns
add
mov
call
xchg
outsb
push
scas
cmc
mov
pop
call
adc
and
push
cmp
jne
mov
test
sub
sbb
sbb
cmp
push
bound
push
movsl
or
loopne
and
xor
std
mov
decb
add
cwtl
sub
inc
insl
dec
inc
ficoml
jmp
xorb
dec
repz
xchg
dec
xchg
popa
testb
repnz
imul
lods
sbb
add
mov
std
fcompl
and
fsubs
call
mov
and
xor
or
jg
inc
movsb
cli
cmp
mov
stos
fnclex
pop
js
adc
rorl
cld
dec
lds
mov
rorb
cmpsl
mov
out
shll
and
pushf
lods
flds
in
ret
adc
sub
jbe
jo
mov
cmp
cmp
pop
scas
cmp
sub
mov
xlat
pusha
jae
leave
or
and
mov
arpl
dec
xor
lock
inc
add
mov
or
scas
mov
mov
cmpb
mov
fwait
test
add
mov
lret
aas
insb
cmp
mov
pop
push
mov
dec
xchg
aas
jo
sub
xchg
aaa
aaa
mov
mov
or
pop
fiadds
cmp
sub
pop
add
inc
dec
scas
jnp
rclb
daa
cld
cmpsl
fildll
push
jae
xor
call
xchg
mov
test
adc
mov
testl
push
ss
test
fldl
xorl
and
mov
or
repnz
or
test
outsl
jecxz
addl
movsb
inc
and
pop
xor
movsb
jg
lods
inc
pusha
and
shll
out
or
cmova
mov
rcrl
fsubr
cmpsb
test
mov
pop
je
xchg
stc
repnz
mov
loop
mov
pop
pushf
outsb
pop
mov
fwait
push
addr16
adc
inc
pop
mov
sub
xchg
inc
jle
sbb
daa
ljmp
sti
setge
leave
test
mov
fstpt
xchg
jnp
dec
fidivrl
bound
mov
negb
xor
mov
push
dec
cmove
cld
dec
arpl
mull
pop
inc
repnz
fcmove
push
sbb
fdivr
leave
add
loop
pushf
idivl
out
inc
idivl
adc
cmp
je
movsl
sbb
add
mov
sbb
lahf
or
ds
stc
das
push
out
and
rclb
add
mov
dec
mov
xchg
xor
inc
xchg
pusha
and
sbb
push
loopne
nop
in
xchg
out
pushf
mov
jecxz
ja
cmp
xor
scas
dec
stos
loope
aas
ss
stc
inc
test
test
test
cs
es
cltd
in
sub
inc
jae
and
insb
cmpb
aaa
and
sar
mov
pop
jp
inc
xor
in
pop
jmp
out
ret
shr
rclb
push
lds
test
sbbl
inc
and
adc
xor
push
es
stc
jb
rorl
int3
mov
xchg
jns
xor
or
sub
xchg
jno
mov
addr16
lock
leave
sbb
je
loopne
pushf
test
test
in
ljmp
push
cltd
mov
enter
dec
cmp
add
xor
fwait
addl
push
pop
lret
mov
push
add
mov
mov
xchg
mov
mov
ret
push
test
cmp
pop
stos
and
cmc
loope
xchg
out
cmp
jae
xlat
adc
mov
cld
iret
mov
sbb
hlt
lock
jmp
clc
cld
cmp
std
fstl
sahf
mov
insb
jb
cmp
cmovg
cmp
dec
push
or
mov
or
shlb
mov
movl
jne
inc
pop
imul
or
push
fdivl
inc
pop
add
or
pop
shlb
pushf
add
cmp
mov
xchg
shrl
movsb
filds
stos
test
add
xchg
xorl
imul
push
mov
inc
lcall
lret
stos
fdivrs
sbb
imul
dec
sub
gs
mov
xchg
adc
mov
inc
sub
loopne
and
fucomip
jecxz
and
mov
inc
nop
mov
pop
lcall
test
jbe
push
mov
pop
and
jo
sub
lret
mov
sbb
sti
pusha
lret
fwait
imul
adc
pop
mov
or
dec
fcmovne
mov
aad
aam
rcrb
out
inc
dec
add
jmp
divl
xor
insl
cltd
push
fs
mov
push
xchg
bound
adc
inc
adc
cwtl
imul
mov
push
jno
jl
sub
cmovbe
icebp
fcompl
leave
aam
add
repz
sbb
jb
fcompl
dec
sub
dec
mov
lods
adc
mov
mov
sub
add
push
xchg
loope
shrl
jbe
lahf
sbbb
fists
dec
loope
xchg
es
cmpsb
shll
bound
or
sub
inc
aam
jo
adc
adc
je
add
push
pop
mov
in
xor
in
xchg
cmpsb
daa
in
sarb
pop
jno
loopne
mov
mov
xor
arpl
ljmp
or
jecxz
mov
in
xor
jae
aas
pop
out
push
into
popf
mov
imul
xor
mov
dec
cld
mov
mov
mov
pcmpgtd
jnp
data16
aam
lods
fs
pop
and
dec
mov
lret
adc
and
insl
lods
and
js
sbb
cmp
jne
fcompl
push
mov
xlat
push
ret
dec
cmp
or
bound
push
sbb
push
mov
inc
fimull
sahf
bound
sub
cvtdq2ps
idivl
aam
fimuls
lods
mov
pop
add
ret
sub
das
out
movsl
push
aas
jae
sbb
pop
ja
or
hlt
mov
sbb
cmp
and
fwait
xor
cmpsb
pop
inc
and
mov
sbb
push
xor
cmc
inc
xchg
std
lods
in
add
add
arpl
adc
mov
mov
sbb
or
pop
in
insl
xchg
lds
jecxz
leave
imul
sarb
incl
je
bound
push
in
repnz
inc
clc
ljmp
iret
jecxz
push
sbb
sub
pop
inc
xor
sti
ja
pop
lcall
jle
xchg
mov
repz
ret
es
xor
inc
xchg
lret
enter
mov
ror
sbb
and
fidivl
jo
int3
sti
lahf
ja
leave
mov
fwait
out
jmp
jp
seta
negl
jl
aas
sub
or
fsubs
jle
mov
xchg
ret
xchg
iret
push
gs
fs
loope
fstpt
popf
into
jae
pushf
fildll
mov
loope
jp
sub
aad
ror
ficoms
mov
xor
outsb
push
mov
bnd
fsubp
bnd
pop
push
mov
pop
push
fldz
sbb
pop
sub
repz
icebp
push
lods
pushf
icebp
mov
cli
mov
push
cmp
pusha
or
out
test
add
insl
or
loop
mov
addl
and
in
mov
arpl
and
jg
popf
ret
push
xor
dec
mov
cmp
loopne
ljmp
popf
jo
icebp
hlt
std
jg
out
iret
idivb
clc
cmp
mov
sbbb
shll
xchg
mov
aaa
aaa
inc
mov
or
or
ficompl
shr
imul
cmpsb
push
xchg
mov
in
push
js
jo
xchg
add
fnsave
test
adc
xor
push
lods
shr
sub
cmp
ss
xorl
mov
js
mov
mov
out
jne
lret
jl
cmp
sub
pop
pop
adc
xor
in
scas
or
in
pop
mov
in
pop
sub
and
xchg
mov
jae
xor
sub
fdivrp
dec
xchg
inc
jge
pop
jmp
ret
xlat
outsb
rolb
call
sub
jb
sbb
mull
cli
adc
xchg
ret
test
jecxz
arpl
lahf
mov
mov
mov
push
jle
daa
push
daa
adc
stos
add
jg
inc
xchg
lret
negb
fiadds
cmp
movsb
insl
lods
aad
jle
mov
int
inc
or
insb
leave
aas
ljmp
jb
cmp
cmp
jmp
jae
cli
sti
or
popf
push
pusha
xchg
mov
sbb
adc
sbb
int
pop
into
cld
pop
or
push
test
out
rcl
loope,pt
mov
enter
stos
jp
int3
pop
adc
sub
xchg
insl
fimuls
outsb
and
inc
movsl
cmc
adc
int3
cld
mov
cmp
push
repz
je
lds
cmp
push
and
iret
cmp
xor
insb
inc
dec
out
mov
test
jp
popl
shrb
leave
adc
inc
adc
popa
xor
aad
mov
lret
nop
clc
mov
cmpsb
add
and
enter
inc
je
pop
push
cmc
adc
cli
out
sahf
push
inc
pop
sub
jle
cmp
add
push
jg
mov
mov
add
dec
imul
xor
and
imul
sub
repz
dec
mov
cmpsb
pop
push
xor
rol
or
subl
dec
clc
ret
dec
and
leave
loope
push
les
xor
jp
add
or
aam
dec
jecxz
or
mov
lcall
inc
outsl
mov
and
addr16
mov
and
pop
lahf
sbb
push
xchg
pop
push
pusha
push
sbb
and
pop
cmp
and
aas
push
sbb
push
lds
scas
pop
sub
pop
outsb
jle
imul
or
orl
mov
andl
aaa
out
hlt
cmpl
dec
push
push
push
fmuls
push
mov
or
mov
or
movsl
dec
shr
nop
lret
or
test
and
add
jp
loopne
cmpb
enter
imul
mov
push
lret
dec
xor
mov
into
fisttpll
and
cmp
dec
or
mov
popa
xchg
imul
push
insb
jg
push
sub
ljmp
jae
xor
pop
adc
cmpsl
sub
ja
aam
outsb
shlb
xor
sahf
adc
aas
je
in
imul
mov
add
mov
add
psubw
add
sub
bnd
push
add
push
popa
andl
aas
daa
jns
scas
leave
ret
aam
dec
inc
xchg
std
xchg
xorb
xchg
sahf
inc
in
inc
inc
sarb
and
and
xchg
repz
mov
lods
xchg
or
sub
jnp
addr16
jno
inc
jo
aaa
push
pop
mov
push
adc
ret
cmp
adc
jg
cli
cwtl
es
dec
xchg
or
nop
and
jno
insl
add
outsl
mov
dec
jp
cmp
icebp
test
sbb
lcall
xchg
adc
das
int3
shrb
add
insl
or
std
push
das
jae
repz
loop
xor
pop
inc
push
aad
and
outsl
or
mov
xchg
fildl
adc
mov
sahf
adc
add
aaa
out
push
mov
mov
movsb
add
jo
mov
pop
jecxz
insl
in
dec
loopne
mov
orl
inc
pop
lahf
push
in
lfs
outsb
jnp
jne
enter
dec
adc
mov
mov
dec
jae
cli
repnz
mov
fisubrs
inc
or
stos
push
test
pop
movsb
xchg
xor
adc
idivl
nop
divb
xorl
adcb
sahf
jnp
scas
mov
mov
inc
mov
mov
sbb
or
or
inc
into
sbb
jne
sub
out
pop
sub
cmpsl
mov
adc
shll
or
mov
mov
push
mov
popa
push
xorb
add
dec
arpl
movsb
std
jp
pusha
rorb
push
mov
in
mov
jo
and
push
and
test
sbb
enter
push
and
out
jo
shrl
scas
popf
xorb
out
mov
mov
cmp
data16
out
jmp
mov
in
mov
mov
cmp
sarb
aaa
jp
xor
cld
sub
repz
in
imul
outsb
in
mov
cmp
icebp
and
cmp
popa
mov
mov
push
mov
mov
in
pop
push
mov
jl
clc
mov
push
into
xchg
imul
cmp
mov
mov
xchg
push
and
mov
popa
imul
sahf
inc
popa
pop
push
mov
ficompl
and
arpl
adc
les
inc
stos
or
loop
sti
test
pop
xor
sbb
xchg
rclb
sbb
imul
inc
int
mulps
sbbb
xchg
in
push
cmpsl
and
lcall
push
movsb
adc
fs
pop
mov
ljmp
fimuls
cmp
fisubrl
dec
lret
mov
out
mov
loope
push
sbb
jae
mov
ss
inc
adc
mov
inc
sbb
mov
je
pop
inc
aaa
std
mov
loopne
in
ss
dec
jae
add
jae
inc
ret
sbb
jo
or
popf
call
jae
sbb
and
arpl
adc
xchg
fildll
mov
sbb
sbb
add
mov
or
repnz
addl
pop
inc
pop
and
lcall
inc
sarb
push
xor
adc
push
sbb
adc
repz
sbb
xchg
faddl
jle
mov
imul
icebp
adc
jle
outsl
xor
out
jb
push
jbe
pop
pop
fisubrl
std
dec
movsl
push
cmc
frstor
cmpsb
jmp
cwtl
pop
imul
adc
data16
push
ds
pop
sar
adc
jecxz
mov
daa
stos
xchg
xchg
mov
inc
pop
add
icebp
out
dec
nop
jbe
add
out
int3
push
sub
xchg
cmpsb
or
in
xor
add
flds
push
mov
repnz
int3
push
sbb
push
xchg
or
jnp
dec
lea
sahf
push
bound
out
insl
inc
leave
out
outsb
sub
push
out
loop
dec
cmp
mov
push
inc
repnz
or
mov
add
xor
push
xor
cltd
xor
sub
scas
pop
sbb
sbb
mov
dec
xchg
jge
stos
sub
fidivs
xchg
in
insb
xchg
es
and
xchg
pop
push
sub
out
dec
addr16
stc
mov
cmc
fstpt
stos
mov
jmp
lock
push
pop
jae
sbb
push
stc
sbb
pop
jle
sbb
int
repz
jg
loop
lods
icebp
sub
std
jbe
popa
sbbb
insb
pop
push
cmp
faddl
sbb
outsb
jmp
je
int
pusha
xchg
push
sbb
jb
fs
jae
and
out
dec
xor
ret
jno
inc
repnz
mov
pushf
jp
mov
leave
sub
fwait
xchg
fcmovnb
jae
jmp
add
icebp
and
mov
js
inc
leave
or
js
arpl
xchg
or
pop
mov
stos
call
jge
push
addl
fxch
imul
outsl
xor
inc
xchg
outsb
mov
mov
adc
subl
ret
int
xchg
sub
add
or
stos
jecxz
sub
cld
int
arpl
add
loope
sbb
jnp
in
cli
pop
cmp
jbe
popa
iret
or
stos
dec
mov
push
scas
daa
pop
jnp
xchg
jnp
movsb
fstl
mov
in
je
int3
out
push
sbbl
mov
das
pop
or
jb
cli
cmp
ljmp
cmp
mov
sub
in
jo
xchg
mov
roll
scas
ret
icebp
or
ret
and
rol
idivl
sub
jmp
add
shlb
dec
mov
ja
bound
cmpsl
ljmp
jecxz
mov
cmc
gs
nop
lods
push
orl
les
adc
sbb
dec
mov
movsb
xchg
xchg
and
jecxz
sti
hlt
fimull
jecxz
dec
push
jo
movsl
fwait
enter
push
sub
inc
add
test
arpl
mov
inc
faddl
xchg
fistl
push
lret
jne
mov
mul
icebp
inc
sbb
sub
sub
sahf
pop
jge
and
scas
sub
and
pop
rcr
vpermi2pd
shlw
push
icebp
xor
fimuls
ret
aaa
jno
pop
aas
pop
mov
repnz
and
xlat
scas
dec
mov
adc
inc
inc
sbb
sahf
leave
in
xchg
jp
adc
mov
xchg
test
add
insl
mov
aam
ja
sarl
fistps
sub
les
push
add
pop
mov
orl
lahf
fists
adc
add
dec
adc
add
out
outsl
lret
out
push
mov
imul
jmp
shlb
das
adc
jg
mov
ficompl
add
fwait
inc
adc
hlt
mov
stos
cwtl
enter
fmuls
ljmp
aam
popf
popf
dec
ret
clc
sahf
test
lcall
inc
cmp
fs
insb
imul
cmp
xor
movsl
cmp
adc
pusha
mov
insl
and
dec
icebp
mov
sbb
sbb
bound
mov
int3
mov
std
in
push
pop
jb
pop
push
repz
or
or
mov
push
incl
jmp
pop
push
orb
inc
mov
xchg
outsb
mov
push
stos
mov
inc
pop
adc
inc
ljmp
cmp
mov
cwtl
aam
jne
orl
cs
std
cmp
mov
in
cld
aaa
subb
in
movsb
jg
neg
pop
cs
decb
mov
mov
inc
push
sar
out
and
je
out
iret
sub
jle
lods
mov
inc
mov
pop
xchg
push
or
sar
sbb
mov
fstl
xchg
sub
mov
xchg
movsl
ret
loope
outsb
and
sub
cmp
sbb
pop
push
les
shl
cmp
cmpb
es
push
cli
mov
sub
xchg
jo
fstps
adc
xor
aam
push
mov
icebp
jbe
mov
cmp
mov
lea
or
jnp
jns
xor
or
push
in
inc
insb
aas
cmp
cmp
stc
addr16
pushf
xor
lods
add
std
cltd
cmpsl
xchg
push
mov
fsub
sub
push
nopl
aad
jae
test
lock
push
imul
adc
out
scas
aas
pusha
lds
pusha
imul
test
rcll
cmpsb
das
aam
jno
xchg
out
and
lods
xchg
insl
or
cmpsl
inc
mov
jb
xor
mov
mov
or
pop
push
out
mov
cmpsl
push
nop
loop
mov
lock
sarw
shl
jp
xchg
push
in
scas
jmp
mov
inc
or
in
sbb
ret
sbb
jmp
rclb
icebp
subb
sbb
mov
pop
pusha
pop
xlat
mov
ss
jnp
push
incb
sbbl
in
mov
out
add
or
lds
cmp
xchg
into
mov
ss
jl
adc
daa
lds
aam
fadds
and
mov
daa
stc
cld
mov
scas
call
mov
mov
inc
add
sub
out
iret
pop
mov
cmp
out
dec
andl
inc
adc
fimull
jecxz
ror
lret
ret
push
mov
jecxz
push
movsl
repnz
lret
pusha
inc
jo
push
or
aas
mov
and
mov
push
dec
cmpsb
fstl
adc
sub
push
jb
sbb
push
cmp
bound
nop
pop
lret
repz
sbb
loop
sub
popf
pop
xchg
pop
popa
fdivl
call
or
js
aad
lds
push
dec
pop
es
fwait
stc
test
lock
xor
popf
and
xchg
sbb
arpl
fimuls
mov
add
sbb
in
outsl
repnz
mov
mov
jo
pop
arpl
shll
sbb
adc
int
sbb
in
ljmp
in
xorl
adc
push
mov
daa
sbb
out
sbbb
mov
mov
test
cmpsb
int3
mov
jne,pt
fsubrl
add
imul
sub
jecxz
fimull
cli
dec
int
enter
mov
repnz
insl
push
adc
dec
rcrl
mov
or
xchg
dec
je
cld
cli
adc
or
jo
outsl
pusha
push
and
jns
int3
xor
sarl
mov
scas
lret
cmp
push
jmp
mov
frndint
xchg
inc
push
outsl
dec
or
dec
icebp
xor
xchg
cli
xor
mov
cmc
rorb
inc
sbbb
rorb
lret
push
enter
pop
out
fmull
fidivl
fbld
xor
push
shll
data16
insl
js
int
mov
pop
js
rorl
pop
insb
jl
and
and
movsl
rclb
pop
pop
push
mov
ljmp
pop
inc
adc
cltd
pop
icebp
sub
pushf
xor
add
imul
mov
push
mov
mov
and
movsl
jmp
or
adc
dec
fs
lock
test
shr
push
roll
jnp
test
imul
push
rorl
jp
sarb
inc
xor
mov
pop
adc
xor
pandn
xchg
out
aad
ljmp
insl
add
mov
nop
dec
popf
mov
in
test
loopne
xor
cld
add
xor
cmp
sti
fldl
dec
inc
je
lret
cmp
out
das
jecxz
xchg
cmp
or
or
mov
loope
fwait
xor
cltd
sbb
enter
pusha
gs
adc
push
pop
sbb
cmp
mul
sahf
clc
insl
mov
lea
mov
jle
imull
stc
xor
ret
add
mov
mov
cmp
ja
pop
add
ds
xor
cmp
adc
push
cmpsl
inc
mov
inc
fisttps
ret
mov
scas
insl
jle
loop
push
lahf
adc
adc
jo
or
imul
cmpsb
xlat
cltd
mov
xor
int
fst
movsb
xchg
loope
xor
ds
mov
pop
adc
neg
cwtl
xor
xor
adc
push
notl
call
sbb
std
fdivr
sub
add
lret
test
in
sbb
add
push
ja
test
xor
fwait
out
std
pushf
loopne
mov
pop
fs
leave
lahf
fcmovbe
movsb
mov
jmp
mov
es
fs
rcrl
inc
icebp
xor
lahf
jmp
sub
cmp
or
xor
add
into
sbb
xchg
mul
fs
popf
mov
scas
leave
mov
ss
daa
jp
push
jmp
xor
mov
pushf
lret
jnp
mov
hlt
dec
fcomp
jnp
pop
jge
popa
fnstsw
mov
insl
pop
std
dec
jmp
divl
adc
jp
cmp
push
out
lret
or
push
dec
fimuls
cmp
push
mov
xchg
mov
add
adc
or
test
leave
xchg
stos
pop
add
repnz
mov
add
mov
push
jnp
lods
imul
sub
xorl
pop
les
push
pop
sbb
test
mov
sbb
pop
mov
sbb
jae
inc
int
pop
fcomi
mov
adc
out
sub
lods
xor
aaa
xchg
mov
jne
cmp
bound
sbb
push
sbb
in
in
adc
mov
jg
xchg
data16
fistl
shrb
sub
xchg
xor
in
sub
inc
or
aas
mov
push
mov
mov
popf
xor
in
mov
aad
je
mov
shll
aaa
outsl
jg
inc
add
add
jne
jle
jnp
jg
ds
xor
sbb
cmc
fldcw
ret
out
mov
imul
out
dec
ljmp
enter
gs
orl
cmp
lods
adc
loopne
cmp
xor
movsb
jnp
in
adc
movsbl
jne
dec
jno
mov
adc
cmpsb
loop
jno
cmp
aam
mov
push
xchg
enter
pop
jb
dec
xlat
aas
rcrb
mov
subl
inc
cmp
and
ss
fldcw
xchg
add
pop
pop
idivb
out
sti
cmp
or
divl
xchg
into
cmc
adc
je
imul
arpl
enter
call
jne
push
lret
inc
jne
xor
je
push
or
loope
into
cmp
jecxz
adc
xor
or
mov
lock
dec
inc
js
shr
lods
xor
movl
cmpsl
les
scas
aas
or
movsl
mov
xchg
sbb
xor
xchg
mov
or
mov
call
sbb
iret
into
repz
mov
movsl
mov
xor
icebp
mov
xchg
mov
xchg
cs
xchg
pop
mov
add
icebp
aad
enter
push
or
gs
addr16
inc
aas
scas
lcall
jb
andps
xor
push
mov
pop
pop
movsb
mov
sub
push
gs
imul
les
mov
pusha
fisubs
dec
sub
shrb
xchg
pop
ret
ss
pop
sub
ljmp
addl
mov
pop
inc
insb
cmpsl
out
jns
xlat
cld
scas
cld
sub
lret
xor
pop
jno
das
jge
sub
add
enter
insl
mov
in
xlat
mov
es
xlat
outsb
jns
int3
push
dec
in
stos
mov
stos
adc
cmp
jnp
jl
jns
lods
subl
shlb
shl
or
xchg
mov
xchg
lds
xor
push
or
push
add
pop
aad
xchg
mov
lea
test
mov
dec
sub
add
fdivr
pop
gs
cmpl
inc
in
cmp
lret
jmp
outsl
sbbb
mov
sub
nop
loope
repnz
or
movsl
rcll
xchg
jle
mov
add
mov
bound
pop
insb
cmp
xchg
push
imul
xchg
ret
leave
or
pop
outsl
popf
push
enter
xor
in
push
inc
insl
cmc
mov
imul
cli
xlat
pop
sub
fistl
inc
sbb
es
pop
movsb
add
leave
xchg
xchg
cmp
or
out
into
int3
inc
push
adc
xlat
push
shll
cmp
inc
loopne
fsubl
dec
xchg
test
xlat
jo
xor
mov
mov
lods
push
push
push
add
aam
pop
push
iret
cld
aaa
ret
xor
aas
fiaddl
ret
cli
xchg
add
jae
ljmp
shll
push
int
adc
cld
dec
xchg
fiaddl
orl
push
xor
xor
pop
test
xchg
mov
adc
jge
mov
loopne
outsb
test
pop
test
sbb
lds
push
lea
aas
push
es
or
ds
adc
adc
and
mov
jecxz
xorb
cmp
lret
lret
xlat
xchg
pushf
dec
sbb
popa
lcall
and
loop
push
inc
outsl
es
sub
push
inc
out
push
icebp
pop
inc
into
jb
mov
scas
and
cmpsb
out
push
and
je
pop
aad
xchg
adc
je
aam
lods
and
and
push
inc
cltd
sbb
or
mov
popf
pusha
shl
push
xlat
jmp
push
push
pop
ret
bound
or
jmp
mov
push
enter
push
shl
loopne
outsb
cmpsl
add
test
push
xchg
mov
mov
lahf
popa
pop
cmp
add
cmp
ret
iret
sbb
fdivs
mov
imul
add
add
xor
mov
dec
in
outsl
adc
mov
imul
fiadds
push
sbb
and
popa
jno
xchg
shr
pop
call
add
andb
ja
out
lods
std
push
sti
bndldx
pop
shll
mov
imul
adc
test
aam
movl
dec
mov
fcmovnu
mov
add
inc
inc
and
bound
into
push
roll
pop
test
fdivr
jl
dec
cmp
jne
pop
lock
cmc
pushf
lds
cmp
push
and
cmpsb
in
test
aad
iret
popa
jo
loope
lcall
movl
jle
inc
cmpsl
dec
mov
mov
push
inc
inc
or
leave
fbld
cs
jbe
jae
stc
dec
lods
adc
jne
lds
xchg
add
roll
in
mov
mov
jecxz
cmp
mov
in
das
sub
xor
stc
daa
push
jle
adcb
cmp
adc
les
cld
in
or
xchg
int3
rcl
scas
add
popf
les
lcall
add
push
push
scas
nop
mov
enter
insb
sbb
lret
push
cwtl
repz
push
jg
test
cmp
pop
in
xorl
js
sti
cld
pop
cmp
mov
stos
leave
fdivp
orps
cmp
mov
movsb
mov
popa
mov
clc
mov
sbbl
mov
mov
sbb
lock
sbb
out
loopne
aaa
and
popa
push
fildll
test
sub
jno
mov
stc
push
fbstp
loopne
mov
pop
movsl
inc
leave
mov
inc
push
pop
fists
aas
mov
cwtl
xchg
mov
or
jns
sub
call
add
or
xor
pop
mov
or
js
in
fidivrl
jno
call
sbb
and
cmp
push
push
je
sbb
cli
enter
cmpsl
xor
mov
hlt
pop
mov
cmc
inc
push
rorl
push
and
sbb
sbbb
jb
scas
popa
insl
imul
add
cmp
or
mov
ds
popf
jle
into
imul
push
out
popa
imul
frstor
mov
rclb
int3
mov
or
jne
es
sbb
repz
add
adc
mov
xchg
pop
cmp
arpl
or
dec
pop
sarl
push
cmp
lods
jl
cmp
lods
lcall
les
ss
cmp
push
mov
ret
mov
push
sbb
jb
fistl
imul
dec
mov
std
loop
les
test
call
test
cmpsb
jbe
stos
inc
and
mov
mov
arpl
push
cli
movsb
mov
ljmp
sbb
sub
inc
test
mov
in
shll
addr16
mov
mov
mov
aaa
jmp
call
mov
shlb
fwait
lods
scas
mov
jb
inc
mov
std
inc
fwait
sti
lret
adc
out
mov
ret
imul
cmc
mov
insl
and
and
xor
mov
inc
push
and
int3
push
clc
pop
lds
jne
xor
aam
insl
in
fwait
inc
xor
repz
lahf
adc
cltd
mov
out
ret
test
divb
pop
orl
in
pop
in
in
mov
je
xor
mov
stos
xchg
mov
pop
jns
bound
outsb
push
loopne
rcrl
das
lods
out
mov
push
stc
lods
push
lahf
pop
mov
insl
loopne
mov
inc
test
mov
sbb
mov
out
dec
int
cmp
mov
test
inc
jmp
and
and
ss
mov
sahf
inc
out
aam
pop
sti
jmp
cltd
push
jbe
xchg
arpl
adc
sbb
out
sub
mov
loope
mov
xchg
shll
xchg
mov
sbb
fstl
mov
dec
and
or
inc
push
sub
push
or
movsb
or
sarb
adc
f2xm1
mov
mov
ret
mov
cmpsb
mov
dec
fcos
mov
dec
fistpll
pop
movsl
jnp
out
popa
fdivl
in
jbe
jnp
repz
fs
in
push
or
xor
insl
xchg
lret
jmp
cmp
in
aas
dec
push
mov
test
push
mov
aaa
pop
push
and
mov
adcb
iret
data16
adc
int3
cmp
cwtl
sub
pop
pop
shll
ja
jb
inc
test
push
out
xchg
mov
in
inc
inc
dec
jae
fs
aas
lret
inc
fcompl
jb
sub
pop
in
subl
dec
inc
jbe
jmp
jne
daa
daa
pop
les
and
mov
stos
lret
xor
add
movsl
mov
arpl
sbb
mov
int
xlat
ja
mov
shrb
jne
inc
je
sbb
fs
movsb
sbb
adc
mov
stc
mov
rcll
pop
or
lods
xchg
cmp
cmpsl
jnp
dec
ljmp
sti
mov
add
cmp
fs
ret
and
and
lds
cmpsb
repz
pop
push
add
lds
outsl
scas
cwtl
jmp
imul
sbb
mov
imul
test
xor
in
jno
jno
cs
jmp
iret
jnp
cmp
je
int
fmul
add
mov
clc
cmp
xor
test
fisubrl
xchg
test
dec
jecxz
les
sbb
or
test
xor
pop
add
jns
or
xor
cmp
cs
fistpl
sbb
and
frstor
imul
sarb
adc
sbb
pop
push
pusha
es
jmp
cmp
sbb
adc
test
inc
lods
push
dec
jp
int3
dec
push
repz
pop
mov
push
shrl
mov
or
fcmovbe
mov
lods
aad
jmp
or
shrl
jmp
adc
loopne
xor
cmpsb
aaa
jbe
sti
lret
aad
mov
sub
mov
pop
add
gs
insb
pop
mov
insl
faddl
test
sbb
fdivrl
mov
jmp
cmc
outsl
jge
mov
lock
push
adc
repnz
outsl
push
daa
pop
stos
jne
and
pop
repnz
push
call
bound
fcomps
loop
frstor
movsl
loop
imul
roll
dec
lcall
repz
nop
xchg
dec
mov
mov
ret
cmp
push
jb
into
cmp
jl
in
push
jle
int3
pushf
in
lret
push
xor
jl
cmc
sbb
scas
test
out
push
dec
or
adc
jbe
jnp
add
or
push
adc
out
pcmpeqw
mov
pop
aam
sbb
stos
aas
ret
sub
mov
mov
aaa
sbb
xor
mov
pop
push
cmp
sub
xor
cmpsb
subl
sbb
jge
sub
mov
fstpt
cmp
pop
pushf
in
and
dec
mov
in
jp
xchg
push
inc
out
gs
andl
icebp
add
hlt
and
shlb
sub
or
jae
xchg
scas
inc
adc
mov
repz
mov
sub
mov
cmp
xchg
add
mov
bound
xchg
xor
in
xchg
jns
xchg
cmp
mov
mov
xchg
add
sahf
insl
es
in
insb
andb
pop
aas
ja
dec
xchg
pop
or
fs
pop
jne
jecxz
mull
add
inc
in
hlt
or
mov
fwait
or
mov
push
fidivl
or
mov
shl
dec
xchg
jo
inc
mov
inc
sarl
inc
inc
imull
decb
push
fistpll
mov
test
add
mov
mov
aad
pop
stc
pusha
lcall
adc
sahf
mov
call
cwtl
push
dec
gs
dec
insl
icebp
pop
negl
mov
push
clc
cmpsb
sti
pop
sbb
sbb
jecxz
push
or
xor
es
jo
insl
jecxz
in
cmp
and
or
push
gs
je
lea
outsl
push
ret
arpl
dec
popa
arpl
andl
xchg
rorl
xor
les
imul
or
fisubs
std
cmp
popf
add
cld
call
and
js
mov
shlb
mov
xchg
fwait
jl
or
sti
mov
inc
fidivrl
cld
iret
sahf
cmp
loop
push
cmp
daa
mov
aaa
es
repnz
adc
ret
jl
loope
fistpll
pusha
out
lahf
mov
mov
les
out
aas
lahf
adc
stos
mov
jbe
jle
sarl
cltd
xchg
xor
insl
out
je
cmpsb
dec
and
add
xchg
faddp
mov
xchg
clc
mov
repnz
push
rcrl
ds
xchg
lea
enter
out
aas
mov
roll
outsb
sbb
inc
sub
lea
pop
mov
pop
pop
imul
leave
in
sub
ret
jbe
mov
push
push
dec
xor
scas
xor
fsubrs
jmp
pusha
or
scas
leave
cmpsb
insb
push
add
and
ret
push
cmpl
cmp
inc
aaa
push
inc
xchg
shlb
and
jecxz
or
gs
dec
cmc
cli
stos
je
mov
fcoms
cmp
cmp
mov
popa
jg
insl
push
and
pop
add
sbb
fwait
dec
inc
pop
fbstp
sub
adc
icebp
cmp
ss
or
scas
arpl
fcomps
mov
mov
mov
inc
aaa
sbb
jmp
mov
mov
push
cmpsb
fdivrl
sub
sbb
xchg
push
push
jne
dec
ret
fdivs
ret
imul
sub
ficoms
je
jmp
jecxz
pop
or
inc
xor
xchg
inc
jge
dec
jnp
enter
or
dec
inc
sbb
mov
adc
test
push
popf
pop
cmpsb
xor
and
push
lcall
mov
jmp
xchg
push
push
xor
clc
repz
dec
xchg
xchg
sbb
add
test
mov
mov
cltd
orl
cmp
adc
and
divb
or
sahf
xchg
adc
mov
sub
shl
int3
mov
xor
jno
xor
icebp
xchg
push
rcrl
int3
or
adc
dec
faddl
mov
loop
xchg
std
test
push
or
cmp
stc
jns
testb
ret
stc
mov
test
mov
icebp
fucomi
lods
push
jbe
in
testb
lods
jl
icebp
or
mov
popa
adc
or
jno
adc
pop
sub
push
in
pop
out
rorb
jle
sbb
repnz
lods
dec
arpl
outsb
sbb
cltd
or
outsb
stos
dec
mov
fwait
sarl
push
cs
sarl
mov
mov
push
fxam
repnz
pop
ds
popa
popf
rcrl
inc
xchg
popa
mov
mov
sub
push
ss
sbb
adc
mov
push
pop
jnp
addr16
pusha
insb
pop
lret
add
or
lcall
popa
inc
lods
cmp
xchg
mov
sub
dec
rclb
mov
push
inc
mov
sub
sub
add
push
ja
sub
mov
sub
sbb
inc
nop
xor
pushl
xchg
test
mov
mov
sub
cmp
mov
ljmp
push
int
aas
add
cmpsl
js
movsb
stc
pop
sti
mov
dec
ret
ret
pushf
pop
push
imul
out
fcmovnbe
sarb
sbb
nop
jno
dec
bnd
lock
rorb
jp
cmp
mov
insl
mov
lea
test
repz
in
sbb
das
pop
xchg
nop
das
push
js
sbb
sub
inc
aam
pusha
mov
sbb
dec
rorb
fsubr
cmp
test
test
mov
cmc
addb
out
mov
test
pusha
add
loope
jae
fwait
data16
and
push
and
test
dec
hlt
jge
es
cs
mov
clc
pushf
lcall
mov
cltd
and
aaa
mov
mov
in
sti
inc
xchg
movsl
in
in
cmp
xchg
pushf
mov
jecxz
jle
ret
adc
mov
and
mov
push
xchg
cmp
lods
sub
mov
inc
lods
shll
std
dec
jnp
dec
insb
mov
out
and
out
xor
cmp
push
adc
adc
loope,pn
jl
orb
mov
into
fistps
mov
mov
xchg
jne
cltd
and
jge
iret
pop
pop
arpl
push
stc
aaa
add
sbb
jno
mov
dec
xchg
ljmp
jbe
imul
ret
loopne
xor
xchg
popa
dec
repz
lds
rorl
lock
aad
xchg
add
cwtl
mov
aad
lcall
sahf
adc
cmp
pop
movsl
lahf
gs
inc
ss
pop
inc
lret
in
jne
pop
aaa
je
imul
or
adc
mov
jnp
bound
mov
test
shr
adc
mov
push
mull
or
fwait
in
outsb
insl
mov
pop
je
mov
into
fcompl
out
call
pushf
clc
xlat
add
rolb
es
into
shl
test
das
rolb
shll
enter
mov
xchg
lods
inc
sbb
dec
lcall
and
lods
pop
push
pop
ja
addr16
push
movsl
js
lock
fisttps
mov
pop
adc
fmul
stos
jecxz
push
push
adc
cmp
xchg
jbe
in
add
fstl
mov
popf
xchg
gs
addb
pop
in
inc
xchg
shll
fdivs
cmpsb
addr16
mov
fnsave
dec
mov
call
cmpb
imul
cltd
lods
fcomi
pop
mov
push
xor
incb
enter
xchg
cmp
or
inc
pushl
fisubs
xor
and
jno,pt
testb
mov
rolb
push
pop
int3
add
add
xor
pop
mov
push
xchg
xchg
mov
shrl
in
mov
mov
jle
out
movsb
loop
shrl
lcall
frstor
xor
rclb
mov
pop
stc
xchg
xchg
push
add
mov
cmp
pop
mov
sub
daa
mov
jae
jmp
or
xor
cmp
jnp
jp
test
adc
inc
fistpl
xor
or
scas
pop
inc
shlb
add
outsl
loopne
das
dec
movsb
dec
inc
sbb
push
out
pop
movsl
inc
ret
sbb
inc
inc
adc
cs
jb
adc
pop
mov
adc
push
pop
scas
mov
xor
jge
cmp
mov
js
aad
insl
push
pop
out
and
std
pop
fwait
sbb
test
pop
in
push
adc
iret
cmc
jae
adc
filds
mulb
test
mov
imul
xchg
cmp
cmp
sub
push
cmp
pop
xchg
xor
sahf
add
or
xchg
mov
and
jg
clc
xor
clc
scas
imul
imul
mov
dec
and
and
sbb
jge
fisttpll
or
and
jmp
cmp
mov
mov
sahf
fmuls
popf
filds
inc
xor
sahf
dec
or
add
xchg
repz
push
dec
mov
or
stos
dec
test
and
fcompl
andb
xor
jno
pop
or
push
fstl
lea
inc
ret
imul
es
cmp
testl
iret
fidivrl
out
test
xchg
push
rcrl
scas
ret
int3
and
push
ret
mov
jl
sub
jo
scas
sub
cmp
or
sbb
sbb
inc
shll
dec
jmp
dec
pop
cli
shlb
sub
jg
stc
outsb
fisttps
jbe
repnz
add
outsl
mov
test
xchg
repnz
inc
mov
pop
repnz
and
sbb
sub
xor
mov
push
shl
rorl
cmc
add
shlb
call
push
ret
jge
pop
loope
sarb
sbb
dec
sbb
sbb
ljmp
push
xor
repz
rcll
js
inc
test
ficoms
popa
xchg
cmpb
loopne
out
ss
fs
es
sbb
inc
mov
sub
sarl
scas
aam
arpl
push
or
inc
dec
push
xchg
subl
dec
out
cltd
js
mov
jl
loopne
mov
mov
push
mov
xchg
rcll
pop
pop
jnp
repnz
rorb
xor
cmp
lds
add
adc
jns
mov
ds
ret
in
push
sbb
mov
ljmp
jle
dec
pushf
arpl
adcl
sub
fs
xor
sbb
insl
lds
xchg
or
inc
pop
daa
cmp
pushf
dec
jo
stos
sahf
sbb
std
test
sahf
shrl
lahf
mov
into
inc
icebp
arpl
jne
not
adcl
dec
add
mov
cwtl
pop
nop
dec
leave
jmp
jb
fs
mov
loop
pop
adc
xor
push
mov
popa
jp
and
jno
pop
sar
rclb
and
adc
outsb
cmp
mov
cld
pop
lds
jbe
hlt
test
push
iret
scas
js
pop
xchg
outsl
mov
data16
leave
push
xor
lcall
push
inc
adc
arpl
lret
pop
push
leave
sbb
mov
mov
adc
decb
mov
jl
mov
pop
lcall
ficompl
xor
push
jle
mov
call
jg
popf
loope
sbb
xor
ja
mov
clc
xor
in
adc
jge
jl
sahf
mov
xlat
add
fs
lahf
sub
or
pop
pop
sub
push
inc
out
adc
call
sub
or
or
jmp
mov
pop
xchg
push
add
loopne
sahf
aam
push
jbe
fistpl
pop
cmpb
cmpsb
or
jl
push
fistpll
adcb
rorb
adcl
xlat
cmp
push
push
sbb
mov
xchg
fldenv
jl
dec
inc
shlb
dec
and
repz
loope
xchg
xor
xor
mov
adc
mov
mov
fnstenv
cmpsl
sarl
xor
mov
jecxz
adcb
mov
ss
inc
sti
push
inc
lahf
ficoml
lcall
outsb
movsl
jg
jl
insb
loopne
pop
fnstcw
mov
mov
test
xchg
sub
xchg
je
loop
xor
aaa
outsl
mov
mov
hlt
test
or
adc
and
inc
mov
lock
sti
add
es
xchg
pop
lock
into
mov
xchg
stc
dec
push
xorl
and
aaa
add
push
pop
fwait
iret
lds
popa
shrb
ret
pop
icebp
clc
orps
cli
cmp
cltd
cmpsb
push
fwait
scas
mov
jge
cmpsl
sub
and
test
mov
add
loope
adc
sbb
and
jo
mov
jl
loope
in
or
dec
std
jp
aaa
xchg
flds
sub
pop
xchg
inc
xchg
mov
test
add
cmp
fwait
inc
fld
mov
or
shlb
inc
push
andb
xor
aam
mov
movsb
push
jns
mov
xchg
push
bound
mov
push
xchg
push
xor
pop
mov
test
rcll
xchg
test
addl
je
test
mov
enter
in
sti
pushl
jno
lock
popa
and
mov
inc
test
repz
jmp
sbb
imul
loope
ficoml
cmpsb
shll
inc
xchg
or
je
mov
movsl
sbb
xchg
mov
add
in
cli
call
mulb
sbb
cli
xor
lahf
adc
pop
pop
mov
jns
mov
dec
cltd
lds
std
loop
pop
lods
mov
enter
xchg
jae
lcall
jno
mov
push
mov
jnp
jecxz
push
lods
xchg
mov
stos
xorl
sahf
push
cwtl
repz
dec
cmp
mov
out
pop
or
cmp
loopne
jnp
into
mov
xlat
xchg
dec
cmp
cli
mov
push
popa
int
insl
mov
je
loope
xor
pop
xor
xor
cltd
mov
fbstp
mov
outsl
stc
xchg
je
in
xchg
sub
pop
nop
insb
pop
loopne
ja
lret
stos
pop
mov
rcrl
cmp
insb
test
ficomps
pop
inc
mov
sahf
test
imul
xor
mov
push
push
sbb
movsb
imul
mov
ds
cld
arpl
pushf
add
les
sub
inc
dec
insb
jp
xor
cld
pop
xchg
and
or
or
call
lret
sbb
inc
out
add
or
and
push
inc
xchg
imul
cmp
dec
orb
pop
ret
movsb
jno
sahf
movl
sub
and
or
xchg
pop
lds
flds
lods
lret
inc
jne
pop
subl
mov
mov
mov
loope
shrb
ja
cwtl
jnp
popa
xchg
shl
nop
xchg
inc
cmc
fisubl
ja
cmp
movsl
ja
cmp
xchg
sub
xor
test
cld
pop
pop
cmp
mov
cltd
ds
inc
pop
stc
push
xor
mov
adc
cmp
push
push
push
mov
jb
test
rcl
jmp
aad
pop
in
jo
clc
loopne
cwtl
aas
sub
xor
xor
push
add
das
cwtl
mov
lds
call
dec
jb
jo
stos
pop
cli
pushf
addb
mov
jp
pop
inc
int3
xchg
adc
push
lcall
out
inc
xor
push
inc
cmp
aad
scas
rolb
sbb
stc
fnsave
in
jp
in
pop
in
test
stc
mov
pop
add
push
push
add
or
inc
repz
iret
insl
scas
dec
push
cmpsl
dec
mov
and
inc
jle
pop
gs
sbb
roll
fistpll
lret
dec
xor
jo
insb
and
rcrl
mov
pop
imul
sub
lret
xchg
dec
inc
dec
fisubrl
push
mov
in
int
sbb
les
test
add
jns
push
inc
imul
sub
sub
js
and
mov
dec
test
push
mov
pop
jp
arpl
ss
lods
imul
jae
int
std
xchg
inc
ljmp
cmp
push
add
je
pusha
push
adc
dec
sub
popf
sub
and
loopne
lahf
in
pop
pop
ljmp
jl
dec
loopne
rcrl
add
nop
cmp
push
mov
mov
or
sbb
dec
call
ret
cmpsl
sub
imul
int
cmp
jne
ret
leave
jo
adc
sahf
push
mov
stos
add
enter
loope
fildll
pop
push
inc
push
cmp
lret
mov
mov
std
movsl
icebp
add
loope
wrmsr
mov
xchg
xchg
ret
or
push
sub
jmp
pop
lods
sbb
imul
push
mov
stc
in
insl
jno
cmp
repz
in
sub
xchg
cmc
jge
aam
jl
push
mov
xchg
adc
test
mov
mov
popf
stc
push
stos
mov
icebp
adc
lods
xorl
pop
jbe
push
sub
add
cmp
lahf
mov
or
jmp
mov
fnstcw
out
imul
and
sub
mov
mov
daa
or
cld
ss
mov
sbb
sub
lock
pop
loope
mov
or
or
mov
mov
push
jmp
jns
jl
outsl
sub
push
jne
push
repz
cmp
nop
out
jmp
cmc
add
inc
jo
out
cmp
enter
adc
ja
ljmp
shl
faddl
jno
rorl
imul
cmpsl
adc
dec
mov
leave
push
mov
lahf
push
gs
pop
or
add
sbb
orb
mov
stos
xchg
aam
ret
sub
lock
mov
js
inc
hlt
cmp
fisttpll
pop
or
push
stos
ja
jecxz
push
test
cmp
pop
enter
das
lea
jmp
loope
jg
fisttpll
dec
fistl
fdivr
jbe
das
dec
shl
xor
movsl
pop
sbb
jl
or
and
add
mov
aaa
imul
cld
push
lahf
dec
test
jo
lods
sbb
test
sub
xor
fsts
and
les
jae
stc
mov
mov
outsl
pop
out
popf
xchg
mov
clc
sub
mov
pop
out
dec
push
out
or
mov
sub
sbb
and
cld
fsubrl
inc
cmp
inc
mov
test
fbld
cmpsl
pop
add
mov
dec
xchg
cmp
cmp
xor
fwait
and
cmpsb
jecxz
mov
in
in
or
out
xlat
les
insl
iret
daa
shll
jne
inc
inc
dec
xor
scas
add
shlb
lods
popf
andb
fwait
and
sahf
inc
loope
add
in
aad
add
mov
mov
loopne
mov
jge
mov
insl
xchg
faddp
or
scas
addr16
hlt
dec
aam
mov
rorl
mov
mov
inc
loopne
add
out
cs
or
cmp
inc
sbb
loope
adc
mov
mov
adc
inc
or
cmp
outsl
mov
add
call
pop
mov
gs
xchg
mov
cmc
or
jmp
fistpl
lcall
push
cmp
pop
filds
mov
xchg
inc
inc
lea
jp
mov
mov
jl
mov
cmp
dec
jnp
leave
mov
ret
hlt
pushf
adc
ficomps
clc
cmp
push
nop
xchg
pop
outsb
xchg
jecxz
mov
test
xchg
stos
test
sbbl
cwtl
insl
das
and
ret
jl
sub
mov
mov
jbe
lock
fidivl
lods
negb
in
rcrb
cmp
shlb
sbb
dec
inc
stos
push
lcall
cwtl
push
in
inc
cmp
adc
mov
inc
sub
inc
inc
cmpsb
std
ss
and
dec
fisubrs
fdivp
xrelease
cmp
mov
mov
loope
and
xchg
outsb
add
sbb
es
mov
dec
dec
sbb
sarl
in
inc
xchg
rcrb
icebp
push
add
out
mov
rolb
dec
mov
int
clc
or
bnd
adc
sub
imul
sbb
add
inc
cmp
daa
mov
cmp
ja
cld
mov
in
into
sbb
adc
sar
add
outsb
push
cmp
mov
push
and
rcr
scas
inc
pop
repnz
sbb
imul
dec
ds
or
loop
aas
lcall
cmp
xor
mov
pop
inc
mov
fwait
mov
push
test
fnsave
outsb
cmp
inc
jns
xchg
stc
pop
xor
sbb
add
add
sti
test
leave
jno
cmp
push
add
rorl
pop
jmp
mov
sti
add
outsb
clc
dec
adc
bound
ljmp
inc
test
scas
pop
lock
inc
mov
cwtl
addr16
jge
out
sahf
mov
pop
cmp
xchg
jb
jle
ljmp
cltd
imul
call
or
in
movsl
mov
pop
test
jns
or
or
and
xchg
cmp
loope
pusha
jnp,pn
movsl
mov
adc
push
fadds
ja
mov
xchg
mov
das
fwait
xchg
lds
mov
ss
pop
cld
dec
push
lea
cs
sbb
sub
and
xchg
push
mov
sbb
mov
ja
inc
orb
test
xlat
js
scas
adc
pushl
and
push
sbb
adcb
aad
dec
mov
aas
jmp
cmpsl
addl
mov
mov
lret
cmpb
cmpsl
and
movsb
aam
inc
dec
push
push
add
xorb
cs
and
int3
popf
imul
fldcw
enter
inc
aad
mov
ja
and
push
pop
add
fwait
test
push
popf
lret
inc
sub
xchg
iret
ret
dec
out
add
push
xor
les
dec
mov
dec
jbe
push
sbb
sub
add
xchg
inc
dec
cmpsb
sub
out
int
mov
js
lds
xchg
add
jle
dec
cmpsl
jbe
or
jae
cmp
adc
pop
cli
inc
ja
rol
icebp
and
test
inc
insb
jmp
jle
fsts
scas
xchg
xor
adc
out
inc
and
adc
gs
fcom
mov
jbe
sbb
mov
xchg
add
push
pop
loope
stos
ret
jl
iret
mov
or
xchg
cs
cmovge
and
sub
and
icebp
aam
gs
mov
pop
hlt
or
imul
cmp
cld
aaa
fdivl
stos
cmp
pop
pop
hlt
sbb
out
and
xchg
pop
cmp
out
mov
cmp
mov
sub
xchg
icebp
mov
push
out
in
mov
inc
test
or
lock
int
loope
inc
ret
loopne
int3
adc
fs
je
inc
xor
push
cmp
scas
lcall
mov
inc
inc
gs
mov
les
xchg
fwait
sbb
and
faddl
sbb
addr16
int
jae
pop
mov
data16
and
push
xchg
sub
dec
les
mov
pusha
xlat
movsl
mov
push
xor
xor
adc
into
xor
nop
lea
adc
fwait
dec
jg
test
loope
dec
pushl
and
add
jno
mov
jmp
and
push
or
add
lahf
or
icebp
dec
inc
ljmp
mov
mov
xchg
int
scas
jno
push
or
lcall
out
mov
or
leave
popf
shl
or
cmp
pop
shrb
or
lock
fadd
pop
imul
rorb
mov
aas
pop
fstpt
addr16
mov
lods
jns
adc
mov
mov
jge,pt
jge
pop
lcall
lea
xchg
fs
js
cli
mov
push
dec
mov
fsubr
js
test
stos
push
jnp
jmp
repnz
aas
fists
das
push
arpl
xchg
daa
std
or
cmc
lds
pop
cmp
mov
stc
pop
ret
in
gs
in
sti
out
loope
jle
or
dec
mov
lods
std
insl
inc
inc
inc
inc
and
insl
sahf
add
fldenv
fcompl
mov
inc
jnp
dec
mov
pusha
lock
les
cltd
mov
ds
mov
out
adc
lahf
inc
mov
inc
or
mov
push
xor
aad
adc
jmp
popf
in
cmp
sbb
inc
dec
fildl
mov
popa
andl
push
stos
xor
jg
push
cmc
push
sarl
into
xchg
inc
ret
out
mov
fdivp
popa
aaa
in
pop
daa
push
enter
arpl
int
mov
int
push
cmp
xor
mov
mov
dec
xor
ljmp
fidivrl
test
sub
mov
dec
ja
aad
jge
daa
add
or
fucomip
dec
out
rol
repnz
jbe
into
call
mov
inc
addr16
pop
push
cli
jle
rcrl
add
mov
dec
loopne
and
lods
dec
push
and
cmpb
ret
mov
arpl
ror
adc
out
sbb
jo
fisubl
std
pop
andl
decl
js
pop
out
test
or
arpl
jp
fcompl
imul
adc
and
mov
gs
test
jmp
es
fwait
in
sub
or
pop
aad
mov
cwtl
xor
jg
jb
cmp
lcall
and
lods
sub
outsl
or
aaa
aas
divl
xorl
or
add
xchg
addr16
adc
ss
jg
xor
stos
xor
cmp
dec
mov
test
push
pop
pop
jbe
int
jl
fdivrl
or
xchg
inc
sub
mov
add
addb
enter
movsl
push
out
lds
cmc
mov
sbb
int3
filds
mov
mov
outsb
loope
push
je
sarl
pop
push
lods
xchg
mov
lods
xchg
jb
xchg
ja
inc
cmpsl
lret
inc
push
mov
jb
es
in
daa
out
sub
lahf
and
sub
or
stos
cli
cmc
sbb
loop
les
dec
nop
pop
imul
repnz
adc
or
outsb
repz
mov
rcrl
mov
lcall
into
std
mov
push
and
pop
ja
jb
jmp
rcrb
pop
mov
es
int3
stos
xor
std
lods
mov
push
test
mov
ja
arpl
stos
insb
ror
inc
push
sub
push
in
ror
loopne
minps
ljmp
ret
ret
bound
jb
push
mov
cmp
pop
int
cmp
jl
fiadds
jge
scas
inc
pop
addr16
es
cmp
jl
xchg
lcall
inc
dec
adc
fs
int3
lcall
dec
xchg
rolb
push
adc
push
cli
out
inc
xchg
jno
arpl
and
xchg
in
into
mov
inc
cmp
cmpsb
aad
iret
lret
outsb
rcrl
cmp
data16
sti
xchg
fistpl
cwtl
fisttpl
imul
call
or
mov
inc
lret
and
pop
add
fldcw
cmp
push
dec
pop
pop
pop
aaa
jnp
lahf
add
rcrl
mov
add
sub
jp
dec
ficomps
into
psubusw
mov
and
push
out
adc
adc
or
cli
in
add
ljmp
push
sbb
adc
pop
ja
xchg
adc
fdivrs
stc
pushl
mov
sti
outsl
mov
push
filds
mov
int3
sbb
fmul
fwait
mov
xchg
push
outsb
push
xor
test
pop
into
orb
jo
jns
enter
add
movsb
ja
mov
inc
xchg
adc
xor
rcll
fistl
out
fstps
add
mov
xor
mov
adcb
lret
pop
inc
dec
pop
test
mov
gs
loope
icebp
jns
gs
enter
jmp
sub
out
push
xchg
jb
call
rorb
xor
out
arpl
loop,pt
mov
fcomi
outsb
aas
movsb
out
dec
test
pop
ja
cwtl
push
cmpsb
mov
in
fldl
jg
sbb
mov
mov
imul
addl
mov
loopne
inc
ss
je
sahf
int
adc
pop
or
out
or
cmpsl
ds
ficompl
andl
pushf
les
inc
xchg
mov
in
dec
or
cltd
lock
push
movsl
fnstcw
loope
push
loopne
sbb
repz
gs
stc
push
in
mov
jl
sub
or
mov
xchg
stc
xchg
mov
jae
sbbl
jns
aas
js
or
push
in
push
and
scas
mov
cmp
mov
push
jbe
or
adc
xor
mov
inc
mov
dec
sbb
cmp
stos
int
scas
sub
test
stos
fsub
in
data16
cmp
cmp
dec
dec
mov
xchg
mov
inc
or
push
cltd
or
jno
mov
xorl
sbb
xlat
dec
out
into
cwtl
fdivl
repnz
mov
mov
adc
nop
push
lds
or
aaa
xor
lret
mov
xchg
mov
into
lods
cwtl
test
adc
and
inc
aaa
js
pop
or
aam
into
adc
fnstenv
daa
mov
pmuludq
mov
aas
pop
sarl
xor
lret
xchg
dec
daa
pop
jb
lret
mov
mov
stc
stos
lods
ds
cmpsb
dec
xor
cmc
dec
aaa
daa
jb
mov
cmpl
in
shlb
fwait
out
addb
adc
sahf
cmpsb
cmp
cmp
or
add
insl
or
test
scas
dec
dec
and
scas
adc
movsb
lds
popa
mov
cs
sub
sbb
or
mov
dec
aam
push
push
sahf
push
push
int3
mov
in
inc
xchg
out
mov
std
xchg
stos
cld
mov
popa
cmp
movsl
movsl
pop
mov
mov
inc
mov
xor
scas
aaa
scas
stos
cli
popf
sarb
shl
push
jmp
push
jno
decb
xchg
int
imul
mov
inc
mov
hlt
test
mov
je
mov
push
or
push
out
cmp
xchg
sahf
mov
mov
cli
pop
pushf
pushf
sub
dec
pop
addl
rolb
xor
lock
push
jno
es
cmc
mov
sbbb
sub
loop
cmp
mov
add
int3
sbb
cmpsb
aad
test
std
leave
aad
push
xor
divb
xchg
mov
loopne
mov
mov
addr16
rolb
dec
leave
pop
mov
pop
dec
repz
shlb
jae
mov
out
arpl
and
psubsb
xor
add
addb
out
cwtl
test
cmp
xchg
cs
xor
jg
xchg
inc
test
xchg
outsl
lds
ret
sbb
pop
sbb
mov
mov
sbb
outsb
shll
xchg
orb
jnp
aam
sub
sbb
test
faddp
pop
and
cmp
pop
xor
int
addr16
cmp
loopne
pop
dec
rolb
lcall
xor
xchg
adc
mov
xchg
loope
mov
pop
lret
mov
out
icebp
imul
add
sub
pop
ret
push
mov
add
cmp
xchg
sbb
mov
ret
lahf
cmp
icebp
xlat
and
inc
repnz
sahf
inc
push
xor
lcall
pushf
stos
sub
adc
ljmp
ja
imul
or
lret
dec
jmp
xchg
pusha
hlt
cli
push
cmp
and
inc
shll
mov
xchg
mov
mov
hlt
cwtl
sub
repz
and
add
and
pop
xor
mov
xchg
add
mull
xor
nop
dec
add
pop
les
inc
mov
and
sar
inc
lds
das
addb
fidivl
mov
repz
fidivs
into
xorl
cmpsl
loop
xor
push
xchg
cli
rol
mov
xchg
into
pop
loop
pop
xchg
xlat
jmp
xchg
add
stos
bound
inc
jp
dec
fstps
sbb
mov
ret
ret
iret
int3
fisttps
lods
repnz
sbb
imul
pop
mov
xor
and
adc
dec
pop
rorb
aaa
mov
jae
pop
insl
pusha
dec
inc
pop
std
mov
cli
lds
movsb
sbb
loop
int
pop
adc
test
sbb
das
mov
xor
ja
mov
ret
push
mov
rol
mov
insl
jae
cmp
test
jns
sub
lods
pop
add
pop
rorb
andb
pop
inc
mov
scas
xchg
into
pop
addr16
pop
mov
out
mov
movsb
gs
mov
sbb
daa
sti
std
jns
mov
mov
lods
xor
adc
xor
inc
and
hlt
adc
call
fs
sbb
ret
rorl
jnp
xchg
inc
inc
and
add
je
inc
scas
mov
xchg
mov
xchg
loope
fildll
shrl
mov
sub
or
aaa
lcall
dec
in
xchg
pop
loop
sbb
lret
sub
and
ret
inc
iret
in
sbb
add
jne
inc
pop
xor
fsubr
ror
dec
add
sbbl
xchg
mov
cmp
in
lret
test
xor
jecxz
dec
xchg
push
push
xor
or
mov
sub
ja
mov
andl
es
add
jae
inc
mov
stos
push
jge
inc
or
std
and
lahf
js
and
xchg
into
test
or
xor
mov
in
in
fs
sub
fs
shrl
sub
push
sbb
pusha
add
call
test
fnstcw
pop
bound
std
test
ss
mov
outsb
fucom
test
cltd
lods
dec
sub
imul
mov
movsl
arpl
cmc
addr16
ss
jl
and
or
mov
xchg
xchg
mov
mov
dec
arpl
pop
pop
and
cmp
fs
sbb
insl
pop
lock
sbb
add
cmc
pushf
inc
xchg
popf
in
cld
inc
push
jecxz
outsb
sahf
cmpsl
je
scas
mov
jmp
fidivrl
mov
jp
cmp
or
inc
aas
jge
xor
repnz
dec
pop
mov
repz
mov
iret
call
push
pop
jmp
enter
jp
lock
push
outsl
mov
push
mov
sub
mov
lods
mov
cli
lods
fistps
in
call
fs
mov
ds
pop
sahf
mov
clc
bound
fs
inc
iret
lods
cs
adc
and
jl
sbb
das
frstor
push
mov
add
dec
sub
lcall
lahf
jae
lcall
inc
dec
pusha
sti
dec
sbb
cmc
shlb
lock
insb
xor
imul
sbb
pop
sub
push
sahf
mov
cmp
fdivp
and
pop
push
dec
aam
je
adc
roll
je
hlt
mov
xchg
mov
cld
mov
daa
shlb
jge
xchg
push
enter
mov
sub
lods
sub
out
push
adc
fdivrs
xchg
aas
jg
ljmp
xchg
scas
in
dec
stc
cmp
mov
mov
popa
arpl
in
push
jp
cmc
lock
filds
pop
outsb
fnsave
sbb
pop
int3
push
nop
inc
jns
add
pop
inc
push
in
idiv
stos
or
gs
cmp
out
rcl
loop
pop
clc
fdiv
mov
and
shrb
cltd
mov
cmp
sbb
out
insl
int
jecxz
push
ret
sbb
sbb
pusha
and
ds
mov
xchg
popf
ljmp
push
jb
ret
mov
cmp
cmpsl
popf
lea
cli
mov
add
movb
cmp
ljmp
popa
test
dec
add
test
cmp
adc
pop
dec
pop
jl
std
mov
pop
add
mov
cmp
stc
outsl
xchg
cmpsl
cmpsl
jmp
mov
rolb
pushf
pop
dec
inc
stos
mov
filds
add
jecxz
add
sbb
xchg
dec
xor
mov
aaa
mov
shrl
push
fildl
out
int3
push
dec
dec
std
push
and
aam
xchg
pop
movsb
fbstp
mov
mov
mov
arpl
hlt
lcall
mov
jns
fsubrl
sub
ja
pushf
mov
sar
fwait
xchg
jl
js
ffree
out
mov
jo
cld
cmp
jp
arpl
xchg
mov
shlb
jmp
pop
sub
ficompl
stos
or
xchg
data16
pop
es
cli
lcall
pop
subb
ja
stos
repnz
loope
inc
inc
xor
pop
ss
pushf
loopne
lea
cmpsl
flds
pop
call
push
dec
int
adc
hlt
sub
and
sub
out
in
and
testl
or
push
xor
jle
xlat
mov
sub
adc
pushf
xchg
bound
rolb
and
and
testb
es
int3
xchg
jb
mov
fs
sti
nop
xchg
xchg
lds
xchg
add
jle
mov
test
dec
sbb
pusha
outsl
and
fcomps
jmp
xorb
and
xor
test
pushf
inc
das
rolb
test
mov
inc
jg
and
fcomps
clc
sbb
scas
xchg
fists
roll
fs
shll
sbb
out
jmp
clc
test
lods
dec
sbb
mov
icebp
jbe
mov
cmp
inc
mov
inc
mov
push
mov
fisubl
xor
test
mov
cmp
andl
jecxz
stos
arpl
je
jl
cmp
inc
and
hlt
test
cmp
pop
and
cs
cmpsb
pop
stos
add
sbb
jmp
icebp
movsb
cmp
stos
mov
lcall
sub
adc
out
bound
rcrb
push
pop
inc
cs
inc
add
std
fisubrs
pusha
dec
and
inc
mov
cmpsl
or
in
xchg
movsb
sbb
cmpsl
lods
aad
inc
jbe
rcrb
shlb
cmc
push
aas
lods
arpl
in
mov
popa
or
shlb
jmp
or
push
pop
mov
jbe
ret
add
mov
fsubp
jl
fmul
sbb
fdecstp
mov
int
dec
push
mov
loope
xor
xor
push
rcpps
fldl
xor
stos
nop
mov
inc
stos
aad
push
or
fadd
out
mov
insl
pushf
scas
cwtl
outsl
add
dec
mul
test
dec
add
out
push
jmp
jns
sub
in
xlat
mov
cmpb
mov
ljmp
jmp
cmpsb
xor
lret
out
xchg
xchg
rcll
scas
dec
jb
subl
dec
leavew
push
mov
addr16
pop
pop
mov
int
jge
pop
fs
mov
sahf
stos
adc
inc
mov
in
movsl
in
out
or
xchg
adc
sti
lret
movsb
fdivrs
push
fistl
ret
int3
xor
les
xchg
imul
adc
dec
mov
or
mov
jmp
lahf
nop
out
clc
imul
and
cli
shlb
into
hlt
outsl
idivb
fdivl
inc
and
dec
inc
dec
stc
jmp
cmp
and
mov
les
mov
enter
outsl
mov
mov
mov
les
cli
cmp
xchg
popf
jns
xor
sti
gs
sarb
mov
sub
mov
jmp
inc
stc
or
mov
nop
inc
jbe
lods
adc
xchg
std
pop
idivb
adc
cwtl
or
inc
or
push
xchg
cmpb
cmpsb
or
and
push
nop
lods
cmpb
sub
add
sub
icebp
inc
insl
pop
in
or
outsl
xchg
jb
in
inc
push
lcall
lods
inc
clc
cmp
popa
fs
push
dec
cmp
cltd
pop
addr16
test
add
outsl
adcb
xlat
leave
or
add
inc
mov
lods
imul
scas
and
ret
push
sub
insb
lcall
gs
jg
add
mov
scas
arpl
pop
pop
dec
sub
cmpsb
xchg
mov
cmpsl
mov
xor
mov
push
mov
or
ja
loop
push
or
xor
mov
enter
fstpl
inc
sub
xor
push
pop
jge
inc
rorl
push
addb
fsub
fwait
jo
pop
push
or
pop
inc
shl
into
and
or
adc
mov
lds
jbe
mov
lods
xor
test
jae
xor
leave
mov
sbb
sbb
movsl
sub
data16
mov
andl
rclb
shrl
test
ret
mov
cmp
cmp
int
pmaxsw
mov
scas
and
adc
pop
pop
das
jmp
fs
fidivl
fs
jnp
cltd
sub
xchg
sahf
cmp
jno
mov
push
popa
cld
jge
ljmp
in
in
icebp
cmp
sub
add
cwtl
xlat
popf
les
mov
pop
aas
inc
in
jg
xchg
std
cli
push
movsl
mov
rolb
adc
sahf
movsl
js
pushf
xor
jecxz
cmp
jo
ljmp
nop
fistpll
push
xor
inc
sub
orl
cmc
es
or
mov
push
sbb
hlt
ret
outsb
negl
inc
ljmp
test
add
xchg
push
pop
pop
gs
outsb
xor
fdivl
ljmp
adc
pcmpeqb
nop
jae
xchg
inc
cmp
sti
stos
dec
mov
in
cmp
cld
mulps
data16
lods
dec
push
cmp
dec
jnp
and
pop
mov
mov
mov
lahf
and
cmp
xchg
sub
repnz
sub
cmp
push
dec
xchg
sarl
imul
mov
out
push
addr16
push
rorb
call
push
leave
pop
dec
jbe
jno
lcall
jge
aaa
test
jg
lcall
jnp
pop
mov
outsl
aas
mov
pushf
lds
push
and
push
ss
mov
inc
outsl
sbb
stc
cmp
xorl
and
fiadds
xchg
popf
add
test
stos
stos
in
lcall
xchg
jne
sub
adc
push
cwtl
lea
push
sub
jecxz
xor
outsl
dec
into
mov
shl
xchg
or
jecxz
dec
pop
inc
add
inc
xlat
push
dec
test
jecxz
jp
and
lods
jmp
fdivrs
push
pop
and
or
stc
mov
lock
es
push
jae
ficompl
imul
and
mov
fstpt
mov
inc
fildll
mov
movsb
ss
fst
xchg
aam
xchg
test
push
and
scas
mov
repz
clc
push
jp
pop
adc
fwait
mov
push
cmp
call
xchg
aam
rol
adc
and
aam
movsb
lods
pusha
cmp
aas
stos
lahf
sahf
ljmp
jb
mov
mov
shlb
push
cmpsb
mov
push
cmp
jns
out
pusha
xor
in
es
or
movsb
aas
je
adc
lock
push
idivl
cmp
das
sahf
repnz
xlat
xchg
out
jl
or
inc
adc
jmp
mov
add
stc
cli
xchg
and
pop
insb
mov
sbb
cld
pop
mov
sbb
cld
add
push
div
pop
ret
cmp
sti
sbb
mov
and
sbb
add
mov
xor
pop
mov
lods
cld
jno
push
cld
or
js
stos
push
imul
jae
adc
push
aam
ret
mov
jmp
push
decb
or
out
push
lcall
jbe
popa
push
inc
pop
clc
push
repnz
xchg
add
lcall
repnz
movsl
jle
dec
test
mov
mov
fwait
push
imul
imul
imul
int
xor
mov
fisubrl
add
lods
data16
xor
in
test
adc
aaa
mov
rorl
adc
std
in
mov
and
push
xor
lods
push
mov
repz
cmp
stos
cli
adc
hlt
push
lret
mov
cli
bound
shll
insl
nop
sbb
out
stos
lea
xor
mov
lret
xlat
lret
add
pop
mov
pusha
xor
cmp
mov
xchg
cmp
mov
xchg
mov
ss
lods
pop
add
or
outsb
cmpl
lret
leave
pop
lret
adc
mov
aas
adc
ja
stc
rolb
and
dec
popf
push
or
sub
incb
cli
out
adc
aad
or
sbb
dec
insl
pop
imul
cmc
add
dec
xchg
jmp
mov
inc
lcall
call
lods
add
xchg
sbb
push
test
xchg
rclb
test
loop
cmp
out
jns
mov
aam
and
je
popa
fistpll
adc
pop
or
in
cs
add
jbe
arpl
insb
mov
mov
pop
mov
std
std
subb
xchg
call
shr
ljmp
shrb
xor
xchg
adc
lods
adc
jnp
sbb
xchg
or
xlat
jge
and
daa
push
add
mov
dec
pop
xchg
sbb
push
ljmp
sub
lock
hlt
test
jnp
sub
cmpsb
pusha
pop
jbe
cmp
jno
mov
ret
mov
and
fwait
and
faddl
imul
das
jl
fdivrl
jb
xchg
sub
sbb
out
setne
xchg
lea
loop
jmp
jmp
lea
int3
or
push
xchg
adc
or
mov
mov
pop
aad
lods
adc
jg
pop
cmpsl
sub
out
lods
push
mov
sbb
mov
movsb
ficomps
sbb
rorb
push
aam
test
sub
sarb
pop
or
mov
pop
out
ficoms
inc
pop
rorb
mov
mov
xchg
sub
imulb
mov
das
call
inc
out
mov
andb
hlt
adc
sbb
aaa
popf
call
adc
cmpsb
xchg
inc
test
fadds
cmp
sbb
imull
mov
fisttps
in
inc
push
jns
xor
test
subl
cmp
in
fsubrl
xchg
iret
fdivrs
stos
jns
stos
fdivl
xor
xor
repnz
pop
cli
xchg
cmp
in
cmp
cmp
lock
mov
fdivl
mov
xrelease
ja
jmp
aad
repnz
in
lret
add
sbb
rcrb
or
lahf
in
pop
andl
rcl
mov
mov
fisubs
mov
or
xor
test
lahf
jge
sbb
cli
push
pushf
movsb
cmc
push
hlt
dec
test
or
push
and
and
mov
or
mov
xchg
dec
imul
push
or
jmp
outsb
ja
das
xchg
lret
adc
mov
cmp
inc
ds
dec
jno
push
mov
cmpsl
xchg
xor
insb
and
add
dec
call
or
sbb
incb
stc
xchg
mov
imul
addr16
xchg
enter
fstl
jbe
xor
mov
mov
pop
jle
jp
test
pop
inc
fisubs
out
cmp
lcall
sub
cwtl
bound
ficoml
sbb
mov
popa
sub
repnz
mov
add
gs
sahf
setno
jb
imul
imul
subb
ret
sbb
out
and
sub
repnz
les
adc
dec
outsl
sbb
and
cld
ds
xor
bound
int3
cs
hlt
out
ss
cmp
jae
fcomps
mov
fwait
or
xor
lret
mulb
mov
sbb
pop
je
xor
cmp
mov
mov
ds
xor
fs
aam
and
cmpsl
lea
or
lret
push
push
xchg
daa
pop
gs
rcrb
fists
push
cltd
data16
pusha
pop
mov
adc
jae
andl
in
and
adc
jl
inc
popa
stc
and
sub
shlb
mov
xlat
jnp
xor
andb
sarb
test
push
inc
sbb
mov
and
or
inc
inc
sub
dec
jp
fiadds
scas
mov
and
mov
popf
fwait
sub
push
stc
xor
dec
daa
jge
pop
lcall
stos
out
xchg
push
lgs
popa
addr16
or
out
outsl
enter
cmp
test
pusha
das
cld
and
pusha
mov
in
sub
pop
stos
mov
and
sbb
mov
xchg
icebp
mov
lock
js
sbb
push
pop
or
jno,pn
jp
out
mov
sub
adc
movl
jp
sbb
int3
pop
aad
aam
stc
lcall
pop
mov
imul
mov
ja
add
aad
repz
leave
adc
sub
adc
and
sub
fsubs
fldcw
rcrb
dec
pop
or
jp
mov
fcoml
adc
imull
sahf
mov
mov
out
xchg
add
aas
sub
out
mov
cmpsb
and
test
out
mov
mov
stc
stos
inc
pavgb
push
pop
std
test
push
icebp
xchg
xchg
mov
and
inc
test
and
cmpps
int3
xchg
mov
mov
ret
sub
dec
sub
insb
les
addr16
jecxz
loop
cmp
iret
push
add
in
jns
xchg
sub
ljmp
and
push
imul
es
adc
lds
pop
push
sbb
jl
cwtl
fs
insl
std
xor
inc
inc
and
mov
pop
xchg
dec
aad
push
mov
stos
repnz
sub
cmp
pop
pusha
jno
xor
test
cmpsb
mov
add
sbb
mov
jae
ror
stos
xchg
xchg
mov
jo
je
jle
nop
and
mov
add
mov
inc
inc
jp
scas
jmp
imul
notl
push
loop
and
popf
jecxz
or
inc
mov
scas
jb
std
mov
mov
xor
aam
push
push
xchg
outsl
mov
out
cmp
xor
jmp
pop
test
mov
mov
movl
xor
lret
add
xor
push
in
out
add
sub
lcall
fistl
adc
aam
sbb
in
shrl
mov
insb
jo
sub
mov
clc
sub
shll
data16
push
mov
stos
or
stos
rcrl
shr
sbbb
and
pop
mov
inc
notb
inc
xchg
fdiv
loopne
out
ret
dec
or
push
imul
sbb
sbb
ja
movsl
add
xor
mov
add
enter
push
xchg
mov
mov
cmpsl
hlt
cli
sysenter
pop
xlat
pop
mov
sbb
fildll
jmp
cwtl
push
add
pop
pop
sub
lds
xchg
add
xchg
xchg
scas
pop
sahf
push
shl
xchg
or
push
jg
data16
repz
loop
ret
dec
lock
jo
pop
fsts
or
insl
pop
fldcw
fcomip
bound
cmp
int
xchg
jge
movsl
fs
andl
das
pop
and
push
jge
pop
push
inc
inc
test
sbb
inc
aaa
loop
mov
or
pop
loopne
mov
in
mov
mov
ror
bound
inc
add
inc
je
ret
jp
clc
clc
stc
sbb
movsb
enter
or
inc
jg
xchg
aam
aad
sahf
xchg
jns
daa
sbb
pop
and
std
enter
pushf
mov
sbb
and
inc
inc
mov
cmpsl
or
cmp
and
fnstsw
test
xchg
int3
add
inc
xchg
sti
ret
std
dec
push
insl
cli
sub
fwait
xchg
cmp
push
pusha
out
aas
or
and
sarl
lock
or
mov
cmc
sti
xchg
adcb
sbb
pop
or
add
aam
cmp
shlb
imul
pop
outsl
call
pushf
js
imul
mov
bnd
jo
mov
nop
mov
popf
and
xor
or
xor
clc
orb
jae
lret
cmp
stos
add
dec
outsl
ja
jge
fwait
push
adc
pop
or
ljmp
mov
or
into
xor
mov
pop
fdivr
pop
insb
pop
loop
inc
sbb
mov
and
xchg
jne
iret
push
int
push
stos
add
sub
jnp
lret
mov
arpl
arpl
xor
mov
popf
popf
shll
pop
cmp
pop
rolb
loopne
in
aaa
movsl
xor
pop
add
lea
xor
jnp
and
jmp
xchg
ja
push
and
fldcw
test
pop
adc
lea
imul
sbb
mov
mov
or
jns
and
popa
and
imul
mov
out
fisubs
in
fimuls
vmread
xchg
mov
mov
fimuls
dec
lods
sbb
sbb
dec
xor
ret
out
mov
push
jbe
fcmove
pop
pop
push
mov
mov
test
push
inc
sub
inc
adc
fisubl
inc
imul
mov
enter
inc
mov
sbb
add
stos
adc
cmp
mov
js
pop
push
dec
jg
cld
aam
xlat
mov
mov
push
jne
into
mov
jne
push
sub
pop
scas
pop
sub
xchg
mov
pop
jns
mov
int
pop
dec
mov
sub
ret
scas
lret
vmwrite
fwait
jmp
inc
sahf
test
pop
rcrb
xlat
pop
push
roll
js
adc
faddl
mov
shll
push
pop
cmp
or
xchg
das
stc
sbb
rol
jge
push
movl
loop
mov
fucomp
mov
loopne
rorb
sbb
jg
pop
in
mov
dec
or
push
adc
fmul
push
test
or
cmc
push
nop
pop
lds
and
or
test
pop
xor
xor
pop
rcl
xor
subb
ljmp
cli
xor
lret
roll
addr16
pop
push
fnsave
or
mov
jno
mov
sbb
push
inc
fdivs
push
dec
sbb
in
cs
out
addr16
mov
and
inc
pop
cli
mov
data16
push
push
xchg
dec
jne
cmc
xor
pop
pop
sti
or
pop
bound
and
ja
aam
jecxz
lahf
inc
adc
mov
aam
loopne
mov
mov
sbb
push
mov
push
mov
popa
roll
jecxz
inc
pop
jg
mov
xchg
and
test
stos
push
lcall
xchg
xlat
ucomiss
in
push
leave
movsb
subl
call
add
or
leave
ljmp
inc
mov
into
fdivr
add
lds
loopne
pushf
push
mov
iret
pop
nop
mov
ljmp
stos
pushf
daa
mov
push
inc
push
sarb
test
dec
sar
je
aas
aam
shr
insb
outsb
or
pop
mov
movsb
rol
mov
fwait
sti
addl
lds
adc
xchg
inc
cmp
jb
push
dec
mov
setge
ret
int3
adc
jns
testl
pushl
fisttpll
cmpsb
mov
push
imul
imul
jmp
sub
imulb
and
fcomps
ss
ljmp
jno
cld
out
jp
insb
cmp
jl
sub
pop
mov
push
xchg
xlat
sahf
dec
stos
cmp
stos
push
pop
or
rorl
pop
out
add
inc
adc
jle
pop
mov
cli
adc
std
jp
addr16
and
mov
cmp
add
stc
push
in
push
jo
xor
cmc
movsl
push
mov
or
xor
mov
jnp
je
pop
xchg
inc
lock
xlat
inc
out
movsb
mov
xchg
lods
icebp
xorl
mov
lcall
stc
cmp
cltd
lahf
and
addl
stos
mov
les
andb
je
das
enter
je
insl
add
push
loopne
subl
jae
mov
jecxz
jns
testb
out
ss
ret
xchg
mov
int3
mov
fadds
cld
pop
stos
rolb
push
lods
js
push
cmpsb
lcall
idivb
stos
mov
mov
dec
dec
xchg
fsubs
or
push
fists
lods
loopne
dec
in
push
and
mov
loopne
dec
fidivrs
mov
sahf
enter
filds
sti
loopne
fcoml
inc
das
pop
out
inc
adc
repnz
adc
mov
lods
test
shrl
cmp
adc
out
mov
ss
fadd
test
shll
add
and
insl
rorl
xchg
sbb
popa
jnp
dec
pop
andl
push
jnp
test
ds
push
sub
inc
sub
leave
pop
jo
cmc
loop
pop
xchg
add
xchg
xlat
sub
shlb
add
pop
adc
inc
sbb
ss
lret
out
aam
pop
and
std
mov
enter
daa
pop
cltd
or
xor
test
movsl
pop
mulb
add
in
roll
icebp
mov
int
fnstsw
mov
fildl
inc
push
sub
adcl
push
or
in
call
add
mov
les
adc
xlat
outsb
loopne
sbb
hlt
mov
pop
cmp
dec
and
fadds
xchg
imul
incl
jb
jle
push
xor
adc
fs
xchg
test
mov
pop
dec
sub
popf
push
jecxz
movsb
sbb
mov
xchg
shl
push
mov
ljmp
and
xchg
aam
lahf
das
add
push
test
dec
stc
int3
rol
jle
push
popa
xor
aam
jns
xchg
sbb
sbb
movsl
pop
pushf
cmp
lret
sbb
divl
mov
loopne
adc
mov
fcoml
rcrb
push
or
out
pop
lret
sbb
and
neg
push
out
push
mov
mov
lahf
icebp
jge
rclb
mov
out
inc
stos
sbb
scas
xor
ret
add
insb
dec
lods
xchg
ret
cmc
add
cmp
lret
lret
mov
movsl
stos
sub
leave
xlat
mov
mov
xor
push
jg
icebp
jo
shl
mov
xchg
push
std
cmp
cmp
xchg
jno
insl
ja
rcll
xorl
pop
cmc
push
inc
lock
cli
ja
and
out
xchg
adc
das
jb
cmp
lret
jle
das
and
popa
jge
out
mov
push
or
mov
jnp
shl
lods
fiadds
insb
cmc
sub
gs
push
and
iret
inc
lods
ret
sub
and
sbb
popa
sbb
loope
lcall
jmp
jmp
cs
out
outsb
pop
ja
sub
out
jae
add
shrb
sbb
stc
fstp
frstor
xor
in
fs
mov
mov
sbb
mov
std
out
sub
and
cltd
imulb
adc
dec
and
stos
in
push
mov
outsb
push
shrl
dec
repz
push
mov
dec
mov
int3
mov
mov
sub
filds
sbb
fbld
pop
pop
and
adc
lods
nop
jmp
int3
arpl
or
sahf
sub
mov
adc
cld
insb
iret
pushf
test
push
xchg
add
or
divb
sub
rorb
jp
push
cwtl
and
inc
add
cmpsb
sbb
mov
shl
adc
aaa
shlb
inc
xchg
cmp
jg
mov
adc
lods
es
lret
divb
loop
mov
clc
push
cmp
in
leave
xchg
jg
jg
pusha
lods
xor
sbb
cmpsl
fiaddl
add
jns
in
sub
icebp
cli
popf
addr16
fsts
loopne
or
sub
sbb
movsl
sub
xchg
mov
lea
gs
sbb
test
out
and
dec
mov
jecxz
and
lock
test
pop
cmp
jo,pn
test
and
aad
imul
sbb
xchg
xchg
int3
adc
clc
popf
aas
mov
push
fldt
and
out
test
insb
popa
xchg
mov
gs
cli
sbb
scas
and
aas
xor
iret
rolb
test
pop
xchg
inc
fucom
aam
mov
imul
ret
inc
push
lcall
and
fcompl
or
fdivp
pop
leave
sahf
cmp
rclb
movsl
jl
fwait
nop
sahf
daa
mov
mov
aad
je
mov
xor
jecxz
mov
ror
add
mov
lock
imul
sub
and
sub
popa
mov
aam
imul
testb
bnd
dec
in
xchg
xchg
pusha
aad
iret
loopne
pop
jno
dec
mov
xchg
mov
pop
pop
cmp
out
or
sbb
push
sbb
lods
pop
push
clc
aam
sbb
push
inc
cmc
cmpsl
dec
shll
stos
sarl
pusha
rcr
leave
mov
aad
xor
ja
popa
dec
xor
inc
into
or
cmp
push
gs
xor
xchg
fstps
int
icebp
cmp
inc
out
dec
nop
cmp
and
fwait
sbb
mov
cltd
jle
nop
xchg
inc
add
flds
xchg
and
arpl
jbe
pop
adc
pop
in
sbb
mov
leave
inc
arpl
out
fldenv
jg
arpl
into
adc
push
jo
inc
ljmp
rol
xor
adc
fsubl
push
in
mov
loop
sbb
or
xor
imul
aam
xchg
imul
pop
stos
sbb
push
test
rcl
and
je
jno
movsl
jecxz
adc
int
rcl
imul
push
aaa
sub
dec
aad
test
mov
sub
test
or
stos
inc
roll
jp
inc
add
inc
stos
es
in
pop
dec
rcl
mov
movsl
int
sbb
out
les
mov
mov
arpl
xchg
sti
jmp
pop
cmp
cmp
and
xlat
lods
inc
xor
ds
outsb
ret
adc
popf
std
sbb
test
jb
mov
addr16
inc
mov
and
pop
insb
cmp
cmpsb
sub
and
out
lcall
and
faddl
mov
xchg
pop
jne
add
push
or
push
add
movsb
mov
lcall
push
mov
enter
ss
in
aas
dec
adc
in
mov
push
adc
add
dec
in
outsl
outsb
mov
mov
pop
or
push
cli
or
push
cwtl
and
pop
xchg
incl
in
push
imul
mulb
loope
pop
push
test
mov
add
pop
rcrb
jb
pop
lea
js
lods
scas
dec
or
testl
push
jl
jnp
push
cmp
scas
adc
daa
or
imul
adc
or
jnp
and
adc
fsub
aam
clc
xchg
inc
addr16
push
stc
clc
inc
jnp
jge
sbb
int
push
xchg
xor
imul
fdivr
fs
pop
mov
enter
sahf
push
cmp
cmp
push
mov
or
jns
inc
std
movsl
lahf
mov
out
cmp
js
pop
sahf
cltd
fdivrl
jae
dec
outsl
imul
mov
pushf
pop
cmc
popa
sub
inc
and
inc
shlb
add
cwtl
push
sub
mov
mov
mov
adc
ljmp
sub
shrl
cmp
pusha
lods
cltd
out
loopne
pop
adc
or
std
rorb
lea
sub
sub
fistl
or
mov
jg
push
sbb
adc
into
mov
jecxz
cwtl
leave
dec
subl
push
scas
jmp
cwtl
jo
pop
fcomps
and
lock
lock
ret
or
cmpb
aas
xor
out
mov
mov
or
dec
mov
mov
enter
mov
ficoml
scas
test
push
jecxz
insl
push
jo
addr16
scas
cmpsb
mov
mov
sub
sub
add
imul
jo
mov
test
sub
negl
hlt
in
cli
loope
mov
sub
jno
insb
lods
lcall
lock
iret
mov
jnp
adc
sbb
out
adc
rol
xchg
xor
lods
inc
fcomip
push
push
cmp
pop
dec
ficoms
adc
push
inc
sub
jecxz
repz
dec
adc
mov
cmp
xchg
inc
lcall
xchg
jle
pop
aad
jg
sub
xchg
adc
test
dec
arpl
rcl
dec
mov
ficompl
inc
loope
sbb
outsb
mov
mov
das
imul
inc
cmpsl
mov
scas
mov
sbb
jmp
xchg
jp
lahf
roll
mov
out
call
lret
xchg
add
push
pop
mov
into
dec
imul
movsl
out
jecxz
or
sub
inc
xchg
add
rcrb
leave
arpl
gs
dec
mov
or
push
dec
xchg
sarb
jns
sbb
xor
pushf
add
pop
xor
mov
sub
in
pop
test
xchg
xchg
add
repnz
mov
std
xor
push
repnz
call
cmpsb
rorl
cmp
out
cmp
jmp
push
jb
pop
sbb
std
xchg
sub
icebp
adc
xor
lret
push
and
shr
adc
gs
stos
test
adc
jp
adc
stos
jb
jbe
int
and
sti
test
hlt
cld
stos
lock
pop
mov
pop
push
mov
xchg
mov
jmp
mov
int3
xchg
xor
sbb
lahf
test
push
stc
incb
imul
stos
mov
into
adc
std
or
sub
test
mov
sbb
jecxz
xchg
xor
adc
mov
in
adc
lcall
inc
mov
cwtl
imul
std
jne
xor
outsb
mov
leave
mov
mov
xor
sbb
lods
pop
mov
enter
xchg
ljmp
add
push
push
inc
push
das
xor
movsb
repnz
jno
and
jmp
mov
push
adc
ljmp
sbbb
and
xor
div
adc
adc
movsb
inc
imul
repz
xor
push
and
arpl
jecxz
xor
je
insl
jb
movsl
inc
mov
aaa
jno
add
mov
cld
dec
push
mov
xor
cmp
stc
mov
insb
lcall
mov
cmp
dec
or
jmp
and
mov
xor
and
cli
mov
mov
shrb
adc
xchg
bound
xchg
pop
cltd
sarl
xor
cmp
adc
add
mov
add
inc
sbb
int3
in
sub
adc
jp
cmp
xor
sbb
aas
cmpsl
pop
out
jmp
pop
cmp
insl
mov
lds
out
push
mov
fdivs
out
lds
jmp
cmpsb
hlt
add
mov
mull
mov
test
or
adc
jae
out
repnz
push
and
jl
aam
xchg
jmp
negb
lods
xor
addr16
mov
fldl
orb
mov
js
outsl
outsb
out
bound
popf
ret
jb
fs
ds
sub
aaa
mov
fwait
pop
popa
xchg
inc
jl
push
mov
add
pop
pop
icebp
outsl
cmp
call
loop
shlb
add
cmp
std
adc
dec
dec
stos
in
xchg
rorb
in
outsb
pop
aaa
out
sub
mov
fidivrl
aam
cltd
cmp
sarb
dec
xchg
or
rorl
pop
call
lock
or
push
imull
pop
sub
bndstx
scas
das
sub
stc
xor
aam
mov
mov
push
sbb
xor
push
imul
cs
pop
rolb
lods
cs
cmpb
popf
xlat
push
loopne
xor
mov
mov
das
movsb
sbbb
arpl
jle
rcrl
jmp
mov
add
xor
and
inc
jno
imul
or
xchg
jmp
loop
hlt
in
mov
lret
push
mov
push
inc
cmovp
out
popf
aas
or
popa
cmpsb
sbb
mov
mov
push
addr16
stos
mov
xchg
mov
ret
sti
das
test
loopne
fbstp
xor
leave
fisubrl
ljmp
test
xchg
cli
mov
sub
cmp
jnp
pop
imul
adc
mov
jbe
int3
fmull
adcl
jmp
jmp
jno
dec
pop
cs
add
xchg
out
xchg
bound
dec
jl
dec
outsl
rorb
sarb
int
sbb
xchg
and
mov
rorl
pop
pushf
scas
or
xchg
scas
pop
inc
aas
ss
adc
rcrl
iret
adc
adc
enter
cli
dec
jb
aaa
sbb
insb
bound
mov
add
cmp
scas
cmp
mov
or
imulb
outsl
inc
xor
or
call
cmp
pop
inc
jo
cld
jmp
leave
addr16
pop
shll
fcomps
and
inc
dec
push
xchg
fbld
lret
inc
xor
loop
rorb
addr16
add
xor
xchg
dec
mov
xor
sbb
push
inc
std
mov
pushf
cmpsl
inc
or
sub
jne
dec
out
std
and
aas
mov
pop
or
xchg
jg
int3
mov
lcall
gs
cmp
js
mov
movsb
dec
cli
pop
repz
jl
dec
data16
xchg
lcall
lods
popf
and
push
pop
into
or
push
jb
adc
call
into
sbb
mov
mov
lds
mov
inc
je
insb
int3
add
ljmp
and
je
cwtl
aam
pop
push
popf
pop
inc
xchg
dec
hlt
push
movsl
inc
ljmp
into
ljmp
push
pop
lods
lods
aam
push
pushf
test
push
int
aam
outsb
adc
pop
mov
push
popf
rcll
inc
pop
jp
jg
adc
xchg
iret
scas
shlb
int
jb
add
lahf
pop
dec
sub
inc
mov
je
adc
faddl
cmpsl
lret
mov
or
insl
inc
xorl
jns
outsb
mov
pop
pop
add
xlat
icebp
ret
add
out
sti
inc
mov
xlat
and
xchg
hlt
ret
push
inc
shrb
jnp
add
dec
push
sbb
mov
repz
sub
push
fsubrs
xchg
sub
call
sbb
xor
mov
mov
daa
and
or
lods
xor
dec
call
push
mov
addr16
xorl
cmpsb
in
andb
movsl
sub
mov
rolb
adc
xor
ja
std
insl
gs
hlt
ja
ficoms
sahf
add
scas
inc
sub
dec
xlat
jnp
in
xor
popw
sbbb
fdivrl
stos
dec
xchg
pop
push
xchg
outsb
mov
cmc
fimull
outsl
sbb
jno
jbe
pop
mov
jmp
out
dec
mov
pop
mov
mov
add
mov
dec
leave
dec
shl
ja
inc
push
cs
daa
call
push
in
je
out
sbb
hlt
clc
cmp
mov
jge
sbb
ss
push
inc
mov
insl
lcall
xor
inc
mov
mov
cwtl
push
push
jp
enter
mov
and
and
out
outsb
lea
mov
clc
jmp
xor
pop
sub
std
sbb
ret
dec
xchg
mov
loop
ljmp
xchg
dec
mov
push
push
cmc
sub
sub
and
push
push
jg
scas
cmp
sti
inc
movsl
int
xchg
aas
dec
fcompl
or
sub
rcrb
or
rcrl
xor
jae
jg
dec
mov
les
loop
fsubrl
xor
shrb
push
dec
push
pop
pusha
mov
add
sub
jb
movsl
sbb
hlt
ja
jmp
mov
cmp
push
lret
xchg
test
loop
or
add
repnz
cmp
imulb
rcl
mov
cmp
test
dec
or
jae
xchg
sbb
aaa
adc
test
mov
cmp
pop
loope
push
or
mov
lret
mov
push
ss
out
mov
adc
mov
mov
mov
pop
rorb
shrl
mov
stc
outsl
popa
hlt
repz
cmp
ret
out
add
mov
push
or
int3
sub
cmp
cltd
sbb
inc
orl
out
aaa
mov
sbb
leave
stos
mov
stc
mov
lods
shll
enter
and
or
sub
pop
lret
subl
mov
mov
xor
pop
push
fs
adc
addr16
push
jo
addb
scas
pusha
bound
stos
fadd
fsubs
pop
dec
push
add
add
cwtl
mov
inc
dec
mov
xor
mov
arpl
pusha
push
adc
int
xchg
add
pushf
insl
ljmp
test
fsubr
sub
icebp
lcall
mov
fldcw
inc
cld
add
shlb
xchg
icebp
pop
aad
pop
scas
daa
push
loope
xchg
xchg
jecxz
ljmp
add
call
adc
sub
into
xchg
js
loopne
pop
lds
pop
lea
adc
pop
test
insl
repnz
jne
or
cmpsl
es
mov
or
arpl
inc
jbe
jbe
fmull
xchg
fucomip
imul
inc
int3
hlt
xor
jmp
adc
hlt
push
xor
add
xor
ljmp
dec
pop
sbb
pop
cltd
xor
scas
sub
mov
fstpl
fwait
xchg
sbb
subl
xchg
xlat
aad
jle
shll
enter
daa
clc
xlat
or
mov
jae
push
int3
ficoms
pop
xor
sbb
sub
mov
insb
ljmp
push
pop
mov
daa
clc
stos
push
loopne
leave
inc
pop
jmp
push
pusha
mov
and
or
mov
sbb
lret
lds
adc
dec
pushf
xchg
push
sbb
scas
insl
dec
jg
icebp
jg
dec
inc
rorl
sub
dec
rcll
loopne
rolb
lcall
mov
xchg
rcrb
sbb
ficoml
enter
jecxz
sbb
icebp
adc
cmp
in
rolb
or
dec
mov
mov
xchg
aaa
jmp
jl
or
insb
fdiv
out
sti
xchg
js
cmc
mov
mov
cwtl
pop
pushf
sbb
inc
in
adc
mov
or
mov
test
js
popa
pop
or
cwtl
add
subl
test
movsb
sub
lahf
enter
loop
sub
jb
sub
ss
icebp
mov
ficoml
cmpsl
add
adc
into
repz
imul
jae
or
add
cltd
scas
or
ffreep
adc
xor
dec
das
cltd
adc
xchg
or
push
push
push
outsb
or
xor
int3
lods
xor
pop
out
daa
mov
xor
jle
loope
mov
mov
push
popf
or
loopne
inc
or
sti
sbb
or
scas
or
and
out
fildl
mov
imul
jno
cmp
test
adc
inc
inc
or
pop
pusha
mov
mov
cmpsl
sub
popf
cmp
roll
and
in
lods
ficomps
ljmp
cwtl
into
dec
arpl
xor
fstpl
mov
out
mov
sbb
adc
push
xchg
mov
and
xor
xchg
cmp
sbb
xchg
mov
inc
inc
stos
rcr
insl
lea
mov
cmp
adc
lea
adc
or
pop
pop
loop
mov
andl
push
arpl
lahf
push
add
jle
pop
fcomip
add
adc
call
and
lcall
pop
and
dec
shll
jne
insb
ljmp
addr16
outsl
xlat
movsb
cmp
ja
lcall
cltd
mov
add
sbb
jecxz
mov
shl
pushf
sub
dec
mov
dec
dec
test
push
mov
sti
fnsave
je
cli
sbb
mov
imul
and
push
mov
sub
adc
dec
aam
cmp
test
sbb
lcall
mov
insb
and
fdivrs
sbb
push
cmp
cld
stos
pop
or
cli
adc
mov
sub
stos
adc
inc
cmp
push
cmpb
push
in
movb
adc
js
or
test
sub
imul
jo
loopne
mov
imul
es
loop
push
and
mov
icebp
mov
addr16
jge
rcll
sub
fs
push
inc
push
test
pop
std
inc
push
cmc
or
mov
xchg
popf
xlat
fs
int
outsl
cwtl
insb
loop
cmpsb
xor
cld
fmuls
test
addr16
jnp
push
or
lods
lcall
shll
bound
dec
inc
mov
jg
xor
sbb
test
push
xor
popa
in
faddl
sbb
test
push
out
iret
xor
scas
enter
dec
das
add
inc
and
ds
and
lods
insb
out
mov
xchg
in
adc
mov
test
addr16
inc
iret
insb
movsl
mov
daa
pop
mov
call
pop
scas
dec
push
push
sub
push
popf
outsb
xchg
or
push
in
sbb
cli
mov
cmc
lahf
and
lahf
mov
icebp
sbbb
cld
fisubs
lahf
adc
jmp
mov
xchg
xchg
idivw
mov
stos
xor
jnp
push
rcll
add
or
add
loop
cmp
adc
fwait
in
das
stos
inc
test
push
vxorps
ljmp
ljmp
pushf
add
mov
push
mov
dec
mov
movsb
xor
adc
iret
dec
cli
xchg
inc
shrl
pusha
pop
push
mov
adcb
cwtl
push
and
xor
movsl
int3
xchg
pop
lret
inc
inc
mov
pop
jb
pop
fdivr
pop
jne
into
mov
fwait
jmp
sub
adcl
dec
mov
ret
mov
scas
dec
popa
out
push
int
push
xchg
mov
sbb
outsl
and
jmp
and
add
fidivrl
and
les
gs
loop
fbstp
or
cltd
xchg
sub
jge
jo
push
mov
outsl
push
pop
ret
mov
xchg
cmp
xor
xchg
loope
mov
rclb
popf
fs
das
add
daa
aaa
iret
repz
mov
xor
pop
xor
mov
push
pop
sarl
dec
push
imul
add
xorl
pop
enter
aad
lods
cltd
fs
mov
popf
lret
dec
daa
notl
pop
pop
pop
out
nop
sahf
mov
jbe
mov
adc
xchg
fisubrl
outsl
sbb
dec
rcrb
adc
pop
inc
stos
popa
mov
test
out
jb
pusha
lods
aas
iret
mov
push
xor
push
cmp
lock
and
call
incl
sbb
roll
divl
push
xor
mov
sub
xchg
push
rcl
mov
loopw,pn
mov
outsb
shlb
push
inc
cmp
dec
in
sar
mov
arpl
add
sarl
in
fisubs
jnp
mov
pushf
jnp
adc
popf
pop
and
ret
add
call
bound
inc
jp
xchg
out
mov
data16
es
mov
cwtl
sub
jb
daa
push
arpl
inc
shll
movsl
push
push
push
xchg
jae
cmp
lret
lock
jg
ds
mov
mov
sar
sbb
fwait
aaa
fdivr
sbb
ffreep
jmp
xchg
jl
pop
fisttps
test
mov
inc
jo
pushf
lock
aaa
in
ret
lock
sbb
lock
jge
sub
jae
push
pop
mov
retw
pop
xchg
dec
or
movsb
pop
ds
pop
cmp
pop
cltd
iret
int
and
add
fcomp
into
mov
jne
enter
push
es
jle
cli
push
and
repz
and
jno
inc
loop
mulb
xlat
xchg
ret
push
mov
mov
clc
cmp
mov
mov
inc
push
pushf
lock
mov
mov
xlat
jb
pop
xchg
into
adc
aad
shll
inc
cmp
jecxz
cmc
pop
xor
adc
pusha
repnz
mov
mov
popf
xlat
sbb
in
pushl
stos
cmp
aas
repnz
pop
mov
imul
sbb
outsb
aam
adcl
mov
mov
lahf
int
or
out
adc
pop
add
or
mov
sub
test
xor
mov
lea
insb
popf
loope
scas
and
in
iret
or
xchg
dec
add
arpl
mov
pop
fnstcw
mov
mov
pop
push
aaa
cmp
xchg
add
mov
sub
mov
cmpsl
pop
call
in
popf
push
subb
xchg
jmp
pop
ja
mov
es
mov
lret
mov
leave
cwtl
nop
cld
dec
inc
test
pop
cmp
adc
test
jnp
xchg
xor
stos
or
orl
push
ret
call
and
add
dec
rolb
icebp
sub
in
xor
or
lret
in
xchg
movsb
les
add
aad
fldenv
mov
inc
int
lods
lret
int
push
pop
mov
mov
sti
stos
iret
or
adc
icebp
popf
mov
push
fistl
pop
aad
dec
insl
jnp
mov
rorb
inc
fmull
aas
lret
push
mov
add
inc
push
pop
push
mov
cmpsl
mov
inc
and
pop
pop
sub
repz
cmp
fidivs
lea
push
test
jmp
fwait
push
push
or
push
xchg
xchg
jnp
ljmp
out
lcall
cmp
jbe
and
push
ret
ja
out
and
shrl
and
shll
mov
call
jne
xchg
cmp
jg
push
jg
pushf
insl
aad
xchg
adc
cs
jp
adc
mov
or
and
loopne
js
icebp
lds
cwtl
daa
mov
jge
test
test
pop
aam
inc
lods
xor
inc
mov
xchg
pop
jmp
test
and
or
mov
mov
inc
insb
int3
call
push
cmp
sarl
inc
or
jge
and
mov
xor
shll
je
mov
xchg
inc
ret
inc
adc
push
jb
xchg
andl
mov
or
cld
jae
xor
fsubrl
xor
es
aas
and
in
adcl
fwait
dec
outsl
mov
push
or
mov
adc
fs
imul
cmpl
jae
frndint
xchg
add
sub
nop
xchg
sub
push
mov
in
push
dec
pop
push
cmpsb
gs
shrl
inc
in
cmpsb
call
cmp
test
mov
cld
or
sbb
in
jmp
adc
mov
xchg
jns
push
cmpsl
xchg
sahf
push
mov
push
les
int3
and
iret
xchg
mov
mov
mov
es
mov
pushf
movsb
pop
enter
mov
aas
dec
mov
insl
imul
cmp
subb
cmpsl
into
pop
push
call
loopne
add
les
dec
and
push
es
pop
insl
aam
and
rorb
in
sbb
fdivl
xor
fimull
ss
in
mov
cld
or
mov
fcomps
push
lret
lahf
jl
sbb
dec
sbb
test
loope
and
dec
mov
mov
sbb
call
inc
decl
mov
add
mov
fwait
iret
xor
push
xchg
push
ds
stc
aad
pop
lods
imul
sub
sbb
nop
cmpsb
lds
dec
insb
cs
fdiv
shl
push
dec
inc
cs
ss
int
cmp
jg
xchg
inc
mov
mov
into
roll
ljmp
push
mov
push
mov
or
arpl
fs
aad
pop
inc
pop
jl
fisttps
fdivr
jns
xchg
cmp
pop
lds
mov
xchg
or
jbe
test
js
int3
cmp
das
push
pusha
add
cmp
sub
jg
add
push
test
cmp
cltd
dec
xchg
push
pop
cmp
jecxz
mov
xor
adc
inc
xor
notb
cmpsb
scas
or
lods
xor
pop
jmp
add
cmp
jb
loopne
xor
mov
jl
jg
inc
sbb
test
popa
mov
mov
loope
pop
sub
sub
add
mov
das
mov
gs
mov
mov
das
cmp
pop
or
std
shrl
insl
mov
fnsave
xor
jecxz
data16
andb
ret
outsl
iret
test
repnz
and
ds
mov
scas
shr
ds
in
repnz
add
inc
adc
xchg
lea
data16
lcall
inc
rcll
cli
xchg
fistl
sub
mov
hlt
mov
ret
or
pop
scas
test
iret
jb
fcoms
fists
fmuls
jg
pop
adc
decb
popf
push
je
mov
mov
cltd
into
inc
sbb
lahf
dec
addr16
jle
dec
jns
clc
out
xor
add
add
rclb
pushf
mov
sarl
or
movsb
add
jmp
test
xchg
push
inc
mulb
inc
and
add
jnp
fsubrs
push
loope
xor
mov
fsubs
fadds
push
xchg
mov
addr16
mov
add
mov
imul
out
xchg
add
inc
insb
jo
rcll
sub
or
xchg
mov
ficompl
mov
stos
aad
ds
test
mov
fisttpll
xchg
sub
sub
pop
inc
das
push
or
add
loop
sbb
mov
aam
movsl
mov
xchg
jl
ret
or
stos
scas
dec
cmpl
push
mov
add
push
pop
cs
je
ret
cmp
mov
push
in
ror
pop
popf
sti
inc
mov
dec
imul
pushf
ljmp
data16
cli
xchg
add
xchg
aad
and
pop
fldt
jge
and
mov
mov
mov
mov
adc
adc
and
mul
stos
js
pop
push
out
pop
gs
push
lcall
lock
mov
stos
cmp
sbb
and
xor
jno
scas
cmp
lret
das
jnp
jecxz
rcrl
std
roll
add
or
int
mov
into
fdivs
aam
lods
and
add
repz
dec
pop
imul
push
mov
pop
and
daa
ret
int3
and
sub
iret
xchg
in
cmp
fwait
lods
fisubrs
adc
and
frstor
pop
push
adc
jge
fstl
push
push
push
pop
decl
push
xor
insl
scas
mov
lahf
adc
or
fsub
fcomi
sub
mov
jl
adc
or
loopne
mov
sub
mov
jb
mov
inc
xchg
call
std
fidivl
pushf
mov
inc
and
mov
push
xchg
cmp
fstpl
jle,pt
jne
xchg
sbb
fstpt
leave
jge
jae
xchg
cmp
stos
xchg
decl
jae
lahf
das
sub
push
test
mov
mov
shll
xchg
push
mov
int3
int3
cli
xor
cmc
pop
pop
or
pop
fisubrl
mov
and
pusha
shlb
and
mov
rcr
xor
xchg
pushf
test
call
imul
ds
jbe
cmpsb
mov
jbe
leave
jmp
pop
add
pop
sub
fcmovnu
dec
stc
fcoml
mov
cmpsl
mov
pop
ficoms
dec
jns
jnp
mov
and
push
sar
and
cmpsl
lcall
in
ret
nop
xchg
sub
pop
dec
jnp
mov
adc
xchg
scas
call
cli
rol
std
addr16
and
pop
fisttpl
in
sub
int
mov
js
les
and
fucomp
pop
inc
mov
shll
jbe
out
enter
jge
ss
or
cmp
pop
pushf
cmpsl
xchg
mov
daa
movsl
sahf
add
mov
adc
dec
jmp
jo
pop
sub
loopne
xchg
call
ss
aad
scas
stos
or
mov
or
push
adc
sub
pop
je
jmp
rolb
scas
dec
push
push
lods
dec
pop
jae
lock
stc
adc
clc
movsb
enter
test
mov
inc
xchg
mov
jo
sbb
mov
popa
jle
cld
adc
mov
out
jge
sub
shrb
bound
pop
mov
enter
test
inc
test
jg
inc
clc
push
cld
push
jne
mov
int3
push
and
movsl
mov
mov
dec
lock
push
aam
cmpsl
les
aaa
fdivp
xor
push
xor
aas
adc
dec
push
push
daa
cmc
add
inc
xchg
ret
shlb
mov
jb
test
sbb
nop
add
adc
jbe
dec
scas
jo
mov
push
xlat
add
outsb
ret
or
jge
mov
xchg
inc
int3
or
jge
loopne
fmul
sub
repz
std
and
ljmp
mov
cs
insl
jle
pop
int
fldt
sbb
ss
adc
insl
mov
in
cltd
ret
adc
pushl
mov
push
repnz
and
in
adc
pop
jbe
repz
out
jbe
mov
inc
push
xor
sbb
ja
push
add
or
and
cmc
push
jp
cmp
stos
push
clc
je
and
das
cmp
or
pop
push
adc
cltd
es
push
scas
cmp
lret
push
push
xor
fdivs
or
push
cmp
dec
jns
dec
popf
lahf
lcall
stc
pop
rcrb
cld
je
xor
out
xlat
cltd
cltd
push
push
inc
andl
and
ficoms
in
pop
aaa
daa
sub
xor
cmp
imul
aad
xor
or
lret
sti
mov
insl
pop
daa
sbb
xchg
cmpl
dec
shld
addr16
jo
adc
and
pop
ss
inc
jmp
jnp
stos
fucomi
push
test
sbbb
repnz
jl
push
xor
xchg
jns
lahf
rcr
lock
xchg
shrb
push
add
ljmp
pop
shl
in
out
outsb
pop
fistpl
adc
arpl
rcll
pop
mov
mov
mov
mov
bound
pop
cs
jno
inc
sarl
faddp
jl
shr
test
fwait
iret
cwtl
aad
adcl
icebp
and
shll
hlt
mov
inc
cmpsb
or
or
jno
push
xchg
push
dec
adc
jle
fildl
push
push
xor
lods
mov
adc
pop
mov
je
fnsave
xor
cmpl
clc
aad
daa
dec
imul
fisttpl
pushf
lar
dec
testb
lret
scas
mov
or
lahf
adc
sbb
mov
lcall
cmp
sbb
loopne
xchg
outsb
loopne
mov
leave
xor
xchg
cmpsb
xchg
mov
mov
shrl
or
dec
out
scas
orb
into
jge
scas
or
adc
mov
scas
mov
out
mov
stos
enter
dec
lret
xchg
xor
cld
ja
jae
push
aaa
xlat
test
add
push
je
and
fwait
dec
mov
mov
test
insb
xchg
jae
jae
cltd
repz
adc
xor
scas
adc
push
jecxz
daa
jbe
rolb
jl
out
pop
outsb
jbe
lret
js
pop
xor
jnp
lret
or
shlb
lods
xor
rcrb
dec
push
bound
add
out
push
or
or
cmp
sbb
jae
imul
sub
pop
adc
rcll
sti
outsl
add
adc
jmp
fwait
leave
mov
pop
std
lret
mov
inc
iret
mov
pop
aam
dec
cmpsl
shll
sub
cmp
cmp
push
push
mov
add
loope
test
cmpsb
pop
mull
xor
cli
jmp
push
inc
clc
xchg
loop
fisubl
cld
mov
cwtl
pcmpgtb
loopne
fdiv
xchg
cmp
dec
rcll
mov
pusha
mov
lods
test
lret
mov
mov
rol
inc
out
in
or
pusha
add
dec
aam
nop
insb
push
out
sbb
mov
jb
imul
fidivs
test
aad
scas
add
mov
jmp
popa
loope
testb
mov
xchg
xchg
into
jge
add
add
addr16
lods
mov
out
mov
in
mov
push
outsl
push
cli
push
sub
clc
adc
fbld
jle
in
outsl
xor
sub
rcrl
mov
xchg
enter
les
push
pusha
jmp
mov
loopne
lea
out
push
leave
mov
cmp
fbld
push
rcrb
cs
nop
adc
cmp
sarl
mov
xchg
xchg
sti
ficomps
pop
xlat
xchg
or
fistps
adc
in
pop
lret
cs
xchg
fwait
pusha
repnz
aad
dec
insb
out
mov
leave
and
adc
or
push
sbb
int
and
jae
pop
adc
jbe,pn
hlt
dec
jl
push
push
mov
sub
lahf
mov
pushf
cld
and
jo
pop
icebp
testb
adc
rcll
mov
lock
and
das
jae
scas
call
xchg
dec
in
in
lret
outsb
pusha
add
lods
jg
cmpsb
inc
pop
inc
sub
dec
jne
shl
jecxz
sbb
stc
pop
addr16
test
xchg
aaa
inc
dec
push
fs
xor
dec
ds
fisttpl
dec
data16
sub
sbbb
cltd
and
sbb
mov
ret
gs
out
hlt
dec
adc
sbb
bound
cltd
in
and
mov
out
loop
ss
test
je
mov
xor
nop
inc
jb
or
sub
xchg
jp
mov
xor
and
pop
ret
jmp
lods
aas
popa
in
mov
or
inc
xlat
es
cli
mov
adc
dec
pop
movsb
jmp
outsb
push
shll
xchg
sub
mov
sbb
cmp
dec
xchg
sarb
adc
jns
mov
arpl
ffreep
in
adc
lods
inc
ror
push
es
xor
pop
add
lea
push
mov
or
loope
pop
adc
test
adc
mov
mov
popa
pop
mov
sbb
out
cmp
outsl
fisubrl
dec
push
fcompl
dec
add
test
or
pop
add
xchg
push
or
cmp
cmpsb
adc
std
mov
push
fsub
jo
jno
sahf
pop
dec
xchg
adc
sbb
inc
inc
std
xlat
or
cmp
mov
scas
ss
xchg
rcrl
lret
les
mov
push
mov
adc
lret
je
adc
and
lds
inc
aaa
ljmp
repnz
arpl
leave
mov
vmread
jno
scas
aaa
xor
mov
aam
lea
xchg
std
pop
imul
mov
cmp
and
inc
lahf
jg
dec
lock
cmpsl
xlat
mov
es
iret
mov
jo
mov
enter
add
aad
pop
test
cmp
dec
dec
push
cmc
shlb
cwtl
dec
inc
shll
xchg
mov
gs
push
sti
inc
call
dec
sbbl
lods
std
xchg
and
cli
cli
testb
fnsave
push
or
cld
mov
jbe
dec
mov
xchg
cmp
sub
mov
outsl
mov
je
xchg
iret
sub
jno
lret
sub
jmp
in
xchg
xorb
cmp
test
add
and
mov
clc
daa
aad
xchg
ds
mov
mov
xchg
out
pop
push
sub
popa
pusha
les
dec
loopne
jge
imul
int3
or
andl
inc
adc
loop
sbb
or
aas
stc
decb
popa
mov
xchg
jecxz
xchg
pop
mov
sub
adc
jae
mov
mov
bound
xor
outsl
aaa
xchg
dec
pop
cld
movaps
jne
jmp
lds
add
aas
es
mov
pop
in
testl
enter
nop
loopne
fmul
ja
loop
ljmp
outsb
enter
xorb
stc
fistl
aad
xchg
movsl
sub
loop
outsl
inc
sbb
jno
xchg
jnp
push
dec
sub
sahf
xchg
push
popf
call
out
push
mov
popf
bound
dec
xchg
ret
movsl
pop
mov
pop
mov
and
add
xor
rorb
mov
mov
aaa
les
xchg
lea
je
bound
mov
inc
mov
dec
sarl
pusha
xchg
inc
dec
lahf
fs
and
sub
pop
pusha
sbb
push
int3
loope
inc
leave
jle
fdivp
cltd
inc
ja
movsl
pop
push
in
mov
xchg
std
mov
fidivrl
imul
daa
int3
arpl
lret
dec
bound
mov
sub
xchg
pushf
lods
fcompl
xchg
xor
add
cmc
mov
scas
aas
dec
and
dec
xchg
sbb
std
push
incb
pop
cmp
dec
mov
add
daa
pop
test
shlb
iret
adc
in
dec
and
add
loopne
add
ds
jnp
xchg
cwtl
xor
sarb
idiv
sti
push
add
jns
adc
jns
pop
inc
xor
pop
push
ss
clc
jmp
mov
std
and
mov
js
mov
ja
mov
cmp
cmp
add
xchg
cmpsl
xchg
xchg
sub
ret
out
fidivrs
rolb
in
and
cltd
cld
lret
enter
aam
sbb
sub
scas
cwtl
push
sahf
arpl
pop
xor
mov
pop
movsb
mov
add
movsb
xchg
cli
aaa
pop
ret
and
jbe
cmpsl
sub
std
outsl
jp
lea
adc
or
adc
pop
testb
mov
and
and
int3
pop
add
jle
into
adc
jmp
jnp
idivb
mov
mov
or
mov
daa
arpl
jmp
pop
dec
sahf
pop
add
out
imul
shll
cmp
mov
pop
adc
pushf
loope
mov
cmp
adc
mov
pop
mov
sub
dec
iret
mov
adc
sbb
inc
add
xor
mov
cs
mov
pop
ss
inc
push
insb
sahf
es
ret
vmread
in
ds
notl
mov
add
xchg
repz
inc
fwait
pop
sub
fldcw
xor
mov
nop
xchg
xchg
movl
add
xor
das
pop
rcrl
sarb
pop
shlb
aaa
jne
and
lret
jns
cmpsb
aaa
add
pop
add
mov
scas
cmpsb
stos
xor
jl
clc
cmp
and
les
cmp
or
pop
mov
ljmp
popf
loope
jge
enter
push
mov
adc
shrb
ret
add
or
cli
jb
dec
sub
repnz
xor
je
inc
hlt
cmp
js
ret
sbb
arpl
xchg
pop
or
cmp
dec
dec
sbb
movsl
dec
insb
rclb
xchg
push
gs
fbld
sub
mov
into
arpl
repnz
pop
test
mov
icebp
pop
lcall
and
mov
das
add
dec
mov
or
jb
dec
popa
shrl
mov
arpl
sub
icebp
or
leave
in
pop
jle
xchg
dec
xlat
cmc
dec
loope
nop
test
lods
dec
pop
lds
xchg
adc
es
in
cli
outsb
or
mov
andl
inc
fmuls
mov
cli
lret
sahf
and
inc
add
push
popa
or
sub
push
push
rcr
push
in
icebp
jle
pop
jmp
xchg
mov
nop
out
inc
sbb
push
test
fs
dec
aas
push
mov
imul
xchg
fstpl
jne
sub
lods
push
cli
jno
ss
aad
fcompl
lods
add
fnstsw
pop
cmp
adcl
fildl
pushf
cli
ret
ljmp
xchg
xchg
movsb
or
xor
lods
mov
sbb
push
popf
popf
dec
xor
adc
push
xor
xor
push
inc
xchg
ds
jl
shl
dec
out
adc
jae
and
mov
insl
repz
mov
fidivrs
xor
xchg
mov
inc
lcall
jmp
cli
orl
cmp
lcall
aam
sub
dec
fwait
les
arpl
stc
movsl
lret
add
mov
jecxz
ljmp
js
sbb
inc
fstps
out
insl
inc
repz
repnz
jae
pop
rorb
xor
int3
mov
iret
and
cmp
xchg
jo
push
out
lock
popa
add
push
xor
sub
test
jg
dec
lahf
ss
sub
orl
call
dec
xchg
lods
fsts
adc
aad
inc
pop
sbb
sub
xor
loope
and
and
clc
loope
sti
ret
pop
jbe
jmp
pop
push
insb
and
adc
pusha
les
es
loop
pusha
addr16
and
inc
call
or
xchg
adc
dec
stc
in
dec
cmpsb
xchg
outsb
adc
push
cvtpi2ps
mov
cmp
mov
ss
popa
sar
mov
ret
mov
data16
das
loope
mov
push
and
dec
or
inc
pop
dec
mov
out
dec
es
out
aam
pop
outsb
clc
mov
mov
and
out
jl
lods
jno
and
mov
xor
ss
jnp
inc
int3
add
adc
sbb
add
aam
int3
stos
jbe
inc
mov
pop
inc
stc
sbb
mov
adc
add
fiaddl
leave
sarl
xchg
jbe
hlt
sub
push
push
xor
fstpl
inc
sub
pop
mov
pop
xor
enter
sbb
and
mov
sbb
jnp
adc
adc
cld
hlt
push
out
lret
push
sti
loope
inc
mov
pop
and
sbbb
sub
jle
movsl
inc
mov
insl
push
test
jg
pusha
movsl
push
in
jae
fs
in
lods
lock
int3
roll
into
movsb
mov
rcr
dec
adcl
shrl
pop
roll
int
clc
pop
aam
mov
shl
loopne
xlat
fwait
movsb
loopne
mov
in
push
cld
or
das
ret
addr16
jg
les
add
jp
das
in
jno
iret
ss
test
add
cmp
jmp
or
mov
and
imul
iret
bound
dec
xchg
shrl
std
push
in
or
ss
mov
adc
xchg
scas
aam
xor
mov
inc
push
lret
sbb
cmpsb
cld
xor
int3
js
xlat
push
popa
mov
iret
mov
xor
mov
cmpsl
cmp
mov
out
jnp
xchg
adc
fldcw
pop
cld
in
sarb
and
fidivs
loopne
call
stos
outsl
mov
loope
xchg
lods
jmp
dec
loop
xchg
inc
fbstp
xor
data16
mov
fmull
cmp
dec
lea
cmp
aad
inc
and
into
jle
xchg
loope
cld
scas
mov
xchg
push
xor
lcall
inc
ret
das
jg
jle
dec
sarb
ror
orb
or
sahf
dec
in
jnp
test
imul
push
andb
not
pop
push
xor
jmp
xchg
jl
lods
rol
adc
xchg
popa
in
mov
andl
mov
xchg
mov
jne
push
pop
in
inc
mov
xor
das
xchg
in
popa
or
out
or
ret
jmp
aas
shll
fldcw
fmull
fdivrp
cmc
mov
jge
pop
xor
cmpsl
lcall
data16
or
xor
pop
andb
mov
mov
iret
mov
lods
je
sub
xor
aad
inc
jle
sub
fisubrl
lahf
pop
xor
test
gs
mov
out
testb
dec
das
push
inc
or
xor
shlb
loop
jl
or
jae
cmp
adc
or
sub
xchg
arpl
out
jecxz
lret
lea
add
sbb
mov
inc
pop
and
xor
jno
push
adc
mov
jmp
aam
ja
test
stos
icebp
xchg
xor
xchg
pushf
mov
mov
lods
push
or
cltd
adc
aad
pop
cmp
stc
hlt
les
xorb
mov
outsb
pop
lods
sub
fldt
mov
cmp
add
sub
cmpsl
es
dec
sbb
xchg
outsb
dec
sbbl
out
xchg
push
sub
mov
mov
adc
cmp
xor
mov
push
incb
inc
lods
fmull
aaa
testb
mov
icebp
mov
stc
sub
rcr
lea
scas
mov
jmp
mov
mov
sbb
stos
negl
or
mov
push
jg
cmp
xor
repz
stos
out
movsl
jb
movsb
sbb
out
scas
sub
nop
xor
ficoml
inc
and
daa
adc
sub
push
lret
leave
sub
stos
pop
dec
orb
dec
add
movsl
jb
lods
and
enter
mov
mov
jne
pop
adc
dec
orb
test
jecxz
add
les
mov
test
push
sbbb
inc
pusha
jno
es
outsb
out
jb
aas
aas
ja
sub
adc
pop
cltd
mov
jae
fisubl
add
xorl
call
jge
push
push
and
inc
xchg
dec
jle
xor
sub
pop
fucomi
shl
jl
fmul
mov
fwait
pop
push
testl
mov
inc
push
sbb
and
aaa
testb
data16
movsb
nop
cmp
mov
jo
or
push
xor
pop
lea
and
cmp
xor
daa
jecxz
ret
test
xorb
add
ss
or
ds
inc
push
lods
and
xor
aad
jno
dec
aas
fisubs
adc
mov
clc
xchg
cwtl
cmpl
jbe
iret
andl
jp
sub
adc
sub
push
push
jg
sbb
int3
stc
sbb
mov
imul
sub
ss
jmp
shl
inc
xchg
cmp
mov
aam
in
pushf
sti
scas
inc
mov
fildl
imul
shr
loope
and
push
mov
or
add
jns
mov
and
inc
out
adc
inc
int3
mov
pop
sub
iret
sbb
mov
inc
imul
xor
sti
jecxz
cmp
jmp
fldl
lods
or
je
cmp
notl
mul
push
sub
or
gs
int
mov
scas
cli
shrb
das
fistps
xchg
shlb
jge
jbe
push
sti
imul
jmp
mov
incb
and
daa
sbb
mov
add
mov
shll
lea
fmul
inc
xchg
mov
ret
andb
nopl
cmc
sub
add
mov
jns
sbb
repz
cmc
fcom
inc
mov
sub
lods
adc
cmp
adc
int3
mov
scas
cmpsl
ss
add
stos
cli
inc
xor
mov
fmuls
lods
add
cmp
mov
dec
aas
pop
sbb
push
jae
stos
stos
xchg
sub
lods
xchg
fwait
pop
push
sti
add
cmp
mov
lcall
mov
sbb
lret
loope
mov
mov
jo
andb
scas
dec
push
ss
idivl
sub
fisubl
adc
outsl
loope
and
or
shr
pop
loopne
mov
adc
cli
add
mov
mov
push
xchg
xchg
lea
xchg
or
mov
sahf
pop
ficomps
xor
mov
pushf
sub
lret
push
test
sbb
andl
xchg
shrb
addl
xchg
jle
xchg
outsb
mov
negl
je
mov
xor
insb
jns
mov
or
jmp
in
jge
rorb
je
push
mov
jmp
xchg
mov
mov
sub
mov
and
mov
pop
dec
in
outsl
add
repnz
push
fldt
add
int
and
push
add
cmpsb
insl
xchg
stc
sub
roll
mov
mov
mov
out
jge
imul
inc
fstpt
fsubs
lds
push
ds
cmp
and
cmpsl
aas
pusha
call
mov
insl
mov
xchg
or
jle
jp
ja
scas
popf
icebp
int
test
aam
xchg
and
insb
ret
inc
rcll
fildl
popa
gs
dec
jp
fisubrl
idiv
push
xor
ret
pcmpeqw
dec
hlt
jb
and
xchg
in
cmpsl
pop
das
ljmp
ret
outsb
sbb
sub
jmp
sbb
scas
pop
popa
adc
mov
pop
leave
nop
mov
idivb
jl
xlat
call
imul
pop
mov
int
dec
enter
rcrl
iret
orl
sbb
fwait
lds
push
pop
pop
pop
add
test
adc
cld
xchg
inc
pop
inc
xchg
inc
out
lret
das
idivb
jnp
out
mov
repz
rorl
jge
dec
iret
jg
mov
bound
fsubrl
jge
ja
sub
xchg
out
imul
lods
or
dec
movsb
stos
sub
adc
jbe
inc
dec
cmp
cmc
xor
cli
adc
cmp
and
dec
fwait
sub
pop
repnz
or
lret
lock
push
popa
out
or
sbb
mov
mov
pop
push
cmpsb
sub
pop
arpl
dec
adc
mov
mov
and
jns
dec
push
outsl
popa
hlt
mov
cmp
pop
out
ljmp
pop
filds
int
mov
mov
aas
arpl
test
pop
sbbb
in
loopne
sub
adc
and
inc
and
push
or
mov
sbb
test
mov
mov
out
dec
mov
out
and
push
stos
fs
imul
mov
jnp
inc
repz
sub
repnz
enter
mov
jmp
in
addr16
ljmp
outsl
jno
xchg
adc
hlt
jnp
lret
and
addr16
add
jg
arpl
iret
sar
imul
pushl
xor
mov
lock
pushf
mov
rcrb
scas
fucom
in
fidivs
cmp
stc
push
xor
rcr
call
mov
dec
push
cmc
pushl
mov
test
jge
inc
xor
mov
enter
mov
stos
pop
cmp
aaa
ja
lock
push
fisttps
inc
pop
stc
aas
push
popf
or
popf
adc
lcall
push
inc
out
enter
adc
mov
pushf
movq
addr16
xorl
adc
xor
cwtl
mov
sarl
add
pop
sbb
pop
out
xchg
je
subl
and
cs
outsb
inc
add
lcall
cmpsb
add
scas
fstl
xchg
ja
add
fstl
sub
mov
lcall
xchg
mov
fwait
ret
cmpl
adc
or
and
loope
jge
sbb
ds
xor
pop
in
scas
out
lahf
xchg
and
inc
ret
mov
fsub
jo
cmp
jno
cmp
xor
sub
out
push
stc
adc
mov
scas
sahf
ds
test
pop
sti
add
loopne
mov
test
and
icebp
ret
dec
sbb
idivb
js
shrb
mov
es
stos
les
fisttps
fisttps
pop
inc
adc
sbb
dec
xor
mov
ss
and
pop
sub
pop
icebp
add
sub
aas
or
popf
gs
inc
sub
xchg
mov
insb
mov
jnp
imul
dec
sbb
fs
call
out
or
pop
push
mov
or
loop
imul
gs
inc
push
pop
cmpsl
sbb
out
fs
repz
out
repnz
inc
mov
add
mov
add
mulb
inc
jbe
stc
inc
xchg
and
pop
roll
push
mov
imul
hlt
sbb
mov
call
add
sahf
std
mov
ds
insb
data16
int
test
out
inc
imul
imul
loopne
lcall
ljmp
jo
imul
dec
jne
or
cltd
push
pop
and
xchg
daa
sti
add
test
pop
mov
lods
or
push
ss
add
pop
fnsave
jae
xchg
aad
lret
in
icebp
adc
inc
cli
popa
fstpt
inc
or
test
pop
mov
mov
cmpsb
xlat
stc
push
int
jno
int
xchg
push
mov
fsubr
adc
repnz
cld
cmp
les
lret
mov
shlb
sbb
fldz
pop
mov
jno
out
dec
xchg
aad
iret
imul
mov
inc
sbb
add
dec
stos
stos
pop
add
cmp
dec
jl
out
sub
pushf
xlat
or
repnz
iret
xchg
imul
mov
mov
xchg
loope
add
jo
sbb
mov
fdivp
xorl
test
mov
mov
filds
mov
fimuls
mov
push
jns
pusha
pop
push
ror
ja
ljmp
pop
sbb
push
mov
scas
xlat
data16
mov
lods
insl
les
and
xchg
cmpsl
push
mov
cmpsb
repnz
push
push
scas
pop
sti
lods
aas
lods
ljmp
mov
sbb
incl
fmull
jbe
sbb
and
emms
shl
je
dec
mov
jp
pop
pop
pusha
sbb
insl
or
jmp
daa
lret
xchg
lcall
and
xor
les
decl
pop
jae
bound
test
gs
and
fdivs
icebp
loope
ds
sti
mov
or
fstps
jo
sbb
jae
xchg
inc
and
in
out
in
mov
inc
loop
jne
sbb
in
dec
test
xchg
insl
adc
ja
ficomps
rol
cmp
push
mov
enter
lds
pop
or
or
call
sub
out
dec
push
add
insb
or
divb
shl
stc
add
lock
fsubs
nop
sbb
dec
or
lods
mov
add
and
xor
int
pop
arpl
in
sbb
or
lcall
mov
das
int
pop
mov
js
jnp
mov
dec
add
in
jge
shl
out
out
rorb
and
fidivs
lods
jle
and
aas
rcrl
test
xchg
add
xchg
mov
and
mov
or
mov
test
pop
test
fadd
insb
jg
int3
add
sub
lret
cli
pop
sbb
jne
cmp
push
lods
push
mov
adc
mov
pushf
mov
sub
sub
aam
and
int
push
cmp
sub
pushf
xchg
lea
sbb
inc
sub
aad
arpl
jo
pop
int
rcrb
and
xor
dec
push
js
ljmp
mov
ret
rcrl
sub
cmp
pop
shlb
add
or
fiaddl
lods
sub
cmpsb
out
pushf
push
fcmovne
mov
xchg
sub
pop
cmpsl
movsb
push
and
fst
aas
mov
inc
jl
cmp
push
inc
sbb
adc
movsl
test
xchg
mov
inc
test
mov
rorb
mov
aad
dec
inc
push
nop
cmp
es
es
add
or
arpl
pushf
add
jo
movsl
fcoml
out
pop
jnp
sub
adc
pop
add
cmpsl
adc
dec
inc
pop
inc
cmp
cmp
mov
xor
sbb
call
dec
add
push
andb
dec
xor
int
and
cmp
add
fwait
mov
cmpsl
stos
inc
pop
mov
inc
jne
and
dec
ret
lcall
adc
inc
leave
mov
cld
cmp
mov
hlt
mov
and
inc
mov
in
adc
pop
adc
xor
inc
sbb
ret
xchg
int
mov
mov
stos
xorb
and
sbb
add
jmp
fcompl
adc
shrb
hlt
mov
jno
jmp
cmp
sbb
ss
movsb
xchg
mov
rcrl
inc
loop
cltd
mov
insl
lea
in
aaa
cmp
adc
call
idiv
subl
div
jg
fwait
inc
mov
aaa
xchg
pop
push
dec
je
mov
push
xor
pushf
push
cmc
push
pop
dec
lods
sbb
cltd
mov
or
imul
xchg
xor
dec
mov
sbb
mov
and
push
adc
mov
adc
call
inc
adc
cmc
xchg
pop
or
das
xor
out
jae
cltd
push
andl
sbb
subl
pop
cwtl
enter
subb
in
xchg
lea
imul
pop
icebp
lods
jl
xchg
cmp
in
push
rcl
xor
inc
pop
scas
lock
popa
stos
or
loopne
pop
sub
les
arpl
jecxz
cwtl
dec
nop
xchg
or
std
fiaddl
or
sbb
jmp
pop
stos
pop
fstpl
jl
dec
mov
add
xor
out
call
dec
mov
icebp
out
in
nop
adc
mov
inc
sarl
cmp
int
lds
jnp
arpl
xchg
mov
imul
imul
dec
cmp
pop
shr
insb
sbb
mov
rclb
popa
mov
sti
xchg
lret
sti
mulb
ja
jne
xchg
ret
pop
dec
cmp
out
mov
or
les
out
mov
xchg
or
loope
popa
sub
inc
nop
dec
cmp
rcrb
add
shll
add
imul
test
mov
test
add
dec
mov
cmp
movsb
cli
into
sbb
add
fs
lret
cmp
ret
movsb
jecxz
lock
jb
sub
xchg
or
inc
lods
outsl
mov
in
arpl
xchg
sarl
es
test
pushf
stc
lret
lods
adc
stos
adc
and
dec
add
mov
dec
ja
pop
push
js
flds
mov
xchg
fwait
sarl
fadds
lea
xchg
notl
or
xchg
xor
push
popf
lret
lret
lods
adc
js
ficompl
xchg
int3
sbb
mov
or
mov
and
or
dec
mov
aad
data16
in
js
or
sti
pusha
adc
xchg
in
aas
movsl
ljmp
mov
xlat
insl
ret
stc
mov
popa
mov
js
and
pusha
sbb
andb
mov
cs
lcall
cmpsb
cmp
push
pop
cmc
lds
inc
xor
push
inc
icebp
sahf
add
push
push
mov
int
xchg
int
cltd
rolb
cmc
aad
aad
inc
in
es
and
cmp
ret
pusha
shl
push
subl
mov
dec
aas
pop
cld
dec
jne
jge
mov
mov
jns
fs
lret
jmp
subb
insb
loop
into
fadds
mov
sbb
xchg
or
adc
mov
or
xor
dec
jle
xchg
push
mov
push
push
imull
pushf
lahf
lret
cmp
inc
mov
sbb
jbe
cmpsb
andb
jo
cmp
push
xchg
xor
sub
aam
cld
stc
dec
sbb
pop
mov
inc
cld
ds
mov
push
dec
inc
mov
imul
dec
imul
fwait
inc
lods
mov
ret
push
mov
lods
mov
sbb
fwait
jns
mov
pop
sbb
je
lret
or
popa
in
pop
mov
daa
sub
popf
fbstp
pop
lea
adc
xor
stos
stos
out
and
sub
inc
jns
pop
add
es
inc
lahf
jge
test
cmp
and
mov
cmp
imul
mov
loope
outsb
vhaddpd
jne
xchg
jno
out
fcoms
jmp
cmp
adc
push
dec
pop
ljmp
pop
inc
shl
mov
xchg
push
shlb
mov
cmp
movsl
sub
jge
adc
aas
mov
scas
xchg
mov
testl
shrb
jnp
lea
jns
cmpsl
es
jge
ds
cld
add
push
mov
adc
or
leave
lods
cmp
rcll
sub
movsl
rcr
jl
std
cmc
jp
addb
and
mov
aam
pop
push
xchg
imul
imul
cmp
mov
js
dec
dec
and
jg
icebp
jecxz
jmp
push
loope
mov
leave
xchg
push
test
fdivrl
xor
dec
add
lret
and
loop
dec
inc
fcoms
aad
sub
lods
mov
cmp
mov
test
nop
push
jne
stos
jl
add
and
push
mov
xlat
dec
add
mov
stc
push
adc
mov
mov
movsl
add
sub
mov
or
pushf
stos
les
hlt
inc
shrl
cmp
test
mov
push
cmpsl
ss
repz
push
mov
pop
ficomps
mov
push
dec
std
inc
sbb
test
sti
leave
mov
xor
mov
inc
push
cld
jecxz
mov
fsubp
and
push
loopne
dec
jno
sub
pop
push
and
insl
call
push
call
push
cld
and
pop
stc
push
ja
out
clc
pop
arpl
push
das
dec
dec
mov
fstpt
data16
notb
adc
and
pop
mov
cli
scas
add
adc
sub
cli
and
pop
pusha
imul
les
testl
je
in
push
xchg
dec
dec
enter
pop
lret
outsl
jno
adc
int3
cltd
sub
movsl
or
test
lock
xchg
pop
sub
pop
dec
mov
lods
pop
jns
clc
xchg
icebp
negl
pop
ror
cmp
inc
lcall
sbb
mov
mov
mov
lods
loope
jnp
dec
mov
cmp
sbb
lea
and
lods
orb
shll
fidivrl
add
in
repnz
mov
dec
push
and
movsb
and
inc
mov
mov
ja
sub
fadds
lret
scas
xadd
cmp
stc
lods
pop
out
jo
pop
mov
xor
test
arpl
jl
rcrb
js
jb
in
jbe
sub
sub
outsl
out
lret
arpl
add
aam
and
movsb
add
pop
popf
dec
mov
stos
mov
rcl
inc
pop
inc
dec
aad
insb
aam
bound
and
dec
lock
jge
fld
or
pop
mov
push
or
mov
mov
inc
push
aam
js
iret
ds
pop
pop
repz
dec
jae
fstpl
pop
hlt
sbb
lahf
mov
out
shrl
mov
arpl
dec
adc
jns
inc
mov
fcomps
cmc
pop
and
jne
mov
jg
add
repz
push
loopne
pop
add
rcl
movsb
jl
push
ljmp
lds
inc
hlt
xchg
mov
lods
cmp
lds
icebp
adc
jo
adc
jb
push
mov
nop
in
sbb
jle
fwait
jecxz
push
arpl
cld
jle
fs
fldl
aad
test
xchg
fildll
xchg
or
fwait
dec
mov
inc
xchg
rorb
cmp
cmp
sub
sub
inc
loopne
xor
inc
mov
pop
push
fwait
cmp
in
or
rol
popf
ds
pop
push
mov
xor
pop
hlt
push
sti
andl
aam
xchg
jle
pop
in
loope
dec
mov
or
sbb
insb
leave
fstps
pop
push
mov
arpl
out
insl
insl
mov
test
ret
xchg
loopne
adc
in
cltd
mov
xor
shr
pop
jge
into
mov
xor
iret
into
jae
inc
arpl
add
lcall
sub
push
xor
insl
dec
xchg
lds
lcall
in
into
and
mov
pop
clc
nop
push
cmp
push
in
hlt
jmp
jae
cli
mov
outsb
adc
push
mov
pop
jecxz
shl
das
cmc
mov
fcomip
push
jmp
fcomps
test
sbb
nop
xchg
pop
shrl
xlat
cmpl
sbb
inc
cmp
test
mov
xchg
insl
pop
fcompl
loope
or
std
aad
in
mov
mov
mov
movsb
xchg
ret
les
fiadds
cmp
inc
andb
imul
mov
and
daa
fcomps
mov
adc
inc
mov
and
mov
sarl
ds
mov
les
icebp
mov
insl
add
icebp
ja
sub
ret
ret
push
inc
xor
out
sub
data16
sbb
or
call
popa
adc
xor
in
add
dec
adcb
cmp
lods
and
xor
jp
icebp
je
mov
dec
mov
xchg
test
dec
scas
push
lcall
call
test
dec
cmc
cli
pop
rep
and
cltd
or
xchg
das
sbb
jb
jmp
and
sbb
mov
pop
push
cmc
mov
mov
push
imul
jo
jge
adc
jno
test
repnz
dec
and
xor
test
adc
scas
cmc
rorb
cmp
dec
sti
je
sub
sub
cmp
jmp
and
in
aas
lods
je
and
mov
jno
pop
cmc
mov
inc
fnstenv
in
inc
cmpsl
test
rorl
mov
les
mov
xor
xchg
sub
xor
xor
mov
imul
xchg
dec
mov
inc
add
fwait
cwtl
out
out
xchg
cmc
jae
mov
fidivrs
cs
in
scas
sub
mov
ja
sbb
push
push
outsl
xchg
bound
cmpsb
add
ds
mov
mov
test
mov
inc
sub
fldenv
xchg
idivb
mov
push
fidivrs
mov
mov
sbb
nop
cltd
test
xor
push
inc
push
negl
cmc
popf
call
jmp
fnstsw
lods
add
jb
lea
lods
sub
mov
icebp
shlb
cmpsl
cmp
add
xchg
rclb
negb
cmp
std
cmp
sbb
leave
and
dec
jg
mov
dec
sbb
inc
insl
xor
subb
push
insb
pusha
fldcw
and
xchg
fsubr
dec
out
xor
gs
out
fildl
sub
or
out
mov
bound
mov
mov
xor
es
sbb
aam
push
inc
in
sbb
inc
scas
pop
push
gs
out
xchg
dec
add
ds
lcall
cwtl
or
xor
test
inc
sbb
mov
xchg
mov
repz
jle
dec
rcrl
fisubs
lret
stc
shr
stos
push
fldcw
stc
popa
jecxz
xor
pop
add
and
inc
rcr
test
xchg
fisttps
mov
test
fidivs
inc
popa
mov
in
gs
mov
mov
sbb
xchg
ficomps
sti
out
xlat
lahf
sbb
movb
cmp
in
test
in
add
jle,pn
xchg
jnp
xor
stos
and
push
pop
jg
ljmp
mov
data16
or
mov
in
sub
xor
and
std
lds
pop
pushf
je
in
sbb
clc
mov
mov
jmp
fistl
aad
enter
pop
inc
out
and
pop
imul
nopl
les
push
gs
out
inc
out
cmp
arpl
fistpll
js
xchg
cmpsb
jge
stos
mov
rorl
movsl
cmp
aam
pop
adc
inc
pop
adc
movsb
dec
out
mov
fnstcw
lods
xchg
sbb
xchg
loop
sbb
push
cmp
cmp
frstor
adc
repz
sub
pop
dec
fidivs
iret
lcall
mov
mov
pop
or
rorl
jbe
xor
aad
insl
notb
push
je
inc
pop
pop
loop
dec
lods
in
pop
push
rcll
cmp
adc
mov
lcall
icebp
shl
and
cmc
pop
in
inc
xor
dec
fstl
call
lea
mov
and
inc
fstpl
int
ret
out
mov
add
or
fdivrs
sbb
mov
jnp
sbb
cld
fs
pop
insb
js
loop
testb
cwtl
fsubl
iret
xchg
jmp
imulb
inc
fwait
mov
cwtl
sub
push
or
lock
mov
jnp
gs
adc
jle
and
mov
stc
sub
neg
fsts
fldenv
sbb
xchg
repnz
mov
jns
adc
test
lret
hlt
ja
ror
movsl
jle
imul
fdivrs
popa
jmp
push
ljmp
or
sahf
loop
jne
popa
je
int3
or
mov
call
loopne
xor
lret
ljmp
push
rolb
pop
movsb
xor
or
mov
xchg
out
das
sbb
or
iret
fdivrs
sub
jne
scas
mov
rcr
dec
xor
daa
mov
add
js
sti
ss
std
mov
icebp
bound
dec
stos
scas
push
fdivl
mov
ror
sarb
pop
pop
dec
lahf
lods
mov
popa
ret
push
loopne
imul
loopne
and
xor
or
aas
inc
insb
or
sarl
push
jmp
push
sub
push
lock
or
out
mov
idivw
xchg
mov
out
jecxz
mov
test
or
adc
sbb
mov
mov
shrl
and
ret
mov
testb
xlat
test
sub
out
inc
fs
xchg
xchg
inc
and
jno
mov
pop
adc
sbb
add
and
or
jle
push
bound
sbb
push
pop
pop
mov
jmp
mov
xchg
sti
adc
fsub
test
dec
add
mov
jmp
cmp
movsl
xchg
lret
or
mov
aas
imul
imul
pusha
xchg
notb
pop
outsb
das
dec
aas
or
stc
adc
jle
sbbl
sbb
mov
add
lock
repz
dec
push
sub
sbb
mov
rcrl
sbb
dec
in
leave
or
lds
push
jo
into
inc
iret
cmpsl
int3
fldenv
fwait
or
inc
fcmovnb
jae
pop
cmpsl
dec
fcos
mov
push
cmpsb
adc
inc
dec
jle
nop
mov
fdivrs
mov
lcall
add
notl
sbb
in
repz
dec
cmp
xchg
xor
lahf
mov
sti
loope
ds
lcall
lret
jae
mov
xchg
movsl
rorb
ds
std
cmp
ljmp
inc
rep
aad
mov
sti
ror
test
add
test
pushf
call
inc
xor
inc
xor
jl
jecxz
inc
gs
jp
pop
push
jle
lock
out
test
push
and
shlb
cli
icebp
stc
icebp
dec
int
mov
imul
imul
repnz
dec
or
fdivr
fldenv
daa
mov
aad
adc
loop
sub
repnz
dec
mov
xchg
or
jge
imul
dec
fnsave
test
xchg
inc
repz
cltd
jge
aaa
bound
lock
lods
mov
cmp
imul
mov
sahf
aad
jmp
insl
sbb
xchg
adc
adc
add
sub
into
inc
and
cmp
jae
jecxz
xor
dec
cwtl
lods
jp
xchg
jne
sbb
pop
sbbb
dec
lret
iret
pop
adc
nop
xchg
push
xor
fdivs
loopne
stc
jb
enter
fsubl
xlat
ss
incb
mov
arpl
in
fst
aas
incl
lcall
mov
out
inc
cltd
push
push
mov
in
cmpsl
addl
dec
inc
js
and
push
cmp
lahf
jbe
adcl
pop
xchg
sbb
adcb
out
adc
adc
jb
paddw
sbb
cld
inc
adc
mov
push
dec
imul
or
pop
inc
pushf
mov
in
sub
sbb
xor
jmp
mov
inc
pop
add
mov
or
or
mov
sti
cs
cmp
xor
add
ss
add
mov
scas
outsb
xchg
cmp
stc
fwait
push
jmp
or
or
sbb
stc
scas
fcomps
pop
loop
pop
or
scas
and
mov
or
adc
dec
or
in
mov
in
mov
push
mov
ds
aam
imul
xor
mov
stos
inc
adc
pusha
sub
xor
xor
add
lods
dec
loop
push
pop
pop
jmp
push
mov
dec
sarb
jg
sub
scas
sahf
stc
jg
xor
inc
or
jecxz
scas
out
adcl
pop
xchg
rep
push
fistpl
test
sub
cmp
pop
outsb
out
stos
iret
test
andl
sbbb
push
jle
or
xchg
loop
clc
jl
sbb
lret
popl
popf
cwtl
and
ljmp
mov
xlat
mov
repz
pushf
mov
int3
mov
inc
jne
xor
sbb
jne
mov
repnz
adc
inc
jbe
sbb
jmp
pop
movsl
sbb
inc
push
fldl
push
cwtl
add
inc
bound
xchg
jo
xchg
lret
cwtl
and
jecxz
insl
jmp
inc
push
mov
xchg
js
push
xor
out
fnsave
lahf
fsubl
adc
and
or
in
inc
push
ret
push
pop
xchg
pop
mov
push
mov
adc
fwait
xlat
xor
and
dec
inc
ja
testb
mov
adc
lret
jecxz
inc
push
lret
mov
push
sti
das
cs
pop
iret
or
mov
pop
push
sahf
mov
cltd
push
jne
push
test
mov
std
xor
in
sti
inc
lcall
mov
xorl
push
rorl
jp
mov
xchg
fcmovbe
mov
dec
or
jns
clc
xor
ret
jg
pusha
imul
pop
and
arpl
jne
lea
and
pop
fisubs
mov
movsb
out
test
xor
pop
pushf
jecxz
adc
cmp
lret
jmp
dec
testb
jmp
adc
in
idivb
and
jl
sub
in
and
lods
push
cmp
and
popa
and
mov
jg
xchg
sub
pop
or
addr16
sahf
lcall
mov
test
scas
mov
push
loope
push
or
sarl
jecxz
xchg
xchg
inc
push
push
mov
add
dec
in
mov
mov
test
jns
hlt
scas
mov
pusha
out
and
xchg
mov
lcall
jb
add
fstl
or
push
std
mov
sbb
cmpb
stos
notb
pusha
rorb
aad
das
pop
add
insb
icebp
jl
dec
adc
adc
shrl
subl
push
mov
int3
aas
movsl
sbbb
sbb
iret
jecxz
repz
loope
jmp
xor
fisubrs
fs
jmp
invlpg
js
sbb
mov
xchg
lret
dec
and
sbb
sub
sbb
xor
sbb
mov
int3
lahf
in
dec
add
loope
into
inc
in
lods
mov
loope
out
call
mov
mov
sub
popa
mov
jnp
hlt
in
push
roll
cli
and
loope
rol
inc
and
dec
mov
sbb
aam
cmpsb
xchg
shlb
inc
test
adc
imull
nop
push
jb
pop
push
mov
das
mov
xorl
or
filds
jb
mov
fs
mov
out
mov
mov
jb
mov
test
movsb
cli
not
pusha
xchg
loopne
inc
daa
and
add
les
mov
add
or
daa
lret
test
movsb
hlt
cmp
aas
arpl
lock
adc
icebp
repz
cwtl
push
pushf
testb
lret
cmp
sub
add
sbb
jo
outsb
ret
int3
pop
aam
inc
cmpsb
mov
test
int3
push
xchg
sbb
jl
rcrb
idivl
lahf
ja
xor
sbb
das
inc
xor
add
es
pusha
xchg
loop
push
test
lods
mov
dec
or
mov
std
and
push
lret
outsl
imul
ljmp
pop
sub
ljmp
cltd
addr16
in
mov
xchg
dec
call
dec
add
es
ljmp
stos
sub
adc
push
jns
sbb
xchg
push
rolb
imul
cmp
jl
sub
dec
mov
imul
loope
outsl
xlat
in
xchg
insl
mov
sub
inc
movsl
imul
enter
inc
ret
pop
jmp
bound
imul
xor
insb
test
leave
bound
andl
gs
sbb
jb
call
out
inc
and
sbb
xchg
mov
or
mov
int3
int3
enter
jno
mov
mov
icebp
xor
movsl
arpl
xor
js
leave
mov
cmp
cmc
mov
cmp
mov
pop
dec
in
dec
push
mov
aas
incb
sub
dec
lret
inc
ljmp
add
sbb
inc
outsb
xor
insb
pop
arpl
addb
adc
xor
fistl
in
jae
movsb
inc
cmp
stos
xchg
push
inc
pop
fidivrl
ds
bound
jmp
repz
icebp
sub
xchg
call
mov
sub
pop
or
fstp
int
les
repnz
imul
mov
std
mov
cmp
daa
mov
cs
je
inc
rol
insl
stos
xchg
je
js
stos
and
mov
push
inc
mov
enter
and
lds
xchg
dec
bound
loop
mov
xlat
xor
jne
xor
or
push
push
ret
jp
adc
adc
xor
lret
out
test
cmp
fs
loop
sub
push
pop
inc
jle
mov
insl
cld
add
cmp
sub
xor
cmp
fwait
inc
mov
jecxz
jecxz
mov
adc
test
ret
mov
lcall
push
repnz
xlat
movsb
scas
xchg
and
insl
and
cli
cmpsl
shll
lret
and
jo
lds
rdtsc
addr16
mov
sbb
es
js
shll
fs
addl
mov
aad
das
imul
pop
sarl
call
mov
xor
add
mov
adcl
not
idivb
scas
cs
jmp
push
sahf
outsb
and
mov
imul
shlb
fldl
jb
mov
inc
ja
xchg
and
cmp
mov
cmp
loop
movsl
push
sub
in
add
dec
xchg
push
and
xor
or
push
xchg
mov
cli
lret
pop
mov
iret
jp
ret
lea
push
dec
shrl
int3
mov
loop
outsl
mov
out
inc
sbb
stc
adcl
insb
scas
xor
mov
sub
lcall
pop
incb
pop
xchg
jno
int
repz
movsl
add
cmp
mov
ja
pop
ja
cmpsb
mov
addb
adc
mov
daa
aad
jbe
jnp
jmp
mov
popf
pop
in
std
stos
aad
mov
inc
inc
mov
push
xchg
jbe
repz
int
xor
stos
jle
lcall
lcall
movsb
or
xchg
pop
insl
xor
testb
scas
adc
push
inc
ret
movsb
push
adc
pop
out
out
mov
push
in
push
push
adc
pusha
pop
pop
popf
xor
xor
xlat
pop
xor
sarl
cmp
push
jl
dec
and
or
sbb
xor
adc
dec
aas
dec
push
ljmp
inc
push
pop
mov
mov
mov
fistpll
sub
xchg
xor
or
out
push
xchg
pop
scas
popf
or
hlt
inc
add
aam
mov
or
jae
outsb
jecxz
fs
fsubs
rcrb
loopne
nop
pop
lea
mov
ljmp
add
rcrb
stc
mov
sub
mov
cld
shlb
fsubrl
xor
repnz
scas
mov
cwtl
dec
and
mov
or
add
dec
mov
gs
je
adc
ror
dec
idivl
test
inc
stos
mov
xchg
pushf
push
sub
sarl
push
in
add
dec
cmp
in
mov
cli
je
and
repnz
cmp
repz
jno
sti
dec
xlat
loope
add
mov
push
mov
push
sbb
hlt
cli
mov
add
int3
mov
jne
sub
outsb
adc
or
inc
jmp
inc
negl
test
movsl
fbstp
sub
pushf
pusha
lods
into
add
fisttpl
cmp
xor
xor
xor
dec
adc
mov
xor
mov
sbb
fidivrs
push
jecxz
ds
test
or
or
xlat
shlb
ds
sbb
xchg
bound
jmp
xchg
mov
xchg
adc
cwtl
out
and
mov
sbb
mov
call
mov
sub
mov
push
ja
cmc
into
out
pop
mov
pop
jne
adc
or
xorb
dec
jg
ret
out
ds
scas
inc
xorl
popf
in
lret
and
push
call
rcl
jbe
dec
aas
mov
pop
call
mov
sti
sub
jnp
aas
xor
xlat
jno
dec
jle
clc
imul
iret
dec
repz
sub
or
push
rcr
outsb
push
fxtract
xchg
inc
mov
aas
push
pop
lock
mov
xchg
inc
dec
fsubl
orl
out
add
cmp
repnz
fs
jp
and
push
push
sub
sbb
sti
out
insb
pop
mov
sbb
nop
ljmp
push
dec
shlb
sub
jmp
push
push
punpckhbw
js
repnz
xor
cli
call
jl
ret
into
jecxz
sbb
movsl
push
lahf
pushf
xchg
adc
sub
call
push
orb
ret
fidivrl
inc
add
pop
xor
dec
loope
push
pop
sahf
inc
inc
dec
mov
pop
mov
test
or
test
mov
xchg
or
lock
leave
es
aaa
sub
inc
pop
shl
dec
xchg
or
loopne
cmc
xchg
cmpsl
pop
enter
push
jle
cli
push
movsl
in
dec
sbb
rcll
xor
xor
shrl
pop
xlat
into
dec
jae
rcrl
xchg
sub
pop
cld
ja
push
dec
bound
mov
xorl
fldenv
test
sbb
mov
xchg
repz
in
push
xlat
movsl
fsubrs
int3
sahf
xchg
aad
mov
je
enter
imul
sbb
xchg
sub
xchg
mov
nop
pop
subl
ret
mov
sbb
mov
flds
pop
push
and
hlt
dec
sbb
jge
pop
push
xchg
jecxz
dec
xchg
es
mov
out
and
mov
out
loope
adc
lock
cli
xor
loop
movsl
sbb
push
ds
sbb
cmp
pop
mov
repnz
mov
repnz
mov
lock
push
add
outsl
jl
lahf
lods
sahf
gs
push
loope
addr16
adc
pop
sahf
cwtl
cmpsl
mov
es
push
push
int3
xchg
adc
add
mov
mov
insl
push
sbb
movsb
push
hlt
jno
push
ss
test
inc
outsl
xor
mov
and
pop
cli
rcrl
mov
pop
and
sub
fwait
xor
mov
jnp
inc
pop
push
dec
int3
mov
mov
mov
push
loope
lahf
aad
sti
dec
mov
xor
mov
dec
mov
and
sbbb
dec
dec
pusha
pushf
xchg
and
adc
imul
rol
xchg
sahf
sub
dec
lds
movsb
mov
cmp
push
sub
pop
jecxz
loope
mov
pop
jle
pop
cli
mov
aaa
test
push
test
pop
xchg
das
fldt
push
cmpsb
addb
movsl
or
xchg
cltd
pop
mov
sbb
mov
add
ljmp
or
mov
pop
scas
nop
cwtl
les
push
xor
dec
inc
lea
jmp
out
pop
cmp
shlb
or
dec
loop
mov
push
lea
repnz
fincstp
add
insb
xor
mov
inc
jmp
push
std
xchg
xchg
dec
cwtl
out
rorb
mov
xor
lds
jecxz
push
pop
test
loop
rorl
test
mov
jg
and
movsl
js
ja
xchg
fiaddl
popa
pop
and
sub
lret
push
jno
jp
mov
aaa
out
pop
sbb
pop
inc
mov
out
outsb
push
cmpsl
or
fcomps
dec
adc
shl
jo
lods
dec
mov
adc
add
in
daa
push
inc
sub
sub
cld
inc
adc
repz
jno
adc
jnp
and
loop
adc
hlt
xor
mov
pop
fnsave
cwtl
cltd
jbe
cmp
mov
sarb
or
and
or
out
jo
or
int3
xchg
into
in
test
jae
imul
dec
push
scas
or
jle
sub
push
and
or
insb
fs
or
fwait
dec
fcomps
vpsrlw
cmp
jae
mov
scas
mov
push
testl
scas
push
jo
push
add
jle
cmp
pop
mov
cmp
lcall
pushf
jno
add
lods
imull
enter
pop
sub
pop
out
mov
xchg
lret
xchg
xor
out
adc
sub
sub
sbb
repnz
or
loop
or
cmc
inc
in
ljmp
jb
imul
fsubs
inc
call
jo
sbb
into
push
fmul
and
sahf
popf
dec
push
sbb
ffree
lea
inc
cmc
xchg
cmp
repnz
sbb
inc
divl
insl
outsl
xchg
or
pop
in
push
mov
call
iret
and
ja
mov
test
orl
mov
aad
movsb
inc
and
scas
xor
mov
add
roll
push
add
shlb
and
dec
xor
dec
cld
dec
mov
fsts
les
xchg
xchg
mov
lret
cmp
lods
jne
add
repnz
push
imul
and
xchg
push
jg
shlb
sub
sbb
test
xchg
out
ja
mov
cmp
iret
mov
xor
popa
lods
inc
fsubs
or
std
mov
pop
in
pop
int3
sub
mov
sub
and
loop
push
in
cmc
test
mov
jmp
jmp
sbb
cld
data16
pop
aaa
ds
mov
ja
frndint
call
jb
inc
sub
xchg
push
adc
adc
inc
mov
adc
rcrb
rclb
sub
loop
je
insb
push
call
adc
aaa
dec
dec
lods
jecxz
dec
in
push
push
ficompl
push
je
or
mov
and
test
and
mov
xor
addr16
lods
out
inc
out
mov
fndisi(8087
adc
pusha
repnz
push
dec
int3
pop
clc
mov
and
jle
out
push
dec
inc
aas
sbb
arpl
xchg
cmpsb
xor
ss
mov
lahf
cs
fwait
leave
out
int
jns
mov
fidivrl
int3
aas
cmp
mov
mov
into
mov
cli
icebp
cld
loope
lret
cmp
fs
jmp
or
push
scas
shl
aas
xor
repz
pop
sbb
lahf
xlat
xchg
pop
cmp
movsb
inc
in
and
add
mov
dec
arpl
jl
push
lock
pop
jo
push
xchg
push
cmp
into
jecxz
stc
maskmovq
testl
lret
xchg
sti
leave
and
sarl
jecxz
std
movsb
cmp
mov
jmp
movsl
inc
and
cmp
add
dec
std
pusha
arpl
or
rol
jl
test
cmc
adc
add
aam
ds
mov
sub
push
in
leave
insl
lods
sub
in
adc
jne
adc
repnz
sbb
idiv
cmp
pop
xor
mov
arpl
bound
sarb
cmc
sbb
sti
sub
push
adcb
sub
mov
xor
nop
pop
test
jecxz
je
movsb
cli
xor
xor
das
or
push
loopne
mov
push
cli
and
inc
or
lods
fsubs
cmc
push
lock
insl
fucom
pop
xchg
mov
xchg
cwtl
sub
sub
in
mov
daa
outsl
int
sub
push
mov
push
adc
xor
xchg
popl
cmp
fldcw
mov
dec
fidivs
popa
dec
pop
int
sbb
mov
not
push
lcall
shlb
lods
xchg
es
icebp
and
xchg
loop
cmp
sub
push
enter
mov
mov
insb
mov
dec
push
or
insl
inc
fstl
dec
pushf
vmovntpd
mov
push
sbbl
mov
cmpsb
xlat
sub
addr16
out
xlat
lea
inc
cmpsl
pop
jb
hlt
popf
iret
enter
imul
mov
mov
pop
jne
imul
ja
es
ror
jmp
adc
in
fisubrs
idivb
jbe
mov
cmp
cmpsb
mov
mov
push
push
andps
add
or
mov
mov
sub
cld
insb
hlt
fs
aas
or
mov
or
flds
dec
jmp
stos
mov
jne
xchg
jno
push
add
in
std
dec
mov
aad
inc
in
xor
test
push
aad
das
push
imul
xchg
mov
dec
adc
into
xor
movsl
xchg
inc
mov
ja
aam
stos
pop
das
arpl
out
ret
xchg
out
cmp
dec
jne
shll
jns
cmpsb
push
and
xchg
loope
fwait
jae
cmp
test
mov
inc
cmpb
jb
cmp
inc
fsubl
inc
lcall
mov
jo
xchg
addr16
inc
add
pop
pusha
inc
jecxz
xchg
nop
push
scas
jg
mov
hlt
sub
testl
lods
imul
push
or
test
cmc
js
pusha
es
jg
les
xor
or
or
loope
int
sub
mov
addr16
add
dec
xchg
das
mov
push
or
sbb
inc
jmp
mov
idiv
push
inc
cmp
repz
xor
mov
xchg
mov
pop
stc
and
in
sbb
lret
insb
addr16
xchg
pop
repnz
out
or
ja
sahf
inc
outsb
mov
push
inc
mov
or
insb
stos
push
jns
in
dec
outsl
out
mov
stos
jmp
and
imul
cmpsb
les
loope
in
xchg
pop
cltd
sahf
js
mov
xchg
hlt
fnsave
ror
out
and
notl
cli
jle
and
cmp
jecxz
hlt
test
inc
pop
hlt
into
cmp
mov
ja
pop
imul
cmpb
cmp
add
nop
add
mov
repz
clc
cmpsl
stc
ret
inc
push
insl
sub
sub
sub
test
dec
loopne
xor
shll
mov
sbb
xchg
fcmovnu
sub
xor
lahf
and
lds
jmp
cmp
sub
mov
das
int
inc
lds
movsb
outsb
ror
xchg
mov
outsb
clc
pop
in
sub
popf
mov
mov
pop
popa
push
jle
lock
xlat
push
or
push
stc
lret
and
pop
adc
imul
cwtl
pop
lods
xchg
sbb
jl
lods
push
popa
cli
dec
std
inc
pop
hlt
add
or
in
cld
popf
mov
cmp
call
jmp
or
push
mov
jle
sar
jmp
ss
cmc
adcl
sub
adcb
es
mov
test
sbb
cmp
in
add
ja
icebp
xor
add
cmpsb
lds
mov
adc
sbb
js
mov
push
pop
sub
push
cld
xor
mov
rclb
jp
or
imul
xor
es
lods
mov
repz
out
repnz
shr
dec
sub
outsl
xchg
stc
sub
cld
and
mov
push
xor
loope
cwtl
jns
or
insb
imul
sbb
mov
rcll
mov
sub
int
push
test
loop
fcoml
mull
insl
fsubr
icebp
cmp
pop
xchg
arpl
mov
jns
mov
mov
subl
mov
out
jecxz
push
add
add
pop
outsl
fmuls
and
cwtl
add
cli
adcb
test
gs
mov
popf
sub
out
rolb
push
movsl
push
repnz
sbb
sub
test
das
test
add
pop
les
inc
lea
into
jae
jb
sub
sbb
cmp
sub
xchg
ds
fld
and
mov
lock
add
and
addr16
push
stos
fstpl
pusha
dec
cli
xlat
jbe
jp
lret
xor
ret
add
lods
push
icebp
pop
xchg
daa
xchg
orb
jne
gs
xor
dec
adc
or
xchg
int3
jbe
xchg
inc
mov
in
cmpsb
jecxz
clc
idivl
sti
cld
push
inc
push
fimuls
pop
jne
push
mov
and
mov
lea
leave
je
cmp
jae
das
out
adc
stos
jno
jp
rep
insb
sbbl
imul
sbb
out
add
outsl
in
lods
fdivrp
lret
jp
mov
test
inc
lret
call
or
mov
test
cwtl
jmp
jecxz
inc
and
lcall
ret
int3
popf
jbe
les
xor
imul
shll
jg
xchg
jecxz
stos
mov
cmp
sbb
adc
jns
push
pop
mov
mov
dec
jno
in
int3
sub
add
mov
test
nop
sub
lods
push
outsl
or
dec
das
sub
shll
aad
popa
shlb
xchg
jae
movaps
sub
movsb
clc
mov
dec
and
inc
mov
pushf
cmc
cmp
movsl
and
dec
mov
pop
test
mov
cli
pushw
mov
xchg
jns
xchg
adcb
clc
pop
dec
sub
aaa
dec
xor
jg
sbb
aam
insb
cli
or
popf
pop
rorb
jno
inc
xchg
cmp
andb
cmp
sti
sub
dec
mov
das
in
xchg
fs
add
mov
push
xchg
loope
aad
cmp
inc
pop
lods
arpl
jb
xor
push
ficoms
sub
dec
sub
xchg
loopne
loop
scas
mov
or
les
test
xlat
sub
mov
xlat
mov
jbe
mov
push
jne
jo
push
or
repnz
aas
sahf
jae
mov
dec
fcmovnb
int
inc
sti
dec
add
into
leave
jo
jb
xchg
dec
pop
mov
in
mov
mov
add
scas
push
add
jnp
popf
lret
lcall
fisttpll
jmp
icebp
sbb
cmp
movsb
inc
pop
or
pusha
mov
sti
das
jmp
and
sarb
xor
imul
mov
mov
fldl
push
mov
or
sub
mov
or
out
sub
push
push
roll
mov
xchg
lock
jbe
pushl
pop
fs
pop
test
fdivrl
das
dec
cmp
push
dec
adc
mov
mov
mov
or
and
in
rcrb
or
jge
icebp
outsb
pop
fs
cld
es
lret
loop
jns
mov
dec
mov
pop
add
in
xor
push
pop
add
sti
leave
jmp
in
std
jno
neg
xchg
or
adc
test
mov
xor
ret
sub
addr16
push
mov
insb
adcb
in
mov
cmpsb
daa
xor
aas
add
sbb
and
movsb
iret
insl
push
sub
inc
mov
cwtl
cmp
mov
xchg
test
repnz
jl
movsb
mov
cmp
pop
mov
xor
pop
data16
lods
pop
jle
js
pop
and
cmp
push
jg
imul
jbe
scas
aaa
pop
jno
rclb
int3
ss
js
stc
and
add
sti
jg
push
pop
stos
push
or
pop
push
adc
xchg
aas
cltd
icebp
shrl
push
mov
leave
test
sub
mov
jb
cmp
xlat
dec
shlb
sbb
test
xchg
inc
js
sub
sahf
cmc
add
outsb
mov
pop
or
aas
push
add
test
xchg
jo
dec
mov
pop
jp
addr16
pop
xor
mov
jb
and
std
shr
ja
cmpl
pusha
and
xchg
dec
dec
jecxz
adcb
fcmovnu
sti
dec
xchg
push
je
and
mov
add
imul
add
jge
int
inc
xor
cmp
and
inc
enter
mov
out
xor
stos
sub
mov
xchg
in
in
popf
push
fisubs
or
fsubs
push
lret
test
daa
xchg
inc
je
cmp
mov
lods
insl
pushf
mov
jmp
push
dec
std
fildll
xchg
lock
adc
push
lahf
jns
cmp
sarl
xor
mov
orl
out
mov
aas
mov
lret
out
xchg
pop
ljmp
xchg
jecxz
int
jns
mov
mov
das
inc
outsb
dec
mov
andb
sarb
bound
lods
movsl
pop
xchg
outsl
loopne
sti
inc
dec
push
cmp
sbb
jnp
aad
inc
and
and
bound
xor
inc
mov
xor
loopne
call
push
int
xlat
sub
and
mov
movsl
hlt
pop
roll
lea
push
pushf
mov
dec
jecxz
mov
shll
mov
pop
sub
out
mov
jns
xchg
sub
roll
nop
jecxz
dec
movsb
xor
int
adc
aam
sbb
xchg
xor
sahf
mov
mov
mov
xchg
add
fisttps
scas
cmp
dec
xlat
ficoms
push
cli
in
ss
cmp
cmpb
lods
and
insl
mov
call
sbb
jnp
sbb
push
imul
loope
leave
sbb
les
mov
sub
and
adc
shl
mov
out
jns
mov
xchg
mov
aad
xor
ffree
pop
rolb
jb
jge
add
adcb
out
lret
test
jo
pop
movsb
or
or
mov
dec
jge
and
sarb
pop
popf
pop
inc
dec
jo
jb
xor
dec
pop
addr16
or
test
mov
adc
cli
call
stos
xchg
imul
call
mov
cmp
cltd
xchg
push
test
xchg
out
mov
and
fstl
aam
ja
or
dec
cmc
mov
push
ret
xor
xor
loope
pop
scas
dec
push
mov
pop
sbb
push
cmp
ret
pop
inc
and
repz
inc
mov
test
andb
sbb
shlb
mov
fistpll
pop
negl
repnz
add
xchg
ficomps
rcl
cs
mov
lds
test
cld
dec
stos
or
inc
push
flds
fisttpll
jl
mov
jp
add
jl
test
cli
push
rcl
pop
xchg
mov
inc
mov
mov
leave
jg
in
mov
in
mov
add
pop
adc
mov
fisubrs
je
pop
cmp
xchg
jmp
notl
in
insb
out
test
pop
cmc
cmp
fimull
and
jmp
inc
js
ds
inc
mov
rorb
mov
mov
push
mov
or
icebp
cmpsl
inc
sarl
outsl
push
outsb
sub
iret
add
out
bnd
test
das
in
pop
iret
mov
xor
and
and
iret
aad
addr16
xchg
push
and
adc
or
int3
cwtl
arpl
inc
fistpll
jno
ficoms
cltd
sub
std
sbb
hlt
lea
loopne
in
jmp
pop
cmp
jecxz
pop
mov
testl
xchg
push
enter
fcoms
aam
pop
lcall
arpl
mov
adc
rcrl
scas
jno
sbb
mov
pop
cmp
or
std
orps
jmp
xchg
adc
insb
pushf
into
lret
and
mov
sahf
loope
test
or
xchg
iret
ds
aas
mov
in
adcb
ret
jp
lahf
xchg
insl
cmp
mov
mov
lcall
sbbl
jne
ficoml
sbb
push
out
sub
ficomps
xchg
push
ljmp
int
int3
dec
loope
lock
ss
or
inc
xor
test
xor
iret
mov
cmc
add
pop
xor
sbbb
cs
mov
inc
mov
push
cmp
pusha
mov
dec
xchg
or
andb
sub
test
lahf
mov
mov
mov
mov
clc
sar
popf
dec
sbb
test
cmp
mov
add
loope
pusha
shll
ret
out
js
enter
inc
out
mov
sub
add
ja
mov
mov
fiaddl
xchg
sti
jg
add
xor
out
xchg
xchg
test
jmp
test
push
inc
popf
and
fildll
push
mov
mov
sbb
in
scas
add
repnz
dec
bound
jle
inc
mov
pop
test
scas
jge
nop
pop
and
loope
in
inc
xchg
fs
and
out
sbb
rcrb
inc
lods
pmulhuw
add
xor
cmp
test
pop
ja
cmpsl
and
into
xor
adc
jge
pop
jp
popa
imulb
movsl
adc
out
inc
inc
lods
imul
decb
mov
push
adc
pop
xchg
or
cmpsl
pop
mov
dec
cwtl
xor
pushf
leave
xchg
scas
add
dec
fildll
jge
inc
insb
and
pusha
and
mov
dec
and
mov
dec
cmp
sub
mov
loope
repnz
popa
mov
arpl
mov
push
je
out
stos
cltd
fbstp
ret
aad
jl
rclb
ljmp
jl
mov
shrl
outsb
into
outsb
sahf
jg
fcompl
xchg
pop
xor
jns
mov
xchg
lret
pop
bound
pop
pop
dec
out
push
xchg
xor
test
cmp
and
sbb
psrlw
pop
push
pop
iret
mov
movsl
jnp
jp
push
mov
push
pop
xor
dec
les
cmp
sub
or
sti
push
and
out
pushf
adc
js
xlat
mov
or
lahf
add
mov
push
mov
hlt
adc
je
jl
and
adc
xor
add
xchg
xchg
ret
jno
ret
lahf
xor
adc
or
test
add
aas
fwait
add
cmp
in
stos
push
cli
pop
and
mov
sbbl
outsb
or
fists
aad
xor
popa
add
movsl
cld
sbb
mov
leave
aas
out
cmp
pop
cmp
daa
mov
sbb
sub
mov
fldt
inc
sub
dec
and
add
int3
adc
pop
jl
aas
inc
xchg
cmc
mov
adc
stos
pop
imul
adc
icebp
cmp
xor
and
arpl
sub
in
addl
pop
inc
xor
jbe,pn
enter
mov
lcall
xor
arpl
push
js
xchg
dec
gs
aaa
push
call
enter
and
mov
imul
adc
stc
cwtl
in
or
stc
int3
pop
xor
dec
dec
out
test
movsl
mov
in
xor
nop
or
aas
ret
lcall
int3
shlb
sub
xchg
mov
sub
clc
xor
and
in
pop
mov
sbb
das
jle
fdiv
jne
add
in
inc
pop
mov
inc
xor
pop
mov
into
cltd
pusha
lods
sub
cs
pop
cltd
sahf
dec
push
inc
lock
jb
xchg
leave
cli
add
xchg
sbb
aas
push
sbb
mov
xchg
push
pop
xchg
mov
mov
push
outsl
mov
jo
adc
stos
or
pop
enter
jbe
dec
shl
xchg
mov
pushf
in
outsb
scas
adc
jmp
dec
push
inc
js
out
push
out
xlat
mov
mov
cwtl
and
push
std
jmp
fsts
and
jg
mov
or
insl
pop
lds
loopne
rcrl
mov
loopne
pusha
aad
scas
lret
jne
cld
xchg
fldl2e
push
inc
cmp
mov
jb
lahf
clc
in
rclb
inc
mov
mov
mov
fsubrl
lods
flds
outsb
sub
sub
fisttpl
loopne
push
push
or
dec
das
std
pop
cwtl
cmc
cmp
push
mov
and
cmpsb
out
xor
dec
test
lds
jno
cmp
mov
pop
icebp
loopne
sbb
mov
cwtl
adc
fists
sub
pusha
aad
test
loope
stos
xchg
aas
int
xchg
mov
cmp
jg
mov
sub
fwait
aad
mov
sbb
push
aam
and
jge
out
sbb
sahf
test
inc
fimull
scas
sub
pop
sub
out
sahf
movsb
mov
cmp
sti
inc
movl
pushf
ror
mov
fwait
jecxz
lock
das
arpl
sahf
mov
cmpl
outsl
cmpsb
mov
fdivrp
out
sub
pop
inc
and
cmp
pop
jnp
enter
inc
push
sub
xchg
mov
or
shlb
pusha
cmpsb
add
cwtl
pop
jecxz
fwait
cmp
lret
test
mov
pop
mov
or
mov
pop
dec
mov
hlt
scas
addr16
shlb
push
xor
dec
sub
icebp
xor
stos
test
xchg
repnz
cmp
push
mov
mov
clc
pop
cmc
mov
addr16
shrl
rcrl
mov
fists
inc
add
notb
gs
jae
rcrl
mov
enter
add
mov
shll
hlt
es
aaa
mov
or
movsl
outsl
pusha
xor
loope
clc
add
lret
cmp
dec
sti
loop
jns
xchg
xchg
xchg
mov
scas
dec
cmc
pop
test
xchg
jl
movsl
pusha
shrb
push
subb
adc
push
xchg
xor
rol
negb
mov
sbb
mov
subb
in
popf
outsb
jo
popf
adc
fnstcw
stos
kmovw
mov
movsl
push
pop
loop
pushf
mov
fiadds
xor
leave
in
incl
imull
cmpsb
scas
dec
in
mov
lods
inc
adc
addr16
fisubl
sub
xor
cmp
es
sub
xchg
xor
mov
ss
xchg
pop
push
test
xor
inc
xchg
frstor
add
add
push
pop
jb
lea
int
add
js
and
lcall
mov
fisttpl
and
add
or
jbe,pt
or
jg
and
xlat
outsl
jns
jno
test
dec
shll
xlat
dec
jecxz
mov
pop
aad
inc
andl
jae
sbb
mov
pop
and
lahf
jne
sarl
out
ret
in
icebp
xchg
push
xor
loopne
push
std
fmulp
pop
or
cmp
mov
mov
mov
jle
adc
lods
xchg
cwtl
mov
fs
sbb
aad
xor
mov
push
push
fwait
shrl
movsb
movsl
gs
iret
sbb
into
or
das
jnp
ja
fwait
les
xlat
adc
loopne
sti
jne
mov
push
in
int
mov
add
adc
xchg
dec
or
adc
jae
jne
mov
das
into
insl
ja
push
push
and
test
push
pop
jl
inc
out
clc
mov
mov
pop
icebp
cmp
xor
mov
adc
lds
cwtl
cwtl
jmp
shrl
test
inc
aam
or
xor
gs
adc
nop
inc
cmpsl
scas
or
xchg
or
xor
mov
mov
inc
adc
fwait
pop
enter
sbb
cmpsb
ror
hlt
mov
inc
mov
rclb
adc
dec
jl
and
cmp
out
sbb
push
inc
push
cmp
mov
shlb
sti
xor
add
leave
jb,pn
cltd
xor
fistps
into
and
fists
inc
jge
cmp
inc
mov
jno
xor
je
imul
iret
sub
test
push
push
dec
pushf
add
stos
jmp
lock
les
jae
sbb
add
and
fcomps
fdivs
mov
inc
sbb
sbb
adc
cmp
int
mov
adc
shl
icebp
jns
mov
dec
or
sub
ds
or
push
loop
adc
mov
je
int3
mov
add
arpl
mov
add
jne
stc
cmp
aaa
push
cltd
std
aas
sub
fwait
sahf
xor
pop
ljmp
das
sub
out
arpl
aam
cmp
jb
xchg
jno
jno
sahf
xchg
dec
push
cs
pop
xor
xchg
mov
gs
mov
adc
in
xor
cmpsb
push
iret
nop
mov
ja
cld
add
pushf
fwait
arpl
xor
test
aam
cmpsl
sbb
stos
push
mov
pop
dec
es
ss
xchg
mov
or
sub
test
jns
popf
mov
in
add
sbb
loope
je
orb
movsl
adc
out
out
rorl
loope
call
lret
enter
test
dec
and
xor
cmp
and
pop
adc
cmpsl
pop
outsl
pop
adc
gs
jp
mov
popf
lcall
test
inc
cmp
arpl
sbb
push
out
xchg
mov
int3
out
pop
pushf
jae
push
cmp
mov
cmp
les
cmp
mov
cmc
jg
add
xchg
jne
push
in
dec
mov
pop
add
cmp
xor
shrb
jb
and
push
sbb
xor
call
pushf
movsl
cmp
roll
pop
jmp
nop
add
test
mov
jo
roll
dec
adc
popa
add
je
sbb
mov
xor
or
sbb
pop
mov
sahf
in
add
ret
push
stc
jecxz
and
push
das
loop
push
sbb
or
fiaddl
addr16
pop
leave
sbb
hlt
jae
mov
sbb
lahf
sub
add
rol
sbb
xchg
add
mov
and
cwtl
add
cmp
fld
andb
call
leave
loopne
cmp
orl
pop
sbb
lock
or
mov
clc
inc
xchg
mov
imul
and
sbbl
pop
lock
adc
into
loop
das
adc
mov
mov
sub
jl
xor
cli
dec
rclb
push
jge
push
dec
inc
mov
sahf
push
rcl
in
xlat
loop
lock
ds
jg
cmpsl
scas
fldt
leave
push
int
jg
jge
xor
pop
lcall
imul
and
lret
add
fs
outsb
in
rorl
jle
fldl
shlb
mov
adc
push
mov
xorl
es
and
mov
push
jno
xor
stos
pop
cmp
xchg
sbb
pop
xor
xchg
jle
xchg
mov
loop
or
and
jae
mov
jb
sarb
into
mov
xor
push
ret
pop
sbb
int3
ds
movsl
sub
cmp
or
pop
mov
rolb
push
adc
adc
jle
or
rorl
shrl
jbe
xor
out
ljmp
xadd
xor
xor
push
js
mov
xor
jge
xchg
and
test
fcoms
ret
mov
adc
push
push
rdpmc
and
jnp
mov
je
sbb
mov
out
mov
xor
les
add
jecxz
test
cltd
push
sbb
jg
mov
inc
imul
lods
push
push
std
mov
adc
outsb
add
call
jecxz
cmp
aam
in
push
std
iret
stos
inc
gs
or
pop
mov
xchg
and
mov
scas
insb
rcrb
sti
sti
sub
outsb
xor
sbb
scas
dec
push
push
imul
loop
fnstsw
mov
mov
test
jbe
out
mov
fsub
decl
ret
inc
mov
push
or
add
dec
in
out
adc
xor
out
lret
fidivs
pop
dec
xchg
test
pop
addr16
dec
mov
sbb
add
aad
lea
or
sub
dec
or
jecxz
sub
xor
jge
jmp
xchg
in
iret
cmpsb
sub
mov
mov
dec
mov
push
loope,pn
add
test
mov
popa
xor
sub
cld
in
jecxz
leave
xlat
bound
mov
nop
ds
pop
jbe
jge
es
test
in
sahf
xchg
pop
daa
in
inc
or
loop
mov
fwait
in
jo
mov
sahf
sub
pop
jns
js
xchg
push
push
lock
data16
mov
push
xchg
hlt
xor
rcr
inc
sub
xchg
dec
jbe
adcl
push
movsb
daa
in
dec
popf
mov
enter
stos
fadd
clc
or
ss
dec
xchg
sarl
repnz
scas
rol
mov
mov
fcmove
mov
mov
sbb
push
arpl
xor
fldt
cmp
dec
inc
mov
mov
mov
lret
repz
test
mov
rol
bound
push
xorl
stc
xor
push
sub
in
xchg
ret
test
adc
test
or
dec
hlt
push
cld
data16
mov
and
popf
mull
mov
daa
mov
addl
xchg
sahf
aas
adc
mov
sub
imul
xor
movsl
xchg
subb
push
pop
shlb
adc
sbb
fnstenv
jne
xchg
jge
dec
mov
mov
call
popf
push
mov
orl
orb
fsubrl
pop
addl
arpl
daa
ror
lahf
sub
gs
adc
jb
scas
scas
jae
push
push
in
call
xor
add
inc
in
sbb
stc
cld
les
repz
outsl
movsl
sub
xor
jp
roll
adc
shll
ljmp
jbe
test
out
pusha
dec
dec
ffreep
mov
leave
cwtl
sub
imull
push
nop
test
add
jae
sub
lods
int
scas
sub
and
pop
dec
adc
stc
mov
ds
sbb
and
push
jp
sub
sbb
mov
adc
and
and
lods
nop
or
adc
add
adc
push
cmp
mov
inc
sbb
lds
daa
or
rcrb
inc
test
aas
pop
mov
loopne
sub
mov
test
ljmp
sub
dec
clc
test
jns
int3
shl
mov
jne
lret
mov
lds
imul
mov
jo
jnp
ficoms
mov
pop
lock
cmpb
inc
das
addr16
rorb
dec
mov
cmp
jns
cli
and
sar
add
movsl
movsb
adc
aam
push
int
lods
sbb
xchg
lahf
repnz
sub
fiaddl
mov
cltd
jmp
movsl
lods
jg
jle
mov
imul
push
mov
sub
int
sahf
lea
mov
adc
bound
outsb
out
pop
or
or
dec
lahf
jmp
outsl
dec
daa
aam
fucom
and
push
cmpsb
or
in
fildll
xchg
sub
or
and
dec
notb
out
imul
pop
es
mov
scas
sub
call
lcall
xchg
imul
lahf
and
fwait
sbbb
and
jl
jl
bound
mov
cwtl
jl
in
mov
dec
orb
js
sbb
out
cmc
xor
in
dec
mov
dec
xchg
mov
adc
call
mov
xlat
jae
sbb
aaa
pusha
jo
testb
xchg
sbb
das
out
lods
pushf
loop
mov
or
push
cld
shr
fdivl
sahf
lcall
pop
out
or
movsl
addr16
jmp
sbb
in
dec
repz
ss
xchg
imul
push
mov
daa
sbb
fs
popf
push
mov
jae
mov
pop
les
pop
or
cmpsl
xor
mov
cmp
imulb
rorb
add
dec
push
xchg
inc
and
sbbl
inc
mov
scas
xor
xlat
ss
add
ret
sub
xchg
mov
xchg
push
ds
or
loop
mov
dec
add
es
shrb
fcmovne
ds
cltd
pop
stos
clc
loopne
cmp
lods
cmpsb
inc
in
fisttps
pop
push
outsb
js
xchg
dec
movsb
loopne
and
subl
cmc
cld
popf
flds
dec
jno
icebp
dec
out
cld
scas
xchg
xchg
push
sbb
call
inc
push
pop
mov
test
and
add
imul
dec
and
fwait
repz
xor
mov
mov
push
lcall
adcl
mov
pop
pop
cmp
inc
xchg
jmp
test
call
xor
xchg
les
arpl
xchg
mov
lods
mov
mov
test
pop
adc
icebp
in
and
or
pusha
in
jl
pop
cwtl
sub
inc
subb
pop
inc
dec
sahf
inc
dec
popf
es
out
dec
addr16
in
push
scas
push
and
push
stos
test
xor
ror
fisubs
pusha
cmp
and
popf
xchg
mov
data16
int3
aaa
subb
jnp
pop
xor
adc
inc
mov
adc
cmp
pop
jg
inc
cmpsb
xchg
push
lret
cmp
scas
add
aam
pusha
and
add
fstpl
and
add
dec
mov
jmp
cmpb
add
xchg
in
sbb
inc
fs
xor
mov
loopne
rcr
roll
sti
or
and
pop
cmpsb
stc
imul
adc
xchg
add
in
rep
sbb
scas
xor
adc
lods
mov
sahf
or
xchg
jp
sti
shl
loopne
sub
sub
es
in
mov
push
scas
loop
jecxz
fwait
dec
inc
mov
push
cmp
dec
movsl
add
out
daa
lock
mov
jo
push
repnz
shlb
lret
cmp
popa
faddl
sub
inc
mov
jno
int
mov
xchg
pusha
jle
bound
notl
mov
daa
push
into
sub
cmp
sahf
mov
jg
xor
test
jmp
mov
lea
mov
pop
movups
push
rep
push
movsb
inc
aaa
into
out
adc
vpackusdw
pop
fcomp
mov
das
enter
clc
xchg
lds
int
rcll
cld
or
int3
movsb
cmp
ds
enter
jns
repz
pop
pop
aaa
xchg
push
popa
out
repz
mov
sbb
subb
sbb
or
mov
inc
jp
cmpsb
push
push
jle
data16
ljmp
mov
movsl
dec
out
add
and
sub
pop
dec
stos
add
mulb
xchg
or
pop
movsl
vmovsd
ret
xchg
inc
push
cmp
mov
lds
ljmp
lods
adc
mov
add
decb
xor
cmp
int3
adc
push
or
ss
out
pushf
adcb
cmp
fisttpl
imul
lock
mov
xchg
jnp
push
aas
mov
addb
jno
jg
mov
lds
aam
lea
lcall
inc
xor
adc
lret
lcall
mov
push
out
pop
xor
jbe
lea
sti
lahf
jge
cmc
insl
fidivrs
mov
pop
cmp
add
add
in
adc
jns
fcmovnb
jmp
add
xlat
sbb
cmp
xchg
ret
outsb
jmp
popl
lcall
out
mov
push
leave
mov
fistl
stos
push
daa
cltd
xchg
inc
call
repz
incl
adc
dec
sbb
shrb
mov
outsl
sbb
dec
imul
mov
jo
std
stos
xchg
or
pop
jge
mov
jno
push
cmp
xor
inc
outsb
mov
push
mov
lds
out
or
xchg
imul
icebp
sti
mov
sbb
mov
cmp
mov
pop
or
sbbb
pusha
jmp
push
cmp
mov
jo
test
jecxz
sbb
mov
rcrl
nop
popl
inc
pusha
test
and
ja
enter
loopne
out
es
mov
adc
sub
and
lods
ljmp
jns
push
xchg
bnd
jecxz
data16
cmpsl
js
loop
loope
call
loopne
int
add
insb
stos
xchg
push
sti
and
jne
mov
adc
dec
insb
pusha
xor
int
stos
es
cmpsl
insl
sub
not
std
repnz
sbb
push
repnz
push
stc
fidivrs
sti
outsl
push
std
mov
mov
sub
popf
xchg
lds
lahf
mov
adc
push
out
mov
lcall
and
out
push
repnz
mov
fnstcw
push
pop
daa
mov
enter
mov
inc
adc
adc
enter
mov
fsubs
adc
mov
push
and
adc
clc
xchg
out
xor
sub
hlt
jecxz
mov
or
adc
jmp
addl
cmpsb
mov
idiv
rcr
in
sub
mov
addl
lods
ret
pop
ss
xor
and
push
mov
xor
aam
adc
fiadds
dec
je
pop
faddl
inc
repnz
repz
and
push
cltd
push
inc
insb
pop
fs
push
rol
repz
or
pop
stc
jne
scas
inc
push
fldt
mov
stc
rol
mov
pop
dec
xor
inc
lock
jp
or
sbb
loopne
aaa
outsl
bound
jo
and
pop
punpckhwd
ret
jae
mov
xchg
inc
mov
mov
inc
inc
xchg
nop
and
inc
xor
inc
xchg
pop
mov
add
bound
mov
ret
sbb
add
cmp
sub
or
int
dec
std
mov
push
mov
mov
jns
lea
outsb
loope
pop
sbb
lahf
stc
mov
mov
mov
mov
push
inc
pop
push
stc
or
pop
xchg
pop
pop
lock
aaa
movsb
adcb
xor
andl
scas
ss
mov
lods
jo
shlb
sbb
mov
cmp
shr
loope
mov
lods
in
test
out
xlat
shl
jno
dec
imul
push
fcmovnu
dec
cmpsl
sbb
xchg
popa
ja
mov
adc
and
sub
pop
mov
stc
popa
ret
lock
cmp
push
dec
and
xor
push
in
or
xchg
sub
xchg
scas
cltd
sbb
cmpsb
pusha
lret
sub
test
andb
push
dec
add
push
stos
sbb
shlb
loop
add
je
jecxz
cmp
loopne
scas
subl
mov
cwtl
push
add
mov
push
jmp
rcll
pop
daa
jmp
sbb
add
mov
fistl
mov
clc
scas
or
aas
iret
push
jae
xchg
getsec
ljmp
push
or
xor
jmp
xchg
rclb
test
sbb
mov
cmp
jno
adc
sbb
sub
sub
mov
sbb
enter
lret
leave
imul
mov
sub
mov
mov
out
or
ljmp
loopne
aam
into
dec
ja
cmp
aaa
and
cwtl
push
nop
lea
jne
push
test
cltd
shlb
inc
ficoml
pushf
js
xor
jg
stos
adc
and
nop
hlt
dec
out
jge
imul
sub
scas
ja
ljmp
xor
enter
xor
clc
jo
fcmovnu
adc
jmp
adc
inc
pop
out
pop
lret
lea
push
mov
xor
std
push
cmp
xor
cwtl
jl
lcall
sub
mov
and
or
int
aad
clc
inc
xchg
xchg
mov
popf
call
xchg
sbb
movsl
xchg
cmp
out
bound
aas
out
push
mov
ljmp
cmp
loop
mov
clc
mov
rolb
test
fwait
insb
cmc
test
jb
cmp
xchg
repz
add
xor
arpl
sti
xchg
inc
scas
cld
mov
or
scas
int3
dec
jne
pop
jmp
cwtl
les
and
mov
pop
ffreep
test
dec
inc
popa
sbb
out
add
cmpl
inc
insb
sub
dec
push
mov
cmpsb
mov
xor
aam
jmp
and
movsb
add
xor
adc
dec
mov
xor
and
lahf
call
jg
emms
cs
jnp
lods
ss
or
popf
fisubs
jl
ret
fdivs
inc
movsl
add
mov
das
cmc
jecxz
pop
jnp
jo
xor
cmpsb
ljmp
xor
fimull
xchg
or
mov
mov
enter
sbb
dec
jecxz
mov
dec
pop
inc
pop
jno
nop
mov
addr16
cmp
arpl
adc
or
fs
fsubrs
stos
stos
leave
pop
jb
je
xlat
sti
outsl
popf
push
mov
sti
arpl
push
ja
test
in
pop
xor
ljmp
inc
sbb
pop
jecxz
pop
xchg
cmpsl
ret
sub
xchg
mov
mov
iret
aam
das
xor
int
cmp
sub
inc
sti
cltd
lret
adcb
das
test
dec
ja
in
mov
lea
aas
sub
push
xor
pusha
dec
ljmp
lcall
in
push
pushf
jp
pop
jg
dec
xor
popa
addr16
push
in
int3
loop
inc
aaa
sti
or
mov
lock
ds
sbb
movsb
push
push
mov
xchg
cli
ljmp
aaa
push
leave
sub
fisubs
sbb
push
and
call
pop
xor
or
mov
mov
int3
push
leave
xor
stos
dec
lods
inc
pop
mov
or
add
sub
pusha
add
adc
std
lahf
shll
iret
xchg
push
sahf
je
mov
mov
das
mov
sub
push
push
les
sub
sbb
out
sub
xlat
xchg
sub
testl
mov
scas
fstl
fsubrp
shlb
test
imul
xor
xor
jbe
push
cmpb
inc
and
cmpsb
xlat
hlt
stos
hlt
inc
dec
pop
add
lock
scas
bts
mov
cwtl
and
mov
gs
int
mov
push
push
in
mov
xor
cmpsl
mov
into
lret
xchg
inc
icebp
fs
mov
xchg
icebp
call
push
xor
xchg
mov
xchg
sbb
inc
dec
push
aaa
cmp
addr16
lret
and
mov
add
push
lret
mov
add
enter
inc
ret
push
or
out
fcom
jle
loopne
jmp
cs
push
sub
inc
dec
cmp
lods
add
xchg
mov
cmp
cmp
jl
mov
inc
and
pop
mov
aam
sbbb
xor
out
xchg
adc
pop
push
ljmp
cltd
ja
sub
dec
movsb
daa
push
outsb
cmpsb
in
adc
test
jg
rcll
sar
mov
andl
pop
xchg
sub
cmpb
xor
mov
mov
cmp
or
mov
mov
xchg
jne
add
pop
sar
aaa
dec
add
mov
inc
dec
cli
enter
orl
add
mov
stos
mov
sub
pop
inc
pop
xchg
dec
sub
fidivl
jmp
add
stc
stos
aaa
adc
dec
jae
popf
dec
and
aad
mov
pusha
clc
ss
in
push
push
mov
pop
mov
push
fstps
aaa
xor
ror
inc
out
mov
ss
loope
mov
sub
lock
lret
outsb
fimuls
and
jmp
xchg
and
jge
loop
sbb
jle
mov
insb
stc
pop
loopne
push
inc
shll
xor
imul
xchg
xor
xchg
enter
inc
ss
push
inc
push
or
lcall
add
mov
push
inc
adc
push
mov
roll
cwtl
pop
sub
or
adc
push
int
out
push
xor
and
das
loope
mov
add
fidivl
xchg
inc
xchg
stos
stos
adc
xor
push
or
sub
adc
inc
arpl
lock
lods
xchg
or
ja
fucomp
mov
stos
xchg
pop
push
out
clc
mov
sub
mov
fisubl
cmp
fldenv
xor
dec
popf
nop
or
pop
or
jl
aam
mov
fisttps
ffree
sbb
aas
daa
insl
and
rcll
aaa
adc
rorl
icebp
mov
adc
sbbl
dec
push
cmc
in
repnz
sahf
ret
xor
cmpsl
movsb
cld
sub
fwait
hlt
pushf
rorl
jbe
lods
rcrb
ja
xchg
cmp
push
test
repz
fwait
pop
lret
sbb
cwtl
ret
ja
adc
jns
dec
xor
mov
mov
dec
push
mov
mov
adc
dec
dec
jne
outsl
pop
and
fsubs
fidivs
clc
scas
lret
aam
adc
lods
call
fwait
push
gs
scas
sbb
and
leave
pop
xor
mov
push
hlt
rcrl
call
push
mov
data16
sub
stc
aas
das
out
pop
vcvtsd2ss
data16
les
shlb
push
popa
cmp
push
lock
das
lock
push
shll
test
sub
inc
insl
and
push
mov
mov
ja
mov
sub
in
dec
adc
les
in
dec
movsb
push
movsb
xchg
rcl
dec
addr16
arpl
push
pop
cld
loop
leave
push
xchg
push
jb
cmp
mov
inc
sub
dec
mov
mov
lret
or
call
cmp
out
xor
in
and
daa
je
mov
cmc
push
xchg
in
jo
lahf
cs
sub
pop
fisttpl
jno
psrlq
push
cmpsb
lods
mov
imull
pusha
lcall
lock
daa
dec
rclb
popf
adc
mov
jge
add
jl
pop
lret
push
jl
inc
cltd
aad
daa
fildll
jo
loop
or
dec
pop
xchg
cmp
push
movsb
mov
push
inc
inc
cmpsb
lods
test
mov
jae
mov
jb
aas
imul
jl
int
data16
add
xchg
pop
and
gs
xchg
movsl
loop
mov
loope
and
xor
cmp
pop
fimull
sbb
shr
cmp
ret
xor
mov
cmpsl
pop
dec
or
cmp
loop
dec
push
jle
inc
xor
jl
shrl
dec
inc
scas
sub
lock
xchg
add
xlat
xlat
rclb
test
push
dec
loope
inc
push
inc
mov
ljmp
mov
sub
xchg
add
stc
jb
xor
push
jmp
and
mov
imul
sti
lods
sbb
sbb
mov
mov
and
cltd
jo
stos
sahf
push
cmpsl
and
sbb
aaa
stos
mov
jbe
jno
out
vminpd
mov
loopne
fidivrl
pop
int
and
adc
push
inc
lahf
inc
mov
push
lds
jbe
dec
pop
mov
sub
pop
fistpll
sarl
mov
ret
jecxz
mov
and
cmpsb
mov
inc
cmpl
mov
adc
adc
pusha
adc
and
popa
add
cld
adc
popf
mov
xchg
in
xchg
clc
or
or
or
and
cmp
lods
les
popf
int
hlt
push
pushf
cld
repz
mov
repnz
das
aas
xchg
jbe
add
sub
ds
into
int3
mov
test
or
xchg
ds
data16
test
popa
xchg
cmp
cmp
xor
inc
imul
subb
inc
pop
inc
add
js
pop
mov
cltd
dec
stos
lahf
in
push
jle
fnsetpm(287
mov
leave
cmp
add
call
add
pop
sub
in
into
sub
out
xchg
test
in
pop
dec
jae
mov
int3
mov
mov
and
fs
adc
jae
mov
rcl
out
dec
dec
pop
stos
add
push
pop
lret
xchg
inc
insl
mov
mov
ret
leave
push
and
xlat
push
mov
push
dec
or
sub
out
and
xor
xlat
jg
push
adcl
mov
sub
dec
or
push
mov
sbbb
xchg
lea
pop
and
xchg
nop
sbb
mov
lds
fistl
cs
stos
es
pushf
pop
pushl
rorb
mov
sbb
pusha
adc
push
ds
dec
cmp
mov
sub
mov
push
adc
xchg
mov
clc
mov
inc
mov
pop
pop
notl
loopne
incl
out
jg
lock
mov
aaa
pusha
cmpl
pop
sbb
cmp
inc
xor
pop
gs
int3
xchg
mov
imul
dec
popa
xchg
xor
loope
out
and
stos
std
ljmp
shlb
mov
fwait
je
movsl
cli
add
dec
and
sbb
in
leave
mov
adc
jne
cmpsb
les
lahf
cmpsl
dec
and
mov
sub
shlb
gs
mov
xlat
outsb
inc
jae
xor
dec
sti
dec
cmp
scas
mov
dec
mov
faddp
jecxz
aaa
jo
mov
popa
enter
hlt
rorb
pop
mov
aad
dec
lcall
adc
insb
add
gs
leave
mov
push
ljmp
mov
mov
leave
jmp
adc
loop
or
std
inc
and
gs
sub
popf
xchg
frstor
jge
test
jmp
and
pop
or
sbb
scas
out
mov
mov
loop
mov
mov
inc
push
pushf
pop
enter
nop
pop
mov
adc
jmp
insl
vpsubsb
test
lahf
stos
pop
fists
inc
andl
dec
fcmovb
addb
inc
mov
nop
inc
xlat
xchg
stos
in
mov
mov
push
in
xor
jno
fldcw
rorb
cli
xchg
ud2
in
xor
mov
or
test
movsb
adc
push
pop
fiadds
adc
xchg
mov
push
mov
jnp
icebp
sbb
imul
add
dec
out
cld
cmp
mov
int
sub
repnz
inc
dec
imul
je
adc
aad
pop
pushf
ret
fnstenv
and
pop
inc
pusha
mov
mov
mov
mov
mov
adc
add
enter
cwtl
popa
data16
repnz
stos
rclb
jmp
outsl
add
in
aam
sbb
jnp
jne
js
mov
testl
or
xor
fildl
push
mov
sbb
std
insb
add
pusha
insl
jg
mov
das
jne
and
sub
mov
jge
xchg
pop
repnz
mov
mov
jb
push
jno
mov
test
cltd
sub
in
mov
dec
adc
mov
in
lds
bound
jnp
test
stos
loop
or
xor
xchg
icebp
mov
out
jle
lahf
mov
pop
dec
mov
subl
in
mov
lret
int
in
pop
pop
mov
adc
inc
mov
iret
pop
data16
std
imul
pushf
cmpsl
jbe
jnp
mov
jae
pop
dec
sub
jmp
pop
pop
add
pop
sbb
pop
mov
fimull
nop
cwtl
adc
lret
cs
xchg
addr16
lcall
pop
xor
pushf
repz
dec
scas
lahf
mov
xor
pop
pusha
xor
out
xchg
xor
sub
pop
xchg
dec
enter
loope
jp
clc
out
arpl
and
pop
lret
call
aad
jp
cmp
sub
push
enter
or
mov
ljmp
stos
pop
cmp
imul
js
inc
jnp
inc
ret
dec
xchg
out
jle
cmp
out
leave
aas
fstl
pop
rcl
pop
jnp
xor
mov
jns
je
sub
push
push
xor
lock
call
adc
dec
dec
outsb
jl
pop
and
lcall
sub
add
adc
addl
stos
outsl
call
dec
adc
cli
lods
jg
inc
add
stos
dec
in
sub
in
out
inc
lds
jge
stc
mov
mov
mov
not
mov
sahf
imul
cld
test
pop
test
divb
outsl
or
jmp
mov
xchg
test
test
sahf
cmp
imul
insb
fwait
scas
xchg
cmp
popa
mov
push
pop
lret
adc
les
les
jne
xor
cmp
icebp
push
movsb
stc
clc
adc
aas
into
rcrl
outsl
in
mov
jg
aaa
fadd
push
push
xchg
lret
lock
sbb
mov
mov
fwait
sbb
gs
insb
mov
addr16
les
dec
xor
loop
fs
mov
xor
sbb
pop
cli
mov
je
adc
or
pop
mov
or
stos
hlt
add
sub
scas
adc
add
pusha
or
sahf
xchg
and
push
sahf
arpl
pop
lret
push
cltd
add
mov
cli
xchg
mov
mov
mov
dec
loope
pop
test
or
rolb
add
and
les
adc
and
inc
imul
xor
jne
fbld
add
sub
cmp
sbb
mov
stos
or
into
mov
add
test
and
jle
fucom
sbb
xorl
and
and
or
jg
popa
jno
out
pop
jg
sbb
fdivl
shrl
aaa
testb
je
lock
stc
pop
sti
jmp
adc
cltd
pop
lret
fadds
jae
aad
lods
es
xor
fsubrs
loop
lods
sti
test
les
xchg
xchg
leave
mov
leave
testb
dec
popf
loopne
lret
pop
rcrl
jg
adc
add
pop
xchg
xorl
push
aad
jmp
inc
pop
jb
jmp
xor
adc
jle
mov
jo
lock
outsl
fs
aam
loope
sub
dec
out
fstl
xchg
inc
cmp
shll
adc
adc
inc
push
imul
jmp
xchg
xor
clc
into
inc
dec
loop
inc
or
inc
jl
loope
icebp
pop
loopne
adc
add
ljmp
and
test
aad
xchg
cwtl
mov
adc
sbb
inc
popa
arpl
in
mov
pop
gs
je
pop
dec
andb
aaa
les
add
stos
lods
sti
pop
rcr
sbb
fstpl
scas
dec
cmp
fstpt
cmp
test
mov
ret
lret
push
in
rcl
fmul
push
xchg
jle
into
pop
hlt
cmp
loopne
cli
lds
aam
dec
jae
jns
test
cmpsl
xchg
int
xchg
daa
loope
ret
mov
push
sbb
mov
ret
insl
fidivl
ljmp
mov
nop
inc
mov
mov
test
out
jne
int
pusha
xchg
daa
pop
fwait
push
pop
mov
pop
jle
add
sahf
test
cmpl
inc
pop
les
mov
xchg
push
ret
dec
jno
pop
push
mov
mov
add
nop
ret
xchg
je
outsl
xchg
xor
mov
inc
cli
sub
mov
xchg
aam
inc
je
sub
je
cmc
rol
inc
dec
daa
jp
push
mov
sub
aas
mov
mov
stc
lods
pop
popa
lods
pop
mov
and
inc
icebp
dec
xor
push
mov
insl
popf
mov
cmpsb
daa
push
xlat
adc
lret
lret
adc
bound
lods
pop
stos
movb
cmp
xchg
adc
fwait
lret
popf
cmpb
cmpsb
pop
cld
push
es
ret
add
stos
inc
sub
lods
mov
sub
daa
imul
jge
loop
push
pusha
pushf
cmpsl
xor
ljmp
mov
andl
cmp
fbstp
push
or
inc
fdivrs
cmp
cmp
ljmp
jge
ficoms
sti
je
sub
ss
inc
cmp
scas
push
enter
xor
pop
pop
inc
fwait
inc
mov
int
pop
fldl
cmp
xor
or
add
sarl
xor
mov
jp
popa
pop
shll
and
pop
call
mov
out
adc
stc
fidivs
std
and
sbb
cmp
pop
sar
iret
vmwrite
cmp
pop
jl
mov
in
cld
stos
loope
aam
nop
je
and
jnp
cmpsl
xchg
inc
in
aad
test
cmpsl
mov
xlat
push
mov
xchg
int
and
les
xor
pop
lcall
ds
push
add
orl
in
mov
movsb
negl
imulb
xlat
lds
dec
cltd
shlb
clc
pop
lret
test
cmp
inc
out
cltd
sbb
jns
fstps
fmul
daa
iret
push
xlat
ljmp
imul
cmp
cltd
imul
jno
loopne
jo
inc
adc
fsubrp
stos
push
xor
jp
sti
mov
push
orb
cmp
test
inc
cmp
cmp
int
xchg
xor
cmp
and
jae
xor
mov
test
mov
decb
dec
movsb
mov
mov
dec
arpl
aas
js
xchg
add
pop
sbb
or
xchg
insb
pop
stos
push
hlt
ja
int
insl
sbb
loop
fimull
mov
xchg
cmc
cmc
imul
rcll
or
jnp
sub
cmc
and
xchg
or
sub
shll
jmp
pop
mov
xchg
jne
jb
lret
dec
imul
jns
or
jbe
fwait
cmp
or
sbb
out
data16
sbb
iret
daa
cmpl
fucomip
dec
sub
push
sbb
inc
push
aam
lcall
pop
mov
cmpsl
in
ret
pop
push
adc
and
inc
pushf
pop
aad
imul
mov
jno
and
mov
push
dec
repnz
or
lds
inc
fwait
and
popa
mov
mov
out
call
stos
lods
bound
and
mov
lods
jmp
fists
jb
lahf
mov
jecxz
mov
adc
mov
mov
cmpsl
nop
mov
mov
dec
mov
dec
insb
insl
adc
pusha
push
shl
push
or
in
jmp
mov
int
add
xchg
stos
xor
adc
or
pushf
fwait
ds
and
arpl
lds
cmpsl
adc
rorb
push
mov
cli
and
ret
scas
mov
mov
fstpl
leave
xor
push
enter
pop
push
shr
stos
xor
or
pop
sti
push
dec
lahf
pop
repnz
mov
jle
rcrb
xchg
add
xor
adc
pusha
stos
jle
adc
shrb
adc
sahf
adc
mov
inc
cwtl
negb
ss
outsl
mov
loopne
cs
xor
lods
das
lret
pop
dec
ljmp
aam
insl
xchg
mov
test
popa
int
in
sbb
stos
rcrl
xor
clc
fnstcw
lret
and
shr
mov
jmp
xchg
pushf
shr
dec
cmp
jmp
dec
cmp
dec
mov
add
rclb
ret
lahf
add
inc
pop
jbe
in
jo
jecxz
cmc
adc
cmp
inc
int
testl
mov
aam
push
pop
stos
mov
in
mov
shl
jno
icebp
dec
testl
sub
push
push
iret
out
pushf
mov
inc
lods
scas
mov
mov
pop
out
shl
cmp
stos
lods
movsb
orl
imul
pop
pop
mov
adc
mov
jle
mov
mov
and
subl
push
and
sbb
or
shrl
fwait
cmp
and
insl
sbb
or
shrb
inc
jl
push
push
cmp
cmp
xchg
mov
push
fnstenv
xor
test
sar
cmp
inc
fs
aaa
hlt
fwait
jecxz
push
fdivs
sub
jo
push
push
jle
pop
out
test
popf
xchg
xchg
mov
xchg
push
xchg
and
lret
fs
sar
adc
sti
pop
and
dec
pop
xchg
pusha
pop
and
ds
mov
fwait
push
ret
push
imul
inc
mov
into
icebp
je
addr16
ret
inc
lahf
pop
push
adc
call
js
cmpsb
mov
mov
and
movsl
push
loope
xor
xchg
adc
cmc
xchg
push
insb
pop
pop
fst
push
std
pushf
mov
std
scas
stc
ret
jnp
push
adc
into
mov
push
cmp
mov
gs
addb
cltd
je
sbb
mov
inc
xor
adcl
js
int
ja
inc
fwait
pop
jl
dec
int3
aam
xlat
adc
scas
mov
int
repz
into
fcmovbe
test
les
or
push
adc
imull
and
pop
stc
je
rorb
push
xchg
jmp
loope
xchg
nop
add
dec
sub
xor
ljmp
push
outsl
cli
aaa
push
fnstcw
loop
cld
fldcw
push
aam
imul
push
adc
aas
adc
push
mov
cmp
and
loop
aaa
int3
stos
dec
mov
jnp
sub
dec
inc
flds
sbb
cmpsl
inc
sub
mov
dec
inc
pusha
and
jae
mov
pop
iret
icebp
adc
mov
sub
jbe
lret
xor
icebp
xchg
and
pop
pop
lret
je
mov
outsb
lret
stc
pop
std
mov
ret
add
adc
aam
test
push
xchg
call
test
mov
add
inc
xor
test
pusha
sub
es
imul
test
mov
mov
pop
cltd
jo
xchg
jae
sbb
inc
in
cltd
pop
cs
pop
les
ficoml
push
dec
loop
bound
xchg
sbb
mov
jmp
aaa
add
out
push
dec
cmp
jmp
ja
in
mov
mov
jp
add
cmpsb
dec
aad
xchg
xlat
mov
cmp
or
test
mov
xor
repnz
add
movl
stos
aam
sub
in
xorl
out
bnd
cs
psllq
fmuls
push
fs
adc
cld
pop
mov
je
push
dec
jb,pn
pop
outsb
repnz
loop
ja
andl
inc
jl
inc
into
mov
cmp
mov
adc
cwtl
adc
inc
leave
cld
fimull
adcb
sub
sbb
out
stos
pop
and
inc
clc
aad
enter
jne
xchg
pop
cmpsb
mov
sbb
jno
xchg
jno
gs
loop
pop
push
or
ret
sub
out
aam
cmp
loope
fs
sub
jge
fimull
and
call
nop
cmp
aaa
push
sub
ret
sbb
add
mov
add
lret
movb
aas
scas
jl
and
cmp
adc
pusha
mov
imul
and
stos
cmp
add
jmp
loop
out
adc
sub
imul
xchg
js
or
pop
fwait
cltd
adc
mov
std
push
push
jmp
scas
xor
cmp
push
test
mov
pop
lea
aam
jnp
sbb
sub
sub
jnp
dec
test
ud0
test
adc
fcoms
pusha
pop
add
mov
sbb
jno
mov
ds
cmc
mov
out
xor
dec
ja
repnz
in
lcall
mov
imul
mov
push
jno
mov
jp
push
fists
cli
fldt
pop
pop
and
imul
outsb
fsub
push
jnp
movl
lret
fcmovnu
mov
jnp
pusha
push
inc
rclb
cmpsl
dec
mov
ss
cltd
int
test
push
sbb
fwait
das
imul
scas
sbb
pop
jmp
mov
loopne
in
jae
insb
or
das
iret
inc
cltd
fsts
cli
push
in
fsts
sbb
ljmp
ljmp
xor
dec
aaa
xchg
jge
or
test
in
add
sbb
jle
push
add
test
xor
inc
cmp
lahf
gs
jecxz
mov
in
sbb
ds
jmp
cld
das
out
dec
push
gs
mov
xchg
push
test
lock
sub
jb
mov
sub
and
xlat
push
jne
movsb
add
popa
ja
daa
jb
push
add
mov
call
sub
or
xor
mov
adc
or
cmc
jge
xchg
and
inc
adc
pop
mov
fs
or
outsl
sbb
or
xchg
jnp
push
adc
cmpsb
cmp
mov
aas
bound
xchg
in
jnp
cmp
inc
icebp
lret
addr16
out
add
mov
cmp
jbe,pn
mov
dec
fnstenv
add
imul
mov
push
push
mov
mov
pop
iret
cmp
sbb
lahf
imull
pop
insb
lods
mov
and
mov
fadds
fdivrl
sahf
jae
xchg
xor
ljmp
fstpl
jp
jg
cmp
mov
inc
or
pop
fiadds
outsb
adc
icebp
sbb
pop
jmp
fld
jge
pop
fdivrl
enter
xchg
lds
test
cmp
gs
cli
aam
js
and
cmpsb
stos
movsb
or
ss
ret
push
das
scas
push
and
fisttps
scas
push
outsb
jecxz
test
into
loop
fisubl
jo
cmovb
push
popf
ret
adc
push
mov
push
xor
pushf
addl
fnstsw
movsl
icebp
popa
stos
std
stos
pop
ja
jno
xchg
cmp
pop
int
dec
push
mov
roll
aas
sbb
outsl
popf
scas
cmpsb
test
push
dec
leave
or
jl
adcb
pop
int
popa
mov
lret
mov
jne
ja
sub
or
outsb
jg
cli
mov
adc
and
js
jb
ja
pop
rclb
movsl
cmp
inc
sbb
hlt
adc
xchg
jl
lahf
add
mov
lods
call
adc
lret
cmp
pop
push
fsubrs
out
test
push
test
mov
inc
add
jmp
jmp
or
dec
mov
ljmp
cli
sub
jle
mov
in
loope
sbb
inc
popa
test
sbb
cmp
dec
out
insl
dec
mov
in
cmp
push
sbb
cmpsl
mov
outsb
add
xchg
addb
stc
fwait
daa
test
movsl
pop
mov
pop
dec
inc
lret
xchg
mov
mov
mov
stos
jae
push
xchg
add
mov
or
mov
ds
or
pop
or
pusha
add
xchg
dec
ss
ljmp
es
cmp
mov
stos
and
or
push
sahf
add
inc
test
and
in
in
aas
aaa
mov
insl
sar
scas
pop
inc
loop
sarb
add
pop
negl
stos
int3
fsubrl
jno
outsl
je
out
adc
out
fcomi
xchg
inc
or
hlt
cmp
pop
jne
hlt
mov
pop
push
dec
leave
mov
lcall
jae
mov
aam
push
mov
inc
bound
cmp
das
mov
mov
or
pop
arpl
imul
sti
xchg
adcb
sub
add
cltd
daa
xchg
test
mov
pop
sarl
shll
xor
call
adc
and
js
lock
stos
mov
mov
jge
test
daa
adc
shr
imul
shrb
testb
andl
out
xchg
cwtl
dec
aam
jmp
cld
pop
mov
pusha
dec
out
das
cmp
sub
stc
pop
inc
dec
imul
push
xchg
sahf
je
jne
sbb
clc
mov
in
mov
ret
testl
xor
loopne
push
sbb
sub
fdivrp
cmpsb
cmc
xchg
mov
lods
enter
adc
movsb
xor
pushf
mov
pushf
sbb
or
xchg
out
dec
fwait
xchg
lds
mov
sbb
sub
mov
jno
or
jne
les
out
jb
pop
jae
test
jl
in
and
push
jle
ret
mov
sbb
movsl
or
out
lock
fiadds
insl
pop
aam
aam
jno
inc
xor
cwtl
lret
cmpps
push
push
cwtl
mov
mov
enter
mov
inc
sub
xor
fisubs
cmpsb
dec
subl
in
out
cs
mov
mov
or
repz
aaa
pop
jle
mov
mov
fs
push
mov
mov
pusha
es
mov
cmp
xchg
fsubrl
xchg
insb
addr16
imul
pop
loopne
jo
out
jbe
sbb
cmp
dec
cli
xlat
mov
movsl
inc
push
pop
xor
jne
inc
pop
pop
pusha
sti
add
int3
popa
popf
push
xchg
jae
push
enter
add
stos
andb
outsb
xchg
enter
aad
dec
rcr
add
jo
mov
in
sarl
xchg
and
shl
mov
jmp
lods
lahf
adc
scas
imul
jl
adc
pushf
xlat
mov
mov
fcoms
or
shl
mov
fidivl
call
sbb
sbb
push
push
fs
imulb
or
inc
mov
mov
inc
or
fcmovb
scas
adc
push
inc
push
in
shr
je
shlb
lds
pop
adc
inc
adc
in
mov
adc
clc
mov
xor
dec
and
sub
push
test
push
js
add
insl
pop
loop
inc
mov
fsubp
xor
xchg
cmpsl
add
mov
inc
push
std
enter
test
sahf
ja
dec
arpl
adc
iret
call
mulb
xlat
mov
mov
add
ret
mov
cmc
xchg
add
jle
push
jno
into
hlt
popa
sub
bnd
push
and
or
pop
mov
adc
mov
xchg
xchg
lret
cmp
and
outsb
xchg
jecxz
or
cli
xchg
mov
and
pop
sub
cmpsb
in
sbbl
push
xchg
mov
test
rorl
and
notb
lahf
arpl
jg
repnz
and
sti
out
lock
ss
test
jae
out
adc
lock
repnz
mov
push
sbb
fadd
es
enter
xchg
pop
inc
pop
loopne
dec
lods
inc
add
gs
mov
mov
mov
call
lcall
push
js
cmc
aam
pop
out
mov
cwtl
xlat
mov
inc
fidivrs
jle
dec
or
addl
cmpsl
xchg
hlt
pop
loopne
jb
dec
ss
insl
fwait
or
in
ficompl
mov
fcompl
mov
jo
out
and
adc
dec
push
fcomps
xchg
lret
dec
inc
mov
std
out
pop
faddl
push
dec
mulb
inc
lcall
adc
in
cmp
xchg
daa
out
mov
xchg
icebp
lods
add
xchg
jg
dec
xchg
mov
lahf
sub
loop
movsb
push
push
fsubs
ds
fwait
in
fisttpll
icebp
inc
pop
fadd
lret
add
loope
out
push
nop
mov
xchg
or
mov
rcrl
imul
bound
test
cmp
mov
int3
int3
std
inc
inc
and
lods
xor
cmpsl
dec
mov
pushf
sbb
mov
jle
std
push
movsb
out
cmp
aad
insl
sahf
clc
mov
xlat
push
sbb
xchg
inc
ds
fs
subb
dec
in
fsqrt
sbb
lcall
add
or
scas
inc
pop
sub
pop
push
loop
out
cmp
lea
fadds
fidivl
test
insl
fisubs
mov
inc
lods
inc
ret
out
push
ret
test
lcall
das
mov
adc
popf
mov
imul
int3
jnp
sbb
lock
cmpsb
outsl
mov
xor
mov
lods
pusha
outsb
adc
mov
cs
jp
in
arpl
dec
imul
fsubrs
add
sbb
test
inc
sub
lcall
sbb
js
pop
adc
mov
int
sub
std
inc
and
movaps
cli
adc
aad
ret
ds
mov
test
sub
lahf
loop
pushf
ret
movsb
test
cmp
jo
cmp
pushf
test
into
bound
rcrb
inc
shll
lock
std
sbbb
xchg
ss
adc
das
jle
inc
test
aas
shlb
shll
fidivrs
mov
out
add
bound
adc
cs
lock
icebp
xchg
lret
in
ja
adc
ret
imul
add
aas
int
ret
aam
aaa
adc
add
xchg
nop
cmpsb
or
or
cld
out
xchg
das
rorl
and
cwtl
sahf
push
cmp
and
sub
mov
loopne
out
sbb
movsb
mov
pop
repnz
pop
jnp
sub
dec
arpl
jmp
imul
push
icebp
ljmp
xchg
out
int
repnz
cmp
aas
or
jo
jp
or
push
add
dec
jo
fadds
push
jne
fwait
pushf
xchg
jge
shrl
xchg
adc
and
sub
mov
add
lahf
out
push
jb
stos
imul
scas
xor
mov
fwait
mov
rorl
inc
ss
mov
pop
inc
rolb
lahf
mov
mov
lret
adc
cmp
sbb
mov
lahf
cld
inc
push
gs
loope
push
xchg
sti
xlat
mov
enter
add
or
cmp
adc
out
jg
out
mov
lods
push
gs
movsl
cli
or
lcall
out
imul
mov
imul
fldl
sub
xor
mov
orb
dec
enter
fsubrs
pop
inc
inc
icebp
push
sbb
or
xchg
dec
frstor
jmp
sub
push
test
rcll
sub
cmp
aaa
mov
pushf
fstp
insb
repz
mov
add
shr
jo
jge
xor
xor
push
mov
jo
mov
scas
lds
mov
lea
mov
xchg
daa
jnp
and
das
and
ljmp
repnz
icebp
fsts
push
out
pop
push
mov
push
and
stc
mov
fisttps
mov
and
jge
jle
addr16
xor
push
stos
push
push
sub
lea
jg
fadds
addb
push
mov
pop
xchg
jb
pusha
mov
das
pop
ficoms
pop
ret
fildll
jecxz
fdivrl
push
inc
imul
and
ror
sti
pop
jo
insb
pop
fnstcw
movmskps
movaps
jmp
push
xchg
je
mov
add
lcall
jg
cmp
and
frstor
jbe
and
add
pop
mov
push
cli
sub
dec
clc
mov
and
or
test
out
dec
cmpsb
xchg
ret
mov
popa
cmp
fnsave
sbb
dec
push
out
mov
rcrb
lahf
mov
mov
mov
int
add
dec
out
subb
jns
iret
sub
inc
jnp
rcrb
repnz
mov
and
mov
cmp
jmp
pusha
vmovd
push
outsl
lret
arpl
ficoml
popf
cmp
stos
aam
std
fstps
nop
sbb
out
pop
jno
outsb
mov
js
mov
inc
xor
imul
rorb
sub
push
sbb
ret
xor
je
push
sarb
rorb
addl
push
jnp
add
sub
mov
push
xor
xchg
jp
fcompl
ret
js
in
mov
movl
sbb
adc
popa
push
mov
inc
adc
cmp
pop
movsl
aam
mov
jae
imul
cmp
mov
dec
push
inc
shl
rcrb
and
jge
push
mov
les
outsl
push
mov
shl
cld
jns
pushf
dec
cld
aas
pusha
out
shrb
push
sub
das
sbb
xlat
dec
xor
cwtl
push
jecxz
jbe
hlt
sbb
or
jmp
dec
dec
jecxz
sbb
inc
push
cld
jge
pop
mov
outsb
sub
pop
lods
mov
or
push
int3
call
pop
jo
dec
stos
cmp
mov
mov
mov
fisttps
sbb
jmp
ja
mov
gs
int3
mov
faddl
rorb
sub
nop
stos
int
sub
push
loop
jp
xor
or
push
nop
jno
mov
xor
test
mov
js
pause
and
cmpl
cltd
lahf
in
movsl
add
xor
fdivrl
mov
xchg
fidivl
xchg
inc
mov
push
mov
sbb
jle
scas
inc
and
push
rorb
and
gs
pop
lods
cmp
jmp
add
addr16
push
sbb
jb
or
mov
rcrb
lock
and
push
stos
cltd
and
fiadds
dec
mov
movsb
jmp
in
sbb
jne
jno
daa
stc
icebp
and
sbb
nop
xchg
fdiv
imul
mov
in
pop
adc
sub
cmp
lods
imul
push
or
mov
ss
out
mov
nop
xchg
loopne
out
xchg
mov
andl
push
push
aas
pushl
ds
pushf
push
xchg
jb
lods
pop
push
fwait
sti
xor
pop
fsubl
dec
jecxz
and
xor
fsubl
call
sub
fnstenv
sbb
pop
in
outsb
pop
shlb
add
dec
stos
loop
sbb
add
jle
lods
adc
dec
dec
das
sub
out
insb
adc
mov
push
aam
filds
or
mov
push
insl
xorl
push
stc
sub
and
pop
repz
test
pop
cwtl
sbb
pop
inc
int
ljmp
mov
add
test
mov
test
shll
cli
xchg
fdivl
pop
sbb
incl
int3
inc
repnz
rcrb
xchg
sbb
sub
dec
nop
outsb
push
lea
xchg
add
mov
into
in
je
mov
lcall
xchg
ret
xor
scas
add
cmp
adc
inc
or
jl
lret
push
addl
mov
out
lahf
lret
mov
jno
mov
xor
cli
mov
jb
mov
int
mov
ret
cmp
call
or
inc
jecxz
and
mov
outsl
sbb
ret
and
jne
xchg
data16
imul
enter
in
sbb
sub
testl
sub
adc
xor
cmpsb
inc
nop
pop
sbb
cmp
push
ljmp
aas
jno
jmp
cmp
fildll
pop
test
pushf
push
or
and
mov
lahf
jl
jp
mov
add
inc
and
jmp
push
jmp
mov
aad
mov
loopne
pop
sarb
das
jl
das
fstpl
inc
jg
inc
je
inc
cli
jg,pt
orl
or
mov
and
stos
jmp
mov
xchg
aad
mov
imul
push
jl
add
dec
push
pusha
imul
popa
mov
xor
jmp
ret
lds
and
into
dec
lods
ss
mov
int3
lret
fidivl
mov
stc
pop
out
sub
mov
xlat
daa
test
mov
mov
lcall
inc
adc
loopne
xor
stc
cltd
xchg
lds
xorl
mov
push
sub
pop
mov
xor
mov
mov
stos
push
or
or
dec
roll
inc
inc
ret
testb
scas
fdivr
cmp
cs
sarl
jp
out
xor
or
jnp
push
jl
cwtl
sbb
cld
jo
aas
xchg
insb
bound
loope
push
nop
sahf
jno
loopne
inc
push
insl
cltd
roll
xchg
mov
imul
imul
jno
mov
out
jle
push
dec
fsubrl
sub
push
int
pusha
add
dec
bswap
pop
xchg
dec
mov
xchg
out
push
repz
es
mov
dec
cmpsb
adc
ss
mov
push
mov
lcall
sbb
and
or
daa
xor
and
mov
and
sbbb
push
rclb
jg
and
je
pcmpeqd
xchg
mov
pop
xchg
xchg
jne
fnstcw
je
fucomp
xchg
mov
sarl
les
lods
imul
movsl
enter
adc
push
lahf
mov
int3
js
das
call
out
insl
in
clc
add
cmpsl
jp
mov
pop
ficoms
es
mov
clc
fildl
imul
or
mov
mov
mov
scas
ja
mov
adc
dec
cmp
add
lret
jge
stos
into
cs
dec
cld
jle
pop
call
jle
mov
ljmp
rorb
push
test
mov
jl
stc
xchg
daa
xchg
aam
mov
fidivrl
push
pop
adc
repz
mov
aam
jmp
jne
hlt
jns
jp
es
movsb
dec
es
mov
ret
movsl
lods
hlt
movsl
test
mov
jmp
jbe
stos
pop
ja
pop
test
cmp
xlat
loopne
cmpsl
nop
fmul
mov
inc
aaa
pop
mov
insl
mov
dec
or
mov
or
add
cmp
aad
jbe
lahf
aas
jg
dec
je
jb
jb
xchg
lods
sbb
adc
stos
mov
icebp
cmc
hlt
ljmp
xor
mov
and
push
xchg
mov
jns
mov
bnd
push
loop
iret
xchg
inc
bound
mov
pop
sbb
pushf
cwtl
cmpsb
cld
lods
mov
mov
push
xor
xchg
and
add
inc
jecxz
movsb
pop
call
and
xchg
ljmp
xor
cli
lahf
je
sub
cmp
push
mov
es
inc
repnz
aas
flds
pop
std
sarb
cmp
dec
lret
and
sbb
and
dec
movb
movsb
fwait
cmp
sub
mov
sarb
pop
repnz
xcrypt-ecb
cmpsl
or
lods
cmpsb
iret
mov
ljmp
jmp
cmp
rcr
or
push
loope
mov
shlb
adc
stc
pop
mov
mov
and
xorb
pop
pop
pop
loopne
call
jmp
decl
insl
mov
sub
imul
inc
pushf
xchg
and
adc
mov
es
hlt
push
add
jnp
add
scas
outsl
imul
jle
lods
clc
rorl
push
pushf
inc
adc
adc
dec
fwait
mov
aam
cmpsb
icebp
aam
inc
loope
jmp
je
or
sub
adc
sub
repnz
xor
sbb
mov
mov
dec
xor
js
mov
cmp
arpl
push
lock
sub
sub
xor
sub
push
jmp
rclb
aad
sbb
or
sbb
pushl
arpl
xor
icebp
ret
mov
test
lahf
daa
push
xor
fsincos
dec
ss
icebp
dec
lcall
outsb
mov
adcl
pusha
mov
mov
jp
inc
daa
mov
inc
ss
sub
pop
sbb
pop
cmp
lea
into
sbb
inc
int3
loopne
scas
rcrl
lret
enter
jb
in
cmp
rclb
pop
cmp
int3
dec
lea
sub
cmp
fwait
xor
jno
xor
lea
pop
pop
fcmove
pop
aam
ja
jo
inc
inc
bswap
rcrl
call
and
or
out
xchg
push
outsl
adc
mov
scas
push
add
or
int
fs
sbb
cmp
sub
xchg
aaa
mov
pop
sarb
xchg
sub
stos
shl
shll
xchg
fwait
arpl
mov
pushf
out
pop
jo
arpl
pop
mov
dec
push
xor
js
ret
stos
dec
fwait
sub
insl
repz
out
pop
jp
push
mov
jns
add
test
push
sub
movsl
adc
push
mov
sbbl
and
adc
xchg
ja
outsb
loope
xchg
jns
xor
cmp
lock
and
in
mov
das
test
dec
in
dec
mov
pushf
sbb
or
stos
in
lods
addl
cmp
ffreep
mov
xor
lret
push
inc
lock
loopne
movsl
inc
push
jbe
xor
arpl
popf
aam
imul
imul
popa
sahf
scas
gs
sub
pop
sub
sti
adc
insb
inc
rol
inc
sbb
adc
fisttpl
and
mov
out
rolb
push
je
jo
push
add
cld
arpl
mov
inc
adc
int
or
pusha
inc
jns
dec
dec
cltd
into
aad
xlat
push
mov
inc
aaa
cwtl
pop
loop
fcomps
aam
sbb
push
pop
sub
cmp
lds
mov
rclb
test
enter
mov
aas
int3
test
test
dec
inc
sub
mov
lock
adc
into
leave
push
jbe
pop
cwtl
adc
popa
push
cmpsb
mov
sar
sbb
sub
clc
add
imul
pop
sub
mov
jno
dec
mov
xor
jae
loopne
sub
pop
sub
sahf
cwtl
push
insl
add
sbb
jae
iret
dec
mov
push
inc
js
daa
cwtl
mov
add
fistl
aaa
cmp
pop
mov
push
ja
cltd
stos
mov
inc
sbb
pusha
sar
xor
rcl
adc
cmp
fdivl
mov
jle
push
and
test
xchg
push
cli
push
ds
and
jmp
notl
cmp
and
push
mov
or
stos
decl
xor
sbb
xchg
inc
pop
or
ds
dec
call
and
loop
adc
and
or
mov
push
mov
shlb
je
sahf
lods
dec
es
enter
fdiv
push
dec
inc
insb
std
repnz
xor
js
xor
stos
cltd
ja
pusha
divl
sbb
cmp
inc
pop
xor
or
mov
xchg
and
sbb
inc
ss
fdivl
test
mov
inc
popf
cs
mov
and
sbb
lahf
add
jo
dec
mov
aad
pushl
add
jmp
test
test
nop
dec
sub
dec
enter
push
mov
add
cmp
or
int
shld
test
adcl
and
mov
addl
gs
out
mov
cmp
mov
jg
mov
or
ds
xor
les
fildl
repnz
add
sbb
imul
leave
incl
push
jne
adc
xlat
mov
lock
aam
loope
fistpl
jmp
sub
mov
xchg
adc
cmpsb
shl
adc
popf
pop
movsl
push
push
dec
sahf
dec
sub
add
pop
xchg
jbe
or
jae
insl
push
sbb
not
sbb
mov
popf
inc
jne
sub
fs
outsl
aad
jnp
cmp
stos
jle,pt
popl
inc
mov
mov
in
adc
and
fdivl
adc
push
fsubr
push
test
rep
xchg
inc
shr
mov
cmpsb
sub
out
pop
fbstp
add
je
dec
jp
out
inc
jp
add
loop
hlt
lds
mov
call
sub
aas
ljmp
pop
fidivl
shrl
lds
test
outsl
mul
stos
rorl
dec
aaa
jno
jmp
and
jp
sti
out
test
dec
mov
or
ljmp
fldenv
mov
pop
jge
pop
scas
data16
pop
jg
fwait
push
movsl
fs
mov
lret
js
scas
mov
call
or
push
js
shrb
xor
sub
push
or
inc
ret
stc
into
out
push
fs
mov
mov
xchg
ret
adc
and
cli
das
inc
mov
push
out
adc
jns
hlt
or
mov
into
inc
xchg
out
jno
outsl
addr16
xchg
pop
decl
xchg
sub
and
jmp
add
jmp
push
and
dec
les
mov
popf
push
das
or
daa
int
xlat
pop
mov
mov
mov
pop
mov
dec
xchg
std
aaa
stos
xchg
lds
sbbb
xor
lret
lds
jnp
in
inc
ja
imul
aas
andl
add
fisubrs
lcall
xchg
repz
adc
xchg
push
xor
fcompl
adc
dec
cmpb
push
push
enter
fcmovbe
test
movsl
imul
test
fcomps
rolb
ret
sbb
addb
lods
pop
je
out
mov
pushf
paddb
pop
add
cmp
inc
jg
xchg
jbe
and
push
rcrb
imul
or
push
lret
iret
movsb
add
lret
in
shl
subb
push
pushf
fs
movsl
call
jmp
lds
sti
xchg
test
add
test
push
pop
push
adc
daa
fldt
fsubp
sub
and
cmpsb
test
popa
imul
mov
dec
fsubl
bound
ds
in
out
sbb
aaa
xchg
or
dec
sti
cmp
sar
cmpsl
jbe
mov
jnp
jae
pshufw
push
int3
imul
and
push
or
mov
xchg
xchg
jo
movsb
lea
push
andb
adc
aam
mov
mov
movsb
inc
pusha
lret
inc
dec
and
out
test
aaa
inc
insl
jge
scas
ret
iret
fildll
fdivs
cli
dec
pop
pop
jmp
sarl
rcr
xchg
jl
push
sbb
movsb
mov
jg
add
push
pop
sahf
inc
ret
test
mov
pop
xchg
mov
fldl
jb
dec
push
lahf
arpl
in
out
std
jae
dec
arpl
bound
pop
leave
cmp
in
fistpl
lods
mov
dec
lods
std
sub
pushf
fsubr
in
cmp
jmp
inc
das
xchg
pop
ja
shl
push
mov
aas
adc
dec
sub
into
xor
pop
mov
movsl
mov
cld
xchg
jb
stos
pop
andl
mov
sahf
movsl
xor
nop
in
mov
pushf
cs
stc
or
icebp
cltd
jnp
fldenv
lea
pop
dec
jb
add
mov
sub
and
dec
movsl
mov
loopne
popa
jl
pushl
or
pop
cmp
xchg
in
out
jnp
jns
or
pop
pushf
mov
insl
stos
fistps
jae
cmpsl
shrl
pop
xor
cltd
mov
aaa
or
or
fnsave
lcall
mull
mov
xchg
xchg
test
pop
aaa
rcll
shlb
loopne
dec
fnstcw
lcall
pop
push
dec
bound
inc
push
xchg
inc
inc
mov
pop
nop
ja
xlat
int3
cltd
frstor
cmp
inc
mov
jns
cld
mov
push
mov
test
negl
and
les
dec
push
nop
pop
into
sbb
pop
movsl
jecxz
call
push
push
push
in
test
inc
xchg
aad
int
push
flds
sub
stos
fldpi
test
xchg
pop
aam
push
push
enter
mov
fadd
lds
sbb
outsl
in
sbb
cmp
or
add
jmp
sbb
mov
or
ja
clc
sub
or
hlt
xor
popa
push
xlat
cmp
pop
cmc
dec
or
pop
loopne
adc
jbe
push
push
push
cmpsb
mov
pusha
out
mov
xchg
xchg
das
cmp
add
pop
add
or
frstor
cmp
out
insl
pop
les
dec
and
dec
mov
dec
out
mov
iret
sub
mov
adc
scas
sub
mov
sbb
aam
sub
inc
cli
or
jb
mov
jb
adc
adc
xchg
push
scas
arpl
or
mov
enter
scas
xor
fldenv
adc
jns
add
and
mov
dec
lcall
sbb
popf
lods
mov
cmpl
adc
cld
inc
push
xchg
sar
or
fcoml
pop
jp
jnp
or
pop
repnz
ss
adc
cltd
dec
pop
add
or
in
or
sahf
and
cmpsl
mov
add
pop
xchg
dec
bound
push
nop
stc
in
dec
ds
sbb
sub
lods
xchg
cmp
negl
push
sbb
and
pop
push
sub
ret
dec
dec
je
dec
cmp
push
push
add
push
pop
jl
iret
fdiv
pop
pop
pop
jne
or
dec
aas
dec
jae
cli
in
xorb
xchg
movsb
rcr
mov
popf
xor
incl
ret
shlb
dec
loop
hlt
fsubr
dec
sbb
xchg
xchg
out
into
movsl
dec
scas
add
jne
mov
jmp
imul
mov
mov
jnp
cltd
sub
lcall
aam
push
clc
test
cli
in
mov
mov
into
add
sub
jbe
and
jae
push
or
xchg
jns
test
add
adc
mov
aaa
sub
icebp
fcom
mov
loope
jne
adc
andl
call
or
adcb
pop
in
cmp
loope
mov
lods
pop
in
sub
jmp
adc
scas
dec
arpl
mov
sub
int3
adcl
ffreep
cltd
out
push
shlb
dec
and
clc
es
xchg
pop
icebp
mov
movsb
call
xor
outsl
sbb
insl
cmpb
xchg
leave
mov
and
jne
cmpsl
mov
adc
mov
cmpsb
fmuls
sbbl
mov
loope
bound
xor
in
jmp
scas
pop
mov
shrb
scas
push
adc
push
mov
mov
jge
lahf
jnp
aad
mov
mov
xlat
jl
xchg
inc
xchg
pop
pop
in
negl
das
shrb
jb
popa
scas
rcrb
jne
nop
fsubs
dec
dec
inc
and
les
xorl
pop
cmp
mov
xchg
inc
lret
adcb
test
xchg
stc
imul
xchg
je
mov
das
in
mov
and
or
pop
aam
stos
addl
mov
or
xor
inc
inc
mov
push
mov
fwait
or
push
xchg
sbb
out
jmp
add
mov
jno
mov
add
mov
jbe
pop
mov
sub
xor
push
xor
pop
cmpsb
add
jbe
arpl
sbb
out
cmp
adc
dec
test
jp
scas
popf
sub
in
rcll
xchg
mov
clc
adc
scas
sbb
inc
fsubl
jb
cmp
leave
xchg
jg
mov
add
sbb
inc
add
or
lcall
movsb
rclb
xor
nop
sub
cmp
push
hlt
movsl
mov
jle
cld
mov
mov
inc
push
mov
sbb
sub
lock
mov
dec
sub
adc
mov
cmp
iret
arpl
sub
in
jle
das
dec
out
push
xorl
sub
mov
dec
mov
adc
mov
mov
sahf
mov
lock
mov
rcr
dec
mov
pop
inc
dec
sbb
jns
xchg
add
jae
inc
mov
shll
inc
sti
cmp
jmp
pop
pop
and
dec
inc
out
and
dec
scas
jo
gs
mov
lcall
adc
pop
add
push
sub
inc
jmp
cmp
gs
aad
cmpsl
dec
mov
mov
aam
ret
add
dec
mov
lods
les
cmp
je
or
sbb
adc
rcll
mov
das
jns
arpl
es
adc
aad
mov
mov
popf
mov
aas
mov
scas
mov
repnz
add
test
mov
mov
xchg
loopne
sub
dec
cmpsl
test
adc
fldl
xchg
fsubs
or
in
iret
cmp
test
mov
je
stos
ja
mov
mov
ljmp
inc
adc
mov
mov
sub
xchg
xor
inc
addr16
scas
mov
in
out
js
xor
pop
sbb
sbb
pop
push
adc
lods
xchg
stos
out
scas
adc
das
sbb
xchg
repz
scas
clc
pop
and
jno
fildl
fs
testb
lret
jne
jns
es
xchg
enter
in
in
sub
cmp
adc
pusha
and
test
dec
gs
sti
in
out
push
cmp
sub
mov
dec
ljmp
lock
fwait
xor
in
dec
int3
adc
xor
pop
pop
fwait
test
in
outsb
sbb
jno
cmp
dec
cs
add
out
jbe
mov
hlt
das
rcll
scas
int3
adc
mov
pop
mov
jmp
xchg
sbb
enter
lret
jno
out
aas
aaa
mov
test
jno
dec
je
in
mov
scas
jae
in
mov
movsl
int
ss
hlt
xor
or
mov
lods
and
shlb
sbb
movsl
fs
roll
mov
inc
movsl
or
jo
dec
fs
add
in
xor
mov
mov
pop
mov
daa
movsb
mov
cmp
pop
push
ss
add
pop
pushf
stc
aas
push
dec
jne
pop
mov
in
push
cmp
jb,pt
in
xchg
mov
les
mov
and
lret
cmp
mov
pushf
push
lret
adc
jae
push
push
push
call
mov
sahf
mov
decb
push
xor
or
in
mov
sbb
xor
movsl
int
push
int
push
loop
lods
in
addl
sub
jg
xchg
add
insb
out
jmp
hlt
push
lds
push
sub
cmp
or
xor
and
and
mov
aas
in
mov
jl
mov
repz
and
fld
les
jl
sub
sahf
rcl
rclb
pop
jg
sbb
add
xchg
mov
xor
out
ss
mov
imul
mov
cmp
inc
ss
mov
adc
mov
mov
xchg
push
push
popf
scas
test
jb
xor
ffree
push
xchg
sti
subl
les
xchg
mov
ja
dec
in
jae
cmp
xchg
pop
sbb
cmp
icebp
sbb
and
scas
out
mov
roll
faddl
mov
int3
out
mov
xor
and
dec
dec
mov
xor
mov
stos
pop
cmp
stc
pop
jge
adc
or
insb
lcall
jne
stos
outsl
fstl
fsubl
push
call
inc
sub
stos
jle
loop
xchg
adc
add
call
rol
out
inc
daa
sbb
jg
hlt
fmull
push
jle
cwtl
mov
aas
sub
add
inc
cmp
pop
xchg
roll
cli
lahf
mov
jp
push
aad
adc
mov
cs
ret
outsl
add
jbe
sub
adc
test
aad
les
out
xlat
lock
jecxz
pop
cmpsl
mov
or
or
js
add
mov
movsb
push
pusha
push
mov
fldl
or
jnp
stc
xchg
cwtl
cmp
aam
call
adc
and
imul
cmpsb
push
fistpl
movsb
imul
into
push
in
mov
sub
lret
jmp
mov
or
test
add
or
mov
repnz
xchg
imul
in
push
pop
and
pop
xchg
cmp
xrelease
arpl
icebp
out
test
gs
jns
add
scas
or
xor
xor
add
jne
and
cmpsb
aas
cli
xor
jle
mov
push
push
adcl
sbb
pop
ljmp
lods
aad
sub
jg
fwait
sub
xchg
xchg
jb
mov
inc
xchg
pushf
mov
lcall
pop
jg
pop
aaa
mov
stos
xchg
push
push
outsl
les
mov
subb
push
clc
mov
hlt
lods
mov
outsb
and
xchg
sbb
mov
mov
mov
enter
xorl
ljmp
cs
pop
push
xchg
xor
in
inc
mov
shlb
mov
scas
pop
cmp
pop
mov
ficompl
fidivs
cld
rclb
dec
repz
fadds
ljmp
push
in
cmove
pop
cmc
popf
aaa
movsl
mov
add
cmpsb
mov
mov
imul
push
push
arpl
jae
xor
and
pop
inc
jp
dec
ljmp
sub
inc
push
mov
push
xor
fldcw
push
mov
inc
and
stos
out
in
add
aad
in
push
xchg
fnstenv
call
inc
aaa
pop
mov
cld
into
js
icebp
in
mov
cli
adc
dec
out
add
mov
push
or
sbb
sub
mov
imul
mov
ret
pop
int
or
cmp
cmpsl
mov
stos
cmp
popf
mov
jecxz
test
pop
out
push
add
mov
mov
xchg
cmp
loopne
xlat
repz
mov
sti
mov
lret
stos
mov
fadds
jbe
push
mov
xlat
sahf
mov
mov
dec
jno
andl
pop
inc
mov
fcmovnb
pushf
movsl
data16
inc
lcall
fisttps
pop
mov
xchg
mov
adc
ljmp
push
out
sub
mov
mov
into
lods
lret
jmp
jns
fadds
mov
and
pop
inc
es
icebp
mov
sbb
xor
jmp
and
inc
xlat
ud0
shl
jp
in
dec
aam
jle
dec
popa
enter
cld
nop
sbb
popa
clc
pop
pop
dec
sahf
int
push
jne
push
and
cld
jmp
jge
inc
cld
xor
mov
jle
loopne
mov
lret
sub
sub
cmc
xlat
push
cmp
movsb
cmp
mov
lcall
sysexit
xchg
mov
adc
inc
jb
rorb
sub
add
push
jns
lret
aad
jmp
data16
cwtl
jns
sbb
gs
jg
popf
imul
and
mov
sub
dec
push
ds
and
cmp
or
push
insb
jmp
inc
pop
cmp
sbb
cwtl
fwait
scas
fistps
inc
inc
test
stos
push
dec
mov
jo
test
sbb
into
mov
jnp
xchg
into
jmp
sub
adc
push
ljmp
xchg
jne
je
movsl
int3
mov
out
push
jmp
orl
leave
popa
mov
mov
insl
jmp
xor
push
cmp
fisttpll
pop
repz
jp
es
or
inc
movsb
dec
outsb
fcoms
lds
sub
jge
cmp
sub
jns
pop
xor
xchg
xchg
mov
inc
in
in
out
mov
ljmp
out
push
xchg
in
pusha
cmpsb
and
movb
stos
lods
mov
xor
inc
lret
cmpsb
push
das
aad
hlt
inc
lods
jge
pop
dec
adc
mov
mov
das
xor
fwait
xchg
xchg
xchg
pop
mov
or
cld
lahf
push
nop
shlb
das
icebp
or
adc
jl
and
aas
add
aaa
push
gs
jbe
pop
add
adc
push
std
lock
mov
pushf
movsl
cmpsl
nop
xchg
imul
ja
stos
ja
test
or
sbb
sbb
in
clc
push
add
adc
cwtl
xchg
inc
mov
mov
push
inc
pop
xchg
aas
test
and
sti
xchg
xchg
inc
shrl
int
inc
enter
xlat
push
mov
fcomi
dec
jl
in
or
pop
dec
ds
fs
movsl
jp
sbb
pop
jae
add
mov
in
mov
pop
test
enter
in
add
jno
mov
dec
das
inc
arpl
rolb
loop
rcll
mov
aaa
int3
mov
fldz
rcrb
imul
push
pop
mov
shl
push
jns
pop
pop
inc
test
xlat
add
cld
mov
test
mov
add
test
mov
sbb
mov
jl
pop
call
cmpsb
andl
insl
inc
jo
ds
add
sub
mov
fsubrp
gs
bound
or
scas
mov
outsl
cmpsb
or
jae
hlt
inc
mov
mov
imul
jge
mov
in
push
mov
subl
push
adc
push
fistps
lea
fstp
pusha
pop
popa
mov
sbb
in
stos
sbb
out
lds
push
aam
mov
mov
pop
xor
mov
lcall
inc
jb
sahf
std
sbb
mov
xchg
popf
jae
add
shll
cmp
dec
fldl
or
movsl
not
movsb
dec
pop
out
cmp
outsb
sarb
sub
call
mov
xchg
or
int
cmp
mov
in
adc
xchg
jb
mov
add
sbb
sti
sub
mov
roll
lods
xchg
sub
stos
mov
sbb
hlt
popf
cld
xchg
fs
jno
or
add
ljmp
mov
lret
mov
cli
loopne
adc
mov
pop
fidivs
push
mov
daa
adc
xor
out
add
movsb
adc
xchg
push
aam
fidivs
std
mov
and
loopne
lret
and
iret
inc
fcomps
sub
jno
xor
dec
push
lea
outsl
sti
out
mov
fisttps
imul
push
sbb
sub
mov
nop
popf
or
roll
cmp
jb
mov
inc
or
jg
int3
inc
insb
xchg
and
les
dec
sub
cmp
dec
or
das
sub
in
xchg
jl
scas
mov
test
mov
push
int
repnz
stc
xor
mov
repz
push
or
pusha
insb
in
mov
stos
lods
pushw
ljmp
imul
out
lcall
cmpsb
dec
inc
mov
cmp
int
mov
add
fwait
jg
addb
push
ss
xchg
outsb
inc
pop
adc
and
mov
push
aaa
cmp
add
sub
mov
dec
jbe
sbb
subl
sub
xor
push
sub
and
hlt
add
rcrb
xor
push
mov
sbb
insb
sbb
mov
rclb
sub
push
push
mov
jns
ret
mov
jo
add
aam
enter
sahf
or
jns
sbb
daa
movsl
mov
fwait
arpl
arpl
pop
test
outsb
insb
pop
outsl
mov
xor
jns
movsb
lods
hlt
and
mov
icebp
push
sbb
xor
cmp
movsl
jnp
pop
mov
mov
mov
stc
push
hlt
dec
xor
sbb
push
push
ret
loopne
add
mov
hlt
cmpsl
mov
nop
loopne
fcomp
scas
repnz
pop
loopne
xor
aam
jl
imul
cmp
out
ljmp
hlt
jmp
and
jle
fstl
jmp
jnp
jl
xor
inc
lods
inc
cmpsl
iret
mov
xchg
mov
rol
xchg
cmp
mov
and
add
cmpsl
sub
mov
addl
push
mov
aaa
push
sti
test
push
insl
jns
sti
in
xchg
jne
mov
lcall
jge
pop
subl
enter
sbb
in
or
cmp
and
sub
pop
rclb
adc
inc
mov
cmp
sub
and
sti
sbb
iret
dec
insl
les
outsb
rolb
push
mov
je
scas
cltd
mov
or
popf
xchg
adc
dec
adcl
mov
cmp
xchg
rcr
out
sbb
arpl
test
pop
dec
ja
jb
xor
add
mov
mov
repnz
pop
fmul
add
fcoms
mov
push
push
test
imul
cmp
stc
cmp
xor
lahf
dec
rdmsr
push
int3
stos
mov
jno
push
sbb
jle
mov
lcall
insl
sub
mov
movl
popa
mov
sbb
mov
je
daa
gs
dec
xor
cmp
or
pop
ljmp
or
mov
push
inc
js
jmp
daa
xor
enter
add
lret
mov
movsb
ljmp
fnstenv
arpl
cmp
sbb
mov
mov
andl
ror
xchg
or
jge
lods
in
jne
jo
fisttps
fistpl
inc
sub
roll
sub
aam
inc
sub
hlt
imul
push
cmp
stc
in
sbb
cld
add
inc
xchg
in
cmp
jg
pop
dec
push
dec
jne
sbb
cltd
insb
adc
bnd
call
fnstenv
test
idivb
push
add
push
mov
mov
gs
push
cmp
sahf
fcomp
lret
push
xchg
daa
sub
cmp
inc
ljmp
ds
cmpsb
xchg
addr16
or
shll
into
mov
or
inc
je
pop
lret
sbb
leave
js
mov
add
shr
jae
shll
jae
xor
in
out
mov
and
inc
rcrb
xchg
negb
and
mov
add
add
jg
call
lcall
sarb
xchg
xor
sahf
mov
sub
test
adc
inc
mov
sbb
das
xor
loop
sbb
mov
stos
scas
sahf
add
xchg
iret
xlat
mov
data16
xchg
stc
mov
pop
shrl
mov
outsb
fistps
add
std
ret
lret
mov
cmp
adc
mov
cltd
pop
sub
out
xor
movlps
lret
mov
fsubrl
cmp
jmp
or
arpl
rorb
rcrb
nop
aad
icebp
in
and
sub
clc
outsl
mov
sbb
dec
cld
outsb
push
xchg
xor
add
js
or
jne
out
mov
fidivrl
cli
movsl
push
mov
jnp
test
nop
push
mov
push
cs
mov
xor
xchg
or
mov
aaa
inc
mov
adc
out
mov
andb
cmpsl
psrlq
cmp
idivl
imul
pop
mov
cmp
loopne
shl
out
dec
adc
jns
cmp
sahf
fcoml
ret
push
imul
negb
mov
dec
cltd
sub
cmpb
aam
jb
cmp
adc
out
in
jecxz
cmc
xor
pusha
cmp
inc
stos
add
test
bnd
adc
pop
stos
pop
sbb
cmp
jne
inc
jl
mov
jge
mov
aas
cld
arpl
in
testb
adc
sub
rep
mov
test
push
lea
lock
fsubp
pop
xor
notl
loopne
sbb
xor
movsl
jbe
mov
mov
and
jle
aaa
add
fldl
out
xchg
inc
or
and
push
cmp
ffreep
jl
inc
ds
clc
outsb
ds
pushf
arpl
shl
lret
or
cltd
mov
sbb
jns
mov
rolb
es
es
cli
mov
and
mov
cmp
int
movb
aaa
pop
jbe
outsb
jp
add
nop
es
inc
pop
fcomps
sahf
or
int
sub
mov
inc
outsl
xor
clc
sbb
gs
sbb
xchg
mov
or
mov
dec
adc
test
cmp
fsubrl
add
add
repnz
dec
std
xchg
cld
add
xchg
jnp
sbb
mov
mov
sub
mov
rorl
mov
loopne
sbb
stos
lcall
inc
push
dec
jmp
pop
repnz
jne
inc
push
in
shl
xchg
mov
push
arpl
and
push
and
bnd
out
lret
or
int
adc
pop
lret
inc
mov
xchg
arpl
add
cmpl
lods
fiaddl
cmp
inc
sahf
es
adc
inc
fcmovbe
cmp
pop
data16
iret
add
sbb
mov
and
daa
push
mov
sbb
in
movsb
xchg
bound
into
outsb
test
push
arpl
add
pop
xor
mov
andb
dec
sub
add
jno
sub
jb
jle
cmc
xchg
stc
push
inc
int3
xchg
mov
mov
sbb
scas
rcrb
sbb
mov
ret
imul
fisttps
repz
adc
out
adc
mov
stos
js
cld
andl
cltd
testl
inc
cmp
movsl
loopne
mov
repz
and
movsl
in
popf
loopne
les
xchg
xchg
mov
xor
pop
stos
pop
pop
xorb
add
dec
idivl
jo
mov
mov
xchg
mov
lods
imul
push
ljmp
andb
pop
fsubrp
les
adc
fnstenv
xchg
mov
les
mov
je
xchg
xchg
mov
test
and
rol
dec
iret
cmp
pop
push
xlat
dec
add
dec
ljmp
dec
ficoms
adc
pop
push
dec
xchg
movsb
mov
in
ljmp
xor
lcall
jb
clc
inc
aam
movb
xchg
mov
mov
test
movaps
or
imul
add
mov
daa
imul
sbb
adc
pop
fs
call
imul
pop
pop
imulb
je
stos
pop
adc
data16
int
fidivs
adc
and
pop
adcb
cmpsl
adc
xor
push
mov
pop
jne
mov
imul
add
cmp
popf
dec
leave
inc
lods
mov
pop
out
or
mov
adc
sti
inc
orl
pop
fwait
cmp
aaa
adcb
es
out
mov
pop
push
jo
repnz
cmpsb
ljmp
jmp
in
popf
jbe
mov
hlt
mov
pushf
push
pop
jmp
repz
adcl
aam
mov
pop
lret
adc
and
bound
dec
icebp
dec
lods
cld
mov
add
jae
pop
mov
repnz
push
and
cli
dec
inc
ret
jmp
dec
cmp
xor
mov
cmpsl
movsl
inc
xor
mov
mov
or
and
sub
mov
popa
xlat
sarb
pop
pop
jb
sub
cmc
xor
mov
and
adc
jge
push
pop
add
push
xor
or
outsl
add
mov
push
into
push
cmp
add
adc
and
mov
cmp
xor
movsb
mov
mov
sbb
dec
cmp
mov
orb
test
stos
aam
andb
rclb
mov
xor
sti
leave
insb
sub
jae
inc
sub
add
sub
pop
push
icebp
lock
xor
clc
nop
dec
stc
push
arpl
cld
in
xchg
mov
addl
xlat
xlat
push
or
sbb
inc
pop
dec
cltd
fs
and
fs
aam
bound
in
aaa
pop
out
lret
sub
mov
fisttpll
lods
xor
cmp
cwtl
inc
aam
xchg
clc
xchg
cmp
sub
test
cmp
pop
pop
shll
into
in
push
ds
inc
mov
lods
repnz
lret
mov
inc
pusha
cmp
pop
movsl
jge
stos
addl
adc
dec
xchg
sbb
pop
pop
dec
inc
es
inc
xchg
add
cli
xchg
call
mov
jmp
adc
pop
jg
push
ffree
cmp
mov
push
fisubl
loope
lret
movsl
xorb
sub
dec
das
xor
sub
mov
sub
lcall
adc
clc
push
sarb
outsb
inc
mov
aad
jne
loopne
mov
adc
push
xor
push
xchg
add
mov
leave
inc
mov
adc
movsb
shrb
ja
fnstsw
pop
xchg
cmpsl
aas
jne
xchg
mov
test
fmull
push
daa
lret
popf
mov
mov
test
jb
cmpsl
ret
fs
jmp
xor
sbb
add
icebp
out
mov
xlat
xor
sub
xchg
or
xor
rcll
loope
add
in
mov
loope
xchg
rcrb
mov
das
ljmp
adc
int3
lret
das
dec
insl
cwtl
push
push
sbbl
xlat
pop
pop
dec
rcr
int
sub
dec
loope
and
fs
and
push
aad
fmuls
dec
or
push
out
jle
aaa
jne
adc
cmc
and
inc
jnp
out
sub
inc
pop
xchg
mov
js
sub
lock
xorb
aas
ja
lds
sub
out
into
xchg
mov
movsl
dec
pop
pop
push
xchg
xor
pop
pop
jmp
sti
loopne
stos
push
push
jl
movsb
pop
adc
dec
nop
jae
and
fcmovnu
xchg
jge
add
xchg
repnz
in
jbe
sub
and
mov
mov
mov
mov
dec
push
flds
rclb
push
shrl
in
sar
mov
jg
fiadds
pop
ja
pop
flds
adc
fmull
sbb
mov
loope
mov
aam
loope
cmpsb
cmp
add
stos
roll
out
mov
cmp
mov
dec
mov
sbb
bound
mov
mov
sbb
dec
imul
jmp
xor
loope
mov
fst
mov
pop
inc
sbb
dec
dec
inc
lock
scas
mov
shlb
sarb
push
dec
icebp
xor
inc
mov
insl
jp
int3
cmp
mov
push
and
xor
push
test
dec
sti
popa
nop
rorb
les
jmp
mov
rcr
jecxz
dec
sub
popa
out
pushf
fwait
outsl
sbb
jno
in
add
cmp
imull
fwait
push
cmpsl
push
xchg
dec
adc
sbb
xor
ljmp
sub
mov
pop
test
or
mov
jno
push
popf
and
sub
pushf
mov
movsl
imul
or
rcr
test
cmp
jae
dec
jo
or
cmp
andb
imul
lcall
inc
insl
jmp
adc
and
outsb
bound
mov
cmpsl
repnz
imul
out
call
jmp
pop
sbb
sbb
or
loop
xlat
cmp
popf
test
lods
dec
jecxz
jmp
sbb
or
inc
dec
cmp
xchg
iret
jo
mov
inc
xchg
std
out
or
dec
cld
and
push
cwtl
mov
and
movsl
mov
push
mov
jl
aad
fisubrl
cmc
adc
pusha
mov
or
cmpsb
cmp
xchg
ficoms
ljmp
sbb
mov
cmp
mov
mov
and
jecxz
push
xchg
cmpsl
push
sub
pop
sub
xor
push
mov
stos
or
pusha
pop
cmpsl
cmp
pop
and
jge
repz
push
sbb
cli
jne
jle
mov
cmp
push
add
int
cmc
cltd
popf
add
mov
fnsave
cli
lret
je
out
int
mov
enter
scas
inc
lcall
fidivrl
or
ljmp
imul
jb
xlat
imulb
ret
nop
call
jecxz
cmpsl
cmp
cmp
xor
jns
add
pop
xchg
dec
jmp
shlb
pop
repz
cmp
pop
add
xor
ljmp
bound
dec
or
or
jge
shll
out
sub
sub
adc
push
jge
movsb
cli
xor
mov
cli
fbstp
inc
and
or
arpl
frstor
xchg
jne
or
int
and
lds
in
push
call
mov
xor
jle
ja
jg
gs
pop
dec
pop
rcrb
push
jecxz,pt
fadds
jl
imul
and
jo
add
cmpsl
xchg
jge
lret
sub
cmpsl
jb
in
adc
jb
xor
ljmp
cmp
push
mov
pop
mov
cmp
stc
aam
movsl
ds
sahf
sbb
mov
fs
pop
lcall
testl
ds
lea
outsb
sub
arpl
popa
inc
jbe
insl
xchg
aas
xchg
nop
inc
mov
ds
push
test
cmpsl
pop
nop
add
lods
mov
fs
pusha
pop
test
les
mov
add
and
imul
ret
iret
and
lret
xchg
xor
mov
fwait
call
push
dec
cltd
xor
movsb
mov
adc
outsl
inc
sbb
loop
push
mov
push
mov
and
fnsave
in
mov
out
icebp
add
roll
cltd
shrl
jle
pop
ljmp
add
inc
dec
sti
ljmp
or
mov
adc
pop
in
cmp
dec
mov
jecxz
sub
movsl
push
and
outsb
sub
sbb
test
jns
jo
jne
dec
fstl
or
mov
mov
xor
cmp
dec
push
cmpsl
mov
aas
pop
xor
pop
adc
mov
jne
pusha
popf
xchg
pop
mov
in
in
hlt
out
cmp
pop
js
sub
cmp
dec
lcall
pop
pop
push
in
repnz
js
ret
fcmovu
cwtl
cmp
mov
lock
rcrl
in
cmpsl
lds
icebp
dec
xor
push
popf
xor
in
cmc
inc
test
fisubs
push
inc
mov
fnsave
xor
dec
push
jp
xchg
mov
das
and
arpl
lock
jb
icebp
cmc
sbb
push
adc
icebp
and
adc
in
pop
es
andl
fwait
mov
imul
cmp
imul
fisttps
aam
ret
cld
dec
iret
mov
jno
dec
sbb
jle
stc
icebp
repnz
cmp
aad
mov
cmp
subl
or
jmp
rcrb
loope
inc
scas
mov
imul
lds
daa
xchg
fdivl
nop
repz
sbb
jecxz
fs
xlat
rcrl
push
xor
add
add
cmpsb
loopne
inc
cmp
faddl
add
das
popa
inc
inc
sahf
sbb
fcoms
hlt
push
fs
inc
lret
sub
ja
rcrb
pop
or
xor
scas
leave
dec
mov
out
mov
push
xchg
mov
push
mov
rorb
popf
add
fwait
arpl
cli
test
sahf
mov
xchg
xchg
sub
into
push
jne
fisttps
dec
movsb
pusha
in
fcmovne
fsubrs
stos
add
js
sbb
or
leave
lret
call
jmp
mov
push
push
lods
or
push
push
lret
aas
icebp
ds
js
or
pop
js
mov
push
jge
jb
push
js
std
gs
pop
dec
jg
movsl
adc
push
mov
cmp
inc
jge
xchg
cs
enter
das
cli
out
ja
inc
nop
dec
push
push
cmp
imulb
push
xchg
adc
dec
xor
sub
loop
out
pop
lcall
cmpb
mull
push
or
cs
out
cmp
je
in
popf
aad
or
aas
loop
rorb
inc
mov
sub
inc
mov
xchg
mov
mov
dec
mov
and
xor
push
int3
inc
out
ret
outsb
mov
aas
ret
pop
pop
cmp
iret
cmpsb
out
mov
inc
dec
loope
jno
loopne
mov
movsb
dec
pop
pop
xchg
lret
out
out
call
jbe
push
test
jl
jg
adc
mov
out
mov
add
pshufw
aaa
ss
jne
sbb
jb
jno
ss
and
loope
movsl
fstl
stc
adc
int
or
addl
setns
lods
es
fistpll
or
jp
jmp
mov
inc
int3
mov
mov
push
inc
adc
decl
push
pop
int
and
or
ret
or
xor
into
nop
mov
imul
adc
add
push
mov
push
pop
fildll
and
adc
inc
pop
sahf
nop
scas
subb
clc
dec
insb
mov
std
or
scas
das
mov
sub
mov
push
pop
add
incb
nop
push
idivb
mov
loope
add
push
mov
jb
or
imul
add
push
xchg
dec
iret
xlat
rcrl
add
mov
pop
fmuls
dec
aas
pop
mov
lods
inc
adc
pushf
or
push
sbb
dec
cmp
cmp
imul
mov
jecxz
push
inc
loopne
xchg
mov
lods
and
das
xor
mov
inc
jo
inc
in
lahf
push
inc
fwait
pop
clc
and
jg
inc
dec
outsl
and
sub
and
jp
cli
or
enter
lahf
loop
enter
gs
dec
fists
mov
shl
clc
lret
sub
push
dec
jo
test
outsb
push
jns
movsl
pop
and
test
jo
in
sarb
mov
loope
mov
nop
jle
and
int3
fcoms
pop
xchg
or
push
mov
stc
jge
pop
adc
xchg
insl
mov
inc
add
sub
or
insl
inc
add
inc
cmp
and
adc
add
push
stos
into
int
icebp
loopne
push
xor
lods
adc
sahf
loop
xchg
xlat
jg
xchg
pusha
lods
shll
pop
cli
add
mov
mov
jg
and
loope
pop
stos
aad
leave
and
sub
inc
adc
out
mov
shl
rolb
pop
mov
xlat
cmp
pushf
addr16
add
loopne
dec
cmc
inc
bound
jp
shrb
test
push
fdivrl
lret
imul
mov
movsl
push
lock
scas
add
sub
mov
pop
sbb
pop
and
loop
adcl
xor
mov
ret
daa
loop
hlt
jae
faddl
dec
add
test
jecxz
pop
int
or
mov
es
cmc
in
rcrl
pop
scas
inc
add
icebp
test
fildll
pop
xchg
rolb
scas
shll
mov
cmp
or
stos
sti
xchg
iret
loopne
test
das
pop
rorl
xorb
shll
push
push
mov
incl
adc
cmpsb
push
push
xchg
mov
stc
inc
cmp
inc
icebp
cwtl
push
mov
sbb
mov
sarb
jl
pause
mov
xor
lret
inc
mov
add
push
ss
dec
xor
gs
pop
ret
xlat
mov
mov
xchg
xor
es
push
in
pop
dec
adc
scas
lock
adc
cmp
pop
imul
lds
or
jge
pop
sbb
jl
fsubrs
mov
pop
faddl
rcl
ret
push
inc
cmp
and
testb
push
xchg
out
adc
cmp
out
xor
add
insb
mov
adc
sbb
imul
sub
push
inc
xchg
fmuls
movsl
sbb
push
jl
pop
cmc
into
mov
and
xor
out
jge
sub
cwtl
les
jg
push
repz
movsb
leave
jo
notl
fsubrp
mov
push
les
scas
call
in
xor
cmc
je
movl
mov
mov
add
iret
or
enter
and
stc
push
push
dec
or
movsl
jbe
mov
jecxz
outsb
cmpsl
sub
adcb
test
lds
push
mov
outsb
outsl
js
add
mov
mov
notb
sti
xor
mov
bound
mov
imul
mov
mov
cmpsl
adc
fidivrl
mov
and
cmp
cmp
insl
sbb
sbb
push
add
cmpl
js
and
xchg
rorb
movsb
push
repz
lret
and
outsb
sbb
push
adc
dec
fcom
sub
test
cld
inc
pop
sub
lcall
xlat
cmpsb
push
sub
hlt
lea
rcr
xor
inc
loope
mov
icebp
add
inc
mov
lret
sub
popf
stc
mov
sbb
out
mov
inc
ret
cmp
jb
push
mov
pop
add
mov
push
mov
clc
out
jb
loope
push
pop
dec
xchg
into
and
test
dec
stos
xchg
movsl
mov
dec
lea
aam
lea
xor
sub
pushf
rcl
add
sub
iret
aaa
add
int
pop
xchg
rol
outsl
in
push
mov
push
or
ret
xor
mov
push
add
sahf
or
in
jl
adc
mov
xor
cmp
repnz
or
rcr
xchg
mov
insb
jne
jno
sahf
cli
iret
iret
adc
push
test
adc
shlb
lahf
sbb
mov
xchg
mov
aas
mov
push
cmp
push
dec
lret
lret
pop
das
cli
add
mov
mov
iret
popa
outsb
xchg
cld
rcrl
imul
sbb
push
js
das
in
and
js
shrl
shrb
xchg
jmp
aas
jb
ljmp
js
pop
fwait
scas
scas
push
pushf
jp
std
repnz
ret
arpl
cmc
sbb
sahf
pop
jecxz
or
jp
mov
inc
mov
movsb
dec
fstpt
add
push
loopne
xor
xchg
cmp
scas
xor
xchg
ja
or
and
loope
cld
test
sub
aad
add
push
sarb
lcall
xor
pop
and
cmp
add
stos
add
xlat
jae
or
fidivs
lods
pop
lds
es
mov
jmp
inc
or
mov
dec
ljmp
test
pop
data16
loope
mov
inc
jl
icebp
in
or
aas
xor
mov
roll
adc
insb
out
ja
in
adc
dec
jecxz
clc
push
and
pop
arpl
sbb
xchg
les
lds
leave
stos
popa
xor
andl
outsb
movsl
mov
mov
int3
outsb
dec
cli
lea
mov
push
xor
mov
cmp
or
repnz
xchg
out
inc
pop
lcall
cmpb
int
dec
xchg
xor
jo
stc
mov
mov
jae
cmc
and
cmc
push
out
aad
mov
mov
addl
icebp
call
push
in
lock
loope
dec
mov
push
fistpl
jbe
adc
add
pop
mov
es
add
inc
push
out
and
popa
inc
sub
int3
loop
loopne
cmp
outsb
adc
das
int3
outsl
cmpsl
xor
push
jae
repz
xchg
xor
xchg
adc
test
push
sbb
icebp
sar
cmp
ja
fmulp
mov
or
ja
pusha
test
imul
pusha
cmp
push
je
fwait
outsb
in
insl
push
cmp
mov
mov
cmp
sub
clc
jbe
gs
mov
pop
call
sti
jae
sbb
scas
and
jge
xor
fstl
adc
adc
or
dec
pop
js
fwait
push
nop
fistps
aad
lods
push
jmp
dec
fildl
mov
insb
shl
pop
cmpsl
sub
in
roll
out
cmp
and
mov
mov
ljmp
jle
pop
inc
add
idivb
pop
mov
fidivs
xor
sbb
cmp
or
cmc
inc
int3
imul
rorl
fsubrs
xor
add
xor
leave
xlat
fwait
jge
xchg
xchg
das
add
sbb
aas
sbb
mull
push
sub
pop
int3
scas
cwtl
movsb
clc
xor
fstl
xor
and
fs
test
and
push
loope
cld
inc
dec
lods
or
mov
ud0
leave
adc
movsb
jne
out
sbb
sbb
xor
movsl
adc
mov
push
dec
test
add
mov
icebp
xor
jp
inc
inc
xchg
clc
sbb
jne
enter
enter
fcom
mov
leave
push
sub
mov
out
mov
jb
mov
bound
lds
push
inc
dec
movsl
xor
or
push
out
js
inc
add
je
jnp
and
in
adc
mov
mov
sbb
jae
jbe
adc
icebp
pop
ljmp
mov
sub
sahf
cld
cs
add
xchg
lods
push
adc
mov
pusha
andl
jbe
dec
loope
push
dec
loopne
dec
inc
and
in
xchg
out
bound
jnp
push
adc
lock
loopne
add
push
sbb
or
cmpsl
mov
pop
test
div
xchg
push
arpl
sub
shl
scas
ret
pop
cmp
arpl
dec
hlt
daa
xor
lock
dec
stos
or
mov
mov
movsl
fstps
push
cli
mov
xchg
xor
xchg
mov
xchg
ret
stc
scas
je
ja
inc
jnp
test
insl
cmp
ja
push
push
adc
or
mov
xchg
adc
xchg
pop
test
lahf
dec
add
add
inc
push
pusha
xor
enter
push
sub
push
sbb
movsl
std
and
fwait
or
test
roll
xchg
cmp
inc
dec
inc
fnstcw
pop
dec
adc
jns,pt
cmp
jge
fcoml
xor
and
fwait
lar
cs
aas
adc
iret
ja
mov
adc
mov
jno
mov
add
push
sti
xor
pop
sub
push
add
dec
cs
insl
jo
jbe
fstl
sti
push
mov
jg
lcall
leave
addb
pop
shrb
repnz
es
xchg
inc
sbb
mov
shr
add
xchg
cmovl
insl
std
dec
iret
sub
adc
jmp
cwtl
inc
faddl
sti
cmp
xchg
mov
mov
out
mov
into
stos
in
pop
mov
test
test
or
lret
or
lock
or
testb
mov
movsl
jnp
jle
jbe
mov
rcl
inc
lock
jmp
insb
rolb
jge
es
or
jmp
xor
inc
and
jg
push
or
test
mov
out
xchg
jl
mov
ja
add
sbb
cmc
cli
lds
sub
ja
fsub
lret
push
mov
jmp
lods
outsb
pop
xchg
or
bound
movsb
in
mov
adc
add
les
mov
movsb
push
fimull
imul
dec
pusha
adc
fisubl
push
lret
and
rcrb
pop
jnp
mov
int
lret
sbb
outsl
push
xor
dec
mov
and
dec
push
pop
test
cmp
ss
inc
inc
and
sbb
notl
addb
std
pop
mov
cmp
push
mov
cmp
stos
pop
in
xor
aam
lahf
mov
cmp
adc
push
test
adc
push
movsl
ret
cmp
lret
int3
add
es
lret
xorb
dec
jg
push
fwait
push
jo
jae
cmp
icebp
mov
out
push
std
sub
cmpsb
daa
jp
shlb
push
packssdw
in
push
cmpsl
je
jge
or
dec
fchs
test
repz
lods
fwait
lahf
ljmp
lcall
and
xor
push
les
fst
in
inc
mov
out
nop
inc
mov
gs
stos
xchg
xor
mov
aas
sub
out
mov
xchg
pushf
repnz
and
stc
mov
mov
sahf
sbb
subb
xor
je
loop
and
dec
xor
xchg
imul
lods
mov
out
testl
push
inc
and
and
cld
repnz
or
pop
aam
mov
popf
push
clc
lcall
les
incb
jmp
and
push
lods
inc
pop
or
mov
dec
in
das
rcr
xor
inc
call
jmp
es
inc
xor
mov
xchg
mov
sub
cmp
ret
gs
fsincos
out
test
lret
pop
jp
popf
movb
aad
fadd
push
ja
arpl
sub
inc
fdivrs
cltd
movsl
bound
inc
xor
jmp
cmp
fcoms
xor
or
aas
pushf
in
push
popl
mov
jg
push
xchg
jns
jl
ja
dec
mov
sub
data16
shll
mov
dec
arpl
mov
xadd
push
mov
inc
push
les
adc
or
push
mov
clc
mov
inc
nop
lds
dec
sub
mov
lret
cmp
pop
rorl
xchg
imul
xor
out
dec
and
notl
mov
lock
inc
inc
xchg
mov
pushf
dec
xor
jnp
cmc
jne
jge
outsb
xchg
pop
xchg
stc
push
mov
xchg
or
sbb
mov
push
cmc
cmp
pushf
xchg
cmp
jbe
jle
ret
push
jmp
aas
mov
mov
mov
movsl
mov
jns
or
xchg
xchg
push
mov
ds
test
lcall
pop
adc
ret
or
xchg
mov
inc
movb
jo
andl
lcall
mov
mov
mov
pop
je
test
xor
sbb
lds
jg
jecxz
sahf
and
xor
jne
iret
or
xchg
dec
and
pop
imul
lock
mov
fisubrs
xchg
jbe
push
adc
insb
in
out
das
setae
in
repz
push
pop
pop
mov
loop
and
or
pop
repz
call
jge
data16
fld
cmp
mov
jae
jmp
cmp
aaa
sarb
xor
lea
xor
push
jae
repz
and
nop
inc
dec
jo
fsubrs
mov
sarl
int
add
xchg
inc
cmp
sub
cmp
pop
mov
inc
jge
xchg
arpl
adc
jmp
push
add
adc
mov
cmc
jae
lock
loopne
mov
loope
add
add
cmp
pop
or
insb
test
sub
lret
decb
int3
sub
jns
xor
or
jae
test
sub
or
jno
xchg
xchg
cmp
movsl
mov
xor
cmp
mov
clc
inc
jbe
mov
stos
hlt
outsb
mov
orb
inc
mov
icebp
frstor
xchg
aad
and
or
cs
frstor
push
xchg
and
adc
push
sbb
mov
ljmp
in
adc
cmp
jmp
cmpsl
pushf
xor
pop
sar
loope
lods
jbe
push
out
fnclex
js
adc
mov
xor
lcall
shlb
and
loop
jg
repz
in
jle
pop
dec
jge
test
adc
aad
add
scas
xor
jg
push
fisttpll
pop
xchg
daa
pop
mov
aaa
jmp
jl
inc
add
jg
jmp
in
sahf
xchg
and
loop
jbe
lret
or
mov
mov
lock
jecxz
sbb
cwtl
loop
cmp
fisttpl
mov
loop
push
mov
xchg
add
pop
or
jl
stos
ret
loopne
pop
cmpsb
push
jl
jl
cmp
xchg
lods
outsl
div
sbb
or
mov
mov
mov
mov
adc
or
pusha
mov
lcall
ss
clc
adc
jp
jbe
xor
test
mov
mov
mov
adc
ret
ret
xor
mov
mov
mov
xchg
mov
test
cwtl
push
lods
bound
pop
push
cmpl
push
dec
dec
jne
mov
jbe
addl
and
xchg
cmp
pop
gs
pop
sub
and
mov
popf
mov
movsl
outsb
cmp
and
mov
inc
stos
stos
lcall
iret
sbb
bound
pop
mov
ret
inc
insl
arpl
push
sub
js
cld
mov
mov
lea
ja
adc
jecxz
sbb
loop
sbb
push
dec
clc
outsb
sbb
cmp
das
mov
xchg
enter
pop
cmp
lods
movsb
xor
in
jg
lahf
pop
outsl
fimull
mov
mov
push
mov
outsb
dec
sbb
scas
call
jmp
call
jmp
cmc
push
mov
jnp
leave
mov
idiv
pop
je
test
push
fldl
and
faddl
pop
shl
pop
icebp
shll
mov
jp
and
aaa
cs
cs
adc
push
xchg
jle
dec
jle
adc
jbe
sbb
mov
push
dec
xor
jmp
inc
dec
adc
add
dec
mov
sbb
fisubl
xor
fiaddl
pop
and
dec
pop
shrl
lods
xchg
dec
add
call
and
aaa
lret
inc
arpl
insb
lods
or
sbb
jo
outsb
sti
mov
roll
fmull
inc
inc
jmp
jno
into
pop
sub
mov
rclb
insb
lods
cli
js
in
add
imulb
sahf
outsb
fcoms
mov
mov
jp
std
mov
stos
cmp
lret
clc
iret
out
jo
push
ss
cwtl
mov
push
aas
mov
push
and
pop
sti
push
lret
insl
jb
pop
gs
push
imull
mov
mov
xor
pop
or
incb
test
je
sahf
mov
adc
pop
dec
push
pop
mov
dec
lret
fwait
shll
dec
mov
jecxz
leave
shll
lea
repz
arpl
shll
dec
popa
es
iret
in
fsubs
jns
jmp
jecxz
push
imul
gs
and
mov
lret
fisttpl
popa
adc
jge
gs
sub
test
or
arpl
data16
out
popa
xchg
and
aaa
mov
push
or
adc
push
adcb
pop
rorl
shll
popa
inc
sub
sub
das
in
jg
mov
xchg
sub
stc
movsl
sub
push
insl
push
dec
shlb
jbe
mov
inc
inc
sti
mov
and
out
call
das
dec
and
cvtdq2ps
mov
insb
adc
push
les
bound
insl
jmp
xor
mov
xor
call
out
into
and
cs
call
fdivr
pop
push
sbb
mov
shrl
sahf
cmc
cmp
nop
pop
test
les
int3
jg
fst
insb
cmp
ds
cmc
loope
add
xorl
iret
in
stos
stc
mov
clc
nop
test
aam
outsb
sub
mov
push
fimull
sbb
mov
sarl
lods
lcall
cmpsb
ds
std
xor
mov
jo
test
stos
pop
in
push
movsl
fists
repz
scas
out
stos
call
jmp
push
out
outsb
push
loope
shlb
xchg
in
enter
cmp
add
mov
pop
dec
mov
xor
cmp
adc
cmp
aaa
jo
jo
pop
dec
sti
xchg
rcr
mov
mov
in
push
cmp
cmpsb
jmp
and
fisubs
sbb
mov
sub
add
in
or
into
enter
xchg
cmp
and
sbb
inc
insb
push
out
push
scas
mov
pushf
aad
mov
shrb
mov
sarb
adc
cltd
insb
jg
arpl
jmp
sbb
daa
lods
mov
clc
pop
int3
pop
popa
push
cltd
pop
pop
xchg
mov
ret
pop
mull
dec
add
js
ret
pop
xchg
das
enter
dec
xor
fadds
adc
mov
sub
hlt
mull
ret
cmp
mulb
bound
xor
gs
fimull
pop
xor
jge
sbb
popf
jl
mov
cmpl
addr16
fists
mov
aad
fidivl
mov
sub
cmp
stos
addr16
jecxz
fidivs
fisubl
out
dec
xorl
sub
inc
fdivr
cwtl
cmp
sarb
out
in
lds
cmpsl
ret
pop
jl
dec
jb
cs
dec
imul
cmp
fisubs
das
jbe
dec
ss
fidivrs
stos
mov
cltd
add
lea
adc
fwait
test
push
jle
nop
jns
add
in
mov
adcb
stos
jae
jne
push
mov
addb
out
mov
mov
inc
in
dec
pop
adc
imul
sbbb
cmpsb
stc
mov
add
jmp
fisubl
jae
outsb
ret
mov
sbb
stos
dec
cmp
and
fmull
jmp
or
jp
push
sbb
jo
test
sahf
and
cmp
push
outsb
clc
clc
jb
movl
sbb
daa
or
xchg
incb
clc
js
sahf
push
lds
cmp
add
rcrl
push
inc
xchg
cli
cli
or
stos
popa
cmc
imul
or
xlat
or
loopne
and
dec
cmpb
call
inc
xchg
jbe
inc
pusha
push
imul
sbb
add
push
push
sbb
into
cmp
add
and
or
xlat
ror
push
add
fnstsw
repz
sti
ret
insb
stos
push
xor
sbb
cli
add
xchg
dec
cld
data16
adc
mov
insb
lock
jnp
popf
sarb
sub
sub
cmpsb
sub
rcr
outsb
dec
movsl
fiadds
fst
inc
arpl
push
lea
xchg
jmp
and
cmpsl
xor
insb
dec
or
ja
ds
aaa
xchg
adcb
pop
ss
push
mov
xchg
stos
aad
adc
or
out
cli
test
jl
mov
push
mov
std
pop
or
jp
lret
dec
sbb
sub
add
mov
cmpsb
lds
push
add
xchg
cwtl
push
sti
clc
out
in
dec
pushf
loopne
leave
addr16
shl
cmpsl
or
pop
fwait
jns
scas
mov
adc
loope
lods
cmp
inc
imul
or
iret
das
fwait
and
mov
add
loope
add
dec
lea
movsb
sub
stos
cmpsb
mov
mov
xchg
mov
inc
lahf
pop
mov
hlt
pusha
pushf
xchg
push
push
xlat
mov
cltd
xchg
cs
add
push
adc
sub
inc
cmpl
cmp
jl
or
cmc
ds
ret
out
lahf
inc
or
inc
cmp
ret
repnz
jp
lahf
sbb
jb
push
lods
mov
mov
js
mov
inc
leave
stos
pop
shr
hlt
push
sbb
out
xchg
sbb
data16
mov
andb
mov
mov
adc
decb
push
add
inc
pusha
clc
cli
insl
mov
cld
addr16
jno
popf
push
nop
mov
imull
add
pop
in
cmp
int3
mov
cmc
adc
xor
mov
and
cmp
mov
call
push
sbb
fs
out
mov
loop
inc
xor
add
sbb
mov
in
popa
nop
std
jmp
pop
stos
test
popa
dec
das
jmp
inc
inc
adc
fistpll
test
and
sub
lret
js
imulb
imul
mov
pushf
xchg
daa
loopne
arpl
push
cltd
pop
push
out
jno
inc
mov
push
les
xchg
ficoml
sub
add
dec
push
push
sarl
ret
or
ljmp
in
flds
mov
adc
test
mov
ja
dec
inc
jmp
imul
shl
push
lods
lea
mov
movsb
cwtl
scas
nop
pop
das
sub
clc
fsub
or
out
pop
test
in
lea
mov
movl
lcall
dec
fsubs
rclb
lret
lods
xchg
mov
adc
stos
xchg
sbbl
and
dec
out
push
mov
cmc
sub
mov
popf
in
out
pop
movsl
in
push
lds
xchg
jp
stos
mov
xchg
add
rorb
repz
int
sub
add
test
xchg
fs
jle
pop
mov
inc
out
or
lock
sub
cmp
adc
push
inc
outsl
pop
fdivrl
out
aaa
mov
mov
scas
xchg
out
jle
fs
mov
mov
leave
xor
scas
mov
sub
mov
fdivrl
xor
hlt
in
xor
adc
or
or
sarl
mov
mull
nop
imull
xlat
test
mov
in
lahf
pop
dec
push
inc
mov
int3
dec
ds
push
mov
mov
ret
mov
ja
into
push
xchg
push
push
stos
and
jp
adc
jo
dec
mov
sbb
mov
mov
sbb
cmp
mov
in
jns
dec
aam
pop
cltd
mov
out
in
cmp
or
mov
dec
lcall
cmc
out
pop
mov
test
jp
pop
idivl
fnstsw
ds
push
out
out
rcl
test
mov
and
jnp
loopne
pop
inc
lahf
adc
outsl
add
das
test
cmp
jae
loop
xchg
sbb
push
or
mov
mov
stc
je
ret
mov
repz
push
aad
fwait
cli
pop
jl
xchg
jmp
mov
mov
arpl
ret
jb
aam
aam
nop
mov
push
add
mov
cmp
js
or
dec
pop
ds
loop
jns
add
push
sbb
xor
add
into
icebp
push
shrb
add
loopne
xchg
outsl
bound
iret
faddl
les
outsb
in
sahf
push
testb
sub
sbb
mov
push
arpl
outsb
scas
xorl
jbe
inc
sbbl
nop
fwait
xchg
push
sub
mov
pop
mov
scas
nop
mov
mov
xor
ret
add
clc
mov
jns
xchg
adc
popa
jo
clc
bnd
hlt
fxch
sub
pop
jle
call
ds
rorb
sbb
inc
cltd
sbb
pop
mov
stos
xchg
mov
sbb
fsub
jp
add
loopne
jle
hlt
fiadds
xor
xchg
in
divb
popf
xchg
push
arpl
daa
aas
xchg
mov
push
pusha
cli
adc
mov
mov
fdivrs
and
jl
jecxz
and
mov
jmp
hlt
mov
enter
dec
sarl
xchg
fwait
sub
inc
in
jp
in
sbb
cmp
cmpsb
push
inc
push
mov
adc
shl
aad
sbb
into
add
mov
push
inc
cld
cmp
xchg
mov
cmpsl
push
inc
rol
ljmp
or
testb
testl
inc
das
and
inc
cmp
cmp
sub
in
pand
jno
pop
in
and
iret
out
in
test
pop
sbb
mov
inc
fstl
adc
xor
out
rcrl
test
push
sub
push
or
and
ja
jns
xchg
call
mov
or
popa
jg
xor
ss
sbb
int3
and
mov
jno
adc
mov
scas
sub
pop
adc
loope
push
les
cmp
movsl
stc
bound
hlt
inc
mov
mov
loop
pop
inc
ds
push
sbb
rcll
lahf
in
adc
and
jmp
push
or
cmp
inc
fdivrp
and
dec
and
pop
dec
dec
insb
and
or
movdqa
dec
dec
pusha
clc
stos
subl
fnclex
jle
and
mov
es
ja
je
inc
dec
xor
stc
fwait
pop
clc
ja
into
xchg
cmpsb
pop
pushl
fwait
mov
and
fbstp
inc
jl
clc
dec
mov
sbb
sub
ret
jp
lock
sub
add
xor
xchg
call
mov
hlt
bound
push
mov
lret
sti
arpl
push
fstpt
cltd
push
mov
dec
and
xchg
sub
cwtl
iret
bound
or
xchg
sahf
inc
push
pop
push
incb
pop
xor
loope
shrl
inc
sbb
mov
scas
mov
fcompl
nopl
add
mov
dec
jp
and
gs
mov
xchg
ja
fwait
sub
or
adc
out
jmp
sbb
in
xlat
jno
scas
xchg
nop
mov
xchg
roll
into
sub
cmp
jbe
enter
push
mov
shlb
mov
push
aas
incl
lret
out
adc
mov
aas
lock
jle
mov
dec
iret
testl
shlb
in
sbb
stos
stos
popa
fcomps
add
pop
xor
jge
test
push
in
insl
pop
jne
push
fld
and
rorl
dec
stos
xor
sbb
aaa
movsl
add
or
jmp
fsubr
fidivrl
insb
pop
lods
dec
sbb
popa
cmpsb
add
jae
sbb
cmpsb
dec
fiadds
shl
xchg
cmp
pushf
in
fwait
sub
mov
fwait
pop
cli
inc
int3
xlat
cmpsb
enter
or
fwait
xor
fwait
std
inc
or
jg
or
pop
test
sub
addr16
push
dec
std
and
jle
iret
aad
dec
mov
divb
rcrb
popf
bound
inc
inc
add
add
std
lret
out
cmp
sahf
out
pop
pop
aas
and
je
negl
popf
sti
sub
lea
ffree
test
mov
loop
test
in
sub
out
arpl
sbb
push
sahf
imul
xor
idivb
sti
mov
fwait
icebp
shrb
lods
mov
or
in
fimuls
mov
scas
push
in
push
out
sub
cmp
bnd
push
mov
fistps
pop
add
out
dec
mov
add
jl
or
and
adc
stos
push
aas
inc
mov
mov
xchg
cli
and
lods
sbb
xchg
dec
fmuls
fbstp
hlt
pop
outsl
xchg
adc
push
push
mov
push
jb
inc
or
test
in
stos
ljmp
mov
leave
cmp
push
adc
sti
inc
loop
mov
mov
repz
out
fimull
stos
loope
adc
mov
ficomps
add
cmp
imul
popf
jne
popf
jge
lahf
mov
ss
xchg
adc
das
add
fs
in
jo
jl
sub
test
pop
xchg
mov
scas
mov
shrd
and
xchg
not
pop
inc
lret
mov
cmp
ja
jle
xor
add
add
in
sahf
int
mov
data16
push
jno
jge
jns
out
in
faddp
xchg
inc
mov
push
leave
outsb
fstps
jecxz
fs
adc
inc
mov
test
jge
flds
in
lock
sahf
xchg
pop
mov
pop
imul
adc
push
cmpsl
ret
daa
jne
mov
ljmp
nop
dec
lea
pop
push
jno
incl
push
mov
stc
and
adc
mov
insb
push
lods
arpl
lods
mov
pop
dec
aas
stos
leave
or
adc
fwait
jg
insb
mov
xchg
loope
or
dec
inc
xor
push
inc
pushf
out
inc
mov
cltd
mov
incb
xlat
and
push
mov
dec
mov
adc
arpl
sbb
aam
cmpsl
jb
hlt
arpl
mov
mov
and
cmpsl
cmpsb
inc
stos
nop
inc
clc
mov
ret
fbstp
cmp
hlt
int
loopne
js
mov
jbe
dec
test
cmp
dec
lods
add
addb
mov
xchg
stc
in
loope
iret
shrl
push
adc
leave
adc
push
jg
das
or
out
xchg
jl
push
inc
stc
adc
sahf
jle
popa
inc
xor
jae
dec
cmp
mov
inc
nop
test
cmp
addr16
fdivrl
popa
roll
push
xchg
repz
and
hlt
jo
xchg
cmpsb
rol
inc
push
out
pusha
loopne
push
shlb
pop
das
inc
cmpsb
xor
jmp
fcmovu
repnz
sbb
daa
in
pop
outsl
dec
and
pop
jns
pop
cmp
lahf
jo
jmp
push
mov
xchg
pushf
js
ret
cmp
pop
int3
mov
mov
cmp
mov
xor
sahf
add
scas
dec
xor
shrb
or
test
fwait
xchg
lcall
pushf
and
xor
xchg
cwtl
pop
lcall
push
adc
mov
loop
movsb
iret
imul
roll
les
dec
stos
jb
in
adc
inc
cwtl
mov
mov
in
sub
sbb
mov
jbe
mov
adc
test
aam
cmpsb
push
enter
mov
jle
mov
push
call
lret
aaa
scas
mov
loop
sub
pushf
lods
add
xor
icebp
sub
mov
arpl
push
sbb
xor
jno
arpl
pause
mov
insb
repz
aas
call
subl
cmp
inc
mov
fadds
int
stos
xchg
sbb
mov
and
add
int
shlb
call
pop
push
jnp
fcomps
mov
int3
cmp
fcmovb
subb
xor
jnp
xchg
stos
jbe
ret
aas
xchg
in
push
mov
inc
mov
aaa
sbb
gs
jns
les
push
fmul
lcall
adc
adc
push
or
bound
or
aad
sbb
daa
out
sbb
enter
push
hlt
fcoml
insl
test
insl
lock
adc
and
add
xor
es
and
add
lds
test
ret
add
outsl
mov
call
push
sub
lret
test
xchg
jg
scas
and
stos
ss
and
or
imul
int
mov
lret
out
sti
arpl
dec
mov
sub
add
adc
cmp
fldl
cmp
mov
sub
cltd
dec
adc
push
adc
ljmp
adc
pop
push
scas
dec
jno
jge
test
pop
xor
dec
js
loop
dec
addl
push
das
cmp
or
push
dec
leave
cmpsl
sahf
mov
test
stos
dec
ljmp
out
sbb
pushf
push
inc
lock
scas
mov
aas
xor
stc
mov
sbb
or
pusha
push
ljmp
xchg
popf
sbbl
lret
adc
leave
pop
lret
xchg
enter
pusha
rcrb
stc
div
pop
fwait
inc
pop
in
lcall
xor
int
dec
loope
out
pop
enter
es
pop
jmp
or
xor
or
sub
fstl
mov
and
out
scas
lret
cld
lret
mov
mov
fidivrs
inc
mov
dec
bnd
jg
imul
test
inc
mov
jmp
int3
movsb
dec
dec
out
loopne
aam
sub
fstl
rcrb
cltd
mov
mov
fnsave
sbb
xlat
lea
leave
popf
dec
fisubrl
es
mov
and
fildll
aaa
cmp
int3
xchg
and
jae
jmp
dec
push
fsts
mov
fisttpll
push
mov
in
push
jbe
fldt
mov
sbb
movsb
lds
push
cmpsl
xchg
jbe
or
andb
jp
mov
or
ja
call
sbb
stos
xor
adc
mov
dec
cmp
jmp
stos
xchg
jnp
cmp
in
shlb
adcl
ret
inc
adc
dec
sub
sub
mov
inc
clc
lahf
rcl
jg
xor
loope
mov
cmp
inc
test
stc
adc
xor
out
pop
pop
lods
jg
loope
jmp
out
adc
jmp
in
mov
sti
push
std
or
js
push
cmpsl
adc
or
push
fildll
loope
mov
mov
movsb
add
sbb
xchg
push
aad
ficoms
or
add
xchg
mov
mov
pop
pop
popf
mov
push
cltd
push
jno
je
and
dec
aaa
loope
je
rclb
push
rcll
stos
int3
popa
or
stc
lods
stos
mov
jg
mov
cmp
fldcw
push
or
mov
imul
adc
popa
mov
and
pop
insb
jl
fs
sarl
rolb
nopl
mov
jle
lea
jmp
test
inc
mov
aam
repnz
notl
dec
add
lahf
test
jae
or
ret
mov
adc
push
jne
mov
rclb
fisubrs
or
sub
push
push
lahf
add
mov
std
test
mov
push
adc
mov
fsubrl
add
ja
cld
outsb
sbb
cmpsl
xchg
fildll
divb
dec
jns
dec
out
push
push
adc
jne
xchg
and
mov
stos
push
dec
push
aad
shr
outsl
aaa
fcomp
rcrl
call
out
mov
xchg
xor
xor
fwait
jp
adc
rcrl
cmp
mov
mov
and
stos
movsb
int3
xlat
jmp
and
sbb
into
dec
pop
jno
or
adc
xor
adc
and
mov
sub
ja
or
lea
shll
lds
inc
sub
clc
pushf
dec
testl
pop
cmpsl
or
dec
sbb
call
fstps
stos
daa
pop
cmp
pop
dec
adc
push
test
mov
shll
adc
pop
stos
stos
test
pop
iret
test
movsl
cmp
adc
imull
jl
pop
xorl
call
xchg
das
xchg
jmp
popf
aaa
subb
shll
mov
stos
mov
inc
sbb
jbe
jmp
push
xchg
sub
dec
mov
mov
insl
iret
sub
mov
mov
pop
dec
loop
mov
imull
insl
dec
iret
icebp
jecxz
lods
fimull
scas
sub
sub
in
xor
pop
adc
orl
in
jne
je
divb
push
test
loopne
xor
negb
and
idivl
rdpmc
test
push
rcrl
loop
jg
sbb
in
inc
test
mov
xchg
xchg
mov
insl
xchg
pop
jecxz
leave
out
inc
leave
sbb
rorb
cmp
into
jns
pop
aas
cmc
jg
xor
mov
sub
out
push
mov
pop
and
arpl
pusha
xor
leave
jns
cmp
sbb
int3
push
lock
xor
cmpsl
aam
loope
or
dec
push
ss
adc
popf
push
mov
xchg
push
sub
jnp
xchg
mov
jnp
mov
adc
mov
jnp
scas
test
clc
int
add
lock
mov
hlt
outsl
ljmp
xlat
inc
or
jmp
packssdw
mov
mov
xchg
xor
xor
sbb
push
hlt
add
stos
dec
arpl
mov
mov
xor
add
pop
es
inc
or
push
cmc
daa
fadds
jb
pop
outsb
xorl
lcall
mov
xchg
pmulhuw
mov
or
rcr
pusha
lcall
in
mov
aas
out
shll
jns
mov
sti
shrb
daa
loop
mov
xor
fstps
cmp
lods
xor
mov
or
lret
inc
jb
jecxz
xor
jle
lcall
add
pop
push
sbb
sub
aad
add
idivb
jle
aas
and
leave
aaa
add
cmpsb
movsb
sub
push
adc
sbb
mov
add
pop
xor
lret
jo
in
mov
into
cwtl
daa
xchg
pop
stos
cmp
in
push
dec
jnp
jbe
sub
mov
fmuls
adc
xchg
sub
mov
jl
rol
sbb
xchg
gs
aam
es
and
inc
add
jb
lods
rolb
fstps
pop
jge
push
int3
pop
mov
out
mov
int3
inc
push
or
xchg
adc
scas
in
mov
mov
sub
inc
and
outsl
inc
rorl
jne
sub
pop
push
in
jne
movsb
push
ljmp
jmp
int
test
jg
xor
testl
aad
das
bound
into
mov
mov
int
jge
ret
pop
js
sahf
mov
cmp
std
rorl
ljmp
xchg
insb
imul
or
or
incl
ret
movsb
sbb
mov
arpl
sub
pusha
insl
hlt
sub
lods
cld
sbb
movb
das
cmp
daa
insb
repnz
dec
mov
push
dec
mov
imul
inc
sarb
lds
inc
test
mov
addl
or
pop
std
xchg
repnz
fldenv
mov
cmp
inc
adc
pop
or
aam
xchg
test
in
movsb
ja
das
jo
mov
cmpsl
xor
inc
scas
nop
jmp
jno
loopne
out
mov
sub
cmc
mov
or
mov
movsb
hlt
je
push
jmp
pop
xor
test
inc
inc
push
loop
cwtl
popl
sub
es
cli
movsl
xchg
or
cmp
stc
data16
sub
sub
gs
xchg
mov
movsl
xchg
inc
xor
shlb
xchg
jno
outsl
stos
cwtl
jbe
add
adc
pusha
test
mov
out
jecxz
leave
sbb
pop
cmp
mov
xchg
mov
mov
insb
and
xor
mov
sbb
xchg
loopne
ret
add
fldcw
cmp
lods
out
shll
flds
stos
cmp
out
inc
dec
orl
xchg
int
mov
in
imul
outsb
scas
and
dec
arpl
sub
repz
cmp
inc
outsb
pop
xchg
rcl
add
cmp
sub
mov
cmpsl
mov
lea
fmull
ja
xchg
rclb
rcr
xlat
cmpsb
xor
test
push
push
imul
mov
pop
jno
sbb
pop
sarl
int3
lret
cmp
les
imul
out
dec
aaa
popa
xor
jg
mov
or
and
fwait
pop
fwait
in
test
mov
pushf
in
and
fmuls
repz
test
xchg
push
hlt
mov
mov
test
fwait
outsb
movsl
mov
or
lods
clc
stc
pop
lds
mov
stc
mov
ret
mov
fdivrl
mov
clc
push
fdiv
lret
mov
fwait
lret
test
and
pop
mov
add
mov
decl
and
popf
jp
stos
insl
mov
clc
in
dec
adc
pop
jns
adc
sub
pop
adc
std
repz
fcmovb
xchg
std
int
icebp
mov
sub
add
push
jne
xor
fstps
mov
cwtl
ja
and
cmp
adc
xor
dec
lods
notl
outsl
dec
sbb
sub
cld
push
jbe
mov
into
test
fisubrs
and
push
pop
shrl
imul
pop
ja
mov
dec
lahf
and
push
pop
pop
aaa
sar
call
stos
movsl
mov
mov
scas
jne
sti
push
add
movsb
cltd
imull
enter
lock
outsb
fldenv
xorw
out
sbb
add
je
xor
aas
and
pop
sbb
jno
lahf
gs
mov
les
push
push
adc
imul
into
aam
sbb
jp
xor
pop
mov
add
cwtl
mov
lcall
int3
or
dec
in
lods
lret
adc
das
movsl
insb
push
mov
sbb
jbe
stos
push
pop
push
add
icebp
add
adc
dec
sbb
or
dec
ror
add
mov
adc
xor
in
mov
or
push
cwtl
addr16
pushf
aas
ror
std
js
jle
jg
adc
jbe
lock
subl
cltd
stos
cmpsb
inc
arpl
shlb
loop
mov
test
pop
incl
add
adc
pop
aam
fs
add
dec
fsubrs
ja
mov
stos
flds
push
sub
movsb
jne
mov
ds
fisttps
inc
cmp
out
outsb
into
xchg
or
mov
push
mov
xchg
cmpsl
cmp
xor
xor
adc
hlt
sbb
pop
pop
jg
repnz
adc
push
jmp
cld
and
xchg
shll
cmc
scas
add
insl
jp
movsl
adc
cld
jns
orb
mov
out
gs
movb
mov
nop
test
jmp
mov
repnz
sbb
inc
jo
outsl
inc
mov
inc
pop
test
aas
pop
pop
test
or
mov
cmpsl
imul
push
dec
stos
mov
movsl
cmp
jl
cmp
xor
lods
mov
ret
movsl
sti
clc
xor
aaa
fcomip
or
outsb
sbb
dec
mov
shr
sbb
push
repnz
cmc
loope
icebp
pop
sub
in
js
and
stos
jne
test
lea
test
sti
sbb
cltd
gs
cmc
das
sub
adc
mov
data16
aaa
test
mov
xor
cmp
ret
data16
test
mov
mov
in
xchg
in
sbb
push
int3
sub
insl
inc
js
mov
adc
add
stos
inc
icebp
rorl
mov
fimuls
into
ss
adc
mov
aas
fwait
insb
aaa
mov
mov
or
addr16
ficompl
inc
add
cmp
les
mov
daa
dec
andb
and
jnp
sbb
adc
idivl
add
push
jp
lret
shrb
push
sub
dec
popa
fimull
jmp
cmpsb
dec
out
cmp
dec
daa
mov
cli
adc
pop
imul
add
into
adc
xor
out
add
popa
in
xor
mov
pop
int
push
aas
cmpsl
enter
and
xor
xchg
cs
in
repnz
sti
daa
add
in
test
push
push
add
mov
and
mov
and
inc
push
xchg
mov
out
mov
dec
or
std
int3
mov
addr16
in
cltd
adc
mov
add
outsb
or
mov
cmp
adc
int3
push
and
mov
movl
inc
out
sub
int
scas
jnp
iret
dec
mov
and
xor
ss
push
js
sub
xchg
loope
mov
jae
filds
sbb
adc
xchg
jp
ret
add
pop
xor
subl
add
sub
xchg
push
in
pop
test
mov
lds
lret
sub
fcomps
add
test
xchg
cmp
loope
add
mov
aad
repnz
std
push
shlb
sub
mov
or
inc
call
jge
lret
mov
pop
jbe
or
call
fcmove
bound
mov
push
xor
fnstsw
sbb
cmc
test
pop
add
pushf
mov
dec
mov
sub
shll
fadds
inc
fwait
adc
inc
cmp
mov
push
inc
dec
insl
sbb
xor
subb
fld
loopne
dec
adc
imul
push
inc
ja
or
and
push
adc
test
jge
cwtl
mulb
inc
inc
sub
loopne
pushf
cli
loop
inc
cmp
int
js
lea
gs
mov
mov
mov
mov
outsb
mov
ljmp
les
fiadds
enter
cmp
aam
mov
xor
inc
lods
cmp
push
fwait
mov
mov
push
incl
test
cmp
add
test
add
inc
repnz
inc
dec
dec
and
lea
rolb
jns
shl
dec
test
or
inc
mov
mov
sti
cs
mov
pop
sub
sbbl
mov
adc
test
lea
lahf
pop
lcall
clc
loop
sarl
test
sub
mov
adc
or
stos
inc
xorl
test
sbb
mov
fwait
xor
out
or
test
fdivrl
out
ret
push
sub
adc
mov
cmc
inc
shrb
inc
js
xchg
fimuls
inc
mov
scas
cwtl
dec
adc
cmp
push
stos
adc
fs
sub
cld
pushf
push
xchg
and
scas
gs
xchg
pusha
ds
repz
fsubl
repnz
pushf
pop
jo
sub
in
cwtl
pop
loop
iret
inc
insl
pop
xchg
adc
cmc
mov
ljmp
popf
adc
pop
hlt
sahf
inc
push
and
pop
jo
outsl
push
iret
imul
outsl
in
cltd
out
repnz
in
mov
push
in
mov
mov
adc
cltd
add
sub
inc
sbb
xor
rcrb
int
les
cwtl
pop
jecxz
or
mov
pop
daa
lret
cmp
fsubrl
das
jmp
or
push
shll
mov
jmp
jecxz
xchg
cltd
les
dec
jae
pop
adc
mov
andl
popa
pop
idivl
push
lret
cmpsb
mov
jae
push
xchg
sbb
push
or
sub
int
nop
stos
imul
jmp
shrb
movsb
out
cli
jecxz
lock
mov
dec
sub
sbb
sbb
adc
insl
outsb
xchg
stc
lret
out
sbb
mov
movsl
inc
out
inc
xchg
pushf
sbb
fisttps
add
cs
dec
cwtl
out
or
cmpsl
xor
iret
ffreep
mov
jg
out
xlat
adc
or
mov
mov
fs
icebp
or
mov
pushf
dec
adc
push
lret
aas
pop
xchg
popa
fnsave
sub
pop
pushf
ds
rcl
xchg
xorb
pop
int
int3
pop
jmp
and
push
jmp
mov
pop
mov
testb
dec
aas
pop
push
dec
mov
xor
aaa
inc
jge
push
cwtl
stos
addr16
xor
sub
push
dec
clc
mov
mov
and
cmove
lock
daa
fwait
mov
push
xchg
ret
aad
dec
lahf
mov
ret
mov
rorb
fwait
sbb
jecxz
xchg
xchg
hlt
insl
movsb
push
mov
adc
pop
xor
mov
rorb
jmp
cli
outsl
jge
test
pop
ljmp
icebp
lret
popf
mov
and
sub
lods
push
jae
dec
fisubl
mov
cmp
cmp
and
mov
hlt
xchg
xor
sub
data16
lock
dec
mov
pushf
push
push
and
daa
subl
dec
jecxz
sub
jae
out
cmp
sbb
pop
stos
inc
push
div
lcall
cmp
sbb
mov
mov
xor
rcrb
adc
imul
out
insl
into
pop
cmpl
test
sbb
rcrl
sbb
mov
add
fcmove
iret
frstor
mov
es
std
cmp
test
roll
mov
push
in
in
pop
scas
daa
stos
je
es
cmp
sub
pop
cmp
pop
repz
mov
xchg
inc
data16
aas
dec
je
add
pop
lds
jecxz
mov
cltd
adc
dec
aad
sti
ja
cmc
imul
xchg
mov
add
adc
stos
mov
xchg
setae
xor
mov
or
sarb
mov
sub
add
test
lds
jne
jae
jnp
push
inc
sub
mov
aaa
insb
mov
loopne
cltd
sub
lcall
movsb
iret
lods
sub
shll
push
jnp
test
rcrl
fwait
pop
adc
mov
psllw
inc
cmp
fisttpl
adc
stos
or
rolb
cmp
xchg
nop
lods
mov
idivl
xorb
push
mov
mov
clc
dec
std
int
adc
dec
jl
roll
daa
mov
stos
cmp
inc
out
rcll
push
or
mov
es
push
cltd
ljmp
mov
mov
ja
mov
xchg
idiv
jmp
mov
add
add
xchg
jb
cmp
cmp
rcl
fcompl
aam
pop
push
xlat
jp
xchg
inc
insl
mov
fsubl
add
movsl
sub
andl
icebp
xchg
adc
or
lcall
movsb
fldt
inc
loope
popf
loopne
arpl
popf
addr16
mov
cmp
cld
dec
sahf
cmpsl
add
xlat
lea
shlb
sub
mov
jle
data16
lods
clc
adc
and
insl
lret
cwtl
xlat
adc
cs
mov
pop
iret
mov
dec
push
insl
fs
xchg
gs
xchg
jbe
leave
add
cmp
jne
push
mov
cmpl
sar
push
push
xor
cmp
out
adc
insb
cmc
lea
mov
or
stc
aam
fabs
neg
cmp
and
addr16
add
ficomps
xlat
inc
fs
xchg
mov
cmp
loop
lret
jno
xchg
arpl
or
imul
add
out
or
gs
aaa
test
dec
lcall
xor
jp
jecxz
push
clc
or
mov
movsl
mov
mov
sahf
push
adc
jns
or
or
mov
adc
lods
sub
cmc
nop
sbbb
or
sbb
inc
loope
loopne
pop
mov
mov
stc
xor
es
ljmp
into
sbb
jnp
shrl
dec
mov
divb
int
in
jno
ficomps
jne
jo
jp
out
fistpl
add
xor
fidivs
or
out
mov
sbb
repnz
aaa
cli
cs
sti
mov
mov
mov
test
dec
push
jbe
inc
pop
mov
cwtl
ds
or
and
pop
mov
rdmsr
xchg
or
ficomps
scas
rcrb
jp
scas
movsl
jecxz
add
pop
outsl
pop
addl
pop
xchg
ja
cs
jmp
out
jecxz
out
push
or
cltd
inc
sub
dec
xlat
add
cmp
and
sub
inc
lods
inc
push
lds
aad
pop
cmp
in
xor
pop
inc
dec
orl
adc
in
fcom
mov
cmp
ljmp
call
mov
out
and
xchg
mov
out
sub
addb
dec
xor
cmp
out
das
sbb
push
add
fdivl
jp
pop
mov
lods
das
xchg
shll
and
movsl
sbbb
pop
ds
lahf
xchg
lcall
or
and
push
dec
test
cmpsl
or
sbb
inc
sub
inc
repnz
push
mov
sbb
dec
mov
test
leave
repnz
cmpsl
and
leave
add
add
cmp
scas
or
movl
pop
aaa
mov
addr16
rcll
mov
repz
aaa
adc
lcall
movsb
adc
add
mov
inc
adc
or
sbb
std
dec
lock
push
ret
xchg
int3
addr16
clc
addl
adc
aad
lret
movsb
std
cli
mov
push
jne
push
mov
cli
fmulp
shlb
imul
dec
sbb
enter
movsl
pop
inc
test
mov
pop
ljmp
cltd
mov
cwtd
sbb
jne
in
lds
ss
data16
push
stos
or
pop
mov
out
mov
addr16
sub
adc
push
push
fcmove
push
jae
mov
jns
movsl
push
or
adc
aad
addr16
insl
js
adc
pop
pop
rcll
cld
cmp
outsb
jl
sub
or
xchg
icebp
pusha
jmp
pop
and
das
mov
dec
fcmovbe
push
jb
and
fisttpll
xchg
in
push
arpl
xchg
mov
insl
jns
xchg
sbb
rcll
adc
adc
in
xchg
pop
inc
test
pop
mov
jne
adc
mov
xchg
pusha
fwait
mov
or
mov
and
xchg
inc
jne
popa
cmp
dec
lock
cmp
mov
and
lock
or
cs
mov
loopne
cmp
clc
test
cli
xor
xchg
icebp
push
stos
xor
cmp
pavgb
rol
add
stc
jnp
stos
hlt
mov
dec
lahf
xor
or
pushf
jg
inc
in
daa
add
fildl
add
aas
pop
cmp
iret
pushf
mov
push
mov
and
movsl
push
int3
hlt
xor
push
pop
mov
lret
jne
xchg
xlat
shll
ret
pop
enter
cltd
std
jge
sahf
push
insl
pop
jne
lcall
pop
mov
sarb
idivb
enter
mov
cmpsl
insb
call
sbb
fadds
push
add
adc
jecxz
pop
cmp
adc
jmp
je
jae
add
mov
movb
fstpt
out
push
les
inc
notl
repnz
aas
in
mov
leave
movsb
call
mov
cmp
jnp
xchg
pushf
jae
push
aad
popf
sti
cwtl
lock
jbe
jmp
out
xor
shrl
push
je
mov
lret
imul
push
pop
out
mov
push
dec
pop
hlt
stos
jnp
dec
inc
jle
shlb
enter
in
out
or
std
xor
sbb
sub
js
pop
arpl
add
xorb
add
mov
cli
sub
rcrl
mov
jnp
mov
shrl
dec
aad
pop
addb
es
addr16
mov
pop
in
pop
stos
cmpl
aaa
sub
jbe
add
test
pusha
adcb
stos
das
sarb
push
jae
inc
push
lahf
scas
mov
mov
pop
add
fidivs
mov
fldl
ja
in
leave
add
insb
subb
cmpsb
nop
out
xor
mov
pop
test
sarl
pop
cmp
out
hlt
xor
mov
jg
addr16
scas
and
push
fmulp
imul
and
mov
rcrl
cli
fldl
test
movsb
pop
lea
inc
sti
push
mov
mov
insb
pop
les
aad
pop
mov
mov
das
jmp
or
inc
pop
cld
into
and
roll
sub
lret
hlt
loope
pushf
pop
rcr
mov
jp
add
ficoml
ljmp
xor
jns
je
dec
sarb
cmpb
negl
outsl
mov
fists
mov
push
mov
and
xchg
mov
es
xchg
and
imul
adc
outsb
or
fisubl
pusha
rcrl
aaa
push
sbb
or
sti
sub
xchg
mov
push
jl
aad
sbb
inc
mov
xchg
or
aad
inc
or
add
push
aad
xorl
mov
bound
insb
call
cs
xor
add
push
scas
and
addl
push
pop
mov
or
scas
inc
xor
pop
pop
adc
sub
mov
mov
mov
or
movsb
add
fidivrs
cmpsl
dec
add
iret
mov
je
jg
pop
pop
adc
xchg
out
data16
ss
cmpsl
test
adc
xor
mov
icebp
stos
addb
scas
rcrl
out
addb
dec
lret
mov
test
pop
cmp
gs
js
mov
push
mov
loope
add
lock
cmpsl
mov
mov
inc
cmp
scas
lods
lds
pop
jl
aas
jbe
cmc
in
jle
push
mov
ds
imul
ficompl
xor
mov
ficompl
cmc
dec
mov
and
jae
dec
pusha
sub
mov
enter
inc
sbb
cmpsb
adc
fisubrl
popa
cld
xchg
sbb
or
sbb
mov
stos
mov
fisttpl
cmpl
mov
sub
jg
jbe
push
xchg
mov
out
mov
push
push
add
cmpsl
mov
xchg
bound
dec
movsb
or
jle
inc
ja
dec
je
mov
or
add
adc
sbb
mov
mov
pusha
daa
fnsave
sbb
xchg
bound
and
xor
les
in
jle
out
divb
sub
xor
ljmp
cmp
pushf
jnp
bound
jecxz
push
sbb
mov
xchg
or
out
fcmovnbe
pop
add
xchg
fcoms
and
roll
inc
pop
sbb
rorl
jg
cmp
notl
nop
mov
xor
pusha
xor
popa
insl
sbb
adc
ja
mov
sub
xor
nop
adcl
lock
push
push
lahf
fcomi
push
daa
inc
mov
mov
add
dec
imul
out
arpl
inc
cmpl
inc
mov
jae
xchg
sahf
inc
ljmp
iret
push
xor
pop
xor
clc
mov
sbb
push
mov
dec
sub
pop
mov
je
pop
cmpsl
cmpsl
inc
jmp
fwait
pusha
add
shlb
loopne
faddl
ds
add
nop
in
xchg
xchg
fstpl
inc
pop
fstpl
jmp
loop
push
and
int
popa
xor
mov
jae
or
sub
xchg
mov
shll
test
sub
mov
xchg
popa
push
jmp
loope
jecxz
subb
mov
cmp
into
movsb
push
mov
int
jecxz
push
or
test
mov
mov
add
mov
cmc
mov
in
jmp
fcmovb
xor
jns
pop
fs
ret
xchg
loope
scas
test
cltd
pop
cmp
add
mov
cltd
ds
int3
insb
mov
bt
xchg
cltd
jge
int
mov
pop
testl
mov
xor
ljmp
lret
adc
in
cmp
xor
leave
push
jae
icebp
nop
push
in
cmp
pop
std
cmp
clc
jae
and
scas
inc
lods
or
adc
insb
jb
gs
adc
jp
adc
test
in
sbb
cmp
std
lds
sarb
fs
lahf
pop
push
jge
dec
sbbl
lea
inc
ss
daa
movsb
negl
jge
mov
push
dec
mov
pop
push
mov
pop
mov
pop
mov
push
jo
inc
dec
test
pushf
push
iret
xchg
loop
pop
xor
push
add
mov
sbb
push
stos
lcall
orl
xor
lods
fcmovne
enter
std
stc
or
cmp
pop
fcompl
shll
pop
cmpsb
movd
mov
iret
cmp
test
bound
and
add
pop
mov
fstps
pop
ja
and
leave
add
loope
sbb
jae
pop
mov
jp
xchg
call
popa
out
cmp
test
in
pop
or
lods
and
mov
lds
or
outsb
clc
mov
add
in
jbe
push
clc
and
je
dec
and
sti
xor
inc
jge
xchg
fdiv
pop
fs
js
xchg
sub
leave
push
pop
mov
out
sar
lret
cmp
mov
dec
dec
and
cs
fld
xchg
movsl
pop
inc
add
mov
lcall
add
orl
inc
mov
xchg
movsb
aad
xor
in
add
mov
push
dec
xor
xchg
ja
add
pushf
mov
sub
fmuls
mov
push
mov
daa
push
mov
repnz
inc
adc
std
in
stos
or
int
or
mov
inc
sub
movsb
arpl
jp
movsl
divb
ror
sub
andl
push
notb
les
pop
inc
imul
adc
xor
inc
in
and
repnz
mov
pop
dec
scas
mov
jge
pop
rorl
out
rolb
outsb
fwait
stos
jno
push
mov
fcoms
sbb
adc
xor
out
cmp
addl
ljmp
mov
xor
add
and
fpatan
push
adc
jno
shrl
nop
jne
insl
scas
out
ss
xchg
imul
dec
pop
pop
dec
cmpsb
mov
jne
daa
out
inc
lea
cld
out
or
inc
dec
loop
inc
enter
bound
call
xchg
or
mov
clc
mov
shr
lahf
pop
mov
add
sti
jp
repnz
adc
push
push
mov
std
insl
mov
xchg
insb
inc
push
ja
cmpsb
lea
and
mov
das
mov
les
dec
sbb
push
mov
add
jecxz
mov
adc
rclb
clc
lea
inc
cmpsb
mov
add
daa
fsubrs
jo
add
mov
add
lcall
enter
lods
lds
mov
bound
push
jle
sub
outsb
shlb
in
fisttps
jecxz
mov
inc
in
push
sahf
addr16
lock
inc
mov
jne
sub
leave
rolb
int
dec
into
pop
std
stos
cmp
frstor
mov
sub
inc
xor
orl
test
push
or
lahf
xchg
pop
jo
jnp
test
fwait
push
repz
inc
and
xor
cmp
jne
or
push
adc
xchg
add
out
sbb
mov
jmp
daa
testb
dec
stos
lods
mov
imul
push
int3
xchg
prefetchw
or
jecxz
out
ret
aam
test
inc
sbb
pop
mov
lea
pop
cmp
shlb
add
fisttps
sub
addr16
lcall
mov
in
mov
test
mov
repnz
xchg
mov
aad
das
push
mov
xlat
xor
lret
rcrb
shlb
lcall
inc
pop
mov
addr16
pop
jae
mov
jno
xor
sbb
je
push
xor
xchg
mov
cld
push
addb
mov
stos
sub
mov
jo
dec
in
jecxz
push
lret
outsb
inc
add
jo
mov
out
pop
pop
xor
or
pop
sbb
jl
inc
jbe
mov
add
dec
mov
lret
mov
std
jl
fstpt
push
sbb
fwait
in
xor
cmp
imul
leave
inc
pop
js
xchg
repz
sti
push
inc
repz
push
data16
pop
pop
lahf
fwait
push
fnsave
jbe
daa
dec
arpl
xchg
push
cmp
cli
in
jle
dec
xchg
sbb
adc
add
mov
fsts
mov
sub
popa
in
mov
pop
imul
rcrl
orb
fiadds
rorl
leave
dec
add
das
xchg
cmp
jo
icebp
push
sti
shll
repz
jg
lret
dec
les
pop
or
adc
cmpsl
nop
aas
xchg
sti
push
ffreep
int
insl
xchg
gs
jb
mov
mov
outsl
and
fistpl
loop
out
dec
fldt
adc
aam
mov
xor
test
lock
movsb
imul
cs
rol
test
mov
lret
xlat
adc
xchg
data16
test
lock
cmp
push
mov
int
lea
loope
jp
add
test
push
cltd
inc
shll
adc
or
out
mov
leave
push
aad
daa
lret
mov
mov
jnp
cs
push
mov
mov
loop
dec
test
mov
cmp
sub
add
jae
stc
pop
sub
es
inc
add
je
or
or
dec
hlt
add
sbb
and
cmpsb
mov
outsb
rorl
pop
push
into
push
stc
mov
loope
adc
loopne
popf
dec
mov
dec
jno
push
fisttps
sbb
push
push
lcall
add
push
adc
jo
ficomps
sbb
mov
int3
pop
jmp
lods
pop
jle
call
popf
add
sbb
das
decb
cmp
mov
jecxz
dec
dec
xlat
cmp
jmp
and
xor
into
xor
je
cwtl
mov
loop
mov
flds
xchg
lods
cmp
mov
sbb
dec
push
aaa
es
repz
insl
aam
fisttps
je
or
sbb
push
mov
push
sbb
stos
pop
addr16
xor
lcall
jne
aaa
jp
mov
or
and
add
faddl
out
dec
jno
lret
popa
adc
roll
repnz
xlat
repz
or
lods
lds
ficomps
idivb
sti
nop
mov
ror
cltd
jle
pop
jno
sbb
roll
mov
adc
addb
mov
imul
cmp
in
stos
mov
cmp
gs
push
or
sbb
test
mov
sti
hlt
or
rcrl
push
cmp
mov
popf
or
adc
push
std
xchg
aam
inc
into
sub
in
push
call
lds
popa
add
test
lret
es
pushf
sub
jb
std
mov
cmp
xchg
cld
cld
outsb
cmp
xor
lods
incb
mov
loope
xchg
stos
lret
push
mov
jmp
popa
push
loop
lods
lds
aas
stc
jno
fiadds
xchg
inc
sbb
and
insl
or
aas
mov
adc
and
mov
loopne
ret
xor
mov
je
push
cmp
jns
adcl
idiv
push
pushf
jl
fisttpll
iret
arpl
mov
sub
ds
fadd
loope
mov
dec
addr16
fcom
mov
cld
sti
mov
in
mov
mov
jecxz
xchg
pop
aaa
lds
jae
hlt
or
pop
lds
cmpsb
push
scas
fldl
pushf
inc
and
cli
arpl
notl
cmpsl
sub
xchg
std
outsb
cmp
sub
daa
dec
out
pop
inc
sub
movsl
cmp
insl
xor
loop
mov
addr16
popf
push
lret
push
lcall
jne
push
loopne
outsl
aaa
test
clc
xchg
adc
adc
pushf
mov
sub
mov
inc
mov
shrl
adc
ret
sbb
jecxz
dec
sub
call
mov
or
adc
mov
xchg
mov
xchg
mov
frstor
scas
out
repz
mov
aas
add
movsl
mov
sub
jns
cmp
into
inc
xor
cld
lret
call
and
push
loope
ja
imul
adc
shll
adcb
or
sub
push
mov
mov
je
das
sbb
dec
lock
sub
push
dec
iret
cltd
lods
or
fsubrl
loop
xchg
xchg
scas
add
fisubl
cmpsb
and
cmp
outsb
cmp
addr16
xor
adc
cmpl
loope
jbe
jl
pop
fistpl
pop
cli
or
out
xchg
mov
iret
pop
dec
push
xorb
xor
pop
scas
dec
xchg
push
rcll
xchg
cmpsl
push
push
sub
mov
fsubrp
mov
data16
jns
jmp
loopne
push
and
xor
out
cmp
shll
add
subb
xor
shl
jg
dec
mov
adc
jns
lcall
push
stc
add
mov
dec
inc
dec
mov
jne
jmp
les
lcall
xor
adc
lods
and
adc
fidivrs
cmp
inc
mov
outsl
aad
lret
push
xchg
mov
mov
or
adc
aas
movsl
jns
fiadds
insl
add
add
imul
rclb
std
leave
sbb
jp
rcrb
lea
out
shll
mov
das
test
or
push
aad
call
adc
not
mov
inc
and
vrangepd
shrb
jecxz
insb
cmp
data16
das
aam
cmp
jg
add
scas
jp
pop
fs
in
or
cmc
pop
pop
jmp
outsl
dec
sarb
subl
rcrl
inc
add
xor
nop
mov
int3
adc
mov
shl
test
lea
adcl
xor
cwtl
shrb
push
ror
sub
inc
mov
outsb
adc
out
adc
fwait
xor
sbb
stc
mov
cmp
imul
in
mov
sbb
xlat
rcrb
add
push
out
bound
jns
inc
movl
loope
push
pop
aam
xchg
jns
in
and
jl
jmp
cmp
cwtl
inc
aas
enter
and
sbb
mov
push
enter
scas
mov
xor
jg
pop
cmp
lcall
test
jmp
js
pop
rol
test
aad
lock
into
shrl
aad
jae
loop
int
sbb
jo
mov
notl
or
rcl
inc
movsl
addb
rclb
jns
xchg
fmuls
pop
fists
and
pop
mov
sub
jge
mov
popa
dec
sub
pop
cs
mov
out
jo
loop
cltd
or
mov
and
sub
into
gs
mov
cmp
shrb
loopne
into
and
ljmp
outsb
stos
cmpsl
cmp
mov
jb
fs
data16
push
mov
pushf
cmp
lea
lcall
test
cli
mov
lcall
sbb
and
mov
xchg
push
sahf
repnz
pop
mov
mov
sbbb
rcrl
xchg
add
xor
out
imul
out
repz
push
hlt
inc
sti
pushf
or
stos
test
mov
sub
fldt
testl
or
or
aas
popa
mov
mov
sahf
add
es
add
sub
aaa
inc
cmp
adc
test
movsb
ss
loop
ljmp
sbb
rcrl
or
dec
cmpl
cmp
sub
call
jbe
loope
and
sub
mov
test
movsb
mov
xchg
jno
incb
test
adc
lock
cld
sarb
mov
push
push
les
push
mov
push
and
mov
jg
xchg
sub
cmpb
pop
sbb
or
cwtl
adc
jno
les
aam
cmpsl
xor
imul
test
dec
xor
lock
jecxz
and
mov
pop
inc
inc
scas
imul
scas
fwait
sub
or
mov
sbb
rcr
ds
sub
imul
popa
fildl
push
imul
dec
xor
ss
bnd
jecxz
inc
and
mov
and
mov
int
cltd
std
xor
and
mov
out
adc
icebp
fistps
sub
enter
xor
dec
out
cmp
push
mov
sub
int
jae
push
cltd
mov
jae
pop
es
sbb
out
dec
sub
sub
mov
push
test
jecxz
add
out
imulb
mov
inc
test
fimuls
xchg
mov
mov
and
sti
mov
cmp
mov
add
or
lret
xchg
jae
mov
test
arpl
pop
bound
pop
pop
pushf
fldenv
inc
into
lret
sub
jbe
mov
cltd
cmp
inc
push
movsb
xchg
add
sbb
sbb
sarl
push
out
add
cld
shrl
insl
jno
pop
into
mov
insl
iret
and
pop
xchg
int
sbb
adc
dec
ret
ds
push
enter
mov
fstps
cli
and
inc
ja
mov
xor
push
iret
int
imul
pop
loope
iret
or
stos
into
into
inc
movsb
jo
lods
pop
push
test
xor
pop
add
leave
aam
loop
loope
sub
sbbb
pop
test
pop
packssdw
nop
jae
stos
xor
jl
ret
rcl
jmp
mov
cld
xor
and
call
lret
addr16
adc
adc
pop
jbe
mov
and
addl
cwtl
mov
mov
rolb
and
pop
scas
cmp
scas
divl
push
cmp
jne
sub
repz
js
sbb
pop
cwtl
pop
pop
sbb
mov
std
mov
sahf
or
jmp
daa
arpl
cmpsb
sub
insb
pusha
cmpsb
fbstp
cmp
sar
nop
push
jecxz
aam
dec
movsb
nopl
shl
das
leave
or
pop
popf
clc
loopne
xchg
std
mov
fisubrl
addl
inc
adcl
sub
in
mov
xchg
xor
add
lds
jne
mov
out
or
jle
jns
fdivrl
pop
or
xchg
je
shr
adc
mov
xor
int
xor
lea
add
push
or
pushf
sahf
in
lods
adc
jo
mov
jge
gs
lcall
mov
mov
pop
mov
fmull
mov
dec
shlb
nop
in
adc
loope
jp
pop
orb
mov
sbb
repnz
and
cmpsl
xchg
jge
xchg
pop
aam
cs
xor
fisttpl
rorl
inc
push
pop
fstl
in
test
xchg
inc
js
jbe
mov
xchg
cmc
pop
aas
or
bound
out
ret
push
fs
inc
sub
hlt
sbb
jge
mov
mov
cs
dec
jp
in
mov
inc
or
xor
dec
pop
mov
hlt
sbb
jecxz
pop
cmp
mov
mov
das
xorl
pushf
int
push
cmp
or
mov
sub
jns
ffree
hlt
andb
shrd
adcl
scas
inc
movb
sbb
dec
push
or
outsl
mov
xor
mov
mov
xchg
jecxz
xor
xchg
xor
cld
add
insl
fbld
sub
js
pop
bound
jge
hlt
add
jb
sub
cli
jp
mov
mov
or
aam
adc
and
lods
or
inc
pop
xchg
ret
push
mov
sahf
clc
dec
xchg
mov
sahf
icebp
ljmp
sti
jns
mov
mov
adc
mov
mov
dec
jp
push
mov
enter
xchg
cmp
sbb
jnp
in
data16
jecxz
in
sub
sbb
shll
xchg
stos
or
andb
cld
add
int3
inc
cmp
and
icebp
clc
sarb
pop
jge
les
fwait
push
sbb
insb
fxch
push
repz
or
inc
mov
call
pop
test
lahf
pusha
shl
hlt
inc
push
jmp
jmp
aaa
fistpll
test
push
imulb
test
cmc
dec
mov
fdivrl
les
xchg
inc
cwtl
repz
push
mov
push
sti
pop
stc
outsb
fcoml
or
mov
out
add
stos
mov
jmp
pop
mov
and
pop
divb
jmp
testb
xor
gs
mov
cmp
pop
in
sahf
dec
cmp
rorl
mov
fs
cmp
push
xchg
dec
enter
imul
mov
sub
dec
pop
shll
mul
push
pop
pushf
xor
shll
push
xchg
in
out
xchg
xchg
ljmp
out
cmp
cmp
mov
sbb
fucompp
pop
leave
and
and
popf
icebp
or
jbe
insb
js
mov
mov
insl
pop
pop
jae
cld
rolb
imul
dec
and
hlt
adc
mov
cmpsl
add
jge
andl
add
sti
ret
or
movsl
cwtl
push
and
lods
movsb
aam
mov
enter
fdivs
ljmp
jmp
inc
xchg
frstor
inc
fsubl
xchg
cld
inc
and
fldcw
dec
ja
fdivrl
xchg
sar
adcb
pop
testb
push
adc
imul
jg
std
cmpsb
cmp
repnz
movsb
xchg
sahf
lret
or
inc
inc
gs
popa
mov
mov
and
jnp
mov
mov
add
mov
icebp
negl
inc
push
ret
jno
call
xor
orb
pusha
mov
jl
movsb
xlat
sub
add
enter
cmc
aas
cwtl
mov
das
std
or
clc
xchg
add
lcall
repz
xchg
mov
or
pop
dec
inc
xchg
mov
dec
lret
xor
in
std
je
inc
xchg
cs
sub
sbb
adc
repz
cmc
jbe
cmp
repz
cs
push
ficompl
ds
or
jle
stos
js
out
stos
xor
incb
dec
lahf
lods
push
sarl
jb
adc
fs
add
pusha
test
enter
es
fwait
mov
ret
aad
scas
lods
sahf
out
out
xor
dec
loopne
pop
xchg
dec
imul
sub
push
add
xor
xchg
aam
sti
add
push
jo
dec
pop
ljmp
xor
test
decb
mov
sub
mov
cmp
mov
push
into
out
inc
sbb
clc
test
clc
cmpsb
add
sub
xor
test
push
out
inc
pushf
push
pop
call
or
sbb
sbb
and
and
sub
fcos
negb
push
sahf
fbstp
mov
ja
les
xor
mov
loope
movl
cmc
xchg
sbb
daa
sub
sub
and
inc
jne
inc
dec
xchg
mov
add
clc
orl
cmc
dec
outsl
or
cs
out
mov
testb
jae
ljmp
sbb
repnz
sbbl
imul
scas
sub
bound
dec
cmp
or
mov
ret
mov
pop
aam
lcall
adc
in
lret
fisttps
mov
pop
fsubs
in
data16
mov
push
mov
adc
lcall
out
mov
pop
adc
or
les
mov
out
adc
dec
push
sahf
call
addb
or
push
icebp
inc
adc
out
and
pop
pop
popf
arpl
repnz
push
das
lods
repz
in
out
jb
arpl
mov
loope
add
icebp
sahf
inc
test
mov
ja
mov
mov
xor
mov
push
push
in
lods
xorl
mov
sarl
push
fdivrl
mov
and
pop
stc
es
das
lods
pop
mov
sbb
mov
mov
xchg
mov
cli
xlat
cmpsl
gs
arpl
xchg
rorb
clc
sub
pop
incl
mov
pop
mov
cmp
je
fs
popf
lock
ret
mov
addl
sti
pop
mov
xor
icebp
es
mov
in
pop
add
jne
and
mov
pop
lret
out
leave
push
jmp
cmpsl
add
pop
or
adc
ja
out
inc
mov
inc
scas
jo
std
cmc
je
shl
cltd
or
adc
pop
xchg
loope
jne
addl
inc
mov
imul
cld
dec
add
dec
dec
aas
and
jecxz
fidivrl
mov
hlt
mov
xchg
mov
xor
insb
jns
sbb
adc
push
mov
or
in
nop
jle
addr16
fbld
cmp
leave
xor
or
adc
xor
fildl
sub
js
fisttpl
sub
rcr
shlb
ds
arpl
icebp
mov
hlt
mov
andb
xlat
jbe
jb
mov
sbb
inc
fcoml
or
cld
fstpt
and
movsl
xchg
addr16
fldl
mov
adc
loop
test
fsubr
jg
or
mov
stos
icebp
fadd
push
xchg
cltd
stc
mov
lret
icebp
cmp
shlb
jae
mov
test
cmpsl
sub
out
mov
das
pop
call
add
push
pop
and
lods
int3
stos
pop
sbb
mov
pusha
xorb
pusha
jo
mov
mov
xchg
in
ss
sbb
mov
adcl
insl
stos
jno
out
jl
and
sub
sub
gs
enter
dec
cmp
pop
enter
out
loope
dec
cmp
inc
xchg
gs
fnstcw
fisttpl
ljmp
and
push
jmp
sti
scas
insb
push
dec
cwtl
xchg
ss
std
cmp
adc
fldenv
nop
and
jg
int3
test
popf
fdivrl
addr16
loopne
xchg
int3
imul
std
lods
movsl
add
in
js
sarb
jno
stos
adcb
arpl
nop
or
sahf
notb
pop
sub
insl
jb
xchg
loope
cld
mov
js
incb
xlat
test
push
push
adc
das
sbb
out
mulb
ret
pop
jno,pt
data16
xchg
xchg
push
adc
cld
out
aas
lods
adc
sbbb
fstps
sub
sub
cmp
fldl
mov
aas
nop
sahf
push
mov
popa
call
arpl
leave
adc
addl
pop
mov
add
in
add
loope
add
mov
adc
addr16
es
inc
or
sbbb
dec
mov
pusha
mov
pop
inc
jb
inc
adc
push
test
inc
and
xlat
push
ss
push
fsubp
sarb
out
xchg
imul
mov
stos
jl
fcoms
pop
les
es
xor
je
mov
xchg
testb
push
jb
push
sub
das
rorb
xchg
out
test
insl
push
sub
pop
xor
icebp
inc
xor
mov
xor
sbb
jecxz
in
jmp
xchg
jp
cmc
pushf
add
shlb
push
mov
pop
test
ss
repnz
xor
das
stc
pop
bound
sub
lahf
push
sbb
fadds
shlb
stc
ret
enter
andb
pop
xchg
xchg
in
xor
xchg
jge
xor
popf
pop
jbe
mov
jne
loop
icebp
movsb
and
imul
fnstcw
xchg
add
and
and
call
mov
xor
dec
lods
xchg
jge
pop
push
negb
push
jbe,pt
fnstsw
aam
stc
nop
sbb
inc
cmpsl
loopne
arpl
mov
je
mov
loopne
xor
xor
dec
decb
test
pop
xor
mov
adc
pop
adc
mov
cmc
adc
adc
outsb
pop
test
loope
aad
fwait
add
or
out
out
adc
jp
call
sahf
pop
ljmp
inc
xor
cmp
imul
aas
fadds
xchg
lds
push
insl
add
xchg
sbb
dec
dec
test
and
jmp
push
xlat
sub
test
int3
cmp
mov
jecxz
jnp
sbb
add
add
cs
iret
idivl
das
test
adc
sar
xchg
or
mov
iret
sbb
jecxz
pop
xor
xor
outsb
test
pop
dec
int
das
aaa
cmc
add
xor
gs
inc
mov
cltd
inc
test
xchg
repnz
sub
popf
sub
addl
lods
out
mov
pop
lods
xor
jp
jmp
inc
mov
xchg
dec
jae
sbb
outsb
lods
aam
shl
mov
xchg
push
dec
outsb
fwait
nop
fisttpll
cs
loopne
ljmp
jbe
daa
inc
push
fimull
inc
jb
je
sub
mov
xchg
xchg
test
rcrl
fxch
xchg
outsl
cmp
xor
cld
jle
sub
movaps
pop
jo
ja
andl
sub
ret
inc
sbb
mov
cli
popa
bound
dec
push
rcr
and
xchg
jae
and
mul
mov
shlb
scas
mov
pop
in
pusha
jp
int3
rcrl
lds
add
mov
arpl
jns
and
sbb
dec
lret
mov
mov
add
ret
mov
cmc
cmc
xor
hlt
inc
repz
mov
jg
hlt
cltd
mov
outsb
fldl
mov
pop
pop
adc
jbe
out
jecxz
test
in
ret
sbb
xor
and
add
dec
push
rorb
or
rcll
push
ds
jns
rclb
mov
mov
push
mov
popf
lods
std
ja
sub
das
push
sti
push
popf
xchg
lock
inc
enter
sub
xor
pop
adc
push
dec
mov
push
xlat
dec
daa
mov
mov
pop
cli
or
push
gs
rol
mov
cwtl
sbb
fiadds
xor
dec
cmp
ljmp
inc
mul
adc
je
inc
lock
in
and
or
aas
sarb
enter
out
xorb
insb
insl
jns
pop
rcrb
and
sahf
aam
cmp
xchg
cmp
mov
mov
add
pop
push
xor
or
push
pushf
pop
in
popa
mov
push
shrl
mov
pop
adc
jb
mov
lcall
lds
cmpsl
pop
mov
shll
cmp
iret
lea
inc
push
testb
xchg
pop
jle
dec
cmp
mov
out
cli
aaa
pop
out
mov
aad
dec
loop
or
and
loope
adc
push
pop
imul
imul
mov
pop
in
ret
dec
into
push
mov
push
jbe
jbe
sub
xor
insb
inc
pusha
testl
lret
sbb
jbe
arpl
cmp
cmpsl
add
inc
and
or
test
addr16
loopne
enter
dec
adc
pop
inc
in
pusha
mov
enter
out
sub
jg
cli
ja
jae
pop
hlt
pop
rcll
and
dec
pop
popf
or
sti
xchg
mulb
in
pop
int3
mov
arpl
call
sarl
xor
fwait
xchg
outsl
jle
pop
xchg
daa
jecxz
jae
clc
and
stos
jno
push
push
ljmp
or
js
cmp
lahf
and
xorb
dec
mov
clc
test
lock
push
mov
mov
mov
or
xchg
and
dec
cmpsl
in
mov
inc
adc
rcll
leave
jns
xor
and
jns
push
xchg
pop
pusha
cmp
sub
xchg
push
test
cmp
inc
mov
sub
psrlq
or
or
and
cli
fwait
mov
sti
add
out
inc
xlat
sti
xor
faddl
test
xchg
adc
sbb
je
add
arpl
sbb
lahf
movsb
addr16
mov
ret
cmpsl
and
mov
dec
mov
movsb
iret
test
ss
ret
imul
ret
mov
aas
dec
cmpsb
sbb
sbb
movsl
jp
stos
loopne
sbb
sub
adc
mov
sbb
cmp
and
add
pushf
and
ret
outsb
sub
loope
add
daa
jg
jecxz
or
shr
jns
out
stc
sti
mov
mov
mov
pushf
lock
bound
xchg
ret
fisubrl
outsl
push
jg
xor
fdivrs
dec
fsts
loope
out
or
jnp
mov
lods
fsubs
sbb
mov
xchg
add
loopne
test
mov
pop
mov
pushl
jp
gs
out
out
jecxz
push
mov
pop
cmp
pop
and
rcrb
pusha
mov
mov
mov
dec
or
shlb
mov
out
jle
pop
jge
mov
insb
pop
add
push
ror
addl
jb
aam
add
mov
lock
xchg
sbb
cmp
dec
aas
xor
repz
adc
pop
stos
loopne
les
dec
cmp
cmp
push
and
mov
mov
enter
popa
aad
dec
push
adc
orl
mov
mov
pop
inc
push
adc
cmp
std
xchg
sbb
das
enter
lods
nop
jl
sbb
inc
jae
je
pop
cmp
rolb
ds
je
or
mov
arpl
xchg
jnp
and
daa
gs
dec
out
sub
in
mov
lods
mov
cmc
jle
ret
and
scas
jp
push
rcll
mov
cmp
sbb
add
inc
insb
sub
gs
fldt
scas
stc
pop
pop
or
jg
data16
sbb
sbb
pop
xchg
cwtl
fcomps
or
lcallw
data16
jo
in
adc
jb
call
aad
xlat
jne
or
adc
out
xchg
dec
fwait
sbb
adc
insb
out
dec
xchg
adc
int3
inc
sub
test
jp
adc
and
cmp
add
or
mov
add
xchg
loop
mov
push
das
pusha
gs
push
mov
mov
jge
je
out
jns
and
sbb
insb
mov
adc
jno
and
cmpsb
jnp
push
jmp
sub
push
ret
icebp
cmp
jb
lods
and
sub
repz
and
cwtl
repz
push
test
aam
xchg
mov
loope
push
loope
mov
out
lock
je
incl
adc
xchg
xor
int3
xchg
cli
icebp
xor
aaa
sub
sbb
add
daa
out
les
jb
push
lods
mov
sbb
pop
push
mov
xor
pop
mov
jmp
push
pop
or
addr16
mov
nop
in
lcall
cmpsb
sub
sbb
in
pop
and
push
mov
add
cltd
mov
shrb
int3
cltd
pushl
push
push
stos
addr16
lods
leave
mov
or
jne
repz
cltd
addl
popf
pop
inc
jmp
test
icebp
or
mov
movsl
mov
pop
scas
inc
mov
les
push
cmp
rclb
cld
push
or
daa
ljmp
stc
mov
out
or
mov
jl
les
int
stos
cmp
jo
cmp
cmp
ljmp
cld
fnstsw
pop
or
xchg
xchg
or
cmp
test
adc
imul
dec
test
dec
xor
sbb
jmp
sbbb
mov
sti
sbb
out
cld
push
mov
cmp
jmp
popl
fwait
add
jmp
pop
cmp
je
jmp
and
jecxz
or
xchg
jmp
mov
insb
hlt
mov
sti
sub
push
sub
adc
mov
movsb
out
lcall
repz
xor
push
enter
sbb
cmp
mov
es
push
jne
dec
jle
mov
lods
in
lcall
xor
sub
fnstenv
dec
jmp
test
jecxz
imul
mov
pop
inc
or
cmp
xlat
sub
das
xchg
dec
test
inc
pop
out
addr16
in
xor
mov
fisttpll
shl
loop
mov
in
aad
xor
adc
or
jno
pushf
repz
xor
dec
xchg
push
in
cltd
sti
xchg
adc
ret
cmpl
cld
mov
adc
xor
fwait
andb
or
xor
hlt
popf
add
sbb
testl
pop
and
mov
pop
inc
ljmp
lock
out
cs
fsub
pop
pop
cmpl
cltd
sbb
xchg
test
jb
xchg
mov
in
or
ficoms
fldl
push
xor
add
or
stos
xlat
mov
jo
push
push
jg
std
pop
loope
dec
insl
sbb
push
cltd
adc
cmp
pop
inc
cld
and
int
add
xor
or
mov
mov
les
dec
ret
subb
push
out
xchg
xlat
lcall
adc
cld
pop
cmp
cld
lret
dec
lock
cmp
push
pop
rorb
and
cmpsl
sbb
outsl
push
lret
xchg
or
cli
jmp
out
test
aaa
sbb
and
xchg
xor
fistpll
xchg
adc
mov
mov
push
adcb
cmp
subl
insl
mov
xor
sub
xor
push
ljmp
daa
push
push
test
xor
lods
jno
cli
push
jno
arpl
push
popf
or
xor
pop
jp
push
clc
cmpsb
int
pop
in
and
xor
pop
mov
add
pop
jne
nop
jae
lret
inc
xor
into
test
jno
dec
in
pop
cmc
jle
aas
xor
dec
sti
pop
fldcw
xchg
iret
mov
sarb
sti
inc
fcoml
out
jmp
mov
pop
lea
mov
in
arpl
pop
adc
aad
sub
clc
std
mov
into
sti
in
inc
cmp
lds
pop
sub
sub
inc
mov
cmpsb
xchg
jo
xchg
xor
xor
femms
jno
mov
or
out
dec
popf
mov
fwait
lea
into
into
jge
std
push
cmp
icebp
les
cmp
sub
mov
dec
lods
jmp
stos
mov
jle
jnp
test
pop
shlb
adc
jo
sub
sbbl
sarl
add
aad
pop
movsl
xor
sub
jns
test
loope
rolb
pusha
and
dec
adc
mov
xor
pop
sbb
xor
mov
mov
dec
idivl
imul
xchg
insl
and
mov
or
mov
test
xor
rcrb
lds
and
mov
scas
mov
inc
xchg
std
test
sub
stos
test
movswl
int
enter
jle
jo
cli
scas
int
imul
jae
mov
idivl
out
call
popf
outsl
ss
rcl
aaa
xor
adc
les
ss
sbb
je
adc
rcrl
outsl
lret
dec
or
cmp
add
xchg
shlb
aam
xchg
lret
repnz
fcomps
cmpsb
jbe
jecxz
pop
into
aam
push
rcrl
and
ja
adc
fwait
mov
jge
xchg
mov
add
pop
pop
push
lcall
jl
out
mov
jmp
sbb
test
clc
outsb
fidivl
push
fs
xchg
cltd
push
stc
sbb
fisubrs
xchg
int3
cmp
out
xchg
in
or
pop
repnz
sub
test
les
dec
lret
push
fwait
clc
push
std
cmp
pop
out
jno
int3
out
cmpsb
ds
arpl
out
repz
out
std
and
adc
inc
xchg
repnz
pop
lods
cmpsl
outsb
cmpl
jo
lcall
sbb
mov
jns
jb
outsl
enter
into
sbbb
insb
jmp
jne
jle
aaa
sbb
xchg
repnz
fwait
xchg
cmp
xchg
test
addr16
mov
aam
sbb
pop
xor
push
cmp
jmp
sub
notb
pop
or
mov
cmpl
jb
or
xchg
test
pusha
and
pop
add
out
outsl
jp
mov
and
xor
js
inc
aas
nop
push
inc
and
std
jl
sub
je
out
cmp
data16
enter
hlt
mov
jl
push
aam
lret
popa
nop
pop
orb
jmp
pop
out
test
push
pop
jp
adc
inc
cmc
xchg
mov
mov
test
lods
xchg
mov
jne
addl
cmpsb
adc
push
aaa
outsl
xor
add
lds
fmulp
cmp
hlt
movsl
mov
adc
out
imul
pop
push
pusha
pop
call
jl
shll
leave
popf
jmp
rcr
sub
pop
test
and
and
mov
mov
aaa
lods
lock
adc
mov
movsb
jl
imul
inc
sub
push
mov
fs
xlat
sbb
pop
jecxz,pn
jne
mov
xchg
xor
loope
jg
scas
sbb
xorl
cmp
lcall
insl
out
bound
cmpsl
and
pop
imulb
dec
xor
in
call
lea
movsb
ret
cmp
xchg
lcall
arpl
mov
jl
jp
test
fsubl
push
stos
shl
subb
mov
add
test
pop
and
pop
jmp
pusha
mov
add
push
inc
shrl
movsl
cltd
cmp
dec
push
sar
jle
xchg
stos
ds
mov
shl
xchg
push
pop
pop
cmp
mov
sub
adcb
psrad
or
rorb
call
insb
scas
xchg
hlt
add
movsl
cmp
mov
std
fs
in
ljmp
push
sub
mov
mov
lods
dec
aaa
lea
pop
in
fst
or
jg
add
add
icebp
sub
repz
nop
sbb
push
mov
xchg
mov
xlat
pusha
das
add
and
sti
xchg
dec
aam
sahf
adc
adc
pushf
xor
rcll
fxtract
ss
nop
cmp
nop
jle
pop
sub
mov
add
sbb
xchg
imul
inc
add
stos
jns
xor
ret
call
mov
inc
lods
push
in
pushf
cmp
mov
cs
ljmp
out
fadds
lcall
dec
jmp
xor
int3
cli
inc
jne
fnsave
mov
dec
fsubl
loopne
mov
dec
das
nop
fisubs
sub
rorb
mov
repz
out
lea
lock
push
shlb
cmp
push
js
sbb
mov
push
adc
xchg
sub
jbe
jecxz
cmp
pop
xchg
and
dec
inc
jo
dec
scas
jns
mov
int
sub
push
stos
xchg
gs
dec
jne
add
stos
cli
js
add
push
cmp
push
mov
mov
rcr
orb
sub
iret
and
idivb
pop
pop
mov
cmc
lahf
lcall
cmp
and
ds
xchg
xchg
dec
mov
cltd
inc
xor
xchg
mov
dec
ret
push
sbb
push
or
mov
mov
out
xchg
mov
mov
ljmp
xchg
std
fwait
rolb
aam
push
adc
push
mov
xor
pushf
fistpll
arpl
add
jl
addr16
sub
push
pop
aaa
or
pop
loope
fstpl
incb
in
setns
adc
stos
movsb
ficoms
xchg
lcall
adc
push
jne
mov
jp
or
cli
mov
loop
std
pop
in
cli
xchg
push
add
sub
aaa
adc
add
pushw
xlat
mov
sbb
add
addr16
loopne
sub
adc
dec
nop
push
mov
or
cmp
xor
out
mov
push
aas
mov
iret
fists
lods
sub
jno
insl
leave
mov
and
sub
cmp
dec
or
xchg
dec
xchg
pop
jnp
test
dec
adc
fstpt
hlt
inc
xor
cs
cmp
shlb
outsl
dec
cmp
fisubrl
adc
xchg
xor
aaa
inc
xor
loop
sbb
cmpsb
or
jne
add
fwait
xchg
xor
xchg
pop
mov
push
mov
ljmp
or
inc
stos
jbe
icebp
cmp
icebp
divl
cmp
lret
xchg
add
mov
sbb
mov
fadd
dec
dec
push
dec
dec
enter
and
mov
xchg
dec
test
test
int3
pop
js
cmpsl
mov
dec
cmp
movsb
push
mov
ds
es
adc
dec
and
inc
mov
or
mov
xor
inc
sub
call
lock
fcoms
loopne
and
test
jle
pop
mov
ret
lods
outsb
xor
jae
cmp
pop
adcb
sahf
mov
mov
sub
popa
dec
push
jo
lcall
sbb
xchg
rorb
mov
xchg
jo
xchg
lds
das
shrl
inc
jge
or
mov
jns
fstpl
nop
mov
mov
push
adc
ret
jns
das
test
enter
stos
dec
and
ret
mov
push
jne
pop
jnp
clc
je
push
mov
das
stc
pop
outsl
lds
data16
inc
int3
inc
rcrb
add
jnp
fisttpll
push
pop
inc
or
hlt
in
add
fwait
sub
add
jae
push
mov
ljmp
cmp
lret
add
xchg
popf
icebp
shl
sbb
mov
imul
add
sar
cmpsb
ljmp
or
mov
lods
inc
int3
mov
jae
push
dec
inc
out
adcl
lahf
mov
shl
pop
out
out
mov
adc
in
inc
and
cmp
arpl
cmp
xor
js
and
cmc
mov
in
add
popa
push
frstor
push
sbb
fidivrl
popf
cmp
mov
and
sub
arpl
movsl
cmp
loope
aas
mov
out
insb
adc
popf
fnstcw
dec
out
out
arpl
daa
mov
xchg
mov
out
adc
sbb
dec
add
lods
ljmp
out
dec
insl
mov
inc
cmp
inc
sarl
pop
rolb
les
rol
out
mov
aas
xchg
mov
je
mov
mov
and
fisttpl
pop
dec
test
outsl
jmp
mov
or
cmp
mov
cmp
mov
dec
push
rclb
repz
pusha
mov
mov
movsb
mov
rorl
adc
sar
push
bound
lock
addb
or
sbb
add
or
int
sub
dec
lock
jo
xchg
lock
shrl
in
addr16
jo
xchg
or
stc
pushl
in
flds
fcmove
insl
jl
inc
sahf
mov
push
inc
and
roll
mov
xor
xchg
sbb
dec
add
ds
xchg
and
imul
test
cmp
es
xchg
mov
adc
repz
jg
insl
mov
pop
push
push
sub
cmp
xor
xor
mov
xchg
fcmovnbe
mov
mov
insl
jp
loopne
hlt
bound
hlt
xchg
scas
fiaddl
in
dec
repz
cmp
lret
push
lahf
loop
mov
sahf
add
push
dec
enter
aaa
cmp
dec
mov
cli
or
xor
pop
adc
sub
hlt
ffree
lcall
es
mov
data16
cmc
cmp
jg
cli
es
out
test
idiv
movsl
decb
sub
sbb
rolw
test
cs
sarb
hlt
mov
mov
dec
jbe
neg
iret
fcomip
rcl
mov
cld
xor
fildl
jmp
jb
mov
and
add
nopl
cli
jbe
sbb
lcall
inc
adc
jmp
inc
in
xor
push
mov
jnp
mov
push
incb
cmpsl
nop
push
lods
or
sbb
test
cld
pminub
fidivl
leave
pop
lcall
inc
je
test
cwtl
sub
ss
mov
push
shll
outsl
orl
in
inc
or
mov
push
fwait
imul
sub
stos
lcall
mov
rcrl
push
mov
stos
mov
cmp
jbe
mov
and
outsl
in
shlb
sub
pop
popf
out
jo
stos
push
cmpsl
into
ss
cmp
fimuls
sub
test
fsub
lcall
push
dec
or
lcall
sti
xor
and
std
cmp
push
sbb
das
pusha
repz
dec
jl
xchg
subl
sbb
jnp
jo
ret
cmpsb
movb
pop
loop
mov
lret
cmpb
lods
stos
mov
scas
stos
cmp
scas
sub
cmpsb
adc
jo
int
addb
sub
sahf
cmpsb
xor
bound
pop
mov
lods
call
call
push
pop
in
add
sub
subl
mov
push
inc
mov
or
xchg
push
xlat
mov
xchg
jnp
mov
adc
adc
icebp
dec
loopne
mulb
test
out
and
arpl
out
push
adc
dec
add
addb
xchg
adcb
mov
pop
adc
pop
cmp
xchg
cs
xchg
nop
mov
test
add
imul
push
sbbl
subl
scas
mov
xlat
ret
mov
test
jg
loop
cwtl
pop
adc
cmpsb
adc
aam
mov
rcl
cmp
sub
and
pop
dec
jp
pushf
fdiv
out
enter
mov
xor
fadds
je
lods
into
inc
icebp
cltd
test
push
dec
cmp
and
sub
pop
add
and
aas
test
cmp
cmp
jp
aaa
push
mov
das
push
fisubs
sbb
in
test
push
ja
inc
arpl
or
mov
lods
out
mov
or
stc
adc
pop
push
faddl
sbb
or
cmp
test
mov
test
fidivs
cld
fdivrs
dec
pop
push
sti
fxtract
sbbb
push
loope
xlat
aad
xor
fdivp
push
scas
neg
inc
add
pop
jnp
cli
sbb
lret
mov
mov
push
fadd
clc
xchg
icebp
pop
test
jle
cwtl
cmp
call
cmc
inc
pop
mov
push
jmp
arpl
imul
or
mov
and
data16
mov
sti
mov
or
aas
enter
sbb
push
jg
ljmp
add
xchg
movsb
push
xor
inc
mov
aaa
add
push
leave
out
fs
cmp
sub
das
inc
xor
pop
jle
fdivrs
andb
aaa
cmpsl
cltd
lret
xchg
cmp
and
nop
les
js
adc
push
jno
sub
ljmp
add
ja
push
inc
push
adc
or
mov
js
mov
sbb
or
ficomps
fwait
movb
jae
loope
iret
bnd
ret
push
add
push
movsb
dec
xchg
xchg
or
mov
mov
lret
imul
das
sar
fsubl
and
stc
nop
push
add
dec
inc
call
arpl
enter
push
imul
jnp
add
ret
in
inc
inc
xorb
push
cmc
push
xchg
cs
pop
lcall
dec
in
lcall
in
adc
mov
fnsave
mov
or
push
repnz
mov
and
sbb
xlat
clc
or
movl
xchg
and
jne
sub
aad
mov
ss
fsubrl
add
fbstp
mov
push
cwtl
pop
sub
mov
push
fwait
adc
dec
lret
addr16
and
jp
add
dec
sahf
xor
add
cwtl
jns
push
movsl
fistl
out
cmp
adc
jmp
jmp
stc
int
pop
ljmp
add
adc
pop
cs
xchg
inc
xchg
adc
pop
xchg
into
dec
and
cmpsb
outsl
mov
add
add
adc
loop
int
xor
pop
jecxz
outsl
jns,pn
lods
int
jg
push
push
sbb
sub
out
and
sahf
fstp
andb
aam
sub
or
shlb
mov
shrl
mov
adc
hlt
data16
adc
adc
scas
push
int
jp
and
jp
cltd
sub
sub
jmp
add
fadds
push
popl
std
mov
data16
and
mov
aas
pop
xchg
xorl
and
sub
dec
cs
lahf
popa
mov
push
sub
inc
push
pop
lods
mov
repz
jp
push
jge
cmpsb
adc
shll
lahf
pushf
les
and
push
shll
dec
stc
pop
ds
ss
jbe
sub
pop
fs
pop
repz
dec
mov
das
lahf
sbb
jmp
or
cmp
dec
outsb
xor
dec
mov
icebp
dec
inc
add
daa
gs
cmpl
mov
pop
jmp
mulb
sbb
or
test
jbe
jbe
clc
sub
jbe
sub
call
or
mov
mov
lea
jge
xchg
xor
xor
out
fwait
push
sbb
lgs
mov
into
pop
xor
cmpsb
cmc
push
push
xor
insb
mov
sub
add
push
dec
jmp
pop
icebp
push
movsb
lret
adc
icebp
cmpsb
js
jle
les
jo
mov
aad
dec
and
je
push
dec
insl
imul
or
xchg
push
cmpsl
addl
cmc
add
addb
mov
inc
lret
pop
int3
icebp
mov
aas
inc
and
mov
clc
outsl
cmp
sbb
dec
inc
dec
push
out
dec
jg
data16
lods
cmpsb
pushf
cmp
cmp
faddl
mov
mov
add
ffree
fidivrl
pop
sub
shlb
ret
imul
jg
cmc
inc
pushf
arpl
dec
fsubl
cmp
outsl
fldt
loop
les
out
mov
xchg
in
sub
fnstsw
or
adc
xchg
mov
fldt
add
std
jb
xchg
mov
inc
dec
xor
nop
lock
and
xor
mov
sub
mov
dec
testl
repnz
loopne
pop
popa
sti
or
inc
xor
add
lods
js
shll
adc
dec
les
lahf
xchg
lcall
lret
imul
pop
fld
clc
out
inc
sub
daa
ljmp
sub
adc
dec
jns
flds
in
lds
stos
in
cmp
fdivr
leave
or
adc
daa
add
inc
cmpsl
leave
imul
xchg
insb
pop
adc
cs
sbb
addb
fstl
push
jg
je
sub
andl
lret
push
inc
int3
cmp
fcomps
shl
cld
jmp
jne
xchg
xor
mov
xchg
insl
mov
je
fisubl
or
stos
outsl
lret
out
stos
fs
pop
movsb
push
testb
lret
int3
jns
push
xchg
arpl
mov
xorl
outsb
das
clc
xchg
cli
xchg
imul
cmp
popa
cmp
mov
and
or
cltd
cmpsb
xor
int
negl
sub
cmp
popf
mov
xor
and
inc
test
mov
je
jns
and
sbbb
jmp
mov
iret
mov
in
sti
fdivs
leave
loope
sub
cmp
cmp
lds
outsb
push
das
mov
sub
push
cmp
xchg
xor
stos
insb
mov
inc
and
dec
push
xchg
push
imul
mov
out
sub
ret
adc
rcrb
ret
cwtl
movq
fs
xor
fsubl
adc
loope
gs
rsm
mov
dec
in
xchg
push
pop
cli
ret
or
rorb
test
mov
cwtl
lea
out
shl
call
add
clc
xor
mov
icebp
mov
inc
repnz
sti
push
shlb
int3
jge
cli
xchg
push
dec
push
out
and
lret
outsb
push
loope
mov
bound
and
fimuls
aaa
scas
pop
fstp
rolb
stc
jne
mov
cmp
mov
sbb
lret
push
aaa
pushf
shlb
out
stos
rorb
jmp
sub
adc
mov
popa
mov
lret
sbb
cltd
mov
xchg
je
in
push
xchg
add
movsl
and
or
mov
sbb
gs
jecxz
pop
mov
jno
enter
pop
filds
roll
jp
cmpsl
jle
cltd
out
mov
lods
dec
sti
divl
jbe
push
mov
sahf
mov
adc
adc
and
test
pusha
shll
stos
flds
mov
test
fcmovnu
inc
mov
push
shr
out
insl
icebp
adc
imul
fistpll
push
add
xchg
cmp
in
dec
or
xchg
nop
and
and
jo
mov
xor
test
xchg
push
arpl
adc
pop
jns
mov
xchg
in
pusha
dec
std
lds
lods
xor
and
int3
sbb
sbb
add
mov
aas
inc
mov
rorb
dec
negl
or
add
and
xchg
adc
leave
dec
mov
sbb
and
jae
outsl
xchg
adcl
incl
add
leave
pop
outsb
lret
int
sarb
inc
jmp
mov
sbb
mov
and
pop
push
ljmp
xchg
push
push
sub
sub
imull
jmp
xchg
jb
lea
and
push
shrb
shrl
roll
push
mov
int
fnstenv
adcl
inc
push
sub
ficomps
jae
lods
mov
ja
ss
add
outsb
sub
inc
lds
cmp
push
xor
jne
dec
jb
xor
xor
xchg
lock
add
mov
xor
inc
and
and
pop
xor
and
adc
fwait
roll
sub
cmpsl
mov
mov
mov
or
loop
inc
cmpsb
adc
fwait
xchg
es
push
inc
jne
ret
xchg
xor
jle
js
cli
pusha
push
fcmovnbe
mov
js
stos
or
inc
or
xchg
mov
mov
jge
xchg
lods
cmp
out
bound
xchg
outsb
lods
or
repz
inc
test
pop
mov
out
aad
leave
shlb
dec
sbb
jmp
pop
outsl
and
jg
ds
sti
sbb
int3
jp
in
cmpsl
inc
cmp
fsubl
lret
loopne
jl
add
call
movd
sub
add
add
push
lea
sbb
negl
pop
jns
in
test
pop
pop
inc
jb
xchg
xor
xor
out
sarl
pop
sbb
add
mov
ljmp
adc
adc
dec
sbb
dec
push
cmp
ja
cwtl
dec
mov
lds
jecxz
repz
or
sbb
xor
inc
inc
xor
ss
int3
cli
pop
mulb
fisubrs
popa
inc
inc
sub
jns
outsb
pop
jae
mov
cmp
popf
push
es
aaa
imul
fcmovnbe
ljmp
mov
lret
jl
ficoml
popa
cmp
pop
fldcw
xchg
ficompl
sysexit
movsl
test
cs
inc
data16
gs
js
enter
sub
out
mov
mov
cltd
or
and
inc
mov
ret
ret
push
mov
inc
mov
adc
or
push
push
xchg
cmp
sbb
mov
fs
adc
lods
mov
loope
test
orb
ss
enter
mov
ficomps
cmpsl
outsb
or
adc
push
outsb
dec
push
mov
and
sbb
shl
push
or
stos
sti
hlt
and
mov
pop
std
jo
popa
mov
scas
jbe
pop
out
pop
mov
lcall
adc
add
fs
push
lds
push
data16
mov
mov
push
divb
nop
andl
pop
sbb
xor
test
xchg
lret
mulb
repz
add
imul
xor
cmp
sahf
cmp
mov
fmull
pop
loop
xlat
in
dec
or
cmp
test
stc
loopne
adc
jb
or
sbb
xchg
adc
stc
fadds
mov
ss
movsl
test
and
fldl
or
xor
xchg
ficomps
push
cmp
jae
sub
pushf
adc
ds
rcr
cld
aam
xor
addl
inc
ja
adcl
dec
dec
cmp
call
jle
loopne
les
dec
sub
ret
negl
xor
and
in
mov
arpl
sub
sub
fldenv
xchg
mov
or
test
and
jmp
int
sbb
adc
xchg
shll
movsb
jmp
cmpl
fmulp
xchg
dec
push
cmpsl
incb
lds
dec
mov
lock
and
enter
xor
cli
popa
pop
popa
int3
adc
cmp
cmp
mov
loopne
insb
mov
cmp
incl
mulb
jle
add
mov
cmp
popa
push
or
xchg
jmp
lods
cwtl
mov
inc
jns
or
rorb
cmpl
pop
ret
jmp
mov
pop
mov
testl
mov
cmp
dec
icebp
pop
lods
jae
out
das
mov
mov
pop
xor
stos
fldenv
mov
fucomi
push
out
xchg
ljmp
pop
mov
mov
mov
call
pop
mov
loope
push
int3
ds
testl
push
outsl
mov
fldenv
inc
mov
andb
test
or
out
in
lock
jg
xor
and
fldt
mov
sub
hlt
pop
add
pop
mov
sbb
out
bound
lahf
dec
pop
rorl
lcall
cmp
adc
inc
or
push
aas
jae
sub
fsubl
jl
sbb
push
lods
mov
leave
adc
jmp
push
xchg
fistpll
imul
faddl
and
add
loope
loopne
xor
fcoms
xchg
je
bound
dec
or
or
jl
lds
pminsw
mov
jecxz
inc
div
fsubrl
stos
jl
aad
xchg
xchg
push
or
insb
pop
cmp
ret
lock
jp
sub
sub
aam
or
clc
fs
pop
ficompl
xchg
leave
loopne
loope
mov
xlat
pop
mov
insl
arpl
stc
and
out
pop
sub
iret
fldcw
mov
hlt
icebp
lret
iret
xchg
pop
mov
int3
in
pop
mov
fidivrs
movsb
jae
decb
iret
mov
loop
int3
aaa
add
mov
xor
or
jecxz
push
in
inc
mov
repnz
ret
jmp
sub
xchg
lods
adc
nop
imul
ja
dec
xchg
ror
mov
mov
pop
and
inc
stos
sub
mov
jo
xchg
aas
inc
xchg
mov
xor
xchg
add
aaa
lret
pop
mov
repz
or
btc
std
ret
pop
lods
xor
mov
sbb
filds
mov
push
fbstp
ss
cmp
push
pop
inc
mov
imul
sbb
ds
cmp
aaa
xor
rclb
repz
mov
xchg
mov
stc
push
scas
inc
int3
mov
push
and
push
in
sub
dec
sahf
mov
inc
cmp
ret
rcrb
cld
mov
cmpsb
jnp
push
mov
or
sbbl
xlat
int3
xor
mov
sbb
inc
or
inc
lods
xchg
dec
pop
jg
adc
xor
bound
sub
adc
jne
inc
icebp
and
test
daa
sbb
sahf
pop
jle
push
cmp
test
out
les
inc
call
aam
mov
cmp
pop
mov
xchg
je
xchg
mov
in
adc
fistpll
mov
and
mov
inc
sub
jns
sub
mov
jmp
mov
mov
lahf
cli
mov
test
xchg
ficomps
jl
push
js
data16
xchg
pop
jg,pt
or
int
xor
test
sub
mov
dec
lods
xor
and
or
cli
loopnew
fldcw
mov
pop
inc
cmp
ret
nop
les
js
sarb
jmp
adc
call
iret
cmpsl
fstps
jae
push
push
xchg
pop
sub
pop
cmpsl
ljmp
rcrl
shlb
fisubrl
enter
sbb
icebp
dec
jnp
inc
dec
adc
mov
mov
mov
mov
xchg
imul
mov
adc
je
pop
xchg
or
mov
out
rcll
daa
cmp
lods
repz
dec
mov
movl
xchg
sbb
mov
pop
mov
in
repz
mov
jmp
es
dec
dec
xchg
mov
aad
jl
cwtl
or
cmp
loopne
cmp
mov
data16
sti
xchg
adc
dec
cmp
lock
mov
fwait
jae
out
mov
popf
in
loopne
sti
lods
scas
shlb
jno
das
das
outsb
daa
cmp
mov
in
xchg
xchg
je
pop
inc
in
cmpsl
lahf
pop
and
mov
fiaddl
insl
inc
sub
lret
dec
test
and
push
mov
add
adc
or
jg
or
dec
ss
shrl
pop
cs
cld
orl
pop
mov
mov
xchg
pop
mov
xchg
cmp
ss
xchg
dec
mov
cmp
popa
sbb
lods
sbb
push
jge
or
fwait
sbb
inc
out
pop
mov
xchg
add
insb
pop
push
rcr
and
fldt
mov
adc
sub
pop
jno
icebp
pop
sub
mov
mov
jb
lock
jno
xchg
push
std
out
stc
cmp
mov
jl
sbb
mov
sub
mov
mov
ror
testl
sbb
inc
pushf
jbe
xchg
inc
mov
gs
leave
mov
push
ja
pop
imul
pop
push
lahf
addr16
adc
loope
push
pop
adc
rorl
lret
and
mov
sbb
sbb
jecxz
daa
jle
dec
neg
dec
fnstsw
stc
sub
add
dec
iret
leave
ret
lcall
mov
add
ds
mov
test
cli
mov
mov
insb
aad
fucom
in
push
lret
imul
jmp
sub
mov
fisubs
or
mov
xor
jp
xchg
ja
sub
imul
mov
jns
adc
push
push
jne
outsl
adc
push
sub
mov
sbb
js
mov
icebp
add
add
psllw
nop
sbb
push
scas
add
aam
or
xor
js
notb
mov
jmp
stc
xchg
or
scas
outsl
out
jb
jecxz
and
popa
stos
xor
inc
adc
sbb
outsb
repz
cmp
cld
ss
mov
xchg
lods
fsts
lods
and
mov
or
repnz
pop
sub
in
and
inc
inc
aad
dec
fs
popa
cltd
mov
lods
and
popl
xor
cmpl
sbb
xchg
out
mov
inc
pushf
mov
pop
shrl
mov
mov
scas
mov
mov
pushf
xchg
sub
xor
lods
sbb
hlt
adc
add
dec
xlat
push
int3
cmp
std
dec
push
fcmovnu
jnp
push
adc
test
outsb
mov
pop
or
lcallw
leave
in
lods
in
push
xchg
jne
cmp
cmc
pop
xlat
shrl
add
and
ficompl
xlat
xchg
jb
leave
popf
stc
divb
lahf
cmp
mov
mov
mov
inc
stos
mov
setle
or
pop
mov
test
lods
cmp
imul
iret
sahf
add
outsb
dec
insb
aaa
sub
int
loope
movsb
or
movsb
jno
inc
das
push
cmpsl
in
je
stc
push
fcoml
mov
pop
ret
cld
mov
push
adcb
imul
nop
ret
test
in
outsl
xchg
dec
jmp
cmp
divb
adc
pop
or
int3
fbld
or
cmpsl
inc
into
xor
jge
cmpsl
jns
and
ror
sub
int
and
add
xlat
sub
mov
inc
data16
xor
dec
sahf
xorb
sbb
in
mov
xlat
and
adc
fiaddl
jae
adc
fisttps
hlt
inc
loope
sbb
shll
cwtl
mov
cmp
cmpsb
data16
add
inc
xor
jmp
mov
xchg
and
sub
jb
mov
iret
or
les
or
cwtl
cmpsb
inc
cmp
rcrb
jmp
sub
repnz
les
or
loopne
jp
mov
mov
mov
xchg
adc
mov
inc
call
mov
cmpsl
loopne
aad
popf
fisubrs
adc
aam
or
push
call
hlt
sub
cmc
mov
cs
push
jo
fidivrl
jo
cwtl
push
mov
push
add
sub
sub
call
addr16
stc
dec
mov
adc
shlb
lret
mov
das
push
sbbl
aam
cmpl
sub
insl
mov
in
frstor
in
dec
out
pop
pop
shll
test
pusha
test
mov
in
shll
sbb
jl
out
mov
xchg
cmp
cs
out
out
sti
pop
pop
jmp
or
lret
add
andb
pop
inc
adc
jae
mov
sbb
xchg
imul
cmp
popf
jg
test
movsb
adc
mov
punpcklwd
popa
jle
ja
movsb
loopne
sarl
jne
cmp
jne
lahf
mov
pop
test
inc
add
sahf
aaa
sub
mov
test
xor
push
dec
aas
enter
push
gs
cmp
pop
scas
mov
negl
mov
mov
in
das
pop
das
mov
sub
insb
lods
sub
out
sti
ja
jge
mov
aaa
pushfw
push
out
jns
rcrl
cmp
nop
popa
lods
mov
mov
stos
test
lock
jmp
insb
cmp
and
mov
sub
sbb
mov
loopne
mov
pop
scas
mov
movl
stos
dec
scas
push
or
sub
out
aad
fadd
pusha
nop
or
sub
push
stc
lds
ds
jb
push
push
loop
sbb
lret
jle
xchg
sub
fucom
sub
clc
add
sbb
sti
pop
fidivs
fwait
push
ds
jge
pop
outsl
addb
decl
and
addb
xchg
sbbb
mov
outsb
pop
cmp
icebp
pusha
push
lods
mov
jmp
aad
push
pop
mov
shl
sbb
fildll
add
jge
daa
in
pop
ja
push
cs
sub
popf
xchg
adc
xlat
or
inc
mov
jbe
out
out
xchg
test
and
int
test
add
mov
lret
jno
sub
in
add
push
inc
mov
setnp
adc
fisttps
sbb
call
mov
inc
leave
pop
sbb
imul
xor
dec
pushl
jmp
out
jno
add
cmp
stos
mov
cmp
popl
jne
ret
je
std
sar
push
pop
aad
stc
movsb
mov
test
lds
jg
icebp
xor
dec
lret
aam
add
add
jmp
aam
xor
arpl
lcall
mov
cmpsl
adc
sbb
push
mov
pop
test
sbb
cmp
adc
mov
shl
nop
adc
repz
out
stos
in
mov
incl
outsl
inc
push
je
fsubrl
lcall
adc
sbb
pusha
cs
jae
jbe
test
or
jmp
int3
mov
push
mov
dec
cmpb
ret
mov
ret
movsb
or
jb
jb
add
pushf
rorl
dec
lret
test
repnz
jl
dec
mov
cld
test
dec
adc
fadds
xor
xchg
jnp
push
out
xchg
push
jecxz
dec
adc
flds
lahf
enter
adcb
xor
imul
clc
test
rcr
dec
loope
je
aaa
bound
ljmp
loope
shrl
cmc
xchg
into
sub
nop
pop
scas
jle,pn
fdivs
dec
lods
shl
lea
cld
stos
inc
pop
sbb
out
fwait
mov
addr16
or
sbb
xor
jb
push
pop
jl
push
jb
jae
clc
jp
inc
test
icebp
fcomps
aad
sbb
ss
shll
mov
mov
xchg
daa
fnstsw
sahf
rcrb
xlat
sbb
push
push
in
int
cmp
mov
out
jbe
out
roll
adc
les
or
inc
rcll
adc
adc
imul
adc
mov
or
adc
xchg
fcoms
jae
pushf
sub
push
int
jns
test
or
xor
push
dec
cmpsb
sbb
mov
int3
add
rolb
inc
pop
jg
cmp
js
cs
rcrl
jb
mov
xor
scas
popf
sub
cmp
jae
std
xchg
je
cmp
outsl
rolb
rol
popa
xor
inc
out
xchg
inc
sti
ss
jnp
mov
es
pop
testb
rorb
imul
add
stos
lret
outsl
out
xlat
add
arpl
fwait
push
push
inc
test
lods
fildl
and
popf
call
or
je
cmp
cmp
xor
xorl
out
std
adc
mov
and
js
or
mov
iret
movsb
dec
add
dec
call
adc
sub
pop
loop
fildll
fnstenv
adcb
imul
or
popf
test
jae
leave
jmp
dec
inc
mov
mov
push
pop
push
aad
mov
sub
xor
stc
push
xchg
or
hlt
mov
and
or
mov
jo
aam
cltd
and
rclb
and
aas
insb
sbb
sbb
roll
js
pushf
fimuls
lods
xchg
test
iret
cmp
jl
jb
bound
mov
sbb
cmpsl
cs
stc
xchg
mov
aad
push
sahf
mov
dec
inc
ss
sub
adc
xchg
sbb
outsb
adc
sub
jmp
mov
or
sbb
sbb
mov
dec
inc
pushf
sbb
mov
int
xchg
fwait
stos
cld
pop
idivb
lock
icebp
cltd
lods
pop
add
icebp
cli
stc
adc
cmc
mov
test
push
scas
repz
pushf
mov
insl
rcrb
xor
ret
movsl
jnp
lahf
adc
adc
xor
outsb
mov
and
js
push
outsl
les
inc
add
lods
add
scas
pop
mov
bound
ret
add
lret
outsl
movl
sahf
imul
sar
push
enter
fildll
ljmp
pop
lret
sbb
sub
outsl
jb
xchg
pushf
outsb
and
push
loope
leave
inc
and
xlat
cmpsb
jp
movsl
push
les
test
xchg
jb
lret
jg
dec
push
and
sbb
push
jle
fnsave
xor
fsubrl
loopne
aas
sbb
sub
jle
jnp
fidivrs
outsb
sub
in
jmp
ljmp
fstpl
push
inc
outsl
ja
fsincos
pop
daa
or
pop
addr16
imul
test
pop
pop
jno
push
hlt
pop
scas
cltd
fsubrs
test
subb
enter
cs
lods
lret
cmp
pop
inc
loop
mov
cs
mov
aad
cld
push
aam
lods
push
stos
pop
jne
xor
call
stos
mov
inc
xchg
xlat
mov
cmp
push
inc
xor
aaa
xor
es
jecxz
jmp
aam
push
pop
cmp
out
mov
inc
add
test
add
mov
fidivl
dec
adc
fs
pop
add
jne
out
lahf
sarl
rcrb
es
add
and
fisttpl
in
clc
in
hlt
je
out
shrb
jne
jne
ret
or
jne
jg,pt
int3
test
das
dec
ret
xchg
lcall
push
sub
jp
pop
or
fsubrl
xchg
xchg
push
and
sarb
cli
push
jecxz
rorb
test
test
jne
sbb
cmpsl
mov
test
xchg
cmpsl
mov
cmp
shll
adc
test
adc
xor
in
faddl
pop
jge
cli
sub
daa
dec
mov
xchg
out
inc
into
xor
shr
xor
dec
sti
neg
popl
adc
rcrl
decb
cli
cld
cmp
jo
jnp
mov
mov
sbb
insb
in
and
adc
ret
ficoms
dec
addr16
pop
mov
mov
mov
mov
xor
stos
movhps
sbb
mov
std
out
and
fistpll
test
frstor
or
icebp
mov
jmp
imul
sub
flds
stos
xor
aam
loopne
popa
mov
mov
lahf
iret
adc
jb
push
push
or
test
mov
negl
outsb
popf
push
shlb
loop
pcmpeqw
mov
pop
mov
mov
mov
test
in
lahf
stos
orl
bound
loope
mov
mov
ljmp
popa
pop
or
adc
jl
aam
adc
jbe
mov
outsl
je
xchg
add
jecxz
scas
fbstp
jnp
xor
jns
ret
popa
bound
lods
push
rcr
mov
cld
dec
data16
sar
movsl
xchg
rdmsr
aad
andb
dec
loop
cmp
mov
fsts
rol
rorb
imul
in
sub
sub
lods
loope
dec
test
and
stos
sbb
fucomip
jl
cmp
into
lods
jo
das
cld
es
add
popf
shrb
inc
ds
mov
push
xorl
cli
ds
outsl
out
aas
inc
sub
sub
bound
jmp
jl
enter
repz
loope
jbe
and
mulb
std
sbb
enter
xor
dec
or
fdivrp
movsl
cmp
sub
bnd
fdivrs
sub
push
inc
out
mov
sbb
nop
sbb
jmp
subb
cmp
and
scas
dec
imul
cmp
sub
fs
roll
inc
mov
mov
int
inc
jnp
cmpsb
insb
mov
xchg
add
xlat
ja,pt
mov
leave
ret
aad
sub
in
dec
ds
inc
jns
sahf
out
cmp
int3
aad
iret
jle
sbb
lret
ror
mov
test
cmp
stos
sub
aam
js
test
enter
ss
sub
sahf
sahf
jg
insl
aam
xchg
xor
push
add
in
xor
and
stc
pusha
sbb
test
xchg
leave
xor
pushf
shl
mov
add
movsb
mov
xchg
xor
mov
repz
aad
pop
push
cmp
in
aam
lods
push
inc
movsl
or
mov
push
jecxz
arpl
mov
jbe
in
and
dec
clc
sub
inc
dec
jl
cmp
jp
ljmp
mov
ja
lods
das
fadd
push
imul
sbbl
movsb
repnz
sbb
xchg
jge
pop
cmpsb
push
lods
sub
fadd
inc
out
ss
xor
aaa
movsl
xchg
lea
mov
mov
cmp
call
or
decb
js
jge
mov
sbb
sub
adc
repnz
and
xor
sarl
hlt
test
mov
scas
arpl
push
inc
pop
out
sbb
pop
cmc
out
or
pop
imul
jae
adc
lahf
jecxz
mov
cs
scas
sti
enter
js
push
loop
mov
xchg
ficoms
sub
push
xchg
fidivrl
add
mov
insl
insb
xchg
sbb
xor
mov
pusha
add
mov
xchg
and
mov
std
popa
int3
jno
pop
mov
sahf
pop
scas
mov
and
and
lret
inc
repz
inc
test
es
stos
imul
ret
dec
aam
pop
sub
xor
or
mov
loope
push
nop
jb
or
pop
js
and
mov
mov
inc
push
in
test
pop
fbld
jbe
jmp
pushf
movsb
add
in
popa
adc
call
mov
sbb
out
clc
xchg
js
mov
test
cltd
add
shrb
mov
dec
rol
je
gs
andb
ja
cmpb
cmp
je
repz
cmpsl
pop
leave
xor
mov
mov
cmp
sbbb
mov
jo
test
fcoms
or
push
push
in
xchg
push
mov
cmp
dec
in
outsb
and
add
test
fcoml
push
push
jle
jne
lods
aaa
dec
xor
xor
push
pop
xchg
insb
adc
jl
jnp
mov
jmp
and
js
sub
add
mov
push
fbld
insb
adc
int
push
repz
es
test
xchg
popl
adc
je
clc
sbb
orl
inc
add
out
jno
adc
mov
push
scas
movsb
ss
or
rcrl
enter
mov
repz
sahf
loop
outsb
adc
ss
push
andl
sub
aaa
addr16
imul
pop
popf
add
loopne
push
sub
push
leave
push
fwait
stc
dec
jmp
and
testb
push
cmp
movsl
daa
and
test
and
pop
icebp
mov
test
adc
iret
and
mov
ss
daa
pop
jp
dec
mov
dec
out
and
js
pop
sbbb
add
aaa
sbbb
push
xchg
adc
xor
imul
inc
xchg
in
adc
xchg
and
inc
jns
outsl
pop
aaa
pop
sahf
fisttps
xchg
xchg
pop
xor
movsl
and
add
lock
push
fwait
mov
dec
fildll
test
pop
daa
xor
jmp
gs
je
jge
in
lcall
push
push
test
fiadds
es
xchg
mov
bound
inc
scas
sbb
add
pop
dec
cli
dec
adc
pop
jmp
int3
cmpsb
mov
cmp
and
ja
int
push
inc
jo
inc
aad
pop
stos
popf
iret
outsb
pop
movsb
mov
mov
adc
cmp
stos
add
stos
jmp
push
sbbl
pop
push
jecxz
lods
push
gs
insl
inc
hlt
sarl
pop
cmovb
js
jne
shl
xchg
leave
bts
jge
sahf
jno
jmp
hlt
jle
scas
test
cwtl
mov
adc
cltd
inc
xor
movsb
std
mov
jo
mov
cmp
jecxz
out
mov
arpl
or
ficompl
test
sbb
jg
subb
outsl
pop
jmp
aad
shl
push
lods
push
mov
fwait
mov
fwait
adc
adcb
inc
jne
test
cmp
js
mov
movsl
push
inc
enter
pop
pop
cmp
mov
sar
cs
sbb
pop
stc
adc
mov
jmp
gs
mov
pop
in
push
xchg
xchg
nop
in
aam
jbe
cmp
cmp
cmp
fsubrl
sub
cwtl
out
fadd
mov
sub
fistl
mov
scas
mov
iret
jb
mov
mov
mov
ficompl
push
or
add
dec
int3
xlat
inc
movups
fnsave
or
js
insl
mov
fistps
pushf
push
addr16
pop
add
sub
push
xchg
cli
mov
cmp
stc
add
rol
addr16
into
mov
mov
dec
add
add
lock
das
jecxz
aas
and
das
or
shrb
nop
testb
inc
lds
movsl
or
push
or
dec
out
enter
test
push
fists
xchg
mov
xchg
std
or
sahf
xor
jmp
jecxz
sub
mov
pop
add
pop
inc
aas
jp
rolb
lcall
lret
xchg
je
lahf
repz
es
cltd
add
in
pop
push
mov
or
nop
lcall
stc
xchg
mov
in
pop
out
adc
or
sub
insl
rolb
sahf
mov
and
pop
fimull
outsb
xchg
outsb
dec
jb
xchg
mov
outsb
push
gs
mov
setnp
aam
push
jb
loopne
sarl
int3
rclb
mov
in
cmpsl
sbb
pop
push
roll
cmp
roll
fcomp
jb
mov
push
outsb
xor
sub
outsb
out
xchg
add
dec
loope
jnp
mov
or
adcl
jle
push
and
das
cli
mov
push
push
sbb
or
jmp
fs
cmp
sbb
jecxz
add
mov
xchg
pop
std
push
mov
sbb
pop
iret
or
sarb
dec
call
mov
mov
in
jecxz
push
sarb
aaa
push
lods
cmp
adc
push
outsb
xchg
mov
xchg
cmpsb
jl
mov
orb
call
fcoml
push
in
loop
jbe
fisttpl
shrb
adc
mov
xor
xchg
sub
jne
cltd
rcr
jno
repz
movsl
cwtl
mov
dec
int
iret
adc
jg
sbb
xchg
outsl
out
cmc
pop
das
mov
mov
mov
icebp
ret
aaa
addr16
jnp
arpl
imul
movsb
push
lret
push
mov
add
push
lea
lods
inc
setle
mov
cmc
into
sbb
aaa
jmp
ss
add
fmuls
mov
pushf
dec
sahf
ds
clc
sbbb
movlps
push
aaa
fistpl
inc
popf
adc
popa
or
jecxz
test
repnz
jne
cmc
jp
pop
push
stos
push
lock
push
popa
xor
add
inc
sub
jl
out
jns
loope
dec
dec
iret
jge
mov
fwait
add
jle
mov
xchg
xchg
add
add
cli
mov
fidivrs
je
insb
add
xchg
jne
stos
aad
jp,pt
xchg
adc
cmp
inc
cld
ljmp
cmc
loop
jbe
pusha
mov
or
dec
mov
andw
rolb
inc
mov
and
lcall
mov
pop
dec
lods
add
out
cmp
adc
inc
xchg
aam
mov
das
rolb
xor
inc
out
pop
add
test
or
xor
push
add
cmp
rclb
loop
pop
cmpsb
clc
insl
lret
add
loop
push
push
pop
sbb
cltd
jge
dec
add
jae
andl
sbb
cmp
push
add
pop
xor
push
loop
pop
scas
cmpsb
imul
scas
xor
push
scas
aad
mov
inc
out
pop
mov
loop
pop
add
cmp
fwait
mov
out
je
dec
std
mov
stos
pop
push
lret
pushf
out
cmpsb
movsl
sbb
cmp
adc
mov
dec
loope
dec
ljmp
pop
jbe
mov
or
adc
xor
mov
insl
andb
lea
mov
out
add
mov
cmp
xor
push
lcall
xchg
adc
js
add
cltd
jnp
jb
mov
clc
daa
fldl
sbb
sub
lret
xchg
jno
aas
or
adc
jl
pop
and
or
pop
mov
push
push
push
ret
and
push
in
scas
enter
mov
into
sbb
pop
push
push
xor
push
loope
sub
nop
add
jae
push
add
mov
sti
add
scas
gs
stos
cwtl
mov
sub
inc
xchg
and
mov
push
inc
filds
mov
lds
cmpsl
mov
inc
push
pop
pop
or
idiv
dec
inc
movsb
inc
jb
inc
jmp
aad
add
popf
outsl
ljmp
call
cltd
dec
mov
orb
push
mov
out
push
dec
fbld
and
adc
adc
repz
clc
xor
popa
sarl
and
outsb
cmp
inc
decl
pop
std
adc
or
sbb
movsb
sarb
cmp
out
jo
nop
mov
mov
push
pop
test
cs
stos
jb
pushf
rclb
mov
inc
idivl
in
ds
jnp
pop
sbb
repz
jns
loop
int3
outsl
mov
js
cs
cmp
fwait
push
fidivrs
xchg
pop
mov
cmpsb
and
jmp
lods
mov
inc
and
es
inc
xchg
xor
fs
test
push
loop
insl
adc
push
or
sbb
pushf
xchg
pusha
aad
fucomip
pop
lahf
loopne
mov
xchg
and
jmp
inc
mov
subl
clc
mov
inc
in
xchg
call
sub
pop
mov
xor
imul
pusha
test
std
sub
out
mov
pop
jge
hlt
aad
adcb
ficoms
ds
jno
cmc
sbb
cltd
xchg
nop
adc
loopne
popf
lds
cld
mov
subb
lahf
xchg
sarl
inc
pop
shll
jp
aad
into
mov
push
inc
mov
mov
cli
dec
rol
sbb
imul
fwait
push
loope
push
jne
pop
popa
xor
std
cld
pushf
ret
add
repz
sub
or
push
rcl
xor
xchg
sbb
lret
jg
cmc
xor
and
pop
add
jne
in
subb
add
fisttpl
loope
int3
movsb
sbb
dec
shl
ljmp
in
xor
iret
pushf
arpl
adc
cwtl
sub
jle
sbb
or
xchg
pop
pop
pushl
mov
sbb
pop
nop
in
xchg
sbb
push
mov
repz
decl
hlt
pop
leave
imul
jbe
clc
pop
cmp
sbb
xchg
pop
out
lods
fistpl
sbb
dec
push
mov
inc
pusha
push
test
in
mov
in
pop
icebp
clts
mov
push
outsl
imul
jle
pushf
ja
daa
cmp
mov
adc
mov
dec
lods
dec
mov
loope
mov
inc
mov
or
insl
sub
fs
fmuls
es
xor
stc
fs
movsb
popa
cmp
data16
sbb
mov
fstpt
jl
fistpll
popf
mov
cmpsl
or
push
mov
movl
cmp
dec
imul
add
data16
add
add
je,pn
in
es
and
repz
add
sbb
xchg
mov
mov
stos
and
lret
cmp
mov
mov
and
jmp
mov
push
jge
insb
imul
pop
mov
push
and
jns
push
pop
insb
and
inc
int3
cltd
out
cmp
les
cmpsb
mov
inc
sub
inc
fs
insb
push
mov
in
outsl
xor
shll
and
rcll
imul
fisttpll
je
fmuls
mov
dec
sub
imul
jns
sbb
dec
fdivrs
mov
mov
scas
adc
fadds
xor
imul
sbb
xor
mov
test
cmpsb
xor
out
rcrl
xor
imul
cmpb
push
mov
xchg
jae
inc
rcl
cmp
and
arpl
pop
arpl
sbb
jno
add
push
repz
repnz
cli
push
stos
nop
jle
aaa
int3
fwait
aam
and
repnz
jge
aad
or
repz
int
rcr
gs
xor
mov
sti
and
push
jo
btc
lret
out
mov
cld
insl
inc
shl
inc
mov
test
pop
fldenv
or
inc
sub
ret
pop
add
xchg
mov
ljmp
xchg
in
outsb
inc
and
ja
xchg
mov
sub
out
mov
stos
push
mov
das
fs
fnstenv
aam
lock
imul
enter
test
movsb
cmpsl
jge
aam
inc
adc
fidivrs
adc
jg
mov
mov
ret
lea
cmp
xorb
inc
xor
push
jb
nop
aas
imulb
adcb
arpl
int3
stos
sbb
sbb
pop
in
push
mov
sbb
mov
sub
pop
into
pop
pop
inc
scas
and
pushf
cmp
pop
repnz
cmpsl
mov
inc
jmp
lods
insl
shll
dec
test
int
lods
rcrl
rol
push
or
loope
rolb
mov
pop
cmp
fldenv
xchg
mov
ret
ja
popa
int3
mov
xacquire
test
aas
sti
jb
xchg
jp
je
rorb
decl
or
call
nop
cmp
shlb
adc
xlat
dec
fstpt
pusha
call
cwtl
mov
cli
repz
adc
fldl
pop
rorb
adc
int
pop
pop
push
sbb
mov
mov
movsl
cmpsl
cmp
and
mov
mov
in
xor
inc
jbe
xor
xchg
lahf
ret
jg
dec
adc
clc
lods
ficoml
or
or
sbb
inc
idivl
or
test
or
push
cmp
fbld
shl
pop
pushf
dec
pop
xchg
dec
add
jne
loope
loopne
xlat
mov
push
mov
out
xchg
leave
cld
ja
mov
xor
push
adcb
mov
jp
lret
lods
sbb
pusha
fwait
dec
addl
loopne
push
pop
dec
sbb
adc
mov
mov
enter
adc
mov
test
cmpsb
dec
xor
cmp
inc
xlat
test
and
and
movsb
int3
push
aad
scas
push
push
popf
mov
cmp
cli
dec
jg
rdpmc
shlb
push
shrl
std
sbb
mov
outsb
movsb
add
adc
add
addb
pop
jo
mov
ja
xlat
jno
cmp
mov
jecxz
call
jae
insl
fdivrs
inc
xchg
orb
inc
cmpl
int
cmpsl
inc
je
mov
cmpsb
push
movb
xchg
mov
scas
adc
mov
lcall
sbb
xchg
mov
sub
jmp
sbb
push
loopne
rclb
cmp
mov
jle
sub
dec
fistpl
inc
sub
jne
int3
push
pop
pusha
movb
jb
loope
out
mov
fwait
mov
dec
sbb
xchg
adcb
rclb
fstps
lock
out
test
notb
adc
add
outsl
dec
push
xor
icebp
mov
adc
sub
imul
mov
inc
push
repz
fs
mov
adc
lods
xor
rorl
jbe,pt
ss
call
push
mov
jbe
add
mov
or
mov
xor
popa
data16
jecxz
inc
cmpb
mov
mov
xchg
xlat
push
sub
cmp
rcrl
cmp
xchg
fstps
adc
sub
insb
mov
inc
loop
test
mov
mov
xor
fiadds
mov
jmp
lods
imul
pushf
mov
adc
shlb
stc
popf
stc
mov
xchg
pop
pop
mov
push
mov
push
mov
loop
call
mov
mov
adc
cwtl
shl
popl
int
rcll
movsl
add
push
inc
cmpsl
xor
shll
adc
rcl
lcall
jle
loopne
jmp
adc
pop
push
fwait
lods
arpl
sub
cmp
sub
sub
fucompp
jns
and
mov
nop
lcall
decl
or
stc
aaa
dec
jnp
in
mov
push
mov
jmp
adc
sub
cli
jne
aaa
jp
cmp
loop
pop
ret
sub
pop
fwait
ja
mov
xchg
inc
rcl
shlb
xchg
sub
push
je
mov
icebp
fdivrl
in
inc
push
movsl
sbb
lock
jb
test
lods
xchg
fs
push
sub
lret
sub
add
dec
sbb
fsubs
notb
lahf
fisttpll
cmp
sbb
jns
sub
add
jae
mov
or
adc
rcrl
int
jmp
mov
in
mov
jno
xchg
divb
mov
cmp
sarl
xchg
or
pop
fadds
lea
pop
jnp
mov
jecxz
mov
movsb
fsubrs
or
or
inc
adc
dec
jle
pop
pop
std
jge
decb
in
cmp
sbb
test
inc
or
sahf
add
iret
out
fcmovbe
add
lret
pop
rcl
pushf
repz
clc
inc
jle
inc
hlt
jecxz
cmp
push
mov
call
xchg
jg
test
xor
and
fstl
inc
mov
sub
jle
mov
mov
mov
mov
mov
shrb
lods
sahf
pop
cmpsl
pop
xor
mov
cs
out
outsl
or
movsl
inc
mov
push
scas
test
mov
add
jbe
mov
mov
loop
jo
mov
jbe
pop
mov
fnstenv
xor
popa
subb
outsb
jo
mov
cmp
push
push
and
out
sub
insb
push
mov
ja
outsb
pop
mov
out
push
roll
xchg
insb
xchg
aas
sbb
aaa
mov
loopne
test
sub
xchg
pop
dec
jmp
inc
cwtl
idivl
cli
imul
mov
hlt
sbb
sub
xchg
pusha
outsb
sub
inc
cmpsb
xor
add
xchg
lret
stos
out
push
xchg
adc
cli
mov
xchg
push
ficomps
sti
sbb
aas
aam
test
shll
push
scas
pop
enter
icebp
das
iret
stc
sbb
cmpsl
in
xor
dec
mov
nop
icebp
xlat
cmp
enter
mov
jge
shrl
leave
mov
mov
or
cmp
or
movsb
mov
leave
lcall
pop
loope
stos
sbb
add
data16
stos
sti
or
push
jbe
pop
in
hlt
mov
fsubrs
cs
push
push
jb
mov
jge
fildll
cltd
sbb
cmc
popf
mov
in
dec
imul
pushf
inc
jns
adc
in
adc
divl
das
cmp
add
sbb
icebp
into
lds
stos
cmp
xor
ljmp
dec
fdivrs
push
adc
adc
sbb
cmp
or
mov
jge
loopne
daa
sarl
jmp
mov
mull
ret
std
out
cmp
insb
mov
adc
mov
cmp
xchg
push
aas
mov
xchg
push
insb
and
sahf
je
jns
fwait
dec
pop
dec
push
pop
inc
dec
or
or
mov
fimull
lods
test
xchg
mov
adcb
cmpsl
push
scas
jns
adc
cmc
jl
test
mov
leave
inc
add
jb
push
fimull
insb
cld
mov
sbbl
mov
mov
inc
aam
and
inc
xor
popf
repz
adc
mov
mov
xchg
cmp
shrb
jnp
out
stc
insb
push
loope
test
and
test
and
sarb
jno
out
pop
add
adc
nop
push
cli
add
inc
aaa
iret
test
mov
pop
andl
mov
lahf
inc
jo
sbbl
cmp
mov
dec
jl
sub
popa
xchg
xor
xor
je
jbe
pop
mov
or
cmp
xor
add
decb
inc
es
mov
iret
addr16
mov
lods
sub
xchg
xchg
fdivl
fnstcw
stos
inc
sub
cli
dec
es
shrb
imul
out
enter
sub
les
xchg
inc
or
out
ds
jnp
add
jbe
fsubr
js
jae
icebp
push
mov
shll
call
push
xchg
mov
ds
mov
pop
sbb
push
adc
mov
outsl
dec
jg
lods
out
push
scas
mov
aas
repz
or
arpl
sbb
dec
sbb
xor
lds
bts
dec
add
sub
test
mov
xor
sbb
cmc
insl
stos
jl
pop
sahf
mov
lret
sbb
clc
and
dec
xor
pop
dec
push
jne
movsl
insb
ds
mov
or
psrlw
ljmp
popa
addr16
lods
mov
cld
or
inc
or
mov
or
sbb
hlt
repz
sub
pop
mov
xchg
aad
fidivs
arpl
mov
jns
mov
fdivl
fsubl
arpl
inc
jmp
lock
ret
lock
rcll
ja,pn
insl
and
inc
push
jle
mov
lock
lcall
lahf
inc
test
mov
xchg
aaa
push
flds
mov
lcall
xchg
sti
test
dec
mov
outsl
pop
push
std
andb
adc
movsl
jge
cmpb
dec
xor
dec
pop
mov
stos
bound
jg
fwait
jmp
int3
fisubrl
sub
scas
pop
jl
mov
xor
aaa
push
out
jle
add
or
out
xlat
and
sbb
mov
enter
leave
push
add
jnp
mov
jb
cmp
mov
jle
cmp
mov
and
sub
jbe
xor
fildll
inc
mov
sbb
dec
pop
and
add
inc
and
adc
shlb
divb
test
sub
orb
test
sbbl
mov
xlat
xchg
lret
mov
daa
das
test
or
ret
adc
shrb
fs
push
filds
sbb
inc
xchg
imul
dec
mov
jmp
inc
xor
mov
jnp
scas
fwait
mov
mov
decb
jle
fs
adc
push
stc
icebp
in
xor
fists
mov
pusha
shll
imul
iret
loopne
dec
out
mov
inc
cli
cmp
fsubrp
nop
xor
mov
test
nop
pop
dec
das
out
dec
lea
out
cld
movsl
fisubl
cwtl
jp
jns
in
gs
fwait
jb
in
add
jmp
or
test
int3
push
popf
subb
fld1
std
and
les
icebp
adc
sti
push
xor
and
cmp
sub
outsb
mov
or
cmp
lods
dec
vmaxps
fiadds
pop
add
daa
mov
call
pop
lahf
addr16
and
mov
jne
imul
addb
sbb
add
lret
mov
ds
mov
jmp
sub
and
lock
scas
in
jbe
int3
fnstcw
pop
adc
xchg
cmpsb
cmp
stc
out
and
mov
insb
jae
push
ljmp
push
out
repz
cwtl
and
pop
jne
dec
je
inc
push
out
lock
cmp
aam
adc
adc
dec
jno
or
sbb
in
cmpsl
test
out
cmpsl
sbb
xor
daa
jb
test
mov
cmpsl
es
dec
lret
push
sbb
push
mov
xor
jle
mov
inc
mov
scas
jns
mov
mov
cmp
mov
inc
dec
xchg
jp
jb
pop
das
pop
cltd
and
lret
outsl
ficoms
xchg
xor
push
adc
jecxz
cmp
mov
mov
pop
mov
fildl
ret
insl
xor
push
cwtl
iret
pop
or
icebp
jae
mov
fcomp
xchg
and
sub
out
add
in
dec
lret
cmc
mov
dec
bound
mov
or
lret
cmp
push
mov
sub
sub
sbb
dec
inc
ds
loope
xor
subb
popa
sub
daa
jecxz
jb
mov
jnp
sub
cmpsb
lret
xchg
scas
jbe
out
stc
hlt
repnz
outsb
push
std
scas
push
xor
cmpsb
adc
outsl
jbe
push
mov
ds
rcll
jb
in
xor
out
sbb
inc
aam
cmpl
fs
jns
push
popa
sbb
add
push
push
add
or
nop
xchg
fcomps
cmp
les
jne
fldt
pop
and
cmp
push
ss
pushf
div
xchg
jg
out
and
sub
jle
jae
cs
add
stc
jge
fisttps
int3
rorl
lahf
pop
add
test
out
cmp
xlat
mov
ds
js
cmp
aas
fucom
jne
mov
das
fdivrl
shrb
out
inc
sub
ret
mov
aam
mov
jns
push
pop
aam
dec
push
adc
mov
loopne
inc
lret
sbb
sbb
dec
cmp
push
mov
inc
jle
sarb
test
jg
repnz
pop
fadds
mov
out
fwait
jo
aaa
test
ljmp
dec
repnz
jecxz
ret
insl
push
pop
fptan
push
adc
dec
mov
popa
loop
icebp
inc
outsl
xor
push
jb
lahf
pusha
xchg
ret
sub
lods
cmpsl
mov
and
and
cmpsb
inc
movsl
jecxz
xchg
push
clc
cmp
mov
push
mov
jb
pop
cmpsl
and
xchg
inc
xchg
insb
out
lret
clc
jge
ret
mov
ficoms
les
in
lods
outsl
dec
xchg
cli
and
out
fstpl
shll
inc
mov
push
int3
mov
cmp
repz
push
inc
sub
adc
cmp
xor
cld
pop
and
dec
lahf
pop
out
and
int
push
loopne
and
dec
andb
cmpsb
or
outsl
rcrb
movsl
jmp
inc
in
cld
iret
lods
mov
xchg
adc
fmuls
jl
aad
leave
int
sahf
jp
push
imul
mov
or
mov
roll
pop
lahf
jnp
lea
push
mov
jecxz
pop
das
lds
bound
cli
mov
dec
cmp
movsl
mov
xchg
fwait
outsl
mov
movsl
punpckhwd
out
jp
and
nop
hlt
sarl
xlat
add
fnstcw
sbb
cmp
sub
mov
loop
cmp
movsl
push
cmp
cs
jge
lods
jl
inc
pop
test
xchg
dec
cmpsb
adc
cld
jnp
inc
popa
xor
pop
nop
jle
dec
sub
pop
rol
sarb
inc
mov
test
xchg
push
dec
cli
fcoms
inc
leave
aam
stos
vmovdqa
out
push
in
cmc
push
leave
add
xchg
push
cli
sbb
mov
out
cmp
and
fnstcw
sub
cmpsl
xchg
or
out
jp
cmc
push
int3
jb
push
xchg
clc
mov
mov
movl
shlb
mov
je
decl
dec
lret
rolb
mov
popa
mov
in
xor
stos
add
sub
ss
pop
or
pop
mov
mov
xchg
insl
ret
sub
icebp
pop
jae
mov
out
cld
loopne
scas
and
pop
inc
clc
inc
xchg
shrb
movsl
cltd
mov
xchg
xor
dec
mov
jge
push
shl
fs
imul
outsb
and
sbb
mov
xlat
jle
popf
xor
imul
push
cltd
jmp
std
loop
xor
mov
je
jmp
and
scas
repnz
stc
call
and
aaa
push
fimull
sub
mov
sbbl
mov
hlt
in
in
add
dec
rclb
jne
popa
mov
jns
sbb
sub
add
int
cmp
or
mov
sub
ficompl
ja
sub
and
mov
dec
or
mov
lods
pop
adc
ss
stos
sbb
dec
repnz
jae
mov
mov
mov
and
xor
bound
jmp
xchg
xor
or
rolb
fstpl
pusha
sbb
in
mov
je
add
aad
cwtl
xchg
out
adc
idiv
pop
js
push
je
lcall
in
popf
xchg
dec
and
rorb
scas
shll
in
jp
xchg
dec
push
scas
fdivl
pop
push
lahf
sahf
test
xchg
adc
popl
sub
inc
repz
lock
arpl
dec
cmpsl
fsubrl
mov
or
nop
push
push
loope
jg
in
dec
lock
adc
out
es
jb
das
or
xor
mull
jbe
loope
or
pushf
ret
push
xor
aad
or
xchg
ss
dec
sbb
xchg
leave
js
jl
jle
push
in
js
mov
inc
mov
jmp
mov
dec
sbb
xchg
in
or
les
mov
int
aaa
push
aam
or
inc
imul
push
xchg
sbb
inc
push
aas
mov
imul
mov
push
pop
jp
call
bound
xor
fucomi
adc
andl
dec
jns
jb
scas
inc
outsb
popf
js
dec
scas
in
dec
pusha
mov
out
dec
jp
es
add
je
mov
mov
enter
jnp
cmp
movsb
rol
ficoms
jge
mov
inc
enter
pop
pop
sbb
enter
xor
or
xor
sbb
fisttpll
cmp
xchg
dec
lcall
shll
ljmp
xor
into
outsb
push
or
or
js
inc
sbb
pop
pop
cmp
rolb
rolb
js
or
dec
shl
jns
into
arpl
add
lock
call
jge
test
or
pop
pop
xchg
push
mov
test
arpl
bound
pop
in
push
cmc
das
jg
cli
nop
adc
dec
mov
lahf
mov
std
movsl
and
pop
sub
out
leave
push
vcvttpd2dqy
int
push
mov
lock
pop
inc
les
insb
pop
mov
dec
cmp
or
push
js
push
out
push
mov
sbb
jnp
jae
or
adc
out
jge
mov
js
add
dec
push
dec
or
push
and
cld
loope
push
loop
addr16
dec
mov
addr16
pop
fimuls
cld
pop
inc
lods
sbb
or
pop
dec
cmp
in
arpl
iret
jmp
divb
cmpsb
dec
outsl
fistpll
jle
out
xor
rclb
sbb
mov
div
jae
ret
dec
test
add
xchg
sbb
xchg
xchg
std
scas
inc
out
addr16
cwtl
in
sbb
or
shll
fstl
adc
sub
outsl
psrad
je
dec
xchg
cltd
jl
mov
mov
out
js
dec
popf
and
loop
ljmp
fmull
jl
dec
push
adc
cmc
or
mov
push
cli
sbb
sar
pop
scas
imul
mov
or
inc
repz
xchg
sbb
mov
or
mov
jge
jge
cs
push
inc
mov
mov
fsts
test
mov
inc
xor
es
dec
inc
dec
or
xchg
push
inc
lock
dec
test
cmc
out
aas
push
mov
aad
pop
popf
stos
cmp
movsl
in
mov
stos
mov
vdivps
mov
add
dec
push
mov
fisubrs
mov
xchg
scas
or
test
into
jne
dec
sub
mov
lods
xor
adc
cmpsl
push
sub
inc
neg
popa
mov
sahf
lock
push
jmp
and
popa
jl
xor
popf
add
jg
les
dec
mov
lods
pop
rep
jnp
fwait
cwtl
push
push
jmp
cld
pop
or
mov
lret
shll
lret
imul
jae
mov
repnz
mov
cs
shll
push
imul
enter
lahf
add
add
jno
mov
push
mov
and
mov
or
cmp
out
addl
push
adc
mov
mov
jns
pop
dec
fdivs
je
mov
pop
and
ret
into
push
popf
popl
imul
hlt
rolb
add
dec
fcoml
xchg
inc
je
roll
loopne
jnp
mov
push
fsubl
sub
outsl
xor
mov
sbb
out
imul
inc
outsb
xor
and
scas
jp
inc
jnp
js
fidivrs
aas
add
ljmp
pop
shll
arpl
loop
mov
dec
pop
aam
mov
nop
cmp
addb
lret
aad
js
icebp
or
hlt
lock
jo
jb
adc
fld
jae
jbe
mov
sub
inc
mov
mov
or
add
sbb
xor
pop
pop
lods
mov
gs
xor
jae
sbb
sub
xor
jmp
enter
sbbb
int3
add
jl
sbb
push
fimull
outsb
xchg
inc
mov
sbb
cmpsl
and
gs
or
jne
cmp
sub
call
xchg
inc
jno
inc
es
rcll
pop
aaa
cmc
push
jmp
jo
dec
out
mov
and
es
ljmp
or
mov
cmp
mov
ja
fistps
repnz
pop
push
rcr
subb
inc
call
ret
hlt
ret
sub
push
pop
inc
js
lods
insl
lock
push
mov
inc
mov
mov
jle
xlat
mov
leave
mov
je
int
sbb
aad
xor
es
in
sbb
xor
mov
fyl2x
adc
mov
icebp
xchg
mov
xor
and
daa
sub
aaa
fiadds
ds
pop
mov
lcall
mov
cmp
or
mov
aam
nop
pop
lea
mov
push
inc
cmpsb
and
push
cmp
loopne
test
xchg
push
jae
pushf
dec
movsl
mov
imulb
stc
loop
adc
out
xchg
cltd
cld
cmp
outsl
jle
cwtl
cmpl
popa
pop
sub
lret
or
or
push
lcall
sar
adc
xor
das
mov
nop
push
xchg
push
sub
add
movsl
je
in
pusha
ja
jo
mov
xor
dec
adc
sbb
in
fistl
movsb
jno
jl
xor
pop
cs
mov
rcrb
shrb
pop
sbb
jns
add
push
mov
dec
push
mov
aad
mov
add
mov
inc
test
sarl
lods
test
ficoms
add
jmp
jecxz
adc
inc
pop
dec
sub
add
insl
test
xor
aaa
fdivrl
mov
mov
add
sub
jnp
push
inc
sbb
push
jo
cmp
int3
mov
aam
cmp
push
test
and
cmp
repnz
push
lcall
and
sbb
cmp
rep
mov
in
int3
lcall
mov
jecxz
mov
roll
dec
jbe
jg
or
sbb
mov
mulb
push
repz
fst
pop
enter
mov
lret
lods
clc
test
xorl
or
cmp
cli
lock
sbb
in
inc
dec
mulb
sub
dec
pop
iret
fmull
shlb
icebp
add
stos
and
mov
cs
sbb
icebp
or
jmp
test
sbb
mov
in
cmpsb
arpl
loop
lea
cli
loop
jae
stos
inc
ret
movsb
xor
jmp
mov
mov
cmc
jno
jge
push
and
cmp
pop
shr
mov
test
sub
fisubrl
fnstsw
push
loop
push
je
enter
push
xchg
leave
cmp
dec
jge
mov
or
nop
insb
je
xchg
dec
aas
pusha
or
adc
fwait
cmpsb
pop
iret
jbe
clc
fs
daa
add
mov
dec
jg
jno
adc
fs
xor
cwtl
into
ljmp
sbb
cltd
test
popf
inc
and
cmc
or
cmpsl
xor
aaa
ds
cmpsl
repnz
add
movl
or
insb
push
inc
orl
insb
pop
jno
pop
push
fdivrs
xchg
mov
cmpl
mov
mov
inc
pop
rolb
xor
nop
push
sbb
inc
pop
cmp
push
icebp
std
adc
jns
testl
add
or
cmp
push
add
pusha
insl
add
gs
mov
loopne
and
mov
cmp
xchg
in
jge
std
mov
repz
test
jnp
leave
rolb
std
pop
mov
clts
pushf
loope
add
cmc
pop
mov
inc
adc
mov
jmp
mov
fcoms
ds
jo
dec
sarl
mov
inc
push
pop
int
mov
cmp
cmpps
lret
xchg
and
mov
cmp
push
jns
in
jmp
fdivl
pop
mov
cmp
int3
mov
xchg
sub
loope
rcll
xor
mov
pop
cs
push
out
xchg
xor
jge
mov
insl
aad
xor
sbb
cwtl
jle
fwait
aas
sub
test
aaa
jle
or
push
dec
xchg
clc
sbb
mov
pop
and
mov
lret
stos
pop
sbb
mov
loop
frstor
cwtl
outsb
les
rclb
out
and
pop
add
and
xor
mov
add
scas
push
mov
pop
les
ss
pop
loop
mov
adc
jl
std
pop
push
mov
dec
fildl
aam
cmp
adc
outsb
dec
cmpsl
cmp
xchg
adc
test
je
mov
ret
nop
pop
sti
or
pushf
leave
js
cmp
and
pop
jle
in
ds
jp
push
cmp
addr16
fldenv
push
xchg
push
lret
jge
imul
shrl
xchg
inc
sbb
sarb
icebp
shl
cmp
aad
or
pushf
mov
pop
sbb
lcall
push
adcl
dec
push
cmp
dec
mov
xchg
test
sbb
out
or
xchg
and
imul
mov
scas
cmp
lret
jns
add
sub
in
push
xor
jge
popf
popf
ljmp
xchg
pusha
or
jb
lahf
mov
fcmovnbe
lods
adc
push
or
andb
cmp
out
inc
sbb
fsubl
pop
xchg
sbb
inc
stos
sbb
jmp
and
jg
pop
aam
xor
add
cs
add
inc
repz
insl
add
lea
pusha
add
sub
pop
inc
lret
ljmp
cmc
pop
repnz
mov
enter
push
js
std
xor
mov
loop
lcall
or
loopw
cs
pushf
or
mov
cmp
subb
mov
mov
das
shll
mov
in
adc
jle
pop
mov
pop
cmp
sub
sbbl
cmpsb
out
xchg
andl
dec
cli
jae
add
test
iret
icebp
arpl
cmc
arpl
xlat
push
lahf
add
jae
pop
es
es
arpl
jle
repnz
rorl
jne
ds
inc
imul
jnp
push
loope
or
cwtl
icebp
inc
push
aam
stos
sub
jg
out
movsl
xor
mov
xchg
loopne
dec
das
mov
notb
pop
or
bound
jecxz
push
lret
pop
add
jle
mov
scas
mov
out
or
inc
jge
sbb
addr16
pop
in
movsl
icebp
push
aad
lods
addr16
mov
xchg
loopne
stos
pusha
sbb
sbb
shrb
and
mov
inc
leave
lret
pop
jbe
or
and
push
push
lds
decb
js
in
lcall
scas
shll
cmp
sub
sub
std
dec
cmp
push
cmpl
loop
xchg
nop
mov
fcomip
inc
or
xchg
pusha
mov
sbb
mov
sub
sub
loope
adc
xor
inc
jno
adc
and
lea
cmpsb
xchg
mov
js
and
shr
movsb
loop
stc
ret
test
mov
movsl
sub
leave
push
xor
cs
xchg
mov
popf
repnz
pop
faddl
sbb
lcall
loope
mov
mov
mov
shl
add
popf
mov
mov
or
xor
lret
lods
mov
xor
cmp
dec
xchg
dec
mov
mov
popf
add
jl
or
cmp
insb
sti
mov
daa
rcl
iret
and
mov
movsb
popa
inc
inc
sbbb
push
test
xor
push
fnstcw
adc
fmulp
cmpsb
sbb
loopne
js
imul
data16
bound
pop
test
jns
push
ret
test
jmp
cmp
mov
es
loopne
sbb
dec
neg
push
clc
sbb
jno
in
mov
popf
mov
fdivp
fmuls
xor
insl
xchg
or
and
xchg
test
enter
jle
aas
and
sub
int3
mov
adc
in
jge
adcb
or
mov
jo
test
lret
jle
xor
fisubrs
pop
mov
lods
adc
repnz
ds
and
iret
jmp
push
out
jb
ret
sbb
or
mov
push
pop
lods
sbbb
repz
jbe
and
dec
push
xchg
cmpsl
inc
gs
scas
cmpsb
xor
dec
lret
fs
test
dec
xor
push
daa
shrb
ljmp
mov
out
stc
jns
cltd
mov
out
or
adc
push
int3
in
xchg
push
rcrl
lret
dec
test
mov
shll
dec
int3
scas
cmp
shrl
push
and
dec
lock
mov
jecxz
pop
andb
movsl
stos
push
or
movsb
insl
add
aas
outsl
sub
or
mov
mov
repz
cmp
cld
push
mov
jp
cmc
int
push
cmp
stos
lds
pop
fstpl
mov
mov
and
sbb
pop
sahf
lods
mov
jo
lret
cmp
add
inc
repnz
jg
sbb
cltd
xor
mov
sar
test
push
fstp
dec
enter
adc
insb
out
mov
in
out
push
mov
mov
or
aam
mov
cli
aas
iret
jb
sub
add
mov
divb
int
fstps
jle
adcb
xchg
jns
push
push
add
ret
gs
sarb
lock
pop
jbe
xor
push
movsb
xor
repz
bound
push
les
cmp
cli
xlat
pushf
enter
in
ds
cmp
lret
ljmp
pop
add
jb
bound
jbe
mov
adc
xor
jmp
sub
cmc
and
inc
adc
inc
jle
popa
ret
and
int
inc
aaa
sbb
sub
dec
sbb
add
dec
loope
mov
mov
xchg
test
inc
push
rol
xchg
lds
sub
xor
es
mov
test
enter
sub
subb
dec
pop
ret
jge
js
mov
dec
loop
ds
xchg
mov
mov
cmpsl
mov
push
pop
lods
push
push
stos
orl
pop
push
push
mov
inc
int
mov
inc
sbb
fisttpll
mov
or
cmpsb
add
imul
xchg
mov
pop
daa
inc
xchg
mov
pop
or
lods
xchg
popa
test
mov
aas
push
add
jmp
sahf
jns
fistpl
aas
and
fldt
xchg
push
mov
lret
jnp
jge
adc
enter
pop
inc
xchg
xchg
sub
sub
push
inc
scas
mov
jbe
jg
pop
or
lock
fwait
push
mov
je
aam
cmp
stos
mov
and
mov
lret
pushf
lds
inc
call
into
xchg
shl
push
adc
into
out
xchg
in
in
push
imul
out
imul
enter
int3
cmp
cltd
mov
pop
or
inc
pushf
ljmp
repnz
jecxz
lea
outsl
push
sub
rolb
cs
les
mov
push
roll
lock
lret
push
dec
ja
pushf
es
xchg
hlt
mov
sub
and
fstl
adc
pop
mov
idiv
aaa
sub
jp
pop
cmp
pop
mov
call
sbb
xchg
sbb
fcomps
in
scas
add
ret
sub
jg
mov
lods
movsb
push
shll
repnz
lods
adc
push
pop
aas
and
out
cmpsl
shrb
adc
lret
test
in
pop
lods
out
inc
lock
xchg
cmp
mov
mov
insb
imul
mov
or
in
inc
mov
in
rolb
cltd
outsl
roll
lcall
outsb
sbb
test
or
push
and
mov
inc
push
push
xchg
pushf
mov
mov
ret
mov
leave
out
rcrb
sti
inc
inc
push
and
add
movsb
add
mov
fisttps
fildll
cmp
mov
jb
rolb
pop
shrb
arpl
sbb
je
pop
xor
pop
push
enter
xlat
cmp
xor
shrb
sbb
xor
xor
jns
pop
cmp
ret
ja
lds
mov
into
xchg
xlat
mov
mov
sbb
popf
outsl
cld
jge
xor
inc
orb
mov
ds
jo
out
push
in
inc
in
xor
sub
imulb
mov
xchg
xor
hlt
jg
push
outsl
jns
sub
cmpsb
jp
push
xor
push
in
sarl
nop
stc
aaa
std
mov
imul
jecxz
aas
sbb
repnz
cmp
mov
adc
jle
bound
inc
cwtl
cld
jp
inc
sub
adc
jns
push
movl
jle
push
dec
cld
mov
and
or
cmpsb
mov
repz
push
sbb
ret
xor
cmpsl
add
scas
ds
lahf
std
push
xor
jns
cmp
fcoms
push
pushf
jae
in
scas
rorl
mov
pop
pop
les
xor
cmpsb
lcall
dec
clc
cmc
dec
cli
pop
or
loope
or
rcrb
push
mov
sub
insb
cmp
push
inc
cmpsb
jg
movsl
cli
movsb
loop,pt
fdivrs
sbb
test
and
sub
or
ficoml
pop
aaa
or
cmp
xor
nop
leave
orl
mov
ret
pop
dec
or
aam
jbe
mov
dec
popf
call
jb
ret
notb
sub
loopne
jae
add
imul
hlt
push
ficoms
mov
into
sub
pusha
dec
test
push
mov
jo
lret
out
mov
adc
sub
dec
mov
negl
lret
int3
jae
bound
xchg
mov
stc
lods
pusha
mov
or
inc
scas
dec
adc
adc
mov
dec
lea
cmp
pop
out
xchg
leave
sbb
sbb
mov
mov
add
adc
popa
push
push
dec
dec
xor
adc
xor
xchg
lcall
mov
bound
insl
add
inc
lods
mov
dec
fmull
cmp
shll
xor
lds
insl
inc
call
test
cmp
cs
dec
jo
push
xchg
mov
inc
jl
movsl
fcmovu
xlat
adc
xchg
xlat
stos
je
mov
lret
jae
xchg
sbb
out
mov
outsl
cmp
xchg
jnp
fidivs
adc
sarl
push
sub
arpl
xor
push
push
loopne
xchg
dec
popa
sbb
rclb
sbbl
lea
xlat
cmp
pop
inc
adc
in
jb
clc
repz
push
adc
movsl
rorl
push
shll
sub
inc
xor
xor
adc
push
ja
push
push
faddp
pop
and
jle
sbb
ret
xchg
push
sub
out
jae
add
imulb
fistps
int3
into
mov
push
popf
les
cmp
push
and
mov
movlps
jg
js
ficomps
add
stos
ret
pop
jg
les
js
dec
xor
rcll
aam
jno
iret
sub
fisubl
mov
or
sub
mov
push
divb
jmp
dec
adc
stos
bndldx
lcall
xchg
negb
xor
enter
insb
mov
scas
mov
pusha
pop
in
jns
les
in
je
xchg
or
testb
lds
mov
popa
lds
mul
cmp
mov
cmp
fs
into
loop
je
dec
retw
xor
shll
scas
push
inc
add
popf
dec
mov
outsl
test
adc
jno
xor
scas
mov
cmpl
or
add
push
push
and
orl
stc
movsb
xchg
push
sub
xor
stos
ficoms
rcl
negb
mov
lret
cmp
mov
pop
push
xchg
fisubrl
dec
pop
mov
outsb
xchg
jle
jns
fwait
cmpsl
sbb
test
add
cmp
mov
ficoml
pusha
fwait
add
inc
sahf
mov
xlat
popf
cltd
sub
jb
and
add
nop
xchg
fistl
aam
xchg
sub
cmp
dec
or
popf
shrl
xor
adc
xchg
inc
sarl
mov
addb
push
lods
movsb
sub
mov
stos
bound
cld
bound
pop
sti
ror
popa
xchg
js
aad
nop
enter
arpl
dec
and
xlat
push
lods
add
sbb
xor
rcll
pop
jmp
je
aam
or
push
jp
adc
mov
cmc
test
add
mov
outsb
push
adc
jmp
sub
jle
outsb
pop
or
fst
ret
ss
mov
mov
call
sbb
gs
scas
push
dec
outsb
cld
out
and
flds
jb
sbb
xchg
cmp
jg
stc
fistpll
cmp
mov
cmpb
pop
arpl
mov
jo
pop
into
lods
movsb
mov
sub
out
xchg
cmpsl
push
and
int
jne
cmp
fadds
int
dec
stos
cmpsb
mov
xor
stc
nop
imul
les
mov
adc
in
jp
gs
inc
mov
das
je
mov
push
push
test
mov
cli
cmpsl
call
ret
sbbb
fstp
jg
into
sub
pop
aas
addr16
sbb
jg
mov
in
das
insb
sub
setns
mov
xchg
mov
xor
lret
dec
rcrl
nop
pusha
addr16
mov
mov
rclb
adc
int3
out
in
add
mov
mov
mov
in
xor
nop
sarb
dec
push
popf
mov
inc
dec
fnstenv
mov
adc
push
fistl
sti
sbb
adc
xchg
or
es
sub
ljmp
dec
pusha
dec
or
push
inc
push
sarl
dec
mov
pop
dec
jo
jge
jne
xlat
jo
loopne
cmpsl
mov
in
jle
inc
mov
clc
mov
stc
fstps
shl
out
add
jge
out
sub
stos
pop
lock
icebp
adc
pop
mov
jo
movsb
dec
out
inc
lret
jmp
adc
mov
jo
cmp
pop
mov
mov
inc
sbb
mov
mov
sbb
les
cmp
push
scas
sub
jge
mov
or
xor
sbb
sub
mov
add
out
fildl
sub
call
int3
dec
or
xor
int3
push
or
push
jecxz
add
mov
xor
pop
xor
iret
sub
fstpl
fsubrl
jbe
scas
jb
aas
inc
insb
push
inc
andb
iret
fcoml
pusha
repnz
loope
cmc
and
dec
es
adc
nop
scas
xor
aam
lds
push
add
xor
sub
std
roll
dec
mov
aad
rolb
push
les
stc
addr16
sbb
push
lahf
in
sub
mov
jge
das
mov
pop
in
lods
mov
popf
mov
cmc
lods
cmpsl
data16
loopne
je
ja
out
stos
dec
or
mov
mov
cld
push
mov
inc
mov
push
fs
std
mov
mov
add
cs
inc
rclb
fs
mov
stos
repz
ss
mov
cmp
adc
rolb
hlt
sbb
adc
inc
xor
aaa
jmp
repnz
pushf
mov
cmp
mov
lcall
out
call
out
push
mov
xor
cmp
push
dec
lea
js
in
loopne
mov
pop
aas
pop
movsb
dec
and
jge
jo
scas
pop
std
pop
gs
jecxz
out
rolb
push
dec
pop
mov
mov
xchg
sti
push
push
dec
bound
xor
push
movsl
je
sub
repz
push
imul
pushf
jl
xor
sbb
sahf
sahf
mov
fwait
mov
repnz
insb
clc
lret
orl
add
sub
pop
jmp
sarl
fistpl
mov
cmpl
cli
fdivrl
or
ja
jl
inc
out
dec
dec
mov
daa
mov
push
out
sub
or
mov
jp
push
test
xor
mov
pusha
sub
aam
jge
jge
mov
call
or
lret
jmp
ret
jge
daa
mov
les
fisubs
mov
dec
cmp
out
mov
cltd
rcrl
add
pushf
xor
and
push
cmp
dec
mov
mov
pop
or
fsubs
jns
mov
aam
and
gs
jb
inc
jnp
and
push
push
or
test
ljmp
sahf
jns
mov
aaa
dec
xorl
in
ss
pop
daa
lcall
mov
push
push
dec
int3
sub
xchg
adc
pushf
push
cmpsb
mov
mov
mov
adc
adc
push
pop
movsb
pushf
out
jl
adcl
xorb
stos
inc
mov
add
lcall
mov
ds
mov
cmp
call
mulb
cwtl
aad
or
cmp
adc
jle
sub
add
enter
push
dec
mov
dec
adc
xor
pop
jbe
fistps
dec
dec
shlb
test
cmp
add
inc
pop
mov
hlt
fninit
jae
inc
pop
xlat
pop
dec
test
ljmp
sti
inc
push
push
mov
push
inc
decb
sbb
cmpsb
jae
add
loopne
outsb
inc
push
fwait
mov
xor
das
sarl
mov
pop
push
sarl
outsb
stc
into
imul
cltd
push
pop
add
jmp
push
sub
pop
popf
repnz
cmp
inc
je
iret
xor
inc
sbb
stc
push
and
lods
js
jno
mov
pop
mov
mov
mov
mov
aam
xchg
jnp
pop
pop
int
mov
sbb
lock
push
xchg
sbb
xor
sub
cmp
lret
sarl
andb
push
push
and
cwtl
pop
inc
xchg
movsb
test
and
cltd
xchg
sbb
repz
xor
pop
ficoml
rorl
insl
and
and
add
pop
xchg
add
les
inc
ljmp
cmp
pop
repz
and
dec
cld
mov
mov
popf
cmpsb
loope
test
jo
xor
ffreep
fcomip
push
sub
sbb
or
mov
add
pop
fwait
notl
xor
fidivl
repz
mov
pop
sahf
test
add
xchg
mov
loopne
addb
sub
xor
ljmp
aaa
int3
mov
gs
icebp
push
mov
sub
rolb
in
mov
call
ds
outsb
loopne
sbb
sbb
mov
xor
xor
out
dec
lret
jmp
mov
adc
nopl
mov
xor
mov
mov
movsl
jb
jae
outsb
and
sub
or
stc
mov
adc
rcrb
shrb
pop
lret
test
clc
popf
and
cmp
sub
rcr
mov
push
xchg
fwait
popf
cmc
dec
add
xor
orl
out
push
rcll
push
fmul
pop
add
jo
xchg
nop
jecxz
leave
add
in
jle
jl
adc
leave
jg
aad
jle
mov
jecxz
test
testb
repnz
dec
faddp
or
or
sarl
xchg
sub
dec
mov
subb
test
idivb
ret
mov
mov
xchg
aam
sub
call
mov
sbb
adc
jnp
loop
fcmovnbe
out
xchg
mov
xor
arpl
cmp
adc
push
mov
stos
inc
movsb
int3
mov
lock
out
dec
jne
les
movsl
sbb
ljmp
ljmp
fucomi
gs
popf
dec
jno
and
pop
push
ds
dec
push
dec
in
or
mov
dec
insl
arpl
pop
and
aad
xor
or
cmpsb
pop
pop
pop
inc
stc
das
xchg
xor
ret
sahf
or
or
es
stos
inc
lcall
xchg
mov
pop
or
or
or
dec
cmp
orl
ret
cwtl
jmp
mov
fmuls
shl
nop
iret
xor
jg
mov
mov
rolb
dec
xor
cld
xchg
cmp
imul
pushf
cmp
mov
inc
insl
outsb
xchg
jnp
rcrb
out
mov
sub
je
sar
add
jo
leave
dec
cld
test
sub
xor
sub
mov
leave
push
sub
loop
adc
daa
add
xchg
mov
xchg
xchg
adc
popf
sbb
mov
xor
sub
aam
aaa
and
push
inc
pop
out
lds
inc
int3
pusha
iret
add
ljmp
es
xchg
xorb
or
push
lahf
filds
and
fiadds
repnz
repnz
mov
outsb
dec
out
cmpsl
add
inc
xchg
vpcmpeqb
aam
jb
push
mov
data16
push
adc
or
andb
lea
sub
mov
inc
mov
fsubs
sub
xor
add
js
xchg
imul
or
aad
sarb
cli
xlat
lock
fwait
fsubl
imull
inc
or
icebp
enter
mov
pop
ss
push
gs
loop
inc
stc
add
jnp
xchg
inc
pop
gs
sub
push
cld
or
loope
jo
jp
int
stos
inc
mov
adc
lret
dec
add
aas
push
pop
add
and
mov
movsl
iret
sbb
inc
sub
cmp
sub
arpl
dec
mov
xchg
dec
dec
hlt
jmp
popa
lcall
aad
divl
inc
push
xchg
mov
cmpsl
inc
call
shr
xchg
pushf
cwtl
dec
mov
test
mov
ss
and
cltd
sbb
pop
dec
and
das
push
jmp
inc
insl
inc
jp
mov
movsl
mov
xchg
cwtl
push
cmpsl
hlt
sbb
fbstp
popa
xchg
in
push
repz
sti
out
xor
cmp
add
arpl
repz
mov
jbe
cmpb
in
popf
push
sarl
aam
inc
stos
rcll
jns
rol
test
mov
test
pop
outsb
sub
sub
aam
ret
push
mov
ret
flds
sbb
inc
push
adc
adc
stc
lcall
sti
stos
jb
jnp
sti
insb
and
pop
insb
das
adc
dec
or
ljmp
mov
jbe
fdivr
arpl
aaa
mov
faddl
loopne
test
and
and
mov
mov
cwtl
mov
mov
insb
aaa
cmpsb
scas
mov
clc
shll
or
gs
adc
push
cmovns
mov
jno
xlat
nop
int3
adc
jne
inc
into
pop
nop
call
lret
adc
in
jno
adc
push
cmp
sbbb
inc
push
clc
cwtl
std
out
jnp
inc
pusha
loopne
ret
mov
popl
cli
and
mov
dec
cmpsb
mov
jg
aam
stos
lret
xchg
mov
js
push
outsl
adc
inc
test
into
push
and
fiadds
xchg
pop
inc
lcall
mov
nop
add
mov
rcl
movsb
arpl
lcall
sub
das
mov
sbb
jg
cmpl
loope
outsb
mov
jb
insl
nop
sbbl
test
sub
popa
divl
fisttpl
mov
inc
cmp
cs
dec
rcrb
orb
adc
clc
jp
mov
adc
test
dec
push
or
das
adc
fisubrs
mov
pop
push
push
in
push
jl
mov
mov
nop
sub
in
add
cmp
fimull
addr16
stos
push
mov
dec
mov
ljmp
mov
mov
movsb
mov
stos
mov
sub
adc
jmp
xlat
andl
mov
ss
lret
cltd
sbb
and
mov
lahf
fildl
xor
sarl
adc
popf
mov
mov
mov
inc
add
sbb
int3
cmp
insb
popf
xchg
and
sub
xchg
xchg
notb
movsl
jo
dec
rcrb
cli
xor
cmc
xor
lret
in
sarb
and
mov
incb
xor
mov
sbb
mov
outsl
ds
arpl
sub
add
sub
sahf
mov
fidivl
jmp
push
and
hlt
fs
sbb
or
movsl
xor
push
xor
dec
das
mov
mov
ret
in
fldz
pop
bound
push
push
inc
pop
shl
xor
sub
add
xor
lods
pop
mov
add
jp
mov
dec
lea
out
dec
dec
xor
push
in
xor
les
ss
add
addr16
xchg
cmpsl
fdivrl
add
in
xlat
int3
pop
mov
shrl
test
ljmp
mov
push
dec
fsts
es
mov
add
inc
mov
lods
mov
adc
out
fmull
push
std
mov
popf
lods
outsb
daa
enter
cmp
sub
mov
mov
xchg
pop
jge
dec
inc
push
lret
cmp
jae
out
mov
dec
xchg
rcll
mov
adc
xchg
sub
add
xor
xchg
int3
push
ljmp
gs
or
adc
cmp
outsb
xor
dec
mov
sub
adcb
bound
sub
or
jl
mov
jmp
add
or
mov
arpl
jp
leave
adc
clc
pop
inc
mov
pop
sub
or
cli
xchg
les
adc
jl
clc
fistpll
lods
push
xor
cli
lds
int
enter
mov
icebp
cltd
arpl
icebp
adc
in
mov
jmp
imul
jns
aad
ljmp
or
testl
test
cmp
cmc
mov
and
xor
inc
nop
adc
mov
or
fidivl
dec
xchg
loopne
inc
and
push
scas
lock
test
or
add
jns
hlt
pushf
sahf
leave
and
insw
daa
pop
pop
push
pop
mov
mov
nop
jne
dec
cmp
xor
leave
loopne
xor
or
sbb
orl
or
sbb
push
xor
scas
pop
mov
gs
and
mov
outsb
aam
or
xor
jno
and
imul
inc
push
popa
lahf
push
add
xlat
fisubs
out
pop
xchg
aad
stos
aad
cld
outsl
jnp
mov
mov
inc
jmp
sub
mov
mov
pop
hlt
jo
lret
subb
and
or
mov
xchg
sti
inc
sti
sub
adc
out
stos
mov
mov
addb
mov
in
adc
cmp
iret
in
inc
ss
test
movsb
cmp
add
scas
fiadds
lds
fsubl
push
xchg
stc
mov
scas
mov
fcoms
jp
cmp
pop
bound
xchg
fs
mov
push
cmc
dec
xor
pop
ja
mov
xor
pop
sub
xor
cltd
jnp
call
hlt
cs
push
data16
aas
fadds
stos
inc
mov
insb
lret
stc
pop
mov
mov
push
adc
mov
inc
and
jg
add
xchg
mov
aas
adc
mov
shlb
pop
les
mov
dec
adc
jae
xchg
testl
int
mov
pop
sub
fs
shl
mov
and
es
int
pop
popl
and
xor
xchg
mov
adc
or
mov
add
das
pop
xchg
fiaddl
ret
jo
or
sbb
xor
call
jmp
out
jg
fs
xchg
jg
sbb
sbb
mov
dec
loope
jmp
jl
pop
push
sub
in
or
dec
push
xchg
mov
jp
nop
outsb
je
mov
repz
mov
xchg
icebp
mulb
mov
mov
push
aam
hlt
pop
arpl
sbb
inc
jb
sbb
popf
mov
int
ds
in
xor
loopne
xchg
gs
xchg
shl
mov
jle
jle
xor
jns
out
jmp
mov
or
cmp
in
out
cmp
adc
clc
ds
adc
push
sub
andl
addr16
mov
movsb
jno
enter
mov
cmp
mov
fsincos
and
xor
aaa
pop
sbb
je
add
inc
inc
sub
leave
adc
mov
cmp
jge
push
mov
xchg
adc
aad
ljmp
scas
mov
call
lret
sarl
xchg
pop
jg
cmp
sbb
adc
add
loop
or
pusha
ret
sbb
mov
sub
dec
popf
adc
sbb
stos
cmp
outsb
pop
test
cmp
mov
jle
outsb
push
pop
mov
sub
mov
pop
push
xor
shlb
push
add
push
into
imul
or
xchg
out
or
outsb
jge
mov
xlat
mov
repnz
mov
aas
inc
add
xchg
pop
stos
mov
fwait
push
ficomps
pop
jp
inc
ljmp
enter
mov
loopne
insl
lds
xor
test
dec
int
lcall
mov
mov
cmp
sarl
fldenv
xchg
dec
and
std
mov
sub
lods
cli
push
mov
add
dec
es
push
fisttpl
aam
mov
xlat
inc
loopne
inc
xchg
aad
mov
and
ret
push
mov
dec
stc
cmpsl
mov
xor
leave
pop
add
insl
xor
imul
xor
fidivl
add
mov
insb
xor
out
mov
jnp
pop
cmpsb
shrb
mov
pop
aam
dec
mov
push
in
xor
jo
sbb
lcall
gs
fadds
and
leave
xor
push
hlt
xchg
imul
stos
enter
mov
xlat
insb
cmc
out
mov
xor
mov
mov
popf
call
andl
sbb
repnz
fwait
loopne
cli
ljmp
cli
sti
daa
cmp
xlat
cli
mov
mov
jmp
cmp
jno
push
movsl
cmpsl
lods
mov
jne
or
mov
cltd
or
dec
cmp
je
lret
repz
sbb
xchg
movaps
jne
lods
sub
lods
clc
movsl
push
xor
sbb
fmull
cmp
negl
bswap
dec
pop
outsl
or
call
inc
sbb
aaa
cmp
fbld
loop
enter
cmc
jmp
push
sbb
jns
xchg
loope
and
ljmp
push
jge
push
push
adc
xor
arpl
push
sbb
xchg
aam
mov
fidivl
inc
int3
xor
popf
sarl
xor
sahf
cmp
sub
mov
ss
ret
or
cli
enter
stos
mov
cmpsl
iret
jecxz
sbb
dec
sub
loopne
addr16
out
ficoml
out
addr16
hlt
mov
fistl
push
mov
mov
mov
sti
add
ds
mov
sub
fisubl
test
mov
fsubrs
lcall
add
fucomip
daa
mov
rcr
into
and
xchg
pop
cmc
sub
cmp
lret
add
jle
sub
xchg
push
stos
in
xchg
cltd
repz
jno
xchg
stc
sahf
imul
fldenv
push
sub
pop
jbe
nop
cmp
add
hlt
xchg
pushf
lds
cs
in
xor
mov
ffreep
cld
and
mov
icebp
jmp
or
xchg
push
ljmp
xlat
dec
std
ret
data16
or
test
xchg
or
fcompl
xchg
clc
gs
call
cmpsb
daa
iret
cmp
jecxz
pop
ja
out
dec
ja
or
dec
or
add
pop
iret
cs
cli
test
cmp
or
push
mov
lea
jno
in
push
jns
lea
bound
xchg
int
ret
cmp
fcoml
or
in
negb
sub
addb
dec
icebp
sbb
loop
push
pop
loop
cld
mov
mov
mov
or
xchg
jle
js
mov
cmp
sbb
pusha
fstpt
outsl
stc
inc
cmp
ss
lock
inc
int3
int3
ja
pusha
setb
xchg
lret
or
fcmovbe
xlat
popa
mov
loop
jns
les
in
leave
jo
cmpsl
jns
lods
daa
push
dec
fiadds
aas
lret
and
dec
mov
xor
jns
mov
sub
inc
lock
pop
je
dec
into
clc
push
mov
mov
shl
aaa
mulb
addr16
lret
push
das
cwtl
fsubs
fdivp
lcall
or
lods
hlt
push
jmp
adc
dec
inc
jmp
dec
sbb
int3
xchg
lahf
dec
jl
xchg
push
fmull
test
jecxz
xor
xor
cmp
adc
sbb
call
out
mov
ljmp
mov
pop
xor
xor
stos
bound
mov
pop
jl
loop
sbb
mov
mov
popa
xor
sub
mov
lret
jl
jle
leave
call
xor
out
lods
mov
insl
or
sub
int3
xor
lods
inc
imul
mov
mov
pop
cld
cltd
push
or
push
xor
jbe
inc
leave
ljmp
roll
inc
sub
cmp
mov
leave
xor
std
cmp
enter
icebp
dec
mov
outsb
mov
inc
mov
outsb
in
and
mov
and
push
mov
arpl
dec
cmp
or
andb
cmovnp
lret
cwtl
jp
pushf
cmp
jg
pop
jmp
push
sbb
jge
popf
bound
mov
adc
sbb
mov
lahf
std
or
enter
pushf
jl
push
fstps
pop
sar
and
jge
and
adc
dec
jns
and
push
mov
pop
mov
call
sarl
aad
sahf
inc
pop
and
adc
mov
lcall
dec
add
push
rol
sbb
sub
mov
jo
js
xor
add
mov
mov
mov
int3
jg
rorb
pop
xorl
aaa
scas
mov
insb
cmova
fs
movsl
in
adc
xor
int
into
and
test
repz
idiv
pop
leave
inc
in
or
xchg
jge
mov
mov
rorl
push
inc
sbb
inc
pop
and
in
lods
bswap
or
add
imul
leave
cmc
btr
xchg
mov
icebp
sub
inc
mov
mov
xor
arpl
insb
pop
into
roll
and
movsl
repnz
cltd
pop
sbb
pop
mov
sub
repz
cwtl
xor
stos
or
sbb
test
or
sbb
and
or
pop
sub
mov
mov
mov
cs
sub
ss
nop
sub
loope
out
xchg
mov
sahf
testl
fiaddl
imul
enter
test
fsubrs
imul
mov
xor
jg
mov
jb,pt
cmp
inc
dec
inc
lcall
jns
lds
add
cmp
xchg
repz
orl
repz
and
adc
cmp
pusha
jle
cld
in
pop
pushf
and
dec
mov
xchg
inc
xchg
loopne
test
repz
sbb
pop
cltd
enter
hlt
adc
das
mov
pop
lcall
je
rcl
mov
or
sbb
pop
pop
fisttps
out
mov
cmp
xor
inc
sti
test
mov
fisubrl
sub
and
scas
xchg
sbb
sbb
stos
add
add
inc
and
dec
cmp
lcall
dec
inc
and
push
mov
jg
testb
mov
addb
hlt
in
sti
jbe
push
cmpb
pop
pop
mov
test
out
fisttpll
sbb
in
adc
clc
sti
push
jne
sub
pop
inc
out
std
sar
xchg
inc
stc
add
add
repz
insl
out
xor
mov
fstpl
loope
jbe
or
lahf
mov
pop
push
std
mov
pop
ljmp
in
aam
fs
sub
xor
movsb
push
inc
in
sub
push
jno
lret
loop
adc
jo
xchg
push
push
inc
or
les
insb
push
xchg
mov
lods
or
aad
inc
aam
hlt
pop
ljmp
add
jl
lea
or
outsb
lock
pop
into
dec
add
pop
dec
aas
jns
pop
mov
fcomps
lds
push
mov
pop
xor
mov
outsl
and
pop
and
xchg
sbb
push
fbld
and
es
and
mov
jle
shr
and
je
pushf
ret
pop
dec
and
and
je
push
mov
gs
xchg
in
mov
icebp
daa
xchg
rorl
aad
dec
es
cmp
cwtl
pop
pop
pop
lock
incb
mov
or
push
add
pushf
sti
inc
push
enter
pop
mov
sbb
mov
fcmovbe
lock
ja
fmull
cld
sbb
rolb
repz
cmpsl
pop
add
inc
adc
jns
mov
loopne
pop
rcrl
fdivs
xchg
or
lea
and
stos
mov
push
xlat
push
test
popf
aas
jbe
daa
mov
cmp
faddl
mov
jae
das
mov
ds
addr16
sbb
sub
sarb
data16
and
test
add
fucom
sbb
xchg
xor
and
add
aaa
in
dec
adc
inc
or
cmp
fdivrp
fdiv
jle
pslld
adc
mov
mov
ficoml
outsb
int3
push
mov
mov
ror
enter
lds
or
inc
ret
fidivs
clc
fsubs
and
inc
mov
fidivrl
fwait
imul
jge
fnsave
idivb
sub
jno
and
add
jmp
add
rol
inc
or
xchg
sbb
cld
repz
mov
shl
xchg
push
add
lock
add
push
or
xor
and
jae
arpl
imul
test
xchg
or
inc
jo
test
cmp
mov
mov
xchg
and
insb
sti
into
into
sbb
insb
fsts
int
lea
gs
add
adc
fwait
add
rcrb
mov
lods
and
and
jp
mov
subb
xlat
push
pop
xchg
push
out
sbb
mov
xchg
inc
aas
xor
cmp
std
or
addr16
xchg
pushf
test
popa
dec
push
push
mov
dec
imul
pop
dec
stc
push
or
scas
stos
mov
outsb
fsts
fidivs
mov
or
pop
xchg
xlat
loop
push
push
jge
pop
jecxz
dec
repnz
int3
dec
jb
std
ret
or
les
mov
test
scas
mov
push
or
xor
fndisi(8087
lcall
adc
xchg
push
mov
ret
inc
jae
lret
ljmp
imul
sub
test
aas
inc
cwtl
lea
jae
mov
cmp
cs
mov
xor
dec
jo
out
inc
arpl
call
xor
pop
jne
aaa
add
cwtl
negb
mov
lcall
or
out
sbb
xchg
adc
outsl
sub
popf
pop
xorb
xchg
scas
push
je
and
test
fsubr
mov
mov
lret
inc
outsb
xchg
test
cs
xlat
and
adc
xchg
inc
pop
push
test
sub
mov
lea
ret
aad
fs
pusha
xchg
or
into
enter
mov
popf
sub
xchg
push
mov
out
adc
add
jo
mov
xor
jge
lods
stos
sbb
pop
pop
jge
mov
xchg
dec
or
pop
idiv
sbb
cmp
adc
lds
xchg
or
mov
cmp
dec
sbb
popf
in
imul
test
pop
ss
sti
in
in
enter
sbb
adc
jecxz
movsl
cmc
xor
mov
mov
loopne
mov
adc
aad
mov
outsl
or
loopne
ja
push
add
adc
push
or
add
sub
mov
add
mov
ret
mov
leave
pop
fpatan
fwait
mov
ret
clc
lcall
popf
mov
cli
rol
shlb
lret
cmpsb
jmp
dec
push
jecxz
dec
es
mov
test
fisubl
icebp
flds
in
jmp
dec
in
popa
adcb
sub
push
or
push
jmp
jl
or
push
cltd
popl
addr16
clc
xor
add
dec
leave
das
sahf
nop
ror
pop
add
je
mov
out
lret
and
loop
lods
dec
popa
lds
clc
nop
fistps
fwait
lret
inc
and
mov
imul
mov
negb
fbld
mov
pop
or
push
outsl
sub
inc
inc
orb
mov
inc
mov
test
das
rorb
or
lret
inc
and
loope
cli
push
push
and
cmpsb
xor
cmp
inc
outsl
sbb
sub
cli
loop
xchg
cs
jp
lret
push
pop
xchg
mov
cmp
out
mov
cmp
icebp
arpl
inc
push
test
cmp
add
fbstp
imul
pop
mov
pusha
scas
into
mov
xlat
adc
mov
sub
xlat
mov
loope
dec
or
xor
mov
sbb
aaa
mov
jo
jmp
xchg
movl
jno
push
pop
mov
xchg
daa
push
pop
inc
xor
in
jne
xchg
aaa
imul
pop
inc
mov
out
fidivrl
and
test
lds
test
call
mov
aas
mov
pop
pop
int
mov
std
test
adc
add
nop
jmp
out
xor
fldenv
int
lock
loopne
pushw
rolb
sub
test
inc
pop
mov
adc
nop
xor
pop
sarb
pop
js
and
push
cmpsb
sbb
clc
push
je
cmpsb
int
inc
ret
sub
shlb
testl
in
mov
mov
fst
jg
mov
dec
inc
lcall
and
dec
cmp
nop
mov
cmp
xor
fs
gs
lock
ret
mov
dec
mov
or
add
andl
ss
cmpsb
shrl
dec
mov
popf
cltd
sarl
cmc
cmp
add
sbbl
cld
sbb
adc
cmp
js
cmp
xorb
inc
pop
lods
and
bound
test
and
ljmp
mov
mov
fmuls
ret
pop
jno
pushf
jl
rcll
dec
mov
dec
xor
xchg
cmpsb
scas
daa
scas
xchg
push
pop
cli
mov
mull
add
movsl
inc
mov
sbb
scas
pmuludq
scas
aas
cli
add
mov
je
and
or
pop
ja
cmpsl
mov
cld
divb
fsubs
out
sbb
repnz
add
loope,pn
push
sbb
cli
les
sahf
outsl
inc
xor
pushf
mov
xor
jne
scas
cmp
dec
cmpb
in
lock
popa
sub
fstl
leave
jb
ret
mov
mov
mov
xlat
sub
test
push
scas
test
pop
lods
stc
push
lahf
in
mov
dec
and
push
add
jbe
add
add
cmc
lds
xchg
aad
sbb
nop
icebp
lock
sbb
add
movsb
clc
mov
mov
sub
and
shrb
mov
jns
shll
call
mov
jnp
sub
xor
xor
hlt
scas
mov
mov
xchg
adc
lcall
rcrb
dec
xchg
cmp
imul
sahf
push
repz
cld
ss
leave
and
mov
lret
inc
movl
inc
add
and
add
nop
sbb
iret
fs
lcall
rol
xorl
mov
ret
xchg
sbb
mov
movsb
addr16
xor
add
or
out
cmovne
fnstenv
lcall
pop
lret
cli
mov
xor
cmp
inc
add
mov
lahf
rorl
pop
dec
pop
jp
and
pop
out
pop
test
push
adc
adc
mov
scas
mov
outsb
add
scas
xchg
and
mov
pop
add
inc
jae
imul
cwtl
push
in
and
in
pushf
scas
mov
lcall
jbe
mov
shl
test
add
xchg
mov
sbb
popa
rclb
sbb
movsl
inc
inc
out
push
addb
sub
mov
add
jg
test
jno
mov
adc
pop
cli
pop
out
insb
jg
jle
jge
cmp
xchg
shlb
or
jae
and
jo
push
sbb
scas
or
or
mov
out
pcmpeqb
inc
sbb
gs
mov
out
jae
mov
add
bound
pop
daa
pop
mov
imul
fwait
call
es
add
in
pop
inc
int
push
xor
lret
aaa
lret
jbe
mov
pop
inc
push
push
xor
mov
or
pop
ficoml
inc
ja
adc
or
add
loop
test
fldenv
iret
pop
pop
dec
fs
sub
and
add
out
lods
lret
jmp
addr16
xchg
or
cwtl
or
sbb
sub
mov
lret
fs
loope
pop
push
cmp
sub
fucomip
and
jge
lcall
in
nop
icebp
sbb
push
cmp
mov
mov
mov
dec
dec
stos
adc
cmpsb
mov
fists
inc
or
les
cmpb
jecxz
fwait
adc
ret
xor
cmpsl
xchg
add
cli
push
pop
call
dec
es
xchg
idivb
movsb
ljmp
inc
push
inc
sbb
call
dec
and
cmc
clc
inc
mov
cmp
nop
imul
mov
and
mov
xchg
xchg
addr16
pop
mov
arpl
mov
hlt
into
mov
sbb
popa
sub
fs
jbe,pt
add
aas
push
mov
sar
int3
sti
push
gs
jmp
sti
mov
lea
lcall
fidivrs
loope
jp
imul
getsec
pop
jmp
or
imul
and
gs
cmpsl
jno
out
stc
cwtl
mov
jg
mov
pop
cld
sbb
fsubrl
mov
ljmp
lock
fisubrl
mov
xor
ds
push
repnz
xlat
inc
cltd
scas
movb
in
into
js
int
pop
cmpsl
in
inc
mov
fdivrl
adc
repnz
xchg
dec
mov
mov
inc
mov
popl
pop
cmp
loopne
xchg
mov
inc
lods
sahf
test
ret
and
mov
jp
ret
movsl
in
cmpsb
xchg
andps
call
fisttps
dec
xchg
pop
unpckhps
pop
jne
xchg
stc
sub
es
push
lods
enter
dec
xchg
rcr
jbe
imul
mov
roll
pop
lds
xchg
jae
mov
fwait
cmc
sbb
in
nop/reserved
dec
jbe
in
mov
out
xor
add
cmpsb
xchg
lcall
movsb
mov
cmp
pop
shrl
inc
cmp
cltd
add
movsl
push
mov
pusha
jo
xor
sarl
or
loopne
negl
sbb
xor
insb
lods
fildll
mov
add
add
pop
jge
dec
adc
sti
adc
or
push
mov
rcrb
mov
call
push
mov
mov
inc
add
adc
dec
pop
jp
mov
pop
xchg
pushf
inc
fstpt
rorb
stos
sbb
imul
mov
jns
sbb
stos
imul
shll
and
out
dec
pop
or
adc
and
xchg
cmp
dec
pop
pop
inc
into
jecxz
dec
sti
jo
loope
mov
cmpsl
out
cmpsb
adc
je
iret
fiadds
test
pop
test
cmp
sbbb
sbb
testb
sbb
pop
aaa
xlat
dec
push
jb
lcall
mov
sbbb
or
or
cmp
xchg
movsl
mov
mov
fdivrs
or
mov
xchg
ret
dec
add
xchg
data16
lcall
pop
mov
arpl
insb
dec
cwtl
mov
jbe
xchg
daa
cmpsb
cltd
frstor
addr16
insb
test
std
inc
outsl
push
sub
outsb
sbb
xor
pushf
rorl
jo
fs
push
pop
push
dec
pop
into
and
and
pop
add
outsl
inc
inc
repnz
fcmovnu
add
std
lods
aam
out
adcl
add
shlb
adc
mov
cmc
sub
dec
into
rolb
mov
dec
jae
cmp
int3
and
imul
cmp
mov
mov
cltd
pop
mov
xchg
mov
icebp
adc
jo
rcl
pop
fdiv
dec
push
ret
in
stc
dec
sarl
and
jno
cs
das
dec
push
adc
mov
out
jp
adc
pusha
inc
mov
movsb
mov
fstl
mov
outsl
test
faddl
sbb
xchg
out
inc
inc
pop
add
jo
sahf
push
iret
fnsave
pop
popf
nop
icebp
or
dec
lret
pop
sahf
addr16
xchg
les
movsb
fimull
loopne
mov
hlt
in
fstpt
int3
lds
popa
inc
dec
es
scas
ret
les
adc
xor
jns
or
cli
xchg
or
add
push
int3
stos
shl
inc
mov
or
bound
sub
icebp
negb
and
xchg
adc
outsb
clc
in
pop
cmpsl
stos
add
and
inc
sub
out
nop
jb
cmc
iret
mov
pop
stc
mov
mov
mov
sbb
hlt
bound
pop
pop
mov
and
sbb
jns
cld
adc
adc
fcmovb
ljmp
sub
mov
xlat
jnp
adcl
mov
xor
popa
mov
sbb
popa
sub
in
cs
cs
xchg
xchg
leave
push
stc
iret
in
xchg
out
sbb
jne
adc
fs
pop
orb
xchg
insb
or
cmp
into
inc
jb
push
shl
cmpsl
xor
out
test
pop
mov
std
stc
popa
rorb
cltd
cmp
movups
pop
incb
ret
shlb
je
jb
and
and
mov
push
mov
roll
insl
roll
xchg
mov
ljmp
cwtl
mov
xor
push
in
bound
outsl
call
xlat
lds
push
and
cmpb
bound
mov
adc
inc
rorb
sub
cmpsb
loope
mov
push
in
lods
jbe
sub
fst
xor
incb
mov
push
mov
repnz
cmp
ss
cmp
cmpb
fsubrp
es
nop
jo
les
cwtl
cli
mov
xchg
shr
fstp
inc
sub
outsl
add
cmp
movsl
and
xchg
stos
push
inc
les
out
sub
mov
xlat
pop
mov
test
mov
sbb
pop
jecxz
inc
int
mov
sub
mov
fisttps
movsl
aad
sub
xchg
pop
add
pop
xchg
adc
push
test
xchg
dec
mov
fcomps
cltd
jo
sbb
lods
js
pusha
dec
outsl
or
clc
ja
mov
cmp
movsb
pusha
lds
jne
out
call
xor
jno
fs
jb
fidivrs
cli
jle
mov
imul
and
sub
xchg
pop
push
hlt
mov
pop
ljmp
roll
shlb
pop
push
rolb
xchg
mov
jo
mov
lahf
pop
adc
and
cltd
mov
mov
shrl
or
mov
sbb
int
mov
and
gs
sub
mov
enter
dec
add
rolb
or
mov
std
fwait
repnz
psubsw
dec
adc
lea
cld
lret
jne
lret
js
and
inc
adc
push
out
std
popa
push
xor
test
sete
bound
cmp
and
fists
xchg
popf
dec
mov
mov
cwtl
cs
inc
add
cmp
andb
lret
mov
dec
adc
loope
mov
divl
ja
lret
enter
or
pop
mov
push
lcall
sub
inc
fisubl
jmp
lods
ss
fnstenv
add
push
inc
in
addr16
xor
leave
cmpb
idiv
dec
xor
lock
dec
pop
js
mov
out
mov
pop
and
in
or
mov
lods
ss
pop
cli
testb
pushf
rcl
int
outsl
add
add
adc
adc
popf
or
test
sub
adc
jecxz
test
adc
sbb
xor
int
cli
incb
inc
leave
je
sbb
mov
aas
sub
mov
fidivrs
sahf
inc
leave
push
inc
push
in
jge
jl
outsb
imul
mov
mov
ss
mov
frstor
lcall
dec
inc
mov
sbb
lret
inc
shr
dec
popl
shll
repnz
call
lcall
mov
js
adc
mov
pop
push
adc
adc
movsb
ss
push
popf
js
and
jno
test
cli
mov
mov
repnz
cmp
lret
enter
hlt
push
dec
jl
xor
cmp
cmc
nop
push
mov
push
mov
sbb
test
sar
test
jne
cmpb
sbb
add
dec
sbb
fmuls
js
mov
sbb
jge
movsb
mov
xchg
and
pop
inc
insb
icebp
daa
jmp
outsb
jl
fcmove
xor
mov
dec
cmp
ja
lret
push
sahf
pop
jno
mov
push
push
cmp
fidivrs
push
pop
and
push
jae
std
sbb
mov
testb
pusha
dec
jge
repz
nop
scas
ret
test
icebp
jbe
add
mov
ljmp
hlt
mov
jbe
lock
lret
ret
sbb
and
dec
xchg
and
dec
or
sub
or
xchg
push
out
xchg
mov
push
mov
je
repnz
mov
cmpsl
and
jbe
aaa
pop
popa
mov
pop
pop
fsub
inc
loope
ljmp
mov
sbb
mov
roll
dec
ds
fsubr
inc
leave
loope
jne
push
pop
fcomps
stc
lcall
jmp
jb
repz
sbb
push
dec
ret
sbb
lahf
xor
mov
pop
push
je
hlt
pop
xchg
mov
xchg
test
fs
sub
add
pop
jge
xchg
int
add
mov
pusha
loop
sarl
xor
fcompl
pusha
pop
mov
jbe
push
adc
hlt
lods
jo
pop
pushf
jle
and
aad
xchg
jb
sti
jns
jp
sahf
das
inc
loopne
iret
andb
outsl
adc
out
ficoms
orb
pop
das
jb
or
adc
test
inc
je
jne
fisubl
jne
xchg
pop
cmp
xchg
push
mov
ret
mov
xchg
lret
push
mov
mov
fs
lret
xor
mov
in
xor
push
mov
insl
cmp
inc
iret
sub
rorb
lret
xchg
lock
mov
cmpsb
pop
dec
push
xor
add
fistl
mov
outsl
ret
jns
push
rol
mov
inc
dec
cld
push
pop
and
cltd
scas
in
add
jae
clc
test
push
loopne
cmp
xchg
imul
or
mov
movsl
mov
insb
out
and
lods
pusha
sub
icebp
pop
mov
fcomps
lods
loope
lock
mov
adcb
push
test
and
data16
or
mov
mov
mov
pop
sub
add
test
scas
and
movsb
inc
test
xchg
pop
jae
push
movsb
xchg
push
jmp
jne
call
enter
imul
fsubl
cs
xchg
pushf
sbb
sub
decl
cmp
cmp
ss
outsb
loopne
rolb
ss
xor
pushf
push
daa
jp,pt
fbld
sbb
or
int3
mov
adc
xor
xlat
pop
adc
clc
movb
sti
insb
popa
rcrb
push
sub
pop
mov
stos
inc
jecxz
mov
inc
icebp
jp
in
sub
push
pop
lcall
cmp
fs
scas
jbe
add
repz
in
fcomip
jne
out
imul
sub
lret
sti
adc
xchg
mov
mov
sbb
jecxz
inc
jp
cmp
inc
push
inc
jp
notl
lret
rorb
adc
inc
cmc
int3
mov
and
addr16
jg
in
lock
movsl
and
enter
mov
mov
cmp
loope
sub
adc
std
pop
std
push
xchg
enter
pusha
push
loopne
js
arpl
test
mov
mov
mov
push
push
add
cmp
dec
push
jae
rorb
mov
fldt
imul
in
pushf
test
in
mov
cmp
daa
pop
cltd
cmp
cmovle
mov
xor
test
push
mov
push
cmp
push
jmp
clc
mov
mov
insl
popa
fadds
and
aaa
or
push
addb
add
iret
in
sub
adc
jmp
sub
adc
xchg
jb
push
addr16
mov
ss
xlat
arpl
imul
scas
and
or
fistl
jnp
ljmp
insl
gs
loop
lahf
rcl
adc
pop
dec
pop
pop
push
lcall
mov
mov
or
call
fistpl
xlat
sub
ss
daa
cmc
subl
fwait
loop
out
fsubrs
xor
adc
in
lods
sub
ret
inc
aam
cmp
mov
mov
dec
cmpsl
out
pop
aam
ss
es
mov
fists
inc
xor
xor
nop
jno
shrb
push
mov
ffree
stc
sub
sub
xchg
xchg
fwait
ljmp
lcall
and
dec
out
cmpsl
inc
jl
ret
test
pop
jmp
dec
jo
fstpt
mov
sbb
shlb
sti
mov
mov
or
inc
cmp
jns
dec
and
pop
gs
and
mov
pusha
and
mov
test
int3
push
adc
mov
jno
mov
pop
adc
mov
or
inc
sahf
sarb
push
jne
arpl
sbb
lea
popf
cltd
mov
adc
stos
adc
sub
lcall
xor
pop
int3
or
stos
leave
inc
push
loop
in
ret
in
lret
fdivs
scas
jns
dec
movsb
dec
fsub
mov
jp
and
add
xchg
dec
testb
sbb
jg
movb
add
iret
mov
pop
lods
add
mov
adc
xor
data16
mov
push
sti
pop
rolb
dec
sub
hlt
mov
cmpsb
dec
data16
cmp
imul
test
lods
xchg
push
and
dec
ja
cmpsl
mov
or
cmpl
inc
mov
sub
mov
les
popa
pop
jb
and
imul
stc
sbb
cltd
add
lret
push
ja
mov
loop
push
insb
inc
mov
ret
mov
scas
les
jo
pop
mov
mov
loopne
sbb
lods
inc
inc
pop
iret
addb
outsl
mov
sub
cmp
je
fdivrl
inc
je
xor
push
pusha
adc
xchg
jl
jo
and
inc
lcall
ds
test
dec
xchg
outsb
outsl
pop
imul
mov
movsb
xor
mov
lcall
pop
aam
insl
push
repz
pushf
xor
adc
movsl
xor
mov
or
jo
insl
rol
out
repz
roll
filds
xor
mov
lock
and
in
es
cli
lods
jecxz
sub
out
jmp
cld
loopne
fdivs
test
fs
xlat
jnp
mov
push
lods
daa
fs
sbbb
shlb
dec
outsb
loop
mov
outsb
test
push
push
mov
mov
js
xlat
subb
add
addl
jno
xchg
lock
hlt
iret
xor
cld
dec
scas
xchg
push
loop
je
dec
sti
pusha
jl
inc
icebp
cmpb
cmp
insl
ja
leave
dec
sub
insl
incb
and
inc
inc
addr16
shrb
adc
sbb
mov
mov
test
inc
inc
shlb
and
xchg
sbb
inc
ljmp
ss
out
mov
jb
xchg
stos
or
je
les
movsb
push
jo
push
pop
fisttps
cs
test
shll
push
fcmovnb
arpl
cmpsl
dec
mov
dec
lret
inc
push
lret
sbb
fdivp
pop
mov
xor
outsl
repnz
sbb
and
sti
clc
jmp
orl
inc
add
inc
xchg
cmp
test
imul
lret
pop
loop
inc
insb
mov
pop
sbb
dec
cmp
loop
mov
stos
dec
out
stos
data16
jmp
cmp
fadds
int
xchg
rcr
lcall
sub
push
cmp
in
cwtl
in
jg
mov
push
or
ljmp
cmp
xor
sbb
cs
mov
outsl
popa
mov
into
dec
xchg
and
sub
test
push
mov
xor
mov
mov
mov
xor
mov
inc
jecxz
pop
pop
rcrb
cmc
pusha
cmc
call
inc
sub
sbb
or
jb
shrb
adc
scas
test
add
sbb
jbe
mov
jno
xor
stos
jno,pn
mov
arpl
push
xor
mov
add
test
or
les
mov
add
xor
repz
or
jns
mov
lret
and
repnz
je
decb
mull
dec
outsl
jle
mov
push
xlat
lock
int3
lcall
sti
push
push
mov
mov
mov
sub
cmpsb
dec
repz
jl
push
add
rol
adc
int3
rcrl
fcmovu
jmp
push
sub
data16
xchg
adc
insl
sti
sbb
and
jecxz
rclb
xor
inc
imul
leave
add
insb
popf
loop
shll
test
icebp
rcrb
sub
add
dec
aad
lods
cmp
sub
mov
nop
add
fidivl
pop
pop
mov
jecxz
inc
add
or
sahf
or
iret
cmp
xchg
dec
cmp
mov
dec
and
pop
inc
mov
xchg
jmp
insl
mov
pop
data16
xchg
roll
lret
sub
push
xchg
inc
cmp
sbb
xor
add
out
sub
push
aas
mov
aaa
xchg
fidivs
xlat
enter
popa
stc
xor
mov
mov
xchg
mov
mov
call
lea
pop
cmp
movsb
ja
jb
not
lgs
ret
sti
pop
pusha
loop
jnp
sub
mov
out
add
data16
dec
fiaddl
push
sub
shll
jae
and
out
notb
out
cmp
sarl
mov
lea
sbb
push
out
call
js
jno
sub
jnp
in
push
mov
jp
fsubrl
dec
sub
mov
add
mov
mov
adc
loop
insb
cmc
or
data16
xor
cmpsl
ja
cmpsb
hlt
mov
push
or
xor
pop
cmp
mov
fcmovnu
pop
push
lods
sbb
mov
lcall
cmp
out
ret
inc
jno
fadds
mov
mov
xor
sbb
mov
xlat
test
add
movsb
cmp
int3
iret
ret
jge
mov
leave
inc
aad
and
cld
jns
xchg
jp
push
or
shll
sbb
idivb
mov
dec
mov
push
out
xor
push
movsl
out
jle
or
sahf
mov
addr16
nop
mov
lods
and
xlat
cmp
xor
call
scas
and
movsl
push
jae
test
test
inc
inc
sub
in
inc
fistps
stos
jge
xlat
dec
xor
out
gs
addr16
daa
dec
imulb
xchg
xchg
mov
jmp
mov
jge
push
ret
out
je
addl
cld
push
or
rcll
pxor
idivl
pop
hlt
xlat
dec
shrb
mov
enter
pop
xchg
sbb
push
lea
or
or
jl
movsb
shll
mov
xchg
add
pop
mov
sbb
push
pop
adc
adc
mov
mov
adc
and
push
jne
add
cmc
mov
std
dec
call
inc
or
jne
sbb
cltd
push
mov
cmp
inc
subl
jmp
mov
insl
xchg
pop
mov
nop
adc
and
push
rorl
jne,pt
xor
daa
in
sahf
mov
add
jg
ja
orb
dec
repz
adc
push
lock
jge
jp
jle
jb
fildl
pop
cwtl
stos
add
cmp
mov
xchg
cld
jns
mov
jnp
imul
dec
nop
scas
cmp
pop
sbb
mov
adc
xlat
mov
mov
xor
lret
es
cmc
adc
pop
imul
or
aas
adc
sarb
daa
sbb
xor
mov
jns
pop
leave
shr
push
in
mov
out
std
gs
repnz
xchg
insl
push
cmpsb
outsb
fwait
popa
outsl
jg
adc
inc
or
in
mov
jb
scas
push
push
sbb
jbe
mov
jns
mov
xchg
fsubrp
es
insb
jmp
mov
not
inc
ljmp
xor
movsb
mov
mov
mov
je
popw
in
push
shlb
popf
push
orl
jecxz
dec
fsubrs
les
mov
pop
notb
shr
and
loop
fsts
mov
inc
sub
pop
dec
enter
cmp
cmp
push
adc
jo
out
push
dec
daa
ficomps
in
movsl
orb
mov
or
cmp
lods
psrld
xchg
ret
pop
data16
adc
inc
pop
mov
lahf
sub
nop
xchg
pop
movsb
orb
pop
subl
or
add
call
bnd
loope
inc
xchg
in
add
pop
data16
xchg
inc
and
jp
pop
idivl
subb
mov
cmp
ret
mov
pusha
idivl
mov
dec
cmp
shll
enter
jmp
insb
jg
cmp
mov
adc
adc
pop
shlb
xchg
ficoml
inc
push
xchg
or
data16
rorb
clc
lds
aaa
sub
lods
pusha
cmp
lahf
sub
add
xchg
lahf
mov
add
dec
fwait
and
push
adc
fwait
dec
mov
or
andl
pop
sub
sarl
push
jae
pop
mov
aaa
scas
adc
cmc
movsb
aad
and
mov
xor
out
add
sbb
sbb
in
xchg
fucomip
sbb
dec
push
cwtl
outsl
ficomps
gs
hlt
lods
inc
sarb
repz
mov
add
dec
sti
sub
in
xlat
inc
jl
mov
into
mov
xor
push
cmp
outsb
inc
add
loope
mov
xor
test
mov
push
push
dec
ret
add
xchg
lds
and
xchg
mov
mov
dec
adc
sub
test
sub
pop
mov
push
loop
jg
xchg
sbb
sahf
fcmovnbe
cmp
icebp
jb
ret
mov
fcmovne
cli
sub
ja
mov
pop
xchg
inc
out
outsb
fs
mov
xor
lret
jg
loopne
lcall
shll
pop
js
rcll
lds
mov
add
mov
xorb
cmp
mov
xchg
out
mov
in
xchg
mov
insb
mov
out
notb
mov
sub
sti
stos
mov
inc
mov
or
shl
add
mov
push
popa
jl
rcl
xchg
call
sbb
les
call
int3
adc
sahf
cmp
aaa
mov
and
clc
add
and
mov
std
mov
movsl
lea
jecxz
icebp
jg
inc
push
test
sbb
fdivrl
xchg
insb
or
xchg
inc
movsb
in
loope
in
ret
dec
push
xchg
xor
jl
pop
jnp
in
loopne
fs
xacquire
jae
mov
setg
fldl
aaa
mov
loope
mov
sub
test
inc
packuswb
jbe
pop
pop
js
jmp
stos
outsb
mov
jne
arpl
xor
mov
mov
cmp
lock
mov
clc
int
add
push
int
dec
mov
adc
xchg
cmp
xchg
xor
push
rorl
std
fsubrl
mov
cmpsb
and
jmp
xchg
mov
fstpt
dec
int
cmp
sbb
adc
xchg
mov
ljmp
lock
jnp
lret
icebp
xchg
fisttps
mov
arpl
call
lahf
push
pop
and
and
daa
sub
bound
dec
daa
pop
mul
inc
lods
in
inc
adc
mov
es
fldenv
pop
xor
xchg
push
and
push
and
idivb
and
fdiv
dec
repnz
sti
sub
cmp
fcoml
xor
cmp
ja
add
hlt
push
adc
mov
xchg
jo
imul
bound
iret
clts
test
jecxz
les
loop
cld
scas
push
pop
out
iret
sbb
das
mov
pop
adc
and
push
dec
sahf
int3
notl
cmp
xor
dec
fs
cli
jne
bt
fsubrs
pop
repz
shrb
gs
jae
jge
pop
fwait
loope
xchg
push
adcb
xlat
call
ds
cmpsl
and
sbb
or
mov
scas
imul
push
xchg
adc
add
cmp
mov
mov
fsubs
mov
or
push
stos
jnp
in
std
jns
add
dec
aad
movsb
frstor
pop
sbb
cmpsl
jmp
popf
mov
imul
int
andb
push
xor
mov
cli
jmp
out
and
inc
add
xchg
pop
pop
fisttpl
xchg
adc
lds
out
outsl
xor
imul
push
push
inc
shl
test
lock
out
inc
sbb
ja
ss
dec
je
dec
xchg
dec
iret
out
and
cmp
mov
mov
and
stc
mov
inc
push
add
fsubl
int
lret
jb
push
js
fsubrs
jnp
or
pop
outsl
cli
fiadds
jge
xlat
nop
mov
inc
mov
dec
mov
pop
push
jb
out
push
stos
mov
cmpsl
out
or
pop
mov
setno
test
mov
sbb
loope
movsl
adc
push
xor
imul
mov
ret
inc
outsb
fmul
dec
ret
das
or
sbb
push
aaa
loope
clc
enter
insb
out
stos
cltd
int3
inc
jmp
mov
xor
lds
in
lret
fidivs
fwait
cmp
pop
sbb
popf
js
mov
jbe
jbe
jp
or
mov
mov
cmc
or
into
and
add
iret
pop
shlb
mov
sub
out
out
xor
dec
cmp
sbb
jbe
jmp
sbb
xor
repz
inc
mov
jbe
addr16
insl
test
adc
arpl
sbb
add
int3
dec
les
jb
test
jo
pop
insl
adc
jns
mov
clc
xchg
pop
shl
ucomiss
push
je
sub
bound
popa
out
popf
std
nop
add
pop
test
inc
scas
ret
movsl
fdivrs
call
cmp
cmpsl
push
shlb
ror
out
scas
pop
imul
scas
sbbl
mov
mov
sub
push
addr16
cmpsb
cld
fldpi
mov
sub
je
in
cmp
and
push
adc
mov
inc
xor
scas
cwtl
andl
sbb
xchg
xlat
xor
adc
paddsw
out
aaa
popa
arpl
enter
push
xchg
and
in
cmpb
pop
test
mov
or
mov
fdiv
fucomip
pop
mov
inc
ja
sbb
in
cmp
decl
aam
es
pop
idivb
mov
loope
test
add
jnp
test
mov
stc
ss
nop
insl
int
shll
mov
fsubl
jmp
aad
imul
adc
sti
jns
add
fnstenv
fisubl
cmp
inc
inc
outsb
std
mov
mov
clc
sub
rcrl
mov
mov
les
jmp
mov
pop
pop
sahf
add
push
sbb
lret
sbb
xor
push
pop
push
adc
push
movsb
jo
int3
add
and
test
fxch
insl
or
pop
jne
aas
sub
ror
movsb
add
push
xor
aaa
push
push
adc
push
mov
inc
jae
dec
cmp
xor
sub
mov
jbe
stos
mov
xchg
fwait
into
adc
scas
sub
pop
jmp
rclb
inc
ljmp
xor
mov
int3
push
mov
leave
push
sub
ffree
nop
mov
addl
mov
jbe
and
rcr
cmp
sub
push
dec
aad
mov
in
inc
divl
or
ret
dec
in
sub
int3
pop
stos
test
add
mov
aam
in
repnz
mov
es
sub
xor
adc
xor
dec
mov
cltd
test
adc
and
push
insl
push
fsubp
lahf
pop
inc
sarb
jp
call
cmp
xchg
popa
mov
popf
pop
or
xchg
jne
sbb
cmpsl
push
mov
imul
push
dec
and
movsl
and
andb
outsb
frstor
pop
add
repz
out
xchg
dec
popa
pop
adc
aad
stc
xchg
lods
inc
orb
les
outsl
push
mov
shr
jle
call
add
pop
push
fcomi
test
or
je
xor
ror
scas
in
or
les
pop
scas
pop
pushf
dec
push
repz
lea
mov
dec
push
sub
xchg
dec
mov
mov
pop
out
mov
sub
rorb
mov
pop
mov
out
inc
das
outsl
aad
inc
enter
inc
pop
les
mov
mov
das
outsl
mov
or
hlt
and
xchg
push
dec
out
dec
loopne
and
pop
xor
or
pop
and
push
adc
arpl
inc
inc
inc
mov
subl
jb
xor
stos
lods
ss
xchg
mov
shrl
mov
sarb
add
cs
push
test
pop
inc
sbb
js
cli
das
fistps
mov
inc
outsb
sub
and
cld
dec
xchg
sub
aam
pop
add
xchg
push
in
and
adcb
adc
pop
cld
rcrb
or
leave
xchg
mov
mov
xlat
aad
mov
push
aam
bound
dec
mov
xchg
in
cs
pop
jno
jb
xchg
in
mov
sub
sbb
cmc
leave
popa
ljmp
in
pop
les
xchg
idivb
pusha
ljmp
int
outsl
insl
mov
lds
sbb
in
dec
xchg
cmpl
xor
hlt
push
xor
jnp
cs
jb
insl
ret
xor
sbb
andl
sbb
mov
lret
call
fsubs
cmp
imul
bound
lds
push
pusha
das
jae
cmova
mov
insb
and
mov
rcrb
imul
push
adc
test
pop
push
jns
jecxz
test
loop
lock
pop
xchg
and
test
mov
mov
mov
daa
sbb
pop
out
rcrl
xor
add
shrb
stc
fdivs
sbb
and
xchg
and
push
stos
lret
mov
xchg
or
int
jbe
jno
lea
aas
push
fsubl
repnz
popf
and
jnp
cmp
mov
jo
arpl
in
push
mov
sarl
pop
inc
js
js
addr16
sbb
mov
xor
adc
pop
ficomps
test
cs
jo
movsl
dec
and
pop
adc
int
dec
popf
mov
adc
mov
xchg
add
mov
mov
xchg
outsb
data16
add
lods
mov
into
jl
xchg
sahf
lret
jge
popa
adc
pop
enter
mov
cltd
sbb
ljmp
jne
mov
inc
dec
cmp
cmp
and
inc
push
scas
jecxz
roll
xchg
push
cld
cld
mov
icebp
insb
aas
unpckhps
xorb
jne
ljmp
negb
je
iret
jae
repz
sub
cmp
sbb
aad
loop
stc
jle
idiv
cmp
pop
inc
lahf
add
jp
jno
and
sbb
out
sub
dec
push
jmp
xchg
jns
cwtl
push
mov
add
popa
xchg
aad
outsb
jae
adcl
cld
arpl
mov
lahf
out
pop
pop
cmp
mov
sub
shrb
mov
push
cmp
stc
mov
clc
add
add
das
mov
out
movsb
int
mov
inc
jmp
aad
push
cltd
mov
or
dec
jp
js
pop
shr
adc
mov
inc
mov
inc
sti
mov
bound
stos
outsb
lcall
ja
mov
lret
lret
push
sub
ljmp
dec
sbb
jl
jbe
movsl
inc
push
in
inc
fwait
neg
loopne
xchg
loopne
pop
repz
daa
sbb
movsb
add
scas
mov
xor
in
jmp
mov
rorb
xchg
aad
jp
adc
cli
or
mov
enter
cwtl
loope
mov
cmp
lock
js
jl
fisttpll
add
sbb
pushf
inc
fldl2e
ljmp
ss
push
pop
mov
rcl
or
test
push
or
sub
sarb
dec
pop
pop
lods
sub
push
add
mov
scas
fmul
out
xchg
xlat
ja
loopne
pusha
cwtl
jecxz
scas
mov
push
icebp
mov
sbb
mov
sbb
jae
insb
push
fisttps
into
dec
jp
adc
sti
add
les
dec
enter
aam
mov
pusha
mov
sahf
pushl
jl
push
mov
mov
mov
jl
in
and
sbb
ss
xchg
jb
pop
cli
test
sahf
dec
mov
imul
test
ficoms
sbb
pop
inc
sbb
mov
ror
fcmovnbe
push
test
dec
scas
scas
adc
jecxz
cli
lcall
push
addr16
cmpl
divl
outsl
sub
pop
mov
test
xchg
cld
das
ljmp
jmp
xchg
mov
movb
jnp
pusha
aaa
jb
push
sahf
incb
aad
and
lret
inc
lea
cmp
mov
push
inc
insl
in
loopne
cld
je
and
rcll
mov
fcomi
jecxz
and
cmc
add
out
pop
dec
sub
xchg
data16
jo
jge
xor
test
sub
fwait
enter
pop
mov
jnp
fstpt
mov
inc
rcll
aam
push
movsb
xorl
xchg
mov
jne
push
sti
sets
shlb
lret
je
inc
icebp
imul
adc
orl
ljmp
cmpsb
mov
jne
jo
cli
mov
mov
leave
and
testb
jmp
arpl
fbstp
sbb
enter
jg
inc
imul
shlb
mov
sti
in
repz
outsb
and
test
outsl
mov
sbb
ds
cmpsb
movsb
dec
pop
cmp
mov
shlb
adc
js
sub
jb
push
inc
xchg
cmp
test
dec
out
sub
js
jb
dec
sbb
adcl
imul
in
and
jbe
or
stos
mov
pop
adc
pop
sbb
xchg
dec
mov
cli
insb
test
outsb
in
jl
push
xchg
adc
cld
lods
inc
adc
clc
xlat
lahf
outsb
je
sub
lds
push
rcr
enter
mov
xchg
fldcw
ss
or
fwait
xchg
out
xor
jp
add
pop
pop
mov
sbb
pop
sub
dec
jge
mov
in
lcall
orl
xorb
and
xor
xor
mov
mov
xchg
inc
enter
out
sahf
xor
push
dec
imul
sbb
stos
and
cmp
mov
mov
hlt
lods
rclb
jae
test
xchg
popl
jbe
add
adc
imul
jmp
fstl
xchg
pop
adc
stc
out
sarl
testb
cld
mov
orl
mov
jg
std
add
fdivrl
adc
mov
gs
bound
adc
adc
insl
xor
sbb
and
push
pop
xchg
fiaddl
scas
ret
inc
mov
ds
andl
aam
push
and
xor
fisttpll
in
jl
stos
rcr
pop
popf
shlb
fistps
inc
rolb
xchg
mov
rep
push
mov
sub
aas
xchg
in
or
test
jno
rolb
int
xlat
and
jns
in
cmp
inc
mov
shrb
mov
add
test
dec
movntps
addl
popf
imulb
pop
adc
cmp
dec
xchg
sbb
scas
pop
test
inc
movsb
inc
cmp
int
push
lahf
daa
xchg
xor
dec
shlb
and
jno
shlb
lods
outsb
stos
stc
lods
dec
fwait
jmp
fisubl
add
incb
inc
test
in
scas
add
pop
or
sub
lods
sbb
lret
lods
sub
pop
mov
neg
dec
xor
jno
mov
lret
push
jno
push
dec
or
in
dec
out
cmp
shlb
push
or
push
fistpll
clc
sbb
test
mov
cmp
ret
or
mov
icebp
sbb
pop
outsb
cltd
adc
aas
loope
mov
enter
and
push
mov
fimuls
insl
lds
fs
xor
arpl
jmp
mull
jg
xor
mov
jae
dec
in
pop
lods
mov
roll
test
xlat
mov
in
in
outsl
cmp
push
adc
je
or
pop
or
push
cli
into
inc
or
push
xchg
fnstenv
add
lahf
or
ret
xor
movsl
and
mov
pop
xchg
lock
jns
cmp
dec
andl
push
and
or
adc
out
mov
push
dec
xor
jnp
lds
cli
mov
sbb
fstl
jle
cltd
cmp
out
in
scas
outsl
daa
mov
in
xor
cmp
repnz
addr16
cmpsb
cmc
inc
mov
mov
pop
mov
lcall
inc
cmc
out
cmpsl
push
aas
mov
subb
mov
xlat
and
test
fnstcw
clc
add
hlt
and
ret
lods
rcl
push
jp
ret
mov
mov
mov
sbb
mov
frstor
insb
mov
xor
jb
fistps
xlat
ss
sahf
in
push
fwait
and
ret
xchg
fnstcw
pushf
jne
or
pop
jp
enter
xlat
xchg
mov
in
pop
push
xor
sub
ret
call
arpl
shrb
push
jnp
cmp
pop
mov
add
sbb
push
mov
add
mov
add
popa
cmc
out
negb
jle
scas
add
out
add
mov
ss
cli
fs
push
hlt
lcall
data16
sbb
outsl
xor
lret
faddl
loope
jae
xor
jne
adc
icebp
or
cld
cmp
fimull
jecxz
sbb
fidivrs
nop
mov
jg
repnz
ja
leave
push
adc
jecxz
fsubs
aas
stc
add
fldcw
aas
mov
mov
iret
sbb
sarb
rcrw
stc
mov
xor
inc
mov
es
mov
js
arpl
lds
inc
in
negb
ds
pop
aaa
mov
adc
dec
dec
js
adc
shr
inc
icebp
push
inc
xorl
sbb
jbe
fcom
hlt
iret
cmp
push
lods
shlb
daa
lret
mov
or
fimull
adc
lea
dec
shlb
jg
lods
in
xor
mov
and
cs
xlat
xor
es
mov
dec
mov
dec
inc
jo
pushf
scas
mov
sub
incb
testb
inc
mov
scas
outsl
out
push
mov
aaa
pop
xchg
test
pop
adc
adc
lock
xor
frstor
jne
xchg
enter
and
or
xchg
mov
cmp
cmpl
incb
cmp
test
xchg
pop
ljmp
sbb
imul
pop
pop
lods
inc
aad
xchg
jbe
or
lods
jno
fpatan
ljmp
cmp
data16
xor
test
lahf
lods
ret
mov
test
jecxz
js
xchg
fst
mov
call
les
mov
es
stos
stos
adc
sbbb
scas
pop
jbe
inc
nop
fwait
loop
push
adc
lret
movsb
lods
call
inc
arpl
fstps
pop
inc
repz
xchg
into
mov
cmc
into
cltd
cmp
aas
pop
push
push
jae
mov
and
ficompl
push
pop
aam
xor
fcoml
movsl
popf
arpl
adc
scas
push
sub
lcall
mov
jbe
xor
push
push
inc
add
lock
jl
popf
fcomps
sub
shrl
repnz
lahf
inc
adc
and
xor
mov
adc
popa
mov
cli
pop
out
pop
ret
fnstsw
add
leave
mov
push
test
fisttps
inc
sbb
les
and
dec
out
test
xor
cs
lock
lahf
lods
aas
push
sub
pop
lahf
sbbb
dec
jno
jne
sarb
loopne
jb
jo
or
lds
je
xor
les
orl
bound
push
or
add
sbb
outsb
cli
xchg
dec
rolb
adcl
fildl
stos
pop
or
notb
pushf
sub
xor
stc
pop
aaa
push
inc
push
push
ja
mov
push
js
inc
push
bound
test
cmpsl
insl
push
and
test
rclb
dec
cld
aad
call
subb
inc
add
cmc
outsb
xor
shll
sbb
and
pushf
push
dec
xor
js
inc
sbb
data16
inc
mov
into
cmpsl
int3
jno
lret
xchg
xor
cmp
inc
cwtl
cmp
push
cmpsb
mov
and
sbb
or
push
inc
mov
mov
sarb
push
inc
pop
mov
xor
loop
lock
pop
clc
and
jecxz
mov
jo
cmpsb
in
arpl
dec
mov
in
je
stos
pusha
pop
dec
xchg
aas
lock
insl
sub
sbb
mov
push
popf
pop
inc
push
mov
xchg
insl
fs
fistps
in
in
lcall
jae
fistps
or
cmp
popa
mov
bound
insl
call
ret
ret
push
testl
popa
mov
arpl
push
fimuls
sub
popf
sub
ret
ret
sub
imul
shrl
sbb
aam
dec
js
ret
nop
xor
lods
mov
or
inc
sbb
test
sbb
lds
maxps
xchg
mov
fdivr
sbb
test
fisttps
xchg
aad
lahf
lods
stos
pop
jb
xchg
fs
cltd
sbb
std
add
adc
cmc
mov
inc
test
in
push
xchg
jne
sbb
ljmp
pop
push
or
add
pop
mov
pop
xchg
mov
int
lcall
inc
rolb
shlb
sub
sbb
data16
test
shrb
push
pop
js
xlat
scas
int
stos
xchg
xchg
mov
adc
mov
and
insb
xor
bound
cmp
dec
stos
xchg
movnti
cmp
stc
jg
pop
sub
std
sbb
orl
adc
aam
fdivrl
pop
ss
call
test
xlat
daa
shlb
jl
popa
cs
aaa
fsubl
adc
cmp
mov
inc
int
mov
dec
in
adc
cld
fadd
lods
stc
std
push
jbe
shlb
fstl
out
mov
sub
repnz
or
fldcw
fnstcw
fsubrl
push
imul
dec
dec
int
add
arpl
loop
jne
dec
jnp
pop
pop
nop
mov
bound
pushf
xchg
pop
or
scas
out
dec
cmpsl
adc
xchg
sub
aam
mov
jbe
enter
pop
mov
stos
pop
inc
out
mov
loop
into
mov
icebp
xor
cld
and
les
xchg
or
adc
jmp
movsl
pop
ret
dec
push
aad
dec
mov
test
cmpsl
fdiv
out
sub
shl
repz
jne
mov
lods
dec
dec
or
mov
into
iret
and
das
and
repz
fstp
push
push
cmpsl
xchg
mov
out
je
repz
or
rep
mov
loope
sub
ljmp
daa
cmpsl
xchg
or
xchg
jmp
mov
cmp
cmc
popf
xchg
fcompl
cmp
jecxz
push
push
or
rcrb
outsb
xlat
daa
aas
mov
xor
jo
mov
add
stc
cld
das
repnz
adc
mov
xchg
rol
cwtl
pop
mov
out
cmp
in
loope
push
repnz
pop
mov
xor
cmp
xor
jle
in
sub
loopne
xchg
cmpsl
pop
incl
cmc
adcb
jb
adc
sub
xor
push
cmp
lcall
test
imul
xor
dec
add
dec
inc
cld
scas
pop
stos
add
inc
test
and
jo
xchg
pop
xchg
mov
ss
in
push
rorl
pop
lcall
push
sub
xchg
inc
push
aas
adc
bound
or
stc
push
sub
adc
cmp
out
imul
dec
iret
pop
bound
out
and
in
daa
es
rcr
daa
pushf
in
or
jge
jnp
inc
add
cmp
fs
imul
adc
sti
data16
xchg
jae
hlt
into
cmp
push
adc
nop
jbe
in
int3
push
mov
imul
dec
sbb
notl
jl
lods
movsb
jae
mov
lahf
sbb
arpl
das
jnp
inc
out
movsb
pushf
mov
and
cld
ret
movb
mov
bound
lock
jno
push
adc
push
popa
fidivrl
xchg
xchg
push
sarl
cmc
xor
movsl
stc
lret
sub
je
popa
test
pop
cmc
jo
or
cmc
mov
mov
testb
inc
add
lcall
add
idivl
jb
sbb
cmp
int
movsl
imul
sbb
cmc
jg
mov
cmp
cwtl
cmpsb
roll
pop
add
inc
fs
roll
jmp
mov
repz
daa
aas
ret
out
and
arpl
or
out
stos
dec
stos
pusha
xor
adc
sbb
dec
and
js
or
addr16
addr16
jmp
insb
iret
xchg
lds
repnz
gs
dec
xchg
arpl
jmp
arpl
inc
nop
adc
sbb
repnz
int3
xchg
lds
cmp
push
mov
fsubrl
mov
jl
sbb
fimull
mov
sub
mov
lcall
mov
fcmovbe
imul
insb
clc
scas
fs
jno
out
aas
mov
jle
jno
iret
pop
push
or
xlat
mov
jne
sub
js,pt
rclb
dec
lods
mov
pop
jmp
dec
push
hlt
stc
xchg
and
fldenv
mov
jp
jecxz
and
or
addr16
aaa
adc
daa
dec
cltd
popa
gs
out
daa
sbb
fcoms
adc
in
or
arpl
dec
lahf
push
mov
test
rclb
jae
mov
outsb
jp
std
lcall
icebp
into
je
in
adc
add
jo
leave
scas
out
lcall
andl
xor
arpl
dec
mov
lret
arpl
and
movsb
scas
arpl
push
xchg
inc
pop
dec
repz
xor
lret
subl
jg
mov
xchg
mov
xchg
mov
test
cltd
mov
es
push
bound
xor
jmp
dec
fcoml
cwtl
test
push
mov
jl
inc
daa
pop
inc
cmc
es
mov
jo
ret
lcall
lcall
sbb
mov
leave
xchg
enter
mov
push
jge
push
lcall
xchg
xor
stos
mov
lret
test
lea
outsl
arpl
jmp
mov
outsl
jne
stos
lods
sarb
out
test
and
daa
jno,pn
loope
bound
fidivrl
pop
lods
test
mov
jecxz
sbb
or
add
cwtl
loop
ja
lods
push
lcall
fnstenv
shl
mov
mov
inc
push
pop
loop
repnz
cmp
xchg
enter
inc
fdivs
mov
aas
into
jno
cmp
das
movsb
mov
test
xor
cmp
in
jae
xchg
adc
adc
loop
leave
mov
cmc
iret
loop
xchg
or
cmpsb
in
stos
lret
xor
pushl
imul
push
fcmove
lret
pushf
ja
xchg
roll
jae
pop
aas
ret
and
jb
push
int3
lahf
mov
push
inc
xchg
les
cld
outsl
xchg
sub
ljmp
jmp
cmp
addr16
adc
nop
insb
push
or
imul
fcomps
int
dec
jae
lods
sub
pop
mov
push
push
inc
inc
xchg
or
adc
push
addr16
loop
mov
ja
ret
and
sti
mov
mov
outsl
xor
push
mov
idivb
push
cli
mov
pop
inc
xchg
dec
mov
mov
sti
int
hlt
jae
and
ret
mov
push
sbb
sub
push
push
lods
xchg
dec
push
pop
out
cmp
pop
sbb
hlt
jnp
pusha
rorb
inc
cltd
and
sbb
mov
cli
dec
xchg
sub
mov
sub
sbb
or
inc
push
sbb
in
inc
push
inc
or
js
cltd
add
push
in
and
xchg
sbb
push
out
aam
je
lds
adc
mov
mov
mov
sti
add
mov
gs
and
call
jle
aam
lahf
push
mov
or
fwait
dec
pop
add
fxtract
sbb
pop
mov
mov
rcr
cmp
pop
or
dec
mov
xchg
push
mov
xor
xor
sarb
addr16
pop
xlat
push
stc
leave
std
add
mov
jbe
xchg
lock
push
clc
xchg
inc
mov
pop
push
loop
test
push
sbb
les
imulb
imul
shl
cltd
test
push
decb
into
std
fidivrs
xorb
lahf
in
call
mov
push
lock
pop
push
test
pushf
and
adc
subl
sub
xor
nop
add
sbbb
lods
push
not
jg
fdivrl
push
dec
xlat
in
pusha
mov
aaa
negb
test
pop
repnz
lods
mov
lret
lcall
inc
idivl
roll
or
dec
sbb
jmp
ret
or
push
loopne
adc
movsb
lock
out
lret
mov
mov
cmp
enter
es
or
adc
inc
test
loope
cld
ret
add
leave
or
jg
inc
data16
pop
aad
pusha
jge
fwait
call
enter
pop
inc
inc
and
stc
xor
outsb
jmp
lods
out
push
aam
jge
push
cwtl
inc
inc
mov
adc
es
lcall
pop
test
pop
test
inc
xchg
cmpsb
outsl
pop
test
sub
jg
cmp
pop
xchg
fists
inc
and
xor
mov
mov
loopne
cs
sub
mov
sbb
push
mov
ret
in
or
dec
add
inc
mov
cs
jns
insb
cmp
adc
jno
sbb
scas
mov
es
jg
das
inc
and
stos
mov
inc
lcall
or
mov
and
xchg
mov
iret
push
into
add
and
movl
lds
push
jo
scas
cwtl
ret
aaa
idivl
pop
rcl
sbb
sti
imul
das
into
mov
shrb
ss
icebp
insl
adc
lcall
push
fsubs
mov
scas
xchg
dec
lds
imulb
fstpl
repz
dec
lock
scas
jge
mov
cmp
mov
outsl
pop
negl
sub
inc
inc
push
pop
test
dec
clc
sti
out
lahf
test
adc
mov
lret
pushf
arpl
insb
add
out
jg
pop
mov
pop
xor
cmpl
movb
adc
cwtl
and
dec
jle
sahf
sub
dec
aas
xor
jl
inc
lods
xchg
push
bound
shll
cmp
jno
push
and
out
push
lret
cld
test
pop
xchg
sub
gs
push
data16
cmpsl
ljmp
jl
lock
or
rol
nop
mov
inc
add
mov
jg
cmpsl
test
int3
in
xor
test
inc
cs
add
inc
xchg
dec
dec
mov
cmp
jmp
xor
cmp
fdivr
jle
xchg
xchg
cmp
data16
test
sub
jl
mov
pop
test
xor
movsl
fisubl
enter
sarb
addr16
mov
sbb
xchg
stc
movsl
add
in
cltd
push
jmp
stc
xlat
testb
xchg
cwtl
lods
dec
insb
popf
and
scas
dec
xchg
mov
push
pop
popa
ret
mov
sarl
cwtl
push
add
mov
lahf
insl
dec
mov
sahf
cmc
mov
fidivrs
xor
mov
out
ret
lods
sub
mull
es
sbb
push
idivb
mov
push
int
add
mov
je
mov
lret
mov
mov
les
jecxz
scas
and
popf
sbb
jp
adc
pop
sub
dec
stos
stos
mov
sbb
xchg
adc
push
push
cltd
sbbb
inc
dec
mov
pusha
outsb
movnti
mov
sub
mulb
mov
jnp
int3
sub
test
jb
sti
jl
jg
push
jl
lret
jb
sub
mov
and
fsubrl
mov
fstl
ja
fcmovb
xchg
dec
cmp
rcrb
test
mov
sub
out
or
je
adc
jmp
data16
rcll
les
movsl
xlat
sbb
orb
aas
sub
cmp
push
subl
push
enter
negb
pop
movsl
or
out
fucom
inc
pop
cmp
sbb
test
inc
fistpl
scas
push
push
jg
arpl
jae
xchg
xchg
movnti
jno
sub
negl
imul
sahf
popf
push
icebp
mov
fimull
xchg
in
aad
jl
adcb
shll
lock
hlt
leave
push
popf
jbe
popf
insb
push
jl
sub
adc
or
inc
mov
ja
dec
and
pop
inc
data16
pop
mov
test
mov
repz
push
lret
stos
test
pop
stc
cltd
repnz
mov
out
inc
pop
and
adc
mov
sub
mov
ret
and
test
xor
inc
mov
mov
add
fsubrs
js
pop
int3
leave
inc
leave
cwtl
dec
mov
mov
mov
inc
popf
adc
add
into
aam
add
mov
adc
movsl
sbb
arpl
push
mov
shl
mov
or
push
push
test
clc
mov
xor
mov
loopne
adc
insl
mov
es
push
sbb
jo
fs
push
in
pop
inc
jb
inc
xchg
push
push
pusha
arpl
mov
inc
ja
xchg
add
sbb
and
pop
xor
push
pop
scas
mov
jnp
xchg
pushl
pop
xchg
xchg
int3
out
fisubl
sub
dec
data16
nop
lret
sbb
jbe
das
bound
movsl
scas
sub
test
lock
int
xchg
mov
pop
es
iret
loope
inc
jb
jecxz
jb
xorl
xchg
jno
movsb
xchg
les
xlat
test
repz
jbe
adc
sarl
fcoml
jmp
push
cmp
gs
lods
roll
pop
rcrl
or
or
mov
inc
hlt
icebp
jns
dec
pop
push
rcrb
dec
das
or
jbe
and
adc
faddl
pop
insb
rcl
inc
jle
sub
mulb
int
mov
rcll
jecxz
xor
jb
es
mov
mov
add
fldl
cld
cmc
inc
int3
fadds
imul
into
ret
into
or
pop
dec
mov
jmp
cli
add
sub
pop
dec
out
mov
add
xchg
test
in
xchg
pop
js
xor
int
es
jne
arpl
pushf
adc
cli
jg
fsubs
je
mov
xor
sahf
mov
enter
lret
cld
imul
xchg
pop
int3
leave
jl
push
es
xor
push
pop
cmp
dec
mov
add
popa
aad
test
push
xchg
inc
pop
loope
xor
pop
negb
or
push
mov
push
sbb
sarl
lahf
inc
fsts
lea
je
enter
push
iret
mov
push
ss
xorl
aaa
fisttpll
shlb
dec
je
push
jne
ss
mov
xchg
sbb
test
or
push
bswap
xor
lret
push
lret
cli
pop
push
pop
jns
pop
sub
xchg
adc
jl
jl
cmp
push
mov
fstps
cli
push
cmp
cltd
push
add
cltd
inc
fnstcw
mov
arpl
sarb
out
aaa
mov
aaa
fwait
jle
sbbl
jecxz
lock
sbb
sbb
jae
jns
pushf
mov
les
dec
and
xor
shr
xor
out
adc
out
pop
inc
pop
sub
ror
jnp
movsb
and
ret
sbb
jge
jns
xchg
dec
xor
push
ds
int
icebp
ds
js
icebp
pop
or
push
les
jae
pushf
cmpsl
push
cli
das
add
loop
inc
sti
add
dec
arpl
rcr
push
ljmp
enter
popf
xor
sbb
dec
sbb
adc
adc
cmpsb
mov
lock
rcl
add
loopne
xchg
in
push
outsb
cmp
jns
fdivs
es
xchg
lods
adc
lods
mov
sbb
in
dec
mov
fsubrp
imul
adc
or
cs
subl
mov
data16
scas
xchg
data16
inc
setg
jge
sbb
mov
int3
sti
cmc
das
dec
sarb
pusha
mov
or
push
aas
mov
inc
mov
push
mov
add
jno
push
push
push
xlat
idivl
aam
add
sbb
mov
dec
hlt
pop
cvtpi2ps
fwait
sub
inc
fmuls
jbe
push
adc
fstpl
adc
sarb
add
test
out
clc
ss
dec
xor
inc
out
call
push
adc
movsb
out
xchg
push
or
lahf
add
repnz
inc
stos
and
cmpsl
inc
leave
inc
add
repz
or
xchg
rorl
insb
add
push
enter
xor
dec
sbb
dec
out
mov
pop
inc
lock
sbb
pop
add
add
fistps
and
cs
mov
cmpsl
push
fimull
add
or
lods
sub
sub
scas
inc
je
adcb
inc
dec
ss
add
cmp
sub
pop
and
cmpsb
out
xlat
ret
shrl
mov
stc
adc
out
gs
and
andb
dec
push
jb
jbe
pushf
sub
mov
xlat
mov
into
mov
fsubr
or
out
mov
jns
sbb
add
and
ficomps
push
lcall
mov
clc
ss
das
lcall
cmp
aam
push
sar
xchg
push
xchg
fdivrs
push
in
adc
push
sarb
or
popf
scas
and
pop
jmp
mov
lock
pushf
lret
and
xchg
aam
xchg
andb
out
mov
mov
or
jmp
mov
mov
popf
and
sbb
xor
dec
jle
arpl
xchg
jmp
sub
andw
mov
fucomi
lods
pop
pop
or
std
push
jmp
pop
mov
adc
or
adc
out
adc
pop
push
and
cmp
mov
or
mov
push
idivl
inc
mov
stos
icebp
sub
inc
movb
hlt
sbb
fwait
insb
xchg
pop
jo
sbb
xor
mov
cmpsb
push
add
jle
sti
fsts
ss
xchg
pushf
stos
push
inc
mov
ret
sahf
in
das
mov
test
inc
push
jge
inc
psubsb
fcos
adc
cmp
jb
xchg
jl
jge
pinsrw
mov
out
xchg
scas
out
out
mov
ret
test
mov
mov
rcrw
nop
lahf
bound
leave
xchg
scas
adc
xor
add
jg
popa
push
or
dec
add
js
push
mov
sbb
aas
mov
mov
sub
add
in
fsubl
mov
add
je
andl
ja
jne
repz
test
lcall
xor
movsl
popl
dec
aaa
pushf
mov
push
call
fsubl
outsl
or
ljmp
push
pop
cmp
fadd
insb
mov
push
icebp
and
stc
cmc
sbb
scas
sbb
sub
lods
or
out
les
in
cmp
mov
ja
ret
jl
loope
mov
sbb
push
ljmp
clc
pop
and
bound
and
cmp
push
dec
dec
arpl
sbb
repnz
repz
pop
and
push
aas
rcr
and
mov
or
and
and
mov
add
lods
cltd
add
stos
add
clc
outsb
xchg
and
stos
cmp
push
lods
pop
int
push
xchg
pop
sbb
mov
loopne
cmp
or
pop
mov
pop
cmp
lea
das
inc
fwait
pusha
mov
mov
in
cld
dec
add
into
popa
mov
xor
xor
xchg
adc
out
pop
sbb
jp
inc
xor
lret
mov
jo
outsb
bound
pop
fiaddl
je
mov
adc
push
sti
mov
jno
shrb
imul
insb
xor
push
in
scas
inc
stc
xchg
hlt
ficomps
pop
aad
or
xchg
sbb
jle
or
mov
nop
call
mov
push
push
push
popa
inc
popf
inc
sahf
adc
jle
shll
loope
pushl
mov
mov
in
scas
pop
sub
and
mov
sbb
fwait
mov
ljmp
test
push
ljmp
inc
aad
xchg
sbb
cmp
shrl
stos
pop
push
in
jecxz
adc
addr16
jns
sub
rorb
pop
call
sbb
rolb
imull
cmp
cmp
cltd
repnz
push
xchg
stc
xlat
sbbl
fdivrp
push
ret
ret
push
loopne
dec
xor
in
sbb
shlb
pop
fcoms
mov
cmp
es
fcompl
pop
push
clc
xchg
outsb
sbb
mov
cmp
popa
scas
xchg
stos
sbb
lea
dec
aad
push
fs
int3
aaa
xchg
iret
jl
push
xorps
and
insl
addl
sub
jg
mov
mov
dec
insb
mov
jecxz
cld
xor
sbb
adc
popf
je
jmp
xor
shll
and
or
sub
inc
bnd
daa
xor
xor
in
push
nop
sub
xor
call
das
ljmp
jo
lock
mov
scas
ret
jle
pop
cltd
inc
tzcnt
and
add
out
mov
lea
es
sbb
mov
insb
inc
loopne
fnsave
rcr
loop
sahf
mov
sub
int
xor
push
inc
push
dec
inc
mov
and
cmp
sbb
orb
iret
add
std
mov
imul
call
lret
xchg
dec
int
dec
sub
xchg
dec
in
mov
pop
data16
shlb
pop
arpl
or
mov
lahf
add
stos
mov
lret
push
fwait
xor
jo
xor
scas
call
xor
and
fists
movb
lret
jp
push
xchg
push
push
div
add
jae
imul
outsl
leave
xchg
inc
ja
cmp
or
iret
dec
ret
in
daa
adcl
mov
adc
dec
lods
movsb
arpl
push
test
inc
es
gs
negl
lret
lea
mov
repz
pop
push
xor
jmp
jecxz
cmp
sub
lret
adc
dec
inc
scas
jl
pop
inc
test
push
in
decb
pop
inc
std
jl
push
sbb
stc
push
cmp
inc
int
dec
call
pop
lret
mov
fwait
jle
sbb
cli
movsl
in
inc
inc
fdivr
push
mov
xor
pusha
xlat
xor
adc
lret
lea
into
jns
andb
inc
xor
call
cmp
ljmp
lret
cmpsl
out
sbb
add
gs
adc
in
jnp
cmp
xor
gs
mov
adc
pop
call
mov
sub
out
and
sbb
mov
loope
add
pop
ljmp
daa
push
and
inc
xchg
fidivs
imulb
rcrl
cmpsl
cmp
cmp
cs
dec
sbb
xchg
push
movl
enter
aaa
jle
popf
sbbb
xchg
xor
gs
or
xchg
lods
jo
xchg
test
out
mov
or
mov
inc
iret
shll
xchg
mov
and
das
and
addr16
ret
adc
add
divl
adc
inc
mov
lods
or
add
stos
es
adc
hlt
out
or
roll
aam
aad
mov
shrb
je
in
and
sub
std
lcall
fstpt
mov
int3
dec
or
aad
fldl
dec
jge
outsl
and
andl
or
push
stos
jl
pop
push
mov
push
mov
lret
call
sahf
inc
loopne
sub
imul
xchg
ss
jbe
dec
insl
and
loopne
orb
scas
sarb
aam
pop
fsub
stc
xlat
out
adc
sub
adc
icebp
outsl
and
fwait
sub
add
mov
and
xor
push
jmp
inc
sbb
push
jo
jg
div
sbb
fcmovnu
leave
iret
jl
fsubr
repz
out
pop
xchg
and
movsl
popl
cmc
fisubs
or
mov
jle
jb
mov
mov
push
cltd
imul
mov
out
xor
subb
mov
sub
ja
out
mov
jp
jle
sub
mov
cltd
pop
ljmp
fmulp
dec
hlt
push
fildl
xchg
pushf
sub
jne
mov
sbb
aad
hlt
lret
fwait
xchg
int3
sub
mov
sbb
adc
popf
xchg
jg
in
push
sub
cmp
movsb
xchg
in
dec
xor
jg
lea
rcrl
mov
xor
lods
jp,pn
mov
xchg
jnp
shll
push
outsl
faddl
incl
push
loopne
outsb
lahf
in
adc
sbb
adc
int3
mov
outsb
lock
sub
mov
and
les
in
loope
out
jle
pop
dec
jp
jno
xchg
push
dec
repz
fists
idivb
call
pop
repnz
fistps
ljmp
sbb
fsts
mov
jns
xchg
cld
fdivrs
addr16
mov
and
cmp
xchg
add
mov
and
rcll
je
mov
add
lock
aas
sbb
fcompl
aad
inc
jbe
or
leave
and
xor
loop
stc
notb
das
or
stos
mov
leave
and
in
adcl
and
sbb
leave
dec
sub
and
ds
or
mov
dec
insl
jno
cmp
inc
inc
push
in
outsb
or
xor
jns
decb
les
das
in
in
push
lds
xor
mov
fs
add
cmpsb
cmp
js
popa
mov
inc
jne
sbb
mov
sbb
clc
push
and
mov
ljmp
and
pushf
mov
jo
mov
jmp
and
out
cmp
pop
test
lret
clc
cmp
push
xor
push
orl
xchg
fmull
rcl
sbb
push
jle
add
and
in
dec
dec
jp
and
or
cs
test
fdivs
and
mov
or
sahf
dec
jge
jecxz
inc
pop
adc
push
sub
ds
inc
jbe
jbe
xchg
in
adc
mov
inc
inc
or
mov
xchg
pop
sub
in
dec
in
and
lcall
iret
xor
jo
xlat
sub
lcall
adc
call
in
cmp
sub
lret
shlb
lds
xchg
jb
in
and
insl
jae
out
mov
pop
movsb
mov
shrl
jge
pop
push
sub
out
pop
je
outsl
xor
push
das
jne
inc
pop
xchg
cmpsl
adc
dec
push
cmp
add
or
push
testl
ljmp
cmp
das
pop
movsb
dec
test
fimuls
loope
adc
pusha
int
lret
lea
std
xor
jb
and
adc
cmp
jecxz
adc
fwait
idivl
xchg
loop
icebp
xchg
aas
mov
cltd
sahf
loop
dec
imul
fadds
aam
imulb
cs
out
fldt
xchg
xor
adc
ss
outsl
add
fwait
xchg
iret
mov
sbb
jge
rclb
push
mov
xor
sti
sub
pop
jge
or
loopne
push
xchg
jns
jmp
mov
and
scas
pop
jb
punpckhwd
push
mov
jns
shrl
cmp
jle
enter
mov
fsubp
rolb
push
jl
add
cmp
loop
and
outsl
xor
xchg
xchg
dec
fsubrl
mov
mov
cltd
movsl
xchg
dec
dec
jno
xchg
mov
ss
push
jle
or
push
mov
gs
adc
inc
sbb
pop
push
nop
mov
xchg
mov
or
les
jns
adc
pop
inc
test
xchg
mov
enter
loopne
jp
dec
fildl
fstl
insb
mov
sahf
xor
pushf
sub
push
dec
dec
push
adc
jne
out
push
scas
jns
ljmp
repz
orb
pop
test
jnp
ja
inc
out
xor
stc
enter
add
xor
add
jns
mov
inc
mov
scas
lret
ficomps
pop
pop
mov
mov
adc
jo
cmc
js
dec
enter
sbb
or
imul
bound
xor
jmp
negl
data16
fldl
and
push
iret
xchg
lea
and
cmp
add
add
xor
mov
jecxz
and
xchg
adcb
xor
fwait
jno
add
movsb
and
repnz
je
jle
xor
stos
sbb
or
dec
daa
pop
jb
sbb
and
imul
pop
aaa
dec
fsts
push
in
and
je
aam
dec
shrl
push
push
faddl
mov
fisttpl
hlt
jbe
cmc
leave
mov
xchg
stc
xchg
mov
ja
stos
lret
pop
lea
xlat
into
pop
shl
ret
bound
mov
iret
subb
pop
add
in
adc
mov
jg
mov
push
mov
mov
js
push
in
in
ljmp
or
les
jg
inc
adc
sub
or
xor
sbb
push
enter
push
sub
cmpsb
pop
ja
pop
popa
push
or
jbe
movsl
pop
sbb
xchg
jne
mov
jnp
daa
cmc
out
sub
lahf
xor
sbb
adcl
pop
jmp
dec
mov
jbe
fdivp
mov
add
or
push
sbb
xchg
or
xchg
inc
mov
mov
pop
mov
repz
cmp
and
xchg
xor
cmpsl
out
mov
icebp
adc
jl
roll
ficomps
or
adcl
pop
fmull
xor
pop
fdivrp
sbb
std
mov
mov
add
ds
int3
fsubs
scas
push
sbb
dec
sbb
in
jle
push
xorb
sbb
push
imul
or
pusha
push
mov
push
mov
lcall
xor
orl
ret
fidivrs
scas
push
or
gs
push
insb
push
dec
sti
mov
imul
fcmovu
pop
lcall
and
dec
icebp
adc
mov
fs
xchg
mov
jecxz
jp
mov
sub
mov
lea
mov
imul
fisttps
cmpsl
scas
xor
mov
cwtl
adc
jae
cli
es
roll
loop
test
cmp
fimuls
mov
outsb
outsb
jmp
movsl
push
movsl
je
adc
adc
call
xchg
inc
sub
enter
cmp
insl
xor
aam
push
mov
cmp
jp
cmp
push
or
jmp
test
shufps
or
repnz
add
stos
cli
int
adc
add
frstor
sub
pop
push
sub
and
ja
add
fldenv
xchg
sahf
in
inc
push
xor
pop
addr16
lock
push
xchg
loop
dec
adc
das
aad
xchg
mov
cmpsl
lcall
fcmovnbe
clc
mov
add
out
ss
ds
dec
aad
outsb
mov
push
es
shll
outsb
imul
and
ret
rorl
xor
popf
icebp
mov
jo
mov
xor
dec
inc
jbe
mov
mov
repnz
adc
aas
push
adc
inc
es
cld
mov
xor
adc
fcomps
xchg
or
ret
dec
idivl
shll
and
call
test
pop
xchg
fisubrl
pop
dec
ss
push
ja
inc
add
adc
iret
sbb
aam
sbb
sbb
aaa
popf
xchg
lods
mov
dec
mov
shrl
loop
mov
jnp
addr16
pusha
scas
jle
inc
int3
iret
push
sbb
adc
add
cwtl
out
inc
pushf
pushf
call
sub
cs
or
add
incb
cltd
dec
push
icebp
mov
rcrb
add
inc
sarb
rcl
mov
daa
xchg
and
sysret
mov
fmuls
dec
lock
leave
movsl
movsl
nop
push
shl
sub
in
adc
inc
and
xchg
xchg
es
xchg
lret
je
add
inc
jg
pop
lret
fstpt
test
adc
outsb
in
jne
arpl
add
add
clc
cmc
add
clc
fmul
mov
dec
pop
sub
adc
pmuludq
movsl
adc
jnp
lods
das
or
and
ja
cltd
mov
shld
jne
pop
adc
cld
or
pusha
ficoml
jg
xor
push
mov
jecxz
stos
repnz
add
jmp
ds
das
in
inc
cmc
inc
dec
sti
lods
movsl
test
xor
jp
push
lret
or
cmp
int3
cwtl
int
popf
push
nop
sub
das
enter
iret
clc
or
sbb
pop
sub
xchg
mov
pushf
mov
das
cmc
or
fucomp
mov
sbbb
pop
repz
cmc
mov
pop
lea
dec
lds
nop
punpckhwd
jecxz
std
adcb
call
cli
idivb
out
add
lods
xchg
in
jg
imul
xor
call
fs
loope
inc
in
lods
js
movsl
sbb
repz
fldl
fists
aaa
inc
mov
xchg
xchg
dec
cli
stc
mov
mov
sub
cs
add
push
loopne
stos
lods
fisubrl
push
je
imull
shr
xlat
sti
push
xchg
mov
lea
call
push
push
sbb
sbb
inc
pop
adc
arpl
mov
adc
inc
dec
pop
hlt
notl
shlb
stos
scas
jmp
and
jge
pop
clc
or
repz
dec
inc
out
push
dec
push
bound
xlat
cs
push
scas
push
popa
cmp
hlt
xlat
add
add
sbb
std
add
xlat
jns
cwtl
adc
jmp
jb
mov
fidivrs
int
xchg
dec
adc
shlb
in
dec
std
jnp
xchg
dec
pop
jecxz
inc
mov
pushf
in
lcall
popa
mov
mov
aam
jae
pop
imull
mov
jmp
dec
movsb
into
shl
rorl
dec
pop
adc
pop
jge
inc
adc
cmpsl
mov
xlat
pusha
dec
test
and
pop
and
cmc
lea
rcr
jne
inc
push
arpl
push
gs
xor
pop
test
arpl
jl
jmp
mov
mov
es
jae
filds
aam
inc
mov
popf
mov
add
pop
std
out
pusha
test
push
je
aam
pop
and
sub
sbb
repnz
into
or
or
inc
jae
jle
adc
bound
push
sahf
dec
lock
and
inc
ja
and
stc
outsb
addr16
into
mov
hlt
scas
popa
hlt
xchg
sbb
push
adc
inc
xchg
lahf
cmp
rcl
out
mov
xchg
stos
lods
xor
daa
or
sbb
movsb
jp
pusha
jmp
int3
push
xchg
shr
ret
add
popa
mov
ja
pop
sahf
pop
mov
sub
in
dec
inc
enter
out
sti
xchg
mov
pop
jl
popa
data16
pop
outsl
mov
dec
in
xchg
pop
pop
mov
wrmsr
addr16
push
xchg
pop
imul
cli
jno
xchg
cltd
repz
add
cmp
call
mov
fcompl
xchg
sub
add
ret
jns
inc
roll
xor
xchg
js
jp
or
sbb
cld
and
test
xor
inc
rcr
shll
out
testl
bound
mov
inc
xchg
fidivl
repnz
pop
cmpsb
sbb
imul
dec
jnp
in
shll
push
dec
shlb
test
sub
pop
mov
lahf
and
sbb
lret
mov
ss
or
test
mov
pop
lcall
int
mov
movsl
xlat
jno
stos
cmp
cmc
pop
mov
lds
pop
rolb
test
inc
jbe
add
push
repz
ret
mov
mov
pusha
or
jnp
pusha
xor
sahf
dec
jmp
aam
jb
inc
rcll
push
ljmp
orb
and
xor
and
cwtl
jle
xor
fcoms
pop
inc
faddl
test
or
push
in
cmp
shll
fstpt
adc
push
imul
daa
adc
clc
adc
adc
call
jnp
popa
ss
xchg
jnp
in
inc
pop
out
call
jb
mov
push
jge
iret
push
xchg
and
dec
mov
mov
push
mov
and
fisttpl
test
adc
jo
mov
push
add
push
test
movsl
test
scas
jle
loope
loop
sti
orl
push
jle
decb
inc
jns
mov
ret
xlat
push
movsb
mov
cli
dec
add
test
test
sub
sub
fistl
adc
ja
jbe
ret
push
movsl
dec
imul
cld
mov
mov
popf
mov
mov
push
les
xor
lock
jg
lock
sahf
frstor
xchg
shll
ss
in
stos
adc
subb
push
xchg
stos
outsb
cli
adc
out
test
es
xorl
in
insl
mov
insl
popf
mov
xor
movsb
mov
in
mov
pop
roll
stos
add
or
out
or
ds
mov
ss
outsl
mov
jns
push
nop
xor
mov
ret
mov
outsb
sbb
mov
push
inc
imul
in
stos
int3
repz
fisttpll
ret
loope
and
jmp
xchg
push
aas
dec
mov
add
imul
std
out
enter
jle
outsb
or
or
ret
sbbl
sti
pop
ljmp
nop
push
mov
das
cli
push
and
xchg
xor
xor
sbb
les
repz
ficompl
pop
test
add
push
sub
mov
lods
leave
movsl
inc
push
xchg
adc
sub
stc
test
inc
mov
testl
clc
dec
dec
popf
divl
dec
push
adc
and
popf
decl
adc
ret
inc
test
fisttps
aad
adc
push
push
fnstcw
inc
lret
les
fcmovne
push
push
xlat
orb
jno
inc
and
repz
scas
rep
xlat
push
mov
fisubrl
and
into
in
out
mov
popf
or
pminub
mov
popf
xchg
pushl
fisttps
stos
mov
xchg
jle
xlat
mov
add
js
lcall
and
inc
sub
dec
ret
mov
idivb
repz
dec
add
jns
popf
sub
test
mov
mov
dec
lock
movsb
shl
lahf
or
scas
movsl
inc
mov
in
rcrl
inc
dec
or
popf
sbb
lret
cmp
iret
xchg
mov
lahf
std
imul
pop
aas
and
push
cmp
pop
pop
sahf
out
mov
or
cmp
movsl
and
push
std
inc
loope
and
push
fs
mov
rcll
inc
cmp
dec
pop
and
aad
push
cmp
fimuls
sbb
add
sub
pusha
test
mov
cmpsl
add
dec
xchg
mov
in
insl
cmc
xor
popa
test
mov
push
cmp
jno
and
mov
mov
mov
int3
ja
or
cmp
pop
lea
jecxz
jle
cwtl
ret
or
dec
lock
mov
push
jecxz
pop
lods
bnd
cmp
inc
sub
push
mov
dec
push
ss
out
mov
dec
lret
pop
pop
les
out
jo
and
ds
sbb
fwait
cli
call
jge
mov
mov
and
test
std
cltd
push
adc
pushf
ljmp
andl
sbb
cmp
rolb
fstps
sti
or
ja
cltd
mov
repz
insb
les
xor
cmp
push
inc
xchg
out
pop
shlb
in
sub
test
mov
mov
ss
aas
mov
xor
stos
adcb
jge
int
in
movsl
jmp
enter
push
sub
dec
sbb
cmp
loope
xor
or
aas
cs
pop
or
insl
mov
push
mov
pushl
adc
arpl
fwait
hlt
ljmp
in
or
mov
cmpl
stos
push
push
cmc
subb
mov
cmp
aaa
jecxz
push
xor
cmp
js
je
mov
aad
xchg
push
dec
mov
cmpsb
and
scas
popf
es
arpl
stos
push
pop
cmpsb
hlt
add
aam
mov
and
dec
xchg
mov
pop
dec
pop
mov
or
inc
hlt
xor
aaa
sub
add
mov
adc
xchg
mov
stc
jmp
std
sub
aad
bswap
xchg
js
sbb
fwait
xor
lcall
mov
push
pushf
fisttpll
in
inc
outsb
fwait
aam
mov
outsl
std
sub
push
es
add
jnp
pop
mov
gs
xchg
shl
pop
cmpsb
cmp
add
ja
push
cmp
out
xor
test
inc
pop
inc
pop
mov
push
sbb
xor
xor
movsl
nop
sbb
jb
sbb
jbe
sub
dec
add
xchg
faddl
cwtl
cli
outsl
lret
cwtl
cmp
push
fsincos
int
pop
dec
push
push
pop
push
test
lea
sbb
adc
xchg
idivl
setne
insl
orb
push
jmp
xor
mov
std
mov
pop
cmp
lret
push
lahf
mov
jle
insb
fidivs
adc
out
push
dec
add
fwait
mov
test
dec
mov
scas
vxorpd
jmp
xchg
cmp
dec
lret
xchg
mov
ds
aad
xor
insb
cmc
jmp
out
jmp
dec
jo
faddl
xor
dec
xchg
lahf
sub
in
ss
pop
in
dec
in
or
and
add
cmp
pushf
mov
sub
inc
insb
sbb
mov
dec
int3
inc
mov
lock
imul
fldl
dec
repz
int3
out
jge
lret
jecxz
xchg
pop
lcall
or
mov
sbb
mov
sub
jge
inc
arpl
sub
js
sti
push
jb
cmp
lods
imul
cli
ficomps
scas
cld
in
ss
out
testl
fsubrs
push
int3
cmp
jb
add
and
int3
in
sbb
iret
ljmp
andl
adc
hlt
js
repz
jbe
push
jecxz
xor
push
add
jmp
mov
repnz
jp
stos
adc
add
xchg
inc
fnstsw
push
aas
sahf
mov
pop
incb
stos
jmp
push
push
imull
scas
xchg
xchg
dec
xchg
add
test
mull
loopne
sahf
mov
dec
cmpsb
xor
test
xchg
dec
shlb
sti
fdiv
int
js
pop
jle
and
fwait
sbb
and
rcll
repz
sahf
and
mov
inc
es
jne
push
mov
enter
jmp
jno
mov
insb
outsb
xor
pop
ret
cmp
cltd
repnz
rcl
pop
fidivrl
push
test
adc
cmp
add
pop
mov
mov
pop
mov
clc
rorb
inc
iret
shl
fcmovb
popa
rcrb
fwait
mov
call
xchg
cwtl
sub
lea
jbe
mov
xor
nop
mov
add
testb
xchg
pop
sbb
aad
daa
xchg
aam
xor
fxtract
ret
push
inc
jne
sbb
inc
mov
push
sbb
mov
and
jns
mov
movsb
mov
xchg
sbb
fildll
into
inc
or
jne
jl
jbe
jg,pt
xchg
shll
xor
adc
push
cltd
movl
jge
push
loop
xor
mov
mov
iret
or
popf
mov
xlat
es
mov
or
add
pop
pushf
repz
mov
vpsubw
push
pop
ja
les
popa
cmp
jg
pop
stos
sahf
out
mov
cmc
dec
xchg
ss
add
insb
jecxz
push
adc
lret
cli
xchg
dec
sahf
ret
inc
xlat
aas
or
mov
cwtl
in
out
jle
aad
xchg
stc
adc
mov
neg
sub
out
jecxz
mov
js
cmp
loop
jmp
loopne
inc
jecxz
hlt
push
scas
mov
hlt
rclb
mov
cmp
xlat
adc
popf
mov
and
clc
jns
data16
lahf
nop
fdivl
orb
in
cmp
rorl
sub
jne,pn
lock
mov
dec
add
pop
subb
inc
call
les
jae
sbbb
jp
dec
mov
cmp
aas
adc
sbb
test
inc
das
hlt
imul
push
push
xor
arpl
mov
mov
std
add
add
stos
add
sub
mull
inc
lret
inc
and
movsl
std
sbb
imulb
repz
mov
push
imul
fcoms
inc
dec
pop
and
rcrl
gs
ret
pop
or
jne
and
cmpsb
inc
ja
lahf
ret
fbstp
push
andl
pop
mov
mov
aam
mov
mov
or
dec
aam
jae
stc
mov
jns
rcll
lahf
aam
gs
and
roll
movsl
jl
jo
ljmp
mov
mov
xlat
nop
popa
ret
cmp
and
lock
mov
push
sub
xlat
jno
mov
cmp
std
scas
sub
and
rcrb
fmull
jo
imul
push
pop
push
int3
and
dec
jl
inc
fbstp
test
das
cmp
pop
push
fbld
or
mov
pop
out
mov
pop
xlat
add
in
shll
fwait
adc
xor
aad
mov
adc
cwtl
push
or
inc
in
lcall
pusha
inc
inc
lahf
fs
scas
iret
fcompl
jne
int
icebp
cli
push
push
call
jnp
das
pop
stos
mov
jns
addr16
pop
lods
push
addr16
in
adc
inc
testl
sub
mov
bnd
sub
pop
add
xchg
pop
inc
push
sub
sub
mov
push
shrb
mov
les
shrl
sbb
fidivrs
xchg
adc
daa
rcl
dec
stos
inc
push
into
inc
mov
pop
mov
mov
enter
mov
pop
sbb
xor
mov
mov
cld
aaa
push
inc
fwait
lea
mov
cmp
cmc
pop
ret
cmpl
int3
mov
cmpsl
lret
xor
xchg
aam
addl
ret
push
iret
inc
cmp
fadd
push
pop
adc
jb
in
mov
cwtl
mov
outsl
cltd
jecxz
jmp
mov
mov
sbb
addb
inc
pop
movsl
or
movsl
pop
pusha
push
call
or
pusha
xchg
pop
cmp
shll
shl
fistl
mov
mov
pop
push
inc
sub
fcomps
test
push
bswap
adcb
movsl
nop
push
shlb
test
xchg
jp
in
cmc
push
ret
jmp
pop
aaa
data16
cwtl
pop
jge
push
clc
jp
jmp
ret
push
push
ficompl
pop
insb
cmp
call
cld
push
push
dec
stc
adc
in
out
jo
dec
hlt
sar
pop
mov
fcmovbe
pop
fs
test
lea
and
cmp
test
push
jg
icebp
pop
jns
cs
push
mov
pop
adc
stc
cwtl
rcrl
push
popf
push
inc
adc
xchg
inc
notl
or
mov
outsl
ds
testl
xor
shlb
nop
enter
outsb
sub
stc
aas
icebp
aam
sbb
add
mov
mov
sbb
mov
lea
pop
bound
iret
lods
jmp
fsubrl
and
addr16
or
loope
fsubr
and
mov
mov
mov
pop
repz
push
or
cli
stc
inc
jae
into
ja
inc
mov
mov
scas
pop
sub
out
insl
out
mov
push
aas
lods
push
adc
xchg
aas
leave
in
dec
popf
xor
inc
or
or
data16
jbe
pop
sbb
add
ud1
stc
jmp
cwtl
insb
push
stos
pop
jae
dec
cltd
jmp
push
mov
stc
fwait
and
addb
add
mov
paddw
mov
ds
jle
xorb
and
adc
xlat
and
inc
or
mov
in
pop
mov
sbb
xchg
dec
ds
imull
fnstsw
out
adc
mov
pop
push
inc
pop
dec
imul
sbb
cmp
repnz
sti
mov
mov
adc
in
mov
insb
sahf
sbb
out
push
aas
jmp
fsubs
fistpl
cmpsb
pop
pop
mov
mov
mov
sahf
sbb
test
sbb
cmp
hlt
gs
sub
jno
cmp
jbe
test
or
pop
pop
add
inc
fs
stos
xlat
pop
aad
js
or
pop
mov
adc
dec
popf
sub
call
out
mov
jecxz
repz
je
jp
scas
ret
out
mov
das
pushf
push
mov
push
mov
sub
mov
ret
inc
loop
clc
and
fistpll
rorb
lea
jp
mov
mov
es
push
pop
out
hlt
mov
sti
adc
adc
popf
js
or
cmp
and
mov
mov
mov
mov
cmpsb
int
fcmovnbe
inc
lods
or
adc
dec
addl
jb
or
iret
stos
out
cli
mov
sbb
dec
enter
xchg
xchg
testl
shlb
sub
xor
mov
cld
popa
adc
mov
leave
cmp
and
enter
and
int
and
sbb
jb
fs
ljmp
inc
adc
js
mov
add
dec
aas
cs
adc
xchg
ja
or
arpl
push
add
iret
in
je
jg
sub
setge
ds
cmp
fcoml
xor
lock
xlat
jmp
jp
loope
or
enter
cmpsb
jle
jecxz,pn
adc
pop
testb
and
std
orb
cmp
leave
test
ficomps
addr16
stos
push
sbb
push
or
mov
fsubp
or
push
cmp
push
xchg
mov
add
cmp
adc
pop
aaa
ret
cli
and
push
dec
enter
mov
in
addr16
pop
movsb
xchg
test
jmp
inc
adcb
sub
imul
xor
mov
jnp
push
jno
mov
outsb
adc
fs
push
stos
jno
sahf
lret
mov
fwait
hlt
inc
in
pop
in
dec
aam
addr16
mov
nop
outsl
mov
cwtl
cli
stos
dec
inc
inc
pop
stos
push
mov
ja
mov
adc
dec
sub
inc
mov
sbb
inc
cltd
ret
js
xlat
aad
xchg
mov
test
jp
imul
or
sbb
daa
pop
icebp
push
mov
scas
mov
loopne
push
mov
in
lahf
sbb
popf
xor
sub
xchg
les
push
cs
jnp
xchg
adc
sbb
dec
dec
enter
xchg
icebp
adc
stc
xor
jl
mov
push
sahf
stos
insl
sbb
ds
xor
mov
inc
int3
aad
mov
mov
dec
sbb
aaa
cltd
jp
xlat
xor
xchg
test
mov
mov
cmp
inc
dec
daa
call
inc
fdivr
xor
mov
mov
cmp
mov
push
sarl
aam
cs
mov
sub
mov
sbb
jnp
insb
dec
jl
scas
sub
dec
in
into
je
adc
adc
xchg
lods
clc
bound
cmp
cli
lahf
xchg
xor
push
or
sbb
int3
mov
pop
xchg
or
orb
mov
pop
xchg
cltd
lods
inc
mov
or
dec
dec
or
mov
dec
enter
and
jecxz
repz
or
pop
sbb
out
pop
jbe
sub
subl
pop
popf
ficompl
sbb
pusha
int3
or
stc
data16
sbb
leave
aad
xor
inc
inc
jmp
xor
mov
daa
fisttpl
lcall
clc
sbb
pushf
ja
out
xlat
push
test
cltd
jbe
imul
dec
scas
lcall
fcoml
pop
lea
jp
insl
pop
jge
mov
xor
repnz
outsl
jg
nop
aad
inc
sub
xlat
roll
lock
push
fcompl
xchg
mov
pop
aaa
fstps
jecxz
in
or
sbb
outsb
cmp
imul
scas
gs
sbb
sbb
or
outsl
outsb
mov
xor
fwait
jbe
push
mov
pop
fs
sbb
sarb
add
pop
cs
sbb
jne
nop
mov
sub
mov
jge
imul
icebp
xchg
and
hlt
test
and
rorb
inc
bt
adc
mov
addl
adc
fbstp
xchg
mov
loope
out
jg
xchg
xchg
fadds
add
adc
xorb
xchg
inc
shll
or
test
push
jne
mov
ja
push
and
test
push
popa
loope
jp
lods
push
xor
adc
jo
or
neg
dec
lret
es
cmp
jo
adc
cmpl
loope
mov
out
shl
repnz
adc
je
cmp
pop
orb
lods
xor
push
cmp
out
cmc
inc
mov
aaa
xchg
aaa
mov
gs
jo
jl
push
xor
out
cmp
cmp
xchg
lds
inc
loop
scas
push
sub
dec
and
xor
out
add
scas
sub
xchg
fisttpl
orb
cmp
insb
leave
pop
lea
cmp
cmpsl
and
repnz
loopne
inc
into
test
dec
dec
push
adc
mov
in
or
mov
popa
push
pop
xor
sti
push
js
mov
add
enter
sbb
enter
addb
imul
hlt
mov
cmp
out
push
push
mov
sbb
imul
mov
add
xor
out
push
adc
xor
in
xchg
lds
addr16
push
push
push
les
sub
add
or
or
pop
add
mov
jb
scas
or
lods
stos
mov
loope
push
add
mov
fnsave
idivl
imul
pop
sbb
or
aad
or
mov
ss
fstps
notl
clc
xchg
out
dec
les
pop
test
in
push
xchg
mov
test
scas
leave
daa
inc
mov
jae
or
pop
inc
rep
arpl
inc
movsb
es
mov
pop
adc
mov
dec
mov
jp
repnz
sub
frstor
sbb
jp
ficoms
xchg
ror
pop
mov
pop
dec
xchg
neg
addr16
sub
pop
pop
xor
xlat
addr16
add
les
sahf
mov
addr16
out
mov
fisttpll
sbb
scas
nop
cmp
filds
mov
pop
jg
xchg
mov
sub
jns
xchg
pop
popa
shl
lar
lods
popa
mov
xlat
insl
popa
bswap
outsl
andl
jp
mov
sbb
lods
cld
mov
mov
popw
cld
inc
test
mov
adc
out
pushf
dec
mov
cmpsl
imul
popf
fstpl
int
jmp
inc
idivb
lret
imul
aas
xor
push
fucomp
sbb
add
imul
adcb
imul
sahf
push
data16
xchg
xor
icebp
aad
or
repz
sbb
sahf
mov
pushf
clc
mov
mov
pushf
insb
pop
xor
aam
notl
pop
rcrb
mov
mov
xchg
adcl
enter
nop
push
jnp
fcmovu
dec
inc
imul
or
xchg
popa
adc
push
or
jne
fisttpll
es
xchg
and
inc
cmp
shrl
xchg
push
std
lcall
or
sub
decb
dec
mov
ret
sbb
insb
dec
jge
adc
leave
push
divb
and
mov
push
dec
jo
lahf
inc
dec
imul
scas
mov
sti
mov
pop
inc
bound
push
cltd
fs
push
or
xchg
cld
fwait
call
ja
mov
cmpl
jp
pop
xor
jnp
cmpsb
ja
and
aaa
dec
inc
push
js
cs
pop
inc
mov
cwtl
mov
lock
into
mov
mov
movsl
cmp
in
sbb
cli
sub
xor
das
ret
dec
sbb
mov
push
mov
add
nop
out
pusha
push
pop
cmpsl
mov
jnp
adc
ja
xchg
shlb
sbb
xchg
lret
inc
sub
bound
adc
je
aam
adc
jge
icebp
inc
jp
push
push
inc
aad
xor
or
jae
mov
mov
push
pop
mov
addr16
test
sbb
out
in
dec
sbb
aad
adc
mov
mov
xor
in
lock
ret
jno
xchg
outsb
jno
mov
xchg
or
xchg
nop
sub
ficoms
fcomip
push
sbb
or
jb
shlb
loope
mov
std
fcomps
or
jg
sub
jns
ljmp
pop
cwtl
stos
adcb
je
cltd
ljmp
lods
jle
jge
cmc
xchg
pop
iretw
mov
out
negb
add
nop
or
adc
cltd
inc
mov
ftst
add
aaa
lea
cmpsb
sbb
je
out
in
add
cmpb
push
cmp
cmc
mov
mov
dec
xchg
ljmp
or
subb
cmp
in
sti
aas
out
jo
rclb
cmp
fucomip
jle
jo
sbb
or
mov
mov
ror
je
cs
xor
bound
ficoml
stos
pusha
xlat
incb
mov
ss
inc
add
mov
out
iret
push
pop
xchg
push
dec
push
push
cmp
adc
pop
mov
xchg
arpl
adc
xor
lock
and
inc
pop
dec
cmpsl
lea
lret
ret
lods
jmp
push
stc
js
stc
mov
out
xor
and
adc
mov
std
inc
lret
add
sahf
jbe
push
add
addb
push
and
jae
dec
test
aam
ret
add
xchg
scas
repz
pop
pop
and
fcoms
xor
je
std
add
orl
adcl
arpl
dec
dec
xor
and
pop
dec
outsl
push
pop
or
and
push
mov
add
or
repnz
sub
outsb
lods
mov
cs
dec
jmp
pop
pop
add
int3
cmp
iret
popw
push
mov
add
call
out
mov
pop
push
dec
nop
mull
js
loop
add
xchg
ficoml
cmpsb
outsb
or
push
btl
je
sbb
cmp
and
jno
or
adc
xlat
sahf
insl
mov
mov
lds
sbb
fistpll
dec
movb
addr16
and
cmp
cmp
ljmp
jbe
nop
repnz
lahf
lods
ja
hlt
mov
push
or
dec
or
mov
mov
push
pop
popa
sub
dec
sahf
add
orl
dec
mov
mov
stos
cmp
les
clc
push
sub
lret
push
dec
adc
push
push
mov
push
sti
xor
outsb
mov
shlb
add
adc
mov
cmp
dec
orb
test
out
xor
push
ret
lods
jo
mov
cltd
int
cwtl
mov
leave
add
out
ja
lods
xchg
cmpsl
dec
faddl
xchg
cmpsb
xchg
loopne
sub
mov
add
mov
push
fidivrs
adc
mov
test
sbb
fcoml
sbb
mov
daa
push
shrb
out
adc
test
popf
fcomi
aam
ss
fwait
adc
dec
fucomi
jmp
xor
push
pop
cmp
mov
cld
dec
addr16
cmpsb
push
enter
pushf
stc
mov
mov
fldenv
outsb
cwtl
sbb
sub
xor
mov
arpl
dec
push
jp
or
mov
xchg
pop
jns
cmp
insb
out
adc
ljmp
dec
out
shld
mov
arpl
adc
xor
and
pop
add
or
fcompl
int
sub
pop
test
int
jp
mov
jnp
sub
icebp
frstor
pushf
cmc
mov
fcomps
xchg
pop
outsb
jmp
cld
stc
ret
mov
cltd
mov
and
cli
cltd
jg
insl
push
pop
pop
mov
mov
std
lock
mov
pop
xchg
xchg
repz
or
xchg
dec
jo
test
ljmp
int
xor
xchg
outsl
lea
ret
scas
mov
leave
bnd
call
shrb
dec
cmp
xor
iret
test
jbe
xor
lret
or
inc
out
pushf
sbb
xor
daa
and
jle
pop
mov
inc
loopne
test
mov
ss
loop
jbe
fiaddl
xor
aam
xor
mov
aam
addl
adc
jg
stos
rcll
jns
jb
outsl
imul
pop
js
sti
idivl
stc
aad
cltd
repnz
dec
pop
sub
cli
addr16
lahf
xor
nop
out
fistl
pushf
sti
movups
or
aaa
sbb
mov
add
pop
iret
shlb
imull
inc
mov
push
add
ficoml
mov
out
loope
outsb
gs
and
mov
sahf
add
rol
popf
or
xchg
pusha
test
mov
mov
in
cmc
and
inc
inc
and
pusha
jmp
fidivrs
cs
out
enter
mov
addb
mov
pop
sbb
mov
mov
mov
or
stc
notl
mov
fcoms
int
inc
incl
nop
and
addr16
lahf
pop
fmulp
or
xor
in
sub
repz
ret
cld
jl
test
mov
pop
popl
cmpsb
rcll
fisttpll
and
daa
mov
or
sbb
sub
sti
xchg
in
mov
mov
sub
js
inc
mov
lret
adc
cli
pop
movsb
jb
mov
jnp
jg
xor
add
ret
scas
mov
fisubl
insl
inc
push
or
jg
enter
adc
pop
mov
cmpsb
std
add
sbb
or
xor
scas
push
adcl
cmp
pop
mov
ret
xchg
and
pop
movsb
or
jmp
mov
lds
ret
sub
xchg
cld
push
call
out
int
inc
iret
fwait
shll
adc
repz
dec
in
dec
fwait
inc
pop
pop
stos
lcall
jo
lret
in
mov
roll
push
push
fdivrp
mov
cli
dec
xor
sub
shrl
mov
push
sub
cwtl
outsb
sub
jle
in
cwtl
in
lret
jecxz
scas
sbb
cmp
pop
sbb
lahf
stos
jno
aad
int3
xchg
mov
in
sarl
pop
mov
xor
xor
cmpb
mov
pop
in
lea
inc
xchg
add
pop
adc
fwait
lods
loope
stos
mov
xlat
ja
es
std
in
iret
out
xor
sub
ret
mov
bound
leave
int
jecxz
sti
pop
dec
mov
xchg
aad
or
sbb
inc
add
inc
sbb
stos
push
jns
dec
jo
es
mov
leave
mov
lret
mov
xor
dec
add
jge
xchg
leave
pop
adc
add
insl
cmp
mov
sub
rcll
pop
xchg
into
out
add
jg
hlt
pop
and
sub
enter
dec
mov
ljmp
xchg
fisttps
sbb
inc
adc
mov
or
cli
outsb
sub
insl
dec
out
add
imul
pop
dec
andl
stos
repnz
pop
lret
bound
ljmp
jg
dec
mov
scas
cmp
sbb
repz
and
dec
mov
fnstsw
mov
loopne
lea
in
mov
pop
cmc
daa
mov
jmp
hlt
or
lcall
inc
mov
stos
jp
cwtl
dec
jb
enter
cmp
mov
jle
rcll
cmp
add
pop
fstpl
pop
xor
int
add
xor
adc
cmp
ss
xchg
out
mov
das
jecxz
and
xchg
jno
das
cli
pop
and
stos
mov
adc
shrb
pop
xor
inc
insb
jo
ds
testl
movsb
mov
xorl
movsb
xcrypt-ecb
cmpsl
mov
sub
or
fisttpll
jecxz
aad
fmulp
xor
lods
jp
dec
int
dec
into
mov
inc
stc
push
and
mov
imul
loope
out
out
inc
leave
mov
icebp
mov
mov
arpl
aad
and
std
jbe
in
int3
mov
lcall
cwtl
std
test
xchg
notb
mov
mov
dec
repnz
call
out
xorl
daa
cs
or
dec
jns
imul
std
addr16
std
stc
outsl
push
dec
mov
in
sub
push
xchg
mov
in
icebp
ret
dec
stc
push
aaa
fsubl
mov
xchg
in
daa
sahf
loop
push
push
mov
push
mov
xchg
mov
cld
aaa
push
in
fiadds
xchg
lret
cmp
cmp
dec
mov
cmc
inc
insb
jae
rclb
xchg
pop
fsubl
push
sbb
fwait
insb
subb
jbe
jne
push
gs
adc
rcrl
cmp
dec
lods
aas
push
xor
rcl
sub
sub
in
fwait
push
insb
mov
stc
stos
cmp
sub
sbb
bound
lods
and
push
cli
movsb
rcrl
pop
dec
jae
dec
inc
mov
mov
lock
cmp
jae
and
cmc
sub
mov
call
cli
cmp
shlb
mov
mov
ljmp
lahf
cmp
mov
mov
cmp
cli
in
rcrl
xor
jno
sub
adc
test
jmp
rorb
loope
pop
sarb
push
add
mov
pop
inc
sbb
lret
xchg
dec
cmp
ss
xor
fcoml
mov
mov
xor
adc
movsl
test
push
jecxz
data16
std
jae
jl
bound
pop
pop
fimull
mov
mov
inc
iret
push
iret
sbb
dec
subl
loope
loopne
outsl
dec
cli
dec
or
leave
add
and
push
mov
int
xchg
cwtl
daa
ficomps
int
daa
lcall
mov
adc
lret
pop
rcrb
pusha
aad
push
mov
nop
rcl
test
xchg
inc
call
jle
dec
outsb
dec
mov
out
jp
xchg
pop
int
out
imul
inc
add
push
je
add
sbb
pop
sbb
push
xor
mov
adc
and
adc
inc
add
pop
scas
fmul
idivl
je
rcrb
gs
mov
jp
imul
push
dec
pop
les
pop
out
pusha
or
dec
or
cwtl
sub
outsl
mov
ljmp
outsb
pusha
dec
outsb
xor
and
in
out
xor
icebp
fistps
jo
sub
mov
fiaddl
clc
in
flds
aas
test
mov
or
enter
loop
insb
inc
sbb
sarl
xor
adc
fisttpl
mov
imulb
lret
push
xchg
sbb
inc
cld
addr16
jne
lret
sbbl
loope
pop
jmp
jbe
and
or
cmp
or
xor
sub
xor
fdivl
push
xchg
addr16
push
inc
jmp
in
mov
in
push
jle
cmpsl
call
lods
jnp
mov
dec
stos
inc
push
push
repz
lods
jmp
adc
cmp
xor
dec
or
scas
mov
pop
inc
jl
push
mov
mov
test
rcr
and
pop
jne
mov
std
in
mov
imul
dec
mov
sub
push
inc
and
mov
outsl
rclb
push
adc
inc
movsb
mov
add
mov
mov
jbe
mov
pop
xor
pop
inc
mov
out
lahf
aad
das
ljmp
mov
sub
inc
out
repz
out
pop
push
jp
push
dec
inc
pop
ficompl
icebp
and
pop
push
cmp
into
mov
jnp
mov
cmp
bound
shll
les
push
adc
fldcw
fwait
or
popa
mov
pop
loop
sar
jae
stc
xor
inc
js
hlt
clc
jle
testl
xor
sub
popf
jae
push
and
int
js
fwait
outsb
ret
inc
fsubl
fidivl
js
jbe
jnp
xor
movsb
sub
test
xchg
les
ja
inc
jmp
sub
lret
fimuls
imul
lods
adc
mov
push
and
push
inc
mov
adc
test
jno
adc
jno
mov
and
jmp
push
pop
pushf
roll
bound
leave
nop
out
ret
popf
movl
stc
inc
fcmovu
pop
imul
stc
mov
gs
jns
in
mov
loope
xchg
rcrl
sub
xor
cmp
data16
inc
ljmp
insl
fisubrs
jns
adc
outsl
jg
and
shll
sbb
jp
cmp
popf
sbb
ficoms
aad
push
notb
xor
push
sbb
lea
ss
xchg
stos
sub
sub
aaa
dec
jecxz
js
adc
push
inc
in
sar
cmpl
adc
imul
hlt
sbb
jnp
cmp
loopne
cmp
sub
or
aaa
imul
cld
icebp
repnz
or
call
enter
sub
xchg
sub
and
jl
xchg
cmpsb
push
xchg
fs
rol
ret
hlt
sub
in
cmp
hlt
mov
cwtl
aas
pop
ficomps
les
sbb
xchg
fistl
push
dec
pop
in
das
adc
mov
adc
shll
mov
pop
inc
mov
push
shlb
jp
xchg
sub
icebp
mov
mov
ss
leave
cwtl
pop
inc
fldenv
cmpsb
inc
xchg
jbe
out
xchg
xor
mov
mov
jl
in
mov
fdivs
mov
xor
add
test
add
dec
daa
jnp
mulb
popa
dec
jle
push
bound
or
test
push
lods
inc
inc
pusha
je
sti
test
pop
inc
movsb
mov
dec
xor
inc
jns
lret
idivl
arpl
les
aad
mov
add
adc
ds
jbe
cltd
loop
xor
popf
insb
shl
test
ds
mov
xor
and
xor
imul
in
xchg
stos
sbb
into
xlat
inc
test
xchg
adc
pop
cmpsl
and
sbb
ss
rclb
loope
push
addr16
lods
cmc
fcmovnb
push
adc
push
ds
les
enter
jnp
jo
rol
jo
lret
mov
iret
inc
roll
mov
sarb
int
sahf
xchg
xchg
push
dec
cltd
int
lcall
dec
xchg
into
adc
inc
push
shll
jae
push
out
mov
ljmp
aad
fwait
jae
add
sub
xorl
push
scas
hlt
rclb
in
mov
adc
push
or
js
popa
es
inc
jge
lea
lret
cmpsl
and
sub
xor
xchg
arpl
xchg
movsb
outsl
imul
testl
and
jecxz
jecxz
pop
xchg
pop
rcrl
mov
in
ja
xchg
iret
outsb
add
xlat
xor
jg
pop
mov
mov
pop
xchg
xchg
mov
inc
test
sbb
scas
mov
add
popf
jo
das
cld
pop
or
cmpsl
inc
aad
loope
sub
jno
dec
mov
mov
adcb
mov
imul
scas
lods
repnz
lock
and
and
pusha
outsb
mov
push
ret
fcompl
add
sub
ds
mov
inc
pop
pop
rorl
push
xchg
cmpl
loopne
popa
mov
inc
call
fs
sbb
pop
mov
push
adc
push
in
es
loope
sub
mov
flds
fs
pushf
and
roll
jne
xlat
aam
stos
xchg
xchg
sub
fwait
ljmp
jb
sbb
mov
push
xor
mov
repz
dec
adc
adc
insl
negl
aas
lahf
mov
enter
mov
sub
out
loopne
lea
es
ja
push
add
loope
sub
mov
out
fwait
pop
cs
std
sbb
fistpll
gs
aad
sbb
clc
rcrb
fs
test
xor
cmp
xor
mov
add
xor
aaa
call
std
imull
cltd
adc
repz
outsl
sbb
sbb
xchg
and
inc
fidivl
sbb
mov
mov
cmp
pusha
push
pushl
leave
xchg
jnp
loopne
xchg
cs
loopne
sbb
jmp
and
int
aam
mov
and
xchg
lods
loop
incb
int
ja
dec
iret
aam
sub
pop
sahf
sbbb
jae
mov
mov
rcll
pushf
push
outsl
lods
mov
sahf
pop
icebp
and
loopne
or
ret
xor
add
scas
rorb
mov
or
pop
sub
push
jns
mov
lahf
mov
mov
ja
or
mov
bound
or
nop
mov
scas
fs
dec
jo
lods
push
xlat
push
cmp
nop
ljmp
inc
sub
aad
push
jl
mov
fists
into
and
sub
sbb
in
lahf
cmpsb
lods
scas
in
mov
test
shrb
icebp
jecxz
inc
and
out
addr16
sub
jns
add
jmp
mov
lcall
jg
mov
outsb
sbb
out
ret
lods
add
pop
jge
mov
inc
stos
aas
inc
negl
bound
arpl
loope
mov
mov
insl
imul
cli
mov
fisttpl
clc
aas
mov
push
lret
outsb
jl
inc
cmp
ret
inc
subl
pushf
dec
mov
mov
pop
stc
push
inc
out
cmc
dec
and
jp
cli
jno
sub
push
mov
fstpt
push
push
add
scas
dec
mov
and
mov
push
dec
inc
xchg
push
inc
cmp
inc
mov
sahf
adc
inc
sbb
loope
imul
push
xchg
adc
popf
pushf
mov
cmp
add
aas
neg
icebp
sub
or
cs
inc
lock
sbb
ja
cmp
dec
jns
repnz
dec
loope
les
cld
sbb
xchg
jle
in
jno
stc
mov
mov
arpl
cmpsl
or
fadds
hlt
idivb
adc
or
dec
insl
dec
ljmp
fsubrs
jecxz
sub
loop
inc
jno
pop
mov
sbb
dec
or
cmp
jmp
push
ljmp
adc
lret
jnp
xor
mov
int
mov
xor
jle
pop
mov
je
pusha
pop
xor
mov
mov
sbb
xchg
and
hlt
lock
in
and
popf
pop
cmp
pushf
inc
popf
in
xchg
cmc
cwtl
rcr
cltd
out
cmp
xor
sbb
mov
dec
xchg
outsb
aam
dec
rcrb
int
std
ret
jbe
dec
sbb
out
ds
adc
outsb
out
pop
insl
pushl
movsb
xchg
mov
dec
inc
push
add
sub
shlb
mov
xchg
mov
ret
cmp
inc
cmp
cltd
cmp
xor
mov
dec
aaa
xor
fwait
das
mov
pusha
cmc
cmp
lret
pop
pop
add
shr
sti
xchg
into
push
int
fstp
or
adc
inc
ljmp
rclb
mov
insb
lret
xchg
mov
scas
stos
mov
js
outsb
cmpsl
jp
sbb
mov
paddsw
sbb
std
out
and
xor
call
lock
add
sbb
pop
fdiv
xchg
scas
aas
mov
xchg
push
ljmp
sub
ret
push
rcl
xchg
int3
pop
or
push
orl
stos
sub
imul
sbb
jle
inc
pop
and
jp
jae
test
sbb
inc
fwait
lods
adc
shr
jecxz
scas
mov
mov
add
insb
push
cmp
xor
mov
repz
stc
mov
cmovs
faddl
inc
add
pop
sbb
lock
ret
loopne
jns
mov
or
ret
fcmovne
mov
dec
insw
sbb
test
cmp
dec
aad
ja
fs
pop
xor
scas
jge
adc
adc
clc
and
push
iret
xor
mov
push
hlt
clc
js
test
sub
lret
leave
inc
iret
mov
mov
mov
cs
hlt
andb
repz
inc
sub
dec
pop
inc
fldt
xor
xchg
xchg
imul
inc
movsb
inc
sbb
std
push
sbb
rolb
test
adc
mov
jl
mov
int3
ds
jo
xchg
and
insb
cli
push
subl
dec
dec
cld
js
xchg
ds
out
sub
inc
fnstenv
cmp
pop
cmc
jbe
push
dec
push
mov
mov
fnstcw
xchg
xchg
cmp
lcall
dec
mov
adc
lods
cld
clc
out
add
nop
stos
and
fdiv
test
pushf
jo
ret
mov
popa
or
mov
shrb
xor
inc
movsl
xchg
les
lock
sbb
xor
stos
mov
sbb
pop
outsl
jnp
or
int3
dec
into
lea
out
mov
mov
mov
je
movsb
pop
cld
mov
xor
xor
adc
cmp
out
lcall
out
fcmovnu
mov
fcomp
and
test
xchg
pop
xchg
cwtl
jg
stos
lea
cmpl
adc
push
ljmp
lods
add
fs
pop
arpl
mov
sub
push
int
sbb
stc
in
sub
fs
add
movsb
and
fidivs
notl
mov
movsb
mov
lea
rcll
jns
xlat
push
bound
je
push
insb
jnp
mov
sub
mov
dec
out
les
push
repz
int
enter
jne
xchg
jns
jle
sbb
xchg
daa
into
jle
addr16
fcoms
sbb
or
push
sahf
sub
sti
in
push
jne
and
mov
jle
adc
lahf
xor
cmp
add
jbe
mov
std
rcl
popa
push
lock
and
addl
xchg
idivb
daa
add
shrl
movsl
stos
stos
and
xor
sbb
int
sbb
sub
and
cmp
aad
je
psubsb
adc
inc
jb
inc
jle
arpl
cmp
test
mov
pop
sti
sub
xchg
mov
or
inc
movsb
lea
aas
ss
jmp
sbb
xor
js
xor
test
cmp
enter
sub
jle
sbb
push
xor
xchg
sub
pop
dec
mov
xorb
xor
add
stos
enter
mov
test
dec
cmpb
dec
push
add
push
dec
xchg
jns
addl
push
push
mov
and
popf
nop
lahf
lods
or
lods
sahf
ljmp
add
add
add
cld
pop
inc
add
add
add
add
add
inc
add
add
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
je
inc
add
add
add
inc
add
add
add
inc
add
add
fcoml
add
push
inc
add
add
and
inc
add
add
adc
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
inc
mov
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
push
pop
inc
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
rolb
add
call
add
add
add
orb
add
sbb
add
xor
add
add
adc
add
add
push
add
addb
add
push
add
add
add
add
add
add
add
add
add
addb
add
loopne
add
clc
add
orb
add
adc
add
sub
add
inc
add
orb
add
add
jo
add
mov
add
mov
add
add
add
add
add
rolb
add
add
add
add
add
add
addb
add
pop
add
add
add
addb
add
insl
add
add
add
addb
add
imul
add
add
subb
dec
add
addb
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
call
add
js
add
test
add
and
add
push
add
add
add
add
and
add
add
add
xor
add
test
add
fdivrs
add
push
add
add
add
add
add
add
add
add
inc
add
test
add
jo
add
test
add
sbb
push
add
add
add
add
and
add
add
add
sub
add
rclb
add
mov
add
dec
add
add
popf
add
ljmp
add
add
add
sahf
add
sub
add
add
add
inc
inc
add
jbe
add
cmp
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
ja
ja
ja
ja
ja
ja
ja
ja
js
mov
mov
mov
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
ja
ja
ja
ja
ja
ja
ja
jo
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
add
add
jo
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
mov
mov
mov
ja
ja
ja
ja
ja
ja
jo
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
sub
add
adc
add
and
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
stos
stos
stos
stos
stos
stos
stos
stos
ja
ja
ja
ja
js
pushl
pushl
pushl
pushl
pushl
pushl
pushl
ja
ja
ja
jo
inc
inc
inc
lock
inc
inc
inc
inc
inc
inc
jo
mov
jo
ja
ja
ja
ja
stos
stos
stos
stos
stos
stos
stos
sub
add
xor
add
pusha
add
add
add
add
mov
jnp
xchg
add
add
add
push
daa
add
dec
and
cmpsl
push
and
cmpsl
push
and
add
push
add
inc
add
and
stos
push
and
test
and
test
and
xchg
imul
mov
push
add
pop
and
lods
pop
and
mov
pop
sbb
mov
sbb
mov
sbb
mov
sbb
add
pusha
sbb
mov
adc
les
add
fs
mov
insb
or
lret
imul
leave
imul
add
imul
add
mov
mov
bound
add
je
add
jae
add
pop
add
stos
pop
add
mov
jb
add
jbe
add
jo
add
jno
add
outsl
or
shll
add
js
add
outsb
or
mov
ja
add
outsl
adc
je
add
jns
add
jge
add
mov
enter
ljmp
add
movsb
push
add
mov
addl
shlb
add
arpl
add
arpl
add
je
add
jne
add
je
add
jb
add
push
add
add
mov
pop
add
stos
pop
add
stos
pop
add
fnstenv
add
jbe
add
je
add
jne
add
je
add
add
stos
pop
add
fnstenv
add
jne
add
jbe
add
jne
add
jno
add
outsb
add
lret
add
jbe
add
ja
add
jne
add
jbe
add
jne
add
ja
add
jbe
add
ja
add
ja
add
jbe
add
ja
add
js
add
js
add
jns
add
jp
add
jp
add
jp
add
jnp
add
jns
add
ja
add
sbbb
les
ret
add
nop
daa
add
nop
sub
jmp
sub
jmp
sub
in
xchg
sub
add
xchg
cs
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
fisttpl
add
cwtl
aaa
add
lcall
in
cltd
cmp
in
lcall
in
pushf
ds
pushf
cmp
add
popf
aas
add
sahf
inc
add
lahf
inc
add
lahf
inc
add
mov
dec
add
mov
push
add
test
movl
in
incl
lock
incl
hlt
incl
clc
incl
stc
incl
cli
incl
sti
incl
cld
incl
std
incl
incl
inc
jo
add
mov
incl
jae
jae
jo
jo
imul
add
pusha
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
stos
lods
stos
stos
stos
stos
test
test
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
stos
cmpsl
or
stos
lods
lods
lods
lods
lods
stos
stos
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
movsbl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
sbb
lods
lods
lods
lods
scas
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
mov
scas
lods
scas
scas
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
sbb
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
sbb
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
and
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
and
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
and
mov
lods
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
lods
mov
lods
mov
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
es
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
aas
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
inc
mov
xor
xor
pop
pop
insl
pop
insl
insl
xor
xor
xor
pop
pop
pop
xor
pop
pop
xor
mov
pop
das
push
cs
xor
xor
push
push
xor
das
pop
push
push
xor
xor
xor
xor
xor
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
addr16
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
cltd
cltd
xchg
mov
test
xchg
xchg
sub
mov
jns
dec
dec
dec
dec
dec
dec
push
bound
jb
jb
js
js
js
js
jb
imul
dec
dec
dec
dec
push
jne
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
jle
xchg
add
add
pop
push
dec
add
dec
and
mov
dec
and
cmpsb
push
sub
movsb
push
sub
js
xor
jle
xor
ja
xor
ja
xor
jb
add
xor
mov
add
add
dec
add
dec
and
movsb
dec
and
mov
dec
and
mov
dec
xor
jo
add
dec
add
insb
inc
add
xchg
jae
xchg
jp
mov
inc
add
mov
aaa
add
xchg
jno
lret
add
dec
add
pop
add
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
sahf
inc
add
mov
insb
add
outsb
add
xchg
jae
pop
push
dec
add
dec
add
cmpsb
dec
add
movsb
dec
add
jae
add
jb
add
jo
add
pushf
push
rorb
add
lcall
pop
push
dec
add
dec
add
mov
add
ja
add
jbe
add
sahf
push
add
imul
add
jnp
add
jp
add
js
add
mov
data16
insl
add
shrl
add
insb
add
shrl
add
outsb
add
shrl
add
outsb
add
iret
push
add
insl
add
lret
imul
shll
add
jge
add
jg
add
xchg
add
mov
add
xchg
aaa
add
popf
aas
add
mov
cmp
in
inc
add
mov
bound
out
arpl
loop
bound
loopne
bound
iret
outsl
add
mov
jno
add
jb
add
js
add
jg
add
orl
jecxz
or
add
jp
add
jnp
add
jp
add
jne
add
adcb
faddl
push
add
adcl
add
adcb
faddl
sbb
fldl
sbb
faddl
add
test
in
mov
add
xchg
add
nop
and
fldl
es
xchg
daa
add
xchg
sub
lock
sub
out
xchg
sub
add
xchg
das
add
xchg
das
add
cltd
xor
lock
xor
cmc
sahf
xor
add
lcall
lock
aaa
add
fwait
cmp
lock
cmp
lock
cmp
add
lea
add
cmpsl
push
add
scas
jo
test
sahf
add
pop
add
shrb
add
iret
mov
fmul
mov
fmul
mov
int
add
shll
add
sarl
add
sarl
add
aad
add
fadd
add
add
incl
stc
incl
cli
incl
sti
incl
cld
incl
std
incl
incl
cs
add
incl
addb
add
pusha
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
sbb
es
adc
push
adc
adc
push
add
add
add
add
add
add
adc
adc
mov
sbb
mov
mov
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aas
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ds
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
scas
mov
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
dec
mov
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
scas
mov
dec
inc
mov
dec
mov
scas
scas
scas
mov
mov
mov
mov
mov
scas
mov
mov
mov
mov
scas
mov
dec
xor
mov
mov
mov
mov
mov
mov
mov
scas
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
test
cmpsl
cmpsl
cmpsb
cmpsl
cmpsl
cmpsl
cmpsl
test
test
cmpsb
cmpsb
test
mov
mov
mov
dec
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
dec
and
inc
mov
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
das
mov
imul
xchg
nop
cltd
mov
mov
nop
test
insl
popf
mov
xchg
jns
jle
addl
jno
outsl
outsb
pushf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
cmc
repz
dec
xor
mov
push
aas
add
xor
xchg
pop
cmp
test
add
mov
add
mov
inc
add
mov
repnz
inc
add
gs
add
mov
popf
add
ret
pushf
add
mov
or
mov
arpl
mov
arpl
add
jae
add
js
add
xchg
add
mov
repnz
test
scas
xchg
js
in
and
out
es
nop
sub
out
sub
out
sub
out
sub
out
sub
add
xchg
das
add
xchg
xor
jecxz
xor
in
ss
lcall
out
leave
add
add
cmc
repnz
fidivrl
add
fst
add
fmul
add
fcmove
add
loopne
add
fst
add
std
add
incb
cld
incb
cli
incl
sti
incl
cld
incl
std
incl
incl
incl
xchg
xchg
xchg
add
jg
jle
jle
jge
jge
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
pop
pop
pop
pop
pop
pop
pop
add
push
dec
or
adc
cmp
adc
adc
adc
add
or
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
or
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
pop
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmovg
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
dec
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
inc
ds
aaa
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pushl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pushl
mov
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
call
push
daa
jmp
push
daa
jmp
push
daa
incl
add
cmpsl
add
add
mov
push
jmp
daa
jmp
jmp
jmp
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
incl
add
cmpsl
add
add
movsl
push
es
cld
out
clc
clc
clc
stc
clc
clc
clc
clc
in
push
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
push
clc
cld
out
movsl
push
incl
add
cmpsl
add
add
cmpsl
push
and
clc
clc
stc
stc
stc
stc
stc
clc
clc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
jmp
add
cmpsl
add
add
test
and
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
ljmp
add
cmpsl
add
add
stos
push
and
cli
stc
stc
cli
stc
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
ljmp
add
cmpsl
add
add
lods
push
and
cli
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
ljmp
add
cmpsl
add
add
scas
pop
pop
sti
cli
cli
stc
cli
cli
sti
sti
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cli
ljmp
add
cmpsl
add
add
mov
push
sti
sti
sti
stc
sti
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cli
pushl
add
cmpsl
add
add
mov
sbb
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
pushl
add
cmpsl
add
add
mov
sbb
cld
sti
cld
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
pushl
add
cmpsl
add
add
mov
cld
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
mov
add
cmpsl
add
add
mov
std
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
shlb
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
fs
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
imul
test
enter
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
imul
lods
add
add
lret
imul
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
imul
add
add
int
or
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
insb
or
pop
pop
pop
scas
add
add
iret
outsb
or
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
outsb
or
pop
pop
pop
scas
add
add
shrb
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
call
jo
call
pop
pop
scas
add
add
aam
push
call
jno
call
pop
pop
scas
add
add
jb
call
ja
call
add
sbb
mov
add
lods
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
lods
pop
add
mov
add
decl
or
add
add
mov
data16
mov
arpl
mov
arpl
mov
arpl
mov
bound
mov
bound
mov
arpl
mov
bound
mov
arpl
mov
arpl
mov
bound
mov
bound
mov
bound
mov
bound
mov
arpl
mov
arpl
mov
bound
inc
outsl
adc
mov
mov
bound
dec
jns
dec
jge
mov
gs
jno
mov
xchg
imul
je
incl
add
test
add
sbb
push
dec
outsb
add
aam
add
fdivs
fnstenv
fnstenv
fnstenv
fdivs
fnstenv
fnstenv
fnstenv
fidivrl
fidivrl
fidivrl
fidivrl
fnstcw
fidivrl
fdivs
fnstenv
fnstenv
fdivs
fdivs
fdivs
fdivs
fdivs
fdivs
fdivs
fnstenv
fdivs
fnstenv
fnstenv
fdivs
fnstenv
fnstenv
ljmp
fldl
or
in
movsb
push
stc
mov
add
jnp
xchg
incl
jecxz
arpl
dec
xorb
int3
ja
incl
add
xchg
add
add
lret
call
jns
jmp
mov
pop
in
lahf
inc
out
lahf
inc
out
mov
dec
out
lahf
inc
in
lcall
out
mov
ss
in
xchg
xor
in
cwtl
cmp
in
popf
aas
out
popf
inc
in
pushf
cmp
in
pushf
ds
in
pushf
cmp
in
pushf
cmp
in
pushf
cmp
in
pushf
cmp
jmp
sub
in
xchg
xor
in
xchg
xor
jmp
sub
ljmp
jmp
sub
in
xchg
xor
in
xchg
sub
in
xchg
xor
in
cwtl
aaa
in
lcall
fisttps
xor
shlb
incl
add
dec
add
add
fnsave
xor
jno
call
jbe
fdivrs
call
js
call
jbe
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
je
call
je
call
je
call
jne
call
jne
call
jne
call
jne
call
jne
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
jne
call
jne
call
jne
call
je
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
je
fdivs
fnstcw
call
jbe
pushl
add
pop
incl
add
incl
add
incl
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
inc
and
cmp
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
imul
add
mov
push
sub
movsb
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
push
sub
movsb
dec
and
sbb
add
xor
cli
push
sti
std
dec
xchg
jae
and
add
sub
inc
xchg
jp
sbb
add
push
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
dec
xchg
jae
sbb
add
imul
std
cli
stc
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
jb
sbb
add
insb
ss
sti
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
jno
sbb
add
outsb
xor
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
outsb
lcall
or
mov
add
sub
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
cltd
insl
lcall
or
mov
add
sub
jo
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
lcall
add
add
ret
jb
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
fwait
imul
or
mov
add
and
jb
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
fwait
imul
push
add
jae
stc
cli
cli
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
call
pushf
push
adc
add
leave
jbe
cli
stc
sti
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
fstps
add
lret
ja
stc
cld
cld
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
fistpl
add
int
daa
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
frstor
add
sarb
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
cli
cli
cli
cli
sti
std
sti
stc
fbld
add
sarb
cli
stc
cli
cli
cli
cli
cli
cli
cli
stc
stc
cld
stc
cli
cli
cli
cli
sti
stc
sti
stc
sti
jmp
mov
add
xlat
jg
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
std
jmp
mov
add
fiadds
jmp
test
add
aam
sbb
into
fcmovbe
mov
mov
fcmovbe
mov
fcmovbe
mov
fcmovbe
mov
mov
mov
fcmovbe
mov
fcmovbe
mov
mov
call
int
mov
fmul
mov
fmul
mov
fst
mov
jecxz
stos
ret
call
lea
call
adc
scas
add
add
mov
add
test
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
mov
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
sahf
inc
add
movsb
dec
add
stos
push
add
popf
inc
add
cmpsb
dec
add
cmpsb
dec
add
mov
dec
push
jmp
pop
add
push
push
push
scas
add
add
data16
lret
imul
shrb
call
imul
shrl
call
outsb
add
shrl
call
insl
add
shlb
call
jb
call
jb
call
jno
call
outsb
add
shrl
dec
insl
add
iret
insl
add
shrl
shrl
call
outsl
add
iret
outsl
add
iret
imul
push
stos
dec
push
in
mov
inc
lcall
std
jle
xchg
iret
outsl
add
pop
pop
pop
movsl
add
add
int
add
fisttpl
push
push
popf
cmp
push
popf
aas
push
fwait
aaa
push
cwtl
xor
icebp
lahf
aas
out
xchg
das
out
xchg
das
push
fwait
cmp
lock
aaa
out
lcall
lock
out
xchg
es
xchg
sub
in
xchg
daa
in
mov
push
xchg
sub
lock
xor
in
nop
and
repnz
xor
cmc
sahf
xor
inc
mov
aad
cmp
fnstcw
lcall
push
add
add
or
aad
or
faddl
fstpt
fstpt
fstpt
fstpt
fstpt
fstpt
fstpt
fdivrl
fdivrl
fdivrl
fdivrl
fstpt
repnz
repnz
repnz
fidivrl
repnz
repnz
jae
repnz
jae
repnz
repnz
je
repnz
loope
add
out
add
in
add
int3
insl
add
incl
add
add
ljmp
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
adc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
lahf
dec
es
addl
addl
addb
addl
addl
addl
addl
addl
addl
addl
jg
and
xchg
out
push
sub
iret
add
add
mov
cli
cli
cmc
repz
stc
cmc
repnz
clc
cmc
repnz
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
cli
cmc
repz
stc
cmc
repnz
sub
add
add
mov
icebp
std
std
cld
cld
cld
cld
cld
cld
cld
cld
std
pushl
sub
add
add
mov
icebp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
std
pushl
fildl
add
jo
mov
icebp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
std
pushl
daa
fildl
add
jo
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
cld
jp
fildl
add
jo
mov
cli
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
std
jge
and
jo
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
sti
std
incl
add
jo
rclb
incl
add
jo
mov
icebp
in
xlat
jmp
fmul
jmp
fst
jmp
jmp
jmp
fst
jmp
jmp
jmp
jmp
fcmove
jmp
fcmove
jmp
fcmovne
in
fidivrl
fiaddl
add
jo
arpl
clc
mov
arpl
mov
fs
mov
bound
mov
arpl
enter
lret
pushl
push
push
lcall
add
push
jns
shl
sub
in
push
jmp
xchg
jmp
mov
jmp
xchg
jmp
mov
jmp
test
loop
adc
in
sbb
out
sbb
loope
and
lret
jg
out
mov
add
or
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
add
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
ja
ja
ja
ja
ja
ja
ja
ja
js
mov
mov
mov
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
jg
clc
jo
ja
ja
ja
ja
ja
ja
ja
jo
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
add
add
jo
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
dec
orb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
mov
mov
mov
ja
ja
ja
ja
ja
ja
jo
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
sub
add
adc
add
and
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
stos
stos
stos
stos
stos
stos
stos
stos
ja
ja
ja
ja
js
pushl
pushl
pushl
pushl
pushl
pushl
pushl
ja
ja
ja
jo
inc
inc
inc
lock
inc
inc
inc
inc
inc
inc
jo
mov
jo
ja
ja
ja
ja
stos
stos
stos
stos
stos
stos
stos
sub
add
xor
add
pusha
add
add
add
add
mov
jnp
xchg
add
add
add
push
daa
add
dec
and
cmpsl
push
and
cmpsl
push
and
add
push
add
inc
add
and
stos
push
and
test
and
test
and
xchg
imul
mov
push
add
pop
and
lods
pop
and
mov
pop
sbb
mov
sbb
mov
sbb
mov
sbb
add
pusha
sbb
mov
adc
les
add
fs
mov
insb
or
lret
imul
leave
imul
add
imul
add
mov
mov
bound
add
je
add
jae
add
pop
add
stos
pop
add
mov
jb
add
jbe
add
jo
add
jno
add
outsl
or
shll
add
js
add
outsb
or
mov
ja
add
outsl
adc
je
add
jns
add
jge
add
mov
enter
ljmp
add
movsb
push
add
mov
addl
shlb
add
arpl
add
arpl
add
je
add
jne
add
je
add
jb
add
push
add
add
mov
pop
add
stos
pop
add
stos
pop
add
fnstenv
add
jbe
add
je
add
jne
add
je
add
add
stos
pop
add
fnstenv
add
jne
add
jbe
add
jne
add
jno
add
outsb
add
lret
add
jbe
add
ja
add
jne
add
jbe
add
jne
add
ja
add
jbe
add
ja
add
ja
add
jbe
add
ja
add
js
add
js
add
jns
add
jp
add
jp
add
jp
add
jnp
add
jns
add
ja
add
sbbb
les
ret
add
nop
daa
add
nop
sub
jmp
sub
jmp
sub
in
xchg
sub
add
xchg
cs
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
in
xchg
xor
fisttpl
add
cwtl
aaa
add
lcall
in
cltd
cmp
in
lcall
in
pushf
ds
pushf
cmp
add
popf
aas
add
sahf
inc
add
lahf
inc
add
lahf
inc
add
mov
dec
add
mov
push
add
test
movl
in
incl
lock
incl
hlt
incl
clc
incl
stc
incl
cli
incl
sti
incl
cld
incl
std
incl
incl
inc
jo
add
mov
incl
jae
jae
jo
jo
imul
add
pusha
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
mov
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
stos
lods
stos
stos
stos
stos
test
test
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
stos
cmpsl
or
stos
lods
lods
lods
lods
lods
stos
stos
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
movsbl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
sbb
lods
lods
lods
lods
scas
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
mov
scas
lods
scas
scas
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
sbb
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
sbb
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
scas
and
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
and
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
and
mov
lods
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
lods
mov
lods
mov
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
es
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
aas
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
inc
mov
xor
xor
pop
pop
insl
pop
insl
insl
xor
xor
xor
pop
pop
pop
xor
pop
pop
xor
mov
pop
das
push
cs
xor
xor
push
push
xor
das
pop
push
push
xor
xor
xor
xor
xor
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
addr16
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
cltd
cltd
xchg
mov
test
xchg
xchg
sub
mov
jns
dec
dec
dec
dec
dec
dec
push
bound
jb
jb
js
js
js
js
jb
imul
dec
dec
dec
dec
push
jne
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
jle
xchg
add
add
pop
push
dec
add
dec
and
mov
dec
and
cmpsb
push
sub
movsb
push
sub
js
xor
jle
xor
ja
xor
ja
xor
jb
add
xor
mov
add
add
dec
add
dec
and
movsb
dec
and
mov
dec
and
mov
dec
xor
jo
add
dec
add
insb
inc
add
xchg
jae
xchg
jp
mov
inc
add
mov
aaa
add
xchg
jno
lret
add
dec
add
pop
add
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
sahf
inc
add
mov
insb
add
outsb
add
xchg
jae
pop
push
dec
add
dec
add
cmpsb
dec
add
movsb
dec
add
jae
add
jb
add
jo
add
pushf
push
rorb
add
lcall
pop
push
dec
add
dec
add
mov
add
ja
add
jbe
add
sahf
push
add
imul
add
jnp
add
jp
add
js
add
mov
data16
insl
add
shrl
add
insb
add
shrl
add
outsb
add
shrl
add
outsb
add
iret
push
add
insl
add
lret
imul
shll
add
jge
add
jg
add
xchg
add
mov
add
xchg
aaa
add
popf
aas
add
mov
cmp
in
inc
add
mov
bound
out
arpl
loop
bound
loopne
bound
iret
outsl
add
mov
jno
add
jb
add
js
add
jg
add
orl
jecxz
or
add
jp
add
jnp
add
jp
add
jne
add
adcb
faddl
push
add
adcl
add
adcb
faddl
sbb
fldl
sbb
faddl
add
test
in
mov
add
xchg
add
nop
and
fldl
es
xchg
daa
add
xchg
sub
lock
sub
out
xchg
sub
add
xchg
das
add
xchg
das
add
cltd
xor
lock
xor
cmc
sahf
xor
add
lcall
lock
aaa
add
fwait
cmp
lock
cmp
lock
cmp
add
lea
add
cmpsl
push
add
scas
jo
test
sahf
add
pop
add
shrb
add
iret
mov
fmul
mov
fmul
mov
int
add
shll
add
sarl
add
sarl
add
aad
add
fadd
add
add
incl
stc
incl
cli
incl
sti
incl
cld
incl
std
incl
incl
cs
add
incl
addb
add
pusha
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
sbb
es
adc
push
adc
adc
push
add
add
add
add
add
add
adc
adc
mov
sbb
mov
mov
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aas
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ds
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
scas
mov
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
mov
dec
mov
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
scas
mov
dec
inc
mov
dec
mov
scas
scas
scas
mov
mov
mov
mov
mov
scas
mov
mov
mov
mov
scas
mov
dec
xor
mov
mov
mov
mov
mov
mov
mov
scas
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
test
cmpsl
cmpsl
cmpsb
cmpsl
cmpsl
cmpsl
cmpsl
test
test
cmpsb
cmpsb
test
mov
mov
mov
dec
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
dec
and
inc
mov
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
das
mov
imul
xchg
nop
cltd
mov
mov
nop
test
insl
popf
mov
xchg
jns
jle
addl
jno
outsl
outsb
pushf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
cmc
repz
dec
xor
mov
push
aas
add
xor
xchg
pop
cmp
test
add
mov
add
mov
inc
add
mov
repnz
inc
add
gs
add
mov
popf
add
ret
pushf
add
mov
or
mov
arpl
mov
arpl
add
jae
add
js
add
xchg
add
mov
repnz
test
scas
xchg
js
in
and
out
es
nop
sub
out
sub
out
sub
out
sub
out
sub
add
xchg
das
add
xchg
xor
jecxz
xor
in
ss
lcall
out
leave
add
add
cmc
repnz
fidivrl
add
fst
add
fmul
add
fcmove
add
loopne
add
fst
add
std
add
incb
cld
incb
cli
incl
sti
incl
cld
incl
std
incl
incl
incl
xchg
xchg
xchg
add
jg
jle
jle
jge
jge
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
pop
pop
pop
pop
pop
pop
pop
add
push
dec
or
adc
cmp
adc
adc
adc
add
or
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
or
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
pop
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmovg
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
dec
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
inc
ds
aaa
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pushl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pushl
mov
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
call
push
daa
jmp
push
daa
jmp
push
daa
incl
add
cmpsl
add
add
mov
push
jmp
daa
jmp
jmp
jmp
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
jmp
push
daa
incl
add
cmpsl
add
add
movsl
push
es
cld
out
clc
clc
clc
stc
clc
clc
clc
clc
in
push
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
push
clc
cld
out
movsl
push
incl
add
cmpsl
add
add
cmpsl
push
and
clc
clc
stc
stc
stc
stc
stc
clc
clc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
jmp
add
cmpsl
add
add
test
and
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
ljmp
add
cmpsl
add
add
stos
push
and
cli
stc
stc
cli
stc
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
ljmp
add
cmpsl
add
add
lods
push
and
cli
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
ljmp
add
cmpsl
add
add
scas
pop
pop
sti
cli
cli
stc
cli
cli
sti
sti
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cli
ljmp
add
cmpsl
add
add
mov
push
sti
sti
sti
stc
sti
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
cli
pushl
add
cmpsl
add
add
mov
sbb
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
pushl
add
cmpsl
add
add
mov
sbb
cld
sti
cld
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
pushl
add
cmpsl
add
add
mov
cld
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
mov
add
cmpsl
add
add
mov
std
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
mov
std
std
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
std
mov
add
cmpsl
add
add
shlb
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
fs
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
les
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
addr16
add
add
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
imul
test
enter
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
imul
lods
add
add
lret
imul
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
imul
add
add
int
or
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
insb
or
pop
pop
pop
scas
add
add
iret
outsb
or
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
outsb
or
pop
pop
pop
scas
add
add
shrb
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
call
jo
call
pop
pop
scas
add
add
aam
push
call
jno
call
pop
pop
scas
add
add
jb
call
ja
call
add
sbb
mov
add
lods
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
stos
pop
add
lods
pop
add
mov
add
decl
or
add
add
mov
data16
mov
arpl
mov
arpl
mov
arpl
mov
bound
mov
bound
mov
arpl
mov
bound
mov
arpl
mov
arpl
mov
bound
mov
bound
mov
bound
mov
bound
mov
arpl
mov
arpl
mov
bound
inc
outsl
adc
mov
mov
bound
dec
jns
dec
jge
mov
gs
jno
mov
xchg
imul
je
incl
add
test
add
sbb
push
dec
outsb
add
aam
add
fdivs
fnstenv
fnstenv
fnstenv
fdivs
fnstenv
fnstenv
fnstenv
fidivrl
fidivrl
fidivrl
fidivrl
fnstcw
fidivrl
fdivs
fnstenv
fnstenv
fdivs
fdivs
fdivs
fdivs
fdivs
fdivs
fdivs
fnstenv
fdivs
fnstenv
fnstenv
fdivs
fnstenv
fnstenv
ljmp
fldl
or
in
movsb
push
stc
mov
add
jnp
xchg
incl
jecxz
arpl
dec
xorb
int3
ja
incl
add
xchg
add
add
lret
call
jns
jmp
mov
pop
in
lahf
inc
out
lahf
inc
out
mov
dec
out
lahf
inc
in
lcall
out
mov
ss
in
xchg
xor
in
cwtl
cmp
in
popf
aas
out
popf
inc
in
pushf
cmp
in
pushf
ds
in
pushf
cmp
in
pushf
cmp
in
pushf
cmp
in
pushf
cmp
jmp
sub
in
xchg
xor
in
xchg
xor
jmp
sub
ljmp
jmp
sub
in
xchg
xor
in
xchg
sub
in
xchg
xor
in
cwtl
aaa
in
lcall
fisttps
xor
shlb
incl
add
dec
add
add
fnsave
xor
jno
call
jbe
fdivrs
call
js
call
jbe
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
je
call
je
call
je
call
jne
call
jne
call
jne
call
jne
call
jne
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
ja
call
jne
call
jne
call
jne
call
je
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
je
fdivs
fnstcw
call
jbe
pushl
add
pop
incl
add
incl
add
incl
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
inc
and
cmp
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
cmpl
icebp
imul
add
mov
push
sub
movsb
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
dec
and
mov
push
sub
movsb
dec
and
sbb
add
xor
cli
push
sti
std
dec
xchg
jae
and
add
sub
inc
xchg
jp
sbb
add
push
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
dec
xchg
jae
sbb
add
imul
std
cli
stc
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
jb
sbb
add
insb
ss
sti
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
jno
sbb
add
outsb
xor
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
dec
xchg
outsb
lcall
or
mov
add
sub
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
cltd
insl
lcall
or
mov
add
sub
jo
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
lcall
add
add
ret
jb
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
fwait
imul
or
mov
add
and
jb
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
call
fwait
imul
push
add
jae
stc
cli
cli
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
call
pushf
push
adc
add
leave
jbe
cli
stc
sti
cld
cld
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
fstps
add
lret
ja
stc
cld
cld
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
fistpl
add
int
daa
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
frstor
add
sarb
stc
stc
stc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
cli
cli
cli
cli
sti
std
sti
stc
fbld
add
sarb
cli
stc
cli
cli
cli
cli
cli
cli
cli
stc
stc
cld
stc
cli
cli
cli
cli
sti
stc
sti
stc
sti
jmp
mov
add
xlat
jg
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
std
jmp
mov
add
fiadds
jmp
test
add
aam
sbb
into
fcmovbe
mov
mov
fcmovbe
mov
fcmovbe
mov
fcmovbe
mov
mov
mov
fcmovbe
mov
fcmovbe
mov
mov
call
int
mov
fmul
mov
fmul
mov
fst
mov
jecxz
stos
ret
call
lea
call
adc
scas
add
add
mov
add
test
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
mov
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
sahf
inc
add
movsb
dec
add
stos
push
add
popf
inc
add
cmpsb
dec
add
cmpsb
dec
add
mov
dec
push
jmp
pop
add
push
push
push
scas
add
add
data16
lret
imul
shrb
call
imul
shrl
call
outsb
add
shrl
call
insl
add
shlb
call
jb
call
jb
call
jno
call
outsb
add
shrl
dec
insl
add
iret
insl
add
shrl
shrl
call
outsl
add
iret
outsl
add
iret
imul
push
stos
dec
push
in
mov
inc
lcall
std
jle
xchg
iret
outsl
add
pop
pop
pop
movsl
add
add
int
add
fisttpl
push
push
popf
cmp
push
popf
aas
push
fwait
aaa
push
cwtl
xor
icebp
lahf
aas
out
xchg
das
out
xchg
das
push
fwait
cmp
lock
aaa
out
lcall
lock
out
xchg
es
xchg
sub
in
xchg
daa
in
mov
push
xchg
sub
lock
xor
in
nop
and
repnz
xor
cmc
sahf
xor
inc
mov
aad
cmp
fnstcw
lcall
push
add
add
or
aad
or
faddl
fstpt
fstpt
fstpt
fstpt
fstpt
fstpt
fstpt
fdivrl
fdivrl
fdivrl
fdivrl
fstpt
repnz
repnz
repnz
fidivrl
repnz
repnz
jae
repnz
jae
repnz
repnz
je
repnz
loope
add
out
add
in
add
int3
insl
add
incl
add
add
ljmp
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
add
adc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
lahf
dec
es
addl
addl
addb
addl
addl
addl
addl
addl
addl
addl
jg
and
xchg
out
push
sub
iret
add
add
mov
cli
cli
cmc
repz
stc
cmc
repnz
clc
cmc
repnz
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
stc
cmc
repnz
cli
cmc
repz
stc
cmc
repnz
sub
add
add
mov
icebp
std
std
cld
cld
cld
cld
cld
cld
cld
cld
std
pushl
sub
add
add
mov
icebp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
std
pushl
fildl
add
jo
mov
icebp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
std
pushl
daa
fildl
add
jo
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
cld
jp
fildl
add
jo
mov
cli
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
std
jge
and
jo
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
sti
sti
std
incl
add
jo
rclb
incl
add
jo
mov
icebp
in
xlat
jmp
fmul
jmp
fst
jmp
jmp
jmp
fst
jmp
jmp
jmp
jmp
fcmove
jmp
fcmove
jmp
fcmovne
in
fidivrl
fiaddl
add
jo
arpl
clc
mov
arpl
mov
fs
mov
bound
mov
arpl
enter
lret
pushl
push
push
lcall
add
push
jns
shl
sub
in
push
jmp
xchg
jmp
mov
jmp
xchg
jmp
mov
jmp
test
loop
adc
in
sbb
out
sbb
loope
and
lret
jg
out
mov
add
or
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
and
add
add
call
add
adc
add
add
sub
add
or
xor
add
add
or
test
add
or
and
add
add
or
test
add
or
adc
add
add
or
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
adc
add
add
add
adc
add
imul
add
addb
add
add
imul
nop
add
add
add
add
add
add
bound
outsl
add
je
and
add
add
add
add
add
add
nop
add
add
add
rolb
add
add
add
push
add
add
add
add
add
inc
add
outsl
add
je
add
or
push
add
jae
je
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
or
incl
add
add
add
jae
imul
and
xor
add
add
push
add
add
xor
adc
ja
or
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
ret
add
add
add
add
add
incl
add
xor
add
add
add
add
add
add
pop
