adc
insb
lret
iret
call
jecxz
mov
xchg
add
pushf
push
imul
shlb
mov
clc
sub
js
mov
jns
push
or
pop
das
es
imul
stos
inc
sub
mov
sbb
jns
pop
and
xchg
int3
js
sbb
pushf
inc
jmp
pop
jns
sub
movsl
inc
mulb
movsl
inc
sbb
add
cmp
mov
adc
inc
pop
adc
xor
aad
inc
push
jnp
imul
or
sbb
int3
mov
dec
mov
iret
lds
test
movsl
and
lods
mov
cmpl
adc
sub
addl
adc
hlt
sub
test
je
mov
pop
sbb
test
ret
lods
and
std
lods
sbb
in
sub
push
sub
push
mov
xlat
movsl
xchg
ljmp
cmp
mov
sbb
add
push
ret
push
decb
mov
sbb
js
sbb
pop
mov
in
push
adc
jnp
mov
mov
pop
int3
sahf
and
movsl
pop
aaa
stos
movsl
test
ret
xor
fsubs
inc
xchg
mov
movsl
and
lods
mov
lds
and
fsubs
jo
adc
ret
mov
in
rcll
xor
pop
adc
adc
stos
sbb
mov
ret
xor
pop
sbb
iret
movsl
jns
cld
test
and
test
add
mov
insl
adc
mov
in
adc
stos
movsl
sbb
xlat
iret
or
popf
inc
pop
and
xchg
xchg
lahf
stc
out
mov
and
sbb
sbb
pop
adc
cltd
inc
xchg
push
xor
mov
xchg
xor
ljmp
out
xlat
sub
xor
fs
sub
movsl
xchg
xor
insl
movsb
xchg
ds
inc
jnp
xchg
xor
jge
xchg
cmp
lahf
add
dec
cs
cmp
je
sub
imul
mov
pop
sub
addl
cmp
sbbb
cs
sarb
mov
pop
mov
test
test
push
lahf
test
pop
sbb
or
sbb
fisubrl
xor
pop
push
add
ret
faddl
cmp
movsl
mov
loope
xchg
xchg
lahf
cwtl
mov
adc
fcompl
sbb
and
cmpl
push
cmp
inc
cmpl
ljmpw
ret
jns
or
test
ret
int3
fwait
ret
sub
andl
jae
insb
sbb
inc
ret
mov
mov
or
mov
jns
sbb
push
sbb
jnp
push
push
xor
test
fwait
pop
cmp
fcomip
xchg
sub
lret
movsb
push
dec
mov
fsts
imul
xchg
xor
add
popa
mov
iret
lds
stos
fcoml
pop
sub
dec
les
add
add
sub
cmpl
sub
push
sbb
mov
cmp
andl
vprotd
cmpl
pop
pop
cmpsl
add
jae
push
mov
ret
xor
xchg
lock
sbb
arpl
pop
addl
mov
push
jns
inc
sbb
inc
and
nop
xor
movsl
imul
xchg
inc
xor
lds
fstpt
ret
jns
mov
inc
jns
imul
js
xchg
xor
push
cmp
sbb
xchg
push
sbb
cmc
push
movsl
sbb
ret
xor
and
cmp
sbb
into
ret
xor
xor
xchg
dec
cmp
inc
movsb
xchg
xor
push
cmp
pop
cmpl
jnp
push
lods
int3
je
sbb
jnp
jl
stos
and
dec
jp
in
add
sub
outsl
push
inc
ficomps
cmp
inc
sbb
mov
xlat
sub
pop
xor
xchg
and
mov
adc
call
dec
aaa
sub
inc
dec
xchg
sub
pop
push
imul
xchg
adc
push
push
xchg
enter
scas
test
test
mov
xchg
sbb
push
adc
aas
add
sbb
xor
ss
test
cmp
movsl
xchg
add
mov
cmpl
xor
loopne
jp,pn
adc
and
xchg
xor
xorb
hlt
jmp
mov
xor
movsl
jle
pop
in
std
dec
mov
adc
jns
adc
cmp
xor
add
jnp
push
xor
inc
movsl
jb
loope
sbb
ret
xor
negb
dec
and
dec
bound
push
leave
push
adc
adc
js
sbb
subl
sbb
jbe
and
push
pushf
sbb
jae
sahf
test
fdivrl
sub
pop
xlat
adc
dec
sbb
xchg
dec
subl
sbb
jns
test
inc
mov
sbb
and
mov
push
jns
sbb
mov
mov
adc
sub
add
fistpll
xchg
pop
lods
sahf
mov
adc
shlb
inc
jge
pop
arpl
sbb
jns
sub
jns
sbb
mov
sub
and
in
sbb
mov
cmp
xchg
stos
fidivl
inc
test
repnz
sbb
andl
test
jns
add
sub
test
test
jnp
or
mov
pop
mov
xor
and
adcb
push
clc
mov
pop
and
stos
call
jg
ljmp
dec
add
add
sarb
addr16
cmp
test
call
xchg
lret
stos
sbb
arpl
xor
popa
popf
dec
sub
mov
sarb
mov
or
fsubrs
pop
sub
cltd
xor
sub
push
cmc
cmp
shlb
and
jnp
test
lock
fwait
pop
or
mov
out
and
idivb
addr16
bound
ja
or
or
cmova
sbb
pop
sarl
mov
and
ss
inc
movups
adcb
dec
jg
push
test
sub
js
outsl
add
arpl
fists
pop
pop
mov
fstps
pop
sub
jp
and
xor
loope
jno
in
pop
pop
add
js
shl
dec
pop
or
push
je
xorl
push
mov
ret
js
loopne
mov
sub
cmpsb
rorl
lock
pop
jns
push
loope
lds
fs
mov
pop
fcomps
outsl
aam
scas
int
sub
xor
push
fnstcw
lahf
mov
push
add
insb
enter
stos
ret
inc
popa
jo
notb
adc
js
insl
insb
jno
mov
adc
mov
jns
test
sbb
lcall
and
jmp
sbb
les
sub
push
bound
fimuls
ds
push
pop
xor
jae
sub
sarb
out
push
fwait
pop
mov
sub
popl
sti
jmp
mov
pop
add
sbbl
inc
ret
repz
inc
sbb
mov
mov
xchg
pop
mov
sub
xor
jae
push
popf
sub
dec
push
sub
mov
int3
sbb
jbe
pop
mov
push
repz
out
add
sbb
pop
adc
rclb
sahf
xor
push
mov
hlt
orl
test
psubusw
test
daa
or
mov
subl
xchg
shlb
mov
jns
out
ret
sub
sub
sub
cmpsl
xchg
sub
mov
cwtl
mov
jno
test
jle
push
test
jns
in
in
fists
dec
xor
inc
mov
xchg
cltd
sub
pop
cmc
outsl
into
jmp
sub
pop
stos
push
lds
lret
mov
add
xor
mov
fisubrs
dec
call
scas
push
inc
enter
add
or
int3
jecxz
xor
subl
lods
jo
stc
ljmp
add
rolb
cmc
pop
and
js
jmp
aas
and
adc
pop
aam
inc
and
js
xlat
sahf
jg
adc
fs
aad
and
add
gs
dec
mov
lods
sub
mov
std
fidivl
xchg
cmp
dec
mov
cmp
orl
jecxz
js
inc
xchg
aad
fnstsw
fcomps
movsb
push
xchg
xor
loopne
js
mov
and
sub
in
jmp
sbbl
test
or
mov
sbb
sti
jecxz
sub
mov
outsb
push
addr16
sbb
rcll
pop
push
sub
not
jbe
idivl
mov
jnp
cmp
movsb
popl
inc
inc
clc
sarl
outsl
add
data16
push
mov
in
push
setb
sbb
scas
jmp
icebp
aas
icebp
sub
jge
js,pt
pop
jns
incl
pop
sub
push
ljmp
inc
or
dec
pop
aad
addl
add
inc
push
pushf
push
loop
mov
pop
out
push
jns
dec
pop
cltd
mov
std
dec
sub
out
push
and
js
loop
pop
in
rep
movsb
adc
cmpsl
add
pop
mov
lcall
aaa
push
fsubrs
xchg
stc
mov
enter
pop
pop
dec
jne
sbb
addl
js
and
or
movsb
inc
sub
jmp
or
pop
dec
stos
pusha
add
push
ja
pop
jo
inc
jbe
mov
xor
int3
js
inc
push
pusha
mov
push
sub
or
enter
sbb
sbb
pop
andl
cli
dec
cltd
fdivrs
test
bound
mov
rcr
adc
add
mov
and
push
ljmp
sbb
lods
scas
aad
mulb
clc
pop
cmpb
int
jns,pt
mov
inc
lods
and
jmp
hlt
adcl
xchg
jecxz
scas
cmp
popf
pop
pop
xchg
add
outsl
mov
test
sbb
stos
das
inc
test
popf
mov
ret
stc
hlt
push
cmpsb
aas
add
cli
ss
addl
pop
pop
ljmp
popa
add
out
les
dec
pop
push
adc
or
orl
xchg
mov
add
je
jp
sbb
stos
xor
push
mov
jno
js
mov
lods
mov
and
test
xchg
scas
js
sub
movsl
mov
cmp
ds
rolb
out
inc
and
lea
cmp
ja
sahf
jnp
mov
mov
or
adc
push
outsl
sbb
cli
scas
cmp
push
add
or
jge
out
rorl
lcall
sub
lock
sub
ss
sub
fcompl
out
sub
pop
rolb
loop
movsl
add
or
pop
sbb
movsb
xor
or
notl
jmp
imul
out
adc
mov
loop
jg
xor
push
jmp
jl
add
fiaddl
shrl
shrb
lret
cmpl
sbb
pop
mov
dec
enter
sbb
and
clc
jp
and
fbld
test
fsubl
or
js
mov
test
sbb
fucomip
cmp
rolb
xchg
xchg
out
idivb
ljmp
fadd
xor
in
sbb
and
cltd
or
and
mov
xchg
roll
imulb
add
out
mov
bound
test
fs
add
cmp
aaa
push
addr16
or
loopne
dec
add
icebp
jns
pop
mov
cs
sub
jg
lret
js
cmp
jb
sub
or
and
or
shlb
paddusb
je
push
sbb
sbb
mov
adc
pop
cmpsb
pop
jp
push
mulb
mov
adc
pop
mov
or
fmull
xlat
push
sub
mov
xchg
or
mov
outsb
int3
pop
divb
xor
stos
jge
sub
add
js
hlt
jb
iret
jle
sub
adc
and
lcall
mov
cmc
jno
jge
ret
cmpb
pop
sub
adc
cmp
mov
lods
popf
js
pop
adc
sub
xchg
mulb
adc
ret
or
pop
pop
pop
arpl
bound
cli
stc
mov
mov
addl
push
adc
out
push
push
popf
mov
lret
test
xchg
bound
pop
cmp
fcom
push
xor
xchg
xor
arpl
jns
das
mov
jge
lret
or
jmp
xchg
pop
jns
repz
push
fwait
stos
push
je
stc
fldl
cwtl
sbb
jmp
stc
sarl
jbe
int3
popf
mov
dec
outsb
cs
jmp
sbbb
xor
xchg
inc
test
dec
loope
js
lahf
sub
inc
mov
jp
int
jecxz
sahf
push
push
cltd
cmc
test
pop
cmpsl
mov
shrl
inc
int3
aaa
in
adc
daa
jecxz
adc
nop
daa
stc
in
sbb
sbb
xchg
out
cmpsb
jg
mov
cmpsl
enter
into
js
je
pop
iret
pop
in
sub
jnp
sub
movsl
inc
in
ja
cmp
mov
mov
in
mov
loope
cvtpi2ps
jns
frstor
popa
in
jb
scas
js
enter
xchg
xchg
sbb
pop
jb
test
jne
push
and
ret
adc
or
xor
jns
fs
lock
ljmp
pop
and
js
add
push
mov
lods
push
inc
add
testb
pop
add
roll
push
lcall
dec
lcall
dec
fsubp
xorb
push
sbb
pop
testb
push
aam
push
and
sub
cmc
adc
push
jbe
mov
pop
cmp
daa
add
and
push
inc
adc
sub
pop
dec
adc
adc
add
pop
insb
andl
mov
imul
mov
and
inc
jns
popf
repz
pop
orb
mov
repnz
cmp
xchg
push
xor
ja
scas
insl
sbb
mov
sbb
fwait
cli
adc
out
fbld
adc
nop
sbb
inc
pusha
sub
dec
mov
les
stc
fcomps
and
js
loopne
loop
cmpsb
pop
jns
gs
mov
sub
cmp
inc
xor
fnstcw
sbb
lock
mov
imul
add
loope
pop
stos
mov
sub
fistpl
push
push
scas
sbb
inc
sub
stos
js
outsb
pop
mov
sbb
cmp
stos
xor
sbb
sbb
jns
push
fcom
mov
xor
sub
cld
xchg
inc
pop
xor
leave
adc
xor
sub
inc
loope
inc
adc
push
jae
test
jnp
xor
mov
mov
jns
pop
mov
adc
mov
push
pusha
xor
inc
repz
inc
jmp
xchg
mov
mov
inc
xchg
push
pop
ljmp
pushf
jl
pop
push
int
outsb
jle
lret
nop
and
or
fldpi
xor
idivb
rolb
loopne
mov
lods
adc
adc
testb
shr
sub
testl
jns
out
das
ja
inc
out
sub
add
mov
insl
jno
out
add
mov
or
sub
push
mov
sbb
in
das
dec
cmpsb
out
cmpsb
xchg
lods
fsubr
sbb
test
lods
sbb
or
adcl
jge
nop
add
jne
cwtl
mov
dec
cltd
fwait
adc
dec
fnstcw
xor
mov
dec
pop
jns
js
mov
ja
sub
mov
loopne
jge
jge
xor
cmp
andl
mov
dec
push
les
xor
xor
inc
sbb
lret
js
push
dec
loop
test
movsb
cs
jnp
leave
js
fldl
imul
sub
adc
mov
movsb
orl
push
push
sbbl
jns
adc
pop
ljmp
shrl
clc
cmp
adc
jns
pushf
je
ds
push
sub
iret
cli
or
insl
jns
push
lret
mov
sub
aas
outsb
fdivrl
in
sar
sub
aam
loope
dec
jmp
sub
push
insl
pop
adc
jne
adc
mov
xchg
cmp
cmp
ret
xor
ds
or
mov
mov
xchg
test
stos
adc
xchg
js
or
or
orb
pop
pop
std
ret
mov
sbb
sahf
dec
shlb
sbb
inc
dec
mov
mov
adc
andb
inc
xchg
xchg
push
cmpsl
popa
sbb
sbb
jl
repnz
push
mov
lds
push
sbb
psubq
mov
push
pop
jnp
imul
shrb
mov
js
mov
notl
sbb
inc
add
push
sbb
jp
into
adc
xor
aam
pop
dec
pop
jns
clc
aam
add
aad
std
lods
adc
inc
dec
jns
dec
sbb
divl
xor
test
xlat
mov
test
cmp
dec
and
std
pop
cwtl
adc
pusha
insb
push
fsub
add
dec
clc
mov
jo
add
rorb
out
in
dec
cwtl
sub
dec
mov
out
and
rcll
mov
pop
push
xor
mov
mov
es
or
gs
jne
shrb
jg
pop
sbb
jns
inc
or
push
clc
jl
push
add
adc
mov
repz
xchg
aas
jl
push
mov
mov
or
cmp
push
inc
cmpsl
xchg
adc
jne
jbe
movnti
mov
sahf
sub
popf
loopne
cld
push
enter
js
cmp
sub
js
movsl
jmp
sub
dec
clc
clc
add
jns
xchg
and
push
lret
fcmovu
subl
push
or
mov
jns
adcl
dec
or
sbb
arpl
sbb
push
sub
sub
adc
sub
mov
mov
loope
andl
pushf
pop
std
and
sbb
clc
pop
sbb
pop
jnp
or
daa
andl
xchg
js
mov
push
xor
sbb
mov
sbb
jg
sub
jo
adc
inc
jns
nop
sbb
and
aad
ljmp
mov
adcb
fstl
nop
jns
push
jge
outsl
sub
nop
pop
in
lahf
fdivs
mov
pop
dec
dec
add
fs
adc
sbb
fcmovnbe
fnstcw
je
dec
data16
mov
xchg
inc
push
repz
cmp
cmp
push
push
fidivs
xor
iret
sbb
inc
popf
xchg
shll
sbb
xor
lods
cmpsb
out
stos
sub
adc
pop
xchg
sub
aad
fistpll
js
sahf
pop
push
sbb
popf
sub
mov
pop
cmp
xchg
cmc
insl
sbb
add
jbe
dec
cmp
scas
mov
jle
cld
repz
dec
xor
pop
in
cmp
les
fdivr
push
popw
mov
or
xor
mov
outsb
xor
lret
pop
or
cmp
orb
leave
xchg
pop
in
js
sbb
jmp
sub
xchg
daa
xor
ljmp
jbe
jo
gs
sub
jg
sbb
ss
ud0
mov
ljmp
clc
das
inc
add
subl
loop
cld
mov
xchg
and
lret
xchg
mov
pop
or
dec
cltd
imul
loopne
xor
les
add
test
xor
psllq
rclb
aaa
push
js
fstps
insl
xor
mov
sub
dec
xor
mov
adc
pop
jns
addr16
je
pop
fmull
sub
ljmp
movsl
mov
xchg
xchg
xor
imul
jb
xchg
inc
stos
sbb
dec
hlt
and
cmp
cmp
pop
mov
add
lahf
insb
dec
fstps
js
popa
jmp
int
stos
and
push
mov
sar
fs
mov
push
lret
xchg
fs
sbb
or
pop
push
sbb
imul
ror
leave
stos
xchg
cmpl
pop
jbe
std
push
sub
sub
sub
cmpsb
ds
sub
mov
js
mov
insl
rorl
adc
repnz
pop
and
cmp
sbb
sbb
out
test
add
push
inc
mov
addb
addr16
das
lret
popf
xor
or
mov
sub
dec
push
inc
inc
cltd
and
sbb
xchg
jp
mov
xchg
mov
add
jo
ljmp
add
cmp
clc
sub
lods
sbb
xor
int
ss
enter
xchg
subl
or
xor
fs
xchg
sub
sbb
insb
mov
pushf
add
out
pop
lret
fidivrs
dec
adc
sub
mov
sub
subl
and
test
les
pop
add
popl
mov
jl
gs
xor
test
out
lods
lret
fs
pop
js
lock
inc
arpl
jmp
icebp
out
insl
cwtl
and
inc
daa
scas
in
or
jecxz
paddsb
daa
js
cmp
rcr
std
aaa
mov
inc
repnz
sub
leave
mov
sbb
mov
add
js
popa
inc
xor
repnz
imul
dec
add
dec
imul
incb
andb
enter
mov
cs
jecxz
cmc
lret
xor
cmp
cwtl
out
jle
rcrb
mov
push
xor
sbbl
incl
add
dec
mov
scas
pop
ds
xor
or
imul
mov
sub
fbld
filds
add
enter
jns
sti
movsl
jno
cld
cwtl
dec
adc
xchg
pop
jg
inc
je
js
fisubl
repnz
inc
sub
and
sub
adcb
je
sub
nop
outsl
cmpsb
mov
rcr
fidivrs
and
fs
int
popf
mov
jle
adc
sbb
inc
push
push
leave
ss
lahf
jge
jno
addr16
sub
in
mov
and
push
pushf
rolb
loope
or
outsb
pop
dec
or
xchg
clc
xor
jo
ret
mov
mov
shlb
imul
aad
mov
jecxz
sbb
inc
jo
sbb
popa
test
sti
or
fildl
stc
sub
add
mov
jno
inc
lea
imul
hlt
xlat
jne
movsl
mov
js
push
and
into
das
lock
sbb
add
js
and
cld
xor
aam
cli
xchg
jo
sarl
movl
push
jle
test
lock
mov
vmwrite
sub
movl
into
lea
sub
pop
call
and
mov
mov
sbb
ret
and
xchg
sub
shl
mov
testb
jnp
les
mov
jp
mov
rol
fsincos
mov
jmp
lret
mov
push
mov
in
mov
mov
jle
iret
pop
xchg
pop
pshufw
push
jo
insl
pop
jbe
popa
divb
js
in
push
sbb
sub
sahf
push
ret
cs
sbb
or
mov
adc
mov
add
jns
xchg
or
sub
cmp
nop
mov
int
int3
mov
pop
int
push
sub
sub
push
fldcw
xchg
or
push
sub
push
mov
xor
faddl
decl
out
js
mov
loope
sub
ret
fdiv
mov
mov
lret
call
stc
pop
sub
stos
mov
outsb
sbb
mov
adc
loope
mov
pop
pop
lahf
jne
jbe
add
fwait
mov
fdivr
adc
aam
mov
sar
sub
stos
rcl
xor
lds
mov
in
sbb
and
pop
push
sahf
sub
aaa
rcrl
pusha
mov
xchg
push
sti
orb
adc
or
lods
xchg
fidivl
lods
dec
daa
mov
adc
sub
and
fiaddl
fsubr
iret
or
pop
sbb
xchg
mov
cltd
shll
cltd
jle
sub
fadds
scas
int
sbb
jl
lods
fisttpl
leave
mov
pusha
js
push
sbb
fs
inc
sbb
into
xor
ja
dec
sbb
push
addb
mov
js
push
mov
add
and
mov
cmpsl
sbb
sbb
fcmovb
insl
xchg
sub
push
jae
mov
pop
ds
mov
pop
aam
aam
jge
xor
fucomp
dec
ja
nop
rclb
in
push
scas
sub
mov
movsl
or
outsb
idivl
or
mov
ja
and
and
push
pop
mov
lret
dec
cld
scas
jo
rolb
mov
sbb
js
add
inc
sub
cli
stos
sub
sub
and
das
mov
xor
pop
cmp
aam
addr16
mov
inc
stc
sbb
add
int
std
cmpsb
lock
mov
andb
mov
xchg
stos
xchg
mov
cltd
cmpl
pop
sub
lea
mov
call
lcall
push
gs
inc
and
ds
aam
test
nop
xor
mov
ret
adc
adc
loop
loope
mov
aaa
mov
xchg
mov
jns
mov
jmp
subl
rcr
jne
xor
gs
xor
icebp
icebp
pop
pop
xchg
jp
ret
sbb
ja
dec
and
scas
mov
out
cmpl
sub
jge
nop
xor
or
xchg
js
cli
mov
sub
mov
mov
xor
jl
imul
push
fwait
sbb
shlb
jle
dec
xchg
out
pop
mov
enter
repnz
pop
arpl
adc
imulb
xchg
test
loope
imul
stos
out
cs
push
xchg
mov
mov
add
xchg
add
cmp
ljmp
push
mov
add
out
into
sub
mov
mov
js
fwait
popa
and
jmp
test
add
ds
in
sub
sbb
xor
shlb
mov
scas
sbb
ds
das
cmp
andl
or
test
addr16
mov
mov
or
mov
cmp
stc
and
push
xor
lods
sbb
sub
fsubrl
jge
outsb
inc
stos
inc
pop
pop
cmp
sub
mov
mov
mov
sbb
xor
jbe
mov
sub
lods
jge
pop
xor
ljmp
outsl
adc
sub
fiaddl
aam
push
mov
out
js
jnp
idivl
or
mov
cmp
test
mov
dec
daa
rcll
xor
cwtl
arpl
and
cwtl
xchg
mov
and
or
mov
mov
adcl
add
add
jno
pushf
js
xchg
cwtl
or
sbb
int3
dec
mov
aas
leave
pop
xor
stos
dec
int
in
call
sub
mov
shrb
jo
icebp
or
sub
sub
jmp
dec
mov
pushf
mov
mov
lret
les
sub
andl
add
dec
push
xor
popf
inc
loopne
shrb
jne
lahf
fwait
int3
and
sbb
and
cmp
jnp
popa
cmp
mov
stos
sub
pop
lock
mov
adc
xlat
addl
ret
pop
xchg
and
lock
sub
mov
adc
stos
xchg
pop
sub
jecxz
popa
push
ret
mov
mov
push
mov
and
repnz
sbb
xchg
cld
orb
push
inc
dec
stos
sbb
xor
lock
lcall
adc
jecxz
jae
pusha
inc
pusha
cli
sbb
cmp
andl
jle
leave
fadds
mov
sub
pop
shl
insl
jno
adc
mov
rorb
je
iret
ret
or
es
xor
das
mov
lahf
sbb
test
cmp
call
sbb
push
xlat
jns
daa
fnstcw
lahf
loop
xchg
push
pop
std
jle
cmp
mov
or
aas
sarb
shrl
jp
inc
shrl
pop
mov
sbb
repnz
sbb
es
leave
xlat
imul
xor
adc
cmpsl
nop
xchg
xchg
ret
or
addr16
pop
je
test
push
mov
into
subl
testb
xor
daa
xchg
iret
cmc
sbb
xor
xor
add
inc
jno
mov
sti
into
mov
jg
pop
and
xor
xor
cld
inc
mov
push
xchg
mov
add
sbb
outsl
mov
mov
aaa
repnz
add
pop
stos
out
sbb
pop
sub
js
repnz
push
mov
mov
dec
pop
sbb
add
ret
loopne
cmc
roll
pushf
adc
push
mov
add
push
mov
movsl
xchg
jo
mov
cmc
pusha
rolb
dec
popa
adc
pop
ljmp
outsl
inc
push
andl
push
hlt
lret
xchg
jns
xchg
aad
jns
lret
sub
xorl
mov
xor
mov
lods
cli
fidivrl
popf
loope
sub
sbb
sbb
jae
dec
ds
mov
andl
dec
cmc
cltd
mov
mov
js
cli
xchg
mov
pop
and
or
adc
pop
cmp
mov
cld
out
pop
mov
dec
sub
mov
js
sub
mov
push
lea
pop
mov
lcall
movsl
out
mov
inc
adc
out
or
lahf
sbb
or
mov
push
loopne
sbbl
test
jns
test
add
cld
xchg
js
dec
push
insb
rcl
sbb
daa
jne
pop
sti
push
adc
sarl
or
sbb
inc
jb
cmpl
scas
jmp
sarl
js
repnz
sub
dec
add
or
xchg
dec
xor
jmp
inc
movsb
mov
popa
push
fsubrs
xchg
adcl
outsb
mov
int3
mov
dec
mov
das
mov
cmp
inc
outsl
mov
pop
scas
cmp
inc
shrb
cmp
sub
dec
jl
out
cltd
loop
aam
rcrb
sbb
mov
xor
daa
push
fistps
push
or
mov
push
jg
enter
imul
ret
iret
lahf
sub
insl
enter
ret
pop
sub
stos
xchg
pop
push
dec
push
adc
pop
sti
push
outsl
fidivrs
lret
xchg
aad
enter
mov
test
rclb
cmp
fwait
movsl
xchg
addb
out
mov
pushf
shll
movsl
sub
push
xchg
hlt
loope
push
mov
jg
and
sbb
sub
fildl
sbb
push
lahf
jns
std
cmpb
ss
cmpsl
sbb
mov
pop
adc
push
push
mov
cli
sbb
loopne
lods
cmpl
pop
or
sub
add
js
aam
dec
and
jns
sub
mov
cld
mov
out
js
sbb
addr16
roll
xor
and
push
int3
or
jbe
jne
xor
repz
sbb
into
fsubs
cmp
ror
movsb
sbb
push
fs
cltd
pop
pop
loope
xlat
and
cmp
or
std
jnp
xchg
test
js
scas
sub
int
jo
or
cmp
lds
daa
add
mov
sbb
movsl
add
sbb
mov
mov
sbbl
dec
xchg
xchg
leave
repnz
add
add
imul
jg
dec
push
pop
push
or
cmc
rcrl
mov
or
out
adc
push
sbb
dec
lret
adc
stc
or
xor
out
xor
shll
push
test
sbb
andb
in
mov
lock
lcall
pop
sub
bound
jmp
sbb
xor
outsb
mov
sbb
pop
clc
cmpsl
cs
pop
push
and
mul
fimuls
push
add
cld
lcall
orb
cmp
out
add
push
pop
insb
out
add
push
mov
mov
test
xorl
rcl
xorl
lret
sahf
mov
add
sti
xchg
cmc
or
sub
ja
or
mov
xor
andl
addl
fiadds
push
out
xchg
mov
dec
popa
sbb
pop
add
add
cmp
bound
ja
jb
mov
xchg
pop
cld
push
mov
in
mov
call
xorl
and
aam
js
adc
push
add
or
add
add
mov
cmp
aas
cltd
dec
push
sub
sub
cmp
sub
leave
push
push
cmp
lret
mov
lret
jno
cltd
sub
fld
data16
sbb
jnp
insb
xor
ds
xchg
repz
push
addr16
mov
pop
jo
push
js
jae
lods
aad
cmp
dec
test
sbb
daa
ret
in
sub
je
ficoml
lock
mov
sbb
test
pop
adc
sub
sbb
imul
sahf
cli
adc
or
inc
icebp
xchg
rorb
cmp
icebp
adc
les
pop
ret
pushf
push
repnz
or
xchg
jmp
jge
dec
cmpsb
mov
cmpsl
sub
push
mov
in
js
fisubrs
xor
sbb
out
ljmp
adc
shl
imul
cmpsl
out
jge
dec
cmp
sarl
pusha
cmpl
lret
sqrtps
cmpsb
mov
in
inc
andb
cmp
out
inc
mov
pop
leave
sbb
dec
cmp
adc
adc
mov
xchg
mov
jno
test
mov
jl
mov
cwtl
xchg
inc
out
mov
fwait
adc
in
sub
inc
movsb
xchg
ja
push
jb
cwtl
in
pop
xchg
test
pop
ficompl
daa
out
xchg
add
andb
mov
insl
adc
nop
ja
dec
adc
out
adc
xor
xor
or
jl
leave
fs
jge
das
addl
jne
rolb
or
int
pmulhuw
pushf
popf
sbb
movb
pop
scas
add
dec
adc
push
cltd
les
pop
push
xchg
pop
xchg
xchg
negl
out
fdivl
into
add
jb
bound
add
jne
cwtl
and
inc
inc
rcrl
arpl
cmp
bound
add
sub
xchg
insl
mov
call
fisttpll
js
das
mov
pusha
add
and
and
mov
inc
sbb
ss
in
push
jb
dec
push
pop
xor
shrl
in
imul
std
cmp
jno
xchg
or
push
sub
sub
stos
and
push
add
pop
mov
cmp
jp,pn
xor
imul
pop
mov
mov
dec
pop
xchg
sub
sbb
subl
addb
int
xor
jp
and
mov
jnp
and
mov
test
pop
popa
out
outsl
mov
or
lods
mov
push
ss
xor
ficompl
push
test
pop
rcll
xlat
hlt
in
sar
shrl
mov
jecxz
sbb
popf
and
mov
or
or
jb
jns
jno
mov
subb
pop
insb
outsl
mov
dec
xchg
loope
imul
dec
xlat
mov
icebp
sbb
lret
or
jns
jecxz
adc
xchg
jecxz
adc
pop
jae
sub
jecxz
shll
js
push
xchg
cmp
and
and
sbb
iret
outsb
inc
movsb
jle
cmpl
push
in
outsb
xchg
jecxz
inc
popa
ds
movsb
dec
decb
add
cwtl
sbb
fsubrl
cmp
sub
xchg
or
sub
xor
or
aad
rcr
mov
js
pop
push
xor
adc
daa
loop
test
sbb
stc
cmpsb
mov
cwtl
xor
adc
adc
js
inc
xchg
add
mov
mov
mov
loope
sub
add
mov
jns
adc
xor
adc
pop
xchg
pop
jg
mov
sub
push
inc
cmpsb
add
sub
mov
and
fstps
test
sub
xchg
sar
daa
jns
xor
sbb
push
fsubrl
stos
aas
insb
jecxz
mov
mov
cmpsb
das
inc
fimull
mov
jns
cli
shr
sar
sbb
mov
js
and
rolb
mov
icebp
jecxz
aad
inc
fwait
jmp
xor
leave
mov
in
push
insl
and
fmulp
jno
insb
push
bound
cwtl
aas
icebp
sbb
mov
ds
outsb
cwtl
ljmp
rclb
xchg
xchg
subl
push
lods
push
sub
cmp
adc
mov
xchg
push
mov
fisttpll
or
fsubs
mov
inc
dec
mov
sbb
cmpsb
mov
orb
lcall
lods
adc
cmpsb
nop
orl
sub
pop
pop
negb
pop
in
or
cmp
mov
mov
dec
jl
jl
rcrb
fsubrs
cmp
push
test
rol
ds
mov
inc
call
js
dec
lds
pop
mov
push
ret
nop
int
mov
add
aad
cs
shr
mov
sub
gs
push
cmc
cmp
mov
inc
imul
mov
pcmpeqw
ret
lahf
inc
ss
jnp
or
cmp
push
cmpsb
add
adc
insl
mov
inc
nop
push
jns
shll
insb
jle
adc
test
mov
sbb
mov
sbbl
pop
cmp
xchg
and
or
outsl
ret
shlb
add
cmp
push
loope
push
xlat
aaa
in
adc
adc
sbb
inc
dec
mov
js
aas
aad
pop
stc
sub
fidivrs
jge
sub
inc
pop
adc
addr16
in
add
push
xchg
xchg
mov
je
push
dec
sarb
jg
std
dec
add
xchg
xor
push
cld
xchg
push
test
cmc
lret
cwtl
ret
xchg
test
test
push
jno
adc
add
nop
sahf
pop
andb
and
lret
fcmovb
pop
jl
sbb
add
add
ret
xchg
pop
cmp
and
sbb
jp
pop
mov
lahf
nop
data16
cltd
js
adc
sbb
xor
push
inc
jmp
cli
shr
lods
inc
aaa
sub
fdivrs
mov
js
mov
jecxz
loope
cmp
fstp
ret
arpl
cltd
xor
jae
arpl
jbe
out
lret
dec
add
imul
js
loopne
fiadds
xchg
in
sub
xchg
out
popa
mov
jo
dec
aas
enter
repz
jns
push
scas
in
cmpb
fldt
dec
aaa
inc
sub
ds
jb
pusha
sbbl
stos
stos
jno
decb
popf
fstpt
dec
aad
or
outsl
lds
mov
adc
or
mov
and
xor
ljmp
roll
pop
mov
imul
push
outsl
sbb
sub
add
dec
push
jmp
sbb
xchg
rclb
aaa
xor
add
mov
adc
sub
rol
imul
testl
mov
pop
xlat
into
ficoml
loopne
jecxz
rcll
test
inc
mov
xchg
jg
jl
jns
icebp
xchg
les
dec
cmp
test
jecxz
sbb
movsb
push
sbb
int
inc
popa
mov
in
sbbb
or
pop
sbb
fisttpl
mov
cld
bound
out
mov
int
in
dec
sub
cmp
pop
mov
pop
xor
adc
movsl
xchg
test
sbb
clc
pushf
mov
popl
jmp
aam
pop
pop
xor
incl
cmpb
leave
xchg
pop
repz
lahf
pop
add
js
pusha
push
and
daa
and
movsl
into
cmpsb
enter
pop
loopne
add
loope
sarl
andl
jle
cmp
or
and
pop
mov
pop
jecxz
mov
mov
inc
xchg
cs
push
sub
and
outsl
scas
xchg
mov
sbb
imul
sub
sbb
sbb
sahf
sub
or
push
cltd
iret
fbstp
xchg
or
sarl
and
out
jae
dec
cmp
in
inc
cmp
clc
leave
lcall
enter
out
in
jae
mov
fwait
push
in
sbb
inc
jg
push
cmpl
popf
mov
xchg
fbld
mov
mov
cmp
add
cmpsb
jo
sbb
mov
and
push
add
sbb
jae
movsl
and
xchg
clc
dec
in
daa
std
sbb
inc
cmc
pop
int
jg
es
daa
data16
pop
fidivl
repz
addb
lods
mov
ficoml
fwait
aas
push
ja
popf
aaa
in
sbb
fisubl
dec
cmp
mov
sub
test
xor
xchg
outsl
mov
jg
andl
pop
das
xchg
loop
js
dec
pusha
sub
sub
xchg
aam
push
shr
sub
dec
dec
movsl
rol
shll
dec
mov
and
in
mov
out
iret
push
mov
cmpsb
repnz
scas
sbb
pop
mov
js
inc
in
push
mov
mov
movsb
arpl
stc
lds
jns
push
call
int3
xchg
pop
lret
and
pop
out
pop
addr16
or
les
imul
aam
loopne
xchg
inc
arpl
push
loope
shlb
jecxz
inc
xlat
into
inc
adc
gs
dec
dec
jns
test
hlt
and
jge
sub
inc
test
mov
outsl
pop
je
xor
adc
in
clc
repz
lret
js
pop
push
xor
sub
lods
rcrb
adc
hlt
ljmp
jo
testl
add
pop
out
fdivp
mov
aad
out
ss
and
imul
and
jle
stos
test
fst
popa
lret
cmp
imul
pop
sti
sbb
cmp
cmc
xlat
dec
ret
subl
imul
cmpsl
sbb
push
adc
and
outsl
dec
cmpl
pop
jl
inc
gs
test
xchg
inc
lret
je
int3
orl
shlb
stos
mov
pop
xchg
or
push
pop
icebp
test
and
js
sbb
sbb
pop
arpl
mull
sbbb
or
inc
or
ljmp
lock
mov
inc
clc
xorb
dec
mov
das
lods
cli
nop
aaa
aad
pop
loopne
pop
jmp
ja
loopne
leave
out
mov
push
sub
mov
xor
aam
sub
test
cmpsb
test
clc
fstpl
sub
or
mov
in
iret
jo
mov
cs
sbb
and
jmp
ljmp
ds
inc
cmp
lcall
jg
jno
sbb
cmp
subl
popa
mov
jae
pop
mov
push
inc
xor
cmpsl
jge
loopne
fcom
hlt
push
mov
jbe
sahf
shl
notl
enter
lea
aad
and
dec
add
jge
push
out
dec
adc
cmp
addr16
add
push
icebp
push
ficomps
sti
pop
push
lret
mov
adc
inc
int3
and
sbb
out
pop
mov
int
pop
int3
aam
and
add
add
xorl
xor
int3
test
cwtl
fsubr
leave
pop
add
outsb
rolw
xchg
subl
in
or
jp
push
mov
leave
sub
add
pusha
iret
mov
mov
mov
test
stc
mov
movsl
cmp
pop
stc
jnp
gs
push
and
ret
addr16
jmp
movsb
jne
adc
scas
inc
pusha
sub
ljmp
cwtl
ja
int
dec
and
int
shll
sub
mov
das
cmc
lahf
loopne
sub
sarl
les
addl
or
je
mov
mov
push
aad
xchg
cli
xor
adc
addr16
inc
xor
das
sarl
push
mov
xchg
mov
sub
inc
loop
test
sahf
iret
sbb
lcall
test
mul
loopne
nop
add
jbe
dec
sub
push
and
sub
jne
pop
sbb
out
test
mov
mov
push
lret
rcll
std
cwtl
scas
sbb
add
xchg
shl
pop
loop
mov
inc
rcl
mov
scas
adc
cmpb
cmp
aaa
or
nop
jg
jne
jp
test
std
or
push
imul
mov
xchg
cmpsl
xchg
cmpsb
icebp
fimull
add
in
sub
jnp
mov
sbb
inc
fists
mov
roll
nop
or
aaa
dec
xor
or
inc
sub
movsl
les
sbb
pop
mov
sbb
imul
cmpsb
and
js
mov
imul
sub
or
push
mov
int3
movsb
cmp
pop
pop
pop
sub
int
pop
loopne
lahf
adc
repz
push
shll
dec
cmp
scas
pusha
lea
xchg
lods
mov
xchg
sub
push
cmp
jo
les
andl
lret
sub
mov
mov
ficoms
addr16
cs
insl
daa
cli
std
outsl
addl
ljmp
into
dec
sub
in
sub
sub
insl
lods
fildl
jp
jecxz
xchg
mov
xchg
mov
ds
bound
ds
cmpsl
adc
lcall
pushf
push
cmc
sub
sbb
mov
rcrl
cmp
lahf
pop
shlb
dec
add
mov
and
sbb
add
push
repz
sbb
push
clc
cmp
pop
repz
or
sahf
in
pop
or
ret
add
inc
and
lods
popa
sbb
mov
sti
and
xchg
pusha
lds
andl
jo
mov
sub
loope
push
mov
sbbl
pushw
or
int
inc
xchg
out
pop
pop
or
icebp
sub
sbb
or
popa
js
les
test
push
xor
mov
mov
repnz
cld
fldcw
jb
sub
adc
mov
push
sub
out
pop
and
jle
add
loope
aad
das
dec
les
test
jae
pop
fsts
arpl
ljmp
jns
cmp
jl
inc
and
popf
xor
xchg
xlat
movsl
sub
ljmp
xlat
adc
ret
push
xchg
int3
scas
outsb
sub
jo
sbb
incb
sti
xchg
fnstsw
insb
push
aas
test
aad
in
ffreep
jl
daa
dec
jns
xchg
sub
jnp
arpl
imul
sbb
jl
shr
sub
xchg
loopne
fidivl
popf
ror
mov
lret
push
sbb
xchg
xor
arpl
push
insl
packuswb
mov
jp
mov
std
sub
pop
sbb
in
popf
and
adc
mov
sub
mov
sub
iret
shll
bnd
cs
jge
xor
push
push
push
test
cld
or
nop
ljmp
shll
lds
xchg
sbb
mov
cmpsb
fsub
movq
xor
mov
cmp
ja
sub
mulb
add
xchg
cmp
clc
or
adc
xchg
jge
sbb
cld
fdivrp
push
mov
lock
inc
fsts
popf
inc
cmp
dec
cmpsl
sub
jbe
jne
test
jp
cmp
sub
cmpsb
out
mov
jp
sbb
cwtl
dec
push
aam
sbb
addr16
xchg
adc
sub
jle
inc
int
mov
xchg
dec
fisubl
out
lods
dec
in
fcomps
movsl
mov
fcompl
hlt
adc
mov
sub
pop
movsb
imul
cmp
rcl
jmp
cli
dec
les
movl
xchg
idiv
sbb
fs
dec
push
sbb
jns
popf
mov
imull
adc
in
cmp
lahf
dec
and
mov
jl
sub
sahf
mov
xchg
add
sbb
mov
sub
mov
jp
cmp
shrb
fmul
and
sub
sbb
insb
mov
imul
pop
out
jns
adc
inc
std
adc
hlt
das
cmpsl
out
pop
or
sbb
push
mov
fcompl
xchg
std
pop
cmp
cmp
mov
inc
test
fwait
jge
sbb
iret
mov
js
jmp
aaa
inc
adc
sub
xchg
mov
and
in
in
addr16
dec
sbb
add
xchg
icebp
mov
mov
dec
fnstcw
movsb
sub
inc
pop
or
or
sub
jo
das
cmpsl
cmp
cltd
jle
adc
push
out
push
js
push
arpl
iret
push
ret
lods
sbb
pusha
jns
inc
rcll
sub
aad
mov
cmp
enter
test
jl
je
rclb
psllw
scas
push
adc
mov
mov
add
xor
mov
mov
lret
jle
mov
mov
or
sti
push
mov
adc
xorl
sub
cld
repz
mov
sub
jp
js
dec
js
sub
icebp
push
sub
sbb
imul
jmp
fistps
push
lcall
mov
and
js
jo
btc
fsubrl
dec
lds
mov
ds
insl
mov
sub
shl
testb
sub
dec
and
cmp
stos
add
mov
call
sti
movsb
push
jb
jae
xchg
ljmp
sbb
in
loopne
mov
outsl
push
stc
or
push
outsl
add
fcmovne
xor
das
lea
mov
out
add
mov
inc
mov
sti
pop
jl
iret
sbb
push
mov
sbb
or
ds
push
ja
stos
jo
xchg
sbb
sub
or
fbld
ficoms
movsb
lret
fldenv
lea
jge
jns
mov
inc
mov
push
cltd
sub
jmp
aad
cmpsl
xchg
inc
sbb
test
jl
xor
ret
cmpl
mov
pop
js
mov
xor
and
or
cwtl
out
jl
sub
sub
pop
nop
bound
fisttps
loopne
repnz
cltd
mov
jecxz
sbb
mov
jp
cmp
pop
cmp
js
test
jmp
ljmp
inc
push
jg
jno
cmpl
setp
add
mov
xchg
fldt
jb
xchg
adc
mov
adc
inc
mov
in
add
int
out
jecxz
mov
mov
clc
jecxz
cmpsb
gs
dec
rolb
jo
out
js
imul
sti
jae
arpl
sub
cwtl
mov
ss
aam
rcrl
into
add
add
sub
outsl
ret
ja
jb
push
adc
xor
and
fisttpll
or
test
call
or
mov
xor
leave
sub
rcrl
mov
or
dec
cmp
cmp
cmpsb
push
dec
inc
sub
shll
enter
bound
lcall
cmp
pusha
sbb
sub
sub
sbb
repz
lods
inc
fstpt
cmpsl
and
punpckhdq
mov
mov
out
lahf
leave
test
xor
lahf
mov
int3
pmullw
orw
popf
popf
jg
cmp
lock
lea
sub
das
cs
inc
mov
add
repz
aaa
dec
rcrb
inc
and
in
ret
inc
cmpsl
ret
jp
inc
dec
cmpsl
jp
adc
and
sub
fcomps
adc
ja
mov
loope
cwtl
int
ljmp
jo
push
dec
xchg
and
rcrb
sub
xchg
sbb
pop
clc
movsl
aas
icebp
jp
lods
das
add
enter
clc
pop
mov
jns
clc
sub
xchg
push
subl
lea
enter
jns
scas
add
fchs
loope
adc
mov
clc
push
pop
gs
lret
out
rolb
sahf
in
scas
stos
dec
mov
push
int3
dec
adc
scas
pushf
sub
mov
push
sub
xchg
jg
fwait
xor
aam
data16
push
jb
sub
sub
sub
rcrl
mov
and
xor
mov
loope
cmp
aaa
adc
pop
push
ret
insb
sbb
or
jbe
sbb
int
fimull
movsb
sub
insl
xor
mov
hlt
stc
push
jno
mov
cmpl
leave
mov
jg
inc
pop
mov
test
cmp
adc
and
push
sbb
mov
ja
xorl
or
insl
cs
lock
pop
xchg
orl
adc
push
sub
adcl
cmpl
jg
jns
mov
lock
mov
xchg
dec
mov
and
loope
lahf
push
das
int3
add
and
shrl
cmp
adc
sub
pop
or
frstor
sbb
mov
cmpl
xorb
xor
jns
js
hlt
stc
mov
push
pusha
bound
mov
xor
and
pusha
rcl
out
std
mov
sub
mov
xchg
sbb
popf
out
cmp
es
xor
inc
pop
lock
push
divb
cmpsl
pop
sub
sub
xchg
call
int3
sub
cmc
and
mov
pop
jns
jl
test
icebp
and
pop
pop
in
xchg
and
xor
push
clc
xchg
sub
shll
jb
into
jae
or
pop
pop
mov
lds
add
ret
sbb
inc
inc
cmpl
inc
shll
cmpsl
pop
and
adc
call
jle
scas
mov
dec
mov
cmc
cmc
cmpb
mov
jl
je
inc
sub
push
aas
sub
pusha
or
aad
aas
dec
xor
rolb
dec
mov
call
mov
xchg
push
inc
push
hlt
push
mov
shlb
sbb
mov
outsl
jl
jne
sbb
mov
arpl
adc
pop
inc
jno
mov
mov
aam
es
imul
push
and
sbb
cmp
jmp
inc
jno
cmp
and
in
and
orl
insb
ret
push
dec
and
leave
jge
push
sub
mov
mov
gs
mov
jns
sub
fs
cmp
xchg
stos
sbb
or
call
roll
mov
pop
pop
inc
fidivrs
jns
scas
aam
mov
fiaddl
and
sub
mov
enter
adcl
bound
cmc
cmp
mov
inc
sbb
xchg
adc
iret
add
xchg
sub
adc
sub
push
xor
or
andl
dec
cmp
xor
shr
dec
addb
sub
jae
popf
sbb
std
imul
das
add
popa
xor
les
mov
add
push
cmpsl
roll
in
test
dec
mov
sub
sub
cmc
fwait
or
xor
rorl
cmp
mov
inc
popa
in
aas
jne
loopne
and
or
test
aad
mov
ret
loopne
mov
test
jl
aad
insb
mov
dec
xor
inc
leave
shlb
mov
ljmp
stos
adc
push
jne
sub
pminub
pushf
add
jecxz
test
lret
mov
adc
icebp
and
and
jnp
mov
cmpsl
mov
scas
ret
sub
jmp
jmp
mov
aaa
scas
ds
adc
xlat
pop
xchg
jg
pop
mov
fstps
syscall
inc
push
add
push
fistps
icebp
insl
push
test
sbb
sub
cwtl
mov
jle
add
aad
test
inc
pop
cmovb
sub
movsl
jns
insb
mov
rcrl
outsb
cltd
ret
push
stos
sbb
xlat
movsl
inc
cmpl
popf
imul
and
fnstenv
add
jne
xchg
or
shll
sbb
mov
incb
jle
rorb
xor
aas
pop
mov
cmp
jg
jns
std
xchg
js
adcb
sub
orb
shlb
sub
jo
push
rcrb
inc
andb
sub
mov
jmp
out
fs
inc
sarl
ljmp
psrad
adc
mov
ret
adc
scas
cs
sarb
add
inc
push
fsubrs
jbe
xchg
adcl
mov
sbb
icebp
js
repz
add
insl
std
test
xor
cmp
jnp
sub
mov
and
push
sbb
dec
sbb
test
outsb
inc
fnstcw
jns
out
out
jmp
jne
jae
sub
movl
mov
and
xchg
push
push
adc
jnp
test
mov
sub
jo
addb
nop
movsb
push
jmp
lahf
cltd
bnd
lahf
mov
mov
jb
inc
test
sbb
jecxz
mov
faddp
in
idivl
jnp
dec
lock
push
sbb
pop
sub
jns
daa
pop
add
or
push
jns
sti
int3
dec
ljmp
mov
push
mov
and
in
mov
adc
jge
addb
ds
pop
sbb
hlt
fadds
push
sbb
pop
test
push
jge
add
pop
frstor
mov
shl
daa
jmp
imul
sbb
mov
or
mov
or
cmp
lahf
push
fdivrs
shll
jecxz
xchg
ret
push
push
inc
aaa
xchg
test
dec
pusha
push
movsl
mov
lea
and
adc
pop
lods
dec
jg
out
sub
mov
ret
sbb
xchg
repz
jo
lcall
ret
es
or
cmp
sub
loope
jb
cwtl
xor
jne
xchg
int
cmpsb
subl
fcomps
xor
pushf
cwtl
mov
sub
push
leave
cld
add
cmpsb
and
pop
mov
rclb
pop
or
idiv
hlt
mov
js
sbb
jmp
adc
shll
loope
jo
xchg
fdivs
and
sbb
push
test
ficoml
outsl
mov
lret
imul
test
mov
inc
rorl
sbb
lret
push
xor
dec
mov
xchg
mov
and
test
insb
sub
inc
ret
jge
cmp
cmpsb
dec
cmpsb
add
daa
jns
inc
aas
adc
pop
in
jb
cmp
pop
xchg
inc
or
or
mov
test
mov
sti
into
sbb
pop
shlb
subl
mov
cltd
mov
push
sbb
pop
cmpb
jge
fmul
dec
mov
aam
mov
sbbb
jl
jnp
sub
cmp
fldt
inc
scas
xor
mov
decb
xchg
lods
add
orl
cmc
xor
js
sub
imul
clc
and
andb
popf
mov
mov
mov
sbb
int
inc
fcmovnb
xchg
cmc
outsb
or
cmp
sbb
jbe
jmp
adc
stc
aam
nop
jecxz
popf
fs
and
inc
sbb
fbstp
push
mov
mov
cwtl
xchg
cli
js
lahf
or
movsl
nop
sbb
imul
mov
cli
movsl
xor
clc
push
in
test
lods
repnz
sahf
js
cmpl
jb
sub
sub
enter
and
jp
ret
scas
adc
pop
mov
inc
int3
out
xchg
in
pop
fcmovu
push
out
popf
sub
cmpsb
xor
inc
mov
add
imul
adc
movsb
into
rolb
jns
pop
push
subl
mov
jns
inc
add
out
mov
out
push
jg
inc
sbb
leave
int
sub
aad
ds
insl
xlat
mov
xchg
enter
inc
jbe
imul
sub
jl
cwtl
movsb
rolb
xor
aas
cltd
sub
andl
push
in
push
adc
jp
add
ret
mov
cltd
fst
push
jns
push
shrb
popa
xlat
lret
push
jae
jmp
sbb
inc
sahf
js,pn
sub
pop
test
repnz
mov
jl
or
inc
mov
js
ds
stos
movsl
iret
push
sbb
or
cmpsl
icebp
filds
pop
jle
push
loop
mov
inc
or
rcr
daa
push
sbb
iret
add
mov
pop
jl
push
sub
jl
xchg
sub
daa
movsb
js
in
clc
pop
pop
pop
mov
add
adc
pop
cmpl
cmp
ror
inc
stc
adc
imul
pop
popl
add
icebp
scas
mov
adc
push
xor
dec
push
jbe
cltd
shrl
jecxz
mov
sub
arpl
pop
dec
xchg
lcall
aam
mov
sub
leave
adc
stos
push
mov
push
cmp
inc
sbb
jg
sti
icebp
or
andl
sub
adc
push
aaa
test
shrb
add
xor
sbb
jb
nop
mov
out
sub
mov
pop
cmc
push
test
cmp
jnp
enter
jecxz
and
sub
push
jge
pop
and
call
or
push
push
stos
into
nop
xchg
sub
mov
hlt
sub
mov
stc
aam
lret
cld
repz
rolb
mov
dec
cmp
jmp
xchg
mov
adc
sarb
pop
sub
imul
aaa
sbb
inc
inc
inc
ja
or
sub
push
test
adcb
cmp
lcall
outsl
fsubl
lcall
in
pop
mov
stos
ss
lods
inc
sub
test
sbb
xorl
ja
jmp
es
jecxz
arpl
xchg
pop
imul
es
test
jns
mov
inc
xor
cmp
mull
testb
jg
sub
ss
punpckldq
push
jns
sbb
push
adc
jne
in
cmp
daa
jl
ja
test
sbb
nop
setns
xchg
cmpsl
push
sub
sbb
ret
out
movsb
popa
in
aad
aas
sub
hlt
sub
jmp
sbb
dec
sub
es
mov
mov
sbb
push
sub
sbb
imul
mov
adcb
mov
js
add
or
sub
hlt
leave
hlt
js
fdivr
out
imul
mul
and
stos
and
into
dec
stos
fistl
or
lods
imul
ret
mov
sub
lret
adc
jne
xor
sbb
lock
stc
js
fstl
and
mov
repz
push
fwait
dec
and
addb
inc
out
jns
es
outsb
push
fwait
and
push
lcall
leave
push
fdivs
jle
or
call
cmpsl
xor
call
push
lea
dec
add
out
dec
repnz
dec
sbb
dec
lret
test
in
arpl
lret
lock
sub
adcl
inc
test
adc
test
dec
cld
neg
js
sahf
mov
jns
je
inc
xor
inc
push
mov
dec
xlat
mov
in
pop
or
sar
out
out
jns
out
xor
and
sbb
inc
sbb
dec
cmovne
adc
sbbl
pop
adc
aas
add
mov
imul
inc
pop
hlt
cmp
dec
pushf
push
shll
testb
mov
aas
pop
pusha
or
push
cmp
aaa
sti
arpl
push
mov
xchg
jecxz
adc
push
shlb
adc
sub
lret
cld
sarb
pop
xor
pop
clc
and
cwtl
in
xchg
in
push
mov
pop
pop
shlb
ret
lret
out
mov
xchg
arpl
or
push
int3
fimuls
mov
cli
scas
pop
add
sub
arpl
mov
shlb
insb
push
fdivs
jae
add
stc
in
mov
lahf
sbb
cli
sbb
mov
dec
shl
scas
jns
jecxz
adc
in
xor
fisttpll
fstp
jns
ret
in
sbb
jne
xorl
stos
add
daa
stos
push
loop
push
jo
into
in
clc
sub
nop
xchg
push
nop
cmp
insl
mov
stos
mov
sbbb
or
bound
rcrl
mov
fnsave
in
mov
test
or
imul
out
sbb
enter
lret
or
sbb
pop
mov
js
or
pop
bsr
push
mov
cld
mov
mov
repz
cwtl
dec
fcoml
fidivs
mov
jns
adc
jmp
cli
inc
push
cmp
cli
or
popf
sbb
sahf
shrl
push
and
adc
mov
enter
scas
xorl
adcl
dec
cmp
ljmp
sub
aam
adc
jmp
pop
push
adc
stc
fwait
jl
aas
dec
sbb
mov
insb
das
mov
mull
enter
cmp
sub
push
add
lea
popa
mov
cmp
or
sub
js
inc
mov
test
in
rcrl
mov
js
pop
add
in
mov
or
addl
vpcmpeqd
cmpsb
sbbl
jbe
filds
mov
push
and
jl
in
cli
or
shr
mov
loop
call
mov
sub
ss
adc
hlt
xor
test
daa
sub
bound
scas
lds
test
shll
push
sub
jp
push
xchg
push
mov
xor
mov
or
pop
das
fst
js
cmp
fmulp
mov
or
adcl
xor
sbb
mov
mov
jo
data16
pop
dec
insb
jns
sbb
fldenv
xor
pop
sub
movsb
cli
shlb
add
add
push
sub
cmp
ret
sbb
mov
imul
jns
mov
inc
das
mov
mov
leave
ja
in
dec
inc
fwait
pop
daa
xchg
jns
pop
gs
in
mov
adc
xor
adc
push
aas
mov
pop
sub
mulps
or
lret
leave
and
insb
dec
sbb
scas
mov
inc
mov
addl
fcompl
test
jnp
ss
ret
push
lcall
imul
js
lods
jb
insb
xor
cwtl
pop
movsb
dec
xor
sbb
cs
or
add
push
lods
enter
xchg
cmp
pop
jg
or
sbb
jno
dec
or
add
test
pop
jns
daa
adc
add
jmp
jecxz
jp
jge
pop
adc
ret
sbb
leave
jbe
sub
mov
cmc
sahf
or
sbb
roll
mov
inc
sbb
xchg
ja
js
push
sbb
js
aaa
mov
sub
push
adc
lock
and
pop
into
xchg
jle
dec
outsl
jl
lods
mov
lock
xchg
cwtl
sbb
add
cmc
test
sub
or
xchg
dec
pop
xorl
inc
call
cs
jb
icebp
cld
out
sub
jecxz
add
mov
push
scas
imul
test
pop
jns
mov
dec
mov
sub
in
and
rcll
or
mov
jne
dec
and
jo
loope
ja
jno
inc
test
mov
cmpsb
cmc
daa
icebp
out
sbb
stos
cmp
xchg
jns
in
dec
stos
arpl
sub
xchg
sub
shl
xchg
or
inc
mov
fcom
insl
das
xchg
pop
jo
lods
repz
jo
lahf
add
lods
outsb
jl
push
inc
push
cwtl
rorb
sbb
and
fnstsw
sbb
add
loope
jo
adc
sub
stos
iret
or
push
jns
mov
sbb
imul
ljmp
scas
jle
cli
dec
sub
sbb
mov
stc
sub
icebp
je
pop
loope
jnp
ss
mov
sbb
daa
pop
lahf
repnz
add
ljmp
out
ret
ficomps
adc
inc
rcll
push
sbb
inc
xor
addl
xchg
repz
iret
fnstenv
mov
in
loop
add
mov
lret
js
xchg
cmp
pop
imul
fs
mov
nop
in
fs
test
add
or
push
sbb
and
out
cmpsb
adcb
sbb
shrb
ds
out
dec
fidivl
push
ds
stos
fsts
adc
fiadds
adc
pop
mov
sbb
das
pop
jbe
test
adc
inc
pop
xchg
fstpt
loopne
lods
or
dec
gs
sbb
mov
cmp
lret
dec
push
int3
jg
clc
mov
pop
xlat
dec
sbbl
ss
data16
jecxz
sbb
push
mov
adcl
rcr
stos
je
test
and
push
sub
dec
stos
loopne
call
cmp
push
jle
mov
jl
and
cmc
enter
sbb
sbb
clc
push
clc
xor
inc
int
data16
into
sbb
pop
and
dec
and
mov
js
jmp
push
inc
xor
sbb
leave
inc
lret
aam
arpl
inc
xor
ljmp
push
add
pop
dec
add
jae
mov
xor
xchg
and
sbb
repz
aaa
xchg
inc
scas
loop
ja
es
popf
jmp
sub
gs
jle
clc
xor
push
lock
and
jecxz
movsb
addl
pop
jns
popf
lea
sbb
jmp
popl
xchg
ds
and
sub
mov
icebp
mov
call
mov
aas
xchg
sbb
iret
mov
sub
dec
jne
shrb
push
add
lcall
testb
ret
xchg
mov
adc
push
lret
xor
adc
jne
sbb
adc
xor
jmp
setb
xor
xchg
sti
inc
adc
bound
test
sbb
dec
aaa
repz
outsl
jae
mov
aas
xor
mov
fcompl
lcall
xchg
out
movsb
inc
enter
mov
push
mov
mov
mov
mov
mov
pop
pop
add
sbb
and
dec
mov
test
push
shll
pushf
je
cmp
loop
cs
mov
add
add
fadds
lret
mov
adc
lods
iret
repnz
pop
les
mov
and
shr
ja
push
push
xchg
leave
mov
test
push
jg
stos
push
jns
aas
jo
pop
sub
jnp
add
je
push
inc
mov
js
xchg
cwtl
fcom
sbb
daa
adc
sub
add
movsb
addb
shl
mov
lret
notl
cmp
jns
mov
cwtl
inc
mov
mov
jbe
les
add
cmc
stos
cmc
add
lock
sub
xor
fwait
mov
push
mov
or
insl
aaa
jns
mov
dec
add
test
inc
in
sub
xchg
pop
fsubrs
int3
repnz
js
divl
add
movsl
in
mov
jbe
inc
mov
lds
sub
push
dec
cli
push
jns
xor
push
xor
mov
dec
sbbl
stc
jp
jno
in
sub
sbb
sbb
add
cmpl
mov
xor
jb
out
mov
inc
pop
xor
add
mov
jge
mov
inc
xchg
mov
hlt
push
or
js
xlat
or
mov
fwait
insb
sub
subb
or
mov
sbb
inc
aad
adcl
roll
cmp
xchg
or
mulb
jo
mov
inc
cmc
jle
mov
adc
sti
push
js
in
cmpsb
out
cmp
cmp
sbbl
movsb
ret
cmp
aam
js
push
outsb
addr16
ret
mov
in
push
inc
aas
lods
adc
lods
mov
lret
test
pop
jbe
shlb
jbe
icebp
and
test
roll
clc
xorb
xchg
inc
cmpsb
xor
roll
dec
bound
xor
jg
sub
out
testb
in
xchg
xor
and
add
pop
sub
idivl
mov
cld
out
adc
sbb
imul
xbegin
and
jg
shr
pop
rcll
orl
or
or
cli
mov
mov
sub
ret
mov
jno
iret
into
mov
cmp
and
sub
aas
cmp
ss
rcrl
pop
mov
xchg
inc
push
sarb
adcb
fdivrp
sbb
test
adc
and
adc
pop
outsl
bsf
push
sbb
mov
daa
test
jge
sti
movsl
fucompp
mov
jns
xor
adc
xchg
das
lcall
hlt
sub
add
icebp
jp
aam
jb
fcomp
stos
push
shr
sbb
push
scas
xor
out
stos
fwait
aam
cmp
stos
sub
lods
push
jb
scas
loop
sub
loop
ljmp
leave
scas
and
pusha
sbb
and
mov
repz
rcrb
mov
shl
pushf
orl
pop
xchg
jl
mov
insb
jmp
sub
scas
test
and
adc
lret
add
sub
das
sbb
push
cwtl
lea
push
das
lahf
mov
xor
lock
add
orl
pusha
jbe
fstl
xchg
shrb
pop
xor
sub
test
pusha
inc
rclb
sub
or
mov
aaa
jns
xchg
lods
adc
inc
push
cld
js
xor
inc
into
lcall
and
push
or
imul
out
pusha
inc
inc
vmwrite
adc
pop
sub
add
jbe
fadds
testl
push
insb
int
cmpb
das
repnz
jecxz
imul
icebp
mov
ficomps
leave
js
dec
aam
stc
popa
enter
in
push
outsl
js
sbb
rcll
sbbl
ljmp
mov
push
comiss
push
je
add
add
stos
lcall
push
adc
popa
xchg
scas
ret
pop
add
push
jne
out
rcrl
mov
gs
imul
xchg
mov
ret
mov
mov
push
xchg
js
loope
or
inc
jns
shll
mov
int3
and
ds
aam
cmpsl
jbe
dec
xlat
jle
das
xor
fwait
inc
sub
decl
es
pop
stc
cmp
jle
jne
cld
clc
shlb
js
mov
jns
pop
mov
or
adc
push
stos
xchg
fildl
mov
dec
in
cs
movsl
cmpsb
cmpl
jmp
lea
test
out
daa
cli
push
pusha
aad
and
aaa
sti
jl
jecxz
js
rorb
dec
or
dec
xchg
in
push
and
cwtl
push
jns
mov
mov
repnz
jge
and
xchg
mov
lods
jmp
addl
pop
in
cld
in
mov
sbb
sbb
mulb
js
imul
aad
mov
jp
sbb
out
inc
repz
add
cmp
push
sub
cld
jle
pop
and
sub
and
xchg
xchg
xchg
aas
jns
in
add
sub
or
cmp
xor
or
fs
leave
mov
ljmp
and
push
mov
inc
cmp
lock
mov
dec
and
add
cmp
sbb
lock
sbb
shlb
into
popf
cmpb
adc
fnsave
xchg
iret
xchg
pop
cli
pop
out
popf
pop
orl
xchg
add
sub
dec
repnz
ja
inc
jmp
ljmp
jecxz
mov
sub
xchg
mov
pop
pop
xlat
or
cmc
iretw
rclb
insl
out
icebp
cwtl
or
out
push
jl
push
add
dec
fildl
push
pop
mov
pop
sub
arpl
insl
js
mov
and
xor
shlb
inc
cmp
std
call
xor
mov
loop
sarb
lds
enter
std
das
mov
adc
repz
xor
jle
pop
and
cmp
inc
mov
or
out
popf
cmp
lds
rcll
lret
aad
jne
add
adc
testl
cwtl
rolb
pop
hlt
xor
jge
cli
popf
sbb
and
repnz
sgdtl
lods
jl
hlt
scas
push
mov
in
sbb
add
cs
js
cmp
jmp
repz
cmp
or
mov
pop
test
and
cmp
cmp
imul
adcl
daa
arpl
or
enter
addr16
sbb
ret
jnp
inc
scas
popa
add
inc
lods
daa
and
cmpl
add
jne
jge
jecxz
sbb
xchg
cli
mov
andl
pop
sub
jns
loope
sarb
orl
mov
mov
sbb
cmp
les
or
sub
push
insb
pop
cld
cmc
mov
add
cmp
pop
enter
mov
dec
pop
sbb
sub
fisttps
push
mov
cmpsl
add
sbb
push
push
stos
test
add
mov
gs
loope
jns
push
sbb
xlat
xchg
adc
sub
sbb
and
fwait
xchg
insb
ror
add
std
jp
icebp
addr16
mov
sbb
sbb
fsubs
adcb
jmp
pop
scas
nop
push
subl
dec
mov
pushf
sub
pop
jle
lahf
add
add
sbb
in
jae
orl
mov
push
add
rcrl
aaa
sbb
les
sarl
dec
hlt
lahf
pusha
test
ret
pusha
in
or
int
out
push
je
push
test
mov
aam
or
mov
ss
xor
ljmp
jns
and
icebp
sub
or
pop
xchg
mov
gs
je
cmp
addb
lahf
jb
or
cwtl
js
jmp
clc
sub
cmc
or
sbb
enter
pop
add
aam
mov
rcll
lods
cltd
out
sub
xor
xchg
mov
xchg
ss
jae
mov
xchg
inc
cmp
mov
fsubl
mov
imul
fs
hlt
into
sub
add
test
js
or
fisttpll
movsb
fwait
cwtl
push
inc
je
inc
das
imul
push
mov
sbb
daa
xlat
test
inc
add
mov
push
inc
fstpt
cld
pop
pop
dec
mov
sub
sbb
jecxz
cmc
lea
popf
jo
xchg
out
dec
ds
rcrl
inc
xchg
std
mov
ja
ud1
imul
adc
pop
clts
int3
jbe
cmp
inc
shll
sbbl
jle
ljmp
fidivs
sbb
aas
xchg
popf
jnp
and
cmp
std
adc
ds
js
cli
and
cmp
and
leave
out
stos
lcall
out
iret
cmc
or
pop
imul
jns
xchg
fistps
arpl
add
mov
pop
jmp
sbb
scas
fnsave
adc
nop
outsl
sub
in
pop
adc
push
jbe
adc
add
xor
mov
into
or
aas
sub
js
aad
sub
dec
cmpsl
cmp
lods
es
dec
and
das
aas
and
inc
sahf
aaa
lret
ret
pushf
xor
mov
fstpt
aam
pop
mov
fwait
adc
push
std
cmp
jnp
roll
scas
push
adcl
inc
xchg
lods
jecxz
loopne
imul
xor
or
sbb
call
subl
mov
add
js,pn
cmpsl
jbe
pop
paddusw
adc
xor
cmp
iret
xchg
faddp
movsl
repz
pop
aaa
in
xchg
sbb
int3
adc
sbb
sub
cli
or
sbb
pushf
lds
mull
jns
lahf
mov
mov
ljmp
cmpsl
add
divb
subl
inc
pop
sbb
pushf
js
pop
cmc
lea
mov
xor
ljmp
xor
sbb
xorb
faddl
test
addl
nop
pop
pop
jne
xor
cld
cmp
mov
into
mov
int
mov
sub
pop
jge
xor
mov
jle
adc
sbb
dec
pop
jmp
xor
sub
enter
add
popa
outsl
addr16
cmc
leave
mov
sub
repz
sbb
mov
sub
push
lods
push
push
push
into
push
mov
sbb
adc
cmp
jg
clc
sub
dec
ss
mov
inc
daa
dec
push
xor
ret
mov
nop
cmp
cld
and
sub
inc
je
lahf
test
aas
sbb
mov
testb
sub
sub
daa
mov
fimuls
mov
aam
xor
pop
add
vsubpd
jno
push
movsb
push
inc
and
popf
sbb
std
cmp
mov
sbb
sbb
mov
cmp
popf
call
fwait
cld
mov
loopne
xchg
cmp
loope
mov
cwtl
aas
subl
pop
and
sub
repz
int
pop
pop
shll
js
inc
cmp
sub
in
test
xchg
mov
sub
pop
je
clc
pop
clc
mov
jnp
xor
lahf
or
sub
gs
cmp
mov
aas
pop
jbe
in
hlt
sbb
push
add
cmp
andl
jns
xor
cmpb
sbb
ds
push
adc
ret
nop
xlat
inc
xor
push
push
movsl
xchg
or
jns
push
mov
dec
sub
mov
jns
mov
je
sub
adc
icebp
hlt
or
int3
je
jmp
andl
sbb
sbb
xchg
inc
jmp
pushf
add
and
jns
push
sti
outsl
push
inc
into
mov
push
std
bound
sbb
into
mov
out
inc
mov
vmread
fwait
adc
pop
pop
adc
fsts
push
push
xchg
pop
jge
lret
jns
flds
mov
mov
frstor
cmp
jne
loopne
stos
test
jg
fildll
inc
fcmovnu
jmp
push
int3
cmp
add
jbe
and
pop
sbb
pop
jnp
cmc
dec
cwtl
push
mov
jge
pop
test
pop
js
push
cltd
lret
dec
out
sbb
rcrl
std
sub
scas
push
pop
mov
sub
fcomi
cwtl
insb
add
es
cmp
cmp
js
cmp
shrl
lods
sub
push
ret
jp
pop
adc
adc
jecxz
jne
mov
cmp
mov
lret
fsubr
adc
shl
push
test
cwtl
es
add
in
shll
cmp
imulb
data16
aam
or
in
lods
and
cmpsb
pop
jns
or
pop
ljmp
call
mov
cmp
ds
xorl
xor
cmp
push
ret
jo
inc
ja
shrl
mov
js
test
movntps
xor
rolb
fbstp
mov
rclb
jle
imul
gs
nop
imul
cmp
stc
mov
rorl
jp
mov
insl
test
les
into
pop
inc
repz
fnstenv
jg
lcall
inc
push
fildll
add
fsubl
call
nop
js
mov
xor
push
jae
xorl
mov
xchg
inc
rcr
insb
fisubrl
xor
mov
inc
int3
das
dec
daa
cmp
nop
cmp
mov
in
dec
mov
loop
out
pop
stc
mov
rcrb
rorl
add
add
ds
adc
lea
inc
sub
lds
loop
outsl
or
pop
adc
call
sub
pop
mov
cmp
mov
int3
push
arpl
mov
xchg
sub
repnz
mov
jg
fistl
aas
and
rorb
cltd
enter
mov
mov
mov
movsl
dec
mov
fwait
es
pop
nop
or
jb
pop
pop
jns
dec
loop
out
out
inc
inc
push
outsl
cmp
stos
sbb
sti
ja,pn
sub
repnz
inc
pushf
ljmp
roll
jge
add
sbb
mov
xor
jmp
outsl
vpmullw
cmpsl
pop
push
popfw
add
mov
and
add
testl
rolb
ret
sahf
out
adc
pop
push
dec
sub
iret
xchg
rcll
sbb
xchg
xchg
adc
mov
jecxz
sbb
enter
cmp
push
addl
cmp
iret
push
jbe
in
add
ret
cmc
or
pop
loop
divl
scas
jnp
inc
cld
je
fsubl
fnsave
data16
cwtl
xor
arpl
lods
and
pop
aad
adc
mov
adc
cmp
pop
stos
lods
subl
push
and
dec
jbe
cmp
sahf
fildll
cmp
dec
add
insb
out
lret
pop
rolb
mov
and
sbb
pushl
jne
imul
sbb
cmpsl
pop
jns
mov
sub
loop
push
add
push
xor
out
fwait
orl
mov
sbb
xlat
clc
or
push
dec
fiaddl
dec
dec
cld
mov
ret
lods
inc
pop
push
mov
pop
js
test
pop
push
xorl
out
mov
cmp
and
fdivl
in
and
cmp
sarb
mov
popl
nop
xor
push
sbb
das
js
lcall
sarb
and
rcl
cmpsb
cmpl
imulb
mov
sbb
adcl
and
and
cmp
add
rcrb
mov
lods
add
pusha
icebp
sub
mov
sbb
mov
xor
cmpb
jge
mov
das
cltd
pop
or
mov
cmp
pushf
fstpl
aaa
jnp
repnz
sbb
dec
cmp
mov
loopne
lret
loope
push
jle
and
sbb
aad
loopne
test
ret
sbb
fs
sub
cltd
loopne
sbb
dec
test
sub
int
mov
movsl
mov
add
outsl
iret
cmpsl
ret
and
sbb
dec
cltd
std
nop
mov
and
sbb
xor
cmovo
scas
sbb
cmp
sbb
jmp
add
in
xor
or
push
orl
int
repz
mov
addr16
sub
sub
jns
fldl
mov
sub
repnz
inc
sbb
into
cli
pop
and
adc
fnstcw
repnz
jne
sbb
scas
fidivrl
mov
jmp
insb
es
cltd
loope
in
fimull
sub
in
stos
idiv
jmp
mov
pop
outsl
sub
lcall
push
movswl
push
jbe
stc
sbb
fwait
push
mov
sub
push
subb
or
xchg
fildl
jno
outsl
mov
jmp
fisttpl
roll
cmc
sbb
sub
mov
js
ds
bound
add
mov
sub
xchg
lret
jae
lret
in
daa
xchg
xlat
sbb
shr
cmpb
sub
ja
rcl
cwtl
sbb
mov
scas
xchg
xor
addl
jge
rorl
mov
dec
pop
sbb
andl
in
sbb
xchg
add
pushf
jg
sbb
mov
push
dec
jae
mov
test
call
sbb
push
aaa
or
scas
push
sbb
dec
iret
mov
add
jb
lahf
push
jge
scas
cmp
add
jmp
jg
scas
and
test
test
jle
lds
fnstsw
inc
adc
mov
aaa
pop
cltd
fistpll
push
out
cwtl
fsubp
cwtl
daa
scas
scas
sbb
ret
sub
push
test
sub
rolb
or
inc
mov
in
add
add
jl
inc
subb
mov
pushf
js
push
fildll
mov
push
outsb
sub
je
jl
mov
call
pushf
daa
sbb
xorl
ljmp
popa
dec
movsb
push
repz
adc
xorl
pop
mov
mov
inc
dec
icebp
std
insb
ret
jnp
cmpb
loopne
dec
cmpsb
imul
add
add
fwait
push
js
sbb
mov
mov
lock
testl
cwtl
sbb
arpl
psubw
pop
mov
pop
popa
divl
or
adcl
xor
ja
subl
pop
loop
sahf
lahf
loopne
xor
mov
push
sarl
cmp
stos
loope
xor
mov
inc
jns
sahf
inc
inc
das
inc
test
popa
pop
dec
jns
bound
sub
mov
xor
mov
stc
out
and
mov
fisttps
or
and
mov
adc
and
repnz
pop
sub
jmp
push
dec
xchg
ljmp
mov
adc
xlat
movb
cmp
jns
mov
xchg
arpl
outsb
xchg
push
adc
cld
and
shll
sbb
cli
scas
das
dec
rclb
push
cmp
mov
or
or
xchg
sub
add
sbb
clc
imul
adc
leave
jge
push
mov
push
popf
push
rolb
mov
pop
sarb
or
fildll
lea
pop
mov
pop
xchg
repnz
cmpsb
loopne
jb
adc
sub
xchg
mov
jns
icebp
scas
mov
mov
movsl
sub
add
sbb
pusha
xchg
adc
or
mov
test
and
push
cwtl
js
mov
test
scas
pop
ret
mov
imul
mov
lcall
data16
and
jnp
jns
sbb
imul
hlt
nop
fcmove
add
mov
push
adc
push
adc
out
push
stos
xchg
aas
mov
push
mov
xlat
adc
cwtl
xor
and
lahf
sbb
stos
fstpt
push
mov
inc
mov
iret
and
mov
inc
adc
loopne
mov
testl
scas
out
repz
jl
pop
and
jns
mov
aad
sbb
out
push
and
sbb
rclb
test
sub
in
and
and
add
or
fs
sti
aaa
inc
push
inc
stos
or
push
jns
mov
aad
lret
sub
sub
call
push
cwtl
or
add
mov
sub
jg
out
xchg
leave
aaa
jge
adcl
jge
lock
lock
dec
sub
cmp
imul
movsb
js
repnz
jp
lods
cmp
stos
popf
test
sbb
insb
imul
outsl
movb
adc
lock
repnz
test
cmp
or
imull
mov
sub
cmp
xchg
inc
mov
es
aaa
adc
loop
mov
jmp
sub
jbe
es
movb
adc
inc
ret
or
or
jno
mov
cmc
loope
xchg
sbb
inc
ds
cs
xorl
enter
test
sub
je
xchg
adc
sub
jp
nop
xchg
test
jo
mov
sub
mov
mov
and
pusha
sub
js
xor
jns
dec
imul
sbb
std
pop
push
fldenv
jns
push
sub
jecxz
sub
stos
daa
and
push
mov
sbb
js
sub
jae
adc
insb
das
mov
mov
inc
test
xchg
loop
les
les
jp
leave
in
fistps
sbb
in
xchg
cld
mov
das
inc
sub
adc
xor
fsubrs
iret
sub
jno
xchg
pop
push
cs
xchg
iret
pop
int3
sbb
arpl
in
jmp
pop
jnp
lods
sub
jecxz
pop
in
subl
stos
in
lret
xchg
cld
or
mov
mov
xorb
mov
popa
out
mov
xorl
mov
jl
js
inc
or
sbb
and
sbb
add
loope
inc
dec
add
hlt
push
fldl
jg
mov
jns
into
or
push
rcrb
mov
pop
xchg
mov
cs
xor
leave
rcrb
vmwrite
shll
jge
outsb
nop
jg
sbb
sbb
pop
das
jns
mov
push
sub
stos
nop
adcl
stc
add
pop
jge
lret
inc
pop
dec
das
jo
and
mov
ljmp
sbb
or
lcall
cld
mov
pop
push
push
aad
sbb
cmp
outsl
addb
push
mov
sbb
jns
sub
fs
pop
pop
test
cmpsb
and
js
cwtl
adc
iret
sahf
outsb
movsb
and
loopne
vmovlpd
jg
inc
inc
sub
sub
xor
in
clc
ret
lret
mov
mov
lret
mov
stc
andb
nop
stos
test
mov
outsb
cmp
rcrb
cmpsl
adc
sbb
cltd
scas
xchg
push
adc
mov
ret
out
insb
mov
pop
mov
test
loopne
mov
es
cmp
cltd
jmp
pop
or
sbb
cmp
or
xchg
negb
inc
sbb
iret
xor
add
fnstsw
mov
adc
popf
xchg
sub
test
adc
bound
push
push
gs
xor
inc
xchg
js
jl
out
jmp
mov
push
sub
push
pop
scas
getsec
push
aad
addb
inc
iret
sub
cmp
lcall
outsb
lea
test
dec
pop
fwait
daa
lods
mov
cmp
cmc
sub
dec
jb
sti
ffreep
and
mov
and
daa
or
sbb
rorl
inc
cltd
or
mov
leave
aad
lret
jp
jl
das
ss
sbb
push
cmp
mov
rep
sub
xchg
das
sbb
push
stos
cmp
aam
xchg
mov
jns
jo
mov
sub
imul
rcrl
ljmp
mov
sub
pop
lret
mov
xchg
lcall
mov
sub
out
and
push
dec
xchg
sub
arpl
sub
out
negb
loope
cmp
movsb
shrb
stc
xchg
xor
fdivrs
sbb
push
sub
imul
xchg
test
stc
xchg
jge
xchg
jmp
xchg
inc
push
iret
mov
and
sbb
clc
js
das
push
jge
ret
add
lcall
xchg
cwtl
call
mov
mov
sbb
mov
call
cmc
addr16
sbb
sub
cmp
pop
sbb
into
outsw
test
mov
xchg
enter
cltd
sub
sbb
push
xor
xchg
jne
dec
les
sbb
popl
int3
into
jbe
jno
icebp
xchg
adc
push
xor
negl
repz
xorl
movlps
negb
dec
mov
and
sub
xchg
mov
sbb
rorb
sub
push
adc
ja
sub
xchg
test
and
jl
jae
sbb
mov
rol
inc
movsb
loop
push
cmp
das
pop
xchg
or
call
xchg
jge
hlt
push
cmp
mov
jns
ret
mov
sbb
jno
out
cmpsb
cmpsl
dec
ffreep
mov
bound
test
addl
out
cs
ret
cltd
sar
adcb
out
mov
pusha
fcoml
das
inc
in
lahf
sub
add
cmp
or
jmp
aaa
or
mov
pop
fcoms
xchg
pop
sbb
dec
addr16
insb
xorl
adc
sbb
pop
test
fadds
pop
inc
sub
daa
sbb
mov
pop
icebp
cmp
mov
xorl
xchg
push
dec
cltd
mov
xchg
and
or
fdivrs
adc
repnz
loop
mov
fldcw
push
xchg
sbb
aas
push
lds
sbb
pop
int
cmp
push
ret
scas
mov
mov
enter
pop
adc
jecxz
sub
and
sti
push
enter
addr16
dec
mov
cwtl
arpl
lods
outsl
push
dec
push
addl
xchg
ja
and
mov
testl
jns
cmp
addl
notb
repz
inc
cwtl
les
popa
xor
das
jns
iret
pop
test
xchg
pop
imul
sbb
leave
mov
orl
lret
adc
fnstcw
xchg
loopne
shrl
daa
and
int3
mov
fdivrs
sub
cmc
data16
cmp
sub
adcb
sub
stos
inc
push
push
sbb
in
les
lahf
inc
mov
adc
js
cs
shrb
data16
movsb
xchg
test
sub
sub
xor
cld
data16
dec
push
stos
xlat
aaa
cwtl
push
cmp
cltd
cmp
das
insl
add
pop
outsb
bnd
sbb
add
aad
je
js
push
inc
test
xor
sub
mov
out
sbb
mov
xor
scas
mov
ja
xchg
cmp
add
add
cmp
enter
mov
lods
jo
sarb
and
adc
popf
ja
cmp
cmpsl
xor
imul
pop
into
filds
xchg
cmpl
xlat
adc
bound
inc
add
ds
mov
mov
dec
popa
mov
jecxz
cmp
fistl
pop
sbb
sub
jecxz
add
aas
mov
inc
repz
cmp
pop
inc
out
imul
inc
add
push
and
xchg
fistpll
push
mov
bound
loopne
mov
sbb
outsl
clc
loope
mov
and
mov
mov
jo
cmp
add
dec
nop
sub
pushw
xchg
sbb
fistps
insb
adcl
insl
cmp
mov
xchg
pop
jge
jno
mov
outsl
mov
test
pop
xchg
fsts
idivb
ja
or
sub
out
int
aad
xchg
xor
push
outsl
sub
arpl
sbb
clc
cmp
addb
stos
mov
es
push
fnstcw
rsm
push
sub
mov
or
sbb
aaa
out
loope
aaa
addl
inc
sub
sbb
jp
xlat
push
jns
orl
mov
add
nop
je
push
pusha
insl
mov
sub
adc
daa
inc
xchg
loope
sub
loopne
and
jl
popf
push
adc
stos
fldcw
adc
mov
in
stos
stos
dec
sub
mov
loope
stos
movsb
cltd
push
lock
jb,pt
and
or
rcrl
cmp
cmp
xor
insb
outsb
mov
or
fnclex
mov
and
rolb
popf
adc
sub
aas
fmul
ja
sub
or
xor
insb
sbbl
repz
arpl
cmp
sub
loopne
ljmp
int3
mov
js
cli
add
add
inc
xlat
pop
xchg
mov
and
add
ret
pop
inc
push
insb
in
inc
loop
popa
sbb
xlat
sub
sub
iret
fldcw
je
xlat
sbb
imul
out
test
data16
loop
sub
aaa
sub
xor
rol
ret
jl
and
js
ret
ja
push
sbb
pop
punpckhwd
pusha
push
int
test
mov
jns
jb
mov
sub
jp
ss
jns
cld
roll
mov
movsl
fwait
push
jbe
sub
repz
xor
cs
lods
rcll
sarb
faddp
mov
js
xchg
inc
int3
or
adcb
movsl
fmuls
ret
cmp
add
aam
ljmp
lea
cli
scas
sar
pop
jns
mov
mov
das
pop
adc
pop
jae
mov
inc
loope
rcl
sub
scas
clc
in
adc
enter
test
into
pop
jg
lcall
cmc
xchg
lret
jmp
mov
jl
pop
mov
mov
jns
int3
out
ret
subl
ja
aas
gs
fsubl
mov
es
orl
mov
cmpsl
icebp
adc
andl
outsb
adc
mov
xorl
fdivrl
jbe
pop
jg
or
adc
pop
scas
jle
lcall
movl
lds
sti
and
sub
inc
cmpsb
inc
mov
jp
xor
mov
push
jle
jno
out
xchg
cs
ja
cmpsb
mov
sub
aas
ljmp
xor
rcrb
and
cmc
pop
std
mov
inc
aam
sarl
repnz
inc
lea
jmp
sub
jg
pop
sbb
nop
inc
fs
xchg
dec
mov
pop
pop
lahf
sbb
push
sbb
xor
xchg
push
fcmovnu
mov
dec
mov
rorl
jg
ret
sbb
mov
stc
xor
outsl
loope
xchg
sub
popf
or
and
mov
xchg
mov
dec
adc
arpl
sarl
jmp
cmp
sub
movsl
out
in
into
mov
jbe
xchg
xor
and
hlt
push
xchg
pop
aas
adc
sbb
cmp
sbb
sbb
sub
cmp
iret
sbb
push
fmulp
sbb
xcrypt-ecb
cmpsl
mov
cmp
notl
rcll
in
xor
jbe
fwait
clc
cmc
or
scas
or
ret
mov
stos
add
aad
pop
fbstp
pop
leave
and
icebp
cwtl
xor
xchg
sub
mov
sbb
xor
sahf
or
fwait
sbb
andl
gs
pop
orl
and
jns
cwtl
dec
jmp
popa
add
mov
add
push
es
scas
sahf
ja
std
mov
pop
cmp
sub
addr16
ficomps
xchg
mov
push
test
mov
pop
jne
and
lea
mov
aad
pop
repz
cmpb
pop
fistpl
push
mov
daa
nop
mov
sub
jmp
mov
pop
sbb
notl
jae
je
data16
cmpl
icebp
jno
sbb
dec
scas
movsl
dec
fs
out
push
mov
bound
insl
push
jns
and
cmp
and
mov
jno
push
mov
sbb
mov
into
mov
out
sbb
ret
enter
jg
cmp
fmulp
outsb
popf
mov
jnp
sti
arpl
xor
xor
pushw
rolb
and
mov
popf
dec
mov
fs
jl
loop
stos
sub
push
mov
xorl
adc
add
cmpl
mov
fdivrl
adc
ret
das
les
add
aaa
loope
stc
fistpll
out
fwait
xor
dec
adc
mov
stos
test
push
dec
hlt
ljmp
cwtl
cli
adc
rclb
and
movsb
or
xchg
push
add
rcrb
lret
lea
mov
ret
push
lods
and
pop
and
mov
popa
lock
ljmp
inc
and
jnp
xorl
xchg
jns
xchg
mov
inc
sub
sub
xor
jns
cmp
in
pusha
push
ja
repnz
inc
pop
push
push
push
push
fimuls
inc
test
xchg
mov
dec
fldl
sbbl
fcomp
jp
xor
push
mov
ss
fisttpll
in
inc
inc
in
or
mov
pop
jae
adcl
mov
aas
cmpl
push
pop
lret
pop
push
sub
dec
outsl
sbb
inc
sub
or
inc
sbbl
aas
mov
cld
cld
test
push
loopne
or
sbb
subl
inc
cmp
js
aam
mov
cltd
lods
shrl
push
clc
roll
xchg
xor
mov
bound
mov
test
test
icebp
xor
and
or
stos
push
sbb
add
mov
xor
or
js
and
sbb
mov
add
decb
jmp
jne
inc
add
cmpsb
in
mov
in
adc
cmpb
subl
or
jns
out
cmpsl
inc
pmuludq
popf
fsubs
popf
sbb
sahf
mov
andl
mov
leave
cmpsl
daa
js
mov
mov
sbb
xchg
and
push
and
and
imull
pop
adc
inc
and
insb
outsl
xor
add
sbb
jl
push
sbb
sarl
sti
loop
iret
sub
mov
jnp
push
or
dec
xor
jmp
pop
stc
scas
repz
xchg
sbb
or
sbb
xor
jns
dec
cmp
ss
sbb
cli
inc
lds
leave
sub
xchg
and
push
je
rolb
sbb
into
add
dec
xor
inc
mov
sub
jge
mov
fcomps
push
and
lods
xor
lahf
cmpsl
mov
mov
adc
mov
add
cltd
sbb
outsb
jecxz
subl
out
sti
scas
adc
sub
push
adc
push
inc
inc
cmpl
push
mov
loopne
js
mov
mov
jp
in
xor
js
sub
repz
test
sub
scas
bound
stos
cmp
cmpsl
insl
stc
xchg
mov
outsl
or
cmp
fsubp
cmp
pusha
inc
sub
mov
stos
push
mov
sbb
xor
inc
jle
jno
in
add
sbb
add
jecxz
mov
jnp
inc
lods
int3
sbb
jle
or
stos
and
les
push
sub
pop
jns
jecxz
dec
je
stc
std
dec
inc
ret
mov
mov
ftst
shl
test
popa
int3
jmp
js
out
sbb
arpl
push
iret
clc
lock
xor
cmp
movsl
scas
adc
movsb
add
add
add
movsl
xchg
dec
lock
jle
adc
inc
adcl
cmp
shr
push
addr16
rsqrtps
mov
cmpsb
cld
sbb
add
filds
push
imul
aad
lea
dec
fwait
les
jb,pn
stc
jp
xchg
mov
push
push
jns
mov
sub
sub
inc
mov
fistpl
mov
aas
setns
pop
test
xchg
mov
js
jp,pn
jecxz
push
mov
xor
mov
jmp
and
adc
out
addb
fsubp
js
icebp
pop
insl
int3
into
les
sub
or
xor
mov
jo
inc
mov
fistps
push
std
ret
xchg
xchg
add
cmc
in
enter
xchg
dec
insb
lds
out
add
ja
je
data16
mov
sub
xor
pusha
or
inc
or
jae
mov
sub
cld
pop
mov
clc
lods
mov
xchg
jns
pop
dec
cmp
cmpsl
gs
xchg
popa
shr
call
call
sbb
repnz
jae
test
mov
aaa
addl
push
ror
sbb
stos
push
data16
lea
ss
push
jne
jnp
xor
inc
sahf
icebp
mov
pop
sub
xchg
or
mov
dec
dec
clc
pop
jl
adcl
les
int3
add
xor
movsb
shrb
pop
les
ret
jecxz
in
add
das
add
js
pushf
scas
subl
mov
add
out
sbb
rorb
push
lea
sub
jo
sbb
push
lret
pop
mov
push
inc
movsl
lcall
subl
sub
dec
cmp
ret
mov
dec
sub
fwait
daa
sbb
mov
add
mov
fwait
stos
push
popl
jo
push
cmp
sbb
aaa
ja
mov
imulb
dec
repz
shll
add
and
add
orl
xor
pop
push
dec
jb
inc
inc
or
rcrb
repz
sbb
sbb
fs
sti
mov
insl
sbb
cs
clc
add
insb
ret
jns
mov
ljmp
sub
xor
sub
cmpsl
cmp
mov
sbb
mov
es
pop
aas
push
imul
or
scas
sub
jb
subl
push
adc
pop
jp
and
xor
jbe
jge
shll
adc
sbb
sbb
sub
scas
rcl
arpl
stos
lahf
sbb
sbb
lock
push
negb
xchg
lods
inc
dec
cmp
xchg
in
inc
dec
xchg
cmpsl
cltd
pop
add
addl
adc
pop
stc
sub
clc
jne
ljmp
js
jl
adc
movsb
sub
es
out
xchg
into
imul
fisubrl
pop
push
xor
subb
dec
in
inc
test
jne
clc
das
xchg
push
lcall
sub
js
es
xchg
cmp
xchg
add
js
ret
mov
mov
jp
stos
ret
sub
lret
dec
test
and
xchg
add
ror
sbb
sub
mov
icebp
je
push
insb
subl
add
mov
imul
shll
jo
aas
in
call
adc
adc
test
xchg
and
ret
xchg
adc
int3
mov
push
sub
dec
loopne
sbb
les
ret
push
fnstcw
movl
xchg
aam
mov
jmp
je
and
push
loope
call
cmp
dec
mov
cmp
sbb
iret
cmp
dec
aad
or
fmul
dec
pop
sbb
das
pop
xchg
adcl
sub
xor
cmpsl
iret
jmp
mov
xor
jne
mov
scas
repz
call
adc
inc
cltd
dec
xchg
push
xchg
jp
dec
jae
mov
inc
sbb
dec
rcrb
cltd
or
push
sub
lret
popa
xor
or
cmpsl
jo
jns
xor
mov
fcoml
call
js
cwtl
xchg
mov
sub
xchg
in
mov
sbb
sub
lret
xchg
sub
cmc
sbb
dec
aam
inc
add
fnstsw
lock
push
test
adc
ret
xchg
xor
out
into
test
dec
xor
into
repnz
frstor
movsb
xor
dec
test
or
lods
repz
pushf
xlat
jge
mov
sbb
fidivrl
iret
cmpsb
js
mov
test
sub
or
ljmp
dec
jp
or
enter
mov
shl
ja
and
mov
ds
pop
jns
adc
repz
push
movsl
or
cmp
rorl
aas
adcb
jne
cmpl
pop
and
movsb
add
lret
inc
add
xorl
or
mov
fistl
dec
fs
pushf
dec
xor
fsubrl
dec
stc
icebp
jecxz
xchg
sub
inc
iret
inc
xchg
data16
lcall
sbb
loopne
jmp
jno
and
rorb
shl
fists
loope
push
cmp
enter
std
sbb
adc
pop
mov
dec
mov
mov
jbe
imul
mov
pop
pop
xor
imul
mov
imul
adc
js
icebp
out
in
ret
adc
sahf
insl
inc
rcrl
out
std
push
cmp
iret
sbb
xchg
xor
int3
rclb
mov
test
sbb
and
xchg
jns
cmp
call
jae
lods
js
mov
nop
fsubs
pop
cmp
imul
xchg
xor
mov
in
jge
loope
lahf
clc
inc
mov
loope
cmc
push
aam
mov
nop
ficompl
xchg
ss
loop
ja
aas
add
pop
xor
xorb
and
jp
jns
fwait
mov
mov
sub
cld
jge
push
es
adc
out
ret
loopne
dec
jl
iret
sbb
jno
lret
adc
adcb
push
adc
stc
sub
sarl
xchg
daa
push
out
cmp
stos
movsl
clc
enter
sbb
sbb
push
jp
test
push
sub
or
roll
mov
cmpsb
push
jle
loope
shl
mov
clc
lea
and
in
lock
gs
stos
insb
sbb
jae
filds
leave
cmpsl
nop
fstl
sti
or
sbb
xorl
clc
inc
mov
xor
in
xchg
outsb
mov
out
loope
jge
sbb
dec
and
mov
dec
gs
fidivs
adc
jo
cwtl
in
mov
test
aad
pop
cmp
inc
mov
pop
test
mov
dec
call
mov
insb
icebp
jb
sahf
pop
ficomps
out
std
int
sbb
outsl
push
stc
data16
test
xchg
js
mov
sahf
cmp
cmp
test
sub
pop
cmpb
int
pop
mov
sbb
sub
or
pop
mov
je
jns
pop
in
lds
cmpl
sub
mov
pop
or
lcall
les
push
or
cmp
das
cmp
fdivr
test
sub
test
mov
loope
adc
xor
ja
push
arpl
adcl
lods
mov
pusha
xchg
dec
xor
cwtl
movsl
inc
sbb
outsb
out
dec
nop
out
js
or
push
outsl
minps
test
fidivs
cs
maxps
jg
aaa
cli
insb
div
movsbl
jns
lret
dec
add
std
sub
stos
xchg
adc
pop
imul
push
mov
sub
cld
mov
sbb
pop
cmpsl
orb
aas
int
rcl
mov
xor
dec
jns
lods
mov
mov
cli
mov
loopne
loopne
xchg
xchg
mov
hlt
fistpl
xchg
rorl
cmp
mov
aas
daa
cmp
xor
ja
or
ja
xchg
aam
mov
repz
cwtl
cmp
fdivr
sbb
fistpll
push
add
sub
sti
arpl
push
adc
xor
xchg
add
das
cmp
test
hlt
mov
pushl
xchg
rolb
je
repz
mov
es
or
enter
or
fmul
adc
or
cltd
enter
xor
popa
lahf
push
test
jno
adcl
andl
or
stos
sub
xchg
xchg
shlb
pushl
jle
cwtl
mov
jl
sti
js
js
dec
sub
int3
subb
sbb
mov
pop
js
mov
jnp
jl
pop
cld
sbb
add
push
xor
test
test
xor
sub
add
or
sub
mov
sbb
push
nop
cmpsb
js
push
sbb
jg
pop
mov
add
push
inc
push
sahf
call
mov
sub
dec
fistpl
cmc
js
cmpsl
jno
adc
jmp
stos
cltd
test
dec
rcrb
ja
movsb
push
or
cmp
mov
mov
sub
loope
into
jp
xor
pop
pop
fiaddl
push
pop
movsb
sub
and
sub
pop
xor
stos
mov
sub
xchg
pop
test
hlt
mov
cmpxchg
push
popa
sub
lret
inc
lcall
jle
and
sbbl
xor
inc
hlt
adcl
mov
jae
fsubr
call
daa
test
and
pop
mov
js
or
dec
sub
push
addr16
push
or
sbb
aaa
dec
or
sub
inc
sub
into
lods
and
call
cmc
imull
int
neg
jecxz
insl
out
xchg
sbb
push
push
mov
sub
add
aaa
mov
insl
fs
out
adcl
fsub
sbb
in
cwtl
adc
test
and
mov
das
add
or
icebp
in
mov
or
das
into
clc
sub
mov
inc
fdivl
mov
sub
mov
pop
and
pushf
inc
ret
sbbb
popf
mov
mov
inc
xor
leave
jae
sbb
aaa
ret
test
sbb
stos
or
mov
xor
mov
pop
jnp
xor
vmwrite
scas
stos
push
cmp
dec
sbb
push
and
jnp
xor
mov
into
jnp
imul
lcall
push
imul
push
pop
aam
pop
and
test
pop
stos
ja
aas
std
jmp
xchg
cltd
sbb
jl
es
idivb
jle
iret
adc
xchg
cmp
in
sub
jp
loopne
jl
adc
cmp
inc
jg
mov
sbb
mov
jle
mov
cmp
jl
lock
les
xor
push
icebp
stos
sbb
out
pop
sbb
mov
mov
cmpsb
and
ljmp
lods
xlat
fsub
das
pop
ss
xlat
ljmp
test
insl
cmc
push
mov
xchg
std
add
fists
inc
pop
sbb
dec
mov
stc
ret
in
movsb
dec
cs
ss
movsl
cmp
and
out
jb
xchg
js
or
iret
mov
inc
xchg
or
icebp
call
add
scas
xor
or
outsl
ja
cmp
out
inc
xorb
pop
mov
sub
sub
sbb
ret
jno
push
fcomi
jne
out
repz
and
aaa
add
ret
ss
inc
mov
lret
cmp
push
jno
inc
adc
mov
rcrl
add
imul
sbb
jbe
ret
inc
iret
enter
in
lret
and
sub
aad
jecxz
adc
xor
sar
push
data16
shll
out
clc
push
cmp
loop
ret
std
sbb
lret
test
push
xchg
fwait
gs
jb
ds
adc
jp
leave
pop
pop
sub
mov
push
lret
push
mov
lcall
test
aad
sbb
bound
push
mov
inc
cs
adc
or
push
mov
mov
pop
pop
xor
int
roll
insl
ss
andb
mov
add
and
xor
test
adc
adc
xchg
vfmsub231sd
mov
test
ja
daa
jns
jl
fsubs
sub
push
sbb
xchg
xchg
mov
sbb
push
aas
sbb
xor
xchg
mov
js
xor
addl
mov
js
inc
dec
inc
popf
dec
daa
cmpsl
sub
mov
pop
mov
imul
scas
nopl
outsl
adc
lds
jp
jecxz
xchg
push
fs
js
into
packssdw
push
cmpl
fsubs
mov
movsb
clc
mov
call
or
testb
cmp
pushf
outsl
jl
jmp
sub
fwait
popw
inc
jbe
jae
add
xor
mov
mov
lret
out
cld
test
rorb
add
adcl
jl
cmp
mov
out
pop
cmp
push
dec
sub
sarl
sub
xchg
je
incl
mov
test
inc
jecxz
filds
aas
add
cli
cwtl
dec
lock
std
movsl
mov
fmull
dec
jne
popf
cmp
stc
rorb
js
imull
lret
gs
pushl
and
jnp
fistl
mov
test
pop
lret
lcall
sub
into
push
mov
sub
add
xor
mov
jl
cmp
test
mov
dec
inc
js
cmp
pushw
out
js
push
lret
out
pop
inc
pushf
xchg
movsl
gs
ljmp
mov
in
nop
js
mov
cmp
sub
dec
xchg
enter
scas
loope
mov
sub
sub
dec
cwtl
popf
cli
push
add
out
push
cmp
adc
sbb
adc
orl
pop
pop
jns
sub
dec
mov
es
addr16
sbb
and
in
lea
test
pop
mov
ret
pop
push
push
pmaddwd
pop
dec
rcl
out
push
sub
or
jmp
mov
add
loop
sbb
push
fdivrs
mov
cmc
push
pop
jns
xor
inc
sub
mov
adc
js
int3
hlt
push
dec
mov
out
inc
jne
lods
mov
push
push
adc
andl
cs
dec
mull
movl
dec
cmp
cs
jb
pop
std
aaa
sbb
stos
cmp
adc
flds
sbb
inc
flds
imul
mov
cmp
sbb
and
dec
adc
add
sub
mov
js
sub
iret
mov
or
adc
mov
cmpsb
andl
sub
out
xlat
ret
js
push
movsl
out
mov
add
outsl
xor
scas
adc
jne
lds
test
cmp
loop
cmpsb
outsb
push
push
int3
inc
jmp
jno
mov
sbbb
std
mov
cmpsb
inc
lret
mov
aaa
shlb
mov
adc
sub
mov
jnp
dec
or
test
cmp
pop
pop
ds
jns
iret
mov
test
inc
xor
xor
sub
loope
sbbl
jmp
and
loopne
lcall
sub
lcall
sbb
arpl
xchg
jg
out
push
jo
lret
push
inc
jp
leave
pop
lea
subl
jmp
push
lcall
insb
jl,pn
lea
fidivrs
incb
sub
mov
cmpsl
sbb
mov
out
mov
sub
leave
jg
push
ljmp
mov
lea
jl
cmp
int
leave
arpl
mov
sbb
outsl
sub
in
add
imul
pop
inc
cwtl
pop
pusha
mov
stc
orb
push
add
and
rolb
sub
mov
jle
in
fisubrs
shrb
xor
sub
test
push
add
push
jo
std
pop
sbb
sahf
mov
data16
push
lods
cmp
and
insb
movsb
lcall
mov
sbb
rcrl
push
ss
cwtl
mov
or
outsl
mov
sahf
xchg
sbb
jp
fmulp
out
pop
adc
rcrl
cltd
mov
dec
lahf
in
scas
lret
mov
adc
xor
add
mov
movsb
loop
sub
mov
sbb
push
jle
scas
jmp
cmpsl
fidivs
popl
jns
fbld
jl
std
addr16
cmp
cs
punpcklbw
aad
orb
ljmp
sbb
sub
movsb
out
fs
testb
rcrb
sub
test
sbb
pop
addr16
pop
inc
pop
fwait
xor
ss
mov
rcrb
mov
subl
xchg
and
sbbb
js
pop
xor
push
push
add
ljmp
movsl
outsl
add
jns
dec
hlt
cmp
push
adc
mov
push
jl
or
rcr
inc
push
popf
das
adc
rcll
rcl
pop
popa
cltd
dec
push
jns
shrl
sub
mov
xchg
and
mov
dec
cmp
fwait
sub
push
mov
mov
clc
scas
cwtl
mov
popf
and
mov
xchg
fadd
jp
pop
les
daa
mov
push
inc
inc
cmp
and
adc
clc
fwait
leave
mov
popa
fnstenv
fmuls
ss
adc
ret
mov
es
cld
cmp
pop
pop
out
mov
andl
jnp
or
clc
in
cmpsl
movsb
push
test
fsubr
jmp
lret
iret
inc
sbbl
shlb
pop
iret
xor
in
jle
cld
mov
les
pop
xchg
repnz
push
adc
in
ret
xchg
dec
mov
rorl
sbb
idivl
mov
rcr
iret
js
pop
sub
mov
aaa
xor
mov
pop
mov
inc
ljmp
jns
repz
fs
xchg
test
mov
pusha
scas
xlat
js
test
push
xchg
outsl
mov
xchg
jge
push
mov
lret
orb
orl
test
dec
dec
jecxz
outsb
xchg
push
and
ljmp
push
inc
fmull
dec
adc
add
insl
jns
test
push
or
xchg
bound
cmpsb
sub
js
sahf
sahf
pop
loopne
hlt
ljmp
mov
push
push
and
sbb
fs
clc
rorb
mov
addl
insl
test
dec
cmp
aaa
xchg
jp
lds
inc
rcr
mov
sub
inc
mov
pop
and
in
cwtl
ljmp
mov
cmp
loopne
pop
sub
cwtl
popa
arpl
adc
lea
js
loopne
fildll
scas
mov
dec
push
xor
test
push
push
cmp
sub
stc
js
pop
mov
xchg
shll
mov
pop
mov
push
push
jo
push
and
pop
pop
push
aam
sbb
xchg
cld
loop
nop
lahf
pusha
pop
fcoms
fldl2t
notb
mov
sub
in
out
jle
jle
movsl
sub
js
adc
add
and
mov
mov
mov
push
mov
push
mov
xchg
or
pop
dec
or
stc
jg
add
fldcw
mov
fnstcw
sub
scas
mov
adc
add
ret
cmpsb
mov
adc
jp
adc
cmpsb
sub
popf
emms
xchg
out
mov
repnz
mov
sbb
mov
into
mov
cmp
push
adc
sbb
xor
push
adc
xor
dec
fmull
sub
and
cwtl
push
out
aam
xor
sbb
lds
xchg
addl
inc
xor
clc
mov
fwait
popf
jno
ds
cmp
sub
cmp
and
and
mov
ss
ret
jmp
xchg
lea
mov
rolb
pop
fnsave
pop
mov
call
lahf
xchg
sub
xor
push
arpl
iret
and
push
cld
lret
js
enter
xchg
fldcw
pop
jne
sbb
sbb
add
mov
mov
adc
lods
pusha
notl
mov
xorl
cltd
cmp
mov
mov
or
sub
jb
xchg
push
fs
sub
leave
xchg
pop
outsb
add
roll
push
xchg
fcmovnb
js
and
jb
jp
lcall
push
rorb
or
addl
xchg
lretw
jp
loopne
fistpl
sbb
das
and
sub
lea
sbb
enter
ss
push
je
jbe
adc
mov
stc
scas
adc
jae
jno
scas
std
mov
dec
std
adc
xlat
cmpsb
jns
les
bound
mov
xorb
push
jns
repz
dec
insl
jl
jecxz
out
scas
sbb
dec
scas
xor
ja
jecxz
and
test
fs
mov
adcb
das
xchg
push
mov
fcoms
jecxz
mov
insb
dec
xchg
dec
fs
jge,pt
xchg
jbe
ja
push
adcl
mov
lret
push
rep
mov
dec
das
pop
ret
pop
xor
push
jbe
das
add
lods
lods
xchg
lret
bound
adc
cli
outsb
int
sti
push
and
and
movsl
xchg
lret
loop
push
dec
stos
add
mov
push
pop
fistpl
or
pusha
dec
orl
pop
pop
out
insl
in
jns
repnz
sub
xchg
cltd
jl
fldenv
adc
inc
xchg
aas
fmul
shrb
mov
sub
int
sarb
lds
inc
icebp
push
rorb
mov
fldcw
or
jmp
imul
and
xchg
fadds
push
icebp
adc
sbbl
mov
sbb
pop
dec
fdivl
add
jle
or
stos
jmp
lea
mov
push
mov
fcom
mov
lret
push
sub
cmpsl
iret
in
aas
cmp
popa
in
adc
sub
stos
adc
jbe
ss
jnp
testl
dec
pop
push
xchg
sub
adc
fnsave
shrl
imul
cmpsl
clc
inc
xor
and
mov
test
sub
repnz
imul
dec
push
fsubs
pop
jns
enter
js
inc
sub
or
rcl
jbe
push
cmpsl
aam
out
push
orl
xchg
mov
sub
negl
sub
daa
xchg
or
and
sbb
imul
jg
sbb
xchg
inc
push
xor
icebp
into
cmp
xlat
inc
mov
shl
mov
cltd
mov
cli
push
lds
sbb
dec
lock
cs
fcompl
movsl
into
pop
jns
mov
iret
stos
sub
mov
ds
aas
mov
mov
int3
dec
sbb
loop
dec
popa
and
pop
subl
cmp
mov
cmc
inc
dec
push
sbb
cs
cld
imul
cmpsl
xor
inc
popa
dec
inc
pop
jmp
and
in
rorl
mov
inc
notl
or
shrb
push
xchg
movsb
jge
out
cmp
fidivrs
or
cmp
mov
out
mov
and
add
jo
inc
hlt
aaa
or
jns
ret
test
sub
sub
aas
test
loopne
aas
dec
fcompl
ret
jp
outsl
std
push
jecxz
shll
jmp
cld
pop
jecxz
das
pusha
ret
pushf
push
or
and
insb
cld
test
push
aas
addr16
out
xchg
xchg
xlat
fwait
push
jns
xchg
adc
roll
inc
rclb
sbb
scas
adc
shl
sub
jg
push
pop
imul
hlt
sbb
sub
lea
xor
xor
push
and
sbbl
mov
jg
hlt
sub
and
js
popa
scas
inc
pop
dec
pusha
jno
imul
add
lret
out
cmp
mov
add
or
xor
mov
mov
aas
mov
sub
xchg
mulb
rorb
js
fidivrl
stc
add
jns
xor
data16
xor
mov
and
testb
sub
pushf
or
adc
scas
dec
sbb
test
mov
lods
icebp
fdecstp
sbb
xchg
xor
sub
ja
addb
mov
inc
cmp
adc
cmp
cmpsb
mov
push
movsb
pop
out
inc
push
sub
mov
xchg
movb
dec
sbb
jo
sbb
data16
pop
mov
inc
shld
aam
incl
addr16
xchg
js
pop
test
call
push
push
sub
pop
push
inc
adc
js
xchg
sub
push
mov
mov
fs
xchg
imul
js
lcall
sub
testl
pop
sbb
sub
adc
jae
cmpb
lcall
add
mov
jae
jmp
inc
movsb
cld
pushf
xor
jmp
cmpsb
pop
push
cmp
adc
in
mov
mov
and
das
ja
mov
andb
sub
jp
pushf
cmp
add
mov
adc
fidivrl
adc
sarl
mov
outsl
daa
mov
dec
jns
pop
adc
dec
xor
sub
jb
cmp
pop
sbb
add
stos
sbb
scas
mov
in
lcall
js
sbb
cmp
mov
test
mov
push
jl
adc
jns
rcrb
jp
sub
insl
fisubrs
lret
lcall
fsubr
pop
sbb
scas
mov
shll
and
mov
mov
sub
push
cwtl
in
cmpsb
and
or
xchg
loop
mov
sahf
ljmp
xor
sbb
mov
mov
fnstcw
ja
sub
popf
xlat
clc
sub
fisttpll
inc
subl
ja
xchg
shl
mov
sub
jb
rcr
out
jl
popf
js
xchg
sub
repz
cmpsb
mov
js
sub
mov
repnz
cmc
js
cmc
mov
sub
mov
xchg
js
xlat
pop
lds
in
sub
xor
outsl
in
arpl
jns
cmpsb
mov
sub
mov
push
jns
test
pop
insl
and
inc
add
jg
aas
xchg
jg
pop
dec
xor
aas
xchg
cmpsb
mov
ds
cmp
sub
out
neg
ss
pop
lods
fwait
xor
enter
nop
mov
and
stos
rdtsc
sub
xchg
js
jns
movsb
int3
incb
adc
xor
mov
dec
rorl
call
loope
into
std
and
push
lds
subl
adc
jmp
mov
jo
ss
jb
lcall
loop
mov
jge
dec
pop
iret
fsubr
push
into
arpl
cmpl
iret
mov
xchg
js
sub
adc
sub
mov
dec
daa
sbb
adc
adc
jno
popa
sti
xor
push
xor
jae
pushl
sbb
test
lds
dec
sar
std
jbe
lea
push
sbb
mov
jns
movsl
popf
inc
ret
lock
sbb
cmp
sbb
stos
sub
mov
jp
sahf
movsl
adcl
sbb
movsl
insb
cmc
push
cmovae
pop
push
xchg
push
repz
jl
xchg
pop
sub
lods
mov
imul
mov
sti
out
adc
je
and
inc
and
in
mov
mov
jns
lret
xchg
fs
icebp
mov
sbb
incl
push
cltd
xchg
cs
in
out
jo
addb
ss
inc
mov
aam
into
add
sbb
inc
cmp
test
mov
mov
mov
sbb
addr16
mov
sub
pop
ss
dec
pop
mov
cmp
adc
jo
sub
lods
ss
pop
sbb
dec
xchg
ljmp
cmp
add
jne
push
mov
xor
adcl
mov
inc
jns
mov
rcrl
addw
or
pop
jns
lea
inc
mov
pusha
xchg
stos
out
jle,pn
aad
sub
xor
stc
int
sbb
pusha
xchg
xchg
mov
pop
mov
jnp
out
fwait
jl
push
add
push
ja
ret
in
std
xor
cmp
mov
add
incl
arpl
push
inc
js
cltd
shll
jmp
mov
sub
pop
popf
out
iret
pop
push
inc
cmp
cltd
pop
jo
fidivl
mov
popf
push
ljmp
cmp
push
cli
std
test
cmpl
repz
stc
push
testb
rol
xchg
js
sbb
fnsave
sub
inc
das
jle
adc
stos
push
cmc
cmp
pushf
or
mov
popa
mov
lea
out
and
push
in
dec
jp
mov
aas
cs
cli
nopl
and
adc
and
decb
jns
xchg
mov
pop
mov
inc
daa
rol
popa
pop
cwtl
std
clc
std
adc
xchg
lret
dec
aad
loop
pop
mov
xchg
decl
sbb
and
xor
pop
ret
fadds
xchg
js
sub
push
int3
leave
sti
and
pop
inc
and
add
push
sbb
cltd
push
sbb
roll
test
dec
scas
inc
sbb
adc
je
cwtl
scas
data16
adc
sbb
lods
je
xlat
cmp
inc
cmpb
sbbb
andl
lea
std
cs
mov
dec
jo
inc
dec
dec
mov
jge
ret
inc
scas
js
lock
jge
lcall
hlt
jg
jecxz
clc
out
xchg
inc
faddl
cmpl
mov
repnz
mov
les
jge
in
movsl
sub
aad
dec
cmpsl
mov
xlat
orl
xrelease
aas
je
pop
jnp
mov
imul
stos
movsl
pop
hlt
out
xchg
pop
jns
pop
out
mov
push
push
mov
and
cmp
sub
cmp
subb
mov
mov
das
mov
stos
mov
aaa
xlat
test
and
and
clc
sbb
push
outsl
loop
pop
test
fwait
arpl
out
push
rolb
fadds
andb
jb
sub
les
mov
imul
inc
xchg
imul
mov
dec
lds
lahf
sub
std
fisttpll
aaa
lea
and
cli
pop
loope
mov
pop
sbbb
xchg
add
imul
subl
insb
stc
ret
push
jns
inc
cltd
lds
jo
stos
sub
xor
fistpl
inc
jns
les
mov
mov
dec
sub
dec
sbb
dec
repnz
push
cld
pusha
xchg
stos
push
stos
jae
add
outsb
subl
sbb
add
aaa
adc
mov
push
mov
push
dec
mov
test
sub
push
fisubs
pushf
jg
sahf
push
repnz
sbb
xchg
mov
shll
mov
adc
int3
stos
js
dec
mov
mov
cmp
mov
jnp
aaa
xchg
popf
push
test
sub
outsl
fisubl
leave
ret
sbb
out
outsb
cmpsl
lock
jmp
jo
lret
add
lret
lret
mov
cmp
mov
cwtl
sbb
fdivs
inc
and
adc
jge
hlt
lea
jne
pop
xchg
cmpsl
repz
mov
in
mov
mov
loope
imul
cltd
and
scas
pop
cmp
arpl
into
and
and
rorl
add
jl
push
loope
jl
subl
ljmp
sbb
sbb
pop
outsl
aas
pop
lds
mov
test
add
hlt
cmp
repnz
shr
cmpsl
adc
js
movsl
mov
fwait
in
pushf
sub
stc
cmp
ja
ret
arpl
lahf
pop
pop
loope
jne
mov
lcall
aas
push
xchg
jb
xchg
xchg
push
stc
loopne
pop
sbb
sbb
iret
mov
xchg
cmpl
jae
adc
push
xchg
push
push
dec
stos
xor
mov
push
and
xor
sbb
scas
cltd
adcl
sbb
js
aaa
jns
es
loope
ja
cmc
sub
lods
leave
adc
dec
lea
push
insl
lds
repnz
xchg
sub
jge
xchg
and
xor
mov
in
subb
popa
enter
jb
push
add
testb
jae
outsl
sub
mov
push
inc
in
loop
mov
sbb
and
push
xor
xor
mov
mov
inc
ljmp
mov
add
ja
or
ret
push
cmp
ljmp
sub
pop
nop
iret
push
fs
das
cmp
and
xor
mov
jns
movsb
jnp
xchg
rcrb
js
sub
daa
std
movsl
stos
outsb
lock
sub
pusha
loopne
das
xchg
push
sbb
call
sti
inc
push
mov
test
mov
xorb
dec
cmp
sbb
mov
movsl
pop
add
ret
mov
xchg
mov
mov
sub
pusha
jo
xor
push
ret
push
pop
mov
jb
lods
jnp
mov
mov
adc
pop
adc
int
push
pop
outsb
dec
imul
mov
dec
lret
les
enter
repnz
push
ss
add
mov
js
std
pop
cmpsl
dec
dec
rolb
cmp
xchg
add
cwtl
or
or
adc
and
in
sbb
push
adc
mov
xor
aaa
add
and
xorl
sub
fldcw
jno
jne
push
sbb
movsb
add
sbb
test
pop
mov
out
pop
aaa
out
js
pop
movsl
mov
cmpsl
lret
loope
push
sbb
mov
insb
lcall
cwtl
js
inc
dec
pop
scas
mov
je
enter
popf
movsl
sub
nop
enter
aaa
add
ds
repnz
fwait
jmp
adc
xchg
add
shl
jns
cmp
xchg
xlat
adc
imul
jne
lahf
adc
push
push
enter
and
add
dec
das
mov
sbb
adc
pop
mov
test
icebp
test
mov
and
mov
mov
ret
jb
mov
adc
jnp
mov
dec
jns
or
lcall
and
int
xor
xor
xchg
lahf
cmpl
rorl
lahf
fs
dec
sub
mov
sbbl
adc
xorl
loop
mov
loop
ss
stos
and
repz
data16
add
jl
shll
popf
mov
test
fcoms
cmp
jecxz
xchg
sbb
inc
sub
shll
dec
sbb
jp
mov
pop
sbb
sbb
mov
ljmp
dec
sub
mov
jg
adc
ds
mov
clc
lret
test
jns
imul
jae
das
subl
adc
pop
pop
out
jno
mov
roll
das
cmp
mov
sarb
sbb
lcall
sbb
sbb
sbb
out
aad
dec
cmp
inc
lret
sub
shlb
xchg
pop
arpl
pop
icebp
js
jle
xchg
push
hlt
xor
ret
enter
sub
jns
push
aam
leave
jo
mov
cli
mov
in
cs
push
push
shrl
or
loop
dec
fcompl
das
mov
pop
ss
outsb
xor
xchg
ds
sbb
into
enter
mov
sarb
jp
je
lsl
scas
bound
cmp
push
lds
jo
xchg
sub
mov
mov
sub
loop
jb
mov
loope
es
mov
fisubrl
in
xchg
aaa
movsl
gs
inc
or
cmc
stos
cmp
xor
mov
cmp
pop
adc
sti
xor
lock
or
fsubrs
sub
addl
fstp
xor
mov
jbe
adc
movsb
fnsave
test
and
add
inc
pop
jmp
cwtl
jbe
iret
xlat
jno
fisttpl
and
sbb
sbb
mov
xchg
sub
mov
jns
xchg
ss
pop
aam
sbb
insl
sbb
bound
mov
sbb
push
movsb
mov
and
adc
ja
and
mov
lock
filds
adc
jbe
jns
and
xchg
rorb
sub
pop
or
test
out
push
mov
repnz
shl
shlb
jns
jecxz
repnz
das
or
xor
xor
sbbb
sbb
pop
or
xchg
cmpsb
sub
int3
cmp
std
mov
pop
shlb
in
mov
popf
inc
in
mov
pop
push
jl
aad
icebp
mov
les
sub
icebp
sbb
fstpt
sub
jge
lods
movsb
daa
lds
jo
jb
rclb
enter
mov
and
push
enter
push
sub
inc
dec
pop
or
xchg
jmp
dec
andw
jo
add
mov
js
xchg
adc
or
adc
mov
adc
dec
out
mov
mov
loope
lcall
in
add
mov
add
loope
pop
outsl
int
lret
test
mov
hlt
sbb
fdivrp
cltd
sub
mov
pop
push
xchg
js
jmp
sub
sub
lods
into
and
adc
mov
cwtl
mov
fs
cmc
ljmp
std
sbb
push
out
mov
add
mov
mov
pop
dec
in
add
jno
sbb
inc
jp
pusha
cld
adc
add
adc
push
mov
fbstp
xor
sbb
pop
jns
mov
adc
jl
jnp
xor
mov
fiaddl
pop
das
or
fstps
dec
sub
shll
fcompl
iret
pop
mov
popf
es
mov
dec
lea
mov
xchg
adc
cmp
xor
and
cwtl
mov
js,pn
and
aas
stos
sub
fs
push
das
mov
push
inc
mov
pop
addr16
jecxz
sub
adc
xor
daa
inc
jns
xor
mov
popf
outsb
ljmp
aas
dec
cmpsl
test
scas
cmpsl
and
aaa
loope
insl
pop
inc
jae
movsb
xchg
dec
jns
call
inc
in
sub
nop
sub
and
mov
xor
and
xchg
sub
lock
out
sub
enter
sbb
lcall
imul
push
movsb
shrl
fidivs
dec
dec
cmp
jbe
xorb
xchg
mov
addb
and
inc
loopne
gs
das
stos
sbb
push
mov
arpl
sub
test
mov
stc
push
mov
push
mov
ja
leave
and
iret
or
sbb
insb
jp
movsl
mov
pop
jae
loopne
imul
mov
pop
xchg
pop
mov
inc
mov
imul
out
mov
jno
pushf
adc
inc
ds
dec
fldl
lret
adc
orl
jg
in
cmp
push
ljmp
jle
clc
in
mov
fstps
scas
pop
sbb
push
jne
jge
int
push
sbb
push
jnp
data16
test
xorb
and
enter
andl
dec
xor
outsb
or
dec
jo
incb
mov
mov
jno
dec
xor
das
in
fdivr
sarb
out
sub
jl
sub
add
bound
pop
xor
sub
fidivrs
pop
pusha
test
sbb
or
cmpsl
mov
mov
sub
xchg
xchg
js
mov
in
cwtl
imul
sub
mov
leave
sbb
popf
icebp
and
iret
mov
lret
xchg
sarl
jge
xchg
stos
mov
sub
outsb
sub
icebp
xor
insl
mov
sbb
push
xchg
inc
adc
ds
xchg
sbb
and
js
sbb
cmp
in
std
adc
sbb
or
push
rolb
add
int
ljmp
mov
sub
lock
jp
test
flds
mov
jecxz
js
mov
call
cmp
fld
sub
roll
jns
aad
insl
into
mov
fwait
subl
pop
daa
lret
pop
in
sbb
rclb
sub
movsl
and
jns,pt
lods
out
pushf
xchg
sub
or
mov
add
test
mov
push
ljmp
scas
adc
lret
cmc
in
add
cmp
shrl
cltd
jmp
mov
add
cmovp
stos
insb
jns
cwtl
fldt
or
shll
scas
sbb
jg
xchg
push
or
jmp
xor
sub
call
scas
sbb
dec
mov
jno
adcb
push
lret
jle
movl
imul
repnz
cli
dec
bound
sti
dec
sbb
and
neg
lret
clc
cmp
imul
mov
xchg
rolb
lods
lcall
inc
add
scas
nop
xchg
outsl
push
xchg
cmp
jae
addr16
cs
jns
dec
pushf
std
je
aaa
pop
sub
mov
ss
sti
dec
xor
xchg
sub
fwait
fwait
mov
das
aaa
lret
ljmp
sub
mov
das
or
inc
xor
sbb
dec
push
mov
dec
mov
aad
popa
add
fwait
and
std
shrb
into
pop
repz
add
popf
mov
jge
aaa
cltd
or
into
mov
rcll
pop
repnz
sbb
cmpsl
pusha
or
scas
mov
cmp
pop
jne
pop
inc
mov
mov
js
std
and
into
mov
jmp
insb
pop
inc
outsl
daa
outsl
ret
je
cwtl
inc
add
cmpsb
test
xor
lods
arpl
sub
repz
stos
add
sbb
lret
xor
neg
jle
mov
push
movsl
xor
pop
mov
out
fmuls
fidivs
std
mov
ret
data16
xor
lods
mov
push
out
xor
js
jns
test
movsb
add
sub
push
adc
inc
add
sub
lret
add
add
icebp
ja
fdivs
inc
pop
lods
add
cmp
dec
int3
pop
sbb
sbb
or
jnp
call
call
mov
jns
sbb
popa
les
mov
fcoms
addl
pop
mov
pop
movsl
jb
mov
das
or
imul
popa
and
xor
pop
gs
pop
sbbb
push
cmc
jp
loope
cmpsl
pop
sbb
fistl
movsb
lret
pop
js
popa
jle
aad
adc
sub
xchg
sbb
lods
or
andl
push
jnp
and
mov
ss
test
mov
adc
dec
mov
imul
enter
mov
or
fisubrs
dec
ficomps
in
fwait
lods
jbe
cwtl
mov
jecxz
xchg
or
jg
sbb
dec
stos
cltd
pop
popa
out
or
xchg
lods
rcll
sbb
sub
ja
xor
jge
pop
push
das
and
dec
rcl
lods
hlt
adcb
push
adc
call
jle
insb
sub
gs
sbb
push
push
orl
in
loope
jp
js
enter
xchg
pop
dec
ss
sub
dec
mov
push
mov
scas
cs
arpl
sbb
test
xor
push
xchg
imul
mov
test
and
cwtl
enter
mov
mov
jae
inc
and
pop
pusha
call
add
xchg
xchg
mov
sbb
sbb
outsb
adc
add
lea
push
lahf
mov
scas
sub
mov
loop
and
jnp
out
loop
lahf
sets
mov
inc
jle
jmp
bound
les
ljmp
push
out
adc
inc
pushf
lret
mov
andb
xlat
pusha
shrl
fsubp
ret
lret
cmp
lods
testb
push
ret
pusha
loopne
jbe
push
insl
int
in
sbb
rcrb
and
mov
jp
jns
fsubrl
fwait
add
pushf
pop
ret
inc
or
mov
cmp
jo
push
js
clc
stos
mov
stos
sti
scas
push
lods
subl
and
js
addr16
stos
ds
lods
mov
in
nop
mov
push
mov
lcall
movsl
pop
sub
sub
xchg
in
dec
mov
sahf
mov
mov
mov
cmp
js
aas
cmpsl
cld
jge
inc
mov
das
or
cmc
test
inc
inc
cltd
in
mov
push
bound
dec
rcrb
and
mov
rcrl
and
pop
insl
xor
push
repz
nop
in
addb
ficoms
inc
lret
jp
call
nop
fisubrs
sub
jno
cmp
cs
hlt
inc
jle
fidivrl
push
testb
fwait
loop
out
js
push
mov
xchg
mov
outsl
into
mov
loop
imul
and
jns
cs
xor
bound
imul
add
xor
ffreep
shr
dec
rclb
pop
pusha
adc
pop
aaa
mov
adc
sti
and
fimull
xor
push
incl
sub
lret
mov
mov
sub
mov
lcall
pop
add
adc
lret
push
insl
fwait
xorl
fidivrs
fildll
push
or
flds
jbe
data16
fimull
sbb
add
jb
cltd
mov
xlat
hlt
popa
nop
fnstcw
jns
push
popa
xor
test
das
stos
mov
and
fisubrl
and
sub
push
mov
add
stos
and
inc
leave
rorl
cmpsb
jecxz
cld
sbb
lock
jle
mov
adc
ret
adc
gs
cwtl
enter
push
sbb
sub
mov
ljmp
sbb
dec
inc
cmpsl
jno
jne
ss
pop
jnp
dec
xchg
sbb
cmp
rorl
mov
stos
repz
mov
push
icebp
mov
mov
roll
rcr
in
xchg
pop
jo
arpl
jns
mov
jnp
push
sbb
scas
mov
dec
pop
in
imul
sbb
outsb
lahf
in
mov
into
cmpsb
dec
outsl
cmc
adc
push
movsl
pop
popf
shll
sbb
dec
xchg
syscall
out
mov
ja
cmp
push
jb
adc
mov
mov
testl
loop
lcall
sbb
out
dec
into
adc
cmpsb
inc
jno
sub
or
push
dec
push
fsubrl
ret
test
stc
mov
sub
adc
fistl
leave
cmp
mov
mov
inc
fldl
loopne
and
pop
loope
sbb
dec
push
in
or
cmc
out
pop
push
rcrb
scas
and
ljmp
outsb
add
movsb
fidivl
cmpsb
out
or
sub
rcll
aad
loopne
jbe
sub
adc
jne
sbb
xchg
inc
inc
out
test
jae
int
shlb
std
sbb
dec
imul
jb
leave
cmpsb
pop
and
daa
push
pushf
cltd
and
imul
into
or
sbb
xchg
and
jp
cmp
call
test
scas
aas
je
pop
push
xchg
stc
shlb
adc
inc
cs
pop
jmp
xor
fstl
pop
dec
mov
lods
lea
jge
sub
pop
xlat
cmp
sbb
sbb
loop
mov
subl
pushf
fsubr
cmp
out
outsb
mov
lods
cmp
mov
mov
or
adc
sbb
in
loop
or
orb
movsl
push
pop
movsb
jmp
mov
jns
rol
es
ds
jb
scas
mulb
jle
mov
sub
xor
loop
dec
out
pusha
sbb
fucomp
xchg
push
es
lock
fcmove
fstpt
sub
cmp
pop
out
adc
sbb
jl
lret
push
sub
sbb
mov
sbb
dec
adc
lret
or
cld
rcrb
fs
imul
sbb
push
sti
mov
xor
nop
clc
test
fcmovbe
pop
test
sub
dec
and
inc
push
mov
mov
bound
mov
and
sub
ja
pop
sub
jmp
mov
fwait
js
or
popf
fs
adc
test
sbb
mov
stos
movsb
and
mov
jbe
jp
repnz
mov
call
xchg
out
int
fldenv
cld
jg
sbb
bound
push
sbb
push
jns
xlat
stos
call
adc
fcoml
rcrb
xor
push
sarb
jge
outsb
fwait
and
sub
outsl
bound
clc
xchg
add
insl
mov
push
and
or
call
clc
sbb
jne
sbb
iret
stos
push
shl
inc
sbb
or
pop
mov
fwait
mov
insb
cs
jns
repz
in
clc
out
imul
stos
inc
lds
sti
popl
xor
push
rorl
dec
das
adc
add
cltd
cmc
cltd
nop
inc
sti
xchg
idivl
fdivl
jp
adc
addr16
sbb
xchg
and
mov
xor
mov
das
call
iret
adc
testl
fisubrs
cs
xlat
sub
adc
in
mov
aam
xchg
ja
jmp
rcl
cmp
and
sbb
ss
mov
test
xchg
mov
sbb
lock
pop
cwtl
and
and
jge
gs
jns
pushf
xchg
push
pop
shrl
or
pop
stc
pop
sbb
xor
push
cmpsb
xor
sbb
fnsave
movsl
notb
cltd
push
stos
arpl
push
jbe
jo
add
idivl
pop
xchg
pop
and
in
cmpsl
jns
or
sbb
jp
xor
xor
pop
data16
movsl
push
inc
shll
outsl
loopne
movsb
test
jnp
xchg
xchg
mov
mov
aas
in
scas
loop
addb
lds
pop
push
aaa
jp
xlat
mov
dec
mov
pusha
mov
ss
adc
ss
test
and
in
mov
cwtl
and
ret
std
cmp
stos
sbbb
dec
inc
inc
sub
adc
adc
cmp
push
mov
mov
add
mov
cmp
cltd
xor
ja
mov
fstl
mov
mov
mov
jp
dec
fdivrl
pop
pusha
scas
scas
cs
popf
and
mov
xchg
ljmp
sub
sbb
pop
sub
hlt
outsl
stc
mov
cs
xor
xchg
cwtl
icebp
and
rorb
sbb
leave
mov
cmp
inc
xchg
rcrb
addl
jmp
pop
ja
mov
inc
adc
test
add
lahf
gs
fsubr
push
cltd
lea
in
setne
sub
xor
push
ljmp
mov
push
sub
xchg
sti
sub
stos
imul
xchg
sbb
orl
cmp
mov
jo
addl
push
addr16
sbb
sbb
inc
lahf
add
test
mov
jge
les
dec
sbb
add
pushf
enterw
addl
and
stc
sbb
push
lcall
iret
stos
outsb
mov
xchg
gs
dec
hlt
scas
mov
dec
adc
sbb
push
jns
das
int3
lcall
mov
or
fyl2xp1
inc
lret
mov
stc
arpl
cli
dec
lahf
adc
test
push
cld
xchg
out
inc
cmp
sbbl
sahf
mov
cmp
js
mov
insl
stc
cmpsb
cwtl
rcrl
lahf
mov
mov
sub
in
ret
stos
push
sbb
out
inc
jo
stos
adc
xchg
loop
jae
add
and
leave
sub
in
push
rolb
and
mov
push
es
aas
das
pushf
xor
mov
sbb
push
divb
push
cmp
sbb
and
imul
scas
sbbl
fdivp
mov
sub
mov
sub
mov
xchg
mov
je
lock
aaa
inc
jns
les
out
mov
add
ret
in
cs
cmp
mov
xor
aad
pushf
mov
add
outsb
xchg
xlat
enter
sub
xor
popa
sbb
out
xorl
fstps
add
jo
imull
imul
add
inc
adc
in
add
fstp
arpl
add
adc
inc
sub
mov
or
pop
cmp
add
rcrb
push
and
xchg
imul
cmpsb
test
xorl
hlt
pop
outsl
jns
jns
or
loopne
mov
inc
inc
sub
pop
lcall
enter
fldl
jnp
adcb
mov
jp
mov
arpl
cli
ja
ja
hlt
mov
mov
pop
addb
js
in
jecxz
scas
sar
andl
pop
jno
xchg
in
push
push
lock
xchg
sbb
xchg
sahf
fcomps
mov
xchg
xor
repz
push
pop
cmpl
cwtl
inc
jns
lcall
sub
adc
cmpsb
in
sbb
test
mov
pop
in
adcl
in
push
test
jns
and
rorl
sub
mov
sub
or
pop
dec
cmpsl
rol
shll
inc
add
je
xor
fcoms
mov
sub
fistpll
insl
test
mov
mov
das
aaa
sbb
add
adc
push
jne
enter
jbe
shrb
and
jecxz
push
pop
push
xchg
fdivs
or
pop
sub
sti
rcrl
add
xor
mov
jne
adc
cmp
js
test
cs
jne
out
xor
xchg
mov
idivb
and
or
in
js
negl
sub
sub
fsts
push
loop
mov
cwtl
sbb
pop
mov
sti
dec
outsl
mov
icebp
sub
add
imul
test
push
push
andl
mov
das
cwtl
and
dec
inc
push
jno
mov
adc
xor
lcall
and
vmwrite
lock
jge
cmp
dec
fldcw
dec
fwait
and
cmp
insb
jge
mov
shrl
je
fcoms
inc
lods
pusha
and
sub
insl
jge
clc
jns
inc
jns
push
out
adc
push
sub
andb
mov
les
out
jge
xor
inc
out
cmpsb
jns
loop
xor
jne
inc
test
xchg
stos
fwait
dec
dec
aad
adcl
cmp
sarb
push
sbb
dec
imull
mov
mul
aas
cmpl
lret
and
cmp
lods
xchg
hlt
icebp
pop
shlb
jnp
in
ror
cli
sbb
mov
sub
and
out
sbb
mov
out
xchg
mov
aaa
adcb
aam
insb
xor
sub
xor
sarb
mov
divl
mov
adcb
add
lods
jbe
outsb
mov
lds
daa
mov
cltd
std
mov
pop
flds
mov
mulb
das
mov
lock
inc
lock
add
movsl
in
pop
xchg
cmpl
xchg
push
jecxz
inc
mov
ds
cmc
lret
push
imul
jge
out
lods
adc
jge
out
sarl
sub
jmp
aaa
mov
call
push
inc
subl
pop
jmp
popa
sbb
push
and
add
lret
cmp
or
inc
ljmp
add
js
mov
mov
and
jmp
add
pusha
push
jp
add
push
xor
mov
jae
pop
insl
sbb
loope
inc
ljmp
xchg
or
jno
mov
mov
sbb
dec
jge
add
xor
imul
jno
mov
jns
movsl
cmp
gs
inc
pusha
sub
xor
mov
sbb
sbb
mov
fcompl
imul
cmp
decb
sahf
fdivrs
fstpt
mov
arpl
popf
mov
es
pushf
fidivs
mov
sub
adc
sbb
mov
fs
subb
into
and
repz
mov
sbb
aaa
shlb
cmp
push
outsl
sub
add
lods
sub
xchg
nop
adc
push
les
mov
shll
sub
pop
mov
stos
sub
sub
or
pop
sbb
stc
cmp
xchg
cmpsl
in
sahf
gs
mov
adc
or
sbb
adc
ror
fwait
mov
das
cs
cmc
xorb
rcrb
cmp
imull
pop
mov
pushl
out
mov
and
pop
jecxz
in
data16
popf
mov
fildll
xor
jns
data16
lret
sahf
shrb
iret
js
or
cmpsb
mov
xor
fisubrs
dec
nop
sbbb
insb
sbb
insl
sub
sbb
cs
cmpsl
test
sbb
es
sub
cmp
inc
filds
jg
jne
sub
sbb
xchg
dec
test
adc
jecxz
mov
es
sub
or
and
mov
popa
inc
xchg
aas
push
fcomip
adc
pop
jae
sbb
outsl
fstpt
jae
pop
into
mov
jge
int
fwait
sub
jae
or
fidivl
shrb
imul
aaa
jne
xchg
enter
sbb
bound
int
mov
inc
loope
and
sbb
test
jb
cmp
aad
jmp
outsb
push
arpl
lahf
sbb
xchg
in
call
rcr
les
inc
kmovw
jmp
data16
sbb
cmp
xchg
xor
push
xchg
fs
iret
test
adc
jge
mov
xchg
sbb
inc
sub
xchg
sub
andl
cmpsb
in
rcl
ret
mov
sbb
jl
sub
lret
stos
clc
std
lret
push
insl
lock
mov
mov
lods
js
insb
inc
adc
das
into
fcomps
mov
and
imul
ss
cmc
fistpll
or
rol
xchg
adc
add
sbb
cmp
das
push
rcll
jmp
jns
jbe
jbe
jb
lock
cmp
imul
add
cmp
out
rorb
lds
pop
pop
out
adc
mov
and
pop
pop
adc
std
cwtl
sbb
imul
jle
push
mov
ljmp
xchg
mov
jg
inc
push
xor
mov
xchg
xchg
shlb
bound
or
sub
jns
sbb
leave
push
sub
add
popa
sahf
sub
cmpb
sbb
xor
or
cmp
cmp
insb
xchg
int
iret
mov
jns
cld
in
sub
adc
inc
les
jle
mov
movsl
insl
sbb
cwtl
test
add
jle
inc
jns
shlb
mov
jb
mov
jmp
daa
pop
pop
jne
sub
mov
ret
and
fisubrs
mov
xor
dec
lret
pop
inc
mov
jbe
push
mov
lea
jno
lea
cmc
jb
out
and
push
pop
add
sub
into
dec
cmc
sbb
mov
xchg
xor
pop
pop
gs
lcall
and
cmp
cli
jb
loop
dec
sbb
daa
sub
push
paddusb
add
stos
dec
rcrb
movb
jae
xor
out
sub
cmpsl
cmpsb
add
enter
jecxz
inc
adc
mov
pop
ss
roll
jmp
xor
addr16
stos
fcompl
pop
sbb
and
scas
mov
add
sbb
int
inc
fwait
or
or
rclb
mov
in
outsl
fistps
sub
enter
popa
ret
stos
int3
add
jl
clc
scas
cwtl
jp
dec
or
sub
stc
shll
lahf
notl
cwtl
sbb
lret
mov
jl
and
xor
imul
mov
inc
sub
fildl
insl
push
jns
cmp
enter
stos
xchg
pminub
adcb
icebp
push
jae
sbb
pop
adc
insl
jo
mov
lods
add
jp
pop
cli
dec
fiaddl
cmpb
pop
mov
movsl
sbb
iret
stos
movsb
mov
mov
popa
bound
div
push
pop
idivl
sbb
jecxz
cli
scas
sub
movsb
dec
aas
jae
sbb
addr16
shlb
das
shlb
out
lcall
pop
aas
mov
imul
je
rcll
mov
and
scas
cmpsb
outsl
xchg
in
lret
jle
dec
lahf
add
cmc
cmp
ljmp
xchg
fstps
pop
adc
rcr
hlt
loopne
enter
or
shlb
inc
divl
ja
mov
push
test
inc
jmp
aas
jne
sbb
ret
mov
adc
outsl
rolb
mov
imul
loopne
mov
xchg
sub
push
sbb
cs
js
jle
jle
xor
push
rclb
mov
imul
repz
add
sbb
in
jecxz
es
lahf
cmp
mov
pusha
sbb
cmp
or
fmuls
insl
xchg
xor
aaa
ss
or
mov
jecxz
in
xchg
push
imul
stc
stos
adc
push
adc
sub
mov
lcall
or
cmp
test
fildl
imul
adc
enter
mov
lret
mov
and
movsb
sub
add
in
cld
shrb
test
pop
xchg
aad
stc
or
gs
add
mov
lret
outsb
stc
imul
ss
xor
inc
mov
fnstcw
xor
dec
stos
and
cmp
idivl
pop
xchg
push
jns
test
xor
jb
daa
or
lahf
clc
adc
je
int
incl
jno
cmp
test
cmp
lock
fwait
shrl
sub
aas
push
or
mov
das
mov
hlt
js
jo
lock
cmp
pop
pop
and
lcall
xor
adc
inc
adc
sub
xchg
jne
les
sbb
and
sbb
int
lret
push
ret
xor
in
push
insb
rorl
mov
mov
push
ljmp
cltd
cmp
fldl
xchg
test
ret
sbb
xchg
test
fidivrs
dec
pop
jae
jecxz
mov
mov
jmp
mov
lcall
xor
rorl
jg
dec
clc
xchg
fnstsw
sub
out
xchg
rorb
inc
subl
lcall
jmp
sbb
sub
jp
mov
adc
push
or
outsl
mov
sti
orb
cmp
jnp
repz
push
outsb
pop
aad
push
add
cli
ljmp
push
or
test
imul
mov
sub
int
popa
and
sub
sub
lock
xor
cmpsb
test
cmp
lea
cmpsl
push
or
lret
pop
mov
adc
cli
pop
in
mov
in
int3
cmp
sbb
xor
xlat
andb
or
loopne
in
lods
sub
or
or
adc
sahf
stos
pop
fists
addl
jge
jnp
jecxz
dec
xchg
movsl
add
cs
cltd
mov
jns
and
lcall
jae
pusha
push
lods
ds
out
loopne
add
adc
mov
out
out
insb
cmpb
gs
mov
inc
mov
sbb
mov
dec
jae
sub
and
mov
mov
jne
negb
sbb
movsl
gs
inc
push
andb
sub
or
pushf
push
mov
and
lahf
loope
js
out
push
fdivrs
mov
xorl
xor
pop
mov
push
cs
into
cmp
stos
pop
sub
cmp
inc
dec
push
cmp
insb
jecxz
stos
lock
cwtl
je
ja
cmp
sbb
fucom
xchg
lea
sti
int3
xchg
cwtl
rcrb
fisttpl
inc
sbb
test
daa
and
cmp
pusha
xchg
or
push
lods
daa
fs
fstpl
int
into
adc
cmpsb
jo
cmp
mov
js
cltd
mov
repz
lds
sub
push
cmc
clc
rol
mov
xorl
out
add
in
js
sti
in
pop
mov
adc
push
clc
inc
roll
repz
out
mov
popa
mov
ret
popf
addl
stc
js
cmp
mov
push
or
xor
fidivrl
nop
sbb
not
mov
fs
cli
in
ja
mov
mov
or
bound
add
pop
and
mov
mov
stos
frstor
clc
insb
jns
dec
cmpsl
cld
xlat
lea
fidivrl
pop
std
mov
pop
and
arpl
sbb
push
mov
add
mov
movsl
dec
fwait
mov
int3
xchg
push
js
push
cwtl
lahf
insl
jbe
pop
ljmp
into
push
mov
jne
loop
ret
push
loop
push
jbe
sub
adc
scas
lcall
test
fnsave
jmp
mov
xor
in
ret
int
and
call
push
lahf
mov
or
repnz
adc
rcrb
push
push
into
out
pushf
xchg
sub
test
and
inc
push
pop
sbb
sbb
mov
mov
outsl
sub
dec
sti
pop
addl
imul
js
jo
push
push
cmp
adcl
jns
dec
pop
ljmp
outsb
sub
xchg
sbb
jp
adcl
ds
lahf
stos
xchg
pop
sub
rcrb
rorb
cltd
lret
sub
pmaddwd
fmul
ljmp
jno
fidivrl
shrl
enter
in
sbb
adc
and
test
adc
mov
fistl
adc
and
jne
mov
xor
ds
scas
sti
sub
fcmovnbe
jge
mov
sbb
out
sbb
jbe
jns
push
out
mov
int
mov
idivb
mov
loopne
xchg
sahf
int3
and
fsubrl
pop
repz
fnstcw
das
jo
int3
inc
les
les
sub
ljmp
add
push
fisubrl
mov
icebp
adc
or
outsb
or
addl
lcall
ficoms
or
fisttpl
jb,pn
js
int
aas
pop
loope
cmp
sub
mov
js
jp
push
iret
jne
pop
ss
daa
jecxz
push
cmpb
jns
inc
mov
jle
push
les
jbe
les
xchg
cmp
stos
or
sub
push
arpl
imul
pop
test
adc
xchg
cmp
sbb
fdivs
jo
pop
lock
and
das
fildl
xor
sub
sbb
jb
ss
dec
fimull
cmp
pop
adc
or
jbe
sub
cwtl
xchg
adc
mov
push
clc
inc
aas
sub
jnp
and
pop
jbe,pn
jo
addl
in
dec
push
mov
jns,pt
xchg
mov
ja
push
pusha
sub
cmpsb
js
xor
mov
sub
imul
cmp
pop
aad
repz
jge
dec
xor
xor
sbb
jg
inc
cmpsb
or
jge
sarl
outsb
movsl
lret
das
cmp
mov
adc
icebp
mov
dec
repnz
bnd
sub
loopne
loop
mov
sub
aaa
orb
add
call
loope
mov
add
sbb
sub
mov
or
xchg
xchg
xchg
dec
cmpsl
push
mov
mov
jo
rcrb
dec
nop
shlb
ror
int
and
pop
les
push
sbb
jecxz
outsl
xchg
add
andl
call
pop
xchg
inc
je
ljmp
mov
out
jne
and
das
jp
sbb
imul
addl
stos
mov
xor
js
or
negb
push
xchg
xor
sbb
xor
sub
mov
sub
mov
mov
add
lods
push
cmpl
xchg
jbe
xchg
add
adc
fcomps
sti
sbb
lods
xor
js
lret
dec
sub
pop
sub
aas
fstpl
adc
mov
lods
adc
adc
jns
pop
test
call
cmp
dec
mov
les
jns
idivl
sub
ret
repz
push
shll
out
je
lock
sbb
popa
pop
iret
xchg
push
icebp
dec
xchg
sub
push
inc
jne
inc
xchg
mov
xor
pop
add
lcall
popa
addl
or
loope
xor
int
js
jns
cmpsl
mov
test
test
mov
gs
xchg
or
jecxz
add
dec
in
scas
sub
mov
add
sbb
jmp
sbb
pop
lcall
jns
mov
lret
sub
mov
pop
fldcw
sbb
popf
jo
mov
into
loopne
dec
or
or
sbb
cmp
mov
push
les
fdiv
scas
sub
push
jns
xchg
push
sub
fsubrl
outsl
push
fiadds
and
adc
fldcw
xor
aam
sbb
mov
scas
push
addr16
xchg
lea
out
add
test
out
push
jno
jo
jg
mov
and
loope
stos
popf
pop
sub
movsb
pop
dec
sub
loopne
mov
sbb
sbb
dec
mov
adc
mov
ficomps
inc
pushf
sbbl
xchg
sbb
in
inc
aaa
push
jge
pop
adcb
push
pop
lret
ror
jns,pt
test
xor
test
insb
mov
loopne
jb
jae
inc
outsl
add
push
jle
fisubl
fstpl
push
int3
roll
adcl
int3
ds
cltd
icebp
cmp
adcl
mov
insl
gs
xchg
mov
rcll
fadd
jbe
mov
js
jns
xchg
stos
sbb
mov
in
leave
sbb
mov
pushf
cmpsl
xchg
orl
pop
xor
je
jp
cmp
test
pushf
push
sub
mov
push
aad
xor
js
in
out
ss
fsubrs
fldcw
int
pop
jbe
cmc
sbb
andb
mov
xor
dec
popf
sub
jp,pn
mov
mov
push
sub
dec
fldenv
mov
add
inc
ret
mov
mov
ret
cmp
jb
jns
scas
adc
or
mov
pop
stc
jge
xchg
imul
pop
iret
sub
negl
xlat
sbb
dec
out
sbb
inc
and
test
sbb
lahf
mov
push
ss
pop
xor
pop
fldcw
cwtl
xchg
add
adc
test
lea
in
js
xorb
loop
jns
sub
sbb
sbb
repz
fldl
sbb
js
addl
and
popa
mov
in
aas
and
mov
lea
jno
add
sahf
mov
fidivrs
lcall
clc
call
pop
xor
scas
aaa
lds
pop
mov
imul
js
negb
push
lods
mov
or
sahf
cmp
sbb
or
push
cmp
mov
aad
dec
leave
fidivl
inc
cmp
and
movsl
cmp
repnz
imul
inc
test
sbb
das
xchg
arpl
pop
jo
js
nop
stc
ds
xchg
mov
jp
and
test
es
movsl
fsubrs
js
pop
pop
sub
stos
adc
loope
mov
ja
xchg
dec
sbb
sbb
adc
sarb
jmp
mov
aas
mov
sub
sbb
xorb
nop
and
dec
into
mov
cmp
adc
cmpsl
shrb
sub
add
js
fldl
cmpsl
jecxz
pop
cmpsl
lahf
pop
in
xchg
jmp
inc
sub
adc
lar
jl
imull
les
sti
sub
icebp
scas
adc
int
adc
jns
adc
or
pop
xor
int
sbb
bound
jo
fs
adc
sahf
sbb
daa
sbb
loop
sub
push
loopne
add
lds
pusha
sub
js
jno
xchg
sub
rclb
in
daa
cmp
inc
divl
jns
xchg
aas
dec
sub
js
imul
sub
push
cs
int
xchg
add
std
test
inc
pop
xorl
or
sbb
vpsrld
ds
add
inc
and
pop
or
pushf
push
jnp
pop
stos
push
sti
jmp
xor
xchg
or
stc
test
mov
xor
cld
jae
repnz
movsb
adc
mov
test
aas
into
rolb
inc
rclb
ja
dec
sbb
mov
mov
sbb
popa
sbb
mov
mov
sbb
leave
test
inc
mov
or
dec
xchg
and
iret
mov
and
jns
xchg
jbe
loop
adc
adc
or
xlat
pop
mov
imul
add
fnsave
jns
cmp
rolb
push
aas
cmpsb
and
pop
std
lods
push
add
jecxz
inc
push
imul
mov
dec
xchg
mov
das
arpl
xchg
sahf
pop
cmpsb
sar
je
out
and
and
bound
mulb
xchg
ret
jo
out
sbb
dec
and
add
ds
pop
push
mov
in
les
shll
sub
push
fnsave
sub
lods
jmp
icebp
cmp
inc
int
popa
loopne
pop
pusha
or
imul
gs
sub
test
pop
pop
sbb
dec
cmp
nop
mov
sbb
insb
lret
add
sub
xchg
jo
scas
call
loop
or
cmpsb
shrl
xchg
rclb
lcall
add
sbbl
add
sbb
rep
fsubrl
jns
outsb
mov
and
adc
xchg
in
fistl
and
or
ja
sub
fiaddl
cwtl
test
test
cltd
imul
mov
int
outsb
arpl
fwait
fs
insl
jns
cmp
fiaddl
jae
fstps
lret
mov
sub
int3
insb
loopne
sbb
outsl
ror
rclb
cmpl
stos
mov
lret
push
cmc
jb
jp
stos
xchg
sbb
mov
cmpl
mov
jb
mov
mov
sub
xchg
push
loopne
inc
stos
sbb
movsl
fs
or
mov
mov
repz
sbb
inc
xchg
hlt
cmpsb
cmpb
popl
loop
inc
xorl
jp
rclb
js
xchg
adc
lock
enter
ljmp
xchg
pop
xlat
sub
dec
cltd
xchg
cmpsb
int
jl
sbb
mov
xchg
dec
js
dec
jbe
clc
js
sub
mov
mov
stos
sub
in
inc
int3
fistl
out
cmp
jne
inc
sub
mov
sbb
clc
dec
gs
sub
in
stc
jmp
js
cmp
add
sbb
loope
mov
cs
jmp
dec
dec
lds
sub
adc
sbb
addr16
lea
jo
dec
mov
stos
lods
cmpsl
stos
push
ret
loope
js
lcall
das
test
out
mov
jns
fnsave
xchg
rcll
cmpsl
sbbl
ljmp
push
push
mov
cmp
dec
repz
divb
sub
pop
mov
jns
int3
jae
fwait
imul
mov
rcrl
cwtl
mov
mov
nop
xchg
mov
sbb
xchg
sub
fsubrl
outsl
out
xlat
add
test
inc
stc
insb
std
pushf
out
lock
cmc
neg
les
mov
lret
fsubrs
out
pop
jl
bound
inc
rolb
pop
mov
cwtl
js
in
xchg
fsts
mov
pop
fwait
sbb
lea
inc
cmpl
negl
scas
daa
lods
jg
jnp
push
xchg
sbb
mov
cmpsl
sbb
stc
xor
push
dec
gs
add
mov
pop
or
jno
sub
sbb
add
jne
cmc
cmpsb
sbbl
push
sub
dec
jl
inc
inc
stos
adc
repnz
cmc
sbb
xlat
pmaxsw
andb
cmp
jp
out
test
loope
imulb
pop
dec
adc
cmp
sbb
fldenv
test
sbb
imul
jecxz
imul
je
xchg
add
dec
test
jb
sub
inc
popf
out
hlt
cmp
sub
sub
inc
bound
jnp
mov
push
cli
push
xchg
xorl
jg
pop
aad
pop
inc
enter
nop
mov
out
mov
and
mov
add
cmp
sub
ljmp
sahf
insb
sbb
sub
loop
aaa
filds
push
sub
push
je
mov
fbstp
pop
sbb
aad
shlb
imul
sbb
les
out
jmp
cmp
cmp
mov
jge
push
pop
das
add
pop
xchg
enter
inc
and
add
push
jb
pop
inc
cmp
imul
xchg
mov
aas
mov
adc
mulb
lcall
enter
push
pop
mov
inc
sbb
mov
jp
lods
or
mov
sbb
mov
and
jbe
adcl
jno
in
testl
mov
xchg
scas
sub
or
in
mov
pop
lret
mov
stc
cld
pop
mov
mov
pusha
adcl
jns
cs
push
insl
cmc
dec
rcrl
cmp
or
add
mov
mov
pop
adcl
sub
xchg
out
in
pop
rolb
jge
mov
inc
ret
inc
data16
and
test
or
test
inc
sbb
push
inc
sbb
mov
add
ljmp
jo
add
out
cmpsl
sbb
pop
mov
xorl
imull
mov
cli
mov
sub
pop
ljmp
addb
inc
fisttpll
mov
mov
jns
xchg
xor
push
cmpsb
icebp
das
sti
into
mov
and
jns
pop
outsb
push
into
jge
xchg
adc
ja
adc
fcomip
and
adc
fs
pop
dec
icebp
lahf
sub
xor
or
lds
movsb
mov
out
test
and
inc
lcall
dec
sub
pop
add
int3
insl
stc
mov
daa
jle
sbb
fidivl
test
mov
xor
cmp
lods
adc
pop
movsb
xchg
mov
xchg
call
mov
lea
xchg
or
mov
mov
push
sbb
imul
mov
lcall
sti
loop
sbb
imul
adc
in
inc
and
shrl
lret
jp
subl
pop
in
jge
pop
mov
mov
mov
mov
mov
jns
sub
cmpsl
bound
and
xchg
or
js
jbe
aad
dec
mov
mov
sbb
pop
pop
mov
cs
push
adc
adc
sbb
jle
or
mov
mov
or
dec
jl
or
mov
daa
xor
add
jle
data16
js
xchg
dec
jns
add
xor
insb
in
sub
add
movsb
or
push
arpl
mov
stc
insl
inc
mov
xchg
adc
imul
sbb
insl
dec
ret
cmpl
sbb
stos
scas
sbb
movsl
shll
mov
pushf
test
lds
ja
pop
sbb
arpl
ds
dec
and
adc
sub
cs
loope
gs
out
test
push
jmp
mov
sub
outsb
aas
sbb
cmp
jg
dec
dec
scas
das
sbb
cmc
inc
pop
add
adc
ds
into
xor
dec
stos
fnstenv
jns
cmpsb
hlt
mov
pop
add
icebp
mov
arpl
adc
sbb
lret
mov
mov
inc
pop
ret
inc
loope
mov
push
es
mov
ret
xlat
dec
in
sub
jno
jmp
outsl
sbb
fnsave
xchg
sbb
mov
sub
pop
popf
or
mov
insl
and
js
adc
dec
std
mov
test
jge
cwtl
push
push
mov
std
nop
or
hlt
sub
fstpt
jne
jno
data16
sub
lds
inc
loop
add
mov
pop
xor
sbb
js
push
sarl
outsb
sub
sub
pop
dec
cmp
jmp
cmc
push
jb
fsubrs
fldcw
and
test
pop
sbb
push
or
jb
xchg
inc
mov
push
or
clc
jbe
orl
jl
push
gs
xor
push
sbb
mov
jg
or
jg
ss
stos
enter
pop
jb
mov
sbb
mov
sbb
mov
or
enter
dec
or
jecxz
cmpsl
mov
dec
or
aas
xchg
sub
mov
mov
sbb
dec
jns
pop
and
scas
push
jno
inc
outsl
cwtl
cwtl
fwait
xor
sbb
mov
icebp
xorb
pusha
lods
sti
sbb
lcall
and
and
ret
add
mov
xor
xor
and
lahf
xor
lock
dec
dec
fidivrl
fnstsw
out
out
jb
loope
rol
in
sbb
sub
jbe
lahf
insl
inc
neg
mov
clc
lds
mov
lret
sub
sbb
rorl
rcrl
sbb
fdivrs
dec
mov
adc
cli
or
mov
mov
jno
jl
mov
shll
dec
ss
sbb
js
pop
xchg
cmpsl
cwtl
ret
push
sahf
aad
fldl
inc
inc
jno
in
xchg
mov
mull
xchg
cmp
push
cmpsb
subl
push
jo
sbb
in
mov
mov
insl
sub
vunpcklps
jns
inc
push
adc
and
cmpsb
push
lods
ret
arpl
out
adc
pop
pop
decb
inc
dec
in
ficomps
inc
sub
fistpll
inc
rcl
or
lds
jge
add
xchg
xor
fisttpll
adc
stos
sbb
es
push
inc
sub
or
js
mov
jp
jecxz
xchg
mov
ja
lods
sti
mov
dec
adc
xor
aad
push
scas
js
xchg
insl
dec
inc
push
mov
sub
xchg
call
jmp
xchg
int3
repnz
out
outsb
add
idiv
fnsave
or
and
hlt
jge
push
ljmp
pop
dec
jns
test
jae
push
ret
inc
jne
push
adc
loop
push
ljmp
icebp
xchg
push
xcrypt-cfb
cmpsl
loop
sbb
jp
and
imul
and
lcall
jg
lea
pop
jns
movsb
mov
clc
stos
mov
test
sub
mov
repnz
mov
mov
xor
mov
cmp
les
xor
gs
rcll
ret
loop
sub
daa
xchg
mov
or
add
mov
lret
hlt
sub
sbb
outsb
sbb
loopne
sub
addl
rep
push
xor
sub
sub
jp
test
dec
cmp
adc
jmp
push
inc
insl
mov
lret
mov
mov
sub
sbb
push
pop
arpl
lcall
push
les
xchg
cmpl
test
push
mov
adc
jmp
call
push
jae
addr16
inc
out
xorb
mov
out
inc
inc
sub
sbb
or
rep
into
roll
sub
dec
mov
out
pop
jne,pt
sub
outsl
mov
loope
in
dec
add
pop
dec
mov
pop
sub
stc
dec
sbb
push
mov
xchg
test
das
jp
mov
or
rcll
push
and
cs
lock
sbb
mov
loop
sbb
cltd
testb
sub
and
xchg
xor
push
lret
cltd
push
jns
aaa
scas
insl
cmp
imul
fwait
lret
test
and
in
mov
pop
xchg
jbe
lahf
popf
add
scas
dec
mov
sub
scas
push
xchg
frstor
inc
imul
adc
push
jnp
icebp
dec
loope
mov
fisubrl
ja
xlat
mov
pop
lods
push
pop
or
jecxz
orl
jno
js
ret
push
add
add
cmpsl
popf
rclb
popa
mov
jne
jb
lock
jbe
sahf
sbbl
cltd
pop
xchg
sbb
xlat
mov
orl
sbb
and
jns
aad
repnz
cmc
lds
pushf
dec
dec
gs
ljmp
push
pushf
lcall
ror
in
xchg
in
push
into
lret
inc
and
and
pop
fisubrl
mov
jnp
iret
push
push
sbb
aam
sarb
xchg
not
stos
sbb
hlt
push
or
sub
mov
or
stos
pop
jns
cwtl
mov
pop
sub
stos
pop
cmp
int
jle
sarb
mov
cmpl
jns
xchg
mov
sti
jns
sub
jmp
sub
arpl
sub
lret
pop
and
leave
sub
call
sub
jns
pop
cmove
dec
jns
push
out
adc
xor
dec
dec
sti
ficomps
mov
stos
jecxz
mov
dec
shlb
adc
dec
in
std
xor
dec
lret
jecxz,pn
sbbl
or
pop
add
js
lcall
and
dec
divb
push
ljmp
js
loopne
bound
jo
mov
gs
jb
fmull
jns
xchg
xchg
ja
outsb
subl
pop
mov
cmp
cmp
adc
and
jno
test
xchg
sbb
cmp
sbbl
movsb
xor
pop
scas
nop
jb
mov
mov
dec
fists
inc
ds
clc
xchg
ds
sub
je
xor
jns
xchg
mov
test
push
rcrb
sub
into
ja
cld
cmp
in
push
adc
out
fcmovb
aad
mov
out
lcall
aam
in
addl
ret
movsl
cld
lahf
sarb
mov
cmp
xchg
sub
jge
sbb
mov
cmpsl
dec
mov
mov
lcall
sbb
inc
icebp
adc
std
stos
sbb
xchg
ljmp
xchg
add
pop
mov
sbb
mov
scas
orl
adc
aad
imulb
inc
adc
rolb
lret
dec
xlat
ds
aam
add
pop
addr16
mov
sbb
sbb
pop
mov
sub
inc
das
js
popf
xlat
test
and
xchg
cmc
lock
pop
loopne
jmp
lds
add
lea
mov
ljmp
pop
les
inc
push
mov
repz
xor
test
mov
pop
jne
push
pop
push
xor
lods
iret
mov
fcompl
mov
sbb
xchg
lods
jnp
push
fcom
lret
lcall
xor
lcall
or
or
cmpsl
and
outsl
dec
mov
sbbb
idivb
xchg
xchg
dec
cmp
jl
jns
and
int
xor
out
lcall
sbb
mov
stos
insb
mov
xlat
int
and
popa
sbb
addl
jns
mov
pop
scas
stos
sti
sarb
sbb
or
sub
js
pusha
mov
cmp
sbb
fsubrl
jp
cmpsl
iret
and
and
loopne
jle
add
fstps
je
xor
repnz
add
dec
inc
rolb
in
imul
in
push
push
sti
inc
movsl
dec
adcb
sarb
out
mov
cltd
shlb
pop
leave
cmp
mov
adc
jle
lods
jno
mov
dec
xchg
xchg
mov
lds
mov
xor
mov
cmp
xchg
pop
sub
fidivrs
inc
popa
mov
sub
push
dec
jne
sub
sbb
cmpsb
ljmp
ficoml
andl
fdivrl
out
cmp
mov
pop
add
cld
pusha
fistpll
xor
mov
dec
dec
xorl
aaa
shr
xor
add
js
cwtl
fcomps
sub
call
xchg
lods
jae
scas
xchg
cmp
mov
push
jae
push
inc
imul
mov
int3
js
rclb
mov
addl
xor
fisubl
xchg
sbb
int
movb
imul
mov
lret
inc
scas
xchg
pop
sbb
rcll
and
jp
adc
ret
mov
das
in
lret
lahf
jo
mov
add
fsts
movsb
je
out
js
aam
lret
dec
push
repnz
jns
push
fsubl
sub
pop
pop
fs
mov
or
in
outsb
mulb
aas
lds
subl
pop
int3
xchg
mov
std
js
dec
push
iret
adc
add
and
adc
int
adc
and
sbb
into
lock
ja
cmp
jno
shl
or
jg
or
test
shlb
fldcw
or
xor
push
sbb
repz
stos
sub
xlat
adc
daa
mov
cmp
dec
jl
sbb
xchg
cld
aaa
sbb
inc
mov
mov
mov
in
arpl
shll
sub
jl
test
inc
push
sarb
xchg
mov
sub
fistpll
jle
mov
inc
gs
pop
sbb
scas
push
mov
testl
shlb
aam
call
sbb
iret
xorb
lret
adc
loop
or
lods
add
lds
mov
cmp
cmp
insb
sub
arpl
xor
aaa
mov
frstpm(287
or
jo
dec
adc
inc
shl
daa
add
add
add
iret
mov
and
mov
sbb
stc
dec
sbb
loope
movsb
sub
pop
push
jns
mov
mov
repnz
sub
pusha
xchg
or
or
jo
and
lods
fsubrs
sbb
testb
sbb
ds
lds
jmp
sbb
subb
pop
sub
adc
cmp
andl
fidivrl
jle
js
rcl
xor
repz
inc
inc
test
sub
jns
hlt
arpl
inc
lods
xlat
sub
hlt
stos
xor
pop
cld
ja
xchg
aam
sub
imul
stc
push
cmp
test
movsb
sub
lods
inc
jge
pop
sahf
stos
in
lods
ja
test
aam
mov
jmp
add
ret
mov
jnp
insl
loope
mov
adc
bound
mov
sbb
inc
push
and
sbb
inc
incl
pop
xchg
push
jae
mov
data16
les
scas
stos
push
sub
ret
lods
mov
inc
xchg
cmp
mov
inc
cmc
xchg
jns
pop
xchg
pop
adc
lods
mov
cld
daa
das
cs
shll
adc
xchg
sti
loop
cmpl
ds
push
adc
addr16
filds
sbb
stos
mov
mov
sbb
pop
dec
les
mov
clc
mov
jb
or
insb
sbb
nop
pop
js
das
add
in
xchg
xchg
fldl
mov
xchg
xor
les
sti
lcall
shlb
push
stc
movsb
or
in
adc
xchg
xchg
and
insb
jns
jo
shlb
mov
fwait
adc
ficompl
jp
jecxz
in
sbb
test
inc
in
jb
movsl
add
inc
mov
call
in
clc
sub
push
repnz
insb
push
icebp
js
testb
xchg
popa
test
add
mov
push
adc
cmp
std
jl
mov
into
cmp
xchg
testb
cwtl
push
add
movsb
adc
sbb
addr16
mov
adc
push
xor
insl
dec
adc
notb
int
add
mov
jno
addr16
mov
jl
movsb
or
dec
stos
xor
add
andl
js
hlt
scas
add
cltd
ljmp
mov
push
mov
test
dec
int3
js
call
jbe
adc
clc
das
sbb
xchg
push
js
inc
inc
pushf
popf
push
out
sub
jb
scas
lods
cmpsl
leave
or
clc
push
enter
sbb
add
das
and
cmp
and
add
xchg
sbbb
cmp
inc
xchg
add
iret
push
dec
xchg
sub
pop
lods
inc
xor
cmp
xor
add
pop
push
pop
sbb
insl
test
popa
outsl
inc
mov
sub
movsb
loope
push
dec
adcl
mov
jns
add
fstl
add
movl
cmpsl
sahf
sbb
push
or
repnz
dec
jns
cwtl
jl
cmp
in
ja
int3
push
pushf
movsl
mov
mov
or
jmp
das
lahf
cs
insb
xor
ret
scas
and
mov
pop
in
jae
outsb
fimuls
and
sbb
dec
clc
xchg
sbb
mov
jns
mov
adc
sub
push
inc
sub
add
cmp
sub
jecxz
scas
sub
out
push
scas
inc
into
add
cli
js
dec
arpl
cmp
sub
sbb
leave
cmpsb
push
sbb
sbbb
dec
cmp
inc
ss
or
mov
and
js
iret
sahf
daa
jp
sub
xor
ret
mov
dec
push
scas
sub
outsb
add
mov
js
addb
mov
xor
in
fwait
daa
sbb
and
in
push
push
sub
dec
jmp
or
or
out
pop
push
dec
addl
bound
mov
mov
arpl
stc
xorb
jmp
mov
xlat
pop
or
xchg
sub
dec
es
lods
rcl
sbb
ds
push
mov
data16
sbb
sti
pop
sbbl
push
addr16
popa
mov
js
cmp
adc
sub
rcl
movsb
lret
cmc
cmp
sbb
sti
pop
push
stos
das
adc
sbb
sbb
data16
and
sahf
aaa
testb
call
push
js
add
or
test
sbb
ret
into
movsb
mov
ja
pop
cmc
sbb
sbb
lods
xchg
int3
aam
jmp
test
mov
aad
pop
sbb
jnp
sbb
outsb
mov
insl
push
jg
jb
sbb
mov
pop
push
cmp
sbb
jno
pop
sbb
inc
in
adc
dec
xchg
dec
xor
hlt
pop
mov
adc
sbb
fstpt
adc
sub
fwait
jno
sbb
jg
jbe
mov
cmp
dec
daa
dec
lret
jmp
cltd
lcall
sbb
hlt
fildl
pop
mov
in
js
xor
les
mov
xchg
cmp
jb
jns
out
adc
cltd
aas
pop
adc
and
mov
jnp
or
cmpb
sar
push
fstl
adc
fsubrs
daa
jne
clc
jle
inc
in
mov
cmp
sbb
andb
cmpb
pop
ret
push
add
sub
inc
push
jg
mov
popa
fnstsw
jns
adc
pushf
daa
cmpl
js
test
push
stos
clc
clc
out
sub
outsb
aam
pop
sbbl
inc
mov
sbb
add
jnp
add
inc
pop
repz
push
hlt
xchg
sbb
movsl
mov
mov
sub
scas
sbb
in
cmp
sub
bound
sub
jns
nop
xor
stos
lock
push
mov
sbb
sbb
xchg
outsl
testb
mov
dec
shr
test
mov
fisubrl
das
and
mov
push
test
jnp
or
adc
lods
xchg
jno
dec
cwtl
xor
mov
rcll
and
hlt
imul
rcrb
cmp
pop
daa
cld
sbb
ja
movsl
inc
sub
repnz
out
repnz
repz
sbb
dec
sub
cmp
lds
call
mov
cltd
push
adc
lods
push
mov
syscall
jae
popf
or
mov
ret
push
imul
rcpps
jmp
push
das
xchg
in
sub
sbb
sbb
repnz
or
or
sahf
mov
imul
jl
gs
sub
cmpsl
es
andb
aam
jne
or
xlat
sub
sbbl
das
push
js
addb
jmp
sbb
sub
aam
nop
add
out
mov
jle
add
mov
call
jge
imul
loop
imul
mov
lret
sub
les
push
or
sub
xlat
gs
jns
fmulp
push
cmpsb
sub
sub
ficoml
pop
push
inc
lds
stc
sub
stc
rolb
dec
lods
push
xchg
inc
and
fbstp
rolb
hlt
dec
bound
jb
push
cwtl
sbb
sub
out
xchg
sbb
int3
out
add
inc
xchg
dec
mov
es
push
scas
dec
mov
mov
adcl
xor
lds
cmpsl
jns
pop
sub
cmp
push
mov
mov
adc
sub
mov
cld
fwait
sbb
sub
sti
jmp
jge
xchg
pop
mov
jecxz
pop
pop
mov
loope
stc
mov
xor
loop
imul
test
loopne
jns
outsb
push
in
push
clc
xchg
sub
add
dec
outsl
in
je
cmp
inc
mov
sub
xchg
sub
in
lret
jle
mov
mov
sub
jnp
jae
pop
rolb
jno
popa
pop
xchg
push
addr16
or
cmpl
jmp
jns
sub
xchg
jb
mov
es
rcl
lods
addr16
mov
sbb
ret
xor
xchg
cltd
les
cmp
cmp
sbb
ljmp
xor
cmp
dec
add
sub
shlb
mov
nop
mov
outsb
lahf
subl
dec
mov
incl
fistpll
add
cmp
mov
pop
sbb
daa
jge
cs
or
jns
lods
jbe
pop
test
rorb
cmc
repnz
bound
xor
inc
push
aas
push
inc
adc
or
in
clc
mov
xchg
mov
mov
cwtl
nopl
das
mov
js
xor
sti
mov
cmp
out
add
xor
xor
pop
mov
jp
out
sub
sub
add
sbb
sbb
pushf
pop
xor
fiaddl
orl
jae
aam
int
cmp
mov
lds
fmull
or
or
sbbl
jge
js
cmp
mov
sbb
pop
jo
mov
test
inc
in
cmpb
fidivrl
pop
scas
xchg
js
test
jecxz
sub
popf
add
sbb
inc
leave
cmp
movsl
pop
daa
mov
lea
jp
aaa
in
xor
mov
rcr
inc
cmp
adc
sub
jle
cmc
sbb
cmp
sub
in
inc
mov
in
xor
in
mov
movsl
into
imull
mov
pushf
mov
jno
in
js
pop
std
jge
call
shrb
popf
jl
lock
jne
bound
stos
push
in
repz
jl
xor
add
loop
sub
mov
mov
mov
dec
test
mov
sbb
push
pushf
aaa
jnp
ret
sub
cmc
cmpsb
pusha
adc
dec
push
xor
and
out
fwait
dec
jmp
sub
inc
push
lahf
fwait
fs
push
sub
cwtl
enter
xchg
in
das
ljmp
jl
mov
les
mov
sub
sub
loopne
sbb
inc
call
inc
pop
cltd
es
data16
mov
out
js
fdivs
sbb
mov
lock
cmp
adc
mov
xchg
ficomps
stc
xor
pop
or
mov
cmc
add
mov
dec
dec
idivb
add
xor
mov
aam
movb
mov
roll
lods
fldenv
jns
push
std
nop
sub
sbb
fldcw
out
loopne
daa
push
sbb
push
add
or
xchg
mov
test
rclb
sub
push
mov
lret
fcoms
cwtl
mov
stc
xchg
lret
lahf
arpl
test
sahf
into
cmp
sub
fs
push
jns
pop
or
push
hlt
xor
sub
stos
in
sbb
sbb
dec
scas
inc
enter
sub
inc
ret
xor
inc
testb
test
sti
add
out
or
lods
stos
cmp
rcll
mov
insl
cmc
call
sarl
stc
mov
fcompl
add
sub
xchg
bound
popf
outsb
daa
mov
inc
sub
arpl
xchg
cmp
leave
sbb
stc
mov
into
xor
mov
jae
and
push
sub
std
push
sbb
pop
scas
das
divl
ret
mov
stc
jnp
lret
lea
dec
sbb
decl
inc
push
aam
into
and
sbb
sahf
out
lret
inc
and
mov
xchg
adc
sbb
test
mov
shll
xor
outsb
mov
and
mov
sbb
pop
pushaw
fwait
jne
cwtl
shl
es
dec
push
hlt
ss
les
pop
or
adcb
push
jns
pop
sbb
sbb
adc
cwtl
daa
fucomp
leave
adc
mov
sub
fiaddl
sbb
xlat
ud1
xor
or
in
pop
sub
sub
add
sub
add
sbb
sbb
ss
sbb
xchg
insb
ljmp
xor
add
insb
dec
lods
das
into
fsts
repz
imul
cli
hlt
outsl
mov
in
imul
fsubl
aam
sub
aam
sbbl
sbb
xchg
gs
jns
not
sbb
xor
dec
mov
adc
jns
movsb
hlt
push
xor
xchg
call
scas
mov
mov
mov
sbb
cmp
mov
inc
js
cmp
push
adc
test
scas
iret
jge,pt
rclb
scas
out
mov
push
popa
outsl
xlat
fisubrl
mov
mov
stos
inc
mov
adc
mov
sub
lods
add
mov
or
xchg
jns
or
fistps
and
sub
lock
int
sbb
sbb
mov
movsb
inc
lock
out
sbb
xchg
mov
popa
insb
cmpsb
cmp
fnstcw
insb
lods
stc
or
ret
cmp
inc
push
push
addr16
popf
pop
mov
xchg
call
repz
cmpsb
or
xchg
xchg
sub
aam
scas
subl
cmp
popf
subl
sahf
das
jns
das
adc
pop
push
pop
push
sub
push
xchg
mov
jno
add
and
and
dec
stos
ret
into
shlb
adc
push
push
and
sbb
outsl
dec
push
rcl
pop
sbb
fadd
cmc
cmp
test
test
push
fs
xor
sbb
adc
or
jb
in
sbb
sbb
mov
sbb
xchg
xchg
or
cmpl
repnz
stos
popf
cmp
movaps
dec
shlb
sub
jno
mov
jbe
sbb
into
out
inc
ja
xor
jae
lahf
jmp
and
sub
lock
pop
sub
cmp
out
mov
dec
out
lock
mov
cmc
and
sub
mov
cmp
sbb
cwtl
push
jecxz
adcb
push
cmpsl
jecxz
shrl
cwtl
out
mov
subl
in
cmp
sub
sbb
add
ret
gs
push
cmpb
mov
daa
daa
popa
ss
lret
jnp,pn
mov
sub
jae
lods
jle
sbb
ficomps
jo
push
add
andl
aaa
sbb
push
push
adc
sub
push
fcmove
jnp
jno
sbb
jp
es
rdtsc
and
fidivl
std
mov
push
lods
clc
ds
int
cmpsl
adc
aas
jns
jns
lea
mov
ficomps
jbe
mov
stc
mov
and
cld
addl
adc
add
lahf
inc
lcall
jns
lea
divl
sti
stc
shlb
js
sub
in
cmp
cmp
sub
hlt
fwait
lods
pop
jp
in
xlat
aad
ljmp
loop
sub
in
pusha
jnp
fdivl
mov
xchg
lret
mov
inc
xchg
xchg
stos
loope
sbb
popa
aaa
pop
dec
adc
push
mov
insb
ljmp
xchg
push
es
inc
mov
imul
hlt
jge
out
mov
stos
lods
sbb
lahf
insl
clc
outsl
stos
mov
stos
das
adcl
inc
outsl
jns
mov
aam
push
flds
das
jecxz
jnp
sub
insl
sbb
stos
mov
fsubrp
dec
test
fcompl
jbe
sub
xchg
xor
daa
jns
loopne
mov
sub
ja
lret
cmp
stc
sbb
add
sbb
scas
in
mov
inc
jns
push
ret
addb
or
xchg
loope
push
sub
xchg
xor
mov
sbb
jle
dec
jb
shll
jne
shl
push
mov
clc
pop
jb
cltd
cmp
lods
dec
leave
daa
loop
push
jmp
mull
fstl
lock
xor
jge
mov
ds
fldz
imul
ret
je
in
adc
testb
adc
dec
insb
orl
sub
or
dec
xor
pop
fnsave
dec
pop
mov
std
jne
aad
imul
xorl
adc
mov
lret
adc
jbe
orl
outsl
mov
pop
sbb
cmc
mov
inc
cmp
andb
or
bound
fs
push
sbb
sarl
cld
jns
dec
das
adc
cmp
xchg
xchg
sarb
movsl
mov
in
sbb
jecxz
cmp
sub
inc
push
pop
xor
in
lret
js
outsb
mov
popf
aam
lds
xchg
out
js
mov
xor
sub
xchg
cmp
jns
pop
cmpsb
push
xchg
ror
js
cwtl
aad
rol
mov
lcall
loopne
out
ja
nop
cmpsb
mov
add
xor
hlt
shr
push
movsl
mov
mov
mov
test
mov
xchg
test
lods
add
call
fdivrs
in
out
bound
out
loope
outsw
push
jmp
pop
sti
push
add
js
adc
jp
mov
sub
orb
pop
das
xor
scas
arpl
or
jo
subb
sbb
push
arpl
xchg
movsb
lret
rolb
jecxz
sbb
shr
lahf
or
test
jge
pop
pop
enter
inc
xor
xor
or
add
icebp
js
repz
ljmp
jns
hlt
stos
sub
ss
lret
outsl
ja
icebp
shlb
lret
pop
sbb
sub
insb
mov
popf
addl
and
or
subb
push
sbb
inc
mov
cltd
cmp
cli
jecxz
xor
orb
lea
push
pop
xchg
sub
jg
pushf
mov
mov
xlat
repnz
push
mov
mov
cmp
loopne
sub
jns
out
movsb
pop
mov
ret
xor
fwait
lea
sbb
mov
arpl
repnz
fiaddl
xor
add
push
addr16
pcmpeqb
add
jo
lahf
rolb
sub
sub
popl
je
test
mov
addl
xchg
or
adcw
push
push
cmpsl
adcl
xchg
aas
xchg
sub
cmpsb
jns
dec
mov
xor
sbbb
insl
fldcw
in
push
xor
or
loope
cmpsl
adc
sub
cmp
xchg
ljmp
push
je
add
add
cmp
push
jb
sub
imul
shrl
push
clc
in
adc
and
clc
test
lea
test
stc
fmulp
cmp
mov
loope
mov
xor
cmpsl
ret
js
mov
es
jb
aam
add
out
sub
and
jl
test
sbb
cli
mov
xorl
fs
dec
mov
jns
mov
xor
arpl
rclb
popl
add
sti
sbb
inc
mov
shrl
xor
mov
bound
ljmp
push
xchg
out
test
fcomps
sub
daa
fs
sbb
dec
sub
jno
fidivs
jne
popf
sbb
jo
mov
pushl
mov
mov
lret
imul
test
scas
iret
and
leave
test
int3
scas
sub
inc
pop
push
jae
sub
pop
stos
fsts
shr
mov
inc
sbbb
or
mov
jmp
subl
sub
nop
stos
pop
sti
loope
cmpsb
shrl
mov
nop
pusha
sbb
lahf
sub
jg
inc
ret
mov
lds
cmp
push
add
push
xchg
out
cmp
cmpl
adc
push
in
mov
mov
outsb
andl
lea
insb
inc
push
xchg
add
je
adc
cmc
loope
mov
push
insl
loop
and
jb
mov
sub
sbb
pop
out
or
push
ret
inc
push
testl
stc
inc
int3
mov
das
lret
mov
fstps
shlb
cmove
mov
jns
fadds
and
mov
test
mov
jecxz
xor
pushf
mov
cmp
or
jmp
jo
fnstsw
bound
jecxz
pop
sub
orl
sahf
adc
js
lret
mov
repz
fs
ja
mov
sub
inc
jmp
in
aam
and
negb
pop
jle
aad
mov
mov
insl
pop
and
sbb
sbbb
and
push
cmp
xor
das
add
mov
popa
add
add
jae
stos
ljmp
scas
in
dec
mov
nop
or
push
xchg
lcall
sti
jge
outsl
movsb
push
aad
mov
sub
imul
fisttpl
jnp
iret
jecxz
sbb
or
int
fldl
fldz
sti
subb
sbb
xor
sub
push
inc
adc
dec
add
shlb
adc
xor
cltd
mov
or
mov
std
ja
out
sbb
sbb
xchg
jno
outsb
mov
mov
test
aam
mov
sbb
cmpsb
test
inc
mov
ljmp
pop
fwait
outsb
dec
mov
mov
adcb
jp
stos
push
lock
je
adc
cs
das
fdivrl
daa
xchg
in
mov
cmpl
in
in
fldl
in
outsb
mov
dec
insl
das
sub
inc
mov
fwait
scas
mov
xchg
inc
ljmp
cld
loop
push
frstor
mov
inc
cmc
movsb
mov
les
stc
incl
popf
sub
xor
push
cld
int3
rolb
cmp
shll
jns
cmc
pop
dec
inc
mov
jnp
sub
addr16
decl
mov
push
adc
mov
xchg
cmc
decb
lret
ret
das
add
push
icebp
addl
mov
sbb
mov
addr16
popa
push
hlt
rolb
lods
clc
sub
ret
sub
xchg
cmpsl
movb
mov
sbbl
sub
jns
or
xchg
fdivl
xorl
cld
call
fcomps
dec
or
clc
fwait
inc
out
pop
sub
das
mov
insb
mov
jmp
mov
inc
aam
test
xchg
add
pop
outsb
sysenter
das
repz
imul
add
inc
add
push
lds
jecxz
sub
mov
lods
fwait
das
and
arpl
js
out
or
sub
push
fidivrl
fs
rcl
or
std
subb
mov
jg
add
add
push
sub
dec
push
int3
sbb
repnz
mov
ljmp
and
jbe
or
mov
lret
shrb
mov
shl
addb
sub
andl
xchg
add
dec
push
sbb
dec
stc
stos
fcmovu
pop
jns
adc
push
jbe
gs
sub
outsb
js
add
sbb
lret
xor
push
inc
scas
stos
daa
xor
sti
adc
cmpsb
inc
mov
aaa
jno
movsl
inc
sub
pusha
ret
and
sub
outsl
jmp
decl
stos
cwtl
xchg
mov
lea
repz
sbb
in
mov
or
cmp
mov
push
add
sbb
mov
in
xor
jmp
out
add
adc
jae
sub
loopne
pusha
ret
mov
sbb
leave
add
mov
fwait
out
jle
push
jmp
mov
xor
pushf
sub
in
push
subl
jecxz
jle
mov
sbb
sbb
iret
cmp
inc
pop
xchg
mov
mov
sbb
fs
pop
std
scas
pop
mov
sbb
ja
xchg
in
pop
pop
and
pop
jae
int
cmp
sbb
es
call
push
inc
add
outsb
xchg
into
jl
jbe
or
ret
add
sub
xchg
pusha
and
push
pop
xchg
fdivrs
mov
idiv
ljmp
jne
scas
mov
fs
fsubs
lea
xor
aaa
jns
or
jb
push
dec
sub
fsubp
mov
movb
mov
jg
repz
shr
js
std
and
ss
movsb
pop
stos
cmp
add
mov
mov
inc
cmpsl
mov
ror
xchg
out
pop
outsb
dec
lods
inc
mov
data16
cltd
lods
sbb
in
lahf
dec
stc
mov
inc
and
dec
inc
xor
out
sbb
dec
xor
mov
out
aaa
lds
lds
cmp
out
pop
jmp
sub
or
xchg
jp
sbbl
sbb
pop
mov
xorl
xor
and
js
xchg
cli
adc
cld
fidivrl
sub
cwtl
imul
aas
sahf
mov
and
dec
inc
iret
rorl
xor
mov
xor
fld
xchg
jge
mov
and
pop
cmc
push
adc
repnz
andl
sti
int
in
test
cmpsb
cmp
fsubrs
jne
push
and
ja
mov
push
push
les
push
adc
inc
dec
jns
cs
testl
sub
sbb
lret
call
arpl
sbb
subl
push
sub
sbb
testb
clc
imul
xchg
jne
iret
jl
dec
and
daa
fcoms
in
out
addl
sbb
iret
sbb
or
fwait
xor
mov
loop
jno
pop
push
pop
xorb
subl
rep
in
xorb
adc
xchg
loopne
filds
fs
push
dec
clc
addb
daa
leave
enter
shrl
dec
in
cmp
push
jg
in
sub
mov
sbb
aam
ja
mov
adc
and
insl
cli
jns
js
xlat
fwait
dec
repz
dec
push
sbb
push
or
push
sub
notl
xchg
aam
xchg
movsb
cmp
cmp
testl
in
add
xor
sbb
jae
push
jns
mov
das
loop
fisubrs
adc
lds
sbb
bound
mov
and
push
push
fmull
sbb
fsubrs
push
int
bound
jl
lahf
roll
push
xor
sbb
inc
stc
pusha
dec
cmp
pop
sbb
bound
mov
sub
mov
popa
ret
dec
xchg
mov
fwait
add
inc
and
sbb
jl
or
dec
xchg
mov
cmp
and
pop
sbb
imul
add
xchg
or
lods
shrb
sub
dec
call
ja
fmull
mov
stos
cmp
or
and
insl
call
add
pop
ret
lea
or
add
stos
push
test
mov
sub
sahf
add
test
dec
fcom
xchg
arpl
sub
loop
add
jnp
jmp
inc
cmp
andl
out
jne
sbb
ds
sbb
add
test
cmp
sbb
adc
and
call
sbb
mov
loope
scas
cmpsb
sub
adc
daa
inc
repnz
js
lcall
mov
sbb
je
jns
mov
sbb
inc
fwait
sbb
add
sbb
xchg
mov
enter
pop
push
lcall
js
sub
int3
jbe
xorl
outsb
inc
jae
cld
js
icebp
les
sub
or
inc
dec
mov
sbb
lds
je
push
sahf
rcrb
inc
stos
cs
xchg
rcrb
bndstx
dec
std
cltd
aad
mov
sbb
pop
push
clc
sub
movsb
ss
sbb
loopne
jle
mov
xchg
inc
sub
pushf
xchg
push
mov
jg
xchg
cmp
enter
pushf
imull
xor
cwtl
mov
lret
and
sbb
xchg
sar
sbb
jl
cli
pop
mov
and
aas
jno
push
pop
pop
jmp
dec
test
rorl
jb
add
idivl
sbb
sub
outsl
cmp
push
mov
lods
repz
xchg
bound
ljmp
js
rcrl
fists
insl
ss
cld
cmp
jb
ja
jmp
jns
movsb
xor
sub
movsb
loopne
shl
ja
stc
add
xchg
and
jne
andl
sbb
push
scas
and
cmpl
add
lea
js
xchg
mov
mov
xorb
mov
fcompl
jb
movhps
jno
sbb
das
in
jle
setge
les
jae
sub
pop
rcrl
aam
xchg
shl
nop
or
sub
or
sbb
cli
add
test
push
add
imul
push
je
jb
add
add
in
stos
rcrl
scas
insb
or
dec
mov
orl
daa
fldcw
pushf
sbb
push
push
test
inc
dec
out
push
xlat
fisubrs
sub
imul
mov
fildl
insl
pop
sbb
shlb
popl
xchg
adcl
and
pop
sbb
mov
out
mov
cwtl
popa
mov
sbb
pop
mov
mov
adcl
pop
cmp
sub
xlat
test
xchg
mov
jno
sub
pop
mov
in
dec
into
push
test
lock
in
std
mov
jns
jmp
subl
aad
push
repz
clc
jnp
or
xor
fstpt
xchg
jmp
aas
je
sbbl
cmp
cmp
push
push
push
sub
add
mull
xchg
repz
stc
push
xor
aam
jns
insb
pusha
subw
jge
mov
or
inc
icebp
test
in
mov
inc
daa
xchg
cltd
ret
mov
and
clc
mov
adcl
and
js
rorl
stc
leave
popa
subps
sbbb
test
out
mov
jle
and
call
jns
fdivr
test
jg
int3
xor
rorb
pop
sbb
cld
pop
and
loopne
sub
adc
mov
loopne
subb
enter
xor
sub
inc
rcrb
dec
test
sub
dec
or
lahf
dec
call
bound
aas
lret
loopne
arpl
dec
cld
add
jns
mov
sbb
popa
inc
mov
sub
xor
jns
pop
aam
xor
push
outsb
mov
jl
fstpt
sbb
daa
clc
call
arpl
dec
addr16
mov
cs
cmpsb
stc
mov
mov
xor
add
pop
sbb
mov
adc
mov
icebp
pop
clc
negl
aaa
pop
mov
outsb
dec
movsl
mov
or
sbb
hlt
and
mov
jge
sbb
sbb
bswap
jne
sarl
aaa
jns
jl
mov
sbb
pop
notl
orl
push
ret
out
push
mov
int3
or
jle
or
jno
push
js
pusha
pushf
add
sub
adc
mov
xor
pop
iret
divl
pop
sahf
xchg
out
sub
cli
enter
jbe
sbb
orl
enter
pop
lea
in
stos
jl
pop
and
outsl
dec
sub
jl
scas
sbb
lcall
inc
adc
cmp
ja
cmp
push
loop
or
jb
sbb
fnstcw
cmp
cli
sub
cs
and
int3
push
add
into
shrl
clc
inc
outsl
iret
aaa
sub
mov
iret
rorb
scas
mov
sbb
lods
pop
pop
xorl
test
pop
mov
fs
add
inc
sub
xor
push
repz
and
enter
xchg
ret
fdiv
in
and
data16
je
fwait
shrb
mov
sahf
ret
jno
push
pop
pop
loope
pop
sub
lcall
shlb
pusha
scas
inc
pusha
sbb
pop
std
push
push
mov
jno
xchg
fimull
xchg
loope
loop
jae
and
mov
mov
repz
aaa
pop
faddl
cmp
sbb
mul
sub
rol
das
dec
sbb
xchg
add
test
sub
icebp
clc
push
nop
stos
and
cmp
jmp
push
xchg
and
mov
push
mov
repz
rcr
les
xorl
shll
xchg
leave
out
loop
lds
inc
leave
sti
fistps
aaa
sub
or
xor
in
xchg
aam
cmp
inc
dec
push
pop
faddl
js
xlat
jge
icebp
adc
in
mov
jae
sub
int3
push
aad
rcrl
pop
repnz
mov
cld
test
inc
pop
imul
mov
jg
stos
sub
or
push
call
push
in
outsb
adc
iret
sbb
and
stos
sub
mov
hlt
iret
sub
test
mov
popa
inc
jecxz
sbb
jne
and
cmpsl
stos
hlt
or
fidivrs
jno
andb
pop
insb
sbb
sbb
hlt
cld
into
sbb
push
xchg
fnsave
adc
mov
sub
testb
lret
sbbb
jbe
rcrb
dec
xchg
out
call
cmp
inc
mov
test
adc
mov
push
pop
xchg
dec
aas
sbb
jg
inc
cmpsb
xor
add
fldl
dec
mov
into
sbb
js
xor
lods
arpl
and
ss
xor
bnd
js
pop
aas
add
xor
or
dec
inc
pop
sub
jae
subb
setbe
ja
ret
dec
loop
gs
out
jmp
sub
mov
aad
xchg
add
std
ret
push
sub
mov
push
pop
mov
int
adc
adc
inc
scas
xor
mov
fcoms
jl
push
scas
jno
cwtl
out
inc
jb
cmc
cmp
pop
and
jns
xchg
xor
xlat
lea
xor
inc
mov
adc
adc
rcrl
sbb
xor
sub
fidivrl
aas
mov
pop
shrb
je
clc
push
hlt
push
mov
jbe
int3
lods
fsubrs
lds
and
in
cld
add
fisubrl
lahf
xor
cwtl
sbb
lcall
test
xchg
mov
popf
or
push
cmpl
push
mov
mov
jno
jg
sub
enter
jne
fadds
mov
mov
fldl
ja
push
mov
lds
or
in
loopne
mov
add
add
inc
xchg
mov
stos
and
lock
daa
and
fadds
fcompl
sub
repnz
adc
and
pop
cmp
pop
xchg
ja
pop
mov
test
into
jle
iret
cmp
push
sub
jp
mov
sub
shrl
arpl
sbb
inc
or
scas
pop
jne
sbb
cwtl
movsl
push
cli
sbb
sub
xchg
sti
or
iret
data16
js
sahf
repz
jns
mov
ret
mov
push
sub
stc
aam
jge
mov
ficoms
das
inc
pop
inc
addl
adc
sbbb
repnz
xorl
dec
inc
fisttpll
or
push
ret
data16
js
popa
sahf
imul
fnstcw
and
call
push
mov
mov
sub
lret
sbb
ljmp
cmpl
cmpsb
stos
js
imul
out
aaa
fwait
rorb
jns
movsl
ja
movsb
push
sub
adc
pop
mov
sbb
inc
inc
les
cvtpi2ps
sbb
cmp
mov
test
cmc
addl
shl
in
aam
inc
ret
js
sub
ret
sub
pop
fisttps
in
addl
push
stc
fsub
test
jl
jns
xchg
adc
adc
js
xlat
int3
test
mov
mov
jns
push
aaa
fnsave
mov
dec
inc
loop
int
ja
out
repz
mov
enter
mov
out
jns
insl
mov
dec
push
inc
dec
xor
cs
cmp
inc
push
mov
pop
dec
les
sti
cli
arpl
enter
cmp
mov
cmp
jp
push
lods
js
daa
fldt
repz
sub
movsb
jbe
mov
addl
psubd
sub
stc
js
xchg
and
rcl
sub
sub
dec
es
and
mov
cmp
ljmp
inc
adc
imul
mov
ret
mov
sub
mov
ficompl
push
add
sbbb
inc
xchg
and
dec
cmpsl
sbb
fdivp
clc
jmp
iret
data16
or
xorl
add
je
and
push
prefetch
insb
sub
cmp
out
jne
cmc
sub
push
or
lcall
mov
jg
enter
js
pop
xor
outsl
sbb
pusha
test
jle
out
subl
into
push
jns
es
sbb
into
xchg
push
or
outsb
jb
jns
mov
bound
pop
popa
lock
ljmp
jl
cmp
loopne
pop
jl
xchg
sub
inc
push
xor
mov
dec
cmpsb
sbb
jecxz
outsl
addl
jle
mov
add
popa
xor
js
mov
mov
push
loop
call
lcall
mov
orb
les
insb
jb
jge
jb
shrb
jbe
dec
mov
fisttpll
lods
enter
loopne
adc
jns
lods
jo
mov
cmp
arpl
loope
xorl
sahf
pop
les
es
and
shl
fisubl
outsl
cmpsl
adc
and
sub
rclb
scas
push
xchg
xchg
inc
js
aaa
and
repnz
mov
out
xchg
mov
cmp
sti
pop
inc
addl
jp
add
cmc
add
out
cltd
cli
and
shll
mov
jbe
xor
jne
cmpsb
jno
mov
or
mov
push
les
sub
push
push
dec
push
int
rcrb
rorb
mov
sub
test
pop
addb
hlt
outsl
cs
sub
lods
lea
xchg
mov
fcomps
push
mov
sbb
jb
jg
stos
cs
xor
mov
hlt
stos
pop
call
push
sub
mov
push
jmp
xlat
js
das
daa
sbb
inc
or
sub
repnz
sbb
sub
pushf
or
dec
xchg
xchg
jp
jne
and
dec
jb
fnsave
jp
lds
test
inc
sbb
dec
inc
inc
adc
mov
jbe
jne,pt
xchg
icebp
mov
test
jbe
xchg
mov
cmp
sub
shl
jl
fsubrp
dec
int
pushf
dec
xchg
and
mov
fildl
push
cmp
sub
jl
and
xchg
mov
jno
xchg
sbb
enter
sub
rolb
lock
lahf
shrb
shrl
fisubl
lods
cmp
cmpsb
test
mov
sub
pop
dec
mov
aas
leave
in
out
mov
inc
and
ret
sbbb
idivb
sbb
movsb
jns
inc
pusha
dec
jl
cmp
arpl
xchg
nop
mov
mov
js
and
adc
mov
int3
cmp
dec
or
inc
pop
mov
push
gs
or
sub
mov
out
adc
sbb
les
or
pop
mov
icebp
popf
xchg
nop
enter
inc
sub
sarl
push
mov
pop
cmpsl
push
orl
xchg
mov
fcompl
movsb
scas
dec
sahf
clc
push
cmpsb
xchg
mov
fidivrs
sub
subl
push
or
dec
push
fucom
mov
adc
mov
fidivrl
xor
cltd
sub
fsubrp
and
push
mov
ljmp
stos
repz
fcomps
mov
outsb
ret
or
adc
aaa
call
aas
dec
sbb
adc
pusha
or
sbb
ds
pop
les
pop
pop
jb
lods
rorb
add
mov
or
cmpsl
fwait
inc
cmp
inc
pop
fstps
shlb
sub
push
rorl
lret
xchg
or
sub
insb
lods
scas
mov
pop
sarb
sbb
adc
lea
movsl
sarb
fldcw
pop
adc
jmp
sub
rep
sbb
jns
lret
jmp
jg
inc
fistpl
fmuls
mov
xor
pushf
shll
xchg
jno
or
push
mov
fdivl
adc
scas
aaa
mov
add
jno
stc
and
xor
out
xlat
js
js
dec
mov
shrl
sub
dec
inc
in
mov
jp
sbb
sub
push
adc
insl
inc
add
inc
fstpl
pop
pop
iret
les
ljmp
mov
js
jns
std
and
mov
ret
das
mov
or
sbb
push
icebp
jno
add
mov
movsl
inc
jae
add
mov
add
dec
mov
fwait
das
pop
jmp
inc
fsubr
in
push
std
sbb
mov
sarb
rorb
insb
mov
jns
inc
mov
jb
pop
fldcw
stos
lea
jno
xor
sbb
xchg
arpl
mov
mov
ret
mov
dec
js
xchg
out
mov
pop
fisttpl
add
setns
clc
xchg
inc
addl
fiaddl
test
into
cmp
inc
scas
aaa
les
dec
push
divl
lods
test
xor
repnz
or
xchg
push
dec
push
jo
xchg
pusha
jle
mov
lret
xchg
push
adc
adc
sbb
stos
sbb
add
out
dec
jns
or
or
pop
gs
sub
push
jns
pushf
mov
lock
xor
jle
popa
aaa
sub
jno
xchg
divb
icebp
sbbb
lds
fildl
icebp
hlt
lods
mov
or
fcomps
add
js
cmp
dec
sub
pop
cmp
stc
stos
ret
inc
xchg
daa
rcll
xchg
sbb
jmp
out
xchg
dec
sbb
fildll
lcall
push
cmp
shlb
andl
popf
and
jno
mov
push
sbb
adc
xor
mov
xchg
sub
pop
dec
jns
data16
lcall
pop
rorb
push
sbb
loopne
fsubrs
in
or
lods
xchg
jns
ds
jno
lret
push
cmp
out
sbb
cltd
subl
sbb
les
das
mov
call
fs
imul
and
addr16
push
lods
in
adc
sub
xor
adc
mov
fwait
pop
jne
loop
inc
xor
xlat
adc
dec
xor
push
cmp
cmp
ja
imul
js
pop
dec
ret
scas
sub
fbstp
sbb
sub
add
lds
arpl
mov
lahf
call
fmull
daa
andl
mov
inc
les
sbb
sub
mov
das
arpl
adcb
jnp
sbbb
lcall
in
das
repz
ret
cmpsl
mov
cltd
push
cmp
es
xlat
cmp
arpl
mov
or
pusha
sarb
sub
mov
inc
cmp
mov
xchg
nop
push
sbb
xchg
repnz
jg
stc
loop
sub
sbb
push
add
aaa
scas
pop
mov
add
sub
sbb
adc
xchg
mov
push
out
repz
in
push
stos
xchg
pop
insb
xchg
inc
xchg
icebp
sub
adc
add
test
pop
test
jne
add
xchg
and
lock
sub
das
fstl
outsb
addb
pop
mov
lea
or
sbb
push
rcrb
pop
cltd
loopne
push
jo
test
adc
je
popa
fs
dec
aam
jnp
pop
in
popf
in
xchg
sub
xor
mov
adc
fsubs
ja
xchg
je
imul
sbb
jns
insb
add
add
dec
pop
mov
mov
sbb
daa
fsubs
sub
add
xchg
lock
jae
in
inc
repnz
dec
movsl
cmpb
pop
push
das
sub
adc
xchg
dec
or
jns
cli
xchg
mov
pushf
scas
movsl
sub
adc
cltd
sbb
aas
pop
sbb
push
imul
ljmp
sbb
rcll
sub
xor
xchg
lcall
xchg
stos
xorl
ret
jo
test
dec
fmuls
lds
sub
out
inc
rcl
fwait
js
arpl
cwtl
das
jge
jp
addr16
sbb
pusha
ds
sbb
std
jns
sub
addl
adc
testb
jno
dec
test
dec
ret
mov
push
imull
test
jo
mov
adc
sbb
popa
mov
dec
orl
xchg
ret
add
das
in
ds
call
outsl
scas
jg
add
mov
scas
in
cmpsb
pusha
sbb
mov
add
ja
adc
cli
orb
push
pop
adc
stos
pusha
sti
sbb
sub
pop
or
sbb
js
and
aaa
or
cmpsb
imul
je
push
je
pop
cwtl
or
mov
in
or
sub
sbb
lret
js
mov
fucomip
and
sub
jae
outsb
add
cmp
pusha
lcall
add
cmp
add
mov
lock
inc
pop
out
outsl
add
jl
bnd
sahf
dec
mov
notl
loopne
cmp
dec
sub
or
stc
js
arpl
or
jbe
sahf
js
cltd
das
pop
cmc
jge
jns
lock
imul
cmp
out
mov
out
push
ja
flds
cmc
js
arpl
mov
loopne,pt
rcll
sub
repz
sbb
dec
ss
xchg
in
jge
je
fwait
js
push
dec
jo
or
mov
cmp
in
pop
jne
int
push
jmp
ret
xchg
push
add
addb
mov
or
fs
decl
movsl
xchg
mov
cwtl
int
movsb
add
js
loope
mov
lock
addl
adc
dec
in
test
gs
sti
push
jns
xchg
sbb
xchg
add
and
jno
mov
ja
cmp
cwtl
xchg
scas
sub
repz
out
arpl
out
pop
sbb
jg
out
cld
sub
movsl
push
daa
cmp
push
stos
push
xor
sub
movsb
mov
xchg
stos
clc
ja
lahf
stos
imul
sbbl
inc
shrl
jb
arpl
mov
hlt
clc
lret
mov
pop
lcall
jbe
insl
ljmp
rcrl
and
add
sti
addr16
mov
fdivrs
pop
lret
sub
pop
je
adc
jo
mov
push
js
adc
shlb
mov
enter
inc
push
daa
jge
cmpsb
les
out
xchg
push
jg
jbe
icebp
fstpt
push
outsl
xchg
mov
mov
cltd
adc
mov
sub
pop
sub
imul
and
jb
es
mov
xchg
rclb
and
popl
cmp
into
mov
stos
xorl
sub
inc
aad
sbb
inc
std
inc
sbbl
test
cmc
pop
push
adcl
push
jns
sub
fwait
int
in
mov
sub
sbb
xor
pop
jmp
jmp
jns
sbb
adcb
mov
data16
push
xchg
fnstenv
test
pop
and
jne
aaa
sbbl
xor
addl
xchg
aad
pop
push
lock
movb
je
adc
cmp
mov
scas
inc
add
fs
jnp
sub
mov
shll
jno
fmull
lcall
outsl
or
jb
fwait
pop
test
test
shrb
adc
push
pop
dec
shlb
aam
jmp
in
in
add
scas
or
xor
aas
xor
out
pop
addl
fstpt
pop
insl
dec
push
jle
and
sbb
dec
sarb
push
and
int3
jns
clc
dec
dec
cld
fisubrs
dec
jecxz
ret
sbb
sub
js
sub
xchg
xor
xor
sub
jl
mov
mov
pop
push
mov
adc
mov
sub
or
cwtl
sub
stos
cmc
ret
jnp
sbb
add
ret
push
adc
sbb
cmpsl
pop
in
jae
jns
xchg
push
lcall
pop
jb
cs
jns
sbb
mov
lea
jecxz
dec
fisttpll
outsl
lods
ret
test
fwait
les
stc
sbb
push
test
xchg
xorb
fwait
int3
adc
addr16
clc
stos
mov
or
mov
sub
in
mov
adc
int3
loop
insb
imul
lods
pop
faddl
xchg
aad
or
test
rcr
mov
scas
sbb
je
mov
jb
faddl
movsb
lea
jb
sub
shlb
mov
inc
push
outsl
or
andl
stos
pusha
fbld
inc
test
mov
mov
sub
jmp
xor
jbe
sub
sub
out
or
mov
xchg
std
push
or
sbb
mov
sub
and
inc
sbb
jle
mov
cmp
pop
les
sbb
enter
scas
mov
sbb
mov
jmp
xchg
ljmp
sti
pop
mov
cmpsb
in
leave
sbb
cmp
into
addl
xchg
sub
inc
adc
shlb
in
ljmp
stc
enter
and
roll
cmpsl
xor
jmp
loopne
stc
sbbb
mov
inc
sbb
sbb
lods
addr16
scas
xor
jp
xchg
cmp
or
dec
callw
movsl
lea
mov
enter
fistpll
in
in
nop
push
fldt
fsts
mov
add
gs
fstpt
scas
mov
aam
cmp
lret
push
push
int
add
out
mov
in
pop
lock
into
das
adc
xor
es
push
sbb
xchg
sub
insb
mov
lea
scas
xchg
sbb
or
xor
aad
cwtl
sbb
pop
pop
cmp
sbb
adcb
xchg
shlb
cwtl
loope
inc
filds
stos
mov
and
cmpsl
mov
repz
or
call
subl
insb
arpl
or
push
hlt
pop
xor
adc
repnz
ss
mov
sbb
out
dec
adc
push
xchg
mov
sub
cwtd
outsb
sbb
lahf
insb
jnp
cmp
cmp
clc
jbe
xchg
mov
mov
jne
sub
dec
data16
adcl
scas
pop
mov
dec
jns
aam
jns,pt
xchg
sub
adc
pop
push
dec
adc
cmp
xchg
cld
and
popf
jbe
repnz
outsl
ret
xor
xor
or
nop
xlat
sbb
add
ja
notb
jns
in
call
aas
and
pop
sub
repnz
cmp
lea
adc
push
fs
ja
subl
js
js
fbstp
sub
je
add
lahf
rcrb
sbb
or
add
gs
and
lods
push
lcall
and
bound
imul
mov
jl
sbb
mov
sbb
ja
rcrl
sbb
xchg
stos
and
into
lock
pusha
mov
lcall
aaa
cmpsb
mov
xchg
cwtl
mov
xor
mov
sbb
push
lcall
xor
loop
mov
xchg
dec
push
push
sub
dec
shlb
sbb
jbe
cltd
insb
inc
movsl
es
enter
sub
sbb
jbe
lea
xor
ja
in
out
sub
lahf
xchg
movsb
jmp
add
jge
sbb
cs
sbb
jno
add
mov
js
dec
push
sbb
loop
xlat
ja
int
cmp
pop
imul
and
xor
daa
orl
sub
cmp
mov
outsb
faddl
jmp
repz
std
out
cmc
mov
test
and
imul
orb
loope
mov
rcr
das
addr16
shrl
push
xlat
mov
loope
mov
or
dec
xchg
sub
mov
int
test
xor
sub
xchg
in
lahf
sub
imul
mov
add
sub
push
lea
mov
sub
jb
shlb
dec
cmp
sbb
addl
ljmp
xchg
imul
mov
movsl
js
sahf
jb
cmpsl
pop
sbb
lahf
lcall
mov
mov
fisubrl
sub
fwait
enter
rcrb
pop
and
mov
xorl
adc
js
push
push
aaa
xlat
lock
dec
iret
add
jns
pushf
xchg
test
lahf
or
inc
xor
ret
cmp
mov
sbb
pushf
js
and
add
cmc
mov
stos
insl
sub
mov
jg
inc
dec
movsb
jae
xchg
into
mov
mov
mov
lahf
xchg
test
in
testl
add
pusha
int3
cmc
icebp
sbb
movsb
jecxz
sarb
stos
sub
int
mov
les
shlb
out
out
xor
incb
mov
sbb
mov
test
shlb
test
repnz
mov
aam
fisubrs
call
in
xchg
jae
xchg
push
xchg
insl
pop
add
lret
mov
lea
shl
fwait
stos
dec
xchg
adcl
mov
jbe
js
ss
jo
fwait
and
scas
xor
jne
movsb
subl
lods
subl
push
sbb
jge
aad
sti
outsb
push
xchg
inc
outsb
nop
fists
cmpsb
push
fiadds
push
xor
sub
ljmp
pop
mov
xchg
jno
mov
mov
inc
inc
cmpsb
cs
and
sub
sarl
ja
jbe
and
jns
xchg
jns
xor
xlat
lock
cmp
in
js
daa
sub
fisubl
daa
sbb
lahf
je
xorl
xor
pushf
adc
xor
repnz
cwtl
sub
in
sbb
sbb
jns
test
clc
lret
clc
and
enter
inc
ret
jp
jp
or
enter
adc
aam
pop
sbb
data16
or
mov
mov
pop
ljmp
xor
sbb
inc
cmpsb
push
cltd
out
sub
popa
add
sbb
and
cmp
add
sub
sbb
add
mov
fldl
mov
cs
stos
jge
mov
cmp
mov
fsubrs
xor
cmovle
pushf
push
das
xor
nop
ljmp
sub
and
imul
sti
outsb
cmp
mov
sub
adcl
aas
jp
jbe
sbb
push
pop
pushf
inc
or
push
pop
cmpsl
test
and
cmpl
jae
dec
pop
jns
pop
jno
add
cwtl
pop
sub
loop
sbb
dec
xchg
sbb
test
sbb
cmpsl
fnstsw
es
gs
dec
mov
adcl
sbb
and
jle
clc
mov
push
loop
sbb
fwait
pop
xor
mov
push
jae
jecxz
scas
pop
and
inc
lods
pop
inc
adc
mov
gs
mov
enter
fwait
das
push
mov
mov
adc
jno
jo
je
sub
mov
xor
add
addl
sarb
es
js
or
and
in
xchg
lds
add
push
fstpl
shlb
add
and
imul
ss
jbe
push
pop
xchg
sub
mov
xchg
cwtl
add
je
inc
sbbb
xchg
hlt
shll
jo
mov
or
andb
pop
jns
jno
push
popf
rcrb
add
add
cmp
fistpl
adc
sub
stos
sbb
sbb
mov
pop
cmp
dec
ljmp
xchg
imul
sub
shrb
sbb
add
aad
adc
sub
dec
cmp
cmp
mov
xorl
repz
mov
jbe
out
or
stc
test
stos
dec
lcall
adcl
je
inc
add
iret
addr16
sub
popf
push
stos
mov
inc
mov
and
das
sub
cwtl
or
adc
stos
call
pop
movsb
aam
subb
clc
outsb
mov
xor
xchg
cmp
lea
gs
push
lods
jns
addl
push
pop
stos
sbbl
push
jns
cltd
xchg
lret
jge
xor
sub
jle
gs
aam
outsl
xor
adc
or
xor
popf
cmp
mov
lahf
mov
icebp
mov
adc
mov
subl
icebp
je
scas
ret
pop
js
mov
jl
lcall
mov
bound
xchg
cmp
mov
fnstsw
mov
test
lret
cmpsb
sbb
adc
push
jp
cmp
pop
fisttpl
hlt
fstpl
adc
pop
pusha
xorl
test
mov
nop
mov
jmp
xchg
popf
cmc
int
dec
daa
cwtl
test
inc
dec
js
jo
in
pop
rorl
and
jmp
shll
add
loopne
movsb
mov
xor
loop
mov
lahf
mov
cwtl
dec
lcall
mov
loop
adc
sub
cmp
mov
add
cmpsb
es
jp
add
jmp
add
mov
push
ljmp
lcall
adc
push
xor
add
cltd
insl
aam
int3
sti
xor
mov
imul
sub
push
add
push
dec
lods
mov
enter
ja
iret
add
sub
andb
sbb
and
repnz
pop
outsl
cmp
xchg
push
clc
mov
mov
sbb
adc
out
mov
fs
mov
movsl
or
test
pop
mov
mov
bound
movsb
sbb
mov
das
in
sub
mov
mov
in
test
pop
mov
sbb
pop
sub
mov
pop
adc
inc
dec
jns
lods
xchg
imul
sub
sbb
mov
rolb
ret
mov
push
adc
inc
jns
push
jle
stos
hlt
pop
push
lods
js
std
outsb
jge
lret
sub
inc
icebp
pop
sbb
push
pop
js
mov
sbb
fnsave
jns
dec
add
mov
cs
sub
stos
mov
in
mov
jecxz
shrb
enter
jnp
jecxz
inc
adc
and
adc
adc
loope
shll
leave
and
mov
dec
test
test
jns
je
jecxz
mov
lahf
das
nop
pop
push
std
sub
push
insl
push
movsb
js
cwtl
shlb
sub
mov
and
testl
sbb
ficompl
xchg
outsb
stos
and
ret
adcb
in
nop
scas
cwtl
das
roll
cwtl
mov
and
sbb
outsb
cmp
mov
int3
sbb
nop
out
ljmp
js
enter
das
imul
loop
xlat
xor
pop
add
call
jae
jb
xchg
repz
mov
add
sub
mov
scas
addr16
inc
or
mov
inc
mov
mov
cmp
cmpl
dec
adcl
lds
mov
mov
daa
jecxz
subb
mov
or
pop
inc
xchg
push
cmp
mov
mov
rolb
mov
fisubrs
int3
aad
aas
fwait
and
cmp
add
mov
fnstsw
mov
push
cmp
xor
iret
sbb
scas
xchg
xchg
adc
xchg
mov
mov
addb
enter
out
pop
adc
out
sbb
js
lret
les
sahf
ret
adc
ss
dec
ja
fldt
lock
jge
mov
inc
mov
push
sub
and
lods
hlt
pop
scas
mov
sbb
sbb
scas
scas
xchg
jecxz
dec
mov
jbe
pop
icebp
out
aam
jecxz
adc
fwait
push
pop
arpl
sti
arpl
xor
mov
mov
sub
pop
js
cmpsb
jbe
dec
and
rcll
pusha
xchg
js
test
sub
test
sbb
xchg
lds
pop
cmp
sub
das
aam
jbe
int
push
ljmp
js
cmc
das
in
aaa
mov
pusha
cwtl
dec
lods
mov
stos
mov
andb
cmp
xor
jns
stos
pop
xchg
push
add
arpl
test
lods
data16
or
mov
adc
lods
sub
jnp
xchg
ret
loope
inc
rcrl
cmpsl
xchg
aad
inc
in
arpl
out
sbb
jns
sub
stos
sub
lahf
mov
jge
fistpll
cmp
adc
cmpsl
xchg
faddp
fisubrs
mov
ds
in
push
out
pop
sbb
or
jnp
inc
sbb
idivl
pop
movsl
or
out
mov
mov
inc
leave
into
daa
lcall
sbb
jl
sbb
out
add
cmp
adc
sub
adc
or
leave
inc
or
shrl
push
xchg
test
rcl
outsb
sbbl
push
iret
sbb
test
xor
icebp
ljmp
xchg
daa
xchg
xor
js
push
leave
add
cli
jp
in
jbe
outsl
dec
sbb
mov
cltd
clc
sbbb
lods
mov
jle
jle
xchg
dec
ljmp
lcall
fstpt
test
push
xchg
or
push
nop
mov
sub
jle
add
add
aaa
xor
jne
jle
add
popa
dec
loope
pop
sub
test
mov
das
push
xchg
push
test
dec
mov
pop
orb
stc
cmp
les
gs
movsl
sbb
push
les
sbbb
insl
pop
fdivl
pop
sbb
shll
mov
pop
mov
ret
sub
and
int3
loopne
fisubs
sub
fldt
cmpsl
mov
sbb
aas
insb
xor
xor
mov
xor
inc
test
imul
add
mov
sub
filds
sub
mov
inc
and
int3
pop
das
lods
stc
adc
in
jmp
xchg
int3
cmp
jno
cmp
fdivrs
adc
clc
xchg
inc
cltd
xor
sbb
adc
mov
dec
lahf
jge
adc
imul
sbb
loopne
mov
lret
mov
mov
jne
shlb
das
sbb
mov
mov
dec
push
sbb
in
rcll
inc
std
mov
adc
lsl
pop
out
call
repnz
sub
jae
adc
subl
sbb
movsl
mov
and
cmc
loop
sbb
mov
xor
stos
lods
fnclex
push
push
pop
mov
xor
add
js
inc
sbb
sub
subl
mov
xchg
pop
push
jns
add
jg
pop
scas
sbb
out
test
fisttpll
cmp
shr
sub
sbb
outsl
cs
call
sub
xchg
xor
push
jecxz
sbb
xchg
into
and
or
xlat
cmp
jecxz
mov
loopne
xor
cmp
xchg
movsl
pop
sub
pusha
mov
in
inc
lods
xchg
mov
inc
jmp
add
push
and
add
ret
sbb
push
sub
mov
stc
push
jle
jns
and
pop
iret
mov
sub
xor
cmpsl
icebp
dec
and
pop
lds
sub
xchg
or
aaa
cmp
addr16
aad
adc
bnd
lods
jbe
scas
jmp
frstor
push
dec
mov
dec
sub
or
add
mov
push
lods
icebp
sbbl
mov
xor
inc
js
lock
test
adc
cmc
stos
push
mov
test
outsl
lret
sub
mov
add
mov
scas
bound
cmp
and
mov
sbb
mov
push
push
in
sbb
mov
push
inc
loopne
lods
aas
or
mov
jae
js
aam
mov
sub
pop
daa
inc
pop
iret
jno
adc
sbb
shl
lret
pop
mov
jecxz
jae
jp
xchg
insl
popf
jae
mov
xchg
mov
int
in
jae
out
addr16
sar
jle
daa
jge
int3
cmp
jmp
push
sbb
stos
inc
push
sbb
andl
xlat
mov
in
jae
imul
js
sub
lds
cwtl
mov
scas
repnz
xchg
dec
jge
jne
pop
push
bound
adc
ds
mov
orl
mov
out
subb
cmpl
sti
out
inc
outsl
push
shl
jns
enter
int3
dec
stos
lret
iret
sbb
scas
push
cmc
xor
leave
jl
enter
push
push
test
leave
dec
arpl
ljmp
add
sub
jns
push
popa
jl
adc
or
lcall
mov
mov
repz
sub
sub
mov
fldt
ljmp
test
cmp
cmpsl
sbb
ficompl
adc
sub
mov
push
addl
push
jmp
inc
sub
and
into
jmp
push
cmp
sbb
cltd
mov
iret
sbb
xchg
cwtl
ret
dec
mov
push
sbb
jo
jge
shl
dec
dec
scas
sbb
inc
aad
and
sbb
pusha
mov
pop
push
jl
push
mov
jle
popa
mov
pushf
mov
outsb
pop
xchg
push
sub
ljmp
inc
jns
push
jns
test
add
xchg
jmp
push
jnp
push
jne
leave
ret
jge
lods
xchg
and
adc
mov
add
testb
mov
adc
rcrl
mov
jp
xchg
jns
repz
mov
jle
sub
inc
xor
or
js
inc
dec
mov
shrb
xchg
add
fwait
test
stos
mov
push
jns
andb
daa
loope
std
push
xor
js
push
int
pop
shl
pop
sub
add
enter
rcrb
stos
popf
xor
jno
push
adcl
sbb
dec
cmp
ret
pop
xchg
enter
sarb
dec
jae
dec
dec
pop
outsl
adc
clc
or
cmp
repz
jge
inc
pop
imull
stos
pop
movsl
leave
sbb
pop
xlat
cltd
push
xchg
popa
cmpsl
xchg
sub
jg
decb
addl
mov
mov
cltd
rorl
data16
test
call
iret
pop
loop
jg
cmpl
or
or
test
and
ss
lret
xchg
out
sbb
pop
popf
add
jmp
lret
lcall
or
xorb
fs
jp
xlat
jno
addr16
outsl
fdivrs
daa
jo
mov
jbe
rorb
sub
or
sbb
mov
jecxz
and
andl
aad
inc
jb
pop
jl
loopne
shlb
pushf
addr16
andl
dec
jmp
mov
or
pusha
pushf
pop
or
subl
mov
jb
stc
into
mov
pop
mov
sti
ds
pop
push
pop
pop
fwait
rclb
fdivr
push
sub
or
lcall
mov
inc
add
test
push
arpl
cwtl
pusha
pop
jp
sbb
xchg
cmc
pushf
cmp
mov
sub
loopne
sbb
xor
sub
and
mov
inc
lds
mov
cmpsl
popa
loope
adc
inc
jmp
out
repnz
aaa
mov
iret
ja
add
add
clc
lds
xchg
js
fisubrl
push
cld
jns
sub
jmp
adc
mov
cmp
adc
mov
into
xchg
mov
adc
or
ss
hlt
mov
in
js
or
mov
or
add
std
add
into
dec
jno
lret
into
test
push
cmp
push
and
sbb
cmp
hlt
mov
fisubrl
fistps
push
jns
test
hlt
or
dec
pop
gs
xorl
int
out
jge
jns
sub
push
bound
js
xchg
inc
insb
movsb
into
hlt
xchg
dec
imul
push
addl
test
or
push
int3
ficoml
jecxz
push
jns
jno
dec
push
test
mov
out
je
call
cmpsb
sahf
or
cmp
and
mov
adc
arpl
negl
incl
jo
mov
and
xor
push
cli
js
sub
xor
aaa
loope
mov
xor
xchg
pop
cwtl
ja
loopne
dec
or
xchg
jnp
shrl
in
add
sbb
cli
xor
add
mov
or
mov
mov
lods
scas
fdivs
inc
lock
jns
cmp
cmp
xor
sbb
sub
fwait
lods
sbb
cmp
push
fadds
sbb
into
in
cmpsl
stos
outsb
movsl
sub
pushf
fimuls
xor
dec
ret
test
scas
add
ljmp
enter
nop
lret
js
or
enterw
cmp
sub
pusha
mov
test
sub
sbb
dec
sbb
dec
sbbb
test
sub
and
into
ret
mov
dec
xchg
pop
adc
cmc
xor
mov
outsb
les
add
cmpsl
mov
adc
ret
pop
clc
pop
inc
test
int3
dec
psubw
pop
fcom
jb
adc
popa
jb
jg
fs
leave
loop
adc
add
mov
rorl
xchg
les
pop
test
outsl
adcb
aad
cmp
inc
call
lock
rclb
mov
sub
dec
lods
popa
addl
or
xchg
jae
mov
bound
mov
je
sbb
and
jns,pn
mov
adc
out
dec
stc
pop
mov
mov
sbb
jns
repnz
test
mov
xor
jne
add
pop
adc
mov
stos
lret
stc
out
mov
test
ret
stos
je
ret
ret
push
mov
sahf
data16
sbb
addr16
and
and
in
xor
lret
aam
pop
sbb
mov
sbb
testl
pop
fstp
jo
fsts
mov
xchg
andl
cmovle
jb
mov
mov
xchg
cmp
shlb
mov
aas
and
xor
mov
pop
popf
push
xchg
jo
cwtl
or
pop
nop
cld
mov
std
leave
std
mov
andb
fdivr
sbb
add
mov
fbld
arpl
shrl
jae
lcall
test
lcall
pop
mov
cmpb
xor
mov
scas
sub
sub
rcrb
mov
aad
scas
adc
push
pop
and
scas
fcompl
leave
nop
push
mov
jg
ret
ljmp
sbb
mov
mov
mov
dec
cmpl
aam
dec
clc
cmc
js
mov
add
pop
mov
sbb
jbe
sbb
rcrl
stos
es
cltd
pop
out
fwait
xchg
fiadds
jns
icebp
cld
js
add
lods
pop
sub
orl
adc
inc
rorb
mov
repnz
imul
aad
hlt
pusha
jp
and
shlb
sbb
mov
sbbl
jbe
jns
cmpsl
mov
xor
mov
stos
add
push
push
push
sub
js
test
in
cmp
or
loope
jns
push
mov
outsl
cmp
stos
subl
scas
lret
js
leave
ljmp
cmp
jg
aas
xchg
xchg
test
or
test
or
sbb
adc
adc
into
outsb
xchg
enter
fwait
sbb
loopne
mov
xorb
js
pop
xorb
outsb
xor
daa
rcrb
dec
lea
jae
dec
add
mov
ret
sbb
adc
jb
ds
xchg
xor
clc
sbb
pop
xor
mov
mov
lock
mov
adc
cmp
inc
sub
fmul
ds
pop
orl
stos
ja
aad
adc
mov
pop
rcl
mov
sub
lret
mov
push
push
inc
jns
jecxz
mov
jb
cmpsb
ljmp
jns
enter
adc
leave
das
push
jbe
out
std
mov
jns
inc
push
lret
mov
je
xchg
cmc
pop
sub
lds
incl
and
imulb
pop
enter
xor
and
enter
jle
hlt
paddb
subl
sahf
adc
jne
lret
repz
hlt
push
in
sub
mov
push
xchg
in
mov
scas
sub
mov
daa
sbb
cmp
cmpsb
pop
das
js
in
xchg
sbb
movsb
mov
adc
dec
cli
adcb
xor
push
mov
rol
lret
sahf
lods
xor
mov
mov
inc
lods
aaa
sub
nop
fsts
push
mov
lock
push
xchg
lds
shrb
xchg
jp
mov
fwait
adc
cld
stos
sbb
mov
xlat
out
test
jnp
jns
dec
jle
dec
sub
sub
jo
cwtl
mov
hlt
xor
sbb
jno
xorb
xor
out
and
enter
pop
daa
add
cmc
dec
fcoms
ljmp
es
loope
fnstcw
mov
les
xor
scas
shrb
mov
cld
cmc
mov
xlat
pushf
js
loop
sub
out
dec
sub
jmp
sbb
ljmp
icebp
imul
sub
mov
jae
dec
cltd
sbb
mov
push
xchg
or
call
xor
loop
xchg
cltd
cwtl
imull
adc
fcoms
ret
xchg
xor
ret
xchg
insl
adcl
icebp
jns
inc
cmpsb
mov
mov
ds
xor
inc
arpl
daa
mov
fldl
ret
or
out
and
sbb
jle
out
jno
mov
add
insl
lret
into
sbb
negb
jno
or
jecxz
inc
push
insb
xor
sbb
scas
inc
popa
das
lret
inc
sub
lcall
ss
sub
out
inc
leave
add
shll
add
sub
fistpll
inc
sbb
pop
mov
add
cld
jno
aas
mov
cmp
pop
iret
inc
jnp
and
push
cmp
leave
adc
sub
aad
jle
mov
test
xor
movsl
lea
push
sub
js
out
adc
inc
out
sub
or
cmp
movsb
and
fidivl
js
hlt
into
loope
push
inc
or
push
js
xor
sbb
cmpsb
cmp
mov
jnp
add
inc
jge
jns
jle
ds
xchg
jp
stc
clc
sub
lods
add
add
cmpsb
sbb
xchg
nop
setl
push
xorl
lret
pop
mov
jae
js
jns
pop
jg
mov
inc
and
mov
mov
push
lods
int3
push
inc
nop
aas
jns
add
fildll
in
cs
icebp
mov
sbb
pushf
jae
in
test
lahf
xor
sub
xlat
fwait
and
rol
mov
pop
shr
sub
mov
inc
pop
xchg
sub
iret
mov
sbbl
loop
or
nop
ret
insb
add
gs
adcl
jge
cmp
jbe
call
pop
jecxz
or
pop
pusha
pusha
push
adc
sbb
xchg
inc
in
xchg
rorb
mov
xor
jno
pusha
js
lea
flds
jle
in
lret
cwtl
stos
mov
lcall
cltd
xchg
and
jns
stos
cli
insb
ss
mov
add
mov
xchg
adcl
jnp
xor
mov
sahf
out
cmp
jl
sub
adc
mov
xchg
add
sbb
jl,pn
adc
outsb
and
or
pop
mov
cmp
repz
cwtl
sub
mov
xchg
add
inc
sub
ret
orl
in
pop
mov
test
loope
mov
cs
shrl
mov
insl
mov
push
adcl
mul
fildll
loopne
jg
fnsave
sbb
push
dec
movsb
pop
sbb
scas
xchg
fcmovnbe
rcr
sbb
into
add
pop
lcall
jp
repnz
nop
inc
mov
cs
in
hlt
xlat
inc
orb
imul
pop
pop
push
push
cmpsl
mov
sbb
arpl
popa
loope
lock
mov
cmp
lret
scas
lcall
push
dec
inc
xor
inc
cltd
sub
clzero
sub
inc
shlb
bound
test
cmpl
or
sbb
pop
test
sub
push
cmp
fisubrs
inc
scas
in
push
aas
aad
aam
stc
sahf
xchg
aaa
cli
movsl
imul
sahf
pop
scas
pop
sub
jge
sbb
lret
xchg
or
dec
fistl
rolb
adc
mov
js
xor
fildll
push
dec
ret
mov
push
dec
pop
cmpxchg
pop
mov
mov
ficoml
scas
sub
shll
and
jmp
cltd
pop
jl
int3
repnz
dec
repnz
hlt
push
jo
mov
aad
mov
sub
and
pop
sbb
xchg
xchg
test
xchg
xchg
xchg
pop
leave
push
mov
cmp
stc
dec
jnp
cwtl
xchg
shl
pushf
cmp
sbb
and
test
fadds
mov
and
movntq
out
js
gs
data16
xor
sub
popa
clc
sub
mov
cmc
enter
sbb
lret
pop
fbld
jl
jns
push
sub
or
out
fcompl
or
xchg
lret
cli
lds
or
mov
sbb
push
sbb
subb
jae
inc
xor
jg
push
ljmp
xchg
in
test
fwait
mov
ljmp
and
xchg
push
push
jp
push
adc
jae
aaa
mov
xor
lds
movsb
mov
xchg
push
cmp
mov
xlat
mov
push
add
jl
push
xchg
icebp
sub
fadd
pop
add
nop
xchg
push
subl
aas
clc
cmpsl
imul
test
mov
ret
fldl
in
pusha
and
addb
push
sbb
in
repnz
test
imul
mov
cmpsl
subb
cmp
push
and
into
stc
test
mov
sub
sbb
xlat
add
pop
test
xor
addr16
xchg
sbbl
icebp
or
push
xchg
and
pop
lea
in
jnp
in
xor
das
jne
pusha
sbb
test
outsl
test
adcl
mov
inc
and
sub
xor
and
mov
xchg
aaa
add
mov
jnp
mov
mov
cmp
xchg
jns
loopne
imul
sbbl
mov
enter
push
sub
imul
sahf
xchg
cwtl
jge
xlat
cs
xchg
cmp
in
cmp
scas
test
sbb
push
test
sub
int
xchg
aas
push
sbb
lea
sarl
test
add
fwait
ljmp
push
xor
add
cmpsb
or
lods
lock
mov
adc
cmc
arpl
imul
ss
ljmp
mov
push
adc
sbb
adc
out
xorb
mov
ret
pop
mov
std
stc
loopne
sub
hlt
mov
sub
push
xor
notl
dec
fnstenv
divb
sub
dec
ficomps
cmp
cmp
mov
cltd
adc
insl
dec
add
fcmovnbe
push
or
cmp
sahf
in
adc
xor
or
loope
jns
ds
fisubl
stos
js
jecxz
fcoml
lods
inc
and
sbb
sbb
iret
out
and
pop
pop
ret
fdivrs
js
daa
sahf
outsb
lea
adc
test
dec
insl
sbb
pop
and
ret
lds
out
mov
mov
mov
sub
push
pop
movsl
mov
jmp
shrl
inc
les
js
push
jae
mov
inc
sbb
mov
icebp
cmp
xor
jle
js
lods
andb
mov
dec
in
jg
push
rcl
mov
stos
mov
in
xor
cld
cmp
or
mov
fildll
mov
in
push
pop
push
mov
mov
test
pop
and
push
sbb
dec
lock
cmp
adc
and
pop
dec
sbb
xor
cltd
xchg
sar
dec
lret
jp
xor
orb
sub
sbb
inc
jo
jp
and
int3
dec
mov
in
decb
ret
mov
ljmp
push
xor
pop
imul
rol
into
rolb
pop
pop
je
mov
ja
sub
or
fimuls
js
popf
mov
pushf
push
xchg
jle
fdivs
jno
mov
jecxz
jecxz
fstpt
dec
cmpsb
das
sub
inc
cmpsb
mov
stos
fstpl
mov
dec
clc
push
dec
adc
cwtl
sti
jno
mov
sbb
and
jp
ljmp
es
jno
sub
lret
test
subb
negb
pop
xchg
fistpl
in
add
and
sbb
dec
jns
inc
mov
std
sub
lods
mov
xchg
push
stos
addr16
mov
mov
js
ficoml
stc
imul
das
lahf
lret
adc
dec
ds
xchg
adc
aaa
repz
mov
bound
add
fdivrl
adc
pop
ret
inc
sub
insb
or
jge
sbb
push
jo
bound
inc
cmpl
push
sub
divl
stc
sub
sbb
ret
sbb
scas
cs
clc
aad
ja
sub
in
in
jnp
sbb
int3
das
stc
loopw
dec
sbb
mov
sub
cmp
cmc
and
pop
out
cmp
decl
cmp
jecxz
adc
dec
andl
cmp
ljmp
mov
sbb
inc
aaa
mov
and
xlat
stc
dec
adc
adc
test
out
or
nop
sbb
xchg
xor
sub
and
in
mov
ljmp
leave
xchg
sbb
cltd
mov
outsb
adc
sub
imul
or
sub
sarb
ja
push
cli
xchg
jmp
dec
aad
test
jns
mov
push
jl
cmp
pop
jne
xor
and
xor
adc
xchg
js
test
pop
lods
sub
stc
inc
jno
ja
in
mov
hlt
jnp
mov
in
scas
inc
inc
ljmp
xorb
and
shlb
mov
shrl
lods
mov
sub
lcall
inc
aas
jecxz
lock
lods
pop
xlat
sub
or
aad
in
imul
cmpsl
out
sub
sbb
jl
dec
pop
cmp
adc
adc
adc
loope
sbb
mov
subl
push
lret
lds
mov
xor
adc
sbb
lods
or
outsl
jns
push
loopne
xchg
pop
shlb
xorl
outsb
jg
inc
shrb
jns
inc
push
dec
jle
mov
data16
jne
jle
nop
movsb
int
dec
mov
mov
cmp
js
aad
adc
je
data16
push
jmp
clc
cmpsb
and
js
shlb
sbb
xor
inc
sub
xchg
sbb
call
std
das
jbe
sbb
in
fwait
dec
cmp
jns
stos
outsl
enter
inc
sub
shl
fiadds
in
mov
xor
push
jns
into
sahf
fisubrl
iret
mov
hlt
test
xor
fldcw
sbb
sbb
lds
xchg
lods
add
shrl
cli
scas
jmp
sbb
loopne
push
mov
jb
addb
add
in
sub
bound
mov
mov
nop
inc
cmp
inc
call
movsl
popf
add
sbb
add
sub
dec
fidivl
int
jmp
push
add
fiadds
ljmp
mov
jns
add
das
pushf
pop
mov
jb
pop
xor
in
cmp
mov
sub
test
loop
js
inc
sub
ss
pop
adc
sbb
fiaddl
pop
outsb
adc
xchg
jmp
mov
mov
jne
mov
mov
xorl
cmpsb
das
jns
imul
sub
mov
mov
mov
pop
sub
sub
pop
and
pop
lret
fnstenv
addb
xor
jns
rorl
je
add
sub
cmpsb
insb
imul
adc
lock
cmpsb
push
jbe
stos
pop
sub
adc
stos
jns
mov
out
cmp
imul
jns
aam
and
jp
sub
outsl
pop
iret
mov
sub
stos
add
ss
cmp
jns
enter
test
sbb
cld
adc
or
int3
adc
pushf
dec
es
sbb
movl
jb
mov
jg
xchg
leave
mov
int
xchg
pushf
lahf
pop
fwait
adc
fldl
test
cli
dec
sbb
jne
jns
pop
cwtl
xlat
icebp
add
mov
out
aas
or
data16
sub
adc
sub
or
out
adc
mov
subl
pop
xlat
jl
cwtl
and
dec
lods
add
dec
jns
cmpsb
xchg
ficoml
sbbl
test
adcb
out
mov
cmp
mov
data16
jbe
fistpl
push
mov
arpl
lret
shlb
bound
sarl
ss
dec
mov
jb
push
push
inc
ja
icebp
jecxz
push
sbb
addr16
adc
xchg
jl
call
dec
push
sub
loope
xlat
pop
mov
adc
adc
jecxz
add
pop
ss
sub
jns
adc
pop
sbb
cmp
push
incb
jl
js
clc
dec
jecxz
sbb
or
jnp
lret
jo
inc
scas
bound
movsb
xor
hlt
inc
ret
mov
lret
dec
and
push
mov
xor
sbb
je
push
aam
addr16
dec
xor
mov
into
pop
imul
jg
test
movsl
jb
repnz
orl
sbb
jmp
mov
or
sub
mov
sbb
lods
nop
dec
rcll
push
jecxz
xchg
popa
pop
xchg
sbb
daa
or
mov
and
clc
dec
mov
fsubrl
push
jle
mov
fucomp
add
dec
enter
jno
sbb
mov
pop
adcl
add
sarb
pop
setne
push
pop
and
adc
test
xchg
mov
jecxz
test
jl
sub
or
icebp
sbb
aad
jbe
dec
test
lods
mov
add
addl
xor
sbb
daa
sbb
xchg
jb
pop
xchg
inc
xchg
xchg
or
dec
mov
shll
lret
test
cltd
jns
adc
cld
adc
inc
sub
lods
in
add
pop
sbb
ss
pop
andl
pop
fnstenv
in
mov
insb
pmuludq
or
mov
inc
test
xchg
adcl
stc
xchg
call
in
ret
ja
in
xor
xchg
mull
xchg
pushf
js
loopne
xor
les
sub
loope
loopne
rorl
push
cmp
arpl
push
sub
xor
cmp
scas
adc
jmp
or
xchg
mov
pop
adcl
jnp
js
push
clc
push
lods
test
mov
and
popf
fwait
rcrb
btr
addl
cmp
lea
adc
test
sub
les
xchg
cwtl
lahf
or
push
je
stos
call
pop
push
jbe
jg
mov
orb
jns
int
pop
mov
jnp
sub
aaa
xchg
mov
or
push
cli
movsl
push
xchg
mov
jbe
xchg
inc
dec
mov
xchg
xor
je
scas
push
jb
imul
dec
dec
mov
mov
cmp
sub
mov
aam
mov
mov
subl
mov
mov
sub
xor
or
or
inc
mov
jo
out
ficoms
add
sbb
push
xchg
ja
cltd
subl
jg
das
xchg
outsl
xor
movsl
xor
pop
cmpsl
cmpb
sub
and
pop
sbb
out
cmpsb
aas
bound
sub
rclb
or
mov
rorb
lret
or
add
cli
ljmp
test
jge
lods
add
sbb
add
into
sbb
xchg
push
jg
mov
fisubl
push
mov
ljmp
and
jmp
sub
push
and
fcom
adc
pop
jns
int3
mov
les
aaa
push
outsl
xchg
fimull
xchg
sbb
arpl
ss
sub
leave
jne
dec
push
popa
sub
xchg
xor
rcll
mov
aaa
mov
adc
cmp
sbb
das
pop
push
xchg
sub
in
orb
fwait
add
lret
jb
mov
xchg
leave
mov
push
jne
cld
add
imul
mov
pop
shrb
dec
xchg
sub
nop
lahf
mov
cmp
add
mov
stc
pop
pusha
ret
test
push
lods
arpl
sbb
test
mov
lods
in
icebp
outsb
gs
stos
sar
adc
loope
fisttpl
mov
lea
and
push
adc
jbe
push
xchg
add
adc
sub
cmp
test
pop
xchg
filds
ss
inc
mov
sub
sti
clc
gs
sbb
in
mov
mov
sub
jl
sub
mov
je
sub
sti
dec
test
js
int3
mov
mov
jno
subb
xchg
cmp
xor
jns
xchg
adc
sub
pop
jbe
mov
jp
sbbl
jmp
aas
mov
mov
lcall
dec
add
andb
push
scas
jge
es
sbb
and
out
sub
mov
jbe
or
adc
lret
js
sub
bound
cmp
or
inc
int3
lahf
add
mov
in
xor
jns
outsl
imul
push
jg
cmp
stc
and
sbb
xchg
std
xchg
push
dec
mov
ret
dec
fimuls
xor
xchg
arpl
inc
and
dec
into
sbb
or
notl
int
mov
jns
sbb
add
add
test
mov
pusha
ficomps
lret
gs
sub
dec
or
arpl
iret
mov
outsl
pop
cmpsb
aam
adc
inc
flds
push
dec
loopne
ret
cmpl
inc
ja
out
xchg
fs
adcl
adc
lods
cmp
dec
sub
sbb
push
inc
sbb
inc
inc
jnp
out
in
sti
mov
sub
push
popa
stos
cmc
hlt
push
outsl
push
pop
insb
xchg
clc
pop
inc
in
cmp
pop
cmpsb
call
add
out
push
call
mov
cmpsl
lcall
push
repnz
mov
sub
xor
mov
cmp
push
paddd
js
mov
sub
js
add
jle
xchg
push
test
sbb
stc
bound
sub
jb
ss
sub
jns
adc
adc
xor
sub
adc
sbb
testl
out
loopne
mov
sbb
push
push
into
mov
xchg
pop
cwtl
sbb
add
fidivl
adc
loop
inc
iret
in
cld
jg
sti
js
add
and
leave
pushf
push
and
sub
loopne
dec
push
fs
push
or
xor
adc
in
xorl
xchg
pop
sbb
roll
cmc
mull
sbb
gs
ret
xorl
mov
sahf
push
push
mov
pop
cwtl
aaa
sbb
je
dec
sbb
dec
test
and
fdivl
outsb
setg
push
sbb
or
mov
setl
add
adc
stos
adc
jns
cmc
insl
jp
and
addr16
jecxz
aaa
mov
and
jnp
js
push
insb
lods
inc
std
jne
mov
push
pop
add
mov
xchg
lods
adc
xorl
rcr
pop
jo
js
aaa
adc
repz
in
xor
mov
lods
mov
mov
sbbl
push
das
jecxz
jo
cs
test
jae
xchg
mov
jno
loope
stos
mov
mov
adc
into
clc
aam
xchg
mov
ficoms
pop
mov
cmp
pop
xchg
xchg
sbb
adc
add
sub
inc
fisubl
in
inc
sbb
imul
fstl
sub
jno
jae
sub
mov
iret
adc
push
push
dec
loope
jmp
jp
cmpl
aaa
aam
sub
cmp
test
sbb
dec
into
int
sub
repz
sub
sti
push
bound
bound
cmp
or
jo
fsubrs
or
xchg
cld
mov
into
xor
inc
lods
and
sarb
push
ja
cli
cmp
xchg
cmp
rorl
adc
and
loop
dec
jne
or
scas
xchg
mov
xchg
jns
jns
js
shrl
orl
push
ret
scas
sub
sbb
les
cmp
sbb
aad
xchg
pusha
es
out
push
cmp
or
inc
or
nop
pop
inc
push
sbb
sub
lahf
outsb
movsl
test
mov
mov
add
jnp
leave
add
aaa
xchg
imul
cmp
sub
add
inc
jo
sbb
pop
pop
sbb
sub
mov
scas
ss
lock
adcl
aaa
cli
ss
push
stos
cmpsb
rorl
call
inc
inc
cmpsb
sub
adc
rorl
jns
lea
adc
pop
ljmp
test
sbb
loope
into
cmpsl
push
push
jp
mov
pop
fmull
mov
add
xchg
pop
and
mov
pop
mov
movsb
push
fidivl
clc
jmp
mov
sti
andb
and
jns
pusha
loop
insb
jo
jb
in
mov
nop
mov
js
mov
movsl
mov
push
mov
and
mov
jg
es
cmc
push
mov
or
in
ljmp
sbb
decl
lock
dec
cmpl
pop
movsb
jns
scas
lods
push
dec
push
push
xor
ss
dec
xor
add
imul
adc
test
xor
aam
inc
cmpsb
movsl
push
add
inc
or
adc
sub
mov
sub
lock
js
mov
pop
push
sub
into
mov
xorl
or
sub
ljmp
push
shll
fcmovnb
cltd
addl
es
add
movsb
push
sub
cmp
sbb
xchg
sti
push
stos
cmc
bound
and
mov
xchg
or
out
push
pop
sbbl
cmp
fstpt
pop
sub
mov
outsl
sub
jg
out
sahf
adc
push
sti
mov
cmp
sub
jns
sbb
or
rcrl
stos
pop
stc
jge
sub
xorl
es
jle
add
outsl
mov
sub
pop
jo
rol
sahf
sbb
mov
pop
incb
mov
xchg
cmpb
loop
cltd
cmp
or
daa
dec
push
outsl
sbb
stc
push
sbb
cmp
mov
idivb
jecxz
dec
in
arpl
loop
int3
fs
inc
cwtl
sbb
lea
sub
xor
jb
adc
lret
pop
pop
xor
mov
push
pop
add
jae
pop
inc
andl
or
loopne
jecxz
leave
loopne
lcall
dec
shll
push
sub
jp
test
xor
push
pop
push
sbbb
cmpsl
fisttpl
jl
shlb
lock
lods
and
cltd
inc
push
ret
lods
and
pop
mov
popa
or
int
pop
and
sbb
and
movhps
sbbb
cmp
outsl
inc
inc
xchg
cmovno
icebp
xchg
cli
cwtl
or
sub
outsl
ret
sub
lds
sub
cmp
stc
push
push
sub
push
xor
movsb
subl
and
loop
push
jne
je
movzwl
jmp
les
push
arpl
sub
dec
sub
dec
shll
inc
push
aaa
sub
add
sbb
das
fwait
sbb
addl
dec
js
lcall
dec
jmp
shr
pop
adc
stc
mov
pop
fnstsw
aam
inc
push
xchg
fnstsw
sbb
pop
ss
repz
out
subl
jae
ja
repnz
popa
in
cld
or
lods
xchg
cwtl
add
mov
out
mov
or
lret
sbb
adc
scas
adc
mov
clc
aas
fadds
and
fidivl
sub
mulb
sbb
jg
fwait
xchg
fstl
test
sbb
rcrl
jge
push
pushf
loop
jge
jmp
or
subb
cmpl
cmpsl
cli
sahf
adc
les
or
add
out
mov
mov
adc
adc
or
pop
or
pop
les
sub
xchg
pop
gs
and
and
stos
sub
or
and
cs
sbb
ss
pusha
mov
in
sub
stc
mov
sub
ret
adc
in
mov
mov
sub
lahf
loopne
enter
call
mov
jecxz
mov
js
push
sub
dec
loop
mov
je
mov
jge
dec
sbb
dec
into
or
inc
test
test
test
pop
jnp
loopne
cs
and
or
stc
fistpll
sahf
xchg
adc
push
andl
and
jns
lcall
sub
xchg
pop
mov
sbb
pop
mov
sahf
or
pop
test
sbb
aaa
test
mov
int
mov
jns
enter
fcoms
sub
xor
out
and
sbb
test
xor
adc
enter
dec
rcrb
movsb
stc
xor
outsb
dec
sbb
jecxz
pop
push
rcll
sbb
jns
mov
rclb
mov
or
sbb
fsubs
test
xchg
pushf
gs
stos
sbb
cmpsl
cmp
lods
mov
insl
mov
lods
or
setnp
es
mov
test
je
ja
sub
mov
add
in
jo
jae
add
sbb
addb
out
std
out
sbbl
loopne
mov
sbb
lds
sbb
add
addr16
insl
incb
cmpsl
inc
inc
mov
pop
call
jg
enter
frstor
pop
outsl
shrl
mov
loop
outsb
in
repnz
xchg
iret
test
add
and
add
mov
xchg
fisubrl
maxps
mov
or
push
mov
stc
add
fidivl
repnz
aad
jns
std
aas
int3
push
rorb
xchg
sub
lahf
mov
sbb
push
dec
lcall
add
push
mov
bound
xor
out
cmpsl
pop
mov
mov
jle,pt
pusha
sbb
inc
lret
xchg
jecxz
pop
addl
jbe
outsb
xlat
dec
icebp
xor
ja
or
mov
or
cli
sbb
daa
clc
ja
add
xor
outsb
inc
cmp
enter
sbb
mov
xor
movsl
insb
jl
add
cmpsb
js
xor
or
sub
jmp
xchg
clc
lock
movsb
test
and
xchg
ret
leave
cmp
mov
cmp
loope
testb
pop
xor
test
sub
mov
stc
subb
pop
jno
ljmp
js
data16
btc
sbb
lock
sbb
imul
pusha
mov
clc
jbe
mov
gs
add
scas
lcall
add
dec
sub
sub
jae
xchg
pop
jne
sub
mov
inc
lcall
cltd
jns,pn
ja
pop
push
jmp
push
adc
cld
cld
xor
xor
sbb
add
and
aad
loop
jp
mov
fwait
cmp
cmp
lahf
mov
xlat
inc
aas
dec
mov
cmp
sbb
aas
jns
mov
movsb
xchg
shl
inc
jns
xchg
fnstenv
add
ret
xor
into
mov
jns
jno
adc
fsub
lods
sub
scas
movsl
int3
adc
mov
mov
jno
ja
dec
adc
test
insl
fiaddl
mov
add
popf
sub
loopne,pt
lods
fst
rcll
jne
cs
pop
pop
aas
rorb
lret
js
out
movsb
dec
mov
add
shlb
jle
iret
out
dec
call
test
mov
jmp
jb
xchg
in
push
movsl
ret
fmuls
jle
mov
test
inc
sbb
je
mov
call
jp
aaa
xorb
mov
mov
cmpb
es
cmp
or
rcr
sub
mov
mov
lret
add
mov
fdivrl
out
dec
cmpb
cmovge
test
out
stc
jns
sbb
sub
out
mov
sub
jp
mov
lea
int3
push
add
add
subl
jecxz
or
xor
mov
imul
mov
cmc
push
mov
out
add
sbb
or
inc
jns
or
in
clc
jg
cld
cmpsb
xlat
js
int
push
jns
andl
pop
cmp
sub
lahf
js
xchg
popf
push
jge
sbb
sub
in
pushf
mov
sbb
clc
aaa
ret
sub
jmp
mov
push
dec
or
out
stc
mov
test
jmp
outsl
push
subl
lods
insb
xchg
add
jns
stos
dec
mov
add
adc
sbb
push
fbstp
fimuls
sarl
jmp
mov
or
out
cltd
dec
jo,pn
inc
inc
pop
and
repz
dec
mov
loope
jo
lret
mov
pop
jle
outsl
pop
xor
pop
leave
test
pop
adc
inc
jbe
add
pop
mov
cld
cmp
jg
shll
add
push
adc
and
xor
icebp
cmpl
sub
adc
test
das
push
push
insb
pushf
js
xchg
pop
sub
out
ret
das
sub
test
lret
jmp
fidivrl
rcr
xor
sbb
jmp
mov
aam
lret
jg
stos
mov
lret
inc
bound
push
mov
cmp
cli
push
xchg
add
loop
ret
std
stos
push
das
addb
adc
sub
or
mov
sbb
pop
cld
insb
and
les
subl
dec
cmpsb
mov
xor
push
fdivs
push
dec
aam
cwtl
mov
hlt
loope
xchg
out
sub
xor
addr16
add
mov
push
mov
sbb
sub
and
or
popf
push
jns
sub
or
cmp
out
sub
or
scas
push
add
cmp
xor
cmp
add
arpl
push
xlat
clc
pop
jno
int3
push
les
fwait
addr16
mov
shl
xchg
fisttps
xchg
test
arpl
arpl
cwtl
sbb
popf
psllw
fisubrl
xor
enter
sub
loope
iret
addr16
adc
rcl
dec
ds
nop
clc
jne
ljmp
pop
xchg
lahf
jmp
sub
int
pop
sti
jmp
sarl
hlt
lods
sub
xchg
push
cmp
jns
dec
in
dec
lcall
xchg
sbb
std
sbb
inc
lahf
adc
movsl
pop
in
mov
out
pop
add
cmpsl
jae
sub
inc
cmpsb
fildl
ja
fdivr
xchg
bound
mov
movsl
mov
shl
loopne
inc
sub
ss
rorl
push
fidivrl
enter
cmp
adc
movsl
in
xor
xchg
in
imul
lret
addl
sub
les
jns
inc
mov
adc
jns
adc
dec
mov
sarl
ret
ret
xor
dec
or
ffreep
insb
jecxz
int
sbb
or
sbb
lock
jns
xor
xchg
dec
cmp
and
dec
and
sbb
xor
movsl
cmpsl
addr16
jle
int
dec
mov
outsb
jno
inc
push
xor
sbb
dec
andb
inc
cmpsb
loopne
jge
insb
and
test
and
mov
test
mov
rclb
xchg
ret
shlb
movsl
xchg
in
inc
adcl
or
outsl
dec
xchg
std
int
mov
pand
call
mov
ficoms
fwait
jae
stos
xlat
popa
sbb
cltd
jns
ret
pop
lock
sub
fldenv
int
add
mov
imul
dec
ss
xor
xchg
cmp
sbb
test
dec
stos
iret
adc
int3
sahf
xor
pusha
cmpsb
rcl
mov
addb
inc
mov
mov
test
cs
sarb
jno
xor
jb
add
stos
pop
orl
xchg
mov
aas
test
add
adc
js
mov
xchg
lods
xor
jb
test
push
stc
das
push
fistpll
data16
sub
repnz
imul
xchg
mov
jns
dec
sbb
sbb
enter
mov
push
je
sub
dec
cmc
js
add
xchg
in
cmpb
jns
jns
add
mov
mov
and
ljmp
and
std
adc
pop
test
xchg
mov
ja
sub
xchg
push
xlat
xor
mov
push
add
gs
rclb
mov
icebp
cmp
mov
in
fs
sbb
mov
movsb
inc
fcmovu
mov
sbb
ljmp
add
bound
jb
mov
pop
jmpw
inc
pop
adc
ds
sbb
inc
xchg
push
insl
jnp
lcall
cmpl
and
fs
stos
jae
movsl
mov
xor
bound
aaa
jae
add
ficoml
jns
cltd
into
ss
and
fmul
inc
jb
jns
and
mov
mov
das
push
in
push
stos
inc
test
jp
mov
cld
jo
xchg
hlt
mov
fwait
sbb
inc
rcr
mov
jge
adc
sub
mov
cmpsb
inc
dec
pop
stos
xchg
dec
jp
fdivrs
mov
xor
lret
addr16
sub
mov
out
sub
mov
jmp
int
inc
sbb
int3
lock
sahf
lahf
subl
dec
xchg
push
cmp
ljmp
sbb
pop
aas
add
sbb
outsb
xchg
scas
xor
push
and
pop
movsb
xor
sub
outsl
aad
ret
sub
jbe
pop
push
and
mov
mov
cld
test
jne
pusha
call
mov
pop
js
xor
sub
mov
subl
mov
test
insb
ljmpw
xchg
add
jmp
popf
stos
sub
js
push
mov
inc
aaa
pop
inc
call
xchg
xorl
pop
dec
outsb
or
xchg
adc
inc
pop
inc
xchg
sub
jmp
jbe
lods
fsubrl
sbb
adc
std
or
and
pop
mov
cmp
cmp
push
jecxz
pop
mov
out
rcrb
fimuls
push
daa
add
inc
mov
lea
sbb
lods
pop
into
test
pop
fwait
adcl
je
jle
mov
pusha
xor
pcmpgtd
sub
jb
sub
sbb
jg
cmpsb
je
pop
outsl
imul
jns
mov
stos
jns
mov
sbbl
push
ljmp
loope
out
mov
sbb
fnstsw
insb
pop
out
xchg
adcl
inc
je
mov
js
jne
sbb
ds
and
xor
ja
inc
test
sbb
adc
pop
mov
sub
es
inc
push
scas
sub
stos
push
mov
adc
popf
sbb
push
push
shlb
scas
and
lahf
ficoms
loope
lods
sbb
xchg
and
fdivrs
mov
mov
cmpsb
inc
jns
mov
push
xchg
mov
sbb
clc
mov
xchg
popf
insb
pop
movb
pop
lcall
ret
movsl
daa
adc
negl
jl
mov
js
loopne
xchg
andl
and
sub
pop
nop
mov
mov
imul
cld
fs
pushf
pop
pop
push
int3
loopne
cmp
cli
push
fdivs
mov
cmp
mov
dec
pop
lods
pop
inc
dec
sbb
aad
mov
mov
imull
js
mov
mov
or
loop
pop
ficompl
fistpll
dec
inc
push
and
jno
ljmp
mov
out
fnstcw
adc
adc
fstpl
shlb
sbb
and
orb
lea
movsl
in
add
fwait
mov
add
shlb
in
lock
or
jle
push
enter
push
adc
das
xchg
shr
jb
repnz
add
lock
in
dec
mov
push
je
shrl
inc
mov
cmp
sbb
icebp
out
sub
test
cmp
push
xor
or
jmp
scas
jo
mov
pop
cmpl
jecxz
sahf
nop
adc
xchg
movsb
pop
and
sub
ja
pop
cmp
sub
push
xor
jecxz
add
test
adcl
sub
dec
mov
insb
test
icebp
push
push
stc
mov
mov
popf
jmp
js
xlat
repz
ja
push
ljmp
and
sub
test
mov
lahf
inc
stos
lahf
mov
imulb
sbb
pop
int3
inc
aam
orb
lods
dec
les
jmp
std
ret
insb
cltd
sbbb
dec
xor
jb
push
stc
insb
or
movsl
cmp
mov
loop
add
jmp
and
sub
or
dec
repnz
push
xor
jae
sbb
and
xor
ret
sub
test
jnp
test
push
mov
outsl
pop
addb
adc
mov
inc
pusha
sub
ret
push
mov
ja
jne
cmc
out
int
pop
cmp
cwtl
cmp
adc
xchg
mov
jmp
fcmovne
icebp
cmpsb
mov
cmp
mov
fistpll
add
push
gs
mov
subl
lret
jae
push
shlb
dec
out
insb
rcll
pop
cwtl
sbb
sub
dec
pushf
shl
lods
sub
sbb
sub
xor
fidivs
add
sbb
cmp
pushf
sbbl
mov
popf
push
and
pusha
jge
push
add
push
sub
bound
mov
out
and
mov
mov
test
adc
inc
popf
js
rclb
fldcw
inc
add
sub
cmc
jge
stos
cmp
pop
fs
jl
in
std
ret
sbb
aas
loopne
or
pop
out
xchg
sub
sub
mov
mov
pop
xchg
sti
lret
movsl
into
push
cmpl
loop
mov
sbb
and
sbb
shr
enter
lds
sub
out
or
sbb
mov
jg
std
sub
fmuls
mov
xchg
mov
cli
nop
xchg
mov
js
cmp
dec
jns
xor
jmp
lods
mov
sahf
jb
jge
cmp
lahf
cmp
icebp
push
inc
sub
rcll
rclb
sub
dec
cmp
pop
stos
pop
sub
into
pop
sahf
js
or
adc
cld
call
sbb
push
jecxz
lods
xchg
cmc
pop
sub
push
xor
sbb
loopne
stos
xlat
inc
jne
lahf
push
sbbl
or
hlt
add
cmpsb
lret
cmc
or
xchg
sub
js
jge
xchg
test
or
push
out
push
out
jg
push
sbb
rol
xor
bound
mov
aas
sbb
and
mov
and
aam
out
cmp
sbb
adc
push
jl
pop
jp
inc
test
stc
into
sbb
xor
sub
sub
js
and
xchg
pop
cmp
and
mov
mov
mov
pop
popf
sbb
insl
fcomps
xor
pop
roll
lret
clc
sahf
jno
sbb
outsb
ljmp
adc
cwtl
push
jo
out
int3
push
pop
fstps
out
in
mov
imul
sbb
nop
and
cwtl
sub
add
dec
rcr
sbb
dec
jns
sbb
mov
and
sbb
mov
cld
arpl
hlt
xchg
loop
push
gs
addl
aaa
sbbb
cmp
imul
aam
jmp
sub
push
or
mov
movsl
sub
je
sbb
int3
jmp
or
pop
jns
inc
into
mov
mulb
pushl
inc
fsubs
addl
sti
lea
js
add
das
inc
pop
repnz
sub
lock
fisttps
call
shl
add
add
jbe
mov
cmpsl
cmp
cmp
or
stos
xorl
push
and
add
or
stos
outsl
jge
movsl
rolb
jmp
es
xchg
pop
loope
mov
push
add
addb
sub
mov
addr16
shrb
mov
dec
and
add
clc
sahf
jmp
cmpsl
mov
js
jge
add
dec
daa
fsts
ljmp
pushf
test
scas
or
mov
lods
mov
lods
jns
xor
cmc
jbe
repz
sub
mov
xor
leave
je
inc
je
cwtl
out
add
movsb
fstps
inc
sbb
pop
fwait
lahf
sub
mov
sub
pop
cmp
sbb
icebp
sbb
pusha
sar
orl
das
pop
ret
cmpsb
adc
mov
mov
adc
stos
cmp
je
adc
dec
mov
cmp
aas
jp
mov
jns
inc
or
int
mov
cld
adc
addr16
mov
xlat
sbb
cmp
mov
add
cmpsb
push
fdivrs
lret
adc
cmp
cld
test
ret
div
clc
ljmp
sbb
stc
sbb
fmuls
cmc
inc
jns
addl
sarb
or
xchg
cmc
in
push
sub
repnz
cmp
xor
js
pop
mov
out
sahf
sub
pop
mov
movsb
popf
in
xchg
jnp
std
cltd
xchg
xchg
pushf
adc
frstor
add
jnp
or
or
cmp
cmpsb
cmpsb
es
mov
mov
sub
nop
sub
adc
lods
dec
mov
add
mov
cmc
mov
cmpsl
xchg
fistps
sbb
sub
fcom
sbb
adc
sarb
jnp
fscale
in
cmp
pop
test
mov
sub
test
clc
shlb
sbb
pop
daa
loopne
jno
mov
and
cli
inc
lods
sbb
or
mov
mov
jmp
and
inc
rolb
or
sbb
lret
enter
xorb
lock
ret
sbb
jbe
pop
outsb
and
sub
sbb
movl
sub
clc
sbbl
mov
mov
sahf
fs
dec
imul
inc
out
js
mov
shl
push
xchg
stos
cmp
lcall
mov
ds
xchg
cld
mov
scas
enter
jns
cmp
lock
in
out
and
movsb
aam
pop
lahf
or
das
jnp
sbb
stos
and
inc
sbb
jmp
call
jmp
inc
js
inc
icebp
and
push
test
lds
xorb
arpl
push
pop
movsb
xchg
ss
sub
push
mov
in
sbbl
and
std
test
outsl
sbbb
stos
arpl
mov
cmp
mov
cli
push
sar
pop
jne
das
pop
cmp
and
mov
add
sti
enter
jo
mov
aas
outsl
stos
test
xchg
sub
cmp
xchg
sbb
pop
nop
mov
ljmp
cmp
dec
cs
cmp
push
or
and
clc
hlt
gs
fdivrs
fwait
mov
xchg
push
jp
movsl
or
int3
lods
and
xchg
xchg
sbb
push
fsubl
shr
jno
addl
mov
les
push
ret
mov
repz
inc
dec
add
pop
shrl
mov
dec
jge
lods
sub
lds
push
xor
sbb
mov
cmp
mov
aad
aad
sbb
xchg
dec
jno
cmp
fcomps
dec
dec
int
mov
sub
and
test
nop
and
in
test
cmc
popf
rolb
adc
and
js
add
test
dec
cmpsl
in
ljmp
or
ror
inc
cmp
stc
sub
loopne
sbb
xor
mov
sbbl
mov
xchg
loopne
mov
pusha
fildl
in
jnp
xor
fdivrl
dec
sub
movsl
mov
sti
into
add
into
push
mov
push
mov
adc
or
int
sti
jl
jge
jmp
pushf
sub
jle
xor
xor
jle
pop
repnz
mov
cwtl
shll
lcall
js
sbb
adc
inc
push
nop
xchg
and
shrb
add
push
bound
scas
in
ficomps
and
call
sub
decb
or
sub
mov
outsl
and
aam
paddw
stos
in
mov
int
int
stos
test
in
cmp
mov
stc
mov
sbb
dec
jne
xchg
mov
or
shll
arpl
das
lods
jbe
adc
pop
popf
sbb
and
aam
xlat
call
ljmp
sbb
adc
add
mov
mov
js
pop
test
inc
sub
and
leave
pop
les
push
push
stc
cmp
sub
movl
sub
inc
adc
clc
data16
push
fnstsw
mov
loopne
popf
fildll
sub
and
sbb
rclb
out
jmp
or
dec
adc
cmp
or
jge
or
jns
pop
jbe
jns
out
out
adc
into
xchg
js
adc
popa
and
adc
sub
mov
sbb
fs
in
jecxz
sub
and
call
inc
out
mov
popf
dec
mov
insb
sub
lret
pop
lahf
lods
dec
sbb
cmp
cmp
push
mov
icebp
aas
or
icebp
pop
outsb
in
dec
stos
ret
inc
mov
inc
push
je
adc
nop/reserved
mov
insb
push
or
sbb
iret
sbb
xor
movsb
out
int3
test
fstp
out
hlt
mov
xor
js
cmp
jge
aam
movsl
dec
sbb
xchg
rorb
sbb
dec
call
int3
shlb
mov
push
mov
leave
fildll
subb
and
sbb
mov
scas
test
js
int
pop
imulb
mov
in
xchg
aad
sbb
popa
fwait
int
nop
push
gs
lods
jmp
stc
movb
or
rol
pop
cltd
jecxz
mov
movsb
xor
das
movsl
mov
test
mov
scas
push
ficoml
sbbl
push
js
outsb
pop
mov
sbb
add
mov
xlat
es
xchg
insb
dec
js
cmp
js
test
dec
add
mov
xor
ffree
xchg
xchg
sbb
les
adc
inc
mov
mov
xor
pop
push
add
addr16
xorl
insb
rolb
and
adc
pop
ss
shr
fstp
mov
aaa
push
cmpsb
mov
lret
fbstp
subl
into
jae,pn
pop
arpl
add
adc
add
xchg
mov
push
or
jp
jl
jns
data16
mov
lret
icebp
cs
sub
fstl
push
xorl
call
ret
je
inc
sub
stc
aad
sbb
out
out
jge
aad
addl
popa
xchg
and
sarl
sub
stos
push
insb
mov
add
fwait
sbb
pop
adc
dec
inc
pushf
test
inc
or
jp
xchg
and
das
mov
dec
push
pop
xor
push
jae
xchg
dec
shlb
fists
movsb
add
sbb
add
sub
jnp
pop
sbb
lret
addl
add
mov
push
sub
xchg
mov
add
outsb
cmc
mov
out
mov
pop
mov
add
sub
pop
mov
push
or
or
adc
in
fs
out
pop
pop
fwait
jmp
adc
adc
sbb
and
sbb
mov
cld
insb
mov
sbb
mov
xchg
mov
loope
stos
sub
in
push
jns
cmpsl
push
pop
test
jmp
in
outsl
out
adc
push
sub
jl
sbb
push
jge
push
mov
sub
xor
adc
xchg
xor
xchg
adc
sub
xor
or
lret
loopne
outsb
push
cmp
loop
cmp
mov
xor
ds
lds
inc
push
mov
adcl
repz
jne
rclb
sbb
int3
notb
fs
xor
sbb
jo
jne
sbb
inc
cltd
repnz
mov
cmp
js
and
cwtl
cmpsl
jecxz
sub
loopne
lret
sbb
pop
stc
ss
aam
rcll
loopne
pop
jns
stc
sub
loopne
lret
mov
push
fdivrl
in
cmpl
and
pop
popa
and
lock
sbb
dec
mulb
push
mov
loopne
js
dec
sub
int
loop
sub
dec
popf
jo
addb
pushf
js
lods
jns
sub
pop
ret
xor
scas
dec
push
mov
dec
sub
pop
aaa
jmp
stos
pop
mov
mov
inc
lea
mov
mov
popa
test
push
add
nop
loope
repnz
xchg
js
loop
inc
jae
mov
mov
les
xchg
xchg
sub
or
cmpl
sbb
lods
sub
and
movsl
jae
lret
in
push
fwait
sar
fidivrl
sub
pusha
hlt
and
xchg
lahf
mov
stc
xchg
sbbl
lret
adc
sub
ds
sub
stos
fsubrl
dec
ja
rorl
push
loop
andb
popf
js
or
das
popa
lret
push
bswap
js
add
mov
fwait
stos
lods
xor
imul
xor
daa
inc
xchg
xchg
movsl
js
xorb
sub
cld
sti
pusha
outsb
inc
sbb
mov
mov
int
inc
loope
pop
hlt
sarl
into
pop
sub
sarb
adcl
in
xchg
xchg
cwtl
jne
mov
mov
jmp
sbb
jno
sar
jae
sub
or
popf
int
sub
cwtl
mov
test
mov
inc
fdivrl
sub
nop
loop
add
inc
pop
add
sarl
loopne
loopne
lea
mov
andl
cmp
in
in
sbb
xchg
adc
clc
std
je
cmc
sbb
int3
js
mov
xlat
movsl
and
sbb
jns
sbb
mov
mov
lods
lods
lret
popa
inc
icebp
dec
sbb
sbb
gs
fistl
fistpl
aas
idivl
getsec
lcall
jg
call
pop
sbb
xchg
sub
pusha
imul
sahf
insb
jle
clc
inc
aam
adcl
int3
mov
jb
add
clc
xor
aam
sub
dec
adc
adc
sbb
mov
lahf
addl
aas
pop
push
push
jge
pop
push
mov
imul
pop
mov
sbb
adcl
outsl
or
cmpsl
or
aad
test
push
mov
std
bound
sbb
movsb
xor
jb
jae
xor
add
jns
out
xchg
cld
mov
sbbl
cmpsl
dec
push
inc
xchg
cmp
subl
sbb
repz
xchg
adc
xor
sbb
mov
mov
jp
cmp
cmp
cmpl
lcall
enter
adc
dec
mov
jb
adc
sbb
pop
je
test
roll
jge
or
ss
adc
dec
lret
ss
insl
sub
jbe
ljmp
jmp
movsb
adc
mov
xchg
sbb
xchg
adc
addr16
outsb
mov
sbb
or
adc
inc
in
sbb
mov
jg
nop
ja
or
cld
negb
dec
push
int3
pop
mov
lds
xor
sub
mov
jnp
out
imul
aaa
or
pop
cmp
insl
sub
push
lcall
test
pop
jno
xor
arpl
xor
jl
lcall
test
fidivrs
sbb
ficoms
fwait
xchg
mov
ds
push
and
lret
dec
stos
fsubs
xchg
leave
lret
jo
pusha
push
jecxz
mov
xchg
mov
rcrb
or
jmp
dec
leave
xchg
shlb
mov
xchg
pop
sbb
movsb
add
into
jae
aas
pop
dec
inc
jae
and
and
adc
dec
pusha
and
push
in
adc
pop
cmp
jg
bound
ret
dec
mov
andl
lahf
push
cmp
ds
push
inc
sbb
mov
idiv
into
cs
push
bound
cmp
movb
or
sbb
xor
sbb
in
out
push
fwait
pusha
dec
mov
cmp
fistl
adc
sbb
call
lods
push
leave
jnp
adc
js
push
aaa
cmp
or
push
shll
xor
pushf
or
dec
fldz
ja
add
mov
insb
sub
addb
mov
jns
push
lea
push
jge
fstpt
sub
jg
jno
jns
loopne
in
push
aaa
fisubl
lret
lods
inc
std
mov
jb
cmp
sbbb
and
int3
loop
dec
adc
ret
mov
andl
cmp
mov
sub
sbb
xor
xor
pop
jg
pop
sahf
fwait
sub
pop
push
pop
cmp
outsl
iret
clc
dec
popl
std
inc
cwtl
mov
or
push
scas
cs
and
add
imull
outsl
sub
xor
jnp
stos
iret
subb
sbb
adc
rcrb
xchg
pop
xchg
pop
sub
sbb
cmp
jo
pop
jge
push
dec
and
sub
mov
bound
and
jne
out
inc
jb
add
cmp
lea
mov
mov
fs
ja
cs
or
test
sub
inc
xchg
aas
xchg
stc
add
add
sub
add
inc
fstpt
lfs
sbb
mov
cwtl
cmp
sbb
mov
jo
pusha
test
jnp
and
lods
cld
xor
shrl
int3
mov
or
mov
mov
scas
xchg
mov
cmpxchg
addb
mov
or
mov
xchg
add
dec
lahf
adc
adc
xor
add
test
fnstsw
in
sub
or
dec
xchg
sub
int
or
out
sar
out
xchg
jo
ja
out
inc
sbb
cmp
mov
sbb
cltd
leave
adc
aad
xchg
pop
mov
sub
enter
repnz
inc
push
subl
xchg
test
adc
pop
dec
aas
pop
sub
iret
jno
xchg
jge
jg
sbb
sbb
movsl
push
inc
jmp
cmp
test
movb
mov
sbb
stos
dec
iret
mov
sub
mov
add
data16
mov
mov
stos
sub
sbb
xor
test
daa
int
jo
ds
mov
and
xor
dec
dec
mov
pop
xor
jbe
xor
mov
pusha
dec
jmp
pop
insb
cld
add
jno
jbe
sbb
xor
pop
xor
mov
movsl
je
pop
stc
stc
rcrb
jge
movsl
push
or
testb
add
loope
pop
sbb
jbe
xor
mov
iret
mov
jp
jp
xor
fs
sub
enter
jge
jle
and
pusha
push
dec
out
cmpl
mov
sbb
adc
repz
push
xor
push
lock
ret
mov
std
sub
fstpt
cmpsl
movsl
out
mov
dec
inc
xchg
daa
push
fdivl
or
add
push
or
dec
sbb
es
ret
pop
shll
xchg
fisttps
dec
jp
mov
ret
add
sbb
dec
sti
sti
fs
stos
loop
push
cmpb
addb
mov
loope
lods
jbe
pop
aam
stc
or
push
cld
fidivrs
mov
inc
out
push
mov
or
imul
pop
popf
lods
sub
push
fnstsw
aas
pop
pushf
arpl
daa
adcb
shrb
out
push
mov
pop
test
subb
dec
cmp
pushf
cmp
sarl
leave
xchg
mov
cltd
xchg
enter
pop
add
mov
cmp
cmp
out
pusha
movsb
testl
xchg
stos
pop
mov
fidivrs
add
jp
inc
jb
sub
sahf
cmp
sti
jg
aas
inc
es
mov
cld
into
lods
push
pop
cld
lcall
aas
fsts
xchg
mov
push
daa
pusha
insl
cmp
hlt
js
nop
cmp
mov
sbb
xchg
scas
mov
adc
jbe
cltd
movsl
xor
js
loope
stos
ljmp
daa
jp
jmp
pop
and
hlt
cs
lds
daa
scas
sub
icebp
adc
das
cmpsl
sbb
add
inc
or
icebp
arpl
xchg
fwait
insb
inc
stos
and
int3
out
add
fnstcw
inc
or
lock
daa
jg
fistpll
or
aas
mov
aad
imul
push
push
scas
push
cmp
push
ja
dec
clc
movsl
add
pop
pop
pop
inc
mov
xor
sbb
jae
jno
xchg
dec
sbb
adc
jle
jmp
sub
mov
adc
add
xchg
pusha
loopne
cmpsl
leave
test
cmp
mov
xchg
jb
dec
push
stos
or
inc
dec
push
sbb
jl
lea
loope
aaa
sub
enter
mov
push
enter
std
outsb
add
fists
pop
jae
mov
daa
adc
adcb
sub
cmp
and
jne
xlat
insb
push
lret
movsb
lock
test
leave
or
adc
xchg
cmpsl
xchg
sub
imul
and
jge
cmovae
shrl
sub
stos
movsb
jb
xchg
enter
mov
test
negl
xchg
addr16
jp
out
scas
cli
or
pop
cli
dec
mov
lcall
stos
sub
inc
jg
cltd
aas
cmp
stos
stos
icebp
mov
repnz
jle
mov
pop
subl
bound
movsl
ret
add
jmp
cltd
mov
movsl
loope
out
ret
mov
mov
add
pop
mov
sub
xchg
push
push
ret
jo
lods
iret
dec
add
jg
incb
in
int3
enter
jmp
or
mov
dec
xor
xor
push
js
inc
cli
push
pop
test
and
movups
jns
xchg
sbb
jle
aas
or
lods
stc
cmp
and
cmpsl
inc
repnz
sti
jle
mov
aaa
ja
xor
adc
aas
jmp
jne
or
add
cld
mov
dec
inc
ret
in
and
pop
cmp
cmp
mov
int
cmc
popf
shll
sbb
test
xorl
xchg
aaa
stos
dec
dec
or
mov
jp
cmpsb
sahf
les
pop
inc
sbbl
enter
xor
lret
aaa
xor
mov
arpl
sub
and
shl
enter
shll
mov
into
mov
sbb
push
cmc
into
sub
cwtl
pop
jmp
sbb
ret
in
orl
and
scas
mov
or
xchg
popa
cmp
arpl
sub
in
insb
shll
ds
test
inc
ja
inc
jmp
inc
mov
sbb
iret
jg
mov
mov
push
and
adc
cmp
sarl
in
cld
sbb
or
mov
add
sub
leave
pop
and
inc
movsl
fidivs
adc
les
xor
sbb
fisubrl
cwtl
jp
jg
mov
xor
pop
das
lods
or
jge,pt
js
or
adc
mov
sbb
and
pop
hlt
jo
and
cmp
add
dec
pop
cmp
cs
cmpl
xchg
stos
mov
and
sahf
stos
aam
stos
jb
fs
aam
jg
enter
outsb
rclb
subl
popf
jnp
popf
lret
pop
addr16
mov
mov
pushf
ret
push
xor
lea
sbb
push
jl
xor
jbe
dec
mov
inc
sbb
cmp
mov
or
cs
jle
mov
mov
or
or
dec
bound
scas
cmp
xchg
add
cmpsb
scas
imull
adc
adc
ss
sbb
in
hlt
mov
cmp
inc
popa
aaa
lods
or
and
or
push
pusha
adc
pop
dec
dec
fwait
push
fsubl
dec
add
sbb
jb
and
cmp
push
dec
add
int3
mov
or
add
ret
push
mov
mov
or
mov
mov
xor
fistpll
xchg
xchg
test
mov
sub
popa
adc
fs
jns
iret
sbb
sub
inc
mov
pop
popa
lock
in
adc
lods
jne
xor
mov
cltd
inc
add
jl
push
imul
and
mov
int
xchg
jnp
sbb
stc
pop
mov
pop
test
mov
int3
jp
das
push
pushf
xchg
cmc
push
rolb
push
shrl
cmp
or
iret
xlat
idivb
add
movsb
je
mov
add
xchg
shl
add
incb
mov
dec
sub
mov
or
sub
roll
xor
cmpsl
loop
pop
icebp
insb
and
imul
pop
jo
adc
and
movsl
mov
adc
ljmp
mov
ficompl
cltd
mov
test
and
and
jb
cmpsl
push
hlt
xchg
mov
aas
sub
jg
das
pop
es
fs
imul
jmp
jae
jle
sbb
ja
outsl
add
xchg
mov
sbb
mov
jg
popa
and
aas
mov
mov
sbb
repnz
and
and
mov
adc
icebp
repnz
popa
aaa
ljmp
sub
mov
enter
and
add
lcall
xor
inc
and
sbb
adc
mov
xchg
jo
insb
pusha
jnp
ja
rclb
into
stos
fstps
scas
decb
sbb
inc
push
btr
out
and
imul
mov
enter
dec
or
pop
data16
lods
loop
sub
je
inc
mov
cmp
pop
js
jp
subb
mov
jnp
jnp
xor
xor
pop
and
xchg
push
pop
xchg
leave
xchg
inc
jns
aaa
ret
mov
dec
sub
dec
das
jnp
dec
xor
test
icebp
push
pop
aam
mov
jecxz
cmp
adc
dec
imul
fs
dec
sbb
cmpsb
and
mov
inc
mov
push
test
lds
cli
jl
xor
jp
adc
fadds
xchg
cmpsl
jle
sti
sub
add
sub
subl
fstpt
inc
xchg
adc
push
sub
lahf
dec
cs
jns
loopne
rclb
and
push
xchg
cmc
repz
stos
or
sti
lcall
and
insb
test
faddp
lahf
and
sti
shrl
and
cmp
inc
mov
xlat
addb
loope
dec
adc
push
daa
xchg
shl
mov
dec
lock
fs
jp
mov
cmp
lods
push
xor
gs
xchg
and
adc
nop
inc
adc
out
dec
cmp
mov
rorb
sahf
fstps
xchg
cmp
scas
jmp
insl
add
jg
add
jg
sbb
aas
cmp
hlt
test
jp
push
adcb
pop
sub
adc
cmpsl
adc
jge
idivb
js
cmpl
pusha
fwait
adc
adc
clc
sbb
pop
push
jge
stc
pop
out
cs
movsl
dec
movsb
dec
xor
pop
push
and
or
adc
mov
outsl
das
in
test
add
adc
gs
or
push
add
and
xor
or
jmp
sbb
mov
mov
add
adc
mov
or
or
sub
add
idivb
addr16
lods
sbb
leave
pop
lret
sub
fisubs
icebp
xor
outsb
addr16
sbb
lcall
adc
or
mov
fwait
jno
adc
aad
rorl
push
push
fcomip
lcall
sahf
fwait
cmp
mov
dec
xchg
ret
out
cld
pusha
xchg
gs
rolb
pop
mov
or
sub
inc
xchg
mov
lea
or
mov
pushf
xchg
dec
cmp
fildl
data16
test
in
add
insl
add
imull
imul
sub
inc
je
mov
pop
xchg
push
gs
cmc
push
add
adc
mov
jl
or
cmp
bound
fcoms
xchg
test
mov
cmp
leave
push
sbb
cmp
jae
and
pop
test
jno
fisttps
pop
mov
jo
push
dec
into
adc
aas
js
jae
and
sbb
ror
test
shll
or
imul
push
push
gs
inc
dec
stos
jo
mov
adc
push
xchg
iret
fistps
push
cmpsb
ret
js
push
addl
push
or
add
mov
call
add
or
add
add
push
add
dec
add
sub
add
or
adc
mov
add
sahf
addb
or
adc
add
dec
sub
add
add
push
inc
or
inc
leave
or
xchg
addl
add
sub
add
and
add
and
add
push
loop
or
inc
addl
add
add
add
and
sbb
add
or
add
xor
add
add
or
addb
inc
xchg
mov
and
add
pop
add
add
or
addb
add
andb
add
lods
add
mov
sbb
inc
dec
rol
add
push
add
or
rorb
loopne
adc
leave
or
lds
jb
or
add
inc
xor
sbbb
test
adc
add
adc
add
add
xchg
addb
or
add
or
add
bound
add
inc
add
pusha
pop
into
addl
sub
addb
xorb
movsl
nop
add
xor
inc
inc
xchg
add
xorb
adc
add
add
pop
and
and
adc
add
orb
add
pusha
add
add
push
inc
or
inc
les
add
add
or
add
inc
adc
adc
addb
or
add
test
add
add
mov
adc
or
cmp
inc
mov
add
add
adc
add
mov
or
dec
mov
or
add
mov
and
and
addl
add
jo
add
add
mov
push
add
dec
mov
pusha
and
roll
add
add
adc
push
add
adc
xchg
add
inc
loop
or
mov
pusha
or
inc
or
and
sbb
add
adc
and
inc
addb
add
and
inc
adc
add
add
inc
adc
adc
or
inc
add
add
xor
add
add
js
pop
and
addb
adc
add
sbb
inc
add
adc
add
add
mov
add
inc
sub
or
and
add
mov
add
andb
add
push
addl
inc
add
add
add
dec
mov
or
add
sbb
fs
add
inc
adc
add
add
adc
add
add
inc
and
inc
and
and
dec
or
add
inc
pop
adc
inc
and
or
add
add
add
addb
add
add
inc
adc
add
push
add
and
add
pop
dec
adc
rorb
add
add
adc
movsb
add
rolb
or
xor
mov
xchg
andb
pusha
test
addb
inc
add
add
pop
and
dec
and
add
add
add
add
addb
and
test
test
and
add
addb
popa
mov
sbb
add
dec
mov
inc
add
mov
add
inc
sub
dec
xor
add
inc
add
dec
and
add
mov
add
dec
add
add
inc
add
and
add
or
xor
xor
inc
and
and
add
inc
add
fs
movsb
or
add
inc
sbb
cwtl
add
add
add
add
add
add
push
add
adc
xor
test
inc
add
add
add
add
adc
add
addb
sbb
or
add
mov
and
sub
inc
fcoms
add
and
inc
add
adc
adc
dec
and
sbb
fcomps
inc
add
add
nop
inc
add
inc
add
add
dec
push
add
add
add
addb
add
or
add
add
adc
add
add
add
inc
add
and
xor
sub
add
and
add
orb
or
add
test
push
sbb
xor
add
add
jo
and
pusha
add
nop
inc
add
add
xchg
adc
or
add
add
nop
or
test
pusha
add
push
jge
addl
add
inc
inc
adc
add
add
sub
or
add
test
push
dec
adc
add
or
ret
xor
add
xchg
adc
adc
inc
add
and
add
dec
dec
add
add
or
inc
add
sub
add
adc
inc
dec
mov
nop
add
add
adcb
adc
sbb
add
add
add
add
or
add
push
xor
mov
add
add
push
add
and
add
bound
pop
add
sbb
add
dec
push
push
or
test
push
and
xor
add
dec
add
and
mov
and
add
sbb
and
les
add
inc
inc
arpl
add
add
add
or
or
or
or
or
rolb
add
add
add
and
add
js
pop
shll
pusha
xchg
add
or
add
add
add
add
add
inc
inc
lock
and
inc
add
push
add
add
add
push
or
add
add
and
or
or
xor
or
inc
sbb
and
add
stos
test
inc
add
inc
adc
add
test
add
xor
inc
inc
add
add
add
add
leave
inc
add
and
add
orb
inc
or
call
add
inc
addb
inc
inc
or
cmp
add
inc
inc
cmp
orb
add
add
addl
andb
addb
or
inc
add
inc
add
add
add
addb
pusha
inc
add
mov
or
addb
add
addl
add
add
sbb
and
xchg
add
and
add
add
adc
add
adc
test
jnp
nop
mov
adc
and
enter
add
and
add
add
loopne
add
add
xchg
add
cmp
rcrb
add
xor
add
add
nop
mov
add
mov
inc
nop
dec
jns
orb
mov
movsl
or
add
adc
add
addb
add
orb
push
or
adc
add
add
cmp
push
add
rolb
pop
add
add
add
add
add
add
add
adc
inc
mov
adc
add
add
inc
adc
push
and
adc
and
add
add
add
adc
add
push
inc
add
inc
add
push
and
add
sub
add
xor
add
add
addb
inc
and
add
add
or
add
inc
add
add
add
add
dec
add
add
adc
or
adcl
inc
add
roll
inc
rolb
add
add
adc
nop
or
add
cmp
and
sbb
add
add
add
adc
add
add
xchg
adc
pop
rcrb
add
add
or
add
dec
add
add
and
fiaddl
add
add
add
and
sub
inc
addb
inc
xor
push
inc
adc
adc
aam
add
add
add
and
mov
sbbb
inc
pop
mov
add
orb
data16
and
add
add
add
or
addb
add
or
add
pusha
and
or
add
add
add
adc
inc
add
and
add
add
inc
inc
adc
inc
add
or
addb
inc
add
add
pusha
add
test
dec
add
and
add
adc
add
pusha
pusha
andb
adc
roll
add
pop
sbb
sbb
add
inc
add
test
add
add
and
add
xor
inc
add
inc
add
inc
cmp
add
add
or
add
add
add
and
mov
sub
movsb
add
add
add
add
test
inc
add
inc
add
add
jo
or
add
adc
addb
loopne
or
and
add
addb
add
and
addb
pusha
popa
or
add
add
rolb
add
push
and
or
adc
and
add
push
mov
inc
add
add
dec
inc
add
adc
add
mov
sub
push
inc
adc
loop
inc
inc
adcb
inc
dec
inc
add
add
push
dec
test
add
add
and
add
or
push
push
pusha
adc
add
add
xchg
and
xchg
add
adc
inc
add
sub
addb
dec
add
dec
add
dec
add
test
add
dec
push
add
inc
inc
inc
dec
add
adc
and
adc
add
add
or
and
inc
rorb
adc
add
add
push
add
es
add
add
sbb
sbb
inc
inc
inc
pusha
nop
add
nop
add
add
and
mov
mov
cmp
adc
adc
bound
and
add
add
or
add
and
adc
addb
dec
add
push
andb
add
pusha
add
andb
or
adcb
or
inc
andb
add
mov
add
add
adc
add
add
add
add
inc
arpl
add
xor
add
or
adc
add
add
add
push
data16
add
add
pusha
add
or
adc
mov
inc
sub
add
inc
andl
add
add
and
add
rcll
add
dec
sub
inc
xor
nop
add
mov
add
add
andb
add
add
push
xchg
sbbb
add
add
add
add
add
add
sub
and
inc
push
add
les
andb
or
inc
add
add
and
add
add
pusha
add
add
and
adc
add
andb
adc
addb
and
inc
adc
add
add
inc
add
add
push
add
add
sub
inc
add
add
adcb
add
inc
jo
add
or
inc
sub
add
addb
imul
add
add
adc
cltd
and
add
add
adc
addb
add
add
inc
adc
adc
mov
addb
and
jo
add
addl
adc
pushf
add
and
inc
add
sbb
add
add
inc
cs
adc
cmp
and
push
mov
andl
inc
add
add
inc
add
xor
adc
add
add
orb
add
sub
mov
add
push
add
inc
push
or
inc
add
les
and
enter
add
add
add
inc
add
add
add
push
rorb
mov
addb
push
add
adcb
add
and
and
and
inc
adc
and
jo
or
inc
push
subb
andl
add
add
add
nop
ror
sub
add
sub
adc
adc
test
js
addb
push
rolb
jo
adc
or
rolb
add
adc
inc
push
adc
es
ror
inc
add
inc
shlb
inc
mov
or
add
add
adcb
loopne
popf
pusha
outsb
dec
and
popa
xor
inc
sub
inc
add
add
add
addl
add
daa
adc
add
addl
inc
inc
mov
mov
adc
addl
adc
add
punpcklbw
xor
pusha
add
add
and
add
adcb
cmpb
and
add
je
add
add
or
add
inc
addb
sbb
add
adc
pusha
addb
or
add
add
add
push
add
xor
sbb
or
inc
dec
addb
add
inc
dec
or
add
adc
add
inc
add
and
add
add
inc
pusha
or
and
add
add
addb
or
nop
add
ret
adc
xor
add
adc
or
pusha
or
inc
test
dec
add
adc
test
add
add
add
add
add
add
ret
inc
add
add
in
sub
push
push
push
call
add
push
test
jne
mov
cmp
je
mov
and
push
push
call
add
push
mov
push
call
add
push
mov
cmp
jne
push
call
add
push
push
push
push
call
add
xor
cmp
jne
mov
sub
mov
mov
mov
call
add
mov
mov
mov
test
jne
cmp
jne
mov
mov
push
push
call
add
push
push
push
push
push
call
add
mov
mov
push
push
push
call
add
mov
mov
push
push
push
push
call
add
add
mov
lea
push
call
mov
sub
cmp
jne
mov
mov
mov
mov
cmp
jne
or
mov
mov
mov
test
je
mov
mov
push
call
add
push
push
push
call
add
mov
mov
mov
add
cmp
jne
sub
test
jne
call
mov
push
call
add
push
push
call
add
push
push
push
push
push
call
add
cmp
je
mov
cmp
jne
cmp
jne
add
push
push
push
push
call
add
mov
mov
mov
push
call
add
add
cmp
je
add
cmp
jne
push
push
call
add
sub
test
jne
xor
mov
test
jne
mov
cmp
je
mov
cmp
jne
or
cmp
jne
mov
mov
push
call
add
mov
cmp
jne
push
push
call
add
mov
mov
mov
push
push
push
call
add
sub
mov
mov
cmp
jne
add
push
push
push
call
add
mov
push
push
push
push
call
add
mov
xor
mov
mov
cmp
jne
mov
or
push
call
add
mov
mov
push
call
add
mov
mov
xor
cmp
je
xor
mov
mov
push
push
push
push
push
call
add
sub
mov
mov
mov
mov
cmp
jne
push
push
call
add
add
mov
cmp
jne
xor
mov
cmp
je
sub
mov
cmp
jne
mov
cmp
je
push
push
push
call
add
mov
push
push
push
call
add
add
push
push
push
push
push
call
add
mov
sub
mov
cmp
jne
mov
mov
push
push
push
push
push
call
add
mov
push
push
push
call
add
lea
or
mov
cmp
jne
mov
mov
mov
cmp
je
sub
mov
mov
mov
cmp
jne
sub
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
je
mov
mov
cmp
je
mov
mov
add
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
mov
mov
mov
push
or
mov
test
jne
push
push
call
add
push
push
push
push
push
call
add
mov
sub
cmp
jne
mov
call
mov
push
push
push
push
push
call
add
mov
push
call
add
shr
mov
cmp
jne
mov
and
push
call
add
push
push
push
call
xor
mov
mov
push
call
add
mov
mov
sub
mov
pushl
push
pushl
call
call
addl
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
mov
test
je
mov
mov
cmp
jne
mov
xor
mov
call
push
push
call
add
call
mov
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
mov
add
cmp
jne
push
push
call
add
cmp
je
cmp
jne
mov
mov
mov
mov
or
push
push
push
push
call
add
pop
cmp
jne
cmp
jne
cmp
je
xor
mov
push
call
add
pop
cmp
je
cmp
je
mov
sub
push
push
push
call
add
cmp
jne
test
je
add
mov
pop
add
mov
push
call
add
leave
ret
push
push
call
add
mov
push
push
push
push
push
call
push
push
call
add
push
call
mov
push
push
push
push
push
push
call
call
push
push
push
push
push
push
call
push
push
call
add
push
push
call
push
call
add
push
push
call
mov
push
push
push
push
push
call
add
push
push
push
call
mov
push
push
push
push
call
mov
push
push
call
add
call
and
mov
push
push
push
push
call
mov
add
push
push
push
call
add
push
push
push
call
push
call
add
push
call
call
push
push
push
push
push
push
call
mov
push
push
push
push
call
add
push
push
call
xor
mov
mov
cmp
je
add
mov
push
push
call
add
push
call
add
cmp
je
push
push
push
push
call
add
add
test
je
push
push
call
add
mov
push
call
mov
add
mov
call
sub
call
push
call
add
mov
test
jne
push
call
add
mov
mov
cmp
je
sub
push
push
push
push
push
call
add
push
push
push
push
call
xor
cmp
je
mov
push
push
call
push
push
push
push
call
add
sub
mov
push
call
add
test
je
mov
mov
push
call
add
add
cmp
jne
sub
mov
push
push
push
push
call
add
mov
pop
mov
add
mov
cmp
jne
cmp
je
xor
test
je
mov
push
push
push
push
push
call
add
pop
mov
push
push
push
push
push
call
add
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
mov
call
push
mov
mov
push
mov
mov
mov
mov
movl
mov
call
mov
mov
mov
xor
mov
call
xor
cmp
jne
mov
cmp
jne
mov
xor
test
je
sub
mov
test
jne
mov
mov
mov
mov
cmp
jne
sub
mov
mov
mov
mov
cmp
je
call
call
xor
mov
cmp
je
cmp
je
add
mov
cmp
jne
mov
mov
mov
mov
add
mov
cmp
je
mov
mov
sub
cmp
je
mov
cmp
je
xor
cmp
jne
mov
mov
sub
mov
mov
mov
add
test
jne
xor
mov
mov
mov
push
call
add
mov
mov
mov
or
je
or
mov
mov
cmp
je
cmp
jne
mov
mov
cmp
je
mov
mov
addl
cmp
je
mov
and
mov
lea
add
cmp
jne
mov
add
mov
mov
mov
mov
push
push
push
call
add
inc
mov
mov
mov
mov
xor
cmp
jne
xor
test
jne
add
mov
mov
sub
cmp
je
mov
add
mov
cmp
jne
cmp
jne
sub
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
cmp
je
mov
cmp
je
sub
mov
cmp
je
mov
mov
mov
cmp
jne
and
mov
mov
mov
cmp
je
mov
sub
mov
cmp
jne
add
mov
test
je
test
je
mov
add
test
je
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
je
mov
cmp
je
xor
mov
mov
pop
mov
push
push
push
call
add
pop
sub
cmp
jne
push
call
add
pop
mov
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
cmp
je
cmp
je
mov
mov
push
cmp
je
mov
push
push
push
call
add
push
and
mov
cmp
jne
mov
mov
cmp
jne
mov
add
push
push
call
add
rdtsc
or
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
push
push
push
call
add
mov
mov
mov
mov
mov
mov
rdtsc
add
mov
mov
cmp
je
test
jne
mov
sub
sub
mov
mov
mov
cmp
jne
add
test
je
mov
sub
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
add
mov
pop
mov
mov
pop
mov
mov
mov
cmp
je
test
je
mov
sub
cmp
je
and
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
mov
cmp
jne
mov
mov
test
jne
mov
cmp
jne
add
push
push
push
call
add
push
push
push
push
call
add
push
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
je
test
je
mov
test
jne
mov
mov
cmp
je
and
mov
cmp
jne
mov
cmp
jne
add
test
jne
cmp
jne
sub
cmp
jne
mov
mov
cmp
je
or
mov
cmp
je
add
mov
cmp
jne
mov
mov
sub
cmp
jne
mov
cmp
je
mov
mov
add
cmp
je
mov
mov
cmp
je
mov
sub
cmp
je
and
mov
mov
mov
mov
decl
mov
cmp
jne
sub
mov
subl
mov
cmp
je
mov
cmp
jne
add
mov
mov
xor
cmp
jne
xor
mov
add
mov
jmp
mov
mov
add
mov
mov
push
push
push
push
call
add
mov
pop
mov
xor
mov
push
push
push
push
push
call
add
push
call
add
push
push
push
call
add
push
call
add
mov
pop
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
mov
test
je
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
movsbl
mov
movsbl
xor
mov
movsbl
add
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
mov
mov
push
mov
mov
push
add
mov
mov
mov
call
xor
cmp
je
test
je
mov
push
push
push
call
add
mov
push
push
call
add
cmp
je
mov
push
push
push
push
push
call
add
pop
mov
or
mov
mov
push
push
push
call
add
pop
mov
add
mov
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
call
push
mov
sub
mov
push
mov
cmp
jne
mov
add
push
push
push
push
call
add
push
mov
push
push
call
add
mov
cmp
je
mov
mov
pop
mov
xor
cmp
jne
mov
pop
mov
mov
pop
mov
sub
mov
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
mov
call
push
mov
mov
push
sub
push
call
add
mov
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
cmp
je
call
xor
mov
pop
mov
pop
sub
mov
pop
mov
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
xor
mov
push
mov
xor
test
jne
mov
test
jne
add
mov
push
push
push
push
push
call
add
push
call
add
mov
push
test
je
cmp
jne
mov
cmp
je
mov
mov
mov
mov
push
push
call
add
cmp
jne
push
push
push
call
add
cmp
je
xor
mov
mov
mov
cmp
je
mov
pop
mov
test
jne
mov
test
jne
push
push
push
call
add
mov
cmp
jne
cmp
jne
mov
sub
push
push
push
push
push
call
add
pop
cmp
jne
cmp
je
push
push
push
push
call
add
pop
cmp
je
sub
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
push
xor
mov
mov
mov
push
call
add
push
push
push
push
push
call
add
mov
cmp
je
call
pop
mov
push
push
push
push
call
add
pop
xor
push
push
push
call
add
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
push
push
call
add
push
call
push
push
call
add
xor
push
call
add
push
push
push
push
call
add
test
jne
cmp
jne
push
call
add
pop
cmp
je
push
call
add
pop
mov
mov
push
push
call
add
pop
cmp
je
and
cmp
je
or
mov
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
mov
push
mov
call
test
jne
sub
cmp
je
push
push
push
push
call
add
push
push
push
call
add
xor
mov
cmp
je
test
jne
cmp
jne
push
push
push
push
call
add
push
mov
mov
mov
push
call
add
xor
push
push
push
push
call
add
cmp
jne
xor
mov
mov
push
push
call
add
mov
add
cmp
je
mov
cmp
jne
or
mov
cmp
jne
mov
push
push
push
push
call
add
push
call
add
sub
push
push
call
add
push
call
add
mov
cmp
jne
cmp
jne
mov
cmp
je
test
je
add
mov
push
call
add
mov
mov
pop
mov
cmp
jne
cmp
jne
test
jne
cmp
jne
cmp
jne
test
jne
add
cmp
je
sub
mov
cmp
je
cmp
je
sub
mov
mov
mov
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
pop
add
cmp
je
call
pop
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
push
xor
cmp
jne
mov
push
mov
add
push
push
push
push
call
add
push
mov
mov
add
mov
mov
mov
call
cmp
je
mov
mov
xor
cmp
je
cmp
jne
xor
mov
pop
mov
pop
mov
pop
add
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
sub
mov
push
mov
sub
mov
mov
sub
mov
mov
mov
mov
push
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
call
pop
add
mov
call
test
jne
mov
push
push
push
push
call
add
mov
pop
mov
add
cmp
jne
push
push
push
call
add
pop
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
cmp
je
cmp
je
mov
add
mov
push
push
push
push
call
add
push
cmp
jne
cmp
je
cmp
je
mov
add
push
push
push
push
push
call
add
mov
push
push
call
add
add
cmp
je
add
mov
mov
mov
pop
mov
test
je
mov
push
push
push
push
push
call
add
call
push
push
push
call
add
push
push
push
call
add
pop
mov
pop
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
and
mov
push
mov
sub
mov
mov
mov
push
sub
mov
mov
test
jne
mov
push
mov
mov
sub
mov
sub
cmp
jne
cmp
je
mov
add
mov
mov
mov
mov
cmp
je
mov
pop
mov
sub
cmp
je
cmp
jne
xor
mov
pop
xor
mov
mov
mov
cmp
je
sub
mov
cmp
jne
mov
mov
mov
mov
pop
mov
mov
leave
ret
add
cmp
add
inc
add
add
adc
xchg
add
cwtl
adc
inc
add
add
push
mov
add
cltd
add
add
or
inc
enter
movlps
mov
push
shll
inc
sbb
inc
add
ret
add
and
adc
xor
adc
add
and
inc
sbbb
pusha
or
adcb
mov
and
sub
add
sbb
and
xchg
xor
add
inc
push
add
xchg
lcall
inc
inc
rolb
addb
add
inc
sbb
add
orb
orl
push
add
or
rorb
add
adc
pusha
adc
adc
xchg
add
push
xor
jae
aad
xchg
pop
push
add
add
dec
addb
inc
push
and
mov
and
and
or
or
or
arpl
mov
jp
add
adc
leave
cmpb
push
inc
rolb
xor
ror
inc
add
add
or
xor
or
and
pop
or
cmp
or
add
les
or
pop
or
sbb
mov
pop
add
aas
inc
add
inc
and
sbb
add
int3
push
pusha
or
or
dec
add
xor
adc
or
test
test
or
xchg
add
rolb
inc
and
adc
inc
xor
test
popa
sub
sub
add
sbb
and
add
inc
adc
adc
rolb
add
or
out
adc
flds
sbb
andl
enter
sbb
inc
push
inc
mov
add
push
sbb
and
adcb
add
nop
add
addb
lock
push
inc
inc
add
pop
sbbb
add
add
dec
fs
push
add
addl
or
or
add
adcb
add
add
adc
adc
adc
test
cwtl
andl
inc
adc
or
or
test
add
and
and
or
pop
add
addl
adc
adc
add
adc
add
nop
or
sub
or
addb
add
add
mov
inc
adc
or
subb
and
leave
subb
inc
and
or
xor
and
adc
xor
and
dec
adc
dec
or
add
mov
xor
call
adc
pop
sbb
or
add
xchg
lods
and
dec
or
add
or
add
adc
dec
cmpl
cmp
add
inc
inc
add
test
and
aas
push
orb
or
adc
or
or
inc
add
sbb
add
bound
and
dec
mov
or
push
les
add
push
pusha
bound
pusha
add
add
nop
loope
or
loopne
add
adc
in
add
add
add
jl
add
add
adc
and
in
inc
popa
or
and
adc
test
pusha
sub
add
mov
sub
test
cmpsb
inc
inc
adc
xchg
add
inc
adc
add
nop
test
mov
adc
adc
push
or
and
add
and
push
adc
adcb
xchg
push
and
add
push
mov
add
sub
add
inc
and
and
adc
ret
xor
inc
and
addl
and
inc
nop
adc
sub
adc
sub
adc
and
dec
and
shll
add
leave
fwait
push
addb
add
inc
mov
add
or
or
adc
add
mov
and
addb
add
push
mov
addl
stos
inc
pusha
nop
push
test
add
mov
mov
mov
add
sbb
nop
add
jo
add
ret
adc
or
add
mov
dec
or
lret
or
and
inc
addb
or
and
sub
cmp
add
mov
or
sbb
dec
andb
and
adcl
andl
arpl
orb
mov
sub
and
xor
sub
add
inc
inc
inc
dec
nop
dec
add
push
xor
sbb
inc
test
sbb
mov
inc
add
dec
and
ret
and
xorb
and
add
adc
adc
add
add
mov
adc
lret
add
add
pushf
add
add
add
and
inc
add
and
add
adc
add
add
add
push
inc
add
and
adc
rorb
addb
push
lcall
add
loopne
add
inc
add
dec
and
or
mov
pusha
sub
push
add
mov
inc
sbb
add
mov
or
sub
mov
add
or
cmp
add
dec
inc
add
test
sub
add
add
sbb
or
add
add
orb
add
and
movsl
add
add
rolb
adc
sbb
add
and
add
add
xor
xor
dec
xor
loope
adc
push
and
inc
adc
xchg
mov
addb
and
add
add
cmp
test
adc
popa
adc
add
stos
sub
add
sbb
add
add
or
sbb
test
add
add
sub
addb
add
nop
push
mov
add
sbb
adcb
int
dec
or
add
add
add
push
test
xor
push
sbb
or
xchg
inc
sbb
ret
adc
sub
add
push
or
and
xor
add
nop
or
xor
add
add
adc
and
add
addb
add
adc
push
inc
addb
or
sbb
add
add
adc
sbb
add
or
add
shrb
or
add
add
add
adc
and
movsb
in
add
sub
add
xor
pusha
add
and
pusha
mov
adc
push
adc
or
subb
pusha
adc
test
and
test
and
test
and
add
add
sbb
add
or
add
adcb
add
dec
push
add
icebp
aam
adc
push
xorb
adc
dec
bound
sub
mov
xchg
addl
and
adc
add
push
loopne
ret
pusha
inc
cs
andl
addb
or
mov
subb
es
lea
adc
sub
roll
xchg
shlb
sbb
nop
adc
and
daa
pusha
push
add
add
in
popa
addb
and
andb
add
add
and
inc
inc
lds
rolb
stos
inc
and
and
add
add
mov
and
or
xchg
add
add
sbb
inc
add
add
adc
and
or
add
add
add
push
orb
add
and
addb
adc
or
inc
add
add
inc
and
mov
roll
mov
inc
inc
mov
jo
add
and
mov
loopne
adcb
nop
add
je
add
push
add
or
rcrb
inc
add
add
rolb
nop
add
loope
sbb
or
add
or
and
inc
add
inc
and
shll
sub
les
roll
adc
add
add
andb
inc
addb
xchg
and
add
or
add
es
xor
push
je
inc
add
adc
add
inc
add
movb
inc
sbbb
add
add
dec
add
push
push
or
dec
or
cmp
inc
adc
add
add
and
xchg
or
adc
add
subb
shll
sbb
addl
adc
sub
sbb
or
push
and
and
add
add
inc
push
adc
test
add
cmp
mov
add
dec
mov
inc
sbb
es
inc
adcb
adc
sub
or
adc
mov
mov
add
orb
or
adc
pusha
inc
sbb
add
aaa
rorb
adc
xor
mov
adc
or
addb
and
adc
and
add
test
xchg
or
mov
add
and
or
add
adcb
pop
adc
mov
push
or
add
sbb
add
add
pop
xchg
inc
adc
pop
dec
and
and
and
add
push
sbb
adc
add
test
inc
cmpsb
test
or
test
sub
xchg
adc
cmp
inc
inc
xchg
and
xchg
addb
or
nop
add
cmpsb
and
adc
add
nop
or
sbb
addl
xchg
push
addb
or
inc
inc
dec
dec
inc
add
rcl
rorb
sub
add
inc
adc
mov
adc
nop
add
or
push
inc
add
test
pop
add
sub
popa
adcb
pusha
adc
ret
and
addb
xor
xor
add
test
or
or
and
and
or
mov
dec
adc
add
adc
add
andb
inc
push
test
adc
xchg
or
and
and
pusha
in
nop
pop
dec
dec
inc
inc
inc
mov
add
push
and
test
add
inc
xor
adc
or
push
push
adc
dec
adc
inc
inc
add
or
add
and
and
aaa
mov
dec
add
and
pusha
mov
sub
bound
push
cmp
add
or
mov
adc
or
xchg
jb
mov
fiaddl
out
dec
addb
addb
sbb
adc
orl
add
push
repnz
shlb
add
add
and
xorb
add
inc
adc
inc
add
addb
sbb
addb
mov
sbb
addb
add
nop
bound
rolb
mov
inc
or
subb
adc
add
mov
add
add
add
arpl
push
inc
je
and
add
adc
add
add
add
add
xchg
adc
mov
pusha
mov
add
andl
or
add
adc
add
pop
test
shll
inc
adc
nop
add
mov
add
rclb
add
mov
adcl
nop
sbb
and
xchg
add
add
xor
add
and
rorb
cmp
test
addb
ret
pop
adc
adc
push
orl
add
sub
inc
add
or
adc
and
mov
inc
push
andb
xor
sbb
add
add
and
add
add
mov
push
test
and
add
adc
xor
adc
movsb
add
sub
adc
adc
lea
add
sub
or
iret
adc
mov
enter
or
add
nop
sbb
and
inc
add
dec
add
inc
add
into
add
or
and
adc
add
inc
inc
adcb
add
mov
and
push
sub
add
orb
add
add
add
add
push
adc
push
or
mov
dec
add
add
inc
add
and
add
or
mov
add
ret
andb
add
push
adcl
and
mov
or
adc
fnstenv
call
or
add
or
add
adcb
add
push
or
and
je
ret
mov
rolb
or
lods
pop
pusha
add
adc
and
loope
nop
add
cwtl
inc
dec
and
xor
add
or
push
loopne
dec
add
and
add
fsubl
adc
popl
add
adc
sbbb
and
mov
inc
push
cwtl
jns
inc
sub
sbb
xchg
and
xor
popa
sbbb
sbb
in
rolb
and
inc
add
add
adc
or
lea
pop
sbb
adc
adc
mov
push
add
add
lret
dec
add
and
add
inc
or
or
push
mov
mov
push
nop
mov
sub
and
add
or
adc
push
mov
andl
or
inc
and
enter
or
and
bound
mov
nop
add
add
and
mov
add
or
mov
xor
or
lds
or
add
mov
loopne
add
inc
stos
add
rclb
inc
or
add
add
les
inc
adc
inc
sbb
loope
add
add
add
and
and
or
add
inc
and
xor
shll
adc
xchg
pusha
and
inc
mov
inc
add
add
add
inc
and
or
and
add
adc
push
jp
or
add
inc
or
orb
push
loope
inc
add
mov
xchg
aaa
nop
and
addb
add
inc
or
add
or
push
inc
or
or
and
mov
add
add
xchg
add
call
and
and
adc
addl
or
push
add
ror
or
ja
adc
je
inc
roll
or
pop
cwtl
loop
dec
adc
mov
push
and
inc
and
or
adc
add
mov
enter
pusha
add
and
hlt
mov
add
and
andl
and
and
xchg
mov
push
xchg
pop
add
lret
or
adc
inc
orb
inc
add
add
inc
nop
add
or
inc
sbb
and
adc
add
andb
inc
adc
add
loopne
add
add
add
rclb
add
add
add
xchg
adc
add
inc
inc
pop
add
mov
inc
sarb
shrb
add
movsb
add
add
mov
sub
add
and
add
xchg
adc
cmp
dec
sbb
dec
add
and
add
add
add
inc
addb
test
adc
adc
add
and
popa
nop
mov
and
and
pushf
inc
add
sub
bound
or
adc
mov
or
sub
xorb
add
add
mov
push
orb
addb
mov
cld
andb
adc
aam
sbb
add
add
sbb
add
inc
adc
orb
pusha
adc
push
push
inc
andb
mov
add
sub
add
add
and
inc
cmp
adc
inc
dec
mov
or
push
add
dec
push
rolb
add
and
cmpb
or
addb
adc
inc
add
addb
mov
add
push
add
xor
or
adc
add
fsubl
or
add
add
add
addb
sbb
test
add
add
sub
sarb
add
and
pop
adc
inc
call
mov
adc
sbb
add
or
add
add
andb
and
add
rolb
add
imul
and
andl
and
adc
add
add
or
cmp
push
mov
and
inc
addl
and
adc
pop
push
dec
addb
sub
adc
push
dec
mov
test
lock
inc
add
mov
add
add
adc
and
andb
lret
xor
inc
sub
or
inc
dec
adcb
push
adc
inc
mov
or
add
xchg
lods
add
push
adc
and
add
adc
loope
add
or
xchg
test
add
add
mov
or
adc
sub
inc
add
xor
mov
or
rolb
adc
add
add
ret
add
add
sub
and
and
addl
ret
or
or
data16
cwtl
xorb
push
pop
xchg
add
lea
pop
shrl
addb
add
mov
or
add
inc
push
add
add
add
adc
dec
addb
dec
add
adc
or
sbb
add
add
add
add
adc
inc
and
test
inc
and
mov
add
test
or
add
and
nop
and
inc
outsb
sub
adc
xor
push
sbb
and
add
add
rcrl
add
add
add
popa
add
sbb
xchg
add
mov
or
add
and
jno
add
inc
or
add
cmp
addb
and
pop
mov
or
add
aad
add
add
addb
push
sbb
popf
sub
pop
xchg
sbb
addb
inc
adc
mov
adc
inc
cltd
addl
adc
sbb
add
and
push
or
addb
and
andb
xor
push
adcl
push
adc
andl
add
rolb
adc
dec
sbb
add
adc
add
adc
dec
or
add
rolb
adcb
adc
inc
pusha
nop
xor
push
xor
mov
add
sbb
add
adc
push
and
or
movsb
adc
or
addb
push
or
nop
add
mov
add
sub
cmp
push
xchg
dec
add
dec
test
xchg
jo
and
and
add
inc
add
inc
pop
or
add
addb
xchg
dec
add
add
test
add
push
xor
inc
add
inc
adc
adc
dec
add
add
adc
inc
inc
inc
and
mov
xor
jp
add
add
pop
insb
mov
add
add
or
xchg
inc
add
and
daa
add
aas
pushf
or
xor
push
dec
rcll
mov
lds
loopne
add
sbb
test
adcb
adc
add
mov
lods
cmp
dec
add
inc
mov
inc
or
add
sbb
inc
add
add
and
pop
or
and
add
in
inc
addb
push
movsb
add
mov
push
or
inc
dec
and
mov
sbb
add
adc
inc
add
pusha
cmp
adc
adc
add
addb
pusha
adc
adc
and
and
adc
rclb
aam
xchg
add
cwtl
test
adc
dec
test
fs
sbb
push
add
sub
add
add
add
add
mov
and
popf
add
mov
test
addl
test
jo
inc
mov
or
add
and
test
xchg
shlb
and
shl
and
rolb
add
sub
xchg
add
adc
or
add
inc
or
add
mov
inc
add
or
add
add
test
and
push
rcrl
mov
add
pop
mov
add
add
add
adcb
je
les
pop
dec
roll
adc
add
push
sub
add
xor
add
inc
add
add
inc
xchg
xor
pop
popa
and
add
cmp
add
pusha
inc
add
xchg
test
adc
add
lcall
push
sbbb
cwtl
and
add
dec
dec
rcll
add
add
add
inc
or
add
cwtl
add
or
or
add
and
rclb
or
adc
dec
adcb
pop
cwtl
inc
adc
sbb
test
movsl
and
add
adc
xor
inc
add
or
add
addl
ret
rolb
add
rorb
fildl
inc
and
push
adc
adc
mov
data16
add
add
and
xchg
orb
andb
or
push
xor
inc
cmp
dec
es
inc
cmp
xorb
out
fildl
nop
loope
sub
add
inc
add
add
inc
and
add
add
add
add
les
or
sub
mov
adc
adc
addb
orb
adc
add
inc
inc
push
sbb
dec
enter
xor
mov
mov
sub
and
add
and
dec
subb
addb
add
sbb
test
mov
add
sbb
and
add
mov
inc
mov
add
add
add
adc
or
or
and
adcl
adc
push
sub
xor
inc
dec
mov
adc
fadds
rolb
mov
adc
add
cmp
adc
adc
and
and
inc
add
and
test
adcb
add
xchg
add
add
icebp
or
adcb
dec
inc
xchg
lea
xor
or
and
add
and
mov
sbb
sbb
or
add
roll
add
mov
add
add
or
xor
dec
or
xchg
addb
dec
add
inc
dec
add
nop
add
add
push
xchg
loopne
js
add
add
orb
rclb
sbb
es
cmp
xchg
mov
add
pusha
int3
add
add
sbb
data16
inc
add
test
push
lods
andl
add
push
pop
add
or
mov
add
and
mov
add
add
mov
sub
add
sbb
mov
add
add
add
or
adc
add
les
sub
and
sbb
dec
sbb
or
adc
push
add
and
inc
bound
add
sbb
andb
add
mov
adc
add
or
stos
add
leave
or
inc
push
adc
inc
inc
pop
add
push
adc
daa
add
pop
js
push
or
popa
inc
mov
add
add
repz
add
mov
nop
add
xor
addr16
ret
sub
add
dec
inc
and
rolb
adc
and
adc
jo
add
test
add
adc
or
inc
cmpsl
orb
int
enter
pusha
cmp
or
or
inc
push
add
mov
les
inc
add
or
pop
les
mov
dec
dec
orl
inc
addl
addb
addb
inc
add
orb
and
and
add
or
add
test
or
add
add
and
pusha
test
sub
and
imul
adc
add
xor
sub
addb
and
adc
adc
or
jo
mov
push
add
xor
sub
inc
popa
adc
add
add
or
inc
addl
add
mov
mov
insb
addb
add
or
es
test
inc
add
add
add
add
and
add
xchg
add
or
inc
inc
and
dec
add
add
add
dec
add
sbb
bound
and
adc
leave
add
pusha
adc
add
sub
inc
dec
and
adc
add
inc
mov
and
add
andl
adc
and
sub
inc
adc
sbb
or
add
and
xchg
fadds
push
add
xor
and
and
imul
inc
and
push
sbb
insb
add
xor
addb
sbb
inc
push
ret
adc
adc
or
add
mov
add
or
add
pusha
dec
mov
add
sub
inc
push
add
addb
add
dec
or
inc
addb
addb
inc
or
add
and
mov
add
and
pop
mov
or
add
dec
dec
add
inc
inc
adcb
sbb
or
and
orl
inc
add
add
bound
add
cwtl
add
and
mov
shll
push
leavew
mov
mov
inc
xor
or
shlb
sub
mov
cmc
and
pusha
jl
test
cli
and
in
adc
cmp
bound
inc
sbb
push
inc
xor
inc
adcb
inc
add
push
add
loopne
enter
and
push
add
or
cwtl
mov
add
and
add
add
mov
or
or
inc
movsb
stos
add
inc
add
push
add
les
add
andl
inc
or
push
add
and
add
add
or
adc
adc
popa
add
and
bound
push
or
adc
test
addr16
push
adc
dec
xchg
add
pusha
and
push
and
add
nop
inc
xor
mov
and
adcb
adc
sub
dec
add
push
and
nop
add
test
adc
jb
clc
push
adcb
add
sbb
inc
add
or
add
add
test
and
pop
or
mov
add
add
and
add
mov
add
inc
add
shlb
add
and
xor
mov
sbb
sbb
addl
add
enter
and
add
inc
adc
lret
addl
movsb
or
sbb
addb
adc
add
push
or
or
add
rorl
xor
add
sbb
inc
cmp
add
or
add
inc
xchg
pop
cwtl
sbb
add
inc
dec
add
dec
add
call
add
pop
or
add
inc
inc
push
add
fs
add
stos
add
add
adc
add
addr16
or
mov
adc
pop
adc
add
and
mov
mov
add
adc
add
add
add
add
test
and
push
add
or
sbb
add
or
inc
sub
nop
pop
inc
imul
cmpsb
add
or
jo
sub
add
add
xor
and
rolb
insl
and
or
adc
or
test
add
adc
pushf
xchg
jne
adc
or
sub
hlt
add
addb
inc
or
or
int3
mov
add
cld
inc
rorb
push
addb
insb
loope
add
mov
add
inc
add
adc
push
mov
sub
inc
sub
add
sub
mov
lcall
and
sbb
mov
adc
fs
adc
bound
adc
mov
mov
adc
or
xor
inc
adc
inc
add
loopne
adcb
inc
add
jo
add
inc
loope
and
fs
dec
roll
inc
inc
add
inc
dec
add
addl
nop
and
or
dec
popf
inc
sbb
or
addl
adc
addl
cmpb
add
add
add
nop
addb
add
and
adcb
pusha
add
or
int3
add
cwtl
inc
mov
push
inc
andb
and
adc
add
add
rcll
and
xor
add
add
rorb
andb
xchg
inc
adc
and
adc
add
inc
xor
sub
inc
lcall
and
add
add
xor
invd
rolb
mov
sbb
dec
mov
mov
mov
add
xchg
andl
adc
fsubl
add
add
jo
mov
add
shlb
inc
dec
sub
mov
mov
pushf
add
cltd
lret
sbb
addb
add
xor
add
int3
or
xor
or
adc
andb
and
and
push
adcb
add
pop
and
add
add
adc
inc
add
inc
or
add
nop
and
jo
adc
addb
xor
add
adc
adc
mov
or
add
and
rolb
sub
add
orb
addl
add
and
add
add
add
mov
ret
dec
lock
sbb
inc
add
test
push
add
add
test
or
addl
and
inc
adc
add
gs
mov
push
xor
mov
inc
inc
pusha
adc
sbb
push
add
test
add
or
sbb
add
and
subb
and
add
inc
inc
and
push
add
orl
or
daa
add
add
add
adc
pusha
and
inc
push
sub
sbb
xchg
adc
or
xchg
and
pop
add
and
add
xchg
sbb
rolb
or
into
inc
jb
inc
add
and
and
xor
add
and
add
sbbb
pusha
sbb
push
and
add
add
subl
ret
xchg
mov
les
mov
push
cmp
test
mov
pop
daa
rol
adc
adc
add
or
addb
adc
aad
bound
add
and
add
add
and
or
add
bound
or
add
inc
or
or
push
rclb
addb
rolb
xchg
add
and
or
js
sbbb
andb
add
es
add
add
bound
inc
inc
inc
or
sbb
mov
test
mov
daa
or
add
add
sbb
inc
inc
and
or
or
push
add
or
loopne
adcb
xchg
push
adc
add
add
and
andb
adc
andl
add
or
add
xor
addb
andl
and
add
sub
or
mov
or
add
pusha
roll
or
adc
loopne
add
inc
subl
sbb
mov
and
addl
mov
add
sub
xor
or
or
adc
or
add
andb
dec
addb
add
sub
sbbb
les
add
add
and
add
and
add
add
add
mov
and
and
adc
subl
and
adc
adc
inc
add
inc
add
and
add
and
sub
mov
add
rolb
and
or
and
xor
xor
add
les
add
add
cwtl
cmp
add
js
add
push
cs
nop
cltd
adc
call
push
andl
xor
stos
adc
mov
add
mov
add
and
inc
and
sbb
mov
lcall
sbb
mov
and
pusha
push
add
inc
or
sbb
add
add
add
or
inc
cmpsb
xchg
add
push
add
mov
sbb
cmp
nop
mov
in
add
add
add
add
or
add
add
rclb
adc
enter
popa
subb
add
and
inc
add
add
popa
adc
andb
jl
rcll
or
inc
sbb
add
or
xchg
sub
or
test
xchg
push
or
add
inc
add
add
add
and
orl
add
and
sbb
or
add
push
subb
inc
inc
adc
push
inc
push
inc
add
add
add
adc
pop
and
add
and
jle
xor
mov
rorl
and
test
mov
or
add
sub
push
xor
orb
push
add
mov
inc
mov
rcrb
nop
and
or
mov
nop
or
mov
cwtl
add
test
inc
dec
add
mov
xor
cmp
adcb
inc
mov
xor
or
inc
sbb
add
pop
add
xlat
add
add
xchg
add
add
and
add
inc
add
pop
xor
sbb
xor
xor
and
add
add
xchg
and
and
inc
add
add
and
dec
mov
adcl
ds
add
cwtl
adcb
xchg
add
rcll
xor
nop
inc
add
push
push
or
adcb
add
xchg
and
push
and
adc
add
adc
aam
or
and
add
xor
addb
add
add
adc
add
or
into
and
add
add
xor
push
xor
cmp
adc
mov
adcb
xor
sub
rorl
add
adc
and
push
inc
and
add
js
adc
andb
add
mov
adc
adc
addb
adc
add
add
add
add
andb
adc
and
add
nop
cwtl
cmp
dec
xor
mov
jle
inc
or
nop
mov
adc
and
adc
adc
add
add
add
sbb
roll
inc
add
adc
or
add
adc
test
add
add
sub
xor
ret
adc
add
lcall
jns
add
and
adc
xor
mov
dec
or
insl
fcoms
nop
dec
add
and
mov
mov
xor
adc
push
pusha
add
add
ret
xchg
add
adc
movsb
add
adc
cwtl
add
repnz
lcall
or
and
add
push
inc
add
push
or
subb
inc
add
xchg
add
or
cmp
add
sbb
add
or
inc
or
push
and
add
and
add
sub
add
add
xor
adc
dec
adc
or
ret
inc
xor
add
addb
add
mov
add
mov
ret
add
loopne
rolb
dec
dec
and
adc
or
or
add
nop
mov
inc
xchg
push
xor
xchg
push
addb
shll
and
sub
or
add
sbb
cmp
cmpsb
add
add
andb
nop
sub
and
int3
orb
inc
push
push
or
sbb
add
xchg
test
add
add
orb
sbbb
xor
add
adc
pop
adc
push
inc
add
or
jae
inc
sbb
inc
add
sub
and
les
subl
dec
mov
pop
leave
jae
les
inc
orb
jo
push
add
add
inc
xlat
pop
mov
shlb
add
adcb
adc
xor
or
addb
rorl
add
add
subl
add
inc
xor
inc
add
mov
mov
ss
cmpsb
test
adc
and
add
mov
sbb
add
xor
dec
and
mov
xor
add
add
inc
nop
dec
add
and
push
sub
add
or
or
add
inc
orl
or
sbbl
add
pop
adc
add
dec
mov
or
mov
add
adcl
add
or
or
mov
push
or
and
leave
les
and
sbb
add
or
adc
add
mov
test
add
and
inc
sub
adc
add
mov
pop
inc
and
addb
xor
add
add
rolb
test
adc
addb
add
push
and
addb
roll
or
and
data16
adc
add
add
adc
dec
nop
and
or
add
or
adc
gs
adc
rcll
pop
sub
add
nop
mov
es
mov
test
add
add
add
add
add
mov
fsubs
addl
roll
adc
sbbb
push
mov
mov
add
inc
adc
add
sbbl
add
add
or
add
add
and
adc
pop
movb
dec
nop
sub
sbb
lds
nop
inc
sbb
and
adc
push
addb
addl
and
inc
or
jb
inc
add
mov
les
inc
test
or
addb
add
add
pop
cmovns
add
add
add
inc
nop
adc
test
push
add
xchg
test
mov
inc
add
adc
add
addb
dec
inc
add
cmp
sub
inc
int3
adc
inc
and
sub
add
dec
add
xor
add
nop
nop
add
adc
ljmp
movsb
and
push
inc
or
adc
add
inc
add
adc
adcb
lock
dec
shrb
xor
add
clc
add
and
or
and
xchg
inc
add
mov
inc
add
add
and
dec
shll
inc
addl
or
adcb
sbb
adcb
orb
and
or
add
andb
roll
in
or
enter
cmpsl
push
xchg
xchg
inc
mov
add
addb
leave
add
dec
mov
mov
test
add
inc
inc
add
xor
inc
inc
sbb
xor
add
add
dec
adc
subl
jb
adc
add
femms
test
inc
ret
mov
xor
add
add
jno
and
push
test
dec
pop
add
add
dec
cmp
addb
add
loopne
add
mov
and
andb
add
and
adc
jb
or
add
adc
push
push
mov
adc
subb
push
ret
and
and
inc
adc
add
rclb
add
bound
add
adc
xor
test
adc
add
mov
add
add
xchg
pusha
add
nop
xchg
inc
addl
or
or
or
and
add
test
add
mov
add
add
fcoms
nop
adc
adc
sbb
add
add
and
add
add
and
adc
pusha
or
nop
add
add
inc
or
add
xchg
cwtl
add
enter
dec
mov
popa
push
push
add
add
pop
pusha
sbb
adc
push
and
add
jge
nop
add
andl
test
or
and
add
inc
push
cmp
or
sbb
adc
add
add
add
inc
or
push
and
xor
add
pop
add
add
sbb
and
adc
sbb
push
and
xchg
or
add
add
add
add
and
and
add
add
nop
add
add
lds
inc
adc
adc
or
adc
addb
mov
add
adc
sub
adc
and
pop
push
and
add
inc
xchg
jo
add
and
and
nop
add
pusha
or
mov
nop
add
cmovbe
adcb
addb
add
cwtl
addb
or
pop
or
pusha
or
push
add
or
sub
inc
addb
add
and
inc
push
add
mov
jb
push
add
adc
inc
test
xor
add
add
add
or
test
add
inc
inc
add
add
and
and
add
mov
or
and
add
adc
adc
iret
inc
add
test
add
add
orb
mov
mov
adc
adc
dec
inc
add
mov
addl
push
and
inc
add
adc
or
dec
add
or
test
adc
dec
add
in
pop
adc
mov
add
add
add
add
and
pusha
and
add
inc
mov
test
adc
sbb
add
add
xor
inc
add
mov
add
inc
adc
adc
or
andl
push
add
jne
sbb
mov
add
add
add
add
and
mov
adc
sbb
xor
add
andl
loope
mov
xchg
inc
and
add
add
add
or
and
test
mov
mov
and
addb
add
sub
inc
add
add
xor
push
pusha
or
add
or
pop
xchg
push
add
bound
or
bound
sbb
add
sub
add
inc
add
cmp
xor
add
add
call
sbb
popf
xor
adc
inc
addb
or
add
inc
add
add
aam
adcb
addl
xor
or
mov
add
test
or
push
mov
add
or
add
lret
adc
add
andb
add
or
sbb
push
andb
and
inc
inc
cwtl
pusha
flds
adc
xchg
sub
add
andb
or
or
add
and
adc
and
addb
sbb
cltd
and
add
sub
or
add
push
add
add
inc
adc
pusha
push
js
and
or
adc
or
add
adc
inc
sub
add
add
or
adc
add
sbb
adc
and
add
adc
add
adc
or
add
and
and
addl
mov
inc
bound
add
adc
and
add
dec
adc
inc
mov
inc
adc
dec
adc
sub
and
xchg
adc
or
add
xor
or
or
xchg
dec
and
or
inc
add
add
or
adc
inc
or
andb
pushf
add
inc
add
or
xchg
adc
mov
add
les
adc
add
adc
adc
shll
add
lcall
add
add
or
xchg
push
inc
adc
xor
sub
and
sbb
roll
xorb
xor
add
popa
add
mov
nop
adcb
and
rolb
add
add
loopne
push
inc
add
orb
nop
mov
or
addl
inc
xor
dec
add
adc
nop
or
or
adc
and
or
test
mov
test
movsb
xor
or
add
add
add
and
or
inc
mov
subb
adc
inc
push
push
and
push
add
mov
dec
test
inc
add
add
inc
push
xchg
inc
add
push
sbb
sbb
add
mov
sub
es
add
addb
push
add
add
andl
shrl
xor
dec
cmpl
add
or
cmp
pop
addb
xchg
addl
and
addb
dec
and
add
inc
and
or
add
and
add
mov
gs
cmpsb
or
add
addb
and
add
mov
sbb
adcb
or
inc
add
sub
add
test
or
add
inc
mov
push
loopne
sbb
jo
push
or
add
inc
push
or
add
test
inc
adc
add
add
or
mov
add
orb
and
sub
rclb
and
sbb
add
test
add
dec
push
mov
dec
data16
add
pop
push
and
mov
adc
addb
or
adc
push
inc
and
add
inc
add
adc
inc
add
add
and
xor
adc
add
rcrb
add
add
nop
cmp
sbb
adc
pop
add
add
mov
addb
or
rclb
adcb
add
add
xor
add
aam
inc
shlb
leave
orl
and
add
ss
shlb
and
or
mov
and
addb
adc
pop
and
sub
add
out
sbb
or
add
add
jno
add
mov
add
sldt
xor
and
aam
adc
xchg
add
or
add
sub
dec
adc
orb
adc
add
or
cmp
mov
addb
add
test
subb
lds
sub
adc
add
orl
add
sbb
add
adcb
repz
loope
inc
mov
mov
xchg
sbb
inc
addb
xchg
xor
add
add
inc
nop
les
add
inc
add
and
add
sbb
adcl
orl
nop
inc
inc
add
lret
push
cwtl
inc
add
ds
fistl
push
adc
add
xchg
push
inc
or
add
add
adc
rolb
or
adc
inc
ret
dec
rclb
and
and
add
or
scas
add
jno
or
add
inc
add
addb
and
add
inc
test
test
sbb
ret
add
sub
xchg
or
push
add
add
add
sub
adc
andb
add
push
mov
sbb
mov
les
sub
or
inc
adc
add
and
addl
add
mov
inc
add
inc
jo
add
rorb
inc
sub
sub
mov
adc
add
andl
cwtl
or
adcb
add
and
add
push
popa
ret
add
adc
add
add
or
and
subb
add
dec
or
dec
add
mov
or
dec
and
xor
adc
nop
lcall
add
add
add
add
add
push
add
push
adc
add
add
add
cmp
addb
or
add
or
xor
add
xor
push
bound
sub
mov
pusha
adc
rolb
add
add
pop
xchg
mov
jno
sub
xchg
xor
lcall
xor
enter
and
and
add
add
inc
adc
add
test
add
add
xchg
sub
add
add
add
adc
inc
adcb
addb
addb
inc
sbb
add
mov
and
xor
dec
and
inc
loopne
and
add
andb
adc
nop
and
mov
or
dec
and
sbb
add
or
mov
add
pop
xchg
adc
add
adc
int3
xchg
add
push
add
lods
or
addb
adc
rol
dec
and
pop
pop
lods
add
mov
and
inc
inc
inc
nop
arpl
push
inc
or
roll
mov
inc
nop
add
dec
addb
mov
xchg
sub
mov
adc
inc
add
add
add
add
mov
or
pusha
add
add
adc
push
addb
dec
cwtl
push
mov
addb
or
dec
adc
push
or
mov
subb
xor
add
cltd
and
inc
push
or
adc
add
sbb
add
inc
rolb
inc
add
or
adcb
add
rorb
inc
inc
adc
mov
or
jb
adc
mov
add
xchg
push
adc
adc
and
add
and
test
inc
add
add
frstor
or
or
sub
pusha
dec
ret
add
mov
inc
add
addb
sbb
addb
mov
nop
add
addb
add
rcll
adc
adcl
mov
and
inc
and
xor
dec
adc
inc
sub
dec
and
andb
test
loopne
loopne
or
add
inc
or
mov
sub
add
stos
mov
inc
js
add
adc
nop
popa
outsb
roll
xchg
adc
leave
mov
pop
popa
adc
or
inc
inc
pusha
mov
rolb
test
add
or
and
movsb
or
adc
add
add
inc
xor
add
ret
add
add
pop
and
sub
add
xchg
pop
push
add
add
andb
or
add
add
or
add
pusha
add
in
and
xor
dec
xchg
or
inc
test
shlb
mov
add
inc
roll
sub
inc
dec
or
add
loop
push
or
add
inc
and
dec
loopne
push
test
sbb
nop
rclb
adc
add
inc
push
or
adc
add
or
add
add
or
add
xchg
add
shlb
xor
imul
or
inc
add
adc
and
add
rorb
adc
and
jae
add
adcb
sub
push
orb
dec
ret
roll
and
dec
inc
add
and
push
es
inc
adc
add
inc
pushf
push
add
inc
inc
add
push
adc
xchg
add
or
sub
add
mov
lret
addb
or
arpl
add
add
cltd
xchg
adc
adc
cltd
dec
sub
adc
add
xchg
mov
or
add
sbb
dec
cwtl
add
mov
and
and
cmp
add
add
add
adc
pop
inc
add
add
pop
sbbl
and
or
mov
roll
inc
loopne
inc
pusha
push
add
mov
adc
add
add
and
or
adc
inc
pusha
inc
adc
add
test
sahf
inc
or
add
test
add
jno
add
mov
and
dec
adc
mov
and
sub
sbb
add
add
addb
add
dec
addl
xchg
or
or
prefetchnta
sbbl
or
add
and
shrb
add
dec
and
lods
adc
nop
nop
add
add
adc
add
or
push
andb
add
inc
add
add
enter
out
inc
addl
mov
add
add
adc
orb
and
add
add
and
adc
add
adc
adc
mov
inc
or
push
sub
add
add
and
add
popl
add
sbb
movb
sub
push
and
inc
inc
mov
sub
adc
orb
add
subb
and
inc
dec
bound
add
and
add
adc
or
inc
and
xchg
add
cmp
add
sub
mov
nop
adc
sbbb
adc
add
xorb
roll
mov
xor
add
adc
push
inc
add
adc
inc
add
test
and
push
mov
push
or
add
add
inc
dec
dec
dec
adc
andb
push
push
add
push
add
add
add
addb
or
adcb
add
shll
and
add
and
adcb
adcb
les
add
loopne
addl
addb
adc
add
add
add
add
and
add
add
or
adc
add
or
xchg
add
push
add
add
aam
or
add
sub
and
inc
sbb
sub
add
or
add
dec
dec
add
test
mov
inc
adc
add
push
xchg
orb
test
mov
and
inc
sbbl
adc
adc
mov
pop
inc
mov
inc
shrl
pusha
dec
and
cmp
and
lock
xor
inc
pop
or
add
add
inc
push
adc
adc
roll
xor
xor
outsb
dec
push
loopne
mov
add
xor
or
inc
mov
data16
adc
and
add
and
add
xorb
mov
sub
dec
xchg
mov
roll
add
and
add
add
inc
add
add
xchg
mov
cmp
xor
add
cmp
adc
add
and
add
adc
add
inc
inc
mov
and
fcoms
add
adc
adc
or
and
mov
push
or
add
xchg
ret
xchg
push
inc
and
or
int
add
adc
add
inc
or
enter
mov
add
addl
loopne
bound
roll
add
push
add
nop
and
add
loopne
xor
aam
add
add
adc
ret
push
and
sbb
add
xchg
inc
adc
adc
sub
loop
sbb
sub
or
add
mov
inc
inc
adc
add
fimuls
or
les
or
or
adcb
add
orb
add
add
add
adc
add
sbb
push
add
pause
test
mov
push
mov
add
nop
jbe
push
add
mov
or
orb
addb
add
sbbl
inc
inc
add
xor
add
es
add
push
and
add
adc
xor
and
add
add
roll
sbbb
adc
add
inc
and
push
or
add
roll
and
adc
adc
add
addl
adc
or
and
add
dec
adc
add
mov
add
adc
add
add
or
and
inc
adc
push
add
mov
adc
sub
xorb
adc
or
and
add
daa
or
sbb
sub
addb
mov
arpl
xchg
and
inc
inc
add
rolb
add
push
test
in
sub
adc
add
and
inc
or
and
lock
leave
add
and
pusha
xor
dec
inc
push
add
sub
sbb
mov
inc
add
addl
add
inc
sub
test
pusha
add
inc
add
and
push
and
push
cwtl
andb
rcrl
add
fs
addb
inc
add
or
or
rolb
xchg
je
and
push
mov
add
adc
leave
push
cmp
add
sbb
xor
sbb
or
andb
or
xor
adc
addb
test
cmp
sbb
adc
inc
adcb
and
loope
or
push
daa
add
inc
inc
add
mov
add
adcb
add
mov
inc
add
push
inc
add
sub
adc
push
and
add
sbb
add
inc
stos
add
nop
add
pop
or
shll
or
addb
lret
sbbb
fs
and
and
addb
or
push
mov
nop
pushf
or
and
inc
add
xor
add
dec
add
add
add
dec
add
adc
adc
adcb
mov
pop
bound
add
cmpsb
sbb
pusha
add
push
int
add
add
add
movsb
add
add
adc
add
add
add
push
push
sbb
add
push
add
mov
add
sub
or
mov
push
xchg
rolb
add
add
push
addl
add
inc
inc
add
inc
and
sub
dec
add
addl
or
nop
loope
or
and
or
or
sbb
xor
or
sbb
add
push
and
mov
pusha
xor
adc
mov
dec
cmp
add
rolb
push
add
jno
add
add
mov
add
pusha
add
shrb
inc
add
enter
add
xor
dec
dec
adc
and
add
and
add
add
push
adc
adc
lea
mov
inc
xor
and
xor
and
jb
rolb
inc
or
or
adc
inc
pusha
add
or
add
add
sbb
add
dec
add
or
inc
mov
push
add
push
and
shr
add
and
adc
adc
inc
sbb
popa
inc
sbb
add
sbb
fs
inc
xorl
add
add
add
push
inc
bound
dec
and
and
inc
adc
xchg
or
inc
inc
and
add
inc
rorl
or
and
add
nop
dec
inc
adc
xor
mov
mov
mov
add
add
mov
and
or
shll
adc
add
or
add
or
push
and
add
and
sub
add
add
mov
or
add
and
lret
adc
mov
nop
add
ljmp
or
inc
or
subb
andb
orb
add
add
addb
add
adc
add
push
inc
inc
or
pusha
xor
xchg
push
add
inc
add
xchg
and
and
add
add
add
roll
mov
xor
nop
and
xor
or
inc
or
rolb
push
and
sub
and
inc
inc
or
leave
subb
add
and
adcb
mov
and
mov
adc
nop
and
sbb
add
rolb
add
add
dec
add
inc
add
pusha
xchg
nop
cwtl
add
dec
add
or
lcall
add
add
and
sub
add
daa
adcb
and
inc
ret
push
xchg
jo
sbb
call
add
jge
and
adc
add
add
push
add
and
push
inc
adc
cmp
and
push
add
xchg
dec
add
add
add
xchg
add
adc
pusha
push
and
ret
add
lock
mov
xchg
and
sbb
xor
push
cmp
add
add
add
imul
nop
sub
add
add
add
dec
and
sbb
add
sbb
and
or
or
subb
push
add
addb
or
add
andl
or
add
inc
or
add
and
add
and
inc
or
inc
addl
movsb
orl
add
adcb
add
mov
sbb
push
add
add
push
add
add
push
and
add
add
add
adcl
sbb
or
and
int3
adcb
or
push
or
xor
add
adc
or
aaa
or
add
or
push
test
add
push
inc
add
add
add
and
sub
add
add
mov
inc
adc
add
loopne
cmp
or
and
or
and
addb
mov
push
push
sbb
pop
test
add
adc
or
and
or
add
sub
push
inc
and
fucom
inc
xchg
adc
inc
mov
and
or
xchg
inc
adc
and
rolb
or
inc
test
enter
add
xor
push
push
mov
arpl
adc
or
sub
pop
orb
xor
or
or
sub
inc
add
xor
addb
inc
xor
add
add
adc
cwtl
add
adc
dec
daa
inc
add
xor
mov
nop
or
add
add
or
sub
xor
cmp
add
or
adc
ret
aam
mov
int3
add
cltd
cwtl
add
add
sbb
add
mov
sub
imul
xor
adc
adc
stos
add
cmpb
add
enter
add
dec
xchg
push
add
xor
inc
mov
dec
and
add
adcl
or
mov
mov
add
sbb
and
inc
lods
andb
pusha
nop
mov
inc
adc
dec
inc
orb
or
inc
and
add
add
sbbl
add
add
add
adc
mov
add
add
loopne
adc
dec
add
sbb
add
adc
add
add
add
sub
inc
push
add
adcb
and
adc
pusha
andl
inc
add
adc
xor
add
or
cltd
adc
or
adc
addl
add
loopne
or
dec
push
add
inc
addl
add
adc
and
or
pusha
adc
push
add
add
daa
or
ds
pushf
sbb
nop
dec
jo
int3
xor
inc
inc
andb
and
inc
les
nop
inc
sbb
push
or
inc
or
inc
subb
loop
adc
add
add
subb
inc
pusha
add
add
adc
adc
push
mov
xor
mov
or
rol
add
add
sub
and
inc
push
inc
mov
inc
add
add
nop
test
ret
pop
add
or
and
add
and
add
subb
add
enter
xchg
or
inc
adc
add
add
xchg
and
add
and
js
mov
xor
inc
push
inc
and
shlb
add
xor
inc
and
or
subb
les
ret
add
addb
lock
add
and
imul
add
mov
mov
inc
shlb
sub
pop
add
inc
or
jno
add
repnz
inc
test
pop
sub
xchg
add
dec
push
add
add
pop
add
ret
adc
add
add
add
and
dec
inc
inc
xor
inc
mov
and
shlb
add
inc
or
arpl
adc
sub
and
test
sbb
inc
and
or
add
xchg
xchg
add
add
adc
or
mov
sbb
adc
add
roll
stos
pop
nop
add
loopne
add
and
clc
add
add
dec
inc
sub
or
add
add
mov
inc
enter
add
loop
cmp
adc
xchg
in
inc
or
adc
sbb
push
inc
hlt
addl
inc
add
adc
adc
mov
inc
adc
and
dec
and
cmp
inc
mov
inc
inc
inc
das
add
add
add
add
adc
add
addb
sbb
or
andl
or
sbbb
or
and
addl
and
pop
gs
popa
addb
add
cmp
sbb
add
mov
test
jae
mov
roll
sub
xchg
add
add
sbb
push
or
lds
add
add
add
mov
adcl
add
sbb
pop
xor
add
inc
and
or
add
stos
add
addb
je
add
test
push
cmp
sbbl
add
test
and
dec
bound
push
adc
inc
and
add
adc
adc
xchg
adc
adc
push
test
and
mov
add
adc
mov
xchg
or
mov
dec
xchg
add
add
mov
adc
add
sbb
xor
xor
xor
push
add
insb
add
addb
and
and
or
xor
mov
or
movsl
add
or
je
adc
inc
sub
adcb
add
push
test
xchg
and
or
add
and
or
add
xorb
and
cmp
adc
dec
sbb
inc
or
add
or
add
add
in
or
adc
inc
mov
mov
and
addb
addl
dec
add
adc
and
adcb
add
bound
or
loop
test
nop
add
mov
add
add
inc
subb
pusha
inc
add
andl
add
xor
and
orb
addb
les
add
cmpb
mov
add
orb
dec
add
add
addb
pop
or
adcl
sbb
or
push
inc
andl
and
add
add
sbb
ret
or
dec
sbb
add
and
popa
or
adc
adcb
pop
xor
add
add
add
mov
and
test
cmp
and
add
pop
test
push
addb
sbb
or
orb
and
addb
mov
nop
and
and
add
imul
xchg
and
add
add
mov
dec
dec
add
or
sub
add
rolb
or
pop
rclb
and
add
adc
inc
sub
add
dec
add
add
xchg
jo
or
loop
adc
adc
addb
mov
adc
and
les
xor
adc
or
add
or
or
orl
adc
add
adc
and
add
or
add
adc
adc
and
and
andl
pushf
or
add
and
and
add
or
popa
add
andl
mov
popa
mov
insb
fs
adc
adc
and
or
pusha
add
mov
push
add
adc
or
and
sbb
popa
or
addb
sbb
or
inc
or
add
mov
adc
mov
add
or
gs
add
shll
push
inc
or
adc
and
push
rorb
adcb
inc
pop
add
add
xor
in
add
sub
add
add
sbb
adc
lret
dec
add
inc
les
add
push
push
push
add
or
xorb
or
and
sbb
adc
test
mov
add
test
dec
cwtl
xchg
sub
or
add
dec
add
dec
push
mov
or
and
push
imul
add
adc
jo
and
add
adc
or
add
add
or
decb
add
add
add
add
add
add
add
sbb
add
add
inc
add
add
dec
push
push
inc
push
push
cs
insb
add
add
pop
jae
jo
outsb
add
add
insb
imul
jae
popa
jb
push
add
add
jo
pop
arpl
insl
outsl
fs
add
pop
arpl
insl
imul
jae
jo
outsb
add
add
pop
pop
addr16
popa
imul
add
aas
jae
je
je
jb
imul
pop
inc
push
ss
pop
pop
pop
push
ss
pop
pop
pop
inc
pop
add
add
pop
ja
insl
jo
jb
add
add
insl
imul
add
pop
jae
je
gs
outsl
jb
insl
outsl
fs
add
jae
bound
jns
bound
add
add
jo
je
add
add
pop
arpl
insb
outsb
gs
add
add
jo
imul
add
gs
je
add
add
jb
arpl
add
add
jae
je
popa
jo
pop
je
jo
add
dec
push
dec
cs
insb
add
add
push
jae
inc
inc
dec
push
imul
add
add
dec
outsb
imul
add
add
jae
outsl
jb
inc
jb
popa
imul
add
dec
jo
inc
insb
insb
dec
outsb
imul
add
add
dec
jo
inc
gs
gs
inc
js
outsb
je
js
outsl
imul
jo
inc
jb
ja
gs
inc
js
add
dec
jo
inc
js
push
gs
dec
jne
add
add
inc
imul
insb
add
add
dec
jo
inc
gs
push
je
jb
insb
popa
arpl
outsb
je
add
add
push
popa
bound
fs
gs
dec
jne
add
add
dec
jo
push
push
dec
push
gs
dec
jne
add
push
dec
inc
dec
xor
cs
insb
add
add
push
gs
gs
push
popa
imul
dec
popa
je
outsb
arpl
add
add
imul
insb
gs
je
imul
push
gs
outsl
insb
jne
gs
popa
bound
inc
add
add
je
inc
push
add
add
dec
gs
jo
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
push
gs
imul
gs
js
add
add
insb
imul
outsb
fs
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
fs
imul
add
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
inc
outsl
outsb
jbe
jb
inc
imul
push
add
add
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
add
inc
gs
outsl
outsb
jae
insb
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
add
je
je
jb
jne
dec
outsb
outsw
push
add
inc
inc
inc
dec
dec
push
cs
insb
add
add
push
jns
dec
outsb
imul
add
add
je
insl
popa
addr16
outsb
jne
gs
gs
fs
jns
gs
add
push
jns
dec
popa
je
push
dec
popa
insl
add
add
push
gs
outsl
jbe
push
jb
jbe
je
inc
jbe
jns
bound
imul
inc
imul
dec
outsb
push
popa
je
add
add
dec
insl
popa
addr16
outsl
popa
add
add
outsb
fs
insl
popa
addr16
js
add
push
jns
push
imul
outsb
arpl
outsb
inc
outsb
je
jns
popa
insb
insb
bound
imul
add
add
push
jns
inc
outsb
jne
gs
je
push
jns
bound
jae
xor
add
dec
insl
popa
addr16
imul
outsb
inc
js
add
add
insl
inc
gs
outsl
fs
gs
outsb
outsw
push
add
add
insl
inc
outsb
jne
gs
je
dec
outsl
fs
gs
add
dec
insl
popa
addr16
gs
imul
jb
popa
insl
add
add
push
jns
inc
gs
imul
dec
popa
insl
gs
add
add
outsb
fs
bound
dec
outsb
outsw
inc
imul
push
jns
push
gs
gs
jb
push
add
add
inc
imul
dec
outsb
push
gs
jb
push
add
push
inc
push
dec
dec
dec
push
dec
cs
insb
add
add
aas
aas
xor
outsl
jb
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
aas
aas
xor
push
outsl
jb
inc
inc
inc
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
add
aas
push
gs
fs
inc
push
outsl
jb
inc
inc
inc
inc
inc
push
inc
inc
dec
push
inc
pop
push
inc
inc
dec
push
inc
dec
inc
pop
add
add
dec
outsb
imul
push
jb
outsb
je
outsl
outsb
imul
add
aas
aas
xor
arpl
imul
push
inc
inc
inc
pop
pop
add
add
popa
insb
inc
outsl
outsb
imul
push
outsl
jb
push
dec
add
add
aas
aas
xor
arpl
imul
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
aas
aas
xor
outsl
jb
inc
inc
inc
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
pop
aaa
inc
push
outsl
jb
inc
inc
inc
inc
inc
ss
inc
add
add
aas
pop
aaa
inc
push
arpl
imul
ss
inc
add
add
aas
xor
push
arpl
imul
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
add
aas
aas
xor
outsl
jb
inc
inc
inc
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
xor
arpl
imul
push
inc
inc
inc
pop
pop
add
add
popa
insb
inc
fs
outsl
jb
push
dec
add
dec
push
push
dec
push
xor
cs
insb
add
add
jns
je
dec
push
push
gs
data16
outsb
imul
je
add
add
inc
jb
jo
push
dec
push
push
jne
push
imul
je
dec
jae
add
add
inc
jb
jo
push
dec
push
inc
jb
popa
je
dec
outsb
imul
je
add
add
inc
jb
jo
push
dec
push
push
gs
outsl
jbe
push
imul
je
dec
jae
add
add
jns
je
dec
push
inc
gs
outsb
outsw
add
add
jns
je
dec
push
inc
gs
gs
outsl
jb
imul
jae
add
add
jns
je
dec
push
inc
gs
imul
je
dec
jae
add
loopne
add
push
xor
add
add
insb
and
add
add
add
add
jl
add
cwtl
sub
add
add
loopne
add
or
add
add
add
sbb
add
xchg
add
cmp
add
out
and
add
and
add
and
add
and
add
add
movsb
and
add
and
add
and
add
and
add
add
add
mov
and
add
add
dec
and
add
and
add
add
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
jb
add
xchg
add
push
and
add
and
add
add
loopne
add
jo
add
cwtl
and
add
add
add
add
lcall
add
and
add
and
add
add
pop
and
add
and
add
and
add
and
add
and
add
and
add
add
shlb
add
add
add
xchg
and
add
cli
and
add
ss
add
inc
add
in
add
jp
add
scas
and
add
and
add
je
add
add
add
cmp
add
xchg
add
ljmp
add
add
or
add
sbb
add
add
out
and
add
and
add
and
add
and
add
add
movsb
and
add
and
add
and
add
and
add
add
add
mov
and
add
add
dec
and
add
and
add
add
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
jb
add
xchg
add
push
and
add
and
add
add
loopne
add
jo
add
cwtl
and
add
add
add
add
lcall
add
and
add
and
add
add
pop
and
add
and
add
and
add
and
add
and
add
and
add
add
shlb
add
add
add
xchg
and
add
cli
and
add
ss
add
inc
add
in
add
jp
add
scas
and
add
and
add
je
add
add
add
cmp
add
xchg
add
ljmp
add
add
or
add
sbb
add
add
add
mov
jb
jp
inc
xor
arpl
jbe
push
dec
gs
inc
push
inc
push
dec
inc
imul
jns
inc
ss
jae
push
inc
pop
addr16
aaa
push
addr16
inc
imul
push
jp
insl
popa
jbe
gs
dec
jns
push
xor
push
push
jbe
addr16
push
ss
push
jns
push
dec
popa
aaa
push
bound
inc
arpl
bound
imul
xor
jne
jb
pop
push
dec
dec
jbe
dec
push
xor
insl
dec
xor
pop
xor
aaa
inc
fs
jp
pop
jo
dec
inc
dec
aaa
push
push
inc
dec
dec
inc
dec
outsl
push
xor
dec
cmp
inc
dec
insl
ja
jb
arpl
bound
pop
jb
xor
inc
gs
fs
xor
outsl
push
arpl
jno
push
push
imul
insb
add
add
arpl
push
xor
imul
xor
push
ss
imul
xor
pop
inc
insl
imul
outsl
dec
xor
inc
push
push
inc
push
bound
jae
dec
dec
jno
push
insb
jb
xor
push
push
insl
insb
popa
dec
pop
inc
inc
xor
cmp
push
dec
arpl
xor
insl
jns
add
add
imul
data16
inc
dec
pop
imul
push
outsl
inc
inc
push
dec
push
xor
jno
xor
aaa
arpl
imul
xor
push
data16
je
addr16
pop
jbe
dec
cmp
jns
je
xor
ss
inc
aaa
push
dec
jno
xor
push
popa
dec
cmp
push
dec
cmp
inc
push
addr16
dec
xor
data16
outsb
ja
imul
inc
dec
push
addr16
dec
jno
jb
inc
dec
dec
pop
cmp
xor
insl
xor
jbe
popa
jae
jb
imul
xor
cmp
jo
jb
xor
xor
jns
dec
jo
xor
push
push
jp
insb
push
push
jns
dec
push
jp
xor
cmp
inc
push
add
push
dec
xor
addr16
inc
aaa
xor
push
bound
imul
cmp
pop
push
popa
push
push
ja
dec
jne
aaa
inc
dec
dec
push
insl
inc
ss
jns
gs
xor
jbe
ss
js
jo
push
inc
push
imul
push
imul
insb
addr16
xor
jp
push
pop
jbe
push
ss
xor
jno
push
dec
insb
inc
arpl
xor
inc
fs
xor
dec
dec
xor
dec
xor
dec
jb
popa
js
push
push
outsb
inc
xor
imul
dec
jae
inc
dec
dec
outsl
push
inc
cmp
push
je
dec
cmp
popa
push
cmp
imul
pop
push
dec
fs
pop
dec
pop
je
push
dec
inc
dec
push
push
insb
dec
add
add
mov
mov
je
jne
jo
cmp
inc
dec
ja
push
jp
xor
xor
jp
xor
ss
dec
jne
xor
push
ja
xor
cmp
push
bound
add
add
inc
fs
jbe
imul
jne
jne
inc
ja
outsb
jo
dec
aaa
jne
je
addr16
push
xor
push
pop
outsb
push
dec
push
push
pop
jo
ja
dec
pop
xor
gs
push
inc
inc
inc
dec
dec
dec
aaa
dec
inc
cmp
push
inc
imul
jo
popa
cmp
imul
data16
outsl
outsl
push
xor
js
dec
outsl
je
jbe
jo
bound
pop
push
inc
push
xor
inc
jb
addr16
inc
push
inc
jno
push
xor
pop
jp
inc
jo
inc
outsb
push
inc
je
xor
jns
xor
dec
push
inc
push
fs
xor
inc
aaa
bound
jbe
insl
dec
xor
jno
dec
add
imul
imul
jb
xor
cmp
dec
pop
dec
pop
cmp
jbe
inc
xor
push
inc
arpl
bound
push
imul
push
push
cmp
outsl
xor
bound
gs
fs
xor
jno
xor
dec
push
dec
pop
imul
push
xor
fs
dec
dec
push
push
jne
push
ja
xor
push
jo
push
imul
addr16
jae
je
push
dec
dec
push
push
add
jo
aaa
push
outsb
jne
jbe
xor
dec
push
pop
push
dec
dec
outsb
push
outsb
inc
popa
addr16
je
jno
pop
dec
inc
inc
jno
pop
arpl
jbe
je
push
ss
gs
jp
dec
xor
outsl
dec
dec
fs
jae
push
je
xor
push
aaa
dec
inc
jp
push
jae
jae
dec
jp
bound
inc
dec
jae
push
push
push
outsl
pushw
jo
xor
dec
inc
js
xor
xor
data16
jb
outsb
inc
dec
js
dec
dec
pop
inc
ss
dec
aaa
insl
imul
push
push
push
arpl
data16
push
dec
insl
dec
fs
jp
outsl
xor
xor
imul
dec
imul
fs
arpl
fs
xor
arpl
push
imul
ja
jb
pop
push
imul
add
insb
jns
push
inc
push
push
push
ja
push
bound
dec
xor
dec
cmp
js
insl
push
push
jp
inc
gs
push
pop
jne
cmp
push
xor
inc
outsb
push
push
push
jo
push
imul
push
push
bound
jns
jp
push
insb
ss
dec
jno
push
insb
jne
xor
imul
jo
outsb
cmp
jo
dec
xor
dec
gs
dec
dec
dec
jae
dec
xor
dec
dec
insl
inc
jno
pop
dec
jns
push
insb
inc
dec
js
inc
push
imul
jae
inc
dec
inc
jns
push
inc
je
jno
add
or
adc
xor
cmp
cmp
jno
bound
dec
dec
inc
pop
xor
outsl
push
gs
addr16
dec
ja
imul
xor
xor
add
inc
jae
push
insb
dec
pop
inc
ss
inc
inc
inc
push
dec
xor
push
push
cmp
push
dec
jbe
dec
dec
jae
data16
inc
inc
dec
imul
xor
xor
imul
pop
dec
outsl
jne
jo
outsb
outsb
xor
ss
push
imul
dec
aaa
dec
gs
dec
cmp
dec
dec
imul
inc
imul
je
jo
dec
dec
push
gs
push
push
dec
aaa
fs
arpl
push
addr16
jp
dec
push
ja
dec
aaa
dec
popa
jae
dec
dec
jne
pushw
dec
dec
popa
push
imul
popa
inc
outsb
inc
push
inc
dec
outsb
jae
inc
jno
jns
jns
push
inc
addr16
arpl
inc
push
push
dec
inc
jbe
push
pop
inc
dec
inc
jne
push
dec
dec
push
pop
dec
ss
arpl
imul
aaa
inc
inc
imul
imul
pop
jne
xor
aaa
dec
imul
inc
insl
fs
jb
xor
xor
dec
je
xor
fs
dec
dec
jp
gs
js
jo
inc
dec
add
add
inc
dec
dec
inc
inc
inc
je
inc
dec
dec
add
add
inc
push
je
dec
bound
pop
insb
xor
jo
jae
ss
xor
dec
push
arpl
aaa
xor
pop
xor
dec
addr16
jns
jns
gs
ja
cmp
insb
aaa
xor
dec
cmp
data16
inc
addr16
outsl
jp
dec
je
push
insb
dec
push
inc
ja
inc
addr16
bound
jne
ja
dec
push
xor
push
push
insb
jo
xor
ss
insl
jo
push
push
insb
inc
pop
insb
outsb
xor
cmp
bound
jns
dec
push
pop
pop
ja
jns
fs
push
inc
xor
dec
push
inc
xor
dec
inc
dec
fs
dec
inc
popa
outsl
push
xor
imul
dec
imul
dec
insl
jo
jae
inc
xor
inc
cmp
je
inc
xor
xor
inc
inc
imul
xor
jbe
ss
dec
bound
dec
inc
dec
xor
inc
push
ss
push
popa
xor
bound
addr16
insb
bound
ss
bound
pop
addr16
push
arpl
dec
push
dec
pop
inc
jb
insl
xor
jae
ja
pop
addr16
jne
inc
imul
inc
jae
imul
dec
xor
jbe
dec
jne
js
ss
xor
pop
jo
pop
popa
inc
fs
je
pop
js
push
jno
push
push
outsl
bound
jno
insb
data16
inc
inc
outsb
push
push
cmp
dec
pop
cmp
push
jo
push
push
push
bound
inc
pop
popa
push
jae
xor
cmp
outsb
dec
pop
imul
dec
jo
inc
xor
jno
imul
push
inc
jno
push
add
dec
jae
dec
inc
cmp
pop
push
xor
inc
jns
outsl
cmp
dec
inc
jp
inc
fs
outsl
jae
je
pop
inc
push
je
je
inc
insb
dec
xor
jp
jb
xor
pop
dec
dec
push
aaa
pop
push
push
xor
inc
dec
xor
jae
insl
push
push
jo
imul
aaa
push
jae
ss
jns
push
jo
imul
pop
cmp
push
jo
popa
jb
jno
inc
xor
dec
inc
jb
inc
dec
imul
dec
jns
push
inc
push
jne
insb
je
push
arpl
xor
aaa
arpl
jo
fs
add
inc
xor
xor
xor
inc
push
xor
push
inc
dec
jae
push
inc
fs
pop
outsb
xor
dec
jns
addr16
gs
dec
insb
jno
addr16
xor
dec
push
inc
pop
jne
xor
add
add
jne
xor
outsb
popa
inc
dec
dec
push
push
push
push
xor
arpl
cmp
outsl
inc
push
dec
js
dec
imul
insl
imul
dec
push
xor
insb
inc
push
inc
push
addr16
push
dec
dec
dec
addr16
outsl
push
inc
inc
push
jb
inc
jno
inc
jo
jae
push
ss
cmp
insb
push
jns
jbe
inc
cmp
cmp
aaa
gs
jp
xor
js
xor
push
push
outsl
inc
pop
add
jbe
push
cmp
push
js
addr16
push
ss
jae
jbe
outsb
addr16
dec
imul
push
inc
push
insl
addr16
pop
outsb
addr16
xor
dec
push
arpl
jo
push
jns
xor
dec
dec
push
fs
inc
xor
xor
dec
insb
bound
ss
xor
gs
fs
xor
pop
jae
push
inc
jns
pop
pop
inc
jbe
jns
jb
aaa
push
outsl
je
cmp
aaa
js
xor
inc
aaa
push
cmp
inc
push
dec
push
jae
push
js
inc
xor
imul
dec
inc
push
bound
push
push
js
push
ja
outsb
push
inc
addr16
dec
insl
push
push
inc
push
jne
dec
cmp
xor
inc
cmp
pop
imul
push
push
jb
push
aaa
pop
dec
dec
push
jp
dec
bound
inc
push
xor
jno
jns
jo
jae
dec
popa
xor
inc
dec
outsl
jns
pop
push
aaa
add
inc
insl
jns
dec
jp
push
arpl
xor
insl
dec
push
pop
push
dec
dec
je
xor
aaa
js
xor
dec
js
push
add
inc
fs
gs
inc
xor
js
jp
push
xor
cmp
dec
fs
xor
outsl
jb
xor
push
pop
dec
jp
xor
outsb
ss
bound
jp
jo
xor
xor
aaa
fs
pop
outsl
inc
xor
push
insb
xor
jno
jno
dec
gs
push
bound
inc
dec
imul
xor
add
add
bound
jns
pop
dec
pop
push
xor
push
aaa
dec
push
jbe
je
xor
push
jns
dec
inc
xor
push
xor
dec
push
pop
dec
push
insb
ss
bound
push
dec
jo
js
pop
push
dec
xor
ja
addr16
dec
push
gs
gs
dec
popa
bound
xor
xor
insl
aaa
push
jo
inc
jbe
ss
pop
je
xor
inc
jp
push
aaa
arpl
jb
inc
xor
push
inc
jae
cmp
pop
ss
dec
push
push
outsl
insl
inc
pop
xor
xor
inc
ss
insb
jno
inc
xor
inc
js
pop
dec
dec
push
cmp
pop
imul
push
inc
insl
bound
jo
dec
je
dec
dec
push
imul
dec
push
jo
jbe
outsb
jb
inc
dec
addr16
push
push
xor
inc
dec
xor
arpl
push
add
add
cmp
inc
popa
js
dec
imul
jne
jae
push
addr16
dec
xor
jb
cmp
bound
xor
dec
jp
dec
aaa
ja
addr16
xor
push
push
push
push
push
dec
dec
xor
dec
push
jb
cmp
je
jp
inc
dec
outsl
dec
imul
jbe
jns
push
push
pop
ss
pop
je
fs
push
xor
xor
xor
push
addr16
inc
gs
insl
dec
pop
outsb
push
jns
je
aaa
dec
push
xor
push
push
dec
outsb
dec
xor
dec
fs
jbe
je
push
inc
cmp
add
insl
jns
inc
cmp
jp
js
jb
inc
outsb
imul
push
inc
bound
inc
push
outsl
jno
imul
dec
inc
xor
inc
inc
push
js
push
ss
inc
push
push
inc
jae
xor
dec
dec
arpl
imul
inc
dec
push
js
xor
addr16
push
outsl
bound
cmp
arpl
push
xor
aaa
aaa
jbe
aaa
jae
je
dec
insb
push
xor
add
dec
push
outsl
imul
push
ss
jne
js
xor
push
gs
popa
outsl
ja
push
jno
ja
add
jb
xor
dec
pop
xor
insl
push
inc
inc
arpl
inc
insb
insl
xor
jb
pop
push
ss
inc
imul
insb
inc
xor
inc
outsb
jo
gs
jb
jb
data16
outsb
cmp
jb
jne
xor
je
inc
je
pop
push
jo
imul
push
jp
jb
arpl
jp
push
imul
dec
js
cmp
push
xor
inc
dec
dec
push
xor
dec
push
arpl
cmp
ss
push
je
jp
push
je
push
dec
pop
pop
push
dec
xor
push
jne
jp
js
jb
xor
dec
inc
inc
pop
push
pop
aaa
push
push
inc
xor
push
xor
outsb
dec
jae
push
js
add
add
aaa
cmp
inc
xor
dec
dec
xor
popa
jns
fs
aaa
arpl
push
dec
imul
xor
jp
dec
jns
jno
bound
addr16
push
ss
xor
jae
jns
outsl
imul
insb
inc
insl
pop
arpl
addr16
dec
jo
xor
push
aaa
push
outsb
addr16
pop
jne
outsb
inc
inc
cmp
je
push
push
xor
push
insb
inc
push
jne
pop
jno
pop
cmp
inc
inc
insb
cmp
outsb
jne
cmp
jp
inc
inc
xor
cmp
outsl
xor
xor
push
insl
ja
insl
insl
inc
push
dec
cmp
push
dec
pop
jp
push
dec
push
push
cmp
push
popa
addr16
dec
inc
push
inc
push
inc
jp
xor
jns
push
inc
jae
dec
data16
dec
push
dec
jp
jb
push
add
in
xchg
ficoml
inc
mov
add
jb
bound
outsb
dec
ja
jne
push
xor
push
inc
jo
bound
push
xor
push
xor
cmp
push
inc
dec
inc
outsl
inc
xor
pop
xor
dec
dec
ss
jne
popa
arpl
push
xor
ja
bound
dec
cmp
push
outsl
dec
dec
dec
inc
xor
xor
insl
popa
inc
push
add
push
jno
fs
dec
push
dec
jbe
outsb
inc
pushw
js
inc
xor
jp
dec
fs
push
jne
dec
inc
jno
dec
outsb
jb
push
dec
dec
xor
outsl
inc
inc
inc
ja
inc
push
jb
pop
push
jo
inc
push
dec
inc
dec
pop
push
bound
ja
pop
xor
dec
push
inc
insl
dec
xor
ja
js
inc
inc
aaa
inc
cmp
inc
xor
fs
popa
push
dec
push
jns
jo
jae
inc
inc
ss
inc
bound
inc
dec
xor
inc
push
add
push
jae
xor
aaa
push
jns
xor
push
dec
pop
jno
imul
push
push
push
inc
inc
push
dec
bound
dec
xor
insb
push
aaa
push
insl
xor
ja
xor
dec
imul
xor
push
bound
inc
add
add
arpl
dec
inc
dec
push
inc
imul
add
add
bound
xor
push
outsb
outsl
cmp
push
pop
cmp
dec
inc
jb
dec
aaa
popa
pop
fs
imul
insl
push
dec
jno
imul
inc
pop
inc
dec
insb
data16
je
push
xor
push
jae
inc
popa
outsl
inc
xor
inc
jbe
outsl
jp
dec
jae
push
pop
dec
jp
pop
push
xor
push
pop
push
push
dec
xor
jbe
arpl
push
xor
xor
dec
xor
outsl
inc
xor
inc
dec
push
pop
dec
fs
outsl
insl
push
addr16
insb
jo
inc
dec
xor
xor
imul
xor
push
outsb
dec
inc
inc
dec
ja
dec
inc
dec
jp
aaa
pop
push
js
pop
dec
push
cmp
jo
push
dec
pop
bound
addr16
jns
push
insl
inc
ja
addr16
imul
dec
cmp
jae
js
jns
popa
dec
jno
push
jae
insl
js
xor
arpl
add
jns
pop
cmp
cmp
inc
jns
push
inc
je
jo
ss
jbe
ja
inc
arpl
dec
dec
jb
inc
cmp
inc
xor
outsb
xor
jb
outsl
outsl
push
jae
gs
jb
gs
push
push
dec
dec
gs
outsb
je
push
push
xor
dec
inc
gs
dec
imul
xor
jp
dec
pop
xor
inc
push
outsl
insb
dec
pop
dec
js
push
insb
jp
ss
arpl
pop
push
addr16
jb
pop
push
jae
dec
insb
push
ss
addr16
arpl
cmp
xor
xor
jo
jo
inc
xor
pop
insb
gs
dec
add
dec
fs
push
dec
push
inc
bound
xor
jo
cmp
jb
bound
js
dec
xor
aaa
dec
imul
popa
push
dec
outsb
dec
push
dec
ja
fs
outsl
cmp
outsb
xor
xor
inc
inc
dec
inc
dec
pop
gs
data16
pop
jp
popa
push
inc
jno
aaa
push
aaa
cmp
inc
outsl
pop
js
imul
push
xor
jno
push
inc
outsb
cmp
push
push
xor
outsl
push
arpl
jno
push
dec
aaa
popa
pop
xor
inc
arpl
xor
add
insb
dec
xor
jns
push
cmp
bound
push
inc
bound
js
je
ja
outsl
jno
inc
xor
pop
jo
dec
xor
jae
push
xor
jne
dec
aaa
dec
jae
dec
pop
inc
jo
aaa
inc
dec
add
add
inc
dec
inc
js
outsb
outsb
jns
jne
outsb
jbe
push
pop
push
inc
dec
jne
push
add
add
outsb
xor
inc
outsb
imul
cmp
push
push
dec
dec
push
inc
dec
outsl
jae
xor
arpl
inc
push
push
inc
dec
dec
jae
dec
jno
pop
push
pop
dec
inc
insl
xor
outsb
inc
inc
inc
imul
push
pop
jns
js
push
dec
xor
ja
ss
jbe
outsb
dec
xor
push
xor
data16
imul
cmp
push
push
inc
push
dec
dec
dec
xor
cmp
js
jb
dec
jae
jns
bound
inc
jbe
jb
pop
inc
dec
jae
jb
inc
jp
data16
bound
add
jbe
xor
push
dec
dec
xor
jp
inc
dec
dec
inc
push
insl
xor
xor
insb
push
push
dec
push
dec
addr16
inc
jp
aaa
ja
xor
xor
push
pop
inc
inc
dec
inc
dec
inc
xor
dec
ss
addr16
jne
outsb
xor
outsb
push
insb
data16
xor
jp
xor
pop
jno
inc
inc
dec
pop
xor
jbe
inc
push
addr16
aaa
inc
inc
inc
xor
inc
addr16
xor
push
pop
push
cmp
inc
jno
push
push
xor
dec
push
jb
push
inc
push
jns
cmp
popa
inc
xor
js
pop
inc
push
jbe
aaa
imul
imul
outsl
add
add
dec
pop
push
cmp
ss
xor
ja
cmp
push
push
inc
inc
xor
inc
dec
cmp
aaa
popa
pop
xor
jae
push
xor
push
jno
popa
push
push
bound
push
popa
push
push
aaa
dec
ja
dec
cmp
inc
pop
jns
push
dec
push
push
gs
imul
dec
xor
xor
insb
xor
jae
push
imul
push
add
inc
xor
inc
inc
popa
insl
dec
imul
push
insl
push
push
jb
push
push
xor
xor
xor
push
dec
pop
xor
push
push
push
jp
inc
jo
bound
dec
jne
xor
pop
xor
ss
cmp
push
arpl
imul
insl
jp
xor
dec
outsb
push
inc
xor
dec
push
push
insb
push
outsb
pop
xor
jns
dec
push
inc
gs
dec
insb
push
add
cmp
pop
dec
pop
dec
outsl
dec
jne
arpl
inc
push
dec
dec
inc
je
push
jb
inc
xor
dec
insl
cmp
dec
gs
push
push
addr16
push
ja
insl
dec
outsb
jbe
push
jns
xor
jbe
cmp
jno
inc
aaa
outsb
imul
data16
pop
push
xor
dec
push
xor
push
js
inc
jo
dec
ss
push
pusha
add
xor
push
imul
pop
arpl
xor
dec
je
dec
jns
aaa
arpl
js
dec
cmp
xor
jno
push
xor
fs
outsl
push
jns
inc
ss
jbe
insl
xor
jp
push
dec
push
je
dec
push
jbe
push
xor
jns
jne
push
dec
jns
push
inc
pop
push
dec
push
push
ja
imul
imul
pop
inc
js
fs
ja
push
pop
xor
inc
dec
push
xor
js
push
push
push
inc
jns
push
push
pop
xor
push
addr16
dec
push
xor
ss
ja
jb
aaa
aaa
fs
push
imul
xor
aaa
dec
arpl
add
add
inc
fs
inc
dec
inc
jbe
jbe
jae
jne
dec
pop
outsb
dec
jp
push
xor
insb
outsl
inc
push
imul
push
push
dec
dec
inc
inc
dec
jp
push
dec
ss
push
jp
xor
xor
inc
arpl
dec
jbe
inc
push
jp
inc
xor
cmp
inc
push
jae
insb
insl
insl
inc
jns
jae
jns
dec
js
xor
inc
push
jns
inc
gs
push
push
pop
.byte
xor
add
add
push
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
cmp
add
jo
add
add
add
add
add
nop
add
addb
add
add
add
test
add
add
add
and
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sub
add
sub
add
sub
add
pop
push
add
dec
add
add
sbb
add
add
add
and
popa
add
push
add
add
add
pop
add
add
add
inc
add
and
aaa
add
inc
add
popa
add
add
add
inc
add
cmp
imul
dec
add
dec
add
outsl
add
add
add
add
dec
add
add
popa
add
inc
add
push
add
add
xor
ja
ja
xor
and
dec
add
popa
add
add
inc
add
add
push
dec
add
push
push
pop
add
add
push
add
xor
dec
add
jbe
pop
add
add
add
add
jae
bound
add
add
add
pop
add
cmp
add
pop
add
inc
add
add
inc
add
dec
add
add
dec
add
and
inc
add
jbe
push
add
add
add
jae
bound
jns
xor
and
push
add
ja
push
add
pop
add
js
imul
add
add
add
sbb
add
add
add
and
popa
add
push
add
add
add
pop
add
add
add
inc
add
and
aaa
add
inc
add
popa
add
add
add
inc
add
cmp
imul
dec
add
dec
add
outsl
add
add
add
add
dec
add
add
popa
add
inc
add
push
add
add
xor
ja
ja
xor
and
dec
add
popa
add
add
inc
add
add
push
dec
add
push
push
pop
add
add
push
add
xor
dec
add
jbe
pop
add
add
add
add
jae
bound
add
add
add
pop
add
cmp
add
pop
add
inc
add
add
inc
add
dec
add
add
dec
add
and
inc
add
jbe
push
add
add
add
jae
bound
jns
xor
and
push
add
ja
push
add
pop
add
js
imul
add
add
dec
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
sbb
add
xor
add
add
add
add
add
add
add
lods
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
push
add
jp
pop
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
inc
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
dec
add
pop
add
outsb
add
xor
ja
jbe
dec
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
aaa
add
push
add
add
add
push
add
add
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
xor
add
add
xor
add
add
add
add
add
add
add
aaa
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
