pop
stos
stos
xchg
add
in
xor
inc
xchg
and
push
push
lea
push
pushl
push
push
or
clc
push
push
call
ret
mov
divl
push
push
sbb
arpl
inc
sbb
sahf
add
mov
std
leave
and
lea
push
dec
in
add
mov
sub
clc
in
call
fstp
decl
andl
push
push
in
push
jbe
arpl
pop
cld
lea
push
das
push
call
and
clc
fcos
iret
xor
fiadds
fmuls
sbb
inc
fadd
inc
call
lds
lock
xor
sbb
jns
push
pop
mov
sub
mov
in
pop
call
xor
xchg
idiv
pop
in
popa
es
orl
push
test
xchg
fstp
mov
push
push
lcall
sub
add
std
inc
cmp
jne
push
call
sbb
incl
push
push
fmuls
call
pop
sub
call
out
or
push
pop
sbb
insb
insb
jno
test
xor
in
out
decl
xchg
push
pop
not
inc
adc
add
inc
neg
push
push
neg
push
jmp
inc
add
repnz
neg
sbb
pop
add
sbb
pushl
adc
testl
faddp
sbb
add
adc
leave
ret
inc
in
adc
neg
adc
add
or
pop
clc
sbb
inc
add
inc
lock
loop
add
adc
loope
cmp
push
hlt
subb
dec
inc
push
add
shrl
push
push
call
fimuls
lock
pop
nop
call
sti
xchg
xchg
inc
arpl
push
gs
dec
pop
roll
or
xor
cmp
fnstcw
sbb
xor
shr
pop
or
lods
xchg
test
xchg
inc
hlt
mov
push
add
out
je
cld
dec
mov
mov
fimull
lock
adc
and
loope
int3
add
popf
jae
jo
xor
push
push
test
cwtl
sub
pop
sub
add
add
push
mov
inc
in
icebp
inc
inc
xor
call
jbe
pop
les
call
popa
outsl
aas
push
fcoml
push
lods
cmpsb
dec
xor
cmp
push
mov
dec
xor
push
sbb
xchg
mov
cmp
inc
sbb
stc
loopne
push
jns
add
xchg
pop
cwtl
js
outsl
mov
sbb
xor
je
push
push
mov
js
in
mov
jle
mov
mov
push
push
data16
call
jg
and
jb
gs
call
mov
inc
or
adc
sbb
fiadds
and
fwait
push
add
data16
enter
dec
fcomps
test
jmp
in
mov
xchg
insl
mov
shrb
push
sub
cmpl
scas
imul
cs
mov
jge
sbb
insl
jb
stos
mov
dec
dec
outsb
cs
outsl
pop
in
push
loopne
loope
or
sub
push
xor
jae
push
lock
cmp
mov
or
not
sub
inc
sub
or
jmp
shlb
jnp
lock
or
or
push
jae
and
mov
add
shl
enter
out
and
jb
aaa
lds
aaa
fistpll
pause
pushf
cmpl
push
in
addr16
repz
addr16
pop
cli
push
nop
adc
and
push
mov
inc
dec
jns
hlt
jp
adc
loope
xchg
movsb
push
cmp
inc
not
mov
push
insb
dec
cmp
sbb
testl
pop
mov
inc
gs
or
push
popa
pop
sbb
add
dec
push
frstor
ret
in
in
cld
push
inc
push
push
fistps
call
pop
dec
push
sbbl
cld
push
adc
out
insl
loopne
xor
mov
jno
lahf
ss
pop
movsl
pop
popf
insl
inc
stos
adc
dec
inc
call
insl
jne
outsb
push
jne
icebp
and
mov
mov
std
jnp
jno
dec
fnsave
mov
jge
push
mov
sub
fstl
jp
call
xor
stos
xlat
std
push
dec
inc
iret
in
movsl
xor
js
inc
ret
sub
cwtl
or
out
jne
ja
push
ja
dec
pop
add
sbb
and
xor
outsl
jns
les
jp
imul
xor
popa
jge
call
jp
sbb
mov
jecxz
jmp
stc
cmc
pop
outsl
decl
dec
enter
inc
push
jp
push
outsb
mov
jmp
out
bound
adc
shrb
aam
arpl
ficomps
bound
inc
dec
adc
call
addr16
hlt
out
jmp
insl
in
dec
xor
sub
inc
xor
pop
add
adc
int
jae
and
xchg
stc
push
clc
rcr
push
mov
mov
int3
push
js
pop
push
rolb
or
shll
add
sub
sbb
jno
out
mov
push
jno
push
dec
imul
jb
ret
mov
sbb
jmp
cmpl
shrb
stos
xor
dec
xchg
ds
enter
jno
bound
ret
xlat
inc
popa
js
add
inc
xchg
lret
shl
push
push
outsl
mov
jg
xor
fwait
rolb
pop
call
inc
inc
pusha
or
sbb
xor
adc
loope
push
call
jg
and
lahf
dec
dec
push
data16
fnstenv
xor
aaa
insl
stos
mov
cmp
cli
add
hlt
or
xor
push
sbb
jbe
add
daa
inc
mov
adc
hlt
loopne
ljmp
fiadds
sti
adc
add
mov
and
enter
call
adc
mov
je
dec
jmp
stos
and
int3
or
repz
and
outsb
cmc
sbb
mov
js
mov
push
jmp
push
ss
es
ja
xchg
dec
push
add
call
xchg
cmp
push
jns
aad
jecxz
in
jns
or
shl
pop
xor
push
mov
loopne
add
arpl
inc
sub
mov
fldl
mov
aaa
sbb
mov
arpl
xchg
cmpsl
dec
lods
addl
test
sbb
or
sbb
insb
imul
sbb
push
inc
jmp
mov
mov
pop
je
lahf
inc
cmp
aam
and
dec
outsl
jbe
adc
and
add
dec
sub
push
mov
inc
scas
push
xlat
outsl
dec
in
jbe
xchg
arpl
inc
jbe
mov
or
xchg
jmp
xor
add
int3
push
and
bound
dec
outsl
ljmp
xor
insb
mov
int3
inc
mov
jbe
sub
loope
jo
push
sub
mov
lret
jns
xlat
imul
push
shlb
or
dec
imul
xor
into
call
inc
sub
inc
mov
adc
jmp
mov
push
push
loopne
lock
js
cmp
xchg
sbb
sbb
xchg
push
sub
out
add
ss
mov
ret
xor
sub
into
xchg
push
push
arpl
in
jb
fmuls
imul
cmp
call
xchg
inc
push
insl
imul
pop
jno
cmc
loope
js
scas
dec
add
mov
lock
ret
orps
xlat
jmp
jnp
es
dec
pop
sub
cmp
adc
outsl
out
mov
xchg
fdivl
dec
push
addr16
dec
inc
push
loopne
arpl
pusha
clc
push
xor
call
sub
fadds
mov
xor
cmp
cmp
xor
clc
ljmp
push
sti
iret
js
popa
push
out
mov
fmull
xchg
sbb
push
insl
dec
jae
and
xor
pop
movsl
push
mov
stos
lods
jbe
mov
xor
insb
loope
and
add
inc
jns
gs
aaa
nop
clc
call
adc
rorb
loopne
inc
lock
pushl
jo
add
cmc
jae
sub
mov
sarb
add
mov
push
shll
fdivrl
push
add
test
jl
pop
shrl
xor
push
pop
jne
nop
jle
mov
call
adc
push
enter
or
mulb
ja
jno
std
addr16
bound
xor
ljmp
mov
mov
add
lcall
out
and
push
mov
push
inc
add
loopne
jo
push
pop
jnp
rolb
hlt
inc
push
inc
bound
add
mov
lcall
lods
mov
insl
dec
inc
out
push
jae
inc
outsb
lods
mov
dec
insb
dec
xor
cs
inc
sub
movsl
cmp
xchg
push
push
insl
jne
push
ljmp
inc
sarl
std
loope
inc
jae
outsl
xor
ja
movsl
or
popa
sbb
movsb
aam
inc
pop
sub
clc
into
inc
inc
sbb
fwait
add
push
std
and
neg
pop
sub
push
movsl
stc
inc
sbb
stos
xor
test
mov
rdtsc
pop
sbbb
xor
bound
arpl
arpl
rolb
inc
xchg
adc
test
pop
fcoms
xlat
stos
or
add
lods
xorb
in
outsb
add
ret
mov
mul
pop
push
xchg
xor
dec
out
push
push
hlt
in
test
dec
inc
dec
sub
pop
xor
cmc
inc
outsb
push
lock
cmp
or
jmp
adc
rolb
push
dec
add
lahf
jge
loopne
or
add
inc
pop
sbb
inc
xor
jmp
add
inc
mov
adc
pop
bound
leave
mov
lahf
fcoms
and
lds
inc
push
jno
sar
js
ja
call
sbb
sbb
jne
into
jns
popa
ret
add
xor
cmpsb
test
bound
or
pop
outsl
outsb
call
shr
das
sub
les
ja
pop
push
sbb
and
imull
cmpsl
cs
jbe
gs
push
cmp
push
push
aas
jp
jmp
push
arpl
lahf
mov
pop
jbe
inc
arpl
or
loop
enter
push
xor
insl
mov
mov
insb
dec
push
into
cmp
add
push
mov
cld
pop
sbb
mov
sbb
insl
int3
inc
mov
mov
ret
je
push
mov
jns
cs
push
push
lods
out
in
pop
pop
ss
dec
fistpll
int3
lds
stos
bound
dec
xchg
adc
addr16
lahf
icebp
push
adc
cld
je
push
jecxz
loop
push
repz
fldl
sahf
xor
outsb
pop
std
dec
adc
add
fnstenv
sbb
not
sub
xor
int3
mov
dec
aas
movsb
inc
gs
mov
xchg
bound
jb
sub
mov
xor
inc
adc
sub
and
pop
adc
inc
push
inc
jmp
pushf
sub
in
cmp
add
insl
mov
and
inc
adc
test
adc
movsl
popa
ljmp
mov
pop
push
jb
jecxz
xor
mov
aam
lods
js
fadd
xchg
aaa
dec
and
xor
pop
and
icebp
sub
ret
sbb
mov
inc
js
mov
xor
out
imul
inc
dec
cli
pop
je
jns
add
pop
pop
inc
push
add
push
pop
add
das
daa
sarb
xor
push
inc
insb
push
dec
pop
xchg
mov
sub
loopne
rolb
mov
pop
pushf
pop
jp
push
stos
and
cmp
xchg
adc
pop
out
hlt
pop
sub
xor
testl
imul
pop
outsl
pop
dec
inc
dec
inc
jge
push
dec
xchg
outsl
je
sbb
or
dec
lcall
add
lock
or
cmp
out
pop
sbb
js
lcall
pop
pop
sbb
inc
push
push
mov
sbb
ss
scas
inc
xor
addr16
test
lds
jns
xorb
or
inc
lods
jnp
cwtl
push
mov
or
jae
jbe
sub
divb
dec
dec
sub
icebp
js
aam
add
sbb
jle
dec
movsl
or
lds
imulb
jne
inc
or
cli
lret
cs
mov
push
push
lcall
test
cmp
in
jo
xlat
xor
and
std
fistpll
inc
add
dec
xor
lret
iret
ss
pusha
lds
xor
and
push
xchg
sub
dec
test
pop
hlt
repnz
insb
jno
push
xor
push
pop
jo
inc
push
cmp
mov
stos
aam
jae
jo
enter
mov
int3
and
add
xor
imul
into
dec
gs
cmp
inc
neg
push
jecxz
add
jnp
hlt
je
lds
sbb
mov
dec
js
mov
push
into
cmp
inc
leave
push
adc
clc
inc
arpl
dec
pushf
fisubrs
jmp
push
xor
in
mov
enter
sub
cmp
and
dec
mov
jbe
stc
sub
pop
jmp
push
inc
ljmp
mov
lret
inc
jmp
test
sbb
inc
add
arpl
sbb
js
xorb
lret
dec
out
push
dec
sub
pop
dec
inc
cmpl
mov
clc
call
mov
add
dec
push
add
push
std
notb
pop
rcl
pop
xchg
enter
arpl
lret
inc
fucom
mov
sub
pop
inc
pushl
add
sbb
adc
ret
push
jo
jg
daa
jge
inc
loop
shll
add
call
mov
dec
jno
cs
or
lcall
inc
jne
call
rol
pop
or
bound
pop
mov
aam
push
adc
dec
push
movsl
add
add
cwtl
ss
xor
mov
push
mov
js
sbb
fsub
and
cwtl
add
test
cmp
xor
mov
mov
je
push
out
jno
jae
pmuludq
jp
jb
dec
inc
aaa
adc
in
ret
test
sub
fidivl
scas
outsb
arpl
cmp
pop
cmp
inc
movsl
js
nop
clc
mov
push
dec
jb
push
pop
push
mov
outsb
es
rol
add
test
sbb
adc
inc
mov
cmp
or
dec
or
pop
sub
js
repz
out
mov
jo
jae
shll
jmp
dec
sbb
insl
loopne
arpl
mov
in
gs
pop
ret
push
sbb
push
inc
call
pusha
xor
push
sahf
mov
dec
aaa
addr16
daa
rorb
movsb
int3
mov
call
push
xchg
push
and
stos
jecxz
inc
int
lahf
cltd
mov
aas
xor
jae
inc
dec
dec
sbb
xchg
mov
je
xor
mov
call
inc
inc
adcl
bound
inc
mov
addr16
insl
push
xchg
adc
lds
cmp
xor
call
mov
in
xor
pop
int3
cmp
push
xor
addps
xchg
and
aaa
nop
dec
loopne
or
jbe
pop
pushf
add
js
cmpsl
mov
xor
or
dec
aaa
xchg
rcrl
sbb
sub
xor
pop
lea
push
test
imul
cmpsb
stos
and
push
sbb
cwtl
jl
imul
and
add
mov
aas
icebp
jmp
popa
jle
js
cli
jae
or
cli
cmp
or
push
inc
arpl
fsubrl
mov
inc
xor
xor
push
aaa
jns
fcoms
push
xor
int3
lds
mov
push
jbe
in
sti
adc
push
orl
aad
rcll
sub
frstor
sarl
clts
jmp
dec
sbb
ljmp
icebp
add
aad
divl
subl
movsl
out
loopne
push
inc
inc
pop
jge
jne
outsb
ss
addr16
pop
jmp
mov
rcll
push
xorl
pop
addr16
js
lahf
loop
mov
mov
insl
inc
push
xor
imul
pop
popa
jo
xor
inc
dec
cmp
iret
lock
push
ss
or
popa
dec
je
movsb
sti
jl
inc
pushf
pusha
enter
inc
inc
stos
or
cmp
out
nop
dec
dec
shl
cltd
push
pop
cs
push
jnp
sbb
push
ja
push
pop
cmpsl
sbb
ss
inc
sub
pop
dec
lds
ss
cmc
pop
cmp
push
mov
push
dec
inc
leave
and
jl
inc
shl
movsb
or
push
jae
jmp
cld
repz
nop
push
fadds
push
or
inc
imul
bound
call
push
out
mov
js
jnp
jno
lea
pop
aaa
rcl
or
frstor
dec
xor
push
or
sub
dec
jge
lds
loope
sbb
inc
jmp
sub
xchg
shll
in
push
lret
cmp
add
inc
loopne
les
imul
jb
jmp
popa
pop
xor
repnz
outsl
inc
cwtl
and
xor
dec
add
push
push
adcb
push
jo
push
pushf
cmc
sbb
movl
mov
sub
sbb
pop
jmp
xchg
js
adc
mov
stos
xchg
jbe
ret
mov
push
adc
dec
data16
pop
mov
test
ljmp
cmpsb
mov
pop
or
popa
fists
inc
ret
or
mov
xorl
jg
or
sub
adcb
pop
push
jmp
daa
pusha
mov
dec
shll
fimuls
arpl
cmp
sbb
or
add
loopne
js
or
js
arpl
pop
push
test
pop
call
add
paddusw
in
js
clc
movsb
dec
aaa
mov
into
ja
mov
xor
movsl
fsubs
add
jecxz
push
in
xchg
cmc
push
pushf
or
push
loop
lods
add
pop
sahf
mov
rclb
es
adc
and
pop
pusha
adc
lds
inc
xor
and
insb
push
or
enter
cwtl
lock
add
out
mov
sub
pusha
ljmp
divb
mov
adc
test
fs
dec
enter
push
popf
roll
jns
mov
pop
inc
divl
je
push
push
das
jg
xchg
leave
loopne
mov
pushf
and
inc
andb
pop
cmp
std
mov
scas
jmp
nop
addl
ja
xor
xor
jbe
pop
adcl
stos
js
push
pop
js
xor
sbb
js
pushf
sub
inc
and
push
dec
inc
ljmp
cmp
rcr
inc
test
inc
inc
je
xor
jnp
mov
pop
mov
pop
into
mov
shrb
stc
jecxz
pushf
in
inc
sbb
popa
hlt
test
data16
jmp
mov
mov
inc
sbb
cli
pop
xor
hlt
pop
xor
jmp
mov
mov
jae
push
sti
sbb
jae
pop
inc
mov
cmp
xor
ljmp
mov
bound
aad
mov
addr16
pushf
inc
js
mov
push
xchg
add
fs
or
push
pop
aaa
add
jg
mov
and
xchg
dec
adc
pushl
outsb
jo
movl
inc
mov
lods
icebp
ss
lahf
fdivrl
push
cmp
dec
not
popl
loopne
push
cmp
aad
ret
xor
mov
push
inc
lea
sub
std
testb
nop
push
bound
lahf
call
movsb
mov
xor
sub
ljmp
add
mov
sbb
pusha
mov
fdiv
aas
mov
ljmp
sbb
or
push
stos
ja
bound
in
adc
call
add
mov
xchg
jecxz
outsb
fsubl
push
stos
push
test
data16
jns
cwtl
mov
stos
scas
pop
xor
jo
or
call
daa
mov
xor
or
roll
fidivs
bound
dec
addr16
test
aaa
cmp
jle
inc
addb
jge
inc
jmp
cwtl
jno
clc
jo
addr16
inc
cmp
xor
pop
dec
imul
fstpl
and
call
add
inc
xor
dec
fucompp
lcall
mov
dec
shrb
lock
jecxz,pn
js
add
dec
neg
fdiv
jmp
lods
push
mov
pop
push
jns
rcll
xor
js
push
jno
or
rcrb
pop
sbb
adc
and
loopne
cld
jle
popa
ret
inc
gs
outsb
xor
popl
add
mov
push
ja
sbbb
xor
and
adc
sub
gs
pusha
dec
fisttps
je
inc
lret
adc
test
ds
jmp
inc
inc
add
fldln2
push
ja
and
sbb
inc
imul
filds
jne
movsl
fists
jle
add
icebp
hlt
in
pop
clc
pop
mov
lret
dec
dec
add
inc
sbb
fmuls
jmp
xchg
xchg
dec
lods
add
inc
popl
ret
sub
sub
inc
and
sub
mov
outsl
aam
add
call
jbe
jmp
repz
jle
rorl
xchg
xchg
and
mov
sub
dec
dec
call
xor
lret
pop
addr16
or
pop
jo
adc
add
into
mov
sbbb
mov
add
or
test
cmp
je
cmpsl
lock
movsl
addl
xlat
inc
adc
mov
in
imul
mov
or
lea
js
push
pop
pop
mov
cmp
jae
add
subl
adc
js
cmp
ret
movl
push
mov
in
cmp
jnp
aad
adc
inc
xchg
xchg
movb
adcb
shlb
outsl
jne
imul
mov
cli
push
fisttpl
repz
push
fiadds
fildl
mov
lock
sub
das
jno
mov
cmc
sub
xchg
mov
pop
add
iret
loopne
cmc
clc
push
insl
jns
jb
pop
add
push
cmp
sub
insl
ljmp
pusha
dec
sbb
push
xchg
adc
les
imul
mov
mov
adc
aam
std
dec
dec
clc
mov
sbb
and
aam
fdivrs
into
adc
notl
add
out
cmpsl
cmovnp
mov
or
jns
fimuls
cmp
inc
dec
adcl
sbb
test
shr
out
mov
cmc
pop
popf
pop
sub
pusha
adc
ljmp
xlat
cs
lahf
xlat
inc
jno
jae
jae
push
aaa
add
dec
push
addb
clc
inc
inc
inc
push
dec
loop
das
xor
mov
hlt
dec
push
gs
insb
dec
dec
push
in
test
lea
ljmp
negl
mov
sbb
sub
xchg
pop
enter
add
sbb
mov
mov
fiadds
pop
phsubw
aaa
nop
dec
pop
add
cld
stos
loope
xchg
mov
mov
gs
jp
aam
pop
sbb
popa
push
loopne
adc
inc
ds
das
xor
push
cmp
sub
push
out
cmp
xchg
jno
ret
mov
push
pop
test
mov
cmp
inc
adc
mov
sahf
rolb
sbb
sub
push
xor
push
push
xchg
cltd
popl
ret
dec
fs
fabs
pop
push
pop
sahf
push
scas
dec
push
xor
adc
jecxz
add
hlt
pop
sti
xlat
sub
jmp
jp
icebp
andb
push
insb
push
inc
adc
and
setl
add
jo
call
jl
cltd
jle
push
outsb
adc
ficomps
pop
sbb
jge
pop
ljmp
xor
movsl
adcl
pushf
pushf
sub
outsl
add
push
pop
jl
mov
fildll
out
jecxz
cld
mov
fldcw
repnz
out
jmp
sbb
aaa
mov
add
sub
sbb
adc
mov
mov
dec
mov
bound
sahf
les
stos
push
popa
pop
aaa
inc
aas
xchg
mov
dec
xor
sub
mov
fisttpll
pop
scas
pop
xchg
js
push
aaa
pop
mov
nop
repnz
inc
mov
cmc
xchg
call
fs
dec
sub
jmp
stos
outsb
incl
cli
adc
mov
adc
mov
pushf
movsl
fstl
rclb
push
inc
inc
push
outsb
cld
in
jno
cmp
pop
add
sbb
add
dec
push
inc
roll
mov
pop
jb
std
sbb
push
jge
sti
dec
and
ljmp
jmp
fidivl
push
popa
xor
jne
push
js
je
push
mov
addr16
cld
sub
dec
push
or
dec
cwtl
leave
xchg
and
shr
adc
and
jns
add
insb
pop
aas
push
add
adc
jmp
and
adc
and
and
test
push
imul
and
fldt
add
adc
or
push
and
add
outsl
lods
mov
xor
adc
and
and
lcall
add
jae
inc
imul
jbe
jbe
jb
push
jb
fucomp
sub
inc
push
inc
and
cmp
add
sub
test
mov
invd
cmp
add
inc
mov
test
mov
inc
je
mov
pop
fisttpl
sbb
lods
xor
mov
inc
sub
cmp
lods
imul
xor
inc
add
fdivr
mov
pop
add
ss
arpl
je
insb
push
imul
dec
push
test
mov
or
push
push
outsl
inc
je
popa
dec
insb
je
js
inc
jbe
mov
or
add
and
ljmp
mov
xchg
data16
js
jne
addr16
imul
add
inc
inc
pop
inc
adc
or
outsl
mov
leave
add
je
addr16
insb
insb
outsl
arpl
bound
aaa
inc
add
adc
out
fsubl
inc
je
sub
scas
jne
inc
fs
or
loopne
xor
adc
or
jp
rcrb
dec
xor
mov
insl
int
ds
inc
dec
and
mov
negl
jbe
xor
add
and
sub
test
loopne
xor
mov
pop
or
adc
push
xchg
lods
mov
sub
out
sub
xor
outsb
subl
imul
inc
adcl
test
out
add
jbe
mov
das
fisttps
imul
xor
cs
add
daa
dec
add
xor
fisubrl
xchg
add
mov
inc
and
pop
in
mov
cmp
arpl
jb
popa
imul
push
stos
in
ret
pop
imul
int3
cmp
add
aaa
mov
pop
jae
sbb
dec
sub
adc
fwait
popa
jae
add
inc
mov
sbb
push
imul
xor
clc
decl
push
inc
dec
inc
push
push
inc
inc
inc
inc
inc
xor
ja
inc
add
add
dec
push
add
add
jg
push
or
inc
jae
pop
pop
int3
sbb
and
mov
xor
pop
mov
mov
ja
idivl
inc
mov
mov
pop
mov
push
dec
mov
mov
mov
cmp
add
xor
enter
pop
ja
mov
mov
mov
bound
xchg
rdtsc
popa
mov
out
push
inc
cmpsb
clc
add
mov
sti
lret
mov
cld
mov
mov
out
jb
mov
pop
incl
mov
jae
mov
negb
mov
push
add
cmp
idiv
mov
or
sub
mov
push
out
icebp
int3
mov
call
lahf
lret
cwtl
mov
es
mov
mov
mov
and
adc
dec
iret
pop
aam
dec
inc
add
mov
leave
cmp
fisttps
mov
adc
jge
cmpb
test
add
mov
into
mov
ret
mov
ror
push
cmp
cs
adc
imul
push
inc
add
lods
jle
out
ja
sarb
in
xchg
or
dec
add
fbstp
mov
into
enter
add
mov
or
add
mov
cmp
mov
xor
push
inc
pushl
pop
aaa
les
imul
ret
dec
ret
call
sbb
inc
lahf
sbbb
adc
bound
mov
mov
stos
imul
dec
adc
dec
bound
jg
pop
es
hlt
fsubrl
jecxz
pop
nop
icebp
das
mov
xor
sbb
test
scas
leave
mov
mov
mov
mov
cmp
in
mov
test
ss
mov
cmp
arpl
outsl
sbb
mov
mov
in
cld
daa
dec
sbb
adc
and
mov
ds
fmull
add
imul
push
inc
mov
fdivr
mov
inc
mov
inc
pop
xchg
in
je
adc
stc
lea
lock
cld
aaa
addb
jne
add
iret
sub
jecxz
fidivrs
xor
dec
cmp
jl
lret
cmp
or
idiv
das
enter
shll
lea
lock
jecxz
sub
repz
lods
icebp
into
xor
repz
stos
dec
sub
and
iret
or
scas
insl
jg
test
sub
or
enter
push
mov
mov
lea
fbstp
and
pop
mov
testb
and
decl
sbb
clc
ret
add
fsubs
lcall
pop
dec
ret
mov
mov
mov
xchg
mov
xchg
fs
cmpsl
loop
push
daa
scas
adcb
test
adc
shl
sti
mov
xchg
stos
ljmp
lods
jbe
in
pusha
pop
or
arpl
cwtl
sbb
and
popa
or
pop
lds
inc
ss
add
data16
mov
sarb
inc
push
add
das
mov
cld
sbb
fldenv
sub
bound
mov
push
add
push
insb
jb
cmpsb
mov
pop
arpl
sbbb
int
push
and
in
add
or
mov
jae
xor
int
push
frstor
fstl
mov
or
jno
inc
sbb
sub
pop
mov
test
or
inc
mov
mov
mov
sbb
sbb
outsl
xor
dec
cs
xor
lcall
cmpsb
inc
push
push
mov
mov
sub
ret
add
in
mov
icebp
clc
mov
bound
js
decl
sbb
inc
xor
push
les
sub
xchg
in
pop
outsb
mov
sub
daa
push
xchg
push
out
mov
div
push
roll
inc
out
mov
leave
xor
dec
lcall
in
mov
xor
fsubr
sbb
out
aam
xor
xchg
shll
outsl
aaa
or
je
fldt
push
cmova
jnp
sbb
cmp
scas
ficomps
jg
incl
mov
nop
xlat
clc
sub
mov
sub
andb
es
in
stc
pop
clc
or
addb
cltd
call
mov
mov
dec
test
mov
mov
add
inc
dec
pushf
and
out
mov
es
jge
fists
add
dec
push
push
xchg
xchg
bound
in
pop
inc
push
adc
lret
loope
cwtl
enter
rcrl
repnz
cmp
add
fnstcw
orb
lods
mov
aaa
jb
dec
inc
push
clc
hlt
pusha
jo
jecxz
or
jl
sub
addb
lret
inc
lret
xor
mov
jmp
mov
jecxz
leave
jae
mov
icebp
adc
jle
adc
push
jb
out
mov
pop
mov
cli
xor
jle
insb
cmp
pop
mov
fwait
and
cltd
add
idiv
notb
in
jmp
aam
jl
out
out
je
pop
pop
sbb
shrb
mov
inc
insb
dec
and
shrb
pop
fcom
inc
cmpsl
gs
aam
test
jae
das
adc
aam
xlat
adc
xchg
int
es
mov
add
pusha
and
rcrl
cwtl
cwtl
add
xor
sbb
sbb
jbe
adc
cmp
and
pusha
inc
jle
pop
pop
ficomps
nop
aad
pop
pop
cmp
jmp
inc
lds
xchg
dec
ja
rcl
push
cmpl
or
insb
lea
lock
cmp
sub
dec
in
add
and
orl
xor
mov
mov
test
pop
out
cwtl
inc
add
std
orb
lods
jle
or
mov
or
fcmove
fists
add
or
imul
mov
sub
add
shl
pop
mov
and
mov
popf
jne
test
add
les
fcomip
pop
xlat
mov
and
adc
es
dec
xor
sub
cmp
dec
mov
in
xchg
clc
imul
mov
mov
in
les
repz
sbb
push
imul
lods
movsl
jne
fnstsw
add
xor
push
mov
clc
inc
jmp
test
xchg
movsl
xchg
adc
cli
in
leave
test
idiv
pop
pop
or
stos
rcll
cmpsb
push
sub
cmc
inc
jmp
mov
xor
cmpsl
cld
gs
cs
or
das
xabort
mov
sti
mov
mov
and
lock
and
das
adc
loop,pt
pop
leave
and
xchg
mov
jno
push
add
cmp
adc
jnp
out
inc
incl
inc
cltd
add
pusha
or
jnp
stos
jne
sub
jg
jg
mov
enter
sub
push
inc
jecxz
xchg
pop
jmp
pop
clc
cmc
sub
jle
addb
lds
rcl
fbstp
fisubs
test
add
clc
in
or
xor
xor
sub
in
pop
sub
stc
in
push
out
add
push
cmp
repz
arpl
inc
dec
dec
mov
ret
test
or
loope
jl
jle
xor
cmp
add
jmp
adc
idivl
js
cmp
pop
imul
mov
mov
int
and
mov
lods
mov
adc
adc
stc
nop
hlt
sti
mov
loope
ljmp
js
repnz
pop
rcl
std
pop
insl
mov
subl
notb
shlb
out
dec
push
cmp
mov
incl
mov
mov
sbb
sbb
fdivrp
adc
mov
jl
flds
cmp
loop
push
push
add
mov
mov
pop
cmpl
fsubrl
mov
scas
cmp
sub
adc
and
std
pop
mov
shrl
and
mull
inc
sbb
mov
hlt
mov
push
pusha
inc
jbe
aad
jno
add
mov
mov
push
dec
sahf
loopne
adc
xchg
js
stc
or
jb
loopne
movsb
xchg
cmp
ret
jmp
push
jl
addl
insb
pop
adc
movsl
mov
adc
mov
dec
xchg
fdivrs
mov
jg
push
inc
fwait
sbb
push
test
sub
xor
or
cli
adc
jae
or
insl
add
pop
add
lcall
or
and
mov
sbb
sarb
inc
push
sub
ret
and
rclb
inc
decl
mov
lock
jle
mov
pusha
stos
lock
shrl
test
xchg
sbb
push
aaa
popa
cmp
fnstenv
les
mov
lds
lods
in
push
cvtdq2ps
pusha
jmp
or
cmp
mov
incb
xor
add
push
sub
inc
stos
inc
arpl
fnsave
aad
inc
ret
data16
mov
bound
inc
sub
pushl
ret
rolb
push
ret
inc
ret
enter
cmc
decl
or
movsb
roll
adc
mov
ljmp
jo
dec
lcall
inc
loope
std
push
in
fldl
std
mov
jbe
push
jo
movsl
mov
cmpsb
mov
mov
loope
jmp
mov
stos
xchg
cmc
push
sbb
ljmp
nop
and
cld
das
mov
xor
add
clc
ds
cmp
into
sar
inc
popf
cwtl
and
pop
inc
mov
incb
adc
fists
fcompl
loope
sub
inc
and
mov
pop
sub
mull
xchg
jae
push
dec
das
fnstsw
loop
push
in
jno
jne
cmp
lea
cmp
stc
stos
lock
inc
and
jp
clc
incl
ljmp
into
xchg
add
loope
decb
xchg
inc
jl
insb
loop
mov
dec
subl
js
movsb
ss
sub
xor
or
je
add
loop
sbb
cmc
dec
out
repz
mov
sbb
lcall
pop
push
pop
mov
movsb
sbb
jecxz
adc
adc
rcl
cmpsl
ret
xchg
repz
test
les
nop
xchg
xchg
das
outsl
push
pop
pushf
ja
rcrl
add
sbb
outsl
mov
jae
mov
ljmp
xchg
fsubl
jg
add
adc
jo
cmp
in
stos
imul
jg
sbb
mov
push
dec
xchg
pop
sbb
dec
sub
cld
rolb
insb
xchg
xor
inc
test
stos
cmpsb
or
shll
lods
stc
mov
add
test
mov
pop
add
out
inc
mov
cld
aam
adc
cmpsl
fcomip
mov
in
add
cmpsb
test
ss
std
or
outsb
loop
cwtl
pop
sti
add
mov
jecxz
pop
pop
cmp
lea
mov
dec
jecxz
ficomps
pop
cmp
out
add
inc
sbb
mov
clc
out
pop
in
push
in
mov
adc
ss
adc
mov
push
push
push
or
out
and
jg
push
outsb
adc
adc
push
mov
jl
out
and
fldt
outsb
cmp
cltd
mov
outsl
pushl
and
lods
pop
push
adc
xorb
orl
das
in
movsb
xchg
jne
cmpsl
adc
lea
movsl
ljmp
mov
mov
insl
jge
adc
cmp
sarl
in
cli
ljmp
jbe
inc
xlat
or
sbb
cltd
pop
pop
push
ret
fwait
lahf
jg
fcomps
jb
add
jl
in
adc
addr16
orl
jmp
sub
mov
or
pop
icebp
lahf
sbb
hlt
out
rcrb
lret
sbbb
sbb
sbb
icebp
mov
sbb
decl
fbld
aad
sub
outsl
orb
in
inc
les
pop
js
call
les
sbb
std
lds
cmpsl
in
jg
call
adc
inc
test
lds
cmp
insb
addb
mov
pusha
pop
add
dec
adc
pop
call
jns
dec
roll
push
sub
lods
je
or
dec
or
rcll
adc
dec
jge
mov
jge
pop
dec
mov
adc
lods
xor
and
sti
fistps
loope
loopne
mov
pop
shlb
outsl
insb
inc
adc
das
lock
cmpsl
pop
xor
popf
cmp
xlat
lahf
fidivrs
lds
mov
call
jnp
insb
fcomip
xchg
stos
xchg
pop
sub
mov
xor
clc
or
or
mov
or
push
mov
test
clc
sbb
mov
push
fsub
push
call
rorb
pop
test
int3
pushaw
cld
cs
aaa
pop
subl
sub
cmp
addr16
mov
faddl
pop
add
outsb
and
pushl
mov
data16
call
out
add
popa
or
aas
sub
ret
push
or
imul
inc
pusha
xchg
jo
je
adc
push
fstpl
adc
adc
jne
pop
outsb
add
xor
sbb
sbb
push
xor
lret
cmc
push
scas
xor
sahf
jne
sub
fistpll
into
lea
lods
add
jo
lret
dec
stos
xchg
inc
and
mov
cmpsb
pop
add
jo
xchg
outsb
dec
pop
stos
sub
fdivrl
addl
add
push
mov
popa
adc
push
je
jo
loopne
bound
shlb
pushf
es
pushl
adc
jns
xchg
dec
inc
xchg
inc
imull
sub
out
push
cmp
lock
cld
mov
jo
insl
outsb
pop
mov
fisubs
cli
mov
fsts
sub
and
xrelease
xchg
lods
jo
stos
inc
xchg
pop
loopne
adc
xor
mov
aas
xor
push
dec
xor
cld
cld
call
decl
jne
pop
sbb
les
inc
gs
aam
mov
push
jae
adc
or
push
orb
mov
xchg
ja
es
adc
add
leave
aas
sahf
lods
mov
imul
lret
cmpsb
adc
scas
sbb
adc
mov
lahf
cli
cmpl
lds
dec
cld
pushl
and
cld
bound
mov
or
cli
add
cli
xchg
inc
loop
cmp
lret
add
add
xor
aaa
mov
sar
loopne
cmp
mov
lods
push
cli
push
decl
and
les
jmp
mov
je
push
dec
mov
lock
lcall
ljmp
xchg
and
cmp
push
fs
jb
dec
pop
and
mov
orb
shll
sbb
ljmp
pop
divl
aam
mov
rcrb
aad
rclb
push
xchg
xor
lds
fildll
xchg
mov
dec
xchg
lods
push
and
or
outsl
sub
mov
movsb
test
pop
jne
stc
add
cs
mov
pushf
test
xchg
ret
jbe
mov
adc
jecxz
cs
jbe
inc
cmp
xchg
outsl
cld
fldl
call
mov
push
jmp
xchg
mov
lock
stc
sbb
inc
iret
mov
or
xchg
push
mov
jecxz
fsts
movsb
sbb
inc
mov
add
loope
in
cmc
in
pop
or
lcall
lock
imul
rcrl
fsubl
xchg
jg
cld
jge
lds
inc
out
push
mov
lods
sbbl
pop
call
sbb
adc
in
es
or
cld
repnz
ja
add
push
mov
mov
pop
mov
loope
pop
add
dec
push
sub
jne
fbstp
or
movups
pop
std
neg
add
mov
adc
je
bound
cmp
inc
inc
pop
mov
mov
clc
add
fbstp
jae
dec
or
movsb
ret
int3
sbb
in
pushl
jle
js
scas
fwait
lods
inc
adc
and
icebp
adc
xor
push
call
xchg
inc
shll
sbb
adc
cli
add
xor
push
push
add
add
fnstsw
out
pop
and
xchg
shl
nop
push
and
mov
ret
fdivl
xchg
sbb
fnstenv
jo
push
add
inc
cmpsl
cmpsb
cld
mov
test
out
xlat
dec
push
je
adc
test
shll
mov
adc
out
pcmpeqw
xchg
iret
fs
cmp
cmp
outsb
or
xchg
je
outsl
adc
ficoml
mov
jbe
xor
mov
and
ljmp
push
fisttpll
mov
cs
ficomps
mov
fnsave
scas
pusha
pop
jo
xchg
pop
add
out
cli
scas
cs
inc
cmp
adc
add
adc
jmp
fstps
jmp
inc
fwait
mov
and
sarl
sbb
cwtl
hlt
inc
ss
inc
movsb
pop
incl
mov
mov
ja
cmp
mov
std
cmc
fstps
loope
fwait
bswap
pop
stos
loope
mov
cmp
and
inc
jns
pop
mov
inc
dec
and
xor
and
das
jge
pop
cmp
xor
cmpsl
mov
mov
aas
rorb
testl
fistps
and
adc
fwait
adc
nop
jmp
mov
sub
ss
mov
dec
cltd
cmp
and
push
pop
out
cmp
push
in
aad
lret
dec
scas
pushl
xchg
lods
lock
or
sub
or
call
imul
xor
icebp
pop
aam
add
jns
and
adc
sbb
add
mov
jge
popl
mov
pop
add
mov
add
and
in
cld
pop
arpl
cmp
aas
leave
loopne
push
or
cld
mov
and
nop
mov
iret
cmp
addr16
pop
fisttpll
xchg
clc
or
imul
push
add
pop
cli
jmp
jle
xchg
and
and
nop
int3
mov
and
mov
lock
rcrb
orl
scas
outsb
scas
mov
or
test
and
adc
insl
jmp
ljmp
lahf
add
xor
fcmovb
cmp
enter
fidivrl
lock
pop
jl
pop
xchg
lds
icebp
es
lret
dec
loopne
mov
or
inc
inc
or
je
lea
mov
sbb
cmp
lahf
xchg
xchg
out
loopne
xor
rorl
lret
sti
and
das
shr
adc
shlb
inc
push
gs
inc
push
adc
and
pusha
arpl
jmp
shlb
adc
pop
push
push
jae
sub
add
mov
push
outsl
pop
cmc
adc
rcr
test
xchg
lret
mov
xchg
inc
cmp
addr16
das
lock
insl
int3
push
addb
xor
dec
or
cmpsb
in
fildl
faddl
aam
jle
es
das
fstl
lahf
dec
loopne
add
loope
test
inc
mov
es
imul
lods
add
jns
out
mov
aad
add
jg
adc
std
test
jb
xchg
es
dec
in
arpl
ds
call
adc
add
push
fbld
lret
or
es
sub
sbb
loope
adc
sbb
and
daa
cwtl
rorl
das
push
cmpsb
adc
pop
das
insb
lock
lds
add
push
pop
test
ret
lahf
push
pop
fcomps
jl
out
pop
testb
pusha
sete
hlt
inc
pop
or
shll
mov
or
xchg
imul
fcoml
sub
pop
inc
pop
xchg
into
sti
pop
js
test
rolb
mov
adc
aaa
decb
incl
cltd
mov
pusha
clc
in
sbb
mov
test
cwtl
bound
jmp
lahf
adc
cmp
xchg
cld
push
call
adc
data16
test
push
pop
jno
rcr
pop
mov
sbb
inc
mov
int
imul
call
pop
and
sbb
mov
add
decl
xchg
movsl
aad
xchg
xor
jg
ljmp
jne
push
xor
xchg
ss
push
int
pop
cmc
es
xor
lods
cmp
add
jg
inc
push
ficompl
and
mov
push
fnsave
shll
push
pop
mov
add
test
sbb
and
bound
fidivrs
cld
push
aaa
push
xor
addl
jns
inc
lods
inc
loop
test
fistpl
pop
xlat
out
mov
mov
adc
mov
hlt
or
xor
dec
xlat
out
pop
jg
pop
loop
sbb
add
sbb
push
addb
sbb
idiv
or
in
jbe
and
outsb
cld
in
xchg
sbbl
leave
xchg
movsl
mov
cmpsb
incl
iret
sysenter
ljmp
in
in
pop
ret
decb
outsl
cld
pop
enter
test
mov
sub
sub
ss
dec
aam
fsubs
test
dec
ds
pop
and
sub
or
inc
mov
add
dec
sbb
fstl
lret
mov
rorb
jmp
adc
pop
scas
ss
jg
sbb
pop
cmc
stos
je
aad
fiaddl
push
adcl
in
adc
xchg
imul
cli
ja
mov
and
call
pop
jl
call
icebp
movsl
and
add
push
gs
ret
xor
and
push
dec
lret
fidivl
jl
sti
scas
scas
sub
jbe
aad
push
incl
mov
mov
loopne
leave
outsl
mov
xor
pop
sti
mov
fisttpl
add
mov
roll
in
dec
push
ds
lods
inc
sub
pop
scas
es
jmp
push
fisubrl
mov
daa
and
test
es
smsw
cmpsl
sbb
out
sbbb
outsl
add
aas
icebp
popa
mov
incl
jg
and
push
adc
cmp
sbb
lods
into
and
mov
test
xlat
lea
cmp
js
idivb
xor
sub
pop
sub
add
mov
fcomip
pop
fs
jb
push
inc
mov
and
cmp
fucomi
stc
or
mov
dec
test
push
les
ljmp
jge
sbb
add
dec
mov
add
cli
mov
pop
clc
or
dec
mov
mov
xchg
adc
sub
xchg
dec
in
mov
jl
jle
inc
data16
icebp
lods
jge
leave
push
cmp
adcb
add
pop
cmc
imulb
std
ljmp
mov
popa
and
jno
je
insl
adcl
stos
ficoms
repz
adc
add
scas
repnz
mov
jo
loopne
and
and
ljmp
mov
cld
sbb
jge
adc
push
cli
icebp
andl
fisubs
xchg
insl
insb
es
rolb
shl
js
or
adc
xchg
and
sbb
pop
mov
out
mov
sti
lcall
decb
pop
inc
repz
mov
outsl
and
pop
pusha
data16
jnp
mov
push
mov
das
mov
add
xchg
mov
xor
mov
push
daa
adc
mov
sub
sbb
push
add
mov
fistpl
insl
scas
sbb
push
xor
movsl
adc
outsl
dec
and
add
bound
je
mov
mov
pop
mov
push
daa
jmp
xor
mov
add
xchg
ret
cmp
mov
or
push
or
sbb
les
inc
sbb
fisubl
fs
test
shll
lcall
push
sarl
mov
fsts
pop
sbb
or
mov
adc
xor
push
insb
push
or
fcomps
hlt
adc
jne
clc
inc
jge
cmp
ss
fsubrs
mov
dec
pop
sub
std
in
pop
ljmp
movsb
add
inc
and
and
pop
mov
stos
aam
push
pop
inc
mov
cld
pushl
xchg
xchg
bound
dec
adc
jne
adc
adcb
adc
insl
mov
sub
pop
loopne
sub
jno
pop
fidivrl
sub
and
nop
cmp
nop
shl
mov
pop
add
cld
jne
sub
neg
pop
pushf
loope
push
lahf
mov
mov
leave
por
les
int
mov
loope
add
dec
nop
stos
lret
data16
inc
cs
insb
jg
jae
jnp
stos
fists
aad
test
inc
or
add
xor
dec
and
jo
lret
add
add
daa
sub
mov
leave
push
push
inc
inc
mov
outsl
push
stos
inc
int3
push
sub
stc
mov
stos
test
idivb
mov
mov
mov
aaa
cmc
insb
in
pop
push
aam
aad
inc
fcmovnbe
cmc
pop
sub
xorb
adc
pop
dec
in
jbe
and
push
xor
rcrb
sbb
xor
enter
repnz
das
ljmp
xchg
flds
incl
sub
loopne
stos
in
ljmp
sub
and
call
xor
cmpsb
fdivr
std
push
inc
call
adc
xlat
divl
jne
jp
push
mov
fadd
nop
test
cwtl
and
xchg
mov
jg
jno
mov
push
push
inc
or
mov
dec
mov
dec
xchg
mov
lret
jecxz
xor
rol
adc
rol
sub
fistl
xor
or
dec
shlb
subb
ja
inc
jg
pop
mov
push
mov
adc
adc
cs
sbb
mov
mov
inc
and
mov
lea
in
jg
jecxz
sbb
mov
adc
inc
lret
jg
dec
cmp
jnp
sub
pop
ds
popa
popa
mov
in
pop
dec
mov
inc
das
cld
dec
mov
jbe
pop
mov
daa
xchg
jmp
popa
add
jne
cmp
or
sub
and
pop
mov
imul
add
push
or
call
jns
fwait
repnz
icebp
lea
adc
push
and
adc
out
adc
add
add
cmpsb
fidivs
jno
xchg
xor
push
in
xor
xchg
mov
jmp
jb
xchg
lahf
cltd
enter
imul
xchg
popf
push
lahf
jp
pop
mov
mov
xor
sub
jae
test
adc
mov
fnstcw
jbe
ret
sub
nop
aam
xor
xchg
aaa
xchg
lods
data16
jnp
mov
mov
mov
ljmp
xor
insb
cwtl
mov
dec
add
ss
jb
roll
cmpsl
pushf
test
loope
pop
repnz
test
inc
push
xor
mov
add
push
std
adc
cmp
cmpsl
ds
push
arpl
in
fldt
cmc
sub
xchg
jecxz
in
imul
jl
add
mov
sti
test
mov
lret
add
call
mov
add
jb
xchg
dec
cwtl
mov
or
mov
lahf
jecxz
mov
ficomps
jge
outsl
or
in
loop
hlt
or
mov
inc
and
std
mov
sahf
std
sbb
aad
out
pushf
rol
xchg
jbe
inc
outsl
adc
clts
xor
xor
cmpsl
jp
insl
pusha
jl
fistps
push
adc
mov
and
rolb
jl
mov
and
shll
ret
inc
ja
pop
inc
add
mov
clc
mov
outsl
fnstenv
fsubrl
mov
jmp
or
mov
push
inc
mov
popa
pop
cld
pop
dec
dec
sbbl
enter
mov
pusha
push
loopne
shll
dec
in
outsl
add
in
xor
fldl
addr16
loope
outsb
fnstsw
push
enter
pop
lret
and
push
mov
in
ss
jnp
popf
pop
fiadds
fwait
xchg
jge
lret
ret
add
arpl
ljmp
push
sub
icebp
and
mov
add
test
arpl
xchg
rep
sub
enter
inc
icebp
dec
loopne
shll
sub
sbbb
sub
outsl
aas
mov
jmp
and
mov
or
daa
jmp
ss
and
xor
gs
and
jb
mov
rcl
xchg
add
push
hlt
out
jo
ret
push
sbb
xchg
inc
pop
mov
pop
in
mov
cmp
shl
fistps
mov
movsl
or
jg
cmpsb
je
sbb
dec
aas
xorb
cltd
inc
aaa
xlat
cltd
jne,pt
mov
das
cmpsl
add
pop
mov
shr
in
mov
enter
jecxz
stos
jecxz
test
outsb
cmp
xchg
adc
dec
bound
icebp
out
movsl
sub
stos
add
adc
xlat
pop
jmp
pop
mov
mov
mov
pop
jl
inc
stos
scas
sub
xchg
xor
adc
and
inc
sbbb
and
fildl
fucomip
adc
sub
fiadds
adc
cli
mov
mov
mov
call
cli
scas
lock
and
inc
in
dec
aas
aas
push
fsubrl
mov
mov
loopne
ret
jmp
jbe
loope
jno
sbb
lret
outsb
sub
push
loope
test
or
movsl
lea
pusha
add
mov
clc
ret
xchg
das
repz
popf
sar
daa
cmpsb
pop
std
mov
inc
inc
mov
icebp
mov
loop
ret
add
into
sbb
pushf
ret
loop
test
inc
out
sti
push
faddl
sbb
fiaddl
mov
test
addr16
incl
mov
jecxz
sbb
add
push
cmp
int3
or
mov
lods
lods
jle
and
jns
jb
in
sarb
adc
adc
insb
leave
sbbl
or
mov
inc
push
aam
lret
sti
in
pop
loopne
inc
pop
addr16
or
push
mov
mov
add
js
mov
pop
lret
sub
push
dec
dec
mov
or
or
xor
je
fstps
std
push
push
push
lea
adcb
add
mov
cmp
xchg
sbb
mov
nop
adc
sub
iret
mov
pop
fidivrl
add
leave
mov
movsb
inc
mov
inc
pop
lds
mov
push
xchg
in
pop
lea
mov
inc
inc
pop
dec
pop
dec
mov
orl
rorb
iret
dec
call
cmp
hlt
fdivrl
jp
cmp
mov
shl
lods
mov
leave
and
pusha
or
scas
push
orl
push
jl
lret
enter
imul
mov
xchg
xchg
xchg
ret
movsl
mov
lret
add
pop
repz
cli
in
decl
xchg
or
add
sbb
adcl
popa
xor
mov
bound
clc
adc
sbb
mov
xor
mov
popa
mov
test
sarl
sbb
aad
jmp
xchg
push
inc
dec
jne
mov
jg
mov
dec
dec
or
sub
jbe
mov
jnp
sbbb
call
jl
movsl
sbb
fmuls
dec
repz
sbb
pop
out
cwtl
scas
cwtl
int3
std
outsl
mov
inc
add
dec
insl
cmp
push
xchg
jge
mov
push
cld
fsubr
dec
loope
lods
ret
scas
and
repnz
outsl
or
add
insl
test
pop
or
mov
mov
push
in
and
pop
daa
loopne
fcmovnb
mov
adc
movsb
adc
nop
enter
mov
sti
insb
imul
mov
push
dec
pop
jp
jmp
outsl
call
mov
sbb
jnp
jge
imul
stos
pop
outsb
mov
test
sbb
clc
jg
mov
jle
pop
cwtl
cmpsl
mov
ror
sub
jnp
aas
pop
mov
mov
aam
jae
jno
mov
sbb
clc
push
sub
sbb
ret
push
mov
xchg
sub
and
dec
lahf
jmp
into
push
jge
mov
dec
and
subl
sub
and
adc
rcr
mov
incl
cmovl
pop
and
cmp
jne
outsl
sbb
inc
mov
iret
push
push
mov
rcl
stc
dec
dec
mov
int
mov
lock
dec
clc
js
test
push
mov
in
cltd
add
cmp
dec
xlat
fwait
dec
sbb
cltd
sub
test
js
cmpsl
clc
bound
fs
or
fstpt
inc
pop
jp
lods
adc
add
jg
fiadds
dec
jns
sub
sbb
sub
jge
in
call
xor
or
dec
fildll
or
ret
testl
sti
outsb
adc
inc
test
push
inc
pop
and
cmpsb
nop
pop
pusha
mov
fsubrl
imul
xchg
outsb
out
mov
outsb
sar
es
jbe
jmp
jmp
sub
adc
rclb
sbb
jmp
pop
pop
cmpsb
sbb
cmpsl
or
rcrl
pop
insl
loope
in
in
or
pop
inc
movsl
add
push
adc
mov
int3
test
jne
jo
imul
mov
inc
mov
add
subl
dec
pushl
sub
mov
cmp
fisttpll
push
daa
out
jns
and
sbb
hlt
clc
aam
xor
add
das
std
push
cmp
notl
loope
nop
sub
sbb
sbb
jp
or
mov
jns
inc
mov
mov
bound
mov
pushf
jno
and
lock
dec
push
push
pushf
dec
mov
hlt
mov
aam
popa
lods
mov
incb
cmp
sub
pop
cmp
add
dec
or
dec
lahf
daa
sbb
in
pop
jb
leave
scas
mov
jbe
mov
test
repz
sub
rol
in
sbb
pusha
cli
pop
and
nop
into
dec
add
cmp
fidivrs
add
mov
xor
push
jecxz
push
movsb
add
inc
sub
mov
dec
cmpsl
xchg
push
sbb
dec
imul
leave
dec
sbb
test
and
mov
xchg
xchg
xchg
mov
jle
das
mov
shl
jne
es
scas
andb
adcl
add
fcomip
hlt
mov
and
jg
mov
insb
mov
add
xchg
mov
xchg
adc
fcom
jbe
aaa
lea
movsl
dec
lcall
imul
inc
cwtl
xchg
pop
dec
and
inc
pop
movsl
pop
clc
jne
cmovns
pop
cmp
xor
mov
outsb
shll
out
jns,pt
dec
js
in
sub
inc
loopne
mov
aad
dec
fisubrs
cli
rclb
push
mov
xor
xchg
mov
mov
out
inc
stc
nop
mov
icebp
or
out
jl
in
stos
inc
xchg
out
and
pop
lret
adc
rorl
fld
stos
out
sub
scas
pop
inc
cmp
sbb
ljmp
adc
lret
ret
xchg
and
sarl
repnz
push
push
inc
mov
or
pop
out
cmp
inc
mov
dec
jns
bound
pusha
cs
fldt
imul
push
loop
dec
shr
lret
insl
jns
adc
outsb
cld
mov
testl
pop
push
cld
lcall
adc
xor
pusha
rcrb
test
loope
nop
mov
sti
lods
mov
jp
cld
xor
cmp
mov
mov
nopl
cmc
mov
jle
mov
pop
and
sub
mov
mov
je
jecxz
lods
out
push
mov
dec
mov
sub
xor
jl
cmp
cmp
movsl
dec
pop
xlat
inc
leave
xchg
sub
inc
std
adc
or
pusha
add
adc
addr16
repz
jo
test
xchg
push
xor
mov
dec
mov
inc
cmp
movsl
mov
push
dec
pop
addr16
aas
pop
xor
xlat
pushf
mov
push
push
jmp
pop
inc
sbb
or
lcall
clc
pop
xchg
sbb
sbb
push
out
pop
stc
in
adc
sbb
popa
cmp
push
sbb
lods
ss
push
mov
xor
std
sub
cmpsl
outsl
mov
addl
sbb
and
addr16
mov
outsl
mov
adc
jmp
mov
pop
sbb
test
insl
test
pop
or
stc
inc
stos
jp
dec
cmp
mov
test
and
fiaddl
outsl
or
cld
mov
push
cmpsb
lret
bound
je
jo
clc
mov
std
mov
mov
loope
push
mov
push
adc
fidivrl
push
sub
xchg
mov
insl
addb
jle
shl
fisttps
pop
xchg
dec
push
mov
sub
or
fisttpl
or
repnz
dec
psubsb
pushf
test
fsub
or
orb
call
pop
xor
test
pop
fstpl
out
scas
push
pop
sbb
rcr
repnz
cmp
hlt
adc
loopne
dec
and
sbb
adc
push
testb
fwait
into
mov
aaa
ficoms
ljmp
xchg
cli
or
mov
xor
orl
dec
mov
in
add
ret
daa
in
or
ffreep
mov
jl
sbb
lock
mov
pusha
imul
mov
call
sti
pop
aaa
or
push
push
jne
mov
mov
stc
inc
insl
adc
pop
mov
dec
adc
sub
mov
sbb
pop
cltd
xor
push
sbb
jno
xchg
push
ds
jg
ret
jb
push
sbb
loop
inc
fildll
pop
ljmp
push
loope
inc
ljmp
sbb
sbb
aas
in
testb
dec
lret
mov
into
cmc
jp
in
jle
test
cmp
std
inc
jns
inc
add
mov
sbb
stos
push
icebp
sub
mov
and
imul
outsb
pop
outsl
mov
fsubr
jg
cmp
fistps
or
movsl
sub
das
jp
or
sbb
or
test
inc
inc
cli
iret
lock
call
xchg
popa
enter
xchg
ficoms
xchg
imul
adc
jmp
cmpsb
dec
mov
mov
push
pop
out
loope
add
aad
lret
in
dec
add
and
jbe
xchg
out
and
jo
jecxz
mov
fstl
fcoml
mov
icebp
mov
ljmp
inc
sub
outsb
arpl
pop
push
sbb
xlat
pop
insb
sbb
rclb
ret
cmpsl
or
lods
subl
pop
add
pop
add
mov
jge
push
popf
inc
jo
cmpb
mov
cmp
mov
mov
mov
testb
mov
ds
hlt
pop
dec
out
inc
jns
sbb
sbb
jg
call
pop
inc
jo
rcr
xor
push
scas
movsl
adc
daa
mov
jg
scas
loopne
in
or
cwtl
dec
xor
xchg
push
addl
lock
int
cmpsb
adc
shll
add
scas
pop
in
xchg
nop
imul
or
popa
jb
sarl
outsb
jecxz
fisubrl
mov
lods
lds
jb
adc
push
pop
fisttpl
pop
daa
sbb
dec
jo
pop
fstpl
adc
mov
dec
ret
fnstsw
sbb
xlat
jb
push
popa
movsb
xchg
mov
or
call
hlt
push
std
movsl
gs
inc
outsb
jns
adc
aaa
fisttpll
sub
enter
iret
pop
push
jo
shrb
inc
inc
inc
adc
jg
mov
fs
lcall
mov
adc
and
movsb
or
add
add
dec
adc
mov
or
mov
sub
lahf
lret
xchg
sarb
mov
lcall
out
movl
das
push
inc
icebp
lcall
mov
bound
shl
lock
xchg
mov
pop
adc
movsl
push
jmp
aas
and
and
lahf
xchg
sbb
fdivrs
jnp
jl
leave
popa
in
jl
mov
xchg
rol
or
je
mov
sarl
inc
bound
wbinvd
sbb
push
pop
call
js
lea
sub
lcall
inc
ds
sub
cmpsl
push
cmpsl
jo
in
pop
inc
loop
inc
sti
xor
test
fwait
dec
jp
mov
add
sub
sahf
aad
loop
mov
cmpxchg
or
into
mov
mov
cmp
out
sub
pop
jecxz
js
loop
mov
or
xor
mov
mov
mov
xchg
loop
outsl
inc
lahf
pop
loopne
mov
push
jp
jo
pushfw
pushf
and
imul
aaa
mov
jl
insb
adc
add
outsb
les
adc
mov
jbe
jb
rcr
and
icebp
cmp
push
ja
fxch
push
int3
je
xchg
lock
sti
mov
xor
out
or
push
or
jne
adc
cmp
adc
cmp
pusha
jmp
add
xor
orb
pop
mov
lock
aas
imull
and
les
stos
test
das
and
ljmp
dec
lock
insl
push
insl
sub
js
cs
xchg
xchg
adc
jo
mov
ljmp
mov
out
sbb
jnp
jnp
and
pop
testb
pop
inc
add
fbstp
or
mov
fmuls
jp
mov
int
mov
fildll
lods
cbtw
push
int3
or
xchg
jl
test
js
icebp
inc
movsb
sbb
jb
call
jbe
out
pop
mov
xchg
loop
icebp
decl
sub
or
not
adc
jl
pusha
orl
in
push
sbb
ret
loop
outsl
fisttpll
adc
sub
pop
adc
in
or
repnz
outsb
out
or
mov
push
in
std
jo
mov
and
lret
push
test
jecxz
and
mov
lods
mov
sub
mov
cld
add
out
test
or
cltd
out
or
orb
pop
inc
mov
inc
or
cli
push
jbe
scas
push
fs
int
outsb
sbb
xor
push
add
adc
repz
mov
jp
adc
lods
loopne
and
sti
out
cli
cs
dec
mov
xchg
or
or
or
lahf
hlt
jbe
dec
jmp
push
sub
add
jne
lea
outsb
scas
mov
inc
int
cmpl
sub
insl
or
popa
xchg
mov
movsb
mov
insl
cmc
jg
add
and
and
push
pop
pop
rorl
sbb
mov
push
shll
lret
mov
scas
inc
scas
xor
sbbl
xor
xchg
lods
mov
sahf
dec
out
or
jp
mov
lods
add
sub
and
mov
sub
aaa
ss
lahf
push
push
dec
pcmpeqw
loope
test
scas
xchg
test
or
test
push
mov
pop
aad
ret
fistpll
push
je
pop
adc
cmp
xchg
clc
call
push
jnp
add
loop
outsl
outsl
cld
sub
or
test
add
pop
xchg
inc
xchg
dec
add
mov
data16
add
or
inc
add
push
scas
cmpsb
sbb
cli
orb
nop
bsr
je
out
fsubl
or
and
mov
repnz
and
inc
mov
pop
jle
inc
repz
cmpsb
pusha
xchg
or
fldt
iret
sbb
jle
xor
pop
jecxz
adc
or
shrb
nop
inc
sub
or
lock
lea
movsb
mov
mov
outsb
cmp
lret
pop
clc
in
outsl
ljmp
vmovupd
andl
push
mov
mov
adc
lret
or
push
adc
lcall
xor
cli
decl
pusha
add
sbb
scas
enter
daa
movd
sub
cwtl
or
clc
mov
clc
sbb
pop
mov
or
mov
jg
dec
stc
add
and
dec
hlt
in
out
aas
push
push
imul
lret
dec
xchg
flds
pop
mov
and
or
jl
mov
pop
add
cld
and
sub
lds
aam
pop
dec
sub
jnp
push
inc
push
arpl
shll
push
enter
xchg
pop
adc
mov
ficoms
pop
lahf
xor
loope
pop
into
pop
inc
sbb
cmp
pop
pop
adc
incb
out
jnp
mov
push
test
test
pop
pop
xor
scas
dec
sbb
flds
das
sub
stc
fucompp
xchg
outsb
jl
cmp
add
or
sbb
xor
testb
into
cmpl
inc
std
loope
idiv
push
pusha
bound
fnstenv
jno
adc
or
loope
clc
jo
ja
stos
jno
xlat
ret
push
mov
loop
cld
mov
stos
inc
outsb
test
jnp
inc
sti
movsl
aas
aad
dec
iret
jge
not
add
xor
sti
mov
hlt
mov
enter
inc
adc
pop
xchg
pop
outsl
js
outsl
or
aam
out
call
repz
out
or
add
cmpsb
clc
ret
dec
jmp
adc
adc
out
xchg
test
sub
hlt
mov
xchg
xchg
xchg
hlt
push
incb
jnp
sbb
cmc
dec
or
or
test
imul
mov
rorl
pop
orb
int3
jecxz
dec
dec
das
pop
insb
push
into
pop
movsb
inc
or
mov
adc
aaa
lcall
mov
hlt
add
es
xlat
sti
ds
add
lcall
ret
jmp
sub
inc
sbb
jno
xchg
insl
mov
add
mov
cs
jne
pop
js
push
add
dec
addr16
push
mov
jbe
stos
out
jae
loope
clc
movsl
jle
add
or
rclb
pop
pop
shlb
decl
ljmp
jo
adc
clc
mov
cmp
inc
xchg
ficompl
clc
into
int
inc
jle
sub
lods
mov
xor
sub
andl
mov
pop
arpl
jge
aaa
ja
call
inc
fdivrl
rorb
shll
lods
cmpsb
jno
mov
inc
lret
cmp
mov
mov
xor
adc
jecxz
inc
dec
std
jle
xor
loope
jecxz
adc
lock
push
daa
in
push
or
aas
mov
insl
inc
xchg
add
push
or
test
mov
call
dec
adc
xor
xor
ja
loop
sub
pusha
or
test
or
loopne
es
rcrl
jge
icebp
repz
movsl
jg
mov
lock
mov
adc
shll
js
popa
jge
cmp
mov
icebp
fwait
negb
jb
mov
test
mov
imul
cmpsl
inc
mov
movsb
xchg
xor
adc
sub
daa
jno
das
jge
pop
sub
fcmove
shll
out
mov
mov
outsb
and
cmpb
lea
mov
int3
xchg
add
and
inc
mov
dec
add
in
sti
ljmp
or
mov
out
lds
out
insb
ret
xchg
mov
inc
or
fdivrs
cmp
inc
or
rcrl
mov
push
imul
inc
outsl
pop
mov
xchg
in
mov
jg
mov
jno
inc
push
sti
adc
scas
cmp
xor
inc
or
jge
shlb
mov
jecxz
jmp
xchg
or
push
mov
cmpsb
jle
jne
mov
and
jne
cmc
outsb
jge
decl
inc
pop
push
sub
notb
adc
das
fsubrl
jl
sahf
adc
and
inc
mov
adc
fldt
arpl
comiss
call
adcb
arpl
and
incl
js
and
sub
popl
jecxz
movsl
or
fldt
lret
push
inc
outsb
fidivrs
shll
dec
mov
stos
fists
and
cwtl
sub
add
scas
push
pop
push
idiv
add
sub
mov
inc
jg
adc
lret
mov
fcomps
xchg
mov
lahf
clc
gs
test
iret
iret
push
inc
loope
add
sbb
insl
pop
or
or
mov
adc
pop
call
leave
xchg
fistps
dec
or
popf
call
ret
or
daa
imul
cmp
test
test
jns
adc
aaa
adc
inc
ret
lret
movsb
mov
mov
pushf
aaa
loope
lahf
test
push
or
mov
jle
mov
addr16
add
pop
mov
mov
push
and
or
mov
call
push
mov
inc
jle
mov
mov
test
out
jno
test
hlt
or
in
sbb
jbe
outsl
in
sarb
sbb
sub
jbe
rorb
and
jg
fdivp
int
push
xor
nop
xchg
repnz
sub
out
repz
in
call
das
data16
lret
mov
adc
stos
and
adc
pop
hlt
mov
mov
lods
sbb
aaa
outsl
stc
and
pop
movl
add
shl
int
pushl
mov
popa
xchg
jb
mov
adc
mov
sarl
push
js
jbe
jno
roll
sbb
je
jle,pn
dec
shll
testb
cwtl
inc
or
or
mov
push
xor
mov
repnz
adc
pop
jecxz
pop
pop
aam
mov
enter
push
add
fs
sbb
add
cmc
mov
fidivl
in
dec
test
cmpsl
adc
pop
adc
jo
clc
push
inc
xlat
push
push
repz
pusha
incb
ret
arpl
xchg
pushf
movb
fsave
xchg
cwtl
data16
pop
insb
push
xchg
loope
sbb
mov
hlt
mov
jnp
outsl
pusha
daa
out
push
mov
test
push
and
lea
sahf
mov
mov
mov
xchg
fisubrs
and
xchg
clc
xor
fstl
mov
dec
inc
cmp
pop
lea
repz
out
xlat
mov
bound
mov
sub
add
jbe
cltd
mov
sbb
pushl
mov
ljmp
xor
mov
or
lock
movsb
dec
icebp
xchg
in
rolb
dec
mov
or
xor
push
or
enter
mov
sub
orl
xor
inc
lcall
jecxz
pusha
inc
mov
aam
jge
aad
movsb
in
push
pop
rcll
push
push
push
fstpt
or
or
shrl
cli
jno
xchg
inc
sbb
pop
ja
jle
push
cmpsb
adc
push
call
je
imul
enter
cmc
movsl
add
cpuid
pop
loop
pushf
jne
dec
adc
adc
icebp
stos
loopne
cmc
push
push
dec
lea
cmp
add
pop
cli
mov
cmp
xorl
gs
add
fidivrl
lods
jle
es
xor
pop
bound
mov
cs
scas
ja
pop
push
adc
cmp
mov
shr
dec
mov
cs
adc
clc
sbb
push
std
gs
jns
sbb
add
push
daa
cmp
ret
sbb
fwait
lret
pusha
dec
mov
or
inc
xchg
push
pop
push
adc
or
sbb
hlt
add
arpl
mov
mov
orl
lcall
adc
sub
loop
lods
notb
arpl
insl
scas
push
xor
iret
and
and
pop
hlt
mov
mov
xor
scas
and
cmp
inc
push
push
cmpsb
push
outsb
mov
shll
call
inc
das
pop
movsl
inc
inc
in
test
push
jnp
add
inc
mov
cmpsl
xchg
mov
jmp
pop
dec
and
in
lods
testb
ret
lds
imul
xchg
lock
dec
js
cmp
cmc
call
sub
loop
pop
sti
decl
jne
test
cmp
call
insb
pop
das
fstp
jg
mov
sbb
out
xchg
ret
pop
push
lret
loop
outsl
pop
push
sub
add
sbb
enter
mov
lret
cwtl
rorb
cli
test
inc
push
or
in
mov
xchg
insl
and
mov
dec
gs
inc
int
outsb
mov
xchg
and
fstl
xor
push
int3
cmc
sub
jp
cs
mov
xchg
mov
addl
out
test
pop
jnp
sub
movsl
lock
jge
mov
pop
mov
mov
push
mov
sti
loope
adc
and
test
cmc
jmp
inc
rorl
dec
inc
push
test
jnp
das
dec
sti
jno
pop
push
mov
bound
loop
push
pop
push
inc
addr16
fistl
jl
cmc
mov
dec
push
add
push
mov
mov
xchg
sbb
add
pop
mov
and
clc
jg
mov
sbb
popf
adc
cmp
adc
push
jno
sbb
inc
jl
in
xor
sbb
outsb
jg
pop
in
insb
popf
stc
clc
dec
in
lods
inc
jnp
inc
inc
std
sbb
xchg
mov
jmp
cmpsb
push
cmc
pop
sbb
decb
movsb
fmull
jge
ljmp
mov
push
ret
xor
icebp
pop
outsl
mov
jae
xchg
jge
push
mov
pop
adc
adc
out
je
test
and
cld
movsl
outsb
nop
pushf
xchg
das
inc
inc
add
sub
push
pushf
in
aaa
jo
aas
adc
ror
xor
fcoms
cmp
mov
adc
pop
mov
pop
incl
pop
pusha
icebp
xchg
movsl
std
clc
jg
adc
rcrb
in
mov
out
or
fildll
sbb
shll
and
dec
cld
sbb
xchg
pop
or
lock
sub
test
push
and
popa
cvtps2pd
xchg
addr16
jg
mov
nop
movsb
ja
inc
arpl
add
incl
jp
das
jmp
and
and
test
jge
lret
or
sub
ss
push
cld
jne
mov
dec
mov
enter
or
cmp
cmpsl
pop
repz
push
rorb
sbb
pop
sbb
inc
xchg
xor
clc
mov
xlat
lea
subb
fmul
adc
push
jle
adc
sbb
mov
jmp
sbb
int
decl
ficoms
sub
xchg
jo
decl
or
stos
lret
fidivl
mov
add
mov
movsb
push
xor
pop
std
mov
int3
xchg
push
outsb
int
clc
and
add
scas
xorb
add
adc
jb
add
imul
jg
int3
cmpb
xchg
cmp
adc
adcl
in
aad
incl
and
mov
cwtl
push
xchg
jmp
icebp
testb
insl
jmp
or
sbb
arpl
jge
movsl
mov
cmpsb
xchg
fisubs
and
adc
decl
out
add
inc
cs
int
call
into
mov
sub
mov
xchg
fimull
je
jo
fnstsw
data16
ljmp
pop
clc
scas
pusha
into
sub
movsl
loopw
out
xchg
sbb
pop
jb
ret
dec
xor
push
fisubs
pusha
xchg
or
fcmovu
imul
fcompl
or
rolb
out
imul
adc
mov
inc
xor
std
fwait
pop
mov
mul
cltd
arpl
lods
jnp
mov
sahf
shrl
mov
fwait
sbb
xchg
jmp
jne
test
data16
icebp
dec
scas
jge
xor
lods
sub
sbbl
icebp
jecxz
push
xor
xchg
push
daa
push
aas
adc
mov
lea
pop
add
negb
lea
mov
aad
xchg
mov
jge
add
mov
test
or
pusha
adc
sub
pop
mov
add
mov
movsl
adc
fwait
loopne
inc
pusha
jo
mov
push
dec
filds
arpl
push
mov
std
pop
or
sub
cmpsl
int
jle
int
std
inc
mov
and
fs
int3
and
dec
sbb
std
aaa
iret
cltd
xor
dec
push
mov
inc
outsl
insl
jmp
loopne
addr16
pop
pop
push
bound
outsb
leave
das
fnsave
and
int3
jo
xor
add
ret
jp
or
mov
pop
std
push
xchg
test
out
jge
ret
lock
ljmp
inc
mov
hlt
push
frstor
xchg
mov
inc
movsl
mov
xchg
pushf
icebp
xchg
dec
jle
movsl
jecxz
mov
imul
inc
insl
adc
jbe
mov
inc
lea
xchg
cltd
pop
imul
loop
adc
mov
or
push
push
add
pop
jl
push
cwtl
sub
dec
sub
pop
loope
mov
fsubr
cltd
fadds
or
xor
inc
pop
faddl
cmp
imul
push
test
push
mov
cld
pushl
xchg
fidivl
push
andl
mov
lret
jge
rolb
xchg
push
inc
sbb
jle
mov
inc
negl
gs
push
mov
pusha
xchg
iret
inc
insl
aam
push
mov
out
mov
mov
js
cld
or
dec
in
add
test
and
cmp
fnstsw
pop
jle
push
xchg
lds
push
mov
and
iret
subl
in
insl
mov
or
sub
pusha
loope
and
adc
cld
popa
dec
nop
pop
imul
sbb
ret
sbb
repz
cmpsb
call
ljmp
stos
adc
push
inc
add
mov
out
popa
jecxz
jno
xchg
add
ret
sbb
mov
pop
cmp
in
test
inc
xchg
jle
sbb
jecxz
mov
sub
sbb
add
in
jno
js
dec
ss
or
pop
add
test
leave
mov
jg
mov
jbe
mov
pop
pusha
repnz
fs
sahf
inc
fidivl
jns
mov
imulb
rcr
subb
cmp
rorl
pop
mov
jmp
in
dec
lret
or
xor
popf
sbb
jmp
stc
pop
push
test
fs
dec
roll
dec
push
mov
rcrb
mov
loope
std
idivb
sbb
jnp
jo
inc
mov
aas
jl
jl
sbb
and
fst
mov
mov
jp
int3
adc
sbb
add
adc
xor
xchg
je
inc
inc
add
xor
fucomip
scas
roll
jno
stos
xchg
lahf
arpl
push
mov
push
cmp
es
and
call
push
les
outsl
ljmp
mov
iret
int3
dec
dec
aad
scas
push
sub
fs
pop
pop
clc
iret
loopne
das
shl
and
std
stc
in
lcall
pop
add
mov
test
sbb
xor
aaa
mov
mov
loope
les
pop
or
mov
outsl
out
pop
jae
in
mov
dec
repnz
cmp
mov
pop
cli
sbb
adc
add
cmp
outsl
and
and
and
sub
xchg
in
xor
cmp
dec
push
scas
ds
ret
std
xor
and
adc
mov
add
cmp
inc
mov
dec
call
xchg
nop
mov
pop
js
inc
jae
mov
in
insb
call
lcall
pop
mov
stc
fsubr
push
jb
les
ficoms
sbb
xor
fildll
add
lea
sbb
sub
fcoms
mov
or
push
in
idiv
das
fsubl
adc
pop
mov
adc
and
pop
clc
sbb
mov
inc
shll
add
add
or
and
cld
jbe
jb
aam
or
arpl
subl
pop
es
out
xchg
inc
jnp
mov
pop
rcll
and
mov
sub
jg
lds
mov
daa
and
popf
sbb
sbb
lret
in
and
sub
aas
xchg
sbb
in
and
cmp
clc
popf
inc
push
lcall
dec
mov
mov
loop
ret
insb
dec
cltd
sub
xor
call
out
sbb
in
jnp
insb
cmpl
popa
clc
icebp
or
and
cld
lcall
fst
loopne
push
jl
les
xchg
jne
ret
xchg
loop
ficompl
dec
ret
adc
ja
jp
sub
xor
fldenv
and
add
jmp
push
xchg
js
mov
test
js
or
or
call
add
sti
or
sbb
inc
mov
push
mov
loopne
jecxz
mov
js
fcompl
ret
clc
ss
loop
lret
mov
pop
push
sbb
add
pusha
ret
jo
rcrb
clc
or
out
iret
lcall
push
mov
sti
mov
mov
gs
xor
adcb
roll
xchg
push
push
mov
mov
and
test
inc
or
xor
add
js
mov
push
dec
mov
cwtl
adc
mov
cmc
adc
jl
push
and
push
pop
push
add
add
imul
shl
lock
sbb
cmp
mov
push
add
mov
mov
lea
jle
sub
add
add
js
lock
sbb
sbb
sbb
popf
cmc
lea
out
rorl
dec
mov
xchg
addr16
cli
movsl
or
adc
xor
mov
in
or
sti
push
outsl
xchg
test
mov
xlat
aaa
sub
mov
sbb
mov
lods
loopne
xor
imul
pop
outsb
fdivr
add
sub
fs
mov
jp
mov
cmp
inc
xor
ljmp
push
mov
cltd
add
ss
mov
ds
mov
dec
popf
or
pop
mov
cmpsl
pusha
test
cltd
xchg
xor
std
xor
add
push
inc
das
mov
addb
cmp
sbb
rcl
add
pop
pop
cld
cli
outsb
or
cmp
inc
test
shrd
push
pop
std
xchg
push
jb
subb
xor
mov
jno
mov
or
inc
inc
sub
rolb
cwtl
cld
in
adc
test
or
push
pusha
in
sbb
fwait
decb
push
adc
add
in
xchg
pop
mov
push
mov
and
shl
out
jle
scas
sub
xchg
fistpll
lods
rcrb
lret
stos
lods
xchg
adc
imul
rcrb
sbb
loop
dec
sbb
jbe
mov
rorb
lds
and
and
or
sub
or
push
lea
insl
push
lea
mov
inc
xor
mov
in
sub
clc
jns
mov
jne
jg
je
sub
push
sbb
sub
pop
inc
cmp
jmp
sub
ret
push
mov
cmp
jne
pop
inc
out
mov
xor
or
add
xchg
test
mov
rorb
jno
icebp
aam
mov
jle
decl
inc
jge
outsb
sbb
bound
lret
cmp
cld
fists
aas
or
decl
cld
jno
pop
adcl
xchg
testl
sti
pop
popf
mov
outsl
pushl
insb
or
jns
insb
push
jb
push
cmp
mov
scas
mov
mov
outsb
pop
ds
adc
jg
shrb
arpl
mov
aas
movb
mov
leave
std
ret
adc
das
loope
lock
into
cmp
fdivs
std
jno
lcall
ret
fidivrs
mov
mov
adc
mov
mov
sbb
jp
imul
call
adc
enter
mull
pop
push
pop
push
fwait
mov
shlb
or
mov
sti
or
aaa
push
or
push
pop
enter
dec
sbb
test
sbb
inc
adcl
mov
sub
mov
push
out
mov
rcrb
popa
jg
pop
sub
fmuls
ljmp
mov
stos
and
aam
decb
out
push
movl
rcl
push
inc
jecxz
addr16
adc
dec
das
jl
or
loope
jae
and
fldt
sbb
sub
je
cli
pop
push
sbb
hlt
fcomi
xor
pop
aas
sbbb
arpl
notb
ljmp
push
popa
xor
cmp
mov
dec
decl
mov
pusha
lahf
or
js
push
cld
fisttpll
push
insb
subb
and
aaa
outsb
lock
and
jnp
mull
sbbb
ffree
sbb
pop
cmp
lock
lcall
pop
push
add
mov
mov
bound
and
movsl
call
sarl
xor
push
xor
sub
sub
inc
or
pop
dec
and
ss
das
xchg
clc
pop
jg
call
push
loopne
test
fucomi
push
movsb
cmp
cmp
sbb
xchg
dec
rclb
pop
test
int
rcrl
dec
cmp
jbe
jbe
stos
sub
leave
cmpsb
imul
in
mov
fildl
aaa
push
mov
gs
mov
push
push
dec
cmp
adc
jnp
sbb
mov
jmp
cmp
mov
rol
aas
ljmp
push
jp
jns
xor
test
dec
sbb
in
jge
xchg
imul
dec
insl
and
jo
push
loope
sbb
mov
cmpsb
adc
or
adc
or
fistpl
pop
xchg
add
dec
or
movsb
bound
lds
mov
stc
push
lods
ja
sbb
pop
mov
arpl
add
ja
push
sbb
fnstenv
in
mov
clc
adc
push
lcall
movb
jo
int
fs
loopne,pn
push
in
imul
lds
add
and
dec
ret
sbb
mov
adc
js
outsl
cwtl
dec
lods
adc
push
push
push
jmp
cmp
push
dec
mov
pop
mov
test
ret
pop
jg
xchg
dec
gs
add
sarb
outsl
xor
jg
inc
jns
mov
mov
out
or
add
adc
inc
xlat
cmc
cli
cmc
mov
cs
out
mov
out
decb
or
cld
fiaddl
and
cmp
lret
inc
ret
addr16
pop
outsb
loopne
ds
fwait
in
ds
sbb
arpl
leave
sub
outsb
arpl
adc
cmp
imull
jge
outsb
jl
push
mov
jmp
int3
jg
pop
mov
enter
ljmp
mov
push
fsubrs
sbb
push
jae
js
ljmp
inc
fnstcw
inc
dec
jecxz
sub
mov
xchg
xor
outsl
jl
dec
enter
fldenv
aad
out
push
mov
push
filds
xchg
repz
mov
outsb
aaa
es
enter
mov
push
icebp
jmp
adc
loopne
dec
dec
daa
imul
and
mov
or
in
in
cmp
mov
ds
es
inc
or
clc
dec
sbb
sub
mov
addl
jns
sbbl
call
movb
lret
mov
mov
mov
out
test
rolb
xor
push
mov
sbb
mov
lahf
cwtl
xchg
out
notb
gs
iret
or
orl
cmp
pop
adc
js
mov
adc
push
test
jo
pop
out
mov
lea
mov
mov
ds
sarb
lea
call
fwait
ja
or
and
jne
inc
xorl
aam
pop
or
test
push
mov
and
mov
xchg
add
pushf
xchg
setge
loopne
pop
jle
stc
or
mov
mov
dec
cmp
je
fcompl
loopne
andl
aaa
jne,pn
stos
or
adc
imul
dec
or
jmp
cld
push
mov
pusha
pop
fsubl
loopne
notl
shlb
clc
decl
push
aad
xor
xchg
adc
jnp
test
pop
and
faddl
fists
inc
xchg
xchg
mov
mov
in
inc
sti
xchg
ss
gs
sar
xchg
sub
arpl
inc
mov
xchg
pop
or
sbb
test
fsubrp
adcl
pop
sbb
mov
jl
mov
inc
pop
pop
ret
ja
loopne
xor
das
and
xor
ret
sub
adc
jge
xchg
stos
insl
mov
jle
xchg
xor
lock
rcll
addr16
xchg
lods
pushl
xchg
inc
dec
or
dec
js
inc
mov
jl
imul
xchg
cmp
int3
cmp
mov
int
dec
out
dec
xchg
pop
push
js
xchg
fstl
mov
rorb
push
scas
lods
decl
cmpsl
in
and
scas
shrl
repz
scas
insb
cwtl
add
aaa
add
mov
mov
adc
dec
cwtl
cmpsb
push
lret
loopne
mov
push
ss
push
enter
enter
inc
mov
add
shlb
pop
insl
push
jno
fnstcw
cmpsb
js
ds
pop
or
cmc
mov
cltd
in
mov
push
mov
les
shr
jo
call
xchg
xorb
cli
popa
sub
push
mov
fs
xchg
mov
xchg
mov
adc
xchg
mov
mov
hlt
push
pop
cmp
aaa
sub
cmp
lret
cmp
xor
ss
cltd
aam
ds
imul
iret
lds
imul
pop
pop
ja
ja
int
cmp
ss
cmp
je
lret
aaa
pusha
outsl
gs
shrl
enter
aas
mov
push
mov
mov
aaa
inc
or
sbb
push
mov
fbstp
adc
mov
cmpsl
and
insl
loope
push
sbb
fldcw
fstp
mov
sub
fdivl
ficompl
and
xor
and
push
int3
jb
or
xchg
ljmp
xor
xor
dec
or
addr16
jp
leave
pop
adc
std
adc
mov
cmp
mov
push
adc
mov
mov
dec
cmp
enter
dec
push
mov
jb
lahf
mov
pop
sti
incl
xor
and
mov
adc
out
inc
js
jo
or
xorl
push
pop
pop
push
cld
or
mov
add
adc
cmp
movsl
jg
mov
ret
nop
lock
ja
lret
std
sub
out
bound
andb
outsl
push
call
inc
sbb
inc
sarl
int3
dec
dec
pusha
jb
call
mov
fidivs
add
jne
jle
xor
in
pop
jle
fldt
fwait
iret
sub
and
jmp
aam
cmc
aaa
jle
add
push
jae
mov
cmp
or
xchg
push
and
cmp
sub
div
pop
insl
cld
xor
jle
and
xchg
xchg
out
icebp
dec
jg
mov
fcmovnbe
scas
stc
or
pop
fcompl
jbe
ficomps
je
out
shl
into
mov
fbld
mov
push
mov
loope
call
cltd
cltd
mov
fildl
and
aam
hlt
ljmp
iret
xchg
lret
lods
test
fwait
outsl
fwait
push
sar
outsb
adc
fcoml
mov
daa
xchg
dec
andb
inc
mov
cmpsb
loopne
lds
das
xor
jmp
xor
push
aad
sbb
std
sub
ss
in
or
push
mov
cmp
incl
push
fwait
and
leave
inc
and
das
pop
andl
std
jecxz
push
inc
xlat
iret
adc
or
or
cmp
pop
push
rolb
js
push
shlb
icebp
sub
or
nop
or
sahf
pop
sbbl
fstpt
enter
into
fistl
in
fs
std
lea
sbb
or
and
shl
mov
insl
mov
ljmp
push
xor
mov
mov
arpl
pop
das
dec
mov
inc
jl
dec
push
out
jb
mov
mov
nop
adc
aaa
nop
sbb
or
dec
inc
sub
inc
lret
scas
sti
lods
in
jbe
hlt
pop
cld
bound
lcall
sub
xor
or
sbb
aad
mov
inc
and
pop
pop
aas
sbb
movsb
mov
pop
stos
mov
jmp
or
mov
insl
push
push
lods
test
xor
inc
mov
jns
cli
cmp
dec
sbb
cmp
push
outsl
cmp
stos
lahf
ljmp
dec
adc
mov
push
inc
add
mov
inc
push
addb
pop
add
xor
orl
fsubrp
pusha
jb
fstpl
lods
fs
sub
sub
sub
pop
inc
mov
sti
lcall
addl
jbe
mov
xchg
jae
mov
es
mov
mov
loop
imul
mov
jno
adc
pop
xchg
js
into
add
sti
daa
outsb
sub
jge
dec
jo
mov
xchg
bound
insl
sahf
mov
inc
push
dec
cmc
dec
fldl
movsl
loope
mov
and
xchg
fstpt
lods
bound
out
cmp
mov
adc
sbbb
imull
pop
xchg
lods
cld
out
orb
shll
shrb
cmpsl
out
int
and
push
ret
adc
cmpsb
outsb
insb
cmpb
cmpsl
jnp
and
fildll
pop
xchg
pusha
and
xor
lahf
add
sub
notl
je
repnz
les
cmp
mov
pop
in
aas
dec
lds
outsl
push
or
cli
push
jl
lahf
iret
push
xor
call
imul
aaa
fiadds
loop
les
jge
xchg
inc
mov
sbb
lea
xlat
mov
jmp
movsb
mov
lods
test
pushf
push
out
or
dec
or
mov
adc
mov
fidivl
test
pop
mov
clc
fistpll
aam
in
je
sub
mov
jl
mov
mov
xchg
cwtl
jmp
call
fildl
jl
jmp
enter
mov
mov
pop
stos
push
shlb
arpl
inc
dec
cld
negb
mov
sbb
pop
mov
pop
sbb
mov
add
or
inc
pusha
xchg
in
insl
in
push
in
push
cmpsb
add
jmp
pop
addr16
out
or
push
lods
popf
aas
inc
gs
xchg
out
xor
inc
jle
stc
inc
xor
je
lcall
sub
jp
les
repnz
inc
mov
jge
adc
sbb
movsl
sahf
lods
inc
insl
in
insl
sti
xor
push
rdtsc
and
ret
push
sbb
lea
pop
jle
test
and
adc
sub
and
jae
add
or
out
sub
clc
mov
movsl
sub
push
mov
mov
or
pop
loopne
rcrb
inc
mov
imulb
xor
cmp
fstl
push
xor
mov
imul
das
dec
add
mov
pusha
mov
adc
imul
out
xor
shll
lret
in
mov
push
int3
or
insb
cltd
fs
mov
popa
loope
adc
add
mov
lret
lea
aas
or
jns
pop
jb
orb
adc
jg
xchg
jno
ljmp
and
cmc
cwtl
aaa
push
xchg
es
inc
pop
pop
clc
adc
or
loopne
xor
add
and
mov
and
mov
sahf
pop
or
mov
lret
js
push
je
hlt
or
jbe
popf
mov
jnp
or
xchg
and
mov
or
xor
hlt
jecxz
jl
mov
std
imulb
push
mov
popa
jb
sub
sti
sbb
mov
stc
or
ret
fisttpll
outsl
inc
incl
xor
scas
dec
add
insb
test
jg
mov
mov
xor
dec
pop
rolb
adcb
shrb
popf
pushf
add
and
pop
out
cmp
cmpsb
sahf
sbb
dec
push
scas
scas
cwtl
xchg
and
enter
mov
testb
add
mov
add
lcall
lods
and
sub
or
dec
ljmp
ss
adc
mov
fwait
pop
xor
add
js
hlt
xchg
add
pop
jne
mov
dec
adcb
cmp
ljmp
sbb
leave
test
xor
imul
adc
cld
adc
icebp
inc
pusha
or
adc
clc
adcb
or
arpl
adc
mov
sbb
das
inc
out
iret
pop
xchg
and
int3
insb
mov
cmpsb
loope
iret
push
das
stc
cmp
test
push
je
dec
lcall
or
push
sbb
out
inc
jno
movsl
jo
xchg
enter
mov
mov
out
rorb
jno
fbld
popa
sbb
mov
ret
or
cli
outsl
mov
leave
pop
movsb
pushf
jmp
mov
cwtl
inc
fistpl
or
inc
pop
popa
cwtl
add
adc
mov
insb
lds
repnz
gs
hlt
dec
std
lods
das
je
jno
hlt
loop
add
mov
inc
lcall
xchg
inc
sub
stos
inc
adc
popf
fldcw
imul
insl
sbb
inc
lods
push
mov
dec
aad
mov
divb
insl
cmc
mov
mov
sbb
cmp
pushl
pop
cmpsl
cvtps2pi
xchg
lret
cmp
nop
xchg
shll
push
stos
std
in
dec
jge
and
adc
sub
aam
xchg
adc
add
add
mov
push
and
push
and
fisubl
test
add
arpl
repz
std
jmp
adc
mov
inc
rcrb
jbe
jecxz
pop
sbb
pop
std
xchg
push
cld
push
xor
add
pop
xor
pop
mov
pusha
out
lods
pop
das
fnstsw
pop
pop
mov
popa
cmc
ja
jo
in
fstenv
movsl
and
jno
xor
jo
mov
xchg
mov
aaa
ss
inc
lock
fsubp
pop
push
je
je
inc
mov
inc
push
jmp
push
sahf
add
and
icebp
sbbb
pop
nop
rolb
testb
arpl
ret
and
and
xlat
mov
inc
ljmp
in
fildll
js
dec
xchg
sub
mov
or
xchg
std
push
cmp
mov
lret
call
test
push
fwait
adc
jb
rorl
ja
mov
push
lds
adc
or
sub
std
outsl
scas
pop
scas
scas
movsb
ficoms
xchg
enter
xorb
pop
mov
sti
pushf
cmp
mov
add
incb
cmp
pusha
inc
enter
call
fimuls
mov
adc
jae
cs
je
sti
lcall
mov
or
sbb
cmpsl
sub
lcall
test
pop
xor
das
jmp
mov
repz
aaa
push
cmp
dec
out
mov
or
mov
xor
xchg
pop
mov
mov
rorb
aad
sbb
mov
jne
xchg
or
xchg
pushl
aam
and
mov
mov
sbb
inc
sub
cwtl
addl
jo
lods
lods
push
std
pop
xor
jmp
xchg
loop
inc
xor
xor
shl
fwait
aad
idivb
pop
insl
and
xor
adc
or
mov
dec
xchg
loopne
bound
pop
adc
hlt
fldt
stos
jmp
aaa
cs
insb
xor
cmp
les
xchg
mov
inc
adc
fistpl
mov
xlat
inc
ficoms
lods
add
das
roll
push
lahf
ss
add
insb
dec
std
fcomi
pop
orb
lds
movsb
inc
or
or
add
and
imul
adc
cmpsl
or
jne
xor
fprem1
jne
and
add
cmp
andb
xchg
mov
inc
aad
jae
sbb
mov
adc
inc
js
fistps
scas
mov
das
cmp
xchg
fiadds
imul
adc
addr16
or
outsl
jg
fldenv
rolb
sbb
mov
aam
mov
push
mov
imul
sub
lahf
push
jbe
sub
mov
inc
sub
adc
xchg
test
fimuls
adc
and
add
sub
dec
push
pop
fcomp
sbb
jp
sub
fdivrp
pop
pop
movsl
lds
fbstp
jmp
dec
xchg
and
mov
push
mov
les
add
test
das
inc
sbb
aam
shrb
push
mov
sbb
pop
aaa
nop
push
mov
pushl
or
xor
jb
sub
dec
lret
out
adc
roll
das
cld
mov
scas
dec
adc
and
sub
xlat
les
insl
pop
loop
pop
jae
xor
out
bound
outsl
clc
or
cmc
push
adc
sbb
decl
ficomps
sti
fdivrl
pusha
nop
aam
xchg
jne
push
mov
sub
shrb
dec
xor
in
push
pushl
in
in
cmc
js
fnstsw
fcom
out
jb
mov
icebp
xchg
ret
mov
and
imul
mov
cmp
pushl
enter
in
mov
add
testb
lea
data16
pushf
xchg
jmp
cli
pop
in
bound
lds
jl
sbb
repnz
rol
inc
cld
fwait
mov
and
xchg
jle
psubsw
outsb
fistl
jnp
and
and
push
adc
fstpt
xor
mov
std
cmp
jne
add
pop
inc
and
pop
call
bound
inc
ss
mov
mov
das
mov
js,pt
xor
pushf
cmp
push
pop
ljmp
gs
mov
daa
sub
outsb
shlb
xor
push
push
icebp
sarb
gs
jo
jbe
xor
stos
mov
sub
mov
mov
ficompl
adc
jnp
dec
jno
and
xchg
or
test
sub
mov
mull
insl
jae
cmp
jo
mov
fists
add
mov
mov
and
icebp
jno
cmp
sti
cmpsb
push
sub
cmpb
mov
cmpsb
js
ss
adc
jo
mov
inc
cld
dec
stc
into
mov
enter
lods
lea
xchg
inc
xor
and
jg
fldenv
sub
pushf
ror
adc
jnp
out
cmp
or
add
jo
movsb
ss
adc
sub
sbb
dec
or
push
mov
movsb
xchg
add
mov
fisubrl
mov
in
sub
inc
add
push
sbb
or
cli
sbb
gs
call
inc
adc
lret
mov
hlt
sub
add
xchg
sbb
js
cmp
pop
test
loop
jle
dec
jmp
mov
mov
jl
pop
ret
outsl
out
outsl
cs
insb
jecxz
and
xchg
call
rorb
test
push
ljmp
int3
mov
inc
jae
push
mov
add
and
jae
push
lods
pusha
mov
jnp
jb
mov
fistps
or
pop
mov
fidivs
in
movsl
jg
jno
xor
mov
cld
enter
je
clc
push
mov
add
out
xlat
inc
cmp
cli
scas
das
xor
dec
je
movsl
cmp
lods
add
or
add
clc
int
push
mov
cmp
push
std
adc
std
xchg
jmp
inc
xchg
movsl
and
sbb
cmp
ss
jnp
orl
arpl
jg
sbb
icebp
mov
push
and
das
icebp
mov
inc
les
xlat
in
sub
cli
sbb
pushf
bound
in
push
add
flds
jo
lcall
popf
lret
push
sub
add
or
js
imul
ljmp
sub
arpl
mov
ss
fs
mov
and
dec
inc
sti
lods
jg
or
icebp
jne
cwtl
xchg
std
filds
xor
sahf
inc
jle
iret
cld
adc
or
lods
mov
push
scas
cltd
push
icebp
mov
add
jp
cmp
and
push
sbb
movsl
push
mov
lods
mov
insb
inc
fs
fists
adc
cmp
or
sbb
mov
mov
ljmp
jge
pop
push
loop
add
leave
adc
pop
or
push
mov
dec
loope
and
lea
dec
filds
and
jp
lret
inc
sbb
es
push
pop
cmp
mov
lahf
jle
aad
addr16
adc
dec
popa
jae
xor
incl
aas
sbb
es
addb
add
repz
and
or
cmp
jp
mov
mov
mov
pop
pop
insl
in
push
cli
bound
xchg
cwtl
jl
mov
pop
mov
movsl
sub
push
sahf
das
sub
mull
push
and
inc
add
test
mov
mov
sbb
push
out
int3
mov
movsl
jg
mov
sub
test
mov
pop
outsl
or
imul
leave
add
mov
arpl
sub
jno
cmpsb
xor
xor
xchg
mov
xchg
pushf
test
mov
sub
mov
mov
push
std
outsl
mov
sub
es
lahf
pop
mov
fstpt
movsl
fbstp
xchg
adc
cli
inc
ds
add
repz
push
call
jne
push
mov
adc
imul
int3
mov
add
inc
mov
cltd
inc
pop
mov
push
mov
xchg
cmp
lods
je
push
out
mov
push
push
push
pop
lahf
cltd
dec
jp
sar
outsl
ljmp
ja
mov
sar
das
ja
addr16
pop
pop
jge
aas
icebp
cmpxchg
sbb
mov
addb
or
pop
mov
out
aam
lahf
loop
cmovs
mov
and
mov
add
dec
sub
dec
xor
adc
adc
ss
mov
push
mov
adc
fidivl
mov
sbb
faddl
pop
inc
xor
test
cmp
sub
cmpsl
push
push
in
cld
mov
imul
cltd
dec
cmp
fnstcw
pop
cltd
cli
ret
xlat
stos
stos
add
jbe
or
cwtl
adc
add
push
lret
mov
sti
das
les
fsub
sbb
mov
addr16
ret
pusha
push
loop
loop
movsb
stos
mov
dec
or
loop
xor
inc
scas
jg
mov
clc
mov
ds
gs
pop
les
insl
inc
pand
push
mov
and
fstp
ss
xchg
adc
add
mov
sbb
stos
aam
xchg
das
insl
aaa
clc
sbb
mov
and
jnp
inc
lods
cmp
mov
pop
repz
sahf
or
fisubrs
pushl
inc
dec
in
fidivs
adc
or
jge,pn
xchg
jb
shlb
mov
outsl
mov
xchg
lcall
jp
es
addb
and
or
or
cmp
addb
add
sahf
popa
outsb
mov
mov
add
mov
test
hlt
out
fmul
mov
inc
jns
stc
out
sbb
cwtl
pop
pop
jne
pop
test
test
inc
and
aaa
mov
rcrb
aam
std
mov
stos
mov
stc
inc
dec
sti
xor
cs
sub
xor
call
mov
ret
push
cld
xchg
dec
and
iret
ret
or
pop
mov
clc
and
inc
or
addb
call
adcl
add
shrb
incl
inc
test
inc
aas
jmp
test
lds
pop
mov
lds
lcall
adc
push
bound
mov
xorb
push
ss
cmpl
jno
fisttpl
stos
mov
pushf
imul
mov
or
xchg
adc
addl
and
push
xchg
addb
jle
add
jg
cltd
push
cmp
out
mov
ret
bound
inc
ret
mov
subb
xor
loope
lock
dec
push
int
insb
movsb
mov
xchg
lods
fldt
jl
ss
pushf
pop
and
jmp
xchg
jmp
movsl
mov
scas
mov
out
xchg
shrl
xchg
jecxz
mov
flds
outsb
or
mov
nop
sub
cli
dec
imul
loop
mov
inc
mov
mov
fidivrs
inc
addr16
nop
out
push
dec
mov
sub
ds
mov
xor
jecxz
icebp
sbb
xor
inc
add
or
insb
js
repnz
cld
mov
nop
rclb
hlt
jg
pop
call
mov
inc
mov
aas
pop
mov
push
cli
add
jne
lds
mov
adc
push
faddl
icebp
cmc
push
adc
icebp
das
jnp
dec
es
inc
and
stos
dec
sarb
sub
adc
pop
call
lods
fisubl
lds
mov
outsl
lret
negl
outsl
out
adc
jecxz
cmp
lods
jle
insl
mov
pop
repnz
dec
sub
dec
popf
xchg
fidivs
clc
adc
les
mov
inc
lea
frstor
and
sbb
cli
xchg
je
and
mov
fnstsw
cmp
in
inc
icebp
pop
sub
add
pop
cmc
and
dec
cmp
adc
mov
dec
inc
stos
out
adc
lea
mov
out
and
jl
scas
sti
testb
xor
bound
mov
mov
push
push
popa
inc
sbb
xor
lcall
popa
int3
roll
mov
pushf
mov
sarb
pusha
or
stos
lods
mov
sub
testb
push
movsb
popf
xorl
push
pop
sahf
pop
sub
js
push
add
xor
in
add
call
cmp
push
xchg
pusha
mov
dec
push
mov
sbb
ds
test
and
movsb
mov
popa
lock
push
es
pop
xchg
dec
cmpl
xchg
inc
inc
and
sub
mov
mov
mov
nop
cmpsb
push
add
clc
movsl
xchg
fiaddl
jns,pt
in
fnstenv
addr16
imul
cmc
cmp
repz
je
out
fldenv
decl
adc
subl
das
xor
in
adc
fnstsw
mov
mov
sbb
add
mov
pop
dec
xchg
cmp
add
push
jge
sub
and
adc
lret
fistps
mov
stos
fisubs
push
adc
stos
add
fsubs
xchg
cmp
add
xor
jle
bound
push
push
or
or
push
adc
leave
or
add
mov
sub
adc
aad
inc
cmp
test
leave
imul
mov
inc
bound
cs
rcrb
jns
inc
xchg
adc
jg
nop
cwtl
xchg
jg
add
jge
cs
dec
aas
stc
lds
adc
subb
xor
ret
or
mov
mov
lea
ds
subb
inc
addb
bound
adc
sbb
lea
pop
xor
jecxz
testb
ss
jp
or
push
insl
jnp
jbe
mov
mov
and
scas
dec
cld
add
sub
xor
add
fidivs
mull
iret
pop
and
pop
lahf
inc
ret
iret
stos
inc
movsl
icebp
arpl
out
push
repz
sahf
pop
test
cmc
je
aam
test
repz
mov
xchg
dec
ss
inc
mov
rcrb
mov
mov
push
mov
xlat
cmp
pop
std
cmp
push
jo
xchg
inc
das
pop
or
push
sbb
ljmp
inc
loopne
add
cmp
push
push
lret
mov
push
enter
sub
adc
movsb
clc
mov
sbb
xor
or
add
push
and
xchg
fnstenv
mov
push
xchg
push
cld
xchg
dec
rorl
sbb
ljmp
insb
cmp
repnz
inc
push
mov
orb
push
out
mov
dec
icebp
xor
or
cmp
cmpb
inc
mov
test
cltd
cmp
repz
mov
cmp
stos
or
cmpsl
ret
mov
inc
call
xor
jp
leave
jl
nop
mov
inc
cld
mov
test
fwait
mov
adc
pop
jb
pop
jp
sbb
or
add
cmp
mov
orb
fidivrl
adc
rol
sbb
xlat
jne
das
pop
test
test
lods
mov
inc
dec
std
aam
sti
add
and
xchg
and
sub
dec
test
inc
dec
or
decb
fs
aas
xchg
bound
cmpsb
inc
push
cld
add
inc
adc
test
cld
add
in
push
pop
jbe
mov
movsl
outsb
arpl
push
daa
fdivrp
sbb
ret
pop
movsb
rcll
sub
inc
stos
sbb
lahf
xchg
or
ficomps
das
jae
xchg
xor
mov
call
cmpsb
xchg
inc
mov
dec
loop
push
fisttpll
add
test
mov
mov
cld
jmp
hlt
rolb
mov
pop
inc
fimuls
jb
mov
ss
roll
push
das
sbb
lods
iret
xchg
pop
add
push
fucomi
int
mov
shll
sbb
push
aam
jb
popf
cmpsb
push
pusha
nop
add
in
in
or
xchg
mov
jl
out
sbb
pop
test
or
or
cltd
test
and
pushl
push
fyl2xp1
jmp
push
repz
or
fiadds
repnz
jecxz
jo
add
cmpl
je
out
push
std
hlt
addb
inc
push
test
idivb
fnstsw
imul
mov
lds
dec
and
add
xor
push
dec
jge
mov
inc
lret
dec
jns
mov
int3
cmp
jo
dec
mov
in
shll
daa
pop
pushf
lahf
add
les
flds
in
mov
test
call
or
jno
out
cmp
pop
jl
mov
bound
sar
decl
shll
cwtl
sub
mov
lds
or
xor
and
sub
sub
fisubl
xchg
icebp
or
test
add
arpl
test
mov
lret
ret
mov
fldt
sbb
sub
subb
dec
out
inc
lods
mov
pop
inc
je
dec
enter
xchg
outsb
fildl
bound
rcr
mov
ljmp
sbb
ss
popf
inc
mov
and
add
enter
sbb
movsb
add
fsubl
mov
mov
pop
add
repz
dec
inc
jo
cltd
insb
sbbb
xor
scas
popf
add
or
cmp
jb
inc
insl
inc
sub
push
loope
lea
sbb
or
in
pop
add
mov
loopne
js
and
cmp
pop
sti
mov
inc
sub
cmp
cmp
adc
les
pop
pop
lea
xor
in
mov
sbb
jmp
pop
dec
ficoml
ljmp
mov
ret
push
sbb
add
adc
xchg
mov
xor
lea
in
add
mul
stos
lods
movsl
push
rclb
mov
mov
jle
shll
adc
lods
cmpsl
pop
cld
fsubs
sarl
ret
pop
cld
lret
mov
adc
in
outsl
dec
stos
xlat
mov
movsl
push
je
sub
cmc
fildl
mov
mov
iret
shl
clc
addr16
pop
movsl
inc
xchg
or
push
cmpl
cli
stos
sbb
aas
jno
fidivrs
ret
es
mov
cmc
cmp
jne
sub
ret
imul
mov
mov
repz
nop
or
sbb
imul
test
movsb
or
jmp
sbb
lret
push
ja
push
add
ds
push
dec
popa
or
lock
push
lock
pop
or
lret
xor
ret
mov
add
test
loop
jno
jnp
inc
sub
js
or
cmp
and
das
sbb
lea
cmp
xchg
or
mov
mov
push
xchg
dec
aas
and
cmp
xchg
lahf
push
and
push
jb
hlt
mov
outsl
pop
dec
push
push
mov
or
lock
push
cmp
push
lret
mov
xchg
push
decl
adc
sbb
fistl
outsl
pop
mov
pop
bound
fidivs
lret
out
or
movsl
mov
lcall
insb
leave
and
mov
and
enter
jge
cltd
into
adc
test
mov
mov
cmp
or
out
push
in
xor
dec
pop
outsl
mov
aam
fldl
push
movsl
cmp
in
dec
sbb
mov
fsubrs
fninit
pop
or
ja
inc
dec
fmull
cli
lret
cmp
sahf
push
dec
adc
subb
je
dec
sbb
sbb
sbb
out
xor
stos
sahf
dec
cmpsl
pop
push
shll
sbb
inc
or
cwtl
clc
fbld
popl
dec
push
outsb
push
pop
fdivs
int
aas
decb
popf
and
rolb
push
stos
insl
shrb
fistps
frstor
adc
mov
leave
es
or
rol
or
loopne
fwait
hlt
repz
fwait
jne
add
inc
mov
cmp
jle
cmp
mov
addr16
pusha
popa
inc
adc
imul
sub
push
sbb
cmpsl
add
xor
add
pop
ffreep
ret
mov
inc
jecxz
xchg
lods
int
aaa
insl
out
xor
push
xchg
ds
cmpsb
and
adcl
dec
test
fprem1
add
push
xchg
into
xchg
inc
and
mov
sbb
scas
stc
add
jg
outsl
incb
ret
sahf
lods
mov
xchg
inc
sahf
aaa
adc
insb
inc
mov
imul
aas
xchg
or
mov
cmpsb
mov
inc
loope
cmp
mov
adc
cs
lcall
add
inc
or
pop
dec
testb
into
push
clc
jecxz
fisttpll
jnp
mov
shll
lock
push
daa
push
xor
arpl
inc
cmp
sbb
xor
push
jne
stos
fnsave
push
scas
jg
aaa
mov
jbe
fadds
cld
test
add
jl
ficoms
icebp
adc
xchg
push
dec
jno
push
fidivrl
mov
and
xor
mov
cmpsb
mov
mov
data16
movsl
pop
arpl
adc
push
int
imul
jbe
lock
mov
lret
xorb
jp
addr16
pushf
mov
nop
cmp
and
js
sub
mov
imul
das
lcall
out
loop
inc
test
fcmovnbe
fnsave
inc
test
push
xor
jp
sbb
popa
jns
scas
faddl
xorl
insb
mov
mov
sub
stc
jnp
jl
js
lods
lock
jle
dec
push
imul
in
sub
dec
jb
adc
or
mov
lods
xor
cli
cmp
hlt
xor
inc
js
incb
pop
sub
shrb
scas
fmuls
rcrb
xchg
call
mov
mov
mov
or
jle
xor
mov
movsb
test
fcmovu
mov
psubsb
hlt
fistpl
fwait
pop
vmulss
in
pop
sbb
add
pop
jnp
fiaddl
leave
cmpsb
jmp
xor
push
out
in
jg
lds
pop
pusha
loope
inc
xor
mov
push
negb
lock
nop
inc
popf
test
jp
push
dec
fwait
inc
inc
pop
xchg
mov
cmpsb
cwtl
push
cwtl
sub
ret
jg
mov
loop
mov
test
leave
lods
mov
insb
fstp
add
cmp
in
jp
mov
dec
pop
add
dec
mov
mov
sub
mov
scas
sbb
into
mov
outsb
clc
rcrb
cmp
test
in
lock
rol
or
add
mov
sub
leave
test
js
fdivr
xchg
push
ljmp
jae
daa
ret
jae
mov
pop
insb
inc
stos
jne
inc
insl
aad
jge
outsb
pop
stc
dec
div
mov
loope
mov
pusha
pop
and
das
inc
jnp
daa
mov
out
sbb
mov
lcall
aam
jmp
lcall
push
jnp
mov
and
mov
cmp
xchg
sub
add
popf
pop
jg
scas
xchg
pop
mov
push
imul
mov
pop
dec
or
push
clc
or
jo
lods
movsb
xchg
jg
add
stos
pop
adc
mull
sub
adc
or
dec
fstpt
in
mov
test
mov
test
mov
pop
sbb
jae
sbb
inc
or
sub
sub
push
or
jg
bound
inc
clc
or
outsl
mov
ret
dec
out
mov
mov
mov
and
inc
dec
jne
lret
adc
xor
sub
mov
orl
ljmp
mov
loopne
mov
in
cmc
sbb
ja
push
xchg
add
hlt
xor
fcoms
pop
outsl
nop
stos
mov
xchg
sti
pusha
pop
ret
rcrb
jl
and
in
dec
nop
dec
inc
andl
push
mov
fs
inc
stc
sub
loope
insl
sti
fcomp
dec
mov
xchg
lret
push
cmpsl
lea
incl
iret
stos
or
pop
add
in
mov
repz
sbb
fstpl
loopne
fs
mov
add
idivb
xor
jle
stos
lock
andb
xorb
sub
add
push
mov
daa
or
mov
adc
js
push
inc
leave
inc
dec
les
mov
aaa
call
sarb
sarb
cli
dec
add
pushf
jmp
gs
dec
and
shl
push
jmp
xor
fistl
mov
in
pop
jmp
xlat
out
daa
mov
or
shrl
popa
movsb
xchg
push
or
out
push
insb
mov
roll
sti
push
xor
pop
dec
js
mov
std
ja
imul
clc
xlat
pushf
fs
inc
arpl
cmp
fidivl
pop
cmpsb
mov
inc
mov
pop
sti
scas
add
mov
pushf
pop
lret
ljmp
mov
push
mov
rcrl
testb
fldt
jnp
pop
and
push
ja
dec
pop
add
mov
push
notl
add
lds
cmc
decl
mov
push
push
divl
sub
test
inc
popl
pop
sbbb
scas
cs
aaa
rolb
andl
movsb
push
gs
pop
stos
or
adc
mov
mov
stc
cld
mov
sub
inc
imul
mov
ljmp
pushf
inc
sub
subl
or
mov
je
scas
test
dec
pop
in
sub
mov
icebp
pop
ds
inc
and
lea
call
loopne
adc
fnstsw
loope
scas
std
mov
daa
mov
dec
and
loop
outsl
aaa
lret
xchg
jo
push
jno
fsts
mov
pop
adc
lock
push
push
ficoms
ja
jmp
mov
repz
orb
imul
adcl
xor
clc
insl
mov
jg
lods
dec
dec
and
pop
sbb
add
xchg
mov
and
cld
mov
out
stc
lahf
and
adc
std
outsl
pop
mov
in
xchg
incb
adc
out
lcall
dec
rclb
pop
mov
js
xor
cmc
dec
pop
mov
sub
or
mov
pop
xor
loope
loop
imul
loop
dec
test
adc
dec
lcall
or
addb
fnsave
mov
enter
popa
mov
outsl
call
dec
mov
dec
adc
ret
jle
test
cmp
in
sbb
decl
pusha
sub
test
leave
stc
mov
jae
ret
pop
and
cmp
xor
adc
adc
mov
pop
std
das
adc
inc
sbb
dec
cmp
aas
out
icebp
fldt
cwtl
push
inc
sub
incb
fistpll
mov
sub
shrl
inc
mov
shlb
jne
jle
inc
iret
pop
push
inc
mov
adc
add
lock
fistpl
adc
xchg
push
inc
and
icebp
lods
mov
jbe
ret
mov
mov
xor
pusha
pushf
mov
dec
xor
repnz
pop
push
sub
aas
jge
add
cld
outsl
jmp
push
xchg
push
jmp
mov
rcrb
ja
pslld
call
mov
lds
sbb
mov
mov
push
ret
sbb
and
sbb
push
dec
mov
test
xchg
mov
lcall
jbe
lds
arpl
inc
sub
fcmovnb
stc
dec
dec
jmp
stos
cmp
sahf
clc
decl
push
rcrl
inc
add
pushf
jle
jb
adc
loope
fimuls
add
movsb
dec
mov
add
jbe
nop
aas
adc
fimull
out
cmp
out
aas
cmp
negl
mov
pop
addr16
cmp
outsb
dec
add
mov
lret
mov
add
mov
sahf
les
xchg
and
xchg
xor
push
mov
repz
sahf
sbb
xor
inc
in
rcrl
int
aas
push
cltd
inc
sbb
adc
or
icebp
movsl
pop
sti
arpl
push
mov
mov
add
sub
or
adc
das
push
mov
fdivp
dec
insb
adc
cs
add
rorl
sub
mov
add
sbbl
gs
outsl
xchg
cmp
adcb
rolb
dec
movl
mov
into
adc
test
std
sbb
jns
fiaddl
and
xor
andl
cmc
mov
ret
push
aam
cmc
cmp
cmpl
adc
arpl
loop
mov
call
cli
mov
mov
pop
or
push
dec
xor
mov
pop
sub
dec
fcmovb
xchg
lret
inc
pop
cli
pusha
mov
jp
movsl
jns
fs
popa
cmp
mov
mov
jp
and
ret
scas
mov
push
paddsb
lods
add
test
scas
jb
or
sbb
ret
fldenv
inc
mov
popf
pop
pop
cmpsl
xor
pop
cld
test
xor
shlb
sub
lea
sub
sbb
pop
mov
ljmp
cld
lret
sub
pop
fcoms
mov
insb
sub
adc
pop
test
out
js
lahf
cli
ret
or
sbb
lret
jge
jne
ss
into
add
cmpsl
out
daa
dec
and
pop
not
add
hlt
mov
dec
mov
les
sub
cld
gs
dec
add
rorl
mov
adc
mov
fdivl
pop
cld
outsb
fmull
das
mov
pop
add
or
bound
cs
pop
in
adc
ficoml
xchg
fsubp
dec
sti
pushf
lea
pop
xchg
insb
dec
rep
xchg
sbb
cltd
sbb
cli
add
sbb
test
adc
shrb
out
mov
jmp
xor
in
pop
loopne
xor
cmc
push
mov
cld
hlt
ljmp
test
stos
jge
sub
mov
test
ja
or
fmull
xchg
push
test
add
inc
clc
adc
push
mov
int3
divb
mov
and
add
fs
and
push
ss
fbld
sti
xor
mov
mov
or
ljmp
cmpsl
inc
orl
or
pop
cli
ffreep
add
adc
or
fcoms
sub
inc
fdivrp
call
add
jb
outsb
call
jbe
outsl
outsl
sub
push
pop
jnp
cmp
test
xor
mov
push
add
add
inc
jle
insl
xchg
mov
cmpsb
mov
gs
stos
mov
jle
xorb
fdivp
cmp
pop
ss
and
mov
jns
je
push
sub
aaa
rcrb
rclb
outsb
push
mov
lcall
inc
ret
aas
rclb
ret
ss
fwait
stos
add
pushf
jbe
std
out
icebp
mov
bound
cmp
push
mov
push
pop
mov
jge
mov
sub
push
cs
or
adc
adc
test
je
decl
lcall
hlt
mov
cld
stos
ret
aam
sbbb
push
test
add
leave
test
lods
outsb
sbb
ljmp
loopne
outsl
xchg
pop
pop
clc
xchg
arpl
mov
repz
sbbb
enter
add
mov
ficompl
sub
mov
in
jmp
mov
data16
sub
xchg
test
mov
or
test
dec
inc
sbb
cli
dec
shlb
mov
orb
mov
out
outsl
shr
hlt
mov
aaa
jno
ljmp
add
add
mov
imul
das
fsubl
lahf
ljmp
fwait
inc
cmp
rcr
std
bound
mov
sbb
sbb
sub
jecxz
std
xchg
pop
fnsave
mov
mov
cld
push
push
pop
fcom
jne
mov
out
addr16
cmp
mov
or
inc
add
adc
into
out
or
sar
cs
push
inc
sbb
or
imul
js
mov
adc
jg
sti
fwait
aas
aad
mov
jecxz
adc
inc
mov
pushf
outsb
or
push
out
sti
clc
test
rorb
lea
lsl
mov
mov
dec
int
inc
mov
dec
inc
lods
mov
cmp
mov
fcmovu
add
adc
push
insl
mov
hlt
ret
or
gs
add
jbe
outsl
outsl
or
add
imul
pop
xor
push
aad
and
pop
into
mov
jbe
fildl
mov
aas
ret
outsb
or
inc
adc
lock
inc
push
stos
enter
jo
pmaxsw
dec
je
add
in
test
sbb
mov
rcrb
getsec
mov
outsb
mov
pop
adc
lods
add
mov
adc
mov
out
mov
clc
pushl
ficompl
lea
test
mov
push
lods
std
lods
mov
outsb
pop
fs
and
xor
pusha
inc
in
ficompl
fisubrl
sub
test
insl
je
and
cmpb
loopne
clc
push
mov
insl
mov
add
rorl
nop
xor
fidivl
xchg
sbb
cmc
testl
clc
adc
jae
dec
add
jae
pop
cmp
cmpsb
add
push
add
stc
call
sub
shrb
sbb
dec
mov
jnp
fisttps
data16
push
mov
fdivrs
push
add
mov
pushl
scas
add
clc
and
lods
loop
jmp
negb
repz
subl
fldt
jl
adc
dec
dec
jno
sti
fsubrs
add
sahf
sub
mov
adc
push
dec
shrb
fs
sbb
fisttpl
ret
addb
jl
mov
mov
dec
mov
push
out
inc
cmp
aam
or
add
sub
or
pop
push
mov
daa
lahf
loopne
movsb
push
pop
clc
movsl
jbe
insb
cld
mov
clc
das
insb
xchg
jbe
pop
test
imul
mov
clc
mul
fnstsw
pop
inc
sub
mov
in
pop
mov
test
mov
mov
in
ss
popa
dec
int
call
loope
imul
cmp
mov
dec
cmp
jg
ret
mov
loop
arpl
int
push
xor
adc
lret
fidivrs
pop
and
addl
cli
sbb
in
repnz
push
push
sbb
and
filds
fmuls
pop
frstor
mov
mov
in
ret
icebp
fcoml
sbb
pop
sub
jmp
inc
ds
jne
add
or
dec
push
adc
fisttpll
icebp
mov
cmpsb
mov
inc
sar
shll
aaa
push
xchg
and
movsb
lcall
mov
pop
mov
jg,pn
push
adc
push
sub
add
mov
cs
pop
jl
test
adc
xor
mov
icebp
shrl
cs
push
mov
mov
push
bound
adc
in
sub
jns
fnstenv
lret
gs
outsl
lock
fstpl
pop
inc
popf
pushf
mov
push
and
add
outsl
xchg
cmp
xchg
orl
je
jno
or
sbb
ja
dec
mov
mov
jnp
xchg
cmp
imul
stc
fldl
mov
pop
ja
pop
or
sbb
das
lods
cmp
enter
leave
std
testb
aaa
push
rcll
ficoms
cmpsl
dec
inc
clc
pop
cmp
xchg
cld
xchg
lods
pop
xor
cmp
push
repz
and
inc
mul
jge
dec
jg
add
lahf
scas
pop
jp
mov
insl
jg
int3
int3
inc
ljmp
test
mov
das
mov
or
sub
mov
xchg
jae
mov
mov
and
mov
sbb
dec
rolb
fs
mov
outsb
aaa
shrl
ret
push
mov
mov
mov
das
xorl
and
mov
scas
jle
xchg
in
test
subps
pop
mov
pushf
in
xor
adc
pop
fisttpl
xchg
inc
sbb
inc
cmp
adc
scas
in
push
lea
hlt
pop
bound
outsl
sahf
and
out
hlt
xchg
pop
mov
add
mov
add
and
dec
mov
cmc
push
test
lods
and
bound
pop
mov
pop
jg
shll
mov
inc
les
mov
pop
mov
outsl
jnp
jle
loop
clc
fists
je
dec
dec
mov
add
jnp
dec
xchg
loope
scas
dec
mov
js
inc
jno
fiaddl
and
ds
pop
pusha
sub
subb
inc
std
test
mov
inc
es
mov
inc
cmp
sub
jns
jb
cmp
in
clc
inc
pop
add
into
stc
mov
mov
lock
call
sbb
sbb
jle
mov
sbb
xchg
dec
movsb
je
pop
pop
out
lds
xchg
dec
xchg
xchg
mov
rcrb
mov
xchg
mov
repz
jle
fidivrl
mov
xor
lretw
pop
jnp
bnd
jb
sub
pop
imul
andb
push
gs
test
push
sahf
es
lea
and
dec
cltd
in
fmull
aad
sbb
or
push
imul
push
inc
or
mov
push
clc
data16
rolb
inc
outsl
and
mov
and
cmp
insb
sbb
add
pop
jb
inc
pushl
movzwl
aaa
cmpsl
sti
jmp
fimuls
cmp
mov
cmp
mov
pop
xchg
mov
decl
ret
mov
jno
cs
fsub
fnstenv
adc
pop
push
jo
sarl
dec
adc
add
pop
sub
xor
mov
loop
rolb
in
or
fsubrl
lock
or
stos
pushl
push
push
bound
mov
xchg
mov
pop
mov
fsts
call
jp
lahf
fcmovnbe
sbb
adc
jmp
add
lds
mov
pop
jecxz
fldt
sbb
push
fiaddl
rorl
add
and
std
inc
aaa
cwtl
adc
jecxz
orl
inc
incl
test
jbe
jns
mov
fdivrs
push
movsl
sbb
sub
lea
aad
jnp
call
push
or
lods
movsl
push
add
pop
fldenv
cwtl
mov
add
inc
inc
xchg
add
test
incl
push
dec
push
inc
inc
dec
push
add
fwait
sub
adc
add
push
pop
inc
inc
sti
adc
and
and
sbb
and
add
ss
insl
insl
stos
mov
ja
je
push
movhps
mov
inc
mov
arpl
push
inc
inc
push
dec
imul
inc
inc
inc
inc
dec
push
add
addr16
pop
imul
dec
and
add
mov
adc
pop
addl
imulb
inc
adc
inc
mov
or
cld
insl
pop
imul
and
mov
inc
or
aaa
pop
cmp
and
sbb
sub
iret
inc
and
mov
xor
dec
pop
xor
mov
pop
in
mov
or
add
test
popa
imul
cmc
or
inc
ss
sbb
and
sub
mov
mov
lea
lods
mov
adc
scas
mov
cmp
lods
sbb
adc
adc
int
repz
mov
lods
mov
les
pop
cmp
idivl
push
xor
xor
inc
ss
adc
int
popf
aas
and
and
das
insb
insl
dec
pop
dec
outsb
inc
outsb
sarb
jbe
cmp
fstl
out
jae
cwtl
mov
sub
lea
xchg
jno
xchg
add
mov
mov
pop
cmp
gs
decl
divb
icebp
int3
imul
lret
mov
popf
lahf
lret
sbb
sbb
sti
mov
mov
ljmp
cmc
cmc
jb
jecxz
scas
cmp
addr16
dec
lea
xchg
xchg
mov
idiv
call
stos
mov
cmpsl
sub
pusha
sub
pusha
and
pop
addr16
push
fldenv
pop
jg
push
or
dec
fisubl
loop
lcall
mov
jns
add
pop
pushf
scas
ds
push
es
rorb
popa
call
sbb
in
ret
mov
cli
mov
rol
push
int
jge
ljmp
dec
cmc
mov
and
push
cmp
mov
idiv
jg
jp
fstpl
insb
jmp
or
xor
scas
mov
cmp
jmp
xchg
and
jge
das
pop
pushw
nop
lds
gs
jo
xor
lcall
mov
push
pop
ret
push
iret
mov
adc
dec
icebp
cmp
loopne
or
or
std
mov
aam
shll
push
lcall
jmp
in
xchg
in
inc
adc
mov
mov
mov
add
pushl
adc
lret
or
gs
xchg
in
push
jae
repnz
leave
cmpsb
mov
shl
cmp
xchg
mov
xchg
sahf
xchg
dec
xchg
fimuls
outsb
lcall
add
stos
mov
push
les
call
aas
inc
sub
cltd
dec
sbb
fmuls
mov
push
lcall
clc
movsl
loope
sbb
inc
les
push
shrb
add
fs
lods
sub
lcall
mov
xchg
stos
jne
xor
jmp
sub
out
mov
lret
and
cld
jle
ljmp
icebp
movl
add
jbe
or
and
sub
call
fisubrl
push
icebp
pop
mov
pusha
jmp
sbb
jg
fsubl
lods
cmpsb
arpl
int3
and
mov
fadds
pushl
inc
sar
outsl
lock
inc
std
je
push
sbb
cmp
and
adc
lods
mov
das
ficompl
mov
std
jbe
lea
movsl
xor
and
call
xorb
ljmp
jbe
cmp
pop
lret
dec
mov
xchg
cld
or
call
mov
add
arpl
ficompl
xchg
sub
inc
push
mov
pushl
dec
push
sbb
add
jne
inc
sahf
je
push
decl
aam
adc
sub
das
lock
mov
js
cmpsl
push
mov
call
sbb
pop
loopne
dec
rol
pop
loopne
cmc
outsb
cmp
cmpl
fbld
mov
push
gs
je
popf
cmpsl
sub
je
cmp
fistps
call
and
and
insl
in
sub
lods
mov
js
icebp
es
call
inc
jmp
jne
clc
mov
or
push
aam
xor
jmp
mov
pushl
dec
pusha
inc
rolb
divl
pop
cs
clc
pop
jle
jmp
and
jecxz
pop
inc
mov
into
cwtl
pop
aam
bound
ret
lock
hlt
jmp
negb
lcall
js
mov
cld
jmp
repnz
decl
std
outsb
adc
rorb
negl
mov
push
movsb
sti
mov
sub
cld
xchg
cmpsl
cmc
aam
cli
and
xor
pop
cli
jg
mov
js
sarb
cs
aas
js
pop
ret
push
loope
mov
ljmp
test
stos
nop
sub
int3
sbb
pop
test
mov
xchg
cmp
fcompl
aaa
jmp
daa
jnp
aaa
add
mov
imul
adc
mov
jns
push
incl
jae
or
imul
pop
orb
lcall
sarl
cmpsb
mov
mov
cwtl
call
mov
cmpsb
loopne
xor
lock
push
cmp
sahf
sarb
mov
sbb
cs
sbb
sbb
movsl
jbe
ret
xor
jne
fiadds
sub
mov
cmp
sub
sbb
pop
popf
fidivs
push
pushf
outsb
xchg
cmp
fwait
cltd
xor
cmp
ja
ds
cmp
push
xor
dec
cmpsb
les
icebp
cmp
cmp
xor
cli
jo
jmp
jg
mov
mov
and
add
ljmp
pushl
lods
mov
or
sbb
mov
xchg
and
das
jl
sbb
fucomi
pushl
bound
gs
scas
repz
mov
data16
cmp
aam
mov
ljmp
or
movsl
mov
jmp
cmp
dec
fbld
cmp
or
test
pop
hlt
pop
ss
jg
inc
out
mov
jg
pushl
xor
daa
fcompl
sbb
mov
or
sbb
decl
jle
pop
fildl
pusha
js
loop
push
and
xchg
ret
inc
mov
mov
std
mov
jne
adc
add
push
or
paddusb
rorl
fistl
call
gs
jns
ja
and
aas
ret
dec
add
adc
call
test
addl
jmp
adc
test
pop
outsb
pop
cltd
enter
mov
rorb
push
sbb
in
add
xor
in
xchg
add
sahf
decl
decl
outsl
cmpsl
iret
pop
mov
push
dec
ljmp
sahf
loopne
pushl
cmpl
mov
jmp
call
leave
and
xlat
xchg
adc
out
add
cmp
test
and
sbb
or
pop
xlat
shrl
cmp
shll
cmp
outsl
lock
pushl
cmp
jb
mov
test
mov
maskmovq
notl
jno
xchg
and
xchg
int
pop
or
pop
xlat
enter
mov
jae
fists
lods
mov
adc
adc
xchg
jmp
xchg
das
xor
xor
pop
fisubl
in
out
insl
jmp
cld
fcmove
in
dec
dec
mov
fistpll
bound
jl
sbb
fsts
mov
pop
fnsave
test
mov
decb
std
ljmp
shll
jne
roll
lret
call
xor
mov
test
scas
pop
sarb
mov
inc
pop
cli
loop
pushf
call
cmp
dec
popf
jns
xor
hlt
cmp
ljmp
icebp
mov
addb
data16
pop
subl
es
mov
sbb
dec
arpl
shr
mov
jp
jmp
into
adc
or
xor
sub
pop
cli
dec
cmc
fstps
aad
cld
sbb
sub
incl
jns
mov
push
fwait
pop
jle
mov
mov
insb
fs
insb
pop
data16
cmp
and
fistpll
insl
das
inc
mov
mov
stc
mov
in
sbb
push
xchg
dec
mov
ret
lret
mov
cmpsb
xor
test
mov
dec
dec
mov
mov
lret
inc
enter
movsb
or
inc
lcall
cmp
lcall
gs
divl
or
ret
fcoms
movsl
ljmp
sub
mov
das
lret
ljmp
mov
stos
dec
mov
test
mov
sarb
adc
in
push
call
mov
fucomip
mov
mov
cs
adc
ljmp
lods
pop
cld
ja
hlt
jno
cmc
cmp
xlat
push
icebp
sbb
inc
jns
outsl
int
or
mov
pop
pop
dec
mov
push
lahf
jae
popa
jecxz
mov
incl
jmp
cltd
pop
ljmp
into
out
out
cld
incb
movb
out
clc
ss
push
xchg
xchg
mov
pop
pushl
cli
in
add
push
bound
sbb
lret
lds
mov
pushf
sub
mov
ss
movhps
mov
ja
cmc
aaa
clc
fimuls
sbb
test
call
and
pop
inc
jle
pop
adc
mov
mov
cmpsb
icebp
pushl
push
mov
jae
and
sbb
aas
cmp
sub
jl
clc
ljmp
outsb
ss
cmpsl
mov
inc
cmp
stos
sub
sbb
call
repnz
mov
das
dec
addr16
loopne
adc
lcall
rolb
mov
push
pop
inc
popf
sti
push
cs
adc
cmp
sbb
mov
scas
fcomps
jl
or
sub
div
loopne
mov
aas
jns
iret
dec
xchg
sub
and
scas
sub
out
stos
add
xchg
pushl
mov
fildl
arpl
subb
jno
ss
mov
pop
cmp
cmp
or
out
jg
stc
fisttpl
mov
test
stos
in
in
push
xlat
shrb
or
pushf
in
decl
xor
stos
dec
lahf
iret
push
js
or
lret
dec
jl
loop
push
pop
lret
jg
jle
lea
sbb
push
jne
sub
enter
add
and
insb
enter
pushl
and
jns
xlat
cs
bound
xlat
in
imul
loop
dec
fwait
lods
mov
inc
scas
fsub
stos
xchg
stos
rclb
jmp
and
sbb
icebp
out
data16
nop
add
outsl
push
adc
adc
aam
jg
ljmp
test
jle
fimuls
jge
sbb
mov
and
repnz
jmp
test
mov
pushf
inc
jecxz
push
inc
outsb
cs
cmc
ljmp
popa
or
inc
stos
jmp
out
and
mov
xchg
adc
aas
mov
inc
outsl
icebp
add
inc
fld
aam
cli
daa
fs
push
sbb
push
or
push
push
cmp
jb
ja
jo
out
adc
and
inc
loopne
fucomip
mov
cmp
dec
push
lods
mov
add
mov
or
scas
jg
pushl
and
mov
mov
cs
add
push
dec
mov
pop
xchg
cli
loopne
jg
mov
pop
mov
ljmp
imull
mov
into
push
xor
dec
mov
and
or
mov
pushl
adc
mov
and
xchg
mov
mov
lret
sbb
loop
ljmp
mov
mov
pop
fwait
push
jg
stc
jbe
in
xchg
mov
push
popf
push
repz
push
iret
orb
repnz
movsb
push
das
test
jp
ljmp
lods
cmovle
out
sub
sbb
dec
dec
rclb
add
mov
push
movsb
and
jne
dec
and
cli
pop
xchg
mov
mov
cmp
jl
dec
ljmp
pop
sbb
hlt
lret
in
adc
pop
icebp
pop
sub
cmp
incl
repnz
inc
mov
lock
pop
xchg
lea
loop
andl
ljmp
movsb
cmp
clc
aas
imul
notl
sbb
test
cwtl
cwtl
dec
ds
lods
adc
cmp
ljmp
in
xchg
adc
cmp
dec
outsl
cld
pushl
cmc
pop
xchg
and
sub
test
mov
sbb
jae
jno
jne
xor
and
je
pop
or
adc
xchg
xchg
jecxz
incl
jg
mov
pop
jnp
dec
mov
sti
in
mov
decl
pushl
add
cs
loop
fdiv
js
ljmp
pop
sub
and
lds
push
shlb
add
dec
sbb
jge
call
xor
mov
aam
jg
mov
adc
push
cli
push
std
repz
testb
ret
imul
pop
movsl
lods
les
or
and
ficoml
imul
test
dec
cltd
addb
icebp
sub
inc
cmp
cmp
mov
pop
push
jecxz
pop
out
xchg
sub
sbb
in
push
pavgw
shrd
and
inc
loop
sub
jmp
sub
pop
push
std
xchg
in
test
cmp
fisttpll
scas
jp
fdivr
call
call
cmpsl
sarl
push
dec
xor
ja
xchg
mov
mov
loopne
in
roll
xlat
dec
inc
push
loop
adc
fbld
stos
mov
inc
mov
dec
cmp
pop
pop
int3
arpl
pop
add
orl
and
pop
sbb
add
out
push
aad
jl
xchg
imul
xchg
js
jae
dec
mov
adc
mov
push
lods
pushf
leave
lcall
cmp
push
xchg
jg
shr
xor
aam
leave
inc
in
xchg
jecxz
insb
inc
and
xchg
add
leave
xor
or
xchg
cmp
jp
js
dec
pop
xchg
sub
mov
sbb
subb
jb
loopne
mov
gs
arpl
add
push
jns
loop
fdivr
pop
test
in
add
mov
lcall
fstpl
subb
mov
outsl
je
dec
popf
jno
sub
incl
mov
addr16
cmc
mov
int
sub
push
mov
push
inc
pusha
jg
incl
daa
adc
out
pop
fmull
sub
adc
and
ljmp
cmc
out
aad
inc
push
les
xor
imul
lret
cld
mov
pop
fadds
adc
stos
pop
lods
pop
mov
ror
cs
enter
or
xchg
dec
popa
mov
ds
das
outsl
lcall
in
cltd
rcrb
adcl
adc
repz
testl
cld
jg
fs
outsl
adc
mov
out
mov
jle
into
mov
jecxz
cmp
adc
dec
int3
lret
jmp
push
stc
cli
rcrb
lods
sti
push
orl
lock
adc
mov
jmp
xchg
dec
cld
cmp
inc
nop
mov
inc
rcll
adc
aad
in
les
lea
lea
pop
test
mov
jb
jns
ljmp
aad
xor
add
addr16
dec
rcll
aam
mov
xchg
loope
or
lcall
enter
mov
fidivrs
xchg
sbb
arpl
aaa
pop
loop
mov
loop
mov
dec
and
test
mov
jl
cs
xchg
cmp
scas
shrb
add
jmp
fidivs
jg
jnp
stc
dec
std
cmp
push
pusha
pop
jl
mov
jmp
cmp
popf
shrb
icebp
shlb
addl
call
jo
loopne
loop
mov
mov
add
push
mov
dec
in
mov
inc
xor
lods
sub
jae
mov
ud0
call
insb
in
mov
sti
bound
inc
cwtl
xchg
call
and
push
push
xchg
movsl
adc
pop
outsl
hlt
fistpl
cmp
lret
push
aam
ljmp
or
test
xlat
mov
mov
fisttps
xlat
int3
into
lods
loopne
incl
ljmp
out
flds
mov
scas
sub
mov
lods
mov
sub
mov
xlat
pop
pusha
addr16
mov
mov
enter
adc
ret
popa
cmp
and
mov
pushf
mov
and
ljmp
mov
xor
jmp
das
pop
xor
or
sub
fmull
hlt
push
aam
sbb
xor
mov
sbb
out
dec
lea
mov
fcoml
sbb
jecxz
outsl
jno
pop
xor
push
dec
ret
orb
adc
mov
pop
sub
push
addr16
cmp
add
call
mov
and
xchg
mov
loopne
scas
mov
shrl
push
mov
gs
add
mov
xchg
sub
fldl
xchg
jo
lcall
push
xchg
orb
mov
xchg
das
movsb
arpl
ret
xor
mov
xchg
add
shl
push
xor
imul
jg
inc
sbb
and
jl
stos
cmp
sub
pop
jl
jecxz
fistpl
pop
xor
aaa
decb
daa
mov
add
outsl
pop
test
mov
outsl
cld
decl
cmp
stc
xchg
jecxz
push
jb
jmp
aam
and
lea
decl
inc
sbb
clc
push
jg
pop
and
clc
pusha
xchg
adc
mov
icebp
lret
xchg
jecxz,pt
jb,pt
and
cld
out
sub
pushf
outsl
xchg
sbb
cwtl
bound
testl
adc
mov
inc
stos
in
xor
mov
sbb
pop
pop
dec
mov
push
pop
fbstp
add
ljmp
xor
xor
sbb
sub
jg
lds
inc
imulb
mov
cld
jmp
push
repz
sarb
push
fistpll
mull
pop
jecxz
pop
ja
pop
in
testb
xchg
fcomip
mov
loope
xor
iret
mov
xor
add
xor
fucomip
pop
jnp
aam
sbbl
jns
leave
jmp
lcall
out
pop
inc
cmp
xor
inc
cwtl
shlb
cmpsb
inc
cwtl
xor
lea
sbb
xchg
jp
sub
jge
add
push
ss
pop
mov
pop
xor
sbb
and
cmp
fnstsw
pushl
int3
sub
mov
jns
mov
xadd
mov
sti
mov
cmp
jg
fnstenv
mov
push
scas
insl
loop
rorl
in
test
jg
cmp
mov
cmp
lock
stos
add
cmp
adc
out
aaa
mov
adc
lea
sub
sub
jg
jo
dec
inc
sub
pop
mov
ds
outsl
xchg
add
std
ffreep
decl
dec
mov
ljmp
cli
movsl
mov
xor
pop
ljmp
shld
rol
cmp
mov
fwait
icebp
fwait
sub
push
and
cmc
jg
jb
xor
cmc
jno
je
push
fwait
movsl
jne
int3
dec
mov
cmc
mov
repz
push
mov
pop
cwtl
imul
push
lods
mov
mov
xor
push
lds
and
add
dec
pop
sub
mov
xchg
or
iret
jecxz
test
rol
mov
int3
xor
mov
pop
test
lods
pushl
les
fildll
lods
mov
insb
lods
iret
pushf
mov
out
loopne,pn
jmp
dec
xchg
stos
and
scas
adc
hlt
jle
jp
bound
push
fistps
mov
jmp
lods
inc
in
jp
cwtl
shl
ret
dec
out
stos
mov
out
xor
sbb
xchg
push
xchg
call
sahf
sti
rcrl
lods
jbe
imul
jnp
xor
call
das
cmc
aaa
clc
mov
sti
fists
mov
or
jg
mov
sti
mov
clc
sbb
andb
inc
in
test
push
mov
loop
or
divb
and
xchg
cmc
stc
sub
out
inc
sub
pop
ljmp
in
jp
or
enter
jno
push
bound
push
call
popa
aaa
testb
clc
inc
sub
ss
pop
lds
mov
xchg
pop
xchg
sti
in
mov
scas
lahf
inc
pop
mov
out
rcrl
push
mov
leave
test
and
cmp
push
into
mov
dec
std
sbb
dec
jge
fwait
bswap
mov
add
stc
aas
in
ffreep
dec
in
outsl
in
lcall
fld1
in
shlb
mov
xor
stc
jge
or
cmp
sbb
push
and
out
fiadds
jnp
ret
pop
sar
xchg
insb
push
inc
adc
mov
stos
push
lods
mov
xchg
or
push
xchg
adc
loopne
fmull
pop
sub
mov
shll
adc
add
dec
ljmp
fldcw
inc
mov
movsb
or
incl
pop
sub
loope
addr16
jl
jae
push
mov
push
fcmovnbe
lcall
cld
mov
inc
aad
jnp
scas
mov
dec
lahf
dec
or
mov
mov
fs
pop
addb
movsl
sub
int
pushf
shl
lea
scas
les
or
inc
rcll
in
repnz
stos
jge
xor
jae
orb
xchg
pop
mov
cld
push
pop
push
xor
movsl
dec
jno
decl
xchg
test
sbb
lock
dec
sbb
lret
jp
jp
lods
xor
sbb
and
jmp
xchg
ss
lds
mov
arpl
cmp
sub
rcrb
incl
fistps
adc
sysret
xchg
push
mov
and
xchg
pop
and
jnp
add
pop
jle
pop
mov
sub
ret
mov
mov
sbb
rorb
sub
idivl
call
gs
sbb
stos
mov
push
inc
les
test
push
pusha
aad
scas
cld
xchg
out
idivb
jmp
xchg
cmpsl
jg
leave
ret
jb
roll
out
dec
jbe
jnp
xor
mov
sbb
rcll
into
decl
aam
mov
aam
pushf
adc
fcmove
mov
sti
popf
pop
sbb
sub
int3
idiv
add
jb
frstor
xor
fucomip
call
arpl
scas
hlt
mov
mov
cwtl
aaa
mov
movsb
fisttps
loope
xchg
jp
lcall
call
mov
pop
sbb
jmp
push
push
pop
loop
jle
sub
sbbl
test
mov
daa
or
hlt
ret
in
cli
mov
mov
icebp
outsb
scas
incl
pop
jge
inc
jbe
mov
pop
xor
mov
in
out
jp
jo
push
subb
sbbl
arpl
fistl
dec
add
xchg
dec
int3
sub
add
sub
jbe
call
dec
inc
arpl
xor
xchg
mov
jae
pop
jns
or
outsb
int3
pop
cmp
mov
pop
std
call
out
stos
negb
inc
popa
cmpsl
and
stos
push
imul
icebp
xor
push
sbb
push
inc
xchg
iret
mov
cld
dec
jge
sbb
into
fwait
xor
jns
adc
pop
mov
jnp
mov
cmp
outsb
arpl
mov
into
adc
pop
fcomi
out
mov
scas
cmc
mov
outsl
hlt
incl
js
xlat
and
movsb
adc
clc
jg
jmp
ja
ret
fwait
repz
data16
fistps
lret
imul
push
jb
dec
add
cmpsb
and
xchg
loop
pop
lret
mov
andb
push
mov
add
push
add
sbb
jae
sbb
lret
xor
or
popa
movsb
mov
loop
mov
fnstsw
mov
mov
les
mov
pusha
in
fs
mov
adc
loope
aad
inc
cmp
xchg
lret
inc
lock
rcr
clc
sbb
aaa
sbb
adc
jns
mov
loopne
xor
fistpll
stc
fiaddl
movb
hlt
mov
decl
sahf
clc
imul
jecxz
pusha
pop
jle
mov
cli
inc
jl
mov
xor
call
cli
mov
mov
lcall
inc
or
scas
lock
in
ljmp
decl
xchg
push
arpl
xchg
mov
mov
jle
and
push
mov
ljmp
roll
fwait
pop
jmp
xor
call
mov
jnp
xor
xor
mov
loope
pop
ljmp
adc
fldl
pop
lret
fs
out
jnp
mov
cmp
jg
repnz
movsb
xor
xor
and
inc
insl
loopne
ljmp
leave
cpuid
je
loope
outsl
icebp
shlb
sub
rorl
pop
out
push
insb
sets
jg
fidivrs
fidivrl
cmp
out
scas
lods
sti
js
xchg
cmc
pushl
js
inc
sahf
xor
jnp
rcl
clc
jge
cmc
aas
loop
jle
push
jmp
icebp
mov
repz
inc
mov
sbb
add
push
cs
lea
mov
ja
sbb
and
pop
ljmp
push
js
sarl
lahf
in
sub
pop
mov
lcall
jae
adc
jg
movsl
aaa
lcall
adc
stos
outsl
inc
inc
decl
movsb
rclb
xchg
mov
repz
cmp
cmc
sti
iret
ss
mov
repz
lds
imul
push
jmp
push
pushl
mov
lods
adc
fiadds
mov
mov
mov
and
and
shlb
popa
fisttps
jmp
loop
mov
fs
out
popf
inc
lahf
lds
adc
jmp
push
fnstsw
sub
jnp
jne
or
cltd
iret
dec
mov
inc
ds
mov
mov
xchg
pushf
and
cmc
xchg
mov
mov
push
mov
imul
cli
outsl
jno
lcall
fistpll
gs
or
loopne
ljmp
jl
mov
out
xor
lds
mov
fildll
mov
mov
into
mov
dec
jg
outsl
std
jg
loopne
dec
dec
add
xor
pushf
sti
jne
cmc
fcoml
pop
fistpll
iret
add
stc
pop
xor
iret
push
ret
insl
sbb
bound
add
jecxz
ljmp
call
aaa
sbb
test
dec
add
pop
xchg
pop
out
addr16
cli
movsl
xchg
mov
lods
idiv
jmp
sub
pop
mov
mov
jb
lcall
and
xchg
push
jg
shlb
add
or
test
push
xchg
in
call
out
dec
mov
sbb
subl
push
stc
pop
sar
call
fisubl
outsb
fsubrs
cmc
xchg
sub
sbb
ds
int3
dec
shrl
pop
pop
sbb
lock
cmp
jmp
pop
dec
mov
pushf
or
lcall
jae
nop
sti
jmp
cli
xchg
adc
pop
cmp
dec
lret
xor
mov
xchg
out
sub
outsl
icebp
sbb
popa
mov
pop
sub
out
pop
jge
pop
decl
push
cmp
and
xor
adc
scas
mov
out
ds
in
push
cwtl
cmp
movsb
sub
xchg
clc
cwtl
clc
xchg
push
cmpsb
mov
ljmp
vpcmpeqw
push
rorb
inc
fs
inc
lcall
popa
or
es
pushf
loopne
inc
in
and
les
rcll
fisttps
sub
ss
push
insb
leave
dec
sub
push
push
ljmp
push
jno
test
sub
mov
adcb
ljmp
clc
pop
cmp
mov
xor
adc
imul
ljmp
push
movsl
sbb
out
push
cs
sti
loope
xor
out
inc
pop
pop
inc
bound
ret
jmp
jle
inc
jl
cmp
pusha
out
push
push
sub
and
or
aad
xchg
in
inc
mov
jns
push
sbbb
sahf
inc
cmp
lods
lcall
pop
push
addr16
sub
fs
imul
jnp
sbb
pusha
jmp
pop
xchg
idivl
outsl
jb
or
sbb
icebp
inc
arpl
stos
ficomps
sub
and
jbe
adc
jge
mov
mov
movsl
pop
push
cmp
mov
fxch
mov
add
push
test
pop
loop
push
leave
in
xor
and
inc
test
pop
pop
pusha
arpl
pop
mov
pop
cmp
mov
into
repz
stc
nop
in
imul
fcmovnb
dec
movl
loop
lcall
jno
jle
xchg
mov
sub
je
adc
jnp
in
in
call
lods
cmp
cmp
pop
test
adc
cwtl
je
imul
lcall
jne
lods
sub
push
fdivl
insl
loope
inc
push
jl
adc
ds
jg
loopne
int
in
shlb
xor
popa
lret
roll
xor
mov
dec
insl
icebp
mov
loope
adc
pop
jbe
lcall
in
inc
in
cwtl
dec
std
xor
mov
fists
nop
loopne
adc
fisttps
xchg
push
jns
inc
ss
movsl
pop
xor
test
sti
call
cli
call
xor
popa
cmp
mov
stos
xor
mov
xchg
jbe
out
lock
mov
push
pushf
or
daa
sbb
incl
scas
call
cld
xor
sbb
idiv
incl
in
dec
mov
leave
inc
shlb
fwait
mov
js
fimuls
std
incl
aaa
jns
jp
xorl
jbe
shl
pop
dec
jle
jno
and
aaa
sbb
pop
int3
inc
stos
cmc
inc
rcll
xor
xchg
dec
pushf
pop
andl
std
jp
mov
adc
das
call
mov
pop
sub
loopne
sar
fisubrs
adc
dec
pop
cs
sbb
lcall
ret
iret
lcall
jo
stc
and
sub
int
dec
leave
ljmp
decl
fsubs
mov
xchg
arpl
pop
popa
stos
rorb
popa
mov
icebp
xchg
inc
out
jmp
cmpsb
sbbb
cmp
push
into
xchg
push
inc
or
daa
lea
sbb
xchg
and
adc
jbe
aaa
cli
test
xchg
cmpsb
lret
lret
push
test
stos
addr16
and
lods
incl
enter
xchg
pop
sub
add
or
add
jg
jbe
pop
mov
cmp
xchg
lcall
aas
data16
jge
inc
cmp
lcall
xchg
loopne
and
fadds
bound
mov
push
inc
je
mov
dec
sbbl
out
insl
sub
jnp
jg
jg
push
mov
inc
sbb
fbld
dec
test
jbe
fiaddl
test
decl
xchg
push
jl
out
mov
sub
scas
loop
mov
add
jg
mov
int
dec
test
xchg
insb
movsl
xchg
enter
xchg
lcall
push
mov
dec
mov
ret
jp
and
fistpl
incl
adc
adc
shlb
mov
aaa
popa
jno
push
jg
xchg
lds
inc
call
push
pushf
pop
test
or
in
std
xchg
pushf
out
sub
stc
daa
mov
xchg
popf
icebp
in
push
mov
cmp
push
nop
out
pushf
repz
stc
mov
cwtl
shlb
xchg
das
lock
fnstsw
jp
out
mov
stos
insl
lcall
lcall
sub
cli
mov
sbb
mov
jno
fidivl
xor
mov
push
pop
rcrb
cmp
inc
cmp
inc
cmp
dec
lcall
ret
sub
xchg
push
outsl
cld
pop
call
adc
sub
into
mov
ljmp
cld
data16
dec
stos
iret
cmpsl
xor
stos
jns
pop
sbb
decl
mov
or
inc
add
addr16
xchg
xchg
mov
mov
stos
jbe
mov
movsb
mov
or
dec
js
add
adc
cmp
fmuls
jl
adc
lret
std
dec
cld
popa
fidivrs
mov
adc
dec
out
call
imul
imul
into
lret
jmp
or
pop
cmp
pushl
clc
mov
lds
mov
xchg
dec
push
repz
repz
jmp
in
xchg
add
ficomps
orl
jmp
push
push
test
mov
subl
test
inc
pop
adc
gs
mov
mov
scas
inc
push
out
cmp
dec
pop
outsb
incl
mov
pop
sbb
pop
cmp
sub
clc
in
pop
adc
nop
sub
movsb
fcos
inc
das
sahf
shl
aaa
adc
addr16
cmp
call
pushl
repnz
mov
cmp
pop
xchg
fs
lea
fldt
sub
outsb
mov
inc
ret
inc
pop
loopne
dec
jle
mov
jl
xchg
leave
lcall
pop
adc
iret
repnz
jbe
lea
adc
jns
sti
cwtl
add
ljmp
ficoml
add
dec
cltd
mov
lahf
mov
outsl
sbb
pop
mov
lea
subl
pusha
int3
push
out
insb
ljmp
mov
mov
jne
adc
loopne
mov
xchg
in
and
jge
jne
add
int3
jmp
sahf
mov
jmp
fcmovu
push
aad
aas
in
and
cmp
int
cld
sub
mov
jp
fcmovb
cmp
mov
cltd
lods
jne
ljmp
push
rcll
arpl
inc
dec
test
or
test
ret
adc
cmp
nop
movb
inc
loope
mov
incl
lret
in
sarb
cltd
push
divb
negb
andl
test
insl
nop
jmp
sub
lcall
pusha
icebp
enter
dec
jecxz
and
cmp
inc
and
test
sahf
ss
mov
popa
ss
ret
ja
popf
es
int3
inc
adc
jle
das
std
fistpll
jmp
lds
push
inc
mov
std
sbb
sub
dec
pop
das
into
pusha
in
sbb
inc
cmp
aaa
clc
jge
cs
daa
push
jnp
cltd
test
std
decl
jp
fistl
push
sbb
xchg
xor
lock
out
ljmp
cmpsl
cld
inc
pop
gs
in
jp
pop
scas
testl
cmpsb
xchg
arpl
xchg
cli
mov
pusha
sub
mov
lock
jg
pop
and
and
imul
add
mov
ss
pop
insl
call
jmp
mov
jns
stos
mov
and
decl
push
fcompl
push
movsb
mov
outsb
stos
xchg
mov
popf
sbb
push
jns
cwtl
jl
lahf
or
decl
fwait
or
aad
leave
loopne
and
push
xchg
cli
lea
sbb
xchg
xlat
add
outsb
add
ljmp
push
inc
inc
pushf
cmpb
xor
sub
fninit
pushl
or
lods
and
and
test
xor
in
jbe
test
xor
rol
or
aam
call
pop
jp
jns
cli
insl
pushf
scas
xchg
lds
out
mov
jecxz
loopne
jecxz
fwait
mov
pop
fimuls
into
pop
gs
ljmp
int3
fadd
pop
test
push
pop
sub
sub
pushl
dec
sub
xchg
dec
lea
jno
adc
add
mov
out
es
je
loop
out
lods
add
push
ficoml
mov
and
push
add
dec
push
sbb
sti
or
pushl
sbb
addr16
mov
ret
out
mov
jg
push
test
push
jmp
sub
imul
jp
cwtl
aaa
pushf
mov
lods
call
push
mov
into
cmp
adc
pop
cwtl
xor
aam
pop
inc
outsl
decl
adc
sub
jg
call
loope
xor
mov
mov
enter
cmp
enter
adc
lahf
sbb
nop
mov
dec
and
pop
cli
lods
and
in
repz
jae
inc
jno
lds
in
test
push
jns
adc
push
sub
jbe
mov
jl
xor
dec
mov
or
int
cld
jnp
jmp
dec
out
popl
cmc
xor
jecxz
rcll
push
xor
xor
insb
cltd
setl
movsl
rolb
fiadds
push
xor
idivl
jmp
mov
cwtl
inc
pop
sub
enter
xchg
inc
std
test
das
ljmp
gs
stc
push
cld
jp
jl
out
xor
mov
test
inc
lret
xlat
into
cmp
idiv
inc
fdivrp
enter
mov
lock
xor
imul
mov
das
addl
sbb
out
pusha
jl
es
das
mov
adc
cmp
test
iretw
cmp
in
sub
add
inc
sbb
push
hlt
arpl
cmp
lcall
xor
mov
arpl
stos
inc
insl
xor
sub
sar
jmp
popf
jbe
cs
sbbb
add
jge
xor
jnp
popf
or
xchg
sub
lock
stc
ljmp
into
pop
sub
sub
jno
inc
test
push
jnp
inc
pop
jmp
in
jecxz
push
mov
pop
or
ljmp
fsubrp
fs
gs
ss
dec
movb
jg
test
cmp
fdivl
test
jg
xchg
push
jg
popa
pusha
lods
insb
insb
roll
xchg
cmpsl
pop
aaa
push
jno
xor
xor
ljmp
add
ja
out
cld
or
or
lret
or
in
popa
cmpsb
xor
inc
jecxz
insb
cmc
sbb
lea
outsl
std
decl
and
jno
mov
mov
add
jg
scas
xor
in
mov
fnstsw
push
loope
xor
ja
adc
or
adc
cli
mov
popa
adc
sti
and
push
jb
incl
pcmpeqd
lcall
jl
jns
adcl
int3
push
cwtl
fs
rcrb
xadd
jo
push
xor
loopne
decl
cmc
cmp
and
mov
inc
bound
push
mov
sub
dec
daa
jnp
xchg
iret
sbb
out
mov
out
jg
jg
repnz
jg
push
jmp
dec
push
mov
inc
adc
fsts
sahf
pop
das
imul
cmp
jp
out
mov
jb
jg
pop
and
fwait
bound
je
insl
jmp
decl
sub
shll
pusha
fcmove
fdivl
xor
cli
outsl
icebp
adc
xchg
cmc
mov
and
not
call
movsl
pop
or
pop
pop
stos
adc
cmc
popf
jo
pop
and
shll
shll
sub
mov
pop
mov
adc
cli
mov
lret
pop
jae
mov
push
jo
push
into
cli
incl
cmp
dec
rorb
movsb
data16
mov
mov
shll
stos
dec
pop
pop
loopne
inc
sub
jge
leave
fs
pop
je
xor
jmp
dec
rcrb
mov
sub
adc
push
pop
push
sub
mov
pop
xchg
jg
mov
hlt
out
push
or
lret
cmp
test
mov
mov
inc
mov
or
pop
pop
out
mov
jg
adc
out
ss
add
dec
jbe
lcall
cwtl
adc
jl
xor
add
adc
fadd
incl
cmp
and
mov
add
jo
fwait
mov
xchg
test
lds
enter
aam
pop
or
sti
pop
mov
decl
or
pop
jg
stos
sbb
loopne
daa
das
jmp
aaa
mov
push
xor
add
adc
test
xor
add
xchg
aad
cmc
lahf
les
xor
out
lahf
roll
lret
mov
stos
in
imul
insl
mov
and
je
pop
cli
sbb
and
daa
push
pushl
insb
cwtl
aam
outsb
dec
mov
and
fistpll
or
inc
adcl
adc
xor
push
ljmp
pop
xchg
mov
mov
lock
jg
mov
ja
rcrb
sbb
rcl
mov
jmp
push
incl
mov
xchg
mov
jno
adcl
pop
clc
lcall
jb
mov
jg
dec
or
dec
aad
jg
lods
scas
push
jae
pop
fidivs
pop
fsub
cwtl
or
movsb
in
in
adc
or
sbb
cmp
jp
in
imul
mov
incl
cs
push
mov
scas
fmull
sbb
cld
pushl
xchg
ja
sub
bound
mov
jp
sbb
lcall
mov
sahf
and
popf
stos
sub
cmpsl
xorb
or
test
incl
test
add
popa
imul
jl
gs
pop
ljmp
pop
lods
jnp
in
mov
push
mov
and
ljmp
jge
scas
cmp
xor
pop
and
and
loop
call
adc
frstor
sarb
data16
hlt
pusha
sub
jg
jno
enter
and
loope
in
insb
ljmp
inc
jne
push
mov
and
fs
std
cmc
aad
xchg
mov
pop
dec
push
ss
mov
cmp
inc
jmp
inc
push
pop
cmc
or
mov
ljmp
push
insb
add
xor
mov
mov
mov
jp
das
icebp
push
inc
mov
jmp
and
call
pop
xchg
sbb
mov
or
movsl
lods
or
mov
pop
lock
in
jle
mov
fsubrs
lods
xorl
pop
loopne
pop
stos
call
xchg
cmp
negb
and
inc
mov
mov
push
sub
jmp
add
int
mov
loope
sbb
pushf
jmp
lods
pushf
jg
jbe
dec
les
outsb
xor
in
xor
fldt
xor
pop
xor
pop
les
or
jg
mov
sub
pop
jo
scas
sub
pop
xor
and
mov
out
mov
mov
lock
or
pop
lahf
lods
lret
jb
or
xchg
ljmp
ficoms
insl
out
test
in
push
lds
sti
sbb
pop
dec
xchg
jle
ror
mov
int3
push
scas
push
out
add
xchg
in
fdivrp
jg
mov
filds
push
ljmp
mov
ds
push
shr
incl
aaa
cwtl
jecxz
pop
mov
jle
cmpsl
std
daa
xchg
testl
mov
xchg
js
cmp
loope
scas
das
mov
push
push
xor
sarl
add
jmp
decl
std
pop
cs
jecxz
adc
xor
push
popa
sub
lahf
xchg
sar
ljmp
cmp
mov
dec
cmp
dec
push
sbb
push
cmpsl
and
repnz
fs
jbe
add
xchg
lret
outsl
lock
fistpll
lods
push
sahf
imul
shlb
sbb
incl
ret
adc
scas
xchg
lret
sbb
repnz
and
mov
jo
mov
std
pushl
cmc
repz
jge
mov
dec
lret
cmp
lret
pop
sbb
mov
aaa
lret
loopne
rorl
jns
outsb
out
mov
mov
outsb
lock
inc
ficoms
mov
mov
dec
add
sub
jnp
loop
decl
adc
xchg
adc
ret
sub
pop
lods
jno
lcall
outsb
pop
push
and
and
hlt
cmp
leave
inc
shll
in
add
outsl
fmull
push
lret
stos
ss
outsl
mov
pusha
add
jl
les
mov
scas
fiaddl
pop
dec
pop
add
or
cmpsb
test
xchg
leave
aam
lahf
pop
xor
inc
mov
pop
outsb
repz
sub
decl
fstpl
cli
hlt
adc
and
movsb
inc
sbb
pop
mov
or
dec
std
cld
das
sar
xor
add
xchg
sub
ja
aad
jecxz
mul
fs
mov
fadd
push
cmp
mov
mov
into
push
mov
add
out
xchg
adc
sbb
aas
movsl
and
iret
call
sbb
xchg
jg
ret
adc
or
mov
lods
outsl
mov
jg
jnp
aas
es
or
cmp
mov
jl
loop
or
dec
push
mov
push
push
lcall
or
inc
daa
sbb
movsb
aad
mov
cmp
add
jo
pop
sub
daa
lret
ljmp
decl
mov
jl
cmp
inc
xchg
mov
pop
mov
lahf
push
fnstsw
ret
movsl
lods
rcl
lods
rclb
jmp
jno
push
pop
std
inc
pop
pop
xchg
pop
pop
popa
adc
clc
fildll
or
sbbb
mov
mov
loope
adc
adc
rorl
jl
sub
push
inc
jmp
mov
fiaddl
loope
incb
mov
test
cmp
mov
xchg
and
pop
jne
lods
inc
adc
in
lods
jmp
into
call
cmp
and
sbb
xchg
jg
mov
aam
cwtl
leave
pop
sbb
mov
adc
repz
mov
decb
jmp
pusha
sbb
jbe
mov
mov
rol
test
inc
xchg
repnz
xlat
sub
pushl
lods
decl
imul
leave
jne
fldl
pushl
aaa
and
xchg
ret
add
inc
aaa
push
jns
outsl
lock
clc
out
xor
cmc
inc
test
movsl
jnp
and
lcall
pushl
dec
sbb
je
dec
jecxz
addr16
inc
and
xor
lods
dec
imul
add
pop
std
outsl
xor
mov
fs
xchg
movb
aam
xor
loop
mov
push
adc
add
mov
mov
mov
ljmp
iret
lods
sbb
or
xchg
dec
push
jmp
idivl
pop
jecxz
mov
call
scas
and
aas
mov
int
arpl
jmp
and
jmp
ret
pop
movsb
and
jg
cmp
jnp
call
out
cld
lods
mov
ljmp
inc
cltd
imul
scas
mov
in
or
add
fists
mov
push
adc
mov
imul
sti
mov
fucom
jg
loop
lret
pop
cmp
sar
sub
mov
in
pop
ret
mov
sahf
sbb
incl
aam
add
jmp
imul
xchg
ja
inc
pushf
xor
push
mov
aaa
rcrl
jmp
add
mov
rcll
pop
fwait
scas
xchg
adc
pop
ljmp
shr
jmp
insl
dec
leave
mov
inc
arpl
decl
stos
movsb
pushf
movsl
jle
xor
movsb
rcrb
mov
xchg
xor
jmp
and
out
push
imulb
pop
rcll
pop
nop
add
pop
mov
stos
adc
arpl
imul
loope
sbb
sbb
int
inc
pop
xor
sbb
in
loope
and
jmp
aaa
mov
mov
pop
inc
scas
inc
out
imul
insl
mov
mov
inc
adc
jno
inc
adc
sub
and
or
pop
clc
mov
out
lcall
jecxz
push
orl
jl
das
mov
imul
std
movsb
xchg
popa
filds
dec
ljmp
mov
add
ljmp
pop
lods
dec
pop
inc
pop
pushl
test
nop
adc
mov
insb
sub
mov
sbbl
imul
mov
cltd
push
dec
ljmp
hlt
mov
push
fmull
sbb
sub
lcall
pop
adc
pop
inc
push
cltd
xor
icebp
sbb
test
push
js
xchg
adcb
into
out
lods
sbb
cli
out
push
std
or
pop
in
pop
ret
divl
mov
mov
mov
mov
lods
dec
out
lea
dec
setns
pop
xor
iret
or
mov
mov
out
addr16
sub
cmp
stos
pop
call
xor
gs
xchg
outsl
cmpsl
std
loopne
pop
jg
sub
or
mov
outsl
lods
push
das
icebp
jmp
ljmp
push
inc
add
cs
fs
lock
inc
sti
in
out
ret
popf
mov
or
add
mov
das
mov
call
push
arpl
bound
sbb
jbe
pop
add
mov
lret
pushf
int
and
scas
adc
test
outsl
xor
adc
shl
adcb
pop
jns
pop
test
rcrb
data16
add
xchg
add
inc
add
test
imul
mov
pop
fidivrl
int3
push
mov
or
mov
movsl
mov
test
stc
daa
inc
mov
mov
jecxz
lret
mov
addr16
leave
mov
mov
mov
and
dec
mov
cmp
and
pop
inc
cld
jg
les
lock
cmp
jg
jg
add
cld
xchg
lods
inc
sub
jne
mov
cmp
xor
jbe
cld
mulb
push
or
mov
test
pop
popa
out
fimull
lcall
fistps
sarl
test
ss
adc
sbb
cmp
pop
cli
and
adc
push
std
cmpsb
jo
fadd
cmc
imul
and
jg
aaa
ja
mov
imull
insb
loope
sarb
mov
inc
xchg
in
popa
mov
in
inc
cwtl
xchg
leave
gs
in
out
xor
leave
in
xchg
xor
mov
xor
pop
repz
adc
mov
xchg
aas
mov
sub
call
mov
mov
test
inc
jb
add
orb
adc
hlt
jge
test
aad
out
xor
xchg
out
insl
pop
scas
pushl
add
jmp
iret
jecxz
jb
int
das
cmp
adc
decl
sti
daa
xchg
shll
popf
push
and
pop
add
pushl
jp
mov
adc
popf
inc
pop
push
popa
xor
orl
adc
mov
cli
out
sbb
add
xchg
fwait
jp
les
test
inc
adc
push
mov
adc
lock
fistpl
test
jp
pop
cmp
push
sbb
lods
sub
movsb
call
or
test
aad
xchg
js
shlb
hlt
mov
rolb
add
jg
das
call
xor
push
pop
mov
outsb
inc
lcall
xchg
and
mov
mov
rolb
xor
lret
mov
pop
pop
clc
mov
dec
push
cli
ds
inc
mov
jg
clc
clc
or
jne
and
xlat
xchg
push
and
repz
imul
push
aad
sar
lock
ljmp
stc
and
sbb
cmc
inc
pop
jecxz
repnz
or
sub
lods
cmp
mov
xchg
aad
dec
scas
scas
mov
insl
or
out
xor
jg
dec
int
xchg
mov
aam
test
jecxz
pop
jb
out
aaa
adc
aaa
mov
repnz
and
scas
mov
mov
xchg
mov
mov
mov
push
or
xchg
out
jne
incl
pxor
sub
addr16
push
iret
pop
sbb
mov
adc
xor
cmc
test
in
fstpl
incb
and
ds
inc
stc
insl
outsl
hlt
jg
ret
rclb
pop
les
pop
cvttps2pi
jg
incl
cmp
adc
fwait
mov
add
or
pop
adc
mov
cmp
idiv
mov
mov
adcl
cmp
jg
mov
pop
sub
insb
in
fnstsw
mov
push
xchg
sti
imul
inc
xchg
mov
xlat
or
jmp
xor
aad
cmp
ss
pop
lock
fs
out
mov
decl
test
push
mov
sub
mov
mov
push
pushf
adc
sub
jg
mov
cmp
insl
push
mov
stos
jb
mov
in
dec
js
sub
dec
adc
fidivrs
filds
out
dec
stos
shl
sub
shl
adc
add
aas
ds
adc
and
pop
fldcw
mov
xor
ds
dec
lret
lds
mov
jg
in
lcall
sub
mov
push
xchg
insl
jg
pushl
jle
cmpsl
fisttpll
jge
mov
mov
dec
subb
xchg
pop
idivl
jl
cmpsb
sar
mov
mov
adc
ja
lcall
mov
ljmp
cmc
dec
les
sbb
xchg
xor
mov
sbb
mov
jne
fs
in
jnp
fiaddl
mov
lock
ljmp
adc
add
mov
cmp
mov
rolb
fs
xchg
aaa
clc
das
rorb
mov
push
xchg
or
inc
sbb
add
ljmp
insl
sbb
lds
clc
lret
and
cmp
mov
aad
mov
jb
push
in
test
jl
loope
xor
shl
push
jg
push
ret
push
stos
push
into
mov
movsl
popa
pusha
jmp
xchg
loopne
push
ficomps
movsl
icebp
out
push
cmp
sbb
cmp
or
fxtract
or
nop
dec
adc
and
stc
pushl
clc
call
jo
mov
adc
jns
arpl
mov
xor
jae
call
mov
andl
mov
jg
push
ss
cwtl
push
frstpm(287
ljmp
sub
push
push
sarl
pop
push
ret
mov
shl
sbb
push
or
sbb
test
stos
call
decl
pop
mov
lea
sbb
test
incl
dec
jne
mov
int
cmp
sub
loop
scas
push
aad
movsl
into
sbb
mov
push
dec
in
in
decl
push
or
call
push
int
dec
fmuls
and
out
cli
jg
push
jbe
add
sub
outsb
lods
das
cmc
fildll
push
mov
push
cmp
dec
pop
call
sbb
jnp
pop
cli
repnz
testb
push
aam
or
add
ficoms
sub
lahf
inc
iret
ret
fldcw
push
cld
add
mov
xor
jl
into
pop
cmp
mov
and
fs
test
adc
mov
dec
leave
jmp
adc
shr
insb
ljmp
or
loop
push
jg
inc
inc
stos
and
jb
loope
or
push
incl
dec
add
push
dec
sub
stos
scas
outsl
xchg
jno
lods
test
ljmp
incl
inc
sarb
dec
sbb
xlat
push
out
cmc
mov
mov
int
icebp
add
xor
jnp
xor
addr16
pop
push
and
stos
call
popa
or
decl
fld
leave
and
movsb
lods
mov
and
xor
push
out
cmp
jno
sbb
push
mov
shl
pop
xchg
mov
xchg
or
and
adc
inc
decl
outsb
sbbl
xchg
add
movhps
jmp
cmp
xchg
add
sbb
rolb
iret
sub
mov
inc
in
push
inc
jno
std
mov
dec
mov
push
mov
jecxz
mov
sub
inc
popf
inc
sub
aaa
jle
push
or
in
sbb
fnstcw
pushl
fadd
mov
lret
sti
lods
jo
ja
mov
incl
mov
hlt
pop
xchg
jle
adcb
or
jg
mov
dec
outsb
mov
jnp
js
pop
test
rclb
call
sub
lds
and
in
imul
jnp
outsl
insl
pushl
sti
mov
sysenter
xor
xchg
pop
ljmp
lds
pushf
sbb
sbb
add
sbb
test
jg
jp
cwtl
loope
add
outsl
dec
push
and
jmp
das
push
mov
or
or
cmpsb
aaa
movsl
mov
subl
xor
mov
fdivs
into
inc
stc
fimuls
aam
icebp
mul
test
rolb
mov
cmp
stos
inc
cwtl
cmp
cmpb
xchg
xchg
mov
std
adc
inc
popa
pop
cmp
sbb
jg
incl
mov
push
icebp
xchg
or
and
pop
mov
sbb
jo
or
jnp
push
mov
dec
pop
lods
cmc
pop
xchg
int3
lret
mov
call
xlat
xchg
out
orl
out
aam
pop
xor
sbb
inc
push
add
imul
sbb
mov
out
in
inc
lcall
fs
lret
sbb
pop
loop
mov
test
insb
adc
or
cmp
xor
lods
sbb
lcall
inc
leave
inc
adc
repnz
mov
push
int3
xor
lcall
cmp
aad
je
insb
xor
testb
fwait
dec
aam
inc
mov
mov
mov
incl
mov
icebp
sbb
clc
cwtl
sbb
out
push
inc
dec
in
inc
jg
xlat
out
pop
inc
rcrb
ljmp
dec
iret
push
fstpl
outsl
push
xchg
lds
jnp
cmp
aaa
add
add
inc
fiadds
fists
test
lcall
insb
or
lahf
and
jl
lea
cli
int3
lods
pop
adc
in
addb
cld
lcall
test
fldt
daa
add
and
sarl
les
imulb
xor
pop
sahf
test
std
call
sti
sbb
and
mov
dec
fnstcw
call
xchg
mov
out
faddl
adc
in
dec
das
mov
dec
mov
jmp
xor
jb
addr16
stos
and
idiv
ret
cli
jae
out
mul
outsl
mov
test
pop
rcll
lcall
sbb
aas
mov
pusha
pop
pop
clc
dec
repz
sub
pop
ljmp
inc
mov
jge
call
cli
ljmp
pop
shlb
dec
sub
sub
int
pushf
pop
push
pop
loopne
decl
mov
jle
test
cmc
fucomip
and
jle
outsb
mov
insl
cmp
mov
flds
jo
cmp
jnp
jmp
lcall
mov
insb
push
dec
fiadds
ret
push
adc
cmpsb
mov
inc
inc
test
inc
out
dec
mov
std
fistpl
sub
xchg
fidivl
push
sub
xchg
movsl
inc
decl
push
rorl
inc
scas
aaa
ljmp
je
sub
mov
ljmp
nop
dec
cmp
lret
add
mov
test
clc
int3
loop
sub
jecxz
sarb
mov
sarl
jnp
pop
jo
xor
ljmp
icebp
mov
fdivrl
mov
shrl
dec
cwtl
sbb
adc
movsb
xchg
jg
mov
imul
jno
nop
mov
push
mov
das
lock
jnp
dec
jbe
lahf
test
dec
call
lcall
xchg
mov
lods
push
fildll
je
lahf
shll
int
jg
pop
daa
mov
dec
enter
or
xchg
dec
sbb
ljmp
fcmovnbe
jnp
daa
imul
sub
mov
adc
mov
popa
idivb
mov
lret
scas
jp
jg
test
sub
cs
jae
mov
xorb
test
dec
loop
xchg
decl
incl
andb
fldcw
and
jo
sbb
dec
outsl
jno
mov
cli
arpl
cli
icebp
outsb
jecxz
lds
lret
fiadds
sub
pushl
int
sub
xchg
scas
mov
aad
stos
stos
xchg
ja
pop
push
adc
in
lcall
data16
cwtl
hlt
ja
rclb
mov
mov
push
jmp
insb
fnstenv
scas
fiadds
jmp
aaa
sub
adc
xchg
jae
push
lret
xchg
sbb
imul
jg
lods
test
jnp
pop
pop
fdivr
mov
inc
hlt
and
test
icebp
decl
sarb
aad
std
ljmp
fstps
add
test
dec
filds
clc
ljmp
xor
jp
xchg
pop
jnp
mov
aaa
or
data16
pop
jmp
outsl
push
out
pop
jbe
xchg
and
mov
rcll
xlat
dec
xor
lock
ret
xchg
das
lahf
inc
mov
dec
adc
loope
jbe
ljmp
andl
adc
pop
lcall
aad
movl
mov
fwait
and
jmp
jnp
push
or
je
mov
in
sbb
ret
std
das
cld
mov
cmp
insl
sbb
repnz
lods
sbb
adc
and
das
jb
roll
xlat
xor
and
jmp
rorb
stos
xchg
adc
pop
cmp
pop
inc
inc
jl
sub
pop
sub
in
sub
jp
dec
call
pop
call
adc
lods
mov
call
or
mov
lret
jno
js
sahf
movsl
mov
stos
rcl
push
scas
lcall
mov
add
push
call
les
arpl
fsubl
psrld
incl
add
outsb
fnstsw
fbstp
fidivrs
jns
call
cmpsb
jecxz
notl
xchg
lods
out
jno
mov
push
jno
sar
fndisi(8087
lcall
mov
stos
mov
es
sti
pop
call
mov
pop
ss
mov
aad
imul
lock
mov
roll
shll
xchg
jb
jp
or
pushl
or
nop
jp
rclb
loopne
out
in
loope
cmpsb
xchg
hlt
incl
jmp
ror
dec
int3
rol
loope
push
mov
movsl
das
sbb
cli
cmpsl
and
inc
std
lock
dec
cmc
mov
fisttpl
sub
pop
fcompl
out
loop
lahf
outsl
icebp
xchg
cli
movsb
xchg
stos
shl
sbb
clc
mov
fbstp
lret
rcll
cmpsl
stc
adc
add
shr
cld
maxps
xchg
mov
imul
push
mov
movsb
arpl
fucom
mov
mov
push
inc
mov
aad
fdivrp
fiaddl
adc
fists
pop
ffree
rcr
adc
mov
incl
imul
sub
jb
and
clc
ljmp
call
sbb
mov
and
push
lods
ds
mov
push
outsl
cld
int3
xchg
pop
dec
scas
lods
sbb
and
test
push
mov
jl
mov
jp
data16
es
fstpt
lods
push
pop
sub
incl
inc
and
pop
movb
push
ret
call
xor
arpl
or
jecxz
sbb
sbb
movsb
pusha
jns
in
sbb
fstpt
push
loopne
or
in
popf
inc
loop
out
and
adc
and
sub
mov
dec
push
in
xchg
adcl
imul
mov
inc
loop
outsb
cmc
push
sarl
add
push
sub
push
sbb
out
iret
repz
stos
push
fldcw
in
cli
dec
sbb
pop
loopne
mov
outsl
mov
jp
push
push
rolb
pop
fsubrs
push
arpl
jg
cli
mov
lods
daa
in
bound
imul
inc
mov
icebp
outsl
mov
sbb
mov
fs
out
dec
jae
adc
lcall
shll
movsb
pop
ret
jle
pop
stos
decb
adc
loop
mov
mov
pop
pop
cmc
lock
push
sbb
sti
xor
ljmp
in
or
daa
cltd
push
mov
jmp
lret
sbb
call
subl
loop
xchg
lock
ret
push
shrd
std
ret
out
xor
dec
xchg
outsl
jnp
fistpl
ja
sbb
aaa
xchg
push
out
push
push
jmp
add
and
mov
sub
mov
jg
jcxz
outsl
in
mov
push
sub
xchg
sbb
pop
divl
cmp
repz
call
in
jg
lods
mov
hlt
pop
es
mov
mov
inc
popf
hlt
outsl
call
arpl
addr16
ds
mov
push
cmpsl
add
add
fadds
addr16
movsl
outsb
mov
hlt
ds
cmp
sbbl
or
lds
jmp
lock
mov
add
subb
xor
cwtl
sub
mov
movsl
or
movsl
scas
sub
popa
out
daa
lcall
loope
mov
scas
cmpsb
fistpll
mov
mov
pop
xchg
es
adc
pop
not
ret
pop
cld
outsl
repz
fdivr
inc
adc
imul
dec
insl
test
fimull
pop
test
push
scas
outsb
jae
mov
xchg
push
les
ljmp
push
pop
pop
mov
inc
xor
fdivrp
inc
das
inc
int
dec
lods
loope
and
js
cli
add
aam
pop
cld
add
inc
and
and
inc
fildll
pop
xor
int3
sub
xchg
stos
lcall
dec
sub
scas
dec
inc
cltd
repnz
cmpsl
cmc
or
mov
popf
jb
lds
sbb
fwait
xchg
aam
aas
xlat
push
into
dec
jmp
jl
fnsave
lea
and
jno
add
icebp
test
jmp
test
out
out
dec
fs
xor
outsl
push
sarl
movd
movsl
cmp
les
pop
insb
mov
scas
or
sti
arpl
les
mov
scas
enter
idiv
outsl
cld
incl
adc
add
es
subl
aas
idiv
lcall
clc
gs
push
add
cmp
pop
add
mov
xchg
out
jns
adc
mov
sbb
fsubs
popa
ss
sub
ljmp
loop
mov
jg
or
std
pop
pop
jge
imul
add
mov
jg
mov
cwtl
scas
data16
dec
out
nop
lahf
leave
and
addr16
jns
xchg
jl
insb
dec
ffree
or
and
jb
push
cmpsl
inc
mov
cmpsl
shlb
jg
outsb
sbb
pop
xor
cmc
xchg
loopne
inc
dec
shr
xchg
outsb
popa
js
pop
dec
push
pop
fildl
popf
dec
insb
ret
jno
ret
sub
bound
std
jo
call
icebp
jg
orl
push
mov
add
iret
scas
loope
aad
ds
jle
test
cltd
mov
mov
mov
xchg
ret
leave
sbb
mov
or
sub
bound
dec
mov
mov
out
mov
dec
lret
xor
ret
cmc
xchg
cmpsb
inc
hlt
jg
lcall
adc
lret
out
sahf
xlat
in
pop
insb
jnp
mov
jg
mov
call
mov
inc
or
jg
ljmp
adc
lcall
cmp
test
lea
ret
imul
in
ds
dec
add
xor
xchg
daa
or
jmp
adc
dec
xchg
shl
outsb
xchg
xchg
jnp
mov
or
pushf
lods
loope
aaa
decb
and
pop
ret
dec
clc
loope
stos
pop
inc
jl
sbb
mov
pop
loop
lcall
or
jg
decl
or
out
or
fcoms
xchg
cwtl
dec
enter
in
scas
push
push
lods
cwtl
lret
arpl
adc
lcall
popf
rolb
divl
xchg
push
stc
incl
lds
push
stos
adc
xor
subb
dec
lcall
mov
in
fidivs
divl
pop
add
fs
ficoml
mov
xchg
lods
lret
mov
ljmp
call
sahf
sbb
pop
mov
inc
insl
out
mov
jecxz
sbb
dec
aaa
push
jp
ss
in
icebp
clc
ljmp
lea
mov
jno
xchg
sub
scas
mov
push
mov
out
push
popf
ja
or
xchg
cs
enter
fisttps
push
inc
pusha
xchg
repz
test
in
arpl
pop
mov
shr
mov
sbb
lods
call
sbb
sub
out
int
sarw
fnstsw
jecxz
aas
loopne
jbe
bound
xor
lea
pusha
cmp
cmp
repz
jge
add
jg
cli
or
sti
jb
loope
test
loopne
mov
aaa
push
std
xchg
mov
bound
icebp
into
inc
outsl
push
mov
push
in
stos
sub
mov
adc
mov
clc
outsl
loop
mov
xlat
add
pop
into
in
dec
push
pop
fildl
mov
xchg
jns
mov
xor
test
pop
pushl
add
push
movsb
add
int3
fstpl
in
in
mov
push
dec
jmp
movsb
inc
jecxz
negb
loopne
das
std
std
mov
sbb
dec
dec
sti
cmpsb
insb
adc
sub
test
mov
lcall
movsb
dec
leave
dec
jp
mov
cltd
pop
jbe
movsl
scas
daa
inc
mov
fwait
shr
aaa
push
add
popa
jnp
cmpsl
add
mov
add
aad
ret
repnz
sbb
jb
jl
inc
xor
movsl
mov
sub
adc
js
or
decl
dec
out
and
sub
leave
call
push
clc
decl
clc
js
ret
xchg
ret
icebp
and
mov
or
test
pushl
cli
mov
roll
pop
sbb
lods
sub
fwait
adc
pop
jg
mov
sub
cs
sub
or
gs
cmpsl
test
lcall
cld
fidivl
dec
ds
inc
and
mov
or
mov
add
es
pop
out
das
and
mov
xchg
cli
adc
push
or
mov
mov
aam
in
loope
aad
decl
and
mov
outsb
or
pusha
lcall
add
fs
les
add
add
xor
jg
decl
jl
andb
movb
out
xlat
les
and
das
dec
loop
dec
std
loopne
leave
mov
jecxz
in
or
fiadds
mov
xor
push
jle
jl
xorb
inc
inc
stos
lods
xchg
mov
ss
xchg
and
cmc
lcall
mov
push
pop
daa
or
mov
incl
lock
jns
test
pop
mov
dec
popf
repz
mov
lods
idivb
fwait
sbb
pushl
xor
addl
pop
inc
mov
sub
sub
and
adc
push
aad
and
push
adcl
repnz
dec
and
sbb
push
xchg
inc
dec
clc
lcall
xor
sub
je
inc
je
inc
adc
shrl
push
cmpsb
and
test
cmpl
push
gs
sar
daa
pop
cmp
push
outsl
incb
test
jg
sbb
dec
xchg
cmp
xlat
mov
mov
mov
or
inc
call
jecxz
jl
movsb
sub
and
ss
xchg
mov
aad
add
ljmp
push
addr16
mov
loop
out
andb
stos
mov
mov
lcall
pop
out
lret
lock
shlb
mov
into
mov
call
push
pop
and
repz
decl
mov
ljmp
out
push
lds
shrl
and
loopne
imul
mov
out
out
popf
mov
jp
out
pop
jne
ds
mov
or
inc
loopne
adc
mov
ss
scas
sbb
push
test
or
lcall
incl
aas
hlt
dec
sti
add
sbb
jecxz
mov
rcl
lock
frstor
fwait
ret
push
cmpsl
push
jp
push
and
in
xor
mov
addl
cmp
push
sbb
sbbl
mov
hlt
sub
ret
push
call
shrb
xor
imul
sbb
popa
push
push
push
lea
lea
std
hlt
popa
psadbw
daa
sti
in
mov
shlb
dec
fidivl
loope
data16
or
jmp
call
rep
push
push
xchg
or
in
or
xor
enter
mov
lcall
jne
out
daa
push
push
dec
xchg
loopne
sbb
inc
jle
icebp
ljmp
mov
cmp
arpl
jb
add
outsl
les
adc
push
lahf
cmp
xor
decl
ja
pop
orb
pusha
push
pushf
arpl
jg
and
call
adc
rcrl
sbb
or
inc
jae
mov
fdivs
loopne
clc
xor
data16
sar
jmp
fisubs
inc
test
fcmovne
mov
in
jo
inc
add
xchg
cmp
dec
sub
cmp
sbb
cmp
icebp
push
outsl
icebp
lea
movsb
les
inc
dec
mov
int3
aas
jecxz
shrl
add
filds
push
xor
dec
dec
hlt
inc
out
inc
mov
adc
icebp
lods
add
add
call
sbb
pushf
hlt
jnp
popf
aaa
sub
push
addr16
jmp
lock
fimull
xchg
jp
aaa
mov
clc
push
jmp
or
cmp
test
mul
jecxz
push
and
rorb
ljmp
lret
lods
jmp
mov
hlt
imul
jl
add
cli
call
clc
mov
xlat
mov
imul
push
call
xor
xor
pop
jne
mov
and
push
xchg
sbb
inc
insl
repnz
jns
pop
dec
nop
in
icebp
ljmp
mov
mov
mov
xor
inc
ret
inc
push
mov
and
xchg
cmp
arpl
sbb
daa
push
mov
xchg
jge
dec
push
push
xchg
jge
mov
pop
daa
push
in
push
mov
mov
sarl
mov
adc
xor
mov
cld
pushl
xchg
jg
push
imul
cmp
pop
fisttpl
push
pop
rorb
ljmp
add
cmp
xor
je
cmp
dec
call
cmp
lahf
stos
insl
jmp
cmp
mov
sbb
and
dec
int3
lock
dec
mov
stos
push
add
mov
sub
int3
mov
or
popf
cmp
vmulpd
cld
ljmp
sbb
mov
cmp
pop
dec
rcr
lods
repnz
int
lea
fnstsw
add
das
sarl
pop
repz
jnp
das
mov
cmp
adc
fcoml
repz
jle
jbe
sub
dec
sbb
insb
js
popf
pop
popa
sbb
bnd
push
pop
mov
testb
mov
pop
nop
push
jp
mov
ljmp
in
or
sub
mov
ret
out
and
xor
pusha
lret
push
test
pusha
cmpsl
or
or
adc
xor
pop
loop
push
aam
xchg
scas
add
lods
mov
inc
insb
lods
dec
in
xor
push
bound
std
out
inc
mov
aas
leave
inc
shr
sbb
push
sub
test
jnp
dec
ret
lods
das
icebp
ljmp
push
cmp
sub
xor
dec
pusha
lock
stos
ljmp
ljmp
andl
out
sub
pushl
aas
out
nop
mov
test
ljmp
sub
sub
stos
and
lods
cmp
cmp
insb
add
nop
push
add
xchg
out
mov
inc
add
hlt
gs
into
or
pushl
out
xchg
mov
push
idivb
mov
mov
jmp
loopne
xchg
lds
pop
in
push
push
sbb
jmp
push
lcall
push
movsb
cld
loope
fcmovnbe
inc
lods
jmp
sahf
sbb
stos
and
incl
outsl
call
xchg
call
cmp
dec
mov
lods
dec
ljmp
call
enter
sub
adc
pop
decl
adc
sbb
aaa
outsb
inc
add
pop
fisubl
mov
jns
inc
loope
incl
sbb
xor
repz
lods
fcomip
out
ret
ret
lea
test
shll
dec
lock
sbb
mov
add
mov
test
call
aaa
mov
daa
out
js
cmp
xor
in
addr16
sub
hlt
inc
sbb
mov
sbb
loop
mov
cmpsl
out
add
inc
aam
push
or
rol
or
mov
lcall
call
out
out
xchg
jno
cmp
jb
sbb
jg
mov
cmp
cld
dec
mov
in
mov
daa
or
pmaddwd
popf
pop
jbe
lcall
pop
jns
sbb
lcall
jge
push
jecxz
repnz
ja
mov
lret
nop
lret
and
aad
shld
add
fstl
sbb
adc
mov
aad
pop
mov
xchg
add
xchg
pop
xchg
jae
dec
xor
jmp
xchg
clc
mov
cmp
imul
fidivl
jg
jg
and
xor
and
xchg
adc
je
push
rorb
cmp
pop
repz
or
outsl
add
pop
pop
ss
in
sub
pop
iret
xor
xchg
inc
xor
jmp
push
lds
or
movsb
cmc
shlb
push
fucomip
xchg
jge
push
mov
arpl
cmpl
sbb
dec
pop
pop
cli
call
fmull
into
aas
and
pop
cltd
add
vmovdqu
sti
mov
pushl
push
jbe
dec
adc
xor
fs
stos
cmc
ret
icebp
jmp
push
mov
loopne
jno
sbb
lcall
mov
push
sti
jge
xor
decl
mov
lods
fs
aaa
adc
pop
test
cs
pop
jp
aad
scas
and
hlt
xchg
adc
and
inc
les
out
jae
decl
mov
shrl
mov
out
mov
jae
mov
pop
mov
jns
xor
xchg
outsb
mov
sbbb
pop
insl
icebp
incl
arpl
jl
inc
es
loopne
push
mov
xor
lcall
xchg
pop
popf
dec
lock
cmpsb
xor
jge
cli
pop
int
sbb
hlt
pop
je
inc
loop
clc
pushl
ret
pop
cmp
mov
mov
adc
das
shll
xlat
push
into
arpl
adc
cmc
lcall
xchg
icebp
gs
jge
push
cs
sbb
mov
lcall
cld
mov
xchg
in
aad
icebp
or
fstpt
mov
pusha
ljmp
aaa
clc
lcall
shll
sbb
xor
lock
movsl
shll
sbb
aad
inc
popf
sbb
adc
lret
ljmp
ret
dec
xor
lfs
pushf
push
clc
mov
data16
scas
push
cmp
in
xchg
mov
pop
push
mov
lods
test
fcomip
insb
jno
das
jo
mov
inc
mov
cmpsb
das
std
decl
pop
jmp
mov
dec
enter
or
in
pop
pusha
outsl
pop
add
sbb
sub
push
ljmp
pusha
shlb
decl
xchg
cmp
mov
clc
xlat
push
inc
fucomp
jl
cmpl
lahf
notl
shll
sbb
cld
scas
sub
push
std
outsl
cld
mov
adc
jae
popa
add
das
pop
int
pop
fiaddl
or
pop
xchg
xor
mov
jno
xor
mov
scas
sbb
lods
aaa
sbb
pop
clc
jg
push
pop
xchg
movsb
aas
sti
xlat
sbb
lcall
aaa
in
xchg
in
pusha
test
rol
cmp
scas
cs
pushl
clc
xor
cld
lcall
test
push
roll
pop
dec
divl
outsl
icebp
call
jg
jge
lret
inc
sub
aas
mov
lds
adc
in
sti
test
push
popf
sub
test
in
ljmp
ficompl
pop
inc
jge
adc
pop
xchg
push
fldenv
pop
repz
adc
enter
cmp
call
out
push
xchg
xchg
or
adc
xor
into
iret
mov
and
jecxz
fbstp
dec
outsl
dec
fcompl
rclb
xchg
stos
dec
lahf
cmp
and
cmpsl
mov
sbb
sbb
dec
pop
mov
and
unpcklps
push
cmp
push
call
aaa
ficoms
test
stos
in
adc
mov
mov
dec
faddl
mov
fwait
out
cmpl
sub
add
loopne
fcompl
aam
ljmp
addr16
aaa
fildll
movb
in
add
push
in
iret
xchg
test
mov
cmc
movsl
div
repz
jmp
mov
push
std
pop
jg
push
jnp
adc
xor
stos
scas
lea
sub
mov
aam
cmpb
and
call
jg
incl
xchg
aam
sbb
dec
mov
es
out
xchg
imul
test
sbb
das
lock
pop
add
sub
idivl
cmp
std
jg
add
mov
push
cs
ss
cmp
mov
fsts
nop
and
dec
out
imul
cmp
xor
les
decl
xchg
mov
pop
mov
mov
and
mov
inc
ljmp
daa
mov
mull
movsl
xor
iret
pop
mov
dec
in
cs
arpl
mov
inc
cmp
sub
sbb
xor
sahf
or
js
and
xor
clc
lcall
sbb
mov
cmp
push
mov
pop
orl
mov
xchg
ljmp
ljmp
push
lock
fnstcw
scas
loop
into
xor
loope
icebp
inc
rol
push
jge
dec
push
pop
pushl
clc
dec
sbbb
adc
lret
arpl
mov
inc
ljmp
lods
jl
mov
frstor
roll
mov
movsl
inc
out
in
lcall
popf
ret
mov
sti
xor
addr16
rol
dec
mov
add
rcrb
push
lds
cwtl
int
outsl
fistpll
pushf
sub
mov
push
cwtl
or
and
mov
jl
test
outsb
popa
dec
pop
ljmp
fidivrs
mov
pushf
sub
or
bound
mov
inc
cs
fsubr
inc
call
aad
ret
loopne
mov
fistps
addr16
movsb
or
int
mov
std
mov
lods
sahf
in
loopne
lcall
mov
cld
mov
pop
xor
clc
push
dec
or
add
int
pop
mov
mov
pop
fidivrs
gs
popa
pop
sbb
mov
xor
jmp
stos
inc
fsts
rorb
cmp
xor
pop
pop
and
out
xchg
push
arpl
es
xchg
inc
mov
pop
cli
cmpsl
sbb
dec
mov
iret
lahf
popa
mov
lret
xchg
clc
jg
imul
lcall
pop
pop
adc
std
push
mov
mov
lcall
xor
pushl
dec
fidivs
jo
mov
xchg
adc
out
jnp
push
dec
call
push
test
ljmp
pop
sbb
loop
push
inc
shll
and
sub
pop
sbb
adc
shll
mov
lea
adc
dec
cmpsl
xchg
sub
stc
data16
push
add
add
bound
push
lret
mov
add
lcall
cld
fbstp
lcall
inc
and
je
cwtl
incl
add
ja
xor
cltd
cmp
and
aas
aas
sarl
pop
lcall
or
pop
popa
js
out
or
xchg
or
xchg
push
js
movsb
incl
mov
outsb
fcoms
nop
dec
jno
bound
mov
ja
test
push
aaa
in
pop
adc
daa
mov
cli
repnz
pop
idiv
jne
jae
xlat
lret
imulb
call
fists
pushf
or
das
jmp
xchg
orb
cmpsl
jl
fisttpll
mov
lods
adc
xor
loop
xchg
leave
ds
push
int
decl
adc
and
pushf
ja
sub
aaa
cli
mov
jno
xchg
cmp
outsl
fidivs
mov
inc
test
outsl
lock
and
adc
cmpsb
and
insl
mov
movsl
je
and
mov
xorl
lea
pusha
sub
scas
lret
inc
ret
lock
jmp
call
shll
adc
mov
push
call
outsl
dec
hlt
sub
lret
jb
js
mov
movsl
outsl
iret
test
pop
ljmp
pop
adc
fsubr
bound
jnp
mov
test
lcall
sbb
ret
xor
xchg
test
mov
jle
aaa
clc
pop
push
mov
cmp
cmp
sti
mov
sub
call
dec
lahf
jge
repnz
mov
adc
lcall
pushl
cltd
jl
popf
xchg
lock
aam
andl
push
iret
xor
cmc
clc
pop
pop
sub
sbb
enter
out
and
outsl
std
lods
lcall
inc
cltd
or
fisttpll
inc
xor
ljmp
xor
dec
adc
inc
jge
cmpsb
mov
aam
test
xor
gs
push
arpl
jp
push
ja
lods
loopne
xor
daa
incl
loop
or
lods
call
loopne
lret
mov
mov
jno
or
outsl
hlt
add
or
add
fs
and
das
push
clc
testb
lods
ret
xchg
in
lock
decl
addr16
pop
xchg
xchg
in
xor
fnstsw
outsl
icebp
leave
js
test
or
xchg
pop
pop
outsl
xlat
popa
lahf
gs
mov
mov
sbb
and
jge
mov
adc
fstps
outsl
lds
rclb
dec
dec
dec
fstpl
aam
jle
int3
stc
inc
adc
incl
pop
fdivrl
mov
xchg
aaa
clc
mov
xor
mov
fcmovnbe
out
dec
mulb
lcall
call
push
adcb
sbb
xor
cmc
call
popf
xchg
dec
sub
mov
icebp
xchg
adc
mov
mov
adc
sub
pop
adc
sarb
mov
lea
adc
dec
mov
inc
cmp
jae
lock
xor
mov
lock
or
xchg
mov
cmp
sbb
lea
dec
push
inc
filds
insl
ljmp
aad
mov
pop
fwait
lock
rcrb
mov
xor
lret
xchg
push
cmp
push
jmp
xlat
jle
aaa
sub
sar
movsb
inc
inc
push
shlb
xchg
jmp
xor
sub
scas
pop
inc
jo
test
nop
cmp
testl
cld
imul
stc
mov
add
xor
adc
imul
inc
mov
je
rcll
negb
jg
inc
les
inc
ja
mov
and
stos
ja
scas
fimuls
mov
mov
jp
inc
ret
pusha
lahf
test
xchg
dec
or
mov
mov
mov
fsubrp
call
cli
xor
adc
cmp
adc
call
pop
cvtpi2ps
mov
int
into
pop
fdivs
cmp
dec
scas
lods
dec
push
addr16
scas
push
pop
cltd
xchg
out
jae
lahf
jnp
cmpb
imul
incl
call
cmp
pop
ret
inc
cmp
mov
icebp
decl
mov
add
div
push
scas
out
add
jp
pop
push
fisttps
mov
adc
ljmp
adc
pop
mov
mov
and
fsubrl
push
test
mov
sbb
pop
jmp
jnp
fdivrl
aad
xchg
mov
sahf
or
jb
je
mov
ljmp
mov
lds
push
arpl
icebp
lret
repnz
push
inc
adc
icebp
pop
jl
inc
call
movsb
dec
cmp
ljmp
adc
adc
or
out
cmc
loopne
add
mov
inc
xlat
iret
or
jg
fistpll
int
adc
pushl
xor
mov
xchg
xchg
in
add
cmpsl
push
dec
std
add
pop
test
ss
adc
les
pusha
cmp
jbe
sarb
out
adc
out
test
cmp
sbb
mov
jmp
inc
testb
cmpsl
and
scas
fnstsw
add
jecxz
adc
pop
imul
out
outsl
cld
jo
push
jnp
je
int3
xchg
cmp
out
sbb
decl
cmpxchg
adc
dec
insl
dec
repnz
push
push
fwait
sbb
cld
or
call
andb
pusha
sub
cmp
call
and
test
sarb
in
outsl
test
dec
adc
cld
mov
and
test
nop
xchg
jne
fdiv
add
or
ljmp
jmp
xor
xlat
cltd
push
out
js
filds
push
and
fisttps
out
cs
xchg
xchg
mov
jmp
clc
cli
cmp
cmp
push
das
dec
mov
incb
gs
cld
pushl
cld
jne
stos
mov
mov
jle
jb
incl
mov
mov
mov
fistpll
push
test
adc
sbb
orl
sbb
mov
icebp
shlb
dec
fnstsw
jns
jmp
stos
inc
pop
daa
xchg
fbld
inc
lods
clc
sub
pop
cld
decl
xchg
xchg
cmp
fisttpll
mov
and
lock
push
decl
push
push
dec
roll
pop
mov
sbb
dec
sub
push
sbb
test
sbb
and
mov
je
cmp
rorb
mov
jg
push
ljmp
rcrb
mov
xchg
lods
loopne
addr16
loopne
ljmp
imul
xchg
mov
xor
ss
outsb
aad
incl
push
enter
iret
repnz
mov
sbb
call
xchg
add
or
pusha
cmpsb
ret
adc
incl
or
jl
test
and
sti
fisubrl
pop
loopne
ljmp
fcoml
dec
leave
inc
mov
push
inc
xor
xchg
xor
xchg
dec
inc
bound
jmp
in
fbld
ljmp
mov
inc
pop
dec
mov
sub
clc
sub
loop
call
sbb
pop
sub
sahf
xor
ja
clc
fucomip
add
fistl
dec
gs
mov
aad
mov
lcall
mov
sbb
push
mov
add
dec
sbb
call
data16
pop
les
mov
ss
int3
sbb
jae
xor
add
clc
fstpt
out
pop
mov
cmovne
push
xlat
pop
pushl
in
push
cwtl
xor
or
shrl
xor
adc
push
movsb
je
jae
andb
mov
lcall
dec
mov
movsl
mov
mov
inc
aam
lcall
xor
push
daa
aaa
cwtl
daa
dec
and
pop
or
in
std
sbb
dec
mov
movsl
sbb
sub
icebp
lods
outsb
cmp
jmp
outsl
lock
mov
mov
or
mov
jnp
out
clc
loopne
push
sbb
movsl
jge
cli
xchg
or
push
rcll
cmp
pop
fdivs
fisttps
fisubl
jle
dec
jp
mov
jg
push
mov
out
daa
mov
stos
in
cmp
dec
lods
mov
sbbb
xor
incl
addb
int3
fistpl
pop
jecxz
rclb
insb
hlt
shl
inc
jnp
lods
dec
loopne
ljmp
adc
sahf
outsl
aas
dec
jo
ficoms
inc
jb
push
jle
incl
aaa
inc
sub
pop
movsl
lret
lret
jp
pop
xlat
hlt
add
adc
add
fdivp
lcall
cld
jg
push
ss
andl
adc
ja
xor
cmp
xchg
jg
decl
aad
aad
xchg
rorb
lret
ret
xor
rcll
mov
loop
pop
cld
mov
js
je
jne
sbb
or
outsl
outsl
std
xchg
xchg
pop
jmp
iret
shll
pushf
mov
jg
push
das
mov
js
testb
dec
mov
fdivrs
sbb
sub
jle
adc
adc
fcompl
stos
addr16
lcall
mov
repz
dec
cmc
addr16
les
fwait
mov
call
mov
inc
mov
fidivs
ljmp
pop
push
sub
add
cli
mov
sti
out
pop
or
push
inc
pop
inc
out
insb
adc
out
mov
scas
xchg
xorl
inc
pop
addr16
leave
xchg
push
aam
pop
jg
ror
das
mov
xchg
dec
mov
mov
push
pop
xchg
nopl
mov
in
adc
cmc
incl
mov
inc
xchg
cmp
scas
sbb
mov
mov
rolb
insb
jne
mov
add
fs
fcoms
fucomip
outsl
std
nop
jae
mov
pop
xchg
sub
push
outsl
push
cli
test
push
adc
fcmovb
ret
jmp
inc
leave
inc
test
xor
in
push
inc
jmp
lcall
inc
sub
sub
pusha
outsl
je
mov
loopne
add
sbb
lods
add
test
push
test
push
shrb
decl
cmp
xor
or
dec
inc
push
in
jp
or
sbb
push
mov
dec
or
xor
arpl
ret
cmp
stos
rcll
sbb
call
enter
add
test
inc
xchg
jp
dec
mov
aaa
xchg
fstpt
jae
jns
imul
mov
xlat
or
lods
repnz
lcall
fsubs
pop
mov
nop
incl
mov
mov
scas
ljmp
push
sbb
pop
fstpt
push
push
shlb
lock
pushl
imul
test
lock
pop
cmpl
nop
ds
or
movsl
cs
mov
call
pop
addr16
imul
push
data16
aam
push
lcall
and
stc
xor
xchg
adc
xchg
push
je
pop
decl
jnp
cmp
pop
sub
cli
adc
push
jle
leave
imul
mov
jg
lds
imul
xchg
cmpsl
add
filds
in
pop
dec
sti
cmpsl
sub
and
xor
dec
mov
loope
fwait
sbb
fildll
mov
stos
add
jl
js
pop
repnz
ljmp
loopne
mov
sub
inc
stos
rol
fs
sub
dec
out
jmp
std
xlat
push
lds
push
hlt
pop
xor
ds
dec
fcomi
xor
rcrb
pcmpgtw
fdivrs
mov
das
mov
mov
push
ret
adc
xchg
xor
mov
jo
fnstsw
jg
loopne
xor
pop
sbb
jp
dec
and
decl
adc
mov
pop
lahf
sbb
cmp
in
bound
test
mov
insl
arpl
fistpl
aad
inc
scas
test
inc
dec
pop
sbb
mov
ljmp
test
in
popf
jl
sbb
test
int3
iret
imull
clc
jmp
pop
out
loopne
sbb
mov
pop
fidivrl
and
lods
or
sbb
or
pusha
or
scas
leave
arpl
cs
push
jg
push
jge
dec
pop
lret
je
ljmp
das
xchg
mov
add
lea
fisttps
jae
arpl
push
adc
mov
out
outsb
in
add
decl
popf
ds
dec
add
cmp
lock
inc
lcall
leave
movsb
and
shrl
add
mov
sbb
push
out
push
out
or
sub
mov
push
ret
inc
cli
and
mov
scas
xlat
jns
lea
cmp
dec
ljmp
xchg
es
mov
mov
loop
aaa
sarb
imul
and
xorl
int
jmp
int
mov
nop
mov
pop
mov
dec
jns
mov
dec
in
sti
adc
or
cmc
push
jg
xchg
cmp
jmp
cmpsl
dec
xchg
cmc
lcall
cli
test
jns
cmp
cli
les
xchg
rorb
inc
push
sub
out
add
jno
pop
xchg
adc
js
or
fcmovne
lods
fstpl
fmuls
out
leave
jle
pop
imul
jae
incl
sbb
push
jge
push
nop
dec
jg
icebp
mov
out
sarl
lcall
cld
loopne
jbe
stos
fldt
sbb
std
inc
int
inc
mov
orl
inc
inc
xor
outsl
cmc
jg
or
and
pop
jb
enter
negl
je
aaa
jp
ljmp
movsb
mov
dec
mov
lods
sbb
sbb
mov
outsb
lea
xchg
pop
lock
popf
cli
xor
dec
inc
adc
pop
clc
in
outsl
fisttpll
shr
mov
xchg
movsb
add
mov
aas
mov
xchg
sti
call
mov
daa
enter
cmp
inc
push
sti
inc
ficomps
out
aam
das
xlat
push
push
lods
mov
push
lods
sbb
add
orb
and
dec
imul
mov
push
daa
dec
scas
psrad
mov
lds
xchg
jge
xchg
or
mov
es
sbb
pushl
daa
sarl
aas
mov
add
sub
push
xchg
inc
pop
test
cs
cld
xchg
js
sbb
adc
clc
jg
jb
pop
jle
lahf
sub
cmp
sbb
pushl
pusha
imul
add
int
icebp
addl
mov
jb
cmpps
mov
mov
out
sub
and
dec
xorb
pop
ja
inc
or
hlt
push
cwtl
jmp
mov
xor
stos
mov
sub
decl
and
pop
data16
adc
arpl
scas
mov
in
xor
jge
notl
mov
sbbb
andb
inc
test
das
jge
adcl
es
iret
adc
cmp
or
add
jl
std
sub
mov
adc
js
inc
jno
sbb
aaa
pushl
cli
mov
shr
cmp
cmp
adc
lret
pop
lcall
lods
das
sbbl
jbe
add
js
repz
sar
jmp
mov
pop
lock
fldl
mov
mov
stos
push
mov
jnp
idivl
movq
je
xchg
xchg
jnp
pop
aad
fisubs
jg
popa
roll
inc
gs
pop
jo
sti
adc
repz
sbb
in
inc
jb
fsubrl
jg
popa
xor
jl
in
in
and
outsl
rclb
push
jg
pop
push
mov
mov
sbb
sti
jmp
xchg
fdivrs
xchg
popa
lods
repz
sbb
adcb
int
mov
sub
sub
sbb
jl
pop
mov
sub
jnp
mov
out
sbb
push
or
xor
icebp
iret
push
int3
push
push
sub
les
jg
pop
inc
outsl
in
imul
jp
cmpb
push
nop
sbbl
loope
cli
std
and
mov
jne
js
jo
sub
or
pop
aad
jg
shlb
rcrb
pop
xor
xor
cld
dec
push
pop
aad
lds
neg
add
cmp
sub
cmc
ljmp
decl
xchg
push
xchg
add
lods
xor
faddl
rorb
xor
sbb
shl
lcall
sub
addr16
in
clc
enter
dec
outsl
lock
outsl
xchg
ljmp
cmc
cmp
loopne
popa
inc
sub
hlt
mov
sahf
xor
std
sbb
lock
insb
xchg
test
call
shrl
decb
jb
movsl
roll
add
out
sbb
xchg
xchg
push
outsb
rclb
add
push
call
sub
popa
cwtl
in
repz
sub
call
ljmp
iret
shlb
stos
mov
scas
pop
mov
mov
mov
lods
jg
out
push
push
gs
or
decl
sbb
inc
cmc
jl
inc
loopne
jecxz
prefetchnta
pop
push
mov
lods
decb
mov
mov
fcomps
xchg
jbe
ljmp
cmp
inc
push
int3
rcr
xchg
imull
mov
loop
mov
int
mov
ljmp
fdiv
stos
sub
sub
jbe
xchg
frstor
pop
lds
testb
decl
into
pop
jge
and
inc
outsb
movq
mov
int3
int
mov
pop
jecxz
insb
mov
aad
decl
ja
aam
mov
cmp
shlb
adc
xlat
jne
push
lea
test
push
jne,pn
sub
push
ret
pop
pop
jecxz
xchg
cld
jg
call
jae
sub
pop
out
in
enter
popf
lock
out
rcrl
dec
xor
and
jnp
xor
or
pop
call
mov
mov
fs
xor
pop
jnp
sbb
pop
clc
loope
mov
in
out
xchg
mov
push
das
push
cmp
xor
lods
mov
push
cmp
mov
test
fs
daa
mov
in
js
add
inc
and
cmc
jg
jmp
sub
lods
jecxz
andb
sub
incl
cs
mov
cwtl
xchg
fnstsw
or
jnp
shrl
repz
jmp
stc
mov
insb
ficoms
je
dec
xchg
mov
jb
xlat
push
shlb
inc
hlt
cld
ljmp
lds
sahf
popf
dec
fstl
add
mov
outsl
popl
push
ljmp
add
mov
pop
xor
out
loop
rol
testb
xor
bound
mov
jecxz
loop
das
jmp
jl
gs
ja
mov
push
aad
jp
lcall
lds
pop
cmp
mov
mov
sbb
xor
xchg
adc
lcall
mov
mov
stos
sbb
cs
jno
jle
aaa
lds
mov
aaa
pop
out
ficomps
xchg
xchg
xchg
daa
push
sbb
add
ljmp
pop
mov
pop
xchg
out
cld
cli
jnp
jecxz
xchg
cmpsl
sub
lcall
push
leave
pop
xchg
push
aad
push
and
roll
mov
jl
jnp
cltd
jb
or
cld
xchg
adc
orl
mov
or
pop
jnp
jb
jg
dec
mov
jl
mov
mov
mov
cwtl
inc
mov
mov
xor
mov
add
jle
jecxz
mov
mov
jecxz
adc
push
movsl
dec
inc
je
push
movsl
cmp
inc
mov
fldcw
scas
scas
adc
ret
daa
xchg
push
test
pop
aaa
stos
divl
inc
fs
stos
adc
outsl
xlat
inc
xchg
mov
lods
sbb
jnp
test
scas
xchg
xchg
mov
lcall
jnp
mov
jg
scas
and
jp
pop
test
icebp
sub
stc
movsl
iret
adc
mov
aas
ss
je
aad
cs
pop
decl
sub
cmp
sbb
pop
and
daa
fdivrl
pop
call
call
sbb
rorb
cmp
aas
inc
pop
mov
mov
push
xor
stos
repnz
mov
push
add
cmp
js
and
dec
pusha
fwait
in
jbe
cmp
rcr
lods
jl
jnp
repnz
jg
mov
cmp
cmpsb
aam
out
aaa
cmpb
lahf
push
pop
flds
and
rcl
hlt
xchg
loope
sti
dec
pop
lcall
xchg
cmpsl
js
xor
mov
cmp
jbe
in
sub
add
dec
push
push
or
pop
scas
outsb
jmp
mov
jmp
aad
out
sbb
popa
adc
cmp
gs
mov
movsb
fwait
xchg
insl
ss
mov
jae
out
add
dec
mov
xor
jne
insb
inc
je
sbb
mov
sub
test
call
sbb
push
and
jb
mulb
decb
push
int3
pusha
mov
mov
lds
push
rolb
das
lret
nop
xor
sub
xchg
mov
sub
jl
cmp
xor
push
cmp
leave
sub
stos
dec
jns
adc
adc
mov
cmp
movsl
jge
loopne
jl
xchg
add
cs
sbb
jns
or
ljmp
mov
add
cwtl
dec
sub
or
stc
jns
jmp
decl
and
inc
push
mov
addr16
ljmp
je
fistps
inc
orl
fadd
xchg
pushl
das
mov
mov
xchg
pop
jp
xor
xchg
stos
lret
inc
mov
push
pop
jl
and
jecxz
sahf
rclb
push
loope
lock
push
dec
mov
jbe
imul
mov
mov
inc
adc
mov
es
push
and
stc
xchg
xor
mov
inc
ret
jb
int
ss
insl
push
daa
movsb
nop
leave
ret
jae
jns
outsl
icebp
decl
and
notl
jbe
push
incl
call
outsb
cmp
cmpsb
rcl
les
mov
jnp
cltd
inc
lret
incl
js
popw
test
push
loope
ret
lahf
imull
outsb
int3
cmc
test
push
sti
mov
dec
jne
lods
std
inc
fsts
adc
pop
push
xchg
inc
push
xchg
or
outsl
xchg
cld
decl
adc
ja
mov
mov
jnp
in
decl
fsincos
inc
mov
dec
out
cmpsl
push
js
sub
clc
dec
leave
cwtl
popf
mov
mov
mov
dec
jl
outsl
fimull
das
mov
sub
loopne
xchg
jae
jno
inc
addr16
cmp
add
xor
jb
xor
mov
pop
xor
dec
int3
es
in
sbb
decl
mov
cmp
cli
mov
push
lea
push
xor
jp
mov
and
loope,pt
fucom
inc
cmp
les
push
mov
nop
push
pop
push
shrb
dec
shll
mov
add
into
dec
or
clc
outsl
hlt
fistl
es
xchg
faddp
sub
fisubrl
call
xchg
adc
fidivs
idiv
sbb
cmc
push
sbb
push
in
call
inc
aaa
outsl
lock
lds
sub
stc
arpl
test
lods
fnstsw
fbstp
mov
int
insl
sti
mov
mov
mov
inc
loop
in
icebp
repz
fstpl
out
fimuls
lcall
bound
outsb
jae
stos
pushf
imul
jg
jne
imul
xor
add
cmp
adc
mov
adc
sar
push
mov
rclb
sub
push
les
jg
decl
out
scas
add
cmp
dec
notl
or
and
and
mov
push
mov
sbb
adcl
in
add
cli
imul
xchg
jmp
mov
aam
out
dec
dec
push
xor
sarl
rorb
arpl
add
rcrb
mov
add
outsb
cmpxchg
xor
mov
mov
call
sar
xlat
adc
sub
out
cmc
or
adc
xchg
adc
xchg
add
xchg
push
sahf
push
sub
inc
and
add
or
or
fiaddl
or
and
push
test
test
mov
add
ss
inc
and
outsb
pop
adc
or
add
jae
shrb
add
int3
sub
add
jmp
pop
mov
or
ficompl
lods
add
push
push
cmp
and
push
pop
adc
and
je
fwait
jae
mov
inc
insl
jne
add
xchg
mov
mov
outsb
aaa
adc
test
pushf
jnp
cmpsl
inc
lods
add
add
jae
call
dec
imul
push
add
sub
sub
sub
push
jecxz
pushf
fistpl
dec
add
hlt
add
inc
bound
out
pop
and
cmpsb
pop
test
shlb
add
mov
sub
and
test
es
sub
insl
lods
mov
sbb
or
mov
adc
mov
lods
shl
or
addb
jmp
and
lods
mov
xchg
and
pop
aad
pop
mov
dec
dec
push
add
add
xchg
and
sbb
arpl
test
push
jae
in
and
ret
push
mov
int
lret
add
inc
pop
mov
loopne
jae
xchg
pushw
outsb
add
push
adc
xor
insb
std
outsl
jmp
gs
cmp
inc
dec
xchg
add
inc
je
push
jb
xor
cmp
or
sub
jnp
int
int
or
pop
mov
lea
ficoms
lods
xchg
outsb
jnp
lods
adc
or
or
sbb
push
leave
lahf
cmpsb
mul
xor
cmp
sub
int
add
lds
add
into
mov
inc
je
cmp
lea
xor
add
or
leave
add
mov
sub
pop
sub
jno
subl
add
jb
and
rcll
and
add
sub
and
add
mov
mov
add
fs
adc
nop
push
into
adc
or
add
pop
inc
rorb
mov
stos
add
inc
movsb
lea
mov
outsb
or
push
mov
lahf
enter
scas
mov
jns
mov
pop
cmp
fdivrl
or
mov
push
mov
mov
test
mov
xlat
pop
mov
mov
in
xchg
pushl
mov
cmpsb
push
xchg
nop
push
movsl
mov
cmp
fstl
repz
jno
jg
mov
cmp
mov
dec
aaa
fistpl
mov
sub
insl
mov
dec
daa
lret
lret
fwait
add
pop
and
sbb
mov
fldt
jle
ljmp
mov
cld
in
div
lods
mov
fcoms
mov
shrb
add
sbb
popa
push
fisubrs
mov
out
in
jg
out
mov
mov
adc
xlat
loop
in
inc
inc
xlat
mov
push
cmpb
jo
adc
pop
jl
sub
push
setl
insl
std
push
add
sarb
std
inc
cmpb
mov
pushf
pop
sti
sahf
ja
mov
mov
das
xchg
fisttps
inc
and
mov
inc
inc
adc
fnsave
add
loopne
xor
xchg
add
mov
push
add
das
xchg
cld
pop
mov
jo
mov
mov
jge
adc
pop
cwtl
outsb
in
mov
jb
xchg
or
mov
enter
jne
cmc
mov
mov
mov
push
loopne
ja
outsl
add
and
and
mov
sbb
aaa
dec
xlat
out
sbb
cmp
adc
ss
add
dec
shl
sarb
jno
test
push
adc
or
mov
sahf
outsb
insb
mov
in
hlt
fldcw
insl
in
fdivr
push
mov
cld
iret
mov
fs
test
dec
sub
dec
push
mov
xchg
add
fmul
dec
fistps
cld
test
push
sahf
lock
mov
sub
mov
add
je
fsubrl
adc
fisttps
dec
cmp
ja
es
mov
ds
call
mov
mov
adc
add
cmp
lret
into
sti
push
gs
push
jg
dec
out
xchg
bound
jb
add
out
sub
mov
das
and
jno
pop
sarl
insl
pop
aad
xchg
into
fnstcw
repz
or
int
in
adc
jns
repz
mov
outsb
mov
sub
add
xor
sbb
notb
mov
loope
lock
imul
jo
pushf
mov
adc
push
cmpsb
mov
jle
xlat
xchg
xor
mov
lock
imul
and
outsl
lea
test
mov
push
and
rcl
jbe
mov
mov
int3
and
imul
pop
mov
cmc
icebp
jns
pop
pop
jmp
pop
adc
dec
imul
sbbb
xor
jne
fwait
adc
push
mov
mov
shll
pop
test
pop
test
mov
mov
mov
push
inc
or
mov
shl
xor
adc
out
lret
cmc
outsb
inc
mov
or
movsb
xchg
arpl
pop
pop
fcomps
sub
jl
xchg
pop
in
jbe
cmp
xchg
sbb
inc
addb
lock
sub
or
mov
mov
xor
xchg
add
sub
push
xchg
je
xor
jl
push
xchg
jecxz
ret
and
mov
cld
mov
pop
sub
jae
in
scas
push
in
out
shlb
call
jo
mov
mov
and
mov
xor
fcompl
cmpsb
pop
shl
pop
pop
cmp
sbb
add
add
rolb
imul
int3
mov
push
jge
lret
repnz
movsb
jb
mov
jmp
aam
in
add
inc
inc
sub
sub
mov
mov
xchg
jb
pop
mov
xchg
mov
int
pop
adc
or
inc
outsl
out
rcl
mov
or
lods
push
push
ljmp
aas
mov
mov
in
lock
aas
jle
arpl
lcall
and
pushf
mov
xor
int3
add
stc
push
dec
and
xor
lods
leave
mov
cld
mov
push
jns
fists
call
lcall
cwtl
test
out
xchg
fnsave
xchg
push
or
orl
pop
insb
aaa
es
pop
mov
push
imul
fiadds
ss
xchg
push
and
pop
jne
or
xor
in
add
loope
pushf
rorl
sub
mov
jo
pop
xchg
ljmp
mov
fisubs
inc
hlt
inc
popf
rcrl
scas
imul
arpl
xchg
add
scas
jno
bound
les
pop
sbb
js
ljmp
xor
rcl
mov
mov
scas
sbb
sbb
jbe
gs
lods
cli
data16
enter
shlb
fldenv
jle
subb
sub
cwtl
mov
roll
pusha
clc
sbb
jg
out
push
pushf
pop
sub
sub
jecxz
or
lea
and
sub
sti
es
out
mov
rcrb
xchg
imul
icebp
test
je
jbe
mov
ficomps
bndstx
in
add
vminsd
lcall
int
xchg
inc
pop
jp
jle
mov
les
repnz
lods
shlb
mov
test
scas
testb
push
aam
daa
cmovle
sar
repnz
dec
adc
jmp
out
pop
arpl
dec
shlb
dec
adc
roll
pusha
icebp
in
pusha
xor
mov
or
cmp
fisttpll
inc
orl
mov
add
int
call
mov
cmp
xchg
ss
inc
ss
fucom
pop
xchg
aas
pusha
adc
out
mov
adc
and
or
repnz
mov
nop
ds
pop
outsl
mov
xor
cli
inc
lods
dec
xchg
out
hlt
sbb
aas
dec
outsl
xorb
add
in
ss
rorl
addr16
sbb
ret
test
jns
je
push
imull
dec
push
xchg
aaa
outsl
outsb
cli
jo
inc
ds
leave
mov
cmpsb
fisubrl
pop
cli
xor
dec
clc
or
mov
leave
xor
adc
and
xchg
js
imul
pop
in
dec
and
into
mov
sub
lds
clc
add
nop
stc
cs
sbb
icebp
sbb
mov
nop
mov
stc
repnz
or
pushf
outsb
add
mov
test
or
jl
les
fcmovb
xchg
sbb
mov
ljmp
adcl
mov
adc
and
outsb
sbb
mov
sbb
push
fidivrl
dec
sub
mov
jne
dec
std
in
or
mov
fildl
insb
ljmp
sbb
pop
lahf
xor
dec
cwtl
lods
dec
mov
and
stos
fistpll
mov
repz
cmpsb
scas
es
xchg
mov
sbb
xchg
or
outsl
cmc
add
test
pop
lret
out
fstpt
push
mov
xchg
pop
subl
inc
adc
mov
int3
inc
ss
and
inc
xlat
ss
sub
jnp
leave
jb
xor
negb
mov
mov
inc
mov
mov
aaa
sub
lods
pop
xchg
cmc
push
mov
or
std
cs
test
shll
daa
and
ret
jne
add
xchg
mov
dec
cmp
lret
fisttpl
sti
jno
into
push
jb
aam
adc
xor
jl
mov
lods
pop
scas
daa
in
xchg
in
cltd
or
add
and
mov
mov
fdivl
push
stc
popf
inc
sbb
or
pop
cltd
outsl
sarl
mov
stos
sbb
inc
pop
mov
clc
shl
cmp
pop
ds
jmp
adc
pop
xchg
pushf
leave
js
dec
loopne
mov
dec
sub
and
jecxz
int
cmp
loop
ds
rorb
imul
and
stos
push
mov
ficompl
sbb
adc
xchg
pusha
rcrl
push
or
and
pop
loopne
inc
subl
arpl
insb
and
insb
pop
andb
sub
shl
int
cmc
sub
cwtl
dec
mov
icebp
xlat
loop
push
loop
outsl
cld
or
int3
cld
mov
adc
out
push
and
sub
andb
fsubs
insb
testb
inc
push
lret
lods
push
test
or
scas
mov
xchg
mov
nop
or
add
cmp
sarb
pop
mov
lret
xor
rcll
sub
fistps
pop
mov
adc
mov
rol
pop
pop
xchg
in
or
mov
and
insl
lret
in
or
pop
pop
dec
pop
rorl
pop
jno,pt
sbb
das
in
jnp
popf
outsl
mov
je
mov
shr
and
inc
mov
es
std
pusha
in
push
test
fisttpl
or
xchg
jge
into
pop
pushf
mov
pcmpeqw
je
xchg
pop
jge
jge,pt
dec
or
xor
cs
jge
out
lahf
pop
sub
xor
gs
jne
mov
add
xchg
movhps
popf
mov
push
inc
aas
outsl
pop
inc
sub
sarb
and
imul
cmp
call
ficoml
aas
test
hlt
lea
es
or
fwait
xchg
jecxz
mov
fidivl
push
cmp
lcall
mov
in
out
mov
scas
push
mov
mov
mov
ljmp
push
lcall
xchg
ds
cli
mov
fisubrl
arpl
mov
mov
adc
lret
lds
mov
rorb
aaa
pop
sahf
aaa
mov
fcmovb
inc
or
inc
in
xlat
add
and
push
testl
inc
pop
in
ficomps
lcall
ficompl
pusha
mov
mov
icebp
cmc
test
xadd
adc
fsts
mov
sarl
in
push
push
iret
adc
jecxz
outsb
sub
ror
mov
in
loope
pop
adc
fwait
cmp
xor
lret
jge
mov
xor
je
jbe
loopne
xor
aaa
cmp
mov
ret
dec
xchg
pop
or
ss
das
sbb
repz
ss
sbb
xor
add
adc
pop
fisttpl
pop
jo
clc
adc
rol
or
lret
mov
shll
lock
jl
and
and
push
cs
test
inc
pop
jl
push
xchg
scas
add
jmp
and
pop
fidivs
cwtl
inc
lahf
js
jecxz
push
mov
fisubrs
inc
arpl
mov
es
out
icebp
aad
adc
testl
pop
ds
cmp
sbbl
outsb
dec
insl
fcoml
in
mov
xchg
pop
outsb
add
push
movsl
push
xchg
pop
outsb
mov
lods
mov
push
dec
js,pn
push
mov
xor
mov
in
ret
aam
lahf
jns
dec
shll
jg
xor
lcall
cs
adc
cmp
jno
dec
jns
lcall
lret
in
pop
sbb
shlb
push
mov
and
sbb
jmp
sbb
xor
scas
imul
dec
int
lret
xchg
xor
jmp
cli
mov
cmpsb
pop
loop
push
loop
ret
pop
cmpsb
sbb
leave
cmp
xchg
pop
push
out
mov
push
int
sti
xchg
insl
cmp
sbb
cld
adc
and
push
loope
mov
jl
adc
pop
jno
bound
test
insl
loop
lcall
jl
insb
pop
out
clc
inc
lods
mov
rorb
push
ljmp
jge
add
xor
or
ds
add
arpl
jbe
fisubrl
dec
pusha
add
dec
dec
or
cld
fimuls
mov
mov
lea
sbb
jmp
add
ljmp
mov
dec
sahf
mov
popa
testb
mov
xor
repnz
outsl
mov
pop
scas
mov
gs
loope
movsl
shrb
xlat
adc
fldt
cltd
std
pop
dec
imul
aaa
jle
add
mov
outsb
adc
jg
lahf
das
sbb
loopne
movb
icebp
pop
xchg
insb
fdivs
inc
mov
sbb
and
lods
sbb
mov
adc
push
mov
stc
push
aas
jle
pop
jle
cmp
sbb
int3
add
pop
fs
mov
push
ljmp
jne
stos
sti
cli
cwtl
jg
jo
movsb
jmp
xchg
shl
dec
mov
inc
jne
sbb
insl
roll
xchg
daa
mov
js
jg
mov
ficomps
push
or
xchg
insb
dec
stos
es
adc
xor
push
jecxz
icebp
cs
xchg
pusha
adc
dec
push
fsubrl
fisubs
xchg
xor
out
fcoms
lods
xchg
shrb
shr
mov
jecxz
fnstsw
cs
mov
or
dec
mov
mov
and
pusha
into
std
imul
cvtpi2ps
push
mov
imul
stos
rorb
push
push
repnz
jns
fdivl
mov
mov
popa
cmc
mov
sbb
cmp
test
fidivrs
xchg
lcall
sbb
and
imul
and
scas
push
xchg
cwtl
sub
mov
or
push
sti
push
cmp
or
lods
insb
js
xchg
push
repz
sbb
cmp
jecxz
pop
icebp
movsl
js
fwait
pop
jecxz
fists
mov
jecxz
adc
xor
xchg
mov
inc
or
push
fcom
or
aaa
push
xchg
lods
sbb
add
scas
sahf
inc
push
pop
outsb
pop
xchg
lock
loope
enter
movsb
mov
sbb
xlat
sarl
dec
jo
mov
xchg
mov
jns
enter
xor
mov
xchg
xchg
add
push
and
out
pusha
rol
push
add
cmp
inc
dec
inc
pop
imul
mov
hlt
or
adcl
xor
jg
push
es
push
inc
xchg
iret
pop
and
sbb
inc
jmp
xor
pop
adc
ss
rol
outsl
and
fsubrl
push
jg
repz
ljmp
sbb
cmp
jmp
fwait
nop
popl
pop
fidivl
in
cmc
mov
pop
mov
ja
aaa
cmp
test
ss
xor
outsb
and
xor
xor
pushf
rorb
inc
test
aas
pop
cld
fsubs
out
or
mov
rolb
xchg
cmp
jbe
adc
cmp
push
lcall
jno
lea
push
add
inc
arpl
je
sbb
xchg
xchg
cs
cmpsb
adc
bound
push
dec
inc
sbb
add
dec
inc
lcall
lret
inc
call
movsb
mov
sub
gs
in
jecxz
xchg
adcb
inc
pop
insb
push
pop
outsb
lock
repz
mov
or
dec
hlt
repnz
inc
dec
inc
inc
dec
or
mov
cld
mov
adc
dec
shl
stc
push
xor
mov
in
pop
dec
mov
inc
repz
sbb
mov
repnz
jmp
adc
lret
arpl
push
adc
ja
push
push
fisubrl
repz
jecxz
push
mov
cmp
arpl
mov
push
mov
push
mov
lret
xchg
inc
adc
pusha
popa
mov
aas
mov
mov
or
mov
sub
xor
pop
addr16
mov
fcmovnbe
mov
pop
cltd
subl
inc
icebp
mov
pop
mov
dec
adc
sub
and
popa
push
cmpsb
test
lods
or
bound
insl
xor
test
pop
pusha
sti
test
flds
testl
xchg
mov
adc
xchg
mov
das
test
adc
hlt
and
or
or
pop
subb
fistpl
inc
jnp
pop
push
mov
push
push
mov
push
outsl
sbb
cli
pop
push
daa
in
rolb
gs
mov
nop
push
mov
add
cld
sub
in
insb
ljmp
faddl
leave
insb
scas
sbb
insl
bound
in
adc
shll
mov
ljmp
rcl
cmp
adc
loope
call
add
sbb
sbb
lods
gs
or
pop
lods
or
ja
cli
sbb
lret
pop
mov
dec
int3
and
sub
xchg
and
mov
push
and
dec
mov
movsl
or
pusha
xor
cmpsl
push
xchg
dec
hlt
or
sbb
loope
adc
in
and
loopne
loopne
in
push
shr
ret
cmpsb
cmp
fcoml
shll
mov
pop
insl
js
in
xor
roll
adc
inc
mov
pop
pop
pop
icebp
inc
jmp
adc
and
mov
data16
f2xm1
negl
scas
sbb
fstpl
rcrl
inc
nop
cmpb
push
rorl
shl
pusha
push
cmp
add
add
jecxz
push
frstor
cmp
dec
movsb
orl
pop
leave
icebp
test
pop
jle
fdivrs
jo
adc
sbb
ficomps
jo
pop
xor
push
les
push
push
sti
dec
push
mov
fdivrl
cli
aaa
lods
test
stos
in
jne
pop
lea
add
or
in
lods
ret
repnz
andb
inc
mov
outsl
mov
pop
xchg
test
mov
jg
in
daa
aaa
and
inc
fdivs
jecxz
pushf
or
mov
mov
div
hlt
mov
popf
cmp
out
testb
inc
sbb
jne
or
sbb
ds
lahf
pop
jp
pop
iret
jno
test
adc
clc
inc
xchg
shlb
stos
adc
sub
pop
add
insb
loopne
adc
test
add
mov
iret
fsubrl
in
xor
add
stc
push
add
or
loope
sub
pushaw
xchg
in
insl
call
xor
cwtl
adc
add
mov
pushf
lock
pop
in
lock
or
xor
sbb
cld
mov
imul
push
mov
stc
mov
clc
test
jge
stos
fwait
int
fwait
aaa
mov
dec
sub
lret
out
mov
stos
xor
dec
pop
lahf
in
xchg
rolb
push
popaw
dec
pushf
inc
in
in
jle
nop
adc
in
shrl
sub
repnz
fs
fcoml
cmpsb
mov
xor
or
mov
adc
mov
mov
stos
push
add
roll
rcrb
cmpsl
nop
push
dec
xor
pushf
sbb
pop
adc
jge
jl
jg
sbb
pop
je
enter
mov
sbb
int
xchg
data16
or
dec
test
jb
or
mov
and
imul
ret
cmp
pop
cmp
popa
push
enter
incb
and
push
mov
or
mov
jb
call
adc
fldl
mov
xchg
cli
test
into
pop
adc
or
adc
das
cmp
data16
das
pop
repz
jbe
pop
mov
inc
imul
fisubs
clc
in
jno
and
daa
inc
jge
pop
adc
mov
mov
outsl
mov
arpl
sbb
mov
xchg
sbb
or
push
or
xor
jecxz
cltd
loop
mov
cmp
insl
int
movsl
test
fimull
movq
scas
shll
jle
jo
push
mov
jb
push
push
jne
movsb
call
sub
loopne
sub
arpl
lret
fcmovnb
xchg
fcmovnb
adcl
xchg
xchg
xchg
pop
jg
push
pop
stos
ret
inc
loope
xor
ss
pop
cli
ljmp
ret
repnz
jmp
movsb
mov
sbb
fidivs
jbe
mov
fisttps
mov
pusha
sti
or
fwait
jno
je
inc
add
lret
aad
std
adc
mov
xor
push
scas
jmp
test
pop
sub
cmp
mov
sbb
dec
mov
sbb
rep
insb
cli
add
xchg
out
jb
mov
enter
xor
out
jge
dec
lahf
push
push
dec
sub
adc
or
insl
call
jp
loopne
and
ret
cltd
ret
or
ss
loopne
mov
out
inc
mov
rcll
int3
ret
fnstsw
test
in
imul
mov
jb
shlb
or
xchg
push
sub
mov
cmp
pusha
cli
mov
bound
xor
out
in
lea
mov
adc
rcr
lods
test
stos
repz
pop
push
dec
fisubrs
dec
mov
cmp
and
push
jge
test
xchg
lea
xor
adc
fdivrs
pop
in
pop
outsl
fildll
loope
dec
roll
lds
out
lahf
outsb
pop
pop
push
and
pop
pop
inc
or
imul
or
lock
gs
push
lds
test
jle
jns
lods
btcl
add
filds
mov
rcl
addr16
push
fnstcw
call
pop
popf
lcall
roll
sbb
clc
shl
pop
and
or
jne
decb
mov
loopne
rorb
icebp
daa
rolb
jp
hlt
ror
sbb
stos
ret
into
roll
mov
lods
mov
insb
cmp
mov
and
jl
sbb
ljmp
xchg
ret
xor
pusha
sbb
stos
sub
stos
clc
xor
adc
fmuls
push
in
and
mov
insl
mov
adc
adc
outsl
push
xchg
inc
insb
fiadds
cltd
sub
test
pop
jno
fnstenv
mov
incb
dec
cld
outsb
movsl
mov
stc
mov
mov
and
insb
dec
cmp
inc
add
fistps
push
push
jp
xor
scas
jae
lods
out
lock
es
roll
ret
shlb
fstl
xor
mulb
adc
pushf
sbb
loopne
jbe,pn
in
cli
push
nop
or
add
fsub
jecxz
outsb
shrb
pop
lds
sbb
and
sbb
cmpsl
cwtl
mov
jo
test
arpl
add
aad
xor
mov
in
add
lock
in
lcall
fstps
arpl
mov
xchg
out
inc
cmp
lcall
imul
test
ret
fstpl
jnp
in
scas
jae
insb
sbb
je
sbb
nop
and
sbb
cmp
cwtl
xchg
shrl
pop
bound
outsl
adc
dec
test
rcrb
add
dec
dec
xor
mov
sbb
pushf
iret
mov
cld
mov
xchg
lahf
jle
in
scas
mov
stos
xchg
adc
or
pop
pop
rorl
out
inc
or
jnp
sbbl
sub
add
or
fsub
ja
mov
faddp
movb
outsl
sub
nop
push
jmp
add
mov
mov
fstp
outsb
pop
or
sub
sbb
lods
pop
push
xchg
cmp
out
xchg
xchg
xor
dec
mov
lea
mov
or
ret
or
adc
outsb
xor
mov
rcrl
add
fisubrs
inc
icebp
jecxz
out
insl
cmp
into
sub
push
mov
pop
xor
or
rcr
jo
lock
in
clc
sub
lock
or
and
filds
fdivrs
in
mov
movsb
rorl
pop
leave
insl
dec
icebp
or
lods
sbb
jbe
sbb
push
ljmpw
insl
and
mov
push
aam
stos
mov
ss
and
mov
gs
shll
mov
jle
shlb
lea
loopne
add
and
int3
lods
das
shlb
and
lret
mov
or
cmp
mov
lock
mov
cmpl
mov
test
or
mov
clc
pop
out
lret
jb
loopne
in
fidivs
out
insl
lds
push
jmp
pop
loopne
sahf
arpl
ljmp
ret
pop
insb
adc
inc
scas
sbb
sbb
rcrb
test
cmpsb
sbb
add
and
sbb
rclb
sbb
jp
ret
push
fistpll
cmpsl
addb
testb
jg
mov
psrlq
xchg
ss
pop
inc
add
push
das
push
mov
fimuls
insb
inc
inc
test
rol
mov
test
out
adc
inc
aaa
jle
pop
jp
ds
inc
jl
add
imul
sub
xchg
call
pusha
jecxz
dec
xor
adc
xor
inc
jecxz
inc
das
mov
xor
test
insb
cmp
push
or
sub
orb
test
mov
xchg
loopne
stc
push
loopne
or
test
pop
adc
out
adc
adc
mov
insb
lea
push
repnz
inc
inc
push
dec
pop
and
pop
push
push
lret
add
mov
ds
insb
stos
aaa
and
jge
test
sbb
iret
test
sub
inc
sbb
add
insl
pop
adc
pusha
test
fadds
add
movb
mov
sbb
add
loopne
add
psrlw
jbe
outsb
pop
ret
inc
negb
cmp
movsl
repnz
jmp
jecxz
jp
push
fldt
jmp
rcr
sarl
inc
inc
xchg
and
mov
jp
add
loop
scas
daa
jne
mov
enter
rcll
aad
std
jmp
mov
add
clc
jge
sbb
mov
pop
jo
sub
adc
pusha
jmp
mov
xchg
stos
mov
mov
adc
add
push
mov
cmp
and
cmp
xchg
cs
and
add
cmp
fdivr
inc
mov
sbb
pop
mov
ja
movsl
push
xchg
iret
push
xchg
mov
ljmp
aad
nop
popf
adc
outsb
mov
les
fildll
inc
push
fcoms
stos
mov
inc
dec
mov
lahf
bound
mov
call
inc
gs
ficompl
in
or
push
mov
fldt
xchg
add
jo
pop
je
mov
insb
pop
cmc
dec
loope
jecxz
sbb
testb
insl
mov
sub
pop
bound
in
divl
std
lods
sti
lods
pop
adc
lea
cmp
lods
xor
mov
insl
js
sbb
mov
mov
int
push
fld
stc
js
mov
in
es
inc
dec
into
jae
mov
leave
scas
dec
inc
adc
push
test
mov
out
and
xchg
scas
jg
data16
outsb
int
ss
subl
add
mov
es
sub
sbb
lret
xchg
xor
adc
mov
pushf
jge,pt
jecxz
sbb
ret
mov
mov
inc
sub
sub
jbe
xchg
sbb
lds
sbb
fmuls
in
outsb
pushf
mov
lret
push
lds
mov
mov
inc
add
std
hlt
push
or
and
rdtsc
dec
add
dec
icebp
push
jae
sub
lret
frstor
xor
push
mov
ja
jno
lods
cmpl
shll
jne
mov
or
in
js
lods
nop
int
add
cs
or
mov
push
call
pusha
stos
lahf
pop
mov
lock
aam
insb
daa
pop
pop
fistpll
cmp
lds
sbb
inc
and
pushf
bnd
roll
fsts
xor
xor
adc
jo
sub
daa
sub
into
in
push
or
fdiv
add
fmuls
mov
mov
popl
sbb
and
and
pop
mov
pop
ret
aad
sub
sub
cwtl
pusha
out
cmpsb
mov
xchg
ljmp
dec
stos
dec
sbb
in
call
cmpsb
xchg
out
xchg
fimull
add
scas
ss
xchg
or
sub
jae
ret
subl
movsb
cmp
sbb
sbb
cmp
mov
pop
push
dec
jne
sub
dec
add
sub
or
add
xchg
rcll
stos
insl
or
adc
je
push
insb
pop
sahf
pop
cmc
ret
insb
mov
xor
gs
pop
jo
dec
iret
into
es
dec
and
out
dec
mov
jle
jae
mov
xchg
orb
mov
or
in
test
dec
add
add
stos
js
aaa
lret
clc
push
iret
push
push
push
cmp
ljmp
ret
outsb
dec
testb
add
adc
scas
das
outsl
add
sub
bound
mov
mov
cmp
mov
push
test
popa
push
incb
add
popa
jbe
push
pop
lea
xor
filds
xadd
imul
inc
xor
mov
add
ret
test
lahf
push
inc
outsl
sub
paddusw
mov
push
add
inc
mov
dec
mov
add
mov
lods
sub
inc
mov
or
pusha
leave
push
rcl
sarb
sub
aas
sbb
les
pusha
ret
mov
or
stc
cmp
bound
lods
mov
xor
int
popf
scas
xchg
mov
test
jp
push
imull
jge
xor
test
xchg
mov
adc
mov
shrl
add
inc
mov
imul
or
adc
test
std
shlb
add
xchg
fnstcw
push
add
mov
xorl
nop
or
push
jb
cmpsl
pop
loopne
fsubr
and
jl
movsl
ja
or
sub
lds
sti
push
je
clc
std
rorl
adc
or
add
movsl
sbb
xchg
jo
mov
adc
bnd
xor
clc
jbe
jo
dec
add
mov
pop
or
pop
scas
mov
scas
push
sbb
pop
int3
add
mov
pop
add
mov
ret
fdivs
and
cs
pushf
test
inc
xchg
popa
ss
stc
leave
pop
int3
stos
inc
sbb
mov
cmpb
fs
jae
or
pushf
rorl
mov
shl
add
dec
repnz
sbb
add
dec
into
loop
repnz
mov
cltd
add
jbe
dec
mov
pushf
cmp
out
outsl
jo
xor
pop
movsb
shlb
push
sbb
add
mov
shr
aas
std
push
and
out
pop
insl
aad
popf
out
sbb
mov
mov
sub
jnp
xor
pop
mov
jmp
out
loopne
mov
mov
add
enter
dec
mov
icebp
jl
jl
and
addb
insb
sub
sub
pop
jae
mov
shrl
jmp
fwait
inc
and
push
xor
jg
add
mov
loopne
ss
adc
ja
sbb
lret
pop
mov
dec
pop
call
sbb
dec
mov
popa
xor
shr
ret
inc
in
xor
or
cmp
xor
pop
lret
lcall
ss
push
mov
jae
icebp
cwtl
dec
call
jo
aam
sub
sub
fwait
loopne
or
scas
cmp
outsl
add
jp
xor
pop
dec
inc
ror
dec
subb
and
and
ja
in
xlat
test
mov
or
and
jae
inc
jmp
cld
pop
aaa
hlt
mov
outsb
pusha
pop
rcrl
js
sub
adc
mov
jo
xor
pop
push
gs
sbbl
mov
ret
mov
push
leave
pop
mov
iret
mov
aad
bound
and
test
jae
jl
shlb
pop
fstl
or
push
jl
leave
cmc
push
outsb
xchg
sbb
psadbw
repnz
lret
enter
sub
jmp
xchg
fbld
fdivp
mov
out
jge
lea
xchg
mov
icebp
ds
movsb
and
rolb
add
call
lods
push
push
rclb
push
loopne
loop
test
test
lret
and
test
mov
ret
out
dec
gs
sbb
mov
pop
sub
push
and
push
mov
imul
fldcw
insl
fdiv
iret
test
cmp
xor
stos
and
addb
push
xchg
cmp
inc
insl
pop
out
dec
test
fnsave
adcl
or
mov
fwait
incb
xorl
lcall
cmp
les
out
add
inc
fstpt
scas
lahf
jp
insb
int3
fcoms
mov
lods
or
jg
pushf
dec
in
es
repnz
xchg
push
in
dec
jne
loopne
repz
hlt
clc
dec
inc
hlt
mov
mov
ja
mov
les
divl
pop
outsb
imul
cmpl
outsb
bound
roll
pop
mov
test
arpl
lock
sub
dec
jg
cld
nop
and
cmp
pop
mull
mov
push
mov
loopne
fidivrs
scas
push
aam
mov
jo
lret
adc
or
fcoml
mov
decb
repz
sbb
or
icebp
inc
xlat
gs
jecxz
jnp
loop
jnp
xchg
icebp
rcl
xorl
push
sbb
aad
cmpps
or
leave
sbb
call
call
aam
dec
roll
adc
xchg
outsl
or
in
sub
or
mov
icebp
pop
clc
outsb
out
loopne
pop
mov
mov
adc
test
xchg
sahf
insb
or
popf
shlb
in
insb
push
jno
loopne
ret
fwait
jne
loopne
cmp
fimull
dec
jnp
and
xchg
cmp
cmp
pop
add
ss
xchg
sbb
pop
push
push
add
xor
jge
dec
dec
rcll
lcall
mov
adc
loopne
loop
jbe
clc
cwtl
mov
out
inc
imul
lock
jg
xchg
mov
xchg
scas
jbe
pop
adc
push
and
loope
std
dec
lock
mov
dec
inc
xchg
mov
add
cmp
ss
in
fsubrs
je
in
xchg
mov
fimull
je
lahf
add
int
xor
mov
fwait
jmp
dec
jge
fisttps
add
push
mov
hlt
sbb
adc
mov
decb
sub
sar
jecxz
mov
pop
push
lcall
and
xchg
dec
adc
cmpsb
dec
or
add
ret
xchg
lcall
push
jo
sahf
mov
jnp
int
stc
test
outsb
cwtl
cmp
dec
andl
orl
sbb
or
add
adcl
xor
xchg
add
cmpl
mov
inc
mov
cmp
jbe
shll
test
std
cmpsl
adc
mov
pcmpeqw
pop
push
sbb
sarb
mov
enter
ret
and
pop
inc
repz
lods
mov
jecxz
mov
push
mov
push
mov
xor
cmp
in
ds
ja
xchg
jns
and
sbb
xchg
outsb
mov
insb
cmp
shll
js
xor
jg
jl
nop
lock
mov
push
push
outsl
mov
and
push
mov
mov
cmp
aam
jno
xorb
sub
xor
cmp
cmpsl
fistps
je
insb
jbe
sarl
sbb
popa
xor
pusha
adc
push
pop
loope
test
incl
mov
mov
into
and
rorb
push
pop
adc
xchg
push
add
inc
cld
add
filds
fs
cmpb
inc
orl
mov
insl
or
test
jno
mov
std
push
jb
clc
shrb
jo
je
xchg
xchg
and
and
cs
inc
push
or
xchg
fdivl
aam
or
mov
je
lret
ljmp
or
or
pop
pop
xchg
dec
loope
sub
dec
das
lcall
add
lahf
add
addr16
pop
add
adc
roll
push
lcall
mov
inc
in
stos
sbb
fdivl
clc
bound
mov
out
das
jp
cld
icebp
adc
adc
jge
aam
push
and
mov
data16
jecxz
jle
clc
lcall
add
popa
cmp
push
cmp
sbb
or
jl
and
aad
inc
cmp
mov
test
out
mov
std
mov
add
std
add
and
loopne
lods
or
xchg
sbb
cmpl
mov
add
div
inc
pop
xlat
adc
outsl
jl
cmp
jl
dec
jge
xor
outsb
mov
loopne
ljmp
push
adc
int3
sub
dec
inc
mov
icebp
out
out
cmp
xlat
movsl
pop
nop
cmpsb
adc
popa
mov
and
pop
jecxz
in
dec
les
mov
into
out
ret
cmp
xchg
mov
cltd
mov
inc
pop
sub
sbb
mov
mov
std
pop
fidivs
pushf
mov
push
das
push
rol
subb
pop
add
and
out
inc
mov
xor
repz
in
outsb
or
lret
iret
clc
sbb
mov
lret
sahf
sub
cmp
add
pop
sub
call
ja
jl
pop
sar
pop
or
icebp
in
call
jne
hlt
movsb
std
movsl
cs
xlat
aam
fisttps
mov
mov
les
xchg
insb
testb
pusha
lds
push
cltd
jnp
mov
outsb
push
outsb
lea
lahf
and
fistl
ss
xor
jmp
nop
cwtl
push
fsts
cmp
sub
adc
ds
or
mov
lahf
pop
mov
lods
sbb
pusha
arpl
mov
pop
mov
addb
and
popa
cmc
clc
pop
sbb
insb
aad
jns
insl
add
or
sti
push
add
fnstsw
data16
inc
xchg
test
or
mov
add
in
add
cmp
test
cmp
cli
inc
mov
sub
movsl
fbld
lret
add
xchg
cmc
outsl
sub
dec
cltd
sbb
xchg
pop
and
adc
cmpsl
rorb
mov
test
adc
lds
adc
scas
sub
lods
lret
push
movsb
mov
pop
push
and
inc
add
cli
movl
mov
mov
cli
pop
pushf
lock
sub
xor
xor
inc
fs
adc
mov
inc
insb
xor
mov
ret
xor
and
icebp
add
or
pop
mov
pop
xchg
inc
cmp
jmp
insb
std
mov
or
fldt
push
fmull
and
cmp
adc
sub
mov
add
or
add
loope
sarb
mov
out
out
xor
shrl
mov
into
popa
jmp
jbe
xor
sub
popa
shl
outsb
jp
adc
orb
imul
xchg
stos
call
cmp
fdivrp
mov
cmp
loopne
dec
out
add
cmp
addr16
push
and
mov
add
inc
fucomip
mov
shlb
leave
add
mov
push
js
adc
dec
fstps
xor
inc
mov
dec
rcll
ffree
pop
xchg
push
outsb
rolb
or
pop
jle
lock
push
loopne
mov
add
fildll
fs
sbb
pusha
and
out
and
mov
mov
mov
inc
add
arpl
pop
dec
stos
cmp
xor
loopne
mov
subb
leave
das
loopne
cmpb
sbb
jns
sub
adc
mov
fmul
pop
add
sti
sub
jo
cld
stc
call
mov
in
sbb
aad
clc
inc
fisubs
dec
lea
mov
add
je
sub
sub
push
js
arpl
scas
lods
hlt
xchg
in
movd
jne
xchg
cmp
std
rclb
pusha
push
test
inc
inc
add
outsb
push
jns
xor
insb
sbb
add
mov
sbb
cwtl
dec
mov
mov
jno
sbb
cmpsb
rorb
or
mov
mov
jp
in
scas
aad
arpl
or
xlat
andb
mov
in
or
mov
sub
in
xchg
xor
loopne
cmpsl
arpl
inc
scas
adc
sub
mov
ja
pop
popa
rol
or
adc
jecxz
aam
cmpl
mov
mov
imul
subl
add
cmp
xor
jl
fsubl
adc
pusha
imul
inc
insl
fisubl
mov
mov
and
arpl
jp
scas
out
dec
jno
lahf
sub
cli
inc
adc
add
cwtl
push
in
xchg
push
cmp
out
shl
jmp
xor
cmpsl
jb
das
mov
xchg
pushf
xchg
mov
cmp
popf
fcomp
std
fstl
xor
xchg
rcrl
sarl
dec
cld
mov
add
and
pushl
rcr
pop
mov
dec
sbb
inc
jg
icebp
or
cmp
xlat
or
xor
or
mov
inc
xor
xor
aaa
inc
mov
push
jo
jl
mov
sbb
dec
in
adc
and
shll
mov
sti
mov
dec
xor
insl
and
mov
jmp
scas
and
sub
gs
mov
push
inc
jl
insl
imul
jnp
fstpt
test
mov
mov
lds
and
sub
insl
pop
in
mov
push
jecxz
nop
outsl
icebp
push
outsl
mov
aad
rclb
lock
andb
xchg
enter
mov
add
pop
test
pop
push
cmp
clc
push
js
mov
jmp
ss
mov
es
sbb
sar
mov
dec
dec
mov
aas
pop
inc
xchg
add
leave
mov
scas
cli
movsl
scas
fsubs
or
mov
int3
cmpb
negl
mov
cltd
scas
lcall
je
add
insl
dec
mov
mov
aam
or
mov
rcrl
adc
xor
rcrb
mov
adc
cs
pop
cmp
fs
push
add
jne
icebp
xor
cli
mov
xchg
jecxz
inc
test
ficoml
popa
inc
jb
pushf
xchg
xor
mov
push
sbb
xor
adc
jl
inc
cmpl
and
fidivl
loope
sub
pop
adcl
xchg
sbb
adc
mov
dec
dec
push
xorb
mov
aaa
jl
loope
push
push
adcl
fstpl
cwtl
imul
mov
jl
icebp
push
rep
ss
pop
and
mov
mulb
sbb
loopne
ror
sub
and
inc
push
jecxz
mov
pushf
dec
jecxz
xchg
add
inc
movb
mov
rcrl
cmc
or
inc
sbb
loope
jo
xchg
mov
sub
dec
push
andl
ret
xchg
je
jp
add
loop
fcmovu
jo
inc
jg
mov
mov
cmovae
mov
in
push
inc
in
or
leave
js
loopne
mov
pusha
stos
and
stc
das
xor
adc
dec
pop
or
mov
push
aas
lds
shlb
stos
cmp
loope
cmp
call
push
or
xchg
pop
mov
mov
sti
mov
sbb
xchg
cmpsl
push
aam
mov
pop
inc
fdivr
ret
movsb
push
arpl
fs
loopne
adc
adc
jne
shrb
out
bound
pop
push
sub
mov
mov
jo
arpl
mov
xlat
mov
mov
or
in
mov
int
rolb
enter
mov
or
adc
lods
es
sub
cwtl
push
mov
ror
outsl
std
push
ds
inc
in
sbb
mov
fwait
mov
xchg
cmc
aad
mov
and
std
adc
in
repz
iret
mov
inc
loope
xchg
pop
sbb
pop
mov
lret
outsb
movsb
cmp
test
orl
mov
in
adc
mov
add
into
les
or
loopne
loope
loopne
sub
ss
xlat
lock
lahf
cwtl
push
inc
xor
sbb
dec
scas
and
test
sub
push
sbb
mov
ja
movsl
lahf
xor
jl
loopne
mov
rol
jnp
dec
xchg
jb
xchg
mov
xor
out
mov
clc
mov
pop
inc
cmp
gs
sarl
stos
xorl
orl
mov
loopne
ja
in
dec
test
nop
jns
mov
or
sbb
enter
les
jmp
mov
sti
sbb
test
and
mov
pop
test
lret
rolb
mov
lods
hlt
aam
xchg
sbb
or
sub
fld
int
jge
jne
je
add
mov
xor
mov
xor
push
lret
outsl
or
sub
push
sbb
out
cld
mov
stos
or
pop
sub
clc
jmp
sbb
shrb
pop
push
lea
mov
inc
lea
test
popa
notl
scas
mov
shll
sahf
fildl
fstps
inc
out
mov
dec
outsl
fnsave
cmp
int3
adc
lock
inc
dec
mov
pop
xor
xlat
scas
dec
jecxz
push
es
sbb
inc
imul
das
sbb
xchg
insl
loope
shlb
sahf
mov
jno
andb
ds
int3
das
jge
push
jne
flds
pop
xor
test
in
mov
sub
and
mov
rcr
xchg
xchg
popf
call
outsb
inc
sbb
stos
mov
and
or
xchg
addl
sbb
ss
faddl
adc
js
mov
call
and
mov
rorb
mov
fistpl
jge
movsl
pop
lods
sub
cmpsb
xor
mov
ljmp
pop
dec
mov
jle
jbe
out
add
jnp
sbb
inc
iret
fnop
or
or
jecxz
xchg
pop
ljmp
int
pop
in
ror
add
cmp
stos
fldl
dec
sbb
faddl
test
in
jae
inc
add
mov
mov
ficomps
call
push
adc
adc
push
hlt
sbb
js
xchg
out
sbb
in
mov
aad
xchg
push
jnp
fs
rolb
xor
mov
sbb
rorl
repz
mov
inc
out
fiaddl
fwait
dec
or
ja
xor
xchg
aaa
lahf
fldl
mov
cmc
sub
mov
testb
adc
add
mov
clc
testb
mov
jecxz
mov
mov
mov
std
lea
and
adc
xchg
or
cltd
and
call
sti
test
inc
jo
mov
mov
dec
and
or
jo
dec
sbb
int
imul
das
insb
data16
les
adc
std
adc
lret
fbstp
mov
xchg
inc
mov
insb
sub
push
scas
xor
push
sub
out
lock
stos
sub
and
push
ss
jmp
cs
xlat
push
sti
push
adc
in
mov
cmp
ret
pop
jo
fisubl
popf
mov
sbb
addr16
arpl
test
sbb
paddw
ret
enter
rcl
lds
lods
xchg
dec
cld
adc
pop
and
and
out
ljmp
lcall
add
pop
cmpsl
and
outsl
cmc
in
pop
add
mul
mov
or
lds
push
scas
inc
cmp
iret
sbb
mov
icebp
lret
fimuls
jl
in
push
dec
imul
mov
icebp
pusha
inc
inc
shll
imul
ljmp
mov
cmp
adc
in
sbb
cmp
jp
inc
push
repz
sub
frstor
adc
sub
clc
orb
rclb
jge
or
das
jp
iret
mov
push
cmp
sbb
cmp
push
push
pop
sub
jecxz
jbe
xlat
mov
bound
mov
add
inc
ss
icebp
inc
sbb
fwait
pop
and
bound
mov
fidivrs
adc
or
aas
jp
mov
addr16
sub
repnz
dec
js
or
sub
out
es
and
sub
xchg
cmp
xchg
fldl
inc
cmp
pop
and
mov
idiv
mov
mov
xchg
popf
arpl
orl
in
inc
mov
adc
cmp
or
hlt
enter
inc
xor
mov
inc
aad
cli
jno
bound
inc
jmp
push
jge
adc
in
sbb
push
jbe
fs
aam
std
mov
add
sbb
jo
loope
push
xchg
or
adc
cwtl
or
adc
in
pop
ljmp
jne
les
mov
aaa
jno
adc
adc
cmp
cmpsb
arpl
dec
xchg
sbb
sbb
test
shll
into
icebp
sbb
adc
or
je
inc
scas
push
pusha
and
xor
pop
add
sbb
gs
stos
aaa
xor
xchg
adc
sbb
pop
and
icebp
inc
mov
popf
cmp
inc
cmp
mov
jb
adc
popf
dec
in
jo
mov
gs
les
sub
inc
sub
pop
repnz
enter
push
movsl
sti
pop
dec
dec
cmp
xor
mov
sub
adcl
push
xchg
iret
out
loopne
lock
aam
dec
icebp
jp
or
and
decl
es
addr16
mov
pop
int
jl
or
or
cmp
cltd
call
in
or
jns
sahf
movsl
sbb
add
mov
insb
cmp
adc
push
loopne
mov
je
mov
in
cmp
xchg
int
push
outsl
test
ss
fs
adc
push
cwtl
rcrb
push
lds
ror
adc
and
out
stos
jns
insl
xor
jbe
add
cmpsl
push
cmc
aas
fadd
outsb
pop
sbb
cli
fdiv
add
xor
std
mov
dec
sub
rorl
add
mov
js
or
incl
xchg
arpl
bound
lock
mov
data16
dec
and
xor
push
ficoms
iret
cwtl
leave
mov
js
subb
sbb
cld
push
mov
or
pop
ja
loopne
add
jne
cmpsl
pop
sub
andb
inc
lret
mov
pop
cmc
mov
aad
fsub
mov
sbb
mov
cmp
dec
pop
ret
adc
or
push
push
dec
mov
mov
aaa
decb
cmp
imul
nop
rcrb
pop
shrb
adc
in
push
addl
arpl
push
xor
inc
pop
outsb
std
cmp
push
cmp
pushf
and
and
cmp
xorb
lea
cmp
mov
into
mov
xor
sbb
mov
fwait
xor
bound
out
xor
xlat
adc
push
sahf
cmp
sbb
sahf
add
dec
pop
add
mov
inc
movsb
sbb
add
push
mov
arpl
out
fidivs
jmp
shlb
xlat
fildl
cmp
ret
imul
sti
scas
dec
pusha
push
sub
inc
or
ficoms
shll
stc
lret
jnp
jg
sarb
xchg
or
inc
jo
aad
or
mov
test
jns
sbb
pop
fadd
or
cmp
cmp
fists
push
lret
je
aas
das
adc
push
or
jp
outsl
pop
int
inc
std
xor
out
jge
xlat
add
push
outsb
call
repnz
out
daa
outsb
out
xchg
sub
ja
mov
mov
stc
sar
cmpb
mov
popf
fcoms
mov
xchg
sti
jns
dec
pop
imul
loope
dec
adc
inc
sub
mov
rcrb
dec
jne
mov
sbb
fisttpl
jno
stos
mov
mov
lock
xchg
loopne
adc
out
mov
lods
jmp
ret
fdivs
notl
nop
popa
addb
lret
jge
push
rolb
or
aam
or
push
push
xor
push
popa
xchg
jb
in
pop
sub
ret
push
mov
lds
jo
stos
inc
outsb
xchg
mov
ljmp
jo
fisttpll
lods
jp
insl
add
push
cmpl
dec
sub
pop
mov
ss
inc
sti
fdivp
xchg
imul
lret
insl
jmp
or
idivb
mov
outsb
lea
xchg
push
xor
insb
mov
mov
add
lock
mov
sbb
xchg
sti
mov
or
inc
dec
test
dec
xorb
adc
dec
jb
insl
push
push
imul
ret
and
jecxz
jge
xchg
bound
adc
add
jns
pop
pop
shlb
dec
daa
outsb
sub
test
fistl
mov
arpl
jl
leave
je
cmc
push
or
in
fwait
outsb
aaa
les
outsb
out
testl
inc
and
mov
inc
sub
jne
adc
addb
movb
jbe
dec
or
ss
xchg
mov
mov
inc
popa
shlb
push
out
pusha
pop
js
mov
mov
sbb
movb
sub
push
pop
adc
sbb
movsl
rolb
cwtl
ss
sbb
dec
les
dec
sbb
insl
inc
pop
sbb
or
xchg
dec
and
fbld
loopne
xor
cmpl
aad
inc
or
sbb
movsl
mov
add
mov
add
insb
dec
fdivl
test
imul
std
insb
sub
call
jbe
mov
loop
push
mov
push
mov
sbb
stos
add
imul
xor
addr16
push
sbb
xchg
mov
out
mov
inc
leave
in
rcl
push
int3
subb
mov
nop
cld
rcll
dec
jo
repnz
orb
inc
aad
xchg
dec
scas
jno
imul
fwait
xchg
and
or
inc
sub
or
call
sub
or
dec
stos
ret
neg
mov
and
or
inc
adcb
inc
xor
dec
in
jp
daa
mov
pop
cmp
inc
xor
lods
lea
aaa
pop
aad
jle
xor
or
insb
les
mov
call
movsb
inc
fs
cmpsl
jbe
push
cmc
aas
cmp
cwtl
call
fnstsw
mov
or
jo
popa
pop
adc
mov
jno
cmp
mov
mov
and
or
xor
mov
test
add
adc
mov
ss
popa
jne
lea
cmpsb
inc
leave
cs
mov
sbb
mov
push
lods
fnsave
js
or
es
jb
stos
mov
push
cld
insb
cltd
inc
push
test
xor
dec
not
xor
cmpsb
and
push
pop
fwait
outsl
sub
mov
scas
xchg
push
add
or
jne
roll
in
sarl
stc
inc
rcrb
test
frstor
sbb
xor
mov
inc
cmp
add
fstl
in
add
cmp
mov
push
cmpsl
lods
pop
mov
xlat
jno
test
mov
lock
sub
mov
add
cmp
mov
adc
pop
mov
movb
fsts
sbb
dec
sub
adc
aaa
fisttpll
push
imul
cmpsb
cli
in
jnp
mov
imul
mov
jmp
pusha
test
popf
sub
pop
mov
out
sub
add
mov
into
scas
pop
mov
xchg
outsb
adcb
xor
mov
xor
clc
les
js
sub
repz
or
mov
and
clc
sub
aam
and
push
inc
testl
mov
xor
adc
and
repz
fldl
mov
and
enter
mov
icebp
jbe
jmp
nop
xchg
ds
and
fwait
insl
out
mov
jmp
fwait
imul
mov
test
dec
ja
shl
and
fwait
stos
mov
dec
mov
loope
jl
outsb
mov
cmpsl
jnp
mov
stos
ja
mov
mov
xchg
in
adc
pop
pusha
lahf
shll
jle
inc
fisttps
dec
ja
aad
and
loopne
mov
or
ss
xchg
xor
and
popa
xor
pop
loop
aad
scas
scas
push
std
push
lock
outsl
jl
imul
hlt
test
dec
sbb
shlb
xchg
bswap
or
ja
sub
fsub
test
cmp
inc
pop
mov
hlt
xchg
in
xchg
sbb
fidivrs
outsb
jne
ret
inc
js
lock
popf
shld
shll
iret
bound
push
ss
cmp
or
xor
stos
cmpsl
enter
orl
repnz
cmp
movsl
mov
or
push
mov
mov
hlt
pop
xchg
inc
int3
hlt
or
mov
inc
jne
adc
push
inc
arpl
movb
lods
or
mov
fcompl
cld
and
sub
inc
fwait
inc
sub
cs
sub
mov
fiadds
sbb
lcall
adc
pop
lahf
mov
add
mov
sbbl
xchg
orb
dec
xchg
lods
dec
imul
xchg
mov
pusha
pusha
push
rcrb
test
adc
push
jle
and
dec
adc
rorl
jne
mov
sbb
add
sahf
std
add
mov
test
js
pop
scas
pop
es
push
pop
pusha
or
sti
leave
jle
insb
bound
jmp
loopne
rcll
and
xchg
or
jmp
push
push
jp
or
pop
sbb
push
add
mov
hlt
pop
in
jl
xor
mov
inc
movsb
lahf
dec
scas
outsl
add
ret
sahf
pop
lock
mov
insl
mov
mov
sti
jmp
fcompl
mov
pop
aas
sub
sbb
sbb
das
rcl
incl
fiaddl
add
rorb
mov
fdivl
push
sahf
xor
mov
dec
aad
push
leave
outsl
adc
inc
shlb
add
xor
adc
clc
jecxz
dec
out
sbb
mov
fldenv
mov
out
inc
cmp
repnz
rorb
pusha
adc
fisubrs
fidivrl
or
push
dec
sbb
jne
xor
stc
mov
jmp
paddusw
mov
lret
movsl
pop
aaa
xchg
cs
xchg
gs
mov
pop
or
or
jmp
mov
pop
pop
jg
lret
fbld
mov
leave
pop
jg
xchg
cmp
cltd
add
jp
cltd
or
movsl
dec
inc
pusha
sbb
addr16
pop
jl
mov
imul
cmp
mov
test
mov
neg
pushf
push
lods
pop
and
dec
mov
decl
push
mov
pop
aas
loope
cli
enter
fnsave
or
dec
lahf
sbb
adc
cmp
cmp
inc
mov
dec
sbb
lea
bound
jg
arpl
call
xorl
push
popf
insb
adc
pop
mov
std
inc
sub
lods
jmp
cltd
and
hlt
cmp
fistpll
inc
inc
push
rclb
push
inc
jns
jns
les
push
pop
or
mov
jbe,pn
add
adc
mov
cwtl
dec
jmp
lods
push
in
lret
adc
lea
pop
imul
imul
mov
pusha
and
or
test
loop
je
mov
mov
rolb
sbb
jle
push
dec
dec
in
call
add
adc
jae
cmc
movsb
cmpsl
inc
aas
shll
add
das
push
mov
faddp
fstl
cld
insb
lea
sub
aam
and
loope
jg
mov
je
lret
popa
fisubrs
cs
loopne
mov
pop
aam
bound
arpl
push
ljmp
mov
sbb
es
mov
mov
insb
in
push
cmp
insb
fidivrs
pop
jl
icebp
icebp
ds
dec
ds
les
inc
mov
pop
ljmp
add
loop
jp
es
pop
push
cwtl
pop
sub
xlat
add
sub
mov
pusha
inc
je
jg
lcall
cmp
aad
insb
mov
add
sahf
neg
int
insl
mov
or
pop
mov
int3
sbb
and
ss
cmpb
loope
push
push
imul
and
hlt
xor
int3
jne
call
pmaxsw
sub
test
jge
cmp
ror
aaa
mov
lea
ds
or
push
sbb
test
bound
pop
add
mov
imul
dec
sbb
cmp
fisubrs
cmpsb
stos
add
inc
xchg
lahf
popf
lahf
data16
jmp
popa
jmp
or
pusha
loope
or
leave
shrl
outsb
sbb
in
xor
shlb
mov
pushf
insb
mov
pop
clc
inc
pop
xchg
mov
xlat
inc
xor
inc
pop
and
loop
subb
mov
into
leave
imull
js
dec
sbb
sbbb
movsl
add
sti
insl
orl
xchg
ja
pop
addr16
sub
push
out
movsl
outsl
fimuls
neg
das
rcrl
loopne
aaa
loopne
daa
inc
loopne
inc
out
aaa
les
les
stos
stos
insb
lahf
dec
push
in
inc
pop
jno
push
sbb
push
stos
mov
outsl
and
stos
scas
push
pushf
repnz
mov
inc
xchg
arpl
jns
sbb
mov
push
hlt
ss
inc
sbb
inc
mov
xchg
fcoms
jbe
test
pop
jg
sbb
mov
sti
loope
mov
pusha
outsb
mov
sub
lahf
scas
nopl
cmc
ret
push
fmull
or
mov
xor
and
mov
adc
mov
cmpsl
test
out
and
lcall
jmp
jle
cmp
aad
pop
or
sub
cli
mov
inc
add
pop
js
mov
in
push
cmp
pop
popa
sub
jmp
lret
dec
add
cld
rorb
push
pop
stc
jecxz
mov
jnp
dec
inc
xor
mov
pop
mov
ljmp
idivb
fistps
sub
sti
les
mov
jmp
jo
adc
jns
ret
jp
fucom
inc
mov
push
test
mov
mov
cmp
adc
inc
es
cmp
jo
sti
das
push
adc
jmp
daa
mov
sub
mov
icebp
movsl
rclb
cmc
and
pop
adc
les
or
outsb
push
mov
pop
add
xor
pop
pop
dec
movsl
enter
lock
push
fldl
in
bound
adc
pop
ret
test
inc
frstor
arpl
in
sbb
loop
xchg
clc
and
shl
jne
shlb
cmp
jno
xchg
and
fmuls
pop
sub
jnp
sub
pop
int3
push
inc
ret
lods
mov
sbb
mov
add
aad
loopne
in
call
sahf
out
push
pop
jg
inc
inc
nop
cld
mov
jmp
and
cmpb
cs
or
cli
push
pop
cmpsb
loopne
jl
ret
pop
cmp
inc
inc
dec
inc
gs
into
xchg
aad
leave
inc
dec
in
ja
cmp
outsb
loopne
adc
in
xor
jp
inc
insl
mov
out
mov
mov
es
ss
adc
sbbl
mov
call
stc
mov
fisubrl
js
out
jp
xchg
negb
pop
sahf
push
or
dec
add
mov
data16
pop
enter
mov
mov
add
jl
movsl
pop
rcll
xor
mov
sub
arpl
cmpsl
int
jecxz
push
sub
adc
rclb
push
jo
and
out
repz
cmp
xor
adc
jp
pop
mov
std
push
shll
xchg
ja
or
pop
push
inc
call
push
pop
jbe
outsl
mov
inc
sbb
adc
inc
pop
decb
dec
test
mov
enter
push
aam
push
adc
push
aam
cmpsl
or
adc
pop
push
std
pusha
ds
mov
lock
mov
out
aad
cld
testb
mov
addb
imul
mov
or
xor
lock
sub
xchg
fcoml
adc
popa
mov
movsb
push
mov
inc
and
mov
aas
cmp
mov
mov
addr16
cs
cltd
add
mov
ret
clc
jecxz
data16
sub
mov
outsl
mov
notb
inc
jl
mov
ja
pop
push
cmp
imul
cmpsb
dec
icebp
fsubr
decl
or
rcrl
pushf
inc
and
mov
bsf
mov
mov
jo
repz
or
push
sahf
dec
adc
insl
inc
shrb
push
out
adc
adc
xor
xor
push
jne
loopne
repz
je
and
rcr
fisttpl
cwtl
sub
leave
test
jnp
in
pop
and
lcall
jl
jg
sub
sbb
cmp
add
cmp
outsl
mov
inc
push
addr16
lret
testb
aas
clc
icebp
mov
imul
mov
add
cmpsb
and
mov
js
fistpll
mov
mov
rcl
jle
fcomi
test
and
clc
mov
fmul
pop
adc
pushf
inc
mov
jg
into
ret
rcl
adc
divl
cmp
mov
cmp
adc
sbb
sti
add
int3
fcmovnu
or
push
pusha
int
sbb
ficompl
repnz
mov
dec
dec
dec
fsubl
push
mov
and
mov
pop
jo
push
fs
mov
aas
pop
xor
mov
mov
and
inc
daa
adc
je
iret
dec
lock
mov
or
mov
rol
or
aad
jbe
clc
cmc
clc
mov
int3
dec
push
jb
rclb
fiaddl
popa
sbb
pop
fwait
outsb
rcrl
xor
test
push
and
adc
testl
and
jge
dec
cmc
std
jbe
adc
lock
xchg
fstpt
mov
mov
pcmpeqw
pop
mov
jp
cmp
loope
xor
or
cld
popa
or
inc
adc
stos
dec
jl
adc
lods
xor
repz
push
popa
jns
push
lds
insb
dec
into
ret
pop
push
clc
in
jo
daa
adc
jecxz
sti
in
ret
movsl
scas
mov
or
imul
inc
jnp
clc
xlat
add
adc
adc
xchg
imul
sbb
lods
xchg
pop
jle
fs
movsl
das
out
inc
add
pop
lret
gs
repz
stos
add
out
jmp
lods
mov
mov
lea
hlt
mov
mov
sti
dec
lock
test
lcall
mov
sub
xorl
sbb
in
cmp
into
rcl
outsb
mov
pop
jmp
add
shrl
es
gs
and
cld
inc
mov
mov
adc
aas
jge
pop
sbbb
mov
ret
rol
jle
push
push
push
pushf
aad
sbb
xorb
xchg
into
lock
lret
mov
ljmp
loopne
jecxz
insb
int3
xlat
xlat
loop
fistpll
add
jg
jmp
add
xor
add
inc
call
cmpsl
push
jo
lods
clc
inc
fwait
stos
popa
js
ret
sbb
in
adc
push
js
outsb
mov
add
adc
and
cld
and
and
es
mov
cmp
push
sbb
xchg
mov
imul
push
cmp
mov
xor
cmpsl
add
sub
and
xchg
aaa
incb
mov
mov
fwait
call
inc
sbb
data16
add
mov
out
loopne
pusha
mov
xor
inc
pop
dec
xchg
xor
push
mov
pop
mov
dec
je
inc
shrl
ljmp
loope
add
mov
fcomps
lcall
ljmp
adc
jbe
adc
mov
aad
push
add
or
mov
inc
enter
and
mov
ss
scas
sahf
shl
pop
xor
xor
fimull
or
clc
ret
cmp
loope
push
mov
dec
sbb
outsl
sbb
mov
sahf
fcmovbe
cmp
push
rcll
lods
cli
mov
push
sub
cmc
addl
arpl
mov
sbb
shll
and
pop
jmp
les
mov
mov
bound
loop
inc
sub
test
movsl
daa
push
mov
dec
dec
mov
and
jg
pop
cli
rol
mov
push
int3
call
test
push
sarb
xchg
push
and
adc
push
ret
jb
adc
xchg
cmp
insb
mov
je
pusha
out
sbb
sub
xor
lahf
and
rolb
cmp
repnz
dec
sahf
dec
sbb
add
mov
shlb
idiv
mov
lret
or
jb
push
mov
adcl
cmp
das
lock
outsl
mov
rcrl
pop
cmpsl
sub
fcmovnbe
add
or
dec
push
jl
aaa
pop
inc
or
adcl
push
sbb
sub
sub
fistpll
fsub
mov
adc
add
icebp
lcall
hlt
cmpsb
mov
adc
mov
mov
stos
cmp
mov
dec
xchg
roll
popf
aaa
and
gs
push
loop
jo
xchg
fistl
test
test
mov
jo,pt
cmc
adc
mov
inc
loop
inc
leave
lods
sbb
add
xor
xlat
push
and
lock
lea
add
push
lcall
lcall
pop
loop
sbbb
inc
psllw
mov
cmpb
fdivrs
scas
fbld
in
sub
insb
dec
xchg
push
outsb
loop
jno,pt
inc
arpl
pop
pop
stos
or
rorl
pop
icebp
scas
mov
dec
sti
mov
dec
xchg
mov
jnp
jo
mov
xchg
shll
jp
adc
mov
xor
push
sub
mov
pop
icebp
sbb
jb
shll
test
popa
out
ss
xor
add
jp
mov
call
sahf
and
add
pop
lods
ja
dec
popf
ds
jle
test
inc
pushf
pop
pop
jo
fisubs
ret
cmp
aad
adc
or
adc
test
xchg
mov
call
mov
add
clc
mov
jbe
push
cli
adc
push
mov
pop
fsubs
test
fisttps
fiadds
and
cltd
popf
pop
sub
test
js
cwtl
pop
stc
jb
cmp
aad
loop
dec
add
icebp
aaa
jecxz
mov
or
mov
push
mov
adc
mov
sbb
repz
mov
jno
roll
xor
push
push
cmpsb
pop
and
or
push
in
imul
push
mov
pop
call
push
xor
mov
mov
out
ss
mov
mov
inc
jp
clc
outsl
jl
imul
sbb
lds
xchg
mov
sbb
pop
dec
jge
clc
mov
rolb
xorb
xor
arpl
test
test
or
jp
sbb
xor
adc
add
xor
inc
icebp
or
inc
addb
jno
mov
sarl
adc
inc
cmp
or
mov
mov
pop
pop
jbe
fwait
and
lret
xchg
add
leave
add
sbb
add
add
ret
dec
jne
lods
fwait
or
mov
sub
inc
subb
les
or
inc
sub
leave
pop
mov
jb
adc
into
or
fs
pop
je
lea
in
fcom
ffreep
sub
pop
idivl
dec
cmpsb
fdiv
hlt
jne
ret
test
lret
push
fimuls
or
add
jmp
or
jbe
mov
jns
xchg
add
push
insb
out
in
push
cmp
add
stos
stos
test
movsb
gs
std
aam
sti
cmp
cltd
jecxz
es
mov
and
mov
div
push
xor
adc
sub
mov
dec
cmp
push
add
jno
push
mov
push
popf
stos
pop
lea
cld
push
ss
pop
rcll
call
mov
add
test
mov
in
sbb
ret
adc
mov
ljmp
xchg
icebp
or
mov
jno
adc
inc
mov
pop
repz
out
ficoml
sbb
stos
inc
pusha
sbb
shll
sbb
cmp
out
sub
stc
mov
iret
pop
jge
cmpl
in
lea
push
ret
and
cli
lods
stos
cltd
mov
mov
stc
fucom
ret
hlt
or
mov
sub
icebp
test
mov
push
pop
mov
mov
loope
fists
ja
sbb
rclb
into
insb
dec
jg
mov
test
mov
or
or
pop
in
rcrl
xor
ret
adc
clc
movsb
out
lds
add
adc
scas
shlb
adc
fstps
adc
push
inc
push
xchg
mov
add
mov
cltd
sub
mov
stos
mov
inc
sti
cltd
frstor
icebp
fsubp
mov
faddl
loopne,pn
inc
jge
push
divl
push
add
mov
pushl
pop
adc
jo
adc
popa
pop
mov
xor
fmull
test
in
fisubl
std
pop
mov
pop
inc
ja
pusha
ljmp
lea
dec
into
inc
mov
imul
dec
push
jnp
outsl
cli
dec
cwtl
push
cmp
outsl
divl
aad
sbb
sub
call
mov
push
lret
jne
movsl
pop
cmp
sub
rcrb
push
push
popa
xor
mov
or
lcall
mov
shrb
sbb
movsl
pop
gs
dec
or
pop
popf
lds
jl
pop
sbb
mov
pop
scas
add
insl
loopne
cmp
mov
in
das
or
pop
cmp
arpl
cwtl
int
push
cs
lcall
and
mov
jp
or
xchg
lods
fsts
sahf
outsb
mov
lahf
sbb
std
jl
mov
call
add
sbb
xchg
xor
fs
add
cmpsb
roll
insb
and
jmp
push
mov
aaa
adc
cwtl
pop
clc
fadds
xor
ret
scas
add
nop
dec
inc
sbb
mov
enter
mov
and
aaa
mov
xor
lret
xchg
cmp
mov
and
add
push
and
cli
pushf
xor
sub
cmpb
lahf
add
test
jp
pop
jo
jl
negl
jb
push
cli
loopne
add
fildll
sbb
or
test
mov
lcall
dec
pop
adc
mov
sbbb
mov
out
gs
es
insl
push
mov
and
scas
addl
test
inc
mov
mov
mov
jnp,pt
or
test
pop
adc
jb
in
sbb
xlat
sub
ffreep
scas
enter
lods
xchg
popf
rol
lods
icebp
into
cmp
jecxz
xorb
pop
jno
adc
adc
dec
outsl
call
mov
pusha
mov
aad
das
test
jl
loope
mov
cmc
adc
sub
call
sub
sbb
xchg
xchg
mov
movsl
or
orl
mov
pop
pop
and
lods
adc
outsb
xor
mov
mov
inc
fwait
mov
cmp
sub
cli
fiaddl
or
pop
sub
cmpl
inc
dec
xor
or
in
xor
cmp
rcrl
adc
cmp
rorb
fisubl
mov
lret
ss
xchg
push
addl
outsl
sub
movb
mov
mov
jecxz
ret
and
lret
pushf
inc
das
push
jmp
adcb
mov
in
daa
add
call
pushf
inc
dec
setp
pop
dec
ljmp
sbb
sahf
pushf
cmp
lods
outsb
daa
sahf
push
filds
das
adc
in
loopne
pop
jnp
cmp
pop
idivl
push
cmpsb
stc
imul
aas
cmp
js,pt
cmp
xchg
scas
mov
or
add
sbb
adc
rcll
lds
mov
daa
mov
out
mov
bound
inc
imul
mov
cld
test
jecxz
pop
or
sub
out
shll
dec
test
das
cmp
test
and
cmp
ja
sti
or
jl
mov
push
aam
jmp
rclb
icebp
xchg
add
add
leave
push
repnz
outsb
pop
vmptrst
ds
aam
xchg
mov
pop
sbb
cli
aaa
rolb
in
idivb
lods
mov
mov
inc
loopne
jecxz
aaa
pop
jnp
add
icebp
jns
ljmp
loope
ror
add
mov
pop
sbb
lods
push
adc
push
je
subl
fldt
loope
lcall
sbb
sbb
stc
movsl
call
inc
xchg
fstpl
or
pusha
popf
jmp
push
sbbl
jg
cmc
pop
cmp
int
jno
inc
mov
adc
jne
or
ds
pushf
sbb
test
cmp
orl
adc
adc
cmp
and
xor
loopne
cmpsl
leave
inc
sti
pusha
mov
cmp
or
mov
mov
arpl
icebp
hlt
inc
xor
mov
xor
jne
inc
flds
cmpsl
sbb
push
or
mov
lock
iret
cmpsb
pop
cli
in
sub
xlat
adc
inc
push
cmp
cltd
cltd
xor
loopne
adc
and
popa
push
negb
pop
sub
pusha
add
sub
dec
js
add
adc
lea
xchg
pop
lods
stos
mov
gs
xchg
scas
lret
mov
ret
rcr
dec
pusha
dec
or
mov
sbb
sub
mov
jns
pop
cmp
enter
dec
stos
inc
int3
flds
and
xor
mov
or
ficompl
push
rorb
or
push
and
mov
sbb
xchg
jne
inc
push
cmpsl
mov
sbb
fldenv
pop
imul
sbb
xor
jge
in
mov
inc
ret
xor
jecxz
in
add
dec
repnz
xor
or
or
mov
cld
xorl
pusha
sbb
jle
adc
movb
pop
mov
jne
and
push
clc
inc
mov
fwait
clc
push
gs
add
es
sarb
inc
add
in
les
push
fiaddl
lock
xor
shrb
imul
inc
filds
jle
jne
pop
and
pop
lods
rorb
mov
mov
xchg
gs
loopne
push
aaa
loopne
cmpsb
daa
adc
sti
cmp
xor
in
aas
sub
das
lret
iret
add
mov
faddl
adc
mov
outsb
inc
mov
test
sbb
in
adc
dec
popa
pushf
jp
movsl
mulb
mov
bound
sahf
add
andl
cmpsl
mov
pop
xchg
shlb
mov
sbb
or
int3
mov
adc
xor
pop
fists
call
das
cmp
sbb
cmpsb
xchg
sub
mov
je
cmp
inc
loop
adc
testl
idiv
into
push
cmp
mov
inc
sub
inc
and
hlt
inc
adc
or
mov
cmp
test
das
cld
add
into
stos
add
repnz
pop
or
adc
std
lret
mov
sub
mov
lea
fimull
mov
push
pop
test
cmpsb
jbe
mov
sbb
sti
sbb
cmpsb
or
xchg
aad
addl
leave
xlat
nop
xor
push
mov
sti
stos
imul
mov
pop
adc
ja
lret
jge
roll
cmp
subb
jo
ret
jb
dec
xchg
cli
adc
lahf
es
scas
rolb
jne
int
std
pop
shlb
cmpsl
mov
and
adc
shll
jb
mov
or
xor
cmp
sahf
push
in
out
cs
dec
inc
mov
push
push
mov
inc
outsl
je
sub
mov
xchg
ret
ds
jbe
sbb
sbb
sahf
lcall
cwtl
xor
dec
mov
mov
rcr
lds
sbb
test
out
ret
cmc
lods
mov
mov
mov
mov
push
aad
mov
jbe
mov
cmp
jmp
and
inc
sbb
cwtl
jecxz
xchg
sub
push
adc
add
dec
adc
fcmovnb
dec
mov
add
cld
mov
dec
subps
ret
sub
sti
hlt
xlat
mov
sub
or
mov
ss
js
call
sbb
test
inc
rclb
pop
xor
orl
adc
mov
inc
and
sbb
leave
pop
lock
xchg
pop
mov
negb
xchg
and
xor
ret
test
inc
xlat
fiadds
cs
cld
mov
insl
repz
push
mov
sbb
popa
lock
dec
xchg
mov
ret
inc
cmp
into
test
xlat
add
in
out
mov
xchg
test
xchg
mov
fidivrl
lcall
cs
das
mov
jb
nop
lock
notb
and
fwait
xchg
xor
enter
sub
xchg
fisubrl
sbb
mov
mov
ret
clc
movsb
sbb
into
rorb
lcall
cld
push
push
pop
gs
mov
pop
daa
add
mov
ret
mov
sbb
in
xor
add
cmp
sub
inc
push
aas
or
lcall
outsb
popa
adc
pop
popl
hlt
cmp
add
cmp
rol
inc
pop
daa
mov
faddl
rolb
xchg
hlt
lret
and
push
cmp
fwait
out
idivl
outsb
mov
cmpsl
or
inc
inc
jb
pop
adc
xor
push
ljmp
mov
flds
bound
xchg
loope
xchg
jge
daa
stos
in
mov
nop
sbb
mov
jmp
mov
mov
testl
jp
add
rorb
or
adc
insl
mov
fistpl
out
mov
mov
sbb
push
or
pop
call
jl
test
pusha
or
inc
bound
adc
scas
cmp
push
aas
adc
int
andb
jmp
push
push
cmp
mov
les
enter
loope
push
sbb
ja
add
mov
outsl
rcl
rorb
xchg
cmc
inc
mov
aaa
out
mov
lds
shll
push
jle
inc
mov
js
call
sub
inc
addl
or
mov
mov
mov
lahf
mov
xchg
in
mov
out
and
jecxz
or
jecxz
cld
mov
les
fcomps
jo
mov
cmc
mov
adc
lock
add
imul
sub
lret
flds
ss
or
cli
or
inc
xchg
icebp
stos
mov
xchg
leave
je
jl
sbb
mov
fidivrl
adc
cmp
daa
mov
jno
das
stos
sub
push
shrb
jns
mov
xor
inc
jo
popa
test
pushf
insl
incl
sbb
cmc
or
cmp
leave
addr16
jg
mov
mov
cmpsb
pushf
pop
xlat
adc
mov
or
push
pop
and
inc
pop
jmp
xor
adc
aaa
mov
push
dec
dec
mov
pop
fdivr
push
push
mov
pop
mov
xchg
cmc
mov
sbb
addr16
adc
test
sub
mov
adc
ljmp
jnp
outsl
pop
mov
dec
push
fistpl
fdivp
sbb
lods
sbb
loop
mov
lcall
clc
cmpsl
cmp
and
mov
sub
inc
cmp
inc
jg
jno
pop
in
aam
mov
sub
movb
ja
mov
sahf
add
fcmovnbe
lea
jno
xlat
mov
mov
decl
inc
inc
cmpsl
les
push
add
int3
loopne
jmp
fiadds
mov
movsb
jne
fs
movsl
push
dec
or
inc
pop
mov
les
ss
jno
push
jmp
bound
lods
sbb
fdivs
mov
xchg
add
scas
push
adc
inc
test
ds
push
push
add
push
stos
imulb
xlat
mov
into
fdivp
data16
inc
outsb
adc
bound
into
lret
dec
cmp
popf
pop
das
arpl
xchg
sbb
fidivrl
sti
or
jbe
mov
add
push
inc
into
lcall
das
repnz
dec
pop
dec
aas
ja
mov
sahf
or
sbb
aaa
adcb
xor
fdivp
out
xchg
int3
int3
push
cmc
sbb
sahf
mov
inc
es
insl
jae
js
mov
ret
test
fs
aaa
fisubrs
push
and
or
or
cmpsb
mov
or
xlat
bound
mov
cmp
cmp
ficoml
into
div
aaa
movsl
in
pop
sahf
call
lods
mov
repz
add
mov
push
mov
add
mov
mov
dec
dec
testb
pop
sub
sbb
and
sub
jb
fs
and
sub
pusha
popf
sti
fstp
imul
cli
jg
push
jg
fbstp
test
stos
jecxz
and
es
push
add
push
add
pop
call
andb
pop
jg
jno
inc
sbb
jg
call
mov
mov
ss
add
fs
lock
lods
test
pusha
aam
dec
into
in
dec
into
and
and
call
aaa
mov
cltd
insl
cltd
dec
mov
icebp
mov
je
lock
rcrl
and
jae
mov
cmpb
or
adc
pop
dec
lea
and
clc
ret
sahf
mov
icebp
or
dec
insl
push
mov
ljmp
jne
jbe
jp
test
mov
mov
adc
jbe
pop
clc
xchg
push
pop
jno
test
adc
pop
into
cwtl
pop
fistpl
pop
nop
add
shll
mov
push
lcall
xchg
push
and
xchg
push
clc
stc
push
sub
inc
mov
mov
sahf
xchg
dec
pushf
in
xchg
lcall
or
or
cmpsl
xchg
outsl
bound
jb
test
cmc
push
fdivrs
imul
cmp
push
xlat
imul
jns
cs
push
lods
sub
push
rcl
push
push
or
add
or
lret
cmp
sub
push
movsl
dec
outsb
and
rcrl
or
lods
shll
mov
mov
ret
sbbb
add
lds
mov
mov
jo
ds
sbb
push
dec
mov
xchg
push
push
mov
fwait
lahf
fcompp
imul
sub
xor
push
ret
scas
push
shll
mov
mov
mov
mov
and
add
call
mov
or
push
add
std
push
int
xchg
or
jae
mov
mov
mov
lods
repnz
push
imul
jp
enter
inc
adc
pop
push
scas
fcmovbe
pop
test
ret
push
xchg
addb
xchg
clc
call
or
nop
dec
cmp
mov
les
sub
sbb
aaa
outsl
into
shl
es
rclb
jns
out
and
in
sbb
ss
adc
ja
add
pop
xchg
pop
sub
int
in
mov
inc
icebp
mov
clc
out
xchg
loop
push
fmuls
mov
mov
pop
xchg
aaa
decb
jae
lock
inc
les
ljmp
cltd
pop
inc
xchg
punpckhdq
xor
mov
int
lock
dec
jl
ja
pop
lock
and
fs
mov
jbe
mov
mov
and
sub
push
fstpt
ljmp
mov
cmp
cs
std
jg
mov
mov
mov
pop
or
aam
rcl
lcall
jbe
or
int3
xor
ja
aaa
ret
out
jmp
jns
add
inc
xor
dec
fidivrs
icebp
and
xchg
ljmp
std
cmpsl
cwtl
out
add
in
and
fmuls
jecxz
push
insl
subb
outsl
cld
sbbl
rorb
js
fsubr
mov
cld
test
les
mov
imul
mov
cltd
rorb
clc
mov
or
dec
call
ja
xchg
adc
pop
notl
push
or
jno
call
jo
cmp
aad
stos
pop
add
adc
dec
aas
cld
adc
add
mov
xchg
movsl
inc
jp
mov
jno
pop
movsl
mov
push
jmp
fstpl
xor
pusha
rolb
xlat
adc
add
sbb
fdivrs
push
xchg
adc
rclb
pop
mov
dec
sti
push
push
rorl
push
dec
add
push
js
into
lods
dec
insb
xor
out
mov
xchg
inc
adc
jne
push
adc
pop
push
call
dec
push
call
add
jge
mov
sbb
lret
xor
jl
jne
inc
xor
xchg
leave
insb
ljmp
push
mov
inc
cmpb
addr16
inc
push
loop
inc
and
mov
and
pop
pop
push
adc
cmp
adc
jmp
pop
lds
insl
imul
in
loop
popa
mov
mov
xchg
adc
sbb
mov
pusha
jo
sub
xorb
rorl
jae
pop
xor
sahf
dec
push
add
jmp
or
stc
pop
inc
hlt
data16
aad
pop
fisttps
pop
or
cwtl
cmp
cmpsl
jg,pn
sti
in
and
pusha
sbb
jl
sub
cmp
imulb
insb
jne
sub
test
int3
jg
clc
testb
jne
dec
fcoml
shr
jmp
loopne
or
lods
mov
daa
mov
lods
outsl
jge
outsl
add
inc
cwtl
cmp
dec
adc
xchg
je
sub
es
lea
dec
fdecstp
loope
fsubs
mov
cwtl
mov
rcl
enter
jns
sub
inc
lret
cmc
mov
mov
and
pusha
push
mov
mov
lahf
and
ret
mov
adc
popa
arpl
xchg
or
xor
inc
call
popa
pusha
mov
xchg
and
pop
push
jg
in
cmpsl
testl
out
jbe
sub
loope
mov
and
jecxz
pop
and
imul
xlat
and
xchg
lcall
jg
insb
push
push
mov
or
ror
or
cmpl
pop
mov
movsb
repnz
sbbb
andl
sbb
fbld
insl
and
stos
xchg
sbb
in
stc
lcall
mov
cld
rol
out
test
inc
pop
pop
dec
inc
dec
loope
pop
cmpsb
pop
sub
fbstp
adc
jmp
scas
inc
inc
sbb
sbb
pop
cmp
gs
out
xor
pushf
addr16
jge
rol
xor
aaa
rcl
mov
push
jmp
andl
shrl
push
add
add
mov
pop
jp
subl
adc
jmp
sahf
jmp
xor
push
pop
cwtl
dec
jecxz
test
mov
mov
dec
add
rcll
fmull
push
xchg
jle
cmc
add
cmpsl
jmp
imul
scas
mov
mov
fmulp
aaa
inc
dec
dec
ffreep
mov
push
push
and
lods
insl
sub
cmp
add
test
loopne
and
cli
xor
ss
andl
jmp
mov
cmc
jne
popf
ss
stc
cwtl
pusha
addl
mov
sub
add
jb
xor
sbb
aam
mov
mov
sti
xchg
int3
mov
ja
add
and
push
dec
jl
outsl
out
jbe
in
sub
movl
sbb
pusha
loope
cmpsl
mov
dec
xchg
mov
jb
lahf
fsubrs
push
pop
cmpb
iret
lods
lcall
aaa
scas
adc
loope
mov
mov
icebp
sub
sub
out
into
xchg
adc
push
sbb
ljmp
dec
out
inc
sbb
pop
mov
ror
add
iret
or
sub
mov
mov
fistpll
std
jnp
cmp
dec
aad
inc
xor
mov
adc
clc
add
dec
push
push
clc
repz
insl
jg
inc
mov
jno
cmp
jae
mov
sub
mov
mov
cmp
std
mov
in
popa
stos
pushf
push
push
xchg
scas
ret
fistpl
jb
add
shrb
or
mov
orb
mov
mov
cmc
shlb
or
sbb
sbb
pop
fistl
cmpsb
jge
imull
pop
sbb
and
dec
push
pop
cmp
mov
add
shr
xchg
je
clc
sub
fdecstp
scas
data16
xchg
gs
jne
fistl
stos
and
or
test
loop
les
adc
or
das
mov
or
lds
fidivrs
addr16
add
roll
enter
dec
aaa
popf
insl
cmp
outsb
bound
mov
cmpsb
inc
cli
xchg
mov
aas
sbb
mov
cmp
pusha
and
shll
sbb
out
sbb
mov
sbb
les
outsl
mov
ljmp
mov
cli
loopne
ret
lret
aas
sub
cmc
adc
pop
pop
and
jle
sti
adc
loope
cmp
inc
push
push
daa
adc
insb
mov
mov
movl
fs
push
mov
imul
jmp
sbb
psrld
call
inc
cld
lahf
add
jl
js
cmp
repnz
dec
xchg
rcl
cmp
adc
and
push
cs
add
mov
sub
cmc
mov
push
imul
ffree
pop
in
clc
sahf
xor
pop
pop
xor
push
lcall
ja
insl
scas
add
pop
mov
mov
roll
mov
dec
mov
inc
mov
imul
pop
shrb
popa
std
addb
aaa
insb
xor
sbb
fisubs
out
fiaddl
arpl
imul
das
cld
loopne
aam
dec
cmp
cmp
test
push
mov
push
icebp
in
repnz
movl
dec
cli
outsl
cld
sub
mov
icebp
pop
mov
lea
xchg
divb
sbb
xchg
sbb
icebp
fbstp
jnp
sahf
cltd
and
and
ret
je
and
mov
sbb
add
idivl
sub
mov
aas
in
mov
cmp
jae
insb
test
icebp
shrl
push
or
inc
add
nop
arpl
incl
ret
mov
pop
lock
push
imul
pop
inc
mov
sbb
xchg
es
add
pop
xor
ret
mov
add
mov
push
push
xchg
dec
cltd
add
movsl
lods
ljmp
les
xor
nop
das
ljmp
sub
sbb
add
cmp
mov
sbb
inc
jo
pop
or
sti
shl
out
movl
lea
out
or
outsb
adc
clc
push
cmp
xchg
subl
popl
mov
add
sub
loopne
mov
mov
mov
cmp
movl
push
mov
ret
or
and
mov
and
shlb
cs
pop
shrb
ret
xor
lret
adc
shl
lret
add
and
int
xchg
or
jb
iret
mov
clc
sub
inc
adc
adc
or
mov
loope
fs
outsl
ficompl
jecxz
jmp
lret
cli
adc
inc
and
sarb
stos
xchg
movsl
pop
or
mov
mov
addb
adc
bound
mov
mov
inc
jmp
jg
dec
fdivl
sub
and
xor
sahf
adc
out
add
push
push
nop
mov
jae
adc
mov
scas
mov
mov
jo
push
ss
jg
fisttpl
or
mov
push
daa
push
test
jg
mov
stc
push
pop
add
inc
jne
out
pop
dec
aas
loope,pn
out
scas
cmpsl
loop
fnstcw
fildl
jp
cmp
and
xchg
cmp
mov
aas
and
xchg
into
or
add
adc
mov
inc
sahf
inc
das
xlat
xchg
sbb
js
outsb
jecxz
cld
test
mov
test
xlat
add
sbb
out
stos
das
shlb
sub
xchg
fsubl
stos
xchg
pusha
and
imul
xchg
pushf
push
dec
mov
or
es
or
test
fwait
hlt
push
cs
xchg
mov
andl
test
inc
pushf
fwait
out
int
cli
mov
mov
fldl
cmp
test
mov
out
push
inc
cmp
andb
sahf
push
jle
push
decb
je
sbb
sub
pop
clc
clc
add
out
mov
ja
cmc
shrb
lds
xor
call
jae
dec
shll
jge
outsb
dec
inc
std
icebp
jb
mov
mov
aas
cltd
inc
pop
mov
fs
adc
xor
mov
loop
cmp
adc
imul
out
jo
ret
sbb
push
dec
add
subl
jnp
mov
sar
decl
cld
cmp
in
and
jge
mov
mov
push
fs
int3
xchg
sti
ret
pop
sbb
mov
lea
ds
and
lcall
outsl
nop
push
int
test
inc
pop
imul
pop
mov
push
inc
adc
adc
push
stos
pop
xchg
jbe
pop
xchg
cmpl
push
aaa
and
loopne
xchg
xlat
ss
fimull
repz
je
ljmp
and
nop
jo
pop
xorb
pop
pop
pusha
push
leave
testl
inc
mov
mov
sarl
lcall
adc
insb
in
jge
jns
rol
xchg
jnp
loope
stc
sti
inc
xor
arpl
inc
xchg
enter
push
rcrb
scas
stc
jmp
cmpsl
adc
inc
pusha
mov
pop
scas
add
mov
and
shll
mull
ds
shl
addr16
sbb
shl
ret
cs
pop
cs
cmc
imul
inc
out
mov
outsl
xor
dec
cmp
xchg
popa
pop
bnd
dec
xor
jecxz
push
sahf
inc
cmp
push
push
dec
das
roll
mov
imulb
push
xor
adc
std
imul
stc
dec
or
and
leave
jae
aaa
inc
lahf
lcall
jmp
mov
or
rclb
imull
xor
inc
or
mov
pusha
inc
lea
mov
loope
lcall
pop
dec
dec
test
jg
rcl
sub
inc
and
popa
jbe
ljmp
decl
mov
dec
inc
and
cmpsb
or
add
and
inc
dec
adc
sbb
mov
aam
add
cmc
lods
mov
nop
cltd
js
or
mov
sahf
cltd
divb
lahf
out
sahf
mov
adc
nop
and
or
inc
les
adc
lea
push
fldt
cltd
push
lret
cwtl
or
enter
loopne
push
enter
mov
and
jg
pop
bound
sub
sbb
pop
pop
xchg
and
mov
hlt
iret
flds
pusha
adc
cli
inc
jmp
in
inc
subb
and
fsubl
jl
loop
cmovbe
pop
mov
outsl
aaa
repz
mov
dec
dec
or
mov
clc
jg
and
out
sub
cwtl
or
pop
decl
sar
add
test
push
sti
aam
and
fbstp
mov
or
scas
insl
add
and
and
test
addr16
mov
inc
dec
mov
jbe
mov
push
or
dec
xchg
inc
lds
std
pop
fsubrp
mov
mov
mov
popa
fld
and
mov
std
and
repz
xchg
rclb
pop
enter
stos
fwait
mov
or
je
jno
push
and
int
fistps
outsb
addb
ljmp
ljmp
js
cmp
jmp
adc
mov
sbb
mov
imul
xchg
push
push
mov
outsb
cli
testl
pop
adc
and
pop
aad
fwait
pop
push
and
jns
sbb
jo
add
or
jo
fiadds
fmull
push
lods
push
sbb
sbb
lret
out
stos
mov
std
pop
lea
inc
and
jbe
les
jecxz
hlt
lcall
movl
icebp
mov
clc
mov
out
cld
ja
insb
jmp
sub
mov
fdivl
aaa
push
sbb
xchg
int3
out
aam
lods
int
inc
or
push
push
dec
dec
je
xor
repz
mov
dec
xor
or
pop
sti
decl
push
insb
mov
decl
ljmp
fnsave
ljmp
out
xchg
sub
inc
fwait
jae
mov
cli
push
fsubrl
lret
mov
aad
push
shlb
sbb
imul
mov
mov
xorb
mov
mov
ss
mov
test
mov
lds
sbb
lods
sbb
jmp
rorb
in
fists
pop
jge
inc
pop
and
xchg
daa
and
dec
or
outsl
insb
shl
jne
push
js
stos
mov
outsb
lods
popa
orl
arpl
adc
aam
mov
cli
sub
inc
rclb
sub
and
pop
rcl
fcmovu
ljmp
dec
sbb
es
cwtl
nop
inc
mov
or
and
out
pop
mov
stos
inc
add
mov
mov
inc
lahf
mov
or
adc
scas
mov
imulb
out
mov
cmp
push
mov
jne
or
cli
mov
xor
add
es
xchg
push
cmp
sbbl
lock
inc
or
fxch
sbb
fimuls
sub
inc
mov
push
cld
fldenv
add
dec
jl
mov
andb
popl
and
jbe
mov
aaa
and
mov
rcll
add
sub
ljmp
pop
cli
incl
mov
fld
sbb
and
inc
cmp
push
lods
rol
mov
ret
push
fstl
sub
inc
inc
pop
cmp
xchg
sbb
inc
out
pop
lea
andl
fcoml
test
cld
lods
mov
cmpsl
lahf
mov
dec
mov
or
stos
pcmpeqw
hlt
push
loopne
cmp
inc
test
cwtl
es
push
sub
jecxz
push
adc
sti
add
std
mov
sahf
sbb
cmc
push
adc
mov
pop
jp
aad
mov
out
push
add
xor
ret
rolb
addr16
out
cmp
xlat
movsb
pop
mov
xor
lds
adcl
push
sub
xor
repnz
outsl
cmp
sbb
push
gs
jl
clc
jl
lret
cmp
jl
daa
fisubl
shrl
add
roll
or
je
pop
addl
orb
std
outsl
sbb
pushf
xchg
dec
repz
mov
sbb
js
pop
test
shl
adc
xchg
loope
shrl
mov
ss
or
hlt
rcrl
lea
test
test
loop
addr16
mov
call
ljmp
cmp
cmp
outsl
frstor
cli
stc
or
popa
xadd
jge
lods
adc
sbb
mov
jne
pop
sbb
ljmp
fildll
mov
jp
clc
inc
out
add
cld
outsl
hlt
fdivs
loope
das
sbb
pop
mov
or
leave
cmp
or
arpl
shl
test
inc
pop
xor
ficomps
outsl
jg
jnp
clc
aad
jecxz
adc
int
out
mov
mov
dec
xor
rol
adc
or
out
in
sub
jmp
and
or
out
rol
arpl
incl
xchg
or
rclb
cs
lods
inc
aam
stos
mov
push
xchg
scas
pop
dec
mov
sub
icebp
pop
xchg
add
adc
push
jns
xlat
lea
outsl
mov
xchg
inc
or
mov
call
pop
clc
dec
fidivrs
shrl
add
nop
pushf
add
incb
add
sub
loopne
cmp
push
dec
mov
xlat
sbb
cmp
mov
xchg
mov
mov
data16
sub
rcl
and
inc
lret
pop
mov
test
mov
scas
xchg
and
enter
ret
jmp
adc
lret
popa
cli
das
adc
sti
test
push
sti
int3
mov
or
sub
push
mov
pop
and
jnp
dec
outsl
push
and
pop
xor
imul
mov
fldenv
push
or
jbe
push
jecxz
imul
aaa
repnz
jg
mov
mov
push
lcall
dec
and
fistps
mov
fnop
jge
xchg
lock
testl
mov
sbb
clc
shrl
loope
lea
aad
cmpsb
or
add
testl
xchg
outsl
sbb
jns
insl
int
mov
xlat
loope
pop
mov
orb
outsl
and
stc
push
adcl
mov
sahf
fcom
mov
xor
stos
outsb
push
ja
sub
clc
loopne
mov
je
inc
shl
adc
fistps
mov
lods
sbb
push
jecxz
daa
or
sbb
or
das
cld
out
sbb
sbb
xchg
sbb
sub
repnz
out
mov
xchg
inc
clc
rol
cmp
pop
clc
pop
pop
fsubs
nop
xorl
jae
cmpsl
dec
iret
mov
out
xchg
push
gs
test
mov
clc
stc
sbb
jnp
lahf
bound
and
in
dec
push
push
push
roll
pop
and
pop
bound
mov
cmp
xchg
mov
xchg
add
out
mov
je
fidivs
cmpsl
pop
int3
sbb
mov
and
dec
push
add
std
icebp
jmp
icebp
xor
push
jle
popa
repz
jbe
xor
sbb
inc
andb
mov
rcll
fcomip
outsl
and
repz
xchg
push
inc
pop
inc
nop
insb
or
into
outsl
jmp
jb
imul
and
inc
test
inc
pop
sub
mov
fbld
popl
cmp
popf
das
and
imul
or
pushf
in
in
call
pop
pop
rcll
sbb
lret
push
mov
cmp
sub
adc
jo
sahf
in
mov
xor
jns
and
cmp
in
sbb
aad
rolb
scas
cmpb
push
xor
push
or
mov
loop
int
loop
inc
mov
lcall
divl
mov
ret
mov
pushf
add
jo
and
xchg
subl
pop
dec
inc
mov
iret
mov
push
xchg
push
cmpsb
pop
adcb
aam
ret
pop
setnp
testl
mov
scas
or
pop
xchg
adc
call
mov
push
dec
mov
pusha
cmp
shlb
hlt
xor
sahf
adc
inc
jne
add
mov
lods
lock
sbb
fwait
jb,pt
scas
in
inc
xchg
ror
cmp
dec
sub
sbb
insl
mov
mov
das
popf
jmp
loope
stos
jne
add
fildl
outsl
data16
xchg
xchg
push
mov
rcll
out
cmp
mov
loopne
jno
call
imul
fists
cs
mov
mov
loope
adc
das
bnd
clc
jg
popa
dec
jae
mov
pop
push
add
fidivl
fs
rclb
sbbb
test
stc
push
ror
pop
jae
nop
xchg
lea
xlat
clc
dec
xchg
addl
addl
pop
loopne
xchg
jl
insl
cld
outsb
jo
mov
test
js
jb
xchg
int
add
sbb
jg
lcall
or
inc
in
xor
adc
arpl
sbb
dec
sbb
out
sub
adc
xchg
sub
adc
inc
sbb
andb
arpl
mov
rclb
int3
call
arpl
push
adc
cmp
cmp
movsl
hlt
test
pushl
xor
add
lcall
ret
jg
pushl
push
scas
sbb
pop
cmp
xchg
inc
add
push
fisttpll
mov
subl
mov
pop
inc
fwait
pop
loop
add
mov
incl
nop
popf
dec
jo
test
mov
faddl
mov
jge
clc
lahf
shll
std
arpl
jge
movsb
xor
roll
sub
cmp
je
or
call
mov
xor
lret
stos
negb
jg
mov
jmp
xchg
daa
roll
stc
mov
hlt
sbb
jo
cld
dec
fdivr
push
cwtl
shrl
movsb
mov
add
ljmp
pop
les
pop
push
stc
jle
shrl
pushl
std
das
pop
inc
sahf
add
xor
push
push
or
push
add
inc
pop
mov
andb
pop
lahf
test
cmp
cld
jg
mov
loop
add
mov
test
add
push
pop
icebp
jo
lock
add
push
jmp
jp
test
out
xchg
fbstp
fiadds
minps
push
cwtl
mov
andb
loopne
mov
in
roll
dec
das
cmp
popf
mov
pusha
mov
dec
aad
rcr
inc
rcll
add
ret
adc
or
pop
push
mov
sbb
lret
dec
adc
inc
fsubr
dec
xor
mov
pusha
imul
aaa
push
xor
inc
xor
xchg
stos
lock
pop
faddl
lcall
push
jg
xor
cli
shr
rol
sub
jg
dec
rorl
cs
imul
nop
in
and
jno
sbbb
data16
jo
inc
fucomip
push
or
xchg
mov
adc
popa
push
je
popl
adc
fs
mov
js
and
test
outsl
sbbb
cmp
xor
rcrl
dec
cmp
cmpsl
shll
test
push
ficoml
xchg
or
imul
and
jp
mov
cli
jp
aam
rorb
lods
jl
xchg
mov
jg
inc
cs
adc
cld
sbb
mov
sbb
add
inc
orb
cmp
xlat
mov
and
das
jl
cmc
jb
mov
cli
dec
sahf
inc
aas
out
mov
js
sub
and
adc
dec
hlt
push
xchg
pop
ds
dec
push
sahf
mov
in
lods
mov
mov
add
jle
cli
ret
jmp
cmp
xchg
xor
fxch
xchg
rol
add
cwtl
popa
add
fiaddl
mov
cld
sub
add
xchg
jo
in
stc
mov
out
cmp
sbb
das
xor
imul
sbb
outsb
mov
and
and
insl
rorb
dec
pop
test
ljmp
inc
cwtl
mov
and
jg
cmp
and
outsb
pusha
sbb
sub
cld
jge
je
cld
adc
mov
pop
adcb
cs
fs
and
cld
pop
mov
cmp
fcoms
mov
adc
inc
jb
or
and
stc
sbb
or
dec
xchg
idiv
outsl
push
movsl
sub
pop
shrl
mov
push
fsubs
fidivl
mov
jns
xchg
insl
aad
push
movsl
pop
jb
xchg
call
and
jo
fcomps
push
cli
or
add
mov
mov
pop
rep
iret
mov
jge
int
add
inc
lock
shlb
or
or
xor
and
les
test
cmpsl
add
in
fcompl
pop
pop
data16
das
xchg
stos
xchg
rcrl
hlt
and
mov
js
mov
fildll
xchg
add
or
xchg
dec
mov
mov
shrl
push
mov
loop
dec
fwait
and
clc
add
out
xchg
mov
stos
pop
push
xchg
jmp
enter
add
sbb
adc
xor
fadd
fcoml
sub
push
insl
fimuls
mov
fldl
pop
jo
int3
enter
ja
jo
mov
cli
push
pop
jg
ja
stos
aaa
les
xor
cli
or
mov
std
sbb
xor
lods
mov
mov
test
aas
lcall
inc
fnstenv
iret
in
cmpsb
adc
sbb
jns
sub
inc
cld
outsl
pushl
sbb
shl
call
mov
les
or
aam
xor
ffreep
pop
cmp
rolb
pop
sbb
add
cmc
mov
out
pop
into
test
fisubl
outsl
rorl
icebp
mov
loop
fdivl
mov
pop
sahf
jle
imul
js
stc
test
pop
jge
xor
sbb
add
sub
and
sbb
fsubl
inc
call
mov
in
test
mov
add
hlt
cld
jmp
push
arpl
mov
inc
pop
lret
and
ss
decl
ss
dec
or
or
pop
stos
mov
inc
jo
xchg
enter
hlt
pop
fcmovnbe
inc
rcrl
dec
outsb
xchg
stos
out
push
jecxz
repz
mov
cs
add
in
jne
push
push
movsl
xchg
movb
mov
pop
bound
leave
push
lret
popa
sub
sub
push
cli
incl
insl
and
xor
decl
in
mov
nop
sub
xor
paddb
movsl
lcall
cs
xchg
jo
daa
xchg
cwtl
xor
rcrb
in
clc
mov
into
testl
lea
push
mov
frstpm(287
and
pop
mov
incl
adcl
inc
mov
and
repz
jl
fildll
dec
push
gs
xchg
add
clc
mov
insl
loop
ret
xchg
mov
ret
ror
mov
in
sbb
push
push
bts
cmp
loope
xchg
mov
jne
cs
fbstp
sbb
out
sbb
and
outsl
cmc
test
dec
ret
and
xchg
and
faddl
adc
and
jae
push
clc
and
popf
xchg
lcall
mov
in
jne
shrl
popa
pop
push
pop
shrb
outsl
sbb
and
dec
add
rorl
sbb
inc
std
push
lock
mov
xchg
lret
gs
insb
xorb
mov
std
mov
jno,pn
ss
rclb
in
xorb
leave
imul
inc
in
or
and
fdivrs
lock
adc
loop
push
stos
in
and
mov
fldl
mov
or
mov
push
cmp
fbld
xor
icebp
aas
or
jle
jp,pn
lds
fidivl
xchg
and
xchg
repnz
adc
add
cmp
mov
adc
test
sahf
into
inc
dec
or
test
dec
std
test
call
outsl
fnstsw
gs
dec
cmp
xchg
cmp
adc
mov
sub
push
ljmp
leave
lock
test
data16
pop
add
shlb
fstpt
sbb
add
stos
clc
addr16
in
push
or
inc
jno
gs
mov
rcll
rorb
pop
fcomp
jp
mov
dec
pop
out
sbb
add
sti
xor
rorl
push
aad
ja
outsl
cmc
call
test
in
scas
dec
psubusb
imul
test
mov
sahf
and
in
dec
pcmpeqb
outsb
lcall
pop
push
sub
or
pop
pop
push
in
xchg
js
jle
das
dec
bound
push
outsl
cmp
inc
aaa
scas
mov
push
test
and
dec
push
ret
lret
mov
mov
call
sbb
stc
cwtl
inc
jmp
inc
pop
call
cld
push
jle
push
je,pn
es
clc
xchg
imul
mov
xor
lods
xor
dec
sbb
jg
daa
jp
nop
cmpsb
ret
subl
outsb
inc
lods
pop
addr16
add
mov
aas
dec
std
ljmp
xchg
popf
fwait
pop
rcrb
mov
xchg
mov
push
xor
push
sarb
lods
sbb
push
inc
mov
out
insb
lds
cmp
icebp
add
add
jmp
xchg
imul
notl
sub
push
aam
push
jmp
arpl
hlt
inc
xor
sbb
in
xchg
jp
aam
push
or
push
mov
cmp
lods
hlt
sbb
pop
les
in
push
jg
mov
xor
mov
jo
xchg
inc
add
jl
pop
mov
xchg
cmp
dec
or
mov
adcl
ljmp
dec
lret
arpl
cmc
add
rcr
add
dec
aam
insl
loop
ret
xchg
test
cmpsl
shll
cld
mov
cmpsl
sti
into
xchg
cmpsb
adc
push
inc
jle
pop
stos
cli
clc
popf
jmp
loopne
mov
mov
cmp
mov
imul
mov
popf
xor
popf
outsb
xlat
jne
mov
sub
jno
push
int
imul
in
pop
clc
cmp
xor
dec
add
and
and
xor
jmp
out
inc
sbb
jl
adc
maxps
push
dec
xorl
outsl
cld
mov
sub
ja
and
jae
sbb
mov
mov
cmp
pmulhuw
jg
incl
lds
ja
popf
frstor
adc
pop
mov
add
stc
cld
das
lds
xor
pop
fsubrs
cltd
pop
mov
mov
mov
or
and
mov
and
outsb
mov
pop
jne
add
clc
arpl
push
faddp
dec
jecxz
aam
cli
dec
repnz
adc
ficomps
xor
cmc
repnz
dec
mov
sbb
or
jp
mov
stc
push
mov
cwtl
sbb
mov
and
mov
xor
lret
mov
mov
mov
popa
rol
mov
and
adc
xor
jl
mov
push
pop
ljmp
dec
add
adc
xchg
or
or
inc
adc
jl
dec
xchg
sub
inc
lahf
sbb
add
test
sub
lret
or
andl
adc
sub
and
sbb
icebp
add
nop
push
or
jbe
push
shlb
std
sbb
push
lock
xchg
or
inc
cmp
cmc
test
lods
lret
mov
movl
mov
push
scas
adc
cld
insb
pop
and
ret
lcall
sahf
jle
std
fistpll
xor
xor
sahf
test
dec
and
cmpsl
inc
jmp
jg
sub
js
leave
push
ret
mov
icebp
pop
dec
pop
hlt
fldt
sub
push
test
imul
neg
lea
sub
jo
test
aas
and
pop
dec
clc
movsl
pushl
and
dec
add
xor
xor
push
sahf
mov
sub
bound
pop
jns
scas
ja
jle
inc
sti
enter
addb
xlat
jge
sub
pop
lcall
mov
std
popa
cmpsl
pop
loopne
push
rcll
xchg
push
jbe
lahf
movl
xor
pop
mov
mov
test
loope
out
out
and
jns
inc
xor
jbe
jp
lods
loop
xchg
roll
sub
mov
push
insl
out
inc
jge
js
popa
xchg
testl
jno
push
lock
scas
pushf
loope
sub
pop
xchg
in
add
inc
inc
icebp
mov
jle
mov
push
fstpl
xchg
das
mov
mov
ss
loopne
inc
xchg
sub
cwtl
or
or
push
adc
cmc
xchg
mov
leave
adc
ss
adc
adc
lock
repz
cmp
in
jp
in
iret
pusha
enter
mov
test
jns
jmp
push
dec
inc
mov
or
divl
dec
lods
loope
clc
insb
dec
inc
ljmp
dec
add
xchg
cli
mov
out
adc
jne
mov
icebp
mov
push
or
push
jp
xor
cli
jg
mov
lret
aas
xor
cmpsl
inc
pop
enter
pop
fstl
fistpll
pop
std
dec
dec
pop
xchg
pop
in
cld
mov
fiadds
test
mov
pushl
clc
pop
enter
mov
iret
imul
pushf
xor
or
cmp
sbb
cmpsb
or
pop
adc
jg
lcall
dec
mov
mov
addr16
cld
add
push
adc
stos
dec
in
jmp
addr16
cmp
add
xor
add
mov
mov
mov
int
pop
negb
lds
call
pop
scas
lds
jecxz
ffreep
fnstsw
sbb
xor
pop
jns
adc
cli
jg
pop
add
xchg
mov
bound
dec
stos
test
leave
orl
in
dec
fs
sbb
push
gs
jns
popf
movsb
and
jns
leave
dec
insb
cltd
outsl
xchg
mov
mov
dec
test
out
cmp
mov
pop
clc
adc
mov
xor
enter
adc
jp
addl
data16
dec
mov
or
mov
testl
or
scas
mov
lahf
ja
pusha
ret
pop
add
imul
xlat
xchg
dec
leave
repnz
sbb
xchg
call
ret
mov
inc
std
add
dec
sub
xor
testl
scas
and
mov
scas
mov
movsl
inc
out
adc
adc
bound
cmc
dec
dec
xchg
and
and
pop
inc
fbld
jo
push
adc
adc
ret
stos
frstor
or
movsb
and
aaa
mov
push
inc
push
pushl
lret
pop
test
aam
pop
add
addl
sub
inc
ds
imul
scas
rorl
scas
ja
inc
fsts
xchg
mov
outsb
fdivl
mov
sahf
and
xlat
jbe
or
ret
lds
push
pop
add
jne
mov
add
ss
mov
adc
fidivs
shr
or
or
stos
dec
ljmp
mov
cltd
test
push
ja
jg
leave
cmp
ljmp
pushf
imul
and
sub
mov
cld
xor
fadd
cltd
xlat
mov
ret
jmp
inc
dec
inc
pop
mov
and
loope
lahf
sub
jo
out
jmp
insl
jmp
jl
loope
jg
dec
shrb
or
pop
mov
stc
fs
push
lock
inc
xchg
sbb
mov
sub
shll
mov
mov
out
mov
ljmp
mov
aas
mov
lock
out
jge
xchg
aas
pop
clc
xchg
icebp
js,pt
add
cmc
mov
rorb
jnp
les
sbb
xchg
mov
pushf
sub
mov
jl
dec
in
or
push
gs
nop
ficoml
sbb
mov
mov
mov
or
mov
push
mov
adc
and
cli
xchg
daa
imul
pop
test
std
or
dec
inc
mov
mov
outsb
mov
jg
jg
mov
xchg
inc
ljmp
push
insb
in
adc
stc
seta
mov
pop
outsb
lds
xchg
pop
les
stos
loope
fcomps
pop
mov
outsb
or
popa
cmpb
sbb
shrb
mov
or
les
data16
jbe
xor
and
push
push
xor
push
outsl
or
adc
shl
mov
out
out
jo
mov
xchg
sarb
bt
mov
push
cwtl
add
jecxz
jns
test
subb
push
lock
addb
mov
adc
inc
add
fcoml
pop
lock
in
das
hlt
fimull
outsl
and
mov
jno
adc
xor
or
sbb
pop
scas
inc
sub
inc
imull
mov
daa
jne
das
hlt
inc
out
bound
daa
jo
inc
insb
mov
add
faddl
in
or
cli
mov
lds
sahf
mov
adc
mov
sbb
mov
and
sbb
dec
xchg
mov
inc
es
inc
inc
adc
es
mov
fnstsw
es
stos
or
inc
fsubl
mov
mov
test
in
mov
loop
cmp
jne
rorl
orl
insb
ja
xor
cmp
lea
loope
cmp
fs
testb
jl
xlat
mov
push
jb
fucomip
scas
jg
imul
cmp
aam
add
inc
sub
ja
xor
push
ljmp
dec
daa
adc
mov
loopne
inc
mov
push
loop
inc
aas
jnp
mov
dec
hlt
xchg
aaa
xchg
adc
dec
cmp
dec
adc
push
add
add
scas
xlat
jmp
hlt
cmc
rol
fldl
adc
loop
xor
jp
scas
and
mov
pop
loop
mov
sti
in
xchg
negl
sti
outsl
jg
rclb
add
sbbb
ret
scas
fnstsw
fisubrl
lret
push
jns
xchg
les
je
call
sub
pop
icebp
loope
roll
iret
jnp
cli
add
bswap
imul
mov
inc
dec
dec
push
push
lock
and
clc
sbb
xchg
xchg
cwtl
fs
sbb
xchg
dec
icebp
xchg
adc
cs
cld
pop
or
std
enter
aam
fsubr
dec
inc
test
pop
mov
je
mov
mov
lret
mov
add
rol
aaa
inc
lcall
or
das
sti
pusha
das
add
sbb
inc
cltd
xchg
inc
jbe
lea
insb
pusha
pop
clc
imul
aad
add
movsl
cmp
mov
and
enter
not
rcrb
mov
xor
sbb
stos
jmp
add
in
inc
sub
shlb
clc
mov
cmp
xor
ja
int
cmp
jg
ljmp
scas
mov
adc
mov
and
aas
xchg
loop
incl
bound
je
insl
stc
mov
in
and
scas
cmp
pop
push
sahf
mov
sti
push
test
ljmp
cs
fwait
cld
jb
loopne
popf
dec
aam
sbb
add
xor
lock
push
pop
movsb
gs
mov
std
jecxz
push
dec
clc
shl
push
xlat
push
mov
hlt
push
cmp
daa
cmp
push
cmp
pop
fists
insb
mov
outsb
das
out
mov
sub
cmp
mov
pop
push
push
or
outsb
sub
fcomp
pop
out
or
dec
push
shll
jp
pop
subb
lock
ja
mov
test
dec
cmp
stos
xchg
subl
js
inc
jae
lcall
sub
cmpsl
xor
push
dec
inc
hlt
jl
mov
js
pop
out
mov
orb
inc
inc
insb
inc
pop
cmpsl
mov
popa
push
push
stos
add
out
push
cmp
xor
mov
adc
cmp
ss
pop
push
lods
jne
xchg
and
lret
mov
out
scas
scas
add
insl
filds
loopne
sbb
xchg
sbb
xchg
mov
mov
mov
push
xchg
add
ljmp
inc
icebp
sub
xorl
std
inc
and
inc
push
pop
clc
repnz
and
jbe
dec
arpl
or
notb
insl
imul
jg
inc
and
cmpb
pop
mov
ror
pop
dec
loopne
mov
ja
fistpll
cmp
insl
adc
adc
repz
cmc
add
pushl
fnstenv
and
xor
inc
lret
add
mov
mov
or
dec
mov
adc
fsubrs
repnz
sbb
mov
fwait
leave
dec
and
xchg
loop
insb
in
aaa
mov
adc
in
jg
pop
cmp
cmp
dec
sub
add
pop
filds
push
push
loopne
sbb
gs
pop
cmpsb
mov
pop
rolb
mov
adc
movsl
pusha
dec
jle
sbb
lods
and
push
jnp
test
icebp
pop
sbb
push
push
push
inc
mov
outsl
insb
movsl
xor
filds
pop
lds
inc
out
aas
sbb
push
jmp
jmp
popa
punpckhwd
scas
xchg
xor
mov
dec
sub
nop
xchg
adc
or
push
mov
inc
dec
inc
sahf
int3
pop
aaa
inc
mov
mov
push
shr
ret
stos
je
and
imul
sbb
rcrl
sbb
test
sti
sub
inc
aam
adc
push
inc
add
sbb
jg
pop
adc
cmp
fisubrs
mov
fbstp
mov
jo
fisttps
sti
notb
in
mov
mov
aam
lret
adc
and
call
pushl
push
dec
xchg
push
imulb
mov
scas
cmp
jo
mov
lret
adc
stos
mov
fidivl
mov
mov
inc
inc
sub
rcrl
ljmp
out
movsl
push
dec
mov
cli
mov
lods
push
pushf
xor
sbb
lret
lahf
dec
fdivl
stos
pop
cli
cwtl
aaa
inc
lcall
mov
mov
jb
int3
mov
dec
stos
jmp
outsb
imul
mov
std
push
and
adc
data16
and
dec
mov
mov
sbb
push
xchg
sub
cmp
adc
lcall
das
icebp
repnz
shrb
pushf
jmp
in
outsl
dec
inc
rcrl
xchg
in
dec
arpl
dec
pop
shll
xor
pop
cld
fstpt
mov
mov
or
sahf
adc
push
insb
jg
lret
fcoms
ss
iret
mov
inc
scas
icebp
aad
scas
sbb
incb
mov
loopne
mov
outsb
rolb
xor
call
adc
popl
ffree
dec
jmp
add
inc
sbb
cmp
adc
or
aam
js
and
rorl
xor
mov
insl
sub
sti
jno
nop
or
sbb
test
lcall
mov
lret
or
add
ja
jecxz
std
add
add
cmc
xchg
mov
movb
pusha
aaa
stos
cmp
jge
pop
cmpsl
add
dec
std
lret
imul
add
and
pusha
repz
xlat
xlat
out
nop
or
in
jg
xchg
popf
out
mov
loope
pop
jl
add
dec
test
pop
add
jl
mov
cli
aas
repnz
popa
popf
loopne
push
and
add
add
push
aad
pop
dec
loopne
iret
sub
sub
jo
loop
mov
mov
push
inc
call
movsl
mov
subl
test
pop
mov
xchg
mov
and
mov
fbld
mull
xchg
mov
test
mov
cwtl
jne
movsb
jbe
movsl
lcall
push
cmp
inc
cld
je
mov
mov
popf
jbe
sbb
loopne
adc
adc
cld
pusha
fcoms
or
insb
mov
dec
jo
sub
adc
and
fmuls
xor
mov
jg
cmp
lret
adc
outsl
xor
rorl
xlat
sub
sub
hlt
inc
cmpsb
cld
scas
or
jp
pusha
bound
sti
ljmp
cmpsb
lgs
andl
rcrl
hlt
xor
sbb
mov
push
and
lock
push
xchg
jo
stos
add
and
lock
or
mov
cmp
inc
ja
adc
jbe
cli
push
shrl
sub
inc
lds
inc
fstps
add
cmp
jmp
mov
inc
pop
adc
repz
scas
pop
sub
ds
push
js
sbb
xchg
lock
jg
test
ret
aaa
push
loope,pt
test
ja
fisubrs
inc
dec
cltd
pop
roll
pop
mov
cmpsb
jle
pop
orb
ficoms
sbb
or
adc
mov
cld
loop
cld
mov
add
rorb
test
add
jns
pop
xor
push
mov
mov
push
jae
imul
popa
xchg
inc
inc
fwait
test
sub
push
test
dec
or
mov
push
or
xor
adc
idivl
pop
lret
jmp
std
ljmp
jnp
jecxz
hlt
cltd
nop
test
sbb
mov
mov
orb
loope
cli
xlat
js
leave
outsl
lods
inc
xor
mov
iret
outsl
mov
push
test
cmp
bound
dec
mov
inc
or
mov
aad
xchg
adc
or
mov
dec
push
add
hlt
xor
in
inc
iret
inc
outsl
addb
or
push
sub
pcmpgtb
mov
andl
shrl
sbb
pop
adc
sbb
and
or
pop
sbb
jae
mov
hlt
ljmp
icebp
xor
loope
xchg
mov
push
or
fbstp
fisttps
pop
in
loopne
outsl
std
push
push
xchg
adc
sub
xchg
lret
cltd
repz
es
sub
mov
lcall
fadd
push
in
push
add
fst
xor
mov
lahf
cmp
rol
sub
adc
pushl
xor
cmpsl
lahf
sub
dec
dec
mov
clc
inc
ss
cmp
sti
lods
incl
loopne
xor
or
fistps
fnstsw
pushf
imul
fsubl
xchg
xor
call
cmp
jb
jmp
lods
test
jl
add
mov
cmp
mov
and
mov
pop
jo
mov
fsubs
cmp
imul
xor
cli
fdivl
mov
sti
jp
cmp
icebp
mov
and
adc
push
push
fiaddl
mov
sbb
loope
cmp
mov
jno
mov
jmp
inc
outsl
std
mov
cs
imul
mov
orb
aas
sub
jl
sub
incl
test
mov
nop
notl
idivl
into
je
int
sarl
ja
mov
pop
jo
out
mov
sahf
mov
add
adc
sbb
cmp
jl
out
fwait
lret
push
sti
add
in
xor
xchg
ss
test
sub
mov
cmpsl
push
leave
adc
inc
sbb
aaa
push
inc
fldt
fs
cmpsb
paddq
pop
jg
mov
cmp
pop
daa
cmp
push
or
mov
lea
push
outsl
cmpsb
ljmp
push
lods
and
inc
sbb
call
dec
ds
pop
dec
int3
sub
inc
sub
adc
je
jecxz
dec
popa
insl
jg
pop
cli
movlps
push
mov
cmpsb
sbb
in
into
or
dec
ret
cmp
pop
loopne
test
cmp
insl
es
jns
shlb
insb
jne
insb
xchg
or
pop
insl
dec
add
filds
push
rcrb
and
mov
and
sbb
and
minps
cmpsl
dec
in
xchg
add
sbb
push
jp
push
scas
aas
mov
fstpl
add
cs
xchg
scas
and
sub
mov
mov
sbb
sub
dec
pop
cld
add
arpl
push
push
cli
pusha
imul
xchg
xchg
add
mov
and
test
sub
mov
push
sahf
push
mov
add
stc
stos
pop
ret
into
adc
stos
repnz
pop
add
jae
push
das
jge
call
jecxz
mov
orb
mov
je
mov
std
jno
inc
mov
xor
lret
add
push
push
stc
jno
xor
mov
add
stos
gs
xchg
mov
xor
pop
int3
or
push
cmp
incl
inc
inc
pop
addb
movsb
xor
imul
adc
mov
adcl
decl
and
inc
jle
jo
cmp
mov
pop
outsl
ljmp
fsts
sub
sti
inc
sbb
lods
shrb
push
pop
popf
cmpsb
mov
in
jecxz
clc
xor
push
adc
adc
mov
aad
ret
imul
lcall
das
jnp
leave
inc
dec
mov
ljmp
clc
inc
sbbl
lea
jae
or
pop
out
fistl
shrb
xchg
ret
loopne
out
mov
inc
mov
lods
xchg
shll
mov
loop
cmpb
mov
pop
rcrb
mov
pop
pop
clc
dec
lcall
aas
addl
addl
add
ret
lea
lret
sbb
adc
fwait
and
sahf
cltd
sar
and
cmp
mov
sbb
das
cmpl
dec
sbb
insb
add
jle
pop
popf
jnp
call
push
das
aad
cmp
sbb
es
inc
xchg
fsts
mov
pop
adc
dec
test
adc
shlb
es
lret
aas
call
inc
insb
ret
ss
push
push
jb
pusha
nop
leave
cmpsb
xor
mov
fs
jno
pop
adc
movsl
fcmovu
xchg
or
xchg
lock
xor
test
adc
push
adc
mov
add
hlt
mov
jbe
xor
cmp
mov
decl
ljmp
test
or
pop
mov
sahf
inc
frstor
dec
loopne
fisttps
loopne
jo
mov
jmp
and
add
cld
push
cmp
js
xchg
in
inc
and
jno
cmp
cmp
lods
divb
sbb
jne
stos
bound
lret
pop
test
lods
idiv
mov
addr16
jle
enter
sldt
andl
inc
mov
or
mov
out
cmp
cmp
adc
int3
jne
test
jmp
or
mov
mov
push
lods
pop
jle
rcrl
jg
mov
fmul
and
sahf
dec
sub
push
xor
sub
aaa
pop
adcb
in
cmp
mov
js
push
sbb
push
adc
jp
push
scas
loope
jmp
loopne
fsubs
mov
push
xchg
sub
cli
mov
mov
scas
xchg
push
shll
add
lret
sub
push
int3
js
jb
ret
aad
or
incl
push
and
cs
and
ss
mov
call
sti
movsl
stos
mov
push
pop
lretw
loop
test
movsl
xor
mov
fadds
bound
mov
xlat
xor
pop
insl
jl
in
mov
std
xor
testb
sti
fcom
or
or
neg
ds
mulb
cmp
and
add
inc
shrl
sub
roll
or
push
scas
mov
and
jge
mov
xchg
mov
mov
xchg
out
mov
and
sbb
repnz
rolb
call
arpl
push
dec
scas
mov
jns
test
das
sub
pop
xorl
js
sbb
je
sub
repz
and
stos
xchg
addb
or
inc
mov
jne
xor
jno
jle
mov
pop
jmp
or
sahf
fwait
test
js
xchg
mov
pushf
xor
hlt
out
mov
pop
adc
push
mov
sahf
stos
lea
lock
mov
push
test
shrl
mov
js
fsubr
adc
lock
mov
fldl
loopne
jno
pop
aas
xchg
mov
in
pop
cs
inc
push
arpl
sbb
int3
test
movsb
lock
add
into
sub
sbb
or
mov
mov
inc
adc
inc
outsl
cwtl
out
jae
gs
mov
xchg
jmp
out
pop
xchg
cmp
inc
dec
mov
mov
fsubl
movsb
sbb
stc
or
call
cmp
jle
pop
rcrl
out
push
and
outsl
pop
bound
andb
sbb
fisubrl
loope
in
fs
insb
pop
mov
mov
jbe
aam
and
sbb
aad
cmp
xchg
inc
pop
dec
lods
fcomip
pop
cltd
push
inc
jecxz
daa
jo
popf
icebp
adc
std
lcall
outsl
and
xor
mov
hlt
flds
cwtl
xchg
test
pop
shll
inc
mov
cltd
daa
je
movsl
incl
add
rorl
hlt
jmp
jmp
dec
cmc
cmp
cmpsl
adc
xor
ret
lahf
ljmp
inc
jo
cmp
mov
pushf
shrl
decl
nop
adc
sub
rol
out
ja
jno
xchg
ret
testb
pop
adc
sbb
loope
add
test
sbb
xlat
fcomip
or
and
cmp
adc
icebp
jg
cmpb
jg
fpatan
mov
inc
push
sbb
adc
fcmovnu
cli
push
push
test
mov
aad
cmp
push
mov
inc
push
js
sbb
and
andl
add
cli
ljmp
pop
mov
in
mov
sub
and
call
mov
sbb
mov
and
cld
pop
cli
decb
sub
mov
pop
pop
xchg
stc
push
or
dec
add
repz
clc
adc
adc
xor
and
or
push
lcall
test
inc
ja
fisttpll
cmc
clc
and
adc
aaa
and
and
add
xchg
dec
movsl
iret
lods
lcall
mov
inc
jnp
jne
icebp
repz
jle
leave
test
nop
sbb
xor
inc
imul
xchg
jle
or
cmp
and
adc
imul
lcall
nop
fmull
xchg
adc
mov
or
sub
incl
lock
les
popa
cmp
add
mov
sbb
pop
in
mov
xchg
inc
pop
or
out
push
adc
inc
lcall
aaa
fidivs
mov
cli
orl
addl
cmp
ja
adc
push
pusha
mov
sti
mov
push
aam
orb
sub
sbb
nop
enter
mov
loopne
sub
xorb
lahf
ficoml
push
ret
pop
enter
fld
inc
icebp
imulb
and
or
pop
jns
mov
stc
and
pop
call
jl
push
sti
push
adc
movsb
jb
xchg
push
mov
cli
incl
push
addl
mov
xchg
pop
inc
test
dec
mov
xor
jno
fcoml
mov
aad
loope
lcall
push
push
jae
loop
sub
les
mov
mov
cs
decb
sbb
pop
repz
jnp
pop
jo
lret
fcmovnu
call
push
add
int
les
xchg
pusha
iret
jne
pop
inc
add
lods
sti
jg
xchg
sbb
inc
stos
imul
and
in
sahf
add
adc
inc
xorl
fcmovu
into
movsl
mov
jmp
add
sbb
imul
lea
test
or
push
stos
xor
outsl
xor
call
push
pop
das
jl
paddb
mov
or
cli
or
add
xlat
pusha
imul
jg
push
and
cs
sub
imul
sahf
jb
push
jl
mov
add
lea
add
xchg
outsl
dec
stos
pop
fdivrp
mov
cmc
fwait
push
xchg
sbb
arpl
icebp
test
and
jl
mov
movsl
mov
jle
jno
rolb
pop
pop
jl
mov
jl
jg
mov
add
scas
xchg
test
push
jne
andl
aad
in
mov
cmp
loop
addr16
push
decl
push
jbe
lock
gs
loop
mov
xor
enter
clc
push
cmpsl
lahf
les
xorl
cmp
ds
aas
sbb
jmp
dec
nop
xchg
sbb
mov
pop
repz
mov
mov
sub
or
cs
shlb
in
cmpsl
or
test
push
fiaddl
dec
shl
inc
shlb
or
in
adc
movsb
adc
in
add
lock
jbe
lahf
jb
ja
and
popf
push
lods
scas
arpl
scas
jecxz
push
inc
sbb
cmc
sbb
mov
sub
or
fidivl
fidivs
fcoml
aam
add
push
fwait
push
jo
insl
arpl
fldt
pop
sub
push
das
sbb
jmp
decl
adc
sub
jmp
xchg
pushf
xchg
mov
and
push
add
push
dec
xorl
fbstp
cli
notb
mov
loopne
xcrypt-cbc
cmpsl
xchg
pop
add
in
inc
sbb
push
add
nop
add
mov
push
ficomps
jg
les
fisttpl
icebp
and
dec
dec
and
inc
push
scas
mov
das
mov
decl
stos
sbb
ret
movsb
sub
xchg
decl
pop
clc
das
inc
jmp
lcall
adc
mov
int3
sbb
jp
jp
cmp
xor
adc
outsl
mov
fdivrp
mov
mov
mov
cmp
mov
fildl
popa
out
int3
fsubl
cld
insl
add
nop
fldcw
mov
or
push
roll
test
lret
mov
inc
addr16
mov
or
mov
test
clc
call
test
loope
pop
lcall
inc
cmpsl
mov
decl
push
movzbl
mov
xor
dec
cmp
mov
mov
mov
jecxz
or
inc
pop
sbb
movsl
mov
rolb
and
fndisi(8087
addb
popa
mov
and
stc
xchg
pop
movsl
scas
loopne
xchg
leave
ja
push
ror
sti
push
xor
mov
jo
out
dec
jl
xor
inc
into
fnstsw
inc
ds
pop
das
rcl
jns
push
sbb
mov
ds
xor
incl
dec
and
add
in
inc
inc
mov
push
adc
cli
lea
adc
inc
dec
stos
add
and
sub
icebp
decl
adc
sti
js
cmp
xchg
popa
mov
push
fsubrs
fildll
sub
cmpsl
mov
dec
add
insb
test
sbb
pop
or
js
pushf
lcall
and
adc
jns
sbb
mov
adc
sbb
out
clc
or
pop
ljmp
popf
testl
jno
push
loope
cmpsb
rclb
inc
adc
and
xchg
jg
push
imul
notl
sub
jp
cwtl
scas
mov
inc
mov
mov
add
scas
imul
lahf
mov
imul
inc
adc
add
test
push
loope
ljmp
dec
add
push
sti
call
cld
shr
in
inc
enter
adcb
shrl
adcl
inc
in
aam
aam
mov
rorl
or
hlt
loope
cmc
lds
cmp
lods
insl
sub
in
test
fwait
clc
lahf
inc
pop
ds
or
jle
push
jno
fidivrs
push
loop
les
cli
inc
jno
mov
xchg
aas
dec
insl
push
add
inc
lods
movsl
lret
add
sbbb
in
and
xchg
cmpsb
xor
or
ficoms
cmp
shll
push
imul
push
sub
add
inc
pop
sub
add
and
ss
mov
jb
aam
orl
ret
loopne
xchg
jge
lcall
sbb
push
push
dec
jb
xchg
mov
rcrb
lds
push
sub
out
clc
outsl
jl
sub
push
adc
fstpl
mov
xchg
pop
jecxz
mov
jge
pop
mulb
mov
and
push
pop
in
or
push
out
xchg
pusha
sub
xor
adc
ror
hlt
dec
gs
dec
xor
lret
or
jmp
pop
dec
cld
add
or
ds
imul
mov
mov
das
stos
pop
stos
nop
cld
dec
lea
decl
jl
roll
in
ret
xchg
xchg
rorl
cmpsl
dec
mov
adc
sub
pop
hlt
mov
movsl
mov
bound
in
sbb
decl
jge
or
xchg
dec
cli
loope
pop
mov
adc
cmpsb
je
mov
fucomip
jg
pop
in
filds
hlt
testb
or
and
inc
test
xchg
scas
sti
dec
sar
lret
sbb
and
enter
pop
mov
pushf
add
popa
cmp
clc
stos
mov
or
lret
xchg
dec
jno
sbb
loopne
gs
loope
cmpb
inc
inc
aaa
pop
dec
xor
ds
cmp
loope,pn
les
insb
test
add
add
arpl
or
sbb
cmp
or
insl
aaa
inc
pop
lods
and
daa
push
ljmp
inc
mulb
jmp
or
sbb
addb
psubd
aam
lcall
cmp
scas
subl
lds
sub
dec
push
cli
mov
sbbl
mov
jge
pop
addl
fcoml
cmpsl
out
outsb
push
xor
and
xchg
or
pop
xor
fsubrl
add
imul
outsb
rorb
fsubl
pusha
inc
outsl
es
ret
xor
das
loopne
cli
mov
out
adc
ljmp
data16
test
add
nop
xchg
add
jo
dec
dec
push
popf
cmp
adc
js
aad
jae
and
rcrb
add
mov
adc
icebp
sbb
push
mov
jnp
adc
cld
push
gs
mov
pop
clc
mov
xor
dec
dec
or
pop
sahf
inc
in
adc
jb
icebp
incb
dec
dec
push
movl
add
aad
mov
push
lds
inc
mov
stos
xchg
rcrl
or
or
dec
push
sub
imul
and
sbb
mov
pop
mov
out
jle
xchg
mov
add
jg
jb
push
and
movsl
inc
jp
add
out
xchg
pop
pop
xor
cmpb
inc
add
pop
push
iret
push
add
jle
aam
jne
loop
inc
into
cs
incl
jle
add
fldenv
push
push
dec
jmp
xor
dec
pop
add
xchg
std
mov
mov
fnstcw
hlt
aaa
mov
mov
jg
mov
aam
js
fwait
nop
jg
adc
je
mov
iret
xchg
mov
push
or
movsb
dec
sbb
xchg
and
mov
out
push
push
xor
add
jmp
and
mov
mov
sbb
cmp
adc
mov
cmp
cs
aaa
test
sub
xchg
ss
test
mov
orl
push
sub
mov
jb
fdecstp
xor
imul
int3
pop
cmp
fcompl
call
mov
cli
test
in
sub
mov
mov
mov
or
sbb
inc
mov
leave
out
sub
fnstsw
inc
mov
pushf
pop
push
xor
fists
or
cmp
fs
push
pop
xor
pop
cli
mov
fsubrp
xchg
mov
mov
jecxz
jle
insl
push
jl
cmpsb
cmp
lods
dec
mov
dec
or
or
lods
mov
cmp
cmpl
lea
mov
sbbb
in
sbb
xor
pop
mov
roll
pop
pop
aaa
in
fcomi
clc
adc
mov
inc
and
push
inc
cltd
shlb
jo
cmp
mov
jmp
push
in
xchg
fbstp
loop
mov
rorb
cmc
adc
dec
inc
data16
dec
fwait
dec
in
fs
pop
filds
fs
insb
push
cld
stos
pop
fstps
gs
js
jp
js
cmp
jns
fiadds
sub
mov
add
ret
inc
test
pop
fimuls
cli
jmp
testb
lcall
call
jp
andl
inc
xchg
cs
sub
mov
test
adc
mov
jno
push
sub
faddp
pop
pop
mov
and
cwtl
push
and
insb
pmulhuw
push
and
ja
movsl
repnz
nop
mov
psubw
inc
mov
push
pushf
pushf
enter
add
dec
sbb
out
scas
pop
mov
sarb
stos
enter
pop
jns
aaa
push
xchg
pop
cltd
pop
dec
rcrl
sbb
mov
mov
loopne
out
fldl
inc
bound
push
or
lahf
mov
aam
loope
pop
mov
push
push
and
rcrl
pop
stc
test
rorb
push
sti
push
and
dec
int
jp
cwtl
stos
xor
xchg
out
movsb
enter
loope
cmp
aaa
lock
jl
cmp
jno
sub
shr
push
scas
roll
jnp
mov
ret
adc
and
or
push
dec
test
mov
sbb
fucomip
lahf
bound
jno
or
push
in
sbb
pop
andb
jmp
sahf
test
adc
shll
add
or
push
dec
and
test
std
das
add
mov
ja
int3
rcrb
mov
adc
sbb
jnp
in
rol
jge
mov
xchg
dec
test
mov
add
rol
mov
loope
push
and
push
add
mov
cli
outsl
icebp
adc
je
loop
lcall
or
mov
imul
ds
lcall
sub
dec
rcll
sub
jg
es
mov
lods
daa
push
leave
jne
dec
lods
movsl
mov
mov
rcl
popf
iret
lock
mov
fdivrl
cmpsl
arpl
mov
jmp
aaa
incl
imul
mov
push
and
add
push
cli
in
inc
and
sub
mov
cli
sub
jl
jle
pop
xor
data16
icebp
inc
sub
xlat
cmp
outsb
add
mov
je
ret
or
clc
mov
mov
jbe
add
cmp
stos
fcompl
xchg
pop
pop
cli
jns
stc
or
test
xor
fcomi
pusha
arpl
dec
arpl
mov
fcoms
movsb
inc
jae
daa
in
add
les
sahf
jae
mov
out
cmpsl
xlat
pop
push
out
ret
push
xchg
ljmp
lahf
mov
imul
inc
fldcw
lods
jae
jns
mov
cmp
sbb
outsb
adc
push
jmp
cmp
jecxz
stc
popf
in
mov
mov
movsl
out
fwait
loope
sbb
ljmp
add
iret
pop
aas
mov
lret
rclb
in
imull
xor
xchg
jg
sbb
cmpsl
dec
ret
loopne
cmp
mov
pop
lcall
add
loopne
pop
push
call
dec
nop
inc
or
loop
cmp
arpl
loopne
and
cmp
int
in
push
pop
push
lods
aam
mov
ret
pushl
jecxz
push
int3
jg
xchg
nop
sub
adc
push
andl
jae
and
sub
adc
mov
cmpsl
ret
dec
adc
shlb
push
test
test
sub
pop
lahf
add
mov
stos
jecxz
incl
insl
ja
es
incl
repnz
push
imul
mov
insb
cmp
xchg
cld
lcall
inc
filds
jne
adc
hlt
add
test
sbb
dec
inc
test
mov
aaa
or
loope
clc
push
mov
jg
xor
sbb
dec
push
outsb
and
in
xchg
mov
pop
cmpsb
dec
jp
jl
adc
je
daa
mov
xchg
imul
inc
test
sbb
adc
mov
mov
call
out
incl
dec
outsb
cmp
js
fdiv
repz
mov
mov
mov
pop
mov
es
addb
mov
adc
jno
cmp
outsl
inc
filds
adcb
jge
pop
add
mov
or
sbb
sarb
and
es
imul
daa
mov
add
xchg
xchg
jecxz
arpl
xchg
xlat
push
jno
loopne
pushl
popw
sahf
xor
pop
xor
hlt
paddusw
and
inc
outsl
aad
sbb
nop
popf
or
mov
andb
sbb
fchs
cmpsl
push
and
jle
cwtl
add
or
fs
jno
das
push
inc
or
in
loop
xor
aad
rcrl
push
and
cmp
cltd
dec
mov
sbb
push
and
out
pop
les
das
imul
sub
sti
jle
cmpl
mov
pop
repz
das
mov
out
ja
cmpsl
inc
stc
pop
mov
add
add
mov
pushf
shrl
leave
adc
adc
mov
push
sbb
hlt
ljmp
subb
xchg
fidivrl
xchg
mov
inc
ds
pop
fsubrs
repz
add
or
mov
inc
cltd
int
sbb
xchg
sbb
jbe
push
loop
in
roll
cmp
clc
jg
push
inc
rorb
inc
pushf
popf
stc
call
ljmp
dec
mov
loop
je
addr16
cmpsl
outsl
mov
sbb
pop
jg
bound
stos
stos
repz
decb
cld
call
sub
adc
mov
dec
ja
fcmovnu
mov
mov
aad
push
and
xchg
jae
xchg
mov
addr16
fs
clc
pop
cli
push
mov
push
mov
sub
cmp
pop
rcr
and
les
test
jecxz
fidivs
je
jle
inc
push
ja
in
cmc
mov
arpl
stos
stc
scas
fwait
mov
into
andb
pop
pop
insl
mov
imul
push
sbb
adcw
adc
or
jge
mov
mov
lds
xchg
fldcw
push
pop
int
scas
jg
das
cld
iret
add
sarl
push
or
sti
push
loop
dec
fnstsw
in
xchg
or
sbb
xor
xchg
adc
aam
xchg
dec
jle
icebp
mov
mov
pop
mov
and
sbb
sbb
clc
push
addr16
xor
sub
sbb
cmp
and
mov
and
data16
fsubl
ret
arpl
fists
push
leave
sbb
xchg
dec
pop
pop
and
in
enter
mov
xor
xchg
jo
mov
sbbl
jmp
inc
mov
cs
sti
sub
or
adc
lock
mov
pop
es
rclw
or
xchg
mov
js
decl
cld
xor
data16
les
mov
lea
inc
ffreep
sub
mov
aaa
call
loopne
outsl
jp
push
sub
push
data16
sub
mov
bndstx
bound
sahf
lock
fwait
lods
xlat
inc
sbb
inc
shlb
call
pop
ljmp
mov
out
mov
xor
insb
js
stos
mov
mov
or
adc
or
loope
add
lds
mov
jmp
add
mov
adc
and
push
shll
aaa
in
mov
xor
int3
inc
jae
mov
adc
xor
jbe
cld
shr
enter
mov
or
mov
jne
sbb
cli
lret
ror
push
cmc
fistl
xchg
popa
inc
xor
sub
movsb
pop
popa
add
fwait
ds
add
sbb
imulb
ds
sarl
cli
jne
mov
jmp
push
lcall
jg
push
aaa
std
add
mov
cwtl
test
pop
fbstp
mov
mov
jmp
mov
lcall
adc
sti
jns
ret
inc
sarl
popa
fs
ja
lcall
add
mov
rclb
aaa
cltd
cmc
cmp
or
inc
scas
mov
sub
ret
and
lock
sbb
roll
loop
jae
dec
sub
xchg
ret
aas
jl
mov
fnstsw
jg
addb
sbb
sbbl
lahf
inc
ljmp
clc
cli
aad
mov
inc
mov
jle
jbe
int3
adcb
pop
fwait
jae
gs
incl
mov
xchg
dec
lcall
fldcw
or
scas
loop
fistpll
iret
lods
psubb
rcrl
jne
jne
inc
sbbl
mov
imul
loopne
dec
call
int
aaa
incb
mov
comiss
sub
or
xchg
addr16
mov
sbb
cmp
pusha
rorl
jo
cwtl
sub
mov
or
pop
jle
fcmovb
mov
inc
popa
dec
cmp
into
mov
lcall
lcall
icebp
fisubs
imul
decb
cmp
or
out
push
add
out
sub
ficomps
and
pop
js
je
out
int3
push
aaa
iret
and
adc
or
ljmp
sbbb
lret
push
test
dec
sub
add
mov
lock
loopne
mov
jo
add
jp
xchg
or
idivb
lods
push
dec
je
xchg
mov
ljmp
sbb
mov
mov
ljmp
adc
test
imulb
addr16
dec
test
mov
or
call
cltd
push
outsb
jmp
inc
xor
cld
mov
cmpsl
fistpll
cltd
loop
jne
mov
push
and
push
push
cltd
cmp
dec
inc
jmp
pop
data16
pop
xchg
cli
mov
dec
fwait
outsl
int3
cli
scas
pop
mov
ss
push
mov
add
sbbb
push
jmp
je
sub
fwait
ds
in
cltd
mov
jecxz
jo
fimull
mov
in
jbe
pop
push
ret
push
or
mov
inc
sub
jne
add
fwait
cli
cli
in
je
fcmovbe
aad
pop
cmpsb
push
insl
mov
xor
push
lock
mov
push
adc
cmp
mov
lret
cmp
mov
mov
cmc
test
push
push
adc
sub
jae
stos
xor
add
rorb
jp
xchg
sti
pop
std
cmc
frstor
xor
stos
jge
jg
jmp
mov
cli
aam
fisttps
adc
shlb
daa
jmp
aaa
incb
add
arpl
outsl
outsb
ds
xchg
push
and
adc
inc
xor
ja
ljmp
pop
rolb
in
aaa
mov
ss
pop
push
jbe
sbb
push
jmp
sub
icebp
lds
lea
inc
fnsave
mov
out
test
mov
push
jle
pop
push
shlb
sub
cmp
mov
add
outsb
mov
adc
pop
pushf
stos
xorl
xacquire
fcmovu
fmull
sub
inc
out
roll
stos
xchg
or
mov
ret
ss
ret
int3
mov
mov
xor
les
loope
lret
scas
rcll
sbb
xchg
add
xor
test
ror
aas
mov
mov
nop
lahf
pop
pop
mov
jp
mov
xor
int3
lret
aas
insl
cmp
movsb
push
movsl
call
xchg
inc
sbb
daa
inc
rclb
jecxz
hlt
push
fimull
mov
iret
xor
jge
clc
mov
arpl
aam
and
or
sbb
mov
push
das
imul
mov
xor
and
adc
ljmp
das
sub
outsb
cmp
xchg
ret
xor
xchg
jl
mov
add
idiv
cmp
xchg
nop
les
xchg
or
mov
jmp
xor
daa
loopne
mov
add
inc
loopne
or
dec
push
cmpb
popf
mov
cld
stos
addr16
loop
jg
dec
jae
fsubrl
xchg
adc
dec
call
hlt
gs
rorl
push
ret
adc
loopne
mov
fidivrl
jmp
mov
sbb
aas
popl
call
shrb
jle
and
lods
clc
aam
mov
jle,pt
or
and
jo
sub
fiadds
test
lock
movsl
fcmovb
cmp
stos
mov
add
mov
adc
out
ss
mov
and
inc
shll
sarl
js
cli
push
outsb
loope
movsb
clc
ret
xor
sbb
into
out
sti
sbb
jne
test
stc
mov
imul
push
xchg
les
or
sub
xchg
mov
insb
fmull
out
push
add
mov
pusha
pop
push
jb
das
inc
icebp
aaa
movsl
xchg
and
movsl
sbb
or
outsb
je
dec
mov
int3
lods
inc
mov
dec
push
push
js
outsb
mov
stc
adc
cmpsb
fwait
mov
jnp
fwait
jle
faddl
loope
ret
or
mov
xorl
pop
lods
das
clc
rolb
in
pop
and
shlb
pop
push
repz
int
and
test
add
test
in
jle
or
shlb
outsl
in
scas
xor
cmp
aas
stos
call
adc
jmp
mov
inc
aaa
inc
call
shl
roll
mov
addl
test
call
jo
sbb
xchg
dec
das
int3
shlb
ljmp
pop
mov
add
pop
cli
insl
sub
arpl
push
ja
popa
loope
std
popa
mov
add
in
into
aas
cmpsl
cltd
jge
cli
xchg
insl
int3
mov
push
rorl
popa
xchg
lret
mov
mov
call
sub
imul
in
mov
pushl
or
cmp
cmpsl
sahf
mov
nop
and
outsl
roll
xor
sahf
nop
test
or
add
jno
xchg
dec
int
movsb
es
or
sbb
mul
xchg
sub
movsb
mov
insb
xchg
push
or
incl
or
arpl
inc
sbbb
cmpsb
bound
mov
hlt
das
cld
xchg
pop
pop
sub
jecxz
pop
jp
insl
mov
and
cmc
sbb
loope
xchg
mov
lock
add
test
xor
inc
das
dec
aam
add
push
leave
add
mov
js
inc
dec
fwait
cmp
jecxz
movl
sbb
pop
inc
scas
pop
mov
lods
push
xor
push
xlat
jle
xchg
inc
xchg
and
adc
bound
aaa
push
push
push
add
lock
mov
push
in
test
inc
out
inc
aad
and
and
shl
ret
arpl
loopne
sarl
push
jo
daa
sbb
roll
insb
mov
cwtl
or
test
lcall
repz
add
add
sarl
push
lock
dec
cmp
xlat
int
pop
js
mov
add
or
movsb
add
aad
push
inc
lcall
loop
mov
imul
jg
out
into
fst
int
mov
pop
pop
loopne
jmp
lahf
mov
xor
jecxz
aaa
lahf
xor
mov
fisubrl
es
mov
mov
insl
mov
addb
push
incb
mov
xor
cmpsl
iret
inc
sbb
jecxz
push
imul
stos
mov
ret
aad
or
or
bound
mov
push
xchg
lock
xor
inc
push
jne
jno
cmp
outsb
jg
addb
xor
inc
cmp
das
lock
mov
rcrb
jbe
inc
cmp
dec
outsl
xchg
decl
dec
ret
popf
adc
and
cli
pop
jmp
lock
popa
adc
or
dec
rorl
mov
sti
scas
mov
in
cltd
mov
pop
jp
or
cltd
cli
pusha
inc
aas
push
dec
sbb
inc
aam
add
pop
mov
loop
push
add
sbb
pop
ljmp
sub
push
jb
mov
call
rolb
pop
pushf
mov
subl
push
in
sub
dec
or
cmp
mov
into
sti
dec
cmpsb
arpl
mov
das
cmp
push
out
or
inc
in
push
sbb
lcall
jge
pop
dec
dec
scas
iret
fcoml
sub
ret
int
mov
das
cld
add
les
int
cmp
shl
xor
or
mov
push
mov
xchg
xor
cmpsb
loope
rcrl
addl
filds
sub
bound
mov
cltd
test
and
mov
mov
lods
xchg
pop
cmp
inc
xorb
add
fwait
out
inc
testl
int
in
call
xchg
int
test
xchg
sub
cld
mov
clc
test
std
cmp
andb
fucom
addl
insl
icebp
aaa
and
pusha
mov
sbb
popf
push
sub
jg
push
stos
fistpl
mov
movsb
xchg
je
clc
sbb
mov
test
mov
xchg
sub
js
mov
nop
and
mov
fildl
in
psraw
sub
pcmpgtb
push
xchg
dec
and
xchg
mov
push
imul
mov
mov
mov
mov
or
in
mov
push
lods
pop
xchg
cmp
clc
dec
cld
stos
mov
sahf
call
sub
arpl
faddp
pop
rorb
xchg
pop
icebp
lret
dec
aaa
insb
jae
sub
sbb
fidivs
xchg
mov
les
jecxz
and
rcr
lahf
out
or
imull
xor
push
sbb
cmc
dec
mov
mov
sbb
test
enter
adc
pop
xchg
in
clc
push
mov
cmp
std
movsl
scas
mov
movsl
sbb
add
icebp
shlb
push
mov
inc
inc
std
ljmp
push
push
jp
call
jmp
adc
stc
add
add
mov
jno
movsb
xchg
loope
cwtl
es
sahf
dec
mov
and
sbb
movsb
dec
imul
sbb
cmc
push
push
add
add
jno
sti
cmp
and
xchg
mul
sub
adc
or
mov
mov
or
pop
pop
adc
jle
add
repz
mov
dec
pushl
mov
insl
xor
mov
inc
sbb
test
pop
clc
adc
test
out
ret
clc
lret
icebp
sbb
or
sub
aaa
stos
push
push
dec
dec
das
cld
icebp
mov
lret
dec
in
or
insl
data16
bound
clc
dec
ret
in
add
push
push
ds
jo
push
cld
cs
aam
incl
aas
hlt
test
ret
inc
loopne
cmpsl
int
ret
sbbb
shll
data16
fisubrl
sbb
fs
mov
or
out
push
sub
adc
push
push
jecxz
lret
stos
rcr
stos
push
xchg
jp
popa
clc
mov
push
sti
and
scas
inc
and
sbb
jl
std
jl
cmp
mov
sahf
sahf
mov
inc
or
cmpsl
sbb
test
xchg
and
insl
jns
mov
out
cmc
push
add
lcall
fcmovnu
sbb
cmp
lret
ror
add
xchg
stc
incl
mov
fisubrl
fs
clc
popa
pop
inc
jg
sbb
adc
mov
or
jge
jns
lcall
cmp
lea
gs
pop
jecxz
adc
xchg
jecxz
or
cmpsb
jge
orl
mov
ja
hlt
ret
cs
xor
pop
out
outsl
mov
cmp
cmp
sbb
jl
lock
add
aas
stos
mov
fsubrp
push
sbb
xchg
dec
test
sub
inc
cmp
into
movsb
mov
mov
xlat
clc
lods
mov
jb
aam
mov
test
and
add
cmp
inc
dec
add
adc
sbb
jo
insl
push
adc
mov
jle
fisubrs
pop
pop
in
sub
ja
ss
mov
mov
dec
out
push
out
cwtl
insb
add
mov
adc
sbb
lds
inc
mov
hlt
sarl
push
cs
loop
mov
imul
icebp
jp
cmc
sbb
icebp
imul
sub
pcmpeqw
xor
adc
es
hlt
repz
xchg
mov
push
jg
xchg
inc
adcl
inc
ljmp
dec
xchg
sahf
jle
xchg
pcmpeqd
push
cmp
dec
sub
pop
mov
outsl
sub
inc
or
int3
aad
push
xchg
mov
inc
and
addl
cwtl
aam
sar
pop
call
dec
nop
leave
pushf
sbb
sub
push
hlt
pop
pop
pop
mov
loop
jg
xchg
or
mov
enter
ljmp
push
ljmp
int3
mov
mov
scas
pop
xchg
lea
mov
adc
fs
out
jb
in
in
or
testl
jp
ds
movsb
and
call
cmp
xchg
mov
movsl
or
pushf
xchg
inc
shll
pop
repnz
inc
js
mov
add
adc
mov
xorb
mov
in
sbb
xlat
dec
inc
cs
sbb
jp
sahf
dec
lea
idivl
mov
dec
inc
fdivl
mov
push
dec
xor
fbstp
cs
fbld
out
push
testb
lods
mov
addl
clc
aaa
outsl
push
xchg
mov
daa
push
icebp
add
test
lock
sub
fcoml
push
mov
mov
outsl
dec
iret
jbe
scas
ds
sub
push
inc
ljmp
loop
inc
or
sbb
in
xchg
out
and
ss
xor
push
mov
getsec
aad
loopne
fstl
sbb
jg
cmp
orl
shrl
test
cmp
clc
punpckhwd
lea
push
mov
or
pop
loopne
jae
add
xchg
or
jns
ljmp
dec
les
icebp
mov
pop
jo
outsl
ljmp
sti
adc
inc
outsb
push
jbe
or
push
call
or
cmp
add
sbb
frstor
gs
mov
mov
std
mov
sar
lods
lret
dec
push
jle
mov
push
push
mov
mov
iret
imul
xor
sbb
push
clc
daa
dec
test
sbb
mov
xchg
aad
or
push
mov
inc
push
xor
rsm
or
pop
stc
or
jbe
cmp
dec
and
and
mov
jp
sahf
or
and
or
daa
adc
sbb
lahf
jge
roll
fadd
add
dec
sbb
mov
ljmp
es
bound
jp
add
dec
fs
push
stos
test
loopne
cli
fsubs
jne
dec
sbb
jg
jg
aas
mov
xchg
nop
call
loopne
mov
and
inc
sarl
sarl
add
bound
nop
cmp
fildl
ljmp
jns
mov
push
std
leave
or
xchg
loopne
repnz
sti
or
shrl
popa
mov
sarb
add
push
shl
loope
cmp
dec
cli
lock
outsl
mov
and
mov
ret
fstpl
ss
sti
cld
cmp
loope
xchg
push
ss
and
cli
dec
pop
fadds
fcoml
pop
call
push
cmp
pop
or
xchg
jnp
mov
jmp
xchg
loop
pmullw
cmpb
jmp
clc
or
add
imul
jb
push
push
jg
sahf
shl
mov
dec
cmp
or
pop
add
mov
or
lahf
xor
scas
int3
mov
or
dec
aam
push
jle
call
daa
aaa
add
jmp
mov
mov
push
and
mov
xor
clc
xchg
jb
xor
add
or
inc
rorl
inc
xor
out
mov
cmc
fldt
inc
out
push
pop
mov
fbld
stos
dec
lds
mov
decl
sub
lods
enter
daa
dec
or
cmp
xor
lea
or
push
add
bound
stos
sbb
push
fldenv
add
cmc
test
mov
outsb
fistpll
pusha
push
pop
fldcw
fidivs
jb
cld
xchg
or
mov
mov
nop
push
push
aam
xchg
push
xchg
ss
adc
inc
or
jnp
mov
daa
dec
lahf
and
push
in
loopne
pop
scas
adc
dec
sub
shrl
xor
jb
shl
or
test
xlat
inc
or
sub
push
ret
inc
iret
sbb
addr16
in
push
js
das
fcomps
ss
bound
hlt
rol
test
jnp
push
and
add
int3
fdivr
mov
mov
pop
icebp
xchg
lahf
stc
pop
push
js
lea
dec
fistpl
push
stc
fbstp
stos
jle
ljmp
insb
adc
bound
pop
scas
xor
shrb
ljmp
mov
dec
cmp
mov
mov
jnp
mov
pop
mov
jnp
hlt
add
mov
add
mov
xor
pop
mov
aaa
dec
les
mov
mov
lock
sbb
or
fstl
sbb
add
enter
jo
sti
sbb
mov
cmp
in
ficoml
push
call
js
and
pop
push
pop
inc
mov
aam
stos
jns
insl
mov
repz
jge
pop
push
push
test
jo
cmpb
call
call
test
sahf
jo
adc
ret
xor
mov
leave
fmull
cmc
dec
push
std
fldt
add
dec
mov
mov
adc
mov
mov
popa
movb
add
pop
enter
shrb
repnz
jno
test
cmpsl
addr16
jp
pop
ss
mov
jns
pop
adc
sbb
mov
mov
das
push
xchg
filds
lcall
repnz
adc
jle
add
adc
cli
xorb
or
jecxz
out
fs
hlt
cmc
adc
lahf
inc
icebp
lcall
and
imul
stos
dec
gs
inc
lods
insl
push
cmc
fs
mov
mov
sub
mov
loopne
inc
sbb
clc
mov
pushf
lea
ljmp
cmp
mov
add
add
into
or
stos
mov
sarl
loopne
leave
cmp
mov
inc
out
imul
bound
pop
je,pn
jbe
mov
inc
ljmp
icebp
aad
inc
sbb
inc
fidivs
es
push
aad
fldcw
pop
xchg
push
mov
stos
ljmp
fstpl
stos
fisubs
add
add
adc
pushl
push
mov
mov
mov
cmp
inc
mov
mov
mov
ljmp
mov
inc
and
add
sbb
mov
nop
inc
std
xor
sbb
dec
mov
sub
decl
mov
rcr
lods
test
pop
fstpt
loop
jbe
and
mov
dec
jp
testl
int
sbb
lock
xorb
push
push
pop
mov
insl
add
lahf
xlat
mov
lfs
push
cmc
dec
push
xchg
addb
or
cmp
dec
mov
jnp
enter
mov
push
pop
pushf
inc
xchg
adc
sarb
into
pop
imul
inc
mov
mov
dec
push
mov
mov
movsl
mov
dec
bound
lods
sbb
jge
insb
pop
ss
mov
dec
lea
adcb
pop
inc
roll
call
out
pushf
or
ljmp
and
push
loopne
mov
add
push
jbe
pop
mov
repnz
scas
test
xchg
neg
and
or
stc
dec
cmpsb
mov
and
mov
dec
movsb
jae
daa
and
xchg
incl
sbb
mov
push
and
cld
dec
cmc
mov
fmull
movsb
fsubl
mov
pusha
inc
inc
or
inc
fbstp
inc
ret
jbe
ret
mov
xchg
or
push
mov
jne
inc
loopne
pop
jnp
pop
aas
mov
dec
ret
jbe
mov
xchg
mov
or
pop
jl
filds
addr16
mov
inc
inc
roll
loope
insb
sub
cltd
push
fisttps
inc
lcall
push
testl
cs
inc
icebp
push
js
cli
mov
jb
xor
sub
shl
xor
or
imulb
cld
cmc
and
push
mov
xlat
or
icebp
aam
mov
test
xchg
call
test
pop
adc
les
mov
push
aaa
std
outsl
mov
push
fwait
in
mov
mov
decb
clc
inc
lahf
ret
mov
sti
add
mov
neg
out
imul
cmpsl
or
loope
mov
inc
and
shlb
into
mov
sbb
cmc
mov
or
daa
call
mov
jle
cmp
push
sub
shll
pop
add
sub
mov
jno
loope
cmc
imul
dec
push
mov
sub
and
pop
stos
in
adc
xchg
roll
dec
rcrb
pusha
jmp
xor
pop
push
xor
push
mov
add
push
adc
aaa
std
inc
jo
ret
xchg
ret
or
sbb
pusha
repz
dec
call
fs
add
ror
call
fstps
jb
inc
iret
popf
iret
push
daa
shrl
shrl
jo
arpl
fisttpll
arpl
test
push
adc
test
fidivs
sarb
les
jg
aam
push
and
adc
pop
adc
mov
loopne
inc
cld
sub
andb
jmp
roll
aam
add
or
fisttps
shlb
daa
push
ffreep
ror
xor
xlat
jp
test
adc
addl
mov
jb
movsl
sbb
mov
repnz
and
jge
outsl
xlat
repz
sahf
jecxz
scas
jge
in
in
lods
mov
pop
out
ret
mov
sbb
loop
lods
adc
dec
mov
ds
pop
mov
aad
cmpsb
das
add
ret
sbb
je
shrl
sbb
stos
mov
fldl
mov
mov
add
push
push
dec
test
negl
outsl
pop
sbb
clc
in
dec
jbe
test
mov
pushl
adc
mov
stos
cmp
sbb
pop
js
mov
or
xor
cmp
sbb
incl
fisubrs
leave
stc
orb
sbb
jo
lock
add
lea
js
hlt
mov
mov
mov
fs
les
loop
and
dec
mov
loopne
mov
xor
mov
loope
sbb
and
mov
xor
adc
and
in
xor
sti
insl
adc
mov
dec
cwtl
aad
incl
ljmp
jb
and
aaa
inc
outsb
iret
xchg
aad
xor
push
dec
adc
dec
or
xchg
jbe
pop
cli
popl
push
mov
scas
xorl
mov
fstp
xchg
and
icebp
jg
sbb
es
test
cwtl
xlat
and
xchg
push
mov
push
inc
dec
cmc
mov
out
push
sbb
add
lods
add
sub
out
insl
lods
jg
add
rolb
dec
jno
mov
stc
ds
cmp
insl
xor
push
rorb
lret
sar
pop
orb
mov
cmp
in
pop
mov
cmp
jnp
pop
mov
mov
inc
stos
mov
pop
hlt
lret
loop
ss
out
or
mov
or
sbb
dec
sbb
repnz
cmp
pop
sbb
or
cwtl
jg
subb
mov
mov
dec
aaa
add
inc
outsl
mov
xchg
insl
ret
adc
clc
mov
pop
fcomps
leave
xchg
sbb
jle
xchg
ljmp
mov
das
loopne
cld
push
pmaxsw
inc
in
out
roll
ret
jno
lods
sbb
dec
test
add
mov
inc
shrb
xchg
pop
rorl
ret
pushf
push
lahf
inc
out
mov
scas
cmp
push
lods
pop
adc
sbb
arpl
sbb
lret
nop
mov
ja
inc
adc
sbb
stos
pop
test
xchg
pop
outsb
loop
fwait
enter
nop
sub
xchg
in
push
push
xorl
loopne
shlb
lahf
or
sbb
in
add
mov
cmp
jns
gs
pop
adc
inc
pop
lods
and
das
cld
dec
sbb
rclb
insl
lds
insl
sub
pop
clc
ja
pusha
adc
sbb
sti
filds
pop
xchg
dec
mov
dec
aam
out
rorb
inc
incl
pushf
add
push
insb
inc
add
adc
jg
sbb
adc
mov
iret
inc
mov
cmpsb
add
xchg
jmp
sub
movsb
adc
jo
fcomi
inc
scas
inc
sub
call
cld
decl
and
mov
jecxz
clc
popf
insb
fisttpl
test
cld
pop
adc
pushf
lcall
jg
test
test
cmp
dec
jecxz
fistl
ret
inc
mov
dec
cmc
movsl
mov
roll
jecxz
fmull
sub
fdivs
xchg
cmp
clc
mov
add
add
cmp
push
or
lock
xor
fstl
pop
fidivrl
add
idiv
add
insb
outsl
aaa
push
bound
and
inc
cltd
push
cltd
jl
sbb
fistpll
popa
test
sub
emms
adc
imul
sti
int3
cltd
retw
loop
dec
pusha
sbb
je
inc
imul
xor
sbb
lcall
jno
fistl
xchg
mov
sbb
popa
push
test
pop
add
pop
jb
cwtl
jg
jns
jp
mov
mov
cmp
dec
pop
call
lcall
push
cmpsl
pop
lret
xor
dec
mov
scas
adc
mov
push
mov
test
jg
mov
mov
sbb
arpl
mov
mov
lea
dec
idivb
dec
mov
sarl
cli
call
mov
mov
push
stos
das
std
aaa
mov
cld
ds
sub
test
out
call
push
jo
pop
xchg
adc
mov
adc
jge
clc
data16
ljmp
rolb
xor
cmp
xchg
lcall
mov
push
push
faddl
jns
sbb
loopne
sarb
fisubrs
add
orb
push
loopne
rclb
int3
ja
mov
out
mov
frstor
pop
add
test
push
aam
sbb
dec
sti
push
xlat
pop
cs
icebp
fs
popl
pop
mov
repz
popf
xor
test
xor
sbb
lea
mov
rol
jmp
bound
pushf
push
clc
lcall
jae
mov
adc
push
repnz
push
test
pop
xorb
sub
or
mov
adc
scas
xchg
je
dec
pop
and
imul
aad
pop
cwtl
in
dec
xor
pop
cs
sbb
fistpl
and
inc
push
dec
lret
inc
xor
sub
mov
sub
jae
inc
call
jmp
mov
adc
rcrl
mov
pop
or
dec
std
jbe
movsb
orl
ret
and
xlat
add
repz
inc
push
sbb
mov
pop
loop
lods
loope
repz
fwait
jecxz
je
mov
sub
imul
sar
pop
cmpsl
xor
mull
or
aaa
inc
inc
or
aaa
mov
scas
jns
enter
or
mov
test
mov
popf
adc
in
and
sar
lcall
dec
lock
sbb
ds
scas
lret
pop
adc
test
mov
jmp
mov
xchg
loope
add
jnp
pop
lock
cmp
or
xor
or
iret
clc
cli
shll
pop
mov
dec
hlt
aam
movsl
sub
dec
dec
mov
rol
and
pusha
mov
pop
ret
cmp
push
inc
shrl
aad
cmpsb
sbb
test
shll
mov
cs
push
jg
jle
or
adc
push
dec
or
aaa
push
adc
xor
andb
imul
je
pop
push
xor
adc
lahf
ljmp
inc
jne
sub
nop
js
mov
insb
mov
xchg
push
inc
fistps
sbb
shlb
stos
xor
pop
mov
mov
out
in
std
lods
int
or
movsb
sbbb
sarl
into
shr
imul
cmc
sahf
test
mov
dec
les
cmp
sbb
gs
adc
movsl
in
shr
pop
jb
mov
fisubs
cmpb
jns
movsl
loopne
and
movsl
lock
lea
xlat
adcl
push
add
in
push
out
fisttpl
iret
fidivrl
xor
mov
repz
mov
cmp
sar
or
mov
inc
movsb
std
in
cld
mov
fistpl
add
std
pop
stos
mov
add
xchg
dec
fadds
enter
call
adc
fxtract
jmp
pop
pop
sbb
xchg
int
lock
cmp
aad
clc
add
stos
xchg
fmull
sbb
push
cmp
les
mov
and
inc
sbb
pop
pop
addr16
lock
out
cmpb
rorl
jo
cmp
rcrb
add
sbb
std
xor
fbld
jl
sbbl
test
and
popf
xchg
inc
fdivrl
addr16
aas
cltd
jg
incl
std
call
test
dec
adc
jae
cmp
mov
xchg
outsl
outsl
pop
push
test
andb
lea
cmp
mov
call
add
dec
loopne
sahf
psubb
mov
add
mov
stc
inc
stos
mov
outsb
lcall
std
movsbl
jmp
int3
adc
fcomip
push
call
popf
adc
xor
mov
adc
int
or
addr16
adc
je
pop
jg
and
inc
dec
icebp
pop
stc
sbb
adc
pop
enter
adc
mov
div
ret
jg
cmpsl
ret
pushf
aam
sahf
pop
ds
push
jecxz
cmp
dec
ljmp
stos
pop
xor
mov
loopne
sub
incl
mov
aas
push
movl
pop
mov
ja
test
ja
cmp
mov
mov
cs
pop
and
hlt
call
je
and
int
sub
lahf
loope
sub
out
sub
ror
inc
fstpt
ds
orl
loop
insb
call
jge
bound
stos
test
mov
dec
dec
out
out
cmp
popa
lods
xchg
call
sub
jmp
stos
testb
dec
inc
repnz
push
fistl
pop
adc
jge
push
pop
cld
aad
mov
lret
lea
jl
les
add
sub
lahf
push
dec
and
pop
jp
sbb
pusha
adc
pushf
xlat
inc
lock
out
lea
ret
ds
test
push
inc
fcmovbe
jle
or
mov
or
clc
lods
sar
cs
inc
subl
stc
xor
aam
fildll
or
into
adc
cmpsb
sarl
mov
dec
xchg
in
shrl
cmp
mov
stos
cmp
movsb
es
jns
adc
scas
push
sub
mov
sbb
hlt
daa
js
jg
pushf
sahf
pop
popa
into
scas
or
lock
ss
dec
xor
xor
pop
test
push
addr16
mov
or
sbb
mov
icebp
mov
jnp
iret
lock
adc
push
iret
sahf
xchg
sub
inc
or
adc
mov
insb
cmpl
cli
faddl
sub
stos
scas
xor
mov
and
xorb
sub
cmp
daa
cs
roll
rol
insl
pop
jecxz
addr16
xchg
test
sbb
pop
cli
repnz
inc
jb
mov
sahf
subb
cmp
outsb
jb
push
repz
pushl
stc
roll
mov
xchg
or
cs
flds
loopne
fsubs
rcl
mov
aad
fidivrs
or
and
sub
cmpb
pop
pop
loopne
jmp
js
adc
add
push
shr
mov
push
add
outsl
pop
and
adc
cli
cmp
hlt
fwait
xchg
mov
jecxz
cld
fiaddl
lds
inc
mov
inc
dec
dec
shlb
dec
aad
xlat
xor
mov
daa
mov
pop
mov
add
loop
int
mov
cmp
push
cwtl
inc
xchg
insl
push
cli
ljmp
pushf
jb
jbe
iret
jl
shll
sub
fstpl
shll
sub
mov
inc
decl
incb
shrl
pop
mov
push
mov
shlb
cmp
pop
mov
pop
js
and
adc
addr16
test
stc
sbb
push
cmc
pushl
and
mov
xor
scas
lods
les
sbb
mov
out
addb
in
mov
inc
jecxz
adc
cld
or
scas
dec
call
mov
addr16
xchg
jle
dec
or
rolb
pop
jg
cwtl
or
mov
cli
ljmp
jbe
jg
dec
or
xchg
dec
xchg
insb
roll
and
jo
shl
push
or
ret
subl
push
out
adc
and
lret
adc
push
mov
jle
mov
mov
cmc
ss
mov
or
jmp
dec
dec
jns
mov
cmp
test
pop
test
pop
out
add
insb
ret
mov
jae
xchg
dec
mov
pop
in
fs
xchg
js
pop
test
mov
xor
pop
lea
push
insb
push
aam
add
gs
adc
sbb
mov
ljmp
xor
jle
das
test
xchg
push
out
inc
xchg
inc
sub
sti
push
or
cwtl
jge
and
sbb
insl
ss
sti
inc
sbb
movsl
es
pushl
mov
mov
shll
mov
in
out
sub
jl
push
das
scas
dec
xchg
outsb
cli
mov
lea
lods
cmp
movsl
es
outsb
cltd
adc
testb
xchg
xchg
mov
pop
outsl
mov
adc
or
add
mov
or
movb
addr16
jl
jne
outsb
nop
bound
adc
cltd
lcall
loopne
ret
shl
cs
popa
lcall
mov
rcrb
arpl
adc
fwait
sub
movsb
fwait
stos
cmp
movsb
pop
fcomps
pusha
cmp
cmpsb
imul
shlb
and
xlat
int3
pop
push
sarb
ret
andl
sbb
pop
mov
push
adc
int3
and
cmp
rclb
ss
testb
insl
mov
stos
test
push
out
js
jb
push
cmp
fcomip
and
mov
inc
scas
xor
stos
jle
into
int
mov
fucomip
jne
decl
outsl
fcmovnu
fs
push
xchg
ljmp
addr16
xchg
xchg
orb
ja
sbbb
aad
mov
mov
pushf
mov
sub
xchg
adc
stc
or
push
leave
adc
gs
cld
outsl
fbstp
mov
mov
aas
lret
sbb
shrb
adcl
insb
or
mov
movsl
lea
rclb
ds
mov
lock
ljmp
std
sbb
out
xchg
mov
pop
inc
rcrl
mov
or
out
imul
ret
add
and
sbb
outsl
mov
xchg
dec
add
and
cmpsl
and
jne
movsl
dec
icebp
jg
ljmp
andb
ss
mov
and
mov
jl
cmpb
out
inc
addl
incl
pop
cmp
push
sub
xor
pop
jb
pop
add
aad
icebp
sbb
gs
mov
icebp
das
mov
sub
call
sub
ljmp
rolb
jl
inc
movsb
adc
outsl
add
or
mov
lret
add
adc
pop
sub
inc
fdivr
xchg
and
sbb
inc
mov
jge
inc
pop
dec
pop
or
loopne
xchg
xchg
push
stos
pop
call
cmp
jp
sbb
sub
roll
insl
mov
icebp
lea
stos
fistps
or
inc
and
mov
and
jo
jmp
inc
adc
mov
call
sub
and
ficomps
scas
mov
stc
negb
jb
sub
fwait
xchg
jb
jo
outsb
imul
mov
inc
pop
mov
xchg
jp
cmpsb
adc
add
stc
unpcklps
aas
mov
inc
mov
push
sub
shll
or
movsl
add
push
roll
inc
add
xor
cmpsb
or
add
scas
loope
cmp
sub
lahf
add
or
mov
xor
mov
jae
jnp
sbb
out
addr16
ds
and
xchg
or
mov
test
and
lahf
cmp
mov
mov
dec
pop
inc
inc
mov
xchg
adc
cli
clc
fists
xor
lods
shll
cmpsb
stos
mov
in
negl
inc
icebp
lahf
ljmp
pop
fldl
sbb
jge
push
add
lea
sti
idiv
decl
xchg
popa
xlat
push
aaa
lcall
cmp
icebp
cmpsl
add
push
movsl
pop
jecxz
jg
andb
ds
cli
push
adc
cmp
jbe
dec
mov
pop
aam
inc
jo
call
dec
testl
add
inc
jl
in
or
repz
push
lret
pop
or
fistpll
and
das
sbb
pop
xchg
push
outsl
jl
outsl
pusha
mov
dec
pusha
scas
xor
sti
mov
fists
fistpll
rcll
or
or
jmp
aas
sbb
and
and
mov
icebp
push
clc
scas
out
mov
imul
ret
add
fsubp
xchg
fsts
pop
out
mov
nop
adc
inc
roll
or
xchg
es
cli
adc
inc
arpl
or
pop
leave
xor
mov
inc
lds
mov
ja
loop
mov
cli
ret
jno
push
dec
xor
xchg
enter
icebp
fcomip
pop
and
mov
lret
and
fcoms
push
aad
mov
adc
sbb
popf
test
loope
cltd
mov
mov
stos
bound
test
cmp
and
fimull
or
popa
pushf
pusha
jge
pop
int3
dec
aas
insl
lock
lret
les
push
push
adc
jo
andb
cld
ja
das
mov
insl
xchg
js
xchg
mov
add
in
or
lahf
inc
mov
mov
insl
mov
nop
sbb
sbb
mov
call
shl
or
mov
int
call
loopne
lds
push
insb
dec
repz
popa
scas
cmp
mov
inc
fdiv
fwait
aas
mov
scas
popa
push
lds
sbb
cmpb
insl
add
arpl
adc
jge
orb
iret
imul
sbb
cs
mov
subb
pushf
and
outsb
mov
mov
idiv
pop
insb
cwtl
pop
or
mov
les
adc
adc
shrb
inc
in
aas
lods
loop
mov
adc
jmp
inc
fiaddl
call
sbbb
jns
dec
adc
mov
out
mov
xchg
pop
in
in
pop
rcll
cmpsb
cmc
bound
clc
scas
scas
xor
sti
push
sub
mov
jne
cltd
inc
out
jb
int
ja
or
sbb
adc
les
sbb
mov
adc
in
addb
jo
lods
sbb
clc
xor
out
sbb
in
mov
nop
sub
notb
push
pop
jmp
stc
jecxz
imul
xor
imul
lahf
sbb
addr16
into
or
mov
sub
scas
and
ljmp
popa
cmpsl
jg
mov
addb
bound
and
lods
fstpl
shll
fcompl
pop
or
pop
mov
pop
inc
dec
adc
xor
in
and
scas
aaa
jle
les
pop
pop
aad
jge
xchg
xlat
xor
sub
add
movsb
aaa
daa
insb
jle
popf
jg
loop
jno
xor
mov
cltd
pop
mov
or
mov
lret
fucomi
mul
sar
mov
outsb
adc
scas
ljmp
cld
ret
rcll
movsb
inc
mov
cmp
and
sub
or
shll
das
cld
test
and
push
enter
pop
adc
outsl
std
pop
mov
test
adc
pop
loop
mov
sub
adc
pop
xor
std
push
arpl
mov
xor
iret
pop
cmpsb
adc
pop
inc
fwait
sub
inc
lods
shll
fcomps
das
ret
sbb
popl
cwtl
loopne
push
pushf
push
shlb
les
push
inc
nop
and
mov
lods
sbb
je,pn
jne
xchg
adc
int
stos
add
mov
jne
push
cmpsl
mov
mov
jg
xchg
or
jge
xor
or
jecxz
and
mov
fnstsw
or
push
jge
push
movsl
fwait
lods
mov
adc
add
push
jp
pop
xchg
adc
stc
or
inc
pop
fdivp
sub
outsl
push
inc
mov
adc
or
fwait
dec
lods
xchg
dec
jnp
ds
cld
mov
out
jno
jmp
add
xchg
test
xchg
lea
add
lahf
sbb
fisttps
cmp
stos
jle
sub
mov
std
jns
scas
or
int
jae
mov
stos
sbb
mov
fiaddl
shll
and
pop
adc
jo
ss
xchg
mov
mov
cs
mov
sub
popa
lea
cmp
xchg
js
insb
cwtl
into
mov
or
ret
mov
mov
mov
fnstsw
sub
pop
lock
sub
push
adc
nop
pop
insb
cltd
pop
inc
aas
push
push
popf
jge
test
mov
bound
dec
mov
mov
mov
fwait
rcrb
and
push
or
and
out
adc
pushl
mov
jl
or
and
mov
bswap
xchg
push
ret
xor
ss
lret
mov
jg
or
cmp
jns
out
aam
in
rorl
sbb
lret
test
movsb
sub
mov
adc
add
fcomip
push
int3
mov
ljmp
fadds
inc
pusha
add
sahf
adc
test
das
cmpl
inc
ret
test
outsl
cld
in
idivb
rorb
and
div
cld
test
or
add
lods
cmp
dec
lds
addb
mov
in
movsb
sbb
test
pusha
fs
ljmp
inc
iret
int3
loopne
or
int
mov
dec
or
add
jmp
in
fwait
das
sbb
cwtl
orl
mov
js
adc
pop
ja
js
das
add
mov
add
out
insb
jno
or
cmp
loopne
lock
jbe
lds
cmp
dec
mov
cmp
mov
hlt
push
fwait
pop
sub
xchg
sbbb
outsl
inc
mov
lea
pop
popa
pop
popf
pop
mov
mov
jg
add
shl
lret
push
out
rol
dec
lock
or
add
stc
mov
fmull
sbb
lret
test
pushl
mov
push
mov
test
or
sbb
popa
adc
mov
sbb
test
sbb
cmp
lods
inc
pop
jge
leave
dec
incl
and
push
icebp
jne
mov
pop
lods
gs
jmp
loopne
inc
stos
insl
pushf
cmc
lock
sbb
mov
and
aad
mov
lods
sbb
push
inc
test
push
test
sub
mov
dec
and
xor
push
cmp
cmp
ds
xchg
mov
mov
cmpsb
cmp
test
loop
adc
rorl
sbb
mov
xchg
or
mov
orb
out
xor
pop
les
dec
inc
cmpsl
rorl
push
sbbb
adcl
and
sbb
fucomi
ds
je
popf
fidivs
mov
into
pop
dec
push
cli
xor
outsb
dec
dec
roll
inc
out
not
addr16
iret
outsb
jmp
cmp
jmp
in
mov
std
test
sahf
and
pop
and
outsb
ffreep
fs
pushl
xor
sub
sbb
fistpll
xchg
orl
icebp
pop
daa
mov
mov
mov
fidivrl
push
rol
sbb
lret
outsl
add
les
mov
aam
adc
or
js
xor
in
jbe
and
xor
or
ds
call
or
lcall
mov
cltd
xor
pusha
jns
jne
lds
add
stos
stos
mov
mov
fwait
rcll
shlb
push
fsubrl
jno
call
sbb
lret
subl
sbb
jl
outsl
pop
mov
adc
mov
mov
cmc
ljmp
and
out
mov
xchg
adc
cltd
xchg
or
jecxz
or
lock
pusha
ret
add
aam
into
push
cmp
dec
dec
insb
out
inc
mov
scas
jne
in
aad
and
mov
mov
fwait
pop
and
push
cmpsb
cmp
push
pop
or
in
call
mov
les
subb
je
repnz
pop
stos
loope
add
add
add
cld
ljmp
mul
jnp
rorl
adc
mov
cmp
ljmp
std
xor
push
dec
add
inc
in
or
js
inc
jecxz
dec
cld
ljmp
sub
adc
add
ljmp
xor
sarl
scas
cmp
adc
out
sbb
or
lahf
push
mov
push
push
cmpl
mov
fildll
and
inc
popf
adc
add
dec
xchg
mov
dec
out
dec
scas
cltd
xchg
or
fisubrs
inc
scas
mov
or
aam
call
mov
jg
dec
cltd
xor
fs
and
arpl
push
and
mov
inc
mov
or
mov
pop
add
lahf
or
hlt
adc
sub
lss
add
add
mov
sbb
lahf
jecxz
adc
inc
mov
jae
push
loopne
jg
int3
shlb
stos
ss
adc
mov
pop
mov
and
addr16
xor
push
rcll
and
sub
sbb
popf
jle
bound
sbb
mov
fcmove
out
scas
cmp
sahf
scas
aaa
add
push
out
or
or
inc
sbb
lret
pop
subb
inc
pause
enter
xor
jns
scas
ret
cmp
das
lea
mov
imul
sahf
shrl
adcl
jne
sub
js
push
mov
loope
adcb
ljmp
aam
ja
sbb
adc
dec
cmp
nop
push
push
or
fistl
inc
mov
or
fisttpll
lcall
hlt
rcll
pop
cmp
icebp
pop
mov
and
jb
pop
mov
xlat
mov
jmp
push
mov
sbb
dec
roll
pop
test
clc
je
bound
sbb
push
push
idiv
in
push
test
mov
mov
in
and
test
sub
ljmp
jmp
js
adc
mov
cld
dec
stos
clc
pop
cmp
mov
fiaddl
jmp
shll
xor
out
jecxz
stos
icebp
lret
aad
lock
mov
daa
pop
inc
jbe
sub
imul
xor
add
repz
xor
add
outsl
jp
mov
int3
mov
mov
das
add
lahf
daa
inc
repz
fs
mov
or
mov
xchg
add
jge
in
int3
not
pop
add
std
scas
out
jne
mov
sub
jg
das
xchg
mov
incw
fcoms
cmp
add
inc
call
bound
pop
popf
repz
and
shll
stc
lock
pushl
jo
inc
inc
xor
and
lahf
pushl
cmp
mov
ffree
xor
xor
push
push
int3
test
outsl
std
test
ss
nop
xor
inc
fwait
cmpb
inc
test
cli
sub
sbb
adc
dec
test
pop
call
addb
je
mov
inc
rol
inc
int3
outsl
testl
pop
mov
mov
clc
xchg
flds
and
dec
jg
out
inc
test
jl
les
cmp
pushl
inc
push
adc
daa
das
jmp
mov
mov
daa
test
loopne
addl
fwait
sub
xor
jecxz
jg
pop
stos
daa
xchg
enter
sub
push
adc
and
cld
lcall
xchg
out
ja
insb
scas
and
inc
ret
test
inc
loopne
ljmp
aaa
std
mov
jne
mov
call
loope
test
sbb
mov
ret
daa
sub
sahf
ja
or
mov
aaa
jo
add
aam
sub
jg
adc
jmp
mov
popa
push
xor
lock
push
mov
sbb
insl
adc
aad
dec
addr16
jge
cmpsb
push
mov
in
jmp
daa
jp
stc
fnstcw
loop
mov
push
cmp
imul
xchg
outsl
jg
mov
aad
adc
fs
push
movsb
out
das
insb
test
mov
repz
xor
aam
push
lcall
mov
push
xor
cwtl
pop
lods
mov
out
inc
mov
mov
pop
jp
add
mov
jmp
push
in
xor
mov
mov
dec
adc
xor
xor
add
adc
in
mov
iret
and
mov
in
jnp
ja
idivb
jmp
or
mov
fcomps
inc
out
and
add
mov
pushf
sub
or
push
jle
push
dec
out
xor
push
push
xor
fwait
add
es
sub
add
fisttpl
mov
adc
pushf
cmc
incl
jne
sbb
sub
shll
push
mov
push
negb
imul
push
sbb
adc
mov
stc
outsb
sbb
jo
dec
lahf
mov
filds
ret
push
or
pusha
loop
sub
mov
repnz
xchg
push
and
les
inc
pop
cs
pop
rcll
inc
sub
mov
addr16
gs
mov
mov
hlt
add
fucomp
xchg
scas
push
cmp
sub
dec
push
inc
faddl
mov
xchg
mov
pop
adc
pop
addr16
adc
pop
out
sbb
lock
mov
arpl
cmp
sbb
decb
mov
mov
imul
shlb
jle
aam
mov
cmp
pop
cs
or
mov
or
sbb
mov
ss
mov
inc
cli
mov
mov
mov
inc
sub
xor
les
add
xor
outsl
mov
lahf
xchg
ja
sub
cmpsl
test
clc
icebp
jmp
popa
jae
adc
cltd
data16
mov
mov
sub
pop
jo
loop
daa
arpl
pop
push
scas
jo
hlt
add
mov
jecxz
push
roll
push
pop
insl
cmp
xchg
cmp
push
aam
cmp
js
add
scas
adc
push
es
push
cmp
mov
in
pop
xchg
mov
sub
test
push
subl
push
adc
loop
js
push
stos
rsm
and
cld
in
push
rcrb
outsl
add
mov
mov
ret
setb
in
pop
push
xorb
adc
push
test
cltd
hlt
test
pop
out
adc
jg
outsl
jp
jbe
adc
daa
repnz
sub
xchg
outsl
les
rclb
daa
loope
aas
sub
inc
aas
xchg
push
sti
fistpl
push
lcall
clc
lea
push
mov
fistpl
pop
push
fwait
shll
fsincos
std
dec
ds
adc
pop
js
movsl
stos
cltd
and
in
dec
cmp
iret
inc
xchg
int3
cmp
xor
pusha
mov
xor
xlat
roll
add
pushf
sbb
mov
sub
daa
adc
test
or
pop
mov
and
js
xor
pop
stos
mov
adc
cmc
mov
xor
add
adc
adc
jmp
xchg
mov
pop
cmpsb
xor
in
jbe
adc
adcb
cmp
or
mov
xor
sbb
gs
sbb
pop
cmp
decl
test
cmp
mov
divb
repz
xchg
push
mov
bound
mov
call
pop
frstor
lock
into
lods
inc
sub
jge
add
jl
inc
shrb
add
dec
insl
dec
add
adc
mov
and
icebp
test
sub
add
dec
dec
mov
into
scas
divb
loopne
movsb
nop
dec
jns
stc
jg
mov
stos
cwtl
push
and
mov
cmp
ljmp
adc
orb
fisubl
adc
inc
into
stc
aam
mov
sbb
ret
pop
mov
xchg
pusha
mov
and
mov
cmpsb
pushl
or
xlat
push
inc
sub
adc
cmpsb
sbb
std
sub
mov
mov
sarl
popa
pop
sbb
js
push
dec
incl
les
cld
dec
inc
js
inc
fildl
cmp
adc
clc
mov
lock
cltd
fildll
rcr
cmpsb
divl
lds
inc
and
sti
xchg
cmp
jno
lds
cmp
lods
pop
aam
and
inc
or
negb
mov
sub
mov
adc
fs
incl
dec
adc
cmp
cmp
loope
mov
xchg
std
movsl
jg
pause
dec
mov
sbb
and
decl
enter
pop
xor
es
adc
loope
cmp
inc
jae
jmp
jb
add
ja
mov
outsb
shl
xchg
mov
mov
insb
push
cmp
mov
add
orb
pop
mov
repnz
add
push
sbb
mov
out
movhps
fs
dec
adc
jns
sbb
fcoml
fstps
mov
fsubp
mov
inc
movsb
mov
mov
cmp
pop
fdivs
out
in
or
or
or
test
cmp
sbb
js
sub
loopne
popa
sbb
push
pusha
xor
inc
notl
pop
sub
sahf
dec
inc
push
add
sbb
xlat
mov
push
jg
dec
outsb
insb
mov
ljmp
and
jg
stos
cmp
mov
fsts
mov
xor
fcmovne
mov
cmp
and
dec
gs
adc
movsl
fbstp
xchg
inc
inc
pop
inc
test
mov
push
btc
daa
cmp
inc
mov
cmp
arpl
frstor
pop
aam
ja
pop
int3
mov
not
mov
cli
fdivrl
pop
mov
incb
sarb
sub
and
adc
icebp
pop
adc
add
jle
jmp
stc
or
imul
bnd
add
mov
xlat
xor
movsl
dec
fiadds
mov
addl
fs
pop
inc
jle
repnz
jl
rcrb
mov
pop
or
and
and
popl
jmp
cld
cltd
push
cltd
jg
pop
xchg
add
push
scas
mov
inc
jmp
or
mov
test
pop
or
loope
cmpsb
mov
je
mov
inc
add
adc
std
dec
add
inc
xchg
and
or
sub
mov
stos
imul
je
dec
mov
outsl
mov
paddd
call
add
dec
jnp
or
int
call
mov
sbb
or
sbb
fstpl
dec
pop
pop
xchg
xor
cmp
aad
pop
cli
xor
cmp
inc
push
mov
jle
xchg
mov
mov
jg
mov
xor
mov
pop
loopne
test
xchg
adc
adc
jle
fiaddl
pusha
or
adc
fidivl
push
clc
rorb
jge
cmp
add
stos
xchg
add
gs
test
movsl
js
xor
inc
aaa
mov
fstl
jg
imul
xchg
stos
testb
jecxz
cmp
pop
xlat
fldl
push
jae
sti
pushf
inc
and
movsb
imulb
inc
in
push
dec
or
aaa
adc
add
push
pushf
gs
push
mov
ds
jmp
test
add
jle
scas
sarb
xor
mov
adc
cwtl
stos
loopne
adc
int
push
inc
mov
inc
leave
mov
insl
pop
pop
inc
and
jp
push
xchg
push
inc
cmp
pushf
dec
inc
inc
add
sub
cld
decl
jmp
testb
and
lds
iret
cwtl
push
movsl
out
adc
adc
mov
adc
and
outsb
mov
aaa
cs
stos
shr
scas
fmull
jns
movsl
mov
mov
push
pusha
push
ds
mov
scas
jle
mov
push
pop
clc
movsl
loope
cmp
fisttpl
stc
inc
jmp
jns
xchg
out
jecxz
add
and
xchg
xor
pop
cli
sti
jo
popa
dec
and
stc
imul
bound
das
jl
jbe
clc
testl
push
into
mov
jecxz
pop
fdivrp
js
dec
jb
pop
in
daa
sbb
sbb
push
outsl
mov
xor
imul
mov
mov
loopne
rorb
mov
xchg
movsb
dec
cmpsl
outsl
and
ljmp
xchg
daa
xchg
sbb
lods
hlt
fildll
adc
ret
ss
adc
pop
add
ficompl
fidivl
negl
cmp
test
dec
add
jae
dec
and
xchg
or
and
pop
stc
aas
out
push
incl
and
or
stos
jecxz
into
orb
fucom
mov
xchg
jp
sarl
dec
inc
and
movsb
pop
sbb
push
movsb
call
mov
xorb
cmp
cltd
clc
mov
mov
enter
out
jo
add
insl
xchg
dec
cmp
adc
test
stc
gs
ja
push
or
std
sub
sbb
test
int3
dec
adc
les
out
sub
inc
xchg
popa
sub
inc
xor
ljmp
xchg
mov
sbbb
les
mov
jne
mov
movsb
pop
add
pop
das
cld
inc
xor
enter
xchg
cli
and
sbb
pop
mov
pop
push
pop
dec
xor
sar
add
inc
out
lods
mov
add
and
pop
cmp
xchg
push
jmp
xchg
test
xchg
push
sub
repz
push
sbb
mov
subl
imul
adc
lods
imul
clc
outsl
je
cmp
rclb
inc
and
ljmp
jmp
mov
fmull
add
xlat
xor
aas
add
rcr
add
aas
xchg
push
pop
xchg
and
orb
or
mov
add
add
push
cld
mov
jbe
mov
xchg
in
test
inc
xchg
stos
pop
jl
and
movsb
mov
inc
or
clc
inc
icebp
xchg
mov
or
sbb
shlb
and
sub
mov
adc
pushl
popa
fdivrs
fwait
inc
pop
jo
sbbb
scas
mov
int
fcomps
dec
cmp
cmpsb
and
ds
ljmp
popa
cmp
lods
imul
decl
push
aad
rcrl
adc
cmp
clc
ret
nop
sub
mov
mov
push
push
mov
xor
lods
xor
push
mov
xchg
lret
shll
test
or
add
and
pop
cmpsl
loop
in
decl
push
inc
sub
inc
nop
faddp
fwait
pop
lret
jno
jl
outsb
lea
ljmp
das
and
repnz
dec
push
inc
mov
mov
fisttps
jle
lods
pop
pop
or
rcrb
repnz
dec
sbb
bound
mov
and
mov
daa
sub
fld
movsb
xorb
addl
mov
lahf
or
jg
subl
ljmp
push
std
jg
ljmp
and
in
mov
in
mov
test
and
popf
aam
sbb
or
std
clc
add
sbb
roll
imul
nop
jb
subl
int
inc
pop
fucomip
sbb
inc
bound
sub
loope
sub
repz
sti
call
lea
aad
sub
repnz
mov
push
cwtl
cmc
inc
xchg
sbb
orl
notb
add
pushf
fnstenv
cld
addr16
or
or
fldcw
negb
pusha
push
ljmp
sbb
std
lods
cmp
aas
stos
inc
fstl
inc
cmp
bound
out
cli
inc
stc
sub
inc
pop
push
dec
lds
xor
cmpb
insb
jl
xchg
lgdtl
enter
pop
popa
cld
testb
insl
xchg
out
shll
dec
rorb
pop
cmp
inc
cmp
nop
ss
outsl
cld
inc
int3
jb
fisttpll
shrl
push
xor
cmpsb
push
mov
inc
add
inc
jo
add
push
push
mov
rorb
sahf
sar
test
mov
arpl
push
sbb
and
daa
pop
inc
cmp
xor
aaa
rol
sub
mov
xchg
adc
lock
jl
inc
movsb
jecxz
mov
jp
or
and
mov
add
add
jnp
daa
and
pop
pop
push
test
adc
xchg
mov
cmc
scas
mov
adc
cmp
js
loope
adc
lcall
or
cmp
mov
inc
pop
pop
fwait
mov
xchg
or
inc
dec
das
icebp
incl
out
adc
andb
cwtl
ljmp
subl
sbb
mov
cmp
mov
add
sbb
pop
mov
popa
jnp
jae
ds
fildl
repz
inc
xchg
push
sub
dec
mul
push
scas
jo
push
sbb
or
fiaddl
jle
aam
jb
jb
dec
and
adc
icebp
push
bound
aas
leave
les
add
fistpl
add
push
loop
lods
adc
mov
insb
jmpw
pop
rcl
adcb
cld
pop
mov
sbb
aaa
fstpl
cli
jmp
sbb
pop
xor
bound
adc
cli
sub
mov
inc
dec
fmuls
repz
sub
jg
or
sti
lret
shrb
cmpl
mov
mov
idiv
mov
leave
fisttpll
and
ja
pop
jecxz
and
xor
push
jl
shl
pop
xlat
mov
das
xchg
add
adc
scas
cmpsb
pandn
int3
test
mov
pop
cmpsb
cmpsb
push
jb
movsl
fdivrp
sub
cmpsl
sub
out
lds
mov
sbb
rcrl
inc
lea
or
loopne
lret
pop
es
movsl
pop
cmpsb
push
push
jle
lock
mov
and
jo
xchg
jmp
adc
roll
fucomip
ja
dec
mov
std
xchg
jb
or
ss
pusha
add
ret
push
loope
lea
add
xor
mov
decl
xor
dec
aad
fistpll
test
push
mov
cmc
or
lods
mov
dec
clc
cmpsb
bound
mov
divb
inc
pop
mov
cld
sbb
or
lock
or
xlat
adc
inc
lds
mov
in
xchg
lea
adc
stos
mov
pop
cmpsb
mov
dec
popf
add
mov
pop
pop
pop
mov
lcall
sub
lods
ret
call
das
cmp
mov
dec
sub
ror
add
lcall
sti
sub
in
pop
filds
mov
adc
movsb
pushf
lahf
or
xor
loop
mov
push
call
xor
clc
fistpll
mov
cmp
scas
add
shlb
mov
push
dec
subl
jae
int
xor
sbb
cmpps
in
and
cli
icebp
popa
cmpsb
gs
mov
mov
rcll
jns
aaa
enter
jp
cmc
arpl
cmp
sub
imul
xchg
mov
pop
cmpsl
mov
rorl
pop
jo
das
andb
mov
scas
orl
jge
jle
aad
mov
push
aas
xlat
add
adc
stos
fistps
scas
sbb
je
cmc
mov
pusha
jge
call
popa
mov
mov
fsubrl
shll
pop
xchg
mov
hlt
add
test
xchg
in
fbld
xchg
dec
push
mov
jecxz
sub
mov
clc
cmpsl
aad
adc
sbb
sub
mov
add
cli
nop
inc
hlt
dec
add
pop
jae
jg
jmp
and
cmp
data16
cltd
jnp
cwtl
mov
mov
xlat
cmc
ss
push
and
lds
std
mov
nop
xchg
jo
sbb
movsl
leave
pop
push
rorb
push
or
test
pop
cmp
fadds
das
inc
jl
push
and
inc
call
stos
inc
and
and
addl
inc
and
jno
dec
outsl
cld
mov
xor
cmp
or
ja
notb
jle
add
mov
mov
mov
sub
stos
jg
fldl
jne
xchg
and
testb
ds
decl
in
pop
or
sub
xchg
sub
inc
orl
sub
es
lret
test
pushf
inc
push
or
sub
mov
in
mov
pop
clc
cmp
dec
orb
lcall
cwtl
icebp
xchg
addb
inc
fstps
push
data16
jmp
out
and
test
repz
adc
inc
jmp
sub
icebp
dec
lea
cld
xchg
into
mov
ret
sbb
add
shrl
jle
sbb
mov
inc
and
outsl
lock
mov
inc
jno
sbb
shll
xchg
push
stos
cmpsl
sbb
add
xor
in
nop
add
rcr
push
movsl
int3
and
rcrb
and
imul
cmp
mov
sub
adc
jno
xchg
dec
jnp
mov
test
ljmp
push
add
mov
pushf
shlb
adc
adc
mov
shlb
cli
inc
cs
push
jne
pop
stos
push
cmp
fwait
or
in
ss
xchg
cltd
in
scas
incl
jno
xchg
dec
or
mov
sub
add
cmp
push
jae
outsl
sbb
inc
sbb
pushf
jle
fdivs
shlb
out
in
mov
loop
hlt
decb
outsb
jl
fstl
dec
das
adc
cwtl
jmp
andl
mov
or
sub
mov
adc
or
popa
call
popa
inc
lds
clc
pop
sbbb
repz
jns
adc
aaa
push
aas
adc
adc
adc
andl
xor
or
jmp
ret
mov
sub
jmp
xchg
or
mov
clc
cmc
lcall
loopne
fldt
cld
or
mov
pusha
lret
cmc
xor
shll
mov
mov
aas
sub
ret
stc
loop
push
int
js
mov
ret
.byte
.byte
.byte
and
pop
stos
stos
xchg
add
in
xor
inc
xchg
and
push
push
lea
push
pushl
push
push
or
clc
push
push
call
ret
mov
divl
push
push
sbb
arpl
inc
sbb
sahf
add
mov
std
leave
and
lea
push
dec
in
add
mov
sub
clc
in
call
fstp
decl
andl
push
push
in
push
jbe
arpl
pop
cld
lea
push
das
push
call
and
clc
fcos
iret
xor
fiadds
fmuls
sbb
inc
fadd
inc
call
lds
lock
xor
sbb
jns
push
pop
mov
sub
mov
in
pop
call
xor
xchg
idiv
pop
in
popa
es
orl
push
test
xchg
fstp
mov
push
push
lcall
sub
add
std
inc
cmp
jne
push
call
sbb
incl
push
push
fmuls
call
pop
sub
call
out
or
push
pop
sbb
insb
insb
jno
test
xor
in
out
decl
xchg
push
pop
not
inc
adc
add
inc
neg
push
push
neg
push
jmp
inc
add
repnz
neg
sbb
pop
add
sbb
pushl
adc
testl
faddp
sbb
add
adc
leave
ret
inc
in
adc
neg
adc
add
or
pop
clc
sbb
inc
add
inc
lock
loop
add
adc
loope
cmp
push
hlt
subb
dec
inc
push
add
shrl
push
push
call
fimuls
lock
pop
nop
call
sti
xchg
xchg
inc
arpl
push
gs
dec
pop
roll
or
xor
cmp
fnstcw
sbb
xor
shr
pop
or
lods
xchg
test
xchg
inc
hlt
mov
push
add
out
je
cld
dec
mov
mov
fimull
lock
adc
and
loope
int3
add
popf
jae
jo
xor
push
push
test
cwtl
sub
pop
sub
add
add
push
mov
inc
in
icebp
inc
inc
xor
call
jbe
pop
les
call
popa
outsl
aas
push
fcoml
push
lods
cmpsb
dec
xor
cmp
push
mov
dec
xor
push
sbb
xchg
mov
cmp
inc
sbb
stc
loopne
push
jns
add
xchg
pop
cwtl
js
outsl
mov
sbb
xor
je
push
push
mov
js
in
mov
jle
mov
mov
push
push
data16
call
jg
and
jb
gs
call
mov
inc
or
adc
sbb
fiadds
and
fwait
push
add
data16
enter
dec
fcomps
test
jmp
in
mov
xchg
insl
mov
shrb
push
sub
cmpl
scas
imul
cs
mov
jge
sbb
insl
jb
stos
mov
dec
dec
outsb
cs
outsl
pop
in
push
loopne
loope
or
sub
push
xor
jae
push
lock
cmp
mov
or
not
sub
inc
sub
or
jmp
shlb
jnp
lock
or
or
push
jae
and
mov
add
shl
enter
out
and
jb
aaa
lds
aaa
fistpll
pause
pushf
cmpl
push
in
addr16
repz
addr16
pop
cli
push
nop
adc
and
push
mov
inc
dec
jns
hlt
jp
adc
loope
xchg
movsb
push
cmp
inc
not
mov
push
insb
dec
cmp
sbb
testl
pop
mov
inc
gs
or
push
popa
pop
sbb
add
dec
push
frstor
ret
in
in
cld
push
inc
push
push
fistps
call
pop
dec
push
sbbl
cld
push
adc
out
insl
loopne
xor
mov
jno
lahf
ss
pop
movsl
pop
popf
insl
inc
stos
adc
dec
inc
call
insl
jne
outsb
push
jne
icebp
and
mov
mov
std
jnp
jno
dec
fnsave
mov
jge
push
mov
sub
fstl
jp
call
xor
stos
xlat
std
push
dec
inc
iret
in
movsl
xor
js
inc
ret
sub
cwtl
or
out
jne
ja
push
ja
dec
pop
add
sbb
and
xor
outsl
jns
les
jp
imul
xor
popa
jge
call
jp
sbb
mov
jecxz
jmp
stc
cmc
pop
outsl
decl
dec
enter
inc
push
jp
push
outsb
mov
jmp
out
bound
adc
shrb
aam
arpl
ficomps
bound
inc
dec
adc
call
addr16
hlt
out
jmp
insl
in
dec
xor
sub
inc
xor
pop
add
adc
int
jae
and
xchg
stc
push
clc
rcr
push
mov
mov
int3
push
js
pop
push
rolb
or
shll
add
sub
sbb
jno
out
mov
push
jno
push
dec
imul
jb
ret
mov
sbb
jmp
cmpl
shrb
stos
xor
dec
xchg
ds
enter
jno
bound
ret
xlat
inc
popa
js
add
inc
xchg
lret
shl
push
push
outsl
mov
jg
xor
fwait
rolb
pop
call
inc
inc
pusha
or
sbb
xor
adc
loope
push
call
jg
and
lahf
dec
dec
push
data16
fnstenv
xor
aaa
insl
stos
mov
cmp
cli
add
hlt
or
xor
push
sbb
jbe
add
daa
inc
mov
adc
hlt
loopne
ljmp
fiadds
sti
adc
add
mov
and
enter
call
adc
mov
je
dec
jmp
stos
and
int3
or
repz
and
outsb
cmc
sbb
mov
js
mov
push
jmp
push
ss
es
ja
xchg
dec
push
add
call
xchg
cmp
push
jns
aad
jecxz
in
jns
or
shl
pop
xor
push
mov
loopne
add
arpl
inc
sub
mov
fldl
mov
aaa
sbb
mov
arpl
xchg
cmpsl
dec
lods
addl
test
sbb
or
sbb
insb
imul
sbb
push
inc
jmp
mov
mov
pop
je
lahf
inc
cmp
aam
and
dec
outsl
jbe
adc
and
add
dec
sub
push
mov
inc
scas
push
xlat
outsl
dec
in
jbe
xchg
arpl
inc
jbe
mov
or
xchg
jmp
xor
add
int3
push
and
bound
dec
outsl
ljmp
xor
insb
mov
int3
inc
mov
jbe
sub
loope
jo
push
sub
mov
lret
jns
xlat
imul
push
shlb
or
dec
imul
xor
into
call
inc
sub
inc
mov
adc
jmp
mov
push
push
loopne
lock
js
cmp
xchg
sbb
sbb
xchg
push
sub
out
add
ss
mov
ret
xor
sub
into
xchg
push
push
arpl
in
jb
fmuls
imul
cmp
call
xchg
inc
push
insl
imul
pop
jno
cmc
loope
js
scas
dec
add
mov
lock
ret
orps
xlat
jmp
jnp
es
dec
pop
sub
cmp
adc
outsl
out
mov
xchg
fdivl
dec
push
addr16
dec
inc
push
loopne
arpl
pusha
clc
push
xor
call
sub
fadds
mov
xor
cmp
cmp
xor
clc
ljmp
push
sti
iret
js
popa
push
out
mov
fmull
xchg
sbb
push
insl
dec
jae
and
xor
pop
movsl
push
mov
stos
lods
jbe
mov
xor
insb
loope
and
add
inc
jns
gs
aaa
nop
clc
call
adc
rorb
loopne
inc
lock
pushl
jo
add
cmc
jae
sub
mov
sarb
add
mov
push
shll
fdivrl
push
add
test
jl
pop
shrl
xor
push
pop
jne
nop
jle
mov
call
adc
push
enter
or
mulb
ja
jno
std
addr16
bound
xor
ljmp
mov
mov
add
lcall
out
and
push
mov
push
inc
add
loopne
jo
push
pop
jnp
rolb
hlt
inc
push
inc
bound
add
mov
lcall
lods
mov
insl
dec
inc
out
push
jae
inc
outsb
lods
mov
dec
insb
dec
xor
cs
inc
sub
movsl
cmp
xchg
push
push
insl
jne
push
ljmp
inc
sarl
std
loope
inc
jae
outsl
xor
ja
movsl
or
popa
sbb
movsb
aam
inc
pop
sub
clc
into
inc
inc
sbb
fwait
add
push
std
and
neg
pop
sub
push
movsl
stc
inc
sbb
stos
xor
test
mov
rdtsc
pop
sbbb
xor
bound
arpl
arpl
rolb
inc
xchg
adc
test
pop
fcoms
xlat
stos
or
add
lods
xorb
in
outsb
add
ret
mov
mul
pop
push
xchg
xor
dec
out
push
push
hlt
in
test
dec
inc
dec
sub
pop
xor
cmc
inc
outsb
push
lock
cmp
or
jmp
adc
rolb
push
dec
add
lahf
jge
loopne
or
add
inc
pop
sbb
inc
xor
jmp
add
inc
mov
adc
pop
bound
leave
mov
lahf
fcoms
and
lds
inc
push
jno
sar
js
ja
call
sbb
sbb
jne
into
jns
popa
ret
add
xor
cmpsb
test
bound
or
pop
outsl
outsb
call
shr
das
sub
les
ja
pop
push
sbb
and
imull
cmpsl
cs
jbe
gs
push
cmp
push
push
aas
jp
jmp
push
arpl
lahf
mov
pop
jbe
inc
arpl
or
loop
enter
push
xor
insl
mov
mov
insb
dec
push
into
cmp
add
push
mov
cld
pop
sbb
mov
sbb
insl
int3
inc
mov
mov
ret
je
push
mov
jns
cs
push
push
lods
out
in
pop
pop
ss
dec
fistpll
int3
lds
stos
bound
dec
xchg
adc
addr16
lahf
icebp
push
adc
cld
je
push
jecxz
loop
push
repz
fldl
sahf
xor
outsb
pop
std
dec
adc
add
fnstenv
sbb
not
sub
xor
int3
mov
dec
aas
movsb
inc
gs
mov
xchg
bound
jb
sub
mov
xor
inc
adc
sub
and
pop
adc
inc
push
inc
jmp
pushf
sub
in
cmp
add
insl
mov
and
inc
adc
test
adc
movsl
popa
ljmp
mov
pop
push
jb
jecxz
xor
mov
aam
lods
js
fadd
xchg
aaa
dec
and
xor
pop
and
icebp
sub
ret
sbb
mov
inc
js
mov
xor
out
imul
inc
dec
cli
pop
je
jns
add
pop
pop
inc
push
add
push
pop
add
das
daa
sarb
xor
push
inc
insb
push
dec
pop
xchg
mov
sub
loopne
rolb
mov
pop
pushf
pop
jp
push
stos
and
cmp
xchg
adc
pop
out
hlt
pop
sub
xor
testl
imul
pop
outsl
pop
dec
inc
dec
inc
jge
push
dec
xchg
outsl
je
sbb
or
dec
lcall
add
lock
or
cmp
out
pop
sbb
js
lcall
pop
pop
sbb
inc
push
push
mov
sbb
ss
scas
inc
xor
addr16
test
lds
jns
xorb
or
inc
lods
jnp
cwtl
push
mov
or
jae
jbe
sub
divb
dec
dec
sub
icebp
js
aam
add
sbb
jle
dec
movsl
or
lds
imulb
jne
inc
or
cli
lret
cs
mov
push
push
lcall
test
cmp
in
jo
xlat
xor
and
std
fistpll
inc
add
dec
xor
lret
iret
ss
pusha
lds
xor
and
push
xchg
sub
dec
test
pop
hlt
repnz
insb
jno
push
xor
push
pop
jo
inc
push
cmp
mov
stos
aam
jae
jo
enter
mov
int3
and
add
xor
imul
into
dec
gs
cmp
inc
neg
push
jecxz
add
jnp
hlt
je
lds
sbb
mov
dec
js
mov
push
into
cmp
inc
leave
push
adc
clc
inc
arpl
dec
pushf
fisubrs
jmp
push
xor
in
mov
enter
sub
cmp
and
dec
mov
jbe
stc
sub
pop
jmp
push
inc
ljmp
mov
lret
inc
jmp
test
sbb
inc
add
arpl
sbb
js
xorb
lret
dec
out
push
dec
sub
pop
dec
inc
cmpl
mov
clc
call
mov
add
dec
push
add
push
std
notb
pop
rcl
pop
xchg
enter
arpl
lret
inc
fucom
mov
sub
pop
inc
pushl
add
sbb
adc
ret
push
jo
jg
daa
jge
inc
loop
shll
add
call
mov
dec
jno
cs
or
lcall
inc
jne
call
rol
pop
or
bound
pop
mov
aam
push
adc
dec
push
movsl
add
add
cwtl
ss
xor
mov
push
mov
js
sbb
fsub
and
cwtl
add
test
cmp
xor
mov
mov
je
push
out
jno
jae
pmuludq
jp
jb
dec
inc
aaa
adc
in
ret
test
sub
fidivl
scas
outsb
arpl
cmp
pop
cmp
inc
movsl
js
nop
clc
mov
push
dec
jb
push
pop
push
mov
outsb
es
rol
add
test
sbb
adc
inc
mov
cmp
or
dec
or
pop
sub
js
repz
out
mov
jo
jae
shll
jmp
dec
sbb
insl
loopne
arpl
mov
in
gs
pop
ret
push
sbb
push
inc
call
pusha
xor
push
sahf
mov
dec
aaa
addr16
daa
rorb
movsb
int3
mov
call
push
xchg
push
and
stos
jecxz
inc
int
lahf
cltd
mov
aas
xor
jae
inc
dec
dec
sbb
xchg
mov
je
xor
mov
call
inc
inc
adcl
bound
inc
mov
addr16
insl
push
xchg
adc
lds
cmp
xor
call
mov
in
xor
pop
int3
cmp
push
xor
addps
xchg
and
aaa
nop
dec
loopne
or
jbe
pop
pushf
add
js
cmpsl
mov
xor
or
dec
aaa
xchg
rcrl
sbb
sub
xor
pop
lea
push
test
imul
cmpsb
stos
and
push
sbb
cwtl
jl
imul
and
add
mov
aas
icebp
jmp
popa
jle
js
cli
jae
or
cli
cmp
or
push
inc
arpl
fsubrl
mov
inc
xor
xor
push
aaa
jns
fcoms
push
xor
int3
lds
mov
push
jbe
in
sti
adc
push
orl
aad
rcll
sub
frstor
sarl
clts
jmp
dec
sbb
ljmp
icebp
add
aad
divl
subl
movsl
out
loopne
push
inc
inc
pop
jge
jne
outsb
ss
addr16
pop
jmp
mov
rcll
push
xorl
pop
addr16
js
lahf
loop
mov
mov
insl
inc
push
xor
imul
pop
popa
jo
xor
inc
dec
cmp
iret
lock
push
ss
or
popa
dec
je
movsb
sti
jl
inc
pushf
pusha
enter
inc
inc
stos
or
cmp
out
nop
dec
dec
shl
cltd
push
pop
cs
push
jnp
sbb
push
ja
push
pop
cmpsl
sbb
ss
inc
sub
pop
dec
lds
ss
cmc
pop
cmp
push
mov
push
dec
inc
leave
and
jl
inc
shl
movsb
or
push
jae
jmp
cld
repz
nop
push
fadds
push
or
inc
imul
bound
call
push
out
mov
js
jnp
jno
lea
pop
aaa
rcl
or
frstor
dec
xor
push
or
sub
dec
jge
lds
loope
sbb
inc
jmp
sub
xchg
shll
in
push
lret
cmp
add
inc
loopne
les
imul
jb
jmp
popa
pop
xor
repnz
outsl
inc
cwtl
and
xor
dec
add
push
push
adcb
push
jo
push
pushf
cmc
sbb
movl
mov
sub
sbb
pop
jmp
xchg
js
adc
mov
stos
xchg
jbe
ret
mov
push
adc
dec
data16
pop
mov
test
ljmp
cmpsb
mov
pop
or
popa
fists
inc
ret
or
mov
xorl
jg
or
sub
adcb
pop
push
jmp
daa
pusha
mov
dec
shll
fimuls
arpl
cmp
sbb
or
add
loopne
js
or
js
arpl
pop
push
test
pop
call
add
paddusw
in
js
clc
movsb
dec
aaa
mov
into
ja
mov
xor
movsl
fsubs
add
jecxz
push
in
xchg
cmc
push
pushf
or
push
loop
lods
add
pop
sahf
mov
rclb
es
adc
and
pop
pusha
adc
lds
inc
xor
and
insb
push
or
enter
cwtl
lock
add
out
mov
sub
pusha
ljmp
divb
mov
adc
test
fs
dec
enter
push
popf
roll
jns
mov
pop
inc
divl
je
push
push
das
jg
xchg
leave
loopne
mov
pushf
and
inc
andb
pop
cmp
std
mov
scas
jmp
nop
addl
ja
xor
xor
jbe
pop
adcl
stos
js
push
pop
js
xor
sbb
js
pushf
sub
inc
and
push
dec
inc
ljmp
cmp
rcr
inc
test
inc
inc
je
xor
jnp
mov
pop
mov
pop
into
mov
shrb
stc
jecxz
pushf
in
inc
sbb
popa
hlt
test
data16
jmp
mov
mov
inc
sbb
cli
pop
xor
hlt
pop
xor
jmp
mov
mov
jae
push
sti
sbb
jae
pop
inc
mov
cmp
xor
ljmp
mov
bound
aad
mov
addr16
pushf
inc
js
mov
push
xchg
add
fs
or
push
pop
aaa
add
jg
mov
and
xchg
dec
adc
pushl
outsb
jo
movl
inc
mov
lods
icebp
ss
lahf
fdivrl
push
cmp
dec
not
popl
loopne
push
cmp
aad
ret
xor
mov
push
inc
lea
sub
std
testb
nop
push
bound
lahf
call
movsb
mov
xor
sub
ljmp
add
mov
sbb
pusha
mov
fdiv
aas
mov
ljmp
sbb
or
push
stos
ja
bound
in
adc
call
add
mov
xchg
jecxz
outsb
fsubl
push
stos
push
test
data16
jns
cwtl
mov
stos
scas
pop
xor
jo
or
call
daa
mov
xor
or
roll
fidivs
bound
dec
addr16
test
aaa
cmp
jle
inc
addb
jge
inc
jmp
cwtl
jno
clc
jo
addr16
inc
cmp
xor
pop
dec
imul
fstpl
and
call
add
inc
xor
dec
fucompp
lcall
mov
dec
shrb
lock
jecxz,pn
js
add
dec
neg
fdiv
jmp
lods
push
mov
pop
push
jns
rcll
xor
js
push
jno
or
rcrb
pop
sbb
adc
and
loopne
cld
jle
popa
ret
inc
gs
outsb
xor
popl
add
mov
push
ja
sbbb
xor
and
adc
sub
gs
pusha
dec
fisttps
je
inc
lret
adc
test
ds
jmp
inc
inc
add
fldln2
push
ja
and
sbb
inc
imul
filds
jne
movsl
fists
jle
add
icebp
hlt
in
pop
clc
pop
mov
lret
dec
dec
add
inc
sbb
fmuls
jmp
xchg
xchg
dec
lods
add
inc
popl
ret
sub
sub
inc
and
sub
mov
outsl
aam
add
call
jbe
jmp
repz
jle
rorl
xchg
xchg
and
mov
sub
dec
dec
call
xor
lret
pop
addr16
or
pop
jo
adc
add
into
mov
sbbb
mov
add
or
test
cmp
je
cmpsl
lock
movsl
addl
xlat
inc
adc
mov
in
imul
mov
or
lea
js
push
pop
pop
mov
cmp
jae
add
subl
adc
js
cmp
ret
movl
push
mov
in
cmp
jnp
aad
adc
inc
xchg
xchg
movb
adcb
shlb
outsl
jne
imul
mov
cli
push
fisttpl
repz
push
fiadds
fildl
mov
lock
sub
das
jno
mov
cmc
sub
xchg
mov
pop
add
iret
loopne
cmc
clc
push
insl
jns
jb
pop
add
push
cmp
sub
insl
ljmp
pusha
dec
sbb
push
xchg
adc
les
imul
mov
mov
adc
aam
std
dec
dec
clc
mov
sbb
and
aam
fdivrs
into
adc
notl
add
out
cmpsl
cmovnp
mov
or
jns
fimuls
cmp
inc
dec
adcl
sbb
test
shr
out
mov
cmc
pop
popf
pop
sub
pusha
adc
ljmp
xlat
cs
lahf
xlat
inc
jno
jae
jae
push
aaa
add
dec
push
addb
clc
inc
inc
inc
push
dec
loop
das
xor
mov
hlt
dec
push
gs
insb
dec
dec
push
in
test
lea
ljmp
negl
mov
sbb
sub
xchg
pop
enter
add
sbb
mov
mov
fiadds
pop
phsubw
aaa
nop
dec
pop
add
cld
stos
loope
xchg
mov
mov
gs
jp
aam
pop
sbb
popa
push
loopne
adc
inc
ds
das
xor
push
cmp
sub
push
out
cmp
xchg
jno
ret
mov
push
pop
test
mov
cmp
inc
adc
mov
sahf
rolb
sbb
sub
push
xor
push
push
xchg
cltd
popl
ret
dec
fs
fabs
pop
push
pop
sahf
push
scas
dec
push
xor
adc
jecxz
add
hlt
pop
sti
xlat
sub
jmp
jp
icebp
andb
push
insb
push
inc
adc
and
setl
add
jo
call
jl
cltd
jle
push
outsb
adc
ficomps
pop
sbb
jge
pop
ljmp
xor
movsl
adcl
pushf
pushf
sub
outsl
add
push
pop
jl
mov
fildll
out
jecxz
cld
mov
fldcw
repnz
out
jmp
sbb
aaa
mov
add
sub
sbb
adc
mov
mov
dec
mov
bound
sahf
les
stos
push
popa
pop
aaa
inc
aas
xchg
mov
dec
xor
sub
mov
fisttpll
pop
scas
pop
xchg
js
push
aaa
pop
mov
nop
repnz
inc
mov
cmc
xchg
call
fs
dec
sub
jmp
stos
outsb
incl
cli
adc
mov
adc
mov
pushf
movsl
fstl
rclb
push
inc
inc
push
outsb
cld
in
jno
cmp
pop
add
sbb
add
dec
push
inc
roll
mov
pop
jb
std
sbb
push
jge
sti
dec
and
ljmp
jmp
fidivl
push
popa
xor
jne
push
js
je
push
mov
addr16
cld
sub
dec
push
or
dec
cwtl
leave
xchg
and
shr
adc
and
jns
add
insb
pop
aas
push
add
adc
jmp
and
adc
and
and
test
push
imul
and
fldt
add
adc
or
push
and
add
outsl
lods
mov
xor
adc
and
and
lcall
add
jae
inc
imul
jbe
jbe
jb
push
jb
fucomp
sub
inc
push
inc
and
cmp
add
sub
test
mov
invd
cmp
add
inc
mov
test
mov
inc
je
mov
pop
fisttpl
sbb
lods
xor
mov
inc
sub
cmp
lods
imul
xor
inc
add
fdivr
mov
pop
add
ss
arpl
je
insb
push
imul
dec
push
test
mov
or
push
push
outsl
inc
je
popa
dec
insb
je
js
inc
jbe
mov
or
add
and
ljmp
mov
xchg
data16
js
jne
addr16
imul
add
inc
inc
pop
inc
adc
or
outsl
mov
leave
add
je
addr16
insb
insb
outsl
arpl
bound
aaa
inc
add
adc
out
fsubl
inc
je
sub
scas
jne
inc
fs
or
loopne
xor
adc
or
jp
rcrb
dec
xor
mov
insl
int
ds
inc
dec
and
mov
negl
jbe
xor
add
and
sub
test
loopne
xor
mov
pop
or
adc
push
xchg
lods
mov
sub
out
sub
xor
outsb
subl
imul
inc
adcl
test
out
add
jbe
mov
das
fisttps
imul
xor
cs
add
daa
dec
add
xor
fisubrl
xchg
add
mov
inc
and
pop
in
mov
cmp
arpl
jb
popa
imul
push
stos
in
ret
pop
imul
int3
cmp
add
aaa
mov
pop
jae
sbb
dec
sub
adc
fwait
popa
jae
add
inc
mov
sbb
push
imul
xor
clc
decl
push
inc
dec
inc
push
push
inc
inc
inc
inc
inc
xor
ja
inc
add
add
dec
push
add
add
jg
push
or
inc
jae
pop
pop
int3
sbb
and
mov
xor
pop
mov
mov
ja
idivl
inc
mov
mov
pop
mov
push
dec
mov
mov
mov
cmp
add
xor
enter
pop
ja
mov
mov
mov
bound
xchg
rdtsc
popa
mov
out
push
inc
cmpsb
clc
add
mov
sti
lret
mov
cld
mov
mov
out
jb
mov
pop
incl
mov
jae
mov
negb
mov
push
add
cmp
idiv
mov
or
sub
mov
push
out
icebp
int3
mov
call
lahf
lret
cwtl
mov
es
mov
mov
mov
and
adc
dec
iret
pop
aam
dec
inc
add
mov
leave
cmp
fisttps
mov
adc
jge
cmpb
test
add
mov
into
mov
ret
mov
ror
push
cmp
cs
adc
imul
push
inc
add
lods
jle
out
ja
sarb
in
xchg
or
dec
add
fbstp
mov
into
enter
add
mov
or
add
mov
cmp
mov
xor
push
inc
pushl
pop
aaa
les
imul
ret
dec
ret
call
sbb
inc
lahf
sbbb
adc
bound
mov
mov
stos
imul
dec
adc
dec
bound
jg
pop
es
hlt
fsubrl
jecxz
pop
nop
icebp
das
mov
xor
sbb
test
scas
leave
mov
mov
mov
mov
cmp
in
mov
test
ss
mov
cmp
arpl
outsl
sbb
mov
mov
in
cld
daa
dec
sbb
adc
and
mov
ds
fmull
add
imul
push
inc
mov
fdivr
mov
inc
mov
inc
pop
xchg
in
je
adc
stc
lea
lock
cld
aaa
addb
jne
add
iret
sub
jecxz
fidivrs
xor
dec
cmp
jl
lret
cmp
or
idiv
das
enter
shll
lea
lock
jecxz
sub
repz
lods
icebp
into
xor
repz
stos
dec
sub
and
iret
or
scas
insl
jg
test
sub
or
enter
push
mov
mov
lea
fbstp
and
pop
mov
testb
and
decl
sbb
clc
ret
add
fsubs
lcall
pop
dec
ret
mov
mov
mov
xchg
mov
xchg
fs
cmpsl
loop
push
daa
scas
adcb
test
adc
shl
sti
mov
xchg
stos
ljmp
lods
jbe
in
pusha
pop
or
arpl
cwtl
sbb
and
popa
or
pop
lds
inc
ss
add
data16
mov
sarb
inc
push
add
das
mov
cld
sbb
fldenv
sub
bound
mov
push
add
push
insb
jb
cmpsb
mov
pop
arpl
sbbb
int
push
and
in
add
or
mov
jae
xor
int
push
frstor
fstl
mov
or
jno
inc
sbb
sub
pop
mov
test
or
inc
mov
mov
mov
sbb
sbb
outsl
xor
dec
cs
xor
lcall
cmpsb
inc
push
push
mov
mov
sub
ret
add
in
mov
icebp
clc
mov
bound
js
decl
sbb
inc
xor
push
les
sub
xchg
in
pop
outsb
mov
sub
daa
push
xchg
push
out
mov
div
push
roll
inc
out
mov
leave
xor
dec
lcall
in
mov
xor
fsubr
sbb
out
aam
xor
xchg
shll
outsl
aaa
or
je
fldt
push
cmova
jnp
sbb
cmp
scas
ficomps
jg
incl
mov
nop
xlat
clc
sub
mov
sub
andb
es
in
stc
pop
clc
or
addb
cltd
call
mov
mov
dec
test
mov
mov
add
inc
dec
pushf
and
out
mov
es
jge
fists
add
dec
push
push
xchg
xchg
bound
in
pop
inc
push
adc
lret
loope
cwtl
enter
rcrl
repnz
cmp
add
fnstcw
orb
lods
mov
aaa
jb
dec
inc
push
clc
hlt
pusha
jo
jecxz
or
jl
sub
addb
lret
inc
lret
xor
mov
jmp
mov
jecxz
leave
jae
mov
icebp
adc
jle
adc
push
jb
out
mov
pop
mov
cli
xor
jle
insb
cmp
pop
mov
fwait
and
cltd
add
idiv
notb
in
jmp
aam
jl
out
out
je
pop
pop
sbb
shrb
mov
inc
insb
dec
and
shrb
pop
fcom
inc
cmpsl
gs
aam
test
jae
das
adc
aam
xlat
adc
xchg
int
es
mov
add
pusha
and
rcrl
cwtl
cwtl
add
xor
sbb
sbb
jbe
adc
cmp
and
pusha
inc
jle
pop
pop
ficomps
nop
aad
pop
pop
cmp
jmp
inc
lds
xchg
dec
ja
rcl
push
cmpl
or
insb
lea
lock
cmp
sub
dec
in
add
and
orl
xor
mov
mov
test
pop
out
cwtl
inc
add
std
orb
lods
jle
or
mov
or
fcmove
fists
add
or
imul
mov
sub
add
shl
pop
mov
and
mov
popf
jne
test
add
les
fcomip
pop
xlat
mov
and
adc
es
dec
xor
sub
cmp
dec
mov
in
xchg
clc
imul
mov
mov
in
les
repz
sbb
push
imul
lods
movsl
jne
fnstsw
add
xor
push
mov
clc
inc
jmp
test
xchg
movsl
xchg
adc
cli
in
leave
test
idiv
pop
pop
or
stos
rcll
cmpsb
push
sub
cmc
inc
jmp
mov
xor
cmpsl
cld
gs
cs
or
das
xabort
mov
sti
mov
mov
and
lock
and
das
adc
loop,pt
pop
leave
and
xchg
mov
jno
push
add
cmp
adc
jnp
out
inc
incl
inc
cltd
add
pusha
or
jnp
stos
jne
sub
jg
jg
mov
enter
sub
push
inc
jecxz
xchg
pop
jmp
pop
clc
cmc
sub
jle
addb
lds
rcl
fbstp
fisubs
test
add
clc
in
or
xor
xor
sub
in
pop
sub
stc
in
push
out
add
push
cmp
repz
arpl
inc
dec
dec
mov
ret
test
or
loope
jl
jle
xor
cmp
add
jmp
adc
idivl
js
cmp
pop
imul
mov
mov
int
and
mov
lods
mov
adc
adc
stc
nop
hlt
sti
mov
loope
ljmp
js
repnz
pop
rcl
std
pop
insl
mov
subl
notb
shlb
out
dec
push
cmp
mov
incl
mov
mov
sbb
sbb
fdivrp
adc
mov
jl
flds
cmp
loop
push
push
add
mov
mov
pop
cmpl
fsubrl
mov
scas
cmp
sub
adc
and
std
pop
mov
shrl
and
mull
inc
sbb
mov
hlt
mov
push
pusha
inc
jbe
aad
jno
add
mov
mov
push
dec
sahf
loopne
adc
xchg
js
stc
or
jb
loopne
movsb
xchg
cmp
ret
jmp
push
jl
addl
insb
pop
adc
movsl
mov
adc
mov
dec
xchg
fdivrs
mov
jg
push
inc
fwait
sbb
push
test
sub
xor
or
cli
adc
jae
or
insl
add
pop
add
lcall
or
and
mov
sbb
sarb
inc
push
sub
ret
and
rclb
inc
decl
mov
lock
jle
mov
pusha
stos
lock
shrl
test
xchg
sbb
push
aaa
popa
cmp
fnstenv
les
mov
lds
lods
in
push
cvtdq2ps
pusha
jmp
or
cmp
mov
incb
xor
add
push
sub
inc
stos
inc
arpl
fnsave
aad
inc
ret
data16
mov
bound
inc
sub
pushl
ret
rolb
push
ret
inc
ret
enter
cmc
decl
or
movsb
roll
adc
mov
ljmp
jo
dec
lcall
inc
loope
std
push
in
fldl
std
mov
jbe
push
jo
movsl
mov
cmpsb
mov
mov
loope
jmp
mov
stos
xchg
cmc
push
sbb
ljmp
nop
and
cld
das
mov
xor
add
clc
ds
cmp
into
sar
inc
popf
cwtl
and
pop
inc
mov
incb
adc
fists
fcompl
loope
sub
inc
and
mov
pop
sub
mull
xchg
jae
push
dec
das
fnstsw
loop
push
in
jno
jne
cmp
lea
cmp
stc
stos
lock
inc
and
jp
clc
incl
ljmp
into
xchg
add
loope
decb
xchg
inc
jl
insb
loop
mov
dec
subl
js
movsb
ss
sub
xor
or
je
add
loop
sbb
cmc
dec
out
repz
mov
sbb
lcall
pop
push
pop
mov
movsb
sbb
jecxz
adc
adc
rcl
cmpsl
ret
xchg
repz
test
les
nop
xchg
xchg
das
outsl
push
pop
pushf
ja
rcrl
add
sbb
outsl
mov
jae
mov
ljmp
xchg
fsubl
jg
add
adc
jo
cmp
in
stos
imul
jg
sbb
mov
push
dec
xchg
pop
sbb
dec
sub
cld
rolb
insb
xchg
xor
inc
test
stos
cmpsb
or
shll
lods
stc
mov
add
test
mov
pop
add
out
inc
mov
cld
aam
adc
cmpsl
fcomip
mov
in
add
cmpsb
test
ss
std
or
outsb
loop
cwtl
pop
sti
add
mov
jecxz
pop
pop
cmp
lea
mov
dec
jecxz
ficomps
pop
cmp
out
add
inc
sbb
mov
clc
out
pop
in
push
in
mov
adc
ss
adc
mov
push
push
push
or
out
and
jg
push
outsb
adc
adc
push
mov
jl
out
and
fldt
outsb
cmp
cltd
mov
outsl
pushl
and
lods
pop
push
adc
xorb
orl
das
in
movsb
xchg
jne
cmpsl
adc
lea
movsl
ljmp
mov
mov
insl
jge
adc
cmp
sarl
in
cli
ljmp
jbe
inc
xlat
or
sbb
cltd
pop
pop
push
ret
fwait
lahf
jg
fcomps
jb
add
jl
in
adc
addr16
orl
jmp
sub
mov
or
pop
icebp
lahf
sbb
hlt
out
rcrb
lret
sbbb
sbb
sbb
icebp
mov
sbb
decl
fbld
aad
sub
outsl
orb
in
inc
les
pop
js
call
les
sbb
std
lds
cmpsl
in
jg
call
adc
inc
test
lds
cmp
insb
addb
mov
pusha
pop
add
dec
adc
pop
call
jns
dec
roll
push
sub
lods
je
or
dec
or
rcll
adc
dec
jge
mov
jge
pop
dec
mov
adc
lods
xor
and
sti
fistps
loope
loopne
mov
pop
shlb
outsl
insb
inc
adc
das
lock
cmpsl
pop
xor
popf
cmp
xlat
lahf
fidivrs
lds
mov
call
jnp
insb
fcomip
xchg
stos
xchg
pop
sub
mov
xor
clc
or
or
mov
or
push
mov
test
clc
sbb
mov
push
fsub
push
call
rorb
pop
test
int3
pushaw
cld
cs
aaa
pop
subl
sub
cmp
addr16
mov
faddl
pop
add
outsb
and
pushl
mov
data16
call
out
add
popa
or
aas
sub
ret
push
or
imul
inc
pusha
xchg
jo
je
adc
push
fstpl
adc
adc
jne
pop
outsb
add
xor
sbb
sbb
push
xor
lret
cmc
push
scas
xor
sahf
jne
sub
fistpll
into
lea
lods
add
jo
lret
dec
stos
xchg
inc
and
mov
cmpsb
pop
add
jo
xchg
outsb
dec
pop
stos
sub
fdivrl
addl
add
push
mov
popa
adc
push
je
jo
loopne
bound
shlb
pushf
es
pushl
adc
jns
xchg
dec
inc
xchg
inc
imull
sub
out
push
cmp
lock
cld
mov
jo
insl
outsb
pop
mov
fisubs
cli
mov
fsts
sub
and
xrelease
xchg
lods
jo
stos
inc
xchg
pop
loopne
adc
xor
mov
aas
xor
push
dec
xor
cld
cld
call
decl
jne
pop
sbb
les
inc
gs
aam
mov
push
jae
adc
or
push
orb
mov
xchg
ja
es
adc
add
leave
aas
sahf
lods
mov
imul
lret
cmpsb
adc
scas
sbb
adc
mov
lahf
cli
cmpl
lds
dec
cld
pushl
and
cld
bound
mov
or
cli
add
cli
xchg
inc
loop
cmp
lret
add
add
xor
aaa
mov
sar
loopne
cmp
mov
lods
push
cli
push
decl
and
les
jmp
mov
je
push
dec
mov
lock
lcall
ljmp
xchg
and
cmp
push
fs
jb
dec
pop
and
mov
orb
shll
sbb
ljmp
pop
divl
aam
mov
rcrb
aad
rclb
push
xchg
xor
lds
fildll
xchg
mov
dec
xchg
lods
push
and
or
outsl
sub
mov
movsb
test
pop
jne
stc
add
cs
mov
pushf
test
xchg
ret
jbe
mov
adc
jecxz
cs
jbe
inc
cmp
xchg
outsl
cld
fldl
call
mov
push
jmp
xchg
mov
lock
stc
sbb
inc
iret
mov
or
xchg
push
mov
jecxz
fsts
movsb
sbb
inc
mov
add
loope
in
cmc
in
pop
or
lcall
lock
imul
rcrl
fsubl
xchg
jg
cld
jge
lds
inc
out
push
mov
lods
sbbl
pop
call
sbb
adc
in
es
or
cld
repnz
ja
add
push
mov
mov
pop
mov
loope
pop
add
dec
push
sub
jne
fbstp
or
movups
pop
std
neg
add
mov
adc
je
bound
cmp
inc
inc
pop
mov
mov
clc
add
fbstp
jae
dec
or
movsb
ret
int3
sbb
in
pushl
jle
js
scas
fwait
lods
inc
adc
and
icebp
adc
xor
push
call
xchg
inc
shll
sbb
adc
cli
add
xor
push
push
add
add
fnstsw
out
pop
and
xchg
shl
nop
push
and
mov
ret
fdivl
xchg
sbb
fnstenv
jo
push
add
inc
cmpsl
cmpsb
cld
mov
test
out
xlat
dec
push
je
adc
test
shll
mov
adc
out
pcmpeqw
xchg
iret
fs
cmp
cmp
outsb
or
xchg
je
outsl
adc
ficoml
mov
jbe
xor
mov
and
ljmp
push
fisttpll
mov
cs
ficomps
mov
fnsave
scas
pusha
pop
jo
xchg
pop
add
out
cli
scas
cs
inc
cmp
adc
add
adc
jmp
fstps
jmp
inc
fwait
mov
and
sarl
sbb
cwtl
hlt
inc
ss
inc
movsb
pop
incl
mov
mov
ja
cmp
mov
std
cmc
fstps
loope
fwait
bswap
pop
stos
loope
mov
cmp
and
inc
jns
pop
mov
inc
dec
and
xor
and
das
jge
pop
cmp
xor
cmpsl
mov
mov
aas
rorb
testl
fistps
and
adc
fwait
adc
nop
jmp
mov
sub
ss
mov
dec
cltd
cmp
and
push
pop
out
cmp
push
in
aad
lret
dec
scas
pushl
xchg
lods
lock
or
sub
or
call
imul
xor
icebp
pop
aam
add
jns
and
adc
sbb
add
mov
jge
popl
mov
pop
add
mov
add
and
in
cld
pop
arpl
cmp
aas
leave
loopne
push
or
cld
mov
and
nop
mov
iret
cmp
addr16
pop
fisttpll
xchg
clc
or
imul
push
add
pop
cli
jmp
jle
xchg
and
and
nop
int3
mov
and
mov
lock
rcrb
orl
scas
outsb
scas
mov
or
test
and
adc
insl
jmp
ljmp
lahf
add
xor
fcmovb
cmp
enter
fidivrl
lock
pop
jl
pop
xchg
lds
icebp
es
lret
dec
loopne
mov
or
inc
inc
or
je
lea
mov
sbb
cmp
lahf
xchg
xchg
out
loopne
xor
rorl
lret
sti
and
das
shr
adc
shlb
inc
push
gs
inc
push
adc
and
pusha
arpl
jmp
shlb
adc
pop
push
push
jae
sub
add
mov
push
outsl
pop
cmc
adc
rcr
test
xchg
lret
mov
xchg
inc
cmp
addr16
das
lock
insl
int3
push
addb
xor
dec
or
cmpsb
in
fildl
faddl
aam
jle
es
das
fstl
lahf
dec
loopne
add
loope
test
inc
mov
es
imul
lods
add
jns
out
mov
aad
add
jg
adc
std
test
jb
xchg
es
dec
in
arpl
ds
call
adc
add
push
fbld
lret
or
es
sub
sbb
loope
adc
sbb
and
daa
cwtl
rorl
das
push
cmpsb
adc
pop
das
insb
lock
lds
add
push
pop
test
ret
lahf
push
pop
fcomps
jl
out
pop
testb
pusha
sete
hlt
inc
pop
or
shll
mov
or
xchg
imul
fcoml
sub
pop
inc
pop
xchg
into
sti
pop
js
test
rolb
mov
adc
aaa
decb
incl
cltd
mov
pusha
clc
in
sbb
mov
test
cwtl
bound
jmp
lahf
adc
cmp
xchg
cld
push
call
adc
data16
test
push
pop
jno
rcr
pop
mov
sbb
inc
mov
int
imul
call
pop
and
sbb
mov
add
decl
xchg
movsl
aad
xchg
xor
jg
ljmp
jne
push
xor
xchg
ss
push
int
pop
cmc
es
xor
lods
cmp
add
jg
inc
push
ficompl
and
mov
push
fnsave
shll
push
pop
mov
add
test
sbb
and
bound
fidivrs
cld
push
aaa
push
xor
addl
jns
inc
lods
inc
loop
test
fistpl
pop
xlat
out
mov
mov
adc
mov
hlt
or
xor
dec
xlat
out
pop
jg
pop
loop
sbb
add
sbb
push
addb
sbb
idiv
or
in
jbe
and
outsb
cld
in
xchg
sbbl
leave
xchg
movsl
mov
cmpsb
incl
iret
sysenter
ljmp
in
in
pop
ret
decb
outsl
cld
pop
enter
test
mov
sub
sub
ss
dec
aam
fsubs
test
dec
ds
pop
and
sub
or
inc
mov
add
dec
sbb
fstl
lret
mov
rorb
jmp
adc
pop
scas
ss
jg
sbb
pop
cmc
stos
je
aad
fiaddl
push
adcl
in
adc
xchg
imul
cli
ja
mov
and
call
pop
jl
call
icebp
movsl
and
add
push
gs
ret
xor
and
push
dec
lret
fidivl
jl
sti
scas
scas
sub
jbe
aad
push
incl
mov
mov
loopne
leave
outsl
mov
xor
pop
sti
mov
fisttpl
add
mov
roll
in
dec
push
ds
lods
inc
sub
pop
scas
es
jmp
push
fisubrl
mov
daa
and
test
es
smsw
cmpsl
sbb
out
sbbb
outsl
add
aas
icebp
popa
mov
incl
jg
and
push
adc
cmp
sbb
lods
into
and
mov
test
xlat
lea
cmp
js
idivb
xor
sub
pop
sub
add
mov
fcomip
pop
fs
jb
push
inc
mov
and
cmp
fucomi
stc
or
mov
dec
test
push
les
ljmp
jge
sbb
add
dec
mov
add
cli
mov
pop
clc
or
dec
mov
mov
xchg
adc
sub
xchg
dec
in
mov
jl
jle
inc
data16
icebp
lods
jge
leave
push
cmp
adcb
add
pop
cmc
imulb
std
ljmp
mov
popa
and
jno
je
insl
adcl
stos
ficoms
repz
adc
add
scas
repnz
mov
jo
loopne
and
and
ljmp
mov
cld
sbb
jge
adc
push
cli
icebp
andl
fisubs
xchg
insl
insb
es
rolb
shl
js
or
adc
xchg
and
sbb
pop
mov
out
mov
sti
lcall
decb
pop
inc
repz
mov
outsl
and
pop
pusha
data16
jnp
mov
push
mov
das
mov
add
xchg
mov
xor
mov
push
daa
adc
mov
sub
sbb
push
add
mov
fistpl
insl
scas
sbb
push
xor
movsl
adc
outsl
dec
and
add
bound
je
mov
mov
pop
mov
push
daa
jmp
xor
mov
add
xchg
ret
cmp
mov
or
push
or
sbb
les
inc
sbb
fisubl
fs
test
shll
lcall
push
sarl
mov
fsts
pop
sbb
or
mov
adc
xor
push
insb
push
or
fcomps
hlt
adc
jne
clc
inc
jge
cmp
ss
fsubrs
mov
dec
pop
sub
std
in
pop
ljmp
movsb
add
inc
and
and
pop
mov
stos
aam
push
pop
inc
mov
cld
pushl
xchg
xchg
bound
dec
adc
jne
adc
adcb
adc
insl
mov
sub
pop
loopne
sub
jno
pop
fidivrl
sub
and
nop
cmp
nop
shl
mov
pop
add
cld
jne
sub
neg
pop
pushf
loope
push
lahf
mov
mov
leave
por
les
int
mov
loope
add
dec
nop
stos
lret
data16
inc
cs
insb
jg
jae
jnp
stos
fists
aad
test
inc
or
add
xor
dec
and
jo
lret
add
add
daa
sub
mov
leave
push
push
inc
inc
mov
outsl
push
stos
inc
int3
push
sub
stc
mov
stos
test
idivb
mov
mov
mov
aaa
cmc
insb
in
pop
push
aam
aad
inc
fcmovnbe
cmc
pop
sub
xorb
adc
pop
dec
in
jbe
and
push
xor
rcrb
sbb
xor
enter
repnz
das
ljmp
xchg
flds
incl
sub
loopne
stos
in
ljmp
sub
and
call
xor
cmpsb
fdivr
std
push
inc
call
adc
xlat
divl
jne
jp
push
mov
fadd
nop
test
cwtl
and
xchg
mov
jg
jno
mov
push
push
inc
or
mov
dec
mov
dec
xchg
mov
lret
jecxz
xor
rol
adc
rol
sub
fistl
xor
or
dec
shlb
subb
ja
inc
jg
pop
mov
push
mov
adc
adc
cs
sbb
mov
mov
inc
and
mov
lea
in
jg
jecxz
sbb
mov
adc
inc
lret
jg
dec
cmp
jnp
sub
pop
ds
popa
popa
mov
in
pop
dec
mov
inc
das
cld
dec
mov
jbe
pop
mov
daa
xchg
jmp
popa
add
jne
cmp
or
sub
and
pop
mov
imul
add
push
or
call
jns
fwait
repnz
icebp
lea
adc
push
and
adc
out
adc
add
add
cmpsb
fidivs
jno
xchg
xor
push
in
xor
xchg
mov
jmp
jb
xchg
lahf
cltd
enter
imul
xchg
popf
push
lahf
jp
pop
mov
mov
xor
sub
jae
test
adc
mov
fnstcw
jbe
ret
sub
nop
aam
xor
xchg
aaa
xchg
lods
data16
jnp
mov
mov
mov
ljmp
xor
insb
cwtl
mov
dec
add
ss
jb
roll
cmpsl
pushf
test
loope
pop
repnz
test
inc
push
xor
mov
add
push
std
adc
cmp
cmpsl
ds
push
arpl
in
fldt
cmc
sub
xchg
jecxz
in
imul
jl
add
mov
sti
test
mov
lret
add
call
mov
add
jb
xchg
dec
cwtl
mov
or
mov
lahf
jecxz
mov
ficomps
jge
outsl
or
in
loop
hlt
or
mov
inc
and
std
mov
sahf
std
sbb
aad
out
pushf
rol
xchg
jbe
inc
outsl
adc
clts
xor
xor
cmpsl
jp
insl
pusha
jl
fistps
push
adc
mov
and
rolb
jl
mov
and
shll
ret
inc
ja
pop
inc
add
mov
clc
mov
outsl
fnstenv
fsubrl
mov
jmp
or
mov
push
inc
mov
popa
pop
cld
pop
dec
dec
sbbl
enter
mov
pusha
push
loopne
shll
dec
in
outsl
add
in
xor
fldl
addr16
loope
outsb
fnstsw
push
enter
pop
lret
and
push
mov
in
ss
jnp
popf
pop
fiadds
fwait
xchg
jge
lret
ret
add
arpl
ljmp
push
sub
icebp
and
mov
add
test
arpl
xchg
rep
sub
enter
inc
icebp
dec
loopne
shll
sub
sbbb
sub
outsl
aas
mov
jmp
and
mov
or
daa
jmp
ss
and
xor
gs
and
jb
mov
rcl
xchg
add
push
hlt
out
jo
ret
push
sbb
xchg
inc
pop
mov
pop
in
mov
cmp
shl
fistps
mov
movsl
or
jg
cmpsb
je
sbb
dec
aas
xorb
cltd
inc
aaa
xlat
cltd
jne,pt
mov
das
cmpsl
add
pop
mov
shr
in
mov
enter
jecxz
stos
jecxz
test
outsb
cmp
xchg
adc
dec
bound
icebp
out
movsl
sub
stos
add
adc
xlat
pop
jmp
pop
mov
mov
mov
pop
jl
inc
stos
scas
sub
xchg
xor
adc
and
inc
sbbb
and
fildl
fucomip
adc
sub
fiadds
adc
cli
mov
mov
mov
call
cli
scas
lock
and
inc
in
dec
aas
aas
push
fsubrl
mov
mov
loopne
ret
jmp
jbe
loope
jno
sbb
lret
outsb
sub
push
loope
test
or
movsl
lea
pusha
add
mov
clc
ret
xchg
das
repz
popf
sar
daa
cmpsb
pop
std
mov
inc
inc
mov
icebp
mov
loop
ret
add
into
sbb
pushf
ret
loop
test
inc
out
sti
push
faddl
sbb
fiaddl
mov
test
addr16
incl
mov
jecxz
sbb
add
push
cmp
int3
or
mov
lods
lods
jle
and
jns
jb
in
sarb
adc
adc
insb
leave
sbbl
or
mov
inc
push
aam
lret
sti
in
pop
loopne
inc
pop
addr16
or
push
mov
mov
add
js
mov
pop
lret
sub
push
dec
dec
mov
or
or
xor
je
fstps
std
push
push
push
lea
adcb
add
mov
cmp
xchg
sbb
mov
nop
adc
sub
iret
mov
pop
fidivrl
add
leave
mov
movsb
inc
mov
inc
pop
lds
mov
push
xchg
in
pop
lea
mov
inc
inc
pop
dec
pop
dec
mov
orl
rorb
iret
dec
call
cmp
hlt
fdivrl
jp
cmp
mov
shl
lods
mov
leave
and
pusha
or
scas
push
orl
push
jl
lret
enter
imul
mov
xchg
xchg
xchg
ret
movsl
mov
lret
add
pop
repz
cli
in
decl
xchg
or
add
sbb
adcl
popa
xor
mov
bound
clc
adc
sbb
mov
xor
mov
popa
mov
test
sarl
sbb
aad
jmp
xchg
push
inc
dec
jne
mov
jg
mov
dec
dec
or
sub
jbe
mov
jnp
sbbb
call
jl
movsl
sbb
fmuls
dec
repz
sbb
pop
out
cwtl
scas
cwtl
int3
std
outsl
mov
inc
add
dec
insl
cmp
push
xchg
jge
mov
push
cld
fsubr
dec
loope
lods
ret
scas
and
repnz
outsl
or
add
insl
test
pop
or
mov
mov
push
in
and
pop
daa
loopne
fcmovnb
mov
adc
movsb
adc
nop
enter
mov
sti
insb
imul
mov
push
dec
pop
jp
jmp
outsl
call
mov
sbb
jnp
jge
imul
stos
pop
outsb
mov
test
sbb
clc
jg
mov
jle
pop
cwtl
cmpsl
mov
ror
sub
jnp
aas
pop
mov
mov
aam
jae
jno
mov
sbb
clc
push
sub
sbb
ret
push
mov
xchg
sub
and
dec
lahf
jmp
into
push
jge
mov
dec
and
subl
sub
and
adc
rcr
mov
incl
cmovl
pop
and
cmp
jne
outsl
sbb
inc
mov
iret
push
push
mov
rcl
stc
dec
dec
mov
int
mov
lock
dec
clc
js
test
push
mov
in
cltd
add
cmp
dec
xlat
fwait
dec
sbb
cltd
sub
test
js
cmpsl
clc
bound
fs
or
fstpt
inc
pop
jp
lods
adc
add
jg
fiadds
dec
jns
sub
sbb
sub
jge
in
call
xor
or
dec
fildll
or
ret
testl
sti
outsb
adc
inc
test
push
inc
pop
and
cmpsb
nop
pop
pusha
mov
fsubrl
imul
xchg
outsb
out
mov
outsb
sar
es
jbe
jmp
jmp
sub
adc
rclb
sbb
jmp
pop
pop
cmpsb
sbb
cmpsl
or
rcrl
pop
insl
loope
in
in
or
pop
inc
movsl
add
push
adc
mov
int3
test
jne
jo
imul
mov
inc
mov
add
subl
dec
pushl
sub
mov
cmp
fisttpll
push
daa
out
jns
and
sbb
hlt
clc
aam
xor
add
das
std
push
cmp
notl
loope
nop
sub
sbb
sbb
jp
or
mov
jns
inc
mov
mov
bound
mov
pushf
jno
and
lock
dec
push
push
pushf
dec
mov
hlt
mov
aam
popa
lods
mov
incb
cmp
sub
pop
cmp
add
dec
or
dec
lahf
daa
sbb
in
pop
jb
leave
scas
mov
jbe
mov
test
repz
sub
rol
in
sbb
pusha
cli
pop
and
nop
into
dec
add
cmp
fidivrs
add
mov
xor
push
jecxz
push
movsb
add
inc
sub
mov
dec
cmpsl
xchg
push
sbb
dec
imul
leave
dec
sbb
test
and
mov
xchg
xchg
xchg
mov
jle
das
mov
shl
jne
es
scas
andb
adcl
add
fcomip
hlt
mov
and
jg
mov
insb
mov
add
xchg
mov
xchg
adc
fcom
jbe
aaa
lea
movsl
dec
lcall
imul
inc
cwtl
xchg
pop
dec
and
inc
pop
movsl
pop
clc
jne
cmovns
pop
cmp
xor
mov
outsb
shll
out
jns,pt
dec
js
in
sub
inc
loopne
mov
aad
dec
fisubrs
cli
rclb
push
mov
xor
xchg
mov
mov
out
inc
stc
nop
mov
icebp
or
out
jl
in
stos
inc
xchg
out
and
pop
lret
adc
rorl
fld
stos
out
sub
scas
pop
inc
cmp
sbb
ljmp
adc
lret
ret
xchg
and
sarl
repnz
push
push
inc
mov
or
pop
out
cmp
inc
mov
dec
jns
bound
pusha
cs
fldt
imul
push
loop
dec
shr
lret
insl
jns
adc
outsb
cld
mov
testl
pop
push
cld
lcall
adc
xor
pusha
rcrb
test
loope
nop
mov
sti
lods
mov
jp
cld
xor
cmp
mov
mov
nopl
cmc
mov
jle
mov
pop
and
sub
mov
mov
je
jecxz
lods
out
push
mov
dec
mov
sub
xor
jl
cmp
cmp
movsl
dec
pop
xlat
inc
leave
xchg
sub
inc
std
adc
or
pusha
add
adc
addr16
repz
jo
test
xchg
push
xor
mov
dec
mov
inc
cmp
movsl
mov
push
dec
pop
addr16
aas
pop
xor
xlat
pushf
mov
push
push
jmp
pop
inc
sbb
or
lcall
clc
pop
xchg
sbb
sbb
push
out
pop
stc
in
adc
sbb
popa
cmp
push
sbb
lods
ss
push
mov
xor
std
sub
cmpsl
outsl
mov
addl
sbb
and
addr16
mov
outsl
mov
adc
jmp
mov
pop
sbb
test
insl
test
pop
or
stc
inc
stos
jp
dec
cmp
mov
test
and
fiaddl
outsl
or
cld
mov
push
cmpsb
lret
bound
je
jo
clc
mov
std
mov
mov
loope
push
mov
push
adc
fidivrl
push
sub
xchg
mov
insl
addb
jle
shl
fisttps
pop
xchg
dec
push
mov
sub
or
fisttpl
or
repnz
dec
psubsb
pushf
test
fsub
or
orb
call
pop
xor
test
pop
fstpl
out
scas
push
pop
sbb
rcr
repnz
cmp
hlt
adc
loopne
dec
and
sbb
adc
push
testb
fwait
into
mov
aaa
ficoms
ljmp
xchg
cli
or
mov
xor
orl
dec
mov
in
add
ret
daa
in
or
ffreep
mov
jl
sbb
lock
mov
pusha
imul
mov
call
sti
pop
aaa
or
push
push
jne
mov
mov
stc
inc
insl
adc
pop
mov
dec
adc
sub
mov
sbb
pop
cltd
xor
push
sbb
jno
xchg
push
ds
jg
ret
jb
push
sbb
loop
inc
fildll
pop
ljmp
push
loope
inc
ljmp
sbb
sbb
aas
in
testb
dec
lret
mov
into
cmc
jp
in
jle
test
cmp
std
inc
jns
inc
add
mov
sbb
stos
push
icebp
sub
mov
and
imul
outsb
pop
outsl
mov
fsubr
jg
cmp
fistps
or
movsl
sub
das
jp
or
sbb
or
test
inc
inc
cli
iret
lock
call
xchg
popa
enter
xchg
ficoms
xchg
imul
adc
jmp
cmpsb
dec
mov
mov
push
pop
out
loope
add
aad
lret
in
dec
add
and
jbe
xchg
out
and
jo
jecxz
mov
fstl
fcoml
mov
icebp
mov
ljmp
inc
sub
outsb
arpl
pop
push
sbb
xlat
pop
insb
sbb
rclb
ret
cmpsl
or
lods
subl
pop
add
pop
add
mov
jge
push
popf
inc
jo
cmpb
mov
cmp
mov
mov
mov
testb
mov
ds
hlt
pop
dec
out
inc
jns
sbb
sbb
jg
call
pop
inc
jo
rcr
xor
push
scas
movsl
adc
daa
mov
jg
scas
loopne
in
or
cwtl
dec
xor
xchg
push
addl
lock
int
cmpsb
adc
shll
add
scas
pop
in
xchg
nop
imul
or
popa
jb
sarl
outsb
jecxz
fisubrl
mov
lods
lds
jb
adc
push
pop
fisttpl
pop
daa
sbb
dec
jo
pop
fstpl
adc
mov
dec
ret
fnstsw
sbb
xlat
jb
push
popa
movsb
xchg
mov
or
call
hlt
push
std
movsl
gs
inc
outsb
jns
adc
aaa
fisttpll
sub
enter
iret
pop
push
jo
shrb
inc
inc
inc
adc
jg
mov
fs
lcall
mov
adc
and
movsb
or
add
add
dec
adc
mov
or
mov
sub
lahf
lret
xchg
sarb
mov
lcall
out
movl
das
push
inc
icebp
lcall
mov
bound
shl
lock
xchg
mov
pop
adc
movsl
push
jmp
aas
and
and
lahf
xchg
sbb
fdivrs
jnp
jl
leave
popa
in
jl
mov
xchg
rol
or
je
mov
sarl
inc
bound
wbinvd
sbb
push
pop
call
js
lea
sub
lcall
inc
ds
sub
cmpsl
push
cmpsl
jo
in
pop
inc
loop
inc
sti
xor
test
fwait
dec
jp
mov
add
sub
sahf
aad
loop
mov
cmpxchg
or
into
mov
mov
cmp
out
sub
pop
jecxz
js
loop
mov
or
xor
mov
mov
mov
xchg
loop
outsl
inc
lahf
pop
loopne
mov
push
jp
jo
pushfw
pushf
and
imul
aaa
mov
jl
insb
adc
add
outsb
les
adc
mov
jbe
jb
rcr
and
icebp
cmp
push
ja
fxch
push
int3
je
xchg
lock
sti
mov
xor
out
or
push
or
jne
adc
cmp
adc
cmp
pusha
jmp
add
xor
orb
pop
mov
lock
aas
imull
and
les
stos
test
das
and
ljmp
dec
lock
insl
push
insl
sub
js
cs
xchg
xchg
adc
jo
mov
ljmp
mov
out
sbb
jnp
jnp
and
pop
testb
pop
inc
add
fbstp
or
mov
fmuls
jp
mov
int
mov
fildll
lods
cbtw
push
int3
or
xchg
jl
test
js
icebp
inc
movsb
sbb
jb
call
jbe
out
pop
mov
xchg
loop
icebp
decl
sub
or
not
adc
jl
pusha
orl
in
push
sbb
ret
loop
outsl
fisttpll
adc
sub
pop
adc
in
or
repnz
outsb
out
or
mov
push
in
std
jo
mov
and
lret
push
test
jecxz
and
mov
lods
mov
sub
mov
cld
add
out
test
or
cltd
out
or
orb
pop
inc
mov
inc
or
cli
push
jbe
scas
push
fs
int
outsb
sbb
xor
push
add
adc
repz
mov
jp
adc
lods
loopne
and
sti
out
cli
cs
dec
mov
xchg
or
or
or
lahf
hlt
jbe
dec
jmp
push
sub
add
jne
lea
outsb
scas
mov
inc
int
cmpl
sub
insl
or
popa
xchg
mov
movsb
mov
insl
cmc
jg
add
and
and
push
pop
pop
rorl
sbb
mov
push
shll
lret
mov
scas
inc
scas
xor
sbbl
xor
xchg
lods
mov
sahf
dec
out
or
jp
mov
lods
add
sub
and
mov
sub
aaa
ss
lahf
push
push
dec
pcmpeqw
loope
test
scas
xchg
test
or
test
push
mov
pop
aad
ret
fistpll
push
je
pop
adc
cmp
xchg
clc
call
push
jnp
add
loop
outsl
outsl
cld
sub
or
test
add
pop
xchg
inc
xchg
dec
add
mov
data16
add
or
inc
add
push
scas
cmpsb
sbb
cli
orb
nop
bsr
je
out
fsubl
or
and
mov
repnz
and
inc
mov
pop
jle
inc
repz
cmpsb
pusha
xchg
or
fldt
iret
sbb
jle
xor
pop
jecxz
adc
or
shrb
nop
inc
sub
or
lock
lea
movsb
mov
mov
outsb
cmp
lret
pop
clc
in
outsl
ljmp
vmovupd
andl
push
mov
mov
adc
lret
or
push
adc
lcall
xor
cli
decl
pusha
add
sbb
scas
enter
daa
movd
sub
cwtl
or
clc
mov
clc
sbb
pop
mov
or
mov
jg
dec
stc
add
and
dec
hlt
in
out
aas
push
push
imul
lret
dec
xchg
flds
pop
mov
and
or
jl
mov
pop
add
cld
and
sub
lds
aam
pop
dec
sub
jnp
push
inc
push
arpl
shll
push
enter
xchg
pop
adc
mov
ficoms
pop
lahf
xor
loope
pop
into
pop
inc
sbb
cmp
pop
pop
adc
incb
out
jnp
mov
push
test
test
pop
pop
xor
scas
dec
sbb
flds
das
sub
stc
fucompp
xchg
outsb
jl
cmp
add
or
sbb
xor
testb
into
cmpl
inc
std
loope
idiv
push
pusha
bound
fnstenv
jno
adc
or
loope
clc
jo
ja
stos
jno
xlat
ret
push
mov
loop
cld
mov
stos
inc
outsb
test
jnp
inc
sti
movsl
aas
aad
dec
iret
jge
not
add
xor
sti
mov
hlt
mov
enter
inc
adc
pop
xchg
pop
outsl
js
outsl
or
aam
out
call
repz
out
or
add
cmpsb
clc
ret
dec
jmp
adc
adc
out
xchg
test
sub
hlt
mov
xchg
xchg
xchg
hlt
push
incb
jnp
sbb
cmc
dec
or
or
test
imul
mov
rorl
pop
orb
int3
jecxz
dec
dec
das
pop
insb
push
into
pop
movsb
inc
or
mov
adc
aaa
lcall
mov
hlt
add
es
xlat
sti
ds
add
lcall
ret
jmp
sub
inc
sbb
jno
xchg
insl
mov
add
mov
cs
jne
pop
js
push
add
dec
addr16
push
mov
jbe
stos
out
jae
loope
clc
movsl
jle
add
or
rclb
pop
pop
shlb
decl
ljmp
jo
adc
clc
mov
cmp
inc
xchg
ficompl
clc
into
int
inc
jle
sub
lods
mov
xor
sub
andl
mov
pop
arpl
jge
aaa
ja
call
inc
fdivrl
rorb
shll
lods
cmpsb
jno
mov
inc
lret
cmp
mov
mov
xor
adc
jecxz
inc
dec
std
jle
xor
loope
jecxz
adc
lock
push
daa
in
push
or
aas
mov
insl
inc
xchg
add
push
or
test
mov
call
dec
adc
xor
xor
ja
loop
sub
pusha
or
test
or
loopne
es
rcrl
jge
icebp
repz
movsl
jg
mov
lock
mov
adc
shll
js
popa
jge
cmp
mov
icebp
fwait
negb
jb
mov
test
mov
imul
cmpsl
inc
mov
movsb
xchg
xor
adc
sub
daa
jno
das
jge
pop
sub
fcmove
shll
out
mov
mov
outsb
and
cmpb
lea
mov
int3
xchg
add
and
inc
mov
dec
add
in
sti
ljmp
or
mov
out
lds
out
insb
ret
xchg
mov
inc
or
fdivrs
cmp
inc
or
rcrl
mov
push
imul
inc
outsl
pop
mov
xchg
in
mov
jg
mov
jno
inc
push
sti
adc
scas
cmp
xor
inc
or
jge
shlb
mov
jecxz
jmp
xchg
or
push
mov
cmpsb
jle
jne
mov
and
jne
cmc
outsb
jge
decl
inc
pop
push
sub
notb
adc
das
fsubrl
jl
sahf
adc
and
inc
mov
adc
fldt
arpl
comiss
call
adcb
arpl
and
incl
js
and
sub
popl
jecxz
movsl
or
fldt
lret
push
inc
outsb
fidivrs
shll
dec
mov
stos
fists
and
cwtl
sub
add
scas
push
pop
push
idiv
add
sub
mov
inc
jg
adc
lret
mov
fcomps
xchg
mov
lahf
clc
gs
test
iret
iret
push
inc
loope
add
sbb
insl
pop
or
or
mov
adc
pop
call
leave
xchg
fistps
dec
or
popf
call
ret
or
daa
imul
cmp
test
test
jns
adc
aaa
adc
inc
ret
lret
movsb
mov
mov
pushf
aaa
loope
lahf
test
push
or
mov
jle
mov
addr16
add
pop
mov
mov
push
and
or
mov
call
push
mov
inc
jle
mov
mov
test
out
jno
test
hlt
or
in
sbb
jbe
outsl
in
sarb
sbb
sub
jbe
rorb
and
jg
fdivp
int
push
xor
nop
xchg
repnz
sub
out
repz
in
call
das
data16
lret
mov
adc
stos
and
adc
pop
hlt
mov
mov
lods
sbb
aaa
outsl
stc
and
pop
movl
add
shl
int
pushl
mov
popa
xchg
jb
mov
adc
mov
sarl
push
js
jbe
jno
roll
sbb
je
jle,pn
dec
shll
testb
cwtl
inc
or
or
mov
push
xor
mov
repnz
adc
pop
jecxz
pop
pop
aam
mov
enter
push
add
fs
sbb
add
cmc
mov
fidivl
in
dec
test
cmpsl
adc
pop
adc
jo
clc
push
inc
xlat
push
push
repz
pusha
incb
ret
arpl
xchg
pushf
movb
fsave
xchg
cwtl
data16
pop
insb
push
xchg
loope
sbb
mov
hlt
mov
jnp
outsl
pusha
daa
out
push
mov
test
push
and
lea
sahf
mov
mov
mov
xchg
fisubrs
and
xchg
clc
xor
fstl
mov
dec
inc
cmp
pop
lea
repz
out
xlat
mov
bound
mov
sub
add
jbe
cltd
mov
sbb
pushl
mov
ljmp
xor
mov
or
lock
movsb
dec
icebp
xchg
in
rolb
dec
mov
or
xor
push
or
enter
mov
sub
orl
xor
inc
lcall
jecxz
pusha
inc
mov
aam
jge
aad
movsb
in
push
pop
rcll
push
push
push
fstpt
or
or
shrl
cli
jno
xchg
inc
sbb
pop
ja
jle
push
cmpsb
adc
push
call
je
imul
enter
cmc
movsl
add
cpuid
pop
loop
pushf
jne
dec
adc
adc
icebp
stos
loopne
cmc
push
push
dec
lea
cmp
add
pop
cli
mov
cmp
xorl
gs
add
fidivrl
lods
jle
es
xor
pop
bound
mov
cs
scas
ja
pop
push
adc
cmp
mov
shr
dec
mov
cs
adc
clc
sbb
push
std
gs
jns
sbb
add
push
daa
cmp
ret
sbb
fwait
lret
pusha
dec
mov
or
inc
xchg
push
pop
push
adc
or
sbb
hlt
add
arpl
mov
mov
orl
lcall
adc
sub
loop
lods
notb
arpl
insl
scas
push
xor
iret
and
and
pop
hlt
mov
mov
xor
scas
and
cmp
inc
push
push
cmpsb
push
outsb
mov
shll
call
inc
das
pop
movsl
inc
inc
in
test
push
jnp
add
inc
mov
cmpsl
xchg
mov
jmp
pop
dec
and
in
lods
testb
ret
lds
imul
xchg
lock
dec
js
cmp
cmc
call
sub
loop
pop
sti
decl
jne
test
cmp
call
insb
pop
das
fstp
jg
mov
sbb
out
xchg
ret
pop
push
lret
loop
outsl
pop
push
sub
add
sbb
enter
mov
lret
cwtl
rorb
cli
test
inc
push
or
in
mov
xchg
insl
and
mov
dec
gs
inc
int
outsb
mov
xchg
and
fstl
xor
push
int3
cmc
sub
jp
cs
mov
xchg
mov
addl
out
test
pop
jnp
sub
movsl
lock
jge
mov
pop
mov
mov
push
mov
sti
loope
adc
and
test
cmc
jmp
inc
rorl
dec
inc
push
test
jnp
das
dec
sti
jno
pop
push
mov
bound
loop
push
pop
push
inc
addr16
fistl
jl
cmc
mov
dec
push
add
push
mov
mov
xchg
sbb
add
pop
mov
and
clc
jg
mov
sbb
popf
adc
cmp
adc
push
jno
sbb
inc
jl
in
xor
sbb
outsb
jg
pop
in
insb
popf
stc
clc
dec
in
lods
inc
jnp
inc
inc
std
sbb
xchg
mov
jmp
cmpsb
push
cmc
pop
sbb
decb
movsb
fmull
jge
ljmp
mov
push
ret
xor
icebp
pop
outsl
mov
jae
xchg
jge
push
mov
pop
adc
adc
out
je
test
and
cld
movsl
outsb
nop
pushf
xchg
das
inc
inc
add
sub
push
pushf
in
aaa
jo
aas
adc
ror
xor
fcoms
cmp
mov
adc
pop
mov
pop
incl
pop
pusha
icebp
xchg
movsl
std
clc
jg
adc
rcrb
in
mov
out
or
fildll
sbb
shll
and
dec
cld
sbb
xchg
pop
or
lock
sub
test
push
and
popa
cvtps2pd
xchg
addr16
jg
mov
nop
movsb
ja
inc
arpl
add
incl
jp
das
jmp
and
and
test
jge
lret
or
sub
ss
push
cld
jne
mov
dec
mov
enter
or
cmp
cmpsl
pop
repz
push
rorb
sbb
pop
sbb
inc
xchg
xor
clc
mov
xlat
lea
subb
fmul
adc
push
jle
adc
sbb
mov
jmp
sbb
int
decl
ficoms
sub
xchg
jo
decl
or
stos
lret
fidivl
mov
add
mov
movsb
push
xor
pop
std
mov
int3
xchg
push
outsb
int
clc
and
add
scas
xorb
add
adc
jb
add
imul
jg
int3
cmpb
xchg
cmp
adc
adcl
in
aad
incl
and
mov
cwtl
push
xchg
jmp
icebp
testb
insl
jmp
or
sbb
arpl
jge
movsl
mov
cmpsb
xchg
fisubs
and
adc
decl
out
add
inc
cs
int
call
into
mov
sub
mov
xchg
fimull
je
jo
fnstsw
data16
ljmp
pop
clc
scas
pusha
into
sub
movsl
loopw
out
xchg
sbb
pop
jb
ret
dec
xor
push
fisubs
pusha
xchg
or
fcmovu
imul
fcompl
or
rolb
out
imul
adc
mov
inc
xor
std
fwait
pop
mov
mul
cltd
arpl
lods
jnp
mov
sahf
shrl
mov
fwait
sbb
xchg
jmp
jne
test
data16
icebp
dec
scas
jge
xor
lods
sub
sbbl
icebp
jecxz
push
xor
xchg
push
daa
push
aas
adc
mov
lea
pop
add
negb
lea
mov
aad
xchg
mov
jge
add
mov
test
or
pusha
adc
sub
pop
mov
add
mov
movsl
adc
fwait
loopne
inc
pusha
jo
mov
push
dec
filds
arpl
push
mov
std
pop
or
sub
cmpsl
int
jle
int
std
inc
mov
and
fs
int3
and
dec
sbb
std
aaa
iret
cltd
xor
dec
push
mov
inc
outsl
insl
jmp
loopne
addr16
pop
pop
push
bound
outsb
leave
das
fnsave
and
int3
jo
xor
add
ret
jp
or
mov
pop
std
push
xchg
test
out
jge
ret
lock
ljmp
inc
mov
hlt
push
frstor
xchg
mov
inc
movsl
mov
xchg
pushf
icebp
xchg
dec
jle
movsl
jecxz
mov
imul
inc
insl
adc
jbe
mov
inc
lea
xchg
cltd
pop
imul
loop
adc
mov
or
push
push
add
pop
jl
push
cwtl
sub
dec
sub
pop
loope
mov
fsubr
cltd
fadds
or
xor
inc
pop
faddl
cmp
imul
push
test
push
mov
cld
pushl
xchg
fidivl
push
andl
mov
lret
jge
rolb
xchg
push
inc
sbb
jle
mov
inc
negl
gs
push
mov
pusha
xchg
iret
inc
insl
aam
push
mov
out
mov
mov
js
cld
or
dec
in
add
test
and
cmp
fnstsw
pop
jle
push
xchg
lds
push
mov
and
iret
subl
in
insl
mov
or
sub
pusha
loope
and
adc
cld
popa
dec
nop
pop
imul
sbb
ret
sbb
repz
cmpsb
call
ljmp
stos
adc
push
inc
add
mov
out
popa
jecxz
jno
xchg
add
ret
sbb
mov
pop
cmp
in
test
inc
xchg
jle
sbb
jecxz
mov
sub
sbb
add
in
jno
js
dec
ss
or
pop
add
test
leave
mov
jg
mov
jbe
mov
pop
pusha
repnz
fs
sahf
inc
fidivl
jns
mov
imulb
rcr
subb
cmp
rorl
pop
mov
jmp
in
dec
lret
or
xor
popf
sbb
jmp
stc
pop
push
test
fs
dec
roll
dec
push
mov
rcrb
mov
loope
std
idivb
sbb
jnp
jo
inc
mov
aas
jl
jl
sbb
and
fst
mov
mov
jp
int3
adc
sbb
add
adc
xor
xchg
je
inc
inc
add
xor
fucomip
scas
roll
jno
stos
xchg
lahf
arpl
push
mov
push
cmp
es
and
call
push
les
outsl
ljmp
mov
iret
int3
dec
dec
aad
scas
push
sub
fs
pop
pop
clc
iret
loopne
das
shl
and
std
stc
in
lcall
pop
add
mov
test
sbb
xor
aaa
mov
mov
loope
les
pop
or
mov
outsl
out
pop
jae
in
mov
dec
repnz
cmp
mov
pop
cli
sbb
adc
add
cmp
outsl
and
and
and
sub
xchg
in
xor
cmp
dec
push
scas
ds
ret
std
xor
and
adc
mov
add
cmp
inc
mov
dec
call
xchg
nop
mov
pop
js
inc
jae
mov
in
insb
call
lcall
pop
mov
stc
fsubr
push
jb
les
ficoms
sbb
xor
fildll
add
lea
sbb
sub
fcoms
mov
or
push
in
idiv
das
fsubl
adc
pop
mov
adc
and
pop
clc
sbb
mov
inc
shll
add
add
or
and
cld
jbe
jb
aam
or
arpl
subl
pop
es
out
xchg
inc
jnp
mov
pop
rcll
and
mov
sub
jg
lds
mov
daa
and
popf
sbb
sbb
lret
in
and
sub
aas
xchg
sbb
in
and
cmp
clc
popf
inc
push
lcall
dec
mov
mov
loop
ret
insb
dec
cltd
sub
xor
call
out
sbb
in
jnp
insb
cmpl
popa
clc
icebp
or
and
cld
lcall
fst
loopne
push
jl
les
xchg
jne
ret
xchg
loop
ficompl
dec
ret
adc
ja
jp
sub
xor
fldenv
and
add
jmp
push
xchg
js
mov
test
js
or
or
call
add
sti
or
sbb
inc
mov
push
mov
loopne
jecxz
mov
js
fcompl
ret
clc
ss
loop
lret
mov
pop
push
sbb
add
pusha
ret
jo
rcrb
clc
or
out
iret
lcall
push
mov
sti
mov
mov
gs
xor
adcb
roll
xchg
push
push
mov
mov
and
test
inc
or
xor
add
js
mov
push
dec
mov
cwtl
adc
mov
cmc
adc
jl
push
and
push
pop
push
add
add
imul
shl
lock
sbb
cmp
mov
push
add
mov
mov
lea
jle
sub
add
add
js
lock
sbb
sbb
sbb
popf
cmc
lea
out
rorl
dec
mov
xchg
addr16
cli
movsl
or
adc
xor
mov
in
or
sti
push
outsl
xchg
test
mov
xlat
aaa
sub
mov
sbb
mov
lods
loopne
xor
imul
pop
outsb
fdivr
add
sub
fs
mov
jp
mov
cmp
inc
xor
ljmp
push
mov
cltd
add
ss
mov
ds
mov
dec
popf
or
pop
mov
cmpsl
pusha
test
cltd
xchg
xor
std
xor
add
push
inc
das
mov
addb
cmp
sbb
rcl
add
pop
pop
cld
cli
outsb
or
cmp
inc
test
shrd
push
pop
std
xchg
push
jb
subb
xor
mov
jno
mov
or
inc
inc
sub
rolb
cwtl
cld
in
adc
test
or
push
pusha
in
sbb
fwait
decb
push
adc
add
in
xchg
pop
mov
push
mov
and
shl
out
jle
scas
sub
xchg
fistpll
lods
rcrb
lret
stos
lods
xchg
adc
imul
rcrb
sbb
loop
dec
sbb
jbe
mov
rorb
lds
and
and
or
sub
or
push
lea
insl
push
lea
mov
inc
xor
mov
in
sub
clc
jns
mov
jne
jg
je
sub
push
sbb
sub
pop
inc
cmp
jmp
sub
ret
push
mov
cmp
jne
pop
inc
out
mov
xor
or
add
xchg
test
mov
rorb
jno
icebp
aam
mov
jle
decl
inc
jge
outsb
sbb
bound
lret
cmp
cld
fists
aas
or
decl
cld
jno
pop
adcl
xchg
testl
sti
pop
popf
mov
outsl
pushl
insb
or
jns
insb
push
jb
push
cmp
mov
scas
mov
mov
outsb
pop
ds
adc
jg
shrb
arpl
mov
aas
movb
mov
leave
std
ret
adc
das
loope
lock
into
cmp
fdivs
std
jno
lcall
ret
fidivrs
mov
mov
adc
mov
mov
sbb
jp
imul
call
adc
enter
mull
pop
push
pop
push
fwait
mov
shlb
or
mov
sti
or
aaa
push
or
push
pop
enter
dec
sbb
test
sbb
inc
adcl
mov
sub
mov
push
out
mov
rcrb
popa
jg
pop
sub
fmuls
ljmp
mov
stos
and
aam
decb
out
push
movl
rcl
push
inc
jecxz
addr16
adc
dec
das
jl
or
loope
jae
and
fldt
sbb
sub
je
cli
pop
push
sbb
hlt
fcomi
xor
pop
aas
sbbb
arpl
notb
ljmp
push
popa
xor
cmp
mov
dec
decl
mov
pusha
lahf
or
js
push
cld
fisttpll
push
insb
subb
and
aaa
outsb
lock
and
jnp
mull
sbbb
ffree
sbb
pop
cmp
lock
lcall
pop
push
add
mov
mov
bound
and
movsl
call
sarl
xor
push
xor
sub
sub
inc
or
pop
dec
and
ss
das
xchg
clc
pop
jg
call
push
loopne
test
fucomi
push
movsb
cmp
cmp
sbb
xchg
dec
rclb
pop
test
int
rcrl
dec
cmp
jbe
jbe
stos
sub
leave
cmpsb
imul
in
mov
fildl
aaa
push
mov
gs
mov
push
push
dec
cmp
adc
jnp
sbb
mov
jmp
cmp
mov
rol
aas
ljmp
push
jp
jns
xor
test
dec
sbb
in
jge
xchg
imul
dec
insl
and
jo
push
loope
sbb
mov
cmpsb
adc
or
adc
or
fistpl
pop
xchg
add
dec
or
movsb
bound
lds
mov
stc
push
lods
ja
sbb
pop
mov
arpl
add
ja
push
sbb
fnstenv
in
mov
clc
adc
push
lcall
movb
jo
int
fs
loopne,pn
push
in
imul
lds
add
and
dec
ret
sbb
mov
adc
js
outsl
cwtl
dec
lods
adc
push
push
push
jmp
cmp
push
dec
mov
pop
mov
test
ret
pop
jg
xchg
dec
gs
add
sarb
outsl
xor
jg
inc
jns
mov
mov
out
or
add
adc
inc
xlat
cmc
cli
cmc
mov
cs
out
mov
out
decb
or
cld
fiaddl
and
cmp
lret
inc
ret
addr16
pop
outsb
loopne
ds
fwait
in
ds
sbb
arpl
leave
sub
outsb
arpl
adc
cmp
imull
jge
outsb
jl
push
mov
jmp
int3
jg
pop
mov
enter
ljmp
mov
push
fsubrs
sbb
push
jae
js
ljmp
inc
fnstcw
inc
dec
jecxz
sub
mov
xchg
xor
outsl
jl
dec
enter
fldenv
aad
out
push
mov
push
filds
xchg
repz
mov
outsb
aaa
es
enter
mov
push
icebp
jmp
adc
loopne
dec
dec
daa
imul
and
mov
or
in
in
cmp
mov
ds
es
inc
or
clc
dec
sbb
sub
mov
addl
jns
sbbl
call
movb
lret
mov
mov
mov
out
test
rolb
xor
push
mov
sbb
mov
lahf
cwtl
xchg
out
notb
gs
iret
or
orl
cmp
pop
adc
js
mov
adc
push
test
jo
pop
out
mov
lea
mov
mov
ds
sarb
lea
call
fwait
ja
or
and
jne
inc
xorl
aam
pop
or
test
push
mov
and
mov
xchg
add
pushf
xchg
setge
loopne
pop
jle
stc
or
mov
mov
dec
cmp
je
fcompl
loopne
andl
aaa
jne,pn
stos
or
adc
imul
dec
or
jmp
cld
push
mov
pusha
pop
fsubl
loopne
notl
shlb
clc
decl
push
aad
xor
xchg
adc
jnp
test
pop
and
faddl
fists
inc
xchg
xchg
mov
mov
in
inc
sti
xchg
ss
gs
sar
xchg
sub
arpl
inc
mov
xchg
pop
or
sbb
test
fsubrp
adcl
pop
sbb
mov
jl
mov
inc
pop
pop
ret
ja
loopne
xor
das
and
xor
ret
sub
adc
jge
xchg
stos
insl
mov
jle
xchg
xor
lock
rcll
addr16
xchg
lods
pushl
xchg
inc
dec
or
dec
js
inc
mov
jl
imul
xchg
cmp
int3
cmp
mov
int
dec
out
dec
xchg
pop
push
js
xchg
fstl
mov
rorb
push
scas
lods
decl
cmpsl
in
and
scas
shrl
repz
scas
insb
cwtl
add
aaa
add
mov
mov
adc
dec
cwtl
cmpsb
push
lret
loopne
mov
push
ss
push
enter
enter
inc
mov
add
shlb
pop
insl
push
jno
fnstcw
cmpsb
js
ds
pop
or
cmc
mov
cltd
in
mov
push
mov
les
shr
jo
call
xchg
xorb
cli
popa
sub
push
mov
fs
xchg
mov
xchg
mov
adc
xchg
mov
mov
hlt
push
pop
cmp
aaa
sub
cmp
lret
cmp
xor
ss
cltd
aam
ds
imul
iret
lds
imul
pop
pop
ja
ja
int
cmp
ss
cmp
je
lret
aaa
pusha
outsl
gs
shrl
enter
aas
mov
push
mov
mov
aaa
inc
or
sbb
push
mov
fbstp
adc
mov
cmpsl
and
insl
loope
push
sbb
fldcw
fstp
mov
sub
fdivl
ficompl
and
xor
and
push
int3
jb
or
xchg
ljmp
xor
xor
dec
or
addr16
jp
leave
pop
adc
std
adc
mov
cmp
mov
push
adc
mov
mov
dec
cmp
enter
dec
push
mov
jb
lahf
mov
pop
sti
incl
xor
and
mov
adc
out
inc
js
jo
or
xorl
push
pop
pop
push
cld
or
mov
add
adc
cmp
movsl
jg
mov
ret
nop
lock
ja
lret
std
sub
out
bound
andb
outsl
push
call
inc
sbb
inc
sarl
int3
dec
dec
pusha
jb
call
mov
fidivs
add
jne
jle
xor
in
pop
jle
fldt
fwait
iret
sub
and
jmp
aam
cmc
aaa
jle
add
push
jae
mov
cmp
or
xchg
push
and
cmp
sub
div
pop
insl
cld
xor
jle
and
xchg
xchg
out
icebp
dec
jg
mov
fcmovnbe
scas
stc
or
pop
fcompl
jbe
ficomps
je
out
shl
into
mov
fbld
mov
push
mov
loope
call
cltd
cltd
mov
fildl
and
aam
hlt
ljmp
iret
xchg
lret
lods
test
fwait
outsl
fwait
push
sar
outsb
adc
fcoml
mov
daa
xchg
dec
andb
inc
mov
cmpsb
loopne
lds
das
xor
jmp
xor
push
aad
sbb
std
sub
ss
in
or
push
mov
cmp
incl
push
fwait
and
leave
inc
and
das
pop
andl
std
jecxz
push
inc
xlat
iret
adc
or
or
cmp
pop
push
rolb
js
push
shlb
icebp
sub
or
nop
or
sahf
pop
sbbl
fstpt
enter
into
fistl
in
fs
std
lea
sbb
or
and
shl
mov
insl
mov
ljmp
push
xor
mov
mov
arpl
pop
das
dec
mov
inc
jl
dec
push
out
jb
mov
mov
nop
adc
aaa
nop
sbb
or
dec
inc
sub
inc
lret
scas
sti
lods
in
jbe
hlt
pop
cld
bound
lcall
sub
xor
or
sbb
aad
mov
inc
and
pop
pop
aas
sbb
movsb
mov
pop
stos
mov
jmp
or
mov
insl
push
push
lods
test
xor
inc
mov
jns
cli
cmp
dec
sbb
cmp
push
outsl
cmp
stos
lahf
ljmp
dec
adc
mov
push
inc
add
mov
inc
push
addb
pop
add
xor
orl
fsubrp
pusha
jb
fstpl
lods
fs
sub
sub
sub
pop
inc
mov
sti
lcall
addl
jbe
mov
xchg
jae
mov
es
mov
mov
loop
imul
mov
jno
adc
pop
xchg
js
into
add
sti
daa
outsb
sub
jge
dec
jo
mov
xchg
bound
insl
sahf
mov
inc
push
dec
cmc
dec
fldl
movsl
loope
mov
and
xchg
fstpt
lods
bound
out
cmp
mov
adc
sbbb
imull
pop
xchg
lods
cld
out
orb
shll
shrb
cmpsl
out
int
and
push
ret
adc
cmpsb
outsb
insb
cmpb
cmpsl
jnp
and
fildll
pop
xchg
pusha
and
xor
lahf
add
sub
notl
je
repnz
les
cmp
mov
pop
in
aas
dec
lds
outsl
push
or
cli
push
jl
lahf
iret
push
xor
call
imul
aaa
fiadds
loop
les
jge
xchg
inc
mov
sbb
lea
xlat
mov
jmp
movsb
mov
lods
test
pushf
push
out
or
dec
or
mov
adc
mov
fidivl
test
pop
mov
clc
fistpll
aam
in
je
sub
mov
jl
mov
mov
xchg
cwtl
jmp
call
fildl
jl
jmp
enter
mov
mov
pop
stos
push
shlb
arpl
inc
dec
cld
negb
mov
sbb
pop
mov
pop
sbb
mov
add
or
inc
pusha
xchg
in
insl
in
push
in
push
cmpsb
add
jmp
pop
addr16
out
or
push
lods
popf
aas
inc
gs
xchg
out
xor
inc
jle
stc
inc
xor
je
lcall
sub
jp
les
repnz
inc
mov
jge
adc
sbb
movsl
sahf
lods
inc
insl
in
insl
sti
xor
push
rdtsc
and
ret
push
sbb
lea
pop
jle
test
and
adc
sub
and
jae
add
or
out
sub
clc
mov
movsl
sub
push
mov
mov
or
pop
loopne
rcrb
inc
mov
imulb
xor
cmp
fstl
push
xor
mov
imul
das
dec
add
mov
pusha
mov
adc
imul
out
xor
shll
lret
in
mov
push
int3
or
insb
cltd
fs
mov
popa
loope
adc
add
mov
lret
lea
aas
or
jns
pop
jb
orb
adc
jg
xchg
jno
ljmp
and
cmc
cwtl
aaa
push
xchg
es
inc
pop
pop
clc
adc
or
loopne
xor
add
and
mov
and
mov
sahf
pop
or
mov
lret
js
push
je
hlt
or
jbe
popf
mov
jnp
or
xchg
and
mov
or
xor
hlt
jecxz
jl
mov
std
imulb
push
mov
popa
jb
sub
sti
sbb
mov
stc
or
ret
fisttpll
outsl
inc
incl
xor
scas
dec
add
insb
test
jg
mov
mov
xor
dec
pop
rolb
adcb
shrb
popf
pushf
add
and
pop
out
cmp
cmpsb
sahf
sbb
dec
push
scas
scas
cwtl
xchg
and
enter
mov
testb
add
mov
add
lcall
lods
and
sub
or
dec
ljmp
ss
adc
mov
fwait
pop
xor
add
js
hlt
xchg
add
pop
jne
mov
dec
adcb
cmp
ljmp
sbb
leave
test
xor
imul
adc
cld
adc
icebp
inc
pusha
or
adc
clc
adcb
or
arpl
adc
mov
sbb
das
inc
out
iret
pop
xchg
and
int3
insb
mov
cmpsb
loope
iret
push
das
stc
cmp
test
push
je
dec
lcall
or
push
sbb
out
inc
jno
movsl
jo
xchg
enter
mov
mov
out
rorb
jno
fbld
popa
sbb
mov
ret
or
cli
outsl
mov
leave
pop
movsb
pushf
jmp
mov
cwtl
inc
fistpl
or
inc
pop
popa
cwtl
add
adc
mov
insb
lds
repnz
gs
hlt
dec
std
lods
das
je
jno
hlt
loop
add
mov
inc
lcall
xchg
inc
sub
stos
inc
adc
popf
fldcw
imul
insl
sbb
inc
lods
push
mov
dec
aad
mov
divb
insl
cmc
mov
mov
sbb
cmp
pushl
pop
cmpsl
cvtps2pi
xchg
lret
cmp
nop
xchg
shll
push
stos
std
in
dec
jge
and
adc
sub
aam
xchg
adc
add
add
mov
push
and
push
and
fisubl
test
add
arpl
repz
std
jmp
adc
mov
inc
rcrb
jbe
jecxz
pop
sbb
pop
std
xchg
push
cld
push
xor
add
pop
xor
pop
mov
pusha
out
lods
pop
das
fnstsw
pop
pop
mov
popa
cmc
ja
jo
in
fstenv
movsl
and
jno
xor
jo
mov
xchg
mov
aaa
ss
inc
lock
fsubp
pop
push
je
je
inc
mov
inc
push
jmp
push
sahf
add
and
icebp
sbbb
pop
nop
rolb
testb
arpl
ret
and
and
xlat
mov
inc
ljmp
in
fildll
js
dec
xchg
sub
mov
or
xchg
std
push
cmp
mov
lret
call
test
push
fwait
adc
jb
rorl
ja
mov
push
lds
adc
or
sub
std
outsl
scas
pop
scas
scas
movsb
ficoms
xchg
enter
xorb
pop
mov
sti
pushf
cmp
mov
add
incb
cmp
pusha
inc
enter
call
fimuls
mov
adc
jae
cs
je
sti
lcall
mov
or
sbb
cmpsl
sub
lcall
test
pop
xor
das
jmp
mov
repz
aaa
push
cmp
dec
out
mov
or
mov
xor
xchg
pop
mov
mov
rorb
aad
sbb
mov
jne
xchg
or
xchg
pushl
aam
and
mov
mov
sbb
inc
sub
cwtl
addl
jo
lods
lods
push
std
pop
xor
jmp
xchg
loop
inc
xor
xor
shl
fwait
aad
idivb
pop
insl
and
xor
adc
or
mov
dec
xchg
loopne
bound
pop
adc
hlt
fldt
stos
jmp
aaa
cs
insb
xor
cmp
les
xchg
mov
inc
adc
fistpl
mov
xlat
inc
ficoms
lods
add
das
roll
push
lahf
ss
add
insb
dec
std
fcomi
pop
orb
lds
movsb
inc
or
or
add
and
imul
adc
cmpsl
or
jne
xor
fprem1
jne
and
add
cmp
andb
xchg
mov
inc
aad
jae
sbb
mov
adc
inc
js
fistps
scas
mov
das
cmp
xchg
fiadds
imul
adc
addr16
or
outsl
jg
fldenv
rolb
sbb
mov
aam
mov
push
mov
imul
sub
lahf
push
jbe
sub
mov
inc
sub
adc
xchg
test
fimuls
adc
and
add
sub
dec
push
pop
fcomp
sbb
jp
sub
fdivrp
pop
pop
movsl
lds
fbstp
jmp
dec
xchg
and
mov
push
mov
les
add
test
das
inc
sbb
aam
shrb
push
mov
sbb
pop
aaa
nop
push
mov
pushl
or
xor
jb
sub
dec
lret
out
adc
roll
das
cld
mov
scas
dec
adc
and
sub
xlat
les
insl
pop
loop
pop
jae
xor
out
bound
outsl
clc
or
cmc
push
adc
sbb
decl
ficomps
sti
fdivrl
pusha
nop
aam
xchg
jne
push
mov
sub
shrb
dec
xor
in
push
pushl
in
in
cmc
js
fnstsw
fcom
out
jb
mov
icebp
xchg
ret
mov
and
imul
mov
cmp
pushl
enter
in
mov
add
testb
lea
data16
pushf
xchg
jmp
cli
pop
in
bound
lds
jl
sbb
repnz
rol
inc
cld
fwait
mov
and
xchg
jle
psubsw
outsb
fistl
jnp
and
and
push
adc
fstpt
xor
mov
std
cmp
jne
add
pop
inc
and
pop
call
bound
inc
ss
mov
mov
das
mov
js,pt
xor
pushf
cmp
push
pop
ljmp
gs
mov
daa
sub
outsb
shlb
xor
push
push
icebp
sarb
gs
jo
jbe
xor
stos
mov
sub
mov
mov
ficompl
adc
jnp
dec
jno
and
xchg
or
test
sub
mov
mull
insl
jae
cmp
jo
mov
fists
add
mov
mov
and
icebp
jno
cmp
sti
cmpsb
push
sub
cmpb
mov
cmpsb
js
ss
adc
jo
mov
inc
cld
dec
stc
into
mov
enter
lods
lea
xchg
inc
xor
and
jg
fldenv
sub
pushf
ror
adc
jnp
out
cmp
or
add
jo
movsb
ss
adc
sub
sbb
dec
or
push
mov
movsb
xchg
add
mov
fisubrl
mov
in
sub
inc
add
push
sbb
or
cli
sbb
gs
call
inc
adc
lret
mov
hlt
sub
add
xchg
sbb
js
cmp
pop
test
loop
jle
dec
jmp
mov
mov
jl
pop
ret
outsl
out
outsl
cs
insb
jecxz
and
xchg
call
rorb
test
push
ljmp
int3
mov
inc
jae
push
mov
add
and
jae
push
lods
pusha
mov
jnp
jb
mov
fistps
or
pop
mov
fidivs
in
movsl
jg
jno
xor
mov
cld
enter
je
clc
push
mov
add
out
xlat
inc
cmp
cli
scas
das
xor
dec
je
movsl
cmp
lods
add
or
add
clc
int
push
mov
cmp
push
std
adc
std
xchg
jmp
inc
xchg
movsl
and
sbb
cmp
ss
jnp
orl
arpl
jg
sbb
icebp
mov
push
and
das
icebp
mov
inc
les
xlat
in
sub
cli
sbb
pushf
bound
in
push
add
flds
jo
lcall
popf
lret
push
sub
add
or
js
imul
ljmp
sub
arpl
mov
ss
fs
mov
and
dec
inc
sti
lods
jg
or
icebp
jne
cwtl
xchg
std
filds
xor
sahf
inc
jle
iret
cld
adc
or
lods
mov
push
scas
cltd
push
icebp
mov
add
jp
cmp
and
push
sbb
movsl
push
mov
lods
mov
insb
inc
fs
fists
adc
cmp
or
sbb
mov
mov
ljmp
jge
pop
push
loop
add
leave
adc
pop
or
push
mov
dec
loope
and
lea
dec
filds
and
jp
lret
inc
sbb
es
push
pop
cmp
mov
lahf
jle
aad
addr16
adc
dec
popa
jae
xor
incl
aas
sbb
es
addb
add
repz
and
or
cmp
jp
mov
mov
mov
pop
pop
insl
in
push
cli
bound
xchg
cwtl
jl
mov
pop
mov
movsl
sub
push
sahf
das
sub
mull
push
and
inc
add
test
mov
mov
sbb
push
out
int3
mov
movsl
jg
mov
sub
test
mov
pop
outsl
or
imul
leave
add
mov
arpl
sub
jno
cmpsb
xor
xor
xchg
mov
xchg
pushf
test
mov
sub
mov
mov
push
std
outsl
mov
sub
es
lahf
pop
mov
fstpt
movsl
fbstp
xchg
adc
cli
inc
ds
add
repz
push
call
jne
push
mov
adc
imul
int3
mov
add
inc
mov
cltd
inc
pop
mov
push
mov
xchg
cmp
lods
je
push
out
mov
push
push
push
pop
lahf
cltd
dec
jp
sar
outsl
ljmp
ja
mov
sar
das
ja
addr16
pop
pop
jge
aas
icebp
cmpxchg
sbb
mov
addb
or
pop
mov
out
aam
lahf
loop
cmovs
mov
and
mov
add
dec
sub
dec
xor
adc
adc
ss
mov
push
mov
adc
fidivl
mov
sbb
faddl
pop
inc
xor
test
cmp
sub
cmpsl
push
push
in
cld
mov
imul
cltd
dec
cmp
fnstcw
pop
cltd
cli
ret
xlat
stos
stos
add
jbe
or
cwtl
adc
add
push
lret
mov
sti
das
les
fsub
sbb
mov
addr16
ret
pusha
push
loop
loop
movsb
stos
mov
dec
or
loop
xor
inc
scas
jg
mov
clc
mov
ds
gs
pop
les
insl
inc
pand
push
mov
and
fstp
ss
xchg
adc
add
mov
sbb
stos
aam
xchg
das
insl
aaa
clc
sbb
mov
and
jnp
inc
lods
cmp
mov
pop
repz
sahf
or
fisubrs
pushl
inc
dec
in
fidivs
adc
or
jge,pn
xchg
jb
shlb
mov
outsl
mov
xchg
lcall
jp
es
addb
and
or
or
cmp
addb
add
sahf
popa
outsb
mov
mov
add
mov
test
hlt
out
fmul
mov
inc
jns
stc
out
sbb
cwtl
pop
pop
jne
pop
test
test
inc
and
aaa
mov
rcrb
aam
std
mov
stos
mov
stc
inc
dec
sti
xor
cs
sub
xor
call
mov
ret
push
cld
xchg
dec
and
iret
ret
or
pop
mov
clc
and
inc
or
addb
call
adcl
add
shrb
incl
inc
test
inc
aas
jmp
test
lds
pop
mov
lds
lcall
adc
push
bound
mov
xorb
push
ss
cmpl
jno
fisttpl
stos
mov
pushf
imul
mov
or
xchg
adc
addl
and
push
xchg
addb
jle
add
jg
cltd
push
cmp
out
mov
ret
bound
inc
ret
mov
subb
xor
loope
lock
dec
push
int
insb
movsb
mov
xchg
lods
fldt
jl
ss
pushf
pop
and
jmp
xchg
jmp
movsl
mov
scas
mov
out
xchg
shrl
xchg
jecxz
mov
flds
outsb
or
mov
nop
sub
cli
dec
imul
loop
mov
inc
mov
mov
fidivrs
inc
addr16
nop
out
push
dec
mov
sub
ds
mov
xor
jecxz
icebp
sbb
xor
inc
add
or
insb
js
repnz
cld
mov
nop
rclb
hlt
jg
pop
call
mov
inc
mov
aas
pop
mov
push
cli
add
jne
lds
mov
adc
push
faddl
icebp
cmc
push
adc
icebp
das
jnp
dec
es
inc
and
stos
dec
sarb
sub
adc
pop
call
lods
fisubl
lds
mov
outsl
lret
negl
outsl
out
adc
jecxz
cmp
lods
jle
insl
mov
pop
repnz
dec
sub
dec
popf
xchg
fidivs
clc
adc
les
mov
inc
lea
frstor
and
sbb
cli
xchg
je
and
mov
fnstsw
cmp
in
inc
icebp
pop
sub
add
pop
cmc
and
dec
cmp
adc
mov
dec
inc
stos
out
adc
lea
mov
out
and
jl
scas
sti
testb
xor
bound
mov
mov
push
push
popa
inc
sbb
xor
lcall
popa
int3
roll
mov
pushf
mov
sarb
pusha
or
stos
lods
mov
sub
testb
push
movsb
popf
xorl
push
pop
sahf
pop
sub
js
push
add
xor
in
add
call
cmp
push
xchg
pusha
mov
dec
push
mov
sbb
ds
test
and
movsb
mov
popa
lock
push
es
pop
xchg
dec
cmpl
xchg
inc
inc
and
sub
mov
mov
mov
nop
cmpsb
push
add
clc
movsl
xchg
fiaddl
jns,pt
in
fnstenv
addr16
imul
cmc
cmp
repz
je
out
fldenv
decl
adc
subl
das
xor
in
adc
fnstsw
mov
mov
sbb
add
mov
pop
dec
xchg
cmp
add
push
jge
sub
and
adc
lret
fistps
mov
stos
fisubs
push
adc
stos
add
fsubs
xchg
cmp
add
xor
jle
bound
push
push
or
or
push
adc
leave
or
add
mov
sub
adc
aad
inc
cmp
test
leave
imul
mov
inc
bound
cs
rcrb
jns
inc
xchg
adc
jg
nop
cwtl
xchg
jg
add
jge
cs
dec
aas
stc
lds
adc
subb
xor
ret
or
mov
mov
lea
ds
subb
inc
addb
bound
adc
sbb
lea
pop
xor
jecxz
testb
ss
jp
or
push
insl
jnp
jbe
mov
mov
and
scas
dec
cld
add
sub
xor
add
fidivs
mull
iret
pop
and
pop
lahf
inc
ret
iret
stos
inc
movsl
icebp
arpl
out
push
repz
sahf
pop
test
cmc
je
aam
test
repz
mov
xchg
dec
ss
inc
mov
rcrb
mov
mov
push
mov
xlat
cmp
pop
std
cmp
push
jo
xchg
inc
das
pop
or
push
sbb
ljmp
inc
loopne
add
cmp
push
push
lret
mov
push
enter
sub
adc
movsb
clc
mov
sbb
xor
or
add
push
and
xchg
fnstenv
mov
push
xchg
push
cld
xchg
dec
rorl
sbb
ljmp
insb
cmp
repnz
inc
push
mov
orb
push
out
mov
dec
icebp
xor
or
cmp
cmpb
inc
mov
test
cltd
cmp
repz
mov
cmp
stos
or
cmpsl
ret
mov
inc
call
xor
jp
leave
jl
nop
mov
inc
cld
mov
test
fwait
mov
adc
pop
jb
pop
jp
sbb
or
add
cmp
mov
orb
fidivrl
adc
rol
sbb
xlat
jne
das
pop
test
test
lods
mov
inc
dec
std
aam
sti
add
and
xchg
and
sub
dec
test
inc
dec
or
decb
fs
aas
xchg
bound
cmpsb
inc
push
cld
add
inc
adc
test
cld
add
in
push
pop
jbe
mov
movsl
outsb
arpl
push
daa
fdivrp
sbb
ret
pop
movsb
rcll
sub
inc
stos
sbb
lahf
xchg
or
ficomps
das
jae
xchg
xor
mov
call
cmpsb
xchg
inc
mov
dec
loop
push
fisttpll
add
test
mov
mov
cld
jmp
hlt
rolb
mov
pop
inc
fimuls
jb
mov
ss
roll
push
das
sbb
lods
iret
xchg
pop
add
push
fucomi
int
mov
shll
sbb
push
aam
jb
popf
cmpsb
push
pusha
nop
add
in
in
or
xchg
mov
jl
out
sbb
pop
test
or
or
cltd
test
and
pushl
push
fyl2xp1
jmp
push
repz
or
fiadds
repnz
jecxz
jo
add
cmpl
je
out
push
std
hlt
addb
inc
push
test
idivb
fnstsw
imul
mov
lds
dec
and
add
xor
push
dec
jge
mov
inc
lret
dec
jns
mov
int3
cmp
jo
dec
mov
in
shll
daa
pop
pushf
lahf
add
les
flds
in
mov
test
call
or
jno
out
cmp
pop
jl
mov
bound
sar
decl
shll
cwtl
sub
mov
lds
or
xor
and
sub
sub
fisubl
xchg
icebp
or
test
add
arpl
test
mov
lret
ret
mov
fldt
sbb
sub
subb
dec
out
inc
lods
mov
pop
inc
je
dec
enter
xchg
outsb
fildl
bound
rcr
mov
ljmp
sbb
ss
popf
inc
mov
and
add
enter
sbb
movsb
add
fsubl
mov
mov
pop
add
repz
dec
inc
jo
cltd
insb
sbbb
xor
scas
popf
add
or
cmp
jb
inc
insl
inc
sub
push
loope
lea
sbb
or
in
pop
add
mov
loopne
js
and
cmp
pop
sti
mov
inc
sub
cmp
cmp
adc
les
pop
pop
lea
xor
in
mov
sbb
jmp
pop
dec
ficoml
ljmp
mov
ret
push
sbb
add
adc
xchg
mov
xor
lea
in
add
mul
stos
lods
movsl
push
rclb
mov
mov
jle
shll
adc
lods
cmpsl
pop
cld
fsubs
sarl
ret
pop
cld
lret
mov
adc
in
outsl
dec
stos
xlat
mov
movsl
push
je
sub
cmc
fildl
mov
mov
iret
shl
clc
addr16
pop
movsl
inc
xchg
or
push
cmpl
cli
stos
sbb
aas
jno
fidivrs
ret
es
mov
cmc
cmp
jne
sub
ret
imul
mov
mov
repz
nop
or
sbb
imul
test
movsb
or
jmp
sbb
lret
push
ja
push
add
ds
push
dec
popa
or
lock
push
lock
pop
or
lret
xor
ret
mov
add
test
loop
jno
jnp
inc
sub
js
or
cmp
and
das
sbb
lea
cmp
xchg
or
mov
mov
push
xchg
dec
aas
and
cmp
xchg
lahf
push
and
push
jb
hlt
mov
outsl
pop
dec
push
push
mov
or
lock
push
cmp
push
lret
mov
xchg
push
decl
adc
sbb
fistl
outsl
pop
mov
pop
bound
fidivs
lret
out
or
movsl
mov
lcall
insb
leave
and
mov
and
enter
jge
cltd
into
adc
test
mov
mov
cmp
or
out
push
in
xor
dec
pop
outsl
mov
aam
fldl
push
movsl
cmp
in
dec
sbb
mov
fsubrs
fninit
pop
or
ja
inc
dec
fmull
cli
lret
cmp
sahf
push
dec
adc
subb
je
dec
sbb
sbb
sbb
out
xor
stos
sahf
dec
cmpsl
pop
push
shll
sbb
inc
or
cwtl
clc
fbld
popl
dec
push
outsb
push
pop
fdivs
int
aas
decb
popf
and
rolb
push
stos
insl
shrb
fistps
frstor
adc
mov
leave
es
or
rol
or
loopne
fwait
hlt
repz
fwait
jne
add
inc
mov
cmp
jle
cmp
mov
addr16
pusha
popa
inc
adc
imul
sub
push
sbb
cmpsl
add
xor
add
pop
ffreep
ret
mov
inc
jecxz
xchg
lods
int
aaa
insl
out
xor
push
xchg
ds
cmpsb
and
adcl
dec
test
fprem1
add
push
xchg
into
xchg
inc
and
mov
sbb
scas
stc
add
jg
outsl
incb
ret
sahf
lods
mov
xchg
inc
sahf
aaa
adc
insb
inc
mov
imul
aas
xchg
or
mov
cmpsb
mov
inc
loope
cmp
mov
adc
cs
lcall
add
inc
or
pop
dec
testb
into
push
clc
jecxz
fisttpll
jnp
mov
shll
lock
push
daa
push
xor
arpl
inc
cmp
sbb
xor
push
jne
stos
fnsave
push
scas
jg
aaa
mov
jbe
fadds
cld
test
add
jl
ficoms
icebp
adc
xchg
push
dec
jno
push
fidivrl
mov
and
xor
mov
cmpsb
mov
mov
data16
movsl
pop
arpl
adc
push
int
imul
jbe
lock
mov
lret
xorb
jp
addr16
pushf
mov
nop
cmp
and
js
sub
mov
imul
das
lcall
out
loop
inc
test
fcmovnbe
fnsave
inc
test
push
xor
jp
sbb
popa
jns
scas
faddl
xorl
insb
mov
mov
sub
stc
jnp
jl
js
lods
lock
jle
dec
push
imul
in
sub
dec
jb
adc
or
mov
lods
xor
cli
cmp
hlt
xor
inc
js
incb
pop
sub
shrb
scas
fmuls
rcrb
xchg
call
mov
mov
mov
or
jle
xor
mov
movsb
test
fcmovu
mov
psubsb
hlt
fistpl
fwait
pop
vmulss
in
pop
sbb
add
pop
jnp
fiaddl
leave
cmpsb
jmp
xor
push
out
in
jg
lds
pop
pusha
loope
inc
xor
mov
push
negb
lock
nop
inc
popf
test
jp
push
dec
fwait
inc
inc
pop
xchg
mov
cmpsb
cwtl
push
cwtl
sub
ret
jg
mov
loop
mov
test
leave
lods
mov
insb
fstp
add
cmp
in
jp
mov
dec
pop
add
dec
mov
mov
sub
mov
scas
sbb
into
mov
outsb
clc
rcrb
cmp
test
in
lock
rol
or
add
mov
sub
leave
test
js
fdivr
xchg
push
ljmp
jae
daa
ret
jae
mov
pop
insb
inc
stos
jne
inc
insl
aad
jge
outsb
pop
stc
dec
div
mov
loope
mov
pusha
pop
and
das
inc
jnp
daa
mov
out
sbb
mov
lcall
aam
jmp
lcall
push
jnp
mov
and
mov
cmp
xchg
sub
add
popf
pop
jg
scas
xchg
pop
mov
push
imul
mov
pop
dec
or
push
clc
or
jo
lods
movsb
xchg
jg
add
stos
pop
adc
mull
sub
adc
or
dec
fstpt
in
mov
test
mov
test
mov
pop
sbb
jae
sbb
inc
or
sub
sub
push
or
jg
bound
inc
clc
or
outsl
mov
ret
dec
out
mov
mov
mov
and
inc
dec
jne
lret
adc
xor
sub
mov
orl
ljmp
mov
loopne
mov
in
cmc
sbb
ja
push
xchg
add
hlt
xor
fcoms
pop
outsl
nop
stos
mov
xchg
sti
pusha
pop
ret
rcrb
jl
and
in
dec
nop
dec
inc
andl
push
mov
fs
inc
stc
sub
loope
insl
sti
fcomp
dec
mov
xchg
lret
push
cmpsl
lea
incl
iret
stos
or
pop
add
in
mov
repz
sbb
fstpl
loopne
fs
mov
add
idivb
xor
jle
stos
lock
andb
xorb
sub
add
push
mov
daa
or
mov
adc
js
push
inc
leave
inc
dec
les
mov
aaa
call
sarb
sarb
cli
dec
add
pushf
jmp
gs
dec
and
shl
push
jmp
xor
fistl
mov
in
pop
jmp
xlat
out
daa
mov
or
shrl
popa
movsb
xchg
push
or
out
push
insb
mov
roll
sti
push
xor
pop
dec
js
mov
std
ja
imul
clc
xlat
pushf
fs
inc
arpl
cmp
fidivl
pop
cmpsb
mov
inc
mov
pop
sti
scas
add
mov
pushf
pop
lret
ljmp
mov
push
mov
rcrl
testb
fldt
jnp
pop
and
push
ja
dec
pop
add
mov
push
notl
add
lds
cmc
decl
mov
push
push
divl
sub
test
inc
popl
pop
sbbb
scas
cs
aaa
rolb
andl
movsb
push
gs
pop
stos
or
adc
mov
mov
stc
cld
mov
sub
inc
imul
mov
ljmp
pushf
inc
sub
subl
or
mov
je
scas
test
dec
pop
in
sub
mov
icebp
pop
ds
inc
and
lea
call
loopne
adc
fnstsw
loope
scas
std
mov
daa
mov
dec
and
loop
outsl
aaa
lret
xchg
jo
push
jno
fsts
mov
pop
adc
lock
push
push
ficoms
ja
jmp
mov
repz
orb
imul
adcl
xor
clc
insl
mov
jg
lods
dec
dec
and
pop
sbb
add
xchg
mov
and
cld
mov
out
stc
lahf
and
adc
std
outsl
pop
mov
in
xchg
incb
adc
out
lcall
dec
rclb
pop
mov
js
xor
cmc
dec
pop
mov
sub
or
mov
pop
xor
loope
loop
imul
loop
dec
test
adc
dec
lcall
or
addb
fnsave
mov
enter
popa
mov
outsl
call
dec
mov
dec
adc
ret
jle
test
cmp
in
sbb
decl
pusha
sub
test
leave
stc
mov
jae
ret
pop
and
cmp
xor
adc
adc
mov
pop
std
das
adc
inc
sbb
dec
cmp
aas
out
icebp
fldt
cwtl
push
inc
sub
incb
fistpll
mov
sub
shrl
inc
mov
shlb
jne
jle
inc
iret
pop
push
inc
mov
adc
add
lock
fistpl
adc
xchg
push
inc
and
icebp
lods
mov
jbe
ret
mov
mov
xor
pusha
pushf
mov
dec
xor
repnz
pop
push
sub
aas
jge
add
cld
outsl
jmp
push
xchg
push
jmp
mov
rcrb
ja
pslld
call
mov
lds
sbb
mov
mov
push
ret
sbb
and
sbb
push
dec
mov
test
xchg
mov
lcall
jbe
lds
arpl
inc
sub
fcmovnb
stc
dec
dec
jmp
stos
cmp
sahf
clc
decl
push
rcrl
inc
add
pushf
jle
jb
adc
loope
fimuls
add
movsb
dec
mov
add
jbe
nop
aas
adc
fimull
out
cmp
out
aas
cmp
negl
mov
pop
addr16
cmp
outsb
dec
add
mov
lret
mov
add
mov
sahf
les
xchg
and
xchg
xor
push
mov
repz
sahf
sbb
xor
inc
in
rcrl
int
aas
push
cltd
inc
sbb
adc
or
icebp
movsl
pop
sti
arpl
push
mov
mov
add
sub
or
adc
das
push
mov
fdivp
dec
insb
adc
cs
add
rorl
sub
mov
add
sbbl
gs
outsl
xchg
cmp
adcb
rolb
dec
movl
mov
into
adc
test
std
sbb
jns
fiaddl
and
xor
andl
cmc
mov
ret
push
aam
cmc
cmp
cmpl
adc
arpl
loop
mov
call
cli
mov
mov
pop
or
push
dec
xor
mov
pop
sub
dec
fcmovb
xchg
lret
inc
pop
cli
pusha
mov
jp
movsl
jns
fs
popa
cmp
mov
mov
jp
and
ret
scas
mov
push
paddsb
lods
add
test
scas
jb
or
sbb
ret
fldenv
inc
mov
popf
pop
pop
cmpsl
xor
pop
cld
test
xor
shlb
sub
lea
sub
sbb
pop
mov
ljmp
cld
lret
sub
pop
fcoms
mov
insb
sub
adc
pop
test
out
js
lahf
cli
ret
or
sbb
lret
jge
jne
ss
into
add
cmpsl
out
daa
dec
and
pop
not
add
hlt
mov
dec
mov
les
sub
cld
gs
dec
add
rorl
mov
adc
mov
fdivl
pop
cld
outsb
fmull
das
mov
pop
add
or
bound
cs
pop
in
adc
ficoml
xchg
fsubp
dec
sti
pushf
lea
pop
xchg
insb
dec
rep
xchg
sbb
cltd
sbb
cli
add
sbb
test
adc
shrb
out
mov
jmp
xor
in
pop
loopne
xor
cmc
push
mov
cld
hlt
ljmp
test
stos
jge
sub
mov
test
ja
or
fmull
xchg
push
test
add
inc
clc
adc
push
mov
int3
divb
mov
and
add
fs
and
push
ss
fbld
sti
xor
mov
mov
or
ljmp
cmpsl
inc
orl
or
pop
cli
ffreep
add
adc
or
fcoms
sub
inc
fdivrp
call
add
jb
outsb
call
jbe
outsl
outsl
sub
push
pop
jnp
cmp
test
xor
mov
push
add
add
inc
jle
insl
xchg
mov
cmpsb
mov
gs
stos
mov
jle
xorb
fdivp
cmp
pop
ss
and
mov
jns
je
push
sub
aaa
rcrb
rclb
outsb
push
mov
lcall
inc
ret
aas
rclb
ret
ss
fwait
stos
add
pushf
jbe
std
out
icebp
mov
bound
cmp
push
mov
push
pop
mov
jge
mov
sub
push
cs
or
adc
adc
test
je
decl
lcall
hlt
mov
cld
stos
ret
aam
sbbb
push
test
add
leave
test
lods
outsb
sbb
ljmp
loopne
outsl
xchg
pop
pop
clc
xchg
arpl
mov
repz
sbbb
enter
add
mov
ficompl
sub
mov
in
jmp
mov
data16
sub
xchg
test
mov
or
test
dec
inc
sbb
cli
dec
shlb
mov
orb
mov
out
outsl
shr
hlt
mov
aaa
jno
ljmp
add
add
mov
imul
das
fsubl
lahf
ljmp
fwait
inc
cmp
rcr
std
bound
mov
sbb
sbb
sub
jecxz
std
xchg
pop
fnsave
mov
mov
cld
push
push
pop
fcom
jne
mov
out
addr16
cmp
mov
or
inc
add
adc
into
out
or
sar
cs
push
inc
sbb
or
imul
js
mov
adc
jg
sti
fwait
aas
aad
mov
jecxz
adc
inc
mov
pushf
outsb
or
push
out
sti
clc
test
rorb
lea
lsl
mov
mov
dec
int
inc
mov
dec
inc
lods
mov
cmp
mov
fcmovu
add
adc
push
insl
mov
hlt
ret
or
gs
add
jbe
outsl
outsl
or
add
imul
pop
xor
push
aad
and
pop
into
mov
jbe
fildl
mov
aas
ret
outsb
or
inc
adc
lock
inc
push
stos
enter
jo
pmaxsw
dec
je
add
in
test
sbb
mov
rcrb
getsec
mov
outsb
mov
pop
adc
lods
add
mov
adc
mov
out
mov
clc
pushl
ficompl
lea
test
mov
push
lods
std
lods
mov
outsb
pop
fs
and
xor
pusha
inc
in
ficompl
fisubrl
sub
test
insl
je
and
cmpb
loopne
clc
push
mov
insl
mov
add
rorl
nop
xor
fidivl
xchg
sbb
cmc
testl
clc
adc
jae
dec
add
jae
pop
cmp
cmpsb
add
push
add
stc
call
sub
shrb
sbb
dec
mov
jnp
fisttps
data16
push
mov
fdivrs
push
add
mov
pushl
scas
add
clc
and
lods
loop
jmp
negb
repz
subl
fldt
jl
adc
dec
dec
jno
sti
fsubrs
add
sahf
sub
mov
adc
push
dec
shrb
fs
sbb
fisttpl
ret
addb
jl
mov
mov
dec
mov
push
out
inc
cmp
aam
or
add
sub
or
pop
push
mov
daa
lahf
loopne
movsb
push
pop
clc
movsl
jbe
insb
cld
mov
clc
das
insb
xchg
jbe
pop
test
imul
mov
clc
mul
fnstsw
pop
inc
sub
mov
in
pop
mov
test
mov
mov
in
ss
popa
dec
int
call
loope
imul
cmp
mov
dec
cmp
jg
ret
mov
loop
arpl
int
push
xor
adc
lret
fidivrs
pop
and
addl
cli
sbb
in
repnz
push
push
sbb
and
filds
fmuls
pop
frstor
mov
mov
in
ret
icebp
fcoml
sbb
pop
sub
jmp
inc
ds
jne
add
or
dec
push
adc
fisttpll
icebp
mov
cmpsb
mov
inc
sar
shll
aaa
push
xchg
and
movsb
lcall
mov
pop
mov
jg,pn
push
adc
push
sub
add
mov
cs
pop
jl
test
adc
xor
mov
icebp
shrl
cs
push
mov
mov
push
bound
adc
in
sub
jns
fnstenv
lret
gs
outsl
lock
fstpl
pop
inc
popf
pushf
mov
push
and
add
outsl
xchg
cmp
xchg
orl
je
jno
or
sbb
ja
dec
mov
mov
jnp
xchg
cmp
imul
stc
fldl
mov
pop
ja
pop
or
sbb
das
lods
cmp
enter
leave
std
testb
aaa
push
rcll
ficoms
cmpsl
dec
inc
clc
pop
cmp
xchg
cld
xchg
lods
pop
xor
cmp
push
repz
and
inc
mul
jge
dec
jg
add
lahf
scas
pop
jp
mov
insl
jg
int3
int3
inc
ljmp
test
mov
das
mov
or
sub
mov
xchg
jae
mov
mov
and
mov
sbb
dec
rolb
fs
mov
outsb
aaa
shrl
ret
push
mov
mov
mov
das
xorl
and
mov
scas
jle
xchg
in
test
subps
pop
mov
pushf
in
xor
adc
pop
fisttpl
xchg
inc
sbb
inc
cmp
adc
scas
in
push
lea
hlt
pop
bound
outsl
sahf
and
out
hlt
xchg
pop
mov
add
mov
add
and
dec
mov
cmc
push
test
lods
and
bound
pop
mov
pop
jg
shll
mov
inc
les
mov
pop
mov
outsl
jnp
jle
loop
clc
fists
je
dec
dec
mov
add
jnp
dec
xchg
loope
scas
dec
mov
js
inc
jno
fiaddl
and
ds
pop
pusha
sub
subb
inc
std
test
mov
inc
es
mov
inc
cmp
sub
jns
jb
cmp
in
clc
inc
pop
add
into
stc
mov
mov
lock
call
sbb
sbb
jle
mov
sbb
xchg
dec
movsb
je
pop
pop
out
lds
xchg
dec
xchg
xchg
mov
rcrb
mov
xchg
mov
repz
jle
fidivrl
mov
xor
lretw
pop
jnp
bnd
jb
sub
pop
imul
andb
push
gs
test
push
sahf
es
lea
and
dec
cltd
in
fmull
aad
sbb
or
push
imul
push
inc
or
mov
push
clc
data16
rolb
inc
outsl
and
mov
and
cmp
insb
sbb
add
pop
jb
inc
pushl
movzwl
aaa
cmpsl
sti
jmp
fimuls
cmp
mov
cmp
mov
pop
xchg
mov
decl
ret
mov
jno
cs
fsub
fnstenv
adc
pop
push
jo
sarl
dec
adc
add
pop
sub
xor
mov
loop
rolb
in
or
fsubrl
lock
or
stos
pushl
push
push
bound
mov
xchg
mov
pop
mov
fsts
call
jp
lahf
fcmovnbe
sbb
adc
jmp
add
lds
mov
pop
jecxz
fldt
sbb
push
fiaddl
rorl
add
and
std
inc
aaa
cwtl
adc
jecxz
orl
inc
incl
test
jbe
jns
mov
fdivrs
push
movsl
sbb
sub
lea
aad
jnp
call
push
or
lods
movsl
push
add
pop
fldenv
cwtl
mov
add
inc
inc
xchg
add
test
incl
push
dec
push
inc
inc
dec
push
add
fwait
sub
adc
add
push
pop
inc
inc
sti
adc
and
and
sbb
and
add
ss
insl
insl
stos
mov
ja
je
push
movhps
mov
inc
mov
arpl
push
inc
inc
push
dec
imul
inc
inc
inc
inc
dec
push
add
addr16
pop
imul
dec
and
add
mov
adc
pop
addl
imulb
inc
adc
inc
mov
or
cld
insl
pop
imul
and
mov
inc
or
aaa
pop
cmp
and
sbb
sub
iret
inc
and
mov
xor
dec
pop
xor
mov
pop
in
mov
or
add
test
popa
imul
cmc
or
inc
ss
sbb
and
sub
mov
mov
lea
lods
mov
adc
scas
mov
cmp
lods
sbb
adc
adc
int
repz
mov
lods
mov
les
pop
cmp
idivl
push
xor
xor
inc
ss
adc
int
popf
aas
and
and
das
insb
insl
dec
pop
dec
outsb
inc
outsb
sarb
jbe
cmp
fstl
out
jae
cwtl
mov
sub
lea
xchg
jno
xchg
add
mov
mov
pop
cmp
gs
decl
divb
icebp
int3
imul
lret
mov
popf
lahf
lret
sbb
sbb
sti
mov
mov
ljmp
cmc
cmc
jb
jecxz
scas
cmp
addr16
dec
lea
xchg
xchg
mov
idiv
call
stos
mov
cmpsl
sub
pusha
sub
pusha
and
pop
addr16
push
fldenv
pop
jg
push
or
dec
fisubl
loop
lcall
mov
jns
add
pop
pushf
scas
ds
push
es
rorb
popa
call
sbb
in
ret
mov
cli
mov
rol
push
int
jge
ljmp
dec
cmc
mov
and
push
cmp
mov
idiv
jg
jp
fstpl
insb
jmp
or
xor
scas
mov
cmp
jmp
xchg
and
jge
das
pop
pushw
nop
lds
gs
jo
xor
lcall
mov
push
pop
ret
push
iret
mov
adc
dec
icebp
cmp
loopne
or
or
std
mov
aam
shll
push
lcall
jmp
in
xchg
in
inc
adc
mov
mov
mov
add
pushl
adc
lret
or
gs
xchg
in
push
jae
repnz
leave
cmpsb
mov
shl
cmp
xchg
mov
xchg
sahf
xchg
dec
xchg
fimuls
outsb
lcall
add
stos
mov
push
les
call
aas
inc
sub
cltd
dec
sbb
fmuls
mov
push
lcall
clc
movsl
loope
sbb
inc
les
push
shrb
add
fs
lods
sub
lcall
mov
xchg
stos
jne
xor
jmp
sub
out
mov
lret
and
cld
jle
ljmp
icebp
movl
add
jbe
or
and
sub
call
fisubrl
push
icebp
pop
mov
pusha
jmp
sbb
jg
fsubl
lods
cmpsb
arpl
int3
and
mov
fadds
pushl
inc
sar
outsl
lock
inc
std
je
push
sbb
cmp
and
adc
lods
mov
das
ficompl
mov
std
jbe
lea
movsl
xor
and
call
xorb
ljmp
jbe
cmp
pop
lret
dec
mov
xchg
cld
or
call
mov
add
arpl
ficompl
xchg
sub
inc
push
mov
pushl
dec
push
sbb
add
jne
inc
sahf
je
push
decl
aam
adc
sub
das
lock
mov
js
cmpsl
push
mov
call
sbb
pop
loopne
dec
rol
pop
loopne
cmc
outsb
cmp
cmpl
fbld
mov
push
gs
je
popf
cmpsl
sub
je
cmp
fistps
call
and
and
insl
in
sub
lods
mov
js
icebp
es
call
inc
jmp
jne
clc
mov
or
push
aam
xor
jmp
mov
pushl
dec
pusha
inc
rolb
divl
pop
cs
clc
pop
jle
jmp
and
jecxz
pop
inc
mov
into
cwtl
pop
aam
bound
ret
lock
hlt
jmp
negb
lcall
js
mov
cld
jmp
repnz
decl
std
outsb
adc
rorb
negl
mov
push
movsb
sti
mov
sub
cld
xchg
cmpsl
cmc
aam
cli
and
xor
pop
cli
jg
mov
js
sarb
cs
aas
js
pop
ret
push
loope
mov
ljmp
test
stos
nop
sub
int3
sbb
pop
test
mov
xchg
cmp
fcompl
aaa
jmp
daa
jnp
aaa
add
mov
imul
adc
mov
jns
push
incl
jae
or
imul
pop
orb
lcall
sarl
cmpsb
mov
mov
cwtl
call
mov
cmpsb
loopne
xor
lock
push
cmp
sahf
sarb
mov
sbb
cs
sbb
sbb
movsl
jbe
ret
xor
jne
fiadds
sub
mov
cmp
sub
sbb
pop
popf
fidivs
push
pushf
outsb
xchg
cmp
fwait
cltd
xor
cmp
ja
ds
cmp
push
xor
dec
cmpsb
les
icebp
cmp
cmp
xor
cli
jo
jmp
jg
mov
mov
and
add
ljmp
pushl
lods
mov
or
sbb
mov
xchg
and
das
jl
sbb
fucomi
pushl
bound
gs
scas
repz
mov
data16
cmp
aam
mov
ljmp
or
movsl
mov
jmp
cmp
dec
fbld
cmp
or
test
pop
hlt
pop
ss
jg
inc
out
mov
jg
pushl
xor
daa
fcompl
sbb
mov
or
sbb
decl
jle
pop
fildl
pusha
js
loop
push
and
xchg
ret
inc
mov
mov
std
mov
jne
adc
add
push
or
paddusb
rorl
fistl
call
gs
jns
ja
and
aas
ret
dec
add
adc
call
test
addl
jmp
adc
test
pop
outsb
pop
cltd
enter
mov
rorb
push
sbb
in
add
xor
in
xchg
add
sahf
decl
decl
outsl
cmpsl
iret
pop
mov
push
dec
ljmp
sahf
loopne
pushl
cmpl
mov
jmp
call
leave
and
xlat
xchg
adc
out
add
cmp
test
and
sbb
or
pop
xlat
shrl
cmp
shll
cmp
outsl
lock
pushl
cmp
jb
mov
test
mov
maskmovq
notl
jno
xchg
and
xchg
int
pop
or
pop
xlat
enter
mov
jae
fists
lods
mov
adc
adc
xchg
jmp
xchg
das
xor
xor
pop
fisubl
in
out
insl
jmp
cld
fcmove
in
dec
dec
mov
fistpll
bound
jl
sbb
fsts
mov
pop
fnsave
test
mov
decb
std
ljmp
shll
jne
roll
lret
call
xor
mov
test
scas
pop
sarb
mov
inc
pop
cli
loop
pushf
call
cmp
dec
popf
jns
xor
hlt
cmp
ljmp
icebp
mov
addb
data16
pop
subl
es
mov
sbb
dec
arpl
shr
mov
jp
jmp
into
adc
or
xor
sub
pop
cli
dec
cmc
fstps
aad
cld
sbb
sub
incl
jns
mov
push
fwait
pop
jle
mov
mov
insb
fs
insb
pop
data16
cmp
and
fistpll
insl
das
inc
mov
mov
stc
mov
in
sbb
push
xchg
dec
mov
ret
lret
mov
cmpsb
xor
test
mov
dec
dec
mov
mov
lret
inc
enter
movsb
or
inc
lcall
cmp
lcall
gs
divl
or
ret
fcoms
movsl
ljmp
sub
mov
das
lret
ljmp
mov
stos
dec
mov
test
mov
sarb
adc
in
push
call
mov
fucomip
mov
mov
cs
adc
ljmp
lods
pop
cld
ja
hlt
jno
cmc
cmp
xlat
push
icebp
sbb
inc
jns
outsl
int
or
mov
pop
pop
dec
mov
push
lahf
jae
popa
jecxz
mov
incl
jmp
cltd
pop
ljmp
into
out
out
cld
incb
movb
out
clc
ss
push
xchg
xchg
mov
pop
pushl
cli
in
add
push
bound
sbb
lret
lds
mov
pushf
sub
mov
ss
movhps
mov
ja
cmc
aaa
clc
fimuls
sbb
test
call
and
pop
inc
jle
pop
adc
mov
mov
cmpsb
icebp
pushl
push
mov
jae
and
sbb
aas
cmp
sub
jl
clc
ljmp
outsb
ss
cmpsl
mov
inc
cmp
stos
sub
sbb
call
repnz
mov
das
dec
addr16
loopne
adc
lcall
rolb
mov
push
pop
inc
popf
sti
push
cs
adc
cmp
sbb
mov
scas
fcomps
jl
or
sub
div
loopne
mov
aas
jns
iret
dec
xchg
sub
and
scas
sub
out
stos
add
xchg
pushl
mov
fildl
arpl
subb
jno
ss
mov
pop
cmp
cmp
or
out
jg
stc
fisttpl
mov
test
stos
in
in
push
xlat
shrb
or
pushf
in
decl
xor
stos
dec
lahf
iret
push
js
or
lret
dec
jl
loop
push
pop
lret
jg
jle
lea
sbb
push
jne
sub
enter
add
and
insb
enter
pushl
and
jns
xlat
cs
bound
xlat
in
imul
loop
dec
fwait
lods
mov
inc
scas
fsub
stos
xchg
stos
rclb
jmp
and
sbb
icebp
out
data16
nop
add
outsl
push
adc
adc
aam
jg
ljmp
test
jle
fimuls
jge
sbb
mov
and
repnz
jmp
test
mov
pushf
inc
jecxz
push
inc
outsb
cs
cmc
ljmp
popa
or
inc
stos
jmp
out
and
mov
xchg
adc
aas
mov
inc
outsl
icebp
add
inc
fld
aam
cli
daa
fs
push
sbb
push
or
push
push
cmp
jb
ja
jo
out
adc
and
inc
loopne
fucomip
mov
cmp
dec
push
lods
mov
add
mov
or
scas
jg
pushl
and
mov
mov
cs
add
push
dec
mov
pop
xchg
cli
loopne
jg
mov
pop
mov
ljmp
imull
mov
into
push
xor
dec
mov
and
or
mov
pushl
adc
mov
and
xchg
mov
mov
lret
sbb
loop
ljmp
mov
mov
pop
fwait
push
jg
stc
jbe
in
xchg
mov
push
popf
push
repz
push
iret
orb
repnz
movsb
push
das
test
jp
ljmp
lods
cmovle
out
sub
sbb
dec
dec
rclb
add
mov
push
movsb
and
jne
dec
and
cli
pop
xchg
mov
mov
cmp
jl
dec
ljmp
pop
sbb
hlt
lret
in
adc
pop
icebp
pop
sub
cmp
incl
repnz
inc
mov
lock
pop
xchg
lea
loop
andl
ljmp
movsb
cmp
clc
aas
imul
notl
sbb
test
cwtl
cwtl
dec
ds
lods
adc
cmp
ljmp
in
xchg
adc
cmp
dec
outsl
cld
pushl
cmc
pop
xchg
and
sub
test
mov
sbb
jae
jno
jne
xor
and
je
pop
or
adc
xchg
xchg
jecxz
incl
jg
mov
pop
jnp
dec
mov
sti
in
mov
decl
pushl
add
cs
loop
fdiv
js
ljmp
pop
sub
and
lds
push
shlb
add
dec
sbb
jge
call
xor
mov
aam
jg
mov
adc
push
cli
push
std
repz
testb
ret
imul
pop
movsl
lods
les
or
and
ficoml
imul
test
dec
cltd
addb
icebp
sub
inc
cmp
cmp
mov
pop
push
jecxz
pop
out
xchg
sub
sbb
in
push
pavgw
shrd
and
inc
loop
sub
jmp
sub
pop
push
std
xchg
in
test
cmp
fisttpll
scas
jp
fdivr
call
call
cmpsl
sarl
push
dec
xor
ja
xchg
mov
mov
loopne
in
roll
xlat
dec
inc
push
loop
adc
fbld
stos
mov
inc
mov
dec
cmp
pop
pop
int3
arpl
pop
add
orl
and
pop
sbb
add
out
push
aad
jl
xchg
imul
xchg
js
jae
dec
mov
adc
mov
push
lods
pushf
leave
lcall
cmp
push
xchg
jg
shr
xor
aam
leave
inc
in
xchg
jecxz
insb
inc
and
xchg
add
leave
xor
or
xchg
cmp
jp
js
dec
pop
xchg
sub
mov
sbb
subb
jb
loopne
mov
gs
arpl
add
push
jns
loop
fdivr
pop
test
in
add
mov
lcall
fstpl
subb
mov
outsl
je
dec
popf
jno
sub
incl
mov
addr16
cmc
mov
int
sub
push
mov
push
inc
pusha
jg
incl
daa
adc
out
pop
fmull
sub
adc
and
ljmp
cmc
out
aad
inc
push
les
xor
imul
lret
cld
mov
pop
fadds
adc
stos
pop
lods
pop
mov
ror
cs
enter
or
xchg
dec
popa
mov
ds
das
outsl
lcall
in
cltd
rcrb
adcl
adc
repz
testl
cld
jg
fs
outsl
adc
mov
out
mov
jle
into
mov
jecxz
cmp
adc
dec
int3
lret
jmp
push
stc
cli
rcrb
lods
sti
push
orl
lock
adc
mov
jmp
xchg
dec
cld
cmp
inc
nop
mov
inc
rcll
adc
aad
in
les
lea
lea
pop
test
mov
jb
jns
ljmp
aad
xor
add
addr16
dec
rcll
aam
mov
xchg
loope
or
lcall
enter
mov
fidivrs
xchg
sbb
arpl
aaa
pop
loop
mov
loop
mov
dec
and
test
mov
jl
cs
xchg
cmp
scas
shrb
add
jmp
fidivs
jg
jnp
stc
dec
std
cmp
push
pusha
pop
jl
mov
jmp
cmp
popf
shrb
icebp
shlb
addl
call
jo
loopne
loop
mov
mov
add
push
mov
dec
in
mov
inc
xor
lods
sub
jae
mov
ud0
call
insb
in
mov
sti
bound
inc
cwtl
xchg
call
and
push
push
xchg
movsl
adc
pop
outsl
hlt
fistpl
cmp
lret
push
aam
ljmp
or
test
xlat
mov
mov
fisttps
xlat
int3
into
lods
loopne
incl
ljmp
out
flds
mov
scas
sub
mov
lods
mov
sub
mov
xlat
pop
pusha
addr16
mov
mov
enter
adc
ret
popa
cmp
and
mov
pushf
mov
and
ljmp
mov
xor
jmp
das
pop
xor
or
sub
fmull
hlt
push
aam
sbb
xor
mov
sbb
out
dec
lea
mov
fcoml
sbb
jecxz
outsl
jno
pop
xor
push
dec
ret
orb
adc
mov
pop
sub
push
addr16
cmp
add
call
mov
and
xchg
mov
loopne
scas
mov
shrl
push
mov
gs
add
mov
xchg
sub
fldl
xchg
jo
lcall
push
xchg
orb
mov
xchg
das
movsb
arpl
ret
xor
mov
xchg
add
shl
push
xor
imul
jg
inc
sbb
and
jl
stos
cmp
sub
pop
jl
jecxz
fistpl
pop
xor
aaa
decb
daa
mov
add
outsl
pop
test
mov
outsl
cld
decl
cmp
stc
xchg
jecxz
push
jb
jmp
aam
and
lea
decl
inc
sbb
clc
push
jg
pop
and
clc
pusha
xchg
adc
mov
icebp
lret
xchg
jecxz,pt
jb,pt
and
cld
out
sub
pushf
outsl
xchg
sbb
cwtl
bound
testl
adc
mov
inc
stos
in
xor
mov
sbb
pop
pop
dec
mov
push
pop
fbstp
add
ljmp
xor
xor
sbb
sub
jg
lds
inc
imulb
mov
cld
jmp
push
repz
sarb
push
fistpll
mull
pop
jecxz
pop
ja
pop
in
testb
xchg
fcomip
mov
loope
xor
iret
mov
xor
add
xor
fucomip
pop
jnp
aam
sbbl
jns
leave
jmp
lcall
out
pop
inc
cmp
xor
inc
cwtl
shlb
cmpsb
inc
cwtl
xor
lea
sbb
xchg
jp
sub
jge
add
push
ss
pop
mov
pop
xor
sbb
and
cmp
fnstsw
pushl
int3
sub
mov
jns
mov
xadd
mov
sti
mov
cmp
jg
fnstenv
mov
push
scas
insl
loop
rorl
in
test
jg
cmp
mov
cmp
lock
stos
add
cmp
adc
out
aaa
mov
adc
lea
sub
sub
jg
jo
dec
inc
sub
pop
mov
ds
outsl
xchg
add
std
ffreep
decl
dec
mov
ljmp
cli
movsl
mov
xor
pop
ljmp
shld
rol
cmp
mov
fwait
icebp
fwait
sub
push
and
cmc
jg
jb
xor
cmc
jno
je
push
fwait
movsl
jne
int3
dec
mov
cmc
mov
repz
push
mov
pop
cwtl
imul
push
lods
mov
mov
xor
push
lds
and
add
dec
pop
sub
mov
xchg
or
iret
jecxz
test
rol
mov
int3
xor
mov
pop
test
lods
pushl
les
fildll
lods
mov
insb
lods
iret
pushf
mov
out
loopne,pn
jmp
dec
xchg
stos
and
scas
adc
hlt
jle
jp
bound
push
fistps
mov
jmp
lods
inc
in
jp
cwtl
shl
ret
dec
out
stos
mov
out
xor
sbb
xchg
push
xchg
call
sahf
sti
rcrl
lods
jbe
imul
jnp
xor
call
das
cmc
aaa
clc
mov
sti
fists
mov
or
jg
mov
sti
mov
clc
sbb
andb
inc
in
test
push
mov
loop
or
divb
and
xchg
cmc
stc
sub
out
inc
sub
pop
ljmp
in
jp
or
enter
jno
push
bound
push
call
popa
aaa
testb
clc
inc
sub
ss
pop
lds
mov
xchg
pop
xchg
sti
in
mov
scas
lahf
inc
pop
mov
out
rcrl
push
mov
leave
test
and
cmp
push
into
mov
dec
std
sbb
dec
jge
fwait
bswap
mov
add
stc
aas
in
ffreep
dec
in
outsl
in
lcall
fld1
in
shlb
mov
xor
stc
jge
or
cmp
sbb
push
and
out
fiadds
jnp
ret
pop
sar
xchg
insb
push
inc
adc
mov
stos
push
lods
mov
xchg
or
push
xchg
adc
loopne
fmull
pop
sub
mov
shll
adc
add
dec
ljmp
fldcw
inc
mov
movsb
or
incl
pop
sub
loope
addr16
jl
jae
push
mov
push
fcmovnbe
lcall
cld
mov
inc
aad
jnp
scas
mov
dec
lahf
dec
or
mov
mov
fs
pop
addb
movsl
sub
int
pushf
shl
lea
scas
les
or
inc
rcll
in
repnz
stos
jge
xor
jae
orb
xchg
pop
mov
cld
push
pop
push
xor
movsl
dec
jno
decl
xchg
test
sbb
lock
dec
sbb
lret
jp
jp
lods
xor
sbb
and
jmp
xchg
ss
lds
mov
arpl
cmp
sub
rcrb
incl
fistps
adc
sysret
xchg
push
mov
and
xchg
pop
and
jnp
add
pop
jle
pop
mov
sub
ret
mov
mov
sbb
rorb
sub
idivl
call
gs
sbb
stos
mov
push
inc
les
test
push
pusha
aad
scas
cld
xchg
out
idivb
jmp
xchg
cmpsl
jg
leave
ret
jb
roll
out
dec
jbe
jnp
xor
mov
sbb
rcll
into
decl
aam
mov
aam
pushf
adc
fcmove
mov
sti
popf
pop
sbb
sub
int3
idiv
add
jb
frstor
xor
fucomip
call
arpl
scas
hlt
mov
mov
cwtl
aaa
mov
movsb
fisttps
loope
xchg
jp
lcall
call
mov
pop
sbb
jmp
push
push
pop
loop
jle
sub
sbbl
test
mov
daa
or
hlt
ret
in
cli
mov
mov
icebp
outsb
scas
incl
pop
jge
inc
jbe
mov
pop
xor
mov
in
out
jp
jo
push
subb
sbbl
arpl
fistl
dec
add
xchg
dec
int3
sub
add
sub
jbe
call
dec
inc
arpl
xor
xchg
mov
jae
pop
jns
or
outsb
int3
pop
cmp
mov
pop
std
call
out
stos
negb
inc
popa
cmpsl
and
stos
push
imul
icebp
xor
push
sbb
push
inc
xchg
iret
mov
cld
dec
jge
sbb
into
fwait
xor
jns
adc
pop
mov
jnp
mov
cmp
outsb
arpl
mov
into
adc
pop
fcomi
out
mov
scas
cmc
mov
outsl
hlt
incl
js
xlat
and
movsb
adc
clc
jg
jmp
ja
ret
fwait
repz
data16
fistps
lret
imul
push
jb
dec
add
cmpsb
and
xchg
loop
pop
lret
mov
andb
push
mov
add
push
add
sbb
jae
sbb
lret
xor
or
popa
movsb
mov
loop
mov
fnstsw
mov
mov
les
mov
pusha
in
fs
mov
adc
loope
aad
inc
cmp
xchg
lret
inc
lock
rcr
clc
sbb
aaa
sbb
adc
jns
mov
loopne
xor
fistpll
stc
fiaddl
movb
hlt
mov
decl
sahf
clc
imul
jecxz
pusha
pop
jle
mov
cli
inc
jl
mov
xor
call
cli
mov
mov
lcall
inc
or
scas
lock
in
ljmp
decl
xchg
push
arpl
xchg
mov
mov
jle
and
push
mov
ljmp
roll
fwait
pop
jmp
xor
call
mov
jnp
xor
xor
mov
loope
pop
ljmp
adc
fldl
pop
lret
fs
out
jnp
mov
cmp
jg
repnz
movsb
xor
xor
and
inc
insl
loopne
ljmp
leave
cpuid
je
loope
outsl
icebp
shlb
sub
rorl
pop
out
push
insb
sets
jg
fidivrs
fidivrl
cmp
out
scas
lods
sti
js
xchg
cmc
pushl
js
inc
sahf
xor
jnp
rcl
clc
jge
cmc
aas
loop
jle
push
jmp
icebp
mov
repz
inc
mov
sbb
add
push
cs
lea
mov
ja
sbb
and
pop
ljmp
push
js
sarl
lahf
in
sub
pop
mov
lcall
jae
adc
jg
movsl
aaa
lcall
adc
stos
outsl
inc
inc
decl
movsb
rclb
xchg
mov
repz
cmp
cmc
sti
iret
ss
mov
repz
lds
imul
push
jmp
push
pushl
mov
lods
adc
fiadds
mov
mov
mov
and
and
shlb
popa
fisttps
jmp
loop
mov
fs
out
popf
inc
lahf
lds
adc
jmp
push
fnstsw
sub
jnp
jne
or
cltd
iret
dec
mov
inc
ds
mov
mov
xchg
pushf
and
cmc
xchg
mov
mov
push
mov
imul
cli
outsl
jno
lcall
fistpll
gs
or
loopne
ljmp
jl
mov
out
xor
lds
mov
fildll
mov
mov
into
mov
dec
jg
outsl
std
jg
loopne
dec
dec
add
xor
pushf
sti
jne
cmc
fcoml
pop
fistpll
iret
add
stc
pop
xor
iret
push
ret
insl
sbb
bound
add
jecxz
ljmp
call
aaa
sbb
test
dec
add
pop
xchg
pop
out
addr16
cli
movsl
xchg
mov
lods
idiv
jmp
sub
pop
mov
mov
jb
lcall
and
xchg
push
jg
shlb
add
or
test
push
xchg
in
call
out
dec
mov
sbb
subl
push
stc
pop
sar
call
fisubl
outsb
fsubrs
cmc
xchg
sub
sbb
ds
int3
dec
shrl
pop
pop
sbb
lock
cmp
jmp
pop
dec
mov
pushf
or
lcall
jae
nop
sti
jmp
cli
xchg
adc
pop
cmp
dec
lret
xor
mov
xchg
out
sub
outsl
icebp
sbb
popa
mov
pop
sub
out
pop
jge
pop
decl
push
cmp
and
xor
adc
scas
mov
out
ds
in
push
cwtl
cmp
movsb
sub
xchg
clc
cwtl
clc
xchg
push
cmpsb
mov
ljmp
vpcmpeqw
push
rorb
inc
fs
inc
lcall
popa
or
es
pushf
loopne
inc
in
and
les
rcll
fisttps
sub
ss
push
insb
leave
dec
sub
push
push
ljmp
push
jno
test
sub
mov
adcb
ljmp
clc
pop
cmp
mov
xor
adc
imul
ljmp
push
movsl
sbb
out
push
cs
sti
loope
xor
out
inc
pop
pop
inc
bound
ret
jmp
jle
inc
jl
cmp
pusha
out
push
push
sub
and
or
aad
xchg
in
inc
mov
jns
push
sbbb
sahf
inc
cmp
lods
lcall
pop
push
addr16
sub
fs
imul
jnp
sbb
pusha
jmp
pop
xchg
idivl
outsl
jb
or
sbb
icebp
inc
arpl
stos
ficomps
sub
and
jbe
adc
jge
mov
mov
movsl
pop
push
cmp
mov
fxch
mov
add
push
test
pop
loop
push
leave
in
xor
and
inc
test
pop
pop
pusha
arpl
pop
mov
pop
cmp
mov
into
repz
stc
nop
in
imul
fcmovnb
dec
movl
loop
lcall
jno
jle
xchg
mov
sub
je
adc
jnp
in
in
call
lods
cmp
cmp
pop
test
adc
cwtl
je
imul
lcall
jne
lods
sub
push
fdivl
insl
loope
inc
push
jl
adc
ds
jg
loopne
int
in
shlb
xor
popa
lret
roll
xor
mov
dec
insl
icebp
mov
loope
adc
pop
jbe
lcall
in
inc
in
cwtl
dec
std
xor
mov
fists
nop
loopne
adc
fisttps
xchg
push
jns
inc
ss
movsl
pop
xor
test
sti
call
cli
call
xor
popa
cmp
mov
stos
xor
mov
xchg
jbe
out
lock
mov
push
pushf
or
daa
sbb
incl
scas
call
cld
xor
sbb
idiv
incl
in
dec
mov
leave
inc
shlb
fwait
mov
js
fimuls
std
incl
aaa
jns
jp
xorl
jbe
shl
pop
dec
jle
jno
and
aaa
sbb
pop
int3
inc
stos
cmc
inc
rcll
xor
xchg
dec
pushf
pop
andl
std
jp
mov
adc
das
call
mov
pop
sub
loopne
sar
fisubrs
adc
dec
pop
cs
sbb
lcall
ret
iret
lcall
jo
stc
and
sub
int
dec
leave
ljmp
decl
fsubs
mov
xchg
arpl
pop
popa
stos
rorb
popa
mov
icebp
xchg
inc
out
jmp
cmpsb
sbbb
cmp
push
into
xchg
push
inc
or
daa
lea
sbb
xchg
and
adc
jbe
aaa
cli
test
xchg
cmpsb
lret
lret
push
test
stos
addr16
and
lods
incl
enter
xchg
pop
sub
add
or
add
jg
jbe
pop
mov
cmp
xchg
lcall
aas
data16
jge
inc
cmp
lcall
xchg
loopne
and
fadds
bound
mov
push
inc
je
mov
dec
sbbl
out
insl
sub
jnp
jg
jg
push
mov
inc
sbb
fbld
dec
test
jbe
fiaddl
test
decl
xchg
push
jl
out
mov
sub
scas
loop
mov
add
jg
mov
int
dec
test
xchg
insb
movsl
xchg
enter
xchg
lcall
push
mov
dec
mov
ret
jp
and
fistpl
incl
adc
adc
shlb
mov
aaa
popa
jno
push
jg
xchg
lds
inc
call
push
pushf
pop
test
or
in
std
xchg
pushf
out
sub
stc
daa
mov
xchg
popf
icebp
in
push
mov
cmp
push
nop
out
pushf
repz
stc
mov
cwtl
shlb
xchg
das
lock
fnstsw
jp
out
mov
stos
insl
lcall
lcall
sub
cli
mov
sbb
mov
jno
fidivl
xor
mov
push
pop
rcrb
cmp
inc
cmp
inc
cmp
dec
lcall
ret
sub
xchg
push
outsl
cld
pop
call
adc
sub
into
mov
ljmp
cld
data16
dec
stos
iret
cmpsl
xor
stos
jns
pop
sbb
decl
mov
or
inc
add
addr16
xchg
xchg
mov
mov
stos
jbe
mov
movsb
mov
or
dec
js
add
adc
cmp
fmuls
jl
adc
lret
std
dec
cld
popa
fidivrs
mov
adc
dec
out
call
imul
imul
into
lret
jmp
or
pop
cmp
pushl
clc
mov
lds
mov
xchg
dec
push
repz
repz
jmp
in
xchg
add
ficomps
orl
jmp
push
push
test
mov
subl
test
inc
pop
adc
gs
mov
mov
scas
inc
push
out
cmp
dec
pop
outsb
incl
mov
pop
sbb
pop
cmp
sub
clc
in
pop
adc
nop
sub
movsb
fcos
inc
das
sahf
shl
aaa
adc
addr16
cmp
call
pushl
repnz
mov
cmp
pop
xchg
fs
lea
fldt
sub
outsb
mov
inc
ret
inc
pop
loopne
dec
jle
mov
jl
xchg
leave
lcall
pop
adc
iret
repnz
jbe
lea
adc
jns
sti
cwtl
add
ljmp
ficoml
add
dec
cltd
mov
lahf
mov
outsl
sbb
pop
mov
lea
subl
pusha
int3
push
out
insb
ljmp
mov
mov
jne
adc
loopne
mov
xchg
in
and
jge
jne
add
int3
jmp
sahf
mov
jmp
fcmovu
push
aad
aas
in
and
cmp
int
cld
sub
mov
jp
fcmovb
cmp
mov
cltd
lods
jne
ljmp
push
rcll
arpl
inc
dec
test
or
test
ret
adc
cmp
nop
movb
inc
loope
mov
incl
lret
in
sarb
cltd
push
divb
negb
andl
test
insl
nop
jmp
sub
lcall
pusha
icebp
enter
dec
jecxz
and
cmp
inc
and
test
sahf
ss
mov
popa
ss
ret
ja
popf
es
int3
inc
adc
jle
das
std
fistpll
jmp
lds
push
inc
mov
std
sbb
sub
dec
pop
das
into
pusha
in
sbb
inc
cmp
aaa
clc
jge
cs
daa
push
jnp
cltd
test
std
decl
jp
fistl
push
sbb
xchg
xor
lock
out
ljmp
cmpsl
cld
inc
pop
gs
in
jp
pop
scas
testl
cmpsb
xchg
arpl
xchg
cli
mov
pusha
sub
mov
lock
jg
pop
and
and
imul
add
mov
ss
pop
insl
call
jmp
mov
jns
stos
mov
and
decl
push
fcompl
push
movsb
mov
outsb
stos
xchg
mov
popf
sbb
push
jns
cwtl
jl
lahf
or
decl
fwait
or
aad
leave
loopne
and
push
xchg
cli
lea
sbb
xchg
xlat
add
outsb
add
ljmp
push
inc
inc
pushf
cmpb
xor
sub
fninit
pushl
or
lods
and
and
test
xor
in
jbe
test
xor
rol
or
aam
call
pop
jp
jns
cli
insl
pushf
scas
xchg
lds
out
mov
jecxz
loopne
jecxz
fwait
mov
pop
fimuls
into
pop
gs
ljmp
int3
fadd
pop
test
push
pop
sub
sub
pushl
dec
sub
xchg
dec
lea
jno
adc
add
mov
out
es
je
loop
out
lods
add
push
ficoml
mov
and
push
add
dec
push
sbb
sti
or
pushl
sbb
addr16
mov
ret
out
mov
jg
push
test
push
jmp
sub
imul
jp
cwtl
aaa
pushf
mov
lods
call
push
mov
into
cmp
adc
pop
cwtl
xor
aam
pop
inc
outsl
decl
adc
sub
jg
call
loope
xor
mov
mov
enter
cmp
enter
adc
lahf
sbb
nop
mov
dec
and
pop
cli
lods
and
in
repz
jae
inc
jno
lds
in
test
push
jns
adc
push
sub
jbe
mov
jl
xor
dec
mov
or
int
cld
jnp
jmp
dec
out
popl
cmc
xor
jecxz
rcll
push
xor
xor
insb
cltd
setl
movsl
rolb
fiadds
push
xor
idivl
jmp
mov
cwtl
inc
pop
sub
enter
xchg
inc
std
test
das
ljmp
gs
stc
push
cld
jp
jl
out
xor
mov
test
inc
lret
xlat
into
cmp
idiv
inc
fdivrp
enter
mov
lock
xor
imul
mov
das
addl
sbb
out
pusha
jl
es
das
mov
adc
cmp
test
iretw
cmp
in
sub
add
inc
sbb
push
hlt
arpl
cmp
lcall
xor
mov
arpl
stos
inc
insl
xor
sub
sar
jmp
popf
jbe
cs
sbbb
add
jge
xor
jnp
popf
or
xchg
sub
lock
stc
ljmp
into
pop
sub
sub
jno
inc
test
push
jnp
inc
pop
jmp
in
jecxz
push
mov
pop
or
ljmp
fsubrp
fs
gs
ss
dec
movb
jg
test
cmp
fdivl
test
jg
xchg
push
jg
popa
pusha
lods
insb
insb
roll
xchg
cmpsl
pop
aaa
push
jno
xor
xor
ljmp
add
ja
out
cld
or
or
lret
or
in
popa
cmpsb
xor
inc
jecxz
insb
cmc
sbb
lea
outsl
std
decl
and
jno
mov
mov
add
jg
scas
xor
in
mov
fnstsw
push
loope
xor
ja
adc
or
adc
cli
mov
popa
adc
sti
and
push
jb
incl
pcmpeqd
lcall
jl
jns
adcl
int3
push
cwtl
fs
rcrb
xadd
jo
push
xor
loopne
decl
cmc
cmp
and
mov
inc
bound
push
mov
sub
dec
daa
jnp
xchg
iret
sbb
out
mov
out
jg
jg
repnz
jg
push
jmp
dec
push
mov
inc
adc
fsts
sahf
pop
das
imul
cmp
jp
out
mov
jb
jg
pop
and
fwait
bound
je
insl
jmp
decl
sub
shll
pusha
fcmove
fdivl
xor
cli
outsl
icebp
adc
xchg
cmc
mov
and
not
call
movsl
pop
or
pop
pop
stos
adc
cmc
popf
jo
pop
and
shll
shll
sub
mov
pop
mov
adc
cli
mov
lret
pop
jae
mov
push
jo
push
into
cli
incl
cmp
dec
rorb
movsb
data16
mov
mov
shll
stos
dec
pop
pop
loopne
inc
sub
jge
leave
fs
pop
je
xor
jmp
dec
rcrb
mov
sub
adc
push
pop
push
sub
mov
pop
xchg
jg
mov
hlt
out
push
or
lret
cmp
test
mov
mov
inc
mov
or
pop
pop
out
mov
jg
adc
out
ss
add
dec
jbe
lcall
cwtl
adc
jl
xor
add
adc
fadd
incl
cmp
and
mov
add
jo
fwait
mov
xchg
test
lds
enter
aam
pop
or
sti
pop
mov
decl
or
pop
jg
stos
sbb
loopne
daa
das
jmp
aaa
mov
push
xor
add
adc
test
xor
add
xchg
aad
cmc
lahf
les
xor
out
lahf
roll
lret
mov
stos
in
imul
insl
mov
and
je
pop
cli
sbb
and
daa
push
pushl
insb
cwtl
aam
outsb
dec
mov
and
fistpll
or
inc
adcl
adc
xor
push
ljmp
pop
xchg
mov
mov
lock
jg
mov
ja
rcrb
sbb
rcl
mov
jmp
push
incl
mov
xchg
mov
jno
adcl
pop
clc
lcall
jb
mov
jg
dec
or
dec
aad
jg
lods
scas
push
jae
pop
fidivs
pop
fsub
cwtl
or
movsb
in
in
adc
or
sbb
cmp
jp
in
imul
mov
incl
cs
push
mov
scas
fmull
sbb
cld
pushl
xchg
ja
sub
bound
mov
jp
sbb
lcall
mov
sahf
and
popf
stos
sub
cmpsl
xorb
or
test
incl
test
add
popa
imul
jl
gs
pop
ljmp
pop
lods
jnp
in
mov
push
mov
and
ljmp
jge
scas
cmp
xor
pop
and
and
loop
call
adc
frstor
sarb
data16
hlt
pusha
sub
jg
jno
enter
and
loope
in
insb
ljmp
inc
jne
push
mov
and
fs
std
cmc
aad
xchg
mov
pop
dec
push
ss
mov
cmp
inc
jmp
inc
push
pop
cmc
or
mov
ljmp
push
insb
add
xor
mov
mov
mov
jp
das
icebp
push
inc
mov
jmp
and
call
pop
xchg
sbb
mov
or
movsl
lods
or
mov
pop
lock
in
jle
mov
fsubrs
lods
xorl
pop
loopne
pop
stos
call
xchg
cmp
negb
and
inc
mov
mov
push
sub
jmp
add
int
mov
loope
sbb
pushf
jmp
lods
pushf
jg
jbe
dec
les
outsb
xor
in
xor
fldt
xor
pop
xor
pop
les
or
jg
mov
sub
pop
jo
scas
sub
pop
xor
and
mov
out
mov
mov
lock
or
pop
lahf
lods
lret
jb
or
xchg
ljmp
ficoms
insl
out
test
in
push
lds
sti
sbb
pop
dec
xchg
jle
ror
mov
int3
push
scas
push
out
add
xchg
in
fdivrp
jg
mov
filds
push
ljmp
mov
ds
push
shr
incl
aaa
cwtl
jecxz
pop
mov
jle
cmpsl
std
daa
xchg
testl
mov
xchg
js
cmp
loope
scas
das
mov
push
push
xor
sarl
add
jmp
decl
std
pop
cs
jecxz
adc
xor
push
popa
sub
lahf
xchg
sar
ljmp
cmp
mov
dec
cmp
dec
push
sbb
push
cmpsl
and
repnz
fs
jbe
add
xchg
lret
outsl
lock
fistpll
lods
push
sahf
imul
shlb
sbb
incl
ret
adc
scas
xchg
lret
sbb
repnz
and
mov
jo
mov
std
pushl
cmc
repz
jge
mov
dec
lret
cmp
lret
pop
sbb
mov
aaa
lret
loopne
rorl
jns
outsb
out
mov
mov
outsb
lock
inc
ficoms
mov
mov
dec
add
sub
jnp
loop
decl
adc
xchg
adc
ret
sub
pop
lods
jno
lcall
outsb
pop
push
and
and
hlt
cmp
leave
inc
shll
in
add
outsl
fmull
push
lret
stos
ss
outsl
mov
pusha
add
jl
les
mov
scas
fiaddl
pop
dec
pop
add
or
cmpsb
test
xchg
leave
aam
lahf
pop
xor
inc
mov
pop
outsb
repz
sub
decl
fstpl
cli
hlt
adc
and
movsb
inc
sbb
pop
mov
or
dec
std
cld
das
sar
xor
add
xchg
sub
ja
aad
jecxz
mul
fs
mov
fadd
push
cmp
mov
mov
into
push
mov
add
out
xchg
adc
sbb
aas
movsl
and
iret
call
sbb
xchg
jg
ret
adc
or
mov
lods
outsl
mov
jg
jnp
aas
es
or
cmp
mov
jl
loop
or
dec
push
mov
push
push
lcall
or
inc
daa
sbb
movsb
aad
mov
cmp
add
jo
pop
sub
daa
lret
ljmp
decl
mov
jl
cmp
inc
xchg
mov
pop
mov
lahf
push
fnstsw
ret
movsl
lods
rcl
lods
rclb
jmp
jno
push
pop
std
inc
pop
pop
xchg
pop
pop
popa
adc
clc
fildll
or
sbbb
mov
mov
loope
adc
adc
rorl
jl
sub
push
inc
jmp
mov
fiaddl
loope
incb
mov
test
cmp
mov
xchg
and
pop
jne
lods
inc
adc
in
lods
jmp
into
call
cmp
and
sbb
xchg
jg
mov
aam
cwtl
leave
pop
sbb
mov
adc
repz
mov
decb
jmp
pusha
sbb
jbe
mov
mov
rol
test
inc
xchg
repnz
xlat
sub
pushl
lods
decl
imul
leave
jne
fldl
pushl
aaa
and
xchg
ret
add
inc
aaa
push
jns
outsl
lock
clc
out
xor
cmc
inc
test
movsl
jnp
and
lcall
pushl
dec
sbb
je
dec
jecxz
addr16
inc
and
xor
lods
dec
imul
add
pop
std
outsl
xor
mov
fs
xchg
movb
aam
xor
loop
mov
push
adc
add
mov
mov
mov
ljmp
iret
lods
sbb
or
xchg
dec
push
jmp
idivl
pop
jecxz
mov
call
scas
and
aas
mov
int
arpl
jmp
and
jmp
ret
pop
movsb
and
jg
cmp
jnp
call
out
cld
lods
mov
ljmp
inc
cltd
imul
scas
mov
in
or
add
fists
mov
push
adc
mov
imul
sti
mov
fucom
jg
loop
lret
pop
cmp
sar
sub
mov
in
pop
ret
mov
sahf
sbb
incl
aam
add
jmp
imul
xchg
ja
inc
pushf
xor
push
mov
aaa
rcrl
jmp
add
mov
rcll
pop
fwait
scas
xchg
adc
pop
ljmp
shr
jmp
insl
dec
leave
mov
inc
arpl
decl
stos
movsb
pushf
movsl
jle
xor
movsb
rcrb
mov
xchg
xor
jmp
and
out
push
imulb
pop
rcll
pop
nop
add
pop
mov
stos
adc
arpl
imul
loope
sbb
sbb
int
inc
pop
xor
sbb
in
loope
and
jmp
aaa
mov
mov
pop
inc
scas
inc
out
imul
insl
mov
mov
inc
adc
jno
inc
adc
sub
and
or
pop
clc
mov
out
lcall
jecxz
push
orl
jl
das
mov
imul
std
movsb
xchg
popa
filds
dec
ljmp
mov
add
ljmp
pop
lods
dec
pop
inc
pop
pushl
test
nop
adc
mov
insb
sub
mov
sbbl
imul
mov
cltd
push
dec
ljmp
hlt
mov
push
fmull
sbb
sub
lcall
pop
adc
pop
inc
push
cltd
xor
icebp
sbb
test
push
js
xchg
adcb
into
out
lods
sbb
cli
out
push
std
or
pop
in
pop
ret
divl
mov
mov
mov
mov
lods
dec
out
lea
dec
setns
pop
xor
iret
or
mov
mov
out
addr16
sub
cmp
stos
pop
call
xor
gs
xchg
outsl
cmpsl
std
loopne
pop
jg
sub
or
mov
outsl
lods
push
das
icebp
jmp
ljmp
push
inc
add
cs
fs
lock
inc
sti
in
out
ret
popf
mov
or
add
mov
das
mov
call
push
arpl
bound
sbb
jbe
pop
add
mov
lret
pushf
int
and
scas
adc
test
outsl
xor
adc
shl
adcb
pop
jns
pop
test
rcrb
data16
add
xchg
add
inc
add
test
imul
mov
pop
fidivrl
int3
push
mov
or
mov
movsl
mov
test
stc
daa
inc
mov
mov
jecxz
lret
mov
addr16
leave
mov
mov
mov
and
dec
mov
cmp
and
pop
inc
cld
jg
les
lock
cmp
jg
jg
add
cld
xchg
lods
inc
sub
jne
mov
cmp
xor
jbe
cld
mulb
push
or
mov
test
pop
popa
out
fimull
lcall
fistps
sarl
test
ss
adc
sbb
cmp
pop
cli
and
adc
push
std
cmpsb
jo
fadd
cmc
imul
and
jg
aaa
ja
mov
imull
insb
loope
sarb
mov
inc
xchg
in
popa
mov
in
inc
cwtl
xchg
leave
gs
in
out
xor
leave
in
xchg
xor
mov
xor
pop
repz
adc
mov
xchg
aas
mov
sub
call
mov
mov
test
inc
jb
add
orb
adc
hlt
jge
test
aad
out
xor
xchg
out
insl
pop
scas
pushl
add
jmp
iret
jecxz
jb
int
das
cmp
adc
decl
sti
daa
xchg
shll
popf
push
and
pop
add
pushl
jp
mov
adc
popf
inc
pop
push
popa
xor
orl
adc
mov
cli
out
sbb
add
xchg
fwait
jp
les
test
inc
adc
push
mov
adc
lock
fistpl
test
jp
pop
cmp
push
sbb
lods
sub
movsb
call
or
test
aad
xchg
js
shlb
hlt
mov
rolb
add
jg
das
call
xor
push
pop
mov
outsb
inc
lcall
xchg
and
mov
mov
rolb
xor
lret
mov
pop
pop
clc
mov
dec
push
cli
ds
inc
mov
jg
clc
clc
or
jne
and
xlat
xchg
push
and
repz
imul
push
aad
sar
lock
ljmp
stc
and
sbb
cmc
inc
pop
jecxz
repnz
or
sub
lods
cmp
mov
xchg
aad
dec
scas
scas
mov
insl
or
out
xor
jg
dec
int
xchg
mov
aam
test
jecxz
pop
jb
out
aaa
adc
aaa
mov
repnz
and
scas
mov
mov
xchg
mov
mov
mov
push
or
xchg
out
jne
incl
pxor
sub
addr16
push
iret
pop
sbb
mov
adc
xor
cmc
test
in
fstpl
incb
and
ds
inc
stc
insl
outsl
hlt
jg
ret
rclb
pop
les
pop
cvttps2pi
jg
incl
cmp
adc
fwait
mov
add
or
pop
adc
mov
cmp
idiv
mov
mov
adcl
cmp
jg
mov
pop
sub
insb
in
fnstsw
mov
push
xchg
sti
imul
inc
xchg
mov
xlat
or
jmp
xor
aad
cmp
ss
pop
lock
fs
out
mov
decl
test
push
mov
sub
mov
mov
push
pushf
adc
sub
jg
mov
cmp
insl
push
mov
stos
jb
mov
in
dec
js
sub
dec
adc
fidivrs
filds
out
dec
stos
shl
sub
shl
adc
add
aas
ds
adc
and
pop
fldcw
mov
xor
ds
dec
lret
lds
mov
jg
in
lcall
sub
mov
push
xchg
insl
jg
pushl
jle
cmpsl
fisttpll
jge
mov
mov
dec
subb
xchg
pop
idivl
jl
cmpsb
sar
mov
mov
adc
ja
lcall
mov
ljmp
cmc
dec
les
sbb
xchg
xor
mov
sbb
mov
jne
fs
in
jnp
fiaddl
mov
lock
ljmp
adc
add
mov
cmp
mov
rolb
fs
xchg
aaa
clc
das
rorb
mov
push
xchg
or
inc
sbb
add
ljmp
insl
sbb
lds
clc
lret
and
cmp
mov
aad
mov
jb
push
in
test
jl
loope
xor
shl
push
jg
push
ret
push
stos
push
into
mov
movsl
popa
pusha
jmp
xchg
loopne
push
ficomps
movsl
icebp
out
push
cmp
sbb
cmp
or
fxtract
or
nop
dec
adc
and
stc
pushl
clc
call
jo
mov
adc
jns
arpl
mov
xor
jae
call
mov
andl
mov
jg
push
ss
cwtl
push
frstpm(287
ljmp
sub
push
push
sarl
pop
push
ret
mov
shl
sbb
push
or
sbb
test
stos
call
decl
pop
mov
lea
sbb
test
incl
dec
jne
mov
int
cmp
sub
loop
scas
push
aad
movsl
into
sbb
mov
push
dec
in
in
decl
push
or
call
push
int
dec
fmuls
and
out
cli
jg
push
jbe
add
sub
outsb
lods
das
cmc
fildll
push
mov
push
cmp
dec
pop
call
sbb
jnp
pop
cli
repnz
testb
push
aam
or
add
ficoms
sub
lahf
inc
iret
ret
fldcw
push
cld
add
mov
xor
jl
into
pop
cmp
mov
and
fs
test
adc
mov
dec
leave
jmp
adc
shr
insb
ljmp
or
loop
push
jg
inc
inc
stos
and
jb
loope
or
push
incl
dec
add
push
dec
sub
stos
scas
outsl
xchg
jno
lods
test
ljmp
incl
inc
sarb
dec
sbb
xlat
push
out
cmc
mov
mov
int
icebp
add
xor
jnp
xor
addr16
pop
push
and
stos
call
popa
or
decl
fld
leave
and
movsb
lods
mov
and
xor
push
out
cmp
jno
sbb
push
mov
shl
pop
xchg
mov
xchg
or
and
adc
inc
decl
outsb
sbbl
xchg
add
movhps
jmp
cmp
xchg
add
sbb
rolb
iret
sub
mov
inc
in
push
inc
jno
std
mov
dec
mov
push
mov
jecxz
mov
sub
inc
popf
inc
sub
aaa
jle
push
or
in
sbb
fnstcw
pushl
fadd
mov
lret
sti
lods
jo
ja
mov
incl
mov
hlt
pop
xchg
jle
adcb
or
jg
mov
dec
outsb
mov
jnp
js
pop
test
rclb
call
sub
lds
and
in
imul
jnp
outsl
insl
pushl
sti
mov
sysenter
xor
xchg
pop
ljmp
lds
pushf
sbb
sbb
add
sbb
test
jg
jp
cwtl
loope
add
outsl
dec
push
and
jmp
das
push
mov
or
or
cmpsb
aaa
movsl
mov
subl
xor
mov
fdivs
into
inc
stc
fimuls
aam
icebp
mul
test
rolb
mov
cmp
stos
inc
cwtl
cmp
cmpb
xchg
xchg
mov
std
adc
inc
popa
pop
cmp
sbb
jg
incl
mov
push
icebp
xchg
or
and
pop
mov
sbb
jo
or
jnp
push
mov
dec
pop
lods
cmc
pop
xchg
int3
lret
mov
call
xlat
xchg
out
orl
out
aam
pop
xor
sbb
inc
push
add
imul
sbb
mov
out
in
inc
lcall
fs
lret
sbb
pop
loop
mov
test
insb
adc
or
cmp
xor
lods
sbb
lcall
inc
leave
inc
adc
repnz
mov
push
int3
xor
lcall
cmp
aad
je
insb
xor
testb
fwait
dec
aam
inc
mov
mov
mov
incl
mov
icebp
sbb
clc
cwtl
sbb
out
push
inc
dec
in
inc
jg
xlat
out
pop
inc
rcrb
ljmp
dec
iret
push
fstpl
outsl
push
xchg
lds
jnp
cmp
aaa
add
add
inc
fiadds
fists
test
lcall
insb
or
lahf
and
jl
lea
cli
int3
lods
pop
adc
in
addb
cld
lcall
test
fldt
daa
add
and
sarl
les
imulb
xor
pop
sahf
test
std
call
sti
sbb
and
mov
dec
fnstcw
call
xchg
mov
out
faddl
adc
in
dec
das
mov
dec
mov
jmp
xor
jb
addr16
stos
and
idiv
ret
cli
jae
out
mul
outsl
mov
test
pop
rcll
lcall
sbb
aas
mov
pusha
pop
pop
clc
dec
repz
sub
pop
ljmp
inc
mov
jge
call
cli
ljmp
pop
shlb
dec
sub
sub
int
pushf
pop
push
pop
loopne
decl
mov
jle
test
cmc
fucomip
and
jle
outsb
mov
insl
cmp
mov
flds
jo
cmp
jnp
jmp
lcall
mov
insb
push
dec
fiadds
ret
push
adc
cmpsb
mov
inc
inc
test
inc
out
dec
mov
std
fistpl
sub
xchg
fidivl
push
sub
xchg
movsl
inc
decl
push
rorl
inc
scas
aaa
ljmp
je
sub
mov
ljmp
nop
dec
cmp
lret
add
mov
test
clc
int3
loop
sub
jecxz
sarb
mov
sarl
jnp
pop
jo
xor
ljmp
icebp
mov
fdivrl
mov
shrl
dec
cwtl
sbb
adc
movsb
xchg
jg
mov
imul
jno
nop
mov
push
mov
das
lock
jnp
dec
jbe
lahf
test
dec
call
lcall
xchg
mov
lods
push
fildll
je
lahf
shll
int
jg
pop
daa
mov
dec
enter
or
xchg
dec
sbb
ljmp
fcmovnbe
jnp
daa
imul
sub
mov
adc
mov
popa
idivb
mov
lret
scas
jp
jg
test
sub
cs
jae
mov
xorb
test
dec
loop
xchg
decl
incl
andb
fldcw
and
jo
sbb
dec
outsl
jno
mov
cli
arpl
cli
icebp
outsb
jecxz
lds
lret
fiadds
sub
pushl
int
sub
xchg
scas
mov
aad
stos
stos
xchg
ja
pop
push
adc
in
lcall
data16
cwtl
hlt
ja
rclb
mov
mov
push
jmp
insb
fnstenv
scas
fiadds
jmp
aaa
sub
adc
xchg
jae
push
lret
xchg
sbb
imul
jg
lods
test
jnp
pop
pop
fdivr
mov
inc
hlt
and
test
icebp
decl
sarb
aad
std
ljmp
fstps
add
test
dec
filds
clc
ljmp
xor
jp
xchg
pop
jnp
mov
aaa
or
data16
pop
jmp
outsl
push
out
pop
jbe
xchg
and
mov
rcll
xlat
dec
xor
lock
ret
xchg
das
lahf
inc
mov
dec
adc
loope
jbe
ljmp
andl
adc
pop
lcall
aad
movl
mov
fwait
and
jmp
jnp
push
or
je
mov
in
sbb
ret
std
das
cld
mov
cmp
insl
sbb
repnz
lods
sbb
adc
and
das
jb
roll
xlat
xor
and
jmp
rorb
stos
xchg
adc
pop
cmp
pop
inc
inc
jl
sub
pop
sub
in
sub
jp
dec
call
pop
call
adc
lods
mov
call
or
mov
lret
jno
js
sahf
movsl
mov
stos
rcl
push
scas
lcall
mov
add
push
call
les
arpl
fsubl
psrld
incl
add
outsb
fnstsw
fbstp
fidivrs
jns
call
cmpsb
jecxz
notl
xchg
lods
out
jno
mov
push
jno
sar
fndisi(8087
lcall
mov
stos
mov
es
sti
pop
call
mov
pop
ss
mov
aad
imul
lock
mov
roll
shll
xchg
jb
jp
or
pushl
or
nop
jp
rclb
loopne
out
in
loope
cmpsb
xchg
hlt
incl
jmp
ror
dec
int3
rol
loope
push
mov
movsl
das
sbb
cli
cmpsl
and
inc
std
lock
dec
cmc
mov
fisttpl
sub
pop
fcompl
out
loop
lahf
outsl
icebp
xchg
cli
movsb
xchg
stos
shl
sbb
clc
mov
fbstp
lret
rcll
cmpsl
stc
adc
add
shr
cld
maxps
xchg
mov
imul
push
mov
movsb
arpl
fucom
mov
mov
push
inc
mov
aad
fdivrp
fiaddl
adc
fists
pop
ffree
rcr
adc
mov
incl
imul
sub
jb
and
clc
ljmp
call
sbb
mov
and
push
lods
ds
mov
push
outsl
cld
int3
xchg
pop
dec
scas
lods
sbb
and
test
push
mov
jl
mov
jp
data16
es
fstpt
lods
push
pop
sub
incl
inc
and
pop
movb
push
ret
call
xor
arpl
or
jecxz
sbb
sbb
movsb
pusha
jns
in
sbb
fstpt
push
loopne
or
in
popf
inc
loop
out
and
adc
and
sub
mov
dec
push
in
xchg
adcl
imul
mov
inc
loop
outsb
cmc
push
sarl
add
push
sub
push
sbb
out
iret
repz
stos
push
fldcw
in
cli
dec
sbb
pop
loopne
mov
outsl
mov
jp
push
push
rolb
pop
fsubrs
push
arpl
jg
cli
mov
lods
daa
in
bound
imul
inc
mov
icebp
outsl
mov
sbb
mov
fs
out
dec
jae
adc
lcall
shll
movsb
pop
ret
jle
pop
stos
decb
adc
loop
mov
mov
pop
pop
cmc
lock
push
sbb
sti
xor
ljmp
in
or
daa
cltd
push
mov
jmp
lret
sbb
call
subl
loop
xchg
lock
ret
push
shrd
std
ret
out
xor
dec
xchg
outsl
jnp
fistpl
ja
sbb
aaa
xchg
push
out
push
push
jmp
add
and
mov
sub
mov
jg
jcxz
outsl
in
mov
push
sub
xchg
sbb
pop
divl
cmp
repz
call
in
jg
lods
mov
hlt
pop
es
mov
mov
inc
popf
hlt
outsl
call
arpl
addr16
ds
mov
push
cmpsl
add
add
fadds
addr16
movsl
outsb
mov
hlt
ds
cmp
sbbl
or
lds
jmp
lock
mov
add
subb
xor
cwtl
sub
mov
movsl
or
movsl
scas
sub
popa
out
daa
lcall
loope
mov
scas
cmpsb
fistpll
mov
mov
pop
xchg
es
adc
pop
not
ret
pop
cld
outsl
repz
fdivr
inc
adc
imul
dec
insl
test
fimull
pop
test
push
scas
outsb
jae
mov
xchg
push
les
ljmp
push
pop
pop
mov
inc
xor
fdivrp
inc
das
inc
int
dec
lods
loope
and
js
cli
add
aam
pop
cld
add
inc
and
and
inc
fildll
pop
xor
int3
sub
xchg
stos
lcall
dec
sub
scas
dec
inc
cltd
repnz
cmpsl
cmc
or
mov
popf
jb
lds
sbb
fwait
xchg
aam
aas
xlat
push
into
dec
jmp
jl
fnsave
lea
and
jno
add
icebp
test
jmp
test
out
out
dec
fs
xor
outsl
push
sarl
movd
movsl
cmp
les
pop
insb
mov
scas
or
sti
arpl
les
mov
scas
enter
idiv
outsl
cld
incl
adc
add
es
subl
aas
idiv
lcall
clc
gs
push
add
cmp
pop
add
mov
xchg
out
jns
adc
mov
sbb
fsubs
popa
ss
sub
ljmp
loop
mov
jg
or
std
pop
pop
jge
imul
add
mov
jg
mov
cwtl
scas
data16
dec
out
nop
lahf
leave
and
addr16
jns
xchg
jl
insb
dec
ffree
or
and
jb
push
cmpsl
inc
mov
cmpsl
shlb
jg
outsb
sbb
pop
xor
cmc
xchg
loopne
inc
dec
shr
xchg
outsb
popa
js
pop
dec
push
pop
fildl
popf
dec
insb
ret
jno
ret
sub
bound
std
jo
call
icebp
jg
orl
push
mov
add
iret
scas
loope
aad
ds
jle
test
cltd
mov
mov
mov
xchg
ret
leave
sbb
mov
or
sub
bound
dec
mov
mov
out
mov
dec
lret
xor
ret
cmc
xchg
cmpsb
inc
hlt
jg
lcall
adc
lret
out
sahf
xlat
in
pop
insb
jnp
mov
jg
mov
call
mov
inc
or
jg
ljmp
adc
lcall
cmp
test
lea
ret
imul
in
ds
dec
add
xor
xchg
daa
or
jmp
adc
dec
xchg
shl
outsb
xchg
xchg
jnp
mov
or
pushf
lods
loope
aaa
decb
and
pop
ret
dec
clc
loope
stos
pop
inc
jl
sbb
mov
pop
loop
lcall
or
jg
decl
or
out
or
fcoms
xchg
cwtl
dec
enter
in
scas
push
push
lods
cwtl
lret
arpl
adc
lcall
popf
rolb
divl
xchg
push
stc
incl
lds
push
stos
adc
xor
subb
dec
lcall
mov
in
fidivs
divl
pop
add
fs
ficoml
mov
xchg
lods
lret
mov
ljmp
call
sahf
sbb
pop
mov
inc
insl
out
mov
jecxz
sbb
dec
aaa
push
jp
ss
in
icebp
clc
ljmp
lea
mov
jno
xchg
sub
scas
mov
push
mov
out
push
popf
ja
or
xchg
cs
enter
fisttps
push
inc
pusha
xchg
repz
test
in
arpl
pop
mov
shr
mov
sbb
lods
call
sbb
sub
out
int
sarw
fnstsw
jecxz
aas
loopne
jbe
bound
xor
lea
pusha
cmp
cmp
repz
jge
add
jg
cli
or
sti
jb
loope
test
loopne
mov
aaa
push
std
xchg
mov
bound
icebp
into
inc
outsl
push
mov
push
in
stos
sub
mov
adc
mov
clc
outsl
loop
mov
xlat
add
pop
into
in
dec
push
pop
fildl
mov
xchg
jns
mov
xor
test
pop
pushl
add
push
movsb
add
int3
fstpl
in
in
mov
push
dec
jmp
movsb
inc
jecxz
negb
loopne
das
std
std
mov
sbb
dec
dec
sti
cmpsb
insb
adc
sub
test
mov
lcall
movsb
dec
leave
dec
jp
mov
cltd
pop
jbe
movsl
scas
daa
inc
mov
fwait
shr
aaa
push
add
popa
jnp
cmpsl
add
mov
add
aad
ret
repnz
sbb
jb
jl
inc
xor
movsl
mov
sub
adc
js
or
decl
dec
out
and
sub
leave
call
push
clc
decl
clc
js
ret
xchg
ret
icebp
and
mov
or
test
pushl
cli
mov
roll
pop
sbb
lods
sub
fwait
adc
pop
jg
mov
sub
cs
sub
or
gs
cmpsl
test
lcall
cld
fidivl
dec
ds
inc
and
mov
or
mov
add
es
pop
out
das
and
mov
xchg
cli
adc
push
or
mov
mov
aam
in
loope
aad
decl
and
mov
outsb
or
pusha
lcall
add
fs
les
add
add
xor
jg
decl
jl
andb
movb
out
xlat
les
and
das
dec
loop
dec
std
loopne
leave
mov
jecxz
in
or
fiadds
mov
xor
push
jle
jl
xorb
inc
inc
stos
lods
xchg
mov
ss
xchg
and
cmc
lcall
mov
push
pop
daa
or
mov
incl
lock
jns
test
pop
mov
dec
popf
repz
mov
lods
idivb
fwait
sbb
pushl
xor
addl
pop
inc
mov
sub
sub
and
adc
push
aad
and
push
adcl
repnz
dec
and
sbb
push
xchg
inc
dec
clc
lcall
xor
sub
je
inc
je
inc
adc
shrl
push
cmpsb
and
test
cmpl
push
gs
sar
daa
pop
cmp
push
outsl
incb
test
jg
sbb
dec
xchg
cmp
xlat
mov
mov
mov
or
inc
call
jecxz
jl
movsb
sub
and
ss
xchg
mov
aad
add
ljmp
push
addr16
mov
loop
out
andb
stos
mov
mov
lcall
pop
out
lret
lock
shlb
mov
into
mov
call
push
pop
and
repz
decl
mov
ljmp
out
push
lds
shrl
and
loopne
imul
mov
out
out
popf
mov
jp
out
pop
jne
ds
mov
or
inc
loopne
adc
mov
ss
scas
sbb
push
test
or
lcall
incl
aas
hlt
dec
sti
add
sbb
jecxz
mov
rcl
lock
frstor
fwait
ret
push
cmpsl
push
jp
push
and
in
xor
mov
addl
cmp
push
sbb
sbbl
mov
hlt
sub
ret
push
call
shrb
xor
imul
sbb
popa
push
push
push
lea
lea
std
hlt
popa
psadbw
daa
sti
in
mov
shlb
dec
fidivl
loope
data16
or
jmp
call
rep
push
push
xchg
or
in
or
xor
enter
mov
lcall
jne
out
daa
push
push
dec
xchg
loopne
sbb
inc
jle
icebp
ljmp
mov
cmp
arpl
jb
add
outsl
les
adc
push
lahf
cmp
xor
decl
ja
pop
orb
pusha
push
pushf
arpl
jg
and
call
adc
rcrl
sbb
or
inc
jae
mov
fdivs
loopne
clc
xor
data16
sar
jmp
fisubs
inc
test
fcmovne
mov
in
jo
inc
add
xchg
cmp
dec
sub
cmp
sbb
cmp
icebp
push
outsl
icebp
lea
movsb
les
inc
dec
mov
int3
aas
jecxz
shrl
add
filds
push
xor
dec
dec
hlt
inc
out
inc
mov
adc
icebp
lods
add
add
call
sbb
pushf
hlt
jnp
popf
aaa
sub
push
addr16
jmp
lock
fimull
xchg
jp
aaa
mov
clc
push
jmp
or
cmp
test
mul
jecxz
push
and
rorb
ljmp
lret
lods
jmp
mov
hlt
imul
jl
add
cli
call
clc
mov
xlat
mov
imul
push
call
xor
xor
pop
jne
mov
and
push
xchg
sbb
inc
insl
repnz
jns
pop
dec
nop
in
icebp
ljmp
mov
mov
mov
xor
inc
ret
inc
push
mov
and
xchg
cmp
arpl
sbb
daa
push
mov
xchg
jge
dec
push
push
xchg
jge
mov
pop
daa
push
in
push
mov
mov
sarl
mov
adc
xor
mov
cld
pushl
xchg
jg
push
imul
cmp
pop
fisttpl
push
pop
rorb
ljmp
add
cmp
xor
je
cmp
dec
call
cmp
lahf
stos
insl
jmp
cmp
mov
sbb
and
dec
int3
lock
dec
mov
stos
push
add
mov
sub
int3
mov
or
popf
cmp
vmulpd
cld
ljmp
sbb
mov
cmp
pop
dec
rcr
lods
repnz
int
lea
fnstsw
add
das
sarl
pop
repz
jnp
das
mov
cmp
adc
fcoml
repz
jle
jbe
sub
dec
sbb
insb
js
popf
pop
popa
sbb
bnd
push
pop
mov
testb
mov
pop
nop
push
jp
mov
ljmp
in
or
sub
mov
ret
out
and
xor
pusha
lret
push
test
pusha
cmpsl
or
or
adc
xor
pop
loop
push
aam
xchg
scas
add
lods
mov
inc
insb
lods
dec
in
xor
push
bound
std
out
inc
mov
aas
leave
inc
shr
sbb
push
sub
test
jnp
dec
ret
lods
das
icebp
ljmp
push
cmp
sub
xor
dec
pusha
lock
stos
ljmp
ljmp
andl
out
sub
pushl
aas
out
nop
mov
test
ljmp
sub
sub
stos
and
lods
cmp
cmp
insb
add
nop
push
add
xchg
out
mov
inc
add
hlt
gs
into
or
pushl
out
xchg
mov
push
idivb
mov
mov
jmp
loopne
xchg
lds
pop
in
push
push
sbb
jmp
push
lcall
push
movsb
cld
loope
fcmovnbe
inc
lods
jmp
sahf
sbb
stos
and
incl
outsl
call
xchg
call
cmp
dec
mov
lods
dec
ljmp
call
enter
sub
adc
pop
decl
adc
sbb
aaa
outsb
inc
add
pop
fisubl
mov
jns
inc
loope
incl
sbb
xor
repz
lods
fcomip
out
ret
ret
lea
test
shll
dec
lock
sbb
mov
add
mov
test
call
aaa
mov
daa
out
js
cmp
xor
in
addr16
sub
hlt
inc
sbb
mov
sbb
loop
mov
cmpsl
out
add
inc
aam
push
or
rol
or
mov
lcall
call
out
out
xchg
jno
cmp
jb
sbb
jg
mov
cmp
cld
dec
mov
in
mov
daa
or
pmaddwd
popf
pop
jbe
lcall
pop
jns
sbb
lcall
jge
push
jecxz
repnz
ja
mov
lret
nop
lret
and
aad
shld
add
fstl
sbb
adc
mov
aad
pop
mov
xchg
add
xchg
pop
xchg
jae
dec
xor
jmp
xchg
clc
mov
cmp
imul
fidivl
jg
jg
and
xor
and
xchg
adc
je
push
rorb
cmp
pop
repz
or
outsl
add
pop
pop
ss
in
sub
pop
iret
xor
xchg
inc
xor
jmp
push
lds
or
movsb
cmc
shlb
push
fucomip
xchg
jge
push
mov
arpl
cmpl
sbb
dec
pop
pop
cli
call
fmull
into
aas
and
pop
cltd
add
vmovdqu
sti
mov
pushl
push
jbe
dec
adc
xor
fs
stos
cmc
ret
icebp
jmp
push
mov
loopne
jno
sbb
lcall
mov
push
sti
jge
xor
decl
mov
lods
fs
aaa
adc
pop
test
cs
pop
jp
aad
scas
and
hlt
xchg
adc
and
inc
les
out
jae
decl
mov
shrl
mov
out
mov
jae
mov
pop
mov
jns
xor
xchg
outsb
mov
sbbb
pop
insl
icebp
incl
arpl
jl
inc
es
loopne
push
mov
xor
lcall
xchg
pop
popf
dec
lock
cmpsb
xor
jge
cli
pop
int
sbb
hlt
pop
je
inc
loop
clc
pushl
ret
pop
cmp
mov
mov
adc
das
shll
xlat
push
into
arpl
adc
cmc
lcall
xchg
icebp
gs
jge
push
cs
sbb
mov
lcall
cld
mov
xchg
in
aad
icebp
or
fstpt
mov
pusha
ljmp
aaa
clc
lcall
shll
sbb
xor
lock
movsl
shll
sbb
aad
inc
popf
sbb
adc
lret
ljmp
ret
dec
xor
lfs
pushf
push
clc
mov
data16
scas
push
cmp
in
xchg
mov
pop
push
mov
lods
test
fcomip
insb
jno
das
jo
mov
inc
mov
cmpsb
das
std
decl
pop
jmp
mov
dec
enter
or
in
pop
pusha
outsl
pop
add
sbb
sub
push
ljmp
pusha
shlb
decl
xchg
cmp
mov
clc
xlat
push
inc
fucomp
jl
cmpl
lahf
notl
shll
sbb
cld
scas
sub
push
std
outsl
cld
mov
adc
jae
popa
add
das
pop
int
pop
fiaddl
or
pop
xchg
xor
mov
jno
xor
mov
scas
sbb
lods
aaa
sbb
pop
clc
jg
push
pop
xchg
movsb
aas
sti
xlat
sbb
lcall
aaa
in
xchg
in
pusha
test
rol
cmp
scas
cs
pushl
clc
xor
cld
lcall
test
push
roll
pop
dec
divl
outsl
icebp
call
jg
jge
lret
inc
sub
aas
mov
lds
adc
in
sti
test
push
popf
sub
test
in
ljmp
ficompl
pop
inc
jge
adc
pop
xchg
push
fldenv
pop
repz
adc
enter
cmp
call
out
push
xchg
xchg
or
adc
xor
into
iret
mov
and
jecxz
fbstp
dec
outsl
dec
fcompl
rclb
xchg
stos
dec
lahf
cmp
and
cmpsl
mov
sbb
sbb
dec
pop
mov
and
unpcklps
push
cmp
push
call
aaa
ficoms
test
stos
in
adc
mov
mov
dec
faddl
mov
fwait
out
cmpl
sub
add
loopne
fcompl
aam
ljmp
addr16
aaa
fildll
movb
in
add
push
in
iret
xchg
test
mov
cmc
movsl
div
repz
jmp
mov
push
std
pop
jg
push
jnp
adc
xor
stos
scas
lea
sub
mov
aam
cmpb
and
call
jg
incl
xchg
aam
sbb
dec
mov
es
out
xchg
imul
test
sbb
das
lock
pop
add
sub
idivl
cmp
std
jg
add
mov
push
cs
ss
cmp
mov
fsts
nop
and
dec
out
imul
cmp
xor
les
decl
xchg
mov
pop
mov
mov
and
mov
inc
ljmp
daa
mov
mull
movsl
xor
iret
pop
mov
dec
in
cs
arpl
mov
inc
cmp
sub
sbb
xor
sahf
or
js
and
xor
clc
lcall
sbb
mov
cmp
push
mov
pop
orl
mov
xchg
ljmp
ljmp
push
lock
fnstcw
scas
loop
into
xor
loope
icebp
inc
rol
push
jge
dec
push
pop
pushl
clc
dec
sbbb
adc
lret
arpl
mov
inc
ljmp
lods
jl
mov
frstor
roll
mov
movsl
inc
out
in
lcall
popf
ret
mov
sti
xor
addr16
rol
dec
mov
add
rcrb
push
lds
cwtl
int
outsl
fistpll
pushf
sub
mov
push
cwtl
or
and
mov
jl
test
outsb
popa
dec
pop
ljmp
fidivrs
mov
pushf
sub
or
bound
mov
inc
cs
fsubr
inc
call
aad
ret
loopne
mov
fistps
addr16
movsb
or
int
mov
std
mov
lods
sahf
in
loopne
lcall
mov
cld
mov
pop
xor
clc
push
dec
or
add
int
pop
mov
mov
pop
fidivrs
gs
popa
pop
sbb
mov
xor
jmp
stos
inc
fsts
rorb
cmp
xor
pop
pop
and
out
xchg
push
arpl
es
xchg
inc
mov
pop
cli
cmpsl
sbb
dec
mov
iret
lahf
popa
mov
lret
xchg
clc
jg
imul
lcall
pop
pop
adc
std
push
mov
mov
lcall
xor
pushl
dec
fidivs
jo
mov
xchg
adc
out
jnp
push
dec
call
push
test
ljmp
pop
sbb
loop
push
inc
shll
and
sub
pop
sbb
adc
shll
mov
lea
adc
dec
cmpsl
xchg
sub
stc
data16
push
add
add
bound
push
lret
mov
add
lcall
cld
fbstp
lcall
inc
and
je
cwtl
incl
add
ja
xor
cltd
cmp
and
aas
aas
sarl
pop
lcall
or
pop
popa
js
out
or
xchg
or
xchg
push
js
movsb
incl
mov
outsb
fcoms
nop
dec
jno
bound
mov
ja
test
push
aaa
in
pop
adc
daa
mov
cli
repnz
pop
idiv
jne
jae
xlat
lret
imulb
call
fists
pushf
or
das
jmp
xchg
orb
cmpsl
jl
fisttpll
mov
lods
adc
xor
loop
xchg
leave
ds
push
int
decl
adc
and
pushf
ja
sub
aaa
cli
mov
jno
xchg
cmp
outsl
fidivs
mov
inc
test
outsl
lock
and
adc
cmpsb
and
insl
mov
movsl
je
and
mov
xorl
lea
pusha
sub
scas
lret
inc
ret
lock
jmp
call
shll
adc
mov
push
call
outsl
dec
hlt
sub
lret
jb
js
mov
movsl
outsl
iret
test
pop
ljmp
pop
adc
fsubr
bound
jnp
mov
test
lcall
sbb
ret
xor
xchg
test
mov
jle
aaa
clc
pop
push
mov
cmp
cmp
sti
mov
sub
call
dec
lahf
jge
repnz
mov
adc
lcall
pushl
cltd
jl
popf
xchg
lock
aam
andl
push
iret
xor
cmc
clc
pop
pop
sub
sbb
enter
out
and
outsl
std
lods
lcall
inc
cltd
or
fisttpll
inc
xor
ljmp
xor
dec
adc
inc
jge
cmpsb
mov
aam
test
xor
gs
push
arpl
jp
push
ja
lods
loopne
xor
daa
incl
loop
or
lods
call
loopne
lret
mov
mov
jno
or
outsl
hlt
add
or
add
fs
and
das
push
clc
testb
lods
ret
xchg
in
lock
decl
addr16
pop
xchg
xchg
in
xor
fnstsw
outsl
icebp
leave
js
test
or
xchg
pop
pop
outsl
xlat
popa
lahf
gs
mov
mov
sbb
and
jge
mov
adc
fstps
outsl
lds
rclb
dec
dec
dec
fstpl
aam
jle
int3
stc
inc
adc
incl
pop
fdivrl
mov
xchg
aaa
clc
mov
xor
mov
fcmovnbe
out
dec
mulb
lcall
call
push
adcb
sbb
xor
cmc
call
popf
xchg
dec
sub
mov
icebp
xchg
adc
mov
mov
adc
sub
pop
adc
sarb
mov
lea
adc
dec
mov
inc
cmp
jae
lock
xor
mov
lock
or
xchg
mov
cmp
sbb
lea
dec
push
inc
filds
insl
ljmp
aad
mov
pop
fwait
lock
rcrb
mov
xor
lret
xchg
push
cmp
push
jmp
xlat
jle
aaa
sub
sar
movsb
inc
inc
push
shlb
xchg
jmp
xor
sub
scas
pop
inc
jo
test
nop
cmp
testl
cld
imul
stc
mov
add
xor
adc
imul
inc
mov
je
rcll
negb
jg
inc
les
inc
ja
mov
and
stos
ja
scas
fimuls
mov
mov
jp
inc
ret
pusha
lahf
test
xchg
dec
or
mov
mov
mov
fsubrp
call
cli
xor
adc
cmp
adc
call
pop
cvtpi2ps
mov
int
into
pop
fdivs
cmp
dec
scas
lods
dec
push
addr16
scas
push
pop
cltd
xchg
out
jae
lahf
jnp
cmpb
imul
incl
call
cmp
pop
ret
inc
cmp
mov
icebp
decl
mov
add
div
push
scas
out
add
jp
pop
push
fisttps
mov
adc
ljmp
adc
pop
mov
mov
and
fsubrl
push
test
mov
sbb
pop
jmp
jnp
fdivrl
aad
xchg
mov
sahf
or
jb
je
mov
ljmp
mov
lds
push
arpl
icebp
lret
repnz
push
inc
adc
icebp
pop
jl
inc
call
movsb
dec
cmp
ljmp
adc
adc
or
out
cmc
loopne
add
mov
inc
xlat
iret
or
jg
fistpll
int
adc
pushl
xor
mov
xchg
xchg
in
add
cmpsl
push
dec
std
add
pop
test
ss
adc
les
pusha
cmp
jbe
sarb
out
adc
out
test
cmp
sbb
mov
jmp
inc
testb
cmpsl
and
scas
fnstsw
add
jecxz
adc
pop
imul
out
outsl
cld
jo
push
jnp
je
int3
xchg
cmp
out
sbb
decl
cmpxchg
adc
dec
insl
dec
repnz
push
push
fwait
sbb
cld
or
call
andb
pusha
sub
cmp
call
and
test
sarb
in
outsl
test
dec
adc
cld
mov
and
test
nop
xchg
jne
fdiv
add
or
ljmp
jmp
xor
xlat
cltd
push
out
js
filds
push
and
fisttps
out
cs
xchg
xchg
mov
jmp
clc
cli
cmp
cmp
push
das
dec
mov
incb
gs
cld
pushl
cld
jne
stos
mov
mov
jle
jb
incl
mov
mov
mov
fistpll
push
test
adc
sbb
orl
sbb
mov
icebp
shlb
dec
fnstsw
jns
jmp
stos
inc
pop
daa
xchg
fbld
inc
lods
clc
sub
pop
cld
decl
xchg
xchg
cmp
fisttpll
mov
and
lock
push
decl
push
push
dec
roll
pop
mov
sbb
dec
sub
push
sbb
test
sbb
and
mov
je
cmp
rorb
mov
jg
push
ljmp
rcrb
mov
xchg
lods
loopne
addr16
loopne
ljmp
imul
xchg
mov
xor
ss
outsb
aad
incl
push
enter
iret
repnz
mov
sbb
call
xchg
add
or
pusha
cmpsb
ret
adc
incl
or
jl
test
and
sti
fisubrl
pop
loopne
ljmp
fcoml
dec
leave
inc
mov
push
inc
xor
xchg
xor
xchg
dec
inc
bound
jmp
in
fbld
ljmp
mov
inc
pop
dec
mov
sub
clc
sub
loop
call
sbb
pop
sub
sahf
xor
ja
clc
fucomip
add
fistl
dec
gs
mov
aad
mov
lcall
mov
sbb
push
mov
add
dec
sbb
call
data16
pop
les
mov
ss
int3
sbb
jae
xor
add
clc
fstpt
out
pop
mov
cmovne
push
xlat
pop
pushl
in
push
cwtl
xor
or
shrl
xor
adc
push
movsb
je
jae
andb
mov
lcall
dec
mov
movsl
mov
mov
inc
aam
lcall
xor
push
daa
aaa
cwtl
daa
dec
and
pop
or
in
std
sbb
dec
mov
movsl
sbb
sub
icebp
lods
outsb
cmp
jmp
outsl
lock
mov
mov
or
mov
jnp
out
clc
loopne
push
sbb
movsl
jge
cli
xchg
or
push
rcll
cmp
pop
fdivs
fisttps
fisubl
jle
dec
jp
mov
jg
push
mov
out
daa
mov
stos
in
cmp
dec
lods
mov
sbbb
xor
incl
addb
int3
fistpl
pop
jecxz
rclb
insb
hlt
shl
inc
jnp
lods
dec
loopne
ljmp
adc
sahf
outsl
aas
dec
jo
ficoms
inc
jb
push
jle
incl
aaa
inc
sub
pop
movsl
lret
lret
jp
pop
xlat
hlt
add
adc
add
fdivp
lcall
cld
jg
push
ss
andl
adc
ja
xor
cmp
xchg
jg
decl
aad
aad
xchg
rorb
lret
ret
xor
rcll
mov
loop
pop
cld
mov
js
je
jne
sbb
or
outsl
outsl
std
xchg
xchg
pop
jmp
iret
shll
pushf
mov
jg
push
das
mov
js
testb
dec
mov
fdivrs
sbb
sub
jle
adc
adc
fcompl
stos
addr16
lcall
mov
repz
dec
cmc
addr16
les
fwait
mov
call
mov
inc
mov
fidivs
ljmp
pop
push
sub
add
cli
mov
sti
out
pop
or
push
inc
pop
inc
out
insb
adc
out
mov
scas
xchg
xorl
inc
pop
addr16
leave
xchg
push
aam
pop
jg
ror
das
mov
xchg
dec
mov
mov
push
pop
xchg
nopl
mov
in
adc
cmc
incl
mov
inc
xchg
cmp
scas
sbb
mov
mov
rolb
insb
jne
mov
add
fs
fcoms
fucomip
outsl
std
nop
jae
mov
pop
xchg
sub
push
outsl
push
cli
test
push
adc
fcmovb
ret
jmp
inc
leave
inc
test
xor
in
push
inc
jmp
lcall
inc
sub
sub
pusha
outsl
je
mov
loopne
add
sbb
lods
add
test
push
test
push
shrb
decl
cmp
xor
or
dec
inc
push
in
jp
or
sbb
push
mov
dec
or
xor
arpl
ret
cmp
stos
rcll
sbb
call
enter
add
test
inc
xchg
jp
dec
mov
aaa
xchg
fstpt
jae
jns
imul
mov
xlat
or
lods
repnz
lcall
fsubs
pop
mov
nop
incl
mov
mov
scas
ljmp
push
sbb
pop
fstpt
push
push
shlb
lock
pushl
imul
test
lock
pop
cmpl
nop
ds
or
movsl
cs
mov
call
pop
addr16
imul
push
data16
aam
push
lcall
and
stc
xor
xchg
adc
xchg
push
je
pop
decl
jnp
cmp
pop
sub
cli
adc
push
jle
leave
imul
mov
jg
lds
imul
xchg
cmpsl
add
filds
in
pop
dec
sti
cmpsl
sub
and
xor
dec
mov
loope
fwait
sbb
fildll
mov
stos
add
jl
js
pop
repnz
ljmp
loopne
mov
sub
inc
stos
rol
fs
sub
dec
out
jmp
std
xlat
push
lds
push
hlt
pop
xor
ds
dec
fcomi
xor
rcrb
pcmpgtw
fdivrs
mov
das
mov
mov
push
ret
adc
xchg
xor
mov
jo
fnstsw
jg
loopne
xor
pop
sbb
jp
dec
and
decl
adc
mov
pop
lahf
sbb
cmp
in
bound
test
mov
insl
arpl
fistpl
aad
inc
scas
test
inc
dec
pop
sbb
mov
ljmp
test
in
popf
jl
sbb
test
int3
iret
imull
clc
jmp
pop
out
loopne
sbb
mov
pop
fidivrl
and
lods
or
sbb
or
pusha
or
scas
leave
arpl
cs
push
jg
push
jge
dec
pop
lret
je
ljmp
das
xchg
mov
add
lea
fisttps
jae
arpl
push
adc
mov
out
outsb
in
add
decl
popf
ds
dec
add
cmp
lock
inc
lcall
leave
movsb
and
shrl
add
mov
sbb
push
out
push
out
or
sub
mov
push
ret
inc
cli
and
mov
scas
xlat
jns
lea
cmp
dec
ljmp
xchg
es
mov
mov
loop
aaa
sarb
imul
and
xorl
int
jmp
int
mov
nop
mov
pop
mov
dec
jns
mov
dec
in
sti
adc
or
cmc
push
jg
xchg
cmp
jmp
cmpsl
dec
xchg
cmc
lcall
cli
test
jns
cmp
cli
les
xchg
rorb
inc
push
sub
out
add
jno
pop
xchg
adc
js
or
fcmovne
lods
fstpl
fmuls
out
leave
jle
pop
imul
jae
incl
sbb
push
jge
push
nop
dec
jg
icebp
mov
out
sarl
lcall
cld
loopne
jbe
stos
fldt
sbb
std
inc
int
inc
mov
orl
inc
inc
xor
outsl
cmc
jg
or
and
pop
jb
enter
negl
je
aaa
jp
ljmp
movsb
mov
dec
mov
lods
sbb
sbb
mov
outsb
lea
xchg
pop
lock
popf
cli
xor
dec
inc
adc
pop
clc
in
outsl
fisttpll
shr
mov
xchg
movsb
add
mov
aas
mov
xchg
sti
call
mov
daa
enter
cmp
inc
push
sti
inc
ficomps
out
aam
das
xlat
push
push
lods
mov
push
lods
sbb
add
orb
and
dec
imul
mov
push
daa
dec
scas
psrad
mov
lds
xchg
jge
xchg
or
mov
es
sbb
pushl
daa
sarl
aas
mov
add
sub
push
xchg
inc
pop
test
cs
cld
xchg
js
sbb
adc
clc
jg
jb
pop
jle
lahf
sub
cmp
sbb
pushl
pusha
imul
add
int
icebp
addl
mov
jb
cmpps
mov
mov
out
sub
and
dec
xorb
pop
ja
inc
or
hlt
push
cwtl
jmp
mov
xor
stos
mov
sub
decl
and
pop
data16
adc
arpl
scas
mov
in
xor
jge
notl
mov
sbbb
andb
inc
test
das
jge
adcl
es
iret
adc
cmp
or
add
jl
std
sub
mov
adc
js
inc
jno
sbb
aaa
pushl
cli
mov
shr
cmp
cmp
adc
lret
pop
lcall
lods
das
sbbl
jbe
add
js
repz
sar
jmp
mov
pop
lock
fldl
mov
mov
stos
push
mov
jnp
idivl
movq
je
xchg
xchg
jnp
pop
aad
fisubs
jg
popa
roll
inc
gs
pop
jo
sti
adc
repz
sbb
in
inc
jb
fsubrl
jg
popa
xor
jl
in
in
and
outsl
rclb
push
jg
pop
push
mov
mov
sbb
sti
jmp
xchg
fdivrs
xchg
popa
lods
repz
sbb
adcb
int
mov
sub
sub
sbb
jl
pop
mov
sub
jnp
mov
out
sbb
push
or
xor
icebp
iret
push
int3
push
push
sub
les
jg
pop
inc
outsl
in
imul
jp
cmpb
push
nop
sbbl
loope
cli
std
and
mov
jne
js
jo
sub
or
pop
aad
jg
shlb
rcrb
pop
xor
xor
cld
dec
push
pop
aad
lds
neg
add
cmp
sub
cmc
ljmp
decl
xchg
push
xchg
add
lods
xor
faddl
rorb
xor
sbb
shl
lcall
sub
addr16
in
clc
enter
dec
outsl
lock
outsl
xchg
ljmp
cmc
cmp
loopne
popa
inc
sub
hlt
mov
sahf
xor
std
sbb
lock
insb
xchg
test
call
shrl
decb
jb
movsl
roll
add
out
sbb
xchg
xchg
push
outsb
rclb
add
push
call
sub
popa
cwtl
in
repz
sub
call
ljmp
iret
shlb
stos
mov
scas
pop
mov
mov
mov
lods
jg
out
push
push
gs
or
decl
sbb
inc
cmc
jl
inc
loopne
jecxz
prefetchnta
pop
push
mov
lods
decb
mov
mov
fcomps
xchg
jbe
ljmp
cmp
inc
push
int3
rcr
xchg
imull
mov
loop
mov
int
mov
ljmp
fdiv
stos
sub
sub
jbe
xchg
frstor
pop
lds
testb
decl
into
pop
jge
and
inc
outsb
movq
mov
int3
int
mov
pop
jecxz
insb
mov
aad
decl
ja
aam
mov
cmp
shlb
adc
xlat
jne
push
lea
test
push
jne,pn
sub
push
ret
pop
pop
jecxz
xchg
cld
jg
call
jae
sub
pop
out
in
enter
popf
lock
out
rcrl
dec
xor
and
jnp
xor
or
pop
call
mov
mov
fs
xor
pop
jnp
sbb
pop
clc
loope
mov
in
out
xchg
mov
push
das
push
cmp
xor
lods
mov
push
cmp
mov
test
fs
daa
mov
in
js
add
inc
and
cmc
jg
jmp
sub
lods
jecxz
andb
sub
incl
cs
mov
cwtl
xchg
fnstsw
or
jnp
shrl
repz
jmp
stc
mov
insb
ficoms
je
dec
xchg
mov
jb
xlat
push
shlb
inc
hlt
cld
ljmp
lds
sahf
popf
dec
fstl
add
mov
outsl
popl
push
ljmp
add
mov
pop
xor
out
loop
rol
testb
xor
bound
mov
jecxz
loop
das
jmp
jl
gs
ja
mov
push
aad
jp
lcall
lds
pop
cmp
mov
mov
sbb
xor
xchg
adc
lcall
mov
mov
stos
sbb
cs
jno
jle
aaa
lds
mov
aaa
pop
out
ficomps
xchg
xchg
xchg
daa
push
sbb
add
ljmp
pop
mov
pop
xchg
out
cld
cli
jnp
jecxz
xchg
cmpsl
sub
lcall
push
leave
pop
xchg
push
aad
push
and
roll
mov
jl
jnp
cltd
jb
or
cld
xchg
adc
orl
mov
or
pop
jnp
jb
jg
dec
mov
jl
mov
mov
mov
cwtl
inc
mov
mov
xor
mov
add
jle
jecxz
mov
mov
jecxz
adc
push
movsl
dec
inc
je
push
movsl
cmp
inc
mov
fldcw
scas
scas
adc
ret
daa
xchg
push
test
pop
aaa
stos
divl
inc
fs
stos
adc
outsl
xlat
inc
xchg
mov
lods
sbb
jnp
test
scas
xchg
xchg
mov
lcall
jnp
mov
jg
scas
and
jp
pop
test
icebp
sub
stc
movsl
iret
adc
mov
aas
ss
je
aad
cs
pop
decl
sub
cmp
sbb
pop
and
daa
fdivrl
pop
call
call
sbb
rorb
cmp
aas
inc
pop
mov
mov
push
xor
stos
repnz
mov
push
add
cmp
js
and
dec
pusha
fwait
in
jbe
cmp
rcr
lods
jl
jnp
repnz
jg
mov
cmp
cmpsb
aam
out
aaa
cmpb
lahf
push
pop
flds
and
rcl
hlt
xchg
loope
sti
dec
pop
lcall
xchg
cmpsl
js
xor
mov
cmp
jbe
in
sub
add
dec
push
push
or
pop
scas
outsb
jmp
mov
jmp
aad
out
sbb
popa
adc
cmp
gs
mov
movsb
fwait
xchg
insl
ss
mov
jae
out
add
dec
mov
xor
jne
insb
inc
je
sbb
mov
sub
test
call
sbb
push
and
jb
mulb
decb
push
int3
pusha
mov
mov
lds
push
rolb
das
lret
nop
xor
sub
xchg
mov
sub
jl
cmp
xor
push
cmp
leave
sub
stos
dec
jns
adc
adc
mov
cmp
movsl
jge
loopne
jl
xchg
add
cs
sbb
jns
or
ljmp
mov
add
cwtl
dec
sub
or
stc
jns
jmp
decl
and
inc
push
mov
addr16
ljmp
je
fistps
inc
orl
fadd
xchg
pushl
das
mov
mov
xchg
pop
jp
xor
xchg
stos
lret
inc
mov
push
pop
jl
and
jecxz
sahf
rclb
push
loope
lock
push
dec
mov
jbe
imul
mov
mov
inc
adc
mov
es
push
and
stc
xchg
xor
mov
inc
ret
jb
int
ss
insl
push
daa
movsb
nop
leave
ret
jae
jns
outsl
icebp
decl
and
notl
jbe
push
incl
call
outsb
cmp
cmpsb
rcl
les
mov
jnp
cltd
inc
lret
incl
js
popw
test
push
loope
ret
lahf
imull
outsb
int3
cmc
test
push
sti
mov
dec
jne
lods
std
inc
fsts
adc
pop
push
xchg
inc
push
xchg
or
outsl
xchg
cld
decl
adc
ja
mov
mov
jnp
in
decl
fsincos
inc
mov
dec
out
cmpsl
push
js
sub
clc
dec
leave
cwtl
popf
mov
mov
mov
dec
jl
outsl
fimull
das
mov
sub
loopne
xchg
jae
jno
inc
addr16
cmp
add
xor
jb
xor
mov
pop
xor
dec
int3
es
in
sbb
decl
mov
cmp
cli
mov
push
lea
push
xor
jp
mov
and
loope,pt
fucom
inc
cmp
les
push
mov
nop
push
pop
push
shrb
dec
shll
mov
add
into
dec
or
clc
outsl
hlt
fistl
es
xchg
faddp
sub
fisubrl
call
xchg
adc
fidivs
idiv
sbb
cmc
push
sbb
push
in
call
inc
aaa
outsl
lock
lds
sub
stc
arpl
test
lods
fnstsw
fbstp
mov
int
insl
sti
mov
mov
mov
inc
loop
in
icebp
repz
fstpl
out
fimuls
lcall
bound
outsb
jae
stos
pushf
imul
jg
jne
imul
xor
add
cmp
adc
mov
adc
sar
push
mov
rclb
sub
push
les
jg
decl
out
scas
add
cmp
dec
notl
or
and
and
mov
push
mov
sbb
adcl
in
add
cli
imul
xchg
jmp
mov
aam
out
dec
dec
push
xor
sarl
rorb
arpl
add
rcrb
mov
add
outsb
cmpxchg
xor
mov
mov
call
sar
xlat
adc
sub
out
cmc
or
adc
xchg
adc
xchg
add
xchg
push
sahf
push
sub
inc
and
add
or
or
fiaddl
or
and
push
test
test
mov
add
ss
inc
and
outsb
pop
adc
or
add
jae
shrb
add
int3
sub
add
jmp
pop
mov
or
ficompl
lods
add
push
push
cmp
and
push
pop
adc
and
je
fwait
jae
mov
inc
insl
jne
add
xchg
mov
mov
outsb
aaa
adc
test
pushf
jnp
cmpsl
inc
lods
add
add
jae
call
dec
imul
push
add
sub
sub
sub
push
jecxz
pushf
fistpl
dec
add
hlt
add
inc
bound
out
pop
and
cmpsb
pop
test
shlb
add
mov
sub
and
test
es
sub
insl
lods
mov
sbb
or
mov
adc
mov
lods
shl
or
addb
jmp
and
lods
mov
xchg
and
pop
aad
pop
mov
dec
dec
push
add
add
xchg
and
sbb
arpl
test
push
jae
in
and
ret
push
mov
int
lret
add
inc
pop
mov
loopne
jae
xchg
pushw
outsb
add
push
adc
xor
insb
std
outsl
jmp
gs
cmp
inc
dec
xchg
add
inc
je
push
jb
xor
cmp
or
sub
jnp
int
int
or
pop
mov
lea
ficoms
lods
xchg
outsb
jnp
lods
adc
or
or
sbb
push
leave
lahf
cmpsb
mul
xor
cmp
sub
int
add
lds
add
into
mov
inc
je
cmp
lea
xor
add
or
leave
add
mov
sub
pop
sub
jno
subl
add
jb
and
rcll
and
add
sub
and
add
mov
mov
add
fs
adc
nop
push
into
adc
or
add
pop
inc
rorb
mov
stos
add
inc
movsb
lea
mov
outsb
or
push
mov
lahf
enter
scas
mov
jns
mov
pop
cmp
fdivrl
or
mov
push
mov
mov
test
mov
xlat
pop
mov
mov
in
xchg
pushl
mov
cmpsb
push
xchg
nop
push
movsl
mov
cmp
fstl
repz
jno
jg
mov
cmp
mov
dec
aaa
fistpl
mov
sub
insl
mov
dec
daa
lret
lret
fwait
add
pop
and
sbb
mov
fldt
jle
ljmp
mov
cld
in
div
lods
mov
fcoms
mov
shrb
add
sbb
popa
push
fisubrs
mov
out
in
jg
out
mov
mov
adc
xlat
loop
in
inc
inc
xlat
mov
push
cmpb
jo
adc
pop
jl
sub
push
setl
insl
std
push
add
sarb
std
inc
cmpb
mov
pushf
pop
sti
sahf
ja
mov
mov
das
xchg
fisttps
inc
and
mov
inc
inc
adc
fnsave
add
loopne
xor
xchg
add
mov
push
add
das
xchg
cld
pop
mov
jo
mov
mov
jge
adc
pop
cwtl
outsb
in
mov
jb
xchg
or
mov
enter
jne
cmc
mov
mov
mov
push
loopne
ja
outsl
add
and
and
mov
sbb
aaa
dec
xlat
out
sbb
cmp
adc
ss
add
dec
shl
sarb
jno
test
push
adc
or
mov
sahf
outsb
insb
mov
in
hlt
fldcw
insl
in
fdivr
push
mov
cld
iret
mov
fs
test
dec
sub
dec
push
mov
xchg
add
fmul
dec
fistps
cld
test
push
sahf
lock
mov
sub
mov
add
je
fsubrl
adc
fisttps
dec
cmp
ja
es
mov
ds
call
mov
mov
adc
add
cmp
lret
into
sti
push
gs
push
jg
dec
out
xchg
bound
jb
add
out
sub
mov
das
and
jno
pop
sarl
insl
pop
aad
xchg
into
fnstcw
repz
or
int
in
adc
jns
repz
mov
outsb
mov
sub
add
xor
sbb
notb
mov
loope
lock
imul
jo
pushf
mov
adc
push
cmpsb
mov
jle
xlat
xchg
xor
mov
lock
imul
and
outsl
lea
test
mov
push
and
rcl
jbe
mov
mov
int3
and
imul
pop
mov
cmc
icebp
jns
pop
pop
jmp
pop
adc
dec
imul
sbbb
xor
jne
fwait
adc
push
mov
mov
shll
pop
test
pop
test
mov
mov
mov
push
inc
or
mov
shl
xor
adc
out
lret
cmc
outsb
inc
mov
or
movsb
xchg
arpl
pop
pop
fcomps
sub
jl
xchg
pop
in
jbe
cmp
xchg
sbb
inc
addb
lock
sub
or
mov
mov
xor
xchg
add
sub
push
xchg
je
xor
jl
push
xchg
jecxz
ret
and
mov
cld
mov
pop
sub
jae
in
scas
push
in
out
shlb
call
jo
mov
mov
and
mov
xor
fcompl
cmpsb
pop
shl
pop
pop
cmp
sbb
add
add
rolb
imul
int3
mov
push
jge
lret
repnz
movsb
jb
mov
jmp
aam
in
add
inc
inc
sub
sub
mov
mov
xchg
jb
pop
mov
xchg
mov
int
pop
adc
or
inc
outsl
out
rcl
mov
or
lods
push
push
ljmp
aas
mov
mov
in
lock
aas
jle
arpl
lcall
and
pushf
mov
xor
int3
add
stc
push
dec
and
xor
lods
leave
mov
cld
mov
push
jns
fists
call
lcall
cwtl
test
out
xchg
fnsave
xchg
push
or
orl
pop
insb
aaa
es
pop
mov
push
imul
fiadds
ss
xchg
push
and
pop
jne
or
xor
in
add
loope
pushf
rorl
sub
mov
jo
pop
xchg
ljmp
mov
fisubs
inc
hlt
inc
popf
rcrl
scas
imul
arpl
xchg
add
scas
jno
bound
les
pop
sbb
js
ljmp
xor
rcl
mov
mov
scas
sbb
sbb
jbe
gs
lods
cli
data16
enter
shlb
fldenv
jle
subb
sub
cwtl
mov
roll
pusha
clc
sbb
jg
out
push
pushf
pop
sub
sub
jecxz
or
lea
and
sub
sti
es
out
mov
rcrb
xchg
imul
icebp
test
je
jbe
mov
ficomps
bndstx
in
add
vminsd
lcall
int
xchg
inc
pop
jp
jle
mov
les
repnz
lods
shlb
mov
test
scas
testb
push
aam
daa
cmovle
sar
repnz
dec
adc
jmp
out
pop
arpl
dec
shlb
dec
adc
roll
pusha
icebp
in
pusha
xor
mov
or
cmp
fisttpll
inc
orl
mov
add
int
call
mov
cmp
xchg
ss
inc
ss
fucom
pop
xchg
aas
pusha
adc
out
mov
adc
and
or
repnz
mov
nop
ds
pop
outsl
mov
xor
cli
inc
lods
dec
xchg
out
hlt
sbb
aas
dec
outsl
xorb
add
in
ss
rorl
addr16
sbb
ret
test
jns
je
push
imull
dec
push
xchg
aaa
outsl
outsb
cli
jo
inc
ds
leave
mov
cmpsb
fisubrl
pop
cli
xor
dec
clc
or
mov
leave
xor
adc
and
xchg
js
imul
pop
in
dec
and
into
mov
sub
lds
clc
add
nop
stc
cs
sbb
icebp
sbb
mov
nop
mov
stc
repnz
or
pushf
outsb
add
mov
test
or
jl
les
fcmovb
xchg
sbb
mov
ljmp
adcl
mov
adc
and
outsb
sbb
mov
sbb
push
fidivrl
dec
sub
mov
jne
dec
std
in
or
mov
fildl
insb
ljmp
sbb
pop
lahf
xor
dec
cwtl
lods
dec
mov
and
stos
fistpll
mov
repz
cmpsb
scas
es
xchg
mov
sbb
xchg
or
outsl
cmc
add
test
pop
lret
out
fstpt
push
mov
xchg
pop
subl
inc
adc
mov
int3
inc
ss
and
inc
xlat
ss
sub
jnp
leave
jb
xor
negb
mov
mov
inc
mov
mov
aaa
sub
lods
pop
xchg
cmc
push
mov
or
std
cs
test
shll
daa
and
ret
jne
add
xchg
mov
dec
cmp
lret
fisttpl
sti
jno
into
push
jb
aam
adc
xor
jl
mov
lods
pop
scas
daa
in
xchg
in
cltd
or
add
and
mov
mov
fdivl
push
stc
popf
inc
sbb
or
pop
cltd
outsl
sarl
mov
stos
sbb
inc
pop
mov
clc
shl
cmp
pop
ds
jmp
adc
pop
xchg
pushf
leave
js
dec
loopne
mov
dec
sub
and
jecxz
int
cmp
loop
ds
rorb
imul
and
stos
push
mov
ficompl
sbb
adc
xchg
pusha
rcrl
push
or
and
pop
loopne
inc
subl
arpl
insb
and
insb
pop
andb
sub
shl
int
cmc
sub
cwtl
dec
mov
icebp
xlat
loop
push
loop
outsl
cld
or
int3
cld
mov
adc
out
push
and
sub
andb
fsubs
insb
testb
inc
push
lret
lods
push
test
or
scas
mov
xchg
mov
nop
or
add
cmp
sarb
pop
mov
lret
xor
rcll
sub
fistps
pop
mov
adc
mov
rol
pop
pop
xchg
in
or
mov
and
insl
lret
in
or
pop
pop
dec
pop
rorl
pop
jno,pt
sbb
das
in
jnp
popf
outsl
mov
je
mov
shr
and
inc
mov
es
std
pusha
in
push
test
fisttpl
or
xchg
jge
into
pop
pushf
mov
pcmpeqw
je
xchg
pop
jge
jge,pt
dec
or
xor
cs
jge
out
lahf
pop
sub
xor
gs
jne
mov
add
xchg
movhps
popf
mov
push
inc
aas
outsl
pop
inc
sub
sarb
and
imul
cmp
call
ficoml
aas
test
hlt
lea
es
or
fwait
xchg
jecxz
mov
fidivl
push
cmp
lcall
mov
in
out
mov
scas
push
mov
mov
mov
ljmp
push
lcall
xchg
ds
cli
mov
fisubrl
arpl
mov
mov
adc
lret
lds
mov
rorb
aaa
pop
sahf
aaa
mov
fcmovb
inc
or
inc
in
xlat
add
and
push
testl
inc
pop
in
ficomps
lcall
ficompl
pusha
mov
mov
icebp
cmc
test
xadd
adc
fsts
mov
sarl
in
push
push
iret
adc
jecxz
outsb
sub
ror
mov
in
loope
pop
adc
fwait
cmp
xor
lret
jge
mov
xor
je
jbe
loopne
xor
aaa
cmp
mov
ret
dec
xchg
pop
or
ss
das
sbb
repz
ss
sbb
xor
add
adc
pop
fisttpl
pop
jo
clc
adc
rol
or
lret
mov
shll
lock
jl
and
and
push
cs
test
inc
pop
jl
push
xchg
scas
add
jmp
and
pop
fidivs
cwtl
inc
lahf
js
jecxz
push
mov
fisubrs
inc
arpl
mov
es
out
icebp
aad
adc
testl
pop
ds
cmp
sbbl
outsb
dec
insl
fcoml
in
mov
xchg
pop
outsb
add
push
movsl
push
xchg
pop
outsb
mov
lods
mov
push
dec
js,pn
push
mov
xor
mov
in
ret
aam
lahf
jns
dec
shll
jg
xor
lcall
cs
adc
cmp
jno
dec
jns
lcall
lret
in
pop
sbb
shlb
push
mov
and
sbb
jmp
sbb
xor
scas
imul
dec
int
lret
xchg
xor
jmp
cli
mov
cmpsb
pop
loop
push
loop
ret
pop
cmpsb
sbb
leave
cmp
xchg
pop
push
out
mov
push
int
sti
xchg
insl
cmp
sbb
cld
adc
and
push
loope
mov
jl
adc
pop
jno
bound
test
insl
loop
lcall
jl
insb
pop
out
clc
inc
lods
mov
rorb
push
ljmp
jge
add
xor
or
ds
add
arpl
jbe
fisubrl
dec
pusha
add
dec
dec
or
cld
fimuls
mov
mov
lea
sbb
jmp
add
ljmp
mov
dec
sahf
mov
popa
testb
mov
xor
repnz
outsl
mov
pop
scas
mov
gs
loope
movsl
shrb
xlat
adc
fldt
cltd
std
pop
dec
imul
aaa
jle
add
mov
outsb
adc
jg
lahf
das
sbb
loopne
movb
icebp
pop
xchg
insb
fdivs
inc
mov
sbb
and
lods
sbb
mov
adc
push
mov
stc
push
aas
jle
pop
jle
cmp
sbb
int3
add
pop
fs
mov
push
ljmp
jne
stos
sti
cli
cwtl
jg
jo
movsb
jmp
xchg
shl
dec
mov
inc
jne
sbb
insl
roll
xchg
daa
mov
js
jg
mov
ficomps
push
or
xchg
insb
dec
stos
es
adc
xor
push
jecxz
icebp
cs
xchg
pusha
adc
dec
push
fsubrl
fisubs
xchg
xor
out
fcoms
lods
xchg
shrb
shr
mov
jecxz
fnstsw
cs
mov
or
dec
mov
mov
and
pusha
into
std
imul
cvtpi2ps
push
mov
imul
stos
rorb
push
push
repnz
jns
fdivl
mov
mov
popa
cmc
mov
sbb
cmp
test
fidivrs
xchg
lcall
sbb
and
imul
and
scas
push
xchg
cwtl
sub
mov
or
push
sti
push
cmp
or
lods
insb
js
xchg
push
repz
sbb
cmp
jecxz
pop
icebp
movsl
js
fwait
pop
jecxz
fists
mov
jecxz
adc
xor
xchg
mov
inc
or
push
fcom
or
aaa
push
xchg
lods
sbb
add
scas
sahf
inc
push
pop
outsb
pop
xchg
lock
loope
enter
movsb
mov
sbb
xlat
sarl
dec
jo
mov
xchg
mov
jns
enter
xor
mov
xchg
xchg
add
push
and
out
pusha
rol
push
add
cmp
inc
dec
inc
pop
imul
mov
hlt
or
adcl
xor
jg
push
es
push
inc
xchg
iret
pop
and
sbb
inc
jmp
xor
pop
adc
ss
rol
outsl
and
fsubrl
push
jg
repz
ljmp
sbb
cmp
jmp
fwait
nop
popl
pop
fidivl
in
cmc
mov
pop
mov
ja
aaa
cmp
test
ss
xor
outsb
and
xor
xor
pushf
rorb
inc
test
aas
pop
cld
fsubs
out
or
mov
rolb
xchg
cmp
jbe
adc
cmp
push
lcall
jno
lea
push
add
inc
arpl
je
sbb
xchg
xchg
cs
cmpsb
adc
bound
push
dec
inc
sbb
add
dec
inc
lcall
lret
inc
call
movsb
mov
sub
gs
in
jecxz
xchg
adcb
inc
pop
insb
push
pop
outsb
lock
repz
mov
or
dec
hlt
repnz
inc
dec
inc
inc
dec
or
mov
cld
mov
adc
dec
shl
stc
push
xor
mov
in
pop
dec
mov
inc
repz
sbb
mov
repnz
jmp
adc
lret
arpl
push
adc
ja
push
push
fisubrl
repz
jecxz
push
mov
cmp
arpl
mov
push
mov
push
mov
lret
xchg
inc
adc
pusha
popa
mov
aas
mov
mov
or
mov
sub
xor
pop
addr16
mov
fcmovnbe
mov
pop
cltd
subl
inc
icebp
mov
pop
mov
dec
adc
sub
and
popa
push
cmpsb
test
lods
or
bound
insl
xor
test
pop
pusha
sti
test
flds
testl
xchg
mov
adc
xchg
mov
das
test
adc
hlt
and
or
or
pop
subb
fistpl
inc
jnp
pop
push
mov
push
push
mov
push
outsl
sbb
cli
pop
push
daa
in
rolb
gs
mov
nop
push
mov
add
cld
sub
in
insb
ljmp
faddl
leave
insb
scas
sbb
insl
bound
in
adc
shll
mov
ljmp
rcl
cmp
adc
loope
call
add
sbb
sbb
lods
gs
or
pop
lods
or
ja
cli
sbb
lret
pop
mov
dec
int3
and
sub
xchg
and
mov
push
and
dec
mov
movsl
or
pusha
xor
cmpsl
push
xchg
dec
hlt
or
sbb
loope
adc
in
and
loopne
loopne
in
push
shr
ret
cmpsb
cmp
fcoml
shll
mov
pop
insl
js
in
xor
roll
adc
inc
mov
pop
pop
pop
icebp
inc
jmp
adc
and
mov
data16
f2xm1
negl
scas
sbb
fstpl
rcrl
inc
nop
cmpb
push
rorl
shl
pusha
push
cmp
add
add
jecxz
push
frstor
cmp
dec
movsb
orl
pop
leave
icebp
test
pop
jle
fdivrs
jo
adc
sbb
ficomps
jo
pop
xor
push
les
push
push
sti
dec
push
mov
fdivrl
cli
aaa
lods
test
stos
in
jne
pop
lea
add
or
in
lods
ret
repnz
andb
inc
mov
outsl
mov
pop
xchg
test
mov
jg
in
daa
aaa
and
inc
fdivs
jecxz
pushf
or
mov
mov
div
hlt
mov
popf
cmp
out
testb
inc
sbb
jne
or
sbb
ds
lahf
pop
jp
pop
iret
jno
test
adc
clc
inc
xchg
shlb
stos
adc
sub
pop
add
insb
loopne
adc
test
add
mov
iret
fsubrl
in
xor
add
stc
push
add
or
loope
sub
pushaw
xchg
in
insl
call
xor
cwtl
adc
add
mov
pushf
lock
pop
in
lock
or
xor
sbb
cld
mov
imul
push
mov
stc
mov
clc
test
jge
stos
fwait
int
fwait
aaa
mov
dec
sub
lret
out
mov
stos
xor
dec
pop
lahf
in
xchg
rolb
push
popaw
dec
pushf
inc
in
in
jle
nop
adc
in
shrl
sub
repnz
fs
fcoml
cmpsb
mov
xor
or
mov
adc
mov
mov
stos
push
add
roll
rcrb
cmpsl
nop
push
dec
xor
pushf
sbb
pop
adc
jge
jl
jg
sbb
pop
je
enter
mov
sbb
int
xchg
data16
or
dec
test
jb
or
mov
and
imul
ret
cmp
pop
cmp
popa
push
enter
incb
and
push
mov
or
mov
jb
call
adc
fldl
mov
xchg
cli
test
into
pop
adc
or
adc
das
cmp
data16
das
pop
repz
jbe
pop
mov
inc
imul
fisubs
clc
in
jno
and
daa
inc
jge
pop
adc
mov
mov
outsl
mov
arpl
sbb
mov
xchg
sbb
or
push
or
xor
jecxz
cltd
loop
mov
cmp
insl
int
movsl
test
fimull
movq
scas
shll
jle
jo
push
mov
jb
push
push
jne
movsb
call
sub
loopne
sub
arpl
lret
fcmovnb
xchg
fcmovnb
adcl
xchg
xchg
xchg
pop
jg
push
pop
stos
ret
inc
loope
xor
ss
pop
cli
ljmp
ret
repnz
jmp
movsb
mov
sbb
fidivs
jbe
mov
fisttps
mov
pusha
sti
or
fwait
jno
je
inc
add
lret
aad
std
adc
mov
xor
push
scas
jmp
test
pop
sub
cmp
mov
sbb
dec
mov
sbb
rep
insb
cli
add
xchg
out
jb
mov
enter
xor
out
jge
dec
lahf
push
push
dec
sub
adc
or
insl
call
jp
loopne
and
ret
cltd
ret
or
ss
loopne
mov
out
inc
mov
rcll
int3
ret
fnstsw
test
in
imul
mov
jb
shlb
or
xchg
push
sub
mov
cmp
pusha
cli
mov
bound
xor
out
in
lea
mov
adc
rcr
lods
test
stos
repz
pop
push
dec
fisubrs
dec
mov
cmp
and
push
jge
test
xchg
lea
xor
adc
fdivrs
pop
in
pop
outsl
fildll
loope
dec
roll
lds
out
lahf
outsb
pop
pop
push
and
pop
pop
inc
or
imul
or
lock
gs
push
lds
test
jle
jns
lods
btcl
add
filds
mov
rcl
addr16
push
fnstcw
call
pop
popf
lcall
roll
sbb
clc
shl
pop
and
or
jne
decb
mov
loopne
rorb
icebp
daa
rolb
jp
hlt
ror
sbb
stos
ret
into
roll
mov
lods
mov
insb
cmp
mov
and
jl
sbb
ljmp
xchg
ret
xor
pusha
sbb
stos
sub
stos
clc
xor
adc
fmuls
push
in
and
mov
insl
mov
adc
adc
outsl
push
xchg
inc
insb
fiadds
cltd
sub
test
pop
jno
fnstenv
mov
incb
dec
cld
outsb
movsl
mov
stc
mov
mov
and
insb
dec
cmp
inc
add
fistps
push
push
jp
xor
scas
jae
lods
out
lock
es
roll
ret
shlb
fstl
xor
mulb
adc
pushf
sbb
loopne
jbe,pn
in
cli
push
nop
or
add
fsub
jecxz
outsb
shrb
pop
lds
sbb
and
sbb
cmpsl
cwtl
mov
jo
test
arpl
add
aad
xor
mov
in
add
lock
in
lcall
fstps
arpl
mov
xchg
out
inc
cmp
lcall
imul
test
ret
fstpl
jnp
in
scas
jae
insb
sbb
je
sbb
nop
and
sbb
cmp
cwtl
xchg
shrl
pop
bound
outsl
adc
dec
test
rcrb
add
dec
dec
xor
mov
sbb
pushf
iret
mov
cld
mov
xchg
lahf
jle
in
scas
mov
stos
xchg
adc
or
pop
pop
rorl
out
inc
or
jnp
sbbl
sub
add
or
fsub
ja
mov
faddp
movb
outsl
sub
nop
push
jmp
add
mov
mov
fstp
outsb
pop
or
sub
sbb
lods
pop
push
xchg
cmp
out
xchg
xchg
xor
dec
mov
lea
mov
or
ret
or
adc
outsb
xor
mov
rcrl
add
fisubrs
inc
icebp
jecxz
out
insl
cmp
into
sub
push
mov
pop
xor
or
rcr
jo
lock
in
clc
sub
lock
or
and
filds
fdivrs
in
mov
movsb
rorl
pop
leave
insl
dec
icebp
or
lods
sbb
jbe
sbb
push
ljmpw
insl
and
mov
push
aam
stos
mov
ss
and
mov
gs
shll
mov
jle
shlb
lea
loopne
add
and
int3
lods
das
shlb
and
lret
mov
or
cmp
mov
lock
mov
cmpl
mov
test
or
mov
clc
pop
out
lret
jb
loopne
in
fidivs
out
insl
lds
push
jmp
pop
loopne
sahf
arpl
ljmp
ret
pop
insb
adc
inc
scas
sbb
sbb
rcrb
test
cmpsb
sbb
add
and
sbb
rclb
sbb
jp
ret
push
fistpll
cmpsl
addb
testb
jg
mov
psrlq
xchg
ss
pop
inc
add
push
das
push
mov
fimuls
insb
inc
inc
test
rol
mov
test
out
adc
inc
aaa
jle
pop
jp
ds
inc
jl
add
imul
sub
xchg
call
pusha
jecxz
dec
xor
adc
xor
inc
jecxz
inc
das
mov
xor
test
insb
cmp
push
or
sub
orb
test
mov
xchg
loopne
stc
push
loopne
or
test
pop
adc
out
adc
adc
mov
insb
lea
push
repnz
inc
inc
push
dec
pop
and
pop
push
push
lret
add
mov
ds
insb
stos
aaa
and
jge
test
sbb
iret
test
sub
inc
sbb
add
insl
pop
adc
pusha
test
fadds
add
movb
mov
sbb
add
loopne
add
psrlw
jbe
outsb
pop
ret
inc
negb
cmp
movsl
repnz
jmp
jecxz
jp
push
fldt
jmp
rcr
sarl
inc
inc
xchg
and
mov
jp
add
loop
scas
daa
jne
mov
enter
rcll
aad
std
jmp
mov
add
clc
jge
sbb
mov
pop
jo
sub
adc
pusha
jmp
mov
xchg
stos
mov
mov
adc
add
push
mov
cmp
and
cmp
xchg
cs
and
add
cmp
fdivr
inc
mov
sbb
pop
mov
ja
movsl
push
xchg
iret
push
xchg
mov
ljmp
aad
nop
popf
adc
outsb
mov
les
fildll
inc
push
fcoms
stos
mov
inc
dec
mov
lahf
bound
mov
call
inc
gs
ficompl
in
or
push
mov
fldt
xchg
add
jo
pop
je
mov
insb
pop
cmc
dec
loope
jecxz
sbb
testb
insl
mov
sub
pop
bound
in
divl
std
lods
sti
lods
pop
adc
lea
cmp
lods
xor
mov
insl
js
sbb
mov
mov
int
push
fld
stc
js
mov
in
es
inc
dec
into
jae
mov
leave
scas
dec
inc
adc
push
test
mov
out
and
xchg
scas
jg
data16
outsb
int
ss
subl
add
mov
es
sub
sbb
lret
xchg
xor
adc
mov
pushf
jge,pt
jecxz
sbb
ret
mov
mov
inc
sub
sub
jbe
xchg
sbb
lds
sbb
fmuls
in
outsb
pushf
mov
lret
push
lds
mov
mov
inc
add
std
hlt
push
or
and
rdtsc
dec
add
dec
icebp
push
jae
sub
lret
frstor
xor
push
mov
ja
jno
lods
cmpl
shll
jne
mov
or
in
js
lods
nop
int
add
cs
or
mov
push
call
pusha
stos
lahf
pop
mov
lock
aam
insb
daa
pop
pop
fistpll
cmp
lds
sbb
inc
and
pushf
bnd
roll
fsts
xor
xor
adc
jo
sub
daa
sub
into
in
push
or
fdiv
add
fmuls
mov
mov
popl
sbb
and
and
pop
mov
pop
ret
aad
sub
sub
cwtl
pusha
out
cmpsb
mov
xchg
ljmp
dec
stos
dec
sbb
in
call
cmpsb
xchg
out
xchg
fimull
add
scas
ss
xchg
or
sub
jae
ret
subl
movsb
cmp
sbb
sbb
cmp
mov
pop
push
dec
jne
sub
dec
add
sub
or
add
xchg
rcll
stos
insl
or
adc
je
push
insb
pop
sahf
pop
cmc
ret
insb
mov
xor
gs
pop
jo
dec
iret
into
es
dec
and
out
dec
mov
jle
jae
mov
xchg
orb
mov
or
in
test
dec
add
add
stos
js
aaa
lret
clc
push
iret
push
push
push
cmp
ljmp
ret
outsb
dec
testb
add
adc
scas
das
outsl
add
sub
bound
mov
mov
cmp
mov
push
test
popa
push
incb
add
popa
jbe
push
pop
lea
xor
filds
xadd
imul
inc
xor
mov
add
ret
test
lahf
push
inc
outsl
sub
paddusw
mov
push
add
inc
mov
dec
mov
add
mov
lods
sub
inc
mov
or
pusha
leave
push
rcl
sarb
sub
aas
sbb
les
pusha
ret
mov
or
stc
cmp
bound
lods
mov
xor
int
popf
scas
xchg
mov
test
jp
push
imull
jge
xor
test
xchg
mov
adc
mov
shrl
add
inc
mov
imul
or
adc
test
std
shlb
add
xchg
fnstcw
push
add
mov
xorl
nop
or
push
jb
cmpsl
pop
loopne
fsubr
and
jl
movsl
ja
or
sub
lds
sti
push
je
clc
std
rorl
adc
or
add
movsl
sbb
xchg
jo
mov
adc
bnd
xor
clc
jbe
jo
dec
add
mov
pop
or
pop
scas
mov
scas
push
sbb
pop
int3
add
mov
pop
add
mov
ret
fdivs
and
cs
pushf
test
inc
xchg
popa
ss
stc
leave
pop
int3
stos
inc
sbb
mov
cmpb
fs
jae
or
pushf
rorl
mov
shl
add
dec
repnz
sbb
add
dec
into
loop
repnz
mov
cltd
add
jbe
dec
mov
pushf
cmp
out
outsl
jo
xor
pop
movsb
shlb
push
sbb
add
mov
shr
aas
std
push
and
out
pop
insl
aad
popf
out
sbb
mov
mov
sub
jnp
xor
pop
mov
jmp
out
loopne
mov
mov
add
enter
dec
mov
icebp
jl
jl
and
addb
insb
sub
sub
pop
jae
mov
shrl
jmp
fwait
inc
and
push
xor
jg
add
mov
loopne
ss
adc
ja
sbb
lret
pop
mov
dec
pop
call
sbb
dec
mov
popa
xor
shr
ret
inc
in
xor
or
cmp
xor
pop
lret
lcall
ss
push
mov
jae
icebp
cwtl
dec
call
jo
aam
sub
sub
fwait
loopne
or
scas
cmp
outsl
add
jp
xor
pop
dec
inc
ror
dec
subb
and
and
ja
in
xlat
test
mov
or
and
jae
inc
jmp
cld
pop
aaa
hlt
mov
outsb
pusha
pop
rcrl
js
sub
adc
mov
jo
xor
pop
push
gs
sbbl
mov
ret
mov
push
leave
pop
mov
iret
mov
aad
bound
and
test
jae
jl
shlb
pop
fstl
or
push
jl
leave
cmc
push
outsb
xchg
sbb
psadbw
repnz
lret
enter
sub
jmp
xchg
fbld
fdivp
mov
out
jge
lea
xchg
mov
icebp
ds
movsb
and
rolb
add
call
lods
push
push
rclb
push
loopne
loop
test
test
lret
and
test
mov
ret
out
dec
gs
sbb
mov
pop
sub
push
and
push
mov
imul
fldcw
insl
fdiv
iret
test
cmp
xor
stos
and
addb
push
xchg
cmp
inc
insl
pop
out
dec
test
fnsave
adcl
or
mov
fwait
incb
xorl
lcall
cmp
les
out
add
inc
fstpt
scas
lahf
jp
insb
int3
fcoms
mov
lods
or
jg
pushf
dec
in
es
repnz
xchg
push
in
dec
jne
loopne
repz
hlt
clc
dec
inc
hlt
mov
mov
ja
mov
les
divl
pop
outsb
imul
cmpl
outsb
bound
roll
pop
mov
test
arpl
lock
sub
dec
jg
cld
nop
and
cmp
pop
mull
mov
push
mov
loopne
fidivrs
scas
push
aam
mov
jo
lret
adc
or
fcoml
mov
decb
repz
sbb
or
icebp
inc
xlat
gs
jecxz
jnp
loop
jnp
xchg
icebp
rcl
xorl
push
sbb
aad
cmpps
or
leave
sbb
call
call
aam
dec
roll
adc
xchg
outsl
or
in
sub
or
mov
icebp
pop
clc
outsb
out
loopne
pop
mov
mov
adc
test
xchg
sahf
insb
or
popf
shlb
in
insb
push
jno
loopne
ret
fwait
jne
loopne
cmp
fimull
dec
jnp
and
xchg
cmp
cmp
pop
add
ss
xchg
sbb
pop
push
push
add
xor
jge
dec
dec
rcll
lcall
mov
adc
loopne
loop
jbe
clc
cwtl
mov
out
inc
imul
lock
jg
xchg
mov
xchg
scas
jbe
pop
adc
push
and
loope
std
dec
lock
mov
dec
inc
xchg
mov
add
cmp
ss
in
fsubrs
je
in
xchg
mov
fimull
je
lahf
add
int
xor
mov
fwait
jmp
dec
jge
fisttps
add
push
mov
hlt
sbb
adc
mov
decb
sub
sar
jecxz
mov
pop
push
lcall
and
xchg
dec
adc
cmpsb
dec
or
add
ret
xchg
lcall
push
jo
sahf
mov
jnp
int
stc
test
outsb
cwtl
cmp
dec
andl
orl
sbb
or
add
adcl
xor
xchg
add
cmpl
mov
inc
mov
cmp
jbe
shll
test
std
cmpsl
adc
mov
pcmpeqw
pop
push
sbb
sarb
mov
enter
ret
and
pop
inc
repz
lods
mov
jecxz
mov
push
mov
push
mov
xor
cmp
in
ds
ja
xchg
jns
and
sbb
xchg
outsb
mov
insb
cmp
shll
js
xor
jg
jl
nop
lock
mov
push
push
outsl
mov
and
push
mov
mov
cmp
aam
jno
xorb
sub
xor
cmp
cmpsl
fistps
je
insb
jbe
sarl
sbb
popa
xor
pusha
adc
push
pop
loope
test
incl
mov
mov
into
and
rorb
push
pop
adc
xchg
push
add
inc
cld
add
filds
fs
cmpb
inc
orl
mov
insl
or
test
jno
mov
std
push
jb
clc
shrb
jo
je
xchg
xchg
and
and
cs
inc
push
or
xchg
fdivl
aam
or
mov
je
lret
ljmp
or
or
pop
pop
xchg
dec
loope
sub
dec
das
lcall
add
lahf
add
addr16
pop
add
adc
roll
push
lcall
mov
inc
in
stos
sbb
fdivl
clc
bound
mov
out
das
jp
cld
icebp
adc
adc
jge
aam
push
and
mov
data16
jecxz
jle
clc
lcall
add
popa
cmp
push
cmp
sbb
or
jl
and
aad
inc
cmp
mov
test
out
mov
std
mov
add
std
add
and
loopne
lods
or
xchg
sbb
cmpl
mov
add
div
inc
pop
xlat
adc
outsl
jl
cmp
jl
dec
jge
xor
outsb
mov
loopne
ljmp
push
adc
int3
sub
dec
inc
mov
icebp
out
out
cmp
xlat
movsl
pop
nop
cmpsb
adc
popa
mov
and
pop
jecxz
in
dec
les
mov
into
out
ret
cmp
xchg
mov
cltd
mov
inc
pop
sub
sbb
mov
mov
std
pop
fidivs
pushf
mov
push
das
push
rol
subb
pop
add
and
out
inc
mov
xor
repz
in
outsb
or
lret
iret
clc
sbb
mov
lret
sahf
sub
cmp
add
pop
sub
call
ja
jl
pop
sar
pop
or
icebp
in
call
jne
hlt
movsb
std
movsl
cs
xlat
aam
fisttps
mov
mov
les
xchg
insb
testb
pusha
lds
push
cltd
jnp
mov
outsb
push
outsb
lea
lahf
and
fistl
ss
xor
jmp
nop
cwtl
push
fsts
cmp
sub
adc
ds
or
mov
lahf
pop
mov
lods
sbb
pusha
arpl
mov
pop
mov
addb
and
popa
cmc
clc
pop
sbb
insb
aad
jns
insl
add
or
sti
push
add
fnstsw
data16
inc
xchg
test
or
mov
add
in
add
cmp
test
cmp
cli
inc
mov
sub
movsl
fbld
lret
add
xchg
cmc
outsl
sub
dec
cltd
sbb
xchg
pop
and
adc
cmpsl
rorb
mov
test
adc
lds
adc
scas
sub
lods
lret
push
movsb
mov
pop
push
and
inc
add
cli
movl
mov
mov
cli
pop
pushf
lock
sub
xor
xor
inc
fs
adc
mov
inc
insb
xor
mov
ret
xor
and
icebp
add
or
pop
mov
pop
xchg
inc
cmp
jmp
insb
std
mov
or
fldt
push
fmull
and
cmp
adc
sub
mov
add
or
add
loope
sarb
mov
out
out
xor
shrl
mov
into
popa
jmp
jbe
xor
sub
popa
shl
outsb
jp
adc
orb
imul
xchg
stos
call
cmp
fdivrp
mov
cmp
loopne
dec
out
add
cmp
addr16
push
and
mov
add
inc
fucomip
mov
shlb
leave
add
mov
push
js
adc
dec
fstps
xor
inc
mov
dec
rcll
ffree
pop
xchg
push
outsb
rolb
or
pop
jle
lock
push
loopne
mov
add
fildll
fs
sbb
pusha
and
out
and
mov
mov
mov
inc
add
arpl
pop
dec
stos
cmp
xor
loopne
mov
subb
leave
das
loopne
cmpb
sbb
jns
sub
adc
mov
fmul
pop
add
sti
sub
jo
cld
stc
call
mov
in
sbb
aad
clc
inc
fisubs
dec
lea
mov
add
je
sub
sub
push
js
arpl
scas
lods
hlt
xchg
in
movd
jne
xchg
cmp
std
rclb
pusha
push
test
inc
inc
add
outsb
push
jns
xor
insb
sbb
add
mov
sbb
cwtl
dec
mov
mov
jno
sbb
cmpsb
rorb
or
mov
mov
jp
in
scas
aad
arpl
or
xlat
andb
mov
in
or
mov
sub
in
xchg
xor
loopne
cmpsl
arpl
inc
scas
adc
sub
mov
ja
pop
popa
rol
or
adc
jecxz
aam
cmpl
mov
mov
imul
subl
add
cmp
xor
jl
fsubl
adc
pusha
imul
inc
insl
fisubl
mov
mov
and
arpl
jp
scas
out
dec
jno
lahf
sub
cli
inc
adc
add
cwtl
push
in
xchg
push
cmp
out
shl
jmp
xor
cmpsl
jb
das
mov
xchg
pushf
xchg
mov
cmp
popf
fcomp
std
fstl
xor
xchg
rcrl
sarl
dec
cld
mov
add
and
pushl
rcr
pop
mov
dec
sbb
inc
jg
icebp
or
cmp
xlat
or
xor
or
mov
inc
xor
xor
aaa
inc
mov
push
jo
jl
mov
sbb
dec
in
adc
and
shll
mov
sti
mov
dec
xor
insl
and
mov
jmp
scas
and
sub
gs
mov
push
inc
jl
insl
imul
jnp
fstpt
test
mov
mov
lds
and
sub
insl
pop
in
mov
push
jecxz
nop
outsl
icebp
push
outsl
mov
aad
rclb
lock
andb
xchg
enter
mov
add
pop
test
pop
push
cmp
clc
push
js
mov
jmp
ss
mov
es
sbb
sar
mov
dec
dec
mov
aas
pop
inc
xchg
add
leave
mov
scas
cli
movsl
scas
fsubs
or
mov
int3
cmpb
negl
mov
cltd
scas
lcall
je
add
insl
dec
mov
mov
aam
or
mov
rcrl
adc
xor
rcrb
mov
adc
cs
pop
cmp
fs
push
add
jne
icebp
xor
cli
mov
xchg
jecxz
inc
test
ficoml
popa
inc
jb
pushf
xchg
xor
mov
push
sbb
xor
adc
jl
inc
cmpl
and
fidivl
loope
sub
pop
adcl
xchg
sbb
adc
mov
dec
dec
push
xorb
mov
aaa
jl
loope
push
push
adcl
fstpl
cwtl
imul
mov
jl
icebp
push
rep
ss
pop
and
mov
mulb
sbb
loopne
ror
sub
and
inc
push
jecxz
mov
pushf
dec
jecxz
xchg
add
inc
movb
mov
rcrl
cmc
or
inc
sbb
loope
jo
xchg
mov
sub
dec
push
andl
ret
xchg
je
jp
add
loop
fcmovu
jo
inc
jg
mov
mov
cmovae
mov
in
push
inc
in
or
leave
js
loopne
mov
pusha
stos
and
stc
das
xor
adc
dec
pop
or
mov
push
aas
lds
shlb
stos
cmp
loope
cmp
call
push
or
xchg
pop
mov
mov
sti
mov
sbb
xchg
cmpsl
push
aam
mov
pop
inc
fdivr
ret
movsb
push
arpl
fs
loopne
adc
adc
jne
shrb
out
bound
pop
push
sub
mov
mov
jo
arpl
mov
xlat
mov
mov
or
in
mov
int
rolb
enter
mov
or
adc
lods
es
sub
cwtl
push
mov
ror
outsl
std
push
ds
inc
in
sbb
mov
fwait
mov
xchg
cmc
aad
mov
and
std
adc
in
repz
iret
mov
inc
loope
xchg
pop
sbb
pop
mov
lret
outsb
movsb
cmp
test
orl
mov
in
adc
mov
add
into
les
or
loopne
loope
loopne
sub
ss
xlat
lock
lahf
cwtl
push
inc
xor
sbb
dec
scas
and
test
sub
push
sbb
mov
ja
movsl
lahf
xor
jl
loopne
mov
rol
jnp
dec
xchg
jb
xchg
mov
xor
out
mov
clc
mov
pop
inc
cmp
gs
sarl
stos
xorl
orl
mov
loopne
ja
in
dec
test
nop
jns
mov
or
sbb
enter
les
jmp
mov
sti
sbb
test
and
mov
pop
test
lret
rolb
mov
lods
hlt
aam
xchg
sbb
or
sub
fld
int
jge
jne
je
add
mov
xor
mov
xor
push
lret
outsl
or
sub
push
sbb
out
cld
mov
stos
or
pop
sub
clc
jmp
sbb
shrb
pop
push
lea
mov
inc
lea
test
popa
notl
scas
mov
shll
sahf
fildl
fstps
inc
out
mov
dec
outsl
fnsave
cmp
int3
adc
lock
inc
dec
mov
pop
xor
xlat
scas
dec
jecxz
push
es
sbb
inc
imul
das
sbb
xchg
insl
loope
shlb
sahf
mov
jno
andb
ds
int3
das
jge
push
jne
flds
pop
xor
test
in
mov
sub
and
mov
rcr
xchg
xchg
popf
call
outsb
inc
sbb
stos
mov
and
or
xchg
addl
sbb
ss
faddl
adc
js
mov
call
and
mov
rorb
mov
fistpl
jge
movsl
pop
lods
sub
cmpsb
xor
mov
ljmp
pop
dec
mov
jle
jbe
out
add
jnp
sbb
inc
iret
fnop
or
or
jecxz
xchg
pop
ljmp
int
pop
in
ror
add
cmp
stos
fldl
dec
sbb
faddl
test
in
jae
inc
add
mov
mov
ficomps
call
push
adc
adc
push
hlt
sbb
js
xchg
out
sbb
in
mov
aad
xchg
push
jnp
fs
rolb
xor
mov
sbb
rorl
repz
mov
inc
out
fiaddl
fwait
dec
or
ja
xor
xchg
aaa
lahf
fldl
mov
cmc
sub
mov
testb
adc
add
mov
clc
testb
mov
jecxz
mov
mov
mov
std
lea
and
adc
xchg
or
cltd
and
call
sti
test
inc
jo
mov
mov
dec
and
or
jo
dec
sbb
int
imul
das
insb
data16
les
adc
std
adc
lret
fbstp
mov
xchg
inc
mov
insb
sub
push
scas
xor
push
sub
out
lock
stos
sub
and
push
ss
jmp
cs
xlat
push
sti
push
adc
in
mov
cmp
ret
pop
jo
fisubl
popf
mov
sbb
addr16
arpl
test
sbb
paddw
ret
enter
rcl
lds
lods
xchg
dec
cld
adc
pop
and
and
out
ljmp
lcall
add
pop
cmpsl
and
outsl
cmc
in
pop
add
mul
mov
or
lds
push
scas
inc
cmp
iret
sbb
mov
icebp
lret
fimuls
jl
in
push
dec
imul
mov
icebp
pusha
inc
inc
shll
imul
ljmp
mov
cmp
adc
in
sbb
cmp
jp
inc
push
repz
sub
frstor
adc
sub
clc
orb
rclb
jge
or
das
jp
iret
mov
push
cmp
sbb
cmp
push
push
pop
sub
jecxz
jbe
xlat
mov
bound
mov
add
inc
ss
icebp
inc
sbb
fwait
pop
and
bound
mov
fidivrs
adc
or
aas
jp
mov
addr16
sub
repnz
dec
js
or
sub
out
es
and
sub
xchg
cmp
xchg
fldl
inc
cmp
pop
and
mov
idiv
mov
mov
xchg
popf
arpl
orl
in
inc
mov
adc
cmp
or
hlt
enter
inc
xor
mov
inc
aad
cli
jno
bound
inc
jmp
push
jge
adc
in
sbb
push
jbe
fs
aam
std
mov
add
sbb
jo
loope
push
xchg
or
adc
cwtl
or
adc
in
pop
ljmp
jne
les
mov
aaa
jno
adc
adc
cmp
cmpsb
arpl
dec
xchg
sbb
sbb
test
shll
into
icebp
sbb
adc
or
je
inc
scas
push
pusha
and
xor
pop
add
sbb
gs
stos
aaa
xor
xchg
adc
sbb
pop
and
icebp
inc
mov
popf
cmp
inc
cmp
mov
jb
adc
popf
dec
in
jo
mov
gs
les
sub
inc
sub
pop
repnz
enter
push
movsl
sti
pop
dec
dec
cmp
xor
mov
sub
adcl
push
xchg
iret
out
loopne
lock
aam
dec
icebp
jp
or
and
decl
es
addr16
mov
pop
int
jl
or
or
cmp
cltd
call
in
or
jns
sahf
movsl
sbb
add
mov
insb
cmp
adc
push
loopne
mov
je
mov
in
cmp
xchg
int
push
outsl
test
ss
fs
adc
push
cwtl
rcrb
push
lds
ror
adc
and
out
stos
jns
insl
xor
jbe
add
cmpsl
push
cmc
aas
fadd
outsb
pop
sbb
cli
fdiv
add
xor
std
mov
dec
sub
rorl
add
mov
js
or
incl
xchg
arpl
bound
lock
mov
data16
dec
and
xor
push
ficoms
iret
cwtl
leave
mov
js
subb
sbb
cld
push
mov
or
pop
ja
loopne
add
jne
cmpsl
pop
sub
andb
inc
lret
mov
pop
cmc
mov
aad
fsub
mov
sbb
mov
cmp
dec
pop
ret
adc
or
push
push
dec
mov
mov
aaa
decb
cmp
imul
nop
rcrb
pop
shrb
adc
in
push
addl
arpl
push
xor
inc
pop
outsb
std
cmp
push
cmp
pushf
and
and
cmp
xorb
lea
cmp
mov
into
mov
xor
sbb
mov
fwait
xor
bound
out
xor
xlat
adc
push
sahf
cmp
sbb
sahf
add
dec
pop
add
mov
inc
movsb
sbb
add
push
mov
arpl
out
fidivs
jmp
shlb
xlat
fildl
cmp
ret
imul
sti
scas
dec
pusha
push
sub
inc
or
ficoms
shll
stc
lret
jnp
jg
sarb
xchg
or
inc
jo
aad
or
mov
test
jns
sbb
pop
fadd
or
cmp
cmp
fists
push
lret
je
aas
das
adc
push
or
jp
outsl
pop
int
inc
std
xor
out
jge
xlat
add
push
outsb
call
repnz
out
daa
outsb
out
xchg
sub
ja
mov
mov
stc
sar
cmpb
mov
popf
fcoms
mov
xchg
sti
jns
dec
pop
imul
loope
dec
adc
inc
sub
mov
rcrb
dec
jne
mov
sbb
fisttpl
jno
stos
mov
mov
lock
xchg
loopne
adc
out
mov
lods
jmp
ret
fdivs
notl
nop
popa
addb
lret
jge
push
rolb
or
aam
or
push
push
xor
push
popa
xchg
jb
in
pop
sub
ret
push
mov
lds
jo
stos
inc
outsb
xchg
mov
ljmp
jo
fisttpll
lods
jp
insl
add
push
cmpl
dec
sub
pop
mov
ss
inc
sti
fdivp
xchg
imul
lret
insl
jmp
or
idivb
mov
outsb
lea
xchg
push
xor
insb
mov
mov
add
lock
mov
sbb
xchg
sti
mov
or
inc
dec
test
dec
xorb
adc
dec
jb
insl
push
push
imul
ret
and
jecxz
jge
xchg
bound
adc
add
jns
pop
pop
shlb
dec
daa
outsb
sub
test
fistl
mov
arpl
jl
leave
je
cmc
push
or
in
fwait
outsb
aaa
les
outsb
out
testl
inc
and
mov
inc
sub
jne
adc
addb
movb
jbe
dec
or
ss
xchg
mov
mov
inc
popa
shlb
push
out
pusha
pop
js
mov
mov
sbb
movb
sub
push
pop
adc
sbb
movsl
rolb
cwtl
ss
sbb
dec
les
dec
sbb
insl
inc
pop
sbb
or
xchg
dec
and
fbld
loopne
xor
cmpl
aad
inc
or
sbb
movsl
mov
add
mov
add
insb
dec
fdivl
test
imul
std
insb
sub
call
jbe
mov
loop
push
mov
push
mov
sbb
stos
add
imul
xor
addr16
push
sbb
xchg
mov
out
mov
inc
leave
in
rcl
push
int3
subb
mov
nop
cld
rcll
dec
jo
repnz
orb
inc
aad
xchg
dec
scas
jno
imul
fwait
xchg
and
or
inc
sub
or
call
sub
or
dec
stos
ret
neg
mov
and
or
inc
adcb
inc
xor
dec
in
jp
daa
mov
pop
cmp
inc
xor
lods
lea
aaa
pop
aad
jle
xor
or
insb
les
mov
call
movsb
inc
fs
cmpsl
jbe
push
cmc
aas
cmp
cwtl
call
fnstsw
mov
or
jo
popa
pop
adc
mov
jno
cmp
mov
mov
and
or
xor
mov
test
add
adc
mov
ss
popa
jne
lea
cmpsb
inc
leave
cs
mov
sbb
mov
push
lods
fnsave
js
or
es
jb
stos
mov
push
cld
insb
cltd
inc
push
test
xor
dec
not
xor
cmpsb
and
push
pop
fwait
outsl
sub
mov
scas
xchg
push
add
or
jne
roll
in
sarl
stc
inc
rcrb
test
frstor
sbb
xor
mov
inc
cmp
add
fstl
in
add
cmp
mov
push
cmpsl
lods
pop
mov
xlat
jno
test
mov
lock
sub
mov
add
cmp
mov
adc
pop
mov
movb
fsts
sbb
dec
sub
adc
aaa
fisttpll
push
imul
cmpsb
cli
in
jnp
mov
imul
mov
jmp
pusha
test
popf
sub
pop
mov
out
sub
add
mov
into
scas
pop
mov
xchg
outsb
adcb
xor
mov
xor
clc
les
js
sub
repz
or
mov
and
clc
sub
aam
and
push
inc
testl
mov
xor
adc
and
repz
fldl
mov
and
enter
mov
icebp
jbe
jmp
nop
xchg
ds
and
fwait
insl
out
mov
jmp
fwait
imul
mov
test
dec
ja
shl
and
fwait
stos
mov
dec
mov
loope
jl
outsb
mov
cmpsl
jnp
mov
stos
ja
mov
mov
xchg
in
adc
pop
pusha
lahf
shll
jle
inc
fisttps
dec
ja
aad
and
loopne
mov
or
ss
xchg
xor
and
popa
xor
pop
loop
aad
scas
scas
push
std
push
lock
outsl
jl
imul
hlt
test
dec
sbb
shlb
xchg
bswap
or
ja
sub
fsub
test
cmp
inc
pop
mov
hlt
xchg
in
xchg
sbb
fidivrs
outsb
jne
ret
inc
js
lock
popf
shld
shll
iret
bound
push
ss
cmp
or
xor
stos
cmpsl
enter
orl
repnz
cmp
movsl
mov
or
push
mov
mov
hlt
pop
xchg
inc
int3
hlt
or
mov
inc
jne
adc
push
inc
arpl
movb
lods
or
mov
fcompl
cld
and
sub
inc
fwait
inc
sub
cs
sub
mov
fiadds
sbb
lcall
adc
pop
lahf
mov
add
mov
sbbl
xchg
orb
dec
xchg
lods
dec
imul
xchg
mov
pusha
pusha
push
rcrb
test
adc
push
jle
and
dec
adc
rorl
jne
mov
sbb
add
sahf
std
add
mov
test
js
pop
scas
pop
es
push
pop
pusha
or
sti
leave
jle
insb
bound
jmp
loopne
rcll
and
xchg
or
jmp
push
push
jp
or
pop
sbb
push
add
mov
hlt
pop
in
jl
xor
mov
inc
movsb
lahf
dec
scas
outsl
add
ret
sahf
pop
lock
mov
insl
mov
mov
sti
jmp
fcompl
mov
pop
aas
sub
sbb
sbb
das
rcl
incl
fiaddl
add
rorb
mov
fdivl
push
sahf
xor
mov
dec
aad
push
leave
outsl
adc
inc
shlb
add
xor
adc
clc
jecxz
dec
out
sbb
mov
fldenv
mov
out
inc
cmp
repnz
rorb
pusha
adc
fisubrs
fidivrl
or
push
dec
sbb
jne
xor
stc
mov
jmp
paddusw
mov
lret
movsl
pop
aaa
xchg
cs
xchg
gs
mov
pop
or
or
jmp
mov
pop
pop
jg
lret
fbld
mov
leave
pop
jg
xchg
cmp
cltd
add
jp
cltd
or
movsl
dec
inc
pusha
sbb
addr16
pop
jl
mov
imul
cmp
mov
test
mov
neg
pushf
push
lods
pop
and
dec
mov
decl
push
mov
pop
aas
loope
cli
enter
fnsave
or
dec
lahf
sbb
adc
cmp
cmp
inc
mov
dec
sbb
lea
bound
jg
arpl
call
xorl
push
popf
insb
adc
pop
mov
std
inc
sub
lods
jmp
cltd
and
hlt
cmp
fistpll
inc
inc
push
rclb
push
inc
jns
jns
les
push
pop
or
mov
jbe,pn
add
adc
mov
cwtl
dec
jmp
lods
push
in
lret
adc
lea
pop
imul
imul
mov
pusha
and
or
test
loop
je
mov
mov
rolb
sbb
jle
push
dec
dec
in
call
add
adc
jae
cmc
movsb
cmpsl
inc
aas
shll
add
das
push
mov
faddp
fstl
cld
insb
lea
sub
aam
and
loope
jg
mov
je
lret
popa
fisubrs
cs
loopne
mov
pop
aam
bound
arpl
push
ljmp
mov
sbb
es
mov
mov
insb
in
push
cmp
insb
fidivrs
pop
jl
icebp
icebp
ds
dec
ds
les
inc
mov
pop
ljmp
add
loop
jp
es
pop
push
cwtl
pop
sub
xlat
add
sub
mov
pusha
inc
je
jg
lcall
cmp
aad
insb
mov
add
sahf
neg
int
insl
mov
or
pop
mov
int3
sbb
and
ss
cmpb
loope
push
push
imul
and
hlt
xor
int3
jne
call
pmaxsw
sub
test
jge
cmp
ror
aaa
mov
lea
ds
or
push
sbb
test
bound
pop
add
mov
imul
dec
sbb
cmp
fisubrs
cmpsb
stos
add
inc
xchg
lahf
popf
lahf
data16
jmp
popa
jmp
or
pusha
loope
or
leave
shrl
outsb
sbb
in
xor
shlb
mov
pushf
insb
mov
pop
clc
inc
pop
xchg
mov
xlat
inc
xor
inc
pop
and
loop
subb
mov
into
leave
imull
js
dec
sbb
sbbb
movsl
add
sti
insl
orl
xchg
ja
pop
addr16
sub
push
out
movsl
outsl
fimuls
neg
das
rcrl
loopne
aaa
loopne
daa
inc
loopne
inc
out
aaa
les
les
stos
stos
insb
lahf
dec
push
in
inc
pop
jno
push
sbb
push
stos
mov
outsl
and
stos
scas
push
pushf
repnz
mov
inc
xchg
arpl
jns
sbb
mov
push
hlt
ss
inc
sbb
inc
mov
xchg
fcoms
jbe
test
pop
jg
sbb
mov
sti
loope
mov
pusha
outsb
mov
sub
lahf
scas
nopl
cmc
ret
push
fmull
or
mov
xor
and
mov
adc
mov
cmpsl
test
out
and
lcall
jmp
jle
cmp
aad
pop
or
sub
cli
mov
inc
add
pop
js
mov
in
push
cmp
pop
popa
sub
jmp
lret
dec
add
cld
rorb
push
pop
stc
jecxz
mov
jnp
dec
inc
xor
mov
pop
mov
ljmp
idivb
fistps
sub
sti
les
mov
jmp
jo
adc
jns
ret
jp
fucom
inc
mov
push
test
mov
mov
cmp
adc
inc
es
cmp
jo
sti
das
push
adc
jmp
daa
mov
sub
mov
icebp
movsl
rclb
cmc
and
pop
adc
les
or
outsb
push
mov
pop
add
xor
pop
pop
dec
movsl
enter
lock
push
fldl
in
bound
adc
pop
ret
test
inc
frstor
arpl
in
sbb
loop
xchg
clc
and
shl
jne
shlb
cmp
jno
xchg
and
fmuls
pop
sub
jnp
sub
pop
int3
push
inc
ret
lods
mov
sbb
mov
add
aad
loopne
in
call
sahf
out
push
pop
jg
inc
inc
nop
cld
mov
jmp
and
cmpb
cs
or
cli
push
pop
cmpsb
loopne
jl
ret
pop
cmp
inc
inc
dec
inc
gs
into
xchg
aad
leave
inc
dec
in
ja
cmp
outsb
loopne
adc
in
xor
jp
inc
insl
mov
out
mov
mov
es
ss
adc
sbbl
mov
call
stc
mov
fisubrl
js
out
jp
xchg
negb
pop
sahf
push
or
dec
add
mov
data16
pop
enter
mov
mov
add
jl
movsl
pop
rcll
xor
mov
sub
arpl
cmpsl
int
jecxz
push
sub
adc
rclb
push
jo
and
out
repz
cmp
xor
adc
jp
pop
mov
std
push
shll
xchg
ja
or
pop
push
inc
call
push
pop
jbe
outsl
mov
inc
sbb
adc
inc
pop
decb
dec
test
mov
enter
push
aam
push
adc
push
aam
cmpsl
or
adc
pop
push
std
pusha
ds
mov
lock
mov
out
aad
cld
testb
mov
addb
imul
mov
or
xor
lock
sub
xchg
fcoml
adc
popa
mov
movsb
push
mov
inc
and
mov
aas
cmp
mov
mov
addr16
cs
cltd
add
mov
ret
clc
jecxz
data16
sub
mov
outsl
mov
notb
inc
jl
mov
ja
pop
push
cmp
imul
cmpsb
dec
icebp
fsubr
decl
or
rcrl
pushf
inc
and
mov
bsf
mov
mov
jo
repz
or
push
sahf
dec
adc
insl
inc
shrb
push
out
adc
adc
xor
xor
push
jne
loopne
repz
je
and
rcr
fisttpl
cwtl
sub
leave
test
jnp
in
pop
and
lcall
jl
jg
sub
sbb
cmp
add
cmp
outsl
mov
inc
push
addr16
lret
testb
aas
clc
icebp
mov
imul
mov
add
cmpsb
and
mov
js
fistpll
mov
mov
rcl
jle
fcomi
test
and
clc
mov
fmul
pop
adc
pushf
inc
mov
jg
into
ret
rcl
adc
divl
cmp
mov
cmp
adc
sbb
sti
add
int3
fcmovnu
or
push
pusha
int
sbb
ficompl
repnz
mov
dec
dec
dec
fsubl
push
mov
and
mov
pop
jo
push
fs
mov
aas
pop
xor
mov
mov
and
inc
daa
adc
je
iret
dec
lock
mov
or
mov
rol
or
aad
jbe
clc
cmc
clc
mov
int3
dec
push
jb
rclb
fiaddl
popa
sbb
pop
fwait
outsb
rcrl
xor
test
push
and
adc
testl
and
jge
dec
cmc
std
jbe
adc
lock
xchg
fstpt
mov
mov
pcmpeqw
pop
mov
jp
cmp
loope
xor
or
cld
popa
or
inc
adc
stos
dec
jl
adc
lods
xor
repz
push
popa
jns
push
lds
insb
dec
into
ret
pop
push
clc
in
jo
daa
adc
jecxz
sti
in
ret
movsl
scas
mov
or
imul
inc
jnp
clc
xlat
add
adc
adc
xchg
imul
sbb
lods
xchg
pop
jle
fs
movsl
das
out
inc
add
pop
lret
gs
repz
stos
add
out
jmp
lods
mov
mov
lea
hlt
mov
mov
sti
dec
lock
test
lcall
mov
sub
xorl
sbb
in
cmp
into
rcl
outsb
mov
pop
jmp
add
shrl
es
gs
and
cld
inc
mov
mov
adc
aas
jge
pop
sbbb
mov
ret
rol
jle
push
push
push
pushf
aad
sbb
xorb
xchg
into
lock
lret
mov
ljmp
loopne
jecxz
insb
int3
xlat
xlat
loop
fistpll
add
jg
jmp
add
xor
add
inc
call
cmpsl
push
jo
lods
clc
inc
fwait
stos
popa
js
ret
sbb
in
adc
push
js
outsb
mov
add
adc
and
cld
and
and
es
mov
cmp
push
sbb
xchg
mov
imul
push
cmp
mov
xor
cmpsl
add
sub
and
xchg
aaa
incb
mov
mov
fwait
call
inc
sbb
data16
add
mov
out
loopne
pusha
mov
xor
inc
pop
dec
xchg
xor
push
mov
pop
mov
dec
je
inc
shrl
ljmp
loope
add
mov
fcomps
lcall
ljmp
adc
jbe
adc
mov
aad
push
add
or
mov
inc
enter
and
mov
ss
scas
sahf
shl
pop
xor
xor
fimull
or
clc
ret
cmp
loope
push
mov
dec
sbb
outsl
sbb
mov
sahf
fcmovbe
cmp
push
rcll
lods
cli
mov
push
sub
cmc
addl
arpl
mov
sbb
shll
and
pop
jmp
les
mov
mov
bound
loop
inc
sub
test
movsl
daa
push
mov
dec
dec
mov
and
jg
pop
cli
rol
mov
push
int3
call
test
push
sarb
xchg
push
and
adc
push
ret
jb
adc
xchg
cmp
insb
mov
je
pusha
out
sbb
sub
xor
lahf
and
rolb
cmp
repnz
dec
sahf
dec
sbb
add
mov
shlb
idiv
mov
lret
or
jb
push
mov
adcl
cmp
das
lock
outsl
mov
rcrl
pop
cmpsl
sub
fcmovnbe
add
or
dec
push
jl
aaa
pop
inc
or
adcl
push
sbb
sub
sub
fistpll
fsub
mov
adc
add
icebp
lcall
hlt
cmpsb
mov
adc
mov
mov
stos
cmp
mov
dec
xchg
roll
popf
aaa
and
gs
push
loop
jo
xchg
fistl
test
test
mov
jo,pt
cmc
adc
mov
inc
loop
inc
leave
lods
sbb
add
xor
xlat
push
and
lock
lea
add
push
lcall
lcall
pop
loop
sbbb
inc
psllw
mov
cmpb
fdivrs
scas
fbld
in
sub
insb
dec
xchg
push
outsb
loop
jno,pt
inc
arpl
pop
pop
stos
or
rorl
pop
icebp
scas
mov
dec
sti
mov
dec
xchg
mov
jnp
jo
mov
xchg
shll
jp
adc
mov
xor
push
sub
mov
pop
icebp
sbb
jb
shll
test
popa
out
ss
xor
add
jp
mov
call
sahf
and
add
pop
lods
ja
dec
popf
ds
jle
test
inc
pushf
pop
pop
jo
fisubs
ret
cmp
aad
adc
or
adc
test
xchg
mov
call
mov
add
clc
mov
jbe
push
cli
adc
push
mov
pop
fsubs
test
fisttps
fiadds
and
cltd
popf
pop
sub
test
js
cwtl
pop
stc
jb
cmp
aad
loop
dec
add
icebp
aaa
jecxz
mov
or
mov
push
mov
adc
mov
sbb
repz
mov
jno
roll
xor
push
push
cmpsb
pop
and
or
push
in
imul
push
mov
pop
call
push
xor
mov
mov
out
ss
mov
mov
inc
jp
clc
outsl
jl
imul
sbb
lds
xchg
mov
sbb
pop
dec
jge
clc
mov
rolb
xorb
xor
arpl
test
test
or
jp
sbb
xor
adc
add
xor
inc
icebp
or
inc
addb
jno
mov
sarl
adc
inc
cmp
or
mov
mov
pop
pop
jbe
fwait
and
lret
xchg
add
leave
add
sbb
add
add
ret
dec
jne
lods
fwait
or
mov
sub
inc
subb
les
or
inc
sub
leave
pop
mov
jb
adc
into
or
fs
pop
je
lea
in
fcom
ffreep
sub
pop
idivl
dec
cmpsb
fdiv
hlt
jne
ret
test
lret
push
fimuls
or
add
jmp
or
jbe
mov
jns
xchg
add
push
insb
out
in
push
cmp
add
stos
stos
test
movsb
gs
std
aam
sti
cmp
cltd
jecxz
es
mov
and
mov
div
push
xor
adc
sub
mov
dec
cmp
push
add
jno
push
mov
push
popf
stos
pop
lea
cld
push
ss
pop
rcll
call
mov
add
test
mov
in
sbb
ret
adc
mov
ljmp
xchg
icebp
or
mov
jno
adc
inc
mov
pop
repz
out
ficoml
sbb
stos
inc
pusha
sbb
shll
sbb
cmp
out
sub
stc
mov
iret
pop
jge
cmpl
in
lea
push
ret
and
cli
lods
stos
cltd
mov
mov
stc
fucom
ret
hlt
or
mov
sub
icebp
test
mov
push
pop
mov
mov
loope
fists
ja
sbb
rclb
into
insb
dec
jg
mov
test
mov
or
or
pop
in
rcrl
xor
ret
adc
clc
movsb
out
lds
add
adc
scas
shlb
adc
fstps
adc
push
inc
push
xchg
mov
add
mov
cltd
sub
mov
stos
mov
inc
sti
cltd
frstor
icebp
fsubp
mov
faddl
loopne,pn
inc
jge
push
divl
push
add
mov
pushl
pop
adc
jo
adc
popa
pop
mov
xor
fmull
test
in
fisubl
std
pop
mov
pop
inc
ja
pusha
ljmp
lea
dec
into
inc
mov
imul
dec
push
jnp
outsl
cli
dec
cwtl
push
cmp
outsl
divl
aad
sbb
sub
call
mov
push
lret
jne
movsl
pop
cmp
sub
rcrb
push
push
popa
xor
mov
or
lcall
mov
shrb
sbb
movsl
pop
gs
dec
or
pop
popf
lds
jl
pop
sbb
mov
pop
scas
add
insl
loopne
cmp
mov
in
das
or
pop
cmp
arpl
cwtl
int
push
cs
lcall
and
mov
jp
or
xchg
lods
fsts
sahf
outsb
mov
lahf
sbb
std
jl
mov
call
add
sbb
xchg
xor
fs
add
cmpsb
roll
insb
and
jmp
push
mov
aaa
adc
cwtl
pop
clc
fadds
xor
ret
scas
add
nop
dec
inc
sbb
mov
enter
mov
and
aaa
mov
xor
lret
xchg
cmp
mov
and
add
push
and
cli
pushf
xor
sub
cmpb
lahf
add
test
jp
pop
jo
jl
negl
jb
push
cli
loopne
add
fildll
sbb
or
test
mov
lcall
dec
pop
adc
mov
sbbb
mov
out
gs
es
insl
push
mov
and
scas
addl
test
inc
mov
mov
mov
jnp,pt
or
test
pop
adc
jb
in
sbb
xlat
sub
ffreep
scas
enter
lods
xchg
popf
rol
lods
icebp
into
cmp
jecxz
xorb
pop
jno
adc
adc
dec
outsl
call
mov
pusha
mov
aad
das
test
jl
loope
mov
cmc
adc
sub
call
sub
sbb
xchg
xchg
mov
movsl
or
orl
mov
pop
pop
and
lods
adc
outsb
xor
mov
mov
inc
fwait
mov
cmp
sub
cli
fiaddl
or
pop
sub
cmpl
inc
dec
xor
or
in
xor
cmp
rcrl
adc
cmp
rorb
fisubl
mov
lret
ss
xchg
push
addl
outsl
sub
movb
mov
mov
jecxz
ret
and
lret
pushf
inc
das
push
jmp
adcb
mov
in
daa
add
call
pushf
inc
dec
setp
pop
dec
ljmp
sbb
sahf
pushf
cmp
lods
outsb
daa
sahf
push
filds
das
adc
in
loopne
pop
jnp
cmp
pop
idivl
push
cmpsb
stc
imul
aas
cmp
js,pt
cmp
xchg
scas
mov
or
add
sbb
adc
rcll
lds
mov
daa
mov
out
mov
bound
inc
imul
mov
cld
test
jecxz
pop
or
sub
out
shll
dec
test
das
cmp
test
and
cmp
ja
sti
or
jl
mov
push
aam
jmp
rclb
icebp
xchg
add
add
leave
push
repnz
outsb
pop
vmptrst
ds
aam
xchg
mov
pop
sbb
cli
aaa
rolb
in
idivb
lods
mov
mov
inc
loopne
jecxz
aaa
pop
jnp
add
icebp
jns
ljmp
loope
ror
add
mov
pop
sbb
lods
push
adc
push
je
subl
fldt
loope
lcall
sbb
sbb
stc
movsl
call
inc
xchg
fstpl
or
pusha
popf
jmp
push
sbbl
jg
cmc
pop
cmp
int
jno
inc
mov
adc
jne
or
ds
pushf
sbb
test
cmp
orl
adc
adc
cmp
and
xor
loopne
cmpsl
leave
inc
sti
pusha
mov
cmp
or
mov
mov
arpl
icebp
hlt
inc
xor
mov
xor
jne
inc
flds
cmpsl
sbb
push
or
mov
lock
iret
cmpsb
pop
cli
in
sub
xlat
adc
inc
push
cmp
cltd
cltd
xor
loopne
adc
and
popa
push
negb
pop
sub
pusha
add
sub
dec
js
add
adc
lea
xchg
pop
lods
stos
mov
gs
xchg
scas
lret
mov
ret
rcr
dec
pusha
dec
or
mov
sbb
sub
mov
jns
pop
cmp
enter
dec
stos
inc
int3
flds
and
xor
mov
or
ficompl
push
rorb
or
push
and
mov
sbb
xchg
jne
inc
push
cmpsl
mov
sbb
fldenv
pop
imul
sbb
xor
jge
in
mov
inc
ret
xor
jecxz
in
add
dec
repnz
xor
or
or
mov
cld
xorl
pusha
sbb
jle
adc
movb
pop
mov
jne
and
push
clc
inc
mov
fwait
clc
push
gs
add
es
sarb
inc
add
in
les
push
fiaddl
lock
xor
shrb
imul
inc
filds
jle
jne
pop
and
pop
lods
rorb
mov
mov
xchg
gs
loopne
push
aaa
loopne
cmpsb
daa
adc
sti
cmp
xor
in
aas
sub
das
lret
iret
add
mov
faddl
adc
mov
outsb
inc
mov
test
sbb
in
adc
dec
popa
pushf
jp
movsl
mulb
mov
bound
sahf
add
andl
cmpsl
mov
pop
xchg
shlb
mov
sbb
or
int3
mov
adc
xor
pop
fists
call
das
cmp
sbb
cmpsb
xchg
sub
mov
je
cmp
inc
loop
adc
testl
idiv
into
push
cmp
mov
inc
sub
inc
and
hlt
inc
adc
or
mov
cmp
test
das
cld
add
into
stos
add
repnz
pop
or
adc
std
lret
mov
sub
mov
lea
fimull
mov
push
pop
test
cmpsb
jbe
mov
sbb
sti
sbb
cmpsb
or
xchg
aad
addl
leave
xlat
nop
xor
push
mov
sti
stos
imul
mov
pop
adc
ja
lret
jge
roll
cmp
subb
jo
ret
jb
dec
xchg
cli
adc
lahf
es
scas
rolb
jne
int
std
pop
shlb
cmpsl
mov
and
adc
shll
jb
mov
or
xor
cmp
sahf
push
in
out
cs
dec
inc
mov
push
push
mov
inc
outsl
je
sub
mov
xchg
ret
ds
jbe
sbb
sbb
sahf
lcall
cwtl
xor
dec
mov
mov
rcr
lds
sbb
test
out
ret
cmc
lods
mov
mov
mov
mov
push
aad
mov
jbe
mov
cmp
jmp
and
inc
sbb
cwtl
jecxz
xchg
sub
push
adc
add
dec
adc
fcmovnb
dec
mov
add
cld
mov
dec
subps
ret
sub
sti
hlt
xlat
mov
sub
or
mov
ss
js
call
sbb
test
inc
rclb
pop
xor
orl
adc
mov
inc
and
sbb
leave
pop
lock
xchg
pop
mov
negb
xchg
and
xor
ret
test
inc
xlat
fiadds
cs
cld
mov
insl
repz
push
mov
sbb
popa
lock
dec
xchg
mov
ret
inc
cmp
into
test
xlat
add
in
out
mov
xchg
test
xchg
mov
fidivrl
lcall
cs
das
mov
jb
nop
lock
notb
and
fwait
xchg
xor
enter
sub
xchg
fisubrl
sbb
mov
mov
ret
clc
movsb
sbb
into
rorb
lcall
cld
push
push
pop
gs
mov
pop
daa
add
mov
ret
mov
sbb
in
xor
add
cmp
sub
inc
push
aas
or
lcall
outsb
popa
adc
pop
popl
hlt
cmp
add
cmp
rol
inc
pop
daa
mov
faddl
rolb
xchg
hlt
lret
and
push
cmp
fwait
out
idivl
outsb
mov
cmpsl
or
inc
inc
jb
pop
adc
xor
push
ljmp
mov
flds
bound
xchg
loope
xchg
jge
daa
stos
in
mov
nop
sbb
mov
jmp
mov
mov
testl
jp
add
rorb
or
adc
insl
mov
fistpl
out
mov
mov
sbb
push
or
pop
call
jl
test
pusha
or
inc
bound
adc
scas
cmp
push
aas
adc
int
andb
jmp
push
push
cmp
mov
les
enter
loope
push
sbb
ja
add
mov
outsl
rcl
rorb
xchg
cmc
inc
mov
aaa
out
mov
lds
shll
push
jle
inc
mov
js
call
sub
inc
addl
or
mov
mov
mov
lahf
mov
xchg
in
mov
out
and
jecxz
or
jecxz
cld
mov
les
fcomps
jo
mov
cmc
mov
adc
lock
add
imul
sub
lret
flds
ss
or
cli
or
inc
xchg
icebp
stos
mov
xchg
leave
je
jl
sbb
mov
fidivrl
adc
cmp
daa
mov
jno
das
stos
sub
push
shrb
jns
mov
xor
inc
jo
popa
test
pushf
insl
incl
sbb
cmc
or
cmp
leave
addr16
jg
mov
mov
cmpsb
pushf
pop
xlat
adc
mov
or
push
pop
and
inc
pop
jmp
xor
adc
aaa
mov
push
dec
dec
mov
pop
fdivr
push
push
mov
pop
mov
xchg
cmc
mov
sbb
addr16
adc
test
sub
mov
adc
ljmp
jnp
outsl
pop
mov
dec
push
fistpl
fdivp
sbb
lods
sbb
loop
mov
lcall
clc
cmpsl
cmp
and
mov
sub
inc
cmp
inc
jg
jno
pop
in
aam
mov
sub
movb
ja
mov
sahf
add
fcmovnbe
lea
jno
xlat
mov
mov
decl
inc
inc
cmpsl
les
push
add
int3
loopne
jmp
fiadds
mov
movsb
jne
fs
movsl
push
dec
or
inc
pop
mov
les
ss
jno
push
jmp
bound
lods
sbb
fdivs
mov
xchg
add
scas
push
adc
inc
test
ds
push
push
add
push
stos
imulb
xlat
mov
into
fdivp
data16
inc
outsb
adc
bound
into
lret
dec
cmp
popf
pop
das
arpl
xchg
sbb
fidivrl
sti
or
jbe
mov
add
push
inc
into
lcall
das
repnz
dec
pop
dec
aas
ja
mov
sahf
or
sbb
aaa
adcb
xor
fdivp
out
xchg
int3
int3
push
cmc
sbb
sahf
mov
inc
es
insl
jae
js
mov
ret
test
fs
aaa
fisubrs
push
and
or
or
cmpsb
mov
or
xlat
bound
mov
cmp
cmp
ficoml
into
div
aaa
movsl
in
pop
sahf
call
lods
mov
repz
add
mov
push
mov
add
mov
mov
dec
dec
testb
pop
sub
sbb
and
sub
jb
fs
and
sub
pusha
popf
sti
fstp
imul
cli
jg
push
jg
fbstp
test
stos
jecxz
and
es
push
add
push
add
pop
call
andb
pop
jg
jno
inc
sbb
jg
call
mov
mov
ss
add
fs
lock
lods
test
pusha
aam
dec
into
in
dec
into
and
and
call
aaa
mov
cltd
insl
cltd
dec
mov
icebp
mov
je
lock
rcrl
and
jae
mov
cmpb
or
adc
pop
dec
lea
and
clc
ret
sahf
mov
icebp
or
dec
insl
push
mov
ljmp
jne
jbe
jp
test
mov
mov
adc
jbe
pop
clc
xchg
push
pop
jno
test
adc
pop
into
cwtl
pop
fistpl
pop
nop
add
shll
mov
push
lcall
xchg
push
and
xchg
push
clc
stc
push
sub
inc
mov
mov
sahf
xchg
dec
pushf
in
xchg
lcall
or
or
cmpsl
xchg
outsl
bound
jb
test
cmc
push
fdivrs
imul
cmp
push
xlat
imul
jns
cs
push
lods
sub
push
rcl
push
push
or
add
or
lret
cmp
sub
push
movsl
dec
outsb
and
rcrl
or
lods
shll
mov
mov
ret
sbbb
add
lds
mov
mov
jo
ds
sbb
push
dec
mov
xchg
push
push
mov
fwait
lahf
fcompp
imul
sub
xor
push
ret
scas
push
shll
mov
mov
mov
mov
and
add
call
mov
or
push
add
std
push
int
xchg
or
jae
mov
mov
mov
lods
repnz
push
imul
jp
enter
inc
adc
pop
push
scas
fcmovbe
pop
test
ret
push
xchg
addb
xchg
clc
call
or
nop
dec
cmp
mov
les
sub
sbb
aaa
outsl
into
shl
es
rclb
jns
out
and
in
sbb
ss
adc
ja
add
pop
xchg
pop
sub
int
in
mov
inc
icebp
mov
clc
out
xchg
loop
push
fmuls
mov
mov
pop
xchg
aaa
decb
jae
lock
inc
les
ljmp
cltd
pop
inc
xchg
punpckhdq
xor
mov
int
lock
dec
jl
ja
pop
lock
and
fs
mov
jbe
mov
mov
and
sub
push
fstpt
ljmp
mov
cmp
cs
std
jg
mov
mov
mov
pop
or
aam
rcl
lcall
jbe
or
int3
xor
ja
aaa
ret
out
jmp
jns
add
inc
xor
dec
fidivrs
icebp
and
xchg
ljmp
std
cmpsl
cwtl
out
add
in
and
fmuls
jecxz
push
insl
subb
outsl
cld
sbbl
rorb
js
fsubr
mov
cld
test
les
mov
imul
mov
cltd
rorb
clc
mov
or
dec
call
ja
xchg
adc
pop
notl
push
or
jno
call
jo
cmp
aad
stos
pop
add
adc
dec
aas
cld
adc
add
mov
xchg
movsl
inc
jp
mov
jno
pop
movsl
mov
push
jmp
fstpl
xor
pusha
rolb
xlat
adc
add
sbb
fdivrs
push
xchg
adc
rclb
pop
mov
dec
sti
push
push
rorl
push
dec
add
push
js
into
lods
dec
insb
xor
out
mov
xchg
inc
adc
jne
push
adc
pop
push
call
dec
push
call
add
jge
mov
sbb
lret
xor
jl
jne
inc
xor
xchg
leave
insb
ljmp
push
mov
inc
cmpb
addr16
inc
push
loop
inc
and
mov
and
pop
pop
push
adc
cmp
adc
jmp
pop
lds
insl
imul
in
loop
popa
mov
mov
xchg
adc
sbb
mov
pusha
jo
sub
xorb
rorl
jae
pop
xor
sahf
dec
push
add
jmp
or
stc
pop
inc
hlt
data16
aad
pop
fisttps
pop
or
cwtl
cmp
cmpsl
jg,pn
sti
in
and
pusha
sbb
jl
sub
cmp
imulb
insb
jne
sub
test
int3
jg
clc
testb
jne
dec
fcoml
shr
jmp
loopne
or
lods
mov
daa
mov
lods
outsl
jge
outsl
add
inc
cwtl
cmp
dec
adc
xchg
je
sub
es
lea
dec
fdecstp
loope
fsubs
mov
cwtl
mov
rcl
enter
jns
sub
inc
lret
cmc
mov
mov
and
pusha
push
mov
mov
lahf
and
ret
mov
adc
popa
arpl
xchg
or
xor
inc
call
popa
pusha
mov
xchg
and
pop
push
jg
in
cmpsl
testl
out
jbe
sub
loope
mov
and
jecxz
pop
and
imul
xlat
and
xchg
lcall
jg
insb
push
push
mov
or
ror
or
cmpl
pop
mov
movsb
repnz
sbbb
andl
sbb
fbld
insl
and
stos
xchg
sbb
in
stc
lcall
mov
cld
rol
out
test
inc
pop
pop
dec
inc
dec
loope
pop
cmpsb
pop
sub
fbstp
adc
jmp
scas
inc
inc
sbb
sbb
pop
cmp
gs
out
xor
pushf
addr16
jge
rol
xor
aaa
rcl
mov
push
jmp
andl
shrl
push
add
add
mov
pop
jp
subl
adc
jmp
sahf
jmp
xor
push
pop
cwtl
dec
jecxz
test
mov
mov
dec
add
rcll
fmull
push
xchg
jle
cmc
add
cmpsl
jmp
imul
scas
mov
mov
fmulp
aaa
inc
dec
dec
ffreep
mov
push
push
and
lods
insl
sub
cmp
add
test
loopne
and
cli
xor
ss
andl
jmp
mov
cmc
jne
popf
ss
stc
cwtl
pusha
addl
mov
sub
add
jb
xor
sbb
aam
mov
mov
sti
xchg
int3
mov
ja
add
and
push
dec
jl
outsl
out
jbe
in
sub
movl
sbb
pusha
loope
cmpsl
mov
dec
xchg
mov
jb
lahf
fsubrs
push
pop
cmpb
iret
lods
lcall
aaa
scas
adc
loope
mov
mov
icebp
sub
sub
out
into
xchg
adc
push
sbb
ljmp
dec
out
inc
sbb
pop
mov
ror
add
iret
or
sub
mov
mov
fistpll
std
jnp
cmp
dec
aad
inc
xor
mov
adc
clc
add
dec
push
push
clc
repz
insl
jg
inc
mov
jno
cmp
jae
mov
sub
mov
mov
cmp
std
mov
in
popa
stos
pushf
push
push
xchg
scas
ret
fistpl
jb
add
shrb
or
mov
orb
mov
mov
cmc
shlb
or
sbb
sbb
pop
fistl
cmpsb
jge
imull
pop
sbb
and
dec
push
pop
cmp
mov
add
shr
xchg
je
clc
sub
fdecstp
scas
data16
xchg
gs
jne
fistl
stos
and
or
test
loop
les
adc
or
das
mov
or
lds
fidivrs
addr16
add
roll
enter
dec
aaa
popf
insl
cmp
outsb
bound
mov
cmpsb
inc
cli
xchg
mov
aas
sbb
mov
cmp
pusha
and
shll
sbb
out
sbb
mov
sbb
les
outsl
mov
ljmp
mov
cli
loopne
ret
lret
aas
sub
cmc
adc
pop
pop
and
jle
sti
adc
loope
cmp
inc
push
push
daa
adc
insb
mov
mov
movl
fs
push
mov
imul
jmp
sbb
psrld
call
inc
cld
lahf
add
jl
js
cmp
repnz
dec
xchg
rcl
cmp
adc
and
push
cs
add
mov
sub
cmc
mov
push
imul
ffree
pop
in
clc
sahf
xor
pop
pop
xor
push
lcall
ja
insl
scas
add
pop
mov
mov
roll
mov
dec
mov
inc
mov
imul
pop
shrb
popa
std
addb
aaa
insb
xor
sbb
fisubs
out
fiaddl
arpl
imul
das
cld
loopne
aam
dec
cmp
cmp
test
push
mov
push
icebp
in
repnz
movl
dec
cli
outsl
cld
sub
mov
icebp
pop
mov
lea
xchg
divb
sbb
xchg
sbb
icebp
fbstp
jnp
sahf
cltd
and
and
ret
je
and
mov
sbb
add
idivl
sub
mov
aas
in
mov
cmp
jae
insb
test
icebp
shrl
push
or
inc
add
nop
arpl
incl
ret
mov
pop
lock
push
imul
pop
inc
mov
sbb
xchg
es
add
pop
xor
ret
mov
add
mov
push
push
xchg
dec
cltd
add
movsl
lods
ljmp
les
xor
nop
das
ljmp
sub
sbb
add
cmp
mov
sbb
inc
jo
pop
or
sti
shl
out
movl
lea
out
or
outsb
adc
clc
push
cmp
xchg
subl
popl
mov
add
sub
loopne
mov
mov
mov
cmp
movl
push
mov
ret
or
and
mov
and
shlb
cs
pop
shrb
ret
xor
lret
adc
shl
lret
add
and
int
xchg
or
jb
iret
mov
clc
sub
inc
adc
adc
or
mov
loope
fs
outsl
ficompl
jecxz
jmp
lret
cli
adc
inc
and
sarb
stos
xchg
movsl
pop
or
mov
mov
addb
adc
bound
mov
mov
inc
jmp
jg
dec
fdivl
sub
and
xor
sahf
adc
out
add
push
push
nop
mov
jae
adc
mov
scas
mov
mov
jo
push
ss
jg
fisttpl
or
mov
push
daa
push
test
jg
mov
stc
push
pop
add
inc
jne
out
pop
dec
aas
loope,pn
out
scas
cmpsl
loop
fnstcw
fildl
jp
cmp
and
xchg
cmp
mov
aas
and
xchg
into
or
add
adc
mov
inc
sahf
inc
das
xlat
xchg
sbb
js
outsb
jecxz
cld
test
mov
test
xlat
add
sbb
out
stos
das
shlb
sub
xchg
fsubl
stos
xchg
pusha
and
imul
xchg
pushf
push
dec
mov
or
es
or
test
fwait
hlt
push
cs
xchg
mov
andl
test
inc
pushf
fwait
out
int
cli
mov
mov
fldl
cmp
test
mov
out
push
inc
cmp
andb
sahf
push
jle
push
decb
je
sbb
sub
pop
clc
clc
add
out
mov
ja
cmc
shrb
lds
xor
call
jae
dec
shll
jge
outsb
dec
inc
std
icebp
jb
mov
mov
aas
cltd
inc
pop
mov
fs
adc
xor
mov
loop
cmp
adc
imul
out
jo
ret
sbb
push
dec
add
subl
jnp
mov
sar
decl
cld
cmp
in
and
jge
mov
mov
push
fs
int3
xchg
sti
ret
pop
sbb
mov
lea
ds
and
lcall
outsl
nop
push
int
test
inc
pop
imul
pop
mov
push
inc
adc
adc
push
stos
pop
xchg
jbe
pop
xchg
cmpl
push
aaa
and
loopne
xchg
xlat
ss
fimull
repz
je
ljmp
and
nop
jo
pop
xorb
pop
pop
pusha
push
leave
testl
inc
mov
mov
sarl
lcall
adc
insb
in
jge
jns
rol
xchg
jnp
loope
stc
sti
inc
xor
arpl
inc
xchg
enter
push
rcrb
scas
stc
jmp
cmpsl
adc
inc
pusha
mov
pop
scas
add
mov
and
shll
mull
ds
shl
addr16
sbb
shl
ret
cs
pop
cs
cmc
imul
inc
out
mov
outsl
xor
dec
cmp
xchg
popa
pop
bnd
dec
xor
jecxz
push
sahf
inc
cmp
push
push
dec
das
roll
mov
imulb
push
xor
adc
std
imul
stc
dec
or
and
leave
jae
aaa
inc
lahf
lcall
jmp
mov
or
rclb
imull
xor
inc
or
mov
pusha
inc
lea
mov
loope
lcall
pop
dec
dec
test
jg
rcl
sub
inc
and
popa
jbe
ljmp
decl
mov
dec
inc
and
cmpsb
or
add
and
inc
dec
adc
sbb
mov
aam
add
cmc
lods
mov
nop
cltd
js
or
mov
sahf
cltd
divb
lahf
out
sahf
mov
adc
nop
and
or
inc
les
adc
lea
push
fldt
cltd
push
lret
cwtl
or
enter
loopne
push
enter
mov
and
jg
pop
bound
sub
sbb
pop
pop
xchg
and
mov
hlt
iret
flds
pusha
adc
cli
inc
jmp
in
inc
subb
and
fsubl
jl
loop
cmovbe
pop
mov
outsl
aaa
repz
mov
dec
dec
or
mov
clc
jg
and
out
sub
cwtl
or
pop
decl
sar
add
test
push
sti
aam
and
fbstp
mov
or
scas
insl
add
and
and
test
addr16
mov
inc
dec
mov
jbe
mov
push
or
dec
xchg
inc
lds
std
pop
fsubrp
mov
mov
mov
popa
fld
and
mov
std
and
repz
xchg
rclb
pop
enter
stos
fwait
mov
or
je
jno
push
and
int
fistps
outsb
addb
ljmp
ljmp
js
cmp
jmp
adc
mov
sbb
mov
imul
xchg
push
push
mov
outsb
cli
testl
pop
adc
and
pop
aad
fwait
pop
push
and
jns
sbb
jo
add
or
jo
fiadds
fmull
push
lods
push
sbb
sbb
lret
out
stos
mov
std
pop
lea
inc
and
jbe
les
jecxz
hlt
lcall
movl
icebp
mov
clc
mov
out
cld
ja
insb
jmp
sub
mov
fdivl
aaa
push
sbb
xchg
int3
out
aam
lods
int
inc
or
push
push
dec
dec
je
xor
repz
mov
dec
xor
or
pop
sti
decl
push
insb
mov
decl
ljmp
fnsave
ljmp
out
xchg
sub
inc
fwait
jae
mov
cli
push
fsubrl
lret
mov
aad
push
shlb
sbb
imul
mov
mov
xorb
mov
mov
ss
mov
test
mov
lds
sbb
lods
sbb
jmp
rorb
in
fists
pop
jge
inc
pop
and
xchg
daa
and
dec
or
outsl
insb
shl
jne
push
js
stos
mov
outsb
lods
popa
orl
arpl
adc
aam
mov
cli
sub
inc
rclb
sub
and
pop
rcl
fcmovu
ljmp
dec
sbb
es
cwtl
nop
inc
mov
or
and
out
pop
mov
stos
inc
add
mov
mov
inc
lahf
mov
or
adc
scas
mov
imulb
out
mov
cmp
push
mov
jne
or
cli
mov
xor
add
es
xchg
push
cmp
sbbl
lock
inc
or
fxch
sbb
fimuls
sub
inc
mov
push
cld
fldenv
add
dec
jl
mov
andb
popl
and
jbe
mov
aaa
and
mov
rcll
add
sub
ljmp
pop
cli
incl
mov
fld
sbb
and
inc
cmp
push
lods
rol
mov
ret
push
fstl
sub
inc
inc
pop
cmp
xchg
sbb
inc
out
pop
lea
andl
fcoml
test
cld
lods
mov
cmpsl
lahf
mov
dec
mov
or
stos
pcmpeqw
hlt
push
loopne
cmp
inc
test
cwtl
es
push
sub
jecxz
push
adc
sti
add
std
mov
sahf
sbb
cmc
push
adc
mov
pop
jp
aad
mov
out
push
add
xor
ret
rolb
addr16
out
cmp
xlat
movsb
pop
mov
xor
lds
adcl
push
sub
xor
repnz
outsl
cmp
sbb
push
gs
jl
clc
jl
lret
cmp
jl
daa
fisubl
shrl
add
roll
or
je
pop
addl
orb
std
outsl
sbb
pushf
xchg
dec
repz
mov
sbb
js
pop
test
shl
adc
xchg
loope
shrl
mov
ss
or
hlt
rcrl
lea
test
test
loop
addr16
mov
call
ljmp
cmp
cmp
outsl
frstor
cli
stc
or
popa
xadd
jge
lods
adc
sbb
mov
jne
pop
sbb
ljmp
fildll
mov
jp
clc
inc
out
add
cld
outsl
hlt
fdivs
loope
das
sbb
pop
mov
or
leave
cmp
or
arpl
shl
test
inc
pop
xor
ficomps
outsl
jg
jnp
clc
aad
jecxz
adc
int
out
mov
mov
dec
xor
rol
adc
or
out
in
sub
jmp
and
or
out
rol
arpl
incl
xchg
or
rclb
cs
lods
inc
aam
stos
mov
push
xchg
scas
pop
dec
mov
sub
icebp
pop
xchg
add
adc
push
jns
xlat
lea
outsl
mov
xchg
inc
or
mov
call
pop
clc
dec
fidivrs
shrl
add
nop
pushf
add
incb
add
sub
loopne
cmp
push
dec
mov
xlat
sbb
cmp
mov
xchg
mov
mov
data16
sub
rcl
and
inc
lret
pop
mov
test
mov
scas
xchg
and
enter
ret
jmp
adc
lret
popa
cli
das
adc
sti
test
push
sti
int3
mov
or
sub
push
mov
pop
and
jnp
dec
outsl
push
and
pop
xor
imul
mov
fldenv
push
or
jbe
push
jecxz
imul
aaa
repnz
jg
mov
mov
push
lcall
dec
and
fistps
mov
fnop
jge
xchg
lock
testl
mov
sbb
clc
shrl
loope
lea
aad
cmpsb
or
add
testl
xchg
outsl
sbb
jns
insl
int
mov
xlat
loope
pop
mov
orb
outsl
and
stc
push
adcl
mov
sahf
fcom
mov
xor
stos
outsb
push
ja
sub
clc
loopne
mov
je
inc
shl
adc
fistps
mov
lods
sbb
push
jecxz
daa
or
sbb
or
das
cld
out
sbb
sbb
xchg
sbb
sub
repnz
out
mov
xchg
inc
clc
rol
cmp
pop
clc
pop
pop
fsubs
nop
xorl
jae
cmpsl
dec
iret
mov
out
xchg
push
gs
test
mov
clc
stc
sbb
jnp
lahf
bound
and
in
dec
push
push
push
roll
pop
and
pop
bound
mov
cmp
xchg
mov
xchg
add
out
mov
je
fidivs
cmpsl
pop
int3
sbb
mov
and
dec
push
add
std
icebp
jmp
icebp
xor
push
jle
popa
repz
jbe
xor
sbb
inc
andb
mov
rcll
fcomip
outsl
and
repz
xchg
push
inc
pop
inc
nop
insb
or
into
outsl
jmp
jb
imul
and
inc
test
inc
pop
sub
mov
fbld
popl
cmp
popf
das
and
imul
or
pushf
in
in
call
pop
pop
rcll
sbb
lret
push
mov
cmp
sub
adc
jo
sahf
in
mov
xor
jns
and
cmp
in
sbb
aad
rolb
scas
cmpb
push
xor
push
or
mov
loop
int
loop
inc
mov
lcall
divl
mov
ret
mov
pushf
add
jo
and
xchg
subl
pop
dec
inc
mov
iret
mov
push
xchg
push
cmpsb
pop
adcb
aam
ret
pop
setnp
testl
mov
scas
or
pop
xchg
adc
call
mov
push
dec
mov
pusha
cmp
shlb
hlt
xor
sahf
adc
inc
jne
add
mov
lods
lock
sbb
fwait
jb,pt
scas
in
inc
xchg
ror
cmp
dec
sub
sbb
insl
mov
mov
das
popf
jmp
loope
stos
jne
add
fildl
outsl
data16
xchg
xchg
push
mov
rcll
out
cmp
mov
loopne
jno
call
imul
fists
cs
mov
mov
loope
adc
das
bnd
clc
jg
popa
dec
jae
mov
pop
push
add
fidivl
fs
rclb
sbbb
test
stc
push
ror
pop
jae
nop
xchg
lea
xlat
clc
dec
xchg
addl
addl
pop
loopne
xchg
jl
insl
cld
outsb
jo
mov
test
js
jb
xchg
int
add
sbb
jg
lcall
or
inc
in
xor
adc
arpl
sbb
dec
sbb
out
sub
adc
xchg
sub
adc
inc
sbb
andb
arpl
mov
rclb
int3
call
arpl
push
adc
cmp
cmp
movsl
hlt
test
pushl
xor
add
lcall
ret
jg
pushl
push
scas
sbb
pop
cmp
xchg
inc
add
push
fisttpll
mov
subl
mov
pop
inc
fwait
pop
loop
add
mov
incl
nop
popf
dec
jo
test
mov
faddl
mov
jge
clc
lahf
shll
std
arpl
jge
movsb
xor
roll
sub
cmp
je
or
call
mov
xor
lret
stos
negb
jg
mov
jmp
xchg
daa
roll
stc
mov
hlt
sbb
jo
cld
dec
fdivr
push
cwtl
shrl
movsb
mov
add
ljmp
pop
les
pop
push
stc
jle
shrl
pushl
std
das
pop
inc
sahf
add
xor
push
push
or
push
add
inc
pop
mov
andb
pop
lahf
test
cmp
cld
jg
mov
loop
add
mov
test
add
push
pop
icebp
jo
lock
add
push
jmp
jp
test
out
xchg
fbstp
fiadds
minps
push
cwtl
mov
andb
loopne
mov
in
roll
dec
das
cmp
popf
mov
pusha
mov
dec
aad
rcr
inc
rcll
add
ret
adc
or
pop
push
mov
sbb
lret
dec
adc
inc
fsubr
dec
xor
mov
pusha
imul
aaa
push
xor
inc
xor
xchg
stos
lock
pop
faddl
lcall
push
jg
xor
cli
shr
rol
sub
jg
dec
rorl
cs
imul
nop
in
and
jno
sbbb
data16
jo
inc
fucomip
push
or
xchg
mov
adc
popa
push
je
popl
adc
fs
mov
js
and
test
outsl
sbbb
cmp
xor
rcrl
dec
cmp
cmpsl
shll
test
push
ficoml
xchg
or
imul
and
jp
mov
cli
jp
aam
rorb
lods
jl
xchg
mov
jg
inc
cs
adc
cld
sbb
mov
sbb
add
inc
orb
cmp
xlat
mov
and
das
jl
cmc
jb
mov
cli
dec
sahf
inc
aas
out
mov
js
sub
and
adc
dec
hlt
push
xchg
pop
ds
dec
push
sahf
mov
in
lods
mov
mov
add
jle
cli
ret
jmp
cmp
xchg
xor
fxch
xchg
rol
add
cwtl
popa
add
fiaddl
mov
cld
sub
add
xchg
jo
in
stc
mov
out
cmp
sbb
das
xor
imul
sbb
outsb
mov
and
and
insl
rorb
dec
pop
test
ljmp
inc
cwtl
mov
and
jg
cmp
and
outsb
pusha
sbb
sub
cld
jge
je
cld
adc
mov
pop
adcb
cs
fs
and
cld
pop
mov
cmp
fcoms
mov
adc
inc
jb
or
and
stc
sbb
or
dec
xchg
idiv
outsl
push
movsl
sub
pop
shrl
mov
push
fsubs
fidivl
mov
jns
xchg
insl
aad
push
movsl
pop
jb
xchg
call
and
jo
fcomps
push
cli
or
add
mov
mov
pop
rep
iret
mov
jge
int
add
inc
lock
shlb
or
or
xor
and
les
test
cmpsl
add
in
fcompl
pop
pop
data16
das
xchg
stos
xchg
rcrl
hlt
and
mov
js
mov
fildll
xchg
add
or
xchg
dec
mov
mov
shrl
push
mov
loop
dec
fwait
and
clc
add
out
xchg
mov
stos
pop
push
xchg
jmp
enter
add
sbb
adc
xor
fadd
fcoml
sub
push
insl
fimuls
mov
fldl
pop
jo
int3
enter
ja
jo
mov
cli
push
pop
jg
ja
stos
aaa
les
xor
cli
or
mov
std
sbb
xor
lods
mov
mov
test
aas
lcall
inc
fnstenv
iret
in
cmpsb
adc
sbb
jns
sub
inc
cld
outsl
pushl
sbb
shl
call
mov
les
or
aam
xor
ffreep
pop
cmp
rolb
pop
sbb
add
cmc
mov
out
pop
into
test
fisubl
outsl
rorl
icebp
mov
loop
fdivl
mov
pop
sahf
jle
imul
js
stc
test
pop
jge
xor
sbb
add
sub
and
sbb
fsubl
inc
call
mov
in
test
mov
add
hlt
cld
jmp
push
arpl
mov
inc
pop
lret
and
ss
decl
ss
dec
or
or
pop
stos
mov
inc
jo
xchg
enter
hlt
pop
fcmovnbe
inc
rcrl
dec
outsb
xchg
stos
out
push
jecxz
repz
mov
cs
add
in
jne
push
push
movsl
xchg
movb
mov
pop
bound
leave
push
lret
popa
sub
sub
push
cli
incl
insl
and
xor
decl
in
mov
nop
sub
xor
paddb
movsl
lcall
cs
xchg
jo
daa
xchg
cwtl
xor
rcrb
in
clc
mov
into
testl
lea
push
mov
frstpm(287
and
pop
mov
incl
adcl
inc
mov
and
repz
jl
fildll
dec
push
gs
xchg
add
clc
mov
insl
loop
ret
xchg
mov
ret
ror
mov
in
sbb
push
push
bts
cmp
loope
xchg
mov
jne
cs
fbstp
sbb
out
sbb
and
outsl
cmc
test
dec
ret
and
xchg
and
faddl
adc
and
jae
push
clc
and
popf
xchg
lcall
mov
in
jne
shrl
popa
pop
push
pop
shrb
outsl
sbb
and
dec
add
rorl
sbb
inc
std
push
lock
mov
xchg
lret
gs
insb
xorb
mov
std
mov
jno,pn
ss
rclb
in
xorb
leave
imul
inc
in
or
and
fdivrs
lock
adc
loop
push
stos
in
and
mov
fldl
mov
or
mov
push
cmp
fbld
xor
icebp
aas
or
jle
jp,pn
lds
fidivl
xchg
and
xchg
repnz
adc
add
cmp
mov
adc
test
sahf
into
inc
dec
or
test
dec
std
test
call
outsl
fnstsw
gs
dec
cmp
xchg
cmp
adc
mov
sub
push
ljmp
leave
lock
test
data16
pop
add
shlb
fstpt
sbb
add
stos
clc
addr16
in
push
or
inc
jno
gs
mov
rcll
rorb
pop
fcomp
jp
mov
dec
pop
out
sbb
add
sti
xor
rorl
push
aad
ja
outsl
cmc
call
test
in
scas
dec
psubusb
imul
test
mov
sahf
and
in
dec
pcmpeqb
outsb
lcall
pop
push
sub
or
pop
pop
push
in
xchg
js
jle
das
dec
bound
push
outsl
cmp
inc
aaa
scas
mov
push
test
and
dec
push
ret
lret
mov
mov
call
sbb
stc
cwtl
inc
jmp
inc
pop
call
cld
push
jle
push
je,pn
es
clc
xchg
imul
mov
xor
lods
xor
dec
sbb
jg
daa
jp
nop
cmpsb
ret
subl
outsb
inc
lods
pop
addr16
add
mov
aas
dec
std
ljmp
xchg
popf
fwait
pop
rcrb
mov
xchg
mov
push
xor
push
sarb
lods
sbb
push
inc
mov
out
insb
lds
cmp
icebp
add
add
jmp
xchg
imul
notl
sub
push
aam
push
jmp
arpl
hlt
inc
xor
sbb
in
xchg
jp
aam
push
or
push
mov
cmp
lods
hlt
sbb
pop
les
in
push
jg
mov
xor
mov
jo
xchg
inc
add
jl
pop
mov
xchg
cmp
dec
or
mov
adcl
ljmp
dec
lret
arpl
cmc
add
rcr
add
dec
aam
insl
loop
ret
xchg
test
cmpsl
shll
cld
mov
cmpsl
sti
into
xchg
cmpsb
adc
push
inc
jle
pop
stos
cli
clc
popf
jmp
loopne
mov
mov
cmp
mov
imul
mov
popf
xor
popf
outsb
xlat
jne
mov
sub
jno
push
int
imul
in
pop
clc
cmp
xor
dec
add
and
and
xor
jmp
out
inc
sbb
jl
adc
maxps
push
dec
xorl
outsl
cld
mov
sub
ja
and
jae
sbb
mov
mov
cmp
pmulhuw
jg
incl
lds
ja
popf
frstor
adc
pop
mov
add
stc
cld
das
lds
xor
pop
fsubrs
cltd
pop
mov
mov
mov
or
and
mov
and
outsb
mov
pop
jne
add
clc
arpl
push
faddp
dec
jecxz
aam
cli
dec
repnz
adc
ficomps
xor
cmc
repnz
dec
mov
sbb
or
jp
mov
stc
push
mov
cwtl
sbb
mov
and
mov
xor
lret
mov
mov
mov
popa
rol
mov
and
adc
xor
jl
mov
push
pop
ljmp
dec
add
adc
xchg
or
or
inc
adc
jl
dec
xchg
sub
inc
lahf
sbb
add
test
sub
lret
or
andl
adc
sub
and
sbb
icebp
add
nop
push
or
jbe
push
shlb
std
sbb
push
lock
xchg
or
inc
cmp
cmc
test
lods
lret
mov
movl
mov
push
scas
adc
cld
insb
pop
and
ret
lcall
sahf
jle
std
fistpll
xor
xor
sahf
test
dec
and
cmpsl
inc
jmp
jg
sub
js
leave
push
ret
mov
icebp
pop
dec
pop
hlt
fldt
sub
push
test
imul
neg
lea
sub
jo
test
aas
and
pop
dec
clc
movsl
pushl
and
dec
add
xor
xor
push
sahf
mov
sub
bound
pop
jns
scas
ja
jle
inc
sti
enter
addb
xlat
jge
sub
pop
lcall
mov
std
popa
cmpsl
pop
loopne
push
rcll
xchg
push
jbe
lahf
movl
xor
pop
mov
mov
test
loope
out
out
and
jns
inc
xor
jbe
jp
lods
loop
xchg
roll
sub
mov
push
insl
out
inc
jge
js
popa
xchg
testl
jno
push
lock
scas
pushf
loope
sub
pop
xchg
in
add
inc
inc
icebp
mov
jle
mov
push
fstpl
xchg
das
mov
mov
ss
loopne
inc
xchg
sub
cwtl
or
or
push
adc
cmc
xchg
mov
leave
adc
ss
adc
adc
lock
repz
cmp
in
jp
in
iret
pusha
enter
mov
test
jns
jmp
push
dec
inc
mov
or
divl
dec
lods
loope
clc
insb
dec
inc
ljmp
dec
add
xchg
cli
mov
out
adc
jne
mov
icebp
mov
push
or
push
jp
xor
cli
jg
mov
lret
aas
xor
cmpsl
inc
pop
enter
pop
fstl
fistpll
pop
std
dec
dec
pop
xchg
pop
in
cld
mov
fiadds
test
mov
pushl
clc
pop
enter
mov
iret
imul
pushf
xor
or
cmp
sbb
cmpsb
or
pop
adc
jg
lcall
dec
mov
mov
addr16
cld
add
push
adc
stos
dec
in
jmp
addr16
cmp
add
xor
add
mov
mov
mov
int
pop
negb
lds
call
pop
scas
lds
jecxz
ffreep
fnstsw
sbb
xor
pop
jns
adc
cli
jg
pop
add
xchg
mov
bound
dec
stos
test
leave
orl
in
dec
fs
sbb
push
gs
jns
popf
movsb
and
jns
leave
dec
insb
cltd
outsl
xchg
mov
mov
dec
test
out
cmp
mov
pop
clc
adc
mov
xor
enter
adc
jp
addl
data16
dec
mov
or
mov
testl
or
scas
mov
lahf
ja
pusha
ret
pop
add
imul
xlat
xchg
dec
leave
repnz
sbb
xchg
call
ret
mov
inc
std
add
dec
sub
xor
testl
scas
and
mov
scas
mov
movsl
inc
out
adc
adc
bound
cmc
dec
dec
xchg
and
and
pop
inc
fbld
jo
push
adc
adc
ret
stos
frstor
or
movsb
and
aaa
mov
push
inc
push
pushl
lret
pop
test
aam
pop
add
addl
sub
inc
ds
imul
scas
rorl
scas
ja
inc
fsts
xchg
mov
outsb
fdivl
mov
sahf
and
xlat
jbe
or
ret
lds
push
pop
add
jne
mov
add
ss
mov
adc
fidivs
shr
or
or
stos
dec
ljmp
mov
cltd
test
push
ja
jg
leave
cmp
ljmp
pushf
imul
and
sub
mov
cld
xor
fadd
cltd
xlat
mov
ret
jmp
inc
dec
inc
pop
mov
and
loope
lahf
sub
jo
out
jmp
insl
jmp
jl
loope
jg
dec
shrb
or
pop
mov
stc
fs
push
lock
inc
xchg
sbb
mov
sub
shll
mov
mov
out
mov
ljmp
mov
aas
mov
lock
out
jge
xchg
aas
pop
clc
xchg
icebp
js,pt
add
cmc
mov
rorb
jnp
les
sbb
xchg
mov
pushf
sub
mov
jl
dec
in
or
push
gs
nop
ficoml
sbb
mov
mov
mov
or
mov
push
mov
adc
and
cli
xchg
daa
imul
pop
test
std
or
dec
inc
mov
mov
outsb
mov
jg
jg
mov
xchg
inc
ljmp
push
insb
in
adc
stc
seta
mov
pop
outsb
lds
xchg
pop
les
stos
loope
fcomps
pop
mov
outsb
or
popa
cmpb
sbb
shrb
mov
or
les
data16
jbe
xor
and
push
push
xor
push
outsl
or
adc
shl
mov
out
out
jo
mov
xchg
sarb
bt
mov
push
cwtl
add
jecxz
jns
test
subb
push
lock
addb
mov
adc
inc
add
fcoml
pop
lock
in
das
hlt
fimull
outsl
and
mov
jno
adc
xor
or
sbb
pop
scas
inc
sub
inc
imull
mov
daa
jne
das
hlt
inc
out
bound
daa
jo
inc
insb
mov
add
faddl
in
or
cli
mov
lds
sahf
mov
adc
mov
sbb
mov
and
sbb
dec
xchg
mov
inc
es
inc
inc
adc
es
mov
fnstsw
es
stos
or
inc
fsubl
mov
mov
test
in
mov
loop
cmp
jne
rorl
orl
insb
ja
xor
cmp
lea
loope
cmp
fs
testb
jl
xlat
mov
push
jb
fucomip
scas
jg
imul
cmp
aam
add
inc
sub
ja
xor
push
ljmp
dec
daa
adc
mov
loopne
inc
mov
push
loop
inc
aas
jnp
mov
dec
hlt
xchg
aaa
xchg
adc
dec
cmp
dec
adc
push
add
add
scas
xlat
jmp
hlt
cmc
rol
fldl
adc
loop
xor
jp
scas
and
mov
pop
loop
mov
sti
in
xchg
negl
sti
outsl
jg
rclb
add
sbbb
ret
scas
fnstsw
fisubrl
lret
push
jns
xchg
les
je
call
sub
pop
icebp
loope
roll
iret
jnp
cli
add
bswap
imul
mov
inc
dec
dec
push
push
lock
and
clc
sbb
xchg
xchg
cwtl
fs
sbb
xchg
dec
icebp
xchg
adc
cs
cld
pop
or
std
enter
aam
fsubr
dec
inc
test
pop
mov
je
mov
mov
lret
mov
add
rol
aaa
inc
lcall
or
das
sti
pusha
das
add
sbb
inc
cltd
xchg
inc
jbe
lea
insb
pusha
pop
clc
imul
aad
add
movsl
cmp
mov
and
enter
not
rcrb
mov
xor
sbb
stos
jmp
add
in
inc
sub
shlb
clc
mov
cmp
xor
ja
int
cmp
jg
ljmp
scas
mov
adc
mov
and
aas
xchg
loop
incl
bound
je
insl
stc
mov
in
and
scas
cmp
pop
push
sahf
mov
sti
push
test
ljmp
cs
fwait
cld
jb
loopne
popf
dec
aam
sbb
add
xor
lock
push
pop
movsb
gs
mov
std
jecxz
push
dec
clc
shl
push
xlat
push
mov
hlt
push
cmp
daa
cmp
push
cmp
pop
fists
insb
mov
outsb
das
out
mov
sub
cmp
mov
pop
push
push
or
outsb
sub
fcomp
pop
out
or
dec
push
shll
jp
pop
subb
lock
ja
mov
test
dec
cmp
stos
xchg
subl
js
inc
jae
lcall
sub
cmpsl
xor
push
dec
inc
hlt
jl
mov
js
pop
out
mov
orb
inc
inc
insb
inc
pop
cmpsl
mov
popa
push
push
stos
add
out
push
cmp
xor
mov
adc
cmp
ss
pop
push
lods
jne
xchg
and
lret
mov
out
scas
scas
add
insl
filds
loopne
sbb
xchg
sbb
xchg
mov
mov
mov
push
xchg
add
ljmp
inc
icebp
sub
xorl
std
inc
and
inc
push
pop
clc
repnz
and
jbe
dec
arpl
or
notb
insl
imul
jg
inc
and
cmpb
pop
mov
ror
pop
dec
loopne
mov
ja
fistpll
cmp
insl
adc
adc
repz
cmc
add
pushl
fnstenv
and
xor
inc
lret
add
mov
mov
or
dec
mov
adc
fsubrs
repnz
sbb
mov
fwait
leave
dec
and
xchg
loop
insb
in
aaa
mov
adc
in
jg
pop
cmp
cmp
dec
sub
add
pop
filds
push
push
loopne
sbb
gs
pop
cmpsb
mov
pop
rolb
mov
adc
movsl
pusha
dec
jle
sbb
lods
and
push
jnp
test
icebp
pop
sbb
push
push
push
inc
mov
outsl
insb
movsl
xor
filds
pop
lds
inc
out
aas
sbb
push
jmp
jmp
popa
punpckhwd
scas
xchg
xor
mov
dec
sub
nop
xchg
adc
or
push
mov
inc
dec
inc
sahf
int3
pop
aaa
inc
mov
mov
push
shr
ret
stos
je
and
imul
sbb
rcrl
sbb
test
sti
sub
inc
aam
adc
push
inc
add
sbb
jg
pop
adc
cmp
fisubrs
mov
fbstp
mov
jo
fisttps
sti
notb
in
mov
mov
aam
lret
adc
and
call
pushl
push
dec
xchg
push
imulb
mov
scas
cmp
jo
mov
lret
adc
stos
mov
fidivl
mov
mov
inc
inc
sub
rcrl
ljmp
out
movsl
push
dec
mov
cli
mov
lods
push
pushf
xor
sbb
lret
lahf
dec
fdivl
stos
pop
cli
cwtl
aaa
inc
lcall
mov
mov
jb
int3
mov
dec
stos
jmp
outsb
imul
mov
std
push
and
adc
data16
and
dec
mov
mov
sbb
push
xchg
sub
cmp
adc
lcall
das
icebp
repnz
shrb
pushf
jmp
in
outsl
dec
inc
rcrl
xchg
in
dec
arpl
dec
pop
shll
xor
pop
cld
fstpt
mov
mov
or
sahf
adc
push
insb
jg
lret
fcoms
ss
iret
mov
inc
scas
icebp
aad
scas
sbb
incb
mov
loopne
mov
outsb
rolb
xor
call
adc
popl
ffree
dec
jmp
add
inc
sbb
cmp
adc
or
aam
js
and
rorl
xor
mov
insl
sub
sti
jno
nop
or
sbb
test
lcall
mov
lret
or
add
ja
jecxz
std
add
add
cmc
xchg
mov
movb
pusha
aaa
stos
cmp
jge
pop
cmpsl
add
dec
std
lret
imul
add
and
pusha
repz
xlat
xlat
out
nop
or
in
jg
xchg
popf
out
mov
loope
pop
jl
add
dec
test
pop
add
jl
mov
cli
aas
repnz
popa
popf
loopne
push
and
add
add
push
aad
pop
dec
loopne
iret
sub
sub
jo
loop
mov
mov
push
inc
call
movsl
mov
subl
test
pop
mov
xchg
mov
and
mov
fbld
mull
xchg
mov
test
mov
cwtl
jne
movsb
jbe
movsl
lcall
push
cmp
inc
cld
je
mov
mov
popf
jbe
sbb
loopne
adc
adc
cld
pusha
fcoms
or
insb
mov
dec
jo
sub
adc
and
fmuls
xor
mov
jg
cmp
lret
adc
outsl
xor
rorl
xlat
sub
sub
hlt
inc
cmpsb
cld
scas
or
jp
pusha
bound
sti
ljmp
cmpsb
lgs
andl
rcrl
hlt
xor
sbb
mov
push
and
lock
push
xchg
jo
stos
add
and
lock
or
mov
cmp
inc
ja
adc
jbe
cli
push
shrl
sub
inc
lds
inc
fstps
add
cmp
jmp
mov
inc
pop
adc
repz
scas
pop
sub
ds
push
js
sbb
xchg
lock
jg
test
ret
aaa
push
loope,pt
test
ja
fisubrs
inc
dec
cltd
pop
roll
pop
mov
cmpsb
jle
pop
orb
ficoms
sbb
or
adc
mov
cld
loop
cld
mov
add
rorb
test
add
jns
pop
xor
push
mov
mov
push
jae
imul
popa
xchg
inc
inc
fwait
test
sub
push
test
dec
or
mov
push
or
xor
adc
idivl
pop
lret
jmp
std
ljmp
jnp
jecxz
hlt
cltd
nop
test
sbb
mov
mov
orb
loope
cli
xlat
js
leave
outsl
lods
inc
xor
mov
iret
outsl
mov
push
test
cmp
bound
dec
mov
inc
or
mov
aad
xchg
adc
or
mov
dec
push
add
hlt
xor
in
inc
iret
inc
outsl
addb
or
push
sub
pcmpgtb
mov
andl
shrl
sbb
pop
adc
sbb
and
or
pop
sbb
jae
mov
hlt
ljmp
icebp
xor
loope
xchg
mov
push
or
fbstp
fisttps
pop
in
loopne
outsl
std
push
push
xchg
adc
sub
xchg
lret
cltd
repz
es
sub
mov
lcall
fadd
push
in
push
add
fst
xor
mov
lahf
cmp
rol
sub
adc
pushl
xor
cmpsl
lahf
sub
dec
dec
mov
clc
inc
ss
cmp
sti
lods
incl
loopne
xor
or
fistps
fnstsw
pushf
imul
fsubl
xchg
xor
call
cmp
jb
jmp
lods
test
jl
add
mov
cmp
mov
and
mov
pop
jo
mov
fsubs
cmp
imul
xor
cli
fdivl
mov
sti
jp
cmp
icebp
mov
and
adc
push
push
fiaddl
mov
sbb
loope
cmp
mov
jno
mov
jmp
inc
outsl
std
mov
cs
imul
mov
orb
aas
sub
jl
sub
incl
test
mov
nop
notl
idivl
into
je
int
sarl
ja
mov
pop
jo
out
mov
sahf
mov
add
adc
sbb
cmp
jl
out
fwait
lret
push
sti
add
in
xor
xchg
ss
test
sub
mov
cmpsl
push
leave
adc
inc
sbb
aaa
push
inc
fldt
fs
cmpsb
paddq
pop
jg
mov
cmp
pop
daa
cmp
push
or
mov
lea
push
outsl
cmpsb
ljmp
push
lods
and
inc
sbb
call
dec
ds
pop
dec
int3
sub
inc
sub
adc
je
jecxz
dec
popa
insl
jg
pop
cli
movlps
push
mov
cmpsb
sbb
in
into
or
dec
ret
cmp
pop
loopne
test
cmp
insl
es
jns
shlb
insb
jne
insb
xchg
or
pop
insl
dec
add
filds
push
rcrb
and
mov
and
sbb
and
minps
cmpsl
dec
in
xchg
add
sbb
push
jp
push
scas
aas
mov
fstpl
add
cs
xchg
scas
and
sub
mov
mov
sbb
sub
dec
pop
cld
add
arpl
push
push
cli
pusha
imul
xchg
xchg
add
mov
and
test
sub
mov
push
sahf
push
mov
add
stc
stos
pop
ret
into
adc
stos
repnz
pop
add
jae
push
das
jge
call
jecxz
mov
orb
mov
je
mov
std
jno
inc
mov
xor
lret
add
push
push
stc
jno
xor
mov
add
stos
gs
xchg
mov
xor
pop
int3
or
push
cmp
incl
inc
inc
pop
addb
movsb
xor
imul
adc
mov
adcl
decl
and
inc
jle
jo
cmp
mov
pop
outsl
ljmp
fsts
sub
sti
inc
sbb
lods
shrb
push
pop
popf
cmpsb
mov
in
jecxz
clc
xor
push
adc
adc
mov
aad
ret
imul
lcall
das
jnp
leave
inc
dec
mov
ljmp
clc
inc
sbbl
lea
jae
or
pop
out
fistl
shrb
xchg
ret
loopne
out
mov
inc
mov
lods
xchg
shll
mov
loop
cmpb
mov
pop
rcrb
mov
pop
pop
clc
dec
lcall
aas
addl
addl
add
ret
lea
lret
sbb
adc
fwait
and
sahf
cltd
sar
and
cmp
mov
sbb
das
cmpl
dec
sbb
insb
add
jle
pop
popf
jnp
call
push
das
aad
cmp
sbb
es
inc
xchg
fsts
mov
pop
adc
dec
test
adc
shlb
es
lret
aas
call
inc
insb
ret
ss
push
push
jb
pusha
nop
leave
cmpsb
xor
mov
fs
jno
pop
adc
movsl
fcmovu
xchg
or
xchg
lock
xor
test
adc
push
adc
mov
add
hlt
mov
jbe
xor
cmp
mov
decl
ljmp
test
or
pop
mov
sahf
inc
frstor
dec
loopne
fisttps
loopne
jo
mov
jmp
and
add
cld
push
cmp
js
xchg
in
inc
and
jno
cmp
cmp
lods
divb
sbb
jne
stos
bound
lret
pop
test
lods
idiv
mov
addr16
jle
enter
sldt
andl
inc
mov
or
mov
out
cmp
cmp
adc
int3
jne
test
jmp
or
mov
mov
push
lods
pop
jle
rcrl
jg
mov
fmul
and
sahf
dec
sub
push
xor
sub
aaa
pop
adcb
in
cmp
mov
js
push
sbb
push
adc
jp
push
scas
loope
jmp
loopne
fsubs
mov
push
xchg
sub
cli
mov
mov
scas
xchg
push
shll
add
lret
sub
push
int3
js
jb
ret
aad
or
incl
push
and
cs
and
ss
mov
call
sti
movsl
stos
mov
push
pop
lretw
loop
test
movsl
xor
mov
fadds
bound
mov
xlat
xor
pop
insl
jl
in
mov
std
xor
testb
sti
fcom
or
or
neg
ds
mulb
cmp
and
add
inc
shrl
sub
roll
or
push
scas
mov
and
jge
mov
xchg
mov
mov
xchg
out
mov
and
sbb
repnz
rolb
call
arpl
push
dec
scas
mov
jns
test
das
sub
pop
xorl
js
sbb
je
sub
repz
and
stos
xchg
addb
or
inc
mov
jne
xor
jno
jle
mov
pop
jmp
or
sahf
fwait
test
js
xchg
mov
pushf
xor
hlt
out
mov
pop
adc
push
mov
sahf
stos
lea
lock
mov
push
test
shrl
mov
js
fsubr
adc
lock
mov
fldl
loopne
jno
pop
aas
xchg
mov
in
pop
cs
inc
push
arpl
sbb
int3
test
movsb
lock
add
into
sub
sbb
or
mov
mov
inc
adc
inc
outsl
cwtl
out
jae
gs
mov
xchg
jmp
out
pop
xchg
cmp
inc
dec
mov
mov
fsubl
movsb
sbb
stc
or
call
cmp
jle
pop
rcrl
out
push
and
outsl
pop
bound
andb
sbb
fisubrl
loope
in
fs
insb
pop
mov
mov
jbe
aam
and
sbb
aad
cmp
xchg
inc
pop
dec
lods
fcomip
pop
cltd
push
inc
jecxz
daa
jo
popf
icebp
adc
std
lcall
outsl
and
xor
mov
hlt
flds
cwtl
xchg
test
pop
shll
inc
mov
cltd
daa
je
movsl
incl
add
rorl
hlt
jmp
jmp
dec
cmc
cmp
cmpsl
adc
xor
ret
lahf
ljmp
inc
jo
cmp
mov
pushf
shrl
decl
nop
adc
sub
rol
out
ja
jno
xchg
ret
testb
pop
adc
sbb
loope
add
test
sbb
xlat
fcomip
or
and
cmp
adc
icebp
jg
cmpb
jg
fpatan
mov
inc
push
sbb
adc
fcmovnu
cli
push
push
test
mov
aad
cmp
push
mov
inc
push
js
sbb
and
andl
add
cli
ljmp
pop
mov
in
mov
sub
and
call
mov
sbb
mov
and
cld
pop
cli
decb
sub
mov
pop
pop
xchg
stc
push
or
dec
add
repz
clc
adc
adc
xor
and
or
push
lcall
test
inc
ja
fisttpll
cmc
clc
and
adc
aaa
and
and
add
xchg
dec
movsl
iret
lods
lcall
mov
inc
jnp
jne
icebp
repz
jle
leave
test
nop
sbb
xor
inc
imul
xchg
jle
or
cmp
and
adc
imul
lcall
nop
fmull
xchg
adc
mov
or
sub
incl
lock
les
popa
cmp
add
mov
sbb
pop
in
mov
xchg
inc
pop
or
out
push
adc
inc
lcall
aaa
fidivs
mov
cli
orl
addl
cmp
ja
adc
push
pusha
mov
sti
mov
push
aam
orb
sub
sbb
nop
enter
mov
loopne
sub
xorb
lahf
ficoml
push
ret
pop
enter
fld
inc
icebp
imulb
and
or
pop
jns
mov
stc
and
pop
call
jl
push
sti
push
adc
movsb
jb
xchg
push
mov
cli
incl
push
addl
mov
xchg
pop
inc
test
dec
mov
xor
jno
fcoml
mov
aad
loope
lcall
push
push
jae
loop
sub
les
mov
mov
cs
decb
sbb
pop
repz
jnp
pop
jo
lret
fcmovnu
call
push
add
int
les
xchg
pusha
iret
jne
pop
inc
add
lods
sti
jg
xchg
sbb
inc
stos
imul
and
in
sahf
add
adc
inc
xorl
fcmovu
into
movsl
mov
jmp
add
sbb
imul
lea
test
or
push
stos
xor
outsl
xor
call
push
pop
das
jl
paddb
mov
or
cli
or
add
xlat
pusha
imul
jg
push
and
cs
sub
imul
sahf
jb
push
jl
mov
add
lea
add
xchg
outsl
dec
stos
pop
fdivrp
mov
cmc
fwait
push
xchg
sbb
arpl
icebp
test
and
jl
mov
movsl
mov
jle
jno
rolb
pop
pop
jl
mov
jl
jg
mov
add
scas
xchg
test
push
jne
andl
aad
in
mov
cmp
loop
addr16
push
decl
push
jbe
lock
gs
loop
mov
xor
enter
clc
push
cmpsl
lahf
les
xorl
cmp
ds
aas
sbb
jmp
dec
nop
xchg
sbb
mov
pop
repz
mov
mov
sub
or
cs
shlb
in
cmpsl
or
test
push
fiaddl
dec
shl
inc
shlb
or
in
adc
movsb
adc
in
add
lock
jbe
lahf
jb
ja
and
popf
push
lods
scas
arpl
scas
jecxz
push
inc
sbb
cmc
sbb
mov
sub
or
fidivl
fidivs
fcoml
aam
add
push
fwait
push
jo
insl
arpl
fldt
pop
sub
push
das
sbb
jmp
decl
adc
sub
jmp
xchg
pushf
xchg
mov
and
push
add
push
dec
xorl
fbstp
cli
notb
mov
loopne
xcrypt-cbc
cmpsl
xchg
pop
add
in
inc
sbb
push
add
nop
add
mov
push
ficomps
jg
les
fisttpl
icebp
and
dec
dec
and
inc
push
scas
mov
das
mov
decl
stos
sbb
ret
movsb
sub
xchg
decl
pop
clc
das
inc
jmp
lcall
adc
mov
int3
sbb
jp
jp
cmp
xor
adc
outsl
mov
fdivrp
mov
mov
mov
cmp
mov
fildl
popa
out
int3
fsubl
cld
insl
add
nop
fldcw
mov
or
push
roll
test
lret
mov
inc
addr16
mov
or
mov
test
clc
call
test
loope
pop
lcall
inc
cmpsl
mov
decl
push
movzbl
mov
xor
dec
cmp
mov
mov
mov
jecxz
or
inc
pop
sbb
movsl
mov
rolb
and
fndisi(8087
addb
popa
mov
and
stc
xchg
pop
movsl
scas
loopne
xchg
leave
ja
push
ror
sti
push
xor
mov
jo
out
dec
jl
xor
inc
into
fnstsw
inc
ds
pop
das
rcl
jns
push
sbb
mov
ds
xor
incl
dec
and
add
in
inc
inc
mov
push
adc
cli
lea
adc
inc
dec
stos
add
and
sub
icebp
decl
adc
sti
js
cmp
xchg
popa
mov
push
fsubrs
fildll
sub
cmpsl
mov
dec
add
insb
test
sbb
pop
or
js
pushf
lcall
and
adc
jns
sbb
mov
adc
sbb
out
clc
or
pop
ljmp
popf
testl
jno
push
loope
cmpsb
rclb
inc
adc
and
xchg
jg
push
imul
notl
sub
jp
cwtl
scas
mov
inc
mov
mov
add
scas
imul
lahf
mov
imul
inc
adc
add
test
push
loope
ljmp
dec
add
push
sti
call
cld
shr
in
inc
enter
adcb
shrl
adcl
inc
in
aam
aam
mov
rorl
or
hlt
loope
cmc
lds
cmp
lods
insl
sub
in
test
fwait
clc
lahf
inc
pop
ds
or
jle
push
jno
fidivrs
push
loop
les
cli
inc
jno
mov
xchg
aas
dec
insl
push
add
inc
lods
movsl
lret
add
sbbb
in
and
xchg
cmpsb
xor
or
ficoms
cmp
shll
push
imul
push
sub
add
inc
pop
sub
add
and
ss
mov
jb
aam
orl
ret
loopne
xchg
jge
lcall
sbb
push
push
dec
jb
xchg
mov
rcrb
lds
push
sub
out
clc
outsl
jl
sub
push
adc
fstpl
mov
xchg
pop
jecxz
mov
jge
pop
mulb
mov
and
push
pop
in
or
push
out
xchg
pusha
sub
xor
adc
ror
hlt
dec
gs
dec
xor
lret
or
jmp
pop
dec
cld
add
or
ds
imul
mov
mov
das
stos
pop
stos
nop
cld
dec
lea
decl
jl
roll
in
ret
xchg
xchg
rorl
cmpsl
dec
mov
adc
sub
pop
hlt
mov
movsl
mov
bound
in
sbb
decl
jge
or
xchg
dec
cli
loope
pop
mov
adc
cmpsb
je
mov
fucomip
jg
pop
in
filds
hlt
testb
or
and
inc
test
xchg
scas
sti
dec
sar
lret
sbb
and
enter
pop
mov
pushf
add
popa
cmp
clc
stos
mov
or
lret
xchg
dec
jno
sbb
loopne
gs
loope
cmpb
inc
inc
aaa
pop
dec
xor
ds
cmp
loope,pn
les
insb
test
add
add
arpl
or
sbb
cmp
or
insl
aaa
inc
pop
lods
and
daa
push
ljmp
inc
mulb
jmp
or
sbb
addb
psubd
aam
lcall
cmp
scas
subl
lds
sub
dec
push
cli
mov
sbbl
mov
jge
pop
addl
fcoml
cmpsl
out
outsb
push
xor
and
xchg
or
pop
xor
fsubrl
add
imul
outsb
rorb
fsubl
pusha
inc
outsl
es
ret
xor
das
loopne
cli
mov
out
adc
ljmp
data16
test
add
nop
xchg
add
jo
dec
dec
push
popf
cmp
adc
js
aad
jae
and
rcrb
add
mov
adc
icebp
sbb
push
mov
jnp
adc
cld
push
gs
mov
pop
clc
mov
xor
dec
dec
or
pop
sahf
inc
in
adc
jb
icebp
incb
dec
dec
push
movl
add
aad
mov
push
lds
inc
mov
stos
xchg
rcrl
or
or
dec
push
sub
imul
and
sbb
mov
pop
mov
out
jle
xchg
mov
add
jg
jb
push
and
movsl
inc
jp
add
out
xchg
pop
pop
xor
cmpb
inc
add
pop
push
iret
push
add
jle
aam
jne
loop
inc
into
cs
incl
jle
add
fldenv
push
push
dec
jmp
xor
dec
pop
add
xchg
std
mov
mov
fnstcw
hlt
aaa
mov
mov
jg
mov
aam
js
fwait
nop
jg
adc
je
mov
iret
xchg
mov
push
or
movsb
dec
sbb
xchg
and
mov
out
push
push
xor
add
jmp
and
mov
mov
sbb
cmp
adc
mov
cmp
cs
aaa
test
sub
xchg
ss
test
mov
orl
push
sub
mov
jb
fdecstp
xor
imul
int3
pop
cmp
fcompl
call
mov
cli
test
in
sub
mov
mov
mov
or
sbb
inc
mov
leave
out
sub
fnstsw
inc
mov
pushf
pop
push
xor
fists
or
cmp
fs
push
pop
xor
pop
cli
mov
fsubrp
xchg
mov
mov
jecxz
jle
insl
push
jl
cmpsb
cmp
lods
dec
mov
dec
or
or
lods
mov
cmp
cmpl
lea
mov
sbbb
in
sbb
xor
pop
mov
roll
pop
pop
aaa
in
fcomi
clc
adc
mov
inc
and
push
inc
cltd
shlb
jo
cmp
mov
jmp
push
in
xchg
fbstp
loop
mov
rorb
cmc
adc
dec
inc
data16
dec
fwait
dec
in
fs
pop
filds
fs
insb
push
cld
stos
pop
fstps
gs
js
jp
js
cmp
jns
fiadds
sub
mov
add
ret
inc
test
pop
fimuls
cli
jmp
testb
lcall
call
jp
andl
inc
xchg
cs
sub
mov
test
adc
mov
jno
push
sub
faddp
pop
pop
mov
and
cwtl
push
and
insb
pmulhuw
push
and
ja
movsl
repnz
nop
mov
psubw
inc
mov
push
pushf
pushf
enter
add
dec
sbb
out
scas
pop
mov
sarb
stos
enter
pop
jns
aaa
push
xchg
pop
cltd
pop
dec
rcrl
sbb
mov
mov
loopne
out
fldl
inc
bound
push
or
lahf
mov
aam
loope
pop
mov
push
push
and
rcrl
pop
stc
test
rorb
push
sti
push
and
dec
int
jp
cwtl
stos
xor
xchg
out
movsb
enter
loope
cmp
aaa
lock
jl
cmp
jno
sub
shr
push
scas
roll
jnp
mov
ret
adc
and
or
push
dec
test
mov
sbb
fucomip
lahf
bound
jno
or
push
in
sbb
pop
andb
jmp
sahf
test
adc
shll
add
or
push
dec
and
test
std
das
add
mov
ja
int3
rcrb
mov
adc
sbb
jnp
in
rol
jge
mov
xchg
dec
test
mov
add
rol
mov
loope
push
and
push
add
mov
cli
outsl
icebp
adc
je
loop
lcall
or
mov
imul
ds
lcall
sub
dec
rcll
sub
jg
es
mov
lods
daa
push
leave
jne
dec
lods
movsl
mov
mov
rcl
popf
iret
lock
mov
fdivrl
cmpsl
arpl
mov
jmp
aaa
incl
imul
mov
push
and
add
push
cli
in
inc
and
sub
mov
cli
sub
jl
jle
pop
xor
data16
icebp
inc
sub
xlat
cmp
outsb
add
mov
je
ret
or
clc
mov
mov
jbe
add
cmp
stos
fcompl
xchg
pop
pop
cli
jns
stc
or
test
xor
fcomi
pusha
arpl
dec
arpl
mov
fcoms
movsb
inc
jae
daa
in
add
les
sahf
jae
mov
out
cmpsl
xlat
pop
push
out
ret
push
xchg
ljmp
lahf
mov
imul
inc
fldcw
lods
jae
jns
mov
cmp
sbb
outsb
adc
push
jmp
cmp
jecxz
stc
popf
in
mov
mov
movsl
out
fwait
loope
sbb
ljmp
add
iret
pop
aas
mov
lret
rclb
in
imull
xor
xchg
jg
sbb
cmpsl
dec
ret
loopne
cmp
mov
pop
lcall
add
loopne
pop
push
call
dec
nop
inc
or
loop
cmp
arpl
loopne
and
cmp
int
in
push
pop
push
lods
aam
mov
ret
pushl
jecxz
push
int3
jg
xchg
nop
sub
adc
push
andl
jae
and
sub
adc
mov
cmpsl
ret
dec
adc
shlb
push
test
test
sub
pop
lahf
add
mov
stos
jecxz
incl
insl
ja
es
incl
repnz
push
imul
mov
insb
cmp
xchg
cld
lcall
inc
filds
jne
adc
hlt
add
test
sbb
dec
inc
test
mov
aaa
or
loope
clc
push
mov
jg
xor
sbb
dec
push
outsb
and
in
xchg
mov
pop
cmpsb
dec
jp
jl
adc
je
daa
mov
xchg
imul
inc
test
sbb
adc
mov
mov
call
out
incl
dec
outsb
cmp
js
fdiv
repz
mov
mov
mov
pop
mov
es
addb
mov
adc
jno
cmp
outsl
inc
filds
adcb
jge
pop
add
mov
or
sbb
sarb
and
es
imul
daa
mov
add
xchg
xchg
jecxz
arpl
xchg
xlat
push
jno
loopne
pushl
popw
sahf
xor
pop
xor
hlt
paddusw
and
inc
outsl
aad
sbb
nop
popf
or
mov
andb
sbb
fchs
cmpsl
push
and
jle
cwtl
add
or
fs
jno
das
push
inc
or
in
loop
xor
aad
rcrl
push
and
cmp
cltd
dec
mov
sbb
push
and
out
pop
les
das
imul
sub
sti
jle
cmpl
mov
pop
repz
das
mov
out
ja
cmpsl
inc
stc
pop
mov
add
add
mov
pushf
shrl
leave
adc
adc
mov
push
sbb
hlt
ljmp
subb
xchg
fidivrl
xchg
mov
inc
ds
pop
fsubrs
repz
add
or
mov
inc
cltd
int
sbb
xchg
sbb
jbe
push
loop
in
roll
cmp
clc
jg
push
inc
rorb
inc
pushf
popf
stc
call
ljmp
dec
mov
loop
je
addr16
cmpsl
outsl
mov
sbb
pop
jg
bound
stos
stos
repz
decb
cld
call
sub
adc
mov
dec
ja
fcmovnu
mov
mov
aad
push
and
xchg
jae
xchg
mov
addr16
fs
clc
pop
cli
push
mov
push
mov
sub
cmp
pop
rcr
and
les
test
jecxz
fidivs
je
jle
inc
push
ja
in
cmc
mov
arpl
stos
stc
scas
fwait
mov
into
andb
pop
pop
insl
mov
imul
push
sbb
adcw
adc
or
jge
mov
mov
lds
xchg
fldcw
push
pop
int
scas
jg
das
cld
iret
add
sarl
push
or
sti
push
loop
dec
fnstsw
in
xchg
or
sbb
xor
xchg
adc
aam
xchg
dec
jle
icebp
mov
mov
pop
mov
and
sbb
sbb
clc
push
addr16
xor
sub
sbb
cmp
and
mov
and
data16
fsubl
ret
arpl
fists
push
leave
sbb
xchg
dec
pop
pop
and
in
enter
mov
xor
xchg
jo
mov
sbbl
jmp
inc
mov
cs
sti
sub
or
adc
lock
mov
pop
es
rclw
or
xchg
mov
js
decl
cld
xor
data16
les
mov
lea
inc
ffreep
sub
mov
aaa
call
loopne
outsl
jp
push
sub
push
data16
sub
mov
bndstx
bound
sahf
lock
fwait
lods
xlat
inc
sbb
inc
shlb
call
pop
ljmp
mov
out
mov
xor
insb
js
stos
mov
mov
or
adc
or
loope
add
lds
mov
jmp
add
mov
adc
and
push
shll
aaa
in
mov
xor
int3
inc
jae
mov
adc
xor
jbe
cld
shr
enter
mov
or
mov
jne
sbb
cli
lret
ror
push
cmc
fistl
xchg
popa
inc
xor
sub
movsb
pop
popa
add
fwait
ds
add
sbb
imulb
ds
sarl
cli
jne
mov
jmp
push
lcall
jg
push
aaa
std
add
mov
cwtl
test
pop
fbstp
mov
mov
jmp
mov
lcall
adc
sti
jns
ret
inc
sarl
popa
fs
ja
lcall
add
mov
rclb
aaa
cltd
cmc
cmp
or
inc
scas
mov
sub
ret
and
lock
sbb
roll
loop
jae
dec
sub
xchg
ret
aas
jl
mov
fnstsw
jg
addb
sbb
sbbl
lahf
inc
ljmp
clc
cli
aad
mov
inc
mov
jle
jbe
int3
adcb
pop
fwait
jae
gs
incl
mov
xchg
dec
lcall
fldcw
or
scas
loop
fistpll
iret
lods
psubb
rcrl
jne
jne
inc
sbbl
mov
imul
loopne
dec
call
int
aaa
incb
mov
comiss
sub
or
xchg
addr16
mov
sbb
cmp
pusha
rorl
jo
cwtl
sub
mov
or
pop
jle
fcmovb
mov
inc
popa
dec
cmp
into
mov
lcall
lcall
icebp
fisubs
imul
decb
cmp
or
out
push
add
out
sub
ficomps
and
pop
js
je
out
int3
push
aaa
iret
and
adc
or
ljmp
sbbb
lret
push
test
dec
sub
add
mov
lock
loopne
mov
jo
add
jp
xchg
or
idivb
lods
push
dec
je
xchg
mov
ljmp
sbb
mov
mov
ljmp
adc
test
imulb
addr16
dec
test
mov
or
call
cltd
push
outsb
jmp
inc
xor
cld
mov
cmpsl
fistpll
cltd
loop
jne
mov
push
and
push
push
cltd
cmp
dec
inc
jmp
pop
data16
pop
xchg
cli
mov
dec
fwait
outsl
int3
cli
scas
pop
mov
ss
push
mov
add
sbbb
push
jmp
je
sub
fwait
ds
in
cltd
mov
jecxz
jo
fimull
mov
in
jbe
pop
push
ret
push
or
mov
inc
sub
jne
add
fwait
cli
cli
in
je
fcmovbe
aad
pop
cmpsb
push
insl
mov
xor
push
lock
mov
push
adc
cmp
mov
lret
cmp
mov
mov
cmc
test
push
push
adc
sub
jae
stos
xor
add
rorb
jp
xchg
sti
pop
std
cmc
frstor
xor
stos
jge
jg
jmp
mov
cli
aam
fisttps
adc
shlb
daa
jmp
aaa
incb
add
arpl
outsl
outsb
ds
xchg
push
and
adc
inc
xor
ja
ljmp
pop
rolb
in
aaa
mov
ss
pop
push
jbe
sbb
push
jmp
sub
icebp
lds
lea
inc
fnsave
mov
out
test
mov
push
jle
pop
push
shlb
sub
cmp
mov
add
outsb
mov
adc
pop
pushf
stos
xorl
xacquire
fcmovu
fmull
sub
inc
out
roll
stos
xchg
or
mov
ret
ss
ret
int3
mov
mov
xor
les
loope
lret
scas
rcll
sbb
xchg
add
xor
test
ror
aas
mov
mov
nop
lahf
pop
pop
mov
jp
mov
xor
int3
lret
aas
insl
cmp
movsb
push
movsl
call
xchg
inc
sbb
daa
inc
rclb
jecxz
hlt
push
fimull
mov
iret
xor
jge
clc
mov
arpl
aam
and
or
sbb
mov
push
das
imul
mov
xor
and
adc
ljmp
das
sub
outsb
cmp
xchg
ret
xor
xchg
jl
mov
add
idiv
cmp
xchg
nop
les
xchg
or
mov
jmp
xor
daa
loopne
mov
add
inc
loopne
or
dec
push
cmpb
popf
mov
cld
stos
addr16
loop
jg
dec
jae
fsubrl
xchg
adc
dec
call
hlt
gs
rorl
push
ret
adc
loopne
mov
fidivrl
jmp
mov
sbb
aas
popl
call
shrb
jle
and
lods
clc
aam
mov
jle,pt
or
and
jo
sub
fiadds
test
lock
movsl
fcmovb
cmp
stos
mov
add
mov
adc
out
ss
mov
and
inc
shll
sarl
js
cli
push
outsb
loope
movsb
clc
ret
xor
sbb
into
out
sti
sbb
jne
test
stc
mov
imul
push
xchg
les
or
sub
xchg
mov
insb
fmull
out
push
add
mov
pusha
pop
push
jb
das
inc
icebp
aaa
movsl
xchg
and
movsl
sbb
or
outsb
je
dec
mov
int3
lods
inc
mov
dec
push
push
js
outsb
mov
stc
adc
cmpsb
fwait
mov
jnp
fwait
jle
faddl
loope
ret
or
mov
xorl
pop
lods
das
clc
rolb
in
pop
and
shlb
pop
push
repz
int
and
test
add
test
in
jle
or
shlb
outsl
in
scas
xor
cmp
aas
stos
call
adc
jmp
mov
inc
aaa
inc
call
shl
roll
mov
addl
test
call
jo
sbb
xchg
dec
das
int3
shlb
ljmp
pop
mov
add
pop
cli
insl
sub
arpl
push
ja
popa
loope
std
popa
mov
add
in
into
aas
cmpsl
cltd
jge
cli
xchg
insl
int3
mov
push
rorl
popa
xchg
lret
mov
mov
call
sub
imul
in
mov
pushl
or
cmp
cmpsl
sahf
mov
nop
and
outsl
roll
xor
sahf
nop
test
or
add
jno
xchg
dec
int
movsb
es
or
sbb
mul
xchg
sub
movsb
mov
insb
xchg
push
or
incl
or
arpl
inc
sbbb
cmpsb
bound
mov
hlt
das
cld
xchg
pop
pop
sub
jecxz
pop
jp
insl
mov
and
cmc
sbb
loope
xchg
mov
lock
add
test
xor
inc
das
dec
aam
add
push
leave
add
mov
js
inc
dec
fwait
cmp
jecxz
movl
sbb
pop
inc
scas
pop
mov
lods
push
xor
push
xlat
jle
xchg
inc
xchg
and
adc
bound
aaa
push
push
push
add
lock
mov
push
in
test
inc
out
inc
aad
and
and
shl
ret
arpl
loopne
sarl
push
jo
daa
sbb
roll
insb
mov
cwtl
or
test
lcall
repz
add
add
sarl
push
lock
dec
cmp
xlat
int
pop
js
mov
add
or
movsb
add
aad
push
inc
lcall
loop
mov
imul
jg
out
into
fst
int
mov
pop
pop
loopne
jmp
lahf
mov
xor
jecxz
aaa
lahf
xor
mov
fisubrl
es
mov
mov
insl
mov
addb
push
incb
mov
xor
cmpsl
iret
inc
sbb
jecxz
push
imul
stos
mov
ret
aad
or
or
bound
mov
push
xchg
lock
xor
inc
push
jne
jno
cmp
outsb
jg
addb
xor
inc
cmp
das
lock
mov
rcrb
jbe
inc
cmp
dec
outsl
xchg
decl
dec
ret
popf
adc
and
cli
pop
jmp
lock
popa
adc
or
dec
rorl
mov
sti
scas
mov
in
cltd
mov
pop
jp
or
cltd
cli
pusha
inc
aas
push
dec
sbb
inc
aam
add
pop
mov
loop
push
add
sbb
pop
ljmp
sub
push
jb
mov
call
rolb
pop
pushf
mov
subl
push
in
sub
dec
or
cmp
mov
into
sti
dec
cmpsb
arpl
mov
das
cmp
push
out
or
inc
in
push
sbb
lcall
jge
pop
dec
dec
scas
iret
fcoml
sub
ret
int
mov
das
cld
add
les
int
cmp
shl
xor
or
mov
push
mov
xchg
xor
cmpsb
loope
rcrl
addl
filds
sub
bound
mov
cltd
test
and
mov
mov
lods
xchg
pop
cmp
inc
xorb
add
fwait
out
inc
testl
int
in
call
xchg
int
test
xchg
sub
cld
mov
clc
test
std
cmp
andb
fucom
addl
insl
icebp
aaa
and
pusha
mov
sbb
popf
push
sub
jg
push
stos
fistpl
mov
movsb
xchg
je
clc
sbb
mov
test
mov
xchg
sub
js
mov
nop
and
mov
fildl
in
psraw
sub
pcmpgtb
push
xchg
dec
and
xchg
mov
push
imul
mov
mov
mov
mov
or
in
mov
push
lods
pop
xchg
cmp
clc
dec
cld
stos
mov
sahf
call
sub
arpl
faddp
pop
rorb
xchg
pop
icebp
lret
dec
aaa
insb
jae
sub
sbb
fidivs
xchg
mov
les
jecxz
and
rcr
lahf
out
or
imull
xor
push
sbb
cmc
dec
mov
mov
sbb
test
enter
adc
pop
xchg
in
clc
push
mov
cmp
std
movsl
scas
mov
movsl
sbb
add
icebp
shlb
push
mov
inc
inc
std
ljmp
push
push
jp
call
jmp
adc
stc
add
add
mov
jno
movsb
xchg
loope
cwtl
es
sahf
dec
mov
and
sbb
movsb
dec
imul
sbb
cmc
push
push
add
add
jno
sti
cmp
and
xchg
mul
sub
adc
or
mov
mov
or
pop
pop
adc
jle
add
repz
mov
dec
pushl
mov
insl
xor
mov
inc
sbb
test
pop
clc
adc
test
out
ret
clc
lret
icebp
sbb
or
sub
aaa
stos
push
push
dec
dec
das
cld
icebp
mov
lret
dec
in
or
insl
data16
bound
clc
dec
ret
in
add
push
push
ds
jo
push
cld
cs
aam
incl
aas
hlt
test
ret
inc
loopne
cmpsl
int
ret
sbbb
shll
data16
fisubrl
sbb
fs
mov
or
out
push
sub
adc
push
push
jecxz
lret
stos
rcr
stos
push
xchg
jp
popa
clc
mov
push
sti
and
scas
inc
and
sbb
jl
std
jl
cmp
mov
sahf
sahf
mov
inc
or
cmpsl
sbb
test
xchg
and
insl
jns
mov
out
cmc
push
add
lcall
fcmovnu
sbb
cmp
lret
ror
add
xchg
stc
incl
mov
fisubrl
fs
clc
popa
pop
inc
jg
sbb
adc
mov
or
jge
jns
lcall
cmp
lea
gs
pop
jecxz
adc
xchg
jecxz
or
cmpsb
jge
orl
mov
ja
hlt
ret
cs
xor
pop
out
outsl
mov
cmp
cmp
sbb
jl
lock
add
aas
stos
mov
fsubrp
push
sbb
xchg
dec
test
sub
inc
cmp
into
movsb
mov
mov
xlat
clc
lods
mov
jb
aam
mov
test
and
add
cmp
inc
dec
add
adc
sbb
jo
insl
push
adc
mov
jle
fisubrs
pop
pop
in
sub
ja
ss
mov
mov
dec
out
push
out
cwtl
insb
add
mov
adc
sbb
lds
inc
mov
hlt
sarl
push
cs
loop
mov
imul
icebp
jp
cmc
sbb
icebp
imul
sub
pcmpeqw
xor
adc
es
hlt
repz
xchg
mov
push
jg
xchg
inc
adcl
inc
ljmp
dec
xchg
sahf
jle
xchg
pcmpeqd
push
cmp
dec
sub
pop
mov
outsl
sub
inc
or
int3
aad
push
xchg
mov
inc
and
addl
cwtl
aam
sar
pop
call
dec
nop
leave
pushf
sbb
sub
push
hlt
pop
pop
pop
mov
loop
jg
xchg
or
mov
enter
ljmp
push
ljmp
int3
mov
mov
scas
pop
xchg
lea
mov
adc
fs
out
jb
in
in
or
testl
jp
ds
movsb
and
call
cmp
xchg
mov
movsl
or
pushf
xchg
inc
shll
pop
repnz
inc
js
mov
add
adc
mov
xorb
mov
in
sbb
xlat
dec
inc
cs
sbb
jp
sahf
dec
lea
idivl
mov
dec
inc
fdivl
mov
push
dec
xor
fbstp
cs
fbld
out
push
testb
lods
mov
addl
clc
aaa
outsl
push
xchg
mov
daa
push
icebp
add
test
lock
sub
fcoml
push
mov
mov
outsl
dec
iret
jbe
scas
ds
sub
push
inc
ljmp
loop
inc
or
sbb
in
xchg
out
and
ss
xor
push
mov
getsec
aad
loopne
fstl
sbb
jg
cmp
orl
shrl
test
cmp
clc
punpckhwd
lea
push
mov
or
pop
loopne
jae
add
xchg
or
jns
ljmp
dec
les
icebp
mov
pop
jo
outsl
ljmp
sti
adc
inc
outsb
push
jbe
or
push
call
or
cmp
add
sbb
frstor
gs
mov
mov
std
mov
sar
lods
lret
dec
push
jle
mov
push
push
mov
mov
iret
imul
xor
sbb
push
clc
daa
dec
test
sbb
mov
xchg
aad
or
push
mov
inc
push
xor
rsm
or
pop
stc
or
jbe
cmp
dec
and
and
mov
jp
sahf
or
and
or
daa
adc
sbb
lahf
jge
roll
fadd
add
dec
sbb
mov
ljmp
es
bound
jp
add
dec
fs
push
stos
test
loopne
cli
fsubs
jne
dec
sbb
jg
jg
aas
mov
xchg
nop
call
loopne
mov
and
inc
sarl
sarl
add
bound
nop
cmp
fildl
ljmp
jns
mov
push
std
leave
or
xchg
loopne
repnz
sti
or
shrl
popa
mov
sarb
add
push
shl
loope
cmp
dec
cli
lock
outsl
mov
and
mov
ret
fstpl
ss
sti
cld
cmp
loope
xchg
push
ss
and
cli
dec
pop
fadds
fcoml
pop
call
push
cmp
pop
or
xchg
jnp
mov
jmp
xchg
loop
pmullw
cmpb
jmp
clc
or
add
imul
jb
push
push
jg
sahf
shl
mov
dec
cmp
or
pop
add
mov
or
lahf
xor
scas
int3
mov
or
dec
aam
push
jle
call
daa
aaa
add
jmp
mov
mov
push
and
mov
xor
clc
xchg
jb
xor
add
or
inc
rorl
inc
xor
out
mov
cmc
fldt
inc
out
push
pop
mov
fbld
stos
dec
lds
mov
decl
sub
lods
enter
daa
dec
or
cmp
xor
lea
or
push
add
bound
stos
sbb
push
fldenv
add
cmc
test
mov
outsb
fistpll
pusha
push
pop
fldcw
fidivs
jb
cld
xchg
or
mov
mov
nop
push
push
aam
xchg
push
xchg
ss
adc
inc
or
jnp
mov
daa
dec
lahf
and
push
in
loopne
pop
scas
adc
dec
sub
shrl
xor
jb
shl
or
test
xlat
inc
or
sub
push
ret
inc
iret
sbb
addr16
in
push
js
das
fcomps
ss
bound
hlt
rol
test
jnp
push
and
add
int3
fdivr
mov
mov
pop
icebp
xchg
lahf
stc
pop
push
js
lea
dec
fistpl
push
stc
fbstp
stos
jle
ljmp
insb
adc
bound
pop
scas
xor
shrb
ljmp
mov
dec
cmp
mov
mov
jnp
mov
pop
mov
jnp
hlt
add
mov
add
mov
xor
pop
mov
aaa
dec
les
mov
mov
lock
sbb
or
fstl
sbb
add
enter
jo
sti
sbb
mov
cmp
in
ficoml
push
call
js
and
pop
push
pop
inc
mov
aam
stos
jns
insl
mov
repz
jge
pop
push
push
test
jo
cmpb
call
call
test
sahf
jo
adc
ret
xor
mov
leave
fmull
cmc
dec
push
std
fldt
add
dec
mov
mov
adc
mov
mov
popa
movb
add
pop
enter
shrb
repnz
jno
test
cmpsl
addr16
jp
pop
ss
mov
jns
pop
adc
sbb
mov
mov
das
push
xchg
filds
lcall
repnz
adc
jle
add
adc
cli
xorb
or
jecxz
out
fs
hlt
cmc
adc
lahf
inc
icebp
lcall
and
imul
stos
dec
gs
inc
lods
insl
push
cmc
fs
mov
mov
sub
mov
loopne
inc
sbb
clc
mov
pushf
lea
ljmp
cmp
mov
add
add
into
or
stos
mov
sarl
loopne
leave
cmp
mov
inc
out
imul
bound
pop
je,pn
jbe
mov
inc
ljmp
icebp
aad
inc
sbb
inc
fidivs
es
push
aad
fldcw
pop
xchg
push
mov
stos
ljmp
fstpl
stos
fisubs
add
add
adc
pushl
push
mov
mov
mov
cmp
inc
mov
mov
mov
ljmp
mov
inc
and
add
sbb
mov
nop
inc
std
xor
sbb
dec
mov
sub
decl
mov
rcr
lods
test
pop
fstpt
loop
jbe
and
mov
dec
jp
testl
int
sbb
lock
xorb
push
push
pop
mov
insl
add
lahf
xlat
mov
lfs
push
cmc
dec
push
xchg
addb
or
cmp
dec
mov
jnp
enter
mov
push
pop
pushf
inc
xchg
adc
sarb
into
pop
imul
inc
mov
mov
dec
push
mov
mov
movsl
mov
dec
bound
lods
sbb
jge
insb
pop
ss
mov
dec
lea
adcb
pop
inc
roll
call
out
pushf
or
ljmp
and
push
loopne
mov
add
push
jbe
pop
mov
repnz
scas
test
xchg
neg
and
or
stc
dec
cmpsb
mov
and
mov
dec
movsb
jae
daa
and
xchg
incl
sbb
mov
push
and
cld
dec
cmc
mov
fmull
movsb
fsubl
mov
pusha
inc
inc
or
inc
fbstp
inc
ret
jbe
ret
mov
xchg
or
push
mov
jne
inc
loopne
pop
jnp
pop
aas
mov
dec
ret
jbe
mov
xchg
mov
or
pop
jl
filds
addr16
mov
inc
inc
roll
loope
insb
sub
cltd
push
fisttps
inc
lcall
push
testl
cs
inc
icebp
push
js
cli
mov
jb
xor
sub
shl
xor
or
imulb
cld
cmc
and
push
mov
xlat
or
icebp
aam
mov
test
xchg
call
test
pop
adc
les
mov
push
aaa
std
outsl
mov
push
fwait
in
mov
mov
decb
clc
inc
lahf
ret
mov
sti
add
mov
neg
out
imul
cmpsl
or
loope
mov
inc
and
shlb
into
mov
sbb
cmc
mov
or
daa
call
mov
jle
cmp
push
sub
shll
pop
add
sub
mov
jno
loope
cmc
imul
dec
push
mov
sub
and
pop
stos
in
adc
xchg
roll
dec
rcrb
pusha
jmp
xor
pop
push
xor
push
mov
add
push
adc
aaa
std
inc
jo
ret
xchg
ret
or
sbb
pusha
repz
dec
call
fs
add
ror
call
fstps
jb
inc
iret
popf
iret
push
daa
shrl
shrl
jo
arpl
fisttpll
arpl
test
push
adc
test
fidivs
sarb
les
jg
aam
push
and
adc
pop
adc
mov
loopne
inc
cld
sub
andb
jmp
roll
aam
add
or
fisttps
shlb
daa
push
ffreep
ror
xor
xlat
jp
test
adc
addl
mov
jb
movsl
sbb
mov
repnz
and
jge
outsl
xlat
repz
sahf
jecxz
scas
jge
in
in
lods
mov
pop
out
ret
mov
sbb
loop
lods
adc
dec
mov
ds
pop
mov
aad
cmpsb
das
add
ret
sbb
je
shrl
sbb
stos
mov
fldl
mov
mov
add
push
push
dec
test
negl
outsl
pop
sbb
clc
in
dec
jbe
test
mov
pushl
adc
mov
stos
cmp
sbb
pop
js
mov
or
xor
cmp
sbb
incl
fisubrs
leave
stc
orb
sbb
jo
lock
add
lea
js
hlt
mov
mov
mov
fs
les
loop
and
dec
mov
loopne
mov
xor
mov
loope
sbb
and
mov
xor
adc
and
in
xor
sti
insl
adc
mov
dec
cwtl
aad
incl
ljmp
jb
and
aaa
inc
outsb
iret
xchg
aad
xor
push
dec
adc
dec
or
xchg
jbe
pop
cli
popl
push
mov
scas
xorl
mov
fstp
xchg
and
icebp
jg
sbb
es
test
cwtl
xlat
and
xchg
push
mov
push
inc
dec
cmc
mov
out
push
sbb
add
lods
add
sub
out
insl
lods
jg
add
rolb
dec
jno
mov
stc
ds
cmp
insl
xor
push
rorb
lret
sar
pop
orb
mov
cmp
in
pop
mov
cmp
jnp
pop
mov
mov
inc
stos
mov
pop
hlt
lret
loop
ss
out
or
mov
or
sbb
dec
sbb
repnz
cmp
pop
sbb
or
cwtl
jg
subb
mov
mov
dec
aaa
add
inc
outsl
mov
xchg
insl
ret
adc
clc
mov
pop
fcomps
leave
xchg
sbb
jle
xchg
ljmp
mov
das
loopne
cld
push
pmaxsw
inc
in
out
roll
ret
jno
lods
sbb
dec
test
add
mov
inc
shrb
xchg
pop
rorl
ret
pushf
push
lahf
inc
out
mov
scas
cmp
push
lods
pop
adc
sbb
arpl
sbb
lret
nop
mov
ja
inc
adc
sbb
stos
pop
test
xchg
pop
outsb
loop
fwait
enter
nop
sub
xchg
in
push
push
xorl
loopne
shlb
lahf
or
sbb
in
add
mov
cmp
jns
gs
pop
adc
inc
pop
lods
and
das
cld
dec
sbb
rclb
insl
lds
insl
sub
pop
clc
ja
pusha
adc
sbb
sti
filds
pop
xchg
dec
mov
dec
aam
out
rorb
inc
incl
pushf
add
push
insb
inc
add
adc
jg
sbb
adc
mov
iret
inc
mov
cmpsb
add
xchg
jmp
sub
movsb
adc
jo
fcomi
inc
scas
inc
sub
call
cld
decl
and
mov
jecxz
clc
popf
insb
fisttpl
test
cld
pop
adc
pushf
lcall
jg
test
test
cmp
dec
jecxz
fistl
ret
inc
mov
dec
cmc
movsl
mov
roll
jecxz
fmull
sub
fdivs
xchg
cmp
clc
mov
add
add
cmp
push
or
lock
xor
fstl
pop
fidivrl
add
idiv
add
insb
outsl
aaa
push
bound
and
inc
cltd
push
cltd
jl
sbb
fistpll
popa
test
sub
emms
adc
imul
sti
int3
cltd
retw
loop
dec
pusha
sbb
je
inc
imul
xor
sbb
lcall
jno
fistl
xchg
mov
sbb
popa
push
test
pop
add
pop
jb
cwtl
jg
jns
jp
mov
mov
cmp
dec
pop
call
lcall
push
cmpsl
pop
lret
xor
dec
mov
scas
adc
mov
push
mov
test
jg
mov
mov
sbb
arpl
mov
mov
lea
dec
idivb
dec
mov
sarl
cli
call
mov
mov
push
stos
das
std
aaa
mov
cld
ds
sub
test
out
call
push
jo
pop
xchg
adc
mov
adc
jge
clc
data16
ljmp
rolb
xor
cmp
xchg
lcall
mov
push
push
faddl
jns
sbb
loopne
sarb
fisubrs
add
orb
push
loopne
rclb
int3
ja
mov
out
mov
frstor
pop
add
test
push
aam
sbb
dec
sti
push
xlat
pop
cs
icebp
fs
popl
pop
mov
repz
popf
xor
test
xor
sbb
lea
mov
rol
jmp
bound
pushf
push
clc
lcall
jae
mov
adc
push
repnz
push
test
pop
xorb
sub
or
mov
adc
scas
xchg
je
dec
pop
and
imul
aad
pop
cwtl
in
dec
xor
pop
cs
sbb
fistpl
and
inc
push
dec
lret
inc
xor
sub
mov
sub
jae
inc
call
jmp
mov
adc
rcrl
mov
pop
or
dec
std
jbe
movsb
orl
ret
and
xlat
add
repz
inc
push
sbb
mov
pop
loop
lods
loope
repz
fwait
jecxz
je
mov
sub
imul
sar
pop
cmpsl
xor
mull
or
aaa
inc
inc
or
aaa
mov
scas
jns
enter
or
mov
test
mov
popf
adc
in
and
sar
lcall
dec
lock
sbb
ds
scas
lret
pop
adc
test
mov
jmp
mov
xchg
loope
add
jnp
pop
lock
cmp
or
xor
or
iret
clc
cli
shll
pop
mov
dec
hlt
aam
movsl
sub
dec
dec
mov
rol
and
pusha
mov
pop
ret
cmp
push
inc
shrl
aad
cmpsb
sbb
test
shll
mov
cs
push
jg
jle
or
adc
push
dec
or
aaa
push
adc
xor
andb
imul
je
pop
push
xor
adc
lahf
ljmp
inc
jne
sub
nop
js
mov
insb
mov
xchg
push
inc
fistps
sbb
shlb
stos
xor
pop
mov
mov
out
in
std
lods
int
or
movsb
sbbb
sarl
into
shr
imul
cmc
sahf
test
mov
dec
les
cmp
sbb
gs
adc
movsl
in
shr
pop
jb
mov
fisubs
cmpb
jns
movsl
loopne
and
movsl
lock
lea
xlat
adcl
push
add
in
push
out
fisttpl
iret
fidivrl
xor
mov
repz
mov
cmp
sar
or
mov
inc
movsb
std
in
cld
mov
fistpl
add
std
pop
stos
mov
add
xchg
dec
fadds
enter
call
adc
fxtract
jmp
pop
pop
sbb
xchg
int
lock
cmp
aad
clc
add
stos
xchg
fmull
sbb
push
cmp
les
mov
and
inc
sbb
pop
pop
addr16
lock
out
cmpb
rorl
jo
cmp
rcrb
add
sbb
std
xor
fbld
jl
sbbl
test
and
popf
xchg
inc
fdivrl
addr16
aas
cltd
jg
incl
std
call
test
dec
adc
jae
cmp
mov
xchg
outsl
outsl
pop
push
test
andb
lea
cmp
mov
call
add
dec
loopne
sahf
psubb
mov
add
mov
stc
inc
stos
mov
outsb
lcall
std
movsbl
jmp
int3
adc
fcomip
push
call
popf
adc
xor
mov
adc
int
or
addr16
adc
je
pop
jg
and
inc
dec
icebp
pop
stc
sbb
adc
pop
enter
adc
mov
div
ret
jg
cmpsl
ret
pushf
aam
sahf
pop
ds
push
jecxz
cmp
dec
ljmp
stos
pop
xor
mov
loopne
sub
incl
mov
aas
push
movl
pop
mov
ja
test
ja
cmp
mov
mov
cs
pop
and
hlt
call
je
and
int
sub
lahf
loope
sub
out
sub
ror
inc
fstpt
ds
orl
loop
insb
call
jge
bound
stos
test
mov
dec
dec
out
out
cmp
popa
lods
xchg
call
sub
jmp
stos
testb
dec
inc
repnz
push
fistl
pop
adc
jge
push
pop
cld
aad
mov
lret
lea
jl
les
add
sub
lahf
push
dec
and
pop
jp
sbb
pusha
adc
pushf
xlat
inc
lock
out
lea
ret
ds
test
push
inc
fcmovbe
jle
or
mov
or
clc
lods
sar
cs
inc
subl
stc
xor
aam
fildll
or
into
adc
cmpsb
sarl
mov
dec
xchg
in
shrl
cmp
mov
stos
cmp
movsb
es
jns
adc
scas
push
sub
mov
sbb
hlt
daa
js
jg
pushf
sahf
pop
popa
into
scas
or
lock
ss
dec
xor
xor
pop
test
push
addr16
mov
or
sbb
mov
icebp
mov
jnp
iret
lock
adc
push
iret
sahf
xchg
sub
inc
or
adc
mov
insb
cmpl
cli
faddl
sub
stos
scas
xor
mov
and
xorb
sub
cmp
daa
cs
roll
rol
insl
pop
jecxz
addr16
xchg
test
sbb
pop
cli
repnz
inc
jb
mov
sahf
subb
cmp
outsb
jb
push
repz
pushl
stc
roll
mov
xchg
or
cs
flds
loopne
fsubs
rcl
mov
aad
fidivrs
or
and
sub
cmpb
pop
pop
loopne
jmp
js
adc
add
push
shr
mov
push
add
outsl
pop
and
adc
cli
cmp
hlt
fwait
xchg
mov
jecxz
cld
fiaddl
lds
inc
mov
inc
dec
dec
shlb
dec
aad
xlat
xor
mov
daa
mov
pop
mov
add
loop
int
mov
cmp
push
cwtl
inc
xchg
insl
push
cli
ljmp
pushf
jb
jbe
iret
jl
shll
sub
fstpl
shll
sub
mov
inc
decl
incb
shrl
pop
mov
push
mov
shlb
cmp
pop
mov
pop
js
and
adc
addr16
test
stc
sbb
push
cmc
pushl
and
mov
xor
scas
lods
les
sbb
mov
out
addb
in
mov
inc
jecxz
adc
cld
or
scas
dec
call
mov
addr16
xchg
jle
dec
or
rolb
pop
jg
cwtl
or
mov
cli
ljmp
jbe
jg
dec
or
xchg
dec
xchg
insb
roll
and
jo
shl
push
or
ret
subl
push
out
adc
and
lret
adc
push
mov
jle
mov
mov
cmc
ss
mov
or
jmp
dec
dec
jns
mov
cmp
test
pop
test
pop
out
add
insb
ret
mov
jae
xchg
dec
mov
pop
in
fs
xchg
js
pop
test
mov
xor
pop
lea
push
insb
push
aam
add
gs
adc
sbb
mov
ljmp
xor
jle
das
test
xchg
push
out
inc
xchg
inc
sub
sti
push
or
cwtl
jge
and
sbb
insl
ss
sti
inc
sbb
movsl
es
pushl
mov
mov
shll
mov
in
out
sub
jl
push
das
scas
dec
xchg
outsb
cli
mov
lea
lods
cmp
movsl
es
outsb
cltd
adc
testb
xchg
xchg
mov
pop
outsl
mov
adc
or
add
mov
or
movb
addr16
jl
jne
outsb
nop
bound
adc
cltd
lcall
loopne
ret
shl
cs
popa
lcall
mov
rcrb
arpl
adc
fwait
sub
movsb
fwait
stos
cmp
movsb
pop
fcomps
pusha
cmp
cmpsb
imul
shlb
and
xlat
int3
pop
push
sarb
ret
andl
sbb
pop
mov
push
adc
int3
and
cmp
rclb
ss
testb
insl
mov
stos
test
push
out
js
jb
push
cmp
fcomip
and
mov
inc
scas
xor
stos
jle
into
int
mov
fucomip
jne
decl
outsl
fcmovnu
fs
push
xchg
ljmp
addr16
xchg
xchg
orb
ja
sbbb
aad
mov
mov
pushf
mov
sub
xchg
adc
stc
or
push
leave
adc
gs
cld
outsl
fbstp
mov
mov
aas
lret
sbb
shrb
adcl
insb
or
mov
movsl
lea
rclb
ds
mov
lock
ljmp
std
sbb
out
xchg
mov
pop
inc
rcrl
mov
or
out
imul
ret
add
and
sbb
outsl
mov
xchg
dec
add
and
cmpsl
and
jne
movsl
dec
icebp
jg
ljmp
andb
ss
mov
and
mov
jl
cmpb
out
inc
addl
incl
pop
cmp
push
sub
xor
pop
jb
pop
add
aad
icebp
sbb
gs
mov
icebp
das
mov
sub
call
sub
ljmp
rolb
jl
inc
movsb
adc
outsl
add
or
mov
lret
add
adc
pop
sub
inc
fdivr
xchg
and
sbb
inc
mov
jge
inc
pop
dec
pop
or
loopne
xchg
xchg
push
stos
pop
call
cmp
jp
sbb
sub
roll
insl
mov
icebp
lea
stos
fistps
or
inc
and
mov
and
jo
jmp
inc
adc
mov
call
sub
and
ficomps
scas
mov
stc
negb
jb
sub
fwait
xchg
jb
jo
outsb
imul
mov
inc
pop
mov
xchg
jp
cmpsb
adc
add
stc
unpcklps
aas
mov
inc
mov
push
sub
shll
or
movsl
add
push
roll
inc
add
xor
cmpsb
or
add
scas
loope
cmp
sub
lahf
add
or
mov
xor
mov
jae
jnp
sbb
out
addr16
ds
and
xchg
or
mov
test
and
lahf
cmp
mov
mov
dec
pop
inc
inc
mov
xchg
adc
cli
clc
fists
xor
lods
shll
cmpsb
stos
mov
in
negl
inc
icebp
lahf
ljmp
pop
fldl
sbb
jge
push
add
lea
sti
idiv
decl
xchg
popa
xlat
push
aaa
lcall
cmp
icebp
cmpsl
add
push
movsl
pop
jecxz
jg
andb
ds
cli
push
adc
cmp
jbe
dec
mov
pop
aam
inc
jo
call
dec
testl
add
inc
jl
in
or
repz
push
lret
pop
or
fistpll
and
das
sbb
pop
xchg
push
outsl
jl
outsl
pusha
mov
dec
pusha
scas
xor
sti
mov
fists
fistpll
rcll
or
or
jmp
aas
sbb
and
and
mov
icebp
push
clc
scas
out
mov
imul
ret
add
fsubp
xchg
fsts
pop
out
mov
nop
adc
inc
roll
or
xchg
es
cli
adc
inc
arpl
or
pop
leave
xor
mov
inc
lds
mov
ja
loop
mov
cli
ret
jno
push
dec
xor
xchg
enter
icebp
fcomip
pop
and
mov
lret
and
fcoms
push
aad
mov
adc
sbb
popf
test
loope
cltd
mov
mov
stos
bound
test
cmp
and
fimull
or
popa
pushf
pusha
jge
pop
int3
dec
aas
insl
lock
lret
les
push
push
adc
jo
andb
cld
ja
das
mov
insl
xchg
js
xchg
mov
add
in
or
lahf
inc
mov
mov
insl
mov
nop
sbb
sbb
mov
call
shl
or
mov
int
call
loopne
lds
push
insb
dec
repz
popa
scas
cmp
mov
inc
fdiv
fwait
aas
mov
scas
popa
push
lds
sbb
cmpb
insl
add
arpl
adc
jge
orb
iret
imul
sbb
cs
mov
subb
pushf
and
outsb
mov
mov
idiv
pop
insb
cwtl
pop
or
mov
les
adc
adc
shrb
inc
in
aas
lods
loop
mov
adc
jmp
inc
fiaddl
call
sbbb
jns
dec
adc
mov
out
mov
xchg
pop
in
in
pop
rcll
cmpsb
cmc
bound
clc
scas
scas
xor
sti
push
sub
mov
jne
cltd
inc
out
jb
int
ja
or
sbb
adc
les
sbb
mov
adc
in
addb
jo
lods
sbb
clc
xor
out
sbb
in
mov
nop
sub
notb
push
pop
jmp
stc
jecxz
imul
xor
imul
lahf
sbb
addr16
into
or
mov
sub
scas
and
ljmp
popa
cmpsl
jg
mov
addb
bound
and
lods
fstpl
shll
fcompl
pop
or
pop
mov
pop
inc
dec
adc
xor
in
and
scas
aaa
jle
les
pop
pop
aad
jge
xchg
xlat
xor
sub
add
movsb
aaa
daa
insb
jle
popf
jg
loop
jno
xor
mov
cltd
pop
mov
or
mov
lret
fucomi
mul
sar
mov
outsb
adc
scas
ljmp
cld
ret
rcll
movsb
inc
mov
cmp
and
sub
or
shll
das
cld
test
and
push
enter
pop
adc
outsl
std
pop
mov
test
adc
pop
loop
mov
sub
adc
pop
xor
std
push
arpl
mov
xor
iret
pop
cmpsb
adc
pop
inc
fwait
sub
inc
lods
shll
fcomps
das
ret
sbb
popl
cwtl
loopne
push
pushf
push
shlb
les
push
inc
nop
and
mov
lods
sbb
je,pn
jne
xchg
adc
int
stos
add
mov
jne
push
cmpsl
mov
mov
jg
xchg
or
jge
xor
or
jecxz
and
mov
fnstsw
or
push
jge
push
movsl
fwait
lods
mov
adc
add
push
jp
pop
xchg
adc
stc
or
inc
pop
fdivp
sub
outsl
push
inc
mov
adc
or
fwait
dec
lods
xchg
dec
jnp
ds
cld
mov
out
jno
jmp
add
xchg
test
xchg
lea
add
lahf
sbb
fisttps
cmp
stos
jle
sub
mov
std
jns
scas
or
int
jae
mov
stos
sbb
mov
fiaddl
shll
and
pop
adc
jo
ss
xchg
mov
mov
cs
mov
sub
popa
lea
cmp
xchg
js
insb
cwtl
into
mov
or
ret
mov
mov
mov
fnstsw
sub
pop
lock
sub
push
adc
nop
pop
insb
cltd
pop
inc
aas
push
push
popf
jge
test
mov
bound
dec
mov
mov
mov
fwait
rcrb
and
push
or
and
out
adc
pushl
mov
jl
or
and
mov
bswap
xchg
push
ret
xor
ss
lret
mov
jg
or
cmp
jns
out
aam
in
rorl
sbb
lret
test
movsb
sub
mov
adc
add
fcomip
push
int3
mov
ljmp
fadds
inc
pusha
add
sahf
adc
test
das
cmpl
inc
ret
test
outsl
cld
in
idivb
rorb
and
div
cld
test
or
add
lods
cmp
dec
lds
addb
mov
in
movsb
sbb
test
pusha
fs
ljmp
inc
iret
int3
loopne
or
int
mov
dec
or
add
jmp
in
fwait
das
sbb
cwtl
orl
mov
js
adc
pop
ja
js
das
add
mov
add
out
insb
jno
or
cmp
loopne
lock
jbe
lds
cmp
dec
mov
cmp
mov
hlt
push
fwait
pop
sub
xchg
sbbb
outsl
inc
mov
lea
pop
popa
pop
popf
pop
mov
mov
jg
add
shl
lret
push
out
rol
dec
lock
or
add
stc
mov
fmull
sbb
lret
test
pushl
mov
push
mov
test
or
sbb
popa
adc
mov
sbb
test
sbb
cmp
lods
inc
pop
jge
leave
dec
incl
and
push
icebp
jne
mov
pop
lods
gs
jmp
loopne
inc
stos
insl
pushf
cmc
lock
sbb
mov
and
aad
mov
lods
sbb
push
inc
test
push
test
sub
mov
dec
and
xor
push
cmp
cmp
ds
xchg
mov
mov
cmpsb
cmp
test
loop
adc
rorl
sbb
mov
xchg
or
mov
orb
out
xor
pop
les
dec
inc
cmpsl
rorl
push
sbbb
adcl
and
sbb
fucomi
ds
je
popf
fidivs
mov
into
pop
dec
push
cli
xor
outsb
dec
dec
roll
inc
out
not
addr16
iret
outsb
jmp
cmp
jmp
in
mov
std
test
sahf
and
pop
and
outsb
ffreep
fs
pushl
xor
sub
sbb
fistpll
xchg
orl
icebp
pop
daa
mov
mov
mov
fidivrl
push
rol
sbb
lret
outsl
add
les
mov
aam
adc
or
js
xor
in
jbe
and
xor
or
ds
call
or
lcall
mov
cltd
xor
pusha
jns
jne
lds
add
stos
stos
mov
mov
fwait
rcll
shlb
push
fsubrl
jno
call
sbb
lret
subl
sbb
jl
outsl
pop
mov
adc
mov
mov
cmc
ljmp
and
out
mov
xchg
adc
cltd
xchg
or
jecxz
or
lock
pusha
ret
add
aam
into
push
cmp
dec
dec
insb
out
inc
mov
scas
jne
in
aad
and
mov
mov
fwait
pop
and
push
cmpsb
cmp
push
pop
or
in
call
mov
les
subb
je
repnz
pop
stos
loope
add
add
add
cld
ljmp
mul
jnp
rorl
adc
mov
cmp
ljmp
std
xor
push
dec
add
inc
in
or
js
inc
jecxz
dec
cld
ljmp
sub
adc
add
ljmp
xor
sarl
scas
cmp
adc
out
sbb
or
lahf
push
mov
push
push
cmpl
mov
fildll
and
inc
popf
adc
add
dec
xchg
mov
dec
out
dec
scas
cltd
xchg
or
fisubrs
inc
scas
mov
or
aam
call
mov
jg
dec
cltd
xor
fs
and
arpl
push
and
mov
inc
mov
or
mov
pop
add
lahf
or
hlt
adc
sub
lss
add
add
mov
sbb
lahf
jecxz
adc
inc
mov
jae
push
loopne
jg
int3
shlb
stos
ss
adc
mov
pop
mov
and
addr16
xor
push
rcll
and
sub
sbb
popf
jle
bound
sbb
mov
fcmove
out
scas
cmp
sahf
scas
aaa
add
push
out
or
or
inc
sbb
lret
pop
subb
inc
pause
enter
xor
jns
scas
ret
cmp
das
lea
mov
imul
sahf
shrl
adcl
jne
sub
js
push
mov
loope
adcb
ljmp
aam
ja
sbb
adc
dec
cmp
nop
push
push
or
fistl
inc
mov
or
fisttpll
lcall
hlt
rcll
pop
cmp
icebp
pop
mov
and
jb
pop
mov
xlat
mov
jmp
push
mov
sbb
dec
roll
pop
test
clc
je
bound
sbb
push
push
idiv
in
push
test
mov
mov
in
and
test
sub
ljmp
jmp
js
adc
mov
cld
dec
stos
clc
pop
cmp
mov
fiaddl
jmp
shll
xor
out
jecxz
stos
icebp
lret
aad
lock
mov
daa
pop
inc
jbe
sub
imul
xor
add
repz
xor
add
outsl
jp
mov
int3
mov
mov
das
add
lahf
daa
inc
repz
fs
mov
or
mov
xchg
add
jge
in
int3
not
pop
add
std
scas
out
jne
mov
sub
jg
das
xchg
mov
incw
fcoms
cmp
add
inc
call
bound
pop
popf
repz
and
shll
stc
lock
pushl
jo
inc
inc
xor
and
lahf
pushl
cmp
mov
ffree
xor
xor
push
push
int3
test
outsl
std
test
ss
nop
xor
inc
fwait
cmpb
inc
test
cli
sub
sbb
adc
dec
test
pop
call
addb
je
mov
inc
rol
inc
int3
outsl
testl
pop
mov
mov
clc
xchg
flds
and
dec
jg
out
inc
test
jl
les
cmp
pushl
inc
push
adc
daa
das
jmp
mov
mov
daa
test
loopne
addl
fwait
sub
xor
jecxz
jg
pop
stos
daa
xchg
enter
sub
push
adc
and
cld
lcall
xchg
out
ja
insb
scas
and
inc
ret
test
inc
loopne
ljmp
aaa
std
mov
jne
mov
call
loope
test
sbb
mov
ret
daa
sub
sahf
ja
or
mov
aaa
jo
add
aam
sub
jg
adc
jmp
mov
popa
push
xor
lock
push
mov
sbb
insl
adc
aad
dec
addr16
jge
cmpsb
push
mov
in
jmp
daa
jp
stc
fnstcw
loop
mov
push
cmp
imul
xchg
outsl
jg
mov
aad
adc
fs
push
movsb
out
das
insb
test
mov
repz
xor
aam
push
lcall
mov
push
xor
cwtl
pop
lods
mov
out
inc
mov
mov
pop
jp
add
mov
jmp
push
in
xor
mov
mov
dec
adc
xor
xor
add
adc
in
mov
iret
and
mov
in
jnp
ja
idivb
jmp
or
mov
fcomps
inc
out
and
add
mov
pushf
sub
or
push
jle
push
dec
out
xor
push
push
xor
fwait
add
es
sub
add
fisttpl
mov
adc
pushf
cmc
incl
jne
sbb
sub
shll
push
mov
push
negb
imul
push
sbb
adc
mov
stc
outsb
sbb
jo
dec
lahf
mov
filds
ret
push
or
pusha
loop
sub
mov
repnz
xchg
push
and
les
inc
pop
cs
pop
rcll
inc
sub
mov
addr16
gs
mov
mov
hlt
add
fucomp
xchg
scas
push
cmp
sub
dec
push
inc
faddl
mov
xchg
mov
pop
adc
pop
addr16
adc
pop
out
sbb
lock
mov
arpl
cmp
sbb
decb
mov
mov
imul
shlb
jle
aam
mov
cmp
pop
cs
or
mov
or
sbb
mov
ss
mov
inc
cli
mov
mov
mov
inc
sub
xor
les
add
xor
outsl
mov
lahf
xchg
ja
sub
cmpsl
test
clc
icebp
jmp
popa
jae
adc
cltd
data16
mov
mov
sub
pop
jo
loop
daa
arpl
pop
push
scas
jo
hlt
add
mov
jecxz
push
roll
push
pop
insl
cmp
xchg
cmp
push
aam
cmp
js
add
scas
adc
push
es
push
cmp
mov
in
pop
xchg
mov
sub
test
push
subl
push
adc
loop
js
push
stos
rsm
and
cld
in
push
rcrb
outsl
add
mov
mov
ret
setb
in
pop
push
xorb
adc
push
test
cltd
hlt
test
pop
out
adc
jg
outsl
jp
jbe
adc
daa
repnz
sub
xchg
outsl
les
rclb
daa
loope
aas
sub
inc
aas
xchg
push
sti
fistpl
push
lcall
clc
lea
push
mov
fistpl
pop
push
fwait
shll
fsincos
std
dec
ds
adc
pop
js
movsl
stos
cltd
and
in
dec
cmp
iret
inc
xchg
int3
cmp
xor
pusha
mov
xor
xlat
roll
add
pushf
sbb
mov
sub
daa
adc
test
or
pop
mov
and
js
xor
pop
stos
mov
adc
cmc
mov
xor
add
adc
adc
jmp
xchg
mov
pop
cmpsb
xor
in
jbe
adc
adcb
cmp
or
mov
xor
sbb
gs
sbb
pop
cmp
decl
test
cmp
mov
divb
repz
xchg
push
mov
bound
mov
call
pop
frstor
lock
into
lods
inc
sub
jge
add
jl
inc
shrb
add
dec
insl
dec
add
adc
mov
and
icebp
test
sub
add
dec
dec
mov
into
scas
divb
loopne
movsb
nop
dec
jns
stc
jg
mov
stos
cwtl
push
and
mov
cmp
ljmp
adc
orb
fisubl
adc
inc
into
stc
aam
mov
sbb
ret
pop
mov
xchg
pusha
mov
and
mov
cmpsb
pushl
or
xlat
push
inc
sub
adc
cmpsb
sbb
std
sub
mov
mov
sarl
popa
pop
sbb
js
push
dec
incl
les
cld
dec
inc
js
inc
fildl
cmp
adc
clc
mov
lock
cltd
fildll
rcr
cmpsb
divl
lds
inc
and
sti
xchg
cmp
jno
lds
cmp
lods
pop
aam
and
inc
or
negb
mov
sub
mov
adc
fs
incl
dec
adc
cmp
cmp
loope
mov
xchg
std
movsl
jg
pause
dec
mov
sbb
and
decl
enter
pop
xor
es
adc
loope
cmp
inc
jae
jmp
jb
add
ja
mov
outsb
shl
xchg
mov
mov
insb
push
cmp
mov
add
orb
pop
mov
repnz
add
push
sbb
mov
out
movhps
fs
dec
adc
jns
sbb
fcoml
fstps
mov
fsubp
mov
inc
movsb
mov
mov
cmp
pop
fdivs
out
in
or
or
or
test
cmp
sbb
js
sub
loopne
popa
sbb
push
pusha
xor
inc
notl
pop
sub
sahf
dec
inc
push
add
sbb
xlat
mov
push
jg
dec
outsb
insb
mov
ljmp
and
jg
stos
cmp
mov
fsts
mov
xor
fcmovne
mov
cmp
and
dec
gs
adc
movsl
fbstp
xchg
inc
inc
pop
inc
test
mov
push
btc
daa
cmp
inc
mov
cmp
arpl
frstor
pop
aam
ja
pop
int3
mov
not
mov
cli
fdivrl
pop
mov
incb
sarb
sub
and
adc
icebp
pop
adc
add
jle
jmp
stc
or
imul
bnd
add
mov
xlat
xor
movsl
dec
fiadds
mov
addl
fs
pop
inc
jle
repnz
jl
rcrb
mov
pop
or
and
and
popl
jmp
cld
cltd
push
cltd
jg
pop
xchg
add
push
scas
mov
inc
jmp
or
mov
test
pop
or
loope
cmpsb
mov
je
mov
inc
add
adc
std
dec
add
inc
xchg
and
or
sub
mov
stos
imul
je
dec
mov
outsl
mov
paddd
call
add
dec
jnp
or
int
call
mov
sbb
or
sbb
fstpl
dec
pop
pop
xchg
xor
cmp
aad
pop
cli
xor
cmp
inc
push
mov
jle
xchg
mov
mov
jg
mov
xor
mov
pop
loopne
test
xchg
adc
adc
jle
fiaddl
pusha
or
adc
fidivl
push
clc
rorb
jge
cmp
add
stos
xchg
add
gs
test
movsl
js
xor
inc
aaa
mov
fstl
jg
imul
xchg
stos
testb
jecxz
cmp
pop
xlat
fldl
push
jae
sti
pushf
inc
and
movsb
imulb
inc
in
push
dec
or
aaa
adc
add
push
pushf
gs
push
mov
ds
jmp
test
add
jle
scas
sarb
xor
mov
adc
cwtl
stos
loopne
adc
int
push
inc
mov
inc
leave
mov
insl
pop
pop
inc
and
jp
push
xchg
push
inc
cmp
pushf
dec
inc
inc
add
sub
cld
decl
jmp
testb
and
lds
iret
cwtl
push
movsl
out
adc
adc
mov
adc
and
outsb
mov
aaa
cs
stos
shr
scas
fmull
jns
movsl
mov
mov
push
pusha
push
ds
mov
scas
jle
mov
push
pop
clc
movsl
loope
cmp
fisttpl
stc
inc
jmp
jns
xchg
out
jecxz
add
and
xchg
xor
pop
cli
sti
jo
popa
dec
and
stc
imul
bound
das
jl
jbe
clc
testl
push
into
mov
jecxz
pop
fdivrp
js
dec
jb
pop
in
daa
sbb
sbb
push
outsl
mov
xor
imul
mov
mov
loopne
rorb
mov
xchg
movsb
dec
cmpsl
outsl
and
ljmp
xchg
daa
xchg
sbb
lods
hlt
fildll
adc
ret
ss
adc
pop
add
ficompl
fidivl
negl
cmp
test
dec
add
jae
dec
and
xchg
or
and
pop
stc
aas
out
push
incl
and
or
stos
jecxz
into
orb
fucom
mov
xchg
jp
sarl
dec
inc
and
movsb
pop
sbb
push
movsb
call
mov
xorb
cmp
cltd
clc
mov
mov
enter
out
jo
add
insl
xchg
dec
cmp
adc
test
stc
gs
ja
push
or
std
sub
sbb
test
int3
dec
adc
les
out
sub
inc
xchg
popa
sub
inc
xor
ljmp
xchg
mov
sbbb
les
mov
jne
mov
movsb
pop
add
pop
das
cld
inc
xor
enter
xchg
cli
and
sbb
pop
mov
pop
push
pop
dec
xor
sar
add
inc
out
lods
mov
add
and
pop
cmp
xchg
push
jmp
xchg
test
xchg
push
sub
repz
push
sbb
mov
subl
imul
adc
lods
imul
clc
outsl
je
cmp
rclb
inc
and
ljmp
jmp
mov
fmull
add
xlat
xor
aas
add
rcr
add
aas
xchg
push
pop
xchg
and
orb
or
mov
add
add
push
cld
mov
jbe
mov
xchg
in
test
inc
xchg
stos
pop
jl
and
movsb
mov
inc
or
clc
inc
icebp
xchg
mov
or
sbb
shlb
and
sub
mov
adc
pushl
popa
fdivrs
fwait
inc
pop
jo
sbbb
scas
mov
int
fcomps
dec
cmp
cmpsb
and
ds
ljmp
popa
cmp
lods
imul
decl
push
aad
rcrl
adc
cmp
clc
ret
nop
sub
mov
mov
push
push
mov
xor
lods
xor
push
mov
xchg
lret
shll
test
or
add
and
pop
cmpsl
loop
in
decl
push
inc
sub
inc
nop
faddp
fwait
pop
lret
jno
jl
outsb
lea
ljmp
das
and
repnz
dec
push
inc
mov
mov
fisttps
jle
lods
pop
pop
or
rcrb
repnz
dec
sbb
bound
mov
and
mov
daa
sub
fld
movsb
xorb
addl
mov
lahf
or
jg
subl
ljmp
push
std
jg
ljmp
and
in
mov
in
mov
test
and
popf
aam
sbb
or
std
clc
add
sbb
roll
imul
nop
jb
subl
int
inc
pop
fucomip
sbb
inc
bound
sub
loope
sub
repz
sti
call
lea
aad
sub
repnz
mov
push
cwtl
cmc
inc
xchg
sbb
orl
notb
add
pushf
fnstenv
cld
addr16
or
or
fldcw
negb
pusha
push
ljmp
sbb
std
lods
cmp
aas
stos
inc
fstl
inc
cmp
bound
out
cli
inc
stc
sub
inc
pop
push
dec
lds
xor
cmpb
insb
jl
xchg
lgdtl
enter
pop
popa
cld
testb
insl
xchg
out
shll
dec
rorb
pop
cmp
inc
cmp
nop
ss
outsl
cld
inc
int3
jb
fisttpll
shrl
push
xor
cmpsb
push
mov
inc
add
inc
jo
add
push
push
mov
rorb
sahf
sar
test
mov
arpl
push
sbb
and
daa
pop
inc
cmp
xor
aaa
rol
sub
mov
xchg
adc
lock
jl
inc
movsb
jecxz
mov
jp
or
and
mov
add
add
jnp
daa
and
pop
pop
push
test
adc
xchg
mov
cmc
scas
mov
adc
cmp
js
loope
adc
lcall
or
cmp
mov
inc
pop
pop
fwait
mov
xchg
or
inc
dec
das
icebp
incl
out
adc
andb
cwtl
ljmp
subl
sbb
mov
cmp
mov
add
sbb
pop
mov
popa
jnp
jae
ds
fildl
repz
inc
xchg
push
sub
dec
mul
push
scas
jo
push
sbb
or
fiaddl
jle
aam
jb
jb
dec
and
adc
icebp
push
bound
aas
leave
les
add
fistpl
add
push
loop
lods
adc
mov
insb
jmpw
pop
rcl
adcb
cld
pop
mov
sbb
aaa
fstpl
cli
jmp
sbb
pop
xor
bound
adc
cli
sub
mov
inc
dec
fmuls
repz
sub
jg
or
sti
lret
shrb
cmpl
mov
mov
idiv
mov
leave
fisttpll
and
ja
pop
jecxz
and
xor
push
jl
shl
pop
xlat
mov
das
xchg
add
adc
scas
cmpsb
pandn
int3
test
mov
pop
cmpsb
cmpsb
push
jb
movsl
fdivrp
sub
cmpsl
sub
out
lds
mov
sbb
rcrl
inc
lea
or
loopne
lret
pop
es
movsl
pop
cmpsb
push
push
jle
lock
mov
and
jo
xchg
jmp
adc
roll
fucomip
ja
dec
mov
std
xchg
jb
or
ss
pusha
add
ret
push
loope
lea
add
xor
mov
decl
xor
dec
aad
fistpll
test
push
mov
cmc
or
lods
mov
dec
clc
cmpsb
bound
mov
divb
inc
pop
mov
cld
sbb
or
lock
or
xlat
adc
inc
lds
mov
in
xchg
lea
adc
stos
mov
pop
cmpsb
mov
dec
popf
add
mov
pop
pop
pop
mov
lcall
sub
lods
ret
call
das
cmp
mov
dec
sub
ror
add
lcall
sti
sub
in
pop
filds
mov
adc
movsb
pushf
lahf
or
xor
loop
mov
push
call
xor
clc
fistpll
mov
cmp
scas
add
shlb
mov
push
dec
subl
jae
int
xor
sbb
cmpps
in
and
cli
icebp
popa
cmpsb
gs
mov
mov
rcll
jns
aaa
enter
jp
cmc
arpl
cmp
sub
imul
xchg
mov
pop
cmpsl
mov
rorl
pop
jo
das
andb
mov
scas
orl
jge
jle
aad
mov
push
aas
xlat
add
adc
stos
fistps
scas
sbb
je
cmc
mov
pusha
jge
call
popa
mov
mov
fsubrl
shll
pop
xchg
mov
hlt
add
test
xchg
in
fbld
xchg
dec
push
mov
jecxz
sub
mov
clc
cmpsl
aad
adc
sbb
sub
mov
add
cli
nop
inc
hlt
dec
add
pop
jae
jg
jmp
and
cmp
data16
cltd
jnp
cwtl
mov
mov
xlat
cmc
ss
push
and
lds
std
mov
nop
xchg
jo
sbb
movsl
leave
pop
push
rorb
push
or
test
pop
cmp
fadds
das
inc
jl
push
and
inc
call
stos
inc
and
and
addl
inc
and
jno
dec
outsl
cld
mov
xor
cmp
or
ja
notb
jle
add
mov
mov
mov
sub
stos
jg
fldl
jne
xchg
and
testb
ds
decl
in
pop
or
sub
xchg
sub
inc
orl
sub
es
lret
test
pushf
inc
push
or
sub
mov
in
mov
pop
clc
cmp
dec
orb
lcall
cwtl
icebp
xchg
addb
inc
fstps
push
data16
jmp
out
and
test
repz
adc
inc
jmp
sub
icebp
dec
lea
cld
xchg
into
mov
ret
sbb
add
shrl
jle
sbb
mov
inc
and
outsl
lock
mov
inc
jno
sbb
shll
xchg
push
stos
cmpsl
sbb
add
xor
in
nop
add
rcr
push
movsl
int3
and
rcrb
and
imul
cmp
mov
sub
adc
jno
xchg
dec
jnp
mov
test
ljmp
push
add
mov
pushf
shlb
adc
adc
mov
shlb
cli
inc
cs
push
jne
pop
stos
push
cmp
fwait
or
in
ss
xchg
cltd
in
scas
incl
jno
xchg
dec
or
mov
sub
add
cmp
push
jae
outsl
sbb
inc
sbb
pushf
jle
fdivs
shlb
out
in
mov
loop
hlt
decb
outsb
jl
fstl
dec
das
adc
cwtl
jmp
andl
mov
or
sub
mov
adc
or
popa
call
popa
inc
lds
clc
pop
sbbb
repz
jns
adc
aaa
push
aas
adc
adc
adc
andl
xor
or
jmp
ret
mov
sub
jmp
xchg
or
mov
clc
cmc
lcall
loopne
fldt
cld
or
mov
pusha
lret
cmc
xor
shll
mov
mov
aas
sub
ret
stc
loop
push
int
js
mov
ret
fildl
dec
into
mov
into
and
or
pop
add
rorl
shl
aam
fiaddl
scas
insl
or
adc
and
and
sbb
xchg
mov
orl
jns
fcomip
push
add
mov
pop
and
sub
in
jo
mov
int
dec
loope
test
and
and
leave
cmc
aas
mov
xor
jb
mov
cmp
mov
sub
daa
jnp
movsl
jb
test
lcall
fnstsw
addr16
insl
pop
test
jge
inc
leave
imul
and
add
mov
loop
cmp
or
aas
push
in
repz
sub
scas
pop
jl
or
inc
push
hlt
cwtl
fs
and
xchg
pop
aam
cld
aam
addr16
outsl
dec
cmc
adc
and
lock
and
inc
or
sbb
rolb
and
outsl
or
fs
jbe
cli
sbb
repz
outsb
pop
enter
movb
jg
jmp
mov
pusha
or
test
inc
mov
das
outsl
cli
ljmp
aad
xor
enter
les
fdiv
lret
incl
inc
adc
and
fistl
cwtl
cmpsb
das
lds
fwait
jns
leave
in
call
pop
adc
test
mov
and
xor
or
mov
pop
f2xm1
mov
mov
push
cmc
add
int3
and
cltd
xchg
andl
xor
sub
ljmp
mov
nop
jne
ds
add
adcb
sarb
repz
jp
imul
sbb
mov
push
sbb
in
js
ret
xchg
movl
xchg
sub
jg
mov
push
sbb
add
xchg
fwait
movsb
or
in
sbb
movsb
adc
pop
test
sbb
loopne
cld
lea
enter
pop
jle
call
cld
push
nop
pushf
adc
or
inc
hlt
xchg
test
cmp
or
mov
ljmp
lods
xor
fiadds
pop
call
xlat
mov
mov
inc
inc
or
jno
and
testl
add
mov
movaps
cwtl
inc
dec
pcmpgtb
fimull
or
popa
adc
cmp
xchg
sti
adc
push
ljmp
mov
inc
fsubrs
mov
fildl
push
addr16
pop
add
mov
push
cmp
push
xor
mov
mov
xchg
mov
sbb
cmp
decl
inc
je
cltd
loop
pop
or
cmp
pop
rclb
sbb
lret
dec
sub
sbb
sub
push
repnz
shlb
sar
pushl
push
or
leave
movsb
dec
inc
mov
fbstp
shrb
subb
rcll
repz
xchg
and
pop
fisubs
loope
lcall
push
dec
and
in
rcl
inc
mov
sbb
test
out
dec
add
repnz
inc
dec
xor
fs
gs
pushf
shlb
jno
je
sarb
cmp
test
or
ljmp
into
cld
xor
dec
frstor
pop
ret
es
xchg
loop
dec
mov
sub
pop
jne
pop
leave
in
outsl
clc
call
push
fstpl
add
xor
mov
rorl
cs
add
outsb
ljmp
mov
leave
adc
xor
push
cmp
add
inc
popf
push
pop
loopne
push
pop
and
and
pop
cltd
jbe
cmpsb
fdivp
or
jl
jecxz
mov
ja
icebp
aaa
icebp
mov
dec
dec
and
mov
or
sbb
add
mov
pop
clc
push
out
cmp
inc
sub
cwtl
js
add
or
sti
dec
xor
sbb
ja
ret
inc
stc
xor
inc
jmp
clc
mov
sbb
pop
lock
fldt
jne
push
stos
fistps
sahf
pusha
push
ja
pop
je
pop
mov
in
add
mov
jo
mov
cmpsl
fidivrl
out
clc
movsl
cmp
cli
je
cmp
add
call
daa
int
out
xor
and
add
rcrb
inc
sub
loope
add
mov
pop
and
dec
pop
fs
cmpsb
fisttpl
mov
jno
das
mov
icebp
cmp
adcb
scas
xchg
lahf
aad
cs
gs
sar
pop
cmp
push
sbb
jg
push
and
mov
mov
jle
xlat
in
fxch
mov
mov
and
nop
xchg
sbb
imul
push
aad
add
daa
popf
mov
mov
adc
out
push
daa
in
push
in
push
in
mov
insl
mov
mov
fwait
or
jo
pushf
icebp
in
adc
dec
cmpsl
add
pop
xchg
rorb
pop
jmp
hlt
mov
adc
cmp
out
add
or
sbb
and
loop
cmc
cmpsb
cmp
mov
enter
jo
rcrb
push
aas
pop
cmp
imul
test
cmc
out
mov
add
and
lods
idiv
dec
jne
test
clc
jmp
sbb
orb
incl
push
inc
and
loop
or
in
inc
fs
add
inc
incl
inc
repnz
mov
stos
or
test
cmp
and
shlb
xchg
fcomps
ss
sbb
sbb
sarb
dec
mov
daa
pop
add
into
adc
jg
loopne
in
enter
lock
cltd
imul
push
daa
mov
add
fbld
bound
cli
aaa
pop
je
cmc
xor
lret
xchg
mov
rorb
jl
bound
lret
subb
push
lret
push
das
mov
add
and
adc
incl
add
dec
addr16
shrl
clc
xor
add
mov
sbb
xchg
mov
adc
inc
nop
lahf
dec
sub
fists
pushl
loope
and
sbb
pop
ds
mov
aaa
cmc
sbb
push
jmp
popf
xor
insl
cmc
incl
xor
aas
scas
lret
jno
jl
mov
clc
outsl
adc
or
in
dec
mov
dec
sar
lcall
in
adc
jbe
or
lahf
jl
sahf
out
stc
xchg
int
cmpsb
sbb
clc
arpl
shll
inc
mov
test
clc
mov
adc
sbb
sahf
and
addb
das
fcompl
out
push
scas
nop
mov
shlb
fiaddl
mov
mov
sub
es
je
inc
cltd
mov
stos
jno
inc
or
adc
dec
hlt
fnsave
rol
xchg
jnp
popa
push
mov
sbb
neg
and
lock
bound
fnstsw
shrl
dec
inc
test
xor
gs
int3
push
lods
outsl
outsl
incl
add
mov
sti
loopne
call
mov
sbb
jmp
dec
add
in
sub
add
xor
in
xor
incl
pop
lock
das
cmp
xchg
inc
repnz
js
js
repz
aaa
sub
clc
notb
sbb
shll
lcall
push
mov
cld
lods
push
mov
xchg
jp
add
jg
pop
fs
cld
inc
pop
outsl
sbb
xchg
adc
mov
iret
inc
xchg
cs
inc
pop
cmp
mov
repz
ret
add
jg
fisubrl
or
pop
subb
mov
ja
push
bound
jnp
sti
cmpsl
and
xor
pop
pop
dec
js
jp
subb
push
das
repnz
and
cmp
mov
xchg
aam
cmp
jl
push
jg
loopne
call
mov
mov
cmpsb
shrb
jle
mov
add
das
cwtl
in
adc
fstl
je
inc
sbb
mov
sub
jbe
rcl
rorl
insb
dec
mov
and
lret
ret
dec
cmp
inc
inc
jg
insb
xlat
jp
lods
cld
mov
dec
inc
arpl
pop
clc
lods
jo
pop
fmull
xor
xor
rorl
cltd
dec
jmp
mov
mov
sbb
pusha
ljmp
das
cld
test
test
jns
out
and
inc
rorb
or
mov
add
ljmp
pop
mov
test
pop
divl
cmp
cwtl
sub
inc
and
ds
mov
cltd
xor
fisubs
ss
cli
push
call
lods
pop
adc
add
dec
ljmp
lret
adc
inc
adc
sbb
or
outsl
test
iret
add
sub
inc
and
cmpl
xor
mov
push
xor
cli
lea
lds
imul
orb
sub
adc
pop
sub
aas
bnd
fiadds
inc
mov
sub
pop
imul
jl
insl
enter
test
andl
cltd
pushl
mov
out
cmpl
stos
jne
add
inc
sar
cmp
add
out
sbb
push
filds
mov
push
jge
jg
xlat
xchg
or
outsb
jmp
xchg
sbb
cld
and
mov
iret
sbb
cs
dec
lds
add
das
jbe
fadd
cltd
mov
repnz
stos
js
out
jo
inc
je
sahf
int
inc
pop
cs
sbb
outsl
jge
hlt
push
ljmp
jo
pop
clc
sbb
sub
std
sub
lock
loopne
sub
mov
jnp
incb
mov
xor
sub
and
clc
aaa
aam
pop
xor
subb
and
subb
adc
and
dec
add
out
fiadds
jns
pusha
pusha
daa
in
lods
lds
sbb
add
xchg
nop
push
test
test
movsl
loopne
hlt
stc
dec
sbb
xchg
mov
sub
hlt
and
popa
mov
testl
cmp
in
icebp
out
sbb
ljmp
imul
cmc
mov
push
js
popf
popa
fnstsw
sub
pop
sbb
mov
insb
adc
or
and
jno
popf
xor
push
int3
push
push
rorl
jmp
cmp
push
in
cmp
dec
xor
dec
mov
sbb
test
inc
es
mov
mov
xchg
mov
xchg
psraw
dec
outsl
add
mov
aas
or
hlt
ljmp
imul
cmc
paddb
or
mov
xor
cmp
mov
jmp
fdivrs
jne
xlat
sbb
jg
adc
in
or
je
sub
ret
ljmp
xor
cld
ja
int
stc
xchg
clc
pushl
and
adc
pop
mov
ss
jg
cmp
ss
or
xor
lock
mov
dec
pop
mov
movsl
mov
testb
cld
inc
xchg
add
movsb
cmp
mov
int3
dec
jns
and
decl
test
test
push
imull
xor
add
sbb
sarl
push
cltd
push
adc
adc
xor
mov
pop
lret
cmp
je
ret
inc
outsb
mov
xor
ja
cmc
xchg
mov
sbb
pop
cmpsb
mov
mov
addr16
dec
outsl
popa
stos
cmc
ds
mov
js
push
mov
lods
xchg
push
xchg
pop
loopne
es
pop
fs
adc
scas
scas
pop
push
pop
fdivs
cmp
jb
push
pop
stos
clc
dec
jmp
repz
sti
dec
cld
mov
ret
jne
jbe
cmp
mov
je
nop
add
sub
dec
das
inc
sbb
or
aas
sub
loopne
outsl
cld
ljmp
xor
adc
bswap
lcall
and
mov
ja
mov
aas
pop
rcrl
fbstp
lahf
or
mov
mov
sub
fistpll
xchg
shr
cltd
sbb
mov
xchg
les
sub
loopne
shlb
or
mov
inc
ja
loope
or
jg
xor
add
lods
pop
sbb
leave
sarl
dec
adc
loope
jle
inc
mov
and
pop
sub
adc
or
jge
xchg
lahf
faddl
rcll
inc
rorb
and
shrb
sbb
cmc
add
mov
xor
sahf
dec
jnp
std
call
jp
sbbl
push
icebp
aad
rcr
sbb
js
lea
enter
cmp
xor
or
xorl
xor
aad
test
aam
mov
xchg
pop
ret
adc
ret
add
stos
add
sub
and
hlt
dec
fsubp
jg
out
xor
sbb
mov
jle
mov
jle
mov
lds
jnp
sub
sub
xchg
and
xchg
jg
push
loope
pop
sti
inc
aam
mov
mov
aaa
or
push
push
add
lock
add
mov
mov
sub
sbb
sbb
inc
or
cmp
test
pusha
cmp
mov
and
dec
add
repnz
cwtl
loope
test
pop
sub
and
xor
cld
mov
xchg
pop
cli
ret
jmp
mov
cmp
incl
xchg
xchg
in
push
and
ljmp
enter
orl
aaa
popa
stc
or
nop
mov
push
jle
adcl
stos
cmpl
and
sub
mov
and
sti
rol
adc
mov
xchg
popf
fs
xchg
dec
ror
in
sbb
mov
cmp
cmpsl
imul
loope
mov
rclb
mov
cli
mov
push
je
mov
mov
int
call
ja
xor
ret
in
cli
jp
cmc
incl
cmp
mov
add
and
aaa
cli
in
inc
mov
or
xor
rcl
push
dec
mov
mov
movsl
sub
and
inc
aaa
std
pop
icebp
insb
repnz
sbb
and
or
enter
aaa
data16
fstpt
add
cltd
loop
xchg
add
xchg
rorb
xor
pop
je
aaa
push
outsb
or
dec
cmp
aad
cli
xor
mov
lret
rcll
push
add
jg
sbb
jae
mov
or
mov
je
xor
dec
or
mov
pop
mov
mov
and
mov
mull
pop
test
jecxz
sbb
pop
pop
fistpll
and
mov
ds
clc
call
or
xor
cwtl
mov
call
or
test
adc
pop
add
arpl
sti
shrl
adcl
mov
or
call
mov
sbb
bound
mov
and
inc
xor
adc
je
inc
pop
cli
adc
or
mov
ficoml
ljmp
lahf
test
rcl
push
lods
mov
ljmp
mov
insl
cmpsb
add
sahf
neg
mul
fldl2e
add
mov
mov
and
dec
push
clc
rcrb
aam
fidivrl
dec
mov
jge
int
negl
dec
add
xlat
sbb
add
adc
mov
sti
pop
mov
hlt
iret
xor
sub
ljmp
push
mov
add
or
pop
jns
iret
aas
jbe
js
les
inc
pop
js
pop
insl
cmpsl
bound
jne
jle
notb
outsl
nop
mov
add
bound
inc
sbb
hlt
dec
outsl
jl
and
xchg
fmuls
adc
mov
lret
ljmp
xchg
iret
addb
pop
pop
push
sbb
scas
lcall
cwtl
push
loope
or
adc
and
loope
lcall
push
lcall
push
adc
aaa
mov
and
enter
fists
aaa
imulb
sub
repnz
sti
gs
negl
jno
roll
fistpll
xchg
mov
push
outsl
jg
jmp
dec
cld
xor
sbb
repz
mov
roll
incl
xorb
fdivrs
jb
nop
arpl
jbe
enter
movsl
aaa
push
cmp
add
sub
xchg
cmp
xchg
mov
cmpsb
dec
outsl
clc
xchg
lcall
daa
and
ljmp
add
clc
pusha
adc
xor
and
add
mov
call
or
sbb
lock
mov
adc
cmp
stos
ret
add
aam
out
shr
mov
mov
pushf
sbb
cmc
push
into
das
addr16
jg
hlt
push
out
roll
mov
data16
movsl
lahf
xchg
mov
or
and
shll
std
scas
das
sbb
pop
fistps
in
daa
and
insb
sub
insb
jmp
test
and
xchg
pushf
cli
in
incl
jg
mov
and
adcl
xor
adc
inc
add
mov
push
scas
or
mov
ret
mov
cld
mov
aas
sbb
dec
inc
sub
daa
aam
lods
inc
sub
decl
adc
loope
fwait
test
push
mov
loopne
pushl
inc
pop
push
sbb
popa
inc
std
add
dec
pop
fistpll
int3
roll
mov
adc
js
adc
es
pop
jmp
mov
and
sbb
sub
cmp
jp
sbb
jp
imul
cmpsl
stos
jbe
pusha
mov
out
add
stos
mov
ss
mov
and
data16
popa
stos
ja
jno
iret
xchg
mov
orl
and
icebp
push
insl
addr16
fildl
pop
pop
xchg
stos
int3
sbb
rolb
cmp
push
push
decl
imul
xchg
lds
push
pop
dec
mov
sbb
xchg
cmp
jg
pushl
sub
aas
das
test
out
in
push
out
or
push
sub
or
sti
adc
ss
sbb
xchg
test
mov
dec
push
js
cmpsb
fldl
sbb
pop
cmp
cmp
xor
mov
mov
shll
mov
lret
jno
xchg
lea
mov
dec
stos
dec
test
push
and
lods
mov
add
movsb
movsl
fnstsw
or
jg
lods
and
add
mov
mov
adc
mov
movsl
push
sti
and
addr16
das
iret
fcompl
add
push
jmp
add
push
inc
cmp
dec
rcll
mov
stos
aad
xchg
int3
mov
push
cli
ljmp
cmpsl
or
add
or
mov
clc
mov
jp
pusha
xchg
xchg
sbb
sar
icebp
push
mov
gs
and
call
sbb
fldl
mov
mov
dec
popa
inc
dec
and
push
icebp
pop
fisubl
jg
push
or
roll
aaa
ss
ds
sbb
adc
jmp
jmp
xchg
gs
sbb
cli
stc
loopne
xor
cltd
push
xor
inc
xchg
scas
or
sub
clc
movsl
inc
ss
and
pop
aaa
cs
lods
dec
dec
out
in
mov
jmp
cmpsb
xchg
lea
push
and
clc
aaa
mov
testl
movsb
mov
outsl
mov
dec
mov
sti
dec
jp
push
mov
mov
cmp
test
das
jge
cld
xor
sub
inc
pop
decb
pop
jge
pop
and
adc
mov
jne
mov
das
push
jl
and
cmp
inc
repz
jp
filds
add
inc
jno
sbbb
cmp
test
jae
pop
xorb
push
mov
mov
das
dec
mov
jb
andb
push
mov
and
and
ss
cmp
dec
imul
mov
leave
ret
out
iret
push
incl
jle
pop
je
loopne
dec
inc
sub
push
or
jno
jle
and
jecxz
lea
dec
cld
lret
or
sbb
sub
fdiv
xadd
pushl
stos
je
mov
or
and
push
inc
leave
xor
pop
fs
movsb
lahf
fcompl
cmc
shlb
cmpsb
out
orb
scas
cmp
pop
sbb
cmp
xchg
out
dec
in
ljmp
pop
xor
mov
imul
add
mov
lock
add
push
test
js
testb
jge
cwtl
pop
test
push
xchg
mov
rcll
jp
push
mov
xor
adc
stos
rcrb
movsb
jg
mov
mov
divl
xchg
push
inc
xchg
sbb
sub
aam
sarb
pop
ret
imul
ficoml
inc
mov
fdivrl
fwait
mov
mov
repz
movsl
cmp
pushf
test
dec
cmc
in
or
mov
sub
and
lret
cwtl
sti
mov
in
nop
stos
or
icebp
mov
sar
push
jb
xchg
mov
fists
push
lea
inc
jg
int3
leave
cmpsl
mov
cltd
lret
movsl
mov
or
push
aam
adc
ja
dec
xor
pop
iret
sub
xlat
xchg
test
leave
std
shl
aaa
pop
test
jae
bound
pusha
adc
mov
insl
mov
insl
call
call
fldt
sbb
mov
stc
in
dec
push
out
jg
hlt
inc
mov
mov
cs
xorl
js
inc
enter
es
jae
loope
inc
xor
imulb
mov
in
add
push
push
and
fnstcw
mov
sbb
rol
scas
jmp
outsb
pushl
nop
mov
push
les
add
incb
sarb
pushf
imul
stos
je
mov
mov
pop
cmp
mov
lock
cmpsb
pop
repz
loopne
xchg
inc
and
movsb
sbb
fwait
sub
mov
jecxz
cmpsl
cs
sub
aas
movsb
es
das
cld
shrl
push
mov
pop
jp
pushf
and
mov
scas
and
sti
mov
pop
xchg
lcall
add
and
movsb
and
push
and
lock
mov
inc
jae
fwait
hlt
fcomi
pop
inc
xor
lret
sub
jge
add
xchg
pop
mov
icebp
lock
sbb
mov
pop
inc
and
nop
push
adc
lcall
jno
in
jmp
bound
cmp
lret
jmp
pop
or
sub
clc
ja
fwait
cld
mov
push
mov
adc
rcr
add
jns
not
das
lock
mov
jp
repnz
xchg
negb
xchg
mov
insl
dec
jg
mov
movsl
inc
out
sbb
packuswb
adc
leave
nop
pop
jnp
lahf
jle
sub
in
stc
or
leave
xchg
pushf
shll
mov
dec
outsb
cmp
adc
es
mov
call
das
sub
sub
subb
push
dec
add
or
or
cmp
or
pusha
push
add
je
std
xchg
call
imul
outsb
je
jb
popa
je
inc
imul
jns
sti
repnz
pop
inc
js
je
gs
push
xchg
jns
es
daa
push
gs
imul
pop
push
dec
outsl
sub
jb
sbb
imul
imul
push
mov
arpl
jae
outsl
pop
xor
je
into
pop
sti
in
imul
adc
sub
push
gs
insb
add
fistl
jae
insl
mov
cmp
fdivrs
inc
push
xor
inc
inc
mov
or
outsl
imul
ljmp
popa
sub
insb
je
inc
jns
aas
push
imul
inc
push
jb
inc
outsb
fs
push
or
push
jno
and
out
inc
fdivrs
arpl
inc
adc
gs
push
lret
fisubrs
adc
nop
insb
pusha
fdivr
and
imulb
je
bound
jae
sbbb
ret
mov
imul
inc
popa
int3
insl
pop
outsb
arpl
dec
inc
dec
test
lds
xlat
fs
lcall
bound
imul
ja
leave
je
ja
testb
jb
xchg
xchg
jb
popa
addr16
pusha
xchg
jle
testl
enter
jae
adc
inc
jne
cmp
xor
fwait
mov
inc
pushf
mov
dec
pop
leave
or
dec
outsb
mov
sub
mov
and
rorl
push
ret
sub
and
dec
popa
jo
imul
cmp
in
jno
mov
movsl
push
outsb
insl
sub
gs
mov
inc
jae
dec
xor
or
imul
push
cwtl
aam
jo
icebp
or
data16
incl
push
sub
and
add
pop
xchg
xor
hlt
fwait
jae
jecxz
jb
std
popa
or
mov
rorl
lret
or
jo
fisttpll
xor
xchg
aaa
push
outsb
ss
mov
mov
lods
cltd
fisubrs
sub
aam
xchg
lcall
divb
add
imul
insl
es
bound
pop
jge
mov
dec
fs
mov
sub
pop
ret
pusha
lahf
inc
jb
loope
sbb
adc
or
pop
or
lods
pushf
js
jnp
xor
mov
dec
ss
or
xor
jle
push
inc
ret
jo
or
inc
jbe
jge
push
insb
or
jae
lock
dec
or
xchg
jb
and
and
lods
mov
mov
gs
sub
repz
sbb
push
add
jmp
loopne
sidtl
add
add
sub
shrb
mov
and
in
jae
outsb
sbb
add
nop
add
sbb
fnstcw
add
xor
pop
push
jg
xchg
les
push
add
add
dec
lret
jbe
pop
js,pn
dec
jnp
or
les
inc
je,pn
outsb
gs
movsb
xor
xor
push
imul
or
fnstcw
add
jo
cmp
rorb
arpl
add
add
mov
testb
add
arpl
daa
sbb
int3
test
add
add
add
nop
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
jo
add
mov
add
lock
addb
add
add
add
dec
add
addb
add
or
add
add
xor
add
test
add
add
add
mov
add
add
add
or
add
testb
insl
jno
add
add
add
add
add
add
addb
add
or
add
add
add
add
adc
add
add
add
or
add
add
add
or
add
add
add
add
cmp
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
iret
jg
cmc
iret
out
add
iret
incl
neg
jle
imul
incl
std
out
add
iret
jg
cmc
out
add
out
add
fucomip
add
iret
out
add
iret
out
add
out
out
add
incb
idiv
out
add
iret
jg
jg
std
iret
jg
std
out
outsl
add
iret
incl
std
out
outsl
add
iret
outsb
add
iret
outsb
add
out
outsb
add
out
jg
jle
idiv
jg
imul
outsl
add
iret
incl
cmc
out
jg
dec
incb
cmc
out
out
add
add
ljmp
std
out
out
add
iret
jle
idiv
out
add
fucomip
add
out
add
ljmp
imul
outsb
add
iret
incl
cmc
out
outsb
add
jg
cmc
iret
outsl
add
out
out
add
incb
cmc
fistpll
ljmp
dec
incl
test
outsl
add
out
out
add
incb
cmc
out
incb
cmc
jg
idiv
jle
test
out
add
out
add
out
incl
std
iret
outsl
add
add
iret
outsb
add
iret
out
add
fildll
cmc
out
incb
cmc
out
jle
cmc
out
add
jle
std
out
add
fucomip
add
ljmp
cmc
iret
jg
out
incl
imul
outsb
add
jg
std
iret
incl
cmc
out
out
add
fistpll
test
jle
test
jg
cmc
out
outsl
add
iret
outsb
add
iret
outsl
add
add
out
incb
fildll
std
out
jle
cmc
iret
incb
fistpll
fucomip
add
iret
outsb
add
iret
out
add
jle
std
iret
out
add
iret
outsl
add
iret
jg
std
jle
imul
out
add
incl
std
iret
out
add
iret
out
add
iret
outsb
add
fucomip
add
fildll
cmc
iret
jle
std
out
jg
dec
out
add
iret
jg
std
out
add
fistpll
neg
outsb
add
ljmp
idiv
outsl
add
out
out
add
out
outsl
add
out
incl
std
incl
cmc
out
add
out
add
fucomip
add
iret
incb
ljmp
std
iret
outsl
add
out
add
out
jle
std
fildll
test
outsb
add
iret
out
add
out
outsb
add
incl
ljmp
cmc
iret
incl
out
outsl
add
iret
jg
std
out
outsb
add
ljmp
neg
outsb
add
out
incb
neg
outsl
add
incb
cmc
incb
cmc
iret
incb
cmc
iret
outsb
add
out
add
iret
jle
std
fucomip
add
out
add
out
incl
idiv
jg
neg
incb
add
fildll
std
out
jle
add
ljmp
out
incb
std
incb
imul
out
add
out
incl
idiv
out
add
incb
cmc
out
outsb
add
fildll
std
out
jle
std
incl
std
iret
jg
std
ljmp
out
out
add
out
jg
dec
outsl
add
iret
out
add
iret
incl
dec
out
add
iret
out
add
incl
std
jg
std
out
add
iret
incb
fildll
std
add
add
out
add
out
out
add
ljmp
cmc
out
jg
cmc
fucomip
add
out
outsb
add
fucomip
add
out
outsb
add
ljmp
std
out
outsb
add
out
incl
cmc
iret
out
add
out
incb
std
fildll
std
iret
incl
incb
std
fildll
fildll
cmc
ljmp
cmc
iret
outsl
add
fistpll
cmc
add
add
out
incl
std
incl
test
incb
idiv
incb
std
iret
incb
test
incb
imul
outsb
add
out
incb
cmc
out
out
add
iret
jle
std
iret
out
add
fistpll
imul
incl
imul
outsl
add
incl
cmc
ljmp
std
fistpll
imul
incl
test
jg
out
outsl
add
jg
std
fistpll
out
out
add
fildll
std
ljmp
cmc
out
out
add
out
jg
out
out
add
fucomip
add
out
out
add
out
outsb
add
jg
std
out
out
add
iret
incl
std
ljmp
cmc
jle
neg
incl
std
jg
idiv
out
add
ljmp
add
out
jg
cmc
fildll
std
iret
out
add
jle
std
add
iret
out
add
add
add
incb
cmc
out
out
add
iret
outsb
add
ljmp
cmc
out
jg
idiv
outsl
add
iret
outsl
add
fistpll
idiv
outsl
add
incb
jg
std
add
iret
out
add
fucomip
add
add
fistpll
cmc
iret
outsl
add
iret
outsb
add
fildll
out
incb
cmc
out
outsl
add
fistpll
std
iret
outsb
add
add
iret
jle
cmc
out
outsl
add
ljmp
std
ljmp
idiv
out
add
out
out
add
out
incb
fistpll
std
iret
jle
cmc
fucomip
add
fistpll
std
out
jle
out
add
out
incb
cmc
iret
outsb
add
out
out
add
ljmp
cmc
out
incl
out
incb
test
incl
idiv
jle
jle
cmc
iret
jg
cmc
out
add
iret
out
add
iret
outsb
add
out
add
out
jle
neg
outsb
add
out
out
add
add
iret
out
add
incb
std
fildll
add
fistpll
dec
outsl
add
add
iret
out
add
out
add
add
ljmp
std
fucomip
add
out
add
add
add
iret
incb
imul
jle
idiv
jle
add
iret
incl
std
add
fistpll
fucomip
add
out
jle
neg
outsl
add
iret
outsb
add
jg
test
out
add
add
iret
incb
test
jle
out
outsb
add
out
incl
std
jle
ljmp
std
fildll
std
out
jle
out
incb
add
ljmp
cmc
iret
outsl
add
out
incb
ljmp
out
incl
cmc
incb
incl
dec
outsb
add
iret
outsl
add
incl
imul
out
add
add
out
add
ljmp
cmc
out
outsb
add
incl
neg
incl
add
iret
incl
idiv
out
add
iret
incb
incl
std
fildll
std
out
outsb
add
out
incb
jg
dec
outsb
add
iret
incb
neg
incb
cmc
add
iret
out
add
iret
incl
out
outsb
add
fucomip
add
out
out
add
iret
out
add
add
add
iret
out
add
fucomip
add
out
outsb
add
iret
outsb
add
iret
outsb
add
out
outsl
add
iret
outsb
add
jle
fildll
std
fistpll
neg
jle
fucomip
add
out
incb
cmc
incb
test
jg
out
incb
imul
outsl
add
jle
cmc
iret
incb
jle
std
jle
jle
dec
outsl
add
out
incl
std
iret
jg
dec
incb
std
incb
cmc
iret
out
add
out
out
add
out
outsb
add
out
jle
neg
incl
idiv
outsl
add
out
incl
neg
incl
std
jg
dec
jg
out
outsb
add
ljmp
std
add
add
out
out
add
iret
outsb
add
ljmp
cmc
jle
fistpll
neg
out
add
iret
outsl
add
out
out
add
fistpll
std
out
jg
idiv
jle
std
out
out
add
out
add
out
outsb
add
out
outsl
add
iret
jle
neg
jg
std
fucomip
add
fildll
out
incl
cmc
add
add
fucomip
add
iret
out
add
out
add
out
incb
out
jle
out
incb
imul
incb
out
out
add
out
add
out
add
out
add
fildll
imul
incb
neg
jle
std
iret
outsb
add
fistpll
out
incl
idiv
jle
cmc
iret
outsl
add
fucomip
add
iret
incl
cmc
jle
std
fistpll
out
add
jg
std
fildll
incb
dec
outsb
add
iret
jg
cmc
ljmp
cmc
iret
incl
out
jle
std
out
add
out
incl
test
incl
cmc
out
incb
idiv
incl
out
add
add
incb
cmc
fildll
cmc
out
add
ljmp
cmc
fucomip
add
fistpll
test
incb
cmc
iret
out
add
out
jle
std
iret
outsb
add
fucomip
add
iret
incb
std
ljmp
out
incl
neg
outsl
add
iret
out
add
out
add
out
jle
dec
incl
idiv
outsl
add
iret
incl
std
jg
ljmp
std
jg
out
outsl
add
jle
jle
test
outsl
add
iret
out
add
out
add
out
add
iret
outsb
add
iret
out
add
out
incl
test
out
add
iret
jle
idiv
incl
out
incl
std
iret
jle
std
iret
incl
std
iret
jg
std
iret
out
add
iret
incl
dec
out
add
fistpll
std
ljmp
cmc
fucomip
add
fildll
dec
out
add
out
outsl
add
out
jle
cmc
ljmp
cmc
jle
cmc
out
out
add
fistpll
cmc
out
outsb
add
jg
neg
out
add
iret
outsl
add
jg
imul
out
add
incb
cmc
fildll
neg
incl
idiv
out
add
fucomip
add
iret
outsl
add
fistpll
fucomip
add
add
iret
jg
cmc
incb
cmc
out
outsl
add
jg
dec
incb
cmc
out
out
add
ljmp
std
fistpll
cmc
out
out
add
iret
out
add
out
add
iret
out
add
fucomip
add
iret
jle
idiv
incb
out
incb
test
outsl
add
iret
out
add
incl
test
incb
cmc
iret
out
add
iret
out
add
fucomip
add
incl
test
outsl
add
out
add
out
out
add
ljmp
cmc
fistpll
imul
incl
std
jle
test
jg
out
jg
idiv
incb
cmc
out
outsl
add
out
add
fistpll
neg
incb
add
out
jle
std
iret
jg
cmc
iret
jg
neg
out
add
incl
imul
incb
cmc
ljmp
cmc
iret
incl
idiv
incb
add
jg
std
out
outsb
add
incb
cmc
out
add
incb
cmc
out
add
out
outsb
add
jg
std
add
ljmp
std
iret
outsl
add
fildll
dec
outsl
add
fistpll
dec
jg
std
iret
out
add
fucomip
add
iret
incb
neg
outsl
add
fucomip
add
out
out
add
ljmp
imul
incl
imul
outsb
add
fildll
std
iret
outsl
add
jg
out
out
add
incb
neg
outsl
add
out
incb
std
jg
std
ljmp
imul
outsb
add
incb
idiv
out
add
iret
incb
std
fildll
cmc
fistpll
out
incl
std
fistpll
imul
outsb
add
out
outsl
add
iret
out
add
iret
out
add
jle
cmc
add
fistpll
neg
outsb
add
iret
incl
cmc
fistpll
std
ljmp
std
fildll
std
fistpll
neg
jle
cmc
iret
jg
neg
jg
dec
out
add
out
outsb
add
iret
outsl
add
iret
incl
cmc
iret
incl
neg
jle
cmc
out
add
fistpll
std
iret
out
add
fucomip
add
iret
outsb
add
fucomip
add
out
jle
test
outsl
add
incb
std
out
add
out
incb
std
iret
incb
std
iret
out
add
out
out
add
fistpll
cmc
fistpll
out
out
add
ljmp
std
ljmp
dec
outsl
add
out
outsb
add
out
incb
neg
outsb
add
incb
out
jle
std
iret
out
add
iret
outsl
add
out
add
add
iret
outsb
add
fildll
cmc
fildll
std
out
out
add
iret
jle
idiv
outsb
add
incb
test
out
add
out
out
add
out
outsb
add
ljmp
std
iret
outsl
add
out
outsb
add
out
outsb
add
incl
imul
jg
cmc
iret
incb
std
fistpll
idiv
incl
cmc
iret
out
add
fildll
cmc
add
ljmp
cmc
incl
std
fildll
cmc
out
incb
cmc
out
incb
cmc
fistpll
idiv
out
add
out
add
jg
cmc
ljmp
neg
incl
std
fistpll
out
add
iret
out
add
add
iret
outsb
add
jg
std
fildll
neg
out
add
ljmp
std
add
ljmp
cmc
iret
outsb
add
out
add
out
add
iret
incb
out
jle
test
out
add
ljmp
imul
jle
std
fucomip
add
out
outsl
add
out
outsb
add
iret
outsb
add
out
incb
cmc
fistpll
idiv
jle
out
out
add
iret
outsl
add
iret
jle
cmc
iret
outsb
add
iret
incb
cmc
out
incl
dec
out
add
out
incl
out
out
add
out
out
add
out
add
iret
incb
std
iret
incl
std
add
iret
out
add
add
out
out
add
iret
out
add
incl
std
fildll
std
iret
incl
idiv
incb
cmc
iret
out
add
out
jg
idiv
out
add
ljmp
test
jle
imul
outsl
add
fistpll
std
iret
jle
out
out
add
iret
jg
cmc
out
outsl
add
out
out
add
jle
cmc
iret
incb
imul
out
add
out
out
add
fistpll
std
incl
std
fucomip
add
add
fucomip
add
fistpll
fildll
dec
incb
out
jle
cmc
fistpll
add
out
outsb
add
out
add
incb
cmc
fistpll
std
add
out
outsb
add
iret
jg
cmc
iret
outsb
add
iret
out
add
iret
incl
std
fucomip
add
ljmp
ljmp
cmc
add
out
jg
neg
jg
fildll
add
fucomip
add
iret
jle
cmc
add
fucomip
add
out
outsl
add
iret
outsb
add
fistpll
test
incb
cmc
ljmp
out
jle
std
ljmp
test
incb
std
add
iret
outsl
add
iret
out
add
ljmp
idiv
outsb
add
jg
cmc
out
add
out
outsb
add
fistpll
std
out
out
add
out
out
add
out
outsb
add
fistpll
std
fistpll
std
out
incb
cmc
jle
neg
jg
test
outsb
add
out
out
add
iret
out
add
out
jle
cmc
iret
out
add
out
incb
dec
jle
cmc
add
jg
std
out
jle
std
out
jg
cmc
incl
cmc
iret
jg
std
ljmp
std
out
out
add
out
add
iret
incb
test
incb
cmc
jg
cmc
fucomip
add
iret
jg
std
add
out
out
add
out
incb
std
out
incb
out
outsb
add
iret
jg
std
iret
outsb
add
fistpll
cmc
ljmp
idiv
out
add
iret
incb
out
outsb
add
iret
outsl
add
out
incb
out
incl
std
add
out
outsl
add
out
jle
incl
imul
outsl
add
out
jle
dec
outsl
add
out
out
add
iret
incl
fucomip
add
add
fucomip
add
out
out
add
fildll
idiv
incb
cmc
fistpll
std
fucomip
add
out
outsb
add
fucomip
add
incb
std
fistpll
cmc
out
incb
std
out
outsb
add
ljmp
std
ljmp
cmc
out
add
iret
jle
dec
incl
test
incb
cmc
fildll
std
out
jg
out
jg
dec
outsb
add
fucomip
add
out
add
iret
outsl
add
out
out
add
out
outsl
add
add
out
add
incb
fildll
cmc
out
out
add
out
add
iret
incb
out
incl
std
iret
jg
cmc
jg
ljmp
out
outsb
add
iret
jg
cmc
out
add
iret
jle
std
fildll
std
out
out
add
iret
incb
imul
outsb
add
iret
outsb
add
out
incb
dec
incb
std
fucomip
add
ljmp
incb
add
incb
idiv
incl
idiv
jle
out
jg
cmc
fildll
fucomip
add
iret
outsl
add
incl
dec
outsb
add
out
outsl
add
fistpll
imul
out
add
add
add
fistpll
fucomip
add
iret
incl
std
out
incl
fistpll
dec
jle
idiv
outsl
add
iret
incl
out
incb
idiv
jg
std
iret
jle
neg
outsl
add
out
outsl
add
ljmp
cmc
jg
std
jg
idiv
out
add
fistpll
cmc
out
out
add
iret
jg
out
jle
test
out
add
jle
std
ljmp
std
incl
out
add
iret
outsb
add
incl
cmc
out
incb
std
out
incb
std
iret
incb
dec
jle
idiv
jg
std
out
incl
test
out
add
out
outsb
add
fistpll
out
out
add
add
iret
jg
fucomip
add
out
add
jle
imul
jg
std
iret
incb
std
fistpll
cmc
fildll
out
incb
std
out
out
add
fildll
neg
jg
out
incb
std
out
jle
idiv
out
add
out
incb
std
iret
jg
jle
std
out
out
add
out
jg
neg
out
add
iret
out
add
ljmp
cmc
out
jg
cmc
iret
jle
test
jg
neg
outsb
add
incb
std
iret
jg
cmc
iret
incb
cmc
out
out
add
iret
incl
imul
out
add
fildll
fucomip
add
fildll
std
out
outsb
add
fildll
std
out
out
add
out
add
iret
incb
cmc
ljmp
cmc
out
incb
std
out
jg
dec
out
add
fucomip
add
iret
incb
std
out
outsl
add
jle
std
jg
idiv
jle
out
add
out
jle
std
iret
incb
std
iret
out
add
fucomip
add
out
incl
dec
out
add
iret
out
add
out
jg
cmc
iret
incl
out
incb
std
iret
outsb
add
fildll
neg
out
add
fucomip
add
out
out
add
fucomip
add
iret
out
add
out
out
add
ljmp
test
outsb
add
out
add
iret
out
add
fucomip
add
out
outsl
add
out
add
iret
incl
out
add
iret
outsl
add
ljmp
std
out
incb
out
outsb
add
jg
cmc
iret
out
add
out
jle
cmc
ljmp
std
incb
incb
cmc
out
jle
add
out
jg
imul
incb
out
out
add
out
outsb
add
incb
cmc
jg
std
out
incl
cmc
fildll
std
add
jg
cmc
out
outsb
add
fucomip
add
fildll
idiv
outsb
add
ljmp
out
out
add
add
add
fildll
neg
outsb
add
out
out
add
iret
outsb
add
fucomip
add
out
add
out
incb
idiv
outsb
add
jle
idiv
incl
test
incb
cmc
iret
out
add
jg
out
jle
dec
outsb
add
out
add
iret
outsl
add
jg
out
out
add
iret
out
add
out
outsl
add
iret
jle
std
iret
outsl
add
iret
jg
cmc
jle
std
fistpll
std
out
incb
test
jle
cmc
out
incb
idiv
incl
neg
outsb
add
ljmp
idiv
jg
neg
out
add
out
outsb
add
incl
cmc
fistpll
imul
incl
std
iret
out
add
out
out
add
out
incl
cmc
incb
cmc
iret
outsb
add
iret
outsl
add
iret
out
add
out
jg
cmc
out
outsb
add
out
out
add
iret
outsl
add
iret
out
add
iret
incl
dec
jle
cmc
fistpll
std
iret
out
add
out
out
add
out
outsl
add
out
jg
cmc
iret
outsl
add
out
incl
idiv
outsl
add
fucomip
add
incl
imul
outsl
add
out
jle
std
out
outsl
add
add
add
jg
fucomip
add
out
incl
test
jg
std
out
outsb
add
iret
outsl
add
fistpll
std
jle
idiv
outsl
add
iret
incl
idiv
outsl
add
out
jle
neg
incb
incb
std
iret
incl
idiv
jg
test
out
add
out
out
add
ljmp
std
iret
jg
out
jg
cmc
out
out
add
fucomip
add
out
out
add
out
add
add
iret
outsb
add
fucomip
add
fucomip
add
jle
idiv
out
add
out
jg
std
out
out
add
out
outsb
add
out
jg
test
outsl
add
out
add
iret
jg
std
ljmp
incl
std
fistpll
std
out
jg
cmc
out
outsl
add
iret
jg
incl
std
iret
jle
cmc
iret
out
add
out
add
iret
jle
cmc
fistpll
std
ljmp
imul
incl
out
outsl
add
out
incb
test
jle
incb
cmc
out
incl
cmc
out
outsl
add
incb
std
out
incb
cmc
ljmp
cmc
out
outsb
add
iret
incb
std
out
add
incl
cmc
iret
outsl
add
iret
outsb
add
out
incl
std
out
outsl
add
incb
dec
outsl
add
out
jg
std
out
add
incl
cmc
iret
incl
std
incl
neg
out
add
out
outsb
add
fildll
neg
outsl
add
iret
jg
cmc
iret
incb
cmc
iret
out
add
fildll
fildll
imul
jle
fucomip
add
iret
incb
cmc
jle
std
iret
jg
jg
dec
out
add
iret
outsb
add
iret
outsb
add
out
out
add
iret
outsl
add
iret
out
add
iret
jg
cmc
incl
fucomip
add
out
outsl
add
ljmp
idiv
jg
cmc
ljmp
idiv
jle
neg
outsb
add
out
add
iret
outsb
add
out
outsb
add
out
jg
cmc
iret
incl
cmc
out
jg
fistpll
std
out
outsl
add
iret
incl
std
ljmp
idiv
jg
cmc
fucomip
add
add
iret
out
add
ljmp
out
out
add
ljmp
out
incl
add
out
outsl
add
fildll
fildll
cmc
add
incb
cmc
fucomip
add
out
jle
cmc
incl
out
outsb
add
out
out
add
iret
out
add
out
outsl
add
jle
jg
out
outsb
add
out
incl
ljmp
cmc
fildll
std
iret
out
add
ljmp
out
add
out
incb
dec
jle
std
incl
cmc
jg
ljmp
out
jle
idiv
outsb
add
jg
cmc
jle
dec
outsb
add
incb
cmc
jle
std
out
out
add
out
outsb
add
jle
imul
out
add
out
incb
out
out
add
out
add
iret
incb
neg
out
add
iret
out
add
out
jle
std
jg
imul
jle
std
jg
cmc
iret
out
add
fildll
fistpll
dec
outsl
add
out
incl
cmc
ljmp
cmc
iret
jle
idiv
jle
cmc
iret
out
add
out
out
add
fildll
cmc
out
add
fistpll
cmc
out
jle
idiv
incl
cmc
iret
incl
std
out
out
add
out
out
add
fistpll
cmc
add
incl
cmc
incb
dec
jg
fildll
std
out
jg
test
incb
cmc
out
out
add
out
outsb
add
jle
out
add
iret
out
add
out
jle
cmc
incl
cmc
fucomip
add
jle
test
out
add
out
jle
dec
jle
test
out
add
iret
jle
cmc
incb
imul
out
add
add
fucomip
add
iret
jle
imul
out
add
incb
out
add
iret
out
add
out
incl
idiv
outsb
add
out
add
fildll
idiv
outsb
add
out
outsb
add
iret
jg
std
add
incb
std
fucomip
add
incb
std
iret
incl
neg
outsb
add
out
jg
std
add
add
ljmp
cmc
ljmp
idiv
outsb
add
iret
jg
std
iret
outsl
add
ljmp
cmc
out
out
add
out
out
add
out
incb
test
outsb
add
iret
out
add
out
out
add
jle
test
jle
out
out
add
jle
neg
outsb
add
out
incl
cmc
jg
std
out
incl
cmc
fistpll
out
outsb
add
fistpll
cmc
ljmp
cmc
iret
incb
cmc
iret
jg
std
out
outsl
add
incb
jle
idiv
outsl
add
out
out
add
out
out
add
out
add
fistpll
test
incl
std
out
jle
cmc
iret
out
add
out
out
add
out
add
out
jg
std
out
outsl
add
jle
test
outsb
add
iret
outsl
add
out
out
add
jg
std
jle
out
incb
fildll
cmc
fistpll
std
iret
incb
std
out
incl
std
out
out
add
add
iret
jg
cmc
out
out
add
out
out
add
out
incb
imul
incb
idiv
out
add
fucomip
add
out
add
out
add
out
outsl
add
jle
std
out
incb
cmc
out
incb
idiv
incb
cmc
ljmp
test
out
add
ljmp
std
jg
idiv
outsb
add
out
incl
cmc
fildll
test
incl
std
incl
std
iret
incl
neg
out
add
iret
incb
cmc
iret
out
add
incb
cmc
out
incb
neg
outsl
add
out
jg
std
out
add
add
out
jg
out
out
add
fildll
add
ljmp
cmc
incl
cmc
out
incl
cmc
out
outsl
add
jg
dec
incl
cmc
incb
imul
incb
std
ljmp
std
iret
incl
std
ljmp
cmc
out
out
add
out
outsl
add
out
jle
test
jle
neg
jle
cmc
fildll
cmc
add
out
outsl
add
out
outsl
add
iret
out
add
iret
incl
cmc
fucomip
add
iret
outsl
add
out
add
add
fistpll
imul
outsb
add
fildll
cmc
fildll
std
iret
jg
cmc
fistpll
std
iret
incb
std
out
out
add
out
incl
neg
out
add
out
jg
std
fildll
std
out
incl
std
out
add
out
incb
cmc
iret
jg
std
out
jg
std
out
add
ljmp
cmc
iret
jle
cmc
incb
std
ljmp
cmc
jle
ljmp
test
incb
std
iret
incl
std
fucomip
add
add
out
out
add
ljmp
imul
jle
jg
std
out
incb
out
add
fucomip
add
iret
out
add
iret
incl
cmc
fildll
neg
outsb
add
out
incb
jle
std
fucomip
add
fistpll
cmc
out
outsb
add
iret
outsb
add
iret
out
add
out
jle
cmc
out
incb
test
incl
std
out
jle
cmc
fildll
neg
jg
out
out
add
iret
out
add
out
outsb
add
out
outsl
add
out
out
add
fistpll
ljmp
add
iret
incl
cmc
fistpll
fucomip
add
iret
incb
cmc
iret
incb
cmc
iret
jg
incl
cmc
iret
outsb
add
add
iret
out
add
add
ljmp
out
add
fildll
imul
outsl
add
fucomip
add
iret
outsl
add
fildll
cmc
out
add
iret
jle
cmc
jle
std
iret
jg
std
ljmp
idiv
incb
test
out
add
jg
std
out
jg
std
iret
outsl
add
iret
jg
neg
outsl
add
iret
incl
std
out
add
out
jg
imul
out
add
fildll
dec
out
add
out
incl
std
incl
imul
outsl
add
iret
out
add
out
incl
cmc
iret
incb
out
out
add
add
iret
incl
imul
outsl
add
out
jle
dec
out
add
jle
cmc
jg
incl
cmc
fucomip
add
fildll
std
incl
std
iret
jg
fildll
std
fucomip
add
iret
jg
cmc
out
incl
std
iret
out
add
incb
std
out
incb
test
incl
cmc
fucomip
add
fistpll
std
out
add
add
iret
jg
std
jg
out
incb
imul
outsl
add
iret
outsb
add
jle
out
incl
ljmp
out
out
add
incl
neg
outsb
add
out
incl
test
jg
cmc
jle
out
out
add
out
out
add
iret
jle
test
jg
cmc
iret
out
add
iret
out
add
out
add
out
incl
cmc
iret
incb
cmc
out
jle
idiv
outsl
add
iret
outsl
add
out
out
add
out
out
add
iret
outsl
add
out
jg
neg
outsb
add
out
out
add
out
out
add
iret
incb
idiv
out
add
out
outsl
add
iret
outsb
add
fistpll
imul
out
add
iret
jg
neg
out
add
fildll
test
outsb
add
add
iret
outsb
add
jg
std
ljmp
cmc
iret
jle
std
out
out
add
out
jle
imul
incb
fistpll
cmc
out
outsb
add
out
out
add
ljmp
std
jle
cmc
iret
outsl
add
fildll
cmc
fistpll
neg
out
add
ljmp
test
out
add
out
incl
idiv
outsb
add
iret
incb
incl
cmc
add
out
outsb
add
out
add
iret
jle
cmc
incl
cmc
iret
out
add
incb
test
jg
std
out
incl
cmc
out
incb
std
out
out
add
add
out
incb
out
add
fildll
std
iret
out
add
iret
jg
idiv
out
add
iret
incl
std
out
add
out
outsb
add
fistpll
test
outsb
add
out
out
add
iret
outsb
add
incb
std
iret
outsl
add
out
incb
cmc
iret
outsl
add
iret
outsl
add
jg
std
out
jle
std
fistpll
cmc
fildll
std
out
outsb
add
fistpll
neg
outsb
add
incb
dec
out
add
out
add
out
jle
std
iret
jle
jg
neg
out
add
iret
out
add
out
outsb
add
out
incl
cmc
iret
out
add
fistpll
dec
incl
std
fistpll
cmc
fildll
cmc
out
jg
out
incb
out
jle
std
out
add
out
add
ljmp
idiv
outsb
add
fucomip
add
add
iret
jg
imul
jle
idiv
out
add
incb
add
ljmp
std
ljmp
std
iret
incb
incl
fildll
cmc
add
iret
out
add
fucomip
add
iret
incl
imul
incl
add
ljmp
test
jg
fucomip
add
add
ljmp
std
fucomip
add
fucomip
add
jg
imul
jg
cmc
fucomip
add
iret
incl
idiv
jle
cmc
iret
jg
cmc
out
out
add
out
outsb
add
fildll
std
out
out
add
fildll
add
out
outsl
add
iret
out
add
fistpll
jg
std
iret
outsl
add
incb
idiv
outsb
add
incl
add
out
jle
test
incl
std
out
add
iret
incl
fistpll
fucomip
add
jg
out
jg
incl
cmc
add
ljmp
std
iret
jle
test
incb
fistpll
std
iret
outsl
add
out
add
iret
out
add
iret
incb
test
out
add
fucomip
add
out
incl
test
out
add
iret
out
add
add
ljmp
out
jle
std
out
out
add
fildll
dec
out
add
iret
outsl
add
ljmp
test
jle
neg
incb
std
iret
incb
cmc
out
outsl
add
out
outsl
add
out
add
fistpll
neg
out
add
iret
outsb
add
fistpll
std
iret
outsl
add
iret
outsb
add
out
outsb
add
fildll
cmc
iret
out
add
iret
jg
out
outsb
add
out
incb
idiv
outsl
add
jle
imul
jg
std
out
add
out
incb
dec
incb
neg
jle
cmc
ljmp
cmc
out
add
jg
jg
out
out
add
fucomip
add
fistpll
idiv
jle
out
outsl
add
fistpll
dec
jle
test
out
add
fistpll
std
out
out
add
fucomip
add
out
incl
out
incb
neg
jle
dec
out
add
iret
out
add
out
jg
cmc
out
add
iret
out
add
out
out
add
out
out
add
jg
test
out
add
iret
jle
cmc
incl
cmc
fistpll
std
iret
out
add
iret
incl
std
out
jle
test
jg
cmc
iret
incb
idiv
incl
cmc
fucomip
add
incl
cmc
iret
jg
imul
incl
cmc
out
incb
cmc
out
jg
std
out
jg
std
ljmp
dec
outsl
add
jle
test
incl
test
out
add
iret
jle
test
outsl
add
iret
out
add
jg
test
jle
dec
incl
std
iret
jg
cmc
out
out
add
add
out
out
add
out
jg
neg
out
add
fildll
out
outsl
add
fildll
std
fildll
std
out
jle
std
out
jle
idiv
outsl
add
out
outsl
add
iret
incb
std
out
outsb
add
add
out
add
ljmp
std
out
incl
cmc
out
outsl
add
out
outsl
add
iret
incl
cmc
out
incl
ljmp
neg
jle
out
incb
std
out
out
add
fistpll
imul
outsl
add
out
add
out
incb
cmc
out
jg
cmc
iret
incb
std
iret
jg
std
out
add
fistpll
std
out
incl
std
iret
outsl
add
fucomip
add
out
incl
cmc
out
outsb
add
out
jg
std
fucomip
add
fucomip
add
iret
incl
neg
out
add
fildll
imul
outsl
add
incb
ljmp
out
add
iret
incl
test
outsb
add
jg
cmc
fildll
cmc
out
jle
cmc
fistpll
neg
outsb
add
fucomip
add
ljmp
std
out
jg
test
out
add
out
jg
test
jg
cmc
out
add
out
incb
std
iret
outsb
add
fistpll
imul
incl
std
fistpll
dec
incl
std
iret
outsb
add
out
add
ljmp
cmc
iret
out
add
incb
jg
cmc
iret
incl
std
iret
incb
std
iret
outsl
add
ljmp
cmc
out
out
add
ljmp
neg
out
add
out
out
add
out
add
out
incb
out
incb
neg
incb
cmc
ljmp
std
jle
cmc
iret
jg
test
jg
std
iret
out
add
fucomip
add
incl
cmc
fistpll
cmc
iret
incl
jle
ljmp
cmc
fistpll
std
fildll
imul
outsb
add
fistpll
neg
outsl
add
fucomip
add
fucomip
add
iret
outsb
add
fistpll
fildll
imul
jle
cmc
iret
incl
std
iret
jg
ljmp
dec
incl
imul
incl
cmc
fildll
incl
cmc
iret
jle
cmc
iret
jle
std
fucomip
add
incb
std
iret
jg
cmc
fildll
dec
out
add
ljmp
std
iret
outsb
add
jle
test
incl
fistpll
neg
outsl
add
jle
std
out
add
iret
jg
test
incl
out
outsl
add
fucomip
add
fucomip
add
iret
out
add
iret
outsl
add
fistpll
cmc
fistpll
cmc
out
jg
test
outsb
add
iret
out
add
fucomip
add
out
incb
std
iret
out
add
jle
cmc
out
incb
neg
incl
imul
outsl
add
iret
outsl
add
out
add
out
jg
cmc
incb
std
fildll
std
fistpll
neg
out
add
out
jle
idiv
jg
std
out
out
add
fistpll
std
out
incl
neg
out
add
fildll
imul
incb
std
add
fucomip
add
iret
outsl
add
iret
incb
std
jg
cmc
iret
out
add
out
outsl
add
iret
outsb
add
iret
incl
idiv
outsl
add
out
out
add
out
outsl
add
out
incb
std
add
out
jg
jg
cmc
fucomip
add
iret
jg
out
outsl
add
out
add
iret
outsb
add
add
incb
std
jg
neg
jle
out
jle
idiv
out
add
out
out
add
fistpll
cmc
out
add
iret
out
add
out
outsl
add
out
jle
out
outsb
add
incl
std
incb
std
incl
cmc
out
out
add
iret
out
add
iret
outsb
add
ljmp
incl
fildll
cmc
iret
outsb
add
out
incb
out
incl
std
out
add
iret
incb
cmc
out
add
out
out
add
iret
outsl
add
out
outsb
add
fistpll
neg
incl
cmc
out
incl
neg
out
add
out
add
out
incb
std
iret
out
add
fucomip
add
fistpll
incb
std
out
incl
add
fistpll
cmc
ljmp
idiv
outsl
add
iret
out
add
out
outsb
add
out
out
add
fildll
std
ljmp
cmc
out
jle
std
out
outsl
add
out
jg
idiv
incl
std
out
add
jg
dec
out
add
out
jle
imul
jle
dec
out
add
ljmp
jg
std
fistpll
std
out
outsl
add
iret
incl
cmc
iret
out
add
iret
outsb
add
ljmp
neg
out
add
fistpll
out
add
out
add
fistpll
std
out
out
add
out
jle
std
fistpll
fistpll
neg
outsl
add
fistpll
cmc
ljmp
fildll
std
out
add
out
outsb
add
iret
out
add
iret
out
add
iret
out
add
fildll
jle
fildll
cmc
jg
std
iret
incl
dec
push
add
add
xor
add
add
and
test
add
add
pop
push
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
cwtl
pop
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
je
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
dec
add
add
inc
add
je
push
add
add
xor
add
add
push
add
outsb
add
popa
add
xor
dec
add
add
popa
add
xor
push
add
arpl
xor
ja
inc
add
add
add
adc
add
outsb
add
add
aaa
add
je
jae
je
bound
push
add
ja
add
dec
add
add
aaa
add
inc
add
outsb
add
jae
xor
jno
dec
add
inc
add
add
add
cmp
push
add
add
add
popa
add
xor
push
add
outsl
add
add
jno
add
inc
add
outsl
add
outsl
add
add
dec
add
jae
aaa
add
add
push
add
add
add
add
add
dec
add
add
inc
add
dec
add
js
imul
add
bound
push
add
add
add
xor
inc
add
push
add
push
add
xor
add
data16
push
add
jne
add
push
add
add
dec
add
push
add
inc
add
inc
add
dec
add
add
pop
add
jns
add
add
xor
inc
add
cmp
push
imul
xor
add
jne
xor
push
jno
cmp
add
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
bound
jae
jb
insb
add
and
dec
add
jbe
jb
imul
data16
bound
add
add
dec
add
add
js
outsb
add
add
imul
add
dec
add
add
add
add
data16
inc
add
aaa
add
bound
xor
add
add
insl
add
add
add
add
sldt
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
and
xor
xor
sub
and
add
add
and
cmp
xor
add
add
dec
add
add
add
je
push
add
push
add
aaa
add
jae
dec
add
add
dec
add
add
add
jb
push
add
add
add
add
dec
add
insl
add
jno
push
push
insl
add
push
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
bound
jae
jb
insb
add
and
inc
add
bound
jo
push
add
jbe
jno
bound
push
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
sub
and
xor
xor
sub
and
add
add
and
cmp
xor
add
add
add
add
add
dec
add
insb
add
dec
add
dec
add
add
add
add
dec
add
push
add
arpl
cmp
inc
add
add
jns
add
add
add
adc
add
add
dec
add
inc
add
bound
inc
add
push
add
add
add
add
add
jo
jo
dec
add
add
inc
add
outsb
add
inc
add
insb
add
cmp
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
bound
jae
jb
insb
add
and
inc
add
bound
jo
push
add
jbe
jno
bound
push
add
add
add
adc
add
push
jo
push
add
push
add
ja
dec
add
inc
add
add
add
add
imul
add
add
jb
push
add
push
add
dec
add
add
imul
add
add
add
sldt
add
push
add
xor
dec
add
add
jae
push
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
cmp
je
inc
add
add
pop
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
bound
jae
jb
insb
add
and
dec
add
jbe
jb
imul
data16
bound
add
add
cmp
or
add
xor
add
jne
popa
add
js
outsb
add
add
dec
add
cmp
ja
pop
add
push
add
add
jbe
add
add
cmp
or
add
inc
add
pop
add
add
push
add
dec
add
jb
add
add
pop
add
add
outsl
add
arpl
dec
add
jno
dec
add
add
adc
add
jno
xor
insl
add
dec
add
add
xor
add
push
add
add
imul
dec
add
dec
add
inc
add
inc
add
add
inc
add
inc
add
xor
add
add
jbe
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
bound
jae
jb
insb
add
and
dec
add
jbe
jb
imul
data16
bound
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
and
push
add
inc
add
add
dec
add
add
popa
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
bound
jae
jb
insb
add
add
js
add
add
add
add
add
push
add
jno
popa
add
add
add
add
inc
add
bound
pop
add
dec
add
push
pop
add
xor
dec
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jno
bound
jae
jb
insb
add
add
push
add
add
jno
jns
dec
add
inc
add
inc
add
add
jne
jbe
jns
dec
add
inc
add
add
add
dec
add
add
xor
inc
add
je
push
add
js
push
add
add
insl
add
pop
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
filds
popf
filds
mov
add
test
add
mov
add
filds
filds
in
add
repnz
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
jb
jo
