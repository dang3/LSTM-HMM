add
add
add
add
in
and
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
sub
mov
mov
pusha
call
add
add
add
sub
push
pushl
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
add
add
add
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
mov
test
je
add
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
add
xlat
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
cmp
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
in
cmp
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
add
mov
and
add
add
sbb
add
cwtl
and
add
and
add
and
add
add
call
and
add
add
cmpsb
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
scas
and
add
and
add
add
lcall
add
and
add
add
loopne
add
int3
and
add
and
add
and
add
add
add
add
clc
and
add
and
add
add
push
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
add
sbb
add
cwtl
and
add
and
add
and
add
add
call
and
add
add
cmpsb
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
scas
and
add
and
add
add
lcall
add
and
add
add
loopne
add
int3
and
add
and
add
and
add
add
add
add
clc
and
add
and
add
add
push
and
add
add
add
add
gs
inc
imul
gs
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
lock
imul
jb
je
arpl
das
add
outsb
fs
je
insl
push
add
add
je
jne
jb
outsb
je
push
add
roll
dec
gs
jo
jb
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
jae
gs
popa
insb
jne
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
jbe
outsb
je
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
jb
arpl
jae
gs
imul
jb
popa
je
inc
jbe
outsb
je
add
aam
inc
gs
jb
jbe
push
jns
gs
add
popa
je
inc
jbe
outsb
je
add
adc
push
gs
insl
gs
push
add
dec
add
je
jb
arpl
jae
gs
jo
add
inc
gs
je
imul
push
add
dec
add
insb
outsb
inc
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
imul
jae
inc
outsl
jb
push
dec
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
lods
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
lcall
jle
add
jp
lods
lods
lods
add
cmpsl
cmpsl
push
mov
mov
mov
ret
ret
stos
lret
lret
int
into
rcl
in
rcl
shl
ror
iret
hlt
int
into
hlt
enter
enter
mov
in
mov
mov
lods
lods
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
not
rcl
cld
fcomp
std
xlat
fdivr
aad
rcl
sar
into
int
aad
aam
rcl
iret
inc
ret
ret
mov
mov
iret
movsl
movsb
movsb
xchg
xchg
das
and
add
push
add
add
add
add
add
add
add
add
lods
stos
stos
add
scas
sbb
mov
jnp
mov
sar
leave
lret
rcl
sar
aad
aam
xlat
xlat
xlat
call
fcomp
call
aad
dec
int
dec
int3
int
aad
dec
into
int
rol
mov
mov
scas
std
test
cmpsb
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
pop
add
or
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
rcl
call
xlat
xlat
call
call
aam
int3
int3
int
lret
dec
int3
int
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
push
push
das
prefetchw
sub
sbb
cmp
ss
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
dec
enter
iret
iret
call
aad
call
aam
iret
rcl
dec
enter
ret
mov
mov
scas
scas
scas
jmp
sahf
pushf
xchg
cwtl
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jge
jl
jg
jg
jb
jb
bound
mov
cmp
inc
inc
mov
outsb
outsl
jo
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
lret
lret
dec
mov
mov
mov
ljmp
movsl
mov
call
xchg
xchg
cwtl
xchg
cwtl
lcall
lahf
aas
aas
aas
push
push
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
outsl
add
pop
or
jp
xchg
mov
xchg
xchg
xchg
incb
jl
jl
jp
outsl
outsl
outsl
out
data16
data16
jae
jg
jle
js
js
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
xchg
incl
test
xchg
xchg
xchg
lahf
mov
mov
mov
js
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
incl
mov
std
mov
jle
jb
jno
jne
jae
jle
jg
addl
data16
cmp
ss
jge
cmp
movsb
movsb
movsl
shrb
stos
stos
sti
lods
lods
stos
stos
stos
lods
stos
stos
stos
std
mov
lcall
mov
jg
jns
js
jnp
jnp
xchg
cwtl
movsl
movsl
movsl
scas
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
push
prefetch
inc
inc
inc
dec
insb
imul
xchg
lcall
out
cltd
cltd
cltd
stc
nop
nop
xchg
std
mov
mov
mov
mov
mov
fwait
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
popf
sahf
sahf
std
movsb
mov
mov
in
xchg
nop
in
xchg
jne
cmovp
add
or
sub
sub
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
std
nop
xchg
decb
xchg
xchg
lcall
movsl
cmpsl
ljmp
cmpsl
lods
pushl
lahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
lcall
mov
decl
call
xchg
xchg
sahf
sahf
sahf
movsb
movsb
movsb
test
stos
movsb
mov
cwtl
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
popa
popa
jne
jae
mov
jg
test
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
jbe
mov
movsb
mov
mov
mov
stos
lods
lods
mov
movsl
mov
add
mov
add
pop
adc
mov
ljmp
pushf
decl
call
xchg
xchg
call
xchg
xchg
fwait
fwait
cltd
fwait
pushf
sahf
lahf
lahf
mov
std
mov
cltd
cltd
out
xchg
xchg
nop
xchg
xchg
les
cwtl
fwait
in
xchg
cwtl
out
lea
stc
xchg
xchg
std
xchg
jae
cltd
push
test
movsb
dec
jg
stos
inc
jnp
mov
jns
mov
jae
mov
outsl
ljmp
adc
stos
or
stos
or
mov
jg
mov
mov
lods
pushf
movsl
mov
movsl
add
mov
add
pusha
adc
mov
lcall
xchg
xchg
call
fwait
lcall
lahf
lahf
lcall
lcall
xchg
xchg
nop
cwtl
xchg
call
xchg
lcall
cltd
mov
cld
pushf
xchg
xchg
insb
xchg
xchg
pop
jge
xchg
dec
jns
lcall
sahf
pop
addr16
sahf
pop
jmp
adc
adc
lods
pcmpgtd
lods
adc
scas
adc
mov
imul
adc
pushl
inc
jg
rcrb
imull
movsl
movsl
sub
movsb
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
popf
call
pushf
sahf
lcall
movsl
movsb
jmp
mov
cwtl
decl
mov
mov
xchg
js
fwait
jb
lcall
call
sub
decl
pop
decl
add
pop
lcall
add
push
pushl
sbb
jo
mov
and
mov
and
aas
test
les
mov
mov
lahf
sahf
mov
add
pop
pop
adc
lods
mov
shll
lcall
movsb
jmp
test
ljmp
test
lcall
orb
mov
decl
sub
mov
popa
incl
or
push
incl
add
lea
pop
decl
add
cltd
add
sahf
add
cmpsb
or
mov
jo
mov
jbe
mov
sub
shrb
inc
sub
jg
leave
das
cmp
movl
inc
mov
mov
mov
mov
mov
add
add
add
push
push
adc
test
ljmp
popf
jmp
stos
test
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
addb
test
push
incl
add
mov
push
decl
add
xchg
add
fwait
add
lahf
add
movsb
add
lods
adc
mov
aaa
cmp
aaa
cmp
cmp
int3
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsb
movsl
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
sahf
lcall
scas
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
add
cmpsb
add
lods
add
pushl
cmp
into
inc
mov
rolb
call
dec
nop
call
dec
xchg
call
dec
xchg
fisttpl
fisttpl
fistl
call
test
mov
mov
movsb
movsl
movsb
arpl
mov
add
add
add
lcall
adc
jl
movsl
lahf
mov
jmp
test
pushl
mov
mov
mov
mov
mov
mov
scas
mov
movsb
xchg
decl
sbb
xchg
pop
pop
decl
adc
or
add
popl
push
call
add
add
cmpsb
add
test
popa
pushl
and
dec
dec
nop
call
push
cltd
fcoms
fistl
fstpl
fists
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
sahf
or
cwtl
xchg
xchg
add
adc
jns
sahf
fwait
lahf
jmp
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
nop
pop
call
and
call
sbb
xchg
add
xchg
add
cltd
add
mov
add
lods
add
mov
fs
mov
xor
fbld
jmp
movsb
jmp
fs
in
test
out
test
call
cmpsl
ljmp
dec
mov
mov
mov
sahf
sahf
add
inc
aas
adc
jp
xchg
lcall
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
lcall
push
call
add
fwait
add
mov
add
lods
add
mov
pushl
adc
rolb
jmp
jo
jmp
jno
jmp
jno
ljmp
jmp
scas
out
jne
out
jne
out
jae
jmp
mov
mov
cmpsl
test
mov
lahf
lahf
add
add
ds
outsb
js
mov
popf
pushf
fwait
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
outsb
lcall
cmp
lahf
xor
lcall
call
add
mov
add
mov
popa
pushl
add
leave
sbb
ficoml
jecxz
mov
ljmp
in
jg
in
cmpl
push
test
push
cmpb
aad
inc
mov
test
popf
sahf
sahf
daa
lahf
lahf
mov
add
add
add
popa
add
xor
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
lcall
cmp
inc
jle
mov
ss
cltd
pop
call
add
movsb
add
stos
add
scas
add
mov
gs
mov
add
call
es
data16
ljmp
out
mov
push
pop
push
nop
sar
xchg
xchg
push
xchg
pop
in
mov
inc
clc
lods
lods
stos
mov
sahf
popf
xor
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
inc
mov
jl
lcall
dec
jg
stos
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
mov
add
movl
jmp
js
in
xchg
push
lcall
hlt
cltd
lcall
stc
popf
lret
sahf
int3
cld
sahf
int3
cli
lcall
fbstp
enter
mov
mov
nop
nop
add
add
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
leave
enter
sar
mov
ljmp
push
mov
movsb
sub
cltd
push
pop
lcall
add
add
mov
arpl
mov
add
movl
jbe
fiadds
in
mov
push
movsl
int
mulb
into
cli
cmpsl
sar
cli
movsl
into
sti
cmpsl
iret
std
test
sar
std
test
push
popf
mov
int
mov
mov
lahf
lahf
mov
add
lcall
xor
xor
or
bound
pop
xlat
je
jo
mov
mov
ret
mov
mov
enter
ret
pushl
push
test
scas
push
mov
lods
dec
test
mov
add
movsl
add
lods
add
mov
mov
add
int3
add
fadds
je
loopne
jl
out
pop
cmpsb
push
popf
lret
scas
sar
cli
scas
cli
scas
aad
sti
mov
cld
mov
std
mov
std
mov
std
mov
pushl
sar
mulb
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
sbb
add
dec
dec
ss
jo
xchg
fwait
cwtl
rol
fcom
fcom
jmp
fdiv
rcl
sar
lret
int
dec
leave
lret
lret
lret
lret
lret
enter
scas
jmp
push
mov
lods
cmp
lcall
add
stos
add
mov
mov
add
rolb
jo
fadds
je
fiadds
jne
call
jb
sti
lods
sar
std
mov
std
mov
fcos
mov
std
mov
fcos
inc
std
mov
lret
call
leave
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
movb
in
out
call
test
jecxz
leave
fucom
fsubp
xlat
cli
aad
fdivr
int3
ror
mov
push
cmp
sub
mov
add
mov
popa
mov
add
leave
add
aam
jno
fldl
jne
in
ja
out
xor
sti
mov
loopne
std
loopne
inc
loope
std
inc
loopne
inc
loopne
dec
inc
loopne
std
enter
leave
loopne
sti
mov
enter
sar
mov
mov
xchg
adc
add
add
incl
std
incl
std
add
cmc
testb
out
in
pop
jmp
out
sub
out
in
dec
jmp
jmp
out
jecxz
in
fcmovu
fucomp
les
xchg
cmpsl
cmp
mov
add
test
pusha
pushl
add
les
push
int3
add
fadds
jb
filds
js
ljmp
cld
mov
jecxz
cld
lret
dec
out
std
into
in
std
int3
in
std
int3
loope
dec
loope
shl
std
shl
std
shl
call
jecxz
cld
out
mov
inc
ret
cmpsl
test
mov
xchg
xchg
add
add
add
std
add
std
add
stc
testl
lock
push
in
lock
pop
in
lock
cmp
out
in
pop
fnstsw
loopne
mov
xchg
sti
lahf
and
pop
jmp
pop
pushl
add
enter
rolb
jo
fiaddl
je
jecxz
jns
in
adc
negl
cld
mov
dec
in
std
shl
shr
call
out
shl
aad
std
xlat
call
std
fucompp
std
fldl2e
std
fld1
cld
shl
push
ret
aad
in
lret
lret
stos
test
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
std
cli
add
stc
add
cli
clc
add
div
or
aam
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
fildl
jbe
call
sbb
sti
loopne
fldl2e
fucomi
fucomi
std
fucomi
fucomi
std
fucomp
std
fucomp
fsubr
fucomip
std
fsubrp
std
fucomip
cld
shl
push
aam
out
rcl
sar
lods
stos
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
add
loop
add
mov
xchg
repnz
pop
push
ljmp
add
mov
add
into
add
aad
jb
filds
je
call
sub
shr
jmp
lock
std
fsubr
std
xlat
call
std
shl
cld
shl
sti
shl
stc
iret
stc
int3
cmc
ret
xlat
out
mov
xlat
fcom
sti
mov
mov
cltd
lcall
fwait
lcall
mov
mov
add
enter
mov
sahf
jmp
sub
lahf
add
ljmp
add
mov
add
roll
outsl
call
add
loope
jp
call
aaa
xchg
sti
xchg
sti
lret
cld
int3
loop
sti
stc
rcl
idivl
push
mov
sar
out
mov
int
jmp
rcl
call
shl
jmp
fnstsw
in
mov
mov
xchg
add
add
add
int3
lret
add
shrl
loopne
xor
pusha
ljmp
add
mov
add
int3
push
jo
rorb
ficoml
ja
loop
cmp
inc
xchg
call
scas
lret
mov
call
lods
mov
cli
fnsave
enter
leave
ljmp
rcr
loopne
shl
aad
call
out
test
in
out
popf
jmp
lret
lret
push
stos
lods
lods
adc
cmpsl
test
add
ret
mov
sahf
stos
aam
dec
jg
pushf
sbb
test
push
scas
es
mov
jns
mov
inc
xchg
ret
push
mov
leave
fs
test
mov
out
mov
mov
leave
lret
int
ror
int3
mov
iret
shlb
rcl
jg
fcmovnu
jb
loopne
gs
in
call
out
in
xor
div
cmc
and
icebp
repnz
fstp
or
mov
int
mov
add
mov
rol
mov
mov
les
imul
mov
pushf
in
mov
sarb
mov
ret
cmpsl
mov
enter
int
iret
int3
into
addr16
rcll
rcl
dec
aam
xlat
inc
rcl
aam
aam
fsubs
fcompl
fcoml
fucom
loope
loopne
in
call
lock
add
cld
testb
std
add
incb
std
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
les
mov
daa
lret
ror
and
aam
sbb
rclb
iret
rorb
aam
aam
rcr
fadds
fcmovnu
add
add
in
add
in
jmp
leave
xlat
aam
std
incl
mov
mov
add
rol
vmovaps
mov
mov
push
rol
or
enter
mov
add
roll
rcr
aad
aam
add
aad
xlat
add
fabs
add
aad
add
loop
add
fucom
add
out
add
lock
incb
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
mov
mov
test
stos
dec
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
scas
scas
mov
mov
mov
sarb
aam
iret
shr
aam
aam
aam
aam
ror
iret
cli
int
int3
stc
int3
lret
int3
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
sar
aad
aad
xlat
xlat
dec
rcl
dec
into
int
lret
mov
mov
lods
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jae
jne
data16
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
rcl
sar
lret
inc
sarb
ljmp
sahf
sahf
xchg
xchg
xchg
jmp
outsl
outsl
xchg
pop
pop
push
dec
add
add
add
add
add
add
jg
jg
jl
jnp
test
jns
push
imul
push
push
stos
push
imul
cmp
cmp
jno
jno
scas
scas
mov
mov
mov
mov
mov
sar
mov
mov
mov
ljmp
fwait
fwait
call
xchg
xchg
fwait
fwait
cltd
out
test
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
pushf
xchg
lcall
addb
jl
jge
js
jp
jns
jns
jns
jp
je
je
push
push
push
cmp
aaa
pushf
pushf
popf
mov
lods
lods
rep
lods
scas
sti
lods
scas
scas
std
cmpsl
test
std
pushf
pushf
sahf
call
xchg
call
mov
lods
jmp
lods
lods
leave
movsl
cmpsb
movsb
cltd
jae
je
adc
adc
add
add
add
add
insl
outsb
insl
pop
lods
movsl
stos
loop
lcall
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
jo
mov
cwtl
cwtl
cwtl
repnz
xchg
xchg
std
mov
call
popf
sahf
ljmp
scas
std
mov
scas
mov
xlat
movsl
movsb
cmpsl
pop
jg
jg
popa
pop
pop
or
lods
mov
cmpsb
mov
mov
lea
call
sahf
sahf
sti
sahf
mov
lcall
push
push
jo
pop
push
outsl
insb
insl
outsb
xchg
subb
nop
xchg
lock
mov
lcall
fwait
pushl
jo
mov
push
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
cwtl
lcall
cwtl
cltd
cltd
pushf
pushf
pushf
sahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
mov
nop
orb
xchg
insb
xchg
xchg
pop
jg
sahf
dec
jnp
movsb
inc
jp
scas
ss
mov
jae
mov
outsl
ljmp
sbb
mov
mov
scas
mov
movsb
movsl
movsl
push
pusha
pop
popa
or
mov
lcall
popf
lahf
jmp
lahf
mov
decl
orl
xchg
jb
cld
xchg
pusha
test
xchg
dec
jp
xchg
cmp
xchg
daa
call
lcall
punpcklwd
test
sbb
sbb
pushl
push
jae
mov
pop
nop
mov
lods
lods
xchg
popf
sahf
lahf
adc
add
add
pop
popa
popa
or
lods
mov
stos
mov
mov
ljmp
cmpsl
test
lcall
decl
sub
push
pop
incl
or
mov
decl
add
fwait
add
cmpsl
or
je
mov
sub
jle
das
jg
lret
dec
pop
xchg
inc
stos
mov
mov
mov
test
add
add
add
add
popa
or
movsl
test
test
movsl
jmp
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
xchg
decl
add
xchg
add
lahf
add
movsl
add
mov
insb
inc
ss
lret
inc
mov
into
inc
mov
roll
call
inc
xchg
call
popa
lahf
inc
cmpsb
mov
mov
mov
incl
add
add
popa
pop
pusha
or
sahf
mov
ljmp
mov
pushl
mov
stos
lcall
push
popa
call
adc
pop
decl
add
mov
add
lods
add
mov
dec
xchg
fcoms
fcompl
ficomps
jmp
pop
mov
fildll
dec
test
cld
mov
mov
cmpsl
stos
movsl
xor
jg
add
add
dec
dec
dec
pop
jle
jl
popf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
call
add
lahf
add
add
scas
add
or
lret
xor
jmp
outsb
test
jmp
jno
in
jae
call
test
std
mov
test
addb
add
dec
dec
dec
pop
outsb
insl
push
mov
cwtl
pushl
mov
mov
mov
je
lcall
cmp
sahf
sub
call
add
mov
add
mov
fs
or
inc
xchg
jmp
js
jmp
test
push
xchg
out
mov
mov
test
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
xchg
test
jg
mov
push
pop
jmp
add
mov
arpl
mov
push
jne
loopne
mov
push
xchg
cwtl
push
cltd
clc
cltd
leave
sti
fwait
leave
push
xchg
lods
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
ret
ret
pushl
push
xchg
stos
dec
cmp
and
sahf
add
ljmp
add
mov
add
fisubl
cmp
mulb
cli
test
cli
stos
sar
cld
lods
sar
std
lods
sar
cli
test
call
rol
stos
test
popf
or
add
add
push
dec
dec
aaa
jb
je
test
int3
into
out
int
cmc
lret
sti
leave
lret
lret
leave
mov
mov
stos
pusha
mov
stos
inc
jle
mov
add
mov
gs
add
iret
add
fiaddl
jne
call
xchg
sti
mov
mov
cld
mov
std
mov
xlat
sti
mov
enter
repz
scas
lods
mov
add
add
add
add
or
rcl
dec
loop
loopne
fistps
fcmovu
fsubr
shll
test
jb
movsl
pop
pusha
ljmp
add
enter
xlat
add
in
jl
icebp
push
mov
sti
loopne
std
std
loopne
inc
fdivrp
std
enter
leave
loopne
sti
out
mov
lret
divb
sahf
pushf
sbb
add
add
std
incl
std
add
ljmp
jmp
in
xor
loop
loop
mov
mov
mov
add
mov
inc
add
iret
add
faddl
jne
ljmp
sti
ret
sti
shl
std
shl
call
in
shl
std
aad
fsubr
aam
push
enter
lret
sar
mov
mov
add
std
std
incl
incl
std
cld
pop
aam
aam
mov
pop
xchg
sahf
or
pop
pushl
add
rolb
jno
filds
ja
in
and
std
shl
std
fsubr
fsubr
cld
fsubr
cld
fldl2t
std
xlat
call
sti
aad
push
fdivr
sti
mov
sahf
sahf
das
add
add
int3
into
into
or
fs
mov
add
mov
add
roll
jae
loopne
js
out
das
xchg
stc
fwait
leave
sti
lret
loope
stc
leave
test
xlat
repnz
lock
sar
in
out
vpsadbw
jecxz
fsubr
mov
stos
das
incl
aam
aad
mov
jb
or
mov
insb
inc
sbb
lret
and
aad
test
ficoms
clc
in
mov
out
jecxz
lret
mov
loope
mov
lret
leave
ffreep
sarl
in
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
mov
ljmp
fidivrl
andb
into
mov
ret
nop
rol
jge
int3
insl
ror
iret
pop
ror
iret
dec
fnstcw
fnstsw
loopne
in
frstor
jecxz
repnz
jmp
or
incb
std
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
and
aam
pop
rol
adc
rcl
or
loope
or
int3
int
lods
stos
stos
add
incb
incb
fwait
fwait
cltd
add
or
int
int
lods
stos
stos
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
lcall
rol
mov
xchg
mov
enter
ret
mov
mov
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aad
aad
rcl
sar
int
int
mov
mov
sarl
gs
pop
pop
add
add
add
add
add
add
add
add
jb
jb
addr16
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
rcl
dec
int
inc
mov
mov
lods
lods
jmp
mov
push
add
add
add
add
jae
jae
xchg
adc
jo
ret
arpl
outsb
outsb
outsl
jb
popa
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
xchg
lds
jb
and
add
pop
add
add
je
je
popf
xchg
pushf
mov
xchg
xchg
mov
test
addl
push
dec
dec
inc
mov
fwait
into
mov
mov
xchg
decb
lcall
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsb
test
stos
mov
mov
mov
xchg
cld
popf
sahf
sahf
cmc
cltd
cltd
lcall
push
push
imul
jg
mov
xchg
notl
mov
pushl
xchg
mov
stos
mov
stos
scas
lods
push
stos
lods
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
fwait
lcall
lcall
xchg
mov
loope
jne
out
xchg
fs
push
jnp
pushf
inc
jbe
cmpsl
cmp
sub
pushl
sbb
cmp
sahf
lods
lock
mov
imul
int
add
add
test
pop
lods
cmpsb
lods
test
popf
sahf
sahf
jmp
mov
xchg
decl
push
ja
nop
inc
jae
lea
imul
push
popa
call
or
mov
sbb
jae
mov
daa
jns
lds
test
rcrb
subl
je
push
movsb
pushf
lahf
test
test
cmpsb
ljmp
mov
jmp
sub
mov
pop
incl
add
decl
pop
jmp
adc
ret
dec
inc
mov
rolb
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
movsb
movsb
mov
add
push
xchg
xchg
xchg
test
lahf
movsb
cld
lods
scas
lods
pushl
mov
movsl
call
pop
decl
push
push
call
add
lods
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
data16
call
pushf
mov
mov
mov
test
cmpsl
pop
add
add
popa
bound
mov
pushf
cld
mov
mov
mov
mov
mov
pushf
dec
jl
pushf
xor
cltd
and
xchg
pop
pop
jmp
add
mov
xor
jmp
jns
in
jl
out
jge
out
jg
fistpl
mov
movsb
mov
add
dec
dec
dec
adc
addr16
mov
mov
mov
mov
ret
sar
mov
jmp
inc
jle
lahf
and
pushf
add
cmpsl
add
mov
fs
or
fmull
out
mov
notb
enter
enter
mov
movsl
sub
aas
inc
aas
adc
push
xchg
xchg
mov
inc
ret
inc
mov
xchg
ljmp
pop
imul
mov
fs
add
vmwrite
ljmp
stc
stos
sar
cld
scas
sar
std
scas
sar
lods
sar
ljmp
fldenv
incl
xor
xor
inc
scas
mov
mov
aam
mov
aam
aam
out
lret
lret
mov
mov
jmp
add
add
aam
jae
call
nop
mov
cld
ret
cld
rcr
cld
rcr
out
mov
ret
in
test
dec
cmpb
add
add
stos
stos
lods
add
jmp
or
out
out
loop
in
fisubl
movsb
and
popa
mov
add
faddl
ja
out
cmp
dec
out
call
in
shl
aad
aad
push
fdivr
aam
into
in
lods
lods
scas
popa
addl
add
std
incb
std
push
lret
lret
shrl
mov
add
mov
add
loop
js
hlt
push
cmpsl
dec
loop
std
jmp
shl
std
aam
stc
aam
push
leave
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
les
mov
push
gs
mov
or
cmp
lock
shl
ljmp
jmp
out
aad
call
fcmovnu
scas
lcall
add
popf
stos
xchg
and
ret
int3
lret
mov
fdivrs
adc
int
fmul
iret
pop
fst
xlat
dec
in
loope
out
out
out
out
in
sbb
sarb
cmp
mov
scas
push
mov
mov
les
ret
and
ret
int3
sbb
fstp
bswap
int3
int3
or
push
std
add
addb
incb
stos
incb
sarl
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
or
idiv
inc
jmp
add
dec
insb
cmp
add
mov
fists
mov
jmp
inc
fdivrs
jmp
cwtl
xlat
mov
out
fnstenv
jno
js
and
loop
sbb
xchg
fcomip
arpl
mov
je
shlb
push
inc
int
or
add
popa
in
mov
pop
push
jnp
ficomps
imul
cmp
push
sub
mov
cmp
inc
scas
lret
xchg
int
int
jno
nop
pop
push
fistpl
inc
xchg
mov
mov
adc
outsb
xchg
cmp
push
int
imul
add
outsb
xor
sbb
loop
or
mov
xor
pop
in
mov
aad
filds
cmp
or
cs
dec
xor
mov
sahf
cltd
inc
adc
mov
mov
cmp
jge
lret
jecxz
sbb
mov
mov
add
push
jmp
shll
les
lret
arpl
in
divb
or
outsl
hlt
fwait
jb
aas
pusha
lret
xlat
jae
addr16
push
pusha
in
mov
test
jge
jb
jb
pop
mov
mov
stos
mov
xchg
mov
push
jle
mov
psrlq
lods
into
xchg
mov
jle
movsl
popa
daa
xor
dec
scas
xchg
cmp
arpl
out
sub
mov
pop
aas
mov
jb
sahf
inc
sub
shl
cmp
sahf
dec
in
popf
inc
ljmp
or
xlat
cmp
inc
mov
dec
sub
mov
mov
aad
in
ffreep
scas
icebp
jae
cmc
xlat
dec
push
jno
insl
scas
aad
dec
sub
es
mov
stos
daa
test
or
adc
hlt
pop
or
inc
loop
daa
cmpsb
or
rclb
movd
mov
and
loope
jno
rcll
mov
int3
xchg
stc
cmpsw
sbb
jl
mov
mov
sbb
cmp
popf
aas
or
rcr
push
push
lods
add
mov
stos
push
arpl
mov
inc
mov
pop
sub
sub
out
xor
mov
mov
push
mov
test
or
dec
icebp
test
pop
call
bnd
xlat
aas
inc
adc
xchg
add
test
inc
popa
cmp
mov
in
pop
fnstcw
push
nop
inc
cmp
leave
pop
subl
loop
cmc
inc
xchg
out
test
jmp
pop
shll
aam
ficoml
js
add
pop
stc
es
adc
pop
inc
mov
dec
gs
lds
jmp
inc
push
cmp
lret
in
gs
fidivrs
subb
adc
push
dec
or
stos
pop
or
xlat
das
xchg
jmp
push
or
xchg
adcb
push
pop
ret
xchg
push
sub
sti
push
pop
xor
mov
push
xor
xor
lahf
pop
imulb
daa
cmpsb
cmp
sbb
loope
test
mov
fldt
mov
cmp
mov
push
jns
push
mov
out
lea
shlb
jae
repz
out
cmp
lahf
sti
adcb
jb
subl
xchg
dec
sub
adc
push
movb
repz
add
test
jns
test
adc
loope
mov
mov
sub
stc
mov
sub
or
sub
out
jg
or
add
push
imul
outsb
in
mull
shll
mov
cmpsl
push
lea
cmpsl
popa
cmc
es
not
or
ss
pop
pusha
ffree
test
jmp
lea
xchg
and
mov
cwtl
int
mov
xchg
push
sub
pop
jns
lods
test
dec
xor
push
sbb
xor
inc
mov
movsl
imul
push
mov
fwait
nop
cmp
loop
lahf
dec
push
call
inc
inc
in
mov
test
sbb
je,pn
mov
inc
repz
les
push
pop
push
sub
outsl
cmc
mov
sub
rolb
add
ja
negb
adc
mov
mov
add
inc
mov
mov
mov
arpl
lea
push
lret
sbb
mov
pop
pop
lds
ficoms
imul
inc
jp
sub
sti
dec
aas
aaa
sbb
outsl
ljmp
push
inc
sub
int3
xor
insb
inc
push
jbe
cld
jg
xor
dec
sub
popa
cmpsb
ss
jne
dec
imul
icebp
sbb
cli
mov
loope
inc
das
mov
lds
fistpl
test
adc
pop
pop
rolb
lret
mov
ret
insl
sub
idivb
inc
in
sub
pop
dec
and
pop
aaa
cmp
into
sete
aas
aad
stos
dec
xchg
lods
push
ret
je
data16
pusha
sysret
or
cmp
jle
push
hlt
add
out
fstpl
mov
cltd
lods
in
sysenter
sub
rclb
ds
dec
sub
xor
add
pop
stos
test
rorl
add
push
lods
sbb
xor
insb
js
loope
push
call
sti
jecxz
or
xor
lahf
mov
ret
mov
repz
adc
xlat
jae
cmp
xchg
imul
mov
fnstsw
mov
adc
push
push
movsb
xchg
push
mov
mov
pop
mov
lds
les
iret
jg
ficoms
test
pop
int3
out
je
je
daa
jmp
daa
dec
aad
mov
xor
inc
inc
xor
scas
pop
push
or
mov
pop
add
mov
pop
std
xchg
xorl
xchg
mov
rcll
jmp
loope
imulb
push
cmc
add
mov
and
es
sbb
cmp
adc
push
out
jo
inc
hlt
andb
bound
or
data16
fsubs
dec
fbstp
xchg
jg
xchg
mov
push
je
jo
xlat
jb
xchg
fisubrl
cmpsb
adc
sub
int3
cld
jecxz
daa
aaa
cmp
dec
and
mov
dec
aaa
stc
sahf
cld
xor
aaa
pop
inc
ljmp
xchg
inc
cmpsb
inc
jl
testl
xor
out
mov
data16
mov
adc
xchg
push
movsb
sbb
pop
mov
addr16
gs
loope
out
std
push
lret
mov
rcl
xor
nop
in
and
add
cmpsl
repnz
and
shlb
shrb
pop
xchg
pop
repnz
push
movsl
xor
or
inc
adc
fs
insb
cmpsb
jo
int
imul
cmp
mov
lea
ss
push
scas
shl
adc
inc
aaa
daa
pop
scas
je
aaa
fists
push
mov
xor
mov
fs
das
data16
sbb
or
xchg
jae
insb
mov
ret
inc
shl
cmp
cmpsl
femms
imul
mov
addl
push
ds
sbb
cmp
es
jb
mov
mul
adc
lds
xor
addr16
jecxz
mov
mov
fisubrl
push
jns
fwait
test
lret
sti
mov
lcall
and
ret
xlat
mov
jp
adc
ss
das
push
mov
xor
movsl
mov
mov
lods
fnsave
cmp
xchg
add
xchg
xor
sbb
cmp
xchg
sub
dec
mov
inc
sub
int
jge
hlt
mov
lahf
jmp
xchg
inc
adc
xor
fs
sub
push
mov
dec
jecxz
fcoms
sub
push
pop
cmp
pop
pop
mov
ss
inc
fisubrl
pop
imul
jl
xchg
fstpl
push
cmpsl
movsb
xor
arpl
cs
jbe
mov
dec
in
xlat
xchg
sub
push
cs
pop
pop
cmp
mov
les
adc
test
loop
out
arpl
mov
and
sbb
jae
add
adc
mov
out
sbb
jbe
imul
repz
jp
pop
loopne
dec
adc
das
mov
iret
data16
test
fimull
or
xlat
fwait
push
std
push
pop
out
dec
add
add
mov
out
xlat
push
jecxz
ss
sub
xchg
insl
pop
test
mov
push
sbb
sarl
idivb
dec
dec
icebp
fdiv
jns
mov
repnz
mov
xor
cmpsl
ds
lds
cmpsl
lds
dec
jecxz
cli
jecxz
sub
push
scas
dec
add
add
cmpsb
cmp
and
pop
test
lret
cld
xchg
jns
enter
dec
jmp
pop
mov
cmp
dec
outsb
ret
repz
shrl
adc
repz
loop
mov
jp
cltd
xor
cwtl
das
in
xchg
dec
aas
or
insb
xchg
sub
push
add
in
pushf
xor
fidivrs
rorl
stos
and
mov
incb
das
cwtl
or
sbb
movsl
cmp
lahf
dec
jecxz
ss
cmpsl
fstpt
adc
mov
pop
mov
jne
into
out
repnz
lock
es
cmp
mov
cmp
je
push
mov
xchg
into
or
jl
jl
fwait
daa
xchg
popa
mov
movsb
cmp
cltd
xor
ss
bound
push
cmp
mov
in
gs
stos
inc
gs
jbe
inc
adcb
sbb
movsl
mov
incb
sub
inc
cmpb
lret
dec
iret
jae
rcll
xchg
leave
pusha
aam
imul
out
xchg
sub
pushf
xor
lds
leave
pusha
or
sti
xchg
jl
sahf
xor
pop
sarb
cwtl
rcll
add
in
cmp
and
mov
ljmp
cmp
pop
gs
mov
hlt
mov
or
jle
jg
mov
sbb
fs
test
enter
jl
fwait
xor
sub
sub
dec
in
pmullw
mov
outsl
mov
pop
icebp
bound
adcb
enter
cmp
and
int3
cmp
push
pop
in
mov
filds
popf
jl
and
jno
sub
add
adc
xchg
and
arpl
sbb
pop
mov
mov
dec
pop
loope
dec
push
cmpsl
mov
call
xor
enter
sub
addl
pop
push
bound
rcrb
mov
aas
lret
mov
iret
std
jl
sub
sub
sbb
jne
insb
add
test
or
pop
push
sub
lcall
pop
sub
dec
inc
fnstcw
dec
js
mov
test
call
fs
cmp
clc
pop
mov
sbb
and
stos
jmp
sbb
ds
movsl
popa
clc
out
arpl
sarl
push
aam
test
jbe
nop
fbstp
or
jnp
leave
pusha
repz
pop
push
scas
stos
inc
in
das
int3
arpl
ret
mov
fbstp
scas
inc
enter
mov
out
cmpsb
and
shlb
jge
xor
cmova
addb
adcb
sbbb
xor
dec
cmpsb
xor
mov
jl
xor
adc
lahf
call
scas
lock
and
movsb
shrl
adc
jno
aaa
cmp
test
jl
jbe
sti
xchg
mov
fmull
cmpsb
int
cwtl
das
js
push
in
fildll
and
jno
mov
mov
ja
dec
and
push
test
test
dec
dec
sbbl
sbbl
and
pop
push
outsb
js
pusha
hlt
sahf
xor
hlt
shrb
xchg
pop
negb
jge
jae
cmp
stos
dec
lret
int3
hlt
mov
xchg
sar
shrb
xrelease
jecxz
pop
sahf
ja
sahf
xor
or
popf
sub
sbb
sbb
lods
push
mov
inc
pop
xchg
sub
testb
ja
pusha
imul
rcrl
mov
jb
and
push
xchg
sub
sub
das
pop
push
cmpsl
ds
repnz
int
jecxz
jl
imul
aad
mov
add
stos
xchg
and
xchg
ss
in
mov
aaa
es
shrl
inc
cltd
xor
fcoml
or
mov
aam
ljmp
andb
inc
std
xchg
jge
mov
addr16
mov
pop
sbb
pop
cmc
test
lret
add
push
fisubrs
shrb
ja
jecxz
xlat
outsb
lahf
add
mov
push
xchg
dec
loope
repnz
es
sbbl
cmpsl
scas
inc
rcll
fldl
adc
push
inc
add
addr16
pusha
pop
mov
xchg
mov
jmp
mov
lret
inc
xor
js
push
call
xchg
les
xor
insb
jns
xchg
imul
popl
xor
std
out
push
adc
scas
inc
xchg
mov
mov
lret
and
push
pop
xchg
pop
sbb
imul
pop
or
and
pop
es
test
pushf
es
arpl
sti
mov
adc
test
test
dec
popa
clc
jp
adc
pusha
pop
loopne
cmp
fisubl
unpckhps
xchg
xchg
xchg
sbb
cli
xchg
lods
push
call
mov
pusha
loopne
inc
rolb
cmp
rolb
push
mov
dec
aam
loop
or
xchg
sub
sbbb
clc
xor
sbb
inc
negb
mov
data16
xchg
pop
movsb
push
int
pop
push
movsl
je
inc
adc
add
mov
inc
and
xchg
mov
jge
or
inc
fcomps
gs
lods
push
out
lock
or
or
add
jl
pop
scas
xchg
sbb
lds
mov
popa
roll
and
ret
ret
lret
pop
pop
testb
test
dec
sahf
xor
jo
int
pop
xchg
mov
ss
ret
adc
sbb
lcall
cmp
pop
movsb
cmp
out
xchg
and
div
and
mov
adc
push
lods
jae
fnstcw
xchg
stos
shrl
jp
jecxz
adc
pop
push
negl
inc
and
xchg
sub
dec
loope
sahf
cmp
setb
mov
inc
frstor
ret
mov
sbb
outsl
aad
int
or
sahf
xor
fnstenv
nop
cli
cli
xchg
in
xchg
out
xchg
or
adc
adc
rorb
sub
push
cmp
mov
pop
daa
frndint
xchg
lret
iret
cltd
xor
in
insb
add
lahf
out
xchg
call
lock
or
xorb
xchg
push
movsl
adc
test
xor
cmp
lret
aas
mov
push
aas
dec
out
in
icebp
mov
xchg
insl
push
int3
addr16
scas
push
push
out
test
jne
adc
sti
xchg
test
sahf
xor
jmp
pop
daa
add
or
jb
pop
mov
dec
pop
and
jg
adc
jae
cmp
pop
in
jb
jno
jo
add
insl
jo
cmp
dec
push
stos
sbb
ja
stos
addr16
xor
pop
out
xchg
pushf
je
rcll
dec
adc
xor
push
push
out
inc
mov
sahf
xchg
ja
mov
adc
movsl
cmp
jl
push
jno
jne
gs
test
jb
mov
insb
adc
xchg
fdivl
popa
inc
jp
cmp
test
lds
outsl
sub
out
sbb
js
into
gs
lahf
movsl
xor
push
lds
in
cmpsb
push
add
addl
lahf
mov
push
add
int
loopne
mov
pushf
push
add
int
stos
stos
lahf
fistpl
push
xor
dec
test
mull
cmp
xchg
inc
scas
mov
nop
insb
les
pop
icebp
loopne
cmp
xchg
mov
sarl
out
testb
push
push
dec
push
adcl
mov
std
pop
xchg
pop
add
aad
stos
daa
lds
mov
mov
add
outsl
jae
popf
cmp
flds
add
push
inc
push
ret
mov
in
xor
inc
cmp
jno
mov
icebp
ret
mov
jo
in
movlhps
testl
movsl
jo
pop
mov
push
out
ret
loop
and
add
mov
add
sbb
and
sub
adc
inc
pushf
mov
stos
pusha
xchg
call
sbb
adc
cs
pusha
cmpsb
sub
xor
pop
sarl
lret
bound
inc
xlat
dec
jp
cmp
outsl
pop
cmc
mov
sarl
loop
push
adc
xor
add
cltd
lds
mov
mov
cmp
lea
imul
xchg
mov
xor
jecxz
cwtl
das
inc
add
call
xchg
push
outsl
push
mov
and
pop
repz
cld
stos
inc
cs
adc
subl
dec
in
testb
test
mov
mov
jns
popf
xchg
mov
sub
test
ja
cli
mov
mov
lret
pop
loope
jl
fstpt
sub
outsb
sti
mov
dec
movsb
inc
mov
test
lods
jmp
push
popf
stc
dec
mov
push
jnp
lea
pop
movsl
xor
ret
jge
outsb
xchg
and
rolb
push
inc
xor
int
inc
push
inc
push
dec
dec
xor
inc
cmp
mov
adc
js
push
aas
dec
arpl
xchg
xchg
jo
hlt
mov
ret
hlt
or
cmp
pop
icebp
mov
dec
lcall
insl
in
call
mov
mov
test
stos
xchg
movsl
shrb
mov
enter
xchg
pop
push
out
dec
push
movsl
jl
outsb
add
into
lods
mov
fsubrp
dec
loope
add
pushl
leave
pusha
test
out
fsub
movsb
cmp
cli
add
push
div
icebp
movsl
cmp
xor
pop
out
js
sub
pop
cmp
xchg
imul
mov
mov
adc
es
data16
jnp
xchg
jecxz
fsubrs
in
sub
cltd
pop
ja
subb
leave
pusha
cld
shl
js
push
int
push
and
push
jae
add
movb
leave
ja
sti
sbb
inc
aam
lods
and
andl
xor
lea
mov
outsb
in
gs
loop
aam
pop
ss
lahf
pusha
inc
loop
adc
mov
and
mov
mov
fcomip
or
test
shlb
mov
sub
inc
in
inc
adc
nop
je
ss
sub
cmp
stos
dec
dec
cmpsl
sub
pop
or
pop
arpl
dec
pmuludq
cltd
and
rolb
bound
ljmp
insb
pushf
int3
or
mov
lods
aam
loope
jae
fcoml
cld
add
pop
cmp
jge
popf
push
adc
lods
mov
xor
mov
inc
lock
loopne
cmpsb
pop
lds
adc
xor
pop
daa
adcb
clc
sbb
clc
push
dec
inc
add
cmpsb
roll
icebp
push
sbb
xor
cmc
xor
loope
notl
mov
xchg
push
sbb
cmpsb
in
jnp
fs
jns
xchg
daa
iret
cltd
adcl
and
popf
xor
je
mov
jnp
xchg
fnstenv
in
add
sbb
shld
fxch
mov
std
sbb
dec
in
cmp
std
push
mov
cmp
out
pop
pop
inc
pop
das
ss
addr16
loopne
addb
pushf
fcom
and
sub
aas
aad
dec
inc
fnstsw
pop
repnz
lret
sti
in
adcb
sbb
mov
jno
movsl
cmp
xchg
mov
push
cmc
in
pop
xlat
inc
fcoms
dec
loope
pop
shlb
imul
jl
add
sbb
pop
mov
xchg
ljmp
fldcw
out
and
mov
std
xchg
xchg
bound
mov
shll
stc
aam
lret
mov
aam
cmpl
xor
jne
stc
cmpsb
data16
mov
bound
loop
and
stos
in
cmpl
cmp
test
and
iret
xchg
sbb
test
dec
shlb
push
push
in
inc
push
jge
mov
rclb
mov
in
add
add
inc
fcom
inc
cmp
xor
lds
fsubrp
adc
ja
sbb
inc
fsubrs
add
shll
jl
lret
lret
lcall
stc
cmpb
or
mull
sahf
jb
loopne
dec
xchg
and
jae
or
pop
pushf
fidivl
jg
in
dec
fimuls
cmpsb
pop
xlat
fists
dec
insb
cltd
inc
mov
jbe
pop
nop
mov
cs
stc
jo
xchg
jle
ss
cwtl
orb
push
pop
jle
stos
pop
sahf
mov
fs
pushf
push
insl
add
mov
call
call
xchg
pop
adc
in
adc
jl
mov
test
orb
pop
addr16
jae
jmp
les
mov
mov
jge
push
scas
and
jmp
mov
pop
adc
pop
leave
in
pop
sbb
cmpsb
inc
and
xchg
push
movsl
lret
aaa
inc
fildl
leave
pusha
pushf
test
cltd
mov
out
sbb
xchg
sub
xchg
sub
iret
data16
repz
mov
popa
adc
repnz
adc
inc
fisubs
ficoml
dec
fistpll
cmpsb
int
sbb
mov
mov
xchg
sub
and
lods
xchg
sbb
jno
hlt
mov
js
ret
cltd
xor
adc
jmp
jle
xchg
push
jmp
mov
imul
sbb
ret
pop
test
fs
aaa
or
mov
lcall
dec
arpl
mov
cmp
mov
les
shlb
and
ljmp
sub
xchg
shr
loopne
pop
out
adc
data16
xchg
xor
jb
sbb
cs
dec
jecxz
dec
and
cli
mov
std
xchg
movsb
repnz
mov
sub
sti
xchg
int
pop
scas
inc
out
test
adc
test
xor
stos
inc
push
add
cltd
ret
imul
sbb
xorl
or
imul
pop
divb
xchg
dec
pop
ret
pop
dec
imul
imul
sub
mov
jns
inc
fidivrl
mov
clc
lret
adc
hlt
fwait
pop
or
xchg
sub
mov
push
es
or
cld
xchg
int
xor
nop
jae
test
inc
xchg
sub
sti
xchg
call
cltd
mov
mov
jb
xchg
insl
mov
cli
mov
rcll
loop
mov
push
aas
in
jle
jmp
sbb
loope
movsb
jns
movsl
das
std
icebp
ss
jl
mov
cltd
ja
mov
pop
adc
pop
outsb
xchg
cli
sub
mov
dec
dec
jnp
jmp
dec
mov
jle
push
jmp
xlat
ret
sar
jne
loope
mov
push
insl
mov
push
pop
ret
ljmp
or
jp
stos
inc
mov
lret
pushf
fbstp
cmp
and
cmp
xchg
into
sbb
call
rcrl
sub
insl
pop
jae
in
or
leave
jnp
add
iret
lcall
inc
dec
loope
ds
mov
add
stc
jbe
data16
jp
dec
mov
xchg
xor
jp
dec
mov
pop
repnz
leave
int
jae
mov
mov
inc
sbb
repz
lock
adc
and
pusha
or
les
adc
xchg
sbb
es
or
cltd
xor
testl
adc
bound
xchg
in
add
lods
clc
loope
dec
addr16
ret
push
xor
and
add
shll
leave
adcb
adc
xchg
push
sti
test
sbb
ret
mov
fs
xor
mov
out
inc
jo
into
call
xor
fucomip
add
andb
repz
aaa
into
adc
jp
es
adc
lock
mov
add
add
and
popa
cltd
sahf
sub
jo
cmpsl
cmpsb
sti
mov
sub
cmpb
push
cmp
imul
inc
jg
dec
or
call
xchg
sahf
testl
sub
sub
adc
int
xor
pushf
mov
outsb
or
loop
stos
adc
mov
test
adc
shll
sub
mov
mov
mov
cltd
aam
movsb
cmp
and
addb
adc
xor
and
nop
sub
lret
or
pop
sti
xlat
movsb
push
mov
sub
and
lret
xchg
arpl
sahf
or
fimuls
hlt
ljmp
mov
dec
ficoms
cs
xor
insb
xchg
stos
inc
lret
xchg
xor
ret
fcoml
ss
fidivs
pop
xchg
inc
jcxz
xchg
jns
push
jne
inc
adc
call
dec
mov
ljmp
mov
push
cmp
popa
push
sbb
das
jp
xchg
jp
lds
dec
into
push
jg
mov
or
gs
inc
fsubs
sti
loope
xchg
mov
cwtl
add
cmp
sbb
ss
loopne
pop
loope
push
std
mov
fldl
cli
loopne
fwait
mov
mov
roll
push
mov
mov
jp
dec
jle
icebp
psubd
xchg
stos
out
mov
xchg
imul
popa
adc
mov
dec
call
adc
push
jmp
stos
daa
sub
mov
push
lods
sbb
and
adc
lret
adc
inc
mov
mov
mov
les
repnz
sub
mov
adc
pop
stos
aaa
dec
mov
adc
imul
inc
fdivl
repnz
push
arpl
ss
sbb
andl
inc
scas
fdivrl
inc
movsb
popa
repnz
fs
pop
xchg
pop
cwtl
sarl
mov
loope
or
pop
lret
cmp
add
gs
stos
or
mov
nop
mov
in
test
fsts
xor
fildll
mov
inc
into
sbb
orl
mov
cmpsl
fsubr
movsl
mov
test
mov
cltd
lea
cld
iret
stos
std
aaa
push
add
popf
repz
lods
inc
xchg
lcall
lahf
jl
mov
lcall
mov
sahf
insb
adc
add
cmp
ret
xchg
repz
inc
fimull
pop
fmull
and
scas
sbb
inc
in
inc
push
out
jecxz
jns
jnp
int3
cmp
mov
idivb
shlb
jb
mov
cmp
mov
fsts
movl
jno
shrb
push
fildl
in
outsb
push
jmp
aaa
xor
lret
dec
int3
cli
out
push
adcl
cwtl
jnp
out
sbb
inc
lods
push
ds
or
and
push
add
ja
loope
js
aaa
sub
push
adc
cli
mov
out
add
xchg
bound
pop
mov
mov
in
adc
imul
push
pop
fs
notb
and
rclb
jbe
addb
fadd
pushf
sbb
sbb
fwait
xor
push
and
push
das
cmc
sbb
bswap
aas
pushf
inc
cli
xchg
jne
lret
or
int3
in
inc
mov
pop
outsb
mov
adc
xlat
iret
aad
outsl
inc
push
mov
std
xchg
lcall
ret
or
add
mov
div
test
sbb
xor
out
push
xor
insl
or
movsl
in
xorb
mov
adc
sbb
mov
fidivrs
lods
movsb
aam
inc
pop
call
int3
lahf
xchg
sub
push
ficoms
mov
clc
call
lret
cmp
in
push
dec
pop
push
pop
sub
jno
inc
xor
sbb
mov
pop
addr16
enter
inc
pop
outsb
arpl
adc
or
rclb
cmp
push
std
cmp
pop
loop
nop
lods
in
add
insb
jg
add
mov
rorl
cmpsb
add
mov
out
xchg
sub
or
cmp
dec
push
and
mov
loope
mov
stos
sti
xchg
mov
lods
pop
inc
cmpsb
les
data16
in
xchg
and
cmp
xorl
ret
insl
xchg
xchg
out
jge
loop
xchg
jmp
imul
mov
mov
into
gs
int3
fistpl
std
int
bound
insb
dec
pop
sahf
cmp
fwait
xor
call
outsb
add
inc
aam
das
mov
dec
popf
pop
xor
mov
test
sub
cmp
sti
jecxz
das
lods
mov
jno
into
mov
add
loop
mov
mov
xchg
negl
sub
dec
idivb
shrb
adc
xchg
out
mov
mov
dec
testb
inc
xor
movlps
int
rclb
scas
cmp
pop
and
mov
xchg
rcl
mov
lcall
imul
repz
mov
mov
pop
mov
ret
adc
mov
dec
cld
int3
lcall
loopne
call
or
imull
into
aaa
and
jp
push
or
add
mov
or
push
xor
scas
cmpb
lods
lods
pop
jge
arpl
adc
fs
jbe
sti
pop
xlat
outsb
sbb
adc
mov
mov
mov
lret
cmp
out
inc
dec
xorb
mov
fmull
fwait
clc
xlat
jmp
in
xlat
pushf
jbe
into
clc
or
outsl
push
push
das
loopne
pop
aad
jl
and
js
mov
push
ss
imul
jo
sub
cmp
js
in
test
push
insl
mov
xchg
lcall
cltd
cs
jecxz
lock
jne
movl
outsb
aam
lret
cmc
fstl
jmp
inc
adc
mov
lret
or
inc
adc
movsb
mov
scas
inc
arpl
mov
cmpsl
push
add
add
out
imul
fcomps
pop
int3
sbb
add
pop
roll
pusha
jecxz
popa
xor
outsb
cmp
cmp
das
xchg
addl
loop
scas
and
iret
out
add
addr16
das
stos
cli
leave
mulb
out
sbb
and
inc
sub
sub
pop
or
jmp
mov
nop
fnstcw
enter
addr16
imul
call
mov
shl
adc
jne
mov
cmp
lods
lcall
int3
scas
ficompl
and
xor
mov
out
addr16
jecxz
push
rcl
and
add
xor
or
cmp
jp
adc
loop
movsl
jbe
jle
outsb
xchg
sub
xchg
mov
scas
in
pop
sahf
sbb
xor
cwtl
and
jecxz
jns
imul
outsb
pop
mov
lods
sbb
add
lret
mov
jp
sub
mov
inc
lret
xchg
movsb
push
jns
fadds
lods
adc
sbb
aas
mov
rolb
xchg
filds
js
mov
lea
inc
push
or
fnstenv
fs
cwtl
das
jecxz
push
sub
les
dec
sub
data16
adc
jne
lahf
jae
rcll
std
dec
jnp
jmp
imul
mov
sub
movsl
mov
scas
pop
and
mov
cmp
inc
cli
dec
sbb
jg
jge
dec
das
lcall
jge
jb
aas
les
flds
ljmp
sahf
xor
shll
mov
mov
in
cmpsb
mov
test
sbb
insb
pop
add
negl
jnp
leave
fdiv
dec
iret
dec
loopne
call
movsl
out
stos
stos
std
scas
mov
mov
dec
jo
data16
cld
or
dec
or
test
jle
stos
gs
out
les
mov
cmpsl
aas
out
push
inc
pop
into
push
dec
sbb
stos
pusha
xor
nop
shl
dec
push
add
out
inc
inc
mov
imul
jl
je
mov
lock
mov
je
mov
sahf
inc
sub
fwait
and
sub
aaa
lds
fidivl
stos
out
shrb
fwait
out
fildl
mov
add
sbb
xor
adc
and
test
dec
movsb
rorb
push
je
add
adc
ss
jle
mov
xor
xchg
arpl
or
push
aad
sub
inc
aas
les
jnp
push
xchg
xchg
dec
imul
add
cmp
mov
fisubl
xor
mov
nop
mov
jnp
sbb
mov
mov
stc
test
stos
inc
jno
flds
inc
std
jnp
xchg
jmp
scas
xor
jecxz
mov
push
mov
xchg
pop
or
shrb
xor
shrl
mov
scas
pop
idivb
imull
fs
adc
in
and
movhps
and
jl
stos
pop
pop
cltd
adc
and
iret
cmp
lret
rcr
sub
mov
cli
push
mov
jo
cmpsb
mov
cmpb
or
fld
in
repnz
push
fists
push
loopne
dec
xor
jg
pop
xchg
imul
mov
movsl
cmp
out
stos
inc
sub
iret
jl
fildll
es
push
rcrl
dec
in
push
aam
sbbl
pop
sub
inc
fimull
stos
clc
imul
jecxz
jnp
add
pop
sub
js
clc
cmp
data16
fimull
les
pusha
lock
push
mov
mov
add
or
test
aas
pop
cmp
dec
test
jge
xchg
add
inc
fs
test
jp
pusha
outsb
xor
cmpsb
dec
pop
push
inc
add
jae
mov
push
xchg
mov
dec
xchg
fldenv
test
mov
push
push
jmp
repz
cltd
or
adc
xchg
pop
mov
out
iret
dec
sbb
lcall
jmp
es
aaa
dec
push
in
jg
xor
in
scas
insb
stos
and
jge
adc
call
xchg
cmp
pop
cmp
ja
inc
icebp
enter
fs
aas
xchg
mov
testl
or
xor
int3
arpl
sbb
sbb
push
mov
repnz
je
and
fiaddl
into
insb
or
jno
clc
mov
inc
imul
popa
scas
arpl
and
popf
stc
or
scas
xchg
pop
call
mov
and
data16
or
cld
jp
pop
stos
enter
mov
add
into
mov
data16
add
insb
daa
lods
fucomip
sbb
ja
dec
movsl
cmp
js
notb
testb
cmpsl
popa
lret
je
pop
xchg
cmove
jbe
inc
pushl
sbb
push
mulb
inc
push
cs
or
cmpsl
ss
xchg
repz
gs
int3
fbld
push
jo
adc
loop
sub
shl
aas
or
jae
pop
push
lcall
mov
xchg
mov
loope
sahf
xor
inc
movsb
lods
inc
lock
pop
or
in
add
adc
mov
repnz
or
pushf
adc
dec
or
mov
push
inc
sbb
pop
inc
fwait
push
mov
fstp
push
stc
pop
jmp
aad
jmp
bnd
push
adc
xlat
sbb
fidivrs
adc
dec
pop
bound
xor
and
add
lds
xchg
jmp
mov
sub
stc
mov
or
icebp
jo
jae
mov
shrl
sub
cmp
cli
xchg
pop
aad
sbb
mov
das
shll
pop
mov
and
inc
pop
lock
loope
mov
retw
int
adc
out
fdivrs
jmp
jmp
pop
nop
jne
mov
xchg
jle
add
jbe
mov
sbb
sarb
jb
inc
mov
adc
xchg
shl
movsb
jb
inc
sbb
into
aad
adc
inc
xchg
inc
and
loop
xor
cli
or
scas
dec
push
xchg
add
inc
mov
pop
hlt
push
add
mov
push
inc
pop
or
sub
fbld
adc
or
out
cmp
add
sbb
cmp
sub
hlt
add
xor
scas
maxps
pop
orb
xor
les
jae
push
xchg
arpl
pop
adc
int3
inc
jge
out
xchg
insb
imul
mov
movsl
int
hlt
dec
shrl
rcrb
jge
fmull
shll
cmp
pop
push
testb
ljmp
pop
pop
loopne
push
mov
insb
add
ret
jle
xchg
push
mov
push
and
push
lds
in
or
enter
push
mov
jg
inc
jo
pop
addr16
out
xor
inc
pop
idivb
leave
pusha
in
mov
mov
or
addr16
xchg
xchg
jp
mov
mov
incb
popf
loopne
outsb
add
je
movsb
pop
lock
ret
cmpsb
add
jl
pop
push
cwtl
into
or
lock
mov
lret
ljmp
push
push
lods
inc
inc
cmp
and
jbe
mov
adc
xor
cmc
int3
inc
ret
pop
sbb
imul
in
xor
and
gs
jbe
pop
push
shrb
in
imul
es
mov
or
stc
scas
inc
cmp
push
add
xchg
clc
insl
es
jle
pop
push
sub
jle
push
ds
icebp
mov
lahf
ss
sub
js
pop
dec
rcrl
int3
push
das
filds
mov
dec
inc
pop
rorb
mov
sbb
scas
inc
jne
mov
rclb
sbb
popa
clc
xchg
lret
bound
mov
sbb
sub
outsl
imul
popa
mov
lock
leave
xchg
add
xchg
sub
or
lcall
aas
sbb
pusha
iret
ret
mov
cmp
jg
xchg
sub
mov
xchg
push
outsl
mov
jno
jnp
adcb
cmp
pop
pop
sbb
dec
jle
jnp
insl
mov
cmp
and
fidivs
orl
fdivr
ja
mov
fucomp
jg
repz
xchg
iret
push
rcrl
sbbl
adc
add
aad
sti
xchg
jl
jo
mov
imul
jmp
or
fwait
js
pop
pop
mov
in
addl
inc
jne
outsb
add
fstps
call
scas
out
mov
push
jg
pusha
jno
jnp
pop
loope
push
aad
mov
movsb
xchg
lcall
int
pop
cmp
pusha
push
movsl
jae
inc
mov
inc
add
pusha
cmp
xchg
mov
ret
loopne
sbbl
add
dec
sbb
call
inc
xchg
sbb
push
fnsetpm(287
push
in
xlat
movsb
int3
arpl
scas
adc
sbb
bound
push
sub
test
in
xchg
pusha
notl
bts
xor
jl
add
into
or
lods
out
pusha
notl
into
mov
call
or
insb
jnp
xchg
in
lea
lea
mov
sub
loop
mov
icebp
mov
mov
sub
pop
test
cmp
mov
inc
dec
loop
xchg
push
icebp
or
das
js
lods
mov
xchg
addr16
enter
sbb
sbb
mov
push
xor
inc
adc
sbb
push
inc
fisttpl
mov
das
push
lods
mov
mov
aaa
into
cmpsb
mov
fs
dec
movsb
mov
sbb
jge
icebp
lods
fnstenv
mov
mov
dec
loop
nop
in
test
mov
insl
mov
shrl
mov
dec
daa
dec
insl
inc
mov
stc
test
mov
in
adcb
ss
jmp
push
adc
andb
mov
ja
fisttpll
sbb
lds
jp
lods
sub
pop
cs
pusha
inc
int3
sub
push
xchg
sub
push
out
call
lock
mov
adc
movsl
cmp
xor
mov
repz
test
aad
dec
leave
aad
mov
sbb
imul
xor
mov
push
or
fwait
imul
xchg
jne
rcrb
pop
arpl
cmp
aad
pusha
test
repnz
mov
dec
fiadds
jo
ficoms
sbb
pop
rolb
fstpl
inc
loop
sbb
rclb
ret
scas
inc
aad
push
repnz
lcall
xchg
popf
jne
das
and
sbb
jae
mov
das
scas
jo
pop
mov
icebp
mov
les
movsl
aad
lahf
ss
jmp
mov
add
test
and
mov
outsb
adc
xchg
dec
xchg
mov
outsl
jl
cmp
icebp
mov
jle
mov
jp
lds
jmp
push
test
in
test
pop
cld
xchg
xchg
aad
ds
test
imul
enter
lock
mov
mov
mov
mov
call
in
shlb
fs
shlb
fcmovnbe
insl
int
push
stc
fwait
jecxz
cmpsb
adc
fldcw
in
nop
mov
lock
push
or
jmp
xor
hlt
stos
mov
inc
push
lahf
ret
inc
add
ja
aaa
sub
lahf
or
push
ds
in
mov
cltd
mov
push
mov
mov
test
ss
push
out
lds
subb
mov
insb
in
neg
movsb
pop
cmc
pop
dec
pop
hlt
cmp
fwait
inc
ljmp
leave
dec
xchg
xchg
jo
push
in
addb
jno
pop
movsb
push
movsl
aad
push
ljmp
jb
adc
or
xor
aas
push
mov
and
aas
sbb
or
aas
je
push
in
lea
inc
cmp
inc
mov
lea
scas
ret
stos
and
push
aad
jo
shll
ret
inc
into
out
sub
dec
rolb
mov
lds
push
insb
or
xchg
push
ficoml
inc
cli
out
add
or
cmp
pop
insl
inc
cmpsb
pop
ss
stos
ss
xchg
sbb
gs
je
idivb
sub
dec
scas
loopne
stc
das
jnp
ja
mov
aam
xor
rcl
or
dec
stos
loopne
ficoml
int
insb
mov
enter
into
nop
daa
shrb
fwait
sahf
stc
pop
cmc
jmp
xor
sbb
cmp
lcall
movsl
fidivl
fst
imul
mov
stc
mov
gs
fdivl
notl
xchg
ds
ret
fsubrs
addr16
daa
cltd
mov
fdivl
xchg
xchg
js
dec
movsb
cmp
stos
mov
scas
mov
lret
xor
add
sub
pop
fwait
clc
int
outsb
add
pop
into
nop
daa
add
loope
test
subb
adc
push
imul
imul
pop
fs
gs
adc
xor
jbe
add
jl
fs
int
es
leave
outsl
mov
adc
push
lods
int3
ja
mov
into
gs
jg
mov
in
imul
sub
imul
insb
imulb
cmp
je
sbb
sub
jmp
movsb
movsb
jo
loope
pop
mov
imul
or
mov
dec
cs
jge
xor
cmp
jno
cmp
lahf
push
inc
mov
sub
jge
repz
sahf
das
sbb
movsb
cmp
rolb
pop
scas
add
mov
and
in
fs
icebp
xchg
xchg
pop
sahf
pop
into
std
xchg
fildll
sbbl
add
movsl
pusha
in
xor
jb
jbe
fldz
and
in
rorl
hlt
dec
paddq
push
daa
shlb
test
push
add
push
xchg
push
hlt
mov
leave
pusha
or
add
cltd
xor
cli
xchg
aaa
cwtl
fnsave
push
jmp
and
sub
adc
inc
inc
lds
outsl
push
inc
mov
andl
imul
cltd
lods
inc
sub
mov
cmpsb
cmp
inc
js
jns
bound
cltd
cmp
mov
or
lret
add
std
or
cltd
push
jp
mov
add
andl
cli
xchg
aam
jo
faddp
sbb
dec
or
add
dec
xchg
cs
out
pop
mov
faddp
pop
in
xchg
cs
add
mov
aaa
pop
mov
insl
pop
test
inc
sbb
ds
bound
stos
lea
push
fsubrs
mov
mov
dec
sub
jno
lcall
inc
in
es
imul
sub
cmp
lods
dec
data16
jo
sahf
xor
adc
shrl
xor
xchg
mov
lds
cmp
mov
mov
dec
stos
pop
icebp
or
aaa
sub
mov
outsl
mov
mov
adc
adc
mov
mov
nop
fcomps
loop
scas
inc
jecxz
and
pushf
mov
loopne
mov
pop
scas
lea
mov
mov
lods
inc
add
ret
pop
push
ret
fnsave
pop
dec
cld
xchg
mov
frstor
mov
std
or
cmp
push
popf
fwait
pop
sbb
or
lock
inc
fiaddl
mov
add
mov
les
sbb
push
xor
xchg
les
mov
add
pop
lock
and
ja
vmread
inc
xor
dec
popa
sub
dec
jo
sbb
imul
nop
ret
icebp
mov
mov
sbb
mov
sbb
shrl
outsl
sub
aas
mov
and
inc
sbb
pop
scas
xchg
add
cmp
stos
inc
mov
lods
inc
fnstsw
mov
insl
sbb
mov
shrb
mov
ret
popf
xor
xor
pop
test
pop
loope
dec
loope
lds
imul
popf
xor
mov
push
mov
cmp
inc
fmuls
icebp
xchg
sub
movntq
pop
mov
xchg
cs
loop
add
mov
xchg
xchg
mov
push
mov
adc
aam
gs
out
fisttps
and
setb
mov
fidivrs
lea
add
sub
outsl
xor
mov
das
das
and
rclb
fidivrs
mov
xor
lret
loope
shlb
and
xchg
test
pop
xchg
inc
std
lret
scas
int3
rorl
fisttps
andl
out
sub
je
push
jne
cli
clc
jecxz
loopne
sbb
xor
xor
pusha
xor
cmp
gs
test
sbb
shrb
cmp
jecxz
fmuls
xchg
push
or
ljmp
sub
xlat
cld
xchg
shrb
xchg
stos
sti
in
xor
add
in
jecxz
jl
mov
in
test
mov
cmpsl
mov
or
lods
out
movsb
cmp
pop
add
or
cmp
jb
xchg
sub
or
jp
out
mov
dec
mov
cmpsb
imulb
inc
sahf
ret
repnz
in
push
out
pop
xchg
stos
xchg
mov
inc
dec
push
aam
ljmp
pop
sahf
mov
scas
js
shll
inc
jb
aas
int
rorl
pusha
pop
xchg
jl
pop
bound
mov
in
ss
mov
lahf
aas
out
lods
push
and
xchg
sub
enter
xchg
mov
push
add
push
xor
shrl
scas
pop
icebp
insb
fiaddl
lods
mov
jmp
nop
out
jno
lahf
sbb
xchg
sbb
test
cmc
fnsave
dec
dec
push
jae
dec
insl
dec
in
imul
jp
jp
adc
sub
jbe
ret
imul
lcall
jbe
xchg
ds
dec
mov
sbb
mov
pop
jge
add
and
dec
out
or
jo
lea
cmp
or
repnz
imul
push
push
mov
lea
je
cmp
or
outsl
int
ret
popf
movsb
clc
shl
and
xchg
in
mov
test
adc
into
addl
jno
andb
ljmp
mov
aaa
sbb
cmp
inc
adc
xchg
adc
mov
xchg
loope
and
pushf
mov
jb
sub
cmp
cmpsl
add
adc
stos
mov
push
repz
fdivrl
lret
jo
test
pop
mov
adc
ret
shrb
test
sub
in
pop
rorb
pop
repz
jl
sbb
shlb
inc
icebp
xchg
jno
cltd
adc
lahf
out
mov
xor
nop
cmp
xchg
xor
jns
mov
push
lcall
and
iret
push
add
jecxz
cmpsb
and
in
xchg
push
lods
mov
or
in
xchg
mov
lret
cmpsb
cmp
std
xchg
les
adc
cmp
or
out
inc
mov
jne
xchg
scas
add
cld
mov
addr16
or
das
xchg
xor
fnclex
mov
adc
or
insl
add
pop
xchg
cmp
dec
jle
mov
or
sbb
pop
xchg
aaa
fs
dec
pop
jecxz
jmp
add
push
sbb
or
out
pop
in
and
cs
neg
push
jno
sbb
dec
push
mov
ljmp
es
jns
inc
frstor
pop
cmpsl
xchg
xchg
cs
pop
mov
sbb
sub
xor
mov
cmc
sahf
shlb
aaa
into
pop
repnz
rep
jns
jmp
daa
mov
sar
repz
fwait
out
and
mov
dec
bound
mov
aaa
shrb
popf
xor
lret
ja
inc
adcb
push
jno
mov
fcoml
stos
out
mov
stos
das
aas
enter
aad
loopne
leave
popa
add
bound
inc
jne
add
data16
fdivrs
inc
into
leave
into
loope
and
sarb
mov
out
sbb
stos
push
cwtl
testb
xor
imul
cs
pop
mov
cltd
repz
aad
add
movsl
shl
call
subl
movsl
mov
mov
fs
dec
stos
ret
in
mov
pop
in
shlb
pop
lret
ja
std
jl
xchg
hlt
ss
out
adc
mov
cmp
cmp
and
push
out
sbb
lea
cltd
push
lods
lock
movsl
test
in
xchg
mov
cmpsb
jmp
mov
inc
cli
xchg
add
jle
inc
push
int3
sahf
push
fwait
cwtl
stos
xorl
addr16
out
mov
ret
int
rcrb
pushf
call
dec
or
aad
std
inc
loop
ljmp
iret
mov
ret
inc
mov
hlt
mov
mov
pop
cmp
pop
mov
hlt
mov
lds
push
mov
inc
xchg
mov
mov
stc
or
sbbb
mov
inc
loop
repz
add
loope
pop
daa
dec
movsb
frstor
push
push
jne
inc
xchg
pop
add
rorb
lea
or
fstpl
pop
mov
push
pop
adc
enter
lock
and
dec
mov
jmp
dec
add
pop
push
add
jp
fcmovne
dec
loope
xchg
call
std
xchg
inc
mov
addr16
adc
mov
pop
hlt
xchg
loopnew
or
pop
aaa
add
rcrb
and
std
out
mov
push
popa
inc
arpl
and
xchg
test
push
add
adc
and
enter
pop
ja
cmpsl
aas
sbb
in
imul
cmc
adc
ret
idivl
icebp
push
mov
mov
pop
mov
les
rorl
rorb
and
insl
jg
sti
test
mov
iret
fnsave
mov
push
sti
mov
daa
inc
cs
add
adc
or
sub
shll
add
jl
pushf
repz
sub
xor
mov
pop
dec
mov
out
lcall
outsl
rcrl
push
js
ja
sahf
ja
nop
cmpsl
xchg
fldcw
les
sbb
cmp
or
lcall
sub
dec
sbb
add
xchg
adc
es
popa
into
movsl
jnp
cmpsb
cld
cmpsl
sbb
pop
cmc
sbb
addl
frstor
add
adc
outsl
imul
pusha
fldenv
push
jne
push
adc
mov
es
test
xchg
mov
stos
mov
loop
test
imul
mov
dec
and
aad
test
pop
push
mov
cmpb
shr
lcall
and
jle
ret
out
nop
pop
push
or
iret
xchg
clc
push
dec
loop
add
cmp
imul
sub
push
push
jmp
bound
pop
xor
or
mov
test
fcmovb
clc
mov
mov
mov
pop
or
loop
jg
dec
out
push
sub
fisubs
mov
cmpsb
mov
call
subl
sub
fidivrl
add
mov
and
movsl
sarl
loop
xlat
xchg
xorb
sub
popl
pop
cmp
sub
mov
sub
and
je
inc
fcomps
jae
nop
je
mov
cmp
cmp
subl
mov
insl
add
call
roll
xchg
xchg
sub
sbb
push
cmc
ret
out
adc
mov
push
icebp
daa
lock
jnp
movb
ljmp
cmpl
cld
mov
pop
xchg
notl
mov
adc
dec
fnstcw
test
add
xchg
add
mov
rclb
sbb
adc
in
data16
add
mov
es
and
inc
push
cld
cmp
pop
icebp
jecxz
inc
sub
rolb
xchg
pop
rorb
call
hlt
int3
mov
adc
adc
dec
cmp
daa
dec
push
es
cmp
cltd
cmpsl
loope
fldcw
es
push
xor
push
inc
shl
js
rclb
hlt
mov
xchg
pop
out
lret
cmp
iret
push
pushf
cli
inc
mov
imul
jo
push
lret
repz
jle
mov
cmc
insb
enter
ficomps
aad
push
lcall
das
adc
jle
and
lahf
in
rcrl
jg
sbb
xor
mov
adc
inc
mov
in
int3
fildll
mov
out
mov
std
adc
pop
iret
push
fsubr
pop
xlat
outsb
cltd
in
hlt
sbb
cmc
adc
xchg
sar
adc
xchg
or
xchg
movsl
xor
es
ret
test
mov
mov
xchg
pop
movsl
in
mov
push
jge
stc
push
xlat
xchg
scas
and
add
lods
lret
mov
int3
mov
xchg
in
call
mov
mov
jge
jae
andl
hlt
pop
inc
fsubs
call
sbb
jns
stc
out
dec
clc
sbb
mov
insl
test
fcomps
mov
cmp
je
mov
mov
test
cmp
pop
arpl
sti
outsb
sti
push
adc
daa
stc
test
push
mov
or
ffreep
mov
pop
aas
dec
imul
and
jmp
add
popf
xor
and
or
popa
clc
mov
adcb
xchg
push
cmp
adc
out
push
adc
push
scas
mov
sbb
test
out
sub
jne
addr16
jbe
inc
cmpb
push
fwait
jmp
xor
ljmp
fildl
xor
std
push
fimull
fisubs
daa
sub
mov
sahf
cmp
xor
adc
lret
ficoms
stos
paddsw
shll
les
lea
mov
arpl
xor
add
pop
add
je
jmp
pop
mov
pop
or
mov
mov
push
data16
mov
in
test
and
pop
push
jl
adc
test
sub
sub
push
dec
je
je
and
enter
pop
lret
mov
stc
cli
subl
dec
or
inc
sbb
int
pop
cmp
and
out
sub
xchg
out
push
or
xchg
mov
arpl
sbb
xchg
out
sbb
add
mov
push
pop
stos
inc
fldz
test
lret
leave
add
aam
je
out
imul
mov
cmp
push
ret
incb
and
aaa
jp
inc
lods
inc
loope
xor
fs
push
fistpl
out
mov
xchg
loop
ja
add
fnstcw
pop
jmp
jb
lock
sbb
or
sub
push
incb
or
sti
imul
sbb
mov
push
inc
ljmp
jp
ret
fs
dec
mov
ret
rcl
fadds
xchg
stos
repz
repnz
popa
jns
inc
jbe
data16
xchg
mov
inc
adc
push
jbe
or
or
pushf
out
lret
dec
jo
jg
ss
sbb
mov
jmp
jb
dec
ret
jae
add
xchg
and
mov
cmpsl
outsb
xor
fildl
loope
xchg
cmp
push
test
adc
and
jmp
popa
jo
enter
mov
ss
sbb
movsl
imul
push
js
test
inc
cmp
adc
pop
movsl
lods
lock
pop
call
mov
loope
fwait
xchg
movsl
into
pop
pop
mov
add
not
and
int3
xchg
sub
inc
push
les
daa
mov
add
adc
push
mov
shll
dec
mov
sbb
cmp
jne
adc
stc
pop
insl
add
lahf
and
pop
push
fsubr
inc
mov
mov
ss
push
push
or
mov
lret
shl
mov
pusha
add
xchg
fidivl
mov
int3
dec
xchg
add
pop
popa
add
lods
cmpb
mulb
sub
mov
pop
into
and
mov
out
cmp
cmp
pusha
jl
mov
sbbl
fcoml
test
cwtl
cmpsl
test
lret
cld
ja
dec
push
add
lahf
add
mov
in
lds
mov
cmc
add
xchg
les
cld
in
push
xchg
mov
fcoms
test
addl
fcmovbe
lods
dec
and
xor
jl
or
xchg
pop
add
and
and
jmp
add
lcall
jl
out
mov
cwtl
sbb
sbb
cmp
jmp
pop
dec
mov
xor
imul
cmp
pop
jmp
xchg
mov
dec
in
mov
and
inc
pop
sub
cmpsb
add
stos
cmp
lods
inc
dec
fwait
inc
pop
mov
lret
sub
push
dec
add
mov
cmp
sahf
and
push
popa
jno
jge
pushf
hlt
mov
xor
arpl
adc
mov
mov
popa
pop
into
push
cmp
lock
in
js
les
push
add
inc
in
mov
xchg
scas
pop
mov
aam
adc
inc
mov
mov
dec
or
adc
inc
adc
push
int3
popa
outsb
mov
push
decb
rolb
jns
or
aad
xor
ret
inc
clc
push
out
rcll
mov
loop
and
into
push
pop
push
inc
ss
jl
xchg
ja
lret
arpl
es
mov
mov
mov
add
ja
cmp
jbe
stos
int3
pop
adc
inc
push
fidivs
adc
mov
dec
ss
and
daa
adc
mov
jo
inc
push
js
mov
jno
stos
or
mov
push
pusha
pop
pop
decl
cmpsl
jle
sub
pop
mov
lahf
push
js
mov
add
jb
mov
andb
add
mov
in
aas
or
add
add
add
rcl
out
push
mov
inc
push
mov
pop
and
or
sub
xchg
mov
lcall
and
sub
and
faddp
dec
push
push
shrb
jo
and
aas
jae
cli
gs
fcoml
dec
loope
call
icebp
inc
pop
fwait
mov
xchg
sub
call
dec
jg
out
lcall
or
mov
in
test
das
out
pushf
sub
adc
scas
and
pop
sti
rclb
std
cmpsl
mov
loopne
call
and
mov
nop
outsb
hlt
pop
mov
sub
mov
lret
rorl
pop
movsb
mov
adc
popa
ss
out
je
mov
xchg
lods
ljmp
xor
pushf
popa
mov
insl
frndint
pop
xchg
lods
mov
cmp
jp
mov
or
mov
imul
xor
es
in
or
ja
orb
lods
loope
aas
adc
cmp
push
rorl
or
call
inc
xlat
lahf
ss
jge
cld
pop
mov
inc
or
ljmp
jno
push
and
lea
addb
mov
fdivl
push
cmpsl
mov
loopne
xor
sbb
cmp
aad
addr16
xchg
jb
sbb
andl
jecxz
dec
loope
xlat
leave
loope
aaa
jne
xchg
lea
cwtl
adc
in
jae
mov
jns
jle
mov
lods
mov
jecxz
add
add
mov
call
stos
xchg
mov
inc
xor
mov
adc
ds
fsubrs
xor
leave
dec
aaa
orb
jmp
sbb
repz
xor
cmpsb
sbb
push
sbb
cmp
lahf
lahf
shrb
or
pop
xchg
scas
aam
push
movsb
sbbl
ja
subb
dec
add
jnp
cwtl
insw
nop
stc
js
cmp
insb
add
jp
rcrb
lods
jg
pop
sub
shrb
out
adc
ds
sahf
aas
sahf
pusha
pop
xchg
xlat
add
push
shrl
jle
idiv
xchg
sarb
daa
daa
sbb
fdivr
xor
iret
fldcw
pop
cwtl
test
pop
or
or
cs
xchg
ss
repnz
cltd
jp
shlb
sbb
clc
rorl
loopne
imul
repz
into
adc
insb
lock
push
sbb
mov
mov
bound
rorl
bound
sub
pop
jge
fildll
into
mov
insl
push
dec
insl
stc
jl
adc
push
xor
and
inc
sti
mov
enter
push
mov
inc
mov
and
push
jmp
sbb
jo
push
mov
pop
daa
mov
or
push
je
or
pop
mov
cld
and
dec
icebp
daa
jp
outsb
jbe
add
les
push
adc
out
adcl
jle
cs
lods
js
add
inc
sbb
mov
pop
fwait
and
movsl
movsb
xchg
pop
scas
jnp
push
jp
es
test
mov
repnz
dec
xlat
divl
inc
test
lret
data16
les
xchg
adc
jecxz
inc
movsl
std
or
pushf
mov
decb
in
or
push
xchg
push
ss
scas
iret
xchg
push
repz
pop
sbb
and
inc
popf
sbb
lret
xchg
ss
lods
fsubs
push
and
rcl
cmp
jae
out
pusha
adc
or
push
pushf
jae
ret
mov
lcall
mov
nop
decb
jb
aaa
inc
sbb
xor
ss
push
xchg
pop
xor
popa
andl
xchg
push
out
adc
dec
call
jbe
and
push
push
pop
cmp
mov
or
push
dec
jl
mov
scas
ljmp
xchg
sbb
cmc
into
push
arpl
ja
loopne
pop
sbb
bound
push
mov
dec
loope
test
aad
enter
push
or
xor
push
lret
aas
sub
stc
aas
sub
sbb
dec
in
vpperm
sbb
jg
jmp
test
int
sbb
xor
jo
and
mov
sub
lcall
adc
jle
mov
mov
or
pop
or
cli
or
mov
int3
mov
xlat
mov
fisubrs
pop
out
mov
insl
push
in
xor
adc
or
lret
call
ror
not
ss
flds
lcall
cwtl
stos
into
js
aad
out
jno
and
jg
mov
push
push
cs
mov
out
test
movsb
std
mov
das
sti
repnz
arpl
mov
enter
xor
out
mov
scas
rclb
ret
mov
sub
push
push
repnz
jbe
fstps
sub
xchg
sub
rolb
out
imul
push
shl
mov
hlt
shrb
lcall
gs
or
pop
insl
scas
mov
ds
cs
add
mov
cmp
add
mov
lret
jl
and
sbb
sbb
jmp
enter
push
inc
jle
inc
repz
pop
and
push
out
pushf
test
divl
pop
sub
dec
movsl
push
clc
adc
lret
sbb
outsb
inc
push
pop
xchg
rorl
sub
mov
enter
aad
push
or
shlb
adc
bound
cwtl
insb
cmpsl
xchg
push
mov
jne
rorb
out
pop
push
mulb
jge
aam
fs
pusha
push
mov
sub
shll
pop
in
cli
lock
ret
fucomip
enter
mov
mov
xchg
std
gs
jb
mov
mov
outsl
sbb
inc
jbe
bound
mov
push
jne
mov
xchg
sub
je
inc
leave
stos
dec
sbb
or
mov
fs
cmp
cmc
cmp
out
cmp
in
sub
in
push
movsl
aaa
jnp
les
pop
sub
add
aaa
int3
arpl
sbb
cmp
js
sbb
cmp
cltd
or
test
lea
loope
fnstcw
pop
mov
xor
movsl
push
mov
xchg
nop
addr16
imul
cmp
dec
out
fcmovb
and
jne
pop
pop
mov
pusha
rorl
loope
xchg
cmp
in
andl
adc
add
jp
mov
adc
ds
les
jp
mov
mov
test
jns
xchg
jmp
enter
pop
and
jae
mov
stos
jbe
shl
rorl
rclb
mov
jne
xor
xchg
es
outsb
pcmpeqd
xor
push
nop
daa
mov
and
test
inc
lcall
jae
stos
sub
xor
sahf
out
mov
mov
jo
ret
incl
mov
pop
cmc
dec
rcll
sub
stos
orl
push
bound
pop
xchg
xorb
scas
loope
sub
fsubl
sub
sub
decl
movsb
ds
push
xor
add
leave
movsb
pop
or
jge
sahf
das
addr16
rcl
fadds
fwait
sti
xor
xor
push
pop
mov
cmc
or
and
sub
scas
test
int3
push
ror
fistl
adc
or
push
dec
outsl
nop
sbb
cmp
mov
jbe
das
adc
je
shlb
repz
bound
and
xchg
lcall
jge
clc
jnp
pop
cld
ja
test
icebp
mov
push
and
and
into
outsl
hlt
mov
in
rorb
mov
push
or
ret
mov
pop
xor
ljmp
fwait
xchg
int
pop
jmp
adc
fnstenv
lcall
lock
pop
dec
cld
pop
xor
loop
btc
mov
sbb
in
std
cmp
arpl
scas
jne
push
bound
sbb
hlt
inc
arpl
dec
fwait
bound
test
xor
lds
xchg
setb
xchg
inc
fcompp
lea
mov
mov
test
inc
push
mov
imul
push
popf
inc
arpl
xor
test
daa
mov
ret
cmp
outsb
scas
gs
filds
clc
inc
push
inc
push
mov
stc
or
mov
push
mov
das
cmp
jnp
rolb
add
jae
or
dec
inc
fs
cwtl
lock
ds
divb
mov
xchg
cs
adc
dec
jns
loope
or
sub
ds
lock
and
and
adc
lods
stc
pop
cmp
cwtl
sbbl
out
xchg
cmc
mov
loope
sahf
lahf
and
outsl
repnz
jo
nop
dec
fidivrs
fbld
dec
sub
pop
fisubrl
xchg
inc
fildll
ja
dec
fstpl
cmc
mov
xchg
dec
ret
xor
or
sub
or
jnp
mov
or
push
ljmp
add
mov
fsubs
jp
cwtl
testl
xchg
xlat
push
mov
add
adc
mov
pop
xlat
jecxz
mov
adc
pop
inc
fwait
pop
jns
stc
loope
and
shrb
mov
xchg
jge
divb
mov
xlat
mov
out
sahf
xor
push
add
push
and
jecxz
push
adc
push
aaa
call
push
mov
int3
mov
sbb
bound
jb
test
nop
add
sbb
ds
xchg
sub
push
mov
push
add
scas
xchg
shrl
cmp
push
dec
loopne
pop
or
adc
bound
pop
and
jmp
ret
shlb
sub
mov
pop
inc
hlt
pop
cmpsb
stos
popa
movsb
iret
loope
pop
aas
dec
nop
out
pusha
in
cmp
sbb
pusha
popf
lods
xchg
insb
xchg
xor
lcall
cmc
sti
push
push
push
stos
in
shll
lods
pop
aaa
cmpsl
inc
test
addl
pop
js
shlb
test
mov
leave
mov
loop
inc
lods
push
jo
adc
pop
push
xor
or
and
fistpl
mov
lahf
clc
or
cs
sbb
add
mov
sub
les
dec
inc
xlat
movsb
push
or
and
jmp
xor
loop
pop
xchg
lret
and
sub
hlt
addr16
ss
test
int3
andl
ss
push
lret
in
xor
dec
mov
mov
int3
jp
cmc
testb
scas
lret
stc
mov
arpl
cmp
test
lret
and
jg
push
xchg
jge
mov
bound
leave
fistl
mov
mov
xor
cmp
test
imul
and
and
dec
mov
jno
mov
jp
out
and
and
mov
andb
in
add
sub
lcall
in
jmp
inc
lods
insl
pop
inc
sbb
in
xor
repz
pop
insl
test
jmp
rcll
testl
xchg
push
dec
mov
call
lahf
and
pop
repnz
int3
sbb
mov
xchg
pop
in
xor
sbbb
nop
insl
lods
jnp,pt
insb
inc
in
jle
xor
or
xor
pop
sub
ret
mov
std
loop
loopne
and
sbb
int3
data16
inc
mov
rcrb
or
sub
outsl
aam
repz
jge
dec
dec
data16
lods
popf
xor
or
pusha
cld
call
loope
pop
pop
sub
fcomps
and
mov
inc
sub
and
gs
inc
xchg
cltd
out
xchg
xchg
shrb
lock
mov
sbb
jae
iret
movsb
sbb
insl
jge
adc
sti
xor
pop
xchg
or
jo
cmp
ja
cli
and
inc
or
cmp
negl
mov
cmp
movsl
rclb
jl
inc
out
jo
test
hlt
fbld
das
icebp
shl
je
cmpsl
dec
in
inc
sti
nop
pop
call
add
das
rorb
add
mov
ret
sbb
xor
sbb
mov
je
scas
hlt
push
loopne
sti
in
inc
dec
mov
or
insb
xchg
mov
dec
dec
inc
mov
leave
jno
int3
xchg
dec
sbb
push
in
sub
sahf
mov
push
in
sbb
in
mov
push
xlat
mov
int
movsl
dec
inc
stos
mov
iret
adc
add
and
cld
dec
aam
movsl
cld
add
repz
outsb
lahf
and
mov
sub
push
out
pushf
repnz
cli
mov
push
scas
push
test
xor
mov
push
adc
pop
lret
jecxz
mov
test
rcrl
mulb
gs
pop
repnz
add
cmp
inc
jns
jne
or
frstor
cmp
daa
cmp
stos
adc
jns
sub
xchg
add
ficomps
mov
scas
rcrl
and
jecxz
xor
mov
outsl
pop
sub
repz
movsb
cmp
jb
sti
ret
insl
fidivrs
popa
xor
mov
out
mov
clc
and
popa
lods
xchg
movsl
lods
cmp
in
ret
or
test
cltd
push
jl
cwtl
cmp
xchg
push
add
add
test
add
add
inc
scas
es
test
in
fsubrs
push
add
xchg
mov
cmpsl
pop
and
shrl
jae
ror
repz
lods
rcll
mov
dec
push
jno
or
cmpsb
xlat
fdivp
or
jns
enter
inc
sub
inc
stc
ljmp
test
sub
dec
subb
sbb
push
pusha
ds
je
adc
es
cltd
cmp
ljmp
das
mov
enter
sub
out
jle
popf
inc
gs
sti
xchg
push
cmpsl
mov
inc
add
adc
fnstcw
and
jl
pop
repz
popf
add
dec
test
and
leave
into
enter
mov
in
mov
mov
bound
pop
xchg
mov
inc
into
data16
lea
test
xchg
loope,pt
test
sti
fcmovnbe
outsb
or
addb
push
push
lods
xor
fnstenv
push
stos
inc
mov
jne
jo
mov
sub
popf
jecxz
lock
adc
pop
loope
pop
adc
xchg
xor
adc
cwtl
loope
cli
pop
cmp
pop
cmc
mov
ret
dec
sub
icebp
push
leave
cmp
cmp
test
pop
or
pop
cmpsb
test
sub
in
mov
mov
enter
sub
lods
add
sub
jbe
or
mov
sub
mov
aam
push
adc
xchg
mov
and
fstp
add
es
push
inc
mov
and
gs
aas
rcrl
test
test
in
lods
out
sub
pop
pop
sti
pop
imul
dec
cmpsb
push
sar
aad
cmpsb
gs
test
imul
iret
jge
lods
jbe
mov
ficomps
idivl
lods
nop
xchg
mov
repz
or
sub
sbb
dec
push
pop
fdivl
mov
xor
fdivrl
sbb
or
fnstenv
dec
push
push
testl
aam
push
in
push
mov
je
scas
mov
jne
subb
mov
mov
js
arpl
xchg
push
pusha
decb
inc
cmpsb
cmp
popa
inc
icebp
inc
cmpsl
and
sahf
and
pop
fbstp
xchg
adc
add
or
sar
cmpsl
out
jae
fistpl
popf
lret
pop
int
xor
inc
fs
shl
popf
mov
mov
sahf
hlt
fwait
inc
or
lahf
mov
pusha
cmpb
aam
fisubrs
loope
lods
arpl
pmuludq
sbb
into
adc
stos
lock
jle
fcoml
sub
push
fidivrl
dec
push
rep
inc
scas
in
test
xchg
inc
add
sarb
arpl
and
lret
test
mov
lods
inc
mov
addb
or
stc
push
ljmp
jno
cmpb
loop
push
mov
subl
negl
fs
sti
popf
jns
lcall
push
adc
sub
add
mov
cmpsl
jle
push
pop
enter
add
sti
cmc
fldenv
ds
in
mov
lahf
sbb
dec
stos
or
mov
adc
cmp
xor
pop
mov
dec
inc
scas
std
subb
inc
lods
cmpsl
dec
in
and
fnstenv
push
fistl
pop
xor
add
js
loop
mov
jae
aas
lods
aaa
movsb
pop
add
inc
pop
repnz
adc
stc
pop
cmp
gs
push
jo
and
inc
cltd
arpl
xchg
out
in
loop
ret
pop
mov
loope
fdivl
pop
xchg
pop
daa
cmp
adc
adc
push
mov
add
sub
mov
push
adc
xchg
out
push
adc
xchg
ds
sbb
aad
push
mull
push
and
add
adc
inc
lret
inc
xchg
adc
enter
push
les
mov
ret
cld
sub
testl
xor
pop
clc
mov
loop
cmp
test
loope
movsl
movsl
xor
sub
jbe,pn
fwait
dec
fisttpl
xlat
test
add
ja
sub
fstpl
mov
lock
mov
and
xor
cmp
pop
dec
out
and
cld
or
or
xchg
iret
sbb
dec
lock
aad
push
call
jne
outsl
mov
iret
insb
add
pop
movsb
dec
push
hlt
push
adc
xlat
cmc
outsl
cmp
hlt
xchg
dec
or
jge
lahf
fs
aad
cmp
not
repz
sub
add
sbb
shrb
or
daa
inc
repz
mov
daa
jg
shrl
xor
into
pop
mov
gs
out
sti
roll
rcrl
push
adc
jo
pop
leave
mov
ss
pop
test
lret
cld
test
mov
adc
jnp
cltd
adc
and
out
sbb
sbb
jle
test
push
jno
clc
out
pop
jbe
test
xlat
push
sahf
or
popf
xor
mov
add
cmpsb
cmpsl
jno
pop
loope
inc
pushf
pop
jge
icebp
inc
in
add
xchg
add
xchg
sbb
test
cmp
clc
add
inc
clc
jecxz
outsl
sub
mov
decl
lea
fnstcw
mov
inc
push
push
mov
dec
mov
mov
test
mov
xchg
sbb
enter
add
loop
mov
movsl
or
outsb
call
and
aad
mov
pop
and
imul
je
adc
push
shlb
dec
mov
inc
cmp
push
mov
or
lea
pop
adc
sahf
add
ljmp
push
mov
out
push
fwait
and
int
and
sub
lods
nop
cld
sarl
jl
mov
cmp
inc
push
dec
arpl
sbb
mov
lea
inc
outsl
jge
lret
cmp
dec
push
push
sahf
iret
xchg
pop
bound
sub
jno
rorl
jb
dec
dec
loop
dec
jge
jb
movsb
std
mov
fnstcw
xchg
lret
lods
int
xor
in
xchg
inc
and
jecxz
fstpl
xor
cmp
fiaddl
sub
sub
push
and
pop
mov
stos
pop
jl
fcoms
repnz
scas
sbb
sub
or
push
mov
xor
imul
sbb
mov
gs
mov
sub
add
aad
pop
iret
sarb
pop
mov
mov
xor
cli
inc
or
in
inc
in
into
mov
sub
dec
lock
push
xor
adc
iret
sub
mov
nop
cmpsb
adc
dec
push
nop
jle
push
inc
and
test
movl
sub
ret
mov
mov
fiaddl
mov
push
inc
push
in
jle
movsl
or
sub
mov
mov
bound
dec
push
insb
jl
popf
imul
xchg
and
fsubl
out
lds
jb
inc
in
out
push
arpl
jg
or
jg
push
aad
xlat
lods
add
or
insb
inc
xchg
push
dec
ret
xor
nop
shrl
repz
mov
xor
add
sbb
mov
inc
xor
shrb
ffreep
xlat
mov
push
ljmp
jno
bnd
sbb
icebp
jge
outsb
mov
lods
js
mov
jecxz
add
aad
or
mov
adc
inc
out
xchg
sbb
add
sarb
xchg
repz
mov
imul
xor
pmulhuw
ja
pusha
rcll
add
xor
fwait
add
push
cmp
test
push
in
pop
icebp
pop
cs
mov
cmc
js
add
cmp
cmp
aad
jo
shrb
sbb
jb
inc
mov
mov
jecxz
jmp
inc
xchg
push
aas
pusha
dec
mov
mov
or
popf
mov
jle
inc
lahf
popf
lods
shlb
lret
aam
repnz
mov
mov
icebp
push
jb
mov
jns
xchg
lahf
enter
mov
repnz
out
or
adc
lahf
aad
pop
div
insb
adc
and
pop
xchg
inc
lret
and
out
and
scas
inc
ljmp
jecxz
cvtps2pi
pop
push
out
mov
out
gs
into
movsl
sub
push
lods
ds
in
jmp
push
inc
or
add
mov
or
daa
repz
or
pop
imul
cltd
jo
jbe
mov
sub
ljmp
push
into
test
outsl
out
fadd
and
hlt
movsl
scas
outsb
mov
lahf
iret
sub
jmp
xlat
icebp
lret
sub
mov
push
mov
lret
xor
mov
sbb
mov
stos
lods
add
es
inc
incb
cmpsb
std
mov
push
call
jecxz
lea
aaa
mov
shrl
dec
push
or
loope
mov
rcrl
or
out
jmp
mov
popa
test
leave
xchg
jecxz
out
dec
dec
push
loopne
inc
fisubs
fnstenv
cmp
scas
xor
mov
fbld
push
out
push
cld
mov
mov
iret
adc
mov
fmull
ss
stos
rcrl
subb
push
and
mov
cltd
mov
push
and
xor
pop
sbb
inc
outsb
out
pop
sbb
pop
dec
out
pop
xchg
cmp
dec
xchg
dec
mulb
dec
mov
int3
push
mov
sbb
js
adc
fldcw
mov
pop
pop
cmc
dec
movsb
cld
xchg
ficoms
inc
or
insl
adc
popf
pop
movsb
test
push
pop
in
imul
aas
rol
out
jbe
xchg
jb
leave
cmp
pop
fucom
nop
sub
jle
into
dec
scas
loope
mov
data16
pop
inc
pop
xor
shl
idivl
sub
dec
jle
jne
dec
loope
aad
mov
push
pop
rclb
jge
sbb
jno
out
nop
sbbl
mov
loope
sub
or
sbb
mov
jle
xchg
mov
js
dec
pop
or
adc
dec
dec
inc
pop
pop
cmp
lahf
xchg
sbb
push
cmp
bound
sahf
mov
aam
add
and
sti
popa
pop
add
jp
jne
sbb
adc
stc
cmp
add
mov
in
lahf
xchg
test
xorl
jb
orl
ret
add
dec
movsl
xchg
push
cmc
ds
fwait
sub
rcr
mov
mov
daa
outsl
in
push
repnz
dec
jno
jmp
pop
mov
xor
push
add
test
loope
cwtl
call
es
or
and
and
jns
les
pop
je
mov
movsb
and
jle
rcrb
notl
std
push
fs
add
out
push
sbb
sti
dec
insb
aam
mov
jbe
pop
pop
mov
jl
cld
xchg
mov
bound
xchg
cld
pop
lods
lea
jae
clc
ja
icebp
test
adc
push
call
jmp
mov
test
dec
adc
std
jne
and
pop
cltd
xor
mov
and
das
cmpsb
mov
inc
pop
adc
mov
and
pop
imull
ret
sub
mov
ficoms
add
mov
mov
gs
mov
xlat
shll
jge
xor
aam
mov
add
mov
sbb
mov
add
je
loopne
popa
xchg
fs
pop
xchg
mov
sub
enter
xadd
mov
fnstenv
push
dec
add
cltd
xor
xchg
dec
xchg
mov
std
or
incb
clc
add
inc
sub
adc
stc
fldenv
push
push
jle
mov
pop
aad
pop
pop
jle
inc
mov
sub
dec
es
jb
dec
adc
xchg
int3
insb
mov
fistpl
mov
call
rorb
fdivp
dec
pop
imul
pop
fldl
push
jns
dec
movq
cmp
cmpb
add
call
xor
jne
or
test
aam
insl
js
es
push
pop
push
mov
in
push
mov
push
jg
imul
pop
or
xor
dec
mov
inc
incl
mov
dec
add
lret
jne
and
outsl
jnp
fsubr
dec
bound
cmp
js
push
cmp
jmp
je
test
decl
sbb
dec
mov
xchg
testl
sbb
ljmp
mov
mov
lock
out
aaa
icebp
cld
mov
push
decb
pop
hlt
pop
fsubrp
xor
outsl
inc
mov
aam
xchg
adc
notb
add
xchg
adc
test
sahf
dec
pop
enter
lret
mov
test
adc
xor
push
sub
xchg
andb
mov
mov
fildl
adcl
push
jo
popa
into
gs
cld
ja
leave
jae
push
pop
aam
cmpsl
outsb
or
jnp
fnstenv
and
ds
sbbb
cmp
or
adc
xlat
sub
lea
inc
mov
loope
sti
mov
xor
add
movsb
arpl
push
adc
add
das
stc
popf
add
or
adc
xchg
mov
repz
inc
jae
ja
jnp
adc
adc
arpl
insl
mov
mov
xor
sub
ljmp
jb
xor
aas
jp
pop
and
cmpsb
sub
inc
sbb
push
in
cmp
roll
loope
in
pop
sbb
stos
and
imul
inc
pop
mov
int
pop
pop
inc
lods
icebp
repnz
repnz
sub
push
test
jae
xor
sub
cmp
sub
test
clc
je
inc
test
add
test
inc
fs
pop
out
insl
sbb
jo
pop
repnz
bound
or
pusha
cmp
js
cmpsb
out
test
pop
cwtl
mov
iret
pop
mov
cmpsb
mov
dec
shrb
mov
neg
mov
std
out
cld
cmp
mov
cwtl
orl
out
pusha
aaa
or
mov
mov
es
lret
xor
scas
ja
in
sbb
scas
das
les
push
shll
jno
adc
mov
inc
lcall
fsubrs
pop
pop
mov
les
xchg
push
add
jno
fwait
jle
cmp
test
push
mov
les
mov
sbb
sti
mov
dec
pop
cli
inc
sbb
sub
push
popf
pop
pop
sti
push
add
aas
stc
je
lods
xor
mov
ret
arpl
loop,pt
je
in
pop
adc
jg
fcomps
inc
jb
dec
cmp
xchg
mov
add
fstl
mov
adc
dec
mov
xor
push
mov
mov
pop
shll
into
lock
fdivl
mov
scas
jmp
add
pop
pop
adc
in
sbb
adc
cmpsb
shll
adc
pusha
insl
jb
loopne
jne
dec
mov
inc
adc
sbb
xor
test
add
xchg
jo
dec
and
pusha
pminsw
ljmp
sub
out
inc
xor
pop
sarb
dec
out
pop
out
push
hlt
xor
xchg
rorb
inc
les
cmp
shlb
adc
sahf
sbb
inc
and
in
cmp
leave
or
mov
in
xchg
push
or
dec
xchg
push
inc
jp
bound
add
ljmp
mov
loopne
loop
mov
xor
jns
cmp
push
mov
testl
and
push
scas
pop
adc
cwtl
mov
dec
pop
int3
push
out
xchg
mov
and
push
pop
aam
cmpsl
ds
mov
and
cmp
outsl
repnz
fmuls
leave
inc
into
and
call
aaa
mov
adc
outsb
mov
in
fwait
cmpb
mov
imull
popf
xor
push
push
jle
add
insb
mov
pusha
int
mov
pop
aad
test
mov
das
pop
out
leave
test
outsl
leave
aas
sbb
xchg
sub
bound
int3
pop
mov
xor
xor
push
movsb
mov
mov
daa
add
fimull
push
inc
jp
pushf
int3
adc
outsl
cmp
dec
mov
lahf
mov
inc
pop
arpl
jns
mulb
pushf
movsb
imul
mov
rcl
cmp
xchg
inc
mov
dec
iret
rorl
into
popfw
lods
iret
movsb
data16
enter
imul
sub
inc
mov
bound
cmpsb
popf
int
sbb
sub
xor
cli
movsl
jb
mov
shl
push
mov
sbb
mov
arpl
iret
stos
add
or
into
fwait
ds
test
jo
cmp
sahf
test
scas
pop
shlb
push
mov
insl
int
pushf
xor
xchg
pop
sbb
repnz
bound
lods
cmpsl
pop
call
add
es
mov
test
stc
xchg
adc
mov
repnz
out
jne
or
inc
mov
out
push
lods
call
movsb
sbb
sub
xchg
outsl
mov
pop
mov
ds
jmp
push
out
ds
out
dec
mov
aas
paddb
adc
mov
push
adc
daa
inc
xor
fucomp
inc
cmpsb
in
loope
mov
mov
inc
push
jae
xchg
test
in
fcomps
jmp
xchg
add
imul
lret
mov
sbb
test
add
arpl
mov
fstl
shll
dec
push
fwait
jp
push
mov
iret
loope
adc
test
test
xchg
pop
jne
in
fsubs
aad
outsb
daa
bound
shl
dec
mov
add
xchg
ljmp
sbb
in
call
mov
push
pop
xor
ja
jo
idiv
test
mov
fwait
pop
movsl
inc
in
inc
jne
xor
inc
push
push
jbe
fidivl
dec
or
jmp
in
adc
imul
mov
mov
mov
dec
jno
push
sbb
mov
aam
outsl
push
outsl
andl
stos
push
je
jp
xchg
xchg
cwtl
je
movsl
stos
and
cmp
mov
pop
shlb
add
imul
sbb
xor
cmc
mov
mov
pop
inc
test
push
mov
push
out
loop
pop
ja
and
fbld
or
or
scas
les
ja
pop
xor
ja
packssdw
stos
incl
add
dec
in
mov
imul
cs
jne
cwtl
sub
mov
and
mov
jns
xor
xchg
rorl
push
clc
repnz
mov
loopne
cmc
inc
cmpsb
xor
lret
or
mov
ret
outsl
fmull
int
and
add
insl
inc
xor
inc
pop
lcall
clc
mov
jmp
sub
pop
mov
lcall
sub
sub
repz
in
dec
pop
push
mov
mov
call
loope
stos
sub
das
outsb
jbe
addr16
les
sub
jmp
aaa
mov
xchg
into
jmp
or
rcll
clc
std
push
fimull
jno
add
bound
sbb
and
pop
lods
inc
pop
mov
jg
jmp
adc
mov
or
pop
mov
fsubrs
filds
adc
test
and
ret
mov
or
adc
scas
pop
hlt
sbb
aam
mov
rorb
ret
mov
jle
aad
fs
pop
mov
fwait
insl
outsl
pop
push
lods
mov
addr16
int
imul
jp
mov
lds
mov
sbb
lea
cmp
or
dec
addr16
mov
idivl
push
popf
hlt
sbb
aam
sub
cmpsb
pop
fwait
lock
addl
iret
arpl
cmp
fst
sarl
fs
sbb
mov
add
xchg
cmpsb
gs
xor
lea
fs
and
scas
push
in
inc
push
movsb
shll
pop
leave
scas
call
test
push
push
xor
lds
and
repz
inc
ror
dec
cmpsb
jmp
mov
xor
daa
test
addr16
add
mov
mov
xor
insb
cltd
decb
xorl
aad
push
les
cld
lock
sbb
and
test
mov
repz
sti
cwtl
clc
sti
jb
push
cli
mov
push
add
andl
jb
test
mov
add
fistpl
or
and
movsl
and
sbb
mov
sbb
or
nop
pop
jle
pop
mov
sbb
es
fstpl
jg
inc
sub
mov
xchg
out
ja
and
fidivs
bound
pushf
ja
daa
mov
or
aad
adcl
out
cld
sarl
popf
pop
xor
push
in
lods
jmp
and
test
push
or
arpl
xor
stos
mov
jae
mov
jp
xchg
sub
jecxz
je
icebp
cmp
and
push
iret
repnz
push
es
rcrb
insb
add
mov
minps
test
xchg
es
dec
xchg
push
insb
cwtl
std
shll
fs
mov
xchg
lods
mov
mov
lret
call
xor
jp
loopne
mov
cs
insl
jg
sbb
push
lods
into
dec
loopne
lea
adc
xor
cmpsb
insl
es
out
cmpsl
jmp
inc
popa
fcmovu
fnstsw
mov
outsb
or
call
adc
xor
push
ffree
or
mov
data16
test
mov
fcom
dec
arpl
cmp
and
stos
sub
addb
dec
in
sbbb
push
fistps
mov
mov
push
pop
inc
shl
pusha
cs
jle
adc
ja
jae
xor
int3
cmpl
sub
sub
mov
int3
xchg
mov
mov
fnstenv
imul
mov
je
mov
out
imul
adc
push
mov
shrb
lret
adc
out
fbstp
dec
icebp
sbb
ja
cmp
test
repz
jae
sub
push
mov
dec
pop
add
mov
sbb
lds
fwait
xchg
lret
push
jp
pop
outsl
add
icebp
xorl
lsl
rorl
repz
mov
ljmp
xchg
xchg
push
push
sbb
sub
ljmp
mov
push
sti
pop
add
ret
outsl
push
call
daa
xchg
outsl
push
xchg
jle
ret
cmc
ljmp
dec
cmp
or
and
jl
pop
push
xorl
xchg
test
mov
dec
jns
mov
rclb
bswap
js
sti
pop
out
dec
lods
mov
rcrl
sbb
sbb
stos
cmp
ljmp
jbe
ja
insb
lahf
pop
jp
test
pop
movsl
lods
lods
test
mov
loopne
das
mov
adc
mov
dec
mov
popf
mov
clc
testb
sbb
mov
xor
and
or
push
jmp
fisubs
sub
jmp
fstpl
cld
dec
bound
push
jmp
cmp
aas
and
std
jo
leave
push
fidivl
pop
add
mov
and
shlb
xchg
sbb
addr16
cwtl
sub
ss
fdivl
push
cwtl
and
inc
and
cmp
pop
push
int3
jl
mov
adc
sahf
xor
mov
xor
sbb
ficomps
jns
mov
pop
out
or
xor
sub
cli
push
in
std
sahf
shl
dec
push
add
dec
in
adc
jecxz
popf
cwtl
jae
xchg
movsl
mov
notb
dec
xor
popa
xorl
insb
xor
xor
insb
cmp
inc
pop
or
sub
test
ret
pop
mov
loope
fiaddl
push
fsubr
push
pop
repz
out
insb
pop
sbbl
scas
mov
js
pop
cmc
fcomps
fsubrl
mov
xor
add
int3
lods
dec
stos
mov
fidivl
lret
mov
and
push
call
mov
popa
cs
mov
ret
dec
dec
das
mov
bound
movsl
cmp
adc
gs
cmpsb
mov
adc
add
inc
movsl
aad
rcll
sub
popf
testl
inc
mov
sub
pop
fidivs
add
mov
mov
rcl
imul
outsl
enter
incl
pop
ud1
jns
sti
loop
outsl
add
mov
mov
es
outsl
xor
shll
out
push
xchg
sbb
jbe
add
mov
test
jns
mov
add
jo
imul
push
aas
mov
cmp
mov
add
mov
lds
lahf
dec
or
mov
push
lods
ds
shll
mov
lods
mov
mov
es
aad
push
or
or
cmp
mov
cmc
lea
repnz
loop
pop
cmp
push
pushf
shrl
out
pop
adc
lret
daa
mov
add
mov
js
adc
addr16
dec
mov
xchg
jmp
shlb
cli
or
inc
xor
push
in
jmp
jno
imul
jmp
movsl
cmp
les
mov
pop
sbbb
in
and
stc
imul
scas
add
mov
sbb
ret
jle
out
movsb
fcoml
in
add
cmpsb
mov
sub
fs
xor
xchg
xchg
mov
add
or
push
mov
sub
pusha
push
adc
jae
sub
jmp
out
ljmp
aaa
or
in
jge
xor
xchg
ljmp
les
xorb
inc
adc
scas
inc
loope
notb
lcall
shll
stos
xchg
dec
shlb
mov
rolb
add
fs
pop
mov
mov
mov
jg
shll
pop
rorb
fidivs
test
insw
add
push
ds
imul
shl
xchg
movsb
dec
cmp
jle
test
push
je
sbb
push
aaa
shl
dec
push
lcall
aas
dec
push
push
mov
dec
mov
je
shrb
fidivrs
mov
pop
sub
arpl
seta
inc
test
mov
pop
xor
inc
cmp
inc
inc
jl
mov
xchg
mov
jle
enter
rcr
rorb
and
test
mov
cltd
insl
mov
test
outsl
in
pushf
popf
mov
cmpsl
popf
mov
fiaddl
lahf
mov
dec
mov
test
repnz
cmp
adc
repz
push
adc
xchg
sbb
lods
xor
ljmp
xor
les
in
shlb
mov
enter
in
movsb
pusha
pop
and
sub
inc
in
lea
sub
aad
cmp
imul
fimuls
stc
or
sub
sbb
les
mov
cmp
rcr
in
pop
ret
fisttps
and
jae
test
into
lods
outsb
adc
cld
dec
movsl
test
fldcw
inc
cmp
xchg
push
push
mov
jle
in
xorl
sbb
rorb
add
popf
xor
mov
fsubp
pop
mov
jb
aas
shl
icebp
sub
movsl
movsl
idiv
or
sub
add
iret
adc
int3
arpl
ljmp
push
shlb
fldenv
or
mov
xchg
dec
lret
dec
and
xor
xchg
aas
cmp
cmp
loope
sbb
xchg
xchg
add
mov
sbbl
into
inc
sahf
xor
cltd
bound
ret
clc
jns
inc
loope
shl
fs
sbb
rorl
hlt
dec
pusha
hlt
sarl
pop
cmp
ret
mov
dec
leave
and
or
xchg
mov
sbb
push
dec
test
jle
repnz
cmp
bound
sub
fstp
hlt
mov
adc
adc
xchg
cmp
cmpsb
cmp
pop
sub
inc
xchg
dec
leave
pusha
jl
in
xchg
adc
arpl
das
pop
out
pusha
cli
xor
notb
jns
add
or
pop
mov
testb
mov
cwtl
mov
and
jmp
mov
fs
fs
es
jo
xchg
popa
clc
mov
xlat
jg
xchg
mov
pop
dec
test
notb
scas
dec
sub
jg
fcoms
mov
cwtl
shrb
mov
stos
push
sahf
or
pop
out
dec
insl
loop
xchg
adc
cltd
xor
test
lock
push
js
das
add
fsubs
fmull
xchg
pop
cltd
pop
out
out
sbb
shlb
aas
imul
stc
jb
xor
mov
into
xchg
sub
mov
jb
js
cmpsb
push
stc
je
xchg
cs
addr16
mov
insb
pop
cli
mov
jnp
adc
test
sbb
xchg
pop
scas
inc
cmc
xchg
mov
vpcmpgtb
mov
and
jae
xchg
lea
fldt
sub
popa
clc
aaa
mov
fwait
cli
mov
loope
mov
push
lds
inc
fdivs
ja
sbb
inc
fisubl
dec
push
loope
test
stos
sbb
xor
insl
cmp
cmp
push
outsl
cmp
push
sbb
push
in
fdivl
xchg
loopne
inc
push
sti
xchg
cmp
jno
hlt
adc
mov
mov
scas
call
push
lcall
jmp
mov
sub
push
and
pusha
outsb
stc
arpl
mov
sbb
jne
subl
push
sahf
xchg
sub
xor
xchg
mov
sbb
inc
loope
add
cld
mov
lea
push
loopne
pop
or
add
aas
movsl
fcmovnbe
pop
mov
enter
mov
sub
mov
cmpsl
cmp
pop
hlt
dec
insb
push
xchg
mov
adc
outsb
push
lcall
rcrl
in
dec
add
pop
mov
subl
stc
imul
gs
das
or
out
adc
cmp
sbb
aad
cmp
data16
pop
movsb
xchg
ficomps
mov
out
xor
mov
stos
sub
outsl
fstpt
std
mov
mov
scas
test
sbb
mov
add
call
mov
stos
inc
ja
aad
push
stos
enter
pop
push
mov
loopne
and
jecxz
leave
adc
lods
std
out
int
test
xor
ss
mov
rcrl
sub
mov
and
leave
ret
in
mov
and
push
pop
inc
scas
push
push
pop
jmp
popa
adcl
mov
mov
mov
repnz
fdivs
or
enter
lea
lret
add
push
adc
xchg
roll
clc
xor
shlb
and
cmp
inc
pushf
es
inc
in
or
cmp
mov
mov
addr16
cmp
jb
mov
dec
sbb
mov
cmp
mov
ds
es
pop
sub
adc
xchg
fldenv
mov
adc
xchg
jle
xor
nop
inc
cmp
cltd
push
daa
dec
popa
and
jmp
or
es
and
in
mov
ljmp
ret
daa
neg
pop
pop
inc
mov
push
jne
add
add
inc
xchg
jl
repz
mov
jecxz
xor
pop
imul
dec
lods
inc
dec
cmc
lea
mov
lret
ss
sbb
and
adc
mov
mov
dec
push
mov
repnz
adc
std
mov
mov
xor
lods
adc
loopne
cld
xor
iret
mov
frstor
popa
add
inc
jb
lods
cmp
aad
jae
into
mov
xchg
push
xchg
mov
lret
pop
imul
jns
inc
test
push
jmp
jmp
loope
cmp
jle
mov
cmpsb
out
cmpsl
xor
into
call
js
pop
sub
addr16
pop
xchg
mov
mov
test
sub
jb
pop
pop
rolb
add
or
sub
sub
sti
jmp
int
lods
ja
test
fs
jmp
call
loopne
xor
fimull
jbe
or
pop
xlat
outsl
xchg
cmp
or
cmpsb
cmp
ljmp
ret
sahf
data16
jmp
dec
scas
mov
fidivs
and
and
mov
shl
pop
xchg
sub
or
push
dec
xor
pop
dec
insl
push
lahf
jp
pop
mov
mov
xor
push
fsts
mov
pop
lahf
psubusb
fstl
and
or
sub
sbb
mov
sub
push
xor
inc
jo
ret
into
or
mov
ds
pusha
mov
inc
pushf
aaa
fnsave
inc
cli
gs
adcb
popf
enter
insl
inc
add
sbb
and
mov
jg
fs
sub
sahf
mov
data16
push
xchg
jp
pusha
outsl
imul
scas
in
and
clc
push
aad
or
mov
jb
xor
add
mov
push
sub
inc
data16
push
jmp
icebp
xchg
cltd
sub
push
push
das
push
leave
andl
cmp
xchg
insb
mov
sub
enter
fwait
cmp
rcll
repz
fmul
pop
mov
inc
lcall
fcmovne
fs
cwtl
xor
cld
loope
mov
roll
push
adc
mov
ret
rcll
mov
jne
mov
fildll
push
cmc
test
fwait
subb
shlb
pop
adc
and
nop
mov
cmp
jno
fmull
scas
outsb
push
bound
cmp
push
in
sbb
ja
inc
xchg
loope
inc
mov
push
push
jne
or
cmpsl
push
stos
sub
shll
cs
lds
adc
js
insl
mov
or
sbb
mov
xor
loope
ficoml
stos
or
std
fstl
cs
push
stc
and
dec
ficoml
push
add
pop
loope
in
inc
fiadds
out
xor
xor
add
lock
fstps
pop
cmp
testb
mov
push
adc
mov
inc
repz
call
inc
sub
sub
popf
lcall
xchg
gs
xsha256
cmpsb
xchg
push
xchg
inc
xchg
aas
or
add
mov
lcall
cmpsl
imul
and
pop
push
je
lock
pop
xlat
jmp
lcall
xchg
mov
sub
les
test
jmp
push
ficoms
mov
sbb
and
ficompl
xor
mov
xlat
inc
fiaddl
cmp
mov
or
dec
pop
daa
sub
sbb
xchg
pushf
decb
stos
nop
or
add
push
in
lds
icebp
cltd
out
xlat
andl
push
xchg
shlb
ljmp
loope
int
int3
sub
rcll
mov
movsb
cltd
and
push
pusha
gs
sbb
pop
xor
into
push
popf
xor
fcmovnu
ss
fs
pop
fsts
mov
push
ret
jp
cmove
lock
add
mov
ficompl
mov
sub
jbe
inc
xchg
pop
and
popa
dec
movsb
jnp
jmp
push
popa
aas
mov
repnz
pop
js
dec
data16
add
dec
adc
push
mov
lea
and
and
mov
mov
mov
ret
and
mov
pop
pop
mov
mov
xlat
addl
arpl
ficompl
in
aam
mov
inc
dec
sarb
pop
cmp
shlb
sti
dec
xchg
stos
dec
pop
jmp
rolb
int
data16
dec
cmc
out
shl
xor
cmp
mov
fidivl
mov
rep
ret
push
inc
or
std
jo
jne
mov
in
dec
dec
in
push
push
mov
sbb
aaa
aam
imul
fadd
xor
xlat
rcrl
rol
dec
fnstcw
and
aam
rorb
test
fnsave
call
lcall
pop
mov
stc
dec
add
ja
mov
enter
loopne
or
fwait
aad
mov
sub
xor
sti
iret
add
into
sub
mov
ljmp
push
push
hlt
inc
inc
test
ja
loope
rcrl
add
orl
cs
fimuls
dec
data16
sbb
andl
sbb
pop
or
and
outsb
sbb
mov
mov
inc
adc
leave
dec
pushf
testl
mov
sbb
test
jnp
sub
push
mov
insb
pop
lret
cld
cmp
mov
sbb
pop
xchg
add
sub
enter
es
and
lds
mov
sub
inc
mov
inc
imul
loopne
jne
or
sub
push
call
pusha
inc
outsl
jmp
repnz
movsl
adc
dec
add
loope
jbe
xchg
xchg
mov
fidivrl
jl
cmp
jle
in
lret
cmp
cld
insl
adc
addr16
test
loopne
in
insl
test
out
fisttpll
out
inc
iret
sbb
inc
dec
aad
cmc
popl
js
ror
pop
sbb
in
dec
ficomps
jmp
loope
add
fbstp
int3
dec
adc
in
adc
and
cwtl
push
push
les
jb
insb
roll
and
sbb
xchg
fsubrl
outsb
xchg
mov
ljmp
xchg
jb
enter
out
data16
sbb
loope
sub
fs
push
rcrl
movsl
ret
int
jmp
movsl
cltd
iret
push
or
pop
xchg
dec
add
inc
fimull
and
jne
cmp
cmp
add
mov
jp
fs
lods
mov
data16
pop
and
imul
call
mov
or
sub
inc
movl
outsl
push
arpl
js
inc
test
xlat
mov
jle
sub
es
jle
cmp
daa
imull
pop
pop
bound
fs
pop
xlat
dec
repnz
and
inc
inc
push
cmpsb
mov
aad
in
fs
jmp
mov
jo
lret
clc
sbb
sub
xor
mov
ljmp
push
jge
iret
in
jbe
pop
pop
ljmp
push
js
mov
jecxz
leave
adcb
popa
or
lds
pusha
push
pushf
sbb
testl
loop
adc
sub
or
inc
sahf
inc
dec
fdivrs
inc
jecxz
outsl
add
in
nop
shrl
jae
dec
mov
rcrl
scas
and
mov
data16
call
push
in
iret
bound
jo
je
mov
push
push
aad
adc
in
pushf
dec
push
mov
cli
mov
jno
lcall
push
popa
rcrb
cmp
sti
sub
cmpsb
cmpsl
test
jno
jns
sti
or
mov
aad
dec
lods
fbstp
dec
popa
inc
xchg
jecxz
mov
adc
mov
test
int3
mov
in
mov
outsl
pop
mov
mov
adc
jmp
push
and
call
push
ja
in
add
std
or
ret
xor
insl
data16
test
cmp
jns
xor
imul
pop
mov
roll
inc
jnp
shll
aam
pop
jl
lods
push
test
sub
enter
inc
xorps
fists
out
pop
outsl
fbstp
mov
mov
xchg
adc
call
mov
mull
in
sub
push
xchg
outsl
testl
subb
ror
jo
hlt
js
add
fsubs
aaa
repnz
pusha
cmp
dec
fidivs
xchg
lret
push
fnstenv
andb
xchg
call
mov
push
out
scas
adcb
jae
bound
jns
into
paddd
xchg
sub
sub
mov
add
shrb
mov
xchg
aas
mov
repnz
mov
and
test
enter
or
jecxz
insb
js
xchg
testb
mov
in
test
push
stc
lret
les
jmp
icebp
pop
insb
arpl
scas
xchg
test
xchg
mov
fistpl
cmc
and
ja
in
movsl
in
xchg
xchg
insb
cmpl
mul
outsb
outsb
ret
adc
movsb
jge
dec
test
dec
leave
inc
jl
js
mov
sarb
out
imul
and
cmp
into
stc
push
insl
adc
push
in
or
sub
mov
lods
xchg
pop
aaa
dec
mov
pop
int3
stos
mov
icebp
or
out
push
insb
jl
cmp
out
out
sub
cmp
fsubr
sub
pop
or
mov
mov
ja
nop
jl
push
ss
lods
inc
das
fwait
mov
adcl
bound
mov
test
stos
imul
xchg
xor
push
sub
stos
cmp
adc
xchg
cmpsb
push
sti
andb
mov
sbb
call
loop
in
inc
push
xchg
dec
mov
out
loopne
in
add
push
mov
ja
cmpb
push
stos
sbb
iret
mov
mov
mov
ror
leave
les
push
xchg
add
icebp
push
dec
loopne
adc
and
mov
mov
xchg
fsts
cmpsl
or
jl
jbe
das
dec
cwtl
cmp
in
js
nop
lock
sub
push
sbb
fsubrs
jp
aas
nop
ret
pop
out
mov
cmp
sbb
std
pop
mov
mov
in
xlat
xor
out
mov
repz
loop
xchg
add
cmp
loop
jg
jge
jno
sub
outsl
pushf
lods
pusha
and
jmp
adcl
mov
and
out
fcomi
into
mov
mov
xlat
cmc
mov
sbb
lahf
ret
jmp
jg
insl
mov
pop
jmp
aam
insl
iret
fsts
mov
mov
add
sub
xchg
mov
xchg
insl
pushf
fsubrs
ja
xor
jnp
sub
cmpsb
mov
xchg
adc
lcall
loop
lds
push
test
and
mov
aam
out
xor
cmc
fs
outsb
loope
mov
inc
mull
lock
add
and
push
mov
xchg
test
cmp
out
inc
repnz
bound
push
dec
dec
iret
xchg
pop
fadd
xchg
sbb
fwait
push
call
test
icebp
jecxz
stos
stos
xchg
test
mov
test
mov
dec
mov
fsubrp
add
out
loopne
gs
pop
inc
pusha
jp
mov
movsl
cwtl
aaa
fwait
int3
xor
pop
scas
shr
in
scas
shrb
ljmp
xchg
mov
stos
push
scas
sbb
cmpsl
dec
mov
jle
dec
cmc
nop
sbb
mov
jg
fdiv
sub
push
mov
andl
pop
mov
ds
push
testl
inc
shrb
hlt
out
jge
sbb
push
fsubrl
xlat
scas
ds
xor
fdivl
dec
daa
or
aam
jmp
mov
testl
aas
imul
xchg
das
adc
iret
es
lret
jmp
loopne
mov
fsts
int
cmp
inc
mov
mov
dec
jae
cmc
int
or
bnd
push
or
movsb
push
aas
lea
pop
mov
mov
or
mov
mov
ljmp
pop
sbb
leave
ss
pop
push
fwait
js
aaa
test
fidivrl
imul
mov
mov
inc
mov
loope
popf
frstor
les
std
jnp
popa
cmp
cld
xlat
inc
adc
inc
jp,pn
fwait
popf
mov
out
cmp
xor
pop
and
push
push
xchg
test
js
movsl
sbb
and
lahf
stos
daa
hlt
stc
je
iret
out
ja
cli
jmp
sub
addl
sti
daa
lcall
adc
mov
cmpb
repz
jnp
pop
mov
mov
ja
xchg
rorl
and
fcomps
and
out
ret
lock
pop
out
jle
xchg
iret
dec
inc
xchg
repz
stc
adc
cmp
inc
lea
iret
pop
std
repnz
jnp
mov
jnp
fs
std
xchg
adc
inc
sub
std
cmpxchg
daa
mov
vmulsd
fchs
jb
pop
jge
jl
mov
lock
ja
adc
in
mov
or
mov
cmpsb
inc
pop
mov
pop
bound
and
cli
pop
pop
imul
lret
popa
cwtl
adc
sahf
cs
call
mov
sarl
cmpb
adc
or
ret
add
mov
cmpsl
add
aaa
push
ja
lcall
jne
sub
jg
inc
adc
jl
pop
and
jecxz
jl
xor
ficompl
dec
rcr
adc
pop
insb
mov
adcl
ja
sahf
jns
mov
mov
add
aam
aad
pop
adc
jg
mov
pop
push
inc
inc
inc
inc
fmull
inc
aas
insl
arpl
jp
inc
stos
fstpl
fstpt
jle
xchg
mov
lahf
aas
jno
dec
push
pop
add
fldlg2
pop
jno
shll
dec
pop
fwait
mov
rolb
divl
cli
sbb
dec
adc
push
pop
mov
iret
cmpsb
hlt
cs
mov
cmp
mov
mov
add
dec
and
mov
dec
cmp
pop
adc
psrad
aad
in
fistpl
mov
dec
mov
das
mov
adc
mov
mov
pushf
inc
jb
push
sbb
push
or
jg
js
jo
pop
xchg
std
cli
push
sbb
clc
iret
sub
push
ljmp
jb
roll
insl
in
fisubrs
adc
inc
loopne
mov
js
gs
nop
movb
shlb
push
loope
xchg
jl
ret
es
outsb
jle
push
clc
or
mov
cli
je
in
cltd
ljmp
inc
mov
lret
xor
dec
lret
add
ror
pop
xor
test
imul
mov
cmp
arpl
push
sbb
shl
insl
xchg
push
cmc
int3
jbe
repnz
jb
fisttpl
stc
pusha
loopne
mov
gs
lods
mov
iret
and
xchg
pop
sub
jno
pop
repz
add
movsb
mov
or
pop
adcl
push
mov
pop
inc
rclb
jl
mov
sbb
cli
mov
push
outsb
add
fmull
jns
pushf
xor
sbb
and
pop
stc
dec
mov
xor
andb
aam
mov
pop
fdivl
aas
iret
dec
gs
ja
popf
pop
loopne
imul
jp
lea
jle
or
push
hlt
sub
ficomps
fbld
pop
xchg
pop
and
or
adc
pop
cmp
mov
pushf
mov
inc
lahf
aad
in
loope
xchg
inc
jo
test
imul
lds
jne
pop
jge
adc
fdivrl
xor
mov
xchg
pop
in
pop
inc
cwtl
mov
lret
adc
push
jmp
mov
pop
sti
xor
out
mov
lods
xor
push
nop
cmp
jge
sbb
ficoms
loop
push
inc
push
add
xchg
and
sbb
rcrl
stos
adc
js
in
outsb
movsb
xchg
xchg
insb
adc
test
clc
lods
push
mov
dec
sbb
xor
sub
jecxz
cmp
dec
jne
popa
faddl
nop
test
mov
shlb
dec
rep
clc
push
xchg
push
jmp
jecxz
jno
add
jo
into
push
ds
loop
mov
out
aad
jno
jg
sbb
clc
dec
popa
pop
rcrl
inc
dec
pop
push
in
cmp
test
or
cmpsb
push
adc
dec
lcall
mov
push
repnz
imul
fwait
int3
and
jp
inc
fs
push
dec
repnz
mov
popl
xlat
push
cltd
and
andb
push
sbbl
add
xchg
fwait
adc
out
out
and
icebp
xorb
cs
jbe
xchg
repnz
pop
aad
pop
and
bound
mov
call
lock
dec
dec
cwtl
and
pop
dec
lret
testw
push
jno
fists
cmp
in
stos
dec
adc
shlb
mov
loopne
add
jle
ss
aaa
in
add
add
mov
push
inc
pop
xchg
dec
push
cmpsb
out
xchg
mov
hlt
sar
lahf
and
mov
mov
lds
test
pop
lret
pushf
mov
mov
subl
mov
das
xchg
and
jbe
mov
xor
pop
jno
movl
outsl
movl
xor
aam
ds
pop
out
jmp
cmp
cmp
pop
js
mov
repz
cmpsl
fldcw
mov
cs
xor
into
movsb
mov
and
dec
mov
addl
in
or
push
loope
test
pop
ljmp
jno
jecxz
rclb
mov
mov
fisubl
repz
mov
or
out
mov
or
lret
int3
popa
cmp
mov
insb
aam
mov
pop
shr
xor
cs
mov
leave
jae
rorb
imul
out
inc
movsl
or
or
sub
pop
ftst
testl
in
sbb
fistpll
insb
shll
push
push
dec
in
cmpl
sub
mov
xchg
scas
fucomp
out
popa
mov
cwtl
je
les
lods
push
in
jp
cltd
pop
mov
cwtl
pop
cmpsl
cwtl
jl
shlb
jbe
push
dec
push
jo
aaa
push
pushl
mov
mov
add
inc
data16
pop
out
push
push
leave
mov
inc
jbe
testb
jbe
sub
addl
add
mov
imul
scas
cmp
xor
push
int
enter
fiadds
cmpsb
cli
inc
xchg
imul
movsl
fnstenv
out
cmc
sbb
jns
adc
cmp
outsl
cmc
notb
mov
fcmovb
cmp
xor
sarb
pushl
lea
mov
fldlg2
outsb
int
inc
inc
clc
rolb
pop
daa
inc
cld
xor
aam
inc
sahf
pop
cmc
jo
mov
in
mov
imul
cmp
mov
divb
push
mov
iret
fnstenv
sti
jnp
pop
jp
fwait
out
rcl
xor
int3
pushf
sub
je
stos
mov
aam
inc
cmovns
mov
lods
fstl
or
dec
lods
mov
mov
sub
add
inc
div
imul
outsl
andl
cwtl
call
sbbl
push
pop
cmp
sbb
mov
jp
dec
pop
mov
pop
mov
fucom
mov
leave
test
loop
mov
je
mov
cld
sub
sub
cmpsl
ljmp
mov
inc
lret
aaa
rol
adc
sub
and
mov
xchg
inc
sbb
mov
pop
int3
lret
inc
loop
lods
js
test
call
xor
mov
mov
rorb
sbb
std
cmp
testl
cmpsl
pop
sub
cwtl
xor
cmp
lods
and
mov
cltd
cmc
and
test
sbb
sbb
loopne
jg
cmp
ss
xsha1
cmpsb
leave
pop
mov
insl
adc
dec
popa
mov
popa
vpcmov
movsl
pushl
sub
and
lret
mov
lods
rcpps
xchg
adc
cmpsb
sbb
xchg
or
loopne
xor
lahf
daa
scas
push
xor
pop
sub
rol
adcl
pop
jno
je
ja
mov
outsb
jp
sbb
pop
mov
add
jp
add
sbb
mov
out
lret
enter
mov
movmskps
add
sbb
ljmp
cmpsl
jp
jns
add
cmp
pop
stc
je
aad
mov
sbbb
js
or
sub
sbb
lods
jl
and
aaa
mov
adc
mov
imul
stc
or
leave
test
dec
xchg
xor
aaa
cli
dec
stos
outsb
fidivl
ja
lods
mov
mov
rcl
sub
xlat
mov
inc
fcoml
xchg
pop
rcrb
imul
sbb
daa
insl
sbb
or
cmpsb
cmp
and
pop
jmp
clc
sub
push
js
jae
dec
test
aam
sub
add
stos
movsl
sbb
idiv
das
sub
cs
adc
dec
cli
xor
xlat
xchg
mov
test
scas
sbb
jmp
cmp
es
aad
mov
mov
fstps
mov
sbb
arpl
imul
cmc
xchg
mov
out
sub
cwtl
xor
jae
and
add
pop
add
cmp
test
mov
lret
mov
popf
pop
pop
shll
idivb
inc
cli
dec
adc
outsl
sub
pop
mov
loop
lretw
mov
fst
or
das
add
rol
pop
test
mov
sahf
divb
int
es
cmp
dec
jecxz
sub
lods
xor
fstps
mov
dec
loop
cmp
dec
push
mov
inc
in
shll
mov
jle
mov
xchg
mov
stos
inc
inc
icebp
call
pop
loop
mov
jle
mov
add
fwait
xlat
mov
lea
ret
div
outsb
mov
inc
push
lods
lds
hlt
xlat
rol
push
xchg
ret
fildll
test
loop
ljmp
xlat
pusha
add
xor
lret
std
stc
jnp
scas
scas
dec
dec
test
jg
cmp
xchg
in
scas
dec
dec
subl
pop
or
pop
mov
clc
push
cmp
lods
insb
add
xchg
xor
std
mov
movsb
adc
es
dec
mov
inc
fdivrl
daa
dec
push
jmp
in
cmc
cmpl
mov
lods
and
jns
into
sbb
dec
lock
jbe
xor
push
xor
sbb
push
stos
movsb
mov
inc
mov
je
sbb
fwait
lods
test
outsl
or
push
arpl
mov
mov
jmp
adc
mov
fcomi
movsb
xor
cmpsl
push
fsub
mov
repz
xlat
cli
push
dec
push
in
jnp
fcoms
jecxz
sub
repz
mov
inc
scas
or
fists
mov
outsb
pop
and
pop
jle
xchg
sub
mov
xchg
push
cmp
in
jno
dec
jecxz
jb
pop
lds
cld
inc
sub
in
ss
xchg
push
sahf
add
xchg
imul
xchg
mov
inc
movsl
sbb
sub
mov
lret
lret
push
mov
push
dec
fwait
dec
mov
sub
mov
shlb
or
out
lahf
push
mov
pop
std
jo
or
sbbb
mov
cmp
pop
sahf
sti
or
jp,pn
mov
rcrl
sysexit
push
in
outsb
or
add
cmpsl
jae
rclb
jne
sub
int3
into
es
xchg
pop
push
inc
fs
mov
mov
addr16
and
pop
jno
dec
inc
fnstsw
dec
stos
addr16
mov
lret
into
lcall
and
or
sbb
cs
lret
add
adc
add
imul
sub
repz
pushf
xchg
xor
pop
in
enter
cmp
test
nop
sbb
xorb
nop
js
enter
mov
xor
inc
adc
mov
xor
inc
sub
xor
jmp
jge
push
sub
lds
adc
push
mov
lret
cld
jle
mov
cltd
lahf
jbe
lods
cmp
adcb
adc
je
pop
jmp
sbb
sub
fcmovb
pop
or
cmp
cs
pop
push
arpl
sub
lock
or
in
mov
or
pushf
cmp
mov
mov
ret
hlt
sub
sub
gs
call
mov
cmc
and
ror
and
data16
and
push
popf
pusha
iret
test
lret
divb
outsl
cltd
jle
cltd
add
mov
les
das
push
or
jmp
mov
les
mov
fadds
insl
mov
test
lret
mov
add
mov
mov
mov
pushf
mov
jecxz
and
push
cli
xchg
ljmp
mov
cmpps
jp
cmp
jmp
or
rcrl
cmp
fstpl
dec
mov
fst
push
and
sub
jo
cmp
xchg
dec
mov
pushf
mov
jns
and
adc
sbb
mov
test
ss
xor
sub
pop
enter
rorb
mov
xlat
repz
cmpsl
mov
lods
in
dec
fstl
or
and
push
addr16
cltd
pop
sub
fldl2t
mov
mov
mov
insb
out
add
in
mov
jmp
mov
push
add
shlb
push
add
adc
rcrl
mov
cmpsl
scas
inc
sub
dec
int3
arpl
mov
mov
das
cli
lock
sbb
cmpsl
push
sub
imul
and
xor
cmp
sub
lret
and
mov
mov
bound
push
add
fadd
jno
add
imul
inc
out
cmp
sahf
shlb
in
inc
jne
stos
and
fisttpll
add
pushf
lret
test
gs
push
rcrl
xor
sbbb
test
add
xchg
or
icebp
movsl
test
mov
js
cli
xrelease
rcll
fistpl
sub
sbb
in
sbb
and
mov
inc
ret
cmp
sbb
ret
push
xor
or
cmp
sbb
sub
mov
repnz
call
xor
xor
cmc
sahf
aas
fdivl
adc
jp
lahf
mov
sahf
insl
rcrb
js
iret
and
lcall
mov
or
into
push
aam
outsl
push
iret
mov
sbb
pop
shll
xchg
sbb
xchg
jl
dec
bound
jecxz
hlt
movsb
push
sbb
xchg
dec
ja
inc
mov
fmul
rorl
stos
pop
cmc
fdivrl
cmp
movsb
push
in
aad
inc
in
jbe
or
sti
jb
ljmp
aad
xor
repz
nop
das
xchg
push
jmp
int3
es
cmpsl
jb
fldenv
imul
test
sbb
or
mov
in
outsl
adc
test
adc
fadd
lock
mov
push
dec
daa
jns
inc
mov
mov
lret
cmp
inc
cmp
lret
xchg
dec
jb
aam
push
scas
loope
xchg
outsb
xlat
insl
mov
rorl
lods
add
cmp
mov
insl
scas
daa
sbb
stc
lods
cmp
inc
xchg
test
leave
and
pop
neg
mov
test
mov
adc
jle
js
lods
std
mov
inc
loop
jns
push
aas
push
test
scas
push
jns
arpl
test
fstps
inc
inc
or
scas
call
push
pop
ljmp
inc
jnp
jne
or
in
pop
cmp
stos
xor
loopne
dec
popf
jb
cmpsl
mov
or
or
pusha
sbbb
sub
lods
push
rcrb
imul
add
movsb
test
lds
ret
dec
loop
push
push
push
push
adc
andl
rsm
stos
fistl
mov
or
dec
fidivrs
orb
dec
xor
iret
push
push
loopne
pop
fistl
push
loope
mov
jb
xchg
ljmp
xchg
xchg
cld
or
ret
ret
xchg
mov
lcall
xor
mov
pop
gs
cltd
pop
cmc
push
pop
insl
insl
mov
xor
dec
insl
loopne
test
sbb
cmp
lcall
dec
dec
and
push
repz
dec
subl
mov
out
enter
jge
jbe
fistpll
fldt
xchg
sub
jl
push
popf
ficompl
sbb
and
fs
mov
jmp
xchg
das
shrb
mov
imul
out
xchg
icebp
stc
nop
popa
jae
iret
aaa
test
mov
sbb
xchg
add
cmp
fdivrs
fnsave
or
cwtl
jmp
or
int3
movsb
out
in
sub
fidivs
jmp
std
mov
fimuls
lods
add
out
lods
mov
test
pop
cld
jecxz
es
inc
push
xor
dec
in
lahf
xchg
ljmp
es
xor
or
mov
mov
push
test
cmp
mov
and
jge
xor
mov
sahf
clc
test
into
enter
sub
dec
inc
xlat
cmpb
mov
jmp
sub
mov
sub
and
adc
icebp
or
jno
or
out
cmpsl
pop
jmp
cmp
mov
sub
fidivl
repz
jae
nop
movsb
pop
cwtl
js
sbb
mov
les
idiv
sbb
mov
push
cmp
and
pop
xchg
mov
sbb
xchg
cmp
push
jmp
push
nop
pop
pop
hlt
or
xchg
rcrb
flds
jg
cmp
pop
mov
stos
mov
push
rsqrtps
in
movlhps
std
adc
cmp
dec
cmp
push
aad
test
push
fs
mov
outsl
and
or
mov
loope
enter
ret
mov
add
movsb
push
cmc
adc
ret
hlt
addr16
rorb
mov
add
sub
insl
or
or
push
lea
sub
jns
cmp
stos
pop
inc
xchg
pop
stos
cld
in
mov
sti
pop
fsubrl
lahf
rol
fwait
jno
popf
pop
xor
aam
gs
inc
cld
or
pusha
dec
mov
arpl
inc
fmulp
push
gs
ljmp
sub
sub
in
pop
out
push
sbb
dec
pushf
imul
in
ror
into
ljmp
or
push
jne
push
mov
mov
cltd
test
ss
cs
push
push
rcll
mov
xor
rcl
push
jmp
dec
push
jno
and
ret
incl
dec
mov
loopne
pop
aad
lods
mov
cmp
into
test
jo
add
push
roll
and
cwtl
dec
adc
jmp
test
xchg
add
rorl
sub
push
call
jns
outsl
daa
leave
fcomps
rorb
lods
adc
lret
in
lcall
cwtl
jecxz
dec
mov
sahf
insl
pop
xor
bound
xor
xchg
mov
das
cmp
cli
in
shrb
lods
dec
sbb
icebp
movsl
icebp
dec
jns
mov
in
ret
rol
mov
push
rcrl
es
cmp
loopne
sub
add
clc
jbe
sub
xchg
cmpsl
sub
or
add
mov
enter
xor
jp
add
lods
mov
sub
mov
ret
dec
in
pop
mov
sahf
imul
call
sub
or
stc
push
scas
push
mov
dec
dec
int3
imul
adc
sub
mov
cmpb
xor
cmp
mov
lea
xchg
adc
stc
and
inc
push
test
adcb
lods
addl
mov
stos
or
mov
sbb
ss
loope
rorl
lret
cmpsl
ret
in
pop
lods
shl
fsubrp
aam
xor
stc
adc
divl
incb
lds
lahf
in
test
ret
int3
movsb
test
ret
or
jecxz
sub
add
movsb
mov
xchg
into
mov
cwtl
and
or
add
push
out
aad
sub
aam
or
bound
pop
call
aam
mov
xchg
pusha
add
and
scas
add
add
insb
sub
inc
gs
in
out
in
loope
stos
inc
mov
nop
outsl
pusha
aad
lcall
mov
xchg
add
add
mov
mov
xchg
std
pop
or
sub
push
sbb
adc
xchg
div
scas
inc
loop
push
adc
push
inc
scas
test
sbb
mov
add
cmp
dec
orl
jecxz
cmpsb
bnd
les
mov
mov
push
jmp
cmpsl
sbb
jne
mulb
sbb
mov
jge
mov
ljmp
ficoms
push
or
sub
xchg
add
dec
jo
fadd
cmp
push
int3
pop
inc
fnstsw
cwtl
das
stos
les
orb
push
call
out
out
cmp
adc
mov
and
sbb
idiv
jne
xor
pop
sahf
cmp
inc
fmulp
stc
jl
jmp
cmc
mov
add
popa
je
xchg
sub
ret
or
out
jge
xchg
sub
mov
inc
fucomi
cmc
sub
out
cwtl
das
sahf
repz
popf
testl
jg
in
sub
sbb
leave
or
cltd
pop
js
dec
lahf
imul
mov
jae
mov
mov
divl
ljmp
je
in
gs
mov
push
test
loope
xchg
jle
jno
daa
mov
cltd
movl
xchg
mov
jg
and
orl
les
sub
lcall
leave
stc
xchg
int3
arpl
sub
data16
and
sub
addr16
inc
fnstenv
jp
sbb
or
inc
clc
stos
push
repz
adc
inc
ljmp
xchg
mov
mov
cltd
pop
out
imul
add
sbb
push
adc
stos
mov
sbbb
jns
je
pushf
inc
jbe
xor
test
xor
pop
outsl
push
inc
and
aas
jge
sub
iret
and
imul
adc
mov
outsb
cmc
mov
inc
fsts
xchg
sub
int3
out
popa
clc
filds
movsl
cmp
jmp
hlt
pop
scas
in
int3
arpl
xchg
mov
mov
dec
jl
shrl
aaa
into
mov
jbe
push
add
push
movsl
sub
and
jge
ret
mov
icebp
and
jmp
fcomp
sub
xchg
aaa
xchg
popa
clc
push
cli
mov
in
or
mov
js
jle
pop
pop
scas
js
push
popf
and
test
xorb
movsb
mov
jnp
test
xchg
aam
adc
cmp
jno
dec
in
test
mov
dec
insl
and
hlt
mov
test
inc
shlb
mov
loopne
push
push
in
xlat
fwait
xor
xchg
xor
or
loope
insl
inc
cltd
push
dec
add
xchg
dec
in
and
test
dec
cmp
mov
fdivrs
imul
dec
pop
roll
xchg
push
xchg
aas
xchg
xchg
adcb
or
repnz
cmp
aaa
xchg
imul
xchg
test
cmp
addr16
scas
xchg
inc
add
scas
pop
inc
popf
loope
mov
out
fdivr
outsl
jbe
test
cmp
daa
pavgb
movsb
xorb
xchg
dec
sbb
add
shlb
popa
dec
lock
ss
into
or
hlt
mov
call
lea
and
enter
repnz
outsb
enter
decb
add
or
es
out
mov
test
push
hlt
mov
loop
pop
lock
xor
inc
fidivrs
add
sub
dec
sbb
std
jmp
jo
test
xor
mov
jno
mov
fistl
in
ficoml
cmovbe
arpl
loopne
xchg
sub
mov
sub
xchg
mov
adc
mov
je
push
adcb
sti
xchg
jle
inc
sub
jmp
in
jle
sti
sub
inc
xchg
dec
test
icebp
push
sub
mov
ds
pop
repz
xor
out
aam
inc
pop
test
xchg
movsb
fldt
inc
les
insl
lahf
inc
sbb
xchg
mov
out
sbb
mov
sahf
push
inc
js
xor
xchg
popf
jnp
push
out
and
stos
mov
push
mov
mov
mov
mov
movsl
sbb
mov
call
jle
cmp
mov
aad
cld
aam
jo
jmp
xor
cs
mov
push
sbb
mov
dec
push
inc
jp
in
ja
xchg
roll
mov
sahf
push
int
fbld
push
push
inc
fwait
xor
or
stos
add
pop
dec
sbb
dec
xchg
add
sbb
push
lahf
cmp
xor
jae
push
js
mov
add
dec
in
add
sub
jb
sbb
fcoml
mov
out
dec
mov
jne
add
cwtl
mov
adc
leave
fsts
addr16
cwtl
fcmovb
popf
dec
xor
in
and
in
adcl
or
popa
push
cmp
xrelease
jae
sbb
xor
outsb
add
jg
sub
adc
sbb
pop
cmp
int3
cmpsl
int3
je
mov
daa
std
insl
pop
addr16
and
push
insl
sbb
fnsave
cld
insl
daa
cmp
push
movsb
dec
adc
cmpsl
leave
imul
fwait
dec
in
inc
mov
ljmp
ss
push
popf
stos
jnp
push
mov
and
andl
jle
mov
cmpsl
adc
xor
dec
xchg
jp
mov
jno
pop
xchg
and
xor
xchg
andb
rclb
mov
rcrb
adcb
out
jae
mov
jno
inc
sub
xchg
push
aaa
lret
nop
mov
mov
sub
int3
je
cmc
mov
xchg
mov
ljmp
fnstcw
cmp
pop
sbb
inc
and
aad
aaa
lret
xor
push
out
fs
pop
push
ljmp
insl
stc
cmp
push
pop
push
arpl
lahf
mov
or
cmp
stc
push
aam
ss
jnp
cmp
pop
out
out
or
cwtl
stc
lods
ljmp
mov
jg
mov
pop
in
push
mov
ret
pop
adc
subl
mov
jne
lret
mov
xchg
sahf
lcall
std
inc
scas
push
cmp
andb
jecxz
push
lcall
add
mov
rclb
inc
inc
mov
add
shl
orl
sarb
jmp
mov
filds
pushf
xchg
cmp
jg
cs
adc
or
test
lea
call
pop
mov
loop
test
lds
jbe
loope
push
xchg
jbe
cmp
pop
icebp
xchg
ss
ljmp
sti
xchg
lcall
jns
dec
adc
int
sbbl
sub
rcl
cmp
ss
adc
pop
cmp
mov
cld
stos
rcrl
data16
iret
loop
cltd
in
lret
aas
faddl
adc
pop
out
xor
pop
jmp
es
cltd
xchg
jnp
clc
nop
cmp
adc
jge
pushf
xor
sbb
lcall
jo
mov
xor
nop
scas
mov
cmp
stos
imul
push
add
popa
mov
xchg
jge
aad
cmp
xchg
push
das
mov
ja
cmp
mov
lahf
push
and
inc
mov
mov
mov
inc
push
sti
loop
xchg
enter
dec
stos
cmpsb
imul
ja
sub
xchg
popa
fsubrl
jl
scas
xor
mov
addr16
inc
sbb
dec
loopne
dec
dec
xchg
sub
neg
add
inc
sbb
dec
cmp
and
xchg
inc
cwtl
or
add
mov
lahf
testl
leave
fbld
je
arpl
or
pop
imul
adc
arpl
jb
seta
js
pop
imul
xchg
inc
and
xor
sbb
inc
mov
mov
dec
jge
mov
cwtl
pop
add
xchg
cmpsb
cmpsl
lret
xchg
mov
sub
inc
movsb
je,pn
mov
dec
cltd
fdivrp
or
mov
pop
xor
sbb
mov
and
inc
fsts
inc
push
mov
push
and
pop
mov
pop
xor
subl
mov
and
aam
int3
lret
xchg
sub
xor
or
pop
mov
push
mov
cmpsb
xchg
lret
les
cmp
jmpw
pop
dec
outsl
ret
sub
call
loopne
add
es
daa
inc
clc
fidivs
and
ss
inc
js
in
cmp
or
cmp
cli
dec
mov
cld
jle
fwait
push
mov
test
jmp
mov
rorb
rcrb
jne
loopne
or
pop
cmpb
decb
test
ss
std
shrb
adc
je
push
flds
out
aad
jo
sarl
out
or
cmp
sub
dec
xchg
sub
int
cmp
mov
fs
dec
call
scas
fwait
sub
lea
fnstenv
pop
in
sbb
daa
push
pop
mov
into
sub
sub
loopne
cmp
mov
mov
and
cmpsl
in
push
dec
dec
fcompl
sub
inc
add
clc
mov
in
lcall
jno
imul
xchg
mov
rcr
int
jmp
jo
je
sub
pop
imul
scas
inc
out
test
pop
out
imul
mov
push
push
call
cmpsb
testl
xor
mov
lahf
test
or
mov
int3
push
ret
orb
xchg
cmp
outsb
sub
shll
xor
je
shlb
sbb
pop
outsb
xchg
pop
adc
fisubs
sub
push
mov
dec
pop
and
ljmp
into
mov
mov
movsb
icebp
push
test
mov
imul
out
xchg
pop
stc
out
inc
mov
jno
sbb
mov
xchg
pop
add
push
mov
aas
in
mov
fs
in
mov
adc
sub
sub
inc
clc
sarl
mov
or
add
pusha
xchg
push
movsl
sbb
jns
sbb
lds
stc
adc
xor
push
std
or
out
stc
or
aad
movsl
cmp
stc
jle
icebp
adc
push
sub
jge
loopne
into
mov
out
sub
lods
xlat
dec
xor
cmp
inc
pop
xor
sbb
fimuls
cmp
pushf
push
scas
ficoml
and
mov
clc
jge
and
lds
inc
push
and
lea
mov
insb
jle
pop
inc
fmul
sub
xor
jae
out
std
inc
fnstsw
call
xchg
dec
mov
shll
jecxz
mov
push
or
cli
and
lds
sbb
hlt
push
mov
insb
pusha
sbb
test
cmpsb
jmp
inc
imul
adc
mov
xsha256
cmpsb
push
jnp
mov
leave
mov
rclb
js
jle
push
push
sub
cmp
jecxz
mov
mov
notb
mov
jle
daa
add
mov
cmp
pop
pusha
sbb
xchg
push
leave
stos
mov
js
mov
lret
sub
fnstenvs
pop
test
stos
jl
mov
xor
or
ret
push
jo
sub
shll
sub
sub
popf
sbb
pusha
testl
add
inc
push
cmp
pop
decb
in
movsb
cmp
mov
push
pusha
lahf
rep
icebp
push
imul
outsb
lahf
xor
scas
mov
das
push
add
rol
orl
and
mov
xor
cmp
mov
pushf
lods
repz
aas
adc
mov
add
lret
xor
mov
aam
mov
aam
xchg
cmp
hlt
iret
data16
inc
call
lcall
push
cmp
and
mov
lcall
stos
aaa
sbb
cltd
shll
xor
adc
out
dec
mov
cmc
push
inc
xchg
xor
sbb
aaa
push
mov
nop
xor
repnz
stc
test
pushf
xchg
jg
leave
and
and
imul
shlb
mov
and
imul
mov
dec
lahf
movsl
mov
in
dec
push
fidivrs
rorb
sub
das
mov
aaa
and
cmp
out
jl
loop
cmp
jecxz
cmp
mov
popf
or
ljmp
fistl
dec
lret
xor
adc
std
pop
fidivrl
jo
mov
insb
repz
mov
adc
leave
mov
scas
push
mov
inc
pop
or
aas
lods
xor
notl
push
xlat
mov
push
fildll
stos
sbb
fiadds
xor
popf
mov
rcrb
int
push
in
or
pusha
sti
jae
xor
ljmp
addb
sbb
setne
daa
jge
fdivrs
sahf
sbb
or
inc
movsl
xchg
inc
in
jl
dec
fwait
adc
sti
inc
cld
in
jno
sub
sbb
pop
divb
cmp
jo
dec
mov
out
jo
inc
push
push
es
cmp
push
and
push
cld
xor
sbb
push
outsl
orb
lock
sub
dec
shrl
addr16
xchg
in
pop
stos
add
sub
cmpsb
pop
jmp
addr16
pop
aaa
xchg
sub
mov
pop
fldcw
dec
mov
dec
cmp
scas
inc
pop
lcall
dec
icebp
in
inc
push
xchg
bound
jecxz
xchg
dec
arpl
mov
cmp
lods
std
pop
cmc
repnz
icebp
in
pushf
mov
das
jb
imul
dec
mov
ss
nop
lea
sarb
jle
mov
push
inc
jb
cmp
push
daa
loope
push
sub
faddl
lcall
jecxz
xacquire
addr16
sub
mov
lret
and
or
loope
stc
adc
mov
dec
sarb
jnp
je
add
push
xchg
arpl
divb
je
adc
pop
stos
and
inc
xor
in
ds
mov
movsb
sub
fs
fidivl
xchg
xchg
imul
cmpsl
cmp
push
rorb
dec
push
ss
dec
outsb
mov
fildll
mov
add
adc
adcl
or
imul
pushf
add
sub
push
push
out
add
jg
sbb
inc
push
xchg
pop
sub
push
ds
xor
imul
mov
or
mov
or
loopne
fsts
fs
icebp
xchg
xor
shlb
mov
das
js
hlt
adc
dec
in
es
jb
push
or
xor
das
dec
cmc
test
push
inc
call
test
mov
sbb
mov
imul
jns
xchg
mov
xchg
je
push
jb
out
cmp
cmp
or
enter
mov
pop
adc
xchg
mov
fwait
pushf
xor
push
inc
bound
loope
sti
lret
cmp
sti
call
loopne
in
sub
adc
sub
ds
dec
push
loopne
clc
mov
ds
add
jae
cs
pushf
add
mov
cmp
shl
cmp
or
adc
xor
mov
jae
repz
hlt
mov
xor
xchg
push
popl
into
xchg
fs
push
push
lock
inc
xchg
push
add
and
push
leave
lock
in
mov
pop
je
mov
cs
mov
test
aas
push
cwtl
addb
aas
mov
sahf
data16
sbb
fistpll
add
push
popf
out
mov
inc
or
mov
shll
sub
pusha
adc
inc
add
jg
es
and
add
jle
lds
mov
stc
mov
shlb
mov
rclb
jg
aam
sar
inc
cltd
pop
push
mov
jge
or
sbb
lods
cmp
scas
outsl
cmp
xor
icebp
sbbb
enter
shr
push
adc
movl
add
shlb
inc
cli
int
andb
insl
push
adc
frstor
inc
cmp
pop
aas
or
mov
mov
pusha
fdivrs
sarb
mov
pop
sub
js
ret
mov
xchg
xchg
push
cmp
dec
mov
mov
shrl
pop
rcrb
sub
cltd
lock
and
je
in
call
insb
jle
mov
add
mov
bound
and
inc
test
int3
xor
ret
cmp
mov
mov
mov
fsubrs
lds
test
mov
rol
pop
add
pop
adc
bound
test
rcr
flds
xchg
fistpl
mov
inc
stos
andl
cmp
or
out
daa
lcall
adc
loope
shrb
jo
cmpb
push
pushf
jne
push
into
and
sbb
and
pop
dec
test
cmp
test
mov
lret
test
cmc
xchg
inc
popa
icebp
mov
lods
mov
arpl
pusha
fistpl
inc
xor
push
scas
mov
dec
pop
lcall
mov
mov
add
or
popa
pop
xor
dec
aaa
decl
out
and
push
push
idivl
sarl
adc
aaa
decb
retw
push
outsl
push
or
mov
mov
cmp
sbb
sub
es
mov
xor
scas
jae
xor
out
hlt
mov
pop
lds
pop
out
daa
outsl
inc
aaa
fwait
sub
pop
out
movsl
mov
shl
ja
pop
pop
ljmp
or
nop
jnp
dec
stos
mov
cmpsb
sbb
scas
sarl
lcall
xchg
push
lret
clc
inc
cs
fisubrl
imul
xlat
pusha
je
xor
add
xor
sahf
cmc
nop
sbb
jp
cmp
xchg
cmpsb
push
jnp
push
xlat
jmp
push
jne
cmpsl
aaa
ficoml
push
push
and
sbb
mov
cltd
sub
jl
lock
jl
scas
lock
rolb
push
loopne
fldl2e
cs
mov
and
int
push
jp
xor
iret
inc
dec
jl
aaa
scas
jmp
pusha
andl
xchg
add
cld
or
dec
fidivrl
and
fs
mov
mov
aas
jmp
mov
or
jg
lcall
loopne
and
cli
test
mov
movsl
sub
decb
stos
or
mov
jp
mov
xlat
push
rorb
cmp
daa
or
rorl
or
cmc
sub
xor
mov
ret
mov
test
jae
repz
js
out
bound
pop
dec
mov
mov
xor
in
test
mov
test
test
arpl
adc
cmp
xrelease
movsb
icebp
cmp
jnp
das
loop
cmc
lret
pop
aad
cmp
inc
adc
fldl2t
dec
jne
mov
clc
and
scas
cmp
sub
jnp
test
ss
mov
and
push
or
rcrb
pushf
jne
jmp
stc
push
mov
movsb
fdivs
rolb
jne
mov
shlb
jo
ret
or
sub
dec
or
pushf
xchg
add
dec
ret
cmp
sub
xchg
dec
fcoms
stos
or
lahf
icebp
mov
imulb
mov
add
imul
dec
loopne
add
repnz
xchg
es
dec
hlt
sub
xor
inc
sti
jle
cli
cmp
sarb
ficomps
call
mov
sbb
lret
adc
sahf
xor
lret
push
mov
sahf
mov
sti
mov
scas
inc
aam
xchg
inc
pop
push
add
dec
cmp
aam
rorl
movsl
mov
test
xchg
insl
sub
hlt
rcrl
sar
rorb
xchg
popa
and
dec
fildll
mov
les
addr16
and
mov
in
sti
cmp
lods
cli
in
das
ds
fwait
sti
sub
enter
in
and
cli
es
out
lcall
or
push
push
aas
mov
aam
xchg
adc
lcall
sbb
push
add
jns
cmp
xchg
dec
arpl
stos
pop
mov
or
js
push
cmp
dec
xchg
inc
test
aaa
pop
ds
cwtl
and
mov
or
adc
jmp
xchg
adcl
out
movsb
sub
adc
sbb
sub
lods
das
arpl
inc
cmp
dec
adc
add
jg
loop
jg
mov
or
loop
stc
or
push
sbb
xlat
cmp
jae
rcrb
addr16
or
test
dec
mov
stos
loope
or
mov
mov
jge
sub
clc
pop
loop
negb
iret
push
push
push
rcl
testb
push
xlat
push
insb
filds
xlat
ret
lret
jecxz
pop
or
and
adc
in
dec
and
ds
leave
and
sbb
push
addr16
das
ret
popf
dec
insb
jb
sahf
sub
test
pop
xchg
add
add
das
pop
out
stc
or
inc
lds
mov
cwtl
and
lods
xchg
ss
mov
test
cmpl
test
jmp
lret
mov
cmp
loope
ljmp
sub
and
cmpsl
push
dec
loop
movsb
fbld
and
cwtl
xchg
js
fwait
cld
js
fstps
rcl
es
in
jns
lcall
push
jo
bnd
sbb
cld
inc
adc
int
cmp
sbbb
sbbb
xchg
fistpl
pushf
push
pop
push
or
std
push
test
adc
mov
mov
pop
inc
lods
dec
je
inc
lods
fdivs
pop
sarl
push
scas
out
into
enter
in
add
cmp
cmc
dec
arpl
cmp
adc
lods
sbb
cmpsl
pop
mov
push
daa
sub
pop
or
jl
xchg
xchg
xchg
and
pusha
mov
sub
add
mov
cmp
pop
xchg
mov
movlps
and
add
mov
addr16
bound
vpsubusb
sbb
dec
in
into
pop
lcall
loope
dec
xchg
mov
int
std
and
xchg
adc
imul
jae
lods
jne
mov
push
xor
js
pop
mov
xchg
in
adc
inc
out
js
ret
mov
lock
negb
imul
sti
ds
divl
jnp
icebp
adc
jae
sub
scas
inc
inc
jb
adc
fcoml
xchg
sarb
repz
adc
mov
lea
adc
push
jae
mov
ds
pop
mull
dec
sbb
mov
jmp
mov
xchg
pop
adc
jmp
out
out
mov
mov
jo
daa
repz
fdivrp
dec
inc
xlat
cmp
pop
sub
or
jns
test
pop
out
xchg
stc
nop
dec
jmp
out
into
ret
loopne
pop
sbb
mov
stos
push
pop
in
jno
ss
mov
push
inc
lret
lret
out
or
jg
mov
sti
lods
lcall
ljmp
sarb
lahf
or
int3
orb
mulb
mov
inc
adc
jo
out
adc
mov
mov
xchg
shll
arpl
cmp
mulb
in
or
cs
add
testb
mov
mov
fstps
adc
jg
mov
dec
pop
lret
push
cmp
lret
pop
xor
xchg
imul
push
rcrl
and
add
xchg
dec
fldcw
xlat
mov
push
loope
add
stos
mov
jne
xchg
andl
xorb
inc
out
mov
cmpsl
xor
in
adc
and
pop
sbb
cmc
enter
leave
movsl
gs
xlat
out
jno
lock
imul
or
bound
sahf
lcall
jns
scas
test
scas
mov
xchg
cmp
in
and
xchg
dec
call
mov
sbb
fsubp
mov
bound
inc
leave
inc
mov
cli
xchg
adc
xchg
outsb
mov
fcomps
add
cwtl
inc
pop
and
xchg
mov
push
jno
add
test
les
xchg
inc
and
jle
pushf
adc
mov
inc
lahf
es
xchg
pop
fnstcw
and
daa
mov
and
movsb
lds
add
pushf
adc
cmp
add
jge
pop
sub
cld
lcall
in
fwait
xchg
sbb
push
mov
pop
aaa
imul
sbb
int
push
jmp
push
push
jo
push
cmp
push
stos
cmpsb
dec
fcoml
inc
iret
fnsave
fsubrl
aaa
xorl
dec
mov
fistps
xchg
cmp
and
fwait
xor
int
sbb
xor
out
out
inc
sahf
lods
inc
adc
aam
shrl
add
mov
mov
sub
outsl
testb
outsl
out
pusha
push
xor
jno
arpl
cmp
inc
rcrb
cli
lods
int3
pop
push
in
nop
out
jo
jmp
or
leave
rolb
outsl
sbb
roll
lea
sarl
shl
xor
push
xchg
xor
add
mov
and
pop
or
int
cmpsl
shrl
cmp
out
inc
fisubl
cli
rolb
push
icebp
rcrb
sub
ss
jo
call
jle
or
dec
mov
xchg
push
ret
or
fbld
cmp
loop
das
adc
mov
popw
dec
inc
push
jne
push
icebp
enter
jmp
popa
int
push
in
fistpl
lods
shrb
or
cmp
mov
je
pop
inc
insb
stos
or
fmull
add
mov
adc
jecxz
in
jbe
sbb
mov
daa
fwait
in
aas
in
push
pop
jge
dec
into
jb
xchg
data16
arpl
std
adc
inc
cwtl
stc
js
dec
ljmp
fs
bound
and
fcomps
inc
out
fistpll
out
dec
xchg
inc
rcl
cld
call
xlat
sub
add
ror
pop
out
pushf
fsubl
jge
push
lock
xchg
testb
and
lods
dec
rol
loope
lods
jo
xchg
cmp
push
add
pop
add
mov
pop
mov
sti
nop
mov
cmpsb
in
pop
movsl
cmp
jle
in
clc
cmp
roll
jno
push
push
cmp
jl
cmp
js
xchg
sub
cvtps2pi
xchg
cmp
jg
xchg
add
leave
es
test
stc
aam
pop
fidivs
xlat
gs
mov
aas
bound
pop
xor
push
fidivs
sub
stos
sub
jne
dec
fistps
add
in
push
jae
and
dec
xor
cmpsb
fidivs
cmpsb
sbb
popf
pop
jge
aaa
fimull
fdivrs
jmp
test
and
cmp
xchg
pop
out
cmp
repz
ret
in
les
jns
and
mov
sub
xor
or
aad
test
pop
lahf
pop
mov
incl
dec
cmp
fwait
jecxz
jmp
lods
popf
xor
ljmp
xlat
xchg
pop
movsl
hlt
dec
test
ret
testl
ficompl
stc
pop
jge
popa
andl
lock
cmpsb
bnd
fs
cmp
test
in
pop
hlt
test
jnp
mov
aas
xchg
ljmp
xor
test
pop
outsb
push
or
aad
dec
loop
sbbl
or
push
mov
jge
xchg
iret
fstpl
loop
ficomps
decl
xor
xor
imul
pop
cmp
jae
sub
mov
hlt
jmp
cld
jnp
test
outsb
xor
fistpl
mov
or
enter
fiaddl
add
ljmp
in
lcall
out
test
dec
hlt
mov
mov
xchg
or
mov
mov
fimuls
jecxz
pop
mov
addr16
pushf
add
add
repz
sbb
xor
jo
outsl
ret
sub
lea
mov
outsl
push
mov
pop
jne
shl
shll
js
imul
es
inc
jmp
cmp
leave
xchg
pop
lret
mov
sub
cmc
jge
mov
lods
xchg
sub
lds
shlb
and
mov
ja
xchg
iret
je
ja
sub
or
pop
jmp
cld
fstl
out
cmc
test
jb
adc
test
insl
add
jp
leave
jae
sarb
dec
loope
in
std
xchg
lret
orb
cmp
cmc
insb
add
push
push
jmp
jmp
jo
dec
xor
sub
in
dec
loop
movsl
repnz
sub
cmpb
stos
leave
pushf
add
sbb
xchg
xchg
dec
mov
insb
loop
fsubrp
int
ja
fldenv
out
out
popf
data16
sub
outsb
es
cltd
fimull
sub
ds
test
nop
jne
ret
mov
movsb
jp
jbe
lds
adcb
mov
or
inc
scas
cmp
lcall
xor
mov
mov
addr16
test
fwait
or
xchg
sub
xchg
sub
sarl
xor
loop
inc
out
lods
add
and
pusha
mov
adc
pop
mov
popa
cmc
loop
mov
add
push
aas
xor
loope
out
inc
mov
xlat
cmp
sub
cmp
int
popa
js
cltd
and
jae
inc
cmp
dec
push
mov
aad
aad
scas
add
sbb
sub
jae
fcmovnu
fmull
sbb
add
stos
mov
xchg
pop
inc
cltd
lea
ss
repnz
pushf
loope
sbb
cmp
sbb
cli
pop
cwtl
dec
sbb
jg
lods
mov
dec
xor
jge
icebp
sbb
mov
outsl
outsl
lcall
cmp
cs
jo
add
rorb
push
test
inc
mov
pop
fistl
lods
fisubs
cmpsl
or
lea
orl
out
movsb
lods
ljmp
pushf
insl
std
mov
das
out
mov
mov
sub
xchg
ss
pop
mov
jg
jecxz
mov
push
cmp
fdivrs
lahf
pop
mov
pop
imul
jp
lret
leave
loope
cli
test
adc
mov
or
je
pop
jl
subps
shlb
mov
dec
jae
dec
movsl
xor
out
lret
and
sbb
fisubs
rclb
sub
in
jne
adc
lods
hlt
mov
test
xor
negb
notl
lahf
xor
mov
xchg
mov
es
inc
xchg
and
arpl
mov
adc
fnstcw
sbb
push
xor
mov
in
pusha
xchg
jb
push
inc
popf
add
dec
fnstenv
sub
cmc
cmpsb
popf
jg
inc
jl
mov
out
stc
test
arpl
test
add
sbb
inc
xchg
xor
ss
das
push
addr16
arpl
clc
adc
iret
lods
fiadds
jae
mov
daa
mov
sbb
aaa
stos
cmpsb
mov
andb
pop
loopne
movsl
sbb
mov
lcall
inc
mov
add
sbb
pop
or
fnstenv
xlat
pusha
cmpsb
jo
insl
jle
mov
push
and
inc
testl
mov
mov
loopne
xlat
cmp
xor
sub
pop
xchg
repnz
dec
in
xchg
jle
mov
ds
sub
stc
cmp
mov
movb
lods
cmp
dec
cmp
shll
pop
pop
into
enter
pop
sahf
aad
addr16
inc
popf
enter
pop
sbb
and
cld
adc
aam
xor
adc
pop
bound
call
inc
jmp
and
pushf
pop
sub
adc
dec
pusha
xlat
fwait
imul
xor
mov
fs
mov
andnps
lods
cld
fisubrl
es
stos
loop
pop
loopne
mov
jl
push
lods
mov
movsb
add
mov
loopne
or
jbe
push
das
mov
test
dec
adc
xlat
mov
inc
out
cmpsl
jmp
test
into
ffree
iret
data16
lods
dec
adc
jb
push
xchg
sub
xchg
bound
sti
fdiv
imul
test
cld
nop
xlat
mov
lods
outsb
dec
movsb
scas
bound
xor
inc
sub
jmp
mull
fisttpl
call
mov
lods
lea
cmp
data16
int3
xlat
mov
push
sbb
inc
cmp
fxch
into
xor
cmp
sbbl
lods
lea
sub
pop
xchg
mov
test
lret
cvtdq2ps
xchg
sub
add
mov
add
les
mov
mov
pushf
push
mov
cli
jne
lret
aam
leave
iret
fadd
test
ja
pop
pop
popf
std
subb
jecxz
nop
mov
rcl
ret
ret
gs
imul
cmpl
add
or
outsl
out
xor
mov
rcrl
popf
adc
ss
cmp
gs
push
aam
jo
popf
jb
shlb
inc
mov
xor
out
inc
xor
fiaddl
aad
pop
repz
rol
clc
mov
ftst
sbb
and
jnp
or
js
out
adc
inc
mov
xchg
insl
push
dec
in
xchg
jg
scas
pop
ret
ffreep
decb
mov
loopne
loope
sub
and
jecxz
mov
fcmovnbe
mov
and
shll
rorb
inc
out
popa
and
movl
xchg
mov
push
and
ds
loope
repnz
iret
mov
dec
sub
add
adc
iret
add
push
or
lcall
cmp
dec
in
mov
mov
mulb
inc
test
lahf
sahf
jno
xchg
push
and
fsubrl
mov
sub
into
rcrb
lea
and
and
push
loope
sbb
jne
popa
orl
inc
push
int3
push
sub
pop
inc
scas
cmp
lods
lea
jns
outsb
add
mov
bound
jbe
daa
test
fiadds
sub
out
xchg
lods
mov
jle
sbb
fimull
ffree
insb
ret
dec
icebp
dec
dec
dec
in
andb
sbb
add
push
add
loopne
add
jb
and
aaa
inc
imul
fsts
push
push
inc
mov
je
out
cmpsl
loopne
dec
and
add
push
out
mov
inc
sbb
aam
xchg
pop
cmp
adc
loope
sub
jp
imul
sub
adc
test
jle
lret
xchg
out
jle
add
fstpt
ret
mov
icebp
cld
movsb
aaa
insb
mov
jb
sub
stos
pusha
std
lods
cmp
sarl
pushf
scas
pop
jmp
out
sti
mov
inc
nop
jnp
mov
fiadds
je
fucomip
call
lcall
inc
cmpsl
ja,pt
out
scas
gs
jl
xlat
inc
test
mov
mulb
addr16
push
push
in
jbe
cmpsb
mov
pop
push
ljmp
call
jecxz
fldcw
adc
dec
iret
mov
aas
test
dec
fidivs
sbb
xlat
sbb
mov
das
dec
cwtl
sub
dec
sbb
mov
hlt
inc
sbb
push
int
les
ljmp
es
das
or
mov
fwait
xor
inc
push
addr16
and
das
adc
xorb
int
pop
cmp
in
pop
hlt
shlb
dec
mov
mov
fisttpl
pusha
dec
xor
or
idiv
insl
cmc
mov
into
mov
aam
push
es
ret
scas
pushf
pop
push
scas
mov
gs
mov
xchg
fsubrs
xor
mov
daa
mov
fadd
mov
inc
gs
ss
pop
cmp
rorl
lock
call
adc
pop
out
push
jo
outsb
mov
call
cs
push
sbbb
aad
ds
or
shl
out
ja
pop
inc
sbb
cwtl
into
rorl
cmp
rcr
shlb
dec
cs
pushf
mov
stos
call
lods
xchg
sbb
sar
loope
dec
movsl
or
mov
jge
xor
scas
ljmp
fiadds
pop
cwtl
push
add
sub
idivl
aaa
ret
cmp
xor
call
sbb
pusha
sbb
nop
sub
pop
mov
pop
mov
sbb
or
inc
jle
daa
fstps
shr
sub
xlat
jns
dec
xchg
dec
ror
aas
xchg
sub
push
dec
cmp
ljmp
dec
mov
imul
mov
sub
jb
adc
push
int
mov
sbb
ds
inc
outsb
jle
xorl
or
or
jge
sbb
call
cmp
cltd
jns
mov
mov
jns
push
je
and
ret
jbe
cmp
dec
pop
popl
push
inc
xchg
out
loope
mov
fnsave
add
repz
and
lcall
jno
or
rcl
test
aad
mov
jg
dec
push
jo
loope
jl
pop
dec
loope
mov
mov
pop
movsb
bnd
ret
adc
jp
adc
mov
add
ljmp
popf
lods
inc
das
test
shll
pop
xor
pop
dec
shlb
jo
pop
iret
push
cmp
test
and
xor
fwait
inc
sbb
leave
int
push
sub
sbb
xchg
outsb
xchg
adc
mov
flds
out
xchg
sub
push
fidivrs
and
pusha
xor
push
in
pop
adc
xor
shlb
fwait
das
filds
jo
sub
lret
nop
push
loop
sbb
sub
outsb
push
push
enter
rcrb
addr16
inc
popf
lock
and
adc
sahf
rolb
mov
xorl
repnz
xchg
shl
lds
xor
push
mov
dec
divb
push
adc
lods
push
cmp
lcall
out
scas
mov
shll
add
dec
mov
rorl
std
inc
fisubs
clc
xchg
lret
push
out
fstl
fscale
repz
sbb
push
jp
or
cmpsb
das
sbb
cmp
shlb
mov
dec
xchg
ret
or
or
dec
jg
jnp
imull
push
enter
jne
out
push
push
out
or
xlat
scas
inc
movsb
jno
jmp
out
cmpsl
lock
aaa
adc
push
pop
adc
shl
nop
scas
sti
push
add
xor
jae
xor
ds
or
insb
js
pop
push
sub
lcall
fwait
or
pop
lahf
stos
test
sar
gs
xchg
dec
pop
ret
addr16
xor
xor
xlat
testb
insl
mov
xchg
push
in
push
cmp
std
aad
mov
cmpsl
xchg
pop
xor
and
fst
jae
int3
mov
fwait
dec
out
add
inc
push
insl
jg
daa
leave
inc
scas
jno
es
sub
das
imul
dec
aas
lret
xchg
icebp
loope
aam
fwait
nop
push
xchg
rcll
hlt
adc
cmp
cmp
mov
mov
push
sbb
sub
lock
divb
jecxz
repz
in
inc
jge
in
insb
dec
mov
rol
pop
xchg
push
cmp
cmp
jg
ds
sbbb
cmc
vmovups
dec
push
test
lcall
xor
xchg
enter
pop
testb
adc
popa
push
xor
pushf
arpl
insb
xchg
jne
ret
outsb
adc
inc
dec
pusha
pop
inc
out
xor
mov
sbb
or
mov
gs
push
loopne
imul
cmpsb
sbb
or
sahf
out
xchg
mov
cltd
movsb
dec
mov
jmp
fiadds
inc
jmp
pop
xlat
movsl
cmp
sahf
lods
jbe
lret
jae
ljmp
fldcw
fsubrs
sahf
pop
stc
aam
shlb
pop
sbb
movsl
loopne
mov
ja
mov
xchg
or
dec
ja
cmp
imul
jg
and
mov
outsl
inc
pop
fsqrt
in
pop
mov
inc
aas
sub
loopne
mov
pop
les
jle
in
sbbb
inc
cltd
and
mov
mov
sbb
push
icebp
pop
xor
or
popa
sbbl
pop
jbe
cld
clc
mov
dec
orl
dec
repz
xchg
sbb
dec
cmp
jl
inc
sbb
jns
jo
push
dec
enter
pop
rclb
outsl
mov
push
xchg
pop
into
ret
jecxz
mov
inc
jns
adc
dec
pop
add
insb
je
pop
orb
aas
xor
dec
frstpm(287
aaa
mov
cmp
frstor
lcall
bound
jp
pop
push
mov
icebp
and
mov
adc
mov
fsubrl
orl
je
dec
jecxz
jno
add
cmp
pop
lcall
pop
cmpsl
add
mov
enter
cli
fs
mov
shr
jge
xor
add
enter
scas
inc
test
int
xlat
or
mov
addr16
sub
cmp
enter
popf
xor
hlt
test
mov
mov
dec
sti
lret
arpl
hlt
push
test
pusha
mov
push
jno
pop
jae
imul
nop
daa
mov
fwait
sub
sub
aad
in
pusha
dec
jns
jno
inc
cmpsl
out
inc
fdivl
movsb
xchg
jns
inc
xor
pop
mov
or
cmp
xchg
mov
stos
mov
xchg
cli
loopne
fisubrs
ja
sbb
jnp
inc
ljmpw
std
aaa
add
lret
out
sbb
push
imul
mov
pop
jnp
mov
xor
mov
jge,pt
pop
adc
mov
dec
imul
rclb
std
jo
cli
fidivrs
test
es
incl
cld
dec
loope
cmpsl
movsb
mov
daa
cli
mov
push
cmp
fucomp
xor
cli
mov
cmp
sub
push
in
jns
push
mov
dec
fadds
icebp
rolb
addl
leave
sbb
mov
jle
mov
fcomps
pop
test
stos
mov
xchg
roll
test
mov
movsb
gs
ljmp
fildl
lea
jnp
jl
cmpsb
lea
dec
fcom
pop
cs
xor
mov
fnsave
jp
sbb
repnz
pop
add
adc
mov
or
cs
pusha
dec
dec
out
roll
mov
sub
cmp
enter
mov
jecxz
aad
repz
adc
xchg
jp
push
sub
ljmp
andl
jge
rcl
jp
sub
pushf
sub
rcl
imul
popa
sbb
lock
arpl
adc
mov
shl
inc
push
mov
out
lods
xsaveopt
mov
pop
xchg
inc
xor
sahf
imul
push
aad
rcll
cmp
js
sub
ret
mov
pop
dec
mov
lret
push
out
popa
test
test
cmp
icebp
das
dec
mov
mov
xor
insl
or
sub
dec
fidivs
outsb
add
repnz
sbb
push
push
mov
movsl
cmp
loopne
sbb
sbb
add
or
and
pop
xor
xchg
sub
mov
pop
push
imul
pop
xchg
add
mov
sbb
inc
call
out
xchg
mov
ficompl
or
sbb
push
in
iret
push
je
addr16
pop
lret
xlat
inc
mov
stos
test
mov
or
arpl
into
pop
testl
repz
lcall
lahf
jne
or
adc
dec
sbb
sub
add
push
sbb
dec
dec
push
lea
xchg
lcall
in
repnz
push
pop
xor
push
ds
cmp
sahf
jae
icebp
or
stos
sar
sbb
movsb
cwtl
mov
lret
sti
repnz
mov
xor
into
in
fistpl
mov
mov
jg
loope
cmp
mov
in
test
lahf
gs
mov
fistps
aam
and
mov
mov
push
xor
loopne
fcoml
dec
pop
dec
dec
sub
mov
jmp
les
mov
add
xlat
jbe
test
mov
adc
xchg
iret
out
aas
jmp
fs
sub
cmp
mov
js
fiaddl
pop
repnz
jns
dec
mov
pop
repz
push
js
gs
icebp
clc
test
jns
jle
mov
cmp
mov
mov
push
xchg
mov
and
adc
insl
testl
fsincos
test
cwtl
js
pop
cmp
push
ljmp
mov
inc
sub
in
mov
sbbl
mov
sahf
cmpsl
mov
out
ss
adc
pop
push
sbb
arpl
fdivrl
and
lahf
popf
and
mov
fimuls
jns
idivl
iret
daa
mov
lret
jecxz
lsl
or
push
call
cmp
pop
test
sub
and
pop
mov
fisubrs
filds
sbb
mov
mov
push
push
or
fistpll
ja
jb
rol
loop
inc
stc
pop
je
push
rolb
mov
push
push
mov
or
dec
ds
pop
stos
je
dec
dec
and
xchg
repz
cmp
mov
pop
pop
mov
jns
jle
push
xor
jbe
imul
xchg
js
pusha
pop
leave
xchg
pop
push
sbb
mov
mulb
repnz
pop
sbb
jnp
aad
fisttps
push
sahf
dec
in
ja
std
add
or
repz
idivl
addb
xlat
sbb
scas
fmulp
mov
dec
out
mov
nop
imul
imul
push
push
or
mov
sub
insl
xchg
clc
push
je
mov
pop
mov
js
mov
fistl
inc
sbb
ds
dec
aad
clc
je
add
mov
jne
cld
sub
adc
lret
cld
dec
mov
mov
stos
cmpsb
dec
in
cmpl
sbb
js
sbb
cld
push
fsubrl
mov
sbb
scas
mov
mov
push
mov
test
repz
dec
pop
cmpsb
stc
popf
mov
sbb
and
je
pop
sub
sbb
dec
jo
fisttpll
aad
cmp
imul
pop
inc
shr
clc
data16
lods
mov
cs
scas
push
mov
js
rclw
and
fidivl
out
mov
jg
dec
mov
mov
pop
jp
xchg
sub
mov
jns
dec
sub
test
repz
stos
mov
lods
jmp
and
xchg
sub
pop
inc
scas
pop
ds
in
imul
mov
xor
adc
xlat
xor
bound
pop
mov
ret
outsb
inc
sbb
mov
hlt
push
lods
or
jmp
mov
adc
pop
pop
add
and
in
dec
jle
repz
adc
jle
cmp
fscale
bnd
fsubl
dec
std
xchg
daa
mov
xchg
xor
xchg
cmp
enter
mov
in
es
and
cltd
cmp
mov
or
cwtl
and
mov
lock
sub
push
insl
into
mov
repnz
cmp
sbbb
jecxz
inc
icebp
jae
mov
sbb
scas
fucomp
push
outsb
mov
je
or
sti
pop
clc
push
jns
fwait
lds
sbb
mov
test
dec
push
and
mov
sub
stos
cmpsl
cs
push
hlt
repnz
inc
lods
jmp
lods
test
mov
push
fucomp
xchg
sub
inc
dec
mov
scas
jns
mov
lret
inc
and
ljmp
jno
pop
test
pop
loope
lods
sbb
mov
push
xor
lret
xchg
lea
enter
pop
rclb
out
dec
pusha
test
jbe
popf
adc
add
mov
dec
adc
addl
ret
sub
mov
push
pop
push
testb
fdivs
sub
in
add
push
movsl
xchg
scas
xchg
sub
mov
xor
mov
push
cmp
push
ret
push
lea
add
xor
xor
push
mov
fbstp
sub
das
icebp
clc
in
fdecstp
loop
push
cltd
mov
test
in
mov
jmp
mov
inc
mov
out
je
cmp
fsubr
and
xor
mov
imul
cltd
lret
sub
dec
popa
push
dec
add
js
sub
jns
aam
dec
sahf
mov
nop
ja
lret
dec
stc
iret
outsb
sub
add
ja
daa
mov
jmp
pop
scas
dec
insl
mov
pop
gs
mov
xchg
xor
lret
sub
sahf
inc
adc
pushf
outsl
nop
mov
stos
ret
add
mov
in
in
mov
inc
lret
shll
bound
fdivp
xchg
and
inc
jp
cltd
jmp
or
mov
pop
dec
mov
add
push
pop
out
dec
sub
out
xchg
notl
push
pop
push
mov
xor
cmp
std
pushf
bound
aam
ljmp
push
push
jmp
jae
add
test
or
out
test
outsb
lds
pop
bound
dec
ficoml
pop
out
inc
sti
dec
xchg
inc
scas
in
add
gs
push
mov
lahf
ss
pop
orb
repnz
int
fs
push
push
por
nop
mov
call
inc
sub
fnstenv
adc
ja
sub
and
pop
cli
sub
mov
jnp
int3
or
test
test
shl
ret
lods
or
out
sub
or
leave
std
add
push
pushf
xchg
leave
pop
lahf
push
aas
push
out
cmc
cltd
inc
xlat
test
and
movb
mov
fdivrs
ret
mov
neg
nop
cmp
dec
cld
jle
test
adc
clc
out
add
test
call
xorb
xlat
add
or
jbe
nop
movsb
xchg
push
xor
scas
lock
or
mov
cmp
pop
fdivl
add
test
and
mov
or
call
jo
sbb
dec
loopne
rclb
push
adc
scas
inc
xor
xor
fmuls
int3
cmp
popf
les
aad
outsb
mov
lea
xlat
jl
and
cs
cmp
add
and
and
jge
aaa
ss
cs
insl
lods
inc
stos
js
dec
or
ficompl
stc
sti
inc
aam
xchg
test
shl
rep
loopne
adc
in
jne
sbb
jecxz
xlat
cmp
out
mov
or
jns
nop
mov
mov
fcomps
test
insb
pop
negb
jg
cmp
lahf
testl
jmp
push
mov
or
popf
pushf
loope
loop
mov
xchg
pop
pop
sub
bound
sbb
jae
mov
adc
adc
sub
push
stc
aad
insb
fisubs
sub
gs
jmp
push
fucomip
popa
xor
pop
dec
sub
in
sbb
push
pop
sub
pop
mov
mov
gs
adc
outsl
aas
sbb
add
xchg
mov
sub
sub
nop
xor
xor
out
testb
xchg
sub
and
aaa
pop
ss
pop
cld
jmp
sub
in
into
jb
add
in
pusha
mov
ret
js
xchg
imul
xlat
mov
add
ljmp
fisttpl
and
sub
xchg
mov
mov
out
mov
in
mov
cmp
gs
push
pop
lea
lods
pop
xchg
testb
mov
cltd
or
xor
jne
aas
aad
pop
popf
jo
mov
jbe
add
jge
fsts
jo
ret
xchg
lock
cs
mov
sub
jno
lahf
ds
stos
jecxz
xchg
pop
xor
inc
sbb
add
cmp
and
dec
aas
stc
xor
sub
push
inc
sub
mov
bound
fimull
or
add
popf
or
and
pop
ret
jo
sub
mov
pop
sub
int
jl
loopne
xor
xchg
cmpsb
add
xor
cli
xor
pop
je
pop
adc
mov
mov
dec
in
adc
loop
jne
into
data16
adc
insb
hlt
pop
jno
pop
adc
cmpsb
xor
icebp
jmp
sub
pop
mov
repz
jp
inc
jbe
cmpsl
es
add
sub
es
xchg
dec
push
enter
jecxz
pop
lds
xor
xor
into
enter
rolb
stos
push
sub
fcmovnu
mov
out
sub
incl
dec
push
inc
xchg
aaa
aad
lods
cmp
cmpsb
hlt
dec
and
fnstenv
pop
jmp
cli
mov
mov
lret
fldcw
cltd
add
mov
cmpsl
lahf
stos
daa
add
rolb
fnsave
outsb
cmp
mov
adc
jae
mov
mov
xor
rorl
cmpsl
mov
pop
das
adc
jb
in
adc
ja
arpl
xchg
mov
and
jle
inc
xlat
popa
lahf
lret
or
cmpsb
cmp
mov
inc
and
lock
inc
xlat
pop
adc
jae
xchg
jns
add
leave
cltd
mov
clc
sbbb
sub
cmc
mov
sub
sahf
adc
cmp
adc
mov
xor
xlat
nop
jnp
fsubrs
ror
stc
shrb
fdivl
and
rcrl
xchg
jnp
fwait
add
mov
add
jg
push
mov
jl
outsl
pop
jnp
shrl
fmulp
ja
sub
lcall
xor
popf
movsb
cmp
xlat
mov
rorb
inc
or
mov
xchg
xor
sar
mov
loopne
mov
jbe
add
in
outsl
sbb
je,pn
clc
inc
outsb
out
sub
mov
rcrl
push
mov
popf
dec
iret
into
js
cwtl
cmp
jecxz
sbb
aam
mov
dec
xor
cltd
push
dec
adc
stos
cmp
std
out
lods
sub
jmp
out
aaa
cmp
mov
mov
push
fsts
mov
stos
ret
and
xor
mov
pop
push
cli
add
and
and
test
test
jae
lods
mov
xchg
cmp
push
dec
lea
movsb
xlat
pop
outsl
std
mov
mov
sub
repnz
popf
mov
xor
cmpsb
jp
fiaddl
add
ljmp
add
adc
add
ficoms
xchg
mov
into
xchg
xorl
pop
fcmovnbe
jl
mov
mull
pop
mov
add
mov
pop
popl
out
sbb
xor
or
jge
pushf
pop
xchg
xchg
cmp
lea
daa
or
xchg
in
or
lret
sbb
cmp
push
insb
addr16
pusha
cli
xor
insl
pop
scas
sbb
jge
arpl
ret
data16
aad
ror
xor
inc
inc
stos
xlat
push
ljmp
mov
dec
mov
aas
push
loop
push
faddp
push
int3
movsb
aad
or
inc
pop
data16
or
jmp
jns
adc
mov
inc
or
repnz
ficomps
addb
mov
xor
fildll
xor
loop
out
test
outsb
hlt
ja
xchg
and
jbe
fisubrs
inc
mov
inc
adc
and
insb
lahf
push
xlat
sbb
call
pop
push
jo
std
arpl
jl
xchg
jle
mov
xchg
insb
and
xor
mov
iret
sbb
push
daa
and
shrl
aas
cli
dec
insb
rorl
in
loope
pxor
inc
sahf
xor
fs
insl
sub
rcr
icebp
pop
movsb
aas
adc
cmp
les
stos
nop
imul
mov
mov
lock
add
or
xorb
sub
lods
jo
cld
jl
out
std
repz
rcrb
sub
ja
xchg
pop
loopne
push
jno
mov
sbb
aas
xchg
jl
test
fidivs
leave
jb
adc
cmp
xor
lea
sti
shll
jl
and
mov
je
and
mov
lods
adc
movsl
mov
fistpll
or
sbbb
and
int
mov
or
inc
aam
std
cmp
scas
mov
mov
shrb
or
mov
loop
inc
adc
lret
xlat
into
sbb
out
and
cmp
inc
inc
int3
jb
into
xchg
subl
leave
sbb
pop
sbb
es
mov
add
data16
inc
fildll
jle
push
dec
fstl
mov
jge
loopne
cmp
mov
shr
imul
sbb
adc
test
xor
push
xchg
aaa
inc
sub
lock
sti
in
fildll
incb
aad
pop
repnz
scas
subl
je
xchg
fistps
les
push
dec
sub
lods
dec
loopne
adc
test
push
fmull
jecxz
mov
test
add
les
out
lcall
imul
dec
push
jno
shl
mov
int
xchg
inc
les
fidivs
sbb
jae
icebp
insb
jp
ja
mov
call
incb
jecxz
add
ja
push
cs
fnstenv
or
outsl
push
mov
add
nop
icebp
push
and
fbstp
mov
mov
fisubl
or
jmp
cmpsb
xchg
dec
out
push
pushf
aad
mov
mov
out
int3
mov
dec
repz
sbb
push
insb
add
mov
mov
inc
sub
lods
les
push
jns
inc
in
inc
gs
cmp
sub
and
push
push
loopne
rorl
clc
and
sbb
into
gs
jg
add
les
les
std
out
jo
ret
sub
clc
dec
mov
rcrl
iret
sbb
shrl
sbb
aad
cmp
sbb
repz
outsb
jmp
add
rclb
mov
mov
cmp
pop
cmpsb
mov
jmp
mov
fsubr
push
xor
adc
cmp
out
test
add
mov
ret
je
aaa
sub
les
aam
imul
adc
or
inc
push
dec
stc
xchg
insl
rol
mov
lahf
sti
push
cmp
pop
aad
shl
mov
add
xor
or
dec
cmp
jg
mov
adcb
xchg
xor
push
dec
or
xchg
mov
mov
fnstcw
mov
push
nop
movsb
sti
or
sbb
lcall
nop
shr
jp
jge
mov
mov
mov
loope
es
call
imul
pop
mov
ret
cmp
mov
shrb
push
fcoml
xchg
cwtl
mov
adcb
mov
mov
cmp
push
push
pop
repz
imul
sbb
test
pushf
xor
outsl
dec
xor
mov
sti
hlt
jmp
jmp
inc
aas
dec
jmp
sub
dec
aad
xchg
js
std
fldcw
mov
or
and
sarb
mov
adc
insb
add
cmp
imul
cs
outsl
mov
mov
addr16
nop
jp
pushf
and
aas
mov
sub
xor
mov
lds
cmpsb
dec
lock
lock
jg
scas
mov
aas
dec
jmp
out
mov
adc
test
leave
push
es
push
jp
rcll
xor
push
jno
out
imul
fiadds
std
adc
jno
in
or
xchg
loope
mov
insb
shll
mov
scas
push
adcb
inc
lods
push
dec
pop
out
xchg
jo
adc
cltd
pop
jl
scas
push
sbb
aaa
shlb
pusha
pop
dec
repz
xchg
stos
sub
cmp
or
pop
adc
aaa
loope
test
mov
out
dec
popf
decl
push
sbb
inc
les
lods
mov
pop
dec
jns
jge
aas
pop
rcl
and
repnz
push
mov
jle
jg
ud0
mov
mov
mov
or
jge
mov
mov
aad
fucomp
sbb
std
shlb
mov
loop
out
mov
pop
imul
push
lea
outsl
iret
inc
leave
clc
push
mov
pop
pop
or
jb
cmc
mov
dec
insb
mov
xchg
test
add
shlb
sahf
sub
int3
mov
leave
outsl
in
nop
push
and
sbb
stos
inc
test
xor
inc
mov
jne
cmpsl
sbb
lods
pop
jg
xor
jae
push
xlat
sbb
mov
ss
cmp
cmpsl
je
mov
mov
jne
sbb
jbe
sbb
popa
aam
imul
jmp
mov
mov
dec
adc
inc
stc
dec
jmp
out
jecxz
je
shlb
les
add
mov
dec
adc
add
jns
and
xor
adc
add
mov
loope
fldenv
fisubs
aam
pop
push
dec
inc
orb
push
movsl
lea
cld
pop
in
mov
call
jne
imul
xor
fnstcw
inc
cwtl
into
jnp
xor
xor
or
fwait
in
icebp
enter
xor
popa
jo
std
sub
add
leave
sub
inc
cwtl
cmp
mov
cmp
push
popa
inc
add
movsl
ss
push
stos
xlat
test
mov
sub
xchg
dec
dec
rcrl
int
scas
fs
push
lahf
sti
jmp
rolb
je
sbb
adc
inc
mov
leave
fiaddl
cmp
adc
inc
mov
xchg
xchg
jg
push
mov
arpl
das
pop
lss
xchg
mov
jae
or
lret
mov
inc
fwait
arpl
test
and
cs
and
lods
enter
xor
dec
inc
sub
mov
lods
je
shlb
cmp
mov
push
sbb
jmp
imul
cwtl
sub
push
clc
push
fsubr
mov
and
imul
push
lods
ds
loopne
xchg
lods
jmp
jecxz
popf
into
add
jl
addr16
adcl
xchg
or
leave
sub
push
hlt
push
fimuls
push
movsl
cmp
and
cld
shll
shrl
lret
and
ds
fistps
mov
arpl
xchg
add
jno
call
test
sub
mov
bound
or
xor
addl
mov
cli
sub
out
cmpsl
and
cmpsb
insb
inc
cmp
mov
das
mov
push
push
sbb
rolb
push
or
xchg
add
jne
subb
cmp
lods
mov
jo
movsb
test
sbbb
lods
cmp
stos
sub
stos
mov
sub
sbb
dec
movsb
sbb
andw
dec
hlt
sbb
rcrb
xchg
adc
or
stos
mov
sahf
pop
fsts
aaa
xlat
fs
mov
sub
loopne
push
adc
lods
cmp
mov
inc
fmull
and
leave
jns
arpl
testb
jae
cmpsb
ds
mov
ss
shrl
inc
pop
adc
push
and
popa
loope
in
pop
or
mov
cmp
fsubrs
in
push
ds
cmp
pop
stos
es
in
in
push
mov
stc
nop
fs
sbb
into
test
lret
mov
pop
sbb
jnp
mov
inc
or
stos
mov
or
add
test
call
pop
push
loop
ret
xchg
adc
xor
lahf
adc
daa
fidivs
hlt
mov
call
adc
pop
inc
xor
pushf
rclb
fdiv
mov
popa
adcb
loope
daa
ret
pop
test
mov
call
add
inc
shrl
lcall
add
or
inc
cwtl
std
dec
repz
fstpt
rorl
xchg
cmc
push
sbb
into
xchg
push
mov
cmpsl
adc
pop
sti
or
jb
pop
mov
push
adc
fsts
xchg
adc
movsb
outsl
xor
pop
jg
and
cmpb
mov
imul
mov
stc
sbb
mov
aam
lods
inc
fdiv
push
or
mov
out
loope
fisubrl
in
jne
pop
gs
in
pop
xchg
mov
xchg
imul
xlat
out
test
xor
cmp
xchg
sub
imul
push
cmp
daa
mov
mov
push
or
scas
mov
leave
ljmp
bnd
test
repz
pop
mov
push
nop
push
faddp
xchg
inc
pop
daa
adc
add
shl
lret
jne
jmp
cs
dec
push
iret
xchg
call
push
push
push
fdivr
xchg
jmp
shl
call
or
popa
je
fwait
xor
mov
jg
loope
imul
aad
xchg
adc
mov
fdivrs
roll
f2xm1
adc
cmc
push
push
sub
add
push
test
aam
cs
or
jo
push
daa
icebp
cwtl
repnz
pusha
push
scas
or
adc
sub
int3
push
jo
xor
popl
out
xchg
pop
out
rorl
ret
or
roll
push
ds
jp
js
jle
or
add
leave
outsb
lret
push
or
hlt
add
cmpl
std
jecxz
cmpsb
repnz
fbld
icebp
or
mov
xor
in
leave
lahf
int3
jo
ss
xchg
clc
cmpsl
push
mov
mov
mov
ljmp
shlb
jmp
lock
loope
movsl
loop
nop
push
cmc
sbb
lcall
int
mov
sub
or
cld
add
sbb
jno
sbbl
dec
or
cmp
xor
cmpsl
ficoml
dec
dec
dec
cs
push
pop
sahf
stos
push
mov
ljmp
xchg
sysenter
add
xor
push
in
cmp
adc
aam
jae
aad
fsubrl
xorl
scas
out
insl
aas
shrb
ja
inc
and
fidivs
addr16
inc
ja
lcall
in
sbb
pop
xor
or
jge
imulb
xchg
dec
sbbb
ja
or
and
aad
call
mov
out
and
filds
push
and
cmp
cmp
sti
xchg
mov
mov
sbb
mov
fwait
es
or
mov
in
jle
nop
daa
dec
aaa
mov
adc
shll
mov
sbb
sahf
lea
add
mov
push
or
mov
lcall
xchg
outsb
add
push
or
ficoms
in
in
xchg
xor
xor
aam
subb
es
inc
in
jbe
xorl
out
xor
inc
mov
fisttps
sbb
mov
das
mov
rcrb
xchg
in
and
cmp
shlb
notb
inc
adc
mov
icebp
mov
sti
xchg
in
fcmovnb
loope
addr16
out
mov
and
dec
xor
cmp
xchg
jno
xor
fsubl
and
mov
ja
fldt
pop
xchg
ja
pop
test
adc
add
and
mov
iret
xchg
and
xchg
mov
push
cmpsl
mov
lock
shrl
notb
faddl
sub
lods
pop
mov
inc
pushl
stos
adc
and
pop
push
lods
xor
ja
leave
mov
push
cmp
subl
repnz
fdivs
stos
jle
jg
movsl
sahf
mov
cmp
add
int
enter
pop
cli
pop
xchg
test
jae
mov
mov
xlat
adc
or
rcll
adc
cmp
xchg
in
test
dec
or
adc
mov
inc
adc
gs
jbe
and
icebp
cld
jmp
jmp
xor
lods
mov
or
inc
fiadds
ss
or
gs
inc
pusha
or
stos
mov
pop
js,pt
pusha
inc
vpaddsb
stc
pop
in
dec
fdivrl
out
pop
int
cmpsl
out
and
cld
adc
call
adc
sbb
sub
xchg
jne
xor
push
and
imul
mov
add
dec
arpl
push
xchg
sub
lcall
out
xchg
aaa
mov
mov
xor
call
cld
dec
jb
inc
mov
jecxz
int
xor
mov
mov
icebp
stc
repz
sub
sub
pop
pop
jns
dec
scas
adc
addr16
call
out
xchg
cmp
sbb
sbbb
out
dec
lods
ljmp
rorl
stc
cmp
sub
xchg
in
leave
fiaddl
cmp
lahf
xchg
mov
ficomps
lea
mov
xlat
fldl2t
or
daa
imul
add
ja
sbb
or
inc
rorb
jg
mov
push
mov
xchg
mov
lret
negl
cmp
add
dec
movsb
jae
push
add
enter
adc
adc
negb
cld
dec
inc
fwait
inc
js
inc
popa
cmpsl
mov
jmp
jo
xchg
es
mov
mov
stos
in
ljmp
mov
push
jmp
push
out
pop
popf
jb
sbb
push
sbb
mov
popa
daa
dec
sbb
sub
sahf
pop
test
mov
bound
lcall
pusha
xor
pop
cmc
movsb
bound
adc
inc
jl
std
mov
cmp
mov
fisttps
xor
xor
mov
push
dec
dec
andb
pop
sbb
cmp
and
mov
adc
jge
sbb
shrb
cmp
push
aam
cmp
arpl
dec
mov
jnp
xorl
negb
push
xchg
std
movsb
addr16
jnp
iret
inc
in
mov
adc
mov
inc
xchg
cmp
cwtl
fwait
push
push
cs
lods
jno
ja
jg
in
push
jmp
lcall
pop
test
leave
dec
push
stc
jns
cmp
dec
adc
inc
sbb
scas
pop
leave
xchg
cmp
adc
fldenv
movsb
inc
test
inc
and
push
push
and
pop
cli
mov
mov
mov
in
cmp
ds
aam
adc
ja
sbb
xchg
inc
mov
xor
into
jl
mov
push
push
in
adcb
jl
out
inc
mov
sbb
rolb
jmp
out
cmp
jne
xlat
je
cmp
jecxz
pop
sub
inc
mov
aad
xor
arpl
jbe
cmp
imul
cmp
mov
cmc
ss
stos
xchg
scas
cmp
repz
mov
xor
fmull
xchg
mov
mov
je
in
jle
imull
inc
jle
inc
sti
ss
cmp
pop
cmc
lahf
bound
and
sub
incl
xor
and
stos
xlat
scas
push
and
loop
push
leave
cmp
test
jge
or
mov
outsb
sub
movsl
xchg
into
ss
sbb
les
cli
or
xor
add
cmpsb
scas
fsubrs
cmp
daa
stos
sbb
nop
sbb
mov
les
das
mov
orb
jmp
test
cmp
out
mov
xor
aas
xor
jle
mov
andl
push
shll
pop
pop
mov
or
gs
loop
pop
xor
adc
addr16
cs
add
cmc
xorl
int
sti
sub
mov
sub
push
push
sbb
mov
pop
outsb
pop
and
xor
dec
loope
xchg
inc
cwtl
sbb
in
imul
insl
hlt
and
test
xor
xor
out
push
jbe
inc
jmp
cli
inc
xchg
out
les
sbb
sbb
pop
fsubl
or
ret
in
jb
and
pop
jmp
aas
adc
loope
cmpb
lcall
lods
push
fistpll
hlt
push
outsl
loop
sub
xchg
jmp
pop
xchg
imul
scas
mov
mov
mov
cli
sbb
push
mov
and
aaa
cmp
pusha
cmc
mov
into
jl
pushl
dec
adc
inc
inc
shll
lahf
insl
xchg
push
repnz
xchg
repz
test
jae
add
dec
jp
push
adc
sbbl
sbb
data16
int3
mov
add
push
cmp
push
mov
in
loope
xchg
jb
mov
shr
cltd
add
xchg
scas
xchg
sbb
pop
dec
xor
push
adc
into
aaa
push
iret
cwtl
add
ret
test
push
push
jne
jbe
jbe
inc
hlt
sbb
or
push
std
clc
imul
clc
gs
out
cmp
push
in
push
aad
lret
popa
idivl
pusha
jle
dec
dec
xchg
fcmovnu
pop
loop
scas
or
fwait
cld
stos
inc
das
in
sbb
cwtl
clc
cmp
and
pushl
push
scas
stos
cwtl
and
cli
and
data16
out
add
clc
adc
mov
lahf
repnz
stos
mov
xor
lods
push
jns
sbb
cli
xchg
cmc
aas
or
lahf
sbb
shlb
push
push
out
xor
ret
sahf
lea
mov
or
ljmp
std
add
mov
lcall
lods
and
enter
pop
xchg
pop
mov
std
lcall
adc
mov
or
addr16
in
fmul
push
sbb
cli
icebp
xchg
aaa
movsl
imul
cwtl
push
in
mov
imul
movsl
sbb
pop
repnz
push
filds
stc
or
push
adc
fsubrs
dec
mov
xor
mov
mov
ja
pop
hlt
jg
cmp
dec
ss
push
mov
or
and
ret
cs
jle
xchg
dec
or
std
stos
std
jo
xchg
xor
stc
imul
add
std
ljmp
addr16
jns
adc
ljmp
iret
loope
mov
dec
sbb
pop
int
xor
lcall
lods
mov
fdivrl
adc
test
loopne
push
xchg
sbb
add
inc
mov
test
and
dec
inc
inc
push
inc
ljmp
adc
add
xchg
repnz
cmp
and
ja
sub
cltd
iret
mov
ret
cmp
xor
sub
sbb
cmp
out
xchg
pop
lret
xchg
push
cltd
xchg
mov
adc
cli
dec
pop
sbb
shl
pop
jo
dec
push
leave
push
jnp
popa
push
xor
lcall
pop
loopne
daa
xchg
dec
inc
popf
pop
jl
out
or
lcall
pushf
adc
data16
inc
inc
lcall
and
adc
ret
mov
loopne
add
sub
js
adc
scas
adc
ds
mov
and
push
subl
cmc
pop
fdivs
xchg
in
clc
xchg
mull
or
in
test
xchg
sub
call
push
cmp
fcoml
mov
stos
adc
mov
jne
jbe
sub
jp
jg
pop
jne
mov
loop
cmpsl
rcrl
or
push
das
test
aas
jbe
out
inc
or
adc
movsb
test
dec
dec
iret
scas
push
or
and
xchg
xchg
lahf
jb
arpl
gs
js
orb
mov
xchg
lods
repz
divb
in
mov
jbe
int
or
adc
cwtl
inc
lret
dec
xlat
fistpll
push
mov
popf
leave
push
popl
repnz
and
ret
sub
in
pop
add
in
ss
jmp
and
xchg
aad
enter
int3
xchg
push
or
negb
add
jnp
pop
imul
pop
test
iret
dec
adc
xchg
xlat
and
or
js
lcall
push
mov
pop
out
jp
popa
fcompl
pusha
jmp
shrl
mov
xor
outsl
inc
sbb
stos
inc
mov
sbb
dec
and
sub
adc
push
or
sbb
jns
jle
dec
lods
xchg
inc
xchg
ljmp
jne
xor
je
popf
jne
adcb
test
rorb
repz
lds
mov
xchg
add
testl
pusha
mov
push
fcmovb
add
xor
mov
int3
ds
mov
insb
test
jmp
test
ds
add
out
push
lea
mov
push
sub
cwtl
out
sbbb
add
sbb
sbb
lea
pop
add
pop
cmp
dec
add
mov
xchg
test
rclb
call
imul
inc
push
jl
mov
scas
inc
push
andl
fnsave
faddl
push
adc
mov
out
imul
and
scas
aam
xchg
xor
lock
fidivs
sub
sub
mov
popf
jbe
xchg
adc
fldenv
xchg
add
or
out
lock
scas
mov
cmpsl
out
imul
jo
xchg
daa
xor
add
jae
xorl
mov
stc
add
mov
sbb
push
or
aad
imul
daa
mov
xchg
jbe
int3
dec
in
sbb
lret
imul
dec
xchg
mov
cmpsb
jl
push
mov
mov
adc
cmp
cmpb
sbb
mov
adc
xor
scas
cltd
aaa
addr16
or
out
mov
ret
xlat
shr
xor
cmp
lea
adc
sti
pop
sub
inc
jns
mov
cmp
jo
cmpxchg
mov
or
inc
or
test
mov
imul
dec
mov
faddl
icebp
dec
lahf
add
push
stc
aaa
jmp
subb
jl
mov
xorb
sarb
mov
adc
scas
inc
sbb
add
jno
adcl
add
xchg
lahf
adc
ror
cs
stos
inc
xchg
insl
mov
test
lret
lret
das
jns
mov
adc
lea
push
mov
xchg
push
stos
xor
pop
push
xor
push
inc
dec
movsb
xchg
jne
mov
mov
push
lea
inc
and
adc
fidivrl
push
es
add
fnstcw
imul
test
repz
arpl
cmp
fs
jae
int
inc
popf
adc
cmp
inc
js
mov
pop
std
into
movsl
test
rcll
mov
inc
fcompp
pop
sbb
push
imul
jmp
dec
pop
scas
int3
cmp
adc
aas
jbe
jns
push
pop
lahf
xor
and
mov
shll
dec
pop
mov
lret
inc
and
mov
mov
pop
fs
cwtl
mov
rorb
mov
int
add
lods
stos
repz
es
mov
frstor
ds
das
push
mov
ret
orl
adc
cmc
push
sub
add
adc
ss
sub
fidivl
or
xor
in
xchg
sub
add
sub
movsl
add
por
das
pop
or
xor
cmp
xor
fcoms
or
xchg
push
jge
aad
mov
pop
lock
add
mov
push
mov
jno
dec
xchg
dec
in
fisubrs
add
call
adcb
push
mov
mov
add
inc
ret
in
hlt
popa
out
cld
scas
mov
aas
dec
aam
cmpsb
adc
out
popf
xor
jb
popa
movsb
aas
in
adc
and
pushf
or
testl
xorl
pop
mov
sbb
out
dec
push
sub
shlb
jmp
mov
jb
stc
js
xlat
into
and
jl
fldcw
sub
mov
fwait
mov
push
pop
andb
leave
insl
shlb
inc
mov
mov
push
and
add
xor
outsl
in
insb
jns
shrl
popf
popa
push
push
ljmp
jb
jns
xor
insb
mov
ja
jp
inc
mov
mov
je
jecxz
inc
cwtl
sbb
lods
dec
mov
test
mov
jb
jne
mov
and
lret
push
int3
in
jne
popf
xchg
lret
fnsave
xor
scas
arpl
jl,pt
fsubrl
mov
test
or
xor
jmp
test
repnz
pop
adc
mov
pop
jmp
jo
ret
xor
adcb
adc
pop
hlt
stos
jno
stc
dec
int3
and
push
pop
jp
adc
jnp
mov
push
mov
or
cmp
dec
push
add
push
aam
jl
notl
jl
rclb
imul
aaa
mov
jecxz
mov
js
inc
bound
mov
jecxz
inc
or
sbb
push
cmpsl
xchg
xor
or
adc
mov
inc
ss
ret
and
mov
and
lret
clc
or
sbb
movsl
adc
jns
pop
rorb
repnz
jae
lcall
mov
dec
jecxz
sti
pop
scas
cmpsl
sbb
and
adc
sub
jecxz
in
cmpsl
lahf
imul
out
popa
cmpl
test
dec
xor
repz
mov
mov
aaa
push
cmp
xor
movsb
repnz
fcmove
fnstsw
add
mov
mov
add
sub
xchg
jl
aam
jl
lods
lods
out
popf
pop
out
repnz
nop
pop
mov
dec
into
push
popf
lcall
and
xor
cmpsl
push
and
cmp
sbbl
adc
aam
push
mov
mov
inc
arpl
fnsave
rcrl
rcrl
loopne
rcl
dec
sbb
jg
mov
imul
add
pop
dec
dec
push
aaa
mov
dec
xchg
les
mov
sbb
pop
jnp
repz
jge
pop
lods
nop
lods
aam
hlt
mov
mov
cmp
sub
xchg
addr16
ss
sbb
aad
out
or
mov
sub
nop
pop
mov
xadd
mov
push
add
iret
jne
inc
xor
int3
lret
fmuls
movsl
or
test
fs
bnd
test
ret
ja
iret
ffreep
pop
dec
insl
push
add
imul
popf
adc
mov
lea
or
bound
lods
pop
outsl
mov
and
sub
pop
dec
pop
inc
fdivrs
xchg
mov
scas
mov
jecxz
call
aam
scas
cld
xchg
cmc
sub
xchg
xchg
pop
lds
jo
fisubl
pop
mov
ret
push
mov
pop
lock
xchg
bound
shl
stc
adc
and
cltd
xor
jnp
enter
dec
add
test
clc
mov
dec
cmp
jge
xchg
daa
mov
pop
movsb
outsl
shrl
in
jmp
inc
in
std
jae
jb
or
adc
pop
lcall
ds
movsl
outsl
pop
or
outsl
subb
popf
mov
fs
push
pop
inc
inc
paddd
mov
fwait
push
mov
aad
or
inc
cld
test
pop
fstpl
fldl
shlb
and
loopne
push
mov
std
aam
out
xchg
mov
ret
cmp
fcmovu
xchg
rcrb
mov
imul
mov
cmp
iret
popa
outsl
rol
sarl
roll
les
xor
mov
dec
pop
lret
cmp
rol
xor
fld
mov
and
inc
testb
sbb
in
sarb
or
test
inc
mov
pusha
int3
jbe
lods
xchg
fldcw
adc
repz
lahf
pushf
xlat
mov
xor
dec
fwait
or
mov
pop
cmp
xor
mov
push
xchg
sub
xlat
pop
loop
stc
push
ljmp
pop
imul
sub
or
dec
bound
inc
in
or
mov
jnp
or
hlt
ljmp
shl
pop
sarl
cli
jne
jns
stos
icebp
xchg
call
mov
xor
shll
in
dec
add
fstpl
jbe
pop
lahf
fiadds
mov
add
mov
ret
sbb
rorb
fsubrp
leave
daa
out
cmp
inc
push
and
pop
shlb
cmp
pop
xchg
jo
es
addl
je
and
movsb
cld
insl
aad
mov
shlb
sbb
pop
jp
mov
sbb
lahf
mov
dec
loope
jecxz
jg
pusha
jle
dec
cltd
pop
test
inc
push
sbb
mov
xor
sbb
dec
or
mov
iret
cmpsb
dec
mov
ucomiss
pushf
jnp
dec
mov
cmpsb
xchg
ljmp
jne
and
jae
in
lret
inc
sbb
push
cmp
xchg
ret
inc
fdiv
sbb
outsl
sub
dec
or
dec
fbld
adc
xchg
cmpb
xchg
mov
add
stos
cmp
mov
aas
jmp
jg
lods
mov
xlat
icebp
aaa
scas
xor
pop
cs
mov
popa
scas
out
adc
cwtl
popa
js
push
xor
bound
or
call
inc
sbb
pop
sarl
cmp
in
test
ljmp
pop
outsb
adc
movsl
js
lock
adc
lret
and
fsubl
js
mov
aaa
adc
pushf
and
push
mov
xchg
imul
mov
mul
sub
pop
push
adcb
cwtl
add
inc
cmc
and
iret
sub
xor
lea
and
icebp
xor
stc
test
outsb
test
aad
or
bnd
and
mov
dec
pop
mov
arpl
mov
fsubrl
add
in
jnp
sub
lret
in
mov
adc
xchg
call
or
adc
add
les
xchg
repnz
mov
dec
int
inc
push
cs
addr16
push
sbb
adc
les
fwait
jmp
pop
movsl
and
add
jns
icebp
icebp
push
mov
loopne
das
ret
sub
fistpl
das
cmp
arpl
push
dec
lods
cmp
jl
sti
test
fs
pop
arpl
stos
stos
lds
and
scas
push
lret
out
jne
jnp
sbb
stos
push
mov
mov
nop
repnz
add
dec
dec
fwait
xor
xchg
inc
sbb
adc
sbbb
clc
or
test
adc
adc
cmp
mov
cwtl
test
loopne
jmp
or
das
mov
in
mov
fidivrl
shlb
popf
sub
cmc
fxch
and
dec
insl
int3
lahf
in
lods
andl
mov
push
mov
jb
dec
mov
lret
inc
inc
pop
mov
mov
push
adc
add
cltd
data16
lcall
adc
fstps
xchg
xchg
and
xchg
das
repnz
jbe
clc
mov
pop
loop
push
clc
andl
insl
js
icebp
test
mov
xchg
mov
into
cmpb
dec
dec
add
stos
inc
gs
cwtl
adc
jg
lods
dec
shr
aad
push
hlt
movsl
add
mov
fwait
insb
fwait
test
add
leave
xor
jb
inc
mov
daa
into
and
push
stos
rorb
adc
imul
xchg
mov
pop
int
and
cld
loope
add
sar
ss
outsl
stos
mov
adc
xchg
sub
mov
imull
dec
das
xlat
lea
lods
inc
clc
jnp
jno
sarl
hlt
sub
add
mov
imul
cld
push
mov
jne
scas
add
pop
aas
sub
mov
add
add
pop
bnd
cli
jb
pop
imul
jno
mov
iret
mov
sahf
ret
adc
rcll
aam
mov
in
ret
dec
pop
sub
imul
lret
dec
repnz
lcall
inc
mov
hlt
shlb
cmp
mov
scas
or
pop
lcall
dec
mov
fsts
fdivrs
lret
cltd
mov
lahf
imul
rclb
push
scas
pop
and
dec
sbbl
insl
enter
imul
jmp
out
out
mov
cltd
push
xor
dec
lods
xorb
jnp
and
push
inc
inc
lods
in
in
xchg
pop
scas
cmp
icebp
lcall
testb
pop
jb
pop
sub
push
adc
mov
cmp
adc
cmp
insl
das
add
xor
hlt
mov
jo
call
dec
or
enter
add
int3
dec
out
or
sub
adc
mov
mov
jne
insl
xorb
ss
push
std
movl
push
sub
call
pop
stc
or
fimuls
jmp
mov
imul
mov
jge
fxch
notb
inc
dec
pop
out
cmp
out
jmp
pop
lahf
xor
shlb
or
stc
cmpsb
sub
sbb
cmp
insb
daa
fiaddl
xor
pop
lods
push
mov
sbb
mov
out
cld
and
dec
sti
dec
idivb
xchg
test
mov
setb
xchg
scas
fcomps
mov
sbb
addb
push
mov
xchg
xchg
stos
mov
fsts
pop
and
mov
or
aam
sub
adc
adc
mov
mov
lea
mov
into
sbb
or
ret
mov
sub
fisubl
adc
add
fs
rcll
dec
adc
jmp
dec
daa
mov
dec
dec
scas
lea
cli
inc
mov
xor
loopne
gs
jo
in
test
jae
or
and
or
cmc
cmp
sub
fptan
in
ljmp
dec
mov
pushl
xor
or
lcall
pop
jnp
lahf
sub
adc
outsl
les
mov
cmp
sub
pop
xchg
repnz
data16
push
gs
xor
pop
cltd
stos
mov
test
fs
int3
lahf
in
xchg
sbb
sbbb
testl
call
or
mov
movsl
js
mov
nop
sbb
inc
or
pop
les
adcb
clc
mov
sahf
int
shlb
add
jno
fcoml
push
push
jb
push
in
fnstcw
xchg
mov
sbb
or
mov
ljmp
mov
pop
xor
in
cmp
notb
dec
fildll
xor
in
mov
dec
ret
enter
and
ret
insb
mov
imul
mov
ljmp
jne
pop
xchg
xor
and
mov
lret
cmp
jae
add
pop
leave
mov
lret
xchg
mov
inc
jne
inc
bound
daa
mov
jnp
out
scas
repz
or
adc
sbb
mov
jg
sarb
jge
shlb
add
sahf
push
jge
popf
xchg
gs
mov
lods
push
enter
es
jl
mov
ljmp
test
lret
mov
mov
ljmp
mov
ljmp
pushf
lods
jo
lea
dec
out
test
xchg
je
or
hlt
sbb
imul
cmp
xchg
mov
into
mov
nop
or
dec
imul
mov
push
adc
pop
fldl
mov
adc
aas
add
and
mov
sbb
addr16
pop
push
lds
imul
imul
test
mov
sbb
cmpsl
jp
cmp
out
mov
stos
add
daa
scas
loopne
push
xchg
lods
repz
and
sub
mov
push
aaa
sarl
loopne
je
stos
subl
imul
fstpt
pop
mov
mov
popf
sti
jns
into
push
jmp
cmpl
mov
inc
xor
lock
push
mov
in
add
icebp
push
and
inc
imulb
sub
andl
adc
push
push
xor
push
jl
outsb
pop
jo
mov
test
xchg
popa
fidivrs
push
ja
jne
add
dec
xchg
adc
and
mov
lock
push
iret
in
cmp
pop
pusha
aad
pop
cwtl
xchg
dec
mov
and
sti
dec
icebp
mov
pop
ret
loop
mov
hlt
loope
push
and
jne
mov
adc
pop
cli
cmp
lahf
ss
cmp
sub
mov
mov
jg
inc
sub
ljmp
mov
xor
iret
ret
push
lods
jnp
adc
mov
sbb
mov
mov
push
vphadduwq
js
push
lods
sti
xor
mov
shlb
std
jne
stos
mov
pop
add
lock
mov
xor
xor
cwtl
pop
cmc
lds
pop
mov
iret
call
imul
out
xchg
and
fists
push
push
push
mov
shll
adc
xor
cmp
push
stos
sbb
xchg
out
setne
dec
popf
sub
scas
mov
loope
xchg
dec
mov
ret
daa
xor
test
lret
sbb
das
xchg
and
mov
jmp
out
fisttpll
push
cmp
xchg
jo
jp
fstpl
dec
pop
cmc
cmp
ljmp
dec
mov
sbb
iret
data16
loope
sbb
in
test
mov
jae
mov
jg
pop
cmc
push
lcall
push
mov
int
push
imul
fwait
out
xor
mov
jle
cmpsb
cmp
or
jno
imul
jne
sbb
popf
js
inc
sahf
xchg
mov
and
lahf
cld
jle
mov
scas
jl
out
sbb
and
cmpsl
ret
pop
adc
pop
push
mov
mov
push
ficoms
lods
lahf
movsb
in
test
bound
push
mov
lret
shrl
lods
xor
aad
mov
lahf
dec
jbe
cltd
cld
bnd
idiv
fstl
sbbl
mov
sahf
or
dec
push
xor
push
adc
jle
pop
stos
je
push
lea
movsb
push
lock
jle
mov
andl
pop
loope
or
inc
fnstsw
adc
cmpsl
dec
popf
mov
lahf
mov
fsubl
shrb
sub
add
push
mov
push
xor
jecxz
mov
pop
xor
fs
jecxz
mov
pop
fnstsw
mov
mov
inc
fnstcw
ret
sbb
mov
je
cld
lods
bnd
and
cwtl
das
cltd
inc
andb
cmp
pop
xor
mov
or
xorb
incl
mov
scas
pop
mov
xor
or
sbbl
mov
outsb
xorl
xor
insl
scas
fwait
inc
jno
xor
ds
jmp
rcrb
ss
aam
dec
cmp
push
fcompl
or
dec
lock
call
imul
ret
pushf
pop
out
or
stos
pop
cmp
adc
cmpb
out
sbb
loope
jl
test
adc
lea
stc
cmp
addb
dec
sbb
or
in
pop
lahf
dec
pop
in
leave
push
rol
jle
int3
imul
mov
test
cmp
pop
sbb
pop
repz
pop
push
xchg
sub
mov
and
cmp
dec
icebp
inc
mov
mov
outsb
adc
mov
push
outsl
adc
jae
xor
push
addr16
lods
xchg
stc
adc
adc
cmc
mov
mov
pop
adc
xchg
test
xchg
sub
sub
outsb
push
or
mov
orl
push
mov
pushf
cmp
adc
sbb
test
data16
add
enter
sti
fs
stos
test
adc
and
in
sbb
xchg
leave
mov
nop
push
bound
fisubs
fnsave
leave
repnz
inc
pusha
mov
push
inc
mov
push
inc
cld
inc
mov
out
lock
inc
and
int3
subb
call
sahf
inc
ljmp
enter
pop
cwtl
bound
movsb
xchg
cmp
or
mov
cwtl
ss
test
es
adc
sbb
pop
add
push
or
dec
or
adc
jmp
xor
icebp
mov
mov
mov
xor
fwait
push
xor
adc
aam
pop
dec
stos
fdivl
sarb
dec
mov
rolb
divl
and
ss
cli
xchg
sbb
lods
out
mov
mov
imul
leave
jmp
xor
insb
addr16
inc
dec
movsb
mov
or
dec
clc
andb
push
push
mov
adc
test
pop
pop
mov
dec
insl
jge
xor
cmp
mov
out
pusha
mov
mov
xchg
or
in
fcoms
lcall
lea
mov
xchg
popa
or
fwait
vmwrite
fadd
movsl
push
push
push
pop
mov
dec
aad
mov
sarl
and
sub
in
test
scas
fld
nop
das
adc
mov
jne
test
decb
xchg
je
out
dec
fisttps
ficoml
adc
cltd
xor
fmulp
xchg
pop
mov
adc
outsl
push
leave
fs
inc
cltd
lods
xor
push
mov
cmpsl
loope,pt
out
iret
add
loop
lock
stc
lea
in
negl
filds
adc
push
ret
loope
sbb
push
in
lea
sbb
jae
sub
shr
pushf
cltd
ja
lret
mov
or
sbb
jp
je
movsb
mov
cmc
test
sbb
outsb
push
or
mov
popa
pushf
dec
push
mov
or
jne
jnp
mov
jge
neg
data16
or
add
rclb
shlb
pusha
pop
insb
xchg
xchg
dec
fisubrs
nop
loope
inc
add
or
insb
loopne
out
mov
test
xchg
test
inc
or
dec
xchg
jb
iret
in
cld
add
jbe
stos
imul
and
jp
and
push
cmp
or
leave
fsts
pop
mov
ds
sub
adcl
jbe
out
mov
mov
pop
sbb
enter
xchg
jg
mov
loop
into
xchg
cmp
rclb
mov
sahf
xor
out
mov
adc
pop
mov
inc
aam
insb
xchg
outsb
fadds
xchg
rorl
mov
loopne
pushf
out
push
push
out
iret
aam
xor
fprem1
push
xor
adc
rorl
fs
push
sbb
mov
insl
jg
mov
add
xor
jno
mov
inc
lods
ja
loope
push
cmp
outsl
pop
mov
jno
sub
mov
add
pop
pop
lods
in
sbb
ficoml
out
cmpsb
dec
cld
cmp
cltd
adc
in
and
lcall
addr16
nop
pop
pop
cs
adc
xlat
push
push
scas
inc
xchg
cmc
dec
cmp
jae
mov
outsb
xchg
cwtl
outsb
mov
lock
cmc
mov
scas
jns
mov
xchg
notb
test
mov
ljmp
pushl
cli
nop
sub
dec
shrb
mov
xchg
ljmp
shrb
scas
iret
lock
cmp
xor
sbb
dec
cltd
lock
pushf
push
lcall
adc
sbb
popf
push
pop
mov
fs
fcomi
pop
adc
ja
mov
cmp
rclb
in
hlt
je
and
enter
xor
sbb
push
and
pop
inc
pop
je
jbe
xor
cmp
fisubrs
insb
loop
mov
fstpl
mov
loop
aaa
movsl
xor
outsb
je
push
das
mov
mov
insb
xchg
es
push
in
mov
movsl
mov
sbb
lcall
push
pushf
rcr
into
push
cmp
add
sbb
xorb
popa
jl
arpl
sbb
addr16
nop
stos
imulb
xor
mov
add
xor
movsl
sub
xor
sub
jne,pn
cmp
andb
push
test
sbb
enter
cltd
mov
pop
ja
or
into
dec
mov
push
inc
out
mov
pop
dec
dec
es
dec
jle
testl
sub
pop
cmpsb
jne
adc
dec
loope
xor
jp
sbb
aaa
into
xor
lods
mov
rcr
mov
loop
push
cmp
xor
arpl
int
loop
ja
mov
jae
test
outsl
shlb
out
adc
and
xchg
jb
mov
stos
adc
lock
or
jnp
dec
lods
not
mov
aaa
adc
je
enter
lcall
jmp
inc
inc
xor
daa
into
fsubrl
stos
push
or
inc
ja
arpl
push
push
jb
call
std
gs
add
and
imul
repz
stos
jnp
int
dec
and
push
cli
mov
sub
sub
sahf
jne
mov
cld
push
and
lret
and
push
test
in
in
out
pop
and
mov
cmp
xor
js
fdivl
cmp
insb
cwtl
or
cmpsl
hlt
ja
pop
fnsave
jnp
mov
sbb
lea
in
out
in
jle
sub
push
outsb
ret
je
adc
mov
pop
and
mov
jb
daa
cmpsb
mov
sub
cltd
sbb
dec
aad
inc
jecxz
xchg
mov
xchg
pop
jmp
test
fsubrs
mov
dec
iret
loope
mov
cmp
push
rcrl
xchg
int3
pop
fmuls
sbb
pusha
outsl
push
js
iret
shl
fcmovu
jb
jg
fisubs
xchg
adc
push
subb
inc
and
popa
pop
rcl
xor
daa
mov
dec
les
std
aad
mov
pop
arpl
stos
out
aam
stos
cmp
testb
mov
sbb
add
push
stc
jae
pop
pop
sbb
in
jl
jg
lods
sub
inc
cmc
adc
push
mov
pusha
nop
scas
sbb
xchg
xchg
xchg
sarb
loopne
out
fwait
dec
stc
cmp
ljmp
call
mov
shl
inc
out
addr16
xor
popf
jne
in
ja
xchg
sahf
fsubr
sub
and
dec
mov
jno
test
out
mov
in
push
hlt
push
xchg
jge
or
stos
push
jmp
inc
pop
pop
repz
into
sub
or
enter
push
nop
popf
daa
lret
xlat
cmpsb
mov
sbb
shll
scas
inc
in
xor
gs
push
iret
push
dec
jmp
leave
add
outsb
clc
mov
lds
push
negb
jecxz
and
rolb
and
jge
mov
insb
ja
vpsubusb
popf
leave
mov
subb
jo
jmp
cld
mov
into
scas
mov
aas
mov
fistpll
repz
ds
cltd
popf
lods
mov
jbe
shll
insl
jb
lea
mov
fs
cmp
rol
frstor
inc
outsb
dec
in
movsl
fisubrl
sub
and
add
add
push
mov
adc
push
popf
pop
fcmove
das
cmpb
aam
and
push
fists
mov
mov
pop
nop
sbbl
jns
test
jns
add
inc
mov
push
insl
adc
cmp
mov
dec
jmp
aam
inc
sbb
xor
outsl
inc
mov
fmull
dec
cmp
dec
fistps
push
scas
mov
rclb
addr16
dec
xchg
mov
cmovle
sahf
fbstp
movsb
sbb
and
cld
push
inc
xor
loopne
sti
mov
jne
add
sbb
addr16
mov
cltd
xchg
lods
mov
xchg
xchg
add
hlt
dec
fwait
jb
pop
mov
popf
data16
ficoms
adc
incl
xor
mov
inc
fcmovnb
mov
or
mov
xor
push
ja
sub
lahf
ds
xor
sbb
in
jl
in
mov
lret
mov
dec
push
fwait
dec
adc
cld
rol
jmp
repz
or
out
lock
fstpt
pop
lods
cld
int
and
and
xlat
push
mov
bound
sti
cmp
mov
adc
mov
inc
mov
enter
gs
jge
mov
sahf
inc
aas
dec
mov
ja
decb
cs
xlat
ja
test
pop
xchg
insb
add
and
mov
insl
pop
enter
aas
lock
pop
mov
sbb
jge
push
or
sub
fadd
hlt
mov
int
out
dec
out
cmp
lret
or
mov
dec
out
cmp
cs
jl
je
pop
jecxz
jg
scas
out
push
nop
gs
outsb
aas
test
addr16
mov
je
adc
push
mov
in
pop
jmp
mov
mov
fidivs
int3
push
nop
daa
andb
sub
scas
pop
pop
daa
rcrl
push
or
xlat
xchg
sub
das
xor
inc
movsb
addb
add
std
push
addr16
pop
add
in
insb
cmovns
or
push
out
bound
jb
dec
adc
sbb
clc
ret
xchg
cmp
imul
fstps
add
lods
xor
fnstenv
mov
inc
mov
and
or
jl,pt
cmp
movsb
cwtl
les
mov
loop
int
add
stos
les
test
mov
idivl
in
fsubl
dec
scas
jle
push
imul
dec
jge
hlt
inc
jo
xchg
cs
cmp
dec
std
pushl
popa
in
pop
sbb
mov
aam
mov
test
sub
pop
mov
cmpsb
mov
lret
mov
mov
push
outsb
nop
cli
push
movb
addl
imul
push
jnp
push
and
push
xorb
lods
sbb
cmp
sub
aam
cmp
and
dec
nop
push
test
aad
pop
push
dec
les
cmpsb
hlt
mov
les
je
int
and
and
sbb
lret
xchg
jecxz
orb
stos
add
pop
loopne
and
movsl
inc
in
cli
xchg
xor
dec
dec
aam
sbb
lret
lock
jmp
ja
shlb
into
add
out
fwait
aad
xchg
jno
xor
mov
jmp
loop
xchg
in
lods
stc
loopne
out
test
cwtl
pop
testb
jmp
int3
xchg
mov
dec
repz
and
imul
imul
or
insl
jecxz
in
mov
jg
cmp
repnz
in
ds
ret
mov
pop
lahf
out
lcall
pop
loop
insl
pop
cmc
jae
cmp
and
adc
xor
imul
in
stos
in
jnp
clc
imul
add
mov
mov
subl
scas
lock
mov
xchg
ds
sub
xor
xor
test
fcoml
sub
ret
inc
or
or
cmp
mov
jp
inc
mov
insl
and
ss
sub
loopne
fisttps
mov
out
push
stos
sub
mov
scas
sbb
mov
push
fdiv
mov
jg
cmpsb
sar
mov
mov
xchg
sub
ds
jmp
mov
inc
or
xor
fdivrl
scas
gs
xlat
repz
dec
cmp
inc
in
js
pop
in
lret
add
int
outsb
pop
mov
fcmove
cmp
or
jge
jnp
push
popf
enter
jle
stos
push
ljmp
inc
and
push
inc
pop
data16
aad
inc
lcall
les
notb
mov
dec
jb
aaa
cli
enter
stos
mov
cmpsl
jecxz
lea
xchg
mov
stc
sbb
data16
rclb
stos
imul
cld
aaa
and
mov
sar
loop
mov
mov
push
mov
jbe
shrl
cmp
aad
addr16
lret
and
add
imul
inc
testb
jb
jnp
jp
cmc
mov
in
fnsave
push
sub
xchg
sub
lahf
das
push
pop
sti
mov
lahf
mov
add
adc
les
and
push
mov
mov
sub
call
xor
pop
outsb
inc
or
pushl
scas
dec
mov
xor
pop
das
ds
ss
insl
add
xchg
mov
shufps
mov
xor
mov
addr16
cmovge
jns
pusha
and
adc
dec
loop
push
sub
andl
pop
jge
iret
sub
xchg
sub
xchg
add
xchg
cmp
popf
lds
jae
lret
jecxz
add
mov
lret
pop
lahf
je
shll
les
cmp
cltd
push
cltd
pop
repnz
xchg
movsl
cmp
jns
test
jae
sbb
arpl
cmpsl
popf
sbb
add
xchg
push
inc
loopne
aas
or
ds
js
testl
addr16
jecxz
mov
or
and
fidivs
jmp
mov
aas
ret
popa
pop
cmc
cmp
xor
ret
pop
mov
or
pop
fbstp
sbb
xchg
jo
int
test
ret
jo
cmp
mov
mov
cltd
mov
imul
test
shlb
jbe
jecxz
data16
dec
add
or
sbb
fstps
jge
and
xor
and
call
xchg
add
push
test
mov
cmpsb
cmp
xor
pop
ljmp
push
pop
fsubrl
ret
jnp
jmp
addr16
dec
jb
jp
inc
movsl
test
je
sahf
test
adc
cmp
jg
adc
sbb
ja
popf
mov
inc
call
insl
pop
imul
mov
mov
push
addr16
sbb
jmp
pop
mov
cmp
lcall
xchg
xchg
or
mov
push
loop
mov
inc
jecxz
sub
test
mov
rcll
xor
lret
sti
imul
mov
fimull
sub
add
push
pusha
lods
jmp
test
cmp
ss
mov
idiv
mov
push
and
pop
testb
sbb
jge
cmpb
aas
sarb
popf
jg
aaa
popf
xor
push
shl
int
jae
stos
mov
push
xchg
mov
xor
or
sub
in
aaa
push
mov
sbb
jge
push
out
xchg
mov
add
mov
lock
inc
in
pushl
mov
add
bound
fwait
xchg
iret
cmpsb
out
clc
and
xchg
dec
pusha
jns
mov
loope
hlt
mov
mov
jmp
adc
cmc
flds
sub
ljmp
outsl
push
mov
lock
dec
out
mov
in
mov
mov
xsha1
cmpsb
iret
std
ss
and
sub
repnz
out
push
hlt
fdivrs
idivl
lds
aam
xchg
and
call
outsl
jns
jo
adcb
pop
lock
sub
sbb
ja
cmp
adc
pop
cmpl
imul
xchg
jae
shl
inc
sbb
xchg
adc
fadds
adc
jp
add
jl
mov
sub
aaa
aam
jo
add
popf
inc
clc
sub
jle
pop
iret
add
ds
mov
pop
dec
add
mov
and
ficompl
imul
add
mov
xchg
jp
xchg
mov
inc
out
push
jmp
dec
mov
pop
pushf
cmc
lea
js
pop
mov
push
mov
dec
push
lcall
or
ss
iret
xchg
mov
jne
inc
xchg
sahf
std
inc
pushw
mov
insb
jl
popf
aaa
adc
loop
mov
and
stos
in
sti
xchg
ss
cmp
shrl
lds
push
imul
mov
and
xchg
scas
out
outsl
iret
gs
call
addl
or
and
popf
or
sarb
add
push
mov
pop
in
mov
pusha
inc
xchg
mov
pop
mov
mov
sti
popa
mov
inc
jno
bound
and
push
imul
xor
int
push
add
ss
in
pop
pop
in
or
and
mov
sbbb
sub
push
adc
cmp
inc
orl
and
leave
sbb
xchg
sbb
xchg
ss
ds
push
pop
hlt
mov
mov
data16
pusha
test
call
lea
ja
cmp
sahf
jno
sbb
pushf
imul
xor
ljmp
es
cmp
mov
out
das
pop
out
bound
ror
pop
hlt
sub
out
lcall
in
fdecstp
or
sub
mov
loope
add
shrb
lret
call
scas
les
mov
addr16
adc
dec
pop
scas
mov
adc
int3
inc
inc
dec
loope
mov
jmp
aam
jne
idivb
mov
xchg
mov
sbb
dec
fstl
xor
xlat
into
in
adc
pop
jmp
mov
into
sbb
mov
into
cmp
mov
hlt
inc
xor
fcmovnu
lods
ja
shlb
jnp
ficoml
xchg
jbe
mov
scas
dec
fmull
leave
sub
rolb
inc
inc
jno
fcompl
cld
sbb
pop
js
mov
push
or
js
lock
leave
sub
and
cli
xchg
push
xor
pop
xchg
and
fstps
inc
stos
push
jbe
mov
push
push
lahf
outsl
scas
mov
lods
pop
sub
xchg
rolb
xchg
cs
outsb
outsl
fnstenv
or
mov
pop
ficompl
mov
cld
xchg
arpl
sbb
sub
push
jnp
adc
pop
fidivl
push
pop
dec
or
sub
fdivs
test
jno
adc
mov
cmpsl
push
dec
push
jg
dec
sub
out
lods
dec
shrb
fsubl
jo
test
fildll
and
add
adc
jnp
addr16
mov
nop
cli
orb
adc
movsb
cltd
scas
fsub
or
repz
call
test
lret
cmc
mov
in
adc
cmpsl
and
mov
or
push
mov
fs
call
inc
xchg
sti
lock
negl
cmp
daa
lods
into
cwtl
arpl
pop
cmpsl
testl
fdivrl
aaa
dec
pop
movl
push
fisttps
aad
or
fs
mull
int3
xchg
mov
cmp
pop
sub
inc
faddl
test
dec
shll
outsb
fists
imul
jl
xor
movsb
mov
push
test
pop
in
dec
push
in
orl
jge
ret
jns
add
and
testb
and
inc
sbb
lock
dec
jo
int
push
dec
mov
pop
and
jae
jmp
test
js
jl
add
push
addb
lahf
sbbl
aas
dec
bound
or
jmp
loope
lds
fdivrl
mov
pushf
imul
roll
or
iret
out
sub
ror
fs
push
and
push
mov
in
sub
xor
stc
inc
pop
movsl
mov
dec
rcll
rcll
insl
sub
sahf
pop
leave
ror
andb
pop
fdivrl
push
xor
addr16
or
cmc
add
in
int
mov
fdiv
lea
cmpsl
inc
cmpsl
fdivr
imul
fdivrp
xchg
std
hlt
out
ja
lcall
lret
aaa
jbe
adc
inc
fistpll
add
inc
push
repz
stos
mov
cmpsb
movsb
xchg
dec
add
je
inc
lods
and
cmpsb
mov
or
scas
push
inc
inc
cmpsb
jp
push
pop
or
mov
mov
in
cmp
out
pop
xchg
test
add
test
cmp
cmpsl
cmp
or
std
xchg
pop
sbb
cmpsb
cmp
int3
lret
lds
js
sub
orb
inc
adc
sbb
pusha
out
add
cmp
jp
ret
push
push
fdivp
or
mov
sbb
pusha
loopne
jnp
pop
dec
movsb
xchg
testl
cmp
jl
sahf
in
inc
or
and
sub
outsb
cmp
repz
sbb
testb
sahf
out
nop
sub
mov
dec
mov
cmp
jg
les
lahf
lds
jb
adc
jmp
inc
nop
fsts
push
mov
sub
add
mov
insl
adc
out
push
pop
and
in
enter
cmpsl
inc
cli
push
cli
enter
adc
or
jle
clc
pop
inc
out
stc
imul
sbb
xor
es
cmpsl
aam
xchg
inc
xor
xor
and
add
dec
movsb
aas
aam
or
shl
imull
xchg
lods
xchg
sbb
or
sbb
in
or
int3
xchg
fstl
cmp
push
mov
pushf
adc
jmp
add
dec
inc
push
jp
adc
leave
sti
add
or
cmp
bound
mov
cmpsl
adc
add
fstl
push
and
pop
dec
xchg
xchg
jl
inc
arpl
inc
pop
mov
or
dec
add
loope
jmp
xor
inc
fldl
add
int3
adc
mov
loop
jns
or
sub
test
dec
push
movsl
jle
adc
dec
xor
jb,pn
ljmp
push
sub
jmp
lods
sbb
out
in
pop
stc
mov
fdivrl
xchg
cmpb
xlat
adc
stos
cltd
fldl
xchg
inc
cmp
mov
jb
fildl
nop
or
sub
inc
push
push
mov
xlat
xor
js
daa
ds
adc
push
icebp
int
xchg
mov
sub
mov
sar
mov
sbb
icebp
pop
dec
lahf
dec
adc
das
cmc
rcrb
push
testl
cmp
sbb
fcmovnbe
imul
push
out
ss
push
jmp
xchg
jle,pn
aad
xchg
xor
adc
test
call
out
adc
imul
dec
xchg
mov
mov
lret
add
sbb
push
mov
aam
test
jge
dec
pop
rclb
ds
lea
xchg
shrl
int3
adc
cmc
out
or
pop
push
push
sub
das
inc
dec
pop
lahf
jle
ret
lret
cs
xchg
sbb
sub
xchg
rol
lcall
xor
stos
aas
enter
pop
repnz
iret
mov
fstpt
test
cmp
jl
cmpl
je
aad
cmp
cmc
hlt
push
mov
adc
push
sub
data16
xor
popa
mov
fdivr
and
out
cmp
pop
ss
pusha
xchg
dec
pop
gs
inc
aaa
sbb
jae
fstp
pop
arpl
mov
jl
lods
pusha
xchg
pop
push
sahf
sub
dec
lea
mov
cli
inc
out
xor
fldcw
clc
sub
fs
fstps
sbb
in
xor
lea
adc
mov
and
adc
sbb
aad
ss
cs
xchg
cwtl
das
or
mov
mov
push
add
dec
and
arpl
jbe
jmp
jo
in
outsb
arpl
pop
pop
adc
ds
out
pop
jg
in
lock
mov
xor
pop
scas
ja
jno
ss
adc
push
js
xchg
stos
jg
push
imul
xchg
mov
jne
jbe
cmp
inc
ss
pop
pop
xor
gs
jecxz
ss
arpl
pop
adc
mov
fsubs
je
xchg
mov
int
dec
movsb
fs
push
lock
popa
pop
popf
fwait
lahf
push
std
xor
and
shrl
inc
int
mov
out
rolb
or
ds
ds
or
mov
rorb
lods
inc
sub
aas
pop
push
mov
and
pop
lret
filds
sub
mov
xor
inc
mov
sti
xor
out
xchg
pushf
test
pusha
inc
pusha
ss
dec
loop
add
mov
lods
popa
test
mov
push
jo
cmpsb
mov
leave
loope
pop
stos
out
push
jno
fcoml
xor
mov
cmp
ss
fsubrp
inc
xor
scas
data16
xor
lret
adcb
jecxz
nop
add
sahf
mov
and
scas
push
mov
cmp
mov
pop
ljmp
notb
add
xchg
sbb
jno
mov
pop
jmp
out
addr16
out
push
pop
lods
test
fstpl
xchg
outsl
and
fs
jne
in
mov
lock
push
int
push
lods
mov
or
cvtpi2ps
into
lods
shll
in
test
adc
pop
sub
jne
cmpsl
sbb
loope
out
adc
jmp
sahf
and
cmp
lods
movsl
jmp
hlt
pop
faddl
mov
shlb
fisubrs
fchs
sti
or
std
lcall
add
pop
decb
es
or
fildll
fcmovu
adc
push
rcll
push
mov
lods
pop
jnp
jo
mov
mov
dec
jb
mov
das
sub
fistl
ljmp
and
loop
cmc
cmpl
out
sbb
push
sbb
sarl
sbb
outsl
push
decl
ljmp
push
inc
dec
subb
sbb
das
test
inc
mov
inc
cmp
ret
cmpsl
ljmp
cmpb
repnz
insl
into
iret
aam
jle
or
mov
fs
push
fsubr
ret
jne
iret
rorb
lahf
dec
sub
fbld
jno
inc
push
push
mov
dec
out
xchg
sub
lea
mov
sub
out
testb
push
and
mov
movsl
cmp
psubsb
push
lods
fs
mov
mov
xor
shll
mov
test
mov
sub
xchg
inc
jne
mov
insb
scas
pop
ret
xor
xchg
insl
loopne
sbb
add
popf
mov
jmp
push
and
xchg
pop
lcall
push
rcrb
adc
cld
dec
cmp
lds
repnz
push
inc
and
mov
js
enter
push
icebp
loop
dec
in
ja
je
xchg
imul
iret
cmp
jg
push
stos
cs
out
sti
std
push
sub
out
cltd
mov
mov
rcll
cmp
imul
pop
push
adc
out
push
add
aam
repnz
scas
mov
xor
adc
dec
andb
mov
sub
aas
ficompl
je
pop
rcr
loope
sub
pop
or
sub
mov
mov
shrl
movsb
jns
mov
mov
sub
inc
fildll
into
in
rcr
jl
cmpsl
cmp
mov
lret
mov
sbb
icebp
jmp
shl
aaa
mov
mov
inc
sbb
cmpsb
sti
mov
les
subl
inc
push
dec
js
mov
outsb
test
loopne
adc
test
scas
sub
or
inc
inc
cmp
mov
gs
cmpsl
xor
pop
push
pop
mov
pop
ret
inc
shlb
inc
jo
mov
repz
pushf
sbb
fdivr
jnp
rcrl
lock
sbb
ret
mov
addr16
push
jmp
add
bound
mov
sbb
scas
test
pusha
push
pusha
xchg
sub
lods
js
xor
add
inc
sbb
cmp
push
push
sbb
cmp
cmp
ret
in
inc
into
xor
sub
cs
pop
std
dec
dec
xor
out
bound
cmp
inc
inc
ds
test
int3
fisubs
and
movsb
aaa
lret
ret
mov
pop
xor
mov
daa
shl
popf
or
sub
fxch
push
xchg
inc
lock
sahf
sub
xor
push
repz
sbb
mov
aad
sub
mov
jns
cli
mov
in
psrld
dec
mov
aas
imul
xor
in
adc
inc
pop
nop
cmc
js
daa
mov
sbb
ja
push
jnp
and
push
sbb
pop
dec
dec
sbb
jbe
cmpsl
movsb
mov
imul
push
loop
inc
xchg
mov
dec
insb
ret
sbb
xchg
mov
inc
mov
sbb
das
and
xchg
xor
adc
insb
hlt
adc
loopne
stos
pop
mov
xor
mov
shl
mov
and
in
mov
cmc
mov
incb
push
stc
aaa
mov
in
sbb
sub
push
out
mov
inc
add
out
out
dec
pop
aam
sbb
dec
adc
mov
daa
sarb
jg
out
cmc
adc
add
push
cli
xorl
outsl
inc
out
loopne
push
hlt
cmp
imul
sbb
mov
stos
out
lock
xchg
lret
or
or
fldl
aas
push
orl
cmp
cmp
es
push
or
mov
cwtl
push
icebp
dec
xchg
xor
adc
shlb
mov
in
jae
mov
xchg
decl
les
leave
ds
mov
sbb
xor
inc
faddl
movsb
arpl
pusha
mov
sti
xchg
jmp
sbb
and
mov
jge
aaa
mov
lods
pop
cmp
or
cmp
push
pushf
sbb
int
popf
jns
addl
les
es
cmp
mov
outsb
bound
je
inc
fnstsw
cmc
xchg
push
dec
fistps
adc
push
sub
movsl
cmp
leave
lock
outsb
cmp
jg
in
jl
xchg
pop
das
jp
cmpsl
mov
adc
jle
in
push
rcl
lret
jge
push
mov
push
mov
data16
mov
push
cs
inc
pop
call
dec
or
repnz
or
mov
sbb
vzeroupper
testl
orb
pop
in
adc
cmp
mulb
test
cmp
iret
stos
mov
adc
jmp
incb
sub
shl
gs
xchg
std
cmc
adc
fidivl
shr
cmp
jne
lea
push
aaa
cmpsb
dec
xchg
popa
xor
xchg
inc
cmc
mov
scas
cmpsl
mov
in
sub
jne
test
iret
xorb
sub
lds
inc
arpl
ret
ficoms
ss
decl
dec
icebp
mov
jecxz
inc
outsb
jl
inc
mov
rcrl
ficompl
daa
loopne
fsubrs
or
or
and
leave
pushf
outsl
daa
xchg
pop
xor
out
pcmpgtd
dec
xor
cwtl
scas
sbb
inc
push
push
xorl
shl
or
cmp
dec
cmp
iret
lretw
jp
testb
jle
mov
pop
sahf
ljmp
xor
cmp
add
sbb
shrb
fldcw
out
imul
xchg
push
dec
and
fisubrl
fmul
es
into
sbbl
add
jge
push
push
push
sahf
dec
scas
cld
and
fnsave
imul
and
push
push
subb
sub
popf
cmpsb
gs
jb
popf
mov
jno
sbb
push
insb
pop
addr16
ljmp
call
roll
insl
ja
xor
bound
test
stc
sarl
in
mov
or
push
xchg
cwtl
ljmp
outsb
jo
sbb
xchg
test
mov
cmpsb
push
sti
fwait
jg
shrl
aas
js
mov
fnsave
push
andl
mov
pop
stc
xchg
mov
push
divl
pop
push
sbb
mov
test
outsb
mov
aam
cmp
divl
movsb
xor
mov
xor
adc
cmp
cltd
addb
orb
mov
xor
dec
xchg
repnz
outsb
xchg
and
mov
int3
daa
sbb
lcall
sahf
push
loopne
outsb
movsl
sbb
lods
jg
cmp
jecxz
addr16
adc
xor
dec
testl
xlat
lods
and
push
lahf
jbe
mov
subb
xchg
mov
adc
jecxz
lret
add
and
testb
cmp
or
or
out
out
adc
cmp
inc
sub
iret
into
pop
xlat
mov
lea
fwait
ds
xlat
mov
fistpl
xchg
int
call
dec
test
aaa
outsl
in
push
insl
cmp
popf
push
mov
push
testb
adc
xchg
sub
push
cwtl
das
jnp
mov
cmpsb
pushf
mov
mov
lds
je
push
or
ljmp
mov
add
xchg
rorl
xor
jg
popf
push
dec
in
cmp
add
jge
lcall
js
repnz
icebp
stos
dec
mov
jae
sbb
shrb
mov
daa
pop
xchg
and
inc
icebp
fidivs
jb
pop
mov
jge
mov
ja
loopne
sbb
push
sub
insl
loopne
push
ljmp
inc
data16
das
xchg
add
xor
fistps
pop
enter
fucomi
not
push
div
sbb
sub
sub
xor
loope
mov
daa
loope
jnp
dec
jae
lcall
insl
cmp
xchg
mov
mov
pusha
adc
ss
shlb
cmc
gs
pop
jecxz
jge
out
mov
pop
sub
dec
pop
jle
mov
inc
cmp
mull
pop
icebp
dec
add
js
cltd
inc
dec
pop
inc
fidivrs
loopne
popf
xor
mov
aaa
lods
push
pop
adc
pop
or
add
jl
jbe
shrl
and
lds
gs
mov
and
movsl
nop
jnp
lock
fmul
std
out
or
xchg
add
add
nop
pop
cltd
mov
mov
in
or
int3
and
stos
xlat
aas
test
pop
jbe
call
cmp
mov
cmc
cmp
mov
out
std
daa
mov
out
and
scas
or
das
jb
outsb
cwtl
mov
iret
mov
enter
and
mov
jne
rolb
movsl
pop
lock
inc
aad
or
daa
ds
bound
cmp
stos
jmp
or
dec
test
fistpl
lods
sbb
cld
lcall
mov
push
jbe
mov
jne
test
aam
roll
mov
arpl
xchg
je
insb
push
rcrl
into
gs
and
sub
lock
inc
jae
shl
setbe
mov
dec
in
add
mov
adc
dec
lret
jg
inc
sub
hlt
sbb
mov
sahf
xchg
imul
scas
jbe
or
mov
dec
lock
cltd
lods
push
and
and
and
rol
mov
aam
mov
pop
jne
add
loopne
inc
ljmp
aam
popa
jmp
and
adc
sti
outsl
push
ss
sti
mov
mov
sbb
mov
xchg
stos
cmpsl
mov
stos
in
repnz
insb
rorl
stos
popf
rcr
dec
into
add
int
fs
mov
fbstp
mov
sbb
push
hlt
popl
das
fwait
add
xchg
nop
hlt
cltd
lahf
lods
mov
cmp
mov
leave
and
es
inc
fsub
xchg
cmpsl
aaa
adc
fs
dec
jae
sbb
mov
xor
cmp
aaa
stos
mov
pop
bswap
es
lods
xor
into
fwait
sti
inc
addl
loop
mov
adc
dec
pop
lret
lahf
shld
scas
inc
cwtl
ljmp
ja
je
pusha
in
inc
lods
jmp
mov
jmp
cmc
pop
int
dec
js
pop
mov
into
adcb
enter
adc
mov
cmp
push
inc
or
imul
xor
sub
pop
pop
lea
mov
cvtps2pd
inc
sbb
xor
xchg
pop
in
in
in
sub
dec
inc
lods
int3
int3
add
mov
test
mov
and
mov
push
call
or
outsl
jge
sub
mov
in
addr16
sar
inc
push
xor
jno
adc
cld
pop
cmp
or
test
sbb
rcll
pop
pop
jo
into
mov
adc
test
mov
out
sbb
iret
lea
xor
add
xor
adc
sbb
bound
fdivr
push
xor
jmp
arpl
add
and
and
mov
js
daa
call
repnz
inc
call
mov
int3
mov
push
push
enter
loop
subb
push
sbbb
xchg
dec
gs
in
mov
fwait
xor
hlt
imulb
mov
mov
mov
xchg
adc
inc
and
loop
sbbb
or
push
and
stos
push
lods
inc
test
mov
fwait
cmpsb
dec
dec
mov
mov
inc
mov
mov
out
out
jl
pop
insb
sbbb
aam
xor
rorl
lock
sub
inc
in
test
call
ja
push
data16
mov
sbb
xor
scas
xchg
dec
cwtl
repz
and
xchg
xchg
mov
push
in
add
push
scas
es
mov
mov
mov
mov
inc
sbb
mov
xor
cltd
ficompl
jle
adc
pop
sub
test
dec
pop
cmpl
gs
mov
pop
fcomps
test
pop
outsl
inc
push
inc
mov
incb
and
popa
mov
xchg
cmp
cmp
jle
mov
add
fistpl
aas
dec
cmp
testl
add
sbb
and
or
jl,pn
arpl
insl
mov
sub
pop
data16
push
add
inc
cs
pop
test
pop
add
dec
mov
gs
mov
imul
xchg
jb
xor
or
jecxz
aas
outsb
mov
add
or
xchg
mov
roll
fcomi
out
xor
sarl
insb
js
adc
and
rcll
mov
adc
fiadds
dec
scas
cmpsb
cmc
pop
faddl
dec
pop
dec
leave
push
jmp
les
cmp
orl
repz
xor
enter
pop
inc
pushf
mov
movsl
enter
js
sub
mov
lds
sub
push
pop
insl
js
test
adc
sub
push
movd
dec
pop
nop
mov
sbb
fs
xor
mulb
or
pushf
push
mov
adc
add
jg
mov
jecxz
push
leave
and
jb
mov
cmpb
das
lds
sbb
scas
std
push
push
or
xchg
std
negb
repz
orl
mov
inc
mov
xchg
testl
sbb
rcl
cmpsl
add
ror
outsb
pusha
aad
mov
mov
ret
call
lret
cmp
insb
jle
sbb
es
sbb
push
test
fiaddl
divb
sub
shll
or
mov
cmc
aaa
icebp
jne
bound
adc
push
hlt
js
mov
ss
pop
jge
and
lea
js
dec
lret
ret
pop
lock
fcoms
inc
lock
mov
add
and
mov
add
data16
inc
add
pop
mov
adc
cmc
lahf
lods
and
dec
push
andb
mov
xchg
fbstp
dec
hlt
sbb
jg
iret
jle
std
push
jp
inc
pop
mov
dec
jnp
mov
ret
fsubrl
and
les
stos
nopl
mov
mov
cmp
and
icebp
insb
mov
push
cmc
int3
mov
push
imul
lods
bound
in
push
les
testb
pop
xor
add
adc
fwait
xor
jae
dec
hlt
mov
cli
lcall
add
add
insb
mov
leave
sub
pusha
fildl
aas
push
push
and
sub
xchg
pop
fisubl
inc
in
pop
in
xor
into
rcrb
xlat
ss
cmpsl
ljmp
mov
and
mov
mov
cmpsb
out
inc
fprem1
stc
idiv
push
cld
clc
pop
push
call
pop
add
arpl
mov
and
scas
fisubs
lret
cli
nop
mov
mov
out
mull
cmpsl
loopne
mov
orb
js
xchg
lods
mov
loope
imul
mov
xlat
cmc
and
sbb
inc
inc
pop
jns
es
lahf
lds
repnz
jb
dec
test
int
pop
jmp
int
mov
pop
add
stc
jle
mov
fdivrp
and
cs
fs
in
mov
icebp
jb
and
lret
push
add
cmp
add
xchg
or
mov
rclb
xor
add
push
cmp
sub
lea
mov
call
into
inc
in
out
in
insb
sub
xor
cmp
mov
push
fmul
sbb
pop
out
cmp
inc
cmpsl
jge
jo
push
jp
add
cmp
push
and
push
sti
lea
xchg
add
cmpsb
testb
fwait
cmpsl
or
lock
jp
les
cmp
es
jl
clc
xchg
repz
jg
out
or
cmp
cmpsb
jle
out
clc
pop
call
rol
push
call
mov
flds
mov
shrl
jmp
add
push
mov
outsb
mov
mov
lds
jl
adc
andb
shrb
xchg
mov
scas
mov
ljmp
aad
mov
daa
int
mov
adc
cmp
push
jmp
or
stos
nop
or
cmpsb
inc
xor
mov
mov
pop
sarb
frstor
sahf
js
dec
xchg
and
shl
enter
push
fimuls
add
sub
lcall
testb
inc
int3
arpl
xor
jle
out
cmp
mulb
jmp
adc
xchg
shl
and
and
enter
in
out
sbb
ficompl
pop
adc
dec
fbld
cmc
mov
fmulp
xchg
sub
rorl
cmp
push
mov
or
fimull
mov
mov
adc
ror
pop
push
in
mov
jge
xlat
mov
xor
mov
mov
inc
out
gs
dec
push
or
lods
int3
mov
and
and
cmpsl
mov
add
mov
sahf
add
pushf
js
shrl
mov
aaa
pushf
aam
popa
jecxz
sbb
pop
repnz
sub
mov
outsl
cmp
dec
mov
push
frstor
mov
insl
rol
adc
cs
xor
mov
xchg
out
adc
les
mov
ljmp
sbb
xchg
mov
pop
insl
dec
mov
inc
movsl
mov
mov
xlat
mov
cltd
sbb
gs
xor
xor
mov
or
ljmp
mov
dec
pop
ja
push
sti
cmpsl
xchg
mov
bound
lock
jge
pop
lcall
in
lcall
cmc
mov
jbe
and
pop
out
push
inc
in
rcrb
loope
jmp
inc
sahf
in
lods
mov
and
or
add
mov
jle
repnz
aaa
test
or
add
fsubrs
xchg
adc
out
rcrb
test
or
insl
clc
adc
sbb
mov
das
mov
push
and
push
roll
mov
fiaddl
xor
cmpsb
cmpsb
frstor
dec
outsl
test
dec
aam
add
sub
cs
fcos
dec
inc
inc
mov
into
sbb
push
xchg
mov
jmp
dec
fnstcw
xor
dec
jl
jle
lods
pop
cmp
mov
adc
mov
sub
push
push
inc
xchg
jns
hlt
pop
dec
daa
and
pop
dec
divb
iret
cmpsb
xor
cmc
shlb
imul
sbb
aas
pop
nop
sbb
sub
pusha
pushf
ljmp
push
in
or
cmp
adc
mov
xor
js
sbb
fsubrl
mov
dec
push
adc
mov
inc
mov
imulb
iret
ds
shlb
repnz
lcall
movsl
push
add
je
mov
or
jne
push
push
enter
sbb
fdivrl
in
mov
std
in
test
sti
into
xor
sub
repnz
out
push
scas
cmp
push
lea
inc
or
in
jbe
ss
out
in
mov
pop
sub
or
mov
pop
mov
dec
xchg
imul
sub
enter
xor
lret
mov
and
dec
arpl
cmp
cmp
add
aas
jge
jne
idiv
sub
out
or
fnstcw
arpl
out
mov
lea
test
pop
push
stc
push
jae
lods
cmp
adc
inc
imul
adc
rolb
push
fmul
inc
adc
jo
xchg
xchg
icebp
fildl
mov
push
xor
and
push
dec
hlt
mov
dec
sub
mov
lds
in
popa
mov
out
xchg
sbb
shlb
scas
adcl
insl
inc
fstps
sti
xlat
xor
dec
stc
icebp
loopne
lret
add
xor
mov
fldt
stos
je
nop
imul
adc
cmpsl
imul
mov
push
mov
nop
fsubrs
cmp
testb
daa
outsl
loop
hlt
inc
lcall
not
dec
shlb
ljmp
gs
mov
jecxz
inc
in
cmp
call
mov
fisubrl
mov
pop
add
test
xchg
cli
pop
add
or
pop
out
sahf
cmc
add
pop
xor
fsubrs
cmpsl
push
jge
in
xchg
test
mov
sbb
aas
mov
add
sbbl
dec
jmp
push
sbb
or
pop
lock
addr16
fs
cli
inc
mov
push
popf
popa
jo
ds
push
stos
jno
ljmp
enter
mov
insb
push
push
scas
mov
aad
in
bnd
out
cmp
or
lahf
fcomps
in
push
out
imul
jmp
pop
bound
stos
dec
sbb
xor
mov
sarl
fwait
jle
int
add
cmp
fcomps
xchg
pop
pushf
ja
popa
and
cltd
pop
cmpsb
shlb
imul
push
adcl
sbb
adc
call
iret
adc
mov
dec
dec
ficoms
aam
lods
in
loope
push
mov
inc
cli
cmp
jo
add
or
popf
stc
dec
xor
or
sub
mov
mov
stc
lcall
stc
adc
xchg
pop
push
sbb
pop
cmp
dec
push
jmp
ficomps
test
cmp
fadds
xchg
xorl
test
sub
call
push
pop
xor
fidivrs
icebp
cwtl
xor
lcall
imul
push
pop
fbld
inc
decb
mov
sti
xchg
pop
and
js
pop
inc
pop
repz
xchg
ret
inc
lahf
sub
ds
jecxz
pushf
clc
dec
adcb
xor
or
mov
add
bnd
addr16
and
sbb
lret
out
sti
sub
test
dec
dec
sbb
test
jg
lods
lret
fs
cmp
inc
imul
fdivr
pop
imulb
incb
push
rclb
insb
jbe
or
lahf
inc
jge
mov
out
es
lods
hlt
mov
fwait
testl
enter
push
mov
or
sbb
hlt
sbb
testl
cltd
push
jmp
sbb
pusha
idiv
aad
rcl
pop
cli
lea
sahf
stc
xchg
sbb
lcall
xor
call
cmp
xchg
cli
vprotb
sub
in
mov
outsb
xorl
enter
cmpsb
adc
loop
push
sbb
insl
or
sub
lods
lods
or
push
sbb
xchg
mov
cmp
adc
std
fdivs
mov
cli
inc
pushf
test
sbbl
stos
sub
xchg
pushf
or
or
cmp
test
sbb
mov
jg
pop
movsl
into
enter
xor
xchg
movsl
in
inc
jbe
js
push
mov
or
repnz
std
jnp
adc
inc
add
cwtl
or
lcall
mov
jmp
std
xchg
sbb
pop
sbb
std
imul
ljmp
imul
rcl
lea
mov
int3
mov
les
pop
loope,pt
test
pushf
imull
insl
out
jb
mov
sbb
aam
mov
or
mov
mov
jmp
idivl
inc
adc
subb
sub
movzbl
mov
cmp
sbb
mov
push
mov
aaa
comiss
xchg
push
loope
ds
call
ljmp
pop
push
mov
xchg
lcall
adc
dec
adc
bound
ss
out
and
mov
lcall
and
mov
cld
and
mov
and
adc
lock
mov
xor
in
mov
mov
pop
push
loopne
pop
insb
add
lahf
mov
jno
fimuls
sub
adc
cmp
push
xor
imul
ficoms
sarb
sub
das
sar
sbb
pop
outsb
sbb
inc
jge
xchg
aaa
stos
sub
inc
pop
push
pop
insl
and
jae
es
or
in
mov
pop
lahf
hlt
es
mov
ret
je
pop
mov
ds
insl
xor
jp
lea
pop
data16
out
sub
les
repnz
popa
and
test
cmpsb
and
loopne
push
fldl
sub
fucomip
add
mov
sub
rorb
jmp
pop
mov
shrb
lds
cmp
sbb
jmp
xchg
clc
cmp
mov
imul
mov
clc
popf
mov
add
mov
pusha
hlt
sbb
mov
sub
repz
andl
pop
sar
mov
aad
pop
repnz
cmp
sub
cmp
jmp
mov
or
mov
add
adc
jo
mov
sub
repz
insb
fildll
pop
or
jp
rorl
hlt
push
push
or
pop
loopne
xor
test
inc
clc
adc
ljmp
dec
rorb
stos
jne
cmpl
test
lcall
jne
or
or
lods
cltd
into
addr16
into
gs
add
sbb
add
pop
sbb
cmp
cltd
dec
icebp
xor
int3
cmp
jp
push
in
dec
dec
inc
subl
les
adc
sti
out
js
cmp
jne
lcall
xor
pushf
aad
int3
jge
std
sub
adc
adc
aam
jmp
out
int3
repz
jmp
push
push
push
pop
outsl
cmp
mov
jno
pop
xchg
sti
pushf
or
adc
and
out
xchg
cmpsl
add
pop
jbe
jle
sti
cltd
mov
ret
clc
mov
sbb
jns
test
push
adc
push
std
hlt
or
js
fsubr
lcall
ja
add
icebp
push
push
cmp
into
add
mov
cmc
xchg
cmpsl
mov
shll
pop
adc
ret
jns
arpl
sahf
sbb
lcall
sbb
mov
and
pusha
jle
mov
xor
imul
pop
cmp
xchg
mov
out
ljmp
cs
and
xor
push
lock
scas
and
xchg
addr16
sbb
pusha
and
fnstsw
cltd
loope
ljmp
popf
jno
adc
stc
add
xchg
xchg
cmp
fsin
dec
push
mov
push
lds
push
add
stos
int
push
frstor
mov
fimull
loopne
push
jmp
repnz
cwtl
xor
mov
popa
lea
popa
inc
outsb
fxch
push
mov
ja
scas
mov
xchg
xchg
aas
dec
jp
decl
test
fdivrs
scas
arpl
jg
movsb
mov
dec
pop
cmp
mov
adc
sbbb
mov
out
into
and
adc
cmp
xor
and
loope
test
jno
cs
xchg
jns
add
and
xchg
testl
push
test
ss
jne
sbb
mov
dec
mov
lcall
cmp
into
stc
daa
mov
daa
in
jmp
in
xchg
loope
sbb
popa
aaa
and
push
scas
pop
add
xchg
mov
insb
sahf
jno
jmp
adc
pop
fmull
test
xor
scas
or
inc
push
sub
fstpt
sti
test
adc
test
jns
imul
aam
xchg
push
fnstcw
sahf
mov
adc
push
jb
in
test
adc
mov
pushl
lock
loope
inc
arpl
movsb
stos
inc
push
mov
ljmp
pop
cmc
adc
clc
xor
xor
xchg
ja
fdivrs
or
mov
popa
cmp
test
shrl
mov
mov
sahf
gs
outsb
notl
cmp
repnz
mov
pusha
sarb
mov
push
mov
sub
pop
lds
mov
xor
mov
and
mov
mov
cltd
stos
out
or
and
imul
add
movsl
cmp
les
aad
sbb
loopne
loop
iret
push
fldl
mov
push
addl
sub
test
dec
cmp
stos
loope
bound
cmp
jae
bound
mov
rorb
cs
pop
pusha
jp
sbb
push
rcl
stos
mov
fcompl
mov
jmp
data16
lds
rorl
mov
mov
das
and
rcrl
into
sbb
inc
outsl
jecxz,pt
dec
pop
push
test
xlat
push
sbb
lret
push
pop
sti
insb
fisttpll
scas
fs
cltd
cwtl
das
lret
hlt
inc
repnz
ja
fcomi
inc
fsubrl
sbb
leave
es
loop
mov
in
in
addr16
insb
xchg
int
cltd
lock
into
daa
sbb
test
sahf
inc
std
push
mov
sbbb
es
sbb
or
lods
and
xchg
sub
cmp
data16
add
repnz
push
mov
adc
fcomps
inc
and
into
cmp
loop
movups
addr16
pop
fidivrs
or
scas
inc
mov
mov
inc
inc
cwtl
fwait
jbe
test
jmp
jecxz
cmc
int3
mov
andl
aam
push
mov
push
cmpsl
pop
cmp
xchg
shrb
or
test
adc
adc
addr16
push
fcomps
or
pop
cld
add
push
out
and
or
sbb
jno
push
mov
movsb
cmp
scas
fisubl
xchg
inc
pusha
out
pop
pushf
stc
xchg
sarl
sti
mov
outsl
jge
xchg
push
dec
mov
stc
das
stos
test
xor
push
dec
mov
jge
or
rorl
push
sbb
je
std
push
push
stos
test
inc
sub
pushf
mov
or
xor
ja
lods
fnstenv
clc
dec
enter
xchg
cmp
push
fwait
insl
mov
xchg
cmpps
ds
adc
mov
push
xor
imul
jmp
xchg
pop
fwait
mov
cmp
arpl
adc
loope
cltd
xor
loop
dec
ljmp
std
xor
jp
test
nop
aad
orl
push
mov
lds
aam
aad
mov
sbbb
shll
mov
mov
mov
lods
fsubl
es
cmp
pusha
fistpl
inc
jle
lcall
pop
adc
xchg
je
call
sarb
xchg
shll
cmp
stos
leave
sbb
or
outsl
add
addb
lds
or
repz
jb
std
test
icebp
xchg
sub
loope
sbb
sbb
shl
sbb
cmpsl
fidivs
add
or
pop
adc
test
mov
lds
iret
into
lcall
stc
cmp
push
aad
jecxz
std
adc
sahf
xor
mov
mov
xor
jmp
subl
cmp
push
aam
pop
add
jns
inc
inc
in
mov
and
dec
add
loopne
lock
mov
in
dec
cs
jne
push
popf
lahf
in
and
jo
sub
mov
cmpsb
adc
add
sti
lcall
lods
add
sub
add
loop
push
cmp
scas
ret
xor
lea
pop
xchg
or
or
stos
add
jmp
aaa
mov
push
movsb
mov
mov
lods
fs
adc
xchg
mov
jae
aam
or
xchg
cmc
aas
cmp
pop
pop
vsqrtps
test
ds
fs
push
sbb
pop
jmp
sti
or
ss
or
xchg
sbb
sub
and
movl
pop
or
add
jmp
adc
or
lea
jle
xchg
sub
mov
pop
dec
adc
or
or
sub
xor
cmpsb
adc
jns
inc
lret
sti
fidivrs
shlb
xchg
sub
inc
pop
clc
adc
mov
fcmovu
scas
lret
cld
dec
pop
inc
iret
stos
and
ret
mov
mov
scas
movsl
cld
insb
inc
mov
test
fwait
xor
cmpsl
fdivrs
push
punpckldq
add
xor
mov
fdivrl
sti
fsubrp
xor
repnz
dec
sub
xor
cmp
mov
ljmp
adc
or
loope
in
test
andl
fs
repz
sub
aaa
dec
stc
push
stos
jmp
es
cltd
shlb
insl
mov
mov
rcll
js
mov
imul
popf
aam
xchg
outsb
mov
sub
mov
dec
adc
lahf
inc
lret
xor
fidivl
rcrl
sarl
mov
lcall
and
int
mulb
hlt
xchg
repnz
mov
cmp
cmpsb
mov
sub
mov
mov
xchg
push
test
adc
arpl
push
cmpsl
imul
fsubrl
mov
nop
sub
nop
fsubrs
push
xor
ljmp
cmc
inc
repz
mov
or
mov
sbb
push
outsl
outsl
imul
mov
mov
cmp
mov
pop
insl
call
loop
xor
mov
inc
out
popa
xchg
imull
mov
sar
daa
iret
test
add
sub
lret
pop
add
xor
sbb
mov
cmp
loope
inc
pusha
pusha
pop
or
sub
mov
aam
lods
mov
sub
fidivs
inc
jo
out
mov
xchg
jg
xor
test
ja
int3
fmull
lahf
leave
and
push
pop
ljmp
mov
test
pop
add
push
mov
xor
rclb
imul
fbstp
dec
cmp
push
add
mov
lahf
push
adc
ret
jl
pop
ret
pop
sbb
dec
jg
hlt
call
xchg
pop
mov
icebp
sar
daa
mov
mov
pop
jle
fisttps
cld
rclb
addl
das
mov
aaa
or
mov
sahf
add
jmp
and
jl
sbb
pop
std
hlt
mov
xor
cmp
outsb
shl
pop
gs
rcrb
or
adc
addl
fsubrl
pop
std
xchg
xchg
xor
adc
popf
stos
inc
dec
xchg
in
xor
imul
sub
xor
cltd
test
and
sub
mov
mov
jp
or
inc
pop
add
jge
pop
xor
test
shrb
cmp
orb
shll
mov
sub
cmp
out
sub
shrl
xchg
fbld
out
mov
ja
and
xor
ds
fdivl
outsl
pushf
mov
cmp
and
sbb
inc
int3
repz
test
outsb
fdivl
push
cli
or
mov
lea
icebp
shll
push
mov
jg
pop
insb
adc
jno
outsb
and
ss
cmp
hlt
adc
fldenv
in
fistpl
adc
int3
out
cmpsb
sub
stos
sbb
sbb
xchg
push
mov
scas
out
adcb
ljmp
imul
ret
xor
cmovns
mov
repnz
lret
cli
mov
stos
add
sti
or
mov
loopne
adc
call
adcb
stos
push
jno
sub
stc
adc
add
dec
xor
imul
test
cmp
das
sub
icebp
xor
test
fimull
dec
hlt
sbb
and
stc
sub
sti
adc
aas
outsb
push
pop
xlat
outsb
mov
push
js
push
insl
cltd
cltd
or
push
cwtl
movsb
lea
xchg
push
repz
mov
jmp
scas
mov
js
aaa
push
xor
ret
dec
je
adc
push
xchg
fwait
sbb
pop
xchg
sub
dec
pop
mov
rcr
mov
push
cmpsb
in
pop
lock
dec
out
jl
xor
inc
sahf
lods
inc
int3
enter
addr16
mov
xchg
cmp
mov
push
mov
add
adc
pushf
jg
aaa
sub
cmp
lahf
cmp
pop
sub
xchg
push
rcrl
lahf
and
or
in
nop
jnp
xorb
adc
xchg
int3
sbb
je
mov
lods
inc
stc
popa
fiaddl
lret
fistpl
mov
aaa
lret
dec
fucomip
xor
js
cmp
loopne
dec
ja
test
mov
xchg
out
sbb
hlt
push
mov
cmp
jnp
mov
pop
cltd
rolb
push
dec
sbb
sub
ds
push
lock
cmpsb
jp
pusha
int
fwait
sub
xchg
cs
xchg
les
mov
mov
xor
push
inc
les
xchg
subl
setg
and
lods
push
cltd
push
mov
mov
add
fmulp
jno
mov
mov
aam
sub
xchg
lahf
sahf
ja
out
lahf
inc
je
cmp
jge
clc
rorb
sahf
jmp
aad
sbb
xor
stos
loopne
push
adc
lret
pushf
xor
or
mov
mov
data16
or
push
and
pop
or
int
sub
inc
loop
outsl
out
lods
xchg
xor
ret
add
mov
mov
sub
mov
test
fbld
std
push
scas
inc
je
adc
jl
sbb
mov
jb
dec
scas
or
pop
push
mov
lea
lahf
mov
pop
ret
std
lods
adc
mov
loop
es
cli
pop
je
xor
push
dec
xchg
pop
outsl
and
hlt
and
mov
mov
mov
cmp
fsubr
mov
sbb
repnz
adc
arpl
nop
daa
fadds
mov
xor
push
cwtl
xor
into
pop
adc
pop
repz
jp
stos
fsubrs
push
into
mov
push
imul
cwtl
xor
popf
clc
mov
je
mov
push
ficomps
xor
mov
arpl
ljmp
incl
jl
scas
movsl
das
pop
jmp
xchg
repnz
and
movsb
mov
sub
rcrl
in
stos
mov
shll
fmul
or
cs
in
pop
imul
movsl
inc
fs
outsl
loope
mov
pop
xchg
ss
mov
inc
sbb
adc
mov
faddp
lods
xlat
outsb
pop
hlt
fnsave
mov
mov
or
inc
and
sbb
cmp
cmc
push
jg
into
push
pop
out
xchg
test
test
fsubrs
mov
shll
mov
lea
sarb
cwtl
iret
mov
jmp
xchg
pop
imul
xchg
cmpsb
push
mov
int
inc
lods
arpl
inc
fs
xchg
es
dec
aas
xor
jno
mov
fs
ficomps
icebp
movsl
stc
aad
imull
iret
lods
and
jp
xor
or
outsb
xor
inc
sbb
jge
xor
push
andb
inc
inc
stc
stos
sub
outsb
sarl
loopne
sbb
mov
mov
aam
push
cwtl
or
scas
mov
sbb
jne
inc
pop
cwtl
stos
inc
push
into
and
mov
adc
mov
ret
loopne
push
push
pop
push
xchg
sarb
sbb
out
cmpl
rorl
push
push
inc
mov
adc
and
lds
pop
divl
xchg
xlat
insl
sti
or
or
into
inc
pushf
pop
cmp
fwait
das
in
loope
push
nop
scas
gs
hlt
mov
pop
aad
rorl
mov
out
and
enter
xor
iret
lods
or
idivl
cwtl
add
add
xor
pop
fcomps
out
les
push
mov
insb
sub
pop
cmp
xor
pop
jno
sbbl
nop
out
add
sbb
sbb
call
jo
mov
pop
mov
pop
imulb
inc
lods
stos
and
xchg
enter
insb
dec
das
xchg
int3
lret
jecxz
rcr
data16
add
cltd
sarl
pop
and
pusha
fwait
repz
mov
inc
jge
push
add
gs
ficoms
jp
fs
mov
fs
ja
mov
in
stos
sub
sub
or
sbb
push
cwtl
mov
pop
neg
sar
xor
fdivs
dec
loope
inc
and
jbe
sbbb
or
xchg
iret
push
sahf
test
stc
nop
loop
adc
out
adc
sbb
mov
imul
and
xor
pop
push
cs
jg
mov
and
gs
mov
cmp
sub
cld
out
fldenv
fdivrs
lret
jno
sbb
pop
mov
movsl
cmp
xchg
mov
outsb
ret
fnstcw
stos
push
and
test
sub
out
popf
pop
and
in
clc
and
out
push
jmp
out
sbb
inc
jnp
test
cld
cmc
adc
movsl
clc
icebp
push
mov
push
add
xlat
in
push
js
or
shrb
stos
pop
xor
push
test
hlt
orl
out
ret
cwtl
mov
sbb
add
adc
das
dec
fs
mov
fcmovu
jno
js
and
mov
push
aad
push
add
fdivs
adc
aas
cwtl
lods
jo
jnp
repz
cmc
pop
bound
mov
push
mov
fs
xor
fs
movsl
lds
cmp
sub
sarb
mov
xchg
adc
push
sbb
iret
loope
sar
cmp
sbb
push
adc
or
adc
adc
pop
adc
rcl
mov
imul
and
mov
adc
pop
in
dec
in
mov
pop
cltd
cmpsl
fisttpl
xor
clc
mov
mov
pop
sub
in
call
test
xchg
mov
fdiv
cmpsl
adc
jp
lods
sub
scas
lahf
notl
adc
xchg
jno
ret
lahf
fisttpll
mov
lods
adc
mov
sbb
sbb
std
adc
scas
ret
pop
lods
jnp
mov
adc
adc
mov
es
xor
sbb
out
or
add
loope
cmp
clc
nop
out
fucomi
push
leave
sbb
fisttpll
cmc
dec
xchg
add
jmp
jmp
test
push
pushf
out
add
or
movsl
adc
ss
lret
sub
cmp
notb
movsb
mov
jecxz
mov
fcomps
sub
add
sbb
jle
dec
adc
mov
jmp
xor
iret
mov
es
stos
filds
aam
pop
andl
les
in
cmp
je
jge
xrstor
test
jnp
xchg
lea
inc
loopne
mov
fists
mov
push
stc
outsl
imul
cmp
movsl
mov
fs
sub
xor
fldcw
ljmp
mov
and
cmp
mov
in
xchg
xchg
decl
adc
jb
mov
rcrl
jnp
sarl
scas
test
test
sbb
ret
lcall
jne
inc
sbb
mov
ljmp
daa
add
add
enter
xor
adc
push
xor
inc
adc
mov
fldenv
xor
shrl
push
out
mov
fdivl
mov
inc
test
jl
xor
faddp
ds
jnp
cltd
mov
xor
imul
jge
lock
ret
push
test
hlt
in
cwtl
fs
lret
int
jbe
pop
out
jne
dec
ljmp
mov
dec
shll
insl
and
testb
xor
push
in
adcl
insb
leave
xchg
push
add
lea
repnz
rclb
je
cmp
dec
pop
xor
fs
std
xor
inc
sub
dec
xchg
xchg
pop
rcrb
cmp
rolb
icebp
push
jbe
sub
adc
andl
or
scas
add
xchg
aaa
aaa
aas
mov
notl
std
jo
popf
dec
add
aaa
jmp
cli
mov
xchg
nop
xchg
mov
daa
xor
test
shll
mov
sub
add
pop
cli
and
sbb
jns
rcl
cmp
out
mov
loope
xor
mov
push
push
popw
popf
xor
push
or
call
push
imul
xchg
xor
scas
pop
mov
cwtl
xor
sbb
ljmp
sbb
lock
cmp
inc
xchg
xchg
ss
add
fbld
je
push
rol
mov
pop
cmp
jns
cmp
sbb
jle
outsb
push
adc
sti
stc
and
lock
ds
add
cmp
or
pop
outsb
ds
andb
pop
dec
and
push
sub
pop
pusha
clc
push
cmp
stos
shll
jns
pop
cmc
stos
push
push
popf
jl
mov
jmp
mov
cld
mov
divl
xlat
mov
mov
mov
cmp
movsb
cmpsl
push
cltd
xor
lcall
jne
xor
and
or
push
fcoms
pop
ret
enter
cmp
adc
mov
repz
pop
add
cmp
out
insl
sbb
dec
stos
fnstcw
vpunpckhqdq
fs
into
fucomi
repz
sub
sub
roll
push
in
push
out
in
sbb
testb
inc
sub
clc
dec
dec
cmp
inc
sbb
dec
stos
dec
jecxz
cmp
shrb
call
pop
lock
mov
loop
in
or
sbb
push
fcmovne
lcall
cmp
add
int
xchg
xchg
pusha
flds
mov
sbb
subb
mov
andb
addr16
and
clc
inc
jg
mov
and
pop
cmp
insl
add
out
push
sbb
popf
pusha
xchg
dec
repz
fcmove
bound
aaa
mov
imul
fiadds
mov
sti
out
xchg
fbld
or
in
xchg
sub
enter
pusha
pop
sbb
mov
lock
push
out
lahf
pop
lret
cmp
mov
jne
mov
cmpsb
bound
rcll
in
imul
mov
or
mov
pop
adc
mov
aam
inc
mov
mov
lods
xchg
in
pop
xchg
rclb
push
mov
push
sub
scas
cld
and
push
cli
xchg
push
jmp
adc
loope
out
xchg
xchg
pop
lods
pop
ds
and
pusha
jne
xor
mov
imul
push
xchg
in
rolb
push
pop
jno
push
cmp
scas
icebp
mov
int3
int3
fistpl
xchg
sbb
movsl
xchg
push
cli
jno
and
jl
into
inc
shr
push
adc
pushf
stos
or
xor
dec
pop
and
shrb
jg
insl
leave
sbb
or
sub
jmp
notl
nop
bound
pushf
lods
mov
inc
in
add
fwait
jnp
cli
pushf
jne
ljmp
mov
jecxz
push
cmpsl
sti
xchg
js
mov
icebp
pop
int3
arpl
out
rorl
dec
add
and
add
pop
push
sarl
nop
pop
inc
mov
push
pop
sub
dec
or
xchg
dec
nop
mov
loope
stos
jl
outsl
cmp
jb
push
iret
push
pop
in
data16
push
xchg
sti
orb
sbb
or
imul
movsb
cmp
imulb
shrl
ret
or
push
and
push
sti
sub
inc
pop
sbb
xor
outsl
or
adc
into
gs
push
lcall
test
shll
addr16
lret
mov
cld
mov
shll
lods
mov
jge
xor
sahf
pop
repnz
or
mov
stc
inc
push
xor
jmp
jo
or
dec
xor
jns
mov
loop
pushf
addr16
mov
or
mov
mov
out
and
stc
shl
mov
stc
push
stc
sbb
jle
xor
sub
cmp
xchg
cmp
rcrb
jo
and
sbb
fnstcw
gs
dec
stos
mov
psubsw
shlb
popa
in
add
test
fucomi
fstpt
stos
aam
ds
aas
xchg
rcll
or
xor
jo
repz
adc
rorb
fldt
mov
iret
aam
in
cmpl
pop
inc
test
cmc
outsl
inc
loop
ffree
add
mov
repz
inc
sub
sbb
mov
pop
shll
mov
ss
xchg
cmp
add
in
mov
fmul
and
inc
mov
in
xor
xchg
adc
pop
sub
push
test
dec
lock
adcb
rorb
fs
xchg
mov
lds
mov
dec
adc
pop
mov
add
cmpsb
shlb
pop
xorb
sti
xchg
dec
mov
imul
jmp
mov
and
out
jmp
push
sbb
xchg
xchg
incl
mov
xchg
and
insb
xor
jmp
jne
push
push
mov
in
xor
push
push
push
sbb
dec
mov
int
sub
inc
push
sub
fs
int3
push
in
cli
push
lods
sahf
or
ret
adc
cmp
adc
mov
cmp
scas
mov
mov
and
and
push
aam
adc
mov
add
inc
std
loope
and
iret
mov
jg
gs
inc
mov
jg
push
mov
out
add
jg
scas
mov
xorl
sub
or
or
popf
push
repnz
stos
xchg
cs
shl
lcall
mov
repnz
sub
incl
ret
dec
imul
mov
or
hlt
test
sub
add
pop
jne
add
xor
imul
pushf
mov
mov
mov
mov
jno
and
popa
xchg
scas
mov
insl
js
add
dec
cmp
sti
fdivl
addr16
sbb
int3
into
ret
jae
inc
imul
arpl
icebp
fdivs
pop
jbe
dec
add
sub
mov
jmp
xchg
sbb
or
aam
aaa
lret
pop
xchg
add
xor
call
imul
pop
pop
hlt
mov
fidivrl
arpl
jmp
sbb
fdivrs
dec
or
mov
test
jle
xchg
adc
pusha
fxch
mov
stos
push
fimull
sub
or
fdivrs
stc
ljmp
mov
pop
or
in
xor
loopne
push
dec
push
iret
xchg
test
add
jb
orb
jl
mov
and
add
mov
aam
inc
jbe
jbe
pop
dec
daa
sbb
sub
cmpsb
inc
fidivrl
in
fdivl
adc
out
and
aaa
cmpsb
mov
insb
dec
loopne
jbe
std
iret
or
cmp
stos
mov
fistpl
stos
in
mov
adc
dec
mov
mov
mov
sub
inc
or
inc
cmc
cli
pushf
cmp
adc
lds
cltd
ds
pop
mov
loope
mov
fnsave
js
xchg
jge
mov
lea
add
dec
sub
and
insl
in
pop
mov
mov
or
xchg
jnp
ret
out
stc
push
lds
sbb
or
fnsave
test
cmp
lret
push
cli
adc
ret
mov
daa
imul
cmp
lock
repnz
mov
push
gs
fdecstp
xor
loope
stos
push
arpl
adc
pop
dec
mov
je
xchg
push
es
in
mov
mov
aad
scas
xor
cli
mov
adc
inc
push
pushf
stos
cltd
ljmp
imul
mov
nop
jo
dec
aam
dec
add
sbb
add
sbb
mov
push
lret
add
lahf
je
and
arpl
inc
or
xchg
in
mov
cmc
mov
or
mov
mov
cmpsl
push
adc
aas
test
mov
in
cmp
dec
scas
jno
mov
cmp
test
xchg
sbb
xchg
sbb
push
scas
in
push
pushl
xlat
xor
rclb
dec
mov
xor
mov
bound
cmp
cwtl
insb
mov
addr16
outsb
xchg
xor
addr16
pop
movsb
popa
and
test
xchg
nop
pop
test
mov
iret
mov
jge
addr16
cmp
mov
pop
fnstenv
pop
mov
mov
imul
mov
xchg
fnsave
rcl
mov
pop
loope
orb
inc
mov
cwtl
incb
insb
subb
js
insl
shll
add
inc
dec
int3
sbb
pusha
das
in
lahf
addr16
xchg
leave
jo
push
ljmp
mov
addb
out
cmp
pusha
inc
fistl
cmp
and
sbbb
inc
fs
loope
mov
add
test
inc
inc
aas
mov
sbb
orl
mov
dec
pop
mov
sbb
mov
notl
fidivrl
mov
cmp
les
pop
arpl
pop
lret
lock
mov
lods
add
das
mov
outsl
sbb
aam
dec
and
dec
sahf
xor
pop
sub
adc
cwtl
push
gs
rolb
add
xor
jo
ljmp
call
mov
mov
mov
push
push
data16
mov
xchg
test
add
fsubrp
push
or
mov
pop
mov
adc
adc
inc
mov
pusha
push
push
hlt
dec
add
shlb
xor
jmp
cmc
xchg
pcmpgtd
jl
mov
xlat
mov
xchg
cmp
popf
loope
xchg
ret
daa
lret
mov
int3
sti
test
adc
std
sti
xchg
xor
mov
aaa
mov
adc
sbb
pop
cmp
xor
cwtl
and
sbb
es
push
add
push
dec
cltd
jbe
sbb
ljmp
aas
mov
fldenv
jl
mov
int3
arpl
clc
addr16
or
icebp
fdivr
sbb
adc
xchg
stos
mov
mov
mov
xchg
ret
popa
pop
hlt
xchg
jns
and
jecxz
outsl
lcall
addr16
das
adc
and
cmp
pop
pop
sbb
jmp
jl
ljmp
addr16
insb
xchg
sub
xchg
pop
aas
mov
repz
pusha
mul
repz
lret
inc
mov
sub
dec
ret
adc
fs
or
add
fisubrs
push
mov
add
or
int
push
dec
cmpsb
or
cs
rorl
mov
and
imull
orl
sub
cmpsb
dec
call
sbb
cmp
pop
in
mov
scas
in
dec
push
pop
imul
sbb
xchg
pushf
adc
popf
push
and
push
pop
lock
lcall
add
bound
xchg
scas
pop
sbb
fs
adc
js
adcb
lahf
mov
pop
fdivrs
addr16
pop
jmp
sbb
popf
je
mov
mov
pop
sti
xchg
push
mov
mov
lock
cltd
movsl
iret
mov
pop
and
mov
jbe
orb
aaa
ja
dec
cmpsl
xchg
shrl
xlat
ret
dec
add
enter
pop
inc
cmpsb
adc
je
cmp
stos
add
sar
lods
pop
data16
adc
or
inc
pop
xchg
scas
cmovnp
mov
sarb
dec
or
and
out
adc
push
lods
fwait
push
mov
cmp
xchg
push
sub
xor
push
and
les
push
jmp
call
scas
push
xor
jne
mov
cmp
push
cmpsb
adc
mov
enter
outsl
push
sti
mov
lds
inc
imul
jle
cwtl
push
xchg
sbb
ds
hlt
mov
pop
mov
mov
rol
mov
ret
cmp
pop
mov
jge
mov
dec
pop
jnp
ret
les
mov
rorb
test
pop
lea
sub
int
xor
cltd
lcall
mov
dec
or
cmp
push
rcl
test
lods
inc
adc
jmp
cmp
aad
repz
xchg
fdivrl
jb
jmp
inc
rcr
hlt
mov
hlt
jle
dec
ffreep
fcomip
lahf
fs
mov
mov
add
mov
or
jae
adc
out
dec
addl
shl
lahf
int
pop
pop
popf
dec
dec
std
jno
cmp
sahf
mov
stos
loopne
je
push
mov
lods
adc
arpl
mov
add
xor
lods
ss
jbe
xlat
push
mov
or
pop
out
mov
cmp
mov
mov
gs
push
push
movsl
mov
fnstcw
inc
or
push
fcoms
mov
dec
jo
jmp
xchg
aam
xchg
add
and
mov
lods
mov
fisubl
lret
lahf
iret
xchg
iret
inc
fiaddl
insb
lock
mov
mov
std
ja
aam
sarl
push
stos
outsl
inc
in
decl
sub
or
adc
roll
cmc
pop
fwait
xor
out
popa
inc
loopne
fnsave
adc
xchg
inc
gs
mov
inc
mov
pusha
subl
mov
test
mov
adc
push
outsl
ss
pop
xor
mov
nop
ja
lret
fdivrl
cwtl
inc
int3
dec
scas
roll
sub
dec
cmp
shl
mov
fsubl
dec
jecxz
call
jae
cmpsl
es
dec
arpl
into
gs
mov
xor
adc
and
imulb
dec
xor
les
fcoms
cmpxchg
push
mov
aas
inc
inc
out
loopne
scas
dec
lods
aad
jg
mov
xor
pop
subl
mov
adc
cwtl
xchg
add
inc
bound
xchg
jne
sub
add
add
xor
xchg
or
sahf
mov
imul
js
jae
pop
xor
cltd
std
rorb
jo
add
jbe
mov
std
xor
movsl
and
mov
jae
test
dec
fimull
sub
aad
popa
jns
pop
sub
mov
into
mov
outsb
stos
mov
fsubrl
inc
stos
inc
xor
movl
and
cltd
sbb
fnsave
and
jnp
popl
lret
jbe
jge
gs
or
shrb
pop
scas
aas
add
adc
jnp
push
sbb
rcl
sbb
mov
xchg
mov
stos
pushf
bound
rolb
adc
sub
leave
jg
mov
xor
loop
or
enter
mov
pusha
inc
fwait
sbb
push
push
scas
mov
addl
mull
push
mov
inc
push
mov
pusha
push
addb
push
subb
or
clc
ret
fists
scas
mov
push
jmp
or
push
sub
dec
jo
push
and
es
dec
addr16
ret
sub
xor
or
adc
sbb
mov
aam
mov
sub
dec
pop
repnz
add
std
push
and
push
out
dec
cmp
sbb
xor
outsl
xchg
jecxz
or
inc
negb
test
xor
adc
in
fistl
and
pop
push
push
inc
xor
xchg
insl
ret
aad
lret
cmp
arpl
andb
popa
jae
cmp
xor
aaa
out
insl
add
pop
pop
stos
pop
xor
adcb
out
je
movsb
mov
lret
add
mov
enter
pop
lock
inc
std
dec
adc
lret
lahf
sub
pop
fs
mov
das
push
shrl
in
mov
mov
xchg
fdivs
add
cmp
jo
xor
test
test
mov
pop
sub
pop
dec
lods
pop
jge
js
xor
leave
add
cmc
dec
jae
push
outsb
or
notb
daa
imul
push
imul
negb
fsubrs
movsl
ret
dec
mov
mov
popw
pop
pop
add
and
aam
sarl
stc
mov
inc
fs
fisubrl
push
fnstsw
repz
sbb
dec
pop
xor
adc
mov
insl
outsl
test
ret
add
and
arpl
inc
stos
arpl
adc
ss
stos
cmp
sbb
iret
or
mov
fsubs
pop
insb
nop
dec
notb
in
cmp
jp
xchg
and
cwtl
push
repz
test
jne
scas
aaa
mov
fidivrl
and
jp
int3
ret
adc
add
xor
aad
dec
lods
pop
mov
jl
repz
xor
jle
daa
mov
jl
mov
imul
jne
hlt
imul
sbb
testb
fimuls
test
mov
mov
lret
aam
lret
xlat
test
push
aad
jle
test
dec
aad
lock
and
mov
bnd
jle
xchg
jns
in
xor
and
or
add
test
mov
test
filds
sahf
xchg
aam
fldt
mov
pop
add
sub
adc
cmp
or
in
inc
loope
loopne
push
stos
and
push
jo
cltd
cmp
adc
mov
mov
sbb
mov
addr16
push
call
out
inc
fcmovnu
or
mov
scas
adc
loope
adc
lods
dec
sub
dec
int
fisttps
ror
loopne
imul
sub
fwait
pop
jle
test
or
ljmp
dec
sub
popf
shlb
addl
pop
adc
push
adc
mov
je
ljmp
inc
xorb
xchg
data16
mov
hlt
inc
xor
daa
sbb
sti
sar
dec
and
dec
or
mov
imul
aam
jo
inc
out
pop
lock
jge
mov
dec
icebp
push
sub
pop
das
ja
jnp
shr
stos
sbbb
enter
add
xor
mov
push
jae
and
rolb
cltd
jns
jne
lahf
mov
iret
inc
inc
push
mov
xor
loopne
add
and
loopne
jmp
in
add
cmp
xchg
sub
nop
mov
xor
lea
or
das
lods
mov
dec
in
outsl
mov
jp
insb
add
jg
mov
mov
pop
mov
fsubl
syscall
fbld
mov
cld
pop
pop
aaa
pop
lock
pop
aaa
int
je
jmp
pop
push
xlat
loop
jb
mov
es
mov
mov
push
jmp
into
add
fistpl
push
scas
and
push
rcr
nop
cld
mov
fwait
and
and
je
mov
dec
jno
sub
pop
sub
fnstenv
push
add
mov
scas
xchg
sbb
lods
jmp
jbe
in
push
cwtl
insl
jge
das
lcall
cmc
add
add
iret
push
into
push
ret
loop
movsl
enter
sbb
jl
dec
fucomip
mov
mov
lcall
xor
push
mov
add
xor
sbb
je
push
pop
add
mov
and
jnp
std
mov
lods
les
push
xchg
or
je
push
cmp
push
popa
xor
add
inc
fcomip
das
and
lret
pop
add
jge
mov
aad
add
or
in
xor
stos
lea
xor
mov
pop
imul
sub
int3
sub
jae
pop
shl
adcl
rol
sbb
lea
lret
mov
adc
lahf
hlt
fnstsw
mov
sub
std
sbbl
mov
jp
in
imul
lods
jle
cmpsl
adc
dec
adcl
mov
fnstenv
lcall
cmp
push
mov
call
push
inc
xor
add
xchg
lahf
xchg
in
or
fs
repnz
and
outsl
out
mov
push
push
movsb
mov
clc
jg
pop
lods
sti
adc
jne
xchg
das
cmpsl
mov
xor
in
pop
xor
mov
mov
lea
inc
in
add
movsl
dec
dec
mov
add
pop
xor
loopne
jg
les
sbb
lahf
scas
xchg
mov
and
dec
sbb
pusha
or
xor
mov
stos
lock
and
stos
cmp
dec
inc
cmpsl
push
call
js
xchg
jl
pop
leave
ja
out
sub
xchg
sbb
sbb
insb
arpl
in
in
stos
in
pmaxub
xor
mov
adc
mov
xor
mov
mov
lcall
sub
push
in
mov
mov
data16
fwait
pop
into
mov
jp
push
push
popf
test
arpl
fsubrl
and
imull
xor
add
fsubrs
pop
and
inc
movsl
cmp
and
sbb
movsl
dec
jge
cmc
adc
rolb
cmc
inc
jl
push
in
test
in
mov
push
icebp
xlat
fistps
xlat
mov
js
imul
pushf
push
dec
mov
mov
cmc
fmuls
ja
mov
ret
adc
inc
dec
mov
dec
mov
mov
imul
push
je
dec
xchg
mov
xchg
sbb
add
jae
ret
sub
fldcw
xor
inc
pop
fwait
dec
cmpsb
xor
incb
shll
aad
sbbb
test
xchg
out
xchg
stc
cltd
xor
mov
dec
loope
roll
pushf
in
push
ja
mov
testl
iret
push
mov
mov
jmp
push
and
movsl
cmp
sub
test
inc
pop
test
dec
dec
xchg
mov
testl
lods
js
xor
jl
mov
gs
ret
inc
sbb
mov
call
cmp
das
inc
xchg
xchg
sub
fisttpl
adc
jae
adcl
test
pushf
cwtl
push
fstpt
xor
add
and
rcrb
out
adc
call
pop
dec
jnp
cld
insb
call
incb
jne
add
std
and
arpl
sub
mov
int
fdivs
outsb
mov
test
outsb
add
mov
pop
fcomps
rorb
cmp
mov
sbb
stos
push
pop
and
inc
lea
test
xchg
push
cmpsb
lods
jo
xchg
data16
xchg
hlt
rclb
dec
cmp
mov
pop
push
xor
and
stos
push
push
ret
or
mov
ror
in
cld
mov
in
sub
cmp
in
fwait
lock
cltd
mov
fistpll
adcl
jno
mov
cmp
mov
jmp
out
fistpl
or
jns
lret
cltd
lahf
fists
scas
inc
loop
fists
test
mov
movsb
dec
loop
inc
sub
fisttpll
jg
cmp
jp
xor
pop
push
scas
out
or
leave
cmp
int
shrb
mov
test
adc
xor
or
or
xchg
test
shll
mov
enter
loope
push
shr
imul
cmp
inc
push
xchg
in
loope
mov
xchg
and
mov
xchg
mov
lods
push
insb
frstor
cmp
lock
stos
loopne
ljmp
fmuls
mov
or
push
es
xchg
add
inc
jb
aad
scas
push
and
mov
and
stos
inc
lods
xchg
push
shlb
rcll
call
loope
lcall
add
and
popf
or
dec
or
jae
fwait
daa
or
dec
cli
jne
scas
out
loopne
jge
and
jge
inc
rcrl
nop
ret
sbb
outsb
mov
popa
es
sbb
xchg
push
jnp
cmc
mov
xchg
adc
insl
insl
xor
mov
in
fsubl
pushw
ja
aas
xchg
mov
inc
inc
je
bnd
xchg
sbb
popa
xor
xchg
in
cmpsl
jo
cmp
xor
pop
pop
dec
lret
enter
out
mov
pop
xchg
pop
jb
out
adc
cmp
adc
cmp
jbe
jg
jbe
xor
xchg
das
adc
dec
imul
sub
adc
enter
icebp
add
mov
jns
jmp
sbb
jmp
movsb
ret
das
push
popf
xchg
and
in
icebp
xchg
push
roll
jne
int
inc
shlb
cmp
xor
push
inc
ja
mov
in
lea
cmp
dec
mov
outsl
out
push
inc
ret
ds
and
ficoms
fdivl
pop
adc
gs
cli
xchg
jo
xchg
xor
cmp
jae
test
sahf
insb
out
sahf
lods
aaa
popaw
mov
mov
inc
mov
imul
sbb
ja
mov
ret
outsb
inc
lds
mov
enter
add
or
stos
fsubl
mov
pop
lods
cmpl
mov
push
dec
outsb
popl
out
cmp
xor
aad
add
add
mov
std
fdivrs
fisttpl
sbb
sub
sub
sub
sub
mov
sbb
jge
sbb
push
pop
jno
mov
xor
out
inc
push
data16
mov
pop
out
adc
and
test
mov
sti
mov
shl
mov
mov
sbb
shrd
dec
dec
mov
dec
out
add
sbb
mov
add
loop
sahf
ret
or
dec
mov
mov
mov
pop
sbb
sub
inc
stos
clc
ficompl
cmp
xor
scas
push
jbe
cmpsb
cmpsl
aaa
inc
fdivs
cltd
addb
pop
or
jne
clc
mov
fcmovb
xlat
outsb
mov
mov
ja
pop
pop
in
add
dec
lock
mov
jp
lea
mov
inc
imul
out
adc
lock
cmc
cmp
dec
movsb
hlt
sub
repz
sub
fdivs
dec
pop
popa
iret
xchg
sti
repz
call
je
repnz
xchg
add
or
fnstcw
ficompl
add
inc
test
or
or
xchg
jnp
sub
sarb
int3
fidivs
nop
and
adc
cmp
ret
insl
pop
dec
fisttps
sub
jge
pusha
mov
testl
lods
jmp
and
insl
shl
cltd
stos
inc
out
inc
xor
xchg
mov
pop
ja
xchg
xchg
sbb
xor
enter
pop
xchg
adc
push
add
daa
inc
aas
jo
jno
adc
jno
or
fstl
and
int3
sub
push
mov
push
add
rolb
fdivrl
mov
lods
adc
sub
mov
shll
daa
outsl
sbb
xor
fucomi
mov
push
push
add
jb
ret
mov
lahf
push
insl
rol
jmp
aam
add
xchg
fdivp
insl
test
jmp
iret
sub
inc
fnstenv
xor
push
imul
dec
cmpl
adc
cs
add
inc
jmp
cmp
push
mov
cwtl
lret
push
jbe
test
bound
pop
mov
jnp
rcrl
dec
test
inc
adc
or
jmp
mov
movsl
repz
aaa
jo
and
adc
into
inc
pop
je
push
push
das
outsb
mov
and
pop
mov
jbe
lods
mov
hlt
int3
daa
cli
add
xorl
adc
ss
inc
push
sahf
inc
push
bnd
pop
inc
out
stos
sbb
ds
inc
jge
movsl
in
dec
sbb
xlat
in
xor
push
sarl
add
jmp
mov
mov
sahf
xor
iret
je
adc
das
pop
cmp
jnp
xchg
mov
popf
lahf
data16
lock
dec
push
je
loopne
ret
mov
lods
das
dec
pop
xor
mov
mov
fidivrl
aad
lods
pop
loopne
shlb
add
add
push
stos
js
pop
mov
mov
mov
jne
movsl
lods
pop
data16
sub
sub
insl
fdivl
and
cltd
cmp
push
cs
pop
add
mov
das
aam
fsubl
imul
jae
loope,pn
cmp
xor
out
mov
inc
iret
cmpsl
not
add
sbb
add
fisttps
sub
mov
leave
enter
push
notl
inc
movsl
out
lcall
out
sub
dec
iretw
mov
fdivrs
loope
adcl
hlt
dec
out
xor
shll
adc
ja
inc
shlb
cwtl
addr16
xlat
js,pn
adc
ds
fildl
loope
rcll
daa
push
dec
mov
or
cmp
push
jb
jle
dec
scas
loopne
sbbb
andl
and
fxch
pop
xchg
cld
cli
cmp
out
add
xlat
jns
mov
cli
cwtl
xchg
add
cmpl
lret
movsb
add
mov
rorb
add
sti
xchg
jge
sub
mov
add
fnsave
scas
or
or
mov
fcmovne
das
cmp
fisubrl
mov
push
dec
ret
mov
inc
jge
jecxz
cmc
mov
inc
scas
ds
in
inc
fdivr
jle
add
sbb
test
ljmp
shlb
xchg
push
ficoms
xchg
int3
arpl
popa
add
in
ret
icebp
dec
adcl
push
sub
cmpsb
scas
lods
pop
repnz
cmpsb
out
leave
push
jns
or
cwtl
and
jge
sub
rcl
das
cmp
xchg
ret
in
pop
mov
stc
jp
xchg
pop
cmp
jg
mov
pop
jno
insb
push
lahf
mov
aaa
push
and
dec
in
push
movsl
cmp
out
int3
mov
sahf
jp
popf
fdivs
sar
xchg
push
enter
sub
jl
xchg
mov
popf
push
xchg
stos
cwtl
fistps
add
dec
jecxz
sbb
inc
div
cmp
int
jnp,pt
rorb
shll
rcrb
int
adc
jne
je
dec
lcall
add
inc
loope
shll
testb
gs
ret
fidivs
in
xor
add
add
loop
imul
mov
mov
iret
daa
loopne
jmp
or
insl
mov
inc
out
adc
inc
mov
dec
mov
aad
call
cmp
imul
out
outsl
pop
mov
outsb
shrb
jbe
xchg
mov
sti
lcall
mov
dec
push
mov
pop
jns
sub
fdivl
cmp
push
push
sti
pop
xor
mov
push
mov
rcrl
sbb
std
inc
mov
cmp
mov
ret
dec
fcompl
jle
xchg
loop
dec
out
push
inc
jns
add
loopne
inc
xchg
fmuls
or
daa
repnz
lcall
cmp
jnp
dec
cltd
dec
pop
lret
outsl
call
ss
cltd
gs
les
data16
mov
mov
pop
mov
test
lret
lds
shr
cmp
fistl
jae
or
stos
out
and
push
mov
fld
ret
hlt
mov
pop
test
out
dec
push
add
or
add
lcall
mov
xor
sbbb
cli
sub
loopne
test
gs
mov
adc
sub
dec
inc
rcrb
fistpl
mov
sti
add
add
andl
push
gs
xchg
lahf
bound
or
pop
gs
ja
cmp
jle
push
in
xlat
add
pop
fwait
push
icebp
or
es
popa
pop
xchg
push
cmp
add
xchg
in
inc
movsb
xchg
jo
xchg
lea
mov
gs
cmp
ds
rcrl
mov
mov
inc
clc
mov
stos
add
shll
inc
mov
mov
sbb
xchg
mov
or
jmp
fidivrl
insb
shll
adc
xor
xor
xlat
out
xor
pop
xor
rcrl
jns
int
or
mov
adc
sub
cld
or
mov
pop
pop
loop
mov
cmp
jnp
jne
fwait
jnp
sub
mov
stc
mov
xchg
jmp
xorl
ret
outsb
in
push
out
popf
adc
ds
cli
dec
push
pop
jns
jo
fsubl
loopne
lock
hlt
mov
or
sarb
add
jmp
dec
mov
imul
scas
push
xchg
or
hlt
lods
inc
sub
lods
mov
dec
lret
jp
cmp
xchg
out
shr
lea
sti
scas
dec
push
insl
sbb
ja
test
adc
cs
repz
mov
jns
ds
or
jp
xchg
pop
lcall
hlt
xchg
popl
cwtl
jl
popa
adc
sbb
pop
mov
cmp
ud2
test
ret
test
add
enter
and
adc
int3
push
cmpsl
adc
jbe
cmpsl
mov
and
mov
xchg
jl
add
sbb
add
dec
adc
les
shll
cltd
sub
add
flds
xor
xchg
xchg
pusha
add
gs
jg
aas
adc
push
icebp
repz
insl
jecxz
imul
fsubr
cltd
or
lods
mov
mov
dec
imul
sbb
xor
jbe
cmp
dec
nop
push
subl
inc
lcall
and
mov
fs
outsb
jmp
lods
loop
dec
adc
lods
mov
cli
out
popa
dec
es
les
movsb
out
adc
ret
push
sbb
mov
fwait
adc
mov
xor
adc
pop
sbb
imul
pop
lahf
jecxz
repnz
push
mov
in
rclb
ja
out
jns
fdivs
xchg
and
cmp
push
cltd
cli
mov
push
loop
or
pop
or
cs
enter
pop
aad
xchg
pop
dec
lods
xor
push
icebp
mov
js
xlat
out
fcoml
mov
arpl
xchg
cmpsb
jl
mov
sbb
lea
mov
into
call
pusha
push
add
mov
jb
stos
test
aam
insb
xchg
and
lcall
or
cli
add
xlat
cmc
icebp
inc
xor
cmpsl
mov
les
scas
fstpt
in
imul
movsb
popf
xor
lcall
push
sub
fcmovbe
push
mov
mov
pusha
sub
popa
gs
xchg
inc
sti
xor
repnz
dec
sbb
jmp
pop
cmpsb
les
fsubs
imul
mov
jge
lret
cmp
rol
sub
stos
inc
push
mov
lcall
sub
stos
xor
jb
out
jo
cwtl
adc
inc
add
inc
orb
sub
clc
leave
mov
out
mov
pop
fldcw
jae
fdivrp
lcall
in
jae
scas
add
jbe
popa
or
dec
xchg
mov
xchg
fldt
movb
je
or
into
stos
inc
insb
stos
pop
ffreep
dec
push
in
loop
xchg
nop
aam
push
xor
cmpsb
out
cmp
inc
in
push
and
jno
ljmp
mov
and
inc
popa
leave
jmp
mov
push
leave
xlat
inc
pop
cli
pop
mov
sbb
push
in
repz
das
cwtl
fistps
popa
push
mov
sub
roll
sub
ret
pop
inc
push
imul
sar
icebp
arpl
fmuls
imul
shlb
jge
jb
inc
imul
push
xchg
fidivs
sbbl
pop
mov
push
loope
shl
mov
xor
sbb
jne
mov
or
mov
popa
in
nop
or
int
mov
fmulp
test
addr16
hlt
mov
adc
rorl
bound
insl
xor
outsb
js
lods
movsl
cmp
xor
jp
imulb
add
jge
addr16
aad
xor
cltd
dec
insl
add
dec
push
sub
dec
mov
jae
insl
mov
and
aad
or
add
aas
inc
mov
push
clc
cmp
jmp
mov
push
mov
xor
jns
aam
xor
sub
iret
cmp
in
sbbl
divb
in
xchg
ja
testl
mov
xchg
xchg
daa
jle
pop
rcrb
and
pushf
imul
and
shrl
adc
cmp
push
sahf
mov
aad
roll
jne
movsl
mov
push
and
adc
loope
lahf
mov
mov
adc
add
stos
push
sbb
mov
adc
out
fsubr
je
or
or
imul
lods
inc
or
arpl
xor
fidivs
dec
mov
aas
dec
out
hlt
sbb
add
mov
loopne
shll
pop
inc
add
icebp
lds
dec
dec
jecxz
cmp
sbb
pop
jmp
or
dec
mov
xlat
mov
ret
sbb
subb
mov
sub
sahf
stos
sub
popa
jg
push
pop
xchg
out
jno
pushf
and
aam
dec
dec
mov
pusha
mov
inc
fistpll
mov
ds
shlb
sarl
lock
repz
adcl
mov
in
adc
lahf
fs
push
movsl
ret
push
jno
aaa
iret
fdivs
jl
cmp
add
in
sbbb
xor
fistpl
cmp
lret
jle
out
sbb
aas
lret
cmp
mov
sti
xchg
scas
cmp
pop
fnstsw
cmp
dec
aaa
out
mov
mov
scas
jns
pop
insl
and
push
es
mov
int
cmp
dec
es
cmp
pop
or
sub
fadds
mov
out
daa
addb
mov
lods
push
jle
push
into
test
and
scas
cwtl
scas
fidivs
cmp
jecxz
xchg
jp
mov
sub
pushf
je
push
xchg
int
fwait
loope
sbb
adc
cmp
jecxz
add
mov
xor
int
xor
push
std
mov
pop
dec
sbbl
ret
pop
imul
outsb
out
les
mov
mov
add
sbb
adc
into
sub
addr16
rcl
jo
cmp
mov
xchg
cmpsl
mov
xor
push
in
xchg
dec
sub
lcall
pushf
pushf
jbe
cs
mov
add
and
cltd
in
or
fwait
pop
repnz
or
push
mov
test
dec
pop
repnz
fnstenv
sub
inc
mov
and
pop
in
fcoml
lahf
popa
mov
cmp
loop
pop
cltd
mov
aad
pop
push
cmp
std
jmp
push
popa
addl
inc
aas
mov
es
pop
sbb
xlat
pop
or
pop
lock
push
inc
lock
shrb
sub
push
stc
sbb
cmp
xchg
fisubs
xchg
fs
cmp
mov
sarl
jnp
test
jne
je
or
arpl
add
lods
cmpl
std
xchg
cmpsl
cs
dec
arpl
out
aas
pop
les
sbb
lahf
adc
pushf
xor
push
fdivrl
rcll
addl
push
sub
cmp
arpl
pusha
fsubrs
add
cld
xchg
popf
xchg
ret
incb
xor
cltd
push
mov
in
rclb
aad
dec
inc
push
insl
std
cmp
ret
hlt
and
movsb
or
sbb
jle
mov
inc
js
fyl2x
outsb
pop
fcomps
lock
sub
pop
mov
xchg
int
lods
jmp
mov
lods
pop
rorl
hlt
aaa
or
push
out
sbb
cld
lcall
in
cmp
icebp
mov
out
push
jmp
mov
fidivs
push
mov
pop
sub
xchg
jle
dec
sbb
mov
imul
jne
scas
scas
pop
dec
clc
sahf
push
cs
push
insl
adc
movl
pop
into
ja
test
sub
popl
mov
pusha
cltd
test
repz
loop
movsl
adc
xchg
out
mov
flds
aas
hlt
loopne
mov
xor
cs
mov
dec
mov
rorl
sub
outsb
daa
pushfw
mov
jg
in
pop
push
les
sbb
bound
mov
outsl
push
fsubs
cvttps2pi
xchg
pop
lahf
xlat
cmpsl
sbb
xchg
pusha
ljmp
and
mov
bound
sub
push
jecxz
xchg
dec
dec
xor
jl
xchg
dec
flds
fdiv
or
xchg
pop
shlb
sti
cmp
dec
out
int3
pop
outsb
jmp
outsb
into
xor
fldcw
shr
mov
push
mov
add
sbb
adc
out
cmp
clc
sbb
mov
or
out
sub
test
mov
sub
and
test
xor
adc
into
pop
arpl
leave
cmp
out
je
lods
into
ljmp
outsb
xchg
sub
arpl
inc
aad
mov
and
movb
push
mov
cmpsl
push
leave
sbb
insl
lea
rclb
mov
xor
cmpl
pop
or
call
dec
into
js
xor
loope
jnp
div
dec
cmp
cltd
inc
repz
mov
inc
cltd
iret
xor
fstl
push
sub
arpl
jns
mov
inc
push
xor
and
bound
xor
xlat
outsl
pminub
daa
test
push
popf
pop
icebp
into
ljmp
xlat
fimuls
xchg
xor
sbb
aas
shrl
push
pop
imul
es
scas
aas
outsb
inc
data16
jns
push
jno
filds
enter
inc
gs
mov
pop
pop
out
lahf
pop
mov
outsl
push
mov
pop
mov
fld
and
nop
xor
decl
inc
push
clc
dec
or
ficoml
testb
test
jle
and
push
popa
test
test
jg
mov
in
jnp
jno
dec
adc
jnp
loop
aad
dec
sahf
or
in
mov
mov
pop
or
jnp
int3
arpl
stos
ljmp
leave
adc
aas
ds
ljmp
mov
sbb
sub
xor
and
push
adc
pop
in
inc
mov
in
int3
xor
mov
dec
dec
pop
js
test
jge
and
or
ss
sbb
es
insb
pop
xchg
inc
pop
setle
shlb
mov
sbb
jnp
faddp
insb
addr16
sbb
sbb
loopne
cld
xor
insl
in
push
pop
fwait
adc
cmp
push
cmpsb
sbb
push
inc
movsb
pop
inc
std
je
shr
stos
xchg
xchg
ds
xor
adc
mov
mov
mov
push
das
les
sub
mov
inc
push
in
imul
add
mov
call
ret
int
out
ja
call
or
pushf
scas
aam
sub
leave
and
and
jmp
shl
repz
jno
divl
int3
mov
imul
or
or
fs
daa
mov
jns
cmp
dec
lcall
in
lcall
aam
cmp
cmp
inc
aam
cwtl
ss
cwtl
jg
ficomps
cmp
xor
mov
add
out
xchg
push
popf
into
sbb
jne
mov
sbbl
inc
sbb
cmp
test
std
loopne
push
adc
and
dec
hlt
pop
lock
leave
cs
pop
sbb
pusha
stc
cmp
lods
andl
pop
cmp
or
xchg
jno
dec
out
loop
adc
cmp
stc
xor
push
inc
jmp
and
notb
loop
neg
jge
push
sub
jo
filds
or
rcll
xor
out
inc
cmp
jb
in
addl
jp
fimull
xchg
sub
aad
jbe
sbb
not
mov
in
out
mov
gs
inc
inc
xchg
ds
mov
popa
movsl
daa
mov
das
cs
cmp
sub
jno
pop
xor
frstor
pop
mov
dec
shl
jb
js
mov
cmpsl
dec
mov
push
xor
call
push
sahf
lods
scas
pop
pushf
fs
rolb
and
mov
jle
and
add
jne
or
decl
stos
enter
subb
mov
and
push
aam
xchg
scas
sub
mov
cmp
int3
pop
mov
dec
cmp
xchg
lock
sub
mov
out
mov
push
jmp
or
add
push
mov
stc
data16
jb
xor
adc
dec
mov
jb
or
std
mov
test
xchg
jmp
je
fwait
cmpsl
stc
jno
lret
pop
dec
adc
or
sub
mov
xor
push
lods
push
aas
push
ljmp
shl
xchg
add
add
int3
int3
and
sub
lods
mov
lods
xor
test
shrl
and
xchg
sbb
mov
out
inc
and
cs
dec
sub
das
cmp
dec
xchg
xchg
int
pusha
fldcw
and
jg
sub
mov
cmp
push
mov
or
das
jb
lods
iret
int
mov
jbe
mov
test
in
rorl
mov
or
insl
sub
in
loop
and
fsubl
sub
mov
pop
insl
imul
or
inc
jle
mov
sbb
pop
stos
push
or
jbe
sti
cs
pushf
push
mov
xchg
leave
shl
jns
ljmp
jmp
sbb
cltd
nop
into
push
or
movsl
dec
loope
mov
fidivl
ljmp
push
pop
push
cld
adc
scas
push
lds
xchg
add
xchg
pop
pop
out
les
adc
adc
in
fcoms
outsb
inc
cmp
loopne
fiadds
cltd
dec
enter
and
jo
mov
cmp
xchg
inc
enter
inc
jmp
icebp
or
shlb
push
jge
jmp
pop
or
call
or
adcb
int
pop
push
push
lods
shll
repnz
and
sbb
sub
daa
push
and
scas
jmp
jo
fwait
cmpsl
and
dec
fildll
dec
gs
outsb
in
test
mov
enter
arpl
loop
adc
ljmp
mov
out
jnp
in
cmp
xor
pop
jb
jbe
dec
xchg
lahf
gs
notl
pop
popa
adc
inc
inc
and
movsl
jbe
cs
push
test
gs
mov
mov
das
adcl
or
mov
outsb
lods
stc
pop
push
leave
mov
call
sbb
outsl
xor
pop
jne
lret
xchg
in
sti
adc
sbb
repnz
inc
inc
sbb
outsl
in
jae
xlat
bound
in
mov
mov
push
jmp
sbb
ffree
pop
jno
in
subb
mov
orb
mov
push
pop
or
mov
xor
stc
xchg
fsubl
jle
cmc
je
mov
int
mov
notb
push
mov
ret
divb
sahf
loope
mov
add
push
mov
dec
loop
fdiv
enter
or
adc
sub
fmuls
lea
in
dec
jmp
push
jmp
pusha
data16
mov
outsb
out
clc
mov
mov
adc
shlb
add
cld
xor
inc
cmpsl
cli
mov
fsubrs
mov
mov
mov
scas
leave
ja
or
fstpl
imul
outsl
stos
shrb
popf
mov
es
mov
inc
push
xchg
jnp
push
shll
repnz
loope
jg
pop
jno
subl
cmp
fisubl
adc
mov
xor
mov
pop
mov
xor
in
pop
repnz
push
sub
mov
je
jno
add
je
pop
data16
sub
and
idivl
call
rorl
ss
xchg
cs
adcb
std
xchg
mov
popf
ss
in
mov
outsl
cs
imul
in
loop
test
imul
fbstp
addl
loope
rcr
inc
sahf
sub
leave
and
rolb
scas
and
sub
cmc
push
pop
in
add
rcrl
xor
imul
js
push
je
jp
lret
sti
hlt
out
bound
push
std
loopne
lods
inc
fcompp
pop
dec
jl
gs
dec
outsb
and
mov
mov
movsb
xchg
add
sahf
imul
pop
or
cmp
shrb
jmp
ljmp
and
push
fnstenv
les
cwtl
test
mov
pop
jg
stc
jg
pop
pop
sbb
xchg
add
ljmp
jb
lret
mov
sbb
or
inc
add
fwait
repnz
pop
inc
fnsave
fs
imul
in
push
push
imul
push
cmpb
push
jns
inc
sbb
xor
cmp
pop
mov
jecxz
rcrb
push
insb
push
or
int3
lret
fstpl
dec
fadds
jb
push
gs
mov
in
and
in
xchg
dec
pop
stos
aaa
cmp
in
int
sahf
dec
lret
cs
stc
pop
loopne
fsts
cmp
icebp
mov
xlat
cmp
or
js
imul
push
mov
movsl
pop
and
out
cltd
in
xchg
rorl
scas
out
pop
push
fnsave
push
mov
cmp
mov
xchg
std
sbb
sbb
mov
popa
fsubrp
iret
dec
xchg
adc
pusha
inc
pop
rorl
into
mov
and
pop
or
cmp
adc
jp
shll
adc
dec
dec
or
xchg
sub
dec
pop
out
cmp
mov
test
xchg
mov
lret
push
xor
xor
and
pop
loope
pushl
repz
jge
pop
xchg
or
test
out
mov
int3
dec
mov
je
cmp
call
mov
sbb
cmp
shll
repnz
jnp
insb
leave
cli
fsubl
dec
push
sbb
push
xchg
cs
fwait
add
in
gs
sub
xlat
cmp
loop,pt
repnz
lea
sub
enter
xchg
testl
cmp
insl
add
mov
inc
lods
mov
pop
jbe
pushf
sub
clc
push
aas
push
xchg
add
adc
cmp
xchg
popa
dec
and
and
mov
call
jb
jp
or
xchg
scas
lea
pop
aas
pop
or
sub
lea
mov
inc
sarb
ljmp
fdiv
xor
mov
xchg
les
cltd
aaa
adc
cltd
insl
push
adc
xor
sahf
sbb
or
pusha
sub
mov
or
scas
xchg
shrl
movsb
in
in
push
divb
ja
je
lahf
sbb
testb
imul
aas
faddl
lock
jbe
mov
jne
mov
mov
push
fninit
into
pop
push
hlt
fwait
xor
ljmp
inc
or
mov
orl
flds
and
push
jne
fisubrs
sbb
jmp
aad
jg
xorl
mov
stos
maxps
sbbb
lods
mov
fistpll
gs
mov
xchg
testl
fidivrs
leave
aaa
daa
xor
jle
call
dec
or
adc
inc
jbe
and
imul
insb
cmp
dec
mov
stos
add
mov
arpl
mov
fidivrs
dec
cmc
xor
jae
out
rcr
loop
push
int3
inc
xlat
es
xchg
inc
lret
pand
inc
in
lret
bound
sbb
aad
inc
dec
lret
cli
lods
jmp
aam
and
test
addr16
lret
fs
fidivrs
movsb
test
popa
sub
lcall
jmp
cwtl
xchg
fdivrl
aad
cmp
outsb
cmc
and
sar
push
pop
xchg
add
jne
pop
cvttps2pi
cmpl
mov
push
mov
jbe
xchg
jmp
xchg
call
inc
jnp
shr
push
cmpsl
pop
xchg
cmp
lods
je
mov
lock
stc
sahf
outsl
outsl
ret
pusha
jecxz
shll
pop
cmp
sbb
js
lea
in
mov
xor
sbb
jle
fsubrp
and
or
mov
std
and
push
fsubl
mov
insb
xor
lcall
cltd
out
loopne
popa
popf
and
fildll
jnp
jg
int
fcompl
imul
sbb
pushf
adc
dec
loopne
push
xor
dec
push
jo
xchg
test
push
call
imul
rorl
shlb
and
pop
mov
pop
or
cmp
subb
xor
in
insb
cli
ret
lock
aam
add
jae
dec
xchg
sbb
mull
push
out
cmp
scas
jmp
mov
jl
cmp
fidivrl
movsb
push
sub
cmpsb
inc
sbb
daa
ficomps
jmp
sarb
sbb
shlb
clc
mov
mov
pop
jg
enter
jl
jae
decb
jnp
inc
ret
or
in
jne
xchg
pop
lahf
inc
and
add
mov
adc
inc
data16
pushf
ss
sub
adc
push
mov
push
sbb
xchg
mov
or
cmp
push
out
mov
jmp
cmp
clc
icebp
fdivrl
mull
sub
fisubrs
lret
xchg
push
and
mov
sti
or
inc
sahf
lds
jo
xorb
out
or
dec
xor
jg
fsubs
pop
push
mov
push
pop
jno
addb
es
sbbl
sub
pop
jle
xlat
rolb
or
movsb
cwtl
mov
lret
and
add
insb
and
mov
cmp
xor
fs
insl
iret
and
mov
lea
cltd
add
out
fdivs
jb
jne,pn
xlat
jle
stos
mov
dec
add
xor
cmp
mov
gs
mull
cmpsl
ja
xchg
push
xor
cli
sbb
fistl
ret
xor
adc
ffree
push
es
je
add
lods
inc
sub
pop
jb
mov
fsts
dec
inc
leave
push
aaa
push
inc
stos
push
mov
push
xchg
mov
lret
sub
into
sub
push
xchg
das
lods
das
mov
mov
scas
jno
lea
sbb
je
xor
jnp
push
insl
adc
or
into
mov
dec
hlt
orb
pushf
arpl
test
repz
inc
nop
mov
fisttps
iret
cmpsl
out
inc
sbb
sub
push
mov
iret
fnstenv
sbb
xchg
cli
cmp
add
call
dec
aas
in
push
push
pop
pop
cmp
std
movsl
inc
cmp
mov
popa
jnp
hlt
lods
xchg
popa
mov
je
xchg
cmpsb
sbb
outsb
hlt
fdivl
rdmsr
mov
fidivl
movsl
inc
add
or
cld
stc
or
adc
outsl
jecxz
sbb
xchg
mov
add
aam
in
lods
ret
cmc
pop
cltd
mov
mov
addr16
or
call
sbb
pushf
iret
pop
shrl
adc
inc
xor
bound
movsb
mov
lds
push
or
dec
movsb
shll
lds
out
pop
sbbl
pushf
stos
inc
aas
mov
push
xchg
ss
jmp
mov
add
sub
mov
adc
push
adc
jecxz
out
iret
cwtl
mov
sahf
aas
mov
addl
jae
leave
push
adc
dec
inc
mov
test
push
leave
sbb
int
int
movsb
sahf
sub
test
loop
xor
dec
cmp
imul
cmp
or
fildl
or
pop
adc
repnz
das
cmp
jp
jp
add
jae
test
pop
jle
push
sub
lcall
sbb
push
ds
lret
out
jae
mov
push
push
jo
or
jmp
fidivrl
mov
gs
sbb
adc
cmp
pop
mov
add
mov
shlb
jg
dec
movsl
cmp
fwait
aas
add
jnp
and
in
out
pop
mulb
mov
push
jne
sbb
and
push
cmc
mov
cmp
dec
jl
mov
mov
jecxz
cmp
xor
push
adcb
mov
je
xchg
es
jnp
ja
cmp
rcrl
mov
mov
adc
push
jl
lods
pop
push
ja
mov
or
in
mov
insl
pxor
jne
aad
stc
dec
js
fcomp
outsl
push
push
adc
cmp
jl
pop
dec
fwait
orl
xor
test
iret
mov
cmc
sbb
push
push
jge
dec
testl
ficoml
test
xor
inc
arpl
or
jmp
loope
int3
add
inc
scas
and
in
int3
aas
dec
cmpsl
fsubrl
and
mov
loope
mov
push
mov
xor
mov
int
sub
into
pop
cmp
mov
push
dec
fwait
or
or
lods
or
fisubrs
sarb
testl
mov
pop
cmpsb
ds
mov
cmp
mov
in
push
inc
daa
push
mov
stc
inc
dec
arpl
jg
sti
test
mov
xor
mov
xchg
scas
xor
pop
stos
mov
jnp
adc
push
xor
xchg
jns
jge
pop
imul
lcall
push
push
sub
mov
imul
xchg
lock
xchg
stc
dec
jmp
sti
shrl
push
dec
frstor
mov
lcall
or
mov
fcomip
inc
mov
sub
stc
adcb
cmp
pop
insb
lahf
pop
out
add
mov
xor
xchg
es
push
stc
jbe
icebp
sbb
fwait
add
mov
int3
out
out
cld
frndint
outsl
and
jge
filds
fiadds
sub
push
dec
fsubrs
mov
pop
jb
shl
ja
cmc
dec
jge
into
out
inc
jo
imul
sub
or
mov
xchg
jnp
mov
sbb
mov
icebp
aad
out
pusha
test
pop
call
or
jmp
push
pop
mov
out
mov
ja
imul
lods
push
and
outsb
test
mov
stos
in
xor
mov
xchg
es
js
or
dec
mov
add
js
jne
jbe
or
xor
mov
out
xchg
pop
xchg
dec
bound
in
xor
es
imul
inc
xchg
jb
sub
lock
sbb
cld
inc
hlt
mov
incb
mov
xchg
cld
insl
xchg
aaa
adc
andl
xor
dec
and
test
je
hlt
xor
mov
outsb
sub
in
in
mov
adc
cmp
push
and
cmp
push
jbe
push
sbb
std
shrl
inc
sub
jne
fildll
xor
test
push
in
lret
and
mov
adc
mov
push
stos
movsl
mov
test
pusha
xchg
scas
xchg
pop
sub
out
cmc
pusha
sub
dec
push
jge
dec
in
inc
jge
out
sub
out
arpl
pop
and
add
inc
mov
or
lea
add
in
mov
push
cwtl
psadbw
test
lock
lds
popf
push
sahf
insl
and
sbb
aas
imul
or
and
xchg
aaa
sub
stc
es
mov
clc
mov
mov
jnp
mov
lcall
pop
addr16
xlat
cmp
and
jnp
mov
jmp
fs
fisubs
xchg
out
sub
cmp
mov
adc
cwtl
cmp
cmpb
fistps
ret
add
push
adc
xchg
int
loop
push
push
ljmp
sbb
orb
adc
mov
inc
lea
push
jb
lret
daa
sarb
jb
xor
and
fdivrl
nop
push
mov
jmp
dec
pop
jne
bnd
add
sub
test
cmp
test
mov
ret
test
push
insb
outsb
cmp
adc
mov
sbb
out
fbstp
sbb
dec
mov
loope
or
fs
mov
pop
sub
mov
and
fs
decl
and
in
popf
xor
inc
pop
mov
fnstenv
pminub
mov
cmp
add
mov
and
xchg
pop
out
or
pop
jge
push
pop
scas
subl
mov
shll
mov
les
test
inc
out
arpl
les
rcr
shlb
cld
ret
xor
or
fs
ljmp
stos
xchg
xchg
adc
inc
lret
mov
js
cmp
fisubl
vmaskmovdqu
shl
xchg
popa
subb
outsl
push
hlt
lea
xor
adc
outsl
sub
add
xchg
xor
jb
lret
lret
push
or
in
insl
dec
fwait
bound
fwait
mov
sub
pop
js
in
ja
iret
cmpsb
pop
out
mov
xchg
sub
leave
mov
sub
pop
decb
fidivrs
push
add
mov
test
xlat
mov
push
idivb
add
ljmp
inc
mov
popf
dec
pop
sub
insb
in
lcall
push
cmp
insl
mov
adc
or
xchg
mov
xor
leave
fnstenv
idivl
jae
cmp
mov
push
xlat
roll
sub
scas
daa
mov
pop
xor
mov
jb
mov
icebp
mov
jge
popf
add
push
sbb
inc
jmp
jle
add
popf
sbb
loope
cmp
cmpl
mov
mov
lods
xchg
negl
ror
aas
imul
popa
orl
mov
mov
je
push
jmp
popf
aam
xchg
jns
push
pop
jecxz
leave
cltd
sub
leave
ss
add
addb
les
pop
int3
ljmp
fnstenv
adc
pop
push
filds
test
gs
xchg
jg
movsl
add
mov
xchg
movsb
lds
jl
push
je
inc
mov
in
in
pop
loopne
popa
pusha
int3
inc
jo
imul
outsb
inc
and
jl
nop
sub
adc
pop
jle
fsubrs
push
cmp
xchg
adc
adc
sbb
aam
out
dec
adc
leave
outsb
aad
loopne
in
push
mov
cmp
push
sarl
int3
push
test
pop
xchg
in
test
adc
ficomps
mov
movsl
xchg
imul
adc
leave
imul
push
movsl
xchg
inc
and
cmpsl
xor
js
mov
mov
shl
pop
test
int
cmp
pop
jne
cltd
add
neg
loop
xchg
sub
shlb
mov
mov
test
cmp
dec
push
push
test
mov
gs
in
jno
ljmp
outsl
push
dec
in
jae
aaa
cmp
insb
mov
and
push
xor
fldl
push
mov
sub
pop
aas
xor
cs
xor
fldl2e
xlat
das
sbb
sub
cmp
sbb
cltd
cld
stos
ja
dec
in
push
fs
push
call
push
bound
xchg
mov
icebp
xchg
lock
scas
inc
xchg
mov
test
bnd
clc
lods
lcall
cmp
test
pop
jb
fcomps
in
jns
xchg
jle
pop
test
fidivs
sarb
mov
subb
test
push
repnz
inc
lahf
sub
inc
fidivl
xchg
popa
ljmp
and
repnz
xchg
das
mov
mov
in
push
mov
mov
imul
fadd
pop
or
cld
and
jo
add
mov
inc
std
out
clc
and
movsl
xor
jmp
or
inc
in
or
xlat
xchg
xor
pop
jnp
int
filds
add
xor
sub
in
push
adc
and
adc
clc
sar
ds
pop
cmp
push
add
pop
mov
xor
fisttpl
add
cmpl
xor
xchg
inc
ljmp
mov
and
pop
test
dec
mov
loopne
sbb
xchg
inc
cmp
push
mov
lods
int3
mov
mov
adc
dec
in
outsb
pop
push
ljmp
dec
jl
jno
das
stos
and
js
add
movsb
push
push
les
jge
lock
inc
addr16
add
out
add
push
mov
cmpsb
add
dec
xchg
sbb
push
out
mov
xor
popl
and
push
mov
sbb
mov
mov
dec
hlt
fcoml
sub
leave
xchg
mov
clc
push
int3
aas
jne
pop
arpl
sahf
push
mov
lret
xchg
dec
sbb
in
xor
mov
pushl
out
dec
and
roll
mov
daa
mov
inc
fcomps
dec
in
add
pop
xor
testl
cmc
sahf
xchg
inc
fiadds
scas
mov
push
adc
jo
bound
push
test
in
xchg
leave
lea
push
sbb
les
lods
pop
xchg
jo
fnsave
popa
inc
fadd
dec
push
icebp
mov
scas
xchg
xor
jmp
out
pop
adc
cs
jo
push
lret
mov
mov
les
addr16
sbbl
adc
pop
rcll
mov
push
mov
cmp
data16
push
nop
icebp
xor
in
daa
pushf
testb
cmp
or
push
iret
mov
add
push
push
inc
loop
clc
lcall
mov
lds
add
dec
and
cmp
dec
sysret
jno
or
push
in
test
mov
or
das
lea
mov
mov
cltd
or
jo
xchg
hlt
and
mov
das
pop
insb
mov
subb
jmp
cltd
ljmp
sbb
lahf
enter
push
stos
sti
xchg
or
lret
add
loopne
xor
sub
aam
xor
sbb
in
xchg
adc
je
dec
xor
cli
test
dec
mov
dec
gs
push
test
arpl
int
gs
push
insl
fbld
pop
repnz
push
mov
cmpsl
ficomps
sbbb
fucom
filds
mov
sbb
imul
pop
and
xchg
mov
lock
xchg
pop
push
mov
dec
cmp
les
cmp
scas
clc
lea
and
call
jne,pn
lods
mov
pop
or
es
pop
scas
popf
ret
jnp
int3
and
xlat
test
inc
aad
mov
jge
loopne
shl
xchg
or
cmp
adc
pop
pop
or
mov
add
dec
xchg
jnp
sbb
into
hlt
mov
or
inc
fldenv
sub
pop
jo
fisttpl
fsts
cmpsb
cld
fldcw
mov
xchg
arpl
js
mov
cld
mov
adc
jecxz
fwait
repnz
aam
rclb
movsl
std
xchg
fsubl
or
pop
add
xchg
or
gs
jecxz
mov
outsl
ret
imul
cmp
sbb
sbb
push
xchg
test
das
jns
mov
imul
lahf
mov
int3
call
out
aas
mov
adc
data16
xor
sbb
xchg
ret
jecxz
jmp
and
aaa
nop
imul
lea
mov
aad
mov
jecxz
int3
clc
dec
adc
push
enter
aam
fidivl
pop
pop
icebp
in
mov
jns
mov
fwait
pop
stos
sbb
sub
xor
jae
out
mov
mov
or
fdiv
cmp
es
xchg
hlt
jg
dec
dec
mov
or
and
cld
push
mov
inc
fidivrl
insl
and
and
enter
movsl
fcoms
out
pusha
mov
push
movsb
xchg
stos
dec
or
ret
stc
or
imul
aas
clc
jb
sub
test
lret
sti
inc
jg
mov
jecxz
or
cwtl
das
cli
insb
adc
sbb
xchg
jmp
cmp
xchg
jbe
mov
inc
fisubrl
andb
cli
push
or
aaa
sbb
leave
test
jmp
xor
pop
jne
pop
lods
xchg
ss
fwait
icebp
sti
sbb
push
jb
pop
loop
mov
pop
outsl
add
cmp
ds
lds
dec
add
fidivl
push
sub
das
sahf
bound
jge
leave
dec
mov
clc
xchg
inc
push
sahf
sub
push
mov
mov
fisubs
or
ja
movsb
imull
or
fisttpl
jl
mov
andb
ss
cmp
jae
in
mov
push
mov
xor
jbe
ljmp
jbe
outsl
das
mov
sbb
sbb
test
cli
ds
stc
faddl
in
adc
lcall
sbb
lahf
hlt
cwtl
dec
bound
adc
add
fdivs
xor
pop
pushf
mov
cmpb
pop
xchg
push
and
cmp
rorb
int3
pop
sub
lods
mov
fcomp
repz
out
jl
sub
fisubrs
sti
sub
and
out
es
and
sub
fistpll
mov
cmc
add
insb
sub
inc
aam
mov
mov
dec
pop
stos
ss
movsb
repnz
inc
dec
jbe
or
mov
mov
in
leave
mov
inc
mov
jns
cmc
aaa
je
lcall
lahf
je
cli
hlt
sub
shlb
mov
xorb
out
es
popf
pop
xchg
jne
leave
int3
sti
out
add
xchg
arpl
xlat
push
add
xor
fidivl
test
xor
inc
push
out
push
cmc
mov
data16
dec
pop
iret
sbb
cmpl
fwait
cli
jne
fwait
test
das
bound
sbb
xchg
push
jne
adc
mov
in
in
mov
adc
fsubr
push
xor
das
dec
loop
rcrb
daa
jp
movsb
popl
adc
fisubs
lret
push
cltd
lcall
dec
daa
outsl
and
cmc
cltd
les
push
clc
adc
imul
arpl
jae
dec
fistpl
and
mov
int
fisubs
sarl
xor
arpl
popf
xchg
test
je
inc
fdivl
jge
jge
adc
xchg
ja
pop
or
push
cmpsl
testl
cmpsl
aad
adc
mov
mov
adc
icebp
mov
outsb
jmp
clc
shlb
inc
add
jne
and
pop
jle
and
iret
fs
scas
jno
inc
mov
sbb
idivb
jp
int3
mov
into
sbbl
in
dec
bound
mov
arpl
fsubl
neg
popa
pop
into
jbe
add
pop
inc
pop
xor
inc
push
xor
push
jnp
icebp
mov
and
mov
jecxz
add
out
orb
sahf
adc
out
dec
popf
fdiv
adc
xchg
push
fbld
psrad
in
pop
lea
xchg
in
pop
hlt
fiadds
clc
and
nop
mov
popa
pop
int3
pop
cmp
push
lock
push
xor
stos
or
decb
pop
leave
in
decl
and
xchg
mov
imul
cmp
int3
js
push
push
test
add
xor
sbb
mov
aaa
push
js
popf
scas
dec
adc
xor
negb
sbb
lds
flds
fisttpll
inc
cmpsl
jl
push
scas
dec
mov
mov
insl
jne
pop
jbe
enter
lret
add
mov
cwtl
test
into
cli
ds
push
ja
and
push
test
lret
and
inc
aas
xchg
add
pop
cmp
xlat
sub
pop
daa
ds
cmpsl
dec
dec
pop
mov
jno
ret
pop
fldl
pop
sbb
das
pop
fwait
arpl
into
test
cld
clc
or
add
js
push
out
je
xor
adc
cmp
mov
adc
arpl
notb
or
add
lock
insl
xchg
xchg
sub
cmp
sub
mov
popl
stos
inc
stc
mov
enter
shlb
aad
mov
xor
gs
inc
fidivrs
mov
cmp
mov
repz
push
mov
shlb
pop
movl
dec
pop
dec
outsl
xchg
dec
pop
in
pop
fwait
fdivrs
sub
jnp
mov
push
mov
push
push
sbb
je
pop
xor
sub
pop
lds
shrb
pop
ret
insb
sub
rcrl
into
cwtl
push
pop
dec
pop
add
pop
cwtl
pop
inc
dec
xlat
mov
push
pop
rol
mov
push
mov
xchg
fldl
fcmovnb
pop
cmp
cld
mov
adc
clc
xchg
sub
aaa
lret
orl
push
sbb
aad
test
jge
or
int
lahf
movsb
xchg
sbb
mov
pop
cmp
std
cmp
movsb
repnz
outsb
clc
lods
mov
mov
icebp
addr16
mov
mov
rorb
addl
lods
mov
les
loop
pop
fcmovbe
or
scas
cmp
and
xchg
repnz
pusha
arpl
and
adc
scas
inc
inc
loope
xchg
sub
add
xor
loopne
xor
dec
and
adc
adc
ja
push
sti
mov
cli
jp
dec
aam
lock
popa
inc
in
xchg
les
adc
and
call
es
mov
add
ficomps
and
lds
mov
and
aad
pop
sar
jae
sbb
aas
int3
fs
into
out
cmpl
inc
sbb
movsl
lahf
cs
add
sub
and
mov
data16
pop
bound
mov
cmp
add
cmp
inc
fcoms
stos
jnp
xlat
mov
push
cmp
mov
adc
imul
or
add
inc
push
push
jb
addr16
imul
push
inc
and
je
inc
lods
add
lret
push
fcoml
testb
inc
sbb
fsubs
or
sbb
popf
pop
sub
fs
push
loopne
and
mov
cmp
xchg
cmp
fs
mov
stos
ficoml
add
xor
stc
xchg
dec
xchg
mov
sbb
clc
and
xchg
inc
sub
in
lods
pop
repz
cli
notl
outsb
mov
stc
loope
fnstenv
add
add
sbb
mov
add
es
push
mov
mov
push
mov
lcall
inc
pop
fwait
pop
js
cmp
mov
push
cmp
push
hlt
test
lret
jmp
mov
jb
popf
add
pop
xchg
and
mov
fbstp
mov
lods
cmpb
sub
shl
mov
push
pop
mov
push
test
movsb
stos
rcr
popa
cmp
ret
in
adc
or
inc
add
adc
mov
mov
int
dec
fsubl
dec
icebp
push
jmp
les
xchg
sbbl
mov
push
icebp
iret
mov
mov
pop
dec
cmp
pop
xor
add
xor
imul
fidivrs
and
lea
cmp
sub
fists
inc
sub
mov
fsubp
inc
lret
lea
mov
pop
enter
dec
out
dec
fstpl
mov
test
fwait
xchg
pop
mov
mov
loope
imul
scas
push
fidivl
mov
mov
mov
ret
test
lret
cld
mov
enter
sub
and
dec
push
push
sbb
mov
or
inc
scas
clc
cmpsl
lock
call
jbe
stos
mov
lcall
movsl
loope
cwtl
test
sbb
mov
shl
jmp
fcmovnb
add
xchg
pop
test
stc
xchg
in
dec
sti
xchg
sub
mov
notl
sub
cmp
sub
mov
or
push
fistpll
rorb
or
mov
pop
lock
fcoms
xchg
push
sub
inc
mov
push
arpl
ret
add
mov
jbe
cmpsb
jae,pn
jle
pusha
movsl
cld
push
into
aam
fcomps
out
mov
in
push
mov
inc
lods
push
rcrb
lea
movsb
addr16
aas
lahf
sbb
xchg
aas
push
xor
xchg
push
arpl
and
xchg
jb
popa
sbb
and
push
sbb
test
nop
nop
mov
in
jo
movsb
sub
sbb
mov
mov
into
xor
aas
mov
mov
push
and
or
push
mov
mov
in
fcomip
cwtl
insl
add
mov
adc
es
loop
repnz
ret
cltd
inc
jecxz
popa
dec
aaa
and
mov
xchg
frstor
push
fxch
test
test
jno
pop
mov
adc
push
je
lds
insl
pop
test
push
insl
dec
repnz
in
ds
adc
rcr
cmp
add
mov
pop
mov
mov
adcb
lea
cmpsl
scas
sbb
stos
xchg
xor
sbb
push
shlb
push
fsts
push
and
cmp
lret
mov
pop
ss
in
cmp
sub
push
add
add
subb
ljmp
jb
sub
push
out
ds
adc
sbb
jbe
pop
inc
dec
add
stos
in
sti
clc
xchg
xor
dec
cld
mov
fidivrs
lcall
stc
mov
dec
fwait
fs
insl
jne
call
popa
clc
faddl
ret
jg
lods
jo
sub
mov
lahf
inc
add
lock
loope
and
jecxz
fdivrs
cmp
and
mov
fbld
and
push
or
lret
sti
jecxz
push
stc
add
scas
xor
out
in
shlb
dec
test
sbbl
addr16
cmpsl
popa
rcl
mov
or
jmp
and
push
jb
inc
faddp
and
mov
cltd
pusha
movsl
pop
inc
imull
pop
sub
nop
push
add
leave
test
jge
fld
inc
arpl
push
fidivrs
push
mov
lret
push
xlat
in
pusha
xchg
ljmp
sti
mov
loope
fadds
pop
sbb
xchg
out
arpl
or
rcll
in
mov
cwtl
stos
pop
std
movsl
mov
pop
pop
and
sbb
int3
loopne
inc
nop
aas
mov
push
scas
ljmp
mov
sbb
ret
adc
xor
mov
fstpl
jg
or
lods
cltd
xor
mov
mov
mov
shrb
in
add
sub
iret
orl
out
push
repnz
cltd
pop
jl
jge
mov
loope
cmp
cs
mov
std
popf
insl
popf
or
int
leave
sub
add
test
push
call
cmpsb
lods
ljmp
imul
lods
xchg
xchg
and
mov
mov
stos
xor
mov
mov
ret
or
decl
sub
pushf
rcl
loopne
pop
lcall
dec
repz
loop
push
push
jnp
and
mov
lret
sti
insb
jle
loope
adc
or
dec
jecxz
xor
xchg
pop
cmp
in
mov
movsb
push
lods
dec
and
jmp
sti
xchg
lahf
push
cmp
sbb
push
cltd
rcl
inc
pop
dec
add
jp
test
arpl
add
out
arpl
movsl
int3
lahf
daa
ds
push
stos
add
cmp
push
jecxz
out
inc
loope
inc
hlt
insl
inc
mov
pop
shl
int3
test
fsubrs
jno
push
pop
aam
orl
or
dec
xchg
call
mov
pop
xor
stc
out
ficoms
jge
rcrb
stos
add
fildl
subl
or
xor
cmpsb
inc
push
or
xchg
je
cmp
mov
ljmp
jo
in
pusha
or
inc
or
into
fsubr
int
cwtl
cmp
cmp
sub
lret
adc
popa
scas
add
dec
push
or
or
mov
out
lcall
push
outsb
inc
and
xchg
out
outsb
or
ficoms
cmc
mov
subb
sahf
jno
dec
mov
ss
sub
ss
cs
lods
xchg
mov
mov
dec
scas
lret
lcall
dec
and
mov
mov
xchg
dec
fnstcw
dec
fs
es
test
mov
in
mov
and
push
ret
rolb
sbb
push
or
leave
push
dec
jbe
mov
imull
hlt
or
data16
test
sbb
shll
sub
bound
sub
lds
shlb
push
and
push
out
es
mov
pop
inc
sbb
mov
adc
sub
jne
movsw
lock
dec
loopne
sbb
mov
mov
les
movsb
inc
loopne
xchg
or
mov
cmp
fildl
les
mov
fnstcw
daa
jg
arpl
push
inc
and
stc
push
iret
orb
dec
pop
and
lret
in
outsb
adc
flds
jg
and
sub
test
fistpl
jl
sub
ja
cmp
mov
pop
pop
lods
xchg
aam
sub
mov
scas
add
and
into
pop
jns
stc
mov
lcall
xchg
popf
fmulp
cmpsl
jae
jae
cs
push
sbb
push
xrelease
mov
addr16
push
xor
sub
mov
push
inc
pop
sub
cmpl
adc
pop
add
iret
jae
xchg
stos
jmp
mov
xchg
and
adc
mov
aas
aad
pop
out
inc
sbb
or
stos
call
lret
push
mov
add
jae
js
jno
test
sbbl
hlt
in
shl
xchg
jg,pt
jl
lock
and
loop
mov
add
cltd
test
movsl
adc
mov
jns
pop
xchg
pop
repnz
dec
iret
mov
mov
pop
adc
mov
mov
mov
int3
fwait
pop
dec
dec
out
push
push
push
aas
xorl
mov
lret
repnz
cmp
mov
out
cmp
aaa
or
lcall
adc
and
sbb
adc
aaa
push
inc
movsl
call
mov
iret
insl
add
hlt
mov
mov
sub
aas
mov
mov
push
add
bound
push
fnsave
or
fwait
lods
icebp
je
popf
jno
jo
push
scas
push
or
mov
push
outsb
sbb
add
cmp
mov
cmp
jmp
in
xchg
xor
pop
cli
nop
les
cld
push
push
mov
cmp
in
movsb
cmp
mov
or
mov
push
ja
daa
jno
rcr
add
adc
aas
push
mov
in
or
adc
mov
xchg
dec
adc
dec
sbb
movsl
push
mov
lods
outsl
adcl
inc
sub
jmp
std
dec
inc
pop
ja
pop
jo
and
cltd
andb
mov
clc
sahf
lods
add
adc
cwtl
pop
out
test
xchg
push
stos
dec
jle
hlt
imul
jge
fsts
dec
std
cltd
jecxz
sti
ljmp
push
xchg
aam
test
jecxz
jmp
jns
enter
pop
mov
inc
ljmp
xor
rcrb
mov
dec
cmp
push
ds
xchg
in
es
mov
repnz
stc
dec
add
mov
dec
mov
push
push
test
cld
xchg
data16
mov
push
or
push
int
push
xchg
cmp
mulb
inc
in
mov
jl
xchg
bound
dec
sbb
inc
or
loop
xor
cld
jge
ss
push
sti
pop
data16
mov
int3
push
push
imulb
out
mov
add
inc
mov
inc
loop
xchg
stos
add
cs
test
stc
pusha
ret
addr16
inc
adc
mov
andl
insb
cmp
lea
jne
insl
sub
sub
popa
mov
sub
lock
or
inc
fcmovu
inc
and
cmp
enter
xchg
into
and
std
aaa
out
cld
push
cmpordps
sub
negb
sbb
jmp
pop
sbb
sbb
sub
in
pop
pop
push
mov
or
adc
sub
or
and
orl
lret
out
mov
std
xchg
or
imul
adc
add
orb
sub
mov
loop
pop
in
cmp
scas
xchg
mov
stc
jae
pcmpgtw
ljmp
pusha
mov
cltd
icebp
shlb
imull
push
addb
mov
sub
push
ffree
lods
out
xchg
cmc
andb
mov
mov
jl
mov
jle
scas
pop
test
stc
cmpl
ret
loopne
dec
data16
push
jb
and
cmp
pop
push
jne
add
addr16
mov
pushf
jb
mov
iret
mov
jecxz
xor
push
sti
call
sub
fsubrs
jb
push
jb
dec
push
gs
mov
icebp
and
pop
fmul
add
inc
sub
xchg
mov
mov
jge
xchg
scas
jno
pop
outsl
cltd
and
xor
mov
addb
xchg
cmp
fiaddl
lock
mov
insb
sub
frstor
jmp
loop
in
js
mov
sbb
ficoml
js
inc
fdivrl
add
enter
in
out
out
cli
leave
xchg
dec
cmp
push
inc
mov
fiadds
xchg
sub
jb
test
aad
movl
insb
rorl
xor
cmpsb
pop
hlt
mov
xchg
adc
and
cmpsb
mov
insl
imul
clc
aam
mov
mov
pop
pop
add
mov
mov
jb
and
outsl
push
stc
fstpl
and
lea
ja
xor
adc
test
xor
xor
push
daa
push
cmp
and
movsl
out
xchg
push
out
lcall
or
gs
jo
xchg
cmp
repnz
mov
jnp
xor
adc
insb
daa
pop
lock
jne
jge
jne
adc
push
rcrb
cmp
cmp
push
jmp
out
mov
and
stc
or
mov
js
pop
das
mov
popa
jge
inc
scas
scas
pop
adc
mov
and
aaa
arpl
repnz
test
mov
out
lds
aam
fildll
cmc
mov
adc
mov
mov
dec
inc
pop
orl
lods
sbb
fistps
cld
inc
lock
out
or
ds
in
mov
mov
hlt
and
dec
ds
sbb
ljmp
movzwl
mov
add
and
sar
or
mov
pmaddwd
mov
dec
sub
push
idivl
dec
sub
fdivs
cs
aas
dec
or
popf
mov
pop
jmp
in
out
mov
mov
mov
lods
jle
jmp
adc
cmp
and
inc
push
push
js
push
inc
mov
inc
mov
std
push
seta
cli
popf
stc
ss
loopne
mov
add
mov
jmp
fsubl
sub
push
xchg
fs
push
popa
mov
dec
aad
aad
lock
dec
mov
pusha
dec
mov
aad
adc
loope
cwtl
push
adc
cmpsb
lret
clc
inc
in
and
push
loopne
push
sub
rorl
out
sahf
sub
cmp
shll
or
aad
pop
mov
mov
loopne
push
ds
sti
xchg
sub
cltd
dec
dec
cwtl
xchg
sbb
cmp
lods
inc
ss
dec
repnz
push
mov
dec
mov
jmp
rcr
iret
or
push
shlb
jge
icebp
sbb
mov
mov
or
shl
push
add
stc
jp
fisttps
pop
in
inc
mov
jecxz,pn
fdiv
clc
adc
cmp
xchg
cmp
out
test
fsts
fsubl
mov
bnd
and
and
cli
roll
sbb
test
fistl
dec
xchg
inc
sbb
test
mov
rcr
insl
cmpsl
dec
or
cmp
lcall
das
insl
test
xchg
insl
hlt
sub
lods
add
mov
jl
xchg
cmp
inc
pop
aad
jg
xchg
dec
add
imul
mov
mov
jmp
sahf
sub
jecxz
aad
push
ret
stos
lcall
mov
add
in
lcall
push
push
js
xchg
mov
shrb
xchg
mov
imul
sbb
sub
lods
pop
repnz
mov
mov
arpl
repnz
or
lcall
push
push
rol
mov
pop
lcall
shll
fs
movsb
mov
push
ljmp
mov
xor
lea
fdivrs
cmp
and
pop
xor
push
mov
sbb
imul
insl
mov
repnz
repnz
mov
or
cmp
adc
or
ds
clc
jmp
mov
fwait
push
cmpb
aaa
stc
nop
imul
inc
fdivrl
aad
inc
cltd
arpl
xchg
xchg
movsb
pop
mov
stc
nop
fnstsw
pop
mov
mov
sub
out
sub
aam
sub
fs
lcall
je
adc
push
fildll
lds
sbb
jnp,pt
jecxz
pop
pop
jo
sbb
fsubrl
inc
mov
inc
shl
mov
or
stos
mov
mov
out
or
std
in
test
outsl
gs
xchg
push
jmp
xor
push
gs
jno
in
xchg
mov
mov
inc
fldt
shrb
cmp
data16
inc
add
je
mov
bound
jbe
adc
sbb
std
xchg
cmpsl
repnz
mov
adc
mov
inc
and
push
or
jle
imul
mov
aaa
out
xchg
sub
loope
and
pop
add
xorb
in
mov
xor
fstpl
sbb
loop
cli
xchg
out
scas
sbb
and
lods
add
les
arpl
imul
int3
push
push
push
sbb
movsl
fnsave
rcrl
dec
jg
xor
inc
xchg
push
jo
mov
push
cltd
hlt
xchg
xchg
fisubrl
xor
fldcw
mov
dec
dec
and
mov
sub
lret
fistpll
mov
pop
movsl
subl
and
les
xor
repnz
xor
ljmp
subb
mov
or
mov
lods
repz
add
adcb
jne
mov
cmp
daa
ljmp
test
cmp
sbb
lea
aam
push
les
mov
push
test
lods
loopne
arpl
rcrb
jae
dec
insb
repz
out
mov
and
and
shl
lahf
xchg
ss
mov
mov
pop
ret
mov
sub
in
sub
pop
lds
pushf
inc
testb
cmp
hlt
mov
mov
pusha
mull
fidivrl
iret
jle
push
xchg
xchg
divl
push
je
lret
add
fcmove
fcmovb
or
mov
or
jecxz
cmp
aaa
inc
dec
or
pop
aaa
pushw
test
and
fcoms
push
lret
retw
stos
stos
iret
orb
ret
nop
gs
rorl
cli
dec
ds
cld
out
test
bound
sbb
sbb
jecxz
add
xlat
inc
mov
xor
shlb
fisubrs
inc
out
mov
iret
gs
mov
sbb
iret
sbb
pop
outsb
test
out
je
xchg
jb
pop
fdivrl
stos
inc
jno
push
ljmp
cltd
or
cmpsl
cltd
add
mov
jae
shrl
lret
arpl
stc
adc
dec
xlat
imul
outsb
and
or
lea
sahf
lods
fisubrl
ljmp
xchg
cmp
ret
gs
inc
inc
fnstenv
rclb
fdivl
mov
int3
jp
aaa
push
mov
cmp
mov
and
mov
jmp
xlat
shl
pushf
inc
call
adc
dec
aaa
shlb
mov
addr16
lret
pop
and
sbb
cli
popa
clc
sub
jg
fwait
hlt
or
cmp
imul
adc
out
cld
test
jo
aad
std
inc
mov
out
cmp
and
wrmsr
std
mov
mov
cmp
pop
inc
push
pop
pop
jno
shlb
xchg
ja
enter
outsb
mov
mov
popa
ficoms
sbb
movsl
nop
jl
sbbl
pop
js
repnz
std
sub
adc
pop
aad
sbb
jle
push
jg
adc
mov
rclb
scas
xchg
filds
testl
add
xchg
lods
test
adc
xchg
mov
xchg
mov
int3
daa
jns
imul
insb
xorb
std
test
cld
jmp
xor
inc
pop
cmpsb
icebp
xchg
xlat
mov
pop
add
sbb
pusha
leave
stos
push
mov
fsubrl
xor
xchg
icebp
adc
pop
call
int3
mov
pop
mov
out
pop
scas
ljmp
call
cmp
mov
mov
or
add
aad
dec
jecxz
cmp
pop
dec
jg
xchg
cmp
pop
mov
pop
dec
xor
and
mov
xor
dec
push
mov
js
stos
mov
aad
clc
adc
lret
adc
or
cmp
sbb
in
push
jno
aam
inc
sbb
rorl
int3
cs
es
xchg
jo
gs
jp
sbb
subb
sub
mov
push
nop
imulb
xor
mov
pop
adc
pop
or
dec
mov
sub
mov
xor
fcoms
or
cmc
cld
fisttpll
xlat
movsb
mov
adc
ljmp
mov
push
push
cmp
and
jmp
cmp
xchg
or
xor
cmp
fwait
inc
dec
rorl
jmp
into
jecxz
sbb
adc
lock
and
pushf
jge
into
in
std
repnz
std
adc
sbb
pop
xor
pop
in
sub
dec
push
jo
lahf
dec
inc
inc
test
dec
fisubs
cmpsb
in
iret
dec
dec
bound
xorl
push
loope
xchg
movsl
imul
jecxz
push
outsb
mov
cmp
insl
sbb
mov
sti
sti
es
lret
add
scas
clc
dec
data16
jl
pop
sub
incb
sbb
inc
pop
adcl
lretw
out
call
in
stos
xchg
push
roll
call
push
sbb
in
out
inc
mov
xorb
jge
adc
pop
jne
lea
scas
mov
or
arpl
pushf
jne
xchg
adc
and
das
add
dec
sub
shrl
and
mov
cmpb
insb
sbb
cmp
cmp
xchg
es
xchg
mov
cmp
shlb
int
out
pusha
inc
stos
clc
std
push
push
aas
fsubrl
xchg
test
and
jnp
sub
scas
mov
or
and
fcoml
pop
mov
sub
push
pusha
fldl2t
test
inc
jno
xchg
add
pop
leave
cmc
xchg
fdiv
jbe
adc
cmpsb
or
and
push
movsl
loopne
cmp
jge
sub
loope
inc
pop
cld
pop
imul
push
push
mov
push
dec
pop
clc
rorl
cmpsb
js
into
into
pop
sar
and
mov
jecxz
mov
int
hlt
addr16
push
out
add
lods
stc
fisubrs
ret
aad
iret
pop
or
sub
mov
stos
cmc
cltd
push
sbb
movsb
xor
in
arpl
xor
push
movsb
lds
push
mov
mov
add
rorb
ficoml
aad
jb
pushf
push
mov
mov
lock
push
movsl
adcb
das
cmpsb
mov
mov
pop
lea
mov
jecxz
xor
or
movsb
fmull
xlat
mov
lea
arpl
pop
ret
aaa
cmc
andl
push
mov
sbb
addr16
clc
cmp
mov
push
imul
cmc
pop
js
add
mov
aaa
cwtl
outsb
incl
push
mov
mov
stc
or
push
jo
sbb
nop
insl
or
inc
gs
nop
mov
xor
fstpt
dec
xor
jae
push
fcmovnb
or
cmpsl
mov
pop
pop
repnz
mov
lods
or
pusha
cmp
xlat
out
or
scas
cmc
mov
outsl
testl
xor
or
fdiv
mov
adc
dec
int
out
outsl
mov
push
aaa
pusha
push
or
adc
es
xor
sbb
sbb
aaa
jge
mov
scas
in
mov
cmp
xlat
shlb
aam
rcrl
xor
cmp
cmp
adc
pop
xchg
xchg
in
inc
jnp
leave
inc
xchg
and
out
lret
xor
les
fwait
sbb
bound
mov
aaa
icebp
sbb
rcrb
and
mov
cmp
adc
mov
cmp
aas
sbb
imul
xor
fs
sub
dec
test
dec
testb
cmp
mov
or
inc
xlat
and
dec
pop
cmc
stc
cwtl
sbb
jno
popf
push
jo
fnstsw
mov
fsubp
cs
pop
xchg
pop
mov
lea
lds
mov
adc
loope
push
out
push
popf
cmp
mov
shlb
mov
push
push
ret
cmpsl
out
test
add
push
mov
push
cld
inc
push
and
mov
das
pop
sub
mov
movb
inc
aam
fidivl
daa
addr16
xor
loope
mov
test
and
add
je
cmp
push
out
movsl
cmp
out
arpl
repz
je
std
adc
cmpb
sti
lea
cli
pop
cltd
xor
test
orb
test
push
bound
mov
cmpl
lea
add
jecxz
inc
imul
andl
or
add
add
mov
les
scas
ljmp
pop
jl
pop
push
mov
out
int
fidivrs
jne
jns
mov
decb
mov
mov
cltd
out
fnsave
arpl
lods
shlb
cmp
test
mov
inc
aad
inc
cli
shll
xchg
sub
int
mov
in
cli
insb
js
fnstsw
jns
sbb
stos
add
xchg
stos
xchg
stos
stos
bound
int3
sbb
and
mov
or
mov
iret
push
xlat
xchg
cmpsb
xor
in
mov
lock
movsb
add
and
and
cmpsb
aas
and
jo
insb
loopne
xchg
dec
push
push
out
inc
out
outsb
push
adc
popa
xchg
mov
lods
and
test
inc
add
dec
adc
or
cmc
mov
pusha
sti
add
pop
mov
das
dec
push
sahf
shrl
lret
add
mov
add
es
pushf
fwait
pop
hlt
cmp
test
repz
test
add
cmc
xor
and
add
fwait
cmpsl
xor
and
xor
stos
mov
push
push
or
mov
pop
aad
add
push
fwait
push
jecxz
xchg
sub
mov
add
fwait
mov
or
pop
inc
xchg
inc
fidivs
sbb
ds
cmpsl
test
push
sbb
xor
pop
rcr
mov
andb
dec
adc
sbb
leave
push
test
outsl
shll
lret
lret
ret
cwtl
lcall
push
iret
xor
insl
and
push
jo
iret
into
mov
shlb
daa
push
pop
adc
or
test
lods
mov
push
ljmp
insb
jnp
outsb
mov
mov
shrl
mov
loopne
stos
push
sbb
push
nop
or
cmp
leave
adc
jo
mov
jecxz
in
add
pop
clc
icebp
in
mov
psubusb
into
movsl
clc
xchg
push
sbb
and
push
outsb
mov
fst
push
int
push
hlt
scas
mov
shll
pop
adc
outsb
xchg
sub
je
les
stos
lret
shlb
push
out
andb
or
pop
pop
sti
mov
push
adc
push
fsts
icebp
sbb
dec
sub
push
sbb
jne
cli
push
mov
jle
adc
std
ds
icebp
pop
add
mov
loope
mov
adc
das
sbb
pop
outsl
test
or
shl
adc
pop
mov
mov
stos
dec
arpl
cwtl
pop
or
out
add
xor
je
je
xor
xor
cmp
mov
enter
mov
fidivs
sub
jecxz
lods
stc
xchg
mov
incb
lcall
and
mov
xlat
sub
punpcklbw
xlat
inc
repnz
sub
mov
jmp
lods
sbb
or
aaa
push
lods
pop
imul
sub
mov
pop
sub
sub
stos
mov
dec
inc
in
dec
mov
push
sbb
jne
dec
dec
mov
sbb
out
push
push
js
push
xchg
dec
jl
push
mov
cli
xchg
cmp
ja
mov
call
mov
lret
and
rolb
mov
push
or
scas
xchg
inc
insb
cltd
std
enter
cltd
insb
mov
cmp
lods
and
push
out
daa
rcll
inc
outsb
movsl
jae
mov
dec
je
dec
mov
jno
xchg
scas
xchg
mov
cmpsb
mov
xor
fadds
sub
mov
cmp
sahf
lea
fs
xor
lret
push
popf
fs
and
lods
outsl
clc
bound
sbb
adc
in
xchg
and
int3
loopne
test
cmp
cmpsl
rcrl
loope
mov
push
mov
lods
movl
fidivl
test
push
cmp
push
call
movsl
cwtl
push
outsl
iret
inc
pop
out
into
cmp
and
popf
popa
jnp
push
mov
adc
inc
pop
push
xor
mov
push
push
pop
push
mov
imul
mov
enter
out
mov
ret
pop
lret
cmp
loopne
bound
pop
adc
mov
mov
aam
in
mov
outsl
in
std
or
cmp
pusha
xchg
xchg
mov
movsl
mov
mov
push
call
int
pop
fs
add
bound
inc
cmpsl
push
int3
and
outsl
push
repnz
sbb
aaa
push
lods
add
cmp
das
push
jne
in
outsl
xor
mov
mov
testb
repnz
mov
scas
cmp
dec
or
jbe
ljmp
shrb
sbb
inc
jge
je
data16
lods
and
arpl
fs
sbb
imul
cmpsl
xchg
aaa
repnz
loop
pop
dec
pop
pop
hlt
dec
jnp
aas
test
popa
mov
sbb
mov
pop
into
pushf
jp
or
jns
mov
add
xor
mov
xchg
sbb
lret
das
dec
push
lcall
or
fwait
sbb
rcll
imul
inc
jno
xchg
push
inc
rorb
mov
inc
mov
mov
shrb
dec
or
imul
adc
out
and
jb
sahf
push
repnz
sbb
std
jo
std
xchg
cs
jne
aaa
iret
or
xchg
or
and
sbb
lahf
jg
cmp
sub
aaa
pop
cmp
test
int
aaa
std
or
cmc
push
inc
adc
fdivs
or
mov
shll
push
xchg
push
add
dec
cwtl
ret
cli
pusha
outsl
repz
sbb
cmp
aad
rol
adc
jge
andb
lcall
cwtl
jmp
add
lret
pushf
sub
fmull
scas
arpl
pop
xchg
and
js
or
mov
mov
adc
fimull
in
das
xchg
pop
xor
adc
test
stos
adc
xchg
xchg
lret
mov
adc
leave
aad
xor
sub
mov
into
cmp
mov
sub
xor
ljmp
inc
pop
or
add
fcomi
jg
sub
adc
fidivl
rol
xchg
je
mov
stc
shrl
xor
mov
imul
loopne
and
push
mov
push
js
cwtl
add
lock
in
aaa
xchg
mov
mov
lahf
into
sahf
or
jle
cmp
push
or
scas
rcll
xor
xchg
and
inc
in
imul
mov
adc
stos
out
adc
xorb
aaa
mov
cwtl
out
and
sub
sub
lods
inc
adc
stos
gs
fldenv
fdivl
stos
push
lods
pop
sub
sub
out
repz
in
insl
clc
int
cs
dec
hlt
cltd
pop
push
sub
ljmp
or
jnp
stos
sub
fsubl
mov
cmpsl
sbb
dec
out
fwait
mov
xchg
jecxz
mov
mov
pop
enter
mov
jl
pop
mov
lock
mov
cwtl
out
outsl
sar
jno
xrelease
shll
fdivs
dec
gs
icebp
call
test
mov
inc
lahf
inc
testl
sbb
jb
sub
stc
adc
fistps
push
sub
dec
xchg
mov
out
arpl
mov
pop
mov
scas
mov
inc
out
sti
dec
xchg
popa
sub
add
daa
mov
imul
dec
add
inc
pop
xchg
aas
mov
fsubl
enter
fldt
mov
popf
icebp
jle
and
into
stos
lods
push
incl
and
sbb
call
cmp
and
aaa
andb
aad
cwtl
data16
dec
jmp
loopne
sub
adc
adc
out
cld
testb
pop
pusha
repz
sbb
test
push
stc
dec
fs
xor
jmp
cltd
xor
int3
repnz
mov
xchg
sti
cmpsl
jmp
and
mov
movsl
repz
and
pop
cwtl
lcall
test
repz
jg
jecxz
in
mov
ja
lds
outsl
inc
ds
rolb
mov
hlt
pushf
sub
dec
pop
mov
sbb
cmp
and
sub
add
xor
or
aam
lds
out
mov
xchg
jl
lret
decl
call
in
jo
mov
xor
icebp
push
add
cld
pop
mov
decb
rol
jno
hlt
aad
jb
fwait
leave
cmp
clc
rcrl
in
lcall
dec
dec
xor
imul
jns
push
subl
imul
pushl
dec
mov
cmp
mov
fwait
and
xlat
inc
inc
pop
cmp
xchg
push
out
dec
shrb
jl
push
cmp
push
push
jge
outsl
cmp
lock
cmc
jle
sub
or
orb
popa
cwtl
scas
in
ret
sbb
sbb
inc
xor
insl
inc
cs
jmp
incb
push
call
push
inc
fwait
xor
xlat
mov
push
lods
xchg
in
jae
sbb
outsl
leave
cmpl
jb
jecxz
loope
xchg
icebp
insl
test
mov
into
lret
mov
ret
pop
adc
mov
pop
mov
and
and
add
je
outsb
mov
fwait
pusha
and
jne
pcmpgtw
ja
imul
repnz
cmc
cs
lods
and
sub
or
inc
mov
xlat
iret
mov
xchg
test
jmp
xchg
mov
loopne
roll
stos
jae
xchg
cmp
jbe
mov
jns
cmc
sahf
insb
test
into
inc
add
shll
pop
ljmp
inc
pusha
cltd
fcomip
pop
adc
sti
loop
xchg
cmc
int
push
push
scas
jno
idivb
inc
fwait
in
imul
jnp
outsb
inc
cmpsl
fwait
adc
lret
add
inc
in
sub
or
pop
sahf
jne
xor
cld
outsl
xchg
mov
decb
or
outsl
pushf
mov
push
call
push
out
bound
fstl
mov
fists
imul
jge
xor
cmp
sub
movsb
mov
cmc
mov
pop
adc
jne
movsb
das
andl
das
dec
xlat
icebp
insb
int
push
xchg
cmpsb
inc
jecxz
jp
dec
and
es
push
out
mov
inc
or
dec
xchg
jns
add
cmp
inc
scas
es
or
scas
repnz
xchg
std
sbb
sbb
xorb
iret
fwait
inc
pop
xchg
push
lods
push
mov
ja
mov
repz
lock
push
push
jno
and
mov
fisubrs
jno
xchg
popa
jecxz
adcl
sbb
pop
sbb
sarl
dec
xchg
ljmp
pop
test
js
inc
outsb
iret
mov
repz
aam
and
and
dec
fimull
adc
psllw
and
push
loop
push
lds
pop
lock
fdivs
fdivl
mov
jae
add
xchg
mov
mov
lock
into
sar
pop
pop
push
popf
push
inc
mov
iret
cwtl
in
lea
or
jge
js
or
and
mov
inc
or
nop
pop
shll
mov
sbb
into
adc
pusha
adc
adc
push
mov
sbb
or
dec
jmp
sbb
popa
scas
es
inc
adc
jmp
jno
int3
sbb
or
scas
xchg
imul
pusha
arpl
sbb
ljmp
adc
int
repz
dec
movsb
push
mov
xlat
scas
test
loope
neg
push
mov
adc
ds
push
xor
xor
dec
xchg
sub
adc
cmc
jne
push
sub
push
insb
cli
push
sbb
clc
xchg
stos
lret
decb
outsl
mov
xchg
test
rcrb
rcl
or
jae
jge
jp
sbb
les
cmpb
inc
dec
loope
mov
mov
stc
jp
sbb
xchg
cmp
lds
arpl
fnstenv
into
lret
push
sbb
inc
fildll
add
mov
sbb
jecxz
add
mov
or
sub
xchg
pop
ja
movsl
mov
or
add
pop
test
mov
sti
mov
aad
mov
pop
imul
mov
movsb
repnz
in
push
sbb
sti
ljmp
outsb
dec
xlat
push
push
mov
testb
adc
popf
inc
cmp
sbb
fsubrp
cmc
fistl
sarb
sub
insb
scas
xchg
sar
icebp
sbb
and
add
js
and
jno
mov
mov
negl
data16
xor
lds
jb
stc
movsl
sbb
daa
add
stos
cli
mov
leave
loope
fwait
call
or
dec
dec
xchg
gs
sub
sbb
dec
ret
pop
mov
cmpb
xchg
inc
sti
sbb
xchg
cmp
add
push
sub
sbb
dec
cmpsb
mov
jb
adc
rcrb
adc
mov
jb
fsts
jecxz
xchg
inc
gs
cmp
fiadds
loopne
call
inc
xor
dec
mov
fs
aaa
and
adcl
es
cld
inc
sbb
dec
mov
mov
sbb
hlt
into
push
insl
xchg
daa
outsl
lahf
or
pop
sub
jmp
fdivr
mov
in
sbbb
sub
mov
xchg
imul
xor
lcall
bound
cmp
arpl
ja
cmc
mov
movsl
cmp
and
mov
rolb
add
shll
xlat
push
mov
dec
cmp
jbe
cltd
jae
xchg
dec
test
dec
dec
push
je
jmp
xlat
lahf
sbb
in
js
jns
adc
adc
mov
xchg
mov
mov
int3
push
cmp
popa
fmull
sbb
mov
enter
mov
jmp
cmp
mov
adc
out
test
xor
aad
mov
xchg
outsb
out
mov
xchg
sub
push
lcall
and
or
adc
clc
fcomps
outsb
add
inc
pushf
mov
jbe
mov
jno
sub
or
stc
xchg
jbe
iret
fdiv
sub
mov
jne
lea
cli
in
in
sbb
xor
push
test
push
inc
push
mov
outsl
mov
and
mov
pop
lds
mov
mov
dec
or
dec
or
mov
adc
jno
jge
aaa
into
scas
loopne
outsl
popf
sbb
push
aad
jecxz
cmp
push
lahf
xchg
jle
lcall
insb
stos
inc
xchg
dec
dec
call
fsubrs
jecxz
cmp
stos
xor
lea
mov
pushf
cmp
and
shll
push
pushf
jb
jae
add
cmp
pop
hlt
aad
and
in
jle
add
int
iret
ret
addl
add
out
insb
push
jne
sub
adc
sub
pop
add
or
dec
lret
pop
xchg
sbb
cmp
pop
movsl
into
mov
jne
adc
hlt
jae
dec
lods
mov
cmp
sbb
and
dec
inc
divl
scas
jb
rolb
mov
div
notb
imul
pop
arpl
sbb
cmpsl
out
mov
adc
iret
jbe
shll
lds
rorb
push
je
add
repnz
das
mov
mov
or
mov
adc
add
nop
fwait
repnz
std
cmp
jle
xlat
push
push
cmp
push
pushfw
mov
push
mov
adc
in
push
aam
mov
pop
shlb
dec
scas
call
fstps
std
xchg
outsb
fdivr
and
jmp
dec
sub
xchg
xchg
movsl
jp
add
ret
jbe
inc
jmp
or
repnz
xor
push
sarb
inc
mov
mov
ret
xor
cmp
jae
popa
xor
fcmovnb
shr
cmc
cld
cmp
testb
and
sbb
mov
pop
je
add
xchg
mov
cmpsb
mov
shl
frstor
loop
decb
adc
fisubl
push
aad
aad
mov
push
or
rclb
adc
das
pop
mov
and
pop
adc
push
jne
rcr
test
inc
or
dec
daa
pop
scas
push
pop
js
push
or
clc
push
out
xchg
push
and
ja
into
pop
inc
lea
imul
repz
ret
cli
and
push
mov
push
icebp
punpckldq
mov
add
jae
inc
and
cld
scas
ret
pop
loopne
stc
cmpsl
hlt
lds
fldcw
andl
lods
aas
xor
add
pop
sbb
push
aas
inc
add
and
je
imul
mov
sbb
jecxz
lods
cmpsl
cmp
or
repnz
nop
push
inc
fcom
push
cmp
cmpsb
std
rclb
add
ja
push
jo
sbb
cmp
sub
fnstenv
mov
inc
cmp
cmp
and
ss
mov
sub
fsub
pop
jmp
mov
out
jae
jnp
fldcw
shr
pusha
cli
cmpsl
jp
lret
repz
out
inc
inc
sbb
pop
nop
aas
subb
lcall
out
ss
mov
inc
jle
jbe
jbe
rcrl
or
mov
negl
clc
cmp
or
mov
or
sbb
imul
loop
pushf
mov
jb
in
jmp
cmpsb
sbb
stos
xchg
pop
cmp
push
jecxz
movsl
push
orl
xchg
xchg
sahf
popa
add
add
repnz
cld
inc
jg
mov
push
cwtl
je
sbb
push
popl
fstl
jl
add
add
clc
mov
aas
stc
ss
loopne
iret
push
movsl
mov
sub
sub
hlt
xchg
mov
movb
das
insl
andb
stos
imul
mov
data16
dec
ss
jns
push
ljmp
aam
in
jge
outsl
push
inc
push
jno
cmpsl
inc
adc
mov
mov
ljmp
test
inc
pop
cmp
mov
sub
xor
fnstsw
cmp
mov
sbb
mov
fwait
out
ja
inc
jbe
dec
lret
loope
das
cmp
push
mov
les
sub
movsb
std
cmp
pop
jl
cmp
sub
jno
out
add
jbe
add
iret
fnsave
jmp
pop
stos
sti
jge
sub
and
mov
xchg
sub
jnp
jb
cmp
or
push
pop
sub
inc
push
add
mov
add
int
aas
fistpll
xchg
xorb
std
cmp
inc
scas
out
add
adc
adc
popa
fsubl
adc
mov
or
mov
leave
lahf
cwtl
push
jne
or
inc
add
jle
icebp
incb
test
out
mov
push
xchg
fs
jge
inc
loopne
dec
pop
hlt
mov
add
mov
bound
dec
fidivrl
mov
jb
jmp
out
sbb
mov
fsubr
pop
psrlq
pop
fwait
cmpsl
dec
movsl
inc
inc
fisttps
push
in
fistl
cmp
sub
dec
pop
jns
push
je
push
push
mov
ss
push
fistpll
adc
out
cmp
cwtl
outsl
movb
cmp
lock
sbb
push
out
gs
xchg
or
pop
iret
scas
adc
mov
push
enter
mov
adc
notb
stos
shl
arpl
xor
and
adc
sub
popf
fisubl
xchg
push
aaa
hlt
cmp
jne
inc
test
icebp
aad
rcll
test
pop
scas
test
inc
lods
adc
stos
sbb
mov
and
popa
cmp
adc
insb
mov
add
lsl
aad
add
mov
xchg
or
push
xchg
adc
int3
rcll
lret
outsb
sbb
mov
push
loop
ljmp
jle
bound
sbb
lods
add
rcll
jmp
add
sub
jo
cmp
cwtl
xchg
inc
arpl
xchg
stos
ja
inc
xor
test
xchg
ret
dec
lds
push
push
jno
xchg
sub
inc
stc
dec
cld
adc
cmp
add
insb
jle
or
out
into
mov
add
xlat
jl
push
jb
pop
jecxz
add
out
mov
das
out
das
mov
sarb
pop
or
jne
sub
insb
sub
pop
cmp
inc
mov
loope
out
inc
mov
push
jmp
flds
mov
or
lcall
fstpt
lret
std
jmp
jns
lcallw
push
jno
mov
repz
xor
ja
xor
or
test
rcr
pop
cmp
mov
fsts
mov
push
je
stos
mov
xchg
cmpsl
or
aas
pop
js
pop
icebp
jl
das
cmp
pushf
mov
cltd
jo
or
xor
inc
cwtl
shll
or
sub
loopne
subl
decl
ds
mov
pop
mov
fnstsw
push
shr
inc
cmc
dec
mov
adc
sub
push
jae
lret
add
mov
mov
inc
inc
add
fnstsw
pop
in
daa
es
xor
and
push
mov
lds
fists
push
mov
loop
pop
jo
mov
imul
dec
push
xor
ret
jnp
sub
mov
jnp
decb
enter
push
psrlq
rorl
loope
xlat
push
and
cwtl
push
mov
mov
aaa
int
or
sub
out
pop
jns
roll
mov
sub
pop
pop
out
xor
xor
sbb
cmp
mov
cmpsl
sub
call
ss
addb
cmp
movsl
js
push
cwtl
stc
xchg
out
cld
cmc
ss
cmp
pop
loop
pop
mov
add
jnp
ljmp
mov
imul
filds
adc
pop
sub
test
or
xlat
jo
jbe
add
pop
into
je
stc
test
sbb
arpl
jg
and
js
rol
out
cs
add
cmp
pcmpeqw
xor
je
dec
inc
rol
outsl
inc
inc
int
rol
pop
push
in
mov
in
dec
add
pop
sub
insb
popf
or
mov
nop
adc
jno
nop
ret
sbb
xchg
mov
sarb
push
xchg
pop
lods
pop
aas
nop
das
mov
in
xchg
lret
js
add
imul
jle
mov
or
adc
cmp
or
pop
pop
inc
add
push
inc
sbb
popf
push
lea
cli
or
jnp
or
outsl
enter
add
mov
add
dec
stc
js
mov
es
mov
dec
shll
lds
xor
or
adc
cwtl
push
test
orb
mov
pop
xor
outsb
push
stos
cmp
lds
test
nop
pop
push
pop
in
roll
cmp
xchg
mov
faddp
mov
and
and
lock
insb
inc
mov
dec
test
xor
xchg
and
adc
fwait
cmpsb
jo
xor
adc
ret
and
int3
push
mov
popf
test
mov
add
aad
sbb
sti
sub
subb
dec
aam
enter
push
mov
rcrb
inc
fs
incb
cmp
in
lea
pop
jecxz
dec
inc
orb
push
cltd
push
movlps
add
cmp
jge
lea
mov
add
loope
mull
cmpsl
inc
jnp
sbb
jl
mov
sub
ljmp
jno
mov
jb
leave
das
cwtl
inc
aaa
jbe
imulb
insl
cmp
orl
inc
push
add
sbb
cmc
dec
and
lods
mov
jecxz
aad
lcall
pop
push
movsb
push
cwtl
jns
xchg
pop
cs
pushf
test
jl
fistpl
je
test
pop
cmp
sbb
out
inc
pop
cmc
ss
outsb
sbb
xchg
ljmp
sub
call
sub
mov
int
out
inc
inc
xlat
jne
out
mov
fbstp
mov
xchg
jp
or
mov
aas
sub
cwtl
shrl
popa
js
jecxz
or
xor
mov
rclb
jb
icebp
ljmp
jae
xchg
testl
xchg
flds
sub
mov
mov
testb
out
pop
inc
mov
or
and
sbb
push
push
andb
inc
notl
subb
cld
add
inc
push
or
stos
mov
add
test
loope
fs
aas
cltd
std
cltd
mov
outsl
lret
mov
adc
adc
nop
daa
add
pop
stos
jno
mov
insb
xchg
jns
int
inc
filds
test
cmp
test
popf
loopne
sub
add
out
repz
xchg
dec
fdivrs
cmp
ficompl
and
xor
fisubrs
xor
mov
lret
and
mov
inc
fistpll
lret
call
xchg
lods
repnz
fisubl
iret
push
test
and
xor
lock
cmp
mov
add
shrl
and
cmp
cs
pop
addb
xor
ret
and
in
dec
mov
addr16
pop
scas
push
lods
push
repnz
sbb
pop
ds
dec
push
pop
movsb
add
push
push
aas
cmp
push
xor
test
xor
mov
mov
cmp
ds
repnz
ret
add
inc
jecxz
test
push
push
xlat
push
mov
jle
add
pop
repnz
cmp
adcb
iret
cmp
out
cmp
sub
test
push
movsl
cmc
mov
fildl
dec
or
sub
xor
xchg
inc
jle
xor
bound
mov
jne
mov
lods
mov
rcr
mov
insb
adc
pop
jecxz
repz
es
xchg
mov
das
inc
fldl
in
xor
outsb
lds
mov
sub
cld
outsl
loope
cltd
jmp
loop
mov
and
xor
movsb
pop
pop
pop
les
xor
and
cld
pop
addl
adc
or
rclb
addr16
sahf
sbb
popa
aas
lods
mov
mov
ja
test
fmull
cmp
js
jmp
daa
out
jo
xchg
stc
mov
lods
mov
adc
sub
enter
xchg
sub
std
lcall
dec
pop
addb
sub
lcall
jmp
dec
and
ror
add
pop
jns
mov
sbb
push
inc
add
idiv
mov
lea
lds
jl
mov
mov
xchg
add
add
and
negl
testb
jb
sahf
sub
add
clc
out
cmp
xchg
ret
dec
inc
pop
jae
and
or
adc
std
arpl
test
and
sbb
cs
cwtl
pop
cmc
fwait
cmpsl
and
adc
lret
roll
inc
dec
fdivl
xor
cs
fimull
movsl
dec
paddw
jecxz
mov
push
mov
mov
int3
and
mov
mov
ljmp
lret
xchg
fisttps
mov
sbb
mov
mov
stos
mov
out
jbe
or
sbb
jnp
or
jmp
push
sbb
aad
fs
or
mov
nop
cs
adc
mov
cs
mov
movsl
cmp
les
mov
jne
scas
pop
pop
push
out
popl
jmp
sbb
inc
bound
lcall
jae
fwait
jge
mov
notl
mov
ljmp
jmp
pop
cmpsb
push
sub
loop
and
push
push
aas
imul
sub
sub
ret
ds
leave
sbb
push
fiadds
bound
nop
and
int
imul
clc
aad
fistl
cs
sub
mov
les
adc
add
adc
mov
aam
xchg
jge
clc
inc
loopne
lret
cmp
jg
mov
cwtl
mov
or
addr16
out
rcrb
jmp
popa
jg
jae
or
adc
cmp
lods
mov
lret
xchg
xor
add
inc
out
cwtl
push
movsl
dec
mov
in
ret
pop
lds
add
imul
xor
test
dec
push
sub
cmp
pop
cmpsl
popa
xchg
sub
or
jge
xor
and
or
mov
fs
pusha
int3
mov
into
popf
fwait
icebp
mov
inc
test
xor
ret
popa
mov
adc
mov
sarb
pop
xchg
stos
ja
lock
in
push
xor
int
es
divps
sbb
adc
out
cmc
std
cwtl
loope
jne
mov
fnstcw
pop
into
imul
push
nop
push
mov
imul
mov
lcall
push
inc
mov
ffree
fbstp
add
and
movsl
insb
fnstsw
mov
iret
loop
push
mov
outsl
sub
mov
dec
repz
pop
inc
and
insb
lods
jbe
insl
call
fdivr
int
inc
int3
lods
mov
dec
popa
movsl
mov
sub
cmp
jbe
bnd
stos
jle
push
jo
jno
xchg
mov
xchg
lock
adc
rcrl
fcmovu
jb
adc
mov
inc
add
roll
rorl
cmp
andb
leave
insl
fadds
insl
test
jp
push
sbb
push
mov
insb
into
lret
xchg
add
shl
adc
cmc
inc
ret
cmp
mov
test
les
imul
aas
or
imul
mov
test
or
out
and
sbb
xor
iret
mov
mov
adc
cmp
std
ljmp
mov
scas
filds
fdivl
insb
cmp
or
cs
fmul
sbb
jmp
cmpsl
out
inc
gs
dec
lea
in
push
in
iret
adc
popa
cwtl
aad
dec
scas
shrl
imul
inc
stos
ret
pop
repz
pop
inc
cltd
xchg
sub
jmp
dec
sbb
adc
clc
sbb
mov
ljmp
pop
mov
mov
sub
and
out
push
pop
dec
mov
ficoml
mov
in
push
add
mov
ret
jg
loop
cmc
push
dec
cmp
push
lea
int3
arpl
adc
divl
andl
xor
lods
in
in
cs
mov
mov
jbe
sub
cwtl
or
cmpsb
jo
inc
push
sbb
xor
pop
pop
xor
stos
cmp
lds
push
fnstcw
test
add
out
test
jnp
lret
sbb
inc
mov
out
imul
jbe
push
fisttpl
mov
movsb
mov
sub
lahf
add
call
jae
add
xor
into
test
adcb
mov
mov
lods
hlt
mov
or
imul
icebp
mov
and
sub
push
and
cmp
pop
stc
mov
loop
lcall
gs
mov
test
pop
sbb
sub
adc
and
test
std
push
lds
aas
mov
lret
mov
fs
xor
stos
out
data16
data16
mov
sub
cmpsb
inc
push
adc
in
or
ficompl
mov
test
cmpsl
ds
pop
imul
ss
cmp
sti
sbb
adc
movsb
sbb
pop
fsubl
cmpl
push
jl
push
xchg
push
jae
insb
jno
sbb
movl
cs
xchg
loope
add
inc
rcll
adc
xor
mov
enter
daa
out
add
fiadds
cwtl
ljmp
insl
inc
lods
out
xor
mov
xor
out
jle
sub
mov
and
movsb
adc
pop
xchg
rcl
repnz
icebp
aas
loopnew
push
orl
xor
or
inc
cmp
leave
loop
mov
sub
fbstp
mov
test
or
sub
mov
out
xchg
jns
test
dec
js
mov
scas
push
jnp
and
incb
popf
inc
lret
xor
pop
inc
jo
xor
jl
rcl
sub
shrl
mov
idivb
dec
enter
movsb
pop
or
xorl
mov
in
pop
popf
adc
in
and
movsl
push
out
inc
shrl
sbb
dec
sub
sub
out
shlb
adc
gs
pop
sahf
scas
xor
inc
inc
test
xchg
xchg
xchg
jmp
mov
mov
negb
imul
pop
testb
test
push
jge
push
mov
loope
inc
mov
mov
mov
xchg
orb
xchg
sub
sbb
cwtl
out
clc
and
xchg
adc
jne
mov
and
mov
mov
insb
jnp
xchg
insl
lcall
push
dec
jge
dec
sub
jecxz
pop
add
scas
add
sub
mov
clc
scas
mov
add
push
sub
mov
shrl
jp
ds
push
pop
add
dec
insb
mov
mov
loopne
loopne
xlat
pushf
dec
sbb
jb
mov
mov
push
push
xchg
outsl
add
jge
scas
sbb
mov
cmp
pop
rol
xlat
ret
push
push
inc
push
out
add
add
inc
fdivl
xchg
sbb
test
xchg
repnz
pushf
cmpsl
dec
dec
and
loopne
cmc
cmpsl
xor
js
shll
push
lods
xchg
aaa
hlt
repnz
sub
sbb
insl
aas
sahf
out
cmp
jp
hlt
stos
adc
rcrl
ds
mov
sti
int
jl
fsubrl
xchg
outsl
or
cmp
into
add
push
xchg
push
stos
inc
pushf
mov
push
jne
enter
call
es
insb
mov
pop
xor
fistpl
sbb
sbb
popa
mov
test
aas
push
sbb
xor
je
mov
int
or
call
pop
subl
xchg
cmp
dec
pop
sbb
inc
dec
outsb
mov
shll
lock
inc
dec
pop
inc
stos
pop
lahf
in
mov
fwait
adc
mov
es
movsl
sub
aam
gs
pop
cmp
sbb
mov
and
inc
mov
xchg
ljmp
ja
cltd
mov
sbb
int3
jg
add
jmp
shr
push
mov
push
in
jne
popl
mov
xchg
iret
sub
and
mov
leave
fdivrs
dec
arpl
push
sub
cli
xchg
leave
mov
dec
xchg
insb
adc
dec
test
jg
lcall
cwtl
pop
loop
out
cmp
mov
test
mov
mov
mov
rcr
pop
cmp
andb
jo
and
mov
and
dec
jp
inc
gs
das
inc
adc
aam
sub
repz
xor
add
data16
scas
add
cmpsb
jnp
das
dec
loopne
mov
push
mov
out
inc
test
sbb
paddq
sbb
mov
pop
adcb
mov
xchg
sub
sub
in
stos
dec
movsb
out
xchg
js
orl
adc
adc
jg
popf
lea
movl
lret
bound
sbb
dec
xor
clc
inc
xchg
adcb
cmp
or
mov
and
hlt
fwait
inc
popa
add
inc
stos
push
js
push
hlt
or
add
bound
test
daa
cmp
jl
mov
xchg
into
shl
mov
sub
xor
incl
push
mov
neg
jb
jb
pop
mov
cwtl
xchg
pop
repz
pop
dec
mov
sahf
mov
inc
shrl
mov
shl
imul
test
ret
je
add
jbe
and
mov
sar
bnd
ret
fdivrs
add
mov
scas
or
fimuls
call
outsb
popf
imul
in
dec
and
xchg
cs
push
filds
sbb
push
sub
add
jne
mov
lods
sbb
frstor
adcl
adc
in
pop
cmp
lret
filds
in
lods
and
popa
mov
xor
pusha
sbbb
das
cmp
sbb
das
xlat
pop
jae
repz
jmp
mov
xchg
push
pusha
jl
rcr
repnz
cld
xchg
clc
adc
and
sbb
mov
ret
dec
jg
or
bound
dec
mov
stc
data16
cmp
cmp
mov
or
mov
mov
cmp
cli
lock
and
mov
int
add
ss
pop
cmp
xor
rorb
in
pop
outsb
sub
aaa
jle
push
xor
mov
or
mov
rcrl
sti
pushf
inc
testl
lods
jbe
sahf
and
pop
arpl
xchg
sub
xor
outsl
adc
adcb
shl
dec
sub
mov
pop
ja
jne
xchg
xchg
or
pushf
jnp
mov
pushf
xor
pop
cmp
add
cs
arpl
sbbb
pop
add
inc
lret
outsl
lods
add
int
addb
or
cmp
add
inc
xchg
mov
jmp
setnp
xchg
enter
js
cs
shrl
sbb
xchg
rorl
vpsrad
test
repnz
adc
xchg
bound
xchg
jecxz
fsubl
rcrl
pop
adc
xchg
sub
push
sbb
mov
xchg
pushf
add
mov
sbb
adc
mov
insb
sbb
movsl
cmp
int
repz
mulb
jecxz
mov
or
push
cltd
mov
add
dec
jno
jae
or
out
inc
adc
pop
cltd
mov
pop
sahf
mov
push
dec
jecxz
jg
mov
ret
ljmp
pop
dec
pop
out
pop
aas
and
icebp
jns
cli
mov
or
push
scas
jbe
and
sub
and
sbb
mulb
pusha
pop
mov
outsl
and
push
rorl
xchg
les
scas
inc
dec
in
adc
cmp
and
mov
clc
test
dec
stos
mov
pop
sub
cmp
push
fnstsw
push
and
js
add
cld
xor
call
jp
out
ja
push
out
xchg
fnsave
mov
mov
test
out
movsb
inc
pusha
or
nop
mov
icebp
pop
push
push
outsl
pop
jo
ja
outsb
test
ja
xchg
or
pop
jb
pop
cli
xchg
dec
adc
jne
jecxz
in
pop
seto
dec
jo
pop
jg
sbb
adc
icebp
fildll
cltd
test
and
rcll
sbb
js
popf
pop
repz
aas
ret
outsl
nop
shlb
lahf
pop
out
sbb
imul
xchg
mov
or
loop
lock
pop
cmp
mov
mov
dec
leave
enter
ds
aam
lea
push
sub
stos
mov
mov
jnp
popf
insb
or
sbb
push
add
add
incb
mov
pushf
ret
rcll
clc
cs
scas
inc
mov
jno
xorl
add
shll
push
push
scas
popf
mov
dec
loop
sbb
mov
mov
pushf
fs
cltd
jbe
xor
subl
or
ds
stc
inc
adcl
cmp
sub
arpl
int
xchg
mov
lea
fildl
mov
insl
loope
je
fcomi
ret
jg
decb
or
push
imul
incb
pusha
sbb
jle
pop
shr
add
mov
adcl
pop
jb
push
cli
int3
mov
jae
xor
jbe
cmp
xchg
inc
xchg
mov
sarb
pusha
push
push
ja
dec
mov
ljmp
mov
pushf
mov
mov
movsb
cld
xchg
adc
dec
enter
test
popa
clc
std
sbbl
stos
push
lods
movsb
adc
in
xchg
dec
pop
add
mov
mov
push
mov
icebp
push
inc
fmulp
adc
or
cltd
or
insb
ds
repz
outsl
lds
fcoms
and
pop
sub
push
cmp
mov
jb
loop
xchg
lret
xlat
testb
lret
pop
or
lock
pop
es
pushf
cmc
pop
into
lods
xchg
xchg
fisttpl
xor
repnz
cmp
movsl
leave
mov
sub
xchg
shlb
repnz
cmp
out
xchg
xchg
bnd
pop
sub
mov
xchg
pop
imul
stc
push
jmp
add
dec
jl
call
hlt
lock
popl
mov
mov
jns
imul
fistl
aad
mov
cmpsb
dec
out
mov
lar
xor
pop
shll
xor
cwtl
push
scas
jle
aas
push
test
lcall
incl
bound
xor
xor
mov
mov
add
xor
pop
adc
sub
lret
sub
enter
scas
into
daa
inc
jecxz
push
sub
sbbb
mov
lock
cmpsb
mov
sub
sub
clc
fdivs
push
imul
inc
dec
lods
je
cmpsb
dec
mov
jge
push
mov
out
dec
xchg
sub
sub
movsb
aaa
add
cmpsb
add
mov
dec
mov
insl
dec
pop
dec
lret
popa
hlt
and
out
push
and
outsb
jl
enter
fnstcw
mov
lds
jmp
cmpsl
and
lahf
popa
pushf
sub
outsb
xchg
fdivs
dec
popl
sub
cmp
jmp
pop
in
dec
or
inc
mov
shlb
mov
pop
out
push
and
xorb
dec
bound
mov
int3
mov
fistl
orb
add
push
cltd
jmp
xlat
cwtl
incb
jmp
mov
mov
outsl
pop
add
lods
into
imul
jns
jbe
pop
fisubrl
dec
dec
xchg
out
mov
push
xor
cmp
daa
stos
ja
lock
lds
mov
out
rcrl
fnstcw
scas
and
pop
lods
jnp
or
or
ja
jno
add
mov
loopne
adc
aaa
mov
and
xchg
arpl
inc
sahf
clc
test
push
test
jne
xor
xor
lret
mov
fnstenv
mov
out
dec
sbb
pop
dec
add
pop
in
dec
pop
pop
mov
push
shl
int
dec
movsl
jmp
inc
lea
push
mov
mov
adc
or
push
dec
mov
shlb
insl
mov
mov
pushf
add
dec
sti
aaa
pop
adc
and
mov
xor
insl
out
loope
and
cmp
cld
push
xchg
mov
inc
daa
xor
push
xor
ret
jns
or
xchg
dec
mov
jp
sub
mov
or
loop
mov
mov
int
jp
jo
xchg
shrb
jno
xchg
shl
insb
mov
and
jecxz
rorb
adc
sub
adc
mov
stc
jb
add
xor
popl
sub
inc
add
add
js
cmp
xlat
in
stc
sub
sub
pop
add
int
out
pop
pop
imul
cmp
loop
aad
or
sarl
in
pop
out
pop
insb
push
out
jo
jbe
dec
push
ljmp
sbb
clc
lods
mov
flds
andl
out
inc
jb
ja
pop
cmp
out
mov
call
or
mov
lcall
push
xorl
and
dec
cmpsb
xchg
or
jmp
enter
jo
sbb
cmp
jo
xor
cmpsb
fmull
sbb
js
testb
mov
loopne
push
lcall
push
xlat
sbb
adcb
push
cmp
or
pop
cmpl
ret
mov
rorl
mov
mov
lea
cwtl
bound
and
or
cmp
loopne
xchg
in
test
insl
rcl
mov
xchg
mov
xlat
xchg
xlat
add
lea
dec
pop
add
push
jge
inc
xchg
js,pn
xor
or
inc
scas
jge
test
in
jl
push
adc
in
arpl
mov
jecxz
imul
add
mov
jp
insl
sub
pop
repnz
mov
inc
frstor
test
xlat
adc
jo
adc
pusha
inc
and
xchg
push
push
lahf
mov
popf
xor
test
mov
rorb
mov
dec
add
pop
lret
cwtl
sub
dec
push
shrl
enter
fiaddl
push
stos
fyl2xp1
xlat
fnstsw
dec
mov
mov
push
mov
loop
es
jmp
out
mov
xchg
lea
loop
sub
iret
push
xchg
cmpsl
into
lods
mov
xor
mov
xlat
adc
fcmovu
iret
or
jbe
inc
fstpl
aam
jmp
pop
xor
in
mov
and
hlt
insb
fstl
inc
sub
icebp
xor
cltd
je
stos
push
outsl
sub
xlat
push
mov
mov
sar
jbe
xchg
lods
add
cld
add
je
xor
daa
mov
cmpsb
pop
jmp
fmul
sub
add
dec
mov
and
add
dec
testb
push
jne
icebp
dec
jecxz
rolb
shr
xchg
aaa
int
xchg
xor
orb
ds
lods
inc
mov
inc
fadd
xchg
push
and
mov
dec
stos
jge
cmp
orb
in
sti
test
sub
adcb
insb
xor
sbb
and
ds
xor
js
mov
pop
movsb
fcomps
pop
jnp
adc
std
or
cmpsb
cmp
call
test
daa
mov
shrl
xchg
or
cmp
xchg
add
xlat
testb
icebp
adc
adc
jb
movsb
lock
and
inc
fdivrp
fwait
inc
repz
gs
push
sub
test
or
lock
test
cs
or
fdivrp
mov
out
adc
gs
push
xor
roll
mov
dec
rolb
add
fnsave
inc
in
sub
pop
xchg
xor
sbb
ficomps
push
pop
js
sysenter
insb
cmp
daa
loopne
stos
dec
pop
not
popa
xchg
xchg
jns
adc
or
jbe
mov
sahf
imul
push
xchg
in
leave
xchg
mov
fimull
pop
in
ret
imul
push
cmc
mov
ljmp
or
mov
cs
jecxz
jb
adc
ss
out
lret
jns
jno
dec
fistl
mov
jne
popa
adc
ljmp
out
pop
sub
inc
arpl
xchg
xor
push
adcl
cli
sbb
mov
xor
cmpsl
outsb
sub
dec
dec
dec
in
lahf
jno
mov
movsl
and
out
or
xchg
js
sbb
fisttpll
dec
cmc
cmp
mov
icebp
or
sbb
jmp
lret
lock
push
inc
add
inc
and
pop
xor
push
mov
mov
inc
enter
adc
rorb
cmc
mov
std
and
mov
xchg
xchg
and
je
xchg
lods
aad
mov
sub
xchg
psubsw
mov
cmp
xlat
sbb
sbb
adc
jno
popa
testb
arpl
jmp
pop
testl
sbb
in
out
push
push
jmp
aad
jo
nopl
jae
push
jle
mov
adcl
fdivr
roll
sub
fcoms
jp
pop
movsb
sbb
xchg
adc
mov
mov
fildl
and
and
cli
jg
lods
push
test
testl
xlat
popa
or
sbb
push
cltd
mov
in
adc
arpl
out
fwait
mov
sub
mov
orl
fimull
pop
dec
jb
jmp
jmp
xchg
mov
pop
in
es
add
sbb
subl
ss
fbld
test
cltd
fs
fisttpll
iret
sbb
stos
and
data16
sar
test
or
cmp
dec
push
dec
adc
icebp
pop
and
push
movsl
dec
jno
pusha
fcompl
adc
pop
andl
push
pusha
add
cmp
mov
pop
lret
divl
lods
mov
popl
insb
pop
lret
add
mov
out
outsb
inc
imul
add
fisttpll
jnp
loopne
fwait
movsb
repnz
xlat
sbb
ljmp
inc
stc
test
or
int
or
xor
xor
dec
pop
adc
mov
mov
push
adc
imul
pushf
cltd
add
and
mov
mov
mov
addr16
mov
mov
popa
decl
bound
dec
push
push
aas
outsl
daa
mov
dec
pop
popf
inc
out
mov
xor
xor
xchg
add
dec
std
stos
inc
jmp
sbb
imul
mov
push
jno
xor
bound
lret
mov
repnz
mov
dec
lret
push
fs
fs
test
inc
mov
fnstenv
mov
cli
push
stc
pop
decb
icebp
rclb
jns
pop
pop
lcall
les
popf
js
push
jp
or
dec
stc
jns
push
pop
loope
xchg
pop
fdivrs
ret
icebp
and
dec
sbb
int
das
and
dec
imul
std
data16
xor
bound
lret
add
fists
idivb
sbb
sbb
cmpsl
push
enter
enter
fidivrs
fnstsw
test
xchg
mov
mov
and
aas
xor
mov
loope
mov
sub
cmp
push
test
mov
out
das
insb
lods
xlat
sbb
inc
cld
int
loopne
stos
inc
int3
test
sbb
jg
inc
inc
fnstenv
fstpt
jecxz
sub
aad
mov
jecxz
stos
adc
fadd
add
cwtl
cmp
scas
int
pushf
outsl
leave
xchg
mov
xchg
mov
xchg
aaa
sti
clc
jl
movsb
into
jmp
mov
mov
cmp
arpl
lods
mov
loope,pt
cld
lods
outsl
fmuls
or
fildl
or
lcall
push
test
rolb
sub
adc
mov
icebp
push
popf
push
and
test
push
insl
xor
pop
ljmp
push
popf
pop
inc
xchg
cmp
loop
mov
dec
mov
jo
xchg
or
sbb
ljmp
js
xor
push
sub
orb
test
pusha
mov
dec
repz
mov
adc
xchg
cmp
scas
inc
fcoms
mov
jne
aaa
push
movsb
sbb
sti
fwait
stc
lea
lea
jmp
cwtl
hlt
enter
std
push
sbb
stos
pusha
in
mov
lods
jo
or
aad
and
jb
pop
orl
pop
xlat
jl
push
daa
mov
aam
jno
imul
imul
imul
fs
cmp
sbb
jnp
lret
jo
call
cmc
lahf
or
pop
jge
xor
dec
jle
out
enter
cmp
daa
clc
sahf
or
pushf
pop
inc
xchg
cltd
std
lds
jne
add
test
push
testb
xchg
aas
imul
gs
ss
in
scas
jne
xor
incl
and
inc
clc
mov
xor
push
mov
rol
ficoml
lahf
data16
ds
adc
mov
adc
ror
cmovo
dec
fisubrl
xor
leave
jecxz
fcomi
loop
pop
xchg
sub
lock
inc
es
push
fbld
mov
mov
dec
int3
mov
and
negb
xchg
mov
fmull
inc
cmp
xor
ror
mov
stc
push
inc
cmp
pop
in
xchg
dec
pop
push
adc
rol
inc
stos
dec
cmp
aam
push
outsb
adc
inc
cld
adc
mov
mov
daa
inc
cmp
add
lcall
inc
clc
cmp
pop
dec
sarl
int3
in
xor
jo
mov
fucomp
clc
or
and
cmp
mov
pusha
mov
sub
ja
jg
cmp
orb
shrl
mov
push
inc
lcall
aas
or
dec
mov
cwtl
dec
inc
out
inc
ss
cmp
inc
push
call
add
mov
pmuludq
cmp
fwait
xlat
ret
ror
arpl
jne
data16
fdivr
lock
jge
dec
scas
rorb
cmp
adc
mov
xlat
cmp
negl
in
xchg
jle
or
sbb
test
repz
jns
jp
repz
lea
aaa
or
outsb
andb
pusha
ljmp
and
jmp
imul
imul
test
sbb
nop
in
loope
fstpt
xchg
insl
mov
orb
test
add
test
dec
aad
gs
jg
hlt
push
sub
sbb
sti
ss
sub
mov
fnstenv
bound
stc
and
lods
xchg
sub
loopne
imul
outsb
loopne
jg
push
test
test
iret
fnstenv
adc
mov
test
fwait
jle
shlb
iret
loope
shrl
jne
pop
dec
add
aas
adc
xchg
push
jp
jp
inc
dec
icebp
mov
sub
push
xor
int
mov
adc
bound
andb
lret
ret
jge
mov
icebp
inc
fdivrs
iret
add
pop
push
daa
or
lock
dec
incb
jp
mov
xchg
and
sahf
jmp
dec
pop
mov
xor
sbb
pop
pop
bound
xchg
or
xchg
sub
test
inc
push
outsb
es
jo
or
sti
push
mov
imulb
inc
clc
xor
pop
push
out
aaa
stos
int3
xchg
in
sbb
in
pop
cwtl
push
movsl
into
xor
sbb
add
pop
jb
and
xor
dec
dec
out
out
push
jecxz
dec
xchg
dec
repz
hlt
mov
dec
push
cmp
icebp
lods
push
push
pop
lods
in
out
pop
popf
lods
cmpb
xor
addr16
imul
lcall
fidivl
rcr
inc
leave
in
fsubrl
inc
repnz
int
rorb
imul
lods
mov
or
mov
jmp
cwtl
xlat
and
mov
pushf
cli
mov
rclb
cmp
hlt
push
sbb
add
faddl
insl
inc
mov
or
int3
cld
dec
add
sti
shl
ret
sub
inc
pop
imul
mov
mov
mov
adc
jle
call
inc
lods
mov
adc
lahf
popf
mov
cltd
push
mov
movsl
repnz
mov
bndstx
std
push
jl
in
mov
jecxz
rcl
mov
and
cmpb
pop
add
xchg
cmp
and
in
insb
pop
mov
enter
ret
jno
lret
push
rcrl
movsb
and
daa
cmpsl
xchg
pop
jbe
movsb
repnz
inc
cwtl
mov
xchg
xchg
cmc
sbb
in
push
jo
sub
scas
xor
fdivrl
xor
sar
adc
scas
js
sub
jns
xchg
cmpsl
jno
pusha
neg
xchg
mov
stc
jnp
mov
push
mov
shll
imul
mov
cmp
rcl
call
fisubrs
mov
dec
jmp
xchg
scas
andl
push
ja
insl
mov
call
push
repnz
mov
xor
popa
shrb
cwtl
stc
nop
mov
jae
jbe
sub
and
ss
push
xor
cld
les
sbb
mov
rcrb
mov
imul
movsb
psrad
clc
iret
sbb
adc
cmp
fdivrs
sbb
pop
sub
mov
jae
pop
push
pushl
xchg
sbb
rep
sub
sub
sahf
rcl
adc
sub
inc
mov
inc
pop
imul
fs
int3
stc
lods
jmp
xlat
pop
and
inc
ds
dec
imul
sub
je
adcl
nop
adc
adc
inc
fs
mov
and
mov
outsb
sub
pushf
or
mov
mov
push
js
sbb
data16
icebp
insb
in
sub
mov
jb
adc
or
pushf
lods
icebp
aam
push
push
fcmovnbe
lret
lock
bound
mov
pop
ret
push
scas
add
sub
dec
cmp
push
fbstp
push
out
cld
inc
lock
jge
enter
mov
dec
hlt
clc
fdivl
pushf
pop
cs
push
mov
mov
add
fldenv
or
cld
adc
ljmp
mov
loope
sub
dec
dec
in
arpl
int
shrl
in
mov
mov
call
dec
stos
aad
mov
xor
aas
pop
inc
sub
repnz
dec
test
mov
aas
dec
or
or
in
fwait
jnp
pop
jg
movsl
ja
jecxz
test
cmp
mov
int
sbb
cs
sbb
sub
xor
call
mov
dec
addr16
dec
mov
xorb
add
outsb
xchg
movsb
or
cmp
stos
subl
cmp
testb
test
aad
or
pushf
test
adc
fnstenv
je
test
lods
jo
dec
test
pop
imul
cs
movsb
push
cs
mov
push
xor
mov
subl
int
pop
and
mov
xor
js
xor
in
push
push
mov
fnstsw
ljmp
sti
dec
mov
insl
ljmp
imul
insl
pop
into
pop
enter
push
outsb
loop
ret
sub
insb
push
nop
lds
movsb
les
or
mov
xchg
cli
cmp
add
jbe
mov
or
mov
pop
and
add
ljmp
pop
fsubrl
sub
pop
cmp
jnp
fsubrl
outsl
add
loopne
popa
pop
sub
add
or
jl
mov
jb
stos
sub
data16
or
test
adc
adc
shr
xchg
or
sub
pusha
lods
cmpb
cmovbe
outsb
xor
sbbb
mov
adc
int3
mov
lods
add
shlb
push
mov
insb
sub
xor
inc
or
daa
loopne
mov
pushf
call
fisubs
push
ret
jge
data16
negl
xchg
out
sti
test
ret
cmpsl
mov
xlat
cmc
or
pusha
aaa
jns
cmp
pop
rcrb
sub
dec
adc
jl
inc
push
outsl
sbb
insl
shlb
inc
test
repnz
push
out
cs
ret
pop
jbe
mov
push
pop
push
inc
pusha
adc
mov
sbb
push
or
dec
fcomps
inc
inc
int
pop
sbb
pop
fwait
xor
es
fwait
pop
in
scas
adc
sbbl
and
fs
es
inc
aas
inc
ss
sub
sub
shrl
nop
push
repnz
iret
cmpsl
add
cwtl
and
lea
mov
pop
cwtl
das
nop
int
mov
cltd
mov
dec
push
shll
in
mov
mov
dec
ja
pop
pop
push
pop
fcmovnbe
push
sub
sub
inc
or
jae
mov
jmp
ds
stos
mov
and
push
and
fcmovu
sbbl
mov
push
outsl
xor
jne
lea
add
idivb
mov
cmp
pop
shlb
mov
inc
xor
insb
xchg
or
test
testb
sbbl
jg
mov
mov
imul
xlat
mov
nop
movsl
roll
or
mov
pop
sbb
add
insl
sbb
xor
jo
xchg
cmp
into
outsb
inc
dec
bnd
lods
outsb
mov
sahf
xchg
flds
jno
inc
lock
mov
inc
fwait
adc
pop
pop
push
sbb
sub
call
xor
cwtl
mov
mov
jmp
sbb
andb
cmpl
insb
mov
add
sbb
mov
jnp
repz
shll
popf
cli
lds
jbe
sbb
mov
mov
and
mov
mov
test
insb
or
mov
popa
pop
insb
push
pop
sbb
andl
iret
xor
mov
arpl
sub
push
or
in
cmp
stos
sub
mulb
inc
insb
add
subb
mov
pop
scas
shrb
inc
imul
mov
pusha
lods
cmp
and
inc
add
xchg
cmp
sub
aas
dec
je
lret
add
xor
cmpsl
sti
inc
lahf
popa
test
mov
les
dec
aaa
xchg
in
ds
jmp
sti
push
fdiv
aam
out
fldcw
cmpb
dec
pusha
jnp
out
lret
neg
inc
xchg
scas
fimuls
sub
mov
mov
or
cld
imul
js
scas
call
in
stos
test
aad
adc
and
shll
mov
test
adc
test
or
xchg
push
icebp
lea
mov
in
cmpl
jle
dec
lock
out
shll
jmp
inc
pop
mov
sub
es
les
xchg
enter
notl
pop
out
sbb
in
loopne
push
popf
and
xchg
push
and
nop
js
insl
scas
xchg
stos
cmp
in
sbb
cli
jbe
mov
hlt
mov
sub
outsl
addr16
sbb
out
jmp
sahf
add
inc
fucomip
cld
mov
fnstcw
gs
gs
push
pop
dec
das
repnz
jp
inc
pop
into
pop
cmp
cmp
cmp
mov
and
dec
divl
sbb
adc
cmp
scas
lock
mov
push
movsl
jmp
lods
nop
mov
xchg
idivb
clc
jo
and
je
stos
fimull
mov
mov
ljmp
jge
loopne
icebp
nop
mov
cmp
mov
or
dec
cmp
test
add
xor
mov
pop
add
out
mov
test
mov
jnp
or
aas
xor
adc
add
pop
das
sub
xchg
std
inc
push
sti
inc
ret
inc
pushf
push
push
in
inc
xor
pop
mov
inc
push
gs
dec
insl
je
cmp
jo
mov
jo
insl
imul
lock
dec
mov
xchg
sub
cltd
or
loope
repz
fwait
jo
repz
cmpsb
lret
dec
or
loope
subb
insl
insl
stos
daa
lret
push
div
mov
xchg
mov
int3
in
rclb
out
test
sub
jo
dec
pop
pop
loop
push
rcrl
les
cli
xchg
in
xchg
bound
stc
sbb
sub
outsl
in
ret
add
xchg
scas
ficompl
outsb
lret
je
test
push
sbb
ja
inc
cltd
jbe
mov
push
push
sub
lahf
sbb
or
inc
fidivrs
or
add
jb
add
testl
and
push
pusha
push
loope
dec
and
std
enter
sti
push
stos
cs
xor
lds
push
jmp
mov
dec
mov
jle
cmp
arpl
incl
xchg
out
pop
jecxz
ja
sub
xchg
stos
outsl
mov
das
in
xor
xchg
lds
adc
jo
fsts
pop
cmp
xchg
sub
push
stos
ror
fdivr
icebp
movsl
xor
test
add
loop
jb
add
cmp
lret
bound
push
js
cmpsb
jbe
fsubs
adc
pop
mov
in
mov
je
test
out
and
std
push
sahf
outsb
adc
addr16
rclb
push
xchg
out
mov
cld
and
mov
inc
scas
out
or
and
mov
mov
insl
test
mov
pop
or
mov
add
push
xchg
add
and
pop
mov
les
or
nop
mov
aaa
mov
rcll
fisubrl
xchg
fsubr
clc
mov
inc
pop
xor
fldl
and
popa
pusha
ss
fiaddl
xchg
or
in
idiv
cltd
lcall
test
test
xor
inc
mov
sbb
leave
test
sti
mov
cmp
or
loopne
bound
mov
mov
push
aad
mov
gs
repz
xchg
inc
push
jmp
cmc
cmp
cwtl
jb
in
adc
mov
cwtl
push
sti
out
adc
push
inc
mov
lret
andb
adc
inc
into
mov
cmp
adc
mov
jl
lods
lea
lret
push
inc
push
bound
or
mov
push
mov
mov
adc
pop
call
int3
fsubr
shll
cmc
xor
xchg
sbb
mov
mov
loopne
cmp
lods
mov
sbb
dec
inc
push
test
add
lcall
dec
mov
aas
push
push
lock
pop
add
ss
mov
mov
dec
fcmovbe
ficompl
mov
xor
popa
mov
cmpsb
cld
ret
orl
or
call
arpl
inc
jnp
shrb
mov
push
popf
lret
int3
lcallw
cmpb
push
sbb
fsubrl
inc
fmull
in
and
and
mov
scas
jle
mov
xchg
add
mov
adc
push
cwtl
mov
aaa
into
jbe
call
fnsave
fdivrl
test
int
mov
out
mov
mov
aaa
push
xchg
xchg
pop
push
aas
adc
fcomi
jg
cmp
push
mov
pop
xor
xor
push
jae
cmp
jecxz
call
test
repnz
jne
push
loope
xchg
pop
lcall
dec
adc
call
xchg
notl
jbe
lcall
enter
mov
jae
mov
fidivrs
jno
test
pop
cld
cmp
xor
push
outsl
jns
adc
incl
push
and
and
jmp
inc
xchg
inc
gs
ds
push
cs
frstor
mov
jno
mov
pusha
jnp
xchg
dec
movsb
scas
out
or
enter
sbbl
imul
insb
inc
sti
pop
inc
mov
daa
and
pop
xchg
inc
xor
xor
xor
loop
andb
jb
lock
push
and
jp
imul
adc
stc
lods
into
fdivl
jns
ljmp
out
sub
in
xor
lock
jne
cmp
cmc
xchg
imul
mov
das
jnp
icebp
push
xchg
jp
lods
outsb
inc
fs
je
in
mov
cltd
cmp
maxps
cmp
loopne
pusha
sbb
sbb
sbb
sub
dec
filds
pop
in
lock
ds
adc
leave
dec
stos
shrb
push
outsb
and
and
enter
push
jmp
dec
jno
xchg
mov
push
or
int
sbb
add
outsl
xchg
sbb
jmp
mov
inc
call
test
out
jb
adcb
lock
aad
sub
imulb
sub
mov
mov
pop
mov
stos
adc
sub
or
jae
dec
jecxz
or
push
testb
sti
stos
and
sbb
xorb
sub
cmp
stos
cmp
ljmp
xor
sbb
and
test
xor
add
xchg
sbb
stos
pop
push
mov
sar
or
inc
adc
cltd
cmp
dec
mov
aas
jae
push
scas
sbb
iret
pusha
jno
scas
and
lret
lret
mov
add
scas
push
mov
nop
inc
ss
mov
aad
mov
push
cmp
sbb
movsb
pop
push
cld
ds
jae
push
xchg
pop
push
mov
mov
add
push
fldl
pusha
fdiv
je
es
cltd
bound
and
inc
push
repz
stos
push
pop
xor
test
adc
cmp
aad
in
inc
je
cmp
lcall
add
jno
das
aad
lret
mov
in
in
push
ret
outsl
jae
mov
inc
pushf
mov
ljmp
jbe
movsl
sbbl
xchg
adc
sbb
dec
cmpl
cmpsb
sahf
stc
stos
sti
lods
add
jne
insl
pop
loop
fistpll
cmp
push
inc
pop
sti
dec
pop
xchg
in
int
sbbl
js
and
mov
pop
out
pop
or
fcompl
pop
sbb
pushf
jno
sbb
and
mov
nop
ret
in
xlat
outsb
pop
jae
mov
pcmpeqw
movsb
and
ss
or
mov
int3
int3
mov
or
xchg
mov
imul
pusha
lock
mov
inc
sbbl
push
add
jbe
push
xchg
jne
and
xchg
xchg
dec
scas
cmpsl
jmp
dec
mov
sub
lahf
sub
adc
repnz
mov
test
rcl
push
dec
pop
iret
sbbl
fldl
test
cmc
mov
in
in
inc
mov
mov
lret
pop
push
mov
mov
stc
jmp
adc
pop
aam
ret
xchg
add
push
test
ret
adc
aaa
jbe
push
out
fbstp
outsl
subb
push
jb
add
iret
lret
pop
inc
inc
push
in
jb
gs
popa
je
sbb
inc
push
test
out
xchg
movsl
adc
fdivl
dec
movsb
std
sbb
pusha
outsl
mov
pop
jae
stos
cmp
pop
sub
dec
repz
pop
xor
aad
sub
cld
cmc
cmp
sub
gs
cmpl
mov
mov
lds
nop
xor
mull
push
add
lcall
fimull
adc
jmp
mov
xchg
divl
sbb
sahf
insl
or
jp
mov
fs
hlt
inc
fadd
popf
and
push
mov
sbbl
loopne
inc
mov
xchg
adc
sub
lcall
jecxz
popf
adc
std
adc
xchg
incl
and
pop
das
imul
and
mov
pop
lcall
lods
movsl
mov
xlat
fisubl
gs
push
adc
inc
lea
adc
sbb
cli
cwtl
sub
dec
mov
jl
inc
push
inc
enter
das
fs
mov
scas
out
fadd
dec
dec
mov
sub
loop
cmp
mov
icebp
movsl
sub
pop
rcrl
pop
in
push
mov
inc
pop
jno,pt
shlb
lea
mov
clc
jge
loop
mov
imul
sub
inc
fwait
mov
add
sub
dec
das
or
push
or
mov
adc
xor
addr16
mov
lahf
add
mov
repz
inc
jmp
addr16
xchg
movsl
sbb
cmp
fwait
lods
xchg
in
sub
sbb
and
mov
pop
int
sub
repnz
pop
jecxz
add
cmpsl
add
mov
cmp
push
insb
outsl
fnstenv
insl
mov
dec
ret
adc
test
icebp
jnp
sub
movsl
sub
cmovp
lock
lret
iret
push
sub
xor
sbb
sar
out
adc
mov
inc
pop
cmp
subl
test
movsb
cli
pushl
cwtl
cmp
adc
xor
insl
push
sub
lcall
lret
call
cmpsl
daa
inc
fstpl
sub
repz
imul
sbb
sarl
and
xchg
push
xlat
dec
xchg
jge
adc
pop
xor
fsubp
xchg
lret
fucomip
sub
sub
xchg
imul
frstor
xchg
nop
push
mov
ja
lretw
and
lret
pop
inc
jecxz
out
lock
cmp
dec
pop
push
mov
mov
lods
sub
sbb
inc
cld
mov
push
inc
xchg
jmp
dec
pop
testl
loop
mov
mov
jb
scas
cmpl
lock
sub
push
mov
add
add
mov
adc
mov
stos
inc
add
pushf
rorl
and
test
aas
push
mov
xchg
dec
xchg
fsubrl
xchg
hlt
imul
and
and
mov
inc
dec
jecxz
mov
loop
push
lock
xor
repz
mov
jp
js
sbb
cmp
repz
popf
inc
or
or
pusha
insl
fdivs
or
jb
scas
sub
xchg
in
aaa
mov
ret
nop
sbbl
push
jp
popf
push
adc
mov
adc
das
stos
push
mov
mov
dec
rcrb
sahf
fsubl
or
fdiv
bsr
jge
mov
in
cmp
push
mov
cmp
and
xchg
jns
xorl
add
mov
rclb
and
sbb
xor
dec
jmp
or
arpl
test
jle
xor
jmp
iret
rorb
jbe
push
pop
je
push
js
int3
jmp
cld
dec
or
aam
data16
jno
jp
sahf
ficoms
int3
cmp
dec
cmp
xchg
loopne
jecxz
cmp
out
sub
xor
mulps
stos
inc
ds
mov
mov
pop
rclb
jmp
cs
bound
sub
decb
mov
lret
mov
les
test
movsl
daa
rclw
mov
hlt
clc
xchg
mov
mov
inc
adc
xor
adc
sbb
cmp
mov
cmp
notb
in
test
xchg
aad
mov
loop
pusha
lahf
mov
call
lcall
adc
scas
sahf
sbb
cwtl
xor
push
in
mov
lock
push
dec
in
mov
pop
enter
push
cmp
lds
shlb
xchg
mov
push
ret
arpl
insb
dec
xlat
fdivrs
scas
out
aaa
mov
enter
loopne
call
iret
xchg
pop
insl
mov
dec
pop
scas
mov
mov
xor
daa
rclb
mov
test
or
xchg
cmp
and
sbb
pop
xchg
arpl
pop
and
xchg
push
cmc
fcom
jmp
cmp
imul
lea
std
xor
cmpsb
and
add
mov
cmp
loop
mov
rorl
cmp
dec
pop
mov
test
push
inc
dec
mov
add
pop
pop
daa
orb
fistl
xchg
bnd
dec
adc
cmpsb
sub
fsubrs
mov
leave
cmc
or
daa
jmp
adc
push
dec
xor
xor
js
dec
scas
pusha
fisttpl
xchg
push
mov
ljmp
push
push
sbb
xorb
push
pop
dec
loop
sbb
xchg
lods
ljmp
xchg
call
mov
mov
push
and
adc
mov
cmp
cmp
outsl
fidivs
cltd
lock
les
repz
ficoms
sahf
ret
mov
loop
fsubr
js
jns
sbb
das
call
mov
or
cmp
shlb
mov
cmp
mov
addr16
cmp
sbb
dec
xor
sbb
sarl
adc
mov
shrb
enter
push
mov
ficompl
das
and
pop
cmp
je
stos
mov
xchg
jle
sbb
out
or
jnp
pusha
sub
adc
ss
jne
add
or
outsb
mov
lods
inc
mov
jae
enter
mov
sub
pop
lds
adc
dec
xchg
and
popf
cmp
push
in
mov
mov
ss
push
jno
fs
xchg
stos
mov
aaa
leave
cpuid
cmp
out
inc
daa
shrb
sbb
lahf
mov
inc
mov
adc
daa
sbb
mov
mov
xor
mov
fstps
cmp
dec
pop
fimull
jmp
push
movsl
data16
test
ja
popf
cmpsb
dec
xchg
add
lcall
jecxz
iret
pusha
mov
adc
rorb
mov
xor
idivl
sbb
outsb
adc
das
dec
cmpsb
jbe
sbb
out
fs
and
pop
arpl
cmp
sahf
jo
mulps
mov
add
test
or
in
push
stos
aaa
inc
fisubs
fstpt
shll
sbbl
repnz
es
fcmovbe
push
mov
or
gs
out
xor
cmpsb
insl
clc
sbb
ret
push
testb
fldcw
add
lods
inc
enter
push
leave
cs
add
pop
inc
les
pop
in
jo
xchg
lret
in
mov
mov
xor
mov
lret
imul
pop
arpl
or
cmp
sub
in
push
out
push
inc
jae
test
jbe
xor
adc
test
test
xor
adc
ret
push
cmpsb
xchg
mov
adc
and
adcl
jg
pop
insb
mov
xor
and
push
add
clc
stos
out
data16
adc
aad
dec
add
ret
outsl
repz
pop
test
push
and
jno
and
mov
icebp
mov
jnp
pop
sub
mov
pop
lcall
scas
cli
cs
pushf
dec
mov
pop
xchg
in
jmp
cs
aas
mov
push
xor
lcall
and
cmp
andb
gs
adc
sbb
mov
pushf
jns
leave
cli
adc
jbe
imul
adcl
scas
fcoml
push
outsb
int
xor
sub
xchg
sbb
loopne,pn
imul
mov
mov
push
mov
lock
stos
ja
mov
inc
push
outsb
xchg
ja
or
lds
push
scas
pop
add
sub
mov
adc
cmp
inc
push
and
mov
sbb
rcll
fldt
cmp
lods
xor
sbb
sub
push
es
into
xchg
mov
jge
cmp
pop
cltd
add
loopne
and
orb
cmp
fidivs
lods
loopne
and
insl
jno
shlb
adc
scas
aam
jns
int
repz
in
lahf
js
push
ds
jnp
pop
insb
cmpsb
xor
pop
std
mov
sub
in
jecxz
aam
sti
or
mov
jl
cmp
das
inc
pop
xchg
add
jmp
aaa
pop
mov
push
cwtl
lret
sbb
add
mov
mov
dec
fldcw
fnstsw
xchg
loope
popa
push
mov
jne
inc
sub
xchg
jne
lret
in
shll
addps
add
addr16
dec
popa
and
mov
cli
pop
sbb
inc
cwtl
pop
dec
prefetch
aam
enter
test
lods
add
pop
out
test
adc
test
pop
pop
ja
test
jp
repnz
or
imul
jae
push
hlt
pop
fisubrl
mov
test
loop
jnp
std
icebp
subb
xchg
add
in
movsb
out
pop
outsb
pop
or
sti
push
jne
iret
inc
fldl
sub
sahf
pop
gs
xchg
shlb
pop
jnp
or
adc
cmp
mov
ret
sbbl
mov
movsl
cmp
pop
mov
cmp
ljmp
lahf
dec
pusha
mov
leave
cmpsb
dec
jmp
mov
ds
lret
dec
pop
cld
or
mov
sub
ds
cmc
out
xchg
mov
jb
fistpl
mov
gs
cmp
jmp
and
jno
clc
jbe
cmp
sub
scas
ss
std
xchg
jns
out
add
adc
pop
ja
outsb
iret
fsubs
pop
fildll
mov
push
cmp
xchg
cli
pop
popf
jp
sub
adcl
mov
and
pop
sbb
jg
cmp
test
cmp
mov
je
dec
jbe
loop
out
and
mov
push
inc
sub
orb
rcl
pop
scas
mov
stos
in
loop
and
push
out
imull
or
jne
pusha
cli
mov
mov
xchg
pop
add
and
xchg
cs
adc
jno
iret
sub
and
push
inc
mov
pop
jbe
cwtl
dec
loopne
fs
jmp
or
pop
fs
mov
data16
sbb
fwait
pop
dec
aad
in
aad
sbb
pusha
sarb
je
xchg
mov
mov
push
sub
lods
js
dec
lock
jno
sti
cmpb
icebp
sbb
inc
push
push
rolb
in
insb
insb
idivl
jmp
popf
insb
sbb
jl
movsl
jb
xchg
add
jns
aad
outsl
addr16
sub
sbb
cltd
sub
sub
fcmovb
stc
inc
enter
xor
mov
adcl
sbb
sbb
out
mov
fdivp
mov
mov
out
mov
pop
nop
gs
adc
cmp
sub
arpl
mov
dec
pop
ljmp
adcl
push
xor
xor
rorl
mov
cmovo
mov
in
loopne
push
and
jnp
sbb
addr16
xor
mov
cmp
std
icebp
adc
mov
mov
out
cmp
repnz
scas
out
pop
dec
and
stos
in
pusha
std
pop
dec
movmskps
scas
loopne
popa
orl
dec
pop
xor
pop
shr
fisttpl
adc
dec
pop
push
mov
pushf
and
stos
pop
inc
les
and
dec
and
pop
repnz
push
mov
pusha
sbb
inc
pop
pop
dec
mov
fcomip
adc
les
js
pop
inc
sub
mov
sbbb
imul
loopne
outsb
cli
jno
test
rcll
push
pop
loop
mov
xchg
mov
iret
adc
push
int3
call
or
xchg
sub
incb
xlat
lea
fsts
cltd
jo
jb
cmpsb
dec
mov
fsts
mov
fldt
aad
out
dec
jmp
fdivl
fstps
aas
adc
push
pushf
xor
fs
xchg
xchg
jecxz
push
adc
ljmp
or
mov
pop
pop
cmpsb
xchg
sub
rcrb
and
adc
mov
jle
sbb
fwait
xor
dec
icebp
xor
pop
push
cmp
clc
call
ja
dec
mov
jnp
sub
mov
insb
xor
out
cld
add
fistpl
cmp
mov
lods
jmp
pop
rcrb
xchg
cmc
je
push
xchg
inc
or
outsb
sub
xchg
fidivrs
jmp
pop
test
rcrb
rorb
dec
mov
cld
ja
out
sti
sbb
mov
dec
adc
test
mov
icebp
sbb
adcb
pop
and
lret
fidivrl
push
icebp
imul
pop
mov
or
in
mov
adc
popf
sub
je
bnd
bound
pop
out
push
popf
fcmovbe
and
xchg
xchg
pop
lods
mov
and
lods
xchg
popa
lods
xchg
dec
pop
lahf
dec
in
leave
icebp
jg
mov
lret
add
enter
cmpsb
rorb
ret
lret
push
stc
mov
shrb
jno
mov
mov
outsb
test
mov
xor
dec
gs
je
repnz
cmpb
mov
or
aad
jge
pop
cmc
xor
dec
pop
ja
popa
icebp
inc
sbb
adc
jbe
jl
cmpl
jg
xchg
pop
sub
pop
or
out
daa
sbb
push
cmpsl
in
adc
movsb
sub
es
pushf
pop
outsl
sbb
int
sub
rcll
jp
mov
or
test
or
shl
jg
push
popf
or
add
mov
int3
jo
or
mov
jmp
mov
lret
mov
ljmp
les
fbld
outsb
push
test
xchg
pushf
jb
or
jns
push
push
cli
xchg
push
dec
mov
fisubs
sar
pushf
add
sarl
adc
dec
xchg
mov
xor
ss
lea
mov
rclb
testb
push
ret
dec
and
fdivrl
mov
push
or
cmp
mov
push
jne
sbb
sti
aad
push
vprotb
fs
les
xchg
pop
sahf
mov
pop
dec
int
out
cmpsl
xchg
or
out
jae
mov
leave
popf
add
adc
mov
mov
and
add
xchg
repz
pmuludq
cmpsb
sub
sub
outsl
xor
repz
and
scas
insl
xchg
loopne
dec
mov
cmp
push
push
lods
cmp
push
cmpsl
cmp
outsl
pushf
sub
outsl
xor
js
dec
fsubrl
enter
cmp
ds
dec
insl
push
jl
inc
les
pop
xor
ret
fwait
addr16
adc
ss
stc
pop
cld
jg
into
stos
mov
int3
loop
jns
add
pop
lcall
cltd
or
test
leave
adc
imul
inc
inc
push
stos
rcll
inc
inc
inc
testb
stos
adc
add
dec
imul
and
sti
xchg
jne
fnsave
pushf
inc
leave
xor
xorb
jp
mov
or
xchg
fildl
or
scas
and
imul
and
or
dec
mov
test
pop
rol
lahf
das
outsb
push
pop
adc
fxch
mov
sti
mov
outsl
push
push
fs
jb
adcl
stos
and
fsts
push
insl
ss
or
divb
ss
lods
dec
shll
loop
pushf
dec
and
fisubrl
in
lret
xchg
lret
lock
adc
clc
mov
divb
xlat
in
cmp
stc
loopne
adc
call
mov
push
mov
into
fistpl
push
in
cmc
mov
aam
daa
outsl
jmp
adc
subb
test
mov
aam
dec
push
xchg
rcll
inc
cmc
out
popa
in
mov
mov
sub
leave
or
fidivrl
mov
push
push
in
jbe
and
xor
jne
sbb
inc
xlat
xchg
xor
repnz
ret
pusha
mov
inc
leave
stos
inc
push
xchg
es
jp
mov
repnz
bound
mov
pop
ret
dec
add
repnz
sub
mov
ds
test
mov
ret
jle
pop
je
fistps
ja
or
jnp
adc
je
sub
push
inc
lahf
fidivrl
or
popa
clc
aas
xor
sub
mov
mov
gs
push
dec
insl
int
dec
insb
out
jg
ds
adc
xor
push
jmp
xchg
imul
test
jno
ljmp
cs
ss
cmpsb
add
notl
mov
xchg
insb
push
fninit
dec
push
rclb
mov
cmp
mov
adc
mov
test
push
movsl
pop
ja
dec
int
ja
sub
jbe
loop
inc
lds
sbb
pop
xor
loope
add
imul
iret
sub
mov
rolb
push
inc
in
jb
sub
sub
adc
jg
aas
loop
mov
arpl
mov
repz
inc
mov
loope
add
ds
rcl
call
sub
outsb
leave
outsb
or
ja
jns
cmp
fs
and
inc
fs
mov
into
jne
cwtl
popa
or
lods
mov
adcl
sub
sbb
outsb
movsb
adc
aam
fsts
and
int
pop
stc
or
cmpsl
and
push
in
sub
add
xchg
sbb
mov
icebp
gs
les
adc
movsb
lret
jne
out
mov
xchg
sarb
mov
inc
sbb
push
lcall
in
daa
ds
out
cmp
mov
sbb
jbe
out
and
xor
sbb
xchg
fbld
mov
dec
dec
pop
inc
in
jl
cmp
mov
bndstx
aas
inc
push
ss
pop
hlt
pop
sub
push
popf
mov
mov
popf
repnz
dec
push
adc
jne
scas
stos
ljmp
test
js
js
mov
pushw
addl
fsubs
pop
ss
pop
mov
or
outsb
daa
ret
rorb
sbb
cmp
loop
call
lea
lock
mov
test
mov
sub
ja
jb
sbb
leave
sahf
rorl
fdivrs
sub
aad
sbb
jae
js
mov
push
scas
jae
andb
loopne
mov
cmp
jne
nop
xchg
add
jno
push
out
jmp
shl
sub
call
ja
add
adc
cmp
xchg
xchg
push
enter
mov
addl
push
inc
mov
sub
xor
inc
push
movsl
and
sub
dec
and
dec
in
cltd
xor
push
mul
inc
inc
popf
jns
fldenv
pop
or
lret
out
prefetchnta
ds
div
clc
jmp
ficomps
add
xchg
arpl
inc
ret
push
mov
sub
jae
movsl
inc
and
clc
sbb
insb
mov
add
or
push
push
push
loop
mov
sub
pop
sbbb
rcl
push
rcl
loopne
rorb
stos
cmp
cli
cli
push
outsl
xchg
or
in
daa
clc
mov
sbb
addr16
je
cltd
mov
std
sti
xchg
das
movsl
xor
insl
add
or
push
xchg
push
test
out
mov
in
or
xor
push
in
aam
jae
dec
insb
add
out
inc
adc
imul
xchg
mov
and
jae
pop
dec
movsl
cmp
add
movsb
int3
fidivs
or
and
pop
xor
push
pop
cwtl
pop
stos
push
cmpsb
js
xchg
sbb
imul
out
push
or
das
jns
xorl
xchg
lods
ljmp
pushf
scas
test
scas
jno
pop
scas
xor
fsub
mov
imul
fsubr
std
xlat
add
mov
imul
xchg
fidivrs
mov
lcall
xor
sub
ja
mov
mov
lret
cld
andb
jmp
adc
xor
adc
xor
jo
cmp
cmp
pop
hlt
mov
add
inc
xchg
and
pop
icebp
or
pop
dec
and
outsb
cmc
daa
or
lret
fdivrp
xchg
fcomps
cmp
add
cmp
adc
mov
jg
jbe
outsb
sub
ret
imul
ret
inc
mov
mov
pop
je
mov
adc
cmp
pop
inc
sbb
je
mov
add
aas
dec
cmpsl
push
or
jmp
mov
jg
sbb
and
std
mov
int
ja
lods
mov
xor
dec
popa
in
fimuls
sub
sub
mov
mov
or
scas
cltd
dec
fsub
cmpsl
test
in
mov
xchg
test
and
fsubrs
xor
cli
out
mov
dec
aas
mov
aaa
mov
mov
push
aam
push
or
jns
cltd
pop
sub
fsubs
mov
cmc
int
cmp
test
mov
sub
addl
std
bound
ja
jmp
aaa
sbb
jbe
mov
adc
adc
or
cld
cmp
xor
and
cmp
pushf
cli
xchg
icebp
call
test
mov
fs
je
xor
es
int
adc
in
jo
pop
xor
sub
rorl
adc
cltd
or
mov
xchg
mov
dec
push
rclb
aad
dec
sub
stos
dec
mov
mov
ret
cltd
dec
sbb
sub
scas
dec
leave
js
addr16
pop
push
idiv
and
and
sbb
mulb
loope
pop
cmp
out
sub
push
xlat
pop
push
stc
add
insb
sub
xor
jne
inc
loope
adc
lds
in
imul
dec
pop
iret
add
in
add
mov
adc
aaa
loop
jecxz
test
lret
dec
dec
mov
push
loope
ja
inc
sub
push
and
into
xchg
pop
jne
xchg
jge
push
mov
jbe
or
sub
sub
clc
sub
or
adc
cmp
jb
push
push
cmp
lods
cmp
sbb
imul
mov
dec
movsb
adc
cs
add
test
movsb
movl
or
xor
fidivrl
xchg
mov
imul
add
pop
pop
inc
mov
dec
lds
ljmp
pop
mov
pop
aaa
std
les
mull
nop
mov
shr
xchg
pusha
sub
rolb
xor
xchg
scas
ds
push
out
outsl
xchg
push
xor
lods
xor
lods
mov
out
fnstenv
in
or
jnp
sub
bound
ret
aas
xchg
xor
cltd
iret
iret
and
jne
enter
pusha
or
idivl
sbb
fdivrs
xchg
pushf
pop
adc
cs
pusha
mov
ret
xchg
dec
aam
bound
or
jb
dec
inc
cmc
in
pop
test
and
out
cli
inc
xchg
xor
sbb
je
dec
into
test
dec
addr16
jl
andl
inc
mov
movsb
jecxz
loop
fcoms
out
push
lds
in
push
mov
xchg
push
incl
mov
aad
mov
mov
mov
dec
loop
push
xor
pushf
imul
lock
or
xor
jmp
stc
sahf
dec
sub
cld
sbb
xchg
enter
arpl
sbb
sbb
push
sti
cmp
and
fsubrl
cltd
lds
cmp
jno
call
ja
cmp
xor
mov
pop
sbb
dec
es
mov
imul
adc
pop
dec
sbb
cmp
pop
or
add
mov
cmpsb
xchg
call
loop
jno
out
lret
push
cwtl
jns
adc
divl
xchg
imul
iret
mov
and
or
and
out
ss
lods
sbb
mov
dec
adc
lahf
lock
jle
mov
cli
neg
loope
mov
push
jb
pop
cs
push
cmp
movhlps
inc
inc
pushf
add
mov
xor
cltd
cld
jl
mov
mov
dec
into
dec
push
rep
aam
jmp
adc
and
lods
jmp
mov
inc
out
outsb
dec
aad
sub
inc
insb
jns
adc
enter
jmp
jbe
jmp
add
sub
nop
movsb
mov
clc
add
mov
jae
pop
dec
pop
inc
mov
lahf
jbe
pop
xor
shlb
rorl
or
inc
movsl
out
adc
dec
dec
fidivrl
movsb
pop
js
movsl
mov
cmp
call
push
enter
cmp
andb
sbb
dec
xor
mov
xor
push
ds
faddl
in
fdivrs
data16
enter
pop
loop
je
push
test
mulb
mov
push
outsl
xchg
in
ret
xchg
mov
jbe
xchg
movsl
bound
lods
leave
mov
je
call
add
xchg
or
int3
dec
sbb
bound
pop
pop
lds
test
inc
add
inc
leave
fldl
lret
arpl
cmpsl
inc
mov
add
in
aas
sbb
cltd
insl
xchg
out
popf
into
pop
push
aas
sub
pop
sbb
cmp
push
mov
pop
inc
sbb
insb
inc
lods
add
mov
adc
aaa
es
push
in
mov
test
lods
cli
mov
cmc
loopne
sub
cltd
dec
xor
xor
fldt
iret
xor
cmp
movsl
leave
shl
or
nopl
lret
sbb
dec
aaa
jae
add
lock
aam
sti
add
xchg
mov
adc
mov
xchg
mov
lock
imul
sahf
add
mov
jo
jne
stc
in
int3
sbb
sub
mov
add
in
xor
fisubrs
daa
incb
jl
adc
testl
mov
dec
push
shlb
into
and
bound
lea
or
test
xor
jecxz
fs
inc
mov
das
xor
xchg
jp
mov
jge
mov
lret
pop
xlat
pop
scas
decl
movsl
movsl
shlb
lds
xchg
jmp
or
daa
loop
mov
or
mov
clc
and
data16
push
rcrl
mov
add
and
mov
lods
sbb
sbb
cmp
loop
dec
out
mov
cmp
jecxz
fsubrl
and
js
fs
pop
push
decl
lods
mov
mov
xor
pop
repz
call
ret
dec
ficoml
je
sub
jb
xchg
push
inc
test
pop
xor
loop
out
daa
xor
mov
xor
repnz
leave
lahf
rcrb
add
jge
adc
mov
lock
sbb
cmpsl
loopne
rclb
hlt
rol
ficoms
jae
inc
mov
cs
adc
out
ja
pop
fucomp
or
mov
sub
das
mov
pop
jbe
cmpsl
mov
insl
push
out
or
adc
rcr
jne
stos
out
mov
lods
mov
sbb
data16
push
dec
jecxz
addb
out
jle
lahf
sub
add
lcall
shll
mov
les
icebp
cmpsb
ja
jl
push
xchg
dec
movsl
testb
pusha
stc
cmp
xchg
push
pop
sbb
or
filds
add
xchg
jnp
push
inc
xorb
scas
lods
sub
insb
inc
or
movsb
jb
cltd
std
sub
rorl
decl
notl
xlat
repz
sub
jmp
jg
ja
sub
aas
ror
jge
lahf
mov
fidivrs
imul
std
fldcw
das
cmpsb
mov
fwait
jge
cmpsb
out
cmp
sub
mov
pop
aaa
mov
fidivrs
jo
xchg
daa
mov
add
insb
sti
adc
xor
sbb
cmc
shll
or
out
add
add
cmpsb
and
xor
lock
mov
jecxz
orb
shlb
out
movsb
xchg
fsubr
shl
lahf
mov
jae
popf
scas
adc
es
negl
mov
mov
shr
pop
sub
push
xchg
push
jo
jae
fwait
sti
pop
insl
inc
sahf
adc
das
inc
lock
mov
scas
clc
daa
or
sbb
fucomip
leave
pushf
cli
pop
cmpsl
out
add
adc
jbe
adc
inc
push
test
jo
jb
jne
sbb
cli
xchg
cmp
ja
pop
and
scas
dec
out
mov
repz
pop
fsubl
je
adc
ret
push
dec
cmp
rcl
xor
xchg
mov
sub
adc
int3
iret
loope
jne
jp
out
xchg
testb
sub
sahf
aam
mov
sti
jae
cmp
xchg
cmpsb
mov
push
sbb
mov
cmc
sbb
aad
addr16
out
adc
cmp
sbb
enter
cs
test
xor
aas
lods
jnp
stos
daa
sbb
adc
nop
mov
nop
cltd
pusha
mov
data16
into
pop
lret
in
addr16
inc
test
in
xchg
mov
or
data16
xor
je
lock
fs
mov
mov
dec
pop
repnz
jp
lahf
pop
shrb
mov
faddl
sub
push
aas
adc
fidivrl
jge
pop
cmpb
mov
xchg
mov
mov
mov
fwait
movsb
xchg
pop
stc
adc
repz
fisubl
pop
outsb
jmp
popa
cmpl
out
cmpsl
outsb
push
dec
add
xchg
adc
push
xor
cmpsb
sub
ss
fcmove
dec
mov
aad
inc
inc
or
scas
inc
hlt
bound
lea
and
aad
jg,pt
out
pop
out
pop
push
lock
nop
inc
pop
stc
mov
insl
jmp
loopne
inc
dec
jo
cltd
and
push
mov
and
test
mov
and
cld
mov
dec
dec
mov
push
mov
sbb
aad
test
rcrl
imull
pop
xor
pop
cmpb
sub
clc
or
xor
add
fcom
dec
adc
cmp
jecxz
mov
mov
fsub
push
push
stc
shrb
addr16
xor
inc
jecxz
jae
push
sbb
leave
adc
or
out
push
xchg
aaa
icebp
inc
lcall
roll
out
das
jo
mov
mov
lahf
push
pop
repz
inc
fwait
xor
cs
aaa
xor
mov
jecxz
ret
repz
jns
dec
cld
lcall
in
stos
xchg
pop
js
push
xor
test
lock
cmp
int3
test
test
push
lds
icebp
xchg
mov
jp
dec
mov
pop
cmp
in
add
jb
lods
ret
frstor
mov
test
push
jo
adc
popf
cmp
in
aas
mov
in
daa
jb
nop
sub
jbe
xor
outsl
scas
adc
addr16
lods
shrl
jmp
mov
dec
mov
push
fnstcw
or
jp
ss
ret
nop
loop
push
sarl
and
dec
pop
inc
jmp
pop
shl
cld
sarl
mov
mov
mov
inc
addl
gs
ror
fs
dec
sub
data16
adc
movsl
icebp
in
std
and
movsb
mov
rol
lods
mov
sbb
pop
out
pop
add
xchg
or
sbb
in
jo
add
movsl
cmp
mov
aad
jmp
fimuls
iret
insl
inc
dec
rclb
mov
pop
rcrl
mov
push
outsb
imul
sahf
xor
pop
ds
mov
pushf
xor
or
mov
sub
cmp
decl
push
inc
mov
addb
cli
repz
ret
lcall
in
sbb
mov
in
mov
lods
loope
mov
mov
add
push
or
fs
push
call
jp
ljmp
rol
lret
mov
dec
fcomip
sub
pop
and
incb
orps
popf
push
in
imul
mov
dec
push
or
aam
inc
sbb
jae
lret
cmpsl
ds
pop
hlt
pop
push
jnp
jbe
or
xchg
lcall
test
stos
mov
fnsave
jg
dec
scas
cmc
mov
test
mov
fists
fistl
dec
out
insb
adc
sbb
rcl
dec
pusha
jge
roll
sarb
out
dec
loope
push
movsl
mov
xchg
push
adc
fs
fidivrl
ja
leave
jne
sub
add
xor
inc
fdiv
jnp
push
mov
sub
ss
in
and
je
adc
icebp
jo
aaa
xchg
push
mov
lods
lds
fsubrp
mov
mov
popa
or
push
fldt
or
mov
bndldx
push
cmp
fildl
xorl
in
loopne
hlt
cmp
mov
adc
jecxz
and
lods
inc
testb
inc
lret
adc
dec
into
jae
int3
and
xchg
daa
mov
rolb
push
sub
std
cltd
dec
dec
ss
je
rcrl
jnp
pop
fucomip
nop
incl
inc
xchg
cltd
lods
jmp
mov
ficoml
daa
fsts
xor
jne
adc
cmp
mov
inc
sbbl
xor
mov
mov
inc
nop
inc
stos
lret
int
mov
loope
mov
addr16
int3
fiadds
cmp
mov
mov
int
jo
adc
or
adc
arpl
jle
out
rcrl
pop
ret
hlt
add
pop
iret
push
in
add
jmp
push
es
or
xor
cld
dec
inc
lods
sbbb
xchg
mov
aaa
icebp
shr
mov
mov
inc
addr16
and
mov
pop
fmuls
rolb
out
add
inc
push
jno
xor
xor
mov
movsl
mov
xlat
dec
adc
jge
mov
fisubs
sub
fldl
push
cmc
repz
insb
and
dec
push
mov
imul
mov
xor
mov
xor
adc
sbb
test
imul
jnp
xchg
xor
mov
addr16
mov
or
sbb
xor
stc
dec
das
mov
sbb
test
cmp
and
xor
adc
dec
push
out
push
xchg
sbb
outsb
sub
les
jb
mov
xchg
dec
pop
test
sub
pop
or
ficoml
lret
clc
icebp
add
mov
xor
mov
mov
and
adc
jnp
mov
js
jl
inc
mov
or
stc
sub
clc
add
je
call
mov
push
mov
cwtl
dec
xor
dec
enter
lret
ss
jbe
adc
mov
jae
xsave
jns
xor
lret
loop
mov
mov
inc
adc
in
pushw
inc
and
js
jge
xacquire
cmc
stos
jmp
addb
or
stc
adc
mov
push
xchg
push
cmp
add
dec
sbb
jo
mov
loope
mov
jbe
aad
mov
mov
xor
sub
or
cmpsl
addr16
pop
sbb
in
loopne
push
stos
outsb
mov
cmc
mov
pop
pop
add
pop
push
ret
pusha
outsl
pop
addr16
adc
pop
and
mov
adc
mov
cmp
les
shlb
add
jae
test
pop
or
pop
pushw
pop
clc
ds
or
jns
dec
loope
in
outsb
add
out
jae
inc
arpl
inc
outsb
repnz
std
inc
fdiv
jae
push
arpl
jbe
sbb
in
jae
fcoms
addr16
sbb
ss
ljmp
ror
cld
imul
fisttpl
imul
testl
mov
push
jnp
inc
dec
cmpsb
mov
shlb
int
lods
inc
push
adc
mov
xor
arpl
loopne
scas
sub
pop
cwtl
inc
scas
test
out
ja
mov
push
repnz
xchg
sub
shll
mov
jmp
or
and
daa
mov
xor
inc
lock
sti
push
inc
sahf
in
imul
mov
pop
xor
ret
pop
lods
push
ficomps
pusha
repnz
shll
insl
movsl
rcrb
inc
jmp
repz
push
xchg
sub
les
testb
xchg
ss
scas
dec
push
and
nop
xlat
mov
pop
mov
popa
les
imul
mov
and
neg
call
jne
lret
out
mov
lods
out
dec
fimuls
aas
mov
outsl
shl
jp
lret
xchg
jmp
lods
lcall
inc
cmp
jbe
mov
rclb
push
test
repnz
xlat
repz
sub
bound
mov
fiaddl
xchg
and
hlt
fistpll
adc
and
popf
pop
jge
xchg
xor
and
lds
jmp
daa
popf
push
jecxz
int3
mov
jnp
in
loop
or
stc
xchg
xor
sbb
in
roll
pusha
xor
leave
insb
mov
sarb
jne
dec
pop
icebp
jge
ja
test
js
std
and
insl
xchg
sahf
xor
pop
aaa
inc
in
mov
and
fldenv
clc
cmpl
and
inc
push
movsl
fistpll
pop
out
sbb
jbe
into
pop
xor
mov
xor
imul
lods
loopne
jne
mov
flds
xchg
mov
push
sbb
stos
jmp
or
mov
inc
inc
mov
notb
sub
ret
out
subb
push
ljmp
pop
loopne
mov
xor
popf
xchg
leave
push
fwait
jae
sbb
fnstsw
out
jnp
std
jge
stos
std
enter
lret
dec
aaa
cli
divl
push
sub
pop
rorb
js
cmp
jmp
mov
sub
jmp
sub
mov
cmp
mov
xchg
push
mov
jmp
leave
cld
outsb
cmp
pop
or
mov
mov
push
mov
pop
jge
pushf
jg
sbb
mov
aaa
loopne
sub
test
sti
mov
dec
inc
nop
ljmp
out
clc
xchg
mov
adc
cmp
int3
adc
jo
pushf
adc
mov
pop
and
lods
adc
mov
mov
hlt
mov
push
rol
jge
popa
pop
es
sbb
pop
sbb
out
fiadds
sub
sbb
imull
sub
add
xchg
mov
cwtl
dec
pop
mov
adc
btc
mov
mov
adc
dec
ss
pop
jne
lret
es
xchg
in
dec
cmpsb
mov
push
mov
dec
cmp
aad
dec
pop
pop
movsl
call
mov
pop
test
arpl
sbb
dec
movb
lcall
push
mov
push
or
ss
loop
arpl
stc
cld
movsb
shlb
or
pop
in
cs
cld
cmpb
jno
add
xor
push
adc
jp
scas
add
inc
fidivrl
mov
jmp
mov
mov
jo
shrl
inc
pop
out
iret
jnp
mov
push
fidivs
xor
jo
sti
das
jns
jne
leave
jbe
clc
cltd
faddp
fdivrl
insb
hlt
mov
mov
mov
addr16
hlt
xchg
into
popl
bound
cmp
scas
lods
mov
jne
mov
adc
lcall
xor
dec
data16
popf
fwait
xor
mov
mov
or
pop
cmp
scas
push
lahf
xlat
loopne
and
cmp
add
sti
repz
sarl
push
mov
push
or
pusha
lea
out
ja
daa
xchg
sub
push
push
std
mov
enter
ret
dec
pop
popf
sti
mov
std
sub
test
in
das
xchg
xchg
dec
test
cmpsb
dec
pop
mov
inc
cmc
dec
test
cld
sbb
hlt
dec
sbb
mov
insl
dec
jecxz
outsl
and
jns
mov
enter
out
add
jbe
pop
hlt
leave
pop
jmp
dec
or
test
mov
cmpsb
adc
mov
rol
xchg
cmpsb
addr16
stos
sarb
push
orb
jb
insl
dec
fcmovb
das
cmp
lods
xor
mov
in
xchg
inc
gs
dec
adc
lock
ret
inc
loope
jle
or
fidivs
sbb
adc
incb
xor
pop
cwtl
jnp
or
jle
inc
leave
int
jmp
mov
and
sbb
push
sub
mov
sti
xchg
sub
xlat
aam
push
insb
or
lcall
enter
shrl
lea
movsl
ret
lret
and
jo
pusha
cmp
xchg
xor
cmp
into
ljmp
mov
jp
push
inc
clc
loopne
mov
es
push
jno
and
loope
stos
mov
sbb
inc
mov
jnp
mov
fmull
lcall
cli
mov
cmp
in
mov
mov
lock
jmp
mov
add
mov
jmp
loopne
test
sub
mov
bound
insl
dec
lock
sti
mov
mov
loop
jmp
aaa
mov
insb
andl
dec
jne
ja
movb
dec
dec
cmp
cmpb
xor
push
mov
pop
repz
jp
mov
jge
lods
sub
cli
shll
dec
sub
jp
stos
repz
mov
sbbl
and
mov
cmp
push
ds
mov
fldt
and
shlb
xor
in
ss
insb
mov
in
loopne
jl
mov
xor
repz
inc
xchg
inc
jbe
leave
cmpsl
pop
shl
inc
mov
dec
hlt
push
fwait
mov
jno
lods
scas
pop
xchg
xor
push
stos
add
pop
xor
sub
repz
cmp
sbb
sbb
dec
or
dec
push
sub
dec
loopne
mov
add
ss
test
popa
dec
dec
adc
fbstp
mov
jge
or
add
cli
pop
mov
mov
movsb
or
insb
jg
fsubp
sub
repnz
mov
jae
cli
push
stos
mov
aam
sub
clc
pop
ficoml
push
cs
fisttpll
jne
lods
ja
mov
xor
lods
sbb
push
in
push
notb
pushf
sbbb
test
pop
iret
sub
pop
push
test
add
inc
mov
push
repnz
imull
jp
mov
idivb
sbb
int
pop
jno
fistl
mov
mov
jecxz
push
xorl
cmp
call
mov
imul
mov
xchg
fstpl
push
out
rcrb
stc
mov
rcl
push
dec
inc
or
push
lock
js
scas
pop
loope
sbb
movsb
inc
mov
aam
loop
cmp
xchg
cmp
and
jne
cli
mov
pop
cmp
pop
jnp
fldenv
sbb
jle
add
aas
inc
les
pop
and
popf
jbe
or
sbb
sub
ljmp
and
or
or
lods
cmp
and
dec
lret
xor
xor
and
fcompl
mov
sbb
jge
xrelease
jne
xchg
prefetchnta
and
cmpsb
fidivs
in
fs
dec
cld
roll
mov
lahf
and
dec
lcall
sbb
mov
cmp
dec
ret
gs
push
int3
xchg
shr
leave
cmp
imul
add
cs
mov
sub
mov
mov
mov
mov
inc
dec
push
adc
push
xchg
cmpsl
fbld
leave
pop
repnz
jns
cmp
mov
inc
int3
shrb
cwtl
xor
jbe
xchg
sub
mov
mov
dec
pop
repz
popa
add
pop
mov
adc
test
add
lret
inc
out
into
andb
lret
cmpsl
ds
cli
push
ljmp
es
pop
pop
xchg
jp
mov
inc
int3
pop
push
adc
insl
aad
out
fimull
ret
ficompl
imul
cmp
fisubrl
mov
out
fsubrl
fs
in
adc
xor
insl
cld
jnp
sbb
dec
pushf
andl
imul
xchg
movsb
fs
mov
mov
ljmp
sub
arpl
movsl
shll
sbb
dec
dec
daa
clc
stos
push
jnp
imul
in
jns
jmp
sbbb
mov
cmc
lret
cmp
adcb
lods
hlt
push
inc
cmpsb
cmpsl
dec
and
jmp
imul
jg
shlb
adc
test
jno
icebp
cmpsl
inc
sbb
push
pop
cmp
test
jno
aas
les
mov
shrb
in
imul
leave
pop
sbb
incl
cmpsl
popl
enter
pop
popa
jg
mov
jnp
int
push
inc
inc
dec
mov
pusha
in
movlps
cmp
mov
ljmp
inc
sub
shrb
test
das
jnp
mov
dec
xchg
inc
popa
daa
push
scas
mov
jo
andb
xor
call
and
scas
sub
jns
in
dec
sbb
mov
sbb
jl
inc
bound
pop
mov
mov
mov
jnp
mov
mov
jno
cmpb
adc
aaa
sbbb
push
cmp
stos
mov
sbb
lahf
fbstp
sbb
std
mov
cmp
add
pop
mov
mov
mov
jne
out
lahf
lret
lret
dec
ljmp
imulb
push
aam
push
or
mov
mov
outsl
daa
sbb
jl
out
sub
pop
iret
sub
mov
mov
add
test
repz
in
push
testl
sbb
jecxz
adcb
mov
sbb
cltd
mov
dec
dec
clc
fdivs
inc
xchg
xchg
call
xor
ss
xor
mov
and
addr16
dec
cmp
cld
rcll
and
cmp
popf
shl
xchg
dec
dec
je
movsl
ds
jge
incl
inc
inc
mov
mov
dec
stos
les
sbb
pushf
std
lods
mov
hlt
jle
mov
xor
xchg
cmpsl
cmp
jge
jg
call
rcl
inc
add
mov
loopne
mov
movsl
cmp
xor
jge
mov
test
xchg
pop
mov
mov
or
insb
sub
sarl
lea
arpl
test
xchg
pusha
adc
pop
cwtl
inc
cmpsb
dec
xor
add
in
repnz
mov
cmp
pop
push
ja
lds
xchg
inc
mov
call
mov
push
sbb
out
test
orl
jg
icebp
xchg
cmp
sub
pushf
imul
mov
xor
mov
dec
lock
push
daa
mov
push
movsb
mov
lret
pushf
out
xchg
ljmp
sub
lods
jmp
cmc
popf
ljmp
ja
sbb
cs
outsl
arpl
jecxz
addb
scas
or
decl
and
inc
push
clc
jno
aas
push
xchg
lret
cs
jns
or
ret
stc
or
ret
shl
insl
jecxz
sbb
pop
out
add
fnstenv
and
jg
pop
loop
mov
dec
add
stc
mov
jae
xorl
ret
adc
lock
adc
or
aas
push
loopne
fdivl
in
out
out
lock
adc
ds
add
clc
sub
add
inc
aad
ss
xchg
stos
cmp
rcrl
jb
out
xor
cli
cmpsb
js
jbe
mov
sarl
inc
ja
cwtl
insl
add
inc
es
aad
push
scas
fldt
dec
int3
or
cli
sbb
in
inc
sbb
push
lret
stos
shll
push
push
mov
das
bound
pop
mov
pop
push
cmp
imul
xchg
add
fists
cmp
sbbl
mov
clc
aam
jecxz
scas
inc
add
adc
cmp
xchg
in
cmp
jp
push
or
sbbb
dec
cmp
testb
mov
push
imul
push
int
out
nop
ss
xchg
das
sbb
inc
xor
in
aas
bound
jg
jae
jmp
bsr
lods
cli
jecxz
ret
add
mov
shrl
xor
cltd
jae
out
mov
fcmovnb
aad
pop
out
inc
test
mov
cmp
sbb
adc
adc
cltd
repnz
pop
in
pushf
pop
ja
test
fldcw
inc
pop
dec
or
bound
xor
sub
out
push
cwtl
sub
lock
push
push
lea
insl
stc
ret
in
mov
fsubrl
jae
loope
gs
subl
xchg
add
ret
jbe
stc
mov
aad
xchg
pop
cltd
lods
fcmovne
jae
stc
mov
add
push
mov
ss
mov
cmp
pop
xlat
scas
int
popa
fdivs
int
lods
inc
xor
jno
cli
mov
adc
and
inc
push
and
scas
xor
sbb
outsb
mov
movsl
les
mov
sbb
push
bound
xchg
sahf
xor
rcll
mov
pop
adc
lods
shlb
sub
in
leave
sahf
cwtl
push
cmpsl
lcall
push
sbb
and
aaa
mov
cwtl
push
lret
xchg
cs
stos
movsl
jo
jbe
inc
jno,pn
in
jge
xchg
mov
ret
xor
sbbb
mov
je
mov
mov
dec
decb
cmp
pop
scas
aad
add
mov
push
das
mov
stos
daa
cltd
push
or
mov
js
adc
stc
pop
outsb
movl
sub
leave
or
aam
sub
test
pop
call
xchg
gs
jg
dec
mov
lods
adcb
dec
int3
fsub
add
aam
fwait
mov
test
mov
pushf
cld
adc
pop
xor
mov
mov
arpl
cmp
int
xor
fwait
aam
std
push
decl
sub
in
jnp
stc
inc
sub
xor
pop
sub
pop
pop
popa
cld
pop
mov
push
shrl
push
pop
pop
subl
xchg
mov
enter
imul
xor
inc
or
or
and
xor
push
mov
inc
sahf
pop
add
add
jae
dec
mov
mov
test
shrl
add
data16
andl
cmpsl
xor
adc
adc
cmp
mov
pushf
and
or
sub
mov
xor
mov
je
lods
push
cmp
mov
std
ret
push
call
add
notb
push
mov
jne
and
lcall
xchg
ss
lahf
jne
data16
imul
popa
inc
push
mov
jb
call
and
sub
pop
mov
hlt
mov
mov
insb
mov
andb
push
cwtl
jmp
and
xor
jb
fldcw
dec
sbbl
adc
mov
das
imul
xchg
test
lds
aam
inc
jb
or
scas
ret
adc
mov
cld
add
sub
add
imul
nop
popf
and
and
add
xchg
enter
xor
mov
lahf
or
fdivrl
mov
cli
xchg
ficomps
add
std
xchg
cld
sbb
hlt
push
push
jmp
inc
or
sbbb
pop
les
push
ds
adc
jp
adc
push
mov
inc
dec
push
or
mov
pop
scas
dec
dec
or
xchg
int
movl
mov
hlt
mov
inc
rcrl
jb
andl
dec
lret
mov
daa
pop
scas
xchg
pop
iret
dec
dec
dec
in
adc
pop
pop
sbb
dec
leave
int
mov
and
mov
inc
jae
leave
bound
mov
in
into
aas
mov
lcall
adc
out
fcomip
aad
out
movsl
cmp
inc
fwait
xor
pusha
pop
repz
sbb
out
xchg
inc
loop
ss
lods
ja
sbbl
int3
add
jbe
mov
addb
sub
lcall
xlat
outsl
movsl
adc
sbb
lret
cli
pop
ljmp
in
pop
loop
rcl
dec
jne
mov
in
and
jo
fnstsw
pop
or
xor
cmc
aaa
jecxz
jne
pop
iret
imul
paddq
jnp
clc
pusha
push
fiaddl
outsb
mov
cmpsl
mov
sbb
sub
jbe
xchg
xor
push
das
or
int
das
in
fisubl
aaa
sub
mov
fldenv
dec
add
push
cmp
push
inc
pop
testb
jnp
ja
ret
int3
loopne
cmp
out
dec
add
mov
ss
sti
xchg
sbb
pop
sbb
xchg
mov
daa
jmp
stos
fsubr
fistpll
and
jbe
popf
sbbb
mov
pop
cmp
cld
popf
outsl
mov
popa
jbe
int3
cmp
es
mov
arpl
or
dec
dec
bound
ret
push
dec
cld
pop
out
mov
lret
dec
cmp
mov
sahf
sarl
mov
push
dec
jmp
mov
mov
aaa
in
xlat
outsl
sub
jno
xor
rclb
orb
inc
fstp
in
adc
cwtl
cmp
aaa
fld1
sub
push
std
sahf
push
or
cmp
mov
and
sbb
notl
inc
or
test
jb
aam
xchg
push
add
adc
xor
stos
add
adc
aaa
pop
in
lea
add
cmpsl
stos
lods
push
and
icebp
or
mov
push
sub
test
xchg
stos
cmc
xchg
repnz
movsb
cmp
push
dec
fisttps
data16
jmp
es
xchg
push
jb
stc
mulb
enter
jns
dec
into
jecxz
idivb
push
in
daa
pop
adc
mov
mov
aaa
fldt
lcall
jg
mov
adc
addl
fs
cmc
mov
test
fucomp
xchg
fidivrs
inc
push
iret
mov
xor
dec
pop
js
inc
sub
adc
test
adc
jne
dec
jbe
call
or
xchg
mov
cmp
pop
mov
addb
lret
fstl
lock
sbb
dec
fsts
out
shrb
sub
addr16
mov
out
mov
mov
stos
xor
outsb
clc
add
insl
mov
enter
test
test
sub
inc
or
ljmp
push
cld
cmp
loop
mov
jo
mov
iret
pop
cmpsb
sbb
pop
stos
leave
sbb
lods
xchg
notl
jb
inc
in
jmp
adc
dec
xor
and
subl
sbb
lcall
lahf
push
lock
cs
pop
adcb
ds
adc
or
mov
mov
mov
pop
or
scas
cmp
aaa
mov
and
xchg
jge
leave
cwtl
add
int
scas
sub
mov
add
out
inc
and
inc
push
daa
mov
dec
enter
dec
pop
xlat
jnp
sub
lods
out
insb
sbb
psrlw
ja
lods
add
test
aam
pop
call
jbe
das
je
mov
cli
cltd
lds
fimuls
in
or
or
xchg
add
push
aas
or
fldl
sub
shll
sbb
adc
push
sbb
out
aam
xor
jp
lods
pop
clc
cwtl
add
negl
in
pop
adc
cwtl
pop
lea
lods
jg
xchg
push
sti
hlt
cld
loop
mov
sbb
in
jo
mov
icebp
adc
cmp
jle
fdivr
cld
sbb
jp
sahf
lcall
cmpsb
test
sub
mov
add
and
fidivrl
sahf
call
xor
lds
js
cs
pop
pop
inc
add
fbstp
shrl
arpl
and
sbb
insb
cmp
xchg
sub
add
cmpl
insb
sub
ret
imul
gs
aas
lods
mov
jb
das
cmp
insl
inc
and
push
cmp
dec
mov
pop
movsl
mov
fsubrl
or
mov
adc
xchg
mov
in
mov
scas
pop
scas
mov
cmp
add
add
popf
hlt
sarb
shl
icebp
mov
mov
arpl
mov
arpl
mov
and
pushf
enter
test
jae
xchg
mov
push
sti
inc
xchg
in
jg
lcall
sar
xor
pop
or
aam
pop
pop
ret
xchg
push
pop
mov
mov
pop
lds
stos
mov
and
in
les
cld
push
push
mov
fprem1
xor
jae
rcr
in
ss
stos
aas
mov
faddp
ficoml
jnp
inc
dec
mov
jmp
mov
mov
mov
pop
mov
add
pushf
data16
xchg
sbb
cmp
aad
pop
cwtl
aam
mov
jle
fldcw
inc
jg
decb
ljmp
andb
adc
or
adc
mov
push
mov
sahf
popa
jae
ja
add
jle
mov
jle
iret
scas
or
lret
or
jp
dec
ffree
movsl
cmp
negb
rcrl
sub
fwait
push
sbb
sub
pop
nop
dec
test
xorb
cmp
mov
inc
mov
add
cmp
push
out
xchg
mov
sbb
shlb
cmpsb
aad
jmp
movb
aad
test
jp
gs
scas
pop
cld
add
ljmp
test
and
lock
addr16
insb
sub
inc
pop
test
pop
mov
ret
pop
xchg
push
lret
lret
rcrl
aam
leave
scas
xchg
jo
cmp
push
mov
push
adc
adc
push
pop
jecxz
mov
mov
adc
loop
ljmp
pop
iret
ds
add
cs
adc
push
adc
add
mov
cmpsl
jmp
aad
inc
js
mov
mov
shlb
inc
push
and
add
fwait
dec
data16
and
inc
fnstcw
xchg
mov
pop
cmp
pop
jne
adc
mov
cmp
push
mov
cwtl
jp
cmc
mov
xchg
adc
mov
pop
xor
lods
call
test
fdivl
out
addr16
jno
inc
stos
in
jg
adc
mov
or
int3
mov
ret
cmp
cmc
frstor
sbb
bound
insl
add
xlat
into
lret
jae
push
hlt
mov
aas
lds
xlat
sub
xchg
pop
stc
or
push
popa
aas
ja
dec
pop
mov
or
mov
mov
xchg
mov
pop
adc
sbb
mov
shlb
xchg
cmc
cmp
mov
push
cmp
pop
loop
out
jmp
andb
lcall
adc
push
jo
sbb
imul
adc
pop
out
pop
sbb
cmp
dec
faddl
dec
or
mov
jecxz
or
decb
fldt
inc
scas
mov
bound
cmp
push
stc
sti
fists
fcmovbe
jge
into
out
cmp
push
lahf
and
inc
fnstcw
inc
test
push
pop
xor
jg
inc
mov
mov
and
div
imul
aas
push
subb
lcall
ja
add
dec
subl
stos
ret
rcrl
enter
pop
data16
inc
sub
mov
sbb
fwait
jnp
js
mov
sbb
or
orl
sbb
sbb
stos
call
bound
add
les
les
ja
xchg
adc
add
cmp
cmc
pop
sahf
in
mov
out
adcb
lret
sahf
loop
rclb
dec
data16
add
repnz
fldenv
mov
fucomi
or
mov
adc
stc
out
bound
push
stc
sub
repnz
mov
mov
mov
mov
mov
in
fwait
daa
sub
and
sbb
lret
sub
daa
or
push
jge
add
xchg
test
iret
movsb
and
into
rcrb
mov
int3
sti
inc
push
mov
iret
and
outsl
pusha
aad
cli
lea
pop
paddb
js
and
mov
fildll
pop
lock
cmp
mov
cmc
add
add
cwtl
add
pop
cmp
and
fldl
mov
mov
mov
iret
jmp
fs
dec
lret
ret
cmpsl
sti
mov
add
div
negl
sub
pop
adc
and
pop
daa
inc
fistl
or
leave
daa
lods
mov
pusha
and
faddl
gs
mov
mov
push
mov
xchg
cld
inc
dec
or
inc
dec
cmp
imul
xchg
mov
mov
add
push
test
loope
push
inc
xchg
push
les
daa
lahf
negl
jbe
and
or
cltd
pop
pop
jg
xor
arpl
mov
jb
daa
outsl
orb
cmp
mov
loopne
rclb
and
ds
fsubrs
dec
jg
cmc
xchg
jecxz
or
shlb
xchg
pop
ljmp
add
pop
lahf
xrelease
leave
and
sbb
jo
shlb
mov
and
ljmp
jge
flds
jg
inc
sbbb
push
hlt
or
int3
xchg
jns
fwait
push
jne
or
inc
stc
jg
sub
pop
aaa
hlt
faddp
ljmp
repz
dec
xor
inc
xchg
dec
mov
fidivl
xor
fnsave
inc
mov
mov
rcrb
mov
push
repnz
cmp
imul
cld
or
pop
push
and
mov
add
fisttpll
sub
mov
mov
sbb
and
aam
and
sbb
push
cltd
movsb
mov
cmc
sbbl
lcall
push
nop
sbb
lret
mov
cli
pop
mov
movsl
das
repnz
mov
jmp
cld
or
sbb
mov
adcb
sbb
ret
push
adc
push
sbb
push
xor
pop
test
cmp
les
in
and
dec
sbb
xor
jmp
shll
jns
sti
adc
push
xor
lods
sub
jp
js
in
pop
in
jne
cmpsb
mov
mov
mov
lahf
jns
mov
lods
cmpsl
nop
and
xchg
rclb
divb
and
add
adc
push
daa
jle
imul
inc
lods
pop
xchg
fiadds
pop
sbb
lock
mull
dec
in
jno
or
jns
sub
add
push
lods
and
or
outsb
add
pop
ja
mov
push
xor
mov
popa
and
mov
sbb
xor
cmpsb
out
cmpb
test
stc
cmp
sbb
xchg
notl
lds
pop
adc
repnz
cwtl
das
jbe
push
rorl
pop
out
pushf
mov
jbe
scas
dec
out
in
xchg
or
neg
imul
call
shr
stos
sbb
loopne
sti
add
out
adc
and
lock
add
aas
bnd
pop
popa
cvtdq2ps
pop
cs
adc
and
aam
and
lds
mov
addb
shll
or
cmpsb
aad
inc
dec
cmp
sub
inc
sbb
jne
dec
pop
cmp
adc
mov
movsb
repnz
ljmp
ret
cmpb
add
insb
ja
scas
mov
jno
dec
add
fildll
stos
scas
pop
mov
mov
xor
xor
arpl
mov
push
push
or
ficompl
jne
push
push
sub
or
cmc
mov
fbstp
scas
pop
scas
push
fcoms
scas
nop
xorb
in
call
insl
ret
jp
call
mov
in
mov
cmpsl
add
pop
outsb
and
push
cwtl
test
stc
and
mov
sti
pop
add
adcl
mov
outsl
rcr
cwtl
clc
adc
cmp
xchg
sbb
das
lds
mov
push
outsb
xorb
sbb
xlat
in
mov
mov
popf
cmc
or
mov
add
pop
push
adc
test
scas
call
push
pop
and
bound
nop
xchg
fiaddl
jg
in
test
cmp
mov
fstpt
roll
fsubr
pop
jae
in
mov
add
or
or
mov
test
stc
in
ss
mov
pop
daa
inc
push
leave
xchg
clc
das
into
dec
fcom
cmc
cmp
jne
enter
sub
insl
mov
ficoms
pop
dec
mov
popa
arpl
xchg
add
flds
into
in
addr16
ds
int3
and
inc
shr
sti
frstor
push
es
loope
cli
ljmp
aaa
test
scas
into
fimull
mov
mov
test
sti
popf
out
shrb
cmp
js
add
sub
sti
jp
xor
fists
or
and
imul
sub
sub
cmp
sub
xor
mov
rclb
ss
imul
add
jb
mov
fldl
add
inc
fmuls
shrb
mov
cmp
sti
add
sbb
cs
mov
inc
cld
stos
shrb
pop
push
push
mov
fdivr
jae
mull
or
mov
orb
or
push
fwait
imul
insl
pop
test
sti
inc
or
int
mov
cmp
pusha
fimuls
rcrl
dec
mov
dec
dec
in
mull
inc
or
imul
rcrb
push
cmp
push
daa
adc
fs
and
jmp
or
push
mov
jp
jnp
or
add
rcrb
nop
aaa
jp
rcr
lds
loop
mov
jecxz
push
sbb
test
xchg
pop
adc
rolb
in
mov
jno
jns
adc
arpl
jecxz
nop
xchg
andl
and
lds
mov
sbb
sbb
sub
repnz
jg
fldcw
repnz
push
fbstp
or
adc
shlw
lret
in
push
insl
call
mov
mov
dec
int
dec
xchg
pop
outsb
cmp
push
insb
dec
pop
cmc
inc
add
mov
movsb
jmp
out
cld
aas
or
lret
xchg
cmp
lds
cmp
lret
push
inc
sbb
jle
xor
mov
push
xchg
div
or
cmp
insl
mov
mov
sbb
rorl
test
ja
lock
push
in
mov
int3
xchg
pop
dec
loopne
jle
lret
pop
mov
sub
mov
jp
push
out
sub
push
adc
popa
jmp
add
sub
mov
lds
pop
jg
pop
pop
lods
pop
jns
int
insb
push
xchg
mov
movl
xchg
adc
ja
shlb
movsb
aaa
hlt
int
fsubr
jl
iret
cmp
xor
sbb
push
cld
adc
jae
lahf
jle
pop
sub
fldl
push
mov
xchg
cmpl
bound
mov
mov
push
push
into
int
and
xlat
push
cmp
ss
movsb
in
pop
adc
lret
xchg
out
movsl
pushf
pop
lahf
jmp
out
aad
js
fcoml
int
push
jg
pop
in
idivb
cmp
cmp
dec
push
mov
dec
dec
jecxz
adc
pop
repz
mov
push
push
inc
xor
loopne
mov
inc
addr16
pop
or
lret
and
sub
ficoms
movsl
push
in
xor
shll
pop
out
adc
popf
push
or
cmp
ret
enter
cmp
test
popf
xchg
adc
mov
or
pop
out
dec
xorb
lcall
jnp
mov
out
stos
inc
jmp
pop
xchg
imul
cmpsb
sarl
mov
pop
pop
ds
rclb
mov
popa
stc
shl
jbe
lret
out
leave
and
cmpsb
dec
pop
dec
ret
test
test
pop
ss
in
insl
icebp
cmp
pop
imul
mov
fsubrs
das
or
lods
popa
dec
scas
lcall
cltd
mov
or
jo
mov
inc
leave
xchg
adc
mov
fistpll
push
mov
cmpsl
jb
loop
adc
cltd
testl
dec
outsb
out
icebp
fwait
xchg
ret
xor
mov
loopne
fstpt
les
inc
jmp
push
jns
push
es
sub
mov
repz
mov
adc
dec
pop
hlt
or
xor
fs
cmpsl
cmpsb
xchg
pop
lret
or
jmp
ja
test
jge
in
dec
sub
adc
adc
add
mov
ja
mov
add
lcall
mov
adc
pop
mov
ja
xchg
cmp
and
enter
rclb
add
xchg
xor
sbb
mov
sub
cld
jle
cmpsb
inc
sub
mov
jbe
testb
push
ficoml
sarl
add
push
insl
lahf
bound
push
das
jns
sub
leave
inc
or
aam
in
mov
jne
xlat
stos
test
in
lods
ljmp
pushf
dec
sub
lds
ficomps
ret
mov
in
pop
das
mov
dec
jns
daa
jecxz
mov
mov
push
scas
sub
and
lea
enter
sbb
jbe
outsb
inc
add
clc
or
lret
jno
imul
movsl
add
jmp
jae
xchg
sub
inc
sbb
mov
lods
lret
inc
dec
mov
je
or
mov
test
push
jle
mov
push
add
popa
sub
fwait
outsb
adc
shl
add
bound
push
xchg
jl
ljmp
loopne
lock
xlat
jl
cld
mov
int
pop
rcrb
add
mov
lds
xchg
push
mov
xor
loopne
xchg
xlat
dec
loope
mov
shll
or
testb
or
sub
xor
std
cwtl
xchg
js
ljmp
adc
cmp
addr16
or
lcall
and
je
jle
add
xchg
pop
xchg
enter
dec
mov
or
add
cmc
aam
cmp
lods
mov
es
jge
mov
jp
in
rclb
in
addr16
icebp
lock
fistpll
aaa
dec
mov
enter
test
mov
cwtl
cmpsb
aas
hlt
xchg
xor
test
popf
mov
push
or
xorl
pop
xor
jne
scas
sarb
seto
stos
shrl
out
call
dec
loope
pushf
icebp
enter
add
leave
xchg
lds
jg
aad
sahf
push
push
test
mov
aad
lods
aad
sbb
cwtl
dec
ss
cmp
lds
cmp
xchg
mov
loopne
jo
and
jnp
test
movsl
lret
dec
icebp
stos
cli
push
sub
ja
jno
sbb
push
bound
out
rorl
lcall
sahf
stos
fidivrs
test
cwtl
fdivl
push
decl
aaa
jbe
cld
movsl
cmp
jle
jb
clc
ds
pop
fnstsw
arpl
push
add
int3
fdiv
push
add
lods
clc
adc
cmpsb
pop
mov
jg
sbbb
movups
fisubs
and
cs
incb
in
ret
jno
sahf
mov
imul
add
in
dec
inc
pop
or
xor
es
mov
imul
das
pop
cmp
mov
lock
push
fldenv
mov
jle
scas
xchg
cmp
ja
sub
inc
loope
ja
les
shll
adc
cmpb
fmul
mov
mov
flds
out
test
cmp
clc
or
shll
and
mov
push
or
cmpsl
pop
out
or
inc
push
mov
xor
lock
dec
or
aaa
cmpsb
sbb
js
cmp
mov
cs
add
sbb
inc
repz
and
adc
adc
push
mov
shl
push
pusha
subl
fmuls
dec
cmp
dec
sub
xchg
mov
jp
or
jnp
dec
jg
out
fs
push
lods
test
mov
iret
and
mov
jb
dec
iret
inc
ss
je
sbb
push
inc
fnstenv
roll
xchg
adc
inc
into
arpl
imul
inc
cmp
xor
arpl
pop
test
xor
mov
jae
pop
inc
xor
je
jae
mov
push
stc
test
adcb
fmul
mov
ror
push
jns
insl
imul
xor
out
icebp
mov
xchg
out
gs
int3
mov
mov
sub
cmp
mov
movntq
or
sbb
clc
push
test
insl
outsb
mulb
inc
fmul
scas
out
leave
pop
ret
lahf
negb
arpl
cli
iret
xor
inc
sbbl
xor
xchg
adc
add
lods
in
in
int
outsl
push
stos
data16
push
bound
fldcw
push
inc
jb
sbb
xor
jne
push
cmpsl
pop
mov
je
or
jae
repnz
pusha
rcl
adc
mov
mov
or
lahf
push
sub
test
adc
loop
adc
or
push
mov
sub
add
push
imul
test
cmpsb
call
xchg
dec
or
mov
mov
mov
dec
push
cmpsb
lcall
sbb
jns
mov
jmp
add
jp
and
int
jg
fnsave
adc
es
cld
scas
mov
lods
mov
imul
inc
add
mov
mov
inc
aaa
inc
cld
lods
out
inc
mov
add
imul
in
incb
sub
sub
jg
mov
mov
adc
cmp
xor
pop
xchg
pop
jnp
ljmp
mov
out
add
and
mov
sbb
ds
sbb
shl
test
insb
pop
ret
jno
hlt
pusha
repz
jne
push
jbe
xchg
scas
mov
xchg
inc
pop
add
lret
sub
hlt
adc
lea
and
sbb
mov
or
ds
fadd
out
jmp
inc
inc
xlat
and
jp
cld
jmp
or
incb
xor
xchg
dec
loopne
insb
repnz
hlt
adc
rcl
pop
xor
mov
push
out
push
jecxz
add
xor
push
push
rclb
mov
sbb
mov
mov
out
rolb
cmpsb
inc
mov
inc
sbb
stc
inc
add
mov
lret
lds
xor
or
or
daa
mov
xor
xchg
push
fsubrs
lock
xchg
jecxz
pop
push
sbbl
pop
mov
stos
aas
imul
cmpsb
pop
adc
pop
push
fdivrs
mov
imul
mov
scas
push
mov
sub
jnp
adc
pop
mov
mov
fdivrl
in
inc
mov
orb
decb
jle
inc
sti
das
xchg
sbb
mov
enter
adc
lret
lret
dec
out
and
leave
test
pop
push
adc
je
into
andl
lret
pop
mov
pushf
jo
decb
or
push
es
outsl
cli
scas
mov
shll
adc
mov
or
lea
jae
adc
cwtl
in
jae
xor
cmp
out
cli
mov
test
leave
movsb
mov
pop
push
out
cmp
loopne
push
mov
test
cmp
and
mov
mov
stos
std
sbb
xor
in
jae
or
cli
push
and
lret
in
xchg
sub
inc
jg
mov
int
mov
mov
ret
outsb
jb
inc
push
mov
adc
rcrl
arpl
sbb
pusha
nop
daa
xchg
mov
in
cmp
cmpsl
dec
cmp
add
and
ljmp
sar
mov
mov
sbb
out
sbb
pop
mov
push
xchg
pop
fbstp
out
push
jnp
add
xchg
cli
int3
fdivs
sbb
sub
mov
and
psrld
and
sbb
dec
inc
add
xor
shll
lret
pop
out
push
das
inc
dec
cltd
mov
lods
adc
lret
cmp
scas
jb
sub
push
pop
cmp
dec
dec
mov
add
pop
jecxz
cli
dec
pop
mov
adc
mov
test
shlb
rol
outsl
add
inc
mov
sub
mov
inc
pop
imul
gs
and
lock
push
nop
mov
dec
dec
and
mov
in
addr16
pushf
test
xchg
sub
jmp
fwait
sbb
aad
sbb
je
push
loopne
cmp
xchg
sbb
jae
fisubs
add
lahf
je
fcmovne
sbb
jle
add
sub
mov
outsl
loop
int
sub
lods
lret
fstpt
out
sub
xchg
mov
xchg
loope
jns
pop
jb
ds
pop
sahf
loopne
iret
jg
scas
jo
nop
addr16
lcall
ret
icebp
loope
and
mov
add
imul
xchg
mov
xlat
mov
flds
sub
cmpsl
gs
fldt
cs
arpl
je
adc
ss
jmp
lea
test
jg
dec
mov
testb
and
push
mov
inc
stos
xchg
push
shlb
jge
and
and
mov
push
xchg
gs
movsl
mov
shlb
push
cli
jge
adc
xorl
dec
bound
stos
lea
push
loop
add
lcall
mov
insl
and
push
shrb
jae
int3
cmp
cmpxchg
les
cld
fwait
repz
push
test
mov
popa
cmpl
add
into
add
pop
test
or
popa
lods
outsb
or
aam
or
test
and
sahf
mov
xchg
cmp
inc
jo
xchg
push
push
push
xchg
pushf
add
sbb
insb
cmp
sbb
ret
pop
inc
lods
mov
adc
mov
inc
or
jbe
sub
sub
xor
cltd
divl
mov
outsl
dec
xor
popa
imul
jne
xor
in
and
or
add
sub
or
mov
jns
pop
cmc
mov
jns
sub
adc
call
dec
shrl
scas
push
stos
mov
push
stos
jg
aam
rcrb
mov
mov
rorl
cld
lock
bound
and
int3
dec
jmp
das
pop
sahf
push
jne
lcall
ret
push
inc
mov
popa
fsubl
out
dec
inc
lret
pop
sub
movsb
loopne
mov
lock
ss
hlt
popf
stc
xchg
dec
out
xor
xlat
jmp
loop
mov
out
cmp
adc
iret
ret
or
pop
shlb
push
fwait
aaa
xor
sub
push
and
mov
stos
mov
data16
hlt
xchg
testl
jg
inc
cli
ficoms
outsb
ljmp
icebp
pop
pop
aad
mov
repz
mov
jmp
push
or
mov
loop
jb
cli
mov
lahf
add
mov
pop
cmpsl
test
in
cld
popa
mov
les
push
mov
inc
loopne
mov
shr
call
mov
mov
xor
sbb
pop
in
jnp
cmc
push
cwtl
das
sub
jo
dec
arpl
push
insb
sub
push
cs
inc
xchg
scas
inc
roll
leave
imul
mov
outsb
test
insb
inc
add
cmp
xchg
adc
hlt
ja
xor
in
into
adcl
xor
jo
adc
and
and
and
test
fcomps
into
imul
mov
dec
imul
mov
fdivl
testl
adc
sub
or
xchg
adc
or
pop
pop
out
jns
pusha
mov
cld
add
add
fisubrl
pushf
insb
mov
sub
imul
pop
es
inc
leave
and
push
outsb
inc
aas
mov
dec
into
loop
mov
and
mov
arpl
cmp
cmpsl
pop
xor
nop
in
fwait
jbe
sbb
inc
fnstenv
mov
or
pop
xor
push
mov
cmp
jo
sahf
sub
aas
aad
or
pop
push
inc
out
cmpsb
les
cmpsb
mov
and
out
rorb
divl
pop
popl
shlb
adc
mov
aaa
stos
mov
imul
adc
mov
sub
jno
xor
sti
lods
jnp
imul
and
out
mov
inc
cmp
jmp
add
xchg
fbld
jno
dec
movsb
sti
cld
daa
fdivl
cltd
jnp
inc
clc
cli
and
cmp
jge
add
test
jo
xchg
fisttpll
sbb
mov
add
cmpsl
inc
arpl
jge
push
ds
enter
mov
adc
js
mov
rorl
loop
insb
cmp
dec
bound
test
iret
clc
push
shll
hlt
fldcw
jge
pop
lds
test
ja
pop
je
mov
mov
pushw
xor
aam
add
pop
out
test
addb
xchg
push
loopne
push
std
inc
das
cmp
jno
sahf
and
jecxz
push
dec
jmp
imulb
add
cld
mov
cmpsb
push
rolb
push
mov
bound
push
insb
xor
pop
jb
mov
stos
sbb
pop
jns
std
push
xor
cli
push
xchg
or
add
add
add
jne
int3
push
lea
imul
push
stos
inc
inc
or
jge
out
daa
pop
popf
jmp
cltd
jbe
xchg
jmp
sub
clc
pushf
sub
jp
jge
divb
scas
mov
inc
cs
popa
and
or
sbb
mov
les
dec
in
fisubrl
cmpsl
sub
mov
fwait
and
mov
push
jae
add
les
jns
cmc
rol
pop
cmp
iret
arpl
std
popf
jo
pop
fdivr
jecxz
fistl
jecxz,pt
cmp
sbb
mov
addl
push
sbb
xchg
je
mov
ss
xchg
scas
ja
jge
loopne
pop
icebp
xor
out
stc
iret
fsubl
or
icebp
jg
lret
mov
inc
dec
push
sbb
jb
mov
ficoml
data16
fidivl
lea
fldenv
push
cltd
stos
ja
jno
popf
xchg
jae
enter
jmp
jnp
jo
js
mov
cmpsb
dec
mov
popa
mov
fisttps
fsubs
dec
scas
ret
push
inc
inc
movsb
out
addr16
adc
jmp
push
f2xm1
lahf
xor
pminsw
insb
or
movsl
push
int3
pop
aam
nop
fldt
push
pop
adc
xor
mov
cmp
loopne
adc
dec
mov
xchg
sbb
es
test
and
pop
dec
adc
sbb
jle
lock
mov
jmp
rol
in
cs
sbb
push
repz
iret
xchg
jo
enter
shlb
outsb
fnstsw
bound
jmp
mov
jp
in
adc
imul
push
shll
mov
sbb
orl
or
enter
jne
jo
test
lret
mov
sub
in
test
pusha
mov
fdivrs
insl
push
add
scas
xor
push
mov
mov
xchg
testl
stos
push
mov
mov
out
cs
push
mov
cltd
dec
pop
sbb
cmp
mov
hlt
sub
jge
xchg
jbe
xchg
fldt
push
mov
mov
enter
add
mov
xor
and
mov
loop
mov
call
cmc
xor
xor
loopne
push
insl
sub
int
fidivs
mov
ret
xor
fists
jg
decl
movsb
aad
pop
mov
test
jnp
ss
push
test
fdivrs
mov
jnp
sbb
xor
es
cwtl
mov
add
clc
fiaddl
enter
mov
fisttpll
mov
push
pop
xor
popf
mov
pop
jo
or
dec
mov
cmp
inc
sbb
scas
inc
jnp
mov
or
fbstp
lock
lods
hlt
std
and
mov
cli
adc
pop
cmp
xchg
mov
stos
arpl
or
xchg
cli
stc
je
aas
push
clc
push
jnp
dec
test
pusha
inc
call
xlat
out
pop
sbb
es
mov
mov
aaa
in
jae
and
adc
cmp
push
sub
jmp
sub
insb
xor
xlat
pop
imul
pop
inc
mov
fldcw
inc
inc
arpl
into
or
sub
push
sbb
dec
jne
sarl
enter
out
pusha
jae
bound
mov
pop
mov
dec
mov
mov
shrl
roll
mov
pop
stc
or
add
insb
xor
cmpsl
repz
cltd
out
out
ss
lods
sub
int
gs
lods
and
or
adc
insb
lret
mov
mov
adc
push
aas
out
xor
xchg
mov
les
and
mov
test
add
inc
mov
js
sbb
adc
xor
jb
mov
pop
insl
sub
and
and
and
jae
xor
push
mov
mov
cmp
and
aad
das
and
pop
jnp
call
or
and
pop
jg
push
ljmp
sbb
bound
ds
dec
sti
sub
jae
pop
pushf
mov
cli
lods
mov
int3
jg
push
xchg
fcmovbe
sbb
cmp
xor
jmp
xchg
int3
cmp
pop
cmpb
in
aam
mov
add
jns
fucomip
popf
pop
sbb
cmp
mov
and
pop
cld
cltd
lock
mov
sbbl
hlt
addl
jnp
pop
enter
add
sar
cld
lcall
lcall
shlb
das
and
xor
push
fldcw
push
imul
daa
or
fbstp
lock
cmpsb
ljmp
and
ds
stc
xor
inc
imul
inc
out
movd
push
inc
addr16
push
inc
out
adc
mov
or
shl
mov
es
mov
test
sub
mov
mov
negl
xor
pop
in
sub
stc
in
jno
lret
frstor
es
mov
lock
subl
dec
aam
imul
mov
jl
insl
sub
pop
test
sub
xor
push
add
out
sbb
sub
xor
mov
sub
iret
dec
inc
movzbl
mov
pop
fimuls
ret
clc
fsubrl
pop
fldcw
push
xlat
mov
jle
fxch
push
ficomps
pop
imul
inc
jnp
scas
stos
jge
push
or
jnp
dec
in
lret
cmpsb
iret
ljmp
push
or
aad
inc
pop
icebp
adc
and
xor
dec
xchg
mov
mov
ljmp
add
ret
arpl
lret
andl
cmp
or
mov
or
enter
jno
inc
rclb
faddl
xchg
test
cmp
data16
push
aaa
mov
cs
fldl
xor
inc
lahf
jle
push
fwait
dec
pop
add
sbb
mov
mov
sub
mov
jno
lods
enter
adc
mov
int
enter
xchg
mov
pushf
fwait
sti
xchg
cmp
jp
dec
xchg
stos
out
mov
inc
add
movsl
inc
cli
mov
lret
cmpsb
push
mov
rol
push
mov
addr16
inc
push
xchg
loop
jmp
push
push
jne
mov
sti
push
pop
xchg
xor
sub
aas
xor
scas
lods
cli
push
pusha
push
inc
clc
cs
and
jecxz
loopne
pop
ss
inc
shr
inc
scas
sbb
je
mov
fwait
inc
adc
mov
sub
cwtl
xchg
adc
xchg
sub
dec
adc
sahf
mov
jl
fdivs
pop
sub
xor
shll
mov
push
sub
pop
cmp
fsubr
addb
inc
lods
xor
sub
push
inc
int3
xchg
xlat
jmp
pop
loope
sar
aad
icebp
das
sbb
jmp
or
jno
fidivrs
rcr
mov
mov
dec
or
cmp
sbb
lret
xchg
xor
imul
hlt
adc
ljmp
and
sub
outsl
subl
xorl
pop
xlat
push
or
pop
xchg
jb
testb
xor
nop
mull
imul
pushf
cli
sti
cmp
cmp
nop
dec
subb
or
ret
sub
push
imul
dec
pop
scas
icebp
cwtl
fnstsw
and
std
push
jne
int3
sub
das
movsl
push
outsl
jbe
stc
and
adc
scas
out
xor
cwtl
aas
stos
sbbb
aas
nop
sub
mov
and
sbb
insb
push
sub
mov
sar
xchg
enter
jb
inc
ror
in
jl
dec
bound
xchg
movb
mov
in
addr16
in
pop
jecxz
inc
mov
mov
push
ret
fs
mov
dec
cmc
dec
fiadds
push
jle
mov
jo
add
pop
jns
mov
lret
or
jge
jbe
sahf
popf
sub
push
mov
mov
ret
dec
rcrb
in
sbb
push
ljmp
add
in
loopne
mov
data16
add
aad
jg
loop
sbb
jb
dec
nop
outsb
sbb
ficomps
mov
pop
sbb
xchg
fnstenv
jl
jmp
imul
call
cld
adc
ret
adcl
cld
cmp
mov
inc
or
push
call
mov
icebp
scas
lods
push
adc
imul
cs
rclb
outsl
add
push
test
stc
test
xchg
sub
push
add
fsubl
xor
shrl
sub
pop
jae
ss
sbb
pop
les
ret
sbb
sar
and
int3
inc
pop
xor
and
cld
inc
pop
sti
into
jnp
or
mov
ja
repnz
cmp
fincstp
jp
loop
mov
xor
push
fwait
mov
pusha
jo
rcrb
pop
jb
stos
shrl
aad
movd
dec
sti
jno
sbb
lea
loope
clc
imul
or
fdivr
adc
cmp
je
les
jb
adc
scas
and
inc
mov
jp
negb
fsubrl
push
push
mov
popa
call
loopne
dec
pop
frstpm(287
jno
jae
push
sub
outsl
ret
clc
push
mov
dec
fisttpll
mov
push
adc
adc
mov
arpl
shrb
mov
aaa
xor
cmp
mov
shrl
test
jne
pop
out
mov
mov
mov
add
cld
loop
adc
mov
push
test
cmp
xorl
pop
mov
pop
out
push
xchg
cmp
dec
xchg
xchg
addr16
scas
mov
ljmp
imul
clc
test
fisubrl
mov
scas
lock
add
push
xchg
jb
or
std
repnz
add
mov
mov
fiadds
idivb
fidivs
lret
pop
shlb
or
das
fs
inc
add
roll
es
mov
fnstsw
mov
push
inc
fldl
movsl
fs
pop
int
mov
push
jge
int
jle
movl
and
lahf
mov
dec
aad
push
mov
int
test
mov
sbb
sbb
push
insb
scas
inc
popa
ss
dec
fs
mov
sub
std
pop
adc
jbe
pop
test
mov
popf
xchg
loop
inc
cld
clc
sahf
fdivl
ja,pn
jb
nop
js
push
mov
cwtl
xchg
mov
shrb
pop
out
xor
mov
push
gs
int3
mov
push
in
xchg
stc
cmpsl
mov
dec
cmpsl
sbb
hlt
sbb
pop
insl
push
jl
sub
cmp
in
insb
sub
nop
sub
mov
outsb
inc
push
jmp
insb
and
out
call
or
mov
add
ret
push
mov
stos
clc
int
sbb
xchg
sub
test
mov
or
test
arpl
sub
jl
dec
daa
inc
jbe
or
insl
pop
aad
mov
mov
enter
adc
inc
enter
xchg
xor
xor
push
xor
rorb
mov
add
push
cmp
mov
pop
and
add
cld
stos
out
test
popl
mov
mov
push
jg
push
inc
cld
cltd
dec
mov
int
lds
sub
pop
sbb
jl
test
fcmovnu
je
call
push
cltd
dec
dec
mov
jge
push
push
call
dec
sbb
mov
sti
insb
adc
pop
nop
push
nop
jmp
xchg
mov
fcomip
imul
mov
iret
testb
and
pusha
mov
or
cmpsl
ret
enter
daa
rcrb
push
sub
push
mov
ror
push
sahf
insl
loopne
jno
cmpsb
push
in
jle
push
loop
mov
inc
fstpt
sub
aam
loope
scas
cmc
dec
mov
lret
lahf
data16
mov
xchg
add
fmuls
test
xchg
insb
xchg
pop
repnz
add
js
scas
mov
rcl
hlt
into
imul
cwtl
ds
into
arpl
jmp
jmp
leave
das
stos
stc
mov
xor
scas
adc
fcmovne
mov
inc
sub
dec
int
cmpsb
jmp
jae
addr16
and
and
pop
cmp
in
mov
xor
pushf
ja
daa
loop
int3
sub
cmp
mov
cmpsb
lret
mov
jbe
mov
jg,pn
insl
sbb
inc
add
push
ljmp
fldenv
push
adc
inc
and
jb
popf
cmpsl
jnp
or
fwait
ja
int
or
mov
xchg
add
lea
pop
xor
pop
clc
fldl
dec
stos
mov
cld
push
or
subl
mov
add
pusha
rcrb
sbb
inc
test
outsb
cmp
in
dec
sub
cmpsb
add
push
cwtl
lea
and
push
or
inc
adc
push
lea
in
add
push
add
lods
jle
add
jecxz
ss
bound
movsb
jo
xchg
inc
hlt
dec
sti
out
adc
int3
jo
fs
sbb
leave
popf
addr16
fdivl
pop
cld
scas
xorps
rolb
pop
outsl
mov
sbb
lahf
enter
out
inc
lds
fsubrl
push
fs
sub
sub
fst
cmp
or
xor
and
xchg
stos
ss
add
inc
notb
jbe
dec
out
mov
insl
ret
das
ja
push
call
push
xor
jmp
outsb
add
inc
icebp
mov
xchg
ss
roll
pop
dec
push
inc
sub
or
pop
ja
inc
cltd
std
repz
test
adc
cmp
divb
scas
lcall
lods
pop
ret
lret
insl
sub
mov
pop
push
push
push
ret
hlt
sti
fwait
or
mov
cli
xchg
bound
fcmovb
lds
addb
cwtl
pop
into
jp
ss
sbb
and
ss
dec
jnp
mov
bound
fldlg2
or
xor
in
out
xor
mov
inc
sbb
mov
icebp
aas
mov
ret
cmp
mov
xchg
outsb
mov
lcall
push
mov
jmp
xchg
cltd
test
mov
je
jns
dec
or
loop
aaa
stos
mov
or
in
jbe
jo
rcll
incl
stos
adc
and
cmp
lret
xorl
daa
jg
cmpsb
dec
hlt
cmp
pop
cmc
mov
xchg
push
loop
cmp
mov
aaa
loopne
xchg
ss
mov
lahf
sub
lods
pop
jle
dec
test
and
push
scas
movsl
stos
inc
fisttps
sahf
stos
sub
ds
push
je
gs
push
sub
sbb
fldl2t
mov
ja
add
inc
inc
add
popa
add
jnp
xchg
loope
dec
loop
pop
fsub
lret
shlw
xor
xchg
xor
fnsave
adc
sub
movsb
repnz
mov
cld
sub
add
je
mov
add
lahf
arpl
aas
cli
dec
mov
mov
fistl
sbb
stos
and
scas
movsb
mov
lods
mov
imul
js
jae
movl
jne
pop
pusha
mov
cltd
add
inc
out
cmp
adc
lea
call
les
arpl
adc
sbb
push
outsl
cmpsl
mov
imul
ja
mov
inc
pop
mov
fisubs
int
cwtl
add
jmp
dec
loop
pushf
pusha
fisttpl
mov
mov
test
js
jae
andb
test
adc
lds
or
cmp
jmp
inc
mov
inc
adc
cmp
jecxz
mov
ret
sti
test
and
fimull
mov
mov
popf
mov
adc
add
clc
pop
aad
jne
shl
adc
stos
subb
xor
push
or
sbb
adc
inc
sbb
or
jnp
insb
mov
and
mov
insb
cmp
imul
xor
jne
fnstsw
icebp
movsb
add
out
inc
lock
rcrl
ret
cwtl
push
or
int
or
xlat
jbe
xchg
int3
jne
adc
mov
and
ja
lods
subl
out
hlt
pusha
xchg
in
mov
and
in
lds
xchg
sub
ljmp
les
xor
les
or
imul
push
jbe
sub
cmp
push
push
cmp
jl
and
mov
sub
and
and
xchg
fs
inc
mov
mov
mull
dec
sbb
jp
ja
xor
xor
pop
mov
jge
mov
and
test
adc
nopl
mov
lcall
out
xchg
adc
xchg
jle
pop
push
dec
or
out
jl
push
stos
mov
ds
xchg
lea
add
mov
shrl
roll
rclb
rcrl
test
push
aad
sarl
call
jmp
inc
cmc
cmc
cmp
mov
xor
nop
jle
imul
sbb
adc
xor
mov
mov
mov
daa
fwait
outsl
xchg
push
mov
add
shr
mov
out
lcall
push
dec
rcll
sbb
ffreep
in
aas
out
sbbb
mov
data16
popa
cmp
pop
adc
or
jne
dec
call
cli
mov
mov
lea
sti
test
repz
inc
sub
sub
lea
scas
sub
mov
sub
movsl
add
add
push
and
fbld
jbe
popa
sbb
mov
xchg
mov
mov
sbb
xchg
scas
jmp
jg
scas
flds
inc
fnstenv
add
sbb
imul
or
in
in
out
pop
out
in
lock
fcomip
push
test
add
jb
or
pushf
or
cmp
jns
out
inc
fldcw
lahf
bound
enter
sbb
jnp
loope
and
add
test
mov
push
sti
or
jg
lock
xchg
imul
jl
mov
sub
arpl
pop
lods
sbb
dec
dec
stos
xchg
sbb
movsb
loop
xchg
push
xchg
mov
dec
or
sub
es
je
fsubrp
cli
push
aam
popa
push
ds
out
lock
ds
mov
sbb
jle
push
das
mov
cmc
shll
inc
lret
mov
in
test
mov
mov
mov
arpl
aam
sbbl
data16
xor
adc
adc
ss
jb
push
inc
mov
lea
ret
hlt
mov
scas
jb
mov
and
cmp
sbb
andb
sbb
xchg
sbb
pop
mov
scas
sti
lods
inc
sti
mov
stos
mov
ljmp
les
push
test
jmp
and
jnp
jnp
ret
mov
add
adc
sbb
outsb
push
mov
sbb
pop
dec
or
adcl
push
shlb
and
bound
neg
imul
or
ret
mov
ss
pusha
mull
push
jl
push
notl
add
aad
scas
sub
sub
xor
pushf
out
idivl
loop
mov
dec
jp
jns
adc
inc
mov
ret
in
add
dec
and
jb
mov
add
lahf
inc
rcll
hlt
inc
mov
cmc
push
mov
pushf
adc
xor
mov
jge
push
xchg
and
dec
mov
push
scas
xor
jns
jo
xor
mov
cmpsb
push
sub
iret
sub
cli
sub
orb
ja
mov
test
sti
push
stc
aam
pop
rcrl
fidivrs
push
mov
cmp
scas
jne
loopne
lahf
push
add
adc
aas
and
lods
inc
mov
jg
mov
jb
xchg
inc
mov
je
insl
xchg
stc
cmc
mov
cmp
test
cmp
xor
out
cmpsl
scas
lcall
push
insb
int3
xchg
sahf
outsl
sub
xor
out
adc
dec
mov
dec
aas
push
js
xchg
and
sbbb
inc
in
xor
pop
scas
fbld
ret
das
add
xor
enter
out
mov
sub
int3
pop
push
pop
push
enter
insl
adc
dec
inc
test
repnz
lret
or
out
push
fimull
lahf
xor
mov
sahf
push
add
dec
jmp
push
out
in
push
sbb
pop
mov
mov
push
pop
daa
lcall
adc
iret
mov
arpl
xchg
movb
jl
jbe
inc
mov
push
dec
pop
push
and
add
icebp
or
xchg
adc
xchg
xchg
lahf
push
lahf
xor
pop
into
xchg
mov
mov
xor
push
aas
out
push
mov
push
push
jge
xor
lods
test
xchg
ss
hlt
cmp
add
pop
cmpsl
aam
jns
cmp
xchg
cmpb
repz
push
inc
xchg
fildll
xor
test
fdiv
add
pop
stos
add
mov
jl
cmpsb
or
jle
int
or
das
mov
lds
xlat
cmpsb
mov
fwait
outsb
push
pop
ja
jecxz
sarl
add
sub
enter
fiaddl
mov
inc
stos
lret
stc
sahf
lods
xor
jl
pop
push
shll
repz
daa
mov
inc
int3
ret
out
xchg
xchg
shll
imul
dec
popa
push
popf
sbb
sti
mov
std
jo
jb
pop
push
mov
movsb
mov
daa
test
jge
inc
arpl
sahf
add
lods
mov
insl
dec
imul
adc
fistl
test
or
xor
adc
out
ss
xlat
fnstenv
push
lea
pop
rcrl
mov
aad
addl
lods
out
jnp
jle
in
push
in
push
push
out
dec
fiadds
jecxz
fdivrs
push
adc
push
ficoms
or
jns
mov
shrl
jp
sbbl
fwait
shll
sbb
adc
inc
popl
in
lds
out
js
arpl
lock
cmc
xchg
adc
cmp
and
xchg
popa
xchg
insb
push
jmp
iret
mov
inc
out
cli
imul
mov
mov
aam
push
cltd
xor
lods
jg
pop
jp
inc
cmpsl
loop
mov
daa
cmp
imul
inc
or
mov
movsl
sbb
fdivrs
mov
mov
das
pop
out
clc
sahf
or
fnstenvs
mov
das
xor
loop
lcall
fstps
xchg
adcb
insb
shrl
cld
fildll
or
mov
in
out
rclb
mov
or
repnz
inc
mov
into
cmpsl
cmpsl
push
xchg
int3
pop
push
mov
cmp
pop
ret
test
scas
push
int3
xor
add
movsl
push
leave
jecxz
negl
daa
mov
or
insb
push
les
inc
mov
insb
add
mov
lcall
add
push
out
ja
mov
out
lea
sub
sbb
cmp
imul
xchg
call
sahf
lods
push
sbb
jb
pusha
mov
and
cmp
and
push
jo
inc
cmp
add
push
fdivl
arpl
add
imul
push
push
xlat
testb
jae
inc
and
ficoms
mov
mov
or
mov
stos
in
add
mov
sbb
push
aam
imul
popf
ficoms
or
mov
cwtl
das
je
int
nop
ret
jp
push
lods
arpl
mov
cmpb
repnz
stc
xor
sarl
in
adc
test
ficoml
pop
mov
subb
popf
cltd
es
ljmp
loop
dec
in
sub
mov
popa
jns
lahf
sbb
sbb
or
or
mov
movsb
das
mov
es
std
sbbb
in
pop
push
mov
mov
movsl
jae
rclb
jae
cli
xchg
movsb
shll
popf
mov
dec
mov
out
repz
je
int
push
push
ret
cmpsb
scas
out
jnp
mov
pushf
push
jb
or
fldenv
mov
hlt
clc
sbb
sbb
rcrl
aam
fidivl
mov
pop
inc
push
adc
pop
lcall
stc
je
int3
push
pop
xor
fwait
cmp
stc
cmp
in
ljmp
jmp
sub
jne
fdivr
mov
gs
in
jnp
xchg
aaa
mov
adc
pop
dec
and
lds
add
orl
ror
in
call
adc
testl
dec
mov
sbb
imul
addr16
adc
rol
xor
ret
notl
cmp
push
mov
hlt
mov
ret
push
stos
fldcw
push
sub
in
xchg
ret
push
lods
jo
cmp
inc
mov
loopne
pop
lds
divb
loopne
aam
sub
push
cs
nop
mov
andb
xor
fbstp
test
je
fmul
xor
sub
xchg
mov
or
and
pop
lahf
mov
fs
sub
and
push
pop
mov
pusha
ljmp
push
stos
inc
arpl
push
push
xor
loopne
and
add
sti
and
out
push
mov
int
js
add
dec
dec
jb
push
cmp
data16
xchg
std
inc
sub
push
sbb
cmp
mov
dec
into
mov
rolb
adc
dec
inc
je
xorb
and
loopne
popa
cmp
loope
call
repnz
jb
call
mov
mov
mov
outsb
daa
data16
ret
mov
and
push
loopne
lcall
out
cmpsb
cmp
jo
ret
lock
lock
fildll
lcall
mov
mov
and
or
nop
fmul
sbb
lahf
jg
cli
js
jns
or
fwait
jb
daa
into
cmp
xchg
sub
int
sbb
pop
fwait
repnz
std
sbb
shrl
stc
pop
cli
pushf
jns
int
mov
int3
add
cli
mov
push
mov
out
out
mov
add
rorl
insl
mov
test
or
xchg
mov
cmp
aas
js
popf
cmp
and
cli
shlb
mov
jl
cmp
jbe
pop
shlb
push
ret
enter
lods
mov
clc
je
popf
sub
sarl
loopne
mov
inc
inc
xor
aaa
add
or
rclb
pop
xor
repz
dec
pop
out
mov
add
lret
inc
jl
mov
sub
sbb
push
movsl
ja
push
jge
dec
mov
and
imul
in
push
dec
hlt
inc
sub
fcoml
mov
or
push
cmpsl
rol
add
lea
imulb
fisubrl
dec
dec
cltd
imul
cmc
inc
xchg
repnz
arpl
and
mov
and
add
cmp
add
stc
dec
cltd
std
sbb
mov
arpl
mov
mov
adc
negl
cmp
sub
sti
aam
out
add
fwait
call
xor
or
stos
pusha
lcall
jl
sti
enter
loopne
add
dec
sbb
movsb
fs
xchg
xchg
into
loop
xor
push
mov
divb
mov
xchg
push
lahf
test
add
fisttpll
mov
repz
mov
cmpsl
cmc
jle
ljmp
lods
xchg
lds
mov
and
insb
cwtl
xor
subb
sahf
push
iret
fbstp
sbb
das
insl
xor
pop
pop
push
xlat
push
ja
xchg
scas
stc
pop
mov
push
pushf
pop
inc
push
nop
lret
jb
ret
dec
stos
sbb
push
push
or
push
test
inc
enter
jne
sbb
nop
daa
inc
adc
sbbb
push
push
in
cmp
out
adc
loop
out
icebp
jp
mov
ja
mov
fistpl
mov
jns
aas
mov
lret
dec
nop/reserved
jl
test
cld
outsl
out
rcrl
cli
lahf
ss
icebp
nop
jl
mov
inc
mov
xchg
pop
out
imul
popf
adc
enter
jl
xor
cmp
pop
inc
dec
adc
orl
and
in
sbb
sbbb
lret
lock
lods
mov
pxor
cmpsl
or
out
add
pop
sbb
shrl
push
imul
xchg
sbb
add
and
add
and
sub
popf
mov
mov
xchg
push
call
or
pop
lahf
cmp
fbld
push
and
push
cli
dec
inc
jnp
out
mov
xchg
or
out
xchg
aaa
cmpsb
pushf
gs
pop
out
inc
sbb
sub
pop
cmp
xlat
cmp
orb
lahf
mov
mov
in
add
enter
ret
ret
sbb
fs
subl
sbb
push
and
stos
add
dec
mov
ljmp
je
mov
test
mov
and
ds
jge
jge
pop
outsb
outsb
adc
andl
cmp
push
icebp
aaa
jge
sub
popa
adcb
fstl
lock
xchg
mov
sarl
pushf
lds
pop
fcoms
testb
repnz
pusha
dec
call
push
ja
gs
cltd
jge
lea
call
pop
xchg
ret
fcoml
mov
popa
popa
aad
sub
out
scas
adc
sahf
and
add
test
roll
dec
adc
incl
dec
pushf
or
popa
and
insb
xchg
sti
push
cmp
pusha
aaa
aaa
stc
sub
mov
xchg
jne
sbb
pop
repnz
loop
fcomps
nop
xchg
lock
je
or
aad
mov
xor
ss
xchg
dec
fsubr
mov
lea
add
push
push
jbe
jb
push
add
imul
adc
inc
ljmp
mov
xlat
jmp
test
sbb
les
icebp
enter
inc
cmp
enter
dec
jnp
add
add
loope
jno
std
scas
xchg
repz
dec
pop
les
movsb
cmp
add
xor
cmp
call
add
out
xor
pcmpeqw
cmpsb
test
dec
lods
jp
shrb
icebp
mov
imul
ror
adc
jae
sub
push
and
mov
push
adc
imul
mov
xor
jno
jns
mov
test
or
jbe
jno
sbb
test
jge
js
mov
pop
adc
jb
shrb
inc
cmc
push
movsl
hlt
fadds
inc
fwait
test
sub
push
shrl
sub
push
mov
mov
inc
insb
test
stc
ja
push
fidivs
dec
pusha
sub
inc
or
addb
mov
arpl
xchg
mov
jb
imul
fwait
outsb
fstps
xor
loop
repz
cmp
push
mov
xor
xor
cltd
loop
adcb
jmp
orl
or
bound
pop
adc
jne
sub
lods
mov
fmulp
jp
mov
scas
ret
xorb
ss
in
leave
and
cmc
cld
or
lds
ss
add
sbbb
add
mov
and
jne
stos
push
cmp
fsubrs
inc
adc
cmp
mov
nop
push
sbb
xchg
adc
pop
mov
mov
xor
pop
movsl
jbe
lahf
add
test
fsubrs
shrl
ret
idivb
push
push
cmp
daa
imul
cmp
sbb
mov
movsl
cmp
sbb
aas
pop
jmp
mov
notb
mov
in
cmc
add
imul
or
icebp
jnp
sbb
sahf
call
loop
mov
lcall
loope
jbe
in
cbtw
stos
movb
dec
mov
aam
cmp
cwtl
das
jnp
addr16
mov
dec
xchg
mov
into
cmp
or
sbb
dec
mov
xor
jae
add
add
test
out
rcll
test
mov
adc
mov
sub
test
mov
sub
into
jno
lds
cwtl
jecxz,pt
ret
movsl
cmp
shl
adc
rclb
jo
pop
mov
notb
sub
mov
xchg
movsb
inc
mov
lds
inc
shr
je
sbb
or
cli
xchg
pop
sub
mov
rcrb
lcall
and
loop
mov
push
push
cmpb
data16
out
xchg
outsl
aaa
push
add
in
imul
add
and
mov
loop
lds
fwait
cmpsl
imul
jo
into
sub
push
sub
call
cmc
lods
push
mov
adc
cmp
aam
sarl
out
test
idivl
pop
std
xchg
sbb
and
lret
mov
out
mov
mov
or
sub
xchg
imul
clc
aam
es
or
outsl
jnp
dec
mov
repz
mov
jecxz
ret
add
es
fsts
jo
mov
lock
hlt
mov
sti
scas
ljmp
outsb
jnp
dec
dec
ret
and
or
inc
xor
and
rcr
push
jp
out
fldenv
popf
rolb
mov
adc
cmpsl
lcall
mov
sbb
subl
das
mov
add
inc
jmp
xchg
lock
imul
xchg
outsl
int
stc
scas
xlat
shl
fimull
sbb
ja
outsl
test
sbbl
rcrb
rorb
mov
mov
imul
fiadds
push
scas
lret
daa
add
lea
jmp
lods
mov
sahf
stos
testb
push
dec
sbb
mov
adc
and
mov
in
ss
mov
xor
rcrl
stos
dec
pop
shrl
shrl
loop
sbb
xor
imul
cli
push
jne
add
xchg
add
aaa
repz
stos
mov
jge,pt
xchg
out
add
std
nop
sbb
sbb
jb
repnz
push
pop
mov
pop
ss
mov
inc
add
ds
je
jae
sbb
cmp
stc
jnp
cmp
repnz
xchg
cmc
jp
mov
adc
ret
and
bound
mov
fldt
aam
mov
je
jmp
rcrl
or
mov
jne
cmp
jo
insl
jmp
push
sarl
loopne
push
jo
xor
inc
pop
xchg
movsl
jo
push
xchg
rcrl
int3
or
push
enter
loop
imul
sbb
dec
pop
push
mov
rcl
insb
insl
dec
jnp
subl
adc
mov
adc
push
loopne
add
mov
mov
jp
jecxz
jno
jge
mov
fisubl
lock
in
xchg
adc
int3
push
dec
cmp
and
push
jbe
shl
pop
incb
inc
cwtl
or
add
jae
icebp
push
xor
aas
ja
sbb
xor
inc
lods
fs
push
shll
mov
push
cmp
xchg
repz
add
sub
insb
nop
xor
sub
xchg
cmp
ret
xor
mov
or
out
mov
mov
cmpsl
xchg
insl
shlb
getsec
testb
aad
arpl
jns
mov
stos
pop
push
mov
fisttps
popa
mov
jns
std
insl
hlt
mov
xor
int
mov
int
dec
sahf
push
cs
inc
ss
cwtl
xchg
and
lret
aam
out
xor
cwtl
or
mov
ljmp
popf
mov
addr16
inc
bound
std
adc
bound
xor
cmp
cld
dec
cltd
imul
mov
cmp
fisubrl
dec
iret
pop
mov
data16
fsubrs
je
add
xor
pop
movsb
imul
mov
push
rcrb
xor
mov
xchg
pop
mov
loope
add
shlb
pusha
pop
cmc
nop
cmp
imul
adc
insl
aaa
dec
push
rcl
cmp
inc
in
sub
testl
inc
fistps
sbb
jno
lret
sbb
sahf
cmp
xchg
lret
push
test
mov
sub
sbb
sbb
enter
in
or
push
mov
adc
bound
push
ds
pop
adc
xchg
jge
jno
lods
fidivs
inc
out
shr
push
adc
mov
pop
sbb
xor
ds
or
inc
stos
sti
sbb
add
pop
mov
add
xchg
hlt
or
lods
mov
ret
movl
xchg
sub
sahf
mov
mov
stos
pop
xor
mov
dec
push
inc
sub
mov
xor
mov
in
cmp
aad
cld
xchg
sbb
iret
lock
xchg
enter
out
out
das
loop
int
inc
out
fs
call
jo
jo
mov
imul
das
in
idivb
lods
outsl
clc
sbb
mov
pop
iret
hlt
fcomip
mov
sub
dec
mov
adc
and
cld
mov
testl
mov
popa
lret
pop
inc
mov
out
test
jp
mov
bnd
rcrb
ja
inc
stos
push
mov
mov
into
pop
fisubs
sarl
lods
jno
sarb
sbb
icebp
popf
in
dec
cmc
iret
lea
adc
fcmovb
mov
pop
push
xchg
gs
xor
mov
xor
or
dec
arpl
adc
out
inc
and
xchg
xrelease
mov
lea
out
mov
jb
in
cmpsb
enter
mov
mov
pusha
jecxz
xor
lods
call
int3
sub
pusha
orb
sub
push
pop
or
push
adcb
mov
cltd
adc
shlb
inc
std
data16
push
in
add
add
xchg
pop
cld
mov
rorl
movsb
pop
lds
push
std
nop
jns
lret
shll
cltd
je
imul
mov
cmpsl
sub
push
pop
outsl
inc
cmc
cmp
dec
sbbl
out
and
sbb
push
sbb
fldcw
out
inc
gs
scas
mov
xor
andb
scas
fld
cmc
scas
std
nop
or
push
lods
les
imul
stc
adc
out
inc
cmpsl
jo
adc
xchg
jae
es
mov
popa
and
lock
lods
out
rcrl
push
mov
jb
addr16
cmpsl
jbe
idivb
push
les
xor
insb
mov
add
jg
fmuls
pop
xchg
ljmp
inc
pop
leave
inc
bound
cmc
out
sub
xchg
pusha
notb
add
orl
mov
repnz
test
add
aam
movsb
lea
or
mov
mov
lret
movsl
add
fs
insb
shll
sub
xchg
xchg
cmpb
pop
xor
pop
nop
mov
dec
mov
scas
push
aad
scas
int3
cld
sub
into
push
sti
push
sbb
fidivrs
dec
push
pop
add
popa
movsb
inc
pop
aam
cmp
mov
add
mov
and
fsubl
fidivl
jb
lods
stos
testb
lods
rcl
hlt
or
cmp
adc
and
add
lcall
stc
bound
push
sub
movsl
cmp
or
lret
in
imul
mov
xorb
jle
fucomip
fisubrl
shrb
push
sub
push
dec
jns
xor
xchg
pusha
pop
adc
xor
mov
stc
or
negl
mov
push
ljmp
psubq
sub
arpl
sbb
or
pop
dec
lea
xor
scas
loope,pt
inc
jne
xchg
shrl
imul
arpl
shl
dec
fidivrl
popf
das
cli
inc
ljmp
mov
add
subl
pop
les
idivb
sub
into
and
stc
or
and
mov
inc
icebp
mov
dec
mov
test
inc
inc
cmc
addr16
inc
cmp
jle
mov
adc
pusha
test
fdivrs
push
sbb
out
push
iret
add
mov
lds
push
imul
fldt
sbb
loop
scas
pusha
int3
ficoms
or
add
out
call
cmp
jae
hlt
push
clc
sahf
push
cld
stc
push
call
pop
stos
sbb
push
jl
hlt
loopne
pop
xlat
lods
rolb
das
jge
lret
shrl
dec
loope
loopne
add
ss
mov
xchg
mov
jbe
mov
fcoms
lods
divb
loop
mov
or
inc
jo
in
test
jno
fnsave
rcrb
sti
test
scas
nop
ss
mov
xor
fildll
mov
iret
movsb
icebp
imul
inc
sub
mov
sbb
cmc
int3
xchg
add
mov
fists
fwait
push
mov
mov
sbb
out
sbb
pop
roll
psrad
out
fisubs
cmc
sbb
imul
or
sub
lods
popa
push
addb
pop
pop
out
add
push
jmp
lock
jp
sub
inc
push
call
lea
sub
ljmp
adc
dec
out
pop
sub
inc
inc
inc
mov
in
stos
cmp
enter
push
out
scas
dec
add
adc
call
xchg
push
mov
jg
lock
push
nop
bound
add
mov
rcrl
les
jnp
mov
or
lret
mov
lock
je
cmp
in
add
sahf
add
loop
pop
call
push
das
in
stos
lods
and
and
sbb
lods
shl
js
loope
mov
jl
sbb
fcomip
push
lret
xchg
iret
mov
jno
pop
popa
or
fiadds
movsb
popa
mov
repnz
ja
into
cmp
out
and
imul
adc
ljmp
push
add
xor
sbb
das
loope
stc
mov
test
popa
jmp
rcrb
push
icebp
pop
inc
cmpsb
sahf
popa
leave
cli
stos
mov
orl
or
js
sbb
push
lret
cmp
pop
les
xchg
pop
repz
into
jbe
mov
stos
push
sahf
xchg
inc
into
repnz
xchg
js
lahf
xchg
icebp
fisttpll
in
or
sub
sbb
jae
mov
mov
xchg
cmp
idiv
iret
mov
xchg
loope
stc
test
or
movsl
adcb
in
xchg
jo
pop
sub
lods
xchg
mov
push
push
jmp
int
cmp
dec
out
arpl
adc
adcl
or
push
pop
insl
inc
sbb
out
adc
cwtl
out
lret
sub
andb
stos
jo
push
std
mov
xor
jecxz
std
in
lods
xchg
add
mov
add
out
sub
ret
cs
mov
shl
lock
enter
leave
jl
jno
add
mov
gs
jmp
rorb
pushf
enter
mov
in
lods
mov
mov
test
rcr
bound
outsb
clc
stos
inc
insb
enter
pop
int3
out
mov
imul
adc
repz
loopne
fdivrl
pop
xchg
cltd
nopl
int3
push
incl
cmp
int
call
mov
sti
bound
aam
in
fmuls
mov
pop
shll
dec
cltd
loop
sbb
jg
xchg
arpl
aaa
pop
popf
cmp
mov
mov
sub
testb
adc
mov
jp
sub
jle
aas
push
nop
test
inc
fidivl
push
and
add
or
mov
mov
and
inc
rcrl
imul
out
mov
pop
jne
or
xor
daa
fmuls
dec
aam
das
adc
jge
data16
push
inc
xlat
andl
in
sub
push
add
jno
jns
cs
push
inc
mov
mov
pop
xor
dec
add
xlat
jno
mov
repnz
test
pop
mov
cmc
pop
daa
out
jmp
jnp
jb
out
sbb
or
cwtl
push
adc
leave
stos
lcall
cmp
filds
nop
mov
push
test
mov
inc
iret
adc
fwait
dec
mov
imulb
in
jg
shlb
mov
xchg
mov
jo
push
jge
ja
ss
mov
push
scas
adc
arpl
sbb
popa
mov
dec
inc
add
fistpll
adc
xor
in
dec
jmp
popf
imulb
xor
stos
insb
add
xor
ret
test
cmp
pop
mov
pusha
jnp
scas
in
ficompl
xor
jge
repnz
inc
cmp
addr16
xor
fsts
add
das
test
cmc
jp
scas
and
sti
pop
ds
push
jne
ds
lock
and
jecxz
jne
push
inc
sub
sbb
les
loopne
ret
jne
push
test
es
jp
jo
inc
push
aas
mov
loopne
sbb
mov
leave
loope
jmp
js
cmpsl
test
dec
das
mov
cli
jbe
insl
sub
flds
push
xor
dec
mov
inc
jge
pop
repz
sbb
sub
cmpb
addr16
lods
nop
loopne
in
jecxz
pop
push
loope
push
jnp
mov
dec
enter
sbbb
outsl
jns
daa
push
popf
int3
push
test
mov
and
fidivl
inc
mov
jle
in
add
push
mov
lods
mov
mov
ret
outsb
iret
mov
lods
mov
pop
sub
pop
outsb
int
insb
int3
jp
ret
mov
jle
sub
pmaddwd
loope
cli
sub
outsb
out
push
ret
dec
xchg
adc
mov
mov
lret
add
mov
sbbl
ljmp
insb
and
test
lcall
sbb
inc
dec
inc
loopne
sbbl
dec
xor
or
pop
leave
or
sbb
cmpsl
pop
push
adcl
adc
fdivrl
jecxz
sbb
or
sbb
ljmp
or
mov
mov
stc
sbb
lcall
gs
jl
mov
sbbl
add
xor
pushf
mulb
push
inc
dec
cmpb
aaa
fistl
orl
ja
pop
std
jle
das
jns
outsl
push
fnstcw
mov
andl
xor
xchg
sub
mov
or
lcall
aas
lret
ror
clc
stos
or
mov
out
movsb
adc
xchg
cs
dec
movsl
repnz
xchg
and
xchg
xchg
jge
shl
jne
pop
add
aaa
sbb
mov
xchg
hlt
insl
popa
jae
xchg
or
lods
ja
mov
pop
cmp
dec
add
push
in
stc
xchg
mov
xor
stos
mov
adc
sbb
aad
shll
lock
jnp
fcmovbe
stc
addr16
sbb
push
mov
and
xor
cld
repz
enter
in
aas
sub
dec
shrl
or
fadds
sub
imul
scas
push
es
cmp
pop
les
jmp
jno
pop
outsl
ret
jle
js
out
mov
or
xchg
cmpsb
cmp
outsb
push
inc
fmull
in
test
jecxz
rclb
fcomps
jns
lock
push
mov
or
add
mov
pushf
push
sbbl
xchg
sub
fs
mov
dec
jl
pushf
lods
int
jae
push
leave
adc
mov
fdivs
cmp
and
fmull
xor
cs
test
mov
and
ret
rcrb
push
nop
mov
inc
mov
push
sub
outsl
inc
mov
and
or
add
dec
scas
push
testl
dec
mov
in
push
mov
xor
shlb
inc
pop
clc
xor
mov
xchg
pop
mov
rorb
sub
sbb
adc
lcall
jne
rcrl
pop
mov
and
pop
dec
imul
int3
cmp
lods
lods
jge
inc
pop
mov
or
push
jno
and
inc
mov
add
dec
add
out
sets
sub
inc
inc
rolb
cmp
lahf
inc
aam
arpl
add
inc
jns
mov
pop
jmp
fs
sbb
or
jne
push
inc
data16
mov
lret
add
cli
adc
loope
cmpsl
sbb
aas
cltd
inc
pop
push
mov
cmpl
scas
mov
and
out
push
xor
or
xor
jae
sub
mov
jle
cmpsl
inc
rcrl
outsb
cmpsb
push
scas
pusha
enter
or
dec
xor
inc
mov
ds
cmpsl
cmp
mov
shrd
inc
lcall
xor
pop
xlat
test
inc
add
fisttpl
xor
mov
add
js
shrl
xorl
pop
jmp
push
xlat
repz
sahf
mov
jo
push
pop
and
dec
jmp
cmp
and
adc
pop
pop
lds
sub
dec
fisubrl
lock
ficoms
push
mov
dec
sarb
sarl
mov
jg
cmp
icebp
dec
dec
in
pop
push
xor
sub
xchg
jnp
out
rcl
div
sbb
shrb
fwait
sti
pusha
jp
pushf
outsb
test
jb
push
imul
jmp
outsl
aaa
or
pop
mov
out
daa
outsl
sbb
lds
pop
mov
inc
push
mov
rorb
imul
jl
es
inc
idivb
into
xor
mov
mov
shr
jnp
xchg
sub
lcall
add
aaa
insl
add
scas
xor
pop
push
inc
bound
xor
inc
cmpsl
inc
fidivl
lcall
and
mov
adc
and
lods
cmp
mov
dec
jne
lods
jmp
test
mov
adc
sti
mov
fldl
fbstp
ds
arpl
fdivr
xchg
or
aam
sbb
mov
fidivs
imul
mov
les
mov
popa
fsubrl
xchg
mov
cmpsl
ret
dec
mov
mov
mov
movsl
mov
je
lods
cs
push
ret
jno
xor
pop
movsb
sbb
ret
outsl
leave
loope
and
lods
insl
jb
cmp
mov
ror
add
cli
mov
dec
pop
in
mov
test
pop
das
imul
add
jo
ds
add
sub
dec
repnz
xchg
dec
sbb
out
sbbb
ja
loope
xchg
fs
in
pop
arpl
int
je
jnp
lcall
mov
adc
jle
xor
std
mov
dec
test
test
movsl
adc
lods
push
mov
scas
push
add
test
lret
movsl
mov
xlat
cmp
jnp
jne
data16
mov
out
test
mov
adc
or
or
or
aas
pop
sbb
loopne
dec
push
add
fwait
cmp
add
inc
scas
inc
cmp
jl
outsb
lret
sub
mov
and
sub
std
inc
or
cmp
outsl
divl
daa
testb
pop
rclb
xor
shrl
xchg
mov
int
rorb
mov
inc
lods
ljmp
ret
in
xchg
xor
mov
sbb
push
inc
add
incb
pop
xor
lock
lret
aaa
cld
xchg
inc
xchg
sbb
mov
push
xchg
loope
push
jo
sub
mov
jg
dec
or
rolb
cmp
popf
mov
jle
pop
mov
jg
sub
shl
ficompl
xchg
dec
pop
lahf
jge
mov
fcompl
inc
popa
inc
pop
scas
xchg
inc
push
out
push
mov
ror
arpl
icebp
mov
adc
cmc
cmp
xor
test
xor
xchg
adc
int3
mov
and
inc
arpl
jle
mov
jmp
xor
pop
push
push
out
jle
mov
fbld
adc
enter
int3
mov
incl
mov
rolb
mov
mov
daa
mov
lret
jge
arpl
popa
lock
call
lret
xor
gs
and
insl
les
mov
stos
xchg
repz
xchg
mov
bnd
mov
leave
lods
insb
fistps
popa
xchg
pop
inc
xor
std
xor
movsb
or
xchg
scas
test
cmp
loop
cmc
mov
dec
or
jb
insl
scas
cmp
sbb
sbb
cmp
jbe
das
pop
popa
clc
mov
cmp
jge
in
sti
xor
out
ret
cmp
mov
or
ficomps
inc
lret
or
xor
xor
ja
rolb
loop
test
imul
cmpsb
add
movsl
lock
inc
and
rcrb
push
cltd
sbb
push
dec
jp
jno
imul
adc
mov
mov
cmp
push
in
std
pop
mov
cmp
lock
fbld
in
loope
adc
imul
xlat
sbbl
enter
sub
cmc
inc
cmp
hlt
sbb
cmp
mov
iret
add
cmp
or
das
xchg
jge
mov
hlt
mov
les
fiadds
fiaddl
cltd
push
sti
jg
mov
mov
cmpb
push
add
cmp
inc
loop
ds
mov
pop
jge
adc
fildll
cmp
jae
aad
xchg
lods
fcmovne
nop
inc
dec
mov
pop
dec
jecxz
xor
push
data16
jo
sbb
xor
sbb
es
pop
mov
jl
popf
mov
jge
pop
insb
push
jle
scas
outsl
ja
divb
sbb
stos
jbe
mov
add
or
mov
pop
xchg
pop
sbb
mov
xor
mov
push
mov
jno
xor
rcrb
pop
into
jb
xor
pop
in
cmp
mov
xor
testl
lcall
pop
int3
fnsave
xchg
add
mov
push
jno
and
add
push
cmp
mov
pop
jmp
xor
pop
xlat
cmp
mov
mov
cld
xchg
nop
and
mov
pusha
cmpsl
fwait
in
out
push
out
data16
fcompl
mov
nop
popa
std
loop
push
rcll
push
push
dec
test
cmpb
repnz
divb
addb
xor
rorl
sub
pop
fcomp
insb
xor
fs
jo
or
sbb
mov
jb
dec
lahf
ss
dec
insb
sbb
mov
lret
fnstenv
mov
adc
pusha
jle
pop
fdivrl
hlt
jp
cmp
adc
add
in
cmp
jno
xchg
add
mov
iret
jecxz
jl
inc
add
stos
repz
movsl
cwtl
push
push
stc
inc
mov
add
mov
inc
push
sub
mov
cmc
mov
jo
imul
imul
lret
jmp
push
push
inc
int
icebp
repnz
mov
push
add
xor
push
js
mov
ret
fistps
fbstp
fstpl
imul
repnz
jb
xchg
aam
xor
enter
pop
gs
ljmp
mov
xchg
sbb
sbb
addb
cs
pop
lea
pop
or
rclb
imul
insb
pop
or
test
inc
out
sbb
adc
cli
leave
out
imul
stc
gs
inc
aam
out
outsb
jg
mov
mov
mov
imul
daa
imul
and
rcrb
nop
dec
mov
inc
inc
cwtl
int
cmp
adc
ja
xchg
sti
ljmp
lds
push
lds
push
inc
dec
pop
xor
movsb
lea
add
inc
out
aas
cli
loop
rcll
xchg
pop
daa
in
fsubl
pop
add
pop
and
fnstcw
jge
mov
adc
icebp
jle
inc
push
pop
stos
outsl
stc
enter
adc
aas
inc
movsb
in
mov
or
add
ret
jmp
mov
and
scas
dec
movb
orb
jp
mov
mov
sbb
add
daa
mov
clc
cmpsl
aam
popa
dec
int
xor
push
mov
lods
lret
pop
or
mov
xor
xchg
sbb
xlat
lds
data16
cmc
inc
add
inc
fcmovb
pop
add
insb
scas
or
sbb
fnstcw
mov
jmp
inc
cli
nop
dec
es
jmp
cmp
cmp
xchg
xor
dec
add
push
push
out
sub
ljmp
push
leave
and
jno
movsl
test
pop
in
or
or
xchg
lea
rcrl
adc
jne
push
aaa
mov
and
es
xchg
mov
sbbl
jno
push
shl
mov
cmpsb
inc
push
aam
clc
jmp
cli
push
lahf
dec
cmpsl
sbb
xor
mov
mov
add
cli
cmp
add
pop
adc
call
int
or
push
dec
addr16
out
fmull
hlt
ja
aad
push
test
inc
cmp
std
loop
sbb
pop
pop
popa
insb
lds
in
out
or
or
jns
xchg
in
mov
into
xchg
js,pn
ret
and
lcall
sub
or
nop
push
jg
scas
aad
jp
mov
cmpsl
div
add
stc
dec
cli
andb
nop
xor
stc
inc
in
push
jno
insb
mov
repz
xor
data16
or
test
out
test
or
push
add
mov
rcrb
add
jl
jp
adcb
push
insb
or
and
push
jle
lret
push
cmp
xchg
add
dec
negb
bound
xchg
dec
mov
test
jge
adc
pop
xlat
cmp
add
outsb
add
aaa
pop
flds
aad
push
or
insb
inc
xor
gs
pop
xchg
sub
test
sbbl
fwait
xchg
adc
cltd
dec
pop
into
pop
pusha
mov
pop
or
fldcw
fs
sbb
clc
insb
dec
mov
in
sbb
outsl
mov
mov
sbb
in
push
xchg
lods
jae
out
je
pop
cmc
fistpl
jge
cmp
scas
inc
lret
xor
stc
dec
cmp
ds
xchg
test
scas
sbb
mov
clc
into
jns
scas
add
jb
cld
sub
lock
rcrl
clc
jae
cmpsl
mov
jnp
or
pop
cmp
sahf
pop
test
mov
adc
shlb
pop
insl
mov
rcl
scas
sbb
fs
in
xchg
and
enter
dec
and
mov
aad
push
add
icebp
pop
xchg
jecxz
divl
mov
movsl
jp
int3
ja
das
loope
cmp
dec
fxch
inc
cmp
dec
shlb
insb
cmpsl
fucomi
and
push
xchg
push
cmpsb
insb
das
ret
sbb
scas
sbb
add
in
repnz
test
jle
sbb
call
adc
mov
movsl
in
jle
jmp
mov
mov
xchg
pop
inc
fwait
loopne
dec
mov
out
aas
mov
nop
shll
lea
negb
imul
js
push
jecxz
lock
loope
bound
xchg
adc
into
inc
cmp
mov
add
fcomps
out
adc
lahf
inc
dec
and
lahf
jne
jnp
rcll
sahf
js
enter
mov
je
jo
push
daa
inc
add
inc
bound
mov
lcall
mov
lock
cmp
xlat
inc
fldcw
and
movsl
lods
push
fidivl
inc
popf
sub
out
leave
mov
lods
enter
sbb
rorb
add
test
daa
adc
in
mov
push
cmp
clc
sub
imul
rolb
cmpsl
cmp
cmp
fdivrl
int3
leave
sub
xchg
mov
add
in
ds
call
test
addr16
dec
lods
mov
mov
jecxz
stos
mov
push
sarb
cwtl
adcb
les
int
add
lea
mov
fsubs
mov
rcr
popa
iret
out
dec
mov
negl
sub
and
xchg
and
dec
and
xchg
cltd
xor
inc
in
in
jg
sbbl
shl
lea
stc
lret
stc
xchg
xor
jmp
fsubr
in
ficompl
dec
andl
jp
jp
int3
mov
add
test
sbb
loopne
mov
sbb
cmpsl
sti
push
out
cmc
sbb
xor
in
es
jl
lods
push
cmp
faddl
inc
push
pop
les
cmc
pop
lcall
push
or
mov
jecxz
pop
xchg
mov
lret
push
pop
adc
cmpsl
arpl
sub
adc
mov
out
inc
ljmp
and
or
push
jno
lods
cmpsl
lea
dec
rep
cmp
lods
xor
jmp
jne
mov
repz
pop
jg
mov
mov
push
cmp
mov
pop
dec
dec
or
inc
pusha
cmpsb
cmpsb
sbb
imulb
xchg
inc
in
pop
aam
arpl
sub
xor
test
mov
sarb
jl
add
xor
pop
nop
dec
clc
dec
sahf
in
xchg
push
xchg
cltd
mov
int
mov
fs
sub
iret
cli
xchg
sub
add
mov
and
mov
ret
or
mov
outsl
pop
jno
addr16
and
pop
das
iret
fldenv
jle
stos
inc
xchg
lahf
std
xchg
shll
jb
pop
sbb
lods
rcll
push
test
test
dec
lock
jecxz
xchg
dec
mov
scas
push
loopne
fstp
mov
stos
gs
test
pop
mov
xor
push
mov
pop
js
push
or
sub
mull
dec
push
gs
clc
sti
or
pop
and
jg
rclb
mov
out
mov
jecxz
call
fnsave
push
or
adc
lcall
jle
mov
jecxz
in
aaa
jbe
ss
pop
pop
in
scas
add
xor
or
add
mov
lcall
sbb
push
cmpb
push
mov
repnz
xchg
xor
mov
pop
sub
ret
sub
ficoml
test
adc
out
popfw
inc
add
inc
lds
subb
cmp
fdivs
pushf
pop
add
push
inc
lret
cwtl
cmp
push
jg
cmp
dec
or
pop
je
popa
jecxz
sub
inc
mov
cwtl
xor
jns
add
call
adc
sarb
in
pusha
je
pop
jmp
adc
popf
lock
xchg
mov
sbb
jno
fidivrl
dec
mov
sbb
dec
in
stos
outsb
arpl
mov
push
mov
mov
leave
jl
cmp
ja
add
mov
or
lock
cmp
addr16
push
test
jno
xor
or
push
aam
sbb
pmulhw
push
std
mov
cmpsb
imul
pop
aam
xlat
pop
notb
clc
sub
inc
fidivrl
jae
frstor
daa
mov
dec
bound
rcrb
popf
xlat
outsb
or
stos
dec
sbb
ds
cmc
out
mov
mov
xchg
call
and
push
sbb
js
cmpsb
and
movsb
jnp
push
push
inc
xchg
pop
add
sahf
sbb
icebp
mov
enter
add
roll
inc
xchg
ja
pop
xchg
fcom
in
ficompl
xor
push
jb
popl
rcrb
sti
stos
aaa
adc
inc
jmp
push
hlt
mov
ljmp
scas
add
leave
mov
scas
mov
ljmp
imul
inc
mov
lret
sub
and
sub
in
stos
cwtl
or
sbb
fildll
mov
mov
repz
out
push
cmp
lock
iret
les
fstpl
dec
subl
and
daa
adc
or
fidivl
inc
call
jge
pop
lods
mov
mov
aad
mov
pop
arpl
xchg
mov
xor
loopne
sti
inc
push
jmp
test
mov
idivl
sar
outsl
bound
and
mov
roll
xor
fwait
scas
fistps
xor
mov
divl
inc
push
addb
mov
or
mov
cmp
inc
pop
addr16
rorl
mov
xchg
mov
loop
mov
rcrb
lahf
ss
sarl
xor
xchg
cmp
mov
and
or
das
push
sbb
jo
dec
mov
push
cmp
or
lods
mov
xor
cmp
xchg
mov
pop
jecxz
push
leave
and
adc
xchg
fstps
mov
cmp
ret
sbbb
sbb
mov
ret
lds
mov
add
jge
xlat
insl
jg
js
dec
outsb
flds
add
fbld
in
mov
xchg
lcall
and
jns
sbb
enter
aas
fs
fwait
mov
andl
jp
push
out
mov
or
hlt
aam
loope
or
mov
out
iret
xchg
dec
fnstsw
aas
pop
jmp
push
ficompl
mov
jo
fidivrl
nop
fcmovbe
xor
repnz
mov
loope
ss
aam
dec
xor
cmp
lock
call
sahf
push
and
fisubrl
and
inc
mov
adc
push
adc
inc
jno
imul
into
enter
jno
mov
popa
jl
fucomp
mov
rclb
into
xchg
jbe
test
daa
xchg
ljmp
adc
jmp
jno
fisttps
jl
xchg
imul
stos
pop
rolb
lcall
sbbb
xor
out
ja
and
mov
jmp
and
cs
mov
stos
mov
pop
fsubp
mov
pop
loope
repz
loop
pop
cmp
sti
dec
xor
notl
jbe
scas
ret
jae,pt
push
pop
mov
mov
sub
push
leave
sbb
add
or
rcr
loopne
daa
pop
mov
das
and
stos
pop
mov
xor
sbb
iret
sub
mov
xchg
repz
xchg
scas
adc
jge
adc
inc
loopne
movsl
out
test
mov
or
push
pop
aaa
xor
and
xor
subb
es
notb
je
cmp
rolb
and
mov
dec
aaa
xlat
xchg
andl
aas
push
in
lret
in
sub
in
je
and
out
ja
daa
jae
popa
pusha
ds
orb
inc
popa
cmp
xchg
mov
iret
xchg
test
jb
push
in
pop
xlat
movsl
test
in
add
dec
inc
int3
lock
and
insl
push
sbb
out
mov
outsb
jle
lea
dec
sub
or
stc
outsl
repz
sub
fwait
add
jbe
lods
fdivr
cmp
js
adcb
cmp
sub
add
push
mov
and
mov
testb
shrb
data16
leave
cmp
mov
je
pop
cmp
xchg
push
fnstsw
push
fs
push
inc
pop
lcall
cwtl
das
push
jb
pop
sub
sub
push
stos
cmp
into
ja
in
out
xchg
jecxz
xlat
imul
fs
jmp
ss
cwtl
add
push
mov
xor
mov
cmp
test
adc
or
inc
cmpsl
cwtl
fistps
stos
mov
add
pop
push
xlat
sbb
xor
out
jl
shlb
dec
loope
loope
sub
lock
sahf
int3
ret
and
pushf
inc
dec
pop
in
test
and
mov
mov
sti
ffree
rolb
mov
xor
inc
sbb
fbld
fsubs
sbbl
std
cltd
pop
adc
jmp
sbb
jle
mov
aad
xchg
mov
xor
sahf
lds
cmp
cmc
test
lea
shlb
or
pop
out
and
push
jge
cld
movsl
icebp
je
inc
dec
jge
js
mov
inc
mov
inc
or
xchg
pop
cmp
scas
lret
je
or
rcrb
mov
repz
clc
mov
cmpsl
jge
and
sub
adc
pop
ja
xor
loop
fstpl
pop
je
cli
xchg
xlat
xchg
aaa
into
into
ss
fimuls
and
mov
inc
rol
xchg
jb
jo
es
data16
imul
iret
hlt
jp
lret
stos
adc
int
roll
xchg
cmp
push
add
std
push
sub
pop
mov
inc
div
out
gs
lret
xchg
lret
and
pop
test
sahf
es
cltd
mov
jmp
outsb
inc
test
std
mov
mov
push
and
mov
or
daa
lods
rorb
jb
sub
xchg
sti
popf
addr16
sbb
jmp
push
mov
popl
mov
cli
into
pop
cmpsl
je
ficoms
mov
xor
outsl
adcb
std
and
push
fmulp
xor
rcl
lahf
rcrl
test
jne
in
sarl
lcall
nop
xchg
push
notb
or
adc
inc
pushf
js
xchg
pop
or
aaa
jmp
mov
dec
jp
sbb
cmp
push
aam
rolb
inc
or
arpl
shr
sub
jns
fistpll
jno
jno
jl
mov
popa
nop
jne
in
inc
daa
fidivl
xchg
cld
and
add
add
lods
mov
pop
sbb
jnp
pop
cmp
push
inc
fildl
aas
into
sub
test
int3
stos
fstp
cmc
push
pop
iret
mov
popf
stos
rclb
fdivs
adc
mov
insl
out
cmp
push
mov
pop
ret
jnp
out
lahf
imul
inc
ja
cmp
push
pop
cmp
mov
xor
addl
arpl
or
and
xor
lods
push
rolb
test
mov
sub
stos
mov
jle
add
ljmp
pop
jmp
xchg
jle
mov
das
xlat
in
mov
and
aas
push
jg
cmp
sub
xor
jle
push
push
imul
mov
jno
adc
loop
xchg
pop
cmp
sahf
xor
in
ljmp
add
and
fistpl
fnstenv
pop
pusha
fisttpl
jp
xchg
imul
mov
lcall
movsb
and
mov
jg
es
jbe
cs
xor
xchg
xor
cli
inc
sahf
mov
adc
bound
mov
in
lods
outsl
dec
test
mov
pop
jle
and
push
or
outsb
mov
sbb
mov
movsl
outsl
sbb
xor
jg
dec
xchg
sub
fadd
imul
pop
push
sub
jno
sub
mov
mov
out
xor
jecxz
dec
and
daa
adc
movsb
loope
divb
dec
fs
mov
sbb
es
push
jnp
push
pop
cmp
sub
cmovg
mov
fnsave
lcall
mov
cmp
outsb
sub
jmp
outsb
adc
jge
fsubrl
int
xor
lahf
push
movsl
loopne
xor
std
xchg
and
sbb
push
sub
das
cmp
dec
inc
inc
idiv
lcall
cmpsb
cmp
push
aaa
pusha
cmp
pushf
sub
loopne
mov
lret
mov
aas
pop
add
arpl
mov
or
and
jge
enter
push
arpl
int
sub
shr
imul
xchg
add
popa
sbb
lret
push
adcb
push
je
out
lds
shll
inc
dec
add
mov
clc
aam
shrb
test
pop
aam
adc
mov
cmp
movsb
loopne
jg
call
push
das
stc
cli
cltd
mov
jge
dec
mov
aad
out
dec
in
mov
bound
sbb
out
insl
inc
std
cli
or
mov
push
add
or
leave
out
sbb
mov
dec
sbb
int3
mov
int
repnz
inc
jle
adc
pushf
rclb
or
xchg
das
in
inc
mov
and
xor
or
xor
push
movsl
inc
adc
dec
decl
inc
cli
push
cmpsl
jp
movsl
pop
jle
int
sahf
ss
push
inc
sbb
out
or
enter
popf
lods
sti
mov
fmuls
int
pop
ljmp
inc
loope
add
in
inc
das
out
dec
dec
ja
dec
fsubrs
ret
jecxz
shr
pop
adc
jge
xchg
mov
jg
mov
adc
add
fwait
xor
push
and
out
dec
sahf
mov
xor
sub
or
jge
mov
icebp
dec
dec
mov
adc
rorl
push
dec
dec
sbb
sbbb
pop
lods
inc
jle
jmp
mov
push
lods
inc
outsl
xchg
das
fadd
mov
mov
sti
leavew
pusha
xor
out
xor
add
jmp
lahf
ss
cli
sbb
fsts
xor
in
jp
jb
xchg
jne
sub
mov
ftst
fistps
and
jecxz
fcomi
dec
push
inc
sti
cmp
inc
popa
fiaddl
aam
xor
int
pushf
std
repnz
mov
or
inc
jo
and
and
pop
scas
loope
push
add
mov
pop
adc
mov
mov
pop
xor
cmp
mov
jno
inc
loopne
andl
mov
push
addr16
insl
xor
pushf
push
fisttps
daa
or
pop
loope
dec
xchg
aad
push
lret
xchg
sahf
mov
jno
push
xor
add
push
cli
pusha
cmpsb
push
sub
add
cli
es
mov
aas
inc
fstl
mov
push
inc
pusha
lods
or
out
jns
scas
dec
mov
push
mov
les
rol
cmp
push
push
cmp
fld
mov
dec
sub
dec
dec
test
insl
repz
cmp
jne
mov
out
test
int3
push
fwait
jb
fs
std
and
stos
pop
mov
fmul
icebp
rcrb
or
cltd
adc
addr16
pop
mov
call
and
mov
and
stos
sar
pop
ja
enter
adc
fcmovbe
cld
std
sbb
ss
dec
fisubrl
leave
call
jge
cmp
cld
subl
push
outsl
and
push
cltd
pop
xchg
and
mov
imul
stos
pop
daa
outsl
fisttpll
sbb
mov
or
enter
inc
fldcw
std
cli
inc
aas
push
cwtl
data16
call
loope
jmp
lods
xchg
cmpsl
js
push
mov
dec
dec
or
sub
push
cmp
xchg
jnp
jge
test
lret
lret
dec
sahf
adc
adc
xchg
outsb
jnp
test
stos
pop
fnstsw
mov
adc
sbb
das
jecxz
pop
push
jb
add
pop
enter
pusha
outsl
inc
sbb
in
int
lahf
or
int3
mov
int3
inc
cmp
cmpsb
add
mov
cmp
pop
xor
stos
ja
push
mov
jmp
sbb
imull
ja
ret
cmp
outsb
addb
mov
shl
dec
ret
loope
faddl
insl
jg
sbb
cpuid
sbb
mov
jne
jge
jns
aaa
lods
ljmp
call
xchg
cs
fstpt
or
insb
fadds
test
mov
sbb
jo
lods
push
cli
inc
jge
xor
call
out
sub
cmp
in
cmpsl
lock
mov
fsts
lods
pop
fbstp
aam
cmpsl
add
movsb
pop
outsb
xor
aad
push
sarl
adc
loopne
addr16
jne
repz
mov
push
nop
daa
test
mov
jle
jnp
mov
js
daa
lcall
xor
push
pop
test
xlat
in
xor
lock
push
inc
fsts
jp
pop
pusha
push
lahf
fstps
aad
push
lds
imul
cmpb
and
icebp
or
int3
test
cmp
repnz
out
mov
push
lea
inc
adc
jb
divl
jb
outsb
xor
imul
data16
repnz
sub
les
cpuid
sub
aaa
cmp
xlat
adc
dec
inc
out
push
movb
aas
das
faddl
loop
push
dec
or
pop
sub
pop
mov
or
pop
jns
pop
test
adc
negl
fs
mov
popf
test
add
mov
xchg
adc
outsb
fwait
mov
and
fsub
rol
stos
push
popf
lret
xchg
into
outsb
lods
mov
lahf
jo
sahf
mov
ror
outsl
fcoms
rcl
stc
stos
aaa
hlt
shll
cmp
pop
rorl
sarb
pop
imul
sahf
pop
sbb
hlt
and
pop
std
xor
and
dec
push
add
pop
cmpsl
adc
lahf
jbe
pop
out
mov
lret
jmp
data16
xchg
addr16
cltd
cmc
jne
call
out
inc
dec
rcl
ret
es
jmp
out
xchg
or
mulb
movsl
movsb
out
add
mov
shll
and
ss
inc
adc
pushf
andb
sbb
mov
ret
mov
test
jbe
aas
adc
mov
sbb
popa
lds
push
roll
mov
adc
scas
mov
sbb
sbb
add
sbb
fcmovnu
jae
xor
lock
jecxz
mov
ffreep
insb
icebp
jp
hlt
cmpsl
test
push
je
jl
ljmp
lret
mov
and
dec
xchg
xor
and
dec
enter
test
push
push
mov
push
jge
sub
jle
fldenv
mov
cmp
adc
pop
or
add
mov
xor
mov
popf
imul
sbb
jl
adc
movsl
cmp
int3
sbbb
lret
add
lods
std
lcall
and
xchg
jl
push
out
pop
mov
aam
out
icebp
int3
sahf
cwtl
outsb
mov
incb
xor
sbb
fdivr
pop
sbb
inc
mov
cmpb
or
push
hlt
sbb
mov
lea
jl
pop
leave
mov
cltd
lds
clc
cmpsl
sbb
dec
dec
push
outsl
leave
scas
mov
push
cltd
std
cltd
xchg
ljmp
xchg
xchg
pop
std
jl
or
in
jmp
ds
push
pop
add
sahf
pop
add
lock
xchg
lahf
rcrb
cli
lods
test
push
lret
std
andb
ljmp
mov
pop
jmp
xchg
fisttps
repnz
arpl
adc
adc
ss
stos
and
push
mov
mov
imul
xlat
pop
popa
jnp
test
sub
aaa
mov
aaa
xor
inc
mov
addr16
mov
int3
in
hlt
mov
in
daa
dec
je
in
xor
aas
rcrb
out
mov
jle
xchg
enter
negl
test
leave
add
repnz
data16
lds
loope
mov
and
int3
xchg
ja
testb
dec
cmp
pop
add
mov
lcall
or
movsl
cmpsl
mov
fdivrl
popa
or
test
jns
not
jbe
or
xchg
cmp
jecxz
cmc
and
nop
shlb
xchg
cmp
sahf
lret
shll
xchg
call
orb
test
mov
test
dec
xchg
inc
aas
sub
and
ss
test
pop
subl
iret
push
in
lds
nop
mov
shl
or
fistpll
push
leave
popf
repz
add
push
jo
cwtl
leave
pop
add
push
push
sarl
mov
mov
subb
pop
lock
pusha
sub
aad
xchg
loop
andb
inc
pop
add
pushf
test
and
dec
mov
fdivrs
xchg
lea
popa
xchg
xchg
aam
lods
mov
jo
jp
sbb
adcb
sub
and
mov
mov
mulb
sub
stc
mov
inc
push
aam
test
add
jno
xor
movd
mov
add
outsl
iret
sbb
hlt
jnp
mov
push
pop
outsl
mov
aaa
jnp
sub
cmp
outsb
push
add
mov
out
enter
fnsave
jb
sbb
jo
mov
xlat
leave
mov
xor
mov
inc
push
dec
aam
cmp
iret
cmp
jns
or
push
cmc
and
sub
mov
shl
sub
push
mov
cmpsb
data16
stc
push
lahf
cmpsb
sub
test
ljmp
mov
lods
cld
gs
jno
mov
test
pop
arpl
js
loop
fsubl
jg
std
jle
xchg
into
ret
xchg
pop
hlt
cli
in
inc
adc
enter
loop
xchg
iret
cwtl
inc
std
add
les
dec
add
sbb
pop
sub
push
or
add
or
cmpsb
cmp
imulb
outsb
cmp
or
xchg
in
scas
inc
rcrl
enter
movsb
jmp
xchg
ret
cmpsb
outsb
std
jnp
xchg
cld
or
les
arpl
xlat
mov
push
sahf
div
iret
in
inc
xchg
fldl
or
dec
jne
call
mov
mov
inc
repz
push
int
fnstenv
xor
jle
inc
mov
pop
ss
dec
fcmovb
xorl
sti
sbb
jno
inc
mov
inc
cmp
adc
pop
cmc
xchg
xchg
cwtl
test
cld
mov
movsl
arpl
xchg
aaa
stos
push
andb
add
mov
hlt
adc
insl
fwait
sti
shrl
mov
mov
sarl
pusha
testl
and
movsl
and
sbb
mov
mov
push
fsubl
pop
or
xor
lahf
lret
adc
mov
push
insb
cld
jo
xor
or
jl
lock
lock
jmp
jns
sbb
jno
xor
xchg
xor
sti
push
movsb
cmp
dec
ret
psubusw
or
shlb
iret
das
in
stc
mov
int
pop
out
adc
jmp
inc
lds
jb
pop
mov
mov
or
xchg
jecxz
or
add
notl
divl
mov
xor
inc
cltd
cli
fisubs
int
aam
xchg
mov
add
xchg
sbb
fxch
jne
xor
loope
xchg
xchg
adc
cli
push
mov
mov
pop
mov
add
or
imul
sub
ror
jo
lret
xchg
out
mov
sub
cwtl
xchg
es
mov
mov
xchg
sub
repnz
and
rolb
movl
mov
push
and
punpckldq
into
push
aas
daa
stc
popa
mov
les
mov
pop
ds
jge
loope
test
icebp
mov
mov
in
mov
jbe
das
clc
or
test
divl
cmp
jae
or
push
lcall
push
movsb
mov
sbb
or
xor
dec
or
pop
inc
pop
sub
jecxz
or
xchg
sbb
dec
mov
cmp
pop
pop
mov
inc
or
push
cmp
fisubl
addr16
push
xlat
daa
jno
leave
pop
popa
div
adc
pop
inc
jmp
inc
mov
inc
sarl
sbb
dec
cmpsl
fwait
jno
sti
ss
cli
mov
add
test
jmp
das
leave
mov
add
ljmp
sbb
sub
push
xor
cmp
jbe
pop
jns
pop
sub
movsl
je
add
push
inc
dec
mov
mov
inc
cmp
mov
adc
xchg
mov
repz
push
fdivr
jge
adc
ja
out
mov
aas
mov
imul
sti
adc
je
mov
daa
es
pop
in
inc
jecxz
push
push
mov
push
sbbb
sti
adc
lret
movsl
mov
stc
jo
pop
out
orb
xchg
rcr
in
or
inc
jge
outsl
movsb
cmp
sbb
mov
mov
das
adc
aas
and
xchg
pop
cmc
ljmp
pop
push
mov
jecxz
xchg
adcb
cmp
out
cmp
pop
mov
push
jno
xor
lock
lret
dec
loopne
push
es
inc
fnsave
push
pop
or
cld
stos
dec
insl
lret
jmp
int3
bound
popa
pop
and
fsubrl
and
xchg
loopne
idivb
lea
repz
mov
gs
sbb
lcall
push
pop
mov
ror
lret
adc
sbb
jecxz
and
icebp
call
or
std
lahf
push
pop
imull
sub
dec
aam
shll
push
xorl
sbb
cmp
lods
in
xor
stos
rcll
lret
or
add
imul
push
orb
rclb
xor
das
mov
mov
add
push
fs
std
icebp
mov
dec
ds
out
test
pusha
push
cmpsl
stos
fwait
xor
dec
and
out
pop
inc
test
adc
cwtl
pop
sbb
mov
push
xor
ss
lret
push
mov
adc
loopne
cmp
add
shll
sbb
mov
adcl
sti
push
mov
mov
aad
outsb
push
xchg
adc
out
ret
pop
jno
test
negl
lret
cmp
cmpb
out
sbb
fiadds
imul
push
pop
mov
xchg
and
inc
sbb
imul
push
pop
pop
js
repz
pop
jb
aam
test
aad
daa
inc
ljmp
push
mov
adc
nop
push
push
add
jb
je
movsb
sub
popf
mov
jecxz
scas
push
push
orb
call
cmpl
in
fucomp
xchg
push
xor
lods
mov
ljmp
inc
cmp
std
add
inc
das
and
ds
jnp
pusha
loope
jge
mov
and
sub
test
jb
adc
ljmp
cwtl
or
sub
daa
out
cs
lahf
jno
insl
mov
fwait
cmp
cmp
sahf
pop
out
scas
les
cmp
push
inc
dec
xchg
test
fldl
das
xchg
int3
and
xor
andb
outsl
inc
in
push
sub
fidivl
rolb
jecxz
jmp
stc
push
imul
test
jno
pop
gs
xor
mov
iret
xchg
test
mov
insl
mov
and
adc
xor
mov
cmp
adc
lret
ret
and
or
mov
mov
adc
les
cmc
loopne
insl
add
loopne
mov
mov
pop
pop
ds
xor
cli
fwait
aas
sbb
pushf
jns
adc
inc
dec
loopne
inc
sbb
dec
or
mov
push
out
jnp
out
das
test
jbe
xchg
lea
adc
push
mov
decb
jp
pop
or
and
xchg
test
test
ret
mov
xchg
mov
sti
sub
pop
je
jle
movsl
lods
xchg
mov
add
xchg
out
lds
cmp
push
repnz
roll
sbb
sub
xchg
lea
repz
cmp
into
add
in
mov
mov
add
push
cmp
aas
repz
cmpl
insb
dec
loop
xchg
add
sarl
and
rolb
push
mov
hlt
std
cmp
lcall
pop
imul
pop
add
adc
add
dec
test
out
push
mov
das
call
arpl
push
mov
fwait
jmp
adc
and
dec
cli
nop
enter
dec
iret
popa
data16
iret
inc
aaa
adc
sbb
insl
data16
pop
mov
fs
sti
add
and
or
jo
sahf
dec
mov
xchg
inc
and
cwtl
stos
jmp
out
push
or
sbb
ss
and
pop
div
loop
pop
out
shll
jl
repz
ret
pop
insl
fistl
test
int
xor
enter
pop
inc
push
cmc
mov
stc
or
in
jnp
rclb
stos
xchg
xchg
mov
cmpsb
gs
fwait
push
ljmp
call
clc
ss
and
lock
push
subps
mov
xor
ss
and
fistps
push
jmp
leave
xor
shlb
inc
cmp
inc
xor
call
mov
cltd
dec
cmpsl
lret
push
fsubl
push
cmp
test
mov
mov
pop
jbe
rorl
sbb
cmpsl
push
xchg
addr16
imull
inc
fcomi
sub
roll
aad
jae
or
into
add
incl
pop
ss
sub
jne
jl
sti
outsb
imul
mov
outsb
cmp
push
jmp
sbb
mov
mov
sub
sbb
sub
movsl
icebp
xchg
clc
lods
popf
inc
dec
nop
fdivrl
aam
fimuls
or
mov
dec
loop
lods
mov
cmpsl
int3
iret
jg
xchg
leave
lock
icebp
cli
call
aaa
das
push
inc
pop
arpl
leave
stc
pop
pushf
inc
mov
ljmp
stos
jmp
inc
inc
fcom
pop
into
leave
sbb
jnp
mov
loope
jnp
push
mov
fidivrl
adc
jne
lgs
lods
mov
loopne
sub
pop
int
xchg
sbb
cmpsb
lock
cmpl
cmp
into
sub
arpl
outsb
mov
out
pushf
shrb
mov
aaa
loope
je
xlat
dec
fisttpll
jae
xchg
movsb
push
int
sbb
shr
addb
jae
rcll
adc
lods
xchg
js
inc
jg
pop
into
xor
incb
adc
inc
and
popa
test
icebp
pushf
scas
push
mov
fistps
lea
test
cmp
adc
pop
repz
and
pop
scas
mulb
daa
into
nop
add
mov
cltd
out
cmc
jl
les
adc
daa
xchg
xor
stos
incl
mov
jbe
aas
outsb
xchg
insl
sub
cmp
insl
insb
in
lret
hlt
xchg
jge
aad
rcrl
lret
xchg
push
je
scas
lret
xor
push
sub
push
add
mov
mov
leave
and
dec
cli
mov
lods
jg
pop
popl
xor
add
or
xor
shrl
push
jb
mov
ds
pop
xsavec
add
jmp
or
sub
jge
inc
cmp
out
hlt
popa
xor
ds
into
enter
sub
insb
fs
leave
scas
inc
mov
xchg
push
jb
fidivs
std
movsl
mov
aaa
or
dec
adc
sbb
insl
test
add
lea
repnz
cli
repnz
rorb
xchg
cli
test
push
lock
and
and
iret
add
pop
cmp
rcll
or
xor
pushl
sub
adc
pop
addr16
sub
jp
sub
movsw
cmc
ja
cmp
outsb
mov
ret
sbb
iret
fcoms
mov
cmpsb
out
or
out
pop
dec
xchg
adc
out
pop
imul
add
adc
in
push
inc
test
aad
fwait
inc
fldl
movsb
fs
pop
sub
shlb
pop
in
loop
pop
push
jmp
sbb
gs
test
xorb
and
add
sub
loopne
mov
rol
ljmp
mov
aam
mov
mov
mov
andl
sbbb
xor
mov
pusha
adc
cs
xor
xchg
dec
mov
sbb
fst
jle
int
dec
fs
ljmp
adc
push
xor
cmc
int3
xor
cmp
jg
cmp
ja
or
jb
or
pop
aad
cwtl
dec
aad
pushf
arpl
dec
test
jl
mov
dec
out
or
or
lcall
jecxz
fidivs
jmp
out
stos
out
ficoms
mov
or
pop
and
ds
mov
in
xchg
ss
add
mov
cwtl
jbe
push
lods
aaa
xchg
xor
and
and
inc
dec
pop
jns
xchg
pop
add
fists
add
and
pusha
rolb
xchg
lods
cmp
xchg
xor
jo
test
dec
dec
dec
cmp
sbb
adc
xchg
sbb
sbb
mov
insb
shll
imul
mov
jle
dec
rclb
mov
xchg
das
fists
jmp
sbb
cmp
in
shrl
dec
mov
dec
and
hlt
mov
shrb
adc
pop
les
mul
jne
notb
inc
fildl
push
in
aam
xchg
clc
movsb
in
inc
mov
mov
pop
je
lds
fmuls
inc
xlat
sub
mov
adc
xor
adc
xor
xchg
sbb
mov
or
inc
rcl
add
pop
dec
mov
xchg
outsl
and
pusha
and
xor
push
xchg
add
jb
rcll
cmp
lods
and
dec
cmp
pop
loopne
xchg
cmp
add
mov
inc
adc
adc
jbe
cmp
adc
mov
fsubrs
sahf
bound
sarl
push
outsl
scas
fistpl
shll
mov
jle
jecxz
int
cli
xchg
int3
and
stos
dec
and
aaa
stos
push
mov
lods
clc
sub
insl
jge
inc
sub
mov
ret
int
in
mov
sub
dec
jns
pop
stos
sub
sbb
montmul
cmpsb
xorb
lock
or
mov
mov
into
sti
pusha
stc
rclb
dec
mov
adc
push
xlat
mov
cmpsb
and
sub
and
dec
jne
jp
test
sar
xchg
inc
daa
lcall
shrb
xchg
dec
dec
sub
and
enter
sti
lahf
into
hlt
clc
mov
or
sbb
mov
mov
or
lods
push
out
rol
pop
dec
cmpsb
push
mov
cs
mov
dec
call
pushf
bound
mov
xor
mov
inc
testl
scas
push
push
fidivrs
pop
and
std
pop
pop
mov
cmp
in
jo
pushf
stos
loop
in
mov
push
xchg
push
iret
inc
ficompl
fimull
push
mov
mov
cltd
mov
and
add
sti
mov
arpl
daa
aam
or
inc
xor
aas
xchg
out
inc
popf
lahf
adc
sub
xchg
insb
dec
cmpsl
movsl
mov
aam
pop
add
in
jge
loope
push
imul
and
mov
adc
sti
or
jge
and
push
jl
sbb
mov
mov
xchg
cmp
pop
jg
nop
bound
pop
iret
cwtl
pop
insl
mov
push
sub
and
cltd
cmp
cmp
pusha
adc
ret
decl
ret
jl
mov
push
cmp
adc
scas
fstpl
stc
repnz
pop
leave
ljmp
jne
clc
mov
int3
mov
cmp
in
aas
popa
hlt
cmp
sbb
insb
fdivrs
scas
xorl
lret
adc
popa
shll
sub
mov
or
test
sbb
xlat
xchg
sub
add
adc
rolb
popa
pop
or
mov
paddb
sub
jl
sbb
mov
dec
in
gs
popa
jle
mov
mov
jb
pop
sub
sbb
enter
push
movsb
jnp
aad
or
add
inc
arpl
xchg
shlb
movsl
mov
jg
stc
mov
repnz
repz
or
mov
sub
les
sbb
push
popf
mov
mov
cmpsl
outsb
cmp
adc
ds
pop
insb
loop
pop
cmp
sub
jl
or
sub
or
testl
out
xadd
jmp
xor
or
pop
and
imul
or
xor
sbb
jmp
add
aaa
sbbb
mov
sub
add
pusha
push
js
cmp
ljmp
mov
mov
lods
pop
cmc
repnz
sub
adc
cmp
cmp
mov
lcall
in
fldt
ja
scas
cli
add
movsb
ljmp
mov
push
pop
cmc
fsubs
daa
jnp
sti
and
data16
push
stos
mov
js
inc
fmul
mov
into
lahf
pop
lds
cmp
sar
xor
lret
jmp
inc
bound
mov
mov
sbb
clc
adc
stos
xchg
dec
push
sarb
sbb
in
xor
fadds
sbb
pushf
test
sub
sbb
add
test
xor
popa
scas
xor
scas
std
and
fbstp
xchg
stos
xchg
lret
fcomi
movsl
popa
dec
or
std
cmp
push
inc
mov
cli
scas
bound
lods
inc
hlt
and
sub
dec
pop
sub
fbstp
mov
shrl
mov
pop
cmp
jo
je
mov
add
or
ret
aad
add
enter
fwait
negb
sahf
aaa
pop
test
scas
inc
std
je
dec
je
imul
and
jle
shll
mov
call
int
add
mov
push
mov
mov
adc
push
mov
jbe
stos
es
sbb
mov
loope
es
cli
ljmp
dec
shll
push
pop
dec
pop
pusha
adcl
in
loope
push
cmp
adc
cltd
pop
sub
cmp
inc
cs
xrelease
xor
mov
push
aaa
adc
leave
push
rcrl
cmp
nop
daa
fbld
pop
hlt
add
dec
pop
adc
pusha
push
adc
jecxz,pt
faddl
pop
mov
or
imull
sub
jp
mov
sbb
xchg
add
sbb
int
imul
push
cmp
xor
inc
inc
stc
popf
das
cmp
and
adc
clc
nop
jle
push
jg
cmpsl
insb
inc
out
mov
xor
pop
jae
mov
mov
mov
pusha
and
or
stos
mov
dec
bound
fcompl
leave
int
cld
aaa
mov
cli
fsubl
cmp
movsb
push
jmp
cmpsb
lock
rcl
aaa
into
sub
insb
lret
out
mov
pop
loopne
inc
mov
dec
cmp
jle
dec
pop
test
xor
xchg
mov
push
pop
loope
arpl
lock
iret
addr16
jbe
cmp
ss
pop
sub
jg
sbb
imul
movsl
inc
mov
call
cmp
add
pop
loope
ja
cmp
insb
inc
test
xchg
scas
or
push
mov
aaa
jo
stos
inc
sbb
cli
and
push
jmp
mov
ja
insb
and
sub
jbe
in
push
push
cli
std
cltd
xor
out
mov
clc
sbbb
icebp
or
push
cmp
adcl
std
push
mov
adc
xchg
pop
cmp
xor
negb
icebp
inc
enter
clc
pop
inc
mov
push
inc
test
mov
sbbb
sub
and
dec
mov
cli
outsb
dec
fdivl
inc
and
xchg
xchg
fimuls
ja
cmpsl
lahf
jmp
dec
insb
mov
stos
xchg
add
pop
sub
test
scas
ljmp
stc
stos
jle
addb
shl
outsl
cmp
imul
jecxz
jp
xor
mul
push
sub
loopne
roll
aam
jno
cs
pop
nopl
lods
call
in
incb
idivb
push
xor
xchg
pop
xor
hlt
sbb
inc
mov
lods
dec
les
cmp
add
cmp
xlat
jg
mov
or
fmull
mov
test
jo
mov
in
jno
mov
test
inc
and
movsl
inc
sbbl
nop
stc
sahf
cltd
data16
add
movsl
out
out
shlb
cwtl
mov
inc
nop
add
adc
pop
xchg
pop
cmp
stos
hlt
sahf
xor
jle
mov
ret
adc
push
sbb
sub
inc
ds
scas
movsl
jp
xchg
mov
push
sub
movsb
leave
and
push
and
ja
add
out
adc
xchg
add
cmc
ret
nop
ja
cwtl
jb
pop
cmp
fnstcw
xchg
dec
ret
aaa
or
in
sbb
repz
push
mov
out
xchg
in
xlat
dec
xchg
sbbb
fldl2t
lods
int
jmp
add
jg
ret
out
fbstp
xchg
add
test
scas
ds
sub
mov
cmp
add
and
neg
mov
jno
mov
aaa
js
fsubr
stos
test
and
cmp
call
xchg
inc
cs
sbb
fidivrl
jecxz
jnp
icebp
pop
loope
mov
insl
sbb
cmpsl
rcll
imul
orb
andb
and
fsubl
mov
out
xor
test
sbb
mov
and
inc
fs
test
shlb
test
adc
rclb
cld
loopne
test
mov
shrl
jl
jne
dec
bound
pushf
cwtl
stos
movsl
jg
mov
test
or
xor
clc
popf
dec
in
jl
shr
xor
lcall
adc
cwtl
xor
adc
push
int3
lahf
push
xor
xchg
sub
fnstenv
xor
int3
out
out
dec
jbe
mov
insl
lahf
add
push
add
je
jae
idivl
push
mov
cmp
andb
jo
frstor
push
jb
cmp
mov
inc
sbb
mov
pop
shl
js
pop
mov
xor
shrb
pop
cs
stos
cmp
dec
sti
mov
adc
or
sub
or
push
nop
sbb
lcall
shl
mov
adc
mov
xor
jl
mulb
push
or
mov
push
fisubrs
in
bound
and
ds
rorl
and
inc
es
jnp
mov
jp
mov
int3
sbb
jb
dec
dec
jmp
aaa
cmp
sub
xchg
xor
ljmp
mov
rorl
pop
sbbb
int
insb
bound
mov
lods
mov
adcl
repnz
stos
stc
sub
dec
inc
adc
xor
mov
mov
pop
push
jne
lret
jae
cmp
dec
test
imul
push
xor
xchg
mov
mov
subb
xchg
jmp
pop
repnz
lods
jl
push
cmp
fcmovnu
outsl
fs
mov
test
aaa
rol
pop
ss
stos
rorb
jge
lods
ss
push
xchg
mov
lret
cmpb
jg
push
inc
jle
cli
mov
mov
xchg
das
lahf
sub
int3
dec
divb
jg
dec
or
mov
jae
add
cmp
push
jmp
pop
into
loopne
std
push
out
movsl
fwait
addb
and
or
inc
pop
adc
mov
jne
sbb
pop
sub
mov
add
mov
stc
cmp
cmp
aas
add
push
xchg
adc
loope
push
and
decl
leave
shrb
xchg
push
gs
in
addb
push
fmuls
push
loope
out
mov
adc
int
lret
adc
or
mov
pushf
push
xor
cmpsb
ret
scas
add
mov
add
cwtl
push
scas
push
popf
jmp
pop
jo
mov
sarb
fisubrs
icebp
or
adc
jle
pop
fs
ss
add
jmp
push
or
mov
fsubs
cmp
mov
movsb
in
out
call
push
pop
jl
sub
xor
mov
ss
lret
pusha
mov
leave
sub
sub
sub
dec
pop
insl
dec
cmp
lahf
fs
lcall
dec
je
xchg
ljmp
int3
xchg
ljmp
mov
and
ljmp
mov
sub
ret
mov
hlt
addr16
pop
mov
xchg
cmpsb
stc
test
lahf
movsb
dec
cmp
cld
test
and
and
fistps
jle
ja
icebp
push
outsl
jl
mov
jmp
push
and
xchg
cmpsl
outsb
cmovo
in
cmp
test
dec
sbb
or
pushf
adc
rcr
or
ljmp
sbb
inc
bound
sahf
bound
aam
add
jae
adc
pop
ja
xor
and
ret
stos
adc
push
repnz
sbbl
in
inc
mov
xor
xor
push
and
test
adcb
and
popf
xor
jae
jo
xor
dec
insl
xor
cmc
arpl
lret
push
sub
test
jne
inc
leave
flds
and
adc
mov
sbb
and
imul
scas
mov
imul
jae
sbb
ret
xchg
mov
cmp
cli
and
pop
xchg
ja
or
roll
out
jg
mov
fsubs
push
push
sbb
sub
test
cmp
add
repz
ss
popl
jo
xchg
fsubrp
into
lods
cmpb
inc
adc
push
and
pop
nop
je
out
add
and
inc
mov
add
jnp
std
pop
ss
push
jle
mov
mov
in
outsl
movd
jle
dec
mov
inc
pop
sbbb
inc
adc
xchg
adc
cltd
inc
pop
iret
xor
pop
mov
arpl
jg
pop
mov
and
shl
mov
or
push
lea
push
outsl
or
lahf
push
mov
jg
stos
jmp
mov
out
test
sub
add
adc
lcall
push
mov
fisttpll
gs
xor
into
and
clc
sahf
sti
jecxz
call
jnp
mov
fwait
and
cltd
std
dec
or
sub
sub
iret
mov
jbe
sbb
jae
xlat
leave
repnz
test
mov
sbb
lock
adc
ds
cmp
insb
fdivrl
aad
imul
add
and
jle
js
add
sub
lahf
stos
mov
mov
push
roll
cmp
mov
sub
cmp
scas
mov
xor
or
xchg
add
out
cs
fisubrl
adc
sub
in
dec
cltd
fistpll
jmp
sub
int3
push
test
jg
add
scas
cmpsb
xchg
xor
cmp
push
add
dec
pop
push
pop
jnp
xor
mov
int
sbb
jmp
mov
mov
add
outsb
pop
imull
push
mov
loope
and
or
lds
jns
imul
mov
jge
mov
cs
fwait
xchg
and
ret
adc
fwait
sub
jns
insb
mov
cmp
dec
jecxz
add
jae
sti
fwait
xchg
lods
ret
je
mov
into
movsl
jp
js
push
pop
sbb
roll
neg
mov
dec
pop
rcr
pop
pop
mov
aam
jne
jns
fsubr
cmp
lret
xlat
jmp
xorb
ljmp
inc
jns
sbb
xlat
sbbw
adc
leave
mov
je
mov
insl
jmp
sbb
repnz
xorb
lret
fadd
push
std
inc
or
jge
sub
push
pop
hlt
push
xor
inc
imul
inc
push
push
and
int
pop
out
sbb
xor
dec
sub
jno
xor
push
in
lret
jp
orb
nopl
cmp
cli
jecxz
mov
sbb
mov
pop
sub
dec
adc
shl
stos
movsl
and
xchg
insl
push
rcrb
push
jbe
daa
bound
sbb
les
das
loop
cmc
or
in
and
rclb
lret
adcb
js
clc
pop
testl
fdivp
push
xor
sub
mov
xchg
cwtl
mov
rcll
jbe
std
int
xchg
mov
jg
jns
test
lock
inc
pop
cli
rorl
shlb
sub
fwait
mov
mov
xchg
adc
loope
les
push
inc
xlat
shr
xchg
lret
push
mov
inc
sbb
fdivp
inc
int3
adcb
data16
ljmp
mov
add
stc
jl
sub
data16
out
cmpsb
adc
mov
pop
cmp
cli
cmp
sbb
push
xchg
imul
loope
dec
mov
inc
in
jecxz
stc
enter
mov
mov
sbb
cmpsb
push
mov
sub
les
and
pop
rorb
cmc
cmp
xchg
out
inc
pushf
dec
xor
in
and
fiaddl
outsl
cmp
sbb
pop
adc
and
xor
test
jno
repz
scas
aad
sub
cmpsl
ret
and
add
outsl
ds
jnp
lea
cli
test
pop
loopne
pop
xchg
loope
loope
int3
mov
inc
test
dec
or
in
sbb
mov
loopne
inc
leave
cmpsb
fdivp
movsl
int3
dec
jae
add
mov
push
bound
push
bound
inc
int
arpl
pop
pop
dec
daa
add
daa
push
orb
sbb
mov
subb
sarb
scas
inc
inc
gs
inc
cmpsb
dec
lahf
pop
mov
ss
mov
sarb
and
fcmovne
fmuls
mov
mov
test
mov
cwtl
dec
fisubrl
ljmp
fucomp
daa
in
imul
mov
cmp
inc
arpl
bound
and
sarb
jle
lret
push
fcomps
mov
je
pop
xor
jnp
or
gs
cltd
ret
xor
jmp
es
nop
mov
lahf
and
and
ja
jno
xlat
dec
cltd
or
outsb
dec
aaa
pushf
xchg
sbb
cmp
ret
loop
lret
sbb
aas
xchg
fwait
jl
cmp
mov
cmp
lcall
inc
lahf
call
ss
insl
fsubrs
rclb
push
bound
cld
push
fiadds
jnp
sbb
sbb
clc
and
mov
dec
stos
mov
pop
lock
sahf
cmp
nop
es
repnz
fcmovb
divb
arpl
stc
dec
les
sbb
mov
shr
out
add
inc
push
les
addl
inc
shrb
adc
sbb
fldcw
pop
or
sbb
mov
jnp
mov
in
bound
decl
mov
push
add
dec
add
or
or
ficoms
cmp
fsubr
mov
and
lea
pop
test
or
lahf
cmp
push
fdivrl
push
adc
jge
adcb
mov
or
dec
repnz
into
jecxz
test
xchg
data16
test
cld
clc
out
jno
pop
mov
add
xchg
cmp
lods
mov
stc
mov
pop
fwait
nop
ss
hlt
mov
pop
xor
ffreep
lcall
fs
ret
es
dec
sbb
sub
fstl
adc
jns
ret
push
out
xlat
xchg
or
test
test
fldl
into
das
adc
push
inc
xchg
cmp
cmp
and
out
in
in
adc
or
xchg
add
sbb
cwtl
sbb
push
mov
jg
imul
scas
inc
mov
pushf
add
fwait
xor
xorl
ljmp
outsl
cmp
imul
lcall
and
xor
inc
fdivrl
or
mov
xor
jg
aas
dec
sbb
mov
jge
lea
insl
in
das
mov
push
call
ljmp
adc
dec
push
mov
ret
pop
and
scas
in
jl
andb
push
pop
arpl
sbb
subl
sbb
ljmp
jno
es
mov
out
push
xor
es
iret
outsb
cmc
mov
adc
shrb
aad
mov
mov
push
test
in
add
nop
jo
icebp
and
pushf
mov
pop
cmp
cmpsl
mov
adc
dec
inc
jl
push
and
and
insb
decb
dec
std
push
mov
add
nop
adc
mov
jne
ja
negb
push
ss
adc
testl
push
pop
push
xor
pop
push
jae
sbb
mov
fists
jmp
xchg
imull
lds
add
xlat
dec
jne
data16
pop
out
loope
popf
sbbb
std
cmp
xchg
call
push
in
sti
xchg
ja
aam
mov
sub
out
mov
sub
or
sub
jl
dec
inc
pop
js
pop
in
shrl
ret
fistpll
jno
repz
pop
mov
pop
jecxz
or
sbb
lods
inc
push
pop
add
fs
test
stos
inc
enter
lahf
sub
xor
sub
xor
mov
push
inc
pop
pop
ds
ret
cli
adcl
xchg
sbb
sbbb
pop
sbb
mov
outsb
push
sbb
in
dec
loop
push
shrb
cli
jne
insl
mov
sbb
jnp
fwait
add
mov
sti
jo
test
xor
and
out
mov
sti
ljmp
jno
and
bound
inc
rorl
mov
jp
xor
jo
js
sbb
sbb
adc
xorl
mov
rclb
add
xor
arpl
fs
mov
dec
shrl
lret
hlt
shr
mov
mov
ja
pushf
mov
fisttpl
sarb
std
loopne
negl
aaa
hlt
cmp
cli
xchg
loopne
cmp
add
sbb
and
inc
popf
adc
shl
aaa
jb
fnstsw
jl
in
pusha
push
jl
outsl
xchg
aaa
fwait
sti
xchg
sarl
loop
cld
sbb
jns
test
adc
xor
adc
dec
fbstp
loop
std
adc
test
mov
push
mov
testb
sub
mov
loope
push
popa
clc
mov
fnstcw
shll
loop
mov
mov
iret
adc
enter
lret
out
imul
leave
jns
sti
loopne
shlb
scas
fiaddl
cmp
jne
shr
stos
pop
fldl
pop
mov
lcall
mov
sti
sbb
aas
sbb
ljmp
mov
movsl
sbb
xchg
cwtl
mov
mov
or
lods
inc
cmpsl
sub
stos
inc
lcall
mov
and
cmpsb
sub
dec
pop
scas
popa
jl
xchg
stos
pop
lods
cmpb
movsl
out
jae
pop
inc
leave
inc
sbb
or
popa
clc
shlb
jg
movsb
outsb
in
push
std
ljmp
lret
sub
jno
test
xchg
mov
jne
or
pop
dec
xchg
cmpl
adc
je
mov
adc
orb
sub
add
popf
popf
mov
inc
push
mov
jmp
mov
fdivl
dec
sbb
dec
jecxz
scas
jns
and
xorl
cli
ja
jmp
dec
and
pusha
xchg
call
insb
xor
aaa
mov
leave
jmp
jo
std
ds
test
xchg
xor
enter
mov
mov
mov
out
push
call
push
ljmp
jnp
adc
dec
fnstsw
mov
lahf
lds
sbb
push
dec
loope
jp
enter
jno
iret
push
out
or
jns
or
imul
cmpsb
mov
lahf
stos
stc
movsb
aas
insl
mov
in
shrd
incl
mov
jmp
cld
out
loop
cwtl
imul
outsb
and
ja
mov
pushf
add
aam
out
mov
lahf
cmp
push
sub
push
out
mov
shlb
mov
push
sub
cwtl
mov
lcall
ja
ljmp
push
icebp
jbe
and
xchg
adc
fidivl
mov
je
lcall
sbb
sub
notb
decb
clc
mov
movsl
movsb
dec
stos
inc
and
mov
xlat
repnz
outsl
cmp
cld
add
sbb
stos
mov
lret
arpl
stos
cmpb
inc
jg
nop
sbb
adc
inc
add
or
popa
mov
xchg
sub
pop
iret
loope
sub
add
pop
fsubp
in
adc
mov
inc
push
mov
sbb
enter
lret
ret
push
es
pusha
aam
scas
mov
cmp
ja
fadd
cmp
lods
xchg
cmp
les
fcmovne
rorb
cs
dec
and
or
add
fdivrs
adc
fucomi
mov
stos
mov
dec
pop
add
outsb
sub
inc
lret
add
popf
adc
sarl
sbb
jne
sub
mov
daa
outsl
and
lea
xor
jmp
xor
fldt
pop
mov
and
adc
mov
dec
jo,pt
repz
pop
inc
jbe
jbe
inc
push
out
and
jmp
xor
jae
dec
push
fwait
jmp
test
mov
andl
xchg
push
iret
rolb
mov
lock
inc
sub
cwtl
or
sbb
ret
and
dec
test
pop
adc
jmp
lock
jecxz
sarl
ret
imul
lret
push
inc
mov
addr16
repnz
mov
clc
adc
cmpsb
stos
add
pop
sub
ja
fwait
arpl
cmp
pop
sub
mov
movntq
dec
jne
imul
jo
mov
test
enter
sub
loopne
fsubp
rcrl
jnp
cmp
int
stos
or
sbb
ljmp
lahf
test
add
fnstsw
cld
lods
int
andl
or
sti
adc
sbb
pop
js
add
shrl
fnstcw
aaa
rcrl
inc
pop
addb
aad
xchg
jne
jmp
lods
out
adc
inc
lea
into
mov
push
inc
adc
pop
and
sub
dec
sbb
mov
mov
xor
fisttps
xor
lods
sbb
insl
jp
mov
jnp
inc
cmp
xchg
test
xchg
jbe
xchg
in
lcall
enter
fcmovu
aam
addb
repz
and
or
inc
add
dec
pusha
sbb
sub
mov
sbb
fstpt
fs
lret
cmpsb
sti
mov
sub
dec
adc
in
insl
jge
cmp
cltd
notl
orb
fwait
in
sti
xchg
push
jl
loope
cmc
pop
cltd
mov
xchg
insb
stos
arpl
cltd
jbe
mov
into
mov
movsl
adcl
pop
and
add
daa
mov
push
js
dec
dec
adc
xchg
scas
lahf
or
push
and
mov
scas
inc
loope
fdivl
push
inc
int3
mov
cwtl
adc
jns
icebp
cmp
pop
ds
stos
mov
cs
fmuls
insb
cmc
dec
xor
sub
cmpsl
mov
lcall
test
jnp
cmpsb
js
push
jle
sbb
push
mov
sarl
or
iret
fcompl
mov
or
xor
pop
mov
inc
fidivrl
scas
call
sarb
aas
push
icebp
inc
popa
add
clc
dec
adc
xor
scas
jg
rorl
push
xchg
sbb
mov
andb
mov
mov
fiaddl
sub
lret
xlat
cld
and
dec
out
mov
sub
cmp
fists
pushf
fldl
xor
loope
out
popf
adc
pushf
xor
pushf
cli
lods
enter
inc
mov
pusha
pop
mull
add
adc
lret
pop
in
dec
sbb
jnp
jecxz
mov
cmp
cwtl
xlat
or
iret
push
insl
push
mov
mov
lods
mov
jb
gs
sbb
sbb
fdivl
ret
adcb
and
jne
out
mov
ja
nop
sub
adc
xchg
test
sub
or
aas
rorl
cmp
xchg
and
cmpsl
xchg
sub
in
mov
mov
dec
stos
mov
jmp
inc
mov
cld
inc
das
iret
sub
leave
jb
sti
out
outsb
dec
sbb
add
inc
xor
inc
stos
les
icebp
xor
adc
xor
stos
add
add
les
sti
add
ficomps
and
loope
negl
shll
xchg
jae
pop
inc
leave
push
lock
mov
adc
mov
cmp
mov
gs
sbbw
out
push
mov
jge
mov
xchg
jae
cld
or
pop
cld
ret
lods
out
cs
das
leave
pop
outsl
scas
mov
lret
ficompl
popa
inc
inc
dec
inc
ljmp
lods
mov
fwait
adc
sub
iret
lretw
gs
fs
in
in
insb
sub
mov
mov
jns
shrl
mov
and
dec
jns
cmc
and
imul
lcall
pop
loope
xchg
in
xor
dec
mov
outsb
jle
jmp
jb
jle
and
cwtl
lahf
and
movsb
movsb
xchg
ficoms
dec
pop
or
rcrb
js
loopne
std
loop
out
lock
ds
sbb
pop
sub
js
sub
std
in
das
adc
jnp
shlb
sbb
mov
loopne
adc
sahf
fbstp
out
out
repnz
xchg
and
cmp
inc
sbb
mov
ficoms
xor
cmp
jl
arpl
fwait
cmp
or
sahf
xchg
shrb
mov
scas
cmp
cmpsb
fs
or
call
or
adc
sub
push
lds
mov
dec
xchg
jmp
test
hlt
mov
rol
repz
cld
xchg
cmp
sbb
and
movsl
fdivrl
push
scas
std
jmp
scas
inc
bound
add
mov
mov
mov
mov
jcxz
jae
dec
adc
add
int
mov
dec
push
test
mov
fcmovnb
aas
dec
lods
jo
stc
cmp
lods
ss
fdivrs
loop
hlt
sbb
push
add
inc
mulb
fcompl
in
test
in
lahf
jle
lods
push
in
push
pop
lds
stc
dec
pop
fcmovnu
mov
flds
sbb
in
aad
push
nop
add
mov
popf
xor
lcall
jnp
stc
push
xor
cmp
rcr
sbb
jne
dec
ret
popf
push
clc
adc
stos
jo
inc
es
out
cld
cli
dec
mov
int
enter
filds
adc
mov
xchg
in
stos
xorb
cs
mov
fcomi
xchg
mov
faddp
jmp
fs
in
cmp
cltd
push
push
and
outsl
es
nop
into
gs
jb
icebp
pusha
in
das
adc
mov
push
mov
pop
jle
push
out
jne
outsb
mov
fsubrs
jno
out
cmpsl
rorb
lahf
pop
sbb
fs
pop
push
lcall
in
mov
ret
ds
add
mov
or
punpcklbw
mov
xor
xchg
push
ss
leave
andl
jno
pop
imul
daa
mov
test
dec
pop
lods
rolb
pop
test
lcall
shlb
rcl
jbe
add
insl
pop
inc
push
xchg
pop
popf
es
sbb
fsubr
test
fisubrs
fwait
icebp
jmp
outsb
js
mov
ret
stc
aas
popa
mov
sub
push
mov
push
mov
fsubr
sbb
and
das
inc
fs
xchg
ret
test
or
fisubrl
jns
js
int
pop
addr16
call
movsb
xchg
jo
insl
in
insl
cmp
sub
fidivrs
arpl
push
or
icebp
mov
ljmp
and
jp
push
jo
cmpsl
inc
lods
es
jg
cli
test
sbb
cmp
push
dec
pop
inc
loope
inc
icebp
fldenv
jge
mov
cmp
xor
inc
or
mov
mov
pop
jbe
sbb
push
mov
dec
xchg
call
out
mov
pop
jge
cli
xchg
stos
pop
scas
out
or
adc
push
mov
jae,pt
shrb
sbbb
cmp
pop
adcb
fs
push
imul
dec
test
out
mov
fwait
les
stc
clts
nop
stc
fwait
mov
in
pop
xor
sbb
sbb
lahf
arpl
and
rorl
lods
cld
push
cs
mov
add
andb
jmp
movsb
cmpsb
push
cmp
in
cld
les
sbb
ljmp
fnstsw
movsl
mov
inc
fs
mov
push
adc
sbb
aaa
mov
movsl
int3
cltd
mov
push
sub
xchg
fsubr
jne
or
dec
scas
mov
test
jge
and
xchg
or
fldcw
inc
out
mov
push
push
mov
cmp
repz
ja
or
push
sub
ret
sub
xorb
push
push
lahf
xor
test
mov
cwtl
inc
xchg
jno
mov
cmp
pop
cmpb
cmp
mov
dec
jecxz
sub
mov
and
mov
or
push
rcl
cltd
xor
testl
push
inc
mov
cmpsb
out
lods
cld
push
push
push
fcoms
shlb
popa
adc
sbb
push
daa
add
out
scas
jo
mov
mov
mov
pop
mov
mov
cs
xchg
daa
das
inc
pop
mov
jg
jg
ljmp
scas
out
lods
add
sub
xchg
dec
mov
out
js
mov
imul
mov
mov
in
mov
xchg
inc
in
addr16
sti
movsl
pop
pop
sub
mov
or
out
push
dec
stos
test
push
sbb
pop
add
pop
mov
push
mov
xor
mov
push
xchg
mov
into
subb
jg
push
movsl
push
xor
push
shrb
cs
cmp
push
and
and
inc
orl
les
test
mov
jb,pn
push
and
xchg
js
mov
out
jecxz
xor
xchg
add
je
out
insb
jmp
dec
or
xchg
xor
inc
icebp
inc
add
and
pop
fsubs
sbb
fdivp
mov
scas
scas
push
sbb
addr16
sbb
mov
lds
mov
leave
and
in
lds
adc
idivl
pop
jbe
jb
scas
dec
jmp
into
add
sub
bound
pop
cltd
dec
fmull
stc
fisubs
movsb
sbb
jge
mov
add
out
pop
movsl
sti
repz
sbb
mov
push
test
push
mov
push
mov
shlb
mov
loopne
ds
xor
inc
cmp
pop
xor
push
aas
jge
mov
push
mov
push
xlat
jo
mov
int
pop
roll
mov
insb
sahf
push
adc
sub
push
inc
roll
sub
cmp
jle
pop
push
imul
pop
xlat
outsb
mov
ljmp
mov
or
std
enter
inc
pop
or
adc
iret
aad
dec
nop
movsb
add
xchg
mov
out
lret
out
cmp
push
pop
loop
imul
lock
xchg
pop
ret
push
mov
ficoml
test
mov
lock
das
pop
sub
rorb
gs
ds
clc
xchg
in
addl
push
in
mov
loopne
lret
mov
cmc
repnz
dec
jmp
cmp
xor
sbb
test
and
xor
push
cmpsl
stc
inc
mov
cld
sbb
out
xchg
jne
xor
divb
ds
pop
daa
lret
pop
ljmp
sbb
aam
and
adc
jnp
cmp
add
mov
sbbb
mov
iret
sub
lret
inc
and
in
xchg
push
xchg
leave
ja
movsb
lret
pushf
scas
mov
xchg
xor
hlt
sbb
sbb
or
cmp
stos
dec
xchg
mov
test
or
dec
test
jl
lcall
mov
dec
dec
jmp
sar
dec
jge
jge
cmpsl
aas
lret
or
fwait
inc
int
push
push
add
push
add
scas
fnstenv
xchg
push
into
jo
stos
xchg
lds
adc
leave
rorl
cmp
scas
ret
arpl
in
pop
mov
flds
iret
xchg
insl
aam
pop
stos
mov
test
cmp
jg
mov
loopne
pop
cmp
mov
pop
sahf
popf
lods
sti
popa
stos
sbbl
popa
cld
stos
popf
push
lret
mov
leave
and
push
cmp
repz
sti
pop
xor
insl
add
mov
mov
lods
cli
in
hlt
rorb
adc
mov
jmp
movsb
repnz
cs
and
mov
sbb
cwtl
push
mov
mov
push
addl
mov
imul
sbb
xchg
xor
mov
xchg
sub
cwtl
daa
cwtl
or
inc
mov
sbb
repz
xor
js
leave
adc
insl
les
std
mov
negb
and
outsl
add
dec
ds
push
jmp
pop
icebp
mov
call
cvtps2pd
icebp
aaa
addr16
xchg
xor
xor
dec
dec
inc
clc
jecxz
imulb
cmp
xorl
ret
xchg
lods
push
stos
pop
push
jo
jne
mov
leave
mov
fcomip
mov
push
sub
cmp
mov
jle
cmpsb
cmp
int3
out
stos
or
push
pusha
adcb
outsb
jne
dec
mov
xchg
popf
or
les
pop
adc
mov
dec
lret
loopne
lahf
and
popf
loope
pop
push
aas
in
xchg
ja
add
lods
and
in
adc
mov
jns
lods
stos
repz
mov
jle
lods
stos
xor
xor
jno
mov
popa
enter
ja
or
pushl
sbb
sbb
inc
dec
adc
ror
inc
ror
int3
enter
std
pop
mov
lahf
jg
xor
pop
sbb
inc
iret
mov
xlat
jmp
adc
daa
cwtl
inc
lcall
push
push
pop
mov
nop
out
stos
cmp
clc
nop
repz
jae
dec
inc
out
sti
ja
pop
mov
pop
repz
and
mov
inc
pusha
ds
notl
in
mov
das
push
cmpsl
insl
lds
in
shlb
mov
cltd
mov
loope
lds
sub
das
inc
aad
inc
lds
js
aad
adc
fidivrs
leave
sub
fimuls
sbb
cmp
jb
js
aaa
fucomip
mov
and
jae
mov
sub
sti
cs
lret
dec
or
jecxz
xchg
add
mov
dec
pop
jae
jb
mov
inc
into
mov
gs
pop
imul
in
jo
lcall
outsl
into
jmp
loopne
ret
mov
iret
mov
fidivs
push
pop
jo
add
cltd
push
ficoml
xchg
xchg
pop
xchg
lahf
mov
jg
repz
mov
mov
out
jb
std
sub
inc
shlb
pop
out
push
divl
fsubrs
jbe
clc
pop
pop
pause
aad
xchg
pcmpeqd
and
xchg
pop
jb
inc
pop
ja
fimuls
sbb
mov
js
push
lods
out
cltd
mov
repz
cs
mov
mov
jl
or
push
push
add
push
jb
popf
xchg
push
mov
sarl
jne
mov
inc
xor
cli
jnp
xchg
cvtps2pd
shlb
jmp
or
gs
xchg
push
dec
in
bnd
loop
jmp
jmp
mov
pop
push
push
xchg
int
jecxz
add
fucomip
inc
and
pop
dec
xor
aas
xchg
decl
jecxz
xchg
xchg
adc
enter
jl
xor
dec
repnz
adcb
xor
aam
mov
mov
lcall
cltd
sbbl
mov
or
mov
cmc
sub
sbb
push
sbb
xchg
int3
mov
mov
push
ljmp
jb
dec
mov
jbe
sub
cmpsl
xchg
dec
or
cmp
mov
pop
out
orb
fsubs
sub
enter
xor
push
fisubrs
sbb
pop
adc
popf
insl
es
out
sbb
clc
pusha
aam
mov
fdivl
dec
in
pushf
iret
gs
inc
sbb
mov
inc
fnstsw
inc
out
pop
fdivp
lret
pop
outsb
add
test
mov
jle
cs
nop
out
mov
inc
cmp
xor
dec
sahf
cli
mov
les
dec
push
mov
jmp
adc
cli
and
adc
clc
xchg
sahf
mov
or
push
imul
addl
lods
imul
xchg
inc
lock
jns
in
xchg
fwait
aas
xchg
aam
fdivr
xchg
mov
nopl
and
sbb
imul
dec
push
inc
rcl
shrb
inc
sbb
hlt
dec
sbb
jnp
jl
shr
xor
xor
ret
fldenv
sub
clc
cld
lods
jl
push
jge
repnz
sbb
jns
and
dec
pop
push
out
dec
push
call
imul
mov
adc
test
sbb
cmp
cmp
inc
inc
jecxz
aam
in
xor
cld
sahf
and
stc
stos
out
mov
jge
hlt
iret
movsl
rclb
outsl
dec
and
imul
js
push
je
push
add
xor
cld
push
mov
mull
ja
cmp
sub
or
mov
xlat
gs
pop
and
sahf
inc
mov
pusha
or
sbb
mov
dec
pop
mov
mov
xlat
dec
repz
add
hlt
pop
or
jge
cmp
sub
bound
loopne
stos
xchg
loope
rcrl
stos
jb
sahf
xchg
inc
cmpsl
pop
pop
or
xor
push
out
push
mov
adc
pop
jae
or
sarb
cwtl
sub
or
pop
scas
sbb
or
mov
adc
int
adc
xchg
dec
mov
push
add
ja
and
jno
pushw
adcl
lea
fsts
cmpb
jle
jmp
cmpl
lods
inc
push
idiv
push
ret
jae
js
rcr
xor
daa
jecxz
and
mov
in
jp
adc
mov
and
loope
and
jno
stos
inc
push
in
test
popf
or
and
xchg
inc
mov
popa
sahf
dec
inc
fcmovu
add
es
sub
fs
fisttps
nop
adc
inc
nop
arpl
ret
xchg
mov
or
inc
adc
add
fbstp
pop
jle
in
enter
int3
pop
lods
push
jb
sub
arpl
shll
popa
adc
incb
imul
add
mov
test
xor
mov
xchg
fsts
xor
pop
or
jbe
scas
push
sub
push
or
fldt
and
xor
inc
les
sti
xchg
addb
dec
cmp
shrb
gs
pop
rolb
inc
in
or
mov
jo
inc
stos
inc
stos
add
in
ds
int3
and
pop
je
xchg
out
les
shrb
pop
pop
dec
push
or
adc
rclb
pop
pop
jle
out
int
mov
lock
adc
test
arpl
sbb
aad
or
or
add
add
pop
fcomi
xchg
repz
in
cmc
imul
xchg
or
pop
mov
adc
or
push
and
scas
cmpsl
jmp
xlat
adc
lods
inc
add
sub
hlt
call
or
adc
orb
mov
lcall
pop
mov
roll
mov
cmp
loop
push
push
cmc
add
hlt
out
je
mov
out
pop
push
xchg
insb
iret
jge
fdivs
pop
push
xchg
sbb
adc
jge
in
add
xchg
hlt
mov
adc
leave
jnp
xchg
decl
adc
xchg
aas
movsl
jl
adc
add
mov
mov
in
jo
jg
add
idivb
jle
cmp
out
movsb
rcrb
clc
xor
int
sets
movsb
mov
sti
xchg
adcl
or
out
adcl
or
jns
stos
push
add
outsl
jmp
stos
in
jmp
clc
sub
mov
lods
fs
push
mov
mov
or
xchg
mov
fsubrp
inc
movsl
stos
sub
test
dec
sub
nop
or
jmp
or
out
jle
cli
fstpl
adc
test
sti
sub
ja
arpl
add
insb
shrl
cmp
xchg
dec
loop
cmp
into
test
shll
mov
mov
push
inc
and
jecxz
arpl
je
and
ss
push
int3
mov
aas
iret
and
push
push
lock
fidivs
fsubrs
or
jnp
movsl
aas
mov
daa
in
adc
movsl
enter
xor
sub
rclb
icebp
push
addr16
mov
shll
or
cmp
mov
sub
xchg
in
icebp
idivl
xchg
and
std
inc
jbe
outsl
test
std
sub
xor
sbb
out
mov
sub
mov
mov
fisubrl
ret
idivb
icebp
les
and
test
test
xchg
lds
fbld
dec
out
insb
cmp
cwtl
jg
cs
outsl
mov
or
adc
scas
xlat
inc
xchg
xor
mov
data16
cwtl
and
fsubl
unpcklps
cmpsb
pop
in
repz
cmc
fldcw
add
add
or
outsb
call
cmp
ror
scas
divl
add
lods
xor
and
fmulp
into
jg
add
int
sbb
mov
xor
dec
mov
das
add
frstor
jl
imull
mov
jae
loope
outsl
sub
ret
mov
jns
mov
and
mov
test
mov
daa
fnstcw
dec
mov
cmp
fcomip
xchg
xor
mov
in
aaa
cmp
into
rcrl
mov
or
loop
cmp
fldl
sti
cmpsl
sbb
sbbb
dec
pop
fs
sub
pop
fwait
je
and
out
adc
push
push
mov
les
cwtl
push
sbb
fwait
xor
popf
out
lods
jl
and
dec
fst
add
inc
into
in
stc
in
out
daa
aam
stos
shrl
cmp
push
movsl
fistps
sub
movsl
sbb
dec
mov
inc
scas
dec
or
mov
jns
cmp
imul
test
inc
mov
je
loopne
cltd
lock
aas
push
push
or
push
adc
xchg
jb
mov
cli
cmc
adc
jl
fidivl
and
shrl
xor
or
add
sub
out
mov
and
adc
outsl
push
xchg
mov
sub
popf
pop
jae
pop
popf
push
rcrb
push
sti
in
push
add
mov
sbb
dec
dec
push
mov
xor
iret
mov
or
push
cmp
and
inc
mov
hlt
aam
sub
ret
rcll
lea
and
aas
push
addl
movsl
pop
loope
fcmovbe
imul
push
mov
adc
bound
pop
adc
lods
xor
xchg
xchg
loopne
xor
push
inc
fldl
das
out
es
xchg
into
jo
push
push
or
imul
clc
push
xchg
loope
arpl
cmp
sbb
repnz
lds
xor
imul
push
divb
mov
insl
inc
lret
mov
adc
xor
mov
scas
dec
and
mov
insb
dec
cmp
add
sbb
xchg
or
fcmove
fidivl
icebp
rclb
xchg
out
add
xor
and
imul
fxch
mov
sub
jge
jg
outsl
sahf
xor
sbbl
gs
pop
lret
push
sbb
sub
daa
shrl
sarl
out
inc
push
mov
cmp
jbe
push
mov
mov
loopne
lahf
push
mov
adc
jb
add
fcompl
and
mov
cli
cltd
cmpsb
xchg
outsb
sti
adc
loop
test
lahf
stos
mov
sbb
mov
cltd
pop
xchg
test
mov
mov
roll
cli
mov
push
jp
sbb
pop
jae
push
scas
int3
loop
inc
in
add
or
es
ficompl
pop
scas
jge
pop
stc
mov
xor
es
mov
lds
push
jg
mov
mov
or
dec
mov
in
inc
xor
sti
xchg
clc
mov
sub
popa
daa
or
push
add
jo
lds
mov
sub
dec
xor
in
out
adc
cmp
pop
mov
inc
fdivl
ss
mov
daa
scas
out
mov
aas
inc
mov
out
jg
inc
imul
out
lret
fnstenv
jb
inc
fildll
lret
mov
mov
sub
and
movsb
loope
dec
sbb
testl
push
sbb
pop
repnz
into
pop
jmp
xor
cmp
fwait
cmpsl
jp
scas
js
ret
into
fidivrs
cld
test
movsl
jne
dec
pop
and
cltd
stos
test
icebp
cmpsb
outsl
push
pusha
jo
ja
orl
jl
leave
ds
sti
mov
mov
xor
pop
dec
loopne
in
add
sbb
sti
imul
or
mov
sbb
data16
jecxz
or
push
jo
imul
test
je
hlt
mov
addr16
cmp
cmp
imul
sbb
cmp
sub
and
xchg
insl
cld
repnz
cmp
xchg
insb
push
xor
std
mov
testl
and
or
nop
test
lret
loopne
or
cltd
adc
pop
addr16
lea
mov
push
pop
nop
ds
scas
insl
dec
dec
not
mov
sbb
pop
cwtl
out
sahf
negb
mov
mov
cmp
hlt
mov
pop
xchg
call
mov
pop
pop
dec
push
scas
repz
les
ljmp
xor
push
in
or
push
push
mov
arpl
out
add
xchg
adc
cmpsb
mov
andl
push
pop
xor
cltd
xor
xor
xchg
cmpsl
lods
ret
pop
fmulp
sbb
std
mov
js
push
or
xchg
outsb
aas
or
jnp
adc
add
fldl2t
mov
pop
mulb
lret
pop
popa
fsubrs
adc
decb
outsl
cmp
and
enter
cmpsb
pop
push
out
out
pusha
in
sub
ss
dec
or
mov
adc
js
mov
daa
mov
mov
andb
js
push
call
cmpsb
subb
jp
aaa
lods
in
bound
mov
divl
mov
out
test
je
push
lea
stc
cmp
cmp
xchg
mov
xor
ds
loope
pop
sbb
xchg
je
cmp
pop
decb
cmp
mov
scas
jb
mov
repnz
cmp
cltd
std
js
das
mov
push
je
pushf
out
dec
push
mov
xchg
test
add
stos
aam
pop
or
dec
jl
pop
test
xchg
popa
mov
pop
into
or
adc
pop
stc
fisubs
sub
test
inc
pop
xor
cmp
fucomip
out
sti
adc
push
cmpb
stos
cmp
popa
fiaddl
hlt
sbbl
inc
hlt
xchg
pop
daa
rclb
mov
daa
fmul
pusha
ret
inc
sub
stc
sbb
jne
add
insb
push
cwtl
popf
jo
test
xor
stos
nop
add
cmpsl
mov
and
cmp
jg
adc
jns
sahf
mov
push
daa
scas
xor
fisttpll
cs
adc
lods
sub
loope
mov
js
scas
dec
pop
in
jp
into
sbb
fistps
cmp
pop
bound
jle
lea
mov
add
loop
cmp
sarl
add
cmp
xor
adc
les
push
cmpsl
add
in
cmp
lds
faddl
cmp
lods
mov
movsl
out
addb
mov
mov
xor
fnstcw
call
es
mov
int3
push
jle
xchg
cmp
je
in
test
pop
popf
jns
inc
fs
lcall
xchg
jge
icebp
daa
test
push
or
jge
cmp
add
shll
jb
ret
adc
lret
add
repz
push
mov
xchg
daa
dec
mov
test
pop
scas
adc
add
dec
pop
sub
das
es
aas
lods
daa
jbe
dec
or
nop
cmp
pop
pop
mov
sub
mov
or
push
xchg
pop
neg
lods
mov
dec
pop
push
xchg
aas
dec
cs
adc
std
and
cmpsb
scas
jecxz
sub
loop
dec
ret
mov
insl
add
sti
lods
inc
movsl
dec
cmc
js
pop
push
cltd
cmpsl
xchg
decb
sub
add
adc
ret
shrl
or
jbe
cmpsb
lock
xchg
or
test
mov
es
mov
xchg
add
ljmp
pop
xchg
test
add
and
imul
push
out
loop
in
movsb
pop
dec
dec
adc
sbb
hlt
xchg
mov
push
mov
dec
sbbb
in
pushl
into
sub
cmp
mov
int3
inc
jns
and
rcr
pop
fdivs
les
inc
mov
ss
add
daa
jmp
lea
dec
out
cli
adc
adc
xlat
outsl
jns
inc
sub
pop
stos
add
fcmovnbe
or
lea
or
jnp
jge
push
adc
outsb
or
jge
icebp
xchg
lods
lahf
pop
aaa
pushf
mov
pushf
movsb
inc
dec
pop
std
sar
xchg
add
xor
lea
cmp
daa
push
mov
or
outsl
ret
cwtl
ja
testb
cmp
xchg
xor
adc
jecxz
sub
push
inc
inc
inc
inc
inc
imul
int
dec
jecxz
outsl
das
sbb
mov
push
xor
sbb
rcll
dec
mov
adc
fadds
test
fsubr
push
jl
push
and
cli
xchg
decb
sub
xchg
lods
inc
adc
xor
mov
adc
es
cwtl
incb
lret
jb
loope
push
clc
stc
push
and
push
sub
add
cmc
sbb
cwtl
jl
outsl
outsl
adcl
aam
cmpsl
adc
enter
jmp
bound
insb
and
adc
adc
stc
fimuls
test
pop
mov
fs
call
fs
call
dec
mov
jne
sbb
hlt
fsts
xor
mov
inc
mov
iret
mov
test
repnz
xchg
mov
daa
lret
mov
daa
mov
incb
imul
adc
push
in
mov
cmp
fs
and
fwait
jg
popa
dec
sub
enter
dec
and
inc
dec
dec
ljmp
leave
xchg
push
sbb
pop
jb
sub
cmpsl
into
mov
scas
dec
test
and
shrb
rcrb
adc
lds
dec
inc
jbe
clc
cmp
insb
adc
adc
adc
jbe
inc
sbb
xorl
int
adc
sbb
xchg
loop
and
cmp
popa
adc
cli
in
outsb
adc
xchg
sarb
mov
sarb
test
push
rclb
cltd
test
jae
shll
adc
dec
adc
push
popf
frstor
inc
out
sub
bound
push
scas
cmp
sbb
sub
mov
add
xor
pop
gs
adc
js
inc
lods
xchg
cltd
sbbb
lcall
fnsave
xor
xor
imul
push
je
ror
stos
mov
sub
and
jno
int3
sub
push
outsb
and
xlat
xchg
dec
pop
sub
mov
mov
ds
popa
inc
movsb
sbb
inc
gs
ljmp
pop
mov
push
int3
out
or
xchg
mov
scas
jge
adc
push
push
es
addr16
stos
insb
aas
scas
push
outsb
jns
jg
lods
ljmp
mov
xchg
inc
cmpsb
or
aad
cmp
dec
sub
repnz
mov
adc
inc
push
data16
push
lds
or
jl
gs
dec
fwait
addr16
int
sbb
enter
jge
js
xor
call
or
or
pop
shl
jnp
mov
sahf
dec
xor
out
jo
les
dec
dec
jbe
pop
mov
push
and
and
loopne
jmp
sub
pop
dec
add
stos
fstp
pusha
stos
pop
xor
push
int
clc
jne
outsb
add
xor
sbb
push
add
stos
loope
inc
or
sub
xchg
clc
jno
adc
std
fsubrl
push
sub
cmc
pop
lea
sub
aam
icebp
pop
push
lods
jnp
dec
lea
cltd
test
icebp
mov
ret
mov
jle
pop
nop
icebp
push
outsl
jge
push
pop
mov
mov
je
shr
dec
jp
cmpl
xlat
xor
and
inc
sub
sub
into
in
xchg
test
lea
jecxz
sbb
mov
mov
in
aas
lcall
in
loopne
aad
lods
lods
shll
pop
inc
jmp
mov
and
ds
push
pushf
in
movsb
mov
or
mov
lret
cmp
mov
into
test
cmp
out
jp
sub
shl
sbb
dec
fcom
pop
addl
add
adc
movsl
frstor
mov
inc
loope
jne
das
cmp
pop
sbb
jp
decb
das
adcl
adc
stc
stos
mov
mov
call
and
pop
mov
jl
aaa
pushf
stos
mov
or
push
xorb
inc
pop
stos
add
xchg
xor
int3
ja
xor
aam
push
or
jno
lahf
shll
loopne
in
pop
add
inc
cmp
je
mov
sbbl
sbb
mov
sbb
test
iret
sti
mov
insb
add
jb
insl
repz
rclb
inc
xor
rcrb
test
mov
xchg
sub
scas
mov
add
xchg
mov
sbb
xor
inc
mov
xchg
and
xor
pop
out
aaa
dec
rcr
xor
fucomip
mov
lods
inc
mov
arpl
sub
sub
pause
daa
adc
popa
xor
scas
clc
xor
adc
cltd
push
and
xlat
out
jbe
in
stos
in
cli
lods
test
aad
iret
xchg
ljmp
sbb
xor
add
jns
sub
jno
add
jae
cli
push
mov
imul
push
shrb
cltd
sbb
adc
daa
incb
js
imul
outsl
mov
jg
mov
jns
mov
test
and
mov
sub
push
ds
mov
daa
cmp
mov
add
ficomps
lret
aaa
fbstp
xor
jbe
mov
arpl
adc
outsb
fnstenv
and
rcrb
cmpsl
in
enter
enter
loop
sub
mov
jae
adc
adc
and
dec
dec
in
dec
lcall
jl
jne
inc
fwait
repz
mov
pop
or
inc
clc
and
movsl
jo
sbbl
sub
xchg
pop
add
test
dec
stos
and
js
xor
xchg
stc
nop
mov
bt
rcrl
xchg
mov
or
push
pop
jo
dec
out
xchg
pop
xchg
push
xchg
in
into
sti
or
sbb
sbbb
pop
jl
push
xchg
lds
sub
ds
sahf
sahf
pop
pop
in
sarl
mov
sub
inc
sbb
jne
xchg
das
rcll
xor
adc
mov
mov
push
shlb
or
test
repz
int
aam
pop
push
movsb
int
pop
add
sti
bound
mov
sahf
cmc
add
dec
add
add
lret
sti
ja
jne
pusha
incb
ret
and
aaa
mov
mov
push
loopnew
pop
sahf
or
mov
popf
fdivl
rcrb
shr
push
insb
out
dec
arpl
rcr
into
divb
jmp
loope
cs
inc
dec
in
xor
pop
or
add
stos
xchg
mov
push
out
fwait
xchg
sub
fadds
es
sub
inc
dec
outsb
fnstenv
pop
nop
jns
inc
jle
lret
stos
jmp
andl
bswap
test
add
sub
in
gs
lret
cli
mov
mov
jnp
sub
sbbl
or
xor
or
jb
jne
xchg
sub
push
or
dec
sbb
dec
fistl
and
mov
cmp
loop
dec
loope
jp
mov
and
jns
jmp
jg
sbb
or
dec
dec
mov
lcall
ljmp
fildll
mov
arpl
imul
dec
pop
in
imul
rcrb
mov
xlat
maxps
js
dec
mov
fists
mov
mov
dec
loope
xor
addr16
push
stc
sub
cmp
or
jno
or
icebp
jecxz
int3
sbb
pop
sahf
insl
jno
addr16
and
sahf
jno
outsb
xor
push
loopne
andl
cmp
mov
jmp
andl
jnp
sub
sbb
pop
pushf
loop
and
cmp
sti
pop
xor
xchg
pop
movsl
mov
jbe
shrb
mov
icebp
enter
dec
xchg
sub
mov
dec
dec
addr16
add
push
mov
je
daa
andb
xor
pop
jo
inc
pop
aaa
dec
sti
lcall
mov
mov
imul
add
xchg
popa
sahf
push
jmp
int3
ss
adc
stos
add
cli
xchg
mov
pop
mov
and
push
push
movsb
shll
mov
sbb
push
mov
jl
mov
aad
fisubrs
stos
inc
mov
scas
add
adc
xor
shlb
repz
jnp
in
aad
adc
mov
pop
mov
mov
mov
and
xlat
mov
mov
in
adc
sub
addl
fldcw
mov
pop
mov
cmp
dec
mov
out
pop
fsubr
in
idivb
cmp
cmp
dec
adc
aas
cmp
sbb
sbb
inc
mov
insl
imul
mov
mov
lods
inc
pop
fists
push
jnp
cltd
int3
cmpsl
jg
loope
mov
les
sbb
mov
mov
add
add
jno
fbstp
xchg
push
jb
std
lods
jo
mov
mov
outsl
es
insb
dec
cltd
pop
or
mov
leave
xchg
jle
stos
mov
fs
xchg
test
iret
mov
aam
ljmp
mov
pop
adc
ds
test
and
push
stos
add
popa
ds
xchg
je
pusha
call
bound
jb
test
test
loop
call
movsl
mov
add
mov
in
and
fcompl
sbb
js
loopne
pop
scas
xchg
and
out
dec
movsl
xchg
test
fadd
or
adc
dec
fsubrl
jge
inc
xchg
pop
dec
push
cmp
inc
or
xchg
sbbl
mov
iret
xor
push
fwait
call
sbb
inc
out
jb
shlb
add
fidivs
roll
dec
cld
arpl
repnz
jl
and
mov
dec
or
icebp
fwait
movsl
cld
dec
mov
pslld
lret
jae
pop
jle
push
mov
sub
adc
sub
sub
bound
leave
aam
bound
iret
ja
std
popa
pop
hlt
mov
mov
sbb
and
xchg
cmp
ljmp
inc
aas
mov
cmc
and
mov
iret
pop
iret
xchg
clc
lea
push
mov
cmp
daa
divl
sarl
rolb
daa
push
ficomps
pop
jb
jns
cld
stos
ret
jo
push
mov
push
lret
sub
and
test
and
jo
aaa
test
nop
xor
fs
mov
imul
outsb
adc
pop
clc
or
les
aaa
push
ret
imul
aas
ljmp
ds
lods
push
inc
into
loopne
inc
jmp
cmp
inc
sahf
adcb
out
test
pop
cwtd
fs
xchg
cs
push
pop
inc
inc
in
mov
scas
mov
or
jmp
lea
pushf
xchg
js
push
icebp
sahf
lock
and
leave
push
and
adc
push
out
xor
cwtl
xorl
jbe
mov
mov
lods
in
cld
xchg
test
and
mov
mov
inc
or
int
lret
push
fsubl
pushf
ret
xor
xchg
mov
pop
mov
add
fldenv
push
sarl
sub
jns
mov
push
add
sbb
fldl
ret
jb
cmp
repnz
lods
fadd
mov
or
stos
inc
cmp
mov
pop
iret
xchg
in
daa
fcom
mov
or
stc
sub
push
js
mov
mov
or
xlat
xchg
stos
inc
jno
cmp
sbb
push
inc
cld
xchg
xor
push
sbb
lock
addr16
mov
cwtl
arpl
adc
jnp
sub
pop
or
mov
sub
dec
push
ljmp
pop
mov
push
fwait
adc
inc
jl
push
jmp
push
inc
inc
push
addr16
adc
jmp
es
mov
lcall
and
fisttps
outsl
push
push
jle
movsl
mov
icebp
int
mov
adc
in
inc
jbe
add
popa
cltd
cltd
sbb
and
jmp
or
jno
push
test
and
sub
loopne
xor
or
aas
xchg
movsl
int3
pop
jo
gs
outsl
push
push
sbb
jb
dec
cmpsb
add
les
ds
fdiv
mov
pusha
ss
add
push
popl
negl
and
pop
push
sbb
xchg
dec
jns
shrb
in
cwtl
testl
lcall
push
sub
or
jp
xor
rolb
push
pop
adc
mov
out
sbb
cmp
fucomip
mov
loopne
sub
pop
xlat
dec
lods
sub
mov
xchg
mov
mov
iret
fstpt
popa
sbb
dec
lret
shll
pop
sbb
or
imul
or
mov
shlb
pop
repz
ja
rcr
jp
fidivl
test
cmp
imul
xlat
sub
add
fs
add
andb
lea
nop
insb
int
xor
scas
pop
int
and
mov
stc
cmpsb
es
xchg
stc
loop
push
cmc
mov
out
xchg
dec
jno
inc
ljmp
cli
or
retw
movl
movl
rdtsc
ds
das
out
cmp
ret
pop
cmp
ljmp
jmp
and
add
mov
imul
test
mov
inc
xchg
xor
jge
mov
mov
xchg
adc
cltd
pop
repnz
test
popa
xor
push
cmp
outsl
shrl
dec
lds
jb
in
pop
mul
int3
add
cmp
in
jb
inc
push
push
pop
int
mov
pushf
mov
push
pop
aaa
lea
out
fsubr
pop
mov
mov
add
inc
and
lea
lock
cmp
dec
or
sahf
and
mov
lcall
mov
shlb
xchg
loope
push
mov
fsubrs
mov
lret
je
out
mov
mov
jle
lds
pop
ljmp
out
cli
das
pushf
incl
pushf
inc
fcmovne
pop
or
into
add
adc
sub
and
cmpsl
cli
out
sti
hlt
ret
out
mov
mov
shrb
or
and
inc
push
add
and
mov
shll
scas
das
loopne
xor
pushf
divb
popf
and
pusha
add
mov
xor
mov
and
pushf
pop
inc
dec
loop
jne
mov
xchg
jne
into
das
cwtl
or
mov
xor
test
out
push
insb
test
sbb
adc
test
adc
imul
mov
jne
mov
aas
in
clc
and
pusha
lock
push
out
push
sarl
test
insl
push
mov
gs
xchg
test
push
pop
lock
mov
or
adc
xlat
ret
rorl
int3
xor
cmc
mov
mov
adc
jb
sub
adc
repnz
mov
sub
call
pop
out
xor
jnp
cmpsl
addr16
pushf
xrelease
ja
mov
imul
xchg
inc
pop
and
shrb
pop
insl
jmp
cltd
xchg
gs
lret
or
iret
adc
jo
adc
mov
cmp
loop
inc
fstl
out
lcall
pop
sti
ja
xchg
mov
pop
js
adcb
rorb
nop
or
push
loop
xorl
pushf
cmp
aas
ja
movsb
jne
lret
xchg
pop
push
aas
cmp
mov
cwtl
push
movsb
mov
inc
mov
cltd
mov
inc
xchg
inc
dec
mov
cmp
cli
adc
inc
sbb
dec
dec
add
inc
pop
fs
loope
lock
out
das
lds
ret
jnp
js
shl
inc
lods
fnstsw
fldl
mov
int
adc
out
into
xchg
and
or
das
mov
mov
mov
daa
fsubrs
cwtl
cmp
cmp
out
movsb
pop
pop
out
mov
dec
pop
loopne
jmp
jnp
popa
cmp
int
fdivl
movsb
cli
test
jae
sbbl
repnz
cmc
pop
mov
int
shr
subb
aad
ret
orb
stos
or
add
lods
out
lds
fisttps
fists
out
mov
mov
orl
and
or
lret
arpl
adc
jb
das
mov
lds
lret
ljmp
xlat
aad
pop
sub
enter
pop
negb
pop
pop
fwait
sub
sbb
pop
imul
adc
ljmp
jne
inc
mov
sbb
cli
jnp
test
sbb
jno
adc
js
lods
shrb
shr
add
cld
outsl
mov
test
shlb
push
jecxz
cmp
sbb
xchg
dec
addr16
leave
shl
mov
imul
sti
sahf
jp
rolb
in
test
icebp
cwtl
stos
arpl
push
mov
or
clc
mov
les
xchg
mov
mov
hlt
shll
pop
jg
inc
vpunpcklbw
jle
hlt
movsb
out
ljmp
inc
inc
loopne
adc
cmpsl
dec
loope
ret
push
dec
inc
clc
push
add
xor
cmp
into
sahf
mov
add
pop
xor
dec
nop
mov
ret
and
mov
adc
xor
cmp
pop
mov
adc
jp
add
add
imul
repnz
ficoml
push
scas
mov
mov
cmp
sti
lock
sub
add
lods
iret
repz
cmpsb
cmp
lcall
stos
popa
xlat
pop
and
or
cmpl
mov
mov
adc
out
jmp
sub
sub
inc
inc
mov
sbb
pop
mov
pop
jecxz
loope
insl
ss
fisubrs
adc
xor
divl
or
popa
or
xchg
andb
lock
adc
and
jmp
xor
cmpl
sbb
enter
imul
fldt
je
dec
xchg
jge
sbb
mov
inc
shl
leave
pusha
adc
in
jp
jne
pop
scas
adc
push
test
pop
out
orl
xor
fsubs
rcr
lods
cli
call
xor
mov
pop
es
sub
dec
and
enter
mov
addr16
gs
sub
mov
mov
daa
mov
push
xor
stos
out
inc
mov
vpsubq
mov
add
pop
insl
fstpt
add
leave
rcrl
cli
roll
fimuls
and
mov
cld
popa
mov
push
stos
add
pop
mov
sbb
aam
mov
int3
enter
ret
inc
mov
mov
jecxz
xchg
fnstsw
inc
mov
push
and
stos
stc
icebp
imul
pop
mov
popf
pushf
scas
jecxz
js
fsubrl
push
xchg
jbe
aaa
arpl
aas
sbb
or
bnd
cltd
ror
mov
inc
xchg
fdivs
cli
cltd
or
adcl
inc
je
icebp
pushf
push
push
sbb
pop
lahf
pusha
adc
push
movsl
dec
lea
in
xor
adc
mov
pop
shll
jnp
jno
dec
clc
mov
in
mov
push
push
clc
scas
push
ja
jns
insb
stos
xchg
pop
out
inc
sbb
xor
shlb
cs
push
sub
dec
sub
cmc
inc
scas
fistl
cmpxchg8b
sar
jl
jmp
test
in
xchg
pushf
jns
add
mov
jae
inc
fldl
je
pop
imul
sbb
out
push
nop
fistps
stos
aaa
std
or
stos
xchg
arpl
and
call
out
rorl
mov
or
mov
lret
leave
lock
push
cmc
mov
lret
jmp
cmpl
rcr
mov
and
mov
lret
cmpsl
mov
gs
outsl
add
jg
adc
or
daa
mov
dec
imul
arpl
sbb
and
add
mov
cltd
test
cld
jle
pop
mov
pushf
xchg
push
inc
push
dec
ds
jns
mov
faddp
popl
lods
mov
push
xor
sub
jo
mov
or
test
mov
icebp
hlt
xor
inc
pusha
jmp
lcall
jo
mov
push
out
fiadds
and
push
pop
mov
xchg
push
sti
cmpsl
loop
movsl
xlat
sbb
outsb
mov
xchg
test
pop
cmp
aad
mov
inc
or
jp
jecxz
push
pop
cmpsl
loop
pop
int3
arpl
call
mov
pop
sahf
add
and
movsl
pop
add
arpl
shr
cmp
cwtl
and
and
imull
addb
jae
jb
aas
pop
cli
loope
push
push
sub
cs
lock
xchg
xchg
cli
xchg
repnz
movmskps
adc
jge
es
cmpb
sbb
loope
icebp
dec
mov
mov
lret
pop
mov
sbb
mov
jb
mov
push
movb
sarl
mov
cltd
adc
pop
ret
xor
lret
fucomi
cmp
enter
xor
mov
pop
pushl
mov
mov
xchg
iret
fildl
gs
call
mov
movsb
cmpsl
push
push
in
mov
dec
in
outsb
jl
mov
cmpsb
inc
rclb
jae
and
mov
jle
std
pop
mov
lods
inc
sub
pop
lock
sti
out
aaa
inc
ja
divl
mov
push
in
dec
mov
int3
mov
or
push
dec
cmpsb
mov
subb
adc
mov
or
pop
cmpsb
shll
call
and
pop
xchg
dec
pop
lret
push
push
nop
jmp
push
mov
mov
fisttpll
ret
sbb
aaa
mov
jge
mov
scas
sub
ja
stc
ficomps
xor
cld
pop
mov
jmp
mov
push
jecxz
xor
mov
lods
xchg
mov
adc
xor
lods
ja
push
arpl
pop
insl
sbb
scas
xor
xchg
jmp
or
scas
pop
xchg
jno
in
xchg
rcrb
sbb
dec
pop
mov
or
ret
push
add
xor
mov
popa
cmp
adc
adc
ds
lret
jae
pop
jo
pushf
mov
lret
jo
mov
add
in
xor
mov
pop
mov
sbb
fs
jmp
ljmp
shll
fiaddl
xor
sbbl
nop
pop
xor
inc
sti
stc
adc
lock
mov
in
inc
test
lea
insb
outsb
jl
mov
mov
mov
jns
sub
outsb
int3
jbe
pusha
adc
pop
inc
adcl
in
ret
dec
jmp
shlb
fcomi
pmuludq
aad
dec
rol
sbb
popa
rol
push
rcl
popa
lock
sbb
js
push
mov
inc
jo
insl
add
shll
cmp
pop
shl
jle
loope
xor
jle
push
outsl
insb
mov
mov
lea
cmp
add
mov
add
sbb
push
out
loopne
sbb
pop
xchg
int3
arpl
sbb
pop
idivb
in
subl
cld
xchg
cltd
cld
dec
in
push
and
inc
jl
lods
jo
add
fucomp
hlt
int3
arpl
cmpsl
ds
push
in
test
dec
rclb
shrl
shl
mov
int3
arpl
shll
add
in
sbb
dec
gs
in
std
in
sbb
sbb
ret
and
pop
mov
idivl
sbb
xor
jb
sub
mov
sbb
cmpsl
fs
fsubs
sbbl
ja
inc
mov
add
push
pop
stc
pop
jne
push
sbb
int3
sub
aas
stc
push
add
pop
out
stos
mov
test
jne
mov
add
mov
int3
xor
mov
ret
sub
fwait
aam
xchg
arpl
data16
sbb
scas
stc
add
aad
shrd
or
aas
loop
jmp
imul
aad
shl
cmpsl
ret
loopne
inc
inc
std
aad
jb
lea
out
mov
test
cmpsb
dec
leave
mov
icebp
push
jbe
adcb
mov
insb
xchg
jmp
daa
and
push
xor
dec
in
sub
std
aaa
adc
inc
movsb
inc
bound
shll
push
hlt
mov
pushf
xor
push
lret
lret
adc
fimull
push
pop
fcomp
pop
push
xor
sub
arpl
sub
or
cmp
sbb
pop
and
mov
sub
push
fdivrp
jo
in
shll
cmpsl
pop
jnp
mov
xor
fildl
push
jne
repz
sub
xor
xor
push
push
jmp
cmp
sahf
out
pusha
lcall
lret
lret
lods
ja
in
or
push
jmp
sub
jb
out
out
sbb
xor
xchg
scas
mov
nop
shl
outsl
out
test
cld
pop
imul
lret
les
and
orl
cmp
sbb
ret
sub
push
pop
repnz
xchg
xor
xor
push
sub
cmp
enter
push
jae
lret
popa
movsl
cmp
mov
jl
int
mov
jmp
fnstenv
mov
aad
mov
mov
adc
pop
in
in
aaa
std
negl
pop
je
sbb
out
nop
cmp
lahf
push
pushf
cltd
dec
pop
ljmp
mov
das
ss
movsl
sub
out
cvttps2dq
pop
cmc
jne
out
out
xchg
jl
in
mov
add
inc
push
xor
mov
fabs
imul
mov
in
mov
sbb
popa
jg
jbe
mov
push
pop
and
and
mov
jge
in
tzmsk
xor
enter
sub
adc
jge
popl
push
mov
adc
mov
pusha
lcall
fs
lcall
in
sbbb
push
mov
sarb
loop
sub
mov
test
std
flds
nop
daa
jle
mov
mov
int
pop
incl
loope
inc
mov
ljmp
nop
movsb
pushf
out
mov
pop
dec
pop
dec
insl
mov
fs
arpl
inc
xlat
push
test
out
mov
mov
out
push
cmpsl
mov
aad
ret
jb
insl
inc
scas
sbb
int
xor
adc
outsl
jbe
dec
enter
fisubrl
fisttps
ljmp
xchg
and
les
mov
mov
repz
dec
sub
lret
sarl
pop
sahf
pop
sbb
and
sbb
jbe
out
pushf
cli
push
mov
sbb
rorb
cld
flds
mov
das
mov
xlat
mov
loopne
rolb
ficoms
inc
sub
fcoml
out
and
iret
push
add
lret
shl
outsb
and
fwait
adc
popf
stos
das
jo
fsub
int
inc
push
sbb
dec
jne
push
js
push
xchg
adc
push
and
jbe
je
inc
cmp
mov
xchg
cmp
adc
inc
icebp
shr
out
or
pop
jbe
jbe
xchg
mov
xchg
out
test
pop
or
mov
and
sub
xchg
shll
insb
add
mov
dec
repz
stos
decb
xchg
mov
imul
or
or
add
cmc
sub
mov
loope
add
fisttpl
and
xchg
dec
xchg
mov
mov
xchg
es
cmp
xor
fiaddl
sbb
cmp
add
shll
stos
lods
nop
push
hlt
clc
xorl
xchg
mov
xor
or
fcmovnb
mov
stc
sub
or
out
leave
push
popf
loop
aas
mov
jb
pusha
in
fisttpl
pop
imul
scas
mov
pop
aaa
into
mov
jo
xor
fldcw
inc
lods
mov
cmp
sub
jg
nop
daa
ret
xchg
hlt
test
mov
jl
xchg
mov
xchg
jb
adc
fs
test
iret
insl
cltd
pop
sbb
and
sub
add
xor
aad
pminsw
in
jns
stos
loope
jl
jmp
xchg
sbb
cs
pop
inc
push
out
cwtl
cmp
mov
jnp
ljmp
fadds
mov
mov
pop
jnp
and
scas
push
add
xor
push
lds
fimuls
cltd
mov
call
notb
scas
std
pop
imul
aam
in
movsl
cmp
jo
into
mov
lds
es
pop
aam
shrb
daa
add
mov
iret
imul
pop
mov
arpl
ss
jp
fucomp
aas
adc
mov
pop
bound
inc
mov
imul
in
movsb
inc
std
mov
out
fisubrl
pop
xlat
fsubs
test
inc
int3
sbb
mov
dec
mov
mov
dec
call
push
pop
cmp
pop
in
push
xlat
jne
pop
mov
jo
mov
mov
jbe
sar
pop
fstpt
lods
cld
fsts
jb
fildll
pop
rep
mov
cmc
pop
add
lock
popf
xor
add
enter
aad
xor
mov
sti
xchg
inc
xlat
ret
in
in
iret
adc
add
and
jle
jb
addr16
dec
jb
push
push
sbb
fdivl
sarl
stos
xchg
jge
and
push
movsl
inc
aas
mov
aaa
pusha
int3
arpl
std
outsl
sbb
pop
mov
pop
das
or
sbb
shll
orb
aam
stc
sti
mov
stos
inc
mov
enter
stos
insl
add
or
negb
aas
dec
sbb
mov
pop
movb
sub
jb
cwtl
fs
mov
adc
sbb
push
mov
js
loope
xor
add
lcall
mov
pushf
inc
data16
pop
popfw
mov
lret
in
jmp
lock
jno
int
push
xchg
ja
pop
insb
dec
pop
or
add
mov
stos
rcrb
sbb
mov
push
into
enter
push
aad
pop
push
xchg
movsb
xchg
xlat
cmp
sbb
inc
push
mov
fdivs
lea
popf
cs
es
roll
mov
jecxz
mov
stos
mov
or
mov
aad
mov
icebp
nop
popa
jge
out
scas
xchg
or
sub
test
pop
cmp
into
shl
dec
and
add
sbb
in
cmp
cmp
aam
addb
lods
fmuls
mov
lahf
pop
sbb
mov
jp
fcomi
inc
fwait
dec
mov
push
mov
mov
mov
inc
in
adc
pop
data16
sub
xor
fs
mov
aaa
cmpl
cmp
sub
sbb
dec
fdivrp
dec
fadds
lock
cmp
iret
scas
in
cmpsl
sub
scas
ds
push
and
inc
rorl
ret
ss
inc
mov
inc
cmc
loope
jns
and
imul
lock
pop
xchg
mov
in
xchg
xchg
push
testb
jge
pop
dec
cmp
std
add
jo
pusha
dec
out
xchg
dec
adc
pop
lcall
scas
cwtl
mov
orb
rol
call
jbe
sub
bndstx
cmp
pop
mov
sets
inc
fnstsw
ds
mov
data16
pop
lea
xchg
out
out
test
pop
and
aaa
leave
fidivrs
les
cmp
push
in
mov
mov
add
pop
daa
das
push
mov
xchg
mov
xor
xor
push
cmpps
repz
enter
sarl
sub
loope
push
mov
push
cmp
inc
sub
enter
fnstenv
stc
cmp
xchg
sbb
aas
or
std
mov
stos
inc
mov
lret
xlat
clc
mov
into
mov
cwtl
xor
lock
in
aaa
xchg
out
aaa
in
push
sbb
add
sub
movsb
inc
sbb
xchg
jo
imul
adc
cli
leave
mov
ljmp
ret
stos
inc
push
roll
inc
xchg
mov
iret
sahf
cli
or
jne
out
fnsave
push
into
notb
xlat
add
rorl
xor
cwtl
xchg
popf
addr16
out
adc
and
xor
jecxz
movsl
les
loopne
ljmp
call
pop
sbbb
mov
mov
cmp
mov
lods
mov
mov
cmc
cld
xlat
xchg
inc
enter
dec
pop
add
addr16
negl
aad
jno
loopne
xor
dec
mov
xchg
in
lods
inc
sub
lret
push
repnz
stos
fnstenv
ja
push
sbb
mov
mov
mov
loopne
adc
mov
pop
push
xchg
push
loopne
inc
pop
lret
mov
xchg
push
cmc
or
cmp
pop
sub
xchg
and
adc
pusha
rcrl
mov
scas
dec
jb
xor
mov
inc
or
dec
sbb
out
sub
fsubrs
add
mov
testb
or
pushf
sti
cmpsl
adcb
sbb
inc
push
adc
push
ret
inc
push
mov
das
loopne
cli
shll
mov
dec
mov
sub
mov
xchg
call
and
movsl
xchg
pop
call
pop
and
stos
sub
pushf
xchg
insb
sub
outsb
adc
sti
inc
and
or
lret
adc
pop
xchg
add
loop
mov
in
lea
adc
pop
push
pop
notb
and
add
cmp
stos
push
fwait
stos
xchg
mov
add
mov
push
imul
test
filds
add
aam
cmp
adc
es
mov
andb
push
sub
push
push
shl
lahf
mov
shl
in
sbb
xchg
cs
pop
repnz
cmp
mov
xchg
orb
mov
sbb
pusha
sub
pop
fwait
inc
insl
les
out
repz
dec
and
andb
adc
push
add
cs
adc
push
push
inc
xlat
outsb
jge
and
adc
jecxz
pop
pushf
dec
jecxz
js
inc
fimull
dec
int
fsubrs
xchg
push
xlat
ret
div
mov
xor
pop
in
push
lods
push
sbbl
frndint
arpl
inc
mov
outsb
mov
dec
sub
addl
addl
pop
stos
and
cwtl
mov
adc
cli
or
dec
pop
push
jns
jae
and
nop
daa
lret
mov
bound
imul
lret
ljmp
insl
cwtl
pop
add
xor
and
jp
fsubrl
fistpl
mov
sti
or
in
lock
push
sbb
insb
lods
inc
lods
adc
lret
adc
mov
jbe
arpl
and
mov
ltr
fldenv
out
nop
call
push
xor
test
jne
pusha
jl
and
out
pusha
and
jg
xor
push
or
popf
xor
testl
xor
or
jno
loop
push
dec
pushf
cmp
mov
xchg
pop
ds
pushf
cld
push
stc
in
mov
cmp
xchg
pop
fdivs
lret
cmp
sbb
call
jmp
aad
jle
push
dec
std
pop
scas
sbb
dec
fnsave
xor
jb
push
inc
in
cmp
int3
in
sub
sbb
sbb
push
cmp
push
icebp
xlat
outsb
push
xchg
mov
gs
and
pop
loopne
mov
shl
pop
insl
adc
xchg
mov
insl
jne
push
in
es
daa
adc
jnp
dec
pop
mov
aad
stc
pop
push
jo
sub
xorl
daa
inc
mov
jge
push
popf
popa
adc
rorl
pop
mov
push
xchg
cltd
pop
mov
das
ljmp
xor
pop
lcall
pop
popa
leave
adc
stos
dec
mov
sbb
dec
pop
mov
xor
pop
aaa
mov
lock
rcrl
or
stos
cld
adc
push
push
mov
mov
dec
movsb
xor
fwait
sbb
aas
jp
pop
lods
pusha
mov
sbb
xchg
sub
cs
nop
jno
sub
push
in
mov
jne
inc
ljmp
lods
cmp
ljmp
jno
repz
push
push
in
mov
lock
lock
stos
or
cmp
lret
push
imul
ret
loope
cmp
mulb
xchg
mov
lret
cld
shlb
inc
rol
fstps
cmp
int3
add
jne
sub
xor
pop
in
out
in
sbb
imul
ret
or
mov
and
mov
out
bound
add
push
cmp
push
enter
jb
mov
aam
add
dec
outsb
pop
mov
shll
mov
imul
pushf
cmp
pusha
or
pop
sbb
rol
xor
daa
in
in
cmp
jb
push
xchg
test
cld
test
nop
decb
push
enter
outsl
push
insb
xchg
out
popf
mov
jecxz
out
push
pop
int
and
mov
ds
frndint
push
mov
aad
jmp
out
shlb
test
xchg
mov
out
roll
sub
or
fs
mov
cmpsl
fwait
mov
int
pop
mov
sbb
and
jp
sbb
lock
mov
leave
jb
out
inc
xlat
fdivrs
int
stc
pop
mov
mov
xor
pop
fistl
shr
outsl
adc
push
and
out
cli
inc
xchg
and
pand
and
adc
mov
pop
jecxz
addr16
push
cs
movsb
bound
fldcw
js
ja
mov
inc
and
xor
and
cmp
into
pop
sub
shr
scas
cwtl
sub
inc
iret
sbb
mov
lret
lret
xchg
mov
mov
dec
adc
rclb
ja
into
gs
aad
inc
xchg
shr
repz
inc
cltd
cltd
insb
mov
movl
ds
loop
test
scas
dec
push
mov
push
jae
jb
shrb
test
push
ret
popa
push
mov
push
push
hlt
xor
mov
push
mov
jno
push
dec
repnz
dec
jg
inc
inc
jns
dec
lds
orb
out
mov
jmp
dec
adc
repz
test
jae
push
shl
mov
xor
and
js
and
test
cmc
mov
inc
or
jae
mov
sbb
add
mov
aad
jnp
inc
test
lea
aaa
dec
mov
inc
jmp
adc
lret
inc
idivb
cld
push
add
ucomiss
cmp
or
mov
jle
push
lods
int3
xchg
or
lods
jns
mov
je
jecxz
sbbl
or
scas
or
ss
mov
out
mov
sub
ljmp
pop
outsb
out
cmpsl
and
nop
fistpll
xchg
cmp
loop
lock
push
in
addr16
loope
jle
ret
repnz
call
aaa
frstor
lret
jl
lea
or
xor
pop
lods
jmp
loopne
xor
dec
add
xorb
imul
bound
jecxz
mov
dec
cmp
aad
fadds
in
mov
outsl
cmpsl
bound
dec
aas
push
push
in
pusha
std
rolb
jecxz
incl
inc
mov
out
add
mov
fnstsw
fld
into
ja
movsl
cmp
andb
mov
push
sbbl
negl
mov
dec
push
cmp
scas
imul
xchg
and
xchg
outsl
arpl
sub
fsubp
jle
dec
out
jle
xchg
add
adc
sub
fwait
xchg
mov
cs
xchg
pop
lock
sarl
inc
add
jnp
xor
jae
mov
test
out
shlb
movsb
les
xor
std
aas
das
gs
mov
push
decl
int3
call
jns
push
push
cmp
jbe
cmpsl
cmpsl
repnz
fldenv
nop
lock
cmpl
mov
outsb
sub
repnz
mov
inc
test
cmp
mov
inc
push
mov
mov
rorl
or
js
mulb
push
fsubs
clc
arpl
dec
lea
mov
xor
jmp
cltd
xchg
test
mov
xchg
jecxz
loope
in
lcall
fcoms
ret
aas
cld
fwait
out
popa
adc
iret
or
test
or
ds
dec
lahf
mov
ja
sbb
daa
mov
movsl
jo
lret
mov
je
shll
pop
jge
dec
xor
jle
add
fbstp
stc
clc
jg
push
and
fsubrs
insb
dec
bound
mov
in
lods
push
rcrb
jecxz
cld
pusha
push
cmpsl
add
int
ror
xor
loope
push
insl
push
mov
mov
mov
xchg
popa
inc
mov
jno
nop
and
insb
test
ficompl
je
int
xchg
xchg
mov
push
cmpsl
adc
in
stc
and
push
into
ljmp
lret
lret
mul
mov
stc
test
sti
sub
and
insl
and
hlt
push
movsb
sbb
fisubs
xchg
in
jmp
pusha
push
and
mov
in
mov
sahf
in
daa
jbe
sarb
cmpb
mulb
shll
out
nop
xchg
sub
fsubrs
test
mov
pop
mov
xlat
xor
sbb
push
cwtl
test
xorl
out
repnz
in
int3
sbb
xor
fwait
push
xchg
stos
push
rcrb
in
test
lds
jo
or
es
fmuls
fs
out
fsts
sub
jae
pusha
faddl
sbb
pop
fdiv
dec
fisubrl
jp
outsb
mov
out
xchg
clc
mov
shr
lock
mov
jo
out
pusha
sub
std
mov
adc
lods
lea
in
inc
pop
mov
jl
xor
fadds
push
xchg
aaa
xor
in
mov
pop
mov
push
rolb
mov
mov
loopne
add
push
and
arpl
jnp
in
xchg
cmc
push
dec
loope
into
adc
adc
ss
frstor
dec
fsub
push
fsubrl
or
mov
call
push
xchg
stos
aaa
outsb
es
hlt
arpl
aaa
into
mov
push
xchg
pop
nop
pop
mov
fidivl
fisttpll
cmp
test
pop
daa
mov
push
stc
or
push
gs
add
subb
icebp
and
push
ja
and
cmp
push
aas
scas
cmp
push
imul
xor
add
mov
leave
int
imul
mov
mov
mov
pop
jl
aad
jns
ret
add
testb
jnp
inc
lods
jno
cmp
sbb
pop
jnp
and
mov
sub
ljmp
jecxz
inc
inc
push
xchg
add
dec
out
mov
adc
cmp
shlb
dec
adc
in
aam
dec
mov
loopne
lahf
pop
icebp
dec
add
mov
inc
frstor
push
js
out
pop
xchg
jg
sbb
or
mov
mov
sbb
mov
shr
aad
pop
mov
fsub
pop
push
jns
aam
cmp
enter
mov
shl
mov
shl
out
add
adc
bound
mov
dec
adc
mov
movsl
ret
sbb
cmp
cmpsl
imul
aad
popa
mov
lods
fcompl
shlb
dec
sbb
add
xor
dec
add
out
push
sbb
ss
cmpw
mov
test
and
sub
adc
ret
pop
sub
mov
pop
push
mov
loopne
mov
fistl
xsave
sub
jecxz
mov
dec
add
scas
inc
loop,pt
in
jmp
out
dec
mov
inc
fsubrs
adc
imul
into
xchg
imul
add
sbb
adc
mov
mov
and
ret
incb
xchg
std
mov
pushf
lods
push
scas
out
push
test
loopne
fdivrs
outsb
sbb
lahf
repnz
add
loopne
add
adc
or
sbb
mov
pop
lcall
and
test
call
enter
fildll
mov
add
lret
shll
data16
xchg
push
add
cmpsl
cmp
jb
fdivl
shl
or
cmp
mov
add
cmp
xchg
cli
add
sbb
arpl
mov
cmp
into
mov
in
movsb
push
hlt
jge
lret
sti
cmp
js
push
xor
adc
xor
sti
push
mov
adc
dec
inc
sahf
push
lea
mov
dec
mov
clc
imul
inc
cmc
rolb
imul
adc
pop
int3
xchg
pop
fsubrs
mov
mov
push
in
lds
insb
lret
rcll
je
andb
lret
out
adc
mov
fidivl
mov
sbb
pop
and
stos
mov
adc
jbe
jb
mov
xlat
push
mov
and
divps
shl
add
mov
pop
mov
push
fldl
xchg
out
test
dec
and
dec
leave
or
std
mov
mov
cld
jg
adc
jnp
movsb
jg
js
rol
or
adc
add
cmc
mov
aas
stc
push
sbb
pushl
cmp
xor
js
adc
adc
mov
fs
mov
loopne
cmp
and
jecxz
orb
cmp
out
sbb
lea
imul
push
xlat
jp
dec
push
and
ds
fildl
dec
xchg
adc
and
cltd
inc
ljmp
cwtl
push
stos
inc
subl
mull
adc
nop
sbb
lods
daa
movsb
inc
popf
hlt
cmpsl
dec
jle
jnp
ficomps
pop
repz
ss
subb
mov
in
mov
aaa
mov
dec
jne
ret
mov
cmc
mov
sahf
xlat
cmpsb
iret
pushf
mov
loope
fsubl
aam
lahf
ret
push
inc
jmp
std
addl
ss
pop
and
push
insl
adc
and
inc
cmp
bound
pop
jmp
cmpsl
mov
fisubrl
mov
nop
add
cli
in
ret
nop
andl
pushf
iret
daa
sub
jns
xchg
mov
xchg
leave
pusha
mov
stos
mov
hlt
out
es
nop
adc
sahf
cmpsl
out
xchg
in
out
sbb
mov
aam
sbb
les
push
lds
push
movsl
rorb
mov
dec
mov
insb
insb
addr16
sbb
and
stc
test
mov
movsb
mov
lcall
xor
aas
mov
adc
xor
inc
sbb
outsb
adc
sbb
mov
xor
xchg
mov
mov
dec
jp
pop
shr
nop
jecxz
leave
xchg
mov
dec
pop
movsb
mov
pop
loop
cmpsb
cmp
push
mov
xor
cmp
and
movsl
push
fiadds
jo
cmp
push
pop
outsl
out
jg
cmp
in
out
ljmp
jb
xchg
mov
lahf
out
mov
mov
push
inc
mov
mov
push
cmp
and
stos
test
push
mov
sub
jne
sub
ljmp
aaa
xorl
xchg
mov
mov
ss
enter
sar
or
lahf
jo
loope
pop
ja
add
in
mov
cmp
pop
cmp
movsb
xchg
cs
pop
aad
xor
and
in
push
mov
dec
adc
dec
in
jne
stos
scas
adc
jb
xor
push
outsl
daa
loopne
lods
cmp
xchg
push
or
cmp
loop
or
inc
shrb
xchg
xchg
mov
push
push
sbb
notb
push
jae
mov
sub
mov
lret
pop
icebp
out
inc
fldt
xchg
leave
jne
jbe
fbstp
aaa
outsl
adc
push
and
push
cwtl
das
push
bnd
sbb
push
enter
stos
or
mov
push
aam
sub
cmpsb
jae
or
pop
rcrl
repz
jmp
scas
aad
push
lea
push
scas
pop
and
enter
in
mov
insb
jae
xchg
scas
dec
inc
jnp
loopne
dec
movsl
inc
sbb
dec
dec
int3
fdivrl
mov
cmp
out
in
inc
mov
jmp
jo
lock
aas
cmp
push
jbe
int
mov
lea
sbb
pop
jne
cmp
mov
mov
sub
cmpsb
adc
add
sub
sbb
sbb
xor
push
mov
sbb
repz
in
xchg
dec
push
inc
test
cmc
cmp
mov
adc
bound
add
scas
push
sarl
cwtl
das
mov
xor
dec
xor
faddp
fisttpl
scas
arpl
sbbb
rcrl
cmp
addr16
ret
pop
ljmp
sbb
pop
popf
lret
cli
sub
lret
testb
sub
jo
pop
dec
dec
mov
arpl
outsl
sarl
pop
fs
mov
xchg
out
scas
inc
mov
rcrb
daa
jmp
mov
lods
adc
pop
sub
int
dec
sbb
fisttpl
add
jle
in
jecxz
xchg
pop
pop
or
in
decl
aaa
in
lret
or
sbb
call
or
xchg
in
shufps
or
dec
sbb
jb
push
pop
fwait
sub
fdivs
jnp
mov
and
dec
xchg
das
xor
sbb
dec
dec
rorl
push
sbb
leave
int
cmp
dec
and
mov
cmp
aaa
lret
mov
bound
lods
mov
pusha
sub
fwait
ljmp
jno
mov
push
mov
test
lret
inc
lods
scas
sbb
imul
sub
test
les
rolb
xchg
cmp
hlt
mov
stc
xor
push
out
pop
xchg
cmp
daa
sbb
sub
cmp
xchg
inc
test
es
insl
adc
cmp
testb
sub
xchg
sub
dec
xlat
sbb
pushf
popa
sbb
push
jmp
cmp
test
neg
mov
pusha
inc
ror
add
negl
test
cmp
sub
push
js
rcrl
lods
fsubp
lret
mov
repnz
call
fbstp
mov
push
mov
xchg
jmp
insl
movsl
movsl
fcoml
jmp
negb
mov
test
cmp
inc
pusha
into
xchg
push
notl
mov
mov
dec
enter
sbb
sbb
jg
jo
movsb
push
mov
pop
arpl
mov
adc
outsl
jnp
and
dec
sub
aam
nop
mov
dec
pop
sbb
sub
push
add
cmpsb
in
addb
push
outsb
jle
mov
jmp
mov
inc
xchg
mov
push
lock
mov
negb
int3
push
cwtl
test
sbb
outsl
inc
mov
push
jmp
xchg
std
xchg
les
cmp
or
leave
xlat
loop
mov
test
inc
pop
fldenv
in
fs
pushf
xlat
xchg
insl
mov
pushf
add
pop
or
rcrb
jecxz
lahf
repz
jp
ja
les
std
xchg
xchg
sbb
push
iret
mov
mov
lock
outsb
push
mov
ja
gs
lock
sbb
inc
xchg
ja
out
in
sub
aas
sarb
pop
adc
mov
cmpsb
ret
lea
adc
dec
push
xor
fs
push
addr16
clc
or
push
and
xor
jge
ss
inc
out
sbb
data16
sub
pop
pop
push
insl
add
push
sahf
filds
adc
enter
ds
xor
cmpsl
shlb
inc
pop
cmp
mov
call
add
cmpsb
xchg
insb
mov
cmp
dec
push
add
adc
xchg
mov
shrb
add
dec
jno
cmp
lods
mov
test
or
sbb
daa
or
mov
mov
mov
cltd
cmpsl
arpl
mov
lds
nop
outsb
imul
aaa
jnp
aaa
into
inc
pushf
mov
in
xchg
out
fnsave
jno
jmp
add
ds
sub
addr16
out
pop
sbb
sub
push
mov
push
mov
stos
sub
push
ja
push
mov
test
shrl
inc
ret
ret
push
mov
xchg
sub
push
xor
push
mov
lock
je
loopne
jno
ret
adc
insl
iret
adc
aam
mov
or
sarb
movsb
dec
ss
xor
orl
cltd
test
fwait
mov
cmc
xor
fdivl
xchg
or
mov
dec
mov
xor
leave
fwait
bound
sbb
jns
sub
mov
xor
cmp
loopne
enter
aas
ret
push
or
mov
push
adc
or
int
jb
pop
rclb
jno
movsl
push
push
dec
sti
sbb
and
repnz
popa
jge
jg
out
mov
pop
push
mov
test
pop
xor
rcrl
add
mov
inc
cmpsl
mov
sarb
xchg
cmpb
cmp
ja
dec
sbb
cli
mov
and
psrlw
mov
gs
iret
data16
xchg
dec
fwait
push
imul
clc
cmp
sub
dec
ljmp
xchg
inc
loopne
repz
enter
or
cmp
mov
lods
xor
adc
mov
or
xchg
pushf
xor
out
nop
out
push
push
mov
or
adc
cwtl
les
or
nop
sarb
mov
fistl
add
addr16
mov
jl
xchg
cmpsb
loop
adc
pop
xchg
xlat
in
fdivrp
mov
outsb
add
push
dec
aam
sbb
push
loope
xchg
in
imul
mov
jne
fildl
mov
mov
dec
pop
sub
test
mov
icebp
popf
hlt
mov
push
fs
js
popa
test
or
leave
xor
filds
cmp
and
fcompl
sarl
sub
sbb
pop
mov
loopne
jle
push
stos
std
adc
in
rorb
sub
mov
sub
repz
jnp
loope
repnz
sub
or
out
cli
pop
cmp
or
sbb
daa
cmp
insb
inc
cmc
jmp
lods
add
lock
in
mov
xor
inc
jp
into
adc
in
add
jno
push
fstpt
rorb
inc
bound
fildll
adc
xor
push
inc
push
loopne
call
adc
adc
fildll
mov
subl
rorl
pop
xor
mov
sub
fsubrs
fiadds
jle
sub
add
jnp
out
add
lret
bound
jnp
adc
fiaddl
pop
icebp
sub
js
data16
dec
les
adc
and
ss
lcall
cwtl
fcom
pop
xchg
push
ret
mov
mov
shll
add
insb
fwait
icebp
push
mov
and
enter
addl
sub
mov
je
xor
in
lods
flds
cmc
popa
lods
sbb
adc
je
inc
push
das
fwait
lods
push
scas
mov
jmp
dec
or
aam
and
jno
cmc
fmulp
cmp
or
adc
sarl
xchg
xchg
stc
and
in
adc
pop
cmpps
push
add
stos
in
negl
xchg
push
jnp
lret
sbbb
sarl
cmp
push
ljmp
rcr
jecxz
out
adc
pusha
icebp
jae
mov
pop
in
vmovq
sbb
mov
shlb
nop
loop
add
pop
mov
mov
xor
test
push
daa
or
xor
in
add
lahf
cmpl
sbb
jle
cmpsb
dec
ljmp
add
inc
int3
dec
or
dec
mov
test
mov
cmpsl
jmp
pop
and
or
jp
and
lahf
sahf
push
mov
loope
mov
mull
cld
jg
xor
test
shll
push
mov
or
stos
cwtl
das
daa
ljmp
inc
loop
repz
pop
mov
add
lret
cmpsb
icebp
sub
addr16
outsb
in
xchg
fs
pop
sbb
out
add
push
mov
mov
rcrl
cltd
and
int
cmp
std
movsl
inc
in
ret
outsl
rclb
popa
das
mov
lret
pop
adc
push
or
mov
pop
adc
ret
dec
add
daa
pop
cmp
pop
xchg
add
enter
gs
xchg
sbb
inc
xchg
rolb
test
rcl
or
jp
mov
aad
daa
jo
pop
dec
dec
or
push
sub
push
add
xor
fwait
jo
push
pop
ror
loope
or
jnp
mov
or
cmc
mov
lahf
mull
pop
mov
into
decl
insb
add
or
ds
jmp
imul
insb
cmp
es
sub
sub
add
rorl
je
in
outsl
fsubs
scas
mov
cld
outsl
adc
push
movups
pop
push
xor
sbb
jne
out
je
add
pop
scas
mov
fsubs
in
mov
push
jno
fs
enter
pop
in
pop
ret
shll
ret
cs
mov
dec
dec
hlt
sbb
test
sub
sbb
fidivs
jg
aas
or
and
call
inc
fcmovbe
js
inc
repz
sbb
jmp
out
cltd
pop
pop
mov
push
cmp
in
jb
xor
fimuls
mov
push
add
cmovno
push
mov
lock
scas
cmc
cmp
js
push
pushf
mov
jbe
test
add
in
cltd
pop
push
ljmp
ljmp
mov
cwtl
das
inc
jmp
in
hlt
sub
jnp
fs
ret
fnstcw
das
xor
push
pop
adc
and
xchg
pop
xor
jns
dec
push
and
int3
cmp
js
or
pop
stos
ret
cli
sbbl
out
sbb
mov
ljmp
and
scas
add
push
enter
movsb
dec
fisubrs
cli
jne
insl
xor
add
loope
pop
out
and
lods
pushf
xlat
jno
add
mov
jo
loopne
or
pop
dec
pop
in
mov
popa
mov
mov
ds
fmuls
xchg
hlt
dec
xor
xchg
cmp
test
push
add
mov
pop
mov
mov
mov
mov
inc
pop
v4fnmaddps
lods
inc
fs
xor
pop
loope
push
adcl
lods
push
mov
pop
decb
xchg
adc
xor
jb
jcxz
pop
out
je
fs
and
sub
ljmp
push
and
icebp
add
cmpsl
jne,pt
xchg
cmc
test
add
cmpsl
je
mov
add
sbb
dec
negb
sti
es
popa
jns
mov
mov
and
jmp
xor
inc
inc
insb
jbe
and
jne
daa
mov
dec
mov
lcall
adc
push
pop
sub
iret
inc
test
xchg
fsubrl
mov
and
xchg
mov
jb
mov
test
add
sbb
lods
addl
mov
pop
sbb
push
movsb
or
or
in
dec
lahf
shll
inc
cmp
rcrb
aam
dec
push
adc
jecxz
aam
or
jns
dec
outsb
lock
sub
xchg
iret
and
sub
out
outsb
xor
jb
push
push
cmc
aaa
adc
pop
add
mov
dec
pop
xchg
fwait
xor
leave
mov
pop
mov
loop
scas
pushf
decb
lahf
xor
push
scas
push
jno
mov
fidivs
sub
sub
lea
mov
jae
aam
xor
shl
and
jnp
lahf
pop
addr16
js
mov
push
ret
cwtl
stos
hlt
add
out
cmp
cli
addr16
outsl
adc
mov
mov
or
inc
mov
push
sub
xlat
sub
or
outsb
std
imul
and
inc
inc
into
jae
in
lock
stos
jg
push
pusha
loope
xchg
or
mov
jb
mov
sbb
jne
imul
xchg
or
popa
or
dec
mov
cmpsl
and
imul
pop
sub
les
push
dec
add
shrb
add
fs
or
push
mov
push
xor
mov
and
sub
rorb
scas
inc
lods
sub
mov
cmpsb
data16
sahf
and
test
icebp
ret
mov
pop
jae
js
xor
add
xchg
cwtl
fists
dec
dec
dec
jp
push
cltd
insl
cmpsb
cmp
movsl
or
mov
in
pop
mov
dec
xchg
fiaddl
sub
shll
and
mov
jnp
rclb
cmp
adc
es
inc
les
push
into
mov
loopne
mov
xchg
add
test
fidivs
xchg
ret
xchg
enter
js
sub
fimuls
pop
repnz
sti
jns
shrb
jnp
out
xor
je
int
or
mov
jecxz
xlat
sbb
sbb
enter
mov
push
std
jnp
mov
fsubs
cmp
pop
mov
add
mov
in
add
pop
sub
lea
stos
adc
aad
test
sub
cli
rorl
cmpsl
push
inc
sub
xor
std
dec
lret
sub
lcall
movsl
enter
jg
mov
push
xchg
stos
or
push
add
imul
xor
cmp
mov
pop
imul
insl
sub
imul
std
cltd
mov
jae
leave
repnz
test
cli
rcll
pop
sub
cli
shl
int
sbb
and
xlat
adc
data16
lret
dec
xor
gs
lods
lret
and
daa
inc
inc
pop
xor
xor
imul
addr16
inc
sbb
push
inc
push
inc
out
fadd
cmp
loopne
imul
or
sub
or
adc
sub
pop
jae
ffreep
movsb
inc
sub
test
stos
out
xchg
and
fsubl
pop
inc
jae
movsl
cmp
pushf
xor
cld
push
sub
dec
cmpb
cmp
sbb
cmp
sahf
mov
ss
and
dec
mov
mov
data16
mov
adc
or
push
movsl
in
test
insl
jge
mov
mov
mov
jb
adc
ljmp
ret
scas
repz
sub
mov
loop
scas
or
mov
into
aas
sahf
outsb
mov
push
lods
stc
pop
cmpsl
out
pop
xor
lods
dec
xchg
and
push
sub
cltd
mov
xor
popa
dec
push
fistps
dec
leave
xor
imul
or
add
mov
jne
dec
dec
insb
and
es
and
sub
scas
add
mov
jg
adc
mov
stos
cmp
jbe
dec
test
js
clc
adc
cs
pop
inc
imul
fisttps
xchg
xchg
or
ret
sbb
dec
push
into
push
inc
ja
pop
aaa
adc
mov
push
stos
sbb
jge
lea
mov
add
call
int
outsl
inc
and
or
adc
xchg
shrl
pushf
pop
mov
xchg
gs
lods
lret
call
lock
push
mov
fs
cmp
imul
pushf
cmp
lea
inc
sbb
sbb
pop
je
pop
inc
adc
out
push
push
hlt
and
sbb
test
lahf
push
lcall
push
out
jmp
inc
dec
pusha
icebp
adc
dec
gs
addr16
jnp
xor
decl
pop
inc
es
in
gs
testl
xchg
mov
test
nop
mov
add
add
jle
jns
rorl
cmpsl
rorb
js
or
loope
dec
mov
ja
jmp
scas
inc
lock
loope
mov
jl
pop
push
jnp
std
mov
cmpsl
pop
idivb
lret
std
sub
leave
add
in
add
mov
pop
xchg
add
fidivrl
adc
loop
adc
xchg
into
gs
xchg
xchg
inc
mov
out
inc
stos
ljmp
fwait
imul
xchg
repz
loop
nop
mov
sub
popa
subl
loopne
and
xchg
ja
call
leave
pushf
fidivs
dec
push
sub
jecxz
cmp
jb
dec
inc
mov
sbb
test
pop
mov
push
js
and
dec
fisttps
mov
add
mov
mov
movsb
les
xchg
xor
sub
push
sti
fisttpl
stos
mov
push
jno
pop
sub
insb
add
and
fbstp
mov
xchg
push
jecxz
cld
xlat
cmpsb
or
fldenv
and
loop
test
loop
jmp
in
dec
jmp
cmpl
or
aaa
stc
faddl
jge
adcl
shrl
sbb
cmp
push
loop
pop
pop
pop
push
sub
pop
das
in
movsb
andl
pop
test
test
pop
scas
dec
pop
loope
xchg
sub
shrb
pusha
nop
and
addb
incb
adc
jb
nop
int
ret
push
popa
pop
jbe
shlb
sub
hlt
xchg
cmp
fwait
andl
lods
xor
leave
pop
or
fdivrs
stos
xchg
jbe
cmp
test
adc
mov
and
jo
inc
mov
or
mov
pop
dec
push
popa
ljmp
push
hlt
inc
pop
and
and
adc
popf
pop
fadds
xchg
aam
jmp
add
sbb
xchg
mov
mov
and
cli
pushf
mov
and
jo
into
sbb
test
dec
jnp
mov
adc
cltd
repz
jp
das
inc
cmpsl
leave
jnp
clc
push
lcall
lret
cld
jecxz
and
inc
push
les
jns
lea
sbb
mov
rcrb
aam
add
mov
cmpsl
jp
adc
ret
and
sbb
ds
xchg
cwtl
push
push
popf
jbe
shll
push
int3
mov
jmp
and
xlat
mov
mov
lea
push
push
inc
fwait
xor
xchg
xor
outsb
js
mov
xor
lcall
jmp
and
in
fcomps
fdivs
sbb
dec
fadds
cmpsl
test
jbe
mov
ds
pop
or
push
outsl
sbb
aas
xchg
testl
stos
push
dec
sub
sub
repz
outsl
cmp
lcall
ret
mov
fbstp
mov
push
iret
lret
mov
mov
enter
hlt
testl
mov
xchg
pop
cmp
bound
jae
aas
mov
pop
decl
loopne
shlb
out
push
lahf
popf
out
dec
dec
shl
push
in
fisubrs
pop
into
int
xor
ficompl
mov
and
add
test
aad
jl
inc
jge
push
stos
pop
or
mov
rolb
ds
dec
pop
sarb
add
dec
aam
push
push
insb
push
movsl
fldenv
sbbl
pop
jae
push
js
jae
inc
sub
jb
inc
call
xchg
loope
add
mov
lret
and
cld
mov
test
ret
xor
jnp
add
push
inc
xchg
sti
leave
insb
mov
out
sbb
and
loopne
call
or
mov
ss
xchg
cld
mov
fisttpl
fisttpl
xchg
sub
xchg
pop
loopne
imul
fbstp
aas
cmp
das
pushf
lea
sbb
jmp
mov
out
ja
in
pop
adc
nop
movsl
icebp
repnz
cmp
inc
mov
leave
or
mov
sbb
jnp
or
inc
test
jl
inc
les
addr16
inc
fsub
inc
push
call
stc
or
mov
jmp
mov
xchg
xor
sbb
dec
xor
fsubrl
jne
dec
cmpsb
xor
hlt
loope
inc
cwtl
mov
pop
testl
pusha
cmp
out
sub
pop
mov
shl
or
loop
pop
mov
into
loop
inc
into
fmull
adcl
repnz
orb
jae
xchg
mov
xchg
ficoms
sbb
fsubr
fdivrl
outsl
in
les
out
ret
lea
fs
cmp
inc
jle
sti
into
jmp
cmp
lea
adcl
lret
arpl
mov
add
xchg
jno
aam
xchg
es
mov
lds
int
or
js
xchg
push
repnz
test
adc
mov
cmpsl
lahf
mov
inc
gs
push
inc
test
ret
xchg
adc
sbb
sbb
jg
out
or
xor
xlat
cmp
mov
mov
and
xor
ljmp
sti
orb
in
mov
inc
xchg
adc
dec
xlat
fistpll
or
xor
cmp
in
faddp
lret
sbb
mov
sti
popa
mov
mov
xor
cs
repz
and
repnz
add
xlat
das
mov
test
inc
test
in
push
inc
aad
bound
and
fs
or
iret
les
mov
push
push
sub
decl
iret
inc
inc
dec
adc
or
out
lcall
push
sbb
and
adc
call
dec
loop
into
fdivrl
mov
aad
pushf
and
jl
outsb
mov
jns
xorl
sub
xchg
lahf
inc
dec
ja
inc
fmuls
or
inc
pusha
divl
lcall
jmp
add
and
jne
bound
pop
loope
ja
out
push
sub
inc
pop
xchg
and
sub
and
inc
lahf
dec
hlt
cvtps2pd
mov
aam
xor
mov
imul
into
enter
add
jbe
sbb
loope
fidivl
mov
lret
in
xchg
push
int
inc
ss
enter
fstl
push
xor
cmpsb
push
xor
movsb
mov
mov
faddp
pop
or
sub
movsl
in
and
sub
inc
hlt
lahf
iret
dec
xlat
and
add
stos
jns
stos
loope
je
lods
and
jecxz
sti
test
add
bound
and
out
incb
enter
push
inc
sbb
and
and
pop
setns
add
cmp
fsubs
cli
cmp
sahf
lods
not
xchg
cld
or
outsl
jnp
mov
aas
dec
pop
popf
ficoms
push
dec
or
mov
pop
push
mov
lds
push
leave
pop
fstp
jmp
ja
repz
sbb
push
addr16
test
outsl
scas
dec
mulb
sub
out
cltd
das
cmp
ss
insl
rclb
mov
lods
and
aaa
or
xlat
movsb
fldt
cmp
cmpsl
ja
mov
and
test
sub
cmp
insl
addb
test
mov
fcompl
or
sbb
clc
ret
adc
inc
jae
jnp
sbb
jp
imul
enter
push
pop
daa
or
es
jnp
xor
mov
xor
jl
repnz
cmp
and
aad
call
in
mov
cmp
or
ljmp
dec
ss
and
ficoms
inc
pop
addr16
test
adc
or
pop
pusha
cli
xchg
xlat
push
out
mov
jns
adc
jecxz
dec
fstpt
xchg
xchg
mov
mov
popa
dec
iret
lret
movsb
cmc
int3
pop
stos
dec
aad
test
jne
les
imul
xchg
jge
inc
fsubl
jmp
cmp
shll
xor
ljmp
add
rcrb
or
and
test
leave
outsb
xchg
mov
dec
mov
pop
out
ds
loope
lahf
xchg
dec
inc
adc
cmp
or
xor
xchg
push
nop
das
test
pop
sub
mov
rcrb
daa
scas
inc
in
sahf
out
incl
jae
xchg
mov
jno
out
mov
sbb
pop
data16
jge
lret
rcrl
mov
inc
out
in
cmp
stos
out
xchg
ror
sbb
inc
inc
in
ss
sub
push
das
push
std
pop
cmp
es
jp
aad
fimuls
aaa
pop
cmp
cmpsb
ret
adc
lcall
and
arpl
loop
mov
and
mov
cld
roll
outsl
daa
je
fdivr
push
popf
xor
aas
mov
repz
test
popa
int3
pop
sahf
mov
fisubrs
xchg
inc
xor
pusha
and
movsb
jle
dec
sbb
push
in
cmp
lods
push
push
mov
or
cmpsl
negb
popa
enter
pop
shrl
movsb
js
mov
pop
sahf
or
inc
cli
and
jno
repnz
fbstp
push
aaa
add
mov
aaa
xchg
add
dec
pop
scas
jne
hlt
das
fdiv
dec
test
mov
jno
adc
icebp
xchg
imul
daa
xor
roll
ss
shll
cs
lcall
hlt
subl
popl
test
daa
rcr
mov
lock
into
pop
jo
scas
xor
xchg
mov
xchg
insl
add
stos
fisttpl
mov
mov
lahf
rorb
sahf
adc
xchg
std
ret
mov
add
call
mov
cmpsl
and
or
mov
mov
sub
jle
mov
xorl
in
mov
push
and
push
push
push
xor
xorl
mov
shll
sarl
inc
dec
mov
mov
outsl
push
dec
loop
nop
aad
mov
lods
scas
inc
push
dec
pop
out
jns
int3
lret
xchg
sbb
in
pop
shrb
and
and
add
mov
dec
jecxz
icebp
or
hlt
add
outsl
das
sub
pusha
imull
dec
mov
sbb
mov
repz
cmp
testb
dec
popf
aas
dec
fildll
shlb
popa
movsl
arpl
adc
shrl
or
int3
es
and
dec
fildll
mov
sub
loope
pop
movsb
cmp
pop
push
loop
push
iret
inc
push
montmul
cmpsb
test
test
adc
push
push
mov
fdivrs
test
popf
mov
iret
and
or
rolb
movsl
cmp
mov
lret
rcrb
aas
mov
cmp
test
out
pushf
xorl
icebp
mov
and
adc
pop
cmp
lods
pop
mov
cmpsl
loopne
in
orl
das
xor
mov
sbb
jb
dec
out
xor
push
daa
fwait
or
cmp
push
push
add
xor
xlat
outsb
insl
push
mov
mov
mov
fnsave
enter
loopne
cmp
imul
inc
fldl
shrl
js
xlat
lods
pop
loop
push
int
cmc
jb
xchg
cmpsl
sbb
lcall
mov
adc
push
push
sbbb
ret
fwait
cwtl
jecxz
out
adc
and
sbb
dec
stos
jnp
adc
test
push
nop
cmp
xchg
sub
nop
lds
hlt
mov
repz
mulb
repz
and
inc
cwtl
das
je
es
test
shll
fcomps
or
stc
push
adc
and
cli
push
inc
pushf
sbb
and
arpl
adcb
pop
sahf
in
shrb
shld
iret
loopne
dec
sbbb
and
xchg
push
and
pop
stos
imul
stos
mov
jmp
push
aaa
cmove
cmp
pop
stc
nop
cmp
popf
in
pushf
mov
mov
and
ficoml
mov
clc
call
or
mov
sbb
aas
mov
fneni(8087
nop
push
ljmp
mov
add
cmp
and
mov
push
in
sub
jno
or
xor
add
test
push
das
aam
test
push
aaa
into
test
lods
inc
push
movsl
daa
mov
movsl
hlt
jge
and
xchg
sub
inc
mov
inc
inc
xchg
sub
mov
pop
mov
xor
inc
cmp
sarb
xchg
inc
fadd
pop
or
adc
jnp,pt
insb
or
sbbl
push
mov
mov
cmp
or
fnsave
and
mov
es
or
sub
jbe
out
pop
adc
das
stos
xor
imul
pushf
xor
sub
pop
loop
push
adc
jmp
mov
xor
jl
fxam
jl
mov
push
popf
inc
xor
inc
xlat
adc
imul
ds
push
in
sbb
jg
ljmp
ret
fdivl
mov
ss
sbb
out
out
int3
adc
adc
inc
cmp
shrb
in
mov
shl
sbb
mov
lret
bound
mov
or
sbb
cmpsl
dec
inc
cmpsl
jne,pt
insl
push
mov
out
push
icebp
mov
dec
loop
aad
les
mov
mov
dec
cmp
push
pop
or
jge
dec
cmp
lock
xchg
sub
insl
xlat
mov
push
mov
loopne
sbb
xchg
dec
ds
fsubrl
insl
add
mov
je
sbb
mov
data16
push
popf
push
mov
out
xchg
mov
pusha
fcomps
mov
mov
and
inc
xor
into
push
mov
scas
in
icebp
mov
rcrl
lods
inc
adc
sbb
jne
insl
adc
lahf
ss
shrl
aas
xchg
outsb
in
dec
sbb
mov
ss
icebp
sbb
iret
data16
inc
add
sbb
add
jge
push
in
sbb
popa
clc
xor
test
jge
sbb
insb
add
call
or
test
push
jle
cltd
xor
stos
sbb
push
inc
icebp
mov
dec
loopne
movsl
inc
and
push
inc
push
in
jae
imul
cmpsb
xchg
sub
das
popa
clc
pop
inc
sbb
add
adcb
inc
mov
xchg
adc
gs
cmp
in
test
hlt
sbb
sub
jecxz
jg
push
jmp
loopne
mov
dec
add
adc
or
outsl
in
sbb
mov
mov
inc
and
iret
popw
into
sbb
dec
sub
lcall
pop
mov
rolb
pop
sbb
gs
pop
test
js
cmpsb
lods
mov
sub
leave
inc
and
jmp
gs
imul
shl
testl
sbb
jns
nop
bound
sbb
out
out
cmp
xor
add
push
add
adcl
test
dec
loope
cli
sahf
xor
and
dec
test
aas
jne
xchg
xlat
xchg
xchg
sub
hlt
loop
and
xchg
sub
lock
mov
outsl
sahf
add
lret
lea
mov
fiaddl
imul
popa
mov
mov
jl
test
add
pop
cmc
pop
and
mov
jge
lea
int3
adc
stc
push
lods
mulb
int3
arpl
cli
xchg
pop
lret
cli
lds
push
sbb
jo
jne
mov
add
into
gs
sbb
cmp
adcb
iret
insl
jns
pop
lods
and
addr16
je
dec
test
js
cmp
push
into
les
jns
movsb
scas
pop
pop
mov
lds
cwtl
mulb
aam
sbb
pop
lock
fdivl
or
jmp
add
xchg
aaa
test
mov
pop
jae
cmc
pop
out
and
pop
out
jns
xlat
outsb
xor
jg
mov
or
sub
fdivp
addb
les
mov
dec
fs
imul
cmp
icebp
mov
inc
adc
xor
aam
rcll
cmpsb
xor
xlat
sub
mov
test
sub
dec
sub
lret
xlat
out
into
dec
push
insb
jg
and
and
int3
arpl
dec
in
xchg
mov
lds
add
adc
mov
es
pop
and
shl
mov
fldt
adc
mov
jno
sbb
lret
scas
push
xchg
sub
sbbl
aam
push
add
std
xchg
pusha
in
sbb
mov
insb
std
xchg
mov
jbe
push
movsb
push
jae
aaa
jno
hlt
mov
lds
repnz
xchg
cs
pop
idivb
add
out
cltd
add
cmp
pop
add
pop
jnp
pop
xlat
fldl
push
dec
mov
fcompl
negb
std
dec
rcrl
outsl
shrl
cltd
adc
push
mov
lock
out
mov
cs
add
or
repz
sbb
sub
cmp
adc
out
lock
pop
sahf
and
ret
inc
lods
pop
aaa
nop
fimull
xchg
addr16
rcrl
xchg
insb
ret
enter
jl
out
or
mov
push
xchg
ljmp
push
mov
push
jge
and
push
test
sub
mov
push
mov
dec
lfs
pop
lcall
insb
jl
cmp
push
xor
popa
stos
loopne
enter
xor
sahf
out
jo
sbb
fsubs
jmp
mov
pop
rcl
das
loope
fcompl
ljmp
and
dec
jne
lret
or
dec
call
rolb
pop
int
out
push
adc
mov
out
daa
or
in
pop
movsb
or
rorb
stc
and
pop
inc
cltd
pop
scas
enter
and
inc
mov
adc
lods
mov
sbb
and
hlt
hlt
add
ljmp
sub
cs
sbb
xor
popf
filds
fistps
cmp
pop
cmpsb
mov
jb
push
jae
imul
das
stos
mov
sub
out
inc
les
sahf
inc
shrl
inc
adc
cmp
inc
cmp
adc
shrb
testl
outsl
cld
sti
sub
cmp
jns
shrb
push
cmp
insl
das
add
mov
dec
cld
es
cwtl
sub
jo
mov
adc
adc
push
adc
sbb
push
add
sbb
push
jle
imull
cmpb
mov
xchg
lea
sbb
jle
jb
mov
dec
ret
mov
dec
in
lock
mov
shll
std
adc
sbb
je
insl
cmc
lock
sub
adc
sub
xor
ja
rcll
cmp
inc
dec
inc
vcvtss2sd
hlt
mov
push
mov
jecxz
in
mov
pop
outsl
jecxz,pt
lret
fdivrs
or
and
fstpl
cltd
inc
fnstcw
loopne
popa
std
das
inc
lret
or
push
push
call
adc
ret
cmp
jno
in
push
test
mov
cmp
sbb
push
push
cwtl
cmp
jge
xor
ret
sahf
add
sbb
fwait
and
adc
insb
push
fidivs
sarl
loop
push
movsl
mov
jnp
dec
shl
lds
rolb
popa
scas
lcall
lret
push
adc
mov
call
fwait
test
jo
mov
adc
fidivrl
sar
roll
mov
dec
aam
xchg
pop
cltd
adc
enter
mov
jecxz
icebp
mov
lcall
adc
dec
rclb
iret
ljmp
in
xchg
stos
pop
push
cmpsl
in
idivl
dec
inc
mov
bound
in
lods
jo
inc
fimull
sbb
push
int3
or
imul
push
push
les
inc
mov
dec
in
pop
hlt
ja
xchg
jl
aas
sub
test
mov
sbb
xor
adc
mov
shl
imulb
push
add
lcall
out
cltd
cmp
jo
push
pop
adc
std
in
inc
lret
cwtl
jecxz
push
mov
stc
mov
sbb
push
jl
pushf
pushf
cmc
daa
sbb
pop
mulb
test
push
cmc
inc
pop
lds
stos
jbe
and
hlt
jge
lods
inc
sti
das
sbb
popf
push
add
cmpsb
pop
movsl
pop
mov
in
jne
and
lret
xor
add
dec
lds
adc
dec
mov
cmp
sbb
xchg
daa
or
mov
sbb
jp
xor
add
pop
nop
adc
cs
fidivs
nop
out
negb
inc
enter
dec
fnsave
mov
pop
jg
mov
pop
add
push
test
xor
mov
push
inc
or
lods
lret
and
adc
stos
xchg
int3
or
andb
pushf
mov
cmp
mov
bndstx
mov
daa
push
repnz
cmc
mov
std
sbb
sbb
pop
testb
cmc
das
fldt
leave
inc
out
jo
orb
imul
adc
sub
test
inc
into
mov
push
int
scas
popa
mov
or
jo
add
in
push
popf
imul
or
test
add
add
pushfw
jp
fidivrl
repz
test
xchg
movsl
adc
jae
mov
push
mov
and
and
loop
xlat
xor
mov
cmp
lret
dec
mov
mov
dec
js
adc
mov
out
mov
mov
inc
push
mov
decb
test
dec
cmp
xchg
inc
pop
or
insl
jl
and
sub
adc
push
xor
in
pop
addl
dec
sbb
push
lea
xor
jns
cmp
test
in
dec
fdivl
mov
ja
cmp
push
in
sub
xchg
pop
jbe
inc
mov
js
pop
aad
popf
daa
fisubl
sub
out
arpl
xchg
lods
cmp
xor
or
sub
icebp
dec
jge
mov
push
cmp
xor
aas
ljmp
push
stos
xchg
jmp
adc
adc
shr
jo
mov
in
inc
mov
ret
mov
or
loopne
sub
adc
out
lock
mov
imull
push
rcl
sahf
xchg
enter
lret
scas
idivl
push
into
lds
repnz
incb
loop,pn
pop
mov
mov
push
mov
popf
xor
cmc
jns
leave
push
arpl
cld
insl
lahf
sar
pcmpgtb
fidivs
adc
stos
bound
cwtl
sbb
push
mov
inc
es
jbe
xor
aas
push
rclb
das
fmuls
pop
lods
pop
outsl
add
pop
insb
call
nop
push
test
mov
add
lods
xchg
lock
es
gs
and
dec
jecxz
dec
add
loope
cmp
pop
push
sbb
adc
cmp
sub
lret
mov
fmuls
sbb
add
sbb
jb
dec
int
xlat
mov
aaa
or
mov
js
fidivrl
ret
loopne
dec
lret
push
stos
inc
mov
rorb
decl
xchg
icebp
push
jmp
repnz
mov
cmp
push
rol
mov
push
flds
cmp
push
adc
psubw
out
pop
or
xor
and
add
mov
ficoml
add
out
xchg
cmp
psubb
add
pop
push
add
scas
add
jmp
mov
add
sub
pop
enter
ja
jo
lock
jge
pop
insl
sub
or
sub
mov
mov
pusha
test
sti
dec
test
mov
bound
dec
stos
jne
and
mov
adc
imul
cmp
jle
dec
mov
cltd
pop
out
fdivrl
xor
ficoml
adc
jae
add
xchg
aaa
scas
test
jge
mov
fmull
shrb
mov
sub
subl
in
mov
dec
dec
in
call
fsubrl
sbb
iret
inc
inc
mov
jecxz
push
out
add
xchg
xchg
push
ss
sbb
bnd
sbb
and
into
fs
stos
inc
leave
cld
push
mov
pop
mov
mov
push
sbb
inc
xchg
lea
pop
repnz
inc
lds
rdtsc
jmp
dec
add
dec
es
push
out
test
sub
stos
jl
arpl
xor
mov
sti
pop
lcall
push
mov
pop
cmp
jl
aas
ljmp
push
lods
cs
xor
mov
adc
adc
push
push
inc
add
cmp
add
dec
jne
mov
inc
ret
lahf
mov
arpl
adc
push
ss
sarb
ret
cmp
movl
mov
insl
test
lock
mov
cmp
mov
dec
gs
fstpl
sbb
jno
inc
leave
nop
inc
std
and
pusha
mov
pop
repnz
cwtl
unpcklps
int
jbe
xchg
add
xlat
mov
les
push
push
mov
inc
int3
push
inc
and
inc
jae
jecxz
cli
and
mov
idivb
aad
cwtl
sbbb
outsb
add
aam
xchg
mov
push
out
sub
nop
cmpsl
std
mov
ret
push
jl
dec
mov
lds
insl
ret
xchg
cmp
push
imul
mov
adcb
outsl
repz
cmp
shll
push
sub
imul
lret
movsl
cmp
ljmp
loope
mov
shlb
pop
lds
mov
test
negl
mov
shl
mov
leave
pusha
mov
mov
adc
imulb
push
in
sub
and
fwait
dec
pop
lret
or
cwtl
dec
or
test
in
push
iret
lods
sub
repz
adc
enter
xor
pop
xor
mov
ret
mov
cmc
xchg
jmp
iret
push
test
jne
adc
stos
inc
xchg
push
lcall
push
je
lcall
movb
jecxz
sub
xchg
mov
adc
xchg
mov
insb
mov
add
cmp
adc
pop
into
mov
ds
shrl
mov
fmuls
push
ret
inc
dec
mov
jo
sub
jg
test
fldt
push
xchg
mov
cmp
dec
daa
sbbb
jo
cld
inc
ja
sbb
dec
aaa
into
jg
lock
or
aad
and
mov
cmp
lea
jge
jnp
sbbl
push
lods
imul
dec
jmp
lret
mov
faddl
scas
nop
ja
adc
adc
and
mov
sbb
sbb
lret
sarl
les
sti
xchg
mov
stc
pop
leave
int3
pop
es
fildll
loope
incl
std
push
jns
mov
add
add
mov
mov
fnsave
jecxz
pop
mov
add
es
mov
jmp
push
mov
ljmp
jecxz
xor
cwtl
or
push
jbe
cmpsb
ja
jno
dec
scas
in
mov
rolb
mov
out
pop
mov
adc
mov
arpl
xchg
pop
add
clc
sub
xor
dec
cmp
gs
sarb
insb
daa
rcrl
outsb
add
mov
movsl
gs
dec
shlb
jecxz
stos
mov
jle
sbb
push
call
xchg
dec
mov
mov
inc
mov
xchg
aad
mov
xchg
lods
push
xchg
push
push
addr16
test
jo
pop
inc
cmpsl
outsb
insb
push
lret
push
addr16
mov
pusha
je
jo
push
xchg
out
and
loope
xor
stos
jo
fsubl
push
and
mov
popf
xor
shrl
cmc
and
rorb
loope
xlat
push
push
mov
fldl
push
fwait
mov
mov
xor
jp
mov
mov
data16
xchg
push
orb
mov
fisubrl
lahf
daa
in
sbb
inc
nop
or
and
jbe
testl
and
cmp
adc
and
xchg
pop
and
in
xor
mov
inc
test
push
push
aad
gs
roll
dec
jl
cmp
pop
popf
rcrb
sbb
jmp
push
fsts
ss
ret
sub
imull
stos
pushf
cmp
lods
lret
into
xor
ljmp
cld
movb
xlat
mov
dec
test
sub
frndint
enter
mov
faddp
jno
ret
movl
push
and
ret
pop
adc
imul
pop
sbb
mov
jmp
fisttps
add
clc
mov
les
out
flds
push
in
iret
xor
cmpsb
add
pop
movsb
out
xchg
in
mov
repnz
pop
mov
pop
lret
std
mov
icebp
enter
fcmovu
movhlps
loopne
pop
mov
xchg
dec
aam
pop
fbld
lds
mov
xor
aas
sub
sub
idivb
cmp
sub
ss
movsl
push
mov
loope
pop
lds
mov
cltd
gs
mov
inc
mov
out
lods
insb
mov
faddp
sbb
scas
test
sub
sbb
sbb
movsb
lcallw
dec
outsl
jnp
push
fcoms
lock
xchg
mov
mov
xor
ret
mov
pop
lods
arpl
sti
pop
sbb
cmp
push
lcall
nop
mov
icebp
pop
inc
addb
pop
xchg
pop
lret
add
negl
ja
mov
fmull
jg
shlb
jl
loopne
jp
jo
jle
adc
xor
add
sbb
adc
push
mov
push
adc
fimuls
lea
outsl
lods
cwtl
out
xor
jmp
mov
fcoms
adc
pop
mov
data16
push
out
mov
push
sarb
sub
ss
hlt
xor
cmp
dec
popf
fbstp
pop
mov
jle
flds
pop
mov
xchg
jle
js
mov
sub
xchg
sub
loopne
pop
adcb
cwtl
xchg
mov
sbb
cwtl
xor
jp
sbbl
xor
inc
push
stos
inc
xor
push
add
or
xchg
cmp
loopne
dec
pop
adc
addr16
loopne
cmp
mov
jo
jl
sub
lret
xchg
and
add
push
mov
adc
push
das
xor
mov
scas
ja
pushf
dec
in
pop
fbstp
aam
movsl
rcll
and
aam
ficoms
ret
outsb
mov
sbb
cmp
sub
sub
pop
rcr
push
mov
out
sbb
std
stos
pop
loope
cld
xchg
xchg
mov
jno
mov
mov
das
sahf
jno
push
insb
ja
inc
aas
inc
into
adcb
insl
adc
ja
stc
lea
rorb
xchg
and
add
xchg
dec
ret
subb
sub
stc
test
sbb
stc
xor
test
sbb
imul
cmpl
outsl
sarl
xchg
pop
nop
cmp
shll
and
xor
lock
out
fucom
idivl
lret
lret
sti
movl
mov
dec
rcl
divb
sti
or
push
adc
stos
add
dec
clc
sub
arpl
add
outsb
mov
jle
push
mov
cmp
fisttpll
mov
mov
out
or
lock
jp
movsl
into
rorb
add
cmpsb
mov
sbb
inc
mov
sub
fisttpl
aas
pop
xlat
cmp
or
inc
lcall
pop
jne
sbb
jb
out
les
lahf
xchg
mov
pusha
cmpsl
int
jp
stos
mov
pop
icebp
sub
pop
ret
stos
push
inc
mov
pop
out
xchg
push
pop
or
push
ljmp
jp
or
cs
nop
dec
mov
test
cmpsb
pop
cmpsb
lea
push
jp
outsb
xchg
lcall
aas
sbb
mov
mov
std
cld
sbb
aam
iret
int3
fsubl
or
aam
mov
xlat
in
orl
push
shrb
sub
loop
adc
js
es
subl
xchg
xchg
mov
and
scas
sbb
psubb
popa
imull
es
inc
sub
aaa
pop
psllw
es
cltd
fwait
lods
pusha
and
or
lcall
sbb
dec
stos
inc
push
call
mov
ss
sbb
fs
and
and
fidivrl
lds
jle
xchg
sub
movsl
daa
mov
cmp
out
fbstp
fstl
mov
jbe
mov
jg
mov
pop
stc
cltd
test
adc
inc
jg
fcmovne
mov
fisttps
fnstsw
in
into
jnp
loopne
or
sahf
adc
sbb
movb
cmpsb
add
mov
add
xchg
outsl
dec
push
jmp
push
inc
xor
sub
and
fwait
loop
mov
pop
mov
lea
pop
xchg
xchg
outsb
mov
in
sbb
jmp
faddl
lods
pop
or
add
push
mov
sub
adc
sub
add
inc
xchg
leave
xchg
mov
pop
mov
sbb
int
pop
ficoml
cmpsb
pusha
mov
fnstcw
pop
push
ja
out
cmp
xor
and
rcrb
dec
inc
pop
iret
push
sub
sub
push
add
cltd
jbe
roll
repnz
lds
stos
dec
mov
dec
mov
hlt
inc
mov
add
pop
mov
fmull
into
scas
xor
cmc
fdivrl
fsubl
arpl
mov
btrl
jmp
jl
mov
insb
adc
cltd
popa
fidivs
fstl
mov
test
pop
cltd
out
mov
fisubs
ljmp
cmpl
push
stos
xor
push
movl
dec
roll
daa
mov
adc
xor
xchg
pop
call
popf
fmuls
arpl
mov
lahf
ret
cmp
sub
xorb
pop
icebp
xchg
popf
xchg
mov
popf
xchg
mov
fwait
mov
jmp
lods
nop
xchg
or
ljmp
or
ss
fistps
loopne
dec
push
aaa
jmp
pop
push
and
imul
sarb
mov
xor
movsb
idivb
sbb
cmp
sarb
push
inc
shl
sub
sbb
adc
aaa
cmpsl
outsb
orb
pop
mov
push
enter
push
adc
push
test
add
pop
mov
cli
clc
and
out
jns
mov
je
icebp
add
mov
ret
dec
mul
fstl
loopne
dec
adc
lds
xor
jb
mov
shlb
and
dec
push
cmp
push
dec
pop
add
inc
adc
pusha
jle
xorl
hlt
xchg
xchg
int
adc
or
xchg
es
in
subl
push
xor
test
jb
cmp
cmp
cmc
negl
ret
daa
sbb
aam
in
jge
pusha
inc
push
mov
lods
push
scas
pop
gs
popf
jg
and
cmp
jmp
imull
es
jecxz
loope
insl
add
pop
ja
filds
inc
ret
dec
or
and
xor
or
fisttpl
enter
xchg
mov
popf
adcb
mov
out
or
push
aad
sbb
jp
aaa
paddsw
jg
jno
push
popf
jmp
push
mov
ret
push
push
leave
test
stc
dec
mov
fidivrl
add
outsl
cmpsb
ret
call
scas
stos
pop
sbb
push
adc
fisttps
push
dec
and
inc
lahf
adc
pop
mov
cmp
in
mov
mov
loop
out
pop
jmp
cld
mov
sub
sahf
dec
imull
xchg
dec
in
pusha
clc
xor
sbbl
or
sub
stos
int3
loope
mov
or
fnstcw
iret
dec
aam
xlat
pop
xor
inc
fcmovb
pop
mov
loopne
dec
and
cli
test
lds
in
sbb
mov
outsb
sahf
ret
push
sub
test
inc
inc
fiaddl
pop
mov
mov
in
aaa
jmp
mov
aad
fisttpl
les
loopne
lea
mov
add
sbb
jne
outsb
in
jg
shlb
xor
mov
pop
les
outsb
add
out
mov
and
aad
adc
js
test
cli
jg
lret
in
xor
fstps
call
or
fsubrl
cli
xor
sub
mov
mov
adc
ret
jnp
mov
jae
ljmp
and
test
sbb
add
and
test
lock
leave
push
jb
imul
cli
jns
mov
repnz
out
into
jns
sub
fidivs
cmp
fbstp
das
popa
xchg
js
stos
gs
cmp
mov
sub
test
mov
cmc
clc
sar
sub
mov
fldl
sahf
pop
pop
sub
lock
lods
test
pushf
ret
cmp
adc
inc
out
ret
xchg
sub
mov
xchg
or
push
sbb
xchg
mov
movsb
in
pop
out
mov
fnsave
addps
mov
xchg
sub
push
dec
mov
xchg
or
cmp
mov
or
scas
mul
ja
shrb
roll
xchg
jl
dec
fists
sbb
into
je
std
movsl
out
cmp
and
test
stc
inc
pop
out
jb
mov
or
lahf
out
sub
rcr
repz
xchg
inc
mov
addr16
fucomip
test
mov
or
arpl
lock
pop
ja
nop
dec
filds
mov
sub
sub
pop
add
test
lods
pop
shrb
int
cmp
stos
lock
and
pop
push
decb
movsl
das
je
jbe
push
sub
add
dec
loope
sbb
dec
hlt
push
rcrl
mov
movsb
cmp
adc
inc
in
ret
gs
sub
aas
loopne
jno
mov
ljmp
imul
aaa
cmp
push
mov
mov
or
cs
sub
imul
mov
xchg
cs
addr16
push
movsl
cmp
sub
test
ret
pop
aad
or
lods
mul
js
into
sub
decl
xchg
jnp
dec
loopne
pushf
sbb
mov
lds
lock
movsb
cmp
ja
les
pop
popf
in
sub
mov
mov
push
call
mov
fsubrp
xchg
mov
or
icebp
cmp
js
mov
dec
loopne
mov
sub
cwtl
ret
mov
aad
sub
shrl
dec
stc
nop
subl
xchg
cs
inc
sti
mov
sub
dec
lret
movsb
push
push
in
out
adc
sbbl
mov
cmp
jle
push
repz
mov
jbe
mov
std
xchg
pop
imull
push
hlt
pop
in
lea
ret
scas
inc
cwtl
add
xor
mov
sbb
or
cs
xchg
pusha
clc
adc
mov
cs
ja
add
dec
mov
and
sarl
jnp
dec
pushf
adc
es
push
movsl
inc
inc
fstpt
lea
adc
dec
xor
outsb
fsubrl
lds
cs
mov
lods
mov
mov
push
daa
movsb
cmp
mov
lret
sbb
int3
xchg
popf
mov
jg
ja
cmp
mov
shlb
push
scas
and
pop
jle
or
mov
add
pop
outsb
loop
cmpsl
jle
outsb
into
and
jp
sbb
cmp
sbb
or
icebp
jmp
mov
jge
mov
sbb
mov
aad
imul
adc
dec
mov
cmp
jo
movsb
or
movsl
push
ja
rolb
outsl
and
fsubr
inc
pop
xor
sbb
xor
repnz
or
loop
cmpl
pop
stos
ficoml
popa
stos
jl
ret
fs
std
dec
and
cmp
lcall
loop
inc
mov
and
adc
subl
fbstp
xchg
das
jae
roll
imulb
insb
and
insb
xchg
lret
and
sub
mov
js
fidivrl
jl
push
push
xchg
xor
cwtl
pusha
imul
and
jle
notb
push
cmp
inc
push
rcr
jbe
push
popf
pop
push
lret
hlt
and
inc
add
dec
jno
add
xchg
pop
xor
add
inc
dec
cmpsb
fidivrl
adc
sbb
or
pop
clc
pop
jle
and
int3
pop
mov
es
add
bound
xchg
jns
or
jnp
mov
stos
sbb
je
repnz
jmp
mov
inc
out
push
add
lret
push
mov
rcl
sub
lahf
and
out
in
ljmp
add
pop
mov
fnstsw
cli
cs
xchg
das
cmovle
repz
je
nop
or
mulb
adc
jnp
sub
mov
test
lret
dec
lds
cltd
aaa
lcall
xor
inc
cmp
and
into
and
sub
imul
adc
cmpsb
inc
rcrb
shr
cmp
lret
add
push
cmpsl
fwait
rolb
cmp
xchg
xchg
out
call
jbe
jno
xchg
mov
xor
mov
shlb
inc
fidivrl
cli
mov
jl
xorb
rep
jae
pop
lahf
fnsave
xor
out
arpl
cs
call
mov
fnsave
xor
dec
test
mov
xlat
mov
aas
insl
enter
add
std
jne
push
call
mov
push
ljmp
pop
hlt
imul
adc
xor
inc
scas
ret
aad
mov
push
jmp
inc
sbbl
loope
popf
ror
or
push
dec
xchg
cmp
into
cmp
imull
and
pop
jle
mov
in
or
xchg
cmp
andl
xchg
inc
pop
inc
loop
out
test
iret
mov
clc
popl
xlat
pop
sub
mov
xlat
pop
mov
aad
jmp
stc
pop
in
in
addr16
outsb
ljmp
mov
xchg
mov
jecxz
push
adc
imul
fbld
repz
jle
mov
xor
jmp
fwait
add
jo
js
out
outsl
push
iret
fdiv
call
dec
sbb
daa
scas
jge
call
lods
js
stc
pop
stc
push
call
int3
sbb
mov
scas
std
cmpsb
call
sub
jl
addr16
iret
aam
call
dec
sbb
mov
cmpsl
call
jecxz
sti
mov
imul
cmp
pushl
test
or
pop
in
addr16
hlt
pop
jge
cmpsb
sub
and
inc
pop
xor
cmp
mov
mov
xchg
xor
push
cmp
cwtl
inc
out
imul
push
push
xor
gs
jne
aad
xlat
push
jl
enter
loope
add
lods
xor
push
sub
call
cli
mov
shl
cmp
lea
jle
add
pop
cs
push
in
jo
pop
add
fisttpl
sarl
inc
or
or
inc
or
pop
cs
pop
gs
call
sti
mov
aam
cmp
mov
ja
push
pushf
inc
or
pop
lods
xor
in
jo
dec
adc
xlat
push
les
push
sbb
imul
inc
or
mov
jmp
insl
mov
jb
enter
xor
cmpb
popf
inc
inc
sub
push
mov
mov
mov
ljmp
aad
dec
fidivs
push
scas
xchg
push
scas
mov
xchg
cmp
outsb
pop
add
lods
xor
push
mov
dec
adc
lret
jo
push
xor
lock
add
out
jb
clc
daa
test
push
adc
jl
je
out
cli
inc
sbb
lea
sahf
sub
int
and
cmp
push
sti
aam
and
rcrl
xor
aad
and
or
loop
ffree
and
push
lock
out
pop
or
dec
clc
and
fstl
out
cmp
cmpsl
out
mov
mov
mov
adc
inc
jb
mov
popf
xchg
inc
stos
adc
pop
push
mov
mov
mov
xor
adc
adc
inc
dec
cs
dec
lahf
bswap
sub
jns
adc
sub
push
ljmp
xchg
push
or
inc
dec
mov
into
fwait
xchg
sbb
adc
dec
xor
xor
pop
dec
mov
es
and
sbb
inc
adc
dec
and
push
pop
rcll
inc
mov
les
orb
inc
adc
lds
sbb
inc
adcb
add
aas
push
xor
adc
pop
lret
cli
and
aaa
mov
mov
shlb
test
sub
adc
push
pop
std
jb
cmpsb
xor
jo
jmp
push
movsb
das
inc
push
stc
outsl
lahf
ljmp
xor
cmc
in
cmc
dec
or
loopne
cmpsl
push
insb
data16
jmp
divb
ljmp
or
jne
lods
sub
outsb
ljmp
cmp
dec
fwait
xor
out
movl
ljmp
arpl
arpl
clc
test
mov
shll
dec
rclb
lds
mov
cmc
enter
cld
pop
xchg
jecxz
xor
mov
inc
adc
sahf
roll
rol
repz
cmc
in
jno
mov
sbb
push
stos
ret
xchg
imul
cmpsb
jb
pop
std
insb
insb
stc
push
mov
mov
cmpsl
shll
cmp
testb
loop
jnp
mov
and
push
lods
mov
sbb
inc
adc
mov
mov
jo
sti
pop
mov
mov
lahf
xlat
adc
push
fwait
rcll
add
nop
in
sbb
loope
dec
or
mov
scas
pop
ret
inc
adc
stos
pop
std
test
imul
mov
xor
lcall
mov
and
mov
xchg
rclb
cmp
int
pusha
shrl
mov
adc
aaa
adc
scas
lock
cmpps
xor
pop
push
push
cmc
nop
repnz
ljmp
lock
outsl
jmp
hlt
cmpsb
push
add
ljmp
addb
stc
fidivs
rol
adc
jl
jmp
jge
sbb
fcomps
add
push
dec
pop
or
pop
cld
sub
out
loopne
jno
adc
jecxz
mov
push
test
mov
dec
or
mov
shrl
icebp
popw
jns
mov
dec
dec
push
sub
xchg
leave
cmp
push
sbb
mov
dec
imul
addr16
jno
push
jp
or
fadd
xchg
mov
dec
or
mov
shrb
gs
jne
mov
dec
dec
push
sub
xchg
int3
cmp
push
adc
push
lcall
icebp
pop
mov
scas
sarl
pop
add
push
push
into
xchg
jl
or
push
outsb
push
testl
adc
jae
lods
xor
fs
mov
adc
jo
inc
outsb
repnz
adc
adc
mov
nop
push
cmp
bound
ficoms
mov
or
pop
xorb
mov
test
negl
sub
lahf
fisubrl
dec
adc
setp
pop
mov
gs
iret
popl
mov
cwtl
pop
mov
fdivs
stos
enter
fidivrl
scas
xor
lret
mov
adc
gs
pop
iret
lea
or
idiv
add
or
push
jl
sbb
mov
inc
mov
mov
movsl
pop
cld
xchg
jmp
hlt
loopne
dec
adc
sbb
and
data16
cmp
repnz
adc
cmc
push
bnd
call
add
fistpl
orb
js
in
mov
les
push
and
push
mov
cwtl
mov
pop
fcompl
stc
pop
outsb
jns
sub
call
bound
movsl
xor
mov
mov
xchg
inc
outsl
sbb
jg
out
dec
xchg
aam
mov
mov
add
pop
clc
iret
jl
push
out
les
adc
adc
decb
mov
add
pop
repnz
inc
or
ds
cmp
lret
lods
out
push
mov
cmpsl
icebp
arpl
pop
pop
cli
adc
neg
dec
popf
cmp
add
jmp
and
adc
jnp
leave
mov
sbb
mov
insl
mov
scas
rolb
push
push
lret
into
or
shll
and
rorl
call
insb
jb
dec
adc
das
mov
jno
call
dec
adc
jp
dec
or
movsl
cmp
imul
lahf
cmp
std
gs
stos
cmp
jecxz
mov
dec
push
xchg
push
lds
mov
cmp
add
inc
mov
cmpsl
pop
cld
inc
or
jmp
xlat
test
jecxz
ret
jmp
sbb
ljmp
stos
sub
adc
aam
lcall
loopne
mov
pop
jmp
jnp
ja
sub
insb
mov
mov
push
xchg
cmp
ja
mov
repz
add
jns
pop
imul
push
sbb
test
int
hlt
pop
adc
sti
addr16
sub
incl
xchg
jnp
out
mov
rorl
hlt
dec
cwtl
xchg
inc
mov
mov
mov
dec
adc
push
cmp
gs
movsb
pop
popa
out
in
adcl
cli
sbb
jae
out
ljmp
insb
add
fmuls
shll
pop
adc
lods
icebp
dec
inc
or
mov
popa
out
push
xchg
mov
cmp
or
pusha
jle
popf
movb
ret
into
lock
pop
fsub
iret
cld
rsm
sub
xlat
xchg
shll
fadds
test
adc
dec
xchg
mull
movsb
xor
jnp
or
movsl
bound
stos
mov
xchg
and
mov
mov
movsb
das
icebp
pop
sub
loop
sbb
sub
xor
rolb
loopne
popa
adc
call
mov
inc
add
dec
imul
aas
mov
pop
icebp
xor
out
out
and
sbbb
xor
insl
pop
orb
inc
adc
jl
test
lcall
in
jl
cmp
sub
xchg
mov
xchg
inc
and
add
ja
repnz
popf
xor
je
cmpsl
movsl
mov
push
mov
rclb
pop
sub
orb
faddl
lret
or
das
mov
pop
pusha
call
xlat
mov
cmp
jo
push
cld
and
lds
movsl
xchg
mov
mov
aad
imul
add
and
dec
mov
push
std
inc
jns
sbb
xchg
clc
pusha
inc
dec
adc
insb
dec
movsb
sub
jg
hlt
clc
and
lds
jmp
xchg
push
inc
mov
test
push
es
mov
cli
sub
jl
in
jo
push
pop
int3
add
sub
xchg
stc
push
ret
in
xchg
mov
hlt
push
sub
mov
pop
mov
adc
jns
pop
jnp
mov
xor
in
ret
mov
aam
jo
sub
mov
adc
iret
cmpsb
inc
or
sbb
fwait
aas
jle
or
aam
xchg
shlb
test
xchg
aas
in
pop
in
inc
icebp
push
add
mov
out
aad
es
inc
or
insb
sbbl
loope
and
and
push
lahf
xchg
aas
clc
nop
sub
orb
insl
add
loope
xor
mov
cwtl
aas
push
js
adc
pop
lret
push
jge
jp
add
out
push
mov
mov
inc
lcall
sub
cld
bound
mov
push
sarb
xchg
fldenv
pop
std
mov
movsb
fnstcw
repnz
scas
pop
ret
xor
roll
pop
movsb
push
mov
pop
push
cmpsl
pop
aad
mov
xor
in
loopne
icebp
xchg
aas
adc
and
outsl
je
lea
cwtl
or
std
pop
dec
pop
mov
jg
ds
mov
out
mov
cwtl
sub
aas
cwtl
aas
repz
data16
sub
push
pop
or
push
jl
sahf
sub
mov
mov
decl
adc
mov
das
cmpsb
sahf
cmp
into
jge
add
jns
and
xchg
jmp
xor
xchg
ds
es
xchg
jge
cmc
pop
imulb
dec
es
sbb
pop
clc
subl
out
push
out
repz
or
ja
lret
mov
jge
clc
xchg
xchg
and
sbb
fs
xor
ja
push
cmc
push
cwtl
inc
dec
out
sub
popf
push
sarl
dec
push
lret
lcall
movsl
lea
test
jne
dec
ss
in
inc
adc
pop
cld
daa
push
clc
pop
and
or
aam
in
insl
or
ljmp
sbb
cmp
jo
pop
xor
int
cmp
mov
add
push
cmp
mov
lods
int
cmpsb
dec
mov
or
das
mov
dec
hlt
pop
in
aaa
mov
cld
loopne
clc
stc
gs
lock
aas
or
jns
and
dec
lods
jnp
mov
pop
cli
adc
add
loope
inc
adc
push
mov
add
icebp
fwait
jle
xor
js
pop
push
sub
test
inc
dec
aad
test
adc
cmp
add
mov
stos
jp
int
jns
sbb
cmpsb
fiaddl
push
xchg
dec
sbb
cwtl
in
sahf
pusha
out
pop
imulb
sbb
cmpsl
jne
dec
xchg
mov
push
nop
sub
sahf
int
add
aas
adc
mov
xor
dec
push
repnz
cli
xchg
out
imul
sub
ret
mov
sbb
dec
in
int3
add
xchg
add
adcl
popa
push
add
xlat
adcb
cmc
xchg
mov
push
das
sub
pop
push
inc
test
call
aam
xor
xchg
push
int3
xchg
es
fiaddl
ret
mov
outsl
out
or
movsb
xor
mov
add
xchg
push
add
aas
mov
pop
push
push
leave
push
jbe
fadds
movsl
xor
inc
adc
aad
pop
cwtl
and
aam
xor
dec
cmpsl
loop
add
and
popl
cmp
jnp
daa
and
jl
lds
and
data16
daa
cmp
jg
hlt
pop
fsubrl
xchg
xchg
or
sahf
adc
mov
cld
dec
ljmp
jge
cmp
lds
mov
mov
lds
fdivl
pop
in
sahf
cmp
add
jns
repnz
subl
cmp
mov
push
xchg
mov
imull
pop
cmp
xchg
lock
orl
test
add
sbb
cmp
stc
scas
sub
cmp
rorl
enter
and
push
das
mov
add
test
mov
sbb
add
lret
pop
push
jecxz
mov
out
jnp
fldl
xchg
leave
hlt
fs
cmp
xor
pop
stc
cmc
scas
stos
daa
leave
lock
aaa
stos
adc
jno
mov
adc
negl
fnstcw
push
cld
pop
or
pop
mov
out
nop
jle
fiadds
dec
push
xchg
adc
movsl
or
or
and
jnp
xor
shlb
lods
les
jns
pop
push
clc
ja
sarb
adc
and
loope
cmp
in
jo
or
xorb
inc
push
mov
lods
inc
or
mov
aaa
dec
mov
push
push
push
inc
adc
mov
popf
and
fwait
cmp
cmp
clc
divl
cmp
stos
daa
out
jns
dec
std
push
add
cmp
and
int
cmp
inc
addr16
mov
xor
sarl
and
sahf
ffreep
movsl
sub
cmovae
enter
jmp
into
xchg
inc
stc
mov
and
push
xchg
adc
cmpsb
push
xchg
cmp
sub
outsb
sub
sbb
xchg
push
mov
in
movsb
scas
inc
adc
mov
and
cmpsl
xor
sti
nop
inc
out
nop
inc
or
sahf
cmp
push
cmpsl
xor
sbb
test
xchg
fwait
inc
sbb
imul
xchg
push
aad
jmp
mov
hlt
mov
mov
mov
xchg
inc
mov
scas
sub
stos
or
mov
mov
inc
adc
outsl
lods
daa
sub
pop
mov
mov
xor
mov
movsb
lea
jle
hlt
lock
js
sub
sbb
fisttps
push
mov
cs
movsl
scas
xor
or
or
mov
cmp
and
outsb
ljmp
in
push
addr16
xchg
jnp
lret
stc
sar
pop
popf
in
aad
shrl
mov
sub
fnstenv
fs
xlat
data16
cmp
jns
or
int3
mov
mov
int
ret
dec
xchg
add
lcall
cli
sbb
inc
push
add
js
roll
dec
push
in
xchg
cmp
fwait
mov
int3
daa
pop
icebp
pop
in
js
sbb
pop
add
shll
mov
ljmp
ljmp
pop
add
test
filds
push
jge
rcll
movb
add
push
out
outsl
mov
cmp
push
lret
mov
insl
adc
ja
jno
mov
ljmp
test
mov
xchg
pushf
pop
pop
pop
cld
xchg
xor
xor
mov
mov
mov
imul
sub
mov
rolb
sbb
dec
fcomps
xchg
pop
mov
cmp
cmpsl
sti
bound
mov
repz
insb
hlt
hlt
mov
or
imul
mov
jp
pop
sub
stos
popa
ror
mov
stos
hlt
pop
pop
mov
mov
sub
cmp
xchg
rcll
rcll
outsl
pushf
sbb
push
loope
nop
inc
out
test
add
fdivs
lahf
xchg
leave
mov
pop
iret
into
mov
push
add
scas
xchg
inc
rol
rolb
and
cmp
nop
ljmp
pop
lock
int
out
ret
xchg
aas
jl
cmp
mov
sub
cwtl
test
stos
cld
pop
fwait
mov
sahf
out
or
pop
adc
je
pop
insl
aad
mov
mov
aam
cmp
jne
inc
push
push
addr16
adc
aam
adc
push
stos
jbe
and
into
xchg
pop
cwtl
sarl
mov
scas
mov
test
outsl
icebp
fistps
int
or
mov
pop
out
insl
test
push
aad
fmulp
mov
cltd
push
int
add
fcomps
nop
aas
sub
dec
or
pop
clc
push
xchg
or
lret
pop
adc
dec
dec
or
cld
or
cmp
es
in
xchg
jle
push
pop
int
stos
aad
xchg
aas
adc
mov
cmpsl
fidivrl
pop
sub
or
and
push
bswap
sbbl
xchg
loopne
imul
inc
adc
in
mov
mov
dec
ja
lret
mov
lods
mov
ficomps
xchg
ret
push
inc
sub
mov
xor
jmp
stc
inc
pop
and
sbb
out
lcall
les
jle
cmp
inc
das
jl
mov
mov
out
insb
fs
jbe
orl
bound
mov
enter
aad
inc
add
insb
scas
fs
fimuls
xor
lret
cmc
jecxz
cmpsb
sbb
test
cmp
mov
inc
mov
mov
xchg
fstl
push
jno
mov
jl
xor
mov
scas
inc
aam
test
pushf
jp
into
push
negb
mov
mov
mov
stos
push
testl
popf
inc
and
loope
xor
cmp
inc
pop
xchg
xchg
ret
iret
addr16
sbb
xchg
test
pop
pop
fists
lcall
or
sub
lea
pop
cwtl
cmp
int
rcl
and
les
xor
xchg
inc
pop
sub
mov
cli
test
mov
loope
inc
xor
cmc
xchg
jns
leave
sub
mov
shll
or
out
adc
push
hlt
xchg
inc
mov
test
push
fisubrl
mov
xor
sahf
pop
mov
xor
cmp
outsl
and
shrb
scas
xor
jnp
testb
sbb
push
sarl
jns
jae,pn
out
cltd
popa
leave
xchg
jb
pop
add
into
mov
insb
pop
add
mov
mov
sbb
shlb
notb
add
sbb
xor
out
dec
push
push
fdivs
xchg
test
xor
or
pop
scas
sarb
test
jg
push
and
dec
mov
divl
mov
cmc
jecxz
sbb
fiadds
dec
mov
mov
and
mov
in
imul
cmpsl
xor
push
test
or
jmp
push
xor
xchg
inc
sub
push
push
out
sbb
sbb
jle
mov
pop
rcrl
push
mov
out
lret
sar
cwtl
inc
mov
stos
les
or
mov
negb
xor
and
mov
jp
xor
jle
mov
mov
xor
pop
mov
aad
fdivs
clc
cwtl
out
inc
adc
sahf
aaa
jo
adcb
dec
mov
adc
outsb
inc
jg
sub
add
xorl
ret
or
ss
cmp
ret
lcall
and
or
cmp
sub
push
mov
xchg
into
in
imul
and
xchg
imul
roll
jg
out
jo
push
jecxz
decl
shr
lret
test
fstpt
mov
and
xchg
inc
sbb
mov
mov
pop
cli
add
fwait
cmp
cwtl
cmp
popf
cmp
push
adc
addl
call
xchg
mov
outsb
out
stos
and
pusha
pushf
or
xor
jg
cmp
and
mov
mov
mov
mov
inc
mov
mov
loopne
ds
jae
movsb
push
bound
addb
fwait
and
pop
test
inc
stc
out
mov
out
clc
arpl
or
jbe
cs
pop
outsl
cmp
ljmp
push
ret
pop
push
sub
cmc
push
adc
inc
or
dec
and
loopne
popa
out
insb
imull
mov
jl
std
cmp
mov
mov
or
or
add
pop
adc
mov
jl
call
rcrl
push
std
xchg
ret
lock
insb
push
jb
hlt
jne
mov
mov
cmpsl
outsl
ljmp
xor
fwait
cmpb
mov
mov
sbb
xor
and
sti
pop
cmp
and
push
rcrl
and
in
jle
mov
in
je
mov
dec
cmovbe
icebp
pop
push
jbe
mov
lods
addr16
dec
jnp
jecxz
popf
jbe
xor
in
movsb
and
cmpsb
mov
flds
cmp
jge
inc
mov
jmp
into
mov
arpl
out
jo
inc
adc
mov
movsl
mull
and
iret
popa
add
jg
or
jle
push
push
xchg
inc
xchg
mov
mov
and
push
out
sbb
repnz
adc
jge
pop
dec
jne
roll
push
repnz
jp
out
cmp
into
push
pop
push
pop
xlat
jge
and
test
mov
lret
repnz
push
insb
add
addb
fwait
scas
mov
add
sbb
pusha
dec
sbb
insb
js
ds
jge
or
xor
scas
mov
lods
cwtl
aaa
loopne
test
stc
lds
add
dec
or
scas
bswap
aam
je
rorb
jp
adc
dec
mov
jp
sub
rolb
addr16
test
jge
cmp
ror
mov
xlat
xorb
movsb
xor
loopne
jbe
xor
enter
xchg
add
push
push
sti
pop
sub
repnz
sub
mov
cmp
flds
mov
mov
xor
mov
push
imul
mov
ja
aas
in
aad
rclb
hlt
cli
pop
aad
mov
jp
sbb
pop
add
fadds
mov
scas
push
testl
fiaddl
xor
adc
pushf
insb
lea
ret
icebp
jg
inc
mov
push
pop
mov
dec
push
in
sbb
jb
xor
orl
test
push
pop
add
aaa
cwtl
test
lods
xor
mov
orl
nop
sbb
rclb
push
jb
mov
stos
gs
icebp
xchg
mov
orb
mov
sbb
fldl
xchg
mov
sahf
mov
mov
sub
sub
jg
inc
orb
mov
sbb
lcall
xor
sbb
jo
jno
aas
pop
mov
fdiv
mov
add
pop
pop
pop
cwtl
cmp
dec
pop
xchg
add
imul
rolb
cmp
lret
and
js
adcl
adc
mov
push
add
leave
or
lods
pop
dec
in
mov
and
mov
lret
cld
mov
xchg
ja
cmp
sbb
orb
iret
rolb
sbb
and
push
dec
cmp
pop
jns
mov
int
adc
sub
ret
xor
pop
add
sbb
dec
popf
aaa
jne
push
add
push
xor
push
pop
xacquire
xchg
mov
dec
adc
stos
add
push
sarl
out
aad
popf
pusha
fwait
inc
or
fisubrl
orl
repnz
hlt
rcrb
jecxz
pop
adc
inc
or
pop
es
xchg
and
pop
gs
lock
push
pop
lock
ror
pop
add
daa
mov
inc
in
jge
push
roll
in
fists
or
subb
rcr
lock
inc
dec
psubusw
xor
cwtl
cmp
lods
sub
fs
mov
cmp
test
mov
mov
out
xlat
outsb
and
mov
xor
cltd
mov
repz
mov
xor
push
push
push
mov
cmp
jne
jecxz
sar
bound
loopne
sarb
mov
or
mov
jg
mov
movsl
ficoms
add
pop
push
aad
push
inc
pop
cld
inc
nop
xor
push
je
xchg
pop
mov
xchg
stos
outsl
jmp
fcoml
pop
out
add
ds
mov
pop
scas
inc
push
jl
push
arpl
lret
or
adc
cmc
pop
into
shrb
lods
vpcmpeqd
imul
sbb
mov
pop
ljmp
add
and
mov
gs
cmp
stos
xor
rolb
lret
adc
cmp
xor
xor
pop
add
ss
adc
stos
fs
fnstenv
mov
mov
ss
jns
iret
lea
arpl
mov
cmpsl
dec
or
xor
aam
add
ss
jo
mov
in
je
fidivl
cwtl
sub
fldl
negb
inc
jae
and
xor
mov
mov
mov
dec
sub
mov
xchg
mov
repz
ljmp
mov
lret
jecxz
mov
out
insb
aam
fidivrl
movaps
push
das
adc
data16
pop
xor
mov
fiaddl
push
jo
fists
in
or
mov
lcall
mov
out
and
lock
push
cmp
cmp
fidivl
loope
add
add
rorb
push
sbb
mov
inc
aas
pushf
ss
mulb
cs
mov
mov
mov
ficoml
sbb
add
popa
loope
xchg
inc
jl
mov
pop
and
pop
cld
stc
push
mov
shl
bound
out
fdivl
jle
add
cmp
dec
or
push
and
loopne
push
mov
and
jg
inc
or
in
sbb
cmp
jae
mov
mov
lods
rorl
mov
pop
iret
mov
lcall
lock
je
pmullw
data16
adc
int3
xchg
repnz
pusha
jmp
out
push
nop
cmc
popf
inc
jge
lock
pshufw
fs
call
push
test
add
or
adc
into
inc
popa
icebp
sbb
mov
repnz
rcr
or
mov
mov
pop
movb
xor
and
ror
xlat
insl
repnz
xchg
and
push
add
push
mov
ja
js
lods
stc
mov
hlt
pop
push
mov
dec
out
mov
je
clc
lret
mov
pop
fdivs
out
cltd
in
rol
shl
adcl
mov
add
or
lret
mov
push
cmpsb
xor
push
jb
insb
orl
mov
testl
xor
enter
inc
push
add
xlat
int3
in
or
fwait
aaa
les
in
mov
aas
lcall
movsb
das
adc
xchg
aas
mov
inc
adc
mov
loop
aaa
je
movsb
hlt
dec
or
scas
cmp
out
xor
inc
or
and
fidivs
loop
test
jg
xchg
mov
push
clc
mov
mov
dec
or
mov
push
pop
cld
mov
test
out
cmp
jp
inc
call
mov
out
xchg
inc
mov
mov
in
dec
or
test
fs
jmp
xor
pushf
and
test
lret
sub
je
xor
jo
test
mov
dec
adc
mov
lods
iret
mov
roll
and
inc
outsb
mov
out
std
mov
test
arpl
sbb
mov
or
cmp
rol
xchg
das
mov
adc
int
mov
pusha
imull
in
call
popf
inc
push
jb
xchg
int3
andl
push
mov
addr16
ret
clc
ljmp
dec
in
jae
jmp
sti
scas
rcr
xorl
outsb
imul
stc
popa
pop
ss
mov
xor
data16
stos
and
push
mov
out
jae
imul
imul
test
or
shlb
lods
push
sbb
out
lds
and
push
hlt
mov
mov
mov
cwtl
hlt
lock
inc
int3
add
lea
cmc
pop
fsubp
xchg
add
mov
rcll
stos
adc
loop
int
insb
jmp
sbb
dec
adc
shrl
fistpll
ja
les
cmp
nop
pop
jmp
fxch
pop
mov
cmp
testl
cmp
mov
jno
ret
int
imul
rcrb
leave
xchg
aaa
dec
icebp
test
cltd
jae
lcall
and
cmp
andnps
lcall
jns
and
rorl
shll
cmp
push
lret
mov
inc
adc
out
insb
pop
test
jmp
mov
imul
test
mov
inc
pop
add
in
outsb
add
int3
stc
jae
pop
loope
mov
push
xor
dec
pop
pop
sub
jl
sbbl
jl
xchg
inc
jecxz
mov
lds
xchg
mov
rcrl
aaa
cmpsl
push
cmp
adc
mov
pop
sub
ret
fbld
fcomip
les
subb
mov
sub
xchg
adc
push
mov
pop
enter
lock
mov
aas
aas
filds
pop
push
xchg
test
sbb
xlat
rcrl
shrl
daa
mov
out
jl
fidivl
popf
jbe
iret
int
push
xchg
sub
and
scas
push
inc
mov
jne
xor
addr16
imul
out
test
sbb
dec
cmp
mov
popf
mov
sarl
dec
fists
adc
fs
xor
arpl
adcb
or
or
sub
pop
pop
inc
fisttpll
scas
fs
loopne
cld
xchg
add
sbbl
and
mov
push
mov
iret
cmpsb
test
push
fcmovb
push
in
clc
sti
fnsave
jne
dec
dec
sti
xchg
subb
lahf
mov
mov
repnz
into
and
shlb
inc
push
in
jbe
out
test
mov
xchg
sub
scas
inc
outsl
pop
dec
loopne
nop
int
ret
loop
jmp
adc
or
mov
ret
fiaddl
or
loopne
xor
xchg
cmpl
mov
sbb
aad
lahf
ss
cmp
sub
mov
out
jp
fwait
jbe
int
stc
nop
out
xchg
sub
and
scas
push
inc
mov
jae
ss
xchg
shlb
les
out
test
pop
jae
dec
cmp
imul
pushf
mov
sarl
dec
fisttps
adc
gs
xor
popa
fs
adcl
or
pop
or
sarb
rclb
inc
fimuls
scas
gs
cld
xchg
add
test
xor
sbb
xchg
iret
movsb
cmpsl
rclb
push
in
idiv
fidivs
sbb
dec
dec
cld
xchg
jg
xchg
sub
mov
cmp
and
shlb
inc
push
in
jne
out
test
mov
xchg
sub
or
ret
mov
outsb
pop
dec
loopne
into
shrl
adcl
sbb
push
movsb
cmp
test
pop
fcmovu
inc
fisttpll
cld
loopne
cs
sti
pop
dec
xchg
cmpl
mov
shll
shll
and
pop
out
js
fdivl
cltd
jbe
lret
lret
cli
xchg
std
in
xchg
sub
pop
sbb
jno
aaa
into
mov
ret
push
in
hlt
in
test
push
je
dec
cmp
imul
sarl
dec
fisttps
cs
pop
arpl
test
mov
mov
add
rclb
dec
fisttps
data16
fmulp
cld
xchg
incl
push
push
mov
shlb
les
cmc
clc
fidivs
pop
jbe
dec
dec
cld
xchg
jge
xchg
sub
mov
out
lock
and
shrl
inc
push
in
jae
out
xchg
mov
movsb
call
or
cmp
mov
insb
pop
dec
loope
into
gs
loopne
adcl
xchg
xor
or
xchg
ret
pop
inc
fisttpll
sti
loope
sub
dec
call
scas
mov
mov
shlb
inc
pop
lock
fdivl
cwtl
ja
lret
xchg
sti
jmp
sub
sbb
mov
jo
aaa
into
mov
rcll
in
xchg
adc
or
or
sub
mov
dec
loopne
push
iret
inc
sub
in
test
mov
mov
add
sub
cmp
dec
fisttps
stos
data16
fmul
std
xchg
std
std
test
das
pop
sbb
push
push
mov
shll
ret
pop
out
hlt
neg
jne
push
ja
dec
dec
cld
xchg
jnp
xchg
sub
pushf
sbb
out
out
cmp
pop
adc
imul
lock
mov
movsl
out
xchg
sub
or
inc
push
dec
loop
mov
gs
fsubrp
adcl
mov
xor
or
xchg
les
aad
fldl
sti
loop
sub
dec
add
lods
mov
mov
shll
and
icebp
jne
fnsave
js
enter
stc
jmp
sbb
outsb
insl
cmp
sahf
shrb
mov
lock
jne
inc
xor
xchg
sub
mov
dec
loope
or
sub
pop
pop
out
test
mov
mov
add
ret
push
dec
loopne
jbe
ja
test
xchg
sti
sti
test
dec
mov
shlb
rcrl
hlt
fbstp
adc
cmovbe
xchg
jns
xchg
sub
lret
mov
cmp
sbb
ds
out
outsl
popa
icebp
mov
mov
cmpsb
in
xchg
sub
ss
push
mov
mov
add
fsubr
test
decl
mov
test
les
aam
fiadds
daa
gs
pop
dec
add
stos
sahf
push
mov
int3
mov
shll
and
push
push
inc
pop
icebp
jae
fidivs
xchg
js
mov
xchg
clc
out
sub
dec
cmp
popf
shrb
mov
lock
adc
inc
xor
movsl
fs
sub
mov
dec
jmp
or
push
pop
pop
out
xchg
mov
movsb
loop
movsb
cmp
add
ret
xor
push
dec
loope
je
ja
test
fld
xchg
stc
cli
xchg
dec
dec
movsb
cmp
cmp
sahf
mov
pop
lock
and
inc
xchg
js
xchg
sub
lret
dec
ljmp
push
cmp
icebp
mov
mov
cmpsb
jecxz
xchg
sub
mov
addr16
dec
jecxz
mov
addr16
fucomi
test
das
or
pusha
push
cmpsb
cmp
mov
les
rorl
add
loop
sub
data16
push
dec
add
stos
pushf
push
mov
lret
mov
rcrl
pop
rcrl
pop
icebp
jno
fbstp
xchg
js
mul
xchg
sub
dec
cmp
pushf
mov
imul
adc
inc
xor
movsl
bound
sub
subl
mov
dec
call
or
imul
lock
mov
movsl
loope
movsb
cmp
add
pop
push
push
dec
loop
jb
js
cmpsb
imul
idiv
xchg
sub
push
mov
dec
movsl
cmp
imul
lahf
ret
pop
sarl
loope
and
jns
inc
inc
call
xchg
cwtl
sbb
dec
call
or
imul
lock
pop
repnz
mov
cmpsl
loope
xchg
sub
add
xor
mov
push
dec
in
xchg
push
out
xchg
mov
sub
dec
cmpsl
addb
pop
rcl
dec
loopne
cmc
jecxz
daa
and
add
test
lret
cld
in
cmp
pop
push
ds
repnz
jno
ja
nop
jns
ret
xchg
mul
xchg
cs
ss
push
mov
push
mov
icebp
mov
vmread
inc
das
pusha
bound
les
rorl
add
shrl
and
icebp
mov
scas
loopne
movsl
cmp
add
lds
push
les
push
dec
jecxz
jno
jns
movsl
push
xlat
les
xchg
cmc
clc
mov
sub
pop
mov
dec
cmpsb
cmp
lcall
repnz
icebp
loop
and
jp
inc
inc
add
xchg
xchg
push
mov
mov
dec
out
cmp
sbb
aad
cmp
pop
icebp
imul
lea
test
fists
xor
mov
fs
dec
in
test
imul
stc
mov
sub
movsl
pop
dec
test
jle
sub
scas
lahf
pop
rcl
dec
loope
repz
and
inc
add
cmpsl
cwtl
and
cli
ljmp
dec
cmp
rep
outsl
loope
mov
ret
hlt
loope
das
adc
push
mov
xor
dec
pushw
cltd
xchg
imul
repnz
adc
xchg
jg
lds
rorl
pop
aam
cmp
push
push
pop
repnz
adc
sti
ljmp
lds
sbb
dec
jecxz
jo
jp
mov
add
sub
and
jnp
ds
pushf
les
mov
loop
and
add
xchg
xchg
push
mov
mov
dec
in
cmp
pop
pop
insl
cmp
pop
icebp
imul
bsf
xchg
sub
xor
mov
bound
out
adc
mov
insl
add
lock
clc
mov
sub
push
movsl
pop
dec
test
ret
lods
sahf
pop
ror
dec
loope
icebp
in
and
imul
jne
xchg
cmpsb
xchg
and
stc
call
les
cmp
imul
mov
roll
repnz
mov
xor
aam
test
insb
mov
pop
bnd
or
cmp
pop
cwtl
das
nop
jge
scas
mov
dec
jecxz
dec
in
add
imul
pop
repz
stos
adc
stc
std
das
cs
pop
dec
dec
dec
in
outsb
in
mov
roll
repnz
mov
es
mov
jns
aas
xchg
lcall
jmp
or
inc
add
nop
xchg
pop
mov
mov
dec
jecxz
cmp
outsb
aaa
ss
repnz
cmc
mov
stos
adc
or
das
mov
popa
push
dec
out
adc
mov
insl
add
aad
mov
testb
pop
dec
test
les
dec
loop
out
in
and
push
push
inc
add
movsl
xchg
and
clc
out
pop
sbb
pop
dec
cmp
imul
adc
cltd
xor
adc
mov
xor
aad
adc
mov
pop
repz
or
cmp
adc
jnp
lods
mov
dec
loop
dec
in
add
insl
xor
push
hlt
mov
test
test
idiv
xor
sub
pop
dec
dec
dec
in
insb
in
sahf
lahf
insb
add
mov
mov
and
and
ja
inc
xlat
xchg
cwtl
pop
lret
cmc
out
in
sbb
add
mov
mov
aad
add
outsl
xor
push
testb
test
cwtl
das
or
xor
sub
dec
push
out
adc
mov
outsb
add
add
daa
adc
jns
lds
lret
dec
jecxz
in
out
pop
push
imul
inc
add
jno
mov
mov
les
xlat
adc
ss
cmc
addr16
popf
mov
mov
lcall
cs
xchg
adc
hlt
out
hlt
mov
or
daa
adc
lea
stos
scas
mov
in
add
outsb
xor
cmc
mov
cmpsl
adc
cmc
stc
xor
sub
enter
dec
out
push
jge
popf
insl
add
mov
mov
and
and
jne
inc
fcoms
mov
mul
jmp
jle
cmp
lcall
and
fnstsw
aas
adc
fnstenv
xor
arpl
xchg
lods
fcom
cltd
xor
cli
xor
sub
mov
pop
dec
push
call
mov
outsl
push
rcl
repz
repnz
and
stos
inc
ja
das
test
leave
pusha
lret
in
jmp
jle
sbb
add
add
and
ret
hlt
loop
fcoms
push
pop
dec
xor
mulb
in
fwait
xchg
mov
fstps
mov
pop
popa
inc
xlat
xchg
jg
outsb
mov
pop
cmc
in
cmc
mov
jge
cmp
fwait
xor
lods
mov
out
call
outsb
xor
add
test
and
ret
hlt
divl
enter
pusha
dec
dec
dec
out
imul
add
mov
mov
and
and
inc
inc
test
fsts
mov
mul
out
jl
push
jg
cmp
add
mov
push
aas
ltr
jno
xor
popa
push
clc
popl
cmpsb
push
lods
xlat
aad
xor
stc
xor
sub
mov
pop
dec
push
jmp
scas
popf
jo
iret
iret
repz
icebp
mov
push
inc
lods
inc
jbe
das
cmpsb
xchg
lret
dec
in
ljmp
dec
cmp
mov
lahf
and
rol
aas
repnz
fsts
adc
pop
inc
xor
fs
cltd
test
mov
add
or
mov
xlat
nop
jle
outsl
mov
pop
cmc
loop
testb
and
stos
push
push
fwait
xor
stos
mov
out
std
xlat
outsb
das
sbb
dec
push
cmc
mov
mov
stos
inc
repz
xor
es
dec
out
push
insl
add
mov
mov
push
push
and
inc
jno
inc
ficoml
mov
clc
jecxz
in
pop
add
add
mov
mov
or
das
pop
hlt
pusha
push
clc
popl
push
lods
aam
xor
clc
xor
sub
mov
pop
dec
push
jmp
lods
pushf
jo
into
into
repz
lock
push
inc
lods
inc
jne
das
movsl
xchg
lret
dec
in
jmp
insb
add
push
popf
insl
insb
mov
sahf
mov
mov
loopne
fsts
adc
pop
inc
xor
arpl
jl
test
mov
add
or
mov
pop
pop
inc
xlat
jge
outsl
scas
mov
cmc
loope
testb
and
push
push
fwait
xor
test
push
out
cld
xlat
outsb
sbb
dec
dec
cmc
mov
mov
stos
inc
repnz
xor
and
inc
dec
out
addr16
add
mov
mov
sbb
ds
ficoml
mov
clc
loop
in
push
add
pop
ss
add
mov
mov
or
fidivl
cs
hlt
pop
push
clc
popl
movsb
push
lods
aad
cltd
xor
daa
mov
pop
dec
push
jmp
lods
fwait
jo
int
repz
out
mov
push
inc
lods
inc
jae
xor
movsb
xchg
lret
lds
mul
call
add
cmp
popf
imul
popf
mov
mov
fiadds
movhlps
pop
inc
xor
popa
gs
xchg
cmpb
mov
pushf
xor
or
mov
pop
pop
inc
fmuls
scas
pop
mul
into
testb
and
push
push
pushf
xor
test
push
fcmovb
push
out
sti
fsubrs
sbb
dec
dec
testb
mov
stos
inc
lock
and
lret
inc
push
out
gs
add
jmp
or
inc
outsl
pop
inc
fimull
scas
popa
clc
loopne
out
adc
ss
addr16
sahf
xor
mov
fiaddl
or
fidivl
sub
clc
popl
mov
lcall
es
jmp
stos
cltd
jo
lret
int3
hlt
mov
in
mov
push
aas
lods
inc
jno
xor
mov
les
cmc
in
jg
pop
outsb
add
imul
mov
out
faddl
or
cs
negl
out
xchg
cmpb
mov
pushf
call
or
cmp
mov
scas
pusha
neg
int3
testb
pop
adc
xor
jno
lret
mov
call
sub
jo
dec
dec
testl
sarb
lret
lret
bound
push
call
xchg
xchg
outsl
push
mov
sahf
out
lea
or
mov
insl
pop
inc
fisttpl
stc
fsubp
out
adc
sbbl
gs
lahf
test
mov
fmuls
cli
sub
pop
dec
stc
nop
jg
jge
scas
mov
fwait
xor
repz
push
push
inc
push
ljmp
jno
leave
lret
cld
ljmp
dec
cmp
xor
mov
ret
repz
adcb
pop
sahf
addr16
and
inc
in
fiaddl
or
lret
sub
clc
pop
call
push
mov
push
popf
out
popf
xor
or
push
push
pop
inc
fimull
lods
popa
clc
testl
dec
push
popf
xor
jo
lret
mov
ret
repz
jo
adc
testl
into
mov
xor
and
int3
arpl
push
call
xchg
xchg
outsl
push
lds
lea
or
mov
imul
mov
cli
fstp
out
adc
sbbl
fs
lahf
test
mov
fmuls
stc
sub
pop
dec
stc
nop
jle
jge
scas
lahf
pop
scas
ror
fwait
xor
repnz
push
push
inc
push
ljmp
jno
enter
sti
jmp
adc
dec
cmp
inc
outsb
outsl
xor
mov
rcll
loop
adcb
push
inc
xor
lea
xchg
inc
in
flds
or
lret
sub
pop
popa
call
push
scas
mov
popf
in
popf
xor
pop
and
push
push
pop
inc
fimull
stos
popa
clc
fmul
testl
dec
push
popf
xor
outsl
xor
mov
rcll
neg
jo
adc
or
testl
int
lods
inc
in
out
xor
pop
push
int3
arpl
push
call
xchg
xchg
outsl
push
les
and
pop
daa
mov
push
inc
fmull
stos
arpl
out
adc
sbbl
arpl
addl
inc
fadds
clc
sub
pop
dec
stc
nop
jge
jge
lods
sahf
pop
scas
iret
into
fwait
xor
icebp
xor
push
push
inc
push
ljmp
jno
enter
call
adc
dec
cmp
leave
lahf
mov
rol
out
loope
adcb
outsl
push
inc
xor
sahf
lea
xchg
inc
jmp
inc
fimull
or
popa
clc
pop
pusha
call
push
scas
mov
popf
in
popf
xor
push
and
push
push
pop
inc
fimull
stos
popa
pop
sub
aad
lcall
aam
js
xchg
fdivrs
ljmp
sbb
adc
push
dec
sub
and
adc
test
mov
cmp
jmp
pop
push
repz
fldt
push
sti
les
jecxz
imul
pop
dec
jp
out
out
ret
push
icebp
popf
push
mov
adc
inc
dec
sbb
test
dec
out
out
lret
xchg
xor
lret
push
push
out
dec
pop
jmp
pop
inc
repnz
dec
imul
fsubrs
daa
add
ss
scas
add
jmp
sbb
and
push
jmp
icebp
push
outsl
cmp
dec
cmp
mov
imul
push
rorl
dec
test
mov
mov
cmp
sub
add
mov
out
mov
cmpl
xor
mov
mov
stc
test
mov
fnsave
imul
or
xchg
in
jl
sub
adc
xor
scas
xchg
mov
xchg
or
jp
mov
dec
orl
sbb
pusha
push
or
xchg
test
je
fstpl
jae
mov
aam
pop
inc
call
aad
jge
cmc
dec
sub
cld
push
fwait
and
pop
jb
mov
jae
outsl
adcl
loopne
jge
xchg
cmp
scas
xchg
mov
sub
mov
xchg
lcall
popf
repnz
rolb
cmc
ds
inc
subb
ss
enter
cmpl
js
out
mov
jmp
lret
loop
movsl
fiadds
add
mov
jmp
mov
or
popa
cltd
push
push
xor
and
in
lret
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
pop
fidivl
stos
pusha
inc
insl
xor
popa
add
and
jmp
stos
gs
lea
out
jns
repnz
out
adc
push
or
in
cmpl
jl
inc
in
sbbb
outsb
xlat
xchg
in
or
or
daa
in
popa
push
arpl
sahf
imul
test
es
cld
dec
xor
jnp
mov
fisubrl
push
xchg
insb
sbb
mov
sub
and
jne
and
frstor
adc
cli
shl
cmpsb
and
fnstcw
fimull
lock
fimull
in
mov
jge
sbb
xchg
dec
mov
pop
and
mov
fmull
nop
sbb
arpl
fisttpll
push
loope
xchg
je
repz
in
cmp
test
mov
out
pop
fisubrs
or
rolb
sbb
cmp
ret
ds
insl
sarl
mov
cltd
stos
stos
shl
popf
mov
mov
in
jb
adc
mov
gs
mov
je
data16
xor
fimull
sub
inc
add
pop
xor
stos
inc
cmpb
jp
jg
and
nop
loop
addb
sti
adc
inc
adc
call
aas
sbb
mov
mov
cmp
arpl
mov
dec
in
mov
pusha
in
lret
sbb
fisubs
pop
pop
movsl
mov
fsubrl
or
push
scas
loopne
jbe
fcomps
push
mov
mov
mov
pop
pop
fists
in
dec
mov
in
fcmovnb
add
xchg
aad
jnp
xchg
cld
push
mov
lret
imul
fdivs
ljmp
out
bound
inc
mov
mov
mov
inc
stos
and
cwtl
loope
mov
ss
popa
adc
cmpsb
enter
pop
test
sbb
adc
movsb
imul
mov
xlat
fisubl
lea
mov
stc
mov
push
jecxz
push
mov
lock
inc
jl
dec
out
push
adc
shr
mov
call
and
jle
dec
add
pushf
sbb
and
nop
xor
int
out
xor
dec
pop
inc
push
inc
mov
iret
xor
xor
loop
test
jmp
xchg
popf
lods
pusha
repnz
loope
jae
fwait
inc
dec
stos
xor
sbb
stos
bound
ljmp
pop
ja
orb
mov
fdiv
int
je
data16
ljmp
pop
cmpsl
stos
ret
lahf
pop
mov
adc
in
dec
sub
cld
mov
mov
mov
sbb
xchg
dec
aas
js
push
call
loope
pop
ljmp
adc
fldl
fnstsw
cltd
movsl
inc
imul
pop
mov
jecxz
xchg
fldcw
imul
js
push
nop
cmp
sbb
or
scas
push
lods
repnz
jae
test
cmpsl
jnp
ja
mov
mov
mov
sub
dec
push
incl
pop
test
push
lods
stos
jp
jnp
jmp
and
jmp
fwait
ljmp
and
ret
sbb
mov
push
aam
jg
inc
sub
enter
outsl
sub
ss
dec
mov
call
call
dec
mov
les
inc
cmpsl
push
mov
pop
mov
shll
jnp
notl
stc
enter
or
push
lods
stos
adc
mov
aaa
out
adc
push
inc
int
xchg
aas
jnp
sti
xor
in
adc
xchg
adc
scas
xor
mov
nop
ja
pop
pop
pop
inc
jb
mov
cli
nop
jno
js
mov
dec
pop
call
xchg
inc
pop
push
shlb
xor
adc
and
add
imul
outsb
into
cmpsb
in
daa
inc
inc
xchg
jo
dec
push
pop
cmp
add
push
testb
xchg
pop
addr16
stos
dec
repz
push
dec
lods
push
or
negl
pop
pop
add
repz
dec
in
popf
cmc
sbb
cwtl
outsb
push
insb
pop
cmp
cmp
mov
sarl
fidivs
fdivl
xor
jmp
popf
idivl
fldl
cmp
imul
lds
mov
sub
in
mov
imul
lret
xchg
repnz
adc
cli
scas
enter
mov
imul
sub
icebp
jno
sbb
pop
js
adc
orl
xchg
push
lods
pop
jge
cld
loop
cltd
rclb
ja
stos
out
imul
pop
pusha
mov
loop
mov
cmpsb
movsl
sub
shlb
mov
stc
dec
rol
jnp
mov
insl
mov
jp
push
stc
mov
push
adc
clc
adc
pop
xor
push
cld
pop
js
push
jp
inc
test
push
js
lock
gs
push
clc
lret
mov
stos
ja
ljmp
and
and
jle
pushfw
mov
sbb
or
mov
xchg
push
mov
fwait
data16
push
push
out
push
push
and
push
cmp
pop
push
cwtl
cmp
mov
test
xchg
pop
jae
es
fnstcw
cmpl
sbbl
mov
jno
sub
clc
xchg
cmp
cmp
cmp
mov
mov
ret
sub
dec
cmpsb
dec
and
out
sub
loope
fsub
lods
xchg
push
in
pop
int3
out
mov
cmpsb
iret
scas
leave
add
push
mov
jo
cltd
in
fstps
addb
xchg
stc
jge
mov
or
cmc
imul
ljmp
cmp
rcrl
ljmp
sbb
add
sbb
dec
adc
and
push
fiadds
pop
push
sub
nop
pop
or
pusha
pop
aaa
cmpsl
sbb
inc
fstl
mov
mov
push
xor
inc
xchg
cmp
xchg
outsb
icebp
push
std
shrl
fsts
fwait
daa
and
add
xchg
mov
andb
das
jb
sbb
jb
sbb
jb
sbb
xor
xchg
iret
incl
jo
js
call
das
lahf
hlt
dec
jl
dec
ret
insb
dec
ss
sub
andl
pinsrw
dec
or
mov
sbb
jmp
cmpsl
jae
inc
inc
imul
loope
dec
jb
xchg
je
or
inc
mov
push
ljmp
push
sbb
cld
xor
mov
das
and
call
cmc
fcmovnb
iret
ss
pop
pop
cwtl
mov
xor
jge
sbb
xchg
test
ret
sarb
or
dec
ficompl
xor
pop
lret
mov
cmp
inc
jmp
add
sub
add
add
lods
xchg
xchg
fadds
xor
add
fs
jle
dec
cwtl
xchg
in
daa
ds
subb
add
xor
mov
dec
push
xor
movsb
scas
inc
push
push
lods
push
int3
imul
and
inc
adc
out
dec
lret
xchg
sub
ljmp
pusha
movsb
js
sti
inc
pop
mov
ret
sahf
mov
in
loopne
mov
sti
pusha
test
dec
mov
or
loope
dec
cmpsb
mull
push
xor
aaa
sub
jmp
ljmp
cmp
daa
ss
push
ds
in
jp
fcomp
and
jmp
loop
jle
xchg
leave
push
mov
adc
adc
es
cmpl
ret
icebp
jmp
xor
repz
lahf
mov
xchg
jge
jbe
lock
inc
fcoml
in
in
adc
dec
cmpsb
lods
mov
add
ret
jg
xor
lcall
int3
sarb
add
sub
push
movsl
inc
fdivs
pop
fsubl
mov
jns
cmpsb
sbb
jae
js
mov
jg
pop
les
mov
sub
loope
insb
dec
fnstenv
inc
out
mov
repnz
aam
insl
push
adc
jmp
sub
stos
popa
dec
daa
dec
out
jb
insb
pop
test
jmp
out
and
