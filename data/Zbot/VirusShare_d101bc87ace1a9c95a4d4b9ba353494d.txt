incl
or
js
cli
sub
les
jmp
je
mov
ret
and
leave
ret
pop
and
imul
pop
ret
adc
pop
pop
add
add
sti
std
mov
pop
ret
adc
adc
mov
out
das
sub
or
xchg
or
adc
sub
dec
or
dec
dec
outsl
filds
adc
adc
inc
adc
inc
call
adc
add
mov
inc
add
sub
adc
inc
mov
or
pop
mov
or
fdecstp
fdecstp
test
sbb
and
inc
or
fistl
das
inc
and
pop
xor
notl
or
dec
add
push
rcll
xlat
pop
ja
sbb
and
lods
or
inc
inc
jo
jbe
pop
imul
or
mov
test
pop
cmp
test
mov
xor
nop
insl
fidivl
dec
xor
mov
insb
imul
sub
adc
pop
adc
sub
xlat
pop
popa
xor
jae
outsb
call
pusha
adc
int
cmp
push
clc
in
stos
pusha
pop
jae
test
loope
sbb
push
imul
ret
xchg
shll
or
test
or
sub
jp
dec
addl
adc
add
decl
int
sbb
dec
lock
stos
lock
insb
adc
adc
cmp
push
dec
lahf
movaps
and
enter
adc
push
mov
lea
clc
jg
incl
xor
fs
add
mov
mov
sbb
cltd
ljmp
lods
std
in
decl
xor
imul
jns
add
and
push
and
test
cmp
inc
sub
shll
movsl
sbb
jns
lahf
sub
jmp
lcall
movsb
sbb
dec
stos
dec
add
test
xor
push
addb
lea
jge
and
add
push
mov
mov
push
add
or
daa
sbb
and
adc
nop
xor
ljmp
or
inc
int
stc
mov
xor
add
repnz
outsb
mov
mov
mov
xor
cmpb
mov
add
cmpsl
arpl
push
fldt
data16
in
mov
pusha
nop
aaa
xchg
scas
jp
mov
mov
pop
mov
sbb
push
popf
lea
dec
leave
add
cmp
jge
mov
dec
add
cltd
shll
or
mov
rorl
adc
jb
mov
mov
xor
in
jg
sbb
incl
int3
or
mov
sub
outsl
or
add
jle
sub
sbb
outsb
pusha
dec
cltd
push
sbb
jmp
bound
xorl
and
sub
lock
add
aas
mov
cmp
leave
mov
add
add
outsl
ljmp
or
push
rolb
test
and
nop
mov
lock
outsl
fbld
test
daa
sbbl
sbb
fisttps
push
in
and
mov
cmp
loopne
adc
lds
ret
mov
jp
add
lock
push
cmpb
push
xlat
adc
jne
or
call
fisubrs
and
inc
stos
adc
add
int
pop
repz
mov
sbb
lock
sub
inc
cmp
xor
incl
test
mov
adc
xor
mov
jmp
clc
cmc
loopne
and
sbb
jmp
test
mov
inc
test
and
lock
push
imul
push
mov
sbb
neg
icebp
lcall
std
mov
push
stc
or
xor
nop
mov
or
cli
sbb
add
cli
rolb
mov
adc
stos
insb
add
test
and
fildll
dec
jecxz
es
add
aam
and
imul
adc
fistps
or
mov
fdivs
mov
test
mov
lcall
les
sub
mov
out
pop
in
cld
mov
incb
leave
shlb
sub
add
pushf
das
fisubs
xor
sbb
inc
or
or
xchg
or
lock
dec
movnti
mov
xchg
or
and
mov
ljmp
sub
add
mov
or
sub
and
jg
or
push
add
cmp
cmp
movsb
add
push
ds
xor
or
sbb
pop
loop
xor
icebp
add
ljmp
out
dec
clc
ret
mov
es
pop
xor
ss
inc
adc
mulb
loopne
int
and
add
add
lods
bound
cmp
pop
aam
sahf
add
mov
and
add
ljmp
mov
iret
in
aam
scas
pop
popa
fdivrp
jg
xor
insb
xor
lcall
incl
cwtl
inc
jne
xchg
popf
pushf
pop
inc
jmp
and
and
adc
ud0
push
and
icebp
add
shrl
ficomps
in
in
in
add
neg
sbb
add
sbb
xor
outsl
ljmp
rolb
push
push
and
xchg
and
mov
decl
sbb
xlat
add
mov
and
push
xchg
clc
jecxz
leave
jge
pop
decl
jecxz
sbb
or
cmp
adc
jg
mov
and
pop
or
sbb
inc
and
fcomi
scas
sbb
leave
xor
mov
fbld
mov
insl
add
jo
das
jl
pushf
mov
inc
add
out
sub
call
filds
ja
adc
mov
xor
mov
xchg
in
incl
aas
xor
adc
and
mov
inc
sbb
mov
test
add
int
cld
or
inc
test
xchg
mov
pop
outsb
mov
jae
jnp
sbb
add
imul
xor
inc
add
call
sbb
add
cli
stos
cmc
cli
add
pop
xor
rcr
outsl
adc
mov
xchg
cltd
shll
mov
fisttps
stos
pop
add
sub
dec
imul
icebp
ret
dec
xchg
sbb
pushl
cmp
add
sarl
fsubl
jg
imulb
orps
and
sbb
sub
jmp
pushl
loope
sbb
es
dec
icebp
add
imul
xchg
push
jg
adc
and
loopne
sub
or
lock
mov
push
xchg
movb
das
mov
push
sub
adc
subl
cltd
add
popa
pop
int
adc
ret
adc
mov
and
and
xor
dec
jg
test
or
mov
mov
stos
pop
std
jg
das
xor
out
js
mov
shlb
and
or
shll
add
xor
adc
jns
das
gs
push
repz
adc
fnstcw
add
dec
or
out
inc
sub
and
add
pushl
jg
add
jb
push
ja
sbb
mov
adc
cmp
popf
jge
mov
mov
pop
leave
sub
cmp
mov
arpl
ds
mov
and
icebp
or
mov
in
sbb
cmp
outsb
shr
sbb
pushf
mov
adc
or
outsl
sahf
fnstenv
pop
aad
in
sub
dec
push
xor
or
lret
jge
add
pop
push
xchg
cmp
mov
sub
add
mov
insb
nop
in
int3
sarb
mov
fucomi
sbb
sbb
sub
aaa
enter
sarl
mov
xorl
jbe
jnp
fmuls
test
or
xor
fnstsw
mov
dec
gs
pop
test
lds
lods
push
pop
gs
adc
outsl
jmp
push
inc
sahf
sahf
sub
nop
insb
nop
outsl
jmp
mov
mov
sbb
lcall
test
aas
inc
add
mov
lret
data16
bound
and
movb
mov
js
lahf
repnz
xor
sahf
sub
push
jmp
push
xor
or
adc
mov
pop
movsb
xlat
inc
je
adc
and
jno
cli
xchg
sbb
or
or
test
mov
sbb
lahf
push
leave
into
lret
fistps
in
data16
adc
jl
sbb
in
inc
not
in
pop
addr16
rolb
inc
mov
add
xchg
ret
in
cmp
or
jnp
and
adc
mov
sahf
in
aaa
xor
push
mov
stc
testb
fwait
inc
and
add
mov
aas
mov
imul
and
fisttps
mov
insl
sub
lock
or
jo
imul
mov
cmp
test
inc
mov
inc
xchg
xor
adc
inc
push
jnp
sbb
loope
lods
xchg
or
insl
cmp
jnp
mov
push
pop
sbb
push
xchg
mov
frstor
adc
or
pushl
sbb
divl
lock
mov
add
movl
movsl
ljmp
and
mull
mov
neg
mov
mov
sbb
adc
dec
negl
neg
mov
fcmovu
adc
mov
mov
ret
mov
pop
mov
cld
or
cmc
mov
push
fiaddl
mov
push
push
add
popf
sub
xor
pop
jns
pop
dec
enter
roll
adc
pop
mov
ret
mov
adc
mov
sub
inc
imul
add
aam
popf
cmp
sbb
push
dec
fwait
fs
xchg
dec
lret
or
push
jo
fildl
dec
pop
add
lcall
cmp
add
lods
inc
cmp
lret
jbe
in
dec
pop
or
mov
jmp
mov
inc
mov
dec
and
sub
adc
and
or
cs
add
jecxz
imul
adc
bound
dec
mov
push
push
cmp
mov
ljmp
in
fistl
inc
fistl
loop
adc
mov
inc
loope
or
sbb
addl
clc
inc
testl
add
test
mov
cmp
lret
lock
mov
fldt
or
xor
in
pop
je
enterw
jns
mov
std
pop
jae
shll
add
sub
lock
inc
xor
or
cmp
adc
cmp
pop
cmp
push
xor
mov
aas
not
js
mov
add
push
rcll
scas
jge
xor
sbb
cmp
jecxz
pop
jo
ret
inc
add
dec
xchg
sbb
mov
or
add
or
lea
adc
lods
push
jg
addl
rcr
mov
xorb
or
sub
shrb
dec
add
or
hlt
add
sbb
jge
es
icebp
pop
pop
mov
loop
hlt
mov
cmc
adc
shll
loopne
gs
insl
sbb
adc
and
jb
inc
push
repnz
icebp
inc
cwtl
lock
mov
stos
fcmovnb
dec
xor
icebp
mov
std
lods
push
das
fldt
addw
push
clc
arpl
inc
push
and
sbb
cmp
push
cmpsb
out
jmp
out
xor
sub
repz
cmp
cmp
inc
ret
and
out
push
jmp
push
push
clc
dec
je
popa
js
sbb
pop
cmpsb
ficomps
ret
cmp
and
sub
iret
sbb
add
sbb
dec
daa
cwtl
aad
add
mov
adc
lock
stos
pop
mov
mov
mov
dec
inc
fisubrs
sbb
adc
cmp
adc
xchg
dec
cmp
mov
cmpb
cli
sbb
mov
push
jecxz
enter
mov
es
or
push
std
insb
xchg
sahf
test
cmpsb
in
xor
rolb
mov
sbb
jmp
push
adc
mov
lock
or
nop
test
add
dec
push
fs
dec
mov
add
fisubrs
je
sahf
out
dec
inc
ljmp
cmp
adcb
int3
adc
fwait
outsl
xor
test
add
test
stos
push
call
dec
xor
ss
paddsb
add
rcrb
xchg
adc
daa
shrl
ret
shll
das
mov
dec
aaa
xchg
pop
push
call
int3
and
jecxz
mov
in
mov
aad
inc
push
in
inc
inc
xor
aam
xchg
pop
sbbl
pop
jmp
and
cwtl
rorb
sub
and
dec
jmp
sub
sbb
mov
loopne
pop
movsb
push
pushl
lea
push
call
clc
sbb
cltd
and
aam
xor
out
in
jge
pop
or
xchg
cmp
es
ss
adc
cmp
test
dec
movsl
pusha
lea
sub
popf
adc
add
pop
aam
mov
mov
jge
cmp
xor
jge
push
aaa
das
inc
mov
int
cmp
out
inc
lcall
adc
lret
gs
adc
mov
bound
in
sbb
push
cli
call
out
and
je
adc
aad
mov
inc
lcall
lret
push
jns
sub
subb
shll
or
addr16
jmp
call
xchg
mov
mov
test
xor
test
scas
add
sbb
scas
outsl
mov
cmp
pop
outsl
ret
xor
xchg
outsl
je
aam
jmp
dec
inc
jmp
cli
pushl
jmp
or
jmp
fstl
js
je
inc
gs
nop
roll
add
ljmp
movsb
and
sbb
leave
insl
mov
add
jg
mov
jmp
and
sub
cmp
pushf
not
fldl
jg
add
pop
xor
and
inc
cmp
fldl
jge
bnd
out
inc
sbb
inc
inc
jg
call
inc
dec
inc
movsb
xchg
enter
and
and
lahf
mov
cmc
out
add
ret
sbb
jb
xor
inc
pop
mov
push
sub
or
inc
out
inc
dec
mov
cli
pop
mov
loop
lahf
andb
or
sbb
ja
add
repz
in
fldt
mov
lods
cmp
shll
inc
sbb
dec
add
fwait
and
lret
jno
mov
xorb
inc
test
xlat
adc
std
pushl
iret
mov
inc
dec
aas
inc
cmp
call
sbb
add
push
in
outsb
lods
adc
aaa
dec
add
sbb
mov
stos
incb
shrb
dec
mov
pop
mov
jecxz
loope
shlb
lods
xor
test
inc
mov
scas
add
out
xchg
sbb
add
xor
mov
pop
js
push
and
inc
jno
andb
scas
sbb
add
push
or
ret
stc
seto
in
sarb
dec
or
fadds
cwtl
add
mov
stos
cmp
add
daa
pop
bound
mov
push
outsl
add
jbe
adc
sbb
repz
outsl
rcrl
inc
or
adc
aaa
fisttpl
pop
sub
push
xchg
jle
call
mov
mov
push
xchg
mov
jmp
dec
or
sbb
insl
ret
loopne
pop
cmp
inc
loope
or
add
cld
mov
adc
sbb
out
cwtl
outsl
scas
inc
std
cli
in
orl
imul
sbb
aas
and
add
push
stos
hlt
fsubrs
pop
and
dec
adc
jne
cmp
sub
fistl
ljmp
ljmp
shrl
nop
xor
sbb
mov
pop
dec
sbb
movhps
jg
jg
aaa
dec
imul
push
jp
xchg
pop
andl
inc
icebp
mov
and
add
aas
add
outsb
mov
pop
xchg
ss
popf
ret
mov
add
add
lods
pop
decb
hlt
rcrl
dec
adc
lss
cmpsl
lret
mov
call
arpl
dec
pop
xor
test
ret
incl
sub
jbe
ja
stos
pusha
mov
sub
dec
icebp
xchg
lcall
scas
mov
fdivrs
out
push
or
adc
hlt
mov
mov
pop
mov
inc
cmp
and
xor
in
push
sahf
pop
lcall
add
cmp
mov
add
outsl
movsl
pop
ds
jmp
fstpt
sbb
pushf
sar
xchg
push
popa
jg
out
sarb
stc
mov
aaa
mov
and
fmul
inc
rcrl
sub
stos
stos
data16
jo
cltd
xchg
ljmp
jmp
pop
mov
mov
dec
outsl
les
add
push
fstpt
cld
push
js
fsubrs
dec
aaa
je
cmpsl
inc
out
xor
push
add
fldt
lock
pop
test
mov
mov
rorb
mov
decl
arpl
add
insl
insb
mov
mov
clc
dec
fs
push
dec
mov
incl
push
orb
jns
or
mov
cmp
imul
xor
jne
jo
lods
and
inc
ds
jecxz
fsubrl
scas
adc
xchg
xchg
fucomi
sarb
mov
adc
stc
jg
push
jns
ret
mov
ljmp
xchg
add
inc
nop
push
push
rorb
addl
rcrb
pop
or
jnp
addb
or
push
fiaddl
mov
mov
nop
lods
pop
mov
pop
inc
push
pop
pushf
pop
adc
repnz
mov
push
jl
iret
call
pop
outsl
xchg
add
jnp
ljmp
pop
aaa
dec
shl
xor
andb
jle
flds
adc
jl
xchg
sbbb
sub
ja
pop
fcmovnb
daa
dec
pop
stos
push
jbe
psubusw
lahf
xor
xor
xchg
cmpsl
fistps
mov
mov
and
jo
jg
xor
das
movsb
popa
fldenv
shrb
dec
lret
stc
push
cmp
scas
fsubs
cltd
jb
sbb
lods
cmc
fidivl
cwtl
dec
pop
dec
outsl
dec
mov
inc
push
int3
pushf
mov
pop
enter
fwait
jp
repnz
outsb
fsts
mov
xchg
test
js
mov
iret
push
rorl
divl
and
push
sub
movsb
jmp
adc
or
cmp
add
movsb
inc
incl
mov
inc
xchg
stos
adc
mov
sub
sbb
subb
daa
sub
mov
xor
ds
pop
mov
mov
imul
shlb
cwtl
inc
cld
push
fdivrp
addr16
nop
rolb
gs
jno
bswap
call
call
ds
or
std
inc
loopne
icebp
lahf
jne
movsl
int3
inc
rol
adc
lock
outsl
push
adc
sbb
dec
sbb
jmp
inc
mov
aaa
adcl
mov
popa
fcomps
std
inc
aad
add
gs
jge
imulb
jl
punpckldq
inc
cld
cmp
shll
cmpsb
xor
mov
sub
mov
lods
xor
inc
mulb
xor
outsl
cld
or
sbb
mov
pop
xlat
arpl
cs
and
test
jp
lock
decl
negb
mov
fidivrs
push
and
or
sub
es
pop
loop
mov
add
addl
in
lcall
jg
int
aad
outsb
nop
aad
shlb
mov
sub
ds
cmc
dec
cmp
jb
xchg
push
cli
and
xor
sbb
or
inc
cmp
inc
fucomi
rclb
mov
dec
dec
daa
cmpb
adc
inc
sarl
push
cmpsb
aas
push
jmp
int3
lcall
cmp
or
xchg
loopne
insb
add
lret
push
imul
ljmp
pop
push
mov
xor
inc
adc
hlt
push
pop
mov
lods
clc
incl
movsb
popa
iret
push
call
or
or
pushf
dec
mov
sub
jno
sbb
sbb
sbb
xchg
dec
inc
imul
mov
jb
lods
add
gs
out
mov
mov
ret
dec
jg
pushl
incl
jb
popa
into
xchg
pop
and
mov
outsb
cmc
add
sub
lods
int3
jmp
inc
dec
mov
and
rcrb
pusha
and
das
loopne
inc
jbe
aam
je
adc
push
adc
mov
fidivl
mov
arpl
faddl
into
jbe
movsl
xor
push
mov
iret
stos
aam
xor
xor
stos
in
inc
gs
adc
jne
sbb
adc
dec
jne
cmpsl
outsb
cmc
movsl
fsubrl
ja
add
push
ljmp
shl
or
negl
mov
nop
add
mov
test
mov
rorb
sbbb
xchg
scas
stos
pop
movsb
xchg
dec
arpl
outsb
pop
bound
mov
rolb
jp
cltd
jne
jge
aam
mov
sub
pop
fadds
push
add
scas
and
dec
insl
movsl
psllw
in
dec
sarb
mov
pop
scas
fcoms
fcomps
add
ret
and
jle
mov
shll
jle
mov
inc
lods
loopne
push
lret
and
inc
sbb
insb
in
push
sarb
ljmp
fdivrs
ja
repz
and
adc
incb
loope
leave
stos
fwait
cltd
or
add
das
xchg
rorl
nop
aam
inc
and
sub
aaa
loopne
pop
fwait
sbb
pop
sbbl
lret
mov
cwtl
jl
repz
sub
insl
ret
lods
push
sub
lock
sbb
fisubrl
sub
int3
fcmovb
and
pop
sbb
sub
aas
add
jmp
dec
clc
push
push
popf
xchg
jg
or
rolb
lock
loope
wrmsr
insl
sub
sub
test
popa
inc
xchg
jp
fcmovne
rol
fbstp
adc
faddl
cmp
faddl
loopne
shlb
cli
dec
dec
test
add
or
dec
call
movlps
call
push
testb
push
jge
loopne
cmp
out
jecxz
ljmp
imul
cs
inc
sbb
inc
call
aaa
das
js
cmpb
outsl
cmp
call
mov
lds
inc
adc
push
and
xor
icebp
sbbb
jl
xor
cmpsl
lahf
add
popf
pop
fwait
mov
ss
adc
fldlg2
pop
sub
sbb
cmp
xchg
pop
outsb
jae
or
pop
fsincos
es
ja
sahf
pop
repz
enter
fdivrs
inc
cmp
out
dec
pop
or
sarl
ret
add
js
iret
or
adc
shrl
add
cmc
mov
add
test
or
fisubrs
or
in
add
sbb
sbb
xchg
push
add
clc
fsubl
dec
bound
and
xchg
call
mov
popa
call
addr16
das
popa
test
or
outsl
sbb
in
pop
inc
xchg
push
xorl
mov
aad
cltd
pop
push
call
jp
add
shrl
scas
mov
in
sbb
or
lods
loopne
push
scas
add
stc
mull
or
gs
jg
fcoms
add
push
movsl
add
mov
pop
in
xor
pop
or
or
enter
scas
pop
and
not
sub
and
and
mov
xor
lock
adc
jmp
mov
jl
mov
add
or
mulb
inc
popf
jbe
cmp
dec
nop
pop
test
add
not
cmp
ja
js
inc
je
inc
xchg
adc
xor
inc
test
js
mov
add
neg
jl
ret
push
mov
ret
cmp
jb
repnz
jg
xor
cmpsl
ljmp
add
and
lahf
jl
loope
jnp
adc
cli
mov
sar
sar
mov
push
xchg
inc
f2xm1
mov
icebp
test
sbb
les
loope
loop
xor
add
mov
cmpsb
scas
and
int
and
mov
incb
fwait
adc
pop
xchg
outsb
loopne
pop
xchg
in
ja
scas
add
mov
jmp
test
jbe
imul
xor
or
sbb
mov
xor
fwait
jg
cmp
xor
rcl
je
sbb
dec
js
xchg
in
add
sub
sbb
daa
inc
sub
add
movsl
lcall
mov
dec
mov
daa
xchg
test
cwtl
aad
sub
bound
movlps
sbb
sbb
rol
mov
adc
jp
adc
xor
fmuls
sar
xchg
fsub
and
pop
adc
lea
and
add
aaa
mov
hlt
in
add
popf
sbb
adc
sub
outsb
inc
cwtl
xor
add
add
clc
rolb
enter
cld
jb
jmp
cwtl
dec
sbb
lods
pop
cmp
es
cld
iret
bound
mov
fldl
shll
push
lcall
adc
ljmp
rcrb
out
or
lods
js
call
dec
in
mov
jne
mov
nop
leave
std
adc
sbb
pop
inc
int
movsb
fmull
loop
cmp
out
mov
mulb
dec
mov
int
cmc
sub
or
cmpsb
insb
lods
call
lret
sbbl
mov
rorb
mov
push
adc
add
mov
xor
push
outsl
ret
loop
cmp
daa
jecxz
aam
or
stos
ja
or
mov
hlt
push
clc
cwtl
clc
and
lods
mov
mov
add
sbb
mov
clc
xor
adc
inc
add
repnz
cwtl
in
adc
xor
mov
mov
mov
push
arpl
sub
out
mov
xor
cmpsl
sub
push
test
orl
mov
or
pop
call
mov
add
xor
jns
fucompp
scas
sbb
xor
pop
setae
out
adc
or
cltd
push
call
mov
mov
sub
mov
loop
scas
das
cmpb
inc
cmpl
xchg
xor
sub
imul
fsub
add
sbb
dec
int3
dec
aam
sub
push
imul
pushl
fldl
pop
jle
sbb
inc
pop
or
jge
pop
xchg
and
or
lcall
xor
outsb
test
stos
and
xchg
lods
test
lea
and
rcll
cld
mov
insb
push
add
pusha
push
aad
arpl
jp
mov
sub
add
adc
sbb
pop
inc
lcall
jmp
cmp
push
fidivrl
add
pop
add
jg
push
ret
call
popf
add
mov
in
sub
addr16
inc
cmp
sbb
dec
icebp
jnp
popa
mov
and
rcll
jnp
in
jg
or
cmp
fildll
add
push
outsb
cmpsl
add
test
incb
push
xor
jg
pop
lods
cltd
or
xor
les
aaa
push
xchg
mov
mov
loop
ficoms
outsl
adcb
pop
sbbb
add
jg
clc
mov
mov
dec
jno
mov
lcall
add
push
add
sbb
mov
adc
push
add
icebp
mov
and
xor
push
jnp
cltd
xorb
pop
cmp
add
pop
lock
push
push
pusha
loop
int3
jo
movsb
add
fs
sar
xchg
jmp
sbb
push
lcall
add
test
jmp
mov
mov
mov
fcomps
incl
or
add
push
and
arpl
add
jae
sub
in
mov
pop
test
xchg
mov
movsl
pop
rcrb
and
fistl
xchg
aas
xlat
sbb
pop
icebp
incl
and
or
add
xchg
out
cmpsl
sub
call
mov
push
stc
add
pop
and
push
dec
sub
or
insb
lock
add
fisubrl
push
xor
jge
stos
mov
adc
mov
jge
cmpsb
dec
imul
mov
mov
jno
sbb
pop
sub
jg
mov
xchg
lods
in
push
adc
add
mov
mov
pushl
pop
mov
mov
test
aas
xchg
test
inc
stos
es
clc
inc
int3
hlt
mov
jae
inc
mov
sub
jae
mov
pop
stc
sub
inc
leave
rclb
push
dec
push
notl
or
add
inc
in
sbb
pushl
dec
adc
sub
add
loope
shr
jbe
add
test
loope
inc
xor
jo
ja
adc
jbe
hlt
aam
xchg
lcall
ljmp
sbb
cmp
add
sbb
xor
jg
notb
loopne
push
or
add
cmp
add
stc
lcall
loope
out
cmp
pop
pusha
fstl
out
add
pop
sbb
ror
xor
jb
pop
clc
test
push
and
rcll
dec
fsubs
int
sbb
fcmovnu
add
dec
and
mov
js
and
push
cld
outsl
mov
cwtl
jb
add
xchg
sbb
mov
std
or
push
das
mov
cmp
inc
xlat
add
js
decl
jg
ret
and
arpl
mov
orb
add
pop
add
in
aas
inc
xchg
add
sbb
mov
inc
sub
or
in
fnstsw
add
xor
pop
dec
inc
loop
gs
mov
call
xchg
add
mov
sahf
js
xor
and
push
mov
std
fbstp
add
data16
gs
lcall
xor
lea
mov
inc
into
mov
ficomps
insl
lea
push
jle
inc
mov
push
inc
add
mov
aas
jnp
add
pop
pop
inc
jo
adc
call
lfs
xor
or
sbb
mov
sbb
and
sub
lret
adc
movsl
repnz
add
xor
or
pushf
adcl
mov
les
loopne
dec
divl
xorl
and
orb
inc
filds
arpl
fstpl
and
adc
repnz
cltd
fnstcw
dec
mov
stos
sahf
xor
mov
add
jmp
inc
inc
in
shll
arpl
xor
ja
into
mov
rcll
adc
jmp
decl
xchg
add
sub
mov
ds
or
sbb
fcmovnb
lret
pop
xor
dec
cmp
inc
and
imul
cli
fsubl
lahf
add
add
jge
dec
cs
jp
push
bound
pop
pushf
lcall
jno
sub
outsl
pop
scas
or
xor
mov
or
lock
insl
and
adc
push
xchg
scas
mov
and
aaa
mov
and
mov
mov
add
jb
add
lock
mov
lock
ja
push
jl
or
push
push
inc
sbb
lods
cmp
add
cmp
sbb
test
mov
mov
add
or
outsb
mov
pop
fbstp
jo
out
adc
out
inc
test
dec
in
jg
xchg
mov
pop
out
lret
popa
add
cld
inc
or
inc
pop
adc
push
outsl
and
add
les
sbb
in
repz
sub
push
pop
mov
add
or
mov
inc
lahf
cmp
ja
rorl
lret
inc
test
dec
mov
cli
fsubs
dec
sub
mov
data16
push
push
adc
in
cmp
popf
fmuls
sarl
daa
call
mov
push
sbb
std
inc
xchg
jl
lea
dec
ret
lret
pop
int
inc
into
test
push
jo
aad
test
mov
mov
ficoml
cmp
popa
cmpl
push
imul
notb
adc
inc
and
inc
and
aam
adc
xor
sub
adc
or
nop
pop
es
dec
and
ror
push
shll
decl
or
sbb
lods
and
cmp
jge
pop
jg
add
mov
lock
dec
mov
sbb
cmp
lahf
cmp
clc
xor
ljmp
hlt
dec
int
insl
jge
orb
jmp
aad
cmp
insl
jnp
push
roll
hlt
mov
push
mov
outsl
popf
mov
sub
dec
dec
push
push
aas
arpl
roll
sub
lods
jg
aaa
pop
adc
sysenter
adc
or
dec
rorl
cmpsb
jge
inc
sbb
sbb
sahf
dec
ljmp
addr16
inc
dec
sti
mov
ljmp
cmc
jp
mov
jno
xor
inc
add
dec
add
popa
push
pop
scas
add
pop
out
inc
cmc
push
dec
mov
xor
mov
roll
int
int3
jp
sub
mov
sahf
xor
mov
xor
sti
mov
add
lcall
push
sbb
add
pop
push
das
inc
insl
sti
shrl
dec
cmp
popa
inc
int3
stos
add
cld
ljmp
mov
push
scas
les
xchg
leave
sbb
add
or
out
mov
shlb
xchg
or
push
call
jns
inc
mov
cli
nop
orb
adc
cltd
cli
dec
cli
ljmp
rcr
pusha
jg
cltd
movsl
push
dec
inc
add
pop
adc
stos
clc
inc
aaa
mov
pusha
push
sar
inc
jg
sbb
in
and
mov
mov
nop
push
int3
icebp
pop
adc
stos
in
jle
pop
pop
xchg
jg
adc
xor
popf
shlb
ljmp
icebp
call
ret
sub
adc
pop
outsb
inc
inc
adc
cmpsb
leave
adc
sarb
add
jmp
sbb
dec
les
xlat
popa
mov
push
out
lret
scas
xchg
and
std
pushl
es
xor
jb
cwtl
data16
fimuls
popa
push
adc
inc
out
loopne
sub
and
inc
sbb
icebp
decl
adc
xchg
and
mov
mov
ljmp
inc
fsubrp
loope
test
movsb
push
std
inc
mov
push
repnz
jns
fstl
decl
sub
xchg
mov
sbb
out
aas
aad
incl
pop
fwait
push
enter
mov
xor
ror
jge
mov
outsl
int
xchg
rol
adc
loope
arpl
fcomps
test
add
and
je
rorl
jp
add
adc
clc
das
cld
and
mov
push
sub
loopne
inc
les
or
incl
les
add
incb
adc
mov
mov
xor
pusha
js
sub
cmp
sbb
sahf
cwtl
xlat
fstpt
pop
add
pop
push
outsl
mov
loopne
inc
addl
inc
or
cld
mov
call
fildll
incb
and
cmp
int
daa
inc
fisubrs
mov
xchg
mov
sbb
pop
jns
scas
sub
xchg
mov
loope
adc
push
in
and
add
mov
scas
add
insl
sti
adc
sbb
lock
xchg
addr16
popa
adc
notl
ficomps
lds
movsb
sbb
std
insl
imul
cltd
xor
add
sti
or
arpl
inc
je
or
pop
xchg
mov
push
pop
sbb
add
mov
test
and
int
pop
mov
aad
pop
push
push
lcall
jl
sbb
adc
adc
lea
pop
cmp
fnstcw
je
jnp
nop
cmp
xor
lret
daa
adc
les
xchg
cs
test
adc
mov
mov
adc
mov
or
mov
jne
divb
cs
pop
notl
ss
imul
push
sbb
sbb
in
outsl
add
out
inc
and
mov
lret
adc
call
das
add
mov
xlat
xor
xchg
add
sbb
leave
push
jl
push
mov
mov
decl
in
mov
adc
icebp
push
dec
inc
cmp
pop
aaa
cs
cli
out
mov
je
jmp
outsb
aas
dec
dec
and
incb
jecxz
jmp
sbb
xchg
mov
das
cmc
or
xchg
sub
dec
xor
mov
add
jg
outsl
and
ja
aad
movsb
dec
daa
cmc
faddl
sub
jb
and
mov
jns
xchg
in
inc
pop
jne
test
lret
mov
and
cmc
in
test
pop
xor
scas
test
sbb
out
mov
fs
mov
pushf
pop
arpl
ret
mov
cld
in
inc
xor
das
mov
adc
mov
lock
or
out
inc
rcrl
inc
xchg
loope
lods
cld
inc
jno
cmp
call
dec
faddl
mov
lods
fiaddl
push
incb
dec
sbb
fistps
fmul
lret
push
xchg
stos
add
add
mov
mov
sti
sbb
push
mov
movsl
ds
stos
lods
shll
and
or
pop
push
sub
rolb
sahf
push
xor
cmc
adc
sub
or
jno
push
pop
push
adc
and
sti
shll
cmc
inc
pop
scas
addr16
xchg
adc
dec
adc
repnz
cmpsb
mov
lds
inc
jp
cmp
mov
ljmp
pusha
dec
fxch
jae
xor
leave
jge
daa
out
into
sub
cs
pushl
icebp
gs
lods
sarl
subl
test
rol
je
in
jg
in
sub
inc
cmp
nop
adc
pop
jg
das
cld
sbb
inc
pusha
shlb
push
cmp
incb
mov
cmpb
decl
sahf
add
add
subb
jno
into
arpl
in
push
xorb
je
call
inc
sub
and
add
add
sub
aad
ret
or
das
mov
fildll
or
sarl
xor
hlt
push
in
subl
jmp
inc
add
shlb
je
xor
dec
mov
loope
push
daa
cltd
fnstcw
push
in
xor
in
arpl
jnp
dec
xor
ljmp
out
and
mov
std
sbbl
xchg
mov
iret
or
shrb
add
adc
cmpb
pop
sbb
inc
cmp
mov
mov
popf
les
ja
push
mov
das
aam
dec
jp
test
sahf
test
test
negb
hlt
inc
out
test
iret
sub
fwait
jnp
sbb
iret
adc
jmp
test
add
inc
outsb
add
mov
sbb
inc
icebp
ljmp
push
pop
mov
sbb
push
adc
pusha
sbb
mov
sbb
pop
mov
jb
call
push
sbb
ret
xchg
dec
pushf
js
inc
add
int
dec
add
inc
adc
jmp
test
and
iret
pop
lock
iret
in
and
adc
inc
xor
inc
pop
mov
scas
loope
cmp
mov
dec
call
cwtl
rcll
sub
and
pop
incb
test
mov
ret
push
adc
sbb
out
rclb
mov
stos
pop
xchg
pop
sbb
xor
jecxz
repnz
fwait
xchg
push
test
loopne
imul
fcom
jae
sub
or
or
fisubrs
lods
insl
je
inc
ljmp
cmp
jecxz
inc
rcr
jp
fdivp
flds
jl
sbb
cltd
mov
fwait
sbb
roll
rolb
das
hlt
mov
cltd
dec
add
movsb
xchg
jle
pop
in
push
sbb
cmp
rorl
ret
or
sub
mov
mov
insl
sub
loope
xor
ja
xchg
in
sbb
aaa
das
jae
mov
shl
test
jne
mov
fildl
xor
pop
orb
fwait
mov
add
xchg
push
cli
movsb
repnz
inc
mov
add
jmp
pop
xchg
adc
add
mov
adc
inc
add
mov
into
xchg
lea
sbb
xor
fsubs
ljmp
roll
dec
or
mov
pop
sbb
loope
subb
and
aaa
mov
add
pop
mov
and
add
sub
out
push
rorl
int3
sti
int3
cltd
movb
cmp
jne
xor
and
aaa
cwtl
adc
add
sbb
fsubrp
add
inc
xor
ret
inc
inc
sub
loop
mov
jmp
mov
loopne
or
or
xor
mov
bound
xchg
add
adc
add
adc
lods
pop
pop
mov
adc
loope
je
xchg
je
add
mov
xchg
pop
popa
mov
jecxz
into
dec
xchg
mov
push
ficomps
fstpt
and
cmp
mov
cmc
push
pop
push
jecxz
add
pop
or
xchg
sub
jge
add
neg
dec
and
iret
add
sub
scas
cmp
inc
sarl
into
adc
cmp
sub
xorb
cld
ret
xchg
enter
fcomp
add
push
movsl
jecxz
movl
in
mov
lock
fisubrs
imul
stos
pop
in
rcll
or
or
inc
popf
inc
mov
rcl
and
call
clc
or
dec
aam
in
movsb
ljmp
pop
iret
mov
pop
int
stos
in
dec
je
jns
enter
sbb
inc
jg
add
ss
sub
pop
pop
push
cmc
fwait
mov
in
leave
cmp
and
mov
pusha
xchg
out
adc
cmp
sbb
add
xchg
sbb
aam
inc
mov
das
xor
out
loope
loop
inc
ljmp
mov
xchg
xor
sbb
pop
jle
aam
popf
mov
pop
pop
sbb
jns
cmpsl
xchg
mov
orl
adc
xchg
push
iret
nop
roll
mov
test
dec
push
nop
test
push
xorb
fs
wrmsr
lock
jg
in
xchg
pushf
fs
in
repnz
cltd
inc
xchg
pop
stc
lcall
or
sub
inc
imul
jnp
pushf
outsb
gs
jg
or
cmc
jb
in
sbb
mov
lock
and
and
popa
or
sub
mov
rcr
test
addr16
xchg
pushf
scas
xor
mov
pop
push
fnstenv
cltd
out
ret
jl
call
decl
popw
sarl
add
fcomps
mov
xchg
call
test
cwtl
popf
fldl
jmp
jb
lds
sbb
push
xchg
pop
sub
xchg
sbb
xchg
js
jl
call
insl
add
xchg
pusha
or
xchg
mov
dec
xlat
xlat
popa
xchg
je
aaa
insb
test
test
xlat
imul
orl
movsb
inc
and
sbb
add
movb
ljmp
sbb
aad
mov
lds
and
xor
icebp
cmpsb
das
cmpsb
and
sti
das
inc
jg
loope
adc
push
je
or
sub
sbb
pop
adc
cwtl
add
loop
aad
or
jbe
add
jg
pushl
jno
inc
add
inc
bound
add
ret
hlt
inc
push
or
in
fucom
sub
sbb
repz
mov
cmp
pop
inc
test
imul
lsl
cmp
jnp
decl
movsl
loopne
xchg
fnstsw
es
push
jo
xor
ljmp
cld
mov
push
mov
xchg
or
mov
call
cmc
sbb
xor
lock
mov
adc
and
xchg
into
aaa
jle
jge
pop
xchg
cs
cmp
icebp
ja
mov
pop
andb
mov
lea
or
iret
pop
and
inc
dec
sub
inc
test
adc
sub
enter
mov
cmp
data16
adc
adc
cmp
mov
fsub
imul
out
mov
sub
push
rcrl
sub
add
test
xor
push
mov
rcrb
rorb
out
test
xor
sbb
js
je
push
sub
ss
xor
xchg
loopne
mov
add
adc
adc
dec
jno
jl
mov
add
cmpsl
lock
mov
cs
add
std
jge
int
inc
or
fistpll
and
sub
adc
add
clc
push
push
sbb
movsl
faddl
xchg
fisubs
push
pop
loop
adc
mov
xchg
fxch
pop
xlat
or
clc
bound
sar
dec
mov
dec
ds
int3
idiv
inc
mov
mov
or
inc
add
add
imul
mov
shll
cmp
jle
and
pop
push
test
adc
or
scas
imul
inc
repz
add
mov
icebp
add
pusha
mov
dec
adc
sub
jns
lret
sbb
pusha
push
test
cltd
or
out
fisttpll
push
decw
call
mov
lock
push
or
lods
pop
in
adc
shlb
mov
loopne
jo
jge
and
xor
inc
push
cmc
jnp
xchg
jne
fwait
cmp
vpcomd
movsl
sahf
dec
sbb
test
xchg
loopne
decl
push
add
push
jg
sbb
pop
cmp
dec
lret
add
cmpsl
lcall
cld
pop
notb
mov
sbb
add
ffreep
das
outsl
lock
outsb
push
push
add
push
xchg
lret
je
sbb
push
pop
and
decl
mov
jno
rcrl
js
cmp
fmull
loopne
jns
dec
push
js
aas
push
or
std
push
dec
mov
xchg
iret
data16
add
aas
pushl
ljmp
lret
xor
cmpsl
jmp
and
inc
cmc
add
xlat
mov
scas
js
push
inc
jl
cli
ljmp
out
pop
xchg
stc
push
aas
sti
lahf
out
pop
add
pop
test
call
xchg
mov
es
fisttpll
jbe
cmp
add
cltd
je
jp
fsubp
call
mov
cmp
dec
add
push
lods
ret
or
pop
loop
pushf
daa
pop
adc
or
movsb
scas
jge
add
idiv
adc
in
repnz
stos
xchg
xchg
mov
cld
sbb
and
rorb
jmp
jge
mov
xchg
dec
sub
ficoml
add
pop
xchg
push
enter
flds
insl
fisttpll
lcall
cmp
das
les
pop
sbb
pop
pop
mov
push
inc
pop
js
adc
bound
cld
loope
mov
and
hlt
add
cmp
cmc
sti
adc
inc
fmull
mov
icebp
mov
mov
popa
ds
loopne
jb
adc
inc
test
jp
sbb
stc
add
dec
lcall
adc
cmp
cmp
sbb
sub
mov
inc
cmp
fstpt
incl
ret
push
push
es
scas
dec
aaa
pop
clc
pop
and
call
push
in
mov
ret
xchg
jno
out
loopne
jmp
jg
pusha
aaa
neg
mov
jbe
test
push
insl
dec
mov
xorb
xchg
inc
decl
iret
mov
dec
or
sbb
add
or
jno
pop
pop
cmp
test
insb
out
enter
cmp
jno
subl
lret
fs
jg
pop
test
add
push
xchg
dec
nop
mov
sbb
xchg
jmp
dec
adc
and
sbb
popa
arpl
inc
or
jae
xor
test
lret
adc
icebp
in
cwtl
push
push
or
movsl
subl
fstpt
jle
and
lds
jecxz
xchg
movsb
mov
daa
mov
or
movsb
pop
shl
dec
mov
cmp
in
push
push
and
lret
fs
mov
nop
in
fiaddl
jb
pop
adc
mov
add
pop
sqrtps
fcmovu
leave
aas
or
out
add
xor
jecxz
mov
fwait
mov
fisttpll
decl
cwtl
mov
and
pusha
jbe
int3
test
or
shrl
cmp
mov
or
scas
stc
inc
sar
dec
incl
adc
bound
xacquire
jg
push
icebp
xor
and
std
and
shrl
lcall
xchg
popf
int3
sbb
test
and
test
inc
lds
mov
aaa
mov
call
xchg
sbb
fs
pop
cs
jmp
sub
inc
add
push
push
shll
roll
pop
dec
pop
bound
test
js
stos
dec
and
int
test
mov
pop
sbb
pop
or
mov
sbb
addb
cmp
hlt
push
cmp
ret
repz
pop
add
and
mov
js
clc
or
rcl
stos
imul
mov
dec
lcall
add
sahf
and
popf
test
loop
or
pusha
add
push
push
inc
iret
cmp
imull
mov
fisttps
jmp
bnd
lret
and
dec
inc
sbb
cltd
arpl
sbb
mov
mov
cmc
pop
inc
aam
lods
hlt
fwait
mov
clc
lcall
paddb
push
pusha
dec
pop
xchg
sbb
adc
or
xchg
sbb
inc
mov
test
mov
in
push
dec
cld
or
and
inc
push
sub
jecxz
push
shl
pop
insb
mov
mov
jne
push
mov
add
fcomps
jge
fcoms
cld
in
jg
cmp
cld
je
popf
xchg
ja
inc
pop
and
lcall
mov
rorl
nop
int3
insl
add
jmp
movsl
leave
data16
pop
iret
jg
fisttps
jo
xor
mov
push
sbb
push
call
incl
pop
xlat
and
dec
shll
adc
inc
sbb
inc
in
das
cld
lcall
mov
push
adc
push
and
arpl
pop
xchg
inc
jmp
sbb
cmp
cmc
mov
addr16
dec
in
mov
xchg
outsl
std
fisttps
mov
sbb
lock
push
cmp
push
ss
dec
mov
push
incl
pop
dec
adc
in
ret
lahf
jns
les
scas
rcrb
xchg
xchg
int3
cmp
loop
aas
cmovg
pop
cli
mov
cmp
pusha
dec
adc
fistpll
pop
sub
or
add
lock
decl
dec
rcll
out
orb
add
lock
movsb
push
loopne
ljmp
fldl
ss
mov
mov
pop
ljmp
lcall
es
adc
adc
sbb
mov
and
cmpsb
das
cld
test
je
sbb
inc
jns
xchg
outsl
std
out
dec
scas
xor
stos
sti
and
shlw
dec
and
mov
subl
ja
mov
lock
jmp
arpl
add
loop
sbbl
aaa
cli
xlat
xchg
and
rclb
insb
in
test
enter
mov
mov
testb
dec
scas
push
cmc
mov
out
xchg
dec
dec
inc
es
fidivrs
mov
push
adc
sbb
lods
mul
or
jg
aam
clc
sbb
enter
jns
pop
call
sub
scas
sub
call
daa
js
into
pop
add
mov
gs
fwait
xor
js
jae
cmp
add
loope
mov
icebp
mov
push
pop
bound
adc
fisttpl
cmp
mov
mov
dec
hlt
aas
insl
pop
mov
ljmp
xchg
mov
mov
iret
fisubl
inc
nop
jb
pop
lods
inc
mov
dec
aaa
in
ljmp
xor
mov
and
lds
popf
sub
int
ljmp
das
lods
int3
enter
cmc
pop
dec
cpuid
xchg
and
and
mov
jmp
mov
sub
push
xlat
xchg
adc
adc
mov
addb
xchg
and
fcoml
js
pop
push
xchg
test
cmp
loope
in
icebp
adc
test
pop
enter
in
testl
jne
jmp
shrb
or
lods
mov
arpl
xchg
pop
mov
das
cld
shlb
stos
cmpsb
inc
or
dec
jp,pt
adc
mov
std
pushf
push
andl
push
outsb
mov
or
aam
mov
inc
cwtl
xchg
dec
adc
daa
in
xchg
mov
decl
in
cld
imul
mov
push
jnp
shlb
mov
sbb
fistps
push
shrb
mov
flds
and
outsl
sar
lods
movsl
xor
cmp
and
pop
notl
pop
clc
jg
and
add
xchg
ret
mov
js
jbe
fwait
or
sub
mov
popa
push
sti
mov
decl
xchg
sbb
stos
xor
pusha
pushf
mov
lock
push
mov
or
push
add
inc
pusha
add
jg
push
aam
iret
inc
mov
push
xor
adc
xor
mov
push
aaa
sub
and
shlb
loopne
cld
ffreep
cmp
cmpsb
fadd
mov
lcall
insb
ret
insb
test
hlt
nop
imull
or
mov
pop
cld
pop
arpl
push
push
fisttps
andl
jne
shl
stos
inc
mov
xchg
hlt
inc
test
mov
pop
dec
inc
cmp
mov
dec
in
xchg
pop
cltd
push
andl
lcall
jle
mov
test
arpl
jb
add
test
cmc
pop
jmp
sub
inc
mov
push
loop
clc
fisttpl
add
sbb
repz
iret
or
mov
das
push
pop
movsl
loopne
xor
add
pop
add
jb
mov
dec
jo
out
dec
js
and
pusha
lcall
mov
movsb
sahf
inc
loope
xchg
out
add
or
dec
dec
scas
enter
push
ret
mov
decl
adc
jns
je
adc
cmpsl
loope
ds
je
inc
mov
pop
lock
test
inc
pusha
pop
ljmp
ss
adc
ljmpw
pop
jg
ljmp
das
int3
roll
inc
add
jbe
pop
add
rclb
jg
rcr
daa
sbb
mov
loopne
xchg
mov
push
js
inc
pop
pop
jp
enter
dec
in
sti
test
jo
mov
dec
mov
xor
and
incb
mov
push
rclb
cmp
mov
dec
bnd
test
sub
adc
adc
jecxz
aas
inc
lret
adc
mov
mov
scas
sti
and
fistpll
sbb
xchg
pop
push
pop
and
in
pop
jl
data16
or
inc
sub
imul
mov
adc
imul
mov
cmp
out
mov
nop
jns
dec
imul
jg
sbb
xor
mov
loope
cmpsl
sbb
lcall
add
loop
dec
mov
fwait
mov
ljmp
mov
adc
loop
xor
cmpsl
mov
and
mov
aaa
push
add
mov
in
inc
push
shr
add
lds
lods
es
adc
cmp
std
add
movsl
sti
xchg
jno
adc
imul
repnz
lock
rcr
fistps
daa
adc
test
test
xchg
jne
xorb
mov
mov
cmp
push
stos
xor
movsb
adc
sub
pop
jae
rol
aas
in
insb
sbb
mov
or
xchg
lods
xor
mov
sub
mov
iret
icebp
pop
cmp
jp
lcall
aad
mov
adc
mov
es
jmp
dec
ljmp
cli
shrl
movsl
and
bound
adc
mov
test
nop
sbb
mov
sub
cmpl
mov
test
decb
jle
das
mov
sbb
xchg
fisubrs
movsb
xor
loope
and
aad
push
sarl
in
mov
les
or
rcrb
in
in
jnp
push
mov
adc
fisttps
ja
int
outsl
adc
pop
or
cmp
leave
pop
lcall
add
sub
push
imul
jg
inc
shlb
push
les
and
das
jns
add
je
popa
jbe
rorl
xor
jl
xchg
std
decb
decl
les
sahf
outsl
cmpsb
push
push
jb
es
mov
hlt
add
sbb
xor
mov
mov
jbe
lock
enter
jo
jmp
push
sti
sub
push
add
es
push
cwtl
and
xchg
arpl
addr16
ljmp
inc
mov
add
jl
shrl
push
int3
and
incl
test
ljmp
test
jb
mov
push
and
leave
inc
nop
adc
loopne
inc
mov
cmpl
xchg
test
fstl
fstl
loop
shrb
cmpsb
aaa
push
add
lds
fdivrl
ljmp
cmc
add
pop
negb
lahf
dec
jo
cli
std
adcb
mov
add
lcall
mov
les
mov
dec
fs
sbb
and
cltd
push
push
inc
in
jp
mov
flds
bound
fisubrl
std
ret
pop
sub
sahf
jns
cld
cmpsb
std
divb
imul
lahf
hlt
adc
push
push
mov
mov
jl
ljmp
outsl
sti
cs
and
out
bound
loope,pn
lret
adcl
scas
ret
aad
shll
hlt
inc
jmp
out
rolb
mov
pop
mov
sbb
adc
mov
stos
shll
adc
scas
sahf
cwtl
and
test
jge
cmp
lods
mov
incl
mov
mov
or
fbld
je
xlat
pop
lods
lahf
inc
fucomi
sub
pop
fildl
adc
pop
fnsave
jp
cmp
pop
incl
ficoms
lods
lock
mov
and
sarl
push
movsb
clc
xor
loopne
mov
xchg
leave
and
cli
ljmp
outsb
adc
cs
scas
mov
addb
outsl
std
mov
inc
pop
mov
mov
push
outsl
push
jbe
movsb
adc
lock
push
mov
mov
call
mov
scas
mov
push
and
push
cld
inc
popa
cmp
push
ljmp
xchg
sbb
or
frstor
das
loope
popa
popf
mov
mov
mov
cmp
lcall
jg
gs
rorb
xor
out
add
pop
mov
push
lea
adc
in
call
outsl
icebp
or
sub
daa
mov
js
mov
adc
mov
mov
loopne
and
sbb
mov
loop
clc
adc
mov
push
add
cli
or
mov
fisttpll
fldcw
lcall
mov
fdivrs
lods
shrl
cld
inc
cmp
or
jb
sbb
aas
mov
jle
das
inc
xor
lret
std
or
sub
push
cmp
pop
ret
and
cmpsl
push
call
fistl
sub
call
xchg
test
push
pop
mov
mov
subl
mov
pop
sub
xchg
pop
ret
shlb
int3
and
cmp
dec
aas
aad
or
inc
dec
xchg
cli
les
movsb
and
jle
sar
mov
stos
lahf
dec
hlt
mov
cli
in
adc
and
cmp
stc
ds
cmc
mov
adc
fnstsw
in
push
gs
sbb
clc
out
int3
adc
roll
dec
sbb
dec
cli
sbbb
mov
cltd
cmp
inc
dec
jle
insb
inc
dec
mov
mov
loope
sbb
repnz
jl
rcrl
sti
cmp
mov
shlb
xor
and
out
lods
add
cmpsl
sbb
cwtl
add
daa
data16
mov
pushf
xor
lret
xorb
mov
pop
push
mov
test
dec
cmc
enter
or
sti
xor
mov
adc
popa
inc
test
pushl
jle
xor
js
enter
cmpsl
cmp
mov
jle
mov
or
into
sbb
or
ljmp
lods
adc
pop
ds
je
and
fcomps
push
cmpsl
std
mov
push
lea
cmp
ljmp
adc
ret
dec
daa
enter
hlt
and
leave
addb
mov
jb
sbb
jecxz
inc
push
fs
mov
pushl
xchg
pop
es
dec
aad
xor
in
lcall
in
and
mov
popf
lock
popf
das
inc
sbb
icebp
lcall
lock
bound
cmp
mov
mov
adc
loopne
mov
and
clc
dec
mov
in
loope
sub
out
fidivs
and
push
mov
add
mov
push
test
xor
jecxz
pop
bound
in
push
and
fistps
mov
cmp
adc
pop
mov
cmpsl
mov
and
adc
push
pop
jne
mov
cli
pushf
adc
nop
mov
adc
xor
mov
pushl
mov
mov
adcb
mov
pop
add
fs
fbld
hlt
test
mov
and
je
scas
jo
pop
adc
sbb
jl
jo
ja
sub
addb
subl
pushl
mov
sbb
inc
arpl
adc
jl
jg
fnsave
loop
mov
mov
cmp
aad
jecxz
in
stc
shll
sbb
lock
lret
adc
inc
pop
std
and
rcrb
adc
jo
add
int3
adc
fadds
sbb
insb
ljmp
jmp
test
mov
xor
jo
scas
xor
xchg
dec
bound
call
xor
mov
sbb
shl
mov
inc
mov
in
xchg
or
push
pop
out
adc
pop
loop
gs
sbb
jecxz
int3
int
subl
pop
add
xchg
sbb
mov
mov
fstpt
hlt
inc
jno
out
xchg
xlat
sbb
xchg
ljmp
loopne
inc
add
test
xchg
cmp
insl
xor
outsb
cld
cmpsb
adc
fldt
sbb
dec
dec
out
negl
mov
pop
scas
xchg
clc
sub
cmp
xchg
test
sbb
sub
pop
push
xor
out
div
sub
mov
ja
jg
aam
push
lock
ret
sub
test
mov
jo
inc
popaw
or
xor
mov
xchg
jnp
lds
daa
mov
pop
adc
cmp
push
mov
cmpl
jnp
outsl
lcall
enter
lods
out
jp
popa
adc
std
jg
xchg
aas
insb
jg
xor
add
dec
jno
lock
arpl
xor
xchg
adc
lock
fistpll
push
push
inc
rcrb
into
aas
dec
cli
push
outsl
jne
and
dec
pop
or
mov
js
rolb
jg
aaa
mov
inc
mov
aad
pusha
fldl
fdiv
aaa
outsb
loopne
and
dec
ds
mov
push
nop
inc
inc
jmp
xchg
and
into
pop
and
movsl
push
inc
test
pushl
jb
and
lods
ljmp
mov
jbe
inc
fs
jg
mov
push
or
add
hlt
push
testb
mov
loope
cltd
scas
daa
inc
shll
into
cmp
pop
pop
push
in
or
add
cmp
scas
jns
outsl
lock
dec
sahf
pop
hlt
mov
iret
stos
fnsave
sub
and
and
rcr
loopne
cwtl
mull
ja
aad
mov
loope
inc
out
sub
cmp
push
add
jg
gs
lcall
pushl
sbb
sub
inc
mov
mov
shrl
das
aad
inc
add
sar
sub
loope
dec
into
add
pushl
js
lahf
mov
jge
add
mov
inc
int
lds
subl
cs
push
hlt
stc
add
ljmp
or
sub
cmp
cmp
dec
add
pop
push
popa
test
add
addr16
dec
pop
push
repnz
add
loopne
sub
adc
fisubrl
cmp
cli
add
scas
or
cmc
add
aas
popf
punpckhdq
test
loopne
cmp
addr16
fs
adc
mov
or
mov
jmp
inc
mov
add
out
lahf
jmp
sub
jmp
mov
sbb
std
sbb
testl
sti
cwtl
or
xchg
movsb
ss
daa
addr16
mov
add
lahf
adc
aas
test
adc
sub
das
hlt
and
ret
std
cmp
leave
jns
or
mov
cld
sub
out
pushf
addr16
push
and
xchg
xchg
in
fwait
mov
nop
mov
into
jb
add
push
cmp
dec
mov
movsl
push
addb
pop
lods
jle
fnsave
push
jle
add
sbb
repnz
test
xchg
sbb
lea
xchg
in
sub
pop
jp
mov
lock
incl
lds
cmp
jbe
xchg
push
enter
js
sar
aaa
hlt
outsl
push
mov
mov
lea
icebp
dec
mov
std
outsl
hlt
fstps
mov
mov
dec
mov
fcomi
outsl
jne
iret
xchg
cs
hlt
cmp
sti
cmp
mov
xor
adcl
fimull
jno
rcll
mov
mov
cmc
hlt
ja
and
out
repz
data16
in
rorb
mov
mov
jns
xor
dec
data16
fmul
jo
fs
bound
pop
loop
hlt
shrb
out
pushf
movsl
pushf
or
inc
pop
call
fs
mov
test
push
adc
shl
rcr
adc
cmp
orl
xor
adc
fsubs
loop
mov
ret
adc
outsl
cmc
lcall
mov
add
and
rolb
in
xchg
cwtl
test
arpl
ljmp
clc
and
xchg
mov
and
inc
sbb
arpl
aam
or
cmp
xor
adc
aas
mov
adc
clc
pop
imul
adc
sbb
ljmp
xchg
and
cmc
sub
pop
call
adc
das
or
fsubs
inc
inc
lock
adc
mov
sub
into
dec
mov
out
loope
mov
mulb
pop
mov
and
test
jg
adc
cld
or
repnz
bound
dec
and
jmp
pop
out
insl
lahf
ja
adc
dec
sub
dec
inc
orl
mov
jbe
cmp
adc
adc
sti
xchg
push
sub
loope
and
add
adc
xlat
xor
subb
stc
adc
cld
and
adc
cmc
inc
mov
push
xchg
pop
and
or
aaa
sub
jbe
push
out
inc
or
and
rcll
orb
cmc
and
dec
mov
test
mov
subb
cld
push
gs
mov
jmp
out
dec
rcrb
lret
insl
cld
ret
push
xor
insb
push
in
not
or
sbb
jge
sub
pop
push
mov
and
sub
mov
and
addb
add
sub
loope
mov
daa
lock
lahf
aas
popa
cld
mov
dec
out
xchg
imul
lods
cmp
subb
pop
or
dec
out
rcr
lret
pop
inc
int
ret
sbb
pop
mov
hlt
leave
or
xor
inc
xchg
fs
mov
inc
cltd
stos
pop
jnp
sub
and
add
or
test
sbb
shrb
sub
jecxz
lock
adc
repnz
inc
sub
or
dec
inc
add
pop
inc
sbb
loope
dec
cltd
cmp
or
mov
or
in
mov
scas
or
lahf
mov
jbe
dec
jbe
test
and
ss
daa
addb
adc
or
xor
fcomi
inc
push
cltd
jnp
and
lahf
xor
repz
shlb
dec
sbb
hlt
fprem1
push
mov
mov
sub
fisubrs
dec
sahf
je
mov
div
call
push
jg
hlt
sbb
push
cmc
lea
shll
testb
mov
in
xor
push
and
out
add
icebp
jno
jns
or
dec
inc
jne
add
ss
cmpsl
mov
pusha
icebp
ror
cld
fsubrp
fistps
std
xor
faddl
inc
mov
add
push
or
sub
and
lods
in
sub
push
fsub
test
pop
dec
fs
xor
xchg
push
insb
add
add
fimull
jae
and
push
sub
add
push
aas
sahf
sub
sub
test
or
xor
xor
fcmovne
inc
xor
hlt
and
pop
jb
cmpsl
mov
lcall
add
pop
shr
sti
sbb
imul
imul
int3
inc
xor
pop
loopne
pop
adc
daa
dec
mov
inc
pop
push
aaa
jbe
ret
xchg
push
xor
dec
mov
les
jbe
mov
or
shll
xor
sarb
lret
add
lret
cmp
and
sub
push
mov
fidivrs
inc
mov
fucomip
pop
push
jl
jecxz
icebp
cli
icebp
aaa
dec
sbb
aad
sar
ss
sti
jecxz
ds
js
or
out
lcall
mov
ljmp
pop
sub
nop
cmpsl
clc
outsb
cmc
sbb
addr16
cmp
pop
pushf
push
into
rcr
movsl
imul
pop
sahf
jmp
jl
clc
cld
inc
decl
rcl
or
push
inc
movsl
sbb
push
mov
clc
sbb
test
clc
or
imul
mov
pop
andb
mov
dec
icebp
jmp
cmp
std
incl
xor
add
pop
mov
outsl
clc
pop
adc
sub
jno
cmp
mov
clc
jecxz
jecxz
stos
fcmovnu
decb
jnp
clc
xchg
pop
insl
dec
mov
and
scas
push
cmp
sbb
mov
loopne
jmp
cwtl
pop
sbb
inc
mov
sub
xor
cwtl
clc
sahf
icebp
mov
push
xchg
insb
stos
cwtl
mov
and
adc
jl
sbb
out
sbb
jg
test
xchg
shl
cs
mov
add
rcr
mov
inc
cmpl
icebp
add
sub
sbb
mov
cmc
jne
fcmovbe
ret
je
jl
cmp
das
ret
decl
pusha
sub
jecxz
pop
cltd
sub
std
cmp
jp
adc
dec
jnp
out
sub
dec
push
or
cmpsb
and
call
rol
inc
adc
adc
mov
cmpsb
stos
jmp
and
jmp
repnz
insb
mov
out
or
adc
ljmp
call
and
add
add
sub
fsubs
lds
push
nop
mov
decl
ffree
pop
inc
enter
fidivl
adc
sub
testb
outsb
jne
xchg
add
jns
and
adc
adc
bound
fmul
jmp
or
push
jge
in
lahf
add
divl
cmpb
mov
ljmp
and
adcb
push
xchg
mov
jg
push
mov
popa
js
add
dec
test
fwait
pop
and
loopne
add
out
lea
inc
pushf
xchg
decl
xor
rep
sub
and
add
mov
lcall
adc
wrmsr
jle
arpl
or
aaa
sbb
cmp
mov
adc
cld
fcoms
pop
out
and
test
sbb
movsb
retw
lcall
or
sub
sarl
mov
out
jns
test
inc
cli
ljmp
jne
daa
nop
jecxz
rorb
sub
add
dec
jp
inc
sbb
sahf
or
fisttps
adc
stos
jl
adc
loopne
pop
fistpl
dec
sub
xor
sub
dec
jp
gs
stc
dec
lock
mov
sub
xor
bound
movsb
sub
fs
xor
loopne
and
mov
xor
rcl
mov
inc
cmpsl
add
inc
subb
mov
lock
loopne
push
pop
arpl
mov
into
js
xchg
je
or
in
lea
mov
ja
test
jg
in
jg
adc
lds
or
xchg
das
pusha
dec
and
or
inc
pop
adc
addl
mov
or
lret
or
jo
and
pop
xor
inc
dec
decl
pop
or
sar
jg
add
add
cmpl
mov
cli
call
jp
addr16
sbb
lods
push
add
das
hlt
neg
aaa
fwait
jl
arpl
dec
movsl
fstpt
out
and
push
xchg
stos
push
rcrl
clc
jne
jmp
mov
leave
adc
sbbl
or
subb
mov
repz
decl
insb
add
iret
push
test
decl
sti
add
cmp
xor
cwtl
sbb
mov
dec
call
std
jg
outsl
mov
je
pop
das
lahf
xor
jle
or
mov
call
mov
cmp
add
sbb
lahf
rcr
or
mov
sbb
xchg
rorb
dec
inc
xchg
std
outsl
dec
lcall
jo
ror
test
inc
jbe
lods
arpl
jmp
sbb
test
sbb
mov
cmpsb
cmp
mov
les
push
xchg
in
jnp
or
in
xor
fsubrl
aaa
or
clc
push
nop
stc
ljmp
stos
ret
dec
pop
sbb
xlat
mov
mov
loope
inc
loopne
cmp
mov
shrl
adc
cld
decl
inc
xchg
pop
push
sub
pusha
je
push
in
aaa
clc
cmp
and
dec
jl
inc
fiaddl
setp
sbb
pop
aaa
pop
sbb
test
imul
adc
xor
jg
mov
aad
jecxz
jo
leave
movsb
xor
shll
ljmp
outsb
pop
pop
pop
jne
inc
out
inc
lods
fldenv
cmp
shl
cld
call
imul
add
jl
jo
and
pop
mov
mov
sbb
xor
add
mov
add
outsl
rclb
lea
out
sbb
aad
pop
or
das
and
jne
mov
fildl
jge
fistpll
test
incl
inc
or
adc
pop
cli
fisttpl
out
in
push
mov
adc
push
test
arpl
inc
jne
aaa
cli
pushl
mov
gs
sbb
movsb
adc
pop
jae
inc
cwtl
dec
push
int3
inc
aaa
or
add
cmp
stc
pop
xchg
insb
rcll
int
cmp
adc
mov
enter
subb
icebp
movsl
call
sbb
xor
fsts
call
out
mov
and
add
std
inc
jnp
fldl
in
and
repz
cmp
dec
dec
pusha
out
in
and
mov
adc
call
lcall
in
push
decl
out
aad
xchg
and
dec
inc
add
andb
or
fisttpl
adc
in
faddl
mov
pop
adc
leave
or
aam
cs
xchg
fidivl
xchg
sbb
mov
movsb
sub
setae
js
out
adc
cli
mov
jmp
mov
xor
rcrb
push
pop
ds
loop
or
mov
or
pop
in
sub
jnp
sbb
ljmp
clc
dec
pop
sbb
bound
adc
loope
xchg
mov
notb
mov
nop
sbb
pop
xchg
mov
andb
jge
mov
pop
inc
call
xchg
push
mov
adc
stos
push
mov
icebp
mov
lods
mov
andl
loopne
negl
in
mov
inc
or
adcl
sbb
mov
jg
rclb
mov
roll
xorb
js
sbb
or
mov
fadd
push
andb
addl
jb
lock
roll
fcmovnb
adc
ljmp
or
lret
popa
popf
in
and
or
add
xchg
add
out
repz
into
or
xchg
mov
sbb
inc
cwtl
cli
mov
add
jle
test
cltd
mov
push
pop
jle
xor
testb
pushf
add
test
add
pop
outsl
pop
shrb
data16
popa
loopne
and
push
sub
je
dec
outsb
sahf
xor
pop
test
jbe
sub
pop
adc
sub
sbb
nop
or
std
mov
sbb
pop
das
xor
out
mov
and
or
sub
lret
xor
adc
sbbb
xchg
call
cmp
fisttps
test
add
xor
sub
adc
jae
mov
test
jb
mov
mov
mov
jmp
js
adc
lcall
or
out
mov
aas
repnz
mov
shll
insl
cltd
imul
outsb
sbb
adc
push
sub
inc
dec
and
aas
push
xchg
icebp
adc
and
fistpll
daa
xor
add
mul
mov
add
pop
mov
movsb
adc
push
vmread
testl
sbb
in
imul
push
jne
push
and
dec
cmp
xor
and
sbb
dec
sub
sbb
adc
cld
xor
lock
and
mov
js
in
fldl2e
ret
jle
sbb
mov
push
dec
mov
mov
ds
xchg
cmp
insl
and
movsl
cwtl
xor
inc
rolb
lock
repnz
mov
mov
sbb
add
fisubrs
fadds
fldl
cld
jae
inc
loop
fisubl
mov
out
mov
push
sub
or
xchg
addr16
mov
mov
sahf
cwtl
insb
or
xor
mov
scas
jle
out
cs
pushf
rsm
jp
adc
rcl
adc
add
xor
add
std
adc
cmp
loopne
lahf
fwait
mov
and
pop
inc
add
xchg
shlb
adc
in
fadds
inc
sub
push
dec
inc
mov
add
mov
cmpsl
neg
or
lods
pusha
testl
xor
out
jl
inc
lods
or
push
pop
inc
mov
or
adc
xor
adc
je
inc
sbb
rclb
mov
and
pusha
sbb
add
add
push
scas
test
push
inc
std
push
stc
xor
imul
movsl
loopne
xchg
sbb
and
fstl
mov
stos
int
adc
mov
mov
bound
dec
test
mov
mov
es
test
les
pop
xchg
stos
jecxz
lock
jbe
add
xchg
ljmp
stos
sti
jb
enter
jo
nop
inc
sbb
inc
xor
movsb
inc
inc
out
inc
jecxz
mov
inc
jae
jp
push
popf
shll
mov
inc
sbb
pop
fsts
aaa
cmp
dec
adc
sub
or
adc
jne
sbb
out
xsaveopt
mov
insl
enter
fildl
xchg
pop
out
jl
out
enter
fists
or
add
mov
xchg
sbb
ss
and
push
icebp
in
adc
andl
and
fisttpll
or
lock
add
cmpsb
inc
into
rorb
inc
sbb
test
pusha
cwtl
popf
xor
cmp
mov
out
sahf
mov
mov
dec
and
jo
mov
loopne
mov
mov
in
shlb
in
sahf
mov
push
or
jns
pop
add
or
sbb
inc
cmp
sub
mov
adc
daa
add
xchg
filds
ja
inc
bnd
adc
cmp
addb
mul
adc
stos
lods
sub
xchg
push
mov
ljmp
repz
dec
inc
add
and
test
dec
pop
ljmp
push
push
nop
jne
sbb
mov
adc
add
into
mov
jnp
sbb
add
addr16
mov
dec
sbb
les
mov
sahf
std
mov
rclb
adc
and
xor
and
inc
movsl
pusha
mov
lea
sub
aas
je
push
mov
aas
and
fs
mov
cmpsb
dec
stos
push
sub
loop
icebp
cmp
adc
or
and
mov
jp
inc
clc
fstpt
out
ljmp
and
jnp
add
or
pop
adc
sbb
push
push
cli
xor
add
movsl
imul
inc
cmpsb
sub
xchg
xlat
lods
inc
cmpsb
fbld
and
jmp
add
cmpsl
jo
adc
popa
fstpl
mov
xor
cmp
mov
fidivrl
ja
xchg
cmp
mov
fcmove
push
dec
cltd
pop
xor
je
scas
rcr
std
jg
ljmp
daa
mov
aaa
lods
rcl
and
mov
jle
or
daa
pop
add
nop
inc
aam
inc
adc
mov
shll
inc
aad
jg
add
data16
call
lock
sub
dec
xor
iret
push
insl
in
arpl
xchg
cmp
ljmp
push
or
sub
and
sub
movsl
or
lods
loopne
ja
dec
mov
cmp
int
pop
adc
hlt
incl
mov
xlat
push
cmp
inc
cmp
ljmp
adc
shl
fdivs
push
adc
xchg
es
adc
call
aas
pushf
cltd
je
add
adc
loope
inc
into
outsb
dec
pop
jo
stos
jle
push
das
or
sar
and
add
xor
lcall
ljmp
lods
pop
nop
stc
jmp
or
sbb
std
jmp
adc
cld
or
lea
jb
dec
arpl
mov
std
in
push
or
inc
adcb
dec
and
mov
das
jg
pushf
lahf
sub
mov
daa
sub
jae
jmp
add
adcb
decl
add
pop
xchg
pop
cmp
cmp
jb
filds
not
dec
add
add
into
pop
cmp
movsb
jg
mov
pop
cmp
push
je
push
sbb
daa
sub
lcall
cmc
outsl
add
and
add
add
push
inc
mov
pusha
and
lcall
sbb
hlt
int
xchg
inc
add
incl
sti
xchg
dec
js
inc
cmp
and
add
nop
sbb
subb
and
stc
mov
scas
repnz
call
cmp
insl
in
push
loope
pop
pop
pusha
add
cmpsb
sbb
dec
or
lock
ffreep
pushf
js
sbb
testl
idiv
incl
mov
imul
repnz
pop
sbb
fldcw
and
call
inc
cmc
addr16
inc
xchg
add
aad
es
das
loope
jg
mov
int3
movsl
das
jmp
and
je
mov
push
add
lock
int3
mov
sarl
iret
push
dec
mov
test
aaa
fdiv
out
pop
add
jecxz
jecxz
incb
mov
mov
mov
mov
push
aam
mov
leave
add
mov
push
mov
adc
and
xor
sbb
lcall
xchg
movsl
and
cmc
xchg
daa
popa
es
ljmp
pop
ret
int3
lret
into
fisttps
mov
or
pop
popa
push
inc
jnp
pop
pop
mov
cmp
and
fisubs
xor
push
imul
jmp
test
sbb
xchg
and
clc
sbb
mov
inc
aaa
sti
inc
and
xchg
aad
stos
sbb
mov
ret
fdivl
aad
fldt
cltd
inc
scas
out
enter
xor
incl
xchg
sbb
push
inc
mov
leave
cmc
in
and
cs
sbb
stos
adc
pop
in
iret
fs
or
mov
xchg
cli
push
cwtl
push
sub
mov
hlt
fwait
pushl
sbb
pop
cs
jne
lds
fiadds
add
cmc
mov
movsl
xor
in
inc
sbbl
or
push
out
inc
call
fs
sbb
cld
popa
adc
out
inc
stos
pop
daa
mov
jns
xchg
andb
imul
dec
test
cld
fbld
xor
fwait
xor
mov
insl
mov
mov
data16
testl
dec
or
lcall
sbb
inc
icebp
pop
sar
aaa
mov
pop
sbbb
imul
fildl
idiv
mov
popl
addb
xchg
cmp
pop
pop
jle
sti
xchg
cmc
pop
cwtl
lret
sti
fwait
xchg
ljmp
pop
jg
in
ficoml
add
push
dec
jge
clc
pop
dec
pusha
push
andl
push
add
shl
adc
sti
ljmp
dec
and
sub
lock
mov
add
add
or
sub
or
pop
inc
jge
adc
loope
psadbw
cmp
ret
outsl
xchg
jmp
rcl
in
adc
fbstp
cld
xchg
fldcw
loopne
enter
fs
push
pop
je
cmp
rcll
std
or
cld
aam
cs
cmp
add
push
fisubl
inc
hlt
add
loopne
cmp
loopne
loope
ds
adc
ret
lods
push
adc
sarb
and
cmpb
bound
push
inc
push
jmp
imul
and
and
xor
leave
add
sbbb
xchg
fisubs
sub
inc
pop
inc
lds
add
stos
xor
xchg
cmpsb
and
jl
jle
call
call
aas
rorl
daa
dec
stos
adc
sbb
aaa
inc
in
xchg
faddl
ljmp
sub
xor
add
or
cld
or
lock
mov
lret
add
aad
sub
cs
xchg
mov
fdivr
or
push
xor
adc
jae
inc
push
cmp
add
add
cmc
fcompl
inc
rorl
mov
clc
jmp
push
sbbb
push
push
mov
mov
call
bound
movsl
es
adc
xchg
aas
or
and
and
mov
jmp
mov
mov
loopne
mov
movsl
inc
push
xchg
inc
fs
cli
add
je
in
adc
clc
cmp
or
add
icebp
rol
jmp
in
inc
nop
std
jg
into
movsl
mov
jbe
and
jne
les
lcall
outsb
sar
pushf
nop
or
dec
int
icebp
dec
nop
sahf
mov
ret
outsl
push
xchg
add
push
push
xor
xchg
cmc
outsl
lock
add
ja
lods
pop
xor
sbb
xchg
pop
clc
outsl
lock
shlb
or
addr16
sub
xlat
pop
loopne
std
pop
mov
and
xor
out
mov
int
mov
sub
add
cwtl
sub
adc
mov
or
imulb
and
test
mov
pop
cltd
pop
movb
xchg
popa
dec
cmp
decl
cli
push
loope
fcmovu
adc
push
add
xchg
adc
or
and
xchg
add
sbb
leave
pop
sbb
ljmp
mov
inc
sub
lea
out
adc
int3
add
mov
in
adc
add
addr16
sbb
jmp
test
in
push
lods
les
dec
inc
push
push
in
xchg
cli
dec
repz
add
sbb
jb
aaa
or
cld
xor
call
dec
add
stc
dec
sbb
push
into
lods
decl
pushl
sub
leave
sub
in
push
dec
in
lock
scas
xchg
cs
int
stos
mov
sbb
push
inc
ds
outsl
ret
clc
adc
mov
in
adc
in
test
orl
adc
loopne
sub
jle
xor
sub
and
mov
cmp
ret
pop
mov
mov
pop
xchg
push
cmp
test
mov
sbb
mov
lret
ljmp
push
mov
or
mov
cmp
cmpsl
aam
add
sbb
xchg
inc
inc
call
mov
pushf
mov
leave
pop
inc
repnz
dec
rorl
push
jp
lods
xchg
push
or
push
mov
or
and
rolb
loop
mov
inc
icebp
mov
in
int
lods
ds
push
add
adc
add
scas
sti
fistl
pop
inc
call
insb
pusha
sub
hlt
xchg
fstpt
mov
outsl
xchg
jno
stc
and
outsl
cmp
mov
decl
push
fiaddl
xchg
jecxz
lahf
xor
sbbb
add
dec
mov
or
lcall
jno
adc
es
xchg
cmp
push
mov
sub
add
lcall
sbb
jl
jg
add
adc
incl
roll
add
call
mov
sbb
lods
cmpsl
enter
or
push
push
mov
push
pop
cld
push
xchg
fnstsw
mov
add
nop
xchg
gs
or
loope
aad
into
cmp
shlb
and
fbld
xor
sbb
mov
lahf
sbb
out
stc
adc
inc
sbb
loop
loopne
or
jg
cmpsb
loop
mull
push
std
mov
loopne
mov
and
xchg
dec
loop
xchg
inc
sbb
shrl
xor
or
sbb
or
orl
mov
shlb
jg
xchg
dec
mov
loop
or
clc
xchg
clc
lcall
pop
push
cmp
inc
daa
ret
and
jle
shr
incl
dec
ret
faddl
hlt
sub
inc
jmp
stc
or
adc
or
std
inc
lcall
mov
fptan
push
les
outsl
push
test
or
daa
movsl
mov
cmpsl
mov
bound
incl
ljmp
aas
mov
and
fmul
out
pcmpgtw
leave
dec
pop
ret
adc
adc
lods
cmp
mov
pop
aaa
popa
mov
mov
mov
jle
sbb
mov
and
test
loop
popf
cltd
sub
sub
arpl
inc
fwait
xchg
add
adc
addl
push
fsubr
dec
fwait
mov
jo
xor
enter
adc
lcall
data16
cwtl
rclb
movb
and
int3
ljmp
incb
inc
rolb
rorb
cmp
mov
pop
mov
jo
adc
push
mov
push
xchg
cmp
mov
cmpsb
insl
nop
sub
orb
adc
push
pop
into
and
popf
clc
xchg
adc
mov
add
dec
and
call
inc
icebp
pop
push
cltd
test
pop
sub
pop
adc
daa
pop
sbbl
loope
jmp
decl
mov
mov
adc
jnp
sbb
repz
into
mov
add
adc
mov
pushf
movsb
fildl
xor
cld
testl
inc
xchg
mov
jp
jge
andb
jmp
add
rolb
xchg
outsl
stos
mov
addl
mov
or
not
fiadds
push
insb
enter
dec
or
inc
xor
mov
arpl
or
imulb
pop
scas
imul
push
insb
pop
out
adc
adc
outsb
std
add
cmp
mov
ret
fldcw
fsubs
xchg
sub
sub
loope
insl
pop
mov
out
jge
cwtl
test
int
jno
inc
aad
mov
enter
das
mov
inc
or
and
or
test
or
into
push
add
and
lds
das
stc
sbbb
shr
add
xchg
adc
and
fs
hlt
push
cmp
call
cmp
mov
iret
rorl
pop
mov
add
dec
stos
xchg
ljmp
lcall
pushl
push
push
cmp
insb
mov
inc
xchg
dec
pop
push
pop
pushf
cmpsb
out
popa
and
jg
or
jnp
adc
pop
je
call
xlat
mov
lods
or
jbe
xchg
or
jo
dec
outsb
iret
inc
dec
sbb
sbb
cs
sbb
in
enter
add
mov
enter
or
fdivrs
xor
or
arpl
push
inc
pop
fsubrp
testl
test
adc
neg
ret
in
lahf
ficomps
mov
push
imul
pop
pop
pop
test
cmpsl
jecxz,pt
xor
push
adc
sub
loope
fs
ret
jno
jae
inc
sarl
out
jp
pop
js,pn
lods
hlt
insb
xlat
lock
sbb
adc
mov
adc
jae
arpl
fcoms
add
sbb
cli
pusha
cmp
stos
mov
add
and
shl
jl
inc
data16
fcomp
adc
mov
jp
iret
cmp
and
xor
ret
int
mov
add
insb
or
add
mov
daa
in
dec
mov
stos
cmpsb
jmp
ja
cwtl
loope
inc
dec
jmp
add
mov
mov
iret
bound
popf
mov
or
sub
mov
adc
push
sub
rclb
push
xchg
popl
jp
shll
lcall
xor
je
pushf
add
mov
mov
je
std
inc
hlt
mov
test
leave
cmc
dec
add
adc
pop
inc
repz
std
ljmp
adc
daa
xchg
es
repz
add
rorl
loop
pop
incl
or
or
xor
scas
sub
or
mov
adc
lods
cli
rcll
xchg
mov
cli
incl
or
inc
stc
rolb
pop
popa
xor
push
popa
adc
dec
adc
mov
push
ja
test
outsl
cld
lcall
sub
cs
fstl
inc
push
lds
clc
call
lret
push
xchg
loop
mov
xchg
add
das
jg
rcll
ret
idiv
inc
lea
sahf
xchg
rcr
mov
mov
outsl
ljmp
adc
ljmp
add
test
push
incl
mov
les
push
movsb
mov
leave
inc
rcrb
add
add
or
stos
cli
in
decl
jecxz
or
push
enter
inc
lret
call
aaa
ja
cli
testl
cld
and
cli
jmp
iret
call
pop
xorb
rcl
repnz
adc
push
add
mov
and
ljmp
or
fnsave
inc
xchg
adc
inc
sbb
dec
in
fstp
mov
cmp
dec
adc
es
popa
xchg
addb
iret
inc
dec
cmp
or
cmp
push
lcall
mov
in
lds
das
hlt
sbb
push
scas
loop
adc
push
clc
test
pop
and
cmc
pushl
in
sbb
shlb
lahf
decl
das
hlt
xor
scas
insb
add
hlt
add
sbb
push
rcll
jb
jae
mov
incl
mov
call
sub
mov
rclb
addl
push
dec
jl
sbb
push
adc
jle
mov
mov
mov
mov
movsl
add
ljmp
lods
es
sbb
pop
call
jno
sbb
into
out
cmpsb
imul
lcall
and
sub
add
clc
lds
mov
imul
pop
mov
lcall
sub
or
mov
ret
sbb
xchg
and
mov
pop
hlt
jb
fdivrp
lcall
or
pop
sbb
adc
pushf
dec
jno
push
add
push
or
pop
or
sbb
add
sarl
ds
rolb
jns
sbb
or
adc
and
lahf
cs
add
int
mov
cmc
test
cltd
or
push
push
rclb
mov
movsl
bound
xor
or
call
ret
xchg
jg
sbb
stc
les
mov
inc
push
in
js
pop
mov
nop
xor
pop
xchg
mov
sbb
rdmsr
mov
addl
sahf
filds
fimuls
jo
and
jb
les
scas
sbb
lods
jle
int
pop
test
xchg
mov
out
mov
in
cli
jbe
sub
rcrb
call
insl
push
ret
lcall
imul
ss
jg
adc
pop
sub
inc
cmp
addl
mov
fsubrs
aaa
cmp
addb
mov
mov
hlt
in
xor
adc
inc
fcmovu
inc
addb
xchg
jle
pop
mov
and
int
imul
pop
jne
pop
fwait
jo
mov
cmp
inc
lcall
cwtl
call
adc
pop
imul
inc
jmp
test
das
inc
cmp
outsl
cld
lea
fs
pushf
test
add
in
shl
mov
mov
mov
stc
stc
iret
arpl
add
and
test
lds
call
add
jne
stc
rorl
sub
js
add
and
dec
mov
sbb
bound
sub
push
les
pop
adc
and
add
sbb
fcmovnu
inc
mov
test
es
cmp
call
cs
add
xchg
and
and
mov
out
inc
or
es
data16
insl
adc
pop
adc
pop
loop
std
adc
lahf
cli
fst
outsl
cltd
fldenv
das
hlt
inc
xchg
andb
push
scas
dec
test
lret
adc
stc
lahf
into
shll
adc
mov
clc
inc
mov
bound
or
adc
sbb
push
test
icebp
out
add
sub
adc
cmp
jmp
pop
adc
sub
mov
mov
xchg
fs
mov
ljmp
sbbl
test
loop
rclb
lock
loopne
iret
pusha
outsb
inc
or
xor
sti
daa
inc
and
adc
cs
popf
jae
loopne
xchg
and
jb
nop
sbb
push
psubusw
and
test
jb
pop
insb
lcall
adc
jne
push
shlb
dec
sbb
dec
mov
fists
pusha
loopne
jecxz
dec
inc
jno
enter
lock
lcall
adc
ljmp
and
inc
xchg
inc
adc
adc
xor
or
rcrl
stos
sub
push
xchg
push
test
repz
mov
and
add
out
push
xchg
dec
adc
andb
fisubl
inc
cs
sbb
and
pop
sbb
cmp
add
add
mov
sbb
aaa
lret
loopew
jge
decl
mov
push
mulb
cli
and
cmpsb
mov
jmp
push
mov
adc
aam
jns
xor
testl
ret
fimull
loopne
std
jg
xchg
sub
mov
testb
fidivrl
arpl
ljmp
filds
cmp
mov
jl
jbe
cld
adc
add
mov
or
std
outsb
cmpb
loope
add
fs
jb
pop
mov
pop
jl
stos
popa
mov
inc
cmp
push
or
cmp
pushf
imul
or
and
fs
lds
aaa
stos
outsl
cld
pop
rcrb
xor
ljmp
outsl
jg
sub
push
xor
xchg
add
ja
mov
into
mov
je
cmp
jl
and
jmp
lahf
xor
dec
ja
add
mov
inc
les
or
jg
inc
stc
orl
mov
cs
xchg
add
std
lea
inc
jge
test
push
clc
sbb
lcall
mov
xor
mov
push
lahf
push
mov
mov
ljmp
pop
jo
sarb
sbb
jl
dec
pcmpgtd
shlb
or
repz
xchg
xchg
fdivrp
and
and
push
sti
lods
fstp
nop
stc
cmp
sbb
add
ljmp
popl
mov
lcall
ljmp
pop
ljmp
dec
xor
jle
negl
cmpsb
cmp
and
ret
lahf
jmp
jnp
dec
outsl
inc
aaa
add
xor
loopne
incl
lods
fadds
arpl
cwtl
loope
fstpt
loop
test
pop
dec
adc
jnp
imul
ficoms
sub
test
push
std
add
out
dec
addb
ret
sarb
in
jo
ret
inc
call
mov
jnp
fidivl
je
lret
stos
test
pop
xchg
idivl
cli
decl
xor
aas
cmp
adc
inc
xor
cli
add
shlb
lret
and
fdiv
idiv
call
pop
cmp
lret
xchg
dec
scas
out
test
test
jp
rorl
scas
cli
ljmp
push
repz
add
add
clc
inc
mov
inc
jp
cmp
fiaddl
fmull
xorb
cmp
inc
test
lret
mov
push
add
lcall
das
sbb
jb
fs
dec
sbb
cmc
mov
sti
inc
loopne
jnp
out
int3
adc
and
lret
dec
lahf
call
add
lcall
es
jg
lock
popf
sub
js
mov
cmp
daa
sub
scas
mov
sub
sbb
inc
insl
call
jg
cmpl
sbb
push
xor
repnz
leave
jbe
sbb
outsl
mov
inc
inc
andl
cwtl
clc
xchg
clc
inc
sbb
in
cs
sbb
inc
dec
pop
outsl
mov
daa
adc
les
pushl
push
and
inc
inc
pop
mov
push
sti
inc
pop
mov
lea
scas
lods
mov
les
insl
fisttpl
cld
loope
inc
mov
and
sbb
decl
xor
push
out
cmp
popf
out
dec
aaa
mov
mov
push
popa
xchg
repnz
cmc
and
fstl
xor
stos
imul
cmp
mov
cs
xchg
sbb
xchg
pushf
fcmove
mov
jg
int
out
cli
push
stos
xchg
sbb
outsl
sbb
jle
push
shrl
adc
inc
and
xchg
movsl
xchg
sbb
jmp
ret
in
cld
stos
inc
add
sub
shlb
and
icebp
in
or
push
add
jle
xor
fistpl
lock
jnp
and
cld
ret
cli
cwtl
ja
decl
imul
add
inc
jge
inc
pushl
sbb
inc
push
or
loop
or
idivl
in
mov
push
add
jmp
mov
scas
out
hlt
fs
movb
dec
ret
hlt
add
sti
int
inc
test
loop
push
ss
aam
popf
out
lods
rcrb
add
dec
jg
xchg
jae
jmp
mov
add
jge
mov
leave
pop
lock
sbb
xlat
rorl
or
nop
mov
and
sub
and
cli
incl
in
popa
loopne
pop
or
outsl
jo
xchg
push
jns
cmp
pop
sti
repnz
jecxz
sub
cmp
pop
fadds
inc
push
adc
pushf
adc
mov
aaa
or
mov
int
fbld
and
xor
sbb
sub
adc
mov
shrb
sbb
fadd
aad
les
and
dec
dec
or
or
inc
lods
sbb
stc
adcl
mov
pop
sub
inc
xchg
jge
aaa
mov
int
pop
sub
ret
mov
sub
add
adc
iret
adc
mov
inc
inc
mov
inc
pop
mov
les
sbb
stos
ljmp
push
fs
out
and
adc
add
icebp
pop
repnz
orb
push
jne
adc
adc
or
xchg
bound
mov
addl
pop
scas
mov
mov
add
pop
cmp
gs
outsb
movb
pop
loope
xchg
jge
in
clc
aas
push
sbb
shlb
dec
and
inc
xchg
stos
mov
cwtl
inc
fdivl
adc
and
test
inc
xchg
outsl
add
test
inc
test
in
ljmp
and
rclb
cwtl
cltd
stos
dec
sub
sbbb
push
mov
sbb
mov
fnstsw
jge
or
mov
sub
outsl
je
push
and
rclb
mov
xchg
bound
loope
mov
js
fs
dec
adc
or
cwtl
xor
mov
outsb
test
inc
std
adc
sbb
mov
int3
cwtl
mov
pop
push
lea
push
aaa
stos
cltd
jo
xchg
jne
pop
gs
int3
inc
loope
xor
dec
out
inc
mov
int
or
into
jae
cs
data16
dec
add
mov
out
out
mov
icebp
aaa
maxps
or
sbb
fstps
jns
pusha
testl
mov
xor
xchg
sub
out
shlb
pusha
addl
sub
or
pushf
mov
aaa
or
fldt
das
jae
call
inc
or
mov
test
filds
sbb
bound
add
daa
pop
xchg
stc
lret
mov
pop
mov
scas
xor
mov
dec
lahf
addr16
pusha
repz
jmp
clc
push
ljmp
sub
inc
cmpsl
dec
add
rol
jle
ja
push
jg
ljmp
jmp
mov
or
repz
cld
xchg
aas
movsb
cld
xor
dec
push
mov
daa
iret
in
aas
add
xor
ljmp
leave
add
nop
test
inc
in
jmp
loopne
sbb
lahf
pusha
lahf
icebp
aas
and
xor
and
jmp
dec
push
xchg
aas
xchg
repz
stc
dec
mov
lcall
bound
inc
push
inc
aaa
pusha
lea
je
mov
or
mov
imul
stc
scas
add
dec
iret
enter
iret
push
push
jle
mov
pop
stc
pop
rep
ret
push
add
lahf
outsl
mov
filds
inc
sub
rcll
fcomi
stc
lock
adc
mov
ss
fwait
dec
adc
and
hlt
das
hlt
pop
repz
lahf
push
sub
repz
es
mov
fdivrl
cmp
mov
add
add
add
cmpxchg
fisttps
cmp
cmp
stc
xor
mov
or
jecxz
mov
add
sub
adc
pop
cld
test
aas
mov
mov
jmp
sub
stc
xchg
push
adc
arpl
push
cmp
sbbb
fnstcw
jmp
call
inc
je
sub
sbb
int3
movsb
ljmp
jbe
aad
jo
insb
jb
push
div
js
hlt
push
ds
add
dec
adc
fwait
sub
and
adc
fnstsw
sahf
sub
ds
js
push
into
sub
call
dec
repz
add
popa
repnz
scas
das
cld
xor
xchg
xchg
xchg
cmp
inc
insb
pop
adc
cmpb
mov
cmp
cwtl
mov
and
das
repz
jns
jae
outsb
dec
into
mov
aad
dec
shr
jbe
jbe
nop
or
jmp
aas
mov
add
jge
add
std
mov
pop
sub
mov
jp
rep
push
adc
call
pop
dec
adc
orb
loope
add
sbbl
loopne
xor
or
push
clc
sbb
jbe
add
mov
cmp
loop
xor
lock
incb
and
xor
push
iret
bnd
gs
ja
das
add
clc
and
adc
sub
adc
add
pop
xchg
mov
sub
or
push
mov
pop
mov
es
cwtl
ret
aaa
push
xor
push
and
adc
pop
or
popf
inc
cmpsb
add
mov
shrb
and
and
popa
xor
mov
cmp
sub
pop
pop
adc
mov
mov
inc
jg
popf
xor
xchg
mov
push
lods
xor
fnstenv
add
call
dec
sbb
into
jecxz
and
xor
jp
push
aad
mov
xor
lcall
frstor
jo
mov
out
sahf
fcomip
inc
pushf
rcr
sbb
mov
lock
mov
and
iret
loope
addr16
jmp
out
call
sbb
cwtl
fists
loopne
rcrb
ljmp
cli
jg
and
mov
inc
daa
sub
pop
outsl
sub
pushl
sub
inc
jo
mov
ds
inc
call
shl
pushl
cli
mov
adc
add
insb
inc
clc
icebp
daa
and
and
xor
or
and
cwtl
out
int
mov
dec
incl
fbstp
mov
cmp
push
mov
push
insl
cmp
enter
cmp
cmp
xlat
xchg
inc
pop
std
clc
fdivrs
and
shlb
cld
ret
clc
cmp
adc
adc
iret
arpl
out
xor
lds
add
or
sub
jg
js
jmp
imul
xor
ja
mov
push
xlat
sub
sarl
xchg
add
mov
daa
insl
sarl
jno
push
in
push
addr16
inc
push
add
jg
outsl
pushl
divl
clc
clc
mov
pop
add
lea
mov
in
and
add
jle
push
lahf
jecxz
add
in
lea
les
pop
fistps
add
iret
adc
cs
pop
push
movsl
aaa
fsubp
or
jmp
pop
mov
add
cmp
jg
cld
sbb
lock
cmpsb
pop
or
int3
mov
repz
in
pop
lret
mov
add
shl
inc
jg
lock
insb
in
out
jle
add
mov
out
insl
inc
cld
test
ret
std
cmpsl
loopne
pop
jmp
add
mov
ljmp
das
xchg
xchg
mov
add
addr16
sub
mov
jnp
stc
stos
hlt
jle
mov
lcall
jg
jns
mov
xlat
adc
or
shlb
inc
dec
jmp
pop
dec
mov
pop
add
ljmp
out
cwtl
cmc
sbb
sub
mov
or
gs
dec
aam
lea
mov
je
adc
cmp
jae
fwait
push
adc
je
or
lret
pop
lret
rclb
sbb
inc
jle
or
xor
xlat
add
and
xchg
leave
lods
adc
pslld
xchg
pop
push
lods
xlat
ljmp
mov
or
push
pushf
sbb
fs
sti
jae
dec
xchg
sbb
fwait
cmc
add
xor
test
out
out
or
mov
pushf
repnz
sbb
push
adc
mov
add
movsl
iret
jmp
daa
dec
and
fsubs
jecxz
addr16
cmp
les
ret
ljmp
aas
stos
pop
sub
mov
adc
add
cmc
movsl
add
inc
xor
adcb
pushf
call
add
shl
fwait
int3
std
jnp
inc
add
hlt
dec
mov
push
fcompl
xchg
in
jmp
xor
inc
out
inc
jge
or
xchg
inc
insl
jae
mov
cmp
lret
rcrl
push
pop
ret
push
sbb
pop
and
rcl
fdivl
loopne
dec
cmp
aas
and
daa
mov
leave
sub
cwtl
mov
rolb
fcomps
push
je
jae
sbb
aam
aam
fdiv
out
inc
cmp
inc
in
lret
adc
push
rorl
dec
add
dec
add
or
cmpsb
jle
shl
paddd
add
imull
fnstsw
pop
add
call
add
sbb
jmp
fldenv
inc
mov
jmp
add
adc
xor
sarl
in
and
cmpsl
das
or
xor
mov
out
out
popf
sub
fistpll
test
add
in
or
inc
xor
and
xchg
or
orb
pop
mov
add
or
dec
push
add
jo
das
sub
or
jle
lods
pop
inc
push
mov
push
add
inc
popa
pop
mov
mov
lods
sbb
push
loope
lahf
mov
xchg
or
sub
or
or
movb
sbb
add
bnd
scas
mov
inc
sub
int
aas
out
repz
mov
cmp
cmpb
aad
movsl
out
push
inc
push
nop
repnz
add
sbbb
or
xchg
dec
mov
xor
pop
and
sbb
push
jo
inc
hlt
mov
mov
je
add
inc
out
jae
mov
dec
jecxz
cltd
mov
ljmp
stos
data16
mov
outsl
pop
fiadds
jmp
icebp
mov
jmp
in
leave
inc
in
mull
ljmp
adc
mov
dec
sbb
cs
dec
adc
leave
push
sarl
es
montmul
cmpsb
pop
imul
cld
cli
push
je
jno
lea
in
aaa
les
push
and
or
push
or
adc
jp
dec
gs
ja
fbld
sub
sub
mov
xor
inc
inc
adc
add
dec
push
popf
inc
xor
xor
sti
adc
testl
xor
adc
and
add
cmp
add
fnstenv
mov
loopne
jl
clc
xor
sti
je
enter
movsb
or
lcall
adc
adc
dec
popf
sbb
xorl
cmp
cmp
or
lock
mov
dec
ficomps
jne
daa
test
aam
inc
add
cld
or
push
mov
hlt
xor
insl
inc
lods
adc
inc
xor
inc
cwtl
test
or
sub
leave
in
or
in
and
inc
sbb
pop
inc
add
pop
sub
push
or
data16
fcoms
mov
and
xor
mov
stos
adc
aaa
xlat
adc
pop
lret
sub
dec
arpl
xor
leave
test
insb
xor
lods
add
adc
cmp
aam
pop
leave
sub
jns
pushl
notb
add
addb
cmp
adc
mov
add
fiaddl
cmp
adcb
cmp
fdivp
dec
xor
inc
mov
call
icebp
loop
pop
lahf
ljmp
les
pop
fsubl
call
ljmp
mov
nop
nop
icebp
add
rcr
or
lcall
push
sbb
and
inc
or
mov
adc
push
sub
push
das
aad
mov
sub
outsb
lret
inc
sbb
sti
inc
sub
in
jl
add
inc
cltd
call
pop
push
aam
fsubrl
adc
sub
test
icebp
lods
shll
and
xchg
cmpsl
and
outsl
sub
inc
sbb
mov
addb
inc
test
push
stos
loop
test
or
cmp
adc
pushf
mov
and
ja
pcmpgtb
cmp
sbb
or
mov
add
imull
pop
xor
rorb
sbb
gs
sbb
adc
mov
stos
fiadds
ud0
dec
orl
mov
movsl
rolb
loop
add
mov
imul
jne
or
mov
dec
loopne
out
sub
fnstcw
mov
xchg
mov
fists
mov
mov
icebp
cli
or
inc
jno
push
cwtl
out
nop
push
psubd
inc
dec
sub
push
jne
sub
push
movsb
push
inc
push
ret
inc
stos
sbb
or
mov
mov
insb
push
add
in
xchg
adc
jne
sbb
int
in
pop
or
add
adc
pusha
or
push
and
cld
aas
and
pop
ficomps
push
sub
ficompl
aam
sub
sub
ret
clc
fucomip
outsl
std
mov
sahf
xchg
sub
jecxz
or
out
dec
movsb
and
sbb
pop
mov
lods
and
mov
jg
loop
leave
pop
cs
rclb
dec
or
ss
mov
fcmovb
sbb
out
clc
pop
cli
add
and
add
aad
cwtl
sbb
push
add
sbb
jmp
or
mov
lods
addr16
push
sbb
fmull
xor
lock
lahf
xor
xor
fs
call
sbb
call
mov
hlt
std
test
lods
imul
mov
jnp
aas
sub
stos
ror
loopne
inc
mov
or
out
out
leave
push
inc
xor
loopne
leave
cmp
push
xchg
mov
push
mov
decl
mov
dec
in
fmuls
or
jg
pop
test
std
mov
dec
loope
inc
nop
mov
adc
mov
dec
inc
adc
sbb
pop
fsubs
sbb
jle
jae
std
sub
ljmp
shll
test
jb
xchg
sbb
adc
sbb
adc
push
jne
mov
faddl
mov
sub
das
and
or
xchg
jno
test
neg
lcall
loop
mov
test
mov
pop
jae
es
imul
clc
push
shll
inc
test
adc
add
or
or
pop
xor
and
sbb
mov
adc
insb
sub
rcrl
cli
push
and
xchg
cld
xchg
test
in
jne
xor
aaa
push
add
mov
push
movsb
pop
mov
or
adc
cld
insb
jnp
ret
sbb
lock
add
xchg
aam
xor
rcll
mov
lods
daa
pop
pop
jmp
dec
fmull
mov
and
mov
imul
add
je
cmpsb
pop
dec
jmp
aad
sbb
add
je
cmp
repnz
test
and
stos
xchg
adc
popa
push
je
out
in
aaa
loope
xor
in
roll
fucomip
push
call
out
gs
scas
test
push
add
adc
push
xor
ds
aaa
enter
inc
mov
arpl
adc
and
lea
push
add
push
cwtl
notb
lock
jo
mov
and
inc
xchg
loopne
jge
lods
out
and
add
push
inc
mov
pop
ja
jle
inc
dec
xchg
dec
int
repz
xor
jnp
arpl
test
mov
and
out
icebp
push
or
aam
and
inc
jecxz
mov
leave
add
jl
aas
jne
xor
clc
sahf
testl
xor
inc
cmp
add
lret
testl
and
orl
jns
lods
xchg
xchg
mov
das
popf
cmpsb
jb
ja
sbb
out
pop
mov
movsl
adc
test
lods
es
lods
nop
and
ja
test
clc
ljmp
cmpsb
pusha
jae
int
daa
add
cld
mov
pop
in
sub
stos
cltd
ljmp
sub
add
and
ss
mov
in
cmp
pop
xchg
cmpsb
addl
xor
cmp
mov
adc
dec
add
or
andb
out
and
loopne
cmp
jae
push
jl
and
dec
nop
mov
sti
adc
adc
sbb
test
adc
jns
inc
lock
lock
aaa
lret
sbb
arpl
sbbb
test
stos
fsub
jmp
int3
es
push
in
sbb
int3
jbe
inc
pusha
pop
or
or
add
and
out
lret
xchg
ljmp
add
add
int3
xor
mov
aaa
ret
jge
inc
mov
aam
insb
or
and
or
das
fwait
les
cmpsb
js
dec
pop
popf
fwait
add
pop
clc
jmp
xchg
out
testb
addb
mov
sub
rorl
and
and
xchg
sub
adc
mov
pop
sbb
push
add
shl
lret
nop
sub
sti
push
add
inc
adc
pop
sbb
hlt
mov
out
aad
add
jne
jns
rolb
aaa
stos
jb
xchg
call
popf
cmpsl
es
push
sti
jp
and
jb
icebp
sbb
lret
shl
out
loop
xor
lret
test
fnstsw
mov
cmp
inc
mov
pop
jns
jp
push
inc
pop
and
aam
mov
inc
pop
cltd
gs
add
xor
push
xor
jo
out
sbb
push
loop
call
add
pop
and
inc
popf
mov
lods
sub
jno
cld
lahf
js
and
movsb
add
aas
popa
inc
je
dec
pushf
mov
nop
dec
out
xor
insb
and
fnstsw
xor
leave
cltd
xchg
or
orb
fcomps
or
jg
xchg
aaa
xchg
inc
movsl
jb
test
movsb
add
or
fidivl
mov
test
cmp
outsb
roll
bound
cmc
add
test
rcrb
add
xchg
pop
push
mov
cmp
addr16
cmp
ror
loope
das
sub
mov
mov
mov
dec
out
aaa
mov
sbb
roll
cmp
stc
add
adc
fistpll
loopne
or
sbb
xlat
or
dec
sub
idiv
ljmp
es
lock
cmp
ss
rcll
jb
sbb
mov
loop
call
test
add
ljmp
cmp
bound
scas
and
mov
mov
or
dec
add
mov
add
icebp
lcall
sbb
adc
push
add
xor
sub
dec
cld
outsl
add
cmpsb
and
lret
js
lret
daa
add
loope
incl
pop
mov
lds
arpl
or
insl
or
pusha
pop
es
daa
mov
push
xor
cmp
push
add
jmp
incl
sbb
or
in
out
daa
daa
pop
mov
aaa
adc
dec
inc
icebp
add
jae
icebp
pop
lea
insb
fildll
jecxz
pop
loope
add
push
lods
mov
pop
mov
cli
pop
push
incb
shrb
dec
jne
push
sub
dec
sbbb
mov
sti
and
insl
lock
xchg
and
cld
sbbl
ret
lock
add
push
dec
push
mov
popa
or
and
incl
scas
out
loop
dec
ja
mov
jg
icebp
and
jl
pop
aam
or
leave
sub
ds
cmp
jecxz
hlt
mov
pop
sub
aas
stc
lea
xchg
dec
imul
mov
ss
int3
mov
or
or
push
movsl
call
add
xor
cmpsb
ret
push
ss
add
nop
sub
ja
outsl
mov
lcall
inc
cmpsl
std
sbb
std
in
in
insb
xchg
xor
dec
cmp
push
mov
sbb
sbb
sbb
in
dec
mul
jne
add
out
push
scas
loop
inc
xchg
test
mov
sub
std
leave
pop
pop
inc
or
pop
orl
aad
sbb
lcall
jp
add
dec
sbb
orb
push
cmp
sub
push
lock
push
paddb
out
mov
je
lds
mov
scas
inc
adcb
mov
add
cmp
jg
dec
mov
or
add
xchg
jb
mov
mov
sbb
popa
or
fisubrs
stos
mov
add
pusha
push
add
xlat
or
lods
add
call
or
mov
add
mov
mov
loopne
loopne
call
pushf
rcrb
cmp
xchg
cmp
std
fs
jmp
push
pusha
adc
mov
insb
cli
lret
xchg
enter
lret
push
shlb
fcoml
addr16
mov
and
push
sub
test
shlb
pop
movsl
loopne
rcr
mov
or
cmp
mov
loop
mov
inc
push
mov
xor
push
or
in
sub
jo
push
mov
add
andl
test
inc
mov
fstpl
rorb
cmpsl
ss
aaa
and
push
cmpsl
or
jae
out
and
and
fmuls
jle
test
not
out
fildll
in
movsb
or
fsubs
xlat
cld
xor
test
jae
loopne
cmp
adc
lcall
sbb
js
pusha
inc
add
adc
pop
push
sbb
mov
adc
rcrl
or
and
push
dec
mov
or
daa
add
sub
pop
dec
adc
inc
out
sti
and
bound
inc
sahf
push
push
sar
in
aaa
or
jle
fs
add
or
bound
cmp
mov
hlt
add
mov
push
fs
or
aam
into
push
cmpsb
push
push
dec
sbb
push
cld
in
bound
mov
add
xor
add
out
js
mov
lcall
in
sub
repnz
lret
pop
rorl
adcb
or
jae
lock
lcall
jecxz
das
sub
scas
mov
mov
imul
js
adc
adc
jns
inc
xor
sub
xchg
inc
out
rolb
xor
hlt
xor
xchg
fwait
stos
xlat
lret
add
xchg
shl
or
mov
fldcw
push
add
inc
int3
rcrl
cld
int
add
scas
stos
adcl
xor
sbb
sti
repnz
mov
and
int
jb
decb
adcb
inc
xchg
clc
jg
icebp
rorl
clc
jecxz
pop
out
stos
jl
cmp
in
or
call
cmp
fwait
test
lea
pop
cmpsb
mov
femms
jl
decl
xchg
int
pop
test
lock
push
decb
dec
outsl
icebp
ljmp
mov
sbb
sub
flds
stc
and
jecxz
hlt
jle
mov
adc
xor
push
lcall
push
mov
hlt
jg
lods
lock
jno
mov
jl
roll
xchg
clc
push
add
call
scas
cmp
test
fnstcw
insl
jecxz
jl
addr16
out
fcompl
and
pop
clc
icebp
icebp
repnz
in
loop
es
jg
cld
pop
pop
dec
and
add
pop
fiadds
mov
mov
lahf
rcrb
mov
ljmp
shrl
dec
lods
popf
mov
adc
idivb
cmp
or
mov
mov
test
pop
pusha
icebp
push
insl
jg
mov
add
mov
jl
ds
jg
scas
rol
mov
mov
sarb
pop
adc
outsb
add
pop
cld
mov
xchg
add
and
adc
outsl
ds
imul
das
dec
inc
scas
mov
icebp
nop
or
dec
fsubrl
mov
call
ds
icebp
pop
xchg
jnp
and
insl
xchg
dec
pushf
out
fucomi
jg
clc
sub
pop
icebp
int3
icebp
mov
jl
imul
pusha
nop
mov
jnp
in
inc
xchg
icebp
jp
xor
dec
lock
pop
xchg
in
mov
xlat
addr16
pop
rclb
lods
out
inc
or
ds
sub
inc
ret
insl
icebp
ja
inc
int
adc
shr
add
aaa
sub
jno
mov
dec
cmp
call
sub
push
pop
xchg
in
cmp
je
inc
add
sbb
jl
cmc
movsb
xorb
fmulp
dec
push
lahf
mov
dec
repz
clc
popf
pop
mov
ss
pop
mov
nop
mov
cmp
xor
shrb
sbb
and
idivb
clc
jg
ja
push
add
add
rcll
and
ljmp
cmp
popf
mov
stos
mov
outsl
sub
orl
pminsw
dec
add
mov
loopne
int3
cld
mov
stos
imul
mov
jl
data16
pop
mov
loopne
push
loop
loope
add
stos
sbb
out
mov
iret
pop
inc
add
push
dec
xor
mov
lock
bound
pop
sti
inc
add
or
lds
sbb
das
mov
mov
push
int3
roll
mov
lea
pushf
pop
loopne
stos
and
and
shr
sbb
jne
or
and
fs
cmc
pop
stc
mov
fists
push
scas
rol
testb
add
stos
and
lods
mov
sahf
add
adc
data16
pop
xchg
sub
fcoml
int3
inc
push
add
shll
popa
mov
pop
shrl
popa
adc
stos
nop
jb
adc
adc
add
unpckhps
adc
lds
movsl
iret
and
inc
sbb
repnz
jbe
jecxz
xor
mov
inc
int
push
cwtl
push
ss
popa
movsb
sahf
sub
pop
int3
cli
in
pop
adc
push
lahf
test
lcall
sub
mov
dec
add
mov
xorb
decb
add
sbb
std
xchg
int
mov
jle
cs
das
hlt
mov
inc
push
push
push
fcoms
inc
xor
int3
std
push
xlat
xchg
js
push
pop
push
lock
outsb
stc
int
aam
test
jno
dec
add
and
cli
rcl
rclb
cwtl
adc
fiadds
arpl
in
or
sbb
outsb
mov
jo
jbe
fsubs
lcall
or
movsl
pop
or
xchg
or
sub
outsl
xor
push
sub
pushf
or
fnstenv
les
mov
jbe
fimuls
divl
sbbb
and
xor
pushl
xchg
lret
lret
cltd
es
scas
shr
add
mov
mov
pop
loopne
es
push
pusha
aas
cmp
test
ret
pop
loopne
pop
or
or
sub
inc
xchg
test
decb
mov
enter
into
xor
cvtps2pi
dec
xor
or
lcall
add
lret
mov
sub
mov
mul
popf
jecxz
pop
mov
and
shlb
mov
jp
inc
inc
je
and
or
xchg
incb
out
add
data16
dec
ret
iret
push
leave
xchg
stos
jae
sbbb
and
cmpsb
add
lcall
scas
adc
push
xchg
sub
add
add
mov
pop
test
or
repz
pop
movsb
stc
jno
in
scas
inc
jl
xchg
nop
cmp
fs
lds
dec
insl
inc
cmp
loope
pop
or
or
mov
mov
push
cli
cltd
icebp
into
adc
loope
test
incl
adc
inc
sub
xor
bound
or
inc
sbb
stc
add
lret
mov
sub
lret
xchg
js
xchg
in
insl
clc
inc
xorb
and
mov
jg
cmpsb
xor
in
xchg
subb
data16
sbb
jg
add
dec
popf
mov
data16
and
pushl
add
aaa
mov
mov
bound
dec
test
enter
adc
fsubrp
mov
ss
imul
int3
pushf
insl
lods
mov
or
or
or
je
cmpsl
mov
sbb
lcall
and
pop
and
jns
fisttps
push
and
mov
xor
xor
outsl
mov
jnp
xchg
jmp
std
jno
or
inc
je
aas
add
pop
lock
push
xchg
mov
les
fcomip
and
sbb
pop
stos
and
xorb
aad
aad
xchg
imul
xor
sahf
add
and
jmp
push
icebp
push
sub
loop
icebp
mov
cmp
or
shrb
subl
jae
mov
sbb
mov
sub
cmp
push
and
testb
mov
pop
mov
adc
mov
xchg
sub
es
pushf
jno
stc
sbb
lahf
sbb
arpl
addl
push
aaa
cld
sbb
adc
sbb
mov
or
aas
cmpl
in
inc
xchg
xchg
ret
int3
mov
mov
xchg
adc
jle
push
loopne
cli
repz
sbb
xchg
mov
add
test
pop
cmpsb
push
add
ret
int3
inc
mov
xor
shl
outsb
call
ret
loop
jmp
cwtl
lods
incl
jo
mov
dec
imul
rorl
add
inc
fs
dec
adc
jno
push
nop
not
or
insb
mov
popf
loope
xlat
mov
mov
push
rorb
repnz
add
inc
pop
cmp
in
sti
das
adc
stos
clc
mov
mov
mov
add
pop
jne
jg
mov
mov
flds
les
bound
sti
lds
inc
pushf
call
es
incb
test
leave
xor
xchg
cmpsb
push
sbb
fbstp
and
aad
push
cs
adc
cwtl
mov
sub
leave
fsubrs
es
cs
iret
sub
dec
mov
add
add
sub
adc
adc
mov
and
enter
mov
rcrl
add
hlt
insl
push
mov
add
mov
stos
push
or
xor
inc
adc
jg
sbb
sub
push
xchg
jecxz
stc
and
outsl
or
movsl
test
pop
sub
push
cmp
pop
shlb
lret
mov
idiv
adc
adc
mov
or
insl
and
inc
mov
sbb
sbb
adc
dec
sbb
xor
adc
roll
jl
push
xor
sbb
test
mov
into
jae
stos
int3
cmp
mov
push
xchg
or
bnd
outsb
jg
cmpsl
mov
jbe
test
add
les
fildll
mov
mov
adc
push
or
adc
xchg
pop
push
add
test
insb
lret
fildl
ret
ret
lahf
dec
leave
mov
adc
sub
ljmp
push
orb
or
lea
fiaddl
adc
sbb
call
and
lds
int3
inc
pop
and
add
sti
inc
inc
cwtl
jle
mov
aaa
clc
ret
xchg
adc
or
aas
inc
inc
inc
jg
cmpsb
add
lret
and
inc
push
mov
xchg
test
dec
lods
xor
push
mov
mov
mov
jg
jg
dec
inc
sbb
push
das
dec
std
mov
xchg
cmp
fcomps
xor
mov
xchg
pushl
pop
adc
nop
rol
add
lcall
int3
subb
addl
sbb
mov
incl
shlb
dec
mov
or
push
pop
adc
fbstp
inc
cmp
lods
mov
mov
or
mov
add
sbb
cmp
add
add
or
jne
xor
jg
shrb
mov
add
pop
xlat
je
shll
xor
mov
lea
add
pop
fmull
addb
fidivrl
decl
out
jb
loopne
pop
out
mov
ret
cmp
imul
add
enter
std
outsl
incl
mov
push
shlb
test
inc
sbbb
xchg
mov
and
cwtl
jl
mov
push
push
aaa
call
jae
dec
dec
push
push
push
xchg
je
and
loopne
cmc
mov
popf
mov
push
ret
jns
mov
int
testb
insb
fsubl
add
add
subb
mov
mov
sbb
mov
push
adcl
js
mov
cmp
sbb
jo
shlb
mov
mov
pop
xlat
fsub
and
xor
cwtl
add
sbb
mov
push
filds
shrb
dec
call
lods
jecxz
mov
or
fisubrl
jl
sti
mov
sbb
and
call
cmp
test
cld
push
xchg
mov
xor
cmpsl
xor
shr
fistpl
mov
lret
pop
sub
or
dec
mov
pop
mov
sbb
pop
inc
lcall
sub
repnz
add
pop
test
adc
js
ljmp
or
or
jnp
mov
mov
mov
add
and
testb
push
lret
jns
cld
loopne
inc
push
cwtl
sbb
notl
sbb
js
int
and
sbb
dec
cltd
stos
or
adc
xor
dec
push
inc
push
es
sbb
add
mov
ds
popf
push
pop
int3
and
roll
loopne
or
dec
mov
nop
movsl
and
pop
int
pop
mov
jecxz
fcoms
xorl
add
jo
and
pop
push
sbb
inc
sub
and
add
and
lret
ret
sub
or
mov
aam
and
mov
ljmp
shlb
mov
mov
add
pop
cmpsl
mov
cmp
add
data16
and
ja
stc
push
dec
xor
lea
pop
sbbl
mov
inc
pop
inc
jmp
or
rorb
fmuls
inc
or
je
scas
inc
cs
addr16
add
and
or
movsl
add
add
cmpsb
mov
lds
xchg
adc
sub
faddl
mov
mov
dec
cmpsl
adc
push
push
mov
jg
lcall
fdivrl
inc
fistps
dec
mov
inc
incl
cmc
ds
scas
add
sbb
outsl
mov
jmp
sbb
jecxz
inc
sbb
cmp
sbb
or
aas
push
loopne
mov
lea
and
push
stos
aaa
cli
fbld
mov
insb
inc
jg
mov
sbb
enter
inc
aas
mov
sar
pop
push
repz
pushf
shr
int
push
cmc
insl
lcall
std
aaa
push
inc
mov
jecxz
divb
dec
add
jg
incl
sub
out
dec
push
add
fs
fildl
dec
shl
pop
test
repz
xchg
aas
sbb
enter
sub
sahf
cmp
bound
mov
jmp
and
mov
test
cmpsl
jl
and
dec
subl
in
sub
cmp
ret
mov
sbb
or
call
adc
imul
nop
sub
sub
ret
lcall
sbb
or
mov
std
sub
sub
and
cmpsl
add
fcmovnu
jle
hlt
xor
adc
mov
test
out
les
pushl
mov
mov
xor
add
jne
aaa
loopne
inc
inc
ss
pop
arpl
pushl
push
jno
pop
or
sbb
mov
call
or
mov
and
xchg
mov
loopne
xor
mov
in
mov
divb
mov
sti
movsl
jle
pop
clc
in
inc
inc
mov
aam
and
mov
sub
xchg
inc
decl
xchg
mov
enter
cmp
mov
push
popa
sub
and
out
jmp
dec
add
cmp
rclb
mov
pop
imul
leave
lcall
dec
jmp
leave
push
pop
lret
push
hlt
fstpl
lcall
mov
outsl
icebp
push
clc
xchg
mov
dec
mov
mov
nop
sub
or
mov
cmp
shrb
adc
bound
out
inc
mov
mov
mov
outsl
mov
push
jmp
inc
mov
and
xor
mulb
xchg
mov
add
mov
inc
fwait
out
push
jb
pushf
loop
loopne
and
inc
pushf
pop
shlb
or
mov
fdivr
sub
ss
push
add
cli
call
mov
push
push
jg
inc
xchg
hlt
ret
jmp
stos
subb
pop
clc
fisttps
push
or
dec
add
pop
and
lea
jp
jmp
jecxz
test
clc
mov
icebp
jns
adc
xchg
xchg
jb,pn
test
dec
inc
add
dec
icebp
add
adc
push
mov
int3
mov
xor
orb
int3
adc
jmp
adc
add
mov
lcall
jp
jb
in
jmp
cmp
xchg
xor
xor
aad
jmp
xor
cmc
or
mov
in
jg
jecxz
or
cmp
insb
pusha
nop
inc
adc
push
int
in
add
xchg
dec
xchg
xchg
jae
xchg
adcl
dec
push
inc
add
add
lcall
add
push
and
outsb
mov
out
call
push
lods
xchg
test
mov
and
cltd
inc
rorb
cmpsb
aaa
rorb
mov
jg
mov
mov
add
ds
negl
sub
adc
xchg
mov
fidivrl
mov
lods
ficomps
sarb
push
aaa
jo
push
decb
pop
xor
sub
daa
jns
jbe
call
popf
pop
and
sbb
adc
inc
inc
mov
shr
clc
or
int3
repz
ja
push
and
inc
push
mov
sarl
ljmp
push
sbb
lds
sub
fidivs
and
xchg
loop
or
jnp
inc
jmp
inc
lds
out
mov
inc
push
push
inc
loopne
and
lds
push
sub
add
mov
add
popf
xor
add
jb
mov
or
or
push
add
das
lret
cwtl
add
adc
inc
outsl
or
icebp
jae
data16
xchg
push
xor
add
rolb
movsl
sub
sub
test
pop
insb
iret
aaa
lret
push
rcll
add
popf
fists
repz
xor
adc
pop
sbb
and
push
enter
jb
jno
fcoml
call
mov
pop
ljmp
push
test
pop
mov
fadds
jo
std
dec
sbb
fidivrl
dec
xor
dec
fs
pop
jmp
pop
pop
inc
mov
cmpsb
xor
or
xchg
ljmp
mul
jns
inc
sbb
ret
in
push
test
rolb
mov
cmp
aam
outsb
movsl
jbe
repz
hlt
add
bound
es
arpl
jle
push
loope
mov
fisubl
jo
lret
xchg
jbe
sbb
jne
int
mov
bound
fsub
push
push
incl
sub
mov
mov
and
fmuls
dec
mov
aam
mov
mov
lock
inc
adc
loop
decb
aaa
sub
dec
xchg
push
shlb
mov
add
cmpsl
imull
jae
addr16
fsubrs
inc
iret
mov
mov
pop
dec
adc
ljmp
rcl
dec
push
mov
xor
test
push
push
sbb
xor
inc
cmpsb
jmp
ljmp
sub
sbb
push
mov
push
cmpsl
mov
dec
xor
rcpps
or
sbb
lahf
mov
enter
filds
and
aas
sub
push
aaa
and
dec
mov
sbb
inc
mov
xor
lock
rolb
xor
jg
inc
out
stc
push
push
add
call
test
mov
sbb
mov
adc
lock
popf
mov
mov
test
xor
lret
push
fnsave
rolb
pop
adc
add
test
xor
fiaddl
inc
das
movl
std
xorb
cmp
sub
shr
or
ja
inc
icebp
cmp
in
inc
jmp
mov
movsb
jmp
adc
hlt
ljmp
jne
or
or
inc
sbb
ljmp
xlat
mov
mov
fdecstp
push
hlt
sahf
sub
push
sub
in
jmp
inc
in
fcomip
js
bound
shll
cltd
mov
mov
test
shll
and
dec
add
pop
sbb
pop
subb
add
mov
cmp
or
je
lcall
mov
and
xor
jns
in
sahf
xchg
mov
shrl
scas
add
pusha
mov
inc
ds
mov
lock
stc
aaa
mov
lods
mov
cmp
or
shll
fists
ja
inc
xor
mov
pop
mov
push
out
mov
add
push
jg
and
and
push
shll
dec
sti
and
mov
or
je
sbb
into
add
push
rcl
imul
inc
inc
gs
lds
aam
outsb
sbb
and
jle
cmp
pushf
xlat
xor
call
add
push
or
adc
or
or
push
adc
in
aad
and
gs
adc
mov
mov
ljmp
pop
mov
fsubl
dec
mov
aam
mov
stc
mov
jp
adc
jae
and
mov
cmc
jo
loopne
fucomp
cmp
inc
loope
add
mov
xchg
cmp
push
pushf
ljmp
jns
xchg
push
or
push
push
loope
imul
jg
adc
or
ret
push
inc
popa
or
shlb
shlb
out
shlb
push
mov
popa
andb
pcmpgtw
arpl
rolb
or
adc
dec
lret
mov
cs
xchg
and
add
stos
xchg
adcl
cmpsb
fadds
xor
shrl
pusha
add
mov
ljmp
push
nop
aad
pop
and
enter
cltd
push
sbb
stos
inc
test
into
pop
lcall
sbb
test
rorb
inc
testl
dec
dec
les
lock
loop
mov
repnz
jno
roll
push
pop
and
add
sub
or
cltd
es
je
add
outsb
sbb
mov
loopne
push
add
aad
pusha
adc
push
inc
dec
inc
divl
repz
adc
sub
aaa
xor
mov
testl
in
mov
cmp
notl
mov
push
cmp
shrl
mov
adc
sbb
ret
and
and
cmpsl
in
lods
sub
call
pop
mov
addr16
decl
rol
sbb
jmp
lods
pop
int3
and
sub
call
push
xchg
xchg
add
mov
mov
inc
mov
push
ljmp
bound
add
xor
or
popa
mov
jg
shll
jae
pop
adc
lods
add
stos
shll
test
or
outsl
and
clc
jg
mov
mov
dec
inc
jns
jl
test
in
decl
add
rep
mov
inc
icebp
cmp
ds
call
mov
lcall
adc
adc
icebp
push
or
pop
add
test
mov
call
or
xchg
xchg
push
enter
popa
cli
pop
or
leave
clc
sbb
cmc
notb
pop
inc
adc
jb
add
xchg
std
incl
movsb
dec
jbe
aaa
ljmp
mov
xchg
xchg
push
dec
pop
mov
pop
gs
and
aam
mov
adc
in
mov
jle
enter
push
pusha
in
mov
push
shrl
sub
nop
popf
pop
jge
mov
sbb
pop
clc
jmp
mov
lcall
add
ljmp
es
je
push
xchg
into
sub
push
scas
sub
test
mov
inc
sub
inc
das
icebp
ljmp
push
or
mov
sti
mov
pop
decb
test
iret
popaw
or
lret
lcall
idivb
add
movsb
push
or
or
in
jmp
leave
movsl
mov
mov
xchg
pop
js
out
jns
stos
jae
cld
sub
mov
insl
and
add
pusha
mov
lods
orb
xor
jecxz
pop
sbb
cmp
add
jg
jmp
mov
jbe
stos
lods
hlt
popl
adc
xor
adc
push
xor
leave
mov
rolb
adcb
push
jns
movsl
jmp
mov
pop
inc
sbb
dec
les
data16
popa
aam
or
leave
adc
sbbb
adc
sub
mov
xor
xchg
xor
shl
and
mov
xchg
adc
lea
cmp
add
scas
mov
dec
and
pop
add
mov
pop
add
mov
sub
int3
fcomp
push
sbb
mov
adc
or
jle
mov
and
movsl
cmc
mov
xchg
dec
pushf
add
xchg
inc
outsl
dec
add
andl
int3
xchg
dec
dec
loope
or
rcll
cmp
jbe
inc
hlt
xorb
orb
jo
lahf
movsl
ret
push
mov
push
sub
arpl
push
inc
test
inc
adc
add
dec
lods
ret
out
es
dec
in
xchg
rcl
dec
pop
cmp
cmp
popf
mov
sbb
int3
data16
and
dec
icebp
mulb
and
lcall
add
mov
cltd
incl
ds
add
jns
push
sbb
cmpsl
push
jp
or
adc
xchg
movsl
xlat
inc
es
imul
je
insl
inc
pusha
sbb
call
push
mov
sbb
dec
mov
add
sbb
lahf
xchg
lea
add
mov
mov
inc
xchg
mov
call
cmp
dec
sub
jo
js
push
sub
mov
xchg
je
push
fadds
pop
inc
add
adc
inc
fs
xchg
jae
scas
dec
adc
outsb
roll
adc
add
push
std
fildll
sbb
imul
mov
stos
ficomps
outsb
lret
aad
scas
pop
cmp
and
data16
loopne
inc
sbb
adc
or
add
xor
ljmp
mov
push
push
pop
in
pop
ret
cmp
mov
mov
movsl
push
scas
adcb
fists
mov
xor
gs
imul
out
sub
test
in
repnz
mov
ret
and
mov
faddl
pop
mov
test
shlb
jge
inc
inc
repz
in
sbb
leave
in
or
inc
cmp
add
xor
and
add
lock
add
lcall
push
shrb
jmp
dec
shlb
lcall
aaa
ret
inc
mov
mov
push
add
addb
add
jne
xor
ficomps
scas
and
aam
inc
loop
adc
sub
or
inc
int
cmp
cmp
adc
add
pop
repz
xor
xor
xor
sbb
adc
xorl
mov
jns
mov
fimuls
or
xor
mov
push
add
push
shr
adc
sbb
stos
roll
iret
test
les
add
mov
xchg
mov
push
or
mov
push
int3
lcall
and
mov
cmp
or
add
mov
cmpsb
mov
xor
stos
push
sub
jmp
clc
and
jb
mov
push
add
pusha
add
sbbb
testb
fmull
adc
rcll
push
hlt
push
repz
xchg
mov
clc
decl
aam
adc
mov
inc
hlt
mov
mov
cmpsl
lcall
andb
and
sahf
sbb
rcl
lcall
dec
add
inc
inc
mov
rclb
xor
or
jecxz
lods
cli
in
in
pusha
xchg
add
xor
adc
mov
pushl
jp
roll
aad
test
aas
inc
push
add
lret
push
call
inc
addb
movl
mov
add
int
dec
push
pop
call
rcr
add
mov
or
pop
test
lcall
insl
clc
shll
push
jnp
xchg
bound
enter
push
daa
xchg
cmpsb
imul
add
pushf
aas
dec
xor
jo
jg
clc
stos
lret
andl
xor
mov
add
lret
add
std
mov
cs
inc
or
ret
outsl
mov
dec
and
loope
ds
out
inc
ret
ja
cmc
sarl
pop
xor
sub
inc
add
jg
mov
imull
pop
sbb
fcoms
hlt
cmc
cwtl
push
insb
hlt
sbb
xor
test
fldcw
hlt
fldl
cs
loopne,pn
xchg
adc
add
inc
and
push
incl
ds
test
scas
arpl
push
jmp
and
pushl
lock
stc
add
inc
jns
test
and
dec
jns
idiv
inc
incl
add
cmp
pop
add
addr16
ret
sbb
popa
jge
dec
inc
add
dec
notb
sbb
and
addr16
add
pushl
repz
add
mov
mov
xlat
mov
fidivs
sub
adc
inc
in
add
push
and
pop
repz
test
popf
insb
add
inc
jb
dec
jg
rolb
fstl
dec
bound
ja
loopne
inc
cmc
lock
sbb
loop
inc
popf
mov
or
clc
in
ret
arpl
pop
and
orb
cmp
xor
cmpsb
push
enter
int
lcall
xchg
rclb
xor
andb
in
jp
ljmp
sarl
pushf
xchg
pop
mov
jbe
clc
lcall
push
cmp
add
mov
bound
mov
pusha
into
and
call
add
test
add
sub
subl
dec
call
and
in
jmp
and
dec
xchg
mov
mov
cs
mov
stos
pop
mov
cli
mov
jbe
adc
mov
inc
push
mov
dec
adc
xchg
divl
jmp
sbb
jnp
inc
je
jne
test
dec
mov
cmc
fsts
add
jne
repz
jmp
daa
jo
xor
adc
mov
imul
push
xchg
mov
and
std
mov
mov
dec
dec
int3
add
wrmsr
cld
push
xchg
dec
movsl
jle
mov
push
inc
push
lret
lcall
xor
incl
lock
mov
es
add
cmp
aam
pop
nop
insb
lret
adc
pop
out
daa
mov
and
aaa
adc
jmp
sub
movaps
in
cmp
call
pushl
or
add
into
lods
outsl
lret
sbb
mov
out
jg
lcall
mov
scas
fs
daa
xabort
adc
adc
inc
call
push
pop
out
orl
inc
ret
or
adc
lea
rcl
lret
inc
push
jecxz
clc
add
xchg
mov
add
add
xor
xchg
pop
sub
dec
jp
add
rcr
addb
aas
outsb
cmc
daa
pop
add
pusha
lea
pop
and
cmp
bndldx
pusha
adc
or
adc
cs
sub
lahf
push
pop
mov
in
adc
pop
cld
aam
ja
jb
push
inc
leave
adc
mov
xchg
inc
out
nop
mov
mov
xchg
jno
rcrb
out
in
add
mov
inc
adc
leave
pop
rolb
repnz
push
jns
pop
cmp
jb
call
add
jno
mov
xchg
and
xchg
xlat
adc
adc
mov
fstpt
mov
dec
in
call
add
pop
ljmp
movsb
and
sti
push
scas
inc
sahf
mov
pop
push
pop
add
and
xor
xchg
call
adc
adc
in
xchg
mov
jne
incb
shll
mov
addb
adc
fldcw
mov
adc
aas
push
push
shll
stos
icebp
nop
adc
or
arpl
inc
dec
hlt
sti
sub
xchg
or
jns
sub
mov
test
add
aad
xchg
add
adc
jb
adcl
sub
cvtdq2ps
mov
sbbl
or
out
iret
test
lcall
imul
cmp
adc
xchg
adc
sahf
add
pushl
inc
push
sub
cmpsb
jl
mov
pop
dec
dec
je
add
icebp
jge
clc
pop
call
or
pop
or
inc
mov
add
icebp
mov
pusha
push
cmp
js
mov
lock
jl
decl
lcall
jecxz
jbe
mov
pusha
lods
mov
inc
push
icebp
fcoml
movsb
ds
mov
mov
arpl
jg
loop
clc
jl
adc
test
mov
maskmovq
divl
jb
sti
test
popl
mov
cli
pop
sub
call
inc
xor
icebp
jmp
pop
pop
pop
push
pusha
scas
pop
in
and
mov
sbb
mov
jl
mov
or
out
sar
lods
subl
repnz
cmp
idivb
cmpsl
stc
cmp
mov
cmp
mov
mov
or
std
jg
cmp
push
sub
xchg
lock
jg
mov
mov
jecxz
jl
jo
jae
mov
adc
decl
xor
movsb
mov
add
mov
add
imul
out
adc
pop
xor
jns
sub
es
scas
mov
jg
call
loop
aad
adc
daa
jp
sub
dec
mov
jg
jg
pop
movsb
jae
inc
stc
pushf
shlb
cmp
scas
jecxz
jo
addb
inc
jl
mov
js
cmp
js
out
enter
or
nop
icebp
or
xchg
sub
pop
cli
fistps
jl
clc
jne
lods
pop
fwait
xchg
pop
pop
mov
fistpl
inc
loopne
in
xchg
imul
aaa
std
inc
mov
js
add
add
lds
fadds
pop
int3
jecxz
jl
sub
mov
test
jnp
and
bound
mov
pop
fsts
popf
mov
dec
add
sub
cmp
dec
arpl
sbb
or
sbb
call
in
dec
dec
push
mov
fsubs
sbb
push
jne
xor
inc
jmp
jne
mov
add
fsubrs
inc
adc
or
inc
cmp
xchg
repnz
or
mov
sub
int
or
xchg
stos
call
and
add
cli
push
int3
or
jbe
lods
adc
imul
mov
xor
push
mov
sub
clc
cmpb
lods
pop
add
inc
sahf
test
fsubs
jp
push
aam
jmp
and
adc
sub
sbb
xor
mul
inc
rorb
insl
idivl
push
jo
cmc
mov
mov
or
cmp
jg
ret
add
add
inc
xchg
mov
and
cmp
test
push
orl
aas
mov
ret
nop
add
ret
lock
ss
out
push
fmul
addr16
subb
loope
test
test
jb
test
popa
icebp
adc
clc
push
hlt
fidivs
xor
pop
mov
xchg
stos
push
lds
mov
mov
and
push
out
dec
ret
push
push
mov
push
scas
push
push
cmc
test
add
ljmp
dec
js
jge
jmp
loopne
xchg
pushf
repnz
pop
xor
push
addb
mov
and
adc
adc
ljmp
scas
rcrb
mov
dec
sar
lcall
mov
mov
mov
xor
cmpsb
stc
je
dec
jge
clc
mov
push
add
inc
daa
adc
mov
icebp
rcrb
fldt
cmpsl
sbb
xchg
xchg
lods
mov
fists
stos
add
and
or
sar
sbb
fldcw
rcrb
jge
loopne
clc
cld
sub
mov
or
or
adc
pop
movsl
repz
aam
nop
out
mov
add
jg
mov
into
jg
jmp
mov
mov
pop
cltd
mov
adc
mov
cmp
mov
out
rcrb
push
fbld
mov
dec
or
call
addl
adcl
and
js,pn
sbb
pop
add
add
dec
cmovo
cltd
mov
gs
xchg
sti
jg
push
shlb
stos
jnp
add
in
mov
ret
dec
push
loop
xor
xchg
popw
cmp
movsl
stos
mov
ret
or
outsb
lods
mov
sti
pop
or
roll
push
cmp
adc
push
test
mov
sti
inc
ljmp
scas
dec
jmp
adc
testb
imul
imul
mov
es
test
scas
mov
js
decl
and
scas
lahf
xor
hlt
push
pop
adc
cmp
lock
sbb
arpl
das
hlt
mov
push
andb
pushf
lea
roll
sbb
or
mov
and
lea
popa
mov
sti
inc
add
ret
cltd
and
outsl
xlat
add
andl
sahf
mov
lahf
push
xchg
or
xor
nop
hlt
or
pop
push
popa
stos
xor
fisttps
inc
rclb
sbb
mov
add
das
subb
cwtl
add
push
pop
and
jg
test
inc
jbe
mov
cwtl
mov
pop
aas
std
mov
or
stc
not
mov
test
mov
cmp
aam
and
inc
xor
add
out
push
inc
popl
or
shrl
inc
or
adc
mov
and
add
xchg
loope
or
or
cmp
and
mov
pop
sub
lock
int3
icebp
sbb
push
cmp
ljmp
push
xor
popaw
sbb
mov
mov
adc
jmp
or
pusha
fs
jno
sbb
popw
cmp
sub
pop
test
xchg
mov
mov
mov
push
jle
in
pop
repz
mov
pop
add
mov
jp
pop
jp
or
shrl
add
push
hlt
add
addr16
int
cmpsb
push
insl
or
push
push
mov
dec
jg
pop
nop
dec
cwtl
pop
mov
addr16
and
jns
jecxz
jp
aaa
jle
clc
out
pop
adc
xchg
fs
nop
xchg
mov
cmp
push
mov
push
pop
loop
inc
incl
or
mov
mov
leave
test
outsl
je
cmp
stc
test
popf
add
pop
dec
xchg
ljmp
rcl
in
imulb
add
pop
ljmp
repz
sub
sbbl
mov
pushf
pusha
arpl
popa
cmpsb
mov
dec
shlb
test
inc
jge
mov
xchg
arpl
cmp
call
incl
test
pop
mov
mov
dec
mov
xchg
pop
or
scas
or
jo
and
jle
out
ror
dec
jo
mov
jle
fmul
inc
and
decb
fisubrl
dec
es
daa
dec
sahf
mov
shll
inc
pop
mov
dec
push
sbb
inc
mov
or
fidivrl
push
cli
xchg
cmp
negl
sub
movsb
jne
andl
lcall
pushl
add
add
cs
inc
xchg
dec
jecxz
push
pop
popf
add
adc
rcrl
ljmp
or
enterw
fdivp
insb
lcall
add
subl
or
sub
sbb
fidivl
stos
xor
loopne
inc
cmp
mov
bound
movsl
jp
cli
pop
xor
je
pop
jbe
mov
dec
outsb
jns
sub
loop
xor
fldl
mov
nop
pop
js
dec
xchg
xchg
sbb
out
add
out
cli
mov
or
dec
push
dec
scas
push
mov
cmp
jg
fcomip
sub
or
cmp
adcb
mov
test
add
std
jae
pop
pop
cli
jg
enter
scas
cmp
out
popf
cld
add
pop
jge
lock
mov
mov
adc
lea
movsl
decl
and
mov
sbb
xchg
lcall
je
jle
lret
mov
test
loope
push
jno
lret
cld
and
ret
clc
and
in
shrl
outsl
sbb
mov
adc
xchg
scas
cmp
mov
dec
mov
jg
add
int
push
mov
jle
sbb
mov
dec
outsl
cmp
aas
jg
sbb
push
jmp
adc
xor
loopne
pop
std
pushl
fadds
push
movsl
cmp
stos
popf
dec
dec
popa
test
insl
jmp
shll
push
mov
test
cmpsl
sub
imul
lds
jge
jnp
hlt
aaa
mov
and
push
add
outsb
jne
ret
mov
dec
dec
outsb
call
int3
clc
call
decb
dec
test
xor
or
lret
add
adc
sbbl
sub
cs
adc
clc
add
aad
dec
leave
xor
outsl
cld
sbb
push
aaa
std
insl
jb
popf
ljmp
sub
pop
loopne
and
arpl
decl
leave
mov
add
in
add
mov
rcrl
mov
pop
lds
stos
mov
xchg
adc
out
mov
in
sub
shlb
pop
loope
mov
mov
add
push
sbb
rorb
xor
mov
fsubp
incl
fsubr
ffreep
pushf
mov
push
je
xchg
mov
and
pop
cwtl
leave
loop
stos
push
pop
aaa
loopne
in
adc
dec
test
and
jge
and
das
sbb
sbb
xor
xor
jg
inc
insb
mov
call
loop
pop
outsl
add
cwtl
mov
pop
clc
sbb
inc
jecxz
adc
jo
int3
ss
cli
outsl
or
add
test
cmp
mov
mov
sbb
jecxz
and
or
fcompl
mov
aas
push
or
lds
xor
pop
add
add
push
icebp
sub
pop
sbb
repnz
push
add
je
add
imul
mov
mov
jnp
inc
scas
andb
mov
out
add
out
sbb
stc
cmp
dec
rcrb
dec
out
sbb
jg
lock
push
sbb
fistl
or
addl
and
push
xchg
scas
mov
lret
xor
push
xor
or
jns
and
clc
scas
push
jge
dec
mov
xchg
adc
mov
push
lds
xorb
iret
mov
cmpsb
xor
scas
jnp
mov
and
leave
mov
lods
ljmp
jo
pop
jle
sbb
cli
and
and
cmp
dec
hlt
push
js
and
fnstsw
mov
xchg
sbb
fsubl
push
mov
mov
les
xlat
aam
lahf
and
push
les
push
int3
movsl
nop
and
fists
ljmp
add
or
hlt
int
int3
inc
jg
push
mov
jle
pop
ljmp
fisubrl
jne
add
mov
sub
adc
pop
or
ljmp
hlt
pop
sbb
out
mov
mov
call
add
xchg
pop
adc
and
lea
push
insl
aad
pop
pop
lock
hlt
xchg
mov
inc
cmp
js
jp
in
xor
dec
idivb
in
inc
dec
adc
sahf
mov
sbb
mov
les
ss
incl
mov
cmp
neg
mov
add
popa
leave
std
lods
js
jmp
shll
pop
pusha
inc
ljmp
mov
mov
mov
das
ds
loope
adc
add
aam
jbe
call
push
in
je
insl
shlb
incb
les
xchg
push
popa
and
imul
sbb
andl
mov
push
or
icebp
lcall
inc
js
in
call
nop
inc
xchg
ljmp
inc
les
pop
mov
lret
jge
mov
or
scas
mov
jno
xor
das
scas
mov
insl
mov
sub
dec
outsl
cmp
jg
fcmovb
or
fsub
es
enter
and
push
add
dec
lds
push
jg
dec
fs
or
cli
mov
push
cmc
pusha
jmp
xchg
aam
daa
shrb
lcall
loopne
std
fbld
or
inc
andb
jns
add
jg
and
xor
shrb
xchg
scas
push
jecxz
shrb
jmp
iret
adc
mov
out
and
aad
cmpsb
add
test
fstpt
popf
mov
pushf
sub
adcb
jns
mov
adc
push
mov
cld
mov
call
arpl
jmp
mov
and
sbb
aam
ljmp
arpl
into
adc
sub
and
test
mov
adc
add
subl
hlt
scas
adc
test
cmpl
xchg
test
push
icebp
aas
adc
xchg
outsb
push
pop
js
inc
mov
pop
in
scas
ret
inc
ljmp
loopne
jb
push
shll
xor
in
sub
jg
dec
in
cmpsb
test
jb
in
scas
scas
das
lds
cld
ror
or
mov
test
inc
mov
or
sub
or
dec
jne
push
sub
sub
jp
lods
mov
movsl
popa
xor
lods
cmc
pop
or
jo
pop
jmp
mov
test
std
xor
mov
out
rolb
fwait
ljmp
mov
scas
adc
gs
xor
pop
add
jns
mov
inc
sub
clc
dec
jns
aad
subl
jmp
cltd
mov
jo
repnz
push
sub
mov
ffreep
sbb
ljmp
inc
fidivrs
push
dec
jbe
push
movsl
inc
mov
pushl
add
xchg
dec
iret
dec
insb
test
std
pushf
ja
inc
adc
icebp
xor
mov
icebp
das
sbb
ficomps
mov
subl
pop
add
or
fldl
mov
call
movsb
or
mov
imul
sub
jp
call
inc
add
pushf
inc
mov
insb
fs
and
fbld
pop
stos
add
decl
fidivrl
fimuls
popa
dec
movsl
push
faddl
js
out
pusha
es
test
dec
std
pushf
ficomps
das
cld
push
outsl
jle
push
mov
shrb
sbb
hlt
jno
cs
sub
in
outsl
icebp
push
mov
dec
je
sbb
sbb
sbb
pop
cmp
aad
lcall
fisubs
les
out
mov
cmpsl
mov
dec
out
shl
fmull
mov
popa
xlat
jne
push
jmp
jle
mov
add
or
mov
mov
mov
xlat
cmp
call
sarl
inc
mov
adc
cmp
nop
lods
jne
rclw
pop
sbb
mov
sbb
pushf
mov
ljmp
cmp
sbb
push
push
ss
orb
mov
out
dec
aad
imul
mov
rcll
or
cwtl
pop
cltd
add
cld
outsb
repz
and
outsl
ljmp
sahf
in
jo
xchg
sbb
inc
orl
stos
pop
fiadds
lahf
inc
mov
fs
js
and
mov
xor
sub
enter
push
je
dec
cmp
mov
xchg
add
and
lods
mov
mov
and
stos
call
pop
lods
jp
pop
and
loopne
push
cmp
outsl
decl
negl
stos
out
mov
loope
cmpb
fldt
loopne
mov
std
movsb
sub
or
pop
test
shr
idiv
movsl
cmpsl
push
jge
sahf
daa
adc
jb
pop
or
mov
lea
addr16
addr16
jmp
and
pushf
push
aad
test
mov
jb
test
push
pusha
stos
repnz
mov
pop
or
pop
jns
flds
adc
int3
shlb
sbb
xchg
dec
mov
loopne
call
add
enter
and
stos
pop
adc
xchg
arpl
dec
lcall
xchg
mov
in
xchg
movsl
ljmp
mov
push
ss
xchg
pop
clc
mov
call
imul
jl
int
ret
mov
dec
jl
cli
and
cld
mov
ret
shl
outsb
adc
mov
inc
inc
adc
fs
add
dec
mov
pop
add
xchg
xchg
mov
dec
test
daa
leave
xchg
pop
in
movsb
mov
cmp
jmp
sarb
push
pop
sub
scas
pop
ficomps
lods
pop
outsb
cmp
loopne
push
mov
adc
adc
sub
loopne
loop
add
fs
or
or
and
not
or
xchg
push
fs
orb
lahf
fisttps
sbb
push
fiaddl
pusha
mov
clc
adc
push
fs
mov
aaa
test
loop
fcmove
or
andb
jo
or
inc
sbb
jns
sarb
add
push
and
inc
cwtl
ret
mov
adc
jae
lret
inc
xchg
loopne
pop
mov
jbe
add
in
and
rcl
fwait
inc
cmp
inc
addb
mov
add
add
sub
mov
adc
subb
aas
stos
adc
or
hlt
add
push
fdivrl
sub
mov
and
mov
orb
shrb
iret
or
fsubrs
xchg
sbb
cmp
and
sub
bound
sbb
xor
mov
lcall
nop
or
dec
testl
sub
add
xor
sub
mov
mov
repz
mov
fmul
repz
int
cmc
daa
cld
xchg
mov
pop
xorb
cmp
inc
cwtl
adc
sbbl
das
adc
adc
add
addb
mov
out
int
inc
pop
ret
fisttpll
int3
lods
in
loope
fs
xchg
inc
ret
mov
xchg
addl
push
push
xor
enter
popf
inc
lods
andb
xor
sub
xchg
or
push
pop
push
call
or
xchg
sub
sub
lret
push
lods
jmp
dec
cmpb
clc
mov
ret
es
mov
or
jecxz
cli
aam
call
or
or
dec
ret
mov
inc
inc
adc
mov
test
lods
nop
add
push
loope
fsubs
mov
inc
fnstcw
pop
repz
aaa
mov
fiadds
cmpb
int
ret
adc
push
pusha
loop
fucomip
and
add
psubb
add
les
ljmp
sub
pop
cmp
xchg
jp
mov
ss
ds
jbe
repz
push
adc
das
push
push
popa
sub
push
sahf
sbbb
mov
in
mov
push
xor
imul
pop
shr
or
pop
or
cmp
loop
fimull
push
loop
mov
fsubrs
js
xor
xor
mov
sbb
pop
clc
adc
fldenv
in
mov
sub
ljmp
inc
mov
into
cwtl
mov
jbe
aaa
ljmp
shll
add
fimuls
adc
inc
in
sub
mov
dec
js
or
data16
stos
jae
fcomip
fsubrl
inc
pop
push
pop
data16
inc
into
adc
pop
out
test
and
pop
ljmp
push
loopne
cmp
mov
mov
repnz
ds
sbb
fisubs
pop
sub
insb
ss
push
mov
in
mov
dec
inc
sbb
jbe
stc
and
add
fwait
rcll
inc
xor
xor
dec
adc
dec
xor
or
cli
nop
adc
jecxz
push
out
sub
mov
push
insb
mov
das
hlt
jg
inc
inc
fucomp
stc
in
mov
jmp
sub
add
hlt
push
std
repnz
fcmovu
leave
jmp
mov
das
ret
data16
js
pop
icebp
scas
adc
jns
dec
dec
test
inc
jl
add
mov
inc
imul
mov
test
nop
sbbl
pop
loop
inc
pop
push
insl
sub
mov
lcall
loop
xchg
enter
mov
sub
pop
call
jmp
dec
xchg
mov
test
xor
add
call
xchg
mov
or
xor
sbb
push
rcll
sar
das
pop
jl
mov
push
jns
push
sti
xor
or
dec
mov
xor
mov
shl
lds
test
rclb
xchg
inc
cmp
mov
or
dec
ret
inc
inc
cmp
pop
repz
hlt
xchg
fnstenv
mov
push
test
and
std
push
add
push
out
and
lcall
inc
or
sub
mov
adc
add
out
inc
lods
fdiv
jge
sti
adc
mov
sub
sbb
jle
filds
jb
lea
test
incl
repnz
add
push
lcall
pmullw
add
mov
cld
jl
cmc
leave
sarl
mov
stc
out
sub
or
cmp
out
loop
je
add
gs
dec
add
xchg
scas
sub
mov
pushl
out
movsb
push
mov
mov
or
nop
mov
loopne
mov
dec
add
mov
pushf
sbbl
addr16
sub
rorw
pop
mov
pop
rclb
adc
les
mov
stos
xor
jb
loope
neg
pop
xor
daa
pusha
mov
int3
ljmp
jl
cmc
add
jmp
bound
add
jbe
mov
in
imul
lods
outsl
scas
inc
sti
outsb
int3
xor
sbb
jo
sbb
mov
lea
pop
pushf
dec
cmp
mov
das
add
push
add
dec
inc
mov
stc
mov
ljmp
mov
nop
mov
and
lods
add
push
in
loope
outsl
adc
sbb
je
mov
mov
push
cs
add
je
imul
and
ret
insb
mov
mov
and
popf
lret
jb
inc
or
push
ljmp
jmp
sub
scas
and
xchg
jmp
movsl
mov
push
cmp
rcll
inc
xor
pop
das
in
jmp
add
in
ret
sti
sub
jno
pusha
ds
insl
daa
xor
adc
outsl
hlt
jmp
repnz
mov
jg
lret
xchg
add
rclb
inc
sarl
icebp
dec
mov
movhps
cmpsb
xor
mov
ljmp
fists
and
add
pop
jecxz
stos
rclb
testb
jmp
inc
and
fcoms
mov
ljmp
insl
cmpsl
stos
pop
mov
addr16
movsb
pushf
mov
jp
or
pushl
sub
dec
sub
or
jb
push
add
mov
lahf
outsb
dec
mov
adc
jbe
sbbl
mov
std
leave
sbbb
imul
loop
cmpsl
loope
inc
adc
arpl
jg
loopne
fsubs
jecxz
sub
inc
cmpsb
and
push
mov
sti
lea
movl
rclb
adc
in
mov
and
mov
leave
jge
xchg
pop
mov
xor
in
pop
das
insl
clc
pop
jmp
fsts
test
jg
push
scas
ja
cli
or
jg
fwait
pop
int3
xchg
fstps
ja
xchg
out
int
lcall
scas
pop
xchg
xor
mov
and
or
sub
ss
push
outsl
daa
adc
adc
loop
test
in
pop
fsubrl
mov
add
mov
xchg
or
push
sub
jo
xchg
icebp
fmulp
xchg
stos
and
cmp
and
jle
repz
mov
adc
test
and
mov
fbld
sbb
pop
cltd
and
mov
inc
add
cwtl
dec
push
pushf
sub
adc
cwtl
negb
jo
lods
jl
test
add
fs
or
test
mov
adc
xchg
sbb
inc
jne
inc
xor
adc
add
mov
add
add
loop
pop
jns
mov
and
mov
outsb
inc
pop
add
leave
mov
insb
xor
es
ja
mov
mov
ljmp
push
inc
push
fimuls
push
iret
mov
mov
mov
adc
inc
push
dec
adc
sbb
sbb
inc
mov
pop
int3
push
add
sti
movsl
cld
call
test
xchg
adc
sbb
jecxz
dec
cld
push
cmc
sbb
mov
test
sbb
or
lret
pusha
mov
or
jp
mov
rclb
pop
lock
adc
mov
ljmp
jo
and
add
aas
mov
cld
sbb
pop
pushf
or
inc
mov
mov
filds
adc
test
xor
lcall
lock
mov
shrb
adc
iret
lds
mov
or
push
sbb
add
mov
aaa
out
add
cmpb
icebp
adc
cmp
jge
mov
push
or
subb
addr16
mov
pop
sub
inc
pop
inc
mov
decb
sbb
xchg
mov
dec
test
sti
adc
and
addr16
sbb
and
xor
stos
rcr
and
adc
pop
pop
rcrb
int3
imul
fsubs
jg
dec
test
and
fsubs
in
int
ficoms
pushf
jmp
stos
pusha
xor
sub
addb
testb
repz
pop
xor
adc
rol
pop
ret
mov
imul
add
aad
xchg
jg
dec
xor
inc
into
dec
pop
add
das
adc
sub
add
dec
cmovge
push
pop
scas
inc
sub
es
push
mov
push
pop
addr16
mov
mov
js
inc
or
sbb
fcmovnu
jae
cmpsl
pop
ret
ret
pop
movsl
lods
adc
push
xor
sbb
mov
fimuls
mov
xchg
push
or
mov
clc
aam
clc
ljmp
pushf
aaa
jbe
pop
and
push
icebp
and
inc
in
scas
jo
pusha
sbb
adc
mov
stos
mov
or
mov
mov
push
icebp
div
or
je
lret
jecxz
ret
cmp
fwait
xchg
stos
mov
mov
inc
mov
pop
cli
incl
jmp
lahf
sarb
push
pop
sahf
aaa
jmp
add
add
push
mov
and
jno
testl
das
mov
inc
je
sti
out
jae
dec
mov
das
cld
popa
push
sahf
mov
in
and
xchg
mov
adc
ljmp
test
loope
sub
fadds
mov
mov
dec
shlb
call
sbb
arpl
sbb
and
adc
pop
je
lds
clc
decl
icebp
shll
cmpsl
stc
sbb
or
lods
popa
push
push
sub
fildl
aad
jb
fs
sbb
lcall
cld
pop
clc
out
push
scas
test
sbb
dec
adc
aas
imul
das
and
cmp
jb
or
icebp
jmp
movsl
jns
mov
push
xchg
jmp
ret
xlat
mov
add
fisttps
or
lret
mov
iret
pop
push
xchg
mov
sti
dec
push
dec
and
adc
das
std
call
pop
xor
and
cld
inc
sbb
cs
sub
sbb
addl
mov
mov
mov
lret
push
std
pop
push
push
xchg
or
dec
mov
mov
nop
pop
adc
mov
jmp
sti
jbe
or
data16
frstor
pusha
or
outsl
icebp
lcall
mov
pop
hlt
sub
xor
add
jmp
imul
rcrl
jns
inc
push
fistpl
or
cmp
jg
xchg
fsubrs
mov
fildll
rorl
pop
in
loopne
stos
xor
add
clc
test
sub
fistps
subb
std
das
dec
inc
jne
xchg
mov
sbb
add
int3
add
cmp
cmp
and
out
lds
mov
xchg
addr16
test
jo
lahf
or
inc
push
mov
ret
adc
mov
cwtl
fisubs
pop
daa
cmp
xchg
sbb
sbb
or
adc
or
jbe
push
ljmp
or
adc
stos
dec
pushf
push
mov
fsubr
adcb
sbb
xchg
ret
jae
mov
rolb
add
mov
shlb
sbb
mov
adc
mov
dec
pop
add
mov
sbb
pusha
pop
cmp
push
mov
int
fiadds
add
add
mov
fildll
pop
xchg
adc
rorl
lods
and
sub
add
mov
inc
ss
sub
inc
out
cmp
test
mov
or
arpl
jb
pop
fmull
cs
add
insb
in
dec
add
movsb
test
cmp
adc
das
mov
xchg
add
cmpsl
cmp
add
pop
mov
mov
sbb
jp
cld
mov
cmc
or
loop
pop
or
inc
dec
daa
je
push
xor
loop
ret
jnp
mov
call
out
push
adc
pusha
xchg
jmp
cmp
add
sbb
mov
push
adc
mov
cmp
mov
loop
xor
stos
and
push
adc
loop
int3
clc
gs
sbb
shlb
loop
inc
or
rorb
aam
push
sbb
test
push
fcoms
fmuls
cwtl
icebp
ret
test
sub
lcall
clc
stos
dec
icebp
test
mov
cld
pop
push
fidivl
adc
call
dec
mov
xchg
je
push
jo
and
xor
outsl
add
movsb
loope
push
mov
xor
cmp
jb
push
stos
and
add
or
pop
pop
mov
xchg
or
and
loop
sub
int
adc
shll
data16
fisttps
cmpxchg
jmp
test
je
lret
rcrb
mov
insb
js
add
sti
or
cld
jmp
sbbl
mov
fmuls
push
shll
and
mov
sub
dec
cmp
inc
adc
and
mov
clc
adc
pop
add
pop
int3
or
sti
sub
add
push
mov
pop
mov
mov
sbb
push
icebp
clc
fsubr
lock
push
bound
lret
sub
lret
lds
stos
fldt
inc
jp
and
xchg
push
xor
add
ficompl
shlb
mull
pop
mov
and
cmp
jge
mov
dec
enter
ja
cld
or
add
xor
rcrl
xchg
cmp
cltd
shl
dec
mov
add
fidivrl
int3
pop
mov
in
dec
add
pop
and
pop
add
and
and
daa
push
je
fiaddl
xchg
inc
mov
push
add
icebp
xchg
outsb
pop
aam
sarb
mov
fdivs
and
xchg
call
arpl
daa
sbb
xchg
jnp
xor
nop
aaa
inc
addb
outsl
test
mov
addb
dec
aad
jbe
dec
inc
pushf
mov
pop
lret
mov
daa
test
add
in
mov
push
inc
push
push
scas
push
adc
push
lods
jo
push
stc
ss
mov
fisubrl
aam
test
jo
xchg
ss
dec
and
jge
inc
wrmsr
cmp
shll
mov
inc
aam
stos
hlt
xor
in
dec
adcb
into
cmpsb
sbb
out
add
adc
mov
add
xchg
add
inc
mov
cltd
lods
fwait
movsb
add
sub
sbb
stos
mov
adc
rclb
filds
xlat
jge
stc
xchg
pop
mov
in
cltd
fisttps
or
mov
cmp
adc
mov
or
adcl
sub
adc
sbbl
pusha
testl
jno
mov
sub
xorl
push
rolb
ja
lock
sub
mov
adc
loope
movsb
inc
sub
mov
push
in
mov
pop
dec
into
cli
fistps
push
cltd
cmpl
cmp
adc
mov
add
lock
stos
and
scas
xchg
jns
mov
ljmp
js
mov
cmp
addr16
adc
adc
or
add
add
dec
inc
add
push
in
pop
push
inc
mov
aam
out
mov
dec
iret
and
dec
xor
mov
loope,pn
pop
loop
out
je
jae
xor
push
dec
pop
mov
popf
pop
repz
jecxz
stos
in
jnp
loope
call
xor
inc
hlt
add
dec
add
leave
adc
sub
jne
shll
int3
mov
pop
lods
add
dec
out
dec
cli
mov
rclb
adc
push
mov
rorb
fcmove
mov
andb
pop
bound
add
scas
ljmp
or
add
movsb
ljmp
push
shlb
cld
mov
imull
enter
sbb
add
and
cmpsb
jno
xor
sub
test
or
rcrb
idivb
bound
sub
fwait
inc
inc
mov
mov
lods
fsubrs
adc
adc
sub
cmp
fiadds
adc
add
pusha
or
shll
std
add
dec
add
dec
xchg
inc
sbb
pop
fsubl
inc
jl
imul
push
xor
in
mov
jae
pop
inc
dec
jle
test
push
int3
fsubs
mov
jp
or
rolb
cs
adc
in
mov
les
mov
sub
sub
lods
push
push
cwtl
divb
loop
outsl
add
dec
add
dec
inc
dec
push
and
ret
dec
and
test
xor
pop
call
mov
fdivrs
xchg
and
push
xchg
cmp
sahf
push
cmpsb
xorb
das
outsb
adc
inc
adc
test
sub
xchg
repz
cmp
ret
int
repz
mov
mov
rclb
shll
inc
aad
stos
cmp
shrb
adc
fcomps
mov
ret
clc
mull
and
js
push
and
cmp
mov
sub
xchg
mov
mov
mov
je
add
ret
xchg
outsl
daa
add
push
add
andl
jp
call
jo
jp
nop
xchg
lods
jo
addb
jg
xor
inc
xgetbv
movsl
nop
aad
dec
arpl
inc
mov
xchg
sbb
outsl
fwait
movsl
rolb
pop
cld
adc
decl
inc
or
les
hlt
incb
adc
ret
and
jnp
ror
sbbb
popf
ror
jmp
push
dec
cmc
ljmp
inc
xchg
icebp
test
js
lds
push
sub
ljmp
mov
ret
mov
jg
inc
cs
fisubrs
mov
jnp
aas
add
cli
add
test
inc
jmp
lods
lahf
sub
dec
adc
jg
popf
fs
invlpg
mov
lahf
add
mov
sub
cmp
pushf
sar
call
movsl
and
add
out
jge
pop
mov
ret
push
lahf
xchg
inc
stos
inc
jg
test
jnp
pop
and
jmp
out
add
push
std
call
into
lcall
sbbb
mov
dec
mov
ljmp
lcall
fxch
insb
cmpl
push
jb
xorb
call
jg
cmc
add
jle
pop
cmpsb
adc
test
mov
jp
xlat
or
popa
testb
fwait
or
loopne
inc
lock
jg
mov
aad
sbb
ss
jmp
call
inc
stos
jg
pop
test
or
and
mov
add
mov
imul
pop
fisubl
dec
add
cmp
push
inc
cmp
and
xchg
test
pop
mov
les
xchg
repnz
scas
fsubs
decl
add
adc
inc
push
mov
lea
pushf
int
xchg
shl
mov
cld
push
cmp
cmpsb
scas
add
xlat
stc
jo
imul
sub
adc
mov
data16
pop
imul
sbb
inc
pop
je
xor
sahf
jne
push
test
pop
pop
scas
loope
inc
in
cmc
add
into
js
jmp
and
int
mov
lods
loope
push
or
inc
xor
sub
jmp
scas
xor
push
push
lods
lods
outsl
cltd
movsl
add
sbb
adcb
jo
and
lock
loopne
rolb
push
stc
sub
add
xchg
mov
adc
add
pushf
push
enter
adc
push
add
outsb
cmp
stos
mov
add
mov
push
add
or
add
inc
mov
out
and
sub
rorl
fimull
test
lods
stos
outsb
jns
xor
xchg
push
fildll
lods
insb
jne
push
sub
cwtl
push
jg
or
out
cwtl
and
ljmp
sub
icebp
mov
sbb
movsb
subb
xchg
dec
push
test
mov
lock
cwtl
gs
add
xchg
cwtl
push
add
sarl
push
loopne
adc
test
ds
jl
ja
mov
jo
daa
xchg
jle
mov
pop
cmp
or
mov
loopne
mov
fisubl
pop
movsb
mov
xchg
mov
and
imul
loop
mov
les
adc
mov
push
pop
adc
test
hlt
ret
daa
test
fidivs
or
sub
xchg
cmp
aaa
ss
insb
insb
cmp
dec
decl
push
and
js
add
cs
adc
or
add
movsl
sub
sarl
xor
xchg
mov
and
pop
or
sbb
pusha
clc
or
repz
roll
mov
repz
stos
and
add
fbld
mov
cmc
add
xchg
ss
mov
adcb
test
orb
cmp
or
add
rorl
jno
fcmovbe
std
xor
js
sbb
adc
inc
sahf
add
xchg
mov
push
mov
push
cmpsl
or
test
xadd
or
inc
outsb
cmpsb
adc
filds
sbb
cmpsl
inc
mov
pop
add
mov
sbb
fidivs
sbb
pop
test
fstp
movsb
sub
dec
cmp
inc
add
push
ljmp
hlt
pop
mov
cs
push
push
push
sbb
add
xor
inc
in
lahf
jle
and
mov
dec
aas
push
pop
es
dec
jno
hlt
sbb
stos
cmp
ljmp
mov
scas
xchg
nop
mov
stos
add
jmp
mov
sbb
cmpsb
sbb
add
sbb
mov
sbb
and
decl
mov
call
inc
xchg
sub
mov
add
adc
nop
mov
in
sbb
sub
xor
enter
inc
xor
jne
inc
les
outsl
lock
and
sub
imul
pop
push
add
call
rorl
adc
pop
xchg
mov
lcall
std
call
shll
mov
xor
idiv
cltd
mov
mov
pop
stos
lea
rcll
call
mov
mov
les
cmpsb
xchg
mov
add
xchg
xlat
push
and
jb
adc
xor
ret
inc
or
or
add
add
rcrb
or
sub
in
jmp
test
fisubl
fsubrs
out
ljmp
inc
xchg
mov
loopne
pushl
cmp
or
cmp
loope
xor
push
dec
mov
out
jns
add
xchg
pop
inc
not
pop
aaa
jp
jg
push
jnp
mulb
xor
dec
inc
movsl
or
arpl
mov
jmp
roll
in
lret
repz
add
iret
out
xor
insb
mov
roll
push
inc
call
adc
dec
add
xchg
pop
clc
or
pop
mov
call
or
ja
fdivp
sub
pushf
sub
cmp
inc
xchg
jle
faddl
mov
and
jne
or
sub
pop
add
and
cld
incl
xor
es
add
jle
pop
ds
jne
popf
sti
add
and
adc
lock
and
pop
sbb
inc
cld
rorl
icebp
jl
rcll
mov
inc
dec
aad
mov
xchg
stos
data16
mov
addl
hlt
fiadds
jbe
fiaddl
divl
out
adc
or
in
sbb
ss
sarb
or
fistps
adc
mov
sbb
pop
fcoms
mov
pop
add
mov
xchg
mov
int3
gs
xlat
sbb
dec
xor
out
mov
mov
add
ljmp
xchg
xorb
ljmp
push
sub
sub
test
scas
or
xchg
js
les
add
jo
add
subb
or
inc
and
jg
in
jp
xlat
and
outsl
mov
inc
je
add
insb
sbb
mov
mov
jnp
pusha
jmp
loop
adc
fcmovnb
mov
nop
dec
in
addl
fs
mov
inc
inc
add
cmp
lcall
cmpsl
sbb
sbb
adc
mov
jl
xor
aaa
lds
clc
leave
dec
outsb
xlat
repnz
inc
icebp
or
lcall
dec
jecxz
fwait
adc
xchg
dec
cmpsl
xchg
add
jmp
adc
out
cwtl
nop
ss
leave
inc
jl
ljmp
dec
mov
xchg
add
mov
inc
add
mov
stc
sbb
mov
fmuls
lea
fldenv
andl
clc
ficoml
rolb
mov
cli
mov
div
cld
pop
push
add
popa
push
dec
cmp
and
inc
sub
ds
rcl
mov
stos
bound
push
andl
or
adc
mov
xor
xchg
js
mov
js
das
push
adc
and
add
adc
in
push
push
jl
or
in
insb
mov
insb
mov
cs
xchg
out
adc
xor
jnp
add
arpl
lret
mov
popf
outsb
test
pop
jecxz
sub
mov
sti
rcl
mov
lock
in
sbb
into
inc
addl
push
dec
adc
test
cmp
mov
imul
cmp
push
ja
push
pop
and
fimull
cmp
fs
daa
loop
rcrl
inc
stc
lret
xchg
pop
dec
add
inc
add
ficompl
or
movsl
daa
push
sub
inc
subb
and
sbb
push
mov
mov
push
push
cwtl
roll
and
es
add
ret
rorl
add
cmp
add
mov
or
hlt
push
push
dec
jb
inc
mov
sbb
jg
or
dec
and
insb
repnz
ja
adc
loope
jnp
ss
cmpsl
or
cmp
add
leave
mov
pop
ja
iret
adc
in
nop
test
jb
addb
pusha
popf
and
outsl
xchg
bound
insb
pop
sbb
lds
push
je
arpl
add
adc
jg
mov
inc
or
or
aas
add
movsb
mov
lods
sbb
xchg
add
sub
sub
mov
das
mov
test
add
pop
orl
adc
push
std
dec
adc
comiss
mov
push
add
pushf
sbbb
push
icebp
sub
sbb
inc
adc
cmp
ja
loopne
mov
mov
push
xchg
lret
stc
mov
mov
adc
test
mov
mov
sub
and
ficomps
loope
sub
in
push
cmp
and
cmp
sbb
fidivrs
mov
inc
xor
sti
fsubrl
ret
sub
mov
popf
loope
xchg
push
mov
rcrl
and
fidivrl
ja
repz
adc
rolb
addb
call
pop
cmp
test
push
je
xor
dec
mov
or
or
pmuludq
push
push
mov
xor
pusha
push
and
inc
dec
aas
xor
loopne
rclb
inc
mov
addr16
jg
pop
aam
sub
fdivs
mov
xor
adc
clc
add
mov
gs
fdivrs
add
fwait
in
add
stos
inc
mov
cltd
cmp
or
pop
mov
mov
xor
xchg
push
ja
shr
push
inc
pop
dec
pop
cwtl
dec
cld
decl
int3
inc
inc
cmpsl
sub
sahf
and
jae
push
xchg
scas
jp
mov
push
mov
rorl
inc
mov
loop
int
dec
mov
lret
or
aas
pop
push
sbb
pop
call
dec
movsl
xor
and
lcall
and
mov
mov
imul
xor
pcmpgtd
test
add
out
sub
and
and
movsb
pop
lods
sub
push
cld
jecxz
stc
xchg
scas
jno
pusha
push
psubq
xchg
das
xor
inc
inc
or
adc
dec
mov
sbb
in
fadds
lcall
push
test
push
dec
dec
in
adc
int
xchg
out
add
and
inc
xor
adc
fidivl
sbb
loope
inc
aam
push
adc
lods
sbb
jo,pn
xor
popa
add
mov
xor
loopne
inc
xchg
jmp
inc
data16
test
add
sbb
out
in
pop
popa
sbb
rcrl
add
xchg
mov
dec
lods
add
cmpsl
xchg
jns
adc
cmp
or
int3
cltd
and
call
adc
cmpsb
dec
roll
in
pop
xchg
imul
and
mov
jbe
lods
inc
push
xchg
ret
jl
pop
lods
push
repnz
jns
inc
outsb
inc
lahf
jmp
mov
inc
daa
sub
fwait
mov
test
js
mov
movsb
xor
adc
push
int
int3
add
pop
xchg
cwtl
add
scas
and
les
and
pusha
out
mov
jl
mov
or
push
xor
jns
push
lock
in
inc
lock
add
dec
cwtl
add
lds
add
mov
mov
inc
hlt
pop
div
pusha
pop
pushf
jb
xor
or
outsb
test
xlat
inc
lock
fsubrl
adc
push
lods
daa
in
pop
adc
hlt
sub
add
js
mov
add
add
hlt
ficompl
test
jns
sub
stos
mov
adc
jae
push
push
mov
mov
test
mov
jmp
bound
or
ljmp
ds
mov
ss
mov
push
jge
inc
sub
call
push
sub
mov
faddl
push
je
stos
and
push
popf
ret
imul
fldenv
push
add
inc
roll
jle
test
sub
add
inc
jg
fsubr
xor
lea
or
xor
add
pop
aad
add
ss
int3
call
pop
cmp
lret
gs
adc
shll
push
jmp
fcoml
push
enter
cmpsb
dec
adc
adc
test
sub
popa
das
stos
lret
sub
push
and
imul
lahf
mov
movsb
das
push
int3
flds
cmp
xor
mov
push
push
es
lods
mov
fstps
or
add
sub
imul
mov
lret
mov
int
adc
popa
pop
or
outsb
push
lock
and
pusha
mov
lods
or
mov
imul
add
hlt
push
dec
popf
aad
pop
ficoml
fcomip
push
mov
sub
pop
push
xor
shl
stos
cli
mov
inc
aam
mov
push
je
inc
sbb
loopne
xchg
mov
sbb
inc
jl
daa
inc
inc
jae
add
inc
and
rorb
mov
mov
movsb
pusha
adc
xor
pop
mov
cmp
sub
dec
mov
push
dec
xchg
or
sub
adc
lret
sub
inc
xlat
sub
fs
bound
jnp
rolb
mov
pop
or
fistpll
sarl
xor
repz
mov
cmp
and
push
adc
addr16
adc
adc
push
or
jo
mov
outsl
pushf
fimull
add
data16
and
cmp
stos
loop
dec
xor
ljmp
xor
xor
out
xor
outsl
jecxz
and
dec
push
pop
data16
ret
test
sahf
stos
movsl
inc
cmp
sub
lods
sub
orl
add
ret
inc
sbb
ss
sbb
sub
stos
sti
sbb
sub
jle
js
mov
mov
mov
testb
leave
testl
popa
adc
call
add
or
jmp
jp
add
clc
mov
add
cli
pop
dec
mov
push
leave
and
push
cmp
icebp
push
aam
clc
lock
push
xor
cmc
add
data16
mov
cmp
fisubs
and
dec
rcl
xchg
arpl
sbb
dec
add
push
fistps
pop
inc
mov
and
add
jmp
dec
mov
add
loope
mov
add
or
divl
std
scas
fwait
or
add
push
or
mov
call
es
fcomip
dec
push
xor
mov
add
negl
dec
int3
add
pop
rcrl
push
xor
rcrb
mov
inc
mov
and
and
dec
inc
lock
pop
mov
jecxz
jecxz
or
arpl
ljmp
data16
or
arpl
lea
add
stc
mov
decl
nop
and
nop
fwait
bound
add
das
add
mov
call
xchg
dec
dec
and
cmpl
repnz
nop
mov
pop
and
decl
pop
adc
xchg
xlat
sbb
mov
cmp
lcall
mov
lahf
add
lods
test
fsubrl
lea
lret
decl
jo
cld
inc
push
xor
aas
pushl
push
pop
das
sti
mov
sahf
mov
inc
pop
and
push
push
nop
call
cmp
xorl
or
inc
jg
xchg
mov
sub
pop
stc
clc
gs
pop
iret
inc
jle
outsb
iret
mov
fildl
sahf
repz
rcrl
xor
decl
inc
jecxz
sbb
xor
jmp
rcr
add
ficoms
std
jmp
mov
pusha
cmp
out
addl
dec
dec
pushf
add
and
adc
mov
fbld
pop
call
inc
push
fwait
repz
sub
add
sub
repnz
and
pop
daa
inc
adc
cmpsb
pop
push
push
and
sub
dec
fisubl
xchg
leave
inc
jl
insl
xor
mov
add
inc
incl
push
fisttpll
and
adc
jns
pop
jb
mov
in
pushl
rcl
movsl
jl
mov
sub
cmp
add
aaa
mov
scas
lcall
xor
outsl
fisttps
call
pushf
insl
mov
xchg
sub
inc
fisubs
and
jae
mov
cmc
and
andb
inc
jl
loop
sbb
outsb
add
add
ret
xor
in
inc
mov
pop
sbb
xchg
or
or
inc
mov
jg
mov
dec
push
ja
sub
je
mov
inc
fldl
adc
jecxz
jl
add
sub
add
or
in
js
sarl
adc
pop
fs
icebp
fsts
xchg
add
shrl
sub
and
xorl
mov
add
cmpsb
ljmp
ret
and
mov
daa
std
loope
fldcw
ret
outsl
lock
test
and
mov
mov
pop
push
pop
add
idiv
call
inc
xchg
sbb
inc
aaa
add
jmp
dec
dec
lds
push
enter
clc
pushl
es
cli
leave
insb
xor
xor
repnz
icebp
popf
add
inc
rcrl
fwait
fwait
push
fbstp
hlt
sub
sbb
mov
and
jmp
mov
fcomps
xchg
daa
ja
mov
incl
push
add
ror
icebp
jnp
push
fnstenv
xor
stos
jb
jl
out
pop
sahf
ljmp
fmul
mov
in
loopne
sbb
ljmp
add
jmp
xchg
dec
test
inc
and
push
xchg
jge
mov
cmpb
push
iret
ljmp
adc
xor
pop
jbe
in
aad
pop
mov
fnstsw
pushl
pop
lret
loop
mov
adc
fcoms
add
xchg
pushf
xchg
decl
bnd
add
adc
jmp
mov
sub
or
fistpll
aaa
scas
mov
add
xor
sub
decl
or
inc
ljmp
jmp
and
fiaddl
dec
pop
pop
popa
mov
out
cli
xor
outsl
lret
mov
xor
mov
call
mov
negb
inc
add
idiv
sub
in
or
arpl
sub
or
xchg
mov
sbb
cmpsb
iret
jmp
out
in
and
cld
pop
arpl
cmp
in
outsl
xchg
or
scas
cmp
xor
dec
in
sub
or
xor
mov
sub
pop
xor
xchg
or
test
ds
mul
sbb
mov
sub
xchg
test
mov
sti
rcrb
fdivrl
rclb
lret
push
inc
inc
mov
adcl
sbb
sbb
sahf
loop
adc
scas
adc
pop
mov
pop
and
arpl
pop
adc
jnp
push
add
add
sbb
popf
ljmp
add
fadd
subb
push
jo
cmp
ss
test
inc
daa
mov
and
fcompl
mov
xlat
leave
pop
push
xchg
stos
loopne
divb
adc
mov
call
inc
mov
iret
add
adc
cmpb
je
in
mov
dec
insl
dec
sbb
push
fs
iret
add
add
pop
inc
dec
movsl
out
add
adc
pusha
pushl
addb
pop
orb
mov
or
or
xlat
push
pop
cmc
xchg
xor
mov
rclb
int3
jb
fiaddl
aam
pop
imul
sub
sbb
insb
xor
sbb
xchg
add
xchg
or
repnz
adc
loopne
jp
mov
popa
or
add
mov
add
cwtl
cli
popl
adc
xor
sbb
ffreep
test
inc
test
inc
cmp
adc
push
enter
mov
push
les
testb
pop
push
rclb
cmp
xchg
test
js
adc
sbb
mov
decb
stos
js
add
mov
lods
scas
in
cli
aaa
jp
xor
pop
les
push
cmpsl
inc
rolb
into
sbb
pop
mov
xor
adc
mov
push
add
add
jg,pn
inc
lea
and
rorl
ds
add
inc
dec
adc
bound
cmpl
stos
fsubl
xor
out
xchg
mov
add
pop
rcll
lock
cmp
lods
test
nop
and
outsb
and
xchg
xor
call
das
xor
shlb
xor
xchg
sbb
jl
ret
mov
sti
push
movsl
jmp
xchg
adc
loopne
cwtl
cmp
ret
adc
or
or
ret
and
push
ret
mov
or
mov
lods
jmp
xor
push
imul
out
stos
push
add
js
mov
xlat
cmc
int
inc
cmpsb
dec
add
fwait
xchg
fsts
notl
dec
sbb
sbb
and
sbb
fisubrs
sub
cmpsb
xor
inc
add
sar
pop
xor
add
add
xor
xchg
clc
dec
addr16
adc
jl
cmp
cmp
jae
xchg
test
mov
fwait
and
dec
push
out
cmp
xor
rol
or
into
out
loope
cmc
stos
nop
xor
int3
lock
and
pop
and
cli
test
push
lcall
out
or
int
xchg
mov
cmp
jg
xchg
or
mov
lods
adc
cmp
mov
les
and
xor
bnd
mov
add
cmp
out
push
call
add
rcl
scas
nop
or
add
push
int3
lcall
fwait
hlt
pop
sarb
xor
jg
adc
sbb
and
inc
pop
cld
and
sbb
push
push
cmp
ljmp
ret
xor
test
sbb
sbb
js
lea
add
pop
add
clc
add
lock
popf
xchg
enter
xor
in
xlat
mov
sbb
and
stos
sbb
inc
fs
je
or
popf
and
or
cmc
mov
cmp
dec
xlat
adc
lds
mov
mov
js
je
adc
cltd
xorb
clc
xchg
push
lcall
mov
xchg
cmpsl
cmp
mov
bts
add
pop
jo
jae
loope
shr
insb
jg
call
popa
xchg
adc
xchg
js
add
and
aas
test
mov
sahf
ret
lahf
test
pop
and
xor
sarl
jg
sbb
filds
out
cmpsb
dec
lret
xchg
inc
push
pop
lret
sbb
jmp
addl
xchg
inc
int3
fbstp
fadds
mov
cmp
push
sti
mov
ljmp
pop
inc
ret
xchg
test
mov
cmpl
xchg
bnd
sbb
bound
or
jp
sahf
xchg
inc
inc
sub
inc
cmp
add
lds
pop
hlt
bound
rcrb
push
inc
jo
and
shrl
clc
jmp
pop
mov
xchg
sbb
dec
nop
add
bound
jg
mov
sbb
fsubrl
iret
jb
inc
xchg
and
push
lods
adc
cltd
adc
decl
xor
xor
sbb
jne
mov
xchg
ljmp
popa
mov
inc
mov
mov
icebp
in
in
lret
iret
sbb
cmpsb
ljmp
cli
orb
mov
fsubrl
xchg
add
dec
add
aad
out
decl
sbb
cmp
xor
mov
incl
mov
pop
test
add
inc
gs
sahf
mov
cmp
mov
push
xchg
jp
cli
xor
mov
xorl
add
outsb
out
in
loopne
push
xchg
and
jg
mov
sbb
pop
mov
subl
pop
pop
xchg
aad
cmp
sub
imul
mov
cmp
cs
leave
fldl
mov
mov
cmp
cltd
xchg
jg
or
enter
xchg
add
jge
je
push
xchg
shlb
jmp
add
xchg
adc
inc
mov
inc
out
dec
mov
sub
int3
xchg
jne
and
cmp
push
or
mov
fbstp
inc
jge
lret
or
mov
dec
mov
inc
push
xor
push
mov
aad
mov
mov
add
gs
cmp
xchg
adc
pop
incb
or
bound
stos
mov
xchg
mov
adcl
xor
stc
inc
shll
pop
loopne
add
add
es
and
add
push
sub
and
sti
popf
dec
js
lods
mov
inc
sbb
fadds
or
cmpsl
xchg
arpl
xchg
push
cs
and
dec
add
mov
iret
push
ret
dec
ljmp
jp
add
sbb
js
pop
les
testl
cltd
sub
data16
and
lcall
mov
jle
hlt
lock
add
push
push
fsubrl
add
fimuls
lods
lret
in
sub
jecxz
outsb
sar
dec
les
rorb
dec
mov
pop
sbb
sbb
xor
mov
add
pop
lds
mov
inc
xchg
popf
shll
add
std
sub
je
ret
imul
adc
jl
add
rorb
ret
push
push
loopne
aaa
cmp
cmp
pop
mov
adc
cwtl
mov
xor
inc
inc
lods
mov
lock
bound
add
cmp
mov
test
xor
push
imul
aam
sub
add
or
jp
into
xor
cmpb
pushf
out
ret
std
js
inc
adc
out
lds
push
int
insl
mov
aas
add
ljmp
push
lock
push
sub
imul
and
fcmovu
lds
inc
pop
and
and
daa
xor
mov
xor
jns
and
xor
nop
mov
mov
outsl
leave
mov
loopne
xor
sbb
cltd
ja
aam
and
push
xor
in
jmp
add
pop
idiv
add
cmp
xchg
inc
mov
add
loop
int3
repz
ljmp
in
lods
or
add
ret
add
mov
js
ds
cmp
mov
xor
sti
cmp
test
cmp
popl
pop
lds
or
push
push
inc
fcompl
ljmp
fwait
out
dec
jecxz
xor
push
push
mov
push
push
sbb
mov
sub
xchg
add
mov
test
dec
and
scas
dec
pop
ja
xchg
add
in
jg
bound
leave
mov
add
add
sahf
lock
inc
repz
or
mov
sbb
in
or
les
and
les
ljmp
mov
and
cwtl
inc
add
jns
int
mov
cmp
jb
inc
cmc
mov
jns
mov
cld
add
das
icebp
decl
dec
popa
roll
nop
pop
cmp
dec
mov
xchg
es
int3
fdivrp
aaa
cli
loopne
loope
ret
loopne
dec
or
mov
imul
aam
mov
loopne
fisttps
sbb
lcall
sub
shrb
or
mov
and
xor
lds
jmp
and
idivb
insl
adc
stos
jl
inc
fadds
or
mov
jae
jp
aam
cld
movsl
add
sub
cmp
pusha
xor
out
mov
push
adc
xchg
add
pop
jg
add
pop
daa
inc
lret
cmp
fistl
das
std
and
mov
repz
mov
ds
xchg
mov
cmp
jecxz
mov
test
ljmp
push
inc
jnp
les
sub
push
lock
inc
hlt
out
movl
and
xchg
adc
add
sub
or
jbe
xor
sbb
jo
inc
sti
call
sbb
jo
xor
rcrb
xor
sub
push
loopne
push
stos
lret
jo
lock
pop
jo
push
adc
adc
dec
mov
dec
rcll
mov
and
nop
or
mov
inc
cmp
jl
pop
mov
adc
movsb
scas
fwait
inc
hlt
data16
scas
jmp
mov
jmp
stc
pop
dec
cmp
mov
push
cmpsl
push
outsw
mov
arpl
dec
jnp
ss
and
ja
mov
in
jge
add
jae
or
lock
cltd
or
mov
push
cmp
shrb
test
sub
inc
sbb
push
popf
xchg
lahf
xor
pop
pop
pop
or
sub
ss
cmc
xor
adc
pop
inc
xor
inc
dec
cwtl
sahf
call
add
push
sub
inc
sub
jbe
cltd
lcall
arpl
push
pop
in
test
inc
addb
loopne,pn
movsl
dec
in
xchg
clc
inc
inc
lcall
aam
ss
les
out
dec
sbb
inc
lock
sbb
sti
daa
pop
mov
xor
pushf
sbb
test
negb
daa
xorb
fisubrs
lret
jo
outsl
cmp
push
fistps
in
ds
popa
ss
push
inc
sarb
or
dec
int3
inc
je
mov
sbb
es
roll
fists
mov
scas
rorl
sbb
andb
mov
sbb
adc
les
push
ret
stos
mov
mov
dec
inc
mov
or
sbb
adc
lret
bound
out
cmp
clc
jbe
add
mov
insb
mov
cli
shll
aam
or
dec
xor
push
and
insb
shll
nop
js
stos
dec
imul
add
insb
and
and
inc
lds
mov
bound
mov
or
fnstcw
add
xor
pop
push
dec
mov
rcr
cmp
and
add
cmp
push
rcrl
scas
mov
or
or
xchg
sub
pop
outsl
adc
sub
test
orb
pop
inc
test
mov
lret
jmp
inc
lea
push
sbb
inc
mov
sbb
sbb
repnz
lret
rolb
add
push
lcall
or
add
sbb
xor
shll
subb
push
add
out
adc
add
sbb
xchg
add
pop
dec
sub
mov
std
push
adc
sub
sbb
dec
jp
cld
inc
push
mov
outsb
mov
icebp
cmpsb
push
icebp
push
jge
clc
andl
add
and
add
mov
loope
push
xor
adc
ss
pop
push
inc
mov
dec
mov
push
add
cld
dec
mov
leave
js
outsb
enter
add
and
cld
sbb
adc
rcll
pop
rclb
push
xchg
pop
icebp
push
ret
testl
jns
movsb
sub
mov
sub
add
popa
jae
in
insb
imul
sub
inc
mov
sti
repnz
pushf
or
mov
xor
out
jg
inc
push
and
dec
adc
je
pop
addb
sbbb
scas
or
xor
clc
jns
aam
cwtl
or
int3
add
push
ret
push
mov
pusha
adc
pop
and
aas
ret
push
stc
push
clc
sbb
in
pop
inc
mov
cwtl
mov
shr
and
lods
rorb
repnz
inc
mov
jmp
or
daa
adc
sub
adc
and
or
inc
mov
pop
xchg
cmpsl
movsl
test
int
inc
sub
pop
add
popa
xchg
pop
rclb
push
mov
lahf
lahf
loopne
mov
and
jmp
ds
lcall
pop
xor
and
pop
jg
cmp
and
scas
cltd
adc
push
add
pop
call
scas
jp
jge
pop
das
pop
sub
cmp
popf
test
inc
and
xchg
jecxz
fisttps
int3
scas
adc
add
jbe
out
jo
xchg
or
insl
loop
jo
bound
sahf
test
cli
xchg
idiv
idivb
xorl
shlb
jmp
cld
loope
incl
js
stos
cmpb
push
xchg
ret
inc
fsts
add
jmp
nop
xor
pop
adc
sub
in
cld
mov
sbb
and
push
pop
jbe
sahf
stos
pop
mov
mov
std
or
mov
xorb
das
and
jb
stos
test
pushl
daa
cmp
jg
add
out
gs
out
fidivrl
dec
ret
cmp
xchg
loopne,pt
aas
jno
push
mov
dec
mov
test
filds
cli
mov
jmp
mov
and
adc
outsl
out
add
xchg
jae
mov
adc
cmp
cmc
ret
or
xor
and
adc
call
mov
cmp
mov
and
dec
or
ljmp
stos
cld
test
inc
pop
and
mov
stos
cmp
jg
jmp
cmp
jb
jge
cmpsl
ss
call
jb
adc
outsl
cld
aas
xor
inc
flds
inc
shlb
cmc
cmp
pop
dec
mov
add
repnz
mov
ret
icebp
push
lods
and
test
push
jne
arpl
xor
decl
sti
stos
ss
sub
adc
jmp
mov
cmp
push
in
pop
and
das
inc
xchg
sbb
sub
jle
mov
jge
inc
push
rolb
jmp
fstl
cmpl
addr16
inc
adc
mov
aam
xor
rorb
and
iret
icebp
pop
sub
lahf
add
outsl
adc
cmpsl
pop
enter
arpl
js
popf
and
fmuls
das
pushl
js
inc
roll
add
repnz
pop
jp
pusha
js
push
sub
cli
mov
adc
jecxz
lcall
pop
sub
loopne
imul
es
stos
pop
add
inc
mov
pop
arpl
jmp
js
mov
mov
popa
orb
push
cmpsb
aaa
ljmp
add
loopne
dec
imul
sub
rolb
test
out
icebp
inc
mov
call
call
pop
pop
nop
sub
mov
cmp
mov
clc
sub
ficompl
adc
mov
and
test
sbb
mov
ds
sub
or
or
sbb
and
jmp
fildll
xchg
or
pop
cmpsb
jl
xor
mov
pop
dec
nop
jg
ffree
mov
cmp
sbb
sbb
add
adc
xchg
test
pop
popa
outsb
mov
add
hlt
aad
mov
lods
dec
mov
test
mov
lods
imul
int3
orb
jns
je
or
in
pop
sub
movsb
pusha
leave
adc
sbb
add
jbe
jns
push
or
and
fs
stos
je
cmpsl
filds
cld
jg
cmp
adc
push
lock
daa
addr16
or
clc
ljmp
outsb
lods
clc
lcall
aad
fnstenv
mov
incb
mov
and
mov
push
push
push
mov
js
pop
xor
cwtl
call
mov
cmpsl
push
rorl
dec
insl
icebp
enter
pushl
add
rorl
jnp
jmp
cld
aam
sbb
pusha
inc
jl
inc
or
loopne
mov
in
clc
ss
push
xchg
mov
aaa
add
jmp
mov
xchg
enter
sbb
cld
or
inc
and
roll
mov
cmp
adc
cmp
adc
or
mov
aas
push
xchg
add
lret
jecxz
hlt
fsubl
adc
mov
fistl
mov
cli
test
adc
jno
in
add
mov
lret
pusha
aaa
push
sub
bnd
add
enter
xor
xchg
fcomp
pop
jge
divl
fcoml
ljmp
scas
ds
and
sub
push
xchg
enter
pop
xchg
adc
cwtl
add
mov
out
adc
sub
adc
sub
aad
ds
push
cmp
sub
scas
cmp
add
jnp
lcall
adcl
iret
xor
xor
push
and
xchg
add
inc
cmpsl
test
sub
fsubrl
add
sbb
push
and
popf
mov
sbb
push
scas
adc
dec
fstp
jecxz
andl
mov
rcrb
divb
popf
mov
or
sbb
sbb
cmc
xchg
add
incl
incl
mov
mov
and
mov
outsb
mov
ret
out
adc
push
pop
sub
xor
popa
lods
int3
dec
ljmp
nop
mov
cltd
sub
or
das
call
cmp
inc
xchg
push
in
mov
and
rep
and
add
fldenv
rorl
movsl
mov
sbb
addb
or
jnp
and
test
xchg
xchg
push
mov
or
mov
mov
and
xchg
dec
mov
pop
data16
clc
rcr
mov
idivb
les
int3
push
push
add
jbe
add
mov
xlat
subb
pop
daa
add
mov
mov
add
mov
sub
shlb
adcb
jecxz
cmpsl
sub
xchg
jecxz
data16
pop
or
push
mov
notl
sbb
fldcw
add
inc
push
hlt
mov
sub
mov
addr16
cmp
push
int
rclb
sbb
pusha
movb
sti
lahf
sub
xchg
adc
push
jae
movsl
and
add
je
repz
sub
repz
in
add
adc
stc
or
add
into
mov
xor
mov
and
shlb
and
and
inc
or
mov
mov
or
scas
cmpb
pop
jb
mov
add
jnp
loopne
stos
icebp
jo
push
in
sbb
inc
icebp
inc
lock
cmp
hlt
outsb
sub
push
sbb
jmp
or
adc
or
rcrb
push
add
push
add
sub
sub
lods
sbb
ljmp
rcr
imul
idivl
mov
push
cltd
mov
sub
add
dec
sub
out
add
adc
mov
xchg
dec
test
inc
out
fdecstp
mov
sbb
jne
clc
and
in
or
shlb
mov
enter
pop
xchg
pop
jb
or
inc
fadds
jno
js
pop
adc
enter
mov
sbbb
out
outsl
out
sarb
adc
xchg
xchg
enter
add
les
push
mov
add
enter
xor
and
test
scas
lcall
faddl
and
mov
pop
sub
stos
mov
ficompl
aaa
or
jp
jne
mov
mov
test
pop
jb
pop
cwtl
mov
jo
dec
subb
mov
sbb
adc
and
fsubs
sub
imul
jno
shll
inc
inc
add
jae
or
in
add
pop
pushf
xchg
rclb
or
mov
dec
bound
add
push
push
mov
out
dec
popa
xor
mov
add
ds
fisttpl
and
pop
in
or
cmp
notb
pop
inc
clc
in
in
and
dec
add
les
orb
jo
lret
jne
les
inc
rorl
mov
or
rcll
add
adc
dec
cld
loopne
jns
and
in
jns
add
pop
cli
roll
or
mov
inc
hlt
ret
in
pop
cmc
pop
lcall
pop
lods
and
pushf
dec
movsl
pusha
mov
lods
aas
xorb
repz
pushl
pop
lds
jecxz
hlt
aam
jae
inc
pop
add
add
jo
fimull
inc
int
cmp
scas
mov
mov
add
xchg
jne
jbe
mov
inc
push
xchg
decl
ficomps
loope
mov
xchg
test
pushl
inc
shlb
lods
es
arpl
and
mov
inc
mov
lods
arpl
xchg
andl
mov
or
pop
sbb
sub
pop
cmp
in
pusha
jmp
push
mov
adc
aam
pushl
and
add
sbb
sbbb
fnsave
mov
incl
mov
mov
mov
inc
xor
fcomps
ljmp
cmp
sub
add
push
das
mov
movsb
jns
movq
das
lcall
imul
xchg
pushf
out
add
notl
loopne
sbb
add
cmpsl
sbb
mov
lcall
fldt
nop
shrb
mov
scas
lahf
push
leave
dec
lahf
sub
inc
aaa
mov
lret
cmp
popa
loop
jmp
outsl
sbb
dec
jecxz
xchg
fwait
test
rorb
add
adc
sbb
pop
fs
adc
pop
push
outsl
push
sub
test
push
mov
mov
je
sbb
test
and
add
arpl
das
adc
decl
and
jmp
aad
popa
lahf
sbb
or
mov
ja
mov
cmp
inc
cs
cmp
sbb
cwtl
fsubrl
lcall
pop
test
js
lods
dec
aaa
jne
mulb
cs
jg
add
lahf
xchg
aas
adc
adc
pop
loopne
cmp
pop
cs
cmp
jge
test
clc
mov
movsl
jecxz
mov
test
mov
adc
test
cmpsl
rolb
into
push
dec
xchg
outsl
cmp
adc
adc
add
aam
fisubrs
pop
sahf
les
mov
pop
loope
sbb
jmp
mov
cmp
ficomps
jg
sub
mov
idivb
add
cmp
add
add
enter
inc
iret
adc
sbb
jo
add
mov
mov
inc
xor
test
hlt
mov
lea
pusha
sub
cwtl
insb
push
jp
sub
inc
test
int3
inc
aam
jnp
or
sub
push
mov
or
cmp
aaa
push
push
out
jbe
inc
jmp
cmp
aam
xchg
mov
pop
xor
mov
movb
lret
inc
jb
mov
vmulps
dec
push
dec
cmp
fidivrs
lods
aaa
out
repnz
clc
adc
mov
inc
adc
add
jo
xchg
inc
inc
add
jne
ljmp
or
test
sbb
aam
xor
mov
pop
add
push
jbe
cmp
js
jg
cmp
js
cs
int
cmc
sub
adc
adc
inc
nop
cmp
mov
aas
or
lcall
adc
jae
dec
xlat
mov
subb
inc
xchg
sbb
add
in
cli
test
ljmp
jne
jae
sti
ror
push
mov
jge
test
cmp
mov
xchg
mov
xchg
out
es
pushf
xchg
and
mov
pusha
jmp
fists
cmp
cmpsb
xor
dec
ss
cmpsb
aaa
ss
inc
aad
call
add
call
xchg
negb
xor
outsl
jnp
clc
sti
rolb
shll
adc
jno
dec
pop
sti
leave
mov
jg
cmp
xor
inc
xchg
pop
sub
or
lret
clc
fsubl
mov
jne
sti
mov
sub
sub
lea
pop
int3
addl
popf
jo
inc
decb
jg
sbb
sub
or
out
fsubl
jne
jns
lock
jg
in
loop
pop
daa
jnp
mov
sbbb
and
outsl
std
cmp
xor
leave
repz
dec
mov
jmp
jp
jp
and
sbb
mov
addr16
jmp
test
push
rcrb
push
push
sub
lret
jo
lret
aad
xor
lahf
in
add
mov
filds
xor
in
mov
mov
push
stos
aam
push
pop
push
dec
or
push
ljmp
mov
mov
les
adc
jecxz
bound
les
lahf
ficomps
call
ljmp
ret
jl
push
mov
fstpt
fmull
jo
aam
adc
scas
mov
lret
and
jmp
shll
js
icebp
in
push
setae
lods
mov
cmp
out
xor
je
lret
mov
pop
push
lcall
or
dec
mov
cld
lods
loope
pop
nop
rcll
mov
aam
mov
cld
fdivrs
and
inc
adc
pop
mov
push
nop
jg
mov
xor
ret
arpl
lds
imul
js
fsub
or
add
mov
mov
sbb
into
cld
adc
mov
inc
das
pop
cmp
int
cld
sbb
js
xchg
loopne
shll
dec
xor
leave
pushl
shlb
inc
ljmp
ljmp
mov
pop
jo
pop
push
inc
adc
cs
or
sbb
mov
cwtl
sti
test
pop
push
je
adc
or
les
das
cmp
sbb
mov
add
pop
and
mov
movsl
test
sbb
and
sub
xor
mov
cmp
push
cmp
call
cmpb
jno
nop
pop
sbb
xor
adc
cmp
sbb
decl
xchg
pop
pop
dec
mov
add
or
loopne
std
movsl
int3
or
pushw
inc
inc
mov
xor
adc
add
aaa
das
sub
imul
sub
jl
dec
or
mov
imul
inc
pop
or
push
mov
nop
ds
bound
incl
and
dec
inc
ja
xchg
test
aaa
rorb
mov
mov
inc
mov
lea
std
mov
mov
aam
popf
addr16
das
insb
sbb
cmp
popf
int3
cmpb
cmp
pop
outsl
push
adc
pushf
add
mov
push
inc
sbb
adc
or
xchg
xor
add
ljmp
jno
push
nop
add
adc
fcom
sub
inc
call
mov
ror
fs
ss
jno
inc
out
aaa
call
rcll
in
adc
add
pop
loop
icebp
and
and
enter
xor
shrb
into
jbe
les
ror
popa
push
pop
mul
fucomip
cltd
mov
cltd
and
inc
andb
inc
inc
ja
insb
nop
movsl
mov
mov
mov
lds
lcall
adc
aas
data16
clc
pop
call
or
inc
inc
lahf
mov
std
das
std
out
sbbb
andl
arpl
dec
cmp
ljmp
fs
orl
pusha
adc
addr16
mov
dec
sbb
push
adc
mov
or
inc
add
aas
mov
sbbl
jb
push
rcr
ret
push
pop
xor
and
enter
adc
mov
mov
test
xchg
xchg
inc
sbb
popa
sti
lcall
scas
inc
in
cwtl
pop
cwtl
in
mov
cmp
pop
mov
push
sub
dec
enter
aam
bound
mov
inc
push
ret
pop
mov
pop
jge
or
xlat
pop
mov
loope
and
mov
inc
stc
or
mov
mov
jb
fsts
mov
sti
aaa
sub
inc
cwtl
les
or
shll
and
mov
mov
sar
sbb
xchg
pop
lcall
push
std
lcall
roll
inc
xor
cmpsb
xor
mov
cmp
outsl
ss
inc
ret
sbb
addb
cmp
cmp
clc
fisttps
pop
add
imul
sbb
mov
decl
pop
lea
sbb
adc
sub
xchg
xor
pusha
push
inc
insl
std
das
cld
sarb
add
movsb
mov
add
add
jg
pop
sbb
adc
movsl
fbld
jne
jg
loop
and
dec
test
imul
sti
call
cmp
pop
add
inc
pusha
push
add
or
push
rcrb
sbb
jle
pop
cmp
sarl
dec
xchg
xchg
mov
lock
lahf
jle
test
lock
sub
xor
pop
and
nop
pop
mov
js
decl
sbb
push
movsb
xchg
lock
dec
or
fcoml
or
ljmp
push
inc
jno
jge
add
shrb
js
xchg
aaa
gs
fisttps
dec
in
dec
push
inc
sbb
adc
lods
scas
out
hlt
push
push
pop
jp
call
xchg
int3
and
inc
push
loopne
cmc
popa
cltd
movsl
adc
mov
jnp
push
or
mov
sub
dec
lea
or
stos
push
push
mov
je
notl
lret
or
and
icebp
add
loopne
cli
movsl
fsubs
fsubr
cmpb
sti
xchg
loopne
es
mov
adc
and
xchg
repz
add
into
sub
jmp
add
sbbb
sub
lcall
mov
mov
sub
xchg
mov
push
mov
out
sbb
ficomps
rcl
and
cmpb
adc
fdivp
loope
mov
lock
test
js
sub
dec
fcos
mov
pop
xchg
inc
mov
arpl
pop
add
out
add
cmp
bound
pop
movsb
sub
jecxz
mov
mov
mov
loope
lret
dec
mov
xlat
and
ljmp
fwait
push
call
call
loope
pop
mov
cli
jae
fldt
pop
fcomip
dec
cmc
dec
add
cmp
ljmp
and
sbbl
mov
scas
popa
pop
xchg
mov
add
lds
add
divb
and
jle
adc
dec
xor
aad
cli
outsl
xor
cltd
jb
dec
and
bound
decl
add
xchg
adc
and
aaa
adc
rcrb
adc
movsb
pushf
inc
ret
sub
adc
xchg
and
push
mov
add
jo
mov
mov
pop
rorl
mov
or
xor
dec
inc
or
cltd
push
sbb
shlb
add
adc
push
imul
xor
mov
or
adc
addr16
scas
lds
and
loop
or
xchg
int
inc
mov
and
adc
add
pop
sbb
or
or
sbbl
int3
xchg
push
sbb
cmp
popw
push
aam
adc
push
fs
push
mov
or
inc
or
and
aaa
inc
pop
mov
leave
fidivs
loop
in
rcrb
js
addb
out
cltd
xchg
cmp
xor
jne
xor
jecxz
loop
sahf
adc
xor
add
sbbl
mov
adc
mov
inc
add
lds
jle
add
ret
mov
push
in
inc
ds
add
sub
adc
dec
shl
pop
pavgb
adc
popf
fcomi
.byte
pop
incl
or
js
cli
sub
les
jmp
je
mov
ret
and
leave
ret
pop
and
imul
pop
ret
adc
pop
pop
add
add
sti
std
mov
pop
ret
adc
adc
mov
out
das
sub
or
xchg
or
adc
sub
dec
or
dec
dec
outsl
filds
adc
adc
inc
adc
inc
call
adc
add
mov
inc
add
sub
adc
inc
mov
or
pop
mov
or
fdecstp
fdecstp
test
sbb
and
inc
or
fistl
das
inc
and
pop
xor
notl
or
dec
add
push
rcll
xlat
pop
ja
sbb
and
lods
or
inc
inc
jo
jbe
pop
imul
or
mov
test
pop
cmp
test
mov
xor
nop
insl
fidivl
dec
xor
mov
insb
imul
sub
adc
pop
adc
sub
xlat
pop
popa
xor
jae
outsb
call
pusha
adc
int
cmp
push
clc
in
stos
pusha
pop
jae
test
loope
sbb
push
imul
ret
xchg
shll
or
test
or
sub
jp
dec
addl
adc
add
decl
int
sbb
dec
lock
stos
lock
insb
adc
adc
cmp
push
dec
lahf
movaps
and
enter
adc
push
mov
lea
clc
jg
incl
xor
fs
add
mov
mov
sbb
cltd
ljmp
lods
std
in
decl
xor
imul
jns
add
and
push
and
test
cmp
inc
sub
shll
movsl
sbb
jns
lahf
sub
jmp
lcall
movsb
sbb
dec
stos
dec
add
test
xor
push
addb
lea
jge
and
add
push
mov
mov
push
add
or
daa
sbb
and
adc
nop
xor
ljmp
or
inc
int
stc
mov
xor
add
repnz
outsb
mov
mov
mov
xor
cmpb
mov
add
cmpsl
arpl
push
fldt
data16
in
mov
pusha
nop
aaa
xchg
scas
jp
mov
mov
pop
mov
sbb
push
popf
lea
dec
leave
add
cmp
jge
mov
dec
add
cltd
shll
or
mov
rorl
adc
jb
mov
mov
xor
in
jg
sbb
incl
int3
or
mov
sub
outsl
or
add
jle
sub
sbb
outsb
pusha
dec
cltd
push
sbb
jmp
bound
xorl
and
sub
lock
add
aas
mov
cmp
leave
mov
add
add
outsl
ljmp
or
push
rolb
test
and
nop
mov
lock
outsl
fbld
test
daa
sbbl
sbb
fisttps
push
in
and
mov
cmp
loopne
adc
lds
ret
mov
jp
add
lock
push
cmpb
push
xlat
adc
jne
or
call
fisubrs
and
inc
stos
adc
add
int
pop
repz
mov
sbb
lock
sub
inc
cmp
xor
incl
test
mov
adc
xor
mov
jmp
clc
cmc
loopne
and
sbb
jmp
test
mov
inc
test
and
lock
push
imul
push
mov
sbb
neg
icebp
lcall
std
mov
push
stc
or
xor
nop
mov
or
cli
sbb
add
cli
rolb
mov
adc
stos
insb
add
test
and
fildll
dec
jecxz
es
add
aam
and
imul
adc
fistps
or
mov
fdivs
mov
test
mov
lcall
les
sub
mov
out
pop
in
cld
mov
incb
leave
shlb
sub
add
pushf
das
fisubs
xor
sbb
inc
or
or
xchg
or
lock
dec
movnti
mov
xchg
or
and
mov
ljmp
sub
add
mov
or
sub
and
jg
or
push
add
cmp
cmp
movsb
add
push
ds
xor
or
sbb
pop
loop
xor
icebp
add
ljmp
out
dec
clc
ret
mov
es
pop
xor
ss
inc
adc
mulb
loopne
int
and
add
add
lods
bound
cmp
pop
aam
sahf
add
mov
and
add
ljmp
mov
iret
in
aam
scas
pop
popa
fdivrp
jg
xor
insb
xor
lcall
incl
cwtl
inc
jne
xchg
popf
pushf
pop
inc
jmp
and
and
adc
ud0
push
and
icebp
add
shrl
ficomps
in
in
in
add
neg
sbb
add
sbb
xor
outsl
ljmp
rolb
push
push
and
xchg
and
mov
decl
sbb
xlat
add
mov
and
push
xchg
clc
jecxz
leave
jge
pop
decl
jecxz
sbb
or
cmp
adc
jg
mov
and
pop
or
sbb
inc
and
fcomi
scas
sbb
leave
xor
mov
fbld
mov
insl
add
jo
das
jl
pushf
mov
inc
add
out
sub
call
filds
ja
adc
mov
xor
mov
xchg
in
incl
aas
xor
adc
and
mov
inc
sbb
mov
test
add
int
cld
or
inc
test
xchg
mov
pop
outsb
mov
jae
jnp
sbb
add
imul
xor
inc
add
call
sbb
add
cli
stos
cmc
cli
add
pop
xor
rcr
outsl
adc
mov
xchg
cltd
shll
mov
fisttps
stos
pop
add
sub
dec
imul
icebp
ret
dec
xchg
sbb
pushl
cmp
add
sarl
fsubl
jg
imulb
orps
and
sbb
sub
jmp
pushl
loope
sbb
es
dec
icebp
add
imul
xchg
push
jg
adc
and
loopne
sub
or
lock
mov
push
xchg
movb
das
mov
push
sub
adc
subl
cltd
add
popa
pop
int
adc
ret
adc
mov
and
and
xor
dec
jg
test
or
mov
mov
stos
pop
std
jg
das
xor
out
js
mov
shlb
and
or
shll
add
xor
adc
jns
das
gs
push
repz
adc
fnstcw
add
dec
or
out
inc
sub
and
add
pushl
jg
add
jb
push
ja
sbb
mov
adc
cmp
popf
jge
mov
mov
pop
leave
sub
cmp
mov
arpl
ds
mov
and
icebp
or
mov
in
sbb
cmp
outsb
shr
sbb
pushf
mov
adc
or
outsl
sahf
fnstenv
pop
aad
in
sub
dec
push
xor
or
lret
jge
add
pop
push
xchg
cmp
mov
sub
add
mov
insb
nop
in
int3
sarb
mov
fucomi
sbb
sbb
sub
aaa
enter
sarl
mov
xorl
jbe
jnp
fmuls
test
or
xor
fnstsw
mov
dec
gs
pop
test
lds
lods
push
pop
gs
adc
outsl
jmp
push
inc
sahf
sahf
sub
nop
insb
nop
outsl
jmp
mov
mov
sbb
lcall
test
aas
inc
add
mov
lret
data16
bound
and
movb
mov
js
lahf
repnz
xor
sahf
sub
push
jmp
push
xor
or
adc
mov
pop
movsb
xlat
inc
je
adc
and
jno
cli
xchg
sbb
or
or
test
mov
sbb
lahf
push
leave
into
lret
fistps
in
data16
adc
jl
sbb
in
inc
not
in
pop
addr16
rolb
inc
mov
add
xchg
ret
in
cmp
or
jnp
and
adc
mov
sahf
in
aaa
xor
push
mov
stc
testb
fwait
inc
and
add
mov
aas
mov
imul
and
fisttps
mov
insl
sub
lock
or
jo
imul
mov
cmp
test
inc
mov
inc
xchg
xor
adc
inc
push
jnp
sbb
loope
lods
xchg
or
insl
cmp
jnp
mov
push
pop
sbb
push
xchg
mov
frstor
adc
or
pushl
sbb
divl
lock
mov
add
movl
movsl
ljmp
and
mull
mov
neg
mov
mov
sbb
adc
dec
negl
neg
mov
fcmovu
adc
mov
mov
ret
mov
pop
mov
cld
or
cmc
mov
push
fiaddl
mov
push
push
add
popf
sub
xor
pop
jns
pop
dec
enter
roll
adc
pop
mov
ret
mov
adc
mov
sub
inc
imul
add
aam
popf
cmp
sbb
push
dec
fwait
fs
xchg
dec
lret
or
push
jo
fildl
dec
pop
add
lcall
cmp
add
lods
inc
cmp
lret
jbe
in
dec
pop
or
mov
jmp
mov
inc
mov
dec
and
sub
adc
and
or
cs
add
jecxz
imul
adc
bound
dec
mov
push
push
cmp
mov
ljmp
in
fistl
inc
fistl
loop
adc
mov
inc
loope
or
sbb
addl
clc
inc
testl
add
test
mov
cmp
lret
lock
mov
fldt
or
xor
in
pop
je
enterw
jns
mov
std
pop
jae
shll
add
sub
lock
inc
xor
or
cmp
adc
cmp
pop
cmp
push
xor
mov
aas
not
js
mov
add
push
rcll
scas
jge
xor
sbb
cmp
jecxz
pop
jo
ret
inc
add
dec
xchg
sbb
mov
or
add
or
lea
adc
lods
push
jg
addl
rcr
mov
xorb
or
sub
shrb
dec
add
or
hlt
add
sbb
jge
es
icebp
pop
pop
mov
loop
hlt
mov
cmc
adc
shll
loopne
gs
insl
sbb
adc
and
jb
inc
push
repnz
icebp
inc
cwtl
lock
mov
stos
fcmovnb
dec
xor
icebp
mov
std
lods
push
das
fldt
addw
push
clc
arpl
inc
push
and
sbb
cmp
push
cmpsb
out
jmp
out
xor
sub
repz
cmp
cmp
inc
ret
and
out
push
jmp
push
push
clc
dec
je
popa
js
sbb
pop
cmpsb
ficomps
ret
cmp
and
sub
iret
sbb
add
sbb
dec
daa
cwtl
aad
add
mov
adc
lock
stos
pop
mov
mov
mov
dec
inc
fisubrs
sbb
adc
cmp
adc
xchg
dec
cmp
mov
cmpb
cli
sbb
mov
push
jecxz
enter
mov
es
or
push
std
insb
xchg
sahf
test
cmpsb
in
xor
rolb
mov
sbb
jmp
push
adc
mov
lock
or
nop
test
add
dec
push
fs
dec
mov
add
fisubrs
je
sahf
out
dec
inc
ljmp
cmp
adcb
int3
adc
fwait
outsl
xor
test
add
test
stos
push
call
dec
xor
ss
paddsb
add
rcrb
xchg
adc
daa
shrl
ret
shll
das
mov
dec
aaa
xchg
pop
push
call
int3
and
jecxz
mov
in
mov
aad
inc
push
in
inc
inc
xor
aam
xchg
pop
sbbl
pop
jmp
and
cwtl
rorb
sub
and
dec
jmp
sub
sbb
mov
loopne
pop
movsb
push
pushl
lea
push
call
clc
sbb
cltd
and
aam
xor
out
in
jge
pop
or
xchg
cmp
es
ss
adc
cmp
test
dec
movsl
pusha
lea
sub
popf
adc
add
pop
aam
mov
mov
jge
cmp
xor
jge
push
aaa
das
inc
mov
int
cmp
out
inc
lcall
adc
lret
gs
adc
mov
bound
in
sbb
push
cli
call
out
and
je
adc
aad
mov
inc
lcall
lret
push
jns
sub
subb
shll
or
addr16
jmp
call
xchg
mov
mov
test
xor
test
scas
add
sbb
scas
outsl
mov
cmp
pop
outsl
ret
xor
xchg
outsl
je
aam
jmp
dec
inc
jmp
cli
pushl
jmp
or
jmp
fstl
js
je
inc
gs
nop
roll
add
ljmp
movsb
and
sbb
leave
insl
mov
add
jg
mov
jmp
and
sub
cmp
pushf
not
fldl
jg
add
pop
xor
and
inc
cmp
fldl
jge
bnd
out
inc
sbb
inc
inc
jg
call
inc
dec
inc
movsb
xchg
enter
and
and
lahf
mov
cmc
out
add
ret
sbb
jb
xor
inc
pop
mov
push
sub
or
inc
out
inc
dec
mov
cli
pop
mov
loop
lahf
andb
or
sbb
ja
add
repz
in
fldt
mov
lods
cmp
shll
inc
sbb
dec
add
fwait
and
lret
jno
mov
xorb
inc
test
xlat
adc
std
pushl
iret
mov
inc
dec
aas
inc
cmp
call
sbb
add
push
in
outsb
lods
adc
aaa
dec
add
sbb
mov
stos
incb
shrb
dec
mov
pop
mov
jecxz
loope
shlb
lods
xor
test
inc
mov
scas
add
out
xchg
sbb
add
xor
mov
pop
js
push
and
inc
jno
andb
scas
sbb
add
push
or
ret
stc
seto
in
sarb
dec
or
fadds
cwtl
add
mov
stos
cmp
add
daa
pop
bound
mov
push
outsl
add
jbe
adc
sbb
repz
outsl
rcrl
inc
or
adc
aaa
fisttpl
pop
sub
push
xchg
jle
call
mov
mov
push
xchg
mov
jmp
dec
or
sbb
insl
ret
loopne
pop
cmp
inc
loope
or
add
cld
mov
adc
sbb
out
cwtl
outsl
scas
inc
std
cli
in
orl
imul
sbb
aas
and
add
push
stos
hlt
fsubrs
pop
and
dec
adc
jne
cmp
sub
fistl
ljmp
ljmp
shrl
nop
xor
sbb
mov
pop
dec
sbb
movhps
jg
jg
aaa
dec
imul
push
jp
xchg
pop
andl
inc
icebp
mov
and
add
aas
add
outsb
mov
pop
xchg
ss
popf
ret
mov
add
add
lods
pop
decb
hlt
rcrl
dec
adc
lss
cmpsl
lret
mov
call
arpl
dec
pop
xor
test
ret
incl
sub
jbe
ja
stos
pusha
mov
sub
dec
icebp
xchg
lcall
scas
mov
fdivrs
out
push
or
adc
hlt
mov
mov
pop
mov
inc
cmp
and
xor
in
push
sahf
pop
lcall
add
cmp
mov
add
outsl
movsl
pop
ds
jmp
fstpt
sbb
pushf
sar
xchg
push
popa
jg
out
sarb
stc
mov
aaa
mov
and
fmul
inc
rcrl
sub
stos
stos
data16
jo
cltd
xchg
ljmp
jmp
pop
mov
mov
dec
outsl
les
add
push
fstpt
cld
push
js
fsubrs
dec
aaa
je
cmpsl
inc
out
xor
push
add
fldt
lock
pop
test
mov
mov
rorb
mov
decl
arpl
add
insl
insb
mov
mov
clc
dec
fs
push
dec
mov
incl
push
orb
jns
or
mov
cmp
imul
xor
jne
jo
lods
and
inc
ds
jecxz
fsubrl
scas
adc
xchg
xchg
fucomi
sarb
mov
adc
stc
jg
push
jns
ret
mov
ljmp
xchg
add
inc
nop
push
push
rorb
addl
rcrb
pop
or
jnp
addb
or
push
fiaddl
mov
mov
nop
lods
pop
mov
pop
inc
push
pop
pushf
pop
adc
repnz
mov
push
jl
iret
call
pop
outsl
xchg
add
jnp
ljmp
pop
aaa
dec
shl
xor
andb
jle
flds
adc
jl
xchg
sbbb
sub
ja
pop
fcmovnb
daa
dec
pop
stos
push
jbe
psubusw
lahf
xor
xor
xchg
cmpsl
fistps
mov
mov
and
jo
jg
xor
das
movsb
popa
fldenv
shrb
dec
lret
stc
push
cmp
scas
fsubs
cltd
jb
sbb
lods
cmc
fidivl
cwtl
dec
pop
dec
outsl
dec
mov
inc
push
int3
pushf
mov
pop
enter
fwait
jp
repnz
outsb
fsts
mov
xchg
test
js
mov
iret
push
rorl
divl
and
push
sub
movsb
jmp
adc
or
cmp
add
movsb
inc
incl
mov
inc
xchg
stos
adc
mov
sub
sbb
subb
daa
sub
mov
xor
ds
pop
mov
mov
imul
shlb
cwtl
inc
cld
push
fdivrp
addr16
nop
rolb
gs
jno
bswap
call
call
ds
or
std
inc
loopne
icebp
lahf
jne
movsl
int3
inc
rol
adc
lock
outsl
push
adc
sbb
dec
sbb
jmp
inc
mov
aaa
adcl
mov
popa
fcomps
std
inc
aad
add
gs
jge
imulb
jl
punpckldq
inc
cld
cmp
shll
cmpsb
xor
mov
sub
mov
lods
xor
inc
mulb
xor
outsl
cld
or
sbb
mov
pop
xlat
arpl
cs
and
test
jp
lock
decl
negb
mov
fidivrs
push
and
or
sub
es
pop
loop
mov
add
addl
in
lcall
jg
int
aad
outsb
nop
aad
shlb
mov
sub
ds
cmc
dec
cmp
jb
xchg
push
cli
and
xor
sbb
or
inc
cmp
inc
fucomi
rclb
mov
dec
dec
daa
cmpb
adc
inc
sarl
push
cmpsb
aas
push
jmp
int3
lcall
cmp
or
xchg
loopne
insb
add
lret
push
imul
ljmp
pop
push
mov
xor
inc
adc
hlt
push
pop
mov
lods
clc
incl
movsb
popa
iret
push
call
or
or
pushf
dec
mov
sub
jno
sbb
sbb
sbb
xchg
dec
inc
imul
mov
jb
lods
add
gs
out
mov
mov
ret
dec
jg
pushl
incl
jb
popa
into
xchg
pop
and
mov
outsb
cmc
add
sub
lods
int3
jmp
inc
dec
mov
and
rcrb
pusha
and
das
loopne
inc
jbe
aam
je
adc
push
adc
mov
fidivl
mov
arpl
faddl
into
jbe
movsl
xor
push
mov
iret
stos
aam
xor
xor
stos
in
inc
gs
adc
jne
sbb
adc
dec
jne
cmpsl
outsb
cmc
movsl
fsubrl
ja
add
push
ljmp
shl
or
negl
mov
nop
add
mov
test
mov
rorb
sbbb
xchg
scas
stos
pop
movsb
xchg
dec
arpl
outsb
pop
bound
mov
rolb
jp
cltd
jne
jge
aam
mov
sub
pop
fadds
push
add
scas
and
dec
insl
movsl
psllw
in
dec
sarb
mov
pop
scas
fcoms
fcomps
add
ret
and
jle
mov
shll
jle
mov
inc
lods
loopne
push
lret
and
inc
sbb
insb
in
push
sarb
ljmp
fdivrs
ja
repz
and
adc
incb
loope
leave
stos
fwait
cltd
or
add
das
xchg
rorl
nop
aam
inc
and
sub
aaa
loopne
pop
fwait
sbb
pop
sbbl
lret
mov
cwtl
jl
repz
sub
insl
ret
lods
push
sub
lock
sbb
fisubrl
sub
int3
fcmovb
and
pop
sbb
sub
aas
add
jmp
dec
clc
push
push
popf
xchg
jg
or
rolb
lock
loope
wrmsr
insl
sub
sub
test
popa
inc
xchg
jp
fcmovne
rol
fbstp
adc
faddl
cmp
faddl
loopne
shlb
cli
dec
dec
test
add
or
dec
call
movlps
call
push
testb
push
jge
loopne
cmp
out
jecxz
ljmp
imul
cs
inc
sbb
inc
call
aaa
das
js
cmpb
outsl
cmp
call
mov
lds
inc
adc
push
and
xor
icebp
sbbb
jl
xor
cmpsl
lahf
add
popf
pop
fwait
mov
ss
adc
fldlg2
pop
sub
sbb
cmp
xchg
pop
outsb
jae
or
pop
fsincos
es
ja
sahf
pop
repz
enter
fdivrs
inc
cmp
out
dec
pop
or
sarl
ret
add
js
iret
or
adc
shrl
add
cmc
mov
add
test
or
fisubrs
or
in
add
sbb
sbb
xchg
push
add
clc
fsubl
dec
bound
and
xchg
call
mov
popa
call
addr16
das
popa
test
or
outsl
sbb
in
pop
inc
xchg
push
xorl
mov
aad
cltd
pop
push
call
jp
add
shrl
scas
mov
in
sbb
or
lods
loopne
push
scas
add
stc
mull
or
gs
jg
fcoms
add
push
movsl
add
mov
pop
in
xor
pop
or
or
enter
scas
pop
and
not
sub
and
and
mov
xor
lock
adc
jmp
mov
jl
mov
add
or
mulb
inc
popf
jbe
cmp
dec
nop
pop
test
add
not
cmp
ja
js
inc
je
inc
xchg
adc
xor
inc
test
js
mov
add
neg
jl
ret
push
mov
ret
cmp
jb
repnz
jg
xor
cmpsl
ljmp
add
and
lahf
jl
loope
jnp
adc
cli
mov
sar
sar
mov
push
xchg
inc
f2xm1
mov
icebp
test
sbb
les
loope
loop
xor
add
mov
cmpsb
scas
and
int
and
mov
incb
fwait
adc
pop
xchg
outsb
loopne
pop
xchg
in
ja
scas
add
mov
jmp
test
jbe
imul
xor
or
sbb
mov
xor
fwait
jg
cmp
xor
rcl
je
sbb
dec
js
xchg
in
add
sub
sbb
daa
inc
sub
add
movsl
lcall
mov
dec
mov
daa
xchg
test
cwtl
aad
sub
bound
movlps
sbb
sbb
rol
mov
adc
jp
adc
xor
fmuls
sar
xchg
fsub
and
pop
adc
lea
and
add
aaa
mov
hlt
in
add
popf
sbb
adc
sub
outsb
inc
cwtl
xor
add
add
clc
rolb
enter
cld
jb
jmp
cwtl
dec
sbb
lods
pop
cmp
es
cld
iret
bound
mov
fldl
shll
push
lcall
adc
ljmp
rcrb
out
or
lods
js
call
dec
in
mov
jne
mov
nop
leave
std
adc
sbb
pop
inc
int
movsb
fmull
loop
cmp
out
mov
mulb
dec
mov
int
cmc
sub
or
cmpsb
insb
lods
call
lret
sbbl
mov
rorb
mov
push
adc
add
mov
xor
push
outsl
ret
loop
cmp
daa
jecxz
aam
or
stos
ja
or
mov
hlt
push
clc
cwtl
clc
and
lods
mov
mov
add
sbb
mov
clc
xor
adc
inc
add
repnz
cwtl
in
adc
xor
mov
mov
mov
push
arpl
sub
out
mov
xor
cmpsl
sub
push
test
orl
mov
or
pop
call
mov
add
xor
jns
fucompp
scas
sbb
xor
pop
setae
out
adc
or
cltd
push
call
mov
mov
sub
mov
loop
scas
das
cmpb
inc
cmpl
xchg
xor
sub
imul
fsub
add
sbb
dec
int3
dec
aam
sub
push
imul
pushl
fldl
pop
jle
sbb
inc
pop
or
jge
pop
xchg
and
or
lcall
xor
outsb
test
stos
and
xchg
lods
test
lea
and
rcll
cld
mov
insb
push
add
pusha
push
aad
arpl
jp
mov
sub
add
adc
sbb
pop
inc
lcall
jmp
cmp
push
fidivrl
add
pop
add
jg
push
ret
call
popf
add
mov
in
sub
addr16
inc
cmp
sbb
dec
icebp
jnp
popa
mov
and
rcll
jnp
in
jg
or
cmp
fildll
add
push
outsb
cmpsl
add
test
incb
push
xor
jg
pop
lods
cltd
or
xor
les
aaa
push
xchg
mov
mov
loop
ficoms
outsl
adcb
pop
sbbb
add
jg
clc
mov
mov
dec
jno
mov
lcall
add
push
add
sbb
mov
adc
push
add
icebp
mov
and
xor
push
jnp
cltd
xorb
pop
cmp
add
pop
lock
push
push
pusha
loop
int3
jo
movsb
add
fs
sar
xchg
jmp
sbb
push
lcall
add
test
jmp
mov
mov
mov
fcomps
incl
or
add
push
and
arpl
add
jae
sub
in
mov
pop
test
xchg
mov
movsl
pop
rcrb
and
fistl
xchg
aas
xlat
sbb
pop
icebp
incl
and
or
add
xchg
out
cmpsl
sub
call
mov
push
stc
add
pop
and
push
dec
sub
or
insb
lock
add
fisubrl
push
xor
jge
stos
mov
adc
mov
jge
cmpsb
dec
imul
mov
mov
jno
sbb
pop
sub
jg
mov
xchg
lods
in
push
adc
add
mov
mov
pushl
pop
mov
mov
test
aas
xchg
test
inc
stos
es
clc
inc
int3
hlt
mov
jae
inc
mov
sub
jae
mov
pop
stc
sub
inc
leave
rclb
push
dec
push
notl
or
add
inc
in
sbb
pushl
dec
adc
sub
add
loope
shr
jbe
add
test
loope
inc
xor
jo
ja
adc
jbe
hlt
aam
xchg
lcall
ljmp
sbb
cmp
add
sbb
xor
jg
notb
loopne
push
or
add
cmp
add
stc
lcall
loope
out
cmp
pop
pusha
fstl
out
add
pop
sbb
ror
xor
jb
pop
clc
test
push
and
rcll
dec
fsubs
int
sbb
fcmovnu
add
dec
and
mov
js
and
push
cld
outsl
mov
cwtl
jb
add
xchg
sbb
mov
std
or
push
das
mov
cmp
inc
xlat
add
js
decl
jg
ret
and
arpl
mov
orb
add
pop
add
in
aas
inc
xchg
add
sbb
mov
inc
sub
or
in
fnstsw
add
xor
pop
dec
inc
loop
gs
mov
call
xchg
add
mov
sahf
js
xor
and
push
mov
std
fbstp
add
data16
gs
lcall
xor
lea
mov
inc
into
mov
ficomps
insl
lea
push
jle
inc
mov
push
inc
add
mov
aas
jnp
add
pop
pop
inc
jo
adc
call
lfs
xor
or
sbb
mov
sbb
and
sub
lret
adc
movsl
repnz
add
xor
or
pushf
adcl
mov
les
loopne
dec
divl
xorl
and
orb
inc
filds
arpl
fstpl
and
adc
repnz
cltd
fnstcw
dec
mov
stos
sahf
xor
mov
add
jmp
inc
inc
in
shll
arpl
xor
ja
into
mov
rcll
adc
jmp
decl
xchg
add
sub
mov
ds
or
sbb
fcmovnb
lret
pop
xor
dec
cmp
inc
and
imul
cli
fsubl
lahf
add
add
jge
dec
cs
jp
push
bound
pop
pushf
lcall
jno
sub
outsl
pop
scas
or
xor
mov
or
lock
insl
and
adc
push
xchg
scas
mov
and
aaa
mov
and
mov
mov
add
jb
add
lock
mov
lock
ja
push
jl
or
push
push
inc
sbb
lods
cmp
add
cmp
sbb
test
mov
mov
add
or
outsb
mov
pop
fbstp
jo
out
adc
out
inc
test
dec
in
jg
xchg
mov
pop
out
lret
popa
add
cld
inc
or
inc
pop
adc
push
outsl
and
add
les
sbb
in
repz
sub
push
pop
mov
add
or
mov
inc
lahf
cmp
ja
rorl
lret
inc
test
dec
mov
cli
fsubs
dec
sub
mov
data16
push
push
adc
in
cmp
popf
fmuls
sarl
daa
call
mov
push
sbb
std
inc
xchg
jl
lea
dec
ret
lret
pop
int
inc
into
test
push
jo
aad
test
mov
mov
ficoml
cmp
popa
cmpl
push
imul
notb
adc
inc
and
inc
and
aam
adc
xor
sub
adc
or
nop
pop
es
dec
and
ror
push
shll
decl
or
sbb
lods
and
cmp
jge
pop
jg
add
mov
lock
dec
mov
sbb
cmp
lahf
cmp
clc
xor
ljmp
hlt
dec
int
insl
jge
orb
jmp
aad
cmp
insl
jnp
push
roll
hlt
mov
push
mov
outsl
popf
mov
sub
dec
dec
push
push
aas
arpl
roll
sub
lods
jg
aaa
pop
adc
sysenter
adc
or
dec
rorl
cmpsb
jge
inc
sbb
sbb
sahf
dec
ljmp
addr16
inc
dec
sti
mov
ljmp
cmc
jp
mov
jno
xor
inc
add
dec
add
popa
push
pop
scas
add
pop
out
inc
cmc
push
dec
mov
xor
mov
roll
int
int3
jp
sub
mov
sahf
xor
mov
xor
sti
mov
add
lcall
push
sbb
add
pop
push
das
inc
insl
sti
shrl
dec
cmp
popa
inc
int3
stos
add
cld
ljmp
mov
push
scas
les
xchg
leave
sbb
add
or
out
mov
shlb
xchg
or
push
call
jns
inc
mov
cli
nop
orb
adc
cltd
cli
dec
cli
ljmp
rcr
pusha
jg
cltd
movsl
push
dec
inc
add
pop
adc
stos
clc
inc
aaa
mov
pusha
push
sar
inc
jg
sbb
in
and
mov
mov
nop
push
int3
icebp
pop
adc
stos
in
jle
pop
pop
xchg
jg
adc
xor
popf
shlb
ljmp
icebp
call
ret
sub
adc
pop
outsb
inc
inc
adc
cmpsb
leave
adc
sarb
add
jmp
sbb
dec
les
xlat
popa
mov
push
out
lret
scas
xchg
and
std
pushl
es
xor
jb
cwtl
data16
fimuls
popa
push
adc
inc
out
loopne
sub
and
inc
sbb
icebp
decl
adc
xchg
and
mov
mov
ljmp
inc
fsubrp
loope
test
movsb
push
std
inc
mov
push
repnz
jns
fstl
decl
sub
xchg
mov
sbb
out
aas
aad
incl
pop
fwait
push
enter
mov
xor
ror
jge
mov
outsl
int
xchg
rol
adc
loope
arpl
fcomps
test
add
and
je
rorl
jp
add
adc
clc
das
cld
and
mov
push
sub
loopne
inc
les
or
incl
les
add
incb
adc
mov
mov
xor
pusha
js
sub
cmp
sbb
sahf
cwtl
xlat
fstpt
pop
add
pop
push
outsl
mov
loopne
inc
addl
inc
or
cld
mov
call
fildll
incb
and
cmp
int
daa
inc
fisubrs
mov
xchg
mov
sbb
pop
jns
scas
sub
xchg
mov
loope
adc
push
in
and
add
mov
scas
add
insl
sti
adc
sbb
lock
xchg
addr16
popa
adc
notl
ficomps
lds
movsb
sbb
std
insl
imul
cltd
xor
add
sti
or
arpl
inc
je
or
pop
xchg
mov
push
pop
sbb
add
mov
test
and
int
pop
mov
aad
pop
push
push
lcall
jl
sbb
adc
adc
lea
pop
cmp
fnstcw
je
jnp
nop
cmp
xor
lret
daa
adc
les
xchg
cs
test
adc
mov
mov
adc
mov
or
mov
jne
divb
cs
pop
notl
ss
imul
push
sbb
sbb
in
outsl
add
out
inc
and
mov
lret
adc
call
das
add
mov
xlat
xor
xchg
add
sbb
leave
push
jl
push
mov
mov
decl
in
mov
adc
icebp
push
dec
inc
cmp
pop
aaa
cs
cli
out
mov
je
jmp
outsb
aas
dec
dec
and
incb
jecxz
jmp
sbb
xchg
mov
das
cmc
or
xchg
sub
dec
xor
mov
add
jg
outsl
and
ja
aad
movsb
dec
daa
cmc
faddl
sub
jb
and
mov
jns
xchg
in
inc
pop
jne
test
lret
mov
and
cmc
in
test
pop
xor
scas
test
sbb
out
mov
fs
mov
pushf
pop
arpl
ret
mov
cld
in
inc
xor
das
mov
adc
mov
lock
or
out
inc
rcrl
inc
xchg
loope
lods
cld
inc
jno
cmp
call
dec
faddl
mov
lods
fiaddl
push
incb
dec
sbb
fistps
fmul
lret
push
xchg
stos
add
add
mov
mov
sti
sbb
push
mov
movsl
ds
stos
lods
shll
and
or
pop
push
sub
rolb
sahf
push
xor
cmc
adc
sub
or
jno
push
pop
push
adc
and
sti
shll
cmc
inc
pop
scas
addr16
xchg
adc
dec
adc
repnz
cmpsb
mov
lds
inc
jp
cmp
mov
ljmp
pusha
dec
fxch
jae
xor
leave
jge
daa
out
into
sub
cs
pushl
icebp
gs
lods
sarl
subl
test
rol
je
in
jg
in
sub
inc
cmp
nop
adc
pop
jg
das
cld
sbb
inc
pusha
shlb
push
cmp
incb
mov
cmpb
decl
sahf
add
add
subb
jno
into
arpl
in
push
xorb
je
call
inc
sub
and
add
add
sub
aad
ret
or
das
mov
fildll
or
sarl
xor
hlt
push
in
subl
jmp
inc
add
shlb
je
xor
dec
mov
loope
push
daa
cltd
fnstcw
push
in
xor
in
arpl
jnp
dec
xor
ljmp
out
and
mov
std
sbbl
xchg
mov
iret
or
shrb
add
adc
cmpb
pop
sbb
inc
cmp
mov
mov
popf
les
ja
push
mov
das
aam
dec
jp
test
sahf
test
test
negb
hlt
inc
out
test
iret
sub
fwait
jnp
sbb
iret
adc
jmp
test
add
inc
outsb
add
mov
sbb
inc
icebp
ljmp
push
pop
mov
sbb
push
adc
pusha
sbb
mov
sbb
pop
mov
jb
call
push
sbb
ret
xchg
dec
pushf
js
inc
add
int
dec
add
inc
adc
jmp
test
and
iret
pop
lock
iret
in
and
adc
inc
xor
inc
pop
mov
scas
loope
cmp
mov
dec
call
cwtl
rcll
sub
and
pop
incb
test
mov
ret
push
adc
sbb
out
rclb
mov
stos
pop
xchg
pop
sbb
xor
jecxz
repnz
fwait
xchg
push
test
loopne
imul
fcom
jae
sub
or
or
fisubrs
lods
insl
je
inc
ljmp
cmp
jecxz
inc
rcr
jp
fdivp
flds
jl
sbb
cltd
mov
fwait
sbb
roll
rolb
das
hlt
mov
cltd
dec
add
movsb
xchg
jle
pop
in
push
sbb
cmp
rorl
ret
or
sub
mov
mov
insl
sub
loope
xor
ja
xchg
in
sbb
aaa
das
jae
mov
shl
test
jne
mov
fildl
xor
pop
orb
fwait
mov
add
xchg
push
cli
movsb
repnz
inc
mov
add
jmp
pop
xchg
adc
add
mov
adc
inc
add
mov
into
xchg
lea
sbb
xor
fsubs
ljmp
roll
dec
or
mov
pop
sbb
loope
subb
and
aaa
mov
add
pop
mov
and
add
sub
out
push
rorl
int3
sti
int3
cltd
movb
cmp
jne
xor
and
aaa
cwtl
adc
add
sbb
fsubrp
add
inc
xor
ret
inc
inc
sub
loop
mov
jmp
mov
loopne
or
or
xor
mov
bound
xchg
add
adc
add
adc
lods
pop
pop
mov
adc
loope
je
xchg
je
add
mov
xchg
pop
popa
mov
jecxz
into
dec
xchg
mov
push
ficomps
fstpt
and
cmp
mov
cmc
push
pop
push
jecxz
add
pop
or
xchg
sub
jge
add
neg
dec
and
iret
add
sub
scas
cmp
inc
sarl
into
adc
cmp
sub
xorb
cld
ret
xchg
enter
fcomp
add
push
movsl
jecxz
movl
in
mov
lock
fisubrs
imul
stos
pop
in
rcll
or
or
inc
popf
inc
mov
rcl
and
call
clc
or
dec
aam
in
movsb
ljmp
pop
iret
mov
pop
int
stos
in
dec
je
jns
enter
sbb
inc
jg
add
ss
sub
pop
pop
push
cmc
fwait
mov
in
leave
cmp
and
mov
pusha
xchg
out
adc
cmp
sbb
add
xchg
sbb
aam
inc
mov
das
xor
out
loope
loop
inc
ljmp
mov
xchg
xor
sbb
pop
jle
aam
popf
mov
pop
pop
sbb
jns
cmpsl
xchg
mov
orl
adc
xchg
push
iret
nop
roll
mov
test
dec
push
nop
test
push
xorb
fs
wrmsr
lock
jg
in
xchg
pushf
fs
in
repnz
cltd
inc
xchg
pop
stc
lcall
or
sub
inc
imul
jnp
pushf
outsb
gs
jg
or
cmc
jb
in
sbb
mov
lock
and
and
popa
or
sub
mov
rcr
test
addr16
xchg
pushf
scas
xor
mov
pop
push
fnstenv
cltd
out
ret
jl
call
decl
popw
sarl
add
fcomps
mov
xchg
call
test
cwtl
popf
fldl
jmp
jb
lds
sbb
push
xchg
pop
sub
xchg
sbb
xchg
js
jl
call
insl
add
xchg
pusha
or
xchg
mov
dec
xlat
xlat
popa
xchg
je
aaa
insb
test
test
xlat
imul
orl
movsb
inc
and
sbb
add
movb
ljmp
sbb
aad
mov
lds
and
xor
icebp
cmpsb
das
cmpsb
and
sti
das
inc
jg
loope
adc
push
je
or
sub
sbb
pop
adc
cwtl
add
loop
aad
or
jbe
add
jg
pushl
jno
inc
add
inc
bound
add
ret
hlt
inc
push
or
in
fucom
sub
sbb
repz
mov
cmp
pop
inc
test
imul
lsl
cmp
jnp
decl
movsl
loopne
xchg
fnstsw
es
push
jo
xor
ljmp
cld
mov
push
mov
xchg
or
mov
call
cmc
sbb
xor
lock
mov
adc
and
xchg
into
aaa
jle
jge
pop
xchg
cs
cmp
icebp
ja
mov
pop
andb
mov
lea
or
iret
pop
and
inc
dec
sub
inc
test
adc
sub
enter
mov
cmp
data16
adc
adc
cmp
mov
fsub
imul
out
mov
sub
push
rcrl
sub
add
test
xor
push
mov
rcrb
rorb
out
test
xor
sbb
js
je
push
sub
ss
xor
xchg
loopne
mov
add
adc
adc
dec
jno
jl
mov
add
cmpsl
lock
mov
cs
add
std
jge
int
inc
or
fistpll
and
sub
adc
add
clc
push
push
sbb
movsl
faddl
xchg
fisubs
push
pop
loop
adc
mov
xchg
fxch
pop
xlat
or
clc
bound
sar
dec
mov
dec
ds
int3
idiv
inc
mov
mov
or
inc
add
add
imul
mov
shll
cmp
jle
and
pop
push
test
adc
or
scas
imul
inc
repz
add
mov
icebp
add
pusha
mov
dec
adc
sub
jns
lret
sbb
pusha
push
test
cltd
or
out
fisttpll
push
decw
call
mov
lock
push
or
lods
pop
in
adc
shlb
mov
loopne
jo
jge
and
xor
inc
push
cmc
jnp
xchg
jne
fwait
cmp
vpcomd
movsl
sahf
dec
sbb
test
xchg
loopne
decl
push
add
push
jg
sbb
pop
cmp
dec
lret
add
cmpsl
lcall
cld
pop
notb
mov
sbb
add
ffreep
das
outsl
lock
outsb
push
push
add
push
xchg
lret
je
sbb
push
pop
and
decl
mov
jno
rcrl
js
cmp
fmull
loopne
jns
dec
push
js
aas
push
or
std
push
dec
mov
xchg
iret
data16
add
aas
pushl
ljmp
lret
xor
cmpsl
jmp
and
inc
cmc
add
xlat
mov
scas
js
push
inc
jl
cli
ljmp
out
pop
xchg
stc
push
aas
sti
lahf
out
pop
add
pop
test
call
xchg
mov
es
fisttpll
jbe
cmp
add
cltd
je
jp
fsubp
call
mov
cmp
dec
add
push
lods
ret
or
pop
loop
pushf
daa
pop
adc
or
movsb
scas
jge
add
idiv
adc
in
repnz
stos
xchg
xchg
mov
cld
sbb
and
rorb
jmp
jge
mov
xchg
dec
sub
ficoml
add
pop
xchg
push
enter
flds
insl
fisttpll
lcall
cmp
das
les
pop
sbb
pop
pop
mov
push
inc
pop
js
adc
bound
cld
loope
mov
and
hlt
add
cmp
cmc
sti
adc
inc
fmull
mov
icebp
mov
mov
popa
ds
loopne
jb
adc
inc
test
jp
sbb
stc
add
dec
lcall
adc
cmp
cmp
sbb
sub
mov
inc
cmp
fstpt
incl
ret
push
push
es
scas
dec
aaa
pop
clc
pop
and
call
push
in
mov
ret
xchg
jno
out
loopne
jmp
jg
pusha
aaa
neg
mov
jbe
test
push
insl
dec
mov
xorb
xchg
inc
decl
iret
mov
dec
or
sbb
add
or
jno
pop
pop
cmp
test
insb
out
enter
cmp
jno
subl
lret
fs
jg
pop
test
add
push
xchg
dec
nop
mov
sbb
xchg
jmp
dec
adc
and
sbb
popa
arpl
inc
or
jae
xor
test
lret
adc
icebp
in
cwtl
push
push
or
movsl
subl
fstpt
jle
and
lds
jecxz
xchg
movsb
mov
daa
mov
or
movsb
pop
shl
dec
mov
cmp
in
push
push
and
lret
fs
mov
nop
in
fiaddl
jb
pop
adc
mov
add
pop
sqrtps
fcmovu
leave
aas
or
out
add
xor
jecxz
mov
fwait
mov
fisttpll
decl
cwtl
mov
and
pusha
jbe
int3
test
or
shrl
cmp
mov
or
scas
stc
inc
sar
dec
incl
adc
bound
xacquire
jg
push
icebp
xor
and
std
and
shrl
lcall
xchg
popf
int3
sbb
test
and
test
inc
lds
mov
aaa
mov
call
xchg
sbb
fs
pop
cs
jmp
sub
inc
add
push
push
shll
roll
pop
dec
pop
bound
test
js
stos
dec
and
int
test
mov
pop
sbb
pop
or
mov
sbb
addb
cmp
hlt
push
cmp
ret
repz
pop
add
and
mov
js
clc
or
rcl
stos
imul
mov
dec
lcall
add
sahf
and
popf
test
loop
or
pusha
add
push
push
inc
iret
cmp
imull
mov
fisttps
jmp
bnd
lret
and
dec
inc
sbb
cltd
arpl
sbb
mov
mov
cmc
pop
inc
aam
lods
hlt
fwait
mov
clc
lcall
paddb
push
pusha
dec
pop
xchg
sbb
adc
or
xchg
sbb
inc
mov
test
mov
in
push
dec
cld
or
and
inc
push
sub
jecxz
push
shl
pop
insb
mov
mov
jne
push
mov
add
fcomps
jge
fcoms
cld
in
jg
cmp
cld
je
popf
xchg
ja
inc
pop
and
lcall
mov
rorl
nop
int3
insl
add
jmp
movsl
leave
data16
pop
iret
jg
fisttps
jo
xor
mov
push
sbb
push
call
incl
pop
xlat
and
dec
shll
adc
inc
sbb
inc
in
das
cld
lcall
mov
push
adc
push
and
arpl
pop
xchg
inc
jmp
sbb
cmp
cmc
mov
addr16
dec
in
mov
xchg
outsl
std
fisttps
mov
sbb
lock
push
cmp
push
ss
dec
mov
push
incl
pop
dec
adc
in
ret
lahf
jns
les
scas
rcrb
xchg
xchg
int3
cmp
loop
aas
cmovg
pop
cli
mov
cmp
pusha
dec
adc
fistpll
pop
sub
or
add
lock
decl
dec
rcll
out
orb
add
lock
movsb
push
loopne
ljmp
fldl
ss
mov
mov
pop
ljmp
lcall
es
adc
adc
sbb
mov
and
cmpsb
das
cld
test
je
sbb
inc
jns
xchg
outsl
std
out
dec
scas
xor
stos
sti
and
shlw
dec
and
mov
subl
ja
mov
lock
jmp
arpl
add
loop
sbbl
aaa
cli
xlat
xchg
and
rclb
insb
in
test
enter
mov
mov
testb
dec
scas
push
cmc
mov
out
xchg
dec
dec
inc
es
fidivrs
mov
push
adc
sbb
lods
mul
or
jg
aam
clc
sbb
enter
jns
pop
call
sub
scas
sub
call
daa
js
into
pop
add
mov
gs
fwait
xor
js
jae
cmp
add
loope
mov
icebp
mov
push
pop
bound
adc
fisttpl
cmp
mov
mov
dec
hlt
aas
insl
pop
mov
ljmp
xchg
mov
mov
iret
fisubl
inc
nop
jb
pop
lods
inc
mov
dec
aaa
in
ljmp
xor
mov
and
lds
popf
sub
int
ljmp
das
lods
int3
enter
cmc
pop
dec
cpuid
xchg
and
and
mov
jmp
mov
sub
push
xlat
xchg
adc
adc
mov
addb
xchg
and
fcoml
js
pop
push
xchg
test
cmp
loope
in
icebp
adc
test
pop
enter
in
testl
jne
jmp
shrb
or
lods
mov
arpl
xchg
pop
mov
das
cld
shlb
stos
cmpsb
inc
or
dec
jp,pt
adc
mov
std
pushf
push
andl
push
outsb
mov
or
aam
mov
inc
cwtl
xchg
dec
adc
daa
in
xchg
mov
decl
in
cld
imul
mov
push
jnp
shlb
mov
sbb
fistps
push
shrb
mov
flds
and
outsl
sar
lods
movsl
xor
cmp
and
pop
notl
pop
clc
jg
and
add
xchg
ret
mov
js
jbe
fwait
or
sub
mov
popa
push
sti
mov
decl
xchg
sbb
stos
xor
pusha
pushf
mov
lock
push
mov
or
push
add
inc
pusha
add
jg
push
aam
iret
inc
mov
push
xor
adc
xor
mov
push
aaa
sub
and
shlb
loopne
cld
ffreep
cmp
cmpsb
fadd
mov
lcall
insb
ret
insb
test
hlt
nop
imull
or
mov
pop
cld
pop
arpl
push
push
fisttps
andl
jne
shl
stos
inc
mov
xchg
hlt
inc
test
mov
pop
dec
inc
cmp
mov
dec
in
xchg
pop
cltd
push
andl
lcall
jle
mov
test
arpl
jb
add
test
cmc
pop
jmp
sub
inc
mov
push
loop
clc
fisttpl
add
sbb
repz
iret
or
mov
das
push
pop
movsl
loopne
xor
add
pop
add
jb
mov
dec
jo
out
dec
js
and
pusha
lcall
mov
movsb
sahf
inc
loope
xchg
out
add
or
dec
dec
scas
enter
push
ret
mov
decl
adc
jns
je
adc
cmpsl
loope
ds
je
inc
mov
pop
lock
test
inc
pusha
pop
ljmp
ss
adc
ljmpw
pop
jg
ljmp
das
int3
roll
inc
add
jbe
pop
add
rclb
jg
rcr
daa
sbb
mov
loopne
xchg
mov
push
js
inc
pop
pop
jp
enter
dec
in
sti
test
jo
mov
dec
mov
xor
and
incb
mov
push
rclb
cmp
mov
dec
bnd
test
sub
adc
adc
jecxz
aas
inc
lret
adc
mov
mov
scas
sti
and
fistpll
sbb
xchg
pop
push
pop
and
in
pop
jl
data16
or
inc
sub
imul
mov
adc
imul
mov
cmp
out
mov
nop
jns
dec
imul
jg
sbb
xor
mov
loope
cmpsl
sbb
lcall
add
loop
dec
mov
fwait
mov
ljmp
mov
adc
loop
xor
cmpsl
mov
and
mov
aaa
push
add
mov
in
inc
push
shr
add
lds
lods
es
adc
cmp
std
add
movsl
sti
xchg
jno
adc
imul
repnz
lock
rcr
fistps
daa
adc
test
test
xchg
jne
xorb
mov
mov
cmp
push
stos
xor
movsb
adc
sub
pop
jae
rol
aas
in
insb
sbb
mov
or
xchg
lods
xor
mov
sub
mov
iret
icebp
pop
cmp
jp
lcall
aad
mov
adc
mov
es
jmp
dec
ljmp
cli
shrl
movsl
and
bound
adc
mov
test
nop
sbb
mov
sub
cmpl
mov
test
decb
jle
das
mov
sbb
xchg
fisubrs
movsb
xor
loope
and
aad
push
sarl
in
mov
les
or
rcrb
in
in
jnp
push
mov
adc
fisttps
ja
int
outsl
adc
pop
or
cmp
leave
pop
lcall
add
sub
push
imul
jg
inc
shlb
push
les
and
das
jns
add
je
popa
jbe
rorl
xor
jl
xchg
std
decb
decl
les
sahf
outsl
cmpsb
push
push
jb
es
mov
hlt
add
sbb
xor
mov
mov
jbe
lock
enter
jo
jmp
push
sti
sub
push
add
es
push
cwtl
and
xchg
arpl
addr16
ljmp
inc
mov
add
jl
shrl
push
int3
and
incl
test
ljmp
test
jb
mov
push
and
leave
inc
nop
adc
loopne
inc
mov
cmpl
xchg
test
fstl
fstl
loop
shrb
cmpsb
aaa
push
add
lds
fdivrl
ljmp
cmc
add
pop
negb
lahf
dec
jo
cli
std
adcb
mov
add
lcall
mov
les
mov
dec
fs
sbb
and
cltd
push
push
inc
in
jp
mov
flds
bound
fisubrl
std
ret
pop
sub
sahf
jns
cld
cmpsb
std
divb
imul
lahf
hlt
adc
push
push
mov
mov
jl
ljmp
outsl
sti
cs
and
out
bound
loope,pn
lret
adcl
scas
ret
aad
shll
hlt
inc
jmp
out
rolb
mov
pop
mov
sbb
adc
mov
stos
shll
adc
scas
sahf
cwtl
and
test
jge
cmp
lods
mov
incl
mov
mov
or
fbld
je
xlat
pop
lods
lahf
inc
fucomi
sub
pop
fildl
adc
pop
fnsave
jp
cmp
pop
incl
ficoms
lods
lock
mov
and
sarl
push
movsb
clc
xor
loopne
mov
xchg
leave
and
cli
ljmp
outsb
adc
cs
scas
mov
addb
outsl
std
mov
inc
pop
mov
mov
push
outsl
push
jbe
movsb
adc
lock
push
mov
mov
call
mov
scas
mov
push
and
push
cld
inc
popa
cmp
push
ljmp
xchg
sbb
or
frstor
das
loope
popa
popf
mov
mov
mov
cmp
lcall
jg
gs
rorb
xor
out
add
pop
mov
push
lea
adc
in
call
outsl
icebp
or
sub
daa
mov
js
mov
adc
mov
mov
loopne
and
sbb
mov
loop
clc
adc
mov
push
add
cli
or
mov
fisttpll
fldcw
lcall
mov
fdivrs
lods
shrl
cld
inc
cmp
or
jb
sbb
aas
mov
jle
das
inc
xor
lret
std
or
sub
push
cmp
pop
ret
and
cmpsl
push
call
fistl
sub
call
xchg
test
push
pop
mov
mov
subl
mov
pop
sub
xchg
pop
ret
shlb
int3
and
cmp
dec
aas
aad
or
inc
dec
xchg
cli
les
movsb
and
jle
sar
mov
stos
lahf
dec
hlt
mov
cli
in
adc
and
cmp
stc
ds
cmc
mov
adc
fnstsw
in
push
gs
sbb
clc
out
int3
adc
roll
dec
sbb
dec
cli
sbbb
mov
cltd
cmp
inc
dec
jle
insb
inc
dec
mov
mov
loope
sbb
repnz
jl
rcrl
sti
cmp
mov
shlb
xor
and
out
lods
add
cmpsl
sbb
cwtl
add
daa
data16
mov
pushf
xor
lret
xorb
mov
pop
push
mov
test
dec
cmc
enter
or
sti
xor
mov
adc
popa
inc
test
pushl
jle
xor
js
enter
cmpsl
cmp
mov
jle
mov
or
into
sbb
or
ljmp
lods
adc
pop
ds
je
and
fcomps
push
cmpsl
std
mov
push
lea
cmp
ljmp
adc
ret
dec
daa
enter
hlt
and
leave
addb
mov
jb
sbb
jecxz
inc
push
fs
mov
pushl
xchg
pop
es
dec
aad
xor
in
lcall
in
and
mov
popf
lock
popf
das
inc
sbb
icebp
lcall
lock
bound
cmp
mov
mov
adc
loopne
mov
and
clc
dec
mov
in
loope
sub
out
fidivs
and
push
mov
add
mov
push
test
xor
jecxz
pop
bound
in
push
and
fistps
mov
cmp
adc
pop
mov
cmpsl
mov
and
adc
push
pop
jne
mov
cli
pushf
adc
nop
mov
adc
xor
mov
pushl
mov
mov
adcb
mov
pop
add
fs
fbld
hlt
test
mov
and
je
scas
jo
pop
adc
sbb
jl
jo
ja
sub
addb
subl
pushl
mov
sbb
inc
arpl
adc
jl
jg
fnsave
loop
mov
mov
cmp
aad
jecxz
in
stc
shll
sbb
lock
lret
adc
inc
pop
std
and
rcrb
adc
jo
add
int3
adc
fadds
sbb
insb
ljmp
jmp
test
mov
xor
jo
scas
xor
xchg
dec
bound
call
xor
mov
sbb
shl
mov
inc
mov
in
xchg
or
push
pop
out
adc
pop
loop
gs
sbb
jecxz
int3
int
subl
pop
add
xchg
sbb
mov
mov
fstpt
hlt
inc
jno
out
xchg
xlat
sbb
xchg
ljmp
loopne
inc
add
test
xchg
cmp
insl
xor
outsb
cld
cmpsb
adc
fldt
sbb
dec
dec
out
negl
mov
pop
scas
xchg
clc
sub
cmp
xchg
test
sbb
sub
pop
push
xor
out
div
sub
mov
ja
jg
aam
push
lock
ret
sub
test
mov
jo
inc
popaw
or
xor
mov
xchg
jnp
lds
daa
mov
pop
adc
cmp
push
mov
cmpl
jnp
outsl
lcall
enter
lods
out
jp
popa
adc
std
jg
xchg
aas
insb
jg
xor
add
dec
jno
lock
arpl
xor
xchg
adc
lock
fistpll
push
push
inc
rcrb
into
aas
dec
cli
push
outsl
jne
and
dec
pop
or
mov
js
rolb
jg
aaa
mov
inc
mov
aad
pusha
fldl
fdiv
aaa
outsb
loopne
and
dec
ds
mov
push
nop
inc
inc
jmp
xchg
and
into
pop
and
movsl
push
inc
test
pushl
jb
and
lods
ljmp
mov
jbe
inc
fs
jg
mov
push
or
add
hlt
push
testb
mov
loope
cltd
scas
daa
inc
shll
into
cmp
pop
pop
push
in
or
add
cmp
scas
jns
outsl
lock
dec
sahf
pop
hlt
mov
iret
stos
fnsave
sub
and
and
rcr
loopne
cwtl
mull
ja
aad
mov
loope
inc
out
sub
cmp
push
add
jg
gs
lcall
pushl
sbb
sub
inc
mov
mov
shrl
das
aad
inc
add
sar
sub
loope
dec
into
add
pushl
js
lahf
mov
jge
add
mov
inc
int
lds
subl
cs
push
hlt
stc
add
ljmp
or
sub
cmp
cmp
dec
add
pop
push
popa
test
add
addr16
dec
pop
push
repnz
add
loopne
sub
adc
fisubrl
cmp
cli
add
scas
or
cmc
add
aas
popf
punpckhdq
test
loopne
cmp
addr16
fs
adc
mov
or
mov
jmp
inc
mov
add
out
lahf
jmp
sub
jmp
mov
sbb
std
sbb
testl
sti
cwtl
or
xchg
movsb
ss
daa
addr16
mov
add
lahf
adc
aas
test
adc
sub
das
hlt
and
ret
std
cmp
leave
jns
or
mov
cld
sub
out
pushf
addr16
push
and
xchg
xchg
in
fwait
mov
nop
mov
into
jb
add
push
cmp
dec
mov
movsl
push
addb
pop
lods
jle
fnsave
push
jle
add
sbb
repnz
test
xchg
sbb
lea
xchg
in
sub
pop
jp
mov
lock
incl
lds
cmp
jbe
xchg
push
enter
js
sar
aaa
hlt
outsl
push
mov
mov
lea
icebp
dec
mov
std
outsl
hlt
fstps
mov
mov
dec
mov
fcomi
outsl
jne
iret
xchg
cs
hlt
cmp
sti
cmp
mov
xor
adcl
fimull
jno
rcll
mov
mov
cmc
hlt
ja
and
out
repz
data16
in
rorb
mov
mov
jns
xor
dec
data16
fmul
jo
fs
bound
pop
loop
hlt
shrb
out
pushf
movsl
pushf
or
inc
pop
call
fs
mov
test
push
adc
shl
rcr
adc
cmp
orl
xor
adc
fsubs
loop
mov
ret
adc
outsl
cmc
lcall
mov
add
and
rolb
in
xchg
cwtl
test
arpl
ljmp
clc
and
xchg
mov
and
inc
sbb
arpl
aam
or
cmp
xor
adc
aas
mov
adc
clc
pop
imul
adc
sbb
ljmp
xchg
and
cmc
sub
pop
call
adc
das
or
fsubs
inc
inc
lock
adc
mov
sub
into
dec
mov
out
loope
mov
mulb
pop
mov
and
test
jg
adc
cld
or
repnz
bound
dec
and
jmp
pop
out
insl
lahf
ja
adc
dec
sub
dec
inc
orl
mov
jbe
cmp
adc
adc
sti
xchg
push
sub
loope
and
add
adc
xlat
xor
subb
stc
adc
cld
and
adc
cmc
inc
mov
push
xchg
pop
and
or
aaa
sub
jbe
push
out
inc
or
and
rcll
orb
cmc
and
dec
mov
test
mov
subb
cld
push
gs
mov
jmp
out
dec
rcrb
lret
insl
cld
ret
push
xor
insb
push
in
not
or
sbb
jge
sub
pop
push
mov
and
sub
mov
and
addb
add
sub
loope
mov
daa
lock
lahf
aas
popa
cld
mov
dec
out
xchg
imul
lods
cmp
subb
pop
or
dec
out
rcr
lret
pop
inc
int
ret
sbb
pop
mov
hlt
leave
or
xor
inc
xchg
fs
mov
inc
cltd
stos
pop
jnp
sub
and
add
or
test
sbb
shrb
sub
jecxz
lock
adc
repnz
inc
sub
or
dec
inc
add
pop
inc
sbb
loope
dec
cltd
cmp
or
mov
or
in
mov
scas
or
lahf
mov
jbe
dec
jbe
test
and
ss
daa
addb
adc
or
xor
fcomi
inc
push
cltd
jnp
and
lahf
xor
repz
shlb
dec
sbb
hlt
fprem1
push
mov
mov
sub
fisubrs
dec
sahf
je
mov
div
call
push
jg
hlt
sbb
push
cmc
lea
shll
testb
mov
in
xor
push
and
out
add
icebp
jno
jns
or
dec
inc
jne
add
ss
cmpsl
mov
pusha
icebp
ror
cld
fsubrp
fistps
std
xor
faddl
inc
mov
add
push
or
sub
and
lods
in
sub
push
fsub
test
pop
dec
fs
xor
xchg
push
insb
add
add
fimull
jae
and
push
sub
add
push
aas
sahf
sub
sub
test
or
xor
xor
fcmovne
inc
xor
hlt
and
pop
jb
cmpsl
mov
lcall
add
pop
shr
sti
sbb
imul
imul
int3
inc
xor
pop
loopne
pop
adc
daa
dec
mov
inc
pop
push
aaa
jbe
ret
xchg
push
xor
dec
mov
les
jbe
mov
or
shll
xor
sarb
lret
add
lret
cmp
and
sub
push
mov
fidivrs
inc
mov
fucomip
pop
push
jl
jecxz
icebp
cli
icebp
aaa
dec
sbb
aad
sar
ss
sti
jecxz
ds
js
or
out
lcall
mov
ljmp
pop
sub
nop
cmpsl
clc
outsb
cmc
sbb
addr16
cmp
pop
pushf
push
into
rcr
movsl
imul
pop
sahf
jmp
jl
clc
cld
inc
decl
rcl
or
push
inc
movsl
sbb
push
mov
clc
sbb
test
clc
or
imul
mov
pop
andb
mov
dec
icebp
jmp
cmp
std
incl
xor
add
pop
mov
outsl
clc
pop
adc
sub
jno
cmp
mov
clc
jecxz
jecxz
stos
fcmovnu
decb
jnp
clc
xchg
pop
insl
dec
mov
and
scas
push
cmp
sbb
mov
loopne
jmp
cwtl
pop
sbb
inc
mov
sub
xor
cwtl
clc
sahf
icebp
mov
push
xchg
insb
stos
cwtl
mov
and
adc
jl
sbb
out
sbb
jg
test
xchg
shl
cs
mov
add
rcr
mov
inc
cmpl
icebp
add
sub
sbb
mov
cmc
jne
fcmovbe
ret
je
jl
cmp
das
ret
decl
pusha
sub
jecxz
pop
cltd
sub
std
cmp
jp
adc
dec
jnp
out
sub
dec
push
or
cmpsb
and
call
rol
inc
adc
adc
mov
cmpsb
stos
jmp
and
jmp
repnz
insb
mov
out
or
adc
ljmp
call
and
add
add
sub
fsubs
lds
push
nop
mov
decl
ffree
pop
inc
enter
fidivl
adc
sub
testb
outsb
jne
xchg
add
jns
and
adc
adc
bound
fmul
jmp
or
push
jge
in
lahf
add
divl
cmpb
mov
ljmp
and
adcb
push
xchg
mov
jg
push
mov
popa
js
add
dec
test
fwait
pop
and
loopne
add
out
lea
inc
pushf
xchg
decl
xor
rep
sub
and
add
mov
lcall
adc
wrmsr
jle
arpl
or
aaa
sbb
cmp
mov
adc
cld
fcoms
pop
out
and
test
sbb
movsb
retw
lcall
or
sub
sarl
mov
out
jns
test
inc
cli
ljmp
jne
daa
nop
jecxz
rorb
sub
add
dec
jp
inc
sbb
sahf
or
fisttps
adc
stos
jl
adc
loopne
pop
fistpl
dec
sub
xor
sub
dec
jp
gs
stc
dec
lock
mov
sub
xor
bound
movsb
sub
fs
xor
loopne
and
mov
xor
rcl
mov
inc
cmpsl
add
inc
subb
mov
lock
loopne
push
pop
arpl
mov
into
js
xchg
je
or
in
lea
mov
ja
test
jg
in
jg
adc
lds
or
xchg
das
pusha
dec
and
or
inc
pop
adc
addl
mov
or
lret
or
jo
and
pop
xor
inc
dec
decl
pop
or
sar
jg
add
add
cmpl
mov
cli
call
jp
addr16
sbb
lods
push
add
das
hlt
neg
aaa
fwait
jl
arpl
dec
movsl
fstpt
out
and
push
xchg
stos
push
rcrl
clc
jne
jmp
mov
leave
adc
sbbl
or
subb
mov
repz
decl
insb
add
iret
push
test
decl
sti
add
cmp
xor
cwtl
sbb
mov
dec
call
std
jg
outsl
mov
je
pop
das
lahf
xor
jle
or
mov
call
mov
cmp
add
sbb
lahf
rcr
or
mov
sbb
xchg
rorb
dec
inc
xchg
std
outsl
dec
lcall
jo
ror
test
inc
jbe
lods
arpl
jmp
sbb
test
sbb
mov
cmpsb
cmp
mov
les
push
xchg
in
jnp
or
in
xor
fsubrl
aaa
or
clc
push
nop
stc
ljmp
stos
ret
dec
pop
sbb
xlat
mov
mov
loope
inc
loopne
cmp
mov
shrl
adc
cld
decl
inc
xchg
pop
push
sub
pusha
je
push
in
aaa
clc
cmp
and
dec
jl
inc
fiaddl
setp
sbb
pop
aaa
pop
sbb
test
imul
adc
xor
jg
mov
aad
jecxz
jo
leave
movsb
xor
shll
ljmp
outsb
pop
pop
pop
jne
inc
out
inc
lods
fldenv
cmp
shl
cld
call
imul
add
jl
jo
and
pop
mov
mov
sbb
xor
add
mov
add
outsl
rclb
lea
out
sbb
aad
pop
or
das
and
jne
mov
fildl
jge
fistpll
test
incl
inc
or
adc
pop
cli
fisttpl
out
in
push
mov
adc
push
test
arpl
inc
jne
aaa
cli
pushl
mov
gs
sbb
movsb
adc
pop
jae
inc
cwtl
dec
push
int3
inc
aaa
or
add
cmp
stc
pop
xchg
insb
rcll
int
cmp
adc
mov
enter
subb
icebp
movsl
call
sbb
xor
fsts
call
out
mov
and
add
std
inc
jnp
fldl
in
and
repz
cmp
dec
dec
pusha
out
in
and
mov
adc
call
lcall
in
push
decl
out
aad
xchg
and
dec
inc
add
andb
or
fisttpl
adc
in
faddl
mov
pop
adc
leave
or
aam
cs
xchg
fidivl
xchg
sbb
mov
movsb
sub
setae
js
out
adc
cli
mov
jmp
mov
xor
rcrb
push
pop
ds
loop
or
mov
or
pop
in
sub
jnp
sbb
ljmp
clc
dec
pop
sbb
bound
adc
loope
xchg
mov
notb
mov
nop
sbb
pop
xchg
mov
andb
jge
mov
pop
inc
call
xchg
push
mov
adc
stos
push
mov
icebp
mov
lods
mov
andl
loopne
negl
in
mov
inc
or
adcl
sbb
mov
jg
rclb
mov
roll
xorb
js
sbb
or
mov
fadd
push
andb
addl
jb
lock
roll
fcmovnb
adc
ljmp
or
lret
popa
popf
in
and
or
add
xchg
add
out
repz
into
or
xchg
mov
sbb
inc
cwtl
cli
mov
add
jle
test
cltd
mov
push
pop
jle
xor
testb
pushf
add
test
add
pop
outsl
pop
shrb
data16
popa
loopne
and
push
sub
je
dec
outsb
sahf
xor
pop
test
jbe
sub
pop
adc
sub
sbb
nop
or
std
mov
sbb
pop
das
xor
out
mov
and
or
sub
lret
xor
adc
sbbb
xchg
call
cmp
fisttps
test
add
xor
sub
adc
jae
mov
test
jb
mov
mov
mov
jmp
js
adc
lcall
or
out
mov
aas
repnz
mov
shll
insl
cltd
imul
outsb
sbb
adc
push
sub
inc
dec
and
aas
push
xchg
icebp
adc
and
fistpll
daa
xor
add
mul
mov
add
pop
mov
movsb
adc
push
vmread
testl
sbb
in
imul
push
jne
push
and
dec
cmp
xor
and
sbb
dec
sub
sbb
adc
cld
xor
lock
and
mov
js
in
fldl2e
ret
jle
sbb
mov
push
dec
mov
mov
ds
xchg
cmp
insl
and
movsl
cwtl
xor
inc
rolb
lock
repnz
mov
mov
sbb
add
fisubrs
fadds
fldl
cld
jae
inc
loop
fisubl
mov
out
mov
push
sub
or
xchg
addr16
mov
mov
sahf
cwtl
insb
or
xor
mov
scas
jle
out
cs
pushf
rsm
jp
adc
rcl
adc
add
xor
add
std
adc
cmp
loopne
lahf
fwait
mov
and
pop
inc
add
xchg
shlb
adc
in
fadds
inc
sub
push
dec
inc
mov
add
mov
cmpsl
neg
or
lods
pusha
testl
xor
out
jl
inc
lods
or
push
pop
inc
mov
or
adc
xor
adc
je
inc
sbb
rclb
mov
and
pusha
sbb
add
add
push
scas
test
push
inc
std
push
stc
xor
imul
movsl
loopne
xchg
sbb
and
fstl
mov
stos
int
adc
mov
mov
bound
dec
test
mov
mov
es
test
les
pop
xchg
stos
jecxz
lock
jbe
add
xchg
ljmp
stos
sti
jb
enter
jo
nop
inc
sbb
inc
xor
movsb
inc
inc
out
inc
jecxz
mov
inc
jae
jp
push
popf
shll
mov
inc
sbb
pop
fsts
aaa
cmp
dec
adc
sub
or
adc
jne
sbb
out
xsaveopt
mov
insl
enter
fildl
xchg
pop
out
jl
out
enter
fists
or
add
mov
xchg
sbb
ss
and
push
icebp
in
adc
andl
and
fisttpll
or
lock
add
cmpsb
inc
into
rorb
inc
sbb
test
pusha
cwtl
popf
xor
cmp
mov
out
sahf
mov
mov
dec
and
jo
mov
loopne
mov
mov
in
shlb
in
sahf
mov
push
or
jns
pop
add
or
sbb
inc
cmp
sub
mov
adc
daa
add
xchg
filds
ja
inc
bnd
adc
cmp
addb
mul
adc
stos
lods
sub
xchg
push
mov
ljmp
repz
dec
inc
add
and
test
dec
pop
ljmp
push
push
nop
jne
sbb
mov
adc
add
into
mov
jnp
sbb
add
addr16
mov
dec
sbb
les
mov
sahf
std
mov
rclb
adc
and
xor
and
inc
movsl
pusha
mov
lea
sub
aas
je
push
mov
aas
and
fs
mov
cmpsb
dec
stos
push
sub
loop
icebp
cmp
adc
or
and
mov
jp
inc
clc
fstpt
out
ljmp
and
jnp
add
or
pop
adc
sbb
push
push
cli
xor
add
movsl
imul
inc
cmpsb
sub
xchg
xlat
lods
inc
cmpsb
fbld
and
jmp
add
cmpsl
jo
adc
popa
fstpl
mov
xor
cmp
mov
fidivrl
ja
xchg
cmp
mov
fcmove
push
dec
cltd
pop
xor
je
scas
rcr
std
jg
ljmp
daa
mov
aaa
lods
rcl
and
mov
jle
or
daa
pop
add
nop
inc
aam
inc
adc
mov
shll
inc
aad
jg
add
data16
call
lock
sub
dec
xor
iret
push
insl
in
arpl
xchg
cmp
ljmp
push
or
sub
and
sub
movsl
or
lods
loopne
ja
dec
mov
cmp
int
pop
adc
hlt
incl
mov
xlat
push
cmp
inc
cmp
ljmp
adc
shl
fdivs
push
adc
xchg
es
adc
call
aas
pushf
cltd
je
add
adc
loope
inc
into
outsb
dec
pop
jo
stos
jle
push
das
or
sar
and
add
xor
lcall
ljmp
lods
pop
nop
stc
jmp
or
sbb
std
jmp
adc
cld
or
lea
jb
dec
arpl
mov
std
in
push
or
inc
adcb
dec
and
mov
das
jg
pushf
lahf
sub
mov
daa
sub
jae
jmp
add
adcb
decl
add
pop
xchg
pop
cmp
cmp
jb
filds
not
dec
add
add
into
pop
cmp
movsb
jg
mov
pop
cmp
push
je
push
sbb
daa
sub
lcall
cmc
outsl
add
and
add
add
push
inc
mov
pusha
and
lcall
sbb
hlt
int
xchg
inc
add
incl
sti
xchg
dec
js
inc
cmp
and
add
nop
sbb
subb
and
stc
mov
scas
repnz
call
cmp
insl
in
push
loope
pop
pop
pusha
add
cmpsb
sbb
dec
or
lock
ffreep
pushf
js
sbb
testl
idiv
incl
mov
imul
repnz
pop
sbb
fldcw
and
call
inc
cmc
addr16
inc
xchg
add
aad
es
das
loope
jg
mov
int3
movsl
das
jmp
and
je
mov
push
add
lock
int3
mov
sarl
iret
push
dec
mov
test
aaa
fdiv
out
pop
add
jecxz
jecxz
incb
mov
mov
mov
mov
push
aam
mov
leave
add
mov
push
mov
adc
and
xor
sbb
lcall
xchg
movsl
and
cmc
xchg
daa
popa
es
ljmp
pop
ret
int3
lret
into
fisttps
mov
or
pop
popa
push
inc
jnp
pop
pop
mov
cmp
and
fisubs
xor
push
imul
jmp
test
sbb
xchg
and
clc
sbb
mov
inc
aaa
sti
inc
and
xchg
aad
stos
sbb
mov
ret
fdivl
aad
fldt
cltd
inc
scas
out
enter
xor
incl
xchg
sbb
push
inc
mov
leave
cmc
in
and
cs
sbb
stos
adc
pop
in
iret
fs
or
mov
xchg
cli
push
cwtl
push
sub
mov
hlt
fwait
pushl
sbb
pop
cs
jne
lds
fiadds
add
cmc
mov
movsl
xor
in
inc
sbbl
or
push
out
inc
call
fs
sbb
cld
popa
adc
out
inc
stos
pop
daa
mov
jns
xchg
andb
imul
dec
test
cld
fbld
xor
fwait
xor
mov
insl
mov
mov
data16
testl
dec
or
lcall
sbb
inc
icebp
pop
sar
aaa
mov
pop
sbbb
imul
fildl
idiv
mov
popl
addb
xchg
cmp
pop
pop
jle
sti
xchg
cmc
pop
cwtl
lret
sti
fwait
xchg
ljmp
pop
jg
in
ficoml
add
push
dec
jge
clc
pop
dec
pusha
push
andl
push
add
shl
adc
sti
ljmp
dec
and
sub
lock
mov
add
add
or
sub
or
pop
inc
jge
adc
loope
psadbw
cmp
ret
outsl
xchg
jmp
rcl
in
adc
fbstp
cld
xchg
fldcw
loopne
enter
fs
push
pop
je
cmp
rcll
std
or
cld
aam
cs
cmp
add
push
fisubl
inc
hlt
add
loopne
cmp
loopne
loope
ds
adc
ret
lods
push
adc
sarb
and
cmpb
bound
push
inc
push
jmp
imul
and
and
xor
leave
add
sbbb
xchg
fisubs
sub
inc
pop
inc
lds
add
stos
xor
xchg
cmpsb
and
jl
jle
call
call
aas
rorl
daa
dec
stos
adc
sbb
aaa
inc
in
xchg
faddl
ljmp
sub
xor
add
or
cld
or
lock
mov
lret
add
aad
sub
cs
xchg
mov
fdivr
or
push
xor
adc
jae
inc
push
cmp
add
add
cmc
fcompl
inc
rorl
mov
clc
jmp
push
sbbb
push
push
mov
mov
call
bound
movsl
es
adc
xchg
aas
or
and
and
mov
jmp
mov
mov
loopne
mov
movsl
inc
push
xchg
inc
fs
cli
add
je
in
adc
clc
cmp
or
add
icebp
rol
jmp
in
inc
nop
std
jg
into
movsl
mov
jbe
and
jne
les
lcall
outsb
sar
pushf
nop
or
dec
int
icebp
dec
nop
sahf
mov
ret
outsl
push
xchg
add
push
push
xor
xchg
cmc
outsl
lock
add
ja
lods
pop
xor
sbb
xchg
pop
clc
outsl
lock
shlb
or
addr16
sub
xlat
pop
loopne
std
pop
mov
and
xor
out
mov
int
mov
sub
add
cwtl
sub
adc
mov
or
imulb
and
test
mov
pop
cltd
pop
movb
xchg
popa
dec
cmp
decl
cli
push
loope
fcmovu
adc
push
add
xchg
adc
or
and
xchg
add
sbb
leave
pop
sbb
ljmp
mov
inc
sub
lea
out
adc
int3
add
mov
in
adc
add
addr16
sbb
jmp
test
in
push
lods
les
dec
inc
push
push
in
xchg
cli
dec
repz
add
sbb
jb
aaa
or
cld
xor
call
dec
add
stc
dec
sbb
push
into
lods
decl
pushl
sub
leave
sub
in
push
dec
in
lock
scas
xchg
cs
int
stos
mov
sbb
push
inc
ds
outsl
ret
clc
adc
mov
in
adc
in
test
orl
adc
loopne
sub
jle
xor
sub
and
mov
cmp
ret
pop
mov
mov
pop
xchg
push
cmp
test
mov
sbb
mov
lret
ljmp
push
mov
or
mov
cmp
cmpsl
aam
add
sbb
xchg
inc
inc
call
mov
pushf
mov
leave
pop
inc
repnz
dec
rorl
push
jp
lods
xchg
push
or
push
mov
or
and
rolb
loop
mov
inc
icebp
mov
in
int
lods
ds
push
add
adc
add
scas
sti
fistl
pop
inc
call
insb
pusha
sub
hlt
xchg
fstpt
mov
outsl
xchg
jno
stc
and
outsl
cmp
mov
decl
push
fiaddl
xchg
jecxz
lahf
xor
sbbb
add
dec
mov
or
lcall
jno
adc
es
xchg
cmp
push
mov
sub
add
lcall
sbb
jl
jg
add
adc
incl
roll
add
call
mov
sbb
lods
cmpsl
enter
or
push
push
mov
push
pop
cld
push
xchg
fnstsw
mov
add
nop
xchg
gs
or
loope
aad
into
cmp
shlb
and
fbld
xor
sbb
mov
lahf
sbb
out
stc
adc
inc
sbb
loop
loopne
or
jg
cmpsb
loop
mull
push
std
mov
loopne
mov
and
xchg
dec
loop
xchg
inc
sbb
shrl
xor
or
sbb
or
orl
mov
shlb
jg
xchg
dec
mov
loop
or
clc
xchg
clc
lcall
pop
push
cmp
inc
daa
ret
and
jle
shr
incl
dec
ret
faddl
hlt
sub
inc
jmp
stc
or
adc
or
std
inc
lcall
mov
fptan
push
les
outsl
push
test
or
daa
movsl
mov
cmpsl
mov
bound
incl
ljmp
aas
mov
and
fmul
out
pcmpgtw
leave
dec
pop
ret
adc
adc
lods
cmp
mov
pop
aaa
popa
mov
mov
mov
jle
sbb
mov
and
test
loop
popf
cltd
sub
sub
arpl
inc
fwait
xchg
add
adc
addl
push
fsubr
dec
fwait
mov
jo
xor
enter
adc
lcall
data16
cwtl
rclb
movb
and
int3
ljmp
incb
inc
rolb
rorb
cmp
mov
pop
mov
jo
adc
push
mov
push
xchg
cmp
mov
cmpsb
insl
nop
sub
orb
adc
push
pop
into
and
popf
clc
xchg
adc
mov
add
dec
and
call
inc
icebp
pop
push
cltd
test
pop
sub
pop
adc
daa
pop
sbbl
loope
jmp
decl
mov
mov
adc
jnp
sbb
repz
into
mov
add
adc
mov
pushf
movsb
fildl
xor
cld
testl
inc
xchg
mov
jp
jge
andb
jmp
add
rolb
xchg
outsl
stos
mov
addl
mov
or
not
fiadds
push
insb
enter
dec
or
inc
xor
mov
arpl
or
imulb
pop
scas
imul
push
insb
pop
out
adc
adc
outsb
std
add
cmp
mov
ret
fldcw
fsubs
xchg
sub
sub
loope
insl
pop
mov
out
jge
cwtl
test
int
jno
inc
aad
mov
enter
das
mov
inc
or
and
or
test
or
into
push
add
and
lds
das
stc
sbbb
shr
add
xchg
adc
and
fs
hlt
push
cmp
call
cmp
mov
iret
rorl
pop
mov
add
dec
stos
xchg
ljmp
lcall
pushl
push
push
cmp
insb
mov
inc
xchg
dec
pop
push
pop
pushf
cmpsb
out
popa
and
jg
or
jnp
adc
pop
je
call
xlat
mov
lods
or
jbe
xchg
or
jo
dec
outsb
iret
inc
dec
sbb
sbb
cs
sbb
in
enter
add
mov
enter
or
fdivrs
xor
or
arpl
push
inc
pop
fsubrp
testl
test
adc
neg
ret
in
lahf
ficomps
mov
push
imul
pop
pop
pop
test
cmpsl
jecxz,pt
xor
push
adc
sub
loope
fs
ret
jno
jae
inc
sarl
out
jp
pop
js,pn
lods
hlt
insb
xlat
lock
sbb
adc
mov
adc
jae
arpl
fcoms
add
sbb
cli
pusha
cmp
stos
mov
add
and
shl
jl
inc
data16
fcomp
adc
mov
jp
iret
cmp
and
xor
ret
int
mov
add
insb
or
add
mov
daa
in
dec
mov
stos
cmpsb
jmp
ja
cwtl
loope
inc
dec
jmp
add
mov
mov
iret
bound
popf
mov
or
sub
mov
adc
push
sub
rclb
push
xchg
popl
jp
shll
lcall
xor
je
pushf
add
mov
mov
je
std
inc
hlt
mov
test
leave
cmc
dec
add
adc
pop
inc
repz
std
ljmp
adc
daa
xchg
es
repz
add
rorl
loop
pop
incl
or
or
xor
scas
sub
or
mov
adc
lods
cli
rcll
xchg
mov
cli
incl
or
inc
stc
rolb
pop
popa
xor
push
popa
adc
dec
adc
mov
push
ja
test
outsl
cld
lcall
sub
cs
fstl
inc
push
lds
clc
call
lret
push
xchg
loop
mov
xchg
add
das
jg
rcll
ret
idiv
inc
lea
sahf
xchg
rcr
mov
mov
outsl
ljmp
adc
ljmp
add
test
push
incl
mov
les
push
movsb
mov
leave
inc
rcrb
add
add
or
stos
cli
in
decl
jecxz
or
push
enter
inc
lret
call
aaa
ja
cli
testl
cld
and
cli
jmp
iret
call
pop
xorb
rcl
repnz
adc
push
add
mov
and
ljmp
or
fnsave
inc
xchg
adc
inc
sbb
dec
in
fstp
mov
cmp
dec
adc
es
popa
xchg
addb
iret
inc
dec
cmp
or
cmp
push
lcall
mov
in
lds
das
hlt
sbb
push
scas
loop
adc
push
clc
test
pop
and
cmc
pushl
in
sbb
shlb
lahf
decl
das
hlt
xor
scas
insb
add
hlt
add
sbb
push
rcll
jb
jae
mov
incl
mov
call
sub
mov
rclb
addl
push
dec
jl
sbb
push
adc
jle
mov
mov
mov
mov
movsl
add
ljmp
lods
es
sbb
pop
call
jno
sbb
into
out
cmpsb
imul
lcall
and
sub
add
clc
lds
mov
imul
pop
mov
lcall
sub
or
mov
ret
sbb
xchg
and
mov
pop
hlt
jb
fdivrp
lcall
or
pop
sbb
adc
pushf
dec
jno
push
add
push
or
pop
or
sbb
add
sarl
ds
rolb
jns
sbb
or
adc
and
lahf
cs
add
int
mov
cmc
test
cltd
or
push
push
rclb
mov
movsl
bound
xor
or
call
ret
xchg
jg
sbb
stc
les
mov
inc
push
in
js
pop
mov
nop
xor
pop
xchg
mov
sbb
rdmsr
mov
addl
sahf
filds
fimuls
jo
and
jb
les
scas
sbb
lods
jle
int
pop
test
xchg
mov
out
mov
in
cli
jbe
sub
rcrb
call
insl
push
ret
lcall
imul
ss
jg
adc
pop
sub
inc
cmp
addl
mov
fsubrs
aaa
cmp
addb
mov
mov
hlt
in
xor
adc
inc
fcmovu
inc
addb
xchg
jle
pop
mov
and
int
imul
pop
jne
pop
fwait
jo
mov
cmp
inc
lcall
cwtl
call
adc
pop
imul
inc
jmp
test
das
inc
cmp
outsl
cld
lea
fs
pushf
test
add
in
shl
mov
mov
mov
stc
stc
iret
arpl
add
and
test
lds
call
add
jne
stc
rorl
sub
js
add
and
dec
mov
sbb
bound
sub
push
les
pop
adc
and
add
sbb
fcmovnu
inc
mov
test
es
cmp
call
cs
add
xchg
and
and
mov
out
inc
or
es
data16
insl
adc
pop
adc
pop
loop
std
adc
lahf
cli
fst
outsl
cltd
fldenv
das
hlt
inc
xchg
andb
push
scas
dec
test
lret
adc
stc
lahf
into
shll
adc
mov
clc
inc
mov
bound
or
adc
sbb
push
test
icebp
out
add
sub
adc
cmp
jmp
pop
adc
sub
mov
mov
xchg
fs
mov
ljmp
sbbl
test
loop
rclb
lock
loopne
iret
pusha
outsb
inc
or
xor
sti
daa
inc
and
adc
cs
popf
jae
loopne
xchg
and
jb
nop
sbb
push
psubusw
and
test
jb
pop
insb
lcall
adc
jne
push
shlb
dec
sbb
dec
mov
fists
pusha
loopne
jecxz
dec
inc
jno
enter
lock
lcall
adc
ljmp
and
inc
xchg
inc
adc
adc
xor
or
rcrl
stos
sub
push
xchg
push
test
repz
mov
and
add
out
push
xchg
dec
adc
andb
fisubl
inc
cs
sbb
and
pop
sbb
cmp
add
add
mov
sbb
aaa
lret
loopew
jge
decl
mov
push
mulb
cli
and
cmpsb
mov
jmp
push
mov
adc
aam
jns
xor
testl
ret
fimull
loopne
std
jg
xchg
sub
mov
testb
fidivrl
arpl
ljmp
filds
cmp
mov
jl
jbe
cld
adc
add
mov
or
std
outsb
cmpb
loope
add
fs
jb
pop
mov
pop
jl
stos
popa
mov
inc
cmp
push
or
cmp
pushf
imul
or
and
fs
lds
aaa
stos
outsl
cld
pop
rcrb
xor
ljmp
outsl
jg
sub
push
xor
xchg
add
ja
mov
into
mov
je
cmp
jl
and
jmp
lahf
xor
dec
ja
add
mov
inc
les
or
jg
inc
stc
orl
mov
cs
xchg
add
std
lea
inc
jge
test
push
clc
sbb
lcall
mov
xor
mov
push
lahf
push
mov
mov
ljmp
pop
jo
sarb
sbb
jl
dec
pcmpgtd
shlb
or
repz
xchg
xchg
fdivrp
and
and
push
sti
lods
fstp
nop
stc
cmp
sbb
add
ljmp
popl
mov
lcall
ljmp
pop
ljmp
dec
xor
jle
negl
cmpsb
cmp
and
ret
lahf
jmp
jnp
dec
outsl
inc
aaa
add
xor
loopne
incl
lods
fadds
arpl
cwtl
loope
fstpt
loop
test
pop
dec
adc
jnp
imul
ficoms
sub
test
push
std
add
out
dec
addb
ret
sarb
in
jo
ret
inc
call
mov
jnp
fidivl
je
lret
stos
test
pop
xchg
idivl
cli
decl
xor
aas
cmp
adc
inc
xor
cli
add
shlb
lret
and
fdiv
idiv
call
pop
cmp
lret
xchg
dec
scas
out
test
test
jp
rorl
scas
cli
ljmp
push
repz
add
add
clc
inc
mov
inc
jp
cmp
fiaddl
fmull
xorb
cmp
inc
test
lret
mov
push
add
lcall
das
sbb
jb
fs
dec
sbb
cmc
mov
sti
inc
loopne
jnp
out
int3
adc
and
lret
dec
lahf
call
add
lcall
es
jg
lock
popf
sub
js
mov
cmp
daa
sub
scas
mov
sub
sbb
inc
insl
call
jg
cmpl
sbb
push
xor
repnz
leave
jbe
sbb
outsl
mov
inc
inc
andl
cwtl
clc
xchg
clc
inc
sbb
in
cs
sbb
inc
dec
pop
outsl
mov
daa
adc
les
pushl
push
and
inc
inc
pop
mov
push
sti
inc
pop
mov
lea
scas
lods
mov
les
insl
fisttpl
cld
loope
inc
mov
and
sbb
decl
xor
push
out
cmp
popf
out
dec
aaa
mov
mov
push
popa
xchg
repnz
cmc
and
fstl
xor
stos
imul
cmp
mov
cs
xchg
sbb
xchg
pushf
fcmove
mov
jg
int
out
cli
push
stos
xchg
sbb
outsl
sbb
jle
push
shrl
adc
inc
and
xchg
movsl
xchg
sbb
jmp
ret
in
cld
stos
inc
add
sub
shlb
and
icebp
in
or
push
add
jle
xor
fistpl
lock
jnp
and
cld
ret
cli
cwtl
ja
decl
imul
add
inc
jge
inc
pushl
sbb
inc
push
or
loop
or
idivl
in
mov
push
add
jmp
mov
scas
out
hlt
fs
movb
dec
ret
hlt
add
sti
int
inc
test
loop
push
ss
aam
popf
out
lods
rcrb
add
dec
jg
xchg
jae
jmp
mov
add
jge
mov
leave
pop
lock
sbb
xlat
rorl
or
nop
mov
and
sub
and
cli
incl
in
popa
loopne
pop
or
outsl
jo
xchg
push
jns
cmp
pop
sti
repnz
jecxz
sub
cmp
pop
fadds
inc
push
adc
pushf
adc
mov
aaa
or
mov
int
fbld
and
xor
sbb
sub
adc
mov
shrb
sbb
fadd
aad
les
and
dec
dec
or
or
inc
lods
sbb
stc
adcl
mov
pop
sub
inc
xchg
jge
aaa
mov
int
pop
sub
ret
mov
sub
add
adc
iret
adc
mov
inc
inc
mov
inc
pop
mov
les
sbb
stos
ljmp
push
fs
out
and
adc
add
icebp
pop
repnz
orb
push
jne
adc
adc
or
xchg
bound
mov
addl
pop
scas
mov
mov
add
pop
cmp
gs
outsb
movb
pop
loope
xchg
jge
in
clc
aas
push
sbb
shlb
dec
and
inc
xchg
stos
mov
cwtl
inc
fdivl
adc
and
test
inc
xchg
outsl
add
test
inc
test
in
ljmp
and
rclb
cwtl
cltd
stos
dec
sub
sbbb
push
mov
sbb
mov
fnstsw
jge
or
mov
sub
outsl
je
push
and
rclb
mov
xchg
bound
loope
mov
js
fs
dec
adc
or
cwtl
xor
mov
outsb
test
inc
std
adc
sbb
mov
int3
cwtl
mov
pop
push
lea
push
aaa
stos
cltd
jo
xchg
jne
pop
gs
int3
inc
loope
xor
dec
out
inc
mov
int
or
into
jae
cs
data16
dec
add
mov
out
out
mov
icebp
aaa
maxps
or
sbb
fstps
jns
pusha
testl
mov
xor
xchg
sub
out
shlb
pusha
addl
sub
or
pushf
mov
aaa
or
fldt
das
jae
call
inc
or
mov
test
filds
sbb
bound
add
daa
pop
xchg
stc
lret
mov
pop
mov
scas
xor
mov
dec
lahf
addr16
pusha
repz
jmp
clc
push
ljmp
sub
inc
cmpsl
dec
add
rol
jle
ja
push
jg
ljmp
jmp
mov
or
repz
cld
xchg
aas
movsb
cld
xor
dec
push
mov
daa
iret
in
aas
add
xor
ljmp
leave
add
nop
test
inc
in
jmp
loopne
sbb
lahf
pusha
lahf
icebp
aas
and
xor
and
jmp
dec
push
xchg
aas
xchg
repz
stc
dec
mov
lcall
bound
inc
push
inc
aaa
pusha
lea
je
mov
or
mov
imul
stc
scas
add
dec
iret
enter
iret
push
push
jle
mov
pop
stc
pop
rep
ret
push
add
lahf
outsl
mov
filds
inc
sub
rcll
fcomi
stc
lock
adc
mov
ss
fwait
dec
adc
and
hlt
das
hlt
pop
repz
lahf
push
sub
repz
es
mov
fdivrl
cmp
mov
add
add
add
cmpxchg
fisttps
cmp
cmp
stc
xor
mov
or
jecxz
mov
add
sub
adc
pop
cld
test
aas
mov
mov
jmp
sub
stc
xchg
push
adc
arpl
push
cmp
sbbb
fnstcw
jmp
call
inc
je
sub
sbb
int3
movsb
ljmp
jbe
aad
jo
insb
jb
push
div
js
hlt
push
ds
add
dec
adc
fwait
sub
and
adc
fnstsw
sahf
sub
ds
js
push
into
sub
call
dec
repz
add
popa
repnz
scas
das
cld
xor
xchg
xchg
xchg
cmp
inc
insb
pop
adc
cmpb
mov
cmp
cwtl
mov
and
das
repz
jns
jae
outsb
dec
into
mov
aad
dec
shr
jbe
jbe
nop
or
jmp
aas
mov
add
jge
add
std
mov
pop
sub
mov
jp
rep
push
adc
call
pop
dec
adc
orb
loope
add
sbbl
loopne
xor
or
push
clc
sbb
jbe
add
mov
cmp
loop
xor
lock
incb
and
xor
push
iret
bnd
gs
ja
das
add
clc
and
adc
sub
adc
add
pop
xchg
mov
sub
or
push
mov
pop
mov
es
cwtl
ret
aaa
push
xor
push
and
adc
pop
or
popf
inc
cmpsb
add
mov
shrb
and
and
popa
xor
mov
cmp
sub
pop
pop
adc
mov
mov
inc
jg
popf
xor
xchg
mov
push
lods
xor
fnstenv
add
call
dec
sbb
into
jecxz
and
xor
jp
push
aad
mov
xor
lcall
frstor
jo
mov
out
sahf
fcomip
inc
pushf
rcr
sbb
mov
lock
mov
and
iret
loope
addr16
jmp
out
call
sbb
cwtl
fists
loopne
rcrb
ljmp
cli
jg
and
mov
inc
daa
sub
pop
outsl
sub
pushl
sub
inc
jo
mov
ds
inc
call
shl
pushl
cli
mov
adc
add
insb
inc
clc
icebp
daa
and
and
xor
or
and
cwtl
out
int
mov
dec
incl
fbstp
mov
cmp
push
mov
push
insl
cmp
enter
cmp
cmp
xlat
xchg
inc
pop
std
clc
fdivrs
and
shlb
cld
ret
clc
cmp
adc
adc
iret
arpl
out
xor
lds
add
or
sub
jg
js
jmp
imul
xor
ja
mov
push
xlat
sub
sarl
xchg
add
mov
daa
insl
sarl
jno
push
in
push
addr16
inc
push
add
jg
outsl
pushl
divl
clc
clc
mov
pop
add
lea
mov
in
and
add
jle
push
lahf
jecxz
add
in
lea
les
pop
fistps
add
iret
adc
cs
pop
push
movsl
aaa
fsubp
or
jmp
pop
mov
add
cmp
jg
cld
sbb
lock
cmpsb
pop
or
int3
mov
repz
in
pop
lret
mov
add
shl
inc
jg
lock
insb
in
out
jle
add
mov
out
insl
inc
cld
test
ret
std
cmpsl
loopne
pop
jmp
add
mov
ljmp
das
xchg
xchg
mov
add
addr16
sub
mov
jnp
stc
stos
hlt
jle
mov
lcall
jg
jns
mov
xlat
adc
or
shlb
inc
dec
jmp
pop
dec
mov
pop
add
ljmp
out
cwtl
cmc
sbb
sub
mov
or
gs
dec
aam
lea
mov
je
adc
cmp
jae
fwait
push
adc
je
or
lret
pop
lret
rclb
sbb
inc
jle
or
xor
xlat
add
and
xchg
leave
lods
adc
pslld
xchg
pop
push
lods
xlat
ljmp
mov
or
push
pushf
sbb
fs
sti
jae
dec
xchg
sbb
fwait
cmc
add
xor
test
out
out
or
mov
pushf
repnz
sbb
push
adc
mov
add
movsl
iret
jmp
daa
dec
and
fsubs
jecxz
addr16
cmp
les
ret
ljmp
aas
stos
pop
sub
mov
adc
add
cmc
movsl
add
inc
xor
adcb
pushf
call
add
shl
fwait
int3
std
jnp
inc
add
hlt
dec
mov
push
fcompl
xchg
in
jmp
xor
inc
out
inc
jge
or
xchg
inc
insl
jae
mov
cmp
lret
rcrl
push
pop
ret
push
sbb
pop
and
rcl
fdivl
loopne
dec
cmp
aas
and
daa
mov
leave
sub
cwtl
mov
rolb
fcomps
push
je
jae
sbb
aam
aam
fdiv
out
inc
cmp
inc
in
lret
adc
push
rorl
dec
add
dec
add
or
cmpsb
jle
shl
paddd
add
imull
fnstsw
pop
add
call
add
sbb
jmp
fldenv
inc
mov
jmp
add
adc
xor
sarl
in
and
cmpsl
das
or
xor
mov
out
out
popf
sub
fistpll
test
add
in
or
inc
xor
and
xchg
or
orb
pop
mov
add
or
dec
push
add
jo
das
sub
or
jle
lods
pop
inc
push
mov
push
add
inc
popa
pop
mov
mov
lods
sbb
push
loope
lahf
mov
xchg
or
sub
or
or
movb
sbb
add
bnd
scas
mov
inc
sub
int
aas
out
repz
mov
cmp
cmpb
aad
movsl
out
push
inc
push
nop
repnz
add
sbbb
or
xchg
dec
mov
xor
pop
and
sbb
push
jo
inc
hlt
mov
mov
je
add
inc
out
jae
mov
dec
jecxz
cltd
mov
ljmp
stos
data16
mov
outsl
pop
fiadds
jmp
icebp
mov
jmp
in
leave
inc
in
mull
ljmp
adc
mov
dec
sbb
cs
dec
adc
leave
push
sarl
es
montmul
cmpsb
pop
imul
cld
cli
push
je
jno
lea
in
aaa
les
push
and
or
push
or
adc
jp
dec
gs
ja
fbld
sub
sub
mov
xor
inc
inc
adc
add
dec
push
popf
inc
xor
xor
sti
adc
testl
xor
adc
and
add
cmp
add
fnstenv
mov
loopne
jl
clc
xor
sti
je
enter
movsb
or
lcall
adc
adc
dec
popf
sbb
xorl
cmp
cmp
or
lock
mov
dec
ficomps
jne
daa
test
aam
inc
add
cld
or
push
mov
hlt
xor
insl
inc
lods
adc
inc
xor
inc
cwtl
test
or
sub
leave
in
or
in
and
inc
sbb
pop
inc
add
pop
sub
push
or
data16
fcoms
mov
and
xor
mov
stos
adc
aaa
xlat
adc
pop
lret
sub
dec
arpl
xor
leave
test
insb
xor
lods
add
adc
cmp
aam
pop
leave
sub
jns
pushl
notb
add
addb
cmp
adc
mov
add
fiaddl
cmp
adcb
cmp
fdivp
dec
xor
inc
mov
call
icebp
loop
pop
lahf
ljmp
les
pop
fsubl
call
ljmp
mov
nop
nop
icebp
add
rcr
or
lcall
push
sbb
and
inc
or
mov
adc
push
sub
push
das
aad
mov
sub
outsb
lret
inc
sbb
sti
inc
sub
in
jl
add
inc
cltd
call
pop
push
aam
fsubrl
adc
sub
test
icebp
lods
shll
and
xchg
cmpsl
and
outsl
sub
inc
sbb
mov
addb
inc
test
push
stos
loop
test
or
cmp
adc
pushf
mov
and
ja
pcmpgtb
cmp
sbb
or
mov
add
imull
pop
xor
rorb
sbb
gs
sbb
adc
mov
stos
fiadds
ud0
dec
orl
mov
movsl
rolb
loop
add
mov
imul
jne
or
mov
dec
loopne
out
sub
fnstcw
mov
xchg
mov
fists
mov
mov
icebp
cli
or
inc
jno
push
cwtl
out
nop
push
psubd
inc
dec
sub
push
jne
sub
push
movsb
push
inc
push
ret
inc
stos
sbb
or
mov
mov
insb
push
add
in
xchg
adc
jne
sbb
int
in
pop
or
add
adc
pusha
or
push
and
cld
aas
and
pop
ficomps
push
sub
ficompl
aam
sub
sub
ret
clc
fucomip
outsl
std
mov
sahf
xchg
sub
jecxz
or
out
dec
movsb
and
sbb
pop
mov
lods
and
mov
jg
loop
leave
pop
cs
rclb
dec
or
ss
mov
fcmovb
sbb
out
clc
pop
cli
add
and
add
aad
cwtl
sbb
push
add
sbb
jmp
or
mov
lods
addr16
push
sbb
fmull
xor
lock
lahf
xor
xor
fs
call
sbb
call
mov
hlt
std
test
lods
imul
mov
jnp
aas
sub
stos
ror
loopne
inc
mov
or
out
out
leave
push
inc
xor
loopne
leave
cmp
push
xchg
mov
push
mov
decl
mov
dec
in
fmuls
or
jg
pop
test
std
mov
dec
loope
inc
nop
mov
adc
mov
dec
inc
adc
sbb
pop
fsubs
sbb
jle
jae
std
sub
ljmp
shll
test
jb
xchg
sbb
adc
sbb
adc
push
jne
mov
faddl
mov
sub
das
and
or
xchg
jno
test
neg
lcall
loop
mov
test
mov
pop
jae
es
imul
clc
push
shll
inc
test
adc
add
or
or
pop
xor
and
sbb
mov
adc
insb
sub
rcrl
cli
push
and
xchg
cld
xchg
test
in
jne
xor
aaa
push
add
mov
push
movsb
pop
mov
or
adc
cld
insb
jnp
ret
sbb
lock
add
xchg
aam
xor
rcll
mov
lods
daa
pop
pop
jmp
dec
fmull
mov
and
mov
imul
add
je
cmpsb
pop
dec
jmp
aad
sbb
add
je
cmp
repnz
test
and
stos
xchg
adc
popa
push
je
out
in
aaa
loope
xor
in
roll
fucomip
push
call
out
gs
scas
test
push
add
adc
push
xor
ds
aaa
enter
inc
mov
arpl
adc
and
lea
push
add
push
cwtl
notb
lock
jo
mov
and
inc
xchg
loopne
jge
lods
out
and
add
push
inc
mov
pop
ja
jle
inc
dec
xchg
dec
int
repz
xor
jnp
arpl
test
mov
and
out
icebp
push
or
aam
and
inc
jecxz
mov
leave
add
jl
aas
jne
xor
clc
sahf
testl
xor
inc
cmp
add
lret
testl
and
orl
jns
lods
xchg
xchg
mov
das
popf
cmpsb
jb
ja
sbb
out
pop
mov
movsl
adc
test
lods
es
lods
nop
and
ja
test
clc
ljmp
cmpsb
pusha
jae
int
daa
add
cld
mov
pop
in
sub
stos
cltd
ljmp
sub
add
and
ss
mov
in
cmp
pop
xchg
cmpsb
addl
xor
cmp
mov
adc
dec
add
or
andb
out
and
loopne
cmp
jae
push
jl
and
dec
nop
mov
sti
adc
adc
sbb
test
adc
jns
inc
lock
lock
aaa
lret
sbb
arpl
sbbb
test
stos
fsub
jmp
int3
es
push
in
sbb
int3
jbe
inc
pusha
pop
or
or
add
and
out
lret
xchg
ljmp
add
add
int3
xor
mov
aaa
ret
jge
inc
mov
aam
insb
or
and
or
das
fwait
les
cmpsb
js
dec
pop
popf
fwait
add
pop
clc
jmp
xchg
out
testb
addb
mov
sub
rorl
and
and
xchg
sub
adc
mov
pop
sbb
push
add
shl
lret
nop
sub
sti
push
add
inc
adc
pop
sbb
hlt
mov
out
aad
add
jne
jns
rolb
aaa
stos
jb
xchg
call
popf
cmpsl
es
push
sti
jp
and
jb
icebp
sbb
lret
shl
out
loop
xor
lret
test
fnstsw
mov
cmp
inc
mov
pop
jns
jp
push
inc
pop
and
aam
mov
inc
pop
cltd
gs
add
xor
push
xor
jo
out
sbb
push
loop
call
add
pop
and
inc
popf
mov
lods
sub
jno
cld
lahf
js
and
movsb
add
aas
popa
inc
je
dec
pushf
mov
nop
dec
out
xor
insb
and
fnstsw
xor
leave
cltd
xchg
or
orb
fcomps
or
jg
xchg
aaa
xchg
inc
movsl
jb
test
movsb
add
or
fidivl
mov
test
cmp
outsb
roll
bound
cmc
add
test
rcrb
add
xchg
pop
push
mov
cmp
addr16
cmp
ror
loope
das
sub
mov
mov
mov
dec
out
aaa
mov
sbb
roll
cmp
stc
add
adc
fistpll
loopne
or
sbb
xlat
or
dec
sub
idiv
ljmp
es
lock
cmp
ss
rcll
jb
sbb
mov
loop
call
test
add
ljmp
cmp
bound
scas
and
mov
mov
or
dec
add
mov
add
icebp
lcall
sbb
adc
push
add
xor
sub
dec
cld
outsl
add
cmpsb
and
lret
js
lret
daa
add
loope
incl
pop
mov
lds
arpl
or
insl
or
pusha
pop
es
daa
mov
push
xor
cmp
push
add
jmp
incl
sbb
or
in
out
daa
daa
pop
mov
aaa
adc
dec
inc
icebp
add
jae
icebp
pop
lea
insb
fildll
jecxz
pop
loope
add
push
lods
mov
pop
mov
cli
pop
push
incb
shrb
dec
jne
push
sub
dec
sbbb
mov
sti
and
insl
lock
xchg
and
cld
sbbl
ret
lock
add
push
dec
push
mov
popa
or
and
incl
scas
out
loop
dec
ja
mov
jg
icebp
and
jl
pop
aam
or
leave
sub
ds
cmp
jecxz
hlt
mov
pop
sub
aas
stc
lea
xchg
dec
imul
mov
ss
int3
mov
or
or
push
movsl
call
add
xor
cmpsb
ret
push
ss
add
nop
sub
ja
outsl
mov
lcall
inc
cmpsl
std
sbb
std
in
in
insb
xchg
xor
dec
cmp
push
mov
sbb
sbb
sbb
in
dec
mul
jne
add
out
push
scas
loop
inc
xchg
test
mov
sub
std
leave
pop
pop
inc
or
pop
orl
aad
sbb
lcall
jp
add
dec
sbb
orb
push
cmp
sub
push
lock
push
paddb
out
mov
je
lds
mov
scas
inc
adcb
mov
add
cmp
jg
dec
mov
or
add
xchg
jb
mov
mov
sbb
popa
or
fisubrs
stos
mov
add
pusha
push
add
xlat
or
lods
add
call
or
mov
add
mov
mov
loopne
loopne
call
pushf
rcrb
cmp
xchg
cmp
std
fs
jmp
push
pusha
adc
mov
insb
cli
lret
xchg
enter
lret
push
shlb
fcoml
addr16
mov
and
push
sub
test
shlb
pop
movsl
loopne
rcr
mov
or
cmp
mov
loop
mov
inc
push
mov
xor
push
or
in
sub
jo
push
mov
add
andl
test
inc
mov
fstpl
rorb
cmpsl
ss
aaa
and
push
cmpsl
or
jae
out
and
and
fmuls
jle
test
not
out
fildll
in
movsb
or
fsubs
xlat
cld
xor
test
jae
loopne
cmp
adc
lcall
sbb
js
pusha
inc
add
adc
pop
push
sbb
mov
adc
rcrl
or
and
push
dec
mov
or
daa
add
sub
pop
dec
adc
inc
out
sti
and
bound
inc
sahf
push
push
sar
in
aaa
or
jle
fs
add
or
bound
cmp
mov
hlt
add
mov
push
fs
or
aam
into
push
cmpsb
push
push
dec
sbb
push
cld
in
bound
mov
add
xor
add
out
js
mov
lcall
in
sub
repnz
lret
pop
rorl
adcb
or
jae
lock
lcall
jecxz
das
sub
scas
mov
mov
imul
js
adc
adc
jns
inc
xor
sub
xchg
inc
out
rolb
xor
hlt
xor
xchg
fwait
stos
xlat
lret
add
xchg
shl
or
mov
fldcw
push
add
inc
int3
rcrl
cld
int
add
scas
stos
adcl
xor
sbb
sti
repnz
mov
and
int
jb
decb
adcb
inc
xchg
clc
jg
icebp
rorl
clc
jecxz
pop
out
stos
jl
cmp
in
or
call
cmp
fwait
test
lea
pop
cmpsb
mov
femms
jl
decl
xchg
int
pop
test
lock
push
decb
dec
outsl
icebp
ljmp
mov
sbb
sub
flds
stc
and
jecxz
hlt
jle
mov
adc
xor
push
lcall
push
mov
hlt
jg
lods
lock
jno
mov
jl
roll
xchg
clc
push
add
call
scas
cmp
test
fnstcw
insl
jecxz
jl
addr16
out
fcompl
and
pop
clc
icebp
icebp
repnz
in
loop
es
jg
cld
pop
pop
dec
and
add
pop
fiadds
mov
mov
lahf
rcrb
mov
ljmp
shrl
dec
lods
popf
mov
adc
idivb
cmp
or
mov
mov
test
pop
pusha
icebp
push
insl
jg
mov
add
mov
jl
ds
jg
scas
rol
mov
mov
sarb
pop
adc
outsb
add
pop
cld
mov
xchg
add
and
adc
outsl
ds
imul
das
dec
inc
scas
mov
icebp
nop
or
dec
fsubrl
mov
call
ds
icebp
pop
xchg
jnp
and
insl
xchg
dec
pushf
out
fucomi
jg
clc
sub
pop
icebp
int3
icebp
mov
jl
imul
pusha
nop
mov
jnp
in
inc
xchg
icebp
jp
xor
dec
lock
pop
xchg
in
mov
xlat
addr16
pop
rclb
lods
out
inc
or
ds
sub
inc
ret
insl
icebp
ja
inc
int
adc
shr
add
aaa
sub
jno
mov
dec
cmp
call
sub
push
pop
xchg
in
cmp
je
inc
add
sbb
jl
cmc
movsb
xorb
fmulp
dec
push
lahf
mov
dec
repz
clc
popf
pop
mov
ss
pop
mov
nop
mov
cmp
xor
shrb
sbb
and
idivb
clc
jg
ja
push
add
add
rcll
and
ljmp
cmp
popf
mov
stos
mov
outsl
sub
orl
pminsw
dec
add
mov
loopne
int3
cld
mov
stos
imul
mov
jl
data16
pop
mov
loopne
push
loop
loope
add
stos
sbb
out
mov
iret
pop
inc
add
push
dec
xor
mov
lock
bound
pop
sti
inc
add
or
lds
sbb
das
mov
mov
push
int3
roll
mov
lea
pushf
pop
loopne
stos
and
and
shr
sbb
jne
or
and
fs
cmc
pop
stc
mov
fists
push
scas
rol
testb
add
stos
and
lods
mov
sahf
add
adc
data16
pop
xchg
sub
fcoml
int3
inc
push
add
shll
popa
mov
pop
shrl
popa
adc
stos
nop
jb
adc
adc
add
unpckhps
adc
lds
movsl
iret
and
inc
sbb
repnz
jbe
jecxz
xor
mov
inc
int
push
cwtl
push
ss
popa
movsb
sahf
sub
pop
int3
cli
in
pop
adc
push
lahf
test
lcall
sub
mov
dec
add
mov
xorb
decb
add
sbb
std
xchg
int
mov
jle
cs
das
hlt
mov
inc
push
push
push
fcoms
inc
xor
int3
std
push
xlat
xchg
js
push
pop
push
lock
outsb
stc
int
aam
test
jno
dec
add
and
cli
rcl
rclb
cwtl
adc
fiadds
arpl
in
or
sbb
outsb
mov
jo
jbe
fsubs
lcall
or
movsl
pop
or
xchg
or
sub
outsl
xor
push
sub
pushf
or
fnstenv
les
mov
jbe
fimuls
divl
sbbb
and
xor
pushl
xchg
lret
lret
cltd
es
scas
shr
add
mov
mov
pop
loopne
es
push
pusha
aas
cmp
test
ret
pop
loopne
pop
or
or
sub
inc
xchg
test
decb
mov
enter
into
xor
cvtps2pi
dec
xor
or
lcall
add
lret
mov
sub
mov
mul
popf
jecxz
pop
mov
and
shlb
mov
jp
inc
inc
je
and
or
xchg
incb
out
add
data16
dec
ret
iret
push
leave
xchg
stos
jae
sbbb
and
cmpsb
add
lcall
scas
adc
push
xchg
sub
add
add
mov
pop
test
or
repz
pop
movsb
stc
jno
in
scas
inc
jl
xchg
nop
cmp
fs
lds
dec
insl
inc
cmp
loope
pop
or
or
mov
mov
push
cli
cltd
icebp
into
adc
loope
test
incl
adc
inc
sub
xor
bound
or
inc
sbb
stc
add
lret
mov
sub
lret
xchg
js
xchg
in
insl
clc
inc
xorb
and
mov
jg
cmpsb
xor
in
xchg
subb
data16
sbb
jg
add
dec
popf
mov
data16
and
pushl
add
aaa
mov
mov
bound
dec
test
enter
adc
fsubrp
mov
ss
imul
int3
pushf
insl
lods
mov
or
or
or
je
cmpsl
mov
sbb
lcall
and
pop
and
jns
fisttps
push
and
mov
xor
xor
outsl
mov
jnp
xchg
jmp
std
jno
or
inc
je
aas
add
pop
lock
push
xchg
mov
les
fcomip
and
sbb
pop
stos
and
xorb
aad
aad
xchg
imul
xor
sahf
add
and
jmp
push
icebp
push
sub
loop
icebp
mov
cmp
or
shrb
subl
jae
mov
sbb
mov
sub
cmp
push
and
testb
mov
pop
mov
adc
mov
xchg
sub
es
pushf
jno
stc
sbb
lahf
sbb
arpl
addl
push
aaa
cld
sbb
adc
sbb
mov
or
aas
cmpl
in
inc
xchg
xchg
ret
int3
mov
mov
xchg
adc
jle
push
loopne
cli
repz
sbb
xchg
mov
add
test
pop
cmpsb
push
add
ret
int3
inc
mov
xor
shl
outsb
call
ret
loop
jmp
cwtl
lods
incl
jo
mov
dec
imul
rorl
add
inc
fs
dec
adc
jno
push
nop
not
or
insb
mov
popf
loope
xlat
mov
mov
push
rorb
repnz
add
inc
pop
cmp
in
sti
das
adc
stos
clc
mov
mov
mov
add
pop
jne
jg
mov
mov
flds
les
bound
sti
lds
inc
pushf
call
es
incb
test
leave
xor
xchg
cmpsb
push
sbb
fbstp
and
aad
push
cs
adc
cwtl
mov
sub
leave
fsubrs
es
cs
iret
sub
dec
mov
add
add
sub
adc
adc
mov
and
enter
mov
rcrl
add
hlt
insl
push
mov
add
mov
stos
push
or
xor
inc
adc
jg
sbb
sub
push
xchg
jecxz
stc
and
outsl
or
movsl
test
pop
sub
push
cmp
pop
shlb
lret
mov
idiv
adc
adc
mov
or
insl
and
inc
mov
sbb
sbb
adc
dec
sbb
xor
adc
roll
jl
push
xor
sbb
test
mov
into
jae
stos
int3
cmp
mov
push
xchg
or
bnd
outsb
jg
cmpsl
mov
jbe
test
add
les
fildll
mov
mov
adc
push
or
adc
xchg
pop
push
add
test
insb
lret
fildl
ret
ret
lahf
dec
leave
mov
adc
sub
ljmp
push
orb
or
lea
fiaddl
adc
sbb
call
and
lds
int3
inc
pop
and
add
sti
inc
inc
cwtl
jle
mov
aaa
clc
ret
xchg
adc
or
aas
inc
inc
inc
jg
cmpsb
add
lret
and
inc
push
mov
xchg
test
dec
lods
xor
push
mov
mov
mov
jg
jg
dec
inc
sbb
push
das
dec
std
mov
xchg
cmp
fcomps
xor
mov
xchg
pushl
pop
adc
nop
rol
add
lcall
int3
subb
addl
sbb
mov
incl
shlb
dec
mov
or
push
pop
adc
fbstp
inc
cmp
lods
mov
mov
or
mov
add
sbb
cmp
add
add
or
jne
xor
jg
shrb
mov
add
pop
xlat
je
shll
xor
mov
lea
add
pop
fmull
addb
fidivrl
decl
out
jb
loopne
pop
out
mov
ret
cmp
imul
add
enter
std
outsl
incl
mov
push
shlb
test
inc
sbbb
xchg
mov
and
cwtl
jl
mov
push
push
aaa
call
jae
dec
dec
push
push
push
xchg
je
and
loopne
cmc
mov
popf
mov
push
ret
jns
mov
int
testb
insb
fsubl
add
add
subb
mov
mov
sbb
mov
push
adcl
js
mov
cmp
sbb
jo
shlb
mov
mov
pop
xlat
fsub
and
xor
cwtl
add
sbb
mov
push
filds
shrb
dec
call
lods
jecxz
mov
or
fisubrl
jl
sti
mov
sbb
and
call
cmp
test
cld
push
xchg
mov
xor
cmpsl
xor
shr
fistpl
mov
lret
pop
sub
or
dec
mov
pop
mov
sbb
pop
inc
lcall
sub
repnz
add
pop
test
adc
js
ljmp
or
or
jnp
mov
mov
mov
add
and
testb
push
lret
jns
cld
loopne
inc
push
cwtl
sbb
notl
sbb
js
int
and
sbb
dec
cltd
stos
or
adc
xor
dec
push
inc
push
es
sbb
add
mov
ds
popf
push
pop
int3
and
roll
loopne
or
dec
mov
nop
movsl
and
pop
int
pop
mov
jecxz
fcoms
xorl
add
jo
and
pop
push
sbb
inc
sub
and
add
and
lret
ret
sub
or
mov
aam
and
mov
ljmp
shlb
mov
mov
add
pop
cmpsl
mov
cmp
add
data16
and
ja
stc
push
dec
xor
lea
pop
sbbl
mov
inc
pop
inc
jmp
or
rorb
fmuls
inc
or
je
scas
inc
cs
addr16
add
and
or
movsl
add
add
cmpsb
mov
lds
xchg
adc
sub
faddl
mov
mov
dec
cmpsl
adc
push
push
mov
jg
lcall
fdivrl
inc
fistps
dec
mov
inc
incl
cmc
ds
scas
add
sbb
outsl
mov
jmp
sbb
jecxz
inc
sbb
cmp
sbb
or
aas
push
loopne
mov
lea
and
push
stos
aaa
cli
fbld
mov
insb
inc
jg
mov
sbb
enter
inc
aas
mov
sar
pop
push
repz
pushf
shr
int
push
cmc
insl
lcall
std
aaa
push
inc
mov
jecxz
divb
dec
add
jg
incl
sub
out
dec
push
add
fs
fildl
dec
shl
pop
test
repz
xchg
aas
sbb
enter
sub
sahf
cmp
bound
mov
jmp
and
mov
test
cmpsl
jl
and
dec
subl
in
sub
cmp
ret
mov
sbb
or
call
adc
imul
nop
sub
sub
ret
lcall
sbb
or
mov
std
sub
sub
and
cmpsl
add
fcmovnu
jle
hlt
xor
adc
mov
test
out
les
pushl
mov
mov
xor
add
jne
aaa
loopne
inc
inc
ss
pop
arpl
pushl
push
jno
pop
or
sbb
mov
call
or
mov
and
xchg
mov
loopne
xor
mov
in
mov
divb
mov
sti
movsl
jle
pop
clc
in
inc
inc
mov
aam
and
mov
sub
xchg
inc
decl
xchg
mov
enter
cmp
mov
push
popa
sub
and
out
jmp
dec
add
cmp
rclb
mov
pop
imul
leave
lcall
dec
jmp
leave
push
pop
lret
push
hlt
fstpl
lcall
mov
outsl
icebp
push
clc
xchg
mov
dec
mov
mov
nop
sub
or
mov
cmp
shrb
adc
bound
out
inc
mov
mov
mov
outsl
mov
push
jmp
inc
mov
and
xor
mulb
xchg
mov
add
mov
inc
fwait
out
push
jb
pushf
loop
loopne
and
inc
pushf
pop
shlb
or
mov
fdivr
sub
ss
push
add
cli
call
mov
push
push
jg
inc
xchg
hlt
ret
jmp
stos
subb
pop
clc
fisttps
push
or
dec
add
pop
and
lea
jp
jmp
jecxz
test
clc
mov
icebp
jns
adc
xchg
xchg
jb,pn
test
dec
inc
add
dec
icebp
add
adc
push
mov
int3
mov
xor
orb
int3
adc
jmp
adc
add
mov
lcall
jp
jb
in
jmp
cmp
xchg
xor
xor
aad
jmp
xor
cmc
or
mov
in
jg
jecxz
or
cmp
insb
pusha
nop
inc
adc
push
int
in
add
xchg
dec
xchg
xchg
jae
xchg
adcl
dec
push
inc
add
add
lcall
add
push
and
outsb
mov
out
call
push
lods
xchg
test
mov
and
cltd
inc
rorb
cmpsb
aaa
rorb
mov
jg
mov
mov
add
ds
negl
sub
adc
xchg
mov
fidivrl
mov
lods
ficomps
sarb
push
aaa
jo
push
decb
pop
xor
sub
daa
jns
jbe
call
popf
pop
and
sbb
adc
inc
inc
mov
shr
clc
or
int3
repz
ja
push
and
inc
push
mov
sarl
ljmp
push
sbb
lds
sub
fidivs
and
xchg
loop
or
jnp
inc
jmp
inc
lds
out
mov
inc
push
push
inc
loopne
and
lds
push
sub
add
mov
add
popf
xor
add
jb
mov
or
or
push
add
das
lret
cwtl
add
adc
inc
outsl
or
icebp
jae
data16
xchg
push
xor
add
rolb
movsl
sub
sub
test
pop
insb
iret
aaa
lret
push
rcll
add
popf
fists
repz
xor
adc
pop
sbb
and
push
enter
jb
jno
fcoml
call
mov
pop
ljmp
push
test
pop
mov
fadds
jo
std
dec
sbb
fidivrl
dec
xor
dec
fs
pop
jmp
pop
pop
inc
mov
cmpsb
xor
or
xchg
ljmp
mul
jns
inc
sbb
ret
in
push
test
rolb
mov
cmp
aam
outsb
movsl
jbe
repz
hlt
add
bound
es
arpl
jle
push
loope
mov
fisubl
jo
lret
xchg
jbe
sbb
jne
int
mov
bound
fsub
push
push
incl
sub
mov
mov
and
fmuls
dec
mov
aam
mov
mov
lock
inc
adc
loop
decb
aaa
sub
dec
xchg
push
shlb
mov
add
cmpsl
imull
jae
addr16
fsubrs
inc
iret
mov
mov
pop
dec
adc
ljmp
rcl
dec
push
mov
xor
test
push
push
sbb
xor
inc
cmpsb
jmp
ljmp
sub
sbb
push
mov
push
cmpsl
mov
dec
xor
rcpps
or
sbb
lahf
mov
enter
filds
and
aas
sub
push
aaa
and
dec
mov
sbb
inc
mov
xor
lock
rolb
xor
jg
inc
out
stc
push
push
add
call
test
mov
sbb
mov
adc
lock
popf
mov
mov
test
xor
lret
push
fnsave
rolb
pop
adc
add
test
xor
fiaddl
inc
das
movl
std
xorb
cmp
sub
shr
or
ja
inc
icebp
cmp
in
inc
jmp
mov
movsb
jmp
adc
hlt
ljmp
jne
or
or
inc
sbb
ljmp
xlat
mov
mov
fdecstp
push
hlt
sahf
sub
push
sub
in
jmp
inc
in
fcomip
js
bound
shll
cltd
mov
mov
test
shll
and
dec
add
pop
sbb
pop
subb
add
mov
cmp
or
je
lcall
mov
and
xor
jns
in
sahf
xchg
mov
shrl
scas
add
pusha
mov
inc
ds
mov
lock
stc
aaa
mov
lods
mov
cmp
or
shll
fists
ja
inc
xor
mov
pop
mov
push
out
mov
add
push
jg
and
and
push
shll
dec
sti
and
mov
or
je
sbb
into
add
push
rcl
imul
inc
inc
gs
lds
aam
outsb
sbb
and
jle
cmp
pushf
xlat
xor
call
add
push
or
adc
or
or
push
adc
in
aad
and
gs
adc
mov
mov
ljmp
pop
mov
fsubl
dec
mov
aam
mov
stc
mov
jp
adc
jae
and
mov
cmc
jo
loopne
fucomp
cmp
inc
loope
add
mov
xchg
cmp
push
pushf
ljmp
jns
xchg
push
or
push
push
loope
imul
jg
adc
or
ret
push
inc
popa
or
shlb
shlb
out
shlb
push
mov
popa
andb
pcmpgtw
arpl
rolb
or
adc
dec
lret
mov
cs
xchg
and
add
stos
xchg
adcl
cmpsb
fadds
xor
shrl
pusha
add
mov
ljmp
push
nop
aad
pop
and
enter
cltd
push
sbb
stos
inc
test
into
pop
lcall
sbb
test
rorb
inc
testl
dec
dec
les
lock
loop
mov
repnz
jno
roll
push
pop
and
add
sub
or
cltd
es
je
add
outsb
sbb
mov
loopne
push
add
aad
pusha
adc
push
inc
dec
inc
divl
repz
adc
sub
aaa
xor
mov
testl
in
mov
cmp
notl
mov
push
cmp
shrl
mov
adc
sbb
ret
and
and
cmpsl
in
lods
sub
call
pop
mov
addr16
decl
rol
sbb
jmp
lods
pop
int3
and
sub
call
push
xchg
xchg
add
mov
mov
inc
mov
push
ljmp
bound
add
xor
or
popa
mov
jg
shll
jae
pop
adc
lods
add
stos
shll
test
or
outsl
and
clc
jg
mov
mov
dec
inc
jns
jl
test
in
decl
add
rep
mov
inc
icebp
cmp
ds
call
mov
lcall
adc
adc
icebp
push
or
pop
add
test
mov
call
or
xchg
xchg
push
enter
popa
cli
pop
or
leave
clc
sbb
cmc
notb
pop
inc
adc
jb
add
xchg
std
incl
movsb
dec
jbe
aaa
ljmp
mov
xchg
xchg
push
dec
pop
mov
pop
gs
and
aam
mov
adc
in
mov
jle
enter
push
pusha
in
mov
push
shrl
sub
nop
popf
pop
jge
mov
sbb
pop
clc
jmp
mov
lcall
add
ljmp
es
je
push
xchg
into
sub
push
scas
sub
test
mov
inc
sub
inc
das
icebp
ljmp
push
or
mov
sti
mov
pop
decb
test
iret
popaw
or
lret
lcall
idivb
add
movsb
push
or
or
in
jmp
leave
movsl
mov
mov
xchg
pop
js
out
jns
stos
jae
cld
sub
mov
insl
and
add
pusha
mov
lods
orb
xor
jecxz
pop
sbb
cmp
add
jg
jmp
mov
jbe
stos
lods
hlt
popl
adc
xor
adc
push
xor
leave
mov
rolb
adcb
push
jns
movsl
jmp
mov
pop
inc
sbb
dec
les
data16
popa
aam
or
leave
adc
sbbb
adc
sub
mov
xor
xchg
xor
shl
and
mov
xchg
adc
lea
cmp
add
scas
mov
dec
and
pop
add
mov
pop
add
mov
sub
int3
fcomp
push
sbb
mov
adc
or
jle
mov
and
movsl
cmc
mov
xchg
dec
pushf
add
xchg
inc
outsl
dec
add
andl
int3
xchg
dec
dec
loope
or
rcll
cmp
jbe
inc
hlt
xorb
orb
jo
lahf
movsl
ret
push
mov
push
sub
arpl
push
inc
test
inc
adc
add
dec
lods
ret
out
es
dec
in
xchg
rcl
dec
pop
cmp
cmp
popf
mov
sbb
int3
data16
and
dec
icebp
mulb
and
lcall
add
mov
cltd
incl
ds
add
jns
push
sbb
cmpsl
push
jp
or
adc
xchg
movsl
xlat
inc
es
imul
je
insl
inc
pusha
sbb
call
push
mov
sbb
dec
mov
add
sbb
lahf
xchg
lea
add
mov
mov
inc
xchg
mov
call
cmp
dec
sub
jo
js
push
sub
mov
xchg
je
push
fadds
pop
inc
add
adc
inc
fs
xchg
jae
scas
dec
adc
outsb
roll
adc
add
push
std
fildll
sbb
imul
mov
stos
ficomps
outsb
lret
aad
scas
pop
cmp
and
data16
loopne
inc
sbb
adc
or
add
xor
ljmp
mov
push
push
pop
in
pop
ret
cmp
mov
mov
movsl
push
scas
adcb
fists
mov
xor
gs
imul
out
sub
test
in
repnz
mov
ret
and
mov
faddl
pop
mov
test
shlb
jge
inc
inc
repz
in
sbb
leave
in
or
inc
cmp
add
xor
and
add
lock
add
lcall
push
shrb
jmp
dec
shlb
lcall
aaa
ret
inc
mov
mov
push
add
addb
add
jne
xor
ficomps
scas
and
aam
inc
loop
adc
sub
or
inc
int
cmp
cmp
adc
add
pop
repz
xor
xor
xor
sbb
adc
xorl
mov
jns
mov
fimuls
or
xor
mov
push
add
push
shr
adc
sbb
stos
roll
iret
test
les
add
mov
xchg
mov
push
or
mov
push
int3
lcall
and
mov
cmp
or
add
mov
cmpsb
mov
xor
stos
push
sub
jmp
clc
and
jb
mov
push
add
pusha
add
sbbb
testb
fmull
adc
rcll
push
hlt
push
repz
xchg
mov
clc
decl
aam
adc
mov
inc
hlt
mov
mov
cmpsl
lcall
andb
and
sahf
sbb
rcl
lcall
dec
add
inc
inc
mov
rclb
xor
or
jecxz
lods
cli
in
in
pusha
xchg
add
xor
adc
mov
pushl
jp
roll
aad
test
aas
inc
push
add
lret
push
call
inc
addb
movl
mov
add
int
dec
push
pop
call
rcr
add
mov
or
pop
test
lcall
insl
clc
shll
push
jnp
xchg
bound
enter
push
daa
xchg
cmpsb
imul
add
pushf
aas
dec
xor
jo
jg
clc
stos
lret
andl
xor
mov
add
lret
add
std
mov
cs
inc
or
ret
outsl
mov
dec
and
loope
ds
out
inc
ret
ja
cmc
sarl
pop
xor
sub
inc
add
jg
mov
imull
pop
sbb
fcoms
hlt
cmc
cwtl
push
insb
hlt
sbb
xor
test
fldcw
hlt
fldl
cs
loopne,pn
xchg
adc
add
inc
and
push
incl
ds
test
scas
arpl
push
jmp
and
pushl
lock
stc
add
inc
jns
test
and
dec
jns
idiv
inc
incl
add
cmp
pop
add
addr16
ret
sbb
popa
jge
dec
inc
add
dec
notb
sbb
and
addr16
add
pushl
repz
add
mov
mov
xlat
mov
fidivs
sub
adc
inc
in
add
push
and
pop
repz
test
popf
insb
add
inc
jb
dec
jg
rolb
fstl
dec
bound
ja
loopne
inc
cmc
lock
sbb
loop
inc
popf
mov
or
clc
in
ret
arpl
pop
and
orb
cmp
xor
cmpsb
push
enter
int
lcall
xchg
rclb
xor
andb
in
jp
ljmp
sarl
pushf
xchg
pop
mov
jbe
clc
lcall
push
cmp
add
mov
bound
mov
pusha
into
and
call
add
test
add
sub
subl
dec
call
and
in
jmp
and
dec
xchg
mov
mov
cs
mov
stos
pop
mov
cli
mov
jbe
adc
mov
inc
push
mov
dec
adc
xchg
divl
jmp
sbb
jnp
inc
je
jne
test
dec
mov
cmc
fsts
add
jne
repz
jmp
daa
jo
xor
adc
mov
imul
push
xchg
mov
and
std
mov
mov
dec
dec
int3
add
wrmsr
cld
push
xchg
dec
movsl
jle
mov
push
inc
push
lret
lcall
xor
incl
lock
mov
es
add
cmp
aam
pop
nop
insb
lret
adc
pop
out
daa
mov
and
aaa
adc
jmp
sub
movaps
in
cmp
call
pushl
or
add
into
lods
outsl
lret
sbb
mov
out
jg
lcall
mov
scas
fs
daa
xabort
adc
adc
inc
call
push
pop
out
orl
inc
ret
or
adc
lea
rcl
lret
inc
push
jecxz
clc
add
xchg
mov
add
add
xor
xchg
pop
sub
dec
jp
add
rcr
addb
aas
outsb
cmc
daa
pop
add
pusha
lea
pop
and
cmp
bndldx
pusha
adc
or
adc
cs
sub
lahf
push
pop
mov
in
adc
pop
cld
aam
ja
jb
push
inc
leave
adc
mov
xchg
inc
out
nop
mov
mov
xchg
jno
rcrb
out
in
add
mov
inc
adc
leave
pop
rolb
repnz
push
jns
pop
cmp
jb
call
add
jno
mov
xchg
and
xchg
xlat
adc
adc
mov
fstpt
mov
dec
in
call
add
pop
ljmp
movsb
and
sti
push
scas
inc
sahf
mov
pop
push
pop
add
and
xor
xchg
call
adc
adc
in
xchg
mov
jne
incb
shll
mov
addb
adc
fldcw
mov
adc
aas
push
push
shll
stos
icebp
nop
adc
or
arpl
inc
dec
hlt
sti
sub
xchg
or
jns
sub
mov
test
add
aad
xchg
add
adc
jb
adcl
sub
cvtdq2ps
mov
sbbl
or
out
iret
test
lcall
imul
cmp
adc
xchg
adc
sahf
add
pushl
inc
push
sub
cmpsb
jl
mov
pop
dec
dec
je
add
icebp
jge
clc
pop
call
or
pop
or
inc
mov
add
icebp
mov
pusha
push
cmp
js
mov
lock
jl
decl
lcall
jecxz
jbe
mov
pusha
lods
mov
inc
push
icebp
fcoml
movsb
ds
mov
mov
arpl
jg
loop
clc
jl
adc
test
mov
maskmovq
divl
jb
sti
test
popl
mov
cli
pop
sub
call
inc
xor
icebp
jmp
pop
pop
pop
push
pusha
scas
pop
in
and
mov
sbb
mov
jl
mov
or
out
sar
lods
subl
repnz
cmp
idivb
cmpsl
stc
cmp
mov
cmp
mov
mov
or
std
jg
cmp
push
sub
xchg
lock
jg
mov
mov
jecxz
jl
jo
jae
mov
adc
decl
xor
movsb
mov
add
mov
add
imul
out
adc
pop
xor
jns
sub
es
scas
mov
jg
call
loop
aad
adc
daa
jp
sub
dec
mov
jg
jg
pop
movsb
jae
inc
stc
pushf
shlb
cmp
scas
jecxz
jo
addb
inc
jl
mov
js
cmp
js
out
enter
or
nop
icebp
or
xchg
sub
pop
cli
fistps
jl
clc
jne
lods
pop
fwait
xchg
pop
pop
mov
fistpl
inc
loopne
in
xchg
imul
aaa
std
inc
mov
js
add
add
lds
fadds
pop
int3
jecxz
jl
sub
mov
test
jnp
and
bound
mov
pop
fsts
popf
mov
dec
add
sub
cmp
dec
arpl
sbb
or
sbb
call
in
dec
dec
push
mov
fsubs
sbb
push
jne
xor
inc
jmp
jne
mov
add
fsubrs
inc
adc
or
inc
cmp
xchg
repnz
or
mov
sub
int
or
xchg
stos
call
and
add
cli
push
int3
or
jbe
lods
adc
imul
mov
xor
push
mov
sub
clc
cmpb
lods
pop
add
inc
sahf
test
fsubs
jp
push
aam
jmp
and
adc
sub
sbb
xor
mul
inc
rorb
insl
idivl
push
jo
cmc
mov
mov
or
cmp
jg
ret
add
add
inc
xchg
mov
and
cmp
test
push
orl
aas
mov
ret
nop
add
ret
lock
ss
out
push
fmul
addr16
subb
loope
test
test
jb
test
popa
icebp
adc
clc
push
hlt
fidivs
xor
pop
mov
xchg
stos
push
lds
mov
mov
and
push
out
dec
ret
push
push
mov
push
scas
push
push
cmc
test
add
ljmp
dec
js
jge
jmp
loopne
xchg
pushf
repnz
pop
xor
push
addb
mov
and
adc
adc
ljmp
scas
rcrb
mov
dec
sar
lcall
mov
mov
mov
xor
cmpsb
stc
je
dec
jge
clc
mov
push
add
inc
daa
adc
mov
icebp
rcrb
fldt
cmpsl
sbb
xchg
xchg
lods
mov
fists
stos
add
and
or
sar
sbb
fldcw
rcrb
jge
loopne
clc
cld
sub
mov
or
or
adc
pop
movsl
repz
aam
nop
out
mov
add
jg
mov
into
jg
jmp
mov
mov
pop
cltd
mov
adc
mov
cmp
mov
out
rcrb
push
fbld
mov
dec
or
call
addl
adcl
and
js,pn
sbb
pop
add
add
dec
cmovo
cltd
mov
gs
xchg
sti
jg
push
shlb
stos
jnp
add
in
mov
ret
dec
push
loop
xor
xchg
popw
cmp
movsl
stos
mov
ret
or
outsb
lods
mov
sti
pop
or
roll
push
cmp
adc
push
test
mov
sti
inc
ljmp
scas
dec
jmp
adc
testb
imul
imul
mov
es
test
scas
mov
js
decl
and
scas
lahf
xor
hlt
push
pop
adc
cmp
lock
sbb
arpl
das
hlt
mov
push
andb
pushf
lea
roll
sbb
or
mov
and
lea
popa
mov
sti
inc
add
ret
cltd
and
outsl
xlat
add
andl
sahf
mov
lahf
push
xchg
or
xor
nop
hlt
or
pop
push
popa
stos
xor
fisttps
inc
rclb
sbb
mov
add
das
subb
cwtl
add
push
pop
and
jg
test
inc
jbe
mov
cwtl
mov
pop
aas
std
mov
or
stc
not
mov
test
mov
cmp
aam
and
inc
xor
add
out
push
inc
popl
or
shrl
inc
or
adc
mov
and
add
xchg
loope
or
or
cmp
and
mov
pop
sub
lock
int3
icebp
sbb
push
cmp
ljmp
push
xor
popaw
sbb
mov
mov
adc
jmp
or
pusha
fs
jno
sbb
popw
cmp
sub
pop
test
xchg
mov
mov
mov
push
jle
in
pop
repz
mov
pop
add
mov
jp
pop
jp
or
shrl
add
push
hlt
add
addr16
int
cmpsb
push
insl
or
push
push
mov
dec
jg
pop
nop
dec
cwtl
pop
mov
addr16
and
jns
jecxz
jp
aaa
jle
clc
out
pop
adc
xchg
fs
nop
xchg
mov
cmp
push
mov
push
pop
loop
inc
incl
or
mov
mov
leave
test
outsl
je
cmp
stc
test
popf
add
pop
dec
xchg
ljmp
rcl
in
imulb
add
pop
ljmp
repz
sub
sbbl
mov
pushf
pusha
arpl
popa
cmpsb
mov
dec
shlb
test
inc
jge
mov
xchg
arpl
cmp
call
incl
test
pop
mov
mov
dec
mov
xchg
pop
or
scas
or
jo
and
jle
out
ror
dec
jo
mov
jle
fmul
inc
and
decb
fisubrl
dec
es
daa
dec
sahf
mov
shll
inc
pop
mov
dec
push
sbb
inc
mov
or
fidivrl
push
cli
xchg
cmp
negl
sub
movsb
jne
andl
lcall
pushl
add
add
cs
inc
xchg
dec
jecxz
push
pop
popf
add
adc
rcrl
ljmp
or
enterw
fdivp
insb
lcall
add
subl
or
sub
sbb
fidivl
stos
xor
loopne
inc
cmp
mov
bound
movsl
jp
cli
pop
xor
je
pop
jbe
mov
dec
outsb
jns
sub
loop
xor
fldl
mov
nop
pop
js
dec
xchg
xchg
sbb
out
add
out
cli
mov
or
dec
push
dec
scas
push
mov
cmp
jg
fcomip
sub
or
cmp
adcb
mov
test
add
std
jae
pop
pop
cli
jg
enter
scas
cmp
out
popf
cld
add
pop
jge
lock
mov
mov
adc
lea
movsl
decl
and
mov
sbb
xchg
lcall
je
jle
lret
mov
test
loope
push
jno
lret
cld
and
ret
clc
and
in
shrl
outsl
sbb
mov
adc
xchg
scas
cmp
mov
dec
mov
jg
add
int
push
mov
jle
sbb
mov
dec
outsl
cmp
aas
jg
sbb
push
jmp
adc
xor
loopne
pop
std
pushl
fadds
push
movsl
cmp
stos
popf
dec
dec
popa
test
insl
jmp
shll
push
mov
test
cmpsl
sub
imul
lds
jge
jnp
hlt
aaa
mov
and
push
add
outsb
jne
ret
mov
dec
dec
outsb
call
int3
clc
call
decb
dec
test
xor
or
lret
add
adc
sbbl
sub
cs
adc
clc
add
aad
dec
leave
xor
outsl
cld
sbb
push
aaa
std
insl
jb
popf
ljmp
sub
pop
loopne
and
arpl
decl
leave
mov
add
in
add
mov
rcrl
mov
pop
lds
stos
mov
xchg
adc
out
mov
in
sub
shlb
pop
loope
mov
mov
add
push
sbb
rorb
xor
mov
fsubp
incl
fsubr
ffreep
pushf
mov
push
je
xchg
mov
and
pop
cwtl
leave
loop
stos
push
pop
aaa
loopne
in
adc
dec
test
and
jge
and
das
sbb
sbb
xor
xor
jg
inc
insb
mov
call
loop
pop
outsl
add
cwtl
mov
pop
clc
sbb
inc
jecxz
adc
jo
int3
ss
cli
outsl
or
add
test
cmp
mov
mov
sbb
jecxz
and
or
fcompl
mov
aas
push
or
lds
xor
pop
add
add
push
icebp
sub
pop
sbb
repnz
push
add
je
add
imul
mov
mov
jnp
inc
scas
andb
mov
out
add
out
sbb
stc
cmp
dec
rcrb
dec
out
sbb
jg
lock
push
sbb
fistl
or
addl
and
push
xchg
scas
mov
lret
xor
push
xor
or
jns
and
clc
scas
push
jge
dec
mov
xchg
adc
mov
push
lds
xorb
iret
mov
cmpsb
xor
scas
jnp
mov
and
leave
mov
lods
ljmp
jo
pop
jle
sbb
cli
and
and
cmp
dec
hlt
push
js
and
fnstsw
mov
xchg
sbb
fsubl
push
mov
mov
les
xlat
aam
lahf
and
push
les
push
int3
movsl
nop
and
fists
ljmp
add
or
hlt
int
int3
inc
jg
push
mov
jle
pop
ljmp
fisubrl
jne
add
mov
sub
adc
pop
or
ljmp
hlt
pop
sbb
out
mov
mov
call
add
xchg
pop
adc
and
lea
push
insl
aad
pop
pop
lock
hlt
xchg
mov
inc
cmp
js
jp
in
xor
dec
idivb
in
inc
dec
adc
sahf
mov
sbb
mov
les
ss
incl
mov
cmp
neg
mov
add
popa
leave
std
lods
js
jmp
shll
pop
pusha
inc
ljmp
mov
mov
mov
das
ds
loope
adc
add
aam
jbe
call
push
in
je
insl
shlb
incb
les
xchg
push
popa
and
imul
sbb
andl
mov
push
or
icebp
lcall
inc
js
in
call
nop
inc
xchg
ljmp
inc
les
pop
mov
lret
jge
mov
or
scas
mov
jno
xor
das
scas
mov
insl
mov
sub
dec
outsl
cmp
jg
fcmovb
or
fsub
es
enter
and
push
add
dec
lds
push
jg
dec
fs
or
cli
mov
push
cmc
pusha
jmp
xchg
aam
daa
shrb
lcall
loopne
std
fbld
or
inc
andb
jns
add
jg
and
xor
shrb
xchg
scas
push
jecxz
shrb
jmp
iret
adc
mov
out
and
aad
cmpsb
add
test
fstpt
popf
mov
pushf
sub
adcb
jns
mov
adc
push
mov
cld
mov
call
arpl
jmp
mov
and
sbb
aam
ljmp
arpl
into
adc
sub
and
test
mov
adc
add
subl
hlt
scas
adc
test
cmpl
xchg
test
push
icebp
aas
adc
xchg
outsb
push
pop
js
inc
mov
pop
in
scas
ret
inc
ljmp
loopne
jb
push
shll
xor
in
sub
jg
dec
in
cmpsb
test
jb
in
scas
scas
das
lds
cld
ror
or
mov
test
inc
mov
or
sub
or
dec
jne
push
sub
sub
jp
lods
mov
movsl
popa
xor
lods
cmc
pop
or
jo
pop
jmp
mov
test
std
xor
mov
out
rolb
fwait
ljmp
mov
scas
adc
gs
xor
pop
add
jns
mov
inc
sub
clc
dec
jns
aad
subl
jmp
cltd
mov
jo
repnz
push
sub
mov
ffreep
sbb
ljmp
inc
fidivrs
push
dec
jbe
push
movsl
inc
mov
pushl
add
xchg
dec
iret
dec
insb
test
std
pushf
ja
inc
adc
icebp
xor
mov
icebp
das
sbb
ficomps
mov
subl
pop
add
or
fldl
mov
call
movsb
or
mov
imul
sub
jp
call
inc
add
pushf
inc
mov
insb
fs
and
fbld
pop
stos
add
decl
fidivrl
fimuls
popa
dec
movsl
push
faddl
js
out
pusha
es
test
dec
std
pushf
ficomps
das
cld
push
outsl
jle
push
mov
shrb
sbb
hlt
jno
cs
sub
in
outsl
icebp
push
mov
dec
je
sbb
sbb
sbb
pop
cmp
aad
lcall
fisubs
les
out
mov
cmpsl
mov
dec
out
shl
fmull
mov
popa
xlat
jne
push
jmp
jle
mov
add
or
mov
mov
mov
xlat
cmp
call
sarl
inc
mov
adc
cmp
nop
lods
jne
rclw
pop
sbb
mov
sbb
pushf
mov
ljmp
cmp
sbb
push
push
ss
orb
mov
out
dec
aad
imul
mov
rcll
or
cwtl
pop
cltd
add
cld
outsb
repz
and
outsl
ljmp
sahf
in
jo
xchg
sbb
inc
orl
stos
pop
fiadds
lahf
inc
mov
fs
js
and
mov
xor
sub
enter
push
je
dec
cmp
mov
xchg
add
and
lods
mov
mov
and
stos
call
pop
lods
jp
pop
and
loopne
push
cmp
outsl
decl
negl
stos
out
mov
loope
cmpb
fldt
loopne
mov
std
movsb
sub
or
pop
test
shr
idiv
movsl
cmpsl
push
jge
sahf
daa
adc
jb
pop
or
mov
lea
addr16
addr16
jmp
and
pushf
push
aad
test
mov
jb
test
push
pusha
stos
repnz
mov
pop
or
pop
jns
flds
adc
int3
shlb
sbb
xchg
dec
mov
loopne
call
add
enter
and
stos
pop
adc
xchg
arpl
dec
lcall
xchg
mov
in
xchg
movsl
ljmp
mov
push
ss
xchg
pop
clc
mov
call
imul
jl
int
ret
mov
dec
jl
cli
and
cld
mov
ret
shl
outsb
adc
mov
inc
inc
adc
fs
add
dec
mov
pop
add
xchg
xchg
mov
dec
test
daa
leave
xchg
pop
in
movsb
mov
cmp
jmp
sarb
push
pop
sub
scas
pop
ficomps
lods
pop
outsb
cmp
loopne
push
mov
adc
adc
sub
loopne
loop
add
fs
or
or
and
not
or
xchg
push
fs
orb
lahf
fisttps
sbb
push
fiaddl
pusha
mov
clc
adc
push
fs
mov
aaa
test
loop
fcmove
or
andb
jo
or
inc
sbb
jns
sarb
add
push
and
inc
cwtl
ret
mov
adc
jae
lret
inc
xchg
loopne
pop
mov
jbe
add
in
and
rcl
fwait
inc
cmp
inc
addb
mov
add
add
sub
mov
adc
subb
aas
stos
adc
or
hlt
add
push
fdivrl
sub
mov
and
mov
orb
shrb
iret
or
fsubrs
xchg
sbb
cmp
and
sub
bound
sbb
xor
mov
lcall
nop
or
dec
testl
sub
add
xor
sub
mov
mov
repz
mov
fmul
repz
int
cmc
daa
cld
xchg
mov
pop
xorb
cmp
inc
cwtl
adc
sbbl
das
adc
adc
add
addb
mov
out
int
inc
pop
ret
fisttpll
int3
lods
in
loope
fs
xchg
inc
ret
mov
xchg
addl
push
push
xor
enter
popf
inc
lods
andb
xor
sub
xchg
or
push
pop
push
call
or
xchg
sub
sub
lret
push
lods
jmp
dec
cmpb
clc
mov
ret
es
mov
or
jecxz
cli
aam
call
or
or
dec
ret
mov
inc
inc
adc
mov
test
lods
nop
add
push
loope
fsubs
mov
inc
fnstcw
pop
repz
aaa
mov
fiadds
cmpb
int
ret
adc
push
pusha
loop
fucomip
and
add
psubb
add
les
ljmp
sub
pop
cmp
xchg
jp
mov
ss
ds
jbe
repz
push
adc
das
push
push
popa
sub
push
sahf
sbbb
mov
in
mov
push
xor
imul
pop
shr
or
pop
or
cmp
loop
fimull
push
loop
mov
fsubrs
js
xor
xor
mov
sbb
pop
clc
adc
fldenv
in
mov
sub
ljmp
inc
mov
into
cwtl
mov
jbe
aaa
ljmp
shll
add
fimuls
adc
inc
in
sub
mov
dec
js
or
data16
stos
jae
fcomip
fsubrl
inc
pop
push
pop
data16
inc
into
adc
pop
out
test
and
pop
ljmp
push
loopne
cmp
mov
mov
repnz
ds
sbb
fisubs
pop
sub
insb
ss
push
mov
in
mov
dec
inc
sbb
jbe
stc
and
add
fwait
rcll
inc
xor
xor
dec
adc
dec
xor
or
cli
nop
adc
jecxz
push
out
sub
mov
push
insb
mov
das
hlt
jg
inc
inc
fucomp
stc
in
mov
jmp
sub
add
hlt
push
std
repnz
fcmovu
leave
jmp
mov
das
ret
data16
js
pop
icebp
scas
adc
jns
dec
dec
test
inc
jl
add
mov
inc
imul
mov
test
nop
sbbl
pop
loop
inc
pop
push
insl
sub
mov
lcall
loop
xchg
enter
mov
sub
pop
call
jmp
dec
xchg
mov
test
xor
add
call
xchg
mov
or
xor
sbb
push
rcll
sar
das
pop
jl
mov
push
jns
push
sti
xor
or
dec
mov
xor
mov
shl
lds
test
rclb
xchg
inc
cmp
mov
or
dec
ret
inc
inc
cmp
pop
repz
hlt
xchg
fnstenv
mov
push
test
and
std
push
add
push
out
and
lcall
inc
or
sub
mov
adc
add
out
inc
lods
fdiv
jge
sti
adc
mov
sub
sbb
jle
filds
jb
lea
test
incl
repnz
add
push
lcall
pmullw
add
mov
cld
jl
cmc
leave
sarl
mov
stc
out
sub
or
cmp
out
loop
je
add
gs
dec
add
xchg
scas
sub
mov
pushl
out
movsb
push
mov
mov
or
nop
mov
loopne
mov
dec
add
mov
pushf
sbbl
addr16
sub
rorw
pop
mov
pop
rclb
adc
les
mov
stos
xor
jb
loope
neg
pop
xor
daa
pusha
mov
int3
ljmp
jl
cmc
add
jmp
bound
add
jbe
mov
in
imul
lods
outsl
scas
inc
sti
outsb
int3
xor
sbb
jo
sbb
mov
lea
pop
pushf
dec
cmp
mov
das
add
push
add
dec
inc
mov
stc
mov
ljmp
mov
nop
mov
and
lods
add
push
in
loope
outsl
adc
sbb
je
mov
mov
push
cs
add
je
imul
and
ret
insb
mov
mov
and
popf
lret
jb
inc
or
push
ljmp
jmp
sub
scas
and
xchg
jmp
movsl
mov
push
cmp
rcll
inc
xor
pop
das
in
jmp
add
in
ret
sti
sub
jno
pusha
ds
insl
daa
xor
adc
outsl
hlt
jmp
repnz
mov
jg
lret
xchg
add
rclb
inc
sarl
icebp
dec
mov
movhps
cmpsb
xor
mov
ljmp
fists
and
add
pop
jecxz
stos
rclb
testb
jmp
inc
and
fcoms
mov
ljmp
insl
cmpsl
stos
pop
mov
addr16
movsb
pushf
mov
jp
or
pushl
sub
dec
sub
or
jb
push
add
mov
lahf
outsb
dec
mov
adc
jbe
sbbl
mov
std
leave
sbbb
imul
loop
cmpsl
loope
inc
adc
arpl
jg
loopne
fsubs
jecxz
sub
inc
cmpsb
and
push
mov
sti
lea
movl
rclb
adc
in
mov
and
mov
leave
jge
xchg
pop
mov
xor
in
pop
das
insl
clc
pop
jmp
fsts
test
jg
push
scas
ja
cli
or
jg
fwait
pop
int3
xchg
fstps
ja
xchg
out
int
lcall
scas
pop
xchg
xor
mov
and
or
sub
ss
push
outsl
daa
adc
adc
loop
test
in
pop
fsubrl
mov
add
mov
xchg
or
push
sub
jo
xchg
icebp
fmulp
xchg
stos
and
cmp
and
jle
repz
mov
adc
test
and
mov
fbld
sbb
pop
cltd
and
mov
inc
add
cwtl
dec
push
pushf
sub
adc
cwtl
negb
jo
lods
jl
test
add
fs
or
test
mov
adc
xchg
sbb
inc
jne
inc
xor
adc
add
mov
add
add
loop
pop
jns
mov
and
mov
outsb
inc
pop
add
leave
mov
insb
xor
es
ja
mov
mov
ljmp
push
inc
push
fimuls
push
iret
mov
mov
mov
adc
inc
push
dec
adc
sbb
sbb
inc
mov
pop
int3
push
add
sti
movsl
cld
call
test
xchg
adc
sbb
jecxz
dec
cld
push
cmc
sbb
mov
test
sbb
or
lret
pusha
mov
or
jp
mov
rclb
pop
lock
adc
mov
ljmp
jo
and
add
aas
mov
cld
sbb
pop
pushf
or
inc
mov
mov
filds
adc
test
xor
lcall
lock
mov
shrb
adc
iret
lds
mov
or
push
sbb
add
mov
aaa
out
add
cmpb
icebp
adc
cmp
jge
mov
push
or
subb
addr16
mov
pop
sub
inc
pop
inc
mov
decb
sbb
xchg
mov
dec
test
sti
adc
and
addr16
sbb
and
xor
stos
rcr
and
adc
pop
pop
rcrb
int3
imul
fsubs
jg
dec
test
and
fsubs
in
int
ficoms
pushf
jmp
stos
pusha
xor
sub
addb
testb
repz
pop
xor
adc
rol
pop
ret
mov
imul
add
aad
xchg
jg
dec
xor
inc
into
dec
pop
add
das
adc
sub
add
dec
cmovge
push
pop
scas
inc
sub
es
push
mov
push
pop
addr16
mov
mov
js
inc
or
sbb
fcmovnu
jae
cmpsl
pop
ret
ret
pop
movsl
lods
adc
push
xor
sbb
mov
fimuls
mov
xchg
push
or
mov
clc
aam
clc
ljmp
pushf
aaa
jbe
pop
and
push
icebp
and
inc
in
scas
jo
pusha
sbb
adc
mov
stos
mov
or
mov
mov
push
icebp
div
or
je
lret
jecxz
ret
cmp
fwait
xchg
stos
mov
mov
inc
mov
pop
cli
incl
jmp
lahf
sarb
push
pop
sahf
aaa
jmp
add
add
push
mov
and
jno
testl
das
mov
inc
je
sti
out
jae
dec
mov
das
cld
popa
push
sahf
mov
in
and
xchg
mov
adc
ljmp
test
loope
sub
fadds
mov
mov
dec
shlb
call
sbb
arpl
sbb
and
adc
pop
je
lds
clc
decl
icebp
shll
cmpsl
stc
sbb
or
lods
popa
push
push
sub
fildl
aad
jb
fs
sbb
lcall
cld
pop
clc
out
push
scas
test
sbb
dec
adc
aas
imul
das
and
cmp
jb
or
icebp
jmp
movsl
jns
mov
push
xchg
jmp
ret
xlat
mov
add
fisttps
or
lret
mov
iret
pop
push
xchg
mov
sti
dec
push
dec
and
adc
das
std
call
pop
xor
and
cld
inc
sbb
cs
sub
sbb
addl
mov
mov
mov
lret
push
std
pop
push
push
xchg
or
dec
mov
mov
nop
pop
adc
mov
jmp
sti
jbe
or
data16
frstor
pusha
or
outsl
icebp
lcall
mov
pop
hlt
sub
xor
add
jmp
imul
rcrl
jns
inc
push
fistpl
or
cmp
jg
xchg
fsubrs
mov
fildll
rorl
pop
in
loopne
stos
xor
add
clc
test
sub
fistps
subb
std
das
dec
inc
jne
xchg
mov
sbb
add
int3
add
cmp
cmp
and
out
lds
mov
xchg
addr16
test
jo
lahf
or
inc
push
mov
ret
adc
mov
cwtl
fisubs
pop
daa
cmp
xchg
sbb
sbb
or
adc
or
jbe
push
ljmp
or
adc
stos
dec
pushf
push
mov
fsubr
adcb
sbb
xchg
ret
jae
mov
rolb
add
mov
shlb
sbb
mov
adc
mov
dec
pop
add
mov
sbb
pusha
pop
cmp
push
mov
int
fiadds
add
add
mov
fildll
pop
xchg
adc
rorl
lods
and
sub
add
mov
inc
ss
sub
inc
out
cmp
test
mov
or
arpl
jb
pop
fmull
cs
add
insb
in
dec
add
movsb
test
cmp
adc
das
mov
xchg
add
cmpsl
cmp
add
pop
mov
mov
sbb
jp
cld
mov
cmc
or
loop
pop
or
inc
dec
daa
je
push
xor
loop
ret
jnp
mov
call
out
push
adc
pusha
xchg
jmp
cmp
add
sbb
mov
push
adc
mov
cmp
mov
loop
xor
stos
and
push
adc
loop
int3
clc
gs
sbb
shlb
loop
inc
or
rorb
aam
push
sbb
test
push
fcoms
fmuls
cwtl
icebp
ret
test
sub
lcall
clc
stos
dec
icebp
test
mov
cld
pop
push
fidivl
adc
call
dec
mov
xchg
je
push
jo
and
xor
outsl
add
movsb
loope
push
mov
xor
cmp
jb
push
stos
and
add
or
pop
pop
mov
xchg
or
and
loop
sub
int
adc
shll
data16
fisttps
cmpxchg
jmp
test
je
lret
rcrb
mov
insb
js
add
sti
or
cld
jmp
sbbl
mov
fmuls
push
shll
and
mov
sub
dec
cmp
inc
adc
and
mov
clc
adc
pop
add
pop
int3
or
sti
sub
add
push
mov
pop
mov
mov
sbb
push
icebp
clc
fsubr
lock
push
bound
lret
sub
lret
lds
stos
fldt
inc
jp
and
xchg
push
xor
add
ficompl
shlb
mull
pop
mov
and
cmp
jge
mov
dec
enter
ja
cld
or
add
xor
rcrl
xchg
cmp
cltd
shl
dec
mov
add
fidivrl
int3
pop
mov
in
dec
add
pop
and
pop
add
and
and
daa
push
je
fiaddl
xchg
inc
mov
push
add
icebp
xchg
outsb
pop
aam
sarb
mov
fdivs
and
xchg
call
arpl
daa
sbb
xchg
jnp
xor
nop
aaa
inc
addb
outsl
test
mov
addb
dec
aad
jbe
dec
inc
pushf
mov
pop
lret
mov
daa
test
add
in
mov
push
inc
push
push
scas
push
adc
push
lods
jo
push
stc
ss
mov
fisubrl
aam
test
jo
xchg
ss
dec
and
jge
inc
wrmsr
cmp
shll
mov
inc
aam
stos
hlt
xor
in
dec
adcb
into
cmpsb
sbb
out
add
adc
mov
add
xchg
add
inc
mov
cltd
lods
fwait
movsb
add
sub
sbb
stos
mov
adc
rclb
filds
xlat
jge
stc
xchg
pop
mov
in
cltd
fisttps
or
mov
cmp
adc
mov
or
adcl
sub
adc
sbbl
pusha
testl
jno
mov
sub
xorl
push
rolb
ja
lock
sub
mov
adc
loope
movsb
inc
sub
mov
push
in
mov
pop
dec
into
cli
fistps
push
cltd
cmpl
cmp
adc
mov
add
lock
stos
and
scas
xchg
jns
mov
ljmp
js
mov
cmp
addr16
adc
adc
or
add
add
dec
inc
add
push
in
pop
push
inc
mov
aam
out
mov
dec
iret
and
dec
xor
mov
loope,pn
pop
loop
out
je
jae
xor
push
dec
pop
mov
popf
pop
repz
jecxz
stos
in
jnp
loope
call
xor
inc
hlt
add
dec
add
leave
adc
sub
jne
shll
int3
mov
pop
lods
add
dec
out
dec
cli
mov
rclb
adc
push
mov
rorb
fcmove
mov
andb
pop
bound
add
scas
ljmp
or
add
movsb
ljmp
push
shlb
cld
mov
imull
enter
sbb
add
and
cmpsb
jno
xor
sub
test
or
rcrb
idivb
bound
sub
fwait
inc
inc
mov
mov
lods
fsubrs
adc
adc
sub
cmp
fiadds
adc
add
pusha
or
shll
std
add
dec
add
dec
xchg
inc
sbb
pop
fsubl
inc
jl
imul
push
xor
in
mov
jae
pop
inc
dec
jle
test
push
int3
fsubs
mov
jp
or
rolb
cs
adc
in
mov
les
mov
sub
sub
lods
push
push
cwtl
divb
loop
outsl
add
dec
add
dec
inc
dec
push
and
ret
dec
and
test
xor
pop
call
mov
fdivrs
xchg
and
push
xchg
cmp
sahf
push
cmpsb
xorb
das
outsb
adc
inc
adc
test
sub
xchg
repz
cmp
ret
int
repz
mov
mov
rclb
shll
inc
aad
stos
cmp
shrb
adc
fcomps
mov
ret
clc
mull
and
js
push
and
cmp
mov
sub
xchg
mov
mov
mov
je
add
ret
xchg
outsl
daa
add
push
add
andl
jp
call
jo
jp
nop
xchg
lods
jo
addb
jg
xor
inc
xgetbv
movsl
nop
aad
dec
arpl
inc
mov
xchg
sbb
outsl
fwait
movsl
rolb
pop
cld
adc
decl
inc
or
les
hlt
incb
adc
ret
and
jnp
ror
sbbb
popf
ror
jmp
push
dec
cmc
ljmp
inc
xchg
icebp
test
js
lds
push
sub
ljmp
mov
ret
mov
jg
inc
cs
fisubrs
mov
jnp
aas
add
cli
add
test
inc
jmp
lods
lahf
sub
dec
adc
jg
popf
fs
invlpg
mov
lahf
add
mov
sub
cmp
pushf
sar
call
movsl
and
add
out
jge
pop
mov
ret
push
lahf
xchg
inc
stos
inc
jg
test
jnp
pop
and
jmp
out
add
push
std
call
into
lcall
sbbb
mov
dec
mov
ljmp
lcall
fxch
insb
cmpl
push
jb
xorb
call
jg
cmc
add
jle
pop
cmpsb
adc
test
mov
jp
xlat
or
popa
testb
fwait
or
loopne
inc
lock
jg
mov
aad
sbb
ss
jmp
call
inc
stos
jg
pop
test
or
and
mov
add
mov
imul
pop
fisubl
dec
add
cmp
push
inc
cmp
and
xchg
test
pop
mov
les
xchg
repnz
scas
fsubs
decl
add
adc
inc
push
mov
lea
pushf
int
xchg
shl
mov
cld
push
cmp
cmpsb
scas
add
xlat
stc
jo
imul
sub
adc
mov
data16
pop
imul
sbb
inc
pop
je
xor
sahf
jne
push
test
pop
pop
scas
loope
inc
in
cmc
add
into
js
jmp
and
int
mov
lods
loope
push
or
inc
xor
sub
jmp
scas
xor
push
push
lods
lods
outsl
cltd
movsl
add
sbb
adcb
jo
and
lock
loopne
rolb
push
stc
sub
add
xchg
mov
adc
add
pushf
push
enter
adc
push
add
outsb
cmp
stos
mov
add
mov
push
add
or
add
inc
mov
out
and
sub
rorl
fimull
test
lods
stos
outsb
jns
xor
xchg
push
fildll
lods
insb
jne
push
sub
cwtl
push
jg
or
out
cwtl
and
ljmp
sub
icebp
mov
sbb
movsb
subb
xchg
dec
push
test
mov
lock
cwtl
gs
add
xchg
cwtl
push
add
sarl
push
loopne
adc
test
ds
jl
ja
mov
jo
daa
xchg
jle
mov
pop
cmp
or
mov
loopne
mov
fisubl
pop
movsb
mov
xchg
mov
and
imul
loop
mov
les
adc
mov
push
pop
adc
test
hlt
ret
daa
test
fidivs
or
sub
xchg
cmp
aaa
ss
insb
insb
cmp
dec
decl
push
and
js
add
cs
adc
or
add
movsl
sub
sarl
xor
xchg
mov
and
pop
or
sbb
pusha
clc
or
repz
roll
mov
repz
stos
and
add
fbld
mov
cmc
add
xchg
ss
mov
adcb
test
orb
cmp
or
add
rorl
jno
fcmovbe
std
xor
js
sbb
adc
inc
sahf
add
xchg
mov
push
mov
push
cmpsl
or
test
xadd
or
inc
outsb
cmpsb
adc
filds
sbb
cmpsl
inc
mov
pop
add
mov
sbb
fidivs
sbb
pop
test
fstp
movsb
sub
dec
cmp
inc
add
push
ljmp
hlt
pop
mov
cs
push
push
push
sbb
add
xor
inc
in
lahf
jle
and
mov
dec
aas
push
pop
es
dec
jno
hlt
sbb
stos
cmp
ljmp
mov
scas
xchg
nop
mov
stos
add
jmp
mov
sbb
cmpsb
sbb
add
sbb
mov
sbb
and
decl
mov
call
inc
xchg
sub
mov
add
adc
nop
mov
in
sbb
sub
xor
enter
inc
xor
jne
inc
les
outsl
lock
and
sub
imul
pop
push
add
call
rorl
adc
pop
xchg
mov
lcall
std
call
shll
mov
xor
idiv
cltd
mov
mov
pop
stos
lea
rcll
call
mov
mov
les
cmpsb
xchg
mov
add
xchg
xlat
push
and
jb
adc
xor
ret
inc
or
or
add
add
rcrb
or
sub
in
jmp
test
fisubl
fsubrs
out
ljmp
inc
xchg
mov
loopne
pushl
cmp
or
cmp
loope
xor
push
dec
mov
out
jns
add
xchg
pop
inc
not
pop
aaa
jp
jg
push
jnp
mulb
xor
dec
inc
movsl
or
arpl
mov
jmp
roll
in
lret
repz
add
iret
out
xor
insb
mov
roll
push
inc
call
adc
dec
add
xchg
pop
clc
or
pop
mov
call
or
ja
fdivp
sub
pushf
sub
cmp
inc
xchg
jle
faddl
mov
and
jne
or
sub
pop
add
and
cld
incl
xor
es
add
jle
pop
ds
jne
popf
sti
add
and
adc
lock
and
pop
sbb
inc
cld
rorl
icebp
jl
rcll
mov
inc
dec
aad
mov
xchg
stos
data16
mov
addl
hlt
fiadds
jbe
fiaddl
divl
out
adc
or
in
sbb
ss
sarb
or
fistps
adc
mov
sbb
pop
fcoms
mov
pop
add
mov
xchg
mov
int3
gs
xlat
sbb
dec
xor
out
mov
mov
add
ljmp
xchg
xorb
ljmp
push
sub
sub
test
scas
or
xchg
js
les
add
jo
add
subb
or
inc
and
jg
in
jp
xlat
and
outsl
mov
inc
je
add
insb
sbb
mov
mov
jnp
pusha
jmp
loop
adc
fcmovnb
mov
nop
dec
in
addl
fs
mov
inc
inc
add
cmp
lcall
cmpsl
sbb
sbb
adc
mov
jl
xor
aaa
lds
clc
leave
dec
outsb
xlat
repnz
inc
icebp
or
lcall
dec
jecxz
fwait
adc
xchg
dec
cmpsl
xchg
add
jmp
adc
out
cwtl
nop
ss
leave
inc
jl
ljmp
dec
mov
xchg
add
mov
inc
add
mov
stc
sbb
mov
fmuls
lea
fldenv
andl
clc
ficoml
rolb
mov
cli
mov
div
cld
pop
push
add
popa
push
dec
cmp
and
inc
sub
ds
rcl
mov
stos
bound
push
andl
or
adc
mov
xor
xchg
js
mov
js
das
push
adc
and
add
adc
in
push
push
jl
or
in
insb
mov
insb
mov
cs
xchg
out
adc
xor
jnp
add
arpl
lret
mov
popf
outsb
test
pop
jecxz
sub
mov
sti
rcl
mov
lock
in
sbb
into
inc
addl
push
dec
adc
test
cmp
mov
imul
cmp
push
ja
push
pop
and
fimull
cmp
fs
daa
loop
rcrl
inc
stc
lret
xchg
pop
dec
add
inc
add
ficompl
or
movsl
daa
push
sub
inc
subb
and
sbb
push
mov
mov
push
push
cwtl
roll
and
es
add
ret
rorl
add
cmp
add
mov
or
hlt
push
push
dec
jb
inc
mov
sbb
jg
or
dec
and
insb
repnz
ja
adc
loope
jnp
ss
cmpsl
or
cmp
add
leave
mov
pop
ja
iret
adc
in
nop
test
jb
addb
pusha
popf
and
outsl
xchg
bound
insb
pop
sbb
lds
push
je
arpl
add
adc
jg
mov
inc
or
or
aas
add
movsb
mov
lods
sbb
xchg
add
sub
sub
mov
das
mov
test
add
pop
orl
adc
push
std
dec
adc
comiss
mov
push
add
pushf
sbbb
push
icebp
sub
sbb
inc
adc
cmp
ja
loopne
mov
mov
push
xchg
lret
stc
mov
mov
adc
test
mov
mov
sub
and
ficomps
loope
sub
in
push
cmp
and
cmp
sbb
fidivrs
mov
inc
xor
sti
fsubrl
ret
sub
mov
popf
loope
xchg
push
mov
rcrl
and
fidivrl
ja
repz
adc
rolb
addb
call
pop
cmp
test
push
je
xor
dec
mov
or
or
pmuludq
push
push
mov
xor
pusha
push
and
inc
dec
aas
xor
loopne
rclb
inc
mov
addr16
jg
pop
aam
sub
fdivs
mov
xor
adc
clc
add
mov
gs
fdivrs
add
fwait
in
add
stos
inc
mov
cltd
cmp
or
pop
mov
mov
xor
xchg
push
ja
shr
push
inc
pop
dec
pop
cwtl
dec
cld
decl
int3
inc
inc
cmpsl
sub
sahf
and
jae
push
xchg
scas
jp
mov
push
mov
rorl
inc
mov
loop
int
dec
mov
lret
or
aas
pop
push
sbb
pop
call
dec
movsl
xor
and
lcall
and
mov
mov
imul
xor
pcmpgtd
test
add
out
sub
and
and
movsb
pop
lods
sub
push
cld
jecxz
stc
xchg
scas
jno
pusha
push
psubq
xchg
das
xor
inc
inc
or
adc
dec
mov
sbb
in
fadds
lcall
push
test
push
dec
dec
in
adc
int
xchg
out
add
and
inc
xor
adc
fidivl
sbb
loope
inc
aam
push
adc
lods
sbb
jo,pn
xor
popa
add
mov
xor
loopne
inc
xchg
jmp
inc
data16
test
add
sbb
out
in
pop
popa
sbb
rcrl
add
xchg
mov
dec
lods
add
cmpsl
xchg
jns
adc
cmp
or
int3
cltd
and
call
adc
cmpsb
dec
roll
in
pop
xchg
imul
and
mov
jbe
lods
inc
push
xchg
ret
jl
pop
lods
push
repnz
jns
inc
outsb
inc
lahf
jmp
mov
inc
daa
sub
fwait
mov
test
js
mov
movsb
xor
adc
push
int
int3
add
pop
xchg
cwtl
add
scas
and
les
and
pusha
out
mov
jl
mov
or
push
xor
jns
push
lock
in
inc
lock
add
dec
cwtl
add
lds
add
mov
mov
inc
hlt
pop
div
pusha
pop
pushf
jb
xor
or
outsb
test
xlat
inc
lock
fsubrl
adc
push
lods
daa
in
pop
adc
hlt
sub
add
js
mov
add
add
hlt
ficompl
test
jns
sub
stos
mov
adc
jae
push
push
mov
mov
test
mov
jmp
bound
or
ljmp
ds
mov
ss
mov
push
jge
inc
sub
call
push
sub
mov
faddl
push
je
stos
and
push
popf
ret
imul
fldenv
push
add
inc
roll
jle
test
sub
add
inc
jg
fsubr
xor
lea
or
xor
add
pop
aad
add
ss
int3
call
pop
cmp
lret
gs
adc
shll
push
jmp
fcoml
push
enter
cmpsb
dec
adc
adc
test
sub
popa
das
stos
lret
sub
push
and
imul
lahf
mov
movsb
das
push
int3
flds
cmp
xor
mov
push
push
es
lods
mov
fstps
or
add
sub
imul
mov
lret
mov
int
adc
popa
pop
or
outsb
push
lock
and
pusha
mov
lods
or
mov
imul
add
hlt
push
dec
popf
aad
pop
ficoml
fcomip
push
mov
sub
pop
push
xor
shl
stos
cli
mov
inc
aam
mov
push
je
inc
sbb
loopne
xchg
mov
sbb
inc
jl
daa
inc
inc
jae
add
inc
and
rorb
mov
mov
movsb
pusha
adc
xor
pop
mov
cmp
sub
dec
mov
push
dec
xchg
or
sub
adc
lret
sub
inc
xlat
sub
fs
bound
jnp
rolb
mov
pop
or
fistpll
sarl
xor
repz
mov
cmp
and
push
adc
addr16
adc
adc
push
or
jo
mov
outsl
pushf
fimull
add
data16
and
cmp
stos
loop
dec
xor
ljmp
xor
xor
out
xor
outsl
jecxz
and
dec
push
pop
data16
ret
test
sahf
stos
movsl
inc
cmp
sub
lods
sub
orl
add
ret
inc
sbb
ss
sbb
sub
stos
sti
sbb
sub
jle
js
mov
mov
mov
testb
leave
testl
popa
adc
call
add
or
jmp
jp
add
clc
mov
add
cli
pop
dec
mov
push
leave
and
push
cmp
icebp
push
aam
clc
lock
push
xor
cmc
add
data16
mov
cmp
fisubs
and
dec
rcl
xchg
arpl
sbb
dec
add
push
fistps
pop
inc
mov
and
add
jmp
dec
mov
add
loope
mov
add
or
divl
std
scas
fwait
or
add
push
or
mov
call
es
fcomip
dec
push
xor
mov
add
negl
dec
int3
add
pop
rcrl
push
xor
rcrb
mov
inc
mov
and
and
dec
inc
lock
pop
mov
jecxz
jecxz
or
arpl
ljmp
data16
or
arpl
lea
add
stc
mov
decl
nop
and
nop
fwait
bound
add
das
add
mov
call
xchg
dec
dec
and
cmpl
repnz
nop
mov
pop
and
decl
pop
adc
xchg
xlat
sbb
mov
cmp
lcall
mov
lahf
add
lods
test
fsubrl
lea
lret
decl
jo
cld
inc
push
xor
aas
pushl
push
pop
das
sti
mov
sahf
mov
inc
pop
and
push
push
nop
call
cmp
xorl
or
inc
jg
xchg
mov
sub
pop
stc
clc
gs
pop
iret
inc
jle
outsb
iret
mov
fildl
sahf
repz
rcrl
xor
decl
inc
jecxz
sbb
xor
jmp
rcr
add
ficoms
std
jmp
mov
pusha
cmp
out
addl
dec
dec
pushf
add
and
adc
mov
fbld
pop
call
inc
push
fwait
repz
sub
add
sub
repnz
and
pop
daa
inc
adc
cmpsb
pop
push
push
and
sub
dec
fisubl
xchg
leave
inc
jl
insl
xor
mov
add
inc
incl
push
fisttpll
and
adc
jns
pop
jb
mov
in
pushl
rcl
movsl
jl
mov
sub
cmp
add
aaa
mov
scas
lcall
xor
outsl
fisttps
call
pushf
insl
mov
xchg
sub
inc
fisubs
and
jae
mov
cmc
and
andb
inc
jl
loop
sbb
outsb
add
add
ret
xor
in
inc
mov
pop
sbb
xchg
or
or
inc
mov
jg
mov
dec
push
ja
sub
je
mov
inc
fldl
adc
jecxz
jl
add
sub
add
or
in
js
sarl
adc
pop
fs
icebp
fsts
xchg
add
shrl
sub
and
xorl
mov
add
cmpsb
ljmp
ret
and
mov
daa
std
loope
fldcw
ret
outsl
lock
test
and
mov
mov
pop
push
pop
add
idiv
call
inc
xchg
sbb
inc
aaa
add
jmp
dec
dec
lds
push
enter
clc
pushl
es
cli
leave
insb
xor
xor
repnz
icebp
popf
add
inc
rcrl
fwait
fwait
push
fbstp
hlt
sub
sbb
mov
and
jmp
mov
fcomps
xchg
daa
ja
mov
incl
push
add
ror
icebp
jnp
push
fnstenv
xor
stos
jb
jl
out
pop
sahf
ljmp
fmul
mov
in
loopne
sbb
ljmp
add
jmp
xchg
dec
test
inc
and
push
xchg
jge
mov
cmpb
push
iret
ljmp
adc
xor
pop
jbe
in
aad
pop
mov
fnstsw
pushl
pop
lret
loop
mov
adc
fcoms
add
xchg
pushf
xchg
decl
bnd
add
adc
jmp
mov
sub
or
fistpll
aaa
scas
mov
add
xor
sub
decl
or
inc
ljmp
jmp
and
fiaddl
dec
pop
pop
popa
mov
out
cli
xor
outsl
lret
mov
xor
mov
call
mov
negb
inc
add
idiv
sub
in
or
arpl
sub
or
xchg
mov
sbb
cmpsb
iret
jmp
out
in
and
cld
pop
arpl
cmp
in
outsl
xchg
or
scas
cmp
xor
dec
in
sub
or
xor
mov
sub
pop
xor
xchg
or
test
ds
mul
sbb
mov
sub
xchg
test
mov
sti
rcrb
fdivrl
rclb
lret
push
inc
inc
mov
adcl
sbb
sbb
sahf
loop
adc
scas
adc
pop
mov
pop
and
arpl
pop
adc
jnp
push
add
add
sbb
popf
ljmp
add
fadd
subb
push
jo
cmp
ss
test
inc
daa
mov
and
fcompl
mov
xlat
leave
pop
push
xchg
stos
loopne
divb
adc
mov
call
inc
mov
iret
add
adc
cmpb
je
in
mov
dec
insl
dec
sbb
push
fs
iret
add
add
pop
inc
dec
movsl
out
add
adc
pusha
pushl
addb
pop
orb
mov
or
or
xlat
push
pop
cmc
xchg
xor
mov
rclb
int3
jb
fiaddl
aam
pop
imul
sub
sbb
insb
xor
sbb
xchg
add
xchg
or
repnz
adc
loopne
jp
mov
popa
or
add
mov
add
cwtl
cli
popl
adc
xor
sbb
ffreep
test
inc
test
inc
cmp
adc
push
enter
mov
push
les
testb
pop
push
rclb
cmp
xchg
test
js
adc
sbb
mov
decb
stos
js
add
mov
lods
scas
in
cli
aaa
jp
xor
pop
les
push
cmpsl
inc
rolb
into
sbb
pop
mov
xor
adc
mov
push
add
add
jg,pn
inc
lea
and
rorl
ds
add
inc
dec
adc
bound
cmpl
stos
fsubl
xor
out
xchg
mov
add
pop
rcll
lock
cmp
lods
test
nop
and
outsb
and
xchg
xor
call
das
xor
shlb
xor
xchg
sbb
jl
ret
mov
sti
push
movsl
jmp
xchg
adc
loopne
cwtl
cmp
ret
adc
or
or
ret
and
push
ret
mov
or
mov
lods
jmp
xor
push
imul
out
stos
push
add
js
mov
xlat
cmc
int
inc
cmpsb
dec
add
fwait
xchg
fsts
notl
dec
sbb
sbb
and
sbb
fisubrs
sub
cmpsb
xor
inc
add
sar
pop
xor
add
add
xor
xchg
clc
dec
addr16
adc
jl
cmp
cmp
jae
xchg
test
mov
fwait
and
dec
push
out
cmp
xor
rol
or
into
out
loope
cmc
stos
nop
xor
int3
lock
and
pop
and
cli
test
push
lcall
out
or
int
xchg
mov
cmp
jg
xchg
or
mov
lods
adc
cmp
mov
les
and
xor
bnd
mov
add
cmp
out
push
call
add
rcl
scas
nop
or
add
push
int3
lcall
fwait
hlt
pop
sarb
xor
jg
adc
sbb
and
inc
pop
cld
and
sbb
push
push
cmp
ljmp
ret
xor
test
sbb
sbb
js
lea
add
pop
add
clc
add
lock
popf
xchg
enter
xor
in
xlat
mov
sbb
and
stos
sbb
inc
fs
je
or
popf
and
or
cmc
mov
cmp
dec
xlat
adc
lds
mov
mov
js
je
adc
cltd
xorb
clc
xchg
push
lcall
mov
xchg
cmpsl
cmp
mov
bts
add
pop
jo
jae
loope
shr
insb
jg
call
popa
xchg
adc
xchg
js
add
and
aas
test
mov
sahf
ret
lahf
test
pop
and
xor
sarl
jg
sbb
filds
out
cmpsb
dec
lret
xchg
inc
push
pop
lret
sbb
jmp
addl
xchg
inc
int3
fbstp
fadds
mov
cmp
push
sti
mov
ljmp
pop
inc
ret
xchg
test
mov
cmpl
xchg
bnd
sbb
bound
or
jp
sahf
xchg
inc
inc
sub
inc
cmp
add
lds
pop
hlt
bound
rcrb
push
inc
jo
and
shrl
clc
jmp
pop
mov
xchg
sbb
dec
nop
add
bound
jg
mov
sbb
fsubrl
iret
jb
inc
xchg
and
push
lods
adc
cltd
adc
decl
xor
xor
sbb
jne
mov
xchg
ljmp
popa
mov
inc
mov
mov
icebp
in
in
lret
iret
sbb
cmpsb
ljmp
cli
orb
mov
fsubrl
xchg
add
dec
add
aad
out
decl
sbb
cmp
xor
mov
incl
mov
pop
test
add
inc
gs
sahf
mov
cmp
mov
push
xchg
jp
cli
xor
mov
xorl
add
outsb
out
in
loopne
push
xchg
and
jg
mov
sbb
pop
mov
subl
pop
pop
xchg
aad
cmp
sub
imul
mov
cmp
cs
leave
fldl
mov
mov
cmp
cltd
xchg
jg
or
enter
xchg
add
jge
je
push
xchg
shlb
jmp
add
xchg
adc
inc
mov
inc
out
dec
mov
sub
int3
xchg
jne
and
cmp
push
or
mov
fbstp
inc
jge
lret
or
mov
dec
mov
inc
push
xor
push
mov
aad
mov
mov
add
gs
cmp
xchg
adc
pop
incb
or
bound
stos
mov
xchg
mov
adcl
xor
stc
inc
shll
pop
loopne
add
add
es
and
add
push
sub
and
sti
popf
dec
js
lods
mov
inc
sbb
fadds
or
cmpsl
xchg
arpl
xchg
push
cs
and
dec
add
mov
iret
push
ret
dec
ljmp
jp
add
sbb
js
pop
les
testl
cltd
sub
data16
and
lcall
mov
jle
hlt
lock
add
push
push
fsubrl
add
fimuls
lods
lret
in
sub
jecxz
outsb
sar
dec
les
rorb
dec
mov
pop
sbb
sbb
xor
mov
add
pop
lds
mov
inc
xchg
popf
shll
add
std
sub
je
ret
imul
adc
jl
add
rorb
ret
push
push
loopne
aaa
cmp
cmp
pop
mov
adc
cwtl
mov
xor
inc
inc
lods
mov
lock
bound
add
cmp
mov
test
xor
push
imul
aam
sub
add
or
jp
into
xor
cmpb
pushf
out
ret
std
js
inc
adc
out
lds
push
int
insl
mov
aas
add
ljmp
push
lock
push
sub
imul
and
fcmovu
lds
inc
pop
and
and
daa
xor
mov
xor
jns
and
xor
nop
mov
mov
outsl
leave
mov
loopne
xor
sbb
cltd
ja
aam
and
push
xor
in
jmp
add
pop
idiv
add
cmp
xchg
inc
mov
add
loop
int3
repz
ljmp
in
lods
or
add
ret
add
mov
js
ds
cmp
mov
xor
sti
cmp
test
cmp
popl
pop
lds
or
push
push
inc
fcompl
ljmp
fwait
out
dec
jecxz
xor
push
push
mov
push
push
sbb
mov
sub
xchg
add
mov
test
dec
and
scas
dec
pop
ja
xchg
add
in
jg
bound
leave
mov
add
add
sahf
lock
inc
repz
or
mov
sbb
in
or
les
and
les
ljmp
mov
and
cwtl
inc
add
jns
int
mov
cmp
jb
inc
cmc
mov
jns
mov
cld
add
das
icebp
decl
dec
popa
roll
nop
pop
cmp
dec
mov
xchg
es
int3
fdivrp
aaa
cli
loopne
loope
ret
loopne
dec
or
mov
imul
aam
mov
loopne
fisttps
sbb
lcall
sub
shrb
or
mov
and
xor
lds
jmp
and
idivb
insl
adc
stos
jl
inc
fadds
or
mov
jae
jp
aam
cld
movsl
add
sub
cmp
pusha
xor
out
mov
push
adc
xchg
add
pop
jg
add
pop
daa
inc
lret
cmp
fistl
das
std
and
mov
repz
mov
ds
xchg
mov
cmp
jecxz
mov
test
ljmp
push
inc
jnp
les
sub
push
lock
inc
hlt
out
movl
and
xchg
adc
add
sub
or
jbe
xor
sbb
jo
inc
sti
call
sbb
jo
xor
rcrb
xor
sub
push
loopne
push
stos
lret
jo
lock
pop
jo
push
adc
adc
dec
mov
dec
rcll
mov
and
nop
or
mov
inc
cmp
jl
pop
mov
adc
movsb
scas
fwait
inc
hlt
data16
scas
jmp
mov
jmp
stc
pop
dec
cmp
mov
push
cmpsl
push
outsw
mov
arpl
dec
jnp
ss
and
ja
mov
in
jge
add
jae
or
lock
cltd
or
mov
push
cmp
shrb
test
sub
inc
sbb
push
popf
xchg
lahf
xor
pop
pop
pop
or
sub
ss
cmc
xor
adc
pop
inc
xor
inc
dec
cwtl
sahf
call
add
push
sub
inc
sub
jbe
cltd
lcall
arpl
push
pop
in
test
inc
addb
loopne,pn
movsl
dec
in
xchg
clc
inc
inc
lcall
aam
ss
les
out
dec
sbb
inc
lock
sbb
sti
daa
pop
mov
xor
pushf
sbb
test
negb
daa
xorb
fisubrs
lret
jo
outsl
cmp
push
fistps
in
ds
popa
ss
push
inc
sarb
or
dec
int3
inc
je
mov
sbb
es
roll
fists
mov
scas
rorl
sbb
andb
mov
sbb
adc
les
push
ret
stos
mov
mov
dec
inc
mov
or
sbb
adc
lret
bound
out
cmp
clc
jbe
add
mov
insb
mov
cli
shll
aam
or
dec
xor
push
and
insb
shll
nop
js
stos
dec
imul
add
insb
and
and
inc
lds
mov
bound
mov
or
fnstcw
add
xor
pop
push
dec
mov
rcr
cmp
and
add
cmp
push
rcrl
scas
mov
or
or
xchg
sub
pop
outsl
adc
sub
test
orb
pop
inc
test
mov
lret
jmp
inc
lea
push
sbb
inc
mov
sbb
sbb
repnz
lret
rolb
add
push
lcall
or
add
sbb
xor
shll
subb
push
add
out
adc
add
sbb
xchg
add
pop
dec
sub
mov
std
push
adc
sub
sbb
dec
jp
cld
inc
push
mov
outsb
mov
icebp
cmpsb
push
icebp
push
jge
clc
andl
add
and
add
mov
loope
push
xor
adc
ss
pop
push
inc
mov
dec
mov
push
add
cld
dec
mov
leave
js
outsb
enter
add
and
cld
sbb
adc
rcll
pop
rclb
push
xchg
pop
icebp
push
ret
testl
jns
movsb
sub
mov
sub
add
popa
jae
in
insb
imul
sub
inc
mov
sti
repnz
pushf
or
mov
xor
out
jg
inc
push
and
dec
adc
je
pop
addb
sbbb
scas
or
xor
clc
jns
aam
cwtl
or
int3
add
push
ret
push
mov
pusha
adc
pop
and
aas
ret
push
stc
push
clc
sbb
in
pop
inc
mov
cwtl
mov
shr
and
lods
rorb
repnz
inc
mov
jmp
or
daa
adc
sub
adc
and
or
inc
mov
pop
xchg
cmpsl
movsl
test
int
inc
sub
pop
add
popa
xchg
pop
rclb
push
mov
lahf
lahf
loopne
mov
and
jmp
ds
lcall
pop
xor
and
pop
jg
cmp
and
scas
cltd
adc
push
add
pop
call
scas
jp
jge
pop
das
pop
sub
cmp
popf
test
inc
and
xchg
jecxz
fisttps
int3
scas
adc
add
jbe
out
jo
xchg
or
insl
loop
jo
bound
sahf
test
cli
xchg
idiv
idivb
xorl
shlb
jmp
cld
loope
incl
js
stos
cmpb
push
xchg
ret
inc
fsts
add
jmp
nop
xor
pop
adc
sub
in
cld
mov
sbb
and
push
pop
jbe
sahf
stos
pop
mov
mov
std
or
mov
xorb
das
and
jb
stos
test
pushl
daa
cmp
jg
add
out
gs
out
fidivrl
dec
ret
cmp
xchg
loopne,pt
aas
jno
push
mov
dec
mov
test
filds
cli
mov
jmp
mov
and
adc
outsl
out
add
xchg
jae
mov
adc
cmp
cmc
ret
or
xor
and
adc
call
mov
cmp
mov
and
dec
or
ljmp
stos
cld
test
inc
pop
and
mov
stos
cmp
jg
jmp
cmp
jb
jge
cmpsl
ss
call
jb
adc
outsl
cld
aas
xor
inc
flds
inc
shlb
cmc
cmp
pop
dec
mov
add
repnz
mov
ret
icebp
push
lods
and
test
push
jne
arpl
xor
decl
sti
stos
ss
sub
adc
jmp
mov
cmp
push
in
pop
and
das
inc
xchg
sbb
sub
jle
mov
jge
inc
push
rolb
jmp
fstl
cmpl
addr16
inc
adc
mov
aam
xor
rorb
and
iret
icebp
pop
sub
lahf
add
outsl
adc
cmpsl
pop
enter
arpl
js
popf
and
fmuls
das
pushl
js
inc
roll
add
repnz
pop
jp
pusha
js
push
sub
cli
mov
adc
jecxz
lcall
pop
sub
loopne
imul
es
stos
pop
add
inc
mov
pop
arpl
jmp
js
mov
mov
popa
orb
push
cmpsb
aaa
ljmp
add
loopne
dec
imul
sub
rolb
test
out
icebp
inc
mov
call
call
pop
pop
nop
sub
mov
cmp
mov
clc
sub
ficompl
adc
mov
and
test
sbb
mov
ds
sub
or
or
sbb
and
jmp
fildll
xchg
or
pop
cmpsb
jl
xor
mov
pop
dec
nop
jg
ffree
mov
cmp
sbb
sbb
add
adc
xchg
test
pop
popa
outsb
mov
add
hlt
aad
mov
lods
dec
mov
test
mov
lods
imul
int3
orb
jns
je
or
in
pop
sub
movsb
pusha
leave
adc
sbb
add
jbe
jns
push
or
and
fs
stos
je
cmpsl
filds
cld
jg
cmp
adc
push
lock
daa
addr16
or
clc
ljmp
outsb
lods
clc
lcall
aad
fnstenv
mov
incb
mov
and
mov
push
push
push
mov
js
pop
xor
cwtl
call
mov
cmpsl
push
rorl
dec
insl
icebp
enter
pushl
add
rorl
jnp
jmp
cld
aam
sbb
pusha
inc
jl
inc
or
loopne
mov
in
clc
ss
push
xchg
mov
aaa
add
jmp
mov
xchg
enter
sbb
cld
or
inc
and
roll
mov
cmp
adc
cmp
adc
or
mov
aas
push
xchg
add
lret
jecxz
hlt
fsubl
adc
mov
fistl
mov
cli
test
adc
jno
in
add
mov
lret
pusha
aaa
push
sub
bnd
add
enter
xor
xchg
fcomp
pop
jge
divl
fcoml
ljmp
scas
ds
and
sub
push
xchg
enter
pop
xchg
adc
cwtl
add
mov
out
adc
sub
adc
sub
aad
ds
push
cmp
sub
scas
cmp
add
jnp
lcall
adcl
iret
xor
xor
push
and
xchg
add
inc
cmpsl
test
sub
fsubrl
add
sbb
push
and
popf
mov
sbb
push
scas
adc
dec
fstp
jecxz
andl
mov
rcrb
divb
popf
mov
or
sbb
sbb
cmc
xchg
add
incl
incl
mov
mov
and
mov
outsb
mov
ret
out
adc
push
pop
sub
xor
popa
lods
int3
dec
ljmp
nop
mov
cltd
sub
or
das
call
cmp
inc
xchg
push
in
mov
and
rep
and
add
fldenv
rorl
movsl
mov
sbb
addb
or
jnp
and
test
xchg
xchg
push
mov
or
mov
mov
and
xchg
dec
mov
pop
data16
clc
rcr
mov
idivb
les
int3
push
push
add
jbe
add
mov
xlat
subb
pop
daa
add
mov
mov
add
mov
sub
shlb
adcb
jecxz
cmpsl
sub
xchg
jecxz
data16
pop
or
push
mov
notl
sbb
fldcw
add
inc
push
hlt
mov
sub
mov
addr16
cmp
push
int
rclb
sbb
pusha
movb
sti
lahf
sub
xchg
adc
push
jae
movsl
and
add
je
repz
sub
repz
in
add
adc
stc
or
add
into
mov
xor
mov
and
shlb
and
and
inc
or
mov
mov
or
scas
cmpb
pop
jb
mov
add
jnp
loopne
stos
icebp
jo
push
in
sbb
inc
icebp
inc
lock
cmp
hlt
outsb
sub
push
sbb
jmp
or
adc
or
rcrb
push
add
push
add
sub
sub
lods
sbb
ljmp
rcr
imul
idivl
mov
push
cltd
mov
sub
add
dec
sub
out
add
adc
mov
xchg
dec
test
inc
out
fdecstp
mov
sbb
jne
clc
and
in
or
shlb
mov
enter
pop
xchg
pop
jb
or
inc
fadds
jno
js
pop
adc
enter
mov
sbbb
out
outsl
out
sarb
adc
xchg
xchg
enter
add
les
push
mov
add
enter
xor
and
test
scas
lcall
faddl
and
mov
pop
sub
stos
mov
ficompl
aaa
or
jp
jne
mov
mov
test
pop
jb
pop
cwtl
mov
jo
dec
subb
mov
sbb
adc
and
fsubs
sub
imul
jno
shll
inc
inc
add
jae
or
in
add
pop
pushf
xchg
rclb
or
mov
dec
bound
add
push
push
mov
out
dec
popa
xor
mov
add
ds
fisttpl
and
pop
in
or
cmp
notb
pop
inc
clc
in
in
and
dec
add
les
orb
jo
lret
jne
les
inc
rorl
mov
or
rcll
add
adc
dec
cld
loopne
jns
and
in
jns
add
pop
cli
roll
or
mov
inc
hlt
ret
in
pop
cmc
pop
lcall
pop
lods
and
pushf
dec
movsl
pusha
mov
lods
aas
xorb
repz
pushl
pop
lds
jecxz
hlt
aam
jae
inc
pop
add
add
jo
fimull
inc
int
cmp
scas
mov
mov
add
xchg
jne
jbe
mov
inc
push
xchg
decl
ficomps
loope
mov
xchg
test
pushl
inc
shlb
lods
es
arpl
and
mov
inc
mov
lods
arpl
xchg
andl
mov
or
pop
sbb
sub
pop
cmp
in
pusha
jmp
push
mov
adc
aam
pushl
and
add
sbb
sbbb
fnsave
mov
incl
mov
mov
mov
inc
xor
fcomps
ljmp
cmp
sub
add
push
das
mov
movsb
jns
movq
das
lcall
imul
xchg
pushf
out
add
notl
loopne
sbb
add
cmpsl
sbb
mov
lcall
fldt
nop
shrb
mov
scas
lahf
push
leave
dec
lahf
sub
inc
aaa
mov
lret
cmp
popa
loop
jmp
outsl
sbb
dec
jecxz
xchg
fwait
test
rorb
add
adc
sbb
pop
fs
adc
pop
push
outsl
push
sub
test
push
mov
mov
je
sbb
test
and
add
arpl
das
adc
decl
and
jmp
aad
popa
lahf
sbb
or
mov
ja
mov
cmp
inc
cs
cmp
sbb
cwtl
fsubrl
lcall
pop
test
js
lods
dec
aaa
jne
mulb
cs
jg
add
lahf
xchg
aas
adc
adc
pop
loopne
cmp
pop
cs
cmp
jge
test
clc
mov
movsl
jecxz
mov
test
mov
adc
test
cmpsl
rolb
into
push
dec
xchg
outsl
cmp
adc
adc
add
aam
fisubrs
pop
sahf
les
mov
pop
loope
sbb
jmp
mov
cmp
ficomps
jg
sub
mov
idivb
add
cmp
add
add
enter
inc
iret
adc
sbb
jo
add
mov
mov
inc
xor
test
hlt
mov
lea
pusha
sub
cwtl
insb
push
jp
sub
inc
test
int3
inc
aam
jnp
or
sub
push
mov
or
cmp
aaa
push
push
out
jbe
inc
jmp
cmp
aam
xchg
mov
pop
xor
mov
movb
lret
inc
jb
mov
vmulps
dec
push
dec
cmp
fidivrs
lods
aaa
out
repnz
clc
adc
mov
inc
adc
add
jo
xchg
inc
inc
add
jne
ljmp
or
test
sbb
aam
xor
mov
pop
add
push
jbe
cmp
js
jg
cmp
js
cs
int
cmc
sub
adc
adc
inc
nop
cmp
mov
aas
or
lcall
adc
jae
dec
xlat
mov
subb
inc
xchg
sbb
add
in
cli
test
ljmp
jne
jae
sti
ror
push
mov
jge
test
cmp
mov
xchg
mov
xchg
out
es
pushf
xchg
and
mov
pusha
jmp
fists
cmp
cmpsb
xor
dec
ss
cmpsb
aaa
ss
inc
aad
call
add
call
xchg
negb
xor
outsl
jnp
clc
sti
rolb
shll
adc
jno
dec
pop
sti
leave
mov
jg
cmp
xor
inc
xchg
pop
sub
or
lret
clc
fsubl
mov
jne
sti
mov
sub
sub
lea
pop
int3
addl
popf
jo
inc
decb
jg
sbb
sub
or
out
fsubl
jne
jns
lock
jg
in
loop
pop
daa
jnp
mov
sbbb
and
outsl
std
cmp
xor
leave
repz
dec
mov
jmp
jp
jp
and
sbb
mov
addr16
jmp
test
push
rcrb
push
push
sub
lret
jo
lret
aad
xor
lahf
in
add
mov
filds
xor
in
mov
mov
push
stos
aam
push
pop
push
dec
or
push
ljmp
mov
mov
les
adc
jecxz
bound
les
lahf
ficomps
call
ljmp
ret
jl
push
mov
fstpt
fmull
jo
aam
adc
scas
mov
lret
and
jmp
shll
js
icebp
in
push
setae
lods
mov
cmp
out
xor
je
lret
mov
pop
push
lcall
or
dec
mov
cld
lods
loope
pop
nop
rcll
mov
aam
mov
cld
fdivrs
and
inc
adc
pop
mov
push
nop
jg
mov
xor
ret
arpl
lds
imul
js
fsub
or
add
mov
mov
sbb
into
cld
adc
mov
inc
das
pop
cmp
int
cld
sbb
js
xchg
loopne
shll
dec
xor
leave
pushl
shlb
inc
ljmp
ljmp
mov
pop
jo
pop
push
inc
adc
cs
or
sbb
mov
cwtl
sti
test
pop
push
je
adc
or
les
das
cmp
sbb
mov
add
pop
and
mov
movsl
test
sbb
and
sub
xor
mov
cmp
push
cmp
call
cmpb
jno
nop
pop
sbb
xor
adc
cmp
sbb
decl
xchg
pop
pop
dec
mov
add
or
loopne
std
movsl
int3
or
pushw
inc
inc
mov
xor
adc
add
aaa
das
sub
imul
sub
jl
dec
or
mov
imul
inc
pop
or
push
mov
nop
ds
bound
incl
and
dec
inc
ja
xchg
test
aaa
rorb
mov
mov
inc
mov
lea
std
mov
mov
aam
popf
addr16
das
insb
sbb
cmp
popf
int3
cmpb
cmp
pop
outsl
push
adc
pushf
add
mov
push
inc
sbb
adc
or
xchg
xor
add
ljmp
jno
push
nop
add
adc
fcom
sub
inc
call
mov
ror
fs
ss
jno
inc
out
aaa
call
rcll
in
adc
add
pop
loop
icebp
and
and
enter
xor
shrb
into
jbe
les
ror
popa
push
pop
mul
fucomip
cltd
mov
cltd
and
inc
andb
inc
inc
ja
insb
nop
movsl
mov
mov
mov
lds
lcall
adc
aas
data16
clc
pop
call
or
inc
inc
lahf
mov
std
das
std
out
sbbb
andl
arpl
dec
cmp
ljmp
fs
orl
pusha
adc
addr16
mov
dec
sbb
push
adc
mov
or
inc
add
aas
mov
sbbl
jb
push
rcr
ret
push
pop
xor
and
enter
adc
mov
mov
test
xchg
xchg
inc
sbb
popa
sti
lcall
scas
inc
in
cwtl
pop
cwtl
in
mov
cmp
pop
mov
push
sub
dec
enter
aam
bound
mov
inc
push
ret
pop
mov
pop
jge
or
xlat
pop
mov
loope
and
mov
inc
stc
or
mov
mov
jb
fsts
mov
sti
aaa
sub
inc
cwtl
les
or
shll
and
mov
mov
sar
sbb
xchg
pop
lcall
push
std
lcall
roll
inc
xor
cmpsb
xor
mov
cmp
outsl
ss
inc
ret
sbb
addb
cmp
cmp
clc
fisttps
pop
add
imul
sbb
mov
decl
pop
lea
sbb
adc
sub
xchg
xor
pusha
push
inc
insl
std
das
cld
sarb
add
movsb
mov
add
add
jg
pop
sbb
adc
movsl
fbld
jne
jg
loop
and
dec
test
imul
sti
call
cmp
pop
add
inc
pusha
push
add
or
push
rcrb
sbb
jle
pop
cmp
sarl
dec
xchg
xchg
mov
lock
lahf
jle
test
lock
sub
xor
pop
and
nop
pop
mov
js
decl
sbb
push
movsb
xchg
lock
dec
or
fcoml
or
ljmp
push
inc
jno
jge
add
shrb
js
xchg
aaa
gs
fisttps
dec
in
dec
push
inc
sbb
adc
lods
scas
out
hlt
push
push
pop
jp
call
xchg
int3
and
inc
push
loopne
cmc
popa
cltd
movsl
adc
mov
jnp
push
or
mov
sub
dec
lea
or
stos
push
push
mov
je
notl
lret
or
and
icebp
add
loopne
cli
movsl
fsubs
fsubr
cmpb
sti
xchg
loopne
es
mov
adc
and
xchg
repz
add
into
sub
jmp
add
sbbb
sub
lcall
mov
mov
sub
xchg
mov
push
mov
out
sbb
ficomps
rcl
and
cmpb
adc
fdivp
loope
mov
lock
test
js
sub
dec
fcos
mov
pop
xchg
inc
mov
arpl
pop
add
out
add
cmp
bound
pop
movsb
sub
jecxz
mov
mov
mov
loope
lret
dec
mov
xlat
and
ljmp
fwait
push
call
call
loope
pop
mov
cli
jae
fldt
pop
fcomip
dec
cmc
dec
add
cmp
ljmp
and
sbbl
mov
scas
popa
pop
xchg
mov
add
lds
add
divb
and
jle
adc
dec
xor
aad
cli
outsl
xor
cltd
jb
dec
and
bound
decl
add
xchg
adc
and
aaa
adc
rcrb
adc
movsb
pushf
inc
ret
sub
adc
xchg
and
push
mov
add
jo
mov
mov
pop
rorl
mov
or
xor
dec
inc
or
cltd
push
sbb
shlb
add
adc
push
imul
xor
mov
or
adc
addr16
scas
lds
and
loop
or
xchg
int
inc
mov
and
adc
add
pop
sbb
or
or
sbbl
int3
xchg
push
sbb
cmp
popw
push
aam
adc
push
fs
push
mov
or
inc
or
and
aaa
inc
pop
mov
leave
fidivs
loop
in
rcrb
js
addb
out
cltd
xchg
cmp
xor
jne
xor
jecxz
loop
sahf
adc
xor
add
sbbl
mov
adc
mov
inc
add
lds
jle
add
ret
mov
push
in
inc
ds
add
sub
adc
dec
shl
pop
pavgb
adc
popf
fcomi
call
dec
andl
mull
dec
gs
aam
or
cld
out
pop
jo
or
orl
push
icebp
jne
aam
push
jge
mov
out
pop
out
or
add
and
mov
pusha
daa
xor
xchg
mov
mov
and
jl
and
lods
ss
dec
inc
scas
jo
inc
xor
and
sub
or
mov
lods
mov
jle
jnp
sbb
mov
imul
xor
pop
fucom
fstpt
or
dec
js
adc
add
add
adc
xor
dec
push
dec
push
pusha
cmp
inc
and
pop
adc
aam
dec
jnp
clc
decl
inc
jp
xchg
rorb
dec
push
shrl
das
shll
fwait
ret
imul
cli
or
or
mov
scas
inc
xorl
mov
xchg
loop
lods
or
lret
add
ret
loope
xchg
test
inc
mov
dec
les
outsl
lahf
aam
mov
clc
shlb
jle
mov
les
and
mov
repnz
int
or
fs
pop
pop
mov
pop
cld
sbb
pusha
xor
jmp
lret
sbb
or
leave
fstps
jg
aad
adc
cmpb
sub
aad
inc
mov
popf
push
xchg
sar
loopne
mov
jg
rorl
in
mov
insb
pop
jg
mov
add
imul
sbb
shlb
sub
pop
pop
loop
ret
push
adc
mov
subl
mov
or
xchg
imul
cs
mov
loopne
mov
mov
pushl
sbb
cmp
lock
cmpl
mov
decl
std
push
and
fxch
std
decl
dec
cmpsb
xchg
jecxz
cmp
dec
shlb
mov
push
adc
sbb
mov
push
pusha
aaa
clc
xchg
clc
lock
mov
xchg
loopne
sub
jmp
test
rorb
xchg
test
stos
sub
das
cmc
lods
daa
pop
mov
push
and
sbb
clc
das
mov
inc
stc
imul
add
cmpb
stos
jo
xor
addr16
das
repz
adc
and
inc
and
les
dec
mov
or
repnz
popw
lret
pop
or
add
in
push
or
scas
daa
add
movsl
fsubl
loop
hlt
add
shlb
pop
fs
ljmp
mov
insb
ljmp
decb
ret
repnz
cmp
cld
outsl
filds
lods
shl
mov
call
add
jmp
bound
add
fsubs
push
inc
dec
push
and
shrl
addr16
xchg
pusha
enter
setge
rorl
sub
adc
pop
movsb
adc
aaa
push
or
sbb
inc
jbe
repz
and
mov
in
mov
jb
or
decl
cmp
jle
adc
fdivrs
add
or
sbb
sub
inc
push
lret
insl
testl
lock
adcb
mov
sbb
pop
xchg
dec
inc
ja
and
mov
xor
stos
incb
or
int3
xor
inc
orb
pusha
pop
loope
testb
test
dec
cld
xor
incb
xchg
mov
add
push
shll
repnz
data16
sbb
adc
sub
inc
cld
cmpsl
imul
xchg
mov
add
fisubrl
xor
or
adc
int3
jge
dec
add
int
mov
sub
add
mov
or
or
xor
cmp
lds
int3
fcmovnu
cmpsl
ljmp
fists
dec
pop
mov
mov
xchg
leave
mov
loop
or
jle
sbb
jns
sar
mov
lret
add
or
addl
inc
xor
or
ds
and
cmpsb
sti
call
cmpsl
push
sbbl
and
int
cmp
ret
add
pop
adc
dec
test
sub
sbb
popa
jo
lea
mov
out
pop
mov
int3
dec
push
cld
rorl
push
cmc
add
adcl
loope
sbb
cmp
or
xor
xor
mov
fisttpll
xor
movsl
sbb
mov
rorb
aas
mov
push
repz
add
inc
pop
push
xchg
es
sbb
mov
push
stos
loopne
add
add
jnp
adc
cwtl
xchg
out
jno
xor
out
xchg
inc
adc
pop
jne
pop
adc
stos
cli
mov
pusha
repz
call
mov
add
sub
addl
insb
ret
test
mov
adc
jnp
or
dec
and
inc
pusha
add
pop
xchg
cmpsl
jne
pop
mov
ss
mov
lcall
movsl
pusha
hlt
andb
jne
xchg
aad
mov
outsl
mov
pop
inc
jmp
test
jmp
jbe
insb
lret
mov
pop
iret
dec
add
push
fsubr
fidivs
xor
adc
ljmp
andl
cld
adc
loopne
sub
inc
ret
push
jbe
sbb
test
mov
mov
inc
inc
test
data16
aaa
inc
aad
jmp
add
push
in
mov
clc
jg
lds
sbb
push
cmp
dec
add
lock
adc
aam
into
lods
sbb
add
mov
sub
add
sub
data16
and
test
jae
leave
stos
and
xor
fwait
dec
shll
push
jp
ret
add
into
cmp
and
jmp
xor
repz
in
das
gs
push
cmp
jmp
shrl
inc
lret
andb
push
outsl
jp
cs
mov
in
hlt
sbb
cmpb
addr16
adc
and
out
pop
push
or
aam
popl
mov
rolb
pop
xor
jle
pop
add
ja
loop
test
aad
dec
cmpsb
cs
rcll
rcr
jle
stos
fisttpl
call
pop
and
xor
dec
push
adc
stos
jo
pop
mov
dec
add
sbb
cli
pusha
je
sub
or
adc
shll
cmp
loopne
and
aad
loopne
add
jb
push
inc
cwtl
jl
sbb
cmp
dec
or
jge
push
sarl
adc
imul
dec
lcall
andl
dec
adcl
inc
ret
orb
jg
aam
sbb
lods
mov
mov
cld
lahf
xor
or
inc
loope
lcall
stos
pop
mul
addr16
adc
add
inc
xor
pop
lea
sub
or
mov
sbb
fisubl
mov
subb
cld
daa
or
sbb
adc
mov
cmp
lea
data16
inc
mov
and
pop
ret
sbb
xchg
roll
filds
inc
dec
pop
or
pusha
and
xchg
cld
inc
sbb
jl
cwtl
mov
das
mov
mov
subb
or
adcb
xchg
imul
movq
or
or
cmp
jno
subl
cmp
add
andl
jo
shl
pop
add
lahf
mov
add
call
and
adc
loop
test
out
mov
scas
arpl
shlb
dec
cmp
xor
loop
mov
cmp
cmpsb
ja
in
push
cmpsb
loopne
test
in
sti
or
pop
adc
add
lea
mov
stc
repnz
loop
leave
and
jbe
inc
pop
push
push
sub
add
cli
call
mov
sbb
push
push
xor
test
jmp
and
fsubl
bound
popa
fisttps
fcoml
or
inc
pushf
jo
in
xchg
mov
push
push
outsl
dec
jle
pop
xor
push
sbb
jne
mov
cmpps
iret
add
mov
shlb
jnp,pn
mov
mov
adc
ret
dec
mov
or
sbb
aaa
mov
or
fisttpll
cmp
cmp
imul
jmp
mov
and
pop
jp
xor
xchg
adc
test
call
repz
out
pusha
dec
icebp
fs
lcall
lret
inc
jae
out
lret
iret
xor
leave
dec
addr16
enter
mov
sbb
adc
xor
repz
out
mov
out
sbbl
xor
or
cwtl
leave
push
sub
pop
mov
or
sbb
inc
mov
ljmp
aas
stos
cmpb
pop
mov
add
hlt
add
and
xor
ljmp
mov
pop
xchg
cmp
jg
jne
inc
je
dec
js
dec
sarb
pop
decb
pop
nop
out
dec
fmuls
rcl
sbbb
iret
dec
outsl
mov
sbb
or
and
push
nop
or
ljmp
decl
add
mov
cmp
inc
hlt
inc
call
mov
mov
dec
cmc
mov
test
inc
push
cmp
inc
adc
inc
xchg
or
sbb
push
mov
clc
dec
je
fsubs
and
lds
add
and
test
xchg
test
shl
adc
pusha
or
sbb
sub
in
nop
xchg
fs
mov
ret
or
push
imul
xor
adc
test
test
jle
jmp
ret
orl
mov
cltd
xor
and
and
add
repz
sub
rep
cmp
pusha
sbb
std
test
and
push
or
daa
test
adc
incb
push
aas
das
scas
mov
scas
mov
nop
or
adc
or
repnz
xor
test
and
outsl
sbb
push
cli
sbb
js
dec
adc
aas
cwtl
por
adc
mov
dec
lods
inc
add
idiv
pushl
xchg
sbb
cs
and
test
les
sub
push
adc
xor
test
cltd
xor
mov
icebp
pop
lcall
cli
and
cmc
and
and
mov
pop
js
jmp
ss
xor
inc
jne
insl
mov
add
arpl
jmp
imul
aam
call
sub
call
orb
push
enter
and
xor
dec
adc
sub
adc
clc
inc
or
ffreep
and
pop
adc
pop
xchg
scas
mov
fisttps
ja
push
dec
add
out
ret
loopne
adc
mov
dec
inc
fidivl
pusha
jmp
addr16
clc
push
loope
jae
aad
or
sbb
jecxz
dec
sbb
addr16
xchg
pop
fs
movsl
lcall
and
xchg
and
mov
jae
jecxz
pop
decl
xlat
pop
test
inc
cmp
mov
mov
cmpb
cli
jg
mov
mov
cld
pushf
dec
mov
xchg
bound
jecxz
movsl
sbb
or
sub
test
shlb
arpl
mov
inc
test
mov
sbb
aas
cmpb
mov
pushf
orl
into
aaa
jmp
jl
call
inc
aaa
mov
add
vrcpss
cmpsb
cltd
sahf
inc
outsl
mov
loope
das
lock
add
cmpsb
jg
ss
mov
adc
fdivp
in
or
repnz
insb
loop
das
jl
mov
mov
rclb
xor
ds
pop
cmp
std
xor
das
cld
popa
sub
lds
fisubl
cmp
inc
mov
add
out
lcall
arpl
fwait
pop
jno
and
imul
aam
or
xorl
sub
clc
pop
loope
or
cmp
imul
jg
sti
fstl
jle
add
add
jb
lahf
mov
or
adc
dec
push
into
fnstcw
adc
mov
lcall
cld
sub
stc
icebp
pusha
addr16
rcll
fs
push
rclb
add
loopne
movsl
mov
mov
daa
aaa
fs
in
jmp
icebp
pop
xchg
sub
add
fnstsw
pop
mov
pop
test
dec
insb
or
mov
sbb
add
cmp
sbb
or
loope
das
mov
mov
movsb
dec
mov
push
shrb
pushf
pop
aaa
xor
aad
mov
scas
pop
test
std
fwait
pop
loopne
sbb
movsb
and
xchg
or
imul
mov
or
adcl
daa
and
or
mov
jg
lds
pop
mov
fwait
jge
nop
or
je
or
or
mov
cli
adc
pop
push
dec
pushl
lock
pop
movsb
jecxz
aam
rolb
lret
inc
xor
inc
sti
pop
das
lock
stos
pop
mov
mov
rcr
leave
ffreep
jg
movsl
ret
lret
adc
movb
cwtl
fsubrp
xlat
inc
add
or
ljmp
xchg
es
push
rcr
jo
jb
std
outsl
mov
and
mov
dec
cmp
int3
mov
cmpsl
mov
pop
mov
ljmp
mov
mov
sub
pop
test
pop
push
inc
and
mov
inc
jl
sub
out
and
add
mov
sti
push
mov
mov
cli
outsl
xchg
cld
inc
lds
dec
push
je
push
xor
sub
push
ret
popf
clc
addb
nop
jmp
cmp
xchg
ljmp
sub
add
xchg
cmc
mov
add
jb
repnz
sbbl
mov
pop
mov
popf
cmpsb
cmp
dec
or
jo
mov
lcall
inc
push
stos
mov
imul
leave
jge
xchg
xchg
lret
xchg
fs
mov
push
add
inc
ret
adc
popf
inc
inc
sarb
sbb
gs
add
scas
js
movsl
jl
mov
mov
cmc
pop
inc
jb
sbb
push
and
lock
jmp
ficomps
cmp
push
pop
mov
sbb
xorl
xor
shll
decl
jne
call
xor
and
aaa
dec
inc
movsb
fistpl
data16
inc
lcall
adc
jmp
les
sbb
dec
add
iret
pushf
orb
inc
test
and
adc
add
rclb
and
inc
add
sub
push
push
jae
add
test
add
das
pop
jbe
xor
cltd
out
test
imul
jne
mov
ret
jae
int
xor
xchg
test
dec
addr16
shr
inc
scas
lock
or
in
dec
mov
adc
push
sub
mov
inc
fisubs
inc
test
lahf
aad
popf
sarl
adc
sbbb
or
jg
fadds
jno
jle
xchg
dec
sub
int
push
add
decl
lret
and
push
pop
mov
shlb
sar
fistpll
jmp
and
psubb
or
clc
cmc
ffree
mov
add
add
or
shr
push
ljmp
flds
mov
sub
mov
cmp
pushl
cmp
outsb
stos
add
sbb
roll
clc
mov
xor
mov
cltd
mov
cmp
lds
pop
dec
push
iret
pop
cmpsb
mov
nop
adc
mov
jg
pop
cli
test
fistl
cmp
in
jp
lcall
fs
cld
mov
push
pushf
js
push
or
aaa
movsl
xchg
shll
mov
bound
lahf
add
inc
roll
adc
inc
ss
movsl
pop
xor
out
mov
adc
sbb
leave
bound
push
in
mov
lcall
decl
stos
or
jl
out
mulps
adc
xor
aaa
cli
jmp
xchg
inc
clc
ja
pop
in
loope
mov
call
shll
adc
fisttps
stos
push
jp
push
clc
out
das
adcb
fsubs
or
insb
ljmp
dec
xchg
out
jne
xor
stos
push
incl
dec
jae
sub
jb
adc
sub
adc
xchg
mov
fldt
cmp
jmp
pusha
jecxz
inc
inc
mov
pop
push
fs
idiv
jg
lret
xor
nop
fnstenv
sbb
cmp
ss
inc
cmp
je
test
inc
or
lcall
sub
or
or
or
jmp
clc
aaa
rolb
xor
xchg
fildl
cmp
lock
imul
xchg
dec
and
cs
dec
in
das
cld
call
rcr
std
mov
out
mov
push
xor
mov
xchg
dec
into
mov
fldl2e
cmp
ret
orl
add
cwtl
add
je
inc
sahf
or
mov
filds
add
sbb
adc
pop
sub
push
or
and
fwait
sbb
lods
cwtl
push
push
push
sbb
es
lret
int
roll
outsb
add
in
sbb
push
dec
shlb
push
arpl
xchg
sub
test
mov
jl
sub
cs
in
aad
pop
cmp
pop
push
inc
cmc
mov
or
hlt
inc
fnstsw
adcl
lock
sbb
aas
sbb
push
shrb
pop
fistps
add
out
inc
push
and
or
aaa
mov
add
sbb
inc
mov
push
cs
je
adc
sub
clc
cwtl
or
or
push
pop
sbb
je
pop
xchg
jg
pop
mov
xor
or
scas
push
and
mov
mov
or
or
scas
gs
addb
pop
je
jp
xor
inc
and
add
lock
in
xor
adc
fnstcw
add
jnp
xchg
add
cmc
ds
mov
push
shlb
andl
sahf
gs
xchg
xor
or
push
orl
or
fsubrs
or
call
dec
dec
or
xadd
fwait
mov
subb
xchg
or
in
das
xor
pop
or
nop
jae
gs
mov
jae
arpl
push
xor
lret
add
xchg
aaa
popf
shll
popf
xchg
dec
mov
rcll
add
push
enter
or
arpl
mov
mov
sub
mov
cmp
jne
sub
jmp
lods
test
xor
xchg
leave
dec
dec
pop
js
les
bnd
loop
jbe
pop
cmc
mov
test
adc
or
dec
mov
add
in
dec
adc
test
std
addl
mov
loop
and
lds
xchg
fsts
adc
test
es
xor
testb
inc
fs
mov
push
pop
xlat
add
mov
test
sub
in
ficomps
pusha
das
xchg
mov
mov
xor
in
or
test
xor
mov
sub
xor
cmp
xchg
sbb
pop
out
pop
les
loope
icebp
ljmp
inc
xchg
movsl
cmp
adc
fs
fidivs
jmp
loop
sub
inc
roll
push
add
subb
mov
xor
aaa
call
rcr
push
outsb
jle
lods
push
sub
add
push
cmpsl
cmp
int
jb
add
pop
push
mov
aam
outsb
push
pop
pop
xor
mov
scas
testl
ljmp
data16
movq
push
fimull
jo
push
sar
cmpsb
mov
lds
pushw
rorb
fildll
add
movsb
and
aam
sub
dec
and
xor
call
jecxz
int3
outsl
sbb
lret
or
gs
add
pushl
pop
push
imul
sub
gs
inc
inc
mov
enter
dec
or
and
mov
stos
cmp
mov
mov
decl
adc
adc
mov
pop
sub
jae
pop
sub
outsb
inc
cld
fmull
sbb
and
icebp
das
lock
ret
xchg
mov
sbb
push
bound
ja
and
add
hlt
pop
test
and
xor
cmc
add
decl
cld
dec
or
int3
fiadds
fdivs
xchg
add
inc
and
icebp
dec
sub
cmpl
rorb
sbb
xor
pop
clc
out
dec
xlat
cld
gs
and
mov
jae
dec
sbb
test
scas
lea
aaa
inc
das
sub
push
dec
outsl
or
push
aaa
ljmp
cld
cs
lret
js
add
fcoml
add
decl
icebp
push
pushf
dec
loop
and
sar
xor
lcall
adc
imul
jb
outsb
cmp
sbb
les
add
aas
mov
popa
je
in
mov
pop
jg
rcl
and
bound
cmp
and
mov
lods
mov
push
xchg
test
push
push
xchg
pop
push
outsl
pusha
sub
sbbb
hlt
cltd
or
inc
repnz
outsl
pop
sti
pop
and
and
pop
clc
pop
jge
inc
fidivs
adc
ret
mov
jmp
mov
xor
leave
mov
jg
mov
mov
loopne
pushf
xor
cmp
outsl
ljmp
mov
aad
out
sbb
enter
dec
sbb
loop
dec
shlb
shlb
sahf
popa
loopne
mov
les
and
les
sub
out
cmp
jns
sarl
inc
mov
push
inc
sarb
out
loop
cli
call
adc
add
xor
inc
xlat
sbbb
lahf
mov
in
mov
mov
jne
cmpsl
or
in
jae
nop
clc
pop
jle
fisubl
mov
daa
ficoms
cld
fwait
dec
jne
lret
clc
sub
dec
lods
sbb
clc
inc
xchg
fs
das
jge
repnz
add
inc
movsb
inc
xor
dec
dec
cmc
out
test
mov
addb
fwait
mov
sub
dec
push
jge
or
pushl
jp
xorb
mov
into
es
dec
xchg
in
dec
test
imulb
pop
add
ja
rolb
imul
pop
cld
lret
out
lock
incl
xor
bound
inc
and
ja
xchg
adc
call
out
and
leave
jmp
mov
xor
mov
xchg
dec
test
lea
fisttps
sti
or
and
push
add
jbe
cmp
sbb
das
sbb
das
pop
jbe
sub
inc
std
xchg
clc
aaa
mov
into
ret
inc
test
mov
push
pushl
cli
add
out
xchg
fldenv
pushf
cmp
in
das
inc
xchg
icebp
pop
push
xor
ja
arpl
and
pop
inc
out
inc
insl
je
jl
mov
xchg
aas
pop
sub
and
jno
stc
test
lea
jmp
push
pop
incl
push
xchg
insl
add
cltd
outsl
loop
incl
in
sbb
and
cmp
stc
add
test
xor
pushl
and
inc
out
jle
outsl
cmp
xchg
sub
cld
push
clc
shrl
jge
leave
cmpsl
xorb
sub
xor
cwtl
or
dec
ljmp
andb
lock
push
jge
add
inc
outsl
inc
pop
outsb
ds
aam
xchg
xchg
push
jmp
inc
xchg
xlat
mov
enter
sbb
out
out
out
pop
dec
pop
add
popa
inc
rol
fistpl
cmp
mov
mov
fidivrs
mov
xor
mov
sub
and
popl
pop
mov
inc
cmc
mov
adc
xor
jle
add
or
jne
sub
add
subb
icebp
adc
out
movsl
dec
add
and
fcmovnb
xor
sti
outsl
xorb
jbe
mov
cwtl
call
js
and
push
pop
fsin
push
push
jecxz
iret
fwait
loope
sub
aad
stc
iret
adc
inc
xor
push
adc
jcxz
loope
mov
push
shlb
les
mov
stos
or
shll
push
mov
inc
add
dec
or
pop
pop
clc
inc
push
xor
dec
or
mov
and
loopne
and
hlt
out
cmp
rcr
push
jl
xchg
js
add
push
sub
pop
in
adc
aaa
leave
sub
inc
mov
test
add
insb
adc
sbb
xlat
dec
mov
push
inc
and
sub
sar
fiaddl
loope
add
loope
and
xchg
gs
adc
mov
aas
xor
aam
inc
xor
jo
mov
lds
add
inc
test
nop
incl
xchg
jo
xor
push
lock
or
enter
insb
lahf
and
inc
les
xor
xchg
adc
ljmp
and
mov
and
inc
add
xchg
nop
sbb
add
repnz
push
mov
enter
ret
and
popl
jo
mov
jp
adc
inc
push
lock
sbb
roll
dec
inc
xor
aaa
push
jbe
add
pop
testb
imul
push
push
adc
inc
xchg
pop
xchg
repz
push
in
sub
inc
cld
push
and
or
sub
cmp
cmp
inc
mov
bnd
loopne
mov
hlt
adc
push
mov
adc
lods
mov
cpuid
push
xchg
loop
and
test
add
mov
cmp
sub
xchg
push
movsb
cld
xchg
push
cmp
ljmp
fimuls
lcall
mov
pop
arpl
sbb
mov
add
xchg
mov
in
in
inc
xor
jp
xchg
add
jmp
push
movsl
sarb
mov
das
add
mov
aad
xor
add
lock
adcb
or
push
mov
jo
out
xchg
push
aaa
pusha
push
aas
lods
mulb
aaa
fists
sbb
lcall
or
mov
mov
mov
cli
xchg
dec
mov
add
and
insl
adc
scas
imul
hlt
clc
jmp
inc
xchg
jb
mov
hlt
cmp
jg
in
mov
sub
lcall
cli
ret
push
stc
pop
or
outsl
inc
adcb
sbb
sbb
add
xchg
pop
xchg
std
lock
sbb
xchg
int3
int3
mov
adc
test
add
add
rorl
add
jne
arpl
add
and
sub
push
ret
outsb
add
and
add
addr16
push
mov
inc
stos
jb
test
out
sbb
addr16
pushf
cld
dec
pop
push
shll
dec
sub
imul
ret
ret
adc
push
xchg
sbbb
shl
add
mov
mov
adc
pop
mov
andl
jne
adc
pop
pop
push
and
mov
push
clc
ss
pop
lock
push
aam
ljmp
lock
icebp
mov
inc
jg
loope
gs
fsubl
jae
mov
pop
mov
mov
leave
leave
aaa
and
flds
and
jno
cmp
inc
sub
sub
add
call
data16
es
aam
jo
xor
push
pushf
inc
shl
mov
adc
add
dec
push
jecxz
test
dec
xor
xchg
stos
pusha
idiv
and
repz
imul
adc
js
dec
and
jmp
and
ds
cmp
fildl
adc
rorl
lds
leave
add
mov
lcall
clc
in
fdivrp
hlt
add
add
inc
add
jle
xor
lds
mov
scas
fcoms
adc
sbb
sub
fs
sahf
icebp
fsubl
push
ret
mov
mov
enter
inc
clc
mov
out
sub
jne
cmp
jle
adc
fsubs
lret
add
divl
aas
daa
xchg
call
scas
or
xor
stos
hlt
scas
cmp
push
cli
adc
sti
and
jg
jecxz
push
cs
cmpb
sahf
xchg
xchg
push
xor
mov
and
shll
pop
xchg
pop
and
call
add
maxps
repnz
gs
xchg
mov
pop
out
inc
jge
inc
jl
inc
or
pushl
sbb
movsb
clc
imul
dec
jge
nop
xchg
jge
lret
insl
jg
movsl
imul
adc
orl
inc
pop
dec
mov
pushl
adc
cmpsb
pop
mov
mov
xor
pop
mov
int
fists
xor
push
fidivl
mov
and
in
in
in
mov
add
xor
add
mov
add
jecxz
or
jmp
fldt
orl
hlt
xchg
fimuls
loopne
movsl
jmp
xor
add
nop
ja
dec
ljmp
enter
std
decl
cltd
push
not
mov
shl
mov
outsl
lock
daa
xor
xchg
adc
xor
fildll
xor
jae
xor
clc
and
rcll
mov
cli
lcall
add
sub
fs
js
imul
sub
movsl
push
and
ret
scas
inc
notrack
das
xchg
cmp
pop
sbb
or
mov
dec
mov
xor
dec
pop
js
xchg
fbld
sub
hlt
push
cmp
mov
stos
call
cmp
mov
repnz
xchg
pusha
fisubs
sub
xchg
adc
jp
push
sbb
cmp
cmp
mov
sahf
pop
sub
or
call
or
pop
pushf
mov
scas
pop
mov
lcall
repz
add
dec
lret
sbb
mov
jne
mov
movsl
sub
mov
inc
shl
adc
loopne
pop
std
sub
xchg
lods
cmp
adc
fnsave
or
lahf
enter
push
mov
and
xchg
xchg
test
pop
inc
mov
or
loopne
fbld
pop
add
fcmovnbe
xlat
xchg
add
sub
add
adc
jmp
sub
sbb
loopne
loope
cmp
clc
in
arpl
nop
out
loope
lds
dec
push
mov
jge
adc
mov
adc
pop
loop
loop
inc
lret
outsb
mov
pop
pop
fcom
cmp
lea
dec
or
add
addl
mov
or
pop
cmp
xor
add
lret
add
cmpsb
push
mov
cs
sbb
aad
add
xchg
adc
or
in
scas
sbb
es
inc
push
mov
add
divb
sub
fnsave
sub
and
insl
push
inc
or
pop
inc
push
lds
cld
dec
pusha
xor
decl
stc
dec
aad
test
cmp
mov
cli
add
dec
mov
in
and
add
inc
iret
adc
push
mov
jle
faddl
inc
adc
sub
mov
xabort
aas
pop
sub
mov
sbb
in
lock
dec
daa
aaa
call
add
testb
adc
pop
jle
jg
jg
es
pop
and
mov
cmc
or
push
pop
xchg
test
sbb
mov
pop
outsl
jmp
jg
cs
lods
lret
mov
test
mov
jno
push
mov
mov
jbe
sub
mov
stc
mov
dec
or
dec
loopne
sbb
pop
arpl
sbb
add
jnp
lods
push
xchg
lds
adc
adc
add
add
sti
pusha
sbbl
sub
fcomi
rolb
lock
sbb
incl
test
xchg
mov
push
add
lea
jmp
dec
shrl
pushl
sbb
out
addr16
push
or
cmp
sub
and
loop
lods
cmpsb
jo
orb
pop
faddp
or
and
rorb
jl
fldcw
scas
pop
jbe
cmp
push
call
cld
jle
js
dec
xchg
call
inc
cmp
fsubs
outsl
rcrl
andb
or
test
sbb
mov
int3
sbb
stos
pop
xor
push
inc
cli
inc
bnd
jl
call
mov
xchg
add
cmpl
lods
fisttpl
in
call
dec
pusha
push
cld
push
cli
nop
push
aas
out
sub
xor
and
decl
rcl
aad
push
jg
or
loopne
call
mov
je
stos
pop
and
jmp
pop
or
out
test
fldl
pop
add
mov
xchg
or
hlt
int3
xor
cwtl
test
test
inc
pusha
popl
jnp
push
cs
insl
jg
mov
ljmp
pusha
icebp
cmpb
xor
ja
mov
stos
inc
adc
mov
loopne
add
enter
das
hlt
or
xchg
dec
out
cli
dec
popa
xchg
test
adc
mov
repz
lods
loopne
in
jmp
inc
mov
pop
pushf
out
int3
aas
mov
or
mov
add
fsub
dec
push
incl
fisubs
mov
pusha
mov
push
push
inc
ret
add
add
std
ret
loope
or
adc
push
andl
test
lods
or
jb
or
cs
sbb
lcall
movsb
sub
mov
xchg
and
pop
mov
popa
clc
js
push
xchg
mov
repz
pop
mov
push
xchg
mov
std
add
mov
mov
xchg
fdivrp
dec
mov
stos
ljmp
orl
addl
loop
inc
add
andb
das
cmc
call
push
sub
test
inc
addl
sbb
xchg
mov
test
fistl
mov
xchg
call
loop
stos
xchg
outsb
sub
outsl
lock
incl
jle
andl
cmp
push
sub
outsl
mov
xor
call
sets
sbb
ret
xchg
xor
enter
xchg
dec
jb
jbe
mov
and
stos
adc
rol
orl
sub
das
das
and
inc
inc
and
je
in
sahf
rep
mov
shlb
cli
adc
pop
mov
push
dec
pop
push
push
add
mov
sub
mov
add
or
dec
mov
ljmp
push
add
in
idivl
lea
lret
aam
mov
ficompl
push
inc
hlt
ljmp
cs
nop
fimuls
out
cmc
bound
jb
and
sbb
push
std
push
icebp
or
add
in
sbb
cli
mov
mov
jecxz
jl
xchg
out
sbb
mov
push
outsl
adc
cmp
inc
sub
rorl
hlt
outsl
mov
fucom
sbb
pop
inc
cmp
testb
push
mov
or
pop
pop
add
outsl
mov
idivb
mov
push
in
dec
aas
and
push
push
pop
ljmp
add
mov
and
pop
ds
adc
xadd
outsl
or
add
mov
push
outsb
push
ret
fs
and
mov
pop
adc
cmc
xor
add
pop
out
xchg
adc
pusha
or
js
pop
lds
pusha
mov
mov
inc
pop
dec
dec
imul
jmp
push
dec
add
add
movsl
adc
adcb
aaa
sbb
leave
sub
movsl
jle
push
mov
push
push
cmpsb
cmp
cld
and
and
loopne
push
push
pop
sub
int3
adc
scas
clc
stc
mov
cmp
cld
call
adc
xchg
sahf
stos
cmp
pop
cli
rcrb
hlt
pop
pusha
sahf
mov
pop
mov
popa
clc
mov
mov
aam
ret
jmp
sub
and
inc
jno
fwait
push
or
and
pop
test
movsl
and
dec
aam
lock
sbb
data16
lahf
dec
in
adcl
push
pop
adc
jg
outsl
sub
sub
aad
out
or
sub
push
adc
movsb
popa
sti
jmp
pusha
gs
and
adc
pop
out
jne
jg
bnd
add
sub
sbb
enter
and
mov
or
xor
or
cmc
out
add
jge
cld
ret
lret
loop,pn
jecxz
and
inc
ss
fcmovnb
jmp
ds
cwtl
hlt
dec
repnz
mov
sub
nop
pusha
sahf
lock
decl
add
adc
cmp
or
mov
jb
mov
out
fistpll
int
ds
or
inc
cmp
call
xchg
add
in
and
pop
call
or
lock
cmc
icebp
fildl
sub
and
cmp
hlt
outsl
mov
mov
xor
adc
pop
scas
icebp
push
mov
insl
cltd
lock
inc
push
je
mov
les
jp
add
inc
xchg
fucomip
adc
andb
sub
test
jno
push
mov
pop
lret
fadds
cmp
mov
mov
mov
cmp
call
mov
fiadds
mov
mov
push
int
xor
pop
cmc
call
jno
loopne
dec
pop
lods
add
lock
clc
jmp
loop
ja
add
sub
or
pushl
sbb
add
call
jno
fwait
ljmp
std
js
adc
js
jae,pt
roll
and
ljmp
dec
xorb
enter
hlt
mov
pop
imul
sahf
mov
pop
xor
je
xchg
cmpsb
rol
sbb
mov
cmp
mov
aad
sub
das
std
imull
call
cmpsl
mov
popa
dec
outsl
jno
icebp
inc
in
ljmp
adc
add
and
jg
mov
fadds
ret
push
in
orps
test
jns
xor
or
mov
mov
add
incl
mov
mov
dec
cmp
xchg
sub
add
cmp
jae
pop
outsl
jmp
ret
sbbb
in
xlat
push
das
lret
and
imulb
pushl
or
inc
in
js
jle
pop
imul
jg
mov
add
or
jb
idivb
insl
loope
pop
cmpb
mov
cwtl
outsl
xchg
loope
cld
cld
pop
fldl
xchg
repnz
inc
mov
cld
ret
jns
xchg
hlt
jo
cli
lahf
loope
mov
dec
std
xchg
pop
popf
addb
rorl
push
icebp
cmpsb
jmp
gs
shr
pop
loop
inc
mov
ror
sub
loope
or
inc
sub
adc
mov
dec
inc
and
dec
lock
loopne
cld
sub
out
xchg
out
lahf
push
dec
cli
fistps
cmp
pop
and
scas
cwtl
add
push
fwait
lcall
inc
or
mov
outsl
icebp
mov
push
sub
jp
push
jecxz
mov
movsl
outsb
lret
mov
push
mov
and
pop
mov
pop
dec
sbb
mov
test
das
fnstsw
into
add
mov
leave
xchg
stos
das
mov
hlt
inc
dec
loop
test
mov
add
fdivrl
jecxz
sub
cmc
outsl
dec
ss
and
xchg
in
inc
scas
or
xor
xchg
mov
repnz
inc
or
jbe
out
adc
scas
adcb
shlb
orb
mov
sbb
cmp
iret
add
push
sbb
jae
int3
shlb
pop
jle
nop
add
ficoml
push
cmpsl
add
xchg
jmp
shufps
pop
pushl
iret
es
cmp
push
ret
add
negl
jmp
cmpsb
mov
test
bound
lret
call
fcmovnu
adc
addl
cmpsb
seta
or
hlt
add
adc
in
jl
incl
outsl
aaa
clc
dec
sub
pop
pop
and
fists
or
mov
popa
leave
leave
mov
std
insl
xchg
cmc
lret
mov
ljmp
roll
jne
rclb
mov
rep
cld
pop
pop
add
xchg
sbb
fstpt
fsub
dec
cld
cmp
scas
movsl
adcb
ds
dec
pop
cli
decl
xchg
and
xchg
fs
test
leave
inc
testl
mov
js
sbbb
loop
decl
push
xor
cmp
arpl
sbb
pop
stos
adc
fwait
xor
in
andl
addl
ss
stos
outsl
hlt
rorb
decb
lret
cmp
pushf
iret
add
lret
hlt
aaa
jne
dec
ret
mov
jb
bsf
aaa
cli
pop
hlt
mov
cmpsl
push
stc
add
adc
rcll
ljmp
push
push
dec
dec
mov
jmp
les
mov
test
dec
sbb
and
lods
mov
pushl
push
xlat
cmp
jo
cmp
inc
stc
inc
cld
push
je
or
fisttpl
gs
or
jg
mov
jle
stos
ja
adc
out
outsb
movsl
les
filds
std
sti
popw
std
in
cmp
mov
nop
lods
mov
hlt
lock
dec
add
enter
ret
cli
push
and
sbbb
inc
adc
push
leave
js
outsl
xor
rcll
mov
jbe
in
push
inc
mov
sbb
sbb
pop
mov
rolb
pop
push
lods
and
adc
jl
sub
sub
ljmp
fldcw
jo
sub
jg
stos
ret
sbb
and
mov
std
loopne
ret
adc
or
xlat
shll
jae
mov
push
sbb
xchg
and
add
rorl
cmpsb
out
inc
movsl
icebp
decl
mov
and
ljmp
mov
je
dec
push
push
out
not
std
xor
pop
lock
arpl
call
add
je
mov
mov
jg
jg
rol
cmp
ss
mov
leave
fnstcw
cmp
push
push
xchg
pop
dec
inc
pop
push
test
sbb
leave
sbb
or
inc
cmpsb
cmp
imul
data16
pushl
es
xor
and
pop
insb
lock
rorb
or
mov
mov
pop
clc
mov
cwtl
push
arpl
jns
xchg
popa
idivb
xchg
sbb
sub
adc
adc
dec
push
pop
fmuls
dec
cmp
or
test
xor
ss
aas
sub
repz
popa
pop
xchg
cli
pop
lock
rorl
enter
std
lcall
push
cmp
mov
mov
xchg
push
repnz
test
leave
cmc
xorb
aam
enter
fistpll
fwait
add
stos
stos
lods
and
mov
mov
inc
hlt
ljmp
xchg
and
mov
pop
call
rolb
xchg
or
in
outsl
cld
push
xor
js
scas
sbb
js
mov
xchg
sbb
sbb
or
cmp
mov
sarb
movsb
and
sbb
cmc
arpl
jg
or
call
ljmp
mov
add
mov
adc
pop
jl
or
xchg
adc
xchg
lods
sub
add
push
mov
push
js
jg
scas
dec
dec
jmp
cmp
pop
xchg
notl
dec
sub
mov
insb
out
cmp
sahf
lock
lret
pop
and
inc
mov
test
xchg
xchg
into
and
loop
int
mov
push
pop
cmp
rol
out
jg
aad
mov
inc
aaa
loopne
xlat
cmpsl
cmp
jns
adc
and
pushf
lods
arpl
lock
ljmp
cmc
sbb
jmp
repnz
push
roll
clc
inc
or
or
add
sub
add
and
daa
dec
or
lcall
xor
pushf
cmpsb
lret
and
jne
addl
add
cmp
adc
or
or
std
data16
popf
or
or
fwait
sub
push
sub
pop
jp
inc
pop
or
popf
cmp
stc
test
or
jo
je
inc
outsl
mov
mov
push
mov
js
fcos
mov
jg
cmp
adc
dec
push
add
mov
movsl
sub
insl
in
and
push
jl
fcomip
mov
jne
test
push
ja
cmc
popa
hlt
int
in
jb
cmc
adc
dec
inc
mov
daa
jo
cmpb
inc
xor
nop
dec
jl
xor
xchg
mov
fiadds
fmuls
orb
inc
fmul
cmp
outsb
daa
jmp
addl
bound
push
test
pop
or
icebp
movntps
jb
arpl
roll
cmpsb
jbe
and
daa
sbb
adc
jl
mov
push
or
xlat
add
or
outsb
mov
sub
scas
daa
sub
jecxz
in
mov
pop
mov
lcall
ret
iret
mov
mov
jbe
mov
sbb
mov
xor
daa
jl
lds
lahf
xor
adc
fidivl
fs
test
shll
ret
jns
sbb
call
sub
add
inc
daa
mov
mov
lods
ror
std
xchg
aas
and
pop
sbb
push
lods
ror
or
push
ljmp
gs
mov
xchg
and
fadds
jle
inc
not
mov
in
dec
cld
movsl
jmp
add
sub
fs
push
inc
andb
test
push
sbb
roll
ljmp
xchg
mov
pop
push
jnp
mov
add
fiadds
mov
sub
jmp
enter
fs
pushf
push
jns
fsts
nop
and
push
mov
sbb
xchg
and
lds
in
jle
sarl
imul
cmp
push
xchg
sub
xchg
out
and
mov
adc
arpl
push
jg
outsl
nop
xchg
adc
adc
inc
lcall
xor
call
cld
push
daa
dec
das
testl
inc
or
mov
mov
push
popa
sbb
int
xchg
add
cli
pop
ljmp
pop
mov
xor
xchg
xor
push
testl
call
js
add
outsb
inc
sub
cwtl
lods
or
es
dec
mov
rorb
ja
stos
addb
ret
shll
test
mov
shrl
adc
rorb
out
daa
mov
fcom
mov
inc
gs
ficompl
and
mov
mov
mov
or
int
adc
in
lret
xor
add
aam
adc
rcrl
push
mov
cli
data16
test
xor
xor
sbb
adc
inc
ss
or
cmp
cltd
jle
dec
add
mov
fnstcw
adc
lret
sub
loope
xor
mov
push
adcl
pop
call
sbb
add
add
and
or
test
and
and
pop
or
leave
cs
adc
or
aad
sbb
idivb
add
adc
inc
pusha
mov
pop
jns
popf
ljmp
stos
ds
mulb
out
cmp
mov
mov
inc
out
stos
or
fcoms
aas
mov
fisubrl
loopne
mov
xor
adc
stos
sbb
adc
sub
xchg
add
sahf
in
cmp
aad
inc
pop
in
fcoml
pop
ljmp
lock
inc
push
call
adc
nop
ljmp
jo
aad
cld
mov
and
dec
scas
xchg
mov
stc
mov
aam
mov
adcb
xchg
ss
push
adc
mov
std
add
test
and
mov
pop
inc
out
notl
mov
jl
test
adc
cmpsl
push
sahf
dec
jns
lds
inc
shrl
clc
push
mov
jne
sub
pop
adc
push
xchg
mov
dec
mov
bound
in
mov
inc
dec
push
shrb
ret
adc
sbb
lods
xor
jp
add
or
pop
xor
out
adc
dec
mov
mov
test
aam
dec
inc
push
movsb
mov
add
sahf
fldenv
and
pop
mov
sub
fisttpll
cmp
popf
rcr
test
mov
mov
addb
mov
push
mov
stc
scas
sbb
adc
jnp
push
loop
clc
decl
stos
push
inc
aam
sbb
or
scas
xchg
push
fdivr
pop
lods
loopne
or
dec
xchg
je
xchg
leave
scas
cmc
ror
aad
pop
in
outsl
icebp
pop
arpl
sbb
cltd
sub
aaa
clc
cmp
enter
sbb
jo
cmp
dec
incb
adc
in
gs
jnp
sar
incl
lock
jl
jl
shll
mov
dec
call
mov
or
adc
std
fmuls
pop
xor
sub
outsl
nop
stc
shl
xorl
ret
and
push
inc
or
inc
int3
push
and
mov
jp
pop
inc
add
test
int
jl
xorl
mov
pop
frstor
test
mov
mov
xchg
fisubrs
lea
mov
and
or
fcoml
lret
mov
out
pusha
int3
dec
addl
and
leave
xlat
mov
push
xor
cs
adc
inc
lret
sahf
pop
enter
fbstp
mov
mov
test
cmp
add
mov
cmp
out
cmp
inc
adc
rcrb
cmpsb
fs
adc
dec
lea
jmp
outsb
imul
cltd
fcos
fstpt
mov
pop
sbbb
xchg
nop
inc
dec
mov
adc
jno
sub
cs
adc
push
clc
incl
push
adc
inc
adc
cld
inc
roll
adc
mov
sbb
mov
notl
mov
mov
mov
xchg
mov
and
popl
mov
ficompl
and
mov
add
jo
sbb
lcall
mov
add
sbb
call
mov
and
mov
sbb
or
jmp
cld
jg
into
mov
push
shll
jg
inc
add
mov
mov
dec
jge
inc
sbb
mov
lahf
mov
adcb
fsts
shr
xchg
xchg
and
and
sarb
fbstp
add
cmp
mov
pop
jge
mov
sub
cld
jae
or
cwtl
call
add
sbb
std
sub
scas
and
xor
pop
dec
jge
pop
notb
hlt
adc
es
subb
test
sbbb
loope
pop
test
cmp
into
call
pusha
repnz
mov
mov
dec
sub
add
lods
add
test
jecxz
shrb
outsb
mov
cmp
hlt
pop
jo
rorb
pop
shrb
arpl
xor
bound
ret
sub
das
ja
loop
sbb
pop
addr16
in
mov
movsb
pop
mov
xchg
aaa
pop
push
jns
les
aam
test
adcl
lods
stos
cmp
sub
js
leave
add
pop
fwait
scas
fisubs
add
jo
je
mov
popf
mov
sti
dec
xchg
movsb
mov
mov
pop
adc
xchg
jg
xchg
in
test
test
xchg
decl
jno
dec
fisubrs
cs
loop
inc
sub
mov
inc
add
lcall
arpl
dec
fistps
xchg
mov
addr16
arpl
shl
clc
xchg
jecxz
cltd
xor
and
lods
cld
lcall
lcall
inc
subl
mov
jmp
and
nop
sti
push
data16
imul
mov
adc
push
mov
ja
shll
decl
jg
imul
in
inc
mov
test
inc
add
mov
adc
clc
in
ret
rcl
xchg
push
and
push
adc
hlt
lock
jp
or
pop
add
in
pop
inc
push
mov
jns
rcll
call
push
or
addb
out
push
xchg
or
loopne
rcl
jmp
sbb
jg
jle
lcall
mov
je
adc
dec
iret
and
or
incl
pusha
jo
les
jo
fisubrl
xor
sub
add
cmp
test
mov
outsl
mov
xor
popa
mov
mov
stos
cld
jbe
push
mov
popf
out
popf
pop
mov
ja
push
pop
inc
and
and
fmuls
ret
shlb
adcb
add
sub
pop
jle
xchg
lea
lret
lds
ret
jmp
and
dec
xchg
adc
call
adc
nop
mov
jg
mov
cli
mov
push
jbe
add
push
push
mov
inc
cmc
and
dec
sarb
and
jg
fadd
out
scas
or
pusha
and
loopne
loopne
jecxz
inc
mov
pop
jp
fldenv
mov
int
xchg
cli
pop
dec
adc
and
and
es
popa
fists
add
ja
xor
enter
add
jo
imul
mov
outsb
add
sahf
cmpsl
push
cli
push
mov
add
ret
dec
add
fs
push
xchg
adc
jno
ljmp
popf
inc
push
int
cwtl
push
aaa
loop
cmpsb
or
pop
loopne
add
sahf
mov
fcmove
sbb
mov
pop
mov
xor
ja
push
or
add
xchg
inc
repz
and
jecxz
fisubs
or
mov
aad
mov
and
ret
orb
inc
cmp
push
or
push
inc
sbb
jne
out
adc
xlat
or
sub
fdivs
add
aas
fdivrl
clc
add
lods
mov
mov
js
jg
jae
sti
scas
mov
cmp
inc
loopne
inc
adc
and
xchg
cvttps2pi
ret
adc
and
sub
mov
or
mov
inc
dec
mov
xor
fwait
mov
and
add
sub
adc
and
or
add
mov
mov
push
shlb
adc
test
insl
sbb
call
icebp
pushf
cmp
and
add
lock
pop
bound
shlb
test
andl
or
dec
cmpsl
clc
ret
aas
sbb
mov
int3
iret
mov
roll
es
pop
fdivs
and
test
inc
icebp
test
hlt
and
xor
xchg
test
les
iret
cwtl
xor
xchg
dec
or
in
add
bound
and
sbb
jnp
mov
int3
pop
mov
fiadds
ficompl
mov
ret
rcll
xor
pop
test
hlt
inc
sub
lcall
pop
cmp
sub
mov
and
rolb
add
add
or
ja
fst
negl
outsl
sub
add
adc
xchg
mov
jbe
adc
push
add
sub
mov
sbb
and
pop
pop
pop
shll
lea
mov
push
lock
inc
mov
je
mov
mov
jmp
and
int
leave
or
mov
mov
and
and
or
pop
or
adc
pop
data16
fs
dec
sub
jmp
and
fisubrl
leave
dec
add
loop
push
sub
test
jge
rolb
sub
ret
pop
cmp
xchg
loop
adc
fidivrs
std
push
stos
cld
roll
pop
xchg
loop
xchg
adc
gs
sbb
push
and
sub
fimuls
adc
dec
adc
mov
inc
inc
add
out
mov
mov
mov
mov
pop
cmpsl
and
es
lds
stos
dec
data16
ljmp
and
cmp
or
lds
push
addr16
add
inc
loop
pushl
mov
fsubrl
lds
les
pop
ljmp
add
add
inc
idivb
mov
xlat
fnstcw
adc
mov
push
icebp
mov
imul
adc
shlb
inc
cmpsb
xorl
loop
les
sbb
mov
and
or
and
test
and
test
mov
and
inc
pushl
jne
pop
inc
es
xchg
out
cmp
imul
mov
cwtl
stc
jg
pop
add
jne
and
pusha
xchg
push
xchg
ss
sbb
fcos
call
call
mov
lock
push
ja
pop
dec
aas
sbb
xor
pushl
loop
inc
xor
movsb
clc
jb
push
xchg
rol
mov
jp
pop
or
fcompl
sbb
or
bound
pop
popf
movsb
pop
mov
cli
pop
scas
data16
nop
insb
pop
pop
std
dec
sbb
in
mov
pop
pop
call
les
in
or
cmp
xchg
lcall
aad
inc
mov
mov
jb
incl
and
sub
mov
fwait
mov
sbb
fs
mov
icebp
xor
jo
push
adc
shll
mov
jne
call
pop
and
sbb
or
sbbb
mov
sbb
std
dec
loopne
dec
mov
inc
jp
xchg
fprem1
call
fists
out
mov
movsl
and
mov
or
push
mov
cmp
xor
push
and
sbb
jge
popf
and
shlb
cmp
add
and
mov
dec
in
adc
add
inc
and
mov
and
popf
add
sbb
mov
lcall
lcall
repz
stc
adc
push
outsb
pop
jbe
mov
push
sbb
fdivs
xchg
sbb
mov
lcall
xchg
sub
or
push
mov
loopne
add
lods
enter
out
or
sbb
leave
pop
xor
sub
cs
push
jmp
push
dec
icebp
ret
mov
add
enter
sbbl
xor
in
mov
push
sbb
pushf
rcll
fsubrl
pop
sbb
inc
xchg
sahf
jp
mov
sarl
xor
or
sbb
inc
aad
in
sbb
inc
es
mov
pop
pop
dec
sahf
jno
outsl
leave
pop
mov
sbbl
xchg
inc
jbe
jg
dec
ja
dec
mov
mov
test
bound
repnz
xchg
test
sub
je
adc
pop
mov
jg
add
jns
cltd
pop
divl
cmp
xchg
xor
add
jmp
nop
cs
jo
mov
popf
cmpsb
inc
ds
stc
jns
jbe
cli
mov
pop
add
push
or
cmpsb
adc
rclb
outsb
pop
dec
int3
imul
and
mov
xor
mov
mov
sub
or
mov
inc
pop
in
inc
push
nop
in
rorb
frstor
imul
push
orl
mov
orb
sbb
jo
gs
fists
int3
mov
into
and
outsb
lock
pop
outsl
psubw
mov
cmpsb
xor
test
mov
cmpsl
mov
or
mov
repz
dec
lcall
dec
adc
push
or
out
rcrb
mov
stos
insl
xchg
jmp
arpl
movsb
call
jbe
cmp
imul
inc
sahf
in
enter
jle
ljmp
sar
sar
out
or
enter
dec
pop
push
and
pop
and
sbb
out
icebp
mov
loopne
inc
testb
cmp
pushl
xor
cs
mov
std
test
fnsave
hlt
cwtl
mov
jb
daa
or
and
pushaw
test
mov
lds
bound
push
mov
dec
jg
push
add
cmp
icebp
cmpl
adcl
mov
shl
shll
add
mov
adc
out
adc
fcmovu
call
mov
inc
inc
dec
pop
sbb
add
or
fsubs
xchg
nop
xor
mov
decl
test
push
arpl
mov
popl
and
call
nop
pop
and
xchg
xchg
and
pushf
insl
out
xchg
xchg
inc
and
sbb
and
add
lods
ret
push
push
and
icebp
in
clc
mov
ror
add
nop
add
jo
push
sbb
mov
jmp
mov
decl
inc
ljmp
call
adc
push
rol
add
adc
pusha
and
mov
std
sub
jb
and
adc
dec
out
xchg
dec
cmp
mov
icebp
es
leave
enter
cwtl
test
call
decl
lcall
xor
dec
xor
sub
push
mov
and
mov
push
mov
adc
notb
aad
ret
les
inc
sub
mov
or
mov
lret
xor
jg
push
and
mov
loope
dec
mov
jg
xlat
or
or
addb
jns
pop
xor
pop
incl
jecxz
sub
test
and
in
mov
adc
or
addl
add
fdivl
sbb
mov
mov
repnz
cmc
scas
aam
js
test
sbb
jne
add
or
nop
jns
xor
mov
cmpsl
jmp
pop
daa
call
inc
push
in
add
cmp
ja
imul
popa
add
shll
outsb
add
pop
test
pop
jbe
or
mov
pop
sahf
iret
pop
gs
ds
fisubrl
out
xor
inc
mov
adcb
arpl
stc
gs
or
fistps
add
pop
leave
insl
adc
enter
rcrb
sti
mov
das
push
lret
mov
pop
mov
add
fstps
aam
mov
pop
data16
enter
hlt
lahf
movsb
pop
insl
and
cmp
or
lcall
mov
cmp
enter
push
push
push
xor
push
loop
ret
movsl
cmp
adc
mov
insb
pop
subl
fs
fisttpll
int
dec
loopne
add
xor
clc
mov
not
dec
jg
pop
push
mov
lds
and
jg
aaa
icebp
clc
movsb
and
data16
mov
and
add
shll
adc
int
xchg
and
in
stos
mov
pop
add
decl
xchg
adc
xchg
inc
adc
bound
cmp
call
fildll
push
mov
ret
into
cltd
mov
clc
cmpsb
mov
adc
xor
xchg
xchg
mov
mov
mov
sti
adc
jecxz
ds
xchg
sub
orb
or
inc
test
cwtl
icebp
pushl
rorb
enter
add
sub
inc
inc
ret
outsb
pop
mov
repnz
add
mov
pop
mov
mov
movsb
int
popa
xchg
mov
imul
mov
add
push
aas
add
lcall
dec
jae
xor
add
and
mov
xor
xchg
xor
test
subb
inc
cmp
mov
movsb
xchg
aad
mov
sarb
pop
jnp
stc
lret
and
das
adc
scas
aam
loope
pushl
dec
outsl
imul
xchg
out
std
or
inc
je
inc
sbb
add
xchg
jmp
pop
popl
adc
fiadds
jl
jg
xor
push
cmp
flds
sub
jg
ret
lea
jno
popa
mov
imul
aas
clc
lcall
ficompl
xchg
repnz
adc
pop
or
sbb
in
das
std
pop
sbb
mov
inc
shlb
push
cmc
pushf
lea
notb
scas
xchg
sub
das
add
add
gs
es
inc
dec
inc
adc
pusha
sbb
mov
nop
cmp
xor
mov
lahf
bound
sub
jg
mov
mov
adc
mov
push
mov
xchg
jp
test
adc
mov
sar
mov
sbb
xor
neg
sbb
or
jg
loopne
cmp
and
aam
pop
pop
loope
add
sar
sub
adc
imul
sbb
and
push
sbb
cli
pshufw
jg
mov
outsl
mov
adc
push
and
jne
dec
sahf
add
aam
push
jb
or
add
cwtl
stos
decb
add
mov
pop
adc
or
dec
inc
pop
rcll
sbb
add
xchg
and
jb
sbb
xor
aaa
sub
mov
in
popf
or
stc
add
sbb
push
add
aad
aad
jb
mov
xor
adc
xchg
jl
call
popa
xor
loopne
add
test
push
out
push
add
int
jb
cld
aaa
out
mov
pop
xlat
gs
icebp
cld
xchg
add
in
inc
push
inc
scas
cli
pop
jns
mov
mov
push
cwtl
cld
sub
inc
inc
shr
jns
ror
sub
fsub
push
inc
sub
repz
pop
sarb
pop
lahf
add
imul
and
lds
arpl
outsl
jl
inc
or
cld
and
icebp
test
inc
push
ret
or
adc
in
inc
mov
stos
fmull
stos
and
inc
inc
fmull
pop
adc
ja
and
push
jge
loopne
into
mov
cmp
adc
xor
loope
cwtl
push
mov
inc
shll
lods
xor
mov
adc
es
rorb
cmp
inc
xchg
and
mov
adc
jnp
mov
es
mov
insb
adc
mov
int
jp
enter
xchg
mov
jp
push
repnz
movsb
or
inc
xor
xchg
add
fbld
sbb
xchg
push
mov
or
and
jns
cmpsl
pop
sti
push
sbb
inc
out
xchg
pop
or
lahf
add
push
xchg
push
rep
les
adc
ret
adc
adcb
adc
idivb
cmp
or
push
xor
js
mov
and
sbb
test
fdivrp
xor
orl
push
pop
add
push
in
loope
sbb
dec
loopne
sahf
push
popf
sub
and
sbb
mov
sahf
loope
int3
ficoms
shr
cwtl
adc
int
sbb
push
push
sub
mov
push
cmc
sbb
pop
shr
rolb
inc
add
mov
adc
add
js
add
adc
push
aad
sbbl
cmp
jne
add
lcall
add
mov
ja
or
repnz
add
cli
cmp
mov
xor
cs
int3
scas
mov
push
add
mov
and
fstpl
inc
jecxz
enter
mov
cld
or
out
sub
mov
cmp
add
mov
jbe
jp
and
jne
lcall
scas
call
lock
inc
jae
test
sub
mov
cld
push
or
mov
add
sbb
adc
out
dec
add
in
sub
and
lods
cmpb
out
sbb
out
mov
adc
pop
das
les
push
js
push
fiadds
mov
push
xchg
shll
xchg
sbb
cwtl
mov
xor
dec
std
cmpsb
mov
shlb
cmp
xor
fisubrs
xorb
sub
xorb
push
outsl
add
sbb
lcall
or
scas
sub
add
pop
sbb
imul
les
ljmp
sub
lcall
stos
call
cltd
xor
mov
ficoml
cmp
add
jbe
xor
sbbb
adcl
testl
xor
lock
test
and
jne
pusha
push
les
fcmove
das
push
xchg
sub
xchg
mov
pop
stos
jle
or
push
test
push
popa
push
xchg
cld
das
in
imul
sbb
pop
mov
adc
xchg
test
cmp
out
jp
addl
shll
and
add
cmpsl
add
inc
loopne
rolb
xchg
push
inc
mov
or
int3
cwtl
mov
inc
jno
sbb
or
inc
jecxz
inc
test
jmp
call
mov
push
cli
push
std
sbb
fistps
jle
mov
in
sti
dec
out
repnz
sbb
pop
jnp
push
ds
push
test
clc
pop
jecxz
xor
pop
sbb
add
pop
aas
jle
lret
inc
call
jg
sub
daa
fwait
xor
mov
push
push
cwtl
call
incl
inc
jb
inc
mov
cmpsl
sbb
cmp
repnz
and
mov
mov
mov
test
cli
adc
and
decl
std
sub
xchg
mov
sbb
push
xchg
pushf
bound
idivb
das
push
fcmovne
das
mov
addr16
cwtl
stos
sub
pop
mov
loop
loope
mov
int
jmp
dec
std
add
xor
stc
mov
lods
jo
nop
cmpsb
xlat
or
jbe
sub
fildll
in
iret
std
add
jbe
dec
adc
in
xchg
cli
xchg
addr16
add
loopne
inc
or
xchg
icebp
mov
add
test
push
lea
pop
fucomip
push
leave
cwtl
daa
jg
dec
jecxz
data16
sahf
inc
add
int
or
std
xor
stos
and
imul
push
sar
fmul
pop
mov
cmp
std
outsl
scas
jo
in
add
addr16
lock
and
test
mov
or
push
repz
sub
lds
inc
dec
ljmp
sub
lods
xor
test
pop
sbb
sbb
xlat
mov
mov
xchg
add
insb
and
push
je
and
adc
mov
push
and
test
mov
sbb
fwait
mov
ja
inc
and
dec
es
in
lret
push
add
inc
out
xchg
pop
lock
lods
jmp
cmp
dec
cltd
pop
sub
lcall
cmc
jmp
push
add
hlt
jmp
add
cmpsl
mov
ljmp
mov
jge
nop
mov
pop
loopne
sbb
lods
add
pushf
inc
push
xchg
cli
stos
idivl
mov
sti
iret
scas
lds
or
data16
xchg
lods
jge
jp
and
mov
pop
pusha
inc
sub
xchg
jo
and
sub
dec
fmuls
mov
jle
fs
and
in
add
or
jbe
mov
mov
push
jno
repnz
testb
cwtl
andb
filds
lds
inc
sub
cmc
inc
cwtl
xor
xor
sub
lret
cmp
xor
cltd
stos
psubsw
jne
lret
jbe
inc
pop
std
inc
inc
andl
xor
adc
add
and
mov
mov
mov
pop
or
ds
sbb
xchg
nop
dec
pop
mov
nop
insl
scas
mov
adc
sub
mov
mov
orb
lret
or
jae
and
jo
inc
and
out
outsl
into
inc
sbb
xor
ficompl
xchg
pop
jle
pushl
cmp
xchg
cmpsb
ficoms
clc
ja
sbb
mov
ret
push
adc
cmp
fdivr
mov
jno
add
in
xor
in
cwtl
adcl
nop
divl
and
cmpsb
cmp
push
or
push
and
dec
addb
bound
xlat
mov
mov
mov
add
and
or
push
hlt
lds
xor
push
dec
adc
shl
testl
adc
add
pop
or
fistps
mov
imul
clc
je
rorb
decl
ficomps
pushf
rcrl
sbb
inc
adc
jns
loopne
dec
inc
jl
inc
mov
les
and
and
rolb
mov
sbb
cltd
push
push
and
sbb
js
jle
repz
or
dec
push
jae
sti
pop
or
xor
sub
test
jmp
mov
jne
outsl
inc
mov
inc
inc
mov
sti
xchg
dec
or
loop
out
jl
mov
dec
cmp
dec
mov
testl
jge
pushl
movsb
mov
push
es
cli
or
ret
lock
and
dec
and
and
mov
daa
bound
jle
bound
inc
sbb
mov
or
or
cmp
or
enter
xchg
and
je
out
adc
in
mov
jecxz
jle
into
adc
js
daa
enter
mov
push
decl
pop
dec
popa
aas
mov
ret
jecxz
scas
dec
in
cmpb
outsl
jns
xor
insl
repnz
cmp
add
sbb
mov
add
xorb
outsl
dec
jnp
mov
das
sti
je
js
xchg
rcrl
icebp
xchg
sbb
inc
adc
adc
cmp
sub
into
es
xchg
fcmovu
xor
mov
enter
mov
cld
test
pop
into
inc
sbb
and
ret
pop
fbstp
mov
mov
cld
out
xchg
popf
xchg
aaa
mov
leave
add
cmp
mov
mov
xadd
mov
fldt
movsl
jp
sbb
pop
mov
ss
cmp
xchg
jno
clc
jg
call
add
mov
xor
loope
and
es
jl
cmp
cmp
pop
lahf
jle
cld
mov
gs
and
sub
jg
fisttpll
inc
test
cmp
clc
mov
ljmp
add
or
mov
cmpl
add
mov
repnz
or
outsb
xor
inc
xchg
xlat
xchg
scas
or
lods
adc
pop
daa
and
mov
stos
stos
lea
out
add
adc
or
lods
add
cmp
or
adc
xor
push
out
lods
mov
sahf
sbb
xchg
test
or
xor
les
add
and
pop
call
dec
sub
adc
test
inc
mov
std
das
cmp
push
mov
lcall
sar
add
das
sbb
xor
add
mov
xor
loope
test
std
jae
mov
loope
out
daa
incb
sub
mov
or
and
push
es
push
mov
fbstp
inc
mov
jns
sbbl
pop
nop
pop
add
add
sti
inc
sub
and
ftst
in
xchg
or
adc
lods
cmp
and
fcmovbe
sarl
cmp
push
mov
mov
ja
rcr
movsl
pop
push
mov
sub
cmp
adc
cmp
mull
sbb
xor
and
xor
push
out
xchg
bound
adc
loop
push
and
inc
movsb
fs
cmp
sub
sbb
cmp
aas
arpl
add
ret
addb
loopne
ret
leave
inc
imul
inc
loope
les
sbb
mov
cli
pop
or
jbe
sbbl
jmp
jle
mov
push
mov
and
cmc
loope
adc
jg
lcall
pop
pop
cmp
incl
mov
push
sub
fwait
aad
loopne
inc
and
mov
dec
xchg
call
test
mov
pop
jle
ret
les
rcll
das
std
adc
xor
jg
icebp
cmp
cmc
arpl
push
push
test
or
call
inc
ret
sub
jmp
jo
mov
out
icebp
inc
push
adc
push
sub
adc
mov
out
or
push
hlt
mov
in
outsl
cmp
push
sub
and
mov
fwait
dec
cmpsl
aas
loope
push
fldt
xchg
sti
or
cmpsl
dec
add
sub
cmpsb
ljmp
movsb
or
xchg
xor
dec
jecxz
sbb
mov
xchg
test
cmp
test
imul
popf
cld
jge
ljmp
lock
int
mov
into
ret
add
ljmp
decl
pop
and
push
and
inc
or
mov
outsb
addr16
or
jg
xchg
mov
bound
sbb
mov
lock
lods
leave
insl
cmc
das
cld
push
fstps
adcl
sub
sub
es
push
hlt
call
outsl
sub
inc
aam
push
mov
test
add
test
xchg
cmp
sub
sbb
repnz
add
ja
pushf
pop
push
xchg
and
jnp
or
adc
fidivrl
das
jno
sbbb
rcll
outsl
sub
adc
xchg
test
ljmp
adc
sahf
mov
and
inc
push
enter
decl
cmp
std
sub
ret
pop
push
adc
in
mov
gs
or
mov
pop
fwait
add
mov
or
push
outsl
addb
dec
lret
ljmp
mov
pop
push
jno
push
and
push
psubb
dec
in
out
push
push
sbb
sbb
dec
cmp
push
mov
or
fcoms
pop
ljmp
mov
flds
mov
insl
inc
cmp
mov
cmp
adc
push
les
inc
and
pop
sub
mov
pop
leave
and
sbb
lods
stc
movsb
sub
add
inc
orps
adc
outsb
add
and
pop
cs
mov
enter
adc
sub
fs
and
jo
and
jno
xchg
add
mov
inc
adc
sbb
push
subb
sti
sarl
popa
push
and
lock
cmp
test
xor
addb
aas
imulb
dec
mov
loopne
lods
fcomps
movsb
mov
adc
popa
movl
ja
add
sbb
sub
xor
adc
xchg
lea
push
pop
jge
adc
push
or
cwtl
xchg
xchg
jne
add
cmc
add
inc
mov
add
xor
stos
sti
cmp
sahf
rolb
pusha
add
fcomps
sti
mov
stos
xchg
push
repz
jno
or
push
roll
repnz
adc
add
sub
lea
and
call
push
lret
stc
adc
xorl
rorl
test
jbe
cmp
outsl
xorl
push
jb
add
inc
inc
adc
mov
imul
inc
subl
shlb
add
rorb
std
xor
push
mov
lds
xchg
mov
lock
pop
and
xor
or
insb
xlat
inc
nop
inc
iret
dec
pop
xor
fadds
mov
inc
pop
sub
ret
test
or
adc
loopne
sub
cmp
jb
rolb
and
adc
inc
int3
jno
push
inc
sbb
xor
imul
cmpsb
xchg
cmp
mov
inc
lret
mov
mov
test
xor
xchg
int3
xor
in
inc
fcoms
pusha
fsub
hlt
pop
adc
mov
xor
add
enter
insb
popf
push
add
add
and
inc
mov
push
xchg
test
and
sbb
xchg
lds
nop
push
xchg
orl
rclb
inc
adc
lea
enter
enter
nop
sub
rorb
push
xchg
bound
repnz
jmp
cld
nop
xchg
cmpsb
fcmovnu
adc
dec
mov
add
mov
or
cmp
in
popf
in
cwtl
add
add
sub
xchg
push
daa
sbb
mov
fsubl
inc
cwtl
cmp
aaa
test
pop
mov
jb
or
and
mov
dec
xchg
je
lds
stc
dec
mov
loop
in
sub
xchg
sbb
jb
sbb
jl
pusha
icebp
jae
or
fldl
mov
test
call
inc
cld
dec
rolb
adc
in
loop
jo
inc
pop
test
inc
jle
es
gs
and
pop
mov
fnstcw
mov
or
aaa
add
mov
mov
into
inc
push
sbb
xchg
inc
dec
sbb
and
shrb
jo
mov
fwait
dec
jg
inc
cmp
and
out
call
xor
push
movsb
or
ss
sahf
out
xor
int
or
push
xor
cmp
xor
ror
repnz
les
jo
shlb
and
hlt
jae
sub
pop
pop
or
repz
in
adc
mov
gs
call
inc
xchg
stc
fxtract
out
jle
lea
je
bound
xchg
pop
popa
pop
dec
shll
das
int3
mov
and
fsts
mov
hlt
cmp
add
adc
push
std
cli
pop
sub
xchg
nop
aaa
adc
xchg
mov
je
dec
mov
jg
add
repnz
jl
cmc
fwait
data16
fwait
jecxz
int
cltd
icebp
aas
leave
push
xchg
sbb
mov
push
inc
mov
mov
mov
aam
ja
or
mov
inc
sar
jo
shrb
push
rcrl
jg
mov
incl
push
inc
lret
in
gs
fs
push
jnp
mov
add
ret
xchg
mov
imul
mov
xor
adc
jl,pn
sti
dec
xchg
mov
imul
or
aaa
lcall
in
and
es
lcall
inc
mov
aas
inc
mov
or
or
pop
add
std
fbstp
loop
pop
ret
push
pop
cmp
scas
fldenv
xor
jecxz
std
test
sti
sbb
repnz
loop,pn
push
ret
jecxz
xchg
adc
ret
mov
addr16
les
push
popa
and
loopne
mov
xor
faddl
sub
out
es
jne
arpl
idivb
aaa
cmpb
fsubr
pushf
jp
or
ja
divb
mov
roll
jmp
mov
push
pop
cmp
test
cmp
sub
and
stos
cli
pop
inc
add
mov
push
jcxz
ss
test
mov
mov
lcall
jl
mov
cli
push
mov
dec
pop
xorl
in
arpl
cmp
js
sbb
std
scas
test
lcall
or
je
pop
cmpsb
sbb
enter
and
jbe
into
into
or
add
add
daa
cmp
jg
jg
xchg
inc
sub
inc
mov
mov
xchg
fisttps
mov
dec
jmp
lret
add
push
push
sbb
jp
jbe
adc
call
xor
arpl
adc
mov
add
ffreep
mov
sub
bound
shlb
fdivs
add
lcall
cmp
idivl
inc
inc
mov
or
pop
mov
or
sbb
inc
cmp
or
mov
paddusw
push
cmp
cmp
mov
mov
add
cmp
int3
fists
xchg
xchg
mov
push
cmp
push
add
sbb
negl
inc
sbbb
jmp
xlat
pusha
push
cmc
push
mov
xor
cmp
cmc
lret
cmp
push
jne
adc
loop
dec
loopne
jecxz
fildll
sub
adc
hlt
lods
lcall
pop
cmc
mov
mov
adcb
jp
test
add
mov
out
xor
add
subl
scas
sub
sti
push
adc
in
mov
pop
lock
loop
mov
cmpsb
jp
stos
stos
bound
xor
aad
pop
lock
xchg
das
cld
inc
fwait
adc
stos
es
test
mov
mov
xchg
adc
add
and
stos
mov
sbb
test
repz
add
dec
stc
mov
sub
pushf
pop
in
jns
adc
cmpsl
arpl
jbe
pop
or
ficomps
ret
shll
imul
rcll
mov
jmp
movsl
in
mov
arpl
and
xor
xchg
and
push
lahf
cmp
and
pop
js
sub
xchg
addb
popa
add
loopne
insb
inc
sti
repz
mov
call
jnp
mov
test
push
sarb
add
cmp
pop
or
ljmp
fwait
ds
xlat
or
and
jmp
and
mov
jg
stc
scas
dec
add
add
or
movsb
xchg
push
sbb
pop
stos
mov
and
lods
stc
mov
or
shrl
inc
repz
in
add
lods
push
in
jo
rorl
cmp
stc
bnd
inc
xorb
les
add
jo
or
repz
rolb
xor
cmc
add
pusha
or
mov
xchg
xchg
inc
pushf
mov
icebp
mov
fldl
mov
xlat
adc
mov
dec
enter
adc
sarl
lcall
adc
in
add
fdivs
or
sbb
adc
rol
rolb
xchg
imul
rcl
pop
int3
push
jl
push
sub
outsl
test
pop
xchg
add
test
push
adc
addr16
xchg
stos
push
xchg
sahf
dec
jp
rclb
mov
rclb
es
or
and
cmc
dec
sbb
mov
ret
mov
add
adc
or
shlb
nop
out
add
ficoms
or
xor
into
rcl
xchg
mov
mov
sbb
adc
loope
aam
inc
mov
dec
cmp
jno
add
xchg
jmp
movsb
push
adc
sub
jno
adc
jne
push
mov
scas
popf
cli
xor
adc
dec
xchg
jmp
pop
inc
or
ret
jge
inc
jbe
fimull
lcall
push
dec
inc
inc
loopne
cmp
in
pop
icebp
fidivrl
add
aas
fcompl
test
les
xor
je
add
xlat
xor
inc
aaa
cmp
push
push
sub
movsl
inc
sbb
jl
bound
add
mov
jmp
loopne
insb
cs
sub
push
repnz
mov
xor
ret
repnz
cmp
pop
dec
push
lahf
add
push
adc
sbb
or
cmp
mov
addb
xchg
fcoml
sub
hlt
test
sub
rcll
insw
outsl
xchg
or
cmp
and
fimuls
jge
adc
mov
in
mov
sbb
addb
mov
shl
fimuls
push
outsb
adc
test
aam
incb
fimuls
inc
fwait
jp
xor
add
adc
in
fisttpl
into
push
inc
lock
xchg
jle
or
and
enter
adc
data16
mov
sub
int3
jecxz
jle
dec
sub
jl
adc
xchg
cmp
inc
pop
in
pop
lock
lret
fistl
fsubrs
subb
push
push
push
push
mov
jecxz
outsb
test
js
leave
push
shlb
dec
fwait
add
mov
hlt
lods
xchg
in
jnp
dec
repz
sbb
fwait
pop
jae
adc
adc
pop
inc
xor
mov
fs
add
pop
out
outsl
push
movsb
or
xchg
roll
xor
ja
sub
stos
push
out
sub
xchg
push
addb
roll
jge
fwait
lock
mull
test
adc
arpl
test
mov
add
push
xchg
divl
push
in
jmp
mov
push
mov
mov
cmc
jmp
data16
sub
adc
xor
or
adc
subl
inc
lods
sbb
out
jle
cmpsb
cltd
or
test
pop
repz
mov
sbb
shrl
pop
mov
jo
jnp
fdivs
mov
push
into
pop
inc
outsl
sbb
test
lret
push
mov
push
in
das
imul
mov
stos
pop
jg
push
sahf
scas
sbb
xchg
jge
data16
jecxz
fstps
das
adc
mov
mov
pop
js
jecxz
dec
inc
push
test
shl
scas
mov
or
and
rorl
orl
or
jnp
xchg
shlb
ret
xlat
rdpmc
lds
or
out
popf
adc
adc
sub
add
inc
push
push
or
in
movsb
loopne
orl
es
lods
xlat
sbb
dec
mov
push
adc
test
test
ja
jne
addr16
aam
fimuls
push
loop
adc
inc
push
push
imul
xchg
mov
xchg
mov
sub
loope
and
loope
adc
adc
push
faddp
loopne
imul
jmp
sbb
jne
mov
fldt
je
ror
adc
sub
sbb
loop
inc
xchg
mov
pop
xchg
and
loopne
mov
pop
es
insl
or
or
add
pop
pop
icebp
lods
xor
dec
pop
or
es
test
or
jae
mov
roll
cmp
shl
jne
or
fwait
sbb
mov
add
pushf
ss
push
xchg
iret
mov
add
xchg
sbb
test
filds
pop
aam
push
mov
call
dec
sahf
push
jnp
leave
jmp
loope
les
popf
cmp
xor
xchg
pop
pop
mov
xor
push
or
rcr
mov
dec
lcall
xor
dec
add
sbb
dec
inc
dec
add
xlat
add
or
jb
dec
sub
ja
mov
nop
and
in
jmp
std
push
icebp
fs
and
cmp
stc
shll
add
mov
loope
adc
pop
xchg
lock
xlat
scas
incl
cld
push
data16
jbe
mov
jb
fadds
nop
mov
movsb
and
rorb
mov
mov
andb
adc
shll
and
popf
in
lods
out
loope
sbb
mov
xor
in
sahf
dec
mov
icebp
dec
sub
repnz
sbb
xchg
jno
xor
add
sbb
or
repz
push
repz
dec
or
mov
icebp
xor
icebp
arpl
inc
and
xchg
push
out
add
les
cmpsb
movb
adc
and
sbb
stc
mov
ret
xor
je
xor
mov
mov
sbb
sbb
adc
pushf
js
in
pop
mov
repnz
xchg
and
add
notl
pop
cli
pusha
nop
sahf
jae
mov
adc
and
call
xor
cwtl
mov
inc
rolb
movsb
fwait
aam
cs
mov
jmp
inc
jg
je
push
mov
lock
test
sub
adc
xlat
roll
scas
and
or
ss
imul
mov
hlt
add
out
and
mov
mov
dec
sbb
and
and
mov
cmc
fiaddl
popa
fs
inc
jle
or
sub
sub
fdivrp
dec
dec
adc
or
pop
pop
arpl
sbb
jbe
out
test
aad
push
ss
dec
les
jp
test
add
push
xor
xor
aaa
cmp
mov
or
fnstenv
dec
inc
push
mov
push
mov
jbe
in
in
add
call
xchg
lock
test
je
ljmp
and
mov
leave
scas
ret
add
pop
daa
into
xchg
jmp
and
lods
sbbb
test
xor
addr16
je
rolb
imul
roll
pop
xor
add
lea
adc
iret
or
and
xor
lods
lret
sbb
int
pop
push
jg
cmp
daa
cwtl
ljmp
icebp
lret
pop
xchg
and
mov
leave
jmp
xchg
inc
ds
adc
pushf
mov
inc
xor
test
es
add
fisubs
pop
nop
jb
jbe
repnz
mov
insl
dec
rclb
js
inc
jno
push
jge
jge
lcall
loope
fwait
std
lret
pusha
cmp
enter
vfmadd231pd
jmp
mov
call
mov
xor
fistpll
mov
sub
mov
and
mov
popf
dec
add
test
and
das
lcall
push
add
or
adc
repz
pop
push
addr16
dec
in
pop
mov
push
jecxz
roll
andl
or
pop
repnz
mov
add
ret
mov
sbb
subl
sub
xlat
sub
xor
pusha
push
incb
xchg
js
bnd
movsb
sbb
sub
fwait
add
dec
jmp
test
cwtl
mov
pop
pushl
mov
or
incb
subb
pop
iret
lea
shlb
cmp
sub
cmpsl
and
or
dec
lret
sub
nop
or
inc
adc
mov
cmp
lds
or
dec
dec
clc
shl
sti
jo
jg
adc
adc
sub
lcall
loope
aaa
test
or
push
mov
pop
inc
dec
idivb
popa
lods
xor
pushf
ds
sbb
clc
pusha
lock
repz
push
mov
jne
mov
insb
dec
test
push
ss
test
cmp
xchg
pop
adc
stos
movsb
imull
xor
mov
lahf
and
inc
and
push
xorb
nop
or
cmp
xchg
mov
inc
test
call
ud1
jo
pop
jg
imul
and
xor
jne
rcrb
sahf
dec
xchg
and
and
mov
lock
loopne
xor
push
add
add
mov
and
test
cmp
cmp
je
or
arpl
ss
push
and
fldl
mov
xor
jecxz
mov
pop
cli
push
xor
dec
sbb
add
jmp
or
ret
std
or
or
push
int3
mov
movsl
jae
jae
mov
xchg
xchg
xchg
cwtl
or
loopne
insb
pop
out
aad
outsl
inc
add
out
addb
xor
test
ds
outsl
insl
dec
jns
dec
cli
mov
push
shlb
fildl
mov
xor
jge
lock
rcrl
insb
and
add
add
jmp
rolb
lods
add
rcll
xchg
pop
add
inc
sbb
pop
shlb
fildll
mov
in
dec
hlt
shrl
push
or
mov
daa
push
push
mov
mov
sbb
in
sub
ss
addr16
mov
xchg
adc
and
adc
mov
fstpl
mov
mov
fadds
ds
cwtl
xor
xchg
mov
xor
clc
adc
cmpsl
pop
mov
sub
push
mov
push
push
stc
icebp
std
or
add
push
pop
push
int3
jp
rcll
cmp
or
inc
add
add
scas
test
jmp
pop
dec
in
add
push
rcl
sti
or
adc
fistps
inc
xlat
addl
dec
xchg
pop
jge
adc
lret
mov
or
lcall
sub
mov
or
pop
out
sub
sti
ret
sahf
mov
mov
sub
add
icebp
sbb
fdivrs
dec
sub
ds
cld
ja
mov
out
mov
sub
mov
jmp
repz
in
cmc
aaa
mov
aad
jno
pop
rol
jl
add
push
fildll
lcall
fisubl
pusha
loope
mov
add
jmp
dec
jo
orl
inc
adc
cmp
in
sbb
pop
jb
dec
scas
pop
rolb
lea
mov
rclb
sbb
adc
add
sbb
pushf
out
mov
inc
subb
jb
mov
xlat
mov
xor
push
push
or
sbb
lods
call
add
inc
lock
ret
dec
push
mov
xchg
mov
xchg
mov
or
out
dec
sub
fs
ror
lahf
lock
pop
call
shlb
jo
bound
push
and
or
add
cmpsl
inc
loopne
xor
enter
pop
fwait
xchg
in
or
in
mov
ret
dec
test
or
je
dec
sub
data16
or
mov
dec
hlt
inc
push
lahf
rcrb
aad
jnp
test
rorl
ja
or
shll
ror
icebp
mov
vmovups
jmp
add
icebp
inc
andb
jp
pop
add
xchg
ja
rolb
loope
jmp
mov
xchg
xchg
xor
std
push
in
jo
in
in
mov
popa
add
cmp
stos
or
cmp
mov
or
xchg
std
dec
push
cmp
rorl
cmpsl
mov
loopne
mov
jge
addl
mov
ljmp
mov
gs
nop
or
ret
rolb
sub
popa
mov
and
lock
sarb
fdivs
xor
pop
push
xor
roll
adc
mov
or
ja
hlt
jb
fs
add
dec
loopne
push
xchg
and
jne
sbb
popa
add
fsts
test
cmc
inc
push
push
or
sbb
lahf
out
stos
pop
mov
xchg
push
xor
loope
in
sbb
push
jg
idiv
dec
test
jmp
jne
add
jae
fildll
xchg
outsb
add
adcb
or
or
push
and
js
mov
cmpsb
dec
clc
es
ja
inc
jnp
add
out
popa
pop
iret
std
ljmp
dec
xor
data16
stos
xchg
pop
push
pop
repnz
jge
int
mov
arpl
or
cmpsl
ret
test
jp
push
sbb
out
mov
mov
cmp
jp
mov
cmp
push
mov
loope
push
mov
add
scas
vfrczps
xchg
jp
pop
lret
shlb
sbb
add
adc
pop
adc
mov
mov
aam
dec
xchg
repnz
mov
adc
mov
mov
xor
add
mov
push
mov
add
andb
jbe
dec
inc
or
jmp
xor
test
mov
pop
jne
inc
push
das
out
bound
mull
mov
pop
adc
test
insl
sub
arpl
xchg
xlat
rcr
nopl
sub
adc
les
fcomps
mov
inc
hlt
jecxz
mov
lahf
mov
mov
hlt
mov
push
mov
jb
hlt
dec
psadbw
out
and
add
jecxz
cmpsl
adc
push
cmp
cltd
insl
lcall
adc
xlat
jb
sbb
inc
adc
div
push
xchg
and
adc
mov
adc
faddl
stos
or
lock
neg
jne
imul
or
jl
add
shr
push
add
add
cmp
and
xlat
push
psraw
pop
sti
push
push
icebp
adc
daa
addb
cmp
jns
inc
das
add
int3
push
lods
stos
sarl
mov
test
ja
xchg
jg
pop
add
push
sbb
lret
jne
add
xchg
cltd
inc
or
pusha
ss
sbb
mov
rorb
int
jns
outsb
stos
adc
test
jmp
jo
stos
sbb
jne
mov
jns
movsl
fisubrs
jl
lock
or
subb
add
pop
mov
pop
cmp
popf
and
pop
cmp
test
add
orl
pop
inc
lods
sub
add
push
xor
xor
adc
test
aaa
xor
cli
cmp
addl
jne
call
pop
pop
push
scas
or
out
lret
and
mov
andl
stos
push
inc
push
jge
jl
mov
pushf
and
add
mov
xlat
sub
iret
pop
ret
inc
fmull
xor
sub
dec
cmp
jge
aaa
dec
lods
sub
mov
mov
sub
xor
jno
push
add
fs
pushf
pop
call
pushf
sahf
and
in
enter
sbbb
jo
pop
push
add
mov
push
addr16
sarb
add
or
aas
mov
orl
fwait
int
mov
and
test
add
dec
mov
push
or
sbb
loop
xor
nop
stc
into
dec
aad
into
add
dec
cld
int3
sahf
rcr
test
std
push
mov
jb
daa
add
aas
cltd
jg
rcrl
sub
loopne
fisubl
cmpsl
mov
adc
sahf
movsl
pop
dec
adc
iret
pop
jno
jnp
pop
cltd
and
mov
stos
lea
daa
popf
les
sbb
cmpb
loopne
repz
popf
das
cmp
fidivrs
mov
push
fadds
adc
xor
jge
hlt
sub
loope
fcmovb
mov
and
movsb
or
and
and
sub
xchg
je
ficompl
mov
sahf
movl
in
add
lcall
lea
mov
outsb
xchg
shll
es
or
ja
das
data16
rcll
outsb
andb
pop
push
lret
mov
add
arpl
aad
pushf
jb
xor
inc
push
mov
push
and
adc
jmp
cmpsb
jmp
movsl
test
ret
cwtl
dec
jle
add
inc
aas
push
or
inc
add
inc
lods
pusha
sarl
mov
sub
dec
mov
fs
ffreep
or
call
sbb
lcall
gs
movsb
data16
ja
xor
pop
aaa
ret
rcrb
jns
loopne
int3
add
int3
lret
cmp
sbbl
int
movsb
cld
and
cmp
mov
jecxz
dec
popf
add
cmp
cwtl
inc
add
and
inc
push
sbb
add
std
add
inc
adc
inc
xchg
or
sub
int
inc
hlt
fdivl
es
add
out
shlb
addr16
or
jae
es
inc
xlat
test
stos
jmp
sbb
lcall
aam
add
sub
sub
mov
ret
adc
jae
add
nop
mov
jmp
mov
aas
and
xor
adc
enter
pop
nop
push
ja
mov
imul
call
icebp
xchg
xchg
mov
lock
adc
sub
jno
add
sub
dec
push
jnp
sbb
inc
sar
fcoms
sub
test
push
lds
inc
movl
cmpsb
aaa
add
es
xchg
fwait
clc
lret
sub
jp
lods
cmp
into
cld
and
sub
aaa
jnp
mov
add
cmp
jo
bnd
mov
mov
sbb
adc
rclb
add
mov
sbbb
aaa
pop
ss
pusha
add
sbb
mov
lock
cmp
cld
cmp
xchg
or
out
loope
inc
adc
mov
das
clc
daa
and
push
fcoml
dec
hlt
into
fsubrl
xlat
adc
mov
mov
push
fwait
and
outsl
bound
mov
lahf
add
in
mov
jae
in
aam
push
out
push
test
cmp
mov
push
jp
xchg
or
pop
sub
sbb
rolb
cs
mov
push
shlb
aam
ret
inc
outsb
sti
push
cli
and
push
sub
xchg
sub
or
int
or
out
imul
adc
shr
push
fcoms
cmp
jbe
pushf
lods
xchg
ret
xor
mov
dec
mov
dec
mov
mov
add
xchg
dec
mov
in
jb
shlb
rcll
jb
sub
mov
cltd
rcrl
sbb
or
mov
pop
cmc
shrl
inc
xor
lret
jns
gs
sbb
outsb
add
xchg
adc
mov
cmp
add
aam
mov
les
rorb
push
push
add
mov
je
mov
js
adc
add
rcll
mov
inc
cmp
mov
add
mov
inc
bound
or
cmp
scas
inc
outsl
popa
fst
add
rorl
cmp
push
jae
cmp
or
add
or
jo
dec
inc
sar
pop
inc
sub
xchg
add
jg
or
mov
fsubs
cmp
filds
clc
ljmp
mov
pop
js
scas
fistpll
mov
call
push
rcrl
add
mov
out
test
adc
pushf
xchg
addr16
sbb
lock
incl
xlat
mov
dec
in
clc
repnz
xor
fcoms
ljmp
mov
sub
rcrl
cmpsl
mov
divl
sbb
xchg
xor
movsl
inc
inc
cmp
sahf
dec
push
fcmovu
lret
sti
call
adc
add
or
and
lea
cmp
mov
xor
outsl
push
jo
fcomps
dec
jg
fistps
popa
jne
cmc
or
ret
ret
mov
mov
xchg
lahf
or
in
jno
adcb
daa
xchg
fsub
add
call
jb
lcall
loop
or
add
sbb
mov
add
icebp
sbb
push
popa
and
cmp
pop
cwtl
mov
cmp
push
aad
or
mov
adc
pop
jg
mov
add
cmp
stc
enter
and
std
jmp
dec
mov
sahf
invd
xor
inc
mov
sbb
shrl
test
insb
add
adc
movsl
mov
addb
stos
jp
bound
pop
pop
jle
loopne
push
inc
sbb
sbb
das
inc
cld
in
jecxz
and
push
push
orb
bound
xlat
outsb
push
fisttpl
or
lret
pop
or
out
out
xlat
fcmovnu
test
andl
dec
pop
add
mov
das
call
push
pushf
mov
adc
dec
mov
fbstp
jg
add
push
jo
and
xchg
fdivs
mov
xor
or
and
xlat
jg
fiaddl
lcall
inc
in
rorl
fwait
fs
flds
cltd
or
aam
call
insl
dec
in
mov
adc
pop
mov
push
mov
jns
xlat
sub
adc
mov
add
cmovo
inc
cmp
push
and
dec
push
int3
and
inc
je
mov
negl
mov
call
scas
inc
xor
dec
push
dec
imul
ror
ret
and
push
inc
dec
mov
jne
and
aaa
xchg
out
jge
sbb
loop
popa
cs
add
jae
imul
fnstsw
cwtl
adc
lret
inc
and
xchg
or
mov
aam
mov
imul
lock
adc
jg
xor
mov
repnz
in
mov
lock
mov
andl
or
ljmp
mov
jnp
aam
adc
inc
and
gs
les
sub
pop
lahf
and
or
jo
call
lds
mov
jne
lock
or
pop
pop
in
out
mov
inc
adc
add
pop
push
or
shlb
mov
int3
dec
inc
inc
add
adc
add
sub
fwait
loopne
dec
adc
mov
push
out
das
add
mov
dec
inc
lock
lret
inc
sub
and
or
jmp
mov
mov
fidivs
adc
push
push
aad
loope
loopne
jg
adc
push
pop
sbb
adc
pop
int3
push
push
jne
sti
loop
mov
mov
enter
dec
add
ret
sbb
or
inc
test
lea
and
and
inc
adc
out
in
or
jecxz
cld
lods
sbbb
xor
outsl
lea
cltd
cmp
mov
mov
mov
inc
fisttpl
jbe
push
mov
or
mov
mov
mov
int3
fs
mov
sbbl
ret
sub
cmp
mov
cmpsl
and
sub
je
xchg
inc
adc
fwait
xor
cmp
add
inc
jg
scas
xor
jnp
stos
inc
stos
pushf
leave
xchg
sub
and
mov
fisubs
push
push
repz
sub
push
cwtl
outsb
addb
dec
pop
in
scas
sbbb
inc
les
sbb
repnz
std
mov
pop
clc
push
mov
loope
shrl
int3
adc
lret
in
sbb
insl
jbe
mov
add
addr16
pop
hlt
in
inc
pop
mov
aad
popf
adc
inc
inc
xchg
dec
or
xor
xor
push
push
jb
jp
orb
push
jo
xchg
add
loope
loope
cltd
and
cmp
int
jg
adcl
and
andb
repnz
mov
and
out
inc
mov
inc
adc
data16
push
cmpsb
sbb
add
mov
sbb
lcall
test
cmp
push
pop
fs
and
fdiv
adc
or
xor
testl
sbb
jmp
push
out
jne
ljmp
push
adc
lods
lea
mov
repnz
or
xchg
das
sbb
or
pop
ficoms
jne
shlb
mov
or
add
addb
call
shlb
out
xor
and
addr16
in
mov
jo
stos
or
push
sbb
lret
and
nop
stos
xor
mov
ss
push
clc
adc
mov
mov
adc
mov
sahf
push
mov
dec
filds
or
dec
jbe
mov
add
inc
mov
sub
push
into
cmp
adc
push
cmp
or
fimull
xchg
lcall
dec
push
push
out
or
bound
iret
outsl
add
divl
mov
mov
xchg
add
fucom
adc
stos
adc
cli
pop
sub
aad
dec
add
push
xchg
je
test
inc
sbb
add
mov
dec
addl
bound
stos
fnstenv
roll
and
je
sbb
xor
pop
sub
xor
das
mov
or
inc
cmp
add
sbb
notb
clc
flds
mov
aam
inc
dec
cmp
jl
adc
sbb
les
xlat
mov
out
fcoms
sub
pop
pop
and
mov
rorb
cmp
ljmp
mov
add
pop
or
xchg
or
add
stos
mov
and
stos
or
xor
addr16
test
or
dec
divb
jecxz
pop
xchg
xor
xchg
lret
nop
xor
test
or
sbb
jno
lds
sahf
icebp
dec
push
lahf
add
ret
jb
mov
lcall
pop
popa
and
js
or
pop
pop
mov
and
push
xchg
pop
rcl
lea
cltd
jb
add
push
xchg
stos
xchg
divb
inc
jb
call
inc
mov
dec
push
inc
repz
popa
js
jmp
pop
add
add
test
mov
xchg
dec
stos
and
and
add
and
sbbl
daa
push
lock
xchg
or
mov
pop
orl
ffreep
outsl
xor
cmc
sbb
fcoms
or
and
hlt
and
out
push
dec
shrb
push
jae
xor
fnsave
loop
aas
out
out
push
pop
pusha
fcomi
jo
push
pop
dec
inc
fs
push
fbld
inc
mov
icebp
adc
or
or
push
sbb
push
sbb
inc
push
sub
inc
xor
xlat
inc
mov
and
in
dec
cltd
sbb
jo
fsubl
mov
enter
sbb
mov
sbb
shl
push
pop
inc
out
add
in
adc
and
sbb
or
sub
insb
outsb
mov
adc
lahf
adc
movsb
or
jns
mov
ja
ja
adc
dec
adc
sub
add
out
jbe
mov
and
mov
and
adc
dec
sub
push
xor
and
es
sbb
and
sub
js
jno
in
or
leave
pop
jl
mov
cli
mov
adc
aad
rcr
in
xor
mov
ret
and
lea
call
jp
add
add
or
or
xor
cmp
xorl
js
jg
adc
aaa
mov
adcb
js
cmp
sub
push
fisttpll
mov
push
adc
jb
push
cmp
jp
test
pop
or
cli
fnstcw
scas
call
lds
mov
bound
ret
inc
hlt
cli
aad
mov
or
test
push
push
repnz
xchg
inc
fcomp
or
cli
xor
arpl
adc
mov
jl
lods
dec
mov
outsb
and
fcomps
test
les
mov
adc
adc
push
pop
xor
je
cld
rclb
pop
fs
dec
jg
dec
dec
and
adc
cmp
clc
mov
orb
test
pop
mov
xor
out
and
sbb
add
push
je
addb
ljmp
adc
adcb
mov
inc
xor
and
cmp
inc
scas
adc
pop
mov
inc
pop
inc
push
jns
fstpt
fwait
adc
xor
in
les
adc
daa
adc
ja
push
adc
pop
add
jnp
mov
inc
push
int3
jo
call
addr16
test
out
cmc
sbb
jge
fcmove
int
pop
pop
inc
jge
sti
xchg
sbbl
adc
pop
or
cmp
insb
push
int3
sbb
adc
test
pop
stos
mov
jle
mov
loop
imul
fxch
mov
nop
mov
jg
mulb
xor
out
aad
loope
jo
pop
sbb
std
adc
jge
loope
cwtl
mov
add
sbb
jge
test
fwait
cmp
add
dec
push
cwtl
push
ljmp
and
dec
sub
aaa
mov
jo
xchg
adc
orb
fcomp
shlb
or
scas
adc
outsb
jecxz
xor
addb
test
sub
outsb
mov
pop
cmpsl
sbb
add
icebp
jno
mov
mov
push
lock
or
testb
shrb
inc
dec
mov
dec
push
push
pop
mov
fs
xchg
inc
cmpsb
xchg
sbbb
push
sarb
popf
lock
xor
sbb
hlt
push
push
add
and
cltd
imul
adc
push
adc
inc
shrl
pusha
add
hlt
adc
mov
or
add
and
notl
push
rcll
lea
add
inc
rolb
cmp
pop
inc
mov
add
jns
insb
mov
test
push
es
or
cmpb
mov
std
aam
mov
orb
jnp
adc
xchg
and
push
ficomps
mov
jl
outsb
or
add
mov
xchg
and
in
movsb
stc
jmp
add
and
shlb
inc
je
jb
inc
dec
addb
rolb
pop
test
cld
lahf
add
sbb
xchg
adc
les
ljmp
rclb
js
mov
fidivrs
int3
pop
sub
mov
inc
pop
mov
jne
jecxz
sbb
adc
xchg
mov
dec
dec
inc
xor
jg
shrb
fs
inc
cmp
push
shll
jmp
inc
xor
scas
inc
push
mov
jo
testl
setge
das
jl
mov
mov
shll
les
pop
add
or
push
xchg
popf
aad
dec
xchg
andb
fistpll
adc
pop
jno
inc
xadd
jle
add
out
sbb
and
pop
push
int3
sub
add
and
mov
test
rorb
add
xchg
jo
xchg
dec
loop
xchg
lret
mov
pop
or
jo
mov
hlt
stc
xchg
dec
cmp
cmp
adc
xor
mov
inc
jno
push
mov
movl
jg
call
adc
lods
add
mov
lock
jae
push
mov
in
cmpb
shll
cmp
cwtl
rcr
xchg
pop
add
int3
or
jmp
incl
xchg
pop
xchg
adc
das
sub
popf
cwtl
sbb
mov
jg
or
jns
sbbl
subb
cli
loopne
or
cli
or
xchg
mov
lods
fwait
in
dec
insb
sbb
xchg
add
cwtl
pop
jg
push
iret
fidivrl
call
ja
adc
popa
inc
push
fildll
pushf
movsl
pop
dec
int3
add
loop
inc
adc
mov
cmp
fidivrs
gs
adc
clc
mov
test
sub
sbb
sbb
iret
adc
mov
popf
aam
jg
call
and
jecxz
push
adc
movsb
bound
nop
mov
decl
popa
jl
adc
xchg
mov
mov
xchg
lahf
xchg
cmc
fcos
ret
shlb
loope
xchg
sub
inc
clc
stos
pop
js
and
and
add
pop
or
incl
adc
adc
adc
add
dec
or
les
dec
and
adc
adcb
outsl
jne
and
adc
and
addb
adc
dec
inc
and
and
insl
imull
inc
add
adc
das
test
mov
adc
mov
pop
or
ficompl
mov
inc
sub
test
inc
or
pop
mov
jbe
inc
mov
sub
in
outsl
mov
add
dec
inc
inc
test
out
test
and
adc
inc
or
mov
loop
inc
push
push
pop
cs
fstpt
pop
add
add
fcmovnu
fiaddl
jne
xchg
je
or
cmp
jg
or
push
fstp
dec
dec
nop
push
add
daa
add
xor
dec
fbld
or
mov
out
mov
cmp
repnz
insl
outsl
adc
sub
adc
dec
mov
pop
fs
push
imul
aad
adc
mov
lods
mov
addb
and
xor
push
aas
xor
add
pop
xor
mov
orl
add
addb
popa
dec
and
push
sbbb
add
mov
adc
or
outsb
scas
jne
mov
popa
add
push
xor
add
dec
xchg
pop
add
test
sbb
add
es
test
mov
mov
xchg
adc
inc
stos
rcrb
mov
mov
mov
inc
lcall
mov
in
add
cmp
ss
or
push
sub
test
add
adc
xor
fistpl
pop
adc
loope
cmp
inc
jmp
add
icebp
and
sbb
xor
repnz
or
pop
imul
xor
dec
daa
or
mov
or
add
fsubrp
xor
add
sbb
xchg
add
pop
fisttpl
outsb
adc
in
add
fisttpl
add
add
addb
push
jo
dec
push
push
inc
imul
ss
push
cmp
add
pop
mov
aad
sbbl
pop
adc
and
ret
shrl
add
popa
jae
push
sbb
push
mov
xchg
adc
lcall
sub
ret
scas
mov
leave
sub
and
and
mov
inc
mov
inc
xor
insl
inc
and
or
add
insb
cmc
adc
or
xor
sub
push
mov
sub
push
int
mov
rorl
int
popl
xchg
inc
push
adc
pop
imul
fsubrs
or
mov
rorb
mov
lcall
push
ss
xor
mov
mov
xor
mov
pop
adc
or
loop
mov
imul
int
fistpll
xor
cmpsb
push
out
es
pop
outsb
outsl
adc
int
push
add
fistpl
inc
jmp
or
pop
std
or
jo
xchg
pop
sub
sbb
xor
jo
out
push
outsl
mov
addb
cmp
add
push
pop
cltd
dec
lods
push
inc
inc
popf
outsb
mov
imul
add
ja
fwait
mov
std
dec
adc
je
imul
and
aad
imul
dec
mov
pusha
push
pop
aas
push
push
dec
sub
dec
inc
cmp
pop
jnp
inc
cli
xchg
push
imul
sbb
imul
je
jae
push
daa
dec
cmc
sub
mov
add
dec
or
arpl
dec
push
push
ja
jmp
cmp
sbb
or
ljmp
repnz
loop
dec
xor
rcll
test
and
aad
adc
lds
out
mov
adc
xchg
jno
pop
xorb
jmp
dec
lds
xor
adc
jmp
mov
pop
cli
push
mov
hlt
adc
mov
lret
push
adc
add
jmp
lods
aad
add
pushl
mov
or
jae
orl
lret
aas
mov
call
pop
push
pop
sub
fs
mov
cmp
inc
push
adc
jg
cmp
shll
add
dec
and
add
sbb
popf
daa
loop
jge
rolb
fcomi
scas
xchg
mov
or
jl
xor
fwait
mov
mov
add
incl
cltd
jne
jp
mov
rorl
ljmp
les
add
sarb
inc
cli
dec
adc
add
jno
js
sbb
xor
sbb
push
push
dec
fimuls
add
push
or
mov
inc
aad
mov
xor
or
push
add
and
add
or
das
dec
push
pop
mov
loopne
mov
test
add
push
jbe
pusha
test
dec
or
in
adc
mov
cli
jmp
shll
xchg
inc
rep
daa
add
xchg
fdivl
test
pop
cli
mov
outsl
add
push
mov
jne
xchg
cltd
mov
jmp
xchg
inc
loope
pop
call
xchg
add
imulb
jno
mov
sub
fistpl
inc
shll
roll
int3
fldenv
pop
push
mov
mov
xchg
cmp
adc
push
and
lcall
xchg
ljmp
movsl
cmc
cmp
cli
or
push
add
pushl
cli
rcll
or
and
mov
or
pop
inc
jg
mov
inc
adc
ret
add
mov
pushl
lods
push
test
mov
ror
xchg
or
jo
jle
sbb
push
mov
xor
and
idivl
addb
pop
clc
sti
fcoml
jmp
je
sbb
lods
adc
xor
pop
stc
dec
popa
inc
fstps
cmp
cmp
cmc
mov
and
push
cmpsl
lea
mov
xor
and
mov
mov
adc
adc
inc
push
popf
incl
or
loope
sub
adc
xlat
inc
mov
ret
dec
jb
sbb
lds
inc
arpl
or
add
loopne
enter
rorl
jmp
mov
enter
push
adc
push
dec
insb
ss
add
arpl
cmpsb
mulb
jae
jg
nop
mov
and
inc
push
xchg
pushf
xorl
pop
es
incl
add
mov
mov
clc
cld
inc
adc
and
dec
sbb
mov
fisubrs
adc
testl
cltd
cmp
xchg
pop
andl
stos
adc
or
mov
test
jmp
or
fs
dec
dec
cmp
das
mov
xchg
push
sub
or
pop
xorl
xchg
sbb
jne
test
inc
jp
into
loope
outsl
mov
add
cli
ds
aad
pusha
xor
popf
or
ret
cmc
sti
mov
xor
inc
or
stos
movsb
outsl
mov
lcall
rolb
mov
aam
push
jge
lock
int
filds
add
int3
jnp
and
mov
sub
jmp
icebp
mov
pop
outsb
dec
inc
jmp
in
inc
cmp
dec
xchg
sbb
clc
pop
mov
addl
lea
sbb
decl
movsb
aas
out
fs
cli
in
out
paddb
hlt
jg
stos
and
int3
outsb
rorb
sti
out
test
mov
mov
mov
roll
imul
lcall
or
cmp
lcall
and
or
cmp
adc
sbb
jmp
dec
mov
mov
cltd
inc
cmpsb
adc
mov
pusha
xchg
in
mov
ret
adc
sub
fs
inc
xchg
mov
fs
mov
decl
add
bound
sahf
and
xlat
pop
mov
fisubrl
cmp
pushf
add
add
rorb
jae
loope
or
inc
add
decl
dec
inc
and
adc
mov
out
int3
insb
test
rcrl
add
xchg
lcall
pushf
jne
inc
lods
sbb
ljmp
mov
pop
ds
sub
cmp
idivb
lahf
xchg
add
pop
incl
sahf
add
push
hlt
xchg
push
popa
ficomps
xlat
js
jg
stos
outsl
mov
pop
addr16
jns
mov
decl
repnz
sahf
rcr
cmp
rcl
cmp
push
mov
loopne
jne
fistpll
mov
std
mov
adcl
adc
cmc
add
xchg
cmp
cli
fists
ds
mov
xchg
and
into
dec
outsl
inc
fldl
or
mov
inc
cld
ljmp
pop
mov
shlb
popa
or
mov
jmp
fcoms
jle
cli
mov
fisttps
sti
add
stos
dec
add
pop
ret
mov
push
int3
icebp
hlt
scas
cld
adc
adcb
pop
sub
nop
and
mov
decb
rorl
aas
fwait
pop
ret
movsl
mov
fldenv
enter
or
push
fildll
std
das
pop
or
mov
cmp
adc
imul
fxch
bound
outsb
jecxz
xor
mov
jg
sub
jns
repnz
rcrb
les
mov
jg
xlat
shlb
bound
adc
sbb
pop
outsb
movsl
inc
data16
mov
cli
lcall
add
and
or
mov
fwait
xor
xchg
fdivrp
mov
icebp
mov
lods
aam
jecxz
mov
movsl
lcall
mov
dec
mov
das
xchg
mov
add
incb
dec
mov
leave
ret
push
out
shll
sbb
mov
test
and
jno
mov
sbb
scas
ds
dec
and
jg
cli
in
mov
inc
add
sub
pop
ljmp
sub
adc
popa
fwait
out
stos
int
popf
pop
add
mov
rcrl
adc
test
mov
mov
decl
flds
ret
out
rorl
add
pop
out
mov
mov
addb
pop
xor
movsb
andb
mov
test
mov
sbb
mov
addl
xchg
leave
pushf
push
mov
push
in
push
daa
add
cmpsl
aaa
clc
das
std
pop
jnp
insb
push
sub
mov
pop
jmp
cmp
mov
jmp
les
jg
mov
das
imul
mov
sbb
jmp
mov
sbb
adc
aaa
and
movsb
outsb
pop
lods
xchg
or
mov
incb
cmc
dec
inc
jno
sbb
dec
inc
lmsw
jle
stos
mov
push
faddl
add
cmc
jg
sub
and
add
push
inc
outsl
cld
lods
mov
and
sub
rolb
mov
xchg
repz
push
inc
adc
fs
dec
mov
add
adc
out
incl
adc
add
mov
mov
fisubrs
sub
add
or
popa
sar
decl
fisubl
fwait
jb
addl
int
lret
add
aam
push
pop
jg
jl
jno
sahf
and
in
xchg
push
inc
jg
decl
xchg
xor
cmp
test
loope
xchg
adc
negb
mov
mov
cli
into
lahf
ficoml
in
and
lods
pop
loope
cmp
mov
out
les
or
push
adc
push
out
or
movsb
sahf
call
cld
iret
push
inc
adc
outsb
imulb
push
js
push
cmp
or
sub
jle
inc
cmp
or
lret
fnstsw
dec
pop
sub
inc
mov
int3
mov
std
test
mov
and
cltd
add
lcall
push
pop
jmp
jmp
pusha
mov
mov
orb
es
xchg
sti
sub
mov
test
lcall
fwait
cmp
or
aaa
mov
pop
lret
call
or
xorb
out
lret
sub
pop
mov
adc
jge
int3
cwtl
jmp
adc
jge
fcomi
mov
pusha
and
aam
and
mov
mov
or
inc
mul
sbb
mov
lcall
in
das
fdivr
jg
pop
cli
cmp
push
adc
pop
inc
mov
rorl
or
mov
pop
lods
xchg
imul
mov
lock
call
ja
je
pusha
mov
icebp
pop
daa
adc
ja
push
xchg
fadds
jb
push
mov
push
push
inc
lods
cli
das
jmp
mov
fiadds
enter
sti
push
sti
xor
adc
std
int
lea
incb
stos
mov
dec
push
outsb
mov
add
mov
cld
test
jo
adc
or
mov
push
ljmp
dec
push
xchg
cmp
jg
mov
or
cmpsl
scas
inc
lea
pop
out
push
xor
push
test
je
das
xor
idivb
movsb
jbe
sbb
lahf
inc
or
inc
rolb
subb
or
push
pop
mov
push
jo
icebp
and
call
push
pop
stc
sbb
prefetchnta
mov
cwtl
inc
loopne
stos
inc
stos
test
adc
pusha
push
nop
test
pusha
push
dec
jg
adc
jmp
lds
inc
sbb
adc
push
push
ficoml
xchg
push
fstl
sub
mov
sbb
inc
jne
mov
movb
repz
or
dec
lods
fildll
add
and
or
shlb
mov
popa
aas
sub
insl
push
jns
scas
jp
loopne
stos
mov
and
outsl
je
pop
out
xchg
adc
push
ljmp
adc
movsb
mov
xorb
xchg
pop
adc
loop
add
repz
pop
and
inc
cld
fistpll
lea
cmp
mov
adc
movsl
imulb
addr16
loop
pop
sub
lods
insl
sti
in
sti
inc
mov
in
xor
jae
xchg
add
in
jmp
bound
and
jb
mul
mov
mov
mov
pusha
jg
in
test
rcrl
pop
rolb
aad
add
jns
cmp
mov
jecxz
sbb
jg
dec
cmpsb
jo
push
cmc
mov
js
xchg
jns
cmp
andb
into
adc
test
push
in
jne
lock
mov
inc
add
test
mov
push
cmp
sbb
mov
push
cmc
pop
sbb
inc
cld
add
mov
inc
enter
pop
and
pop
pop
xchg
stos
push
imul
mov
sub
hlt
fs
or
sbb
aad
and
rorl
jmp
add
popf
in
jecxz
push
cmpb
sub
aad
xchg
mov
xchg
jl
or
subl
push
or
hlt
fstpl
sub
fwait
pop
cli
mov
loopne
xchg
ret
nop
mov
lcall
inc
out
sub
adc
cmp
std
mov
test
outsl
js
pop
insl
ficoms
mov
and
xor
mov
cld
or
clc
xchg
jne
xchg
sbb
insl
cli
jg
adc
pusha
jmp
jnp
subl
rorb
xchg
mov
and
or
addr16
mov
pushl
sbb
ficompl
adc
in
mov
out
pop
mov
xor
and
andb
and
out
xchg
lcall
xor
pop
adc
daa
pop
sub
dec
xchg
and
call
mov
sub
rcrb
xor
das
std
loope
mov
in
mov
mov
call
sbb
mov
aam
adc
mov
push
cmc
xchg
decl
inc
and
sub
addl
sbbb
fstpt
aam
mov
outsl
std
repnz
mov
test
pushf
add
pusha
and
daa
lret
call
das
mov
push
push
push
dec
cmpb
pop
sub
loopne
sbb
inc
cld
pop
testl
and
sbb
mov
loop
and
daa
ja
pop
mov
stc
call
lods
xor
push
adc
mov
sub
dec
out
in
cmp
inc
dec
adcb
pop
jg
cs
xor
lds
cmp
cmp
cli
sbb
push
xchg
add
push
mov
pop
in
mov
cmp
add
push
mov
aaa
jg
pop
clc
or
aas
nop
popf
mov
jnp
or
clc
in
cli
and
dec
ret
aaa
iret
loop
jg
inc
adcb
inc
decb
and
jno
ljmp
scas
xor
or
test
fildll
js
and
adc
sub
push
inc
xor
xor
jmp
xchg
into
lret
push
cmp
or
cs
ficoml
cmp
insl
fsubl
pop
pop
inc
xor
movups
mov
daa
inc
sbb
mov
and
or
push
pop
or
scas
mov
inc
push
loope
fdivrl
dec
mov
cmp
and
jl
xor
and
sub
orb
adc
nop
adc
addb
mov
popa
lret
inc
sub
daa
and
ret
cs
push
add
cmc
iret
push
sub
lea
pop
or
lods
aaa
jmp
add
test
loop
cmp
shlb
test
sub
and
cmp
ret
in
and
dec
cmp
in
mov
sub
pop
pop
xor
cmp
mov
jnp
decb
mov
jl
xor
adc
sub
push
or
inc
adc
and
outsl
lods
mov
out
xor
dec
cli
cld
insl
xchg
clc
fbstp
sbb
enter
pop
xor
ja
cld
jmp
jmp
out
nop
rcl
call
pusha
cwtl
je
cmpb
lret
dec
addb
inc
xchg
insb
lea
das
std
jmp
mov
rclb
outsl
mov
cmc
call
pop
xchg
loope
pop
js
dec
adc
mov
add
sbb
mov
pop
sbb
lret
ss
movsl
add
movsb
fistpll
adc
cmc
sbb
int
xchg
dec
dec
das
ja
xor
decl
lcall
shl
out
xchg
xor
sbb
adc
ljmp
or
decl
ficomps
adc
inc
push
xchg
xchg
sub
ss
fistps
xchg
lea
add
out
mov
nop
mov
insl
push
or
adcl
daa
es
xor
mov
inc
pop
fs
dec
and
outsl
clc
push
scas
jo
xchg
inc
addr16
inc
test
daa
jbe
rcrb
dec
mov
xchg
push
in
mov
inc
adc
jecxz
jg
jg
out
sbb
add
mov
jb
test
mov
jmp
movsl
pop
push
outsl
leave
sub
adc
orb
rorb
push
push
push
push
fimuls
and
mov
mov
xor
adc
ret
cmp
or
outsl
mov
leave
stc
sbb
lods
pop
and
cmp
into
clc
mov
call
pop
out
int
das
je
popf
aad
lcall
orb
in
and
xor
mov
aaa
repnz
daa
pop
jb
cltd
jb
std
inc
push
aam
adc
pusha
enter
icebp
dec
jg
jnp
dec
mov
pushf
enter
lock
sbb
call
mov
repnz
mov
jge
mov
push
ror
xchg
outsl
fdivr
pop
pushf
fiaddl
jmp
ja
int3
adc
call
jl
je
xchg
or
mov
sub
push
bnd
ljmp
push
daa
mov
pusha
inc
loope
adc
jg
dec
xor
pop
cmp
xchg
or
lods
jecxz
sahf
xchg
addl
sti
mov
jb
outsb
lahf
cmp
xor
jg
and
addl
lods
cmpsl
dec
mov
sbb
lock
test
cmp
or
mov
mov
pop
call
jb
fmuls
aas
icebp
sub
aas
add
push
push
mov
pop
aam
sbb
call
or
shrl
fs
pop
pop
clc
pop
push
rcrl
leave
pop
scas
mov
jb
nop
sub
fisttps
xlat
xor
mov
jno
and
cmc
sub
cltd
enter
outsl
arpl
std
jne
xchg
mov
jge
mov
arpl
inc
mov
fistpl
pop
sahf
or
nop
pop
jp
icebp
and
adc
jne
vshufps
add
dec
pop
adc
add
incl
out
push
adc
push
sarl
loop
inc
mov
push
lock
incl
xchg
cmp
inc
pop
mov
jmp
sbb
lock
xor
push
push
push
popa
popf
movsl
push
and
pop
cli
dec
call
or
dec
xchg
ret
nop
xor
jns
shlb
sti
jns
arpl
stos
push
cltd
sbb
jnp
xor
mov
neg
cmp
adc
push
cmp
cwtl
in
inc
xor
and
push
mov
loopne
ss
icebp
gs
fwait
adc
ljmp
jmp
je
mov
xchg
js
sub
call
jo
pushl
hlt
jmp
imul
mov
sub
and
jno
shrl
mov
pushf
jle
outsb
sbb
or
stos
jo
aas
add
sti
test
push
cmp
cmp
inc
aad
pop
pop
pusha
adc
inc
aam
lret
pop
xchg
hlt
adc
ficoml
mov
rcl
sbb
and
pushf
inc
dec
and
popa
cmp
mov
pusha
pop
sub
inc
jnp
leave
lcall
ljmp
lret
jb
xchg
shll
mov
sub
fistl
hlt
daa
and
adc
lods
nop
adc
and
push
in
rolb
mov
rcrb
imul
dec
add
rol
outsb
inc
incl
fmuls
dec
xchg
and
adc
jae
add
lcall
add
test
shlb
sub
add
movswl
jns
cmpl
ret
pop
ret
cs
mov
sbb
lret
and
lret
hlt
addps
lock
dec
jmp
das
test
add
ja
mov
adc
dec
movsb
sbb
movsb
sbb
ror
imul
stos
and
lods
push
out
mov
inc
push
ret
orb
jno
push
adc
sti
mov
push
adc
push
cmp
lahf
das
xorl
sbb
sbb
outsl
mov
pop
lds
pop
push
into
loop
xchg
and
hlt
push
test
lcall
adc
xlat
test
sti
sbb
dec
dec
sbb
sahf
roll
aaa
ror
xchg
pop
cmp
pop
or
popa
scas
xorl
mov
inc
xor
cmp
dec
inc
test
cltd
in
jbe
pop
push
push
adc
sahf
out
pop
popa
xor
dec
daa
or
adc
divl
add
inc
sub
or
into
fninit
xor
ja
imul
cld
and
movsb
or
add
iret
xchg
pop
push
arpl
lahf
lret
shlb
dec
pop
sti
fwait
addl
dec
add
test
dec
movsl
decb
inc
mov
sbb
mov
xor
jg
loope
iret
or
pop
jge
inc
sub
jb
ss
sub
daa
and
aad
fidivs
pop
and
iret
ljmp
cld
subb
mov
and
mov
mov
inc
cmp
sbb
ret
imul
paddw
adc
rorb
mov
mov
mov
jg
outsb
mov
imul
pop
mov
call
or
cmp
les
rcrb
add
mov
ljmp
mov
scas
mov
sub
faddp
leave
adc
dec
imull
pop
xchg
aas
mov
add
dec
ror
test
std
pop
jg
dec
rcrl
xchg
rcrb
arpl
xchg
out
outsl
aas
orb
adc
lock
or
insl
pop
fstpt
and
idiv
jmp
add
frstor
imul
push
test
cld
call
sbbb
les
in
mov
loope
sar
repnz
int3
mov
or
add
dec
ljmp
mov
inc
jb
in
ds
roll
pop
sahf
rorl
jg
loope
mov
rcrb
xor
pushf
xlat
int
pop
incl
xchg
clc
cs
jl
add
into
push
leave
nop
movhps
sbb
jl
xor
lcall
and
jl
add
jg
fisttpl
popa
shlb
ret
sub
scas
and
pop
mov
mov
cli
das
add
sbb
dec
les
fcomip
jg
shlb
and
addl
push
mov
ds
es
test
jle
pop
push
ljmp
add
xor
clc
incl
lcall
cltd
iret
and
mov
adc
ljmp
push
push
sbb
mov
mov
inc
adc
or
or
pop
xchg
jne
mov
mov
pop
imul
pop
push
fdivs
sbb
andl
pop
and
pop
adc
add
in
cmp
xchg
in
fucomip
push
jns
inc
add
je
xchg
sub
call
jnp
xchg
jg
call
xor
lret
adc
and
fists
xchg
sub
add
adc
decl
mov
adc
pop
xor
popf
inc
push
cltd
xchg
cmpsb
sarl
fucomip
outsl
xor
sbb
lods
xchg
rcll
mov
cwtl
hlt
addb
mov
roll
ss
adcl
mov
cmp
test
rolb
mov
push
mov
fwait
mov
adc
xchg
or
scas
imul
incb
inc
stc
inc
mov
mov
cmp
out
cmp
leave
adc
repnz
push
pop
mov
loop
jns
jg
mov
add
inc
mov
lods
or
pop
sti
loope
divb
sbbb
in
adc
out
cmpsb
decl
jb
xchg
fwait
out
dec
out
dec
adc
roll
xor
insb
gs
call
or
and
sbb
adc
adc
test
lods
cltd
xor
repnz
and
push
xor
clc
adc
xchg
fwait
sbb
test
jno
cli
iret
ss
inc
hlt
outsl
jg
subl
dec
test
mov
xchg
int3
mov
inc
ds
mov
cmpsl
das
mov
insb
cmp
test
pop
xchg
dec
sbb
movsb
push
mov
icebp
jmp
lods
add
sbb
xor
nop
outsb
call
sub
mov
scas
push
pop
sub
movl
stos
clc
sub
or
pop
or
jg
sbb
fildll
mov
fisttpl
adc
cmc
cmp
lds
mov
test
add
ret
mov
mov
jle
push
fisttpl
jp
push
mov
imul
repz
mov
arpl
and
jne
cmpsl
movsl
flds
xlat
out
sar
mov
or
lahf
aad
in
clc
test
add
roll
cmp
cltd
out
rcrb
movsl
xchg
jno
xor
jne
adc
out
mov
outsb
mov
add
fistpll
xor
pushf
xchg
jge
add
pushf
ret
pop
cmp
aad
sbbb
stc
sub
bnd
fistl
mov
adc
xor
push
rclb
clc
jns
test
lcall
jo
push
das
hlt
mov
pop
pop
test
push
pop
cli
incl
call
add
iret
movsb
xor
sbb
je
mov
std
sub
test
jle
jge
pushl
mov
add
shl
ja
sbb
pop
ja
dec
out
adc
pop
mov
add
insb
fsubl
sub
jne
in
outsl
mov
inc
or
inc
fdivl
rorb
xor
out
pop
adc
mov
aad
dec
xchg
push
mov
and
lock
andb
dec
test
adc
add
icebp
xor
daa
aad
inc
jl
sub
lret
scas
iret
jle
int
cld
out
loopne
pushf
cmp
and
or
adc
mov
ljmp
mov
xchg
inc
pop
idivl
push
nop
push
sub
aam
mov
fwait
daa
or
sbb
jg
xor
rep
out
sub
pop
sbbb
mov
incl
xor
scas
orb
iret
jg
fiaddl
aaa
jg
fucomp
jp
or
and
loop
enter
clc
lea
xor
das
mov
ljmp
add
movsl
orb
add
mov
out
ja
jbe
and
add
in
clc
lret
dec
repnz
adc
leave
xor
or
and
lret
lock
dec
push
sbb
shll
xchg
jae
xor
cld
ret
in
out
push
cmpl
sbb
mov
jmp
icebp
call
mov
shr
lods
pop
mov
adc
cmpsb
popf
icebp
in
jg
es
in
lahf
xchg
lea
sub
xor
or
ljmp
pop
addl
js
lock
jb
daa
test
or
decl
lds
test
out
mov
mov
movsb
and
push
sub
incl
adc
adc
mov
cmp
dec
jo
icebp
mov
outsl
iret
scas
jae
mov
add
xchg
hlt
or
and
pop
loop
sub
pop
insb
sub
pop
jbe
enter
les
and
dec
adc
fisubl
pusha
mov
push
add
mov
add
jp
add
ljmp
mov
cmp
pusha
daa
or
sub
jb
stc
test
pop
inc
in
scas
push
ds
cld
call
mulb
out
stos
int
and
xchg
cmp
ret
pop
aaa
ss
cmpsl
pop
jge
out
ja
addl
inc
push
mov
inc
sbb
out
cld
mov
jl
jb
xchg
repz
mov
shll
pop
pop
outsl
mov
fstps
xor
call
pop
scas
mov
addr16
arpl
add
cli
adc
pop
outsb
imul
mov
arpl
sbbl
jg
jecxz
aad
insl
pop
xor
repz
stc
sti
icebp
pop
dec
or
pushl
mov
or
cmpsl
pop
insl
js
and
shr
dec
sti
call
loopne
sbb
jmp
in
outsl
and
mov
xchg
scas
lods
aaa
mov
xor
sub
xchg
add
sbb
popf
bound
pop
lock
outsl
shlb
and
cli
add
mov
outsb
stos
les
lods
insb
cltd
hlt
add
pop
mov
mov
inc
dec
ret
ss
in
and
add
xor
ds
xorl
mov
fwait
ljmp
xor
jge
and
fistps
shrb
lret
cmc
xchg
cmp
inc
jae
mov
xchg
movsl
mov
push
fs
xchg
ja
xor
inc
pop
cli
fldt
sti
jecxz
push
imul
decl
ret
fs
pop
std
fistpll
add
push
xchg
scas
sub
cwtl
mov
outsl
call
xorl
in
pop
inc
inc
mov
nop
xor
incl
fdivl
mov
xchg
xchg
adc
nop
xchg
idiv
pushl
out
lcall
ja
std
rorb
sbb
imul
inc
sub
rcll
and
clc
pop
clc
imul
mov
daa
mov
or
and
in
in
inc
hlt
testb
sub
leave
mov
adc
cmc
mov
lcall
xchg
mov
pop
mov
movsb
cltd
add
shrb
outsl
add
push
das
andl
aaa
in
scas
decl
lcall
xor
int
dec
pop
sti
xchg
sarb
sub
test
lods
adc
sbb
test
dec
leave
rolw
push
push
test
cmp
jg
ljmp
js
xchg
cmp
popf
pop
es
jo
movsb
clc
jg
test
add
in
lahf
push
xor
ret
dec
std
dec
xchg
loope
test
mov
fs
cli
cmp
jl
sbb
add
leave
cwtl
mov
cld
jle
push
or
icebp
lret
jmp
sbb
or
fldl
test
inc
push
sbb
sahf
aad
dec
popf
mov
dec
xor
std
shrl
push
add
push
adc
adc
aad
test
dec
push
pushf
push
rorl
test
adc
inc
outsl
mov
cmp
lds
push
cmp
or
inc
adc
jns
pop
lds
or
sbb
add
cmp
add
shrl
or
cmp
in
add
and
mov
pushf
add
cmc
sub
lock
push
test
mov
clc
fldenv
dec
xchg
xor
mov
imul
popaw
pop
sbb
icebp
cmc
dec
xor
inc
loope
jecxz
sarl
icebp
lret
sbb
mov
pop
je
adc
sar
hlt
push
add
jns
sbb
adc
pop
sbb
inc
jle
std
add
call
rclb
push
fs
rorb
add
fldt
out
xlat
mov
loopne
cmp
lock
or
loopne
arpl
vpcmpeqd
clc
nop
push
arpl
into
mov
xchg
pop
scas
movsl
inc
mov
imul
decl
clc
mov
cmp
push
push
jg
xchg
fs
mov
jl
or
cmc
pop
addr16
mov
into
jmp
ss
pop
mov
fidivrs
fdiv
dec
jle
repnz
nop
lret
pop
sub
bound
incl
jb
es
mov
icebp
add
int3
inc
push
in
mov
adcl
ds
icebp
sahf
mov
xor
ljmp
lcall
bound
outsl
icebp
mov
mov
xlat
cmp
pop
clc
mov
cmp
ds
pop
mov
jecxz
popf
jp
mov
pop
pop
mov
pop
mov
out
jo
mov
fstpt
aad
std
cmp
mov
sahf
inc
pop
movsl
outsl
jg
movsb
ret
ret
pop
xchg
xor
dec
mov
sub
outsl
aam
stos
pop
fmull
cmp
mov
sub
data16
pop
jae
mov
mov
lds
jne
clc
or
push
or
in
aad
dec
dec
push
mov
data16
loope
rorb
aam
jecxz
mov
fwait
clc
adc
push
pushf
jecxz
pop
mov
cwtl
push
loope
or
lea
jl
out
pop
idiv
leave
dec
or
ds
in
fistpll
cld
pop
dec
nop
push
sahf
jb
jae
dec
jl
icebp
mov
jnp
jmp
cmpsb
sbb
pushf
std
pop
rol
cmp
mov
cmp
mov
mov
ss
jle
nop
mov
call
ds
dec
mov
add
xchg
dec
jno
xchg
clc
mov
dec
aas
bnd
ret
pop
jno
xchg
enter
jg
call
dec
ds
mov
inc
inc
inc
daa
mov
cwtl
arpl
imul
or
insl
jae
pop
jne
popf
mov
jl
mov
jno
jecxz
les
lret
xchg
inc
clc
jge
jl
push
jl
pop
jno
fildll
sub
insb
rol
nop
movsl
sub
scas
sti
adc
inc
hlt
incl
and
in
repnz
mov
into
daa
test
leave
adc
pop
mov
stos
push
loopne
call
ljmp
shrb
push
faddl
cmp
inc
outsl
ficoml
dec
ljmp
out
and
dec
ss
dec
ljmp
addr16
inc
sbb
cmp
adc
pop
push
push
pop
xor
stos
in
xchg
or
dec
sub
fbld
fwait
stos
fchs
pop
jae
les
sti
rcll
dec
cli
jne
lds
lods
mov
jecxz
mov
sub
xor
or
jle
mov
in
in
daa
mov
push
or
xchg
or
jl
nop
push
xchg
cmc
xchg
xor
mov
lret
shl
xchg
in
popf
push
test
shlb
adc
adc
sbb
push
sbb
sub
arpl
adc
sbb
in
ja
cmp
loop
sub
lcall
mov
push
ret
dec
out
fbld
add
add
in
sub
stc
std
sti
insb
dec
pop
aaa
pop
adc
sbb
leave
call
stos
or
sbb
pusha
in
bound
xchg
movsb
test
adc
add
mov
fistpll
test
mov
std
cmp
fsubrs
les
and
pop
icebp
push
or
adc
fisubrs
pop
nop
lods
mov
stc
mov
fmull
out
push
adc
xchg
cld
mov
mov
cli
push
add
ret
fxtract
or
mov
cmp
lds
mov
cli
adc
decb
imul
pop
mov
sbb
adc
in
mov
push
mov
add
dec
sahf
sub
push
adc
fidivrs
les
ss
sarb
popa
jo
pop
xlat
movsl
stos
addr16
cmpsl
cs
lcall
and
mov
and
fcmove
inc
rorb
dec
adc
jns
mov
xor
sbb
lcall
mov
or
out
ficoms
xchg
lds
bound
add
js
dec
cltd
shll
les
nop
push
or
lods
dec
cmpl
sub
int
loopne
and
sbb
xorl
inc
out
lea
mov
cmc
xor
addr16
in
sub
xchg
xchg
insl
adc
loope
xorl
mov
adc
loopne
inc
cmp
adc
add
aas
and
adc
xlat
sar
xor
sbb
xor
cmp
mov
cmp
sub
ja
ret
pop
roll
sbb
mov
push
cmp
inc
inc
mov
shr
pop
sbb
add
orb
push
mov
lcall
mov
lret
mov
loope
rcll
imul
out
pusha
aaa
xchg
cmp
add
sbb
loope
dec
daa
into
pop
cli
stos
clc
lods
clc
dec
or
loopne
aam
test
sti
dec
inc
mov
jno
cld
pushl
in
out
mov
xchg
sbb
loop
mov
inc
cmp
rclb
lcall
mov
xchg
xchg
ret
and
mov
in
jbe
and
xchg
inc
inc
inc
repnz
adc
mov
sbbl
icebp
adc
in
aaa
xchg
subb
and
rolb
dec
mov
aaa
push
jge
dec
das
fldt
hlt
cmp
call
ja
popl
lcall
mov
scas
decl
add
scas
mov
adc
inc
fwait
sti
movsb
inc
setge
cli
dec
jg
outsl
clc
sub
mov
xchg
addl
pushf
test
mov
test
loopne
es
bound
cmp
xor
decb
insl
mov
dec
fnstsw
sbb
pushl
setg
mov
mov
pushf
std
sarl
mov
in
clc
aaa
mov
subb
dec
roll
and
stos
imul
sbb
adc
ret
fildll
movsbl
adc
mov
push
outsl
cmp
mov
dec
and
mov
mov
aaa
cmp
decb
leave
sub
mov
cltd
dec
inc
xor
stos
stc
fucom
and
jle
mov
push
mov
jecxz
jno
adc
daa
ja
outsl
cmc
test
jmp
test
cmp
sti
mov
or
test
mov
xor
stos
mov
lahf
clc
test
fildll
xchg
mov
sar
mov
inc
cmp
mov
adc
mov
stc
jmp
inc
shl
cmpsl
and
sub
cmp
mov
fdivr
rolb
jmp
cmc
adc
fidivrs
xlat
aaa
in
adc
push
jmp
jmp
inc
add
in
lds
fdivr
mov
loope
dec
cmpl
mov
in
mov
mov
add
ret
test
ljmp
cld
add
inc
jnp
sbb
into
xchg
mov
and
ja
call
jg
dec
cwtl
pusha
xorb
and
mov
cmp
jno
mov
sbb
and
add
jmp
mov
push
sbb
out
dec
xor
je
rorl
negb
sbb
mov
pop
stos
pop
loopne
and
cli
call
and
movsb
jbe
flds
and
out
pop
lods
imul
lahf
not
sub
arpl
dec
and
mov
mov
push
jo
mov
test
incl
push
sub
inc
insb
mulb
xchg
and
adc
cmp
nop
dec
adc
incl
add
in
adc
sbb
mov
rcr
aad
or
insb
dec
push
dec
out
fbstp
shl
push
or
cmpb
sub
mov
xchg
sbb
mov
cmpsl
aad
xchg
es
jecxz
movsl
and
fistpll
rol
pushf
lds
add
insb
pop
mov
daa
clc
jno
mul
gs
dec
pop
sub
ja
in
push
inc
dec
lods
mov
in
dec
in
push
or
lods
imul
lods
mov
mov
xor
popf
movsb
cwtl
test
sbb
lcall
push
mov
in
sub
adc
xor
aad
in
ljmp
sub
xchg
add
pushf
inc
or
jbe
fiaddl
xor
add
push
pushf
dec
or
in
call
cli
fcoml
pusha
inc
jl
mov
add
and
mov
loope
pop
mov
push
mov
jecxz
in
call
hlt
jl
pop
in
movsl
adcb
mov
outsb
mov
xchg
cltd
in
dec
stos
aaa
icebp
pop
jge
mov
lahf
mov
push
xchg
mov
lea
fsubrl
div
les
add
pop
mov
or
loop
pop
inc
sub
xchg
sarb
jle
add
jne
sbb
mov
cltd
cmp
sbb
xchg
daa
jnp
fs
insl
jmp
sbb
push
orl
xchg
clc
jae
sarb
daa
sarl
jg
or
iret
sbb
in
fwait
int
insb
mov
ret
mov
clc
int
and
push
rol
cmpl
mov
fisttpll
xchg
ds
div
lahf
xor
jp
xor
fstps
out
clc
inc
movsl
sub
inc
xor
xchg
jb
icebp
cld
adc
shrl
push
push
jp
inc
sbb
cmpl
cwtl
dec
add
fadds
mov
test
stc
in
outsb
or
stos
clc
mov
and
mov
outsl
cwtl
pusha
mov
clc
test
jbe
xchg
nop
jmp
push
icebp
imul
clc
mov
inc
rorb
sarl
lea
jmp
xchg
inc
rcll
lds
fists
mov
arpl
out
call
jmp
mov
adc
mov
mov
mov
lret
gs
ret
or
mov
divb
mov
mov
push
mov
sub
je
clc
jno
ror
roll
pop
outsb
lock
cmpl
inc
clc
loop
jg
mov
pop
push
dec
xchg
push
jne
insl
sbb
inc
sahf
or
xchg
mov
add
mov
pushf
push
push
outsl
mov
lods
push
mov
push
mov
aam
loop
bound
dec
jae
lcall
negb
loope
dec
aas
jp
out
push
jnp
scas
cmp
pop
js
and
xorl
lcall
std
in
adc
adc
jmp
add
nop
xor
cmovs
push
ljmp
sub
xor
lods
into
sbb
cmp
or
jecxz
cld
aam
dec
decl
fcomip
cld
lcall
rorb
jns
pop
iret
cli
jle
lahf
aaa
jge
pushl
stc
lods
xchg
pop
jbe
stc
addb
dec
jmp
movl
repz
push
aas
xor
jle
nop
fnsave
or
or
push
icebp
mov
lahf
pop
out
jle
notb
test
insl
fs
cld
lret
int3
add
jg
iret
stc
jle
sbb
div
push
stc
scas
out
rorl
outsl
data16
dec
iret
cmp
fbld
aaa
stc
test
push
pop
sar
int
sbb
sbb
ljmp
cmp
out
mov
adc
fists
mov
add
cld
cmpb
stc
lea
push
test
ds
rclb
and
pop
js
mov
cld
mov
clc
icebp
xchg
jl
mov
pop
jecxz
lds
mov
xchg
push
mov
dec
add
clc
dec
and
bound
mov
shrb
xchg
adc
adc
ss
mov
or
imul
xchg
and
and
inc
mov
inc
dec
cmp
cmp
orb
loop
cld
mov
adc
add
ds
mov
sbb
mov
inc
pushf
mov
test
iret
cs
loop
lea
sbb
inc
jl
das
in
xor
sbb
or
loopne
pop
cld
aaa
ljmp
ret
fisttps
cmp
dec
xlat
push
pop
scas
xor
rorl
ret
das
jbe
push
and
outsl
std
in
push
pop
and
mov
mov
xor
jno
cmp
cmc
jmp
push
cli
dec
xchg
jp
mov
cs
imul
test
lahf
iret
dec
push
outsl
shll
xchg
clc
in
and
or
outsl
sub
cmp
cld
xor
mov
push
les
mov
enter
xchg
rclb
ljmp
mov
push
adc
pop
inc
dec
outsl
rorb
add
sbb
xchg
cld
movsl
mov
mov
inc
in
and
add
aaa
ficoms
hlt
mov
pop
lahf
sbb
xchg
mov
out
adc
add
je
cmc
das
mov
inc
hlt
sub
popa
in
dec
in
jge
jmp
ficoml
mov
xor
sbb
movsl
jg
nop
aad
hlt
ja
les
xchg
jle
inc
mov
lds
mov
clc
mov
adc
jbe
mov
frstor
aaa
cli
movsl
addr16
fs
adc
insb
sahf
pop
imul
mov
imul
jb
mov
insl
jns
xchg
insb
cmp
or
push
jo
rclb
orb
out
je
inc
js
dec
mov
add
add
add
pop
lds
mov
enter
sub
adc
aam
mov
jno
imul
inc
stos
mov
stc
jae
and
xchg
hlt
sbb
nop
loopne
and
ret
test
push
fcoml
push
adc
test
inc
or
mov
mov
out
pop
test
iret
push
incb
inc
popl
aad
popa
mov
jns
mov
dec
xchg
sahf
fidivs
bound
sub
pop
pop
fucomp
in
int3
pop
mov
fmul
lahf
jbe
cmp
rcl
fwait
sar
repnz
clc
lcall
inc
ss
data16
data16
movl
daa
loope
mov
cmp
loope
fisttps
getsec
xor
jge
mov
mov
push
call
adc
mov
mov
dec
insl
bound
addr16
repnz
lcall
fcmovne
das
cmc
dec
lds
fs
adc
pop
es
lcall
in
sub
ror
add
and
lock
std
lahf
jecxz
pop
mov
push
adc
stc
movsb
dec
pop
pop
sub
mov
adc
add
cld
jnp
cmp
sahf
inc
mov
mov
mov
fistpl
scas
mov
add
mov
xchg
mov
je
pop
nop
mov
pop
cli
lcall
js
fists
push
mov
jecxz
addr16
out
lcall
lret
repz
xor
or
hlt
imul
into
jl
pop
add
call
mov
sub
aas
mov
pop
ja
jl
add
push
daa
lods
adc
and
ret
pop
incl
sub
jae
fwait
imul
mov
xchg
jne
in
test
xchg
iret
sbb
jmp
cmp
mov
push
arpl
xor
mov
cs
mov
loop
mov
popa
loopne
movsb
shlb
loope
call
outsb
inc
inc
ds
std
scas
int3
sbb
inc
bound
movsb
outsb
jo
fistpll
adc
ljmp
cmpsl
dec
insb
and
pop
jmp
sub
sub
clc
in
push
popf
ss
xchg
push
mov
outsl
std
outsl
std
ljmp
repnz
aad
daa
les
cli
incl
fcom
hlt
mov
push
fistps
data16
in
lock
imulb
fdivrs
and
push
mov
inc
dec
mov
jg
aaa
test
cmp
into
dec
mov
test
inc
push
lret
sub
xchg
xchg
or
hlt
cld
imul
mov
pop
les
insb
or
jbe
in
inc
imul
mov
add
lahf
testl
adc
cmp
xchg
inc
out
inc
dec
mov
inc
dec
adc
fwait
jp
mov
mov
movsb
add
call
jae
dec
or
add
or
scas
jne
call
ljmp
stos
movsl
inc
das
fisttpll
push
adc
das
cmpsb
fisubl
test
mov
movsl
dec
xlat
push
lret
mov
out
cwtl
cmp
inc
xor
pop
das
xor
inc
or
sbb
jecxz
mov
cmp
push
das
mull
fiadds
andb
in
jmp
jg
pop
sbb
movsl
adc
jae
sti
call
mov
mov
addr16
in
cli
shll
ds
xchg
jecxz
sub
cmp
decl
std
sti
cwtl
mov
loop
fbstp
inc
rcll
xchg
cmpsl
cmp
inc
jg
add
lods
mov
dec
xor
aaa
lods
xchg
repnz
mov
stos
mov
mov
sahf
mov
popf
insb
or
jbe
imul
jne
lods
inc
clc
hlt
jg
dec
mov
dec
xor
push
mov
orb
jns
mov
lahf
cmp
lret
dec
dec
and
outsl
test
and
sub
mov
in
adc
pop
cmpsb
ljmp
pushl
sbb
bound
pop
js
xchg
adc
fs
iret
adc
jmp
orb
scas
in
dec
lret
adcb
pop
pusha
push
daa
pop
mov
cmc
lcall
stos
repz
call
mov
mov
mov
lcall
lea
add
cmp
push
mov
loop
sub
sub
mov
decl
pop
cmc
fimuls
test
lret
aaa
fisubs
and
shr
cli
jg
xlat
pushf
jns
repnz
sbb
enter
mov
add
shrb
xchg
in
mov
sbb
ljmp
loopne
mov
jg
lret
pop
movsb
out
sti
sbbb
lcall
mov
jmp
pusha
push
fsubs
cwtl
cmpsl
push
rorl
es
sbb
idivl
fistl
push
popf
mov
and
bound
jg
fisubl
cs
ljmp
inc
popa
stc
aad
outsb
fcmovb
sbb
movsb
sub
iret
sbb
scas
test
aas
loope
adc
mov
jg
rolb
and
mov
scas
test
xchg
push
xchg
xchg
scas
xlat
mov
pushl
jge
xchg
ja
fisubrl
outsb
dec
or
mov
decl
int
push
lret
push
popa
out
outsl
fadds
adc
push
adc
sub
arpl
push
push
mov
sbb
pushf
ret
pop
leave
mov
pop
call
scas
cltd
fstpl
rcr
mov
mov
xor
and
cmp
pushf
gs
mov
out
mov
sub
inc
loopne
xchg
push
adc
ljmp
inc
mov
xchg
dec
jns
or
in
ss
push
pushf
stc
adc
fadds
xor
std
sti
ficompl
loopne
pushl
faddl
cltd
daa
shlb
jecxz
mov
and
sub
stos
ds
pushl
test
shll
stc
pop
jo
jp
addl
add
mov
mov
pushl
lahf
adc
out
subb
out
test
adcb
incl
xor
decl
pop
xor
or
push
incl
pop
sbb
lods
in
mov
subb
adc
mov
mov
cmpl
aaa
add
mov
add
sarb
pop
or
outsl
pop
jbe
aaa
cli
call
popf
jmp
or
or
inc
cmc
popa
or
pop
pushl
lds
pusha
insb
mov
adc
mov
fldt
pushl
pop
fistpll
xchg
mov
sub
mov
aad
iret
rolb
xor
mov
jmp
arpl
ja
mov
aam
cmpsl
mov
mov
push
sub
cmp
fildll
xchg
lcall
std
inc
in
sbb
push
mov
aas
mov
fisttps
jl
push
lods
call
icebp
push
es
jmp
sbb
decl
imul
lea
xchg
or
jmp
sbb
cli
enter
push
pop
sbb
adc
outsb
or
pop
push
in
repz
lock
call
call
rcrl
xchg
jne
adc
mov
fmul
pushf
test
aaa
xor
decl
enter
lea
std
repnz
pop
xchg
aaa
clc
in
jae
mov
jl
mov
or
xlat
stos
xor
push
stos
mov
and
cmp
aam
call
push
outsl
push
push
js
add
mov
fbld
jne
aaa
mov
cmp
es
addr16
incl
mov
out
dec
mov
lahf
popf
cld
mov
std
xchg
stos
cmp
cs
push
inc
inc
cltd
xlat
insl
cs
aaa
adc
mov
scas
pop
jmp
call
add
enter
cwtl
jl
leave
in
or
xlat
mov
mov
fcomp
cld
enter
pushl
mov
iret
jmp
or
push
jbe
pop
das
loopne
mov
cld
incl
lret
add
push
pop
xchg
clc
mov
movsl
xchg
add
int3
call
clc
jb
sbb
dec
and
adc
push
xor
out
or
push
decl
ds
enter
add
mov
jae
pop
call
and
incl
add
test
dec
roll
out
cltd
stos
lahf
sbb
xchg
mov
jg
call
fcomps
push
sbb
mov
jl
shlb
xor
test
call
imul
int3
inc
lahf
push
imul
cld
movl
cmp
sbb
incl
out
pop
push
mov
lods
cmp
jg
ljmp
in
int
loope
ffreep
cltd
js
cmp
inc
mov
in
int3
lcall
or
pop
xchg
nop
popa
inc
test
lret
stos
add
jl
lcall
sar
decl
out
lea
mov
insl
pop
cmp
add
pop
orb
incl
and
insl
out
sub
push
data16
adc
inc
repnz
iret
pushl
in
or
lock
jge
inc
mov
sbb
jp
je
call
mov
in
in
jbe,pt
push
ret
dec
movsl
das
push
fcmovbe
push
aas
das
incl
inc
and
xchg
rclb
push
icebp
mov
pop
sbb
movl
incl
push
lahf
fs
adc
xor
adc
mov
pop
jge
pop
ds
pop
pop
xchg
jge
jae
add
mov
popl
arpl
or
dec
inc
jg
std
pop
clc
adc
push
stc
insb
mov
jp
cli
ljmp
cld
ret
shll
mov
adc
pop
roll
call
mov
push
push
test
jp
mov
decb
ret
ss
movsb
dec
and
lret
push
pop
mov
add
sub
lods
push
outsb
gs
jmp
movsl
incl
xor
or
dec
pop
adc
std
sub
push
mov
in
imul
call
sbb
out
mov
test
out
loopne
jno
scas
or
ljmp
cld
push
imul
push
cli
or
xchg
adc
mov
in
movsl
xlat
decl
shrb
lods
stos
xchg
incl
test
xor
lods
rol
outsl
std
incl
adc
push
jnp
in
cmp
rclb
dec
std
test
mov
int3
inc
xchg
adc
ret
pop
mov
pop
inc
ret
in
xor
inc
xchg
popf
xchg
insb
inc
out
sub
loopne
xlat
test
push
cmp
loopne
sub
adc
mov
scas
jb
lock
mov
add
cltd
sub
clc
je
sbb
cmpsl
std
fcmovnbe
cmp
xchg
mov
in
push
xor
movsl
mov
xchg
mov
or
mov
mov
nop
adc
adc
notb
sbb
xor
loopne
outsl
movsl
sub
lods
push
ret
or
lcall
ljmp
push
aad
je
cmpsb
aad
leave
inc
push
movsl
mov
lea
out
std
jmp
xor
out
sub
in
add
call
bound
xor
push
aad
sarl
push
mov
out
jmp
pop
mov
outsb
jmp
lret
mov
mov
xchg
and
clc
add
cmp
test
jnp
jg
push
repz
sbb
cmp
cmp
dec
or
pop
jns
xchg
rcrb
insb
es
arpl
jmp
sub
mov
and
ljmp
enter
aaa
pop
pop
cli
call
dec
jecxz
cmpsl
lods
sbb
les
dec
decl
sub
push
out
fsubp
pop
push
into
xor
push
adc
stos
add
loop
jecxz
cli
dec
sahf
fistpll
xor
cmp
xchg
stos
fdivs
push
std
push
ret
jl
shl
loop
xlat
jno
or
add
jno
call
cld
jmp
or
mov
inc
cmp
int
loope
outsl
mov
jae
sub
and
iret
mov
jno
add
stos
lcall
ljmp
pop
scas
and
dec
mov
sbb
mov
xor
mov
mov
jge
les
mov
test
out
fucomip
call
fneni(8087
call
pop
push
fdivrl
cwtl
aaa
es
test
std
lcall
mov
mov
cmpsl
xor
mov
data16
push
mov
ja
jmp
pop
insl
repnz
xchg
and
addb
aad
outsb
lock
decl
mov
adc
mov
xor
xchg
je
mov
sub
cltd
inc
xchg
sbb
incl
das
mov
mov
pop
jne
cmpsl
outsb
add
jbe
or
call
sbbb
or
cli
ljmp
stos
sub
mov
and
or
loope
sub
incl
aam
jb
pop
mov
sub
and
push
clc
lods
pop
cli
lcall
xchg
push
int3
mov
mov
shll
aas
push
mov
jnp
in
or
idivl
pop
jmp
mov
rorb
into
cmp
pop
imul
add
mov
rcrb
std
lcall
movsb
push
mov
test
mov
jmp
push
fsubrl
call
ljmp
imulb
ss
fsubs
adc
lods
push
jno
push
test
xor
push
mov
test
mov
cmpsl
test
pop
stos
dec
cmpsb
xchg
lods
out
mull
nop
mov
jg
bound
xor
or
cmp
sub
push
mov
or
insb
sbb
push
clc
dec
call
ja
mov
inc
jno
jne
pop
pop
lahf
lret
sbb
aad
ljmp
std
adc
adc
aaa
inc
ds
mov
pop
dec
jge
icebp
sar
ljmp
mov
or
add
pop
scas
loop
jns
cmp
jg
adc
mov
aaa
imul
fidivrs
inc
dec
in
push
scas
pop
pusha
jmp
xchg
xor
push
jb
add
mov
das
icebp
push
idiv
negb
xchg
or
fs
mov
pop
loop
mov
stos
sub
or
leave
pop
push
sub
cmp
decl
icebp
hlt
mov
adcb
iret
je
sbb
jle
xchg
add
jmp
pushl
ss
cmpsl
testl
cmp
mov
in
mov
mov
cmp
jl
gs
ljmp
cmp
rolb
sub
dec
hlt
cmp
hlt
xor
xchg
pop
and
fcomps
cmp
test
mov
icebp
es
inc
jmp
cmp
sbb
cmp
sub
adc
lea
cmp
cmp
mov
xor
xor
not
cli
jb
xchg
pop
pop
aas
pop
jmp
loop
inc
notb
incl
movsb
mov
pushf
shll
mov
movsl
sub
pop
clc
jmp
cmpsl
xchg
push
xchg
cmp
jbe
cli
adc
pop
sbb
fidivrs
arpl
ljmp
jp
dec
adc
add
add
sub
fidivs
sti
sub
jbe
pop
ljmp
xchg
jae
and
adc
mov
add
inc
fbstp
out
fwait
roll
sub
stos
jne
sbb
jmp
icebp
push
mov
shlb
cmp
push
fmuls
pushf
adc
and
fsts
and
int3
fldl
pop
cld
sbb
dec
xor
in
in
push
and
push
or
loop
jge
scas
fdivrs
push
nop
js
cmc
test
mov
mov
das
inc
in
popl
and
sub
ja
xchg
aas
shll
jle
pop
rcrb
rclb
test
add
addb
imul
push
decl
fistl
scas
mov
mov
in
lods
jg
hlt
or
mov
outsl
sub
dec
dec
pop
sbb
loope
ljmp
xlat
push
jns
cmp
xor
cld
xchg
or
pop
scas
filds
stos
lcall
and
mov
decl
push
mov
or
cmp
or
je
mov
add
push
dec
das
sub
cmp
and
ljmp
jae
call
push
dec
fwait
mov
cli
pushf
pop
out
inc
jp
mov
lods
in
out
or
mov
mov
mov
mov
and
out
das
ficomps
outsl
push
clc
push
mov
movswl
mov
push
cmpsl
les
push
mov
push
xor
fsubrs
xchg
pop
cld
lock
sar
adc
fwait
jecxz
jns
sbb
ja
sbb
or
repz
ret
ss
adc
mov
add
pusha
jl
cld
pop
mov
loopne
dec
aaa
mov
jb
repnz
push
fnstenv
add
popa
nop
push
sbb
xlat
int3
int
sub
fdivr
jg
mov
pop
outsl
push
jmp
ds
push
movsl
add
cmp
xchg
loopne
das
mov
mov
push
jecxz
cmp
out
and
icebp
fldcw
push
cmc
dec
in
insb
loop
jg
jg
adc
sub
push
test
mov
out
pop
dec
jmp
in
inc
cmp
int3
pop
lret
dec
mov
cltd
sbb
push
cmp
mov
insl
subl
mov
mov
jl
cld
and
push
inc
test
cmc
outsl
lcall
sbb
pop
dec
faddp
cmc
mov
inc
repnz
mov
shlb
cmpsl
xor
xchg
cmp
fistpl
pop
sbb
xchg
outsb
sti
add
stc
mov
imul
adc
mov
addl
and
sbb
jae
ljmp
icebp
ret
xorb
addl
cmc
and
ret
lcall
and
sar
pushf
dec
jb
sbb
out
call
pop
or
aam
jns
or
jmp
addr16
jne
fnstcw
js
mov
stos
insl
cli
adc
test
sahf
adcb
xlat
adc
loope
or
js
shrl
xchg
insl
icebp
cmp
inc
fisubl
int3
lahf
ret
iret
inc
jbe
cmc
fdivrl
in
call
mov
cmp
adc
repz
stc
inc
fs
ljmp
ljmp
loope
movsb
and
decl
xor
dec
ss
fs
pop
les
cmpsl
jo
decl
push
movsl
call
mov
and
inc
cwtl
mov
inc
rorb
push
arpl
mov
xchg
mov
push
int
imul
jg
jbe
stc
lret
pop
sar
cmp
nop
fwait
push
call
nop
les
jl
push
sub
decl
std
lcall
jb
nop
sbb
pusha
mov
arpl
jg
jmp
icebp
icebp
les
xchg
and
imul
xchg
cmpsl
push
pop
lret
or
dec
inc
sub
and
mov
mov
clc
jnp
repz
sar
lret
mov
js
mov
mov
adc
popf
jp
imulb
dec
mov
es
xchg
call
ss
testl
xor
int3
bound
dec
jg
das
hlt
jmp
sub
outsb
xchg
xor
adc
push
xor
adc
push
sbb
inc
fnstsw
sbb
insb
out
roll
rclb
mov
test
add
xor
adc
in
or
movsl
pop
cwtl
into
daa
out
ret
or
fdivrp
xor
into
fucomp
mov
jl
rcrb
aas
lods
push
pop
pop
sbb
lret
fwait
icebp
ljmp
std
mov
cmc
sub
push
sub
rcll
fistpll
data16
stos
cmpsb
out
push
lock
add
mov
ljmp
mov
dec
xchg
addr16
xchg
push
pusha
jp
sahf
arpl
sub
sbb
pop
cmpsb
dec
jle
adc
dec
lcall
mov
cmp
rcr
xchg
lock
shlb
pop
sbb
int
cmp
cmpsb
pop
xchg
cmp
aam
dec
es
scas
mov
mov
or
jmp
aam
test
aad
imul
cmp
pop
fmuls
jecxz
mov
jnp
aaa
lcall
loopne
stc
mov
push
mov
cmp
sbb
jmp
mov
push
pushl
lcall
add
sub
sbb
je
pusha
fisubrs
std
scas
sub
push
inc
add
rorl
sbb
divb
mov
test
cs
pop
cli
mov
sub
jb
xchg
or
enter
or
cmc
pushl
adc
enter
pop
pusha
pop
inc
and
pop
loopne
ret
and
pop
aaa
cmp
mov
xor
fistpll
outsl
cmpsl
lret
mov
mov
decl
sub
cmpsl
and
lret
xor
out
push
ja
xchg
xchg
outsl
inc
lods
adcl
in
pop
std
icebp
cltd
sub
push
sub
and
pop
ljmp
cmpsb
pushl
mov
push
cmp
xor
adc
decl
ljmp
dec
jnp
les
inc
xchg
ss
imul
mov
hlt
xor
xorb
or
pop
pop
xor
fucomip
push
cmp
add
ret
adc
xchg
mov
mov
cmp
jmp
cld
xchg
cmp
outsl
sub
cmc
add
push
dec
lods
jg
cmp
mov
or
loopne
cmp
das
push
pop
jns
jns
gs
add
and
pushl
add
adc
sti
imul
movsb
inc
and
adc
jmp
lock
ss
sbb
jle
and
cs
jmp
jns
shrb
out
jge
xor
jg
jmp
movsl
mov
insb
mov
or
dec
sub
shrl
incl
lret
push
in
mov
pop
pop
or
out
cmp
in
and
incl
xchg
push
cmpsl
sti
push
mov
test
movsb
out
shl
add
imul
xchg
lcall
mov
ret
mov
mov
cld
aas
lahf
cmc
jne
inc
mov
mov
jl
lret
sbbl
jne
dec
jp
fldcw
jo
lcall
pop
adc
dec
add
ficompl
pop
shrl
shlb
jg
xor
mov
jge,pt
dec
mov
notl
pushl
dec
pop
jae
push
mov
rclb
fldcw
jne
aam
inc
jno
fcom
xor
push
test
jnp
mov
jecxz
testl
jecxz
jecxz
push
fisttps
ljmp
icebp
mov
add
adc
mov
decl
push
push
insl
sbb
inc
push
add
push
mov
repz
xchg
sbb
sbb
mov
out
cld
out
scas
pop
and
in
and
jg
call
lret
jae
or
insb
inc
sbb
iret
out
lock
decl
sahf
jge
dec
je
cmp
outsl
xor
lock
test
jo
in
mov
adc
dec
addl
mov
mov
jg
mov
sbb
loop
mov
pop
or
mov
and
pop
ret
or
int3
rolb
lods
and
lcall
cld
fld
paddusb
sahf
ret
outsl
ljmp
lcall
ljmp
sbb
imul
mov
cmp
add
movsb
sbbb
movsl
fwait
lods
fldl
inc
aad
insb
jg
adc
popf
mov
fimull
sub
dec
and
aam
call
fwait
icebp
or
cmp
daa
pop
mov
cwtl
std
push
xor
adc
pushl
test
icebp
test
cwtl
stos
outsb
or
mov
test
and
jne
xchg
gs
xchg
inc
out
int3
repnz
inc
call
or
fdivrl
sub
notl
sbb
inc
sbb
or
insl
jnp
jmp
push
jno
pop
rcr
das
inc
sar
jns
xchg
add
push
mov
cmc
mov
and
push
addr16
or
and
or
stos
fdivr
cmp
in
pop
dec
popa
mov
pop
or
fxch
xchg
inc
je
push
sbb
jmp
xlat
imul
inc
dec
fwait
push
dec
xchg
adc
jnp
jge
fisttpll
xchg
xchg
out
mov
adc
jmp
mov
sub
fbstp
fdivl
icebp
xor
push
negb
call
adc
pop
inc
aam
js
ss
pop
lcall
cld
jg
ja
std
lret
fs
xchg
mov
cs
push
fbld
ss
push
dec
js
push
or
mov
outsl
add
and
pusha
jns
incl
push
mov
idivb
inc
test
cmc
ds
ret
xor
je
xor
ds
or
push
xchg
fisttps
lret
enter
xor
cmp
push
ljmp
addr16
cmp
pop
in
stc
xchg
movhps
mov
adc
sbb
sub
push
adc
jae
stos
pop
pop
pop
pushf
or
jmp
int
add
stc
or
and
in
xchg
imul
mov
sbb
mov
cwtl
inc
add
lahf
xchg
lds
or
in
incl
add
sub
insl
cmp
insb
dec
push
out
cmp
cli
cmpsl
aam
in
push
arpl
mov
mov
mov
int3
lea
lret
push
inc
push
sbb
aaa
xchg
scas
jg
dec
mov
mov
mov
mov
mov
lcall
jg
out
sbb
xchg
xor
xchg
xchg
add
lahf
jmp
sahf
call
sub
out
je
mov
xchg
outsb
mov
sbb
inc
push
stos
cmc
lcall
imul
fiadds
incb
out
inc
lods
ja
cmpsw
addl
and
push
or
mov
xchg
dec
pop
decl
insb
punpckhbw
push
mov
and
outsb
out
in
push
daa
and
ljmp
or
fisubrs
frstor
cmp
lcall
mov
nop
mov
rorl
outsb
sbb
repnz
add
stc
xchg
aad
rorb
sti
dec
sbb
add
add
push
repz
pop
gs
out
fsubrl
or
out
push
incl
movsb
nop
out
adc
add
add
pushf
ret
jbe
or
data16
aad
dec
sahf
fcmove
pop
xchg
lret
push
dec
lcall
ds
into
subb
popa
fimull
xchg
or
jg
jg
adcb
in
xor
test
jae
outsl
xor
decb
int3
rcrl
adc
aad
test
inc
inc
pushl
scas
inc
jle
add
pop
sbb
sti
xchg
fstpt
int3
test
ljmp
fiadds
fists
or
sbbb
popf
dec
mov
push
call
adc
adc
jno
out
int3
xlat
out
xchg
andb
xor
push
inc
mov
jmp
mov
sub
daa
mov
pusha
mov
jle
mov
cmp
scas
and
jbe
incl
jmp
mov
xchg
adc
ljmp
cmp
pusha
sar
ljmp
xor
decl
sub
daa
add
push
ficomps
call
mov
jl
or
mov
sbb
push
cltd
mov
adc
mov
pop
std
sub
jo
add
pusha
and
lock
int3
shll
inc
adc
lock
jmp
std
sub
in
add
jmp
pop
daa
jbe
cmp
mov
sub
ljmp
push
out
sbb
jl
inc
std
adc
and
and
mov
ret
insl
sbb
cmc
in
pop
into
adc
aam
push
sub
inc
ss
xor
cmp
ret
lret
das
cmp
push
sbb
sub
cmp
xchg
loope
test
inc
scas
movsl
and
in
aaa
cli
push
inc
cmp
out
push
pop
adc
dec
cmpl
popf
mov
cwtl
mov
or
lcall
mov
sti
arpl
in
rorl
xchg
incl
add
es
incl
jge
jbe
mov
add
les
or
xchg
mov
inc
pop
pop
in
sub
outsl
dec
pop
pushf
pop
in
imul
mov
ljmp
mov
xor
xchg
mov
cmpsb
dec
xchg
cmpsb
fstps
ret
cmp
mov
mov
test
lret
ret
aad
add
add
int3
clc
lcall
out
lcall
loope
adc
push
aaa
sub
lcall
bnd
inc
pop
add
cmp
adc
sbb
cmc
adc
cmp
xor
pop
mov
ljmp
and
lea
and
mov
outsl
or
cli
ds
cmp
adc
imul
test
cmp
fs
fucomip
loopne
lods
ss
push
xchg
imul
cmpsb
into
sbb
les
rcr
test
jbe
call
mov
jmp
aam
push
jmp
push
imul
mov
pop
add
and
aas
xchg
cmc
shr
cwtl
fs
lret
ljmp
adc
data16
jbe
sbb
pusha
push
dec
sbb
mov
mov
push
mov
outsl
lock
sbb
mov
popf
std
adcl
das
mov
test
jbe
nop
pop
fs
loopne
inc
aam
pop
jnp
add
push
mov
fldt
and
iret
pop
push
scas
xlat
loope
cli
decl
sti
clc
fnstenv
or
push
mov
inc
adc
popf
ss
push
push
mov
aad
xchg
jmp
test
inc
mov
sub
daa
dec
out
pop
sub
jg
sub
push
and
fs
mov
cld
dec
rclb
mov
xor
cmp
sub
ljmp
int3
insl
gs
js
xchg
adc
or
shll
adc
or
lret
add
pop
ljmp
jns
aam
in
test
or
std
mov
jle
xor
ljmp
pop
push
dec
out
sti
xor
aas
and
pop
mov
mov
in
xlat
dec
xor
aas
inc
inc
mov
ljmp
mov
arpl
sar
xchg
mov
fnstcw
lods
add
in
mov
xchg
jge
mov
std
cwtl
lea
pop
jmp
ret
mov
xchg
imul
mov
xchg
dec
jle
push
mov
incl
mov
add
dec
and
aaa
aaa
xchg
sbb
fnstsw
mov
movsl
cmp
cmp
shl
sbb
mov
sahf
scas
sub
mov
rorl
push
lcall
jmp
roll
xor
cmp
popf
adc
adcl
cli
jno
jmp
std
shrl
push
test
push
or
jmp
daa
cmpsb
call
jecxz
push
mov
mov
xor
jmp
or
and
cmp
dec
push
out
das
sub
add
xchg
pushf
dec
insl
mov
call
fs
mov
lods
out
jl
push
or
sbb
pop
test
in
or
push
cmp
popf
test
jns
sbb
and
mov
out
mov
and
adc
icebp
jg
xchg
push
pop
faddl
repnz
ret
enter
das
hlt
jg
shll
outsl
pusha
popa
leave
lock
lret
mov
push
ljmp
push
xor
mov
push
add
popf
cltd
ret
mov
mov
mov
ljmp
cmc
pushl
dec
pusha
jno
into
outsl
sbb
insb
daa
in
push
xchg
lret
mov
cmp
rclb
insl
xchg
andl
imull
test
sbb
das
push
sbb
or
push
pop
cmp
mov
jg
ljmp
dec
cmp
jb
push
fcompp
add
fimull
pop
addr16
decl
incl
xor
pop
mov
shlb
lea
pushl
push
inc
cmpsb
icebp
stos
shr
roll
inc
dec
aam
movsb
push
pop
cmp
lea
fbld
jae
jle
push
xchg
fwait
ja
ret
fwait
mov
mov
popa
inc
adc
add
add
ss
xchg
fsubrl
fadds
pop
insl
std
ret
push
mov
aaa
lods
jns
dec
cli
add
cld
sarb
adc
sbb
inc
xchg
aad
hlt
xchg
rcll
or
iret
loop
cs
sti
mov
addr16
aas
and
scas
fdivrs
imulb
popf
pop
xor
mov
mov
frstor
mov
scas
outsl
fcompl
jo
cmp
pop
cs
jg
jmp
enter
sarb
daa
add
imul
push
nop
mov
leave
fucomip
jmp
jae
inc
js
push
push
popf
xchg
scas
jl
in
fcomps
stc
add
decl
push
sti
mov
dec
cmp
mov
sbb
push
inc
mov
popf
addl
jns
cmp
mov
jmp
sbbl
in
push
xchg
fiaddl
outsb
stc
pushl
xor
outsl
pop
mov
push
xchg
data16
mov
das
stc
xor
incl
cltd
lret
pop
imul
sub
mov
aas
cmp
loope
nop
cli
fucomip
ljmp
sub
notl
ja
cwtl
out
jne
loop
idiv
xor
cmpl
add
or
mov
clc
push
in
mov
push
mov
cmp
ljmp
decl
dec
jae
idivl
loope
adc
addr16
enter
jnp
xchg
adc
mov
sbb
jb
sub
adc
in
push
repnz
cwtl
fcomps
ds
in
cmp
lret
aas
lcall
xor
bound
insl
int
in
scas
jnp
in
mov
out
outsl
sub
and
mov
inc
inc
enter
test
aad
add
popa
repnz
sar
jg
inc
xchg
out
fsubr
adc
imul
in
int
adc
cld
sbb
loope
inc
bts
decl
out
mov
fs
xchg
fisubs
test
push
add
mov
jno
rolb
popf
sti
sbb
or
push
into
call
mov
xchg
jle
sbb
sub
sub
scas
cltd
mov
nop
cwtl
push
inc
pusha
dec
cs
dec
add
call
lcall
in
pop
jl
cmp
jp
ret
sti
or
lock
cld
loope
decl
sub
fwait
mov
lock
inc
or
in
mov
or
mov
loope
sbb
jle
repnz
mov
incl
sti
pop
aad
fcoms
sub
pop
mov
movsl
jne
repnz
cs
sti
popf
push
jle
inc
mov
in
ficoms
push
arpl
mov
ret
call
cmpsl
or
push
aam
push
inc
pop
jbe
fwait
mov
xchg
dec
aaa
dec
fcoms
inc
mov
pop
jg
enter
into
cltd
ds
lcall
dec
push
push
mov
ficomps
pop
xchg
push
xor
mov
sub
jmp
insb
inc
mov
dec
aaa
frstor
cmpsl
notb
jg
adc
or
insb
aam
cmp
icebp
movb
pop
mov
push
pop
lret
stos
hlt
inc
repnz
xor
cli
push
repz
and
jbe
mov
fmuls
fsub
cmp
js
push
mov
mov
leave
mov
fsubl
fwait
mov
mov
jg
iret
mov
mov
jno
mov
pop
mov
jne
xchg
jb
fidivs
pop
mov
inc
leave
and
jno
gs
je
inc
pushl
mov
cmpsl
mov
mov
movsb
pop
jbe
int3
lahf
stos
fxch
dec
insl
icebp
jmp
icebp
inc
sbb
imul
nop
and
inc
inc
cmp
cmp
stos
call
jl
fiaddl
adc
add
jg
jg
sbb
or
aam
add
les
dec
test
xchg
call
inc
movsb
add
xchg
subl
fcmovnu
gs
repz
inc
leave
call
push
mov
aad
or
fmulp
cmpsl
mov
dec
cmc
or
addr16
lock
pop
mov
mov
pusha
sbb
test
mov
jmp
movsb
sbb
repnz
and
inc
inc
pavgb
cltd
in
sbb
mov
pop
stos
pop
push
subb
sarb
push
enter
outsl
sub
outsb
mov
push
clc
icebp
cmpsl
xor
lods
add
xchg
adc
sti
inc
decl
jmp
fucomp
jge
test
inc
lret
jb
xchg
je
cmp
cmc
jg
inc
es
loopne
jae
jmp
fwait
mov
sub
sub
movsb
xor
aas
xor
sub
xor
fsubrs
fwait
int3
scas
cmp
scas
push
push
mov
outsb
iret
or
inc
arpl
xor
xchg
xlat
call
xchg
aaa
call
dec
push
xor
stos
daa
pop
xchg
ja
sbb
pop
push
movsb
cli
xor
lahf
cmp
decl
sbb
mov
in
mov
mov
leave
or
cwtl
mov
dec
or
or
jmp
sub
ret
outsl
and
repnz
andb
pop
and
das
std
imul
aaa
jno
loop
test
sub
mov
mov
cwtl
jno
das
lock
ror
stos
mov
dec
lahf
mov
jo
or
lret
and
call
mov
cmp
mov
xorl
ljmp
outsl
cmpsb
pop
or
sbb
jnp
data16
stos
mov
mov
mov
fstpt
sbb
pop
int3
js
aaa
ss
lcall
pop
popa
sbb
lret
mov
push
je
int
movsl
or
call
in
sbb
mov
lock
mov
sti
mov
lods
jmp
push
mov
dec
stos
inc
pop
cwtl
mov
push
fidivs
mov
push
hlt
jge
sti
sub
push
mov
popf
mov
jg
mov
xor
fwait
cmpsl
sub
daa
js
nop
inc
es
pop
fwait
out
out
mov
ret
cmp
pop
ret
push
or
xchg
inc
aad
pop
sub
cmp
and
dec
xor
lods
jmp
sbbb
pop
icebp
push
push
sbb
lods
xorb
mov
ffree
in
xor
lcall
fldenv
iret
inc
dec
adc
fucomi
inc
cmp
jb
mov
add
clc
decl
push
and
jnp,pn
popf
loop
mov
mov
dec
pop
or
inc
pop
hlt
jmp
incl
add
aad
loopne
jg
ret
inc
adc
mov
aas
pop
push
mov
jae
cmp
ljmp
popf
repz
incl
mov
cld
mov
or
sbb
jecxz
xchg
int3
add
mov
mov
jnp
mov
xchg
scas
xor
add
adc
arpl
les
xchg
pushf
in
fs
or
jg
xchg
inc
nop
addr16
push
test
pop
dec
mov
hlt
cld
out
ljmp
cmp
out
mov
mov
jbe
cmpsb
cmp
fisubrl
lods
inc
ljmp
inc
inc
std
std
and
mov
loop
adc
lds
aaa
cli
inc
lret
es
sahf
add
and
shlb
outsl
cmc
ljmp
jecxz
mov
js
adc
sub
xor
movsb
adc
xchg
ds
xchg
sbb
negl
pop
shl
ficoml
das
mov
push
adc
mov
mov
add
test
sti
dec
inc
jl
xchg
pusha
mov
dec
or
push
inc
dec
mov
cmp
cld
cld
xor
sarb
cld
jmp
inc
mov
neg
sub
xlat
cmpsl
cltd
lods
shll
add
adc
out
das
xchg
lods
jecxz
lea
mov
inc
inc
fimuls
mov
push
je
lcall
xchg
and
adc
rcrb
xchg
ja
push
add
fsave
push
test
mov
shll
outsl
push
loop
add
neg
jmp
push
jo
jnp
and
clc
push
subb
push
cmpsl
jge
sub
xchg
mov
dec
or
out
mov
mov
dec
rorl
sbb
cmp
jns
inc
incl
stos
cli
jmp
pop
xchg
jle
cmp
imul
clc
ljmp
cmp
or
jl
xor
dec
sbb
jno
and
xchg
sarl
pop
sub
popa
fyl2x
jle,pt
pop
call
movsb
jg
das
jl
ret
ficompl
addr16
or
ljmp
dec
push
pop
dec
adc
add
dec
es
andb
adc
or
inc
push
pop
xor
add
lahf
jl
mov
insb
das
rcr
or
dec
pop
and
cmp
sbb
loope
pop
loop
xor
cmp
mov
mov
jbe
sub
orb
fucomip
incl
lea
rorb
mov
lret
dec
pop
out
mov
mov
lods
call
dec
dec
test
jle
scas
enter
pop
push
movsl
rol
mov
jns
jb
ret
gs
lcall
mov
jb
sti
sti
or
mov
xchg
adc
decl
mov
or
gs
sti
adc
cmp
je
push
out
mov
ljmp
pop
inc
pop
mov
popw
mov
xchg
icebp
ljmp
pusha
mov
pop
sbb
dec
sub
leave
iret
jp
ljmp
xchg
pop
cmp
push
ss
outsb
pop
jle
sbb
pop
jle
fprem
fiaddl
or
and
mov
scas
fildl
mov
lods
or
or
insb
push
push
idivb
mov
jg
xor
jmp
push
xor
cs
stos
das
std
fsubrl
adc
out
cmp
adc
lods
push
lcall
decl
std
mov
cmpsl
xchg
mov
or
or
pusha
xor
push
das
inc
adc
xor
xchg
out
add
cld
cli
aad
aad
icebp
push
pop
test
aas
pop
jl
push
fstpt
ss
incl
push
ds
push
xor
cmp
lret
jbe
dec
adc
pop
add
jg
pop
ds
xchg
loopne
jbe
ds
dec
mov
jmp
jg
testb
mov
jae
sarb
mov
jmp
mov
pop
xchg
xchg
xchg
pop
ret
lock
xchg
setnp
mov
cli
pop
clc
das
sub
push
push
test
sub
movsb
xchg
xorb
mov
mov
jnp
xchg
push
pop
dec
inc
cmp
mov
mov
cmc
jbe
dec
and
lcall
or
hlt
sbb
lret
cmp
mov
outsb
imul
jmp
repz
add
jns
insl
dec
xchg
dec
xchg
cld
das
icebp
jmp
xlat
shl
and
xor
rorb
adc
add
adc
popf
es
xchg
std
incl
push
dec
and
add
jmp
imul
frstor
cmc
dec
addb
cli
fs
lds
sub
mov
lods
mov
mov
addr16
iret
sbb
and
cmp
das
mov
lcall
pop
dec
and
dec
fistpll
in
imul
ja
jecxz
sub
mov
cmc
call
cmc
cmp
jle
ret
mov
mov
test
stos
je
pushf
cmp
push
outsl
hlt
ret
sbb
clc
test
fstpl
movsl
jl
pop
adc
ljmp
incb
shll
sahf
xchg
notb
test
lea
inc
shll
mov
xor
out
hlt
fnstenv
jae
aas
sub
fnstsw
incl
fmuls
mov
cmpsl
mov
outsl
xchg
mov
lods
out
andb
push
fs
sahf
je
movsl
pop
lods
lock
in
lock
push
mov
sarl
dec
int
fidivl
mov
clc
test
xchg
inc
pop
loope
cmc
pushl
push
inc
outsl
ror
dec
mov
out
test
pop
ja
fmuls
xchg
clc
aaa
push
insl
dec
in
xor
pop
cli
call
aad
or
loope
push
adc
in
pop
orb
or
cmc
push
clc
arpl
out
mov
jne
pusha
mov
std
pop
ljmp
pop
dec
xor
ja
adc
or
cmpsl
jns
pop
stos
lcall
jp
aad
mov
push
xchg
shll
fcomi
fsubl
pop
add
jg
sbb
icebp
push
fcmovu
das
orl
sub
mov
jg
xchg
push
mov
imul
or
xchg
adc
mov
xchg
sbb
lret
lods
xor
in
movb
fisubl
push
mov
lcall
mov
push
imul
mov
loopne
mov
push
loope
cli
clc
jl
adc
dec
int
and
mov
jge
insb
push
mov
inc
fnsetpm(287
mov
call
add
jl
ret
enter
cmpsl
lcall
mov
out
jb
jmp
push
imul
cld
arpl
loop
out
xchg
or
xor
or
mov
mov
adc
adc
cmp
and
das
hlt
pop
loop
xchg
bound
arpl
cs
enter
rcrl
jg
icebp
dec
enter
shl
or
add
es
and
nop
ljmp
vcvtsd2si
jge
ret
lds
xor
add
pop
push
std
mov
adc
jbe
lock
cmp
cmpsb
adc
push
xchg
pop
sbb
dec
mov
test
and
call
pop
or
push
push
sbb
xchg
shll
jp
fmuls
and
xchg
arpl
cmovb
repz
add
jg
mov
icebp
addr16
mov
lea
cmp
and
pop
add
nop
fisttpl
push
shlb
and
pop
mov
push
aad
das
hlt
cmpsb
imul
or
in
pop
mov
call
in
je
pop
movsl
in
ds
mov
inc
jmp
lock
jmp
cltd
jg
movsl
sti
mov
roll
imul
xchg
addr16
andl
jl
jge
mov
inc
mov
dec
sbb
mov
sbb
mov
loope
mov
cmp
iret
jmp
pop
mov
js
mov
js
into
fisttpll
mov
hlt
xor
fwait
cmovle
les
sub
pushl
cmp
push
pop
cmp
int
out
pop
xor
pusha
jmp
outsb
or
idivb
lcall
std
adc
mov
jo
pop
xor
cli
call
mov
push
mov
dec
mov
add
jne
daa
out
lds
cld
mov
jl
inc
mov
mov
sbb
rcll
add
jmp
popf
sub
mov
xor
cs
or
lret
jno
lods
jno
jg
movsl
outsb
test
mov
scas
into
arpl
add
into
test
xor
dec
loope
add
xchg
sti
in
divb
xchg
mov
xor
pop
out
in
loope
call
inc
ljmp
jmp
add
fcompl
test
popf
xor
das
jno
lcall
cli
nop
lods
movsl
repz
rcrb
lcall
pop
mov
push
cwtl
loop
xchg
mov
rcll
pushl
cld
or
icebp
out
inc
cmp
enter
cmc
lcall
mov
jae
pusha
iret
aas
dec
push
mov
xchg
pop
adc
clc
pop
jmp
inc
rcr
push
insl
int3
add
mov
mov
push
ljmp
int
xchg
sub
jns,pt
in
jns
inc
daa
nop
cmc
mov
mov
inc
fs
inc
pop
cmp
icebp
mov
xchg
mov
data16
mov
or
leave
stc
mov
mov
adc
in
add
repnz
imull
call
cmp
cwtl
imul
div
sub
pop
inc
add
mov
insb
dec
out
mov
xor
xor
in
movsb
mov
call
push
cld
divl
rol
pop
inc
fimuls
bound
mov
push
nop
arpl
rol
cmpsb
jbe
mov
shll
jmp
jmp
fdivrl
pop
loop
icebp
adc
ljmp
pop
test
jmp
aam
or
rcll
sbb
mov
sub
insb
or
mov
add
or
std
out
popf
lcall
dec
test
cmp
xor
lcall
push
mov
xor
cs
or
mov
add
xchg
inc
add
sub
jmp
push
dec
or
lret
mov
movsl
ljmp
inc
sbb
sub
aad
outsb
stc
fisubl
faddl
aas
rcll
cli
clc
and
fstpt
ljmp
jnp
mov
push
sbb
ret
xchg
push
sbb
add
jg
dec
mov
aad
and
das
out
ds
sub
testb
outsb
dec
and
scas
fildll
pushl
mov
pop
mov
mov
mov
out
dec
sbb
jg
test
aaa
ret
mov
pop
jmp
test
pop
cld
paddsw
and
push
incl
into
lock
dec
into
mov
mov
stc
flds
sub
adc
jnp
pusha
add
dec
mov
jle
fdivs
test
ret
mov
mov
lcall
lcall
cld
inc
out
pop
mov
xor
pop
mov
push
testb
jp
lods
sbb
iret
mov
aaa
mov
lahf
adcl
pop
test
add
and
testb
ljmp
aas
fsts
mov
pop
push
add
test
sbb
jl
int3
fsub
adc
sarl
out
repnz
mov
and
stos
loopne
push
and
jge
test
imul
subb
aam
cltd
outsl
test
or
inc
scas
mov
cmc
jne
fildll
leave
daa
push
mov
push
push
sub
sub
idiv
lcall
adc
cmpb
mov
movsb
mov
out
adc
out
insl
add
inc
imul
in
push
add
sub
inc
push
ret
fistl
scas
decb
adc
jg
loopne
incl
mov
in
ficompl
mov
mov
lret
mov
add
loopne
cwtl
pop
sbb
cmp
xor
cli
mov
jg
xlat
ljmp
sbbl
jbe
sub
sbb
pop
std
add
adcb
cmp
add
sbb
aaa
inc
cld
mov
or
clc
decl
out
fmul
call
dec
popf
fistl
call
add
adc
rol
mov
bound
mov
ret
xchg
pushf
nop
mov
fldl
add
cwtl
std
lods
mov
pop
int
jmp
mov
xor
jge
cld
ljmp
adc
jb
add
inc
and
int
in
dec
sub
pop
bound
cli
in
ret
push
mov
add
jg
in
or
pop
add
cli
dec
push
cmp
outsl
jmp
jne
subb
or
negl
ljmp
adc
and
pop
or
add
inc
sub
fmulp
mov
mov
decl
cmp
out
and
lock
les
jg
dec
push
xchg
and
sub
mov
and
add
jl
int3
std
incl
xchg
psraw
inc
popl
xor
scas
push
pop
das
pop
or
add
test
mov
mov
sub
cld
shrd
mov
sub
pop
inc
push
addr16
xchg
mov
mov
adc
inc
cmp
nop
cmpsl
mov
jg
jge,pt
aad
pop
mov
js
cmp
inc
mov
cld
loope
jg
inc
scas
dec
outsb
dec
sub
dec
sbbl
adc
xor
lahf
int
inc
add
pushf
ret
inc
xor
or
or
out
mov
mov
cmpsl
xchg
rcll
cli
fucomi
movsb
imull
dec
mov
xor
orb
std
xchg
out
es
int
adc
xor
rcrb
test
mov
xor
xlat
movl
call
insl
push
sbb
and
cli
pop
lcall
cmpb
inc
jecxz
inc
rolb
aas
into
les
add
pop
dec
inc
sbb
jl
push
incl
xor
xor
clc
push
pop
pop
xor
ficomps
ds
inc
outsl
movsl
lcall
jmp
or
flds
popa
testb
cld
mov
mov
add
and
and
mov
push
mov
clc
decl
push
or
push
pushf
push
cld
ljmp
test
mov
mov
adc
iret
and
test
cmp
into
mov
popa
or
add
push
mov
add
jmp
mov
and
and
xor
repz
jg
jle
mov
lods
sbb
enter
or
rol
loop
cmp
inc
rcr
pop
inc
dec
fstpl
out
test
sarl
jae
adc
inc
xor
mov
pop
stos
incb
xor
dec
popa
lahf
scas
inc
rorl
lock
lea
fs
arpl
push
inc
push
andb
cli
mov
daa
xchg
lods
in
jnp
cwtl
nop
rolb
add
or
data16
sub
stos
adc
nop
pop
in
mov
push
push
inc
add
std
add
jno
jg
xor
js
add
ljmp
stc
xor
adc
or
jge
outsl
les
add
dec
loopne
and
testl
leave
and
std
idiv
aaa
dec
inc
and
ret
ds
jne
or
adc
add
jecxz
repnz
fists
std
les
jl
jle
push
mov
call
inc
sub
xor
rclb
pusha
sub
adcl
jmp
call
stos
jne
ljmp
sub
scas
out
je
aam
pop
loop
loop
loope
sub
andl
and
aaa
sbb
push
and
add
mov
sbb
loop
jg
sub
shl
sahf
clc
lea
mov
add
mov
or
and
mov
mov
or
arpl
test
sbb
mov
cwtl
sti
sbb
adc
mov
jl
push
jg
mov
jg
test
mov
xor
jns
loopne
ljmp
pop
pop
sti
insl
cltd
or
pusha
pop
push
and
add
add
pop
movsl
addr16
mov
clc
inc
adc
inc
jnp
pop
push
sar
pushl
fs
pop
cmp
lods
mov
lods
sbb
pop
fdivrs
fadds
out
das
push
arpl
mov
and
adc
inc
lret
cmp
jmp
mov
adc
xchg
push
lds
lock
std
push
mov
adc
adc
test
das
std
mov
clc
adc
loopne
rorl
xor
jle
ljmp
call
cwtl
mulb
es
aam
in
stos
scas
or
mov
shlb
adc
and
xchg
cwtl
xor
mov
xchg
jg
xor
sbb
xor
add
jge
sbb
int3
inc
loopne
mov
adc
mov
adcb
sbb
sbb
inc
stos
cmpsb
mov
pop
sub
mov
and
mov
cwtl
mov
jg
mov
jb
jmp
xor
ljmp
add
clc
and
or
xchg
xor
imul
and
and
sar
lods
test
lret
mov
cwtl
mov
cmp
outsb
js,pt
or
inc
and
test
jno
pushl
imul
and
pushw
jp
mov
out
fildll
and
push
add
imul
inc
inc
mov
lods
pop
ds
and
sub
enter
pandn
pop
call
mov
lcall
and
int3
scas
and
and
int3
push
xchg
xor
lret
addr16
xchg
and
pop
test
lret
ret
mull
xor
test
and
push
test
mov
xchg
ret
mov
add
add
icebp
fwait
jns
mov
cli
inc
cmpsl
cmp
mov
pop
mov
repnz
les
lahf
scas
dec
or
lea
xchg
xchg
dec
fbld
cmp
pop
jmp
push
repz
rorb
leave
xchg
jecxz
ja
push
jg
ljmp
pop
xor
pop
cld
mov
pop
mov
scas
out
inc
decl
jle
repnz
pop
xchg
out
mov
outsb
out
xor
fwait
mov
or
mov
je
push
dec
mov
jle
add
dec
mov
mov
push
outsb
inc
add
andb
jp
aaa
mov
pop
fdivrs
sub
add
add
jl
mov
sub
loopne
dec
jg
incb
sub
lods
jle
push
call
sbb
pop
addr16
repnz
psrld
cmp
cltd
fisubl
pop
dec
mov
ss
push
addb
mov
lock
add
fwait
mov
divl
data16
push
or
cmp
jns
aam
jecxz
pop
clc
jecxz
jbe
xor
lret
mov
test
jle
lds
pop
xor
dec
xchg
add
jmp
pop
outsl
in
fistpll
pusha
or
or
push
xorl
jle
cmp
mov
pusha
adcl
clc
add
in
mov
sub
add
es
mov
outsl
mov
jle
jmp
jno
xchg
fisubs
sbb
outsb
aad
push
stos
fists
and
sbb
mov
test
imul
test
std
testb
ss
sbbb
or
icebp
mov
das
mov
stc
cmpsb
inc
jmp
ja
ds
jmp
mov
sbb
in
sbb
test
mov
push
push
shlb
shlb
sarb
lock
mov
divl
jno
add
adc
and
movsb
lds
or
mov
and
jmp
fdivr
decl
jnp
fadds
cs
and
adc
dec
sub
cmp
xchg
sbb
sbb
cmc
es
lods
loopne
cmpsl
xor
les
sarb
sbb
add
sbb
pop
pop
call
mov
les
fsubp
lods
pusha
clc
std
inc
lahf
stos
sub
out
loope
jg
add
sbb
jle
adc
pop
jge
sbb
pushl
sbb
pop
or
cmp
jmp
pop
sbb
inc
fwait
mov
jg
cmp
dec
or
movsb
or
js
inc
loopne
xlat
sahf
rorl
sbb
inc
and
cmp
cli
test
cld
pop
in
mov
adc
sbb
mov
jb
push
mov
push
inc
push
mov
jg
nop
leave
cmp
test
add
scas
sti
mov
test
aaa
sub
cmc
test
subb
jecxz
lcall
insb
call
aam
xor
mov
adc
sbb
push
ljmp
mov
call
push
pop
jne
std
pushf
test
push
mov
fisttps
dec
call
in
das
sbb
outsl
aam
sub
xlat
fsubp
mov
jne
jg
dec
ret
and
or
add
sub
pop
sbb
ja
cmp
idivl
add
xchg
sbb
push
lret
ljmp
cltd
add
mov
xor
out
add
sbb
inc
push
shlb
xor
xchg
jl
decl
mov
call
dec
xor
test
or
std
outsl
jg
sbb
and
rclb
faddl
cmc
push
outsb
into
sub
push
pop
push
out
pop
and
xchg
lcall
sub
xchg
xchg
sbb
and
mov
fisubs
stos
push
xchg
cmp
xchg
or
or
lret
cmp
xor
dec
inc
push
dec
cltd
fimuls
add
das
xor
or
dec
mov
dec
sub
jo
mov
test
push
sti
test
je
xlat
loope
out
loopne
dec
adc
lods
ljmp
and
lea
sarl
add
dec
bound
andb
add
pushf
sbb
stc
mov
enter
push
mov
dec
jg
mov
adc
add
int3
call
adc
sbb
shr
mov
js
sarl
push
fnstcw
rolb
out
frstor
inc
pop
stos
xchg
ret
pop
inc
mov
cmp
and
mov
adc
repnz
jecxz
rcl
jnp
adc
jg
outsb
movsb
adc
inc
dec
mov
data16
and
lods
mov
jo
ret
push
inc
popl
or
adc
std
fistpll
mov
cmp
and
xchg
pop
xlat
faddl
pop
push
pop
xor
and
push
jne
mov
into
dec
ret
loopne
gs
lret
mov
mov
sub
push
lcall
sbb
inc
cli
out
inc
adc
imul
in
popf
test
call
cli
add
aam
pop
and
inc
cwtl
or
sbb
push
or
or
sti
dec
xor
mov
dec
std
shrb
xchg
pop
fimull
lods
mov
cli
cmp
cwtl
pop
lods
lds
adc
jmp
add
adc
add
mov
sbb
cmp
in
add
pop
clc
pop
ficomps
test
fidivl
adc
lcall
xchg
xchg
pop
mov
data16
fldenv
jge
mov
mov
mov
push
les
clc
rorl
outsb
adc
js
loope
cli
pop
push
lods
arpl
les
cmc
dec
rorb
notb
orl
mov
or
lods
jbe
hlt
mov
sub
out
and
andb
sbb
adc
fisubs
icebp
daa
xchg
lcall
add
adc
pop
dec
call
loop
xchg
movsl
and
test
xor
mov
jp
fwait
and
mov
daa
mov
fsubs
sbb
lods
mov
or
out
inc
mov
loopne
sbb
mulb
cmp
mov
dec
scas
pop
outsl
adcl
xchg
out
lds
fldcw
outsb
jg
data16
in
jecxz
lcall
mov
push
aaa
fmuls
fs
gs
out
dec
roll
icebp
and
add
push
sub
insl
sub
mov
xchg
push
mov
add
out
adc
jg
mov
sti
lcall
push
jne
outsl
or
sbbl
lea
decb
xchg
cmp
xlat
mov
es
jmp
pop
xchg
mov
mov
lret
stos
test
adc
outsl
cld
mov
into
and
mov
lds
in
jecxz
call
jg
shl
ss
ds
dec
popa
ret
sbb
sub
jge
or
movsb
push
lds
ror
adcl
pop
xlat
les
js
pop
outsb
dec
iret
xor
jno
jnp
mov
call
mov
ja
inc
cs
and
lods
ljmp
adc
sub
and
dec
imulb
lock
cmpsl
enter
adc
mov
mov
or
pop
in
repz
bnd
test
int
aad
shrb
clc
scas
fs
dec
xor
cli
cmpsb
mov
and
icebp
add
ficompl
mov
rep
stos
iret
jle
adc
pop
cmp
push
test
lds
jg
test
loopne
repz
push
pop
or
ret
test
jb
dec
mov
fistpl
insb
adc
mov
push
push
mov
push
cmpsb
dec
mov
add
cmp
cmp
and
arpl
adc
push
and
pop
sub
gs
icebp
sub
out
sti
popa
sub
xchg
daa
add
mov
fsubl
push
fmull
or
push
inc
or
sbb
or
pop
out
sbb
push
xchg
push
push
out
div
dec
addb
movsb
add
or
out
loop
fisubs
cmp
fs
out
cmpl
mov
mov
in
jmp
inc
inc
pop
cmp
clc
jmp
das
icebp
das
shr
arpl
jb
sbb
rcr
stos
fisubl
pop
movsb
mov
jg
imul
cmp
iret
cmp
insb
fmul
dec
pop
sbb
or
lret
clc
or
mov
mov
xor
pushf
mov
xchg
out
lret
cmp
test
mov
add
dec
sbbl
push
pop
or
rcr
cli
popa
pop
push
jle
in
push
div
mov
jge
jns
orl
inc
mov
das
jns
gs
mov
cld
xchg
pusha
sbb
in
mov
pop
push
mov
pop
sbb
push
sbb
fiaddl
pop
mov
sbb
inc
and
stos
sbb
add
sbb
adc
rclb
mov
xchg
lcall
arpl
xchg
dec
movsl
jp
mov
mov
or
in
inc
mov
adc
xchg
jne
les
inc
mov
gs
lcall
xchg
xchg
pop
sub
mov
xchg
dec
or
pop
mov
bound
jle
or
and
push
or
je
pop
cmp
mov
movsb
test
stos
sahf
stos
lret
mov
dec
xchg
out
inc
xor
cmpsb
aam
jg
adc
sbb
jnp
dec
mov
cwtl
and
fmuls
adc
ret
sub
sub
jbe
ss
and
pop
or
bound
xchg
insb
ljmp
mov
inc
es
push
pop
add
popa
xchg
or
in
xchg
bound
dec
callw
adc
fdivl
adc
xchg
inc
hlt
movsb
js
mov
jmp
inc
mov
ret
cld
fs
dec
sub
push
daa
and
dec
mov
cmpl
lea
mov
and
push
lods
xorb
repz
das
jge
cwtl
ja
mov
push
and
cmc
mov
out
cld
add
test
xchg
push
xor
incl
pop
test
insb
cmp
fsubrs
jne
dec
mov
and
inc
push
jge
xor
sub
out
arpl
pusha
sbb
leave
mov
enter
sbb
add
jmp
or
sub
and
xchg
and
pop
adc
test
xor
xlat
or
popa
dec
mov
and
add
cwtl
or
or
das
sub
fdivs
dec
fdivr
and
jl
mov
add
or
scas
sar
loop
shll
insb
push
ficoms
pop
jbe
sub
es
popa
add
pop
push
jle
mov
rcrl
sahf
pop
loopnew
xor
and
fs
dec
mov
sbb
bound
mov
shrd
jp
add
and
decl
add
xlat
add
call
xor
push
jg
push
das
std
adc
xchg
jg
jae
jge
addr16
nop
sbb
movsb
test
call
push
pop
cmpsl
test
lods
or
or
sub
mov
cmp
push
leave
ljmp
arpl
mov
sbb
imul
and
stos
aad
xorl
mov
mov
push
pop
sahf
mov
cmp
cli
push
mov
jg
pop
push
out
popf
mov
sub
test
out
je
pop
jns
int3
imul
das
or
sub
xchg
xor
rcll
inc
sarl
jo
sti
daa
ret
inc
ja
mov
jg
or
sbb
sar
adc
andb
mov
rol
inc
dec
fcomps
xchg
in
pop
in
cs
push
sbb
out
jbe
arpl
pop
sahf
or
pop
cli
mov
mov
dec
mov
imul
push
inc
mov
sbb
pop
push
sub
scas
xorl
xchg
cmpsb
inc
scas
imul
lock
push
sbb
ret
push
jns
notb
xor
sub
or
or
or
sarl
int3
sub
add
fistl
inc
pop
loop
cld
icebp
adc
and
add
movhlps
or
pop
xchg
outsb
or
xchg
mov
lcall
clc
mov
je
loopne
imul
jno
adc
lcall
adc
xchg
sbb
jecxz
call
adc
daa
adc
add
mov
stos
nop
push
xor
inc
pop
inc
inc
outsl
xchg
cld
adc
mov
push
daa
les
mov
adc
inc
xor
movsb
aaa
les
std
mov
mov
lods
xchg
mov
loope
imull
sarl
sbb
popf
inc
je
xchg
jg
dec
push
sbb
dec
mov
aaa
lds
jg
xor
fwait
int3
dec
andb
cmp
mov
enter
loop
lds
lret
and
cli
movsl
or
stc
push
dec
dec
aad
mov
cmp
insl
shr
std
rcr
stos
popa
scas
push
cmp
lcall
cli
jg
sahf
cmp
arpl
popl
lds
inc
clc
popa
jecxz
repnz
rorl
loope
push
outsb
jle
mov
jg
add
es
mov
int3
jg
int
lret
decl
rolb
and
repnz
sub
sub
aas
push
mov
inc
test
cld
pushl
into
jae
js
push
jo
loop
xchg
add
adc
out
fistps
jmp
orb
pop
and
xor
mov
cli
adc
cmp
mov
dec
adc
testb
clc
out
sti
lods
adc
mov
fdivl
adc
bound
or
inc
sub
sub
decl
lods
fst
add
rcll
addr16
std
sbbl
cs
loop
subl
call
repz
test
pop
and
adc
xor
add
or
cmpsb
das
cld
movsb
dec
sub
adc
pop
rolb
adc
add
cmc
outsl
adc
insl
dec
out
dec
and
mov
loope
jns
pop
ja
add
fiadds
adc
cld
ret
das
jb
cltd
int3
sti
jmp
and
mov
pop
mov
lds
xchg
sub
sti
mov
loope,pn
fsts
das
pop
out
adc
and
shlb
fwait
mov
mov
mov
mov
shr
fistpll
in
incl
outsl
add
jmp
mov
and
fs
mov
cld
dec
or
mov
adc
call
jge
fwait
mov
pop
fistpl
ja,pn
sbb
and
test
outsl
std
xchg
mov
or
mov
insl
push
jns
clc
lock
xchg
mov
adc
sbb
sub
aas
lods
das
inc
loope
xor
aam
jecxz
loop
lcall
add
insl
loope
mov
pop
jns
andb
mov
push
jb
adc
adc
rcll
push
div
pop
fisubrs
scas
jne
rcl
sub
mov
mov
cwtl
cltd
fcmovne
test
jg
or
jmp
sbb
mov
lods
stc
xchg
sahf
loop
xchg
movsb
jno
mov
push
cmc
dec
fnstsw
add
pop
pop
in
jbe
loopne
inc
std
iret
xor
ljmp
mov
ljmp
and
ja
in
test
ds
jge
lret
test
sub
outsl
inc
movsb
in
arpl
lock
gs
imul
movsb
pop
lods
and
push
ljmp
add
call
jb
pop
and
adc
push
jle
lcall
dec
decb
or
inc
mov
adc
std
and
and
std
sti
ss
inc
outsl
and
sti
jns
or
rclb
pusha
sarb
shll
xor
xchg
sub
cmp
icebp
xor
and
cwtl
imull
incb
das
das
mov
adc
roll
sar
out
dec
push
cltd
adc
test
inc
mov
les
dec
or
in
add
cmp
hlt
pushl
adc
xchg
add
ret
xor
and
adc
and
in
xchg
cli
mov
scas
jo
lock
sbb
ret
pushf
sub
pop
subb
aam
repnz
mov
jg
psubsw
lds
out
daa
or
or
xor
sti
in
mov
adc
and
es
adc
insl
mov
lock
jg
sub
lret
rcll
inc
and
nop
adc
addl
mov
adc
call
xchg
std
xor
jg
cmp
mov
inc
data16
popf
xor
xchg
jg
xlat
and
iret
sarl
push
push
mov
sbb
pop
aas
cltd
adc
pushf
int3
subb
mov
rorb
jl
loope
cli
notb
mov
enter
add
or
movsl
and
jg
daa
shrl
xor
sub
clc
ljmp
iret
movsl
cwtl
scas
inc
inc
dec
sub
sahf
test
inc
sub
sbb
and
aaa
clc
es
lods
or
out
pop
and
xchg
pop
inc
dec
sbb
pop
clc
aad
enter
scas
push
mov
or
mov
pushf
and
stos
bound
inc
fimuls
dec
xchg
ja
loopne
mov
popa
out
mov
rcrl
andb
sbb
or
icebp
cmp
lods
jae
push
cmp
xchg
xchg
cmp
xchg
stos
fiaddl
cmpsl
inc
sbb
out
ret
lods
imul
sub
inc
es
loopne
enter
cmp
pop
push
mov
mov
mov
cmp
mov
icebp
push
mov
outsl
mull
cli
aaa
aam
test
rolb
or
scas
push
ljmp
adc
xor
into
jmp
push
cmc
and
iret
ficomps
pop
mov
xchg
scas
jo
call
loop
mov
je,pt
push
test
mov
dec
or
jns
aas
dec
xchg
mov
outsl
mov
xor
and
lcall
jb
xlat
test
pop
mov
mov
mov
jecxz
cmp
sbb
jne
imul
gs
xor
mov
flds
inc
or
jbe
decb
push
push
sbbl
inc
and
inc
adcb
push
fsincos
jmp
mov
adc
movsl
orl
sbb
jnp
arpl
sbb
mov
mov
jmp
dec
inc
xchg
pop
ret
test
jb
loop
inc
inc
jns
into
loopne
paddusb
adc
scas
loop
stc
inc
lods
pop
adc
jae
and
hlt
pushl
cmpl
test
cmpb
push
and
xchg
cmp
push
or
subl
test
in
mov
incl
cmp
push
pop
and
or
xor
hlt
scas
xchg
xchg
dec
pop
aad
mov
sub
jecxz
mov
adc
adc
jl
inc
pop
bound
test
add
or
adc
repz
pop
nop
jnp
lods
sub
cmp
jp
mov
hlt
inc
fst
ret
dec
fnstsw
mov
or
xchg
add
dec
lcall
rorb
test
jg
call
int3
mov
xor
pusha
lahf
sti
push
std
mov
mov
jg
in
scas
add
pop
lock
inc
push
adcb
lea
or
cmc
out
pop
xchg
jns
ret
mov
fists
cmc
cmpsb
decl
sbb
jl
loope
idiv
lods
cwtl
in
pusha
mov
add
push
inc
jmp
stos
pop
ja
out
jo
mov
pop
arpl
push
jg
addl
enter
and
call
xchg
xor
pop
ljmp
sbb
cmpsl
adc
movsl
inc
sahf
inc
movsl
jb
andnps
and
das
cld
in
push
cmp
push
pop
mov
enter
mov
xchg
xor
xor
cmp
jmp
popa
dec
push
cmp
add
mov
repz
xchg
and
arpl
bnd
pop
cmc
xchg
stc
inc
mov
inc
push
ljmp
and
xor
xchg
sbb
adc
rorb
add
std
jb
movsl
in
inc
pop
and
jb
lock
jno,pt
in
push
in
cmp
sbb
push
jp
xorb
mov
ret
rol
call
sbb
mov
mov
aam
cwtl
ror
adc
mov
out
xchg
in
or
mov
and
xchg
dec
cli
roll
jecxz
jg
mov
and
fs
popf
decl
push
add
hlt
and
push
lds
mov
lods
std
loope
addr16
or
loope
dec
flds
mov
call
incl
lea
adc
js
cwtl
fcompl
jno
cwtl
pop
inc
mov
push
push
in
jbe
cs
aaa
das
cld
cmp
mov
fidivrl
cwtl
inc
adc
lret
pop
ret
pop
cltd
cmp
loop
aas
pop
jg
inc
icebp
and
dec
icebp
insl
or
lret
adc
dec
push
mov
pop
jne
dec
call
push
rolb
pop
fldcw
xor
pushf
and
dec
cld
call
pcmpgtb
mov
fwait
and
movsl
dec
xor
sbb
out
in
pop
ljmp
add
enter
mov
cltd
add
adc
orl
in
das
mov
sti
clc
mov
lock
dec
inc
in
movsl
outsl
hlt
aas
lcall
xor
scas
scas
inc
das
lock
movsb
xchg
cmp
roll
cmove
and
jae
insl
xor
decl
cld
fadds
cltd
or
xchg
mov
push
std
lcall
aaa
iret
sarb
jmp
clc
pusha
addr16
call
outsl
xchg
and
out
iret
lods
cs
out
movsl
ds
das
jle
iret
dec
add
jl
inc
sbb
add
aam
jae
push
jo
dec
aas
and
sbb
jle
cmp
jle
pop
fstpt
jp
and
jno
xchg
lahf
fistl
call
icebp
mov
outsb
dec
stos
add
sub
leave
cmp
or
or
out
ret
rolb
loopne
mov
xchg
movsl
mov
xchg
ljmp
sbb
jg
mov
pop
paddusw
jbe
sub
adc
mov
mov
std
sub
add
pop
call
in
fsubl
outsl
sub
ss
ret
inc
andb
lock
ljmp
cld
adcb
add
insb
mov
adc
mov
add
inc
lds
xchg
adc
inc
test
rcrl
fiadds
adc
lock
aad
dec
lea
loopne
push
mov
fiaddl
jg
cs
sub
adc
mov
mov
leave
pusha
dec
stos
adc
and
mov
stos
mov
loopne
fldt
sarb
lret
cwtl
fs
std
mov
jecxz
fsubr
loopne
inc
in
add
cmp
mov
ljmp
push
lret
cmp
cli
das
sarb
add
pop
cmp
das
or
cmp
pop
call
sbb
mov
call
cmp
add
movsl
ljmp
les
xor
sub
xor
jg
inc
hlt
jnp
jecxz
sub
fidivl
lcall
lret
out
orb
xor
int3
inc
inc
dec
cld
cmc
inc
pop
xor
push
insl
mov
aad
aaa
mov
fcomi
mov
push
in
jnp
aam
inc
mov
mov
decl
mov
and
out
mov
or
mov
jle
and
mov
mov
jge
sbb
push
fcmovne
xor
xchg
push
and
pop
adc
pop
xchg
ret
xor
popa
mov
notb
pop
scas
sub
out
mov
mov
out
sti
adc
or
jne
mov
rcr
xor
jg
or
cld
clc
xlat
adc
or
mov
pop
or
insl
ds
imul
sbb
adc
inc
adc
add
pop
pop
push
dec
add
rorl
dec
clc
dec
arpl
add
or
mov
pop
roll
popa
xchg
xor
inc
aas
dec
adcl
mov
inc
add
mov
shl
sbb
lds
or
lea
jo
sub
inc
cmp
test
jae
cmpl
xor
cmp
push
mov
adc
and
ja
lods
sbbb
xorb
cmp
out
mov
cmp
loopne
and
push
fs
fildl
jno
arpl
nop
bound
inc
cwtl
sbb
mov
mov
xchg
rcrb
adc
sbb
addb
jg
adc
lds
int3
in
fisubrl
mov
rolb
and
jb
jg
sbb
sbb
inc
in
mov
adc
or
pop
inc
add
sbb
sbb
add
lock
sub
loopne
or
ret
insb
inc
cmp
gs
sbb
mov
addb
test
jne
repz
pop
rolb
icebp
mov
test
pop
addr16
ret
mov
dec
sub
inc
dec
sbb
repz
sbb
mov
cwtl
mov
hlt
pusha
push
mov
addb
shll
cmc
mov
cmp
add
push
fldenv
mov
aam
popf
lock
je
fdivrl
pop
je
jge
mul
jmp
push
cmp
call
hlt
mov
push
ja
or
mov
cmpb
test
nop
cmp
cmc
lods
mov
std
hlt
cmpb
and
sar
movsl
mov
jns
aaa
jne
and
aaa
repz
shrb
shlb
cmp
add
mov
mov
dec
mov
decl
inc
bound
fbstp
mov
add
and
or
in
out
outsl
lock
les
inc
insl
mov
dec
rcrb
scas
outsb
cmp
std
das
dec
pop
and
insl
cmp
psubw
jmp
test
adc
cmc
mov
and
and
test
and
mov
add
inc
dec
icebp
lret
in
fists
add
cmp
xchg
mov
sbb
xor
dec
notb
mulb
xor
les
std
das
and
xor
jecxz
push
jae
aas
push
das
rorl
inc
fdivr
push
outsl
lods
cwtl
mov
push
movsb
and
pop
sub
mulps
adc
jg
call
xchg
push
cmp
lods
lret
mov
mov
idiv
and
inc
and
mov
push
cmp
call
mov
or
mov
outsl
sub
shlb
test
jo
cmp
jl
dec
push
mov
and
xchg
and
xor
dec
fldl
stc
ljmp
pop
repz
sub
jge
xchg
adc
push
shlb
dec
jo
leave
jg
push
sarl
or
sbb
icebp
pop
mov
sbb
push
cltd
sub
add
pop
mov
mov
push
jae
pop
nop
shrl
out
test
inc
mov
fisubs
push
daa
and
mov
insl
fsin
dec
movb
je
addb
insl
push
sbb
aaa
arpl
pop
fldt
xor
cmp
outsl
sahf
jp
push
lcall
and
xlat
xchg
add
fstp
andl
push
call
dec
imull
cmpsb
or
inc
xchg
pop
stos
push
and
daa
xchg
xchg
addl
adc
mov
cmp
dec
lock
and
xchg
or
jmp
je
loop
popa
jae
pop
fdivrs
fcoms
js
add
into
movq
sbb
out
stc
cmpl
pop
scas
jmp
mov
xor
imul
fnstcw
mov
inc
mov
xor
fucomip
aaa
loopne
mov
cmp
imul
mov
jmp
and
test
test
jo
cltd
in
cli
fidivs
aaa
fadds
lahf
aas
test
and
mov
pop
jle
mov
cmp
xor
clc
insb
xor
mov
ja
and
xchg
fwait
popa
shlb
fs
inc
sbb
xchg
sub
push
test
sbb
das
scas
cmp
cwtl
sti
out
mov
stos
add
xor
rcrb
sbbb
xor
pop
mov
push
les
test
lcall
hlt
push
arpl
mov
lea
repnz
arpl
dec
cld
fdivrl
movsb
push
sbb
cmc
pushf
pop
call
jle
add
pop
inc
jb
pop
pop
xor
push
clc
das
cmc
outsl
test
dec
lcall
pop
sbbb
sbb
fwait
out
aaa
mov
jmp
pushf
shlb
test
dec
push
loopne
stos
and
push
and
jmp
lock
test
mov
pop
call
popf
mov
mov
or
and
mov
data16
je
cmp
push
cmp
cmp
dec
jmp
dec
mov
shl
loopne
jae
movsb
sti
incl
mov
push
mov
mov
push
sarl
sbb
movsb
sbb
ffreep
out
popf
fstps
dec
or
popf
mov
mov
and
andb
testl
jle
or
out
inc
push
sbb
or
decl
mov
std
pop
sub
aad
fidivl
daa
dec
push
xchg
fmul
mov
cli
incl
in
pop
fisubrl
cmpsb
push
sub
icebp
mov
mov
in
outsl
std
lea
inc
sub
repz
mov
mov
scas
nop
lods
mov
sbb
lods
inc
clc
jg
xchg
int
mov
sbb
int3
adc
adc
nop
in
mov
dec
xlat
testb
xchg
pop
sub
cmc
bound
xchg
lods
or
rorb
xchg
jg
ret
std
inc
and
fwait
jl
xchg
and
cmp
add
mov
cmp
popa
clc
in
out
adc
xchg
mov
pop
sub
mov
pop
sub
xchg
sbb
push
sub
inc
sbb
fidivs
or
insb
mov
sub
addr16
incl
pusha
inc
jmp
pop
lock
xchg
orl
push
add
mov
fiadds
sarl
fnstcw
xor
cld
mov
pop
xchg
orb
lds
mov
adc
mov
inc
es
enter
std
ffreep
aaa
xchg
cmp
mov
inc
lock
std
fs
lea
dec
in
repz
sbb
add
imul
adc
movsb
mov
or
push
loope
sub
mov
je
std
ss
cld
push
stc
push
mov
in
mov
sar
pop
adc
out
xchg
fwait
addr16
popa
pop
mov
out
test
mov
mov
std
lock
outsl
std
inc
fprem
push
pushf
dec
xor
andb
outsb
push
dec
inc
stos
cmc
fistl
jle
xchg
sbbl
mov
inc
push
cld
mov
sub
xchg
or
incl
arpl
pop
andl
mov
adc
incl
adc
popf
gs
mov
push
je
xchg
sbb
loopne
cld
jmp
fstl
shrb
xor
xor
ss
push
jns
stos
aam
shrl
jb
ret
lcall
inc
fadd
daa
xor
in
pushf
mov
sbb
or
aaa
adcb
out
adc
decl
leave
sbb
pusha
bound
xor
xor
test
fwait
add
dec
decl
or
out
jecxz
xchg
pushf
sub
sub
jg
das
adc
push
mov
test
fldt
ror
bound
pushf
sbb
in
cmpsb
xchg
fmulp
les
adc
mov
jl
stc
sub
cld
xor
aam
push
push
testl
adc
add
cltd
jb
call
pusha
ss
lret
adc
fs
mov
mov
or
inc
in
pop
cli
roll
cmpsb
loopne
ljmp
repz
jle
xchg
mov
scas
adc
and
stc
imul
incl
adc
ret
lods
pop
jb
cmp
inc
or
cld
inc
xor
sub
stos
test
and
outsl
jmp
and
cli
lods
mov
repz
daa
cmp
test
mov
and
andb
and
xchg
icebp
call
mov
and
loope
cltd
dec
adc
jle
aam
test
sub
lret
cmp
ret
fwait
paddsw
mov
push
and
jle
fcompl
das
std
sbb
fnstcw
btr
pop
jge
push
or
dec
push
mov
cmc
sub
dec
mov
cltd
and
inc
es
push
pop
sbb
cmpsb
fimuls
nop
iret
cmpsl
jmp
std
call
pushf
cmp
mov
cmp
hlt
xor
cld
mov
mov
ljmp
sbb
mov
pushf
inc
push
adc
jo
push
add
aam
pop
mov
scas
daa
test
jo
mov
jne
int
incl
mov
lcall
inc
arpl
xor
insb
lds
dec
sti
dec
jnp
divb
pop
test
mov
aad
insb
lds
mov
sbb
mov
adc
loope
xor
leave
orl
xor
adcl
into
sbb
scas
add
fdivrs
xor
pop
loop
add
popf
rcll
mov
das
rcr
jb
rcl
es
adc
movsl
das
dec
jno
pop
add
cmpsb
adc
mov
mov
das
std
mov
and
notl
test
xchg
adc
or
jg
mov
push
shl
loope
xor
add
lcall
mov
cmp
pop
shl
xchg
mov
sbbl
shr
and
int3
and
add
call
idivb
mov
sbb
sbb
repz
xchg
enter
mov
repnz
ljmp
popl
push
je
insb
sahf
sbb
inc
sbb
xor
add
sub
add
std
in
jg
mov
shlb
scas
jae
ficompl
out
and
inc
negl
fbstp
sarb
int3
outsl
outsb
pop
xor
movsb
inc
mov
ret
mov
fstl
adc
std
fisttpl
sub
addb
mov
std
mov
aas
mov
mov
pusha
or
jg
mov
repnz
aam
fadds
outsl
add
add
enter
xor
call
flds
inc
mov
xor
hlt
adc
jmp
pop
cli
fcmovne
test
pop
cmp
and
adc
clc
aaa
mov
xlat
push
and
push
jbe
push
fistl
cli
add
dec
and
adc
dec
std
stos
add
sub
xchg
ds
cmp
pop
cld
pushl
xor
lods
push
dec
lea
jno
add
int3
cmc
in
adc
cli
mov
and
adc
or
jge
lcall
outsb
push
inc
shll
cmp
sub
insb
mov
in
sbb
xchg
enter
jnp
push
inc
lahf
jg
pop
std
adc
test
mov
sbb
orb
and
add
dec
in
test
dec
pop
jnp
inc
push
push
jb
in
cli
jg
fwait
shl
dec
lret
adc
pusha
cmp
pop
fadds
pop
mov
xor
push
dec
mov
mov
je
pop
or
add
cmp
add
cmpl
cmp
cli
aad
ss
int
inc
jg
pushl
push
movsl
push
inc
mov
add
sbb
mov
leave
push
sbb
sbb
stos
or
jl
and
dec
inc
mov
popf
arpl
cltd
loop
add
add
xchg
movlps
neg
pop
jmp
pop
dec
incl
sti
icebp
js
je
mov
adc
loop
ja
sub
incl
stos
repnz
add
test
jne
sbb
add
xorb
xor
sbb
pop
fstpt
cli
add
fincstp
jmp
inc
mov
xchg
cs
pop
push
jecxz
inc
es
ss
cmpsb
sub
mov
outsl
mov
out
orb
jb
mov
add
pop
add
or
xor
insb
cmpsb
dec
cmp
incl
shll
jg
sahf
xor
mov
and
lcall
mov
jmp
push
adc
xor
dec
lds
cmp
mov
add
xchg
sbb
pop
cld
fildl
xchg
repnz
mov
clc
sahf
pop
rorl
jae
inc
mov
gs
push
cltd
inc
outsl
or
xchg
iret
lock
fucomip
xchg
jo
mov
dec
in
ja
dec
xchg
xorl
test
adc
xor
cmp
and
inc
inc
jg
cmp
xorb
xor
pop
call
push
scas
fnstsw
mov
adc
in
das
roll
shrb
mov
mov
lret
test
lods
mov
mov
mov
ljmp
cli
jmp
sub
sub
loope
fcomps
or
mov
inc
shlb
je
imul
dec
insl
icebp
movsl
cmc
add
in
mov
lods
lods
pop
es
cltd
dec
cmpl
mov
pop
and
inc
inc
inc
popa
insl
int
test
cmpb
mov
std
ljmp
add
cmpsl
mov
add
or
or
js
xlat
in
mov
inc
mov
or
pop
es
mov
mov
stos
das
loopne
sbb
mov
aaa
pop
movsb
in
dec
add
sbb
popf
in
aad
mov
mov
cmp
dec
or
push
and
pop
sub
imulb
jo
in
push
jmp
mov
ss
repnz
popw
add
cmp
inc
push
sbb
lock
sbb
xlat
add
fldpi
jmp
je
mov
out
jle
jae
fwait
call
test
push
cmpsb
rcrl
pop
jmp
ret
lds
lret
insb
sar
push
std
cmp
movsl
in
out
out
mov
cmp
shlb
cli
shl
fsubr
lret
rcrl
jne
adc
inc
daa
dec
or
call
jl
loope
in
push
rorl
cmc
xor
jno
repz
push
call
jle
xlat
jl
inc
push
and
repnz
rcr
test
sbbb
xchg
shrb
xchg
jp
ret
ljmp
or
aaa
push
cmpsl
xor
ljmp
cmc
xchg
cmp
mov
fcomp
inc
xor
xchg
dec
std
xchg
inc
loope
sub
cld
sub
pop
and
xor
pop
clc
divb
xchg
jecxz
inc
test
clc
and
adc
mov
aad
add
jb
sbb
jb
test
lmsw
fsin
pop
nop
inc
pop
ss
aaa
sar
jg
clc
or
push
add
in
pop
and
ljmp
jl
dec
pop
mov
bound
or
mov
mov
int
es
and
jae
xor
jp
cli
cld
rcrl
inc
adc
mov
das
lock
nop
cmc
mov
dec
jl
bound
incl
loope
fucom
adc
clc
fdivrs
jecxz
ds
adc
in
mov
lock
sbb
pop
mov
std
in
incl
ds
xchg
outsl
js
jl
icebp
sbb
cwtl
popa
sbb
mov
std
mov
pavgw
jl
clc
jb
cmc
pop
cli
dec
roll
cmp
in
and
outsl
lcall
ror
sbb
cmc
sub
add
xchg
xor
lcall
popa
jge
dec
inc
jecxz
outsb
xchg
dec
das
inc
call
scas
jl
lods
or
clc
jecxz
xor
out
repnz
aad
fucomip
cli
or
pop
push
xor
loope
cmp
ds
das
pushf
stos
std
pop
inc
ss
out
icebp
dec
add
sub
sub
adc
jae
data16
and
adc
std
jp
mov
jle
sbb
push
nop
jg
pop
hlt
cwtl
pop
arpl
sub
aad
imul
jp
arpl
sbb
inc
jg
call
popa
xchg
subl
lock
lods
push
gs
je
xchg
and
jl
std
dec
jg
jne
es
jge
mov
outsl
mov
repz
jle
popa
dec
jl
mov
cmc
sub
gs
xchg
sbb
stc
sbb
fs
clts
and
rol
frndint
jg
pop
xchg
scas
push
mov
fdivrl
divb
in
mov
gs
pop
scas
add
inc
mov
jns
mov
or
loop
std
and
adc
mov
lcall
ficoml
mov
dec
sar
mov
gs
cs
jno
jo
mov
xor
sub
and
adc
cmp
sbb
imul
add
mov
add
add
adc
cmc
cmp
es
lea
lock
mov
jns
mov
cld
adc
push
mov
or
xlat
scas
stos
out
imul
addb
pusha
cmpsb
pop
add
pop
in
sbb
call
nop
sub
xor
enter
test
jne
in
xor
inc
sbb
and
add
clc
adcb
inc
mov
dec
or
stos
mov
and
jp
xchg
add
addr16
jg
js
sbb
aam
aam
inc
ja
std
jo
data16
decl
xchg
sub
cmp
fwait
lods
add
cmp
push
mov
mov
mov
decl
mov
push
xchg
xchg
mov
sub
mov
call
hlt
jmp
mov
sub
sub
insb
adc
pop
test
dec
cmpsb
popl
sarb
push
sbb
sbb
mov
or
jge
fwait
push
loop
test
ss
jp
adc
mov
mov
push
sarl
test
enter
ret
stos
stos
lcall
repnz
jge
pop
add
mov
jo
cli
xchg
xor
xchg
repz
fmuls
call
push
cld
pushl
clc
xor
xchg
icebp
roll
inc
mov
leave
fldenv
sub
mov
ror
shrb
sub
daa
out
jecxz
sarb
dec
sarb
cmp
mov
sub
sahf
aad
lods
jmp
adc
pop
or
ret
or
loop
add
mov
aaa
popf
fucomip
push
inc
pop
sarl
mov
sbb
sub
and
rcrl
fisubl
loope
aas
rorl
loopne
jecxz
inc
and
mov
movsb
bnd
fstl
test
das
xor
add
jb
inc
mov
out
push
push
push
jg
out
popa
mov
enter
pusha
int
mov
or
sbb
jbe
xor
or
out
sbb
loopne
scas
fildll
aad
sub
pop
das
jge
ret
pop
test
dec
test
imul
loopne
pushl
inc
scas
es
pop
push
sbb
mov
leave
and
add
decl
enter
out
mov
sub
icebp
into
lods
inc
push
test
mov
outsl
mov
sub
out
dec
mov
mov
inc
icebp
movl
arpl
mov
xchg
pop
push
inc
and
dec
adc
addr16
dec
fsubrl
mov
jg
int
pop
sub
lret
das
jne
push
roll
clc
cmpsb
mov
push
shrb
push
ds
push
add
mov
jl
mov
fcmovne
les
cmpb
cli
sub
or
in
dec
dec
xchg
nop
mov
jmp
xor
addb
mov
or
in
xor
out
or
dec
push
test
cmp
mov
sahf
pop
pop
ss
das
mov
mov
pop
mov
mov
push
dec
sub
pop
ljmp
or
push
pop
orb
js
incl
dec
lret
mov
sbb
cli
testb
fisubrl
dec
inc
or
fildll
dec
dec
or
aad
aas
xchg
mov
adc
sbb
je
or
push
mov
lds
iret
enter
mov
or
xchg
enter
cltd
mov
adc
cltd
pop
clc
lods
frstor
outsb
adc
mov
sar
push
cmp
pop
sub
inc
inc
xchg
cmpsl
mov
int3
add
cli
xchg
incl
or
ret
jns
shlb
sub
mov
fdivl
adc
scas
dec
and
aas
nop
dec
outsl
rorl
mov
outsl
incl
loop
int
xchg
test
ret
inc
jle
mov
jo
sub
cmp
cwtl
fdivl
sbb
mov
fists
or
mov
loope
sarb
lods
sub
adc
shll
mov
stos
mov
mov
pop
or
mov
je
and
aas
push
push
vrsqrtps
lds
les
clc
jo
xlat
das
add
filds
dec
cs
call
pop
fsubrs
mov
add
rcr
clc
push
xor
inc
adcb
lret
or
in
pop
mov
cmp
sbb
mov
inc
es
inc
enter
sbb
pop
dec
push
rorl
mov
cli
lahf
or
aad
xchg
and
xlat
xorl
leave
pop
hlt
jns
ret
insb
cmp
inc
clc
and
adc
test
enter
xor
add
and
add
pusha
sub
js
popa
xchg
decb
and
add
in
sbb
ljmp
add
cltd
pusha
insb
or
sbb
adc
ret
lds
xor
mov
and
mov
mov
inc
nop
xchg
cmpsb
popa
es
mov
xchg
test
cwtl
test
xor
iret
pushf
xor
push
or
decl
mov
cmp
xchg
std
push
jbe
sahf
sahf
mov
mov
enter
aaa
or
xchg
stos
add
fidivrs
jo
add
imul
int3
call
aam
aaa
das
jnp
aad
mov
inc
andl
push
clc
or
fbstp
mov
insb
mov
imull
adc
mov
lock
leave
hlt
insl
jmp
adc
notb
pop
cmp
fistps
inc
inc
sbb
sbb
mov
xchg
adc
mov
adc
cmp
add
lea
fimuls
adc
add
push
jae
jle
jae
push
sar
test
xchg
imull
stos
ss
and
icebp
fcomip
idiv
or
mov
adc
jbe
ds
sub
clc
pop
cli
scas
out
cmp
stc
rcr
mov
push
jo
xchg
and
test
nop
lock
es
xor
mov
jns
add
cmp
or
decl
or
inc
inc
pop
adc
jae
rorl
and
and
adc
mov
call
ret
pop
add
bound
pop
std
lods
mov
inc
fcomp
faddp
adc
addr16
es
ret
lods
jae
fistpll
and
outsl
test
xchg
sub
or
es
and
shl
add
stos
call
jle
jmp
jmp
jl
cmp
jbe
cmp
in
pushf
testb
adc
enter
les
aad
cli
lock
pop
mov
cmp
pop
mov
inc
lea
in
mov
cltd
mov
jg
fistpl
enter
test
aam
lock
iret
sbb
imul
sub
test
mov
mul
popl
ficomps
push
add
loopne
push
lock
lcall
fcmovnu
aam
in
into
pop
movl
adc
inc
shl
lret
mov
pop
add
flds
push
push
pop
in
sbb
cld
push
xchg
jae
push
fucomp
push
and
test
inc
in
xlat
ss
push
and
test
pop
popf
mov
dec
or
loopne
mov
sahf
mov
mov
ljmp
in
movsb
pop
dec
cmc
inc
stos
mov
mov
lds
test
or
mov
adc
clc
sbb
shr
sub
jle
fsubs
scas
popf
push
sub
enter
ljmp
out
arpl
or
outsl
incl
inc
inc
xchg
jl
call
adc
dec
xor
dec
call
das
dec
mov
cld
outsb
andb
lea
mov
or
iret
push
call
mov
lods
shrb
lds
jbe
outsl
outsl
adc
sbb
fildl
inc
aad
outsl
cld
aaa
lock
mov
clc
shrl
inc
bound
lret
xchg
and
pop
inc
mov
cmp
les
iret
xchg
icebp
mov
shll
rclb
jl
xchg
xchg
mov
adc
push
jb
ja
loopne
dec
jnp
mov
xchg
out
push
push
loop
fildll
jmp
inc
xlat
aam
xchg
push
les
imul
call
pop
addl
inc
add
imul
sub
mov
scas
cs
std
icebp
mov
mov
icebp
loopne
inc
xchg
shlb
repnz
pop
in
dec
jg
in
xchg
sahf
inc
pushf
stos
stos
sbb
jg
call
movsb
into
insb
daa
mov
imul
lret
shll
in
cmpl
dec
fnstsw
xor
mulb
lods
xor
sarb
seto
incl
push
dec
andl
jmp
mov
fists
jg
rcrb
push
xor
dec
and
xor
out
test
jnp
leave
cld
sbb
std
popf
repz
stos
jl
mov
push
add
push
mov
outsl
mov
mov
rcrl
push
or
cltd
mov
inc
jle
incl
mov
popa
push
shlb
xor
pop
loopne
push
cltd
cmpsl
loope
sub
or
push
mov
stos
test
lcall
adc
stc
sbb
mov
xchg
leave
js
dec
aaa
repz
cmp
sub
add
jle
lcall
sbb
dec
cmp
pop
sub
sbbb
addr16
je
mov
inc
std
push
sbb
and
push
sbb
lea
jb
ficoms
das
mov
add
fisttpll
dec
lock
pop
jle
inc
and
negl
test
aas
or
fnstcw
sahf
orb
ja
loope
mov
push
xor
mov
clc
fcmovnb
pop
or
gs
or
cwtl
jno
stos
pop
and
push
outsl
filds
loopne
in
mov
mov
stos
mov
jp
pusha
inc
xor
fstl
inc
sahf
mov
fisttps
pop
pusha
adc
mov
scas
dec
hlt
push
or
fwait
inc
push
lret
mov
add
or
push
lock
jmp
fldl
or
pusha
mov
int
jecxz
lea
int
sti
or
pop
in
push
sbb
jg
mov
les
out
xchg
fdivr
inc
pop
jp
pusha
adc
sub
call
sub
hlt
mov
mov
jge
add
adc
call
mov
cld
pop
mov
pop
mov
data16
xor
out
ffreep
filds
inc
out
jbe
cmp
cmpsl
std
decl
add
cmpl
loop
mov
or
mov
ljmp
jbe
aam
scas
push
inc
push
fsubr
jg
jb,pn
out
push
pop
rorb
push
cltd
mov
inc
cmp
idivl
mov
add
add
dec
mov
xchg
jmp
aas
lahf
andl
and
mov
js
cs
lret
and
nop
aaa
in
jbe
jae
adc
mov
mov
jo
xchg
sub
loope
or
xor
sub
push
cmp
cmpl
push
push
mov
or
sub
or
jecxz
sarb
sub
cld
out
into
jmp
xchg
rolb
add
mov
fs
lea
aad
scas
xor
fs
std
daa
lret
aaa
insl
nop
push
leave
mov
pop
movsb
and
cmp
and
lock
test
sbb
cmp
xchg
add
loop
add
add
dec
mov
nop
xchg
aam
loope
lods
sbb
xlat
or
mov
enter
inc
mov
mov
int
xlat
inc
inc
mov
cmp
mulb
jmp
xor
daa
popa
icebp
into
adc
mov
je
daa
lods
aaa
inc
inc
push
fdivrs
in
xchg
cmpb
push
repnz
sbbb
repnz
lcall
jmp
sbb
inc
adc
leave
or
das
mov
mov
imul
pop
push
xchg
call
pop
mov
lret
pop
add
imul
sub
push
sbb
mov
adc
sub
popa
fistps
jecxz
dec
pop
mov
push
pop
clc
roll
test
mov
fimuls
cmpsb
out
in
inc
out
mov
xchg
js
xchg
jl
addb
or
inc
jo
into
mov
jg
mov
dec
inc
mov
jae
aam
out
decb
dec
cmpsl
mov
movsb
inc
add
or
xor
mov
loope
pop
loop
pop
sub
test
and
repnz
push
dec
in
scas
push
xor
add
jbe
pop
inc
dec
or
jle
mov
aaa
and
jb
jnp
push
fisttpll
dec
xlat
mov
xchg
push
leave
das
xchg
test
mov
fs
jbe
push
mov
ljmp
push
bound
addb
gs
outsb
jge
ljmp
out
loopne
adc
push
xchg
sub
xchg
adc
sbb
jge
jp
adc
xchg
cmp
mov
xor
popf
cmc
xchg
push
mov
out
sahf
add
inc
rol
jp
pushf
xor
mov
mov
push
icebp
cmp
test
pop
jmp
xchg
add
rorb
fmull
add
rcr
lock
movsl
push
mov
das
movl
jns
xor
sbb
shlb
inc
or
int3
mov
pop
sbb
loop
adc
cmp
sub
sbb
inc
cmpb
mov
pop
loop
popf
mov
inc
sbb
mov
push
sbb
pop
out
add
mov
mov
pop
pop
lret
dec
cmp
jno
das
and
pop
push
pop
insl
xchg
pop
xor
xor
lcall
dec
aad
xor
mov
dec
testb
cmpsl
stos
loop
daa
adc
mov
inc
lcall
inc
repz
cmpb
mov
in
and
fbstp
xor
adc
outsb
dec
or
xor
lret
and
outsb
mov
nop
rcrl
les
aas
pop
jmp
sub
pusha
xor
addr16
xchg
sbb
imull
test
inc
in
mov
xor
mov
mov
gs
xor
outsb
scas
idivb
ja
les
and
rcll
add
push
in
sub
hlt
sub
sbb
mov
in
mov
out
shr
das
or
jb
ret
adc
dec
mov
leave
test
insl
mov
or
push
mov
mov
inc
loopne
lock
fildl
aaa
jle
icebp
pop
ss
dec
fnstenv
add
adc
maxps
ljmp
cmpsb
xchg
mov
mov
icebp
decl
pop
data16
fdivr
pop
ljmp
mov
jg
out
mov
enter
mov
outsl
xor
and
insl
cld
pop
cli
call
int3
pop
icebp
or
lcall
or
js
lahf
shlb
pop
add
shrb
lret
sbb
movsb
incb
fcmovnu
arpl
daa
push
lahf
cmpsl
fwait
jnp
inc
jecxz
pop
mov
filds
out
insl
daa
pop
cld
add
jle
in
adc
cs
lea
outsl
ss
adc
mov
notl
jae
and
add
pop
adc
sbb
mov
scas
aad
call
mov
mov
add
movsb
cmp
stos
imul
mov
push
cmpsl
or
das
cld
jg
aam
jp
adc
mov
stc
ljmp
cmp
adc
add
push
gs
push
adc
rorl
cmp
pop
mov
dec
outsl
mov
gs
inc
inc
ss
movsl
call
or
mov
dec
push
and
test
mov
fbstp
out
sti
jg
xchg
mov
or
sbb
fcoms
in
outsl
jg
data16
xor
lods
xor
in
mov
pop
add
mov
loopne
pop
test
pop
bound
or
cld
incl
sub
test
mov
ret
sbb
adc
ljmp
xorb
and
int3
test
mov
xchg
je
nop
mov
decl
mov
test
addr16
mov
ljmp
ds
int
lcall
insl
and
lds
les
sarb
das
cmc
or
xor
rcrb
sbb
aaa
jno
or
es
mov
jge
add
ficoml
pop
cmp
dec
pop
ljmp
sti
test
pop
or
adc
pop
loopne
dec
adc
sahf
fcomps
sub
mov
les
lret
movsb
repnz
mov
cmpl
add
xor
test
cld
or
imul
push
in
cmp
push
xor
movsb
in
pop
clc
lea
cmpsl
adcl
push
adc
jle
push
mov
lret
cmp
lcall
jo
cmpsl
mov
test
scas
ja
std
fbld
mov
ret
ret
adc
sbb
pop
jl
ret
in
insl
xchg
mov
cmpl
arpl
rcll
jne
ja
fiaddl
mov
ss
fildll
fimuls
and
xor
or
scas
add
xlat
pop
in
mov
adc
push
lret
adc
lcall
ja
push
je
or
rorb
and
out
inc
sub
xor
push
sti
loopne
aam
hlt
insl
and
push
sub
add
add
outsl
aad
decl
cli
xor
and
out
mov
mov
pop
hlt
mov
stc
mov
dec
and
mov
push
cld
andb
xchg
jne
mov
add
pop
fs
sbb
jg
gs
ja
orb
xor
icebp
je
sub
xchg
divb
pop
xchg
test
mov
jg
outsb
int
enter
or
lret
add
lds
popa
jae
xor
and
cld
jne
scas
add
test
mov
fsubs
and
xchg
mov
mov
rclb
cmp
fs
jo
enter
and
inc
fidivl
xchg
xchg
inc
push
jle
orb
dec
loope
pop
push
pusha
in
aam
add
mov
addb
xor
jo
mov
inc
jb
fildl
rcrl
subb
dec
adc
testb
push
pop
movsb
popa
xor
ljmp
pop
sub
and
andb
mov
adc
je
dec
lahf
mov
jno
pop
dec
add
pop
loop
out
cld
xor
inc
mov
jle
mov
inc
mov
adc
pop
or
lods
push
inc
bndldx
es
icebp
pop
cwtl
dec
jle
sbb
and
shll
ljmp
movsb
dec
outsl
jecxz
cmp
arpl
lret
pop
jecxz
idiv
das
fcompl
xchg
push
test
das
dec
sbb
pop
cmp
push
in
arpl
inc
xchg
sahf
jo
inc
or
push
outsl
out
loop
push
sahf
jno
lahf
sub
and
test
std
call
aam
mov
rcll
push
nop
filds
leave
cmp
jne
icebp
test
sub
addr16
xor
inc
push
test
das
add
fcompl
clc
clc
aaa
push
dec
jmp
pop
cmp
sahf
test
mov
das
call
or
xor
adc
push
push
ret
add
sub
loopne
pop
shr
jmp
iret
rclb
inc
divl
sar
decl
lcall
and
inc
add
sbb
and
lret
mov
xchg
push
or
sbb
inc
addb
lods
rorl
or
popf
test
punpckhwd
mov
inc
dec
subl
inc
pop
adc
sbb
call
jmp
sbb
adc
lds
or
xchg
jg
jge
dec
mull
inc
jno
pop
pusha
dec
push
xchg
addl
dec
push
popa
pushf
imul
xchg
cli
in
fldenv
sahf
aad
dec
adc
push
lods
sbb
repnz
in
outsl
jl
add
adc
repnz
test
mov
mov
xor
pop
mov
xchg
scas
lret
in
in
mov
fdivrp
and
or
nop
mov
dec
sub
rorb
push
xchg
iret
cmp
cmpsb
lods
mov
ljmp
mov
mov
push
shrb
scas
pop
rcl
hlt
ljmp
or
into
mov
add
xchg
es
das
add
jmp
gs
rcll
xchg
or
stos
shl
sub
dec
mov
addr16
out
fidivrl
test
sub
pushl
ret
outsb
cwtl
or
xorl
test
push
sbb
aas
aad
inc
dec
push
stos
stc
push
or
mov
call
test
aad
or
fldt
and
out
dec
adc
dec
jnp
lret
cmc
aaa
ljmp
inc
or
sub
leave
inc
mov
inc
mov
jg
stos
aaa
or
mov
xor
je
and
ret
sub
out
call
lock
pop
int
aas
dec
test
stos
icebp
adc
mov
test
mov
jg
je
inc
pop
dec
insb
rcll
rclb
dec
sbb
pop
mov
lock
dec
out
adc
inc
cmc
or
ljmp
cmc
jg
dec
xor
jecxz
push
inc
mov
loop
sub
add
shll
leave
jo
imul
sbb
sbb
mov
pop
add
test
xor
pop
leave
jo
mov
sub
call
adc
mov
adc
sbb
and
and
call
or
dec
xchg
mov
jns
fbstp
lret
push
mov
das
cld
lods
xor
ds
outsb
ss
xchg
mov
xchg
jle
jmp
xorb
pusha
subb
scas
inc
sbb
scas
or
aas
or
jge
pop
pop
fs
jbe
pop
adc
and
scas
addr16
loopne
jno
xor
pop
movsb
add
decl
sti
adc
inc
icebp
ret
pusha
mov
sbb
ja
and
outsb
inc
fisttps
clc
clc
mov
and
sbb
pusha
xorl
jmp
rcrb
lds
sahf
add
jg
pop
aad
dec
loopne
cmp
shlb
pop
imul
add
movb
fnsave
dec
inc
ljmp
pushf
jbe
dec
fdivrs
pop
sahf
inc
insl
cld
push
cltd
add
xor
jmp
test
push
jmp
rcrb
add
cmc
cld
sbb
cmovbe
mov
enter
lcall
ret
push
mov
lock
lahf
in
cmp
dec
add
cmpsb
xor
sbb
cld
rolb
pusha
inc
push
xchg
jle
lock
add
dec
push
mov
loopne
pop
pop
cs
arpl
sahf
xorb
ret
xchg
fs
into
sbb
jge
jmp
add
mov
cmp
aam
pop
sbb
xor
mov
jle
lods
and
rolb
xor
cmpl
pop
push
or
push
sbb
sbb
or
dec
dec
sub
in
leave
add
xor
dec
or
cmp
or
stc
movsl
repz
adc
loop
insb
aas
pop
cmp
pop
or
push
adc
jns
mov
xchg
push
out
mov
addb
jo
call
popa
xorb
add
inc
adc
flds
dec
dec
sbb
fsts
sbb
xor
mov
jle
nop
or
or
sahf
sbb
pop
cld
jg
rclb
inc
xchg
sub
mov
arpl
shrl
push
or
adc
mov
cmpl
mov
cmp
cld
ljmp
out
pop
mov
nop
add
jo
sub
int
aaa
in
push
fwait
out
icebp
sbb
rcrb
subb
popf
mov
add
fildll
push
xchg
mov
lods
pop
clc
dec
fiadds
sarl
sub
mov
and
push
nop
call
cli
dec
out
pop
imul
mov
xlat
mov
sbb
repnz
outsl
icebp
dec
movsl
movsl
pop
lcall
mov
jg
push
lods
and
push
pop
dec
bnd
adc
mov
scas
test
or
inc
nop
mov
push
or
out
pushf
jecxz
call
push
xchg
nop
movsl
insl
popa
nopl
jg
repz
mov
shl
dec
xchg
movsb
or
dec
rcl
ljmp
xchg
sub
int3
mov
mov
mov
cmp
mov
nop
roll
cmp
out
pusha
and
mov
and
shrl
int
push
adc
incl
sbb
adcl
push
xchg
and
or
mov
orl
and
pop
repnz
std
push
push
test
insl
sti
adc
decb
mov
test
aam
into
and
push
ljmp
mov
lods
push
leave
cmp
test
lods
push
push
xor
nop
incl
das
add
inc
cmp
insl
or
mov
pop
xchg
push
jg
fdivrl
rorl
inc
jmp
jle
dec
pop
push
sbb
jbe
pop
clc
fstl
das
xor
out
mov
pop
jg
bound
fsubrp
jo
push
int3
enter
or
loop,pt
mov
push
fwait
inc
xchg
push
sub
cmp
and
mov
lcall
clc
stc
add
or
mov
call
hlt
lods
bound
bound
fdivs
jb
xchg
sub
lods
hlt
mov
cmc
ljmp
add
and
jge
das
cltd
xor
cld
add
sbb
enter
clc
clc
inc
lret
call
push
mov
lret
daa
cmp
and
cmpsl
cs
sahf
mov
aam
sahf
scas
clc
dec
hlt
in
and
cmp
and
pushf
cmc
or
mov
icebp
jmp
imul
push
cli
add
cwtl
pusha
mov
fnstenv
mov
lcall
stos
cli
lods
push
and
mov
xorb
fists
adc
call
sub
sub
in
shlb
adc
pop
jne
ljmp
notl
lret
fldt
or
lahf
add
fildl
subl
daa
inc
fsubl
add
adcl
mov
outsb
pop
adc
decl
mov
idivl
add
jo
or
addr16
mov
sarb
jecxz
sbb
or
sbb
insl
in
mov
jmp
push
test
decl
cmp
jne
pop
mov
bound
rcll
dec
add
xor
incl
lcall
fistpll
xor
jecxz
inc
sti
dec
pop
adc
push
pop
jbe
adc
in
movsb
pop
inc
and
dec
push
cmp
cmp
jp
mov
scas
dec
movsb
lret
or
add
adc
sbb
and
into
sbb
xor
inc
jle
sbb
jecxz
lret
and
call
dec
xlat
out
cmpl
dec
cld
lds
mov
pop
inc
jl
inc
jg
cmp
outsb
lods
dec
sub
lret
decl
jns
push
sbb
xor
xorl
mov
mov
test
add
call
sub
sbb
cltd
and
mov
and
mov
adc
fcoms
mov
fisubs
int
xchg
sbb
lods
ffreep
xor
gs
adc
inc
ds
incl
cmp
mov
sub
mov
pop
loop
stos
and
in
rcll
ljmp
mov
fidivs
pop
push
or
mov
inc
imul
ljmp
mov
push
add
or
rcrl
insb
movsl
cmp
std
inc
aam
inc
loope
popl
and
aaa
and
cli
adc
push
push
in
push
xor
repz
or
push
inc
rolb
or
lods
dec
into
mov
and
daa
sbb
or
jo
shll
xchg
sbb
mov
cmpsb
pop
test
mov
bound
mov
push
or
icebp
mov
pop
cmc
sub
scas
pop
lock
pop
sbb
pop
outsl
ljmp
adc
jo
or
inc
outsl
ljmp
inc
mov
out
or
bound
ds
pop
sbb
aas
dec
jno
adc
jmp
outsl
adc
cmc
add
mov
imul
cmp
lock
div
inc
stos
inc
mov
adc
in
lods
mov
add
push
or
xchg
pop
je
mov
cmc
push
pop
ret
push
push
or
insl
stos
lds
rorl
mov
lahf
xor
sub
aam
inc
xor
push
inc
xchg
sub
or
adc
sub
adc
mov
stos
stos
sahf
sub
jns
test
clc
inc
push
pop
add
cli
xchg
aaa
ss
xlat
push
xor
sub
orl
ljmp
and
xchg
adc
andl
and
lods
cld
das
call
lcall
xchg
xorb
mov
leave
pop
sbb
and
inc
jmp
inc
sub
jle
push
ja
mov
dec
stos
loop
xchg
and
pop
or
pop
loopne
mov
adc
aad
sbb
into
ret
popa
hlt
ljmp
sub
dec
xor
mov
xchg
test
xchg
lahf
pop
arpl
inc
cmp
mov
dec
outsl
lret
jl
push
fildl
arpl
and
mov
cli
pop
pushl
mov
sarl
das
mov
pusha
mov
jmp
inc
pop
ror
dec
and
or
jl
inc
stos
sbb
sub
sbb
lods
and
ljmp
shl
dec
adc
mov
fistpll
push
push
mov
and
test
sub
mov
and
pop
lds
mov
ret
jmp
repnz
cld
pushl
popf
add
jp
js
lock
cwtl
shrb
cmc
call
int3
cmc
adc
cli
out
pop
loop
fadd
xchg
xor
sti
mov
sub
cli
xor
mov
inc
jg
mov
movsb
and
pop
daa
sub
jne
outsl
cld
ljmp
inc
loop
cmc
fcomps
mov
push
mov
arpl
push
les
fadds
jmp
xchg
out
mov
inc
xor
cli
test
incl
jb
movsb
xor
push
add
pop
nop
or
pop
push
outsl
mov
repnz
pop
scas
mov
and
pop
push
ljmp
lock
in
outsl
jg
cmp
xchg
lea
scas
and
lds
cmp
lahf
shl
mov
in
rorb
push
sbb
inc
add
pop
and
jae
cmp
sub
mov
add
cmp
loopne
mov
aam
es
cmp
hlt
mov
push
call
sbb
daa
mov
mov
outsl
mov
sbb
push
push
fucomip
xchg
xchg
inc
mov
add
and
sub
das
cmc
jno
adc
dec
push
jl
inc
push
mov
xor
pushf
dec
mov
mov
popf
mov
add
in
xor
jbe
jnp
lds
pop
inc
xchg
inc
imul
jecxz
loope
sbb
pop
mov
orl
or
xor
dec
jb
add
in
adc
ja
aad
movsl
fdivrp
test
addr16
fcoml
leave
or
or
cmp
fldt
xor
lods
js
andl
and
mov
imul
pusha
add
clc
cmpsb
pushl
inc
mov
sub
pushf
std
data16
movsl
adc
or
movsl
call
fidivs
int
incb
add
adc
scas
jg
lea
lock
lock
mov
out
call
pop
add
mov
dec
call
pop
push
sar
loope
hlt
or
and
aam
mov
subl
inc
jmp
inc
stos
outsl
inc
xor
push
pop
cmp
sarb
loopne
popa
inc
lods
push
or
in
pop
add
push
cli
popf
out
dec
sti
pop
adc
add
cmp
das
shll
adc
out
fdivrl
mov
add
push
fs
pop
jg
sar
mov
shlb
mov
out
lods
or
test
jbe
sbb
rcl
pop
xlat
or
add
bound
mov
out
adc
pop
ficomps
inc
or
mov
decl
aam
nop
inc
popw
xchg
lea
pop
in
xor
rcrb
pop
xchg
das
nop
mov
loop
loop
add
out
pop
aad
mov
add
or
push
movsb
mov
or
add
sbb
and
or
pop
sbb
stos
out
cmp
add
lods
mov
shrb
pop
adc
fiaddl
mov
inc
outsl
jecxz
aam
mov
jno
add
mov
fs
cld
mov
adc
xor
enter
test
sbbl
rcrb
decl
fsub
outsb
lcall
mov
or
addr16
mov
hlt
adc
push
jno
sahf
loopne
add
scas
add
cmp
mov
mov
and
fisttpll
or
pop
jl
lahf
sub
les
loopne
jg
fnstcw
call
sub
out
ret
popa
or
mov
mov
xchg
push
fists
cmp
shlb
mov
dec
call
js
jl
cmpsb
out
add
sahf
xor
imul
pop
push
mov
ret
cmp
ljmp
std
test
adc
dec
cmp
push
adc
or
ss
mov
xor
aaa
lcall
pop
mov
inc
cmpsb
cmp
and
das
ljmp
incl
xchg
adc
sub
jbe
dec
nop
jmp
or
jb
push
pushf
adc
jmp
imul
pop
nop
push
sub
or
mov
jmp
loop
inc
pop
cmp
sbb
leave
cli
fcoms
cmp
mov
das
jge
jl
mov
pushl
mov
popa
jb
fcompl
add
ljmp
xor
arpl
inc
repnz
mov
mov
or
xchg
sub
mov
xchg
pop
mov
xor
icebp
in
inc
or
inc
pusha
sub
pop
sbb
pop
mov
ret
push
in
push
jae
mov
inc
add
fmulp
push
inc
scas
ud1
int3
aaa
fidivrl
stos
adc
cmp
insb
daa
xchg
cld
outsl
mov
jo
int
xchg
out
ds
fnstsw
pop
adc
add
cs
mov
adc
repz
pop
ljmp
sti
aad
adc
int
adc
cmp
jp
xor
fcomi
push
stos
repnz
push
ss
lock
rclb
dec
mov
filds
pushf
add
outsl
inc
lock
xor
or
shrb
xchg
scas
test
push
test
xchg
fisubrs
lea
cmp
jo
cmpsb
sbb
push
out
sbb
sub
xchg
les
or
fstl
aaa
mov
in
mov
add
adc
lcall
aas
jb
jne
push
adc
mov
stos
pop
push
ss
inc
in
dec
das
mov
movsl
aam
loope
test
lcall
xor
fs
addb
and
mov
jo
inc
inc
push
enter
add
test
sub
xor
push
cwtl
decb
cld
pop
scas
adc
pop
orl
stc
cmp
sbb
cmp
pop
mov
sub
mov
cpuid
repnz
ljmp
and
inc
shr
or
jle
test
jg
sub
fmuls
sub
sbb
popf
mov
or
or
stos
jnp
xchg
jmp
inc
sbb
adc
ljmp
pop
cmp
xchg
data16
test
push
pop
stos
gs
loope
outsb
jp
fistpl
cmp
push
mov
ficoml
test
hlt
out
pusha
pop
call
sub
jecxz
std
dec
aad
mov
dec
jl
mov
ljmp
or
push
mov
icebp
fwait
aas
cmp
xchg
loope
jmp
test
jmp
in
dec
pop
sarl
and
cmp
call
int3
cmp
mov
fidivl
dec
adc
pop
and
out
push
mov
push
daa
mov
mov
inc
lds
idiv
inc
mov
pusha
ja
decl
sahf
call
dec
aaa
shrd
cld
call
rorl
xchg
pop
loop
adc
mov
fnsave
popa
iret
and
mov
jo
mov
shlb
imul
adc
jg
jae
or
sub
xor
add
dec
cmpsl
or
sbb
mov
aam
iret
xchg
mov
pop
subb
insl
jl
in
push
lock
or
sbb
outsb
mov
add
out
xchg
push
aaa
dec
xchg
sti
xchg
mov
push
sahf
mov
pop
insl
int3
and
fists
aas
push
or
addr16
jbe
movsl
or
push
mov
imul
mov
push
jmp
stos
repz
arpl
sbb
xchg
or
and
test
jl
push
aaa
clc
call
adc
sub
add
push
cmp
dec
scas
ret
rcl
or
inc
dec
dec
inc
and
push
das
cmc
decl
mov
mov
icebp
add
push
jge
fbld
or
ljmp
mov
aam
mov
dec
les
leavew
pop
mov
jno
idiv
xchg
call
enter
adc
jne
lret
sub
icebp
cmp
aaa
mov
pop
inc
enter
lock
or
mov
test
and
mov
and
in
fldt
mov
inc
test
xchg
sub
lcall
pop
mov
push
adc
std
pop
call
scas
loop
push
movsl
aam
mov
stos
orb
mov
in
jg
sub
pop
jmp
and
stos
adc
sub
push
lcall
cld
outsl
adc
scas
xchg
adc
popf
jge
cld
pop
adc
inc
inc
cld
into
lret
or
andb
sbb
test
in
add
sbb
cmpsl
mov
incl
iret
arpl
mov
out
jle
rcr
movsb
mov
cwtl
add
fnstsw
decl
pop
shrb
jecxz
in
orl
stos
lret
out
ds
aaa
incb
outsl
push
js
sub
lahf
lret
and
js
or
dec
cmp
mov
pop
call
mov
mov
call
in
mov
mov
add
loop
stos
jmp
loop
mov
add
xor
femms
add
sbb
hlt
jg
aam
dec
or
lock
punpckhdq
adc
loopne
jnp
mov
mov
and
inc
sti
or
ret
adc
insb
mov
cmpsl
or
inc
adc
mov
add
sbb
test
jecxz
add
jnp
mov
add
fcmovb
dec
mov
incb
pop
rcrl
adc
rorb
pop
pop
repnz
sbb
and
sti
rcrb
and
into
mov
incb
jbe
ljmp
mov
mov
lcall
push
cld
shr
cmp
jmp
das
test
and
shll
hlt
xchg
bound
add
mov
orl
insl
add
clc
xchg
mov
sbb
std
or
mov
inc
popa
cmc
jg
outsl
sarb
pop
pusha
test
jl
pop
fs
pusha
sarl
ljmp
lods
add
stc
movsb
xor
mov
and
adc
fdivrl
les
mov
or
bound
mov
mov
adcl
int3
pop
lea
movsl
cwtl
sub
and
imul
xchg
adc
je
cwtl
sti
adc
mov
test
lock
jmp
icebp
jg
fwait
sbb
add
jno
hlt
loop
dec
xchg
imul
mov
call
test
out
lret
push
mov
add
das
ret
mov
dec
or
adc
mov
cli
jmp
scas
jno
mov
adc
faddl
xchg
or
fisubl
decl
repnz
jae
mov
or
add
and
loop
orl
or
rorb
inc
xchg
movsb
xchg
pop
out
mov
jns
push
rclb
push
sub
fsubrs
sbb
decl
dec
roll
push
aas
or
hlt
pop
inc
sub
xor
or
stc
enter
or
rolb
sbb
xor
mov
enter
and
repnz
das
sub
daa
cli
mov
sbb
repnz
pop
push
popa
dec
ret
dec
pop
adc
or
adc
dec
ljmp
fisttps
lret
ljmp
aam
mov
mov
fwait
cmpsl
xor
cld
das
pop
js
lret
add
mov
ljmp
repnz
ds
add
push
repnz
lods
jg
ja
scas
loope
add
shlb
and
pcmpeqd
jg
push
aad
imul
hlt
neg
jne
mov
xchg
loope
cli
and
lret
outsl
inc
jg
push
stos
push
movsb
xchg
push
add
aas
adc
loopne
divb
xor
inc
add
gs
jl
or
jo
daa
and
inc
pop
lahf
dec
pop
mov
cmp
add
sbb
std
jge
test
adcb
flds
popf
xor
jae
adc
fdivs
out
movsb
sbbl
adc
adc
jmp
jl
xor
iret
jbe
dec
iret
ret
ljmp
mov
mov
mov
xorl
jns
test
xor
mov
jle
xchg
mov
and
popa
jle
pushf
xor
incl
shl
enter
jnp
mov
gs
push
cmp
cs
push
mov
push
daa
inc
or
dec
das
cltd
cmp
lcall
lods
pop
ljmp
out
leave
mov
outsl
pop
mov
enter
push
out
call
lock
in
insl
mov
push
repz
add
dec
push
outsb
mov
push
mov
cmovne
ret
mov
std
test
in
mov
movsl
ficoml
cld
push
mov
scas
and
lock
jmp
adc
xchg
int3
dec
cmp
mov
setae
rorl
mov
pop
cmp
push
pop
add
adc
inc
shll
or
adc
inc
dec
pop
cs
xchg
xor
out
nop
dec
pop
aaa
fdivp
dec
push
loop
orl
mov
push
dec
cmpb
or
and
mov
mov
fs
scas
ja
push
mov
cwtl
pop
sub
lods
xor
out
loope
jmp
pop
cmp
mov
outsb
sub
cmpsb
jmp
jmp
cmpsl
loopne
shrl
cmp
aas
call
pop
mov
xchg
inc
jnp
aad
jg
jne
dec
bound
pop
sub
fisubrs
test
loopne
adc
adc
push
sbb
clc
inc
pop
mov
pop
fnstcw
dec
dec
or
cmp
dec
test
xchg
or
xchg
push
pop
sbb
add
fistpll
jb
fsts
sbb
add
out
pop
repz
ljmp
movsl
das
sub
add
lock
pop
fcmovu
rcrl
pop
rcrb
push
inc
daa
jge
cmp
pop
loope
dec
jb
inc
mov
das
icebp
push
lds
bound
mov
jo
push
shrb
std
aad
mov
xchg
rorb
out
or
sbbl
data16
lcall
add
mov
lret
aas
mov
fcomi
inc
cld
lea
aam
jno
jo
dec
shrb
mov
xor
add
adc
movb
push
mov
imul
mov
pop
and
push
xchg
les
decl
pop
jmp
and
mov
adc
bound
es
loope
sub
cltd
gs
loop
sbb
out
scas
push
decl
clc
pop
mov
mov
out
fldpi
push
sub
je
dec
pop
cli
aaa
push
loope
aas
push
add
jne
jg
jns
cwtl
jae
js
das
fwait
mov
xor
cmpsl
unpcklps
lret
push
rolb
clc
lcall
scas
sub
ret
dec
pushf
out
cmc
ljmp
outsl
jne
mov
repnz
xchg
pop
and
aaa
pushf
push
in
decl
push
mov
jp
xor
mov
jb
sub
dec
mov
mov
push
add
sub
and
ljmp
pop
jne
out
add
bound
je
loopne
aam
mov
push
bound
and
subl
mov
sti
in
sbb
sbb
lret
lea
dec
xchg
mov
mov
shll
xchg
mov
mov
mov
cmpsb
outsb
jecxz
incl
test
fucomp
inc
inc
lahf
stc
ja
dec
std
push
lret
fidivs
insb
cmc
xchg
outsl
jge
push
out
xchg
push
jb
sub
mov
std
jmp
movl
aam
push
push
out
and
in
xchg
and
aaa
xor
mull
mov
jne
lahf
mov
jl
mov
inc
cmp
mov
aad
mov
xor
inc
adc
xchg
push
dec
nop
or
sub
jp
or
jmp
inc
lret
fnstsw
pop
xchg
addr16
push
jo
sbb
push
lret
daa
std
addr16
xor
and
out
or
jecxz
inc
mov
aaa
in
loope
es
cli
lods
xlat
rorl
nop
and
xor
ljmp
xchg
sub
push
jle
mov
dec
lret
inc
and
arpl
sti
lods
push
std
and
dec
std
test
add
cwtl
mov
xchg
test
jns
mov
aad
loop
dec
adc
mov
test
negl
inc
std
mov
js
or
int
lods
daa
push
mov
call
call
mov
jle
shlb
add
adc
int3
sahf
aam
pop
cwtl
dec
mov
and
outsl
jge
rolb
loop
test
inc
adcb
xchg
push
icebp
lds
fwait
test
jb
sub
sbb
mov
jp
push
or
leave
sbb
add
ljmp
adc
sbb
push
push
jp
push
cltd
mov
pop
cli
pop
adc
sbb
cmp
adc
mov
mov
xor
repnz
cmp
jg
mov
or
sub
ss
xor
popa
aaa
xchg
lds
test
sub
icebp
or
gs
inc
clc
pusha
nop
mov
xchg
mov
out
notb
mov
mov
dec
dec
mov
sub
lea
sbb
idiv
mov
call
or
data16
sub
and
std
push
mov
call
fldt
xchg
sub
and
adc
arpl
imul
mov
push
sub
inc
and
pop
push
test
or
xchg
outsb
icebp
push
loop
cmp
nop
cmp
adc
std
sar
push
or
jecxz
ficoms
jns
aad
cmpsl
aas
js
jecxz
jg
out
and
dec
add
or
pop
call
sub
jae
mov
inc
push
roll
fsubs
jge
xor
into
pop
push
add
adc
out
push
fisttps
ret
in
pop
shrl
and
lock
mov
or
into
test
jle
or
add
testb
scas
fldcw
lea
fstl
test
shrl
xchg
fbld
mov
mov
insl
lcall
cmp
and
cwtl
adc
out
ja
jg
testl
dec
insb
std
pushf
repnz
inc
xchg
inc
inc
call
test
adc
adc
inc
filds
or
mov
adc
mov
push
lods
lcall
pop
pushl
pop
mov
lcall
sbb
mov
sbb
lods
inc
cmpsl
out
lock
mov
pop
xor
or
and
inc
sub
cmp
ss
jle
outsl
xchg
leave
cltd
rcll
mov
sbb
inc
loop
dec
std
pop
and
adcb
inc
cmp
inc
aad
mov
adc
jle
in
xor
leave
jp
addl
mov
and
test
int
into
iret
xor
mov
ljmp
out
push
jg
and
shll
xlat
jecxz
fisttpll
jg
das
insl
cli
fsts
ret
adc
sbb
ss
lock
cli
hlt
test
jle
decl
insl
cmpsb
scas
cmp
aad
push
pop
or
add
jo
xchg
clc
push
loopne
dec
xchg
sbb
orl
lcall
mov
xchg
inc
in
push
inc
jns
add
std
push
std
xchg
jbe
jmp
pop
push
xchg
mov
stc
push
inc
inc
iret
jns
dec
and
mov
xchg
cwtl
or
ficompl
adc
sbb
mov
push
ret
mov
pop
nop
repz
dec
pop
push
jo
or
push
mov
and
fldt
sbb
push
aaa
js
cmp
pop
xchg
mov
inc
dec
xlat
fs
push
add
sbb
lcall
push
enter
cmp
gs
in
fsts
sbb
das
mov
adc
les
jp
jno
cld
lcall
inc
xchg
push
inc
aaa
pop
mov
pop
mov
push
mov
std
adc
xchg
cwtl
dec
scas
and
fisubs
lret
xchg
int3
das
dec
push
sar
popl
in
stos
or
push
adc
push
mov
js
xor
movsl
test
add
mov
pop
in
inc
testl
sahf
cld
outsl
fistps
lret
stos
mov
fs
cltd
sbb
das
hlt
pop
xchg
jle
pop
movsl
sti
sub
outsb
add
mov
xlat
hlt
sub
pop
push
mov
loopne
ds
dec
insl
pop
cli
dec
std
inc
mov
fisubl
xchg
aam
add
mov
push
pop
cmc
cmp
lea
mov
je
call
nop
in
inc
dec
jp
xchg
adc
sar
xor
pop
cli
push
add
or
inc
lret
xor
repz
inc
cli
lock
les
inc
dec
data16
push
lcall
jg
test
aaa
add
shrb
add
aas
adc
push
add
loope
inc
or
cltd
xchg
cmp
hlt
add
and
fiadds
and
pop
cmp
incl
ja
add
xor
fdivs
cmp
sub
test
adc
cmp
pop
stos
fsubrl
aaa
pop
loop
pop
or
ljmp
sarl
and
sub
add
inc
cs
out
inc
inc
jg
lret
orb
lods
push
popf
adc
jecxz
push
push
ja
mov
lcall
mov
add
loope
call
mov
add
mov
daa
bound
divb
ficompl
xor
bnd
lea
xchg
xchg
or
mov
push
std
in
dec
pop
out
mov
out
fucompp
decl
divb
mov
dec
movsb
sub
add
out
jg
add
mov
jg
filds
inc
adc
mov
cwtl
push
flds
mov
call
inc
ljmp
jbe
outsb
arpl
mov
or
sub
aam
mov
pop
add
call
cltd
sbb
jnp
cmp
lret
loop
xor
push
sbb
subb
fnsave
jo
divl
lods
xchg
jl
dec
add
or
push
leave
push
mov
lock
push
dec
mov
adc
jne
scas
shlb
mov
jg
fisubrl
inc
mov
xchg
call
sbb
add
sahf
out
loope
stos
fcompl
leave
add
mov
push
fimuls
cli
sub
scas
push
cmp
test
mov
fsts
fbstp
push
cltd
inc
dec
mov
pushf
sub
dec
or
in
scas
and
mov
rorb
inc
and
cld
mov
pop
dec
faddl
mov
enter
mov
jg
lret
mov
shll
ror
sbb
pop
xchg
lcall
or
adc
shl
imulb
std
dec
je
cmpsl
jl
add
inc
adc
and
js
and
xchg
or
mov
sti
add
cmp
dec
ret
cmp
pusha
stc
sbb
subb
xor
imul
incl
das
orl
sub
rcr
call
lret
and
movsl
pop
fs
mov
ja
fwait
xor
test
lahf
and
pusha
xchg
bound
out
cmp
jmp
icebp
sarl
dec
mov
mov
lcall
call
ret
mov
mov
cwtl
jg
jp
xchg
jbe
dec
jbe
push
push
addl
mov
ret
gs
test
int3
orb
data16
xchg
subl
add
mov
mov
dec
subb
aaa
push
xchg
adc
cmpsl
ds
pop
or
and
pop
pusha
inc
lds
xchg
jmp
aaa
incb
out
lret
add
mov
loop
xchg
xor
pop
aam
jno
mov
ret
xor
test
mov
or
daa
and
in
jg
mov
fsubrl
mov
fwait
js
mov
cmp
cs
arpl
mov
add
xor
ja
jno
sar
mov
sub
or
mov
pop
inc
movsb
stc
xor
aam
mov
cli
cmpsl
mov
test
lahf
clc
jmp
sti
pop
xor
cmc
dec
mov
mov
adcb
enter
pop
jle
pop
clc
scas
xorl
push
push
fcmovne
add
and
fs
inc
aad
leave
adc
xchg
call
adc
mov
mov
scas
dec
imul
and
in
pop
jecxz
adc
pop
insl
xor
push
rcrb
sbb
sbb
cmp
pop
adc
movsl
cltd
and
pop
mov
js
lcall
mov
sbbl
pusha
movsl
repz
stc
inc
inc
inc
inc
nop
fsubl
shrb
nop
aaa
in
jecxz
dec
insb
cltd
sbb
daa
into
and
les
lcall
filds
inc
scas
push
mov
ljmp
mov
cmp
sti
cmp
xor
push
outsb
clc
mov
rol
adcb
addl
pushl
dec
ret
inc
pop
aad
sti
mov
inc
ffreep
push
leave
sub
fwait
cwtl
nop
cmp
lcall
and
mov
jp
and
inc
int
fs
jb
clc
jno
dec
dec
push
add
outsl
mov
add
test
ret
sbb
mov
aas
xor
test
mov
mov
push
push
faddl
sbb
dec
or
or
lcall
shll
dec
push
push
and
ljmp
notb
movsl
jae
lahf
test
icebp
mov
mov
out
aad
mov
aam
ret
loope
sbb
addb
and
jg
dec
add
mov
push
jb
cmp
int3
fcoml
inc
dec
inc
test
ss
bound
lds
push
mov
pop
adc
adc
push
in
or
mov
jb
mov
pop
xchg
xlat
xchg
sbb
adc
push
xor
jmp
pop
les
mov
jne
sqrtps
arpl
mov
jecxz
mov
or
sbb
fdecstp
jg
jl
sbb
mov
xor
cli
scas
pushf
dec
enter
jmp
mov
inc
out
cmpl
fcmovne
xchg
push
incl
adc
cmp
or
outsl
ljmp
in
lret
sbb
std
es
lods
cmp
xchg
movsl
test
bound
lahf
inc
idiv
jg
jmp
cmpsb
adc
or
adc
jp
mov
jecxz
mov
sub
mov
and
js
adc
cmpsl
rcr
bound
pushf
sub
pop
fdivr
xchg
mov
adc
shrl
je
lock
arpl
loopne
jecxz,pn
jo
pushf
dec
sbb
and
mov
push
and
inc
shr
icebp
add
push
out
add
bound
test
add
and
je
cld
movsl
xor
decl
gs
adc
pop
add
push
jg
hlt
push
test
test
push
pushf
ret
sub
cs
adc
ret
dec
loop
push
pop
push
arpl
cmpsl
or
add
mov
inc
arpl
fisubl
dec
mov
stos
mov
sub
inc
xchg
adc
mov
add
rolb
xor
call
add
lcall
or
dec
sbb
or
stos
std
mulb
or
aad
mov
sbb
decl
dec
add
hlt
inc
ljmp
and
lods
xchg
clc
adc
jnp
mov
sahf
movsb
push
mov
push
inc
pop
cld
mov
mov
and
inc
sbb
inc
fnstenv
call
out
cli
or
add
inc
mov
lods
adc
es
lcall
jnp
adc
sbb
push
sahf
inc
mov
pop
or
fadds
mov
les
mov
test
adc
mov
lret
or
add
movsl
or
dec
popf
xorb
adc
sbb
or
test
lods
in
and
fld
sub
lea
nop
or
fwait
mov
push
push
std
out
mov
xchg
jns
inc
fcmovnb
fucomi
aaa
movsl
gs
dec
jo
call
inc
jg
mov
mov
loop
jge
bound
dec
or
inc
iret
fsts
sbbb
cmp
stos
adc
sbb
decl
rcr
dec
jns
push
js
mov
ljmp
mov
cmpb
addb
pop
mov
or
adc
mov
mov
jb
mov
inc
sbb
pop
jp
jo
js
les
cmpsl
and
inc
mov
xchg
adc
pop
push
lcall
movsl
and
inc
sub
push
in
out
fidivs
cltd
mov
mov
sub
sub
sub
inc
std
incl
data16
inc
shl
rcll
lock
in
mov
add
test
mov
jle
and
dec
lods
rorb
mov
cld
mov
or
push
dec
add
cld
cs
jnp
in
jle
fdivr
in
jmp
add
mov
shl
imul
enter
push
test
add
jg
in
aaa
in
sbb
xor
and
mov
lea
push
inc
push
add
dec
cmp
mov
rcl
mov
rol
jo
mov
jmp
mov
fucomi
adc
int
adc
xchg
push
fcmovnb
pop
xor
loop
das
adc
sbb
xchg
cmpsb
or
aaa
stc
scas
test
and
add
cmp
pop
xor
push
lock
xor
pop
xchg
push
popa
dec
jo
js
aam
mov
cld
xchg
clc
ret
adc
add
aas
inc
mov
nop
test
fistpl
push
clc
mov
stos
or
push
adc
push
inc
mov
xchg
or
adc
clc
ljmp
insb
inc
pop
inc
jae
lret
fdivrl
rolb
push
jg
pop
stos
push
dec
sub
push
popf
inc
sahf
mov
idivb
adcl
fsubs
dec
bound
xchg
xchg
jg
icebp
cmp
rcll
data16
int3
stos
nop
and
jmp
dec
mov
mov
mov
jnp
inc
lcall
push
jno
jno
adc
and
call
jo
and
sbb
push
sahf
in
jmp
aam
mov
stos
add
fbstp
in
shrb
mov
rolb
and
outsb
inc
outsb
mov
iret
test
pop
rcrb
cmp
iret
or
mov
sbb
pop
int
push
mov
sub
outsl
pop
or
dec
mov
gs
add
rcll
mov
rcrb
nop
cld
pop
cld
mov
adc
and
or
pop
push
bound
call
xchg
bound
rorl
scas
cld
mov
inc
dec
cltd
sbb
jecxz
insl
add
enter
mov
jg
xor
frstor
push
es
testb
adc
fmull
mov
mov
mov
mov
mov
in
js
sti
mov
jge
mov
in
push
or
push
dec
roll
fs
daa
call
pop
scas
mov
das
mov
cmp
xchg
lcall
scas
out
ljmp
sub
cmp
mov
mov
cmp
aas
mul
mov
jae
cmpsl
stc
sbb
call
adc
out
add
inc
push
rolb
sbb
mov
and
xchg
add
out
pop
lcall
or
lahf
add
andb
push
dec
add
adc
stc
cli
out
push
xchg
jae
xchg
filds
mov
push
lds
pop
inc
fdivrs
lock
aad
adc
mov
lret
addr16
xchg
xorl
xor
jmp
push
clc
ljmp
pushf
je
push
lea
mov
pop
loope
shrb
es
xlat
and
or
mov
into
mov
lods
or
fnstsw
sub
cli
outsl
jl
adcb
scas
notb
or
pop
cli
arpl
mov
xchg
or
popl
mov
pushf
sbb
inc
scas
xor
add
xchg
push
xor
int3
dec
adc
push
rcrl
xchg
add
and
add
inc
sub
adc
pop
or
and
adc
rorl
pop
pusha
call
add
lds
xchg
push
or
xchg
or
cmpsb
dec
jmp
in
sahf
mov
sahf
pop
test
and
jge
test
gs
mov
pop
add
aam
adc
je
sbb
pop
stos
pusha
jecxz
adc
dec
push
inc
lahf
aaa
sbb
shl
jl
add
daa
neg
dec
stos
xchg
aas
add
enter
sub
push
sbb
cmpsb
adcb
push
cs
xchg
aad
lea
push
aad
mov
ret
xchg
push
adc
pusha
aad
or
mov
mov
and
insl
adc
push
xchg
push
mov
mov
jecxz
add
loopne
and
lods
xchg
pop
push
fistps
loope
jo
subb
cmpsb
loopne
cmp
lret
jno
or
push
sbb
sbbb
mov
jo
xchg
iret
in
sbb
cmp
mov
stc
mov
add
jmp
int
add
mov
jle
popa
int3
cmpsl
outsl
pop
push
add
mov
xchg
jo
fidivs
adc
adc
daa
lahf
jnp
cmp
mov
sbb
jns
mov
arpl
add
cmp
pop
pop
jp
sub
pop
sbb
push
pop
and
subb
clc
inc
mov
adc
stos
add
sbb
shlb
filds
sbb
les
inc
sub
movsb
sbb
mov
jl
enter
fcoml
mov
or
pop
gs
pusha
and
push
and
jge
pop
inc
xor
mov
xor
add
pop
and
les
lcall
lods
out
daa
in
aad
insb
in
pop
fmuls
mov
pushl
mov
xor
shll
ljmp
decl
dec
push
add
jmp
pop
js
scas
ljmp
cld
mov
mov
orb
sub
iret
loope
fcmovnu
add
pushf
mov
inc
mov
neg
sub
ficoml
mov
add
or
ljmp
jecxz
adc
xchg
adc
jle
pop
add
pop
test
lret
dec
sub
jg
cld
and
test
or
mov
add
call
add
jo
pop
fcoms
or
out
cmc
mov
clc
fbstp
andl
inc
sub
pop
adc
mov
mov
cmc
adc
add
pop
lret
dec
lods
daa
xor
shrb
scas
movsl
mov
mov
sbb
dec
mov
clc
cli
or
call
fiaddl
pushf
sub
fsubs
xor
pushf
lcall
movsl
imul
and
pop
ljmp
enter
cmp
fidivrs
mov
das
iret
pushf
int3
and
popa
push
js
lods
stos
aam
add
xchg
sub
sub
test
add
ret
xadd
test
inc
ja
adc
jbe
sbb
push
mov
cmp
test
icebp
push
push
and
test
lds
loope
in
mov
push
ds
cmc
nop
inc
mov
das
mov
jle
xor
dec
sbb
daa
or
sbb
pop
loopne
testb
lret
out
sbb
dec
sbb
call
dec
mov
pop
sarl
int3
add
enter
iret
adc
movsb
pop
and
idiv
jg
idivb
fisubrs
jne
pop
cs
and
aas
jg
xchg
fsubr
scas
xor
cmp
xor
inc
sub
jne
decl
and
call
std
das
test
lret
inc
sub
and
push
inc
leave
adc
icebp
jmp
jp
lcall
jmp
daa
jae
xor
jl
mov
cmp
stos
dec
dec
call
loope
stos
cmp
push
or
jle
dec
sub
push
rclb
hlt
rcrb
bnd
push
pop
adcb
addb
repnz
lcall
xchg
idivb
jns
mov
incb
divl
pop
sbb
ljmp
test
xchg
lret
clc
iret
enter
test
xchg
lods
mov
sti
sbb
movsl
or
repz
das
aam
test
adc
xor
rorb
sti
mov
or
pusha
mov
test
jmp
add
out
std
ret
outsl
mov
cmp
scas
lahf
dec
lahf
push
js
push
sbb
pop
call
add
and
fadd
call
add
bound
bound
sub
es
push
out
add
popf
push
push
xchg
popf
out
or
jo
out
cmp
cmp
mov
or
push
scas
or
data16
pop
cld
dec
ss
std
lea
clc
inc
push
xchg
jg
out
ret
ja
inc
aaa
cli
mov
fidivrl
adc
adc
mov
cld
push
or
mov
cs
lea
enter
ja
sub
add
daa
or
sbb
loope
fcoms
jo
rorb
add
sub
and
out
sbb
or
cmp
int
cli
out
sub
insl
jge
xor
sbb
push
xlat
rol
test
scas
je
mov
outsl
pop
fiaddl
dec
stos
mov
mov
push
repnz
xor
cmp
decl
pop
mov
xor
icebp
inc
imul
jge
dec
int
or
xor
lahf
and
inc
inc
and
inc
push
add
push
xchg
stos
sbb
sbb
xchg
imul
mov
push
jl
ljmp
icebp
mov
adc
sub
stos
dec
mov
cmp
or
fcmovb
shlb
gs
dec
mov
sbb
push
adc
out
push
hlt
or
stc
add
xchg
lcall
push
jg
rclb
insb
mov
repnz
mov
imul
push
add
xchg
and
mov
outsl
loop
rcrb
loopne
sbb
aad
push
inc
das
incb
incl
andl
rcl
pop
in
lea
push
xchg
sub
jp
adc
in
fstpl
mul
jg
jmp
or
xchg
andb
jns
sarb
test
or
incb
fildll
and
push
cli
out
cmp
push
mov
fisttpl
repz
pusha
popf
or
add
lret
xchg
mov
movb
ret
fdivl
push
nop
iret
cmp
mov
sbb
iret
mov
jg
xor
push
push
or
movsl
sbb
dec
sbb
insl
mov
add
add
or
cmp
xchg
insl
out
sub
xor
xchg
or
shl
and
adc
push
jge
pop
loop
inc
push
xchg
mov
popa
enter
icebp
je
loope
mov
int3
in
mov
js
adcl
es
fisttps
insb
push
outsb
xor
cld
sbb
jo
sub
and
js
enter
hlt
iret
fs
xlat
pop
sub
jno
call
mov
pushl
and
imulb
jne
sub
cmc
adc
jno
loopne
cmc
mov
icebp
sbb
sub
mov
rclb
loope
inc
add
in
stos
and
jge
inc
cli
mov
xor
fwait
push
mov
aam
mov
mov
lcall
nop
cs
adc
xchg
xchg
in
mov
cmc
sub
pop
movsb
js
mov
jg
pop
cvttps2pi
push
sbb
iret
and
mov
push
jmp
fstl
loop
push
sub
push
adc
inc
insb
xchg
or
addb
and
push
push
dec
cld
dec
outsb
and
arpl
pavgw
cmp
and
stos
jmp
xchg
fs
dec
add
fadds
enter
loop
test
mov
adc
jge
shll
clc
sub
push
push
mov
jle
mov
loope
sub
adc
outsl
and
outsb
dec
cmp
mov
inc
jo
test
fbld
adc
arpl
icebp
in
cmpsl
pop
cmpsb
aam
popa
inc
rolb
jg
lret
xchg
test
dec
cmpsb
inc
push
xor
cmp
repnz
and
adc
push
fwait
scas
cmpsl
jne
adc
into
inc
dec
add
dec
es
mov
add
and
add
mov
rolb
mov
dec
dec
or
cs
ljmp
add
adc
pushf
fs
dec
sarb
lret
sar
mov
test
aas
fiadds
and
mov
in
mov
jecxz
push
mov
jns
add
xchg
and
test
decl
iret
xor
loop
adc
or
add
cmp
mov
mov
pop
cmpsb
sbb
add
push
pusha
fwait
and
add
scas
movsb
lds
inc
mov
pop
clc
enter
mov
inc
es
jmp
inc
loope
lcall
and
int
pop
sub
push
call
jg
popa
lods
cld
jle
dec
inc
in
add
cltd
sarb
mov
add
ds
xor
push
outsl
cld
mov
pop
call
mov
testb
cmpl
sub
cmpsb
fwait
insb
pusha
mov
gs
cmp
jmp
adc
mov
and
jp
mov
mov
clc
lcall
sbb
dec
and
into
and
ret
mov
pop
jle
mov
cmpl
test
fildl
incl
movsl
mov
or
and
pushl
sar
adc
xor
push
scas
sub
mov
push
fistps
jp
mov
jbe
push
mov
inc
cmp
into
ljmp
adc
mov
andl
pushf
mov
cmpsl
shrb
lds
das
aas
add
inc
and
xor
test
lret
xor
test
les
add
and
inc
subb
loope
mov
mov
imul
lea
cmp
mov
std
or
sarb
aaa
and
loopne
das
sub
loop
mov
pop
add
lret
sbbb
in
push
mov
cmp
std
testb
push
stos
dec
push
lret
call
add
test
jmp
inc
test
mov
pop
imul
xchg
shll
sbb
aas
sti
mov
lret
loop
push
fisubs
mov
mov
cltd
push
push
sti
sahf
subl
jle
pop
add
popa
xor
adc
incl
ljmp
mov
add
jbe
or
add
lock
hlt
hlt
and
inc
add
outsb
push
or
insl
cmc
mov
popf
xchg
cmp
adc
dec
and
fwait
sub
lods
loop
jp
adc
push
std
xchg
fsubl
addr16
sub
int3
or
outsl
mov
imul
lcall
push
loopne
addb
or
pop
adc
jg
loopne
jno
push
inc
mov
dec
inc
mov
repnz
mov
popa
out
add
inc
add
mov
inc
mov
jne
out
sbb
mov
dec
lret
xchg
enter
call
mov
or
sub
repnz
jecxz
adc
adc
push
aas
fadds
data16
xchg
clc
pushl
lcall
mov
sbb
andl
icebp
cli
pop
std
jns
inc
sbb
mov
and
lock
mov
pop
repz
cmp
mov
andb
sbb
sbb
and
push
mov
or
sub
aad
inc
xchg
mov
pop
mov
and
lret
inc
jge
push
pusha
inc
lret
fcom
call
cmc
fisttps
hlt
inc
popf
sbb
addb
out
cld
dec
push
and
data16
cmp
je
stc
add
mov
mov
push
or
pop
xor
shll
imul
frstor
repnz
imul
daa
or
sbb
hlt
sbb
lock
xchg
lahf
adc
dec
mov
inc
adc
scas
sarl
insb
jmp
ds
xchg
xchg
xchg
mov
and
pop
mov
cmc
cmpl
xor
das
and
repnz
loopne
adc
mov
jmp
jb
xor
movsl
rcl
cs
add
ret
sub
jmp
adc
pop
cmp
fldenv
xor
sbb
push
mov
loopne
add
cs
stc
bound
add
pop
lcall
sub
or
dec
sub
xchg
jg
addb
or
int
add
jg
xor
and
mov
jg
pop
and
fwait
cmp
sbb
sbb
aaa
push
adc
or
mov
rolb
pop
inc
iret
push
xchg
je
lcall
pop
shlb
insl
rorl
add
loopne
and
test
jmp
or
cmp
push
clc
out
pop
cli
cwtl
outsb
lods
push
mov
adc
and
test
test
ds
or
cmpsb
mov
adc
ljmp
fcomip
inc
dec
push
test
nop
lcall
insl
sub
les
push
inc
fistpll
add
xchg
add
jns
dec
and
cmpl
aad
and
xchg
sbb
imul
sti
ja
jge
rcrb
lods
mov
lahf
adc
add
outsb
sbb
lcall
stos
lea
mov
dec
adc
loopne
mov
add
scas
test
push
js
lods
mov
push
daa
sbb
xchg
sub
pop
sahf
call
xor
aad
les
or
sbb
pop
ja
xor
cltd
and
sub
add
pushl
mov
mov
mov
arpl
add
shr
jo
adc
xchg
in
cmpsl
popa
pop
mov
xchg
mov
push
and
or
sbb
incl
mov
sbb
jg
ffree
mov
lock
xor
mov
mov
inc
sbb
sbb
lcall
add
enter
fdivr
aaa
ds
inc
popf
les
sub
clc
dec
fists
sbb
push
fmulp
lods
push
ret
mov
pop
movsl
in
test
inc
imul
cmp
jg
xchg
mov
add
sbb
add
pop
pushf
lcall
test
mov
sub
sahf
int3
pushf
popa
mov
icebp
dec
mov
fwait
mov
je
mov
icebp
sbb
sub
and
stos
xchg
clc
pop
mov
add
lcall
dec
decl
movsl
ss
rcrb
jge
and
into
add
repnz
movsl
sub
jl
and
mov
add
loop
test
mov
xorl
push
cmp
stos
mov
sub
and
or
jb
outsl
sub
mov
xor
enter
decl
mov
xchg
sbb
std
push
mov
adc
inc
and
push
lahf
sti
xchg
dec
rcll
ljmp
jl
test
add
inc
or
push
rcll
stos
inc
xchg
mov
dec
pop
push
ljmp
pop
cli
xchg
fwait
inc
lea
xchg
and
add
subb
lock
leave
cld
cmc
fmull
and
leave
sbb
inc
pop
clc
sub
inc
cmc
dec
popf
push
es
pop
xchg
js
fiaddl
cld
lret
inc
adc
and
imul
pop
mov
xor
inc
shr
add
js
dec
push
stos
xor
adc
les
cltd
inc
es
sbb
inc
push
mov
xor
add
sbb
mov
and
and
aaa
outsb
cld
jmp
sbbl
or
adc
fldl
pusha
mov
mov
dec
movsl
and
fs
adc
or
and
dec
cmpsb
incb
inc
cmp
add
mov
xchg
insb
mov
sub
fsubr
sbb
loope
pop
test
js
adcl
ds
call
or
mov
mov
in
xor
les
mov
sbb
daa
and
xor
movsl
cld
es
jg
test
dec
pusha
or
and
add
xor
pop
pop
mov
adc
jae
push
jecxz
and
jecxz
xchg
inc
loopne
bound
loop
repnz
push
paddb
inc
dec
std
pop
incl
loop
push
xchg
jb
push
or
cmc
or
hlt
or
and
loop
movsb
push
mov
and
fistpl
push
mov
test
push
inc
sub
lcall
pop
aaa
leave
rcl
movsb
mov
add
std
sbb
jmp
mov
dec
sbb
scas
dec
rcrb
and
or
add
pop
in
or
mov
mov
out
ja
pop
outsl
xchg
jg
push
cmp
call
and
test
push
dec
pop
lock
fucomip
mov
aaa
dec
in
xor
or
xchg
packsswb
outsl
std
aaa
fldenv
sub
pop
imul
cli
notl
cmp
es
dec
sbb
lds
push
sbb
nop
shl
push
push
fnstsw
adc
mov
push
les
loop
lds
mov
pop
cmpb
push
sub
jbe
and
mov
fldenv
loopne
rclb
lods
pop
daa
add
xchg
call
push
pop
cmp
out
pop
xchg
xor
arpl
xchg
fildl
test
cld
nop
scas
aas
repnz
test
call
arpl
or
pop
xchg
jae
leave
insb
dec
enter
test
or
fistl
xchg
sbbb
repnz
inc
xchg
adc
lods
pop
cmpb
mov
add
cmc
add
addb
dec
adc
std
mov
pop
mov
ds
jecxz
ret
je
pop
mov
pop
cli
pop
add
bound
int
push
xor
xchg
dec
in
pushl
push
les
dec
push
mov
sar
push
dec
das
jne
push
pop
xor
lcall
or
outsl
jl
sbb
push
inc
pop
pop
jbe
xor
aaa
push
call
fwait
pop
adc
adcl
and
xor
popa
sbb
ret
mov
inc
cli
jl
in
jne
xchg
xchg
arpl
fisubrs
jg
jmp
cmpsb
push
imul
aas
pop
cwtl
mov
pop
inc
sti
lods
rcrl
add
cli
jbe
mov
call
std
mov
mov
ja
popa
push
setp
test
or
jge
and
sbb
or
out
push
jmp
push
pop
sub
fldt
lcall
cmp
xor
mov
pushl
pop
mov
call
cmovne
pushf
adc
pop
nop
sub
adc
fidivrl
push
push
sub
push
push
cmpl
pop
rorl
loop
cld
or
dec
and
mov
aaa
mov
pushf
iret
xchg
insl
or
push
nop
push
add
mov
inc
lock
enter
jg
push
pop
insl
jecxz
mov
loop
pop
mov
outsb
xchg
add
lods
pop
popf
ss
pop
mov
decl
push
pop
add
in
or
jns
inc
lcall
aam
jecxz
or
mov
jg
xor
xchg
cmpsl
es
ss
cs
mov
push
dec
lcall
call
push
mov
pop
xchg
std
mov
or
pop
pop
inc
enter
mov
jb
mov
lods
mov
push
rorl
xor
outsb
adc
outsb
movsb
jne
testb
xlat
sbb
sahf
push
sbb
out
xor
mov
lcall
mov
xchg
xor
out
fyl2xp1
or
call
xchg
cmp
inc
sub
push
jg
imul
je
add
or
inc
sub
inc
pushf
sbb
cmp
int3
or
daa
lret
inc
out
cmp
jo
sarl
clc
push
out
xor
push
cld
adc
or
test
dec
ja
sbb
lds
movsl
adc
ljmp
cmp
test
into
push
adc
mov
mov
faddl
push
lea
lods
testb
rcll
mov
dec
repnz
inc
subl
call
and
arpl
mov
leave
shrl
fldt
pop
dec
sub
fcompl
adcb
pusha
sub
stos
ljmp
pop
push
xchg
jmp
arpl
add
mov
add
pop
arpl
mov
mov
sbb
and
push
sbb
ds
lock
stos
aas
imul
call
sti
mov
jne
movsl
dec
sbb
inc
or
lcall
cmp
sbb
sbb
adc
cmc
inc
and
pop
loop
sub
lea
add
pop
clc
dec
js
add
mov
ljmp
pop
lock
loop
push
inc
icebp
das
cmpsl
mov
lret
lret
jge
adc
in
dec
xchg
test
fsubrs
add
lea
fdivrs
mov
mov
pop
cltd
mov
std
xorb
decl
ficompl
idivb
sub
hlt
repz
xor
cli
ja
sbbb
adc
mov
and
sbbb
lock
adc
pop
push
mov
in
test
cmp
jecxz
or
push
lret
add
sub
pushl
jle
push
or
movsb
cmp
mov
xor
std
jb
andb
pop
push
arpl
dec
pop
movsl
mov
ret
sbb
and
subb
ss
mov
data16
insb
adc
in
or
out
lahf
jb
das
add
loopne
and
mov
clc
jge
sbb
or
pop
js
icebp
push
js,pn
repnz
aad
sbb
incl
popf
add
fcoms
movsb
ss
test
or
pop
das
adc
pop
xchg
xlat
pop
xchg
mov
dec
pushl
outsl
lods
orb
or
and
iret
popf
pop
xor
loop
xor
lahf
or
dec
mov
xchg
xor
push
lret
nop
int
dec
sbb
mov
dec
sbb
outsl
hlt
push
mov
fisubs
cwtl
push
pop
pop
sub
dec
push
jle
das
pop
outsb
mov
or
shll
test
sub
xchg
adc
add
mov
or
jmp
sahf
pop
ret
lahf
cld
call
cltd
and
cmp
data16
and
cli
test
pusha
repnz
sub
adc
pop
and
xchg
out
scas
shll
fwait
jp
inc
pop
cld
sbb
mul
mov
dec
push
push
cmpsl
pop
call
xchg
rclb
jb
lcall
add
ret
mov
test
cmp
daa
dec
xchg
js
or
movsl
add
movsl
adc
psubq
xchg
mov
sub
pop
pop
popa
add
adc
in
shl
or
test
jg
sti
inc
pusha
push
pop
dec
imul
insl
das
cld
cmp
sbb
idiv
xor
jnp
cli
ja
dec
loop
pop
loope
imulb
inc
pop
shlb
push
xchg
push
add
sub
add
fs
incl
mov
notb
sarb
xchg
shlb
xor
stos
jg
add
mov
push
outsl
fildll
loop
call
ljmp
ljmp
sbb
jge
aad
mov
movsl
or
in
call
ret
and
jl
imul
addl
les
pop
test
inc
and
add
test
in
cmpsb
sbb
mov
push
jbe
mov
xchg
rorl
bound
test
insl
adc
add
and
jb
rorl
add
mov
xchg
loop
jecxz
lret
insb
xor
inc
sbbl
shlb
sub
decl
addr16
add
push
rorb
daa
lock
jmp
insb
or
sub
adc
mov
sub
xchg
push
jl
mov
in
and
clc
add
in
aad
lcall
mov
inc
fisubrl
inc
push
mov
and
jg
jecxz
js
xchg
pop
mov
sahf
jne
mov
xchg
inc
call
push
test
ja
fildll
hlt
mov
orl
and
clc
lcall
dec
rcl
fsubrs
addb
xchg
push
mov
push
hlt
aaa
and
and
sti
cmp
fists
clc
and
int
adc
inc
mov
mov
inc
pop
pop
push
std
lods
or
xchg
jnp
adc
pop
xchg
xchg
sbb
stos
fisttpl
mov
incb
aaa
cmpb
mulb
adc
out
mov
and
adc
mov
pop
inc
and
daa
iret
and
cwtl
test
fadds
add
inc
mov
test
popa
and
push
pushl
and
adc
push
mov
mov
mov
and
mov
or
xlat
cwtl
cwtl
jp
mov
adc
mov
mov
fucomip
or
xchg
sbb
fwait
test
or
loopne
and
mov
fcompl
jge
adc
inc
lods
lcall
pop
mov
adc
push
or
fdivrp
adc
adc
mov
and
daa
test
add
adc
add
cli
ljmp
mov
loop
cld
stos
out
push
test
inc
pop
incb
jmp
decb
fs
cmp
test
dec
cmp
js
mov
jnp
les
pop
adc
call
das
xchg
pop
mov
enter
sub
add
and
jo
int3
add
outsb
mov
xchg
jns
popa
or
loopne
sahf
jo
pop
mov
pusha
lds
ret
aas
add
ljmp
jp
adc
sbb
or
xchg
mov
dec
push
xchg
jmp
mov
add
dec
jnp
lods
xchg
out
scas
add
push
add
xorb
arpl
or
call
adcl
jne
xor
or
mov
imul
ja
les
push
adc
scas
in
sbb
pushl
int
mov
dec
jl
cmpsl
pop
xchg
dec
dec
jb
movsl
lcall
call
dec
pusha
dec
rcrb
pop
loope
mov
je
je
rolb
mov
fldl
lods
add
call
mov
xlat
inc
cwtl
mov
and
mov
cmp
xorl
xlat
jno
push
mov
jmp
mov
mov
push
fwait
jmp
fdivrs
stos
leave
add
jb
cmpsb
xchg
in
das
inc
ret
push
cmp
pop
pop
cli
pop
ret
cli
pop
push
das
aam
adc
cmp
lock
lret
add
cmpb
mov
jg
lea
push
and
inc
jo
bound
fcom
ret
or
cs
inc
cmp
mov
mov
sbb
test
sbb
push
js
mov
add
xchg
jle
shl
movsl
inc
adc
cmpsl
call
sahf
add
roll
in
or
incb
xor
cmp
out
cmp
jo
test
popf
add
fs
stos
outsb
icebp
inc
mov
xlat
movsb
shrb
pop
bound
ja
lock
xor
cmp
insb
icebp
aaa
clc
jmp
jne
fbstp
add
mov
mov
rcll
add
inc
or
les
sahf
in
insl
xchg
rcrl
jp
cli
mov
pop
mov
add
jbe
jg
xchg
loopne
mov
pop
fs
cmp
outsb
push
push
nop
xchg
cli
pop
call
cwtl
mov
and
cmp
inc
dec
xor
arpl
add
aaa
xchg
repz
cmpsb
inc
mov
mov
adc
sbb
pop
cmpb
and
pop
inc
dec
imulb
mov
lret
into
mov
inc
rolb
add
mov
jle
ficoml
mov
loop
cmc
in
imul
dec
pusha
jo
inc
test
daa
nop
scas
add
je
aaa
push
cmp
jecxz
mov
fmul
out
mov
sub
adc
sti
jae
fstp
rcrb
pop
nop
shlb
push
sbb
pop
outsl
pop
push
inc
sub
push
push
nop
push
and
add
aas
lds
cmp
idivb
xor
pop
loopne
test
mov
xchg
in
add
insl
add
pusha
decl
mov
add
xor
adc
pop
add
rcll
jbe
filds
andl
add
or
jo
push
cltd
and
dec
clc
push
push
fcomip
insl
pop
mov
or
rclb
ret
adc
and
dec
aam
jmp
repnz
sub
imul
xlat
enter
sub
loopne
ret
stc
jecxz
adc
mov
pop
push
fbld
and
rcll
and
mov
add
inc
sbbl
mov
adc
push
sbb
cld
das
lock
mov
out
pop
nop
iret
xor
adc
pop
gs
ljmp
test
fmul
dec
xor
push
nop
add
in
pushl
es
add
fdivp
fs
adc
or
int3
xchg
in
xchg
lods
lods
mov
push
or
jmp
outsl
pop
mov
inc
enter
loopne
decl
sarl
cmp
inc
cmpl
scas
sar
call
add
int
shrl
inc
adc
ljmp
sub
cs
sbb
mov
push
add
mov
aam
sti
ret
or
pop
fdivrs
inc
neg
mov
dec
mov
dec
into
pop
aam
and
jl
inc
sbb
cld
mov
push
mov
popa
add
inc
notl
incb
pop
add
pushf
xor
loopne
jl
and
inc
adcl
loopne
fwait
jb
push
sbb
pop
stos
decl
cmp
dec
push
hlt
aaa
in
pop
add
jg
fs
ficoml
xor
and
pop
adcl
cld
mov
std
out
leave
lret
mov
dec
cld
pop
jle
js
xchg
jg
loop
and
push
arpl
mov
outsl
push
pushf
mov
repnz
push
inc
or
xchg
clc
movsl
outsl
int3
mov
nop
adc
xor
pop
xor
mov
es
add
sub
pushl
pop
jno
mov
lahf
jno
push
pop
sbb
std
movsl
and
mov
andb
add
arpl
fisubrs
dec
pop
loopne
sahf
and
test
push
int
cmovg
or
pushl
or
xchg
and
subl
imul
mov
rorl
arpl
cld
in
mov
rcr
imul
dec
adcl
rorb
mov
sahf
scas
or
or
jecxz
cld
mov
loop
aaa
push
addb
ffree
cld
aas
mov
mov
adc
cli
sbb
gs
outsl
mov
dec
aad
mov
or
add
adc
inc
imulb
repnz
cmpsl
fsub
push
aaa
es
ljmp
add
sbb
sbb
fildll
sub
mov
int
loopne
cmpsl
iret
mov
mov
mov
pusha
adc
fstpl
dec
es
aaa
stos
xchg
jo
lret
and
sbb
mov
fistps
and
jne
mov
mov
fcmovbe
push
test
xchg
call
sub
mov
std
jg
rolb
add
xchg
sub
popa
pop
or
loopne
mov
cmp
outsb
movsl
out
loop
inc
sub
mov
cld
in
loope
out
test
add
mov
add
imulb
insb
mov
jge
mov
mov
mov
mov
mov
les
xchg
cld
fcoml
xchg
ret
or
add
scas
decb
loope
jns
dec
fadd
push
lcall
pop
es
cmpsb
movlps
and
fstpl
mov
scas
jae
mov
dec
lcall
sub
or
movlps
push
pop
mov
sbb
or
enter
push
dec
aaa
cli
pusha
sbb
xchg
inc
sbb
xchg
push
aad
incl
das
insl
aam
loop
cmpsl
pop
imul
push
adc
aas
mov
mov
and
mov
lcall
jle
pop
mov
ja
nop
lods
lds
inc
pop
ja
adc
and
insb
std
hlt
into
lcall
bound
push
inc
rorb
mov
sbb
lret
mov
scas
call
adc
ds
cli
outsl
push
xor
pop
imull
out
sbb
sub
mov
push
xchg
jg
xor
cwtl
lahf
add
mov
xchg
push
sub
addb
outsb
decb
add
das
jmp
jl
adc
xchg
rcrl
icebp
int3
jp
xchg
fidivl
shlb
fwait
call
sub
and
xor
jmp
inc
sbb
mov
lcall
pushf
xchg
mov
ret
outsl
roll
int
pop
in
add
daa
jp
xor
call
lcall
mov
jb
inc
dec
test
test
repnz
or
cmp
inc
push
cld
es
aas
in
test
and
add
inc
adc
jp
adc
mov
dec
adc
stos
ss
test
adc
inc
mov
inc
fcompl
mov
xchg
and
loop
inc
fiaddl
orb
inc
and
fistps
jb
or
and
mov
sub
add
sub
fistpl
adc
imul
ds
inc
push
inc
test
sbb
xor
adc
adc
mov
jo
jmp
and
insb
pop
imul
jno
daa
dec
cmp
inc
fisttpl
dec
jp
loope
jo
and
dec
fildl
mov
mov
outsb
dec
and
ljmpw
inc
and
adc
cmp
or
cmpsb
sub
pop
rorb
or
fsubs
cltd
lods
mov
mov
shll
insl
imul
push
clc
add
imul
mov
push
mov
mov
and
mov
mov
and
xchg
cs
inc
adc
xchg
add
mov
mov
pop
insl
push
lods
lock
mov
sbb
mov
and
or
outsl
scas
ficompl
or
xchg
cmp
popf
insl
movsl
push
das
decl
mov
push
jno
rcl
fisubrl
js
and
popf
or
mov
test
pop
and
fcmovnbe
dec
mov
and
sbb
je
rclb
inc
mov
fwait
shrl
mov
mov
insl
fistpl
sbb
imul
add
and
jle
mov
pop
inc
out
or
adc
lods
insl
popf
ja
mov
mov
adc
xchg
stos
andb
dec
mov
jo
jbe
and
movsb
scas
xor
or
mov
xor
inc
imul
push
jne
subl
jbe
adc
xchg
add
or
adc
std
push
push
repnz
les
fst
pop
or
scas
push
inc
lcall
popa
adc
sbb
inc
xor
cwtl
pop
in
add
cmp
pop
or
shl
and
mov
imul
inc
imul
imulb
fwait
lods
sbb
mov
push
dec
adc
and
mov
mov
adc
mov
pop
sub
inc
scas
mov
ficompl
inc
or
push
jne
imul
insl
data16
mov
popf
loope
mov
sahf
jno
adc
jne
inc
cmpsl
pop
cmpsb
adc
jmp
dec
mov
jp
jnp
push
add
leave
or
inc
mov
pop
leave
aam
push
xchg
jb
outsb
xor
aas
inc
jo
adc
mov
out
pop
stos
and
mov
add
mov
xor
adc
stos
push
sub
sbb
pushf
and
js
xor
cmp
dec
sub
xlat
rcll
mov
out
imul
dec
adc
scas
adc
add
xchg
or
mov
pop
dec
fs
int
xchg
adc
inc
add
xlat
inc
lahf
dec
test
mov
push
and
ret
out
lods
mov
mov
rcll
leave
dec
or
roll
lret
lods
cmp
dec
mov
mov
xor
cs
jnp
sub
stos
sbb
dec
sbb
inc
inc
clc
jmp
aad
ds
cmpsb
cmpsb
pop
outsb
xor
outsb
sub
test
or
and
mov
push
aaa
xor
sbb
inc
out
xchg
lods
mov
inc
fisttps
test
pop
push
ret
or
or
mov
ret
mov
test
popf
sub
xchg
or
inc
in
jle
shll
cmp
jmp
scas
lods
mov
inc
test
jae
inc
jae
pop
sub
lods
adc
push
or
mov
push
addr16
adc
mov
frstor
sub
adc
add
or
push
shl
add
js
outsb
imul
and
data16
and
lahf
push
loopne
out
xor
js
or
js
rorb
pop
pop
xor
or
xor
jge
lcall
addb
pop
mov
faddl
dec
cmpsl
lods
push
mov
dec
push
jb
daa
mov
mov
dec
stos
sub
inc
xchg
sbb
and
or
outsl
cmp
fwait
sub
pop
or
inc
rcl
pop
jnp
in
ja
or
ss
ret
xchg
inc
push
mov
mov
push
xchg
pop
jae
pop
in
dec
pop
or
xlat
aad
mov
mov
fs
mov
pop
or
adc
push
repz
imul
dec
adc
mov
sbb
popf
sub
xor
and
inc
add
in
cmp
push
pop
imul
jne
sbb
dec
or
add
popf
add
and
xlat
pop
jae
test
outsl
adc
or
xlat
adc
pop
sbb
lods
cltd
lods
and
inc
jae
pop
cmpsb
fisubrl
xchg
jmp
sahf
mov
mov
test
je
mov
jecxz
cmp
sbb
outsb
inc
adc
jne
lods
lea
inc
inc
ds
xchg
ret
gs
ret
or
int
push
in
movsl
adc
ja
jnp
cmp
mov
imul
inc
push
xchg
out
arpl
mov
mov
mov
or
jnp
ss
adc
faddl
jo
leave
in
das
ret
adc
mov
xchg
xor
cmp
push
push
ja
xor
cmp
lahf
xor
or
sbb
imul
inc
push
mov
inc
loop
add
add
inc
aaa
pop
push
fsubl
pop
jl
inc
ds
or
mov
inc
adc
inc
roll
xchg
cmp
loopne
ret
test
fistpl
ret
cltd
xlat
push
popa
inc
jae
sbb
and
fsubrl
pop
xor
into
loope
clc
xlat
aad
bound
add
mov
adc
test
or
ret
push
fisubrl
roll
inc
sbb
inc
aad
test
cwtl
addl
imul
mov
lahf
addb
rcll
popa
push
or
and
movsl
push
pop
cwtl
cwtl
lcall
dec
pop
cmp
dec
cld
mov
mov
cmp
mov
adc
loope
data16
mov
fsubl
mov
rcrl
xchg
xchg
inc
xchg
cmpsb
jbe
loope
adc
adc
and
pop
xchg
or
push
jo
mov
ds
sub
adc
out
or
fcmovbe
cltd
sub
shlb
insb
in
push
jmp
ficoml
test
stos
add
scas
adc
jae
sbbl
cmp
leave
xor
inc
sbbb
nop
sub
arpl
add
roll
decb
jnp
lret
sbb
xor
scas
movsb
js
pop
loope
mov
out
and
push
cmp
and
jmp
xchg
jmp
jne
push
es
imul
sbb
jo
add
in
and
sbb
xor
mov
loop
jo
cmp
test
push
shll
fcmove
and
mov
scas
leave
cmp
aaa
inc
push
push
sbb
push
add
mov
push
in
imul
mov
ret
cmpl
data16
fbstp
mov
test
dec
inc
mov
mov
cmp
fld
adc
dec
cmp
push
mov
js,pt
jae
sbb
pushf
sbb
push
push
pushf
call
inc
cli
or
xor
fimull
and
xchg
mov
scas
testb
mov
lods
xor
push
mov
push
pop
push
mov
add
mov
mov
mov
xor
pop
mov
adc
push
lea
push
stc
pusha
out
je
scas
pop
insl
orb
mov
xchg
mov
loope
push
ud2
fmull
pop
cli
stc
adc
push
fmull
pop
xor
int3
out
push
adc
push
adc
push
jmp
mov
adc
cwtl
sub
in
nop
xor
xchg
jns
sbb
das
add
mov
leave
xor
dec
jl
jb
rcll
das
adc
and
cltd
push
in
cmpsl
adcb
test
pop
xchg
inc
xor
dec
mov
sbb
jmp
aas
sub
jbe
jo
push
xchg
sbb
xlat
pop
and
push
adc
rcrb
sahf
cmp
push
and
movsl
and
push
adc
adc
xor
gs
push
jne
sbb
mov
sub
jb
mov
popa
cmp
mov
and
push
and
dec
out
cmp
add
xor
shlb
addb
enter
pop
insl
mov
leave
xchg
je
mov
int
loop
mov
push
insb
mov
add
cltd
push
mov
cmp
or
test
add
sbb
out
js
bound
es
aam
ss
sbb
push
xor
test
lds
out
sbb
dec
dec
inc
scas
and
lock
add
or
enter
imul
or
adc
mov
sub
outsb
lret
out
in
int3
leave
push
repz
cmpl
jo
jmp
pop
xor
fmul
xor
pushf
popa
sbb
mov
in
stos
push
loopne
aaa
xchg
sbb
mov
lea
lods
mov
icebp
push
lea
pop
xor
rorb
jne
aas
push
cmp
mul
call
pop
je
mov
les
cwtl
fimull
pcmpeqw
sbb
movsb
dec
loopne
xor
and
add
test
jp
push
adc
mov
push
adc
loope
and
bound
cwtl
ljmp
adc
scas
lcall
cmpsb
adc
jns
inc
test
xor
mov
dec
pop
ret
pop
fcmovbe
or
add
loop
or
jb
dec
aad
pushf
or
cmpsb
push
or
mov
test
adc
adc
enter
cmp
mov
call
dec
adc
roll
outsl
cmp
int
pop
inc
adc
in
loopne
shrl
mov
push
pop
int
sarb
mov
mov
test
lods
sbb
ss
push
sbb
xorb
out
loopne
inc
sbb
loopne
add
sahf
cmc
cmp
xor
or
mov
xor
jae
jb
inc
in
xor
iret
test
sahf
mov
int3
ret
add
pusha
push
leave
mov
cwtl
xor
xlat
mov
mov
or
dec
pop
xchg
mov
add
xor
adc
pusha
call
add
insl
jo
jb
push
je
imul
dec
outsl
fs
gs
mov
fs
jo
inc
outsb
jbe
jb
outsb
insl
outsb
imul
mov
sub
push
jae
jb
gs
xor
decl
sub
popa
sbb
outsl
jb
push
popa
je
dec
popa
sub
imul
gs
push
cmp
sub
inc
dec
arpl
sbb
std
inc
jne
jb
push
arpl
jae
fs
jg
push
push
je
jne
dec
outsb
outsw
pushf
push
std
shlb
and
imul
mov
jne
or
mov
mov
roll
xor
mov
out
notb
popa
fs
inc
out
scas
mov
or
sarb
mov
or
jb
xor
pop
outsb
push
fwait
in
xor
jle
dec
dec
dec
mov
fdivs
jb
push
and
inc
inc
insl
int3
mov
addr16
sbb
insl
out
jmp
dec
dec
jae
push
outsl
push
xchg
shlb
idivl
outsl
leave
push
ja
xchg
mov
xor
add
jne
push
add
adc
test
adc
loopne
paddsb
add
or
add
mov
inc
ja
push
pop
adc
add
aam
push
jne
or
inc
sarl
xchg
dec
mov
push
sub
pop
in
pop
testb
insb
jo
cmp
shlb
sbb
sbb
subl
stc
je,pn
js
out
add
jge
out
and
daa
mov
or
jnp
sub
dec
add
insl
jecxz
inc
shrb
fs
out
popf
mov
dec
push
daa
inc
cs
subb
mov
add
mov
xchg
adc
mov
cmp
add
inc
sbb
add
jae
es
daa
xchg
cld
mov
adc
addr16
loope
add
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sub
add
push
add
add
add
add
add
add
add
add
add
or
add
add
in
adc
adc
add
jge
add
addb
addb
add
or
add
adc
add
add
add
add
add
add
addb
add
or
add
add
add
add
call
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
data16
add
outsl
add
add
add
je
and
pop
add
ja
outsb
add
add
imul
jae
and
push
add
add
jb
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
sbb
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
and
inc
add
jne
add
and
inc
add
jo
add
and
inc
add
add
imul
add
imul
bound
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
and
push
add
add
and
inc
add
add
add
add
add
jb
and
xor
cmp
cmp
aaa
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jb
imul
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
imul
push
add
jb
add
and
inc
add
outsl
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
roll
add
inc
inc
and
add
inc
push
dec
and
push
add
fs
add
and
addb
adc
adc
test
adc
nop
or
nop
adc
inc
adc
addb
orb
inc
and
adc
and
test
mov
inc
add
and
and
andb
or
adc
inc
add
adc
test
andb
and
pusha
dec
add
or
dec
inc
add
add
xor
adc
test
mov
addb
nop
and
adcb
add
addb
or
inc
adc
xor
add
add
add
add
add
addb
add
and
add
sbb
adc
xor
adc
adc
pusha
inc
adc
inc
and
xor
add
adc
or
add
xor
adc
or
and
addb
test
adcb
dec
adc
pusha
inc
adcb
add
test
and
and
or
and
inc
test
or
and
adc
and
addb
pusha
and
xor
adc
pusha
add
nop
add
adc
adc
test
and
adc
inc
pusha
test
inc
add
mov
adc
and
test
add
add
sbb
or
or
or
pusha
or
xor
inc
pusha
and
add
and
inc
adc
andb
and
adc
nop
nop
adc
and
and
and
inc
dec
orb
add
nop
nop
add
dec
inc
addb
or
dec
nop
dec
add
or
nop
inc
dec
pusha
andb
adcb
and
add
or
and
or
adc
mov
add
mov
add
adc
xor
sbb
dec
nop
and
or
add
mov
nop
test
inc
nop
dec
add
adc
nop
inc
sbb
adc
xor
add
inc
and
mov
and
test
test
adc
or
inc
inc
test
mov
and
adc
dec
test
inc
dec
inc
inc
and
and
add
sbb
and
inc
xor
adc
dec
or
add
adc
inc
or
adc
pusha
dec
adcb
nop
adc
test
and
adc
adc
and
adc
inc
or
or
inc
and
and
test
add
add
add
add
add
add
add
add
add
add
add
neg
out
jg
out
add
mov
testl
mov
incl
aaa
pop
out
mov
pop
out
jg
incb
mov
mov
testb
aas
out
ja
out
neg
incl
mov
out
add
pop
out
aas
aas
out
add
pop
out
add
pop
out
add
add
fcomip
add
testb
add
add
pop
testl
aaa
pop
out
add
add
pop
testl
mov
testl
mov
out
jg
out
add
pop
out
add
fucomip
add
lahf
testb
lahf
incb
aas
out
jg
incl
ja
incb
mov
out
ja
out
mov
jg
add
pop
out
mov
out
aas
add
aas
out
aas
push
add
lahf
testl
mov
out
mov
pop
incl
ja
testb
pop
out
ja
out
mov
out
ja
incl
mov
lahf
out
add
lahf
out
lcall
out
mov
aas
incl
idivl
testb
lahf
out
add
testl
aaa
lahf
incl
aas
lahf
out
ja
incb
mov
lahf
out
idiv
out
mov
out
add
incl
idivl
incl
ja
out
aas
aas
incl
ja
incl
lcall
add
jg
add
jg
add
jmp
add
out
mov
testb
jg
add
pop
incl
ja
incl
aaa
jg
add
jg
add
pop
out
add
pop
out
idivl
incl
jg
out
add
pop
incl
ja
out
add
incb
ja
out
aaa
pop
incl
mov
incl
aaa
mov
incb
mov
fucomip
add
out
aas
pop
incl
aaa
pop
out
add
out
add
mov
out
add
incl
jg
testl
aas
incb
fucomip
add
testb
incl
mov
lahf
out
add
pop
out
add
out
idivl
testl
ja
incb
mov
out
aas
jmp
add
fcomip
add
jg
add
mov
testb
pop
out
aaa
jg
add
incl
mov
out
ja
out
lcall
add
incl
aaa
lahf
out
ja
out
aas
aas
incl
jg
testl
ja
testb
mov
incl
mov
pop
out
jg
out
add
fcomip
add
mov
out
mov
out
aas
mov
out
neg
testb
pop
incb
aas
add
testb
jmp
add
pop
out
ja
testl
mov
aas
out
aas
pop
out
add
lahf
incb
aaa
incl
aas
jg
add
incl
idiv
incl
ja
incl
jg
testl
ja
testl
mov
add
incb
jg
incl
aaa
pop
incb
mov
testl
jg
incb
aas
jmp
add
out
add
pop
out
add
aas
out
add
lahf
out
add
lahf
out
aaa
add
lahf
out
add
pop
out
add
out
add
mov
testl
aaa
mov
out
jg
out
add
jg
add
jg
add
jg
add
aas
out
aas
mov
testl
jg
out
add
fcomip
add
out
add
lahf
out
aaa
pop
incl
mov
out
aas
incl
mov
incl
jg
out
add
jg
add
aas
testl
aas
add
aas
out
ja
out
aaa
jg
add
mov
out
aaa
fucomip
add
repnz
lea
subl
sbbl
cltd
jle
xchg
mov
outsl
lret
imul
fnstsw
inc
pop
sti
mov
xchg
mov
jle
inc
std
dec
fnstenv
jne
mov
push
xchg
in
xor
pop
jno
int3
notb
cs
jno
pop
pop
xor
rorb
mov
in
movsb
xchg
add
xor
lds
gs
fdiv
cwtl
nop
lahf
idivb
ret
xchg
mov
scas
add
stc
fistpl
pushf
mov
and
xchg
sub
popa
sbbl
test
lret
cli
sbb
or
push
pop
std
decl
push
jnp
aam
and
mov
pop
sbb
sti
push
jnp
cmp
iret
push
inc
test
leave
and
mov
pop
push
sbb
ret
jnp
inc
and
cs
enter
ret
mov
jb
mov
xchg
xchg
idivl
xor
stos
into
push
mov
push
test
dec
movsl
cmp
sahf
adc
popf
jne
in
subb
sub
insl
repnz
test
mov
add
pop
xchg
add
clc
ds
movsl
jge
sbbb
ret
ret
sti
mov
jmp
rorl
adc
cmp
cmp
pop
cmpsb
xor
push
mov
gs
pop
pop
pop
scas
mov
mov
out
test
add
sbb
inc
iret
outsl
imul
pop
ss
in
jne
xchg
popa
ret
jns
sti
jle
mov
ret
test
sbb
xchg
cmp
in
and
mov
and
xor
push
fdivp
arpl
jge
push
inc
popw
mov
std
mov
jmp
dec
mov
cmpsl
popf
sbb
adc
and
lea
jne
lock
jbe
ja
jg
adc
aas
ret
sub
push
adc
movl
mov
mov
pop
shl
xchg
mov
adc
lock
inc
je
js
imul
pop
mov
xor
shll
enter
sub
nop
ljmp
jno
imul
mov
outsb
jp
inc
aaa
push
jne
mov
aam
xchg
xor
cltd
xchg
sub
mov
dec
imulb
push
into
jmp
aas
rolb
rcll
mov
adc
std
popf
inc
xor
add
jecxz
mov
rorb
loope
or
push
fsubrp
mov
mov
mov
fcmovb
outsl
xor
or
das
cmp
jno
pop
adc
repnz
clc
subl
jb
mov
in
dec
repz
addl
sti
mov
pushf
or
sbb
pop
test
xchg
xchg
sbb
cmp
lods
jns
jg
pop
pop
cmp
test
mov
test
push
sub
push
mov
xor
cmpsb
push
pushf
inc
and
fisttpl
push
cltd
add
dec
jp
pop
call
cli
xchg
sbb
clc
addr16
or
stos
fdiv
pop
loope
lcall
cmp
jae
call
aad
xor
mov
cmc
aaa
mov
mov
mov
test
aas
adc
fisttpl
mov
add
or
pop
mov
pop
out
pop
aad
scas
mov
sub
cmp
lcall
cmp
jmp
mov
cltd
stc
push
adc
ss
add
lods
mov
dec
out
flds
int3
leave
xor
shll
lret
and
xchg
pop
hlt
xchg
out
mov
loop
enter
pop
mov
fadds
ss
fldenv
std
xlat
pop
push
mov
gs
mov
daa
inc
insb
push
in
orb
mov
testb
xchg
pop
les
scas
xor
lcall
lret
test
scas
pop
ljmp
dec
lahf
imul
cmp
lret
aaa
cmp
xchg
pop
mov
xchg
test
out
addr16
mov
add
mov
fiaddl
add
repz
push
add
mov
sub
add
hlt
in
mov
nop
sub
push
stos
add
rclb
nop
sbb
cli
adc
shrl
dec
int3
nop
xchg
aaa
enter
mov
adc
jnp
and
into
fnstcw
cmp
push
mov
jp
loope
xor
orb
and
sub
lea
subb
sbb
pop
pushf
subb
out
iret
out
dec
pop
fldcw
dec
jl
jnp
shl
jo
jno
dec
sbb
scas
push
adcl
jnp
rcrl
loopne
pop
ljmp
popa
mov
sbb
cli
adc
aaa
jp
add
dec
and
xor
push
lea
scas
push
xor
sbb
sub
adc
add
frstor
out
data16
popa
sub
test
xchg
fs
mov
inc
bound
push
fcomi
sbb
test
push
sub
stc
ret
and
cmp
loop
push
xchg
mov
sti
aaa
out
and
fs
inc
cmp
mov
add
scas
mov
iret
ret
sti
movsl
inc
push
dec
mov
pop
push
mov
lret
movsl
and
add
add
add
xor
add
sbb
add
cmp
add
dec
and
pop
and
push
add
js
add
xchg
add
add
add
xchg
and
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
gs
jae
inc
inc
