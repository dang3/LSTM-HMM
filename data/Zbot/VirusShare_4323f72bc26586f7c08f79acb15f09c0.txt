push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
mov
cmp
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
lcall
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
pushl
shlb
pop
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
in
cmp
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
.byte
xor
add
inc
and
add
add
fsubs
add
les
add
mov
and
add
and
add
and
add
add
out
and
add
add
js
add
hlt
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
clc
and
add
add
out
add
inc
and
add
and
add
and
add
add
add
movsb
and
add
add
add
add
add
push
and
add
add
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
add
add
fsubs
add
les
add
mov
and
add
and
add
and
add
add
out
and
add
add
js
add
hlt
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
clc
and
add
add
out
add
inc
and
add
and
add
and
add
add
add
movsb
and
add
add
add
add
add
push
and
add
add
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
add
insb
jae
jb
outsb
inc
add
dec
add
popa
insb
dec
outsl
arpl
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
popa
je
inc
jbe
outsb
je
add
cmp
fs
imul
add
jge
dec
jo
outsb
dec
jne
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
inc
imul
insl
gs
insb
outsl
jae
add
inc
jne
jb
outsb
je
push
add
push
push
je
imul
inc
add
rolb
dec
gs
jo
gs
jb
jns
add
je
jb
jbe
je
push
jb
imul
push
add
add
gs
inc
imul
gs
jne
jb
outsb
je
jb
arpl
jae
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
jb
je
arpl
add
out
inc
gs
imul
bound
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
jb
add
data16
je
je
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
addb
jae
push
arpl
add
add
ja
push
popa
arpl
jb
jne
add
add
ja
push
fs
inc
gs
push
jns
push
imul
gs
push
gs
dec
gs
imul
insb
outsl
jae
push
push
popa
je
add
xor
jae
push
push
popa
je
add
add
je
push
outsl
insb
outsl
jb
xchg
dec
jo
outsb
push
push
popa
je
add
gs
push
outsl
outsl
insb
add
jle
inc
gs
imul
gs
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
push
imul
gs
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
movsb
pop
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jnp
lods
lods
stos
add
cmpsb
push
mov
mov
mov
ret
les
into
int
rcl
in
rcl
shl
ror
iret
hlt
int
int
leave
enter
enter
vpmulhuw
mov
mov
lods
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
lret
leave
not
rcl
cld
fcom
fdivr
xlat
fcomp
fcom
xlat
aad
ror
sar
into
into
int
aad
rcl
sar
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
leave
call
rcl
aam
fcomp
call
xlat
fdivr
aam
dec
into
into
dec
int
call
dec
into
int
mov
mov
mov
std
cmpsb
cmpsb
cmpsl
ljmp
push
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
inc
leave
enter
into
call
rcl
call
xlat
call
call
aam
dec
int
dec
lret
leave
dec
int
inc
inc
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
fs
push
das
femms
sub
ss
aaa
cmp
cmp
and
and
pop
push
pop
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
sarl
leave
enter
ror
call
aad
call
aam
call
ror
inc
enter
vcmpsd
mov
mov
ljmp
movsb
movsl
sahf
popf
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jle
jle
jg
jle
jb
jno
popa
bound
push
dec
dec
xchg
cmp
lea
inc
mov
outsb
outsb
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
lret
inc
enter
ret
ret
mov
mov
scas
scas
lods
jmp
lcall
xchg
xchg
cwtl
cwtl
xchg
cltd
cltd
fwait
in
addl
femms
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
pusha
nop
mov
incb
jnp
jl
jl
outsl
jo
out
push
push
ret
jg
js
js
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
incl
test
xchg
xchg
xchg
mov
mov
xchg
mov
jp
js
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
cltd
sahf
in
mov
mov
addb
decb
xchg
loope
jb
enter
mov
addl
push
cmp
ss
cmp
movsl
movsb
mov
icebp
lods
lods
stos
sti
lods
stos
lods
stos
stos
lods
test
test
std
fwait
fwait
cltd
xchg
xchg
xchg
incl
jg
jp
js
jp
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
push
or
inc
dec
insl
insl
insl
jl
xchg
leave
lcall
out
fwait
lcall
mov
decl
mov
fwait
fwait
fwait
jmp
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
pushf
popf
pushf
std
movsb
mov
mov
in
nop
nop
nop
in
xchg
push
jne
push
or
inc
or
or
daa
daa
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
std
mov
nop
call
lahf
lahf
jmp
cmpsl
lods
pushl
cmpsb
scas
mov
xchg
stos
std
rolb
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
sahf
cltd
pushf
decl
mov
nop
xchg
call
xchg
xchg
sahf
popf
popf
movsl
mov
test
negl
jl
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
je
jp
jge
orl
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
ss
mov
jbe
mov
movsl
mov
mov
stos
stos
mov
movsb
add
mov
add
pop
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
xchg
fwait
lcall
sahf
mov
mov
stc
cwtl
cltd
fwait
out
xchg
xchg
xchg
xchg
les
cltd
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jl
mov
jnp
mov
je
mov
insl
ljmp
adc
lods
or
or
mov
jle
mov
mov
stos
pushf
mov
mov
add
mov
pop
pusha
adc
mov
lcall
nop
xchg
call
fwait
cltd
lcall
lahf
mov
lcall
xchg
xchg
decl
xchg
xchg
call
cwtl
lcall
cltd
sahf
stc
lahf
xchg
pushf
cld
pushf
mov
xchg
imul
xchg
dec
js
fwait
cmp
push
sahf
and
lahf
push
jmp
adc
test
ljmp
adc
lods
adc
mov
imul
mov
insl
mov
fwait
lods
mov
lods
lods
scas
mov
mov
mov
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
pushf
lcall
mov
mov
call
xchg
decl
addb
xchg
js
cltd
jb
cltd
arpl
call
sub
decl
adc
xchg
or
pop
call
add
lahf
pop
pop
jmp
sbb
pushl
push
jno
mov
outsl
mov
and
and
shll
inc
aas
cmp
xchg
lods
mov
scas
lods
mov
lahf
mov
movsb
add
pop
pop
adc
lods
mov
shll
lcall
mov
cmpsl
ljmp
test
cmpsl
lcall
jg
decl
jno
mov
push
mov
decl
push
pop
incl
push
push
incl
add
mov
push
call
add
cltd
add
sahf
add
or
pushl
es
mov
sub
inc
sub
ret
inc
sub
cmp
cs
inc
mov
enter
mov
mov
lret
movsb
dec
mov
movsb
mov
add
add
add
push
adc
test
mov
mov
mov
stos
ljmp
lods
pushl
scas
scas
jmp
jo
incl
or
push
incl
add
incl
add
add
mov
push
decl
add
xchg
add
cltd
add
mov
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
dec
cmp
call
cmp
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsb
ljmp
lahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
orps
mov
push
incl
add
xchg
push
decl
push
call
pop
jmp
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
roll
call
dec
xchg
fmuls
fimull
fisttpll
fsts
call
test
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
jnp
movsb
popf
mov
jmp
test
pushl
mov
pushl
mov
mov
mov
jmp
insl
decl
pusha
call
adc
pop
decl
push
call
add
sahf
add
mov
add
test
push
gs
es
into
inc
call
push
cwtl
fcoms
fsts
fistl
jmp
pop
sahf
ficomps
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
cmpsl
test
sahf
mov
mov
add
add
add
inc
inc
adc
ja
lahf
cltd
sahf
jmp
lahf
cltd
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
nop
pop
arpl
xchg
and
xchg
and
call
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
fs
mov
xor
ficompl
fbld
jmp
arpl
jmp
cmpsw
jmp
cmpsw
jmp
cmpsw
call
xchg
mov
cmpsb
test
sahf
sahf
sahf
adc
xchg
xchg
xchg
add
inc
adc
jae
lcall
lcall
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
lcall
lcall
sbb
pop
call
pop
jmp
add
stos
add
mov
pushw
movq
roll
fsubrl
jmp
outsb
lods
jmp
jo
jmp
jno
call
jne
in
jne
out
jne
out
je
out
je
jmp
mov
mov
cmpsb
test
lahf
lahf
sahf
pop
sahf
lahf
lahf
add
jle
cmp
insl
outsb
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsb
scas
lcall
outsb
jmp
cmp
xor
lcall
call
add
add
test
add
mov
gs
mov
sbb
fistl
jmp
jbe
jmp
jge
jmp
mov
out
cmpl
push
xchg
push
cmpl
ljmp
inc
mov
test
popf
popf
pushf
daa
mov
mov
add
bound
add
ss
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
sar
mov
jmp
cmp
inc
jl
movsb
inc
jge
movsl
ss
lcall
lcall
add
add
lods
add
mov
fs
mov
add
dec
es
mov
in
mov
push
pop
push
nop
sar
nop
sar
xchg
xchg
clc
xchg
push
pop
out
nop
sar
mov
inc
ret
stos
stos
stos
mov
sahf
popf
xor
popf
pushf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
sar
mov
jl
lcall
dec
cmp
dec
test
movsb
xor
pop
lcall
add
cmpsb
add
lods
add
mov
mov
add
movl
mov
out
mov
out
xchg
ret
push
lcall
repz
cmc
fwait
leave
clc
pushf
lret
lahf
into
cld
popf
int3
cld
cltd
leave
push
xchg
ret
jmp
mov
dec
enter
mov
mov
nop
nop
add
add
add
aaa
add
das
or
cmp
dec
jecxz
pusha
call
mov
mov
mov
sar
inc
mov
mov
ljmp
dec
xchg
movsl
sub
fwait
pop
pop
lcall
pop
ljmp
add
mov
add
enter
rorl
jne
fiadds
out
lea
push
cmpsb
into
push
movsb
int3
stc
cmpsb
int
cli
test
into
sti
cmpsl
into
stos
iret
cld
stos
sar
cld
test
jmp
mov
dec
enter
mov
into
mov
xchg
xchg
add
fwait
fwait
add
add
add
xor
sub
sub
inc
inc
inc
bound
pop
xlat
jne
jb
mov
mov
ret
mov
inc
inc
leave
leave
inc
ret
mov
cmpsb
jmp
push
mov
scas
dec
test
sahf
sbb
pop
jmp
popa
pushl
add
ret
add
into
add
xlat
add
adc
out
pop
cmpsb
push
sahf
lret
cli
lods
sar
cli
mov
cli
mov
cld
mov
cld
mov
cld
mov
std
mov
cld
mov
pushl
sar
cmc
movsb
mov
call
leave
int3
mov
mov
sahf
mov
xchg
or
add
add
xor
add
push
push
add
dec
dec
outsl
jo
mov
fcomp
jmp
xlat
xlat
test
int3
into
dec
lret
lret
lret
leave
dec
lret
leave
leave
mov
scas
jmp
push
mov
stos
cmp
jmp
add
mov
arpl
mov
add
roll
outsb
call
add
loopne
jne
ljmp
cli
lods
aad
std
mov
fcos
mov
fdivr
cld
mov
fdivr
mov
fcos
inc
std
mov
lret
jmp
mov
call
leave
int3
mov
mov
xchg
or
add
add
xor
add
pop
or
enter
in
pop
call
call
loope
fstp
fucom
fcmovu
xlat
fcmovu
cli
aad
fdivr
int3
ror
mov
imul
jmp
add
mov
popa
mov
add
lret
add
add
fildl
jne
in
ja
out
das
xchg
clc
mov
cli
mov
loope
std
ret
std
loopne
inc
fdivrp
inc
loopne
dec
inc
fdivrp
dec
fdivrp
inc
fdivrp
dec
cld
mov
enter
into
mov
mov
xchg
adc
add
add
std
incb
std
std
incl
incb
hlt
div
or
out
jmp
in
out
in
sub
out
in
dec
jmp
ljmp
jecxz
out
fucomp
ret
stc
lods
jo
cmpsb
cmp
movsb
adc
pop
ljmp
add
mov
add
int3
add
add
add
call
inc
popf
cli
mov
in
std
int3
in
std
int3
out
dec
in
dec
jecxz
dec
loop
std
into
loopne
std
shl
std
iret
in
shl
std
shl
cld
out
mov
fdivr
ret
out
test
cmpsl
mov
xchg
xchg
add
add
add
std
incl
incl
div
testl
icebp
hlt
repnz
out
lock
out
icebp
lock
in
out
pop
loop
lds
sti
mov
push
pop
jmp
add
mov
fs
mov
add
roll
jo
fiaddl
jne
in
jnp
in
adc
pop
test
sti
mov
cld
shl
std
shl
call
call
call
in
call
std
fsub
std
fucomi
std
fucomi
std
fldl2t
std
shl
push
ret
jmp
aad
dec
lret
lret
repz
xchg
xchg
and
cwtl
xchg
add
sti
add
std
stc
add
cli
clc
add
div
or
aam
mov
jb
negb
add
cmpsl
add
scas
add
mov
add
lret
add
roll
jo
fldl
jbe
out
jns
out
sbb
cld
fdivrp
cld
fsubr
std
fldl2t
fucomi
std
fucomp
std
fsubr
fsubr
std
fsubrp
std
fsubrp
loopne
cld
aam
push
aad
out
fdivr
iret
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loopne
add
enter
mov
cltd
repnz
jmp
add
mov
add
int
outsl
call
add
loopne
jae
call
sub
shl
fcomip
std
fucomi
fucomi
fldl2e
jmp
aam
cli
iret
loope
cld
shl
push
int
stc
int3
fdivrp
test
lret
jmp
rcr
call
fdivr
mov
mov
lcall
add
add
add
add
mov
sahf
jmp
sub
lahf
add
stos
add
mov
arpl
mov
add
iret
add
xlat
add
loope
jns
call
xor
cld
leave
loopne
sti
lret
cli
idivl
aad
hlt
mov
sar
icebp
mov
int
call
mov
iret
std
call
shl
ljmp
in
mov
mov
xchg
add
add
add
int
add
shrb
loopne
xor
pop
ljmp
add
mov
add
dec
push
jb
rorl
fistl
jns
loope
cmp
inc
xchg
jmp
scas
lret
call
scas
leave
std
loopne
cld
loopne
cli
fnsave
lock
into
in
leave
rcr
loopne
xlat
shl
aad
out
loop
jmp
call
popf
call
lret
leave
push
lods
lods
lods
adc
cmpsl
test
add
ret
mov
popf
lods
aam
dec
jg
pushf
sbb
cmpsl
sbb
jo
mov
js
mov
inc
xchg
ret
stc
lret
fs
mov
sarl
rcl
mov
lret
rcl
lret
mov
int
mov
aam
jg
fcmovu
jb
gs
jecxz
out
jmp
xor
cmc
div
and
repnz
or
mov
int
xchg
add
mov
sarb
mov
xchg
lock
je
ljmp
mov
sarb
test
mov
pushf
leave
rol
into
enter
into
iret
addr16
rclb
rcl
dec
aam
inc
rcr
aam
fcmovu
daa
xlat
fstp
sbb
adc
in
push
in
out
jmp
in
lock
add
cld
testl
std
add
std
incb
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
ret
inc
ror
xor
int3
lret
daa
int
iret
and
rcrb
iret
aam
iret
aad
or
push
rcr
xlat
add
add
loopne
add
in
add
in
jmp
add
incl
mov
mov
add
ret
les
rol
sub
mov
mov
push
rol
or
leave
movl
into
leave
add
rolb
rcr
aad
rcl
aam
aam
aam
xlat
aam
add
fsub
add
aam
add
loope
add
fsubp
add
in
add
repnz
std
add
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
mov
ja
test
dec
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
iret
jmp
aam
cmc
rcl
aam
iret
rcl
cli
int
int3
stc
lret
lret
lret
mov
mov
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
iret
into
xlat
call
xlat
aad
iret
ror
dec
iret
into
dec
lret
mov
mov
lods
icebp
xchg
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jne
jne
data16
dec
inc
inc
cmp
sub
sub
ss
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
rcl
aam
lret
int3
lret
inc
mov
pushl
test
lahf
xchg
cwtl
xchg
jmp
jo
xchg
pop
adc
add
add
add
add
add
cmpl
addl
aam
imul
push
push
push
stos
push
imul
aaa
aaa
aaa
pop
jo
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
cltd
fwait
out
addl
wrmsr
add
add
add
add
add
pop
fwait
cltd
fwait
add
fwait
cwtl
cwtl
fcoml
addb
jnp
jnp
jp
js
jnp
jnp
jp
jnp
jae
jae
push
push
push
cmp
jae
pushf
pushf
popf
mov
scas
scas
repz
lods
scas
sti
scas
scas
scas
std
cmpsl
test
pushf
call
xchg
call
mov
scas
jmp
scas
scas
leave
cmpsb
movsb
movsl
cltd
jb
jb
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
nop
mov
mov
xchg
std
nop
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsl
orl
cwtl
lcall
mov
call
sahf
lahf
ljmp
scas
std
mov
scas
mov
mov
mov
cmpsb
movsb
movsl
pop
cmpl
add
add
add
pusha
or
scas
mov
cmpsb
lahf
movsl
decl
lea
call
popf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
insb
outsb
outsl
xchg
subl
xchg
lock
lcall
pushf
pushl
jo
mov
push
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
nop
call
cwtl
xchg
call
cwtl
fwait
fwait
pushf
lcall
xchg
cwtl
jmp
xchg
lea
xchg
orb
xchg
imul
popf
dec
jp
movsl
inc
jns
lods
aaa
js
mov
je
mov
insl
ljmp
sbb
mov
lods
mov
scas
scas
mov
movsb
movsl
movsl
push
popa
pop
pusha
or
mov
lcall
lahf
popf
jmp
mov
xchg
decl
addl
xchg
jae
cld
cwtl
pop
cmp
dec
js
cmp
xchg
sub
xchg
sbb
xchg
adc
mov
push
ljmp
pushl
sbb
mov
and
pop
xchg
mov
lods
lods
xchg
popf
lahf
lahf
adc
add
add
popa
pusha
pop
or
lods
mov
test
mov
cmpsb
ljmp
test
cltd
decl
imul
sub
decl
adc
xchg
push
decl
add
xchg
add
pushf
add
test
pushl
jp
mov
xor
leave
xor
dec
pop
xchg
inc
test
mov
test
add
add
add
add
popa
or
cmpsb
test
test
cmpsb
jmp
scas
mov
mov
mov
mov
mov
movsl
cwtl
lahf
decl
adc
mov
push
incl
add
push
decl
add
mov
add
mov
insl
inc
ss
inc
mov
rolb
call
inc
call
inc
xchg
fimull
call
bound
stc
mov
mov
movsb
movsb
movsl
daa
std
std
incb
add
add
pop
pop
popa
or
mov
ljmp
mov
mov
mov
mov
mov
jl
mov
arpl
xchg
sbb
mov
pop
decl
add
xchg
add
lahf
add
test
pusha
ljmp
and
rorl
fcomps
ficompl
ficomps
jmp
pop
mov
jmp
insl
test
int
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jl
popf
cwtl
lcall
scas
scas
pushl
mov
mov
lcall
sub
imul
and
xchg
adc
xchg
add
popf
add
cmpsl
add
mov
pushl
xor
jmp
insl
test
call
jo
in
jb
call
cmpsl
mov
shrl
addb
dec
dec
dec
pop
outsb
insl
imul
test
fwait
cltd
xchg
ljmp
mov
mov
mov
jne
lcall
cmp
pushf
sub
call
add
movsl
add
lods
add
mov
fs
or
xchg
jmp
js
jmp
mov
in
test
push
xchg
out
mov
mov
test
push
lcall
add
sub
push
push
push
dec
pop
gs
xchg
mov
mov
mov
rol
mov
pushf
jmp
inc
cmp
sub
fwait
pop
pop
jmp
add
mov
fs
mov
push
jne
fbld
in
mov
push
xchg
push
cltd
push
cltd
lret
pushf
leave
clc
xchg
stos
inc
mov
stos
popa
mov
add
add
xor
pop
pop
pop
fisttpl
mov
mov
rol
ret
pushl
push
xchg
stos
dec
cmp
and
lahf
add
test
add
mov
add
and
push
mov
sar
cli
test
cld
test
iret
cld
stos
sar
sti
test
jmp
mov
inc
rol
stos
stos
stos
jne
pushf
popf
or
add
add
dec
push
push
aaa
jae
jae
stos
stos
test
out
iret
int3
cmc
lret
lret
lret
leave
leave
std
enter
mov
ljmp
jmp
add
add
into
add
flds
xchg
clc
xchg
mov
std
mov
cld
mov
fdivr
cld
mov
fdivr
sti
mov
ljmp
repz
lods
mov
add
add
add
add
pop
or
aad
dec
loope
fsubp
fistps
fcmovu
fcom
out
mov
gs
cmpsl
sub
popa
ljmp
add
enter
aad
je
in
jl
lock
mov
sti
inc
loope
std
enter
std
leave
fdivrp
std
lret
cld
fdivr
out
mov
leave
divb
popf
sbb
add
add
incl
std
add
jmp
out
sbb
in
in
xor
loopne
loop
les
mov
mov
add
mov
inc
add
iret
add
fildl
jbe
call
outsb
mov
std
std
shl
call
out
shl
aam
call
out
jmp
push
fcos
fcmovne
sar
mov
mov
mov
add
add
std
add
std
add
cld
cld
pop
aam
aad
mov
pop
xchg
lahf
or
pop
pushl
add
rolb
jno
loopne
jne
out
and
std
shl
fldpi
std
fsubr
cld
fsubr
std
xlat
call
std
fld1
std
shl
push
fdivr
sti
mov
lahf
sahf
das
add
add
int
int
mov
bound
ljmp
addr16
add
add
loopne
jns
out
das
xchg
push
pushf
enter
loope
clc
leave
loopne
cmc
fsin
hlt
ret
repz
aad
lock
in
sar
in
jmp
shl
in
fsubr
mov
stos
das
std
add
add
add
aad
push
mov
jae
push
data16
mov
insl
inc
sbb
lret
and
sub
pushf
clc
loop
mov
out
in
leave
jmp
fdivrl
int3
leave
ffreep
iret
mov
jecxz
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsl
les
pop
mov
mov
nop
fidivrl
andb
int3
mov
les
rol
int3
insl
aam
int
aam
iret
dec
fdivrs
fsubp
loopne
in
fisubs
jecxz
repnz
in
in
or
std
std
add
add
add
std
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
rcll
mov
rcl
or
loope
or
into
int3
add
std
incl
std
incl
lcall
pinsrw
or
int3
int
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
leave
leave
mov
ret
rol
mov
mov
insb
stos
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
aad
rcl
sar
iret
iret
int
vshufps
mov
in
test
cmpsl
roll
sbb
add
add
add
add
add
add
add
add
jb
jno
push
inc
inc
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
rcl
dec
iret
iret
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jne
jne
xchg
adc
outsb
outsb
ret
bound
outsl
insl
outsl
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jb
daa
es
das
add
add
add
add
jae
jb
fwait
xchg
fwait
mov
xchg
xchg
xchg
test
test
push
push
dec
inc
mov
popf
into
mov
lahf
mov
decb
lcall
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsl
cld
mov
xchg
xchg
xchg
cld
pushf
sahf
pushf
cmc
cltd
cwtl
cltd
in
addb
imul
jg
mov
notl
mov
pushl
push
mov
stos
mov
stos
scas
scas
push
stos
stos
stos
add
add
add
mov
mov
scas
cld
xchg
xchg
xchg
call
fwait
fwait
lcall
lcall
xchg
mov
loope
jne
out
nop
bound
std
lcall
ljmp
and
mov
outsb
pushl
popf
lods
lock
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
lahf
sahf
lahf
jmp
movsl
call
push
ja
popl
decb
sbb
pop
call
or
mov
outsb
pushl
and
inc
daa
jnp
les
test
mov
scas
mov
test
add
add
fwait
mov
cld
cmpsl
cmpsl
cmpsl
ljmp
scas
mov
lahf
xchg
decl
or
xchg
push
decl
pop
jmp
adc
shll
dec
inc
mov
roll
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
movsl
movsl
movsl
push
add
add
push
imul
movsl
mov
lods
pushl
mov
movsb
call
sbb
pusha
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsw
call
pushf
mov
mov
mov
cmpsb
test
pop
add
add
popa
bound
mov
lcall
mov
mov
lcall
xor
lcall
jmp
add
mov
xor
jmp
jo
call
jp
push
jge
push
jge
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
bound
lcall
add
ljmp
add
pop
outsb
fimull
in
mov
cmc
xchg
push
cwtl
enter
jmp
movsl
inc
mov
movsl
sub
aas
aas
inc
adc
push
xchg
xchg
mov
inc
ret
ljmp
cmp
pop
jmp
pushl
add
aam
jns
jmp
lods
push
test
stc
lods
sar
sti
lods
sar
cld
scas
sar
std
scas
iret
jmp
enter
rcr
cmpsb
cmpsb
ds
std
incl
xor
jno
inc
scas
mov
mov
aam
aam
aam
rcl
shr
lret
leave
leave
cli
mov
mov
jmp
add
add
aad
jae
call
pop
mov
inc
fdivr
inc
std
rcr
icebp
mov
ret
cmpsl
test
add
add
add
in
in
or
jmp
out
outsb
fisubl
movsl
and
popa
mov
add
add
out
cmp
std
iret
out
shl
std
shl
std
aad
aam
push
enter
int
lods
lods
scas
popa
addl
add
incl
std
push
lret
lret
shrl
lahf
sbb
lods
add
mov
add
loop
jns
repz
cmpsb
std
loopne
std
call
cld
aad
sti
shl
stc
aam
push
leave
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
fstpl
cmp
out
mov
aam
jmp
mov
shl
out
aad
jmp
fcmovnu
scas
ret
ret
ret
push
fwait
fwait
lcall
add
add
sarl
movsb
pop
mov
lods
inc
and
push
mov
shll
lret
js
mov
xlat
mov
int3
adc
into
outsl
fmul
iret
pop
aad
jecxz
loopne
out
out
out
in
out
sbb
rol
add
mov
scas
arpl
lods
mov
ret
mov
les
ret
sbb
fstp
bswap
int
or
aam
push
std
incb
jg
addb
incl
stos
std
std
add
std
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
mov
aaa
lahf
jmp
idivl
popf
jg
in
aas
inc
popa
nop
pop
inc
inc
mov
jns
add
mov
addr16
cltd
daa
sbb
xor
jb
outsl
xchg
std
fistps
ret
adc
xchg
ror
xchg
inc
pop
mov
cmp
aas
dec
push
pop
sub
adc
push
mov
shrl
outsb
xchg
iret
or
mov
popf
mov
pop
and
enter
mov
test
cmp
sub
cltd
mov
jg
test
add
leave
adc
or
push
or
loopne
sbb
dec
lretw
add
test
lock
hlt
push
ficompl
push
inc
and
xchg
lods
andb
pop
hlt
and
in
and
int3
sahf
movsl
inc
jne
imul
clc
mov
mov
push
loope
dec
pop
data16
inc
pop
in
popf
sbb
adc
push
mov
xchg
push
pop
dec
mov
mov
ds
jmp
lcall
jmp
dec
xor
cwtl
jecxz
push
dec
arpl
cmp
add
xor
inc
insl
lods
sub
push
movsl
shrl
je
sub
pop
jecxz
sar
adcl
cwtl
mov
pop
push
daa
mov
sbb
add
scas
mov
lods
mov
or
cli
negl
pop
mov
and
jecxz
in
mov
imul
inc
loop
mov
pop
clc
cmpsb
popf
and
pop
gs
int
jge
std
sub
jno
dec
adc
push
or
movsl
xor
add
aam
push
xor
test
outsl
or
and
lret
cmovle
test
mov
mov
cmpsb
clc
or
in
mov
push
mov
inc
and
mov
mov
jp
daa
pop
dec
mov
or
cwtl
test
cmc
jmp
sbb
xor
push
jo
add
in
mov
filds
jg
xor
fxch
aas
int3
test
jp
clc
pop
scas
and
jl
mov
addr16
jbe
fdivrl
shlb
fwait
cltd
aaa
mov
test
mov
or
xlat
stos
sub
stc
lret
mov
push
fwait
cmp
testb
sub
push
mov
fwait
and
xchg
pop
inc
inc
or
mov
or
rorb
ficoml
mov
jl
call
out
cwtl
out
inc
or
cli
mov
inc
enter
or
mov
cmp
sub
ja
xor
lock
ret
shlb
sub
popa
adc
mov
push
jae
sbb
cld
ds
leave
mov
jge
ret
in
jno
and
jbe
jle
cmp
xchg
jp
lret
aas
add
adcl
into
or
adcl
adc
in
jae
sar
in
sbb
xor
jns
cmp
jge
into
add
imul
sbb
int
rolb
mov
mov
fsubr
cmpsl
or
lahf
dec
or
fs
sarb
jge
repz
pop
mov
test
sub
test
jno
lcall
insb
jne
xor
movhps
shll
mov
ja
or
insb
test
push
ja
outsl
push
dec
or
out
ds
dec
mov
xor
pop
stos
lahf
sbb
out
psrlw
push
inc
adc
jns
ljmp
jno
pop
pop
es
out
and
int
ljmp
into
into
sbb
jbe
mov
pop
clc
pop
lods
insb
out
xchg
ficoms
fwait
pop
mov
sbb
mov
mov
mov
xchg
loope
fimuls
push
rolb
push
lock
out
nop
xor
gs
sar
pop
push
lahf
rolb
push
push
push
add
sub
xor
outsl
shlb
jno
push
jnp
jmp
roll
push
push
rolb
test
mov
lods
or
xorb
sub
xor
es
fwait
jp
aad
int3
aaa
sahf
rorl
jb
shlb
sub
adc
jl
or
push
idiv
repz
out
stos
xor
or
mov
scas
pop
add
mov
xor
or
jbe
negl
push
rorb
cmpsl
xchg
cmp
mov
lods
repnz
xchg
in
scas
push
fcmovnu
ficoms
dec
repnz
inc
movsb
pop
inc
imul
cwtl
shrb
stos
out
sbb
sub
mov
jg
movsl
out
cmpsl
ss
mov
sub
jns
cmpsl
sub
xchg
popf
pop
movsl
xchg
fisubrs
sbb
sub
fstpl
inc
jg
pop
push
push
movups
stos
pusha
cltd
inc
or
ja
and
adc
sub
add
add
push
fbld
enter
jl
dec
xchg
jecxz
aaa
mov
mov
push
xor
inc
cmpsl
lods
mov
cld
cmpsb
mul
and
jge
stos
scas
push
cmp
xchg
test
aaa
jns
mov
push
in
add
jbe
pushf
fiaddl
and
fwait
push
mov
outsb
mov
and
loope
or
into
sbb
loop
das
les
mov
lahf
int3
sbb
sbb
lock
fdivl
adc
cwtl
sbb
pop
mov
pop
scas
sub
jae
mov
xor
rcll
das
loope
add
fs
test
mov
ss
push
ret
scas
xor
xchg
sub
lods
push
and
mov
cltd
mov
inc
call
mov
rcl
mov
aad
repz
push
xchg
dec
xchg
sub
cmp
pop
dec
and
scas
jno
mov
and
sub
inc
pop
push
stos
inc
aaa
jg
jae
pop
fidivs
sar
xchg
add
cld
xchg
fisubs
sbb
test
lret
sti
mov
jb
push
adc
or
push
rorl
mov
mov
aam
add
inc
ret
std
in
imul
out
xchg
and
cli
packssdw
or
cmpl
jecxz
sbb
lcall
aad
adc
jbe
pop
cmp
testb
push
adc
xchg
xor
fadds
push
mov
stc
push
out
push
cmp
test
add
xlat
sahf
mov
sar
js
sub
stos
inc
and
xchg
sub
ja
mov
rcrl
shrb
in
add
sbb
and
lret
xlat
shr
ret
sbb
pop
cmc
adc
dec
loope
xor
push
xor
fdivrl
cmp
rolb
dec
dec
js
iret
adc
mov
imul
sbb
out
cwtl
incb
or
push
data16
fwait
lret
adc
in
and
xor
pop
std
or
sub
dec
push
sahf
clc
sbb
pop
inc
mov
ljmp
sbb
mov
lcall
in
stos
into
jb
sbb
popa
imul
inc
int3
lret
pop
cmp
xor
jo
stc
push
xchg
imul
mov
lds
cmp
sbb
pop
mov
fucom
js
mov
call
inc
sbbl
xchg
aad
rolb
mov
jmp
daa
pop
lock
or
cmp
push
stos
pop
xchg
sub
scas
scas
inc
loope
mov
push
add
gs
shrb
push
in
addl
or
dec
cli
sub
pushf
dec
inc
shl
test
pusha
cmc
je
inc
cmpsb
push
call
pop
stc
imul
jge
mov
les
dec
stos
inc
inc
rcrb
outsb
push
movsb
fdivl
jbe
mov
lods
mov
imul
sahf
xor
pop
rcrb
and
sub
dec
inc
into
sub
ljmp
xor
imul
hlt
sti
xor
adc
scas
mov
or
test
xor
inc
nop
cld
xchg
leave
push
xor
mov
inc
adc
add
imul
and
insb
add
out
xchg
mov
lahf
cmp
imul
mov
dec
and
inc
repz
xchg
pop
test
add
mov
xchg
in
fbstp
and
mov
pop
xor
mov
cmp
shrl
cmp
aam
in
gs
ss
xchg
or
popf
xor
sub
dec
sahf
jae
dec
xchg
mov
jmp
cmp
dec
fistpll
dec
in
fistpl
mov
ja
imul
sub
cmpsb
sbb
mov
ret
subb
rcrl
stc
xor
fdivl
push
dec
loope
lret
jmp
dec
pop
lcall
imul
movsl
mov
std
inc
and
nop
daa
cli
xchg
pop
mov
addr16
enter
cmp
mov
dec
test
outsl
mov
pop
sbb
outsb
daa
inc
fistpl
rcrl
dec
in
and
jmp
mov
scas
daa
xchg
data16
or
xchg
cmp
jl
dec
mov
jge
outsl
mov
popa
push
jo
xchg
sub
hlt
aaa
lds
xchg
sub
test
into
gs
cmp
jl
jb
iret
xchg
into
cmp
inc
push
loopne
int
icebp
inc
xlat
adc
push
movsl
in
dec
in
add
dec
fistps
xor
push
sub
xchg
pushf
cld
shlb
mov
mov
inc
xchg
ja
bound
sahf
push
push
sbbb
je
movsb
sbb
xor
sub
imul
and
push
ret
push
mov
push
lea
imul
cwtl
push
jp
loopne
sti
dec
loop
lea
dec
or
pop
xchg
pushf
pop
repnz
adc
mov
jge
in
test
or
pop
loop
xchg
jge
or
shrb
nop
sbb
scas
and
lea
fs
sub
iret
push
inc
lcall
pop
push
in
dec
mov
sbb
insl
pop
scas
pop
pushf
mov
inc
jno
lock
inc
dec
in
and
or
mov
outsl
sub
and
cmp
imul
dec
jmp
mov
push
jns
xchg
out
xchg
sahf
xor
and
daa
mov
scas
mov
fidivs
mov
aam
sub
fsubp
xor
jo,pn
jae
jns
jp
pop
lcall
and
inc
ficompl
shrl
hlt
mov
aam
sahf
lds
inc
fcmovbe
push
call
jno
and
inc
jge
xor
and
into
add
loopne
movsb
lods
js
loope
mov
mov
fdivs
das
nop
jmp
push
fnstsw
mov
lock
popf
xor
shl
mov
movsl
pushf
xor
lods
or
stos
jnp
into
mov
push
in
mov
fnstsw
sub
scas
lock
daa
loop
dec
loopne
add
je
lock
dec
loop
pop
lahf
ss
daa
mov
cltd
aam
test
mov
out
jecxz
testl
push
push
push
jmp
sbb
inc
xchg
imul
cmp
fstps
xor
mov
mov
sbb
inc
xchg
shrl
adc
sub
xor
ror
cli
xchg
and
cmp
in
mov
cli
push
dec
out
cwtl
ss
cwtl
fnstenv
jg
aas
scas
sub
mov
inc
push
jmp
sub
mov
bound
xchg
push
roll
jne
hlt
test
call
xchg
scas
mov
iret
data16
in
mov
push
or
mov
sub
mov
data16
push
rcrl
xchg
add
rclb
cmpsb
cmp
jmp
or
xchg
sahf
popf
inc
fmull
xor
push
das
and
pop
ret
mov
sbb
bound
mov
fnstenv
insb
add
loopne
in
or
mov
fnstenv
out
sbbl
adc
je
jno
adc
xchg
sub
test
mov
sub
enter
sbb
outsl
add
andb
testl
stc
nop
xchg
leave
cmp
idivb
push
mov
adc
jb
sbb
dec
add
jle
cli
std
xchg
xor
imul
adc
add
sbb
ss
rclb
inc
fnsave
into
jg
rol
imul
mov
roll
stos
inc
out
enter
xchg
sub
push
ja
inc
lcall
adc
xlat
outsb
mov
rcr
mov
gs
out
aam
push
mov
jb
flds
pop
mov
pop
in
inc
xchg
sub
xor
gs
clc
adc
push
movsb
adc
lds
push
push
xlat
adc
enter
sub
ljmp
xchg
cs
mov
adc
subb
mov
push
cmp
out
push
jecxz
enter
adc
inc
fstpt
int
js
das
out
popa
clc
loopne
mov
push
add
je
call
mov
mov
push
int3
arpl
and
add
xchg
sub
pop
shrl
cli
mov
or
adc
xchg
idivl
jno
mov
sbbl
dec
ja
jae
mov
mov
outsb
add
ret
sbb
in
repnz
sahf
xor
call
or
cmpsb
jnp
cli
xchg
xlat
pushf
adc
pushf
outsb
add
insb
rcrl
inc
aam
icebp
fisubrl
or
add
call
or
or
xor
sub
lcall
dec
xor
ret
and
loopne
lret
aad
jo
in
xchg
pop
sub
mov
pop
stc
dec
xchg
les
outsl
adcb
jmp
xlat
sub
in
shlb
mov
mov
xor
mov
mov
add
scas
adc
mov
iret
fdivl
scas
js
and
stos
inc
faddl
jnp
std
movsl
cmp
bound
insb
shlb
popa
inc
icebp
xchg
sub
les
stc
enter
pop
popa
jmp
add
psubq
divb
leave
pusha
rcll
ret
repz
jecxz
pop
mov
loopne
and
icebp
dec
out
loop
gs
fidivl
stc
and
mov
test
push
icebp
mov
dec
in
xchg
incl
sahf
push
and
mov
jae
pop
inc
xchg
push
sbbl
push
mov
fidivl
repz
sti
xor
fs
aaa
dec
test
outsl
stos
inc
mov
ret
fidivs
sub
nop
dec
jle
jb
imul
rcr
into
inc
fnstcw
dec
mov
jl
add
lods
popf
scas
inc
jl
gs
ficompl
jecxz
outsb
xor
pop
std
mov
out
jmp
inc
fidivs
xor
sbb
cld
dec
mov
clc
mov
iret
adc
mov
mov
stos
inc
pop
icebp
cmpsb
int3
in
fcmovb
data16
fdivr
xchg
cs
dec
add
pop
out
insl
lock
pop
dec
adc
jg
lret
fnstenv
pop
lahf
ss
add
xchg
mov
or
mov
pop
cmp
pop
in
or
sub
xchg
xchg
mov
in
add
aas
iret
data16
mov
mov
lret
bound
in
subl
ret
mov
add
popf
cld
mov
dec
push
addr16
cmp
and
int
inc
sbb
xchg
jb
inc
pop
xor
xlat
outsb
test
popf
xor
jb
aaa
data16
cmp
movsl
xchg
cmp
sbb
movsl
mov
and
adc
enter
in
mov
mov
jmp
repz
lds
into
adc
sub
pop
xor
negb
push
mov
push
mov
lds
dec
movsb
pop
mov
cmpsb
mov
or
or
sbb
inc
dec
aam
push
cmp
dec
xchg
lds
decl
lock
jns
js
dec
out
movsl
pop
push
scas
lods
je
pop
mov
xchg
arpl
pop
test
mov
mov
adc
cwtl
int
dec
ficompl
mov
lock
or
mov
xchg
aam
mov
scas
popa
or
stos
jae
inc
dec
lret
gs
imul
subl
je
ror
push
jmp
sarl
push
leave
in
sti
xchg
shrl
push
mov
sub
mov
push
faddp
pop
adc
lds
rol
loope
mov
aas
mov
pop
imul
iret
rorb
mov
movsb
arpl
std
imul
push
sbb
fidivrs
jmp
adc
pop
or
stc
mov
movsb
xor
push
adc
sbbl
sarb
aam
mov
das
and
adc
pop
repz
fistpll
jmp
test
insb
or
mov
or
jo
xchg
sub
mov
repnz
das
insl
add
inc
movsb
cmp
fbstp
imul
aaa
inc
cmpsb
cmp
pop
xchg
imul
mov
and
mov
xor
inc
lahf
ss
xchg
rclb
hlt
mov
in
ret
push
lock
jns
adc
sub
cld
jae
loope
jnp
pop
out
push
shrb
loope
and
cmp
lods
inc
data16
mov
testl
or
cmp
jae
testb
test
jle
pop
loop
xor
ja
mov
jae
xchg
inc
es
sub
add
subl
pop
les
popf
cmp
in
test
pop
cmp
mov
jg
xchg
lods
jnp
into
mov
push
std
out
mov
and
fnstenv
xchg
int
sti
xchg
aaa
mov
push
jne
rcll
ret
push
clc
popl
xor
add
mov
dec
lcall
mov
jmp
ror
push
jmp
pushf
sub
push
int
out
cwtl
daa
pop
mov
je
add
jge
inc
outsb
int
mov
mov
xchg
fbstp
in
xlat
add
mov
sub
fnsave
aaa
into
stos
mov
aad
adc
jbe
clc
aaa
into
insl
data16
xchg
mov
cld
out
add
test
fidivl
lret
cmpsb
cmp
dec
mov
cli
outsb
iret
fidivl
and
adc
std
sarb
ret
add
and
ror
in
mov
mov
and
add
cmpsl
mov
adc
cmp
sbb
sbb
adc
push
mov
xlat
test
dec
fsubrs
xchg
pop
mov
pusha
testb
xor
sub
jg
mov
jg
pop
dec
incb
in
test
cs
arpl
stc
jb
in
enter
cs
lahf
test
idiv
jmp
call
xchg
mov
sbb
jb
lcall
push
call
jnp
pop
divb
sbb
adcl
dec
mov
cmc
sub
mov
cltd
in
data16
std
push
das
or
enter
outsl
mov
outsl
push
push
aad
cmp
daa
icebp
mov
test
push
or
cs
xor
pop
insl
xchg
mov
mov
add
sahf
xor
jle
fidivl
lahf
loopne
sub
cmp
and
ret
pushf
shrl
pusha
rcrl
mov
push
xchg
mov
dec
ret
xor
push
add
pop
test
pop
jne
loopne
pop
xchg
pop
push
sub
inc
imul
rcrl
in
test
jge
loopne
loop
jns
call
xor
bound
cmpsb
mov
add
daa
xlat
outsb
xorb
xchg
bound
jg
pop
adc
mov
iret
sbbl
inc
psubb
xor
jbe
xchg
lock
sahf
ss
sbb
pop
cmp
sbb
jge
inc
dec
lods
jmp
fisubrs
pusha
push
jl
lret
sub
jmp
pop
shrb
pushf
loope
jns
mov
popf
xor
and
insl
jae
enter
lret
or
jg
pop
mov
xor
mov
jnp
jno
pop
mov
les
jle
rclb
hlt
mov
sarl
sbb
cmp
xchg
mov
or
cmp
mov
rcrl
add
adc
or
js
dec
jecxz
cltd
ljmp
dec
or
inc
xorb
addr16
xchg
dec
or
cs
pop
call
add
add
cmpsb
call
sahf
ret
sub
or
out
lock
sbb
mov
inc
ja
iret
data16
nop
daa
ja
stos
inc
imul
inc
cmovg
jae
xor
and
mov
outsl
mov
test
pop
fiadds
pop
xor
mov
mov
mov
mov
jle
movq
dec
sbb
pop
mov
call
lahf
test
push
mov
dec
mov
shlb
cmc
cli
xchg
out
addr16
mov
add
lock
push
dec
fisttps
mov
mov
icebp
sbbl
add
repz
xor
mov
scas
sub
fbld
xor
cmp
sub
int
jno
sbb
out
ss
adc
roll
dec
mov
lret
enter
jl
icebp
adc
js
adc
xor
add
fwait
lods
das
into
ret
hlt
out
dec
in
push
mov
dec
inc
imul
imul
jb
pop
mov
ljmpw
lahf
cmp
add
das
dec
inc
fdivrl
scas
inc
inc
out
cmp
fbstp
shlb
mov
jns
ss
mov
cltd
xor
mov
aad
pop
cmpsb
leave
pusha
push
push
std
xchg
jle
mov
mov
fstpl
icebp
pop
jecxz
cwtl
fidivrs
call
loop
inc
fucom
add
iret
imul
mov
push
daa
pushf
xor
dec
dec
in
sbb
mov
lret
cmp
outsl
mov
movsb
outsb
mov
repnz
push
mov
push
mov
shlb
and
mov
mov
les
cmp
pop
int3
arpl
mov
xchg
mov
add
sti
test
xor
cmpsl
test
mov
cli
fnsave
sub
lret
aad
je
movsb
subb
fildl
lret
ret
dec
out
pop
jns
push
lds
dec
int3
jge
test
jne
lcall
sub
mov
sbb
mov
push
cmpsl
or
outsb
and
popf
jecxz
test
loope
push
out
add
test
ret
xor
sbb
adc
imul
scas
cmp
loopne
pop
out
rcl
pop
fcmove
mov
popa
enter
cmc
mov
fldl
enter
cmpsb
jne
sbb
fnsave
sbb
push
outsb
lods
inc
mov
or
outsl
mov
dec
out
test
prefetchw
or
cs
push
or
inc
sahf
insl
xor
push
call
xor
cltd
popa
sti
mov
test
decl
pushf
gs
cmp
lods
mov
sub
adc
dec
mov
mov
repz
mov
clc
hlt
and
testb
movb
or
sbb
mov
xchg
jge
inc
outsl
fldenv
lahf
fsubs
cmp
push
roll
repz
movsl
ja
cld
push
mov
ljmp
mov
outsb
cmp
dec
sbbl
dec
push
adc
and
mov
sti
cmp
push
mov
in
or
loope
cmp
lock
repnz
out
push
xchg
mov
pop
testb
cs
jl
jge
ret
cmp
loope
iret
data16
mov
sub
adc
lock
int3
sbb
pop
iret
les
cmp
inc
addb
andb
dec
aam
je
sarb
enter
pusha
pop
sarb
imul
adc
dec
fildl
int
adc
or
and
lock
xchg
fidivs
out
icebp
in
inc
inc
cltd
mov
sahf
mov
stos
mov
mull
les
add
xchg
mov
frstor
mov
sahf
cmp
fdivl
push
inc
aam
nop
push
push
stos
inc
movsl
daa
cmp
ss
mov
out
mov
les
adc
dec
aam
aam
call
or
rclb
push
sbb
cmp
es
jmp
or
pop
test
bound
jbe,pn
push
dec
outsb
shlb
jo
fwait
dec
pop
mov
pushf
outsb
jle
jb
cltd
xor
xchg
clc
pop
and
sbbb
mov
pop
imul
out
adc
xor
mov
add
and
jmp
int
lea
mov
sti
cmp
push
or
roll
adc
or
sbb
dec
in
and
mov
imul
test
and
lods
inc
push
call
jmp
ss
subb
add
out
imulb
mov
cmp
pop
test
mov
cmp
rorb
cmpb
xor
jbe,pt
cmpsl
dec
xorb
mov
push
into
cmp
and
movsl
xchg
inc
lds
in
sbb
mov
std
fnstenv
dec
jbe
imul
jp
nop
xchg
cmpsb
ss
adc
leave
add
out
rolb
or
loop
jno
addr16
xor
lds
shlb
into
lock
daa
adc
sub
cmpsl
xor
lret
scas
data16
mov
gs
cmp
pop
pop
hlt
dec
imul
loopne
jno
leave
sbb
sbb
xor
mov
push
xor
and
shrb
xor
mov
les
popa
adc
cmpsb
popl
push
scas
loopne
arpl
push
into
jnp
add
add
mov
out
push
not
push
in
outsb
and
mov
outsl
add
testl
idivb
jns
cmpsl
mov
mov
add
adcl
jb
pop
jl
decb
dec
std
adc
sub
xchg
jmp
mov
fnstenv
push
adc
adc
lock
or
imul
sub
lret
jnp
jecxz
fcoml
insl
or
mov
jbe
daa
cmp
pop
scas
arpl
fdivrs
dec
sahf
xchg
lods
sarb
sbbb
repz
fmuls
in
loope
mov
mov
xchg
mov
pushf
cmpsb
jae
mov
fists
pushf
addl
insl
add
push
push
jmp
insb
inc
cld
jl
pop
repnz
out
mov
outsl
mov
mov
xchg
into
push
push
mov
mov
int
pop
sub
ss
sbb
pop
in
out
mov
jns
push
stos
xor
sub
pusha
sub
rolb
or
stos
xchg
push
adc
movsl
loopne
ret
and
mov
ss
jmp
adc
mov
in
mov
xor
psadbw
jle
xor
sbb
sub
ss
fbstp
mov
das
rcr
jo
or
inc
pop
push
mov
pop
mov
shlb
adc
cmp
lock
cltd
gs
test
push
xlat
mov
xor
stos
lds
xchg
cmp
out
xor
movsb
jae
repnz
data16
outsb
pop
inc
mov
xchg
sub
aam
jg
jge
cmp
and
dec
aad
push
mov
xchg
jns
les
cld
ljmp
int
fdivs
mov
pop
xor
lea
repnz
mov
mov
and
dec
nop
inc
lcall
dec
push
xor
mov
sub
je
mov
push
jb
inc
mov
ret
movl
cmpsb
fwait
mov
add
loop
mov
sbb
xor
adc
mov
popf
test
add
fistpll
or
sti
in
out
mov
sbb
in
gs
dec
mov
xor
ljmp
orl
pop
push
xor
enter
adc
xor
push
and
sbb
or
xchg
sub
lods
inc
and
sub
in
ss
in
pop
jge
ficoms
addr16
xchg
cmpsl
scas
shrl
rorl
cmp
and
push
mov
push
mov
lods
cmc
mov
sub
or
push
sbb
inc
inc
cmp
dec
jae
adc
cmp
fidivl
popf
scas
sub
jmp
add
shr
sbb
add
sub
loopne
and
push
push
testb
cld
inc
jmp
and
mov
inc
mov
jg
jnp
sub
ljmp
sar
or
xor
sbb
mov
add
cli
xchg
pop
cwtl
sbb
enter
loopne
out
sub
stc
stc
js
fdivl
cltd
adc
js
pop
sbb
adcb
bound
repnz
orb
pop
scas
pop
and
mov
lods
cmp
and
push
dec
xchg
lods
mov
inc
pusha
add
or
shrl
add
sub
jo
jecxz
push
cmp
sar
es
test
ss
mov
cmp
jmp
in
add
std
and
add
cmpsb
ss
sub
iret
ds
push
imul
push
pop
jbe
inc
bound
std
dec
lahf
inc
test
dec
adc
or
mov
cmpsl
add
mov
movsb
ljmp
mov
inc
stc
mov
mov
shlb
sbb
mov
jns
das
insb
cmp
inc
dec
jno
js
sub
iret
mov
inc
mov
int3
adc
jae
mov
xchg
js
sbb
sub
mov
fiaddl
out
mov
mov
push
lret
ljmp
imul
adc
adc
lds
cmpsb
cmpsl
jmp
adc
sahf
sbb
cmp
les
add
inc
mov
sbb
add
icebp
lock
mov
bound
imul
push
call
xor
repz
out
cmp
and
fst
shrl
js
cmp
pop
repz
pop
jne
mov
or
pop
adc
adc
push
mov
loope
int
imul
cltd
push
mov
lahf
pushf
mov
fbstp
mov
mov
in
mov
je
inc
mov
imul
fidivrs
mov
cltd
lods
add
pop
jmp
push
test
and
dec
dec
mov
stos
adc
lahf
out
jle
adc
roll
adc
xchg
sub
inc
aad
repz
cmp
dec
mov
std
xor
ds
std
jmp
dec
lock
or
add
mov
pop
hlt
nop
les
mov
sbb
imul
insl
add
shll
dec
jbe
push
movsl
mov
pop
xchg
cmp
mov
call
push
jo
mov
arpl
lea
sbb
gs
mov
jno
inc
inc
clc
lea
pop
scas
lock
lret
cvtps2pd
lods
repz
negb
xor
loope
rcrb
dec
sub
push
and
or
fidivrs
aaa
outsb
push
push
mov
xchg
insl
movsb
orb
dec
fst
mov
adc
les
rcrb
arpl
jno
popf
shrl
nop
mov
jmp
test
push
ret
inc
mov
cmpsl
sti
add
fidivl
iret
mov
dec
sbb
xchg
xchg
pop
dec
mov
shrb
test
out
push
shl
cs
sahf
aam
fisttpl
or
cli
dec
mov
jnp
mov
dec
adc
dec
xchg
jge
ficompl
mov
cld
aam
fucomip
push
rcl
leave
cmp
stos
sub
sarl
dec
add
lea
push
mov
xchg
bswap
xchg
out
xchg
xchg
sub
and
cmpl
adc
or
cmp
xor
add
fnstenv
daa
inc
int
jp
xor
inc
adc
pop
mov
mov
sbb
xchg
adcl
pop
jb
out
xchg
jmp
aas
iret
adc
outsb
jbe
or
mov
out
adc
add
jbe
xchg
fs
mov
or
mov
sbb
aad
push
imul
popf
sub
outsb
xchg
sbb
sbb
cwtl
mov
lock
imull
stos
addl
sbb
pop
dec
es
xchg
aas
hlt
fwait
jp,pn
jp
push
movsb
movl
cli
cmpl
out
or
add
es
push
mov
or
mov
mov
jmp
test
ret
mov
in
test
xchg
mov
xchg
sub
lcall
xlat
dec
ljmp
jecxz
push
daa
cmpsb
pop
orb
dec
xchg
fistps
clc
push
sub
sbbl
fmul
aaa
stc
push
mov
shrl
pusha
and
cld
loop
imul
roll
data16
cmpsb
ljmp
add
cmp
mov
sbb
fstps
mov
or
adc
sub
sarl
aaa
push
scas
out
icebp
hlt
mov
and
push
cmp
rcll
jmp
mov
adc
lock
add
ret
scas
mov
ret
ss
test
sub
mov
fnstsw
sbb
dec
adc
dec
pop
imull
mov
jmp
cmp
fldenv
lea
xor
enter
mov
scas
mov
xor
fbld
add
imul
in
daa
lea
stos
mov
pop
mov
xchg
popa
lock
cmp
xchg
out
fs
adc
inc
sbb
mov
std
xchg
lea
pop
stos
mov
xchg
call
ds
or
lcall
popf
dec
ret
push
jmp
or
adc
pop
fistpl
xchg
hlt
insl
std
bound
adc
mov
imul
cwtl
add
jl
aas
in
lahf
jge
dec
loopne
xchg
mov
sarl
pop
shll
mov
fnstenv
test
aam
in
mov
inc
mov
rol
fcomps
mov
repz
mov
aam
xchg
xlat
scas
pop
jecxz
mov
out
inc
arpl
in
cmpsl
adc
inc
adc
andl
iret
lock
dec
idivl
int3
dec
movb
pop
ret
mov
adc
fwait
pop
test
out
sub
cmpsb
jb
or
mov
lcall
dec
fucom
mov
dec
adc
add
sahf
lods
jne
es
or
pusha
xor
fsubl
shl
pop
jge
push
sbb
cmp
lahf
fnsave
aaa
inc
js
testb
sbb
lahf
pusha
jns
jb
in
mov
pop
cmc
cld
push
sbb
push
lahf
shl
xor
mov
cmp
test
lock
cltd
xor
sbb
aam
push
add
fidivs
and
testb
jmp
test
in
into
mov
mov
rcr
stc
psrad
cmpsb
mov
cltd
xor
flds
into
lret
sub
pop
mul
or
jmp
int3
out
mov
mov
cmp
mov
xor
enter
aad
inc
mov
lret
cld
ss
outsb
add
nop
dec
cwtl
popf
das
mov
fstpt
movsl
mov
nop
jnp
loop
pop
adc
add
subb
inc
cmc
sbb
in
rolb
mov
mov
adc
jge
push
xchg
xchg
pop
clc
movsb
rcll
xor
pop
mov
mov
pop
mov
js
and
arpl
mov
gs
cmp
dec
fcom
and
pop
lret
movsb
sbb
dec
sbb
out
scas
push
and
in
test
adc
add
push
and
das
mov
subb
pop
in
and
ss
sti
pop
push
jnp
sub
adc
pop
xor
lock
xor
ret
jl
adc
add
sub
lret
sti
mov
loope
cs
das
pusha
lods
push
xchg
add
mov
fisubl
movsb
and
cmp
fs
push
sub
push
cmp
stc
pop
jecxz
push
sbb
inc
push
call
lret
bound
rorb
add
fsubrl
leave
js
or
mov
push
sbb
loopne
push
aas
mov
bound
xchg
imul
fstpl
cmp
lret
bound
jb
jmp
sbb
int3
jbe
rcrl
cmpl
mov
cmpsb
inc
mov
cmp
cmp
iret
xchg
inc
out
xchg
and
fucomip
xchg
fnstsw
sub
scas
jge
nop
sbb
popf
push
icebp
cwtl
and
mov
xchg
jp
dec
inc
jae
jmp
dec
test
ffreep
adc
mov
jecxz
shll
lret
inc
adc
inc
xchg
push
fisubs
pop
in
sbb
jns
fwait
xor
xchg
mov
jle
cld
mov
or
xchg
test
or
cmp
inc
pop
pusha
fmuls
cmp
arpl
and
cmp
add
ds
sub
xchg
addb
movzbl
fprem1
cmp
test
or
enter
xorl
movsb
xchg
mov
cltd
add
es
popa
pusha
adc
aas
jge
arpl
sub
pusha
add
xchg
mov
aas
nop
mov
lahf
xchg
lea
lods
cmp
lods
insb
sub
mov
popw
jg
dec
add
imul
push
mov
das
or
add
out
xchg
movsb
cmp
aad
add
xchg
cld
out
jle
xchg
pop
in
pop
js
mov
cmp
xor
in
push
dec
lods
sub
ret
inc
dec
imul
shrb
andps
add
aad
outsb
jne
das
push
data16
pusha
add
xchg
iret
mov
jp
outsb
xchg
sub
hlt
popf
insl
outsl
push
pop
push
das
movsl
xchg
mov
insl
icebp
test
and
cmc
push
in
ffreep
inc
enter
ret
mov
stos
cltd
out
in
js
ret
ljmp
jmp
cwtl
dec
jo
cmpl
push
dec
cli
pop
cmp
xor
sbb
outsb
jnp
fildll
or
dec
jae
mov
pop
es
adc
fwait
outsb
es
js
imul
inc
aaa
fadds
mov
test
cmpsl
pop
mov
lds
gs
rcr
cwtl
incl
jbe
dec
sar
ss
lret
push
adc
rorb
cmpsb
mov
mov
xor
mov
and
out
aas
or
adc
inc
sbb
cmpl
inc
cld
mov
fnstenv
pavgw
cmc
pop
ds
xor
and
and
aad
xor
std
dec
lods
xchg
shrb
pop
mov
add
shrl
mov
es
rol
pop
inc
sbb
or
sub
inc
mov
push
nop
pop
mov
xchg
iret
fcompl
pop
jmp
and
dec
jo
pop
xchg
int
in
xchg
out
mov
aaa
popa
outsl
std
add
pop
xor
fists
xor
and
push
pop
push
mov
xor
test
test
mov
and
leave
mov
inc
cli
xchg
jne
adc
fildl
push
sub
loopne
mov
jno
faddp
imul
out
jae
add
mov
ljmp
stos
call
pushf
push
test
mov
or
repnz
dec
add
jp
dec
in
inc
addr16
ret
lods
imul
sub
jmp
clc
xchg
xor
adc
add
loop
jo
repnz
dec
sbb
or
push
or
pop
or
insb
mov
lret
jmp
inc
les
push
or
adc
pop
push
push
popf
imul
enter
inc
cs
sbb
jmp
cmpsb
xchg
mov
out
mov
outsb
or
xchg
fnstsw
xchg
scas
inc
lds
xchg
xor
push
shl
out
pop
aaa
push
dec
adc
sbb
in
in
pop
aas
jne
inc
mov
fldcw
or
pop
dec
repz
mov
js
xor
popa
int3
into
rcrl
cli
mov
mov
stos
sub
ss
aam
rclb
test
in
in
jbe
mov
filds
daa
mov
shrb
jmp
mov
cmpsl
or
jmp
adc
mov
shrb
jp
pop
insb
lret
shrb
pop
sub
out
xchg
outsb
dec
loop
mov
imul
cmp
mov
inc
pop
imul
data16
cmp
fistpll
test
xor
jp
push
pop
test
cwtl
nop
cmpsb
in
fdivs
add
inc
mov
inc
cbtw
daa
mov
rcrl
jl
jg
arpl
jbe
xchg
push
hlt
fimull
arpl
test
imul
pushf
adc
sbb
or
cmp
add
add
data16
dec
in
mov
dec
mov
fucomp
les
inc
mov
inc
xchg
xor
lods
sbb
mov
fsubrs
dec
pop
xor
jo
mov
xor
jle
dec
lret
push
xchg
adc
push
pop
mov
xrelease
and
and
add
or
xchg
cli
rcr
in
cwtl
in
rcrl
pop
icebp
lods
lret
aaa
fidivrl
js
insl
in
mov
sti
mov
aam
fstps
out
jmp
jl
popf
and
and
jne
push
iret
jecxz
lods
adc
insb
call
xor
scas
jle
sbb
in
hlt
dec
call
mov
pop
lds
mov
lock
jno
mov
adc
mov
enter
jo
int
jmp
mov
xor
fistpll
push
mov
in
add
fisubs
test
push
mov
pop
shll
mov
lods
in
mov
pop
test
into
cmp
ja
pop
mov
gs
dec
lret
lea
pop
inc
stos
jae
pop
mov
lock
movb
arpl
scas
stos
mov
mov
sbbb
xchg
xorl
fsubrp
outsb
fsubl
ret
sub
andl
adc
dec
cmp
int
out
mov
addr16
ljmp
lret
es
out
inc
fistl
cmp
sbb
lcall
jmp
imul
imul
pop
roll
fs
jmp
out
jo
sub
mov
or
xchg
hlt
popf
lods
sub
shll
jecxz
negl
fwait
and
aaa
idivl
push
adc
mov
push
int3
mov
into
sub
jbe
or
enter
paddsb
jmp
pop
ss
leave
mov
push
push
call
negb
cli
pop
pop
mov
fwait
js
fsubr
test
add
cmp
push
les
mov
loope
push
lahf
addb
xor
jecxz
xchg
rorb
dec
push
dec
lcall
insl
icebp
jb
mov
icebp
insb
mov
dec
out
ja
push
outsb
push
add
inc
lea
or
and
push
sub
frstor
mov
mov
jle
xor
leave
pusha
or
add
in
out
mov
inc
sti
or
cmpsb
dec
push
push
ret
cmpb
shr
lret
sbb
int
loope
xchg
dec
cs
dec
cmpsb
push
sub
inc
mov
imul
pop
arpl
push
xchg
ds
arpl
arpl
dec
sbb
mov
sbbl
or
jle
dec
test
add
popa
push
cmpps
in
xor
loopne
mov
adc
mov
je
sub
inc
push
and
mov
in
pop
cmpsb
pop
loopne
aam
xchg
divb
dec
lods
sarb
fildl
xchg
lds
addb
aam
aaa
aam
inc
nop
push
mov
call
or
jp
xor
fsts
in
jbe
push
pop
cmp
xchg
or
sub
std
inc
ljmp
outsl
out
out
xchg
rcrb
es
cmp
xor
loop
pop
imul
std
stc
lret
add
dec
loope
movsl
mov
mov
inc
sti
lods
vdivss
in
lahf
imulb
test
loopne
and
notb
addr16
loop
inc
xlat
test
stc
imul
mov
outsl
cmc
push
pop
fucomip
xor
mov
rolb
cs
push
jo
in
loope
in
addr16
js
mov
out
addr16
xchg
push
sbb
xorl
sub
iret
mov
bound
add
scas
js
or
inc
and
xchg
sbb
jo
int
mov
dec
cmpsl
mov
jo
cmp
cmp
and
xchg
sub
dec
jno
rorl
pop
incl
mov
pop
sahf
xor
mov
out
mov
xchg
push
jo
shll
adc
push
out
imul
sub
cmc
cwtl
add
imul
std
clc
loope
repnz
in
arpl
mov
ficomps
pop
xchg
cs
mov
out
or
lret
notb
inc
cltd
enter
in
or
mov
push
cmp
sub
mov
movsl
mov
mov
add
xlat
das
rol
sbbb
add
cmp
fdivrs
lret
ss
call
int
push
stos
flds
sub
adc
icebp
std
pop
shrl
outsb
dec
sbb
lds
aas
jmp
enter
xchg
mov
les
jp
xlat
icebp
aaa
das
sbb
addr16
sbb
cmpsl
cmp
add
inc
and
mov
xor
inc
mov
push
fs
jecxz
jae
cld
rorl
mov
ss
aas
xchg
lret
ss
pop
adc
add
popa
xor
jg
es
adc
rcrb
bound
adc
and
divl
pushf
ljmp
into
ss
add
inc
jae
imul
mov
mov
fistpl
mov
xchg
mov
dec
shll
sahf
js
dec
pop
mov
and
cli
shr
hlt
pop
ljmp
rorl
inc
fwait
daa
push
int
mov
sbb
push
test
lahf
fnstcw
sub
mov
pop
mov
push
mov
inc
mov
or
and
sbb
add
out
mov
jg
loopne
jl
pop
sbb
loope
rol
mov
xchg
xor
fiadds
jns
xchg
pop
loope,pn
insb
lds
testl
test
sbb
or
xor
frstpm(287
nop
imul
lcall
dec
mov
and
fsubrs
xchg
sub
add
inc
data16
xor
stos
inc
push
cmp
and
pop
xchg
cli
inc
xor
repz
adc
or
adc
jg
sbb
std
xchg
push
xchg
xchg
out
or
xor
mov
mov
aam
test
fcoms
sbb
repz
inc
loopne
in
pop
push
iret
loop
int3
out
xchg
stos
movsb
aas
push
push
shll
int3
fbstp
dec
es
mov
aas
cli
xchg
push
mov
in
cmp
popl
nop
adc
mov
mov
fdivr
dec
andb
pop
mov
sub
mov
imul
pop
sbb
or
lods
cmp
sub
pop
mov
aad
adc
repz
jno
shr
rorb
les
jne
leave
cmp
pop
fdivr
cltd
pop
cmp
in
dec
dec
mov
cmp
push
lahf
jbe
xchg
cmp
std
jo
xchg
pop
lret
jmp
pusha
lahf
pusha
jg
mov
ret
adc
cli
and
xchg
jle
cmp
mov
icebp
xchg
lcall
mov
icebp
xchg
mov
adc
fcmovnb
pushf
xor
sbb
aad
dec
jb
push
xchg
ficoml
jbe
repz
cmp
out
or
inc
insb
and
scas
mov
add
ljmp
popa
inc
test
add
push
das
cmp
adc
cmovs
mov
cmc
mov
dec
movb
xor
fsub
sbb
sbb
call
cmc
repnz
negb
sub
bound
insb
xchg
sub
push
ss
pushl
sbb
stc
sbb
cmc
int3
xchg
sub
fistpl
dec
movsb
bnd
jge
adc
faddl
xor
and
js
mov
add
jg
or
orl
xor
and
mov
add
in
pop
cmp
lahf
xor
sarb
mov
jle
divb
sbb
jne
jl
cwtl
insl
out
ja
adc
adc
push
lcall
sahf
and
mov
jle
adc
cli
jne
lods
ret
adc
addl
jnp
push
mov
push
clc
lret
fwait
or
xchg
int3
arpl
mov
repz
push
hlt
stc
mov
cmc
popf
add
pop
adc
lea
js
xchg
and
cwtl
push
pusha
pop
lock
push
xchg
xchg
ss
pop
imul
loope
push
jne
cli
or
mov
mov
or
addr16
shlb
mov
pop
icebp
iret
shlb
test
dec
sub
push
sbb
ret
fnstcw
mov
lcall
or
mov
xlat
mov
xorb
and
and
pop
test
pop
lods
mov
out
scas
mov
lcall
outsl
adc
stos
aas
and
cmp
sbbl
pop
push
cltd
int
lahf
push
cmc
addr16
cwtl
cwtl
lret
sbbl
pop
pop
inc
int3
nop
subb
add
push
mov
int
movsl
mov
sbb
fstpl
pop
lock
push
and
aam
out
adc
fs
mov
in
subl
mov
xchg
repnz
mov
aam
jae
rcl
ret
sub
jo
popa
mov
pop
outsl
xchg
scas
iret
data16
data16
cmpsb
lahf
jbe
xchg
movl
inc
jo
pusha
mul
xchg
imul
xchg
data16
sub
mov
mov
pop
fsubr
dec
out
adc
xchg
lret
cld
mov
mov
cwtl
inc
fmuls
pop
imulb
hlt
xchg
loop
jge
rolb
push
xor
inc
bound
push
lock
or
cld
cmp
pop
jae
add
inc
push
mov
inc
int3
xchg
fdivrl
icebp
push
cmp
popa
add
mov
rcr
sbb
clc
cmp
sub
mov
cmc
sub
cltd
daa
add
pop
mov
push
jmp
in
xor
ljmp
cmc
test
ja
cmp
loop
sub
pop
popf
sbb
ds
loope
inc
inc
mov
jmp
cs
dec
and
push
stos
jecxz
rcrl
xchg
in
push
lock
push
xor
push
push
ljmp
jb
mov
pop
nop
mov
jns
pop
bound
in
cmp
dec
stos
pop
and
int3
scas
inc
dec
sbbb
pop
dec
pop
call
or
jge
ds
int
and
or
jmp
lods
sub
cmp
inc
fildll
arpl
dec
sbb
sbb
pop
out
fs
push
xor
int3
cwtl
jecxz
fnsave
std
negl
outsl
repz
nop
out
mov
arpl
jbe
push
je
inc
repnz
cltd
stos
lahf
or
rclb
outsl
xor
in
xchg
add
and
rcll
mov
lods
jb
fcompl
ss
mov
int
push
jle
mov
mov
ds
inc
jp
aam
arpl
adc
lds
mov
inc
mov
outsl
mov
jno
xchg
sub
jae
dec
push
outsb
add
loope
pop
mov
mov
mov
xchg
and
and
js
push
fucom
dec
outsb
add
dec
movsl
or
rorl
dec
loope
icebp
pop
movsb
test
push
sub
clc
cli
fcomi
jns
dec
stos
push
or
and
mov
dec
sub
test
in
jno
add
xor
push
jge
dec
inc
pop
jp
push
ljmp
inc
repnz
add
mov
push
mov
imul
sub
rclb
mov
sarl
mov
fmull
xsha1
cmpsb
dec
popw
mov
aas
sub
cmp
push
pop
into
xchg
jne
xor
in
test
insb
fs
ljmp
mov
fistl
daa
push
adc
pop
pop
and
pop
enter
and
jg
or
add
lods
lods
mov
addb
idivl
sub
ja
push
shll
idivl
adc
out
out
jo
xchg
in
mov
rcrb
jecxz
push
sbb
jnp
out
xchg
push
or
imul
imul
mov
inc
push
out
addr16
rcll
xchg
dec
mov
mov
pop
add
xor
sarb
sbbl
aaa
sub
add
rcll
mov
cmp
neg
pop
jmp
jmp
xor
sub
and
call
frstor
jmp
and
cli
cmp
sbb
notb
in
orl
pop
idivl
and
out
xchg
dec
adcl
in
add
pop
xor
rol
fwait
sbb
push
push
lcall
lcall
sbb
ret
aad
xor
les
ret
mov
repz
add
scas
sbb
push
movsl
sbb
pop
jb
ret
jp
stc
inc
mov
pop
push
push
add
dec
test
push
cwtl
jb
adc
sbb
and
outsb
mov
or
jp
add
test
iret
js
jp
push
leave
mov
xchg
xchg
dec
xchg
or
sub
mov
leave
xchg
sub
int3
jle
dec
scas
ret
pop
hlt
push
in
or
test
vpcmpgtd
das
fucomi
cmc
adc
test
inc
pop
cmp
out
mov
pop
dec
jecxz
mov
cmp
mov
xchg
sub
mov
inc
lock
imul
xchg
jno
mov
ds
pushf
inc
adc
xlat
mov
jne
jge
pop
dec
add
pop
testb
add
and
and
jmp
xchg
loop
shrl
fldpi
repz
ss
inc
mov
sarl
mov
shrl
xorb
lret
dec
sar
das
adc
sti
aam
sub
ljmp
xchg
popf
scas
dec
jae
pop
in
rol
mov
fists
xchg
sar
inc
add
iret
loope
pushl
xor
out
sahf
or
fiadds
jno
neg
jno
out
arpl
cmp
lcall
xor
ret
push
cmp
xchg
jo
int
pop
je
lock
icebp
insb
mov
popf
shlb
into
sti
test
push
adc
sub
fwait
pop
sub
xor
jle
enter
inc
dec
push
sub
sbb
inc
lcall
inc
fmull
lds
testb
fwait
clc
mov
cltd
and
cli
push
jmp
out
test
sbb
adc
fldenv
fsincos
daa
test
jge
add
ja
out
sub
cs
in
out
mov
filds
adc
inc
lcall
cwtl
test
mov
jne
movsb
cmpl
xchg
jmp
mov
push
cs
aam
int
sbb
fadd
jne
xor
out
pushl
ret
pop
mov
adc
jns
xchg
pop
ds
lock
and
dec
hlt
mov
int
xchg
ret
push
push
mov
lcall
imul
rorl
daa
jmp
push
and
dec
ret
ja
mov
shlb
loopne
mov
fsincos
sub
cmpsb
add
adc
sub
sti
mov
lret
es
bound
lock
sub
push
insl
inc
jno
cld
add
mov
pop
mov
lds
push
pop
ret
pop
dec
out
rcr
imul
test
xor
lds
adc
gs
dec
in
bound
stos
popa
imul
or
packuswb
aas
shl
jo
scas
inc
dec
jne
mov
int
jmp
gs
jl
fidivl
dec
dec
inc
xorb
adc
addr16
enter
and
addr16
mov
sub
pusha
pop
shrb
lock
gs
loop
jge
inc
and
xchg
lret
out
xor
jg
cmovle
mov
in
es
fbstp
or
mov
repz
jnp
fmuls
mov
mov
push
pusha
mov
outsb
cld
mov
mov
sbb
repz
inc
and
adc
testl
test
inc
idivl
lcall
ljmp
icebp
push
ret
testb
lret
ret
movsl
icebp
insl
pop
inc
inc
aaa
xchg
mov
cmp
pop
or
xchg
cmp
mov
sbb
jecxz
xchg
cmp
pop
out
mov
sbb
adcl
fs
loopne
push
xchg
pop
aaa
pop
add
cmp
jge
repz
sub
ljmp
add
fnstcw
stc
nop
mov
pop
xchg
push
mov
mov
sub
mov
sarl
add
add
rcrl
das
dec
add
andb
imul
lock
or
jnp
dec
movsb
insl
das
jae
insl
or
in
negb
stos
pop
jno
lcallw
pushf
daa
jp
out
cwtl
sub
mov
xchg
pushf
sar
mov
mov
loope
cmpsl
push
adc
xlat
cmp
mov
push
pop
hlt
cmpl
out
sub
filds
sub
dec
jl
cs
xchg
xchg
pop
pop
mov
stc
std
out
fdiv
pusha
mov
ds
mov
roll
es
adc
xor
cmc
outsl
ja
stos
sub
popa
mov
jge
sarl
lods
call
in
mov
out
movsb
inc
push
push
daa
mov
mov
inc
dec
cwtl
int3
or
repnz
xchg
mov
fimull
repnz
outsb
pop
lock
inc
cld
pop
xchg
xor
in
gs
jmp
popl
dec
leave
add
or
mov
dec
cmp
jle
aaa
int
fld
fcompl
push
jbe
dec
mov
cld
xchg
mov
xchg
adc
xchg
mov
test
ja
xchg
mov
hlt
sub
mov
rorb
stos
test
mov
adc
xor
add
out
scas
sub
jbe
inc
fimuls
mov
arpl
fstpt
rolb
push
repz
xor
sbb
cmpsl
ret
dec
jge
fildll
xchg
cld
lret
cmp
inc
push
mov
jecxz
mov
xor
jae
in
xchg
mov
or
jl
shrb
mov
mov
xlat
push
dec
mov
jnp
mov
test
jbe
aad
imul
lds
mov
jnp
pop
sub
mov
std
cli
in
sti
xchg
cwtl
test
lret
or
sar
es
mov
test
lret
jae
xchg
sub
or
dec
and
loopne
and
data16
popl
adc
jno
aas
jl
addr16
aad
inc
ret
movb
lock
pusha
aad
movsl
cmpsb
ficompl
pmaddwd
mov
sub
hlt
les
mov
cmp
shl
sbb
and
lret
sbb
pop
adc
mov
adc
les
mov
iret
mov
pop
out
outsb
jb
mov
out
ljmp
sub
adcl
sub
push
popa
push
sub
xchg
mov
dec
lock
sub
mov
inc
roll
jp
aas
shrl
popa
inc
push
sti
lret
jns
dec
mov
fwait
adc
enter
and
cltd
lods
inc
fnsave
cltd
imul
mov
cwtl
pop
and
leave
loope
adc
sub
mov
inc
lods
jge
daa
inc
pop
cmc
ss
neg
fidivrs
pop
jp
popf
cs
lods
je
jb
cmc
cmp
mov
push
inc
cmp
mov
or
das
movb
ja
push
jbe
je
push
shrb
movd
dec
daa
shl
pop
xor
fisttpll
js
mov
dec
in
or
push
mov
mov
ret
dec
leave
adc
out
sub
loope
insl
push
bound
dec
bound
repz
xchg
xchg
cmp
and
add
adc
outsl
cmp
bnd
mov
add
and
scas
pop
mov
icebp
loopne
inc
mov
mov
xchg
sub
iret
xor
jp
inc
nop
push
imul
push
xor
les
xchg
lahf
push
mov
mov
ret
xor
mov
push
adc
popf
push
xchg
mov
mov
sbb
inc
leave
push
cli
enter
xlat
imul
jo
sub
jp
sbb
call
xchg
cmp
or
pushf
sub
popf
dec
aaa
repz
cli
cmp
mov
xchg
rorl
enter
push
mov
fldl
jmp
jecxz
and
xchg
xor
cltd
out
xor
and
jno
push
mov
in
sbb
loop
imul
decb
sub
dec
lods
cmp
enter
mov
dec
sti
aad
fcompl
incb
or
inc
cmpsl
jb
pop
jnp
enter
rorl
sub
cmc
jae
xchg
movsl
adc
fdivs
jo
fldenv
xor
xor
cmp
or
jbe
leave
cmpsl
mov
cmp
clc
and
jle
bound
jns
jbe
icebp
push
fwait
xor
xchg
add
cmp
cwtl
push
rolb
fwait
pop
inc
ret
or
lods
rorl
sbb
sub
lret
fadds
cmpsb
out
pop
fwait
out
xor
ret
sti
mov
roll
and
xchg
sbb
mov
mov
push
cmp
ja
fdivrl
enter
xchg
pop
cmpsb
xor
cld
push
in
cs
mov
pop
pop
mov
mov
pop
test
inc
icebp
jg
cmpsb
int
sti
jg
dec
fsubrl
xchg
mov
pop
repnz
xchg
mov
out
lods
insl
test
rorl
sbb
out
dec
xor
xor
mov
xchg
hlt
xchg
loop
inc
adc
push
adc
pop
lret
cmpsl
rolb
ss
mov
out
cmp
mov
and
jg
mov
and
mov
jp
adc
dec
and
or
iret
xchg
mov
mov
adc
lret
cmpsl
mov
mov
jbe
add
leave
pusha
negl
shrb
pop
sahf
mov
and
add
mov
lods
inc
mov
dec
lret
pop
inc
sahf
or
inc
test
clc
add
jl
mov
les
adcb
lss
or
in
leave
insb
xchg
insb
sbb
aaa
pop
movsb
inc
iret
fnstenv
mov
push
or
sbbb
and
stos
inc
out
sti
jp
int3
push
jmp
mov
test
or
xor
js
pop
pop
cmp
add
outsl
into
xor
out
mov
sbb
leave
dec
pop
sbb
imul
or
nop
mov
in
sbbb
dec
sub
fs
sub
mov
mov
testb
mov
pop
inc
stos
test
xchg
sti
xchg
add
dec
adc
inc
das
lods
nop
fdivs
shrb
out
loopne
in
loop
arpl
stos
jge
xor
mov
test
loopne
add
and
pop
das
shr
pusha
and
jns
data16
sbb
inc
inc
jp
sbb
jp
push
cltd
dec
push
int
dec
adc
in
mov
pop
stc
dec
loop
xchg
xchg
push
je
test
pop
mov
adc
shlb
sub
mov
adc
out
add
adc
icebp
test
stc
shlb
adc
call
cld
test
outsb
shlb
ret
adc
cltd
mov
or
popf
lods
inc
es
add
std
and
mov
mov
add
lods
fdivs
ss
aas
push
jmp
adc
push
or
fcompl
xchg
lret
adc
inc
inc
mov
std
lods
xchg
jo
adc
inc
inc
inc
mov
jmp
popa
xor
pop
mov
and
inc
stos
call
arpl
inc
aas
xchg
mov
push
jle
rcrl
dec
loopne
or
xor
push
scas
mov
mov
xor
ds
aaa
push
lods
cmp
cs
inc
ret
mov
and
hlt
imul
pop
into
loop
cmp
push
push
test
aaa
shrl
adc
in
jecxz
adcb
inc
or
gs
iret
addb
sbb
push
aaa
hlt
sub
jnp
jle
in
adc
sub
neg
push
cmpsb
pop
jne
addr16
sarb
cmp
sti
xor
sahf
pop
add
mov
add
aaa
movsl
out
sbb
std
push
in
repnz
repnz
add
flds
dec
fsubs
hlt
data16
into
jb
and
fsqrt
sub
dec
mov
imul
xor
lcall
imul
adc
push
daa
pop
mov
xor
clc
jg
xchg
pop
idiv
push
pop
add
popf
jge
shrl
loop
and
inc
fstl
insl
aam
cltd
xor
xor
lea
fmull
rep
inc
daa
jne
lret
jp
cld
cld
mov
dec
scas
data16
fidivs
addr16
cmp
test
int3
mov
mov
and
adc
pop
fwait
lcall
mov
mov
jmp
fwait
xor
fs
xchg
filds
jmp
xor
or
inc
sbb
test
cli
ja
sub
jns
leave
dec
xor
push
inc
stos
mov
mov
or
xor
pop
xor
cli
mov
sub
icebp
jge
mov
shrl
push
jl
add
daa
mov
add
sub
jge
aaa
add
pop
dec
fdivs
fs
scas
xchg
rol
jns
sub
inc
mov
repnz
cmpsl
mov
loop
cs
dec
dec
vminps
and
sti
push
sub
shlb
and
pop
outsl
daa
andl
mov
push
es
in
cmp
ret
cmp
mov
jge
sub
repz
and
mov
dec
dec
fistpll
push
push
ror
mov
dec
dec
or
es
push
or
push
xchg
leave
jno
inc
lods
ficomps
mov
les
cli
add
lcall
sti
repz
cmp
and
add
inc
mov
adc
roll
mov
mov
inc
push
mov
popa
aad
mov
and
or
jge
je
or
xchg
xor
js
das
jmp
lcall
mov
sbb
xchg
hlt
add
sbb
lea
inc
sbb
pop
cmp
mov
dec
pop
or
mov
sbb
lret
mov
cld
ljmp
cld
int3
xchg
data16
lret
inc
in
jns
loopne
fcompl
cwtl
xor
out
test
push
or
clc
adcb
sbb
out
adc
iret
in
jo
lcall
add
push
mov
andl
sbb
push
mov
xchg
les
or
pop
scas
std
lahf
flds
xchg
and
add
mov
xor
ja
fcom
out
shrl
out
idivl
sbb
pushf
fdivl
inc
push
xor
cld
jg
and
pop
in
test
cld
jno
sub
lea
dec
arpl
enter
and
cltd
call
push
mov
xor
jno
adc
ds
mov
and
call
fdivl
stos
xchg
adc
jge
push
int
sbb
mov
addb
mov
shrl
js
xchg
call
sbb
inc
add
lret
jb
xchg
sub
push
cli
call
jecxz
sub
or
test
imul
pop
pop
push
and
test
or
mov
imul
cmpsb
sbb
adc
test
stos
fstps
pusha
call
or
lret
adc
inc
mov
inc
sbb
js
les
sahf
mov
lods
inc
repz
test
or
dec
inc
or
sahf
mov
aas
sub
insl
pop
xchg
lahf
lret
mov
add
xchg
cltd
xor
idivb
repz
add
arpl
sbb
dec
iret
pop
xor
testb
mov
push
subl
data16
addl
sbb
push
movl
jb
iret
aaa
stc
cmp
push
sub
or
xchg
pop
iret
xor
xchg
imul
adc
scas
sti
inc
adc
pop
test
into
lods
mov
adc
dec
push
add
outsl
mov
inc
xchg
mov
or
loopne
dec
adc
ret
push
das
xor
sbb
sub
gs
or
xchg
inc
lahf
stos
inc
inc
xchg
xor
cmp
lods
adc
pop
imul
jae
loopne
ret
cmp
adc
mov
shrl
dec
nop
dec
fs
dec
dec
or
push
inc
sbb
xor
push
cmp
dec
data16
fmull
je
lret
xor
xchg
xchg
call
push
mov
leave
lock
and
and
push
inc
call
call
imul
and
xlat
hlt
andl
arpl
or
xchg
aaa
mov
add
icebp
lods
clc
stos
inc
leave
xor
aas
sub
pop
mov
fsubrl
or
jae
push
imul
cwtl
test
cmpsl
mov
jmp
sub
jnp
and
pop
xchg
lret
into
mov
outsl
cmp
sub
movsb
mov
or
out
cmp
xchg
jp
dec
cwtl
in
stos
cwtl
shl
mov
xor
sbb
shrl
andl
das
out
stc
shll
rol
decl
out
test
jns
pushf
jmp
and
imul
arpl
cwtl
mov
push
sub
adc
fisttps
jle
push
les
adcl
mov
push
into
mov
dec
cmp
ret
pop
cmp
mov
dec
pop
dec
lods
stc
hlt
stos
dec
loope
mov
push
jb
inc
add
fldcw
dec
sub
in
sbb
test
outsl
inc
xchg
std
ds
data16
mov
mov
push
jb
inc
hlt
lods
jg
xor
loop
fcomps
xchg
or
push
xor
lcall
es
jne
icebp
pop
mov
mov
sbb
fmuls
outsb
in
mov
repnz
imul
cli
inc
shr
dec
sti
cmpsb
push
or
cmpsb
sbb
std
cwtl
outsl
mov
jno
int
jae
cmp
mov
ret
data16
stos
mov
rorl
xor
push
in
push
cmp
arpl
lods
cmpsb
push
adc
test
das
rorl
loopne
call
push
pop
or
ror
pop
mov
mov
out
sub
cs
sbb
sahf
mov
cmpsl
ds
cmp
test
xchg
lock
imul
ja
jnp
iret
and
scas
and
js
call
data16
mov
std
cmpsb
aaa
add
push
push
gs
fsubrp
adcl
call
lahf
xor
popf
js
scas
inc
cmp
lret
jge
mov
jns
sub
add
pop
out
lahf
sub
or
xchg
mov
in
or
push
xchg
sub
and
cmpsb
adc
cmp
inc
cmpsb
aad
mov
fldenv
icebp
pop
add
int3
jecxz
add
inc
xor
cmpsb
mov
out
fisubrs
fistl
call
cmp
int
sub
mov
inc
sbb
negb
bndstx
jno
jbe
mov
out
mov
xchg
adc
xchg
jns
mov
lods
or
cld
shl
mov
sbb
add
push
iret
and
pop
stos
es
into
pop
push
sahf
mov
popf
sub
sbb
dec
insl
aaa
mov
ja
js
xchg
outsb
mov
popf
into
sub
out
sbb
gs
xchg
std
pxor
xor
mov
push
cmp
les
adc
cmpsb
pusha
stos
mov
pop
ja
jno
and
aaa
stos
jbe
decl
call
jg
and
les
jnp
lods
lods
mov
mov
or
fdivl
cs
inc
or
test
outsb
scas
push
aam
mov
push
and
push
or
jge
push
in
incl
pop
js
jbe
loope
aas
jl
mov
out
xchg
std
pushf
inc
add
out
test
fcmovnbe
loopne
mov
xchg
dec
or
jbe
sbb
cmp
imul
and
jne
addr16
stos
and
vandps
pop
sbb
rcll
loope
das
push
sbb
adc
inc
add
nop
repz
mov
and
push
sub
xchg
inc
mov
mov
stos
cmp
scas
cltd
icebp
mov
sub
push
cmpb
add
inc
xor
push
test
into
lcall
cmp
dec
dec
lods
cmpl
xchg
pop
ss
pop
jbe
rcll
adc
push
cmp
inc
and
repz
xchg
push
stc
arpl
sbb
arpl
out
sarb
add
lock
cmpsb
mov
sub
jecxz
or
rcrl
xchg
sub
xor
and
mov
inc
xor
mov
sbb
xor
ret
add
xchg
pushf
or
push
mov
or
push
mov
push
and
test
xor
inc
pusha
add
and
add
sbb
adc
jp
repz
mov
push
imul
out
cltd
std
movsb
cmp
lds
pop
clc
cmp
pop
fs
mov
dec
stos
xchg
jns
sbb
adcb
aaa
into
leave
pop
inc
cld
je
push
aam
inc
sub
xor
lret
hlt
mov
out
mov
aad
push
xlat
and
test
sbb
movups
scas
lret
jne
into
mov
test
lods
insl
mov
test
mov
mov
aad
jecxz
out
xor
into
sbb
dec
lret
leave
sbb
lods
or
iret
fistl
test
insl
loopne
imull
sub
arpl
je
mov
xchg
test
lahf
into
sahf
fucomip
iret
out
stos
xchg
cmc
or
mov
xor
test
mov
sahf
jmp
xor
dec
pop
xor
in
je
add
ss
lods
lds
jbe
jo
sbb
push
pop
mov
xor
adc
inc
jle
cwtl
mov
ss
jmp
popa
enter
pop
scas
jae
lahf
push
hlt
js
mov
push
push
cmpsl
call
test
or
ljmp
xchg
rcrl
sahf
lods
aam
mov
dec
adc
and
or
inc
leave
loope
jmp
cmpsb
cmp
nop
lock
test
or
cltd
rcrl
scas
insl
cmp
mov
sti
add
xor
adc
jecxz
cmp
sbb
push
or
inc
mov
sub
mov
std
adcl
fcom
fwait
and
mov
mov
dec
pop
pop
rcl
shl
mov
pop
loopne
scas
xchg
cwtl
sub
sbbb
xchg
pop
aas
push
and
insl
add
out
pop
addr16
add
lret
clc
stos
sbb
call
jnp
sub
jnp
pop
add
mov
or
dec
push
hlt
aam
dec
inc
arpl
sarb
out
icebp
sub
and
dec
or
sub
std
fisttpll
jbe
incb
pop
cmc
fbstp
imul
in
fisttpl
jne
outsb
lret
or
dec
lahf
das
or
cs
dec
dec
xor
and
out
fwait
push
cmpsb
cmp
inc
or
pushf
push
sbb
lea
inc
mov
daa
sub
test
mov
push
mov
fiadds
xchg
sbb
push
mov
add
dec
lret
jne
stc
push
jmp
push
sbb
or
cmp
scas
xchg
out
bound
fsts
fmull
inc
ljmp
pop
mov
cmp
inc
ficomps
push
mov
into
inc
clc
pop
lock
sub
movsl
xor
and
aas
xchg
inc
pop
fstps
loopne
pop
fmuls
dec
mov
sub
mov
lock
pop
inc
push
xchg
dec
fucomip
mov
fldt
sar
xor
insl
jge
dec
stos
push
mov
lock
loope
imul
mov
jnp
jmp
mov
sub
sbb
jg
out
pop
fsubs
inc
call
xchg
das
inc
das
xchg
gs
dec
dec
sub
in
xor
xchg
sbbb
ret
mov
addr16
sbb
test
shrl
xchg
dec
in
dec
jp
stos
cwtl
imul
ja
test
rorl
lret
das
add
jle
push
mov
mov
xchg
out
test
jns
push
incl
fcompl
jne
ja
sub
mov
mov
or
sub
mov
xchg
mov
lods
inc
mov
or
push
push
insb
int3
mov
hlt
lds
stos
pop
out
sbb
mov
lds
mov
outsl
jnp
cmc
cmpb
outsb
scas
mov
pop
sarl
cmp
imul
divb
jl
add
mov
aas
and
mov
leave
xchg
push
scas
outsl
daa
sub
sbb
out
xor
cmp
xchg
adc
adc
jb
xchg
mov
cmpsb
filds
lea
and
fnsave
aas
loopne
inc
imul
cld
dec
pop
stos
pop
or
xchg
fsubr
dec
mov
lock
out
cmp
std
mov
cs
lods
out
mov
pop
stc
pusha
adc
divl
data16
ror
mov
sub
test
aas
loop
sbb
sub
js
in
push
out
mov
jae
fcmovnbe
test
add
test
push
test
lods
fs
ljmp
sarb
mov
adc
xchg
movsb
sbb
and
push
lret
fnstenv
or
in
lahf
into
xor
aad
mov
shrb
dec
loopne
push
jae
or
sub
xchg
es
shl
xlat
hlt
out
popa
mov
inc
lock
test
sub
lds
sarl
pop
dec
xlat
cmpsl
xor
mov
leave
ss
cli
push
in
pop
push
xchg
xor
das
mov
xor
add
or
int
insl
sbb
push
cmp
jbe
aas
test
lock
icebp
sbb
in
test
daa
lods
das
xchg
pusha
mov
jb
add
push
or
stos
leave
nop
push
mov
pushf
xor
pop
lods
outsl
fmull
pop
pop
xchg
pop
jbe
stc
inc
ja
pop
or
dec
imul
repz
xor
pop
fwait
xor
and
pop
dec
fstpt
mov
push
jge
mov
sub
add
fmull
sub
pop
aad
inc
divl
enter
mov
mov
fs
cs
aad
dec
dec
cmp
inc
jae
popl
pop
sub
push
or
int
xchg
out
inc
and
popa
clc
mov
pop
jg
ret
jns
mov
jns
out
stc
nop
in
mov
stc
push
subb
xchg
mov
jmp
xor
xchg
js
push
fisubrs
fcmovnu
mov
inc
std
int3
or
int3
nop
daa
push
fldt
loopne
sti
xchg
cmpsl
mov
sbb
cs
adc
xchg
lret
mov
cld
clc
or
add
or
mov
js
pusha
sarl
add
pop
adcb
fsubl
enter
stos
es
lods
mov
mov
ljmp
or
arpl
mov
inc
fwait
dec
xchg
cmp
loope
jb
mov
adc
lcall
cwtl
repz
push
fnstsw
cmpb
xchg
insb
fcmovb
insl
loopne
cwtl
inc
fs
int3
ss
int
add
mov
test
lret
mov
rorl
sub
xorps
pop
lcall
dec
fistps
sbb
daa
pop
and
mov
pusha
idivl
std
add
cmp
jle
lea
adc
inc
or
pop
fnsave
bound
rcr
jbe
push
push
mov
xchg
inc
push
std
les
or
stos
jmp
adc
mov
xchg
inc
cmp
mov
out
out
and
fnstsw
inc
pop
push
iret
pop
arpl
mov
testl
addr16
scas
ljmp
pushf
ja
arpl
xchg
inc
fucompp
cld
mov
jge
aaa
fsubrs
pop
xchg
xor
insl
pop
push
pushf
mov
inc
popa
stos
bound
mov
dec
add
loop
mov
fimuls
clc
sbb
push
adc
repz
xchg
xchg
push
pop
cmc
inc
test
jb
cmp
std
fwait
inc
fnstcw
ret
addr16
leave
push
rcrl
loop
push
enter
movsb
xor
adc
jle
bound
cwtl
jge
xor
incb
push
jbe
xchg
push
or
je
sub
xchg
or
jbe
outsb
loope
stos
test
mov
ja
mov
xchg
out
or
xchg
outsl
jbe
push
pop
test
mov
int3
pusha
lret
adcb
sti
mov
fs
xchg
add
stc
xor
pop
adc
pushf
jae
stos
push
cmp
pop
scas
push
idivl
shr
adc
push
inc
les
shlb
lea
dec
cmp
add
fidivrl
adc
pop
ljmp
mov
push
popf
pop
sbb
mov
loopne
xlat
fcmovne
test
je
hlt
pop
lret
adc
jns
fadd
dec
pusha
pop
adc
xchg
or
cmpsb
sahf
xor
fbstp
iret
pop
xchg
andb
shlb
add
push
adc
sbb
lock
push
sub
mov
or
mov
and
addr16
sarl
insl
loope
xchg
cmpsb
or
popf
aam
push
push
mov
gs
in
in
jecxz
push
push
mov
das
mov
js
push
stos
inc
adc
cmp
stos
push
into
dec
movsb
sti
add
xchg
fisubrs
and
insl
sti
push
dec
popa
jmp
mov
add
jnp
pop
add
cmpsb
imul
jle
cli
jge
cwtl
fisttpl
outsl
mov
lea
lods
xor
test
jns
lcall
mov
add
mov
fwait
cmpsl
xor
adc
out
lods
imul
test
mov
data16
sbb
aaa
in
rcrl
inc
inc
xor
fidivl
test
mov
adc
sahf
xor
shrl
push
repnz
pop
xchg
fstps
test
lret
fld
jg
cmp
jno
shlb
clc
inc
pop
or
cs
pop
cli
xchg
retw
mov
or
adc
aam
pop
xor
lea
mov
cltd
xchg
cs
outsb
or
repnz
add
cmp
mov
mov
bound
sub
push
cltd
push
cmp
sbb
daa
pushf
cli
pop
in
in
inc
xor
jbe
cs
pop
xchg
push
push
repnz
sahf
stos
and
mov
cmp
cmp
aas
jo
jns
push
cmp
js
adc
mov
flds
sub
outsl
mov
int3
cmp
lods
dec
lock
fsubrs
into
pop
cmpsl
push
cmp
sahf
jae
pop
mov
jp
jp
sbb
int3
lret
in
int3
mov
or
int
add
jge
mov
adc
add
jp
pop
cltd
fwait
lahf
or
scas
in
pop
sbb
mov
inc
aas
stos
bound
jle
pop
mov
sub
addb
lock
in
mov
mov
pusha
inc
js
sarb
pop
push
fiaddl
cmp
mov
shlb
decl
sub
dec
fcoms
sbb
mov
movsb
clc
push
inc
aad
mov
and
xchg
test
int3
frstor
jmp
sbb
adc
jns
xchg
addr16
xchg
add
xor
mov
pushf
jns
inc
pop
jmp
mov
ss
fdivrl
and
jmp
popf
jo
test
mov
add
movsb
or
insl
in
inc
sbb
aad
cld
add
xor
dec
int3
fsubl
mov
sti
int
adc
out
filds
pusha
stc
aaa
icebp
inc
insl
mov
sahf
popa
aas
loop
iret
movsl
ljmp
mov
jge
jbe
lds
test
filds
faddl
daa
ja
jno
scas
and
add
inc
xchg
dec
pop
movsl
mov
imul
push
aad
add
imul
in
xor
ret
in
lock
cmpsl
xchg
repz
ds
fs
arpl
pop
jb
push
mov
rcrl
pushf
mov
push
mov
pop
jnp
bnd
jge
add
adc
in
es
clc
dec
test
sbb
pop
pop
xchg
out
mov
insl
add
outsb
stc
and
mov
and
adcb
cltd
in
lret
pop
insl
arpl
lcall
imul
jo
mov
jns
dec
insb
push
mov
data16
mov
sub
inc
sbb
lcall
xchg
dec
xchg
test
add
in
or
push
mov
mov
fbstp
shlb
mov
into
or
push
outsl
mov
fdivrl
shll
pop
pop
cmp
push
sub
jns
dec
dec
mov
jo
shr
or
push
xor
cltd
push
rol
test
cwtl
daa
imull
stc
push
push
pop
rorl
xor
xlat
repz
lds
fidivrl
mov
mov
rcr
jnp
jo
das
mov
les
aas
aas
pop
jg
inc
loope
stos
lock
js
ljmp
popa
mov
sarb
roll
repnz
ja
fwait
hlt
inc
xchg
and
or
xlat
fwait
out
daa
xor
pop
mov
lcall
jne
xchg
jmp
or
inc
mov
xor
xor
pushf
ja
cmp
into
adc
dec
lods
imul
push
outsl
xor
push
jbe
fldcw
gs
frstor
or
out
cld
push
cmp
jbe
cmp
xchg
pop
inc
cwtl
bound
and
mov
stos
es
pusha
test
jl
out
out
cmpsl
fbstp
cli
aaa
fldcw
sub
cmp
lret
cld
xor
push
xchg
enter
ret
add
sbb
pop
addr16
xor
mov
jo
fwait
aas
sahf
mov
inc
mov
push
ja
pusha
stc
push
leave
movsb
repz
and
push
and
mov
ds
imul
lods
add
cmovno
js
pop
or
pop
hlt
dec
ret
testl
rcrb
push
xchg
and
inc
popa
fadds
fldl
adc
imul
in
jb
or
mov
and
pop
push
test
add
push
sub
mov
pop
lock
adc
jnp
divl
inc
test
xchg
sub
xchg
scas
ds
pop
aaa
iret
pop
mov
outsb
sub
dec
setae
adc
in
push
inc
scas
popf
cltd
dec
loop
cmpb
adc
mov
dec
pop
into
jg
sub
leave
ss
cmp
xlat
ficoml
push
add
push
fwait
xor
loope
jb
add
push
sub
jo
inc
fisttpll
or
lock
les
leave
ret
mov
sub
push
jecxz
mov
dec
call
jno
push
push
pop
dec
out
mov
ss
fnstcw
data16
xchg
sub
out
mov
sbb
js
jbe
xchg
call
jle
inc
lds
xchg
dec
fs
sbb
scas
mov
scas
cmpsb
mov
sbb
movsl
insl
loopne
push
stos
jmp
push
nop
daa
divl
movsl
fsubp
scas
xor
lret
in
mov
jg
mov
outsb
movsl
xchg
sahf
nop
cmpsb
in
push
cmp
xor
fdivl
call
xchg
stos
pop
xor
aad
ret
xor
pop
dec
leave
loopne
xor
sub
jae
popa
xor
mov
sub
xchg
lcall
leave
insb
dec
lods
cld
inc
push
sbb
fdiv
setae
mov
cmpsw
mov
lea
add
lock
push
ljmp
fdivrs
mov
aas
aam
mov
cmp
adc
rcr
and
paddusb
mov
xlat
push
ret
sbb
sub
mov
js
fstpt
iret
out
mov
sub
jge
repnz
fcoml
data16
mov
jnp
xor
test
in
fimull
cmpsb
in
cmp
dec
incb
cmp
push
fildl
gs
xor
jge
mov
dec
jo
cmp
shrl
aas
mov
inc
jl
aaa
nop
mov
sbb
rolb
andb
pop
sbb
mov
cmc
pop
xchg
push
mov
inc
jl
sub
and
addr16
xlat
adc
jg
ljmp
mov
cs
inc
jecxz
call
imul
jle
xchg
dec
roll
and
outsb
repnz
mov
or
insb
loope
jmp
rclb
sub
inc
inc
jno
push
in
call
filds
psubw
pcmpgtw
outsb
pop
push
jae
pop
clc
cmc
movsb
mov
mov
sti
push
popa
scas
sbb
mov
pop
jp
repz
or
fbstp
bound
or
dec
sub
gs
push
andl
jg
stos
and
mov
outsl
pop
stos
pop
cmp
jp
ficomps
mov
mov
fnstenv
fisttpl
scas
or
out
push
test
imulb
mov
sbbl
icebp
iret
and
scas
lea
xchg
sub
ret
dec
cld
jg
mov
jno
faddl
jmp
jne
or
aas
push
cmp
fwait
push
in
int3
dec
jne
cltd
mov
in
jmp
pushf
cmpsb
cmp
leave
stos
aaa
push
fucomp
cmp
inc
leave
into
pushf
jle
sbb
popf
lahf
and
rcrl
nop
pop
outsb
mov
jle
and
test
imul
mov
call
mov
adc
sbb
jecxz
out
popa
mov
inc
loop
push
stc
subb
push
add
incl
aaa
into
xor
pop
xchg
sahf
int3
imul
pop
ss
std
lods
lds
mov
cmp
movsb
sbb
hlt
test
sub
or
dec
mov
push
or
pop
xchg
outsl
cmpsl
bound
dec
shl
cmpsb
cmc
test
ja
xchg
cmpsb
jae
sub
sub
pusha
sbb
xchg
mov
cmp
and
jle
adc
add
popa
adc
pop
jle
aas
lret
cmp
jmp
rorb
and
adc
testl
mov
push
popf
dec
out
pop
lahf
pop
jno
movsb
shrb
pop
mov
lcall
pop
sub
xchg
mov
xchg
inc
xchg
outsb
mov
dec
push
sbb
cltd
addr16
inc
cltd
mov
cmpsb
sti
push
bound
jmp
movsl
lds
mov
and
mov
cmp
xchg
cmp
dec
pop
dec
push
nop
inc
les
xchg
aad
cmp
mov
cmp
jle
mov
mov
inc
cmp
mov
mov
movsb
dec
inc
jne
insl
call
jb
or
jae
loopne
pop
mov
lcall
xor
repz
cmpsl
rorl
or
push
std
jae
das
js
out
sub
lret
inc
ja
ja
subl
mov
addr16
out
or
mov
fucomip
inc
pushl
gs
jb
mov
sub
icebp
loope
jecxz
inc
pop
pop
mov
and
dec
sub
xchg
xor
popf
jge
outsl
daa
pop
lcall
xor
add
jl
xor
jmp
mov
push
fucom
add
lcall
test
setns
addps
testl
outsb
std
loope
add
xchg
sub
cmp
lahf
xor
shr
popf
dec
fdivrs
xchg
shr
out
mov
test
xchg
into
and
fsubs
out
jecxz
and
test
adc
sahf
pop
divl
or
dec
loop
sub
fwait
add
cmp
sub
aas
inc
push
repnz
mov
repnz
and
rol
inc
mov
and
mov
or
mov
scas
and
cld
sarl
add
sbb
adc
mov
lahf
call
jae
jae
and
int
xchg
leave
mov
sub
pop
and
push
and
mov
xor
cmp
test
sub
cltd
mov
add
cmp
testl
and
shl
stos
ss
mov
xchg
ret
movups
sbb
mov
ljmp
sbb
out
lods
jae
test
das
rorb
dec
pop
pop
imul
lods
cltd
es
push
sbb
insb
add
push
fisttpl
xchg
gs
imul
cmp
jbe
push
aad
push
adc
frstor
mov
es
les
jp
jmp
in
inc
cmp
rcl
test
sub
mov
add
test
sbb
ds
ljmp
jno
outsl
ja
mov
inc
add
lret
push
push
sub
mov
in
cmp
imul
js
decb
xchg
xor
out
subb
sbb
sbb
mov
add
pusha
sub
repz
push
addl
aas
fwait
push
and
xchg
xor
fidivrl
ja
inc
add
lock
add
sbb
cmpsb
mov
pop
je
roll
fisubl
sbb
xor
pop
mov
jae
fstpt
aas
push
mov
loope
pop
add
cld
push
push
sbb
outsl
jo
outsb
movsl
jns
imul
dec
out
stos
pusha
lock
and
inc
inc
adc
sbb
in
mov
adc
sti
andb
cmc
mov
pop
scas
and
lods
pushl
xchg
inc
pop
scas
inc
mov
bnd
popa
pusha
ret
pcmpgtd
scas
and
mov
adc
mov
dec
loopne
out
js
push
add
mov
xor
sbb
cs
loope
add
add
stos
cmp
in
cmp
mov
subb
add
xor
ret
sub
mov
mov
jae
int
stos
xor
or
scas
inc
les
dec
push
xor
inc
xchg
push
sbb
inc
adc
call
sbb
xlat
mov
fdivl
ss
mov
cli
adc
sub
inc
jecxz
or
cmp
rcll
pop
xchg
in
xor
inc
pop
sub
cmpsb
jge
aaa
xchg
mov
inc
out
pop
int
push
jb
xor
push
jns
mov
outsl
push
fucomi
nop
shr
rorl
insb
mov
or
and
bound
cmp
push
and
mov
insb
bound
roll
push
mov
sub
js
lcall
inc
mov
dec
cmp
loopne
je
sub
adc
push
int3
orl
push
sysret
push
sarl
insb
jmp
pop
cld
xchg
push
push
notb
mov
lds
mov
jns
inc
sub
sbb
movsl
push
test
dec
shll
mov
or
xchg
inc
mov
fninit
push
push
ljmp
cmp
enter
lahf
in
pop
cwtl
aaa
shlb
mov
clc
jge
shr
popf
sub
or
ror
xchg
xchg
aam
jnp
adc
mov
xor
repz
cmp
sti
pop
sbbl
or
sub
push
and
lahf
std
xchg
sbb
clc
add
icebp
mov
int
jae
or
jb
arpl
xor
lds
push
mov
lods
pop
push
jle
xchg
shlb
leave
sbb
dec
jl
insb
push
shl
push
ret
sbb
dec
enter
outsl
loop
sub
lahf
repnz
fnstsw
cld
push
jmp
daa
mov
push
movsl
loope
enter
subl
and
fs
adc
add
push
mov
pop
jl
push
cs
inc
xlat
jo
ret
xor
lock
adc
or
xadd
pop
lds
mov
jb
subl
push
ds
fimuls
cmp
and
in
cwtl
dec
dec
pop
pop
js
jl
ds
or
mov
gs
push
jl
adc
cmp
sub
jb
stos
mov
cli
cmp
nop
outsb
push
push
imul
xchg
stos
push
mov
imul
sub
sub
imul
jl
add
mov
lahf
push
mov
jbe
fnstsw
loope
insb
pop
sbb
add
ja
push
or
push
mov
push
arpl
lret
push
iret
push
das
inc
jae
or
xor
fwait
jb
push
inc
or
inc
mov
repz
and
cmc
out
cmp
lahf
orl
adc
push
pop
pop
pop
lahf
andl
int3
loopne
and
addr16
sub
mov
mov
aas
and
mov
and
xor
push
mov
or
ljmp
sub
cld
xchg
arpl
out
xchg
dec
fcomps
lods
or
dec
pusha
repnz
mov
jecxz
flds
adcb
xchg
jmp
int3
into
cmp
in
xor
inc
push
lret
cmc
pop
jb
dec
pop
jecxz
lcall
and
jne
cltd
or
sbb
pusha
pop
mov
and
add
cmp
in
in
push
bswap
or
and
mov
cwtl
dec
mov
stc
shrb
ljmp
jle
xor
and
mov
push
sbb
xor
inc
mov
mov
mov
divl
paddsb
lea
jbe
lret
incb
pop
mov
inc
cli
lcall
inc
push
out
adc
xor
mov
mov
or
ret
dec
sbb
popa
int
sbb
or
stos
jo
lret
inc
gs
popa
cmp
sub
je
mov
dec
inc
bound
lods
mov
insl
mov
rcrl
iret
ja
mov
scas
or
sbb
fsubrs
sub
mov
aas
dec
outsb
cmp
xchg
lods
add
sub
sbbl
in
psubw
movsl
lret
fidivrs
add
loope
push
sub
sbb
pop
insb
add
add
fdivl
mov
sti
inc
xchg
sub
or
rolb
fs
cld
inc
adc
mov
xchg
sub
mov
push
cmp
mov
jl
push
xlat
dec
jmp
xchg
decl
lret
mov
loope
repz
pusha
pop
scas
lea
cli
rorl
ret
iret
xchg
fsubrs
leave
add
mulb
jge
scas
push
scas
pop
ffree
cltd
mov
insb
mov
sbb
adc
cmp
stc
notl
add
jne
gs
cwtl
and
xchg
fnstenv
pushf
jecxz
clc
js
icebp
sub
inc
fisttpl
test
adc
dec
mov
xchg
xor
inc
ss
push
popa
iret
xor
adc
lea
cs
mov
out
jnp
test
push
and
mov
lret
add
push
mov
push
popf
into
cwtl
iret
out
mov
lea
in
mov
dec
dec
scas
cmc
div
inc
mov
adc
clc
mov
mov
add
leave
out
shr
addr16
and
mov
flds
xor
inc
sarb
inc
jmp
addr16
insl
or
addb
cmp
push
add
les
sbb
xlat
sbb
lea
icebp
pushf
mov
daa
sahf
cld
jns
push
fstps
xor
shlb
jb
in
rcll
jl
push
dec
sti
jmp
jle
and
push
out
and
inc
jbe
lock
stc
repnz
cmpb
test
adc
jge
push
mov
test
jge
es
add
cld
adc
push
imul
cs
outsb
daa
popf
push
xchg
inc
xchg
mov
incb
jp
xor
mov
sub
cmp
push
outsl
xchg
and
mov
jb
dec
xor
and
push
inc
nop
push
clc
int
jb
icebp
stc
or
xchg
fucomp
mov
int3
mov
sbb
add
dec
inc
cmp
outsb
or
sub
dec
pop
xor
dec
inc
xor
inc
es
pop
sub
scas
cwtl
or
sbb
rcrl
loopne
push
sbb
mov
scas
bound
lret
cli
adc
sub
in
mov
pop
add
lahf
inc
push
ljmp
call
mov
pop
stos
pop
cli
xchg
hlt
fldl
aad
jno
push
iret
popa
daa
cmp
xor
fwait
add
loopne
out
in
int
xor
imul
and
arpl
or
icebp
adc
aad
fs
push
int
sub
icebp
inc
push
and
xlat
imul
jecxz
pop
jg
mov
xor
sub
mov
jae
test
test
out
in
mov
cwtl
xor
jnp
ret
lret
movsb
std
gs
out
xchg
sub
lcall
pop
xchg
adc
dec
int
xor
jne
xchg
and
mov
filds
or
add
sub
scas
in
popf
xor
shl
mov
pop
push
xor
lods
lds
test
sarb
aaa
les
leave
dec
cmp
xor
mov
stc
popa
sahf
sbb
sti
xchg
fwait
out
xchg
dec
xor
sub
pop
jmp
int3
lret
andl
jle
mov
rorb
and
pop
jnp
add
test
stos
lds
out
mov
sbb
cmp
pop
sub
in
lahf
mov
push
mov
push
jb
test
xchg
and
or
mov
test
add
xchg
lcall
or
or
or
imul
es
lret
pop
scas
adc
test
int
jg
lea
pop
jb
mov
test
inc
lea
adc
lret
fisubl
push
and
mov
fiadds
js
jbe
jl
aam
cmpsb
or
xchg
scas
xor
sbb
mov
fimull
and
dec
inc
pop
xor
mov
mov
imul
mov
adc
jle
push
negl
mov
xchg
pop
inc
mov
les
or
arpl
rcl
inc
inc
shrb
pop
jl
lds
cmc
cmp
push
in
fwait
inc
inc
pop
mov
aad
mov
mov
push
cmp
shrl
xchg
xor
mov
cli
js
ret
dec
mov
xchg
adc
call
and
inc
mov
bound
das
cmp
movb
sbb
jg
push
mov
std
test
push
mov
xor
sbb
inc
fisubl
imul
jo
mov
clc
xchg
cmp
arpl
adc
sbb
pop
inc
popa
mov
mov
dec
addl
xchg
mov
mov
inc
inc
lods
xchg
mov
arpl
xchg
nop
xchg
adc
sub
push
fcmovnbe
dec
hlt
jmp
lds
ljmp
pushf
repz
mov
notl
ss
in
fchs
or
jne
push
dec
mov
jecxz
insb
sahf
clc
ljmp
sbb
inc
sbb
jg
es
add
stc
and
sar
jnp
xor
push
rcrl
cmp
data16
xor
hlt
icebp
fiadds
mov
inc
sarb
cmp
adc
sub
mov
mov
jl
xorb
out
dec
aaa
or
icebp
adc
call
setge
or
hlt
aaa
loope
in
dec
push
xchg
mov
push
xchg
loope
fwait
adc
pop
cmc
mov
clc
cmpsb
call
push
xor
dec
push
xchg
jne
add
rorb
idivl
dec
iret
mov
push
lods
sbb
cmp
jle
pop
sub
lcall
jns
enter
shll
push
outsl
sbb
je
bound
xchg
aad
sub
add
cmpb
push
stos
inc
mov
ds
fs
cmp
icebp
sub
pop
imul
roll
sub
imul
dec
lahf
mov
xchg
in
lahf
test
mov
out
daa
leave
push
sbb
clc
sub
dec
andb
fidivrl
mov
sub
inc
push
lcall
in
inc
lods
aaa
je
jmp
or
cmp
testl
test
inc
push
add
orl
stos
sub
cmp
pop
jno
or
enter
inc
jge
dec
jp
aaa
lods
gs
addr16
bound
lods
push
adc
push
adc
mov
out
shll
dec
ucomiss
mov
mov
subl
push
jo
les
sbb
dec
or
cs
push
test
jnp
lahf
leave
pop
lock
sbbl
lret
dec
sub
inc
dec
mov
pop
mov
sbb
test
ja
stos
adc
xlat
sub
sub
mov
scas
pop
scas
inc
inc
add
insl
jb
lret
lret
in
inc
mov
jno
movsb
jmp
xchg
jns
jmp
cmpsl
cmp
pop
sahf
or
das
jo
sub
sbb
repz
inc
and
xor
test
addb
repnz
int
fistl
add
lret
or
movsl
sub
lret
jmp
fldl2t
mov
xor
sub
dec
stos
push
in
inc
repz
mov
pop
mov
and
pop
loope
pop
push
mov
stos
sbb
xor
and
dec
out
test
je
sub
scas
sbb
call
nop
jg
and
push
dec
hlt
push
dec
sub
push
push
out
pop
or
lahf
xor
sub
mov
cmc
sarl
call
cmc
outsl
fstl
jae
xorb
shlb
jp
out
mov
loopne
xchg
xchg
idivb
pusha
mov
pop
jmp
pop
icebp
or
pop
int3
sub
fcoms
or
insl
pop
dec
ja
arpl
jnp
inc
stos
loopne
mov
cmp
xchg
add
decl
mov
push
sub
or
stc
out
sub
jbe
xchg
xorb
push
adc
xchg
pop
ds
pusha
outsb
js,pt
aam
cmp
dec
in
int
add
push
jge
pop
leave
or
cmp
xor
adc
adc
in
inc
pop
aaa
xchg
outsl
cmp
mov
jmp
insl
sbb
mov
jmp
incl
mov
xor
dec
in
pusha
cmp
stos
sub
pop
test
cmp
sahf
mov
xchg
arpl
xor
adc
or
push
lea
pop
loope
mov
sub
mov
sbb
ret
rcrl
mov
daa
mov
pop
outsl
sbb
ret
das
ret
and
xor
cmp
or
incb
jmp
push
js
jecxz
je
dec
sub
jbe
outsb
cmc
cmp
mov
shl
frstor
cli
js
pop
loop
mov
pop
and
dec
scas
pop
popa
stos
clc
dec
sbb
push
fwait
sub
cmp
arpl
bound
scas
push
fisubl
shll
fdivr
out
pop
mov
lods
cld
cli
jge
push
arpl
popf
movsl
fiaddl
mov
pusha
imul
add
sub
fcomps
jb
inc
xchg
or
mov
sti
jnp
jp
popa
cmp
dec
jmp
pop
movsb
and
ds
mov
fisttpll
lahf
fisubl
nop
mov
cmp
xor
cli
cmp
fs
mov
fidivl
mov
dec
loop
push
scas
add
jmp
dec
inc
lods
in
loope
xor
fpatan
push
fdivrl
mov
inc
cmp
insl
fs
jne
hlt
stc
adc
rep
mov
and
and
cmp
test
mov
repz
jge
sbb
outsb
sti
testl
mov
and
into
dec
pop
cmp
mov
stos
pop
mov
fwait
mov
cmp
leave
sub
sub
dec
mov
ljmp
mov
popl
in
les
mov
cltd
xor
mov
pop
data16
sarb
or
fsubrs
cmc
jle
jmp
gs
popf
lock
xchg
sbb
add
push
sbb
sub
or
pop
mov
clc
cltd
enter
bound
in
stc
push
cwtl
add
inc
lcall
icebp
cmp
pop
shll
arpl
into
rol
jl
gs
xchg
aaa
into
ret
cli
sbb
pushf
adc
and
ljmp
es
lock
or
ja
mov
hlt
std
push
sbb
push
in
scas
je
stc
adc
fidivs
sub
jnp
dec
mov
inc
cs
jnp
xchg
xor
pop
je
popa
insb
sub
mov
cs
in
push
sti
add
jge
pop
and
cmpsl
out
cmove
xchg
rcll
enter
leave
mov
mov
fbstp
push
out
mov
dec
ljmp
pop
flds
adc
ffree
jmp
pop
loope
fnstenv
popf
sub
sbb
lret
mov
lahf
es
pop
mov
jp
cmp
xchg
sub
and
mov
mov
or
push
fdivr
out
cmpsl
ss
cmp
mov
mov
sub
sub
iret
or
sbbb
xchg
lret
mov
cmpsb
and
mov
adc
mov
mov
xor
sub
dec
loop
not
pusha
mov
out
adc
xchg
add
push
mov
dec
out
in
ret
fcompl
and
xor
fs
iret
pop
and
outsl
add
mov
cmpsl
xor
and
out
xor
xchg
jnp
shrb
arpl
sbb
sub
add
cmc
cmc
cld
inc
stos
shl
ret
or
addr16
mov
push
xchg
ficoms
in
push
cmp
inc
mov
jo
pop
add
push
movb
xchg
sub
ds
dec
xlat
jns
std
xchg
sahf
imul
andb
adc
mov
adc
rorl
mov
mov
dec
add
pop
aaa
into
sti
xor
mov
xchg
lods
xchg
cmc
imul
adcl
data16
imull
mov
bswap
adc
mov
ja
inc
mov
jb
jle
push
mov
xchg
inc
lods
movsb
cmp
xchg
cli
push
lret
inc
inc
mov
dec
ret
push
inc
mov
shl
mov
pop
push
mov
popf
adc
lret
clc
cmp
pop
insl
fstpl
jle
sub
mov
mov
clc
mov
testb
adc
adc
repz
inc
or
loope
and
mov
mov
test
out
mov
addl
mov
or
add
int
and
test
clc
orb
stc
shrl
xor
pop
dec
imul
insb
insl
imul
dec
push
stos
pusha
xor
jns
or
testl
ljmp
adcb
aas
out
aas
xor
test
lods
pop
lods
lods
dec
int
ljmp
lret
test
sbb
mov
cmp
jl
pusha
adc
addr16
lock
imul
lahf
xor
ret
push
and
in
xor
fs
sbbl
xchg
fistpl
or
call
cmp
in
mov
cmpb
mov
adc
cmpb
fsubrs
pop
rorb
cld
popf
mov
xor
popa
dec
jg
pop
stos
sbbl
and
movsb
sbb
push
stos
sub
mov
int3
xor
xor
sbb
xchg
xor
sbb
mov
add
xor
sub
add
cmpsl
mov
arpl
inc
icebp
data16
and
and
hlt
std
or
pop
int3
popa
clc
std
jle
adc
in
pushf
pop
push
scas
clc
loopne
cmp
adc
xchg
sbb
into
lcall
cltd
sub
jne
xchg
mov
mov
aam
stos
push
pop
imul
jb
mov
push
cmpsl
mov
pop
pop
rcrl
mov
dec
repnz
mov
push
imul
lea
or
jl
xchg
xchg
repnz
and
insl
or
push
cltd
mov
int
stos
arpl
sub
aas
daa
inc
test
jecxz
test
sbb
cmp
sahf
in
negb
xchg
dec
inc
out
test
cwtl
stos
push
jp
mov
xchg
sti
dec
sbb
push
out
pop
loop
add
push
pushf
out
lar
bound
xchg
lea
sahf
push
mov
mulb
push
arpl
or
dec
lahf
sub
xchg
adcb
shlb
jl
inc
cmpsl
loope
insb
mov
test
test
ss
inc
xchg
add
js
xchg
mov
rcrl
mov
sahf
dec
jg
imul
jo
out
inc
roll
and
std
or
cmp
enter
ficomps
test
pop
xor
xorb
mov
cmc
xchg
fldl
addl
and
nop
adc
or
adc
inc
ret
rcrb
push
cs
loop
popa
cmp
mov
adc
cmp
sbbb
mov
xor
push
xchg
jp
sub
mov
push
xchg
sub
fcomps
or
sbb
dec
inc
xor
arpl
mov
inc
loope
xor
and
xchg
gs
jle
jle
or
sbb
rcrl
rcl
pop
jmp
jle
sbb
lahf
and
sbb
jbe
xor
pop
scas
inc
mov
dec
fbstp
fdiv
adc
sti
outsl
sbb
lret
fidivl
je
es
in
rol
sub
mov
mov
push
push
lcall
subl
jno
scas
ljmp
movsb
in
cmc
dec
xchg
sub
cmp
into
pop
fistl
jle
mov
sub
jmp
xchg
jb
cwtl
xchg
push
sbb
mov
je
or
and
mov
jbe
adc
enter
cs
stos
xchg
push
lret
mov
int
cmpsb
sub
fidivrl
data16
dec
lock
in
add
dec
mov
jg
lret
fldlg2
mov
lock
sub
pop
mov
sbb
or
mov
push
add
inc
dec
push
and
std
xor
pop
loope
test
or
je
xlat
push
jb
pop
shl
ret
repnz
and
popa
jg
lret
loope
std
jge
adc
sbbl
repnz
mov
repz
icebp
cmc
pop
dec
in
and
in
or
fsubs
dec
lock
adc
js
cs
icebp
test
inc
mov
arpl
rcrl
sbb
cmp
pop
shlb
push
out
sub
dec
jne
test
pusha
pop
push
jbe
aas
test
adc
pop
mov
jo
out
inc
fcompl
iret
push
xlat
in
loop
add
adc
push
fmul
data16
mov
dec
pop
sub
or
mov
push
popf
popa
mov
xchg
inc
nop
push
inc
outsb
push
in
mov
insb
fwait
mov
pop
pop
aam
adc
not
mov
movsb
call
popl
lea
testl
sub
push
dec
jecxz
outsl
out
shrb
jg
inc
leave
xor
mov
add
xlat
sahf
or
xchg
pop
sbb
push
and
pop
repz
ret
inc
leave
xor
jp
subb
sub
shrl
movsl
sti
mov
cltd
daa
push
cmpsl
not
out
sub
xchg
roll
inc
fstps
xlat
insb
dec
cmp
outsb
call
jae
pusha
sub
aam
dec
in
push
lcall
fdivrl
push
cmp
push
aas
into
push
jp
int3
js
fiadds
sbb
xor
sbb
xor
cmp
pushf
imul
pushf
mov
pop
pop
fildll
sub
sbb
enter
jmp
bound
xor
aaa
popa
hlt
and
js
sub
sbbl
out
inc
inc
cmpsb
sahf
cmp
stos
in
push
mov
loopne
or
or
mov
loopne
loopne
test
fistpll
mov
cmp
popa
sub
jge
adcb
shlb
loopne
adc
pop
movsl
mov
mov
stos
mov
dec
add
cmpsl
fs
popa
sahf
dec
adc
pop
fists
push
mov
xor
xchg
test
aad
or
xlat
jg
xchg
les
pop
outsl
dec
pushf
xchg
shll
loope
loope
push
mov
jmp
or
cmpsl
cmp
and
out
jne
nop
jnp
xor
adc
mov
fisttpl
xchg
inc
mov
xlat
cli
iret
shll
stos
loop
in
lret
dec
cmpsl
js
ljmp
js
mov
lahf
adc
and
inc
fwait
lods
jbe
lea
jae
xlat
push
mov
jecxz
push
lea
sbb
imul
lahf
dec
dec
call
adc
leave
outsl
ds
movsl
outsb
in
ret
jnp
mov
xlat
pushl
or
jo
lret
sub
and
mov
mov
adc
xchg
mov
jecxz
mov
repz
aaa
pop
shl
xor
jno
fldpi
std
or
cmp
mov
and
and
xor
dec
out
jb
and
xchg
jno
ljmp
ret
xor
aaa
ja
inc
into
dec
adc
jbe
rcll
dec
scas
jae
inc
pop
adc
or
ja
jg
inc
dec
sbb
shrb
xor
jmp
fcomip
mov
sub
out
test
ficoms
push
ljmp
aaa
inc
xchg
out
negb
or
rcrl
xchg
cmp
clc
pop
out
imul
mov
xor
mov
mov
mov
or
mov
pop
adc
out
ret
cmpsb
pop
jp
sbb
inc
adc
shl
xor
dec
dec
sahf
or
rcrl
mov
shr
fucomip
pop
mov
je
lret
push
out
xchg
fmuls
nop
daa
imul
xchg
sub
adc
mov
cmp
push
jo
jmp
insb
push
ja
movsb
rol
pop
add
std
or
jb
xchg
jmp
push
and
cmpsb
and
aaa
jns
rorl
adc
stos
push
sub
enter
loop
sahf
imull
ret
mov
adc
out
imul
int
jmp
ja
enter
push
cmc
mov
out
stos
sbb
xchg
jae
ljmp
adc
xor
dec
repz
jb
adc
or
pop
and
fs
repnz
popa
jmp
push
cmpsb
movsl
test
sub
xchg
pop
aaa
adc
stc
sub
xchg
xchg
push
insb
jae
dec
fdecstp
sbb
ret
push
add
mov
aaa
test
mov
xchg
xchg
out
sbb
inc
inc
std
cmp
push
or
jo
lods
ldmxcsr
into
mov
push
cld
push
in
sub
outsb
mov
sbb
xchg
dec
xor
js
mov
sbb
push
sub
add
dec
hlt
andl
or
data16
push
incl
xchg
lods
sbbb
xor
fwait
sti
mov
push
fwait
xchg
ds
dec
mulb
aad
add
mov
push
clc
and
mov
pop
jb
push
xlat
outsb
inc
leave
jns
sti
jns
lret
ljmp
mov
cs
jg
ja
and
je
push
dec
lret
xchg
jge
jne
xor
cmpsl
aas
ret
push
xchg
cli
xchg
jecxz
aas
pushf
loope
stc
dec
frstor
xlat
sbb
pop
cmpsb
fistpll
push
sub
dec
lods
jg
jne
popf
sub
inc
test
or
cli
je
fisubl
mov
sbb
adc
pop
aaa
andb
push
sbbl
and
cli
push
or
adc
subl
sahf
lea
test
pop
jecxz
add
ss
stos
push
cs
inc
jnp
mov
in
lods
inc
gs
dec
pop
and
int3
cmp
es
xor
ret
imul
cmpsl
addb
in
pusha
enter
movsl
jb
mov
push
inc
lcall
lea
ja
fnsave
inc
scas
aam
xchg
out
add
xor
cld
test
test
mov
rcl
lcall
cli
pcmpeqb
mov
loop
movsb
inc
inc
and
mov
xor
xchg
or
cmpl
outsl
cwtl
sahf
jbe
mov
push
push
push
nop
out
jg
and
arpl
push
sbb
rolb
sti
mov
and
lret
lret
or
dec
push
popa
outsl
dec
jp
lcallw
fisttpll
lret
cld
sub
lea
ja
push
call
orl
out
mov
shl
cld
xchg
pop
ja
xor
xchg
mov
ljmp
xchg
jne
jecxz
scas
enter
fdivrl
flds
aad
psrad
out
xchg
call
or
movb
mov
push
xchg
sti
sub
shlb
daa
pop
pop
cmp
xlat
mov
sarl
or
mov
lods
jl
mov
fistl
or
inc
frndint
orl
dec
push
cwtl
and
jl
lea
pop
xchg
dec
stos
pusha
stos
push
aad
inc
nop
pushw
xor
mov
ret
jbe
xchg
aad
subb
adc
sbb
xor
fsubr
stc
sub
jo
adc
inc
lods
add
ret
sub
sub
aad
pop
repnz
idivb
insb
cmp
test
push
bound
scas
arpl
loopne
in
adc
cmp
movsb
cmp
cld
std
fsubs
jg
jb
insl
mov
lahf
pop
jl
cmp
ds
dec
in
add
cmc
cmp
push
pop
inc
jecxz
dec
push
dec
xor
mov
dec
int
addr16
ljmp
das
outsl
ds
add
mov
jle
push
jb
push
jnp
jnp
inc
push
lret
inc
jno
xor
xchg
scas
mov
cmp
lcall
in
adcl
or
test
mov
sarl
scas
hlt
cmp
ljmp
hlt
mov
mov
and
aad
mov
js
fnstenv
cmc
enter
mov
and
inc
in
aam
add
es
and
sahf
or
sti
inc
add
or
mov
lcall
cwtl
inc
out
in
lahf
cld
outsl
or
mov
pop
femms
int3
jae
lods
loopne
mov
sbb
inc
inc
cmpxchg
xor
movsl
sbb
aam
lahf
adc
xchg
dec
mov
mov
shlb
aam
xchg
add
outsb
movb
cwtl
dec
cmpsl
mov
dec
cmpsb
xchg
movups
mov
pushf
or
mov
inc
cmpsb
jo
cmpsb
add
shll
data16
sub
repz
jno
or
inc
mov
jae
icebp
outsl
dec
add
or
or
mov
xor
lock
fimuls
stos
and
mov
xchg
data16
pop
insl
add
dec
gs
scas
ss
xchg
inc
test
dec
pop
push
inc
mov
repz
je
or
rol
dec
enter
cs
pop
frstor
lahf
jb
imul
imulb
xchg
pop
sub
movsl
pushf
dec
add
add
xchg
dec
add
adc
aad
sbb
movsl
cmp
xlat
inc
aas
ret
icebp
or
jno
inc
sbb
loop
xchg
sub
adc
mov
stos
cld
inc
scas
and
cltd
inc
mov
jmp
gs
int
push
mov
dec
jecxz
jl
lret
push
and
mov
into
mov
mov
add
je
mov
test
fdivs
or
dec
in
jge
sub
nop
dec
mov
mov
cmp
in
jl
fwait
dec
sbb
jge
fwait
push
and
mov
jne
in
loop
mov
lcall
and
xor
lcall
cmpsb
cmp
rorb
mov
mov
das
jae
in
loop
add
shrl
adc
stos
push
jecxz
das
rcl
pop
xor
sahf
rorb
and
leave
mov
out
mov
dec
pop
pushf
lods
aaa
push
out
fldenv
xchg
xchg
push
pushf
clc
enter
mov
roll
push
push
jb
add
fwait
decb
gs
sahf
dec
rcr
cmpsb
mov
or
push
je
mov
mov
sub
mov
mov
lds
pop
cmp
cmp
fldt
xchg
pop
lret
push
adc
pop
outsb
add
and
cmpsl
ja
enter
cs
cmp
cmp
and
xor
fistpll
mov
or
or
and
cmp
cltd
testl
mov
insl
ja
test
adc
dec
mov
sub
ds
sub
test
cmp
sti
pop
inc
in
and
sti
pop
fs
or
sbb
jle
xchg
sub
mov
fucomi
jle
pop
movsl
push
jl
mov
mov
adc
and
fcmovu
xor
push
cmpsl
and
sbb
push
out
push
shr
je
adc
dec
rcll
cwtl
js
lock
jle
mov
add
iret
fstps
adc
or
sub
jo
lret
xchg
jecxz
call
scas
fcoms
pop
jbe
pop
xor
dec
sub
sbb
les
pop
mov
xchg
jecxz,pt
scas
in
test
ror
lods
ljmp
inc
fadd
push
sub
daa
lret
sub
add
push
fcmovb
xchg
mov
mov
bound
lods
xchg
jno
out
lock
mov
dec
or
out
sahf
xor
les
ss
mov
mov
pop
lret
fdivl
jnp
pop
lods
mov
jne
test
js
ret
mull
dec
lods
mov
or
les
popf
cmp
stc
mov
fbstp
lods
ret
hlt
xor
out
in
test
mov
lds
test
out
fcoms
xchg
fstpt
sahf
jl
pop
je,pt
jle
loop
inc
dec
push
sub
je
or
das
jl
test
shll
icebp
or
jo
adc
lea
jbe
aam
adc
dec
mov
aad
cld
sub
fwait
lods
pop
scas
push
sbb
nop
stc
fidivrs
cwtl
pop
int3
and
imul
fdivrl
add
std
mov
cmp
fidivrl
aaa
push
fisubs
add
jmp
fdivl
fidivs
lret
scas
mov
sub
inc
data16
mov
jne
pop
inc
sti
dec
out
cld
xchg
and
xchg
dec
inc
sbb
or
cmp
or
test
xchg
mov
xlat
dec
adc
jbe
cmp
imul
pop
sbb
push
lds
jmp
inc
fstpl
push
add
mov
push
push
or
mov
sub
jne
je
data16
in
clc
mov
and
pop
out
jl
rcrb
inc
xor
rcrl
mov
mov
bound
fcom
sbb
std
loopne
jnp
xchg
xchg
mov
aad
aam
clc
jbe
scas
imul
dec
leave
and
push
sub
es
push
mov
je
sti
andb
pusha
rcrb
mov
lret
adc
int3
inc
pop
pusha
fistl
push
insl
sbb
mov
push
or
sbb
cmpsb
je
call
enter
sub
pop
call
fisubrl
dec
lret
push
in
sub
leave
test
sti
stos
rcrl
cmp
adc
and
add
out
fcoms
push
loop
pop
test
test
and
pusha
in
inc
ficompl
sub
cmp
xor
or
mov
int3
nop
daa
cli
dec
xor
in
mov
mov
pop
xor
cmp
sub
xor
mov
dec
sub
loop
adc
out
sbb
out
or
mov
mov
out
jne
mov
gs
fdivrs
in
mov
and
fcompl
xor
or
xchg
cmp
push
out
lretw
mov
fcoml
das
add
aad
or
mov
pop
xor
fcmovnu
enter
inc
cld
or
push
fs
scas
call
mov
icebp
aam
std
mov
mov
adc
scas
mov
movsb
es
pusha
shrl
sbb
es
xor
push
push
in
inc
out
xchg
popf
divb
add
cld
hlt
mov
adc
stos
jmp
adc
loopne,pt
cmp
in
push
push
and
sub
and
xchg
cmpsb
stos
cmp
pop
and
dec
dec
pop
and
les
aas
aaa
stos
lods
cmp
xor
rolb
test
cmp
or
aas
sarb
mov
mov
clc
fadd
push
add
movsl
shlb
out
cwtl
dec
pop
cmpsb
stos
cmp
fstpt
cmp
push
adcb
jbe
mov
fcoml
data16
je
mov
sti
sbb
mov
xchg
insb
fsubs
cmp
inc
clc
je
inc
addr16
cltd
popa
das
pop
pop
xor
xchg
push
cmp
popa
gs
mov
mov
stc
dec
pop
fdivrl
shll
dec
adc
loope
push
xor
mov
andl
cltd
xlat
sbb
aad
mov
pop
jge
in
mov
fstpt
or
or
scas
mov
push
out
out
push
loopne
and
mov
stos
adc
pop
xchg
mov
mov
adc
pushf
or
xchg
test
pop
dec
pop
icebp
enter
cmpsl
cmp
xor
lret
xchg
icebp
dec
dec
fidivs
mov
clc
shlb
pop
jg
jb
mov
stos
andl
rcrb
icebp
jnp
aaa
dec
pop
dec
xchg
xchg
cmpsb
adcl
aaa
dec
pop
movsb
in
cwtl
and
mov
lods
wbinvd
push
aas
jae
cmpsl
subl
add
push
and
inc
add
lahf
frstor
sbbb
push
cmp
rcl
out
mov
mov
push
lcall
cwtl
cmp
mov
in
fdivs
or
idivb
sbb
rcrb
hlt
clc
pop
sub
add
adc
lods
test
das
mov
fisttpl
sbb
push
cmpsb
rolb
test
lock
sub
cmp
std
hlt
pop
loop
rcrl
shrb
pop
mov
push
out
mov
jp
loop
testl
es
add
pop
insl
inc
adc
shrb
mov
outsb
jl
mov
jmp
sbb
repz
inc
in
push
inc
into
jne
push
out
fwait
aas
loop
mov
testb
add
mov
cmp
adc
icebp
xorb
mov
cwtl
xchg
test
das
outsb
xchg
inc
popa
aaa
jp
out
les
jp
aaa
dec
sub
jns
or
xchg
lods
add
scas
cwtl
push
pop
das
mov
repnz
jo
mov
ds
inc
in
das
dec
clc
test
imul
push
push
out
rcrb
into
fldl
mov
cwtl
out
movsb
sub
xor
jp
mov
cmp
cmpsl
add
shr
sub
stos
cli
xor
out
aam
sub
dec
daa
mov
insb
adc
lahf
xor
jnp
adc
inc
mov
repnz
jmp
lret
lcall
test
por
ds
mov
cmp
xor
dec
in
xlat
into
aas
add
call
insl
fstpl
xor
xchg
or
fidivl
adc
aas
rclb
jae,pt
arpl
push
int
jb
dec
insl
dec
pop
lahf
push
jle
enter
sub
fmull
jae
and
mov
ficompl
jo
push
push
lock
aam
mov
insl
add
and
outsb
inc
or
mov
jp
or
adc
mov
pop
mov
sub
and
movsl
lds
push
imul
mov
xchg
sub
sub
ficomps
sub
push
sbb
subw
jl
cmp
outsb
inc
push
test
push
sarl
adc
jne
pusha
cmp
mov
shlb
in
decl
sbb
jb
cld
push
mov
dec
add
stc
ficomps
mov
mov
mov
insl
fs
aam
int3
mov
cmpsl
xchg
cs
pop
js
lret
jl
scas
mov
mov
lock
add
mov
inc
cli
mov
cld
fwait
add
or
leave
es
mov
inc
cmp
stos
inc
out
shrb
mov
outsl
clc
add
mov
test
mov
sub
mov
inc
test
repz
pushfw
sub
leave
cmpsb
push
sbb
jae
jg
ficoml
mov
jmp
rcrl
loopne
imul
jmp
sub
jp
addb
dec
adc
sbb
push
in
popf
xchg
je
xchg
cmpsl
popf
es
pop
mov
movsb
and
xchg
iret
or
mov
adc
push
mov
mov
out
jecxz
xchg
in
add
into
dec
sarb
out
aas
lea
pop
jecxz
das
mov
pop
pop
sub
ljmp
mov
mov
sub
leave
mov
mov
xor
out
mov
imul
sub
jle
out
sarb
in
and
sub
insb
daa
push
stos
fiadds
das
jns
fwait
lea
shlb
sub
jl
insl
push
das
pop
les
pushf
out
mov
loopne
cli
cwtl
push
inc
sbb
sbb
sti
and
mov
out
xor
add
mulb
je
dec
mov
fisttpll
pusha
mov
fcomi
rcll
jge
out
ds
pop
lds
dec
idivl
pop
cli
push
xchg
mov
lods
ja
sti
cmp
sbb
xlat
or
call
es
push
jno
pop
cmc
xchg
adc
adc
or
outsb
pop
cltd
xchg
push
dec
mov
mov
and
and
sub
xor
mov
or
sub
mov
ja
or
outsb
or
fsubrs
jecxz
stos
mov
lahf
icebp
or
and
push
gs
mull
dec
pop
mov
mov
mov
ret
xchg
popl
inc
mov
pop
in
test
sbb
and
mov
call
inc
aas
jecxz
pmaxub
lods
xor
mov
scas
and
fildll
add
in
shl
pop
rcr
fldenv
out
mov
mov
cwtl
das
cwtl
push
adc
js
ljmp
and
pop
out
cld
add
inc
stos
repz
test
inc
loopne
fwait
adc
ror
cmpsb
push
cli
push
test
out
test
ret
lcall
sub
mov
jnp
shll
or
mov
addl
inc
cmpsb
lret
fisttpll
in
mov
mov
mov
add
aad
sahf
sub
mov
dec
mov
scas
mov
jb
dec
xchg
fisttpl
mov
jae
aaa
cmp
in
ss
je
ljmp
jecxz
mov
xchg
mov
sbb
and
cmp
lea
jo
daa
and
aaa
andb
mov
aam
out
add
push
imul
out
mov
dec
adc
mov
dec
pop
or
sbb
mov
scas
mov
jne
xor
mov
rorl
sbb
mov
jbe
mov
sbb
jg
lret
lret
xchg
mov
pop
inc
out
inc
sbb
in
push
adc
mov
adc
dec
pusha
jns
scas
stos
test
xor
sub
in
std
outsl
jle
fists
test
test
xor
pop
scas
ficoms
rcll
or
mov
jns
aaa
and
pop
fwait
es
leave
push
fdivrs
and
fs
add
and
mov
cli
mov
pop
push
mov
jo
cltd
je
dec
aad
inc
stc
addb
pop
lods
sub
jnp
push
jbe
outsl
push
xor
test
dec
div
fsubrp
fwait
movsb
xchg
lea
xchg
cmpsl
out
test
cld
inc
js
mov
int3
push
fcomps
push
mov
addr16
jmp
movsl
adc
stc
push
es
push
in
lea
dec
aaa
test
cmpb
cmp
mov
dec
dec
xor
fwait
iret
add
dec
or
inc
test
jg
enter
mov
sbb
iret
sbb
in
sbb
push
arpl
sahf
pop
cltd
cld
xchg
inc
xchg
stc
or
xchg
sbb
repz
out
xchg
cmc
mov
and
jnp
xor
lea
sub
push
cwtl
mov
ret
data16
lahf
xchg
fistpl
int3
adc
xchg
dec
xchg
cmpsl
jmp
and
fidivs
stos
lret
test
inc
aaa
adc
imulb
rcrb
or
lret
ret
sub
rolb
and
dec
cmp
clc
pop
mov
jl
inc
mov
fstl
fsubl
mov
lods
xchg
pop
adc
cmp
pop
jno
cltd
test
xlat
or
out
add
xor
out
sub
sbbl
jb
js
rcrl
cmpsb
clc
jg
repz
cmpsl
jp
lea
sbb
in
imul
fimull
mulb
push
pusha
pop
pop
fisttps
push
call
outsb
shll
adc
cld
mov
fwait
mov
lock
fiaddl
and
popa
inc
xchg
dec
sbbb
cmp
pop
outsb
adc
lret
and
push
inc
js
and
mov
xor
xlat
push
inc
fidivrl
fsubl
std
and
xchg
xchg
sub
lahf
loop
or
scas
es
xor
mov
aaa
fdivrs
and
xchg
test
cwtl
mov
cwtl
test
xlat
adc
stc
inc
fsubrs
push
xor
or
xchg
pusha
shlb
push
dec
dec
cltd
dec
dec
bound
xchg
dec
fldcw
cmp
movsl
in
aas
xchg
jno
dec
rorl
popf
andb
dec
into
adcl
mov
sarl
out
jl
inc
aas
or
dec
mov
jb
iret
push
mov
fstl
nop
or
stos
push
dec
xchg
sub
dec
add
loop
int3
pushf
rclb
fidivrs
cs
xchg
nop
arpl
dec
test
mov
dec
dec
lret
sti
popa
mov
pop
mov
xchg
xor
sub
ret
ja
sarb
mov
mov
int
pop
or
ficoml
adc
adc
std
cmp
lret
push
aas
mov
dec
pop
pop
imul
flds
lret
fdivl
rcrl
fmull
lret
push
outsl
insl
stos
das
add
push
outsb
add
jb
in
mov
jno
mov
pop
or
mov
push
mov
sbb
xlat
inc
loop
mov
and
cmp
sub
insl
fldt
rcrl
cmp
push
les
add
decl
sbb
xor
xchg
jl
add
in
and
xor
test
inc
sbb
xchg
cmp
icebp
xchg
insb
adc
pop
hlt
adc
data16
bound
jne
pusha
dec
jbe
stc
test
enter
jecxz
and
ret
enter
push
sbbb
and
leave
loope
pusha
mov
je
mov
je
push
mov
cmp
mov
imul
out
add
scas
mov
lret
adc
mov
sub
test
cld
dec
insb
lret
lds
mulb
push
cmc
into
xor
stc
fiaddl
xchg
lcall
jbe
fadds
les
mov
push
in
jmp
mov
shlb
lret
mov
sub
lret
pop
fidivl
pop
inc
cwtl
xorl
and
xchg
loop
sbbb
adc
mov
lcall
test
mov
fucomp
in
push
icebp
gs
add
and
pop
loope
in
inc
lock
shll
fsubs
loope
inc
iret
xlat
mov
roll
push
inc
and
mov
mov
add
fistps
push
mov
es
adcb
mov
inc
int3
test
fisubrs
adc
sbb
mov
mov
mov
sti
xchg
sbbl
test
xchg
fistpl
lds
mov
sahf
shl
xchg
insl
mov
fldcw
jp
fstps
pop
rol
es
popf
adc
outsl
imul
cmp
add
fs
ret
inc
repnz
test
pusha
xchg
jne
popf
push
mov
leave
mov
jnp
dec
pop
pop
das
jp
testb
xchg
out
inc
sahf
leave
arpl
jne
call
pushl
push
in
pop
mov
cmpsl
loope
dec
sbb
cmp
pop
ss
lret
loope
sub
and
in
xchg
aaa
mov
data16
les
mov
stos
ja
push
or
cwtl
xor
fsts
xor
inc
es
pusha
lods
lds
or
xchg
dec
outsb
or
pusha
loope
jnp
pop
outsl
ret
test
test
loopne
mov
inc
push
cmp
xlat
repz
aas
lods
out
lds
rolb
dec
popf
dec
xchg
popf
jno
outsl
xor
testl
mov
push
dec
loop
sahf
dec
aad
movb
dec
scas
or
aas
adc
lods
push
push
mov
and
xor
push
sub
cld
das
push
xchg
clc
add
sub
or
xor
mov
repz
fbstp
push
xor
inc
mov
out
xor
inc
into
or
rcr
and
outsb
ret
test
movsl
push
aam
dec
pop
fnstcw
imul
dec
mov
js
xchg
bound
mov
and
rcll
test
movsb
das
adc
jl
and
sbb
jno
pop
mov
cmpsb
inc
jne
xchg
push
adc
mov
cmp
mov
dec
pop
mov
in
pop
outsb
sbb
xchg
push
ljmp
ds
mov
in
dec
mov
jmpw
nop
scas
lcall
xor
scas
gs
and
and
xor
je
fidivs
inc
sub
ja
test
outsb
sub
mov
fadd
test
adc
imull
sbb
leave
cmp
dec
pop
ret
pop
push
stos
js
lock
lret
test
dec
fisubrl
push
sub
ja
fwait
xor
mov
mov
cmp
sub
and
pop
jne
fst
fs
dec
inc
sbb
shlb
test
mov
mov
aas
aas
ds
push
mov
add
push
cmp
ss
jle
mov
fsts
into
out
or
das
repz
loope
push
pop
jecxz
loopne
mov
dec
movsl
data16
push
fnstenv
in
cmp
icebp
mov
jle
jb
or
cltd
scas
jmp
sub
add
cld
nop
lods
test
xor
decl
mov
pop
cltd
mov
xchg
repz
mov
movsb
cmp
rcrb
adc
test
ss
jecxz
lcall
loope
sub
mov
imul
xor
xchg
sti
cld
mov
loope,pn
mov
ret
fisubs
out
cmpsl
fstpl
xor
dec
mov
pop
test
jp
inc
lods
pop
repnz
int3
pop
mov
push
inc
and
pop
outsb
add
scas
pop
icebp
sbb
sub
rcr
inc
pop
shlb
lds
push
in
jne
mov
push
sbb
imul
fcomi
lds
and
sub
xchg
sub
xchg
and
pop
inc
mov
test
jae
cmc
mov
in
or
arpl
xchg
pop
mov
and
adcl
dec
pop
push
dec
pushf
xor
repnz
mov
mov
ds
je
stc
push
mov
ret
push
sub
push
push
xor
and
dec
mov
outsb
add
cmp
cwtl
pop
nop
mov
ss
and
mov
pop
add
mov
mov
in
mov
or
sti
xchg
aaa
pop
popf
das
lret
push
and
jns
movsl
inc
or
sbb
mov
stc
sub
repz
sub
mov
data16
adc
mov
or
outsl
lcall
mov
ja
stos
rolb
mov
bound
dec
pop
jb
iret
das
fstpt
int
jge
sub
adc
jge
jbe
jl
es
out
test
pop
movsw
xchg
sub
scas
cmp
lahf
cmp
pop
and
shrl
inc
icebp
dec
dec
and
out
cmp
or
aad
push
jle
test
pop
pop
ret
push
inc
ss
daa
jecxz
cwtl
stc
outsb
call
jmp
xchg
sbb
test
xor
inc
mov
add
mov
jge
lcall
xor
dec
or
pop
push
push
inc
pop
outsl
or
lret
jns
xchg
jp
dec
or
mov
mov
mov
sub
jae
aad
adc
scas
and
cmp
das
xor
dec
bnd
jo
cwtl
nop
push
cltd
loopne
lea
adc
pusha
testl
add
jmp
dec
xchg
out
pop
mov
push
mov
fld1
je
repz
and
mov
fwait
or
inc
icebp
xchg
in
xchg
insl
xor
in
cmp
jle
cmp
mov
inc
mov
shr
das
inc
pop
adc
add
adc
pop
daa
fcomps
bound
lcall
loop
leave
pusha
sub
or
sbb
insb
dec
fimuls
and
lods
inc
push
lods
jb
pop
lock
int3
sub
shlb
insb
std
stc
adc
mov
lret
stos
psrlw
icebp
mov
dec
mov
jge
jne
dec
dec
sub
mov
loope
movsb
roll
jle
xchg
bndstx
jno
cmc
mov
jl
sub
xor
pushf
lcall
sbb
stc
out
les
pop
enter
xlat
push
add
out
xor
push
repz
stos
aad
and
pop
adc
mov
push
adc
or
out
test
bound
pop
test
loop
lret
adc
mov
adc
jge
arpl
jecxz
int
cmp
std
push
out
mov
icebp
cs
xchg
xchg
pusha
sahf
lea
rcr
jg
inc
cmpsl
pop
mov
push
std
div
pop
add
fcompl
push
cli
shrl
push
add
sarl
push
inc
pushf
imul
push
jge
js
sub
add
dec
sahf
dec
lahf
mov
xchg
xchg
loope
es
ljmp
pop
fidivl
mov
loope
jle
shlb
xchg
jl
aam
mov
dec
adc
int
mov
inc
nop
nop
and
xor
repz
mov
push
sbb
inc
add
js
iret
adc
jns
add
enter
fstl
mov
fs
loopne
push
sbb
je
inc
xor
jbe
push
lcall
jmp
adc
addl
repnz
sub
lcall
out
adc
mov
dec
mov
dec
jp
subl
mov
out
pusha
lahf
lret
sti
mov
insl
shrb
pusha
mov
adc
roll
repz
in
sbb
xor
pop
data16
stc
das
mov
aam
xor
mov
jmp
inc
cltd
cmp
xlat
push
nop
and
dec
cmp
lock
in
sub
je
paddsb
xor
cmp
nop
hlt
cmp
es
sub
dec
mov
xor
lret
or
cli
push
push
pop
in
mov
xchg
push
in
fnstsw
xchg
and
add
arpl
push
mov
std
jg
push
jne
aaa
jae
push
mov
lods
cs
jae
mov
dec
fs
fsts
xor
jae
js
ljmp
mov
stos
es
cwtl
mov
jno
scas
cli
adc
inc
adc
repnz
fs
rolb
movsl
cmp
inc
scas
dec
xchg
les
insb
out
inc
push
adc
jl
mov
add
cltd
pop
pop
or
cmpsl
xor
adc
cltd
push
cwtl
mov
push
push
inc
addb
hlt
mov
shrl
cmp
insl
fdiv
das
sub
adc
push
inc
xor
mov
out
fwait
lods
pop
call
adcb
mov
lahf
ss
xchg
fwait
pop
repnz
mov
push
xchg
rolb
sub
pop
lods
inc
shlb
sub
jmp
inc
add
and
das
cmp
popa
adc
pop
pop
pusha
mov
fldcw
scas
aas
iret
fsubr
rcll
mov
iret
jbe
sub
in
pop
mov
fldl
inc
lret
lds
xchg
xor
or
jl
mov
adc
sahf
insl
outsb
jmp
sbb
mov
arpl
sub
outsl
fidivrl
mov
test
jbe
insl
outsb
mov
mov
adc
das
jmp
aam
xor
pop
test
or
adc
in
das
sbbb
and
cs
shll
jns
add
xchg
aas
and
cltd
cmp
jmp
sarl
jp
xor
xrelease
popa
add
and
or
jge
sub
push
int3
mov
inc
loop
nop
ja
ret
push
in
notl
fldcw
mov
xchg
insl
js
push
adc
addl
fmuls
xchg
repnz
and
cmp
xor
stos
add
fnstenv
das
xchg
pop
stos
adc
mov
lret
test
add
dec
push
fmuls
ds
push
cmp
dec
xchg
push
roll
jl
dec
pop
clc
inc
add
cmp
cmp
sbb
cmpsl
cmp
out
cli
mov
add
dec
pop
arpl
xlat
scas
sub
popa
lea
gs
xchg
and
mov
rcll
stos
add
xor
fimuls
and
dec
testl
lods
dec
dec
mov
arpl
data16
cmp
sarb
test
add
jp
mov
inc
loopne
pop
pop
mov
pop
pop
xchg
mov
sarb
repnz
nop
dec
pop
mov
dec
add
mov
or
pop
loop
je
dec
test
add
loopne
ret
add
pusha
mov
fisubrs
lret
mov
jmp
inc
shll
es
inc
push
cli
and
mov
sbb
push
insl
cli
lretw
xor
insl
push
invd
jnp
insb
xor
push
mov
adc
in
jne
divl
jns
data16
pop
repnz
mov
add
rcr
data16
xchg
pop
mov
js
shrl
cmp
cmpsl
ds
add
pop
fiaddl
scas
adc
adc
test
jmp
je
push
or
mov
fildll
ret
ds
pop
sub
ss
cmpl
repnz
roll
stos
loopne
stc
adc
add
mov
push
pop
add
sub
push
sub
shll
mov
lahf
sub
xchg
dec
push
mov
shlb
call
push
fidivl
pop
fisubrl
adc
add
fidivs
in
addl
dec
flds
mov
loope
push
mov
mov
dec
imul
andb
xchg
call
and
negw
pop
cmpl
pusha
sub
lret
repz
push
cmp
pusha
push
jns
push
adcb
aaa
loopne
pop
dec
mov
jecxz
dec
aad
xchg
fbstp
mov
mov
outsb
dec
pop
insb
dec
imul
jge
scas
cmpsb
int
mov
out
shr
paddsb
fadd
pop
sub
mov
arpl
imul
add
fbld
push
sub
mov
data16
xlat
inc
mov
data16
les
fcmovb
or
mov
fidivl
mov
mov
push
sahf
ljmp
ja
addl
adc
nop
movsl
fdivr
xchg
fiadds
sahf
mov
ret
mov
int3
add
pop
scas
and
insb
xor
enter
or
lret
xchg
xor
js
std
mov
outsb
test
clc
ja
sub
fmuls
sbb
dec
xor
daa
push
xlat
or
or
mov
jle
adc
arpl
rep
adc
pop
mov
aas
lds
adc
mov
mov
dec
fsubrl
cmc
notb
sbb
jl
popf
adc
cmp
push
aad
outsb
add
add
adc
lret
rol
push
jno
test
push
movsl
sbb
fdivp
outsb
mov
fstl
cmp
sub
mov
fwait
lods
adc
push
jo
jns
mov
xchg
sbb
data16
cmp
push
stos
aaa
stc
mov
cmpl
adc
jo
movsb
sub
das
mov
ja
gs
xchg
cmp
xor
or
xchg
lods
sub
iret
sti
data16
push
sbb
scas
xchg
jne
push
lret
add
adc
mov
sbb
dec
sbb
dec
jg
pop
mov
mov
dec
in
repz
bound
xlat
fidivl
dec
cmp
mov
pop
test
jb
xor
jo
mov
add
mov
or
pusha
jp
test
lock
inc
lds
popa
dec
loopne
call
push
icebp
jmp
add
shlb
pop
mov
dec
test
faddl
cli
mov
icebp
imul
rcr
in
or
push
in
lods
cwtl
scas
and
or
sbb
nop
aaa
xchg
push
out
adc
cmp
in
pop
fbstp
scas
pop
clc
mov
or
movsl
fldl
mov
ret
push
add
out
xchg
shll
push
sbb
std
pusha
jl
xor
out
inc
outsb
inc
mov
push
jmp
inc
dec
dec
fcomi
cmp
pop
mov
sbb
and
repz
sub
inc
sbbl
jmp
add
mov
mov
pop
xor
pop
repz
testl
push
shlb
pop
rolb
sbb
stc
push
out
jmp
pop
cltd
or
sub
out
jo
pusha
popa
push
mov
or
lea
and
sbb
adc
xor
clc
xchg
icebp
jne
and
push
test
push
pop
jno
das
dec
loopne
movsb
loopne
fucomip
repz
int
sub
xor
sub
imul
pusha
sub
int
xor
pop
out
sbb
shll
xchg
sahf
dec
or
cwtl
sub
xchg
iret
test
ja
inc
mov
lret
and
leave
movsb
mov
fdivrs
loopne
sub
xor
lods
inc
sub
dec
fst
or
mov
xchg
addr16
gs
pop
push
inc
add
sti
ja
fdivp
inc
lcall
loopne
jb
adc
mov
sub
call
jg
push
push
mov
add
push
fisttpll
mov
shlb
sub
cmp
stos
sub
xchg
jecxz
cmpsl
mov
jno
out
xchg
xchg
inc
shr
stos
movsb
dec
jb
sbb
dec
inc
adc
mov
int
insl
dec
loope
fwait
cli
rcr
jmp
lods
imulb
adc
std
adcb
and
jle
mov
dec
mov
out
dec
sarl
add
jmp
shll
repz
cltd
jo
insl
jbe
scas
mov
jbe
lods
xchg
jmp
cmpsl
xchg
cmp
dec
into
lret
xlat
or
or
push
jle
subl
aam
jmp
or
orl
or
scas
dec
popa
mov
xchg
adc
xchg
das
ffreep
loopne
push
sbb
push
sub
sub
add
es
dec
dec
dec
jmp
pop
add
dec
push
lret
dec
sbb
sub
int3
add
sub
jge
mov
fcoml
add
push
push
mov
jle
mov
shrb
or
and
pop
and
mov
dec
push
mov
mov
jbe
lods
xor
inc
lcall
xor
lret
add
pop
call
stos
xchg
sti
rorl
mov
add
pop
dec
xchg
or
js
mov
addr16
cmpsb
dec
push
es
or
leave
stos
movsl
pop
in
sbb
lret
adc
xor
testb
adc
pop
jae
jb
xor
adc
jge
xor
pop
pop
sbbl
cmc
xchg
popa
fsubrl
flds
in
in
jg
adc
xor
jle
int
add
mov
adc
ret
fstpl
frstor
pop
dec
movsb
mov
xor
pop
xor
aam
push
jl
loope
ret
shrb
mov
or
aaa
lock
and
out
xchg
push
inc
shll
dec
into
dec
mov
push
lods
shll
pop
fldcw
repz
cmp
int3
iret
mov
daa
mov
movzbl
or
fs
add
loopne
jmp
cwtl
daa
imul
aaa
jno
mov
rol
mov
pop
imul
xor
and
pop
xchg
cmp
mov
jnp
sahf
or
and
mov
mov
lret
or
lds
add
mov
pop
icebp
outsb
cpuid
mov
subb
jo
imul
fs
jne
imul
mov
sub
cmp
jae
pop
leave
aam
sub
pop
xchg
dec
pop
mov
xor
fsin
aas
cmpsl
ret
jo
push
or
scas
scas
cmp
fldl
sahf
xor
pop
xor
test
fstpt
or
sbb
rclb
insb
jge
dec
loope
movsb
shlb
ss
stc
clc
clc
sbb
fists
mull
es
test
ret
stc
sub
mov
push
aam
cmp
push
icebp
or
or
test
push
inc
xor
lods
jmp
dec
std
and
or
js
out
test
cmp
aam
cmp
sbb
daa
ljmp
push
inc
dec
inc
lahf
jbe
sbb
inc
push
and
hlt
bound
cli
inc
inc
inc
insl
aam
fcompl
idivb
cmp
lret
cmp
data16
mov
data16
sbb
xor
mov
scas
sbbb
mov
and
cmp
int3
push
fldenv
aad
xchg
mov
mov
sbb
add
push
mov
push
lods
test
fnstenv
out
les
xchg
mov
push
pop
cmp
sar
sub
xchg
pop
testb
inc
xlat
mov
lret
test
or
pop
and
lret
in
inc
in
cmpsb
cmp
insb
stos
mov
xchg
push
dec
jnp
inc
mov
rcl
pop
shrl
jo
nop
pop
inc
xchg
cmp
adc
hlt
sbb
and
inc
mov
mov
insb
inc
mov
stos
nop
mov
rorb
add
and
sarb
sub
cld
dec
jbe
cli
xor
cltd
xor
mov
dec
add
in
dec
aam
jg
mov
out
sbb
rclb
inc
push
dec
loope
addr16
jecxz
fsubl
or
dec
inc
stc
cmp
pop
mov
adc
add
icebp
jbe
arpl
call
inc
xor
gs
scas
xor
cmc
pop
xor
mov
test
mov
or
movsl
inc
aad
out
sub
xchg
sub
stos
mov
adc
rcrl
not
stc
cmp
repnz
push
sbb
jp
and
pop
cmpsb
sbb
mov
sbb
xchg
out
in
lods
mov
inc
outsl
cmp
lods
inc
xor
fstps
inc
decb
add
xchg
icebp
or
mov
push
leave
mov
xchg
add
int3
xor
aad
inc
arpl
cmp
jg
push
lea
or
popf
add
ds
xchg
mov
or
aaa
fucompp
xor
test
push
inc
jno
xchg
daa
push
aas
pop
imulb
inc
xor
stc
inc
push
loopne
aas
movsb
out
fcoms
fwait
lods
and
and
sti
cmpsl
lock
sbb
out
push
fadd
outsl
subl
jp
imul
insl
jb
pop
mov
cmp
mov
push
jbe
xchg
or
mov
push
pop
insb
pusha
imul
mov
loopne
sbb
stos
mov
and
pop
xchg
cmp
ss
xchg
pop
push
add
xor
mov
insb
mov
clc
xchg
popf
xor
repnz
xchg
cltd
arpl
sub
in
jnp
pop
sub
in
movsl
cltd
imul
ds
out
insl
mov
fadds
sbb
ds
adc
push
popa
sarb
push
sbb
mov
fidivrl
scas
lret
int
inc
jnp
mov
jns
xchg
cli
dec
cwtl
fs
inc
out
xor
fsubs
xor
xor
xor
xor
lcall
jae
fxch
inc
xor
mov
inc
pop
sbb
fimuls
push
jns
dec
pop
mov
cmp
xchg
inc
xor
mov
aaa
push
pop
dec
aas
outsb
icebp
icebp
and
mov
jae
fldcw
pop
and
push
mov
sti
pop
cmc
outsb
cmp
and
sbb
decl
jp
jo
push
add
scas
inc
lahf
or
int3
or
lret
mov
push
jo
sub
fsqrt
es
es
inc
dec
mov
xchg
mov
lods
hlt
das
dec
jge
in
sbbl
push
sub
cmp
or
cwtl
xor
adc
in
push
sbb
leave
enter
push
push
cltd
lahf
add
add
mov
or
das
pop
push
jmp
and
lahf
xor
sti
pop
jmp
fldenv
inc
icebp
push
imul
cmp
adc
mov
dec
in
sahf
leave
pop
push
mov
aas
jnp
mov
cmp
clc
rcrb
dec
subb
jp
cmp
push
nop
mov
dec
jne
mov
xor
cltd
mov
adc
jecxz
call
dec
dec
dec
pop
jp
fcomip
cmp
and
repz
scas
stc
push
mov
loopne
adc
inc
outsb
mov
jecxz
sbb
sbb
jge
inc
fdivrl
jb
js
fs
aas
jge
loope
dec
mov
inc
sbb
sbb
pusha
lds
shrl
jge
cmpsb
lods
rcrb
fmul
push
adc
and
movsb
cmpsl
out
and
xor
push
icebp
outsl
jle
aas
pop
fistpll
add
icebp
movsb
mov
xchg
pop
imul
bnd
mov
xchg
jl
das
outsb
shrb
adc
adc
mov
popa
mov
enter
je
mov
jmp
in
dec
and
ss
sbb
cmp
lock
testl
xlat
pop
hlt
xchg
fdivs
add
push
push
aad
popl
dec
cltd
mov
iret
dec
xchg
popa
inc
pop
mov
gs
js
and
std
mov
dec
popf
push
mov
mul
loope
rclb
out
lret
cmpsl
ret
incb
ja
insl
mul
sub
pushf
cmp
lods
cltd
xor
lret
adc
call
fsubrs
mov
fucomip
sbb
sbbb
mov
movsb
daa
and
adc
cli
loopne
fnstsw
sub
ja
mov
insl
repnz
pop
test
popf
xchg
cli
xchg
jmp
out
lea
jo
sahf
addl
dec
mov
pop
xchg
sbb
jae
sub
pop
jnp
jo
add
sbb
out
cmp
out
mov
jne
mov
jecxz
cmpsb
mov
lret
mov
jmp
cmpsl
pop
out
fwait
or
sub
xor
loopne
push
test
lds
addb
jne
lret
sti
inc
xchg
mov
mov
adc
jno
cmc
mov
mov
inc
xorl
xchg
push
mov
dec
add
dec
mov
and
daa
ret
pop
cmp
mov
hlt
addr16
shrb
movsl
aad
push
mov
jmp
or
decb
cli
dec
punpckhwd
outsb
subl
inc
push
jne
jns
dec
inc
push
mov
xor
into
lods
test
add
dec
xchg
mov
vfnmsubps
stos
sbbl
jg
icebp
fwait
mov
js
push
sbb
adc
jbe
cs
mov
or
inc
mov
jb
mov
mov
or
inc
lds
dec
data16
int3
arpl
or
pop
xchg
mov
lods
bound
int3
and
les
shlb
stos
mov
out
outsl
cmpsl
jne
jmp
push
lea
pop
cld
aam
ljmp
int3
fs
mov
fldenv
into
aam
cmpsb
andl
push
sub
test
xchg
inc
popa
inc
cwtl
sbb
es
stos
xor
pop
push
inc
popa
aaa
jo
sbb
push
sub
pop
pop
out
test
iret
jns
jne
lret
jbe
jae
lahf
lock
std
inc
mov
mov
mov
xor
test
xor
jg
mov
ja
sub
sbb
imul
idivl
cld
push
or
xlat
jp
mov
cwtl
xor
cli
test
inc
fldcw
xchg
imul
icebp
adc
mov
mov
inc
aad
xor
call
push
repz
roll
fldenv
iret
adc
flds
dec
sahf
popa
mulb
hlt
jg
int3
data16
xor
xlat
jmp
or
jmp
into
jp
jbe
pop
mov
mov
rcll
fimuls
add
in
fmul
xor
push
and
sub
lcall
cwtl
das
repz
xchg
inc
sbb
sub
push
lods
inc
push
fwait
hlt
loopne
and
iret
jbe
sti
mov
sahf
jns
popa
add
cmp
call
iret
scas
and
push
shlb
xor
push
mov
filds
arpl
les
scas
pop
test
loop
and
jns
into
push
lods
repnz
and
shlb
or
mov
adcl
es
pop
sub
jnp
jbe
bound
mov
jle
xor
fmull
xchg
loope
add
sub
test
movsl
mov
cs
push
rcrl
and
subl
je
test
jbe
sbbl
jo
jae
lds
cmpsl
cmp
cmp
pop
add
dec
aam
fisttps
shlb
in
fbld
inc
outsl
scas
jns
add
mov
or
xlat
popf
sub
sbb
or
stos
ljmp
xchg
add
popa
sbb
pusha
adc
push
je
fdivs
lret
mov
push
inc
and
dec
mov
pop
mov
sarl
mov
pop
or
rorl
arpl
mov
cmpsb
pop
dec
cwtl
fidivs
ljmp
imul
add
inc
popa
push
cmp
inc
sub
sub
das
scas
push
repz
cli
adc
enter
ret
daa
outsb
mov
push
stc
movsl
push
or
pop
das
jl
popf
cld
pop
fisttps
or
mov
xor
push
scas
out
add
movl
or
jecxz
sbb
and
push
cmpsl
pop
push
adcl
pop
add
pop
iret
xchg
jg
cli
pop
in
std
inc
xchg
xchg
adc
xchg
imul
inc
jae
and
push
cmp
inc
xchg
pop
xchg
lret
clc
pop
in
cmp
sbb
mov
cmpsb
xchg
inc
mov
inc
lods
ficompl
mov
jmp
add
mov
mov
jno
int3
xchg
adc
iret
sti
jbe,pt
in
inc
lcall
lcall
inc
in
lock
inc
dec
pop
in
test
mov
ja
or
mov
jno
es
cmpsb
adc
mov
cmc
mov
gs
jge
jae
jb
and
xor
stos
ja
shlb
xor
mov
jbe
jmp
jmp
xchg
scas
dec
in
mov
or
push
cmp
arpl
xor
mov
aas
jmp
subl
mov
in
ret
mov
xchg
notl
scas
cli
or
cld
outsl
out
push
pop
adc
mov
mov
xor
sbb
inc
out
mov
enter
lcall
mov
mov
or
fdiv
mov
adc
aas
test
jecxz
call
in
sub
sub
into
pop
out
mov
test
cwtl
push
mov
jb
filds
pop
xchg
ror
sar
push
add
lcall
or
cmpb
mov
stos
and
fucomi
mov
sub
sahf
push
movsl
pop
fwait
push
lea
mov
and
and
cmp
cmp
pop
in
bound
jnp
inc
movsl
test
mov
jge
in
lods
cwtl
in
mov
adc
mov
sbb
leave
pusha
push
aas
scas
push
js
insb
sbb
mov
inc
test
pop
and
repnz
testl
xchg
sub
mov
gs
xchg
inc
push
xchg
dec
inc
stos
outsb
jb
cltd
push
add
xlat
insl
adc
inc
pop
arpl
xor
in
add
jo
mov
mov
jbe
cmp
addr16
adc
lcall
jne
pop
pop
insl
dec
daa
cmp
shrl
and
stc
arpl
mov
lret
or
pusha
movsb
or
mov
insb
xlat
sub
and
inc
cmp
mov
and
les
test
popf
je
in
in
inc
and
push
arpl
cwtl
jo
mov
sub
outsl
rorl
int
hlt
mov
es
sti
ds
stos
or
jmp
xor
mov
ss
mov
jg
cmp
out
outsb
sarl
daa
dec
insb
ret
clc
push
xchg
xchg
std
pop
test
sbb
call
addr16
inc
loopne
movsl
enter
push
bound
in
out
loop
rolb
dec
pop
add
mov
add
imul
jle
push
mov
mov
stc
int3
pop
adc
stos
mov
repnz
inc
inc
mov
jp
addr16
stc
dec
push
mov
mov
push
sbb
ret
xchg
or
daa
mov
push
push
rol
cmp
jae
dec
mov
sarb
jo,pt
push
mov
push
mov
jle
dec
adc
jo
imul
dec
mov
push
pop
scas
jne
lea
out
push
stc
nop
fnstenvs
imul
sub
arpl
mov
in
mov
cmp
mov
loopne
out
dec
xor
enter
inc
xchg
pop
xchg
pop
stos
mov
cmp
xor
call
pushl
pop
out
fidivl
jno
mov
je
lds
sbb
ret
frstor
imul
fisubl
test
mov
scas
lea
test
scas
aas
lcall
adc
fwait
push
cs
mov
aas
xchg
jmp
adc
ds
push
add
push
push
daa
out
es
movsl
in
ljmp
test
daa
jnp
or
setle
inc
mov
pop
test
add
in
push
jge
xchg
daa
cmp
adc
dec
fwait
push
inc
ljmp
clc
ds
mov
pslld
clc
sti
cmp
push
mov
sti
gs
xchg
sub
enter
divb
cld
rolb
orl
lods
outsl
ds
je
mov
mov
and
rcl
jnp
push
outsb
mov
lock
ja
xor
or
xchg
adc
mov
movsl
lds
mov
or
out
cmpsl
jmp
js
setl
jnp
mov
dec
push
sub
jo
hlt
mov
xorl
mov
bound
or
addr16
out
or
jb
mov
mov
adc
in
xchg
jb
pop
cmp
stos
or
pop
fisubrl
iret
mov
repnz
xchg
fwait
rcll
sbb
xor
aam
mov
push
out
fstpt
adc
pop
adc
pop
jae
xchg
xchg
jnp
jae
lahf
pop
or
test
ss
cmc
or
int3
inc
ret
test
decb
arpl
jle
adc
jle
or
inc
jl
je
jecxz
lret
lret
loopne
addr16
mov
rorl
xchg
jne
cwtl
sbb
ja
sbb
test
ja
mov
sub
popa
into
cmp
adc
das
sar
imul
fsubp
or
jg
dec
pop
jge
mov
xorl
sub
jle
or
int
jle
loope
negl
pop
or
vhsubpd
jp
jp
mov
lods
push
pop
and
clc
mov
and
fisubrs
adc
xor
mov
pop
cmp
mov
sub
push
pushf
jg
int
mov
aas
aad
push
enter
outsb
shlb
ret
mov
jnp
outsb
push
outsl
push
js
mov
hlt
sub
add
pop
out
sbb
or
or
and
jo
scas
push
shl
push
push
leave
inc
sahf
dec
hlt
xchg
xor
mov
mov
push
jno
fnsave
cmc
cmp
sbb
mov
adc
jae
and
push
mov
repz
outsl
loop
imul
out
push
adc
mov
adc
mov
mov
adc
lret
std
rorl
int
icebp
jnp
sbb
xor
jp
movsl
orb
inc
ss
cmp
inc
push
cmc
add
sahf
popf
js
jnp
js
out
inc
lods
mov
icebp
xchg
out
mov
push
mov
mov
pop
push
daa
inc
jb
and
inc
icebp
mov
and
out
orl
hlt
lods
addr16
and
add
lret
jbe
xor
dec
or
rorl
xchg
sub
push
push
cmpsb
xor
out
push
and
or
jge
nop
aas
push
std
je
cmp
out
push
mov
shrb
sub
ljmp
push
repnz
push
lods
andb
inc
sahf
xorl
fcoml
push
pop
stos
add
and
xchg
std
and
rclb
ds
lods
mov
jecxz
add
push
pop
inc
pop
add
imull
cld
ds
lods
dec
into
cwtl
pusha
sub
dec
test
imul
cmp
stos
jmp
or
bound
stc
lea
push
stos
rcrb
ja
clc
test
repnz
push
and
xchg
sub
inc
xchg
xchg
imul
inc
and
data16
ds
pop
dec
aad
jp
imul
imulb
push
jne
jno
cmp
out
xchg
sbb
cmpb
fidivl
mov
and
fcompl
pop
push
inc
popa
clc
ja
loope
cmp
in
call
xchg
and
negb
mov
call
xchg
mov
or
jl
push
sub
js
mov
loope
mov
push
inc
xchg
adc
sbb
stos
jge
insl
or
mov
loopne
sbb
push
shrl
mov
sub
gs
lock
pop
cmpsl
xchg
aaa
stos
inc
dec
rcrl
mov
inc
enter
inc
jmp
fmulp
lret
lock
mov
lock
mov
int3
mov
add
mov
jns
mov
push
push
fistpll
stos
mov
fmull
cmp
std
xchg
jmp
fadd
and
sbb
cld
jbe
mov
rclb
repnz
call
mov
test
mov
pushf
cmp
js
inc
cld
add
sub
mov
xor
cmpl
addr16
push
push
mov
xchg
pop
fstl
out
ds
jmp
test
decl
inc
out
ficompl
jb
gs
mov
pushl
or
and
mov
ret
add
cmpsb
inc
push
jle
cmp
scas
insb
mov
fidivs
movsl
pop
push
in
adc
aad
jp
movsb
mov
shl
aas
mov
sub
push
xchg
add
ja
jo
sti
pop
stc
ss
daa
cmp
mov
sbb
xchg
fwait
dec
lods
neg
mov
mov
xor
jg
xor
jl
aas
jp
xchg
jg
lods
push
mov
std
lock
cmp
push
mov
mov
stos
es
movsl
cmp
popf
mov
inc
lods
or
and
adc
les
popa
jl
enter
pop
cmp
daa
in
add
and
mov
push
pop
dec
icebp
lods
xor
imul
stc
aas
push
pusha
mov
push
stc
cmc
leave
fldenv
xchg
sub
push
adc
jecxz
xchg
out
mov
jle
and
pop
push
ljmp
inc
inc
aad
repnz
rorb
scas
xlat
jmp
adc
int3
cs
adc
ret
ss
outsb
dec
dec
mov
movsl
ror
inc
jnp
ja
bound
je
mov
pop
pop
xor
cmp
add
and
push
dec
push
js
cltd
inc
push
xor
xchg
es
out
dec
jbe
push
out
addr16
enter
inc
xlat
inc
jmp
or
movsb
fld
loop
loope
add
jae
mov
cmp
movsb
jne
adcl
mov
sarb
adc
pop
sub
mov
je
mov
jge
sub
dec
nop
ss
stc
shl
sbb
inc
pop
push
scas
fs
fildll
repnz
or
das
mov
sub
adc
sarb
outsl
fucomp
je
dec
lods
push
popf
sbb
hlt
movsl
lds
call
xchg
add
dec
rolb
jge
xor
and
int3
mov
aad
imul
pop
les
xor
popf
js
sub
test
and
in
push
ljmp
fstl
cmpsb
imul
lcall
sbb
neg
ljmp
test
push
pop
xsha256
cmpsb
nop
sub
leave
nop
jno
push
cmpsl
cmpsb
mov
add
ret
cmp
cmc
jo
es
test
mov
in
dec
inc
pop
movsb
fisttps
cmpsl
sahf
xor
lods
lods
in
dec
sub
jno
jno
dec
pop
xchg
fsubrl
push
hlt
daa
mov
testl
shll
add
jno
xor
jne
mov
pop
inc
and
jo
add
and
xor
ds
push
shrl
jno
xchg
sub
mov
stos
mov
cmpsb
dec
mov
jo
cmp
les
aad
dec
mov
mov
aaa
jl
shrl
or
jno
cwtl
xor
insl
ja
adcl
mov
in
gs
movsb
pop
inc
or
ret
lahf
pop
je
mov
loope
repnz
loopne
inc
fcmovb
inc
in
mov
jne
ljmp
inc
fnstcw
scas
mov
dec
out
dec
ss
std
mov
out
test
es
lret
lret
jp
in
mov
inc
je
bound
push
cli
imul
repnz
pop
jle
sub
sbb
pushf
setle
and
out
std
cltd
inc
sbb
push
out
sub
rorl
jecxz
inc
sub
sbb
ficompl
or
pop
les
stc
in
out
mov
ljmp
sahf
outsl
cmp
or
jae
bound
imul
in
mov
or
and
or
rclb
cmp
movsb
push
fistl
int3
repz
xor
mov
std
addb
dec
mov
rclb
jge
pop
mov
les
daa
pop
push
jbe
outsb
fists
loop
mov
push
sbb
aad
cmp
mov
iret
std
daa
xchg
loope
push
jmp
or
je
cmp
nop
inc
out
xor
sbb
je
imul
inc
ds
add
mov
sub
lret
xor
std
ds
adc
mov
adc
dec
arpl
addr16
loope
mov
add
rcrl
fidivrs
jmp
clc
and
jb
mov
xor
int
or
fnstsw
inc
insl
jmp
dec
dec
cmp
fistl
mov
fs
push
popa
and
xor
jmp
and
fwait
sub
push
fbld
repz
clc
jl
fnsave
scas
aas
dec
pop
mov
lds
out
lahf
mov
mov
js
cli
fwait
jmp
es
shr
cmc
or
cmpsl
pushf
mov
push
mov
notb
cmp
lods
and
adc
nop
or
ficomps
rcr
pop
rcr
hlt
jge
adc
pop
dec
jns
xlat
xchg
aam
int3
inc
xchg
add
cmc
cmp
movsl
xchg
adc
dec
push
mov
cwtl
outsl
icebp
ds
sub
push
leave
lret
sub
fistl
call
rcl
sbb
out
sbb
mov
ficoml
aas
jmp
add
sarl
cmpsl
add
mov
pop
in
fstpl
sarb
fistl
lret
jns
adc
std
sbb
arpl
nop
push
pop
or
jns
cli
sbbb
add
in
mov
push
loopne
xor
aaa
out
mov
cmp
stc
imul
in
mov
popa
jg
sti
jns
mov
jns
jb
jge
sub
sub
js
outsl
out
sbb
mov
dec
call
add
push
mov
jg
cltd
movsb
jns
adc
inc
sbbb
mov
lds
sbb
jle
jg
mov
gs
jae
add
and
loope
pusha
pop
sbb
std
arpl
js
xchg
test
fidivrs
mov
push
push
xor
test
faddp
les
mov
mov
xchg
popf
inc
inc
dec
xor
cltd
or
ss
mov
xlat
cld
lret
jmp
adcl
cmp
jae
into
jae
jbe
cli
popf
mov
mov
dec
cmpsb
jmp
mov
decb
scas
pop
loop
rorl
fistl
scas
mov
pop
movsl
xchg
add
and
cli
push
adc
addr16
pop
dec
cmp
mov
clc
sbb
sbb
mov
xchg
sub
ret
mov
cwtl
jmp
mov
mov
into
mov
ret
and
sub
adc
mov
fucomp
jmp
sub
lret
data16
jg
mov
jle
push
add
insl
cs
or
pop
cmp
ficomps
inc
lcall
lods
rcr
pop
fmul
cmp
cmpsb
and
shrb
push
pop
hlt
mov
sbb
adc
dec
loope
or
pop
leave
pop
fisubl
inc
mov
push
call
idivl
pop
mov
xchg
push
loope
mov
ljmp
push
ljmp
cmc
mov
cmp
fisubrs
fwait
mov
inc
fmul
jns
add
test
mov
popa
je
test
negl
sbb
inc
flds
fsubl
cmp
adc
mov
adc
and
and
pop
dec
in
fidivl
leave
or
fsubl
jne
andl
mov
sbb
adc
pop
jnp
aas
outsb
push
adc
jl
pop
add
push
movsl
andb
scas
push
aam
int3
inc
fbstp
xor
shl
xchg
and
sahf
mov
in
fildl
enter
repnz
imul
dec
mov
mov
notb
test
in
arpl
dec
pusha
pop
jl
call
sbb
sarb
popf
or
decb
sub
jp
pop
cmpsb
sahf
fwait
xchg
pop
in
lock
pop
xchg
out
sbb
loop
fwait
mov
addr16
mov
outsb
out
inc
fimull
xor
aaa
jle
insl
je
cmpsl
cmp
jge
sub
mov
in
sub
dec
add
nop
push
lods
inc
pop
sbb
lret
inc
iret
cmpb
lcall
jns
lahf
cs
lds
mov
rclb
cmp
sbb
sbb
test
add
lods
leave
pop
sub
movl
push
add
or
mov
stos
pushl
mov
popa
adc
sbb
sub
inc
loop
pop
fcomip
fcomps
out
add
jp
addr16
js
mov
mov
cli
mov
adc
or
pusha
push
cmp
loopne
fucomi
or
shlb
lock
mov
mov
and
lds
dec
xor
jl
and
in
fst
insl
femms
xchg
hlt
jae
xchg
test
jge
pop
arpl
fwait
sbb
and
movsb
jmp
ljmp
into
push
sbb
icebp
insl
and
aad
mov
outsb
push
or
sarl
lds
leave
pusha
xchg
sub
out
mov
loopne
push
fimuls
les
xor
jb
and
int3
inc
ret
outsb
xchg
mov
or
jb
lahf
pop
and
inc
jl
xor
inc
lods
jp
jne
ret
fbld
scas
and
xchg
push
jge
mov
and
test
test
xor
inc
shlb
sbb
add
gs
cmc
sahf
inc
daa
insb
cmp
fcmovne
cmp
cmpsl
daa
or
fwait
or
test
push
ss
dec
loop
dec
shl
dec
sbb
sub
out
nop
stos
sub
iret
inc
dec
push
aas
leave
or
fdivp
arpl
xchg
clc
js
scas
test
je
dec
mov
repnz
es
pop
cmp
add
stos
lcall
clc
mov
xor
lret
cmp
cld
ljmp
loopne
inc
hlt
divb
push
popf
mov
insl
scas
adc
jg
cmp
cmp
ds
xor
aad
xchg
adcl
adc
xchg
out
xor
icebp
popa
sbb
push
cmp
dec
repz
mov
aad
iret
rcrl
outsl
cmpb
loope
xorl
push
cltd
mov
popf
ljmp
mov
mov
pop
push
js
jbe
pop
das
mov
stos
ficompl
jnp
std
repz
das
xchg
push
xor
push
xchg
pop
ja
inc
pop
jae
xchg
and
imul
repz
sub
adc
jb
out
xchg
and
adc
sbb
dec
mov
jge
daa
ret
rorl
jle
mov
xor
scas
xchg
test
pusha
push
jae
pop
lock
xchg
mov
test
std
adc
lret
jg
and
fildll
aad
mov
je
rclb
and
sbb
or
sub
jg
cld
and
jae
or
imul
pop
add
cltd
or
fcomps
hlt
add
cmp
in
nop
daa
cli
inc
enter
stc
dec
push
mov
pop
sbb
cmpsl
pop
test
mov
sub
es
mov
and
cmp
jno
aam
scas
add
pop
jae
add
mov
dec
push
push
rclb
popa
sahf
lahf
adcl
push
mov
cmpsl
adc
in
repz
lahf
dec
xor
add
jmp
fidivrs
and
xchg
int
xchg
js
dec
bound
mov
call
iret
jbe
or
push
dec
or
sti
xchg
in
scas
popf
xchg
ljmp
mov
shlb
arpl
sub
mov
mov
negl
cmp
sub
jg
lea
xor
mov
sub
es
mov
popa
xor
call
inc
sub
jecxz
mov
test
data16
popa
lret
int3
mov
mov
loop
adc
incb
rclb
outsb
das
pusha
shrb
push
ss
mov
inc
xchg
cmp
bnd
int3
xor
loope
sub
mov
lea
and
dec
push
jne
xchg
insb
sub
adc
hlt
adc
sub
xor
sub
mov
or
stos
pop
scas
fistpl
popf
add
sbb
adc
std
in
imull
add
cli
xchg
mov
inc
punpckhbw
adcb
or
and
jb
adc
adc
stos
sub
mov
jne
pop
xchg
mov
sub
xchg
inc
mov
lock
and
inc
pop
movsb
out
into
pop
sbb
std
xor
cmp
add
lods
rorl
adcl
jnp
orl
mov
mov
sub
push
sub
push
clc
jb
add
imul
adc
out
stc
pop
sub
sub
xor
test
jle
repz
push
mov
add
mov
jl
or
dec
dec
or
and
das
test
sahf
add
push
icebp
stos
inc
inc
jno
addr16
pop
scas
sub
push
cmp
test
cld
dec
loopne
test
sub
fs
xchg
cs
sbb
xchg
lods
sar
aas
inc
into
sbb
xor
xchg
add
cli
jb
sbb
cwtl
lods
inc
mov
sti
outsl
sahf
pop
mov
mov
push
mov
ret
push
push
mov
outsl
xor
or
pop
stos
filds
sahf
jb
shr
out
stc
sbb
incl
add
movsb
clc
shl
jae
dec
mov
movsl
cmp
fdivp
adc
mov
cmpsb
add
pop
pop
sbbl
lret
sub
mov
pop
cmc
cs
in
lret
cmp
xchg
inc
xchg
and
and
dec
mov
mov
int3
cmpsl
ret
int3
sub
push
and
mov
loope
outsb
cmp
push
pop
pop
shrb
aas
sub
cs
in
sub
nop
mov
xchg
fcomps
ds
pop
mov
dec
mov
sti
aam
add
cmpsl
lea
jnp
aam
fdivl
mov
idivl
sub
mov
ds
movsb
movsb
jns
pushf
shll
pop
cmp
and
mov
inc
adc
aas
push
mov
jg
xchg
adcl
ds
add
dec
das
mov
in
ds
aaa
jge
in
xor
cmp
mov
mov
cmp
xlat
in
nop
mov
mov
cmc
scas
and
jge
sbb
xor
in
pop
sbb
jae
mov
outsl
xor
pop
cwtl
add
outsl
add
dec
mov
push
mov
imulb
test
adc
leave
fucomp
notl
out
data16
mov
les
movsb
cmp
xor
pop
jge
pop
out
leave
sahf
mov
xchg
xor
xor
jne
push
inc
push
jmp
jb
leave
and
xor
mov
dec
push
cwtl
add
fists
pop
mov
repnz
int
xor
mov
int3
lret
ljmp
and
popa
test
push
or
jecxz
xchg
iret
lods
xor
int3
in
cmpsb
dec
inc
mov
flds
mov
enter
popf
popa
cmp
sahf
lahf
xchg
jno
mov
adc
pop
dec
adc
pop
mov
lods
fistps
idivb
jmp
mov
ror
pusha
ficomps
add
xor
rolb
xchg
sub
das
test
mov
jg
inc
push
shrl
inc
or
scas
ljmp
rcll
jb
push
out
cs
add
gs
cwtl
insb
ret
hlt
jae
or
pop
enter
loop
mov
mov
add
loop
je
push
mov
sahf
xchg
mov
movsb
push
iret
jnp
inc
mov
cltd
in
cmp
add
out
jl
movsl
mov
int3
inc
ljmp
shrb
or
test
outsb
andl
loope
dec
mov
dec
pop
xor
inc
cmp
jo
push
cld
push
mov
aad
pop
imul
xchg
inc
push
xor
adc
nop
sahf
leave
pop
push
jl
adc
adc
rep
xor
jbe
mov
cmc
dec
lcall
pop
es
les
sub
inc
mov
mov
xor
test
pop
rcr
lea
mov
mov
pop
scas
jl
sbb
loopne
movsl
repz
adc
lods
add
sub
decb
push
outsl
adc
fisubrl
cmp
adc
lcall
rorb
out
xchg
pop
cltd
or
sub
mov
insl
inc
out
dec
movsb
sbb
mov
out
pop
xchg
out
add
cmp
mov
xchg
lret
rorb
mov
jmp
clc
pop
and
and
mov
mov
lds
out
das
inc
dec
fldl
cmpsb
fs
mov
adc
xchg
adc
into
aad
pop
and
mov
lock
jmp
mov
mov
fstl
sti
lods
mov
pop
add
or
scas
ljmp
add
xchg
rorl
jmp
pop
push
lea
mov
loope
xchg
adc
int
push
add
int
mov
jp
sti
xor
mov
int3
imul
test
lea
mov
mov
ret
push
fs
and
and
popf
xor
repz
movsl
shrl
ds
pop
dec
pop
add
sbb
mov
jb
stos
xchg
inc
cmpsl
jno
and
test
dec
add
add
xor
sbb
push
scas
mov
sbb
sub
sub
add
test
adc
xor
and
shlb
sbb
cmp
sub
sbb
jnp
lahf
idivl
loopne
and
psubusb
int
repz
fdivs
iret
mov
add
insl
cltd
jbe
in
rclb
jo
test
pop
cmpsb
mov
push
and
ja
push
mov
adc
or
mov
add
pop
xchg
dec
fstps
pop
fmuls
sub
push
pop
sahf
sbb
xor
mov
pop
jo
adc
sbb
outsb
scas
es
dec
add
jl
cmp
ret
and
pop
pop
inc
scas
mov
lea
mov
mov
outsl
stos
jnp
test
push
iret
insb
imul
int
push
mov
cli
mov
mov
stc
push
inc
fldenv
add
out
inc
pusha
xor
int3
dec
fisttps
dec
ret
sub
inc
xor
inc
mov
push
mov
push
add
mov
cmpsb
adc
push
nop
and
ror
test
push
es
lds
and
popa
or
mov
cltd
fdivrs
insl
jno
jp
fdivrs
mov
iret
and
push
jnp
jge
rcrb
repz
aad
xchg
lods
or
loope
cltd
push
aad
push
sbb
imul
outsl
xchg
jmp
xchg
jne
cmp
imul
iret
xor
cmc
adc
sub
sbb
fldenv
in
jns
xchg
cmp
and
movsb
push
jno
pop
xchg
pop
add
imul
cld
jg
pop
mov
jl
test
jnp
loopne
sub
cs
dec
jns
add
and
decb
add
sbb
pop
jno
cmpsb
sbb
test
int
cwtl
fs
dec
add
sahf
mov
push
shll
add
xor
mov
add
jg
fnstsw
lods
dec
mov
dec
inc
or
les
add
ret
movsb
aad
jle
mov
adc
sub
iret
sub
push
fsub
testl
lods
outsl
pop
xor
movsl
xor
jns
aas
aad
jg
inc
pop
inc
mov
cmpb
sbb
daa
lret
movsb
cmp
jp
cltd
das
lahf
lock
je
sbb
ss
outsl
or
stos
jne
cmp
and
add
mov
push
rcrl
xlat
and
or
dec
dec
js
lea
iret
pop
adc
out
sub
stos
adc
loopne,pt
mov
repnz
out
shrl
push
aad
xchg
int3
mov
and
hlt
inc
cmp
push
xchg
and
xor
stos
lahf
or
in
addr16
mul
sub
or
pop
les
addl
xchg
jno
or
lret
push
inc
adc
iret
or
pop
push
and
push
lds
cmp
add
xchg
inc
mov
add
loope
hlt
out
mov
push
dec
push
push
mov
cmc
stos
les
fsubrs
mov
add
and
popl
sbb
inc
xchg
pop
jb
daa
leave
sub
adc
inc
rclb
fnstcw
push
sbb
fwait
aam
pop
mov
je
in
mov
mov
and
js
incl
imul
mov
or
aaa
jne
fwait
sti
mov
in
mov
jne
cmpsl
push
ret
add
or
mov
iret
test
pushf
mov
jns
or
or
in
adc
cmp
fistpl
pop
push
mov
inc
pop
cmpsl
xchg
imul
mov
scas
loope
ja
repnz
cltd
ja
out
xor
cmp
jns,pn
andl
cmp
push
cwtl
cmp
mov
out
out
popf
dec
dec
fmull
cs
push
subb
pop
aam
scas
cld
cmp
cmp
fsubr
aam
pop
xor
pop
imul
enter
fcmovu
ljmp
lods
mov
pop
push
scas
pusha
dec
add
movsl
sbb
mov
dec
test
xchg
outsb
or
mov
dec
push
inc
notl
ret
stos
call
or
pop
mov
lret
push
in
xchg
jmp
dec
inc
out
jns
pop
imull
cmpsb
mov
xchg
jns
push
cmp
dec
pop
and
cmp
movq
inc
fs
or
add
mov
sub
pop
clc
loopne
or
lods
and
jecxz
push
and
or
push
mov
mov
xchg
dec
xchg
and
loopne
fidivrs
shlb
daa
pop
xor
xorl
and
inc
into
jnp
mov
sub
xchg
into
andl
call
in
push
pop
inc
es
insb
and
and
in
fnstenv
bnd
arpl
pop
addr16
lods
and
jge
push
adc
stc
int
popa
enter
or
mov
xchg
add
fisubrs
test
imul
xor
jns
fs
hlt
lahf
dec
add
and
outsb
arpl
pop
xlat
mov
dec
lods
lret
sub
mov
cwtl
xchg
movsb
fucomi
cwtl
mov
add
outsb
fdivrp
lahf
xor
add
lock
rorb
outsb
imul
std
mov
push
fwait
cmpsl
jno
int
test
mov
mov
adc
sub
test
dec
movsb
mov
mov
fadds
mov
sub
bound
lret
bound
mov
jne
loope
mov
cmpsl
mov
es
push
mov
mov
mov
mov
xor
out
mov
clc
dec
test
mov
daa
loopne
cmp
push
lea
and
dec
loopne
ficoml
int
pslld
test
addr16
or
jmp
mov
pusha
imul
jns
mov
into
adc
sbbl
adc
xor
mov
ds
maxps
cmp
cmp
jnp
xor
mov
and
cmc
pop
daa
inc
dec
xlat
inc
adc
cwtl
mov
push
rol
adc
push
arpl
jle
das
mov
ja
xchg
out
fwait
icebp
lods
mov
add
jo
cmp
stc
xchg
or
dec
enter
adc
les
and
cmp
stos
jl
loope
lods
ja
sub
lock
lret
jnp
xchg
dec
mov
or
dec
push
xor
enter
and
inc
and
xchg
lcall
cmp
cmpsb
sbb
cmpsb
mov
push
ja
push
ss
dec
out
xor
pop
roll
enter
shll
and
in
jge
pop
xor
dec
push
pop
mov
lods
inc
xchg
lds
int
lret
das
movl
call
sarb
mov
adc
jnp
icebp
mov
mov
mov
repnz
mov
mov
out
inc
jnp
pop
cltd
and
mov
mov
add
mov
iret
popw
sbb
push
pop
dec
pop
mov
test
in
inc
push
push
mov
or
iret
push
test
xlat
je
fistpl
fnstsw
fsub
xor
dec
xor
cmp
inc
out
popa
jb
xchg
sbb
je
ds
jbe
das
xchg
sbb
cmpb
enter
out
pop
adc
dec
inc
push
xchg
popa
shrl
leave
into
fiaddl
lock
shr
es
sbb
ds
cmp
xchg
mov
xlat
cmp
loop
jg
cwtl
mov
popa
clc
mov
sub
test
les
lods
jp
popf
xchg
xor
mov
cmp
ret
insb
ret
cmp
loope
jg
jnp
shlb
test
mov
cmp
popa
sbbb
adc
jmp
std
aaa
das
repnz
dec
push
cmp
sub
adc
xchg
sub
outsl
add
xor
cmp
ljmp
nop
inc
sbb
outsl
jmp
fimuls
lock
aad
sbb
aaa
and
cwtl
test
mov
mov
outsl
mov
push
rcr
stos
inc
pmuludq
loope
enter
imul
shrb
push
mov
mov
enter
adc
lods
fcomp
cmpsl
push
xchg
and
mov
dec
mov
test
push
int
mov
movsl
hlt
mov
inc
adc
jmp
add
jp
shrb
adc
int3
outsb
fsubrl
insb
add
repnz
das
adc
xchg
sub
nop
cltd
dec
sbb
and
mov
icebp
stos
ret
push
aas
push
out
loope
and
jp
lock
pushf
push
adc
or
sbb
repnz
jp
fldl2e
push
out
jne
notb
ret
hlt
aaa
jge
cwtl
or
push
outsl
fisttpll
push
nop
fcmovne
pop
jle
std
xor
mull
jo
stc
xchg
popa
gs
imull
jmp
or
popa
pusha
lahf
jbe
xlat
xchg
fsubl
xor
pushf
in
sub
xchg
xor
mov
cld
out
push
hlt
cld
leave
xor
fnstenv
mov
icebp
xchg
mov
popf
xor
mov
ret
or
cmp
add
aas
push
inc
insl
add
or
lods
inc
or
xorl
movsb
in
mov
leave
sti
jle
stos
sbb
push
mov
inc
jmp
push
out
or
rcrb
and
pop
idivb
push
stc
sub
mov
push
push
lods
iret
popa
repnz
pop
jcxz
inc
idiv
daa
jmp
cli
scas
push
aaa
cmc
rclb
leave
jae
pop
arpl
dec
aas
es
push
mov
pop
enter
ror
xor
push
ret
scas
mov
xchg
loop
add
pop
add
jge
and
push
push
xchg
sub
dec
mov
sub
xor
push
cmp
add
mov
mov
push
js
dec
pop
fucomi
lea
mov
ret
idivb
mov
test
add
popf
les
xchg
add
xchg
xchg
push
loopne
imul
push
pop
idivb
add
pop
jae
out
mov
xchg
sub
mov
pop
sbb
fwait
mov
push
mov
sbb
dec
lcall
pop
int
mov
out
pcmpgtw
or
xchg
mov
xchg
dec
mov
movsl
fisubrs
sar
inc
stos
mov
inc
dec
ret
sahf
and
sar
mov
mov
sbb
mov
xchg
js
adcl
push
loope
fiadds
js
stc
jle
outsb
inc
or
fld
pop
iret
sub
sbb
ret
arpl
mov
jl
stc
xchg
inc
push
negl
lcall
xlat
clc
bound
fwait
out
lahf
pop
sub
jns
inc
adc
insb
popf
mov
push
lods
call
mov
fmull
cli
mov
mov
dec
inc
cmp
lahf
in
jl
sub
xlat
je
repz
mov
cmp
adcl
stos
mov
sahf
orb
int
pop
pusha
mov
rolb
fldl
nop
lods
fdivs
pop
push
dec
or
jg
or
mov
xchg
push
hlt
orb
aad
and
cmp
sbb
push
stos
pop
cwtl
mov
iret
xchg
fdivl
xor
or
test
andb
xchg
test
lods
ret
dec
in
idivw
gs
jno
mov
pop
pusha
fsubl
adc
mov
sub
lcall
int
jle
icebp
imul
stc
cmpb
xchg
push
pop
mov
adc
xor
mov
mov
jle
cwtl
jecxz
gs
add
mov
icebp
lea
rcrb
adcb
cmp
flds
cltd
jecxz
lret
call
js
stos
data16
push
lret
bound
fucomip
adc
xor
fldenv
lock
and
push
cmp
push
fwait
cmp
adc
push
sbbb
icebp
sbb
pop
leave
dec
push
sub
push
jle
pop
cwtl
jne
arpl
dec
add
fs
mov
xchg
test
cmp
sbb
clc
inc
push
popf
jae
xchg
mov
lods
and
xchg
or
lea
jo
pop
daa
jmp
xor
push
cmp
mov
insl
sti
insl
repz
xchg
les
dec
or
stos
sbb
std
xchg
push
je
cmp
sub
mov
xor
insl
cmpsb
ss
subb
fimuls
mov
dec
stos
sub
leave
adc
lret
subl
inc
push
ret
pop
and
add
test
mov
sub
call
and
sbb
cs
xor
lea
hlt
mov
adc
dec
xor
inc
inc
jl
lock
jnp
add
ja
ficoms
push
or
clc
sahf
mov
xchg
xor
hlt
mov
push
add
jecxz
push
adc
cmp
es
mov
cmp
cs
loope
int3
lret
sub
adc
inc
testb
lock
xchg
imul
iret
sti
and
iret
psubsb
stos
xor
adc
bound
jo
or
daa
fs
ss
jns
out
sarl
jecxz
or
sahf
into
hlt
and
push
out
inc
ja
das
pusha
jg
mov
movsb
cwtl
mov
dec
mov
inc
or
add
sbb
call
out
inc
xorl
mov
lret
jae
sub
sbbb
xor
bound
push
pushf
hlt
adc
testl
movsl
mov
sub
scas
mov
mov
push
sbb
rorl
mov
pushl
pop
adc
aam
movsb
mov
pop
popl
sub
sbb
mov
sub
pop
loop
or
mov
lock
push
mov
xlat
cmp
loop
pop
aaa
stos
xchg
rclb
mov
enter
mov
imulb
lret
sbbl
push
mov
and
xchg
aad
push
sub
enter
and
push
jno
push
push
test
adc
mov
and
lds
aam
aaa
clc
push
sub
sbb
push
and
icebp
xchg
inc
subl
push
pextrw
js
insb
adc
mov
sbb
sub
outsl
lea
add
pop
insb
push
pusha
add
mov
fisubrs
or
cmpsl
jge
push
pop
outsb
mov
call
add
or
incb
aaa
xchg
xor
ret
pop
stc
adc
add
sahf
push
lods
testl
shlb
sub
push
adc
sbb
pop
subl
popf
not
inc
pop
mov
sarb
mov
sub
shr
repz
add
maxps
repz
ds
push
xor
dec
out
sub
mov
dec
lahf
lods
jle
pop
mov
gs
mov
xor
outsl
shrl
push
xchg
lret
jbe
sub
xchg
mov
das
pop
jne
pop
lahf
mov
add
xchg
in
aas
outsl
inc
es
pop
jge
shr
inc
fidivs
adc
ror
stc
je
adc
les
lods
shlb
mov
inc
lahf
mov
jo
iret
lahf
pop
mov
inc
cmovle
repnz
icebp
and
gs
cmpsl
cmpsb
xchg
mov
loope
out
lods
shlb
aaa
push
jl
sbb
sti
cld
xchg
xor
add
jnp
or
fs
mov
sub
scas
cwtl
das
loope
in
into
or
data16
stos
xchg
fldt
and
pop
in
cmp
adc
add
add
push
movsl
jne
sbb
push
lea
cltd
movsb
cmp
push
or
push
scas
mov
sbb
xor
ja
daa
push
sbb
inc
rolb
and
mov
es
inc
sbb
dec
pop
push
in
cmp
scas
add
daa
dec
mov
mov
outsb
sbb
xchg
popl
sub
data16
bound
repz
or
popf
push
sub
stos
aaa
and
popa
scas
std
in
int
add
mov
or
mov
sbb
flds
jle
loop
adc
fcoms
and
std
cmpsb
cmc
or
pop
fisubrl
mov
fimull
insb
and
nop
call
add
fdivrl
int
mov
das
pop
push
xlat
sub
xorb
sbb
jecxz
lret
popf
xor
mov
lock
sarb
imul
push
imul
inc
sti
jo
add
cmp
jo
inc
es
stos
dec
iret
in
adc
std
popa
int
sbb
cmp
or
mov
push
lock
mov
add
add
leave
mov
or
mov
aad
adc
pop
push
and
frstor
xchg
dec
dec
je
push
ret
aas
push
jns
push
or
push
adc
pop
add
and
sub
sbb
adc
cmp
add
addr16
adc
das
adc
mov
mov
lock
jle
shr
sbb
ror
ret
inc
sub
cld
addl
imul
ret
mov
jmp
repnz
adc
repz
dec
stos
cltd
stos
filds
lret
jae
cmp
inc
mov
adc
popf
pushl
int
stc
and
mov
mov
scas
ret
pop
jp
cmp
inc
nop
outsb
decl
xchg
add
sub
addr16
push
mov
inc
sti
cmp
test
inc
outsb
mov
fs
les
out
stos
fwait
shll
insl
loop
outsl
dec
mov
xlat
jge
enter
cmp
jo
or
mov
push
or
inc
cltd
std
mov
divb
jg
pushf
sbb
popl
cwtl
mov
mov
je
scas
jne
adc
inc
scas
test
loope
mov
or
cmp
mov
push
mov
add
mov
xchg
or
aam
mov
and
jae
je
lret
inc
mov
imul
add
dec
pop
push
adc
cmp
adc
pop
jo
sbbl
clc
and
lods
test
xor
push
lock
out
and
insl
jge
test
pop
xchg
sub
cmp
mov
or
and
add
aaa
std
les
xor
loop
in
push
mov
insl
and
jns
nop
lods
pop
add
adc
ja
push
and
xor
xchg
shl
fnsave
jl
sub
and
push
cmc
lret
cmp
out
dec
stos
inc
cltd
mov
pusha
pop
stos
pop
mov
jns
push
inc
sub
mov
lock
mov
les
or
dec
in
in
ds
adc
push
ret
cwtl
in
cwtl
pop
in
ja
cmp
ljmp
jnp
dec
add
push
pop
add
in
js
inc
or
sbb
sbb
frstor
mov
jmp
inc
pop
jb
push
ds
fnstenv
popa
repnz
xchg
test
jl
imul
gs
mov
push
pop
xchg
clc
adc
das
dec
sub
mov
pop
mov
sbb
xchg
and
leave
inc
adc
push
inc
inc
loope
mov
cld
arpl
shll
or
push
xlat
pop
out
pop
sub
sub
ja
sub
enter
xchg
jp
cmp
adc
fwait
cmpsl
andl
sbb
das
pop
pop
cmp
mov
cli
or
in
aaa
xchg
iret
gs
out
inc
test
or
cmc
test
dec
int
mov
dec
sbb
insl
inc
daa
arpl
xchg
dec
fucomi
jge
rcrl
sub
xchg
cmp
enter
movsb
cmpsl
rcl
jl
movsl
jecxz
or
push
enter
mov
call
fwait
addr16
mov
mov
stc
test
and
xchg
and
fidivrl
jmp
call
cmpb
cmp
cld
pop
add
fwait
sahf
pushf
pop
cwtl
lods
push
mov
jo
or
ds
mov
jmp
stos
push
jge
cmc
mov
lea
inc
inc
mov
mov
jg
inc
add
arpl
pop
xchg
pop
mov
shll
mov
hlt
push
hlt
xchg
fs
adc
lahf
jb
sbb
rcrb
mov
xor
push
dec
in
stos
fucomip
and
adc
xchg
jecxz
push
cmp
aam
lret
pop
cmp
inc
insb
xor
inc
inc
pop
int3
push
out
add
mov
repz
mov
mov
in
sahf
xor
dec
lods
mov
inc
xchg
fildll
cwtl
fbld
jg
mov
aam
mov
sub
jp
ret
sub
aas
cmp
stc
out
rcrb
push
mov
fldt
cmp
mov
std
andb
adc
daa
jno
adc
mov
sbb
push
jbe
ds
int3
push
and
in
scas
jmp
mov
dec
fwait
ret
mov
jno
mov
lea
sub
mov
adc
addr16
les
sti
mov
mov
sarl
push
in
aaa
mov
lahf
pop
push
add
jae
int3
mov
sbb
sbb
scas
push
outsb
ljmp
dec
jg
in
loopne
sbb
jmp
sbb
jp
push
sbb
test
mov
stc
mov
push
stc
test
or
popa
cmp
outsl
mov
dec
xor
imul
pop
xor
cmp
fsubrs
shl
mov
and
sbb
pop
and
dec
mov
ss
pop
cmpsl
jge
lea
mov
sbb
sbb
push
or
loopne
inc
jecxz
cmc
adc
orl
xor
scas
xchg
mov
lds
add
push
orl
cltd
mov
into
cli
sbbb
mov
insl
movb
or
jecxz
push
insb
sbb
and
lea
es
imul
xor
lods
xchg
or
lret
icebp
add
scas
or
shrb
loope
cld
adc
shll
rcr
cmp
test
imul
lds
aad
fwait
notb
rolb
lea
xchg
stos
xor
cmpsb
mov
push
or
push
sub
stos
xchg
ret
movsb
xchg
ja
ljmp
fs
inc
dec
mov
movsb
sbb
mov
push
or
cmpsb
cmp
ret
and
mov
outsl
mov
xor
add
push
xchg
scas
repnz
int
call
push
adc
loope
sarl
int
cmp
pop
sbb
sbb
inc
pop
and
mov
xor
add
daa
frstor
mov
cmp
mov
xchg
in
out
inc
inc
sub
leave
sbb
or
inc
cmc
shrb
xchg
negb
in
mov
or
inc
testb
xlat
cmp
mov
push
ja
jae
addr16
pop
es
call
aad
cmpsb
clc
add
ss
dec
mov
filds
les
movsb
into
gs
inc
fildll
mov
push
clc
mov
mov
and
int
cmpsl
ds
stos
cmp
pop
mov
push
mov
shrl
sar
fnstcw
into
lahf
sub
add
cmp
out
and
jbe
add
xor
pop
scas
mov
jge
pop
cltd
lods
mov
xor
or
scas
pop
lahf
cmpsb
lcall
mov
dec
and
frstor
out
dec
pop
sub
sahf
jo
shlb
inc
lods
xchg
repz
cmp
test
and
cmpsb
adc
xor
or
icebp
cld
ljmp
add
mov
and
push
loop
aas
leave
sti
add
pusha
inc
fcoms
ret
pop
pushf
pop
lahf
ret
loop
les
add
adc
inc
and
je
ret
jge
enter
adc
mov
daa
std
jb
xor
ja
sub
in
fidivs
stos
xchg
fdivrl
dec
jmp
movsl
cli
mov
filds
scas
mov
insl
or
xor
or
mov
mov
aam
out
add
popa
cwtl
mov
arpl
mov
ss
nop
inc
mov
shrl
pushf
popa
clc
xlat
ja
aad
sbb
xchg
mov
inc
aam
into
jo
add
push
sub
jmp
xchg
ja
sbb
dec
xlat
adc
test
cmp
int3
int3
in
mov
mov
enter
mov
inc
sbb
lret
lret
hlt
cli
dec
mov
sarb
adc
mov
mov
adc
xchg
push
sti
cmp
and
es
push
fwait
jns
or
cmp
test
push
in
add
out
call
or
jge
inc
xlat
loop
rcll
mov
fdivrs
in
sub
xchg
dec
mov
cmp
cmp
adc
fcmovu
out
std
lea
xor
sub
sti
int3
mov
pop
mov
jae
ds
mov
cltd
adc
jns
loopne
dec
outsb
clc
jp
and
pushf
out
jp
inc
inc
xchg
in
dec
push
sbb
cmpsb
dec
daa
sarl
fldenv
cwtl
fisttpl
lahf
in
rcl
loopne
add
mov
or
pop
loopne
inc
cmpsl
jns
mov
ljmp
xor
jnp
ljmp
xor
fsubrp
jno
inc
inc
pop
sub
icebp
jb
inc
pop
pop
cmp
add
sbb
inc
xchg
mov
dec
loopne
ss
jmp
ret
inc
mov
in
out
sbb
loopne
je
cmp
dec
loop
inc
sub
lret
shrl
mov
aad
jne
fbstp
adc
mov
push
test
xchg
cmpsl
inc
xchg
jle
jo
add
inc
push
in
sahf
adcl
cmpsb
jae
roll
scas
mov
jp
fistps
or
sahf
ja
stc
push
push
ficomps
mov
mov
scas
out
lret
push
inc
sahf
mov
fcomip
out
out
scas
cmp
mov
ja
popf
jge
fnstsw
ret
pop
movsb
fs
or
xchg
xor
addr16
sbb
mov
idivl
test
and
fcmovu
outsb
es
jp
adc
mov
mov
test
xchg
es
cmp
or
add
sbb
or
pop
movsl
rorb
mov
enter
cmp
lcall
es
in
sbb
jle
pushf
jo
adc
sbb
inc
in
jp
lea
in
add
negb
jne
arpl
or
xor
lods
mov
jno
xchg
das
push
sub
out
and
pop
fnsave
popf
and
iret
sub
jl
mov
in
xchg
movsl
hlt
sbb
xor
loop
mov
xor
xchg
stos
jb
adc
adc
popa
stos
stos
inc
inc
pop
mov
pop
mov
stc
pusha
int
stc
xchg
mov
fldenv
loopne
and
adc
cs
outsl
mov
jb
pusha
cmpl
test
cmp
mov
pop
mov
pushw
sub
push
sahf
and
out
cmp
pop
ja
push
test
inc
sub
call
loopne
or
shll
xchg
addr16
stos
movsb
roll
and
repnz
and
mov
negb
dec
push
sub
rol
xor
jnp
cmc
int
pushf
stc
sbb
or
dec
mov
jge
xor
adc
filds
into
mull
mov
adc
fucompp
int3
les
test
push
cmp
repz
or
or
xor
or
fcom
ret
or
jmp
aam
hlt
cmp
in
xlat
add
mov
negl
sbb
ret
pop
lds
or
iret
xlat
data16
push
cltd
test
pop
hlt
and
lds
or
and
rcrl
jg
dec
hlt
pop
movsl
roll
fildl
sub
movsb
adc
jb
lret
scas
mov
lret
mov
and
dec
jge
dec
inc
fwait
jg
and
push
in
loopne
mov
xor
in
scas
aam
cmpsb
std
mov
ss
mov
sbb
push
mov
in
std
jno
bound
dec
push
outsl
push
sbbl
and
xchg
dec
cmp
cmp
mov
sbb
push
pop
xorl
test
and
movsw
aas
mov
or
xor
popa
jmp
sahf
or
inc
mov
cmp
sub
jmp
movb
fisubrs
inc
lcall
mov
jae
jp
jb
insb
scas
mov
cwtl
out
jae
stc
imull
sbb
fsubrs
xchg
ret
mov
in
dec
aad
int
dec
jns
dec
imul
sub
in
in
mov
jb
adc
cli
test
subb
lods
fldenv
add
jnp
adc
xor
push
ljmp
jno
dec
xchg
cmp
imul
mov
cmp
shrb
mov
adc
jno
xor
imul
inc
xchg
push
repnz
sti
adc
xor
jle
hlt
push
pop
repz
fpatan
inc
gs
xchg
xchg
addr16
sbb
test
cmp
push
movsb
mov
or
jle
lods
scas
test
mov
fists
lea
xor
mov
adc
stc
pop
or
dec
mov
mov
sbb
inc
rorb
mov
inc
sub
cs
sub
fiaddl
frstor
frstor
mov
jge
imul
daa
lcall
call
adc
inc
test
stc
call
ljmp
pop
shlb
sub
in
mov
ret
shl
sbb
adc
fnstenv
fs
adc
sub
xchg
sub
movsb
mov
jbe
shll
mov
es
push
loop
shlb
fnstcw
xor
push
jecxz
insl
mov
aad
rcl
and
mov
jp
in
shrl
add
xor
sbb
inc
fstpt
cmc
mov
dec
sbb
bound
add
push
in
cwtl
or
xor
popa
outsb
mov
pushf
aaa
aam
xor
jmp
stos
xchg
mov
jnp
mov
int
and
fucomi
std
daa
inc
or
mov
pop
and
push
jp
push
mov
int
jne
sahf
xor
pop
dec
ljmp
testl
pop
mov
push
xor
stos
sub
cltd
fidivrs
xchg
dec
bound
ss
mov
push
inc
mov
or
cmpsl
shll
adc
or
jle
sub
ja
cmp
shrb
bound
cs
daa
int
push
lock
cli
dec
ss
push
pop
pushf
test
add
mov
popa
cltd
and
jg
aaa
lea
test
out
xchg
enter
mov
add
push
addr16
pminsw
enter
jmp
insb
aaa
jmp
sbb
insl
adc
sbb
jne
inc
cmp
into
dec
mov
mov
pop
dec
and
add
sub
xchg
es
jge
jmp
mov
js
mov
scas
mov
sti
push
test
add
xor
pop
jecxz
ja
push
fwait
xor
arpl
xchg
sub
icebp
test
scas
and
mov
mov
jge
imul
inc
fwait
lahf
inc
in
xor
loopne
stc
aad
ret
cmp
mov
frstor
mov
sbb
ja
mov
loope
mov
sub
cmpb
fistps
mov
jecxz
test
stc
lcall
pop
dec
mov
inc
enter
arpl
adc
mov
inc
mov
mov
leave
fistl
rcrl
mov
push
xor
gs
push
lea
mov
stos
inc
pusha
jle
jne
sar
jp
test
adc
cmp
ljmp
cwtl
and
mov
pop
inc
cmp
mov
fsubrp
inc
sahf
lret
jecxz
cmp
mov
dec
jge
repnz
cld
mov
push
sbb
or
xchg
daa
cli
js
dec
mov
ffreep
shrl
js
mov
jge
xor
movsl
or
adc
push
adc
insb
stos
lds
fs
out
int3
pop
pop
loop
cli
cmp
int
xlat
hlt
push
mov
sub
sub
jae
mov
mov
loopne
xchg
sbb
jmp
or
pop
shr
xchg
xchg
mov
mov
outsb
push
cmp
mov
dec
xchg
addl
add
shlb
and
pop
in
icebp
ljmp
bound
fnstcw
test
mov
pop
out
jbe
push
or
sahf
cpuid
jmp
lea
pop
mov
add
xorb
mov
in
sub
xchg
mov
cmp
test
fiadds
jle
rclb
inc
add
sub
pop
repz
fnstcw
sbb
mov
clc
lock
popf
adc
dec
mov
and
sbb
cmpsl
xor
push
cs
sbb
or
das
push
cmp
inc
xchg
sub
jmp
sub
dec
out
outsl
jmp
dec
push
pop
and
push
shl
xor
loope
mov
dec
cmc
push
adc
pop
dec
lea
fisttps
dec
and
push
xlat
mov
and
pop
xor
outsb
aad
cmp
fisttpll
xlat
lahf
nop
dec
fldcw
icebp
dec
orb
divb
insb
sbb
and
data16
pop
fdivs
movsl
fiaddl
in
rorb
pop
cli
insl
getsec
arpl
push
inc
stos
add
sub
std
lods
dec
stc
insb
out
cmp
arpl
push
mov
movsb
and
test
enter
call
ss
cmp
mov
cmc
pop
lods
inc
pop
xlat
pop
jbe
in
jl
sbb
test
mov
mov
test
push
fcmove
xor
xchg
and
xor
sarb
pop
loopne
and
jne
dec
cmpsl
mov
and
dec
push
jp
lret
in
divl
outsl
mov
xchg
push
mov
icebp
push
cmp
sub
cmp
sub
out
aad
adcb
xchg
jmp
scas
push
xor
mov
sub
arpl
xor
lret
test
mov
mov
lea
inc
insl
push
push
jmp
ror
nop
push
das
inc
lds
and
cmp
mov
stc
popf
fwait
adc
into
jnp
mov
push
lds
mov
lret
mov
jns
lret
sub
adc
pop
rcll
xchg
aam
xchg
sub
in
dec
mov
aad
orl
stos
out
xchg
adc
pushl
enter
inc
push
shl
cs
dec
rorb
je
mov
pop
xlat
test
dec
cmpsb
dec
jo
arpl
scas
inc
lahf
push
xorl
movsb
in
cli
xchg
int
loop
mov
insl
imul
inc
out
arpl
js
push
jbe
sub
mov
inc
stos
stos
sbb
ret
fstpl
jecxz
fstps
add
pop
or
pop
pop
imul
xchg
in
or
adc
loop
jg
ljmp
cmp
repz
fisubrl
add
xor
mov
jp
cmp
dec
and
stc
inc
movsb
nop
insb
pop
gs
aas
mov
adcb
xchg
mov
sbb
movsb
mov
rolb
jle
or
outsl
mov
cli
daa
loop
pop
xchg
adc
mov
xchg
jl
push
push
adc
mov
pushf
shlb
cmpxchg
and
stos
dec
js
out
adc
sbb
add
inc
xor
jecxz
push
cmp
and
xchg
mov
pop
in
pop
sub
jnp
lods
push
jge
loopne
mov
aaa
test
adc
aas
mov
clc
add
ds
aaa
xchg
in
cmp
inc
ljmp
jno
inc
cltd
mov
out
push
mov
lret
jnp
adc
dec
mov
call
xchg
mov
xchg
mov
jo
mov
and
std
loopne
fmulp
dec
add
xor
scas
insl
mov
mov
call
dec
es
int3
fbld
out
cmpb
mov
inc
data16
lahf
push
ja
xor
xor
rcl
jl
mov
lea
inc
pusha
push
shrb
aas
add
lret
and
pop
push
cmpsl
sbbb
fucom
iret
pop
sub
xor
adc
cwtl
cmp
jmp
int
xor
mov
clc
jg
mov
repnz
repnz
and
mov
lock
add
fdivrp
lea
sub
mov
divb
pop
pop
scas
lea
les
sub
pop
repz
cmp
adc
mov
adc
aaa
stos
les
xchg
subb
dec
sahf
pop
fiaddl
jle
sub
ret
fs
sbb
loope
mov
imul
xchg
scas
shl
repnz
push
jae
arpl
mov
push
dec
inc
push
jge
aas
dec
out
xchg
push
in
pmullw
adc
xchg
dec
repz
or
vmovsd
ret
jge
outsb
int3
test
cmpl
pop
movsl
cltd
fcoml
mov
push
jne
mov
mov
in
call
mov
cmp
sub
hlt
or
pop
push
call
test
fwait
add
inc
popf
push
sub
push
and
mov
inc
repnz
cli
mov
dec
cmp
rolb
and
jmp
inc
inc
sbb
adc
dec
enter
push
jb
clc
out
sub
fnsave
or
add
sbb
push
ss
test
push
repz
out
xor
jp
test
aas
mov
push
pop
lcall
and
aam
inc
xor
cmc
adc
mov
lret
es
imul
mov
ljmp
cmp
cmp
pop
xchg
inc
lods
jp
lds
sti
or
inc
cmc
shrb
push
push
hlt
lgs
mov
mov
push
outsl
mov
mov
testb
add
add
dec
pop
cmp
out
lret
bound
test
jmp
or
ss
push
rclb
aaa
ja
pop
adc
inc
loope
xchg
push
or
testb
rcll
mov
dec
loop
mov
imul
cmp
aam
or
mov
dec
je
sbbl
jns
xor
mov
icebp
xor
in
fwait
rcr
daa
mov
cmpsb
repnz
rolb
mov
subb
hlt
pop
dec
ds
adc
data16
cmpsb
add
fnstsw
test
or
xor
push
loopne
out
cmp
rorl
mov
inc
add
popa
push
fwait
jb
out
and
sbb
xor
jge
or
mov
mov
push
clc
jg
mov
add
pop
iret
clc
or
and
cmp
jg
add
jb
adc
popf
xor
rcrb
scas
int
mov
inc
in
or
push
add
xchg
movsl
sarb
jns
add
outsl
pop
sahf
loopne
inc
xor
pop
or
pop
loopne
in
xor
mov
pop
push
scas
sarl
add
out
fidivl
arpl
shll
push
add
push
outsb
mov
add
hlt
mov
mov
lahf
or
mov
rorl
repz
inc
xor
and
push
enter
jp
pushf
pop
mov
xchg
add
and
fadds
int
sub
add
jecxz
je
dec
xlat
aaa
into
enter
cmp
cmc
push
or
int3
or
mov
sub
push
cltd
sub
leave
scas
inc
aad
add
call
push
cmp
cli
out
arpl
push
or
sbb
outsl
lcall
ja
jg
or
sbb
pop
ret
ficoml
mov
aaa
jbe
jne
ja
cvtps2pi
mov
daa
call
gs
pushf
insb
movsl
jmp
cmp
dec
fcoml
nop
in
push
sub
push
and
aad
andb
pmuludq
dec
jecxz
imul
push
sti
scas
jge
pop
sbb
xor
jl
pop
out
insl
push
xor
out
push
test
jge
in
stos
xor
js
out
jle
test
xchg
sbb
mov
jl
out
movsb
push
or
sub
test
or
cmp
daa
cmp
bound
ror
mov
sub
insl
add
mov
or
mov
mov
arpl
xor
adcl
pop
jge
dec
in
mov
test
jns
cwtl
push
jae
cs
and
pop
adc
jge
imul
xchg
pop
stos
add
sub
dec
add
dec
out
cmp
fiaddl
push
popf
lods
sbb
lahf
push
addb
pop
mov
int
or
inc
xor
push
scas
or
or
cmp
xchg
sbb
leave
in
out
cmp
jne
xchg
cmp
sub
in
xchg
stos
lods
inc
push
xchg
int
cmp
dec
outsl
cli
decb
pop
rolb
fimuls
fsubrl
in
daa
ret
jno
mov
popa
lods
int
aas
and
cld
adc
mov
mov
mov
mov
in
aaa
push
mov
into
pop
sbb
inc
stos
cmp
pushf
mov
push
ret
fldcw
mov
stos
or
lock
test
fs
and
fdivrs
adc
lods
mov
dec
pop
rcrl
fsubrs
xchg
inc
dec
and
imul
aam
push
leave
pop
push
add
jne
xchg
push
jmp
ljmp
lahf
mov
add
rcr
cmc
or
mov
hlt
notl
mov
sahf
xor
stos
hlt
popf
fidivrl
or
sub
ds
cmp
pushf
outsb
sbb
daa
jno
jl
jns
push
outsb
out
lcall
cmpsl
fcomp
and
sbb
pop
cmc
fs
test
int
xor
scas
add
and
cmp
fnstsw
out
jns
leave
dec
jnp
adc
pushf
mov
mov
in
jge
orl
jnp
ljmp
mov
and
dec
xchg
sub
cmp
stc
mov
push
mov
mov
mov
mov
sbb
jle
inc
or
movsb
mov
xchg
push
flds
add
jl
pusha
negl
loopne
sub
mov
insl
jg
add
and
sbb
push
jg
mov
xchg
pop
out
xchg
addr16
mov
clc
stos
out
inc
int3
xchg
test
movsb
xor
sub
push
lds
push
jno
dec
enter
imul
xor
or
int3
lret
mov
push
jb
push
in
outsl
cmpl
jne
pop
mov
sub
mov
rcrl
jnp
js
jno
adc
flds
pop
orl
add
dec
fimuls
out
pop
ret
or
jp
inc
subb
xor
cmp
and
xchg
pop
inc
ja
jbe
sub
cmpsb
and
jno
xchg
cmp
ficomps
les
pop
hlt
pushf
cs
mov
iret
pop
aas
jbe
xchg
push
lock
lret
cwtl
cld
shrb
cli
imul
jle
pop
sub
inc
mov
mov
pop
mov
fildl
iret
imulb
daa
mov
lods
das
mov
mov
jnp
pop
xor
add
call
call
push
mov
movq
int3
in
sub
push
mov
cmp
adc
pop
or
mov
pop
jmp
mov
jg
clc
insl
jmp
leave
or
lods
cmp
mov
mov
mov
mov
mov
and
mov
adc
or
jno
xor
pop
cmp
add
movsb
dec
bound
add
sub
mov
in
stc
enter
popf
dec
push
dec
repnz
and
inc
cmpsb
cld
cmp
pop
aaa
mov
sahf
pop
outsb
push
mov
dec
pop
cmp
in
das
dec
adc
push
bound
scas
xor
pop
push
repz
pop
mov
xor
mov
sbb
xlat
push
int3
outsb
add
lds
xchg
xor
or
lods
daa
pop
or
dec
in
fnstenv
insb
add
leave
mov
ja
inc
out
lret
xor
enter
out
sub
repnz
fsts
mov
jae
aad
cwtl
mov
mov
mov
lods
fistpl
mov
lcall
cli
push
into
cmpsb
push
sbb
sbbb
mov
jp
xchg
stc
or
cmp
nop
aas
aas
xchg
push
and
push
fistpl
out
jnp
test
out
lret
push
out
lahf
mull
cltd
cs
sahf
imul
and
gs
xor
dec
stc
cwtl
push
mov
ud0
xchg
dec
pop
lahf
pop
aaa
in
inc
sub
icebp
dec
imul
xchg
test
sbb
sub
fwait
lcall
cwtl
in
adc
jne
dec
mov
lcall
and
mov
adc
mov
cwtl
or
cli
sbb
xchg
shrb
lods
xchg
adc
mov
incl
dec
inc
sti
pop
test
pop
es
iret
nop
adc
test
call
scas
and
push
mov
enter
sub
iret
aam
popa
cltd
xor
push
inc
shl
or
outsb
adcb
push
mov
jnp
sub
cwtl
xorl
icebp
insb
ljmpw
rcrb
pop
imul
or
test
xlat
xchg
jmp
lret
ret
gs
or
push
adc
aas
adc
idivb
dec
or
cmp
rcr
pop
adcl
mov
or
mov
mov
sub
push
pop
lea
sub
mov
push
or
or
outsl
inc
insb
iret
add
and
jbe
jb
aad
bound
repz
iret
cmp
mov
pop
and
push
jle
add
sar
xchg
ja
movsb
xchg
negb
fcmovnbe
rol
dec
popa
arpl
adc
scas
lret
ftst
cmp
lods
push
cltd
jae
and
mov
mov
fldcw
stos
das
pushf
gs
jg
xorb
stos
xchg
std
aam
cwtl
sub
ja
ret
test
inc
sbb
rcll
iret
jbe
ja
test
mov
shrb
in
int
leave
mov
jge
testb
mull
dec
push
xchg
sbb
jb
or
fbld
iret
push
sub
pop
aas
or
pop
rcrl
mov
mov
out
xchg
mov
inc
loop
mov
fdivl
nop
out
or
outsl
js
ds
mov
sbb
cmp
jo
inc
inc
sbb
mov
jae
sub
test
popf
stc
enter
ss
push
xor
xchg
inc
inc
fldenv
push
popf
push
adc
xchg
mov
loop
jns
into
ljmp
imul
mov
or
adcl
push
lds
out
and
jge
icebp
popl
or
dec
sahf
push
inc
and
sbb
add
pop
cli
incl
xchg
imul
lret
arpl
xchg
cmpb
loopne
or
imul
push
repz
repnz
outsb
and
mul
lds
dec
fwait
xor
int3
dec
or
pop
mov
pusha
sub
loopne
rorb
fistpll
lret
xchg
std
xor
add
dec
jecxz
xor
ja
nop
ds
popf
jp
sbb
pop
mov
mul
mov
in
mov
sbb
push
mov
lret
xchg
inc
out
mov
int
mov
pop
xchg
outsl
push
fstpt
dec
dec
scas
lods
stc
cmpsl
imul
jb
and
jmp
add
stc
sbb
aaa
inc
jmp
inc
add
jb
push
stos
or
cmp
mov
stos
xchg
or
cmpsb
sub
jns
shll
jae
in
test
ja
in
insl
pop
adc
cmp
jne
mov
les
int3
das
addr16
in
outsl
push
jp
repnz
adc
add
aam
sti
movsl
add
daa
sub
pop
iret
out
dec
sbb
call
aam
sbb
ss
sbb
cmovbe
out
jnp
sub
fsubr
addr16
mov
cli
push
and
xchg
jno
dec
mov
cmp
push
mov
sti
or
insb
cmp
popf
mov
cmp
sub
mov
xor
inc
mov
outsl
out
test
add
notb
out
dec
xlat
lret
push
pop
lock
cmp
jp
push
fstpl
cmp
sub
add
sti
jno
int3
lret
and
mov
rcl
pop
arpl
pop
jecxz
gs
arpl
pushf
adc
faddp
sub
fisttpl
inc
sbb
xchg
in
nop
mov
shl
arpl
cmpsb
jge
fcmovnb
rclb
sbb
push
push
mov
jp
jle
out
and
xor
mov
inc
loopne
jo,pt
mov
lret
jp
push
test
mov
cmpsl
cltd
ficoms
cmc
mov
nop
jl
jecxz
inc
dec
pop
ljmp
sbb
jne
sub
loop
jne
sbb
push
and
sbb
lock
movsl
ficoml
inc
mov
scas
cmp
mov
fwait
jecxz
inc
clc
sbb
sbbb
subb
add
leave
mov
and
mov
inc
scas
xor
xor
das
and
and
insl
cwtl
cltd
and
rcr
popa
sub
sbb
push
pop
cmpsl
jbe
daa
mov
loopne
nop
sbbl
outsl
jmp
dec
lds
inc
lcall
imul
mov
inc
mov
das
sahf
cmp
push
adc
mov
sbb
push
sbb
test
dec
and
mov
outsb
leave
mov
das
add
bound
ja
push
jmp
into
aad
nop
xchg
lods
mov
movsb
idivl
pop
pop
mov
cmp
sbb
notb
mov
adc
lea
dec
cmp
or
ja
xchg
mov
data16
push
or
adc
mov
cmp
pop
mov
fwait
lock
xor
push
pop
jno
lret
pop
repnz
lods
jge
into
popa
clc
adcl
jge
mov
sbb
jmp
shll
data16
pop
testb
stc
test
ret
shrb
test
xchg
sub
cmpsl
push
sbb
sbb
push
ja
or
cmp
sahf
mov
cld
in
or
adc
shrb
cmc
stos
in
aad
xor
bound
sbb
adc
fbstp
mov
sbb
ficompl
add
mov
xchg
ds
testl
andl
pop
cld
aam
sub
fwait
dec
xchg
in
movsb
sti
cmp
jge
mov
push
and
add
mov
loopne
sub
andb
cmpsl
cs
ds
adc
repz
or
movsb
movsb
xchg
mov
rcrl
pop
adc
or
lcall
leave
jno
sysexit
pop
cltd
clc
or
stos
mov
jp
push
fxam
fwait
jecxz
cmc
out
test
jbe
dec
sbb
lahf
fbld
sub
out
cmp
lret
movsb
aaa
icebp
dec
hlt
ja
pop
xchg
lods
andl
xor
sbb
sbbb
imull
stos
pop
in
jp
test
lods
mov
push
mov
pop
idivb
mov
push
rcrl
in
cmc
xor
inc
pop
sahf
ja
mov
sarb
outsb
pop
xor
out
sarl
jmp
mov
mov
hlt
add
sbb
sub
or
sti
fisubrs
vorps
cmpsb
xchg
dec
push
movsb
aam
aad
subb
scas
inc
repnz
inc
insl
mov
aas
push
jle
mov
test
bound
js
jge
jecxz
out
xor
bound
fnstenv
stos
and
pop
push
pop
aaa
ffree
pop
addr16
out
cli
mov
imul
lds
data16
sbb
jl
jp
pop
test
rorl
test
test
repnz
sub
ficoml
xor
in
imul
jge
mov
cmp
rcl
push
dec
rol
jnp
inc
dec
pop
mov
in
aaa
int
rcll
xor
test
adc
jae
xor
xchg
mov
into
test
or
out
add
pop
push
push
roll
cmpb
push
cmp
push
xchg
mov
push
dec
pop
jns
cmpb
mov
fisttpll
pop
fisubs
test
pop
jb
jno
rcll
fidivl
jnp
xor
outsb
cmp
scas
divl
aam
imul
add
inc
mov
data16
adc
adc
and
sbb
sub
insl
xor
and
push
add
inc
loop
movsl
mov
xlat
pop
in
js
jge
lds
les
ror
add
test
test
jne
xchg
fistps
xchg
jne
lret
and
cmc
movsb
mov
shlb
add
pop
out
sbb
stos
xchg
pushf
jl
stos
push
xchg
loopne
jg
pop
test
mov
into
lods
push
rorl
fstpl
xor
mov
xchg
test
add
mov
and
inc
mov
inc
add
aam
mov
insb
sbb
daa
mov
adc
push
jmp
int
mov
mov
xchg
push
mov
adc
lahf
inc
mov
idivl
test
push
inc
add
das
cmp
popa
addr16
cmp
mov
xor
xlat
jmp
das
xchg
inc
dec
push
lods
shlb
xchg
sbb
pusha
jl
cmp
fsubrs
iret
and
push
inc
sbb
outsl
cmp
mov
sbb
mov
sbb
xchg
orl
push
pop
mov
repnz
adcl
popf
pop
pop
sub
mov
sbbb
outsl
jge
jns
xor
jmp
cltd
mov
cmp
xorb
xchg
mov
sbb
insl
inc
ret
std
or
fsincos
out
stc
inc
jae
dec
pushf
mov
lret
pop
hlt
imull
or
imul
loop
xlat
dec
aaa
mov
or
scas
xchg
mov
js
dec
mov
lcall
pop
aad
xchg
push
repz
test
outsb
shlb
mov
push
or
push
aas
jmp
fldl
inc
jae
push
xor
dec
popa
push
data16
out
cltd
push
mov
push
pusha
loopne
shl
xchg
inc
and
mov
jnp
outsb
adc
add
xor
lea
scas
xchg
js
enter
lahf
daa
stos
shrb
and
mov
and
mov
add
out
cwtl
inc
stos
cmp
dec
xor
fcoms
add
xchg
mov
or
pop
jge
or
out
jns
in
dec
cmpsl
aas
push
fldcw
shrb
negb
icebp
push
add
test
dec
mov
fadds
addr16
decb
ja
push
dec
filds
push
fldcw
fwait
int3
int
ds
adc
pop
jne
jae
cmpsb
add
or
push
cli
push
or
push
fbstp
out
and
mov
out
mov
dec
add
inc
sbb
jp
fbstp
dec
adc
lods
arpl
cmp
fmulp
jnp
test
lret
mov
addr16
adc
adc
sbb
jle
jae
addr16
mov
popf
push
mov
dec
mov
in
popf
sub
inc
mov
cwtl
xor
inc
pushf
or
test
push
out
lahf
aas
push
out
sbb
lahf
jp
inc
inc
xchg
sub
mov
movsb
lret
cmp
lods
adc
adc
dec
repnz
sti
cwtl
iret
mov
ret
cmpsb
sub
dec
pop
repnz
das
ret
xor
cmp
in
jg
sub
aaa
ja
xchg
push
push
sub
loope
mov
out
nop
iret
data16
aaa
pop
xor
std
push
addr16
mov
xchg
mov
dec
dec
cmp
popf
dec
int3
aaa
pop
lahf
addr16
xchg
pop
sbb
int
lahf
js
rorl
push
mov
js
mov
sbb
jno
lods
mov
or
or
andb
ds
xchg
mov
nop
xchg
outsl
stos
lea
mov
popa
sbb
mov
lock
push
test
cmp
xchg
xor
mov
jmp
jne
adc
pop
mov
cmp
cmpsb
lds
push
subb
lret
outsb
inc
pop
sti
inc
fldt
xor
rep
jge
pop
in
cwtl
push
fstpt
into
sub
fldt
dec
sbb
xor
mov
fildl
mov
dec
pop
jo
leave
lods
inc
sti
xchg
je
mov
jnp
jo
les
push
dec
loope
ret
es
shl
fmuls
scas
cmc
aam
xchg
mov
adc
xchg
add
ret
dec
ficompl
jge
aam
int
sbb
pop
mov
push
out
push
sub
lea
cmp
dec
push
jmp
add
adc
loope
lock
cltd
jle
inc
mov
test
lds
jae
inc
fwait
mov
xchg
out
mov
mov
fldcw
adc
xor
rcr
inc
pop
sahf
incb
out
add
fadds
outsb
loope
xchg
pop
mov
pop
fwait
mov
int3
orb
or
or
daa
imul
and
push
leave
not
mov
mov
iret
arpl
inc
into
push
lcall
gs
cmp
or
xchg
pop
cmp
pop
repz
mov
out
jp
ret
pop
mov
outsl
cltd
out
inc
jmp
mov
mov
bnd
fbld
aas
clc
jae
jmp
divl
aam
mov
fs
test
clc
test
das
test
mov
sbb
and
pop
out
inc
and
mov
in
adcl
enter
xchg
out
in
jle
pusha
loope
sahf
dec
dec
mov
mov
clc
jbe
cmp
jp
aam
stos
push
jnp
push
mov
imull
adc
and
sbb
loope
sub
push
popa
les
movsl
cmp
xchg
and
xchg
xor
xchg
mov
mov
hlt
pop
es
loope
mov
pop
int3
arpl
sbb
ds
lcall
repz
mov
subl
sbb
xchg
lcall
das
cmp
jmp
cli
mov
clc
es
jb
inc
jg
js
fnsave
popf
sti
fstpt
testl
orb
jp
pmulhw
add
xchg
movsl
sub
jmp
imul
in
dec
out
subl
cltd
sbb
cmpsl
and
movsl
inc
test
mov
push
fidivs
xchg
pop
jmp
lea
pushf
scas
std
xchg
add
xchg
cltd
in
std
cmp
int
mov
jne
xor
int3
mov
push
xchg
leave
pop
dec
push
xchg
adc
out
add
movsl
shll
stc
mov
jle,pn
jmp
dec
xchg
lret
out
mov
mov
aad
ror
jns
mov
mov
jg
or
nop
push
into
je
insb
into
and
adc
mov
and
xchg
lock
pop
bound
hlt
inc
and
push
cmp
fwait
jp
fwait
arpl
movsb
xchg
sbb
xlat
loopne
mov
stc
aaa
mov
rol
cs
data16
mov
or
adc
dec
dec
and
mov
bound
mov
test
mov
mov
mov
sbb
xchg
mov
and
mov
mov
clc
cmp
mov
das
cmp
push
notb
pop
xor
lea
cmp
pushf
xor
cmp
xor
lahf
stos
push
push
and
cmp
repz
add
ds
cmp
ret
repz
jnp
movsl
movntq
push
outsl
imul
cmp
mov
dec
adc
int
or
cs
ficompl
cmp
data16
test
pop
pusha
xor
dec
xor
lahf
arpl
sbb
outsl
out
ja
mov
lahf
aad
ret
sub
pop
out
push
push
jb
es
xor
mov
ret
out
icebp
xlat
ds
or
dec
lods
dec
loop
imul
lds
xchg
insl
scas
push
imul
lock
mov
jbe
xchg
dec
adc
stos
imul
es
sub
sub
mov
testb
xchg
push
mov
les
scas
in
mov
andl
outsl
shr
xchg
out
dec
sbb
dec
dec
mov
pop
cmp
ret
cmp
daa
push
aas
or
lret
jg
adc
push
imul
into
pop
and
daa
clc
lds
lock
cmpsb
ljmp
jl
mov
sbb
jns
pop
jns
jne
push
pop
xor
add
insl
lahf
hlt
dec
lret
cmp
imul
lods
xchg
push
mov
lret
mov
xchg
mov
ret
push
fistpl
xchg
xchg
cli
rclb
and
xchg
outsl
jnp
xchg
repz
mov
repz
adc
ljmp
sbb
push
sub
sbb
xchg
pop
fiadds
in
hlt
cmpsb
mov
push
pop
dec
mov
es
jne
in
ret
test
push
mov
les
fiaddl
mov
sub
mov
mov
in
pop
add
mov
mov
mov
fstps
leave
xor
adc
leave
or
mov
adc
sub
mov
fcoml
mov
push
xchg
mov
fdivs
push
es
js
and
inc
ljmp
in
mov
aad
push
cmp
push
push
jb
xchg
idivb
cmp
cmp
outsl
fnstcw
or
sti
jbe
dec
mov
clc
fnstsw
mov
int
rolb
xchg
xor
pop
xchg
out
adc
mov
pusha
cmp
movsl
pop
push
ljmp
sub
pop
mov
mov
and
push
pop
ds
lret
cs
mov
icebp
adc
aam
int3
mov
xor
in
xchg
add
dec
xchg
jp
jno
mov
lahf
leave
xor
or
addr16
fwait
gs
rorl
or
adc
jge
mov
mov
das
movsb
andl
das
lahf
mov
shlb
mov
setl
sub
jle
mov
das
mov
xchg
dec
cmp
xchg
ret
shr
cwtl
add
cs
and
cltd
stc
push
sub
mov
sbb
aas
aas
call
sub
mov
in
mov
shr
clc
pop
jnp
jnp
and
insl
sbb
cmpsl
mov
xchg
xor
test
cmp
push
jecxz
out
and
mov
sar
loopne
dec
and
adc
ret
repz
call
fidivrs
cld
scas
js
popf
mov
push
into
mov
test
jnp
inc
lds
pop
jne
jg
or
xchg
mov
mov
jecxz
lea
xchg
add
pop
xchg
pop
cs
clc
xor
jmp
xchg
pop
idiv
into
mov
jmp
cmp
std
fdivp
jns
or
dec
pop
pusha
jbe
push
lods
mov
add
jbe
cmpsl
lahf
xor
jl
fidivrs
xchg
xchg
cmp
aaa
test
jno
push
inc
add
dec
ficoml
fcoml
sub
mov
arpl
jmp
fmull
fcmove
xor
das
mov
int3
fidivrs
out
pop
aas
cltd
inc
inc
jbe
andl
sbb
movsl
fdivl
mov
cmp
insl
add
pop
push
je
inc
push
sti
xchg
mov
dec
pop
sarl
call
cltd
rcrb
adc
shlb
mov
jno
push
mov
adc
scas
jp
je
stos
stos
mov
xchg
hlt
mov
mov
es
pop
adc
fsts
test
sbb
lret
sbb
jp
jmp
or
into
xlat
pop
mov
jg
jp
inc
push
loop
xor
fnsave
aam
jbe
sti
pop
pusha
stos
dec
arpl
clc
sbb
sbb
inc
arpl
pushf
add
cmp
cltd
jg
or
mov
mov
in
adc
loop
call
adc
lods
cmp
jecxz
xchg
sub
xor
mov
int
xchg
sub
in
push
lea
mov
shll
fimull
lea
cmpsl
mov
adc
or
mov
sbb
cmp
idiv
add
pop
dec
loope
lods
pop
mov
in
or
movsl
mov
or
mov
xor
rolb
lods
pop
push
popf
mov
and
jo
adc
out
adc
mov
mov
xorb
sub
std
xchg
add
aam
pop
sbb
repz
xlat
mov
nop
inc
inc
dec
push
cmc
xchg
imul
scas
fstpl
stos
inc
sti
inc
nop
push
stc
and
and
sti
pop
jp
push
call
ds
jnp
loop
daa
insb
outsb
cmp
mov
rol
lock
jle
mov
addr16
imul
jmp
pop
push
stos
mov
xchg
pop
comiss
pop
dec
or
scas
mov
sub
fsubs
sbb
mov
push
aaa
mov
out
incl
inc
aas
push
pop
insl
sbb
scas
mov
repz
out
les
or
add
sub
in
std
lret
sub
mov
add
mov
and
pop
std
rorb
dec
xchg
xchg
sub
push
xor
jns
push
call
and
popf
sti
ret
dec
das
and
sbb
fdivl
pop
pop
stc
dec
or
dec
pop
xchg
cmp
out
sub
pop
mov
sub
push
cmp
sub
push
shll
pop
addl
fldt
or
add
lods
popf
or
fwait
xchg
int3
or
dec
test
test
cld
pmaddwd
push
aam
cmp
cmp
fbstp
out
cmpsl
add
lock
mov
int3
or
fs
sti
mov
pop
aam
jo
xor
stos
imul
imul
sti
push
xchg
frstpm(287
das
je
lods
dec
std
or
add
push
out
push
mov
jnp
xchg
xchg
sub
lcall
jle
push
test
dec
sahf
lods
call
sub
mov
or
sbb
push
cmp
lret
and
mov
pop
andb
mov
cmp
inc
rcr
or
jae
subl
dec
or
jno
inc
xchg
sti
sub
or
jns
cmp
inc
xor
or
mov
std
jo
add
es
push
loop
cmp
aas
mov
adc
dec
jo
jnp
sbb
lds
lods
xor
mov
xlat
fldt
addr16
xor
mov
inc
push
ficompl
add
les
test
fucomi
in
in
push
jge
jno
cmp
loopne
dec
and
mov
cmc
mov
leave
lret
mov
inc
pop
add
lea
sub
mov
dec
mov
pushf
lcall
rcrb
out
cld
lock
bound
xor
shlb
and
dec
negl
bound
imul
inc
icebp
pop
and
sbb
fwait
aas
fs
push
push
mov
sbb
ret
add
xchg
aaa
dec
lret
mov
inc
insb
call
lret
xchg
push
adc
nop
inc
and
into
movsl
xor
xchg
scas
aam
repnz
icebp
cmp
lcall
jne
push
out
loopne
arpl
or
xchg
xchg
enter
mov
call
mov
shll
add
test
pop
cmp
imul
and
test
and
add
push
xor
cmpsb
inc
cmp
cmp
jb
hlt
js
dec
outsb
add
gs
mov
and
mov
add
js
mov
ss
fs
test
pop
popf
push
push
sub
lds
inc
div
gs
lods
xchg
adc
cmpb
jnp
mov
cmp
sbb
cmp
mov
and
sti
xchg
cs
js
jae
sti
pop
scas
and
jl
les
fistpl
mov
sub
pop
es
dec
lds
mov
testb
loopne
out
and
hlt
push
adc
mov
xchg
cmpl
dec
insb
add
lods
pusha
mov
cli
fstps
in
test
jnp
push
xchg
filds
jmp
in
jle
std
dec
push
adc
push
mov
xchg
mov
cld
dec
sbb
xchg
xchg
loope
movsl
mov
fldt
test
repnz
dec
fldl
out
sbb
pop
mov
addr16
add
inc
jmp
into
dec
out
mov
int
or
lock
into
imul
adc
loope
pop
testl
dec
sbb
dec
mov
mov
inc
bound
test
insl
push
cmpsb
lahf
rorl
cmpb
mov
mov
xchg
dec
pop
imul
lcall
leave
out
test
xchg
xor
mov
sbb
dec
adc
iret
jne
int
mov
jo
add
or
mov
repz
mov
fnsave
data16
outsb
lds
cli
lea
addb
cmpb
orb
mov
pusha
lret
imul
rcr
xchg
xor
jmp
adc
mov
pop
mov
inc
push
mov
subl
in
dec
mov
jno
push
shll
adc
cs
cltd
test
cli
test
pop
jg
inc
mov
movsb
dec
rol
dec
jp
xchg
sub
mov
call
push
add
cmp
repz
mov
push
push
hlt
cmp
ss
push
dec
hlt
push
jle
iret
popa
je
jge
clc
aad
mov
enter
cmc
outsl
add
add
test
mov
int
xor
push
inc
and
daa
stos
add
scas
push
loope
nop
cmp
sbb
fisttpll
ljmp
cmp
rorl
inc
pop
leave
shrl
cmp
sti
add
and
sbb
dec
jp
cmp
push
inc
add
or
mov
clc
insl
mov
arpl
clc
mov
xchg
jns
xchg
push
or
pop
mov
push
in
sahf
ret
stos
cmp
jae
and
mov
pusha
push
negl
test
stos
lret
jle
into
add
bound
cli
cmp
push
or
insl
loopne
into
mov
arpl
mov
cmp
cmp
loop
les
mov
inc
outsb
testl
int
pop
sti
xchg
fwait
adc
pop
mov
jae
add
aaa
lds
and
cmp
aas
adc
jno
rcl
jbe
mov
in
jmp
inc
rcrl
lret
sub
xor
aas
ljmp
mov
mov
add
es
sub
mov
cmp
adc
jnp
fstpl
jb
outsl
push
lahf
pop
addr16
rorl
xchg
nop
gs
divb
leave
daa
insl
ficompl
push
out
sub
inc
lahf
push
popa
lods
out
fldl
inc
pusha
movsb
fnstcw
sahf
and
and
shrl
stos
and
fsubr
arpl
out
pop
ret
and
mov
data16
arpl
mov
fs
jnp
out
imul
imul
push
loopne
push
mov
push
xchg
sbb
frstor
into
jmp
rorl
and
fs
sbb
xor
add
push
cmp
xchg
dec
in
stc
aas
outsb
data16
outsl
mov
shrb
add
fwait
cmp
inc
lahf
mov
or
push
inc
pop
dec
sbb
push
lcall
xchg
pop
stos
cltd
mov
or
test
loopne
into
cmc
mov
inc
xchg
mov
fisttpl
in
std
aas
cld
pop
jb
cmp
cmp
or
pop
dec
xor
test
jp
pop
adc
sbb
or
cwtl
int
stc
nop
movsb
out
and
rcl
xor
adc
repz
inc
jg
ja
pop
negb
dec
popf
sti
shl
add
sub
mov
or
xchg
xchg
sahf
rcll
add
push
jne
and
cld
xor
aam
sahf
clc
nop
sbb
ret
dec
pop
mov
fbld
xchg
in
cld
outsl
lret
jne
push
fimull
daa
push
pop
mov
adc
aad
cmp
add
imul
sti
dec
shlb
pop
mov
in
jae
stos
add
jge
cmpl
int3
jg
add
loopne
enter
cmp
out
fstpl
push
xchg
and
iret
test
outsb
mov
dec
mov
pop
ja
mov
scas
cmp
mov
jno
psrld
dec
fwait
or
in
test
cli
pop
test
lods
xlat
sub
push
jmp
fstpl
mov
mov
push
dec
in
imul
loop
cld
iret
pop
fcmovu
outsl
or
push
out
mov
xor
fsubl
jp
cmpsb
fisttpl
sarl
inc
aaa
and
push
sub
repnz
jle
pop
ret
jp
mov
push
mov
scas
mov
aad
sbb
mov
mov
inc
outsb
lock
ja
lcall
sti
inc
sbb
or
aaa
pushf
xorb
jnp
inc
pop
push
pushf
jo
inc
js
mov
mov
and
cmp
pushf
inc
and
ja
cltd
pusha
aad
mov
mov
les
mov
leave
adc
push
test
and
pop
divl
leave
lock
lea
outsb
sbb
jg
pusha
jp
push
and
or
mov
push
xchg
jmp
jmp
shl
sti
push
pop
cmp
inc
pop
cmp
cmc
popa
and
mov
lahf
mov
lods
pop
cmp
repnz
sub
push
xchg
xor
adc
jle
xchg
or
dec
shrl
shr
mov
pop
pop
lret
lret
cltd
call
pop
jae
test
jp
inc
mov
inc
jecxz
xlat
into
movsb
enter
sti
into
mov
jns
rol
mov
jae
inc
loop
ror
dec
stos
mov
jne
adc
mov
dec
iret
xor
push
adc
leavew
pop
loopne
and
mov
mov
leave
popa
cmp
loop
adc
out
mov
push
out
je
push
popa
add
call
test
cmp
cmp
mov
rolb
xlat
and
hlt
mov
push
sbb
lock
adc
test
mov
stos
xchg
jle
mov
mov
pop
notb
decb
test
inc
push
push
not
lock
in
xchg
cmp
and
sub
jb
xchg
mov
js
and
sarl
xchg
ljmp
sub
lcall
sti
or
jp
rcll
xorb
mov
dec
xor
test
add
fwait
xor
push
mov
fbstp
or
xor
cld
push
stos
xchg
push
pusha
xor
lods
push
fnstcw
dec
lods
sub
pop
pop
nop
aad
sub
in
cmpsb
mov
sbb
add
mov
jb
repz
sub
or
rcll
lret
shr
je
cld
addr16
push
and
adc
sub
mov
in
lds
ret
fldcw
cli
and
lea
sub
xor
mov
ret
pop
test
adc
movsl
pop
jo
dec
fs
in
cltd
scas
nop
stos
jae
inc
inc
loop
aad
sub
mov
pop
rcl
mov
and
cmc
shrl
mov
add
roll
lods
lret
outsb
testb
dec
pop
scas
pop
xorb
roll
add
sub
sbb
xchg
sub
mov
or
jg
repz
loope
mov
loope
dec
cmp
out
mov
mov
loope
push
xchg
popf
pushf
dec
or
jecxz
call
cmc
jmp
insb
sahf
dec
dec
pop
jnp
repz
sbbb
jmp
xor
gs
xchg
call
sbbl
in
lahf
push
jno
mov
cmc
sbb
insl
or
les
out
sbb
adc
outsb
imul
not
rolb
lea
push
add
out
ja
sub
pushf
or
dec
arpl
in
sahf
ss
notl
pop
in
sbb
int3
jne
mov
cmp
aad
xlat
inc
cld
int3
shll
inc
jae
stc
std
xor
jns
xor
imul
addr16
jns
mov
lcall
and
loope
pop
cwtl
jno
pop
pushf
mov
scas
aas
cli
pop
pop
sbb
add
jg
and
jnp
fnstsw
xlat
outsb
adc
jne
and
ret
jp
push
out
pusha
pop
or
push
jne
test
xlat
mov
pushl
fistl
cmp
mov
movsl
jbe
push
insb
fnsave
xchg
scas
add
aad
mov
pop
mov
mov
push
call
mov
lods
shll
js
cmc
and
xor
inc
jl
in
jg
sbb
clc
loop
cmp
xchg
dec
inc
xor
mov
push
sub
mov
mov
mov
rorl
push
sbb
enter
inc
or
sub
stc
jge
lods
mov
adc
lods
jp
dec
lods
into
dec
add
inc
sub
mov
inc
cwtl
mov
rcrb
mov
iret
jo
xchg
xchg
add
outsb
fwait
sti
outsl
loop
daa
sub
scas
sbb
sbb
cli
dec
jnp
cld
push
mov
mov
push
sarl
imul
inc
jecxz
in
fistl
call
repnz
out
push
addr16
xchg
push
out
push
rclb
loopne
jne
ss
lods
insl
xor
out
cwtl
movsl
xor
sub
inc
popf
sbb
push
sahf
and
out
mov
xlat
test
adc
adc
sub
dec
pop
nop
mov
mov
mov
filds
adc
js
ljmp
push
les
cmp
pop
jge
push
stc
mov
repnz
adcl
lock
cmc
sub
out
outsl
rcrl
xlat
mov
inc
data16
sbb
cwtl
test
jnp
cmpsl
cmp
arpl
out
sbbl
not
out
pop
sub
push
fidivs
cmpsl
jmp
imul
sbb
jp
cmp
pop
and
hlt
mov
movsb
mov
xchg
inc
fsubr
jbe
pop
xor
jae
sbb
in
cli
xchg
push
dec
pop
ja
leave
add
jne
cmpsb
cmpsb
arpl
pop
jns
mov
jge
or
pop
shrb
and
int
adc
adc
inc
dec
seto
inc
jb
outsl
addb
leave
lahf
imul
movsl
dec
fwait
xor
dec
add
cltd
ljmp
push
dec
mov
ret
aas
jle
mov
pop
and
lods
sahf
std
jl
mov
lahf
outsb
sbb
inc
cltd
mov
pop
and
or
into
icebp
pushw
and
mov
inc
clc
popf
out
popa
or
int3
lret
adc
cmp
gs
pusha
add
mov
jge
mov
fs
xchg
out
dec
xlat
ja
repnz
sahf
inc
or
mov
dec
ret
xchg
mov
in
xor
pop
hlt
and
das
mov
repz
sub
sub
insb
repz
imul
jo
fadd
inc
leave
mov
mov
std
xchg
jns
idiv
fcomip
test
sbb
gs
mov
repnz
jg
push
add
js
and
push
adc
in
push
mov
fdivp
adc
dec
test
cmp
movsb
jg
mov
cmc
movsl
or
pop
push
inc
lcall
inc
les
fadds
lret
xchg
inc
sub
out
mov
push
stos
push
pusha
jb
xchg
inc
adc
ja
fdivs
push
xchg
movsl
enter
sbbb
in
mov
daa
cmp
mov
out
pop
out
and
push
ljmp
jno
sub
in
jno
ds
push
mov
std
std
pop
xchg
aam
mov
sub
leave
cmpsl
negb
subl
pushf
ret
idivb
sbb
fidivl
jecxz
jo
test
lods
inc
out
jge
lods
inc
std
dec
loope
jnp
push
aas
dec
shl
cmc
push
add
mov
mov
je
xor
lds
cmpsb
loopne
mov
rcl
insl
sub
arpl
pop
lock
add
and
outsl
push
dec
mov
or
sub
lret
cltd
je
ds
sbb
rcl
outsb
les
ldmxcsr
outsb
sub
int
push
repz
jb
inc
cmpsl
pusha
cmc
movsl
adc
xlat
push
ljmp
pop
dec
pop
mov
mov
cmc
leave
xchg
sub
push
popl
and
sarl
fwait
dec
fcompl
or
sub
out
daa
mov
inc
addb
je
sub
js
movsb
cmp
icebp
jmp
cltd
sbb
mov
xchg
aam
out
pushl
pop
xchg
in
xor
ss
and
pop
sub
fsub
push
sub
scas
mov
push
pop
loopne
adc
dec
cmp
xor
enter
add
mov
popa
sbb
ds
sbb
dec
fdivrs
fmuls
cmp
lods
pop
imul
shll
jecxz
jmp
mov
icebp
xor
xchg
jp
dec
iret
sbb
aas
in
dec
inc
cmpsb
std
cmc
aad
mov
dec
jo
add
scas
popf
insb
push
pop
cmpsl
shrl
ret
vunpckhpd
enter
and
mov
mov
xchg
mov
aaa
push
jnp
pop
repz
mov
dec
adc
lock
aaa
into
iret
sub
push
inc
and
mov
or
sub
add
add
jecxz
adc
adc
into
test
cmp
fwait
out
jle
es
xor
push
adc
mov
mov
xor
mov
push
cs
imul
push
jge
jns
sti
cmpsb
cltd
and
xor
in
popf
sub
mov
test
mov
test
js
push
data16
mov
and
fidivl
inc
pop
mov
xchg
adc
jo
fs
dec
adc
xchg
stos
cmp
xor
inc
sub
jne
or
adc
fdivrl
jge
push
test
arpl
adcl
pop
movswl
dec
pushf
push
rolb
ret
jnp
pop
lock
push
sub
push
pop
adc
testl
int
imul
xchg
add
and
in
stos
pusha
mov
movsl
fwait
pusha
xlat
mov
mov
pop
jle
xchg
adc
mov
lahf
notl
mov
push
fidivl
imul
or
mov
call
in
popf
and
cli
jno
fucomi
jecxz
sbb
push
in
xchg
add
add
sbb
pop
imul
cmp
negl
cmp
and
test
cli
jg,pt
pop
scas
cmpsl
dec
mov
arpl
push
lea
stos
loopne
lea
je
aam
jo
xchg
out
daa
adc
clc
sbbl
lds
xorb
and
sar
aad
out
stos
xchg
jmp
insl
sahf
inc
or
inc
dec
fcompl
dec
push
fdivrl
pop
xchg
das
xchg
mov
push
sub
mov
jne
insl
xor
and
outsl
fs
push
mov
inc
mov
idiv
xchg
sub
mov
adc
xor
mov
out
stc
xchg
movsl
xchg
es
cmp
inc
in
in
cmp
fwait
lea
mov
enter
shll
ds
iret
dec
aad
push
mov
xor
fs
lock
jl
std
shlb
leave
adc
test
pmaxsw
popf
inc
xor
xor
cs
dec
lods
jmp
mov
leave
mov
xchg
shll
arpl
adc
xchg
mov
push
add
inc
jmp
repz
in
sbb
lret
test
outsl
inc
inc
int
test
fsubrs
fidivrl
mov
adc
sub
pop
bts
jle
pop
stos
lret
jp
cs
ret
repnz
jo
cmpsb
ror
add
jbe
repz
mov
sahf
out
and
add
std
adc
add
addr16
pop
jae
cld
test
jg
ss
movsb
sahf
fs
iret
and
xchg
add
sub
cli
push
cmp
aas
or
addl
push
cmp
aaa
in
popf
std
dec
shl
dec
mov
mov
push
add
dec
push
lret
mov
xchg
sub
and
mov
xlat
adc
and
adcb
add
inc
stos
cmpsl
popa
and
repnz
jbe
xchg
adc
popf
sbb
iret
xor
call
sub
mov
cwtl
xor
hlt
push
lcall
sub
lahf
and
pop
ret
lcall
jbe
test
mov
lretw
xor
xorb
sbb
pop
jge
pop
cld
jb
loopne
mov
sbb
lcall
rcrb
pop
cmp
dec
sbb
stc
repnz
sbb
cmc
pop
jo
sarb
fnstcw
icebp
sbb
sbb
test
cmpsl
pop
fs
orl
inc
enter
popa
xchg
dec
mov
add
sub
inc
int
jne
inc
sbbl
sbbb
cmp
push
fisubrl
cmp
mov
adc
add
push
fsubrs
jno
and
subb
inc
mov
sti
and
andb
addl
int
add
aaa
test
rclb
cmpsl
or
adcl
inc
cmp
popf
push
pop
xor
xchg
outsl
xor
scas
jbe
aaa
mov
fnstcw
leave
leave
pop
xlat
add
movsb
mov
out
lods
aam
lds
dec
lea
inc
dec
outsb
push
lahf
lods
aam
lea
push
adc
mov
outsb
adc
dec
daa
sbb
insb
push
gs
mov
dec
rol
cmp
test
add
into
adc
add
insl
jge
int3
mov
and
sub
pop
inc
lds
loop
arpl
fstl
jg
arpl
xchg
xchg
mov
hlt
xchg
aas
dec
pop
mov
gs
decl
mov
xchg
mov
inc
or
push
cli
inc
inc
push
fwait
je
push
mov
inc
fnsave
cwtl
into
mov
movsl
repnz
movsb
push
xchg
adc
testl
ret
xor
xchg
add
jg
es
lcall
push
not
pop
sarl
andb
aad
rcrl
lret
pop
clc
jmp
inc
call
movsl
push
fadds
xchg
xor
mov
sbb
jg
mov
xchg
sub
shlb
push
into
js
pop
xchg
popf
cld
mov
jo
dec
adc
inc
mov
scas
dec
inc
xchg
dec
aad
loop
sub
ds
and
push
stc
popf
fists
mov
mov
ss
addr16
mov
mov
fdivl
cwtl
and
iret
in
pop
mov
in
stc
iret
fldt
in
sub
mov
pop
iret
add
call
cwtl
and
or
xchg
pushf
cmp
mov
pop
insb
loop
ret
xchg
aam
jnp
jns
pusha
stc
addr16
xor
cli
push
fsubrs
or
cmp
lret
movsb
mov
and
push
lock
cli
les
push
mov
pop
repz
popf
mov
sub
lea
nop
jnp
bound
pop
pop
jecxz
cmp
push
xor
fstps
push
movsl
and
pop
outsb
daa
imul
xchg
fbstp
add
rolb
mov
ret
sub
in
mov
fcomi
sub
in
cltd
xor
aaa
sbb
outsb
mov
cmp
mov
adc
pop
outsl
test
mov
pop
jg
ficoml
sub
sbb
sub
test
mov
add
into
lcall
xor
or
test
push
fsubl
xchg
popa
mov
jns
icebp
js
mov
mov
lds
mov
dec
ret
aaa
cmp
add
pop
ljmp
out
inc
shlb
mov
cmp
nop
mov
and
cmp
ret
insl
push
mov
jp
dec
lret
xor
push
or
xchg
sti
aas
xchg
mov
and
mov
bound
aad
in
jmp
fcoml
imul
sbb
inc
jnp
xchg
dec
dec
movsb
insb
push
ret
aam
adc
inc
xor
ret
jl
or
ljmp
mov
cmpl
test
xlat
inc
mov
popa
int3
or
xchg
loopne
loopne
retw
outsl
shlb
insb
sub
out
sub
inc
or
mov
xchg
scas
mov
push
xorb
cmp
mov
adc
outsl
pop
repz
mov
test
movsl
xchg
add
addr16
into
imul
jecxz
mov
cmp
mov
inc
cltd
cmp
sub
les
popa
ret
outsl
insb
hlt
mov
mov
sbb
mov
std
inc
idivl
add
or
mov
mov
das
add
mov
jl
push
iret
push
cmp
pop
andl
pop
mov
lds
sbb
push
sbb
inc
ret
stc
pusha
hlt
fsubrl
or
xchg
pop
push
and
xor
ret
dec
mov
xlat
mov
pop
sub
xor
mov
inc
fiadds
stos
sti
imul
xor
fisttps
adc
and
xor
xchg
pop
movlps
jecxz
ljmp
push
gs
insb
pop
scas
lea
push
in
dec
call
dec
js
inc
cmp
mov
out
pop
movsb
pop
fldenv
adc
stos
movsb
xchg
icebp
lock
ljmp
push
cmp
andb
mov
cmp
cmp
xor
push
loop
push
mov
repnz
test
mov
iret
lds
sub
or
out
add
add
dec
inc
sti
xorps
inc
je
lock
loopne
jl
movb
enter
inc
or
mov
push
ret
mov
fs
mov
adc
in
inc
test
inc
pop
popf
loope
push
test
lds
test
sub
push
and
mov
push
jno
gs
inc
aaa
call
sbb
push
scas
loope
and
cmp
and
push
addr16
int3
add
std
sbb
ficompl
shlb
aas
add
loopne
ja
stos
stos
call
sbb
ficomps
dec
aas
fwait
repz
mov
cmp
xor
dec
push
outsl
dec
test
push
mov
pop
ds
sbb
ret
mov
cmp
dec
mov
xchg
ja
leave
clc
cld
mov
arpl
add
jb
adc
dec
pop
les
lock
sbb
ret
mov
shrl
jns
dec
mov
pop
lret
popa
push
jmp
andl
sub
pop
popf
imul
xor
addr16
lods
or
jg
dec
test
loope
addr16
lock
lods
and
push
imul
into
pop
mov
pop
pop
out
or
push
aaa
sahf
mov
stos
clc
sbbl
jp
sbbl
mov
shrl
inc
jnp
xor
add
mov
sti
int3
out
insl
sbb
push
jnp
fadds
shl
and
mov
das
sub
clc
aam
rorb
pop
jmp
rolb
jecxz
mov
mov
popf
dec
shr
jns
sti
cmp
push
xor
jge
dec
addr16
imul
dec
in
push
mov
inc
dec
sbb
mov
stc
xchg
int3
js
ja
in
lods
mov
sbbl
jecxz
lret
mov
xor
mov
add
sahf
inc
and
stc
pop
out
xlat
mov
sub
ds
aaa
ja
inc
stos
gs
sarl
pushf
das
aaa
fnsave
mov
dec
in
xchg
jne
jle
std
pop
sbb
pop
andl
out
test
ror
in
xchg
pop
lock
inc
or
cmp
push
inc
cmpsl
pop
dec
mov
in
mov
ficoml
sbb
cmp
ficompl
in
adc
mov
mov
popa
fsubs
testb
xor
or
fcomip
or
add
test
nop
push
xchg
cltd
cmc
dec
mov
or
imul
and
mov
add
and
or
fmull
and
int
xor
mov
in
movsl
push
lock
and
mov
dec
loopne
sub
jg
call
shlb
sbbl
xchg
xor
sar
xchg
lods
daa
hlt
xor
jg
push
xchg
jno
xchg
clc
lahf
sub
shr
jg
int3
xor
dec
add
dec
add
cmp
int
repnz
imul
lds
cmpsl
pop
adc
inc
jl
aad
fnstenv
or
dec
icebp
mov
mov
movd
clc
testl
je
ds
addl
iret
cs
sub
aaa
icebp
add
testb
int
jge
shrl
jle
aam
in
fimull
mov
sub
lea
add
aas
xchg
mov
cmp
mov
aas
mov
inc
or
jb
cli
jns
xor
pop
inc
xchg
sti
out
nop
packssdw
rorb
xor
inc
sbb
xchg
cmp
rcrl
jecxz
mov
push
push
lods
imul
lods
mov
adc
xchg
inc
sbb
xor
lds
or
cld
popa
fidivrs
pop
jl
jb
sub
sahf
enter
adcb
repnz
data16
adc
pop
dec
and
in
mov
cmpsl
in
es
push
or
shlb
scas
fadds
testb
xor
stos
inc
std
sbb
xor
pop
lret
inc
ret
icebp
je
cmp
cmp
sbb
ret
jae
fimull
repnz
jne
xchg
xor
or
stc
pop
rorb
js
or
out
add
pop
pop
iret
stos
test
inc
lds
insb
push
ljmp
xchg
dec
add
xchg
dec
pop
pop
inc
mov
mov
sub
int
jo
adc
jb
orb
xchg
xor
mov
pop
aam
jbe
aam
dec
xchg
stc
cs
icebp
or
fs
xchg
jle
sti
pop
nop
sub
cmp
rcrb
repz
repz
mov
or
sub
and
movsb
js
mov
jns
ret
out
aas
push
inc
pop
popa
cmpl
xchg
jne
xchg
clc
stos
dec
inc
cld
inc
inc
aas
xorl
cmp
stos
dec
fstps
jecxz
sbb
jns
ja
jb
scas
ss
fcoml
fsts
inc
test
push
lahf
fnstsw
xchg
adcb
sbb
sbb
stos
pop
imul
cs
xor
in
cmp
fwait
dec
arpl
dec
into
jp
adc
push
leave
rorb
mov
mov
stc
addb
ficompl
in
cmpsb
xor
adc
int
mov
popa
aaa
pop
hlt
imul
nop
xor
out
cmpsl
hlt
push
pop
icebp
and
std
mov
pushf
scas
sti
mov
xchg
test
xchg
mov
add
dec
imul
ja
jns
jecxz
mov
aas
cmp
xchg
push
mov
add
es
and
push
notl
pop
mov
dec
out
jb
test
cmc
dec
in
pushf
jns
xor
cmp
clc
xchg
pop
fistl
es
jmp
push
pop
cmpsb
cmp
fdivrs
sbb
mul
mov
clc
scas
push
scas
push
leave
dec
and
cmp
and
mov
sbb
pushf
pop
add
int3
jnp
jmp
test
add
adc
mov
mov
adc
dec
push
hlt
inc
hlt
jno
and
loop
add
pop
mov
sbb
and
movsb
aas
test
decl
push
adc
cwtl
das
ss
add
cmp
jecxz
jnp
ret
pop
icebp
or
add
or
sbb
test
lods
jb
fisttps
cmp
test
or
imul
ja
aaa
xchg
mov
into
xor
xchg
in
sti
xor
mov
lcall
mov
cmp
ss
jmp
inc
push
lret
jno
sub
jge
inc
dec
push
inc
loope
pushf
stos
or
hlt
movsl
lds
pushf
mov
testb
nop
stos
xchg
cmc
jo
adc
les
pop
pusha
mov
xchg
jg
into
popf
sbb
mov
adc
movsl
fsubrs
in
or
cmp
mov
mov
stc
cwtl
mov
xchg
popa
sbb
test
repnz
or
loop
leave
push
push
mov
test
mov
pop
xchg
and
fbld
push
test
mov
adc
out
mov
mov
fwait
xlat
inc
test
mov
fidivs
addr16
lret
cld
outsl
out
testb
pushf
jmp
ret
pop
ljmp
push
cltd
mov
hlt
ds
push
stc
or
dec
rdtsc
jp
inc
nop
xchg
or
loope
fwait
push
mov
sbb
sbb
cmpsl
dec
movsb
addr16
cmp
lret
ja
js
pop
mov
jle
clc
mov
vmovlpd
mov
testl
push
xor
mov
pop
cmpsl
mov
cld
sbb
nop
cmp
mov
fidivs
lods
and
lea
les
clc
mov
cs
arpl
fmul
mov
or
mov
std
inc
adc
rorb
cli
enter
mov
push
mov
imul
sub
xchg
nop
push
and
bound
imul
or
adc
or
and
cmp
mov
out
or
mov
pop
in
mov
in
orl
shrl
mov
pop
pop
ja
cld
andl
popf
mov
dec
inc
jne
lds
mov
outsl
mov
jge
mov
ja
cmp
lcall
pop
push
mov
push
pushf
loope
or
xchg
mov
xchg
orl
pop
xchg
mov
nop
push
jbe
cmpsb
lock
mov
jo
and
xchg
das
loop
sub
or
jp
imull
aaa
add
mov
add
lea
push
mov
add
dec
cli
and
in
stc
cli
pop
mov
test
xlat
mov
and
mov
sahf
dec
cmp
dec
fcmovne
popa
or
pop
jb
insb
ja
call
xchg
push
shll
cmp
mov
mov
push
push
mov
das
aad
aad
lahf
pop
cmp
inc
stc
jmp
adc
push
mov
mov
inc
mov
mull
sub
clc
bound
lock
lds
mov
shll
and
ds
mov
sbb
mov
pop
sub
mov
mov
dec
mov
inc
jle
push
or
push
pushf
cli
scas
mov
and
mov
sbb
sbb
mov
mov
cltd
mov
inc
roll
xchg
adc
jb
cmp
add
fsubrp
inc
and
clc
or
fwait
or
jp
fldt
cmp
repz
sarl
arpl
push
repz
scas
inc
jnp
mov
inc
adc
dec
mov
imul
cs
xor
out
jb
xor
or
aad
mov
fbld
sti
ja
loope
add
mov
loopne
adc
xor
out
inc
sbb
cmp
loop
ds
in
jecxz
pop
mov
mov
into
xor
mov
sbb
call
int
outsl
rcrb
jmp
and
mov
mov
mov
pop
out
ds
arpl
xor
add
mov
out
xor
shrb
and
xchg
fistpl
mov
ds
jno
sbb
popw
sbb
jle
ss
inc
cld
jl
mov
fwait
adc
je
frstor
test
and
psubusb
mov
xor
scas
push
shll
push
movsl
icebp
jb
std
or
xor
jnp
out
std
ss
test
mov
mov
dec
cmp
jnp
jnp
nop
pop
jg
adc
xor
and
mov
lods
in
stos
or
fsubrs
mov
push
repnz
xchg
std
notl
fadds
cmp
cld
pop
insl
pop
sbb
add
push
xchg
and
mov
addr16
imul
xor
xchg
inc
sbb
mov
outsb
mov
xchg
call
lods
inc
dec
mov
bound
outsb
add
pop
in
cwtl
push
movsb
daa
outsl
sahf
mull
aam
or
pusha
je
cmp
subb
dec
scas
fnsave
adc
mov
sub
cli
and
addr16
mov
dec
xor
cmpsb
cld
cmp
insl
pop
or
dec
add
out
push
adc
mov
mov
lret
mov
das
mov
rcrb
addr16
dec
faddp
mov
in
adc
pop
cs
inc
mov
int3
or
aad
sahf
add
cmc
sub
mov
sub
outsl
fsubrs
jno
jecxz
daa
out
cmp
cwtl
dec
aad
outsb
jp
not
sub
sbb
jno
pop
shlb
cltd
jecxz
xchg
loop
test
in
inc
pop
loop
nop
dec
cmp
xchg
mov
fstpl
rcr
sbb
push
movsb
cmp
adc
mov
sarl
shrb
adc
jno
xchg
dec
pop
sbb
shrl
shr
and
dec
les
fsubs
xchg
test
dec
aad
jnp
pop
sbb
fmulp
inc
jl
mov
test
or
out
test
pop
mov
lret
xchg
sbb
push
adc
movsb
xchg
repz
mov
cli
incl
jecxz
mov
gs
fadds
ljmp
dec
dec
dec
push
stos
fdivl
icebp
insl
out
fistl
mov
outsb
in
lret
lret
out
xor
cmpsl
mov
mov
jle
sbb
jecxz
fisubrs
out
mov
jae
ja
inc
test
ds
push
dec
lock
fwait
cld
mov
sbb
pop
lar
sahf
mov
push
std
jg
lahf
inc
sbb
dec
into
in
fwait
push
fisubl
xchg
mov
pop
cld
fsubrp
ds
insb
int
jmp
pop
test
sbb
or
mov
stos
aas
mov
call
cmpsb
sbb
fwait
jl
lret
mov
add
mov
cmp
add
xor
inc
pop
pop
jmp
mov
jmp
lods
fsubrl
test
pop
pop
mov
xchg
pop
mov
push
mov
push
xorl
mov
ljmp
movl
pop
ss
ljmp
and
pop
fmuls
push
outsl
mov
mov
add
or
inc
pop
dec
mov
adc
pop
push
xor
mov
and
sti
ljmp
fnstenv
xor
push
rcrl
sbbl
jbe
inc
xor
mov
lods
xor
or
cmc
mov
in
in
lahf
incb
cld
mov
sarl
pop
pop
call
pop
sub
add
testl
xchg
inc
es
call
add
filds
js
jge
jne
stos
mov
in
lcall
cmpl
les
add
adc
inc
xchg
rorl
roll
pop
mov
or
sbb
dec
and
xchg
rclb
sub
or
sub
rorl
mov
jg
je
push
mov
or
popa
cmp
or
cltd
lret
and
movsb
rcrb
fwait
repz
fistps
fists
jge
in
xchg
jmp
cld
jae
arpl
cwtl
jns
cltd
pop
sbb
push
mov
inc
or
cmp
ds
sahf
repnz
adc
ljmp
leave
lret
pushw
mov
jnp
sub
add
lock
or
shlb
jg
jae
sbb
pop
shll
popf
cltd
clc
stos
out
movsb
mov
or
lea
idivb
int
mov
push
adc
mov
repz
mov
icebp
in
rcll
pop
adc
in
xchg
xchg
popf
js
and
jecxz
xchg
mov
add
clc
stos
inc
push
sbb
stos
adc
enter
xor
sti
adc
lcall
bound
enter
out
xchg
outsb
jl
mov
sbb
cmp
inc
add
fistpl
movsl
mov
inc
aas
or
in
and
jb
iret
fstpt
or
cmpsl
lds
inc
cmp
out
cld
inc
adc
ss
mov
adc
mov
adc
rcrl
add
loop
inc
push
roll
stos
mov
mov
add
enter
mov
lret
mov
sub
insl
jg
inc
push
mov
imul
pop
loop
add
dec
mov
scas
loop
lods
filds
lock
or
cmp
jge
jp
xor
xor
test
stos
sub
in
or
and
into
mov
adcb
dec
pop
jle
push
mov
adc
test
inc
psrlq
lret
sti
ss
mov
inc
push
fdivrl
sub
cld
add
cmp
adc
jno
clc
lahf
nop
cmp
arpl
bound
push
jo
std
iret
push
xor
fs
mov
addr16
inc
lahf
dec
xchg
fldenv
dec
loopne
call
sub
inc
lods
push
shr
lret
mov
je
inc
loope
jge
jno
test
jge
mov
mov
loopne
jle
inc
dec
ds
mov
sbb
ds
mov
or
sbb
inc
sbb
mov
fdivr
or
lret
jbe
pop
xor
push
push
addr16
rcl
cwtl
pop
sub
cs
imul
pop
mov
inc
mov
daa
mov
jle
pusha
pop
mov
in
mov
mov
int3
andb
mov
mov
sahf
fisttpll
movsb
pop
mov
push
inc
cmp
inc
fsubl
call
imul
mov
fildl
mov
imul
out
lret
mov
adc
sbb
clc
add
aad
std
push
outsl
das
mov
xor
xor
adc
test
xchg
fstl
xchg
in
loop
bound
mov
shlb
sbb
je
mov
cmpb
pop
std
loope
insl
test
and
mov
xchg
and
mov
inc
movsb
mov
sub
pop
hlt
rorb
rcrl
lahf
xchg
movswl
popa
jl
pop
jle
lea
sahf
mov
add
cs
push
in
jne
mov
cmpsb
lods
pop
lcall
or
push
push
daa
mov
ds
push
sarb
fbstp
pop
push
fisubs
sbb
nop
pop
and
fs
xchg
jg
adc
add
jl
add
rolb
adc
or
sbb
popa
fsub
hlt
jle
es
add
and
hlt
mov
push
cwtl
sbb
inc
cli
xchg
cs
clc
imul
push
negl
rcrl
sub
pop
cmp
and
lds
push
jae
out
out
repnz
mov
mov
movsl
fadds
int
clc
or
mov
mov
subb
jge
mov
xchg
sub
add
adc
mov
or
or
inc
into
mov
xchg
das
lret
or
cmp
mov
mov
push
ficoml
inc
stos
in
outsb
push
fimull
fwait
push
mov
sbb
test
aam
add
mov
dec
add
bound
push
in
xor
aas
xchg
pop
std
cmp
mov
mov
lods
inc
mov
mov
fadds
les
mov
add
inc
popf
iret
xor
push
inc
hlt
inc
shll
sarl
push
in
sub
je
daa
inc
mov
loopne
ds
inc
test
aaa
int3
push
inc
into
test
dec
ret
push
js
insb
sarl
leave
mov
jl
mov
in
pusha
fucomp
push
sbb
push
fcomps
ret
dec
push
jle
ja
loope
adc
loope
cmpsb
sbb
and
aas
loope
mov
cwtl
call
dec
in
adc
jg
loop
push
mov
loopne
jmp
ds
lcall
aam
lock
and
jb
jnp
add
fldenv
data16
mov
int
sbb
js
or
in
xchg
mov
push
xor
add
pusha
lahf
call
jmp
jb
mov
mov
mov
loop
jp
sbb
sub
aad
popa
pop
mov
inc
aas
push
out
clc
into
and
sbb
mov
and
in
jmp
and
xchg
aaa
sub
fcompl
lea
paddd
jmp
mov
cmpsb
arpl
movsb
int3
cmpsl
add
sahf
clc
shl
test
cwtd
dec
jb
cmp
js
ds
repnz
xchg
sub
add
add
inc
and
mov
lods
popa
outsl
fwait
aas
push
test
push
cmpsl
push
insb
fnstenv
jne
into
xor
cmpsl
ret
in
jns
cmc
nop
jmp
incl
subb
push
pop
mov
and
js
sbb
adc
js
mov
inc
fiaddl
mov
aaa
mov
into
and
and
mov
mov
mov
adc
fmulp
das
adc
push
xchg
aaa
adc
fs
das
ret
and
push
xchg
xor
dec
push
pop
js
mov
iret
stc
jb
mov
push
roll
pop
dec
adc
push
jne
pop
mov
pop
mov
mov
andl
loopne
fadd
push
out
cmp
sahf
add
js
scas
fwait
adc
or
add
testb
sahf
repz
mov
test
and
push
scas
adc
sti
std
scas
std
sbb
dec
pusha
pop
jp
xchg
movsl
dec
daa
data16
lret
lret
jns
shld
mov
sub
fsubrl
cmpsb
lds
cwtl
je
mov
sbb
mov
pop
xor
inc
add
repz
lods
push
push
jmp
mov
testb
mov
jb
pushf
mov
or
jbe
add
les
mov
outsl
fidivrl
dec
cmp
mov
cmc
call
or
adc
inc
pop
call
push
jmp
and
mov
notb
std
or
inc
adc
inc
test
push
and
push
mov
loope
aam
das
lods
add
jno
int3
lret
outsl
or
xor
divl
xchg
scas
fisubl
dec
jl
jae
jae
lods
adc
cli
mov
imul
movsb
clc
sarb
inc
stos
sub
fldt
es
repnz
pusha
repz
fdivrl
jle
add
scas
cs
cmc
dec
int3
das
push
cmc
scas
clc
sahf
pop
lcall
jmp
fisttpl
pop
js
xchg
jno
fsubrl
movsb
fxch
lock
jae
stos
mov
dec
fnstcw
aam
dec
jmp
adcl
sub
sub
and
pop
rcrb
fcompl
inc
and
leave
inc
jb
dec
scas
mov
adc
push
insb
out
outsl
cmp
jge
cwtl
addr16
push
adcl
outsb
scas
sbb
in
nop
roll
sub
xchg
push
and
imul
cltd
mov
pop
adc
add
cltd
xchg
add
mov
shrb
and
or
mov
outsb
and
jge
shlb
xor
mov
push
aaa
dec
in
jae
dec
jg
or
fwait
inc
ret
xor
sbb
lds
into
gs
data16
or
and
insl
les
cwtl
mov
sbb
jo
xchg
and
ds
mov
cmpsl
pop
mov
aaa
jp
das
leave
adc
mov
xchg
inc
ret
mov
repnz
out
xor
cmp
shl
add
push
jp
xor
adc
dec
int3
jbe
sbb
and
push
sbb
sbb
jmp
push
xor
mov
sbbl
jmp
and
jp
subl
xchg
push
sub
cmc
mov
mov
pop
dec
xor
mov
hlt
test
lahf
pusha
mov
pop
mov
daa
jb
pop
fs
pop
mov
loopne
jle
sbb
test
xchg
xor
and
hlt
ja
mov
inc
add
xor
mov
clc
int3
adc
bnd
arpl
sub
adc
stos
inc
xor
sbb
pop
mov
jl
sub
sbb
mov
daa
icebp
add
xor
lods
ja
into
push
lret
pop
push
jno
mov
cli
lods
xchg
aaa
leave
mov
jae
xchg
adc
dec
test
pushf
cli
jmp
out
aad
xchg
stc
push
push
inc
sbb
ja
cmp
gs
mov
mov
lret
loopne
adc
jmp
pop
ss
xchg
inc
and
das
add
fidivs
cmpsb
jecxz
in
xor
enter
xor
sub
xchg
dec
sub
pop
sbb
and
xor
push
test
into
push
out
cltd
sbb
and
ljmp
sbb
out
into
pop
movsl
paddsw
imul
lret
mov
popf
pop
dec
xchg
cwtl
rclb
sub
ret
fcompl
or
stos
loop
fbstp
inc
adc
mov
xor
and
adc
sbb
pusha
jge
fstl
push
sbb
mov
cli
xor
test
mov
dec
data16
sub
pop
push
mov
add
dec
dec
aas
add
bound
notl
jnp
or
sbb
cltd
add
outsb
fwait
and
les
push
cmc
pushl
adc
mov
jno
jmp
testl
std
test
jbe
xchg
popf
icebp
clc
cmpsl
je
jmp
or
stos
aad
mov
cmpsb
loope
movsl
testb
add
jl
mov
add
and
enter
jle
movb
push
fs
test
adc
ret
pop
xchg
or
inc
divl
push
pop
fnstenv
cmp
negl
add
and
bound
insl
mov
cmpl
test
jo
pop
leave
sti
jle
insl
xlat
mov
loop
pop
adc
mov
sub
in
xor
mov
aas
pushl
mov
int
push
mov
jne
fbld
mov
inc
adc
push
js
xor
mov
idivl
cmp
imul
ficompl
lret
mov
sub
mov
push
out
loop
in
jecxz
and
xor
add
dec
mov
vmovq
cmp
leave
cmpl
cmp
je
pop
pop
daa
inc
mov
push
xor
push
enter
pop
adc
lahf
jo
xchg
dec
cmp
lahf
nop
mov
jle
mov
adc
mov
scas
xor
fists
mov
out
push
cmpsl
mov
inc
inc
sbb
jge
push
add
mov
or
jo
cmp
test
inc
fsubrl
ret
into
sbb
ss
fildll
test
push
sbb
mov
push
ret
mov
mov
xchg
xchg
aam
push
insl
scas
adc
loopne
mov
dec
fisubrs
fsub
push
decb
xchg
popa
stos
sbb
ret
sti
jge
scas
scas
sbb
mov
lahf
js
mov
inc
mov
lahf
mov
xchg
inc
faddp
lods
pop
fwait
mov
lcall
and
xchg
jo
xchg
das
cmp
out
jbe
xor
dec
inc
std
adc
fdivrs
add
xor
fucomip
push
xchg
jmp
call
outsl
push
daa
ret
call
lods
adc
mov
data16
lret
dec
jecxz
scas
stos
mov
inc
push
cmp
fidivl
idiv
lea
ret
pop
loopne
lret
inc
sub
iret
rorb
push
push
test
in
sahf
add
xchg
sbb
in
mov
ret
jge
ret
push
push
or
inc
adc
std
inc
or
les
notb
and
andl
movl
aam
fadds
lods
mov
push
adc
pusha
xchg
stos
cmp
inc
add
and
enter
mov
mov
mov
xchg
fstps
jg
imul
fistps
in
data16
mov
or
push
inc
lcall
and
stc
loope
sahf
inc
pop
sbb
addr16
gs
and
fistpl
in
sti
scas
lods
mov
aam
inc
mov
mov
sarl
cmc
and
outsb
xchg
pop
dec
or
or
cs
mov
or
xchg
addb
xor
js
aam
aaa
pop
pop
fidivrl
clc
inc
mov
orb
cmpsl
pop
sub
mov
hlt
cs
stos
adc
inc
push
in
das
loope
jnp
std
push
xchg
sub
jno
int
push
mov
dec
dec
xor
cmpsb
push
enter
pop
outsl
std
hlt
pop
push
pop
notl
movsl
and
mov
cmp
mov
ret
rcll
mov
shll
movsl
cwtl
mov
lret
mov
push
lods
inc
jns
rorb
sti
loop
adc
jg
jae
sub
test
jne
push
sub
popf
xchg
mov
cmp
mov
bound
fldl
or
sbb
ret
mov
divl
lret
mov
mov
outsl
cmp
cwtl
mov
out
dec
rcrl
push
adc
gs
sarl
daa
loop
xchg
or
mov
out
sub
cmp
adc
mov
shl
mov
aaa
pop
inc
sbb
jmp
mulb
add
xor
outsl
jmp
mov
or
pop
xor
nop
lock
jo
push
push
cmpsb
imul
fwait
sbb
stos
inc
pop
cmp
cs
ds
push
lods
call
ljmp
xor
mov
jecxz
test
xchg
les
cmp
push
cmp
pop
pusha
lahf
lods
xchg
cmp
call
mov
stos
jns
repz
dec
xchg
data16
jmp
test
push
jl
enter
popf
cmpb
movsb
pusha
adc
mov
pop
or
mov
push
and
mov
clc
lea
xchg
lret
adc
add
pushf
or
pop
clc
pusha
sub
inc
incb
pop
adc
lock
jl
test
fbld
lods
and
ret
sti
ret
xchg
dec
aad
xor
add
dec
out
and
add
decl
inc
mov
jmp
test
cwtl
pop
rorb
jle
shrb
out
cli
push
mov
xchg
in
test
les
fistps
push
lret
adc
mov
insl
sbb
xchg
ja
imul
ret
cmp
incb
dec
fiaddl
add
dec
arpl
bound
lds
rcrb
dec
shlb
es
and
mov
cmpsl
daa
jo
aam
insl
add
imul
mov
fucomi
aad
and
adc
mov
arpl
xchg
xchg
mov
cmp
jecxz
mov
add
cmp
add
stos
dec
rorb
inc
ret
cmp
add
push
daa
or
jmp
mov
mov
cmp
xchg
add
fmul
fidivl
mov
lcall
data16
shlb
add
jp
int
jmp
and
sbb
data16
cmp
fildl
inc
es
fcoml
mov
test
cwtl
lds
adc
repz
jne
jle
push
fwait
pop
dec
rcrb
or
jns
mov
dec
lea
ss
dec
ds
repz
jp
mov
decb
inc
out
pop
cmp
rcrb
sub
jmp
pop
pop
divb
orl
lret
xchg
and
movsb
xchg
xor
inc
js
sub
push
sub
jecxz
lcall
and
and
imul
sbb
mov
xor
rcr
adc
xchg
cmc
dec
call
mov
in
cs
insb
js
add
cmp
fisttpll
nop
clc
mov
and
ja
imul
pop
lret
les
add
push
pop
paddd
jbe
outsb
test
add
pop
js
mov
fisubrs
ret
mov
mov
xchg
nop
push
outsb
addb
std
scas
xor
ficomps
dec
ret
in
add
ret
shr
mov
push
or
xor
aas
pop
xchg
mov
je
sub
xchg
mov
lds
or
int3
pop
pop
sbb
outsb
jl
mov
jl
jmp
insb
out
jmp
pusha
xorb
add
add
xchg
mov
rcl
xor
pop
inc
fsubl
and
jge
or
and
aas
dec
xor
adc
pop
xchg
insb
jg
mov
out
hlt
cmp
stc
cs
push
cmp
xchg
imul
adc
int
out
or
mov
or
stos
sbb
fistl
mov
push
testb
dec
icebp
into
js
mov
sti
call
pop
stc
imul
push
inc
sbb
jne
inc
sbb
orb
mov
rorb
push
push
adc
repnz
add
adc
or
rclb
leave
je
out
xchg
adc
out
scas
jp
hlt
data16
movsl
jbe
imul
subl
mov
mov
mov
dec
aam
fwait
jns
jne
mov
and
mov
sbb
mov
cltd
sub
cmp
mov
sub
in
inc
adc
adc
ret
ja
and
mov
popa
xor
sub
sbb
popf
inc
daa
dec
pusha
rol
lret
push
insb
outsb
mov
dec
test
aad
loope
repz
ret
push
pop
sarl
jle
dec
mov
js
repz
push
pop
jg
push
xchg
sub
das
mov
pop
dec
leave
sbb
mov
shrb
lret
fucomip
aas
out
jnp
push
push
pop
push
ja
ljmp
fs
out
fdivs
pop
push
jmp
filds
das
test
stos
mov
scas
fnstsw
scas
stos
push
out
adc
cmp
movsb
xchg
sub
inc
mov
bound
mov
jmp
cmp
push
addr16
jne
scas
add
sbb
adc
repnz
pop
int3
imul
cmp
sarb
divl
fisubl
out
jmp
les
loop
mov
daa
mov
popa
rorl
dec
sahf
std
jle
test
xchg
add
repz
push
mov
divl
mov
in
popa
daa
std
push
fistpll
sbb
and
int
sbb
repz
stos
jb
scas
lret
push
mov
pop
mov
lcall
or
xchg
ret
ss
insb
mov
fsubrp
jns
dec
mov
push
rol
arpl
mov
out
js
wbinvd
shrb
cmp
or
jno
movsl
sahf
pop
jmp
xchg
sub
dec
pop
push
sub
push
ret
pop
icebp
xor
jns
lds
and
clc
push
jo
or
mov
inc
ret
shr
es
test
int3
ds
loopne,pn
or
dec
push
mov
stos
or
mov
iret
movl
loop
sub
push
mov
xchg
or
dec
add
dec
mov
subl
fidivs
out
add
xchg
mov
fnstsw
outsb
pop
sbb
insl
repnz
jmp
mov
decl
inc
pop
divb
decl
andl
mov
into
xor
ss
add
push
aam
notb
addl
jp
cli
xchg
sbb
sbb
mov
insb
js
or
mov
test
rcrl
in
shlb
int
mov
mov
out
hlt
popf
jo
lret
clc
and
mov
outsb
out
call
xchg
mov
fsts
shll
cld
out
mov
sbb
sbb
adc
add
mov
push
ss
je
mov
fsubs
add
pop
dec
add
mov
sub
ja
xchg
xchg
movsl
jnp
mov
js
ja
xor
adc
jmp
cmp
cmp
push
pop
mov
js
in
out
or
mov
fs
mov
xchg
and
rorl
push
out
insl
xchg
xchg
dec
add
push
nop
xor
insb
push
xor
fistps
out
add
push
sahf
lods
fstps
in
shr
inc
lock
ss
lods
shl
test
out
sti
or
inc
mov
add
cmc
push
out
dec
push
loopne
and
jb
scas
sub
mov
mov
dec
cwtl
cmp
and
pop
cmpsb
push
jb
lahf
push
cmpsb
mov
push
sbb
and
add
add
adc
jbe
in
cmpsb
test
sbbb
lahf
adc
in
or
pop
addl
pop
mov
roll
imul
pop
test
rclb
pop
xchg
jnp
or
in
cmp
loop
test
in
mov
and
push
jno
or
mulb
lods
movsl
mov
sbb
imul
mov
nop
inc
adcl
adc
mov
ret
outsb
dec
pop
jb
aad
push
xchg
imul
outsb
xor
dec
sub
add
cmp
shlb
sti
js
push
outsb
cs
out
mov
in
xchg
leave
insl
add
mov
xor
or
scas
mov
sti
test
fistpl
add
adc
cmp
inc
gs
push
xor
aaa
fsubr
cwtl
aaa
and
std
es
sbb
out
inc
mov
outsl
jnp
xor
pop
insl
cmp
sub
jl
adc
adc
je
and
lahf
xor
mov
pop
push
jbe
js
cmc
ss
fstl
addb
mov
cld
jnp
inc
cmp
and
daa
mov
fisttps
cmp
mov
int3
mov
mov
fwait
sub
int
mov
inc
mov
sbb
test
int3
jne
aad
mov
ret
and
out
scas
fmull
push
jl
inc
mov
scas
out
das
orb
and
or
cmpsl
jne
fnstenv
fcoml
inc
mov
js
out
jl
dec
testb
seto
mov
in
test
sti
or
adcl
jl
jb
push
mov
lret
mov
push
lahf
bound
out
sarb
repnz
sub
in
push
mov
cmp
out
test
xor
loop
sbb
push
and
jg
add
nop
popa
and
cli
dec
pop
shl
add
push
xchg
cmp
cmpsb
mov
dec
subl
dec
inc
stc
je
mov
jg
push
cmc
inc
cmp
cmpsb
cmp
mov
mov
movsl
xor
xchg
xchg
repz
pop
jp
cltd
cli
add
int
shrl
mov
jb
push
pop
out
jmp
add
in
jno
out
loopne
push
out
mov
sub
test
or
mov
cmp
pop
ss
lret
adc
in
mov
aam
push
out
test
cli
xlat
mov
jb
pop
xchg
pushf
sbb
into
repnz
cmp
fdivrl
addb
xor
lea
sub
mov
pop
mov
js
xor
mov
push
push
daa
mov
cmp
inc
clc
mov
jle
sbb
push
outsl
repnz
add
movsl
stos
mov
xor
xchg
mov
push
mov
dec
push
lds
mov
cmp
add
adc
mov
mov
in
ljmp
cmp
or
xor
push
push
insl
inc
shrb
loop
cmp
arpl
aad
xchg
daa
int
sbb
dec
sbb
jbe
popa
sub
cmpsb
in
jmp
inc
inc
cmp
push
hlt
lea
sbb
outsl
ljmp
loope
hlt
arpl
test
mov
enter
jns
mov
pushf
xchg
pop
lahf
ret
push
insb
dec
fwait
sub
xor
mov
add
inc
fnstenv
mov
pusha
push
mov
or
mov
mov
and
mov
in
insl
cs
mov
add
repz
hlt
and
rol
lret
outsl
insb
mov
lahf
movsl
mov
std
mov
lahf
jmp
popf
imul
stc
xlat
cmp
imulb
movsl
cmp
mov
in
inc
sahf
mov
dec
loopne
and
fwait
pop
mov
xor
inc
not
out
mov
scas
push
xlat
cltd
dec
je
push
rclb
add
mov
pop
mov
dec
movsb
inc
outsb
lods
out
ja
dec
stos
pop
fldcw
js
cmpsb
cmp
xchg
mov
dec
pop
mov
sbb
insl
lea
lock
pop
mov
or
xor
ljmp
pop
stos
push
push
aad
push
push
dec
inc
cld
push
fsubs
or
xchg
jmp
dec
bound
push
sub
add
cld
inc
lahf
daa
icebp
push
add
and
imul
dec
pop
loopne
mov
mov
push
sub
add
mov
or
test
jo
dec
stc
cmp
inc
xchg
test
imul
dec
in
jb
rcl
push
mov
cltd
mov
push
mov
push
sbb
and
push
in
sbbb
and
inc
pop
cmc
cmp
sub
jb
movsb
or
xchg
adc
pop
rcrl
or
xchg
gs
pop
iret
movsb
ret
call
xchg
pop
xchg
xchg
int
mov
push
icebp
xor
cld
cmp
jle
ret
jge
pop
jne
pop
dec
push
cmp
push
xchg
cs
jecxz
je
xor
mov
daa
jae
test
enter
inc
das
repnz
out
sub
sbb
mov
repz
in
jge
ljmp
mov
xor
inc
push
call
and
push
movsl
sbb
imul
xor
jg
pop
imul
clc
mov
in
lods
je
jle
mov
flds
pop
cs
cmp
mov
fbstp
sub
xor
inc
test
inc
fxch
mov
loope
fistpl
fdivl
enter
push
aad
insl
pop
dec
stos
mov
out
rcll
outsl
adc
call
sbb
jb
cmc
and
adc
xor
dec
mov
mov
inc
sub
xlat
dec
rol
mov
push
dec
mov
jmp
add
mov
int3
shrb
push
icebp
ljmp
lret
pop
add
jl
lret
outsl
mov
push
mov
sbb
jecxz
mov
hlt
inc
adc
mov
xlat
and
dec
rep
xchg
push
pushf
inc
push
push
ret
stc
inc
push
lcall
mov
mov
leave
into
frstor
adc
jmp
sahf
pop
insl
jno
mov
clc
xor
xor
push
mov
ja
mov
sbb
add
or
mov
mov
push
push
les
jmp
push
sub
xchg
sub
outsb
add
sbb
stc
lods
inc
aam
je
das
mov
or
les
jle
or
add
or
out
mov
ret
cmpb
aad
idiv
orb
ss
stos
inc
sub
repz
movsb
repnz
scas
int
push
lods
pop
clc
outsb
ret
pop
cmp
mov
jp
dec
ljmp
stc
mov
mov
push
mov
sub
cmpsl
xlat
adc
inc
jp
xchg
cmpsb
inc
push
aas
out
jp
mov
add
and
es
cmp
lock
mov
dec
out
ret
jge
incl
lahf
pop
jnp
add
xchg
cmp
mov
cmp
sub
push
out
dec
sbb
inc
push
out
inc
and
popw
loop
xor
sub
std
leave
mov
adc
mov
inc
jmp
jbe
xor
or
add
push
sbb
and
in
push
mov
in
faddl
jecxz
aas
push
push
into
movsl
xchg
js
outsl
stos
test
inc
push
mov
in
clc
cli
xchg
daa
push
in
incl
or
mov
push
roll
lcall
jnp
test
xchg
nop
adc
fidivl
jp
clc
mov
std
roll
mov
enter
jno
outsl
lret
sti
fwait
jbe
out
mov
jmp
pop
xchg
jge
insl
cld
push
mov
mov
in
dec
les
decl
or
call
mov
add
mov
adc
cmp
or
jns
push
das
pop
pop
rclb
imul
pop
fmuls
test
test
ss
test
dec
fs
xchg
pop
fcmovbe
call
sub
das
fsubrs
movsb
mov
push
lcall
inc
or
or
sbb
and
sti
or
pop
data16
mov
out
mov
ss
in
paddq
rol
movsl
mov
jp
xor
orb
movsl
dec
shlb
inc
inc
pop
jnp
repz
mov
xor
dec
push
leave
cmp
ret
dec
push
mov
inc
icebp
mov
rcll
pop
cmp
mov
xchg
cmp
lret
sub
xchg
lock
xlat
push
popf
dec
cmp
sub
movsb
data16
xchg
cmp
xor
pushf
jmp
inc
mov
xor
mov
jle
mov
stos
lahf
push
jb
ja
or
pop
mov
sub
adc
xchg
jnp
jl
mov
js
pop
push
popf
test
cltd
stos
fwait
leave
and
xchg
mov
dec
push
adc
jno
cli
shll
inc
fwait
push
inc
sub
mull
idivb
fsubr
cmpsb
ret
mov
sub
test
jne
mov
pushf
cmp
push
mov
ds
out
and
mov
jle
int
fwait
lahf
sbb
sbb
cld
test
scas
mov
sub
pushf
cmp
popf
ja
add
fs
inc
xor
repz
dec
dec
dec
faddl
imul
push
stos
pop
shll
mov
fdiv
scas
mov
mull
ret
subl
jp
lcall
movsb
sbb
cmp
add
dec
jbe
loopne
out
or
mov
add
jns
xchg
adc
sub
pushf
in
xchg
xchg
int3
sbb
mov
add
push
movsl
pop
insb
adc
in
lods
shld
mov
test
aad
add
insl
mov
mov
fidivrs
dec
and
lcall
cmpb
ljmp
mov
ds
test
das
imul
adc
mov
push
fcomps
xor
pop
aaa
enter
mov
pusha
ljmp
pop
jb
pop
xor
stos
jge
sbbb
or
fstpt
push
xor
mov
and
ret
ret
adc
outsb
in
shll
cld
push
mov
sbb
imul
div
mov
or
pop
movsl
repz
push
and
dec
pop
in
mov
into
xor
xlat
fcomps
or
push
mov
repz
inc
scas
sbb
inc
stc
pop
insb
jg
cmp
stc
jo
jmp
in
into
lea
cmpsb
jl
loopne
cmp
jns
mov
stos
movsb
adc
insb
dec
or
mov
jmp
into
sbb
push
out
in
insl
push
imull
das
inc
pop
in
imul
lods
cmp
push
pop
jns
add
pop
outsl
xor
lds
stos
mov
pushf
jnp
les
enter
push
sbb
xor
push
and
mov
xor
or
jns
inc
add
insl
dec
cmpsb
pop
sbb
cmpsl
aas
dec
add
test
mov
push
jmp
mov
stos
or
jb
js
cltd
aam
mov
out
push
mov
add
and
push
push
mov
insl
adc
je
movsb
mov
jbe
inc
push
in
pop
mov
mov
xor
jp
push
add
fildll
add
push
pop
lcall
adc
repnz
xchg
or
andl
cld
sbb
jl
imul
push
leave
jae
mov
jp
and
popl
iret
cwtl
pusha
aas
stos
loope
lods
xchg
mulb
clc
push
sub
je
fistps
push
out
rcr
and
and
ja
lock
xor
mov
les
mov
xchg
xor
fsts
out
pop
add
repnz
adc
cmp
xor
aad
repnz
mov
mov
bound
fmul
and
mov
iret
jno
push
mov
pop
test
and
in
dec
lahf
repnz
xor
cs
rol
shll
cmpsl
pop
mov
jns
cmp
fisubs
jnp
cmpsb
cli
out
js
sbb
or
and
and
int3
pushl
std
or
push
je
outsl
insl
notl
push
pop
inc
or
outsb
pusha
push
fnop
mov
jo
loop
rcrl
jae
push
test
dec
loop
lock
mov
jns
push
mov
jns
push
ljmp
pop
xchg
or
sbb
sbb
xchg
xchg
ret
decb
or
or
xchg
sbb
add
cmp
jbe
push
lcall
pop
call
cmp
ficoms
xchg
push
mov
js
cld
int3
push
add
ficompl
test
push
fdivs
sbb
mov
and
mov
push
repnz
mov
shrl
mov
xor
xorb
call
adcb
fmuls
icebp
pop
lcall
insb
int3
pop
xchg
fdivl
push
xlat
int3
popl
sbb
inc
dec
ljmp
pop
mov
sbb
mov
pop
jecxz
push
pop
divb
out
pop
fdivr
inc
push
loope
jge
add
sbb
mov
jnp
in
es
das
pop
inc
fdivs
in
aad
scas
sbbb
jle
data16
xlat
into
mov
push
enter
idiv
out
pop
aad
mov
and
sbb
sti
test
push
xchg
sub
xchg
aas
cmp
inc
push
and
jle
pushf
inc
fsubs
pop
dec
sub
push
mov
xchg
or
fnstsw
jecxz
jmp
shll
cmp
insl
dec
dec
popl
push
and
daa
push
sub
xchg
fdivrp
mov
ja
repnz
sub
cltd
cmp
clc
xor
jg
test
inc
jp
jbe
popf
xor
iret
cmpb
xchg
mov
jno
mov
mov
imul
test
sahf
or
or
das
mov
jp
cmp
push
pop
stos
xchg
xlat
loop
or
sarb
idivb
pop
lret
push
imul
push
das
xchg
popa
dec
add
adcb
gs
bound
push
sti
out
sarl
shrb
or
ficomps
sub
sub
loope
test
inc
loop
push
mov
adc
or
xchg
inc
sti
pusha
ja
cmc
or
dec
mov
addr16
inc
jbe
add
scas
xor
push
dec
jecxz
aas
test
adc
sbb
sbb
stos
xchg
out
in
push
sahf
stos
addl
lea
jl
xchg
mov
stos
mov
pop
or
sbb
mov
ljmp
addr16
es
subb
sbb
cmovns
stc
jns
subb
jnp
mov
add
and
jne
daa
in
cltd
mov
push
xor
lcall
std
jmp
aaa
xor
call
push
rcrb
mov
insl
mov
xor
testb
pusha
sub
lds
pop
jne
cmp
loope
inc
stc
cmpsl
mov
jge
push
gs
sbb
loope
dec
or
dec
jle
jae
pop
jae
sbbb
popa
data16
inc
icebp
cmp
loopne
call
mov
pop
divl
pop
adc
rcrb
dec
arpl
aad
popa
andl
cs
test
pushf
je
out
dec
loop
or
cmp
les
lock
lret
push
xor
icebp
jmp
sbb
sub
cli
push
mov
jne
xlat
mov
into
adc
insb
testl
adc
push
push
int3
aad
andl
ljmp
imulb
jmp
sub
sbb
cmp
ja
push
add
cltd
daa
std
and
sbbl
mov
out
push
mov
mov
jecxz
xor
stos
stc
or
cmp
mov
in
pushf
dec
add
mov
cmpsb
std
adc
es
xor
movsb
sub
pop
xchg
mov
mov
imull
repnz
arpl
addr16
mov
imul
and
imul
jne
add
test
repnz
cmp
sub
aam
aad
testb
jns
shrl
sbb
pop
movsl
pop
sbb
sub
sbb
mov
dec
sub
aad
lea
xlat
out
sbb
leave
icebp
mov
test
mov
xor
sub
cld
fidivrs
aaa
cltd
mov
movsl
jno
fnstenv
out
icebp
sahf
pushf
test
add
mov
fiadds
shrb
pop
jne
pop
mov
inc
lcall
adc
sbb
les
not
jbe
ret
cmc
push
adc
in
shlb
or
push
scas
test
sahf
xchg
mov
pop
mull
adc
push
mov
adc
ja
push
xor
xchg
out
dec
push
popa
or
and
scas
rcll
mov
or
ja
outsl
fcoms
sahf
cmp
loop
arpl
cmp
mov
cmp
inc
ret
jmp
pushf
inc
jb
ret
sti
jbe
xor
add
ljmp
jl
shr
mov
jbe
add
xchg
jo
std
xchg
loop
add
shlb
or
out
xchg
lods
call
sub
iret
jecxz
sti
ja
sub
jecxz
xor
pop
xor
adc
xchg
data16
cltd
xchg
mov
enter
adc
mov
ret
inc
outsb
adc
inc
adc
pop
cmc
mov
loop
lret
cs
push
mov
inc
pop
jge
adc
lods
fisubrs
outsb
aam
je
xor
ljmp
inc
jnp
xchg
sub
in
push
in
scas
xchg
in
add
cmp
sarl
inc
lods
dec
xchg
pushf
in
iret
push
cmpsl
sarl
std
jns
mov
addr16
mov
lds
pop
imul
mov
sbb
test
stos
dec
mov
lcall
xor
cmp
pop
std
mov
out
imul
test
and
sbb
push
jle
fisubrs
push
fistps
push
loop
stc
or
mov
cmp
jecxz,pt
js
inc
cmpsb
mov
jb
int3
cmpsl
sti
std
xlat
stc
adc
xor
adc
push
sub
cld
jp
mov
loope
movsl
in
mov
jbe
mov
mov
jbe
push
test
pop
mov
scas
and
and
push
divb
arpl
push
and
aad
mov
xor
jns
cwtl
push
inc
adc
test
in
mov
pop
insb
push
enter
push
popf
push
sbb
cmp
and
test
mov
sbb
dec
pop
xor
test
das
addr16
xor
sub
insb
inc
fadd
fmuls
cmp
fmul
dec
lock
fwait
ret
sbb
xor
push
jge
dec
mov
iret
xchg
dec
cltd
add
bound
imul
pop
xor
pop
clc
iret
sub
nop
daa
repnz
ss
mov
scas
or
je
xchg
sub
jno
js
sbb
or
test
xchg
mov
or
imul
hlt
je
mov
ret
sar
push
add
push
call
test
pop
sub
outsb
sarl
add
es
nop
pop
mov
or
lret
ss
repz
xor
xchg
test
jle
fstl
leave
outsb
addl
cmp
mov
mov
mov
push
sbb
movsl
xor
ljmp
fisttpll
enter
test
sti
in
dec
ret
test
bound
mov
andl
mov
inc
rcrb
je
xor
sbb
cmp
dec
popa
dec
movsb
sbb
adcl
adc
add
pop
jne
cmp
cmp
add
xor
inc
and
inc
ret
popa
pushl
adc
ja
xchg
mov
movsl
jne
cmp
loopne
es
cmp
pop
add
xor
jp
push
in
sbb
dec
or
movsl
pop
jl
subl
push
stos
and
cli
rorb
sub
shrl
lods
add
mov
pop
push
out
push
or
sub
inc
mov
xchg
push
sub
push
out
cmp
mov
cmp
in
andb
or
jb
in
andl
xchg
xor
push
imul
xchg
cmp
out
jne
lds
pop
push
mov
mov
imul
add
fs
inc
sub
sbb
xchg
dec
in
fwait
stc
loop
sarl
lds
and
lods
andb
data16
cmc
cmp
fdiv
sub
jae
jle
mov
mov
push
sub
xchg
jl
fs
xchg
fistps
mov
cmp
sub
mov
pop
sti
ds
sub
test
fwait
xor
mov
idivb
jg
xlat
fbstp
sub
dec
mov
sub
sbb
incl
les
pop
or
fsubp
rol
loope
push
stos
sbb
xor
and
fists
out
inc
jb
ds
lret
leave
gs
mov
and
mov
jo
cmpsb
push
mov
mov
xor
or
cmp
adc
int3
dec
add
and
inc
shrl
outsl
inc
repnz
push
aam
jecxz
and
pop
jmp
dec
into
push
je
outsb
mov
jae
leave
test
icebp
inc
sbb
dec
and
jmp
mov
adc
jmp
enter
pop
add
xchg
sub
pusha
xchg
stos
aam
jl
push
stc
into
fsub
stos
jp
ja
movsl
push
add
pop
mov
and
jg
adc
outsb
push
pop
test
gs
mov
in
test
subb
xchg
test
cmp
insl
jp
lahf
jge
enter
dec
int3
add
inc
xor
and
mov
pop
jge
addr16
xor
cmpsl
inc
cmpsb
fwait
inc
xchg
int
in
xor
lahf
jle
add
jecxz
add
mov
mov
dec
pop
xchg
dec
mov
xchg
sub
movsl
icebp
dec
nop
push
sbb
mov
imul
sbbl
jne
xchg
mov
mov
testb
loopne
stos
les
testb
jns
lods
inc
cwtl
inc
pop
pop
mov
lret
or
adc
insb
cmpb
imul
jge
iret
call
xchg
jmp
nop
mov
adc
dec
push
jnp
outsl
push
sub
insb
or
les
repnz
fcomi
nop
cmpsl
ds
or
shrl
in
loop
ret
xor
rolb
jmp
mov
loopne
xchg
lss
mov
xor
xchg
sub
mov
xchg
es
dec
lods
inc
cmp
push
add
mov
add
insb
xor
mov
cltd
sbb
pop
dec
xchg
sub
jns
mov
inc
aas
mov
adcb
clc
stc
pop
movsl
dec
sahf
xor
xchg
sub
test
pop
or
enter
lret
xchg
lret
add
sbb
jns
je
xchg
mov
rclb
rclb
pop
fdivl
push
jbe
push
sub
enter
jae
test
sub
dec
cmc
mov
insl
ret
les
mov
xchg
in
sub
fisubl
rorl
sti
jmp
pop
ret
xchg
cli
mov
mulb
sub
icebp
inc
and
out
into
and
sbb
and
loop
orl
adc
mov
les
mov
test
movsb
loope
mov
jp
or
pop
xchg
test
loope
inc
push
pop
repz
dec
xor
stos
sbb
leave
aaa
movsl
cli
cmpsb
jno
xlat
sbb
mov
outsl
pop
mov
add
jge
loopne
mov
lret
jno
mov
stos
adc
fldl
mov
out
xchg
fidivs
iret
adc
fldenv
outsl
xchg
mov
and
daa
int3
or
std
xchg
jnp
sbb
adc
sub
add
test
jne
mov
inc
push
in
mov
pop
push
insl
scas
inc
outsl
daa
inc
mov
jle
push
aaa
mov
jnp
sbb
push
dec
shrl
push
or
mov
xor
test
imul
icebp
xor
sub
xor
or
mov
mov
mov
and
rcrb
gs
stos
lcall
in
sub
sub
mov
aam
test
mov
pop
add
test
adcl
fisubs
js
jle
jle
and
push
in
add
mov
add
inc
pusha
push
gs
sbb
ficoml
outsb
nop
and
fsubl
stos
dec
push
inc
out
fdivrl
test
out
std
jg
mov
xchg
ljmp
nop
push
lods
xchg
rol
mov
lods
icebp
test
pop
sbb
mov
popf
stc
es
daa
ljmp
loop
xor
cmpxchg
aas
lds
mov
cmp
incl
sub
inc
or
daa
ss
xor
jns
mov
jns
inc
mov
int3
pop
pushf
or
into
daa
cs
adc
add
mov
adc
std
sub
jnp
mov
push
hlt
mov
ds
data16
daa
mov
imul
mov
inc
js
inc
dec
lds
mov
pushw
rcl
jg
cmp
xor
daa
add
sub
xor
imul
ret
ret
sbb
push
cmp
cmp
mov
daa
ret
sahf
dec
dec
cld
scas
xor
sub
dec
jecxz
jg
hlt
lcall
leave
mov
lcall
pop
sub
jg
dec
mov
pop
lahf
pop
sahf
sub
cltd
in
dec
cs
dec
push
je
aaa
or
imul
or
jae
mov
loop
lods
mov
mov
jne
push
push
insl
shl
outsb
lret
pushf
test
mov
insb
andb
jnp
cmp
lods
out
arpl
cmp
pop
orl
mov
aam
andl
xor
insl
cld
adc
or
ss
dec
pusha
lahf
enter
rorl
repnz
in
add
jns
scas
test
mov
fwait
pop
push
xor
lods
inc
jl
inc
ficoml
popa
testl
dec
push
xchg
jg
popf
pop
std
pusha
jbe
sbb
repz
call
or
mov
and
ljmp
xchg
push
cmp
stos
mov
pop
jle
shrb
push
fbstp
or
arpl
mov
xlat
loop
int3
jg
nop
pop
and
mov
arpl
jge
push
scas
mov
scas
fisubrs
ret
add
push
scas
jno
fstp
insb
mov
lcall
jnp
cld
mov
lods
and
div
out
push
adc
test
pop
or
int
ficoms
rcl
sub
call
mov
jecxz
vpxor
outsl
movsb
les
mov
cmp
inc
frstor
sbb
lods
cmp
mov
insl
fwait
cs
cltd
xor
pop
dec
es
mov
std
xor
sub
inc
mov
jbe
mov
jbe
popl
xchg
pop
dec
dec
adc
jne
jl
cmp
add
es
cmp
sub
mov
jne
and
int3
repnz
ja
pop
xchg
adc
sub
mov
cs
sub
pop
inc
inc
inc
nop
sti
lret
adc
and
addl
sbb
and
xor
mov
fsubs
jb
mov
stos
inc
dec
loop
je
test
dec
sbb
jmp
or
jmp
cmp
jp
mov
mov
or
into
push
jb
mov
shlb
cli
inc
loop
inc
ss
shl
adc
add
aaa
or
ret
addr16
fdivs
xor
mov
mov
test
dec
xchg
mov
or
into
push
or
lea
loop
cmp
lea
pop
sbb
lds
js
sbb
mov
aaa
cmp
imulb
jb
fimull
imul
cli
mov
push
add
xchg
add
test
dec
rolb
mov
aaa
mov
insl
pop
loopne
pop
mov
iret
cmp
scas
mov
xorl
loope
sub
cmp
pop
xlat
sub
mov
sub
xor
pop
loop
xor
jle
mov
rcrl
mov
fnsave
jo
cmp
jnp
mov
repz
mov
dec
push
push
popf
push
das
movsl
icebp
push
cmpsl
dec
mov
orb
xchg
fstpl
sub
xorl
xchg
push
push
sub
shrl
aad
or
or
xchg
inc
inc
leave
lods
mulb
xchg
mov
sbb
sub
test
shl
push
in
bswap
insb
shll
lods
jmp
pop
pop
imul
xchg
pop
ret
dec
mov
pop
sbb
sub
push
adc
adc
mov
cmpsl
into
fldl
popa
or
loopne
fnstenv
add
rcrb
imul
push
out
mov
lret
xchg
inc
lcall
sbb
notl
movsb
out
jb
out
ljmp
xorb
fisubs
xchg
xor
imul
pop
jbe
gs
mov
inc
scas
dec
jno
enter
or
mov
cwtl
mov
enter
cli
ss
push
sarb
addr16
inc
mov
xchg
gs
mov
popa
mov
fdivrs
outsb
aaa
das
into
stos
mov
xchg
icebp
mov
and
mov
mov
push
inc
or
push
sbb
aas
loopne
js
pusha
sub
xchg
xchg
or
jmp
mov
inc
push
cmc
fucomp
mov
mov
xchg
pop
xor
cltd
xchg
ljmp
jbe
je
ljmp
int
stos
js
push
stos
mov
mov
add
or
stc
sbb
mov
jnp
pushf
repz
jns
adc
mov
sti
push
pop
pop
pop
push
sub
cmp
out
pop
mov
lds
das
add
in
push
pop
ds
mov
movsb
or
jb
jl
jbe
lcall
xchg
or
addr16
sbb
ss
pop
or
aam
jns
add
pop
xchg
adc
adc
xor
pushf
xor
inc
mov
dec
fldt
inc
jns
pop
mov
test
push
xchg
dec
add
dec
movsb
xor
popa
insb
jb
sti
test
cmp
gs
adc
scas
xchg
add
imul
in
hlt
mov
dec
mov
fwait
mov
sbb
cli
enter
sarb
inc
mov
xchg
call
and
mov
or
rorl
cld
cwtl
sub
repnz
fnstcw
push
xchg
sti
dec
divl
sbb
bound
mov
lods
xchg
js
adc
push
mov
stc
inc
and
stc
or
mov
push
sbb
lret
sub
dec
lcall
repz
ss
out
addl
mov
pop
xor
sub
xor
outsl
negl
mov
mov
mov
mov
sub
je
sub
lods
xchg
pop
inc
xchg
mov
pop
and
jne
pop
mulps
inc
cmp
inc
lahf
xchg
and
hlt
sbb
insl
dec
aad
out
add
sub
lea
das
ja
popa
push
push
fwait
xchg
lcall
fistpl
mov
pop
ljmp
loop
mov
cwtl
xchg
xor
inc
cmp
jge
aam
mov
pop
lock
lcall
mov
imul
in
es
iret
xlat
jno
mov
iret
nop
add
push
mov
aaa
mulb
idivb
bound
jecxz
mov
aaa
lret
fcomip
loopne
adc
imul
sbb
push
rcrl
sti
test
scas
inc
sub
pop
vaddsubps
push
inc
dec
push
std
jno
in
dec
push
ret
outsb
or
inc
push
push
and
dec
inc
cli
lea
pop
inc
push
sub
fimull
or
frstor
ficompl
pop
loopne
mov
test
adc
xor
mov
ss
gs
and
and
cmpsb
xchg
cmp
mov
mov
addr16
addl
jo
call
test
push
test
add
mov
xchg
mov
test
mov
jae
or
mov
mov
dec
push
adc
test
mov
into
into
mov
incb
ret
mov
cmpsl
xchg
or
mov
cmp
inc
pusha
xchg
add
sbb
inc
jo
sub
inc
xlat
pop
dec
mov
lods
popa
xchg
imul
ficompl
jbe
test
inc
fimull
add
pushf
aas
jae
fsts
aaa
pusha
sti
fisubrl
icebp
in
push
inc
and
xchg
xchg
push
add
ficomps
cmp
xor
outsl
movsb
xchg
das
push
and
ss
lea
imul
nop
ficompl
push
ljmp
pop
hlt
in
push
popa
clc
push
or
lock
pop
mov
bound
lret
pop
adc
cld
sbbl
imul
push
cs
push
stos
mov
push
ror
inc
out
inc
xor
int
add
push
lcall
in
orl
push
shlb
or
dec
inc
dec
fsubs
outsb
sbb
sub
pop
sub
out
mov
enter
ret
lahf
ja
lcall
jg
scas
in
sub
lods
and
fcomip
add
dec
fisubl
mov
inc
ljmp
adc
push
gs
mov
mov
xor
add
adc
push
lds
xlat
notb
leave
push
jne
out
popa
inc
sbb
clc
inc
and
cltd
mov
leave
fnstenv
pop
cld
or
ret
out
or
call
in
inc
movsb
inc
pop
or
lods
mov
lock
add
xor
dec
push
pop
xlat
mov
xchg
ds
jmp
fisubrl
cmp
inc
push
bound
push
jg
lret
sbb
xchg
xchg
addr16
xor
xor
out
in
lret
add
cmp
xchg
shrl
mov
into
adc
add
dec
loopne
aas
in
sarl
mov
pop
mov
mov
dec
bound
or
inc
or
push
inc
and
lcall
jo
enter
movsl
or
lea
push
mov
jne
sbb
pop
pop
xchg
xor
insl
loop
int3
mov
jmp
mov
pop
out
mov
jno
in
nop
jl
push
jns
ret
cltd
leave
jecxz
sbb
out
mov
pop
mov
jl
mov
adc
push
sti
cmpsl
mov
push
es
mov
add
sbb
dec
fiaddl
inc
xor
inc
fcompl
push
add
ret
mov
enter
push
rcr
mov
ficoml
orb
ja
mov
mov
fcoml
jno
xor
xor
inc
data16
sbb
xchg
cld
imul
insl
into
dec
clc
or
iret
loope
insl
jo
daa
mov
inc
cmpl
mov
sbb
sub
pushf
or
inc
xlat
add
into
lds
repnz
cmc
adc
jns
xor
add
hlt
ds
xor
lahf
xchg
dec
mov
shll
sbb
inc
inc
xchg
rclb
pushf
scas
in
push
jno
mov
sub
mov
jns
push
movsb
jns
mov
or
mov
xchg
negl
sbb
std
or
pop
rcl
divl
movsb
rorb
cmp
faddl
test
and
loopne
cmp
mov
jb
mov
jbe
cmpsb
popl
data16
mov
test
loop
hlt
xor
mov
pop
xor
fsubs
xchg
nop
mov
sbb
fs
push
data16
loopne
adc
and
mov
dec
add
xchg
fs
mov
ret
lcall
and
addr16
out
dec
rclb
lcall
inc
jmp
jmp
mov
lahf
rcrb
in
cmp
lock
jmp
cmp
mov
popa
dec
in
push
fmull
dec
push
ficomps
shlb
addw
dec
pop
movsb
cmp
push
push
inc
popf
ds
push
mov
pop
in
add
dec
aam
jbe
iret
push
shll
cmc
push
add
xchg
push
fsub
lds
adc
push
in
sub
stc
loopne
mov
xchg
fsubl
fucomip
or
repz
adc
sub
push
pop
push
jle
cmp
sbb
out
cmp
dec
flds
ret
push
out
mov
adc
ss
ds
xchg
enter
sbbl
and
cmc
mov
jl
ret
dec
mov
movsl
inc
in
out
adc
pusha
xchg
sysexit
popa
dec
add
outsl
test
sub
sub
insl
lret
sub
push
aam
push
fsubl
fiaddl
cmpsb
addl
dec
adc
xor
bound
outsl
or
or
jg
dec
test
nop
test
in
jnp
or
pop
fs
mov
pop
in
dec
lea
mov
rcr
push
sub
enter
mov
push
or
popa
sub
test
loop
popf
hlt
ss
jns
and
cmpsb
imul
lret
push
adc
pushf
inc
in
mov
pop
cmc
sti
mov
fcompl
push
xchg
mov
sbb
inc
and
addr16
dec
dec
ljmp
lcall
movd
loope
inc
testl
sub
lret
jle
jb
xchg
xor
mov
cmpsl
lods
cmp
mov
pop
xor
andl
popf
sub
repnz
fisttpll
mov
es
aam
cmp
in
xchg
movsb
nop
push
jmp
icebp
pusha
adc
jmp
xor
pop
adc
dec
rorl
rcrb
add
sbb
jecxz
mov
pop
mov
dec
jno
push
and
aad
imul
pop
mov
repnz
mov
xor
dec
fmuls
mov
dec
out
call
out
out
mov
jne
fwait
mov
add
jl
xchg
lods
fldcw
mov
add
std
std
fidivl
ret
jecxz
push
fldcw
xchg
pop
jae
sbb
jl
rclb
std
or
cmpsb
fsubrp
add
repz
dec
sub
nopl
jo
testl
add
fucomi
iret
test
jno
sub
sub
cmp
xchg
and
and
cmp
inc
xlat
pop
fstl
and
fildll
push
ret
in
les
mov
lret
dec
add
sub
enter
xor
mov
push
inc
repz
bound
loopne
jle
daa
adc
mov
dec
stc
xchg
cld
jne
cmp
and
dec
sbb
pop
adc
sbb
mov
cmp
rorl
add
arpl
imul
mov
xchg
inc
dec
pop
adc
xor
inc
sbb
cwtl
fstl
btl
dec
jl
xlat
cmp
fisubl
dec
pop
xor
push
dec
jmp
adc
sahf
xor
xchg
mov
mov
shl
jl
data16
lret
pop
push
mov
ja
lea
mov
aam
adc
xor
shl
jnp
mov
push
cmp
inc
data16
fstpt
scas
jecxz
sbb
cmp
cmp
push
jb
addr16
nop
iret
arpl
in
jnp
and
pop
mov
insl
cmp
jl
sar
jae
fstp
xchg
lret
jge
jo
sbb
dec
mov
iret
pop
addb
dec
adc
mov
js
xor
jge
jp
mov
hlt
mov
out
and
loopne
fs
mov
lcall
add
bound
push
je
cmc
nop
adc
out
fildl
jne
xchg
inc
push
dec
jnp
fisubrs
sub
xchg
inc
mov
pop
push
pop
jge
das
cmpsb
jbe
stos
inc
or
cs
test
das
sahf
int
fs
imul
and
jmp
fnsave
aaa
stos
outsl
push
sti
mov
orb
repz
xor
jne
pop
fidivs
sub
pop
fsub
das
cmp
jb
lea
mov
out
hlt
rorl
cmp
pop
lock
pop
fiaddl
test
cmp
stos
add
inc
xchg
mov
mov
sbb
mov
mov
iret
and
add
jecxz
xorb
fdivs
inc
lods
lahf
inc
loope
les
sbbl
pop
or
orb
cmp
sub
mov
pop
repz
jg
jne
inc
loop
fdivr
push
sub
push
insl
cmp
xlat
rorb
cli
insl
movsb
int3
ljmp
inc
aaa
mov
sub
dec
outsl
mov
cs
scas
stos
cmp
push
mov
xchg
in
mov
into
sbb
movsb
les
divb
lret
loopne
jmp
in
lods
fsub
cmp
cli
subl
int3
adc
scas
push
sbbl
bound
fistps
popa
lods
mov
mov
cmc
fsubrp
mov
clc
sbb
sbb
cmpsb
push
mov
xor
movl
mov
int3
xsha1
cmpsb
mov
repz
imulb
fldl
mov
movsl
out
xchg
dec
cld
add
stos
push
rorl
pushl
jmp
jl
inc
movsl
arpl
divl
stc
outsl
push
test
cmp
insb
dec
pop
enter
or
adc
sub
repz
repnz
inc
dec
mov
int3
pop
lcall
cmp
cmp
jb
jl
sbbb
mov
sbb
test
and
mov
push
cmp
xchg
and
cmp
mov
push
es
dec
stc
push
subl
dec
pop
sti
mov
movsl
out
or
lds
test
jp
push
xor
lods
out
and
xor
dec
mov
adc
loope
mov
cld
aam
mov
mov
mov
cli
cmc
adc
out
pop
xlat
mov
mov
das
gs
inc
sbb
pop
jnp
sub
loopne
into
mov
mov
cs
fbstp
aam
fsubr
mov
and
and
add
and
test
ja
dec
test
pop
cmp
ficoml
adc
into
sti
mov
imul
mov
outsl
xor
adc
push
int
and
adcb
adc
push
js
movl
or
mov
cmpsb
jp
loopne
add
loope
xchg
pop
dec
mov
mov
stos
dec
jb
cmp
clc
sbbb
add
xor
or
jns
fldt
inc
out
jns
push
pop
and
dec
loopne
fsubrl
int
xor
aad
mov
fcomi
dec
xor
and
rclb
lds
push
ret
lahf
jecxz
adcl
cmc
push
test
sub
add
out
sub
mov
insl
pop
or
jbe
push
rclb
insb
sub
xlat
mov
dec
dec
jne
sti
mov
cmpsl
dec
or
inc
mov
mov
cmp
lret
mov
ret
incl
ljmp
imul
mov
mov
clc
packsswb
xchg
ficomps
test
add
call
inc
out
pop
divb
mov
fcmovne
and
pop
cmp
in
int
xchg
hlt
or
pop
pop
adc
fadds
dec
gs
sbb
es
pop
insl
pop
dec
in
aam
mov
imul
nop
add
mov
cltd
int
cmp
jmp
pop
call
test
das
leave
sarl
ljmp
adc
ss
out
adc
js
enter
or
cmp
cmp
dec
sub
decb
and
repz
lods
cmp
nop
mov
dec
test
jle
cmc
push
inc
cmp
in
pushf
xor
into
shrl
inc
lidtl
leave
in
pop
sub
mov
dec
add
pop
js
je
add
pop
call
pop
sbb
mov
sarb
inc
sub
outsl
jae,pt
mov
test
imul
push
jb
dec
sbb
inc
lret
mov
mov
pushf
arpl
addr16
out
sbb
gs
jecxz
loope
aas
add
sbb
stos
mov
dec
je
mov
add
fisubrl
fs
inc
cmp
loopne
adc
sub
fs
xchg
in
into
inc
and
cltd
mov
stos
imul
pop
fdivrp
pushf
test
int
and
xchg
pop
cmp
imull
and
inc
pop
js
cmp
stc
xchg
popf
or
movb
out
mov
sbb
js
imull
les
bound
subl
lret
cmp
gs
out
xchg
and
sahf
inc
xor
cmp
call
sbb
sbb
sbb
adc
xchg
sub
adc
ss
inc
aaa
hlt
push
imul
pusha
mov
sub
jmp
dec
sub
push
pop
imul
fwait
jl
pushf
mov
es
out
add
xor
das
cmp
loope
jp
sbb
into
test
lods
dec
insb
movl
das
in
test
mov
push
xor
lahf
insb
clc
mov
stc
js
push
out
xor
cwtl
or
inc
push
lret
pushl
add
mov
subl
pop
mov
das
mov
mov
fwait
jp
mov
scas
shll
add
ss
xor
jp
push
int
into
cli
stc
nop
mov
out
dec
dec
inc
insb
fnsave
jmp
xor
dec
fimuls
pop
push
xchg
push
mov
push
inc
mov
mov
xor
or
imul
inc
ja
int3
jg
test
stos
lea
test
test
adc
dec
ljmp
xchg
cmp
mov
push
out
xor
stc
movsl
fwait
sub
test
fildll
pop
sub
outsl
notl
enter
xchg
cmc
mov
nop
add
cmp
shrl
add
in
push
mov
xchg
mov
or
jp
and
inc
test
gs
call
or
sbb
mov
pop
adc
fstps
mov
pusha
fwait
pop
mov
add
cmpsl
mov
inc
and
daa
sbb
sub
sub
mov
out
sbbl
cmpsl
dec
cmc
mov
or
inc
or
or
cli
or
xchg
sbb
pop
divl
arpl
pop
mov
cs
mov
pop
lds
inc
das
les
aam
andb
cltd
aaa
add
sub
leave
dec
xor
jge
sub
out
xchg
jnp
dec
punpckldq
and
das
addr16
mov
je
or
mov
adc
aas
push
xor
test
ds
cmpsb
sub
mov
jle
xor
scas
jge
cmc
push
into
rcl
repz
cmpsb
xchg
cwtl
call
sti
mov
negl
aas
inc
cmpsb
mov
dec
fs
adc
jae
sbb
rorl
xchg
xor
cltd
pushf
push
push
mov
jp
daa
ljmp
push
or
fidivs
push
test
cmp
cmpsb
ds
hlt
outsl
cld
dec
call
xor
test
mov
outsb
and
xchg
xchg
rolb
mov
jecxz
cwtl
adc
sub
push
add
sbb
adc
sub
lds
ficompl
mov
adc
lret
test
into
leave
sub
and
cmp
inc
out
dec
xchg
cli
push
jl
mov
pop
adc
sarl
cmp
in
es
or
jle
add
push
out
mov
insl
mov
sbb
popf
out
movsl
cmp
pop
in
push
call
cmp
imul
mov
dec
pop
xchg
sub
call
mov
cmp
push
or
xlat
cmpsb
cmp
out
or
cmc
fisttps
fcompl
fisubs
lcall
lds
cmc
jl
insb
adc
fadds
insl
push
jae
or
int
jmp
lea
jl
and
aam
dec
es
cmc
pop
fsub
sub
cmp
lret
push
sti
pop
ja
aaa
lcall
jno
or
adc
aam
push
add
add
xchg
scas
push
xchg
jg
fmull
xor
int3
or
mov
xor
ret
adc
pusha
enter
xlat
jmp
ja
and
jns
push
aad
add
call
popa
js
out
insl
push
ljmp
xor
std
add
push
lea
xor
or
cmp
pop
push
dec
in
dec
gs
or
sub
xor
add
xor
jo
ljmp
scas
xor
cmc
addr16
es
cli
jge
fsubs
adc
mov
jl
fwait
sbb
fs
into
mov
inc
into
jmp
in
bound
xchg
xchg
sarb
adc
push
out
or
cs
outsl
insb
in
jp
jne
mov
cltd
lea
out
ja
mov
arpl
xchg
test
je
rolb
sub
cmp
jae
outsl
in
shlb
iret
and
loope
dec
sahf
mov
adc
fcompl
fisttpl
cmp
out
jecxz
add
lea
js
gs
mov
mov
jnp
xor
pop
mov
stc
sbb
movsb
and
or
add
jo
scas
push
or
call
pop
out
mov
aad
out
xchg
add
xchg
pop
inc
aam
push
imul
mov
xchg
pushf
popf
fs
xchg
mov
out
sub
jmp
pop
adc
fisubrs
test
rol
dec
negb
cld
mov
orl
cltd
das
mov
pop
jae
mov
or
in
push
xor
mov
outsb
sub
lahf
mov
repnz
shll
jecxz
pop
sti
pop
dec
insb
jo
xchg
inc
jecxz
pusha
shlb
mov
and
cwtl
jp
cmp
bound
pop
pop
jb
rorl
add
loopne
negl
mov
ss
xchg
daa
shr
mov
pop
icebp
das
repz
mov
mov
or
call
add
lock
in
cltd
inc
fnsave
mov
stc
lea
cmp
orl
xchg
ja
inc
imulw
dec
mov
jge
rcl
out
mov
out
test
add
jmp
aas
or
lret
mov
dec
push
xor
push
fnstsw
mov
push
pushf
out
stc
push
ret
and
push
mov
inc
and
jnp
loope
add
sub
adcl
leave
bound
aad
repnz
fwait
scas
repz
jbe
ds
pop
inc
std
xchg
js
jp
jecxz
and
ss
lahf
pushf
dec
sub
insb
rolb
or
and
clc
adc
jecxz
scas
jmp
mov
xchg
movsb
pop
stos
sub
jl
or
jl
imul
and
mov
sub
fbstp
push
out
ja
cmp
lea
pop
mov
das
mov
xchg
sub
cltd
roll
mov
push
and
bswap
push
out
sbb
xor
std
cmp
insl
pop
fsts
mov
clc
int3
mov
rorb
pop
sub
inc
ficomps
das
jb
push
ljmp
pop
mov
xchg
ret
fidivs
xchg
push
mov
subl
xchg
les
loope
jb
dec
dec
xchg
out
mov
or
push
cmc
mov
outsb
add
pusha
mov
inc
loop
icebp
mov
and
out
es
bound
mov
mov
adc
xchg
in
bound
push
call
and
add
xor
lahf
daa
mov
push
mov
and
insb
sub
ja
cmpsb
popf
lods
daa
iret
mov
lret
pop
sahf
loop
aad
push
hlt
stos
testb
aas
mov
jo
and
or
out
testl
mov
inc
popf
ret
xor
in
dec
xchg
or
and
push
push
js
fmulp
mov
cld
jl
inc
sub
inc
xor
xor
push
jmp
pushf
movsl
and
xchg
aaa
adc
fists
mov
jle
and
fnstsw
inc
fimuls
adc
mov
fucomi
aad
sti
and
je
mov
outsl
push
loop
mov
insl
fst
sub
sub
push
mov
xchg
fs
sbb
add
adc
ret
repz
aas
movsb
jbe
inc
xchg
mov
lock
lock
repnz
sti
in
dec
xor
cld
sub
adc
cmp
mov
add
fisubrl
fstl
jno
movsl
adc
aaa
mov
in
jmp
mov
lock
fstl
jbe
mov
xchg
movsb
lock
lea
mov
or
notb
jecxz
icebp
shl
ret
pop
scas
jecxz
inc
out
add
outsb
push
push
push
mov
pop
push
mov
sahf
xor
xor
in
inc
mov
ljmp
push
dec
push
mov
sbb
mov
cmp
push
push
sbb
jnp
ljmp
sbb
mov
sbb
test
cmpsb
mov
mov
pusha
jmp
adc
and
shrb
decl
ret
mov
arpl
nop
sub
scas
inc
mov
arpl
in
repnz
jl
inc
arpl
cli
mov
js
shlb
xor
loop
ret
fsubrs
dec
ss
not
ret
cmp
add
mov
ret
icebp
outsb
pop
push
xor
pop
mov
xchg
xchg
cmp
es
push
mov
in
ret
mov
xchg
mov
sbb
add
fidivrl
mov
xchg
pop
or
frstor
outsl
xchg
aaa
sahf
scas
jns
pop
xchg
sarl
lret
movsl
push
stos
lret
mov
cwtl
jmp
mov
sbb
xchg
cltd
lock
xor
jns
fistpl
jnp
shrl
into
fdivl
cwtl
into
orl
cmpsl
sub
pusha
jne
les
scas
sbbl
sub
push
mov
fs
mov
popa
int3
arpl
push
ljmp
mov
cmp
push
sub
mov
call
or
sub
daa
xchg
cld
out
mov
push
cld
incl
std
dec
mov
aad
rcll
lcall
das
movsl
and
sbb
scas
popa
imull
sahf
xor
jg
in
jns
lcall
jmp
nop
xor
out
clc
adc
mov
jp
in
scas
mov
pop
scas
push
insw
in
aam
into
dec
and
push
fwait
mov
icebp
xchg
pushf
jmp
rcrb
adc
xchg
cmp
mov
jle
test
add
mov
adc
cltd
jae
je
add
fnstcw
fsubs
or
sub
mov
pusha
fcmovb
in
xorb
les
push
addl
push
enter
cwtl
xor
lret
cwtl
cmp
bnd
cwtl
pop
mov
or
pop
aaa
iret
mov
sti
push
jno
ret
aas
es
arpl
call
mov
mov
dec
pop
sub
lret
div
outsb
in
call
lahf
cs
out
mov
xor
cmp
fsubr
insl
stc
sbb
add
pop
xlat
mov
in
or
jge
je
push
xor
mov
lods
divb
sub
movsb
ja
xchg
inc
fcoml
cmpsl
adc
xor
stc
and
cmpb
stos
add
or
inc
sbbl
fists
stos
shl
daa
repz
lods
jg
or
adc
negb
xor
pop
ds
push
mov
inc
adc
cmp
xchg
arpl
test
lock
xchg
into
icebp
mov
xor
sarl
add
dec
outsl
push
gs
push
in
or
mov
and
dec
adc
mov
push
lods
mov
test
push
test
leave
sahf
clc
add
repz
cmp
insb
mov
xlat
push
es
out
icebp
xchg
movsl
add
cmpsb
sbb
gs
xorb
rcrl
ret
pop
adc
test
dec
pop
stc
bound
rorb
dec
dec
scas
loop
popa
out
or
addl
clc
dec
xchg
push
xchg
push
movsb
cmp
bnd
push
aaa
mov
push
or
arpl
test
fidivrs
mov
cmp
bound
inc
std
into
mov
sub
inc
pop
shrl
ds
shl
icebp
mov
shrb
icebp
and
jle
addr16
inc
mov
nop
sbb
jp
dec
nop
push
fildll
dec
rcr
or
or
cmp
sbb
bnd
mov
pushf
pop
orl
sbb
pushf
sbb
sahf
push
out
fidivrl
sub
sbbl
cltd
cli
mov
adc
fs
or
aas
loop
sub
test
jle,pt
pusha
xchg
jae
jge
ret
sub
lcall
add
movsb
dec
fwait
aaa
mov
cli
pushf
push
push
push
pop
sub
lock
aas
sub
dec
fstps
lret
jnp
push
cmpsb
aad
repnz
mov
cmp
movsb
sub
dec
popa
int3
jmp
js
decl
pop
loop
daa
push
mov
gs
xor
repz
stos
insb
push
xchg
fwait
cmp
jp
jle
and
popf
mov
add
adc
stos
icebp
sub
jmp
sti
das
jl
jge
lcall
cli
or
sbbb
aad
int
pop
jg
mov
cmp
xchg
clc
hlt
call
inc
push
inc
sbb
data16
dec
xor
das
divl
cmpsl
mov
xchg
sub
shlb
inc
adc
sub
jb
popf
push
js
dec
mov
mov
or
adc
add
rolb
popf
sub
dec
pop
adc
push
pop
push
loopne
add
ja
adc
in
jno
cmpsl
out
jecxz
push
mov
mov
rcrb
adc
mov
mov
add
idivb
sub
loope
cmp
iret
outsb
test
mov
mov
mov
push
lods
adc
sahf
and
xor
add
shr
ret
xchg
mov
mov
mov
or
fistl
into
mov
ret
sbb
jge
push
push
out
fsubrl
xor
cmpl
fstpl
push
rcrb
test
adc
lds
stos
mov
add
subl
jns
push
ret
cli
jge
mov
xchg
push
fwait
stos
push
mov
inc
cmc
mov
sub
push
cld
push
mov
shlb
sub
or
stc
sub
out
pop
dec
cmc
mov
out
mov
mov
ljmp
shlb
xchg
jb
das
cs
pop
xlat
push
test
and
fcomp
sub
rcrl
inc
out
mov
outsb
adc
popa
jo
je
xchg
cmpsb
sarl
lret
pop
cmpxchg
js
inc
lcall
and
test
lret
shlb
lahf
jns
ret
sbb
xor
stos
cmc
mov
mov
jno
mov
fcoml
jne
stos
mov
push
and
mov
xchg
dec
hlt
lret
sti
push
lcall
test
fcomps
add
cmp
loope
cld
pop
nop
sub
out
insl
scas
sub
dec
rcr
popf
incb
add
or
sub
in
pop
mov
xchg
xor
sti
data16
and
mov
jge
or
std
lea
inc
push
lret
push
js
pop
mov
or
fcomps
adc
xor
push
pusha
jp
push
popf
lods
sub
inc
loopne
dec
xor
lea
fwait
jbe
lock
jbe
cli
flds
scas
mov
and
add
inc
popa
lods
pop
jg
cli
repnz
sbb
fisttps
fucomi
out
mov
xor
xor
inc
sub
es
mov
or
cmc
adc
loop
xchg
adc
cli
xchg
jg
dec
dec
add
add
inc
jno
or
shl
shrl
in
add
push
jno
in
cld
jbe
jne
fidivrl
xor
in
and
pusha
push
out
addl
pushf
loopne
pushf
adc
ljmp
jmp
je
clc
ficoml
orb
testb
jle
mov
add
lret
fbstp
std
ror
in
and
add
jae
mov
hlt
cltd
or
mov
mov
pop
out
xchg
push
stc
xchg
fwait
inc
lcall
or
sbb
push
in
push
pusha
mov
ss
pop
mov
stc
adc
lret
adc
ss
add
jecxz
aam
dec
pop
repz
scas
inc
pushf
xor
test
fmulp
pop
inc
xor
scas
fs
into
sbb
mov
sub
ret
sbb
or
insb
or
xchg
jbe
test
mov
xor
inc
cs
mov
sti
push
mov
into
hlt
incb
add
inc
fcoms
stos
popf
mov
dec
pop
sti
std
lock
js
int3
enter
xchg
xor
cmpsl
sub
sub
inc
dec
fmul
push
jge
inc
cmp
add
repnz
movsl
scas
rcr
xchg
sub
cmp
clc
or
sub
push
arpl
pop
jns
std
lret
jl
ljmp
inc
or
stc
bound
cmpsb
xchg
sbb
scas
mov
sbb
dec
fdivrl
mov
adcb
hlt
bound
ret
aam
jmp
dec
push
adc
push
lcall
aad
jl
int3
pop
ret
or
lcall
push
out
test
adc
cs
pop
imul
out
fdivl
cmp
adc
or
or
test
mov
out
adc
mov
mov
jmp
aaa
movsl
mov
lods
ror
arpl
fidivs
dec
pop
out
add
mov
sbb
or
inc
and
push
dec
pushw
loope
andl
xchg
aas
mov
pop
dec
add
mov
or
in
faddl
gs
adc
sti
xchg
jne
or
sbb
les
mov
stos
xchg
sub
and
mov
pushf
idiv
mov
sbbl
dec
pop
cli
in
les
or
push
or
pop
mov
mov
jmp
rcl
ret
jle
jp
popf
fistpl
repnz
cwtl
jo
lcall
lds
fists
sub
bound
inc
xor
mov
call
adc
lea
cld
lods
push
mov
xchg
mov
dec
cmp
sbb
ds
ss
es
pop
mov
std
xchg
sub
or
mov
sub
jo
loope
dec
subb
push
repnz
je
repnz
jno
lret
jge
sahf
sub
mov
lock
pop
call
lret
dec
in
clc
test
add
add
imul
pop
push
test
mov
ja
push
insl
hlt
cmp
adc
mov
jmp
or
icebp
mov
popf
sub
pop
inc
adc
and
imul
sahf
jo
sarb
in
loope
jnp
mov
push
shll
jmp
pop
jb
mov
cmp
popf
sbb
mov
aas
and
out
add
xor
push
inc
aam
add
out
cmp
push
fwait
inc
daa
sub
rolb
mov
test
mov
cmc
loop
mov
aaa
pop
or
cltd
mov
rcr
sbb
cli
pop
out
sbb
push
or
jmp
dec
icebp
jnp
mov
and
pop
testb
jae
add
xor
mov
popa
xchg
sub
mov
jp
add
loope
mov
jl
and
sti
lea
std
std
and
lcall
dec
cmp
call
lds
mov
adc
mov
stos
xor
fistl
enter
imul
int3
xchg
ret
mov
imul
mov
or
sbb
pop
sub
xchg
loopne
cmp
in
xchg
pop
or
hlt
mulb
dec
pop
push
inc
xor
call
cmp
xchg
dec
dec
fimuls
xchg
pop
xchg
push
ret
jne
into
sub
sub
jle
lret
or
repz
test
jg
in
jp
sub
xchg
or
xchg
lods
lock
pusha
popa
xlat
sbbl
inc
fwait
js
jnp
js
daa
outsl
cmpsw
aaa
stos
sbb
sbb
dec
pop
insb
sub
xlat
adc
subl
gs
ja
sub
iret
mov
jne
lods
ljmp
xor
testl
sbb
rcll
sbbb
and
push
sbb
cli
std
xchg
mov
pop
and
dec
ret
out
mov
rorb
pop
adc
inc
push
pop
rol
fcom
cmp
nop
push
imul
ds
add
inc
mov
arpl
push
add
fisubrl
lret
pop
cmp
inc
mov
xchg
mov
mov
dec
sahf
add
dec
scas
jo
popf
mov
push
jmp
pop
in
mov
cwtl
imul
out
rcrl
aad
stos
movsl
das
roll
xor
push
sbbb
and
js
repz
fnstcw
pushf
fcmove
xchg
iret
cmp
test
movzwl
dec
jno,pt
sbb
sbb
daa
ja
inc
push
pushf
stos
repz
dec
in
out
or
jmp
or
xchg
and
mov
daa
push
xor
mov
push
outsl
push
mov
mov
lret
pop
mov
mov
rol
mov
pop
in
inc
jo
js
xor
pop
mov
adc
inc
push
sti
lahf
divl
movsb
jg
test
test
sbb
lcall
in
inc
xor
imul
enter
mov
pop
xor
and
je
xor
mov
or
jae
dec
inc
cmpsb
aam
xchg
inc
mov
jno
mov
mov
push
addb
leave
sub
and
sahf
adc
and
test
popa
repnz
xor
mov
aas
inc
push
push
mov
ficomps
inc
out
mov
inc
jecxz
xlat
jbe
add
cmpsb
jge
add
adc
aaa
mov
test
aaa
push
mov
es
jl
pop
jbe
xchg
mov
xchg
pop
add
sbb
sbb
push
sahf
push
xchg
sub
xchg
sbbb
mov
cmc
cmp
pop
dec
dec
xchg
dec
je
inc
test
test
fisubl
enter
lahf
shrb
sbb
dec
dec
push
inc
push
int
rcrl
rorl
test
pusha
mov
mov
shlb
jno
lds
xchg
fucomip
fmuls
xor
or
mov
mov
jle
mov
leave
xchg
daa
neg
inc
idiv
icebp
push
and
xchg
pop
lcall
in
lret
bound
fistpll
jge
arpl
rcll
mov
aas
push
fldpi
add
adc
insl
fwait
stc
nop
int
mov
js
cmpsb
scas
call
adc
jecxz
pop
xor
add
rolb
loop
lods
inc
and
sbb
xchg
mov
cmpsl
lods
jp
mov
mov
lahf
sub
lcall
jbe
mov
inc
push
rcrl
je
out
cmc
push
pop
push
sahf
inc
roll
dec
js
call
imul
inc
out
push
imul
and
nop
and
shrl
sahf
sbbb
fstps
mov
out
xchg
std
mov
push
ror
cmp
imul
lods
mov
into
adc
add
xor
mov
xor
mov
mov
jle
pushf
out
add
and
fsubs
push
loope
pop
aas
pop
rclb
clc
inc
and
rcl
sub
jg
xor
xchg
xchg
iret
rorb
and
sub
pop
sub
icebp
xor
or
cmp
push
insl
or
rclb
rol
adc
test
adc
outsb
sub
lcall
cmpsb
or
daa
pop
int
out
out
or
jmp
sub
in
aad
scas
jg
xor
add
xchg
test
and
enter
out
punpckhbw
test
mov
xor
lds
aaa
mov
imul
cmp
xchg
aaa
inc
fstps
arpl
jae
imul
mov
out
jmp
mov
outsb
jg
cmp
sbb
jp
clc
and
inc
add
inc
inc
ja
xchg
pop
test
lods
jle
mov
adc
lods
mov
arpl
or
jnp
mov
std
cmpsb
ds
jecxz
movsb
add
sub
jnp
cmp
jecxz
mov
cmp
insl
shlb
imul
int3
dec
cwtl
dec
sub
insl
mov
jge
stc
pop
add
pop
mov
push
lock
mov
jne
lret
cmp
insl
in
sub
loope
pop
addr16
add
addr16
stos
and
jmp
add
pop
push
lods
maskmovq
divl
mulb
dec
inc
xchg
push
test
inc
sarb
pop
bound
test
lahf
rclb
out
pop
ror
and
mov
fistl
fdivl
imull
nop
lahf
lock
shll
add
dec
mov
jbe
daa
outsl
sarb
jae
pop
xchg
push
test
adc
xchg
lcall
cmp
jmp
adc
add
xchg
insb
or
dec
fisttpll
fucom
pop
mov
mov
rcll
xchg
and
or
sbb
xchg
xor
xor
imul
xchg
xchg
inc
aad
lcall
jle
add
je
inc
push
push
pop
inc
cli
xor
xor
mov
jge
dec
movsb
scas
dec
pop
mov
inc
sbb
aad
ret
adc
or
notl
mov
adc
mov
xchg
daa
cltd
xor
push
xchg
or
andl
sbb
xchg
addr16
sbb
pushf
mov
sahf
xchg
shl
mov
mov
test
mov
test
jno
daa
pop
lret
aaa
int
sahf
sbb
jmp
and
pop
sub
xor
test
outsl
xchg
inc
or
sub
sarb
xchg
movsl
mov
test
sti
push
mov
pushf
in
mov
lock
test
pop
mov
inc
xor
mov
hlt
push
leave
gs
dec
in
inc
dec
ja
out
sarl
test
imul
imul
mov
cli
cmp
mov
pop
dec
mov
icebp
mov
push
pop
xchg
adc
inc
mov
sub
sarb
mov
or
cmp
add
roll
mov
gs
notl
inc
popl
jne
call
push
int3
pop
sbb
pop
test
push
pusha
ss
or
cmp
inc
fwait
mov
jno
pop
cmpsl
notl
inc
ja
cmp
and
cmc
ss
mov
int
cltd
mov
inc
bound
shll
dec
insl
jnp
loopne
push
cmp
mov
into
leave
or
dec
data16
mov
movsl
xor
jns
and
and
sti
add
aaa
stc
and
jmp
adcl
adcb
aad
pop
notb
int3
movsb
xchg
loopne
xchg
and
roll
adc
lea
leave
sahf
jmp
push
and
add
xchg
xorb
xchg
lods
push
pop
sahf
add
and
cmp
loope
jl
in
out
movsb
lret
std
sbb
add
jmp
or
loop
jle
cmpsb
test
iret
fists
push
dec
pop
jbe
sbb
cltd
movsb
cld
mov
out
hlt
fcoms
sub
or
jp
xor
cmc
clc
or
cmpl
push
sbb
cmpsb
cmpsb
mov
cs
pop
cmpsb
lret
jge
and
jno,pn
popa
or
arpl
adc
adc
mov
popf
popa
sub
push
popa
xor
push
or
xchg
xchg
adc
sbb
and
mov
aas
dec
daa
mov
pop
shlb
inc
ss
xchg
sub
iret
mov
mov
xor
hlt
cmp
sbb
icebp
repnz
push
lea
and
lret
es
push
stos
fdivrs
adc
cmp
mov
movsb
and
push
psrad
aaa
cwtl
and
xchg
mov
or
and
aas
dec
push
inc
push
hlt
mov
in
stc
test
enter
mov
xchg
std
pop
movsl
pop
repz
jne
xor
push
xchg
xchg
sub
iret
addr16
adc
xorb
out
lret
fmull
popa
in
rclb
pop
mov
xchg
inc
sar
cmp
add
rcrb
mov
insl
mov
sbb
jecxz
ss
fimull
push
cs
loop
test
mov
add
mov
xchg
mov
sub
nop
inc
jle
jl
lahf
lods
mov
mov
std
cmp
jbe
inc
push
out
inc
loope
adc
int3
add
or
adc
add
push
icebp
aad
and
gs
std
xorb
movsl
or
adc
cld
js
stos
test
jno
cmpsl
xor
pop
subb
push
lahf
daa
mov
inc
dec
inc
fsubrp
xchg
add
test
js
cmp
inc
dec
data16
rcrl
fistps
mov
pop
scas
stc
fsubs
jmp
cmc
pmulhw
mov
mov
and
push
lods
and
clc
jae
lret
cld
divl
cmp
outsl
adcb
push
inc
movsb
mov
push
push
push
inc
jmp
lret
sti
or
rorl
cltd
popf
push
pop
cld
cmpsb
cli
xchg
mov
ret
decb
mov
xchg
push
jecxz
sbbb
lods
lcall
popf
stos
add
mov
or
jecxz
sub
ret
test
jl
test
xorl
xchg
mov
ficomps
xchg
mov
int3
fwait
mov
xchg
mov
inc
push
jno
fdivl
push
ds
dec
cmp
aam
rcrb
loop
pusha
sub
adc
sbbl
sbb
jp
pusha
mov
pop
mov
or
aad
es
int3
mov
mov
mov
stc
cmpsb
pop
xchg
imul
lea
outsb
out
outsl
xchg
testb
mov
insl
enter
sbb
mov
dec
aad
cld
push
shll
dec
loopne
jmp
subl
push
push
push
sub
jp
add
pop
pushf
xor
inc
aas
push
js
mov
adc
out
ret
cmp
dec
add
mov
push
je
out
and
sti
hlt
inc
mov
jno
shlb
xchg
cs
into
lock
aaa
inc
pop
dec
loopne
pop
inc
lret
push
pop
loopne
test
in
push
sbb
stos
dec
js
shrl
cld
loope
enter
or
fs
inc
mov
cs
inc
cmp
xchg
adc
inc
mov
lret
push
push
sahf
push
ljmp
rcl
lods
or
and
lea
fstpt
cli
daa
push
stos
arpl
mov
pop
xor
mov
or
cwtl
or
loope
sbb
nop
cmp
sbb
cs
cmp
stc
fidivl
mov
clc
or
sub
icebp
jle
fsubrl
dec
lods
addr16
stos
cmp
mov
mov
rcrl
and
add
pop
test
popl
lcall
and
stc
das
mov
aad
loop
dec
mov
ljmp
mov
ret
add
jno
dec
mov
test
cwtl
sbb
xchg
jbe
out
js
cwtl
pop
jg
push
jmp
rcpps
jb
sbb
out
leave
push
push
call
lock
xchg
cmc
jo
cmp
nop
daa
in
push
fs
scas
call
adc
sahf
clc
pop
jbe
fcomps
subl
xchg
mov
mov
daa
adc
gs
xor
mov
mov
sub
sar
lock
xchg
xchg
pushf
xor
jne
cmp
cli
pop
and
mov
popa
icebp
lods
mov
in
aad
test
hlt
sub
sti
fwait
lods
cli
mov
outsb
jge
push
shll
fcoms
into
test
sbb
int
mov
addr16
movsl
cmp
adc
xor
jae
mov
xchg
stos
mov
mov
or
test
shll
add
test
ja
lods
loopne
shll
aas
cli
add
cs
push
aam
sub
stos
out
xor
cmpsl
popa
adc
jns
sub
lret
xchg
scas
jmp
stos
add
xor
insb
es
cs
adc
sar
fwait
insb
push
stc
mov
jmp
push
imul
cmp
stos
inc
loope
add
mov
mov
mov
push
test
mov
cltd
adc
clc
nop
cwtl
push
mov
fstpt
cmp
cmp
and
adc
add
sub
insb
jb
lahf
cmpsb
xchg
lahf
push
aaa
nop
mov
jae
imul
xor
adc
cmp
mov
lahf
pop
push
jbe
mov
sub
stos
cltd
xor
into
xchg
stos
test
in
sbb
cli
jae
shlb
lahf
ss
imul
in
mov
jmp
fisubl
shl
in
shlb
loop
fidivrs
lods
jno
call
js
outsl
sbb
mov
add
cwtl
or
stos
xor
add
cmpsb
lret
fs
adc
xchg
mov
lret
out
aam
add
std
scas
orl
lods
xchg
insb
push
jl
imul
iret
test
insl
mov
shl
xor
jp
ss
icebp
mov
mov
add
jmp
inc
loope
add
jmp
loopne
jmp
inc
jb
out
mov
adc
push
push
pushf
or
lea
mov
xor
arpl
popf
mov
into
pop
add
iret
test
inc
push
lods
inc
int3
mov
or
mov
in
arpl
out
ret
inc
pop
lcall
shl
outsb
sub
outsb
jno
lods
insb
add
jmp
mov
inc
shlb
repz
nop
arpl
mov
jg
or
inc
gs
outsl
loop
adc
int
cmovbe
aaa
lods
test
jecxz
mov
xchg
xchg
cmpsl
lret
pop
adc
inc
mov
push
imul
das
mov
fs
imul
test
or
dec
cmp
xor
adc
orl
xchg
call
lahf
mov
mov
lods
mov
cmp
adc
mov
pop
dec
inc
leave
jmp
imul
lods
add
fsubrl
or
and
insl
jbe
aaa
fs
popf
aad
mov
cmp
cmp
loop
lahf
adc
leave
push
mov
adc
jb
and
or
sub
mov
stos
out
jae
inc
pushf
leave
lods
cwtl
imul
dec
push
xor
bound
test
ljmp
test
pop
lahf
mov
inc
mov
inc
dec
dec
mov
cmp
xchg
push
fcmovne
inc
sub
xchg
mov
test
adc
mov
lcall
shl
pop
xchg
test
mov
jnp
loope
mov
sbb
push
filds
jnp
mov
stos
in
inc
xchg
sub
js
pop
hlt
dec
lock
shl
cmp
and
push
lods
insb
ds
pop
sub
or
or
adc
fs
push
inc
mov
dec
mov
lahf
adc
add
push
mov
bound
jmp
xor
sub
test
cmc
shl
or
sub
jl
xor
ret
pop
mov
movsb
dec
mov
ljmp
jne
push
mov
push
std
push
cmp
fnsave
sahf
mov
mov
sbb
sbb
loop
jae
cmpsl
cmp
push
int
push
xor
sub
adc
popf
jbe
mov
xlat
std
push
adc
mov
lret
mov
xchg
jmp
cmpsb
jnp
mov
divb
fdivrs
push
mov
nop
xor
push
sub
push
inc
xor
scas
mov
insl
or
out
sub
push
and
shlb
je
xor
dec
out
fimull
fcomi
daa
add
pop
dec
cltd
mov
jl
in
incl
push
push
cld
xchg
mov
mov
mov
ret
xchg
in
enter
xor
mov
jmp
sub
mov
add
out
scas
test
jnp
loopne
push
call
mov
repnz
inc
cwtl
mov
test
hlt
sahf
jecxz
loop
int
rcrb
sbb
dec
lahf
addr16
adc
sti
bsf
pop
psubw
dec
fbstp
push
fnstenv
cmpsl
and
xchg
ret
sub
sbb
mov
jae
adc
jns
icebp
aam
movsb
and
fwait
push
sub
test
cmp
sahf
xchg
cltd
jb
sub
cmp
js
push
mov
mov
xor
xor
lock
dec
ja
xchg
mov
repnz
test
sbb
addr16
push
lods
outsl
icebp
mov
repnz
in
cs
popa
loope
xor
pushf
dec
out
pop
imul
pop
and
sti
sub
fists
scas
inc
jne
or
xchg
int
repnz
stos
sub
jecxz
xchg
pushf
xchg
xor
stc
cmp
cmpb
arpl
or
sbbb
jge
out
push
icebp
test
mov
es
dec
fsubrl
xlat
outsb
pusha
mov
or
filds
sub
shlb
mov
jb
aad
sahf
push
cld
cld
xchg
jg,pn
or
push
xchg
push
mov
shrl
aad
dec
xchg
neg
xchg
movsb
mov
pop
cli
cmpsb
jns
ficompl
inc
adc
sbb
mov
fldcw
scas
xchg
sbb
hlt
outsl
mov
outsl
sbb
mov
sahf
outsb
aam
jo
and
je
pop
rolb
inc
cltd
sarl
dec
in
rcrl
cmpsb
xchg
jg
pop
push
pop
imull
push
add
xchg
xor
push
imul
mov
xor
addb
jb
scas
aaa
in
ja
std
pushf
ret
pushl
lods
cmpsl
or
int3
mov
push
push
ljmp
call
sub
mov
mov
xor
rcr
push
iret
data16
cmp
in
mov
add
mov
and
cltd
arpl
xchg
adc
mov
mov
or
xchg
stos
jne
pop
aam
notb
jb
cwtl
sub
lea
flds
int
stos
pop
pop
inc
stos
and
call
dec
add
mov
mov
adc
pop
stos
inc
mull
xchg
sub
or
cmp
js
lods
adc
ss
pop
aaa
pusha
fnsetpm(287
xrelease
adc
sub
inc
xor
ds
mov
lods
mov
into
loop
xchg
mov
out
test
call
das
mov
insb
fistps
in
jge
mov
push
inc
popf
jp
lds
dec
jecxz
jb
or
push
cmp
cmp
push
dec
nop
outsb
add
xchg
mov
push
loop
xchg
cmp
xchg
mov
inc
pop
repz
push
mov
jp
stos
mov
test
mov
and
hlt
js
push
mov
jg
mov
mov
aaa
lret
aas
cld
sub
xchg
sbb
cmp
dec
jmp
mov
fwait
js
mov
adc
cmc
addr16
sahf
insl
cld
push
mov
sti
cld
ja
in
dec
in
sub
insb
push
and
adc
nop
cwtl
lcall
sbb
mov
loope
cmp
rolb
div
out
mov
inc
stc
call
or
leave
or
adc
fadds
mov
cmp
lds
pandn
adc
ror
xor
xor
pop
xchg
nop
pop
fdivp
push
inc
gs
mov
pop
add
pop
cs
push
jecxz
test
lret
pop
icebp
out
xchg
fildll
call
push
lahf
call
gs
je
cmp
push
out
pop
divl
mulb
aas
push
sbb
hlt
insl
pop
out
xchg
mov
mov
cmpsl
xchg
fldcw
js
jl
mov
xor
rorl
xor
jnp
mov
pop
sarl
fistl
test
lea
inc
adc
sahf
sub
add
jns
jl
xor
jmp
outsb
mov
jne
loop
in
jns
adc
jno
in
xchg
enter
pushl
dec
jmp
fdivp
sahf
sub
aad
or
mov
rorb
dec
js
dec
mov
fwait
xor
inc
ss
gs
pop
stos
push
jle
icebp
jl
dec
pop
bnd
adc
jle
push
mov
andl
mov
cmpsl
ret
xchg
mov
and
push
cwtl
sbb
lea
mov
xchg
arpl
sub
adc
pop
loope
inc
pushf
and
leave
push
dec
jmp
call
mov
add
or
mov
adc
and
push
lcall
pop
js
sub
mov
data16
pushl
repz
dec
xchg
sub
and
neg
dec
mov
call
xchg
dec
mov
cmp
pop
call
jle
scas
popa
enter
loopne
xchg
and
cmp
sbb
movsb
sub
popa
inc
testb
mov
jecxz
mov
jnp
and
rcl
ficoml
sub
lds
loop
pop
std
pop
mov
push
ret
out
jp
stos
aad
dec
lea
mov
lea
stos
inc
pop
fwait
adc
or
leave
dec
outsb
scas
pusha
fldt
jns
inc
jl
es
xor
push
in
adc
sbb
add
sub
lcall
sbb
xchg
adc
das
xor
xor
push
push
mov
fidivrl
outsl
das
inc
mov
cmpsb
xchg
fcoms
sub
and
popf
pop
dec
imull
add
sbb
mov
sbbl
popf
xlat
movsb
mov
xchg
push
xchg
clc
daa
call
cmp
xchg
imul
jl
fldenv
xor
xchg
js
sarl
imul
sti
lock
fwait
sar
jp
add
xchg
push
and
mov
cmp
mov
xchg
push
pop
mov
sub
sub
shll
or
push
dec
jns
jnp
push
in
push
sbb
jne
xor
lea
mov
in
rcll
add
mov
or
mov
gs
push
cwtl
ja
loop
push
push
pop
lcall
or
inc
ss
movsb
mov
adc
loop
jle
push
insb
cmp
das
movb
test
pushf
aam
iret
cmp
jle
cs
sbb
test
push
lret
bound
fdivl
xor
dec
loopne
out
cmc
pop
lock
and
std
jo
int3
dec
add
stos
xor
das
mov
xchg
cmp
xor
and
inc
mov
int
mov
pushf
lods
pop
add
sbb
push
mov
sbb
cmp
shrb
adc
jmp
adc
leave
pop
scas
test
mov
enter
mov
fsincos
adc
fistpl
pop
xor
dec
dec
dec
inc
jecxz
jle
cmp
lcall
and
out
pop
popf
cmp
pop
mov
dec
iret
scas
sub
outsl
es
sahf
xchg
dec
cmpsl
dec
shlb
sub
sub
sbb
pop
lds
aad
jmp
cmpsl
cmpps
je
xor
scas
cs
mov
ret
or
dec
cli
scas
push
xchg
loopne
rorb
andb
sahf
add
dec
or
dec
shrl
xchg
cmpsb
cmp
cmp
lret
and
cltd
push
clc
cmp
cmp
or
or
dec
jecxz
xchg
je
lds
jp
inc
pop
jge
in
adc
sbb
subl
dec
inc
add
aam
push
fcomps
fldt
cmc
xchg
or
sahf
jnp
stc
mov
and
outsb
add
mov
sbb
ret
add
punpckhwd
inc
mov
mov
fwait
xchg
sub
out
jmp
xchg
pop
call
int
mov
mov
scas
ret
shrb
mov
mov
into
shlb
call
in
or
sbb
or
jnp
imul
push
jo
cmp
inc
fmull
sbb
pop
fldl2t
jp
popa
jns
orb
push
mov
or
pop
in
aas
scas
icebp
xchg
daa
ljmp
imul
sub
leave
cmpb
ss
fs
aaa
fidivs
adc
lret
xchg
in
lret
ss
sbb
ret
loopne
push
cmp
fisubl
or
jge
pop
out
inc
aam
ret
es
shlb
mov
and
stos
shr
fdivr
cmpsl
cmp
shl
clts
outsl
mov
mov
cmpsb
inc
mov
sbb
adc
mov
fsubs
in
xor
cltd
cmpsl
ss
cmp
cmc
pushf
mov
insb
rcrb
cmp
jecxz,pt
fcmovne
test
mov
jmp
push
fwait
mov
data16
insl
lahf
push
and
xor
outsl
push
stc
adc
insw
je
scas
xor
sub
aad
dec
pop
push
loope
jl
jg
sahf
fcomps
into
das
andl
sub
push
sbb
ja
lock
sub
nop
pop
dec
jg
jb
imul
pushf
into
movsl
dec
push
mov
and
or
fcoms
mov
fistpl
out
xor
adc
int3
lods
std
mov
jp
add
push
dec
fldcw
das
xor
fs
pop
mov
cmp
jle
cmp
lock
adc
jle
es
jne
dec
imul
out
movsb
int
push
rcrb
dec
pop
mov
daa
cmp
add
shll
and
stos
sub
inc
insb
sbb
lods
lea
adc
push
pop
out
filds
cmp
mov
pop
or
adc
stos
xchg
cld
jge
or
das
cmpsb
jns
push
mov
adc
in
cltd
sub
or
ficomps
adcw
mov
insb
repz
xchg
sub
add
xor
mov
je
pop
pop
bound
xor
inc
xchg
inc
dec
cltd
or
and
arpl
push
test
test
sbbb
sbb
jecxz
xchg
cmp
mov
inc
mov
scas
notl
stos
mov
xchg
fs
aaa
ret
fisubs
sar
pop
imul
nop
fs
ret
test
cwtl
add
leave
jmp
out
dec
mov
xchg
sarb
stos
xchg
xchg
xor
jbe
arpl
add
cmpsl
xor
push
jns
popa
jnp,pn
shrl
push
xor
mov
repz
jle
inc
movsl
xor
add
mov
or
adc
orb
xor
adc
lret
je
mov
adc
cmp
sbb
cmp
jecxz
shrl
clc
test
fdivrl
fsts
nopl
pop
add
ljmp
es
imul
inc
icebp
and
cmpsl
xor
psllw
push
cs
ss
push
test
jmp
dec
push
lods
nop
pop
inc
pop
mov
aas
pop
dec
mov
stos
push
popa
xchg
shlb
adcl
insb
sub
scas
inc
mov
cmp
push
jne
mov
pop
sbb
mov
jnp
jecxz
dec
pushf
add
cwtl
int3
push
in
ljmp
xchg
adc
insb
mov
out
xlat
dec
and
xchg
in
in
and
jg
stc
outsb
rcl
sbb
dec
inc
jo
add
jmp
or
cmp
loopne
pop
adc
sbbl
mov
mov
jecxz
jns
push
adc
add
fstl
imul
pop
or
sbb
imull
mov
xlat
xchg
out
dec
loopne
jbe
mov
ret
push
loopne
adc
popa
and
or
iret
daa
out
scas
les
shr
cmp
push
sub
jmp
inc
loope
orl
fdivp
pushf
push
and
in
inc
mov
cli
dec
mov
test
jg
and
lea
mov
and
test
in
repz
fsubp
popf
xchg
stc
adc
jge
pushf
mov
hlt
xchg
rcrb
lahf
jb
hlt
mov
jnp
js
xchg
push
jbe
and
lods
hlt
mov
xor
sbb
dec
movsb
cmp
mov
insl
out
rclb
fwait
pop
push
mov
mov
cmpsb
fs
stos
arpl
pop
movsl
and
sarb
or
lahf
or
stos
mov
ds
sbb
xlat
mov
jbe
adc
dec
scas
mov
push
or
out
jg
sub
fwait
jae
lcall
rorb
cltd
adc
shll
in
jmp
mov
mov
stos
pop
dec
xchg
insb
mov
push
lea
push
or
ficoml
std
and
aaa
stos
iret
test
mov
fisubrs
mov
out
or
cmp
pop
in
fwait
outsb
cmp
mov
fstpl
clc
pop
xchg
movsb
inc
sbb
lret
sti
pop
out
inc
int
arpl
mov
push
and
jb
xor
das
or
into
inc
data16
mulb
xchg
popa
ss
test
cmp
lret
inc
das
pop
push
and
loope
pop
mov
xchg
les
add
shlb
imul
in
sub
cmp
pop
push
aam
outsl
push
or
mov
dec
ficoms
std
inc
imul
cltd
dec
dec
shl
loopne
sub
rclb
cmp
popf
xlat
pop
sub
out
inc
in
or
gs
mov
lods
inc
pusha
mov
call
idiv
je
bound
mov
imul
nop
dec
mov
in
xchg
int
adc
cmp
pop
push
test
add
cmp
sbb
aas
in
aas
fcompl
cmp
fstl
push
cltd
inc
into
enter
sub
mov
mov
jl
adcl
mov
rcrl
cwtl
ja
and
push
fisttps
adc
xor
cmp
scas
xchg
addl
ja
shrl
orl
mov
das
sub
fldl
repnz
inc
mov
loopne
jo
out
sti
adc
push
ss
or
cmpsb
out
add
xor
or
push
and
fstp
push
int
ja
dec
test
dec
pop
inc
jo
inc
sahf
das
adc
inc
push
arpl
scas
imul
cmp
pop
adc
xor
leave
fs
jp
cltd
jecxz
mov
mov
and
pop
outsb
loope
xlat
imull
jo
insb
ljmp
mov
ret
cmpsl
aas
push
xchg
aaa
in
jmp
push
adc
mov
push
stos
cmp
push
jo
icebp
sub
aam
mov
sub
pop
inc
aam
out
orl
xor
xchg
sub
sbb
mov
loopne
inc
in
mov
xchg
frstor
call
mov
push
pusha
stos
push
aad
addb
sbb
xchg
ja
ljmp
inc
stos
das
cmp
scas
repz
sbb
cmp
cmp
mov
repnz
inc
cmp
xchg
fiadds
pop
bt
inc
leave
test
repz
pop
sti
push
push
cmp
dec
inc
data16
mov
insb
xor
call
in
stos
sbb
sar
ss
pushl
imul
jmp
xor
jbe
nop
jae
xor
cmpsb
inc
stos
xchg
push
popf
pop
jle
rclb
inc
call
ljmp
or
pop
call
subl
cli
xchg
das
iret
data16
in
test
into
mov
mov
xlat
adc
mov
fldt
mov
and
call
push
fwait
nop
daa
sar
mov
or
into
shll
or
cltd
movsl
out
test
pop
int3
and
out
xor
xchg
sbbl
jl
arpl
and
push
shlb
fldl
inc
lcall
xor
loop
add
arpl
shl
jle
push
xor
mov
cmpsl
cmp
push
enter
mov
mov
ficoml
sahf
cwtl
xchg
mov
mov
pop
sub
mov
notl
xchg
push
jne
rcrl
mov
mov
faddl
cmp
mov
dec
idivb
into
mov
jmp
nop
cmc
jno
cs
movsb
xchg
pop
in
fs
sbb
popf
sub
push
mov
cmp
testb
pusha
lahf
sbb
mov
or
mov
call
inc
pop
and
jl
inc
fcomp
mov
mov
cmp
jle
stos
and
or
sub
mov
dec
in
sub
dec
dec
data16
fmuls
mov
in
add
mov
push
pop
movl
aad
mov
or
jns
pop
insl
and
stos
cltd
push
test
lods
push
xor
test
cmp
xor
pop
das
test
dec
and
scas
loope
pop
std
leave
pusha
das
jg
mov
xchg
inc
inc
fdivl
les
mov
divb
pop
jecxz
lahf
push
in
adc
jae
fisttps
sbb
es
mov
sub
loope
dec
pop
aam
cli
push
inc
inc
int
mov
fsubr
or
pushf
xor
imul
add
bound
xchg
xor
xchg
mov
cmc
add
nop
repnz
mov
dec
fdivr
jo
cs
shl
sahf
sub
nop
pop
fildl
inc
gs
sub
jmp
pop
sbb
mov
push
addr16
call
cmp
outsb
push
or
lds
or
out
sbbl
cmpsb
cmp
outsb
insl
pop
mov
pop
jecxz
adc
call
lock
out
nop
lret
cmp
mov
pop
sub
mov
jo
pop
xchg
jns
hlt
sub
xor
cmp
mov
js
subb
jg
in
imul
in
int
sahf
lea
push
sar
xchg
movsl
ror
push
inc
inc
adc
mov
fidivs
and
not
pop
cmp
jmp
clc
push
imul
dec
mov
sbb
cmp
add
inc
scas
es
out
inc
ss
in
push
lds
xchg
rcrb
dec
cmc
ss
add
movsb
shlb
repnz
dec
fbstp
fdivrs
stos
lret
gs
mov
xchg
ja
cmp
and
mov
inc
dec
mov
std
mov
pop
repz
pop
dec
adc
pop
cmp
pop
pop
out
scas
fidivl
mov
into
mov
sbb
mov
sub
cmp
dec
or
stc
xchg
cmp
dec
adc
add
cmp
sbbl
mov
shlb
sub
xor
jmp
jns
push
mov
stos
stos
mov
fiadds
mov
loope
aaa
flds
xchg
jbe
fimull
je
mov
mov
xchg
adc
dec
pop
dec
dec
or
push
jo
mov
xchg
dec
push
pop
clc
push
jne
jecxz
inc
mov
push
shll
outsl
and
rorb
and
dec
sbbb
xchg
loop
add
lss
mov
mov
xchg
add
andl
xor
and
push
mov
jnp
sub
jnp
mov
push
imul
fdivrs
cmove
dec
mov
out
xchg
loope
jmp
adc
sub
push
in
mov
sbb
push
movsb
fadds
pop
mov
bound
or
cmpsl
in
mov
leave
pop
movsl
or
cmp
insl
in
and
clc
repz
scas
inc
mov
mov
mov
xchg
in
or
jno
pop
insb
jno
pop
fdivrl
mov
stos
jge
test
inc
shl
pop
shr
xchg
dec
loopne
pop
xor
adc
fisubs
xchg
shll
and
xlat
incl
xchg
dec
mov
nopl
add
cmp
adc
imul
mov
push
sub
inc
int
in
add
dec
mov
cmp
mov
xchg
mov
lods
lea
insl
ljmp
xor
push
xchg
sbb
pop
insl
mov
mov
or
addr16
and
loopne
jne
out
popa
add
into
cwtl
data16
int
fsqrt
pop
addr16
dec
in
loopne
icebp
jl
inc
lret
sbb
and
pushf
cmp
jbe
int
push
adcl
add
xchg
jmp
arpl
in
xchg
adc
divb
out
mov
ja
or
inc
adc
cwtl
jb
shrl
xor
inc
call
repz
mov
lds
mov
or
bound
bound
pop
lret
clc
inc
js
xchg
cmp
mov
adcl
stos
jle
push
push
fildll
rcrl
sub
jle
add
mov
fidivl
data16
iret
mov
cld
xchg
adc
cwtl
pop
xorb
pop
cmp
sub
xchg
mov
loope
mov
aad
jb
xchg
sub
cmp
mov
insl
cli
stos
aaa
dec
stos
ljmp
mov
ljmp
or
fmuls
in
mov
mov
aam
sub
xchg
mov
sbb
dec
push
mov
dec
pop
xchg
pop
fnstsw
repz
push
cltd
sub
adc
xor
loop
fwait
cmp
inc
lods
push
into
add
xchg
dec
je
jecxz
sub
adc
ficoml
sub
jle
mov
enter
iret
sub
fdivs
sbb
sub
dec
mov
in
mov
xchg
adc
mov
std
adcb
push
popa
add
fsubrp
push
movsl
xchg
scas
lock
loopne
push
lahf
notl
push
imul
jo
fsub
dec
daa
inc
ja
js
mov
xchg
sbb
lahf
sbb
aad
call
test
dec
aas
imull
data16
int
sbb
nop
xchg
stos
cmp
test
fwait
andl
insl
out
xor
dec
push
dec
rorl
fcom
pop
dec
in
jl
aad
sub
pop
mov
push
popf
and
lea
push
mov
pop
movsl
repz
sbb
lret
mov
jb
jo
mov
dec
rcll
outsb
sbb
mov
dec
loop
int
sar
lock
mov
jle
ljmp
dec
fstpl
loopne
test
mov
xchg
mov
lret
push
inc
imul
inc
cwtl
insl
ret
out
jp
inc
fmul
sbb
pop
inc
lods
fidivl
mov
loopne
or
add
hlt
mov
aad
ds
fs
lea
adc
or
inc
pop
stos
imul
test
popf
dec
stos
in
dec
jns
mov
ds
jge
repz
push
stos
nop
daa
dec
in
insw
and
scas
xchg
pushf
repz
gs
jne
mov
and
push
fs
andb
icebp
cmp
inc
out
in
inc
and
cmp
cmp
addr16
push
decl
lds
cs
pop
xchg
mov
push
loopne
jl
xchg
add
call
push
cs
jle
jb
icebp
jg
mov
ficoml
xchg
sub
mov
insl
and
stos
stos
xchg
add
dec
sbb
in
dec
inc
aam
insb
jle
dec
sti
es
ljmp
sub
lods
jmp
dec
jo
push
cmc
js
inc
int
cld
test
jo
clc
dec
leave
imul
cmpsb
mov
neg
loope
aam
fldl
dec
in
sbb
cli
jp
imul
push
jg
ljmp
sarl
pop
mov
fsubp
mov
xchg
mov
int3
cmpsb
cmp
imul
mov
int
daa
xlat
sbb
aad
call
fistps
xor
xchg
insl
pop
cmpsb
stos
xlat
loope
push
jecxz
dec
lcall
cmp
sbb
idivb
popa
mov
jns
cmp
in
test
ss
ret
cli
push
sub
aas
jp
clc
int3
or
mov
sub
pop
add
mov
insb
mov
add
cmp
aam
lds
sbb
and
cld
lea
or
daa
jl
inc
pop
xchg
mov
shl
jge
enter
pop
test
push
jge
mov
jno
sahf
and
int3
sbb
es
stc
mov
push
xor
xchg
aad
cltd
test
jp
out
outsb
iret
aaa
js,pt
repz
gs
imul
xchg
cmc
or
test
insl
addr16
push
sahf
jno
jnp
lds
dec
fdivl
int
mov
jmp
sbb
mov
inc
inc
inc
addl
xorb
push
jb
cwtl
bound
fcomi
notl
dec
xchg
push
mov
leave
cwtl
jnp
push
add
jg
imul
repnz
sub
pop
add
cmp
xor
punpcklbw
pop
leave
jns
lcall
sahf
stos
inc
scas
and
mov
stos
jl
sbb
sbb
add
sub
add
xor
add
cmc
hlt
cmp
mov
ds
pop
jl
int3
outsl
sub
jns
aad
stos
sbbb
in
shr
pop
repz
clc
cmpsl
xor
add
popf
adc
iret
cltd
cli
ds
mov
add
les
ret
mov
les
push
sbb
adc
ljmp
jno
adc
or
pop
subl
shlb
mov
lahf
pop
xor
mov
xorb
mov
gs
xor
adc
jle
jp
push
mov
pop
push
xchg
jle
push
mov
sbb
dec
dec
sti
ret
sbb
ljmp
jno
incl
arpl
and
sub
lret
fwait
mov
or
je
negb
push
push
jnp
jns
pop
dec
lret
icebp
sbb
push
aaa
fucomi
push
lea
sub
xchg
jnp
call
or
rol
pop
scas
inc
xchg
in
jg
out
pop
hlt
shl
push
stos
adc
mov
sahf
fwait
push
cld
push
dec
pop
xchg
aad
add
out
and
xchg
pop
push
inc
mov
xchg
xchg
test
out
mov
pop
hlt
push
into
hlt
inc
cli
jmp
mov
shr
pop
xchg
out
popa
add
fbstp
loope
add
add
and
lret
dec
out
decl
xchg
fmuls
mov
and
sbb
rol
or
out
in
sbb
dec
es
adc
pop
bnd
lret
sub
push
push
adc
mov
ret
mov
mov
xor
in
xorb
stos
stos
sub
movsb
cmpsb
xor
hlt
jno
mov
test
push
mov
in
out
aaa
into
out
add
push
addr16
mov
out
add
mov
les
sti
sub
or
ret
hlt
adc
dec
xor
out
cmp
fisubrl
loopne
mov
mov
lret
mov
mov
jg
repz
movsl
into
push
mov
jp
in
push
jmp
jmp
movsl
push
pop
jg
mov
mov
xchg
add
adc
inc
add
xor
stos
andb
push
xchg
mov
mov
sbbb
stos
xchg
add
sub
neg
imul
je
inc
bndldx
out
orl
cmp
leave
sub
jo
mov
ja
add
mov
jmp
dec
aas
xchg
jbe
les
jo
or
cmp
push
out
dec
xorl
cld
sub
nop
xchg
cmpsl
int
mov
decb
mov
push
lcall
and
hlt
sbb
subl
jnp
incb
shrb
imul
sbb
out
sti
mov
jae
adc
test
cmp
dec
movsb
gs
std
push
and
jp
mov
sub
insb
mov
cmpsl
lahf
push
mov
pop
ss
pop
jae
add
das
cmp
xor
popa
cld
xchg
xchg
into
push
mov
sub
pop
push
cmp
mov
dec
cmpsl
into
and
stos
mov
je
jl
int
sbb
mov
test
ja
ds
or
pop
mov
popa
pusha
ret
sbb
pop
outsb
jnp
sbb
shll
fistpl
mov
loopne
cmp
sahf
jle
mov
xor
push
popf
push
dec
fsubr
gs
and
inc
bound
in
cmpl
mov
aas
push
cwtl
fwait
pusha
fwait
bound
popf
or
pop
mov
enter
movaps
dec
rolb
pop
xor
sub
fidivl
repnz
dec
fwait
adc
xchg
rclb
push
shl
fcoms
test
cmp
loop
inc
pusha
adc
push
sub
pop
gs
mov
pop
out
jecxz
fidivs
pop
or
lods
aad
sbb
xchg
sub
inc
test
aaa
add
jmp
or
inc
pop
mov
fdivs
pop
fsubr
lea
adc
xchg
sbb
in
cltd
std
jge
cmc
test
testl
lock
nop
adc
arpl
xchg
or
insl
inc
lcall
sbb
fsubl
xor
cmc
in
movsl
lods
inc
aad
pop
adc
jge
popa
push
xchg
cmpsl
add
sub
loopne
mov
pop
bound
inc
xchg
jp
cld
scas
add
movsl
xor
sbb
dec
mov
push
movsl
push
or
xor
sub
or
jmp
sub
xchg
mov
push
outsl
jnp
pop
push
jb
jg
adc
adc
gs
push
push
sbb
xchg
stc
sahf
stc
jle
ljmp
jns
add
decl
stos
and
push
sbb
arpl
jae
dec
dec
lock
clc
xchg
pop
movsl
ret
sbb
sub
lds
push
rcll
test
aas
stos
xor
fistpl
movsb
pop
cmp
push
bound
xlat
push
push
and
mov
stos
sub
mov
loopne
ficoms
lret
push
xchg
pop
std
outsl
pop
push
lock
subb
cmp
into
je
dec
pop
cmc
mov
fldpi
aas
xor
jae
mov
fmull
lods
xchg
pop
ds
mov
ret
rolb
es
and
xchg
inc
sbb
repnz
jne
adc
cmpsb
sbb
cli
xchg
adc
in
dec
xor
sahf
xor
jne
mov
fiadds
or
repz
gs
sbb
push
sub
and
dec
popf
jge
pusha
ljmp
pushf
ss
push
xlat
cmp
push
call
stos
int
jnp
inc
cmpsl
adc
popa
xacquire
or
inc
pop
es
sbb
out
call
push
outsb
gs
movsb
sti
inc
mov
or
pop
push
sub
dec
scas
xor
jbe
nop
adc
or
jle
arpl
pushl
xlat
xchg
shlb
mov
dec
ljmp
jae
inc
aad
mov
fistl
mov
cmpsb
mov
pop
sub
jb
and
lds
ret
push
xchg
add
xchg
pop
mov
mov
cmp
jmp
ja
mov
jbe
dec
popf
cmp
pusha
mov
test
dec
or
mov
cltd
scas
test
dec
loop
ror
test
imul
xchg
pop
addr16
sub
mov
sub
call
inc
lods
adc
sbb
imulb
cmp
dec
xlat
subb
lds
imul
dec
inc
shll
inc
scas
cmp
aaa
nop
stos
add
je
mov
int
imul
xchg
dec
sbb
inc
dec
sbb
mov
pop
imul
jp
adc
fists
mov
sub
cmp
mov
push
fiaddl
jp
test
sub
sti
dec
outsb
int
sbb
mov
xor
shl
sub
inc
lea
insb
fnstenv
je
ljmp
cmp
add
adc
sti
pop
sub
lods
bound
std
mov
addr16
ffree
dec
stos
repz
sbb
repz
cs
insl
jecxz
mov
aas
dec
insl
sub
clc
fnsave
movsl
pop
pop
test
xlat
fwait
test
push
xor
push
mov
adc
outsl
fnstenv
fadds
adc
and
movsl
jae
out
inc
push
jle
jmp
jbe
enter
movaps
enter
pop
test
fstpl
jne
xor
jae
repnz
outsl
sub
das
imul
sub
sub
jge
outsb
shlb
inc
dec
and
pop
in
out
cbtw
inc
push
mov
iret
sbb
jne
sub
aam
orb
je
inc
pop
xchg
int3
sti
fwait
fs
xchg
adcb
sub
dec
pop
arpl
pop
jo
mov
adc
out
imul
jns
in
in
bnd
stos
fisubl
clc
push
sbb
das
add
pop
mov
push
xchg
jge
pop
push
ljmp
testb
loop
jns
or
lds
cmp
pop
sub
call
bound
cs
dec
inc
and
inc
jle
mov
lds
inc
in
xor
enter
jnp
and
push
or
cmpsl
loope
fsts
mov
nop
js
enter
mov
leave
mov
and
and
fdiv
icebp
inc
arpl
fwait
adc
xor
xchg
add
mov
cmp
mull
sbb
rcrl
daa
add
out
bound
inc
lret
fcompl
icebp
ljmp
lock
cvtdq2ps
pop
cmp
test
daa
cmp
dec
pop
inc
xchg
jb
dec
jo
pop
call
dec
mov
mov
jbe
out
scas
lods
bnd
jae
vmwrite
inc
stos
xor
ljmp
mov
pop
ss
lret
jl
int3
lret
xchg
stos
rcrb
shll
cwtl
sub
sbb
fbstp
pusha
push
sub
cmpsl
in
dec
or
into
push
inc
bound
inc
inc
adc
or
inc
mov
loop
cwtl
imul
jb
mov
js
cld
and
popf
stos
push
ljmp
or
cld
sub
stos
and
cmp
ret
arpl
mov
shrb
int
ss
jmp
leave
add
mov
stos
or
test
cwtl
in
mov
rol
loopne
xchg
push
cwtl
and
lock
inc
jbe
addps
push
stos
dec
gs
repz
in
push
push
xor
sbb
out
or
or
inc
mov
ss
arpl
mov
sbb
lahf
or
out
cmpsl
dec
cmpsb
inc
int
in
out
frstor
loopne
push
cmp
inc
pop
push
mov
xor
dec
jmp
je
orl
inc
push
xor
sbb
pop
repnz
scas
jns
cltd
imul
pop
pop
mov
repnz
sbb
dec
cmpsb
jb
mov
popf
sbb
stc
adc
sub
es
insb
das
pop
jle
icebp
movsl
xchg
add
or
ds
cmc
cltd
or
mov
or
clc
in
shrb
push
cwtl
std
clc
xor
cs
ss
lret
pop
test
ret
out
dec
cmpsb
mov
add
test
ja
daa
out
test
cmp
adc
mov
movsb
add
xchg
sub
xor
xor
in
dec
xor
adc
ret
cmp
push
andl
mov
mov
pop
imul
notl
xor
fs
sbb
mov
mov
shr
xchg
sahf
push
or
lock
es
adc
xor
leave
jg
jns
adc
jge
sub
cltd
stos
mov
js
movsl
sub
loop
cmp
aaa
shll
repnz
or
mov
sbb
xchg
fadds
das
push
ret
add
and
cmpsb
and
sbb
pop
filds
call
fwait
and
xor
in
xor
cltd
mov
push
push
shrl
in
loope
test
movsl
and
jmp
xor
mov
jns
orb
dec
mov
jmp
xchg
ljmp
cmpsb
dec
lahf
inc
cmp
inc
jge
pop
loopne
mov
adc
int3
mov
xor
xor
insb
pop
mov
jmp
pop
mov
or
sub
cmp
inc
sub
inc
push
dec
adc
pop
adc
xchg
pop
aaa
mov
movsl
repnz
dec
das
adc
mov
and
lret
jne
xchg
mov
pop
push
jecxz
rorb
mov
cltd
pop
jae
cli
inc
fcmovb
std
mov
sub
mov
sub
enter
jmp
mov
mov
enter
out
stos
or
or
or
push
mov
mov
pop
mov
rclb
scas
int
xchg
pop
xor
cwtl
push
jle
jp
and
cld
test
sbb
pop
imul
mov
mov
inc
rclb
mov
pusha
aad
ret
inc
pop
jecxz
dec
leave
jp
sbb
jae
mov
paddusw
xor
lock
push
cmp
push
lret
mov
nop
add
adc
cmp
std
cmp
inc
imul
ficoms
mov
and
mov
popa
inc
lods
xchg
push
cld
xchg
scas
xchg
rolb
jo
aad
add
jnp
mov
xchg
icebp
push
fadd
imul
xor
int
dec
incl
push
outsb
movsb
lods
arpl
mov
mov
lcall
adcb
inc
fisubs
dec
pop
add
test
sti
pop
rclb
adc
stc
daa
push
dec
hlt
jg
out
stc
test
jo
cmp
push
inc
xlat
dec
ficompl
out
xlat
lods
inc
mov
jnp
xor
mov
popa
xlat
inc
out
pushf
inc
xlat
or
xchg
leave
gs
xor
js
mov
xchg
fidivs
sub
hlt
mov
js
ret
sub
mov
jg
mov
ret
outsl
mov
mov
mov
adc
jb
movsl
jecxz
imul
nop
cmpsl
jno
push
mov
mov
adc
pop
aaa
push
data16
test
dec
add
nop
xchg
adcl
pop
mov
fmuls
outsl
push
push
imul
mov
call
cmp
imul
notl
mov
push
pop
and
jb
sbb
xor
dec
mov
jge
shrl
ds
fcomps
add
inc
push
push
sbb
inc
cmp
divb
push
into
sub
pusha
lods
jg
push
lahf
jbe
das
or
adc
lods
xchg
repz
dec
cmpl
or
adc
ljmp
data16
insb
adc
push
xchg
fldenv
sbb
sub
cmp
stos
out
fcmove
and
fsubr
popa
cmp
movsl
ret
mov
or
jmp
xchg
pop
push
sbb
arpl
and
test
xchg
jl
fistpl
and
add
push
aad
push
js
aam
out
movsb
mov
and
adc
mov
lret
stos
mov
pop
insl
or
inc
int3
add
dec
cmpsl
test
nop
inc
add
mov
pop
repz
inc
aas
mov
sub
int3
adc
adc
mov
lret
add
push
stos
shr
xchg
int
xlat
dec
mov
mov
cli
sbb
push
sbbb
test
dec
mov
or
or
push
xchg
jg
aad
std
je
pop
test
js
les
sbb
push
sti
xchg
cmp
sahf
or
inc
inc
sub
lcall
pop
jae
adc
sbb
or
in
xchg
es
cs
imul
aam
inc
leave
inc
mov
sahf
mov
decl
sub
mov
mov
mov
add
out
loop
push
jg
orb
dec
mov
in
movsl
adc
pop
mov
in
rcl
pop
sbb
rcll
mov
push
js
fldl
cld
cmp
dec
in
jne
mov
imul
fstpl
cmp
pop
push
loop
inc
xchg
sub
mov
adc
and
inc
shll
pushl
call
inc
std
mov
push
test
js
xor
push
mov
jns
inc
lods
std
dec
gs
mov
push
gs
and
stos
push
mov
push
fistpll
add
or
scas
mov
or
jns
test
mov
lcall
lods
and
ficoms
cltd
xchg
sbb
fdivl
pop
sbb
test
jno
dec
ror
xchg
mov
outsl
fldcw
adc
sbbl
xchg
fbstp
sbb
getsec
dec
call
and
sub
jge
pop
repnz
lods
jns
fildll
cwtl
fstpt
lock
cld
pop
mulb
jg
ret
jge
pop
shll
movsb
loop
add
fsubrp
cli
imul
ss
xor
outsb
jecxz
add
pop
xor
js
xlat
mov
xchg
xchg
scas
cmp
loopne
ficoms
cwtl
bound
xchg
mov
loopne
imul
ja
loope
sbb
ret
adcl
xchg
cmp
in
jo
sub
adc
pop
xor
sub
pop
data16
bound
jge
js
xchg
adc
cltd
lcall
mov
shlb
movsl
andb
popf
into
adc
push
xlat
std
and
xchg
cvtdq2ps
cmp
cmp
insl
or
enter
jmp
fdivl
sbb
mov
rcr
pop
decb
lds
int3
enter
add
cs
mov
cmp
mov
loop
ljmp
test
inc
pop
push
mov
cmc
sub
sbb
xorl
pop
lock
mov
into
cltd
sti
sbb
mov
adc
adc
or
es
test
pop
outsb
fxtract
mov
and
jp
shrb
gs
push
inc
in
je
adc
fs
xchg
push
dec
aaa
jl
mov
das
mov
xlat
lret
aas
aad
xchg
cmpsl
xor
clc
mov
pop
sarb
daa
xchg
push
push
cmp
xchg
aaa
in
mov
dec
mov
test
data16
dec
std
xchg
adc
sbb
aaa
dec
pop
out
inc
mov
cmp
into
pop
ja
ds
add
std
and
aad
sbb
jecxz
les
xlat
jg
leave
dec
repz
push
enter
jp
jecxz
sub
in
jo
adc
out
in
dec
aas
push
cmc
adc
jbe
bound
stos
sub
jmp
test
or
or
notb
jp
mov
push
cwtl
gs
enter
and
xchg
mov
cmp
sub
xchg
jbe
dec
push
in
jbe
outsb
or
pop
sbb
mov
out
jbe
sti
lea
sub
mov
jnp
dec
pop
jp
mov
mov
test
mov
out
out
dec
dec
fwait
sti
hlt
xchg
xor
xchg
mov
mov
out
test
xchg
dec
push
adc
mov
cmp
lret
rcr
js
inc
pop
insb
inc
adc
std
xchg
mov
fidivs
jp
lock
sub
test
aad
in
xchg
fs
push
inc
mov
aas
pusha
mov
mov
inc
dec
ss
shrl
xchg
jmp
ss
fsubr
out
in
aam
orl
push
sbb
imul
sbb
mov
ss
sub
lds
cmp
sub
bswap
outsb
shl
rorl
out
cmpsl
out
mov
cmp
movsl
mov
push
and
sub
xchg
sub
enter
mov
outsl
or
jnp
and
or
movsb
bnd
mov
push
outsb
mov
mov
jno
add
repnz
test
push
sub
mov
shr
mov
adc
movsl
lods
or
js
pop
std
xchg
nop
imulb
loopne
pop
dec
fisubrs
sti
pop
sti
mov
ret
insl
sbb
ja
shlb
push
loop
push
adc
xchg
push
mov
iret
vpmacsswd
mov
and
jo
jecxz
mov
mov
and
xchg
and
rolb
inc
iret
pop
mov
fs
or
fildl
sarb
mov
stos
and
fildl
add
mov
fldl
or
xchg
movsb
inc
or
adc
aad
loopne
pop
cwtl
das
mov
dec
roll
imul
xor
in
lds
mov
leave
cld
test
lock
fstpl
lds
sti
inc
dec
fildll
ret
shll
addr16
mov
add
mov
call
imul
mov
aaa
ret
push
cli
or
push
fimull
fwait
pop
dec
int3
jg
push
popf
xbegin
push
dec
es
xchg
xchg
aam
nop
testb
jle
push
mov
mov
jae
xchg
push
repnz
into
cmp
mov
call
xor
fs
in
mov
mov
and
repz
inc
cmpsl
ficoml
shll
icebp
int3
mov
mov
push
inc
in
jae
notl
or
ds
fs
and
sahf
lcall
xor
or
fdivs
or
adc
scas
cmpsb
cmpsl
sbb
sbb
shlb
inc
pusha
cmp
bound
out
xchg
lcall
outsl
dec
lgs
mov
add
inc
loopne
push
push
mov
icebp
mov
imull
dec
cmova
push
push
or
cmp
cs
mov
fstpl
sub
repz
repnz
sbb
or
push
jle
psrad
int
es
ja
mov
int
hlt
sbb
aad
mov
push
nop
fistpll
je,pt
not
sti
xchg
push
pop
mov
dec
add
mov
popf
sub
sbb
xor
mov
bound
mov
loope
jmp
rorb
das
test
cmp
dec
push
clc
cmp
push
std
mov
add
push
fmuls
cmp
jnp
pop
dec
mov
push
or
cli
jne
push
lea
in
hlt
pop
sbb
pushf
push
fdiv
andb
pop
cmpsb
arpl
es
xor
clc
pop
mov
pop
inc
fs
add
pop
shlb
or
sub
jl
inc
jno
sbb
mov
arpl
cmp
popf
into
test
imul
xchg
add
fidivs
jle
fimuls
adcb
xor
lret
sbbl
mulb
sti
cmpsl
adc
aam
adc
sub
cmp
outsl
cmp
dec
xor
jecxz
mov
fildll
adc
pop
aaa
outsb
push
pop
pop
iret
cmp
jmp
xchg
sub
inc
into
cmp
pop
movsl
aad
shl
dec
loop
out
clc
cmp
test
xchg
repz
mov
nop
stos
in
jae
xchg
mov
pop
mov
inc
pop
dec
and
lock
js
popa
lea
roll
andl
mov
mov
les
xchg
xchg
pop
mov
int
pop
push
cmp
add
add
push
pushf
and
pavgw
push
icebp
out
mov
xchg
ds
sbb
lea
in
mov
adc
popa
dec
dec
int
dec
jo
pop
shll
loopne
fbstp
sahf
inc
pop
addr16
mov
pop
sbb
sub
ss
ffreep
in
stos
sbb
cmp
daa
push
push
or
in
push
lock
dec
jae
lea
sbb
jl
insb
xor
jns
std
push
ret
fisubrl
std
fimull
add
sbb
push
insb
ficomps
jecxz
xchg
mov
xchg
bound
push
push
cmp
pop
hlt
test
mov
dec
dec
or
popa
pop
add
jle
dec
pop
lock
ja
or
cmpsb
inc
mov
rolb
test
mov
pop
lea
aaa
jp
imul
pop
hlt
addl
loopne
test
mov
shrl
pop
les
xchg
insl
mov
faddl
add
push
pop
fadds
mov
or
pop
or
lcall
jl
mov
xchg
push
mov
mov
dec
out
ss
xchg
xor
mov
fstps
aad
mov
inc
jb
sarl
mov
sbb
or
sub
sbb
adc
dec
jge
xor
aas
fistps
xchg
shr
cmpsl
pusha
in
jp
jnp
sbb
jns
jl
push
mov
adc
dec
aad
das
rcl
imul
dec
add
repz
adc
push
push
js
pop
lea
xlat
negb
std
loope
cmp
sbb
fbstp
pop
pop
les
mov
rorl
mov
lock
andl
lcall
xor
jecxz
lahf
push
inc
push
jmp
es
cmp
ss
fidivrl
sbb
push
pop
fsubr
mov
inc
sub
sub
inc
mov
mov
mov
int3
cmc
push
jae
jo
cmpl
data16
cmp
mov
frstor
lds
dec
push
fs
push
push
test
repnz
in
sbb
xlat
sub
jle
sbb
aas
rclb
stos
test
daa
fmulp
push
pop
sub
mov
add
push
test
mov
and
add
mov
lcall
dec
ljmp
pop
pop
jb
inc
repz
repz
adc
cmc
scas
pop
fsubrp
les
pop
inc
fsubr
jae
insb
jle
js
inc
mov
mov
adc
call
pushf
xor
aad
push
sbbl
out
push
rorl
add
adcl
jno
cmp
addr16
test
mov
lea
outsb
mov
test
andl
and
add
lods
sub
pop
cmp
inc
scas
ds
out
mov
frstor
jb
jae
inc
enter
out
jmp
mov
sub
jg
mov
mov
push
das
push
clc
cmp
xchg
shll
cmp
dec
or
mov
sub
cmp
mov
lods
repz
pushf
in
lret
mov
push
loope
dec
mov
mov
js
jg
ss
cmp
xor
push
fs
pop
mov
xor
aas
xor
mov
xchg
mov
cltd
rclb
hlt
lods
loopne
jbe
shl
call
mov
mov
dec
mov
repz
in
adc
jecxz
cs
mov
pop
repz
pop
fistpl
mov
lret
clc
inc
or
cmp
out
in
or
and
adc
jp
pop
xlat
das
popf
inc
out
nop
xchg
adc
out
mov
and
inc
addr16
das
add
ljmp
mov
stc
adc
pop
outsb
inc
jbe
shl
cmp
push
jne
pop
repz
pop
mov
addr16
mov
stc
or
shll
cmp
pop
jg
or
fldt
fidivrs
lret
scas
inc
mov
clc
sahf
insb
cmpsl
popf
push
roll
out
sti
pop
loopne
inc
daa
leave
xchg
cmp
mov
imul
test
loope
push
push
imul
gs
fadd
add
sti
arpl
repnz
std
test
scas
dec
decl
add
jl
pushf
scas
les
in
push
sub
jg
jb
orb
pop
mov
sub
iret
mov
pop
xchg
testl
cmp
mov
lods
sub
shl
pusha
mov
aam
push
mov
jnp
loop
es
pop
add
xchg
add
add
mov
pusha
adc
sbb
addr16
and
xchg
xchg
pop
ret
cmpl
inc
in
mov
mov
or
popa
jae
cmp
in
orb
push
lret
imul
inc
leave
mov
adc
mov
push
pop
adc
popf
sub
into
add
xor
popf
push
push
cmp
mov
xor
mov
inc
lahf
xor
add
pop
inc
mov
out
jns
popf
pop
adc
push
jno
mov
cmpl
enter
jae
cmp
daa
and
movsb
dec
jne
fldcw
divb
pop
outsl
sti
jge
mov
or
enter
push
pop
outsl
loop
lret
out
ret
push
or
xor
mov
fwait
ljmp
mov
dec
imul
or
xchg
cmc
xor
jl
cmp
and
bound
jns
sti
pushf
xchg
mov
sbb
cmpsl
and
stc
mov
or
int3
pusha
mov
jmp
sub
aad
fwait
bound
adc
adc
imul
mov
dec
mov
out
pop
or
jge
stc
and
sbb
dec
push
cld
xchg
cli
rcr
add
jo,pn
push
mov
inc
lock
sbb
lea
push
sub
add
in
pop
std
sbb
pop
cwtl
xchg
lret
jecxz
fcomps
mov
and
in
rcr
aas
pusha
sbb
insl
pusha
stos
jmp
adc
lds
adc
sbb
inc
aad
inc
mov
cmpsb
and
js
out
shl
add
xchg
or
mov
xlat
jmp
sub
push
fdivrs
or
fwait
icebp
movsl
xchg
outsb
push
mov
ja
sub
mov
lods
inc
inc
adc
cmpsl
sub
shl
sub
fwait
xlat
mov
mov
stc
es
jne
dec
pop
jbe
scas
jg
sbb
in
dec
sub
mov
jmp
jae
cmp
out
adc
ss
mov
jmp
packssdw
mov
movsl
add
test
pushf
aas
cmp
loop
imul
xchg
mov
adc
out
pushf
jae
popa
inc
pop
lret
mov
sub
adc
movsl
vmovsd
lahf
pop
adc
cli
daa
into
aaa
xor
sbb
jle
jb
inc
std
xchg
cmp
fldenv
dec
loope
jns
imul
enter
out
push
cs
stos
inc
or
test
arpl
cmp
nop
daa
inc
mov
sti
prefetchw
or
and
push
popf
call
cmp
je
add
jecxz
in
mov
push
decl
mov
fnstcw
or
movsb
dec
adc
call
lret
mov
mov
jno
cmp
jb
sub
call
lret
sti
out
repz
inc
xlat
mov
and
fidivrl
jnp
lods
je
rcrl
mov
pop
insb
test
mov
fwait
stos
pop
ja
out
das
inc
jb
xor
adc
subb
dec
loope
les
push
testb
andb
dec
icebp
idivl
movsb
and
jmp
xchg
in
mov
int
leave
sub
adc
xchg
push
xchg
and
mov
lods
xchg
push
mov
aam
int3
hlt
mov
and
in
push
fcompl
pop
out
testb
and
es
jmp
jle
aas
xchg
sub
ficoms
cs
sbb
xchg
add
xchg
mov
adcl
push
sub
test
jnp
inc
pop
and
inc
xlat
out
cmpsb
shl
add
and
jle
xor
lahf
cld
lcall
cmpsb
dec
mov
out
xchg
push
lock
push
jne
jae
add
sbb
mov
cmpsb
test
enter
sub
inc
mov
mov
in
pop
hlt
fldl2t
push
dec
xchg
mov
push
xor
inc
and
dec
pop
dec
aad
aam
cwtl
add
repz
clc
xchg
cltd
pop
cmp
dec
fisttpl
mov
daa
ret
cmpsl
cmp
dec
dec
jmp
add
aas
mov
sub
jmp
mov
mov
cmp
jmp
and
adc
dec
in
mov
inc
out
mov
adc
xlat
outsb
and
insl
jge
xchg
adc
imul
adc
push
sub
sbb
mov
sbb
stos
pop
xchg
adc
jno
pop
push
dec
stos
vmwrite
mov
inc
inc
xchg
pop
push
inc
aad
jle
idivb
push
cmpsb
insb
pop
sub
xor
pop
fdivs
fisubrs
pusha
adc
bound
push
jmp
ds
aas
adc
lret
cmp
mov
mov
adc
jle
jg
adc
jl
ds
mov
enterw
rcl
jnp
ret
enter
ljmp
pop
aad
data16
xor
jl
cmpl
cmp
jle
sub
popa
cwtl
testb
sub
std
xchg
daa
mov
dec
ret
cmpsl
jmp
lds
arpl
stc
outsb
dec
gs
bound
cmp
into
gs
xchg
cwtl
mov
sbb
pandn
rclb
notl
pop
js
out
lods
fwait
mov
sbb
lock
pop
lret
stc
xchg
shll
push
out
xorb
subl
inc
push
pop
imul
xchg
push
in
out
pop
lock
sbb
inc
lret
lock
mov
add
iret
jns
movsl
xor
sti
jb
mov
xchg
sbb
popf
shlb
daa
jmp
sub
jno
mov
mov
rclb
insb
jae
enter
out
xchg
sbb
inc
pop
push
adc
sub
push
xchg
pop
movsl
cmp
adcl
pop
sahf
mov
test
lods
dec
data16
je
stos
test
cmp
orl
mov
push
imulb
movsb
jecxz
jp
aam
add
out
push
hlt
mov
fidivl
idivb
loop
fidivrl
or
jns
and
inc
push
and
xchg
sbb
mov
iret
fisttpl
mov
orb
push
or
mov
jno
cmp
mov
jnp
inc
push
mov
popa
jge
ffree
loopne
mov
insb
jg
push
lret
bound
lret
loop
js
jmp
add
lea
rcr
dec
lcall
stc
mov
cmp
dec
mov
sar
pop
ss
fistpll
out
sbb
mov
repnz
sbb
test
xchg
push
test
sahf
enter
orb
icebp
mov
pop
inc
inc
pushf
add
cmp
and
push
bound
aad
cmpsl
pop
fcomi
test
mov
mov
aad
mov
or
jl
mov
mov
inc
loop
push
add
mov
fidivrs
movsb
push
sbb
or
frstor
shr
sbb
add
cwtl
mov
frstor
mov
int
xor
xchg
ja
adc
inc
enter
xchg
pop
mov
adc
xor
mov
jl
data16
fstpt
loopne
jns
jmp
cmp
cs
loop
or
imul
mov
nop
mov
mov
popa
push
and
xor
sbb
js
nop
or
xchg
cltd
lret
mov
adc
adc
jle
dec
pop
and
movsb
data16
mov
icebp
push
stos
add
in
data16
sahf
mov
lods
out
sahf
xchg
push
or
in
push
adc
cmp
inc
fdivrs
jg
popa
or
fnstenv
inc
jp
add
daa
mov
aas
sti
jmp
push
in
add
cmp
adc
xchg
push
in
mov
out
addr16
cli
xchg
jle
or
mov
add
sarb
cmp
ja
add
cmp
jae
cld
int3
imul
lcall
int3
sub
push
inc
lods
test
popa
data16
mov
pop
arpl
shrl
mov
test
and
mov
jecxz
adc
and
lret
bound
pop
pop
mov
ror
sbb
repz
sub
mov
outsl
push
push
loopne
mov
test
cltd
fwait
cmc
sub
mov
test
ds
sbb
fnstsw
popf
jo
jg
cmpsb
mov
arpl
xchg
jb
jb
mov
pop
loope
andb
jp
icebp
out
aas
rolb
sub
sbb
inc
scas
nop
ret
lret
mov
push
or
mov
bound
out
insl
in
sbbb
scas
notb
in
jne
xor
sbb
test
aas
sahf
fs
lea
inc
stc
mov
pop
cmp
pusha
mov
imul
mov
gs
cmp
jmp
clc
add
fcoml
push
ret
add
cmpsl
pop
ss
jecxz
pusha
and
shlb
inc
out
fld
ret
cli
xor
or
pusha
stos
fcoml
mov
or
aas
imul
xlat
rcll
pushf
hlt
dec
iret
rcrl
lock
in
outsl
add
and
add
scas
jbe
pusha
jnp
xlat
mov
or
into
loope
cltd
or
lret
repnz
jb
pop
sbb
subb
ret
pop
xor
xlat
scas
cli
dec
loope
push
push
push
sbb
aaa
mov
cmpsl
jno
add
stos
push
push
jnp
mov
call
inc
mov
jb
arpl
xchg
popa
xchg
xor
bound
gs
xchg
ja
and
mov
cwtl
sub
inc
push
xlat
push
fldt
fstpt
and
jg
cmp
jle
loope
mov
xchg
jge
add
mov
pop
pop
out
test
add
jb
aaa
ja
mov
pushl
xlat
cld
std
adc
stos
lock
adc
inc
aas
push
mov
inc
shrl
icebp
in
dec
arpl
cmp
pop
lcall
dec
std
movsb
mov
jle
mov
imul
andb
dec
pop
rcrb
mov
negb
dec
cmp
in
ret
cmpsl
test
pop
repz
push
jne
adc
and
mov
inc
push
std
mov
loop
inc
or
mov
js
bound
pushf
insb
add
lret
hlt
cmp
mov
cmp
mov
mov
inc
das
add
add
mov
dec
push
inc
jmp
mov
rolb
insl
xchg
lret
aam
mov
sub
sbb
add
icebp
movsl
les
mov
fistpll
cwtl
das
insb
add
lret
dec
pop
mov
pop
sbb
stos
sbb
jmp
pop
add
inc
ja
mov
addr16
adc
lds
mov
out
fldt
orb
les
pop
jle
push
inc
jne
cwtl
xor
cld
inc
cmc
adc
push
adc
cltd
sub
or
rcrb
mov
and
lock
push
out
adc
xchg
nop
sti
jbe
orl
mov
cltd
and
daa
lcall
or
gs
dec
fsubrs
sub
jae
push
fxch
sbb
cs
rcrb
push
pop
pop
add
stos
jno
mov
xchg
rorb
dec
test
lods
fcomps
dec
dec
mov
in
call
add
hlt
jbe
aam
negb
loopne
int3
xor
daa
add
les
pop
pop
lods
mov
shlb
mov
xchg
dec
movsl
pushf
sbb
jae
scas
sbb
pusha
add
jne
sbb
cmp
les
or
inc
fisubl
ret
mov
push
cmc
fistps
call
rolb
in
fwait
das
jge
stc
mov
add
repz
push
cmp
cmp
insb
enter
push
jae
sbb
aam
sbb
mov
mov
xchg
inc
mov
push
insl
leave
jecxz
pushw
out
mov
inc
int3
enter
gs
push
dec
push
push
sub
test
subb
add
cmp
and
imul
mov
push
scas
lods
add
jbe
xchg
xor
or
aaa
mov
in
jmp
cld
ja
add
scas
scas
jge
clc
push
mov
xchg
nop
cmova
dec
pop
jecxz
xchg
dec
push
or
dec
fistl
or
leave
add
je
es
popa
xchg
dec
dec
fs
call
movb
mov
mov
mov
push
mov
lcall
xlat
adc
push
lods
jp
pushf
mov
sbb
or
lret
loope
adcl
arpl
nop
mov
jp
push
test
fildl
sbb
mov
dec
cli
xchg
push
orb
fistps
sbb
or
add
jle
jl
dec
lods
mov
test
lahf
test
pusha
js
lock
push
push
dec
jns
lahf
imul
mov
fld
notl
mov
pusha
loope
iret
in
mov
mov
in
jne
cmp
jae
stc
xor
push
dec
mov
lahf
mov
adc
cmp
or
addb
negl
ljmp
inc
fsub
push
dec
or
pusha
jb
mov
ret
adc
jns
inc
mov
add
xchg
push
xchg
xchg
in
push
xchg
sub
xor
sbb
fwait
divb
mov
adc
and
mov
adc
in
inc
outsb
lret
jbe
addl
cmpsl
ret
icebp
in
dec
ss
xor
nop
nop
cs
movsb
add
or
dec
jle
jle
rcll
cmp
std
nop
fwait
aam
rorl
and
fdivl
cmp
jb
scas
sbb
loop
rorb
mov
xchg
inc
jo
jns
cmp
push
bnd
mov
cmc
lds
aas
dec
lahf
inc
xor
outsl
mov
lods
jb
push
mov
jo
xor
sub
push
mov
cld
les
cs
pop
jecxz
push
add
test
adc
es
mov
pop
stos
push
ja
push
lret
xchg
and
adc
mov
lods
pop
and
enter
pop
xchg
add
in
lahf
dec
cltd
pop
aam
sub
cmc
stos
ret
adc
push
out
or
jne
aaa
in
mov
leave
sbb
mov
out
sbb
aas
fs
lds
out
lahf
fsubr
xchg
xor
or
daa
mov
sbb
add
inc
popf
sub
sub
jmp
xchg
orl
icebp
popf
repz
mov
and
sub
pop
cmp
out
pop
call
in
popf
stc
inc
movsb
iret
jbe
xor
fwait
pop
cmpsl
and
rcrb
lods
bound
hlt
fwait
xchg
sbb
inc
les
sub
icebp
sbb
icebp
push
aam
cmp
add
lods
lds
cmp
subl
xor
shll
pop
sub
or
jmp
lock
mov
jae
pop
mov
or
mov
lods
loopne
add
mov
cmpl
adc
enter
mov
mov
pop
sub
inc
mov
jae
sub
loopne
mov
outsb
in
movsb
dec
cmpsl
push
fdivl
insl
adc
clc
cmpl
sti
cwtl
jne
sbb
xor
cmp
dec
mov
inc
inc
pop
mov
sahf
adc
movsb
ret
shrl
push
cmp
or
sbb
fiadds
pop
jg
imul
pop
mov
vminss
rclb
shl
scas
inc
icebp
adc
mov
xchg
in
in
jecxz
ss
inc
mov
xchg
lret
xchg
pop
xor
cmp
dec
sub
sarl
mov
sbb
push
xchg
mov
xchg
cmp
call
scas
inc
adc
incb
or
lods
inc
outsl
jecxz
adc
lret
pop
in
dec
dec
xor
xchg
mov
jb
xor
stc
cmp
inc
pop
jae
scas
pop
jge
and
push
jge
scas
sub
jg
mov
sti
push
cmp
xor
sbb
adc
push
out
ja
ja
sbb
mov
sahf
jecxz
insb
popa
test
stos
mov
call
xchg
mov
add
and
push
push
movsl
xchg
add
push
loopne
push
jmp
gs
xlat
data16
call
add
jae
push
out
mov
fstpt
out
sub
push
mov
fidivs
nop
aas
push
mov
icebp
cmp
adc
push
in
push
pusha
add
jne
call
hlt
test
dec
push
or
sub
inc
jg
lcall
loop
in
cmp
xor
std
lods
data16
inc
cmp
xor
rcr
jb
mov
andb
pop
jne
mov
mov
outsb
inc
inc
sarl
sub
imul
jle
and
mov
sub
xchg
stc
idiv
inc
push
xchg
dec
fldl
cmp
repz
and
inc
out
test
popa
pop
jmp
outsb
mov
movsl
cmp
xchg
dec
xor
mov
decl
mov
pop
out
mov
cmp
xor
xor
mov
adc
ret
jo
mov
push
arpl
sbbl
lea
inc
push
fwait
inc
adc
sti
xor
loop
icebp
xchg
xchg
and
pop
fdivrs
dec
test
push
lods
cmp
not
idivl
clc
inc
fsubr
outsl
in
add
add
inc
cmp
mov
lea
aaa
iret
test
mov
sbb
sbb
stc
jg
mov
ja
push
jecxz
inc
out
rcl
outsb
inc
or
je
cs
cmp
aaa
bound
fs
dec
push
test
xlat
rep
xchg
adc
lods
or
daa
jne
je
and
sub
or
mov
data16
cmpsb
daa
mov
lods
test
or
adc
push
pushf
or
dec
jge
or
dec
mov
pop
mov
in
sbb
xlat
push
adc
pusha
adc
jo
outsl
add
into
aaa
adc
mov
jno
orb
cmp
pop
mov
loope
cmp
inc
mov
adc
mov
dec
xor
cli
addr16
imul
js
shlb
push
pop
jg
cmc
lods
lock
aas
popf
sub
fisubrs
xor
xchg
inc
mov
sbb
cmp
push
add
test
and
cli
pop
stos
mov
xor
pop
bndstx
and
mov
mov
pop
scas
mov
and
int
jne
adc
test
mov
push
push
cmp
insl
sub
push
sub
jne
repz
bound
int
fistl
nop
adcl
in
mov
sub
arpl
sbb
or
jno
out
mov
out
mov
ret
js
outsb
std
in
or
loop
sub
inc
xchg
testb
js
insl
mov
mov
or
jge
pop
adc
pop
jle
xor
and
dec
lcall
aaa
imul
add
mov
mov
mov
xchg
popa
xchg
daa
rorl
cmc
loop
inc
adc
addr16
jo
int3
int3
mov
inc
movsb
scas
adc
ss
hlt
mov
push
stos
inc
inc
orl
arpl
cmp
test
mov
xchg
js
sbb
mov
cli
jae
clc
push
nop
popf
dec
pop
incl
data16
sbb
insl
jno
lock
mov
sub
inc
or
aam
cmc
jns
subb
or
xchg
jmp
jno
and
int
test
jae
test
test
scas
xchg
cmp
mov
outsw
sbb
leave
cwtl
push
add
sbb
pop
mov
dec
mov
push
stos
and
popa
adc
rolb
int
sti
pop
cmpsb
out
es
add
dec
inc
xchg
stos
cld
lock
cmp
lcall
iret
rcl
sub
ret
mov
sbb
mov
mov
mov
xor
js
mov
or
std
push
jle
and
lea
insb
sbbb
or
scas
out
mov
pop
in
and
arpl
jecxz
xchg
inc
not
lock
add
inc
jno
lods
aam
hlt
pop
daa
pop
xchg
push
repz
sub
mov
sarb
inc
pop
arpl
test
test
sbb
ja
arpl
dec
daa
lcall
cmp
cmc
adc
aam
ret
cs
xchg
push
cwtl
pushf
shrb
hlt
jbe
sti
jo
mov
insb
mov
scas
out
aad
dec
pusha
xor
and
nop
stos
popa
cmc
lea
addr16
jae
jbe
push
mov
dec
or
std
xchg
inc
push
shrb
sahf
add
bnd
pop
adc
and
mov
and
in
stos
movsl
sub
push
inc
pop
cmp
sub
add
cltd
sbb
imul
sub
adc
and
in
push
push
pop
mov
or
fs
cmp
out
lret
ret
ret
mov
dec
cltd
rcl
xchg
adc
and
faddl
xor
mov
cltd
push
push
inc
or
int
push
test
insb
aad
inc
fidivs
jbe
scas
sbb
aaa
and
int
cmc
rorb
dec
xchg
ja
and
xor
mov
inc
cwtl
push
scas
icebp
cwtl
fidivrs
inc
scas
in
cli
scas
scas
notb
stos
scas
cmpsb
popa
loope
add
push
add
daa
mov
dec
mov
push
mov
out
pop
pop
cmpsl
inc
iret
cli
lds
and
push
gs
mov
cwtl
mov
test
xchg
cmp
or
mov
push
sbb
dec
cmp
jmp
cmp
pop
dec
fcmovnb
sarb
rcl
outsl
movsb
mov
ss
dec
inc
lods
dec
das
in
inc
cmp
pop
mov
or
in
data16
sub
pusha
mov
cli
call
scas
add
stc
pop
std
and
fidivrs
dec
jne
or
cmpsl
dec
xchg
and
scas
test
cmc
loope
hlt
aaa
popf
sbb
les
outsl
jnp
ljmp
add
jp
xchg
imul
imul
push
adc
mov
lcall
outsb
outsb
pop
cmpsl
movsb
pop
std
repz
loopne
fiadds
xchg
test
dec
add
lea
pop
rolb
sub
aad
jecxz
call
mov
in
repnz
pop
outsl
psubb
push
scas
and
push
push
iret
sahf
or
cwtl
mov
mov
lcall
outsl
aas
and
es
mov
jb
rorb
or
mov
xor
ret
rolb
push
jecxz
inc
jge
gs
arpl
jnp
sbb
push
leave
inc
add
js
push
cs
pushf
adc
or
jl
sbb
add
ret
popf
pop
xor
dec
xchg
add
adc
pop
movsb
daa
fnstenv
sarb
pusha
movsl
pop
dec
mov
mov
shrl
in
daa
mov
bound
lret
mov
imul
pop
xor
lret
roll
lret
add
shrl
das
xor
scas
fisttps
add
adc
cmpsl
ss
inc
sub
popf
ljmp
stos
sbb
inc
ret
cmovge
js
jbe
pop
mov
or
cmp
jp
jno
xor
mov
xchg
xchg
sub
xor
sub
push
pop
movsl
lds
and
add
mov
loopne
rcll
and
cmp
stc
adc
mov
mov
mov
mov
or
out
aas
cld
push
imul
mov
pop
arpl
lcall
in
jbe
mov
xor
sbb
jno
je
pop
dec
adc
test
cs
lods
in
mov
pop
sarb
fnstenv
jns
jno
dec
cmp
scas
shl
add
pop
or
xchg
xor
xchg
orl
fwait
enter
out
negl
cs
xchg
pusha
cmp
cmc
out
loop
sbb
ds
jmp
cltd
sub
cmp
and
dec
hlt
mov
lcall
cmp
lahf
lret
cmp
dec
fsubr
mov
sahf
and
js
not
bound
lahf
lods
int
add
arpl
test
mov
stos
pop
xchg
outsl
jnp
pop
decb
stc
rcll
inc
hlt
addr16
scas
lcall
insl
clc
inc
outsl
les
lods
adc
lcall
ljmp
xor
imul
mov
push
mov
add
or
xchg
and
nop
inc
int
mov
test
mov
xchg
sahf
sbb
jns
shlb
nop
jb
xchg
fsubrl
popf
and
cld
outsl
fldt
cmp
jno
es
dec
dec
and
in
movsb
xor
jg
jp
stc
mov
cmpl
pop
lea
stos
mov
mov
dec
scas
outsl
call
jae
jns
cmp
imul
xchg
fidivrl
xchg
shl
mov
cmp
clc
sub
sub
jne
add
xchg
imul
mov
std
js
in
test
pop
lods
lods
scas
or
pusha
inc
sub
push
stc
popf
popl
xchg
add
fs
push
es
add
mov
dec
mov
cs
jmp
orl
inc
in
scas
mov
imul
ror
leave
bound
inc
jp
cli
and
sbb
xor
iret
lock
lahf
mov
cmp
loop
cmp
push
rcrb
fdivrl
nop
lret
int3
pop
icebp
nop
mov
stos
pop
pop
imul
pop
sub
movsb
movsl
sub
gs
cmp
add
jne
icebp
and
bound
test
js
jp
sbb
push
mov
ja
dec
xor
pop
hlt
inc
cmc
mov
cmp
in
pop
loopne
add
stos
ds
loopew
adc
fs
sahf
sbb
scas
mul
ja
rolb
cmp
mov
cmpsl
inc
popa
pop
adc
adc
lods
inc
jmp
test
popa
mov
jmp
push
or
sbb
jg
imul
mov
xchg
sub
xor
lods
int
push
fwait
outsb
or
push
mov
push
call
mov
adc
push
jmp
push
xchg
xchg
cmp
pop
inc
push
out
and
xchg
leave
inc
sbb
ficomps
lcall
arpl
rcl
aaa
or
sbb
jb
mov
or
icebp
out
mov
mov
sbb
xorb
lahf
mov
lahf
fidivs
sarb
lds
xchg
mov
xchg
sbb
pop
jp
gs
in
add
mov
push
movsl
test
js
sbb
sbb
gs
pop
jle
jae
nop
jnp
mov
push
adc
packuswb
xchg
dec
jns
pop
shlb
sbb
mov
in
in
arpl
cltd
pop
lock
mov
ss
mov
in
pop
xlat
rorb
in
aas
outsb
movsb
loop
gs
or
addr16
loopne
sbb
and
inc
out
test
jbe
das
ljmp
lret
loopne
cld
mov
movsl
test
clc
rcr
xchg
mov
push
xchg
test
xchg
sub
add
es
pop
add
popf
and
loope
into
inc
push
out
mov
add
and
ljmp
mov
adc
mov
fldt
jne
es
or
mov
in
sarb
ret
dec
in
sti
addl
adc
cmp
imul
insl
xchg
outsb
rcrb
mov
cmp
push
scas
ret
mov
test
or
les
sub
add
push
mov
push
cmpsl
iret
xchg
xor
movsl
addr16
cltd
inc
lock
jle
pop
pop
mov
sub
sub
dec
arpl
dec
jno
icebp
mov
sub
icebp
cmpsl
jp
data16
push
insl
dec
dec
les
inc
pop
xchg
or
fmull
mov
xor
aas
pop
mov
imul
pop
sub
add
pop
push
enter
jnp
mov
insb
or
mov
inc
cwtl
jnp
sub
dec
sar
out
fists
dec
int3
cmp
cmpsb
into
in
test
mov
movsb
addr16
ds
fsubrs
cwtl
gs
adcb
adc
je
pop
and
adc
dec
push
mov
shrl
cli
ret
flds
imul
stc
inc
mov
jmp
jo
scas
js
push
shlb
aaa
lea
out
fwait
sahf
ss
fimull
insl
jge
imul
mov
cwtl
jae
int
out
or
fwait
sbb
xchg
js
mov
lock
int
cmp
xchg
jbe
add
mov
push
pop
out
sbb
clc
dec
ljmp
call
leave
test
dec
pop
scas
mov
mov
cmp
inc
push
xor
adcb
add
pop
shrl
xchg
pop
dec
fadds
inc
dec
rcll
repnz
xorb
dec
mov
and
lea
in
inc
rcll
mov
ljmp
stos
lahf
mov
shr
xor
xchg
stos
sub
pop
sub
adc
inc
enter
mov
sbb
les
mov
lret
incb
popf
stos
dec
xchg
mov
mov
mov
mov
rcll
test
incl
stc
pop
sbbl
cltd
lret
in
mov
out
and
mov
lret
iret
pop
shll
sub
sbb
pop
fimuls
sub
fildl
xchg
xchg
aam
sub
and
cmp
add
inc
cmp
lcall
mov
xor
call
push
pop
jbe
cmp
idivb
lea
jl
into
pop
jno
mov
jb
cmpsb
push
scas
xchg
inc
mov
and
daa
clc
hlt
and
add
imul
lret
es
inc
je
mov
add
jecxz
negb
call
decb
popa
push
and
lock
iret
or
das
inc
fistpl
btr
clc
cmp
mov
mov
jae
fcoml
lods
loopne
fcompl
fsubrs
inc
popf
test
scas
push
cmc
lret
push
aad
les
in
pop
enter
shl
sub
into
pop
mov
push
out
pop
stc
repz
arpl
sub
cmp
pusha
sub
in
cmp
jns
inc
imul
push
jo
mov
jecxz
mov
push
in
mov
rcrb
dec
fdivrs
fldl
andb
cmp
adcl
lret
dec
imul
jg
push
repnz
imul
movsl
jae
movsb
dec
shl
imull
or
inc
ret
lcall
jbe
sub
dec
decl
and
jle
insb
mov
xchg
ret
push
dec
push
xor
inc
dec
ds
dec
lahf
cmpsb
cmp
lods
gs
repz
mov
ficompl
adc
lcall
inc
adc
icebp
mov
xchg
notb
jge
pop
movsb
rcl
and
xchg
mov
test
mov
je
mov
or
movsl
cli
mov
jnp
stos
in
add
jg
sub
mov
pop
dec
and
negb
and
mov
mov
cwtl
aam
push
adc
inc
jno
jp
insl
mov
and
aas
dec
inc
push
loop
into
add
pusha
mov
dec
pop
mov
es
insb
iret
push
mov
dec
pop
in
ror
out
cmc
shr
fadd
cmpsl
adc
xorb
cwtl
leave
pop
pop
out
cmp
fldcw
mov
inc
inc
insb
cmp
xchg
pop
push
mov
cmp
jbe
int3
mov
iret
inc
push
jg,pn
xor
in
dec
xor
rolb
mov
xor
fst
cld
sbb
dec
test
mov
xchg
mov
adc
cmpsl
stc
xor
movsb
pop
push
lods
dec
rolb
push
int
xchg
sub
xor
xchg
adc
mov
or
sti
mov
les
sbbl
pushf
pop
sub
incl
jnp
and
icebp
adc
cltd
dec
mov
or
sbb
jmp
cmc
adc
sub
out
mov
xor
mov
xchg
cmp
inc
push
push
fnstsw
std
aad
mov
push
in
jns
repz
xor
push
jp
test
cmc
mov
loopne
outsb
jl
pop
ja
or
mov
xchg
push
nop
dec
in
xchg
sahf
out
es
and
imul
negb
popa
mov
and
cmc
adc
iret
cwtl
je
dec
jecxz
mov
and
lods
into
loope
es
dec
cmp
test
insl
sbb
and
or
data16
stos
xchg
push
dec
lret
xor
insb
mov
in
sub
frstor
mov
add
cltd
lds
sahf
sub
adc
in
out
cmp
outsl
cld
les
sub
inc
nop
fdivrs
or
jo
xorl
stos
bound
js
adc
xchg
pop
inc
enter
push
test
push
sub
lret
or
xor
lcall
xor
xchg
mov
dec
cltd
stos
dec
mov
lcall
add
xchg
orl
popf
and
mov
cmc
imul
dec
lea
icebp
and
mov
out
sbb
sub
cmp
xor
call
lret
leave
add
xor
dec
push
mov
lock
sti
test
sahf
adc
jae
arpl
xchg
sbb
enter
fisubs
and
pop
gs
xchg
sub
ljmp
xchg
out
xor
xor
rcl
ret
dec
fisubrl
loopne
lock
cmpsb
lret
sbb
fnclex
sub
enter
cmpsl
or
shlb
cmp
adc
mov
scas
inc
and
inc
fsubrl
mov
inc
xor
fmulp
dec
jg
dec
es
jl
mov
mov
jle
mov
sti
sbb
cli
aam
daa
xchg
lahf
test
cmp
push
clc
add
cmp
and
push
rcrb
jb
jecxz
cmp
jge
and
mov
lret
push
xchg
notb
mov
lods
mov
or
fwait
mov
jbe
mov
cli
aam
ffreep
xchg
add
enter
fsubrl
push
mov
fisubrl
bswap
adc
das
add
xchg
icebp
sub
scas
pop
mov
popa
xor
xchg
pop
test
cmc
cmp
xor
popl
gs
loopne
xlat
mov
or
mov
inc
mov
xchg
mov
int3
cmp
mulb
sbb
add
pop
vaddsubps
mov
sbb
lods
and
ja
cs
mov
and
add
xor
mov
fcmovnu
xor
ds
outsb
add
cmp
pop
scas
push
cmc
jnp
rorb
inc
gs
ja
mov
cli
test
fs
sarb
outsl
push
lds
outsl
sbb
xchg
icebp
or
outsb
iret
sub
push
mov
push
mov
out
jbe
bnd
call
adcb
out
imul
adc
jns
jb
mov
lods
mov
pop
sub
cltd
out
dec
push
and
push
sub
das
sub
fisubs
or
cmp
insb
gs
call
mov
cmp
fisubrl
aam
mov
sbb
popa
cmp
imul
push
sbb
out
push
ficoml
cs
lret
inc
xor
push
xchg
and
in
leave
in
sbb
sti
push
xchg
add
outsl
jnp
les
inc
out
xor
adc
adc
test
cltd
out
jns
bound
jge
fisttpl
inc
mov
daa
cmpl
into
test
mov
inc
aaa
mov
pop
fsubs
xchg
lret
fidivrl
add
or
fldt
lcall
loopne
ret
jb
insb
sarl
sets
sub
bound
shlb
xchg
cmp
ja
cwtl
mov
dec
data16
ss
fadds
cs
aas
insb
popa
mov
mov
les
stos
insl
xchg
lock
dec
mov
aad
in
adc
shlb
int
xchg
leave
mov
mov
repnz
adc
test
outsl
xchg
pop
mov
enter
popf
mov
adc
stos
cmp
jno
ljmp
std
sbb
mov
and
dec
push
in
push
pusha
mov
sbb
dec
popa
dec
or
mov
out
icebp
cmp
cld
ret
cmpsb
jns
add
inc
push
in
test
sub
fwait
das
lret
pop
popa
cld
xor
jp
insb
jle
xchg
subb
rcl
inc
push
xchg
inc
scas
jno
xor
push
inc
cmp
pop
push
mov
cltd
aad
fisubs
sub
shr
mov
jg
and
jnp
inc
aad
mov
lahf
cmpsb
dec
popa
sub
nop
add
jg
cmp
das
icebp
shrb
stos
or
gs
negb
loop
inc
stc
jbe
addr16
in
sub
pusha
pusha
out
cli
xchg
sub
jne
inc
fucompp
push
xlat
pop
fcmovnu
movsb
cmp
jmp
inc
cld
fs
pop
and
push
mov
lret
dec
mov
and
fwait
sbbl
mov
sbb
test
ficoml
or
lods
aas
sti
pop
test
and
jno
inc
add
sahf
leave
movsl
rclb
pop
scas
mov
cmpsb
dec
mov
aam
cmc
mov
lret
lret
mov
insl
std
adc
rol
call
loop
negl
pop
xlat
icebp
and
mov
pop
cmp
stos
insb
cmp
fucomi
in
mov
pop
andb
xor
dec
stos
push
inc
fcoml
int3
jl
mov
popf
inc
jb
das
shlb
imul
lock
mov
gs
outsb
popf
sub
push
test
lahf
mov
adc
ss
bound
psrad
mov
dec
ret
sbbb
push
or
or
imul
fstps
adc
movd
jno
mov
jo
fucomp
xor
stos
add
and
lahf
pushf
add
mov
loop
jmp
ja
adc
mov
sahf
push
push
rolb
enter
insb
out
dec
hlt
jnp
aad
add
repnz
mov
push
lret
push
mov
stc
fldt
jp
cld
test
xor
dec
hlt
rclb
and
mov
mov
aaa
fs
sti
xor
dec
sub
pop
pop
arpl
cmpsl
pusha
dec
std
xor
subl
gs
push
inc
and
pop
adc
jecxz
sub
push
jne
mov
cmp
mov
icebp
popa
and
lcall
xchg
cmpsl
daa
iret
jbe
dec
es
testl
out
scas
lods
sub
enter
and
int3
or
sbb
cmpsb
imul
sbb
xchg
sbb
mov
xor
cwtl
sub
mov
jb
cmp
int3
sub
cmc
xor
js
xchg
negb
jne
aad
adc
cmp
mov
lock
fnstcw
out
insl
lds
add
dec
pop
leave
loope
sub
fcomps
push
jns
xor
pop
lock
in
mov
cmp
enter
sahf
retw
rcr
ss
sub
mov
fldenv
ret
test
xor
pushf
daa
push
imul
xor
xor
push
es
cmp
and
jne
jo
or
loop
xchg
sar
add
jp
cwtl
orl
inc
setbe
call
insl
add
cli
scas
movb
outsl
repz
mov
push
lahf
notb
xor
push
icebp
movsl
out
outsl
sub
mov
fmull
int
mov
cs
out
cmpsl
sub
pop
movsb
pop
hlt
fildll
jb
cmc
lret
mov
in
or
call
sub
sarl
sub
fiadds
mov
ret
arpl
rcrb
push
pop
mov
int
inc
pop
repz
mov
dec
enter
test
sub
in
add
mov
test
xchg
add
mov
dec
mov
pushf
movsl
sub
sub
push
mov
testl
and
repz
std
ficomps
daa
fcompl
xor
loop
push
mov
js
cmp
lock
data16
adc
mov
lcall
or
sbb
mov
sbb
clc
sahf
enter
movsb
loope
jno
jge
insb
scas
xchg
inc
jns
cmp
lahf
or
cli
dec
sub
aad
add
add
xchg
pop
dec
mov
push
out
push
rclb
dec
pop
cld
sahf
jle
clc
mov
ret
mov
int3
addb
je
jp
aad
mov
mov
mov
push
into
ljmp
out
je
sbb
xchg
pop
pop
xor
mov
jle
jne
sbb
xchg
int
test
or
cmpsb
xor
loopne
mov
and
pop
and
xchg
cli
push
lds
negl
icebp
popa
fdivl
pop
and
addr16
enter
loopne
lock
stos
sbb
or
dec
push
dec
mov
push
lret
push
in
mov
loopne
and
out
imul
inc
int3
mov
xor
loop
inc
ljmp
mov
fcomip
out
in
addl
adc
les
outsl
cwtl
insb
mov
inc
in
mov
cwtl
out
push
cli
pop
mov
ljmp
subl
and
mov
test
jmp
popf
pushaw
xchg
add
mov
sbbb
xor
prefetch
jl
hlt
jge
es
jg
mov
leave
pusha
cmp
push
fcmovnbe
mov
add
xor
imul
insl
adc
test
jmp
dec
and
shll
lea
out
pop
inc
xor
out
nop
mov
inc
in
jne
push
incb
insb
out
nop
cmp
mov
and
mov
jecxz
cmpsb
loop
jle
test
mov
push
lods
inc
mov
xchg
dec
shll
lods
jno
pop
ffreep
add
daa
in
add
ja
and
pushf
scas
cwtl
push
jge
mov
arpl
cmpb
or
cltd
mov
or
in
fs
dec
push
mov
pop
testl
push
enter
bound
fsubs
stc
or
sar
pushf
pusha
xchg
cmpsb
mov
shll
popa
enter
mov
fwait
pusha
test
pop
fnsave
xor
pop
call
pop
sahf
aam
xor
das
daa
cmpsl
xchg
gs
test
or
subl
push
shrl
test
cmp
sub
sbb
mov
sbb
jae
cmp
mov
jl
adc
into
stos
fistpl
loopne
loop
lahf
iret
inc
cmpsb
lock
lock
insb
adc
inc
fistpl
shrb
outsl
add
call
ja
xor
fcoml
mov
scas
ret
sbb
pop
push
push
mov
push
add
dec
mov
push
lock
pushf
push
int3
arpl
and
jl
std
jbe
fsubrp
ret
ss
xor
dec
in
cmp
dec
out
out
pop
sbb
adc
jmp
jg
mov
sahf
push
rcll
pop
jg
mov
dec
xchg
xor
pusha
sub
aam
pushf
jg
in
jae
sub
orb
mov
jmp
sbb
leave
mov
ss
mov
fs
mov
sbb
insb
cwtl
inc
sahf
sahf
bnd
or
mov
daa
or
mov
dec
sbb
loopne
scas
loope
cs
sbb
lcall
push
pop
imul
cmc
nop
xor
push
or
into
cli
jmp
je
add
xor
jle
xor
xchg
or
or
dec
fstp
inc
fisubl
add
insl
pop
jb
lret
out
bound
sbb
cmp
repnz
mov
jns
mov
jo
cmp
aam
movsl
pop
and
mov
lret
stos
sbbl
mov
or
sbb
lret
sbb
inc
pop
scas
int
mov
int
cmp
adc
les
js
pop
nop
pop
in
fs
movsl
push
aad
or
push
js
lahf
push
xchg
push
push
movsl
imul
nop
xchg
fsubr
cmpsl
or
testl
popf
aad
ret
jnp
test
sahf
mov
inc
sbb
inc
hlt
fbstp
negb
cmp
aaa
lret
adc
ret
mov
xor
repnz
aas
adc
lds
inc
fbstp
rcr
fidivl
rol
popa
push
push
mov
adc
ds
icebp
lds
call
popf
xor
sub
fwait
repz
cltd
std
xchg
scas
mov
xchg
popa
push
cmp
push
cmpsl
mov
pusha
andb
add
daa
sbb
xor
addr16
mov
in
xchg
in
cmp
data16
jb
xchg
sub
rolb
mov
jge
push
mov
out
jno
aaa
push
sbb
push
lret
data16
xor
pop
fs
cmpsb
sbb
ficomps
push
push
cltd
test
je
sub
loopne
mov
pushf
divb
add
jo
aaa
fwait
hlt
jge
dec
and
xor
xchg
mov
lods
jmp
stc
inc
stos
iret
cmpsl
inc
xlat
sbb
in
in
nop
insb
mov
fisubl
outsb
shl
sbb
adc
cltd
stos
xor
lahf
sub
sbb
mov
add
insl
call
ds
adc
test
orl
jle
cmp
aas
fidivrl
ss
add
pop
sub
sbb
and
mov
add
and
jb
shlb
mov
ret
and
je
mov
dec
jbe
in
xor
and
sarl
pusha
or
daa
dec
ror
icebp
sub
faddl
stos
add
and
fcmovnbe
jno
ret
add
mov
int
addb
ret
imul
cmpsl
inc
push
push
pop
lret
inc
xor
xorl
pushf
fists
or
mov
mov
and
cmpsl
jl
loopne
sbb
adc
dec
jno
int3
dec
das
inc
je
negl
into
rolb
jns
cwtl
dec
add
stc
lret
fmull
in
dec
popa
sbbb
popf
in
cli
xchg
fcmove
nop
jmp
sbb
jbe
sub
xchg
push
mov
xor
or
sbb
xor
scas
cld
mov
repnz
ds
cmpsb
icebp
jnp
aas
dec
jecxz
mov
out
test
and
repnz
add
jns,pn
pop
psrld
ror
leave
adc
daa
inc
inc
stos
nop
fs
inc
or
lahf
pop
dec
stos
repz
loopne
pop
lock
or
cmpsl
mov
xchg
mov
pop
mov
rcrl
jp
mov
movsb
jmp
fbld
lret
jb
and
mov
xor
cltd
popf
fs
xor
push
cmp
sbb
mov
clc
dec
and
mov
push
or
lods
cld
dec
incl
rcr
mov
or
jl
push
sti
jno
loope
or
ret
jne
mov
movsb
and
fstpl
test
xor
je
inc
or
out
fistl
pop
int3
negl
cltd
adc
mov
cmp
test
mov
jo
pop
insb
lcall
and
stos
bound
movsl
add
fdivl
gs
mov
loop
loop
je
xor
pushf
test
dec
mov
les
movsl
lea
pop
adc
ja
fcompl
pop
out
push
cmc
in
pop
add
lods
cwtl
pop
hlt
das
mov
sub
sti
sub
outsb
and
loopne
dec
popf
lock
push
stos
out
lret
and
fcompl
sarb
lahf
sbb
sub
sub
and
sti
adc
pop
pop
pop
scas
add
mov
rclb
std
fsts
xor
rcl
pusha
mov
mov
pop
sbb
inc
ret
loope
mov
mov
lea
mov
xchg
orb
cmp
push
mov
jno
data16
xor
scas
jb
in
inc
sahf
scas
stos
ljmp
insl
lcall
or
imul
inc
cmp
nop
lret
clc
or
pop
sub
xor
clc
inc
fdivs
push
pop
movsl
sub
add
inc
cmpsb
sbb
stc
iret
push
push
into
jl
int
popa
jb
jle
es
popf
cmp
jmp
in
pusha
sub
xlat
nop
sub
jle
cmp
mov
inc
in
add
addr16
and
addb
push
cmpsb
mov
ret
cmc
movsb
mov
cli
xlat
outsb
sub
mov
push
dec
insb
sarb
xchg
mov
push
and
dec
fildll
subl
jne
arpl
out
sahf
inc
push
ljmp
mov
xor
jae
inc
fdivrp
lods
sub
add
test
mov
cld
cld
outsl
mov
aaa
repz
scas
and
ss
push
sub
dec
xchg
popf
push
adc
jle
hlt
or
sarb
pop
pop
int3
push
push
mov
inc
jmp
add
loop
inc
inc
pop
out
cmc
adc
stc
test
aam
sbb
addb
jp
fs
leave
mov
lret
mov
and
ds
dec
loop
pusha
or
js
loope
clc
adc
ret
pop
scas
sti
mov
andl
xchg
imul
jl
xchg
jne
inc
xor
mov
xchg
xor
adc
cmp
scas
inc
bound
rcrb
lret
addr16
scas
pop
insb
jmp
out
scas
jno
mov
mov
movzwl
inc
clc
cwtl
inc
fidivs
add
mov
flds
fcomps
sbb
into
cmp
into
hlt
push
leave
push
loopne
mov
xor
push
inc
lods
shrb
lods
fcompl
mov
lods
clc
je
cmp
lods
mov
sub
test
scas
shll
clc
jb
mov
xor
shl
ja
push
push
jne
xchg
addr16
icebp
movsl
xchg
ljmp
fimuls
lock
test
xchg
inc
call
shl
inc
mov
inc
sbb
fwait
les
fdivrp
rorb
or
jg
daa
mov
adc
xor
dec
and
mov
dec
adc
orl
call
or
test
ret
adc
test
das
push
int
in
rcl
cmp
popa
bnd
and
outsb
stos
inc
mov
orl
dec
out
sti
sbb
or
enter
aas
push
jne
dec
adc
fcomps
out
dec
stc
xor
dec
lock
sahf
cmpsb
imul
clc
loope
push
jno
faddl
je
add
pop
xchg
cli
xchg
fcmovne
fildll
jne
adc
jle
sbb
add
daa
cmp
je
cmpsb
inc
xor
stc
push
sbb
sub
aam
repz
mov
icebp
cmp
pop
out
shl
dec
adc
sbb
repz
mov
cltd
dec
pop
loop
mov
mov
cmp
inc
adc
jl
sbb
fldl
movsl
js
push
mov
pushf
jns
lret
pushf
test
scas
push
cwtl
in
jae
sub
out
test
push
add
ds
and
loop
inc
adc
ljmp
xchg
mov
stc
pop
pop
dec
push
nop
outsb
mov
shl
repnz
pop
dec
dec
ret
jle
aam
jbe
dec
icebp
mov
icebp
adc
fistl
shlb
mov
xchg
pop
push
lods
mov
lahf
loop
notb
mov
mov
sbb
pop
iret
xchg
inc
inc
cmc
mov
cmp
in
cmc
in
lret
cmp
sub
test
outsl
xchg
adc
push
mov
xchg
testl
push
adc
lods
cld
push
mov
fwait
hlt
cwtl
imul
cmp
lods
pop
inc
test
inc
push
sahf
js
aas
push
jp
jno
adc
movl
jmp
and
mov
clc
adc
mov
xor
push
inc
mov
or
mov
xchg
es
out
xchg
inc
sub
test
mov
mov
mov
shlb
cmpsb
or
dec
shll
int
cli
lods
js
sbb
and
mov
jp
cmp
xchg
and
sub
pop
out
nop
dec
ret
repz
in
insb
inc
fld
std
cltd
push
mov
popf
sbb
test
repnz
fs
xlat
adc
add
pop
jle
pop
ja
mov
dec
dec
dec
filds
lcall
and
divb
mov
mov
sbb
std
jo
popa
movsb
push
mov
push
xchg
ja
test
push
mov
shlb
pop
xor
jle
pop
xor
mov
mov
scas
push
jge
das
adc
push
jbe
or
push
push
mov
push
inc
adc
pop
and
pop
push
inc
and
mov
stc
xchg
mov
xchg
mov
push
into
push
popf
jmp
add
loop
adc
incl
in
dec
xchg
inc
insb
mov
mov
out
xorb
xchg
mov
or
mov
cmp
clc
adc
inc
pop
xchg
adc
cmp
inc
ja
movsl
ds
or
rcrl
mov
dec
cmpsb
aas
daa
sbb
cltd
icebp
icebp
pop
cltd
pop
daa
loopne
pop
and
fisubl
in
mov
xor
stos
popa
cs
scas
aam
and
push
stos
fadd
dec
into
xor
push
pop
mov
repz
add
push
movsl
mov
test
mov
xor
mov
push
rclb
mov
pop
scas
call
or
jmp
adc
mov
addb
or
mov
outsb
cli
push
fidivs
sbb
sbb
pushf
or
out
cmp
jno
pop
popa
ds
fildl
inc
rcrb
cmp
and
scas
inc
xor
imul
out
push
cli
push
and
jbe
jno
sbb
xchg
sub
je
clc
sub
jecxz
rorb
aas
dec
mov
add
adc
movsl
ja
cmp
cmpsl
dec
or
out
add
mov
mov
sbb
add
scas
jne
jmp
mov
adc
bound
adc
into
mov
out
mov
xor
test
mov
fsubr
push
add
test
jbe
cwtl
mov
movsb
push
in
aad
mov
sub
pop
je
shlb
sbb
xchg
les
call
dec
dec
xchg
xlat
aas
mov
into
into
jle
rcl
mov
pop
cmc
xlat
add
jecxz
push
lods
mov
std
insl
std
or
mov
shlb
ljmp
sbb
mov
xor
jecxz
movsl
imul
jns
inc
ds
and
lea
add
sahf
lods
in
imul
push
jno
arpl
pop
jecxz
xchg
das
test
sub
mov
hlt
inc
fsubp
adc
repz
sbb
scas
inc
push
add
sub
lahf
sbb
in
mov
inc
cld
jle
lret
pop
xchg
in
mov
ret
inc
add
dec
xchg
and
xchg
mov
adc
orl
lcall
add
lea
cmpsb
or
xor
fidivl
aad
and
popa
int3
adcl
ret
mov
mov
sbb
or
ja
sti
cwtl
push
faddp
ljmp
out
outsb
push
jne
mov
ret
or
dec
push
outsl
add
dec
movsl
imul
adc
out
mov
cmp
adc
xchg
mov
stos
xchg
sbb
gs
jne
cmp
addb
xchg
sbbl
imul
push
xor
pop
out
cltd
xchg
testl
cmpsb
sbb
mov
movsb
cwtl
in
mov
push
mov
add
test
sbb
inc
mov
insl
add
xor
or
adc
lea
movsl
lahf
cld
stc
popf
xor
aam
pop
push
ljmp
cmp
popa
icebp
mov
adc
popf
sbb
and
into
adc
xchg
test
data16
mov
test
ret
pop
outsb
mov
pop
loope
jmp
fucomi
sub
outsb
scas
sbb
push
cmp
jno
pop
pushl
ret
fdivs
shl
mov
stc
testl
adc
mov
xchg
cmp
insl
inc
addr16
mov
cmp
out
dec
push
cmp
xchg
pop
loop
mov
and
jno
or
in
fstpl
mov
inc
adc
xchg
cli
nop
xor
or
dec
mov
xorb
or
sbb
daa
adc
out
data16
aaa
add
icebp
and
and
outsb
and
xchg
add
add
out
shl
add
or
outsb
push
pop
scas
or
cmp
filds
cmp
adc
mov
jmp
dec
add
lds
mov
stos
mov
mov
aad
into
xor
cwtl
gs
bound
jnp
inc
adc
sub
idivl
adc
inc
lret
adc
adc
adc
push
lods
in
cld
lods
jns
dec
mov
lahf
sbb
dec
mov
repz
aaa
fs
test
cmp
sub
int3
mov
sub
in
jp
outsl
ret
or
imul
jge
adc
cmp
rol
adc
or
cmp
push
pop
data16
dec
in
push
aam
and
jg
shl
mov
aaa
lods
inc
imul
mov
or
adc
push
pop
fbld
dec
data16
stos
and
sub
arpl
ret
add
mov
aaa
pusha
cmp
mull
adc
dec
mov
imulb
idivl
lcall
adc
xchg
shll
jl
jns
or
and
jge
inc
fsubr
inc
pushw
repnz
shrb
adc
and
push
in
lods
pop
sahf
and
lahf
sbbb
aam
bnd
lods
xchg
outsb
or
xchg
mov
fs
call
jo
in
pushf
xchg
cmp
dec
inc
fimull
ret
ss
add
fdivl
adc
testb
or
adc
dec
sub
rcl
sub
fistpll
dec
sbb
je
mov
jmp
int3
sbb
xchg
or
cmp
popa
clc
mov
daa
stc
mov
xor
push
mov
das
adc
loop
or
jns
fstps
stos
mov
loopne
sti
ljmp
fbstp
inc
xor
push
pop
mov
jb
int
je
jae
jl
jp
imul
imul
arpl
push
jp
add
negl
xchg
movsb
cmp
testb
push
cltd
out
add
jno
imul
xor
cli
cmp
notl
imul
add
testl
sub
mov
xor
int
xchg
dec
cwtl
addr16
rol
adc
pop
dec
pop
cmp
sbb
or
sbb
mov
and
xor
nop
mov
push
int3
sub
stc
add
lea
or
call
jg
inc
enter
sbb
fld
jno
pop
add
test
or
ss
push
inc
loop
cmp
jl
mov
xchg
cltd
loopne
inc
shrb
bndldx
jae
jns
fwait
cmc
adc
add
roll
cmp
lods
gs
int3
sbb
mov
icebp
mov
rcll
lcall
out
clc
mov
pop
nop
inc
nop
mov
or
mov
outsl
push
aam
lret
outsl
aaa
mov
push
clc
sbb
sbb
sbb
call
ficoml
mov
fsubl
pause
ror
mulb
pushf
sbb
dec
nop
sbb
cld
scas
mov
loope
jns
aas
mov
pop
addr16
into
and
shll
ja
mov
sarl
mov
inc
jecxz
je
lret
jo
mov
int
pusha
enter
push
in
cmpsb
ror
lcall
mov
xor
cwtl
outsl
rolb
stc
mov
in
pop
xchg
data16
loope
jns
cmp
lock
loopne
fdiv
gs
xor
mov
dec
dec
jp
mov
arpl
rorl
mov
in
and
outsl
daa
sub
sahf
mov
insl
pusha
xor
fistps
cmpsl
sbb
stc
xchg
aaa
adc
sbb
popf
addb
xor
add
mov
lret
out
cmp
ds
jg
test
jle
xchg
push
adc
sbb
je
sbb
push
ljmp
imul
mov
aam
aad
cli
out
sub
xor
lret
repz
mov
jb
jo
in
insl
outsb
inc
push
sub
repnz
push
repz
xlat
loop
pop
into
cli
add
jb
lds
idivl
lods
pop
movsb
test
xchg
sub
movl
mov
iret
xchg
mov
cltd
sub
dec
jo
int3
jmp
xchg
mov
cli
xchg
lret
cld
mov
xor
in
popa
call
mov
push
addl
or
arpl
loop
push
mov
jmp
into
repnz
fnclex
mov
movsb
jno
adc
sub
mov
adcl
mov
inc
sbb
outsb
rorb
int
bound
out
sub
cwtl
nop
shrl
add
in
out
adc
cld
insb
shr
jmp
pop
jmp
xor
fwait
stos
xor
mov
cwtl
inc
cwtd
popf
sarl
mov
roll
xchg
int
xchg
cltd
ret
sbb
jmp
mov
pop
gs
jb
pop
int3
mov
and
in
aad
test
push
sahf
cmpsb
sbb
rcrb
cwtl
fdiv
leave
or
mov
mov
xor
repnz
stos
dec
push
inc
push
iret
inc
pop
push
lods
sub
dec
ror
arpl
mov
sbb
xchg
ret
mov
inc
sbb
jg
xor
mov
scas
imul
cwtl
rcl
and
mov
ret
mov
lret
mov
stos
pop
mov
mov
punpckhwd
mov
or
xchg
nop
out
sub
sbb
mov
sbb
cwtl
stos
cwtl
outsl
insl
rcll
mov
gs
cs
scas
inc
movsl
push
add
das
inc
mov
jle
inc
imul
fldl2t
outsb
inc
push
mov
pop
lret
push
mov
pop
cltd
push
cltd
xor
push
adc
inc
jb
pop
cmp
mov
scas
jb
push
adc
or
cmp
fwait
jb
or
mov
stc
adc
and
pop
outsb
or
mov
imul
out
enter
dec
sti
push
xchg
fdivl
ror
inc
lock
in
or
lret
push
adc
lds
push
aas
push
sub
mov
inc
fdivr
test
pusha
pushl
rolb
cwtl
fwait
jmp
es
mov
lds
sbb
adc
pop
pop
jecxz
and
xlat
test
stos
or
push
jge
std
pop
shlb
mov
inc
cmc
inc
cld
gs
jp
test
dec
mov
jg
aas
rcll
push
icebp
ds
dec
push
push
out
cli
mov
inc
out
hlt
cmp
lret
xor
notb
pusha
fldt
push
xor
fs
and
or
fcoml
push
mov
fdivrl
add
push
fadd
bound
ljmp
sbb
jns
sub
push
mov
outsl
xchg
add
mov
and
and
out
stos
fisubl
divb
sub
pusha
jnp
adc
ret
insb
jl
push
push
lods
jmp
rcr
xor
mov
pop
xor
sbb
repnz
shll
sbb
sbb
fsubs
sub
push
shl
orb
lcall
repz
test
imul
inc
push
inc
xchg
push
rcll
mov
push
dec
and
dec
and
and
mov
mov
xchg
mov
xor
mov
xor
mov
movsb
ss
xor
cmp
lock
rorl
sarb
push
add
mov
mov
sub
or
xor
aad
or
addr16
aad
mov
mov
sbb
inc
aam
push
shlb
and
cmp
cli
iret
in
leave
loopne
mov
inc
cmp
push
stc
lods
pop
inc
cmp
jne
mov
loopne
jmp
push
mov
dec
jl
test
repnz
movsl
xor
xor
fs
sbb
jp
mov
xchg
inc
cltd
push
xchg
in
push
in
stos
popf
mov
cmc
popa
push
movsl
xchg
push
mov
or
jp
divb
push
push
insb
outsl
pop
mov
test
sbb
das
rclb
sub
xor
outsb
aas
sub
popa
cmpsl
add
push
or
int
iret
loope
addr16
pop
or
adc
sub
call
and
jp
inc
es
fwait
daa
lcall
cmp
lahf
pushl
xchg
jge
dec
pop
add
inc
xchg
in
gs
les
fistps
bound
pop
push
mov
imul
xchg
scas
pop
cmpsb
or
cmp
jle
cmp
pop
ret
in
sub
jg,pn
dec
decb
or
movsb
sbbl
decl
leave
mov
lret
and
lret
cmp
lock
das
xchg
shll
hlt
js
js
cs
add
mov
leave
clc
inc
jp
mov
movsb
gs
sbb
call
push
stos
ficoms
test
or
add
mov
jmp
mov
push
jb
nop
daa
addb
ljmp
jno
insb
cld
std
pop
cs
lahf
push
mov
shrb
test
mov
out
into
into
aad
and
cmpsl
mov
mov
mov
or
pop
cld
or
cmp
fs
pop
pop
cs
add
cmp
mov
adc
aam
pop
inc
sbb
sbb
insl
add
pop
cs
sbb
jge
cltd
test
sbb
xor
ss
shlb
mov
ja
pop
cs
and
outsb
aad
sbb
ss
gs
pusha
imull
inc
jle
js
fstps
fldcw
je
mov
cmp
xchg
or
insb
jl
lods
inc
jle
insl
lret
jl
sub
mov
les
mov
incb
mov
mov
xor
mov
lock
mov
mov
lcall
in
jo
aad
lret
repz
or
sarl
test
jge
jl
mov
adc
mov
aad
mov
mov
sub
push
pop
adc
or
sub
push
and
cld
xor
sub
out
push
pop
xor
pop
repz
stc
popa
cli
repnz
cli
out
xchg
das
jo
stos
insl
add
out
fstps
fiadds
daa
pop
mov
imul
fdivrs
stc
jmp
adc
enter
cmp
imul
push
xor
mov
popa
add
aad
dec
or
cltd
push
in
lcall
sarb
dec
mov
hlt
idivb
lods
icebp
cmp
lods
aad
mov
push
dec
scas
dec
push
cmp
sub
orb
mov
xchg
imul
divb
lods
int3
repnz
or
cmp
mov
dec
in
shll
sbb
pop
dec
pop
adc
in
mov
xor
mov
mov
pusha
test
cmp
scas
sub
sub
iret
inc
and
sub
aam
icebp
or
dec
mov
lcall
fcom
sub
rclb
inc
je
mov
dec
jmp
rclb
imul
test
shrb
sbb
movsb
pop
call
sahf
jecxz
shrl
and
dec
add
stc
push
jle
sub
xchg
fs
push
cmp
dec
pop
into
xor
cmp
adc
mov
ret
push
add
scas
mov
jmp
push
xor
sbb
sti
cltd
cmp
imul
shll
pop
shll
lods
mov
imul
adc
lods
adc
inc
lods
pminub
subl
push
insl
xor
sbb
sbb
mov
movsl
out
pop
aad
xor
sub
cmpsl
adc
cmpsb
inc
xchg
das
addr16
fs
cmpsl
pushf
stc
adc
or
mov
in
adc
subb
jge
mov
bound
or
sub
add
dec
sbb
pop
mov
test
cmpb
adc
add
or
loopne
xlat
in
int3
fsubrl
jns
adc
sub
or
sub
test
pushf
cmp
jmp
pop
mov
or
fwait
pop
and
xor
xchg
xchg
repz
stc
sahf
clc
aaa
and
mov
inc
movsl
inc
xchg
and
xor
xchg
mov
mov
xorb
into
mov
cmpsb
pop
mov
cs
ljmp
xchg
shr
aam
pusha
inc
mov
mov
or
cli
or
test
add
pop
pop
int
fxch
cmp
bound
js
or
pop
popa
out
dec
in
outsb
sub
ds
scas
mov
loope
sbbl
repz
cs
dec
cmp
jae
jnp
push
mov
push
sub
aam
lods
and
jle
ret
mov
mov
lds
mov
jbe
frstor
aam
pushf
nop
movsb
push
call
adc
addr16
mov
adc
adc
std
sub
sti
cmp
xlat
outsl
shrb
jno
push
mov
jg
pushf
xchg
pop
jl
jge
sbb
mov
push
sub
mov
out
cmpsl
das
int
or
cmp
lods
dec
mov
or
xor
mov
addb
aam
add
je
mov
adc
jbe
bound
jmp
add
outsl
mov
pop
outsb
jmp
out
push
push
outsb
mov
mov
fxch
mov
push
inc
push
sbb
pop
repz
lret
test
mov
adc
andl
push
pushf
das
push
push
out
test
je
jnp
clc
cmp
call
or
iret
frstpm(287
pop
mov
aad
outsb
mov
mov
adc
mov
and
stos
hlt
push
es
xor
out
rcrb
sahf
mov
jge
mov
aam
aam
mov
pop
cmp
mov
dec
in
stc
ds
aaa
notb
pop
dec
ljmp
sub
mov
mov
repz
subb
mov
pop
adc
mov
jge
gs
pop
aad
add
dec
dec
inc
pop
shrl
xchg
jecxz
mov
aam
xor
rorl
sub
loop
xor
sti
in
mov
std
int
and
and
mov
ds
mov
xchg
lock
jp,pn
cmp
xchg
lret
inc
sti
cmc
dec
pop
das
fistl
inc
stos
fnstenv
pop
fs
dec
xor
stos
xchg
jno
add
inc
mov
jno
xchg
in
fstps
jb
xchg
inc
xchg
leave
pop
add
or
dec
jae
inc
cld
mov
jb
cmp
add
inc
or
ss
and
iret
and
into
xor
jmp
out
scas
shl
xor
cmp
cmc
lods
out
test
push
add
aad
lcall
lahf
fistpl
shlb
dec
mov
mov
pop
inc
fld
int3
push
repz
orl
aam
adc
jae
push
es
push
dec
mov
scas
in
popf
addb
xor
xchg
sbb
add
and
pop
sbb
je
sbb
or
add
push
sbb
pusha
mov
outsl
jmp
pop
cmp
in
xchg
pop
cmpsl
sub
rorl
jae
mov
mov
adc
es
xor
inc
sahf
cmpsb
jno
dec
mov
sub
scas
mov
nop
pop
mov
int3
ret
dec
pop
cmc
lods
adc
ret
mov
jmp
adc
cmp
lahf
xor
and
or
mov
rorl
push
jno
jnp
iret
and
dec
dec
rcrl
lods
imul
and
repz
pop
mul
andb
test
xor
mov
imul
mov
pop
inc
fstl
jb
xchg
movsb
insb
or
jno
pop
ss
lret
dec
mov
mov
dec
insl
jp
push
xor
aaa
cmp
aas
or
and
xchg
ret
jle
cmp
push
jo
stc
nop
sti
ljmp
lcall
repnz
or
out
xor
inc
cwtl
out
mov
mov
inc
cmp
jmp
mov
xchg
jl
les
jne
jle
lcall
add
pushf
test
mov
cmp
call
add
push
fistpll
pop
popa
fisubrs
jbe
mov
and
or
pop
insb
pop
lahf
cmpsb
sub
fwait
xchg
dec
or
scas
mov
mov
cli
jg
xor
add
dec
dec
xor
push
out
adc
cmp
pushf
pop
mov
add
test
gs
mov
push
and
icebp
and
push
fwait
or
inc
mov
jbe
jns
push
iret
cmpsb
adc
stos
and
mov
daa
data16
aad
inc
test
lret
mov
or
pop
paddd
nop
mov
test
div
leave
mov
dec
dec
hlt
hlt
mov
dec
jmp
mov
ja
cs
push
int3
push
jg
pop
es
jmp
pmuludq
ret
xor
mov
cld
add
or
lcall
push
add
pop
insl
inc
pop
outsl
orb
std
push
xor
std
jno
add
js
fwait
arpl
push
clc
inc
popa
and
movsl
dec
or
and
xchg
in
testb
rol
std
dec
inc
push
xchg
ss
repnz
pop
or
incl
js
or
in
in
fmuls
adc
and
insl
fiaddl
or
jo
std
popf
xchg
ds
mov
xor
jno
xlat
jmp
inc
push
push
jg
lcall
pop
scas
shrb
mov
fistps
call
push
xor
jns
rcrb
in
movsl
push
test
push
add
sbb
test
sub
or
add
cli
mov
sub
les
sqrtps
mov
lea
mov
pop
loopne
and
jno
mov
popf
mov
aas
in
jb
arpl
mov
ret
aaa
push
cld
sub
xadd
adc
mov
and
sbb
xor
insl
fisttps
icebp
mov
push
out
or
test
jmp
pusha
sbb
pop
push
add
pop
insb
loop,pt
add
scas
insb
push
jb
xchg
mov
insl
ss
pushl
pop
jno
jnp
test
adc
nop
cmpsb
xchg
outsl
scas
sbb
dec
emms
push
jp
mov
add
xchg
and
insb
sbb
or
pop
sbb
lds
sub
push
and
xor
xor
fsubr
jnp
das
ds
andb
lds
xchg
lods
ds
dec
in
pop
lahf
daa
orl
aam
sbbb
inc
mov
negb
inc
inc
into
adc
arpl
int3
out
cmp
jle
xchg
push
pop
pop
movswl
mov
ffreep
mov
data16
subl
mov
pop
xor
out
inc
lret
or
mov
repnz
inc
aas
jp
mov
adcb
push
ret
rcll
shlb
pop
cltd
inc
pop
cmp
or
dec
pushl
push
jbe
lds
repz
mov
nop
shrl
sbb
pop
repz
sti
test
mov
clc
and
xor
aas
mov
jge
sub
ror
jl
jecxz
cmp
cmc
xor
and
jl
dec
jg
ret
nop
addr16
iret
dec
jecxz
add
mov
movups
dec
movsb
out
jnp
xor
popf
dec
call
scas
fs
or
push
jecxz
test
push
or
test
xor
add
sbb
pop
or
movsb
cmp
shlb
test
pusha
mov
ret
cmpsb
out
or
mov
push
movsl
xchg
jmp
xchg
inc
in
add
arpl
into
sahf
push
in
mov
add
ret
inc
popf
mov
cmp
jo
dec
push
enter
hlt
iret
fsubr
fiaddl
mov
enter
pop
mov
xchg
and
xchg
jne
les
xor
loopne
pop
push
scas
mov
movsl
jns
cltd
clc
dec
pop
or
insb
andl
xchg
and
popa
cmp
popa
add
in
out
ret
addr16
bound
mov
fwait
mov
fstl
ljmp
lods
mov
aam
fldcw
xchg
sub
mov
ja
push
call
dec
in
add
in
or
out
sti
pop
or
js
jg
sub
fiaddl
scas
gs
xchg
arpl
inc
cmp
test
ret
mov
lods
jg
orb
sbb
out
arpl
lret
mov
aas
scas
sbb
or
sbb
mov
xchg
xchg
pop
mov
pop
jg
cmpsb
cmpsl
addb
pushf
les
dec
push
mov
add
and
xchg
loopne
test
add
sub
out
push
fistl
jp
sub
loopne
xchg
cmp
ss
cwtl
mov
int
cwtl
lret
jle
aad
pusha
rorl
sbb
sbb
aas
push
jle
outsl
daa
addr16
adcb
shlb
mov
add
sub
or
imul
inc
mov
imul
mov
outsl
rcll
call
test
fcompl
xchg
incl
push
jle
xor
add
mov
int3
jmp
shrb
js
lahf
jb
lock
xchg
push
arpl
mov
or
popf
mov
sahf
andl
jns
test
mov
das
mov
xchg
daa
aas
mov
cmp
xor
add
lea
inc
hlt
mov
fiaddl
int
mov
and
andb
adc
outsb
jge
repnz
fwait
mov
andl
sti
bound
test
mov
push
and
int
js
jl
push
xor
mov
cmp
and
js
sbb
push
stc
pop
push
in
cmpsb
and
mov
jmp
mov
xor
push
subl
aas
cmp
addr16
sub
mov
push
cmc
sub
roll
pop
push
push
pop
mov
sti
lock
inc
cmpsb
addr16
or
jmp
stos
sbb
aam
movsbl
outsb
out
cmpsl
loope
add
inc
push
mov
mov
xchg
sub
fwait
rcl
and
rcrl
sub
mov
pusha
lock
jb
das
adc
jg
shlb
cmp
push
and
pop
push
push
dec
mov
ds
lods
mov
cmp
and
jp
hlt
in
cltd
push
cmp
aad
sub
or
adcb
xchg
popa
or
xor
cmp
or
in
jnp
inc
dec
sbb
shrl
loopne
das
test
xor
pop
bound
cmpsb
in
lcall
mov
cmp
and
and
inc
xchg
dec
fistpll
lock
cwtl
adc
dec
mov
jns
test
mulb
test
push
insl
pushf
je
and
ret
insb
or
call
mov
sahf
jnp
mov
nop
leave
bound
ds
mov
lret
pop
push
ss
cmovge
notl
mov
dec
xchg
ss
test
sbb
mov
mov
ljmp
aas
xor
mov
das
xor
sub
adc
and
cmp
loope
jp
aas
sbb
add
and
lcall
adc
mov
mov
aaa
xchg
mov
inc
je
sbb
test
add
outsl
in
jo
push
xchg
dec
dec
mov
add
pop
fisttpl
inc
out
scas
repz
dec
stc
fwait
loopne
aas
jae
lcall
mov
enter
std
and
rolb
jecxz
loope
rcl
inc
fs
cs
test
lret
rdpmc
notb
ja
mov
dec
lea
sub
and
mov
lret
das
fdivl
call
jbe
sbb
imul
add
fstpt
rcrb
cmpsl
pop
cmp
mov
dec
mov
push
loopne
or
dec
scas
and
aas
or
rcrb
adc
jns
sbb
scas
dec
in
test
adc
frstor
xor
gs
test
test
fstpt
inc
popa
jne
sti
shrl
stc
sub
aaa
mov
jne
in
sbb
hlt
push
push
dec
test
jecxz
mov
lea
fisttpl
sub
adc
or
es
movsl
scas
repz
call
inc
xor
mov
notb
fdivrl
or
cmpsl
hlt
jg
daa
idivl
stos
pushf
arpl
or
inc
inc
je
push
je
sbb
loop
adc
sub
add
out
test
ljmp
cli
mov
jp
pop
mov
and
xorb
xor
ficoml
into
mov
cmp
and
xchg
push
cwtl
stos
shll
push
mov
pop
call
ror
repz
and
inc
mov
pop
jb
mov
ret
mov
rorl
xor
sbb
xlat
lahf
negl
cs
push
adcb
je
pop
addr16
popf
pop
ficomps
popf
bnd
fldcw
sbb
sbb
repnz
into
pop
sahf
mov
pushf
pusha
aas
ss
mov
or
mov
mov
sub
or
in
mov
movsb
insb
mov
jl
fwait
inc
ficoml
mov
clc
bound
jg
mov
das
xchg
dec
pop
sahf
xor
sbb
mov
pop
mov
add
cmp
cs
out
push
shl
jle
jbe
movsl
mov
insb
inc
sti
aam
clts
fstp
cmp
dec
jecxz
dec
cltd
pusha
dec
repnz
xchg
in
je
in
mov
mov
pop
or
ds
sahf
sub
mov
cwtl
xchg
mov
and
fisubs
cmp
roll
ret
xchg
sbb
pop
sbb
inc
adc
xchg
lock
xchg
cltd
lahf
mov
mov
popa
mov
cmc
xor
xor
mov
mov
rcrb
mov
fbstp
mov
mov
sub
dec
jecxz
cmp
mov
mov
loope
sub
rcll
jmp
mov
jae
push
ss
xor
cmp
or
cmp
insb
sbb
lds
pushf
mov
ret
pop
xor
mov
mov
inc
lea
lret
lret
jae
int
sbb
mov
popa
inc
loope
cmc
shrl
push
pushf
pop
cli
jge
aaa
lea
xor
aad
push
mov
out
shll
sub
pop
hlt
fsubrp
mov
xchg
je
pop
mov
mov
fsubrp
stc
std
pop
cmp
xor
lcall
jae
jo
ds
outsl
xlat
cmp
cli
popf
jns
adc
pop
lcall
cli
jp
mov
loop
jecxz
adc
push
or
in
mov
adc
xlat
mov
lea
test
inc
sbb
std
mov
test
aad
inc
inc
dec
idiv
xchg
cmp
pop
test
jnp
and
nop
xchg
dec
out
jle
xchg
cmpsb
cmp
clc
sub
push
popa
lds
mov
jb
sub
push
sub
leave
sub
push
sub
fiadds
movsl
mov
sbb
xor
mov
push
nop
imul
jae
sahf
mov
rcrb
jno
sub
xchg
pop
push
fstpt
aaa
mov
popf
gs
int
js
mov
lea
roll
fsubs
mov
dec
jmp
jecxz
gs
sbb
xor
inc
cmc
and
call
test
inc
inc
fdivl
mov
adc
std
xor
add
adc
dec
mov
inc
fldt
ret
lea
rclb
sub
push
mov
xor
pop
mov
lock
test
mov
in
jbe
ret
pop
pop
xchg
pushf
push
arpl
mov
xchg
push
psrad
inc
jmp
sub
fwait
in
jb
repnz
jmp
nop
push
jle
inc
cmc
into
bound
mov
dec
lret
sarb
loope
dec
out
out
call
add
decl
and
pop
movsb
les
cmc
mov
or
lahf
sbb
cmp
icebp
dec
push
cmp
mov
test
or
xchg
mov
push
mov
les
jmp
pop
xor
outsb
dec
dec
push
mov
hlt
mov
mov
fisubl
lock
xor
out
shrl
andl
mov
test
arpl
pop
testl
lret
das
ret
mov
push
push
xor
int
push
inc
xchg
cmp
add
cmpsl
inc
jb
inc
cwtl
ss
out
mov
push
jl
mov
enter
inc
jmp
std
push
push
inc
xchg
xchg
mov
sub
jne
mov
imul
addr16
scas
cmpsl
nop
and
shl
or
mov
pop
faddl
fildll
adc
and
shlb
aad
inc
adc
and
push
out
popa
xor
mov
arpl
cs
sti
push
or
push
inc
push
xchg
stos
mov
add
mov
jp
cmp
dec
dec
fsub
jae
lcall
stc
gs
xchg
or
shrb
or
jae
or
or
ds
mov
or
add
es
aam
loope
dec
mov
out
sbb
mov
xlat
loop
jp
and
dec
movsb
repnz
ret
sub
subl
mov
inc
mov
int
xchg
inc
xor
cmpl
cmpsb
push
mov
cli
xchg
adc
adc
das
mov
loope
cmp
cmpb
out
lods
shll
sub
cwtl
pop
xor
nop
jle
adc
pop
into
push
aad
push
sarl
jecxz
add
scas
add
mov
repz
mov
mov
stos
sub
jbe
cmp
or
imul
int3
and
cmp
cld
mov
fsubrs
or
push
mov
idivb
insb
or
ret
fsts
pop
pop
mov
sub
sub
popf
push
call
or
dec
lds
in
aas
and
pop
xchg
sbb
mov
shll
or
cmp
fisubl
sbb
sbb
add
adc
out
in
inc
pop
mov
or
adc
mov
push
xchg
pop
xor
cmpsb
add
adc
or
cmp
pop
mov
repnz
push
adc
stos
and
out
or
aaa
gs
gs
push
loopne
mov
repnz
out
mov
dec
inc
in
mov
stos
fdiv
out
int3
in
or
mov
sbb
aaa
adc
jo
enter
dec
fstl
cmp
testb
mov
sbb
dec
xchg
aaa
movsb
popfw
aad
fsts
inc
mov
xchg
xor
pop
in
std
sub
mov
adc
test
pop
in
jmp
pop
in
test
pop
or
popa
out
lea
xchg
or
mov
aam
inc
data16
lods
mov
jle
mov
imul
and
cmp
scas
imul
xchg
std
mov
pop
arpl
jp
xchg
fsubs
and
iret
lods
cld
outsl
daa
xor
push
scas
push
lahf
mov
arpl
cmp
inc
mov
jmp
shll
adc
mov
add
pushf
repz
pusha
pop
cmc
jo
sbbl
jl
testl
mov
lods
sub
imul
imul
je
std
shl
mov
mov
adc
mov
push
ljmp
mov
inc
cmp
xor
insb
cmp
jg
es
call
repnz
fidivs
sbb
push
mov
cwtl
stc
ds
das
or
test
lahf
outsl
outsb
and
mov
push
out
sti
xchg
and
and
inc
les
mov
inc
mov
loopne
lcall
scas
mov
and
pop
sbb
dec
call
cmp
or
lret
mov
sbb
imul
xorl
add
out
test
cmp
cld
mov
lods
and
daa
ljmp
int3
dec
mov
jbe
les
test
inc
mov
sahf
jno
sub
dec
dec
popf
jg
lock
test
rclb
lret
in
mov
and
pop
xchg
ret
aas
dec
and
xor
and
ljmp
pushf
cli
in
ret
cmp
xchg
adc
lcall
in
andl
enter
sbb
repz
movsl
icebp
xchg
lcall
std
jno
cmp
inc
mov
or
adc
scas
lds
loop
push
ret
xor
pop
movsl
or
fadd
push
int3
lret
cltd
mov
jno
insl
mov
out
ficomps
inc
mov
movsl
int
inc
loop
or
push
loopne
jno
int3
jle
sbb
dec
mov
imul
add
nop
xor
pop
scas
pop
cli
dec
jecxz
sbb
or
and
js
inc
xchg
adc
fistpll
xor
and
pop
adc
mov
sub
adc
push
inc
mov
arpl
shlb
aam
inc
sahf
pop
or
fwait
popa
pop
testb
popa
shlb
gs
xchg
shl
adc
lret
les
jmp
gs
jo
rcrl
sub
gs
mov
mov
pusha
mov
sti
cli
inc
pop
mov
xor
in
lahf
sub
push
push
call
pop
repnz
lods
fsubl
cmp
xchg
lret
dec
adc
cmp
fdivrs
sahf
ret
pop
mov
imul
out
push
stos
xchg
ja
sahf
fs
mov
or
or
mov
xchg
in
lods
and
rclb
and
cmpsl
jl
sbb
ljmp
dec
roll
push
inc
or
imul
outsl
es
push
mov
push
and
sbb
pop
xabort
insl
cmp
pop
push
in
nop
sahf
lods
cmp
inc
and
stos
out
and
mov
mov
and
repz
jae
jbe
ja
aad
or
jnp
jg
into
movsb
adcl
loopne
loopne
pop
enter
push
ds
mov
mov
jp
cmp
push
jp
xchg
mov
test
xor
ja
sbb
cmp
and
xchg
push
jecxz
out
push
rcrl
sub
fld
cmc
insl
and
push
or
xchg
ret
clc
mov
and
or
add
adc
jbe
lock
or
mov
imul
sbb
fisubl
bound
fmulp
adc
bound
movsl
cmp
ret
sub
sbb
mov
jmp
add
clc
lds
fistps
cld
cmp
jb
adc
mov
outsb
cs
ljmp
sbb
cs
xor
push
pop
adc
mov
jb
rcrb
aad
adc
mov
imul
pop
hlt
lea
mov
mov
add
xlat
outsb
aad
scas
in
div
int
aam
push
jbe
mov
mov
repz
adc
cmpsl
out
inc
xlat
sbb
dec
pop
add
mov
sbb
mov
jne
int3
push
lcall
mov
in
je
arpl
loop
mov
inc
into
fs
mov
xorl
notl
dec
cmpsb
imul
jl
or
sti
cmp
loope
movsb
mov
sbb
ds
push
fs
push
jbe
jns
jp
subb
stos
xor
push
out
jle
sub
push
jmp
pushf
mov
pop
and
xchg
and
movsl
inc
and
cmp
pop
cli
adc
cmpsb
test
dec
mov
adc
pop
aaa
mov
pop
add
xchg
cmp
xchg
test
cmp
orb
and
test
xchg
mov
dec
mov
pop
nop
sub
xorb
lcall
adc
aam
arpl
mov
push
fadds
out
out
push
test
lcall
mov
int3
imul
cwtl
lods
inc
push
bnd
push
xchg
add
loop
dec
push
xchg
sub
mov
xor
scas
mov
std
loopne
push
insl
testl
sub
or
dec
ds
jecxz
add
xorl
sti
popa
aas
push
mov
leave
pop
ljmp
mov
fmuls
pop
repz
mov
sahf
fsubrs
test
jmp
jg
clc
add
fists
aad
lret
jg
xor
int
push
rcrl
cmc
imull
arpl
and
or
cmp
out
out
nop
lea
mov
xor
push
push
mov
mov
mov
sahf
test
inc
out
mov
mov
xchg
inc
pop
xchg
sub
xor
call
roll
pop
fwait
jl
xchg
and
jb
pop
adcb
inc
call
gs
fs
out
pop
ja
xchg
clc
test
push
scas
xor
rorl
xchg
dec
pop
push
ret
fsubrp
or
mov
push
and
daa
pop
movsl
fisttpll
lods
jne
loope
imulb
push
jecxz
pop
push
aad
xchg
fs
or
test
rcrl
repnz
popa
jecxz
push
fdivl
adc
mov
sbb
mov
fdivl
fcoms
stos
imulb
pusha
mov
cli
mov
xor
push
ds
mov
hlt
mov
lods
dec
pop
push
sbb
mov
addb
stc
and
sub
orps
add
adcb
test
in
inc
fimull
mov
dec
adc
scas
xchg
xchg
sbb
mov
loop
add
jne
dec
cmp
in
test
push
dec
add
jmp
inc
push
ds
sub
add
mov
push
shll
sbb
sbb
jo
bound
cmpsb
mov
pop
imul
test
and
mov
cmc
cmp
cmp
jno
push
adc
inc
fwait
mov
lret
fbstp
or
or
pop
das
mov
addr16
jg
cli
pop
ja
xor
aam
cwtl
imul
jmp
cmpsl
jb
aam
enter
test
cmp
adc
addr16
sbb
daa
mov
shl
pop
clc
fmul
push
cltd
test
push
lea
inc
mov
in
add
leave
add
out
push
repnz
std
movsb
xor
test
and
in
inc
mov
addr16
push
sub
imul
movb
shld
lods
dec
dec
outsb
xor
xor
mov
sti
pop
iret
mov
sub
fs
sete
jg
xor
out
jo
imull
pop
jmp
pop
les
pop
cmc
jecxz
ss
and
movsb
mov
orl
and
adc
sahf
shrl
jmp
inc
imul
fmull
data16
xor
lcall
dec
incl
clc
sub
xchg
sbb
adcl
pop
repz
dec
adc
jno
push
mov
shrb
xchg
out
push
pop
test
dec
das
pop
push
pop
inc
pop
push
jbe
popf
inc
xchg
and
cmp
push
push
cmpsl
in
pop
cmpsb
shll
push
mov
movsb
addr16
pop
lahf
negl
mov
push
jge
xor
popf
or
lret
pop
pop
adc
xlat
xor
xchg
adc
xchg
dec
decl
xchg
jge
sbb
movsl
data16
movsl
jnp
ljmp
mov
ficoms
into
repz
dec
cli
xchg
insb
xor
scas
push
mov
fs
inc
stos
jo
and
test
push
xchg
aaa
clc
dec
incl
add
mov
jle
or
xchg
sbb
loop
iret
repz
das
imul
rorl
push
xorb
sub
leave
loopne
pop
push
imul
adc
pop
or
mov
fsubrl
mov
or
pop
dec
mov
adc
pop
fisubrs
bnd
push
sbb
dec
push
mov
xor
pushf
inc
push
xor
jb
test
pop
fidivrl
push
mov
inc
push
mov
out
mov
xchg
mov
add
xchg
sub
or
push
jo
test
out
test
pushf
xchg
mov
out
dec
xchg
xchg
pop
ss
jbe
adc
cmp
aad
lds
stc
popf
ret
jp
pop
movsl
jge
jno
sub
dec
add
dec
out
jp
add
mov
icebp
xchg
xor
repnz
aad
dec
data16
add
mov
arpl
popa
in
sbb
int3
das
gs
xor
idiv
rcr
sbb
cmp
int
clc
sbb
or
jbe
pop
ja
xchg
int3
adc
mov
jno
and
sub
push
popa
add
mov
sub
ret
lcall
pop
stc
adc
enter
push
pop
hlt
dec
sbb
fwait
push
cmpsl
fsubrp
xchg
push
jbe
lds
test
push
mov
ret
incl
jno
pop
movsb
sub
in
and
cmp
push
notl
lret
hlt
pop
cmp
in
jl
sahf
dec
sbb
xor
push
adc
fsubl
lods
inc
pop
aad
mov
aaa
xchg
sub
pop
mov
lock
fisubs
xchg
adc
xchg
pop
mov
sbb
out
or
lea
in
lods
aas
jns
cmp
popa
xor
inc
mov
or
mov
mov
push
call
mov
pusha
gs
inc
cmp
iret
lret
mov
mov
ret
stc
mov
adc
push
or
lahf
ds
mov
push
lahf
inc
mov
lea
xchg
movsb
sub
lods
jmp
jge
xlat
or
mov
cmp
aas
pop
cmp
lods
hlt
cld
insb
add
xchg
sub
sub
mov
popf
add
scas
pop
in
mov
in
push
and
aas
loop
int
pop
push
stc
cltd
ds
cmp
jae
pusha
cmp
adc
lea
inc
pop
out
jle
dec
imull
in
call
sbb
pop
mov
inc
pop
stos
inc
popa
int3
movsl
sub
inc
insl
push
inc
push
or
into
cmp
cmp
pop
inc
add
fs
jmp
cltd
ds
scas
inc
push
or
fdivs
jns
jns
sti
sub
xchg
stos
push
orb
inc
xlat
cmp
ss
out
mov
in
std
loop
das
pushf
pop
pop
lcall
sub
inc
pop
jae
lcall
testl
xor
xor
pop
scas
cmp
into
mov
hlt
xor
out
adc
mov
stos
loop
xchg
push
andl
jae
lock
scas
mov
stc
adc
sbb
pop
jns
mov
outsb
lret
mulb
inc
sbb
or
cmp
cld
lods
repz
push
aas
outsl
daa
lret
mov
fwait
subb
shlb
xor
fsub
popf
cmp
jne
sbb
jecxz
enter
lods
call
shr
lods
mov
nop
jge
repz
adc
cmp
pop
in
test
add
mov
jge
xchg
jno
and
fdivs
xor
push
loop
ret
rcl
cmc
mov
push
cmpsb
cmp
inc
rol
pop
int
stc
push
dec
popa
clc
ja
and
aas
inc
xor
sti
mov
push
jae
mov
out
jp
adc
sbb
mov
sbbl
insb
mov
inc
enter
jp
push
outsb
cs
xchg
stos
inc
popf
mov
sbb
inc
jl
or
jb
in
popf
shrl
popf
xor
sahf
lods
shl
or
jb
sub
lea
fsts
mov
movsb
outsb
out
xor
jl
fisubl
mov
cwtl
lock
jae
cmpsb
jno
cs
pushf
and
jmp
stos
sbb
sbb
mov
les
pop
adc
loop
out
bnd
cmp
mov
loopne
inc
and
push
or
cltd
xchg
pushf
call
es
mov
xor
int3
data16
shrl
sub
test
xor
je
insl
jg
leave
lahf
sub
insl
xchg
pop
add
mov
ret
ss
add
f2xm1
movsl
mov
sub
add
aad
dec
xor
jge
xlat
mov
dec
mov
cmp
inc
xchg
bound
xor
jb
xor
sbb
pop
mov
mov
lea
daa
bound
lret
push
aas
dec
bound
jbe
jo
int
rolb
lods
xchg
xlat
jp
sbb
cltd
dec
lock
push
add
in
xchg
sub
stc
xor
jno
mov
sub
test
clc
pop
je
jno
pop
jge
int
andb
mov
mov
sub
or
add
push
mov
push
in
imul
int
sub
lods
lods
test
cmc
sbb
xchg
sub
orb
js
rcr
repz
incl
movsb
pop
nop
cld
jle
and
cld
fidivl
mov
mov
clc
int
lea
pop
outsb
jb
pop
pop
imul
lock
or
sbb
mov
jb
orb
hlt
jmp
aad
cmp
push
out
lcall
stc
cwtl
and
or
jnp
xchg
cmpsb
jmp
xchg
push
mov
add
mov
push
jno
jp
cmp
jmp
insl
aad
mov
les
jae
daa
lock
in
call
lahf
jbe
movsl
dec
xchg
aam
out
mov
or
cltd
mull
xchg
imul
adc
dec
fldl2t
jg
clc
and
xor
jp
adc
or
hlt
mov
rcl
mov
test
adc
fldt
data16
sti
jg
and
jnp
sti
xlat
mov
aaa
ror
or
lret
push
hlt
adc
cmp
scas
sub
sub
outsb
cmpsb
fucomp
mov
into
xor
xor
arpl
cmp
movsl
push
ret
test
mov
into
das
xchg
mov
fistpl
jmp
pop
mov
push
mov
push
fdivrs
js
leave
pop
xchg
push
mov
inc
imul
xchg
mov
stos
push
xchg
inc
dec
pop
fmulp
in
fistpl
test
outsb
jge
or
clc
sub
jae
or
mov
push
mov
push
fdivrs
push
cwtl
data16
mov
inc
cwtl
daa
jne
in
and
jno
or
cmc
xchg
fildll
sbb
nop
mov
movsb
adc
les
or
js
gs
in
dec
scas
cmp
ss
cmpsb
push
or
cltd
jae
addr16
cld
and
outsl
mov
xor
outsb
push
mov
jge
fxch
lret
push
pop
cmp
add
push
push
pop
pop
test
adc
fdivs
sbb
movswl
sub
push
mov
push
xor
pop
cltd
xor
fdivl
call
sub
repz
das
arpl
sahf
push
repz
ret
and
jge
aam
cli
sub
fldt
leave
jl
jecxz
outsb
in
ss
inc
sub
push
push
fcomi
fisubrl
jne
daa
push
jmp
ss
adc
dec
imul
and
clc
sub
dec
xchg
inc
xlat
xor
dec
cs
mov
xchg
stc
and
push
adc
or
adc
inc
jnp
lret
test
decb
mov
cs
pop
fcmovbe
mov
lds
nop
push
or
cmp
xchg
decl
mov
mov
push
mov
push
scas
clc
sbb
jb
movsb
pop
mov
pop
std
mov
lahf
pop
dec
mov
lahf
mov
mov
pop
insb
decb
and
test
xchg
mov
daa
lcall
adc
outsl
xor
and
shrb
adc
lods
jmp
mov
xor
xor
push
mov
pop
dec
xor
cmp
jg
popa
mov
fld1
pop
bound
dec
pop
adc
sbb
sub
mov
xchg
dec
mov
repnz
jecxz
sahf
lods
push
call
jb
out
jl
rcll
inc
setnp
add
ss
dec
add
mov
out
lds
sbb
cmc
mov
inc
mov
mov
cmp
pop
ja
in
andl
lret
add
enter
and
adc
aad
cmpsb
push
out
mov
shrl
lret
push
bound
jb
int3
and
sub
mov
cmpsl
xchg
cmpsb
jle
test
cmpsl
loopne
mov
data16
les
stc
mov
icebp
pusha
loop
push
cmp
jge
inc
sbb
sahf
mov
leave
pop
in
push
xor
xor
push
ja
fnsave
rcl
ret
sti
xchg
xor
push
add
pop
xchg
and
mov
jge
push
test
test
push
aad
mov
int3
loopne
leave
adc
in
call
jae
jno
mov
cwtl
mov
inc
xor
loop
mov
fistpll
xor
int3
mov
lahf
and
push
xchg
imul
leave
xchg
inc
cmp
aas
adc
bound
enter
xor
cmp
mov
dec
aaa
hlt
mov
pop
or
dec
cltd
lret
loop
xchg
adc
sbb
iret
dec
xchg
mov
lock
adc
bswap
adc
dec
ret
jno
jmp
bswap
and
mov
iret
push
jmp
jmp
cmp
push
stos
xorl
pop
mov
aas
push
cmpsl
test
sti
mov
ror
jae
pushf
xor
xchg
pushf
imulb
lret
pop
rcr
in
pop
cmpsl
xchg
fldenv
int3
shll
lcall
stos
pushl
and
nop
cmpsl
sub
ret
mov
push
sbb
shrd
xchg
mov
lods
sahf
mov
xor
out
lods
jp
mov
cmc
loop
mov
test
lock
jns
aad
mov
dec
pop
ret
sub
lods
pop
pop
xchg
push
test
fdivp
ja
cmp
js
xor
sahf
pop
jmp
jae
and
lods
vmovsd
enter
daa
xor
push
sub
scas
ret
iret
testl
xor
jbe
inc
lea
out
fdivrl
inc
xchg
js
push
inc
dec
daa
adc
xchg
loope
fstpl
xor
cli
xchg
mov
data16
leave
repnz
in
mov
fs
push
xor
sbb
pop
ljmp
mov
or
and
or
leave
mov
testl
sub
mov
test
mov
stc
dec
mov
insb
rcrb
add
add
jo
or
fnsave
add
and
test
test
cmp
jnp
leave
arpl
fs
mov
lfs
out
shrl
enter
sbb
jg
fucomi
push
mov
mov
sti
rcr
jg
leave
call
lods
daa
pop
or
push
mov
mov
lcall
cld
lret
rcrb
pop
loop
nop
jne
mov
cmpsl
test
jge
imul
sub
and
add
mov
jmp
cltd
dec
add
mov
mov
ds
lcall
sub
and
jne
sub
cmp
or
rcll
movsb
inc
loope
cmp
push
sbb
dec
icebp
jo
jne
and
ljmp
cwtl
das
push
xchg
lcall
jae
in
push
sbb
insb
out
sbb
subl
mov
rcl
stc
data16
cmpsb
adc
inc
xchg
ja
loopne
iret
dec
cltd
add
nop
inc
add
push
imul
negl
mov
cmp
cmpsl
test
ds
aad
dec
xchg
jp
int3
push
add
cmpsb
iret
pop
insb
sub
in
cmp
cltd
mulb
pop
mov
adcl
fldenv
test
adc
push
arpl
push
lahf
loop
xor
jne
loopne
jbe
les
push
mov
cmpsb
repz
jne
inc
cmp
xor
mov
cmp
and
xchg
adc
mov
gs
ret
jb
call
push
shlb
xchg
or
dec
mov
ror
filds
xchg
mov
fmulp
pop
cli
add
mov
je
adc
mov
mov
mov
jecxz
imul
leave
jo
push
xchg
xchg
cmp
lret
jmp
stos
scas
test
cmc
jnp
mov
aam
jnp
or
test
sub
ficoml
mov
dec
repz
scas
push
icebp
test
cmp
jmp
lock
sub
js
and
pop
jb
pop
aam
ffree
clc
mov
shr
ds
mov
iret
sahf
sbb
adc
cmp
imul
fidivrl
into
ljmp
xchg
dec
test
jno
lods
cmp
pop
test
shll
adc
movsl
jl
lcall
lcall
push
hlt
mov
jbe
inc
pop
imul
lret
xchg
push
insb
mov
inc
mov
test
mov
ljmp
inc
push
arpl
inc
outsl
mov
dec
in
push
jnp
inc
push
dec
dec
push
loope
adcl
or
jnp
push
mov
ret
outsb
pop
cmc
cltd
outsl
push
and
shrl
cmpsb
in
lods
dec
pop
fimuls
sub
add
mov
int
aad
xchg
mov
cltd
mov
das
xlat
push
sbb
ja
das
xchg
sub
xchg
xchg
add
in
imul
inc
call
out
imul
incb
add
sahf
dec
fs
mov
push
and
scas
xchg
jmp
adc
cmc
pop
push
xchg
mov
ja
push
scas
add
mov
mov
sarl
push
mov
dec
jo
test
mov
jnp
pushf
xor
popf
ds
mov
jno
cltd
popa
add
xor
mov
lcall
mov
addr16
aam
cld
stos
fldl
ja
sbb
sbb
in
loopne
fbstp
dec
rcrl
and
cld
outsl
rorb
aam
mov
mov
std
int3
add
fsubrl
pop
cmpsb
add
outsl
std
push
sbb
fbstp
std
push
subl
and
pop
leave
sbb
addr16
ljmp
insl
ret
cltd
add
inc
inc
cwtl
out
dec
adcl
test
lret
push
js
add
push
add
in
test
jnp
stos
mov
out
jae
popa
dec
lock
jns
arpl
stos
inc
loopne
popa
mulb
sbb
out
jecxz
sbbb
lret
andb
shlb
clc
push
pop
cmp
add
sub
lret
les
roll
adc
enter
add
fidivrs
sbb
and
xchg
out
push
xlat
aad
xor
or
test
mov
inc
arpl
jo
dec
bound
iret
sbb
mov
cmp
in
repz
inc
sbb
dec
inc
adc
fistpl
test
xor
aad
rol
adc
cmp
push
inc
add
dec
and
xlat
jmp
sub
in
stos
add
sbb
aas
repnz
jbe
xchg
push
push
push
xor
add
jbe
xor
mov
cmc
inc
ljmp
out
jne
fisubs
xchg
inc
cmp
aad
insb
test
scas
mov
bound
out
out
imul
sub
and
jle
cmpsb
test
mov
pop
lret
pop
call
sbb
sbb
mov
leave
cltd
add
pop
mov
push
and
std
sbb
aaa
pop
ja
gs
add
mov
loopne
push
jmp
mov
outsb
xchg
cli
inc
lret
jns,pt
mov
in
inc
mov
loop
add
lods
adc
insb
gs
pop
ficoml
outsb
shrl
insb
xorb
test
jge
push
xchg
pop
push
or
jl
enter
xchg
cmpb
add
push
xchg
xchg
mov
test
ja
dec
xor
mov
push
into
adcl
adc
in
jo
int3
pop
mov
mov
or
dec
mov
adc
int3
and
aad
lahf
test
leave
mov
and
xchg
add
mov
inc
sbb
mov
call
sahf
mov
xchg
jns
pop
sbb
cld
mov
loopne
loop
mov
sarb
dec
dec
jb
out
js
stos
push
jmp
xchg
test
divl
jecxz
loop
lea
test
pop
cmp
dec
pop
je
mov
roll
negb
cwtl
mov
gs
jge
cmp
lret
stos
dec
add
cld
negb
js
addr16
mov
inc
push
ret
jle
mov
push
xor
das
loope
pusha
sahf
and
push
pop
call
test
adc
cmp
xchg
andb
push
out
mov
mov
leave
in
cld
dec
iret
push
rcrb
lods
lds
fnstenv
push
sbb
idivb
not
xchg
out
popf
inc
push
mov
cli
stos
xchg
jp
ss
enter
movsl
int3
insb
adc
stc
nop
daa
jmp
mov
cmp
sbb
jae
mov
inc
pop
pop
and
jnp
fldt
sbb
lahf
pop
fsubl
sub
inc
das
inc
add
mov
sub
or
jns
mov
cmp
shlb
nop
aad
add
cltd
dec
jmp
iret
inc
push
lret
imul
push
xchg
jne
shrb
dec
in
or
insb
test
adcb
mov
fdivl
ret
mov
mov
mov
pop
lcall
cmc
lea
scas
cmp
cmp
data16
or
cmp
hlt
xchg
rolb
jmp
push
adc
jg
push
dec
pop
ds
out
jge
pushf
dec
es
into
lods
mov
dec
push
add
dec
in
mov
testb
jg
daa
jmp
ret
jl
sbb
adcb
cmp
scas
and
test
mov
mov
into
into
scas
cs
xchg
out
popa
dec
push
insb
clc
push
jmp
mov
push
xchg
inc
loop
repz
xor
shll
push
xchg
and
aad
pop
xor
popl
mov
bound
dec
mov
lods
cmp
jle
mov
xchg
mov
push
ja
bound
fs
xor
lret
testb
adc
xchg
xchg
shlb
cmp
scas
or
jb
test
daa
dec
xor
xchg
pop
inc
fisttpll
and
or
shlb
cmc
push
in
out
jg
test
and
div
popa
add
repz
gs
iret
stos
pop
push
and
push
test
data16
push
mov
cmp
leave
sahf
dec
xchg
mov
pop
decb
scas
sbb
rorb
je
pop
mov
adc
cmp
lods
movsb
pushf
scas
fmull
mov
call
dec
sti
fwait
out
cmpps
rcl
pop
or
mov
pop
push
ret
pop
lock
pop
xlat
pop
pushl
imulb
cmpsb
push
lret
pop
ds
pop
cmp
cmp
sbb
mov
ljmp
inc
fldenv
outsl
sbb
cld
rorb
shll
cmpsl
dec
ret
js
adc
lock
xorb
or
movsl
loop
jnp
jne
int3
push
mov
enter
scas
inc
icebp
inc
stc
xor
out
mov
cmp
repnz
cmpsb
cmp
xchg
jmp
fiaddl
fidivl
es
loopne
out
loopne
filds
ret
es
inc
leave
sbb
repnz
push
dec
daa
cmp
xchg
fldt
lret
mov
jge
push
add
mov
sarb
pusha
idivl
cmc
aaa
into
call
xor
jo
dec
loop
imul
mov
dec
in
test
arpl
push
cmc
mov
jmp
sub
push
pop
mov
xor
outsl
xor
pop
jb
shlb
in
mov
insb
sbb
pop
insl
add
lret
mov
adc
sbb
sbb
pushl
out
sub
xchg
jne
fisubrs
lods
push
and
adc
imul
scas
xor
mov
repnz
push
cmp
int3
pusha
xor
cmp
sbb
bswap
outsl
subb
cmp
push
test
push
sub
cmp
xchg
loope
cmp
lods
je
xlat
sub
aam
sub
lret
inc
gs
iret
and
sahf
cli
push
xchg
in
inc
shlb
pop
dec
insb
xchg
addb
jle
cmp
cwtl
xor
negb
inc
out
lahf
push
inc
loop
lds
or
lods
ret
js
xchg
mov
xchg
add
mov
mov
bswap
stos
push
outsb
stos
out
xchg
gs
mov
sub
or
mov
pop
dec
push
push
dec
scas
jno,pt
pop
scas
mov
adcb
iret
push
test
sbb
lds
inc
and
rol
adc
js
and
adc
xor
dec
imul
lret
sub
adc
inc
dec
addr16
sar
adc
movsl
mov
sbb
adc
add
cli
ret
xor
pusha
ljmp
icebp
pop
sti
xchg
pusha
cmp
test
jno
xorl
inc
ss
lahf
fs
add
adc
ret
sti
jbe
jmp
sbb
popa
aaa
xchg
cmpsl
mov
sbbl
loope
dec
in
ds
clc
lods
add
or
je
mov
call
or
xchg
inc
mov
loop
mov
dec
gs
push
and
xor
addr16
mov
and
imul
jmp
mov
jmp
fdivp
pop
andl
sub
ror
jp
mov
aas
xchg
or
jp
lock
js
push
mov
cwtl
in
dec
aaa
adc
fnsave
mov
and
cmp
add
xchg
nop
adc
fildl
push
add
es
test
imul
mov
jecxz
js
push
pop
mov
ret
fwait
imul
loop
mov
mov
add
stc
and
sbb
cld
sbb
mov
push
xor
jmp
sub
jae
jle
imul
and
stc
imul
inc
and
mov
out
or
or
adc
je
and
and
cmc
mov
xchg
adc
push
jno
and
je
mov
loop
xchg
lock
xor
movsl
push
in
cwtl
cld
push
lret
mov
jo
pop
jge
cmp
shll
fildll
push
sub
or
push
dec
dec
xor
insb
and
mov
and
mov
pop
pusha
sub
outsl
jb
rorl
leave
adc
lret
clc
leave
fsubrp
fwait
dec
ret
popa
jg
mov
imul
imul
imul
jge
mov
test
xchg
or
add
jg
push
in
popl
sbb
loopne
jp
or
fstpt
push
mov
aad
add
mov
fsubrs
inc
fnsave
mov
fdivrl
mov
and
pcmpgtd
and
cmp
repz
sub
addr16
repnz
and
mov
mov
push
hlt
sbb
or
and
mov
repz
pushw
dec
push
add
pop
jne
and
rolb
mov
inc
add
mov
xchg
loope
jmp
add
lahf
iret
sub
fcmovne
inc
je
dec
mov
cmpsb
cmpsl
xor
lods
ljmp
jnp
insl
dec
movsb
pop
jl
pmaxsw
adc
inc
jecxz
movsb
cltd
jecxz
pop
lcall
and
sarl
jno
mov
and
mov
sar
clc
add
dec
or
imul
mov
sub
add
jb
push
push
xchg
push
out
mov
inc
dec
dec
pop
repz
repnz
jp
loopne
subl
imul
push
push
js
insb
mov
mov
es
shr
fnstenv
into
cs
dec
popa
lahf
mov
lret
or
lret
cld
cmp
in
cld
pop
cmp
sahf
loope
sbbl
push
cld
push
xor
ret
pop
add
test
imul
jp
nop
mov
mov
pop
jg
pop
imul
jmp
adc
xor
insb
js
mov
xor
es
addr16
inc
mov
push
push
lock
mov
fdivl
mov
lcall
icebp
sub
pop
rcll
int3
stos
ljmp
int
shlb
xor
imul
pop
add
cmp
and
or
xor
jns
sbb
shrl
pop
or
push
cld
sub
add
int
inc
or
movsb
or
inc
pop
fiaddl
lods
ret
push
popf
xor
rcll
hlt
xor
adc
js
ljmp
sub
add
push
mov
not
xchg
mov
arpl
and
jg
push
int
sub
pop
dec
jmp
enter
negb
push
insl
idivb
add
imul
fisttpl
sahf
lods
adc
mov
mov
mov
and
cmpsl
pop
repnz
rol
inc
xlat
icebp
xor
jne
cmpsb
scas
ds
adc
pop
scas
sbb
filds
dec
xchg
movsb
repnz
cli
movsl
movq
call
jnp
mov
sub
addps
lods
cld
icebp
movsl
cld
inc
xchg
sub
stc
pop
in
cld
pusha
imul
inc
orl
sti
outsb
cmpsb
xchg
mov
push
lea
scas
cld
xchg
aam
int3
movsb
dec
out
fxch
xor
pop
and
and
inc
inc
pusha
cmp
or
inc
mov
daa
jl
or
and
fmuls
inc
mov
xchg
sbb
in
xchg
and
pop
fwait
cmpsl
fstpt
ljmp
dec
mov
imul
and
mov
test
jmp
and
jmp
add
std
fnstcw
test
jg
out
inc
sbbl
aad
mov
aad
fcmovu
inc
xor
adc
pop
out
or
mov
cmc
or
push
mov
jmp
iret
xor
pop
lret
and
dec
jne
xchg
ds
adc
dec
push
je
int
repnz
push
out
dec
pop
sub
push
lahf
jbe
xor
fwait
lock
fiaddl
std
rcll
inc
pop
cmp
mov
xor
sarl
inc
das
iret
inc
push
pop
daa
push
or
fisttpll
mov
loope
scas
fldln2
loop
fimuls
mov
jmp
cltd
push
xchg
or
imul
jg
xchg
cmc
js
mov
js
pop
stos
cld
outsl
and
adc
sbbb
lock
dec
push
sbb
lock
jmp
mov
pop
out
leave
outsl
enter
jbe
sbb
leave
pop
push
mov
pusha
stos
mov
adc
push
mov
pop
jp
pop
loope
js
xor
sub
shll
and
lcall
cwtl
jo
mov
aas
cli
lock
shll
call
inc
dec
scas
addb
test
or
add
dec
adc
insl
imul
test
pop
sbb
mov
daa
cli
mov
fisubl
mov
bound
pop
addr16
in
shr
jnp
mov
sbb
jge
int
mov
jle
int
mov
test
call
mov
mov
push
cli
add
addr16
mov
outsw
sbb
ret
shlb
cwtl
adc
or
mov
pop
mov
out
out
xchg
mov
rorl
cmp
stos
push
rolb
aad
loope
xchg
mov
fs
jmp
repnz
sbb
fwait
sbb
ljmp
and
sub
sub
inc
pop
add
ret
bound
mov
pusha
ljmp
les
sbb
or
mov
pop
ljmp
push
jmp
gs
and
clc
sahf
test
loop
enter
xchg
je
shrb
sti
xchg
stos
cs
lock
loop
sahf
mov
sbb
lods
mov
pushf
sbb
and
scas
sub
pusha
xchg
mov
scas
gs
or
xchg
lret
hlt
jle
enter
call
scas
es
sub
cwtl
nop
ss
mov
icebp
pop
lret
iret
mov
dec
mov
testl
cmpsl
imul
mov
imul
scas
mov
pop
cli
daa
mov
mov
sahf
inc
cld
adc
shlb
and
js
into
rol
js,pn
xchg
popf
push
out
lea
add
in
cmp
xchg
lea
add
imul
adc
inc
fst
jecxz
jno
adc
pop
mov
sub
psrad
xlat
sub
cmp
jnp
jp
mov
cmp
or
insl
pop
sub
push
shll
pop
mov
mov
xchg
inc
and
push
or
mov
jno
cmp
fnclex
dec
mov
daa
mov
cmp
mov
mov
pushf
imul
or
xchg
xor
cmp
cli
xlat
and
lea
pop
clc
pop
sahf
shrl
and
ds
addr16
fcmovb
or
subl
pop
lock
dec
cmp
out
imul
xor
daa
jmp
cmp
test
sbb
dec
jle
js
mov
fmull
mov
sbb
mov
cs
mov
je
xor
push
jb
mov
xchg
jecxz
pop
cmp
and
in
js
lahf
cs
mov
sarb
jmp
xchg
decl
jno
out
mov
jg
jle
jg
mov
xlat
loopnew
bound
mov
bound
hlt
lock
out
in
repz
popa
lods
xchg
add
cs
sbb
in
roll
cwtl
and
xor
loop
loopne
pop
orb
shll
mov
or
adc
clc
in
fiaddl
mov
inc
stos
fnstsw
sub
or
inc
dec
dec
dec
add
stos
lock
daa
xchg
xor
imul
mov
aaa
loopne
jl
dec
inc
out
sbb
inc
imull
adc
addl
dec
pop
shll
mov
lret
xor
or
call
pop
incb
cmp
in
and
sti
cmpsl
std
cwtl
stos
in
xchg
inc
add
sub
jae
mov
fcompl
jae
stc
imul
xchg
es
jecxz
push
adc
test
sub
lds
pop
cli
jl
aaa
ret
sti
xor
mov
inc
js
sbb
and
addr16
jbe
out
xchg
mov
cs
adc
xchg
jne
ficoml
pop
in
or
cmp
mov
cmp
aaa
into
push
les
mov
jae
jbe
out
fs
cmp
add
push
jecxz
xor
jmp
and
aas
add
dec
outsb
xor
jb
push
xchg
pop
pop
fwait
xor
decb
mov
pop
call
rorb
arpl
sub
stos
xor
fadds
mov
sti
sarb
sub
sub
dec
dec
mov
rol
push
or
mov
das
lret
stos
arpl
daa
jecxz
pop
adc
pop
inc
lcall
je
andl
sahf
jl
test
and
insl
sub
test
jnp
mov
mov
in
inc
rol
push
sub
or
cltd
push
into
sbb
mov
lds
rcr
xor
mov
sub
in
mov
loop
shrb
or
adc
adcb
push
cmp
bswap
hlt
lret
jge
xchg
fwait
sbb
mov
fwait
inc
mov
mov
inc
sbb
push
dec
mov
or
and
lds
push
shlb
xchg
loope
imul
mov
or
loopne
fldt
add
and
fisubs
test
out
mov
and
mov
aam
push
rcl
loop
and
sti
mov
popf
idivb
mov
repz
cmc
cmpsb
lahf
inc
cltd
inc
xchg
xchg
xor
repz
dec
cmc
mov
jp
sub
sbb
cli
mov
inc
adcl
inc
sub
dec
sbb
xchg
mov
repz
adc
aam
mov
mov
dec
std
xchg
sbb
xor
add
gs
sub
sub
xor
negb
xchg
ja
out
std
inc
iret
pop
sub
repnz
pop
mov
in
mov
addr16
pop
scas
or
mov
stos
xchg
dec
adc
out
xchg
adc
push
cltd
clc
inc
in
xchg
mov
out
test
pop
mov
outsl
inc
negl
pop
mov
mov
mov
loope
push
and
out
or
mov
add
fwait
cmp
jmp
aad
mov
xchg
inc
cld
xchg
cltd
mov
imul
xor
repz
jmp
sbb
jp
out
je
dec
xlat
push
inc
dec
push
icebp
decl
jns
jl
pop
js
inc
mov
cmpsb
cltd
test
sbb
loopne
add
mov
pop
lret
fistpl
push
sub
jns
jo
sbb
inc
dec
mov
es
and
shll
popa
aas
pop
jne
cmp
adc
call
test
mov
aaa
push
jmp
dec
es
test
xchg
push
adc
pop
xchg
pop
stos
mov
jbe
dec
iret
and
pop
outsb
or
mov
rclb
les
out
into
cmp
mov
outsl
shrb
sbb
cmpsl
pop
push
sbb
out
xchg
scas
sub
je
cmpsb
lea
aam
mov
xchg
mov
adc
dec
sysret
sahf
cmpb
popa
mov
pop
push
sbb
mov
pop
ret
pop
call
test
adc
and
jae
xchg
push
movsb
lods
pop
in
rolb
aad
cmpsl
sub
sbb
adc
iret
push
and
ljmp
les
aas
pop
popa
in
leave
and
sti
bound
cmp
aaa
mov
ja
rclb
gs
sbb
lahf
add
pop
add
int3
je
in
pop
fs
enter
xchg
mov
ds
mov
mov
popa
popf
clc
push
mov
jge
lret
das
addr16
mov
ja
lcall
jno
lds
rclb
mov
mov
sub
outsb
adc
adc
adc
mov
movsb
add
js
and
inc
das
cmp
fsubr
jg
in
insl
jbe
jge
mov
and
test
ffreep
sub
adc
xor
daa
cmp
sahf
mov
mov
xchg
mov
jle
sbb
push
cmp
inc
ret
jnp
mov
mov
ds
das
cmp
push
outsb
hlt
ljmp
mov
insb
not
pop
je
add
lret
mov
xlat
sbb
outsl
out
rcl
repnz
jp
mov
mov
aam
das
xchg
jle
or
movsl
cli
mov
pop
jle
and
popf
jge
cmp
dec
sub
push
and
add
jo
shr
xor
adc
aam
and
inc
enter
in
sub
pop
pop
in
cmp
sub
cmp
loop
jp
jge
ficompl
xchg
enter
mov
lret
cwtl
jnp
xlat
push
call
pop
add
mov
addr16
add
mov
lods
faddl
flds
xchg
mov
hlt
jbe
je
xchg
adcl
push
xor
and
sbb
fldenv
pop
lods
xchg
enter
cmp
mov
xchg
sub
sahf
mov
icebp
dec
jb
jge
xor
adc
sbbl
pop
jbe
adc
clc
push
out
jo
mov
jmp
add
pop
leave
push
jne
arpl
nop
mov
mov
loope
mov
xor
jp
aam
pushf
shrl
and
adc
in
jne
insl
xorl
hlt
xchg
inc
sbb
jnp
or
inc
mov
xchg
sbbl
jl
cmp
pop
lahf
fidivrl
add
adc
dec
fmull
es
cmp
pop
out
sub
fwait
inc
out
cmp
or
stos
jo
addr16
fmulp
dec
mov
lock
mov
mov
lahf
cmpsl
out
jns
cs
lcallw
mull
ljmp
nop
push
inc
fistl
or
mov
mov
pop
fld
loopne
jl
int3
and
xchg
sub
add
cmp
enter
adc
sahf
test
je
mov
xchg
mov
push
repnz
xlat
stos
fiadds
movsl
xor
xchg
and
lahf
call
inc
out
mov
je
in
pop
imul
je
movsb
and
xchg
add
addr16
lret
or
inc
push
insl
mov
xor
jecxz
jp
jne
mov
insl
in
es
enter
adc
test
int
xchg
and
pushf
outsb
fmul
sbb
push
inc
repnz
insl
or
xchg
push
mov
pushf
in
or
jo
clc
jnp
lods
or
fmulp
jg
and
xor
insl
add
aad
call
pop
push
push
sbbl
jg
insb
fs
dec
sub
cvtps2pd
jns
cmpsl
rol
dec
inc
jnp
inc
fadd
pop
lret
jle
jo
out
jbe
out
cmpsl
push
sub
and
sbb
jle
outsl
pop
cmp
loope
insl
repz
add
enter
pop
cmp
dec
mov
sahf
mov
push
fwait
mov
popf
pop
mov
outsl
and
jnp
adc
es
incb
xchg
xor
jno
push
mov
lret
push
cmp
cltd
stos
mov
addr16
lea
lods
aas
push
xchg
out
mov
push
testl
rcl
xchg
pop
pushf
in
sti
jg
mov
sbb
xchg
dec
mov
sarb
leave
cs
sti
sub
insl
mov
jecxz
fiadds
cltd
dec
in
push
fildl
pop
imulb
sub
xor
insb
fwait
rcrl
and
into
dec
mov
lds
xrstors
cmpsb
push
in
xchg
dec
mov
cpuid
sub
or
mov
pop
cmp
sbb
xlat
cmp
jl
mov
xchg
insl
jle
ret
pop
xchg
mov
xchg
out
lcall
adc
icebp
mov
mov
ljmp
pop
cmp
mov
add
lods
int
push
push
mov
andb
into
mov
cmp
add
jmp
mov
sahf
js
repnz
xchg
jecxz
mov
jne
mov
pushf
lret
sbb
or
ds
xor
shld
out
cld
jecxz
outsl
dec
sbb
adc
test
adc
inc
bound
mov
mov
jmp
cld
sub
and
xchg
sub
adc
jns
push
lcall
sbb
push
cs
pop
add
mov
out
outsb
jl
icebp
rol
es
popa
fwait
cli
ret
mov
or
lds
jae
loopne
ret
in
inc
inc
stos
jnp
inc
bound
adc
incb
push
sub
and
popa
inc
shl
insl
mov
test
cmc
cmp
popf
js
mov
dec
and
stos
stc
loopne
push
push
pushl
sbb
mov
shlb
negl
call
dec
repz
orl
dec
int3
push
cltd
outsl
fsubl
add
or
dec
ljmp
movsl
xor
test
or
jmp
rcrb
xchg
leave
repnz
cli
mov
and
sbb
adcb
imul
ds
sub
add
shrb
aad
fs
pop
xchg
pushf
jl
lea
mov
mov
into
and
outsl
adc
mov
cmp
mov
add
xor
jbe
ret
insl
and
inc
pop
push
adc
or
push
sbb
sete
mov
mov
push
mov
rcr
ss
je
leave
jae
popf
sbb
lcall
mov
shl
aas
mov
or
mov
cmp
std
inc
nop
mov
xor
hlt
mov
inc
shlb
cmpsl
popa
pop
push
pushf
fadds
cmp
or
cmpb
popf
fisttpll
inc
test
inc
fildl
jb
xchg
mov
fstpl
or
sub
xor
pop
mov
js
push
fiadds
mov
inc
stc
mov
stc
or
lret
fstps
mov
mov
cwtl
mov
add
js
mov
push
mov
les
jb
mov
adc
mov
int3
mov
or
mov
and
aad
jb
jns
dec
and
jb
adc
sub
jmp
mov
push
ljmp
testb
jp
push
aam
add
dec
shrl
imul
jle
cmp
int
shrl
mov
cld
cwtl
pop
push
in
cld
inc
push
jl
stc
lds
push
mov
pop
mov
mov
lahf
out
ret
sbb
lcall
loope
dec
addl
test
inc
lret
cmc
mov
push
insb
cltd
fidivs
sahf
in
rcll
imul
rorl
icebp
sbb
mov
lcall
movsb
movsl
js
sbb
mov
add
mov
insb
jo
sbb
mov
add
adc
mov
cmp
pop
sbb
push
mov
incl
jg
sti
xor
subb
aam
out
sbb
xor
cmp
enter
fs
sbb
outsb
aad
sub
mov
fcoml
mov
ret
sub
inc
cmp
fiaddl
lcall
push
xchg
cld
fistpll
and
jl
lds
cmp
jge
sahf
jne
xchg
mov
shl
mov
hlt
sub
ss
fdivr
xor
add
outsl
inc
call
fwait
scas
adc
add
jne
jo
repnz
aaa
jmp
adc
jbe
push
call
xchg
pusha
popa
cmp
repnz
and
loop
sub
or
cwtl
std
mov
mov
bound
push
enter
push
in
data16
rorb
lret
notl
aad
sub
mov
cmp
rolb
pop
add
aas
sbb
ss
mov
adc
pop
dec
and
push
push
jnp
jmp
add
and
inc
mov
lock
mov
enter
mov
lea
setne
mov
xchg
jg
push
mov
pop
cmpsb
das
outsl
lret
lret
xchg
jnp
outsb
mov
inc
jmp
les
push
gs
xor
jle
gs
sub
pop
push
popa
ret
repz
pop
stos
mov
into
add
mov
xchg
add
mov
cld
ja
or
cmp
cld
jae
mov
push
imul
and
mov
jb
insl
inc
lret
js
mov
mov
rorl
adc
fs
dec
std
xchg
cwtl
das
scas
lea
and
testl
push
mov
sbb
clc
sbb
inc
fiadds
or
jle
pushf
and
nop
movsb
out
repnz
dec
es
mov
iret
pop
out
jmp
adc
cmp
test
lret
ljmp
adc
mov
add
flds
sub
mov
xchg
and
popa
int
inc
pop
or
int
ss
ret
cmpsl
ds
mov
aad
out
mov
jnp
aaa
call
pop
xchg
adc
pop
lock
movsb
pop
pop
push
dec
dec
fisubs
stos
pop
jl
inc
mov
or
daa
mov
pop
add
xchg
je
scas
sbb
mov
loope
mov
cld
xorl
sbbl
jbe
push
push
xchg
mov
jp
stc
sbb
iret
xchg
jno
dec
and
ret
adc
lcall
pop
push
rclb
arpl
xchg
cmp
push
daa
dec
mov
scas
jmp
int3
enter
outsb
sahf
out
daa
mov
cmc
push
shll
xor
adc
inc
fldl
push
cltd
shlb
xchg
loopne
loope
sub
shl
lea
push
in
repnz
mov
mov
in
out
or
into
cltd
popa
iret
cmp
push
das
or
pop
popf
jg
int
insl
inc
dec
mov
pop
jecxz
cmp
movsb
pop
inc
or
int3
cmc
jg
mov
int3
ljmp
and
in
in
cmpsl
add
cmp
add
repz
dec
aad
jp
int
push
lret
into
popf
arpl
xor
mov
mov
jmp
setno
mov
xor
ja
xchg
sbb
movsl
mov
cli
mov
sbb
pop
push
rcll
stos
les
xor
mov
mov
push
xor
aad
xchg
out
arpl
aaa
fisubs
mov
mov
repnz
call
subb
out
mov
push
jbe
or
mov
add
mov
dec
aad
mov
fcoms
daa
imul
push
jno
sahf
ret
repnz
cmc
and
cld
sub
pop
adc
xchg
or
ja
in
cmpsb
lea
xchg
sbb
pop
popa
clc
dec
pop
xchg
scas
add
insb
pusha
outsl
inc
test
mov
inc
and
out
out
dec
cmp
mov
subb
shlb
add
enter
js
bound
mov
jmp
es
xor
xchg
test
lds
add
gs
sub
inc
jo
cmpsb
test
xor
aas
and
les
or
sti
or
sub
xlat
gs
test
dec
adc
cmp
scas
out
cmc
lods
cmpsb
das
in
fdivrl
jno
mov
nop
jmp
mov
popa
ds
inc
dec
lahf
insb
cli
test
mov
push
ja
mov
ficomps
cmpsb
xchg
add
mov
inc
sub
sub
jp
sahf
out
out
jnp
and
and
cmp
fstpl
aas
movsl
dec
xchg
pop
test
test
popf
sbb
mov
sbb
int3
cli
mov
mov
sbb
lret
addb
xor
xchg
jae
inc
push
leave
xchg
pop
sahf
adc
cmp
push
pushf
cltd
inc
inc
in
in
nop
ss
and
mov
or
in
dec
aaa
ds
cwtl
sub
jmp
mov
scas
inc
scas
lock
jb
dec
insb
jg
cmp
xor
je
cmpsb
jle
test
mov
adc
mov
cmpsl
jl
push
inc
movsb
ja
sub
cmpsb
test
je
mov
push
push
pop
dec
mov
mov
dec
xlat
push
or
lahf
mov
repnz
dec
idivb
fs
pop
imul
jb
rcll
inc
scas
sub
outsl
or
mov
add
loope
push
mov
mov
add
or
push
adc
jg
pop
jmp
movsl
xchg
push
or
ds
andb
fucomip
mov
pop
or
jno
and
ret
mov
jbe
lret
xchg
iret
stc
xchg
cmp
cmpb
lret
test
lods
stos
pushf
hlt
pop
lds
jecxz
or
push
add
and
xchg
cmpsl
cwtl
add
jle
push
dec
mov
cmp
lea
sub
in
adc
xchg
rclb
fwait
mov
int
jge
fldcw
xor
mov
adc
stos
aaa
stos
or
gs
xchg
call
and
xchg
rclb
fwait
mov
and
mov
in
sub
les
jbe
xor
jmp
stc
gs
aas
lret
addl
jmp
push
pop
fwait
loopne
ja
push
dec
dec
iret
repnz
lea
fs
xorb
jge
xchg
xchg
sbb
andl
fisubrl
movsl
or
aaa
adcb
ret
ret
pop
lret
mov
cmp
cwtl
mov
lret
push
aad
push
sub
imul
inc
ret
repnz
sub
inc
repz
ja
xchg
lods
xor
lods
ret
fstl
repnz
es
inc
mov
std
lock
fdivs
cltd
fidivl
dec
jge
jns
gs
push
mov
in
in
adc
stos
inc
ss
add
jmp
je
dec
mov
xor
outsl
es
testb
pushf
push
xchg
xor
movsl
mov
pop
jo
dec
movsb
subb
push
push
xor
pop
mov
mov
frstpm(287
jno
jb
push
out
mov
xchg
aad
cmpsb
outsl
imul
xor
sub
fmuls
imulb
repnz
out
push
aad
add
jb
std
sbb
test
stos
add
into
inc
fwait
adc
fcmovnb
cmp
jno
xlat
mov
fildl
sub
repz
push
in
xchg
bnd
and
and
dec
popa
cld
inc
xchg
inc
fadd
mov
rcr
insb
sub
ret
jbe
xor
popa
shrl
test
push
out
xchg
rorl
add
lahf
sbb
cmpsl
ret
jb
movsb
lret
stc
stos
xchg
pop
xchg
mov
dec
add
jl
cmp
repnz
xorb
hlt
pop
xchg
xchg
insl
pop
cmp
jge
lods
mov
fidivl
push
andl
cmp
test
pop
fisubl
mov
divl
jb
inc
int3
sbb
adc
cmpsl
ds
fadd
pop
mov
mov
jecxz
movsl
push
xor
enter
pop
loop
ror
jb
cli
cmp
gs
loopne
xlat
mov
cmp
jne
movsb
xor
pop
mov
mov
jne
std
mov
adc
mov
out
lods
mov
imul
popf
or
pop
jo
aad
ffreep
sti
inc
xor
loop
cmp
mov
ljmp
fadd
test
push
fucomip
std
push
lret
dec
fidivrl
lds
cmpsl
icebp
movsw
mov
xchg
add
pop
hlt
cmpsb
cmp
pop
xchg
pop
mov
sub
scas
sbb
jmp
stos
lahf
movsb
les
or
ror
sbb
push
sbb
jne
lret
mov
mov
out
inc
jge
cmpsb
adcb
mov
adc
sbb
push
sarl
pop
mov
testb
leave
adc
xchg
lock
push
xor
push
mov
nop
or
jmp
mov
cmp
dec
aam
adc
call
mov
xor
aam
push
push
pop
int3
in
mov
xor
std
sbb
xchg
pop
popf
adc
push
xchg
or
xorb
notl
inc
ss
mov
xor
or
or
and
mov
sub
lods
mov
sahf
mov
add
xor
add
pop
addr16
xchg
inc
adc
cmp
adc
repz
or
movsb
rcll
int3
je
mov
or
into
lret
mov
insl
jb
xchg
sub
mov
pop
xor
pop
int3
fmuls
sbb
xchg
je
icebp
sbb
loopne
aam
testb
adc
cmc
cmp
sub
mov
test
inc
arpl
jno
pop
push
cmpsl
ds
movsb
fsubrl
nop
imulb
mov
inc
ja
imul
lock
xchg
mov
push
data16
loope
out
add
sbb
repz
rorl
pop
sub
xchg
push
xor
add
aad
adc
jmp
movd
ja
in
test
mov
add
jb
js
fucomi
rcrl
sbb
rcll
sbb
pop
imul
jo
or
adcl
les
fimull
or
or
incb
mov
bound
sub
rcll
add
repnz
scas
stos
inc
test
mov
in
xor
xchg
outsl
sbb
pop
mov
dec
mov
xor
mov
cwtl
adc
inc
sarl
mov
mov
push
mov
rcrl
enter
fisubl
xchg
jp
xchg
lahf
add
lock
cmpsl
push
dec
aaa
mov
data16
jno
mov
outsb
dec
in
dec
push
mov
mov
mov
jge
lods
and
dec
dec
xchg
out
xchg
das
inc
inc
add
dec
dec
ss
inc
ljmp
inc
popf
mov
or
jno
data16
aam
ret
adc
sub
add
addl
xor
mov
cltd
pusha
xchg
pop
dec
dec
es
cmp
or
and
mov
pop
jnp
sbb
call
ds
je
clc
add
mov
gs
test
sub
pop
xchg
mov
stc
test
mov
pop
data16
add
mov
in
mov
in
mov
mov
sbb
pop
movsb
and
jne
test
jno
mov
outsb
jmp
cmpsl
out
shrb
push
xchg
shlb
mov
ljmp
jno
sub
lret
fdivl
insb
add
adc
shr
fdivs
adc
dec
outsl
push
dec
ror
leave
pop
aam
shll
lahf
cli
xchg
dec
lds
push
cmp
push
mov
dec
ret
jb
sub
dec
xchg
xchg
mov
sbb
jle
sub
cltd
push
je
imul
cs
mov
das
push
jmp
aad
mov
mov
aad
out
jecxz
repnz
jae
pop
inc
clc
inc
int
sti
ja
addr16
add
fwait
mov
stos
push
jae
movsb
cmc
dec
test
lods
loop
sbb
out
sbb
or
add
pop
sub
jp
in
or
mov
int3
rcl
push
xchg
adc
imul
pop
in
popf
pushf
push
jmp
sbb
mov
mov
jnp
cmp
out
mov
cmp
bound
cmp
aad
push
mov
pusha
idiv
scas
sbb
outsl
mov
jg
xor
repz
xor
jmp
fldenv
rorb
lods
fldl
scas
cli
sbb
ja
fstps
filds
orl
shlb
int
or
push
test
xchg
push
pop
enter
jb
cltd
out
add
rcrb
lcall
mov
gs
shll
xchg
dec
mov
or
cs
dec
jns
add
std
inc
mov
jb
sub
fnsave
xlat
or
mov
xchg
in
pop
das
rolb
fdivs
push
mov
clc
xor
cmp
or
out
or
repz
pop
pop
scas
adc
ss
cmpl
pop
or
lahf
pop
shl
pushl
insb
jle
cmp
scas
jnp
sub
xor
sub
loope
sbb
and
shl
inc
cs
lds
pop
xor
cmpsb
and
jb
jbe
mov
ret
hlt
ficompl
xchg
ljmp
mov
or
andl
idiv
fnstcw
mov
fsub
jge
orb
mov
push
pop
push
xchg
loope
imul
ss
lods
imul
jae
lea
out
mov
sbb
sub
mov
in
mov
jno
mull
sti
pop
les
xchg
fstps
ds
loope,pt
lods
lock
insb
push
shl
mov
loop
fstl
adc
mov
lret
mov
inc
pop
fsubrs
dec
sub
sub
pop
dec
popf
xor
sar
push
fcom
ret
jns
xor
cmc
mov
jl
push
xor
mov
jl
aad
push
call
add
cs
add
in
jnp
push
push
aas
add
sbb
pop
mov
loope
xor
jl
dec
add
dec
lret
icebp
fcoml
dec
mov
push
lcall
gs
xchg
sbbl
adc
mov
in
js
loopne
adc
adc
shr
out
push
sbb
fchs
call
or
cmp
xchg
js
movsl
cmp
sbb
cmp
ss
pop
push
pop
pop
insb
ror
xlat
jmp
dec
and
pop
jecxz
cmp
notb
cmp
and
aad
dec
or
add
pop
fwait
jnp
mov
ficompl
push
pop
faddl
adcb
push
pusha
sub
fiadds
jno
scas
fnstsw
sub
mov
leave
js
xor
inc
scas
data16
pop
jecxz
clc
adc
ja
mov
and
push
push
inc
int3
dec
dec
cltd
insl
scas
ret
fwait
xor
mov
cmc
fdivl
sub
enter
in
or
mov
sbb
or
mov
mov
inc
lret
aam
mov
icebp
aas
rcrl
mov
pop
mov
lahf
xor
fcomps
je
scas
mov
arpl
adc
outsl
jmp
test
pop
mov
dec
pushf
mov
add
int3
jle
scas
cmp
icebp
adc
adc
fs
adcl
outsb
rcl
test
sti
insb
sti
push
mov
add
mov
les
sti
add
pop
jae
mov
mov
jno
cld
sub
or
je
jno
push
mov
dec
adc
adc
and
cwtl
inc
imul
xlat
out
lock
enter
mov
pop
add
pop
mov
cmp
sbb
push
call
loopne
xchg
cmp
aas
cli
and
pop
push
imul
addr16
inc
sub
or
das
mov
xor
in
pop
jne
lahf
es
ficoms
xchg
xor
xor
jle
loop
sti
adc
add
mov
xor
shl
xchg
push
call
mov
xchg
mov
outsb
mov
fidivs
dec
add
addr16
inc
jge
jb
pusha
lods
mov
hlt
paddsw
xlat
mov
lds
stos
push
fldt
dec
loope
popf
sub
lret
xor
call
repz
outsb
pop
lret
ja
push
push
mov
sbb
cmp
mull
shll
cmove
repnz
cmc
push
adc
mov
mov
sbb
scas
and
lock
add
sbb
and
add
out
xorb
mov
cmp
cs
mov
jmp
in
or
cmp
xor
fwait
sub
out
pop
ljmp
add
rclb
xchg
les
repz
mov
xor
loope
dec
movsl
pusha
ss
or
and
xlat
inc
push
jb
clc
sbb
adc
js
ret
sub
dec
scas
or
pop
pop
sarb
jecxz
push
pop
and
and
xchg
out
jmp
notb
adcl
jns
pop
dec
repz
add
enter
lods
xchg
cmp
popa
sbb
cmp
mov
fistpll
push
pop
push
test
popf
push
sbb
inc
leave
mov
inc
dec
data16
out
jge
pop
sub
sub
sbb
xlat
jo
adc
xlat
xchg
xchg
sbb
out
mov
call
dec
mov
lea
int3
cwtl
mov
mov
lahf
jp
inc
ja
in
rolb
ljmp
xchg
in
popf
cmp
daa
into
or
test
jp
cmp
dec
movl
xchg
inc
mov
mov
pop
icebp
lret
sub
shll
loopne
lcall
out
pop
and
insb
inc
lea
adcl
pop
mov
push
daa
stos
mov
mov
lea
lcall
pop
jbe
cmp
into
lods
mov
in
push
sbb
in
repnz
in
and
mov
test
mov
xor
jbe
ja
mov
cli
lods
add
enter
or
pop
jo
mov
cwtl
xchg
lahf
data16
push
mov
mov
inc
mov
mov
shrl
mov
stos
add
mov
jae
enter
or
or
cltd
scas
repnz
fmulp
lret
push
dec
call
cmp
jo
mov
mov
test
and
shrl
xchg
or
mov
outsl
push
mov
sub
icebp
adc
lcall
add
out
add
mov
push
mov
aas
incb
or
es
dec
push
mov
les
js
xor
fidivrs
pop
movsl
and
fdivl
jle
out
ss
dec
sub
hlt
int3
ss
popf
push
pop
mov
dec
stc
xorb
sbb
pop
mov
jge
and
jp
test
lock
test
sbb
mov
insb
or
pop
pop
jle
js
cmpsl
xchg
inc
testb
sti
jle
sub
cmp
push
in
dec
push
loope
fdivl
shll
das
push
iret
sbb
dec
dec
dec
rolb
mov
push
inc
sbb
push
sub
inc
outsb
lret
loope
push
jmp
add
xchg
xchg
sbb
cmp
int3
movsl
cmp
dec
inc
pop
je
inc
shlb
or
les
push
cmp
jle
loopne
repz
mov
xchg
cltd
mov
xor
imul
dec
lock
outsb
sbb
rcrb
or
jns
insl
ja
lcall
dec
or
je
fsubr
sub
mov
cmp
cmp
jns
push
push
inc
adc
push
iret
sbb
fsts
int
jno
lods
loop
clc
ret
les
sub
jo
push
roll
jmp
mov
cmpsb
mov
rorl
and
nopl
adc
stc
pop
inc
inc
push
test
xor
adc
pop
in
scas
ret
push
andl
xchg
mov
xor
add
pop
pushf
cmp
out
in
test
add
and
sbb
loope
dec
mov
lods
lret
jne
adc
mov
pop
imul
pop
pop
repnz
push
popa
jecxz
mov
sbb
xlat
sub
add
cmp
mov
jmp
mov
fbstp
cmp
cmp
loope
or
inc
add
daa
loope
repnz
rorl
das
push
cmp
pop
ja
jo
ret
sub
mov
std
in
mov
mov
mov
inc
xchg
fs
stc
cmp
mov
ret
and
shl
in
xchg
mov
addb
lods
lret
inc
jbe
fs
test
mov
outsl
daa
fldt
fldl2t
sub
cmc
pushf
ret
repnz
sub
sbb
adc
fnstenv
xor
aaa
rol
or
pop
cmp
cmc
push
int3
mov
or
mov
mov
cmp
xor
sbb
mov
cmpsb
inc
lret
sahf
sti
xchg
and
in
mov
push
int
lock
in
mov
out
xchg
adc
sbb
sub
cmp
test
xchg
inc
pop
xor
stc
pop
push
mov
push
or
ret
or
mov
cld
mov
stos
mov
clc
dec
test
test
call
jae
pop
lret
push
inc
addr16
sbb
sbb
nop
mulps
sarb
and
xchg
fidivrs
sti
ror
push
add
jno
daa
dec
icebp
xor
jg
repz
sbb
mov
fdivs
inc
sarl
sahf
and
mov
inc
in
pop
mov
in
out
fildl
sbb
xor
or
and
mov
sub
dec
add
push
xchg
add
sub
pop
dec
loop
ds
roll
adc
lea
jbe
cmpb
sbb
shrb
mov
outsb
test
insl
lds
hlt
xchg
adc
jbe
push
xor
jl
mov
mov
ror
sub
pop
icebp
aaa
push
sub
lock
lret
jns
idivl
xchg
imul
and
jno
rolb
adc
andl
stc
adcl
sub
shlb
push
jle
lea
mov
adc
jnp
xchg
or
lods
ljmp
pop
mulb
or
mov
je
in
lea
cs
mov
sbb
dec
pop
lds
jbe
daa
push
add
pop
cmp
push
jmp
push
mov
sbb
clc
jecxz
mov
in
mov
cld
inc
aad
sbb
mov
je
mov
push
cmp
or
js
movsl
cli
push
insl
inc
fistl
mov
addr16
mov
xchg
insl
scas
das
adc
insb
stos
cwtl
out
fs
icebp
and
loop
test
cmp
push
mov
mov
lcall
es
scas
jb
mov
leave
mov
mov
ret
inc
stos
pop
out
mov
pop
push
xchg
pop
mov
aaa
cmpl
xchg
stos
pop
imul
loopne
add
cmp
sub
push
or
addr16
test
sahf
fs
sahf
negl
shrl
aam
test
cmp
push
pop
pop
cmp
jmp
sub
sbb
pop
shlb
lret
loop
sub
add
mov
sti
jle
in
or
popa
int
xlat
incb
pusha
mov
xchg
pop
loop
inc
imul
stos
dec
cmp
push
or
mov
das
punpckhbw
jae
pop
icebp
sbbb
add
stc
je
mov
fsts
stos
jle
pushf
mov
lahf
xor
or
cs
hlt
testb
sub
xchg
push
ret
cli
fistpl
out
xor
jmp
xor
iret
or
xor
sbb
xor
or
or
xor
add
pop
cmp
cmp
cmp
sbb
ljmp
stos
xchg
fadd
inc
in
jl
adc
imul
fisubrs
loopne
inc
push
dec
hlt
push
push
push
lret
xor
int3
repnz
or
adc
cmp
popa
orl
and
lret
or
or
addr16
dec
pop
mov
add
call
mov
ljmp
incl
and
leave
mov
lret
pop
scas
int3
imul
inc
adc
stc
test
jmp
dec
testb
int
jmp
or
inc
xchg
and
hlt
int3
xchg
ret
mov
hlt
or
xchg
jnp
push
inc
jae
add
je
inc
test
and
daa
fisubs
ja
cli
jb
xor
mov
adc
std
push
movsl
or
adc
and
jne
lret
pop
mov
push
and
ret
mov
push
aad
les
adc
fs
xchg
fisubs
inc
dec
andb
cmp
adc
inc
mov
subb
cltd
or
rcl
xchg
sub
in
adc
cmpsb
dec
or
mov
mov
lahf
xlat
mov
jge
push
fwait
inc
fbstp
sub
jmp
pop
cs
out
add
mov
lret
or
xchg
cwtl
sbb
cltd
mov
loope
cld
sub
icebp
nop
fiadds
push
clc
aas
sub
mov
sub
lods
xchg
adc
imul
imul
and
and
sti
jge
adc
adc
in
stos
and
andb
shrb
jno
add
shlb
jg
or
jmp
lret
bound
adc
inc
insb
sbb
mov
dec
sub
cli
xor
mov
push
call
cmpsl
and
fidivrl
push
movsl
jne
insl
cmpsl
push
or
jae
test
jmp
jl
fmulp
mov
jns
add
push
xor
or
xor
test
aaa
sub
leave
dec
out
jmp
xor
insl
sub
mov
lds
into
sbb
dec
lock
js
js
xlat
jg
jns
andb
popa
in
inc
push
popf
jo
mov
pop
popa
cmp
push
sbb
enter
imul
pop
sub
cs
in
pop
push
aaa
mov
daa
mov
push
cmp
jmp
cmp
fbld
mov
pop
notl
sub
psubsb
scas
fidivl
xor
cmpsb
out
fadds
mov
jno
cmp
jle
popa
jbe
mov
dec
outsl
clc
arpl
nop
test
loopne
sbb
mov
cs
and
popf
sbb
dec
popf
cmpsl
cmp
xlat
icebp
mov
imul
xor
in
xorb
test
or
stc
aas
scas
push
and
cmpl
mov
test
push
cli
lret
mov
ljmp
xchg
hlt
mov
add
pop
push
mov
jp
xor
xchg
fwait
cld
leave
inc
call
pop
or
ja
lcall
cmpsb
imul
push
lock
mov
out
popa
lret
cltd
cmp
in
and
adc
inc
adc
insb
mov
sbb
psrad
inc
insl
rcrb
pop
jno
incb
xor
out
hlt
mov
jecxz
fsub
jge
ret
mov
pushf
cli
scas
xchg
ret
insl
lods
mov
repz
shl
add
mov
fs
shl
pop
fbstp
fstl
sbb
inc
mov
pop
cld
xchg
jl
dec
sbb
xchg
sbb
loop
and
xor
fnstcw
ds
xchg
xchg
dec
pop
icebp
fiadds
mov
nop
xor
xchg
pop
stos
es
jecxz
imul
or
out
std
jo
mov
xchg
jmp
std
inc
mov
add
subb
rcrb
in
push
add
fwait
xchg
repnz
jecxz
cld
cmp
fwait
mov
in
loop
mov
mov
add
mov
scas
jbe
mov
ljmp
xchg
xor
dec
adc
les
cltd
call
icebp
jle
rolb
test
ret
repz
cmc
pop
push
shrl
popa
push
mov
lcall
inc
mov
je
aas
or
pop
mov
push
cli
pop
cmp
jns
addr16
mov
pop
mov
push
sub
and
sbb
test
cwtl
jae
fsubr
add
in
imul
pop
mov
loopne
sbb
pop
fdivl
out
jbe
jae
imul
add
loopne
icebp
mov
add
xor
or
iret
jno
fs
dec
andb
imul
test
scas
stc
cmpsb
fildll
in
xor
push
jp
pusha
fdivs
adc
std
sahf
cmpsl
xor
scas
sub
imul
xor
xor
sub
scas
in
mov
push
lods
bound
in
and
dec
mov
adc
sub
cmp
xchg
stos
jns
enter
fucomip
or
inc
leave
fcmovne
inc
andb
daa
scas
pop
cmc
jno
or
inc
test
add
ret
adc
mov
add
jp
or
xchg
xchg
daa
shl
out
hlt
fwait
jo
xchg
sub
and
or
xlat
outsl
mov
daa
fwait
popf
imul
inc
and
aas
cmp
adc
xchg
pop
mov
fxam
add
mov
pushf
xor
push
in
cmpb
cmp
jb
bound
xlat
stos
lret
add
xor
pusha
orb
pop
xor
movsl
pushw
cmp
xlat
sahf
jno
test
cmpsb
jmp
sahf
xchg
sbb
ret
sub
lea
xor
bound
inc
xchg
aaa
scas
mov
gs
sahf
push
sti
xor
xchg
jne
jle
pop
sub
push
call
xlat
mov
test
lods
andl
pop
nop
jns
xchg
mov
pop
aam
rcll
sbb
and
add
jne
cmp
pusha
ss
fsubrs
sub
and
bound
shll
mov
dec
repnz
shl
pop
xchg
arpl
inc
enter
gs
push
fs
shlb
cmpsl
lds
mov
sbb
lcall
inc
mov
mov
fs
push
dec
sub
jne
pop
jg
aad
mov
pop
jl
repnz
cmp
pop
imul
cs
repnz
and
add
out
xor
in
popa
inc
cltd
dec
pushf
and
mov
jmp
icebp
lahf
mull
or
lds
popf
xlat
add
lahf
pop
jmp
xor
mov
aas
popa
icebp
nop
pop
out
stos
scas
notl
sub
push
cmpsb
in
mov
jle
dec
fstpt
insl
xor
dec
in
jo
imul
test
aad
xor
mov
outsl
adc
adcb
cmpsl
aas
rorb
fs
mov
lds
in
pop
mov
inc
sbb
in
pop
and
cmp
icebp
movsl
mov
xor
xchg
push
inc
daa
in
js
shrl
mov
cmp
rorl
add
push
adc
cli
je
push
loope
arpl
arpl
subl
inc
rol
pop
cmc
mov
rolb
rolb
test
push
push
shlb
das
ret
cmp
out
mov
cltd
and
adc
loop
mov
lods
jb
pusha
and
cwtl
cmpsb
adcl
call
mov
push
inc
push
jnp
enter
je
and
rorl
mov
inc
repz
push
cmpsb
sbb
or
pop
in
aad
xor
mov
nop
xchg
adc
and
push
inc
ficoml
dec
xchg
or
dec
mov
ret
outsb
aas
repnz
inc
mov
adc
jne
hlt
test
loope
push
stos
sbb
fidivl
sub
or
sub
jbe
lea
in
or
lods
xchg
test
gs
adc
mov
mov
add
jecxz
add
sbbl
push
xor
mov
mov
xchg
pop
pop
inc
fimull
xchg
mov
rorl
xor
pushf
mov
cltd
pop
es
xchg
int3
push
arpl
mov
jae
inc
stos
xor
add
pop
popa
jns
test
sbb
test
shrl
ret
sbb
jb
push
iret
dec
lea
test
mov
mov
jno
ss
jo
add
ja
loope
cs
icebp
je
mov
loope
push
mov
cmpsl
ljmp
int
lds
in
xchg
mov
nop
jno
pop
xchg
ljmp
in
mov
sahf
je
pop
xor
rol
jg
cmp
sbb
lock
lds
mov
bound
popa
add
shll
dec
push
sahf
movsl
aam
mov
jne
jnp
and
sub
and
mov
xor
push
push
or
xchg
mov
movsl
js
leave
add
shl
movsl
test
or
cmp
or
cmp
test
push
and
sbb
fmul
mov
in
xor
xor
in
pop
pop
les
hlt
enter
jns
sub
cmp
inc
sub
lret
cltd
repnz
push
daa
pop
push
dec
movups
sub
pop
push
sbb
loopne
sarl
in
xchg
mov
push
push
je
xchg
dec
pop
fisubl
xor
btc
or
and
icebp
nop
dec
out
xlat
sub
ljmp
mov
xchg
add
addr16
or
xchg
mov
inc
ret
and
push
insl
push
stos
mov
daa
in
in
xor
xchg
push
mov
sbb
push
addl
das
dec
pop
jp
aad
xchg
push
pop
cmp
or
das
mov
cmp
jge
test
int
stc
daa
ds
movsb
mov
imul
iret
mov
shll
cmp
pop
xchg
xchg
inc
mov
pop
ljmp
out
insl
jns
mov
scas
cmp
push
jg
and
add
sbb
mov
dec
loopne
mov
addr16
jge
dec
pop
es
lahf
and
push
in
movsl
sbb
lret
and
lret
lahf
mov
mov
sub
fcomip
cmp
je
dec
lds
rcrl
xchg
pop
imul
cmp
dec
aam
insb
push
popa
fsubrs
std
scas
and
stos
mov
and
orl
push
pop
in
into
push
dec
subb
mov
ficomps
clc
lahf
jo
jo
pushl
mov
xchg
mov
je
icebp
cmp
movsl
push
mov
mov
push
jnp
std
inc
xchg
fs
ja
jp
pop
mov
adc
outsl
xorb
cmp
sbbb
jge
dec
popa
sub
or
movl
dec
jae
pusha
sti
icebp
adc
rorl
adcb
pop
jg
adc
inc
sbb
insb
fisubrs
int
xchg
call
or
adcb
and
push
mov
mov
xchg
dec
xor
mov
out
in
jmp
mov
into
mov
mov
dec
dec
sub
popf
push
lret
xchg
pop
dec
xlat
sbb
xor
scas
mov
push
clc
jno
add
sub
mov
cmp
rorl
push
dec
push
stc
jl
dec
sbb
pop
clc
add
imul
test
cmc
dec
ljmp
and
inc
comiss
and
jns
sbb
dec
lds
loope
in
fwait
nop
imul
jp
pop
enter
and
mov
and
sbb
lods
dec
fisttpl
mov
aaa
stc
jnp
lret
push
movsb
mov
aam
or
mov
dec
mov
push
ja
xchg
or
loop,pn
lea
shrl
jb
ds
gs
ror
mov
pop
aaa
frstor
ja
mov
imul
dec
dec
jecxz
jmp
std
xor
lds
sahf
gs
call
scas
cli
rcll
nop
out
ljmp
dec
xor
stc
das
xor
cwtl
test
outsb
or
out
inc
jns
out
pop
xchg
insl
jnp
ss
jle
sahf
xor
push
icebp
gs
filds
pop
rorl
addr16
test
insb
pushf
dec
out
pop
nop
fldcw
lahf
mov
add
cld
xchg
lahf
pop
lea
movsl
les
adc
pop
push
jns
fsubl
dec
test
push
or
popa
push
movsb
and
sti
sbb
adc
lds
sub
gs
and
or
std
inc
mov
jp
scas
imul
sahf
ret
stc
or
add
sbb
in
les
dec
pop
xor
and
loopne
mov
inc
test
jmp
stos
mov
in
dec
push
jecxz
push
and
nop
add
adc
or
and
push
mov
aam
jge
add
out
negb
inc
or
adc
or
sub
jnp
aad
lret
xorl
push
fisubs
fisttpll
sub
lret
enter
lds
loope
xor
or
fsubs
or
xor
push
jne
stos
mov
adc
in
push
mov
fnstenv
mov
sbb
in
push
mov
push
cltd
jmp
and
dec
imul
movsl
mov
jmp
cmp
shrl
sbb
jb
leave
in
scas
dec
arpl
pop
xlat
jb
lods
ja
xchg
sub
imul
cmp
out
and
adc
out
out
sbb
sub
lret
jb
or
es
stc
cli
jne
xchg
push
jmp
xchg
pop
mov
jb
mov
mov
or
scas
dec
in
pop
sub
dec
dec
aad
call
pop
test
add
push
adc
jge
int
icebp
xor
mov
fsts
popf
sbb
out
cmp
add
fldl
xor
arpl
lret
xor
xchg
icebp
rcrb
xchg
das
cmpsl
xor
and
adc
mov
testl
int3
aaa
sahf
cmpb
pop
addr16
or
inc
sub
pop
add
dec
dec
sub
mov
ljmp
sbbb
in
inc
push
push
mov
mov
test
push
dec
add
outsb
sub
xchg
pop
mov
cmp
adc
inc
fcomi
xor
jmp
mov
ja
xor
pop
or
inc
test
iret
xor
jne
jl
xchg
and
cmp
adcb
pop
pop
push
cmp
and
iret
sub
scas
pop
mov
cmp
scas
push
or
push
imul
mov
sarb
push
sahf
in
stos
icebp
fcmovnb
daa
or
xor
lods
add
sbb
ret
xchg
or
icebp
sbb
or
mov
sbb
mov
jne
xchg
pop
mov
xchg
mov
lea
into
sub
stc
cmp
xor
mov
scas
xchg
mov
and
xlat
inc
pop
cmp
dec
subb
popa
cmp
lcall
mov
je
mov
iret
mov
adc
out
jns
fistpl
pop
adc
dec
imul
popf
dec
jle
clc
stos
jg
popa
pop
popf
arpl
inc
mov
inc
mov
pop
ret
sub
xchg
xchg
mov
add
jo
dec
lock
adc
mov
cmp
scas
mov
shl
mov
loope
ficomps
out
fs
es
fldenv
out
push
mov
or
fnstsw
push
and
ljmp
es
insl
jne
ret
sbb
and
stc
sub
dec
mov
sub
andb
jl
cmp
sbb
jmp
int
sahf
mov
fwait
add
int
xor
inc
leave
lds
je
outsl
aaa
push
ja
mov
into
jecxz
lahf
xor
pop
add
xor
cmp
add
adc
mov
repz
and
sub
stos
jmp
sti
dec
hlt
adc
clc
in
dec
fidivs
push
ret
cwtl
pop
rcrl
jge
outsb
jp
leave
push
lea
or
mov
aaa
decb
frstor
mov
inc
push
ret
sbb
lods
mov
xchg
mov
and
jns
sti
inc
cmp
jg
cmp
stos
test
daa
xchg
fcompl
push
cmp
mov
je
add
jo
or
dec
mov
lcall
and
enter
or
mov
sbb
dec
sub
lds
rcrl
in
out
sbb
sti
mov
out
lods
jno
fsubp
in
mov
mov
hlt
ja
stos
add
aaa
push
insl
mov
cmp
pop
inc
pop
jg
pop
insl
cmpsb
ss
inc
insb
addl
inc
addl
sbbb
sbbb
xchg
jle
or
pushf
dec
aad
mov
mov
xchg
insl
and
bound
aas
mov
xchg
outsl
pop
jne
sub
mov
dec
lock
aad
sbb
hlt
push
shrb
aam
mov
adcl
fs
lods
dec
dec
dec
xlat
outsb
cmp
sbb
and
sub
inc
cli
insb
add
mov
push
push
mov
push
sahf
orb
sub
adc
lret
ja
push
bndldx
mov
mov
sbb
pop
push
cmp
loop
xchg
xchg
popa
xor
xchg
mov
pop
xlat
fsubl
xor
dec
push
mov
clc
mov
push
mov
bound
lds
lcall
xor
mov
iret
mov
mov
push
in
nop
fbld
bndstx
clc
push
out
inc
gs
jae
fists
int
shl
sbb
fiaddl
jg
xchg
scas
adc
lea
out
sub
fwait
push
iret
cmc
xchg
inc
mov
mov
lcall
mov
insb
loopne
add
mov
cmp
in
in
mov
mov
cmc
test
outsb
fstpl
stc
and
jecxz
les
repz
out
pop
xor
sbb
inc
jle
sar
jnp
push
jno
mov
stc
fwait
adc
sbb
and
push
rcll
pop
out
subb
and
ja
or
es
mov
std
in
mov
xchg
imul
mov
push
or
pop
fwait
cmpsb
dec
icebp
dec
rcl
ret
setno
rolb
incl
xchg
rcrb
mov
lds
inc
pop
mov
xchg
jmp
testb
jp
add
add
push
fdivrs
in
inc
enter
pop
cmc
in
fildl
jg
mov
in
pop
ret
mov
cmp
movsl
adc
fcomps
out
push
out
dec
vmovq
add
cmp
pop
cmp
imulb
js
or
iret
popl
pop
lcall
and
test
gs
mov
mov
xchg
negl
std
gs
pop
lret
add
mov
xorl
xchg
incl
sti
xchg
mov
outsl
or
insl
in
std
push
sub
repnz
stos
dec
xlat
in
lock
out
xchg
aas
mov
and
loope
push
xchg
lret
sub
mov
pop
scas
adc
pop
ljmp
call
addr16
lods
lahf
sub
movsl
sbb
sub
shl
outsl
sar
adc
dec
mov
dec
or
das
push
pushf
jo
icebp
mov
xlat
push
and
jns
mov
jnp
and
pop
icebp
push
sub
inc
stos
mov
xchg
fildl
adc
cltd
test
pop
dec
test
mov
jbe
xchg
xor
rol
sbb
shlb
js
push
add
dec
fisttps
je
inc
mov
cmp
xchg
xchg
fidivrl
push
dec
jns
pop
scas
dec
cmpsl
cmp
inc
into
sbb
int3
adc
jb
sub
pop
shll
push
iret
stos
ds
xchg
add
xchg
cmp
test
repz
cmp
pop
scas
fnsave
cs
mov
inc
push
js
mov
pop
jg
sub
sbb
or
adc
jnp
sbb
outsl
movsb
call
outsb
and
push
add
test
push
push
rorl
xchg
pusha
fcomi
mov
jg
sub
and
mov
loopne
movsb
jns
push
or
mov
cmovae
adcl
les
inc
cmp
loop
js
mov
and
ds
cmpsb
add
sbb
mov
enter
mov
roll
repnz
js
xor
and
fildll
mov
xor
add
pop
or
test
in
pop
cmpsb
xchg
pop
push
out
aad
inc
cmp
push
jbe
push
mov
adc
nop
sbb
mov
mov
mov
jb
inc
das
push
ficompl
rolb
xor
push
fmul
jecxz
xor
aaa
leave
shll
mov
xchg
bound
pop
xorb
push
xor
sbb
sub
in
das
inc
into
jp
pushf
sbb
jae
xchg
jp
pop
and
sbb
mov
pushl
push
ja
shl
jmp
fwait
or
mov
jns
xor
mov
sbb
addr16
pusha
mov
out
lea
lret
std
lods
pop
les
adc
stos
push
push
popa
cmp
fsubrs
mov
loopne
stos
push
stc
and
mov
adc
jae
imul
jmp
cmpsl
xor
or
jmp
mov
shrl
inc
in
jl
gs
scas
lret
loop
icebp
cwtl
in
or
push
repz
dec
lahf
sbbl
mov
mov
jb
push
push
inc
sbb
shl
mov
fwait
insb
pop
fstl
fbld
cltd
mov
xchg
lcall
add
std
lea
inc
push
cmpl
pop
pop
pop
call
xchg
aas
sbb
xchg
stos
sbbb
add
fmull
arpl
in
cmp
mov
xor
leave
mov
adc
add
push
mov
and
js
mull
es
movsb
fucomi
fwait
cli
mov
or
imul
fs
xchg
dec
fiadds
adcb
jle
pop
mov
popf
adc
mov
push
cmp
lea
test
xchg
es
or
aas
sbb
mov
jle
hlt
push
dec
dec
or
jecxz
shr
dec
in
mov
mov
xor
push
jmp
pop
ljmp
mov
in
cmpsb
add
mov
lcall
ficoms
push
mov
mov
sbb
sub
pop
mov
roll
dec
popa
out
mov
or
cmc
sub
stc
nop
arpl
xchg
fists
pop
lret
mov
pop
repz
arpl
mov
push
inc
iret
jmp
jmp
lea
push
push
xor
hlt
pop
loop
es
sbb
sub
xchg
push
mov
mov
and
movsb
roll
and
mov
lret
hlt
notb
addr16
in
jg
aaa
mov
scas
inc
inc
addl
into
cmp
mov
fimull
dec
cmpb
jo
nop
jl
dec
lock
adc
into
xchg
jp
imul
dec
rorl
adc
inc
aam
inc
fucomi
dec
dec
sbb
lret
add
sti
es
mov
mov
push
xchg
mov
mov
push
push
mov
and
or
and
sti
add
sti
out
sub
xor
sti
popa
and
clc
and
xchg
jmp
lods
mov
cmp
cmpsb
inc
inc
hlt
imul
pushf
fs
xchg
or
mov
in
and
loope
mov
adc
test
pop
xor
and
adcb
js
out
mov
fisttps
cwtl
test
clc
jnp
or
xchg
sub
pop
add
nop
in
jmp
push
pop
icebp
ljmp
sbb
jmp
lods
cmp
repnz
rolb
push
dec
movsb
mov
mov
adc
mull
dec
inc
pop
lock
sub
sbb
ds
inc
call
push
jmp
mov
in
pop
hlt
aaa
sbb
stos
jo
push
mov
adc
mov
std
jecxz
fcmove
adc
aaa
hlt
and
ret
mov
icebp
into
and
addr16
sub
mov
mov
test
xor
pop
std
add
xchg
inc
jp
popf
in
call
xor
sub
or
or
mov
or
cmpsl
stc
shll
neg
xchg
in
in
dec
in
nop
or
or
xchg
arpl
mov
or
movsb
cmp
dec
push
cmpl
or
push
js
mov
mov
fidivrl
stc
scas
outsb
and
cmp
pop
repnz
adc
pop
xchg
cs
jno
bound
sbb
jae
add
sbb
enter
mov
adc
lret
cltd
repnz
in
xchg
int3
push
out
cmc
and
adc
lea
shrl
mov
cmp
push
mov
pop
adc
shlb
dec
bound
in
sub
cmp
inc
daa
sbb
sub
leave
jae,pn
or
sub
fisubs
mov
fisubrl
into
gs
in
das
ljmp
add
jnp
mov
imul
pop
das
ret
or
fsubr
and
or
adc
push
jp
loop
ljmp
repnz
and
popa
aad
pop
jle
cmp
jl,pn
add
mov
jg
xlat
cmp
repnz
and
test
mov
ja
lcall
or
inc
xchg
xorl
outsl
mov
or
dec
fwait
pop
inc
jmp
nop
jnp
jl
adc
out
iret
pushf
sub
xor
in
mov
mov
movb
gs
push
test
mov
scas
cmp
push
sub
movsl
sbb
fisubl
xor
std
mov
sub
fcmovnu
and
mov
sti
and
push
or
subb
fistl
inc
pushf
aaa
cmp
enter
push
jmp
ret
dec
in
aaa
jae
push
mov
pop
movsb
mov
fsubp
add
cmp
jmp
sub
repz
aaa
repz
daa
inc
sub
cmp
jb
popa
xchg
jg
lret
dec
es
loopne
jbe
sub
add
mov
mov
loope
xor
xor
xchg
or
dec
mov
ret
mov
sub
jp
rol
pop
inc
pop
xchg
fbstp
cmp
sub
rclb
sbb
xor
lods
cmp
mov
into
dec
and
std
or
ret
push
cmpl
leave
lea
inc
jge
mov
jae
leave
int
std
mov
fstp
vcvttsd2si
cmp
cwtl
pop
imul
stc
and
push
lahf
pop
jo
inc
push
jb
push
xchg
cwtl
push
xchg
ret
scas
shl
jmp
data16
cmpsl
mov
or
test
mov
xchg
popa
cld
in
in
lds
neg
inc
push
inc
xchg
and
lcall
mov
xor
aaa
mov
nop
ljmp
aam
dec
and
dec
mov
cmpl
push
je
mov
xlat
lods
xor
adc
jl
jmp
popf
sub
dec
sub
or
rorb
jg
pushf
mov
leave
mull
icebp
mov
lahf
xlat
mov
pop
repnz
push
jo
sub
xor
or
mov
mov
les
fcmovbe
xchg
cs
scas
add
pop
repz
fnsave
and
pop
dec
rorb
fcmovnb
insb
xor
inc
scas
outsb
test
ror
dec
add
andl
stos
sarl
enter
and
push
xor
ret
std
nop
mov
rclb
pop
mov
mov
push
xlat
ret
vmread
push
fnstenv
leave
test
in
js
popf
adc
cmp
in
xchg
xor
sbb
test
dec
jno
es
cwtl
mov
and
adc
add
mov
aas
add
inc
jno
inc
hlt
roll
cwtl
add
sub
pop
inc
in
ljmp
lcall
mov
rcll
das
les
mov
andl
push
lds
or
jl
and
loop
out
lods
sti
pop
test
mov
stos
test
push
mov
movb
andb
xchg
addr16
xchg
stos
iret
dec
or
jns
icebp
addl
ret
iret
rcrl
jl
lgs
loope
enter
pop
in
clc
cmp
call
ss
lahf
jmp
leave
rorb
repnz
push
jge
clc
sbb
cli
test
sbb
or
fwait
push
dec
cmpsl
inc
in
sub
movsb
cmc
xchg
jp
dec
scas
mov
sbb
mov
or
dec
loopne
aas
xor
cmpb
or
dec
in
xor
insb
lahf
pusha
and
adc
sti
fbld
cld
dec
lret
cmpl
hlt
lea
aam
adc
sbbl
aaa
in
and
and
dec
add
jmp
sbbl
xchg
movsb
lock
mov
outsb
pop
test
push
cmpb
lods
jecxz
jg
hlt
jmp
loop
int
push
rolb
in
jns
cmc
movsb
test
js
inc
and
leave
iret
ss
lret
adc
add
vdivsd
jg
pop
add
mov
dec
loop
adc
adc
push
cmp
sahf
sub
and
push
ljmp
pushf
xor
or
insl
mov
ss
test
out
jno
stos
sub
sub
mov
rol
stc
fistpl
lds
dec
in
sar
ret
pop
cmp
pusha
xor
movsw
adc
push
dec
add
mov
andl
inc
lahf
aaa
jno
nop
mov
lods
idivb
shrl
stos
mov
shlb
icebp
cs
aaa
in
dec
nop
push
pop
push
push
jg
sbb
in
pop
pop
data16
movsb
add
adc
add
xchg
mov
push
inc
cltd
push
adc
fs
ds
test
xorb
pop
jo
fadd
lea
adc
iret
sbb
aad
ret
cmp
sbbl
sahf
push
out
sti
jbe
fcmovnbe
cmpsl
aaa
pavgb
pop
cmp
decl
xor
sbb
aad
sbb
notb
xor
sbbl
out
lahf
sahf
xchg
push
push
mov
adc
adc
xchg
push
xlat
add
xor
pusha
fnstenv
xchg
mov
testb
push
stc
mov
in
cs
icebp
loope
xor
js
jle
jl
mov
popf
lret
jle
jne
xchg
daa
mov
adc
push
inc
out
push
jmp
jmp
sub
xor
mov
rolb
add
xor
push
in
bound
mov
imul
shlb
add
mov
xchg
inc
mov
push
pop
jmp
arpl
loope
loop
adc
das
pop
dec
mov
add
stos
lret
jbe
daa
push
xor
js
pop
adcb
fwait
inc
shrl
cmp
mov
push
fnstenv
fmulp
pop
cmp
or
xchg
cli
mov
xor
push
roll
jl
imul
add
xor
das
in
pop
xchg
pop
xor
cmp
inc
jl
jnp
mov
pop
and
ljmp
inc
cmp
and
outsb
aaa
movsl
pop
roll
sbb
outsl
lahf
fnstenv
out
pop
out
fidivs
fists
insl
push
stos
imul
mov
inc
mov
ret
jp
jno
xor
fsts
sbb
jns
les
stos
outsb
sub
nop
jbe
std
es
xor
xchg
ja
dec
push
int3
lret
cs
popf
mov
fidivrl
sbb
inc
inc
or
clc
cmp
call
add
lret
cmp
lahf
shll
inc
mov
and
sbb
mov
mov
push
gs
push
cmpsb
imul
inc
cmpsl
lods
xor
jle
cmp
fwait
inc
loopne
xor
lahf
mov
lret
jp
mov
in
dec
rcll
rcrb
mov
pop
rcrl
scas
mov
or
rorb
loop
add
in
arpl
mov
mov
bound
xchg
ret
ds
sbb
out
mov
xadd
push
jbe
pop
mov
xchg
lcall
or
arpl
popf
negb
repz
or
aam
aaa
aam
js
lret
lret
mov
add
js
outsb
lds
icebp
dec
dec
aam
ljmp
loopne
int
sbb
es
push
ljmp
out
test
and
jbe
dec
mov
xor
add
out
hlt
inc
cmc
mov
iret
pop
repnz
scas
rol
cs
inc
dec
and
outsl
add
insl
test
jae
ror
xor
mulb
xchg
adc
dec
mov
std
jb
mov
sbb
nop
cmp
icebp
xor
push
sbb
cmp
mov
dec
aam
and
pop
mov
aas
sbb
pop
mov
mov
sub
sti
rclb
add
int
ret
jecxz
push
stc
fiadds
pop
push
jmp
bound
pop
xchg
mov
mov
xchg
nopl
dec
and
jecxz
ret
lods
test
lock
icebp
lea
mov
pop
out
xchg
cmp
lock
sbb
lds
jbe
pop
mov
loopne
adc
lea
test
loop
cmp
insb
fs
sbb
stos
shll
cmp
repnz
lret
jb,pt
lock
dec
std
xchg
repnz
pop
in
testb
cmp
in
and
hlt
cmp
rcll
fmul
in
jmp
xchg
icebp
jle
xor
frstor
inc
dec
mov
sub
ljmp
aas
dec
jae
test
mov
std
or
inc
mov
or
sbb
es
or
mov
incl
shrb
mov
and
in
ja
xchg
xor
jo
insl
movl
stos
mov
sahf
dec
or
mov
and
fldcw
jne
mov
movsb
jmp
mov
test
jg
push
lret
sbb
mov
xchg
mov
add
out
test
cwtl
add
xchg
int
icebp
test
iret
mov
fs
rorb
adc
lds
loop
imul
test
mov
test
add
dec
repz
xor
or
das
mov
xchg
test
adc
test
jle
imul
push
stos
mov
push
lret
shll
xchg
dec
jl
hlt
in
out
add
aad
bound
test
dec
pop
pop
cmp
shll
or
inc
push
ja
loope
cmp
cmp
mov
pop
or
xor
pop
loop
xor
sub
push
mov
cmc
push
repz
fwait
adc
lods
mov
decl
xor
and
dec
cmp
sbb
dec
xor
notb
sti
jo
aam
cli
push
jge
pop
xor
loop
insb
jle
mov
jno
loope
mov
test
sbb
fwait
cmpsl
push
inc
pop
gs
aam
adc
push
push
fldenv
ja
pop
cmp
dec
scas
ret
out
dec
sbb
sub
shll
mov
popa
mov
mov
mov
mov
sbb
add
xor
push
loope
loope
or
push
jbe
cs
inc
mov
cmp
xchg
sub
sbb
dec
clc
test
movsb
aaa
fldt
ja
ljmp
push
clc
adc
ljmp
rorb
jl
shrb
add
insl
pop
jno
pop
int3
scas
jno
loope
mov
pop
adc
pop
mov
in
in
adc
fsubrl
jmp
dec
pop
scas
xor
fbstp
shll
inc
loop
lcall
and
mov
ja
xchg
pusha
pushf
movsb
push
add
pop
call
mov
dec
xchg
jmp
mov
and
mov
mov
and
push
jb
arpl
mov
mov
jno
xor
inc
mov
dec
lret
shlb
imul
cwtl
fnstsw
inc
adc
mov
lods
and
out
lcall
lcall
loopne
popf
sbb
sub
sub
test
mov
gs
xchg
popl
xor
cltd
xor
xchg
int
ret
shl
or
mov
push
loopne
stc
xor
mov
ficomps
test
add
test
jbe
stos
xchg
fwait
mov
mov
jmp
mov
pop
jnp
pop
xor
repz
xlat
mov
mov
rcrl
mov
div
lret
dec
mov
ret
xor
int
adc
sbb
inc
imulb
inc
and
test
aam
rol
int3
imul
bound
or
sub
cmp
int3
xchg
pop
bound
pop
loopne
cmpl
inc
frstor
nop
int
inc
push
filds
imul
sbb
icebp
jnp
or
mov
clc
cmpsl
neg
and
push
cmovp
jecxz
xor
shll
mov
jbe
or
push
mov
mov
mov
imul
cmp
add
jl
shld
xchg
pop
shrl
adc
ljmp
cli
xor
mov
cmc
mov
fstpt
or
rorl
stos
pop
outsl
mov
adcl
aaa
into
dec
int3
shll
pushf
mov
jae
sub
lock
inc
xchg
adc
cmc
cmp
in
sbb
dec
mov
jo
sahf
sub
inc
push
std
and
adc
inc
out
std
and
mov
jns
xchg
pop
cmpsb
mov
mov
cmp
mov
cmp
mov
dec
mov
pop
push
aam
sbb
out
pop
hlt
hlt
add
js
or
call
xor
xorb
cs
pop
jo
add
add
movsb
shlb
adc
out
pop
es
sbb
cli
lret
or
aas
and
out
movsl
xor
iret
subl
mov
dec
icebp
lods
movsl
cmp
sbb
cmp
fnstcw
sbb
jns
dec
rclb
mov
push
scas
sahf
into
test
mov
pusha
add
into
mov
adc
pop
call
mov
mov
arpl
inc
pusha
sbb
test
pop
lods
lds
lcall
addr16
sbb
cwtl
addb
dec
jbe
jg
xor
stos
fcoml
sbb
lea
cmpsl
popf
loope
xchg
jle
ljmp
mov
push
or
jne
jp
xor
test
cmp
adc
jne
add
fstpt
clc
dec
mov
jmp
bnd
scas
mov
pop
fisubrs
fcmovb
mov
fdivrs
sub
pop
cmp
jns
push
stos
orb
insl
rcll
jp
sub
test
cli
pushf
arpl
testl
add
pushf
mov
add
fsubrl
push
test
dec
ss
les
push
int3
enter
mov
cltd
test
dec
test
mov
sahf
fbld
iret
mov
adc
xlat
jle
cli
cli
pop
mov
xor
push
jno
cli
or
popaw
push
mov
mov
jge
sub
fcoml
push
mov
mov
push
mull
pop
int3
xor
mulb
mov
es
aas
shr
or
daa
xchg
or
sbb
cltd
cmpsl
and
cmp
sahf
mov
stos
jae
popf
lock
mov
add
xchg
and
aaa
icebp
adc
mov
sbb
iret
bound
mov
push
std
andl
adc
das
cltd
test
ret
jo
cmp
or
jg
push
test
rolb
fucomp
jg
jl
shrb
stc
pusha
in
movsl
push
mov
mov
jge
xchg
out
xor
or
daa
int3
pop
jb
add
push
scas
cmp
push
out
dec
in
lods
fsubl
movsb
repnz
test
adc
push
mov
int3
rclb
push
add
adc
mov
ret
sbb
add
and
mov
jnp
ficomps
xor
and
push
popf
cwtl
test
push
inc
add
dec
gs
int3
sbb
js
ss
mov
clc
jmp
aaa
lea
sbb
fidivrs
pop
js
aad
cld
outsb
add
dec
xlat
repz
push
repnz
repz
stos
and
subl
sbb
gs
lcall
xor
jb
cwtl
mov
adc
arpl
subl
and
imul
insl
jl
fisubrl
jg
fiaddl
ficompl
pop
js
lret
jp,pn
arpl
dec
inc
or
stos
xchg
pop
pop
mov
or
stos
outsl
xor
test
dec
cmp
dec
mov
mov
cwtl
xchg
rcr
mov
addr16
mov
lcall
jecxz
push
cmp
jecxz
test
mov
pmaddwd
fnstenv
pushf
movsl
add
push
xor
icebp
pop
dec
clc
inc
lods
popa
cmp
lods
lds
dec
and
jl
fidivl
out
fnstsw
lret
pop
lret
and
xor
adcl
jno
sub
add
add
push
insb
orb
fsubr
mov
add
fucomip
rcll
test
xor
fdivrl
inc
xlat
ret
mov
test
dec
xor
mov
fs
popa
mov
mov
into
dec
mov
ja
inc
pop
cmp
jecxz
cld
fnstcw
mov
sbb
pop
adc
add
jne
sub
sub
lret
loope
ss
and
push
les
call
aam
adc
add
int3
jecxz
xchg
adc
mov
popf
data16
xchg
outsb
je
out
repz
cmpsb
icebp
pop
shrb
push
and
sahf
jge
stos
das
mov
fldt
sub
xor
push
enter
sub
xor
or
mov
test
ljmp
push
mov
repnz
mov
or
lahf
mov
pusha
out
push
push
movsb
adc
jae
and
or
ret
sarb
xchg
inc
mov
mov
shrl
dec
sahf
lret
stos
pop
fcoms
pop
cmp
std
outsl
push
gs
cmpsl
cmpsl
mov
mov
test
mov
pop
mov
mov
aam
rcrl
in
mov
dec
xchg
add
or
inc
inc
or
jb
cmp
and
addr16
inc
notb
mov
sub
cmpsl
jecxz
enter
filds
imull
scas
pop
loop
pop
icebp
sarb
xchg
or
push
lahf
pop
cmp
ja
dec
cmpsl
pop
popf
push
mov
outsl
rolb
ljmp
lea
gs
outsb
subb
jmp
fistl
ret
cld
lret
jge
adc
lret
jo
pop
repnz
stos
xchg
adc
enter
lahf
pop
jmp
ss
lods
call
in
jo
xchg
mov
outsb
inc
push
mov
xchg
add
fisubl
sti
sub
decb
subl
decb
cmc
or
mov
adc
push
out
mov
add
and
push
enter
push
rorl
shll
adc
popf
jl
dec
rclb
push
in
js
hlt
test
mov
lock
or
dec
add
aas
and
cld
jecxz
push
jb
mov
shl
xchg
mov
sahf
jmp
jns
lods
mov
leave
roll
push
outsb
in
push
std
andb
jmp
jb
xchg
dec
fidivl
dec
dec
sbb
jnp
ljmp
xor
mov
les
xlat
lea
push
out
dec
add
stos
mov
inc
dec
xchg
aad
movsb
cmp
ja
jmp
insb
ret
test
xorb
pop
sahf
or
jno
insb
add
test
cmp
lods
lds
dec
and
jb
aaa
lret
mov
add
orl
call
sub
sub
push
pop
ja
hlt
lods
pop
xlat
push
xchg
pop
jg
cltd
and
sub
mov
push
mov
test
rorb
insb
loop
and
pop
sahf
push
lret
sub
out
dec
adcl
jns
int3
pop
sbb
xchg
dec
jge
sub
pop
mov
iret
jecxz
rcll
and
dec
test
inc
cs
jne
je
jo
push
sahf
inc
push
outsb
data16
fs
lods
inc
mov
daa
inc
mov
lret
cs
das
xlat
jne
scas
shl
adc
insb
fmuls
and
xchg
scas
fstpl
lds
std
xchg
sbb
stos
xchg
popa
mov
decl
fneni(8087
pusha
add
jno
data16
adc
pop
jmp
test
push
faddl
jl
push
jle
sbb
mov
xchg
mov
sti
std
sub
dec
sti
xchg
sub
lahf
js
xchg
jb
cmc
mov
fdivrl
inc
push
fwait
js
cld
lret
ret
sbb
sbb
inc
or
lods
add
jbe
or
and
bound
flds
mov
mov
fnstenv
push
push
scas
xchg
adc
cli
and
lahf
mov
leave
push
jle,pn
dec
add
mov
and
ljmp
mov
xlat
cld
push
paddsb
push
or
cmp
gs
adc
icebp
sti
adc
out
add
or
call
add
and
xchg
jne
mov
inc
movsl
jg
ret
or
dec
mov
cmp
out
xchg
push
sub
fwait
jns
rcl
stos
in
pop
push
dec
mov
inc
call
leave
sub
push
sbb
mov
std
inc
or
aaa
mov
pop
push
inc
adc
mov
jbe
or
outsb
in
aam
lret
out
pop
and
or
cmp
popf
cmpsl
or
mov
in
inc
pop
pop
inc
inc
pop
jbe
and
mov
pop
fcomps
jb
xor
cmp
cmpsl
es
mov
cld
lcall
cwtl
stos
add
sub
in
dec
mov
pop
aaa
leave
pusha
scas
cld
scas
adc
inc
test
jnp
pusha
lods
push
or
inc
ljmp
repnz
cmp
mov
nop
jl
sub
test
pushf
scas
push
mov
xor
daa
cmpsl
ds
les
fstpl
movsl
ret
in
out
add
ss
imul
inc
and
and
push
fmul
sahf
scas
dec
adc
mov
xchg
jbe
cmpsb
les
push
cltd
insb
jmp
cltd
add
pop
or
push
push
cmp
or
mov
cmp
push
test
cmp
mov
xchg
out
jb
or
and
jnp
dec
ror
icebp
dec
inc
fnstenv
sub
mov
xchg
jp
jge
dec
cmpsl
pop
jmp
testl
sub
sti
xchg
pop
cs
gs
sub
sub
test
mov
aaa
xchg
addr16
insb
mov
jns
mov
ficompl
add
outsb
popf
sbb
shll
out
stc
inc
fdivl
mov
mov
mov
rcr
adc
js
in
test
lea
push
ret
repz
mov
clc
jns
sub
out
flds
push
mov
add
cmpsb
xchg
pop
cmc
enter
ljmp
fs
ljmp
pop
or
out
pop
push
push
cli
xchg
xchg
out
sub
in
inc
sbb
loopne
push
lea
jbe
mov
ss
popf
dec
sbb
sbb
repz
dec
xchg
xchg
mov
push
jne
shll
aad
pop
fnstcw
fstps
fmuls
mov
int
xor
push
jle
movswl
mov
ss
push
mov
pop
imul
mov
lret
push
addb
mov
or
mov
push
repnz
xchg
dec
push
cld
fsubrs
ret
pop
mov
daa
cmp
add
mov
rcll
jno
into
ja
or
mov
mov
mov
fwait
cmp
cmp
jb
xchg
xorb
adc
cmpsl
xchg
in
xor
push
pusha
cmp
bound
hlt
mov
fnstcw
aad
add
repz
or
rsqrtps
add
mov
fcmovnu
mov
ror
rcl
ja
cwtl
sub
xchg
jmp
sti
xchg
data16
and
aaa
fsubl
bndstx
xchg
outsb
stc
mov
mov
jecxz
adc
mov
pop
cmpsb
out
jge
scas
mov
pop
not
out
fnstenv
fcompl
xor
xchg
jnp
cmp
inc
lahf
imul
ret
sbb
push
jb
jb
or
mov
cld
movsb
inc
sbb
xor
sbb
jl
xor
xchg
in
rolb
xchg
sbb
lea
in
ret
lock
mov
pop
out
cmpsb
push
jge
or
test
push
inc
and
out
leave
adc
sub
pop
add
shl
shlb
mov
mov
aaa
xchg
dec
dec
sbb
in
jns
aam
push
xchg
sahf
pusha
repnz
nop
iret
and
push
lock
jg
enter
aam
cltd
out
mov
addr16
orl
int3
and
xchg
push
mov
add
add
sbb
faddp
inc
dec
dec
in
pop
sbbl
adc
pop
int3
adcl
repz
into
or
sub
inc
lods
int
inc
dec
sub
insl
iret
clc
ds
push
stos
xor
jbe
hlt
cmpsl
add
mov
mov
push
mov
push
test
xor
jo
mov
jb
insb
mov
or
arpl
xchg
jne
scas
int
int3
jg
push
mov
add
push
inc
jle
mov
add
test
fsubrp
enter
dec
loop
call
in
or
rolb
dec
cmp
jle
xchg
lods
stos
lea
mov
jge
pushf
mov
push
cwtl
xor
cmp
jb
pop
and
mov
jnp
jb
pop
cmpsb
in
stos
mov
out
sbb
xor
mov
fs
xchg
mulb
lods
cmp
mov
jae
dec
xor
cmp
loop
cmpsb
popa
jns
fsubrl
pop
call
ficoms
pop
cmp
inc
pop
insb
sbb
gs
mov
imul
neg
fcomps
jnp
jnp
fnstsw
cli
or
aaa
xchg
fnstsw
push
or
bound
hlt
loop
sahf
stc
sbb
adc
scas
jl
decl
shl
aas
xlat
xchg
pop
in
add
mov
add
pop
sub
xchg
add
mov
out
adc
test
fsts
pushf
or
adc
lods
sbb
cli
mov
sub
in
cmpsb
testb
lods
leave
push
push
nop
popf
insb
sbb
xchg
xchg
add
or
push
mov
xchg
call
popa
mulb
pop
adc
sahf
and
xchg
xchg
in
mov
test
cmpl
sbb
in
xchg
cli
push
ja
adc
xchg
into
inc
fdivrl
and
cmp
push
xor
insl
sub
ss
inc
xchg
mov
inc
push
xchg
push
clc
mov
push
jnp
in
popa
loopne
jno
aaa
mov
pop
mov
in
test
int3
ljmp
or
xlat
jns
test
push
xor
pop
inc
push
jae
shll
sub
nop
adc
je
lea
add
das
sbb
cs
cmpsb
adc
mov
es
jne
ret
stc
mov
xchg
mov
imul
mov
divb
sub
mov
movsb
adc
call
and
fdivs
in
jae
aam
dec
jmp
rcrb
outsb
mov
push
loop
jmp
cmp
mov
daa
mov
push
dec
dec
lea
mov
call
lret
or
aaa
pop
iret
movsb
mov
mov
mov
cmpsb
lock
xchg
sub
ja
addr16
push
mulb
sub
sbb
cmpsl
push
push
sbb
mov
cmp
xor
dec
sub
pop
cmp
pop
cmp
add
sbb
ljmp
sbb
lock
mov
jmp
xchg
ja
push
mov
push
stos
xchg
inc
fdivr
push
inc
xor
inc
lods
push
pop
xchg
xor
lret
data16
mov
add
jns
mov
jne
lahf
adc
out
inc
psubsb
int3
jl
ret
outsl
push
xchg
mov
mov
jno
jecxz
cmpxchg
xorl
or
test
std
mov
jp
xor
in
sbb
movsl
lahf
pop
fnsave
mov
pop
or
leave
mov
scas
test
and
jae
jl
add
loopne
rcrb
ss
dec
push
pop
fsubrs
xor
scas
roll
inc
cmp
enter
add
daa
dec
out
rcrb
outsb
scas
in
inc
popf
dec
and
lcall
adc
je
rol
pop
add
adc
adc
test
push
mov
and
stos
push
scas
mov
push
sbbb
sbb
inc
ja
adc
in
or
mov
out
push
cmp
jnp
icebp
rcrb
cmpsb
add
sub
jmp
pushl
outsl
mov
inc
cmp
adc
xor
push
stos
lea
xchg
cmp
jp
push
repnz
adc
repnz
push
cmc
cmpsb
lahf
cmp
aas
xor
jmp
cmp
addb
jle
add
das
cmpsb
or
cmp
iret
mov
push
dec
jns
jns
sub
ljmp
jbe
jle
popa
pushf
mov
dec
xchg
adc
sarb
aad
mov
test
int
bound
aam
mov
pop
sub
dec
sbb
sub
out
lods
daa
js
sub
mov
sbb
sbb
push
cwtl
sbb
inc
push
dec
in
fs
fiadds
data16
ss
mov
mov
stc
and
lahf
and
inc
or
xchg
push
je
xor
bound
mov
push
jge
mov
sub
scas
out
dec
mov
xlat
lcall
adc
stos
push
inc
aaa
mov
stos
mov
xlat
outsb
mov
fdivp
mov
nop
shr
dec
sub
stos
pop
insl
push
es
inc
stos
push
cmp
aam
dec
imul
mov
push
jmp
pop
enter
mov
mov
enter
jg
shlb
loopne
push
fidivrl
cld
and
dec
jns
mov
loopne
sub
pop
add
addr16
hlt
mov
push
icebp
fwait
xchg
sub
adc
jo
sub
and
testl
mov
shrb
jl
push
andb
dec
fnsave
mov
shr
xchg
fisttpll
cmp
xchg
out
ret
or
dec
shll
paddusb
mov
pop
cwtl
fcoms
cwtl
inc
adc
bound
or
or
jbe
push
pop
mov
jp
cltd
stos
push
push
shll
push
and
leave
sub
push
addr16
cmp
insb
cld
stos
xchg
mov
sub
loop
out
mov
inc
mov
mov
inc
inc
push
inc
mov
into
pop
iret
jo
test
lea
test
mov
sub
cmp
adc
adc
sub
imul
int
bound
je
ret
stos
mov
inc
les
pushl
pop
xor
push
sahf
adc
das
icebp
lds
dec
mov
loope
lds
not
push
nop
popa
sub
jno
pop
pop
scas
mov
xor
cmc
cli
jns
call
push
mov
xor
pop
ds
cmp
fldl
addr16
cwtl
jmp
js
test
rclb
jbe
cs
out
mov
divl
scas
mov
pusha
xlat
into
add
sbb
adc
addl
adc
sub
iret
xchg
icebp
cmp
adc
mov
add
jge
xchg
and
mov
imul
xchg
jmp
pop
cbtw
cmp
addb
jb
subb
sarl
jbe
negl
aam
stos
xchg
adc
cmc
movsb
fisttps
shr
les
fisubrs
test
in
mov
test
ljmp
inc
popf
xlat
ja
jecxz
jae
add
pop
pop
imul
inc
mov
or
ficomps
adc
notb
push
fisubs
out
xchg
sbb
std
in
clc
out
mov
dec
sar
mov
and
aam
dec
mov
hlt
ja
std
stos
mov
mov
mov
mov
subl
mov
es
xor
ds
cld
data16
cmpl
psubb
insl
jae
xchg
icebp
ret
inc
pop
out
jecxz
add
in
or
inc
lea
repnz
cli
das
inc
push
add
mov
mov
fiaddl
sub
adc
je
sbb
push
jae
adc
jb
mov
out
int
or
push
ret
lods
loope
pusha
jecxz
or
jnp
mov
push
and
and
jg
repz
lods
jne
or
dec
inc
jmp
and
jg
ret
pop
dec
sbb
mov
ds
and
cs
shlb
stos
mov
lret
int3
jl
sbb
add
add
imul
xor
sti
gs
sub
dec
addb
or
sahf
repnz
jo
mov
rcrl
test
jle
popf
xchg
loop
popa
push
xor
lret
cld
and
mov
mov
testl
and
push
sub
fwait
shl
test
add
lds
cmp
xlat
push
das
dec
inc
outsb
cmp
mov
jl
adc
cltd
xor
out
out
adc
and
xor
aam
pop
push
xor
pop
mov
xchg
sub
addr16
adc
pop
in
xor
adcb
dec
lcall
xor
jno
sbb
inc
pop
and
je
dec
lret
jae
outsl
jmp
lock
xchg
call
cli
and
mov
and
stc
shll
mov
les
mov
push
test
subb
inc
bound
jne
mov
xchg
mov
adc
sbb
imul
loop
cmp
ja
out
out
scas
mov
shrl
jnp
repnz
fidivrs
push
mov
cli
ljmp
push
or
test
inc
pop
xchg
mov
mov
into
pop
and
xlat
xor
or
push
repz
sbb
leave
pushf
fs
xor
jecxz
push
sub
sub
rol
mov
in
jne
and
loopne
or
pusha
stc
jecxz
enter
stc
push
icebp
sbb
mov
sti
clc
jno
sub
stos
inc
stc
jle
jle
or
outsl
out
dec
jecxz
adc
out
dec
idivb
imul
dec
sub
fsubs
stos
pushf
into
and
mov
jmp
popf
add
sbb
fsubrp
fsubrp
jmp
push
sbb
push
sti
movsb
sbb
xor
lods
pop
and
rclb
jbe
icebp
in
add
sbb
mov
imul
mov
mov
jmp
pop
mov
xor
jo
push
test
mov
cmp
lret
dec
int3
out
push
mov
psubsw
jl
aas
mov
outsb
jle
ja
jg
loope
shll
sti
in
xchg
out
and
rorb
xchg
dec
dec
lea
and
sti
adc
or
push
mov
adc
stc
push
fnsave
inc
pop
push
test
fidivs
sbb
inc
jo
pop
xchg
sub
sub
scas
mov
xor
rclb
push
sub
fidivs
repnz
inc
or
dec
adc
mov
ja
test
jb
sbb
les
orb
or
popf
dec
loopne
push
xchg
or
fisubrs
push
ss
cltd
in
aas
fldl
dec
inc
jbe
andl
mov
sub
icebp
xchg
popa
shl
push
testb
cmp
inc
pop
stos
in
popf
xor
int
stc
mov
rol
pop
cld
call
lahf
ss
cli
sti
add
mov
cwtl
xor
push
pop
idivb
push
or
push
movsl
jae
inc
sbb
mov
cmc
adc
sbb
imulb
in
int
cmp
or
in
pop
mov
pop
leave
pushf
dec
scas
xor
jae
push
adc
sbb
data16
int3
lret
adc
lcall
cmp
push
cmp
cmpsb
mov
mov
popf
insl
aad
push
or
es
sub
daa
fisttps
testb
popf
mov
push
sbb
sbb
cmp
push
orb
sti
or
sub
repz
fnclex
mov
sub
sbb
ss
das
out
jmp
adc
in
loopne
stc
adc
cmp
pop
iret
fcomps
out
mov
pop
xor
and
dec
loopne
add
xor
pop
cwtl
lods
mov
scas
jmp
mov
dec
not
outsl
mov
push
adc
popf
into
gs
fdivl
sbb
dec
push
dec
popf
mov
outsl
lahf
stos
pop
notb
enter
jl
pop
insl
aas
shl
mov
cli
je
clc
cs
call
int3
mov
push
cmc
jmp
movsb
inc
mov
mov
int
xchg
mov
out
dec
loope
sahf
mov
cmpb
add
xor
negb
data16
in
dec
dec
cmp
arpl
out
dec
sbb
std
shll
mov
test
pusha
push
and
sbb
les
test
popf
mov
movsb
xchg
pop
hlt
xchg
into
cmp
cmp
jns
pop
and
xor
and
cld
mov
sti
leave
push
mov
or
lcall
jns
pop
cmp
jae
ss
scas
outsl
iret
ja
or
mov
lock
scas
xchg
sbb
mov
mov
or
daa
outsl
repnz
int3
push
adc
sbb
mov
mov
inc
frstor
in
rcrb
mov
sub
mov
adc
js
jne
int
or
sub
shl
mulb
mov
adc
pop
aad
xlat
mov
push
adc
inc
mov
psubb
inc
xchg
add
dec
dec
lret
hlt
push
sub
stos
sahf
and
fcompl
ss
lock
por
mov
xor
add
cmp
sbb
push
sub
ja
mov
aad
pop
scas
gs
push
push
xchg
cmpsl
pop
sbb
adcl
pop
xor
push
sbb
cmp
xchg
lods
mov
mov
subb
fsubr
push
cli
push
mov
fsubrp
add
addr16
pushf
pop
into
cmp
mov
xor
or
lea
xchg
add
cmp
push
adc
add
testl
cwtl
cs
addr16
dec
inc
ds
les
sbbb
aas
sub
loop
push
nop
cwtl
jb
test
sub
mov
push
jne
xchg
les
hlt
insl
cld
iret
pop
in
cmp
jmp
data16
popf
mov
adc
push
inc
pusha
dec
repnz
popa
inc
mov
inc
adc
cwtl
shll
out
mov
lods
jge
adc
js
leave
int
cltd
mov
fs
mov
clc
mov
push
mov
inc
sbb
movsl
popf
and
cmp
imul
mov
jle
out
pop
jae
imul
js
js
push
fwait
mov
lcall
add
test
push
loopne
movsl
jbe
mov
imul
or
nop
je
pop
shlb
jmp
pop
imul
jns
push
stos
inc
mov
mov
push
fnsave
ret
loope
movsl
jle
push
in
inc
sbb
cmp
cli
and
add
push
jae
xor
sbb
nop
dec
xor
filds
repz
icebp
and
ficomps
mov
out
pop
in
cwtl
das
sub
inc
mov
add
aam
mov
inc
iret
fnstenv
nop
adc
scas
bound
bound
sbb
hlt
inc
push
daa
cmp
pop
pop
cmp
aaa
iret
pop
fcmove
or
or
pop
jb
pop
movsb
inc
movsl
cmp
pop
arpl
rcr
cli
mov
movsb
dec
lods
jae
aad
pop
or
sbb
or
xchg
sbb
cmpsb
cmp
out
sbb
fmuls
and
sub
cmc
xchg
rolb
in
inc
popf
mov
lods
sbb
outsb
rcll
notb
xchg
loope
push
out
xlat
movsb
std
xor
mov
stos
mov
scas
outsb
iret
push
mov
sbb
adc
dec
mov
outsl
in
cmp
mov
in
imul
adc
clc
imul
and
inc
push
stos
add
imul
out
mov
lahf
ret
lds
std
or
fnstenv
cwtl
xor
inc
mov
jecxz
stc
xchg
mov
shrb
icebp
mov
sbb
sbb
shr
aad
mov
scas
fwait
pop
arpl
mov
jg
aam
push
mov
les
add
mov
clc
sahf
mov
and
pop
sbb
add
adc
and
mov
movsb
mov
lock
mov
mov
test
imul
xchg
add
or
nop
push
test
push
mov
cs
repz
out
mov
push
jmp
xchg
mov
xchg
mov
xor
pop
and
pop
cmp
divb
or
push
mov
sbb
testl
inc
xchg
imul
xor
lds
scas
mov
scas
mov
aam
iret
adc
shll
leave
cltd
add
ss
inc
mov
add
das
std
push
xlat
frstor
movb
test
jo
push
movsb
into
sbb
out
mov
sbb
pop
daa
outsl
sub
pop
imul
push
pop
test
jns
imul
cli
jge
dec
cmp
cmpsb
lock
out
or
xor
jns
stc
aaa
and
xor
inc
jmp
push
cmpsl
lods
mov
mov
or
cs
ret
sbb
cmp
and
lcall
jb
rorl
sti
mov
pushf
ss
vmulps
mov
icebp
dec
fsubs
bound
inc
notb
mov
jg
loopne
push
push
andb
and
dec
adc
xor
cmp
mov
std
adc
dec
sti
inc
repz
mov
subb
push
mov
jnp
sarl
clc
fs
add
cli
dec
push
ss
pop
lcall
adc
data16
cwtl
ljmp
das
xchg
push
push
mov
push
pop
xor
lds
xchg
push
adc
adc
les
fs
cmc
mov
scas
mov
js
inc
mov
jbe
sbbb
cmp
mov
ret
mov
hlt
or
pop
sub
cs
orl
push
subb
int
pop
mov
test
daa
pop
insl
pop
call
andb
sub
ret
pop
or
jecxz
jg
loope
dec
lret
sub
pop
outsl
ja
sub
xor
dec
or
daa
sub
pop
mov
add
mov
pop
ljmp
scas
ja
loope
js
lret
arpl
ss
ljmp
inc
mov
fiaddl
leave
je
repnz
ljmp
pop
mov
decb
mov
and
data16
jle
push
stos
out
rol
pop
popa
mov
mov
and
aam
dec
dec
add
or
sbb
imul
cltd
xchg
dec
outsl
add
adc
aas
xchg
xchg
insb
icebp
cmp
in
mov
subb
mov
sahf
jp
dec
loop
xor
mov
imul
cmc
js
mov
loopne
jge
mov
fnstsw
inc
call
xor
cwtl
sub
in
mov
xor
rcrl
pop
push
mov
lock
push
xor
and
adc
das
or
iret
dec
repnz
cld
adc
mull
mov
movsl
cmp
xchg
push
fldenv
aas
push
pusha
andl
or
fstpt
dec
add
push
stc
mov
cmpb
mov
xchg
pushf
aad
in
mulb
mov
aad
inc
fdivrs
push
sub
test
fmul
insl
cmpsl
xor
jg
ljmp
dec
mov
gs
sub
divps
sub
mulb
xor
jne
popa
push
testb
rcll
mov
movb
in
daa
popa
int3
and
mov
xor
mov
lahf
lret
test
loope
sbb
inc
test
out
xchg
inc
pop
pop
cli
lahf
or
loop
loope
adc
inc
icebp
mov
jno
into
fidivrl
pop
in
add
scas
loope
pop
cmpsl
lahf
mov
xor
xlat
sub
ficoml
sub
pop
xchg
pushf
and
adc
cmp
bound
movsb
xchg
adcl
cmp
andl
stc
mov
mov
xchg
pusha
cmc
hlt
mov
push
push
sbb
xor
cmp
aas
jmp
ljmp
popa
icebp
mov
and
add
and
xor
sbb
orl
pusha
mov
cmp
shrl
arpl
mov
sub
int
out
or
inc
imul
push
push
lret
xchg
jns
lea
js
cmc
daa
mov
push
adc
mov
mov
and
orl
mov
adc
cwtl
xchg
pop
adc
cmp
frstor
mov
sub
sub
fnstcw
add
inc
gs
and
pop
fnstenv
fsubl
daa
jns
pop
fildl
jmp
outsl
inc
jecxz
or
jae
dec
lea
xchg
sub
and
xlat
subl
inc
fmuls
push
into
inc
ficompl
inc
fwait
lods
mov
or
inc
adc
sbb
call
int
mov
jge
ds
movsb
shlb
ficompl
ret
and
mov
fnstsw
std
pop
cmpsl
and
cmp
xor
shll
xor
inc
jns
scas
inc
and
mov
inc
int3
fdivrl
adc
or
sub
insb
sub
jg
sbb
pusha
f2xm1
daa
rorl
incl
fldl
or
xchg
inc
shl
std
call
fsubl
lods
push
jmp
call
push
jge
lcall
arpl
ror
pusha
lret
bound
inc
hlt
sub
sbbb
dec
sbb
sbb
mov
popf
push
mov
arpl
aam
adc
jnp
xor
dec
pushf
pushf
xchg
test
bound
stos
inc
xor
movsb
pop
dec
and
fldenv
in
jne
mov
pop
scas
fadds
push
dec
jg
pop
mov
fidivl
dec
arpl
clc
jge
push
aam
add
pop
shl
cld
adc
aad
sbbb
jb
push
lods
fistl
sbb
imul
push
sub
aas
lods
push
enter
lock
pop
inc
adc
test
jo
into
cmpsl
pusha
add
je
or
cmp
cld
cs
jg
xorb
daa
pop
repz
adc
insl
cwtl
jns
xchg
push
imull
and
mov
cmp
cltd
pusha
cmc
repnz
inc
sarb
mov
loope
lea
hlt
add
push
sahf
stos
aad
ret
add
mov
loope
js
dec
xchg
cltd
call
testl
pop
xor
inc
or
xchg
xor
sub
xchg
pop
or
add
je
out
cmovno
imul
jb
and
stc
mov
cmp
data16
sbb
hlt
add
cwtl
jmp
out
mov
fsubr
insb
adcl
xor
fadds
sbb
clc
adc
test
cli
icebp
and
inc
sbb
sahf
in
inc
xchg
mov
pop
insb
xor
inc
mov
lds
dec
dec
mov
sub
push
out
adc
jg
repnz
mov
lea
xchg
loope
jnp
rcrb
repz
aas
inc
ficomps
and
pop
repnz
test
mov
mov
pop
scas
sub
lds
mov
mov
out
fistpll
mov
out
add
imul
xchg
andl
cmp
int3
lret
jno
mov
mov
cmc
scas
push
adc
enter
lods
jmp
mov
sti
jmp
pop
repnz
cmp
cmp
lret
sahf
mov
pop
xchg
xlat
test
push
loope
or
mov
sub
aaa
jbe
jle
pop
mov
sbb
add
pop
imul
outsl
mov
nop
std
cmp
mov
inc
fdivp
jo
movsb
inc
cmpsb
popa
dec
push
jge
lods
imul
dec
xor
inc
jmp
mov
jno
xchg
and
stos
sti
inc
push
mov
and
mov
mov
sub
xor
shl
in
lods
xchg
lds
cltd
mov
mov
jne
adc
repz
sub
xchg
lock
les
out
push
ret
insb
shlb
pop
or
xor
test
or
mov
repnz
pop
loopne
and
lods
dec
insl
js
leave
pop
sbb
ds
gs
xchg
or
and
xor
mov
xchg
scas
push
push
insb
inc
fidivs
and
dec
aam
stos
fisubrs
push
inc
enter
pop
inc
sbb
xor
cmp
test
stos
ja
int
mov
push
addr16
pop
rclb
dec
in
je
add
add
xchg
sub
mov
pop
sti
insb
jle
pop
xchg
in
mov
ror
sub
pop
stos
dec
mov
xchg
jmp
sbb
hlt
ret
inc
subb
xchg
cmpsl
or
in
mov
sbb
test
push
push
pushf
test
adc
sbb
cwtl
and
mov
sub
cmpsl
das
mov
shr
shr
and
fwait
dec
adc
leave
jnp
add
rorl
push
outsb
pop
push
lahf
dec
in
xor
pop
push
adc
cmpsl
inc
mov
inc
dec
int
dec
add
push
or
dec
pop
movsb
or
pop
into
icebp
movsb
and
dec
mov
adcb
push
sub
sahf
sub
cmp
cmp
inc
sbb
push
aam
sarb
test
lahf
push
data16
leave
push
dec
jnp
addr16
lcall
insl
rcrb
sub
dec
aas
or
jecxz
mov
jae
inc
fldcw
sub
pop
pushf
push
repz
jae
sbb
jge
sub
fidivrs
pop
lcall
sbb
in
lock
stos
add
sbb
sub
mov
fwait
jg
adc
incl
mov
add
inc
int3
inc
sbb
bound
push
jb
subb
cmp
dec
pop
pushf
out
mov
in
add
in
or
cmp
mov
mov
fidivrl
or
adc
push
mov
sbb
test
mov
das
or
data16
ja
mov
fisubl
and
jne
mov
stos
push
pop
test
mov
add
mov
gs
js
dec
adc
cli
scas
mov
pop
sbb
pop
inc
fdiv
mov
pop
out
mov
jle
sub
adc
xchg
jl
xchg
sbb
sub
xor
hlt
adc
push
jbe
dec
test
cmp
addr16
push
sub
fiaddl
adc
call
aad
inc
xor
inc
rcrl
sbb
mov
popf
out
sbb
jl
adc
pop
sub
psraw
pop
xchg
ljmp
xor
ss
add
test
xor
and
movsl
cmpsl
mov
rcll
add
daa
dec
jge
cmp
pop
add
lea
out
out
mov
test
paddusw
sub
jb
cli
test
add
stos
jb
lock
mov
xor
mov
dec
mov
incl
mov
push
sti
mov
or
int
lea
popf
lods
add
loopne
fimuls
rorl
jbe
loop
xchg
lcall
inc
cld
addr16
and
fstl
test
je
negb
cld
enter
pusha
jp
or
pop
cmp
xchg
sti
fcoms
stos
cmp
mov
mov
lods
lahf
jb
inc
int
aad
in
orl
in
adc
int3
mov
sti
int
lods
jg
shr
inc
push
das
mov
in
stos
out
jb
fcomps
or
cmp
xor
data16
mov
mov
jbe
or
jns
imul
jp
cmpsl
stos
int
imul
or
orb
rorl
jnp
mov
outsb
mov
sti
xchg
ds
mov
inc
jne
push
lods
and
ds
arpl
xor
inc
and
cltd
gs
hlt
cmc
mov
fdivl
pop
dec
pusha
pop
pop
sbbl
cmc
add
mov
inc
loopne
jp
data16
pop
xor
fidivs
popf
xor
xchg
fmul
mov
inc
fldl
push
add
fldl
mov
mov
repnz
dec
outsb
jl
xchg
jb
shrw
stos
mov
cmp
test
lahf
xor
jo
lret
and
adc
xor
nop
mov
stos
sub
jecxz
loop
jl
mov
xchg
inc
or
std
sub
jae
lahf
xchg
shrl
imul
or
rcr
push
push
lock
roll
out
sub
arpl
inc
shlb
test
jmp
xor
icebp
mov
iret
loope
jmp
mov
mov
negb
or
iret
mov
aas
into
xchg
pop
dec
in
mov
subl
or
je
in
jo
movsl
ret
sti
xchg
testl
sbb
push
xchg
mov
fbstp
xorl
xor
pop
xchg
mov
int
in
dec
in
sbb
scas
dec
mov
aas
xor
popa
jns
and
pop
push
or
sub
scas
dec
dec
sahf
xchg
data16
push
jp
mov
cmp
or
push
inc
mov
clc
sbb
imul
jae
lods
mov
add
jb
pop
jns
dec
pushf
adcb
push
in
outsb
adc
pop
inc
mov
cmp
jg
shll
lods
lret
repnz
imul
lock
out
mov
testl
inc
xchg
mov
jno
inc
lods
mov
mov
xchg
dec
cmp
fnstenv
push
stos
jne
ret
sarl
outsl
lret
fnsave
lods
sbb
sub
sbb
dec
shl
mov
mov
sbbb
aam
imul
adc
stos
inc
mov
pop
dec
ljmp
inc
or
hlt
fidivs
adc
test
dec
popf
jne
xchg
cmpsl
leave
rol
test
stos
and
inc
dec
adc
cwtl
nop
jmp
sub
mov
dec
adc
stos
mov
movsb
repz
scas
inc
jae
or
cwtl
jge
idivl
xchg
mov
pop
add
adc
andb
cmpsl
and
sbb
ljmp
or
jo
mov
push
ret
inc
pop
jbe
xchg
push
xchg
mov
ss
lahf
push
inc
dec
mov
jnp
lret
xlat
xchg
addl
cmp
jae
hlt
xor
cmpsl
insb
add
xor
stos
inc
adcb
ja
sbb
addl
data16
repnz
icebp
in
lds
ret
add
or
mov
mov
or
test
pop
mov
iret
pop
lret
inc
cmp
pop
andb
mov
jmp
test
test
inc
ljmp
xchg
sub
popa
ds
mov
imul
dec
inc
mov
mov
xchg
add
std
lds
subb
outsl
mov
inc
push
test
pop
mov
inc
scas
dec
inc
fnsave
jle
inc
push
mov
add
out
push
inc
inc
inc
sbb
sbb
jae
ss
fwait
jb
ret
mov
lods
call
movsb
std
pop
int
xchg
jnp
enter
sub
push
out
cmp
pop
gs
fs
push
mov
cli
mov
fimull
jg
leave
fnstenv
fldt
add
sub
mov
nop
dec
or
adc
cmc
jnp
mov
icebp
js
sub
xchg
out
aad
push
mov
and
lcall
pop
rclb
jg
lds
aam
and
mov
xor
aas
and
flds
and
andb
stos
xchg
fsubr
test
mulb
xor
ret
pop
jg
xchg
push
call
scas
js
sub
fsubr
push
es
xchg
push
add
sub
pop
sbb
cmp
mov
push
or
xchg
fcoml
add
fs
gs
cli
test
aas
cmp
popa
rolb
xchg
cmpsl
sbb
fstl
mov
add
test
pop
mov
mov
pop
mov
cmp
stos
mov
lret
lret
addb
ss
mov
stos
sbb
adc
je
adc
ja
adc
pop
pop
lock
dec
hlt
sub
add
jbe
fisubrs
lcall
loop
sub
shll
inc
cmpsb
aad
jne
enter
scas
cld
push
loope
test
in
imul
adc
stos
rol
push
in
div
lods
cmp
lahf
jae
loopne
adc
push
lcall
xchg
dec
xor
xor
arpl
adcl
inc
sarb
out
push
cmpsl
xorl
aas
flds
ds
adc
sbb
hlt
int
jmp
gs
xchg
in
inc
push
add
cwtl
adc
insb
adc
cmpsl
and
fbstp
leave
sub
sub
cmpsb
sbb
dec
std
or
inc
pop
pusha
sahf
jmp
mov
lods
mov
cmp
jp
pop
sub
lcall
mov
push
cmpsl
push
loop
incl
iret
sub
or
shrb
mov
aas
dec
lods
jp
push
cltd
add
lahf
and
inc
or
ja
out
pop
lock
cmp
dec
notl
jae
bound
lea
inc
mov
lret
movsl
popa
dec
loop
fists
nop
add
mov
xor
cmp
add
mov
test
dec
in
scas
and
outsl
adc
push
xor
xchg
inc
mov
lea
lret
enter
shr
gs
inc
dec
jmp
jle
xchg
mov
push
jae
jae
andb
in
pusha
int
aam
pop
or
xor
inc
aad
int3
sbb
add
fiadds
addl
add
icebp
add
lds
nop
ret
pop
xor
dec
xor
mov
cltd
test
and
pand
scas
mov
test
fidivs
or
cli
test
fidivrl
sti
fwait
sbb
or
sub
inc
mov
ljmp
and
adc
stos
jbe
jns
cmpsl
sub
mov
jp
ja
sub
repnz
xor
xchg
sbb
adc
dec
pop
stc
pop
pusha
aad
sti
movsl
push
xor
pop
pop
stc
popf
lds
adc
shlb
pushf
xor
daa
insb
out
out
stc
and
outsb
mov
adc
add
pushf
fbstp
add
or
cmpsl
add
add
mov
ja
stc
xchg
jmp
fcomi
leave
add
insl
cmp
fists
jne
cli
cmpsb
inc
or
ljmp
in
daa
jbe
pop
popf
sbbl
cs
sbb
mov
jge
pop
call
mov
and
sub
rorl
fiaddl
es
add
ljmp
xchg
sbb
ljmp
inc
fwait
mov
jge
add
ss
les
fsubrl
insb
fisubrs
xchg
lds
into
adc
std
lods
xor
stos
inc
pop
mov
mov
dec
es
idiv
sti
pop
and
xor
xchg
or
xchg
cmp
mov
xor
cmp
inc
cli
rcrb
push
cmpb
fdivl
push
xor
out
xor
sub
mov
fwait
stos
out
jmp
arpl
sbb
iret
addb
fsubrp
test
mov
sbb
mov
mov
push
mov
push
in
dec
clc
dec
aam
ds
loopne
sub
aaa
inc
cwtl
xor
and
mov
mov
cli
pusha
shrl
cmpb
push
sbb
pop
dec
xchg
add
mov
xor
pop
pop
icebp
jl
fsubrs
and
jns
or
int3
mov
cli
in
xchg
sbb
lret
std
inc
or
jb
jo
mov
sub
les
pushf
cmpsw
xchg
shrl
scas
mov
aaa
negb
push
in
stos
fs
test
test
repnz
mov
sbb
inc
fsubrp
loop
pop
adc
pop
icebp
xor
aaa
mov
subl
jle
movsl
repz
cmp
lea
cli
movsl
xchg
movl
ss
jb
jmp
cmc
mov
les
add
lods
mov
std
add
movsl
push
cmp
fadds
das
mov
insl
scas
xor
orb
cmpsb
cmp
pop
dec
cmp
imul
pop
mov
stc
cmpsb
lock
xchg
or
cwtl
sub
pop
mov
test
jb
stos
dec
push
ret
hlt
aas
sarb
pop
xchg
jmp
jb
rol
data16
cmpl
jmp
dec
jmp
inc
shrb
repz
insl
rcrl
xor
jmp
sbb
scas
aam
jnp
outsb
packsswb
aas
cmc
jbe
shll
sbb
gs
push
pop
stc
pusha
dec
pop
gs
imul
xchg
mov
cmp
loopne
insl
fwait
xchg
xchg
ds
mov
add
pop
xchg
jmp
dec
mov
jg
adc
jnp
xor
push
pusha
pop
adc
and
xor
jns
fldenv
cli
add
mov
int3
fsubrl
mov
adc
adc
mov
fwait
mov
inc
xlat
ret
fstpt
push
pop
roll
push
test
xor
out
js
jmp
out
jmp
fwait
mov
fisttpl
mov
data16
jge
pop
scas
sbb
cli
mov
sub
push
or
iret
lahf
outsl
sbb
mov
sub
sbb
call
push
orl
sub
fwait
stos
adc
jne
xchg
bound
sub
inc
push
mov
inc
nop
gs
gs
sbb
out
vmread
inc
mov
pushf
sbb
loopne
imul
fmulp
mov
adc
jne
jo
call
xchg
xchg
clc
es
data16
inc
pop
fcmovnb
in
xor
insb
movsl
sahf
fsts
mov
cmpsl
mov
push
loop
add
lods
cmp
outsl
sbbl
jecxz
sub
popf
xor
inc
aas
cmpl
out
lahf
push
popa
cmpb
hlt
or
dec
push
insl
scas
fldenv
xlat
push
fldcw
fucomp
int3
mov
lock
push
dec
adc
dec
shr
pop
dec
out
or
jge
insl
add
lcall
pop
pop
shll
xchg
cmp
push
sbb
loope
test
push
test
push
adcl
jmp
push
xchg
inc
dec
movsb
jecxz
int
roll
dec
dec
enter
rcrl
sub
jno
lahf
roll
pop
jl
shll
inc
or
pusha
subb
fadd
insb
dec
mov
adc
cmp
sub
dec
push
sub
jge
popf
mov
sahf
ja
shrb
or
popa
push
jns
clc
jnp
test
inc
inc
imul
call
mov
sub
dec
xor
fsubrp
push
push
cltd
push
push
push
jae
and
lds
mov
add
xchg
sahf
dec
mov
repnz
int
gs
mov
test
mov
das
int3
mov
push
iret
pop
iret
into
shll
mov
push
inc
js
xchg
jmp
sbb
xchg
fisubs
int3
call
popa
int3
es
dec
loopne
jl
sub
lcall
push
lods
nop
fbstp
pop
mov
inc
out
negl
mov
jmp
andl
aad
push
adc
inc
negl
or
fcmovbe
push
jmp
jns
pop
stos
push
pop
arpl
out
xchg
mov
mov
or
or
mov
mov
push
lock
pop
adc
les
and
es
je
pushf
test
sub
mov
add
and
cs
adc
sub
jl
insb
ljmp
pop
js
dec
in
sti
push
js
jno
aaa
sbbb
adc
out
add
arpl
mov
dec
loope
mov
sbb
jne
cmp
dec
out
movsb
mov
push
mov
mov
daa
iret
lret
out
daa
sub
in
push
daa
mov
ret
sbb
xchg
mov
popf
rcrl
add
fwait
cmp
stos
xchg
ja
jbe
mov
dec
out
adcb
cmp
sbb
rorb
ss
int
mov
sub
jae
lahf
les
mov
mov
lock
pop
js
mov
pop
mov
lods
xchg
lods
mov
in
hlt
mov
inc
arpl
mov
adc
hlt
pop
in
mov
pushf
sahf
xlat
push
fsubrs
clc
and
psubw
cmp
bndstx
loopne
adc
sub
lcall
scas
data16
or
push
out
pusha
mov
mov
cmpsl
test
sbb
jg
call
mov
test
cmp
mov
cs
stc
mov
icebp
push
lret
adc
aad
gs
stos
scas
pusha
jecxz
fnstcw
testl
jg
sbb
sarb
mov
inc
sub
dec
mov
lret
inc
fwait
shll
repnz
adc
mov
aam
push
fsubrl
adc
enter
sub
ret
pop
outsl
stos
sbbl
imul
mov
dec
loop
xor
xchg
test
rcrl
out
jp
std
mov
and
stos
cmp
mov
arpl
xchg
xor
fs
mov
dec
mov
in
xchg
xor
lret
fsubr
sbb
push
jb
into
or
lods
xchg
call
or
cmc
cmp
pusha
push
popa
movsl
cmp
daa
out
or
stos
clc
in
add
orb
lret
outsl
sub
fisubrl
test
mov
push
andb
sbb
testb
or
movsl
bound
int3
inc
pop
adc
mov
push
mov
stos
shrb
paddb
aaa
jne
lea
pop
sbb
fsubr
ja
test
mov
xor
cmp
outsl
std
cmc
mov
dec
and
pusha
xor
inc
mov
xchg
xor
add
data16
fists
stos
pop
hlt
jno
pop
inc
cmc
sar
repnz
aad
movsl
or
adc
cmpsl
sub
dec
loop
subb
lret
aas
push
cmp
push
sbb
rcr
mov
mov
mov
imul
cmp
dec
into
mov
fisttps
or
push
xchg
sub
push
inc
pop
jmp
call
leave
pop
out
idivb
lods
cmp
sbb
ljmp
movsl
aaa
dec
scas
nop
insb
pop
lods
inc
jecxz
pop
mov
inc
out
mov
iret
cmp
sub
mov
add
mov
fidivl
shrl
inc
rolb
pop
dec
fs
adc
and
adc
ret
mov
outsb
ljmp
stos
push
rol
pop
inc
mov
add
and
inc
loope
pop
jne
and
shrb
stos
jl
inc
mov
fidivrl
fisttps
or
mov
movsl
jno
fcoml
xchg
jmp
mov
add
mov
mov
fs
dec
mov
jae
xor
mov
push
ss
add
add
scas
add
enter
daa
add
jo
or
test
movsl
push
xor
pop
cmp
inc
xchg
lds
into
dec
push
into
push
mov
and
lods
or
imull
fidivs
mov
insl
jne
bound
sti
pop
push
xchg
mov
iret
mov
or
dec
mov
and
cmp
push
push
fcomp
or
sub
mov
jbe
out
sti
mov
push
sbbl
cltd
mulb
out
sbb
imul
jbe
jl
insl
imul
fbstp
dec
sti
xor
mov
dec
loop
jne
pop
dec
fcomip
insb
aad
pop
popf
data16
cmp
call
cwtl
xchg
bound
and
cmp
push
mov
push
outsl
mov
xchg
movsb
jo
fiaddl
stos
in
xor
fs
jns
mov
xor
lret
mov
cmp
cltd
sub
popf
scas
xor
frstor
scas
pop
xor
ret
pop
out
cld
loopne
enter
aas
int
ret
cltd
xor
test
inc
clc
xchg
mulb
bound
enter
sub
jge
aas
and
test
add
push
push
jge
or
push
out
outsb
push
push
pop
mov
gs
mov
out
pop
out
push
movsl
lock
stc
out
adc
and
mov
imul
mov
bound
sbb
es
inc
dec
dec
cmp
repz
out
test
and
out
shrb
pop
movsl
xor
jae
adc
ds
sahf
mov
pop
scas
aaa
subb
sbb
sbb
mov
mov
jp
mov
icebp
dec
jecxz
cmpb
push
mov
mov
stc
or
xor
aad
je
ja
inc
sub
inc
dec
pop
repnz
mov
shlb
int
cmpxchg
or
mov
pop
adc
cld
test
dec
xchg
dec
lret
rcrl
fcmovu
add
sub
push
test
mov
das
movsl
jg
orb
and
negl
testl
lret
jno
imul
mov
mov
pusha
ffreep
in
push
mov
cs
sbb
lods
ljmp
xor
sbb
jmp
jne
xor
dec
xchg
or
xchg
fistl
inc
sbb
adc
movsl
mov
xor
adc
scas
pushf
nop
jae
dec
mov
ljmp
sub
add
fwait
xor
mov
mov
rclb
cli
in
out
jl
add
loopne
lea
divb
bound
add
pop
adc
xor
jnp
cmpsl
pop
dec
cli
aam
xor
dec
data16
outsb
push
shlb
add
mov
add
shlb
movsb
jmp
or
ret
outsl
inc
xchg
stos
js
fstl
xchg
out
ss
push
aaa
outsl
test
lahf
push
loope
xchg
push
cld
dec
mov
lret
rcrb
daa
inc
test
subl
test
rcrl
jmp
test
add
cmc
mov
push
mov
out
and
rorl
bnd
stos
jle
lcall
mov
aaa
mov
daa
test
js
imulb
pop
add
loop
stc
insl
sub
lods
inc
sbb
push
rcrb
dec
insb
test
insl
test
mov
aam
bound
mov
dec
mov
pop
outsb
cs
clc
and
inc
jg
cmp
adc
bnd
call
or
push
ss
pop
leave
addl
leave
mov
sub
jo
jae
adc
lods
sbbb
mov
loope
mov
cltd
test
xchg
and
jge
cli
aam
movsl
adc
fmul
pop
imul
mov
punpckldq
lret
sahf
in
or
rcr
out
dec
cmc
insl
add
loopne
xchg
xlat
popa
inc
fistps
jnp
inc
aas
jae
and
pop
xor
inc
fists
xlat
imul
lock
dec
adc
aaa
and
nop
pop
sbb
outsb
inc
addr16
ja
inc
cmp
cwtl
test
out
loop
push
roll
leave
push
repnz
and
cmp
and
xchg
scas
cmp
mov
jge
and
fs
mov
push
jge
sbb
inc
jecxz
sub
dec
inc
mov
test
scas
mov
dec
or
rcll
pop
push
dec
pop
xor
adc
jbe
lahf
aad
lret
nop
sub
cld
xchg
push
push
cmp
push
jg
pushf
test
int3
dec
mov
ret
xchg
xor
mov
fildl
xchg
sub
mov
pop
pop
mov
mov
push
loop
jb
dec
xchg
push
sub
sar
cmp
mov
lods
pop
out
push
mov
dec
adc
outsb
cmc
push
mov
and
ja
rcl
mov
mov
pop
xor
cmp
mov
pop
inc
mov
push
insb
out
sbbl
pop
dec
sub
dec
adc
mov
ja
jo
mov
jp
push
adc
xchg
add
adc
or
and
sbb
imulb
lahf
lock
and
mov
xchg
cmc
rcll
lcall
clc
jge
scas
dec
xchg
mov
shr
jp
fiadds
movsb
cmp
into
call
lcall
mov
pop
arpl
mov
inc
out
jo
test
mov
pop
xor
and
stc
xchg
outsl
popf
in
aaa
pop
andl
push
outsb
psrld
stos
leave
mov
mov
add
jmp
clc
fdivs
xchg
es
cltd
stos
inc
mov
bound
pop
adc
jnp
lds
daa
pop
imul
std
fidivrl
decl
in
and
stc
cmp
js
push
and
movb
sbb
xchg
add
in
outsb
xchg
mov
dec
aam
xchg
jo
add
in
std
ret
test
pop
lahf
and
cmp
loopne
jb
stos
jo
cwtl
rcll
in
mov
in
and
dec
jne
nop
out
fwait
push
and
ljmp
lcall
in
lcall
and
ret
lock
push
pop
cmp
fnstenv
jmp
jns
and
rcl
int3
in
sub
pop
push
divl
adc
sbb
xlat
sbb
jnp
inc
push
push
mov
test
aam
fistpll
adc
pop
ljmp
cmc
lods
add
shl
pop
push
cmpw
xchg
inc
jmp
inc
push
and
daa
nop
pop
inc
fisttps
pop
loope
dec
mov
pop
cs
fisubrl
adc
push
mov
push
pop
xchg
loope
xchg
rcll
jmp
pop
mov
add
mov
ja
adc
sbb
dec
fsubp
test
inc
mov
sub
decl
mov
inc
pushf
je
dec
lahf
ja
cld
outsb
cld
pop
fwait
insl
add
stos
fsubrs
inc
fmuls
jmp
adc
push
cmp
pushf
pop
addr16
in
cmp
mov
mov
fstps
shrl
dec
push
das
adcl
jns
pop
adcb
js
dec
loopne
lcall
jle
popa
push
les
pusha
add
push
and
push
pop
out
xor
jbe
push
ss
push
pop
shlb
aaa
mov
xor
scas
sbb
lods
repz
scas
inc
cmp
dec
cltd
dec
mov
cmp
fimull
and
pop
rcrl
fidivrs
mov
ja
int
add
push
in
aas
and
fisubl
test
mov
lahf
inc
mov
lock
xchg
sub
pop
js
or
inc
shrl
inc
divl
ja
sub
aam
xlat
fcomps
adc
out
subw
int
sub
sub
inc
xor
bound
pushf
test
nop
fnstenv
or
fsts
and
push
incb
jbe
xchg
add
out
fwait
aam
out
pushf
lcall
gs
inc
mov
push
lcall
pop
xchg
sub
cmp
popf
cmpsb
lods
jne
test
mov
ds
mov
mov
maxps
in
xchg
jl
leave
xlat
pop
dec
lahf
data16
outsb
es
popf
jmp
or
bound
xchg
xor
aas
mov
aas
jle
les
movl
mov
cmp
add
ljmp
mov
arpl
in
sbb
mov
fdivrp
aaa
mov
xchg
jb
xor
mov
mov
fs
mov
rclb
push
out
xchg
xor
xchg
cmp
lret
ret
sbb
test
pop
outsl
leave
in
mov
xchg
insl
rorb
jo
decl
in
xor
lea
and
push
scas
jg
or
jle
lahf
jbe
rolb
mov
cmp
mov
test
std
je
cmp
pop
std
int
mov
and
inc
sahf
call
jg
mov
leave
fcmovnu
jbe
scas
int3
out
es
xchg
test
movsl
cmp
loop
in
adc
mov
cmp
xchg
cmp
std
cwtl
movsb
and
lret
in
add
jecxz
fwait
adc
mov
cmp
push
outsb
push
out
xchg
sarl
xchg
add
popa
adcl
popf
and
mov
or
stos
mov
rorb
test
jo
ss
xor
insb
testb
sbb
rorb
xor
mov
loopne
lret
aam
or
pop
icebp
mov
rcrb
sbb
and
xchg
fsts
jle
jae
jae
pusha
xor
push
push
test
adc
adc
cmp
sbbl
scas
mov
pop
stos
push
out
fimull
js
andl
mov
cmp
jne
sbb
aam
xchg
pop
xrelease
movsl
mov
xchg
lock
les
adc
or
cmp
inc
jo
testb
loopne
loope
gs
push
dec
push
inc
repnz
cmpsl
sbb
adc
shll
mov
mov
sbb
pop
mov
sbb
mov
add
add
fwait
cmp
rclb
mov
dec
repnz
dec
sbb
out
pop
sub
movl
mov
sbb
imul
fstpt
inc
mov
adc
sbb
pop
lcall
loopne
xchg
lret
fldcw
aam
pop
xchg
in
orb
cmc
pop
fcompl
std
insb
aad
jno
and
out
inc
imul
aam
inc
and
movsl
scas
std
push
dec
lret
xlat
mov
lds
sbb
xlat
dec
pop
mov
mov
dec
test
ljmp
lret
inc
fidivs
pushf
jbe
push
movsl
lahf
pusha
les
int
enter
int3
mov
fisubrs
mov
lret
xchg
repz
xor
add
inc
daa
pop
aas
mov
add
int
adc
push
cmp
rclb
jns
in
push
or
mov
pop
sbb
adc
xchg
clc
bound
int
cmp
out
aaa
jl
dec
mov
mov
mov
ds
fdivrl
or
add
jno
or
or
int
es
out
add
lods
imul
loopne
adc
add
outsl
dec
pop
sub
rsqrtps
xorl
int
daa
xchg
loop
insb
push
out
icebp
movsl
cld
arpl
pop
xchg
sbb
lcall
and
dec
adc
pop
jbe
into
dec
pusha
xchg
jge
mov
nop
jge
push
mov
push
in
rcl
fnstenv
sub
mov
sub
fwait
icebp
pop
shrl
ja
cmp
insb
inc
jmp
mov
add
jnp
notl
xchg
push
jl
stos
insl
mov
aas
jecxz
push
sub
icebp
pop
jecxz
adc
dec
shl
jl
stos
jns
fnsave
xchg
cs
sub
imul
icebp
outsl
pop
iret
dec
sub
mov
xchg
mov
lahf
adc
jo
lds
jge
idiv
lret
mov
or
dec
insb
cli
mov
jl
xor
cmpsl
mov
stos
cs
mov
lret
out
movsb
cs
es
inc
mov
or
push
iret
movsl
lds
je
aam
daa
xchg
pop
punpckhbw
jns
jp
out
mov
sbbb
outsb
xchg
mov
ljmp
jne
cwtl
mov
repz
mov
aad
aad
pop
ja
jb
aas
inc
sub
cmc
pop
sub
xchg
fsubrl
les
std
sbb
or
js
fcmovb
movsb
and
push
jmp
aad
test
icebp
imul
movl
pop
mov
subb
pop
in
cmp
into
jnp
clc
icebp
popf
xor
sub
sti
pop
xor
mov
rcr
aas
lret
adc
stos
inc
fidivl
lahf
sub
push
icebp
mov
or
loop
mov
dec
mov
mov
insb
or
fdivrs
jo
notl
test
inc
xor
out
jle
enter
cmp
fst
mov
fs
in
dec
mov
int3
mov
pop
out
icebp
cmp
xchg
test
cmpsl
into
sbb
xchg
iret
dec
dec
pop
aaa
lret
adc
in
shrl
shlb
mov
scas
mov
jnp
lock
mov
inc
sbb
stos
mov
fsubr
int
sub
dec
add
inc
pop
fldpi
cmpsl
and
or
xor
shrl
push
or
xor
xchg
mov
repz
push
mov
add
pusha
in
das
pop
gs
sbb
popa
outsl
sub
repz
add
jge
xor
call
mov
stos
lock
lds
insb
cwtl
out
mov
add
inc
pusha
cld
and
push
lock
out
mov
ret
sub
enter
or
mov
pop
call
push
stc
inc
loop
fdivrp
lcall
sub
push
push
dec
loope
push
jnp
call
push
xorb
jg
movsb
push
sti
test
mov
adc
dec
fdivr
repz
fwait
xor
sar
ja
mov
insb
testl
ret
outsb
les
hlt
in
sub
mov
inc
repz
repnz
aaa
inc
push
bnd
sbb
xlat
xchg
or
dec
mov
inc
mov
fidivrl
mov
bnd
stos
mov
bound
dec
fbstp
mov
push
or
or
jno
adc
aad
out
xchg
xchg
xchg
xchg
cmp
dec
pop
sub
mov
mov
jae
rcr
arpl
sbbb
mov
repnz
je
lods
mov
pop
in
mov
lods
jb
xor
test
inc
jg
mov
out
cmpsl
adc
into
dec
fcoms
popf
aaa
mov
and
test
push
out
lds
cmc
adc
out
or
jecxz
or
push
fbstp
or
or
test
push
loope
addr16
mov
mov
aaa
jne
xchg
in
int
mov
ds
cmpl
fsts
cmpb
or
cmc
sub
mov
inc
imul
es
push
jb
mov
insb
add
repz
xchg
outsb
mov
xchg
fsubr
jae
sub
and
mov
loop
or
jbe
imul
and
ja
or
sbb
jnp
imul
dec
cmc
pusha
mov
sbb
jl
jns
dec
mov
xchg
push
push
mov
inc
xchg
mov
jbe
pop
pop
cmp
std
adc
jb
xlat
repnz
mov
xchg
ljmp
stos
test
fcoms
jne
call
pop
jmp
outsb
loope
mov
cmp
adc
inc
and
dec
loope
jb
fisubrl
mov
inc
ss
xlat
cli
jp
cmp
mov
xchg
lret
pusha
lods
jae
ljmp
jne
out
flds
cmp
push
sub
cs
mov
ret
outsl
sbb
into
leave
sarb
popa
push
lds
jno
mov
xchg
jmp
mov
fldt
addb
ja
aas
jl
xor
push
aas
push
xchg
and
int3
data16
inc
fwait
adc
into
or
sbb
bound
pop
jle
cs
imul
mov
push
lock
neg
icebp
dec
lahf
sbb
shlb
neg
mov
mov
cmpsb
jmp
pop
std
popa
xchg
sub
cmp
jb
shrl
mov
lock
jp
mov
mov
loopne
sahf
pop
sti
jecxz
and
jmp
test
scas
inc
xor
pop
or
arpl
movlps
cmc
or
sub
sub
mov
js
mov
mov
into
int
cwtl
out
adc
mov
in
lods
das
push
or
dec
inc
cld
scas
inc
shr
mov
jb
pop
addr16
xchg
dec
iret
jmp
out
pushf
mov
push
jno
xor
nop
dec
pop
xor
xchg
adc
jg
xchg
popa
aas
push
mov
les
std
jae
fdivs
pop
xor
sbb
jg
or
aaa
mov
or
leave
pop
call
insb
sbb
addr16
push
cmp
repz
fsubrl
lea
xchg
out
lea
jl
mulb
lahf
mov
adc
or
movsl
sahf
sub
pushw
sahf
xor
lods
es
sub
sub
dec
sub
dec
xchg
mov
int3
arpl
movsl
outsl
adc
outsl
push
push
insb
xchg
push
sahf
je
jp
or
and
dec
mov
mov
sbb
jbe
insl
cmp
sahf
rcll
stc
out
loopne
inc
or
push
outsb
stos
inc
mov
or
mov
adc
pop
jnp
lea
outsb
adcl
mov
jge
outsl
andb
mov
in
arpl
icebp
mov
lret
loop
clc
cmpsb
xchg
or
push
add
leave
int
aad
testb
jecxz
pop
mov
popf
lcall
mov
xchg
addb
xsha256
cmpsb
rcr
lea
dec
adc
imulb
movsb
pop
pop
mov
mov
repnz
jns
mov
pop
mov
cmp
mulb
lds
fisubl
mov
dec
mov
pop
mov
clc
or
mov
loopne
mov
mov
iret
and
or
sbb
mov
and
lcall
aad
or
cmp
dec
pop
into
out
sti
and
adcb
lods
es
pop
outsl
inc
fsubs
lret
inc
sub
shlb
dec
mov
cmpsb
or
inc
mov
push
fwait
push
pop
insl
and
dec
pop
mov
cmpsl
ds
insb
mov
lds
push
cwtl
out
xor
pop
pop
shl
imul
cmp
arpl
mov
ret
xchg
mov
push
ret
ljmp
hlt
push
ljmp
cmpl
jmp
lret
and
jmp
dec
icebp
and
lret
add
xchg
pop
xchg
sub
mov
ljmp
ret
adc
xor
xor
movsb
std
cs
es
hlt
mov
ret
jge
sbb
and
idivb
cwtl
es
push
mov
push
fnsave
mov
enter
jno
data16
cld
push
inc
cmp
popa
sbb
popa
cltd
or
pop
fwait
xor
js
add
adc
into
incb
je
jecxz
jp
pop
dec
push
push
jmp
push
aad
mov
and
les
aad
sahf
fldt
cmc
jmp
sti
jns
mov
cmpsl
out
sbb
rcr
cmp
lcall
fwait
push
xor
test
jmp
jp
cmp
dec
xor
lods
mov
xor
cmp
adc
pop
out
fisttpll
sti
repz
sbb
das
cmp
adc
and
sub
inc
jae
xchg
mov
fnstenv
push
mov
push
pusha
aaa
sbb
stos
fs
cmp
ds
adc
neg
cltd
cmp
lret
xchg
rol
outsb
mov
shl
push
js
ds
js
mov
scas
mov
stos
addr16
mov
dec
popf
and
aaa
xchg
sub
inc
test
loop
mov
cmc
and
orb
loop
inc
add
fnstcw
dec
das
mov
pop
inc
call
or
mov
xor
cmc
lock
cmpsl
into
mov
std
stos
jmp
or
mov
loopne
aad
test
bound
arpl
or
icebp
mov
rol
fbld
mov
lea
and
inc
shll
loopne
hlt
adc
jno
adc
fs
adc
mov
mov
cmpsb
or
fcomps
jp
mov
popa
xorl
cs
pop
pop
cmc
jl
ss
jne
jge
rcrb
roll
stos
dec
stc
jp
dec
push
pop
lret
or
mov
js
jae
adc
cmp
adc
aam
xchg
push
cli
dec
dec
stos
adc
out
jle
lret
mov
loope
insb
fsts
mov
nop
fs
out
repnz
inc
aaa
cltd
loopne
lret
sub
and
sub
sti
in
dec
push
les
sti
xchg
cmp
sbb
repnz
mov
or
cmpl
insb
loope
push
cmp
repz
adc
xchg
lods
add
sti
sbb
movsl
inc
mov
daa
movsb
pop
jo
jae
cmp
popa
sarb
aam
inc
xchg
adc
pop
lds
push
scas
adc
outsl
cmp
insl
nop
sbbl
dec
daa
cmp
movsl
and
lods
add
xchg
notl
jo
lret
cmp
test
mov
add
inc
mov
mov
repnz
mov
out
in
mov
mov
sbb
adc
loopne
xor
xor
out
push
lret
hlt
and
dec
mov
mov
push
addr16
aas
jmp
xchg
and
sub
push
jb
xor
inc
call
repnz
test
popf
out
xor
mov
xchg
sub
and
add
mov
pop
inc
scas
cmp
add
xor
mov
fbstp
gs
insl
imul
xchg
sbbb
leave
mov
and
xchg
jb
dec
icebp
xlat
addr16
xor
dec
and
addr16
and
push
and
xchg
lret
clc
int
inc
in
sbb
mov
and
movsb
cld
mov
lods
sbb
ds
arpl
data16
add
and
repnz
fistps
in
test
aaa
cmp
push
fsubr
xchg
shr
mov
inc
fdivl
mov
int3
loope
or
dec
cmpsb
loop
jo
mov
mov
xorl
lret
add
xchg
add
mov
xor
fsubrp
lods
arpl
movsb
out
cmpsl
inc
pop
loopne
lret
fistl
imul
push
fstl
popl
mov
mov
sarl
jo
lret
mov
js
jbe
hlt
push
xchg
nop
or
stos
fs
or
cmp
cmp
pop
lcall
and
test
fwait
je
lahf
and
and
xor
cmp
sahf
or
pop
push
scas
push
xchg
ret
pop
ficompl
loop
cmc
push
insl
add
outsb
or
pop
mov
push
dec
fucomip
andl
dec
lcall
mov
arpl
inc
das
test
aam
mov
fiadds
sbb
mov
scas
pop
lods
push
jne
xlat
sub
sub
outsl
dec
lret
lret
dec
insl
ja
mov
mov
push
xor
shll
cltd
fnstcw
lea
mov
lock
shll
push
js
add
or
sub
inc
stos
daa
inc
nop
cs
in
xchg
imulb
ss
mov
jmp
lds
xchg
sub
lcall
sbb
pop
cmp
pop
in
push
adc
pop
push
rorb
cmc
lds
add
dec
cmp
mov
sub
pop
or
int3
fdivp
sub
pop
roll
push
cltd
js
aad
pop
lock
arpl
push
in
xchg
jge
bnd
push
cmpsl
jle
adc
icebp
rclb
lcall
int
push
cmpsl
sbb
lds
lret
push
into
pop
sub
ja
dec
sbb
cltd
pop
jecxz
mov
in
imul
daa
cmpsb
push
cwtl
fimuls
sub
test
mov
xchg
sbb
add
xorb
mov
jae
adc
xlat
jbe
xchg
test
add
push
inc
jle
add
mov
or
xchg
xlat
xor
clc
inc
repnz
subb
loopne
popf
adc
sbb
pop
in
mov
push
aas
sbb
popf
dec
mov
out
xchg
push
sub
movsl
aad
push
leave
fdecstp
cmp
jg
xor
mov
inc
aas
in
mov
std
xchg
cmpsl
mov
sbb
in
stos
inc
lds
pushf
xchg
jno
test
outsl
out
mov
scas
outsb
mov
pop
outsb
mov
ret
scas
xchg
shrl
dec
enter
xor
lahf
and
out
dec
lea
leave
and
je
and
ss
xor
cltd
dec
sbb
sbb
and
decl
test
imul
fists
jns
jmp
adc
adc
out
xor
xchg
rcrb
mov
xor
or
inc
gs
add
mov
jns
mov
cmpsl
ds
sbb
gs
or
dec
imull
sub
xchg
add
xchg
and
inc
jmp
es
push
fldenvs
test
push
push
lods
loopne
pop
push
sbb
inc
fadds
cs
sub
pop
aad
lret
push
sub
lahf
es
test
rolb
xchg
sti
cmpb
mov
dec
out
fwait
jl
push
dec
scas
cmp
cmp
cli
fidivs
fadd
test
push
xchg
das
mov
mov
push
mov
fwait
or
mov
sub
aam
ljmp
in
pop
add
push
icebp
jge
shrb
dec
xchg
mov
test
mov
xchg
mov
data16
jp
aad
or
std
notb
fsubrs
cltd
shrb
pop
and
repnz
cltd
repnz
ja
nop
pop
imul
lods
data16
mov
jle
push
xchg
in
insl
jbe
push
sub
fbstp
mov
test
jo
ja
out
xchg
mov
iret
aam
or
fwait
pusha
idivl
fidivrs
cli
pop
stc
jecxz
xchg
pushf
xor
push
outsb
xor
dec
xor
lret
cmp
rcrl
addr16
mov
repnz
ret
cmp
les
aam
aas
into
nop
cmpb
bound
xchg
pop
insl
xchg
mov
cli
and
pop
cmpsb
inc
in
push
test
and
je
imul
and
out
xor
and
mov
je
imul
jb
fdivr
lret
jmp
jmp
and
adcb
out
lret
inc
and
push
mov
mov
cmp
sti
dec
jb
jg
mov
jb
shlb
inc
test
arpl
dec
dec
pushf
and
inc
fldl
movsl
xchg
sub
mov
cmpsl
loope
gs
test
lcall
cld
jp
sub
add
sub
das
inc
push
ljmp
jno
mov
fucomp
in
dec
shrl
inc
enter
out
xchg
arpl
push
jg
xor
aas
ja
cmp
icebp
inc
push
add
xchg
mov
adc
repnz
dec
push
xor
xor
mov
push
lcall
stc
int3
pop
cltd
enter
xchg
jp
xchg
stos
lods
fwait
scas
das
and
fprem
js
cmpsl
ret
call
sbb
arpl
sub
or
and
or
inc
xlat
repnz
fs
movsb
and
inc
and
mov
decl
dec
adc
cwtl
or
dec
cmc
mov
jl
lcall
pop
pop
loope
and
jg
jmp
add
decb
stc
mov
jge
rcrl
dec
pusha
pop
jp
xorl
mov
rcrb
loope
xchg
das
nop
sahf
lods
mov
repnz
imul
sarl
cli
pop
mov
xchg
idivl
xorl
mov
and
fmul
or
cmpsl
movsl
add
jb
ss
push
in
mov
dec
inc
push
or
xchg
xorl
pop
xchg
xchg
adc
mov
adc
iret
jnp
add
call
mov
in
mov
sbb
and
mov
lret
ss
cmp
cmpsl
inc
dec
mul
leave
xor
data16
push
je
mov
stc
filds
mov
arpl
clc
or
jb
push
mov
sbb
sub
jo
xchg
decb
sub
loopne
mov
mov
lcall
or
lret
shll
js
orl
jp
data16
sbb
mov
cld
pusha
sbbb
sbb
stos
push
xor
dec
jb
dec
inc
insb
iret
data16
pop
dec
mov
inc
in
inc
js
and
nop
inc
sbb
sub
jmp
pop
out
and
inc
cs
pusha
fs
in
shl
cmp
sti
xor
das
or
mov
lock
or
call
xchg
mov
pop
call
sbb
imul
cmc
adc
imul
jp
jle
stos
mov
add
lret
inc
pop
lods
xchg
es
dec
lds
inc
les
jns
mov
push
and
add
mov
dec
ret
sub
dec
xchg
pop
fcomip
out
and
and
js
inc
inc
fnstenv
mov
fs
imul
fcoms
push
rcrb
adc
out
xchg
subb
or
cmpsb
dec
sub
cli
insb
sub
and
jae,pn
sbb
lods
popa
cmc
dec
scas
inc
std
ret
mov
xchg
fnstenv
mov
stc
xchg
rorb
push
mov
test
inc
test
mov
inc
out
inc
shld
adc
lahf
inc
dec
sub
pushl
and
or
ds
add
lds
mov
fisubs
mov
xor
rcll
in
push
stos
insl
jnp
es
add
repnz
jmp
std
sarb
xchg
or
add
mov
inc
fidivl
xchg
add
clc
cmpps
dec
hlt
das
mov
sbb
lea
cltd
push
imul
lcall
jle
xchg
mov
mov
clc
fisttps
jnp
xor
mov
cmp
clc
xchg
fld
cmpl
mov
mov
dec
out
pusha
xchg
lahf
movsl
push
mov
mov
xor
leave
shl
pop
mov
mov
mov
push
pop
stos
or
repz
pop
fisubl
dec
or
dec
pop
ss
and
mov
clc
addr16
pop
repnz
repnz
add
in
jmp
outsl
add
test
xchg
mov
add
xor
aam
xor
mov
sub
inc
jg
pop
vcmpps
outsl
cs
ret
movsl
inc
mov
pop
jg
jmp
inc
add
jge
push
das
cmp
inc
addr16
xlat
les
or
test
ret
dec
divl
fsubrp
lahf
xchg
sbbl
cmp
or
test
ret
mov
outsl
push
inc
fxch
cwtl
bound
lea
cmp
sbb
inc
in
and
xchg
sbb
notb
pop
dec
lret
shl
inc
mov
xor
enter
adc
int
das
aam
pushf
inc
mov
xchg
xchg
pop
les
mov
mov
adc
xor
pushf
inc
xlat
push
sub
mov
inc
in
sbb
mov
mov
loope
xchg
fbstp
pop
lock
mov
jo
imul
or
mov
pop
mov
push
fimull
shl
and
in
cmp
or
adcb
or
pushf
cld
out
xor
sahf
pop
mov
ret
push
fstps
movsl
mov
mov
mov
pop
mov
rol
imul
sub
mov
cmpsl
ds
sbb
push
repnz
pop
popf
add
daa
mov
fnsave
dec
popf
bnd
out
cmpsl
add
cmp
std
sti
xchg
imul
fidivrs
xrelease
jg
cs
ret
xchg
outsl
jp
mov
push
cmp
mov
pop
popf
std
aas
xchg
add
loope
fcoml
loope
sub
xchg
repnz
in
xchg
sub
outsb
xlat
sbb
cmp
movsl
cs
pop
xchg
or
test
es
and
xchg
add
sbb
adc
cmc
sahf
sub
mov
sub
jb
push
xor
ljmp
xor
add
adc
or
jge
lahf
cmp
jle
add
xlat
fnsave
std
mov
sbb
mov
sub
add
loope
pop
sahf
rcrb
and
aad
pushf
in
notb
inc
leave
or
cmpsl
ret
cmp
mov
dec
add
hlt
xchg
out
jle
mov
jge
insl
pop
icebp
mov
cmc
subl
loope
cmc
adc
int3
aad
push
loop
jmp
mov
rol
inc
or
enter
stos
ficoml
mov
jbe
xor
fcoms
xchg
xchg
push
loop
mov
jbe
ret
xchg
cmc
inc
outsb
adc
lods
shlb
xor
sahf
int
add
hlt
xchg
jne
pop
repnz
in
xchg
push
pop
inc
jns
out
jnp
add
inc
fiaddl
xchg
push
inc
xor
aad
jnp
inc
repnz
pop
lea
adcb
lahf
and
inc
arpl
lret
test
les
insl
rclb
stos
sahf
roll
js
pcmpgtw
jae
push
mov
jg
jo
scas
cmpsb
fsubrl
pushf
push
ss
mov
and
xchg
pop
popa
enter
pop
xchg
lods
fmul
xchg
jmp
out
lods
mov
push
in
lret
sti
push
imul
push
mov
sbb
aad
cmp
pop
sahf
jl
arpl
out
lret
loopne
xchg
inc
or
sub
cltd
test
mov
cmp
cltd
pop
lret
jbe
push
xchg
scas
pop
fcoms
xlat
add
push
aas
das
fwait
and
add
mov
out
and
mov
and
in
push
stos
lds
push
pushf
das
mov
mov
jo
test
sarb
adc
inc
pop
pusha
testl
xor
cmp
jne
outsb
pop
sub
rorl
sbb
dec
ss
js
pop
sub
push
jne
dec
aam
divb
sbb
adc
movsb
repz
mov
cwtl
pop
test
push
loope
scas
ds
xchg
cmp
sbb
inc
out
or
mov
adc
fs
popa
dec
xor
xchg
dec
mov
jge
stc
sbb
mov
divl
fdivrs
imul
cs
cmpsb
cmp
insl
or
sahf
jnp
sub
adc
jmp
xorl
jnp
pop
movsl
mov
lahf
outsb
adc
cmp
incb
sbb
nop
ret
rcll
jle
add
jg
mov
aam
in
mov
insb
mov
repz
dec
ss
je
shl
mov
insl
movsl
mov
and
inc
lret
ljmp
cmpb
lahf
in
or
jp
loop
push
fwait
xlat
mov
and
cmpsb
imul
je
mov
push
or
xchg
pop
xchg
cs
jge
insl
adcl
dec
or
add
negb
test
sub
inc
push
and
jp
mov
fcomps
dec
ret
or
hlt
js
jmp
call
sarl
mov
or
add
add
aam
cmp
shrl
lea
fs
add
mov
out
mov
mov
iret
xrelease
pop
mov
mov
into
sub
mov
cld
xchg
mov
int
ja
mov
inc
fisubs
fwait
das
inc
pop
lahf
daa
mov
inc
sbb
and
push
out
dec
jne
das
mov
sub
dec
xchg
test
mov
push
sbb
mov
or
out
test
fsubrs
fs
in
sub
mov
clc
out
mov
adc
int3
push
xor
fistps
mov
sbb
jle
xchg
out
cld
sub
pop
pop
ss
push
or
pop
fwait
mov
fcomp
jb
or
jecxz
jge
shll
movsl
js
ja
mov
daa
or
loop
adcb
mov
fcoms
stos
push
nop
enter
out
mov
xlat
cmp
pop
and
xor
sbbb
test
push
jmp
je
cltd
repz
test
bound
pop
loopne
mov
mov
dec
dec
lock
roll
xor
adc
cwtl
cmp
jg
jle
mov
hlt
pop
nop
dec
aaa
sbb
sbb
or
pop
es
mov
jp
inc
les
popf
lods
jg
mov
jp
insb
idivl
dec
and
sub
jbe
jge
lock
push
or
into
mov
gs
jo
inc
pop
cld
mov
sbb
sbbl
adc
mov
xchg
pusha
add
pushf
mov
sub
daa
pop
loop
push
pusha
mov
mov
scas
sbb
fists
sub
leave
cwtl
sbb
inc
sar
xchg
add
and
sbb
mov
cmp
add
loop
adc
jl
cmp
leave
inc
push
sub
int
mov
pop
pop
mov
or
out
cwtl
call
sbb
and
aaa
mov
fistpl
sbb
es
cs
adc
mov
mov
cmp
aam
out
push
mov
loope
xor
mov
xor
jns
ja
adc
sbb
mov
sbb
jb
movsb
cmp
mov
mov
sahf
cld
outsb
jl
or
or
cwtl
mov
into
adcb
pop
sub
vmwrite
add
stos
xchg
add
lods
mov
fiadds
mov
pop
mov
mov
mov
or
popf
sahf
loope
sbb
and
fwait
mov
ret
and
xchg
movsb
cmp
add
cs
inc
roll
cs
aaa
inc
jl
je
mov
dec
sub
int3
mov
jecxz
mov
or
mov
push
fsubs
fbld
jne
out
xorl
adc
add
cmp
sub
pop
cmp
imul
fbld
popa
xchg
add
adc
xor
mov
xor
jmp
xor
inc
sti
or
xchg
pop
or
push
add
push
in
xchg
xor
movl
adc
hlt
cmp
ret
adc
call
xchg
mov
dec
in
fadds
push
inc
sub
daa
xchg
jle
inc
mov
lahf
ss
rcrl
push
call
push
pop
sahf
xor
cmpsb
mov
lds
or
rcrl
push
out
pop
lds
xchg
rcrl
dec
out
push
lds
xchg
pop
stos
gs
in
jne
les
gs
inc
dec
in
in
push
and
inc
rol
in
and
icebp
cmpsl
fistpl
icebp
push
add
and
xor
pop
insb
mov
ret
in
mull
lods
les
lret
inc
pop
sbb
hlt
sub
ja
mov
fldt
mov
lret
xchg
pop
mov
xchg
xor
adc
push
mov
idivl
andb
adc
fs
adc
out
fsts
ja
xor
jb
pop
outsb
jmp
sbb
mov
mov
cltd
in
out
stos
shrl
adc
xor
mov
sbb
push
pushf
cmp
dec
outsb
iret
cld
into
stos
bound
xor
and
out
xchg
pop
jns
jns
std
mov
leave
mov
push
dec
fidivrl
sti
xchg
sti
adc
out
adc
imul
cmp
xchg
fwait
or
loopne
sub
add
lea
addr16
sbb
ljmp
xor
adc
adcl
cmp
lret
jg
shr
cmc
xchg
clc
lea
mov
insl
xor
sahf
mov
pop
in
xchg
pusha
mov
call
inc
sbb
cmpsl
jp
outsl
mov
icebp
push
sbb
int3
fidivs
fiadds
pop
int
lret
push
pop
jno
bound
jecxz
cmp
test
lods
and
shrb
jp
jbe
in
xor
push
or
sbb
in
leave
jnp
sti
cmp
mov
divl
mov
mov
repz
js,pt
mov
and
es
or
movd
insb
sub
add
es
sub
pop
data16
mov
leave
ds
insb
jge
jns
pop
in
xchg
cmp
out
cmpsb
outsb
stc
mov
hlt
xchg
popa
aaa
mov
popf
call
fwait
bound
sti
je
enter
push
sbb
scas
inc
js
mov
pop
shrb
out
inc
add
les
xor
lahf
outsb
fimuls
push
jb
sub
mov
shrl
xrelease
mov
adc
clc
mov
sub
shl
das
pop
das
cmp
enter
stos
add
inc
cli
cwtl
imulb
jp
sub
repz
cmp
cwtl
ret
dec
lret
in
std
lret
into
aad
pop
fldt
int3
mov
cmp
fwait
jg
dec
push
test
sub
rol
push
clc
mov
sub
repz
dec
in
mov
inc
jg
rorl
loope
xchg
movsb
cmp
sti
cmc
mov
and
cli
and
rcrb
aaa
pop
adc
fs
pop
sbb
jecxz
xchg
stc
imul
xchg
pop
xor
lea
dec
rcrl
sarl
sbb
jne
jg
pop
subb
fs
addr16
mov
mov
cmc
jne
enter
inc
lret
cmp
push
cmp
mov
xchg
and
gs
data16
lock
cli
sbb
pop
incl
rclb
mov
stc
and
inc
je
aaa
jle
test
push
std
sub
mov
out
xlat
pop
pop
aaa
sbbb
add
xchg
push
icebp
test
scas
es
andb
cmp
jae
mov
loop
push
adc
out
mov
fildll
mov
addb
jg
orl
sbb
inc
push
and
mov
je
xor
sub
ret
xchg
jne
popf
cmpsb
mov
or
repz
dec
sahf
add
loope
xor
enter
nop
negb
sarl
imul
xchg
xor
xchg
aad
out
pop
or
aaa
imul
stos
xor
jbe
dec
sub
add
mov
jno
shrb
addr16
fimuls
das
mov
outsb
fcompl
movsb
push
loop
mov
shl
mov
popa
lods
dec
add
andb
insl
sbb
xor
fsub
add
pop
xor
fwait
push
call
test
rcr
mov
and
dec
neg
shr
subb
and
xchg
mov
xorl
xor
imul
fistl
dec
jg
jno
ds
out
addl
scas
xor
negb
ja
xor
std
push
jno
xchg
sub
std
or
out
jae
aaa
shrb
dec
clc
mov
or
nop
push
dec
add
mov
sbb
mov
pop
into
stos
imul
adc
enter
mov
mov
push
aam
add
jo
aas
dec
data16
cmp
popa
add
push
xchg
sub
sbb
imul
jg
cwtl
push
addr16
ror
jge
sbb
gs
cli
outsb
add
leave
or
cmpsl
or
cmp
adc
les
push
out
dec
sub
in
xchg
pop
sub
xor
push
or
mov
xor
fdivl
mov
sbb
dec
push
cwtl
int3
jle
xchg
and
cmp
fs
dec
pop
adc
out
and
in
or
dec
xchg
clc
and
js
mov
mov
pop
dec
lcall
aad
sub
pop
cmp
sbb
in
sbbl
clc
push
jp
pop
push
sub
dec
inc
cwtl
das
jb
test
add
cmpsb
cmp
lcall
mov
xor
mov
sub
shlb
mov
inc
jp
inc
insb
pushf
mov
rorb
jecxz
push
gs
mov
repnz
pop
mov
mov
mov
cmp
daa
or
test
shrb
fisubrs
pop
loope
jl
mov
nop
out
rol
sbb
lret
dec
and
pop
lahf
and
add
or
loopne
in
pushf
fst
jo
arpl
adc
or
ja
call
insb
inc
mov
jo
lea
test
stos
jmp
jecxz
push
push
push
jno
jbe
and
mov
call
movsb
sarl
out
add
and
mov
movsb
cld
lcall
sbb
add
popa
jne
push
test
out
stos
aam
mov
add
pop
fstpl
in
rcrb
mov
arpl
movsl
cmp
movsl
dec
call
dec
mov
push
fldt
nop
mov
outsb
arpl
inc
jno
test
jl
and
stc
pushf
mov
test
inc
pushf
sahf
jb
nop
adc
jecxz
adc
scas
jns
testb
cs
cmpsl
ds
sti
js
outsb
mov
clc
fwait
cmpsl
add
cmp
or
mov
or
pop
stos
out
pop
pop
movsl
addr16
and
dec
in
jmp
std
cltd
and
mov
add
push
test
nop
push
mov
loope
adc
xchg
repnz
sbb
subb
jmp
xor
dec
cmp
xchg
fldenv
dec
nop
ljmp
adc
xlat
xor
loope
out
xor
lret
cmc
push
ror
lods
jle
fsubl
cmp
gs
fldt
pop
mov
mov
jecxz
pop
scas
les
lahf
mov
popf
ficoml
into
shlb
popa
sahf
rcr
pop
jae
mov
cld
out
sarb
xchg
aaa
jp
data16
pop
push
js
loope
mov
inc
pop
mov
mov
xor
or
mov
stc
lea
mov
sbb
mov
or
in
push
ljmp
jge
lods
add
jo
repz
mov
test
fwait
movsb
cmp
test
and
push
add
pusha
or
adc
repz
lods
inc
cmp
pop
mov
dec
xor
addr16
ds
pusha
mov
ljmp
jno
or
data16
mov
xchg
jmp
sub
ficompl
iret
sahf
jl
loope
push
shrl
hlt
cmp
jo
sahf
sub
adc
leave
sbb
stos
cli
pop
pushf
push
andb
xchg
in
cmpsl
std
mov
enter
jge
dec
adc
inc
mul
adc
in
cltd
jnp
inc
cli
xchg
je
or
xchg
sbb
jmp
adc
and
mov
push
or
jecxz
push
sub
adc
inc
inc
stc
mov
add
out
scas
adc
inc
sarb
scas
repz
stos
outsl
sbb
push
jbe
and
inc
jo
cmc
dec
jge
add
les
out
cmpsl
cmp
out
pop
cmp
fnstenv
dec
or
lock
fbstp
push
ljmp
lret
jae
push
mov
add
push
and
ja
jle
mov
roll
jmp
in
inc
and
jg
push
in
das
or
push
jb
xchg
lahf
icebp
cltd
bound
or
cs
data16
push
mov
nop
scas
cmp
dec
sbb
repnz
shlb
imul
fwait
data16
jle
popa
inc
ljmp
push
scas
push
inc
cwtl
mov
ja
add
enter
loop,pn
iret
adc
loopne
xor
mov
cmp
push
out
popa
sbb
adc
xchg
test
mov
jle
push
mov
shl
mov
sbb
add
mov
dec
leave
jns
adc
cmp
push
insl
pop
icebp
jl,pn
xchg
mov
lahf
pop
pusha
repz
xor
out
mov
lret
scas
mov
insb
jns
aaa
outsb
or
es
inc
fimull
scas
popa
sbb
jecxz
and
pop
mov
push
daa
rolb
add
push
fisubrs
fs
sub
push
test
pavgb
dec
fwait
adc
sbbl
xchg
fwait
imul
or
mov
lock
fsubrp
push
insb
xchg
add
rolb
and
imul
sub
pop
cmp
cmp
arpl
pop
dec
in
cmp
cmp
movsl
dec
pop
mov
gs
test
es
jecxz
xchg
push
jbe
sbb
jb
popf
sub
mov
shll
cmpsb
arpl
stos
dec
out
adc
rcl
mov
nop
sub
in
and
and
sarb
and
data16
faddl
mov
aad
adc
adc
lock
add
ja
add
int3
or
in
leave
add
or
sbb
ljmp
adc
leave
mov
test
pop
jmp
in
push
sub
popf
stos
sub
jne
lock
jae
pushf
cmpsb
push
adc
das
mov
dec
lretw
adc
jge
fs
stc
sub
dec
pop
std
push
xor
mov
sahf
fucomip
push
xor
shrl
fisubrs
inc
pop
jle
mov
mov
sarb
mov
sahf
jb
ret
out
jae
dec
icebp
inc
xchg
icebp
mov
add
subb
and
or
stos
xchg
or
lock
mov
movsl
mov
sub
xchg
lods
inc
pusha
ds
fmuls
jl
rcl
add
mov
mov
inc
or
mov
inc
ret
imul
rcll
jne
add
add
in
lret
mov
dec
dec
dec
in
repnz
lcall
sbb
push
push
push
es
push
jecxz
push
mov
add
mov
mov
mull
in
inc
fimull
test
and
mov
fbstp
cmpsb
iret
fsts
push
push
pop
sti
shrb
adc
dec
adc
imul
push
adc
pusha
dec
sub
jbe
push
xor
cmpsb
inc
adc
xor
loopne
jnp
cli
inc
lods
adc
ja
repnz
iret
sbb
imul
sbb
aas
sbb
sub
and
mov
push
sbb
dec
sti
and
jl
enter
shl
clc
pop
lahf
fcomip
cs
inc
push
push
cmp
xor
fwait
lods
push
add
pop
imul
xchg
jae
insb
pop
inc
fsubl
jbe
mov
jbe
ret
faddl
ja
pushf
adc
dec
dec
lea
outsl
out
or
mov
jl
xchg
stc
fistpl
adc
sti
jg
out
loope
repz
out
ljmp
shll
hlt
push
xchg
test
inc
xchg
cmpsb
pop
xor
mov
cmpsb
xor
mov
or
cmpsb
adc
call
xor
and
call
jbe
mov
aam
lods
in
adc
add
mov
adc
cwtl
out
jp
xchg
rol
cld
in
outsb
sahf
mov
std
cmp
mov
mov
in
mov
sub
xor
fdivrs
push
in
into
dec
adc
popa
xchg
out
scas
ja
add
into
sti
pushf
and
ljmp
and
int3
pop
in
and
push
shll
push
aaa
test
pop
lahf
mov
in
and
test
and
sub
lret
int
sub
lea
push
sub
lahf
inc
mov
push
push
pop
cli
outsl
inc
lcall
push
js
pop
xchg
test
nop
push
xor
mov
daa
mov
testb
insb
or
mov
mov
push
lods
and
loope
xor
add
xor
data16
icebp
inc
fwait
stos
flds
stc
inc
out
test
lret
mov
adc
or
inc
adc
pop
sbbb
mov
fimull
xchg
es
cwtl
sub
xchg
jne
inc
repnz
outsl
pop
test
adc
ja
ljmp
lcall
cwtl
sub
ror
out
pop
dec
scas
mov
jg
jb
mov
fildll
test
mov
jecxz
mov
lods
mov
loop
shrb
inc
lcall
or
sub
ss
xor
xchg
mov
sub
inc
sbb
dec
insb
add
daa
mov
push
sbb
mov
jbe
or
lea
and
imul
mov
push
pop
jb
test
push
imul
rorb
shl
push
lea
adc
arpl
push
sbb
jno
outsb
out
imul
xor
push
enter
stc
in
sbb
inc
dec
inc
shlb
xorl
xor
loop
enter
sahf
cmpsl
sahf
sbb
jge
lods
dec
dec
fisubs
or
pusha
xchg
pop
or
jns
push
xchg
add
mov
or
push
mov
xor
ds
push
fisubl
add
and
out
dec
outsb
enter
add
inc
sbb
inc
push
add
lds
cmc
cmp
add
test
jg
dec
mov
or
jno
jo
add
cwtd
popf
inc
pop
bnd
xchg
push
xchg
jns
dec
aad
mov
jecxz
push
sub
sub
lret
inc
stos
mov
push
mov
push
negl
push
pop
es
sbb
push
sbb
test
mov
bound
aam
popf
fbld
adc
mov
ret
fsubrp
es
mov
or
add
add
ja
test
push
insb
aam
gs
mov
xor
push
cwtl
punpcklwd
pop
mulb
pop
jns
sbb
fdiv
movsl
pop
sub
xchg
loope
loop
mov
and
frstor
inc
jmp
or
and
and
pop
test
das
shrl
icebp
icebp
or
mov
loope
push
cltd
imul
push
and
loopne
popf
jecxz
inc
xchg
mov
cmp
outsb
das
inc
fcompl
outsl
inc
jp
inc
jnp
cld
lcall
in
push
loope
insb
add
add
sbb
adc
fldt
andb
inc
or
cwtl
jmp
cld
xor
pop
cmp
out
iret
sub
jb,pt
and
je
or
inc
xchg
cli
dec
ljmp
call
data16
gs
loope
fnsave
ret
pop
arpl
loopne
cmp
mov
scas
sahf
push
pop
lahf
mov
add
popa
add
xchg
xor
mov
fistpll
inc
fsubrl
shll
add
fnstsw
push
mov
rcl
mov
in
repz
and
push
dec
pop
js
xchg
mov
shld
les
outsb
adc
dec
xor
iret
fs
es
outsb
mov
mov
jns
or
push
pop
mov
sub
leave
fcoms
ret
mov
add
ret
jmp
mov
jns
jbe
cmpsl
repnz
test
pop
cli
jmp
and
mov
xor
mov
scas
adc
pop
popa
clc
dec
dec
jecxz
sahf
pusha
jg
push
iret
sbbl
mov
sahf
and
mov
add
in
fcomp
pop
aas
fs
cmp
mov
xchg
mov
jecxz
cld
loop
push
arpl
cwtl
pop
jecxz
ja
inc
leave
out
xorb
inc
lods
mov
hlt
sti
lods
cmp
sub
push
iret
cmp
adc
leave
lahf
popa
add
fs
mov
bound
pusha
iret
out
dec
ficoms
mov
loope
pop
sbb
mov
cs
ds
loopne
push
or
shrl
push
stos
push
lods
jns
imul
rol
js
jl
shr
in
mov
shlb
fadd
sub
add
loope
int
movsl
mov
lods
scas
or
or
cmp
mov
test
cli
dec
arpl
xor
dec
push
cmp
mov
daa
addr16
mov
sahf
xchg
mov
data16
call
sbb
bound
dec
push
push
push
pop
inc
sub
cs
cs
es
mov
ja
push
data16
mov
or
bound
call
fwait
jno
pushf
add
and
adc
int3
mov
lea
xchg
popf
mov
clc
pop
sbb
sahf
xor
mov
push
call
xchg
insb
test
pop
mov
lds
divb
lret
stos
or
cmc
dec
fs
out
sbb
adc
xchg
or
fwait
movsb
inc
jns
inc
in
mov
adc
in
aas
mov
lods
aas
adc
sbb
and
test
fsubrp
lahf
mov
add
xchg
ljmp
aam
jo
and
cmpsb
mov
mov
adc
mov
mov
ret
hlt
cwtl
das
loop
inc
push
and
sti
ss
sub
adc
inc
shlb
jb
mov
inc
jmp
rcll
ret
sbb
in
or
sub
popa
enter
popf
mov
mov
aas
inc
inc
pop
adc
out
lock
pop
lea
or
das
jp
xlat
mov
push
mov
inc
call
test
mov
push
mov
ret
lods
mov
dec
lds
sti
mov
cwtl
mov
lds
dec
cmp
lret
rcrl
lods
mov
dec
popf
std
xchg
lods
fisubrl
stos
add
inc
test
outsb
loope
cwtl
jl
jae
imull
pushf
mov
push
aas
lret
push
es
rol
out
push
sub
mov
mov
xchg
pop
outsb
adc
push
and
arpl
and
arpl
cli
fcomps
daa
out
xchg
cli
xchg
mov
xchg
lcall
es
lods
xor
mov
jle
lret
sahf
dec
rol
mov
cltd
mov
scas
cmp
sbb
or
push
sahf
sahf
cmc
fidivs
push
lods
jmp
or
mov
addb
xor
int
dec
mov
push
mov
add
mov
fisubs
or
xor
xchg
xor
movsl
inc
fdivrl
cmp
aaa
mov
scas
xor
inc
inc
addl
or
bound
out
inc
fbld
sahf
fildl
arpl
push
dec
push
movsb
mov
or
mov
and
mov
sete
je
mov
push
fcomp
jl
mov
bound
sbb
xor
mov
popf
stos
loope
pop
cld
xchg
dec
test
lock
xchg
leave
dec
push
sti
cmp
mov
ljmp
mov
inc
mov
add
sbb
sbb
inc
mov
adc
mov
iret
pop
stos
sbb
push
faddl
js
mov
inc
dec
and
mov
mov
inc
int
fidivl
push
jno
sbb
push
mov
mov
mov
repz
mov
add
or
inc
cwtl
adc
inc
jmp
loopne
sbb
xchg
xor
jb
outsl
mov
outsb
mov
mov
dec
adc
jnp
xor
incl
push
dec
cmp
fdiv
loop
rorb
gs
and
scas
cmp
push
imul
call
xchg
sti
push
lock
dec
adc
rorl
pop
scas
shl
pop
out
push
repnz
xchg
orb
mov
scas
dec
es
sahf
decl
add
fistpl
icebp
lret
mov
rcrb
or
out
jge
mov
fimuls
mov
addl
cltd
in
push
mov
fstl
or
int3
pop
in
in
in
adc
fcmovb
ret
jle
sbb
xchg
mov
rcrb
adc
jge
cmp
dec
inc
jge
stos
or
jae
insb
mov
jo
adc
sti
mov
xor
or
pop
dec
dec
in
ja
lret
test
in
dec
cmpsb
inc
mov
in
pop
daa
jne
push
jmp
sbb
pop
shlb
aas
pop
adc
jl
xor
rcll
rclb
jb
fistl
out
rorl
rorl
cli
mov
inc
and
out
add
popa
clc
mov
arpl
add
inc
fdivrp
lret
mov
fcoml
fbld
daa
push
call
mov
pop
lock
cmp
stos
push
mov
or
sub
data16
adc
cltd
xor
mov
fistpll
movsl
cmp
sbb
and
in
imul
jg
xchg
jne
in
test
mov
mov
sbb
mov
push
mov
xorb
repnz
fs
xchg
aad
mov
sbb
jle
hlt
mov
mov
sti
xchg
jecxz
out
xchg
rorl
inc
pavgb
cld
sub
mov
pop
in
mov
int
lods
ljmp
mov
cmp
out
movsb
rol
mov
mov
pop
movsl
pushf
inc
in
push
test
add
cli
lahf
ss
mov
test
push
out
cmp
in
int
aam
bound
xor
dec
nop
stc
arpl
sub
mov
out
pop
lock
dec
ret
out
pop
dec
lahf
sub
aaa
sub
push
in
and
sti
lcall
sub
sahf
pop
cltd
into
gs
jnp
mov
and
xchg
push
push
jmp
into
test
pop
xor
sbb
cmpsl
ds
mov
lds
es
insb
jae
sahf
dec
dec
in
xchg
or
add
jmp
insl
add
sub
loopne
mov
mov
faddl
bound
insb
cmp
andb
pop
sahf
lods
push
inc
dec
in
outsl
pusha
mull
xorb
adc
inc
jge
inc
scas
arpl
ror
arpl
mov
cmp
xor
and
cli
xchg
push
mov
scas
mov
rcrl
fidivs
and
cld
test
sbb
outsl
pop
mov
ret
clc
pop
insl
mov
imul
xchg
mov
flds
push
scas
or
mov
xchg
or
or
sbb
xor
cmp
jbe
fbstp
xchg
stos
inc
enter
in
mov
je
clc
aaa
xchg
shrl
push
sbb
test
adc
mov
fidivs
sarl
add
mov
mov
mov
xchg
out
insl
or
or
pop
sub
adc
ljmp
das
insl
pop
sti
xchg
dec
mov
shl
rcll
mov
dec
test
inc
xlat
add
aaa
jae
lods
inc
dec
test
popa
clc
add
repz
sbb
fcmovbe
jo
add
pop
jb
cmpsl
ds
stos
lcall
inc
jbe
jb
test
push
test
es
jb
pop
dec
test
rcrl
add
inc
cmpsl
xor
aad
scas
inc
or
dec
loope
push
inc
faddl
pop
lret
xor
ss
fs
pop
fiadds
pop
sub
icebp
mov
dec
add
subb
movsb
pop
mov
testl
std
dec
lods
inc
jge
shlb
sahf
mov
and
sbb
lods
inc
outsb
or
inc
cmp
leave
pusha
mov
sbb
js
icebp
lods
pop
mov
mov
jecxz
int3
scas
inc
xchg
pusha
leave
pusha
xchg
xchg
sub
inc
fcoms
xchg
xorb
fbstp
jae
mov
shlb
cmpsb
push
cmp
jmp
jbe
fldenv
jae
shll
jbe
arpl
je
icebp
test
out
sarb
inc
mov
sbb
xchg
mov
enter
outsl
push
jbe
cwtl
das
popf
movsb
jecxz
xchg
sub
push
sbb
mov
mov
jo
xchg
movsl
popf
stc
nop
shlb
test
cmp
mov
fdivrs
mov
pop
bnd
call
xchg
loope
push
sarl
ds
pop
dec
jecxz
mov
mov
push
pop
pop
lcall
cltd
cld
xchg
int3
cs
sub
push
jmp
leave
leave
pusha
cld
mov
mov
sub
add
insb
scas
inc
mov
ja
sbb
jb
in
mov
jnp
add
insl
jae
pop
mov
jno
dec
movsb
xor
pushf
xor
jne
xor
insb
jp
in
stos
mov
pop
mov
xchg
jne,pn
je
xchg
movsl
adc
mov
jne
pop
out
pushf
movsl
sbb
mov
insb
in
andl
push
mov
dec
je
gs
jp
int
push
add
stos
cltd
es
jnp
and
jnp
arpl
jnp
inc
stos
gs
xchg
cwtl
jnp
test
data16
test
cld
xchg
lret
push
fidivl
xchg
stc
nop
leave
mov
mov
push
mov
pop
icebp
push
es
inc
push
add
shlb
fyl2x
mov
push
call
aaa
jecxz
or
sti
loopne
sub
data16
dec
in
jmp
repz
test
mov
pushf
mov
xchg
mov
push
mov
or
adc
xor
shll
dec
loope
cmpl
fcmovu
icebp
or
rcl
sub
data16
sbbb
mov
add
shlb
mov
jl
cwtl
lods
mov
std
xchg
movsb
dec
ljmp
lahf
push
lods
int
lds
adc
mov
scas
cmpsl
xchg
jl
jp
clc
stos
pop
and
test
movsb
cmp
jbe
mov
jnp
jb
xchg
jb
js
fisubrs
fnstenv
mov
sarl
arpl
push
movsb
nop
xchg
sub
stos
pop
mov
mov
push
cmpsl
xchg
mov
enter
pop
mov
xchg
and
mov
shrb
into
inc
fdivrp
fcomip
xchg
sub
je
sbb
cs
aad
or
cltd
xor
shlb
int3
sub
jecxz
sbb
dec
or
std
or
cmp
sbb
xchg
cs
add
jge
fdivrl
rclb
out
pop
repz
or
lea
pop
stos
inc
ss
jno
pop
leave
pusha
mov
test
imul
out
test
in
cmpsl
adc
pop
mov
push
jmp
test
xor
mov
fsubl
or
mov
sub
sub
hlt
mov
jns
add
iret
and
jo
xor
xchg
push
xchg
cmpsb
out
lea
enter
cmp
daa
insb
sbb
fimull
mov
fwait
loopne
mov
jmp
mov
or
inc
xchg
pop
xchg
mov
stc
call
or
aas
jae
test
leave
fidivs
scas
outsl
push
fsubl
aaa
into
push
std
push
push
ja
cwtl
test
testb
mov
scas
lds
iret
out
outsl
dec
mov
ret
hlt
lahf
sbb
rcll
lret
imul
jno
popf
or
lret
sbb
pop
or
jo
popf
xor
xchg
sub
ret
pop
ds
aaa
adc
xor
arpl
push
fists
xor
mov
lret
add
outsb
xor
jmp
les
mov
mov
pop
inc
jmp
pop
sbb
aaa
push
adc
xchg
mov
fdiv
mov
pop
add
cmp
add
dec
aaa
xchg
cmpsl
and
xor
jb
cmp
jb
jecxz
mov
test
dec
sbb
push
mov
sbb
mov
fwait
sahf
je
sbb
dec
iret
xchg
lahf
inc
mov
ja
push
mov
mov
clc
push
pop
testb
mov
adc
pop
push
mov
pop
xchg
pop
les
pop
lea
imul
adc
adc
push
sub
sub
and
cmp
adc
push
cltd
mov
mov
jmp
fstp
jle
fcompp
jo
loope
js
frstor
jg
jmp
push
and
xchg
jp
shrb
or
lahf
aas
inc
mov
scas
or
loop
cli
and
pop
cmpsb
ljmp
fdivrp
xchg
fcompl
icebp
sub
jp
xlat
int3
aaa
mov
lods
inc
ja
flds
cwtl
adc
stos
scas
push
add
stos
bound
mov
mov
push
repz
sbbl
insb
jp
xor
loopne
add
enter
xchg
xchg
subb
insb
mov
or
dec
mov
aad
fucom
out
lret
popa
aas
add
or
jnp
arpl
ljmp
xor
dec
pop
leave
cmp
nop
add
sbb
imull
push
pop
notb
and
sbb
mov
cmp
test
rorb
popf
xchg
cs
inc
mov
ss
pushf
mov
jge
push
movsb
cmp
pusha
out
inc
fmull
addr16
mov
pop
mov
pop
icebp
scas
jecxz
cld
mov
call
jne
std
int
repnz
shrl
pop
push
or
pop
mov
movsb
pop
and
jmp
gs
movsl
in
repz
mov
adc
or
jp
sarl
cmp
les
and
sbb
int3
push
scas
lret
or
fcompl
es
adc
sbbl
xchg
out
add
or
jmp
test
dec
ret
mov
mov
cmp
push
sbbl
mov
test
push
or
ds
fldl
mov
outsl
jnp
or
jg
xor
mov
jmp
sbb
jns
out
jl,pt
aaa
inc
jl
lahf
ds
cmpsb
push
inc
lahf
xchg
push
shrb
jo
sbbl
imul
adc
mov
icebp
sbb
fistpl
movsb
pop
jl
popf
std
mov
or
std
cwtl
mov
add
jge
jbe
cli
xor
popa
into
imul
adc
int
add
fiadds
fistpll
bound
add
add
popl
movsl
xchg
mov
fwait
xor
jno
in
aas
and
jge
aam
in
push
leave
and
adc
lods
jo
mov
ljmp
xor
xor
push
dec
es
cmp
adc
lock
inc
cmp
mov
dec
ss
xchg
inc
xchg
call
push
mov
out
push
leave
sbb
jbe
mov
nop
add
subb
jbe
mov
or
and
xchg
cld
sub
stos
aam
clc
mov
mov
ja
aam
inc
jecxz
cmpsb
xchg
jo
mov
out
lcallw
cltd
mov
mov
pop
xchg
sub
add
out
jb
cmpsb
aaa
push
pop
or
jge
xor
call
iret
cwtl
dec
add
aas
mov
push
or
mov
loope
adc
sbb
add
out
xchg
mov
test
mov
pop
out
popf
int3
push
lea
iret
out
aaa
mov
push
fnstenv
cmc
outsb
cmpsb
leave
repnz
pop
int
pop
mov
mov
bound
lahf
rorb
out
pop
fidivl
adc
cmpsl
movsl
mov
sbb
sub
hlt
mov
sahf
jnp
std
sbb
cmp
in
cmc
mov
mov
aas
out
sbb
sbb
ss
mov
repnz
fistl
add
test
rclb
pop
mov
fisubs
fwait
shl
xchg
mov
pop
lret
rorb
sbb
mov
test
mov
sub
arpl
loope
jo
inc
mov
sub
jnp
cs
lahf
imull
or
pop
mov
lds
or
insb
in
xor
add
clc
call
and
push
test
xchg
pop
or
inc
xchg
xchg
pop
xchg
hlt
sub
pop
push
sub
aas
scas
jae
insl
faddl
push
mov
outsb
cmp
jb
jns
dec
add
sahf
adcl
xchg
jnp
sub
fldcw
jmp
insb
das
xor
mov
ds
sbb
or
hlt
add
mov
mov
fbld
loope
stos
mov
add
adc
pop
inc
sub
scas
inc
xchg
out
mov
sbb
push
enter
xchg
sub
loope
push
flds
loop
lret
stos
jg
pop
adc
jo
xchg
sub
and
add
cli
ss
testl
adc
mov
shrb
out
sbb
iret
pop
scas
js
les
sbb
lcall
arpl
fstpl
sub
cmp
lcall
adc
push
frstor
cmpsl
out
test
enter
into
push
int3
fmull
mov
xor
sbb
in
jl
testb
or
dec
and
sbb
cmpsl
popa
sbb
and
fdivs
jbe
aad
mov
dec
cmpsb
pop
dec
push
jo
jno
ret
xor
fisttps
sbb
stos
lret
cld
push
jl
mov
mov
in
dec
enter
aaa
xchg
adc
maskmovq
idivl
or
push
lock
aad
push
outsb
or
cmp
mov
out
sub
sahf
pusha
jb
and
sub
cmpb
lock
repnz
idivl
jmp
test
lret
mov
mov
mov
rep
lret
enter
loopne
test
ret
adc
cwtl
fdivr
xchg
or
push
iret
stc
xchg
inc
mov
mov
pop
ret
xchg
dec
in
call
pop
int3
or
cmp
js
cmpl
outsl
mov
lahf
jge
mov
dec
xor
sarl
pop
mov
loopne
movnti
mov
adc
cmpsl
push
cmc
daa
fwait
out
fwait
mov
arpl
sub
jge
in
jnp
or
push
sub
dec
or
in
sbb
pushf
lds
std
and
pop
movsl
fsubrs
sub
outsl
sbb
test
mov
ficomps
aam
mov
jns
dec
clc
pop
pushf
jg
scas
sub
adc
insb
xchg
adc
lahf
in
out
cld
xchg
mov
sbb
or
mov
mov
insl
inc
jnp
push
and
aaa
in
mov
icebp
and
sbb
std
inc
sub
scas
inc
lret
inc
xchg
mov
mov
pop
int
push
sti
jg
xor
or
xchg
lea
jne
stos
mov
pop
sarl
add
nop
xor
faddl
ja
test
xchg
sub
call
call
data16
addr16
call
lahf
andl
je
mov
jae
stos
outsb
ret
repz
ret
loop
inc
mov
out
shlb
jp
and
xchg
xor
inc
mov
push
sub
test
loope
lock
mov
in
xor
and
push
lret
cmp
dec
jg
mov
outsb
mov
cmpl
mov
ja
adc
lds
push
or
and
inc
adc
xchg
mov
js
test
sub
nop
daa
lods
cmp
sahf
lret
fstpl
enter
adcb
xchg
cmp
shlb
icebp
adc
jbe
mov
mov
or
mov
push
mov
stos
data16
dec
jecxz
shr
xor
addr16
inc
mov
ss
adc
inc
sbb
iret
sbb
addr16
lahf
and
add
mov
and
imulb
les
getsec
into
inc
iret
mov
fstl
ficompl
pusha
lret
mov
push
in
jecxz
sub
ljmp
or
jmp
imulb
int
addb
outsl
jae
pop
out
mov
mov
adc
scas
push
call
jae
push
push
jmp
aaa
xlat
daa
fucomi
jl
decl
aaa
jmp
push
xchg
or
xor
pop
aad
jns
dec
jns
mov
dec
cmp
push
jp
idivl
jb
mov
inc
inc
jnp
xor
daa
ljmp
push
cmpsl
fs
xor
outsl
cmp
jb
inc
fisubrl
sbb
xor
and
cmpb
adc
out
lods
daa
loop
je
push
movsl
mov
push
jbe
pop
test
adc
out
lret
or
push
cltd
icebp
mov
movnti
aad
addr16
mov
push
fsubr
mov
add
iret
lea
cmpsl
xchg
mov
negl
mov
cmc
mov
adc
xchg
lods
jbe
testb
mov
flds
xchg
lcall
scas
lret
pop
push
fbld
adc
inc
push
xor
xchg
dec
stos
xchg
insb
adc
ret
sbb
sub
or
nop
fs
inc
adc
sub
mov
jne
xchg
xchg
lret
xchg
insb
add
shlb
aas
inc
cli
and
inc
stc
nop
push
mov
lods
jo
mov
dec
notl
xchg
arpl
js
idivb
push
mov
cmp
xchg
adc
sub
mov
jmp
pop
mov
cld
fbstp
fisubrl
aas
mov
stc
xlat
dec
lock
push
int
les
ret
sti
xor
fnsave
inc
sbb
cli
pop
ja
mov
mov
je
pop
mov
sbb
arpl
scas
jp
add
or
lods
fcmove
push
imul
leave
les
sub
movsl
cmp
popa
les
add
fcompl
adc
adc
into
cltd
insb
in
out
loope
mov
or
arpl
in
cmpsl
mov
mull
out
shrb
rol
cmp
ret
aad
pop
pop
mov
add
daa
std
das
xchg
cmp
sbbl
std
movsb
cltd
pop
cmc
mov
mov
movsbl
sub
imul
sub
imul
scas
outsb
sti
test
iret
sub
fistl
adc
push
mov
mov
insl
jbe
in
sub
sub
xchg
cltd
lret
adc
je
popf
jg
push
adcl
xor
xchg
push
out
pop
insl
repz
jmp
or
fcomps
or
lahf
shrb
roll
jbe
loopne
pusha
lret
jb
aam
sub
ja
jbe
mov
adc
mov
stc
inc
and
inc
xchg
add
jp
xchg
jnp
dec
into
gs
mov
cmpsb
sbb
lcall
and
shlb
lock
push
sub
insb
jae
mov
sub
lcall
clc
mov
rorb
ljmp
jo
call
cmp
adc
stos
icebp
xchg
jl
int3
sub
jl
mov
xchg
test
addr16
cltd
jp
pushf
push
add
movsb
mov
pop
mov
mov
push
mov
fwait
aam
mov
adc
mov
jmp
mov
dec
les
sub
jne
aaa
lock
in
sbb
rcl
out
xor
fstl
adc
mov
push
adc
mov
and
mov
fnstenv
and
xlat
mov
cmp
sahf
cmc
imull
mov
mov
lret
shll
sub
mov
test
fists
subl
sub
mov
cmp
int
mov
jecxz
jb
mov
pop
out
inc
adcl
sbb
cmp
fwait
cmp
adc
faddl
mov
sub
push
mov
bound
xchg
pop
sub
stos
jo
imul
inc
in
imul
cs
out
ficomps
jb
stos
outsl
mov
xchg
test
repnz
sbb
xchg
inc
fstpt
jmp
idivb
addr16
icebp
ss
fdivrl
gs
fbstp
mov
aad
adc
call
mov
fsubs
mov
fsubl
fnstcw
sub
fildl
and
jle
push
cmp
sbb
fwait
pop
ljmp
ror
inc
aam
pusha
notl
mov
sub
xchg
mov
sti
bound
push
popa
in
and
xor
cld
sub
add
popf
xlat
loope
sbb
xorb
pushf
mov
lds
in
sbb
mov
aaa
out
testl
in
mov
std
arpl
vmaxss
aam
pop
hlt
out
cmc
or
adc
jecxz
rcll
jecxz
fs
hlt
sub
add
lds
mov
fdiv
xchg
pop
pop
cmp
pop
xor
add
fs
jns
out
xchg
jp
jge
xchg
popa
pop
xchg
xchg
cmpb
dec
mov
inc
cld
pop
rcr
push
sub
cmp
add
dec
test
lds
lods
out
mov
es
or
aaa
scas
inc
enter
loopne
mov
fst
cmp
adc
addr16
mov
icebp
dec
sarl
pop
shll
es
and
sti
in
fidivrl
xlat
xchg
and
push
in
ss
mov
jb
mov
test
int3
scas
mov
call
mov
cmp
enter
outsl
lods
push
mov
dec
stos
popa
dec
aas
mov
sahf
inc
pushf
mov
cmpsl
mov
movsb
cmp
push
mov
cmp
jns
xchg
dec
sahf
dec
mov
cmp
dec
scas
cmp
ss
pop
lods
inc
popf
cli
pop
cmp
outsl
scas
insb
cltd
icebp
daa
es
xchg
lock
mov
sbb
xchg
std
cmp
roll
ja
aam
or
daa
add
jmp
dec
sbb
mov
inc
imul
imul
xor
sbb
jg
cmpsl
pushf
pop
mov
pop
dec
rorl
cmp
and
das
setno
xchg
pop
and
and
das
sub
xor
push
cmp
inc
jl
sbb
or
addl
mov
jnp
cltd
inc
dec
jp
pop
dec
jg
pusha
push
sub
push
inc
xor
jae
sbb
cmpsl
xchg
sbbb
pop
shlb
push
ljmp
cmpsl
clc
std
dec
mov
cmp
sbb
lahf
lahf
mov
repz
mov
push
in
aad
iret
mov
stos
pop
rcrl
push
cli
dec
movsb
insl
popa
rcrb
jae
xchg
sub
mov
repnz
mov
test
lret
ljmp
fcomps
xlat
and
mov
and
ss
push
xchg
xchg
cmpsl
adc
rorb
cltd
xchg
mov
inc
lea
pop
mov
stc
mov
adc
jmp
pop
push
xchg
icebp
sub
xchg
add
jae
jo
test
ds
inc
fidivrs
lods
pop
jno
adc
mov
sbb
pop
ja
pop
aas
xchg
jno
dec
mov
sub
jle
inc
outsb
dec
lret
pop
inc
pop
bnd
into
pop
sub
out
mov
inc
les
out
sub
cmpsl
int
and
testb
xlat
loopne
dec
mov
decl
decb
in
out
outsl
movsl
in
movsb
mov
or
jne
inc
sub
pop
repz
ret
dec
push
push
cs
outsb
pop
or
cmp
or
out
fwait
pop
xchg
sahf
xchg
and
imul
mov
ljmp
or
dec
or
and
icebp
rorl
mov
hlt
adc
mov
inc
test
add
arpl
test
sub
rcrb
sub
popf
xchg
fucomip
and
repz
shlb
shll
pop
mov
les
pop
add
xor
jno
push
dec
pusha
test
xchg
inc
pushl
push
mov
jmp
push
int3
inc
insb
andb
mov
mov
sub
ja
mov
incl
add
pcmpgtw
insb
xor
daa
nop
aas
movlps
fsubs
xchg
xor
push
jp
inc
xchg
sub
popa
stos
xor
mov
push
jb
iret
insb
inc
es
and
cli
movsb
arpl
or
inc
scas
mov
call
rcll
mov
jecxz
cmc
mov
clc
insl
jmp
ja
cmp
leave
lods
int
mov
int
test
mov
scas
push
cmpsb
push
mov
fistpl
inc
popf
mov
jae
xchg
mov
push
pushf
test
sbb
cmpsl
mov
clc
push
ror
cmc
aam
daa
fildll
dec
pushl
pop
sbb
cmp
pop
dec
inc
out
out
pop
mov
mov
sbb
xchg
kmovb
add
daa
orl
inc
jbe
hlt
push
popa
mov
jae
adc
out
xchg
jbe
xor
adc
jbe
cmc
inc
testl
push
jne
lods
xor
lods
inc
ja
fldl
push
sahf
insb
dec
ss
jno
adc
rclb
test
daa
filds
pop
inc
in
insb
add
bound
dec
dec
dec
pop
int
inc
mov
jb
inc
mov
or
push
int3
test
inc
leave
movsb
arpl
fmul
dec
ret
jmp
mov
adc
lods
iret
divl
ret
fcmovnu
inc
out
push
in
ljmp
mov
or
mov
jo
and
inc
scas
jne
fdivs
fisttpll
mov
xor
shll
test
hlt
jae
shl
mov
add
aam
adc
aam
pop
fidivrs
loop
sti
sub
int3
dec
in
xchg
iret
cmp
cld
lods
pop
rorb
and
lahf
filds
mov
outsb
jmp
or
sub
xchg
add
pop
movsl
pop
add
pop
repnz
leave
dec
loopne
push
mov
stc
cs
insb
cltd
mov
loope
call
cmpsl
shrb
adc
cmpb
outsb
shlb
cli
daa
loopne
lret
jp
ljmp
shll
repz
mov
cli
scas
push
into
sub
addl
mov
push
adc
cmc
sbb
or
push
xchg
ljmp
repz
pop
stos
xchg
push
xchg
lds
icebp
sbb
fwait
pusha
push
cmp
sbb
mov
sti
sub
sbb
popl
icebp
pop
xchg
scas
jb
adc
and
mov
fistpl
addl
daa
push
stos
mov
loopne
mov
stos
ds
mov
or
jecxz
fistl
xlat
xor
jecxz
scas
pop
push
scas
push
mov
js
xor
pop
js
push
dec
pop
outsl
mov
fisttps
push
fcmovu
push
test
lret
cmp
rcrl
enter
pusha
negl
sub
sbb
adc
ficoms
inc
enter
xchg
addr16
dec
movsl
lret
mov
add
js
mov
cmpsl
imul
lret
jbe
push
out
xchg
and
pop
aad
fcomp
xchg
add
or
out
and
cs
js
faddl
dec
pop
adc
mov
sbb
dec
rcrl
jp
xor
cmp
add
adc
dec
out
mov
xchg
subl
dec
or
push
or
imulb
pop
pop
push
adc
into
popa
ljmp
sub
addb
xchg
sahf
test
and
cmp
jge
sbb
add
and
xchg
inc
test
or
jecxz
dec
cmpl
sub
bound
dec
jp
push
lahf
les
inc
push
lret
pop
idivb
push
sub
int3
lret
jmp
loopne
loopne
femms
add
sbb
and
cltd
xor
sbb
hlt
xor
jo
push
inc
jl
imul
mov
mov
lea
or
arpl
sbb
xchg
aas
les
push
mov
cld
mov
lret
push
test
jno
mov
loope
mov
cmp
nop
lock
xor
push
cmp
aad
insb
jns
cmp
scas
jg
jne
lea
cmp
jl
adc
inc
xchg
dec
mov
sbb
mov
fdivl
or
xchg
das
pop
fdivl
push
sbb
in
ss
add
push
jmp
pop
aaa
into
mov
or
push
in
fistpl
jae
cs
scas
inc
pop
push
xchg
sub
mov
ljmp
out
lahf
sbb
cmpb
push
or
cld
lods
xlat
outsb
pop
filds
cltd
adc
lea
push
movsl
arpl
pop
repz
addr16
cwtl
pop
jp
mov
movsl
cmp
or
jl
and
iret
adc
enter
xor
gs
out
inc
mov
add
mov
addb
test
gs
inc
xchg
stc
or
sub
sub
jmp
js
mov
test
mov
fnsave
pop
cmp
test
aas
fisubl
cmp
mov
arpl
dec
les
or
inc
cmp
loop
jae
leave
pusha
xchg
add
ret
jle
jecxz
cmc
adc
add
adc
push
fs
aaa
bound
fscale
sar
repz
popa
mov
andb
xchg
mov
jns
mov
inc
pop
xor
into
push
jmp
adc
jae
push
pop
lock
mov
data16
into
jne
mov
in
pop
loope
mov
mov
popf
lahf
leave
pop
dec
mov
adc
dec
or
xor
fiaddl
fsubp
pop
outsb
add
popf
sub
jmp
push
xchg
insb
and
lds
fildll
mov
sub
cmpsl
jle
adc
and
cwtl
jbe
ret
ljmp
cmp
fwait
clc
daa
add
inc
scas
fsubr
addr16
sub
mov
xor
xor
lds
mov
xor
pop
inc
addr16
in
test
xor
cltd
sbb
inc
cwtl
hlt
daa
cld
xchg
sbb
data16
into
jge
std
icebp
gs
sbb
push
ret
push
xchg
sbb
mov
jb
ja
call
test
aaa
inc
inc
mov
mov
outsb
xor
daa
cwtl
out
aaa
lcall
inc
dec
mov
in
cmp
rcrl
add
ret
cmpsb
insl
out
pusha
dec
ret
stc
xchg
cwtl
sub
stos
movsl
xor
repz
ds
adc
insb
lods
pop
jb
pop
in
mov
mov
fxtract
lret
jecxz
repz
or
es
and
xchg
loopne
cmpsb
rorb
jecxz
add
mov
cmp
sbb
stos
add
out
sub
shrb
mov
sbb
pusha
fcoms
mov
pop
add
adc
lahf
fnstcw
outsl
xor
sti
pop
xor
rcrb
inc
inc
popa
popf
mov
push
scas
cs
cmp
cmc
popa
xor
mov
stc
inc
push
xor
pop
icebp
cmp
mov
jge
push
test
mov
in
hlt
and
xchg
int3
jp
dec
mov
aas
rcl
xchg
mov
dec
arpl
add
cmp
dec
aam
inc
stos
test
js
and
jnp
shrb
mov
sti
insl
add
xchg
pop
ficoml
pop
insb
xor
pop
mov
dec
dec
into
sub
iret
fcomip
and
add
fidivs
movsl
dec
xor
cmp
leave
and
mov
xlat
icebp
inc
fldenv
stc
mov
and
mov
fidivs
into
or
add
push
ljmp
and
lret
loop
imul
pop
xchg
cmc
mov
nop
daa
lock
or
movsl
mov
add
sbbb
fnsave
dec
jecxz
mull
mov
dec
mov
fs
out
les
fwait
sti
xchg
or
lods
inc
fcomps
xchg
fdivl
andb
or
daa
or
xchg
and
dec
loop
xchg
jp
pop
scas
xchg
sub
fwait
push
dec
jae
xchg
mov
mov
mov
out
inc
out
cmc
mov
les
xchg
dec
sbb
fsubs
adc
sbb
push
stos
rclb
xchg
lcall
jo
xor
jp
jmp
and
movsb
lock
fs
lock
sbb
push
arpl
lock
mov
call
clc
pop
out
sub
scas
xor
inc
push
das
js
jecxz
loopne
mov
sbb
mov
adc
inc
inc
or
test
and
pushf
arpl
cmc
inc
repnz
dec
xchg
cwtl
aas
mov
mov
mov
adc
sahf
sbbb
pop
lock
inc
into
mov
shrb
and
sbb
cmpsb
aam
scas
xor
cld
cli
js
push
out
sbb
push
lods
and
test
jne
and
ficompl
in
sbb
rclb
rcr
jno
aam
fildll
insb
ret
enter
adc
xor
test
or
mov
mov
outsb
enter
lret
sbb
mov
mov
inc
jo
faddl
cli
loopne
xor
fidivrs
test
js
and
mov
jb
xor
out
das
mov
fidivl
icebp
xchg
lods
push
leave
add
or
adcb
std
aad
insl
stos
ljmp
cmp
sub
mov
sub
add
push
insb
lock
arpl
pushf
imul
lret
mov
enter
aas
mov
add
push
in
add
lds
push
push
std
sbb
clc
sub
mov
inc
aaa
cltd
fstpl
cmc
pop
cmp
orb
mov
and
ja
inc
into
mov
aam
inc
or
add
push
mov
lods
dec
adc
add
popa
ljmp
mov
dec
add
roll
movl
xor
jle
je
jg
scas
insl
sbb
std
and
fsub
cmp
mov
add
cld
and
sub
mov
xor
nop
imull
repz
push
test
mov
push
add
xchg
or
scas
jns
outsl
in
lret
ljmp
or
loop
std
into
mov
shrl
inc
xchg
jb
cmpsb
fwait
inc
pop
rclb
fsubrp
roll
arpl
xor
nop
pusha
push
jb
fwait
jnp
add
cmp
cmp
das
cld
and
add
or
push
sbb
xchg
decl
rolb
std
lahf
add
mov
test
add
lock
lds
int3
jo
add
sbb
xchg
cs
aas
in
rolb
cmc
insl
lds
cmp
rolb
pop
sub
and
add
rcll
dec
or
les
ds
dec
push
leave
adc
add
pop
test
lock
dec
or
xchg
pop
mov
lea
scas
int
int
repnz
adc
stc
imul
push
in
adcb
xchg
aas
popf
cwtl
int3
mov
sbb
subb
cli
loopne
or
call
ja
mov
movsl
adcl
scas
lds
lock
imul
arpl
xchg
dec
mov
jo
cmp
and
pop
clc
lret
data16
adc
inc
push
inc
jl,pt
imul
andb
cli
lret
sbb
adcl
jnp
imul
arpl
jne
js
sbb
sti
lret
fildl
pop
mov
dec
loopne
sbbb
add
xor
mov
jns
jno
and
rorl
mov
cmpsb
pop
rorl
fcomps
cmc
in
sbb
pop
lock
in
pop
xor
iret
cs
or
push
shll
mov
lret
jp
adc
std
pop
jge
sub
dec
arpl
pop
pop
xchg
sbb
cmp
dec
fdivrl
adc
jge
sub
stos
sub
cld
pop
and
mov
mov
fdivl
stos
push
mov
sbb
xchg
dec
cli
call
les
mov
test
and
cltd
scas
pop
cmpsb
sub
cmc
jne
addr16
push
std
lods
cmp
loope
mov
fldl
inc
xlat
jle
cmp
cmp
adc
daa
inc
sub
cmp
or
stos
mov
mov
sti
add
push
into
jl
xor
lock
push
jle
or
leave
jo
ret
mov
push
scas
ss
sub
pop
js
mov
nop
lea
fmuls
rol
or
or
movsl
shl
loopnew
sub
mov
mov
ja
push
or
lret
lahf
sbb
sti
cmp
mov
jmp
sub
xorb
ror
sub
push
mov
mov
mov
jmp
lods
xor
cmp
das
adc
and
aaa
daa
stos
insb
in
jne
jp
or
ffree
mov
and
mov
in
movsl
movsl
cld
pop
or
in
sub
cmp
jnp
jmp
inc
or
mov
clc
fs
popa
pop
push
scas
loope
pop
mov
hlt
pop
fldcw
xchg
cmp
sarl
imul
lods
xor
imul
ss
add
xchg
adc
push
stc
daa
dec
pop
cltd
xor
iret
push
sub
dec
adc
iret
faddl
xor
js
sub
xchg
pop
push
or
popl
not
adc
mov
mov
jo
inc
stos
lock
pusha
cltd
out
inc
jp
in
xchg
arpl
adc
aad
jle
aaa
movsb
aaa
gs
push
arpl
jnp
mov
mov
jge
les
and
and
pop
adc
lds
scas
lret
pop
sub
add
and
or
or
mov
xchg
loope
addr16
sbb
sub
adcb
xor
cmp
mov
fisubs
in
ljmp
mov
in
outsb
mov
mov
les
dec
pop
leave
mov
xchg
dec
or
mov
out
jp
sbb
mov
lcall
push
shrl
xchg
pop
ja
jmp
ss
sbb
dec
sub
jmp
mov
fiaddl
fiaddl
push
lds
mov
mov
or
cld
pop
imul
push
xorb
aaa
faddp
xchg
fsubrs
insb
ljmp
mulb
scas
fstpt
lock
imul
sbb
sub
pop
add
jl
push
jp
mov
xor
in
out
shll
lret
lea
ficompl
push
pop
add
in
outsb
icebp
stc
aad
ss
pusha
jmp
inc
lea
pop
pop
icebp
mov
outsb
xchg
stos
cmp
mov
sarl
mov
jle
lret
jb
cmc
cmpsb
pop
mov
cmc
and
xchg
pop
cmp
scas
sbb
xor
std
pop
rclb
mov
leave
iret
sub
test
jle
shrl
push
inc
adc
cmp
sub
cltd
inc
jns
sarb
insb
or
jg
or
jae
movsl
sub
lret
sub
mov
cmp
push
rcr
dec
adc
or
and
test
ja
test
insl
mov
push
roll
mov
faddl
subb
leave
aam
int
lea
dec
adc
loopne
add
cmp
mov
int
jae
pop
mov
pop
cmp
les
mov
sbb
xchg
cmp
out
das
arpl
mov
into
xchg
int3
test
lea
mov
mov
mov
lds
jbe
adc
enter
aad
xchg
pop
add
hlt
push
cli
in
ret
hlt
cmp
adc
mov
fmuls
loopne
hlt
in
push
pusha
pop
sti
and
outsl
pushf
inc
in
and
push
int
and
arpl
lods
into
jnp
sahf
mov
cld
pop
ss
mov
cli
push
scas
sbb
enter
sbb
aaa
cwtl
arpl
mov
out
imul
mov
pushf
js
imul
loopne
push
stc
test
mov
out
xor
inc
jo
fbld
push
dec
fwait
cmp
mov
sub
xor
sahf
add
adc
push
sti
and
ret
mov
and
shrb
sub
dec
adc
lods
scas
sub
flds
cmc
roll
addb
inc
add
sub
pop
aad
sahf
inc
or
flds
jnp
jmp
outsb
mov
sub
sbb
cmp
ja
imul
or
popa
jmp
mov
mov
fnstcw
cmp
add
loop
pop
pop
loope
stc
adcl
or
xor
ret
inc
pmuludq
fs
xor
cmpsb
xor
xor
in
jns
mov
repnz
pop
jp
adc
lahf
addl
push
movsb
xchg
sub
loopne
in
lahf
inc
push
and
xor
shrb
sti
gs
fildl
fcomip
test
add
cmp
mov
jp
fidivrs
popa
pop
incb
fimull
enter
dec
adc
jo
xchg
ljmp
inc
outsb
in
lcall
lret
dec
xchg
fdivrl
xchg
pop
stc
scas
pusha
xor
inc
cmc
adc
mov
cmp
clc
nop
std
jg
das
mov
sub
pop
into
out
cwtl
dec
movntps
test
adc
out
rcll
pop
mov
fists
mov
cwtl
adcl
inc
inc
cmp
andb
repnz
pop
aaa
orl
mov
cwtl
sub
push
stc
cmp
es
imul
scas
sbb
dec
push
dec
inc
sti
pop
sbb
adc
out
inc
adc
fdivl
push
mov
shlb
hlt
ja
es
sbb
sub
mov
aad
gs
cld
inc
mov
and
aaa
adc
in
cmpsl
daa
adc
ds
mov
mov
pushf
ds
sar
push
out
jmp
std
stos
mov
mov
stc
xchg
pop
fidivs
mov
jl
loopne
sub
in
imul
outsl
jmp
out
mov
and
shlb
add
dec
inc
cwtl
cmp
mov
jecxz
adc
outsb
add
xor
mov
sbb
test
adc
xor
into
xchg
out
pop
cld
mov
cmpsb
roll
mov
mov
jo
sub
and
out
imul
add
repnz
sbb
loopne
push
add
add
xchg
inc
hlt
popf
xor
dec
or
mov
addr16
in
scas
inc
gs
xchg
lahf
cltd
xor
xor
dec
adc
inc
fidivrl
add
lahf
xor
and
lret
mov
ds
sbb
sub
rcll
mov
xorl
test
js
adc
sub
aas
sub
movsl
shrl
dec
movsl
sbb
cmpsb
sub
dec
or
aam
outsb
push
sbb
and
sbb
jb
push
add
lret
dec
loope
lds
xchg
fnstcw
and
cli
pop
adc
cmpsb
xor
push
mov
jo
pusha
aas
fwait
std
sahf
jne
shl
xor
jecxz
xor
aad
rclb
daa
mov
data16
push
popa
cmc
mull
cmpxchg
std
pop
jne
pop
mov
lret
lret
fbstp
or
or
sbb
mov
enter
inc
or
mov
mov
sub
movsl
pop
add
mov
pusha
stos
out
testl
jg
push
jne
jne
test
aas
adcb
rolb
rol
lcall
or
ljmp
inc
fiadds
dec
data16
pop
push
pop
add
nop
cmpsb
cs
or
mov
stos
push
cld
mov
xchg
xor
into
in
outsb
hlt
scas
push
sbb
test
mov
movsb
sub
cmp
frstor
xchg
jne
stos
sub
movsl
sub
lcall
mov
and
xchg
ret
sbb
lods
enter
inc
adc
into
mov
lods
sub
or
jl
mov
mov
jo
call
sti
add
mov
mulb
mov
mov
add
xor
adc
gs
xchg
aas
cld
fs
mov
jne
jbe
cltd
cmp
mov
and
stos
sub
cwtl
adc
leave
jmp
jbe
sbb
jnp
pop
mov
pop
sarb
enter
popfw
inc
mov
stos
in
repz
mov
dec
sbb
jnp
popf
imul
jle
ss
mov
mov
jge
mov
sarb
sbb
fwait
inc
mov
stos
psrld
xlat
out
adc
pop
add
dec
inc
push
mov
cmp
or
js
pop
notb
fcmovu
xchg
adc
xchg
pushf
mov
xchg
pop
sti
repnz
sub
test
int
adc
jno
imul
jl
lds
dec
lahf
outsl
jmp
xor
ret
pop
popa
sbb
popa
dec
adcb
popf
pop
int3
stos
gs
clc
cmpsl
shlb
sub
dec
std
pusha
adc
push
xchg
or
mov
mov
cmp
push
jnp
cmp
iret
cwtl
inc
inc
pop
fdivrl
xchg
xor
pop
movsb
xor
sub
leave
mov
xor
aam
sbb
inc
lahf
sub
fs
mov
mull
cwtl
fnstcw
cld
pop
test
sub
cmpsl
dec
out
aaa
fidivl
clc
or
add
push
sbb
inc
repz
cltd
lcall
mov
in
test
jmp
add
jmp
out
les
lcall
insb
mov
mov
lret
faddl
mov
mov
test
dec
shlb
mov
xchg
jp
mov
shl
xor
fcmovne
inc
push
iret
adc
jg
sbb
mov
or
orb
adc
cld
in
sub
in
and
test
enter
inc
mov
jmp
test
mov
or
xor
lahf
mov
bound
aad
in
pop
push
add
mov
ja
push
push
push
test
icebp
pop
inc
ficoms
rclb
mov
or
imul
sub
adc
imul
shlb
icebp
mov
jo
loop
nop
add
xchg
cmp
cmp
pop
push
les
sbb
daa
adc
pop
insb
xor
lea
je
ror
push
adc
lods
pusha
fdivrs
mov
pushf
aaa
aad
push
jg
xor
mov
mov
jns
push
loopne
dec
cmp
mov
orb
lret
fcmovnbe
jge
add
call
std
ljmp
inc
stos
xor
aad
push
popa
inc
xchg
jp
jg
lds
in
and
mov
in
xchg
cs
pop
adc
into
mov
inc
adc
xor
lods
sti
push
adc
adcl
outsb
test
cmp
lock
xor
ja
xor
cmp
xchg
fsubr
orb
xchg
ds
xchg
divl
or
shll
pusha
and
cltd
pop
fwait
aas
mov
lods
stc
fs
sbb
test
mov
mov
test
push
rorl
fwait
pop
xchg
fidivrl
xor
gs
push
outsb
out
adc
pop
xlat
enter
pop
repz
popa
jo
push
shll
mov
pop
addr16
movsl
push
out
mov
aad
mov
aaa
cwtl
or
std
sub
mov
aam
rorl
pop
out
es
icebp
leave
xchg
xchg
test
lds
xor
sar
cmp
ss
fnstsw
sub
fistpll
adcl
lds
pop
dec
cmpsl
xor
lret
lea
shrb
lods
hlt
mov
push
lock
fstps
ret
orb
faddl
fistps
inc
or
push
mov
dec
inc
push
gs
push
or
mov
push
sbb
das
fisubs
fdivrs
inc
packuswb
sub
push
test
inc
or
or
stos
shl
int
cld
or
mov
ljmp
lds
dec
or
jge
push
push
pop
add
add
ja
aaa
cmpsb
jo
mov
fldenv
jno
scas
sub
push
pop
and
push
out
test
mov
xchg
mov
push
in
xlat
sub
movsb
mov
mov
sub
daa
mov
aaa
add
pop
stc
fnsave
mov
mov
fdivrl
shl
sbb
fiadds
cmp
or
cs
cltd
aas
jecxz
fwait
inc
push
repz
stc
sub
lret
aas
jle
push
sbb
popa
orl
addb
clc
popa
addb
rcrl
insl
push
xchg
aaa
cmp
mov
dec
add
je
mov
add
mov
add
gs
enter
int3
sbb
sbb
and
dec
dec
jmp
sarl
lea
movsb
in
leave
enter
push
in
test
mov
mov
repz
fs
clc
sbb
mov
rol
xchg
xchg
test
pop
movsl
inc
inc
or
mov
mov
in
cmp
mov
xchg
inc
xchg
aam
mov
cmp
aaa
xor
jo
and
popl
fdivrs
push
aad
std
incb
pusha
in
fisttps
rorl
lret
orl
fsubl
pop
and
pop
add
pop
jecxz
push
xor
rcrb
movsl
xor
or
pop
pop
push
js
mov
sbb
mov
mov
nop
inc
jno
test
movsb
jo
subb
xchg
outsl
js
lock
clc
jns
jne
and
xor
ss
cs
add
push
out
inc
and
mov
sub
outsb
sub
ja
mov
xchg
jns
aaa
pushf
xchg
lret
sub
add
mov
xchg
lods
dec
adc
movl
adc
fstpt
xor
sub
iret
mov
add
xchg
mov
mov
in
add
xchg
and
nop
cmp
lods
sbb
fldlg2
push
cmp
aas
push
jns
mov
mov
mov
int
lds
aas
sub
es
add
roll
xor
hlt
mov
mov
lea
into
xlat
js
inc
mov
rcrl
ret
mov
sub
daa
jle
nop
xchg
xor
dec
cmp
daa
mov
push
shlb
or
pop
rorl
mov
lods
aam
testl
pop
add
sbb
mov
testb
adc
push
mov
test
mov
adc
push
rclb
xchg
inc
mov
out
jge
adc
iret
and
mov
aaa
mov
nop
and
or
and
adc
mov
test
into
lea
pusha
out
push
popa
lahf
ds
pop
pop
jmp
mov
cmpb
mov
jne
insb
out
mov
sub
mov
sub
fs
jno
jge
arpl
shl
or
add
and
out
mov
aas
inc
outsb
repz
pop
icebp
pop
dec
jmp
ds
filds
or
je
pusha
arpl
int3
lods
es
and
sub
adc
jmp
loope
mov
xor
rolb
mov
mov
pop
testl
pop
push
add
adc
add
pop
push
add
arpl
xchg
mov
fstpl
mov
test
mov
mov
xchg
movsl
xlat
out
jne
mov
xchg
add
inc
jmp
inc
push
pop
stc
xchg
cmp
mov
shll
cmpsl
sub
mov
mov
inc
or
mov
xchg
callw
and
stc
and
fdivrs
inc
dec
inc
test
popa
jle
lret
nop
mov
lea
mov
data16
xchg
das
mov
inc
mov
push
adc
add
cmp
dec
xchg
mov
mov
sbb
adc
add
cs
pop
dec
adc
adc
pop
inc
cmc
push
jg
dec
jne
cmp
aam
loop
es
test
mov
and
xchg
mov
jl
pop
movsl
inc
or
xchg
cmp
int
mov
mov
arpl
lret
xchg
or
loope
pusha
dec
adc
cmpsl
mov
je
adc
pop
jo
sub
pusha
xor
fmuls
and
movsb
dec
pop
mov
test
dec
adc
jg
xchg
cmc
data16
xor
jnp
inc
adc
or
add
pushf
pushf
pop
mov
outsl
xor
andb
pop
sahf
daa
cmpsb
jge
cmp
mov
inc
add
xchg
push
sar
dec
dec
lods
movsl
lcall
push
ljmp
xchg
pusha
jmp
aad
mov
pop
add
mov
scas
xor
test
shll
inc
stc
sub
mov
jno
fdiv
call
out
testl
cmp
popf
pop
cli
test
mov
push
mov
shr
mov
push
call
sbb
scas
add
loopne
sub
mov
jbe
jbe
lcall
and
ficoml
push
inc
adc
jecxz
push
sbb
xchg
dec
stc
sarb
fwait
repz
out
mov
popf
aas
dec
xor
shr
lahf
aas
sub
js
pusha
aas
movsb
sub
scas
outsl
jmp
jmp
popa
repz
clc
pop
xchg
imul
in
shl
cmp
lret
mov
xchg
inc
ljmp
adc
fidivs
stos
lcall
or
daa
scas
popa
test
fwait
icebp
jno
dec
sbb
outsb
testb
scas
xor
add
xor
fs
std
and
out
out
inc
push
sarl
filds
lea
nop
cmp
fisubl
mov
mov
xlat
js
je
cmp
sub
lret
mov
mov
sbb
adc
dec
mov
cs
add
leave
cmpsb
pop
fstl
mov
dec
sub
jno
dec
cmp
mov
xchg
or
jle
clc
pop
outsb
fs
add
xor
push
fimull
mov
cwtl
loopne,pt
add
xchg
jmp
in
test
insl
adc
or
push
call
sti
popa
aaa
arpl
stos
daa
xor
dec
movsl
mov
pop
ret
cmp
movsb
sub
mov
sbb
adc
fiadds
cwtl
mov
inc
adc
lret
ds
xor
add
push
dec
rorl
fists
pop
dec
popa
aad
xchg
mov
jbe
mov
push
mov
test
jl
mov
lods
aaa
fwait
outsb
push
loopne
inc
jle
mov
loopne
sarb
cmc
leave
xchg
in
add
fists
mov
orb
int3
fsts
dec
rorl
mov
repnz
sub
add
ss
cli
pop
sar
mov
rorb
fidivrs
rcl
insl
adc
icebp
add
gs
repnz
scas
or
mov
mov
mov
cmpsl
fwait
push
sti
sbb
notb
js
shl
push
imul
in
inc
imul
aas
sahf
repnz
orb
cmpsl
fistl
jg
pushf
fistl
mov
and
xchg
cmp
lcall
imul
xchg
leave
mov
cmp
cmc
xchg
push
dec
or
mov
scas
sub
vprotw
test
mov
lret
mov
xor
out
ret
loope
pop
dec
pop
add
pop
pop
add
push
gs
es
in
xorb
adc
cmc
pop
inc
dec
mov
loope
movsl
sub
leave
and
adc
jg
add
popa
push
xlat
xchg
dec
pop
mov
jp
lods
daa
das
push
scas
inc
bound
orb
gs
movsl
flds
lret
jo
mov
adc
pop
mov
gs
inc
stos
mov
or
sub
test
les
outsb
pop
mov
mov
xor
cmpsb
mov
mov
adc
push
cltd
add
fstpl
fs
xorl
scas
lods
sub
xor
rclb
xchg
cmp
push
xor
cld
in
enter
icebp
fimuls
or
mov
sub
int
push
shl
pop
divl
lods
push
mov
push
std
sub
stos
pop
push
xchg
mov
mov
mov
in
pop
xchg
cmp
in
mov
testb
pop
scas
xor
xchg
cmp
pop
sbb
jns
int3
in
xor
clc
xchg
xchg
lret
rolb
roll
mov
push
fistpl
or
xor
outsb
leave
mov
arpl
inc
mov
lock
inc
repz
gs
mov
in
lret
test
cld
mull
sbb
pop
add
popa
jl
xchg
nop
popa
cs
push
cmovbe
mov
adc
add
xchg
dec
sbb
fs
cmp
xchg
out
sbb
and
ljmp
aad
jnp
fnsave
or
sub
push
xchg
shll
scas
test
scas
ss
aas
movsl
enter
mov
mov
pop
jns
pop
int3
sbb
test
jge
dec
mov
push
pushf
repz
jno
adc
stos
xlat
jnp
mov
jne
arpl
pop
jmp
adc
push
cmc
xlat
jp
dec
and
fld
aas
mov
inc
jmp
movsb
call
jnp
mov
and
mov
mov
dec
adc
and
movsb
out
mov
push
cli
jbe
iret
dec
ret
xchg
stc
sbb
lds
lods
in
insb
inc
flds
lods
lods
and
roll
int
shlb
in
arpl
outsb
std
ret
nop
aad
sub
jnp
imul
mulb
repz
push
dec
or
outsl
cmp
pop
mov
jle
sahf
aas
lret
dec
aaa
sbb
push
add
pushf
insl
and
jge
cltd
cmp
push
push
aam
and
out
outsl
enter
jne
in
xor
sub
ret
lahf
dec
rolb
pop
sbb
dec
cmc
pop
out
sahf
call
mov
mov
sub
inc
fs
dec
arpl
pop
lret
imul
adc
pop
inc
and
insb
daa
jle
je
xor
test
mov
xchg
pop
fdivrs
mov
enter
outsl
aas
sbb
dec
pusha
xchg
cmp
repz
pop
inc
fiadds
loope
lods
xor
notl
or
mov
imulb
adc
mov
in
sbb
roll
leave
adcb
mov
js
push
ret
popf
aaa
cmp
sub
xchg
stos
inc
inc
push
push
movsl
xchg
adc
push
inc
or
xchg
sbb
jle
or
push
push
cli
or
sbb
repnz
out
fldenvs
test
cmpsb
lock
or
int
ljmp
stc
data16
fs
enter
mov
pop
add
cmp
imul
or
inc
adc
pop
or
cmp
inc
xchg
pop
data16
push
into
sahf
xor
je
in
jae
cmp
mov
mov
fstl
sbb
into
push
mov
loope
push
loopne
loope
xchg
cmp
stc
mov
shrl
adc
push
mov
cmp
sub
in
in
fldcw
push
pusha
testl
out
enter
adc
xor
fnstenv
jmp
ret
aam
int
sub
xchg
pop
push
mov
cli
pop
cmp
shlb
mov
dec
adc
fiaddl
jbe
repnz
sbb
jne
pop
inc
aad
add
xchg
inc
notb
divb
jns
sti
insl
loope
pop
jecxz
push
pop
push
push
enter
jno
push
cld
insb
add
sub
insb
add
test
rorb
lahf
cmp
adc
push
cltd
xor
sub
scas
repnz
or
cmpsb
fstl
movsb
xor
aad
sar
mov
out
call
idivl
fwait
orl
cltd
call
clc
call
hlt
dec
adc
mov
mov
lods
cmp
and
and
int
out
mov
idiv
arpl
or
jno
and
insb
gs
jns
jle
aad
mov
ds
pop
repz
or
fsts
xor
mov
mov
pusha
rorb
pop
mov
xchg
fwait
arpl
lret
jnp
pop
shl
adcl
adc
mov
xchg
orb
mov
es
scas
cmp
andb
push
adc
or
aaa
inc
pop
add
daa
xchg
cmp
bnd
es
dec
adc
sarl
clc
jl
jmp
ds
dec
push
xor
outsb
jecxz
sub
cmp
addr16
in
push
push
pop
jl
std
out
pop
pop
repnz
aam
lcall
dec
mov
sti
mov
jae
out
and
addr16
dec
fdivl
pop
aam
or
sbb
and
xor
sbb
lcall
lret
bound
mov
jo
pusha
and
sahf
jnp
filds
cmp
cwtl
cmp
xchg
inc
arpl
cld
lds
pop
lcall
sete
sub
sbb
dec
rorl
add
insl
adc
inc
adc
mov
or
repz
mov
xor
mov
das
rclb
add
in
and
pop
push
lcall
test
lret
lods
inc
std
inc
cmpsl
jb,pt
lret
bound
lds
jmp
jp
lds
sahf
idivb
add
dec
mov
mov
imul
mov
pop
repnz
push
sbbl
mov
lahf
ss
aam
cs
mov
push
out
mov
pop
or
jae
jp
push
pop
cli
xchg
int
mov
scas
sbb
push
add
into
xor
lds
les
movsb
jae
push
imul
notl
and
cmpsl
ds
popf
int
iret
adc
pop
inc
lock
and
xchg
inc
or
call
or
mov
sbb
lea
arpl
push
pop
hlt
fisttps
jl
xor
lahf
adc
xchg
mov
dec
flds
insl
sub
stc
nop
or
mov
mov
xor
and
push
ljmp
jno
push
cwtl
insb
add
jne
cmpsl
jmp
and
ds
jo
int3
arpl
pop
ret
outsl
ljmp
ret
or
push
mov
mov
addr16
fcompl
mov
pop
repz
or
sbb
jg
adc
rcrb
push
in
mov
push
push
fnsave
aam
stos
pop
sti
xchg
mov
repnz
lods
sbb
dec
aaa
into
das
jno
mov
ret
dec
in
mov
insb
add
xchg
sub
imul
aas
out
fwait
int
int
pop
inc
out
jmp
and
jl
inc
or
out
daa
mov
cmp
inc
fcoml
pop
inc
xlat
mov
arpl
push
mov
adc
fstpl
xor
cmpsb
mov
jb
stc
insl
sub
stc
nop
or
mov
pop
scas
pop
mov
xor
and
push
ljmp
jno
push
xchg
insb
add
je
cmpsb
ljmp
cli
cmp
int3
arpl
pop
ret
andl
add
inc
mov
mov
inc
fcoml
mov
pop
repz
or
adc
rcrl
push
in
mov
push
add
aam
test
lret
cld
stos
sbb
dec
std
aaa
into
jo,pn
mov
ret
repz
insb
add
xchg
sub
push
scas
inc
jns
test
in
lcall
inc
in
jmp
pop
in
xchg
inc
or
out
daa
mov
cmp
inc
fcoml
ss
lods
pop
cmc
fisttpll
jl
xor
lahf
ss
push
lcall
movsl
mov
jb
clc
insl
sub
stc
nop
or
jle
pop
scas
pop
lahf
adc
lods
icebp
xor
and
push
ljmp
jb
push
xchg
insb
add
jae
daa
movsl
call
scas
inc
stc
cmp
fs
mov
pop
shrb
lahf
loope
jnp
rorl
repnz
cltd
adc
mov
mov
inc
fstl
mov
pop
repz
or
adc
iret
cwtl
das
add
mov
push
add
jne
jne
imul
repnz
stos
sbb
dec
cld
cmp
sub
dec
push
in
jg
dec
in
mov
insb
add
sub
inc
mov
js
test
jmp
into
gs
or
pop
ds
in
sbbl
in
xchg
aas
or
in
sub
ss
fstl
inc
xlat
mov
pop
cmc
fildl
jl
xor
mov
fdivl
not
insl
sub
cli
xchg
pop
dec
hlt
mov
scas
pop
popf
adc
stos
out
xor
and
push
jmp
inc
dec
in
pop
jae
push
xchg
insb
add
jb
sub
scas
inc
clc
cmp
gs
mov
pop
mov
jnp
rorb
icebp
xor
cltd
arpl
sub
inc
test
mov
fs
ficoms
mov
cld
call
or
lods
pop
mov
das
ljmp
mov
push
add
jbe
jae
insb
movsl
push
std
xchg
xchg
repz
test
mov
sbb
test
sub
popf
dec
push
out
jge
dec
in
sahf
jne
rclb
insl
add
icebp
xchg
sub
mov
xchg
inc
mov
jbe
test
leavew
or
pop
cmp
in
test
out
nop
cmp
add
loop
sub
rolb
mov
adc
fadds
test
neg
test
adc
fldenv
xor
mov
fnsave
xlat
outsb
es
xchg
add
sbb
int3
js
into
test
lret
push
in
cld
aas
dec
out
sbb
insl
add
jo
sub
les
inc
imul
pop
mov
fucom
jl
mov
add
inc
andb
mov
dec
fists
mov
std
out
pop
hlt
push
pop
test
js
adc
lret
cltd
xor
lods
rcrl
mov
ja
jno
insl
mov
hlt
mov
cmpsb
sbb
xlat
pop
adc
sub
enter
out
jnp
dec
out
pushf
jbe
into
push
outsb
add
and
and
stos
inc
out
shlb
or
pusha
cmp
out
test
pop
out
mov
or
insb
scas
add
sarl
dec
fists
push
inc
flds
cmpsb
pusha
not
addl
xlat
mov
xor
rclb
mov
jne
repnz
sar
xchg
add
lea
sbb
lret
iret
cmpsl
jmp
leave
sbb
push
in
cli
cmp
jne
dec
outsb
add
mov
ret
hlt
xor
shlb
mov
pop
mov
jge
mov
add
pop
push
sub
aas
andb
mov
dec
loopne
rolb
add
pop
cmc
push
add
jl
test
movsb
cmp
stos
ret
sbb
push
dec
loopne
xor
outsb
mov
ret
cmc
mov
movsb
sbb
aad
adc
inc
idivb
shll
imul
out
jns
push
out
lcall
aas
in
xchg
sub
popa
lea
inc
mov
jb
stos
inc
out
shlb
pop
lret
out
test
pop
call
mov
fisttps
and
fisttps
push
inc
fiaddl
popa
clc
addl
pop
dec
popf
xor
sub
push
pop
sahf
mov
jne
icebp
fnstenv
iret
cld
xchg
add
mov
sbb
leave
je
iret
movsl
ljmp
clc
cmp
call
dec
mov
shrb
loope
and
shlb
adc
addr16
xchg
pusha
mov
jle
mov
add
ret
and
roll
add
pop
notb
sbb
cmpsl
push
movsb
cmp
test
mov
ja
outsl
fsubrs
dec
xchg
add
sbb
rcll
cmp
and
inc
pop
out
ja
push
call
lret
pop
ds
sub
ds
jo
lods
inc
in
shlb
push
lret
bound
in
test
pop
jmp
mov
fimuls
and
fisttps
cs
pop
movsb
popa
clc
aad
test
mov
jg
sub
mov
xor
daa
rclb
mov
jne
lock
into
cld
xchg
add
jbe
sbb
enter
movsb
jmp
push
in
idivl
push
call
dec
lea
mov
loopne
and
mov
stos
inc
gs
addr16
xchg
pusha
mov
jle
mov
add
ret
and
mov
inc
fadds
mov
loope
pop
notb
xchg
cmpsb
push
movsb
cmp
test
pop
ficompl
mov
ja
outsb
fsubrs
dec
xchg
add
repz
adc
shll
xor
cwtl
inc
pop
out
jbe
push
call
leave
or
cmp
pop
mov
outsl
mov
inc
in
shlb
add
out
test
ss
lods
pop
sahf
fisttpll
and
fisttps
inc
fiaddl
mov
test
mov
jg
daa
shll
xor
rclb
mov
jne
out
fnstenv
int
xchg
incl
mov
mov
xchg
adc
shlb
lds
idivb
push
call
dec
mov
mov
fimuls
dec
lock
push
mov
out
xchg
mov
add
ret
cmp
lods
pop
dec
loope
into
inc
fdivr
scas
push
notl
xchg
xor
adc
test
pushf
xor
cmpsb
ret
pop
fcomps
mov
js
insb
fnstenv
dec
call
icebp
lahf
sbb
lods
inc
icebp
cmp
and
lret
xchg
inc
pop
lock
push
jmp
or
cmp
xchg
sub
pop
es
cmp
inc
loop
shrl
add
arpl
push
ljmp
stos
or
mov
es
or
fildl
mov
test
repz
shll
xor
push
lcall
test
lret
std
xchg
std
inc
clc
jb
sbb
dec
xchg
push
lods
les
shll
ret
pop
out
hlt
aaa
push
jmp
inc
mov
mov
fmull
dec
out
das
lods
inc
popa
psrld
or
mov
lock
push
movsl
out
push
popf
pop
or
mov
mov
inc
fscale
lods
imul
dec
incl
push
mov
les
pop
xlat
pop
mov
js
imul
popf
dec
call
lock
sbb
scas
inc
lock
and
xchg
inc
pop
lock
push
ljmp
jb
cmp
xchg
sub
pop
nop
daa
mov
mov
insb
scas
scas
inc
loope
shrl
add
fs
out
xchg
push
jmp
mov
or
mov
mov
daa
mov
or
fdivrl
addr16
pop
mov
test
repnz
add
ss
rcrl
mov
jbe
in
lret
cld
aas
stc
nop
jno
sbb
dec
xchg
pop
scas
ret
outsl
cmp
mov
ret
repz
ljmp
jno
mov
fisttpl
dec
in
lods
inc
pusha
push
shrb
or
xchg
mov
movsl
out
pop
sahf
pop
pop
sub
mov
mov
inc
stos
imul
dec
incb
pop
mov
ret
sahf
xor
push
mov
js
push
jb
dec
call
out
popf
sbb
scas
inc
out
cmp
and
int
inc
pop
lock
push
jmp
xchg
ja
lds
jae
cmp
xchg
sub
pop
xchg
sub
scas
scas
inc
loopne
shrl
add
gs
out
xchg
push
in
addl
or
mov
sub
or
fnstsw
addr16
pop
lahf
fs
sarb
sbb
icebp
sbbb
iret
mov
aaa
ja
rcrl
mov
jbe
jmp
jae
leave
std
xchg
sti
ds
xchg
jo
sbb
dec
xchg
sbb
lahf
jecxz
int
rcrl
xor
ja
inc
xchg
mov
ficoml
dec
in
sub
shrb
or
mov
lock
mov
movsl
in
or
aaa
js
mov
mov
inc
stos
imul
dec
std
xchg
das
outsl
sbbl
add
ss
mov
mov
js
imul
xchg
jnp
cli
xchg
out
pushf
sbb
mov
out
cmp
pop
bound
into
xchg
inc
pop
lock
push
in
in
ja
les
je
cmp
xchg
sub
pop
xchg
sub
mov
fisttps
iret
data16
out
xchg
push
in
test
cmpsl
or
mov
sub
sub
dec
loopne
dec
inc
fidivrs
addr16
pop
sahf
gs
iret
jp
sbb
lock
into
mov
cmp
rcrl
mov
jbe
ljmp
cli
cmp
sbb
dec
nop
sbb
sahf
loop
into
adc
pop
out
icebp
xor
in
adc
inc
xchg
mov
fsts
dec
jmp
scas
inc
pop
or
imul
pop
lock
mov
movsl
in
or
ss
mov
mov
inc
fdivr
test
fs
dec
cld
xchg
outsb
sbbb
dec
movsl
cmp
shll
aam
mov
js
push
call
in
fwait
sbb
mov
in
cmp
push
popa
cmp
xchg
aas
pop
lock
push
in
in
ja
ret
add
xchg
sub
pop
xchg
sub
lods
mov
fimuls
iret
xor
out
xchg
push
in
test
cmpsb
or
mov
sub
sub
dec
loopne
dec
inc
fidivrs
pop
popf
gs
into
jp
sbb
out
sbbl
into
mov
cmp
rcrl
mov
jbe
jmp
std
xchg
cli
cmp
xchg
outsb
sbb
dec
sbb
sahf
loope
into
adc
pop
out
icebp
xor
adc
inc
test
mov
xchg
sub
fcoms
dec
jmp
scas
inc
pop
or
imul
pop
lock
mov
movsl
in
or
ss
mov
mov
inc
fdivr
test
fs
dec
cld
xchg
cs
sbbb
dec
movsl
cmp
shlb
aam
mov
js
fnsave
dec
call
in
fwait
sbb
mov
in
cmp
push
pusha
cmp
xchg
aas
pop
lock
push
in
jecxz
ja
ret
add
or
in
sub
pop
xchg
sub
stos
mov
fisttpll
iret
data16
out
xchg
push
in
test
or
mov
sub
sub
dec
loopne
dec
inc
fidivrs
addr16
pop
pushf
gs
int
test
out
sbbl
into
mov
cmp
pop
push
xchg
mov
jbe
call
std
xchg
cli
cmp
xchg
insl
sbb
dec
mov
mov
insl
cmp
sahf
loopne
into
adc
pop
out
icebp
xor
arpl
ja
inc
test
mov
xchg
sub
xlat
xchg
sub
mov
scas
inc
pop
or
imul
pop
lock
mov
movsl
in
or
ss
mov
mov
inc
fdivr
test
fs
dec
cld
xchg
cs
sbbb
dec
movsl
cmp
mov
ret
pop
aam
mov
js
fnsaves
call
jmp
sbb
mov
in
cmp
push
pop
cmp
nop
aas
pop
lock
push
in
loop
ja
ret
add
xor
push
xchg
sub
stos
mov
fmull
iret
data16
fsubrp
xchg
push
in
test
movsb
or
mov
sub
daa
dec
loopne
dec
inc
fidivrs
addr16
pop
fwait
gs
int3
jp
sbb
in
sbbl
into
mov
cmp
rcrl
mov
jbe
out
je
enter
cmp
xchg
insb
sbb
dec
lea
mov
insl
cmp
sahf
fbstp
into
adc
pop
out
icebp
xor
bound
ja
inc
xorl
gs
sub
xchg
sub
mov
scas
inc
pop
or
imul
pop
lock
mov
movsl
in
or
ss
mov
mov
inc
fdiv
test
fs
dec
cld
xchg
imul
cmpl
mov
js
fnsave
call
ljmp
mov
in
cmp
push
pop
cmp
aas
pop
lock
push
in
loope
ja
ret
add
xor
xchg
sub
push
xchg
sub
test
shrl
cld
iret
data16
xchg
push
in
test
mov
sub
mov
sub
es
dec
loopne
dec
inc
fidivrs
addr16
pop
lcall
lods
in
sbbl
into
mov
cmp
rcrl
mov
jbe
out
je
enter
cmp
xchg
imul
mov
mov
mov
insl
cmp
sahf
fidivs
into
xadd
icebp
xor
popa
adc
inc
xorb
gs
sub
aad
sub
mov
scas
inc
pop
or
imul
pop
lock
mov
movsl
in
or
ss
mov
mov
inc
fdiv
test
fs
dec
cld
xchg
cs
sbb
mov
pop
aam
mov
js
fnsave
call
jmp
or
mov
in
cmp
push
pop
cmp
mov
pop
lock
push
in
loopne
ja
ret
add
xor
xchg
sub
push
xchg
sub
test
dec
fimull
iret
sub
xchg
dec
in
jne
pop
jb
xchg
inc
loope
jp
aaa
sbb
push
insl
rorl
popa
enter
adcb
adc
or
inc
call
addr16
push
out
repz
xchg
icebp
stc
int3
repnz
push
cmp
shll
cmp
and
leave
push
inc
ficoml
xchg
imul
dec
push
add
dec
ret
leave
pop
cmp
xor
jp
stos
fistl
jp
cmp
shll
ficoms
pop
and
cmovg
fwait
orb
je
xchg
ficomps
loopne
aad
fmull
fimull
repnz
jno
popa
out
jbe
loope
fsts
sub
ss
lret
ljmp
push
gs
fs
xor
and
adc
insb
jge
aas
in
jmp
or
xchg
jecxz
aas
jnp
mov
rcrl
cmpsl
push
sub
mov
mov
pop
and
mov
stos
pop
dec
movsl
and
xchg
movsb
icebp
jle
mov
pop
dec
iret
stc
lods
outsb
or
lret
xchg
sbb
sbbl
jg
in
push
jg
adc
inc
pushf
add
lahf
lea
adc
push
jbe
push
or
push
mov
sbb
inc
mov
mov
add
inc
insl
out
xchg
stos
outsb
pop
iret
loope
jne
mov
add
jg
cmp
push
test
push
stos
std
mov
inc
out
lock
out
hlt
mov
add
inc
fs
lret
les
mov
int
shlb
mov
fs
dec
outsl
adc
mov
outsl
cltd
loopne
add
in
ret
inc
and
inc
popa
add
ljmp
adc
daa
fsubrs
mov
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
adc
or
and
xchg
xchg
scas
shll
push
push
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
lcall
adc
insl
cmp
test
loope
adc
cmc
cmp
in
mov
xchg
cmc
xchg
ret
out
fbstp
das
loopne
mov
sub
mov
sbb
cli
scas
fistpl
add
insb
das
mov
jae
scas
pushf
adc
cwtl
in
mov
inc
inc
mov
out
notl
pop
add
imul
or
sbb
gs
cmp
push
ret
aas
in
mov
xchg
mov
popf
cmp
sub
mov
push
sarb
in
dec
fcomps
in
je
cs
fnstenv
mov
lea
sti
out
or
aad
mov
lahf
insl
sbbl
shlb
lods
sahf
outsb
mov
push
xor
icebp
jnp
fs
fidivs
push
loope
incl
cltd
sbb
ds
adc
dec
lcall
and
cld
pushf
dec
sub
jp
in
rolb
les
ljmp
popa
lods
pop
cmp
mov
inc
fwait
adc
sbb
imul
stos
push
mov
jbe
mov
fnstcw
push
inc
jge
sbb
push
aas
xlat
jbe
mov
sbb
cmp
hlt
push
fistpl
mov
add
jmp
xchg
or
xchg
int3
jo
push
pushf
and
nop
pop
aas
enter
sti
inc
rcl
mov
pop
xchg
adc
out
iret
cmp
iret
push
xchg
lea
jg
outsl
mov
int
cmp
push
aad
aas
scas
inc
jns
aam
pop
lods
dec
scas
je
xor
mov
cwtl
xchg
mov
popf
jp
pop
pop
push
call
mov
repnz
sub
cwtl
push
mov
adc
xor
mov
scas
lods
fsubrs
xchg
cli
cmp
or
add
push
dec
sub
jp
mov
je
popa
es
fmull
inc
bound
cmp
or
loope
