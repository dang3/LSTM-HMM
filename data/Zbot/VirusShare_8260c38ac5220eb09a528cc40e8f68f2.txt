jb
add
mov
pusha
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
and
movzbl
push
push
pop
adcl
mov
mov
bswap
pushl
pop
shr
add
add
cmpb
jb
xor
cmpb
ja
pop
jmp
div
mov
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
mov
sub
push
push
push
lea
sub
pushl
push
pop
popl
decl
mov
call
push
pop
mov
mov
lea
sub
dec
and
mov
mov
add
add
push
pop
xor
cmp
je
sub
sub
or
adc
add
mov
pushl
mov
sub
sub
pop
bswap
jmp
xor
push
mov
call
sub
ret
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
fistpll
mov
das
popa
push
sarl
bswap
mov
dec
xor
out
enter
cmp
test
lret
inc
sbb
mov
icebp
push
lods
bound
aas
push
adc
imul
add
insb
xlat
std
sahf
in
fisubrl
gs
sahf
arpl
push
push
or
jb
aas
lea
sub
mov
mov
or
insb
pop
pop
pop
adc
or
mov
inc
adc
out
jns
push
or
jmp
test
pop
adc
movsl
adcb
call
pop
clc
outsl
cwtl
xchg
xor
lds
push
cmp
clc
popf
fucom
pop
pop
cmp
stos
sbb
inc
sti
inc
mov
lahf
jecxz
pop
mov
decb
scas
cmp
xor
push
sub
je
dec
xor
fists
mov
and
ficomps
xor
sahf
mov
insl
std
inc
mov
sub
dec
enter
mov
push
jo
add
sbb
outsb
loope
cld
adc
or
lock
xchg
jp
xchg
mov
xor
xchg
je
pop
arpl
push
sahf
mov
jo
loop
push
xchg
pop
xchg
push
jne
and
jbe
fmuls
cmp
inc
mov
aad
xor
pusha
enter
cmpsb
stos
daa
les
adc
inc
dec
pop
leave
shll
insl
imul
ljmp
or
cmp
or
and
add
int3
jns
and
fdivs
cwtl
jae
out
xor
inc
lea
outsb
fmuls
xchg
fisubrs
cwtl
imul
loop,pt
ss
or
rcll
gs
inc
rcll
xor
jmp
xor
or
or
jne
mov
adc
adc
bound
out
pushf
imul
icebp
leave
movsb
add
shlb
sbb
incb
push
call
mov
outsl
imul
dec
imul
imul
mov
imul
shlb
sbb
arpl
jge
out
mov
movsb
sub
in
sahf
jecxz
pop
fidivs
jbe
xchg
inc
fs
mov
ret
sbb
cs
xchg
fs
mov
rorb
mov
xchg
lahf
mov
notl
int
jb
in
lods
mov
push
fwait
dec
inc
repz
mov
repz
es
cmp
fldenv
push
xchg
icebp
xchg
in
lods
fldenv
push
add
aam
fst
loopne
xorl
pusha
andl
cli
cltd
pop
xchg
push
mov
movsl
pop
mov
mov
test
inc
clc
iret
or
pop
mov
jns
jmp
stos
out
push
sbb
jp
sbb
hlt
sub
cmovnp
mov
outsb
xchg
out
dec
and
fldl
ss
push
sti
and
in
pop
movsl
and
xor
jmp
and
cmpsb
push
xchg
fistl
gs
cltd
ja
jge
and
filds
jae
incl
mov
into
or
icebp
xor
lcall
ret
loope
adc
loopne
adc
dec
adc
jle
xor
nop
xor
hlt
lret
stc
push
adc
inc
stc
jp
test
jae
seta
out
sgdtl
xor
pop
inc
jbe
out
lret
xor
lret
popf
adc
jnp
out
test
adc
lret
push
xor
adc
stos
fbld
popf
negl
xchg
sbb
out
inc
cs
mov
pop
adc
fsubs
sub
lcall
out
cmp
and
cltd
mov
jl
cli
lahf
pop
xor
fldl
sahf
adc
mov
aaa
enter
xchg
movsl
ss
sbb
lea
inc
mov
adc
cli
in
adc
lcall
js
std
xchg
dec
mov
inc
dec
ds
mov
stos
shr
jns
insb
cli
add
mov
sbbb
or
ljmp
xchg
insb
add
dec
pop
mov
jne
xor
mov
icebp
arpl
aad
xchg
cmp
nop
and
push
xchg
xor
or
leave
xchg
loope
sbb
mov
cmp
arpl
mov
sub
push
iret
jmp
scas
push
lret
pop
cld
add
xor
stc
mov
cmpb
pusha
int3
test
push
mov
shll
push
push
clc
mov
imul
push
movsl
push
out
mov
xchg
or
aad
subb
sbb
cmp
test
jge
dec
sbbb
movsb
repz
mov
imul
scas
cmpsb
push
in
cli
pop
cmpsb
popa
sub
popf
in
and
inc
sbb
mov
lcall
mov
data16
loopne
pop
adc
dec
xor
sbb
mov
enter
ds
pop
into
xchg
mov
sub
icebp
rcrl
adc
addr16
das
hlt
mov
shrl
or
hlt
mov
shrb
jecxz
cmp
out
cmp
rclb
fisttpl
mov
inc
data16
test
shrl
push
pushl
ret
dec
in
push
jb
out
cwtl
sbb
movsl
repz
out
lock
mov
push
adc
add
add
jp
push
ljmp
push
jmp
loop
cmpl
push
test
icebp
or
jo
push
sbb
in
js
mov
or
or
push
repnz
fsubrs
xor
iret
in
push
insl
sub
xor
imul
jle
add
out
mov
sbb
ljmp
or
scas
sub
mov
into
pusha
inc
mov
into
pusha
inc
mov
into
pusha
inc
mov
into
pusha
inc
mov
insb
pusha
mov
pop
insb
xor
jmp
dec
fnstcw
ret
aam
mov
or
dec
mov
lcall
mov
cmc
.byte
.byte
.byte
dec
jp
add
insb
and
add
and
add
and
add
add
shlb
add
and
add
and
add
add
into
and
add
add
xor
add
shlb
add
cmp
add
enter
push
and
add
add
pushf
and
add
and
add
and
add
and
add
and
add
add
add
add
mulb
add
xchg
and
add
and
add
and
add
and
add
and
add
add
sbb
add
and
add
add
add
add
pusha
and
add
add
dec
and
add
add
add
add
pusha
and
add
and
add
add
and
add
add
movsb
and
add
add
jp
add
insb
and
add
and
add
and
add
add
shlb
add
and
add
and
add
add
into
and
add
add
xor
add
shlb
add
cmp
add
enter
push
and
add
add
pushf
and
add
and
add
and
add
and
add
and
add
add
add
add
mulb
add
xchg
and
add
and
add
and
add
and
add
and
add
add
sbb
add
and
add
add
add
add
pusha
and
add
add
dec
and
add
add
add
gs
popa
jae
inc
jb
outsl
jb
add
gs
addl
push
jb
arpl
jae
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
popa
imul
je
jo
gs
bound
arpl
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
gs
inc
imul
imul
gs
add
je
imul
bound
gs
add
rolb
gs
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
popa
je
inc
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
outsb
jae
insb
gs
imul
add
gs
je
dec
jne
gs
add
sbb
inc
js
je
jb
arpl
jae
mov
outsl
jbe
inc
imul
jns
add
mov
popa
je
push
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
imul
dec
gs
jo
jb
popa
je
add
data16
je
je
dec
popa
outsb
fs
add
xchg
add
je
imul
je
add
add
popa
imul
insb
gs
bound
arpl
add
gs
je
jbe
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
xchg
push
inc
imul
dec
gs
popa
addr16
add
xchg
push
inc
imul
dec
gs
popa
addr16
add
cld
add
push
imul
outsl
arpl
push
pop
inc
gs
inc
add
push
inc
imul
add
push
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
or
imul
jae
addr16
add
push
pop
inc
gs
inc
add
inc
gs
imul
outsb
addr16
add
fiadds
inc
imul
outsl
ja
add
pop
inc
gs
inc
add
inc
gs
jns
inc
outsl
insb
outsl
jb
testl
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
add
aas
aas
xor
inc
dec
push
push
push
pop
inc
inc
push
inc
inc
inc
pop
pop
add
aas
aas
xor
inc
dec
push
push
push
pop
inc
inc
push
inc
inc
inc
pop
pop
add
aas
aas
xor
inc
dec
push
push
push
pop
inc
inc
push
inc
inc
inc
pop
pop
add
aas
aas
xor
inc
dec
push
push
push
pop
inc
inc
push
inc
inc
inc
pop
pop
add
inc
inc
cs
insb
.byte
.byte
jns
mov
push
mov
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
adc
add
add
add
hlt
add
add
add
addb
add
hlt
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
js
add
add
add
mov
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
sub
add
add
add
add
push
add
add
dec
add
call
add
add
add
add
or
add
add
test
add
or
add
add
bound
add
js
add
add
add
add
add
add
add
add
add
add
addb
add
std
std
add
incl
add
add
add
add
add
std
add
std
add
add
incb
rol
add
addl
add
addb
add
addl
incl
add
add
add
add
mov
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
or
mov
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
testl
inc
inc
inc
add
add
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
clc
clc
clc
clc
clc
clc
clc
div
push
idiv
push
div
clc
idiv
clc
idiv
push
div
push
idiv
clc
div
clc
clc
clc
clc
div
push
idiv
clc
idiv
push
idiv
clc
idiv
push
div
incl
inc
incl
inc
incl
inc
incl
incl
incl
incl
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
push
idiv
clc
div
incl
inc
push
out
repnz
icebp
repnz
icebp
lock
icebp
icebp
push
icebp
lock
lock
icebp
lock
out
lock
out
icebp
push
icebp
repnz
out
repnz
out
icebp
incl
clc
div
clc
div
incl
inc
push
out
icebp
push
out
icebp
push
out
repnz
icebp
lock
out
lock
out
repnz
icebp
repnz
out
icebp
push
icebp
repnz
lock
icebp
repnz
out
lock
push
div
push
idiv
incl
push
icebp
icebp
push
lock
lock
icebp
icebp
push
lock
push
lock
push
lock
icebp
lock
lock
out
repnz
out
icebp
push
out
lock
push
div
clc
div
incl
inc
push
icebp
repnz
lock
out
lock
out
icebp
push
out
icebp
push
lock
icebp
lock
out
icebp
push
out
repnz
out
repnz
lock
push
lock
incl
inc
push
div
push
clc
idiv
inc
inc
inc
push
icebp
repnz
icebp
lock
lock
icebp
repnz
icebp
lock
lock
push
lock
lock
icebp
repnz
icebp
icebp
push
lock
out
lock
inc
push
div
push
idiv
incl
push
lock
push
lock
lock
lock
icebp
repnz
icebp
icebp
push
out
icebp
push
icebp
lock
icebp
icebp
push
out
repnz
lock
out
repnz
push
idiv
push
clc
clc
incl
inc
push
icebp
icebp
push
out
repnz
out
lock
icebp
repnz
icebp
lock
out
lock
out
repnz
icebp
repnz
icebp
icebp
push
out
icebp
push
out
lock
icebp
lock
inc
push
div
push
clc
idiv
inc
inc
inc
push
out
lock
out
repnz
out
lock
out
repnz
out
icebp
push
lock
icebp
lock
out
icebp
push
out
icebp
push
out
repnz
icebp
icebp
push
icebp
icebp
incl
push
div
push
clc
idiv
inc
inc
inc
incl
incl
inc
incl
incl
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
inc
incl
incl
inc
clc
div
push
clc
idiv
inc
inc
inc
incl
inc
incl
inc
incl
inc
incl
incl
incl
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
push
clc
idiv
clc
clc
idiv
inc
inc
inc
incl
incl
inc
incl
inc
incl
inc
incl
incl
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
clc
div
clc
clc
clc
push
div
push
idiv
push
div
push
div
push
div
push
clc
idiv
div
clc
clc
div
push
idiv
clc
div
push
div
clc
clc
idiv
clc
div
push
idiv
push
div
incl
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
std
incl
std
incb
add
add
add
add
add
incb
add
add
add
incb
ret
add
addb
addl
add
add
add
add
addb
add
add
incl
mov
mov
mov
mov
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
std
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
clc
testl
inc
inc
inc
add
add
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
incl
add
add
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
div
clc
idiv
push
div
push
clc
idiv
clc
idiv
push
clc
idiv
idiv
idiv
clc
clc
idiv
idiv
clc
clc
div
clc
div
clc
div
push
div
push
div
push
div
push
div
clc
div
push
clc
idiv
div
idiv
div
idiv
idiv
idiv
idiv
idiv
div
clc
push
clc
idiv
idiv
idiv
clc
clc
idiv
div
clc
clc
div
push
clc
clc
push
div
push
clc
clc
push
div
push
div
clc
div
push
clc
idiv
div
idiv
idiv
idiv
clc
clc
idiv
clc
clc
idiv
idiv
clc
push
clc
idiv
div
clc
push
div
push
div
clc
clc
idiv
div
idiv
idiv
clc
clc
div
clc
div
push
idiv
push
div
push
div
push
div
clc
div
clc
clc
clc
push
clc
idiv
div
clc
push
clc
idiv
idiv
idiv
clc
idiv
clc
div
push
idiv
clc
div
push
idiv
push
div
push
clc
idiv
inc
inc
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
incl
incl
inc
incl
inc
incl
clc
idiv
push
idiv
push
idiv
clc
clc
idiv
inc
inc
inc
incl
incl
incl
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
incl
inc
incl
inc
incl
inc
incl
push
clc
idiv
div
idiv
clc
clc
clc
clc
div
incl
inc
incl
inc
push
lock
icebp
icebp
push
out
lock
icebp
lock
out
lock
icebp
repnz
icebp
repnz
out
icebp
push
icebp
repnz
lock
out
lock
out
icebp
push
icebp
icebp
push
icebp
lock
out
lock
lock
icebp
icebp
push
out
icebp
push
icebp
icebp
push
lock
lock
push
out
repnz
icebp
repnz
out
icebp
incl
inc
incl
inc
push
idiv
push
div
push
clc
clc
push
clc
idiv
inc
inc
inc
incl
push
icebp
icebp
push
out
repnz
lock
lock
push
lock
icebp
icebp
push
out
repnz
icebp
icebp
push
lock
lock
lock
push
out
repnz
icebp
icebp
push
out
icebp
push
out
lock
lock
out
lock
out
repnz
icebp
icebp
push
icebp
lock
lock
push
icebp
icebp
push
lock
push
lock
incl
clc
clc
idiv
div
idiv
clc
idiv
push
clc
idiv
inc
inc
inc
incl
inc
push
out
repnz
out
lock
out
repnz
icebp
icebp
push
out
icebp
push
icebp
lock
out
repnz
lock
out
icebp
push
icebp
icebp
push
out
lock
lock
lock
out
lock
lock
lock
icebp
icebp
push
lock
icebp
repnz
out
lock
lock
push
icebp
icebp
push
icebp
lock
icebp
lock
inc
incl
push
idiv
clc
idiv
clc
div
clc
div
incl
incl
inc
push
icebp
repnz
lock
lock
out
repnz
lock
out
repnz
icebp
icebp
push
icebp
lock
lock
lock
push
out
icebp
push
lock
push
lock
out
repnz
out
icebp
push
lock
out
lock
lock
push
lock
push
out
repnz
out
icebp
push
out
lock
out
lock
lock
incl
inc
clc
div
push
clc
idiv
clc
idiv
clc
div
incl
inc
incl
inc
push
icebp
icebp
push
lock
push
icebp
lock
out
repnz
out
icebp
push
lock
icebp
repnz
icebp
repnz
out
icebp
push
icebp
icebp
push
out
lock
out
icebp
push
lock
icebp
repnz
lock
lock
out
icebp
push
lock
lock
push
icebp
lock
lock
push
lock
lock
icebp
lock
inc
incl
inc
push
idiv
push
clc
clc
push
idiv
push
clc
idiv
inc
inc
inc
incl
inc
push
lock
icebp
icebp
push
icebp
repnz
out
repnz
out
icebp
push
lock
icebp
lock
out
icebp
push
lock
push
icebp
lock
out
icebp
push
icebp
icebp
push
lock
push
out
icebp
push
lock
out
icebp
push
out
repnz
icebp
icebp
push
out
lock
icebp
lock
icebp
lock
icebp
lock
icebp
icebp
push
out
repnz
inc
incl
inc
clc
idiv
clc
div
push
div
push
clc
clc
incl
inc
incl
inc
push
out
repnz
icebp
lock
out
icebp
push
out
repnz
icebp
icebp
push
lock
icebp
icebp
push
icebp
lock
lock
lock
push
icebp
repnz
out
lock
icebp
icebp
push
icebp
lock
out
lock
lock
push
icebp
lock
lock
lock
icebp
icebp
push
icebp
lock
lock
icebp
repnz
out
icebp
incl
incl
push
div
push
div
clc
clc
idiv
div
idiv
inc
inc
inc
incl
push
icebp
lock
lock
out
icebp
push
icebp
lock
lock
push
lock
out
repnz
icebp
lock
out
lock
lock
push
out
repnz
icebp
icebp
push
out
icebp
push
icebp
lock
lock
out
icebp
push
icebp
repnz
lock
out
icebp
push
icebp
lock
icebp
lock
lock
icebp
icebp
push
out
lock
inc
incl
inc
push
div
push
idiv
clc
div
push
div
incl
inc
incl
inc
push
out
icebp
push
lock
out
lock
out
lock
icebp
repnz
icebp
icebp
push
icebp
lock
icebp
lock
icebp
repnz
lock
out
lock
icebp
lock
icebp
icebp
push
lock
lock
lock
push
icebp
icebp
push
out
icebp
push
icebp
lock
out
icebp
push
lock
icebp
repnz
out
icebp
push
lock
incl
push
div
push
div
clc
idiv
push
div
incl
inc
incl
push
out
repnz
lock
push
out
repnz
out
icebp
push
lock
push
out
lock
icebp
lock
out
repnz
out
repnz
out
lock
lock
lock
push
icebp
lock
icebp
lock
lock
lock
icebp
icebp
push
icebp
repnz
lock
out
lock
out
icebp
push
lock
lock
out
icebp
incl
incl
clc
idiv
push
div
clc
div
push
clc
idiv
inc
inc
inc
incl
inc
push
icebp
repnz
icebp
icebp
push
out
repnz
out
icebp
push
lock
out
icebp
push
out
repnz
lock
lock
push
lock
lock
push
icebp
icebp
push
out
lock
lock
push
lock
push
lock
icebp
icebp
push
icebp
lock
icebp
lock
lock
icebp
repnz
out
repnz
out
lock
out
icebp
incl
incl
inc
push
div
clc
div
push
idiv
clc
clc
idiv
inc
inc
inc
incl
inc
push
out
icebp
push
out
lock
lock
push
icebp
lock
lock
out
repnz
out
lock
lock
push
lock
icebp
icebp
push
lock
push
out
icebp
push
lock
lock
lock
lock
push
out
lock
icebp
icebp
push
lock
icebp
repnz
icebp
lock
icebp
repnz
out
repnz
out
repnz
inc
incl
push
idiv
push
div
push
clc
idiv
div
idiv
inc
inc
inc
incl
inc
push
out
repnz
lock
push
lock
icebp
lock
out
icebp
push
out
repnz
lock
push
out
repnz
icebp
lock
out
lock
lock
out
icebp
push
icebp
repnz
out
repnz
icebp
repnz
lock
icebp
repnz
out
icebp
push
out
lock
out
repnz
icebp
lock
out
repnz
lock
push
out
icebp
incl
incl
inc
push
clc
idiv
div
idiv
div
idiv
div
idiv
inc
inc
inc
incl
inc
push
icebp
lock
lock
push
lock
out
lock
lock
lock
push
lock
push
out
lock
out
repnz
icebp
lock
lock
push
lock
push
lock
push
lock
out
icebp
push
icebp
repnz
out
lock
out
lock
out
lock
out
icebp
push
icebp
repnz
icebp
icebp
push
out
icebp
push
lock
inc
incl
inc
push
idiv
push
div
push
div
push
clc
clc
incl
inc
incl
inc
push
icebp
repnz
lock
push
icebp
lock
icebp
icebp
push
lock
out
lock
lock
lock
out
icebp
push
out
icebp
push
out
repnz
icebp
icebp
push
out
icebp
push
lock
icebp
lock
icebp
lock
lock
icebp
icebp
push
lock
icebp
lock
lock
icebp
lock
icebp
lock
icebp
icebp
incl
incl
inc
clc
div
clc
div
push
div
push
clc
idiv
inc
inc
inc
incl
incl
inc
incl
inc
incl
incl
incl
inc
incl
inc
incl
incl
incl
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
clc
div
push
div
push
idiv
clc
div
incl
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
push
clc
idiv
div
idiv
idiv
idiv
div
idiv
inc
inc
inc
incl
inc
incl
incl
inc
incl
incl
incl
inc
incl
incl
incl
inc
incl
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
incl
inc
incl
incl
incl
inc
incl
inc
incl
incl
inc
incl
incl
clc
div
clc
clc
idiv
clc
clc
idiv
div
idiv
inc
inc
inc
incl
incl
incl
incl
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
push
div
push
clc
idiv
clc
clc
idiv
clc
div
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
incl
inc
incl
incl
inc
incl
incl
inc
incl
incl
inc
incl
incl
inc
incl
inc
incl
incl
inc
incl
incl
inc
incl
inc
incl
inc
push
idiv
push
div
push
div
push
div
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
incl
incl
incl
inc
incl
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
clc
clc
idiv
clc
clc
idiv
div
idiv
clc
div
clc
idiv
clc
idiv
push
idiv
push
idiv
clc
div
push
div
clc
div
push
div
push
clc
idiv
idiv
idiv
idiv
idiv
idiv
idiv
clc
idiv
push
div
push
idiv
clc
idiv
push
clc
clc
push
idiv
push
clc
idiv
clc
idiv
push
div
clc
div
push
idiv
push
div
push
div
clc
idiv
clc
idiv
clc
clc
idiv
div
clc
push
clc
idiv
idiv
idiv
clc
idiv
push
div
push
div
push
div
clc
div
push
div
push
clc
idiv
clc
idiv
clc
div
push
clc
idiv
div
idiv
idiv
idiv
div
idiv
div
clc
push
clc
idiv
idiv
idiv
idiv
idiv
div
idiv
idiv
idiv
clc
div
push
idiv
push
idiv
push
idiv
push
div
push
clc
clc
push
idiv
push
div
clc
idiv
push
clc
idiv
div
clc
push
div
incl
add
add
incl
add
add
incl
add
add
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
and
adc
add
add
call
add
and
add
add
add
add
and
add
add
add
add
pushf
xchg
sub
mov
pop
jecxz
mov
and
shrl
pop
add
mov
and
sbb
inc
xlat
cmp
ret
pop
cmc
orb
adc
fbld
adc
mov
sbb
inc
fsubrs
test
int3
fadd
pop
or
adc
pop
sub
jbe
inc
xor
jno
std
xchg
mov
push
out
rcrb
mov
in
add
push
cmp
test
stos
inc
mov
fmulp
pop
adc
out
arpl
dec
mov
ret
shlb
and
dec
sub
pop
push
movsb
fwait
jp
cmc
stos
mov
jl
decb
dec
loope
pop
fwait
xor
push
push
movsb
mov
sbb
testl
ret
pop
mov
stos
pushf
stos
loope
fnstsw
call
inc
push
sbb
push
xchg
mov
lea
cmc
pop
lock
jns
lret
lcall
loope
mov
pop
add
sahf
xor
mov
mov
push
dec
daa
mov
mov
les
icebp
adc
inc
rorb
add
mov
adc
dec
loop
pop
cmc
das
imul
xorl
scas
inc
cmp
mov
and
int
push
inc
aad
jae
jmp
mov
les
stos
or
cmpsl
ds
cmp
enter
pop
popf
mov
mov
fnstsw
or
add
nop
jge
mov
jecxz
aas
add
pop
hlt
push
fsubrs
mov
int
pop
in
in
jg
xorb
or
mov
frstor
in
xor
add
aam
and
xlat
xchg
sub
sub
dec
pop
jnp
pop
lods
jge
push
add
out
cs
fdivl
pop
loop
xor
inc
add
lret
cwtl
push
mov
in
in
test
jmp
rcrl
or
jb
jp
lea
mov
imul
imul
ljmp
popa
ds
movsl
cmp
pop
call
push
xor
mov
je
xchg
inc
push
movsl
js
mov
ret
xchg
sarb
loope
and
sub
cmp
push
stos
pop
inc
fimuls
lods
gs
fstpl
cli
xchg
push
incb
scas
mov
les
int
movsb
mov
in
inc
neg
je
imul
jl
xchg
sub
popf
sbb
inc
out
aaa
into
and
gs
inc
push
in
jb
in
sub
jae
lds
or
sbb
lea
scas
inc
imul
fs
fucomip
adcb
test
test
or
fadds
push
sub
inc
fmull
dec
fidivs
sub
pop
mov
sbbl
and
lahf
add
iret
ja
mov
in
leave
jne
jb
ljmp
sti
cmp
sbb
ret
int
jecxz
gs
ss
subl
or
or
cwtl
fldt
mov
in
sub
into
gs
jg
sti
mov
in
adcl
or
push
push
sub
aaa
ja
push
test
lret
cld
stos
gs
fistpl
sbbl
jno
mov
dec
mov
into
hlt
mov
push
in
inc
cmc
fnsave
je
lcall
sub
fwait
sbb
inc
in
aaa
into
push
iret
xchg
aas
push
in
jo
in
test
xchg
jae
ret
or
cmp
xchg
sub
xor
inc
pop
mov
jae
out
popa
repz
testl
push
cmp
mov
data16
arpl
adcb
iret
imul
out
pusha
negl
ljmp
xchg
push
adc
pop
pop
fdivs
sub
mov
push
movsl
adc
inc
add
jb
sub
je
call
rclb
aad
hlt
in
sub
adc
inc
js
adc
ret
xchg
jge
sahf
stos
rclb
cmpsl
add
pop
hlt
mov
iret
adc
addr16
pop
repnz
xchg
lret
enter
out
dec
filds
xchg
sub
jb
adc
mov
jge
jp
xchg
sbb
out
cmp
push
icebp
mov
movsb
cmp
fcmovnb
pop
adc
adc
mov
ds
pop
mov
inc
or
inc
in
jae
add
mov
dec
in
mov
adc
xor
scas
inc
push
cmp
jo
jbe
xchg
pop
mov
pop
cmc
add
dec
nop
daa
jnp
mov
and
push
movsb
call
xchg
int3
sbb
cmp
xchg
stos
mov
adc
lock
mov
cmc
mov
shl
idivl
and
sub
mov
push
mov
mov
cmpsl
inc
add
aaa
mov
push
imul
cwtl
mov
rcl
pop
add
mov
cmp
xor
jge
data16
arpl
dec
in
jb
aad
inc
stos
inc
jns
mov
int
pop
xor
inc
scas
dec
jecxz
mov
mov
mov
enter
fadd
out
rclb
lds
fbstp
xor
lea
inc
fdivp
lretw
cld
mov
jg
mov
cwtl
mov
mov
fs
shl
pop
scas
and
and
pop
rcrl
or
dec
jecxz
xor
data16
cltd
mov
lods
inc
or
in
andl
cld
xchg
xchg
push
in
icebp
cwtl
and
and
pop
inc
sub
adc
gs
out
jg
inc
jecxz
sub
test
mov
push
in
je
ja
sbb
push
mov
dec
mov
push
out
mov
shr
loop
or
cwtl
ds
sbb
cmp
xlat
mov
add
inc
jnp
jb
add
mov
cmpsb
jae
aam
and
inc
mov
rclb
xchg
sbb
pop
icebp
loop
mov
mov
testb
push
mov
subl
and
hlt
cs
insl
and
cld
xchg
popa
or
fidivrs
push
mov
fdivs
push
jno
hlt
cmpsb
inc
push
popf
je
stc
nop
loope
and
ret
cmp
dec
sub
pop
insb
mov
popf
jnp
push
lods
mov
fcomip
call
repnz
jle
push
fwait
mov
rcll
mov
aad
and
movsb
push
xor
stc
popa
lea
mov
mov
test
out
add
jno
clc
cmpsb
cmp
data16
pop
cmc
fs
cltd
lods
jge
dec
stos
mov
inc
jecxz
pop
icebp
loope
push
jmp
xor
push
lods
push
jno
test
mov
ss
movsb
les
cld
mov
sub
pop
mov
adc
push
jge
push
stos
xchg
shlb
aam
lock
dec
loop
pop
lahf
ss
xor
cmpsb
or
cmp
mov
loopne
inc
push
clc
icebp
mov
dec
sbb
insl
outsb
fwait
xor
cmp
cli
mov
xlat
outsb
sbb
mov
call
pop
insb
mov
lcall
lret
lea
adc
jns
call
sbb
mov
cwtl
loope
jae
and
and
popfw
cwtl
das
lret
jne
sub
mov
out
xorl
cmc
outsl
push
and
repz
pop
repz
jnp
ljmp
push
in
rorb
insb
add
daa
outsb
add
and
int3
arpl
jp
jns
or
jbe
mov
dec
jecxz
lds
ret
adc
pop
inc
xor
leave
jp
cmp
movsb
sub
mov
dec
out
mov
outsl
push
pop
or
mov
xchg
jge
xor
jae
or
ds
loopne
push
imul
xchg
push
jl
jno
dec
pop
repz
lret
jno
cmc
cmpsb
sbb
xchg
dec
test
std
xchg
mov
insl
add
mov
fbstp
add
push
mov
mov
mov
xlat
in
xor
dec
jmp
frstor
test
or
or
out
ss
lcall
inc
sbb
xchg
cwtl
ss
lret
mov
stos
inc
pusha
xchg
sub
popf
xsha1
cmpsb
lret
inc
lcall
fidivl
jecxz
mov
ret
sub
pushf
push
push
fcomps
mov
outsl
xchg
or
cmp
jno
cmp
or
mov
mov
fiadds
inc
add
dec
xor
sub
pop
rclb
sub
push
in
mov
std
xchg
stos
daa
fnsave
mov
das
add
inc
xor
xchg
push
lret
loop
xchg
mov
or
inc
pop
gs
lcall
mov
test
lods
xchg
sub
scas
lahf
fmull
stos
inc
add
mov
mov
adcb
roll
push
jae
xor
mov
aas
in
insb
add
cld
sahf
xor
nop
ss
daa
rorb
xchg
stos
pop
add
mov
adc
shll
add
pop
repz
push
ljmp
mov
and
outsb
stc
xchg
std
xchg
xor
and
push
dec
mov
adc
xchg
mov
icebp
mov
clc
pop
out
sub
adc
jb
cmp
pop
fisttpl
jmp
cmp
mov
lods
sub
pushf
or
lock
std
mov
add
push
in
dec
lods
dec
push
pop
ret
repnz
pop
shl
loop
xlat
fs
loope
lds
push
cmp
js
insb
mov
popf
dec
jmp
cmpsl
dec
push
push
xchg
push
push
rclb
xor
ret
jle
icebp
sub
inc
mov
dec
dec
popf
push
or
das
and
popa
popa
inc
add
mov
mov
subb
sbb
cld
les
add
sbb
jge
inc
or
shlb
jge
stc
iret
jbe
lock
adc
aas
or
jmp
ss
lahf
sarb
scas
call
fdivr
xchg
mov
fnstsw
jmp
pop
gs
jbe
adcb
push
cmp
xchg
xchg
or
pop
mull
pop
jns
mov
ds
cmp
inc
aaa
lds
incb
xchg
js
ret
jle
push
sbb
orl
add
sbb
std
mov
leave
gs
pop
pop
cmp
inc
cli
sbb
call
loop
cwtl
loop
or
mov
dec
jns
mov
leave
cmp
fbld
mov
push
inc
dec
rcrb
push
cmp
mov
mov
bound
and
mov
mov
cmp
mov
push
sub
mov
xor
dec
loope
int3
cwtl
outsb
adc
shl
test
add
xchg
loopne
or
bound
pop
std
sbb
mov
and
sub
imul
loopne
popf
sarl
shlb
leave
xor
repnz
mov
push
in
mov
ja
fmul
mov
into
in
push
jp
js
mov
sub
xor
add
mov
data16
pop
data16
out
cmc
int3
add
or
into
test
push
in
xlat
push
pop
mov
push
mov
push
pop
mov
adc
js
push
mov
ret
sbb
push
loop
mov
imul
xor
shrl
add
mov
sbb
xchg
ljmp
sub
scas
sub
loope
js
aam
dec
xor
xchg
gs
js
jb
sub
jb
call
outsl
fistl
lret
loopne
and
fldcw
dec
xor
imul
ret
bound
mov
lods
sbb
mov
mov
shlb
mov
xchg
sub
sbb
mov
and
aad
stos
sar
xchg
or
out
xchg
sub
fwait
cmpb
int
jnp
jl
adc
int3
mov
rcl
jb
loop
inc
hlt
pop
fidivl
mov
xchg
pop
icebp
dec
jecxz
loop
adc
ss
lock
movsb
or
sbb
repz
cmp
mov
mov
adc
xchg
sub
cltd
xchg
aam
repz
sub
sbb
mov
enter
cmp
ds
push
sti
xchg
adc
sbb
mov
lret
mov
jge
push
in
pushf
xchg
cmpsl
ds
jae
loop
mov
mov
rcl
push
insl
mov
mov
into
gs
xor
in
subl
sub
mov
mov
inc
mov
mov
sbb
inc
fiadds
stos
gs
fists
sbbl
popf
mov
mov
xchg
sub
fisubs
dec
test
call
rclb
lock
dec
sub
pop
and
dec
loope
jnp
ret
jo
imul
les
cs
push
dec
repnz
xchg
pushf
jp
cmp
xchg
lahf
xchg
ret
mov
loopne
ljmp
sub
enter
dec
loope
loope
sbb
mov
incl
test
or
or
sub
and
add
xor
and
mov
in
addl
pop
push
sub
mov
stos
xlat
sub
mov
inc
fnstsw
mov
clc
and
imul
pop
hlt
repz
adc
ret
pop
push
jb
xor
mov
in
test
loop
insl
sbb
or
les
hlt
mov
ret
adc
imul
jbe
mov
xsha256
cmpsb
aam
movsl
cmp
std
sub
pop
arpl
dec
jecxz
test
imul
sahf
mov
lret
movsl
pushf
jecxz
cmp
mov
les
scas
pop
icebp
and
jns
dec
js
or
mov
mov
lods
rclb
cmp
arpl
mov
repnz
ljmp
stos
or
stos
jg
mov
not
fs
mov
aam
inc
filds
pushf
cmpsl
stos
xchg
sub
daa
mov
pop
cmp
popa
xor
jne
mov
fsubrl
jge
sub
mov
inc
fwait
xor
cmp
std
pop
mov
jae
xlat
outsb
in
pushf
test
push
testb
mov
loop
mov
lock
lret
loop
mov
int3
add
ror
push
mov
stc
lea
fwait
cmp
lcall
loope
push
lret
xor
clc
vpshad
sub
pop
scas
addr16
mov
int3
mov
in
mov
push
ljmp
jno
jae
and
or
lods
inc
pop
lret
dec
in
jbe
bound
mov
sbbb
popf
xor
xor
sahf
cmp
push
and
pusha
stos
pushf
inc
ret
out
stos
or
stc
xor
add
pop
dec
xchg
and
xchg
mov
mov
out
or
gs
inc
jl
bound
jns
lcall
cltd
cmpsl
ds
sub
adc
jecxz,pt
out
jge
cld
outsl
or
cltd
pop
mov
cmpsl
xchg
ljmp
pop
dec
mov
out
cmp
je
push
jbe
mov
fbld
mov
adc
pop
fsubs
into
pusha
icebp
jecxz
lods
mov
repz
cwtl
sbb
test
cmpsb
add
xchg
sub
mov
pop
cmc
ds
push
movsl
adc
adc
cmp
ret
lock
leave
lea
fnclex
cmpsl
jle,pt
push
pop
push
dec
xchg
push
movsb
cmp
ret
or
cmpsl
movl
cmp
iret
sar
xor
pop
out
push
nop
test
xor
mov
icebp
xor
rclb
js
inc
or
jbe
outsl
xchg
sub
inc
lret
or
mov
jge
js
pop
cmp
in
les
and
mov
inc
fdivs
adc
into
enter
out
adc
xchg
dec
in
icebp
fwait
xor
lds
iret
inc
mov
xor
int
inc
out
cmc
mov
adc
pusha
repnz
stos
outsb
push
stc
nop
mov
xor
loopne
pop
scas
cltd
or
xor
outsb
add
cmpsb
jo
and
iret
stos
inc
or
push
lods
inc
push
pop
stc
nop
sahf
jl
popa
out
pop
scas
out
clc
xchg
int
rclb
lcall
lret
push
adcl
push
rolb
insl
out
xor
or
test
xlat
and
orl
or
jae
es
push
push
inc
fisttpl
cmpsl
stc
sbb
sub
pop
adc
jae
sahf
xor
jno
cmpsl
xor
lds
cmpsl
and
mov
push
sbb
cltd
insb
jg
imul
mov
and
ds
repnz
and
aad
dec
jp
test
repz
outsb
add
xor
mov
jp
aam
jg
mov
mov
dec
insl
sub
adc
add
movb
test
movsl
cmp
lahf
into
imul
mov
leave
pusha
inc
push
outsb
add
pop
mov
inc
cmpsl
add
push
inc
repnz
stc
sub
testb
out
adc
xor
inc
fnstcw
fwait
xor
push
pusha
idiv
sbb
add
mov
testb
mov
xlat
outsb
shl
xor
das
cli
cmc
mov
iret
adc
xchg
test
add
outsl
push
fcomip
mov
xor
mov
nop
pushf
popa
pop
xor
in
sub
xor
lcall
and
xchg
movl
dec
in
add
adc
or
in
jl
xor
push
jmp
dec
pop
stos
inc
mov
leave
leave
pusha
lods
xchg
daa
mov
jle
inc
fsub
xchg
add
sti
ds
stos
pop
pop
sbbb
inc
xor
jae
nop
daa
in
pop
repnz
scas
inc
insb
cmp
and
mov
push
aad
andb
cmpsb
cmp
jns
les
xchg
daa
mov
dec
and
pop
outsb
lock
arpl
lcall
sbb
arpl
iret
dec
xor
in
in
mov
push
jb
mov
cmp
push
stc
nop
push
test
loope
in
cmp
lock
mov
xchg
cmc
adc
repz
pop
cmpsb
imul
push
cltd
xchg
jo
call
dec
xchg
pop
mov
cmp
pop
aam
push
fwait
ljmp
and
sbb
mov
int
dec
adc
sti
js
shrb
xchg
sbbb
outsb
lock
rorl
mov
shrl
pop
add
dec
loope
lods
jmp
fbstp
mov
mov
fdivs
int
mulb
jno
cli
inc
inc
sbbb
jo
sbb
shll
out
adc
push
sbb
int3
arpl
mov
sbb
cmp
push
cmp
mov
fisttps
loope
jae
xchg
or
out
xchg
sub
adc
inc
je
cmpsb
cmp
rcll
dec
test
stc
nop
push
mov
adc
and
aaa
into
stc
inc
xor
jne
pop
repnz
xchg
mov
or
sub
fwait
fwait
xor
aas
rcrb
scas
inc
xchg
xchg
shlb
mov
and
out
xchg
mov
lds
cmc
jo
addr16
int
pushf
frstor
int3
xchg
stc
or
in
push
movsl
scas
add
xor
inc
xlat
repnz
add
in
or
xor
push
cmc
test
mulb
xchg
xlat
adc
movsb
sub
xchg
dec
xor
jge
loopne
ljmp
xchg
cmp
pop
sbb
and
cmp
loop
test
icebp
xor
enter
ja
mov
sub
sar
dec
loop,pn
mov
xorb
mov
gs
mov
push
lods
daa
fnstcw
or
jp
cltd
xor
dec
loope
jg
push
mov
imul
rcr
je
inc
mov
cmpw
ja
into
add
es
in
push
jl
mov
js
or
lret
xchg
sub
and
push
push
mov
push
jb
adc
cltd
xor
ljmp
pop
or
dec
imul
popf
imul
lock
pop
mov
or
inc
fcoml
pop
repz
fwait
xor
pop
sbbl
cmp
xor
les
lods
push
popf
fldl
fidivs
and
das
push
cld
xchg
xchg
flds
mov
cmp
sub
jle
daa
dec
push
in
jge
pushf
xor
je
rcrb
xchg
sub
out
fsubrs
inc
mov
ja
testb
xchg
push
lods
jmp
test
aas
or
arpl
xor
sahf
or
das
mov
mov
jp
fisubl
int
dec
sbb
xlat
dec
pop
adc
xchg
jno
stc
stos
mov
xchg
out
lret
sbbb
setns
cmp
jecxz
push
pop
jns
test
jbe
movsl
cmp
fmulp
fwait
xor
mov
aas
inc
dec
dec
loopne
arpl
mov
mov
imul
xor
jns
fs
push
in
mov
sub
nop
or
jne
and
rcrl
in
test
cmp
scas
sahf
and
push
adc
rclb
lds
icebp
mov
sar
nop
or
leave
pusha
add
lods
inc
pusha
js
adc
ret
cmp
add
push
mov
xor
dec
in
sub
mov
fnstsw
rolb
movq
cmp
sub
push
test
pop
sahf
sub
outsl
cmp
dec
filds
mov
mov
cmp
mov
test
jns
loopne
lods
inc
add
es
arpl
adc
mov
fsubr
jg
add
cmp
pop
sub
dec
mov
frstor
shrb
clc
js
fnsave
add
fwait
clc
jecxz
xor
sbbl
popf
mov
iret
mov
es
or
cs
push
push
and
mov
ret
adcb
imull
xor
jbe
dec
push
mov
mov
cmpsb
xchg
lods
loope
xlat
mov
sub
adc
jge
sub
inc
enter
out
jmp
inc
mov
outsb
imul
xchg
fnsave
push
popf
out
fiaddl
xchg
add
cwtl
das
dec
and
clc
pop
insb
imul
cmpsl
mov
lret
lock
adc
rorb
notb
mov
dec
lock
movsb
out
adc
adc
dec
insb
jne
xchg
push
or
mov
mov
dec
adc
dec
outsb
and
notl
mov
loop
add
fnstenv
pop
cmc
mov
test
sbb
fcomi
jne
sub
sbbb
dec
mov
jg
xor
sbb
out
movsl
and
pop
lock
inc
stc
sbbb
jo
ljmp
daa
outsb
add
jb
jne
lret
or
in
sahf
xor
sbb
xor
or
push
mov
sbbl
loopne
mov
fstl
add
fnstenv
mov
mov
sarl
or
pop
lock
das
jne
pop
sub
push
jp
sub
lds
adc
inc
sbb
inc
gs
mov
shlb
cli
mov
cmc
mov
sahf
xor
mov
ret
std
mov
mov
mov
push
insl
add
mov
mov
jecxz
cmc
mov
dec
in
imul
pop
fnstenv
mov
mov
test
sbbl
repz
lock
or
movsl
mov
ficomps
xor
sbb
test
cmc
mov
xchg
rolb
ret
fnstenv
pop
hlt
mov
test
add
test
mov
fbstp
or
xor
sbb
les
or
and
pop
lock
out
inc
popf
cmp
lds
outsl
pushf
in
mov
mov
jnp
jnp
pop
lock
je
into
push
ja
test
shrb
cmpsb
mov
sarl
nop
daa
outsb
hlt
jecxz
and
inc
shrl
ljmp
les
imul
mov
into
xor
into
sbb
movsb
cmp
pop
repnz
es
hlt
push
jmp
addr16
movsb
inc
lret
lds
repz
pushf
xor
adc
or
aaa
into
sbb
ds
sub
lret
cmc
mov
cmpsb
mov
mov
push
ror
arpl
jb
ds
lret
add
xlat
outsb
pop
xlat
cmp
add
xorb
or
mov
les
mov
ret
stc
fs
pusha
xchg
sbb
jecxz
mov
test
lret
add
andb
mov
sub
xlat
jp
cmpsb
mov
pop
lock
or
or
test
cmp
stos
stc
rcrb
xchg
sub
push
loope
xchg
adc
cmp
setge
push
sbb
xor
pusha
cs
xor
cmp
ljmp
fnstcw
mov
pop
in
cmp
outsl
mov
xchg
xor
inc
ret
data16
mov
scas
icebp
xchg
aad
or
mov
lret
jne
push
out
sub
imul
sbb
sbb
mov
sbb
mov
cmp
xchg
jae
and
mov
scas
sub
iret
push
ret
jp
frstor
int3
pop
jmp
jg
lock
iret
xchg
repnz
jl
xchg
push
mov
inc
mov
pop
xchg
or
outsl
in
lods
cmp
test
clc
mov
stos
or
jp
sbb
shrl
les
cmc
ja
pushf
pop
in
and
xchg
fs
jp
or
lcall
jno
daa
fwait
bound
pop
movsb
jbe
bound
test
mov
rclb
lods
push
loop
insb
fstps
push
xorb
rol
je
dec
mov
mov
testb
jb
fwait
lcall
mov
dec
int
adcl
ret
std
jge
inc
pusha
adc
mov
sbb
and
icebp
test
cmp
jb
leave
lahf
cld
or
xlat
ljmp
out
mov
xorl
mov
dec
fildl
out
out
pop
sub
xorl
and
repz
push
test
cltd
and
pop
or
mov
ror
add
adc
mov
fldl
or
scas
lods
and
mov
push
stos
sbb
pop
inc
lahf
daa
sti
insb
fisubl
or
inc
dec
addb
fisubs
xor
mov
adc
daa
sbb
repnz
cmp
mov
jns
inc
les
add
sbb
scas
xchg
sbb
scas
sbb
inc
js
sbb
xlat
xchg
sbb
addr16
test
sbb
lahf
or
inc
test
jb
jge
add
mov
push
fimull
iret
xchg
iret
outsb
sub
push
jle
xor
pop
mov
jle
test
shrb
std
pusha
push
scas
stos
add
cmp
test
sub
dec
sarl
adc
dec
fcoml
xchg
pushf
add
jb
test
cmpsb
in
lock
and
repnz
jne
mov
push
in
iret
movsl
cmp
imul
and
pop
push
mov
push
jmp
or
xchg
cli
pop
pop
sbb
mov
mov
jae
insl
inc
fstpl
mov
adc
add
cmpsl
cmp
fsubs
xchg
stc
jns
sub
cmpsl
jle,pt
mov
cmp
pop
cli
xchg
nop
icebp
sbbl
mov
jmp
inc
and
ss
call
mov
sbb
fcmovu
cmp
shrb
stc
sub
dec
sbbl
adc
xchg
gs
mov
daa
xchg
je
ficoml
into
sub
mov
and
addr16
jae
lods
inc
add
sub
bound
and
mov
inc
fdivs
pop
sahf
or
pop
test
and
adc
jo
fisubl
add
xor
mov
mov
add
or
mov
sub
idivl
fisubrl
push
dec
lret
sti
inc
push
dec
lds
pop
bound
ds
fdivrl
out
cmpsb
outsl
leave
lock
or
fimull
jle
fcmovbe
imul
sub
cmp
rep
jmp
inc
rcrb
xchg
fcoml
cmp
mov
mov
aam
nop
xchg
jno
sub
pop
jp
sbb
push
sub
or
push
aad
rorb
imull
push
popf
cmpsl
jecxz
inc
es
jo
pop
adc
push
push
pop
or
rolb
pop
int
mov
xor
mov
jne
aad
jae
aad
push
jge
pop
xchg
add
int
or
and
and
sti
aam
push
sub
inc
push
ja
insb
pop
das
push
inc
test
push
pushf
sub
sub
insl
mov
mov
rolb
add
pop
in
xchg
cs
jmp
xchg
arpl
mov
or
cmp
jg
enter
jecxz
xchg
or
loopne
movsl
mov
decb
int
jle
ret
out
mov
sbb
in
loopne
lods
sbb
cmpl
mov
aaa
ret
push
xor
add
jo
or
ds
add
cmpsl
loop
inc
inc
jecxz
daa
cmp
inc
mov
mov
and
sub
test
ds
jle
js
fidivl
outsb
mov
sbb
fsts
lock
in
clc
imul
mov
movsb
add
mov
ljmp
adc
push
push
fs
lret
sbbb
adc
mov
add
xor
insl
inc
dec
inc
cltd
push
and
fisttpll
sub
cmp
punpcklwd
inc
adc
lret
adc
cmp
imul
xchg
rolb
aas
movsl
lret
mov
arpl
ret
sub
fidivl
push
dec
cmp
pop
bound
call
int3
dec
add
xchg
stos
in
xchg
cld
jns
aas
dec
mov
jns
outsb
test
loop
test
dec
movsb
cld
cltd
mov
stos
add
dec
or
mov
cmp
fistps
mov
adc
or
fmuls
cwtl
cmpsl
ss
mov
rorl
stc
idivb
fdivl
sbb
lods
rclb
adc
imul
sbb
xor
mov
test
pop
or
jno
cmp
fstl
push
xchg
lret
int
repnz
nop
daa
push
cmp
xor
das
inc
mov
loop
sub
add
movsb
fs
imul
and
push
mov
sbb
out
xchg
mov
fdivrl
repz
imul
adc
push
ficomps
xor
shll
pop
out
iret
roll
std
lea
jae
test
out
test
or
call
out
pop
into
nop
jo
stc
clc
inc
pop
and
repnz
sti
imul
in
lods
or
das
and
mov
rorl
cmp
adc
inc
sbbb
mov
lret
pop
lret
pop
inc
cltd
dec
pop
jne
in
cli
insb
in
inc
outsl
js
iret
cmc
loop
xlat
mov
mov
mov
dec
ds
xor
fildll
stc
or
and
lcall
push
xor
xchg
mov
mov
mov
ret
jmp
mov
dec
mov
jb
in
imul
loope
or
pushf
pop
nop
test
cli
inc
add
mov
pop
lahf
ficompl
mov
sbb
jb
or
inc
push
or
test
mov
push
mov
or
mov
lret
or
std
dec
sub
insl
je
cmp
sub
mov
mov
xchg
ljmp
mov
or
rcl
lret
push
push
push
rcr
mov
call
push
pop
lret
out
out
xor
stos
movsl
or
pop
mov
cmpsb
mov
aas
dec
aaa
aad
js
aad
mov
xchg
inc
pushf
or
test
mul
outsl
add
hlt
sub
out
enter
inc
and
int3
sahf
jg
push
leave
idiv
dec
fs
pop
outsl
cli
mov
test
inc
inc
leave
xchg
into
jl
xor
popf
inc
cld
icebp
xchg
xchg
xchg
fildll
sbb
cmp
mov
fsubrl
ss
mov
cltd
sub
or
int3
cmp
imul
cld
jb
leave
fdivrs
mov
sub
outsb
inc
push
dec
adc
andl
popl
sbbb
pop
mov
out
mulb
movl
movsb
xor
ljmp
in
arpl
mov
int
sahf
cmp
in
or
mov
xor
jnp
cmpsb
test
adc
fstpt
leave
mov
mov
sarb
xor
xchg
xchg
insb
jmp
or
cmp
jge
pop
and
fidivl
addb
in
popa
lcall
cs
sbb
mov
jae
xchg
mov
inc
andl
jle
stos
fimull
je
pop
jmp
scas
push
sub
sbb
xchg
mov
rorb
ds
cld
cmp
ret
push
dec
lret
mov
jns
sahf
xchg
rolb
mov
push
mov
pop
js
dec
stos
xlat
ret
and
je
xchg
mov
jae
stos
mov
loopne
jae
jbe
cld
idiv
jp
mov
jo
and
pop
pusha
sub
xchg
add
popa
jg
push
test
scas
and
mov
or
popl
int3
mov
xchg
sbb
sbb
addr16
or
pop
aad
dec
adc
lds
cmp
lock
mov
in
jbe
nop
ds
adc
aas
sub
xchg
jne
scas
mov
push
and
push
stos
xchg
pop
repz
push
xchg
hlt
incb
int
sub
int3
fcomi
sbb
popl
into
mov
push
popa
loopne
jae
rol
add
mov
mov
test
pop
shlb
jecxz
push
mov
into
add
pop
push
std
cmp
imul
push
rcll
sarb
push
out
jns
xchg
lret
pop
insl
aad
shll
popa
push
lret
mov
pcmpeqd
adc
out
xchg
ficoms
dec
cmp
push
mov
lds
aam
fcomip
xchg
lods
lret
adc
lea
dec
repz
test
pop
jg
sarb
icebp
jbe
fcomps
jmp
lahf
insl
adc
frstor
cmpsb
jae
pop
fbstp
adc
add
sub
sbbl
js
adc
add
sbb
shl
loop
sbbb
mov
push
adc
shll
iret
ficompl
pop
enter
out
jne
int3
adc
xor
fisubrl
inc
mov
mov
fnsave
std
fdivrs
fildll
rolb
pop
mov
mov
adc
dec
call
cltd
mov
leave
dec
arpl
stos
pop
jle
fstl
push
adc
sub
lahf
jns
mov
dec
or
sbb
les
leave
xchg
pop
mov
sbb
mov
pop
add
mov
sbb
int3
dec
fbstp
jl
ret
adc
cmp
fistps
es
jno
loop
add
sub
dec
push
ljmp
aam
arpl
sub
jl
in
outsl
cmpb
mov
add
imul
ss
std
insb
popf
lahf
into
jp
mov
inc
add
iret
aaa
das
neg
arpl
ds
pop
mov
mov
shll
mov
inc
rclb
stos
mov
mov
ret
add
xor
add
xchg
enter
mov
push
aaa
shlb
loop
cmp
sbb
mov
inc
jl
jp
arpl
mov
sahf
mov
test
push
stos
and
xor
inc
outsb
cmpsb
fwait
in
push
jnp,pt
mov
or
add
sub
inc
mov
out
pop
in
fldt
mov
movsl
cmp
adc
ds
jno
mov
mov
stos
adcl
mov
dec
sub
inc
xchg
imul
mov
lcall
test
in
outsl
test
ljmp
add
mov
dec
cmc
testb
sbb
out
and
sub
pop
mov
dec
stos
lea
repz
cwtl
fistpll
push
jae
int3
lds
jg
loopne
mov
test
jb,pt
cld
and
test
adc
cltd
sub
cs
jae
push
push
jmp
sub
imul
sub
push
xchg
mov
nop
fdivrs
xchg
pop
fwait
clc
jbe
add
sub
mov
add
lods
sahf
or
cmpsb
ds
inc
in
jecxz
xlat
mov
movsb
dec
mov
add
stos
or
shl
aad
push
dec
sub
fimuls
push
and
imul
mov
inc
sub
and
pop
push
dec
ss
adc
icebp
lret
pop
mov
xor
sub
xor
jno
dec
and
mov
xor
icebp
sahf
daa
addl
mov
test
pop
cmpsl
fs
push
pop
xchg
icebp
leave
mov
arpl
inc
lods
test
sti
sarb
cwtl
out
loop
in
sbb
int3
mov
jmp
jmp
mov
shl
sub
jp
mov
inc
jbe
orb
test
aas
mov
push
fucomp
add
mov
fwait
inc
addb
inc
sub
adc
out
cwtl
sbb
cmp
mov
repz
iret
jno
pop
mov
xor
push
add
incl
add
outsb
adc
adc
cwtl
mov
insb
pop
xchg
sbb
sub
fists
icebp
add
insb
data16
repz
xchg
or
gs
mov
mov
xchg
mov
cli
hlt
aaa
sbb
inc
add
push
and
mov
jb
sub
jnp
xor
adc
gs
loopne
jmp
mov
add
cmp
xchg
nop
mov
in
sahf
subl
shll
cli
and
pop
cltd
imull
fs
add
fwait
add
aad
push
addr16
or
jns
fs
repnz
jmp
in
sbb
arpl
jns
enter
rcll
inc
ss
add
imul
stos
dec
sub
shrb
int
fistps
es
arpl
jb
stc
jo
lods
push
loop
jmp
test
xchg
inc
inc
pusha
inc
mov
loop
pop
or
mov
xchg
es
test
add
in
cmp
mov
repnz
loopne
into
ficoml
xor
in
ja
push
inc
push
stc
or
pop
pop
jp
out
pusha
pop
daa
test
or
cltd
fs
xor
jne
repz
jbe
pop
jp
lcall
rcrb
pop
sbb
cld
fisubrs
xor
sbb
cmp
cmpsb
xlat
roll
lock
mov
dec
cld
sub
out
push
push
jecxz
arpl
lock
xor
adc
fsubl
rcl
dec
add
out
pop
dec
dec
xchg
jge
dec
cmpl
aam
aaa
cmp
sbb
pushf
cmpsb
push
and
fdivl
enter
les
sbb
adc
add
pop
sub
and
or
xchg
and
jns
or
mov
cmc
sbb
enter
rorb
movsl
add
int3
aaa
in
in
sbb
scas
pusha
mov
xor
add
xchg
pop
dec
sahf
inc
lea
xchg
stc
inc
andl
scas
pop
or
addr16
mov
fdivr
mov
cli
pusha
dec
pop
data16
and
dec
testl
test
js
xchg
mov
jp
jbe
test
sbb
lcall
mov
mov
outsb
jmp
mov
out
xchg
das
icebp
xchg
fstpt
push
cmp
sahf
test
pmaddwd
sbb
jl
jg
movsl
cmp
mov
mov
xchg
sub
test
sub
ja
sbb
push
and
dec
inc
sub
push
lret
ljmp
sub
int3
dec
leave
loopne
cmp
mov
bound
push
or
jge
sbb
or
pop
repz
or
mov
in
stos
push
hlt
insl
pop
mov
mov
pop
sti
xchg
aas
movl
add
ss
aaa
fwait
mov
pop
pushf
fcmovne
dec
vpaddsw
push
fs
mov
inc
inc
hlt
call
jb
xor
insl
cmp
dec
sbb
xchg
loopne
xchg
mov
or
lods
enter
aas
push
inc
and
jp
test
push
loopne
icebp
out
or
rorl
cld
pop
sbb
adc
arpl
and
fidivs
and
cs
daa
insl
jne
sbb
inc
xchg
into
cmpb
subb
test
loope
ret
jno
inc
sub
pusha
cmp
adc
inc
dec
je
pop
jmp
xorb
in
or
into
test
or
ffreep
and
loope
insb
enter
cmp
sbb
push
pop
push
mov
xchg
mov
test
mov
cmp
data16
mov
repnz
add
cmp
push
add
out
jg
xchg
loopne
inc
insl
mov
and
push
int3
xlat
dec
enter
fistps
subl
sub
testl
or
xchg
popf
fnstsw
push
jg
mov
push
aaa
imul
movb
sbbb
xchg
xchg
sti
mov
adc
jne
cmp
out
fsubrs
push
test
xchg
sub
push
dec
test
push
pop
xor
aas
fmull
push
push
mov
or
int3
lods
in
das
rorl
add
ret
dec
sbb
xorb
fst
cmpsl
sbb
icebp
lcall
stos
lahf
push
jnp
or
pop
mov
xor
cltd
inc
mov
xor
int
cmpsl
ljmp
cmp
faddl
pop
or
mov
mov
lret
adc
std
adc
xchg
rol
inc
mov
xorl
adc
nop
dec
mov
hlt
jmp
ljmp
xorl
popf
inc
xchg
out
loop
lret
and
or
mov
lods
hlt
rorl
outsl
int3
test
addr16
mov
dec
mov
cld
pop
fs
pop
loop
or
lret
sub
jle
jmp
and
rdpmc
dec
add
dec
bound
xchg
hlt
mov
dec
fstps
lret
dec
clc
mov
dec
jle
pop
xor
jne
mov
xor
xchg
dec
mov
jp
jl
xchg
loop
jmp
outsb
push
push
aaa
sbb
pushf
lea
mov
jg
inc
popf
dec
cmp
js
dec
into
push
xchg
fadd
mov
xor
lahf
in
xchg
pop
sbb
pusha
mov
test
test
sahf
lds
xchg
ljmp
int
cmp
cld
int3
push
sub
mov
movsl
std
cld
popf
sarl
jge
add
lcall
insb
push
js
fisubrs
or
mov
pop
mov
pop
dec
jae
test
mov
xor
dec
ss
in
outsb
dec
xor
movsb
sub
pop
jae
rcll
loop
test
js
push
xor
or
push
stos
or
mov
add
insb
sub
xchg
mov
out
addb
jecxz
ret
jl
mov
jge
cmp
push
repz
cltd
dec
rcpps
jae
cmp
shl
and
sub
sub
fnstcw
jle
je
cmpsl
mov
xor
dec
push
jae
pop
enter
jg
mov
lods
popf
or
cmp
mov
icebp
mov
cltd
sbb
test
inc
push
loopne
push
imul
pop
cmpb
enter
out
rolb
pop
pop
xlat
xchg
test
cmp
push
inc
xlat
insb
and
inc
add
mov
orps
dec
cltd
push
in
bound
repz
stos
aaa
mov
ljmp
movsb
xchg
icebp
pop
in
mov
inc
xor
sub
mov
mov
es
pushf
fsts
sbb
add
call
int3
scas
int3
xor
in
mov
xorb
loop
or
mov
in
xor
or
in
mov
adc
sub
gs
stc
popf
cmp
sub
mov
pop
icebp
xor
inc
push
pop
fmul
mov
fmull
pop
mov
out
pop
and
pop
jmp
dec
or
xchg
mov
cld
xor
push
imul
in
stc
dec
mov
test
xor
adc
jg
cwtl
ja
rcrb
cmpsl
cmp
add
lcall
jne
xchg
nop
xchg
mov
arpl
mov
xchg
cli
sub
sub
jp
stos
mov
sub
jae
addr16
fld
mov
stos
inc
mov
insb
sti
fsubl
mov
or
xchg
dec
sbb
shlb
dec
andb
xor
or
adc
add
sub
mov
sub
test
fidivrs
fistpl
cltd
int3
scas
xchg
xorl
ret
mov
cs
je
sbb
adc
loope
mov
push
jge
or
jbe
scas
mov
insl
sbb
mov
xlat
dec
adc
fwait
pop
and
push
into
imul
enter
in
lods
fidivl
inc
add
cwtl
pop
int3
rcrl
add
push
dec
aad
mov
test
repz
ret
jecxz
inc
movsb
mov
aam
les
loope
xchg
pop
sub
sbb
bound
adc
mov
or
ret
jae
out
ds
addb
in
rdpmc
loopne
jmp
call
push
jge
and
mov
cs
sti
dec
fdivl
lret
pushf
lock
inc
and
xchg
pushw
mov
data16
insb
fucomi
movsl
or
lea
pop
xchg
idivb
mov
push
jp
sbb
cltd
mov
fistpl
add
jg
cltd
movsb
rorb
lods
mov
cmp
addr16
push
pop
jns
fldl
mov
lret
movsb
add
fistl
icebp
jno
xchg
std
xchg
cmp
jo
push
addr16
fdivrl
mov
mov
xchg
sarl
or
cmpsb
sbb
pop
inc
jbe
adc
jae,pt
and
test
add
cmc
and
mov
jns
fmull
push
pop
push
or
mov
dec
dec
pavgb
sbb
pop
mov
aam
pushf
outsb
dec
js
add
not
mov
xlat
xchg
mov
mov
sbb
or
addr16
and
sub
sub
cmp
dec
and
mov
iret
mov
mov
dec
popa
cmpsl
inc
lahf
sbb
pop
cwtl
pop
out
pop
mov
daa
rorb
mov
pushf
arpl
xor
mov
out
mov
daa
jne
popa
loop
mov
xor
sub
mov
addl
fistpll
test
cmpb
int3
mov
out
jl
fwait
mov
pop
fsubp
es
mov
xorb
shrb
jno
or
test
ds
nop
loope
out
pusha
lock
inc
arpl
mov
fdivrp
pop
inc
sub
xor
into
sbb
xlat
sarb
pop
mov
inc
jbe
lods
gs
mov
rclb
jns
xchg
or
add
out
xor
push
pop
jg
in
lea
mov
pop
inc
jle
and
add
xor
repnz
dec
repnz
adc
jo
push
lock
in
movsl
out
mov
mov
mov
mov
sarl
test
adc
pop
xor
ja
add
mov
mov
push
faddl
push
cwtl
dec
sbb
test
in
xchg
loopne
rcrb
xor
std
jge
xchg
xchg
mov
or
push
inc
movsl
in
push
icebp
mov
mov
xor
mov
jecxz
mov
xchg
adc
xchg
push
mov
mov
popa
getsec
add
jle
mov
jp
ja
pop
adc
jno
bound
es
cmpsb
sub
sub
inc
sbb
outsl
mov
dec
xlat
add
in
repz
cld
and
test
mov
jp
push
mov
out
das
stc
aaa
inc
lret
adc
xchg
cli
mov
push
outsb
or
mov
fcmovnu
xor
mov
xlat
cs
inc
movsb
faddl
sub
addr16
xchg
test
enter
in
push
movb
jo
jns
jb
and
or
js
sbb
jae
mov
mov
and
mov
ret
adc
xchg
mov
sbb
sarb
leave
je
push
out
lea
imul
stos
loop
sbb
bound
or
push
pushf
nop
xor
mov
mov
loope
sub
sbb
mov
cli
jle
mov
js
push
adc
lahf
and
mov
jl
push
inc
or
clc
popf
testl
inc
movsl
out
es
push
push
pop
in
daa
imul
lret
lahf
jp
xor
mov
gs
sbb
leave
jo
loop
pop
push
sbb
test
lods
cmpsl
bound
popa
push
jmp
sub
int
repz
pushf
fnstcw
stos
add
stc
lret
mov
or
or
cmc
negl
stos
mov
insb
and
pop
cmp
cmc
sbb
inc
xor
inc
call
shll
dec
push
scas
cmp
inc
pop
in
and
in
add
sub
sub
xchg
inc
fdivl
test
inc
jle
rclb
adc
xchg
arpl
sbb
sbb
sahf
mov
pushf
lret
pusha
sub
ljmp
dec
xchg
push
mov
cmp
xchg
movsl
dec
dec
and
pop
or
aas
or
lock
call
ror
inc
sub
xchg
pop
xchg
fsub
clc
mov
and
mov
dec
mov
cmp
push
sahf
mov
jmp
inc
repnz
fldcw
dec
mov
test
cltd
fmull
add
mov
pop
add
je
push
test
movsb
test
push
dec
daa
pop
iret
add
push
fisttps
notb
jo
jle
rclb
and
popa
mov
in
sbb
ja
jge
movl
lcall
ljmp
xor
mov
sub
pop
pusha
add
sbb
in
sbb
stos
fsubrl
jp
add
sub
push
pop
out
or
add
pop
mov
xchg
iret
mov
cmpsl
loop
sbb
cwtl
rcl
das
mov
rcrb
pushf
das
scas
pop
xlat
jnp
das
test
push
sub
out
out
ljmp
mov
xorl
popf
ds
pop
out
in
sbb
xlat
push
jmp
xchg
cs
sub
inc
jl
jb
inc
sahf
int3
adc
fmuls
mov
call
and
dec
cmp
lock
dec
jns
rcr
in
rorb
out
xor
dec
jbe
sub
flds
enter
decb
fnstenv
cmp
mov
sarb
xchg
popa
cmp
cmp
movsb
add
mov
aaa
pusha
xchg
mov
into
mov
cmc
outsl
adc
dec
nop
pop
sti
addr16
pop
push
xchg
add
cmpsl
pop
xchg
lcall
mov
call
and
lock
sub
pop
stos
pop
fistpl
jg
mov
adc
xor
cmpsl
cmp
jecxz
push
fisttps
fst
xchg
insl
repnz
repnz
jo
fldt
jg
popf
fs
ret
or
popf
imul
mov
mov
push
cli
push
es
pop
inc
xor
xor
add
cmpsl
cmpsb
in
cmp
cmp
xchg
jns
push
mov
icebp
ret
shl
mov
jno
imul
ret
mov
fwait
cmc
pushf
mov
out
sarb
pop
lods
xchg
jnp
test
dec
in
lods
dec
cli
push
cmp
pop
js
repz
dec
sbb
js
outsl
pop
xlat
test
cs
in
mov
mov
jecxz
push
sbb
jo
fldt
mov
nop
pop
out
repnz
push
lock
or
cmp
pop
stos
add
mov
push
mov
xor
mov
notb
pop
idivl
xchg
and
mov
jno
in
out
stc
out
inc
cmc
fwait
negb
fidivl
adc
sbb
incb
rolb
and
xchg
iret
lods
sti
addr16
or
jg
mov
fs
imul
subb
aas
in
popa
shl
outsb
mov
push
or
int3
pop
imul
push
xchg
dec
pop
jg
scas
addr16
inc
adc
leave
jae
cmp
sub
adc
imul
xorb
rcr
fsubp
xchg
loopne
mov
inc
mov
sti
fsubrl
push
dec
aaa
loopne
push
add
enter
inc
out
cmp
lret
pusha
adc
push
mov
and
sub
aad
cs
sub
jno
in
jg
inc
inc
mov
ja
sbb
dec
xchg
les
dec
lahf
add
pop
test
lds
mov
stos
push
lock
add
sbb
mov
or
pop
and
add
fsubs
add
loop
negb
rcrl
xor
lock
pop
stos
sub
xchg
dec
inc
rolb
ret
movsb
ss
mov
add
cmp
jmp
mull
in
les
mov
mov
call
sbb
mov
or
jecxz
fcoml
mov
xor
in
jnp
stos
movsb
pusha
aas
dec
push
mov
mov
adc
fwait
xor
mov
scas
inc
imul
sti
js
push
xor
sbb
or
xchg
out
push
int
mov
scas
rorb
int3
mov
xchg
cli
out
jge
in
push
push
xchg
call
add
iret
movsl
mov
out
dec
or
mov
xor
sti
out
and
jg
fcomps
loopne
dec
inc
jo
jmp
adc
sbb
into
mov
out
subb
push
and
stos
push
xlat
in
inc
add
ds
gs
scas
int
stos
and
jg
dec
mov
out
mov
hlt
sub
add
test
shl
push
lods
fildl
shrb
js
inc
out
call
fistps
das
mov
movsb
cmp
and
mov
ss
push
lock
cmp
les
push
mov
movb
cmp
and
daa
push
or
pop
es
pop
jno
loopne
inc
push
iret
sub
inc
inc
mov
mov
mov
cld
in
jo
shll
pop
js
dec
nop
mov
mov
aas
cmp
loope
enter
std
clc
adc
lahf
mov
ret
popa
add
std
pop
push
sahf
out
xchg
loopne
inc
stos
movsl
popa
add
sub
sub
cli
push
dec
push
jmp
mov
in
push
scas
filds
sbbl
shlb
jae
push
mov
lcall
mov
jg
sub
pop
mov
inc
or
sub
or
les
test
pop
stos
inc
inc
call
aam
mov
testl
inc
out
in
into
arpl
icebp
out
xchg
inc
pusha
cmpsb
cmp
cmpsl
mov
dec
aad
leave
pusha
or
loop
sbb
mov
out
xchg
es
popf
aam
int
mov
data16
pushl
leave
sbb
jo
cmpsl
cmp
cltd
xor
push
cld
xchg
xchg
nop
daa
sti
cmpsl
pop
scas
rcrl
inc
inc
repnz
imul
cmpsl
mov
cwtl
scas
or
in
jle
ret
mov
out
jns
or
data16
jl
out
test
sahf
lds
loopne
repz
rclb
pop
icebp
aam
jb
jmp
or
xor
lods
inc
test
mov
int
in
add
fidivl
es
insl
inc
repz
mov
cmp
js
add
ficoms
push
clc
xor
dec
ret
xchg
int
and
rolb
xor
into
push
xchg
and
pusha
mov
rcrb
inc
outsl
mov
mov
inc
shrl
dec
sbbl
push
fstpl
pop
lods
mov
xchg
stos
add
mov
das
lahf
inc
dec
jne
dec
push
cmp
je
js
ljmp
icebp
xor
inc
jl
filds
and
mov
jae
stos
into
gs
add
or
out
rcrl
test
call
inc
daa
pop
negb
push
testb
adc
add
or
mov
jle
jmp
les
push
in
movsb
lcall
aad
cld
xchg
xchg
fildl
mov
fsubl
mov
inc
leave
test
dec
ret
cmp
or
sbbl
mov
mov
fists
fdivrl
movsl
cmp
std
jne
das
pop
pop
repnz
out
adc
inc
movsl
lock
data16
xor
cmp
xchg
pop
imul
dec
fistpll
pop
jb
inc
fstps
xchg
mov
or
adcb
sub
stos
iret
notw
ss
lcall
mov
movsl
cmp
and
pop
jle
aad
insb
lahf
ret
pop
sub
xchg
sbb
xor
cmp
mov
out
xchg
loopne
hlt
mov
add
ret
adc
in
hlt
mov
xchg
push
shrl
ret
push
loope
movl
movsb
sbb
aad
mov
jge
lret
dec
lods
adcb
daa
test
int3
inc
fistpll
test
jne
inc
pusha
repnz
loope
call
push
jno
mov
sbb
xchg
mov
fimull
mov
or
cmpsb
dec
out
fiadds
rclb
ret
add
pop
sarl
outsb
sub
xchg
mov
test
inc
std
jns
outsb
lcall
pop
push
mov
sub
arpl
push
sti
bound
cmp
xchg
loopne
imul
mov
xchg
xchg
fstpt
jge
mov
xchg
in
je
movsl
xor
xchg
insl
jecxz
add
add
xor
xchg
mov
xor
mov
shl
mov
pop
pop
dec
movsb
sbb
popf
or
pop
les
cmp
jl
and
mov
out
out
enter
mov
scas
adc
ret
jae
in
xchg
outsl
push
vsubpd
out
movsb
sbb
add
push
call
mov
aam
push
push
or
adc
nop
jns
mov
loop
cmpsl
ds
add
xor
imul
mov
inc
mov
iret
sub
add
cmp
fists
pop
icebp
xorb
movsb
ja
movb
rcl
push
or
mov
loopne
mov
or
jbe
sahf
xchg
push
enter
das
movsl
jg
xlat
push
cltd
xor
fwait
xor
fs
dec
cmc
ja
xor
pop
scas
add
loop
lcall
xchg
das
mov
sbb
mov
adc
mov
dec
das
pop
popa
imul
adc
test
imul
jl
dec
scas
mov
dec
and
dec
jecxz
inc
jge
aaa
pushf
lock
pop
ss
stos
fsubrl
pop
mov
mov
jne
add
dec
jecxz
and
rcll
cwtl
das
es
jg
cmp
or
xchg
fdivl
pop
push
in
dec
stos
lds
imul
mov
std
xchg
adcb
dec
inc
movsb
sbb
xchg
cmc
xor
sub
push
jmp
cmp
sub
xor
mov
orl
idivl
test
fistpl
scas
call
adc
dec
or
xor
int3
insl
mov
in
ret
fldt
inc
imul
sbb
lea
xchg
xor
add
cmpsl
mov
jne
mov
rcrb
push
cmpsb
push
test
pop
pop
push
orl
mov
movsb
scas
jo
or
stc
in
pop
in
push
rorb
xchg
ficoml
fs
lods
cmc
sub
push
add
xchg
je
rclb
ds
ds
sbb
jb
xorl
xor
testl
dec
ret
and
ret
jg
adc
lcall
aam
imul
pushf
add
dec
mov
xor
ficompl
ljmp
loop
loopne
jl
pop
jb
aaa
inc
and
xorl
jecxz
jp
andl
add
ljmp
sbb
sub
data16
cld
int3
push
cmpsb
inc
inc
cmpsb
movsb
jbe
notl
mov
fisubl
jge
xchg
les
mov
adc
aaa
testb
mov
xchg
call
xchg
lds
cmp
mov
scas
pop
lahf
xchg
jnp
mov
in
dec
in
add
ljmp
sbb
clc
lahf
fadds
repnz
stc
jecxz
cmp
addr16
xor
dec
xor
jae
fidivl
imul
loopne
leave
insb
push
enter
and
lret
push
test
out
insb
test
and
mov
call
outsl
test
add
or
sub
sbb
pop
xchg
adc
cmp
cmpsl
push
jb
lret
inc
pop
lods
mov
jge
pop
cwtl
inc
xlat
scas
adc
sbb
or
sti
sub
mov
jle
push
dec
lock
mov
addl
pop
or
test
jae
inc
lcall
push
sub
sbb
mov
paddq
dec
cmp
cmp
or
aas
and
pop
sub
leave
mov
mov
fsubl
fcoms
adc
movsb
mov
stc
cltd
js
out
jae
insb
les
insb
dec
es
xchg
xchg
mov
dec
sub
das
sbb
jne
or
movsl
nop
sarl
fdivrl
or
mov
xlat
jbe
add
push
imul
push
cwtl
jno
adc
arpl
add
enter
jle
movsb
mov
scas
filds
mov
xor
dec
or
mull
push
notl
lcall
je
mov
pop
add
push
idivl
push
push
inc
fs
or
add
lret
pop
mov
sbb
sub
icebp
pop
hlt
jae
xor
dec
popf
clc
movsb
mov
sbb
push
mov
adc
fwait
cmp
lods
sub
pusha
adc
push
inc
xchg
and
and
sahf
dec
or
push
nop
adc
es
lock
sub
jmp
repz
cmp
mov
push
inc
jl
or
mov
faddp
pop
in
dec
out
push
cli
xchg
inc
ja
lret
clc
loopne
adc
lahf
sbb
mov
clc
cmp
mov
insl
subl
mov
adc
insl
leave
repz
pop
jns
out
inc
roll
bound
push
jns
jns
fs
stc
insb
cmp
jb
jg
push
sti
xchg
or
out
add
pop
jecxz
das
lods
fsqrt
cmp
inc
xor
jae
pop
inc
daa
sahf
pop
cld
cld
roll
mov
stc
nop
cwtl
in
std
inc
push
stos
add
enter
mov
adc
jle
sahf
movsb
mov
dec
mov
sub
dec
int3
popa
and
or
je
mov
aad
xorb
push
out
push
add
rcr
ret
sbbb
adc
jmp
sbb
and
notb
out
cmp
movsl
pop
cli
shlb
jmp
push
adc
gs
fucomp
jns
test
pop
aam
cmpsb
negb
int
sub
ljmp
dec
push
sti
insb
add
jle
and
mov
das
shl
mov
push
mov
sbb
xchg
and
xlat
addr16
pop
std
pop
push
and
cltd
mov
cltd
jp
adc
push
out
xchg
out
add
mov
add
das
mov
cli
int
mov
inc
sub
scas
ss
cmp
mov
inc
mov
mov
fwait
mov
add
ret
rcrl
into
and
nop
ja
std
data16
dec
adc
mov
xor
repnz
inc
pop
mov
std
lods
iret
roll
push
sahf
icebp
cmp
rorl
add
add
mov
sti
mov
sub
ret
cmp
pop
test
movsb
and
pop
push
popf
dec
pop
dec
dec
mov
pop
mov
pop
sbbb
scas
dec
jl
loope
icebp
pop
jb
lcall
cmp
jle
sub
or
fwait
sbb
rorb
and
sti
adc
out
mov
movsb
sbb
out
in
dec
pop
incb
movsl
sub
mov
add
lret
rcrb
je
xor
mov
or
add
sub
add
es
cs
insl
mov
cltd
pop
fidivs
dec
add
idivl
push
jge
and
jne
sbb
mov
push
mov
mov
stos
insb
sahf
icebp
rolb
mov
push
xchg
pop
sahf
push
mov
dec
sarl
cmp
fiadds
and
push
dec
cmp
insb
inc
sbb
jno
add
je
or
loope
push
xor
test
inc
insb
aas
inc
adc
cmp
cmpsb
pop
pusha
bound
clc
sbb
mov
xchg
push
xor
popf
out
nop
add
arpl
popa
xchg
popf
mov
adc
loop
repz
std
push
shl
dec
hlt
mov
loope
scas
pop
sbb
jmp
dec
inc
mov
fst
jbe
pop
into
cmp
movb
cmp
pop
mov
jge
or
mulb
sub
jge
ja
sub
inc
ret
sarl
ret
frstor
add
dec
das
add
mov
jae
data16
jl
inc
test
mov
mov
sub
dec
loopne
movsb
mov
mov
mov
std
mov
ret
daa
popf
adc
int3
xorb
daa
sti
sti
cmpsb
popf
jno
loopne
movsb
fstpt
fs
rcll
push
std
inc
xor
jo
mov
or
jge
jae
push
xor
sbb
aas
inc
jae
loop
cmp
pop
fdivs
inc
jnp
loop
push
jbe
data16
add
fimuls
sahf
jb
jecxz
dec
scas
lods
daa
outsb
loop
add
adc
mov
jae
bound
pop
and
sbbl
cmp
jb
xor
ljmp
dec
pusha
pop
push
mov
jb
inc
into
fbstp
pop
pop
pusha
cmp
lret
das
imul
je
mov
cld
xchg
xor
cmp
inc
push
sbb
xchg
cmpsb
cmp
xlat
mov
movntq
out
push
in
sub
xchg
cmp
push
out
mov
mov
clc
cmp
push
lods
mov
fsubrs
lods
xor
ficoms
lea
test
stos
fsts
push
test
xor
sub
push
out
stc
stos
inc
sub
leave
pusha
jle
mov
aas
mov
test
fisubl
inc
popa
clc
ja
out
cmp
add
mov
popf
xor
in
add
mov
mov
in
cmp
mov
and
cli
xchg
xor
sub
mov
into
dec
loop
cmpsl
cmp
fsubs
push
push
stc
push
aas
cmp
xchg
arpl
inc
iret
dec
mov
push
in
lcall
or
arpl
add
mov
movsl
std
adcl
push
sbb
cmpsl
cmp
fcomps
imul
sub
test
dec
push
jg
pushf
xor
fnsave
mov
xchg
and
sti
hlt
mov
dec
adc
sbb
cli
or
sbbl
daa
sbbb
jp
mov
and
fdivl
lock
and
xchg
lods
inc
pop
jne
sbb
enter
shrb
sbb
repnz
loopne
sub
sbb
mov
push
lahf
clc
push
fcoml
cmpsl
iret
je
and
popa
push
out
xchg
ss
push
fdivs
push
fdivs
es
mov
lds
fidivrl
clc
jge
sbb
dec
hlt
mov
fwait
and
insl
test
sahf
mov
and
xlat
outsb
and
inc
mov
jbe
enter
adc
cs
cmpl
mov
shl
xlat
and
inc
pop
cmc
js
test
adc
mov
pop
mov
fsub
jl
inc
mov
lcall
and
sbb
aas
add
es
hlt
push
mov
mov
fimuls
bswap
cltd
xor
xor
std
mov
out
add
pop
xor
insl
fidivs
testl
mov
int
int
add
nop
xor
dec
out
lods
push
mov
dec
jecxz
les
mov
mov
cmp
xor
push
lahf
mov
mov
scas
fbstp
addl
xchg
das
imul
mov
sti
xchg
xor
inc
scas
das
loopne
pop
div
jge
sbb
cmpsl
ds
adc
mov
xor
mov
ss
into
gs
jg
sub
sub
pop
sahf
push
add
xor
push
adc
fisttps
movsb
cmp
sub
pop
pop
in
ja
filds
xor
fistl
mov
test
fdivl
sub
lea
pop
aaa
jnp
scas
imul
into
or
out
cmp
ljmp
add
fidivl
scas
push
ljmp
dec
out
orl
rorb
xor
popa
testb
add
cmpsb
xor
dec
fisttps
adcb
orl
dec
xor
in
test
mov
push
out
fcoml
inc
sbbl
cmc
cs
out
clc
gs
ljmp
out
fdivl
dec
loopne
jns
add
aaa
mov
cld
jae
repz
jae
jmp
mov
into
out
pusha
notl
adc
xor
hlt
cmp
add
scas
mov
jo
sarl
in
test
cmp
mov
fprem
push
jmp
fdivrl
js
loope
dec
in
adc
imul
into
dec
mov
scas
out
ja
outsl
jns
std
stos
lahf
mov
stos
push
cmc
pop
scas
and
mov
dec
out
jno
cmpsb
mov
and
nop
in
pop
sahf
sbb
ret
hlt
push
iret
data16
jg
lcall
dec
js
xchg
popa
in
mov
gs
push
lret
cmp
sti
cwtl
aaa
into
or
push
lcall
pop
js
jbe
scas
in
jle
scas
pop
and
lret
jmp
xchg
cs
fbstp
xlat
call
push
or
outsb
pop
andb
push
testb
call
jecxz
jg
xor
mov
pop
pop
int
mov
int3
jmp
inc
insl
add
fs
xchg
mov
jno
dec
jae
jg
mov
fwait
in
dec
pop
xchg
decl
out
test
ret
gs
mov
sbbl
mov
mov
adc
lret
std
jge
bound
inc
orl
jge
test
mov
xchg
cs
lret
fwait
xor
sub
es
jge
dec
mov
cmp
xchg
mov
jnp
push
stos
inc
test
cmp
call
or
lret
cltd
xor
push
ja
mov
loopne
stos
push
mov
cmp
pop
out
xchg
push
inc
fiaddl
pop
decb
imul
dec
loop
jmp
pop
testb
push
jmp
int
pop
repnz
addr16
pusha
dec
in
les
jg
pop
push
in
loop
push
mov
dec
lret
cld
mov
pop
jmp
ljmp
push
out
jg
ret
pop
out
pop
repnz
int3
or
sub
push
out
xchg
pop
mov
push
dec
es
push
in
ljmp
and
pop
gs
out
lcall
jnp
mov
inc
call
push
jmp
fldenv
xchg
mov
and
xchg
repz
sub
into
insl
test
jmp
arpl
lock
scas
inc
or
add
stc
add
mov
push
cmp
mov
cmc
add
mov
loope
adc
and
mov
pop
jno
push
les
cld
imul
stc
nop
outsb
push
cmpsb
cmp
push
cmc
adc
js
mov
jno
or
lods
movsb
dec
and
imul
gs
and
icebp
mov
cmpsb
cmp
insb
or
lods
and
jnp
mov
push
lods
popf
sahf
jmp
adc
mov
push
movsl
cmp
lock
mov
out
imulb
lods
cmpsb
in
daa
mov
insb
sbb
adc
mov
lock
lods
popf
ja
mov
inc
sbb
xor
jmp
sbb
imull
daa
pop
push
call
pop
inc
and
adc
adc
push
push
test
inc
ret
sbb
imull
mov
imul
sub
adc
in
in
mov
lock
test
loope
outsl
shlb
mov
adc
orl
lea
mov
pop
sub
test
sub
push
lahf
pusha
sbb
rorb
test
adc
xchg
mov
test
mov
sbb
mov
aam
xchg
ljmp
jmp
or
add
xchg
jmp
adc
jl
call
scas
adc
dec
loopne
into
sbb
add
adc
cmpsb
int
mov
push
arpl
lahf
xchg
push
test
push
sub
addb
pop
nop
clc
pop
jmp
mov
jle
and
adc
stc
nop
out
leave
xor
stc
std
fnsave
jns
cltd
in
cmp
fldl
dec
js
mov
nop
pop
sarl
int3
xor
std
pop
dec
in
bound
xchg
jbe
dec
imul
lahf
pop
call
fnstenv
enter
push
inc
faddl
jns
cwtl
test
dec
ja
imul
sbb
ret
cmc
push
pop
pop
push
iret
pushf
mov
jl
jne
stc
nop
inc
ljmp
cmc
ret
hlt
clc
cmp
ljmp
and
inc
or
js
sbbb
in
mov
lret
mov
mov
sbb
movsb
dec
sbb
jns
push
jmp
pop
push
mov
mov
sti
arpl
lahf
xchg
cli
cld
xchg
in
push
sub
xor
xchg
jecxz
adcb
loop
mov
dec
mov
jle
hlt
mov
lret
out
xchg
jmp
pop
cwtl
xor
andl
sbbl
call
orb
arpl
mov
mov
insl
loopne
sahf
inc
call
imul
test
fsubrs
lods
fbstp
enter
pop
and
fwait
xchg
fdivl
dec
in
jp
and
aaa
out
pop
sbb
neg
or
popf
psubusw
inc
mov
jne
or
sbb
ret
xor
repz
or
xchg
jo
adc
inc
mov
jae
or
and
je
shlb
bnd
stos
outsw
jns
mov
cmp
adc
daa
dec
fnstenv
mov
adc
movsb
lods
fidivs
cmp
test
and
fnsave
push
xchg
cmpsl
or
sbb
outsb
sbb
iret
dec
imul
popf
insb
push
in
popf
fcmovbe
imul
call
inc
orb
mov
mov
xchg
mov
shl
mov
dec
loope
or
test
push
ja
test
mov
mov
mov
sub
inc
fdivrl
dec
shrb
pop
fs
mov
test
icebp
push
cmpsb
and
movsb
cmp
inc
sub
je
les
dec
loop
mov
addr16
pop
bnd
imul
jp
mov
int3
jecxz
pop
sbb
pop
hlt
pop
aas
fbstp
cmp
or
xchg
rorb
mov
aad
shrl
push
out
mov
fdivl
push
fsts
test
xor
pop
xorl
scas
iret
data16
imul
sub
test
and
or
test
sub
add
lds
inc
ficoms
jecxz
lock
insb
add
add
push
loop
mov
inc
pop
inc
flds
fs
mov
scas
test
sbb
dec
push
mov
std
inc
je
pop
addr16
dec
out
data16
adc
sti
inc
pushf
add
dec
dec
sbb
inc
inc
inc
fnstenv
and
push
xor
push
pusha
idivl
mov
sbb
movsl
push
jmp
pop
cltd
xor
pop
out
mov
and
imul
lods
inc
arpl
cwtl
push
pop
pop
mov
xchg
adc
inc
inc
inc
fnstenv
sbb
mov
ss
jmp
sbb
test
xor
sbb
xor
pop
aaa
sbb
arpl
lods
add
dec
pop
or
inc
nop
inc
flds
sbb
dec
jecxz
adc
mov
xchg
sbb
mov
sbb
or
pushf
push
sub
fwait
iret
adc
inc
flds
ret
sbbb
adc
inc
mov
pop
sub
sub
push
sub
lcall
inc
fnstsw
iret
sbbb
mov
mov
and
into
push
call
jl
inc
sbb
mov
mov
push
iret
ja
rclb
xchg
inc
add
lret
out
xchg
js
inc
jle
leave
jo
mov
add
inc
add
sub
dec
jne
xchg
gs
sbbl
push
test
dec
cltd
jge
or
lea
dec
scas
inc
cmp
clc
es
rolb
adc
mov
sahf
xor
mov
mov
pushf
xor
int
mov
mov
lcall
push
xchg
sub
loopne
cld
adc
shrl
sbb
xor
in
fnsave
mov
imul
adc
cmp
daa
sub
mov
dec
pop
in
orl
inc
inc
jl
fisubrs
push
popf
push
mov
das
movb
sbb
cmpsl
in
sbb
ret
pop
popf
sbb
cltd
dec
lods
cltd
xor
adc
ret
add
dec
aam
sti
sbb
into
ljmp
mov
inc
shlb
sbb
adc
lret
bound
mov
mov
leave
mov
lret
out
xchg
iret
pop
repnz
iret
sub
dec
iret
jb
rclb
inc
repnz
in
je
dec
adc
mov
cmp
and
mov
jmp
rolb
pusha
divl
jo
push
xorb
or
sbb
mov
std
mov
mov
and
push
nop
mov
pop
inc
xor
xchg
shrl
cmove
inc
stc
nop
daa
ljmp
arpl
adc
pop
inc
sbb
orb
cltd
sbb
into
dec
pusha
sbbl
adc
add
dec
arpl
dec
cmp
cmc
adc
jg
sbb
dec
push
add
js
mov
push
pop
pop
icebp
mov
jmp
sarl
xchg
je
add
xor
mov
or
and
mov
add
sbb
repnz
repz
xchg
in
jno
mul
push
mov
xor
push
lret
data16
mov
mov
jno
push
das
gs
lahf
push
repz
or
push
adc
orl
mov
pop
sahf
mov
jno
push
mov
add
psllq
fwait
or
addr16
adc
mov
test
addr16
jo
jmp
test
add
frstor
movsb
cmp
mov
pop
in
jp
subb
aas
fs
scas
and
jae
sub
mov
dec
in
inc
fmulp
jp
xchg
lods
or
jne
xor
fs
sbb
sbbl
push
scas
pop
mov
ds
jbe
and
ss
imul
ja
ljmp
lahf
fnstenv
xor
xor
inc
fcmovu
cld
mov
data16
xchg
in
jge
xchg
inc
lods
mov
sahf
daa
xor
xchg
fs
xchg
sub
xor
sub
ja
jmp
ja
push
test
ss
xchg
push
mov
cmc
inc
ljmp
push
out
in
mov
jno
repnz
aas
dec
out
mov
cli
pop
xor
int
les
cmc
fnstenv
push
loop
sbb
pop
push
jp
aad
lret
sub
and
xchg
xchg
dec
clc
vpunpcklqdq
enter
dec
das
jge
lret
loop
sbb
dec
in
leave
cmpsl
ds
hlt
leave
pusha
out
mov
lcall
ss
xlat
outsb
and
dec
loop
xchg
cs
push
shlb
gs
xor
dec
es
lret
bound
in
cmp
cmp
xchg
std
arpl
bound
bnd
call
repz
pop
icebp
jecxz
ja
clc
loop
pusha
aad
mov
repz
jle
int
mov
mov
addr16
sti
das
into
mov
mov
sti
sub
jbe
ds
pusha
mov
shrl
cmpsb
popa
clc
sbb
xlat
outsb
stc
dec
lret
data16
xchg
fs
add
push
int
inc
in
jp
cltd
popa
clc
or
pop
lcall
gs
fs
xchg
sahf
sub
adc
fidivrl
mov
aaa
loop
adc
imul
add
pop
testb
lods
inc
push
aam
ljmp
push
in
push
push
jmp
icebp
add
push
jmp
out
pop
icebp
lcall
mov
mov
xchg
fnstenv
lret
adc
loopne
loope
cmp
and
add
or
sbb
div
mov
into
stos
push
add
iret
mov
repnz
sarb
roll
add
or
jns
adc
sarb
in
loopne
mov
mov
cmp
add
mov
adc
addr16
call
or
xor
cmovnp
mov
pop
cmp
test
in
and
out
xchg
and
lds
shll
decb
or
jnp
dec
loop
jnp
cmc
imul
testb
mov
pop
rcll
hlt
lahf
das
punpckhdq
out
stos
dec
scas
inc
inc
cmp
pop
test
adc
out
dec
jecxz
in
mov
inc
sbb
jp
pop
dec
loope
lret
mov
mov
inc
fsubp
sbb
pushf
into
fbstp
inc
mov
mov
adc
fsubrs
rolb
mov
adc
push
iret
clc
popl
mov
mov
adc
imul
pop
js
mov
xchg
pushf
iret
cmovge
push
jg
sbb
adc
enter
cmp
sti
jecxz
leave
shrl
pop
lcall
pop
jns
xor
in
and
sbb
lds
inc
mov
ret
addr16
xchg
push
ret
pop
orl
mov
adc
arpl
push
ljmp
push
out
setnp
pop
or
pop
repnz
fimull
or
push
aad
int3
push
jns
jge
daa
push
ljmp
jno
stos
sbb
mov
int3
xchg
sub
imul
push
mov
aam
movsb
adc
mull
xor
mov
dec
call
or
outsb
cmp
imul
lock
ret
and
ds
mov
cmp
cmp
in
xchg
xor
out
and
cmp
aam
lcall
sub
or
rorl
push
add
stos
fwait
stos
jo
std
std
and
out
ja
dec
in
jp
xchg
sbb
ds
outsl
out
and
ret
jno
pop
out
adc
pop
hlt
les
jnp
pop
mov
push
mov
push
mov
addr16
insb
adc
repz
mov
mov
sub
pop
fsubrs
or
fildll
data16
jl
add
iret
mov
add
cmp
mov
clc
jne
sarl
data16
lret
ja
push
movsl
icebp
flds
adc
jmp
aaa
test
cli
in
cmpsb
dec
es
or
loopne
pop
adc
cmp
pop
ret
enter
pop
outsl
cli
xchg
sbb
cltd
outsb
sub
mov
test
ja
fldcw
les
insl
fiaddl
xchg
push
mov
dec
jle
icebp
movsl
addr16
mov
sub
ret
ror
jecxz
loopne
jmp
icebp
sbb
addr16
addr16
test
nop
xchg
sub
or
das
rcrl
shrb
sbb
mov
lock
push
movsl
movaps
mov
xor
popa
jnp
shrb
push
out
aam
incl
xchg
movsl
jns
cmp
int3
ret
sbb
push
push
insb
out
xchg
mov
sbb
ret
inc
pop
cmp
dec
arpl
xchg
imul
out
js
in
pop
xchg
cmp
cmpsb
lea
dec
xchg
lods
pop
fidivs
out
xor
in
cmpl
add
mov
and
shll
cli
inc
xlat
sub
push
in
jbe
pop
repz
pmullw
and
sub
stos
inc
jo
mov
jp
pop
lds
jp
icebp
jmp
and
add
jne
pop
mov
xchg
daa
mov
push
jmp
pop
repnz
cmp
insb
cmpb
lea
cs
loope
adc
mov
pop
xor
push
data16
push
xchg
jb
iret
icebp
mov
nop
or
cs
scas
pop
jne
les
dec
loop
rclb
add
push
dec
and
or
mov
lahf
ja
es
lret
cld
adc
pop
test
fdivl
loopne
xchg
shrb
jne
repz
mov
mov
or
subl
movsl
cltd
xor
cmp
cmp
jmp
test
stc
pushf
fidivl
sbb
xchg
std
dec
fildll
add
test
jl
and
sahf
fbstp
jecxz
cmpsb
rdmsr
push
in
cltd
das
xchg
sbb
push
out
pop
add
sbb
mov
stc
push
or
push
cmpb
cmp
sub
icebp
int
in
test
iret
gs
lds
push
data16
lods
outsb
outsb
add
int
in
inc
fldt
int3
mov
push
into
and
mov
jns
repz
dec
call
in
test
push
scas
jle
cs
jge
add
clc
inc
enter
jae
pushf
addl
sbb
rcll
pushf
xor
mov
iret
rclb
loop
inc
sub
dec
xor
jae
push
ljmp
mov
shll
rcrb
sahf
ss
stc
sub
lret
jmp
les
int3
rcrb
sbbb
icebp
push
in
and
pop
xchg
add
jg
mov
or
aad
rclb
mov
pushf
xor
add
push
sbb
out
push
loop
push
mov
and
pop
dec
fbstp
pusha
clc
mov
loopne
and
pop
and
popf
xor
ret
icebp
sbb
xor
mov
ret
adc
push
cmp
xor
mov
jnp
adc
pop
add
fwait
xor
fistpll
sti
push
rcll
fs
rorl
dec
lret
hlt
testl
call
or
xchg
bound
data16
push
mov
sbb
mov
int3
outsl
cmp
sbb
and
mov
dec
adc
push
stc
or
loope
arpl
xchg
mov
subb
shl
push
ja
insb
add
dec
adc
mov
or
cmpsl
sub
jno
push
test
insl
hlt
xor
int
and
testb
pop
adc
lods
lock
mov
mov
int3
xchg
sbb
jmp
std
fs
adc
enter
push
add
cld
arpl
aas
cmpsb
xchg
arpl
pop
jecxz
je
jns
sbb
jno
movsb
call
or
mov
or
xor
sub
dec
stos
xor
aam
dec
xor
cmc
pop
sbb
shll
fldenv
or
dec
icebp
sub
and
repnz
add
ficoml
jb
das
add
dec
fdivrs
jl
push
sbb
inc
and
sub
mov
jp
scas
xlat
sbb
or
aam
or
xchg
cs
repnz
test
fsubs
dec
ja
dec
in
xchg
adc
or
mov
or
fmulp
testb
xor
mov
jb
jb
jnp
xchg
ficompl
xchg
fs
mov
cli
adcb
and
mov
addr16
addb
fbstp
or
data16
lock
loope
or
dec
jns
enter
xor
or
mov
test
int
leave
mov
adc
shlb
gs
negb
jmp
adc
jae
lret
test
sbb
inc
int
dec
lcall
push
sbb
pop
push
sahf
pop
lcall
lds
jae
rcrb
js
leave
jle
pushf
push
lock
rcr
jno
dec
adc
push
cltd
aam
imul
repz
shr
xor
movsb
bound
ljmp
pop
mov
cmpsb
add
cwtl
xor
iret
bound
jne
lods
mov
pop
repnz
sahf
xor
sub
scas
push
sbbl
jbe
xor
mov
push
mov
icebp
cmp
mov
pop
xlat
in
adcb
pusha
xor
das
ret
add
jbe
jno
aam
or
fwait
inc
cmp
cwtl
xor
push
mov
dec
sbb
mov
mov
stos
pop
lock
lods
aas
cmp
pop
outsl
add
xor
outsb
gs
std
orl
inc
sbb
cmp
mov
mov
imulb
int3
out
adcb
xor
pop
hlt
mov
fsts
jg
sbb
xor
mov
pop
xchg
sub
loop
scas
xchg
dec
in
lret
add
nop
sub
es
insl
dec
dec
filds
movsb
mov
mov
faddl
cs
mov
pushf
lret
lretw
mov
sbb
or
shrb
das
cmp
cmp
mov
pop
mov
test
aam
sub
cmp
sub
mov
dec
cmc
clc
xor
dec
fmull
jo
mov
sub
sahf
call
icebp
mov
xchg
dec
pop
cwtl
lods
inc
and
mov
fisubl
mov
loope
xchg
sub
std
movsb
and
add
xchg
sub
push
je
fimuls
lcall
in
icebp
enter
pop
inc
xlat
mov
push
lods
push
xlat
cmpsb
cmp
ja
xchg
test
aam
xlat
test
dec
icebp
sub
mov
leave
xchg
sub
inc
es
dec
xor
leave
imul
jnp
pop
out
popf
sub
aam
in
test
add
test
add
jnp
jb
xchg
testb
xchg
faddl
push
pushf
ja
es
pop
nop
xlat
imul
lcall
std
xchg
adc
fidivs
jmp
es
movsl
pop
inc
adc
es
jno
inc
or
call
adc
pop
fldenv
and
or
dec
and
and
ret
ja
dec
dec
add
bound
testl
je
dec
mov
push
pusha
fcmove
das
jb
shl
outsl
jl
into
test
data16
mov
in
pushaw
sbb
push
orl
rcll
arpl
mov
nop
dec
stos
mov
or
inc
ret
aam
xchg
dec
pushf
std
iret
test
pop
and
dec
or
rcrl
mov
pop
sbb
ja
into
xor
cwtl
push
cmpsl
jmp
test
mov
iret
orl
and
gs
sbb
je
mov
ret
mov
sbb
ja
mov
pop
mov
dec
add
sbb
cmp
sarb
dec
xchg
mov
sarb
push
test
sbb
xchg
dec
out
pop
adc
cmovne
pop
mov
out
jbe
inc
mov
fwait
push
cmp
inc
cli
push
jnp
xchg
fists
fldl
xor
mov
and
push
int
out
add
in
xchg
dec
xchg
adc
push
subl
add
stos
icebp
les
pop
aad
hlt
dec
add
out
cmp
cmp
xchg
dec
dec
push
fcoms
jle
mov
push
xchg
xor
xor
lock
and
push
nop
or
arpl
mov
ss
push
push
imul
es
arpl
mov
mov
mov
ljmp
push
cmp
push
xchg
lret
jge
imul
enter
ds
and
sub
or
jnp
adc
imul
dec
add
test
mov
push
in
movsb
mov
dec
mov
lret
add
xor
jae
sbb
mov
and
mov
xchg
repz
push
or
test
cmp
push
lock
push
push
or
mov
out
arpl
cmc
nop
dec
adc
pop
lahf
aas
cmp
fidivrl
push
repnz
jecxz
mov
or
rcl
or
pusha
std
mov
lea
movsb
mov
lret
xchg
sbb
cmpsb
mov
lret
cld
jne
push
lock
sub
stc
jb
in
ficoml
add
xchg
les
lods
aas
cs
enter
in
xor
out
andl
mov
pop
pushf
push
jg
mov
adc
mov
adc
test
adcl
cmpsl
and
fdivl
test
or
and
leave
lea
push
icebp
push
mov
subb
iretw
pop
cltd
mov
and
andl
inc
push
or
pushf
pop
les
mov
jl
mov
pop
ljmp
enter
pop
jmp
mov
int3
pop
leave
hlt
inc
fists
cmp
xchg
pop
inc
cs
js
cmp
lock
cwtl
rcrl
xor
dec
sbb
xchg
jb
jge
popa
mov
cmp
ret
adc
and
shrl
lcall
aaa
jo
inc
xor
lea
pop
in
jp
iret
pop
mov
es
gs
mov
mov
pop
popf
incl
mov
sub
aaa
loope
lahf
add
sahf
xor
jb
mov
xor
aad
cli
adc
push
cmp
ss
adc
mov
aas
popf
sub
mov
xchg
mov
xlat
aam
leave
mov
pop
mov
inc
jge
xor
fisubrl
pusha
jne
push
add
scas
jbe
jnp
outsb
pushf
iret
pop
push
test
std
sub
int
adc
cmp
mov
pop
out
xor
sub
jo
sbb
push
adc
outsb
test
ljmp
and
dec
arpl
test
enter
shll
daa
pusha
gs
dec
lea
test
pop
int3
orb
stos
xor
dec
imul
sub
out
and
dec
gs
jno
out
fs
loopne
inc
mov
imul
xor
cmpsl
jne
outsb
fs
mov
pop
add
fistpl
ret
pop
sub
xchg
shrl
mov
jecxz
cmp
into
call
data16
cmp
dec
scas
in
jae
data16
pusha
bound
inc
lea
mov
insb
repz
sub
mov
ret
mov
xchg
cmp
int
in
or
jne
out
mov
mov
icebp
jp
ret
sub
mov
mov
xchg
into
xlat
pop
xchg
mov
test
inc
jp
addb
icebp
ja
sub
mov
and
mov
jecxz
fs
xchg
mov
sti
addl
jmp
mov
sub
ja
dec
fsubl
pop
popf
orl
inc
dec
cli
andb
ja
dec
cmc
jnp
push
and
std
rcrl
out
adc
xor
mov
pop
add
dec
rcrb
inc
or
xchg
pop
push
dec
hlt
sarl
out
add
pop
mov
shll
lret
cmp
jb
fsqrt
jno
aam
adc
test
cmp
iret
aas
pushf
push
lret
adc
repz
cmpl
push
loop
out
jbe
into
push
lock
lea
addb
xsha256
cmpsb
rcrl
cmp
and
inc
dec
fbstp
loopne
mov
jmp
ljmp
mov
iret
data16
popf
xor
pop
mov
adc
xchg
sub
clc
mov
arpl
xlat
xchg
sub
pop
xor
push
pop
xchg
and
lods
pop
push
popf
xchg
das
mov
inc
fstl
sub
adc
lds
sub
dec
xchg
arpl
lds
popf
pop
pop
scas
mov
dec
jecxz
adc
orl
mov
xor
mov
jne
xchg
fbstp
pop
mov
xchg
pop
imul
mov
jo
xchg
sbb
aaa
pop
ret
pop
fnstenv
xchg
push
ljmp
add
xor
jno
pop
cmp
mov
data16
mul
jp
pop
sbbl
jl
or
iret
pop
ret
lock
dec
loop
inc
call
mov
mov
call
adc
insb
xchg
xchg
sub
lea
mov
loopne
xchg
adc
sbbb
pop
adc
mov
fiaddl
mov
sub
mov
leave
cmpb
push
sbb
add
es
pop
push
adc
mov
int3
jb
push
or
push
fwait
scas
inc
int
jo
movsb
push
test
fwait
sub
int3
sbb
push
add
test
xchg
popf
fwait
stos
inc
int
addr16
out
push
or
inc
pushf
call
notb
mov
mov
iret
push
pop
hlt
aaa
push
jns
sbbl
mov
pop
cmc
fistl
push
test
adc
sub
dec
pop
lock
add
rcrl
pop
icebp
and
ret
addl
popf
es
xchg
pop
hlt
push
jno
sub
test
sahf
dec
jecxz
cmp
imul
orl
into
fistps
nop
test
cmp
arpl
fidivl
push
adc
test
jl
or
sbb
pusha
cmpl
popf
cmp
into
iret
pop
cmc
add
push
test
fdivl
fwait
cmp
int3
je
lock
push
mov
jo
lcall
dec
push
rcrl
fnsave
cmp
lret
out
icebp
push
ret
adc
inc
cwtl
cmp
leave
fs
lods
xchg
push
cmp
mov
inc
punpcklwd
cmp
in
push
add
mov
jp
jge
xchg
inc
adc
addr16
jge
pop
dec
jle
cs
xchg
xchg
inc
adc
fdivrl
stc
scas
fstpl
std
inc
call
cmp
lock
bound
daa
mov
jmp
add
movsb
xor
jmp
jge
sub
sbb
adc
mov
ds
sbb
popf
mov
xchg
cmp
adc
or
mov
or
mov
xchg
jp
jge
push
and
test
test
fnstcw
push
out
or
mov
cmp
outsl
stos
shrl
lret
add
les
dec
xchg
jns,pn
int
loop
push
jmp
je
movsb
cmp
fnstcw
jbe
mov
sarb
je
imul
popa
cmp
push
and
popa
addr16
xchg
gs
test
clc
add
mov
fidivs
lods
xchg
sub
lods
mov
or
lds
and
ja
rcrl
pop
icebp
adc
nop
imul
insl
push
in
fwait
pop
mov
xchg
sub
and
add
pusha
and
mov
pop
mov
imul
sarb
outsl
xchg
mov
es
jg
mov
xchg
or
movsl
cmp
lcall
fcoml
dec
mov
push
popf
pusha
lcall
repz
aad
adc
xchg
xchg
cmp
pop
cmpsl
mov
shrl
mov
lods
loopne
ja
iret
inc
fld
fsubrs
add
push
in
shll
inc
fsub
cltd
cli
xchg
les
mov
outsl
popf
cltd
xchg
sub
xor
rcll
jne
jecxz
aas
and
xlat
push
jmp
ret
subl
in
aad
push
cwtl
testb
outsl
or
jp
xchg
sub
stos
inc
or
das
enter
sbbl
ret
mov
and
insb
stos
inc
xchg
call
jne
addr16
int3
arpl
adc
iret
xor
mov
adc
mov
repz
adc
push
nop
daa
je
hlt
mov
add
fists
push
popf
inc
add
jb
push
dec
push
fldl
cltd
or
push
daa
mov
dec
inc
fnstcw
xchg
cmp
pop
pop
icebp
dec
into
ja
jo
adc
mov
mov
push
outsl
push
adcb
cmp
test
mov
inc
cmp
pop
sub
faddl
xchg
stc
loope
xlat
rclb
pop
in
adc
stos
push
int3
arpl
jle
mov
cld
xchg
insl
sub
pop
popf
sbb
sbb
add
sub
popa
inc
fbstp
push
gs
push
mov
test
ja
dec
imul
push
in
scas
sbb
shrl
scas
das
and
push
in
pusha
inc
mov
pop
cmp
int3
and
pop
mov
jnp
jp
fsubrl
push
mov
mov
std
pop
aam
nop
push
insl
nop
sub
jno
mov
ds
mov
mov
out
pop
repnz
xchg
lods
inc
into
imul
movsb
jl
xor
clc
popl
lcall
push
sbb
sbb
repz
adc
fstpt
cmpsb
or
lods
dec
jl
jle
imul
pop
push
add
outsl
xor
cmpsb
push
adc
dec
and
sbb
mov
push
sub
mov
mov
add
stos
dec
mov
aaa
into
pusha
cwtl
xchg
sub
cmpl
xchg
test
sbb
test
pop
lea
ljmp
push
mov
mov
lret
xor
mov
fsubp
jnp
das
in
cmpl
adc
cli
add
jnp
andl
or
stos
inc
fwait
js
mov
pop
sahf
xor
inc
push
and
mov
ret
push
xor
andl
xchg
aad
sbb
or
lods
pop
repnz
sti
shrl
inc
mov
xor
lods
inc
and
fists
rcrb
jo
jp
xchg
insb
mov
mov
inc
and
push
xchg
ds
arpl
push
push
inc
lea
jmp
xlat
xor
nop
dec
int3
sahf
xor
pop
shlb
nop
daa
repnz
adc
lea
cmpsb
cmp
pop
push
ret
cmp
dec
lret
mov
mov
fbld
div
mov
inc
mov
push
in
jbe
dec
fists
shrb
sub
popf
fwait
and
xor
lret
scas
inc
repz
lret
nop
cmp
lds
xor
jns
out
scas
jne
shlb
insl
add
xchg
xor
das
mov
cltd
xor
lods
scas
inc
pop
test
and
inc
dec
loopne
insb
in
test
dec
push
out
andl
movsb
cmp
shll
cld
mov
mov
or
jno
adcb
push
stos
inc
cmp
sub
xor
add
outsb
add
lock
jnp
inc
repnz
das
movb
sbb
xchg
enter
mov
xchg
and
or
loope
inc
and
dec
pop
sbbb
push
xchg
pop
into
fsubrs
jl
push
outsb
mov
pop
mov
fwait
xor
dec
mov
je
xchg
sub
cmp
jno
hlt
dec
or
mov
insb
add
sub
popa
clc
pop
or
cmpsl
aaa
jg
add
stc
xchg
jbe
add
adc
xchg
outsl
repnz
hlt
mov
insl
add
or
push
out
dec
int3
or
popa
or
hlt
dec
sbb
xchg
js
ss
lock
out
or
mov
cmp
int
sub
loopne
je
cs
add
addr16
in
and
jbe
popf
xor
cwtl
gs
or
xchg
pushf
outsl
std
xchg
lods
mov
testl
dec
arpl
push
or
data16
adc
cmpsl
cmp
outsb
add
mov
pushf
xor
push
sub
mov
cmp
mov
pushf
xor
dec
xchg
sub
ja
xlat
sti
push
out
stc
sti
xchg
jmp
mov
fisttpl
xchg
jle
push
jmp
mov
lcall
roll
xchg
cs
or
out
mov
lret
push
mov
fisubrs
mov
icebp
out
and
and
cmc
mov
cmpsb
mov
xchg
cmpb
movsl
stos
inc
push
movsl
push
lret
jno
mov
ficoms
pop
movsb
cmp
lock
loop
sbb
jne
mov
dec
xchg
call
repnz
data16
lcall
gs
dec
sub
aas
inc
push
in
jl
fidivs
add
cmp
jg
mov
daa
mov
lahf
sbb
lea
and
ds
fidivrl
shrb
sarl
inc
aam
lret
bound
cmp
cmpsb
jns
mov
decl
inc
inc
fcoms
stos
inc
xchg
in
test
dec
aaa
into
jbe
xchg
sub
repz
imul
daa
mov
nopl
mov
int3
jnp
divl
adc
lock
mov
inc
dec
and
jnp
dec
testl
mov
ljmp
mov
test
mov
shlb
stos
mov
or
imul
dec
out
dec
loop
imul
popf
inc
imul
out
pop
cmpsl
ds
adc
mov
pop
jecxz
xchg
sub
mov
dec
call
or
cmp
pop
fldt
jmp
js
popa
mov
fsubl
lock
aas
imul
jno
out
xchg
cwtl
das
push
push
jns
push
pusha
shrb
xchg
xchg
mov
stos
test
or
xchg
cmp
test
jg
xchg
outsl
arpl
inc
outsl
push
pusha
bound
popf
cltd
mov
stos
out
fcmovb
pop
or
xor
ds
jns
pop
dec
out
jle
inc
dec
adcl
dec
push
xor
mov
les
mov
hlt
xchg
cs
mov
jecxz
ret
and
mov
mov
dec
in
aam
push
jecxz
push
jmp
ss
mov
xchg
repnz
cmp
sarb
aad
pusha
mov
les
mov
add
add
inc
jns,pt
dec
outsb
mov
and
aad
push
dec
jmp
inc
push
jne
sbb
mov
ds
mov
cltd
test
push
push
cmpsl
pop
jns
cmpsb
inc
dec
push
int3
pop
push
push
roll
sub
push
inc
inc
ficompl
cmp
inc
jnp
fnstsw
inc
fstpt
jbe
sub
call
in
xor
sbb
scas
xchg
xchg
xchg
push
in
addr16
mov
fisubrl
or
sbb
dec
loope
cmp
sub
popa
shlb
pushf
or
jbe
cmp
out
or
cmp
dec
jl
push
in
sbb
push
ljmp
dec
out
popa
sbbl
and
stos
jbe
icebp
mov
scas
and
push
inc
xchg
sub
mov
sti
and
pushf
xchg
add
testl
xlat
xorl
sbb
aam
testl
lahf
mov
xor
and
test
lcall
pop
sahf
enter
movsl
jmp
and
insb
sbb
sbb
loopne
push
adc
stc
nop
adc
aam
movsb
cmp
mov
mov
pop
or
cmp
jle
xorb
dec
sahf
les
xchg
outsl
ret
ja
call
cmpsl
popa
pushf
cli
pop
bound
repnz
cmp
push
mov
or
mov
sub
addb
mov
loopne
out
mov
fisubl
mov
dec
pop
push
out
cmpsb
insl
ss
push
movsl
fsubrl
ret
inc
fisubrs
pop
lds
scas
outsl
push
loope
cwtl
das
dec
add
sub
mov
lahf
ss
dec
in
xorl
push
in
dec
xchg
in
packssdw
push
xor
mov
cmp
inc
xlat
dec
ret
clc
outsb
pop
les
mov
das
xor
enter
or
xor
movsb
cmpsb
jns
mov
push
rcrl
pop
aad
in
dec
push
mov
incb
jg
mov
xchg
xchg
and
gs
add
addb
jg
and
jb
filds
shlb
lods
aas
add
jno
dec
jecxz
mov
clc
jne
mov
push
in
pusha
aam
cmc
out
and
cmp
cld
add
call
adc
insl
mov
inc
test
jmp
mov
jbe
dec
ret
cmpsb
and
xor
add
pop
jl
ss
and
push
mov
jbe
pop
fdivl
adc
mov
pushf
jge
popf
push
mov
xor
cmp
xlat
scas
mov
push
out
xor
xor
stos
mov
or
cwtl
xor
mov
xor
ds
push
ss
shrb
ret
jnp
in
loope
dec
add
test
mov
lods
mov
int
mov
xor
shll
jg
in
sbb
mov
and
test
mov
in
nop
shrb
rcrb
call
sbb
xchg
test
lret
sti
mov
inc
fisttpll
out
cmp
pop
call
repnz
mov
jp
pop
insb
test
xchg
sub
rcr
jo
xchg
jmp
aas
add
stos
inc
ror
push
out
mov
popf
mov
mull
jmp
lods
mov
test
incl
cmp
pop
sahf
xor
movsb
mov
scas
subb
repz
lds
shlb
mov
addr16
out
adc
pop
adc
shrl
push
fmull
inc
outsl
inc
jb
in
push
lret
nop
daa
mov
je
fs
dec
loope
test
rcrb
mov
push
cmp
ja
hlt
and
jne
pop
jge
shrb
xchg
es
pop
or
push
in
mov
xchg
add
pop
and
mov
cmp
pop
jecxz
pop
pop
pop
jl
inc
pop
cmpsl
cwtl
push
fucomp
jo
imul
mov
pop
sbb
loopne
ja
add
leave
sarb
in
cmc
outsl
push
jmp
or
out
sub
sbbl
add
lods
les
rolb
add
cmp
lock
ss
push
xchg
sub
cmp
scas
jp
mov
fsub
js
dec
lds
lock
popf
xor
jg
cmc
outsb
scas
adc
pop
jp
and
xchg
sub
mov
xor
cwtl
jo
jae
ret
rolb
je
mov
and
cltd
je
orb
push
mov
fs
lds
movsl
popa
scas
inc
addr16
out
cmp
cmp
nop
add
subb
aas
adc
inc
flds
xor
and
lret
into
cmc
xchg
icebp
xchg
aam
or
in
or
scas
xchg
xchg
jg
mov
dec
jecxz
jg
lods
outsl
test
into
mov
jbe
xor
lahf
sbb
add
outsl
push
pop
jne
popf
gs
xor
sbb
inc
xchg
push
sub
xor
xchg
sub
ss
out
push
mov
mov
pop
repnz
adc
add
inc
fisttpl
cli
imul
inc
xlat
lds
adc
in
repnz
cwtl
sbb
cmpsl
cltd
or
xor
mov
flds
xchg
outsb
dec
in
lock
dec
lock
addr16
adc
cmp
add
sbb
jmp
and
inc
mov
hlt
add
ret
pop
repnz
mov
inc
leave
test
ljmp
push
xchg
call
pop
gs
lcall
test
fistps
mov
push
jp
mov
mov
sbb
fcom
movsb
dec
jecxz
divl
leave
dec
adc
sbb
cld
jnp
outsl
push
aas
pushf
push
in
aad
mov
xchg
divb
lret
mov
sub
in
jmp
mov
int3
arpl
outsb
add
sub
jmp
jge
movsl
jae
or
sub
sub
out
shrb
or
pop
push
xchg
shlb
jne
pop
inc
and
mov
push
or
lahf
ss
shrl
xchg
fidivl
js
cmp
call
insl
pop
divl
aaa
push
hlt
mov
stc
jb
pop
movsb
sbb
popf
mov
xchg
mov
sub
popf
popf
mov
pop
icebp
dec
popa
inc
fstl
fnsave
fsubrs
push
loopne
inc
pop
gs
push
lahf
and
xor
es
repnz
jne
movsb
das
pop
sbb
repnz
push
fwait
xor
or
aam
aam
jb
jb
cmpsb
xor
lcall
pmulhw
ds
mov
cmp
cmp
cmpsl
mov
push
cld
lcall
mov
ret
ret
push
sbb
ds
pop
stos
fsubrl
loope
mov
lds
mov
enter
xchg
fadds
shll
rclb
add
cmp
jg
xor
push
cmp
jp
inc
inc
dec
jae
andb
push
and
adc
mov
in
cmp
movsb
cmp
dec
out
xchg
cmc
stos
in
sbb
pop
and
lods
or
mov
add
push
inc
mov
cmp
inc
mov
add
mov
xchg
jo
aad
mov
cmp
pop
fmul
add
xlat
xlat
hlt
stos
imul
loop
into
fiadds
pop
les
in
out
ret
adc
shlb
mov
cmp
push
cmp
sbb
cmpsb
mov
sahf
lds
xor
andl
sbb
vcvtdq2ps
das
jg
mov
aas
mov
into
out
push
cmc
and
scas
sbb
icebp
cmp
orb
cmc
or
jmp
aas
pop
and
dec
inc
int
inc
dec
ss
xor
in
rclb
imull
xchg
add
dec
xor
mov
xchg
mov
inc
fdivs
aad
test
jo
push
rorl
cli
pop
lea
enter
push
scas
sub
lods
scas
inc
xor
xorl
les
mov
push
rcrb
cs
lahf
nop
or
scas
mov
push
jmp
xchg
cli
add
mov
and
divb
pop
mov
ljmp
add
cwtl
scas
es
mov
mov
xor
out
xor
pop
mov
bound
pop
inc
jns
cmp
lods
fld
ja
repnz
xor
jne
leave
sbb
cmp
gs
call
ret
repz
outsl
xor
arpl
idivb
mov
repz
fidivl
mov
fisttpl
dec
ficoms
sbb
jge
lds
push
out
or
push
jbe
aad
and
popa
dec
in
and
pushf
xchg
testl
lock
xor
sub
lock
testb
ss
aas
jle
in
and
in
cmpb
mov
insl
push
repz
adc
adc
out
mov
aaa
stos
scas
popf
fwait
pushf
xor
mov
lret
jle
jecxz
cwtl
add
test
add
and
cmp
inc
shlb
aaa
insb
out
pop
xchg
stc
nop
enter
and
lods
lret
push
mov
leave
add
cmpsb
cwtl
jns
enter
mov
push
adc
dec
stos
inc
jle
fdivr
sbb
pop
mov
pop
nop
mov
lds
mov
stos
mov
int3
repz
dec
daa
mov
repz
fbld
cmp
ret
out
pop
sbb
test
fwait
inc
xchg
inc
scas
shll
xor
loopne
cld
sub
test
idiv
sub
mov
mov
mov
movsl
shl
dec
int
ja
mov
punpckhwd
push
cmpsl
lods
inc
in
add
test
and
inc
sub
cmpsb
ja
dec
push
ret
mull
sbb
push
dec
roll
push
lcall
cmp
cmp
repnz
and
je
xchg
mov
bound
adc
mov
inc
mov
jbe
icebp
jns
mov
xorl
inc
and
int
inc
clc
stos
sub
mov
push
mov
or
stos
scas
jecxz
icebp
js
ss
test
xchg
jp
add
popf
insb
jge
add
ret
ficoms
mov
in
js
in
xchg
inc
push
popf
jno
lahf
setno
popf
push
sub
jno
sti
mov
imul
pop
fiadds
ret
xchg
mov
xor
jne
sahf
pop
mov
fldenv
jmp
dec
add
mov
ss
aam
jp
in
addr16
cwtl
arpl
xchg
call
rcrl
dec
repz
test
add
aas
push
fdivr
popa
mov
jae
jnp
inc
cwtl
mov
dec
jmp
loope
jo
lock
sub
pop
ret
jp
insl
les
xchg
mov
dec
lea
insl
aaa
push
divl
mov
jmp
shrl
xchg
xchg
mov
cs
cmpsl
popa
fnstenv
mov
aas
add
or
jge
adc
imul
lret
sti
loope
push
out
or
iret
in
shll
mov
sahf
stc
lods
xor
or
stos
inc
add
in
repz
movsl
and
insb
add
jmp
xor
cld
sub
and
sbb
inc
das
adcb
rdpmc
lret
fdivrl
mov
leave
pop
ja
push
mov
je
inc
or
sub
out
test
outsb
sbb
repnz
sub
nop
or
fimuls
movsl
nopl
xchg
xchg
dec
add
lds
aad
negl
sti
dec
shl
mov
inc
mov
test
add
jbe
bound
mov
jecxz
mov
fwait
pusha
std
xchg
fnstsw
dec
jecxz
inc
mov
fstpt
push
fs
xchg
push
xor
orb
in
cmp
inc
adc
lock
and
imul
imul
je
nop
call
xchg
cmp
push
loopne
dec
imul
xchg
fwait
test
mov
pop
sbb
test
mov
push
rolb
cmpsl
aas
pop
ss
cs
sub
pop
icebp
lea
cld
inc
loop
andb
mov
imul
ret
add
int3
arpl
test
stc
outsl
push
mov
inc
aaa
int
jne
jecxz
push
and
addb
xchg
loop
jl
lahf
in
inc
push
ret
pop
js
dec
xchg
sbb
outsl
jns
jno
lods
dec
mov
clc
xor
test
call
inc
xchg
mov
les
adc
ret
jo
ds
add
push
pop
xchg
fisubrl
adcl
mov
sti
icebp
adc
js
xchg
adc
loop
icebp
sbb
xlat
jecxz
mov
mull
pop
ljmp
inc
ss
jne
push
into
subb
ss
lock
cli
and
mov
pop
sub
xor
mov
push
lcall
push
push
repz
xorb
movsl
cld
cmp
sub
adc
addb
cltd
idivl
hlt
push
ficoml
ret
aas
sbb
pop
jns
in
and
je
add
lcall
call
mov
addr16
mov
hlt
mov
dec
mov
fnsave
hlt
outsl
push
xlat
xchg
pop
xor
sbb
cld
popf
das
add
std
mov
ja
fadd
pop
cs
out
add
rclb
out
push
ss
out
mov
or
call
loopne
fmulp
sub
adc
into
cwtl
dec
in
imul
and
mov
jne
jle
dec
pop
popa
int3
xor
push
rolb
push
test
push
pop
mov
aaa
push
aaa
gs
sub
push
pop
pop
iret
movsl
repnz
push
pop
aam
lods
pop
call
mov
or
sbb
mov
sbb
push
mov
loop
pop
lea
push
mov
cs
nop
xor
negb
mov
mull
in
rorl
pop
inc
mov
cwtl
pop
stos
test
inc
ret
insl
les
stos
mov
leave
mov
leave
push
loopne
or
dec
cmp
rolb
push
xchg
dec
frstor
adc
test
hlt
sbb
sbb
mov
je
push
mov
data16
push
sub
sbbl
sub
jle
fisttpll
dec
cmp
mov
arpl
push
jno
xchg
negb
sub
cmp
daa
ret
push
inc
out
lea
dec
jmp
or
push
outsb
aaa
popa
mov
iret
jo
leave
jl
mov
gs
push
add
jns
xchg
je
mov
jmp
mov
mov
xor
push
mov
xchg
adc
movsl
popa
push
push
dec
xchg
negl
mov
subl
adc
adc
hlt
fmull
adc
aaa
inc
aam
fdivl
or
and
push
iret
gs
lcall
or
cld
aam
icebp
sub
lret
icebp
push
enter
call
mov
mov
fwait
and
push
cltd
test
test
sub
push
movsl
jns
dec
fistpll
sub
movzbl
push
pop
push
scas
mov
adc
out
xor
aad
icebp
xlat
aam
into
leave
aad
shlb
push
and
sahf
jbe
adc
testb
adc
fsub
std
xchg
adc
mov
lahf
or
xchg
sarl
into
aam
push
stos
test
sub
roll
dec
enter
add
pop
and
and
movsb
adc
ret
inc
sbb
mov
sub
sarb
inc
lods
sbb
popf
lods
insb
call
loope
xchg
outsb
mov
scas
pop
fld
xchg
sbb
dec
inc
out
push
push
in
push
out
loope
mov
inc
mov
xchg
insl
and
or
inc
adc
imul
push
call
or
push
loope
mov
add
test
repz
out
cwtl
pop
movsl
fcompl
mov
xor
xchg
daa
dec
mov
clc
testl
enter
pop
xor
loope
sbb
sbbb
add
mov
mov
sub
lods
sbb
push
mov
pop
test
sub
jp
stos
sub
mov
testb
xor
cmpsl
scas
pop
xchg
cwtl
push
enter
cli
call
les
outsl
lock
or
mov
ficoml
push
in
inc
sbb
scas
pop
popf
push
xlat
pop
xchg
or
fldenv
enter
xor
adc
push
sub
push
or
loop
xchg
ret
pop
sub
stc
mov
sub
push
push
inc
in
xchg
popf
das
iret
popaw
mov
leave
pusha
leave
repnz
push
push
out
subb
sahf
out
or
sub
enter
dec
pop
adc
ret
pop
xor
ja
mov
sbb
mov
pop
pop
push
add
mov
mov
mov
jb
or
push
adc
inc
pop
xchg
push
outsl
push
push
adcb
dec
out
mov
jae
inc
push
ja
hlt
push
adc
orl
sahf
pop
test
pop
addr16
fistpl
xchg
lret
sarl
mov
movsl
les
je
neg
pop
or
stos
sub
roll
sbb
xor
sti
adc
dec
pop
in
call
pop
mov
xlat
out
push
sbb
mov
imul
fidivs
pop
mov
dec
stos
shrl
inc
addr16
pop
insl
or
iret
movb
hlt
xor
ja
push
out
push
cwtl
mov
lret
add
inc
bound
popa
jl
and
sbb
movsb
xor
arpl
jne
loope
aam
nop
outsb
ja
or
cs
jne
rorl
popf
mov
frstor
and
push
movsl
push
pop
pop
mov
push
popf
pop
scas
sbb
mov
inc
cli
in
mov
dec
loop
fdivrs
mov
adc
xor
mov
cmp
test
test
sbb
xchg
sub
movsl
jns
in
sbb
in
mov
in
aas
or
insl
out
or
xlat
xchg
rclb
inc
jmp
bound
inc
jne
sti
sub
mov
xorb
pushf
push
or
test
add
sbb
clc
mov
inc
jle
pop
add
sbb
mov
test
sbbb
push
in
jge
repz
sarb
ficomps
mov
dec
mov
and
rcl
lods
or
mov
and
xchg
sub
mov
aad
cmp
lods
inc
movsb
sbb
adc
popa
iret
push
aad
daa
popa
and
insb
mov
push
test
cmp
mov
mov
add
call
mov
repnz
add
imul
aas
jno
sbb
mov
adc
pop
jg
mov
outsb
into
mov
push
xor
sbb
push
inc
stos
mov
and
xchg
mov
mov
sbb
daa
xchg
shl
push
mov
into
xor
add
int
fisubrs
push
jge
icebp
clc
negb
dec
jbe
jns
mov
cmpsl
sub
pushf
sbb
iret
push
leave
pop
or
data16
cwtl
xor
sub
push
nop
xchg
cmpsb
sbb
sub
cmc
cmc
mov
xlat
xor
mov
push
fwait
sysret
call
stos
push
call
pop
cmc
cltd
scas
mov
fsubrs
in
lret
mov
add
mov
mov
push
mov
dec
ss
inc
mov
push
lahf
ss
lds
loop
add
std
dec
popa
sahf
xchg
mov
jne
rcll
push
add
out
add
fsubr
and
jmp
xchg
jle
stc
sub
sub
stc
cmc
push
adc
and
stos
pop
lcall
xchg
cs
divl
fstpt
fiaddl
int3
xchg
pop
cld
mov
data16
movsl
mov
es
adc
jmp
clc
test
mov
push
push
stos
jbe
mov
inc
cmp
pop
lock
or
jmp
filds
repnz
inc
jmp
sti
and
push
xchg
std
insl
loopne
popf
das
rcrl
mov
sahf
mov
push
js
fadds
hlt
or
out
mov
stos
adc
pop
fidivs
cmpsb
in
dec
xor
testl
pop
mov
sub
int
addr16
mov
adc
cwtl
stos
in
mov
jle
add
jns
xor
sub
dec
inc
push
mov
outsl
push
cmc
cwtl
cmp
add
cmp
xor
repz
add
inc
inc
and
jae
mov
mov
mov
or
imul
jae
xchg
pop
and
rcr
jns
pmuludq
xchg
add
jl
inc
sub
in
in
lcall
adc
cwtl
cwtl
das
push
dec
push
jns
fsub
rcrb
pop
fs
mov
jecxz
sub
xorb
mov
or
fabs
cli
mov
cli
add
mov
fstpl
or
xorl
mov
mov
js
cmpsb
fmull
out
frstor
lret
cmp
cmpsl
cmpsb
repnz
ret
in
mov
es
sbb
lea
cs
pop
popf
add
mov
jmp
inc
cmc
pushf
inc
popf
dec
mov
enter
mov
icebp
leave
mov
adc
adc
popf
push
xchg
arpl
xchg
insl
mov
cmp
cmc
xchg
popa
stc
mov
mov
jle
adc
lea
xor
fildll
sub
loop
jg
push
or
jno
inc
cmp
fnstsw
into
add
jbe
pop
scas
orb
add
push
cltd
std
pusha
cltd
sbb
dec
iret
repnz
shlb
frstor
stc
inc
lods
loop
scas
jbe
aam
iret
les
aas
aaa
mov
ljmp
fimull
je
lods
movsl
jnp
loop
xchg
lock
je
mov
xor
mov
mov
adc
dec
addb
lret
outsb
imul
je
loope
xor
imul
popf
fs
sti
dec
dec
push
adc
mov
addr16
mov
jb
mov
sub
inc
inc
xchg
pop
or
adcl
xor
sub
mov
lret
les
cld
xor
mov
mov
cld
out
push
mov
push
jmp
test
stc
in
test
jg
mov
push
adc
mov
fwait
sbb
ret
mov
jecxz
cmp
sahf
pop
repz
jo
jno
push
pop
pop
sub
xor
pop
ds
xchg
lahf
pop
dec
add
xor
out
adc
std
xchg
sub
sbb
cmp
push
pop
fwait
test
or
filds
sub
adc
cli
push
cmp
jmp
int3
adc
sti
mov
mov
test
sbb
rol
jbe
mov
test
in
push
iret
mov
push
xchg
xorl
int
and
rolb
mov
ds
mov
data16
or
xor
jae
sub
inc
fwait
lcall
ja
and
pop
push
xlat
dec
leave
rorb
inc
mov
int3
push
iret
jmp
scas
push
or
fst
sbb
mov
daa
dec
jb
mov
fcmove
mov
mov
push
out
sbbl
push
cmpsb
add
sbb
and
and
test
lds
xchg
mov
fstps
and
dec
and
andl
xor
gs
popa
rcl
push
outsb
push
orl
pop
cltd
xlat
mov
sbb
xor
xor
scas
lds
xor
stos
aad
sub
inc
cmp
xor
fcompl
mov
pop
aad
xchg
push
sub
pop
xlat
xor
mov
push
xor
inc
sbb
imulb
decb
sti
lret
call
es
pop
fs
ret
sarl
sub
test
cli
xor
call
mov
pop
sahf
rorb
dec
cmp
in
mov
adc
fldl
mov
mov
mov
or
fnsave
xchg
xchg
pop
inc
pushf
xor
outsb
lahf
push
aaa
fmuls
pop
jg
arpl
scas
jno
xor
jnp
mov
adc
xchg
test
fnstenv
cmpsb
push
ljmp
inc
fcmovb
dec
and
xchg
sahf
xor
xor
sbb
rcll
out
inc
adc
movsb
cwtl
data16
mov
enter
cmp
inc
fbstp
adc
test
dec
fcmovu
adc
or
jmp
out
push
into
gs
sub
cmpsb
fwait
lret
mov
mov
mov
push
lods
jnp
or
fisubs
cltd
dec
xchg
push
jmp
or
fidivl
pop
lock
xchg
xor
mov
push
daa
sti
dec
jge
cmpsb
dec
push
adc
pop
jecxz
cwtl
pop
dec
in
aam
aam
out
sub
into
fdivrl
in
out
shlb
mov
adc
pop
sahf
mov
imul
jg
adc
jmp
mov
cld
xchg
or
or
mov
repz
popa
push
mov
pop
adc
inc
stc
nop
ja
lahf
xchg
outsb
xor
push
add
pop
hlt
cmp
test
out
xor
nop
jge
adc
pop
dec
push
sub
pop
mov
movsb
ja
arpl
in
mov
jmp
popf
xchg
mov
mov
lods
lds
push
jmp
xchg
call
pop
repnz
fsubrs
shrb
mov
sub
std
cs
cs
cmc
mov
push
push
popf
inc
jnp
sti
insb
push
push
jmp
insl
xchg
sub
cmc
bound
fmull
ljmp
mov
jp
xchg
and
jno
out
xchg
aad
mov
test
jmp
loop
imul
aad
out
jne
popf
xorb
mov
bound
adc
arpl
push
shlb
imul
call
das
pop
pop
scas
mov
outsb
aad
fisubrs
ljmp
cmp
and
das
fdivrl
sbb
ss
imul
add
push
lret
xchg
fdivrs
add
cmp
inc
xor
mov
stc
mov
lret
arpl
enter
push
in
dec
out
push
mov
mov
leave
mov
call
or
adc
xchg
push
popf
sbb
cwtl
das
and
dec
loope
mov
mov
cmp
mov
or
shlb
scas
stos
inc
loopne
out
test
aam
mov
xchg
sub
push
test
pushf
fnstcw
fildll
lret
data16
cld
dec
inc
fdivrs
test
sahf
pop
testb
fbstp
sub
adc
xchg
std
or
pop
bound
inc
movsl
ss
std
and
push
arpl
orb
mov
mov
popa
clc
push
mov
cli
or
cmc
sbb
nop
stos
ficoml
fdiv
div
cmp
fsubrs
test
add
int3
or
pushf
scas
ficomps
cmc
test
xchg
mov
mov
mov
daa
cli
adc
mov
pop
jle
fidivl
pushf
ret
cmpsl
stos
pop
in
lret
adc
push
inc
hlt
push
gs
and
push
out
popa
cmp
enter
icebp
cmp
or
xchg
es
pop
insb
mov
mov
or
lcall
pop
int
mov
pop
ss
push
movsb
movsl
bound
aas
rolb
push
daa
inc
jecxz
ss
inc
mov
pop
int3
mov
lods
mov
ret
int3
and
subl
popa
or
stos
test
std
lahf
jbe
push
dec
cwtl
jl
std
xchg
push
negb
mov
out
stc
jecxz
das
jmp
mov
mov
ljmp
stos
sti
cmpsl
jge
int3
cs
dec
dec
loope
jo
bnd
andb
or
js
push
mov
nop
cli
in
test
add
dec
mov
mov
jle
iret
bswap
lahf
mov
jbe
imul
dec
push
sub
mov
adc
aad
dec
mov
sub
jne
inc
popfw
push
arpl
dec
aaa
inc
scas
or
jb
pop
ss
lods
push
fs
mov
xor
or
sub
jns
fsubrl
xchg
jne
pop
int
lea
cs
shrl
pop
fwait
inc
test
jnp
loop
mov
loopne
dec
cmp
mov
daa
pop
xchg
rcrl
sbb
mov
adc
mov
push
fnstenv
pop
mov
add
sbbl
test
mov
and
or
sahf
pushl
cmp
rclb
mov
mov
jl
dec
rorl
fisubrl
stc
data16
out
jae
out
aaa
dec
pushl
add
xchg
stc
nop
push
cmpsl
std
and
int
sub
add
inc
pushl
inc
adc
into
mov
movsb
xor
scas
or
imul
sbb
jge
mov
addr16
jbe
data16
sub
dec
test
ror
fwait
pushf
sub
scas
cmp
ret
mov
in
call
sbb
ds
fisubs
pop
push
std
jnp
cmp
push
or
shlb
add
xor
sahf
xor
divb
out
es
xor
out
loop
xchg
push
pop
cmp
je
cltd
sub
jno
and
sub
pop
scas
mov
and
int3
insb
jb
sahf
test
sub
nop
ficoml
sbb
pushf
jb
xor
cmp
inc
movsb
push
in
aad
insb
xchg
std
insl
div
jns
or
mov
add
add
mov
jmp
loopne
mov
mov
bnd
pusha
mov
loope
xor
or
xor
sbb
pop
xchg
push
imul
fdivrp
decb
roll
loopne
lods
sbb
cwtl
jae
movsb
lock
lahf
ret
lret
mov
jns
gs
fsubl
sub
sub
cmpsb
insl
push
add
loopne
sahf
jne
stc
mov
pop
lea
cmp
push
adcl
mov
ljmp
into
call
fidivrs
ficoml
leave
pushf
repnz
sbb
adc
inc
mov
xchg
mull
and
sub
pop
push
jo
testb
and
or
das
adc
sub
addr16
imul
cmp
jo
jmp
pushf
and
xchg
sub
outsb
fwait
out
push
add
iret
xchg
fcoml
cwtl
fidivl
negl
sbbl
fwait
xor
push
add
ror
inc
loopne
lcall
xchg
or
imul
fidivrl
and
out
jb
mov
and
fcompl
add
mov
js
inc
cmp
in
ja
fwait
push
je
dec
fs
xor
sub
stos
lahf
bound
data16
sbbl
mov
fwait
xor
xchg
inc
stc
jmp
mov
xchg
sbb
enter
movsl
jmp
cmp
mov
pop
mov
clc
rol
and
push
mov
xor
rcrb
add
mov
arpl
mov
out
mov
jge
fldl
xor
cmpsb
insb
add
mov
and
iret
into
push
clc
cmpsl
subl
std
pop
dec
push
pop
lods
cmp
xchg
cmpsb
jp
out
shr
cmp
pop
les
repnz
mov
or
lahf
nop
cs
pusha
jo
pop
mov
inc
add
inc
aaa
add
icebp
jo
cli
sbb
xchg
cli
xor
inc
lret
pop
jno
add
mov
pop
test
jmp
push
fwait
and
mov
cmp
xchg
mov
inc
fistps
cld
mov
cmp
or
out
imul
cmp
in
cmp
lcall
filds
push
stc
bound
push
test
mov
out
fisttps
shrl
das
cmp
push
inc
fldl
fistps
mov
mov
mov
push
inc
jecxz
movsl
shl
push
cld
cmp
clc
jp
das
cmp
xor
mov
and
adc
or
mov
rol
jg
leave
inc
pop
insl
pushf
push
jmp
and
cmp
enter
sahf
adc
outsb
loope
mov
adcb
push
sbb
jne
mov
inc
out
ret
ret
sub
inc
dec
aam
stos
pop
cmp
jle
outsl
push
lahf
popa
shrl
les
imul
sbb
loop
or
sahf
mov
int
test
sahf
jns
xorl
pushf
stc
dec
dec
stos
cli
daa
stc
aaa
lcall
dec
inc
popa
dec
adc
pop
cmpsl
xor
xchg
test
push
dec
bound
notb
xchg
rolb
push
mov
test
push
sahf
pop
and
mov
in
push
aaa
test
testb
sbb
add
push
mov
sub
dec
cmp
xor
lahf
outsl
lods
mov
sub
shl
jns
popf
pop
in
dec
jge
sti
and
push
sbb
jae
inc
fiaddl
test
lret
sub
jnp
mov
add
in
cmp
lret
leave
movsb
out
mov
pushf
dec
push
xchg
out
jge
lods
pop
test
fistpll
dec
test
push
js
lcall
push
push
pop
icebp
inc
and
add
imul
outsb
push
jp
adc
push
add
movlps
movsl
cmp
sub
mov
sti
lcall
sub
cmp
insb
aad
out
add
mov
aas
push
push
js
daa
addr16
pop
daa
call
and
dec
adc
fimuls
mov
cmp
mov
test
dec
dec
shrl
push
js
data16
xchg
push
movsl
pop
sti
stos
aaa
shr
js
sub
loopne
or
sbb
ljmp
mov
and
movsb
addr16
mov
addl
or
aad
ret
mov
scas
sub
test
fs
mov
add
xchg
xchg
fs
xchg
test
arpl
sbbl
out
outsl
outsl
mov
cmp
sbb
sbb
inc
pushf
mov
mov
idivl
rorb
xor
popa
mov
adc
notb
jno
add
jg
xor
sbb
jmp
push
aas
je
inc
xlat
ret
outsb
jo
pop
insl
shll
dec
mov
fists
push
dec
into
faddl
cwtl
js
cwtl
inc
lock
adc
mov
fs
aas
push
jp
in
nop
in
cmpsb
pop
mov
and
test
or
sub
add
outsb
cmp
cmp
repnz
aas
push
push
sahf
leave
pop
nop
test
push
xchg
lahf
and
mov
gs
and
sub
add
lret
pop
push
and
pop
clc
outsb
lret
sub
sbb
adc
push
repz
and
xchg
add
cmc
lock
in
lret
dec
out
inc
pop
out
inc
mov
mov
pop
xchg
cwtl
push
lea
out
cmp
adc
mov
loop
lcall
mov
out
mov
jmp
out
mov
clc
xchg
fsubrs
out
sahf
daa
fldt
jno
mov
ficoms
mov
jecxz
in
add
push
add
lcall
add
xchg
shlb
xchg
in
out
cmp
sbb
cltd
adcl
int
or
ret
je
pop
push
adc
adc
or
and
dec
jmp
fwait
jbe
sbb
jne
dec
std
xchg
sub
or
adc
add
sbb
shr
or
cmp
xchg
and
int3
push
iret
data16
sub
in
mov
divb
mov
popl
dec
jle
das
cmp
or
sbb
ja
inc
jg
or
push
push
call
cltd
mov
dec
jmp
mov
xorb
outsb
das
nop
jmp
int3
xchg
loopne
js
pop
outsl
add
rorb
inc
adc
ds
push
sahf
jb
dec
icebp
stc
xchg
popa
outsl
dec
mov
addb
lcall
in
mov
cmp
xchg
push
inc
call
inc
jmp
inc
pop
xchg
dec
sti
rorb
mov
shl
add
cli
iret
cmp
imul
ja
add
lret
daa
lds
int
pop
mov
xorl
ficoml
sbb
clc
dec
xor
sub
loop
addr16
xor
jno
nop
mov
and
mov
dec
jecxz
movsl
cmp
add
outsb
fildl
add
push
push
gs
aam
addl
mov
out
adc
pop
das
xor
mov
js
int3
adc
cltd
sarb
lret
or
push
xor
stos
push
jmp
jnp
fwait
rorl
add
jne
jge
cmp
adc
pop
int3
mov
cmp
pop
jge
add
mov
cwtl
das
arpl
add
sbb
jo
ret
inc
or
sbb
cmp
aas
ret
outsl
loope
cmpsb
stos
dec
mov
mov
cmp
mov
mov
push
xor
fisubl
pop
imul
fcompl
adc
mov
adc
push
and
adc
inc
inc
mov
out
cli
pop
xor
js
jbe
inc
rol
pop
mov
inc
cltd
pop
cld
sti
or
xlat
and
std
nop
out
mov
sbb
sub
aaa
sti
push
sbb
insl
xor
cs
pop
inc
mov
mov
in
into
es
imul
jae
push
xchg
sbb
mov
cwtl
mov
imul
sbb
pop
adc
and
pop
test
lret
cmpsb
mov
or
jnp
cld
nop
inc
cwtl
push
xor
sti
cmp
fisttpll
sbb
jno
gs
lds
and
jp
jb
repz
int3
and
in
push
test
stos
add
mov
cmp
out
add
out
stos
sbb
lods
jmp
adc
movl
cli
adc
jl
and
jle
cmc
jle
mov
mov
jno
in
les
andl
adc
xchg
pop
pop
jecxz
mov
mov
sub
shl
adc
mov
inc
xor
lock
pop
rcrl
fdivrs
push
push
jne
mov
push
inc
scas
cmp
and
push
lahf
mov
shrb
push
or
pop
div
mov
cmp
pop
jnp
cmp
cli
outsl
jp
cmp
imul
xchg
mov
lcall
lods
xor
xor
jo
and
loop
lods
push
jg
or
dec
pop
int3
and
inc
or
add
sub
pop
pop
xor
imul
out
and
xchg
mov
int3
or
or
ret
mov
sbb
dec
loope
not
xchg
add
or
in
sub
cltd
stos
loopne
dec
out
in
ja
aad
ja
pusha
push
cmpb
inc
jbe
call
in
xchg
ds
bound
js
stos
sub
dec
mov
subl
sub
or
mov
sahf
mov
push
cli
or
or
and
rcrb
adc
mov
test
push
fsubs
jo
clc
out
insb
mov
sbb
orb
fdivp
cmpsb
sub
mov
xor
sub
cmpb
pop
pcmpeqb
cmpsb
cmp
jg,pn
mov
xchg
cmp
lds
sbb
icebp
mov
xchg
sub
rcll
es
sub
dec
movsb
jecxz
adc
clc
pop
pop
inc
int
lret
inc
xchg
push
or
rorb
mov
fsubs
ss
pop
iret
cwtl
sub
push
insb
mov
fisubrs
fidivrl
aad
sub
pop
aad
pop
mov
sahf
mov
rorl
loope
xchg
int
dec
mov
mov
jmp
mov
repnz
mov
addr16
clc
lock
cmp
scas
jmp
nop
ja
bnd
jle
sbb
jnp
dec
lret
jae
shlb
inc
sahf
push
aad
ja
inc
jae
rol
cmp
xchg
inc
pop
jecxz
pop
cmpsl
sahf
notl
nop
cltd
dec
sub
jg
mov
and
icebp
movsl
sbb
loop
sub
adc
or
fimuls
sub
lret
pop
stos
mov
ret
sarb
and
cmp
lods
out
pop
xor
and
and
adc
dec
fstp
dec
pop
repnz
jns
nop
push
push
test
fistps
out
push
sbb
dec
pcmpgtb
push
lahf
dec
ja
repz
fnsave
jge
inc
pusha
icebp
cli
test
pushf
pusha
mov
je
rcll
adc
cmp
ja
adc
popf
pop
inc
ror
cmp
mov
push
popf
fistpll
pop
bound
call
mov
into
gs
mov
jns
shrb
mov
and
je
sbb
pusha
adc
inc
jno
xor
sub
mov
imul
mov
adc
sub
mov
hlt
mov
adc
int3
cmp
inc
jecxz
cmp
push
imul
cld
dec
mov
jbe
or
mov
into
sbb
arpl
lret
mov
and
dec
mov
cmp
insl
out
pusha
push
imul
mov
push
xchg
adc
mov
mov
or
jb
addr16
notl
inc
jle
xlat
push
jbe
rcr
leave
ret
jns
jecxz
cmp
mov
pop
jmp
cmc
pusha
push
daa
addr16
cmc
cmp
push
xor
into
mov
jnp
mov
add
imul
sub
push
jmp
push
jo
sti
inc
ret
push
dec
cmp
or
jecxz
cmp
mov
ljmp
jnp
in
mov
push
sbb
movsb
add
scas
fcmovb
daa
add
bound
roll
xchg
jmp
mov
and
xchg
aam
sub
fildl
scas
xchg
int3
and
ljmp
xor
adc
push
lods
test
arpl
arpl
test
das
addr16
xor
inc
jmp
adc
out
jp
mov
popf
fwait
mov
jne
jle
mov
movsl
cmp
jle
sti
pushf
sub
and
fsubrs
stos
add
inc
xor
adc
lret
push
jmp
insl
divl
fildl
cwtl
shlb
jb
imul
data16
adc
push
insl
push
outsb
in
loop
cmpsb
stc
aas
in
ficoml
pop
int3
mov
push
in
orl
lods
gs
or
ss
es
clc
jmp
outsb
xchg
lret
addr16
jp
cwtl
icebp
sbb
mov
shrl
sbb
adc
or
stc
xchg
inc
or
cmp
dec
aad
dec
jno
enter
fsub
push
mov
mov
cmpsl
mov
push
enter
mov
sub
or
add
bnd
sub
jp
pop
loopne
in
jo
mov
popa
mov
repnz
mov
xchg
jp
test
sub
int3
out
dec
inc
jno
xchg
dec
mov
push
sub
or
loopne
xchg
pop
rorb
adc
jae
xor
or
je
dec
mov
out
cmp
mov
fidivs
fistl
jbe
cld
push
jne
or
dec
xchg
mov
scas
jbe
orl
mov
faddp
inc
fs
out
lret
xchg
push
cwtl
mov
inc
dec
xchg
jp
adc
mov
gs
mov
mov
dec
xchg
sub
aad
or
push
enter
dec
data16
sahf
and
cmp
cmp
imul
mov
lods
push
into
std
aad
outsb
jp
mov
pop
jbe
insl
sti
stos
sahf
mov
and
pop
mov
out
inc
mov
pop
ror
pop
leave
test
jns
adc
sbb
xor
pop
es
add
faddl
test
enter
mov
scas
mov
lcall
in
mov
xchg
mov
mov
jecxz
fdivrs
lock
sbb
adc
movsb
and
push
push
lds
jl
adc
js
xor
mov
lea
in
pushf
sti
adc
mov
cs
nop
nop
push
ret
mov
mov
sub
mov
iret
or
shlb
xchg
loop
in
mov
scas
rcrl
mov
js
cli
push
fstps
fidivs
xchg
sub
lret
leave
fistpl
adc
les
add
mov
xor
test
xor
lret
icebp
mov
adc
into
xor
pop
sbb
sbb
mov
sti
pop
shlb
adc
or
xchg
xor
xchg
jnp
mov
adc
scas
pop
mov
xchg
sti
lea
pop
cmp
mov
insb
sub
inc
pop
sub
cmp
adc
mov
add
jnp
sbb
or
stc
nop
adcl
add
or
outsb
push
adc
pop
push
push
push
cmpsl
cld
or
iret
fisubs
pop
mov
sub
pop
sub
lds
leave
dec
pop
scas
jne
pop
repnz
aas
into
pop
mov
sub
inc
jns
jnp
in
jae
pop
push
dec
loope
jl
test
xor
inc
lret
adc
sbb
push
inc
test
aam
sbb
push
fcmovnbe
das
daa
jnp
icebp
and
lcall
push
adc
dec
icebp
daa
outsl
mov
repz
lock
inc
insb
ds
sbb
and
inc
mov
call
or
pop
mov
enter
cmpsb
lock
push
sbb
ret
sub
inc
hlt
mov
aad
pusha
sti
adc
dec
test
insl
js
out
adc
mov
pushf
outsl
int
leave
mov
fdivs
pop
ljmp
stos
or
mov
push
movsl
popf
cmp
mov
jecxz
mov
test
out
out
fistpll
or
pop
mov
in
sub
dec
dec
inc
push
push
aas
shlb
pop
push
inc
pop
jmp
push
int
xchg
test
enter
out
xchg
sbb
imul
cmp
popf
imulb
cmp
aas
insb
add
out
pop
push
or
outsb
fwait
push
dec
aam
or
aam
int
xor
jb
sti
mov
xchg
mov
fstpl
in
fs
lods
out
dec
test
cmp
cmpb
mov
lcall
dec
jns
repnz
sub
push
cmc
cmp
pop
pop
sub
out
stc
push
xchg
icebp
enter
and
dec
inc
push
cmp
int
iret
mov
adc
mov
xor
adc
inc
xchg
and
in
xchg
mov
jp
outsb
fisubrl
aam
jne
data16
push
cmpsb
push
mov
adc
cmc
xchg
xor
mov
aad
and
mov
nop
fsubrs
mov
cmc
xchg
jl
mov
setb
ret
xor
test
idivl
push
xchg
xor
mov
jbe
cld
push
pop
test
sbb
jge
cmp
xor
or
push
movsl
pop
push
push
imul
xchg
mov
gs
fwait
lcall
mov
addr16
inc
xchg
lock
xor
mov
pusha
xor
adc
sub
inc
dec
add
sbbb
push
jae
or
leave
fwait
jp
enter
jmp
repz
and
loope
or
loop
and
dec
xchg
jg
xchg
cmp
and
scas
mov
sub
lods
hlt
inc
xchg
mov
loopne
dec
push
cmp
jno
rcl
cmpl
pusha
dec
in
lret
imul
mov
lds
imul
aad
addr16
lret
cmp
jne
and
mov
mov
ljmp
or
iret
sub
lods
inc
mull
fwait
lods
out
cmp
movsl
sbb
loopne
aam
mov
ja
popa
int3
into
adc
scas
inc
out
push
in
loopne
stos
xchg
add
push
or
mov
clc
mov
outsb
jnp
sarb
pop
je
mov
rclb
cmp
cmp
push
repz
in
lds
fwait
jns
loope
pop
mov
fiadds
shll
adcl
in
inc
cwtl
dec
test
mov
lahf
outsl
or
sbb
ret
lea
test
movsl
sbb
cltd
insl
mov
mov
dec
xchg
push
pop
cmpsl
ret
jle
repz
test
xchg
sub
lret
je
mov
and
fildl
mov
aam
mov
sbb
push
cmpsl
lahf
ss
inc
sarb
mov
inc
test
dec
stc
mov
mov
loopne
icebp
sbbb
fsubrp
popa
mov
mov
jmp
inc
inc
xchg
test
push
movsb
pop
add
sbb
cmp
lods
inc
inc
xor
shrl
lds
xor
xchg
imul
popa
jnp
pushf
xor
inc
loope
fidivs
into
adc
push
inc
push
lods
push
jge
popf
xor
in
out
fcmove
ret
pop
repnz
inc
aas
out
pop
mov
add
les
sbb
xor
dec
sar
out
jmp
add
scas
or
mov
fnsave
mov
sbb
adc
jbe
push
fidivl
pop
sbb
into
test
fwait
int3
adc
cmpsl
dec
push
jmp
xchg
or
iret
push
daa
stc
adc
aad
xor
sub
add
out
fcomps
or
stc
mov
inc
fisubs
dec
gs
loope
sbb
aas
stos
ss
orl
pop
inc
les
iret
pop
movsb
mov
dec
mov
pop
out
xchg
imul
push
fbstp
sbb
and
sub
rorl
cwtl
mov
pop
mov
stos
mov
inc
mov
cld
mov
and
cmpsl
jp
pop
bnd
jle
repz
or
or
mov
jnp
cmp
xchg
jge
jo
push
xchg
inc
xlat
add
sahf
cmp
pop
adc
mov
xor
dec
xor
jp
xorl
sarl
testb
inc
xchg
sbb
cmp
subl
lods
pop
pusha
push
call
add
call
push
addb
mov
xchg
inc
imul
icebp
add
push
fwait
pushf
js
leave
mov
xchg
shll
bound
cmp
fcoms
je
cmc
nop
test
mov
lahf
out
xor
and
bound
bnd
enter
lahf
sub
jp
sbb
cwtl
push
sub
push
popf
adc
pop
cmpsl
pop
mov
stos
xchg
push
cwtl
adc
pop
jge
test
mov
sub
insb
sbb
test
lret
sti
add
icebp
xor
outsl
push
pushl
cld
outsl
jne
lea
dec
inc
adc
or
sbb
mov
push
push
mov
dec
and
rorl
outsb
jbe
cli
mov
cwtl
mov
orb
stc
xorl
rclb
mov
xor
sahf
loop
in
scas
inc
mov
outsl
push
test
sbb
jo
or
and
push
push
jmp
jp
loope
dec
notl
dec
mov
fcoms
in
aad
lock
lods
inc
adc
dec
loopne
ds
out
mov
popa
mov
pop
cs
negl
aas
jl
jge
jno,pt
out
js
ja
mov
inc
movsbl
push
fwait
pop
std
xor
out
xchg
inc
adc
in
xchg
pop
ret
call
pop
out
mov
mov
mov
je
xchg
adc
pop
lods
xchg
mov
xlat
xchg
or
not
bnd
mov
int
std
nop
jg
stos
cli
dec
out
popa
mov
jmp
stos
addb
int
or
test
inc
cmpsb
or
mov
mov
mov
dec
push
push
sti
stos
xchg
xchg
push
adc
push
mov
shlb
fidivrl
clc
fidivrs
pop
xor
outsb
inc
cltd
movb
or
movsl
test
adc
ja
add
jb
pop
out
push
cld
lods
mov
out
test
sub
in
inc
xchg
out
cltd
add
test
in
cld
mov
push
jg
leave
fucomi
ds
sub
mov
stc
mov
cs
inc
icebp
out
mov
or
jnp
ficoms
sbb
inc
pushf
jo
jno
repz
cltd
notl
lret
dec
jp
mov
or
dec
lods
jmp
inc
cmp
cli
mov
leave
xor
xor
movsl
adc
push
ljmp
jno
fwait
cld
fcomi
cmpsb
mov
pop
cltd
inc
cmpsl
rolb
and
xchg
enter
fdivr
or
and
sar
and
pop
repz
popw
sub
ret
movsl
nop
xor
lds
inc
push
sbb
test
loope
cmp
jmp
aad
adc
push
push
stos
imul
pop
mov
push
cs
daa
addr16
in
mov
bnd
or
dec
sbb
mov
push
call
test
test
xor
cmp
lds
cmp
pop
cmp
xchg
xchg
sub
jbe
jnp
shrb
jle
js
jg
lods
ret
dec
adc
dec
loop
cmp
fwait
je
jns
mov
test
push
addr16
and
aad
and
cmpsb
sbb
rcrl
int3
daa
ljmp
xchg
adc
or
enter
mov
insb
add
loope
mov
das
ret
cmpsl
int
mov
xchg
mov
mov
iret
jnp
mov
mov
negb
test
sbb
add
jg
leave
mov
fsubrs
adc
repnz
test
jne
adcb
cltd
ret
mov
push
fistps
sbb
mov
jmp
sahf
mov
rorb
push
jmp
nop
cltd
out
xchg
repz
jbe
xlat
sub
lcall
bound
rcrl
cmp
call
pusha
das
and
sub
mov
rcrb
stc
push
int
mov
test
sub
call
jecxz
aam
fdivs
or
add
imul
cmp
data16
shl
sbb
ficomps
and
scas
ds
mov
pop
or
xor
dec
fnstsw
mov
pushf
dec
push
fstps
or
jle
xchg
frstor
pop
cwtl
push
or
push
jmp
jecxz
clc
jae
mov
jne
in
std
xchg
pop
test
out
inc
jb
mov
nop
dec
mov
pop
scas
sahf
adc
cmp
jmp
andb
xchg
fs
pop
cmp
ljmp
add
outsl
mov
mov
add
fsubrl
xor
int3
gs
jb
mov
ljmp
dec
insb
outsb
add
mov
fisubrl
xlat
test
aas
xor
mov
push
push
mov
sbb
pushf
mov
fbld
sub
lds
mov
pusha
jle
dec
mov
enter
cld
dec
lret
adc
add
mov
jbe
inc
xchg
call
or
fisubl
push
loope
xor
pop
addb
jnp
sahf
push
xchg
lcall
hlt
and
out
sti
sub
enter
add
enter
push
insl
push
cwtl
sahf
ja
enter
push
leave
mov
xchg
scas
dec
enter
imul
orb
les
mov
and
shlb
into
inc
je
xchg
imul
jmp
sti
or
ret
test
mov
daa
out
adc
and
scas
inc
insl
inc
sbb
daa
mov
xor
inc
pminsw
jb
jo
xchg
call
xor
leave
test
or
scas
popf
adc
pusha
cmp
push
out
pop
frstor
ret
rcrl
jns
inc
xor
sti
pop
mov
xor
push
cmpsb
test
or
adc
scas
test
lret
mov
out
xor
xlat
add
add
sub
lea
push
lea
mov
loopne
shll
adc
or
stc
cmpsl
push
mov
jnp
sbb
push
pop
push
test
mov
out
popa
pop
and
lock
insl
mov
pop
cmc
inc
insl
adc
dec
inc
mov
adc
and
add
cld
imul
cmp
mov
jl
popf
and
stos
dec
scas
ret
pop
iret
shrl
aad
mov
cs
pop
and
pop
jl
leave
pop
and
lods
and
test
add
cmp
fs
fisttpll
xchg
pop
nop
mov
or
pushf
and
addr16
imul
cld
push
cwtl
das
mov
xchg
xchg
fsubs
sbb
movsl
in
cmp
push
push
movsb
add
movsl
cmp
shll
inc
or
sbbl
js
lods
add
scas
cmc
push
test
mov
movsb
in
mov
dec
or
and
movsb
aaa
bound
test
pop
movsb
sub
aad
aas
fwait
popf
repnz
shrb
mov
inc
dec
pop
xchg
mov
daa
lods
cltd
test
out
xchg
xor
push
xchg
out
lret
fstps
jns
add
sbb
shlb
scas
mov
shlb
xor
push
inc
pop
push
dec
sbb
daa
push
push
in
test
sub
icebp
negb
sub
cld
shlb
pushf
xchg
push
rorb
movsb
sub
adc
lcall
mov
and
pop
push
rcll
xor
fiadds
push
fucomp
out
into
pop
or
add
inc
lods
les
out
pushf
mov
out
js
fcomps
jnp
sbb
aaa
jb
or
jecxz
sti
mov
xchg
addr16
leave
mov
cmp
outsb
push
stos
lahf
jmp
mov
push
mov
or
mov
ja
divl
pop
adc
inc
lods
adc
fnstcw
or
nop
mov
pop
mov
imul
and
and
cmp
jl
ja
xchg
cli
and
xor
in
aam
jmp
pop
mov
mov
pop
or
sub
leave
inc
scas
jae
mov
push
pop
ds
popa
les
aad
out
call
aas
mov
mov
jb
jo
sub
jbe
sub
and
pop
or
cmpsl
cmp
std
and
loopew
lods
aaa
cmp
jo
fwait
inc
pop
leave
mov
sbb
xor
xchg
xor
push
adc
loope
add
push
mov
mov
cmc
pusha
inc
mov
jae
aam
push
push
cmc
push
or
lret
ret
in
mov
cmc
rcrb
mov
jmp
mov
lea
pop
lods
mov
jns
cld
sub
jne
sbb
stos
xsaves
lcall
mov
sub
out
adc
mov
inc
inc
mov
xor
jo
or
cltd
inc
dec
cwtl
insl
insb
ret
dec
ret
add
push
mov
jnp
jb
mov
pop
aad
add
mov
mov
lds
sbb
jnp
movsl
dec
mov
mov
jmp
and
push
xchg
push
test
inc
mov
and
mov
push
sub
stos
mov
mov
fidivs
sub
lret
jb
in
push
add
and
repnz
pusha
push
pop
xchg
mov
scas
out
push
dec
jb
push
cs
and
sbb
mov
gs
repz
inc
xor
shll
xlat
incb
hlt
pop
push
addr16
jo
and
inc
insl
fstp
and
outsb
jo
xlat
outsl
popf
insb
testb
pop
adc
leave
test
mov
ret
mov
repz
loope
and
push
push
dec
dec
and
movsb
arpl
cmp
cmp
popf
or
cmp
jo
cmpsb
lahf
jle
push
push
orb
mov
xchg
cmp
mov
in
or
sbb
pop
hlt
sub
or
fld
push
aaa
push
cmp
pusha
push
sub
and
scas
dec
aaa
shrb
ret
xor
popa
fldcw
inc
cwtl
push
pop
in
sub
sbb
adc
xchg
aad
cmp
in
push
lgs
mov
aas
test
stos
jne
repnz
jg
mov
jmp
and
test
xchg
xor
loope
cmp
add
out
aaa
sbb
xchg
cmpsb
adc
cwtl
fwait
test
or
mov
filds
filds
stos
or
fisttpl
xlat
cmpsb
mov
add
pop
fstpt
fstpl
fwait
jne
out
mov
pop
repnz
sbb
sbb
ss
mov
pop
adc
mov
and
rorl
dec
pop
adc
loopne
insl
cs
and
insb
out
lret
mov
outsl
repnz
gs
push
loop
adc
js
arpl
pop
loopne
jecxz
mov
mov
nop
sub
xlat
add
lods
mov
cmp
aas
dec
pop
data16
lgs
dec
sub
aad
popf
loope
and
les
mov
pop
mov
mov
mov
fdivl
loop
inc
dec
sbb
shll
iret
mov
hlt
pop
jg
lods
data16
lods
negl
push
inc
and
dec
mov
addr16
jo
adc
and
jb
lock
jmp
jp
stc
xchg
sub
and
es
mov
xlat
sbbl
cltd
push
mov
cli
add
sbb
inc
mov
ret
call
push
xlat
or
pop
mov
or
jmp
bound
jbe
fs
data16
test
enter
je
fwait
xor
add
mov
sbb
aam
addl
pop
jo
push
loope
push
adc
ret
cmp
xchg
sub
inc
out
pop
mov
jbe
mov
gs
iret
mov
sub
outsb
jp
test
jge
scas
inc
ljmp
fildll
jge
xchg
adc
mov
shlb
jmp
dec
add
adc
stos
cs
adc
and
call
lcall
mov
mov
cmp
inc
push
cs
sbbb
pusha
add
pop
cmp
in
ja
in
fsubrl
jbe
inc
out
adc
popf
data16
cmp
je
sbbl
push
jmp
jge
push
stc
cltd
or
out
js
fldenv
mov
roll
mov
callw
mov
pusha
lock
push
aas
popf
iret
imul
or
js,pn
pusha
adcb
into
fsts
enter
inc
dec
push
dec
inc
loope
call
sahf
inc
sbb
enter
mov
in
mov
clc
es
and
jle
js
test
adc
cmp
aas
mov
arpl
xor
push
push
sbb
scas
push
jge
leave
das
clc
sub
push
push
mul
fstpl
or
imul
inc
fs
pop
dec
push
jecxz
mov
enter
popf
popa
sti
test
xchg
nop
adc
pop
int
lahf
and
clc
and
inc
mov
xchg
mov
sbbl
push
es
dec
xchg
cmpsl
xchg
ljmp
mov
pusha
mul
push
jl
mov
mov
xor
loope
adc
jb
inc
loopne
pop
inc
popf
pop
cmpsb
scas
js,pt
and
rorl
icebp
xor
pop
out
xchg
add
mov
outsb
ret
xchg
scas
fdivrs
xor
sti
jmp
cld
adc
dec
inc
lcall
cmpb
popa
push
or
dec
data16
lret
or
lret
mov
test
enter
jp
adc
cmp
xor
nop
xor
das
or
mov
cltd
adc
cmp
xor
sti
jmp
ljmp
lea
add
leave
leave
and
data16
js
xchg
popf
and
les
mov
testl
and
js
daa
mov
sub
addr16
xchg
xor
inc
add
push
push
xor
jmp
cmpsl
pop
push
leave
push
outsl
or
xchg
pop
lahf
daa
jae
adcb
adc
and
cmp
add
ljmp
je
insb
scas
sbb
cmp
push
sub
idivb
pop
cmp
cmp
pop
sbb
nop
idivb
lcall
cltd
addb
test
mov
adc
imul
mov
daa
jbe,pt
jg
cmpsl
dec
mov
xchg
xor
fisttpll
dec
adc
or
ret
or
imul
inc
jp
cmp
insl
jmp
outsl
ja
adc
xor
scas
and
data16
mov
cmp
sub
loopne
jbe
inc
stc
pop
push
subl
ss
je
inc
icebp
es
fistl
les
sbb
call
or
cmp
mov
or
adc
push
call
hlt
mov
sbb
arpl
loop
and
add
cwtl
xchg
pop
or
cmp
stos
and
sti
lret
pop
push
into
xchg
mov
push
lcall
imul
jo
cmp
pop
xor
popa
add
sahf
sub
jbe
cmpsb
fisubs
xor
mov
mov
inc
dec
xor
and
jo
adc
xchg
call
sbb
mov
or
fadds
insl
xchg
movsl
arpl
fmuls
and
ljmp
xchg
push
stos
dec
or
scas
ljmp
inc
cmpsl
or
arpl
nop
pop
adc
fs
xor
or
mov
arpl
and
jg
push
loope
or
push
loope
ds
inc
jmp
jmp
add
inc
sbb
cmp
test
and
mov
popf
inc
ja
mov
lcall
add
enter
xor
nop
fs
xlat
inc
inc
mov
std
jge
pop
lods
xchg
and
xor
fnstenv
and
testb
scas
xchg
bound
fxch
jmp
sbb
rol
pop
add
int
jecxz
xor
dec
jo
es
mov
push
pop
and
mov
push
push
dec
repnz
inc
es
dec
mov
outsb
mov
mov
push
push
rclb
jg
mov
int
add
adc
jmp
in
sub
lock
sub
outsl
movsl
pop
insl
sbb
push
cli
hlt
mov
hlt
adc
adc
jg
popa
sbb
cwtl
or
in
cmp
movsb
pop
loopne
add
pop
push
inc
jmp
push
and
push
mov
cld
xchg
cmpsb
lds
push
bound
lock
je
imul
lahf
rol
xchg
out
inc
fstpt
aad
outsl
cld
lret
lret
xor
inc
bound
push
adcb
lods
sub
jo
stc
nop
movsl
mov
es
inc
mov
xor
sbb
lahf
popa
mov
add
cwtl
or
jne
dec
push
and
xlat
or
fs
mov
xor
xchg
sbb
inc
arpl
cmpsl
ds
push
repz
testl
jbe
fcmovne
push
fnsave
fisubrl
dec
or
mov
lods
in
cmp
je
xchg
popa
stos
std
adc
sbb
mov
mov
add
or
andb
or
xchg
cmp
jecxz
loope
std
shlb
ret
hlt
sub
jecxz
pusha
xchg
sub
add
jp
das
nop
or
xor
mov
and
xorb
inc
add
adc
pop
push
xor
clc
adc
xor
leave
sub
clc
notb
push
fisubrl
xchg
cs
pop
pusha
lahf
daa
mov
out
daa
inc
add
and
and
pop
xchg
lds
cmpsb
push
test
and
pop
and
push
xor
shl
fs
cmp
popa
or
mov
arpl
test
stc
cmp
inc
fs
lret
test
gs
jno
adc
xlat
push
clc
xchg
cmp
push
inc
pushf
pusha
xor
mov
call
sub
sub
movl
jnp
xchg
push
lret
aam
mov
pop
es
sahf
into
and
push
xchg
orb
iret
das
pushf
push
xor
add
pusha
outsb
mov
test
shrl
inc
mov
jb
xchg
mov
add
pop
imul
sub
gs
inc
mov
mov
and
pop
xlat
jmp
push
jno
stos
jp
lret
cld
xorb
cmc
stos
ret
jle
sahf
adc
and
in
orl
inc
pop
jo
jg
push
push
adc
add
jnp
cld
rcll
cmpb
cli
sbb
arpl
mov
push
out
std
std
or
ljmp
test
mov
adc
cmpsb
mov
lods
push
je
xor
call
mov
jl
xchg
stos
psubusb
sbb
pop
inc
cmc
jno
stos
mov
dec
out
ja
loopne
mov
test
dec
adc
jne
pop
adc
lods
lea
jno
andl
mov
sub
mov
xchg
push
outsb
and
adc
mov
popw
push
add
and
add
xchg
mov
hlt
push
nop
loope
and
cmpsl
add
nop
imul
mov
ja
push
nop
scas
fnstsw
push
jb
fsubrl
jge
out
dec
pop
repz
jp
inc
xchg
sbb
xchg
mov
inc
cs
xor
mov
xchg
ljmp
pop
cmp
push
push
xor
rol
inc
repnz
dec
fcmovb
loope
rorl
les
push
dec
je
scas
cs
adc
xchg
icebp
adc
mov
lahf
cmp
xchg
add
mov
add
push
inc
fcomps
insb
xchg
test
iret
or
cs
cmpsl
in
insl
jmp
pop
das
stos
cmp
xchg
pushf
jne
adc
xor
in
call
cmp
std
push
scas
dec
rcll
mov
dec
negl
fiaddl
call
mov
lock
popf
and
jo
ror
xor
mov
push
pop
push
jb
aas
test
fwait
adc
int3
outsb
clc
cmp
ljmp
out
nop
adc
shl
cltd
push
sub
in
test
jno
cli
pop
shr
mov
cmp
lds
call
jle
add
mov
xchg
or
icebp
enter
ljmp
pop
cmp
pop
mov
pop
mov
fwait
xor
ljmp
cmp
lock
pop
ret
cwtl
sti
lds
xor
mov
ljmp
in
out
movsl
add
sbb
sub
int
or
jns
mov
mov
cld
data16
inc
sub
mov
pushf
enter
sbbb
in
lcall
pop
call
mov
std
aam
scas
ficoml
and
jl
push
arpl
mov
test
pop
cmp
aaa
push
test
dec
or
mov
aas
push
cmc
jo
jmp
xor
shr
mov
jae
test
xchg
fdivrp
les
pop
sub
adc
enter
mov
pop
rcrb
push
push
adcw
mov
adc
es
insl
push
xchg
sahf
hlt
push
das
loop
adc
loope
fwait
xor
adc
add
and
sub
das
sbb
cmc
pop
imul
ret
fisubrl
popa
and
mov
sti
ror
push
jecxz
dec
out
in
inc
sbb
aam
addl
add
pop
sti
push
push
in
lods
dec
cli
ds
pop
jb
sti
xchg
test
sbb
add
pop
fcmovnu
fwait
or
pop
hlt
testl
jnp
repz
push
inc
les
inc
aas
pop
dec
out
jmp
lret
pop
stc
add
mov
cmp
rclb
aas
leave
popa
iret
int3
loopne
imul
xchg
out
and
jno
mov
jno
mov
add
push
mov
fdiv
xchg
inc
mov
jp
in
popf
out
mov
add
dec
cld
sbb
sub
xchg
ja
cmp
arpl
or
inc
out
movsb
sbb
cmp
ds
enter
cwtl
xor
adc
mov
adc
leave
xchg
add
sbbl
inc
pop
mov
arpl
fwait
arpl
dec
jns
insl
in
sbb
fstl
pop
scas
add
sti
pushf
data16
push
cmp
adc
sbb
test
mov
pop
in
or
inc
and
sbb
aas
imul
mov
lret
clc
jl
aam
adc
jbe
out
push
adc
sahf
data16
jecxz
adc
add
push
or
ljmp
sbb
popf
sti
ror
repnz
insb
scas
or
xlat
push
mov
mov
fldenv
mov
jle
inc
pop
lahf
sbb
mov
sbb
mov
jge
or
adc
test
gs
jbe
lret
mov
adc
lock
mov
push
bound
jge
push
fwait
pop
lods
push
lods
add
xchg
mov
repnz
mov
frstor
add
out
xlat
lds
pop
js
gs
sbb
sub
iret
into
mov
ja
dec
test
repz
or
and
pop
cmp
insb
sbb
test
cmp
cwtl
lahf
or
and
adc
popl
mov
addr16
xor
mov
inc
mov
mov
fisubl
aad
std
mov
jnp
xchg
pop
sbb
clc
imul
inc
ret
xchg
sbbl
call
mov
sbb
lods
clc
les
test
xchg
dec
mov
dec
mov
adc
or
cld
jg
lods
cld
rolb
mov
sti
nop
imul
xchg
sar
int3
adc
jle
sahf
das
mov
loope
lods
push
js
fnsave
stos
push
cli
lret
add
ret
sub
pop
mov
jbe
aas
jae
loope
and
fiaddl
outsl
push
loope
arpl
mov
lahf
loopne
xlat
repnz
inc
fimull
adc
cltd
popa
mov
inc
mov
lock
outsb
sub
ds
into
into
call
or
adc
fstl
push
enter
cmpsb
cmpsb
mov
mov
lea
xor
daa
out
loope
in
loope
ret
sub
dec
xor
clc
jge
inc
lock
sbb
je
jnp
cli
jge
fs
push
dec
cmp
dec
stos
cmpsl
dec
jb
dec
ljmp
pop
call
stos
and
out
xchg
add
cmp
data16
loopne
imul
mov
hlt
or
mov
loopne
mov
inc
rep
sub
in
test
mov
icebp
adc
dec
test
lret
push
pop
push
mov
int3
and
push
data16
cmpl
dec
aam
in
mov
es
aad
cmpsb
cmpsl
loope
fadds
pop
mov
jmp
sub
dec
int3
arpl
out
mov
lds
insb
loopne
div
imul
mov
mov
adc
jg
adc
push
mov
pshufw
int
add
imul
loop,pt
sbb
fstl
jp
cmp
cmp
in
pop
ret
lcall
sbb
push
stos
in
fcompp
mov
add
notb
or
cmp
je
dec
push
add
inc
sub
pop
movsl
icebp
rcrl
test
mov
and
push
into
or
and
fsubr
and
push
push
mov
in
pusha
fidivl
rcrl
jge
or
fwait
add
push
xor
in
data16
xor
mov
lret
push
in
scas
test
aaa
mov
pop
scas
movsl
xchg
jmp
daa
sbb
mov
sbb
mov
push
movsb
xchg
imul
test
lret
push
add
lahf
test
mov
jge
sahf
imul
sbb
scas
adc
mov
cmp
mov
je
loop
dec
fdivs
lret
das
mov
rcr
fstpl
cmp
sbb
out
sub
mov
cmc
lods
in
cmpsl
in
xlat
das
cmc
insl
btr
pop
jnp
adc
push
out
dec
fisubs
ja
and
push
loop
inc
sbb
or
aad
mov
lods
stos
fdivrl
jl
int3
ror
pop
incl
inc
pushf
mov
sub
push
movsb
lock
lahf
push
add
xchg
je
das
ret
xor
in
jmp
inc
pusha
inc
divb
enter
stc
scas
movsl
adc
cmp
adcl
roll
inc
xchg
add
lock
sub
rolb
stos
in
xlat
pop
or
test
or
mov
jne
mov
js
xor
shrb
add
adcb
pop
mov
call
cmpsl
out
adc
cmp
xorl
insl
mov
push
loop
inc
in
mov
sbb
fidivl
mov
jmp
loope
add
dec
stos
cvtdq2ps
movsb
cmc
push
inc
pop
inc
test
dec
fildl
jl
gs
movsl
xor
fdivr
fbld
push
mov
xchg
das
jle
aam
mov
iret
repnz
push
and
xchg
mov
ds
xchg
cs
sar
xor
dec
daa
std
pop
cmc
shr
shrl
bnd
aas
or
xchg
adc
cmpsl
out
ret
mov
pop
jecxz
sub
adc
dec
xor
mov
pushf
aas
push
xchg
push
mulb
mov
jmp
sti
ljmp
mov
fists
shl
aaa
jecxz
popf
in
lock
mov
pop
push
mov
push
mov
xlat
rol
cmp
in
movsl
fcmovb
pop
or
mov
mov
mov
ret
push
mov
test
cmp
pop
mov
ja
mov
in
fisubl
jae
adc
les
jge
sbb
sub
imul
cmp
dec
inc
decl
out
hlt
adc
icebp
mov
sbb
and
sub
nop
test
out
psraw
or
mov
fadds
add
imul
shll
js
lods
jge
rcpps
xchg
sub
jecxz
mov
daa
mov
xor
jmp
test
and
cmp
mov
rcrl
jp
rcrl
fists
adc
rolb
iret
lods
insl
mov
das
push
push
loop
fnstsw
or
pop
jne
xchg
insb
push
cmpsl
push
outsl
in
dec
xchg
ds
lret
pushf
xor
mov
cmc
enter
jnp
mov
daa
xor
bound
subb
or
and
jp
iret
mov
push
lods
bound
jae
repnz
inc
cmp
in
into
push
push
jo
ljmp
jp
mov
xchg
clc
lods
ret
mov
loope
roll
je
shl
and
std
adc
xor
popa
hlt
sbb
add
in
sti
cmp
jns
push
lds
and
pop
xchg
fmull
test
mov
in
std
in
ljmp
pushf
enter
test
push
rorb
sahf
sarl
insb
filds
insb
or
dec
sbb
mov
push
and
shlb
dec
pop
imul
je
es
shlb
sarl
jnp
cmpsb
pop
push
adc
bnd
cmp
shrl
add
adc
ja
xor
out
movb
jne
lahf
xor
inc
sbb
ror
mov
pop
mov
data16
push
std
cmp
cli
pop
adc
mov
ret
pop
mov
sti
out
stos
loopne
fdivl
add
inc
xchg
jbe
loopne
hlt
or
lds
mov
mov
sub
je
add
sub
or
sarb
lret
sub
jbe
jnp
es
mov
adc
mov
repz
inc
int
xor
dec
pop
or
xchg
iret
sahf
ja
aam
jecxz
or
rcll
cmp
scas
mov
hlt
notl
es
pop
lret
dec
in
lcall
cld
push
ja
mov
stos
loop
ficoml
outsl
xchg
push
inc
jge
test
stos
sbb
sbb
inc
std
enter
dec
fs
fldt
pop
lea
push
in
insb
mov
sahf
es
sbb
sub
cmp
dec
jge
adc
insl
and
and
add
call
mov
ret
jbe
sbb
sti
inc
int3
mov
test
jo
inc
push
mov
xor
jnp
or
mov
push
jae
test
out
ret
outsb
inc
cmp
cmp
mov
jnp
push
mov
xor
jg
push
mov
mov
mov
lds
nop
mov
or
std
or
mov
or
jno
pop
loopne
lahf
ret
dec
pop
mov
lds
lcall
and
lldt
je
or
stos
sbb
xchg
in
test
inc
jae
and
fiadds
or
mul
mov
sub
mov
xchg
sub
popa
mov
xchg
cmp
adc
pop
scas
repz
sub
cmpsl
add
fsubs
mov
jns
test
out
pushf
cli
and
cmc
mov
rcll
cs
and
nop
jne
mov
cmpsb
pop
jecxz
or
pop
sub
add
stc
or
nop
test
cmpsl
jb
mov
xchg
and
adc
call
es
mov
cmp
lods
popf
pusha
enter
inc
stc
lret
bound
imul
mov
fisubrl
popf
mov
sub
and
and
mov
test
out
cli
jno
movsb
push
insl
aam
fstpl
rcrb
mov
mov
das
dec
mov
and
sub
fwait
pop
xor
aas
lcall
pop
in
out
inc
sub
in
rcr
pop
out
fs
je
mov
js
xorl
xor
sub
push
pop
mov
fdivp
cmpsl
test
cmp
pusha
mov
sbb
adc
mov
outsl
loop
xchg
cwtl
jp
dec
push
out
jge
lods
mov
leave
in
cmp
sbb
notl
movsb
repnz
or
ror
adc
xchg
sub
and
add
push
mov
push
dec
subl
dec
fdivs
js
pusha
push
imull
add
pop
mov
adc
scas
ret
insb
fcomps
pop
mov
ljmp
popf
sub
pusha
mull
repnz
fwait
or
mov
and
subb
popa
stc
adc
jle
fdivl
mov
jg
xor
push
jnp
push
pushf
xor
cltd
mov
or
xor
out
mov
push
in
dec
popa
xchg
cmp
jns
or
pop
fwait
mov
lahf
call
push
add
sbb
int3
arpl
pop
adc
loopne
adcl
mov
and
xor
fsubrp
sti
push
cltd
push
adc
rclb
popl
xchg
mov
stc
sbb
cmp
insl
and
xor
jo
cmpsl
test
xchg
add
mov
enter
adc
lods
test
pop
mov
push
sahf
xor
or
mov
mov
push
aam
mov
xchg
mov
mov
sbb
jns
mov
in
sbb
sbb
mov
cmpb
sbb
inc
test
or
adc
pop
imul
and
arpl
cmp
pop
mov
mov
leave
push
fdivs
adc
lods
pop
fimuls
movsl
jnp
jb
fldl
cli
pop
fnstsw
xchg
jo
adc
sarb
je
push
add
jmp
idivb
pop
scas
adc
scas
dec
ja
popf
mov
jo
clc
mov
fsts
sub
inc
xchg
dec
or
push
jmp
mov
mov
hlt
aam
call
or
outsl
xor
outsl
mov
jae
sub
mov
shrb
in
cmpsl
push
movsl
adc
and
and
cmp
mov
cmp
cwtl
aas
leave
xchg
lods
test
dec
out
lret
bound
add
shl
or
mov
cmp
inc
mov
repnz
push
inc
sbb
jnp
push
mov
or
fwait
mov
jmp
mov
xor
cmpsl
pop
cmc
aam
inc
dec
rcrb
push
popa
aaa
int
adc
mov
pop
repnz
jmp
jp
dec
sbb
sbb
or
loop
daa
mov
sahf
cmpsb
inc
testl
xor
push
lcall
mov
jg
std
sub
mov
div
mov
mov
sbb
xchg
sub
jl
jb
push
fsts
cmp
push
jb
and
or
inc
std
adc
jmp
dec
sbb
jp
movsl
adc
repnz
push
jo
stos
jge
fucomi
setl
pop
addr16
or
mov
lock
movsb
repnz
mov
rcrb
into
cmovbe
test
aas
shrl
test
and
sub
dec
push
negl
sub
je
push
aam
cs
sti
xchg
sub
xchg
and
ss
or
pusha
jne
nop
mov
pop
inc
pop
adc
cmp
call
or
adc
cli
mov
sbb
iret
mov
sub
push
sub
cmpsl
out
outsl
inc
jle
xor
cwtl
cmp
or
icebp
cmpb
clc
xlat
movsb
ret
mov
pop
dec
cld
xchg
inc
dec
cs
mov
fdecstp
lret
jg
cmpsb
mov
stos
inc
push
dec
test
mov
push
pop
adcb
andl
add
mov
dec
jecxz
fdiv
pop
jp
jae
push
insl
push
bound
cmpl
testb
sbb
idiv
out
pop
out
pop
mov
sbb
inc
and
xchg
or
addl
jg
jb
imulb
call
jle
mov
inc
into
jle
les
sub
xor
pop
frstor
pop
popa
psrad
lea
pop
xor
ss
dec
dec
cwtl
jmp
inc
fcmovb
push
xor
cwtl
sbb
je
pop
lahf
call
subl
int
push
in
add
mov
addr16
popf
cwtl
add
push
xchg
and
dec
or
cmp
lcall
adc
jg
sbb
int
add
js
scas
push
lea
scas
sbb
inc
ja
push
mov
xchg
dec
dec
pushl
add
pusha
push
inc
sarl
jo
in
test
jne
push
sub
xchg
mov
add
test
cmp
add
inc
out
test
lods
aam
xchg
or
or
imul
fucom
ja
pop
push
jp
jp
shrb
fisubs
dec
push
and
dec
pop
sbb
in
push
mov
aam
jmp
stos
xchg
xchg
pop
repnz
mov
jns
in
ljmp
pop
or
jbe
pushf
jo
pop
xchg
xchg
clc
das
ds
cmp
repnz
jmp
int
stos
cmp
mov
mov
jne
lret
xchg
das
lds
jno
mov
push
shrl
sti
popa
enter
inc
lods
jns
dec
stos
int
int
jbe
dec
cmpsl
movsl
jl
cmp
stc
add
mov
shlb
add
and
aad
push
bnd
dec
dec
mov
jmp
mov
pop
into
mov
mov
dec
sub
cmc
insb
cmp
mov
adc
lods
jge
push
aaa
nop
sahf
xor
xchg
mov
nop
loop
mov
scas
jg
push
imul
push
jl
push
int3
pushf
inc
fbstp
int
mov
or
dec
push
mov
cmp
sahf
xchg
xor
std
idivb
mov
ret
les
test
ret
or
jl
dec
mov
shlb
or
cli
in
mov
push
movsb
mulb
sub
push
addr16
push
add
and
popa
xor
dec
cld
aaa
pop
xor
dec
push
popf
sub
das
mov
fwait
hlt
ja
dec
dec
pop
fisubl
daa
mov
push
mov
insl
jle
mov
lcall
xorb
gs
pop
mov
inc
add
frstor
push
sub
movsl
cmp
pop
dec
int
ret
rcrl
loopne
cmp
mov
inc
sti
cmp
repz
jmp
imul
insb
rcl
out
pop
dec
pop
cmpsl
jge
push
sub
cwtl
filds
cmc
arpl
repnz
pop
and
aas
adc
jno
xchg
aam
dec
inc
adc
fildll
ficompl
add
push
fucom
and
daa
jge
jg
dec
sub
repz
sbb
lret
and
clc
or
xor
jnp
stc
mov
out
add
pop
sub
pop
movsb
test
popa
mov
push
jo
xchg
pushf
into
les
jp
push
pop
movsl
cmp
jge
add
mov
sub
cmpsl
pop
cmp
js
push
mov
movsb
das
js
popa
or
mov
enter
and
out
pop
jl
mov
dec
jb
arpl
in
push
lret
jge
xor
push
lea
sbb
mov
inc
push
pushf
rcll
fadds
jo
scas
inc
mov
call
sub
in
mov
ljmp
rcl
outsl
mov
ja
adc
cmp
jge
mov
push
pop
sar
rolb
mov
and
aad
gs
test
xlat
jecxz
dec
in
lret
lret
xlat
loop
imul
jp
inc
imul
cmp
mov
xchg
mov
scas
xchg
test
cmp
shl
lds
sahf
stc
pop
cmpsb
jmp
sahf
sbb
loop
xchg
clc
or
sub
xor
push
orl
rcll
les
insb
aam
fld
pusha
xchg
add
xor
aaa
pop
inc
icebp
cld
hlt
repz
and
and
js
sub
sub
hlt
and
jl
mov
pop
jle
jecxz
adcb
xor
lds
push
ljmp
and
sbb
xchg
inc
clc
fbstp
scas
in
andl
testl
adc
enter
cs
roll
rclb
mov
movsl
mov
push
jmp
lock
cmp
push
es
movsb
cmpsb
and
add
lahf
xlat
hlt
cmp
in
lahf
ss
push
test
inc
bound
mov
push
and
movsb
cmp
loop
cli
sarl
pop
jo
data16
popf
leave
popf
xor
inc
xlat
push
test
jg
mov
test
inc
sbb
pop
lea
fnsave
add
les
sbb
pop
xor
lock
add
insb
jae
xsha1
cmpsb
dec
aad
stc
mov
lret
hlt
adc
clc
inc
les
push
fnsave
dec
fucomip
rcll
cmp
push
in
test
pushf
xor
xchg
sub
mov
lds
imul
pop
inc
add
call
cmp
dec
xchg
mov
pop
repnz
shlb
or
and
mov
outsb
jecxz
stos
lea
int3
enter
add
pop
ficompl
ds
dec
es
add
mov
fidivs
xchg
lea
jne
pop
in
jnp
aas
arpl
xor
data16
loope
incl
push
push
add
mov
int3
mov
aas
repz
scas
mov
mov
test
imul
repz
je
push
out
aas
int3
fs
mov
subb
repz
stc
nop
mov
js
pusha
push
in
add
cmp
leave
cli
out
test
xor
stos
inc
inc
push
xlat
outsb
mov
jl
push
outsb
dec
js
cmp
jnp
pop
add
add
mov
lcall
aad
outsb
add
inc
mov
adc
loop
ds
sub
fwait
mov
push
and
mov
lret
jp
mov
dec
mov
mov
shrl
jmp
sbb
aas
icebp
pop
jbe
dec
cmp
mov
gs
xchg
mov
ja
mov
lret
jmp
lret
bound
add
jle
jno
jbe
pop
lahf
mov
pop
and
push
call
je
outsl
sub
in
aam
lcall
cmp
fcomps
rol
fisubl
fwait
out
insl
cltd
loopne
or
push
xchg
cltd
xor
aaa
sbb
push
cmp
mov
fnsave
inc
mov
dec
xchg
inc
cmp
lock
pop
insb
stos
dec
cld
xchg
add
or
push
jnp
ds
pop
push
or
ficoms
jbe
push
push
leave
lds
int
popa
aad
xchg
stos
mov
and
dec
adc
movsl
sub
dec
stos
pop
inc
xchg
popf
mov
sub
add
push
sub
and
scas
push
dec
cltd
or
aas
int
mov
inc
mov
ss
sub
pop
outsl
push
jecxz
popa
lcall
push
xchg
test
idivl
shr
jge
mov
sub
mov
sub
jecxz
in
add
out
lds
loope
adc
and
dec
jnp
push
fwait
les
and
cltd
sbb
dec
fidivs
fistl
jae
shll
sbb
cmp
push
sahf
nop
pop
je
mov
xlat
mov
cmc
mov
mov
aaa
sub
jecxz
adc
xor
cmpsb
mov
sahf
testb
jb
xor
movsl
ret
adc
into
and
add
cltd
sbb
mov
stos
incb
test
inc
decl
enter
lods
bound
xchg
int
cld
div
repnz
add
mov
sub
mov
mov
mov
push
mov
mov
inc
repnz
int3
pop
data16
add
pushf
repz
xlat
lods
cs
test
lret
push
and
lahf
loopne
pop
in
add
xor
faddl
inc
xor
and
pop
cli
aas
sbb
and
js
pusha
iret
xchg
icebp
and
subb
sub
clc
pop
jbe
mov
lock
rorl
movsl
sub
lret
dec
sub
aam
cltd
inc
mov
add
mov
ss
inc
sbb
loopne
inc
sub
in
cmpl
or
xchg
xchg
sub
cmp
xchg
mov
dec
mov
cmp
ss
hlt
popa
lods
data16
or
in
cmp
inc
pop
pop
pop
cld
xchg
dec
pop
lods
mov
sbb
sbb
cmp
fsubp
mov
les
ret
shrl
adc
fists
hlt
mov
iret
cmpl
cmp
pop
aam
out
in
orb
inc
mov
pusha
ss
es
fldt
jb
bound
pop
adcl
pop
imul
stos
jo
xlat
cmp
inc
pop
not
lods
adc
and
fildl
cltd
lock
daa
in
adc
jne
pop
outsb
adc
add
and
inc
test
hlt
inc
fildll
mov
lods
call
test
icebp
nop
imulb
imul
push
add
xor
push
data16
mov
fiadds
mov
mov
xchg
pop
pushf
push
shll
xchg
popf
mov
movsl
cmp
pop
clc
lret
push
cmc
inc
push
daa
jbe
loope
mov
fldenv
lock
ss
shrl
push
jb
mov
out
test
mov
mov
rolb
lods
into
xor
jb
adcl
xchg
or
lea
mov
fmulp
scas
lcall
inc
in
loop
sub
loope
loope
in
fucomi
das
jecxz
imul
movsl
sbb
mov
aaa
scas
in
jbe
inc
push
lea
cli
fsubr
and
xor
push
xchg
cld
dec
outsl
mov
pushf
adc
sub
out
cmpsl
pushf
push
stos
dec
lods
movsb
jg
jns
aaa
test
loop
push
cmp
cmp
mov
ss
mov
mov
outsl
sbb
outsb
lret
insl
out
lock
push
xchg
mov
jmp
rcrl
add
js
cwtl
and
or
and
das
rcrb
incb
cmpsb
aam
pop
xchg
out
pop
sahf
out
xchg
pop
dec
ret
mov
jmp
sbb
push
pop
and
lock
and
dec
loope
sub
lock
push
mov
mov
mov
inc
lahf
push
add
es
mov
xchg
jb
jne
adc
mov
inc
pop
andl
push
adc
sbb
into
subl
pop
hlt
cmp
stc
nop
cmp
xchg
mov
mov
imul
in
and
ja
mov
mov
dec
mov
lahf
clc
scas
bound
popf
cmp
sahf
imul
and
pop
in
sbb
xchg
lds
mov
mov
mov
stos
and
fs
clc
inc
xor
dec
std
add
pop
mov
insb
dec
out
push
cs
pop
pop
rcr
mov
mov
xor
cld
add
mov
fidivrl
dec
push
add
bound
push
test
cmpb
imul
in
nop
inc
fs
mov
add
lea
pop
shll
dec
outsl
int3
jle
mov
rorb
push
mov
jp
inc
adc
addr16
or
mov
movsl
inc
cmp
add
pop
mov
icebp
push
sbbl
jno
movsb
enter
cmpl
jle
rcll
nop
ds
dec
mov
loopne
out
loop
sbb
mov
fwait
xor
or
jb
jns
out
pop
or
mov
das
sub
iret
push
hlt
mov
fdivrp
mov
sub
inc
push
and
in
jmp
mov
push
mov
jle
pop
mov
ret
mov
sub
in
fistps
or
stos
xchg
shrl
pusha
in
and
cmpsb
setb
mov
push
mov
test
add
jo
stos
cmp
pop
dec
popa
pop
adc
pop
mov
fcomps
mov
xchg
mov
pop
sbb
add
pop
cs
out
loope
sub
mov
gs
sbb
leave
sub
jno
pop
xchg
xor
mov
cmp
mov
shll
daa
loopne
icebp
out
filds
mov
cmpsl
arpl
cmp
movsb
pop
roll
stos
es
hlt
out
add
xor
jno
xlat
lret
xchg
mov
aam
in
add
inc
cmp
sub
fmuls
leave
sahf
mov
test
jge
outsb
cmp
sbb
mov
adc
and
push
mov
lock
cmpl
lea
rorb
mov
inc
jne
inc
jecxz
js
sbb
jle
or
fnstcw
fsubrs
xchg
jg
daa
cli
jnp
push
or
cmpsl
cmp
xlat
stc
adc
daa
push
pop
movb
dec
aas
aas
pop
bndstx
mov
xchg
cwtl
lcall
pop
out
dec
rcll
xor
scas
cld
in
das
mov
leave
rorl
arpl
jbe
nopl
movsb
xchg
sbb
mov
rorl
sbb
mov
sbb
xchg
dec
adc
push
lods
cltd
xor
jbe
fidivrs
dec
mov
sub
lods
pop
aad
inc
les
adc
stos
in
adc
lock
cltd
sbb
shrb
add
sbb
iret
movsb
jbe
jp
jg
xor
xor
ds
dec
and
out
loop
dec
aaa
pop
in
je
pop
not
lods
pop
ret
add
inc
inc
rorb
sub
out
jmp
jae
jae
into
push
or
xchg
adcb
pop
jno
mov
mov
ljmp
mov
fsubr
add
cmpsb
cmp
jg
into
or
sbb
jmp
aaa
arpl
pop
pop
mov
pop
cmp
jae
sbb
push
add
jle
test
stos
daa
out
sub
js
stc
jbe
rclb
je
stc
lds
jle
pop
xchg
xchg
cltd
clc
or
mov
add
mov
push
sub
cmp
pop
and
xor
or
sbb
push
push
fbld
movsb
sarb
mov
inc
sbb
fiadds
push
mov
pop
mov
adc
pop
mov
mov
daa
and
jl
adc
leave
enter
movsb
ficomps
pop
shrb
xchg
aad
test
push
sub
xchg
adc
loope
sbbl
mov
out
xchg
xchg
sub
pop
xor
cmp
jmp
aas
fists
cltd
push
mov
roll
push
sub
xchg
pop
cmc
xlat
xlat
inc
stos
or
pop
dec
movsb
jg
cmp
mov
dec
shlb
cwtl
loope
in
cmpsl
mov
push
clc
xchg
or
and
rcll
or
mov
int
push
js
inc
pop
iret
test
mov
in
in
in
xchg
push
and
pop
hlt
iret
cmp
test
popa
pop
xchg
dec
fs
xlat
or
cmc
mov
mov
dec
cmp
jecxz
rcll
arpl
mov
inc
outsl
sub
pushf
jae
scas
pop
jo
adc
fwait
push
add
adc
add
sahf
ja
aaa
incl
and
popa
cli
xchg
add
ret
cmpl
mov
push
cmp
icebp
adc
sub
mov
repz
add
xor
xor
ret
cmp
xchg
cmc
cmp
jne
imulb
pusha
ds
test
pop
insb
and
cwtl
sub
mov
out
enter
cmpsb
loop
xchg
int
ss
add
push
xlat
pop
add
dec
xchg
sub
cwtl
push
mov
ss
mov
enter
stos
sub
sub
xor
cmc
jge
aaa
jecxz
jae
gs
inc
push
shlb
movsl
inc
mov
gs
out
jge
stos
sub
push
xor
sbb
xchg
movsb
mov
sub
mov
lret
jge
push
push
pushf
scas
mov
adc
cli
ja
stc
popf
dec
test
outsl
cs
xchg
mov
arpl
stos
adc
lea
mov
jmp
xor
cmp
mov
cmp
fsubrs
inc
movsl
push
int
aas
cmp
pop
mov
mov
or
jp
imul
lods
sub
xchg
lret
sbb
push
repnz
setp
cmp
popa
and
iret
push
stos
ret
mov
testl
ss
fistpll
pop
aas
add
jb
imul
add
call
lds
fs
mov
add
inc
pop
jl
add
or
jg
mov
gs
or
cmc
stc
nop
daa
cmp
decb
xor
inc
out
ljmp
pop
jae
aaa
test
je
aam
pop
inc
lea
sbb
cld
pushf
pusha
mov
jecxz
lsl
cmp
xchg
jle
sbb
push
pop
push
std
pop
mov
mov
mov
lods
sbbb
repnz
cltd
adc
or
addr16
and
xor
xor
lahf
add
outsl
mov
sub
pop
inc
dec
loope
and
clc
or
mov
jno
loopne
js
stos
mov
loopne
loopne
les
mov
sbb
cmp
test
and
pop
mov
roll
push
adc
mov
imul
sbb
jecxz
cmp
out
in
xor
test
jl
jg
loop
iret
sbb
cmc
in
es
movsb
inc
xchg
xor
aam
xchg
flds
xchg
pop
rorb
xor
lock
loop
cltd
mov
popf
or
int3
mov
or
mov
test
dec
pop
stc
rcrl
xchg
jnp
adc
sub
jg
and
stos
pop
std
into
xor
mov
sbb
stc
or
outsl
jle
aad
cmc
pop
aaa
fisttpl
mov
cmp
sti
dec
scas
mull
adc
mov
cmp
add
imul
or
insl
jo
lcall
inc
mov
insb
mov
lods
and
in
lret
clc
mov
dec
pop
or
movb
pop
jmp
aam
fmull
xor
lret
dec
jecxz
xor
movhps
cmpsl
sbb
adc
clc
test
test
nop
pop
pusha
lods
add
mov
sbb
jl
loope
xchg
dec
je
stos
jae
rclb
cld
or
xchg
xor
fdivl
rclb
push
or
adcl
sbb
testb
stc
lock
cs
icebp
cmpl
xor
in
add
inc
aaa
hlt
das
aas
fmul
mov
mov
arpl
popl
xor
outsb
sar
jge
push
cmpsl
arpl
and
mov
push
popa
into
xchg
fcmovb
cs
adc
push
xor
mov
xchg
lds
lret
push
int3
add
mov
xchg
clc
xchg
aam
out
xor
rolb
cmpsl
and
std
push
enter
outsl
into
jo
leave
jecxz
push
lcall
jo
mov
out
test
insl
sub
stos
cmp
fcompl
inc
fmuls
and
out
or
xor
add
shll
or
dec
arpl
or
out
ret
and
loop
push
sub
jb
insb
lahf
fbld
rorl
push
cli
loope
mov
shlb
jo
add
loope
dec
sbb
dec
add
test
mov
aas
add
loopne
adc
push
sub
push
mov
inc
in
aaa
stos
lret
rcr
adc
xor
mov
xchg
or
xor
pop
rol
mov
repz
call
push
rorl
insl
sahf
push
imul
jp
addr16
mov
testb
ret
cmp
jb
and
mov
and
cwtl
cmpsb
rclb
in
and
icebp
frstor
mov
pop
add
jmp
aaa
xchg
mov
loop
xchg
fadds
int3
jo
stos
adc
sbb
inc
popa
push
mov
movsb
add
loope
xchg
stc
cmp
push
test
dec
shr
gs
dec
fwait
add
xor
out
sbb
xchg
inc
sub
xor
and
insb
mov
fwait
push
ret
pop
jns
mov
mov
push
enter
sbb
or
enter
xor
fmuls
mov
inc
imul
inc
out
add
inc
mov
cs
add
mov
xor
mov
outsb
add
cmpsb
xor
fmul
sub
cmp
jnp
aas
sbb
sub
pusha
xor
push
testb
cmp
pop
adc
jb
enter
xor
jae
data16
movsb
xchg
loopne
add
cmpsl
ret
sbb
pop
jmp
inc
pushfw
movsb
fadd
and
in
push
dec
fs
lods
jo
mov
call
fwait
ret
sbb
icebp
adc
cmp
stc
mov
loop
leave
xchg
icebp
enter
into
loope
xchg
shll
and
jae
std
xchg
repnz
xor
adc
sbb
lods
jmp
pop
andl
and
cmpsb
ret
popf
mov
enter
mov
jecxz
repnz
notl
mov
sti
inc
mov
arpl
fidivrl
fs
push
ss
sahf
xchg
and
cld
ds
or
sub
push
nop
dec
sbb
inc
mov
pop
jg
sti
lea
mov
push
cmp
fistl
es
and
sbbl
and
fwait
xlat
sub
ret
mov
imul
sub
aas
or
xchg
jns
jl
add
sbb
cmc
and
cld
xchg
pop
adc
cld
outsl
cmp
pop
jmp
adc
pop
or
repnz
movsl
sbb
je
mov
adc
sbb
mov
dec
aad
xlat
mov
dec
insb
jg
loopne
imul
mov
xchg
test
sub
inc
cli
loop
fdivrl
fmuls
cmp
cmp
xchg
jbe
sbb
ljmp
loopne
and
cmc
testl
clc
sti
and
and
push
sub
xchg
sub
add
test
fwait
arpl
xchg
icebp
cld
out
clc
jge
xor
dec
mov
fucomp
hlt
fistps
lret
shll
das
mov
inc
dec
aad
sub
mov
out
fs
into
mov
lcall
lcall
pop
pop
xorl
jl
cli
mov
lret
ljmp
inc
xor
mov
mov
mov
andl
push
dec
loope
aam
sub
in
dec
dec
jb
mov
dec
sub
sub
sarl
or
out
push
movb
jecxz
shl
or
sbb
inc
cmc
repnz
movsb
jns
sahf
cs
pop
int
gs
mov
pop
pop
jl
cltd
ljmp
add
ljmp
popa
daa
inc
out
lds
das
nopl
mov
aaa
sbb
add
mull
adc
cmp
mov
sarb
into
sbb
inc
and
sarb
pop
imul
lds
inc
xchg
aad
jecxz
mov
decl
iret
mov
das
lods
fsubrs
in
mov
jle
mov
cwtl
adc
mov
mov
repz
xor
mov
dec
rolb
scas
ret
xor
loop
mov
mov
cmc
mov
add
fbstp
outsl
jg
push
imul
mov
jle
in
jne
stc
xchg
dec
js
shlb
jae
xor
in
mov
dec
es
test
pop
push
add
mov
nop
popa
int3
lock
jno
add
cs
incl
push
push
lret
push
sbb
outsl
sbb
pop
dec
lock
mov
icebp
pop
dec
scas
fldl
jb
in
add
push
movsl
loopne
in
and
rolb
mov
push
movsl
jecxz
cltd
or
repnz
and
shlb
adc
inc
gs
inc
and
mov
sub
repz
popa
pop
repnz
cmp
hlt
lods
in
add
sub
lea
int
lds
sbb
dec
out
mov
lret
outsb
in
xchg
roll
loope
inc
test
inc
xchg
movsl
les
or
pop
in
decl
sbb
iret
adc
data16
pop
rep
aam
ds
dec
shl
loopne
call
popa
or
sti
ja
add
fsubrs
sbb
jg
je
dec
pop
imul
shll
mov
nop
aam
inc
cltd
rcrl
dec
jmp
arpl
jno
pop
mov
addr16
movsb
mull
cmp
sti
inc
and
push
stos
cmp
stc
xchg
sbb
jg
aas
and
and
aas
mov
pop
push
sub
ds
and
push
bsf
stos
mov
test
push
fmuls
dec
dec
cli
ja
in
test
jo
cmpsl
enter
enter
and
mov
leave
add
pop
gs
mov
fcomps
push
shlb
push
sbb
frstor
mov
test
jae
xchg
mov
cmp
repz
inc
pop
add
and
pop
aam
cmp
adc
mov
loopne
push
or
jno
mov
mov
out
out
xor
cmpsb
cld
sub
push
fidivrl
cmp
or
icebp
test
rorb
pop
fwait
xor
push
bound
xorl
jno
mov
push
cmp
mov
push
ljmp
popa
sti
lods
add
fidivs
test
pop
push
fistl
mov
outsb
movswl
and
push
mov
in
push
xchg
rorl
popa
sahf
adc
xor
fiaddl
xor
adc
sbb
int3
mov
je
pusha
rcrl
and
xchg
mov
dec
sbb
decb
jg
clc
add
mov
and
cli
dec
lock
fdivl
dec
mov
push
fisubrl
fcomip
mov
inc
pop
movsl
dec
int3
call
jp
loope
or
bnd
pop
out
cmpb
pushl
jecxz
jnp
lods
enter
cmp
out
outsl
push
sub
in
inc
mov
mov
jb
pusha
out
cmpsl
lahf
daa
lahf
ss
mov
mov
daa
shr
mov
xor
in
xlat
jmp
jle
mov
imul
adc
mov
loop
imul
test
gs
push
pop
ja
test
push
mov
inc
nop
pusha
pusha
sbb
stos
inc
mov
jecxz
pop
jge
mov
jb
ss
or
xchg
mov
push
add
cmp
ja
decb
negb
push
push
jmp
adc
popf
adc
clc
aam
mov
arpl
sbb
mov
in
cmp
lret
insb
add
jne
sbb
mov
jno
inc
jne
mov
sti
or
mov
dec
sbbl
mov
mov
dec
roll
scas
jmp
enter
in
xchg
inc
xchg
inc
test
or
cmp
pop
testb
loopne
pop
pop
scas
inc
popa
adc
loop
ja
dec
add
mov
adc
mov
fnstsw
jg
daa
fmul
insl
mov
in
popf
pushf
shrl
push
mov
fisubs
jecxz
cltd
xchg
sub
in
dec
loope
mov
adc
outsl
xchg
out
nop
test
mov
adc
lds
and
or
xchg
ja
loopne
pusha
push
or
out
addr16
and
cmpl
into
xor
jge
xchg
and
mov
or
fbstp
xchg
outsl
xor
scas
inc
cmp
lret
imul
andl
pop
fnsave
add
popa
daa
mov
fldl
cmpsb
jmp
mov
xchg
aad
iret
outsb
cmpsl
negb
ja
movzbl
or
test
addr16
imul
fwait
dec
sbb
sub
jae
add
mov
mov
add
sub
repz
in
mov
ret
out
push
jge
rcrl
loopne
push
enter
ja
xchg
cmpsl
std
ja
aaa
dec
mov
or
push
outsl
jne
mov
pusha
jp
pop
loopne
cmp
and
outsb
adc
loop
js
mov
dec
dec
jg
lcall
push
push
inc
mov
jmp
dec
nop
jg
and
dec
push
adc
sbb
aas
xchg
jle
push
cld
insl
int3
clc
lret
adc
add
outsb
subl
popa
sub
xchg
daa
inc
jns
push
pushf
es
mov
cmp
sub
xchg
cmp
xchg
adc
xor
push
inc
lock
sbb
push
fsts
add
out
aas
out
lds
dec
push
cmp
inc
loope
mov
cmp
nop
dec
push
sete
jle
inc
sbb
mov
int
and
rorl
repnz
and
add
out
fwait
stc
push
je
lds
mov
pusha
loop
inc
fwait
ret
les
mov
push
aad
in
jmp
push
pop
repnz
outsb
movsb
pop
out
xor
in
add
daa
cmpsl
out
or
adc
aas
mov
orl
or
xchg
pop
add
push
ret
pop
mov
cld
jg
mov
insl
adc
pushf
cmc
xchg
cltd
push
imul
sbb
pop
out
insl
jno
jmp
cmpl
mov
inc
test
xor
dec
push
out
out
jecxz
sbb
leave
lods
int
testb
popa
xor
jno
cmpsb
in
xor
shll
mov
int3
leave
inc
subb
rcl
cli
jne
jle
jecxz
mov
mov
push
jno
out
cmpsb
cmp
es
not
jne
stos
mov
jge
mov
adc
adcl
insb
add
or
fidivrs
cmp
fnstcw
xlat
popf
mov
rcl
out
cmp
loopne
movsb
add
xor
and
xchg
or
in
mov
cmc
mov
dec
adcb
shlb
adc
add
in
repz
mov
push
inc
mov
loop
jo
add
pop
inc
loopne
shl
mov
addr16
leave
xchg
vmwrite
shlb
mov
dec
addb
inc
dec
dec
mov
shrb
imul
push
out
cli
hlt
shrl
aas
divb
xor
push
push
sti
in
adcl
lcall
arpl
out
mov
test
sub
lahf
dec
pop
jmp
leave
sarl
fiadds
sbb
xchg
sub
cmp
lret
out
out
jo
test
and
inc
andl
jbe
pop
cmp
std
das
xchg
aad
inc
in
inc
notb
out
mov
pushf
in
inc
into
data16
sbb
jle
in
test
outsl
outsb
rcrb
loopne
cmpsl
scas
out
in
jns
adc
enter
or
xchg
sub
xchg
mov
pop
scas
add
xchg
lods
mov
dec
out
decb
push
xchg
sub
call
add
xor
sahf
jg
inc
inc
loopne
mov
hlt
cmp
mov
data16
mov
mov
mov
mov
add
pop
sti
pop
jl
adc
dec
movsl
data16
inc
repnz
sub
jge
out
mov
mov
and
pop
outsl
inc
fistpl
inc
fbstp
push
push
mov
mov
mov
imul
enter
sub
xchg
mov
fstpl
fimull
iret
mov
in
hlt
addr16
mov
stos
insl
jge
test
pop
fistpl
jns
ret
cld
out
dec
adc
test
repz
inc
movsl
test
in
push
mov
jns
cmp
test
jbe
mov
fmuls
rolb
sub
mov
lods
dec
cmp
lret
insl
push
ret
inc
insb
cmp
ja
addr16
aaa
test
dec
mov
loope
mov
iret
jp
add
scas
mov
data16
push
fs
add
mov
sbb
and
daa
mov
ja
shrb
aad
shll
adc
push
jecxz
xor
mov
enter
sahf
sub
pop
xor
push
dec
out
inc
pop
xchg
repz
pop
sub
add
imul
insb
rorb
lahf
test
icebp
enter
jmp
addl
sti
popa
or
popf
mov
push
outsl
xor
pop
add
mov
mov
and
mov
lea
pop
adc
push
out
arpl
jp
loopne
push
loop
ret
rcl
xor
fcomps
jns
mov
xlat
lahf
jb
testl
adc
sbb
les
ljmp
mov
jo
inc
cmpsb
mov
cmp
stos
cmp
dec
testb
popa
adc
jge
inc
push
cmp
lret
lahf
xchg
cli
push
movb
jns
rcrl
imul
adc
sbb
fcom
imul
jp
jne
repnz
inc
aas
dec
test
rolb
scas
aas
push
mov
leave
push
lods
xchg
mov
mov
call
loope
stos
pop
lret
sub
xchg
enter
aad
inc
inc
mov
in
in
shrl
popf
push
adc
jne
mov
pushf
rcl
dec
in
dec
scas
and
fidivrs
int
jo
stos
push
add
test
loope
hlt
daa
pop
add
sub
adc
negl
mov
adcb
ds
adc
xor
inc
in
pop
inc
pop
icebp
ss
or
adc
out
add
imul
add
jg
shlb
push
and
les
lods
dec
adc
ficomps
or
es
pop
cmp
push
mov
in
popf
fdivl
inc
pop
ja
xor
gs
subb
enter
mov
mov
mov
lds
sbb
mov
mov
in
xchg
mov
les
cmp
or
stc
lea
pop
les
mov
iret
rorl
shl
mov
sbb
mov
fidivl
mov
fcompl
rcrl
sub
pop
fwait
sub
in
push
jl
cld
lods
ja
inc
mov
setge
sub
adc
inc
sub
sbb
outsb
imul
nop
add
lret
jnp
fimull
inc
fisubs
mov
addb
dec
mov
loope
sub
or
adc
sub
mov
outsl
xor
movsl
in
xchg
sub
pop
lret
adc
popf
popl
fldl
cltd
test
inc
xchg
sbb
xor
mov
into
subl
mov
cltd
xor
pop
xchg
jmp
dec
inc
mov
add
aad
shlb
outsb
inc
mov
add
add
out
fisubs
cmp
cltd
test
xchg
push
jo
jns
imul
fs
add
addb
pop
scas
lahf
in
dec
dec
ret
fldz
rcl
sahf
cmp
jmp
mov
and
push
mov
and
clc
out
sbb
cmpsb
pop
adc
shl
shll
cmpsb
cmpsb
sub
xchg
inc
adc
mov
mov
mov
push
popa
xor
fbstp
enter
test
dec
push
cmp
push
inc
adcl
inc
mov
cmpsb
clc
sub
icebp
cli
jne
nop
rorb
call
in
jo
pop
scas
dec
xchg
dec
outsl
jb
xchg
jns
in
ss
or
pop
ljmp
or
cld
fcompl
lods
or
jnp
aaa
mov
lods
and
hlt
xor
popf
xor
cld
out
fistps
or
pop
push
jb
dec
stos
fimull
mov
subb
pop
cmp
jns
sub
shlb
cld
pop
dec
es
adc
aaa
int
cmc
jbe
mov
pop
xchg
mov
dec
pop
fwait
aas
test
inc
arpl
mov
xchg
fwait
imul
lock
mov
jo
inc
push
popf
ds
add
xchg
scas
stos
adc
loope
pop
cli
or
mov
adc
rclb
insl
xchg
push
fwait
mov
clc
jae
pop
push
mov
add
rcrl
fbstp
into
in
imulb
push
add
pop
sub
insl
ds
cltd
sub
and
gs
fwait
push
push
or
cli
mov
add
push
iret
gs
stos
cmpsb
cmp
pop
or
mov
addb
pop
outsl
fwait
cltd
daa
mov
cltd
mov
arpl
das
bnd
pop
jne
addl
adc
lret
adc
ss
jb
sbb
add
sti
or
adc
pop
sahf
push
aaa
xor
pop
repnz
int
lcall
and
jo
enter
repnz
lret
adc
icebp
mov
add
dec
jb
adc
xchg
pop
mov
add
pop
int
enter
sbb
movsb
fisttps
icebp
mov
fwait
imul
adcb
repnz
dec
rolb
inc
js
subl
inc
shl
iret
jne
arpl
gs
inc
lds
xchg
clc
sub
fbstp
jae
sub
jae
bnd
xchg
sub
and
mov
mov
jmp
xchg
pop
scas
xor
lret
xchg
add
bound
pop
bound
es
push
sub
dec
mov
shl
in
loop
cmc
push
jge
jns
and
mov
aaa
sub
cltd
adc
mov
add
jno
frstor
jecxz
pop
lods
cmpsb
mov
add
pop
sub
cltd
pop
adc
sbb
adc
cmp
ljmp
cltd
int
enter
jle
popa
sar
adc
or
xor
dec
out
hlt
cltd
mov
outsl
cmp
pop
adc
stos
mov
push
cwtl
ret
js
test
das
sbb
fisubs
push
aad
add
add
mov
daa
out
iret
push
mov
movsl
mov
addr16
lret
addr16
fwait
or
movsl
jmp
jae
xchg
push
dec
xchg
or
cmc
data16
push
mov
out
lock
or
call
stos
fcomi
mov
lods
push
test
aaa
int
and
and
jb
push
add
sub
inc
pusha
fwait
dec
popa
sti
fchs
arpl
xchg
cli
sub
stos
into
cmpsb
jae
out
cld
mov
inc
stos
mov
inc
fisubs
repnz
mov
popf
push
inc
int
jg
or
dec
in
pop
cmp
inc
jmp
add
push
lods
popa
call
xor
adc
sti
js
mov
int3
adc
loop
je
addr16
lock
dec
lahf
ss
loopne
jge
in
xchg
xchg
arpl
pcmpeqd
mov
inc
arpl
mov
xor
in
push
fsubs
movsl
inc
lods
mov
clc
mov
insl
jg
xor
mov
int
test
stc
fldt
idivb
loopne
rcll
push
cs
packsswb
sub
imul
mov
pop
or
clc
sti
sub
dec
out
in
scas
inc
pop
adc
push
mov
call
mov
inc
mov
pop
lcall
ds
ss
pop
leave
pop
pushf
movsb
movb
and
insl
sti
das
mov
jl
pop
fadd
cmpsl
repz
hlt
pop
cli
fnsave
add
ja
sti
push
mov
adc
es
out
into
xor
rclb
jp
adc
or
add
leave
sbb
or
popa
cmp
shlb
dec
or
dec
arpl
gs
loope
sub
mov
xor
push
fwait
xor
lahf
sbb
xchg
arpl
mov
jg
mov
cmp
inc
and
in
andb
push
dec
adc
shrl
push
xchg
incb
lret
loopne
cmp
adc
mov
xchg
push
shlb
cmp
jl
addl
mov
imul
ja
push
and
int3
ret
dec
and
xor
xchg
repz
jns
lods
cmpsl
cltd
mov
mov
insl
aam
lahf
xor
loop
andb
das
aas
subl
sub
lcall
mov
jnp
push
and
push
lock
push
std
or
inc
rclb
inc
int
push
pop
sub
xorb
sbb
push
out
ret
or
push
rorb
rorl
dec
pop
repnz
cmp
cmp
pop
pop
loopne
int3
sub
sbb
js
outsl
and
aad
adc
push
mov
dec
jp
data16
push
mov
jl
mov
pop
hlt
fsubr
nop
jl
inc
decb
fldl
xor
sbb
push
mov
movsl
push
mov
loopne
inc
and
or
pop
loop
rcll
cmp
mov
pop
es
movsl
imul
sub
sub
adcb
in
and
outsb
test
push
lods
outsb
adc
xor
scas
imul
popf
rolb
push
inc
cmpsl
fwait
pop
fcomip
add
flds
pop
test
mov
pop
clc
xchg
jb
adc
dec
lahf
jb
aad
inc
pop
add
bound
outsb
out
pusha
inc
cmp
ss
cli
loopne
cmpsb
add
mov
cmp
data16
fwait
inc
pop
pusha
adc
xchg
cmp
shl
xchg
jbe
dec
fcoml
mov
out
test
rcr
clc
cmpl
pop
jecxz
pop
lock
call
add
aaa
hlt
ret
out
call
iret
fdivl
ja
aas
dec
cmpsb
inc
roll
mov
cmp
jae
dec
in
int3
adc
push
pop
lcall
sub
dec
mov
jmp
cmc
cmovno
test
nop
dec
cwtl
adc
or
ret
outsl
xor
and
push
mov
jg
jge
clc
cmp
sub
push
js
push
scas
push
xor
int3
icebp
addb
das
es
les
add
out
push
ja
subl
inc
out
mov
shrl
in
sub
mov
dec
or
int3
pushf
popa
jns
adc
outsl
mov
mov
mov
lock
stos
js
xor
movl
or
ljmp
inc
and
adc
cmp
mov
jno
cltd
jmp
mov
add
and
add
sbb
fucom
dec
cmp
daa
enter
adc
nop
shlb
add
insb
dec
xchg
aad
insl
jg
sbb
mov
pop
iret
scas
mov
push
movsb
mov
pop
or
push
push
clc
and
jnp
lahf
jo
sbb
call
xchg
sub
mov
or
ret
sub
inc
adc
gs
xlat
adc
push
popf
out
jg
push
ret
ja
out
sti
int3
outsl
push
or
scas
cmpsb
push
insb
pop
pop
pop
xor
mov
fwait
leave
pop
int
jp
adc
jb
xor
sar
mov
add
add
sbb
and
mov
cmp
out
ja
inc
sub
inc
outsl
adc
jle
fildll
jbe
add
add
flds
lcall
and
jo
mov
or
ret
sbbl
subl
adc
xchg
inc
fisttps
fiaddl
push
fisubs
push
sub
adc
pop
sbb
jp
jg
xchg
jno
mov
test
dec
mov
push
out
mov
movsb
repnz
ret
fistps
addr16
mov
lahf
push
cmpsb
incb
popf
pop
outsb
lret
popf
fsubl
loopne
xor
andl
gs
sub
sbb
or
mov
mov
and
daa
cli
or
imul
lret
insl
adc
jns
orl
pop
xorl
dec
add
test
daa
inc
cmpsl
call
adc
lret
test
fbstp
sbb
jbe
mov
test
fistps
lcall
sbb
pop
hlt
mov
fstpt
loopne
pop
outsl
cmp
and
ja
in
mov
rcrl
js
sub
add
push
arpl
mov
lods
gs
popf
push
cmp
cmp
cmpsb
mov
mov
pusha
mov
lods
lret
mov
push
jno
jae
mov
inc
push
je
cmpsb
jb
pusha
mov
dec
mov
pop
jp
or
adc
inc
sub
or
adc
xchg
jp
sbb
stos
outsb
xor
mov
cltd
stc
movsl
popf
sbb
fcmovne
in
jnp
xor
gs
xchg
xchg
push
mov
leave
push
mov
mov
inc
mov
cltd
mov
scas
cltd
lods
and
iret
stos
lds
push
jp
jp
and
pop
sahf
inc
add
inc
scas
cmp
or
mov
sbbl
sub
pop
mov
stos
mov
jnp
jge
push
xor
fs
daa
lds
incb
dec
jmp
out
and
fisttpl
fidivrs
repnz
or
add
mov
out
in
imul
sbb
nop
and
mov
psrad
sti
and
dec
pushf
enter
ljmp
add
mov
aam
xlat
cmpsl
push
mov
jb
xor
xchg
xchg
call
hlt
xor
mov
lds
shl
inc
int3
jnp
rclb
jnp
pop
dec
lahf
int
or
sbb
test
xor
popa
in
push
lds
xchg
scas
leave
loope
cmp
xchg
adc
rorl
mov
outsl
sarl
pop
cmp
int3
mov
mov
push
inc
sbb
add
mov
dec
sbb
and
pop
pop
rcl
fisubrs
dec
push
inc
cmpsl
mov
inc
inc
sub
adc
xchg
cltd
out
pop
inc
dec
pop
dec
jb
adc
dec
shrb
dec
mov
pop
mov
push
cmp
mov
or
fwait
clc
dec
mov
ret
cmpsl
out
leave
lock
int
cmpsl
mov
hlt
push
mov
ret
cmpsb
out
daa
rcrl
cmp
dec
leave
mov
xchg
test
out
ja
shl
inc
sub
sub
push
cmpsl
push
popa
and
rcrl
adc
dec
adc
mov
int3
jnp
out
scas
inc
and
add
fstl
mov
decb
scas
xchg
sbb
outsb
add
jno
inc
out
dec
mov
jne
jnp
mov
mov
in
pusha
and
leave
scas
and
es
xlat
hlt
stos
mov
gs
cld
inc
push
xchg
jl
cmpsl
pop
xor
xor
adc
imul
xor
fidivl
dec
popa
dec
pop
push
jg
and
jae
mov
in
sbb
fiaddl
bound
movl
fcmovne
sub
push
test
das
mov
adc
sbb
dec
adc
push
outsl
outsb
dec
pop
mov
movsl
lods
mov
xor
push
or
data16
or
js
inc
or
pop
fdivs
stos
fs
addl
into
je
inc
push
pop
sahf
push
xor
shr
pop
push
mov
in
imul
popf
ret
data16
jno
xchg
mov
test
cld
fldcw
push
xorl
sbb
orl
pop
cmc
cld
mov
bound
fstpt
inc
jl
cmc
sub
xchg
add
cmpsb
idivl
mov
or
mov
sahf
xor
dec
imul
ret
loop
ret
pop
movsl
lock
jg
lods
cld
pusha
arpl
cmp
movsb
jnp
sti
test
sbb
cmp
bound
add
mov
int
lock
addr16
xlat
cwtl
mov
push
addr16
inc
notb
repz
or
xchg
imul
mov
test
xor
cmpsl
ret
mov
pop
xchg
pop
cs
push
xor
push
in
lds
and
outsl
add
push
mov
mov
push
cltd
xor
inc
pop
adc
lods
jp
popf
stc
std
popf
stos
jne
shrb
and
std
fisubrl
js
pop
pusha
sbb
xchg
jl
out
xlat
testb
jno
leave
dec
es
aas
je
jno
aam
lret
xchg
push
mov
bound
and
sub
mov
mov
hlt
or
mov
sar
iret
cmpb
sbb
in
shlb
sti
add
xchg
stos
iret
lods
das
pop
fcomip
xor
and
and
outsl
hlt
inc
fdiv
lods
sti
nop
test
adc
sti
ja
fcomps
pop
adc
lahf
dec
cmc
mov
add
mov
addl
popf
xor
aad
out
mov
stos
fnstenv
inc
push
push
stc
push
and
adc
inc
xchg
mov
dec
sbbl
cmc
loope
add
xor
dec
jle
fldcw
adc
sub
dec
jns
nop
and
jb
int
and
push
sub
adc
or
pop
mov
mov
mov
subb
lods
inc
mov
cmp
or
mov
sub
add
cmp
adc
dec
pop
dec
test
insl
pop
xor
jl
stos
mov
inc
add
dec
mov
lcall
inc
cli
or
orb
adc
sub
stos
sti
mov
sbb
fidivrl
or
or
mov
cmp
push
aad
inc
test
icebp
mov
pop
lret
mov
repnz
push
pop
scas
jns
inc
cli
sbb
and
dec
lahf
mov
enter
sub
cmp
jne
bound
lods
lods
xchg
js
push
mov
out
test
jae
scas
pop
mov
ds
xor
or
mov
push
push
adc
jo
pop
push
push
push
add
out
inc
push
imul
mov
xchg
mov
adc
insl
pop
inc
mov
sti
jge
ds
in
mov
xchg
and
cmc
mov
aad
jecxz
add
pop
into
loope
jnp
cmp
pop
xor
lret
test
icebp
inc
rcrb
mov
les
mov
jnp
je
adc
jecxz
out
jns
xor
cwtl
fwait
ja
rclb
aas
ret
xlat
scas
jns
pop
hlt
inc
mov
jl
or
lcall
mov
in
mov
push
cmpsb
cmp
ljmp
pop
andb
or
ljmp
sti
addl
pop
sbb
fwait
bound
adc
mov
jbe
movsb
ret
cmp
clc
jns
sbb
into
and
and
push
imul
sahf
dec
ja
insl
add
jae
lret
imul
stos
jno
sub
insl
cmpsb
cmp
push
decl
add
lock
loope
rorl
add
xchg
sahf
sarl
in
jg
cmp
inc
pop
cmp
pop
lahf
jo
mov
ds
popa
lods
pop
push
cwtl
int
add
rcrb
rolb
das
jne
insl
out
loopne
pop
fisubrs
inc
aaa
cld
or
out
push
stos
jge
sub
daa
add
mov
repz
jno
mov
inc
bound
jl
sub
pop
enter
inc
xlat
in
mov
jno
xor
mov
pop
jp
xor
dec
jbe
push
xor
dec
mov
xor
mov
pop
xchg
add
xchg
xchg
out
out
xchg
pop
aam
fst
mov
sbb
mov
aas
cwtl
sbb
ror
data16
rclb
pop
and
pop
adc
mov
shl
stos
test
xor
dec
xchg
cmpsl
pop
ret
jns
bound
and
pop
inc
clc
nop
pop
sub
div
mov
shr
and
or
cmpsl
push
cld
js
les
xchg
jle
add
pop
mov
push
inc
push
xchg
or
lods
and
cmpsb
adc
fsubl
cmp
test
pop
xor
and
repnz
dec
fildl
mov
clc
push
xor
add
adc
mov
sbb
dec
or
jmp
ljmp
cmpsb
mov
sub
stos
xchg
dec
sub
out
sbb
sahf
stc
sti
fmuls
sbb
or
inc
fstps
add
inc
insb
ss
mulb
scas
out
push
fnstsw
loop
lock
scas
pop
dec
out
xchg
xor
sub
mov
jne
ss
icebp
lea
lock
xchg
jl
lahf
push
cmp
lahf
pop
popf
repnz
mov
and
inc
dec
dec
aam
cmp
mov
fcompl
fcmovne
dec
notl
sub
push
xor
jle
shrl
dec
es
mov
pop
subb
mov
cs
outsb
out
mov
popa
or
inc
in
into
imul
gs
cli
pop
mov
jae
jecxz
cmp
adc
loope
pop
cs
sbb
xchg
rclb
cmc
sbb
jge
pop
push
and
iret
mov
repz
aam
jp
adc
in
aam
cmp
sbb
pop
fists
mov
ret
cmp
adc
aam
and
cmp
or
mov
icebp
insb
xchg
pop
sahf
mov
sub
mov
test
ja
push
test
pop
push
sub
lock
movsb
ja
push
push
mov
mov
out
das
icebp
test
imul
lock
sub
xchg
outsl
jge
xchg
mov
add
mov
scas
inc
mov
je
ret
or
cld
fidivrs
fwait
pop
push
out
pusha
test
mov
shld
adc
daa
inc
mov
xor
aaa
mov
outsl
xor
rol
pop
addr16
dec
inc
cmp
inc
inc
push
push
push
sub
jne
xchg
add
pop
pop
mov
stos
add
xor
lods
add
or
xchg
ds
enter
fnstsw
lds
mov
sbbl
fisubrl
mov
nop
xchg
push
int
mov
pop
mov
push
cmpsl
ret
mov
mov
daa
lods
xchg
cmpsb
outsb
sbb
mov
imul
push
jno
or
imulb
mov
outsb
int3
lret
xor
sbb
pushf
xor
out
and
fwait
cmpsl
mov
inc
adc
lret
or
insb
lock
cmp
rcrl
movsb
xchg
push
mov
mov
sbb
faddp
arpl
sbb
nop
js
mov
jmp
dec
imul
mov
push
lock
cwtl
inc
std
and
cld
ja
and
call
xor
lods
mov
push
ljmp
test
dec
data16
sbb
push
pop
mov
adcl
mov
cmpsb
xor
and
add
dec
outsb
mov
pop
leave
dec
inc
lcall
inc
stos
jle
scas
out
mov
jns
sbb
and
fmull
and
xor
sti
lcall
cltd
jne
xchg
test
fisubrl
push
mov
mov
push
xchg
pop
adc
or
mov
addr16
std
inc
xchg
sbb
mov
fbstp
xchg
xchg
mov
and
or
das
dec
jecxz
lds
mov
and
xor
loope
aam
aaa
repz
and
out
or
mov
repz
test
cmp
rolb
int3
jecxz
pop
outsb
mov
lret
cmp
scas
sub
cltd
dec
icebp
mov
sbb
add
insl
push
and
pop
and
xor
iret
mov
faddl
lods
fdiv
fimuls
mov
sub
pop
cmp
nop
iret
pop
adc
loopne
mov
xor
inc
jp
je
popa
test
filds
mov
xor
mov
outsl
out
add
cmp
jae
xchg
push
cmp
push
movsb
mov
pop
mov
or
inc
iret
hlt
addr16
mov
test
stc
mov
out
or
push
les
shlb
sahf
mov
imul
and
sbb
xchg
jnp
daa
mov
sbb
lahf
add
jno
pop
mov
sub
in
pop
push
sti
push
andb
in
inc
add
out
add
in
test
jg
xor
add
aas
imul
fisubrs
rorb
push
pop
lret
scas
inc
es
push
or
mov
jle
push
movsl
rcrl
sarb
mov
cli
shl
int3
movsb
sahf
mov
jnp
out
sub
aaa
adcl
ficoms
jg
je
fnstsw
pop
clc
pop
out
cli
dec
or
aam
add
scas
sbb
cmp
rol
rcl
repnz
pop
lcall
cwtl
xor
xchg
adc
in
gs
ljmp
inc
mov
notb
jg
sbb
out
test
xlat
incl
mov
lahf
xchg
mov
loopne
inc
ret
insb
stos
cli
push
pop
pop
dec
mov
gs
jae
loope
cmp
pop
adc
adc
mov
or
fs
ds
movsb
inc
mov
rclb
sub
xchg
lock
and
mov
and
add
adc
sub
push
pop
dec
mov
and
pusha
out
mov
cld
arpl
push
outsb
pop
push
cmc
lret
pop
inc
out
xchg
sahf
int
lods
mov
xlat
pop
fcmovbe
mov
cmp
lods
sbb
inc
mov
xchg
mov
add
hlt
lods
subl
mov
sub
inc
pushf
jl
into
and
je
adc
popf
xchg
mov
les
ljmp
inc
dec
pushf
cwtl
je
push
orb
adc
dec
fwait
movsl
xor
xor
inc
loope
sub
sti
push
xchg
dec
mov
les
adc
mov
int
or
out
addr16
fidivl
int3
lret
sbbl
dec
jno
jb
outsb
in
pop
mov
dec
ss
jmp
mov
adc
stos
fwait
test
add
jl
sbbl
loopne
xchg
xchg
or
repnz
ret
add
fstpt
lds
fsub
pop
rorb
ret
imul
sbb
mov
push
test
cmpsl
push
sbb
aad
xorb
pop
iret
adc
cmp
loop
sbb
pop
ret
xor
jecxz
xlat
ljmp
mov
loopne
xor
repnz
loopne
mov
dec
cmpsb
mov
in
fwait
mov
repz
add
and
cmpsb
or
or
ret
and
lret
ljmp
fstl
neg
mov
subb
xchg
lods
and
lret
bound
nop
pop
dec
mov
inc
aaa
daa
push
and
arpl
ret
sbb
pop
shl
ret
inc
jecxz
int3
fmull
je
mov
xor
xor
call
sub
add
xor
mov
push
pop
imul
cmp
aaa
lcall
add
lahf
mov
test
inc
test
int
sahf
lret
les
or
cwtl
stos
xor
xor
cmc
dec
mov
add
imul
pusha
lods
lret
dec
out
andb
cwtl
es
popf
fidivs
es
mov
xor
loopne
sub
xor
push
or
gs
nop
psubusb
into
cwtl
inc
push
mov
sub
push
sub
fadds
and
sbb
mov
cmp
loope
mov
pushf
jl
dec
iret
outsb
dec
aas
push
dec
pop
jb
inc
nop
stos
xchg
stos
scas
mov
mov
sub
pop
pop
negb
jge
sub
lcall
sub
les
nop
arpl
adc
dec
cmp
rolb
add
call
rol
arpl
xchg
negb
ja
or
lock
xchg
push
dec
scas
and
icebp
push
or
push
lea
push
mov
push
sub
sub
pusha
ss
mov
test
pop
sub
sbb
pop
in
pushf
ds
repz
push
out
call
inc
push
out
cmp
mov
fs
inc
idivb
gs
ds
mov
sub
in
sbb
fs
icebp
daa
dec
fsubs
adc
cmp
mov
mov
imul
sub
fwait
nop
pop
xchg
xchg
inc
push
shrl
xor
cli
addr16
icebp
and
sti
mov
testl
jp
call
sbb
jl
int
ret
scas
mov
mov
insb
add
sub
inc
rorb
add
aam
insb
mov
out
push
aas
mov
test
cmpsb
dec
fstpl
fbld
pop
cltd
sarl
dec
and
lock
pop
xlat
push
mov
icebp
jne
sti
into
lds
loope
xor
adc
push
mov
sbb
clc
sbb
cmp
jbe
fcomp
mov
ss
mov
pop
in
pusha
ss
bound
jle
xchg
adc
and
add
mov
hlt
aaa
scas
xchg
sub
push
dec
push
js
aad
sbb
call
and
cmpsb
addr16
push
dec
movsb
or
test
cmc
mov
jl
lcall
lahf
lods
adc
jb
dec
push
adc
sbb
add
mov
and
jbe
xchg
xchg
xchg
lock
cmp
pop
mov
jno
call
fisubrl
int3
ljmp
jg
add
push
loop
dec
add
xlat
ficoml
add
add
iret
mov
pop
or
test
mov
push
mov
mov
xor
cwtl
push
mov
arpl
ror
int3
psubusw
sbb
jg
sti
loope
dec
out
and
jae
mov
add
cmpsb
or
adc
repz
out
push
sbb
adc
aad
jge
jne
mov
pop
sbb
and
loopne
jl
pop
cld
xchg
fmull
jmp
imul
or
mov
aad
mov
std
cmp
dec
pop
dec
cmp
mov
mov
sbb
add
sti
or
xchg
mov
jae
cmp
sahf
xchg
in
cmp
sti
push
mov
icebp
imul
adc
mov
loope
mov
in
movsl
inc
xlat
ficoms
xchg
dec
pop
int3
pop
add
inc
xchg
sub
shrl
push
sub
pop
cmp
add
add
sbb
inc
and
cs
in
jmp
test
ja
sbb
jg
push
leave
and
lcall
cwtl
lods
cli
inc
xchg
ja
repnz
mov
rcrl
add
ja
inc
and
repnz
int3
mov
leave
pop
pop
aaa
sub
scas
pusha
mov
mov
outsl
mov
data16
insb
jb
shrl
pop
cmp
shlb
sub
mov
imul
dec
jge
inc
cwtl
or
lcall
faddl
ret
stos
mov
push
push
movsb
dec
nopl
cmp
fnstsw
mov
arpl
in
jge
imul
pop
pop
daa
inc
dec
and
dec
out
es
mov
dec
inc
add
cmp
adcl
cmp
mov
cmp
cmp
stos
xor
test
out
in
add
cmp
pusha
mov
popa
mov
pop
aad
add
xchg
mov
daa
push
or
clc
cltd
xchg
aad
jg
dec
imul
lcall
sbb
jae
imul
outsl
stos
xchg
push
jl
add
mov
push
popf
xor
add
in
inc
sar
into
testb
mov
push
inc
pop
lcall
cmpsl
int
dec
or
or
mov
push
jecxz
xchg
push
vshufps
xchg
adc
lahf
pop
insl
popf
push
dec
movsl
mov
mov
fwait
add
leave
xor
es
sbb
add
lock
push
add
cmc
aam
sub
in
sbb
ds
xchg
loope
mov
jo
push
ss
xchg
sub
push
gs
lds
or
inc
lds
mov
dec
cwtl
jecxz
jp
add
xor
mov
pop
and
or
fidivrl
mov
inc
fs
icebp
inc
roll
dec
or
loop
popa
adc
sbb
jg
lret
cmp
cltd
cwtl
fidivs
popa
xchg
out
adc
mov
dec
outsb
mov
iret
es
push
scas
ret
lods
jmp
loop
and
mov
in
pop
inc
push
psubw
sbb
mov
jle
sbb
xchg
mov
cltd
jge
inc
sahf
inc
popf
arpl
lahf
repnz
fucomip
jp
dec
inc
and
adc
push
xor
mov
pop
sbb
push
dec
fstpl
testl
iret
repz
pushf
adc
cmc
je
adc
iret
dec
cmp
cwtl
gs
jmp
and
inc
lcall
flds
nop
call
cltd
mov
inc
test
cmpsb
stos
or
push
cmpsl
lods
add
daa
fsub
and
or
into
pusha
mov
xchg
sbb
pop
fcom
out
mov
sahf
and
xor
gs
cld
jb
cmpsl
cmp
push
mov
cmc
lea
and
pop
orb
jmp
xor
mov
mov
loop
sbb
cmp
das
pop
leave
das
test
imul
imul
add
fnsave
clc
dec
sahf
mov
leave
call
jo
das
fs
popf
sbb
mov
jp
adc
add
mov
fstpl
xor
dec
jecxz
push
mov
aad
gs
jae
push
mov
shlb
sbb
jne
lods
out
daa
les
xor
xchg
jg
leave
andl
data16
pop
or
hlt
aam
or
cwtl
add
mov
or
jb
sub
hlt
lret
cld
push
ds
js
dec
mov
out
sub
test
in
pusha
aaa
cmp
outsb
repz
popf
mov
stc
mov
test
lds
jp
jne,pt
jle
dec
and
inc
loope
push
jno
testl
push
and
lahf
sbb
fxch
mov
das
adc
decl
addb
ds
movsb
inc
xor
popf
push
in
lret
cwtl
sub
mov
mov
pop
xchg
dec
movsl
lds
pop
mov
xchg
adc
and
ret
loope
mov
idivl
f2xm1
movsl
stos
add
fmul
adc
xchg
test
das
sub
in
jno
call
add
jb
cmc
fwait
cmpsl
sub
xchg
xor
in
int
or
mov
push
pop
das
adc
jmp
cmp
xlat
ds
ficomps
mov
in
inc
shll
scas
subl
sbb
adcl
jecxz
repz
xchg
decb
and
and
push
ret
sub
sahf
mov
cmpsl
add
mov
mov
fildll
inc
pop
push
dec
popf
mov
iret
clc
xchg
sub
das
pop
out
cmp
cs
les
sbbl
in
dec
push
in
jmp
movsl
fs
les
push
test
insl
incb
xor
fnsave
int3
and
mov
shl
mov
cmpsb
mov
in
sbb
and
lcall
push
jge
ss
popf
jmp
lea
in
test
push
mov
sub
cmp
and
pushf
sub
dec
and
dec
mov
fsub
sub
scas
inc
or
xor
inc
inc
mov
adc
cmp
insl
out
dec
cltd
xlat
fdivr
mov
fwait
add
loope
pop
add
out
fwait
pop
cmp
xor
outsl
sub
testl
push
in
jl
fsubrs
xchg
adc
in
add
and
adc
and
fimuls
ja
decl
mov
mov
adc
and
mov
inc
cli
xchg
sbb
sbb
les
sbb
xorl
out
push
mov
xchg
and
cmpsl
lcall
clc
test
lret
xchg
ss
xor
fmull
sahf
adc
pop
push
sbb
leave
mov
xchg
test
push
test
xor
orb
sbb
jle
in
push
enter
pop
push
push
inc
lret
roll
and
mov
fdivrl
add
adc
pusha
cs
lahf
xor
inc
sub
out
jge
std
adc
decb
es
test
mov
xchg
jns
stos
mov
adc
mov
and
adc
pusha
mov
pushf
xlat
inc
popf
xchg
xor
or
fs
fwait
dec
mov
adc
cmc
mov
sub
mov
add
enter
std
and
pop
scas
xchg
adc
xchg
or
jno
cwtl
mov
xchg
xchg
mov
nop
adc
in
insl
push
arpl
pop
or
ss
hlt
in
fcoml
aas
push
sbb
push
push
jne
adc
gs
xchg
rcrl
outsb
clc
dec
test
jbe
testb
cltd
pop
std
seto
fs
icebp
nop
push
lods
dec
loop
dec
sub
hlt
push
xchg
sub
shl
add
mov
fucomp
xchg
jno
movsb
ss
adc
push
adc
pop
adc
xchg
mov
nop
testb
xchg
mov
jns
addl
jg
pop
aam
idivb
xor
out
mov
cmp
es
lds
popa
ja
jg
ret
ds
cltd
outsb
add
xchg
fstpt
je
sbb
push
mov
mov
lcall
mov
inc
fdivrs
fidivrl
rcl
inc
stos
sbb
jns
in
and
jnp
push
frstor
push
inc
decl
fucomi
add
repz
addl
je
in
enter
xchg
fnstsw
loope
stc
jnp
cmp
nop
jecxz
shrl
out
xor
mov
or
pop
cmc
cwtl
aas
push
pop
cli
popa
add
mov
sti
pop
lcall
cmp
push
jl
jg
jne
out
fs
inc
mov
movsb
sub
icebp
xor
hlt
push
jne
in
mov
xchg
jg
inc
xor
mov
mov
in
dec
add
jl
push
lret
push
push
push
or
or
je
and
adc
and
xchg
sub
inc
ret
jae
sahf
lods
sbb
add
aaa
jno
pop
lds
dec
std
xchg
out
ret
add
loope
cmpsb
lret
adc
lods
mov
inc
loope
movsl
aaa
pop
lock
sarb
ret
xchg
cmp
lret
mov
mov
in
sub
out
mov
in
jp
cli
ret
adc
mov
movsb
mov
sub
mov
xchg
aaa
xchg
mov
cli
pushf
sub
daa
push
lret
mov
hlt
cmp
add
iret
fsubrs
add
pop
jp
out
mov
inc
cmpl
cmp
pushf
cli
sub
mov
mov
push
mov
xorb
sub
add
in
sub
mov
mov
adc
leave
test
push
testb
jbe
cmc
movsl
gs
xchg
ss
popf
xchg
mov
fsubl
lods
ljmp
bound
jle
shrb
popa
xchg
imul
sbb
jo
push
outsb
loope
lds
in
jbe
pop
mov
xchg
stos
pop
cmp
push
mov
je
mov
sti
arpl
mov
mov
pop
dec
popa
lahf
in
xchg
sbb
jae
nop
push
leave
adc
or
insb
lods
in
inc
lock
lahf
and
sbb
push
ret
shll
aam
icebp
mov
fnstsw
pop
test
test
xchg
inc
xor
sbb
jb
sub
sub
aad
mov
push
add
je
pop
sahf
loope
cmpsl
scas
movsl
fcomps
dec
aad
mov
insb
inc
adc
cmc
pop
sahf
loop
inc
mov
mov
clc
test
pop
inc
in
aam
fidivs
call
mov
popa
xchg
add
xor
xchg
popf
xchg
lods
xorl
or
loop
xchg
inc
add
ss
mov
adc
jb
out
jmp
mov
jbe
dec
mov
or
pusha
pop
scas
popf
jmp
jg
pop
das
hlt
pop
jle
mov
pop
adc
jge
sub
fs
sti
inc
gs
cmp
movsl
fisttps
lret
stos
mov
repnz
cmc
xchg
push
or
test
pop
lea
xlat
mov
or
sub
int
xchg
sbb
pop
xor
cmp
call
adc
ljmp
push
push
imul
xor
mov
cmpsl
sbb
cwtl
pusha
in
cwtl
rcll
fmul
mov
and
adc
xchg
push
subl
cmpsb
add
cwtl
mov
lret
stos
sub
adcl
xor
cltd
xchg
push
ss
adc
pop
out
stos
xchg
pop
fdivrs
cmp
add
mov
mov
lods
mov
nop
jecxz
or
adc
dec
cmpsb
jge
xlat
jg
shll
cmpsb
xor
mov
pop
negl
mov
push
xchg
push
inc
lods
bound
into
ret
and
or
daa
push
mov
and
in
push
cmp
ss
and
cmp
push
shr
repnz
aas
pop
mov
cs
mov
cltd
pop
add
roll
rclb
mov
sbb
loop
andl
mov
sbb
in
jmp
pop
pop
adc
and
popf
sub
add
imul
hlt
pop
call
cmpsb
ds
stos
bnd
fstl
pop
mov
mov
push
icebp
sahf
rcrb
xchg
mov
mov
popl
lods
imul
or
lea
mov
mov
movsl
push
inc
fstpt
fdivs
push
add
adc
cmp
lock
shrd
xchg
addl
push
xsave
jge
xor
es
sub
enter
push
pop
add
scas
jnp
outsl
fbstp
aam
jae
int
pop
pop
cmp
fmull
dec
jb
push
mov
fldcw
dec
in
pop
test
pop
mov
dec
xchg
imul
xor
push
fists
push
fucomip
mov
out
add
sub
call
inc
les
int
ret
daa
add
dec
insl
js
sub
loope
enter
ret
and
loope
add
cmc
in
cmpsl
int3
cltd
rclb
xor
sub
out
xor
pop
lods
cmp
mov
inc
mov
dec
icebp
adc
mov
mov
mov
icebp
add
push
push
or
mov
or
mov
fsubrs
stc
fs
mov
adcb
jb
stos
inc
movsl
lds
lret
out
sbb
and
adc
inc
pushf
sahf
adcb
sbb
gs
sahf
push
jns
or
push
aam
fsubr
aaa
into
and
mov
jge
fwait
mov
pop
test
pusha
fiadds
fwait
pop
dec
push
dec
pop
pop
cmp
pop
ret
iret
sbb
mov
xchg
pop
sbb
mov
fidivs
std
movsb
mov
neg
loope
icebp
xchg
jne
notl
fsubl
jbe
lea
and
xchg
nop
pop
cld
int
or
shlb
mov
pop
pop
xor
adc
push
cmpsl
jo
outsb
addr16
fwait
es
mov
call
mov
jbe
inc
xor
xchg
xor
push
stc
mov
fldt
leave
stc
sub
and
ret
hlt
test
fdivs
out
push
mov
mov
push
sub
mov
outsl
inc
sub
data16
out
dec
shr
dec
fldenv
or
movsl
dec
out
orl
cmp
mov
fcoms
pop
mov
mov
lea
int3
cmp
xchg
cmpsl
dec
shl
lcall
mov
jge
cltd
cmp
jo
rclb
rclb
inc
dec
aad
cmp
out
sbb
and
push
popa
sbb
xor
loop
push
leave
mov
fistl
xor
or
stc
sbb
inc
fldl2t
jne
mov
in
lea
sub
add
out
icebp
lret
sub
or
hlt
icebp
push
nop
inc
lret
stc
int3
testb
scas
stc
loop
test
or
mov
ret
and
or
push
xor
add
addr16
cmc
enter
pop
test
int
and
mov
addl
pop
leave
xchg
mov
xlat
shrl
push
and
lret
mull
pop
imul
mov
movsl
aas
inc
fisubrl
gs
shl
jl
pushw
aad
ja
adc
jecxz
inc
push
aad
dec
lret
pushl
les
xchg
out
adc
leave
js
addr16
push
filds
mov
cmp
cmp
scas
sbb
jnp
lods
xlat
cmp
shll
out
mov
faddl
sahf
jno
and
mov
mov
out
mov
jmp
and
lock
xor
ret
inc
inc
adc
jg
mov
enter
scas
add
loope
and
bound
jbe
fadds
jl
pop
mov
mov
cli
xchg
cmp
pushf
lods
adc
sbb
inc
push
addr16
fcompl
in
jb
iret
aaa
into
ficoml
stos
jnp
lret
pusha
cmp
cmp
stos
xchg
out
dec
sbb
popf
int3
mov
int
mov
push
addr16
inc
test
fcompp
test
out
and
dec
mov
aad
adc
in
xor
dec
push
pop
xor
mov
popa
ja
xchg
pop
or
cmp
mov
jge
leave
scas
inc
mov
mov
xchg
mov
push
jo
xlat
pop
mov
mov
xchg
cs
or
xor
fistps
mov
mov
in
push
sub
jb
cmp
mov
movsl
dec
lret
mulb
imul
adc
sub
jnp
cwtl
lahf
and
xor
in
jns
inc
aaa
add
push
xchg
add
inc
or
mov
dec
dec
test
add
mov
mov
push
jo
sub
mov
dec
push
sub
subl
mov
xchg
xor
cmpsb
cmovbe
sbb
add
data16
rcrl
ljmp
and
jg
jp
add
add
mov
in
test
pop
insb
sub
arpl
xchg
mov
sub
cmp
pushl
jnp
into
hlt
pop
icebp
dec
cwtl
imul
fucomp
ds
sbb
testb
cli
xchg
int3
popa
div
mov
or
movsl
or
dec
push
cpuid
xor
push
sub
pop
dec
pop
pop
push
sbb
ffreep
lods
xchg
pop
inc
xlat
pop
lock
hlt
int
int3
enter
push
aas
ljmp
cmpsl
push
aam
stos
sub
xor
mov
aas
mov
adc
mov
stc
mov
test
cmpl
mov
enter
iret
jo
aas
sbb
sbb
xchg
sub
lahf
popa
into
lahf
outsl
sbb
jno
jo
xchg
pop
ljmp
hlt
mov
jle
fdivrs
add
adc
inc
mov
dec
pop
into
jl
sbb
inc
mov
arpl
loope
sbb
cwtl
sub
outsl
sbb
addr16
fwait
pop
sub
scas
push
mov
sbb
push
cld
xchg
push
test
out
fwait
pushf
or
test
adc
jecxz
dec
pop
and
inc
push
lods
js
mov
lock
sbb
dec
push
cmp
jne
inc
mov
rcrb
test
jecxz
or
cmpsb
push
mov
sbb
lock
daa
inc
dec
sbb
into
pop
stos
andb
shlb
dec
pop
sti
sbb
sub
xchg
mov
cmp
in
lods
adc
ds
xchg
xor
clc
push
mov
movsb
arpl
jnp
jmp
jnp
stos
fs
and
inc
arpl
ds
in
scas
aas
ficoms
in
dec
inc
fisubl
mov
es
push
mov
push
mov
push
fnstenv
sbb
pop
je
sti
es
lahf
test
xchg
jge
jecxz
add
pop
cmp
out
xchg
or
and
xor
popa
jne
loopne
xchg
dec
frstor
loop
es
xor
xor
cmp
enter
inc
in
or
les
imul
mov
fistl
in
and
fsubrs
aam
in
mov
sub
outsb
add
ss
fisubrs
pushf
jo
pop
xor
ss
lock
in
rolb
fldt
xchg
xor
loope
daa
dec
push
test
add
and
repz
stos
or
arpl
sbb
push
dec
lret
push
lods
lock
call
jns
mov
mov
and
cmp
into
mov
maskmovq
testl
into
stc
rcll
les
adc
sub
adcb
inc
dec
xchg
jae
icebp
shr
sbb
inc
and
aas
adc
les
outsl
jns
mov
lret
dec
fnstsw
jg
mov
stos
shll
mov
jmp
xchg
lock
stos
pop
movsb
xchg
xor
push
test
pushf
and
into
data16
cwtl
in
push
lret
adc
mov
popa
and
notb
in
inc
mov
xor
push
mov
inc
test
pop
xor
pop
lock
cltd
lods
int3
cld
rcll
cltd
test
xor
movb
jle
sub
imul
pop
insb
mov
mov
cld
inc
sbb
and
dec
xlat
xor
aas
jns
je
lea
stc
mov
daa
mov
mov
decl
push
xor
in
bound
out
push
movsl
pop
jecxz
mov
jo
sbb
pop
ficompl
pop
movsl
popf
inc
fcompl
loopne
je
dec
sbb
loope
and
or
or
jp
sbb
pop
jg
inc
pop
mov
adc
int3
pop
inc
in
mov
and
loope
fdivl
sti
cmp
jbe
lahf
inc
stos
add
adc
push
mov
loope
jb
bndstx
scas
shll
loope
sub
daa
mov
sub
ret
negb
inc
sub
jecxz
clc
jne
sbb
mov
xchg
cmp
shl
mov
mov
xchg
or
adc
add
rol
sub
mov
mov
lret
jnp
out
addr16
lret
inc
xchg
faddl
adc
mov
xor
inc
flds
push
shrl
xchg
jle
mov
rorl
xor
call
xor
mov
adc
dec
loopne
shlb
xor
jbe
cmpsb
jp
pop
stos
push
sub
leave
dec
sbb
pop
cltd
adc
fidivs
cli
hlt
int3
addl
push
scas
fdivrs
mov
add
sub
pop
out
cmp
dec
add
xor
pop
repz
imul
cmpsb
xor
sbb
cltd
stos
and
xchg
cmpsl
xchg
inc
adc
repz
xlat
xchg
dec
clc
xchg
gs
dec
and
outsb
les
or
cmp
scas
mov
push
mov
xchg
mov
xchg
xor
in
stos
add
push
in
push
pop
ljmp
sbbl
mov
push
inc
aad
adc
xor
in
mov
adc
cmp
in
mov
mov
sbb
lret
sbb
js
add
decl
fs
enter
and
loopne
ret
add
aam
fildl
cwtl
sbb
lret
pop
sahf
dec
dec
into
xor
sbb
pop
and
in
std
pop
inc
pushf
cli
jmp
add
xchg
ss
jge
xchg
pop
or
loopne
leave
mov
inc
cltd
inc
push
or
xor
inc
sbb
mov
aad
int3
jge
leave
outsb
les
insl
lcall
sub
iret
adc
jg
xchg
xchg
mov
enter
rep
test
or
mov
pop
lea
bswap
inc
sub
jnp
lock
mov
mov
xchg
dec
sahf
sbb
jae
mov
mov
scas
adc
sbb
xor
add
insb
fcomps
lea
inc
mov
mov
fistpl
cwtl
das
cli
sub
lahf
call
lret
push
push
icebp
insb
sub
movl
sahf
frstor
adc
jl
xor
idivl
fdivrl
ja
das
movb
sbb
inc
jns
mov
push
call
adc
pop
and
push
repnz
mov
push
inc
iret
outsb
mov
xor
lods
fsubrl
pop
mov
dec
je
clc
or
cmpsl
ds
cltd
inc
mov
mov
cmp
push
or
cltd
data16
stc
in
pushf
in
mov
es
loop
fwait
push
xor
or
sahf
das
fmulp
loopne
push
ds
int
gs
fwait
mov
jbe
lds
popl
push
aas
pop
outsb
in
push
js
add
mov
xchg
jp
adc
ret
dec
ljmp
movsb
incb
sub
dec
repz
fsubrl
popa
push
sarb
lret
sub
pusha
cli
inc
jns
out
lcall
cmp
push
xchg
pop
les
cmp
add
cltd
jns
or
xor
jge
dec
data16
popf
sub
subl
int3
pop
movsb
cmpsl
jbe
push
inc
scas
lods
mov
sti
mov
xchg
std
popf
fldl
hlt
cmp
bound
xbegin
pusha
push
out
jecxz
nop
lea
movsb
mov
xor
pop
lds
imul
sbb
flds
or
mov
test
pop
and
outsl
leave
xchg
fsubrp
fsts
fcomps
shlb
xor
mov
cmp
ficoms
decb
mov
test
cmp
pop
mov
gs
sbb
xor
cli
mov
and
scas
loope
pop
hlt
jge
push
fiaddl
sahf
inc
dec
mov
push
mov
insb
jle
movsl
cli
add
and
dec
aam
adc
test
mov
cld
or
das
loopne
xchg
xor
mov
ja
dec
ror
inc
add
pop
or
jbe
mov
xchg
daa
mov
fldln2
add
mov
fldcw
shlb
xchg
and
pop
lret
jae
cmp
inc
sub
dec
and
mov
test
test
lret
push
rol
lds
pop
mov
push
mov
xor
cmp
je
push
xor
pop
loopne
mov
inc
addr16
mov
cs
fsubrl
dec
lea
sub
leave
int3
xchg
rolb
out
mov
and
dec
icebp
or
or
push
mov
lret
and
scas
int3
icebp
mov
jg
ja
add
cmp
sahf
sbb
jg
jne
xchg
xchg
or
xchg
imul
pop
pop
or
lea
jl
dec
mov
add
dec
ljmp
xchg
adc
test
mov
cmpsl
xor
adc
xor
mov
fwait
lock
pop
mov
mov
clc
sub
rcrl
xchg
jo
jle
xchg
mov
mov
scas
and
cmp
sbb
xor
or
dec
and
out
xchg
pushf
mov
adc
cs
addr16
mov
push
fldenv
mov
fimuls
out
loope
xchg
orb
call
jb
pop
sbb
lea
xorl
dec
call
dec
push
jae
cmpsl
imul
enter
daa
pop
loop
mov
xchg
cld
imul
mov
mov
in
ficompl
dec
sbb
sbb
dec
shlb
call
inc
push
popf
cmp
pop
fwait
nop
or
fnsave
int
scas
daa
mov
dec
insl
sbb
pop
cmp
jbe
das
stc
lahf
pop
mov
stos
fucom
mov
cmc
pop
cmpsb
inc
fcompl
outsb
add
pop
push
dec
in
aam
jge
xchg
imul
mov
mov
adc
xor
mov
aad
xchg
scas
test
lock
out
gs
mov
sub
inc
mov
xchg
adc
movsb
jg
xor
or
loop
add
cmp
jno
ror
mov
push
lods
sub
rcll
pusha
test
js
lret
cmpl
fsubrs
sti
push
lea
cld
xchg
push
ss
lock
pop
xchg
lock
test
cmpsb
std
fildl
push
ja
xorl
sbb
or
adc
dec
test
sbb
jae
mov
xchg
add
dec
xchg
bound
dec
lock
sub
push
cld
cwtl
cmp
inc
sbb
out
dec
push
jmp
pop
lahf
jle
sub
lods
jb
mov
loopne
icebp
push
stos
and
aas
inc
xchg
jno
leave
enter
xchg
adc
icebp
or
jg
ret
filds
pop
ds
fnclex
pusha
push
std
mov
lds
rorl
js
out
popa
push
idiv
orb
sub
mov
adc
sub
inc
push
hlt
mov
jmp
cld
push
jns
int3
sbb
push
mov
in
pusha
stos
pop
fidivrs
or
adc
pusha
imul
test
xchg
les
repnz
test
or
add
scas
push
mov
sbb
mov
or
das
pop
insl
mov
fmull
cmp
sub
rcrb
jle
lds
sub
inc
and
mov
inc
inc
outsl
imul
filds
dec
or
jno
push
in
daa
shl
adc
adc
inc
mov
mov
push
test
and
adc
in
pop
and
loop
pop
test
jge
dec
cmpb
rcr
scas
inc
cld
sbb
ja
das
sbb
xchg
adc
add
rorb
cmpsb
sub
sub
pushf
adcb
jmp
pop
std
sti
jmp
fwait
push
sbbl
fwait
dec
or
rolb
jge
into
sbb
jnp
mov
add
bound
dec
ds
pop
hlt
dec
dec
pop
lea
or
mov
rcrb
sahf
pop
inc
dec
pusha
sub
mov
fcmovnu
and
std
mov
xor
imul
out
mov
ret
outsb
inc
mov
push
cwtl
push
xchg
xor
arpl
nop
daa
and
jno
ljmp
pushf
daa
xlat
inc
jne
stc
dec
xor
mov
shlb
add
lods
arpl
sti
sub
repnz
adc
xor
inc
pop
lret
mov
push
pushf
lods
push
xor
sbb
sub
jge
dec
push
jnp
cwtl
mov
das
adc
mov
lds
or
clc
jle
sub
into
daa
add
push
stos
and
pop
xor
leave
in
clc
divl
inc
pop
test
or
push
mov
sub
in
and
mov
shl
jbe
sbb
popa
addl
imul
imul
mov
dec
lock
rclb
loop
pop
scas
push
mov
adc
std
mov
aad
jns
jecxz
pop
mov
ficoms
lods
and
adcb
lods
rcr
and
push
adc
pop
je
aam
or
xchg
or
pushl
gs
pusha
popa
cmp
and
jns
jle
in
stos
jns
mov
pop
dec
xor
inc
arpl
popf
aad
mov
add
add
sub
shlb
ret
cmp
mov
mov
inc
xchg
adc
jae
xchg
dec
push
jne
mov
ds
xchg
arpl
je
lods
sub
mov
leave
test
mov
mov
imul
mov
int3
test
jp
or
xchg
and
pop
jo
lret
sub
outsl
sbb
mov
pop
repnz
das
shll
rcrl
sbbb
mov
cmpsb
loopne
xchg
cmp
mov
adc
inc
daa
mov
mov
pop
out
sti
mov
push
scas
int3
mov
jge,pt
jbe
repz
xchg
jge
js
lea
jge
sub
sbb
hlt
pop
insb
mov
mov
mov
mov
mov
addb
inc
pop
mov
in
dec
push
mov
scas
nop
fdivl
ret
xor
mov
jge
mov
dec
inc
or
test
int
and
outsb
lods
dec
nop
pop
push
adc
rcrb
notb
scas
pop
shlb
push
fldcw
adc
popf
enter
out
jo
in
xchg
add
adc
push
sbbl
xchg
fnstcw
push
push
fdivl
shlb
adc
into
lret
pop
and
jno
xor
or
lcall
lcall
push
cmp
movsb
dec
mov
mov
mov
cmp
mov
lods
mov
mov
fstp
sub
push
sub
mov
dec
in
jg
mov
call
adc
in
outsl
xor
inc
rcrl
rclb
jecxz
iret
mov
out
test
push
mov
adc
xchg
xor
ret
cmp
dec
lods
mov
out
fmuls
jns
inc
cmp
inc
loop
mov
jb
scas
cli
xchg
gs
mov
out
dec
loope
lods
hlt
push
xor
adc
xchg
cli
xchg
or
std
mov
cmp
test
pop
pop
int3
hlt
jnp
ds
loope
outsl
jns
pop
xchg
mov
jnp
test
jecxz
es
and
sbb
sub
out
dec
jae
loope
jg
adc
xor
sbbb
loope
mov
or
addr16
jmp
jge
sbb
andl
dec
daa
xorb
push
in
fistps
mov
jg
jmp
jmp
pop
lcall
cli
mull
lds
stc
add
sbb
and
mov
push
xor
jb
xlat
and
ja
das
js
pop
pop
pop
arpl
pop
insl
xor
repz
push
cmp
mov
adc
inc
xchg
lcall
adc
fildll
shld
into
in
mov
xor
scas
cmp
pop
jne
rcrl
fwait
sbb
inc
mov
pushf
or
clc
out
and
outsl
mov
adc
out
iret
or
jbe
fcompl
imul
pop
and
mov
or
pop
mov
fidivs
loop
sbb
lahf
jl
adc
pop
nop
mov
iret
xor
int3
arpl
into
lds
push
and
dec
inc
push
out
adc
sub
outsb
add
in
rorb
sti
arpl
jae
rorb
adc
imul
jno
sti
into
mov
xchg
es
sahf
lcall
cltd
sub
and
in
jo
testb
jnp
fs
fidivrs
cmc
and
push
xchg
daa
out
cmpsl
ss
xlat
mov
sti
xchg
mov
clc
and
andb
imul
jmp
loope
shrl
mov
inc
lahf
push
bound
add
dec
sbb
pop
std
pushf
or
pminub
xchg
addr16
and
popa
lret
push
fnstcw
lcall
cmpsl
pop
pop
fiaddl
movsb
out
pop
xchg
push
aam
imul
cmp
ds
test
pop
fucomip
mov
ret
in
jge
cltd
cmpl
mov
mov
loopne
or
sahf
rorl
jo
xchg
dec
in
fwait
ret
outsb
inc
push
ret
mov
pop
adc
cmp
push
push
xchg
in
std
sub
xlat
imul
out
negl
aam
insl
rolb
dec
fisttps
insb
mov
mov
out
lds
loope
insl
fs
and
mov
push
or
dec
cmc
pop
add
sub
scas
subb
lcall
lret
mov
mov
daa
cmp
aaa
sti
inc
imul
in
push
stos
mov
push
in
mov
mov
ficoml
fidivrs
hlt
adc
pop
iret
pop
xor
icebp
popf
sub
js
enter
addl
xorl
aaa
jb
call
jp
repz
or
pop
out
imul
jg
sahf
enter
rcrl
adc
ret
mov
movsl
push
inc
mov
popa
lea
jae
stos
push
mov
inc
add
stc
sbb
outsb
movsb
ret
mov
hlt
or
jnp
int
aam
enter
mov
jns
sub
pop
jbe
push
gs
mov
test
imul
outsl
out
mov
jns
sbb
push
leave
and
into
or
cmp
in
leave
mov
add
and
stc
out
scas
nop
xor
in
inc
ret
add
ds
inc
fwait
negl
and
cli
dec
inc
xlat
lret
pop
pop
or
shrb
push
cld
popa
sbb
jle
xchg
mov
fisubs
movl
xor
xchg
adc
jnp
fcomps
in
pop
loope
and
jne
stos
mov
jnp
and
pop
mov
out
js
jg
loopne
jae
cmpsb
cmp
mov
sbb
lcall
dec
sub
mov
cmc
mov
shrb
cli
adc
int3
push
inc
sub
or
andb
mov
sbb
ja
cmp
and
test
sbb
andl
dec
or
dec
sbb
add
adc
enter
cli
mov
fmull
test
add
and
xchg
mov
lcall
adc
mov
repnz
pop
sbb
ss
or
cmp
xchg
js
js
jno
pop
add
mov
call
mov
push
ret
insl
fsubp
cld
xchg
shr
mov
pop
cwtl
xor
xor
outsl
mov
cwtl
mov
mov
stos
fisttpll
jle
add
mov
jae
aaa
hlt
sbbl
lahf
sub
push
repnz
jno
xchg
ds
xor
xchg
xchg
and
decl
cmp
mov
lea
jecxz
xchg
mov
scas
repz
sbb
lret
sub
imul
push
pop
cmpsb
inc
mov
cmp
ljmp
movsb
aas
call
or
lcall
cwtl
je
or
jle
sbb
loope
push
ljmp
jno
divl
jns
adc
mov
push
lret
and
jb
movsb
mov
fnclex
sbbl
stos
pop
pop
push
clc
xor
mov
inc
cmp
pop
mov
mov
push
ljmp
inc
in
aas
push
xchg
pusha
xor
pop
add
dec
or
insl
shrl
jnp
ljmp
stos
mov
inc
mov
cmpsl
mov
mov
push
mov
or
sbb
outsl
fimuls
xor
push
inc
push
cmp
test
test
popa
inc
xor
in
add
pop
lcall
sbb
push
enter
push
call
xor
loop
outsb
mov
jnp
stos
mov
push
adc
push
adc
mov
mov
xchg
rcrb
inc
inc
push
in
call
and
sbb
je
cmp
iret
xor
push
jne
int
sti
push
inc
jmp
dec
pop
in
cld
adc
scas
out
iret
cmp
or
ja
sahf
fdivs
mov
stos
rolb
pusha
pop
std
mov
iret
and
sahf
mov
mov
sbb
shr
push
nop
xchg
ret
sub
mov
lret
and
jb
jge
xor
dec
sub
clc
inc
cvttps2pi
jl
cmp
ljmp
push
lods
vcmpsd
imul
cmpsl
ret
pop
fcomps
push
aam
pusha
aaa
mov
inc
mov
or
bound
out
inc
pop
leave
inc
loop
add
imul
shlb
or
mov
into
loope
mov
or
sarl
pusha
xchg
xor
out
cmpsl
cli
push
push
lods
ja
cmp
call
repnz
cmpxchg
fs
mov
sbb
and
and
sahf
xor
cmp
fcmovnbe
xor
jae
test
enter
out
sahf
iret
fstl
sbb
sarb
lods
cmc
in
mov
dec
mov
icebp
push
fadds
shrl
jmp
aaa
xchg
jge
cmpsl
test
cmp
pop
push
insl
inc
add
ret
jbe
js
sbb
inc
scas
inc
jns
shrb
dec
int3
je
pop
xor
aam
pusha
jp
outsl
mov
ret
mov
mov
push
repz
aam
mov
test
jge
mov
inc
fisubs
imul
sbb
leave
pop
push
lods
movsl
cmp
mov
fsub
push
push
xchg
add
pop
cmpb
lahf
and
leave
int
push
cmp
fwait
out
hlt
sbb
aaa
int
inc
inc
and
dec
inc
push
cmpsl
cli
aas
jb
mov
sbb
push
cli
in
stos
cmpsl
mov
sbb
cld
repz
cmp
or
rcl
push
push
out
mov
adc
push
idiv
daa
clc
xchg
pop
hlt
add
mov
rcr
sarb
loop
shrl
data16
push
or
mov
fiadds
iret
out
lds
dec
divb
pop
pushf
scas
mov
sub
mov
femms
jbe
dec
dec
das
in
jnp
shlb
or
push
push
cmp
fdivrs
xchg
lods
adc
jne
xor
mov
sbb
cs
pop
jecxz
mov
xchg
or
sub
mov
pop
loop
fadd
mov
fisttpll
pop
mov
lods
test
and
cli
sub
jae
sbb
decb
mov
aad
cmp
repz
and
xor
repnz
adc
rcl
jne
mov
dec
scas
inc
cli
jno
test
cs
jg
pop
mov
aam
mov
fiadds
pop
loop
popf
pop
push
push
inc
xor
leave
sti
into
mov
pusha
or
adc
aas
lods
adc
test
push
movsl
cld
cmp
jle
xlat
rclb
sti
aaa
pop
sbbb
push
jbe
xor
shl
test
adc
inc
shrl
ljmp
adc
daa
mov
fldl
std
mov
mov
xabort
xchg
daa
pop
test
cs
push
sarl
std
sbb
push
sub
stos
xor
jo
icebp
fnstcw
inc
fwait
int3
lret
test
mov
sbb
dec
jle
mov
scas
daa
push
mov
dec
aad
clc
jo
popf
test
sahf
ss
fwait
cld
pop
lea
add
scas
jp
aad
repnz
adc
mov
fsubl
insl
fsubp
loope
cmp
outsb
xchg
sbb
stos
into
ljmp
xor
add
in
push
iret
fildl
fldcw
movsl
sbb
push
dec
vpcmpgtb
sahf
jae
jmp
fs
mov
popf
dec
sub
addr16
out
ret
shll
les
jge
lahf
fs
mov
inc
push
pusha
inc
jmp
push
js
cmp
test
xchg
psubq
add
adcl
dec
nop
and
push
fidivl
cmpsb
cmp
fnstsw
pop
lock
adc
jecxz
inc
mov
bound
add
push
push
rorl
xchg
pop
inc
stos
adc
pop
or
inc
mov
test
fcomps
pop
mov
rcl
inc
test
mov
sbb
jg
pop
and
std
outsl
cwtl
pop
add
xor
int3
fidivl
mov
jl
xchg
add
push
ds
in
test
insb
inc
and
mov
jb
shrl
xchg
cmpsl
mov
hlt
imulb
imul
xor
in
orb
dec
lret
pop
loop
cmpsb
cmp
add
mov
jae
inc
loop
ss
in
sub
aas
xor
inc
jbe
dec
scas
pop
xchg
lret
fs
std
test
jle
jle
push
mov
dec
add
cld
pushf
cld
mov
js
popf
test
inc
push
popf
jbe
loopne
cmp
cwtl
push
and
sbb
sbb
dec
scas
dec
xor
jle
sbb
xchg
js
in
test
jecxz
sbb
popa
jns
outsl
xor
push
xchg
cmp
ret
fwait
dec
mov
sbb
leave
mov
addr16
mov
lsl
xchg
xlat
negb
dec
add
and
in
imul
adc
ljmp
pusha
int
imul
addr16
test
lret
flds
rcrl
jae
std
das
mov
loope
cli
xchg
jmp
jae
and
xchg
ja
pop
imul
pop
add
pushf
xchg
pop
sahf
mov
jle
je
popa
clc
dec
mov
adc
arpl
sti
mov
icebp
mov
add
mov
bound
in
or
inc
pop
cmp
repnz
movsb
daa
adc
push
xor
sub
xchg
add
icebp
dec
and
popa
out
xor
xorb
scas
ret
pop
and
ds
cmpsl
repz
ror
cmpsb
sbb
push
mov
xchg
cmp
clc
sbbl
or
pop
inc
dec
popf
and
in
push
insb
add
push
mov
push
push
or
pop
scas
pusha
sub
mov
fcoms
xchg
shrb
ljmp
push
mov
fwait
mov
adc
xchg
ret
or
pop
scas
fsubrs
fwait
push
xor
push
jae
ss
push
andl
test
mov
mov
xchg
lret
insl
dec
pmaxub
mov
xchg
out
test
cmp
or
sbb
seta
ret
mov
int3
into
and
cmpb
inc
stos
sub
and
push
stos
or
xor
cs
add
inc
in
xchg
mov
popa
repz
sbb
mov
cwtl
xor
fnstcw
jne
adc
test
out
data16
inc
imul
pop
xchg
mov
adc
negb
movsl
fwait
out
int3
add
xor
push
in
and
aad
test
jae
xchg
js
xlat
test
lds
and
and
mov
andb
adc
in
es
rolb
enter
jnp
and
stc
inc
shl
sbb
cmp
movsb
pop
adc
loop
lods
mov
les
les
movsb
jns
add
pop
icebp
mov
mov
jecxz
or
leave
out
dec
pop
and
int3
and
push
out
add
fmulp
lods
addr16
imul
pop
mov
div
mov
cmp
inc
in
testl
adc
fldl
pushf
jae
jns
ja
mov
icebp
mov
into
jg
ja
jmp
js
pop
ret
bound
xchg
in
cmp
mov
out
mov
sub
into
cmpsb
pop
mov
out
mov
sub
pop
out
ret
and
arpl
dec
rorl
inc
sahf
in
out
push
sbb
iret
lods
out
fdivp
xchg
imul
rcr
leave
repnz
push
adc
es
decl
xchg
xor
cmpsl
hlt
fadds
mov
jo
sbb
and
mov
mov
xor
mov
aaa
mov
or
inc
sahf
inc
and
hlt
add
es
push
dec
inc
lcall
and
jp
in
stos
adc
inc
mov
into
lds
int
xchg
dec
mov
jo
sub
ret
pop
sbb
xor
lods
ja
ja
ds
xor
aad
mov
and
and
cmp
xorb
mov
pusha
sbbb
mov
lods
in
add
xlat
in
sahf
mov
into
fdiv
test
push
mov
and
push
fdivrs
stc
insl
mov
daa
xor
sbb
outsl
cmc
xor
out
out
inc
imul
mov
gs
cs
mov
les
idivb
mov
mov
lock
pop
hlt
shrb
jl
jge
icebp
xchg
pop
add
jl
push
jne
jecxz
add
lcall
enter
ret
icebp
out
pop
bound
add
xor
xchg
inc
inc
knotw
and
out
pop
outsb
xchg
nop
xchg
cmp
mov
and
pushf
sbb
ret
jo
jecxz
aam
xchg
sub
fidivrs
adc
int3
push
jb
inc
pop
cmc
mov
repnz
in
leave
pusha
cmp
jle
imul
push
push
out
inc
in
sahf
xor
inc
xlat
dec
loopne
dec
cmpsl
ds
js
aaa
imul
inc
mov
negb
or
sbb
scas
mov
xchg
sub
rorb
jbe
xor
jno
insl
mov
xchg
sub
pop
adc
inc
inc
or
lea
fwait
xor
aaa
jae
test
jecxz
imul
jns
xchg
frstor
rcll
sbb
cmpsb
sahf
jno
add
mov
loop
in
cmp
aaa
jnp
ret
mov
aad
lcall
dec
pop
inc
dec
js
jge
mov
push
inc
sub
lds
lret
push
lods
in
in
pop
inc
xchg
hlt
cmp
mov
mov
jb
mov
in
pop
cmp
mov
negl
push
sahf
mov
pop
xor
int
mov
test
inc
cltd
addl
push
xor
out
inc
scas
lret
fdivl
sar
mov
sub
cltd
xor
sbb
or
and
add
mov
xor
in
inc
rcrl
inc
ljmp
pusha
pop
ss
cltd
inc
jp
jmp
insl
sub
ret
dec
cwtl
lret
int
sti
adc
cmp
test
cmp
lds
pop
std
test
and
xlat
push
pop
inc
sbb
cs
and
cmc
xor
jbe
daa
push
or
int3
pop
repz
dec
dec
fsts
sbb
cld
mov
repz
sahf
lods
cmp
mov
dec
ds
insl
xchg
push
xchg
mov
aas
stc
stos
das
pop
pop
pop
call
jne
stc
mov
xchg
jle
mov
lret
mov
cld
out
sbb
inc
in
stc
imul
cli
repz
loopne
and
mov
test
dec
mov
sbbb
xchg
mov
lahf
lcall
lods
out
test
ret
xor
shl
dec
jle
cmp
adc
cwtl
ret
aad
jmp
or
scas
xchg
xor
sbb
cmp
dec
mov
push
mov
cltd
push
sahf
lahf
push
xchg
iret
ss
pop
cwtl
push
inc
sbb
data16
mov
stc
adc
fcomi
jae
scas
ja
add
into
adc
and
xor
and
push
xchg
popf
ljmp
mov
adc
pushl
nop
xor
sbb
aaa
sti
mov
into
xor
ret
pushf
mov
add
aad
or
pop
mov
sbb
loop
mov
add
xchg
adc
sub
je
mov
pop
mov
cmp
jle
lea
stc
addl
in
ja
dec
stos
mov
scas
jle
in
jbe
lret
pop
int3
scas
fnstsw
push
ret
add
jecxz
js
clc
or
jmp
stos
clc
jo
mov
xchg
pop
out
std
arpl
ja
mov
ljmp
insl
mov
push
es
in
testl
jbe
adc
mov
ja
xor
push
pop
jg
faddl
in
das
add
adc
gs
loopne
push
sbbb
je
lods
test
mov
xor
movsb
or
roll
mov
sbb
in
sbb
dec
aad
stc
pop
jge
inc
outsl
imul
cmp
and
push
das
mov
xchg
nop
insb
dec
test
mov
mov
adc
jno
dec
xchg
inc
fs
jae
int3
cmp
das
jge
pop
mul
xchg
mov
jo
loope
ja
or
cmp
popf
nop
and
dec
shlb
sub
lods
mov
mulb
jmp
repnz
xor
es
add
push
lret
into
jne
jmp
mov
jb
ljmp
nop
and
push
and
lret
jo
enter
popf
push
pop
xor
rcrb
sbb
add
xchg
movsl
and
jns
das
test
fisubrl
inc
xor
lock
ja
add
rclb
ret
bound
fsts
jo
dec
ja
cmc
add
dec
xchg
ljmp
int
pusha
dec
jmp
jle
cmp
cmc
test
sub
or
das
movsl
add
orb
insl
push
decb
push
addr16
out
lahf
clc
dec
sbb
and
xchg
push
pusha
adc
ret
lds
addr16
pop
mov
xchg
pop
push
ret
insl
cmc
shll
add
mov
mov
dec
mov
daa
pop
test
iret
lock
es
jb
xchg
into
dec
mov
cmc
mov
ret
mov
mov
lahf
imul
push
mov
jecxz
add
lcall
mov
cld
pop
jbe
dec
ja
cmpl
mov
sbb
insl
clc
inc
push
mov
pop
mov
push
stos
es
lret
mov
imul
adc
icebp
mov
xor
push
pop
mov
jae
fsubrl
shll
or
dec
int3
shr
sub
aad
iret
dec
adc
loop
inc
jmp
loop
or
and
aam
popa
ret
pop
lods
mov
outsl
mov
rorl
fimull
pop
andl
bound
push
xor
outsl
push
stos
scas
adc
inc
lea
lret
movb
icebp
cld
mov
cs
andb
shlb
mov
movsl
mov
les
sbb
movsl
aas
pop
pusha
and
scas
inc
arpl
sbb
add
cmp
and
mov
inc
fstpt
orl
push
pop
ss
and
rol
add
adc
lcall
cs
cltd
insb
repnz
and
sbb
mov
inc
imul
lcall
lcall
mov
jo
inc
push
dec
jae
jmp
out
test
add
out
sbb
int
cmp
loop
insl
sbb
ret
pop
cmp
mov
dec
mov
jecxz
in
mov
push
hlt
aas
daa
out
xchg
jecxz
movsl
aam
jl
add
sbbl
mov
pop
lock
adc
mov
jmp
sbb
mulb
dec
sub
jle
pop
dec
sahf
push
movzwl
mov
fists
scas
sub
clc
popl
bound
cmpsb
mov
mov
adc
std
test
jbe
push
test
imul
mov
cmc
out
or
shrl
xlat
aas
jae
or
jge
imul
xchg
jnp
xchg
ror
pushf
sbb
daa
or
adc
adc
mov
push
into
aas
loope
or
in
add
xlat
ja
and
cmp
les
sbb
sbbb
or
add
or
sbb
es
movsb
jecxz
and
mov
cmp
jp
and
pop
push
push
or
dec
mov
adc
inc
aam
dec
fcmove
xor
mov
push
and
popf
jo
add
mov
fldt
and
lret
iret
mov
sub
rcrl
xchg
sub
fistpll
ss
imul
aad
mov
pushf
out
inc
rolb
push
pop
repnz
outsb
clc
test
les
fimull
mov
pop
adc
cmp
js
popa
nop
adc
adc
enter
adc
push
les
insl
fwait
inc
fwait
jle
loopne
xchg
pop
and
mov
push
add
mov
sarl
pop
cmp
imul
rorb
sbb
add
es
in
add
hlt
mov
stos
in
lods
into
adc
je
cltd
mov
push
sahf
stos
xchg
test
lods
add
mov
enter
popa
push
test
test
stos
cmp
mov
cmp
out
mov
push
cmc
mov
icebp
inc
fisubs
mov
fdivl
push
jl
outsl
push
fimuls
mov
and
jnp
loope
lods
sub
iret
push
push
and
adc
aad
out
cmp
adc
cmc
fadd
pop
push
fxtract
pop
js
cli
sub
movntq
cmc
xchg
int
loop
adc
dec
ret
xor
jo
mov
ss
lcall
jbe
rorb
movsl
popf
sti
int3
dec
push
cmp
cmp
rolb
xor
push
jne
mov
ret
xor
mov
xlat
cmpsl
add
cli
data16
shr
cmpsb
sub
and
sbb
mov
mov
gs
and
push
pop
dec
xchg
lret
adc
mov
cmpsb
cmpsl
jle,pt
test
outsb
vpunpcklqdq
cmp
add
pop
sbb
shlb
cmpb
add
mov
cmp
stc
fsub
subl
insb
xchg
lahf
enter
jb
lods
mov
imul
test
sbb
dec
inc
repnz
sub
adc
setno
xlat
dec
mov
mov
pop
lock
scas
pop
cli
leave
sub
push
fsubrs
aad
int3
and
fwait
pusha
test
in
and
sub
aam
xchg
rolb
xchg
shrb
jae
cmpsb
dec
lret
nop
or
xchg
scas
and
lcall
xchg
imul
inc
adc
xor
das
lret
mov
adc
lcall
cmp
iret
jp
lock
pop
fwait
push
gs
repnz
mov
lcall
pop
push
push
push
mov
mov
jno
dec
inc
cbtw
xlat
adc
fnstenv
dec
jae
push
add
daa
int3
ret
sub
lds
sbb
dec
jecxz
testl
xlat
iret
shr
mov
sub
cld
inc
lea
scas
inc
shl
popf
jo
dec
cwtl
mov
jne
dec
sub
cmp
pop
jbe
jnp
scas
mov
pop
and
jge
int3
ja
out
push
push
push
dec
neg
jb
and
gs
ret
aas
and
leave
shll
insl
rcrb
scas
mov
xlat
cld
insl
mov
mov
jmp
test
jge
bound
lock
pop
das
loopne
test
inc
sbb
xchg
and
lods
clc
adc
insl
push
and
pop
push
stos
xchg
ss
pop
cmp
addl
sti
nop
sbb
mov
mov
ficompl
dec
push
inc
out
mov
fidivl
pop
popa
xor
aas
cmpsl
aas
adc
push
inc
and
inc
gs
sub
aas
mov
mov
clc
jnp
scas
mov
lea
scas
inc
call
test
jg
xchg
pushf
dec
xor
repnz
mov
pop
enter
xchg
imul
jmp
sub
outsl
or
int3
xor
addr16
and
in
or
xchg
scas
sub
cmc
push
nop
int
into
push
fsincos
push
or
inc
popf
mov
mov
mov
or
testl
adc
orb
mov
js
daa
lret
jp
iret
xchg
mov
scas
clc
jno
cmp
cmp
repz
stos
test
in
lret
mov
ficoms
les
pushf
cld
sti
and
and
jae
pop
xor
test
sahf
dec
call
insb
out
jbe
shl
push
jae
aaa
xchg
xchg
sub
test
push
aaa
fldcw
mov
jecxz
loopne
or
enter
xchg
pop
mov
pop
into
fistl
pop
xor
dec
int3
fidivrs
mov
and
pop
mov
pop
pop
rorb
aam
xor
sub
out
dec
inc
pop
dec
inc
sbb
mov
lahf
cmp
or
cmpsl
mov
aas
stos
cmp
and
leave
jecxz
stc
stos
mov
dec
mov
xchg
jg
pop
cmp
sub
out
xor
iret
ss
push
xor
mov
rcr
testl
movsl
xor
cmpsb
lods
sahf
loope
cmc
adc
mov
sbb
jnp
popf
pop
add
fidivl
hlt
cmp
outsb
adc
pushf
dec
dec
dec
or
jbe
xlat
dec
mov
mov
sbb
fldcw
jae
push
mov
or
adc
inc
in
push
pop
lahf
rorb
repz
mov
shl
pop
mov
mov
test
jp
out
movl
pusha
cmp
jae
dec
mov
aad
mov
mov
je
lret
les
adc
jae
out
mov
cmpsb
mov
xchg
sbb
sub
jb
stc
popa
xchg
sbb
push
leave
in
les
adc
xor
mov
aad
xchg
adc
movl
mov
push
inc
push
stos
mov
push
xor
repnz
push
adc
sbb
push
xchg
int
aad
outsb
lret
aaa
dec
dec
jnp
insl
lods
jo
into
test
insl
inc
stos
js
in
cmpb
jae
pop
push
sbb
jne
mov
or
out
push
sar
nop
push
aad
rcrl
das
adcb
enter
mov
lods
insb
inc
mov
out
sbb
lahf
cmp
and
lea
les
aad
sub
xor
sub
ret
adc
std
enter
sti
jmp
clc
xchg
enter
or
push
lcall
daa
shrb
jmp
movsb
inc
jb
fdivrs
and
sbb
sbb
push
and
es
xchg
insb
mov
mov
mov
and
push
sbb
in
or
shr
outsl
or
mov
or
in
adc
insb
pop
das
cmp
xchg
dec
push
dec
fldl
js
jb
sbb
jp
test
mov
xor
ss
std
cli
ss
cltd
mov
xor
imul
xchg
sub
jmp
nop
rclb
fidivrs
sbb
iret
push
adc
mov
pop
shl
xor
push
pop
cs
imull
mov
or
mov
and
ss
mov
arpl
cmp
mov
sub
cld
jae
xchg
mov
dec
sbb
insb
fld
xor
add
mov
mov
and
mov
cmp
rol
test
push
xor
adc
rorb
aas
jno
pop
add
mov
mov
fidivrl
push
mov
stc
shr
push
mov
popa
gs
sub
cmpsb
cmp
lahf
out
gs
test
mov
or
push
insl
sub
cli
pop
pop
jle
fnstcw
pop
xlat
repz
sub
loop
and
faddp
sub
stos
out
sarb
add
jle
icebp
je
test
cmpsb
fs
stos
jmp
pop
dec
repz
mov
stos
inc
movsl
enter
pop
xor
sbb
sub
mov
jns
sub
shrl
repz
stos
call
jecxz
or
adc
iret
dec
fadds
orb
push
inc
ret
push
mov
scas
adc
and
push
inc
fnstenv
ja
aaa
and
push
fcmovb
dec
leave
xlat
jnp
lods
mov
jnp
sti
movsb
gs
pop
pushf
mov
subl
lock
es
fld
inc
sub
xchg
insl
hlt
sub
add
sub
insl
jge
and
xor
mov
push
jne
imul
in
inc
fdivr
scas
nop
daa
testl
inc
push
sub
fs
insb
and
iret
repz
jo
je
std
mov
push
mov
mov
push
sbb
cmp
outsb
aaa
xchg
mov
cmpsb
mov
mov
adc
pop
insl
outsl
out
cmc
out
or
insl
scas
sub
imul
mov
fmull
out
ficomps
outsl
mov
adc
jo
mov
in
cld
mov
je
jg
jmp
push
out
xchg
mov
lods
in
mov
inc
and
push
sbb
or
mov
fimuls
mov
xchg
mov
pop
mov
fwait
pop
test
pop
ja
mov
adc
sbb
lods
mov
xchg
mov
jno
push
rclb
cmp
arpl
and
mov
add
and
pop
add
and
fildl
xor
lock
aas
cmp
mov
push
data16
mov
xor
pop
aaa
mov
fsubs
out
inc
pop
cld
jge
imul
add
pop
lock
call
outsl
push
cmp
jg
aas
or
xor
sub
fsubrl
and
test
fstpt
ljmp
add
pop
loop
pop
mov
xchg
jmp
add
mov
daa
mov
lahf
xorl
xchg
lock
sub
cmp
in
int
mov
xchg
out
incb
rolb
pop
xchg
ss
dec
xchg
mov
dec
inc
loopne
call
pop
push
jecxz
mov
sub
jge
xlat
adc
dec
inc
clc
clc
jae
jmp
repnz
push
out
pop
add
cwtl
xor
shrd
mov
lods
in
inc
push
movlps
xchg
xor
push
sub
inc
shlb
sub
les
inc
leave
inc
and
pop
mov
cld
cmp
jnp
sbb
sbb
xchg
and
jno
jle
daa
mov
sub
dec
adc
mov
cmpsl
cmp
sar
pop
xrelease
adc
pop
push
pusha
cmp
out
mov
test
cmp
test
and
sti
sbb
xchg
adc
inc
mov
int
or
xor
imul
or
adc
jg
jns
lods
mov
cmp
and
mov
pop
cmp
or
mov
cmp
repnz
push
aaa
fs
push
push
outsl
lea
jmp
aaa
lcall
xchg
and
int
mov
push
sub
add
jge
jae
scas
jno
mov
push
cmp
stc
pop
jb
into
sbb
mov
xchg
test
push
int3
arpl
call
inc
insl
xor
xor
pop
xchg
sbb
loope
shl
insb
sti
test
rcrl
clc
and
push
outsl
cs
jg
cmpsl
mov
inc
imul
daa
in
test
pusha
aad
adc
or
out
pop
cmpsl
push
in
insb
cltd
lock
cmpsb
jae
cli
sub
fistpll
shl
insl
sbb
leave
push
arpl
cmp
lcall
jne
stos
add
fcompl
and
inc
xchg
jg
call
or
push
mov
arpl
inc
and
pusha
mov
shr
test
idivl
imul
sahf
fidivl
negb
je
mov
imul
loopne
mov
push
cmc
ffree
rorl
pop
fmull
dec
sarl
rcrl
outsl
daa
cwtl
pop
fdivl
cmp
cli
int3
scas
jmp
pop
lods
pushf
stos
xchg
jbe
sub
mov
sbb
aaa
adc
into
mov
dec
lods
in
dec
adc
cmp
adc
cmpl
pusha
and
rorb
adc
xchg
mov
cmpsl
mov
dec
jge
aaa
adc
pop
repnz
testb
or
xor
lea
push
dec
add
jecxz
les
cmpl
cs
xor
push
test
and
jmp
jp
mov
int3
push
adc
ljmp
nop
xchg
dec
add
cmp
mov
scas
test
inc
in
sbb
fdivs
test
xor
pushf
leave
sahf
es
fsubr
stos
cmp
jb
mov
ret
or
add
data16
and
fcoml
mov
test
ja
outsl
shr
inc
dec
hlt
lcall
inc
test
lret
shrl
std
cltd
lea
jb
cmp
cld
fadds
popf
push
js
pop
cmp
lret
lret
sahf
xchg
cmp
stc
test
data16
lea
cmp
stos
jmp
adc
mov
xor
mov
out
push
fsubrl
lea
stos
lea
mov
xchg
sub
insb
mov
push
insl
and
sub
push
sti
divl
push
and
pop
jbe
ret
jp
adc
out
mov
pusha
pop
jno
cmp
rolb
movsb
subl
push
icebp
sbb
sub
popf
sub
mov
adc
and
xchg
fstl
scas
inc
pop
jns
lods
and
fwait
xor
movsl
jp
sbb
sbb
sub
pop
in
aas
mov
lahf
mov
pop
pusha
sbb
call
or
jge
or
leave
gs
sbb
pop
mov
dec
cmc
xor
call
icebp
jmp
shrl
xor
add
nop
dec
mov
lods
das
cmpsl
insb
insl
stos
cli
sub
cmpsl
adc
jp
and
scas
ja
jle
popf
jge
sub
stc
and
dec
imul
jg
push
dec
call
movsl
mov
call
cwtl
pop
dec
jg
cmc
mov
into
enter
add
fs
mov
push
sar
movsl
push
xor
push
orb
push
push
or
jp
popf
xor
sbb
lcall
in
push
mov
lds
mov
mov
and
sbb
add
int
cmp
pop
push
jnp
jnp
addr16
mov
repz
imul
mov
punpcklwd
or
sti
mov
adc
std
jp
fwait
lock
filds
sbb
shl
dec
mov
cmc
mov
jecxz
int3
cltd
rclb
faddp
xchg
cs
cli
xchg
into
mov
stos
cmpsl
data16
xchg
out
stc
icebp
push
cmp
rorb
repz
popf
add
push
pop
cmp
and
inc
xchg
or
mov
mov
in
std
adc
out
sbbb
mov
sar
push
lock
fimull
fdivs
mov
loop
pusha
test
xchg
push
jbe
mov
or
int
cmp
or
pop
icebp
pop
addr16
adc
push
inc
dec
mov
jnp
push
inc
stc
inc
push
add
insb
lcallw
push
imulb
xchg
jns
cmpsl
cmpsb
in
in
pushf
adc
hlt
sahf
data16
xchg
mov
jge
pop
es
pop
orb
cmp
mov
ds
and
cmp
mov
push
mov
inc
stc
test
fidivrs
pop
push
popa
adc
or
decb
out
pushf
into
arpl
mov
test
mov
out
add
mov
jo
inc
mov
cld
xchg
xchg
pusha
mov
jl
sub
je
dec
repz
jg
sub
push
jp
rclb
cmc
ja
lret
in
and
in
pop
imul
fisttpl
or
mov
mov
dec
in
out
mov
nop
out
and
out
push
or
cvtps2pd
pop
fcmovnb
shll
jl
mov
adc
movsl
pop
sahf
adc
int3
dec
loope
xchg
lret
fwait
sti
dec
inc
or
jbe
cmpsb
iret
mov
iret
xlat
repz
jo
sbb
mov
push
in
ja
xchg
jecxz
inc
inc
iret
xchg
xchg
out
bound
inc
pop
shr
or
lods
mov
pop
imul
scas
inc
mov
mov
jmp
in
xor
out
adc
aam
xchg
mov
and
add
pusha
test
push
hlt
sbb
push
sbb
dec
jg
addr16
outsl
xchg
mov
ljmp
test
fistpl
mov
lret
xchg
xor
jbe
adc
shlb
ja
xchg
and
jno
xchg
xchg
int3
andl
inc
scas
inc
out
xorl
mulb
sti
in
fnstsw
sbb
mov
popf
and
mov
icebp
insl
test
cmc
in
add
subl
repz
mov
std
mov
sub
mov
inc
dec
dec
jne
pop
hlt
add
test
lea
add
movsl
or
jecxz
xor
call
mov
popa
mov
mov
mov
sti
mov
mov
rorl
push
scas
lods
iret
ret
dec
xor
inc
in
in
push
or
icebp
dec
or
incl
test
shlb
mov
cmpl
mov
jo
aad
dec
ret
pushf
fisubs
pop
adc
and
daa
pop
adc
jge
xor
clc
std
ret
jge
insl
lahf
jnp
popa
mov
dec
cmp
repnz
out
mov
or
fisubrl
in
shr
sub
daa
inc
leave
nop
inc
and
bound
mov
cmp
lods
pop
and
adc
dec
lahf
pop
hlt
mov
or
fcmovu
sub
daa
fdivl
sub
mov
jbe
cmp
cltd
xchg
sbb
sahf
xor
sub
pop
jge
adc
inc
adcb
jle
or
lock
inc
in
xchg
push
add
jl
andl
inc
hlt
aas
dec
jecxz
iret
sbb
and
and
inc
out
ss
jecxz
push
lcall
mov
xor
ljmp
ss
sub
in
test
test
mov
daa
pop
inc
push
and
dec
int3
sbb
rorl
fwait
addl
fwait
insb
popf
jmp
push
test
rorb
enter
lods
and
mov
aad
xor
xor
sbb
inc
and
jmp
cld
fcoml
mov
icebp
lods
and
jne
push
subl
cld
inc
jecxz
adcb
mov
jno
lcall
pop
xchg
cmp
in
loope
push
lcall
sahf
xor
dec
and
cmp
xchg
in
sub
dec
mov
jge
mov
inc
aaa
aas
push
imul
dec
out
and
jle,pt
xchg
jno
dec
add
loope
push
xlat
out
mov
adc
sub
test
ret
pop
aad
fsubp
fwait
mov
mov
test
and
add
mov
dec
pop
fsts
cmpsl
jnp
cwtl
fimull
push
ds
lret
sub
mov
push
inc
decl
push
mov
xchg
mov
shrb
or
jbe
pushf
cmp
or
mov
sub
xchg
or
jno
lods
cmp
clc
cli
fyl2x
push
jmp
xor
cwtl
adc
inc
pop
into
test
movsb
add
pop
mov
pop
mov
cmp
adc
fwait
stos
push
cli
stc
sbbl
mov
cmp
mov
cmc
push
jge
leave
mov
push
popf
pop
pop
cmp
sbb
dec
loop
imul
inc
clc
mov
scas
fcmove
lret
mov
mull
push
add
push
dec
dec
mov
xchg
repnz
imull
mov
and
push
cli
pop
cmp
gs
nop
push
xchg
loop
out
call
cmp
movsl
lcall
dec
jo
loop
incl
jge
adc
push
dec
pop
cltd
dec
stos
aad
sbb
js
pop
arpl
sbb
movsb
ja
mov
add
outsb
mov
jecxz
rolb
outsb
insl
ss
es
call
dec
movsl
dec
repz
loope
mov
jmp
push
cmp
out
jo
pusha
aas
cmpsb
daa
inc
call
sbb
enter
popa
das
pop
push
lods
add
pop
ss
inc
sbb
xchg
pop
lock
loopne
mov
fimuls
cli
xor
mov
pop
sahf
orb
inc
data16
sbb
int
mov
add
sub
out
or
adc
shr
xor
shrb
test
push
mov
jb
pop
push
adc
push
push
inc
pop
hlt
mov
cmpsl
movsl
loope
adc
mov
shl
jns
lods
stos
divb
cli
sbb
jmp
jnp
mov
pushf
push
mov
mov
sbb
mov
fiadds
push
cmp
xchg
xchg
sub
repz
daa
pusha
xor
or
mov
pop
pop
push
cltd
inc
push
out
cmpsb
sub
and
add
mov
jp
das
sub
jno
out
mov
inc
ret
push
xor
push
outsl
jns
in
adc
add
sbb
mov
fiadds
xchg
pop
repz
out
pop
cli
jp
sub
mov
orb
pop
inc
enter
arpl
fs
jge
iret
mov
or
adc
dec
mulb
loop
add
ds
pop
jo
cmpsl
ret
out
and
adc
sbb
add
dec
cmc
and
mov
imul
pop
mov
xchg
cmpsl
popf
nop
xchg
lret
add
shll
sbb
mov
shr
sbb
aaa
adc
xor
lods
mov
sbb
outsl
mov
jae
push
test
mov
pop
jbe
popa
stos
mov
sbb
sbb
inc
arpl
add
xor
xor
xor
pop
in
inc
loopne
lds
jp
push
int3
jne
je
cmpsl
mov
lret
repz
mov
mov
repz
out
jp
out
push
popf
add
xor
scas
xlat
mov
jne
clc
push
pop
lods
test
outsl
and
mov
lods
cmp
cwtl
sub
adc
pop
adcb
mov
jb
shll
sbb
out
adc
or
inc
insl
rcrl
pusha
filds
pop
cmp
ficoms
in
out
mov
popa
pushf
je
into
pop
pop
adc
into
xchg
and
lea
enter
inc
icebp
pushl
xchg
xor
add
cmp
loopne
xchg
sub
popa
xor
lret
stos
test
fisubrl
sbb
orb
mov
mov
jnp
ret
arpl
outsl
sarb
pop
jnp
xchg
adc
ret
push
leave
stos
frndint
lret
pop
cmp
inc
inc
ds
dec
dec
lock
sbb
adc
jecxz
mov
inc
xchg
adc
or
lea
mov
push
jmp
sahf
cmc
orl
adc
data16
xor
push
shlb
imul
and
cli
lret
cmpsb
ljmp
add
xlat
outsb
pop
jl
adc
rcrl
jbe
mov
or
sbb
mov
xchg
xorb
xchg
jge
sbb
in
jbe
mov
orb
cmpsb
or
push
push
decl
pop
outsl
mov
dec
ds
mov
pop
cld
cltd
push
out
rclb
sub
outsb
inc
mov
fstps
ds
popf
decb
test
aas
push
cltd
hlt
daa
lods
ljmp
lods
add
cmp
aaa
jb
or
jmp
jnp
int
mov
add
dec
inc
adc
icebp
test
jo
xor
pop
and
lret
mov
loop
pop
imul
cmpsl
test
sbb
mov
fisttpll
test
jge
adc
out
mov
repz
xor
jg
dec
insb
test
icebp
fwait
jae
out
in
test
jecxz
test
mov
fisttpl
stos
jmp
aas
add
outsb
fdivrs
addl
dec
daa
outsl
sub
pop
out
pop
or
and
sbb
ret
leave
imul
arpl
pop
out
or
jecxz
jb
pop
and
xchg
mov
mov
sbb
mov
inc
scas
imul
jae
out
sti
leave
inc
jo
xchg
push
aas
adc
mov
mov
pop
cwtl
push
xor
fcom
gs
loope
xorl
sahf
sub
and
lret
popa
adc
jno
jmp
dec
loop
cli
add
cmp
lds
out
les
movsl
sbb
jnp
xchg
scas
dec
push
in
aas
sbb
push
mov
out
icebp
or
loopne
inc
in
bound
in
nop
mov
mov
out
lret
loopne
push
dec
mov
repnz
movsl
push
xor
mov
loop
dec
movsl
pushf
das
jp
push
cwtl
sub
mov
pop
jg
pop
cld
test
ret
mov
fcmovb
fdivs
test
mov
add
jbe
loopne
stos
mov
sub
add
pop
aam
and
lcall
es
sbb
in
or
and
jae
sbb
ds
adc
xor
in
mov
cmc
push
addl
pop
mov
lret
mov
in
mov
cli
dec
rclb
fwait
in
in
mov
jne
jns
xchg
inc
jle
test
push
test
and
adc
or
fucomp
das
imul
pop
jl
dec
sahf
fwait
ljmp
jl
sbb
mov
xchg
jb
int3
xchg
dec
lahf
test
xchg
popf
fldl
nop
jno
out
xor
jae,pt
adc
jbe
pop
das
shrb
add
mov
scas
shrb
test
mov
stos
das
adc
pop
aam
cmc
fscale
xchg
or
sbb
mov
lods
insl
jns
mov
push
hlt
cmp
fs
cmpsl
and
cmp
frstor
rorb
insl
jns
fistpl
mov
hlt
mov
inc
mov
jbe
fbld
ficoml
int
jle
notb
dec
jb
mov
xor
pop
add
movsl
jnp
xor
mov
lods
clc
popa
test
jmp
stc
cwtl
loopew
add
xor
mov
mov
inc
dec
xor
sub
mov
and
repnz
ss
adc
cmp
test
ret
mov
js
mov
push
xorl
sbb
push
int
in
cmpsl
outsl
jnp
fstpl
sbb
bound
dec
orb
jecxz
loopne
rcrl
lret
add
xchg
sub
lahf
push
sbb
test
jmp
xchg
xchg
pop
mov
cmp
push
insb
mov
mov
out
out
sbb
xchg
into
and
aad
jne
imul
push
dec
fs
popf
popf
dec
add
xchg
inc
pop
icebp
jmp
fbstp
rclb
xchg
scas
push
cs
mov
lea
xchg
jecxz
into
or
out
addr16
adc
mov
enter
shr
pop
jae
add
test
pop
out
aas
sub
sbb
out
fsubl
add
jbe
call
fnstcw
stos
xor
pop
mov
addr16
rorb
aam
mov
loop
xor
ss
push
or
subb
ds
xchg
push
rol
dec
mov
mov
outsb
push
fcmovnb
inc
gs
in
cld
push
adc
mov
lcall
lea
sub
or
ret
in
shr
dec
iret
mov
sub
pop
adc
nop
in
es
stc
and
and
cmc
xchg
in
cld
das
push
jmp
inc
rolb
daa
fs
ret
les
out
ja
mov
data16
push
cwtl
lret
mov
popa
cmp
imul
hlt
clc
xor
mov
add
sti
mov
scas
inc
xchg
dec
in
insl
push
mov
fists
jg
jle
dec
loop
out
inc
mov
add
aas
dec
testb
jecxz
cmpsb
sub
test
xchg
or
sbb
jo
das
shr
add
or
cmp
inc
or
je
mov
cs
testl
repnz
sbb
imul
mov
mull
sar
jbe
dec
pop
iret
ja
sub
ds
sbb
aas
shl
incb
mov
dec
lds
jb
cmpsl
xor
rorl
adc
jbe
arpl
dec
repz
mov
lret
icebp
mov
dec
jge
ja
popf
aam
es
xchg
adc
pop
rol
xchg
push
addr16
bound
les
pop
cmc
aam
int3
popa
pusha
cmc
jl
cmpsl
enter
enter
out
ja
pop
cmp
sbb
inc
cltd
insb
add
mov
inc
iret
xor
pop
xor
pop
or
or
mov
fldenv
stos
add
fsubr
gs
xchg
mov
jne
mov
lods
jle
fnstsw
scas
leave
cwtl
ja
ret
test
push
mov
cmp
add
push
adc
mov
push
roll
outsl
stos
pop
xor
ja
xor
outsl
sub
and
insl
fs
mov
in
clc
in
pop
repnz
push
mov
lahf
and
aaa
lds
and
insl
mov
call
jecxz
xor
pop
cmc
das
popf
stos
pop
call
test
cmp
xor
pop
mov
or
pop
mov
arpl
push
pop
mov
ja
lock
fsubrl
dec
pop
int
mov
xchg
xorl
rorl
call
jbe
cmp
stc
mov
adc
cmp
out
cmpsl
fcom
dec
fimull
fidivrs
insl
and
hlt
pop
pushl
test
mov
push
lret
jne
mov
pop
std
lcall
aaa
mov
out
push
mov
nop
mov
out
shl
shrl
ret
icebp
sub
test
js
movsb
test
in
std
mov
jg
imul
and
xor
addl
push
xchg
loopne
lcall
and
and
lahf
dec
mov
push
push
lahf
add
jge
pop
andb
imul
jnp
dec
iret
push
adcb
lret
mov
bound
into
std
mov
adc
inc
in
cmp
sub
pusha
mov
inc
cmp
pop
sub
mov
mov
push
push
cmp
adc
js
mov
test
sahf
jl
mov
int3
mov
sub
in
pop
sti
xor
in
insb
ffreep
sbb
mov
mov
xlat
lods
dec
adc
inc
js
daa
into
jle
dec
inc
shlb
mov
aas
mov
jg
xor
pop
mov
leave
rcrb
mov
pop
repnz
xchg
xchg
scas
jno
jae
movsb
push
pop
or
sarb
fidivs
fs
shll
cli
mov
fidivrs
in
fdivrl
imul
pop
sbb
xor
or
pop
fnstsw
lahf
xor
jmp
push
out
mov
pop
sbb
push
xor
or
xor
cmp
sahf
test
mov
arpl
scas
dec
aaa
test
jb
cltd
dec
cmp
jne
adc
scas
daa
outsl
fcoml
mov
pop
fs
push
fwait
or
div
jl
jo
push
dec
test
iret
lahf
ret
jnp
and
out
or
cs
add
jb
and
icebp
sub
xchg
leave
cmp
out
mov
or
roll
or
add
inc
pop
jns
es
push
inc
fnstenv
shll
mov
adcb
add
push
pop
mov
jle
lods
jmp
shrl
jp
loope
add
xor
or
inc
inc
mov
icebp
nop
mov
inc
xor
in
test
out
mov
std
out
inc
sbb
das
or
neg
cwtl
js
cmp
lret
scas
call
mov
mov
push
in
sarl
add
test
les
pop
popa
sub
mov
out
pop
or
push
ja
das
cli
subl
adc
sarl
or
clc
cmpsb
or
fisubl
mov
jmp
sti
add
mov
in
xchg
daa
xchg
pop
push
mov
dec
call
les
adc
insl
fwait
push
decl
mov
cmp
imul
add
pop
rol
xchg
orb
xchg
add
add
add
sub
repnz
pusha
ss
lds
jo
dec
int
pop
mov
inc
call
out
jae
adcb
enter
adc
jmp
jecxz
mov
andl
xchg
call
adc
mov
fnsave
xchg
sbb
movsl
cmp
jo
roll
es
test
repz
pop
dec
aam
into
add
xor
ds
and
nop
push
mov
jg
and
rorl
mov
cmp
xor
pop
pop
outsb
cmp
stos
inc
shll
xchg
clc
stos
aad
psubq
clc
movsl
jbe
rcrl
push
pop
out
inc
sub
es
pop
test
pop
mov
dec
dec
aad
aam
arpl
cwtl
dec
cmpsb
mov
push
sub
mov
inc
cwtl
aam
push
cmpl
fnstcw
subl
xchg
scas
popf
jbe
enter
mov
outsb
mov
in
repz
inc
inc
jns
dec
iret
iret
adc
lock
insl
es
mov
loopne
sub
daa
cmp
jmp
dec
outsb
loope
stc
andb
sbb
cmpsl
jp
cmpsl
xchg
ja
jl
push
fcmovu
and
outsb
mov
out
push
fadd
cmp
pop
inc
das
xchg
jge
add
jnp
rorl
movsl
xchg
clc
mov
push
inc
test
jb
je
dec
filds
or
dec
sbb
pushf
add
bound
xlat
mov
xchg
mov
xor
jnp
les
jno
inc
or
loopne
stos
mov
sbb
into
andl
ds
pop
dec
fisttps
xor
jo
push
and
test
lcall
mov
mov
dec
pop
outsb
mov
out
into
int
popa
or
cmpsb
les
jmp
and
stc
icebp
and
mov
add
js
add
sbb
out
xchg
adc
xchg
stos
scas
xchg
and
out
xlat
in
pop
dec
cmp
stc
out
popf
cmp
loopne
pop
xchg
fidivrs
das
icebp
into
gs
mov
loopne
neg
pop
cmp
nop
daa
lods
dec
adc
sahf
sbb
outsl
repz
push
or
sbb
xchg
dec
mov
repz
jp
adc
fwait
push
leave
add
mov
enter
pusha
mov
pop
sahf
cmp
jecxz
dec
lcall
and
das
adc
cs
lcall
cld
lds
cli
stos
sbb
sar
inc
adc
in
test
sub
call
mov
jl
cmpsb
fcompl
scas
xchg
mov
fdiv
push
xchg
sub
or
mov
cwtl
mov
aaa
into
fildl
arpl
jae
xor
out
imul
push
int
aam
and
push
jne
pop
xor
rcl
cmp
pop
icebp
rcrb
stc
es
hlt
mov
loope
xor
and
imul
lret
sbbb
or
addr16
add
int
cli
hlt
jecxz
or
je
or
movsl
sbb
dec
fwait
push
les
div
add
cmp
dec
lret
adc
sti
sbb
scas
pop
or
jp
ret
pushf
and
push
frstor
mov
roll
lret
clc
in
daa
push
add
push
jne
pop
in
imul
test
in
hlt
xchg
jge
dec
pop
xchg
sub
mov
stos
sub
imul
and
ds
sub
pop
jmp
aaa
dec
pop
outsb
and
pushf
movsl
jnp
dec
gs
inc
mov
jo
and
push
loopne
mov
pop
outsb
push
stos
inc
inc
lret
cld
addr16
fsubrp
sbb
int3
or
jo
push
inc
inc
xor
pop
cmpsb
cmp
sub
dec
pop
jle
aas
mov
jno
push
call
or
sub
pop
mov
out
pop
pop
adc
xchg
push
lahf
lods
adc
dec
lcall
sbb
pop
pop
add
sub
jle
cmp
adc
insl
xchg
mov
cmpsl
inc
adc
xor
mov
jne
shrl
dec
mov
mov
jns
push
out
cltd
xlat
insl
dec
in
fstpl
fs
lock
std
cltd
push
and
bound
sti
lock
xchg
mov
pusha
gs
or
push
ds
dec
sbb
pusha
cmpb
xor
gs
pop
outsl
inc
fimull
stos
popa
or
add
jo
mov
imull
xchg
pop
mov
lret
mov
ljmp
call
xor
test
or
stos
jb
daa
movsl
les
jecxz
aam
xchg
jae
hlt
pop
adcb
mov
out
cmp
adc
dec
rcl
push
out
add
lods
mov
mov
jge
xor
sbb
inc
jge
das
mov
gs
mov
add
aam
sbb
das
stos
fsubrs
lds
push
int
cwtl
cli
mov
data16
jge
adc
push
in
jne
inc
mov
dec
jo
jge
clc
xchg
jg
mov
in
dec
inc
sbb
and
in
out
push
pop
jae
add
adcb
xor
sti
inc
xlat
dec
push
xor
add
xor
xor
in
fsubrs
imulb
test
jl
jbe
push
inc
mov
mov
pop
push
xor
push
jae
xor
jmp
test
into
out
fwait
push
jnp
pop
mov
adc
pop
inc
dec
xchg
cmp
enter
ss
mov
pop
xchg
add
js
jle
push
test
xchg
xor
mov
in
lods
sbb
and
outsb
inc
adc
adc
pop
cltd
cltd
push
pmuludq
jp
pop
shll
cld
idivl
out
inc
add
add
loope
mov
add
inc
mov
les
xor
xor
cltd
adc
fdivl
out
push
adc
out
jnp
jae
mov
loopne
mov
xlat
pop
adc
adc
inc
in
test
adc
add
js
add
fildll
and
push
push
movsb
jb
lea
and
out
shrl
or
push
stos
mov
setbe
sarb
inc
test
adc
dec
inc
and
int3
test
loope
sub
mov
fmull
aaa
pop
fstp
cld
push
decb
shlb
fcmovb
dec
adc
aad
xchg
testl
xor
pop
outsb
subb
sub
and
repnz
pop
inc
fimuls
mov
negl
push
mov
cmp
sub
das
sub
lods
sahf
cli
jns
sarb
movsl
mov
mov
inc
inc
ffreep
sti
lret
out
test
in
sarl
xchg
cmpsl
sbb
jns
aaa
fsubr
push
insl
das
mov
loope
adc
ret
aas
mov
jo
inc
test
mov
xor
dec
push
pusha
mov
cld
lret
es
pop
mov
iret
or
add
xchg
adcl
call
mov
push
shrb
adc
stos
popa
mov
sahf
les
inc
ja
bound
sub
insb
xor
mov
dec
add
fsub
fucom
cld
mov
add
xor
add
inc
sahf
bound
push
mov
xchg
popf
rcr
adc
addr16
and
jne
int3
pop
mov
ljmp
in
dec
mov
jecxz
pop
repnz
arpl
or
fstps
cmp
sub
mov
mov
mov
push
or
lret
lock
sahf
push
mov
add
lcall
mov
mov
adcb
jae
add
scas
inc
bound
jmp
jg
sub
xlat
lods
popf
shrb
data16
repz
cmp
jns
and
dec
cli
dec
mov
scas
cmp
dec
ds
ss
add
arpl
jne
inc
cmpsl
sti
ljmp
jae
sbb
outsb
pop
adcb
push
sub
rclb
or
cs
sub
enter
ss
push
dec
lcall
filds
mov
in
std
or
xrelease
lods
fwait
xchg
sub
lods
push
sbbl
xchg
xchg
push
popf
pop
or
jmp
iret
sbb
ds
or
sub
in
mov
xchg
mov
testl
sub
inc
mov
pop
jae
sbb
xchg
cs
xor
mov
mov
pop
in
mov
fmuls
or
jge
dec
push
loopne
addr16
cltd
popa
adc
int3
jbe
ljmp
call
fsubs
outsb
pop
ret
or
or
rorb
loopw
cltd
rol
pop
add
daa
lcall
inc
mov
jmp
sub
inc
subb
popa
cmp
xchg
loopne
movsl
adc
test
pop
pop
mulb
lcall
int
in
test
sbb
mov
fistps
rorl
dec
loopne
add
jb
addr16
ja
outsb
push
into
and
mov
jne
inc
cmpsl
arpl
mov
inc
sub
rcl
les
cs
rcr
mov
inc
xlat
into
cmp
sbb
int3
push
pushf
ret
inc
inc
xlat
sbb
aaa
cmp
test
mov
mov
mov
mov
out
sub
jnp
in
or
cmp
aaa
call
sub
sti
test
sub
lret
cld
inc
dec
in
cltd
xchg
push
dec
xchg
insb
add
imul
fidivl
push
push
lock
mov
or
lods
xchg
jnp
mov
inc
stos
daa
sbb
sahf
lea
jle
daa
and
sub
int
xchg
mov
ret
outsl
popl
mov
dec
js
lcall
std
lret
rol
jmp
sahf
inc
pop
mov
pop
insl
in
stos
mov
or
outsb
std
pop
xchg
mov
bound
xor
jno
sbb
jb
imul
adcb
add
mov
shlb
bound
dec
dec
sub
repz
aas
pmaxsw
inc
pusha
cli
jne
jmp
push
hlt
mov
incl
int
jae
fbld
scas
inc
rorb
int
sub
pop
out
adc
xchg
repz
pop
xchg
mov
mov
subl
test
fldenv
pop
mov
sbb
ret
jnp
loopne
shrb
xchg
sbbb
js
xchg
inc
cmpsl
hlt
pop
cwtl
nop
push
mov
rcl
sahf
aad
outsb
xor
int3
arpl
push
ljmp
jb
inc
test
int
push
stc
fstpl
lods
inc
lret
hlt
hlt
out
pop
sbb
jl
out
in
cmpsb
or
ficoms
cmpsb
xorl
xor
nop
insl
pusha
push
in
andl
jl
test
mov
xorb
cmc
addr16
test
in
in
daa
shlb
pop
xor
pop
cli
mov
stc
mov
and
dec
jecxz
push
sub
cld
push
test
dec
mov
frstor
and
stos
test
pusha
cli
pop
shl
sbb
jg
and
jnp
mov
inc
xchg
pop
inc
pushf
inc
push
sub
pop
cmp
xorb
les
mov
pusha
jo
int
mov
mov
cs
push
pusha
sub
push
int
lahf
or
xchg
lock
out
adc
mov
or
pop
push
mov
cmpsb
int3
dec
pop
cld
dec
fmull
sub
lods
inc
jge
mov
pusha
rclb
dec
dec
mov
xchg
cmp
jmp
push
push
adc
sbb
daa
leave
test
lahf
pop
xor
xchg
loop
or
xlat
xlat
sar
stc
shll
jbe
add
outsl
or
jae
lock
aad
xchg
ret
aas
or
lods
imul
push
lods
ficomps
je
push
bound
mov
jnp
mov
inc
mov
das
xlat
outsb
in
out
and
int3
dec
jb
dec
pop
lock
jnp
mov
outsl
mov
push
rcl
sti
and
fiadds
mov
subl
inc
cmp
ljmp
out
adc
jp
mov
fs
mov
dec
mov
push
daa
and
xchg
sub
xlat
and
out
bound
test
lret
movsb
jg
jae
push
jmp
push
enter
inc
frstor
mov
push
or
xor
in
sub
mov
bound
loope
outsb
popf
sub
push
aaa
push
fistpll
sub
lcall
mov
add
mov
adc
test
xchg
sahf
out
mov
es
fidivl
stos
inc
adc
xor
mov
xchg
push
push
popf
xchg
mov
out
fstpl
jb
mov
or
sub
xor
cwtl
jno
lret
flds
in
xor
mov
fcompl
xchg
sahf
sbb
in
adc
arpl
fisttpl
jl
loop,pn
imul
mov
or
ret
mov
mov
add
lock
movsl
fwait
cmc
mov
xor
cmp
fdivrs
ficomps
shll
mov
lods
jg
mov
imul
dec
popf
std
jle
shrl
ret
mov
clc
push
mov
add
lahf
cmp
sbb
les
jp
jo
inc
fcomi
test
adc
pop
icebp
lcall
push
xchg
add
pop
sbbl
daa
loop
mov
rorl
jle
mov
push
mov
jmp
ss
xor
es
mov
push
and
xlat
push
mov
jge
int
enter
add
insl
hlt
aaa
hlt
dec
push
in
sti
cmp
outsb
push
pusha
inc
mov
xchg
addl
push
jae
pop
and
or
aad
cmc
add
cmc
add
mov
cmpsl
shll
add
push
jbe
fisubl
mov
push
std
enter
loope
call
dec
xchg
inc
lahf
aaa
mov
stos
inc
add
mov
jbe
lret
arpl
push
daa
ret
jle
stos
in
sbb
loope
popa
adc
dec
lret
pop
xchg
repz
andb
adc
stc
outsl
shll
cmp
test
or
sub
jp
jl
outsl
ret
cmpsl
sbb
jmp
mov
jnp
xchg
mov
scas
ret
dec
negb
in
das
xchg
or
fnstenv
pop
pop
cmp
sbb
pop
jge
inc
xor
imul
iret
add
push
je
mov
cld
pop
adc
jmp
cli
xorb
cmpsb
mov
int3
in
or
inc
inc
insb
or
lock
pop
mov
mov
add
sahf
xlat
into
gs
adc
or
in
xor
stos
ret
and
cmp
adc
int
sbb
imul
pop
cmpsl
push
sub
jne
mov
mov
imul
inc
popa
fbld
cmp
lcall
stc
adc
stos
test
xchg
and
xchg
cmp
sub
sbbl
lret
push
mov
les
pop
out
enter
mov
ret
cmp
add
scas
das
and
mov
mov
ret
hlt
sbb
sub
movsl
test
cmp
ds
stos
pop
adc
adc
dec
jmp
xor
call
or
push
add
cmp
push
mov
js
sbb
dec
int3
scas
cli
js
icebp
movsl
pusha
and
jbe
in
ds
mov
mov
mov
sbb
ja
cs
mov
xchg
mov
ja
mov
fs
sbb
fstl
adc
fs
or
mov
rcll
push
lcall
mov
js
lods
das
pop
sahf
imul
jo
mov
xchg
sti
hlt
lret
lret
cmp
add
inc
xorl
inc
loop
in
push
popf
cmpsl
pop
inc
lcall
stos
or
push
sbb
jg
popf
sarb
dec
add
sub
in
imul
loop
arpl
jne
icebp
popa
adc
sub
add
arpl
adc
ljmp
pop
mov
mov
insb
cwtl
pop
xor
arpl
xorl
mov
dec
inc
out
xor
xchg
adc
sbb
sbb
loop
cmp
subb
mov
insb
inc
jno
adc
xchg
das
jg
cmpsb
jge
sahf
jns
jno
std
mov
test
jmp
loopne
adc
jg
inc
out
cmpl
and
xlat
dec
xor
dec
movsl
jmp
xchg
ljmp
test
lahf
inc
mov
jno
sbb
stos
sahf
test
pushl
jecxz
movsl
dec
xor
shlb
or
or
xchg
pop
dec
repz
shrl
mov
mov
addr16
jnp
cmp
decl
pop
sbb
or
mov
cmpsl
jae
ljmp
insb
xchg
xorb
and
cmp
add
xchg
jl
push
in
leave
sbb
mov
shrl
sbb
push
xor
gs
popa
rcrl
add
dec
inc
push
push
pop
test
mov
into
lea
mov
pop
pop
mov
gs
lcall
lret
inc
into
sub
jno
ds
insl
sbbl
into
cwtl
dec
pop
lret
movsl
and
out
inc
inc
sub
js
movsb
negl
adc
xor
mov
add
and
pop
inc
mov
jo
and
rcll
inc
adcl
outsb
rcrl
loopne
mov
mov
loop
int3
cmpps
adcl
popa
notl
mov
fnclex
hlt
mov
das
sub
jge
icebp
movsb
and
add
ss
or
dec
fsubl
out
xchg
push
scas
lret
and
add
div
mov
jnp
adc
shll
aaa
andl
sahf
test
cmp
cmpsb
movsb
jno
xlat
xchg
mov
cltd
into
ret
fdivp
roll
repnz
movsl
jge
jg
push
pop
mov
dec
stc
adc
call
dec
sub
inc
pop
mov
cwtl
test
pushf
rcl
insb
ret
inc
rcrb
dec
and
in
mov
ret
mov
shll
dec
in
jg
mov
dec
fwait
xor
out
xchg
hlt
popf
rolb
cmp
imull
push
inc
imul
repnz
jecxz
or
mov
sub
jmp
jle
repnz
add
xor
out
dec
flds
insl
loopne
arpl
push
cmc
sbb
ffree
fnstcw
sbb
out
xchg
mov
sbb
cltd
ret
pop
lret
pop
xlat
lcall
and
mov
idivb
dec
xchg
push
mov
push
ficoms
jbe
cmp
fwait
inc
sbb
fsubrs
and
push
aaa
arpl
xchg
outsb
sbb
dec
mov
push
loope
mov
cmp
xor
dec
rcr
in
push
jo
jp
mov
sbb
xchg
cmp
outsb
out
mov
mov
inc
and
add
jg
and
mov
call
pop
or
stos
push
jb
add
dec
push
inc
and
insl
xor
les
cltd
push
movsl
pop
pop
cmp
cwtl
pop
fimull
cmp
jnp
repz
lret
ficoms
fbld
and
xchg
mov
mov
popa
out
adcl
pop
iret
es
sbb
lods
jl
cmp
sbb
fxch
or
cld
cli
aad
inc
push
cwtl
stos
dec
lretw
mov
mov
adc
scas
pop
in
cltd
pop
clc
xor
scas
and
push
and
mov
fistl
or
push
test
push
mov
mov
and
pop
mov
xchg
mov
inc
sbb
xchg
or
loope
pop
dec
stos
rcrl
adc
push
fmul
ss
mov
fidivrs
push
and
fidivrl
push
mov
dec
fdivrl
int3
or
leave
cmp
test
paddq
stos
add
jnp
mov
cwtl
jo
add
dec
std
xchg
loop
jo
xor
nop
daa
int3
sbb
jno
daa
fwait
mov
lcall
mov
xchg
mov
xchg
subl
mov
loope
push
insb
or
out
or
sbb
or
inc
and
iret
enter
bndstx
push
jno
mov
fstpl
setge
push
push
xor
mov
inc
mov
push
int
xchg
mov
xor
roll
xorl
jp
jne
xor
decb
mov
mov
mov
jo
ljmp
loope
mov
push
cmp
les
cld
xchg
nop
jae
mov
jnp
jge
dec
insl
roll
mov
sub
in
dec
dec
imul
xchg
or
cltd
push
sti
jb
enter
or
dec
in
fidivs
nop
push
jge
ss
xchg
pop
test
mov
push
mov
mov
out
mov
or
push
stos
js
dec
mov
mov
idivl
inc
mov
in
jecxz
mov
aas
pusha
outsl
aad
xchg
ljmp
or
mov
mov
pop
out
dec
add
ss
and
pop
fdivs
arpl
scas
xchg
xor
or
mov
in
out
loope
xchg
xchg
jbe
jnp
mov
sbb
mov
shlb
mov
adc
pop
mull
jno
pop
bound
xlat
sbb
cmp
imul
or
scas
dec
inc
pop
jg
pushf
xor
jne
cmpsb
leave
mov
jmp
xchg
xchg
insb
lcall
xor
or
stos
jb
cs
adc
stc
loopne
mov
dec
repz
lods
je
or
cltd
jb
fcompl
push
lcall
out
pop
sahf
fdivl
mov
inc
pop
cmp
sahf
pop
movsl
inc
orb
dec
pop
pop
test
adc
xor
adcb
sbbb
jp
loope
sbb
sbb
jb
push
xor
lret
adcb
pop
repnz
inc
jp
js
push
std
test
add
bound
arpl
fists
movsl
sub
dec
daa
mov
les
dec
in
out
pop
mov
mov
add
mov
jmp
mov
sbb
inc
push
ljmp
pop
cmc
rolb
cmp
jmp
pop
scas
jg
dec
aaa
data16
xor
aam
imul
push
fildl
push
pusha
jge
cmp
fdivrl
jns
incl
xor
xchg
ljmp
cmc
jge
mov
pop
or
cmp
dec
xchg
or
sbb
xchg
mov
data16
mov
and
aam
sbb
fwait
lret
adc
shlb
xchg
loope
rorl
mov
pop
cwtl
lcall
mov
rclb
nop
cmp
inc
fs
push
jo
fisubl
mov
ret
pop
cwtl
xlat
and
pop
lock
aaa
ret
add
jp
dec
xor
shr
fisubrs
popa
jne
pop
xor
gs
pop
mov
inc
or
hlt
xchg
mov
lods
ffree
fldcw
dec
fs
xchg
loop
push
fwait
mov
out
mov
mov
out
pop
fs
shr
mov
lcall
test
loop
cltd
or
mov
loopne
shl
addb
mov
jge
cmp
pop
xchg
mov
int
pop
mov
scas
adc
stc
jbe
js
mov
adc
push
aam
mov
inc
rorl
xchg
or
leave
fsubrs
jnp
cmp
mov
push
xor
cmp
aam
loop
xlat
sbbb
add
rcrb
cli
cmp
jp
xor
nop
pop
xor
enter
cs
adcb
and
mov
and
jno
pushl
scas
sub
movsb
cmpsl
mov
test
stos
or
pop
clc
inc
leave
fildll
and
loope
dec
pop
movsl
add
cmp
je
cmc
icebp
addr16
adc
inc
lret
divb
cmp
ljmp
js
inc
mov
imul
mov
test
mov
mov
xchg
fidivs
add
and
movsb
and
pop
mov
in
inc
sub
cmc
imul
repnz
add
divl
gs
xchg
adc
mov
sbb
pop
and
mov
imul
xor
sti
inc
jbe
mov
xor
inc
push
invd
arpl
fcomip
inc
lods
arpl
fsubrl
sbb
les
and
mov
cmp
hlt
insl
jmp
roll
lcall
dec
mov
sub
pop
out
sub
push
pop
sub
sub
int
add
inc
pop
into
add
push
inc
pushf
out
pop
push
fimuls
enter
ret
fistl
or
pop
dec
mov
fsub
pop
outsl
cli
pop
cmp
mov
out
push
add
push
cmp
lret
add
mov
push
movsb
and
negb
add
cmpsl
int3
xor
mov
push
jmp
mov
or
sbb
mov
and
lods
sub
outsb
je
cmpsl
inc
sahf
add
int
add
jecxz
push
movsb
cli
mov
aad
cwtl
lahf
cwtl
cmp
daa
mov
mov
shll
xchg
xor
sahf
in
out
sti
jge
and
into
mov
or
cli
daa
sub
jmp
imul
add
jno
jae
std
imul
insl
mov
pop
out
cld
jno
mov
enter
xor
out
xchg
mov
xor
rorb
sub
xlat
mov
in
add
into
decb
inc
push
ss
mov
insl
sbb
fwait
xor
xor
jns
out
pop
cmp
xlat
push
lods
test
or
subb
cmp
xor
iret
es
in
cmp
mov
dec
xchg
cs
add
or
cmp
insl
sub
mov
dec
lahf
sub
jmp
sarl
push
ljmp
insl
jge
out
sub
les
pop
or
shl
in
stos
cmp
dec
ja
subl
loope
xor
push
xor
jmp
mov
fistps
les
cld
inc
push
pop
cmpsb
pop
add
cmpsb
cmp
test
xor
aas
pushf
dec
xchg
add
sub
xor
sbb
cmp
jle
and
movl
inc
add
jp
or
mov
pop
jecxz
or
aaa
sub
sbb
xor
push
mov
pop
jo
popa
mov
cltd
jl
pop
sub
jo
adc
push
loope
mov
enter
jle
and
push
and
add
shr
add
mov
adc
cltd
lea
jno
leave
mov
sbb
daa
data16
adc
fists
stc
adc
loope
inc
test
out
pop
cmp
js
sbb
sub
in
orl
mov
imul
scas
into
dec
data16
and
sbb
cmovnp
shlb
gs
scas
divl
sti
cmpsb
push
loopne
into
adc
pop
addr16
push
xor
mov
add
jle
test
sbb
pop
fsubrs
mov
fsubs
add
push
add
xchg
push
in
into
mov
sahf
nop
rcll
mov
enter
fnstenv
daa
ret
rorl
repnz
test
cmc
cmpsb
lock
fisubrs
xchg
sub
jmp
subl
mov
jno
sub
cmp
pushf
dec
pop
cmp
test
fdivl
mov
sbb
sbb
add
jl
aaa
and
mov
arpl
mov
jmp
jb
aaa
xor
in
pop
adc
cmp
addr16
loop
inc
xchg
mov
pop
mov
cmpsl
pop
inc
push
aad
shrl
fmuls
mov
hlt
push
jne
push
jns
push
rorl
cmc
rorb
pop
mov
stos
in
or
dec
mov
imul
sub
jmp
dec
xchg
sbb
shlb
les
dec
adc
sahf
dec
loop
jg
mov
jg
scas
inc
adc
mov
pop
xor
or
sub
leave
iret
push
stos
dec
push
dec
and
xchg
inc
rol
push
sub
and
fcmovu
pop
cmp
daa
dec
shrb
shrl
mov
sbb
jg
jp
pop
pusha
call
jp
call
sub
push
in
hlt
xchg
add
cmp
lods
jmp
sub
cmp
in
sarl
enter
sbb
adc
lret
push
ret
inc
mov
hlt
incl
int3
dec
in
sahf
das
icebp
push
insl
inc
push
daa
sbbl
js
and
js
push
and
xchg
jne
cmpb
lods
popa
and
mov
rcrb
test
inc
stos
jne
mov
aad
test
out
fwait
insb
mov
mov
loopne
pop
cmp
xor
pop
stos
mov
aas
mov
fwait
xor
adc
js
in
adc
or
jae
pushf
stc
ss
fnclex
pop
mov
mov
xlat
arpl
popa
in
fcoml
mul
jo
pop
cli
jne
in
xchg
pop
sub
mov
xchg
lret
mov
add
mov
lods
push
les
add
lret
loop
cwtl
jae
or
fidivs
xorl
mov
fbld
mov
es
add
jno
mov
lock
jge
cmc
push
xchg
mov
or
aam
push
ret
in
sbb
iret
fisttpl
into
push
add
jb
sahf
lods
fcmovne
loop
pop
dec
push
or
ja
mov
adc
cmp
pop
add
out
xor
sub
add
or
xor
hlt
sbb
movsb
jecxz
dec
pusha
idivl
call
pop
addr16
add
scas
cmp
xor
fsubs
or
cmp
mov
into
jo
push
iret
pop
inc
ds
cmp
jg
add
aad
or
jae
cmc
nop
push
add
pop
scas
outsl
icebp
cmpb
leave
lock
iret
pop
jl
jo
mov
sub
testb
hlt
sbb
cmp
mov
ret
fbstp
rcrb
push
xor
add
fcos
test
xor
setnp
imul
and
orl
sbbb
jp
push
out
das
int
movsb
rclb
xor
pop
inc
insb
dec
notb
mov
add
in
fdivrp
inc
mov
jl
and
loopne
sub
adc
ss
je
lods
add
inc
loop
outsb
cmc
mov
mov
jns
push
mov
inc
stos
sbb
jb
mov
mov
movsl
mov
notb
or
imul
adc
js
mov
mov
mov
imul
test
mov
loopne
dec
pop
cmpl
aas
ds
xchg
paddsb
pop
movsl
and
js
mov
ljmp
fcmovnu
insl
int3
pop
sarl
daa
stos
mov
push
and
xchg
cld
shrl
inc
sbb
mov
popa
sbb
pop
jb
xor
jl
mov
pop
scas
aas
scas
dec
adc
and
sub
ss
arpl
adc
mov
cmp
and
ret
cmp
cmp
adc
negb
mov
sub
stos
adc
dec
sub
lret
or
sub
shll
data16
adc
outsl
inc
sub
in
lods
inc
aam
js
je
cli
sub
pop
or
in
pusha
cmp
push
ds
dec
ret
or
push
daa
loop
sbb
push
insb
imul
aas
call
adc
fistpl
push
cwtl
pop
push
mov
mov
ret
subl
notl
xchg
mov
imul
ret
pop
leave
xor
call
sar
out
cmp
jp
xor
or
cmp
xor
and
push
pushf
xor
daa
repz
pop
bound
xor
gs
cwtl
mov
lret
iret
sub
jbe
dec
jnp
xor
call
test
outsl
idivl
nop
jb
loopne
iret
jb
adc
adc
cmp
mov
lcall
jb
jecxz
aad
cmp
lods
mov
icebp
jecxz
and
mov
adc
insl
out
icebp
push
fstl
and
sti
xchg
scas
cld
jmp
push
repnz
data16
cmp
jo
push
fldl
rcl
in
daa
cltd
int3
xor
or
js
or
pop
fildl
mov
pop
pop
mov
jns
repnz
jle
add
jb
push
stc
das
inc
insl
dec
pop
fs
js
ret
push
in
jno
mov
cmp
ror
xor
gs
movsl
insb
and
test
jnp
in
out
jl
and
push
test
test
icebp
pushf
lret
aam
ds
outsl
xor
xor
xchg
sbb
cmpsb
add
push
mov
stc
fsubrl
sbbl
pop
mov
iret
and
jne
xor
inc
pop
enter
cmp
push
imul
insl
mov
pop
push
push
sbb
pop
cld
push
jp
je
xor
mov
dec
mov
push
mov
int3
or
adc
inc
out
pop
stc
cld
jl
loope
or
mull
addr16
jno
push
leave
jno
add
lret
int
add
loop
xchg
inc
xchg
xor
mov
pop
cmp
cwtl
ljmp
mov
movb
fmull
fists
adc
in
mov
mov
mov
mov
das
fisttpll
loop
sti
lcall
dec
cmc
int3
stc
push
push
sahf
outsl
aas
adc
cmpl
stc
sahf
jns
or
jae
call
in
xchg
adc
or
inc
jmp
rclb
frstor
add
xchg
mov
inc
sbb
insb
int
cld
dec
jmp
mov
cwtl
popa
int3
inc
pusha
xor
pop
pusha
outsl
pop
mov
fldt
test
adcb
and
fistl
call
clc
into
sbb
mov
int3
cmp
scas
pop
push
pop
mov
jno
adc
divb
cmp
xchg
sub
adc
pop
shl
mov
imul
lods
push
xor
lea
cld
pop
inc
mov
jle
push
out
jmp
stc
shlb
out
cld
cmpsl
aas
mov
sarb
push
sbb
jl
das
dec
fdiv
call
mov
dec
int
sbb
es
push
jb
je
in
mov
mull
push
in
sub
add
mov
mov
xchg
jno
out
mov
adc
adc
std
or
aaa
test
inc
shrl
push
sti
inc
and
fwait
jae
dec
lock
jmp
int3
enter
loope
cwtl
sub
shrl
sbb
js
inc
mov
sub
icebp
mov
and
mov
movsb
imul
mov
aas
stc
fnstcw
sub
inc
fs
popa
dec
les
jnp
mov
subl
mov
cmp
movsb
int3
add
jb
imul
inc
sub
icebp
divb
stc
add
add
divl
mov
dec
in
scas
mov
mov
dec
add
pop
sub
repnz
imul
enter
clc
scas
call
mov
cmp
in
lock
adc
lods
scas
test
test
inc
jae
icebp
fidivs
xchg
dec
loopne
lret
pop
push
xor
shll
loop
rcr
les
out
int3
mov
lret
movsl
pop
repz
sub
out
add
aad
sub
or
add
mov
loope
jne
out
out
xchg
cld
adc
imul
pop
test
mov
daa
jp
push
mov
fiadds
dec
pop
sub
rcr
xor
ret
mov
cmpsl
sbb
add
dec
dec
pop
rcrl
mov
rol
jle
mov
fs
aaa
push
cwtd
clc
fwait
sub
mov
push
outsl
popf
ljmp
movq
inc
jecxz
sti
stos
dec
out
inc
imul
ja
or
stos
dec
sub
aam
mov
addr16
jmp
pop
xor
cmp
sub
out
aad
xchg
inc
fdiv
cld
les
arpl
inc
fimuls
int3
fcmovnb
mov
cmp
jg
sti
popa
jno
insb
add
scas
in
loopne
or
sub
mov
pop
pop
cmp
xor
pop
push
lret
cs
sti
mov
jbe
pop
movsl
fidivs
in
adc
outsb
popl
mov
test
xor
dec
mov
cmp
mov
push
pusha
lret
insl
add
jle
pop
mov
pushf
and
das
jo
insl
xorb
sahf
movsb
push
mov
aas
xchg
adc
scas
fstl
das
mov
pop
gs
or
enter
pop
cmpsb
cmpsl
iret
pop
fcmovb
popf
mov
scas
dec
enter
ror
lcall
ret
leave
mov
pop
push
xor
push
inc
mov
pop
xor
pop
mov
bound
cld
lret
xchg
sub
pop
data16
mov
mov
mov
jmp
int
push
ds
adc
mov
rclb
mov
daa
dec
fisubrl
xor
mov
push
cmc
mov
cmpsb
push
or
cwtl
test
sahf
sub
fldt
and
in
shll
out
or
adc
jae
jmpw
popf
mov
enter
sti
enter
into
gs
adc
inc
adc
das
pop
xchg
xrelease
inc
ret
or
or
pop
sub
stos
xor
cmc
cmp
xlat
sub
out
clc
xchg
lods
cmc
mov
paddd
mov
xor
ljmp
mov
ret
jnp
mov
jo
sub
push
adc
xchg
mov
sbb
or
loope
out
and
fnsave
and
stos
xchg
imul
idivb
jge
das
inc
lahf
push
inc
lds
icebp
cmp
push
fstl
dec
movb
fwait
and
push
pop
je
iret
xorl
into
gs
call
out
leave
mov
cmc
xchg
shr
clc
rol
in
std
bt
cld
sbb
cmp
das
loope
add
or
fwait
test
pusha
add
add
xchg
cs
dec
xor
gs
or
mov
xchg
add
insb
je
adc
mov
out
xchg
sub
jo
sub
jg
pop
jnp
push
adc
ret
pop
cmpsl
loope
cltd
push
dec
bound
xchg
pop
pop
cltd
sub
scas
and
xchg
fbstp
cmpsb
inc
insb
clc
stos
mov
inc
push
dec
push
iret
xor
dec
jns
push
fwait
imul
mov
cmpsl
add
xlat
lret
xor
ljmp
scas
add
and
cwtl
push
ss
mov
jo
andb
xchg
adc
test
inc
rolb
xor
sub
stc
popa
into
gs
or
lea
insl
sar
xor
repz
pop
inc
cmpsl
ljmp
mov
inc
xlat
fimull
xor
push
pop
mov
hlt
mov
repnz
dec
or
aas
adc
push
cltd
cmpsl
andl
insb
jo
pop
ja
or
push
mov
fdiv
dec
in
enter
stos
push
sub
out
inc
pop
fadd
or
jl
rorb
add
lods
xchg
sbb
inc
sub
jnp
aas
test
mov
flds
or
imul
aad
xor
dec
fcoml
xchg
xchg
sbb
mov
imul
mov
mov
or
adc
or
imul
mov
push
ret
addr16
repnz
jecxz
int
sti
lret
inc
inc
lea
xor
xchg
jns
push
and
nop
ret
nop
sbb
push
cmp
pop
cmpsl
fcmovb
cmpsb
sub
inc
test
mov
mov
cmc
jmp
and
popa
cli
push
sub
sbb
and
das
out
test
or
push
es
lea
ffreep
mov
dec
sbb
add
lds
sbb
lock
xchg
pop
cmp
fsubl
sbb
insl
mov
scas
ret
arpl
insl
out
xor
jmp
dec
ficoms
int
lea
push
es
fstpl
std
fnsave
inc
xor
pop
test
push
jmp
test
mov
mov
shll
or
xorb
lods
mov
loopne
inc
mov
jb
addr16
lcall
push
loope
push
in
incb
aam
inc
and
push
daa
lods
mov
push
jno
adc
push
sti
xchg
test
je
cli
or
mov
adc
lret
add
arpl
inc
mov
xchg
sub
xchg
mov
or
pop
lods
test
sbb
mov
jns
mov
push
pop
mov
mov
cmp
fs
sub
mov
or
jp
lahf
stos
or
inc
adc
shll
add
cmpsl
repnz
mov
mov
sub
shl
mov
mov
xchg
mov
in
subl
jae
mov
dec
push
stos
xchg
xchg
cs
push
add
jnp
addr16
nop
faddp
loopne
push
cli
lret
orl
fs
cmpsl
mov
fidivrs
loope
scas
or
and
mov
pop
adc
push
xchg
xor
xor
call
push
imulb
dec
dec
out
xchg
out
inc
sbb
adc
fcompl
cmc
test
mov
jle
std
and
pushf
faddl
scas
adc
and
movsl
icebp
popa
xor
push
cmp
jno
dec
sarl
sub
repnz
sub
adc
filds
js
shl
sbb
pushl
xor
test
or
jp
push
inc
sub
aad
pop
inc
popf
testb
arpl
into
rcr
jmp
or
js
les
inc
inc
sti
jns
repnz
scas
inc
jb
ljmp
pop
or
mov
loopne
imul
sahf
sbb
and
mov
cs
lcall
push
xchg
jbe
rol
in
std
rcrl
jno
imul
lahf
sbb
sbb
push
ret
pop
cld
rcrl
xor
outsl
pop
insb
insb
cmp
cmp
or
pop
push
cld
int
xor
inc
cwtl
je
lret
jne
sahf
movsl
daa
add
lods
dec
adc
das
arpl
andl
mov
filds
jne
dec
jmp
mov
jp
out
pop
imul
addl
scas
mov
mov
sbb
xlat
jl
sub
fdivrl
insb
in
mov
jnp
push
and
push
mov
mov
nop
jecxz
mov
xchg
movzwl
mov
call
jno
mov
xchg
or
inc
test
cli
and
sahf
xorb
mov
xchg
xchg
adc
mov
jnp
ljmp
mov
or
aam
in
out
dec
mov
push
mov
sbb
call
xorb
xchg
inc
out
push
mov
in
adc
cwtl
inc
cli
or
in
pop
jno
fiadds
pop
cmp
lea
fidivs
inc
and
xchg
outsb
das
sub
xchg
incl
mov
fcom
ljmp
cmp
movsb
addr16
icebp
fidivrs
or
es
ja
mov
int3
xchg
and
pop
mov
cmp
imul
and
push
dec
mov
fwait
cmp
repz
cmp
pop
bound
fcompl
pop
push
in
push
and
adc
lods
cmp
sarl
in
aaa
into
adc
xchg
mov
ret
sub
sub
dec
inc
push
push
rol
pop
mov
es
lock
enter
xor
cmp
bound
xchg
push
ljmp
or
inc
cld
inc
add
rclb
outsb
andb
lret
fcomi
xor
scas
scas
pop
mov
jle
pop
cmp
pop
cmp
xor
lcall
xchg
push
adc
pushf
sbb
int
xchg
mov
das
jbe
mov
jp
insb
or
jns
lea
mov
sbb
push
inc
adc
fdivl
push
pop
out
cmp
dec
out
lds
inc
sub
cli
in
sti
pop
mov
pop
outsl
push
mov
sbb
nop
iret
dec
out
or
xorb
pushf
sbb
cmp
pop
xor
pop
lods
push
mov
jg
jne
xor
add
iret
das
sbb
aas
push
in
add
fidivl
mov
xchg
adc
cmc
divb
sarl
mov
js
xchg
add
sbb
xchg
in
mov
inc
xor
sbb
mov
fcompl
bswap
sbb
mov
fsubrl
xchg
mov
push
xchg
dec
rol
pop
and
xchg
xchg
mov
push
lods
test
pop
popa
xor
imul
and
jecxz
jb
shlb
xor
cmp
rcrl
clc
push
pop
fwait
add
int
sbb
mov
repnz
mov
andb
imul
xchg
daa
test
sbb
out
stc
mov
jb
xchg
mov
dec
push
in
add
jg
mov
xorps
cwtl
stc
push
mov
scas
lret
pop
frstor
sbb
in
idivb
pop
add
push
cmp
jecxz
pop
jp
sbb
sbb
mov
or
test
cltd
pop
dec
cwtl
xor
mov
clc
mov
lahf
outsb
dec
xchg
add
add
scas
sbb
ds
das
outsb
inc
sbb
add
mov
adc
cltd
mov
out
daa
fbstp
pop
lea
push
test
rcl
dec
pop
jmp
mov
cmp
mov
sub
shr
jg
cmc
aam
push
inc
push
push
cltd
ret
jle
test
cmc
mov
mov
adc
cmp
fstpl
pop
xlat
outsb
dec
pop
into
lea
jb
test
mov
adc
jnp
pop
xchg
stos
xorb
mov
jne
imul
fistl
js
mov
and
mov
scas
outsl
dec
push
sarl
mov
fldt
xor
push
shlb
aaa
mov
in
lea
fistl
mov
lahf
in
inc
push
push
sub
insb
js
dec
fdivs
subb
sbb
mov
testb
filds
jmp
sbb
adcb
rcll
sti
adc
xor
xor
aad
or
les
push
shll
jle
pusha
insb
rcr
imul
aam
fdivs
pop
jg
out
ret
add
out
pushf
ret
jg
mov
adc
mov
push
lds
lret
add
push
sbb
cmpsl
lahf
inc
mov
push
or
push
data16
push
sub
jge
scas
push
cltd
fists
jle
mov
push
mov
rorl
or
adc
test
out
icebp
rcrl
ret
not
ret
cmp
push
ret
jp
icebp
out
das
lds
pop
sub
pusha
jl
lcall
xchg
xchg
cmc
inc
xor
test
jo
test
mov
push
jle
test
stc
iret
fcom
sbb
call
add
sbb
ret
js
xchg
and
push
int
xchg
mov
jp
pop
ss
push
aas
adc
call
sbb
outsb
jp
pop
andb
mov
out
xchg
xchg
and
mov
add
xor
xchg
icebp
mov
jb
fiadds
loop
lods
stc
inc
push
mov
out
dec
jbe
fs
mov
mov
sub
sti
ja
repz
shlb
jne
pop
fiaddl
and
cmp
mov
je
sub
pop
mov
pop
out
lret
cmovo
pop
add
dec
cmc
andl
addr16
lret
das
jp
out
xchg
or
push
pop
dec
sub
and
add
pop
iret
test
lret
mov
fs
dec
fstps
fiadds
jmp
xchg
jmp
dec
push
dec
xchg
xchg
mov
jp
std
pop
or
cli
mov
ss
jne
cli
xchg
add
mov
rcrl
pop
psrlq
xor
or
mov
and
rcr
sbb
repnz
pop
cld
jnp
imul
cli
aad
lods
fwait
cmpsl
sub
sub
lret
aam
imul
mov
test
cmpxchg
mov
push
mov
pop
faddl
out
and
loopne
add
inc
dec
mov
incl
loop
mov
shr
sub
cmp
enter
add
int3
fstpl
pushf
or
mov
sub
inc
cmc
lahf
imull
call
cmp
xchg
in
inc
dec
jg
jo
xchg
inc
mov
fmulp
cmpsb
mov
aad
gs
jns
call
mov
mov
nopl
insb
xlat
and
lcall
mov
ret
mov
cmpsb
sub
aam
aad
mov
mov
sarl
insb
mov
pop
mov
xchg
inc
loopne
repz
add
ds
jae
xchg
sub
out
cmp
and
in
inc
push
inc
and
bound
lahf
and
test
lret
fwait
or
aas
xchg
stos
popa
mov
or
es
jecxz
iret
mov
mov
mov
mov
xor
inc
inc
dec
jecxz
and
aam
and
lcall
cmpsb
aad
aas
inc
inc
add
push
fnstcw
popf
sub
mov
mov
in
cmp
iret
push
pop
ljmp
jno
rcl
inc
add
push
mov
xlat
popf
fstl
cmc
test
shl
rcrb
xchg
insl
push
sub
xchg
ror
add
cmpsl
out
sbb
outsb
mov
fwait
clc
and
inc
mov
xchg
dec
adc
out
fwait
outsb
xchg
imul
lods
shl
subl
mov
mov
popa
iret
xchg
inc
mov
add
sbbb
xlat
cmp
les
mov
in
jne
pusha
popf
mov
popf
xchg
push
adc
dec
test
mov
rorb
add
push
and
icebp
mov
or
jg
pop
mov
inc
orl
and
jge
stc
and
mov
iret
xchg
mov
cmp
imul
or
aaa
xor
movsl
std
mov
dec
stos
in
sub
inc
femms
lea
adc
mov
pop
mov
iret
decl
add
and
jp
test
mov
test
popa
pop
xchg
dec
dec
or
mov
sbb
jmp
pop
add
pop
cmp
xchg
out
cmc
cmp
ds
cwtl
mov
push
and
jl
cltd
inc
fldt
jno
sbb
sub
xor
pushf
aad
mov
inc
popa
jge
xor
push
aad
popfw
and
punpckhdq
lret
bound
mov
cld
cmp
ss
fnstcw
fcmovb
rcl
outsb
mov
xor
test
scas
inc
mov
out
jg
xchg
cmp
cld
repnz
cs
insl
sub
xchg
mov
shrb
es
sbb
jnp
add
hlt
mov
out
stc
jae
aaa
sbb
mov
mov
idiv
mov
les
xor
lods
sub
mov
test
xor
push
add
xchg
test
dec
clc
inc
sbb
inc
xchg
jb
or
jbe
mov
js
adc
push
add
or
test
xchg
lods
pop
inc
loopne
into
mov
sbb
repnz
jbe
or
mov
stos
rcll
mov
xchg
sub
or
add
xor
xchg
fcmovne
pop
cmp
jecxz
xlat
hlt
or
sub
test
ret
mov
lock
insl
jb,pt
push
lahf
test
call
xchg
insb
pop
subb
test
es
ret
frstor
dec
mov
dec
mov
aam
add
pop
mov
fdivrl
in
adc
mov
jb
pop
daa
out
jno
out
stos
jne
jb
or
push
sahf
mov
xchg
fisubrl
js
notb
test
stc
push
mov
loop
sub
sbb
pop
int
inc
shlb
and
adc
lods
inc
mov
cltd
inc
arpl
fsubrs
fisttpll
mov
cltd
es
fldl
std
or
aad
in
sarl
sub
dec
mov
push
addr16
pop
aas
jne
out
js
and
popa
icebp
push
lock
inc
sbb
iret
cltd
lret
sub
push
sub
inc
lret
loope
ja
fwait
mov
adc
adc
dec
cwtl
out
push
jb
xor
cld
movsl
sbb
sbb
sbb
jmp
cld
and
imul
xor
jae
aad
aas
test
sub
enter
sbb
push
xchg
jecxz
mov
jmp
jbe
cmp
popa
xor
jmp
lret
jns
lret
bound
ds
loop
dec
rorl
test
mov
rol
jle
ss
push
popf
xor
mov
pusha
cmpb
int
mov
mov
push
jb
dec
addb
out
repz
in
mov
push
or
dec
dec
inc
cmpsb
arpl
shr
and
jae
mov
push
push
pop
mov
jns
push
or
mov
xchg
sbb
push
stos
sarl
cmp
enter
lods
push
push
xor
jb
push
adc
mov
outsb
adc
sub
xor
add
cwtl
loopne
mov
out
xchg
and
push
leave
push
inc
iret
mov
push
ret
call
xor
pop
icebp
xchg
hlt
push
sub
adc
incl
inc
lret
dec
popa
cwtl
push
push
in
add
sub
and
outsl
test
mov
adc
dec
add
push
lahf
mov
loopne
mov
mov
gs
or
rcrb
jl
out
pop
popf
cwtl
andl
or
cmp
add
jne
or
and
sub
inc
loopne
int3
mov
mov
dec
pop
pop
push
fbstp
sub
lahf
test
sub
mov
sahf
lods
add
arpl
imul
in
sub
mov
sub
xor
mov
or
mov
inc
xor
fs
aam
shl
insb
cs
xchg
loopne
and
dec
ljmp
insl
pusha
aas
imul
hlt
jecxz
cmpsb
cmp
xlat
ljmp
and
inc
push
xchg
push
mov
ret
dec
aaa
pop
pop
icebp
or
js,pn
mov
cs
pop
gs
push
sub
fcomps
mov
rcrb
or
loope
cs
and
lcall
mov
jmp
add
lret
jns
icebp
or
les
inc
xchg
xor
xchg
mov
outsl
gs
jb
mov
mov
add
adc
mov
dec
jno
shrl
aam
jecxz
popf
sub
push
xchg
push
sub
push
mov
andl
xchg
pop
lods
mov
mov
test
inc
fsubs
jge
subl
mov
xor
pushf
negb
mov
rcl
es
and
adc
jge
negb
daa
outsl
bnd
and
aaa
xchg
sub
icebp
pop
cmc
and
addr16
adc
sub
icebp
cmp
mov
fdivl
daa
dec
sbb
les
xchg
add
fdivs
sahf
out
scas
cmpsb
loope
aaa
add
pop
pop
push
ljmp
pushf
cli
cmc
cmc
sub
mov
xchg
mov
and
std
xchg
sahf
rorb
imul
stos
dec
xlat
aaa
push
jl
andl
and
stc
push
push
and
data16
fcomi
incl
leave
jge
mov
pop
outsl
push
scas
call
mov
cmc
mov
dec
scas
insl
lods
mov
imul
inc
jecxz
imul
pop
std
xchg
clc
jp
sbb
rorb
insl
and
ret
repz
mov
or
inc
neg
movsl
push
add
jnp
fdivl
call
mov
push
ljmp
xor
xchg
mov
cmc
adc
loopne
inc
fisubs
ss
xchg
mov
mov
mov
xchg
inc
inc
lds
in
pusha
mov
dec
popl
fnstcw
std
mov
or
std
stos
mov
inc
and
mov
push
and
lret
pop
repnz
jmp
sub
jge
xchg
scas
xchg
mov
outsb
fisubs
sbb
mulb
fisubl
mov
xchg
gs
mov
repnz
iret
xlat
adc
sbb
push
cmp
out
hlt
addr16
xchg
push
sbb
pop
xchg
lods
icebp
inc
cmpsl
or
into
cwtl
sub
cmc
mov
xchg
mov
outsl
push
test
test
insb
and
lds
lahf
ss
adc
push
es
adc
lcall
push
out
inc
imul
adc
push
mov
xchg
inc
mov
mov
mov
jo
mov
push
mov
inc
jbe
jne
lret
fcompl
add
rclb
jb
sub
aam
stos
add
or
sahf
pop
sahf
repz
sbb
mov
cltd
sub
movsl
clc
and
cmp
sahf
mov
bound
iret
xchg
les
out
push
jb
fcoms
xchg
bound
fxam
mov
mov
xchg
mov
xchg
pop
ror
sub
fstl
fstl
aas
outsb
and
lret
sbb
lds
sbb
loope
repz
scas
js
loope
xchg
add
int3
aad
lds
lods
lret
sub
xor
push
or
cmp
pop
jo
roll
xor
stos
pop
cli
adc
aaa
pusha
mov
es
stos
mov
fsubrl
fsubr
mov
aam
adc
or
push
mov
cmpsl
dec
loope
jnp
sub
mov
mov
outsb
inc
test
jl
cmp
sbb
xchg
mov
idivl
test
xchg
aam
pushl
adc
test
fsubr
cmp
lock
fnstsw
stos
cmp
xlat
popa
or
daa
inc
lds
cmp
push
pusha
pop
test
pop
repnz
inc
adc
dec
lret
jae
pop
push
mov
hlt
jl
sub
les
add
fldt
sub
int
cmp
add
push
call
xchg
outsl
inc
mov
sbb
mov
mov
mov
xchg
sahf
ror
leave
insb
cmp
push
out
mov
push
rcll
sub
sarb
shrb
shr
je
out
popa
mov
pusha
hlt
xor
push
mov
test
mov
jmp
icebp
mov
push
test
out
je
inc
mov
or
mov
jmp
mov
ss
pop
jne
or
repz
or
test
xchg
sbb
test
cmc
xchg
loopne
sbb
loop
cmp
jbe
mov
loop
pop
ffree
out
cld
mov
inc
pop
sub
inc
movsl
ret
jnp
sbbl
inc
frstor
cmp
push
push
inc
and
insl
jge
jg
fistl
cmc
mov
jno
jge
push
movsb
push
sbb
sub
mov
push
dec
jne
add
push
je
int3
aas
jle
out
adc
xchg
pop
add
xchg
cmc
insl
call
or
adc
sbb
jle
or
lcall
fcmovnbe
cmp
jbe
mov
add
cwtl
stos
test
cmp
stc
nop
es
scas
popf
inc
pop
mov
scas
adc
mov
jne
inc
fcom
sar
xchg
mov
push
adc
cmp
or
lea
daa
in
jp
loop
fs
test
fidivrs
scas
out
or
adc
jp
ret
push
rcr
pop
mov
loop
loop
cld
xchg
leave
xor
fnstenv
lock
in
fisttpl
jge
imul
dec
sbb
cmp
push
xor
js
fsts
and
int
imul
out
arpl
subb
fwait
sub
orl
push
outsl
in
lock
or
test
cld
bound
mov
add
fistpll
ret
mov
dec
pop
cli
fwait
sub
xchg
sbb
ret
jp
cmp
mov
lods
cmp
mov
ret
xor
es
cmc
fdiv
mov
rcrl
imul
or
push
xlat
outsb
sub
pop
rol
pop
sbb
pop
repz
test
pop
jp
xchg
ljmp
inc
xchg
mov
imul
insb
imul
scas
mov
add
imul
rolb
cmp
or
shlb
push
insb
cli
lret
sbb
in
test
loopne
xchg
rclb
add
icebp
imul
cmpsl
pop
add
movsb
push
xlat
mov
mov
dec
xor
xor
stos
frstor
jge
jbe
inc
shll
stc
xchg
mov
leave
and
add
movsl
mov
cmpsb
or
or
xchg
inc
ret
cmpsl
mov
leave
lods
les
jae
int
lcall
mov
scas
pop
xchg
add
adc
push
pop
xor
dec
inc
fildl
push
mov
and
inc
and
lock
outsl
adc
xlat
loopne
pop
scas
out
fisubrl
xchg
xor
fwait
or
jecxz
and
push
aaa
add
or
jp
stos
jnp
push
mov
pop
push
cmpsl
shrl
jno
mov
bound
and
push
dec
jle
add
xchg
sbb
mov
sub
js
jne
jmp
sti
xchg
roll
xchg
shlb
hlt
or
cmc
sub
dec
jns
nop
les
inc
xchg
mov
scas
iret
adc
xor
data16
xchg
dec
jge
cli
pushf
aad
add
fidivs
adc
fdivl
test
into
jne
aas
arpl
mov
push
enter
daa
loop
adc
mov
aas
push
jle
mov
mov
cmp
mov
add
movsb
adcl
fdivrl
cmpsl
jmp
xchg
loopne
xor
repnz
data16
dec
and
or
and
aad
sub
mov
fdivl
lds
or
loopne
es
repz
jecxz
sbb
cmc
xor
xchg
bound
fildl
push
hlt
scas
dec
mov
into
leave
int3
mov
lret
cmpsl
or
ljmp
in
push
sub
mov
inc
inc
mov
js
outsl
inc
xor
mov
xchg
push
fisubrl
sbb
fcmovnb
add
sub
outsb
mov
arpl
add
fucomi
lods
pop
insb
sbbl
pop
out
out
mov
leave
adc
test
sbb
in
rorl
ss
mov
lock
ret
and
lods
data16
lret
in
xchg
stos
enter
sbb
xchg
mov
in
mov
adc
xor
jl
push
out
inc
mov
cmc
lcall
pop
jbe
or
stos
xchg
stos
fsubl
or
gs
pop
std
sti
scas
loop
pop
and
push
inc
popf
jle
adc
aaa
inc
push
loopne
enter
mov
dec
or
jb
sbb
mov
insb
sub
in
das
sbbl
pop
mulb
adc
sub
icebp
dec
rcrl
or
and
or
cmp
negl
es
mov
adc
push
mov
test
jo
je
jae
jnp
jmp
push
icebp
in
or
movsl
int3
jne
dec
arpl
inc
sbb
scas
out
repz
or
ret
xor
shlb
lods
cltd
add
mov
lret
jl
leave
imul
in
scas
mov
pop
mov
pushl
outsl
iret
stos
mov
xchg
or
mov
data16
or
xchg
cmp
inc
inc
fstps
sbb
dec
add
xchg
and
add
loopne
add
mov
adc
loopne
rcll
std
add
aas
fmull
mov
push
lea
rcrb
unpcklps
xchg
shll
mov
cmp
fwait
scas
adc
out
xchg
dec
dec
in
jp
scas
dec
lcall
inc
adc
jno
lock
adc
ret
fildl
imul
jnp
enter
iret
out
push
or
and
inc
xorl
sbb
and
inc
xchg
aas
xchg
inc
cmpsl
ds
imul
mov
dec
and
jp
mov
ficoml
stc
cmp
sub
pop
ds
jmp
push
xor
test
shlb
inc
pushl
es
mov
and
sbb
add
jmp
mov
pusha
clc
and
imul
add
sbb
lret
cmp
lods
xchg
rorb
pop
idivb
test
ja
adc
in
xlat
xchg
mov
push
lss
repnz
cmc
bound
mov
test
push
xor
cmp
sbbl
xlat
scas
adc
int
add
popa
or
add
rolb
daa
cmp
daa
dec
and
add
lcall
mov
or
jns
xchg
sub
mov
mov
push
xchg
mov
cmp
mov
cmp
cmpsl
push
xchg
out
xchg
mov
notb
lods
dec
jbe
pop
sub
into
stos
orb
push
movsb
std
popf
dec
gs
roll
ficomps
ret
daa
xor
mov
lahf
xchg
mov
push
push
lods
lahf
xchg
jno
dec
shlb
cwtl
aaa
mov
cmp
adc
jl
sub
pop
mov
or
fsubrs
cmp
aaa
aam
fcmovnb
inc
cmp
lods
je
gs
stc
xchg
dec
mov
and
jmp
add
rorb
inc
jnp
push
push
dec
pop
lret
bound
stc
nop
sbb
adc
jo
cmpsl
ss
mov
mov
jne
sub
movsb
mov
xchg
push
pop
add
sub
mov
mov
mov
fidivrs
jg
add
and
pop
push
jle,pn
sbb
mov
movsl
cmp
dec
add
sub
lea
rep
rclb
jno
sahf
jnp
mov
cmp
outsl
mov
scas
inc
xor
ficompl
adcl
dec
dec
out
cmpsb
mov
pop
xor
insb
fsts
cmpsl
sbb
mov
nop
out
in
add
mov
pusha
inc
cmp
shrl
repnz
adc
rol
test
nop
jns
dec
in
or
mov
mov
lds
adc
dec
xchg
mov
jnp
rsqrtps
lret
push
mov
dec
xchg
jg
inc
sti
mov
bound
inc
jo
jae
pop
mov
sbb
and
aad
sbb
cld
dec
jne
repz
push
add
imul
test
mov
ret
out
arpl
add
push
movsl
adcb
sub
mov
arpl
daa
pop
negb
jnp
dec
sbb
test
mov
xchg
stos
pop
pop
lret
mov
dec
loopne
sarb
ficoml
cs
fdivl
in
dec
adc
pop
dec
jmp
stos
xchg
rcr
jne
fsubl
ss
mov
sbb
mov
ret
inc
sbb
or
mov
xchg
and
das
sub
sti
mov
cmpsb
lock
xlat
pop
lea
add
push
cmpsl
mov
pop
pushw
cwtl
jle
jo
adc
stos
adc
daa
daa
mov
push
clc
ds
mov
sub
add
xor
insb
inc
cmp
or
and
cmp
fucomip
leave
mov
in
push
push
inc
jne
insl
sub
stc
push
push
push
movsb
dec
int3
fcomi
std
sub
mov
stos
pop
dec
push
aaa
stc
das
lock
mov
aad
lahf
mov
idivb
dec
cmc
sbb
es
jecxz
sub
or
inc
or
out
daa
iret
cwtd
push
hlt
pop
adc
mov
inc
into
fdivs
loop
lods
sbbb
js
sti
lods
les
stos
insb
sbb
and
inc
lcall
aad
and
mov
stos
in
push
xchg
pop
inc
and
jbe
pop
aas
fsubrp
cmp
in
test
jecxz
inc
stos
mov
jp
push
inc
and
int3
adc
or
mov
imul
push
dec
rcrb
mov
adc
cmpsb
mov
imul
fdivl
les
out
inc
nop
pop
mov
inc
jecxz
or
cmp
push
jg
jmp
or
cmpsl
pop
sub
pushf
lds
push
or
inc
out
popa
push
push
out
lock
push
fs
mov
lods
lods
std
das
stos
cmp
cmp
js
jmp
dec
insb
mov
stos
mov
shrb
mov
pushf
mov
push
sbb
sub
jno
fistl
mov
jl
arpl
push
xor
sub
xchg
pop
pop
sahf
js
neg
fcmovu
movsb
sub
mov
je
add
es
lret
sbb
mov
push
xchg
cmp
fisttpll
stos
push
sub
mov
nop
sub
out
sbb
jbe
xor
clc
push
aas
xchg
mov
sbb
mov
test
sub
cs
add
ficompl
hlt
cmp
jg
push
fldenv
leave
xor
xlat
mov
or
pop
pop
cs
or
sbb
pop
scas
out
and
jne
movsb
out
push
mov
and
mov
ficoms
xchg
mov
andl
push
cmp
mov
loope
sbb
test
fnstenv
call
sbb
les
int3
push
add
shrl
mov
jl
daa
xchg
and
mov
fldt
daa
cmp
pop
mov
aaa
shll
adc
mov
imul
dec
sbb
je
and
mov
daa
jno
mov
ret
mov
data16
je,pt
jmp
mov
sbb
js
rorb
jecxz
or
cmp
insl
cmpsl
fwait
test
mov
mov
xchg
cmp
push
cltd
fsts
and
js
pop
je
inc
subb
clc
sahf
je
insb
ret
test
dec
and
loop
lcall
and
fmull
mov
cmpsl
cmp
rorl
mov
mov
cmp
xchg
push
mov
mov
dec
mov
push
mov
fwait
push
in
mov
push
je
mov
shl
dec
and
mov
add
pop
out
loopne
stc
xchg
push
fdivrs
push
or
xchg
sub
stc
xorb
xlat
push
aad
js
adc
bound
fisubrs
in
in
ror
and
mov
shl
cmpsl
cld
stos
rorb
jle
sbb
test
lds
into
push
das
push
cmpsl
mov
out
dec
ret
aam
sbb
dec
imul
repnz
sbb
shrb
lods
dec
mov
xor
rolb
sbb
stos
ret
pop
repz
fldlg2
out
cwtl
pop
int
pcmpeqw
jmp
jecxz
jae
or
jnp
sbb
pop
ret
frndint
xchg
or
mov
sub
add
lahf
mov
in
bound
jnp
xor
mov
jge
jb
test
push
out
mov
repnz
jecxz
jl
mov
outsl
leave
scas
js
in
push
fimull
sbb
jbe
or
mov
loop
stos
cmp
jle
mov
mov
repnz
and
add
insl
test
dec
dec
fisubrs
add
test
in
xchg
scas
pop
dec
loopne
and
sub
loop
pop
jns
outsb
pushf
xchg
adc
das
add
jb
in
push
stc
lods
out
fsubrl
pop
inc
jmp
mov
push
std
jo
mov
ret
sbb
pop
mov
dec
aad
add
rolb
mov
adc
pop
or
imul
adc
aad
into
ljmp
fiaddl
or
push
es
add
outsl
lods
icebp
mov
int
jecxz
ds
iret
into
scas
mov
nop
mov
add
add
push
jne
adc
mov
xchg
mov
xchg
jns
lock
mov
les
stc
add
sbb
push
movsb
push
shlb
xor
add
inc
mov
stc
orb
sbb
dec
repz
or
inc
pop
xor
push
cmp
subl
jecxz
cwtl
mov
lods
cmp
mov
mov
push
stos
or
pop
xor
inc
sbb
fstpl
cwtl
adc
jno
add
sub
sbb
jp
lods
or
test
out
gs
xchg
adc
jbe
pop
push
test
scas
xchg
sbb
movsb
dec
out
push
push
shr
out
xchg
add
cmpsl
xchg
dec
pop
cmp
or
stos
inc
subl
jb
sbb
adc
mov
fmull
out
mov
loopne
xchg
lock
out
inc
testb
pop
adc
out
aad
jmp
nop
cmp
mov
je
outsb
xchg
pop
lds
and
sbb
pop
ja
xchg
mov
sbbb
cmp
xor
xchg
fsubrl
mov
je
loope
push
cs
inc
in
cltd
jg
mov
lds
cli
inc
out
dec
pop
pushf
test
rcl
arpl
xchg
gs
adc
mov
push
fldln2
subl
mov
cli
pushf
sbb
push
mov
push
jo
adc
inc
stos
test
stos
pop
dec
pushf
arpl
ret
cwtl
sbb
stos
rclb
xchg
jp
testb
lret
mov
jle
in
int
cmpsb
int
pop
jp
mov
shlb
sub
adc
pop
cmp
jb
stos
pop
jecxz
aas
fistpl
cld
cmp
je
das
mov
mov
testb
mov
mov
pushf
xchg
sub
jae
mov
enter
sbb
jecxz
out
add
repnz
icebp
lea
sbb
test
inc
ljmp
sti
and
mov
fs
dec
pop
out
xchg
adc
add
ss
data16
push
mov
aaa
rcr
mov
and
mov
pusha
nop
mov
sbb
dec
mov
or
xchg
mov
adc
mov
mov
andl
mov
daa
mov
lock
xchg
std
xor
popa
xor
gs
fwait
test
rol
gs
cs
push
out
cld
xor
jno
xchg
in
add
and
xorb
scas
pop
mov
and
push
adc
fldenv
sbb
jno
adc
sbb
pushf
divl
add
out
xchg
ret
xchg
xchg
lret
dec
dec
aaa
les
or
dec
lods
push
ret
jp
xor
jp
mov
jb
pop
int3
mov
mov
test
and
push
sub
lea
fdiv
out
xor
push
imul
call
mov
notb
loope
jb
inc
xchg
xor
lahf
sub
mov
cmp
mov
dec
out
mov
push
out
xor
xchg
mov
pop
jp
xchg
ss
lahf
es
pop
insl
inc
push
int
gs
fxam
ret
mov
bound
sbb
and
ljmp
cmp
push
xorl
and
notrack
pop
in
push
push
sbbb
and
std
cltd
dec
xchg
dec
mov
lods
cmp
fs
sbb
fimull
sahf
fcom
daa
ret
hlt
dec
je
addl
inc
test
lods
push
fnstsw
push
jge
xchg
lcall
mov
push
sti
xchg
dec
jle
ja
test
je
and
push
xchg
andb
push
inc
sbb
add
out
jne
add
std
mov
inc
sarl
inc
pop
pusha
inc
stos
push
jg
loope
and
add
add
imull
adc
cmp
test
insb
or
cli
or
out
out
mov
adc
dec
pop
add
adc
aaa
pop
and
xlat
sbb
lods
ja
push
sbb
dec
fidivl
hlt
ret
push
scas
mov
rcrl
push
xchg
xor
jbe
lods
cld
cmp
test
push
cwtl
fwait
push
jo
leave
cwtl
lcall
push
mov
push
outsb
jns
xchg
inc
xchg
add
nop
jmp
and
jo
movsl
jmp
jbe
cmc
add
or
sub
mov
jmp
xchg
pop
pop
mov
and
push
sahf
mov
sbb
sub
pop
pop
and
icebp
jae
push
int
addr16
pop
out
scas
out
pop
xor
push
fwait
adc
inc
mov
add
push
pop
mov
sbb
push
or
lods
mov
sub
fists
cmp
test
sbb
xor
inc
push
cmc
sbb
testl
mov
sbb
imul
subb
jnp
or
dec
push
mov
fidivl
cld
jnp
mov
stc
data16
dec
pop
repnz
gs
sub
ret
js
mov
insl
hlt
add
orl
dec
cltd
pop
cld
lds
fistps
pop
movsb
aad
test
jp
in
mov
divb
jge
dec
clc
aas
out
in
jns
test
movsb
stos
cmp
aaa
jp
loop
movsl
adc
dec
pusha
orb
pop
iret
pop
cmp
addr16
pop
push
outsl
ss
pop
mov
jne
jle
shrl
xlat
dec
test
cmp
mov
sub
mov
push
xchg
jno
sbb
lds
or
mov
sub
inc
gs
movsl
pop
mov
cmpsl
out
scas
push
dec
pop
mov
or
out
push
jno
pop
push
and
pop
mov
xchg
jmp
dec
dec
jl
aam
ret
pop
sbb
decl
cwtl
ret
loope
mov
jnp
adc
sbb
mov
xchg
sub
clc
push
inc
loop
and
cmp
mov
dec
or
dec
inc
xor
inc
insb
and
js
cmp
insb
xchg
popf
aad
aam
xor
jl
push
ret
fstp
nop
add
lret
scas
call
fcmovbe
cmp
cs
std
dec
adc
inc
pop
repz
xor
scas
jp
cmpb
popf
cmc
notb
test
lahf
sbb
leave
pop
icebp
xor
jmp
addr16
inc
test
fistpl
fwait
pop
push
loop
add
cltd
pop
push
mov
in
push
sbb
xchg
insb
mov
repnz
into
jp
sbb
or
mov
loope
popa
orl
cmp
xor
jge
out
pushf
cmp
inc
push
scas
push
and
lods
add
xchg
mov
repnz
in
jle
mov
push
pop
outsb
mov
cmpsb
loop
and
test
stos
sbb
add
xor
imul
lods
aas
repz
dec
jle
out
mov
cmp
aad
stos
dec
pop
hlt
jne
xchg
test
mov
movsb
inc
xchg
scas
jl
mov
arpl
jno
cwtl
sbb
loope
mov
test
lea
jl
fwait
into
pop
xchg
sbbb
in
adc
sbb
xchg
cmc
test
mov
fiaddl
les
test
add
or
xchg
or
cmp
out
lds
sbb
lock
aad
notb
mov
pop
push
sbb
or
mov
out
in
out
add
insb
add
scas
fisubrl
cwtl
jle
mov
in
jnp
push
jo
test
inc
es
push
jmp
mov
xor
push
stc
nop
xor
xchg
dec
sub
pop
inc
outsb
add
cmp
in
insl
mov
cs
mov
inc
cmp
add
adc
test
insl
les
out
lret
testl
sbb
mov
cmp
sbb
mov
inc
cli
lds
shrb
sbbb
xchg
lret
out
pop
mov
cmp
push
mov
mov
dec
in
pop
push
adc
mov
cli
outsl
sub
sbb
mov
fwait
insl
jecxz
bound
jmp
dec
pop
inc
sbb
or
sbb
pushf
scas
cmp
sub
inc
or
rorl
jnp
sti
ja
xor
addr16
add
test
xchg
sub
pop
xchg
adc
or
movsb
jg
in
out
xchg
fmuls
rorl
aam
cmpsb
push
nop
sub
dec
sub
or
dec
add
movsl
mov
xlat
notb
pop
push
aas
sti
pop
repnz
sahf
mov
data16
push
pop
jb
mov
cmp
cmc
nop
iret
es
jl
rolb
mov
sbbl
in
push
out
fldt
orl
imul
sar
scas
inc
ljmp
sbb
mov
mov
sti
push
ds
sub
mov
pop
jne
mov
jge
sub
mov
jnp
or
mov
cmpb
insl
cs
and
fisubl
cltd
xor
jecxz
rcr
dec
repz
or
adc
inc
push
in
xchg
dec
in
cmp
push
movsl
adc
out
mov
jne
xchg
fsubrs
int
xchg
je
jg
frstor
pop
rclb
out
mov
pushf
inc
shll
xchg
aas
sub
cmpsl
or
push
jecxz
mov
sbb
mov
loopne
out
scas
pop
or
push
mov
aaa
cli
lea
in
movsb
out
ror
sbb
fimull
sub
arpl
cltd
mov
out
ljmp
or
xor
mov
into
cmp
jns
mov
out
add
jbe
lock
cmpsl
mov
out
inc
lret
inc
lahf
jb
inc
lock
mov
scas
xlat
in
or
add
imul
test
mov
sahf
pop
aaa
jge
addr16
add
fwait
scas
pop
mov
xor
adc
insb
xor
lret
and
in
fcmovb
dec
xchg
addl
cltd
and
push
mov
lret
jne
sbb
js
es
sbb
inc
loop
mull
enter
leave
or
sub
dec
cmpsb
push
or
repz
daa
lcall
fisttpll
jnp
sub
fcom
and
mov
and
fiaddl
andl
js
repz
mov
in
jb
xchg
push
sub
fildl
movsb
pmullw
nop
xor
add
lcall
mov
fisubs
in
jbe
jl
notl
repnz
fisubs
add
add
aam
and
ss
xchg
fisubl
ret
popf
sbb
cmp
push
sub
sbb
mov
out
cmp
sahf
cmp
inc
dec
mov
shll
xor
sar
inc
stc
dec
pop
movsb
cltd
ficoms
shlb
cmp
inc
notb
sahf
add
mov
frstpm(287
mov
dec
outsb
xchg
mov
imul
inc
mov
mov
sbb
cltd
cmp
test
call
movsl
movsb
lds
shll
test
mov
jecxz
sbbl
sahf
inc
adc
and
or
or
idivb
sub
cmc
cmp
mov
or
fnstsw
sub
call
mov
sbb
je
ljmp
jno
xchg
lods
in
push
mov
bound
cltd
mov
daa
mov
add
xor
xchg
mov
std
cwtl
arpl
test
mov
dec
andb
movsl
mov
add
paddusb
mov
mov
adc
adc
or
and
rclb
mov
out
xchg
test
jns
mov
jle
insb
jo
mov
aam
or
jbe
mov
adc
cld
hlt
xlat
and
les
xor
pop
mov
out
add
fnsave
popf
mov
jecxz
inc
clc
mov
cli
adc
int3
pop
mov
sarb
call
out
repz
or
xchg
ficoml
fbld
mov
pop
lds
mov
add
js
inc
and
mov
cmpsl
shlb
enter
mov
hlt
xchg
outsl
rclb
lods
and
dec
lods
mov
in
push
in
fiadds
push
andps
cmp
jmp
dec
es
divl
sub
scas
mov
gs
out
mov
or
ss
imul
orb
mov
pop
jle
dec
iret
adc
inc
movl
dec
push
in
aaa
loope
xor
xchg
cmpl
and
pop
int3
jbe
jns
mov
adc
xor
out
mov
rorb
lcall
add
dec
add
scas
jecxz
fadds
dec
je
test
add
cmp
jne
outsl
ja
loopne
pushl
mov
mov
xchg
adc
imul
adc
xor
sub
cld
pop
sbb
or
and
les
subb
jo
add
movsb
mov
xchg
in
ljmp
cmpb
int3
fiadds
fwait
lods
jl
xchg
jl
into
call
cs
pusha
aas
es
test
fiaddl
fists
push
mov
pop
mov
popa
mov
mov
decl
jno
xlat
add
lret
jle
inc
xchg
adc
and
pop
das
and
lret
pop
arpl
add
adc
jge
orl
imul
lret
imull
pop
cmp
aad
pushf
and
push
push
in
or
aad
rcrb
push
push
xchg
lock
or
test
xlat
repz
inc
push
cld
and
pop
stos
les
adcb
ret
adc
shrl
mov
pop
xor
sub
aam
lahf
add
cld
sub
xchg
xor
xor
jno
test
or
hlt
cwtl
cmp
lret
stos
jge
rcr
pop
scas
inc
nop
mov
xor
inc
ficoms
push
jg
sbb
insl
sbb
andl
pop
sub
pusha
mov
es
insl
mov
fucomi
lds
mov
jge
mov
rorb
lods
leave
mov
pusha
mov
inc
ss
inc
mov
add
outsb
xor
jl
cs
and
and
mov
pushf
fldenv
popl
cld
inc
pop
dec
js
cli
pushf
push
sbb
pushf
and
cltd
jae
imul
insb
or
out
dec
pop
in
mov
or
jg
int3
insb
add
push
and
and
ljmp
xchg
cmpb
push
xlat
add
aaa
fldcw
testl
inc
sbb
in
pop
adc
cmpsl
cli
push
ss
and
and
icebp
adc
xor
enter
sbb
push
test
inc
imul
push
hlt
addr16
cwtl
xor
mov
fcoms
aad
dec
mov
push
sbb
mov
push
add
aad
and
mov
mov
dec
sub
mov
mov
je
jmp
lcall
movsl
int
pop
div
mov
aas
mov
cmpsl
imulb
rolb
loopne
jns
and
scas
jle
xor
xchg
mov
dec
and
inc
pop
xor
sub
ja
pusha
enter
or
pop
mov
popa
pop
inc
fcompl
add
ret
out
nop
mov
xor
rorb
jae
mov
dec
int3
pop
hlt
cmp
adc
icebp
ret
hlt
mov
rolb
inc
pop
mov
cltd
push
in
mov
sbb
mov
dec
mov
and
add
jbe
cli
cmpsl
lock
push
add
push
sbb
xchg
shr
into
mov
push
out
xor
add
jae
xchg
push
cmp
sbbb
mov
arpl
mov
sub
imul
sbb
cld
test
cmp
ret
hlt
repz
lods
xor
add
fists
xchg
cmc
dec
mov
leave
repz
xor
mov
cli
cs
pop
sbb
mov
and
pop
hlt
lcall
sub
dec
pop
bound
xchg
jg
dec
jmp
test
cmp
fisubrs
push
sub
inc
movsl
inc
das
add
cltd
and
les
jae
test
sub
sbb
cmp
dec
xor
pop
imul
pop
repz
xchg
jnp
dec
out
mov
loop
data16
push
push
icebp
push
adc
inc
ret
mov
in
jnp
loope
mov
sub
mov
aad
addr16
lret
pop
cmp
lret
push
in
xor
test
push
ror
inc
pop
cmp
adcl
dec
mov
incb
push
inc
test
cmpsb
sub
mov
inc
and
scas
insb
scas
imul
dec
hlt
and
mov
adc
cmpsl
mov
inc
and
push
adc
add
arpl
mov
pop
lods
xchg
sbbb
js
arpl
push
lcall
loope
mov
cmpsb
jl
call
loopne
inc
das
inc
add
xor
xchg
xlat
call
call
xlat
push
fdiv
inc
pusha
and
pop
imul
push
xor
mov
or
xchg
push
adc
nop
loope
inc
jmp
test
or
add
leave
adc
sub
aaa
mov
imul
push
aam
iret
add
mov
andl
dec
repnz
jne
fsubrs
pushf
sub
stc
sarl
mov
xor
sub
adc
ja
nop
test
jp
movsl
mov
sbb
fistl
mov
daa
xchg
mov
int3
inc
push
push
mov
cltd
and
sbb
dec
pop
dec
data16
push
fwait
repnz
stos
pop
mov
cld
adc
lret
dec
pop
mov
cmp
push
add
data16
gs
shr
fs
mov
xchg
jmp
aaa
repz
or
addr16
mov
sti
cs
sub
push
lods
lds
cmp
sub
push
ljmp
outsl
mov
jae
pop
xchg
jae
addl
das
aas
or
popf
sub
int3
xor
popf
arpl
dec
repnz
jb
mov
or
sti
adc
loop
pop
outsb
fstpt
sbbl
lcall
jne
int3
mov
and
movsb
inc
loope
lcall
dec
ja
or
jns
add
shlb
sub
cmp
pop
in
insb
mov
mov
std
mov
xchg
xchg
and
push
jmp
mov
xchg
cwtl
test
push
dec
mov
jmp
js
shrb
fldcw
dec
cmp
out
mov
lahf
fs
mov
mov
ret
hlt
in
movhps
dec
mov
xchg
in
jp
jns
sub
mov
add
push
loop
sub
sbb
xor
imul
fstpl
sub
test
xchg
jle
ss
and
mov
popa
inc
inc
fdivl
sub
xchg
scas
sbb
or
push
ljmp
call
gs
mov
test
sub
cmpsb
fs
cmp
cmc
mov
leave
sbb
or
bound
minps
adc
int3
jbe
outsl
aaa
push
adc
repz
clc
sbb
call
dec
call
adc
mov
js
inc
fldenv
ja
add
sahf
cmc
push
or
mov
cs
cwtl
push
dec
in
mov
or
int
inc
fstl
mov
xor
fstpl
lock
aaa
dec
bound
mov
adc
mov
fs
push
or
shrb
mov
mov
mov
addl
movl
cmc
jo
gs
jmp
xor
mov
ret
subb
sbb
mov
call
cmpb
mov
into
mov
pop
fnsave
jecxz
push
pop
fdivp
push
pop
add
xor
or
inc
sbbb
xchg
imul
pop
into
cmpsw
jae
xchg
int3
fsubs
inc
or
sbb
lahf
dec
inc
inc
push
sarb
icebp
data16
push
inc
push
fmull
inc
sub
pop
push
mov
inc
jno
fsubrs
adc
ret
push
out
test
sub
inc
out
imul
jns
lret
fcoms
movsb
aam
leave
push
scas
mov
jp
pop
std
mov
pushf
mov
pop
and
mov
rorb
pop
add
mov
iret
sbbb
aam
ja
add
insb
sahf
mov
jmp
int
shl
jl
adc
dec
push
mov
and
mov
stos
xor
or
fnstenv
or
xor
mov
push
cltd
xor
enter
add
mov
in
and
adc
mov
mov
fidivl
bound
adc
pop
or
sub
inc
push
xchg
jb
mov
mov
out
cld
test
das
cmp
in
xlat
push
push
fwait
jle
inc
push
leave
fucomp
jnp
imul
dec
push
sub
pop
incl
jo
lea
inc
mov
cmpsl
in
xor
test
inc
out
jne
popl
push
push
sub
into
gs
mov
xchg
jbe
jmp
hlt
pop
decb
out
push
pop
mov
idivl
sub
lret
xor
adc
call
mov
or
das
cmp
push
sbb
cmp
cltd
imul
sti
mov
cmp
sbb
orl
in
jb
cmc
pusha
cmp
inc
inc
fdivs
inc
test
clc
or
lea
push
lods
fistps
adc
sub
in
add
stc
ret
sahf
test
lret
icebp
xchg
jno
inc
push
jmp
sub
add
pop
mov
ret
xchg
sub
pop
sbb
dec
lods
cmp
push
xor
push
jmp
mov
sbb
mov
lea
adc
gs
xor
rcrw
leave
js
pop
lock
sbb
adc
xchg
inc
cmp
in
pop
test
xor
je
movsb
push
adc
xchg
and
call
and
xchg
push
popf
lds
lahf
mov
mov
push
push
ss
push
add
mov
dec
scas
inc
jp
lds
adcb
xor
pop
decb
dec
aas
xchg
push
mov
push
lret
or
ficomps
sbb
fwait
dec
test
nop
out
movsb
adc
mov
or
pop
dec
pop
dec
mov
mov
sbb
addr16
inc
pop
xor
sbb
xlat
test
mov
jae
fsubs
pop
mov
mov
int3
imul
adc
hlt
push
in
jb
mov
pusha
outsb
add
std
fwait
and
pop
push
mov
xchg
outsl
incw
popf
aaa
or
in
les
jp
cmp
mov
or
pop
ret
mov
setle
pop
sbb
pushf
and
es
iret
repnz
lods
shll
adc
mov
push
roll
fstpt
dec
mov
std
jmp
aad
cmp
ds
add
cld
and
lcall
in
adc
es
mov
sbb
xlat
cmp
in
scas
ret
testl
outsb
inc
lcall
rclb
or
sti
or
dec
adc
pop
mov
insl
fs
or
mov
shlb
pop
das
pop
enter
sub
popf
popa
lock
xor
aas
pushf
add
mov
fs
push
jmp
psubq
fisubl
mov
pop
xlat
mov
loopne
aas
ja
sbb
inc
mov
scas
dec
or
stc
icebp
add
repnz
xchg
addb
bound
inc
loopne
xchg
sbb
jg
pushf
mov
jl
aad
sar
mov
push
adc
mov
jae
insb
sub
popf
fidivs
xlat
and
mov
add
int
push
js
jmp
jmp
mov
mov
rcr
fs
sbb
lea
adc
shlb
and
stos
mov
stos
loop
sub
cmpsb
pop
or
testb
les
push
dec
mov
cmp
sub
lret
mov
lods
sbbb
pop
xor
idivb
sub
stos
rclb
icebp
maxps
xor
jno
xchg
bound
lock
fs
pop
mov
fsubr
or
cmpsl
in
cmp
mov
sbb
push
add
jns
and
stc
cmpsl
push
cwtl
cmp
cmp
and
fs
out
inc
pop
test
xchg
repz
in
xchg
cmp
nop
mov
add
rdtsc
mov
jo
pop
and
mov
jne
test
fisubrs
fsubs
cmpsb
jg
add
das
js
mov
jbe
mov
push
mov
jg
push
mov
sarl
pop
adcb
inc
paddsw
xchg
test
stos
popa
clc
fcmovnbe
inc
stos
jp
das
cmp
lret
push
sub
xchg
aam
dec
ret
and
insb
in
popf
or
testl
sub
xchg
loopne
jo
cmp
push
mov
pop
xchg
sub
iret
ret
repz
mov
pop
xchg
ljmp
push
or
data16
mov
inc
jnp
frstor
shll
ret
fwait
daa
outsl
xchg
jns
ret
pop
jno
aam
jns
mov
xor
mov
add
lea
fst
sub
movsb
lea
push
mov
mov
mov
dec
loop
mov
cmp
pop
lock
mov
push
ret
out
loope
dec
or
lret
push
jb
dec
pop
idivb
jnp
ljmp
or
sbbl
cmc
push
jnp
fadd
in
mov
pop
js
inc
ficoml
dec
mov
push
xchg
push
mov
rep
ljmp
test
cmc
mov
std
or
inc
xchg
fsubr
or
dec
js
jmp
out
sbb
jne
mov
xchg
fnstsw
inc
and
shll
jmp
loopne
dec
push
sti
pop
jl
ret
pop
mov
loop
xchg
aam
pop
inc
xor
andb
in
enter
or
scas
xchg
cltd
sub
fcompl
sbb
stos
mov
inc
fmul
jo
push
push
fstps
fsub
and
jae
std
es
push
mov
mulb
push
std
pushf
xchg
mov
push
fistps
hlt
dec
jmp
idiv
mov
aaa
enter
inc
popf
xor
jne
mov
out
pop
mov
add
cli
adc
jg
mov
addr16
loop
sbb
out
push
loopne
arpl
outsl
add
imul
mov
adc
sub
pop
das
add
mov
aaa
mov
jo
loope
pop
push
in
mov
mov
add
pop
lahf
xchg
in
das
mov
loop
inc
cmpsl
mov
pop
jno
jmp
and
xchg
sbb
repz
ds
bound
pop
pop
pushf
xor
repz
lret
mov
mov
in
lock
mov
je
push
sti
pop
xchg
mov
push
insl
dec
jle
add
jo
pop
mov
and
pusha
push
xchg
mov
sbb
sub
mov
in
inc
or
or
jb
fildll
je
or
xchg
inc
push
jg
dec
cmp
mov
and
hlt
fs
test
lret
sbbl
sbb
dec
xchg
inc
es
out
lret
adc
jle
push
add
movsl
push
or
cmpsl
repnz
stos
mov
pop
fisubrl
fnstenv
mov
leave
addl
adc
lret
nop
sbb
cwtl
scas
push
dec
push
fs
sub
mov
repz
ds
outsb
test
ret
mov
sbb
xor
mov
push
inc
jmp
negb
jp
push
popa
sbb
jg
push
imul
mov
int
lods
scas
nop
scas
int
pop
inc
sub
shrb
mov
sbb
sub
mov
sub
loopne
popf
in
pop
sub
pop
cmpsl
notl
jp
out
sbb
xchg
cwtl
xchg
xor
mov
pop
mov
inc
arpl
insb
adc
mov
xchg
or
mov
pop
call
jle
push
ja
cmpl
xor
adc
jl
or
jge
into
outsb
imul
adc
xchg
add
mov
xor
and
popa
jg
add
inc
adc
out
arpl
aaa
subb
mov
outsb
pop
cmp
aas
decl
mov
adc
loopne
pop
push
pop
xor
ret
cmpsb
xor
and
inc
sub
jge
loop
add
cmp
lea
fbld
test
rcll
xor
xor
jbe
jae
push
cwtl
xlat
adc
cli
int3
pop
mov
pop
ret
fisttps
sarb
or
mov
frstor
nop
daa
mov
scas
and
cmpsb
cld
ja
in
call
cmp
dec
data16
std
or
int3
cmpsl
dec
movsl
pusha
in
cli
mov
xchg
or
repz
insl
repz
jmp
popl
pushf
dec
int3
inc
xor
rcrl
jl
push
inc
leave
cmp
add
or
pop
cmp
inc
jbe
gs
inc
ljmp
jno
xor
add
jl
sbb
enter
xchg
ss
and
or
cmp
inc
pop
xor
xor
enter
arpl
sub
jo
mov
push
clc
popl
jg
sahf
mov
ret
pop
fsubrs
popf
cmp
sbb
xor
ljmp
sbb
gs
and
lret
mov
mov
xor
shlb
sub
dec
pop
ret
call
push
xchg
ffreep
movsb
mov
lods
pop
push
andb
mov
cmpsl
push
pop
out
push
fldt
and
lea
mov
mov
jge
add
in
test
xchg
testl
lods
lds
cs
jecxz
jmp
sbb
lret
lock
sub
negl
das
mov
fidivl
push
stc
cwtl
das
sub
mov
mov
lret
sbb
jo
les
into
xchg
add
ror
push
mov
lret
rorb
jle
push
push
push
add
dec
shl
or
jmp
out
movsb
pop
xchg
push
adc
jp
sub
cmpsb
jbe
fmuls
movsl
pushf
sbb
cwtl
in
jl,pt
std
mov
lcall
aad
inc
mov
add
rcll
aad
js
fiadds
sbb
push
movsb
bnd
and
xchg
mov
orb
mov
popf
pop
sbb
or
push
mov
jp
pop
lods
in
enter
and
push
push
movsb
cmp
cmp
roll
fmul
mov
arpl
rep
cltd
push
mov
jp
mov
rcrb
les
cs
jnp
adc
cwtl
inc
dec
lock
mov
popf
int
jo
in
cmp
sub
loop
es
stos
xchg
loop
cld
xchg
mov
sbb
popa
pop
lea
add
mov
jecxz
mov
mov
inc
cwtl
packuswb
or
jecxz
aam
or
out
enter
fs
xchg
cmpsl
outsb
shll
mov
cmc
jb
test
and
inc
rclb
mov
gs
lret
sti
ljmp
adc
fidivl
or
pop
inc
addl
inc
pop
sbb
mov
mov
ficoms
inc
lods
lods
push
dec
and
fldcw
pop
clc
pop
scas
cmp
dec
adc
jmp
pop
int3
mov
push
mov
mov
xchg
push
into
filds
cli
enter
push
mov
arpl
sub
mov
rol
sub
jns
outsl
fcoms
scas
sub
pop
adc
xchg
dec
aaa
sbb
es
imul
push
inc
addr16
inc
jae
arpl
xchg
jg
push
or
cmp
sub
add
xor
popa
in
fimuls
hlt
lcall
pop
pop
xchg
popl
push
or
add
fnstenv
sbb
and
pop
ds
jl
adc
mov
or
leave
mov
pop
shll
mov
sti
push
loop
out
mov
xor
push
jl
cmp
stc
nop
push
jns
out
stos
pop
pop
fidivrl
inc
pop
test
dec
hlt
pop
js
ret
stos
jle
mulb
dec
popf
cmpsb
sbb
aam
and
push
or
mov
pushf
scas
push
inc
frstor
or
call
jns
sti
xchg
dec
push
jl
jo
scas
mov
xchg
sbb
std
test
jo
and
jb
pop
ret
fiadds
cs
and
test
xchg
pop
and
lds
xchg
inc
call
fidivs
scas
fs
or
cmp
shlb
or
cmp
xchg
sbb
cmpsl
jge
fcmovb
push
jmp
cld
pop
push
xchg
movsb
inc
lds
icebp
or
stos
mov
push
pop
repz
sub
dec
xchg
mov
clc
shrb
sbb
and
jbe
in
test
addb
and
shll
aas
sbb
cmp
repnz
mov
nop
ds
repnz
add
and
push
jo
jns
in
stos
aam
mov
scas
xlat
outsl
loope
adc
sbb
mov
lahf
ss
jb
xchg
or
push
ds
arpl
mov
push
mov
lods
jae
cli
rcrl
movsl
std
and
lret
mov
call
and
inc
mov
push
cwtl
inc
movsb
jmp
ds
stos
dec
int3
inc
push
in
fs
std
or
iret
call
pop
lock
ja
les
sarl
aad
shll
fisubl
clc
xchg
aaa
xor
push
jg
jp
add
mov
in
add
inc
fs
jns
dec
mov
mov
adc
push
rcl
sbb
jne
cmp
test
jmp
clc
cmp
sbb
imul
movsb
cmp
mov
incl
enter
add
mov
out
repnz
mov
xor
pop
cmc
fnstenv
push
fnstcw
test
adc
and
ret
cld
arpl
add
inc
outsl
push
jne
cmpsl
pop
xchg
inc
lea
or
aas
add
xchg
lahf
cmp
cmp
xor
pop
gs
fimull
xchg
sub
mov
push
pop
mov
push
rcrl
scas
leave
in
test
sub
notl
xor
jle
xor
jl
rcrl
jno
adc
outsb
inc
insl
and
loopne
adc
repz
or
mov
bnd
sbb
and
in
add
pop
jnp
test
add
scas
inc
push
jae
pusha
imul
loopne
movsb
cmc
lret
xlat
fisttps
add
add
xchg
add
sti
test
lods
fistl
shl
push
sbb
cmp
add
cld
inc
mov
fwait
and
movb
out
push
adc
dec
data16
add
mov
add
jmp
adc
iret
pusha
push
add
mov
loop
sahf
push
jbe
aad
jae
loopne
mov
jle
cmpsb
in
cs
inc
xlat
fldcw
arpl
dec
jecxz
mov
mov
or
out
or
cs
xlat
adc
stos
jne
aaa
push
sbb
inc
sub
cmp
dec
loop
call
mov
ret
and
xor
add
xchg
iret
jns
jg
push
xchg
add
into
lods
addl
je
push
mov
lock
and
sub
and
add
aam
sbbl
roll
inc
xchg
rol
pushf
fildll
fucomp
dec
dec
sbbl
mov
les
fsubrl
mov
mov
inc
jnp
mov
lret
mov
mov
xchg
mov
into
add
sub
pushf
imul
leave
push
jmp
add
cli
adcl
notl
push
imul
cmp
push
mov
je
push
imul
leave
mov
decl
out
test
sbb
dec
inc
push
js
pop
cmp
int
add
mov
into
bound
and
mov
fsubrs
pusha
imul
adc
jb
pop
push
ficoml
push
fnstsw
lock
mov
in
mov
arpl
btr
jge
inc
mov
hlt
sub
dec
fcoms
jnp
jecxz
in
and
scas
not
scas
stos
push
in
mov
adc
push
and
ss
mov
xchg
pop
out
xor
arpl
push
inc
fstps
adc
inc
outsl
pop
fwait
and
xchg
in
in
sub
cmp
iret
lret
pop
jmp
fstpl
pop
sub
sti
jno
jno
xor
ss
jg
in
stos
leave
ss
cli
out
arpl
fists
pushf
das
xchg
inc
push
sti
fdivl
sbb
idivl
or
test
mov
jge
lahf
sbb
sbb
add
adc
dec
inc
xor
dec
icebp
mov
out
add
adc
and
inc
mov
adcb
pop
jl
movsl
sbb
popf
shl
and
pop
add
popa
mov
outsl
and
xor
cli
addb
sbb
data16
sahf
test
push
test
rcl
pushf
aad
lea
arpl
inc
inc
js
js
outsl
jnp
fstpt
call
or
lds
mov
and
arpl
sahf
hlt
add
nop
xor
inc
mov
cmp
xchg
push
test
add
add
xchg
mov
scas
pop
push
adc
scas
add
shlb
xchg
es
push
xlat
mov
mov
fs
inc
xchg
mov
mov
fists
pop
mov
xor
cli
pushf
xchg
sbb
adc
push
inc
vhsubpd
or
lcall
dec
hlt
mov
sub
nop
popf
lods
mul
inc
dec
movsl
inc
jecxz
inc
jnp
aas
fisubs
cmp
cs
les
aam
xor
ret
outsb
rcll
xchg
mov
or
sub
dec
out
insl
add
lret
jne
popf
xchg
fwait
sub
xor
mov
mov
mov
xchg
cmp
pop
insl
or
sbb
arpl
jmp
enter
jns
cld
ja
fldt
xchg
lcall
repnz
iret
inc
sbbb
jmp
or
pop
data16
int3
cli
js
sub
xchg
jo
dec
dec
cmp
in
pop
stos
sbb
push
mov
mov
out
repnz
jp
xchg
sub
insl
push
cmc
fwait
mov
lcall
clc
and
lea
stos
or
scas
mov
negl
lcall
jbe
in
mov
sub
pop
lods
add
sarl
test
and
push
sub
sbb
add
bound
test
pop
inc
icebp
or
lret
and
aaa
icebp
xchg
and
xor
or
aaa
or
push
sub
mov
andb
shrl
push
xchg
pop
test
ret
lds
das
mull
das
xchg
lcall
mov
add
mov
dec
das
inc
aam
in
push
cmc
leave
and
loope
xchg
cmp
repz
or
adc
cs
popa
mov
adc
cmp
lcall
mov
cmpsb
lock
insb
sbb
cmp
testb
cmp
lret
inc
loope
lret
orb
mov
data16
shlb
xchg
sbb
push
stos
push
add
nop
daa
int
inc
mov
inc
cmc
mov
shrl
icebp
jle
ds
sbb
imul
cs
das
xor
jne
icebp
mov
jle
and
xchg
dec
mov
mov
mov
cmp
stos
pop
inc
mov
lret
jmp
push
rcrl
aam
sub
lea
inc
aad
sub
outsb
rcrl
sbb
lea
popa
xor
xor
cmp
jl
loope
pushf
dec
fdivl
stos
add
ret
sub
repz
out
jle
push
mov
mov
xchg
cmpsb
add
lds
xchg
rcrl
mov
xchg
cli
add
jbe
ror
ja
shl
mov
sub
test
sub
inc
out
pop
xchg
in
sahf
inc
jle,pn
loope
ljmp
jb
stos
sarb
shll
adc
out
adc
fadd
mov
jne
pop
xor
mov
pop
arpl
dec
mov
sbbl
icebp
dec
sub
pop
xor
lds
popf
aaa
hlt
aaa
push
out
push
pop
and
aad
insb
in
cmpsl
es
cmp
fld
lret
adcb
inc
or
or
xor
and
insl
mov
iret
lahf
xor
pop
adc
movsb
inc
imul
dec
call
pop
lock
ss
pop
ror
sbb
mov
jae
sub
in
pop
inc
and
pop
stos
popf
push
jmp
jmp
outsl
and
fwait
sbbl
pop
imul
jl
push
sbb
cltd
cltd
add
scas
daa
jp
aam
push
xlat
jbe
mov
into
mov
or
out
outsb
add
jnp
or
mov
jb
sar
pop
dec
daa
or
xor
mov
mov
sar
pushf
int
test
into
dec
cmp
push
mov
cs
pop
jbe
xor
push
sbb
pop
mov
adc
mov
mov
repnz
ljmp
mov
fwait
and
inc
adc
push
mov
pop
pop
sbb
xlat
aaa
pop
mov
mov
cmpb
mov
push
jp
aaa
xchg
mov
xchg
das
xchg
imul
cs
nop
into
jecxz
adc
pusha
mov
fcomps
rolb
popa
ret
aas
hlt
xchg
mov
or
ds
fisubrl
add
jg
pop
rcrb
mov
and
push
inc
es
jbe
dec
mov
dec
mov
or
adc
in
xchg
in
jae
xlat
push
fisttpll
fxch
pop
cs
mov
mov
push
jmp
in
repz
dec
mov
jge
ret
pusha
dec
movsb
sbb
cs
and
jb
pop
mov
sub
cmp
cmp
test
mov
sub
stc
push
cmp
xlat
mov
mov
push
inc
and
inc
in
and
mov
jecxz
maxps
inc
sub
jns
popa
stos
mov
fidivrl
adc
clc
pop
test
sbb
xchg
mov
push
mov
dec
repz
pop
and
jno
cmp
call
mov
sub
mov
lcall
dec
je
shlb
dec
inc
test
jbe
pop
sbb
frstor
sbb
mov
fbld
scas
jl
lcall
ljmp
jmp
pop
and
pop
sub
mov
andb
push
icebp
pop
fdivrl
add
lret
push
rcrl
idivb
rol
loop
pusha
lock
out
ret
or
mov
jne
xor
jns
in
xchg
add
cmp
ljmp
or
test
mov
int
into
mov
test
aaa
mov
push
mov
mov
daa
mov
idivl
icebp
lcall
aaa
cmp
dec
icebp
sti
xor
xchg
sbb
xchg
notl
pop
xchg
loopne
pushf
push
xchg
in
icebp
mov
xor
mov
sub
cmp
aaa
mov
xchg
lods
sbb
fistps
test
or
inc
mov
mov
push
call
fcoml
pushf
mov
and
movsb
push
pusha
mov
xchg
idivl
aam
pop
add
inc
inc
movsb
jl
out
or
insb
pop
and
std
sti
fucomp
adc
dec
pop
add
sub
jo
dec
aam
ja
shrb
mov
cs
jns
push
xchg
adc
subl
pushf
push
test
pop
loopne
or
cmp
addr16
aaa
jnp
pop
or
push
mov
roll
inc
jns
add
inc
push
test
out
nop
and
xor
dec
inc
les
sub
fwait
jb
ljmp
inc
and
jb
data16
pop
mov
int3
inc
mov
popa
shrl
dec
psllq
cmp
mov
gs
daa
test
bound
jg
nop
fwait
and
out
jns
pop
sub
mov
imul
in
xchg
pop
cmc
xor
sbb
add
mov
data16
xlat
test
cld
jg
jp
std
inc
out
sbb
dec
in
pop
pop
loope
add
add
adc
in
pop
mov
cmp
adc
mov
cltd
pushf
cli
or
lock
cmp
jne
mov
ror
arpl
pop
mov
push
cmp
popa
ds
rclb
arpl
addr16
les
repz
cmc
cmp
push
lods
out
pop
and
sub
mov
sbb
sbb
scas
outsb
inc
pop
test
jns
outsl
mov
add
add
jo
daa
into
les
int
mov
jb
into
movsb
outsl
jp
iret
push
and
lcall
std
fcmovnu
jno
adc
adc
adc
cmp
nop
out
lods
dec
fstpl
sbb
xchg
add
inc
test
pop
popf
es
fsubrp
push
sarb
and
sbb
jmp
int3
or
jp
fisubl
fnsetpm(287
cmp
repz
and
lret
stc
inc
repnz
dec
sbb
mov
adc
test
fmul
sbb
mov
xor
xor
mov
sahf
xchg
outsl
push
mov
cltd
cwtl
sub
cmp
mov
pop
test
idivb
out
pop
imul
ss
add
push
flds
in
sub
roll
cmp
cmp
jns
ja
push
mov
rorb
jmp
subl
mov
adc
mov
lret
addl
jnp
movsb
mov
imul
and
bswap
push
cmpsb
loopne
xorl
cwtl
lret
das
inc
pop
test
int3
cs
or
and
xor
sbb
xor
mov
test
loop
dec
mov
cmp
cwtl
jb
and
cmpsb
xchg
mov
jp
jb
xor
xor
testb
in
ret
dec
pop
mov
jbe
jnp
push
loope
lcall
xor
xor
inc
or
cwtd
and
push
jl
femms
ljmp
popf
xor
sub
cmc
lcall
shl
bound
dec
jmp
dec
adc
nop
dec
cmp
aad
sub
jg
lea
xor
ljmp
pop
xchg
push
sti
jecxz
aad
data16
sub
push
test
stc
shll
push
lods
and
mov
aaa
jae
jl
sub
add
mov
cmc
popf
mov
jo
fwait
shrb
and
add
jb
and
dec
jg
xlat
mov
mov
sub
daa
mov
fldt
loope
cs
pop
mov
mov
ljmp
into
mov
push
dec
fs
inc
fs
push
in
dec
cmp
das
addr16
aam
testl
mov
lock
xchg
popa
or
cmc
ja
arpl
and
adc
js
out
rcll
mov
add
inc
in
mov
push
subl
addr16
add
insl
loop
or
mov
ret
ja
cmc
ja
add
or
mov
dec
jnp
fwait
pushf
add
sbb
mov
dec
jg
inc
lods
pop
inc
cwtl
jp
fiadds
and
mov
xor
jnp
aad
mov
or
shrb
es
or
cld
push
mov
pop
cmp
add
cs
xchg
mov
inc
out
jecxz
push
fnsave
lds
dec
or
pop
aad
or
push
push
jnp
xor
fwait
mov
mov
and
push
cwtl
clc
inc
rcrl
inc
xchg
mov
sarl
xchg
adcb
jp
popa
dec
bound
push
je
sahf
dec
jbe
ret
ss
addr16
pop
mov
mov
insb
out
cli
sbb
inc
ficompl
sbb
dec
and
xlat
pop
mov
mov
push
push
jb
or
inc
pushf
jge
jle
mov
clc
or
cld
loope
mov
rcrl
add
jb
jno
stos
rcl
sbb
push
out
cmp
and
scas
cltd
inc
stos
mov
push
inc
sbb
xor
jge
adc
cmp
popf
or
nop
fdivl
aad
jp
in
rcrb
in
dec
cmc
inc
popa
mov
repnz
inc
mov
pop
pushf
or
int
mov
jae
cmp
cmp
test
mov
xlat
lods
loope
jbe
cmpsb
inc
sub
jg
rorb
sbb
jmp
popf
mov
gs
call
test
and
jns
mov
push
aaa
or
or
xchg
loopne
lahf
dec
dec
cmp
push
jnp
xchg
sub
pusha
jg
pop
stos
lds
adc
popl
cli
add
cltd
imul
lea
push
out
xchg
call
inc
and
movsb
push
cltd
int3
xchg
and
and
sbb
mov
loopne
cli
add
or
push
mov
or
pushf
loope
dec
adc
fmul
icebp
or
stc
mov
lds
pop
cmc
add
subb
daa
mov
ja
les
fs
push
cltd
xchg
sahf
out
add
stos
in
or
hlt
mov
stos
ss
ret
pop
inc
popa
in
dec
mov
jge
jne
sbb
rcrl
bound
roll
dec
dec
mov
stos
sarl
in
mov
or
adc
jge
imul
call
outsb
mov
mov
addr16
fwait
xor
jecxz
xchg
mov
fnstsw
iret
or
adc
inc
ds
and
leave
mov
aaa
mov
mov
sbbl
mov
and
repnz
xor
push
stc
jbe
push
push
mov
ljmp
mov
xor
sbb
dec
mov
inc
cli
or
imul
xchg
js
lds
sbb
popa
mov
sbb
repz
xchg
in
lods
repnz
and
push
sub
xchg
jge
xchg
mov
dec
push
or
mov
leave
movsb
or
test
aaa
cli
mov
push
xchg
xchg
gs
test
in
fldcw
in
std
test
shrb
push
outsl
pop
sahf
scas
das
cmp
fucom
add
adc
xor
ret
push
pop
out
cmp
sti
cmp
cmp
mov
jo
jg
or
mov
scas
mov
popf
cli
aam
push
or
jno
or
roll
outsl
imul
popa
ret
test
mov
or
jb
adc
in
add
sub
lods
xchg
ret
addr16
jge
div
adc
movsb
push
push
add
mov
pop
sti
jbe
call
cmp
lcall
xor
dec
fbstp
iret
dec
ret
loopne
push
mov
ret
lret
fs
hlt
ret
add
insb
fldt
lds
loop
sbb
inc
push
stos
jmp
sbb
call
or
daa
js
jge
push
ljmp
call
ficoml
dec
insb
mov
inc
push
insb
fadd
out
lcall
sub
loopne
icebp
insb
imul
push
flds
or
arpl
push
fists
fsubs
cs
and
xchg
dec
int3
shlb
inc
ficoms
bound
rorb
jo
push
adcb
repz
dec
jnp
pushf
and
jns
jg
enter
cmp
int
or
jge
or
test
stos
inc
iret
or
sbb
jmp
fistps
in
pop
icebp
mov
les
incb
add
push
scas
mov
ss
fs
or
push
mov
xchg
in
inc
dec
mov
sub
jg
lcall
ret
outsl
jmp
xchg
push
mov
pop
push
in
arpl
movsb
lods
sub
pop
jl
jns
sarb
popa
jnp
inc
xchg
inc
sbb
arpl
lock
or
pushf
jne
es
mov
pop
daa
outsl
dec
mov
pushf
cs
adc
incb
inc
loop
int
fldcw
lahf
mov
shlb
out
push
ljmp
ljmp
stc
mov
add
inc
in
add
pop
and
fsubs
pop
sahf
xor
push
mov
iret
ret
out
mov
push
sbb
outsb
fwait
sbb
rorb
push
aas
sbb
lret
js
call
pushl
sbb
scas
fstl
sub
mov
mov
inc
jae
rcll
cmp
jmp
xchg
testb
pop
jb
pop
popf
mov
mov
mov
subl
mov
xchg
pop
or
sub
sbb
mov
fsts
movsl
inc
xor
sahf
xor
imul
dec
mov
mov
stc
sbb
cmp
mov
add
dec
add
test
dec
call
xchg
mov
mov
sti
es
lahf
gs
sub
cmp
xor
test
adc
xchg
pop
push
cmpsb
and
mov
pop
pop
icebp
dec
lcall
insl
inc
loopne
mov
idiv
xchg
jmp
or
loopne
pop
cli
fiaddl
in
rep
cmp
jecxz
jg
outsl
test
jge
adc
ds
ja
std
lock
mov
filds
ds
loope
pop
xor
dec
ljmp
jg
xorl
pusha
iret
hlt
mov
mov
das
pop
mov
loopne
pusha
mov
sar
inc
mov
pop
push
repnz
jbe
fwait
rolb
fs
sbb
push
sbb
es
rcrb
lcall
mov
mov
stos
fnstcw
mov
dec
in
cmp
hlt
mov
xchg
and
lcall
add
xor
or
xchg
mov
inc
xor
insb
cmpb
movl
in
dec
in
mov
sarl
sbbl
xchg
xchg
out
movsb
jecxz
mov
pop
inc
out
in
testb
dec
adc
jo
mov
dec
cmp
push
jbe
jmp
stos
inc
cld
fstps
ficoml
sub
loope
daa
iret
sbb
add
insb
pop
jbe
push
inc
mov
sbb
and
rolb
jae
negb
or
sub
add
dec
out
pop
sub
sbb
scas
lods
jmp
add
mov
and
js
aaa
and
mov
mov
inc
mov
mov
push
in
std
jnp
out
cld
mov
daa
imul
xchg
mov
lods
cltd
pop
pop
mov
decl
shrb
sub
add
daa
test
inc
xor
mov
in
jmp
push
dec
stos
daa
incb
mov
mov
in
aam
add
dec
cwtl
in
mull
lods
inc
out
in
xchg
push
mov
jno
negb
repz
lret
cld
inc
jb
pop
mov
jg
inc
and
sbb
push
pop
call
push
out
pop
aaa
mov
lret
sbb
mov
add
pop
xor
loopne
into
mov
enter
and
sbb
add
pushf
jae
imul
testb
loopne
stos
xlat
aaa
dec
repnz
aas
frstor
int
loopne
movsl
stos
or
and
insl
sbb
push
popf
inc
mov
lahf
negl
mov
pop
add
inc
mov
iret
inc
fst
arpl
idivw
in
nop
scas
xor
nop
cltd
dec
push
lret
insb
jle
test
or
sti
mov
mov
out
dec
mov
adc
andb
gs
add
les
mov
out
jl
adc
mov
mov
add
push
pop
frstor
mov
in
sarb
adc
xor
aad
call
lds
scas
and
jge
in
mov
push
mov
out
inc
xchg
fistps
out
mov
or
dec
sbb
fwait
enter
fstps
lds
mov
dec
ficoml
pop
inc
xlat
mov
loope
idivb
sub
and
jecxz
in
jge
popa
enter
xchg
jns
xchg
ljmp
jns
pop
in
es
mov
clc
out
cld
cmp
adc
leave
push
in
test
mov
push
add
popf
ficoms
loope
mov
jg
add
mov
xchg
lahf
stos
idiv
dec
pop
and
pop
jb
daa
mov
aam
adc
js
dec
jno
cwtl
jp
lret
sahf
bound
pop
je
ret
mov
add
hlt
mov
or
mov
imul
push
add
daa
test
cmp
je
lea
mov
ret
hlt
std
jecxz
mov
or
jp
fbld
cmp
pavgb
popl
cmp
push
bound
cltd
add
cmp
stos
mov
jmp
sti
shll
pop
or
sahf
aas
add
mov
mov
inc
adc
mov
adc
aas
adc
nop
cltd
std
clc
adc
ret
leave
xor
leave
mov
loopne
cmp
add
push
jge
cmc
pop
mov
ds
mov
jb
jno
sbb
ficoml
jmp
dec
lods
shlb
or
xchg
push
push
adc
adc
ret
sub
mov
in
adc
sbb
das
into
fdiv
mov
fwait
bnd
lea
cmp
sub
dec
mov
and
dec
pop
outsb
lods
int3
and
mov
repz
out
dec
bound
xor
xchg
arpl
jecxz
iret
cmpsb
mov
enter
shr
inc
dec
push
pop
sbb
dec
jecxz
fs
xor
int3
push
es
jle
cltd
push
das
lcall
in
in
cwtl
mov
dec
sbb
xchg
out
test
sahf
ja
dec
out
add
xor
in
mov
shl
imul
jo
sbb
push
test
shrb
push
push
push
das
xchg
int
jne
dec
jp
ss
dec
xor
sub
leave
pusha
aaa
jle
pop
xor
movsl
xlat
xchg
ljmp
ja
jecxz
push
ret
outsb
add
enter
cmp
aaa
add
ss
and
out
lds
jmp
lcall
or
frstor
jp
dec
and
ds
push
lods
push
ss
das
inc
pop
int3
leave
fsts
test
jmp
push
and
mov
fists
or
mov
add
repz
sbb
mov
and
loopne
xchg
cli
pushf
mov
std
jo
arpl
std
nop
jmp
dec
and
mov
add
mov
fadd
lea
rcrl
mov
arpl
aas
pop
adc
clc
mov
into
pop
scas
add
xchg
scas
lods
xor
rcrb
sar
clc
push
shl
pop
push
xchg
insb
sbb
lret
mov
and
fldenv
das
leave
nopl
bndstx
into
pop
sub
mov
int3
adc
lods
stc
cmp
popa
dec
stos
inc
jnp
sar
cmp
enter
mov
xchg
insb
mov
out
lods
push
or
and
add
mov
inc
imul
stc
dec
xchg
push
rclb
icebp
nop
add
jb
lea
insl
test
stos
rcl
push
lcall
arpl
shrl
sub
cwtl
fwait
mov
sub
fbstp
adc
popf
aad
test
xor
sub
sbb
jg
clc
dec
jne
inc
or
scas
mov
lock
fmuls
pop
dec
jp
push
insl
jbe
adc
dec
insl
rorl
xchg
cld
in
dec
jmp
std
dec
fldt
mov
lods
cli
out
cmp
mov
ja
imul
sbb
and
sub
enter
jb
jae
sbb
jae
addr16
mov
pop
cld
xchg
rcrl
lret
fbstp
rcll
out
mov
ficoms
xchg
dec
and
and
pop
inc
ljmp
xchg
cmpsl
test
inc
pop
rorb
lock
cmp
jnp
dec
lods
insl
cmp
xchg
ja
cmpsb
icebp
insb
sbb
out
cmp
add
jbe
movsb
out
and
dec
push
mov
call
sbb
sub
movsl
push
xchg
sti
shrl
mov
jo
out
xor
aad
sbb
dec
popf
or
repnz
lahf
inc
push
test
xchg
int
inc
call
sbb
mov
mov
pop
notb
ds
add
push
jge
lea
dec
or
mov
std
mov
out
ljmp
ljmp
insb
mov
faddl
jmp
fildl
cmp
lock
mov
mov
push
cli
push
or
or
subb
xchg
sub
dec
addr16
test
mov
loop
cmc
arpl
mov
mov
imul
mov
jge
js
int
lods
lcall
add
adc
sbbb
pop
out
lods
dec
les
nop
mov
fsubl
sbb
mov
jge
fisubl
dec
call
dec
push
out
fcmove
adc
outsl
out
mov
mov
out
cli
push
add
inc
out
jne
mov
call
adc
rorl
out
adc
outsb
hlt
add
mov
lock
mov
jbe
push
sbb
hlt
insl
dec
mov
and
dec
pop
leave
rcrl
cmp
sbb
add
out
xor
push
inc
int
lahf
xor
scas
out
or
sti
inc
jle
mov
insb
add
inc
push
push
cwtl
xor
xchg
stos
inc
sub
leave
xchg
xchg
dec
mov
int
add
xchg
xchg
mov
xchg
in
fstpt
adc
mov
repz
cmp
pop
incb
xlat
sub
sbb
push
push
cmpsb
ljmp
inc
xchg
jl
imull
hlt
ret
jns
call
rep
mov
nop
mov
fisubrs
lds
imul
xchg
aam
sbb
stos
les
pop
enter
xor
ret
mov
or
dec
and
sub
out
ss
stc
xchg
out
jns
out
outsl
daa
cli
adc
xchg
mov
pop
gs
xchg
mov
push
lcall
inc
mov
jmp
in
inc
push
out
xor
loop
out
xlat
jo
movsb
sub
dec
dec
xchg
cmp
insl
jb
xchg
add
iret
iret
jg
cltd
fnsave
inc
xor
and
cmc
mov
xor
lods
jg
push
ret
ja
mov
cld
mov
mov
aam
dec
mov
xchg
xor
xlat
xchg
add
push
dec
and
insl
movb
xchg
lret
cmp
lcall
cmpsl
add
push
fldl2e
sti
sub
inc
pop
aam
add
lret
dec
loope
adc
push
pop
std
jo
mov
mov
out
shr
mov
pop
xchg
sbb
fnsave
push
mov
cmp
or
insb
pop
cmp
hlt
mov
jecxz
jmp
jno
xor
cmp
add
lret
pusha
fcmovnb
push
aad
cmc
outsb
sbb
fs
test
adc
cltd
push
lcall
push
sub
std
or
fnsave
mov
addb
std
mov
mov
mov
out
mov
mov
and
lds
mov
add
mov
enter
iret
fsts
xlat
sbb
clc
mov
hlt
mov
clc
mov
lds
and
mov
inc
push
stc
pop
mov
addl
pop
jl
cmp
adc
mov
addb
pop
jns
cwtl
test
dec
add
arpl
pushf
mov
dec
in
dec
popf
scas
and
inc
fiaddl
sbbb
lods
fsubrs
ret
mov
jecxz
and
cmpsl
dec
rcrl
xchg
pop
data16
shlb
jns
fsub
and
inc
imul
and
adc
and
jp
das
stos
cs
lds
insb
ret
mov
mov
mov
xchg
ss
scas
lret
jle
into
cmp
cmp
insb
jle
aaa
sbb
ficoms
decb
test
xorb
enter
pop
imul
push
lcall
scas
inc
sbb
mov
aaa
jmp
scas
lods
arpl
mov
in
int3
jnp
add
xchg
adc
out
repz
jecxz
push
hlt
inc
out
lds
notb
push
jg
stos
xchg
scas
and
test
and
or
jecxz
xor
pop
add
mov
aam
les
mov
or
outsb
cmp
xlat
inc
int
outsl
xor
rcll
dec
adc
rorb
addr16
push
testb
adc
ja
in
lock
inc
lds
pusha
jb
mov
nop
pop
fwait
sbb
scas
stos
rcr
sarb
inc
stc
inc
pop
and
cmpsb
ret
push
mov
cmp
test
and
movsl
orb
in
jae
fdivp
pop
mov
dec
jl
loope
or
negl
pop
out
out
fwait
pop
pop
stos
add
pop
push
mov
out
test
shll
test
aad
and
mov
dec
loop
push
jno
jnp
test
adc
es
mov
dec
dec
mov
sbb
test
stos
in
mov
icebp
mov
fs
push
cli
jnp
iret
les
vsubsd
dec
xor
mov
cltd
mov
lock
std
stos
inc
sbb
sbbl
daa
pop
rcrl
loop
and
iret
mov
popa
sub
mov
enter
enter
insl
subb
pusha
ljmp
stos
jne
les
bnd
fcomps
test
in
mov
lods
cmp
lds
shrl
cs
sub
test
add
lds
sahf
push
in
icebp
cmc
adc
add
sub
outsl
out
pop
rorb
push
dec
mov
loop
jle
xor
pop
test
or
aad
call
mov
scas
mov
lea
jle
lock
pop
ds
cmp
lods
enter
mov
lods
push
lret
or
sarb
mov
movsl
or
stos
adc
pop
cmp
inc
pushf
xor
dec
dec
test
js
pusha
pop
shll
add
push
push
mov
fiaddl
lea
mov
mov
out
sbb
stos
and
repz
mov
sahf
pushf
cwtl
iret
push
cltd
in
push
or
xor
aam
jbe
lea
loopne
out
mov
mov
jecxz
add
or
lods
sub
pop
fwait
les
adc
xchg
jecxz
popf
push
scas
add
test
mov
movsb
es
xor
test
pop
jno
addl
aaa
clc
shll
lds
push
adc
fwait
jl
cmpsl
out
or
incl
out
or
test
clc
or
jecxz
je
push
jb
out
add
sti
and
dec
popa
mov
push
jmp
jnp
inc
mov
sub
lret
cs
push
outsl
xchg
out
cmpsl
sarl
cmc
out
out
pop
lods
addr16
cmp
adc
sahf
daa
bound
rorl
mov
mov
dec
dec
lahf
jle
lds
jns
pop
lret
adc
inc
adc
bound
jb
mov
mov
mov
jge
and
push
dec
mov
pop
dec
int
loop
push
fidivl
call
adc
inc
test
inc
mov
je
jae
sbb
inc
pop
or
ss
mov
daa
or
xor
inc
std
push
mov
or
and
out
leave
pop
repz
addr16
es
xor
cli
or
cltd
and
ret
pop
jp
fsubr
aaa
xchg
mov
mov
sarl
ja
or
mov
push
mov
scas
push
add
test
insl
add
rcll
enter
inc
sbb
pop
std
fnstsw
out
mov
jge
rorb
and
xchg
loope
in
add
cmp
sub
js
xor
jno
dec
sub
icebp
orl
das
mov
mov
sbb
push
jge
inc
and
test
int
in
inc
jne
mov
sbb
push
aas
xchg
fisubs
gs
adcl
cmp
ds
inc
and
dec
dec
mov
into
xlat
iret
loope
mov
movsl
sub
xor
insl
andl
xor
jle
popa
mov
shl
add
mov
lahf
gs
add
mov
sbb
xor
test
andl
popa
adc
or
cld
shrl
lock
fs
imul
lock
rcrl
test
push
dec
loopne
repnz
js
push
push
sbbb
es
xchg
lds
lds
jle
fiaddl
std
sbb
sbb
in
adc
mov
push
aam
pop
insb
inc
addr16
add
xor
decb
pop
mov
cmp
mov
loopne
push
sub
icebp
xor
push
push
fldt
push
clc
in
outsl
clc
push
mov
sub
mov
shrb
inc
xchg
int
xchg
add
loopne
aam
mov
jge
aaa
dec
inc
sbb
lods
mov
adc
jecxz
xor
loope
mov
cmp
cmp
stc
mov
jl
mov
push
stos
lock
int
mov
push
and
scas
insb
lahf
filds
lea
int
pop
jg
push
xor
js
xlat
gs
movsl
push
ficomps
add
jne
lret
mov
sarb
or
pop
pop
test
xor
gs
xchg
loope
or
pop
push
inc
test
add
test
aas
or
xchg
inc
lds
add
out
push
cltd
mov
mov
out
nop
adcb
roll
ret
scas
and
mov
sub
xchg
dec
mov
inc
pop
arpl
pop
dec
jns
dec
adc
loope
xor
dec
cmpb
dec
xchg
dec
leave
xor
cmp
mov
push
rcrl
mov
mov
mov
pop
shrb
pop
aaa
add
dec
cmp
inc
int
movsl
pop
loope
inc
mov
icebp
jb
cs
movsl
arpl
push
movsb
repz
mov
mov
rcrb
lret
mov
and
testb
cmpsl
cmp
add
jle
push
lahf
sub
in
xchg
pop
in
shl
hlt
aas
stos
xor
mov
sbb
jp
pop
fldcw
fs
lret
bound
xor
jmp
repnz
out
test
das
inc
adc
push
stos
clc
repz
loop
sbb
lret
push
pop
sbb
iret
jne
rorb
add
sub
fdivl
rcrl
subl
xchg
fsubrl
push
out
jp
scas
jno
pop
sub
testl
and
sub
push
jmp
or
into
movsl
sbb
out
add
enter
int3
mov
pop
fidivl
push
sub
xor
mov
lock
and
adc
pop
and
ss
cs
inc
test
jl
out
inc
add
out
out
into
mov
fcoms
jno
xor
mov
or
jmp
xor
cmpsb
dec
imul
dec
cltd
pop
std
push
inc
xor
push
popf
and
and
xchg
cmpsb
sbb
out
cwtl
jle
sub
dec
pop
out
add
cmp
xchg
loop
inc
adc
stos
outsl
insb
cmpsl
cmpsb
test
loope,pt
ret
xor
insb
ret
mov
stos
cmp
mov
or
movsl
pop
loop
mov
fistl
cmp
inc
mov
push
stos
pushf
and
jmp
mov
cwtl
sub
xor
ja
fs
xlat
test
jmp
or
and
or
test
mov
sub
or
ffreep
mov
dec
pop
push
xor
jmp
mov
bound
dec
sbb
mov
adc
clc
cmpl
adc
adc
inc
push
xor
cmp
inc
jmp
jno
xchg
aaa
jno
insb
xchg
aaa
sbb
fbld
dec
scas
stos
es
mov
mov
pop
mov
mov
rcll
mov
fwait
pushf
enter
aaa
and
jg
jne
bound
aaa
xor
inc
push
negb
sti
dec
push
xor
jg
cmc
adc
hlt
sub
fstl
outsl
test
fcoms
sahf
mov
xchg
sti
inc
movsl
inc
xchg
data16
cmp
dec
push
pop
flds
cmpsb
pop
xor
mov
mov
repz
gs
leave
decl
sbb
inc
lcall
xor
sarl
xchg
push
stos
scas
lods
outsb
stc
pop
stos
inc
jmp
stc
adcl
jg
enter
cmpsl
add
cmpb
and
sub
pop
and
and
push
xchg
inc
add
push
test
dec
mov
pop
xchg
cmp
enter
dec
lods
loopne
mov
xchg
popa
jnp
sti
notl
or
daa
inc
push
inc
pop
sub
and
jo
dec
pop
mov
std
mov
mov
sub
call
iret
lods
cmp
sbb
rcll
lahf
movb
jbe
or
mov
flds
xor
cmp
ret
add
hlt
adc
and
mov
push
lock
pop
shlb
movsb
mov
mov
jae
hlt
or
ret
or
jl
pushf
sub
mov
cmp
xor
pop
scas
ret
xchg
in
inc
mov
inc
xor
mov
hlt
aad
sub
and
leave
lods
cmp
xor
test
sti
pushf
lcall
mov
ds
mov
dec
inc
aam
mov
popf
mov
mov
push
call
scas
icebp
data16
shrl
push
test
movsl
add
in
aas
leave
rcrl
mov
int
push
fptan
add
sbb
mov
push
jg
push
push
fnstenv
sub
loope
pop
adc
pop
popa
or
test
push
sbb
dec
les
movsb
dec
xchg
push
jmp
inc
scas
sub
push
subl
in
jno
xor
adc
inc
loope
add
jecxz
cmp
dec
ss
jb
pusha
neg
mov
pop
xchg
mov
ret
and
cmp
pop
mov
dec
fistps
test
ds
cwtl
fucomp
rcll
fisubrl
inc
stc
nop
add
sbbb
and
pop
adc
pushl
pop
insb
add
adc
scas
popa
mov
xchg
jno
pop
lret
loope
push
sub
dec
cs
sub
pusha
push
sar
cltd
test
sub
push
rcl
je
fwait
xor
popf
cmp
rcll
test
mov
push
adc
repz
mov
sahf
popa
scas
or
int3
jg
push
sarb
add
sbb
cmp
test
out
out
mov
xor
enter
mov
out
pushf
pusha
test
sub
lock
xchg
stos
pop
inc
push
xlat
sets
push
fidivs
lret
loope
xchg
shrb
imul
in
push
loop
cli
or
shl
or
addr16
mov
test
enter
add
mov
insl
jge
clc
sbb
mov
icebp
xchg
mov
sbb
push
mov
mov
adcl
into
enter
out
jno
mov
sub
or
mov
arpl
mov
xchg
sub
call
inc
push
enter
xchg
ljmp
xchg
mov
out
push
out
cmp
or
aas
dec
xchg
lcall
in
cmp
add
sub
lods
xchg
sbb
pop
jno
push
cmc
or
pop
adc
rolb
andl
in
test
adcb
pushf
cltd
leave
dec
lods
lret
movsb
cmp
xor
out
ja
icebp
xor
and
push
inc
jl
or
mov
out
lods
or
adc
lcall
scas
das
sbb
jbe
and
add
outsl
adc
sub
cmp
hlt
sub
add
mov
popf
es
sar
insb
xor
xor
pop
mov
and
cmp
xchg
gs
add
push
push
lods
xor
mov
push
xor
gs
test
daa
xchg
lods
inc
sub
daa
add
adc
dec
push
add
stos
and
pop
test
jbe
xchg
test
icebp
movsl
adc
insl
cmp
loope
add
xchg
mov
dec
and
cld
xchg
jp
cmp
lods
in
sti
cmp
arpl
test
aas
cmpsb
adc
mov
fidivs
adcl
inc
movsb
das
call
inc
lret
inc
mov
btc
xlat
jle
negl
test
inc
sbb
cmp
clc
xor
cmp
movsb
mulb
into
pop
outsb
arpl
aam
pop
xchg
scas
mov
jae
jle
into
aas
int
xchg
out
es
shll
mov
pushf
and
nop
jae
insb
jb
push
and
dec
push
daa
mov
cmp
or
mov
fdivrl
pop
add
mov
add
mov
mov
inc
push
lea
sub
xor
sbb
out
adc
lods
add
fidivl
das
fnstsw
sbb
push
rep
data16
push
cltd
push
pop
xlat
je
fisttpll
mov
mov
lea
jbe
mov
push
rclb
xor
into
jbe
jle
fnstsw
lahf
dec
insl
mov
fistpll
add
add
pushf
mov
mov
xor
and
sub
xchg
add
mov
xor
cltd
lods
xor
mov
mov
fsubs
mov
lock
xchg
push
cli
js
sub
pop
out
or
lret
push
decb
stos
jne
push
adc
popa
jecxz
inc
stos
xchg
je
push
dec
fsts
pusha
adc
negl
jbe
xor
xchg
cs
stos
jge
popf
ffreep
pop
mov
fiaddl
into
jno
test
cmp
lcall
call
push
scas
add
mov
sbb
imul
fwait
les
push
into
jne
mov
cld
lods
mov
sub
xor
push
inc
scas
dec
hlt
xchg
add
leave
adc
push
insb
pushf
mov
mov
es
mov
fucomp
sub
push
out
xchg
add
sub
push
mov
loope
fwait
xchg
push
cmp
xor
push
xor
je
scas
gs
scas
lods
push
xchg
pop
iret
sbbl
jnp
xchg
lahf
push
repz
and
adc
shll
pop
push
mov
inc
sub
pop
fisubs
mov
sub
leave
jo
aam
imul
daa
mov
cmp
dec
add
or
das
aad
pusha
adc
xor
mov
repz
push
or
fisubrl
nop
arpl
and
xchg
mov
xchg
jecxz
daa
cwtl
mov
mov
rcrb
pop
icebp
sbb
es
or
xorl
repnz
adc
xchg
cmp
pop
sbbb
adc
xchg
aaa
cmp
push
push
incb
inc
pop
xor
fdiv
inc
pop
sub
mov
jbe
xchg
leave
pusha
jp
ljmp
jns
cmp
push
cmc
ud2
es
test
cmp
xchg
add
xchg
sbb
add
imulb
stc
popf
movsb
mov
data16
daa
aaa
or
inc
pop
in
js
nop
push
ss
lock
fldl
js
out
lock
mov
or
pop
ds
xor
jmp
hlt
pop
mov
mov
ljmp
push
lods
lahf
subl
dec
arpl
jae
sub
test
mov
push
test
push
mov
jno
sub
or
adc
repnz
adc
popl
test
and
jmp
mov
jl
add
xor
cmp
pop
xchg
push
sub
hlt
mov
mov
jg
iret
mov
leave
pushl
outsb
mov
or
in
cmp
data16
sahf
jnp
sub
add
dec
jae
adc
sbb
pop
ret
rorb
dec
lods
cmpb
or
jae
jge
mov
arpl
push
repnz
mov
leave
pusha
ds
inc
in
push
lea
call
fbstp
pop
cmpsl
hlt
lcall
in
push
and
xor
pop
mov
in
addr16
out
movsb
sub
cmc
sub
lods
dec
mov
or
hlt
dec
mov
mov
xchg
imul
sti
lods
outsb
icebp
or
jae
test
ljmp
mov
pop
imul
mov
fwait
pop
jmp
es
xchg
movsl
lret
test
pop
sbbb
rclb
mov
lods
cmp
bound
js
mov
jp
dec
outsl
sub
cmc
ss
dec
stc
stc
push
cmp
rol
fcmovu
mov
movsb
nop
clc
pop
movl
sti
sbb
inc
out
pop
xor
xor
cli
pushf
scas
out
mov
cmpsl
mov
aad
rcrb
push
outsl
ds
jb
fmul
adc
jno
add
jo
loop
int
stos
jmp
or
cli
sub
mov
cli
pop
loopne
shll
aad
adc
xchg
inc
push
push
push
sub
int
push
adc
out
push
fldl
dec
sub
daa
arpl
jo
adc
cs
push
pop
and
mov
mov
mov
out
fistl
rolb
test
cmp
mov
cmp
xor
in
fmuls
lahf
call
shll
mov
mov
aaa
push
arpl
xchg
push
mov
xchg
xor
icebp
xchg
aaa
stos
or
inc
jmp
in
mov
ret
pop
imul
pop
lods
jb
call
push
out
loope
xchg
sub
xorb
gs
mov
imul
ret
hlt
loop
pop
inc
adcl
inc
mov
sarl
leave
jnp
mov
out
jp
pop
add
adcl
push
sub
jle
ds
pop
mov
or
aaa
iret
cld
add
shlb
fiaddl
inc
rclb
xchg
cltd
ret
xor
dec
loop
push
fldl2e
js
icebp
cmpsl
adc
pop
or
fwait
cmp
or
rol
ja
pop
insl
jge
pop
jmp
adc
inc
and
and
shrb
push
adc
icebp
dec
cs
in
adc
dec
dec
in
ficomps
rol
pop
insl
add
sub
mov
stos
movsl
sti
adc
mov
incb
ret
pop
loopne
xchg
inc
icebp
into
sub
jae
lahf
negl
jp
fisubs
push
mov
push
fdivl
fidivs
scas
outsb
jge
xchg
xchg
add
sbb
das
pop
jecxz
dec
xor
adc
and
sub
adc
xor
jle
mov
into
or
mov
jle
add
or
shl
lret
or
mov
into
inc
out
push
mov
rclb
lea
add
lahf
cld
xchg
or
cwtl
mov
fs
int
in
loopne
adcl
pop
push
add
and
mov
gs
jo
pop
outsl
mov
hlt
int3
mov
pop
cmpsb
movsl
pop
fmul
adcb
sbb
add
and
out
jae
mov
mov
jae
movb
imul
cmp
hlt
stos
xchg
add
lods
sbbl
add
jb
daa
cmpsl
mov
sbb
xor
fmul
inc
push
push
nop
sbb
xor
add
xchg
stc
sbb
nop
or
scas
idivb
pop
jge
adc
jg
push
add
rcr
inc
sbb
jmp
ret
and
or
cmp
dec
dec
bound
cmp
jne
pop
or
sub
ljmp
int
repnz
fsubs
xor
mov
popf
sub
dec
push
popf
jnp
and
pop
fs
push
jl
mov
push
adc
inc
push
into
sbb
fsqrt
test
pusha
xchg
loopne
and
inc
or
push
cmpsl
xchg
adcb
lods
enter
add
movsb
sub
setp
cmpl
xchg
sub
mov
mov
iret
out
xchg
inc
sbb
ret
adc
call
and
inc
push
orb
sub
scas
xor
insb
jmp
pop
mov
add
lret
je
icebp
cmpsb
sbb
mov
cmpsl
clc
sti
cmp
xor
loop
adc
int3
inc
sbb
mov
scas
mov
mov
dec
mov
loopne
rcll
jecxz
jbe
inc
xor
xor
mov
jae
cmp
lods
test
mov
sbb
xchg
outsb
add
jbe
les
mov
ljmp
popa
adc
sbb
insl
rclb
add
lea
or
gs
sbb
dec
sbb
cmp
divb
xor
loope
or
pushf
dec
or
adc
xor
dec
inc
mov
dec
pop
jns
icebp
jle
lock
push
loopne
cmpsl
adc
mov
data16
push
shrl
xchg
subb
and
pushf
xor
inc
or
hlt
mov
xor
mov
or
mov
push
rol
jg
cwtl
addl
and
sub
in
pushf
pop
adc
int
fnstcw
mov
in
inc
push
ljmp
mov
insb
out
sbb
mov
fsub
add
out
andb
insb
sub
shlb
inc
loop
lcall
data16
add
push
add
sti
adc
stos
mov
out
test
lea
sbb
scas
pop
gs
insl
ficoml
mov
mov
mov
adc
xor
pushw
push
or
add
jl
push
mov
pop
sbb
inc
scas
jge,pt
cli
es
adc
repnz
mov
cli
popf
call
loopne
ret
cmpsb
push
mov
cld
add
cmpsl
dec
in
or
adc
pop
sbb
das
flds
pop
jns
adc
sahf
ss
daa
and
mov
push
mov
popf
data16
ds
sbb
and
jbe
cli
inc
cmp
in
xor
aam
push
push
xor
dec
jnp
iret
and
ds
mov
push
pusha
jmp
mov
subl
negb
mov
pop
adc
mul
push
mov
sbb
or
cmpb
sbb
xor
cmpsb
adc
jne
stc
inc
mov
xor
cmpsb
rorl
push
test
push
int3
mov
cltd
push
lods
popa
ret
mov
mov
fistps
movsl
add
insb
mov
sub
lods
dec
addr16
xchg
int
test
mov
fisubl
inc
dec
xchg
pop
dec
pop
mulb
les
or
cmp
test
xor
stc
dec
push
mov
sbb
je
jnp
jecxz
inc
pop
outsb
rcrb
jge
pop
ja
loope
inc
cwtl
lahf
imul
add
xchg
add
cld
or
cs
mov
jp
imul
stos
cmp
ljmp
and
jb
repnz
and
fldlg2
dec
enter
push
mov
sbb
sbb
imull
ss
fcomi
add
fidivs
push
or
or
test
dec
aaa
xchg
jbe
arpl
int3
out
pop
pop
jmp
pop
sbb
mov
mov
addr16
cmc
inc
inc
jl
xor
pop
cli
pusha
mov
sub
pop
insl
daa
movw
xchg
cmp
stc
fmuls
dec
incb
loop
aad
sub
out
inc
add
mov
pop
addl
xlat
jl
out
sbb
mov
clc
jns
pop
aaa
inc
stos
cli
and
enter
add
jecxz
push
lahf
mov
pop
xchg
mov
add
jecxz
jecxz
mov
cmp
stos
cli
outsb
jg
adc
insl
cwtl
andl
and
jl
je
ret
notl
lods
xor
js
and
or
das
pop
clc
cmpsl
lds
in
movsl
cmp
mov
and
or
pop
mov
cmpsl
outsl
push
sub
aas
rcr
clc
push
xor
inc
fcmovbe
jo
addb
das
inc
jno
jno
xor
xor
inc
loope
cld
sbbl
outsb
imul
bound
cs
jo
jne
sub
gs
cs
cwtl
movsb
lret
hlt
xchg
popf
mov
cmpsb
cmp
mov
repnz
pop
imul
inc
ret
in
push
repnz
fldenv
movsb
cmp
repz
gs
pop
rorl
add
jmp
mov
cwtl
and
push
sbb
ds
nop
stc
pop
sub
cltd
jecxz
or
fwait
daa
test
jl
rcrb
mov
xlat
clc
popl
fwait
sbbb
test
lcall
pop
repnz
adc
daa
bound
xchg
je
pop
jb
push
cmp
xchg
sbb
mov
mov
mov
dec
idivb
push
daa
mov
inc
imul
les
andl
jl
mov
test
scas
sahf
test
dec
adc
inc
push
dec
rol
shrb
and
cmp
stos
vpshufd
scas
mov
js
aad
or
rorl
notl
xor
les
in
cmp
pop
rcrb
adc
cmp
pop
fwait
loope
sti
loop
push
loope
and
push
xor
or
mov
push
cmpsl
pop
push
inc
int
rorl
test
inc
iret
dec
sbb
popf
or
fs
mov
enter
adc
outsl
aaa
cmpb
mov
or
and
sbb
mov
push
lods
and
imul
insl
into
gs
leave
or
mov
fbld
pop
inc
ds
jbe
fs
and
mov
add
pop
test
push
mov
out
in
std
dec
ret
pop
push
xchg
notb
cld
loope
scas
cltd
jae
inc
iret
shl
icebp
fsubl
mov
dec
sbb
push
dec
outsb
cli
cmp
je
shll
inc
nop
lods
fcmovnu
pop
mov
ror
dec
add
xor
mov
adc
mov
cmp
xchg
shrl
ret
out
sub
push
or
in
aaa
mov
mov
mov
sub
or
ja,pn
pop
xacquire
cmp
mov
push
lcall
sti
lods
aad
adc
cmpb
cmp
or
shll
inc
repnz
mov
mov
adc
mov
and
xor
shll
bound
adc
insb
jl
sbb
mov
mov
pushf
sbbl
lahf
sub
sarl
push
jge
xchg
outsb
xorl
jne
sub
mov
decl
inc
call
mov
mov
inc
fwait
popa
fdiv
daa
jp
xchg
sahf
adc
inc
in
lock
pop
jae
pop
or
sbbb
inc
push
roll
pop
fs
jecxz
int
sbb
pop
out
sbbb
jno
lock
cmpsl
add
xor
xor
pop
sub
pusha
adc
filds
mov
sub
push
sub
mov
mov
or
inc
fs
jg
xor
popf
cltd
pusha
lcall
adc
int
icebp
adc
push
std
pop
imul
cmp
lods
orb
sub
or
cld
aaa
mov
add
in
add
test
adc
repz
cmp
or
inc
fdiv
dec
sub
std
jo
enter
imul
pop
or
scas
push
sarl
call
adc
xchg
mov
jmp
xchg
sub
mov
cs
and
aaa
mov
ficoms
sub
mov
mov
loop
nop
sub
int3
push
xchg
dec
cwtl
icebp
jecxz
stos
push
cmp
lock
fsubrl
cmpb
dec
xchg
adc
pusha
sub
jno
es
add
loope
inc
pop
loop
mov
jmp
daa
add
bnd
jno
sbb
mov
mov
push
aam
test
mov
or
lahf
mov
pop
cmp
jbe
clc
sub
adc
scas
leave
jg
push
add
sbbl
das
and
jl
push
cmpsb
popf
lds
sbb
sub
pop
sahf
pop
jae
dec
lret
ret
leave
adc
mov
stc
dec
jecxz
fistps
mov
cmc
out
testl
jae
cmc
out
insl
nop
cld
int
xchg
sbb
and
into
ljmp
dec
cmp
popf
sub
cmc
movsl
icebp
cmp
xchg
nop
stos
fdivr
mov
jns
jb
jo
push
adc
stos
insl
lea
inc
cmp
push
or
jne
sbb
pop
push
mov
push
jnp
pop
xchg
cmp
fdiv
adc
mov
jl
mov
rcrb
jl
divl
cmpsl
scas
jle
mov
push
sub
adc
add
xor
aaa
pusha
jl
test
sub
icebp
insb
fwait
mov
mov
cmp
mov
xor
popa
sbb
pop
push
std
pop
orl
jbe
mov
inc
push
loop
xor
mov
adc
fs
cld
push
fidivrs
iret
and
xor
adc
es
fbld
mov
mov
adc
xor
pop
mov
inc
lret
jae
xchg
mov
cmpsb
pushf
xor
pop
mov
inc
and
nop
stos
add
fstpt
repnz
push
xchg
cmp
dec
mov
dec
xor
xchg
negb
shrb
aas
sbb
cmp
dec
rep
xor
cltd
insb
cmpsl
loope
xchg
cmp
shlb
adc
lahf
stos
out
insl
incl
aam
rorb
or
xchg
xor
push
mov
cmp
sbb
pop
dec
aad
loop
add
movsl
jb
es
pop
loope
pop
cmp
adc
mov
sahf
mov
in
xchg
ss
dec
in
vpaddsw
daa
inc
addr16
scas
inc
loop
fsubr
cmp
push
mov
jmp
rcrl
add
ja
test
and
movsb
adc
pusha
adc
incl
mov
add
cmc
mov
in
fwait
roll
push
jmp
rcr
jo
add
std
in
mov
hlt
cmpb
xor
push
test
jmp
cmp
jmp
jnp
frstor
or
and
int3
add
insl
add
scas
outsl
inc
cwtl
pushw
mov
add
or
popa
popa
aaa
xchg
push
mov
stos
repz
inc
jmp
insb
out
movsb
inc
xchg
xchg
mov
popa
mov
sbb
adc
sbb
push
dec
rol
inc
lea
insb
insl
and
insb
xor
pop
insb
outsb
test
or
mov
lret
insb
je
sbb
or
and
inc
in
xchg
sarb
and
pop
mov
inc
stc
inc
and
push
movsb
cmpl
andl
lea
adc
xchg
xor
add
les
leave
jecxz
inc
push
je
xchg
es
xchg
jo
sub
jl
cmc
mov
xlat
sti
test
mov
add
mov
movsb
mov
hlt
cmpsl
frstor
mov
xor
or
pusha
sub
int3
arpl
pop
cmpsl
out
addr16
mov
mov
or
push
loop,pt
push
pop
or
fmull
push
movsl
xlat
lods
shlb
xchg
mov
loop
sahf
pushf
inc
or
scas
test
imul
rcr
add
lds
pop
mov
jns
test
data16
jns
add
mov
sub
fwait
xor
fcmovnb
rolb
push
or
ljmp
mov
or
mov
sub
nop
dec
fs
enter
mov
out
mov
test
mov
pop
sahf
mov
in
mov
shrl
in
jae
adc
jne
adc
and
xchg
dec
mov
jns
inc
fsubr
cltd
shrb
mov
jmp
adc
sbb
stc
imul
sbb
popa
loopne
das
fdiv
in
xchg
in
pop
repnz
mov
subl
cmp
lahf
lcall
pop
pop
or
rcrb
mov
cmp
test
lods
jno
leave
or
dec
sub
jo
rcl
repnz
repnz
or
int
imul
stc
or
imul
mov
pushf
flds
add
out
jecxz
xchg
dec
cmc
stc
inc
cmp
insl
inc
popf
lods
cmp
adc
mov
cwtl
addr16
scas
mov
arpl
fs
adc
in
repnz
ss
cmp
jno
pop
jge
push
dec
shlb
stos
lods
lods
out
outsb
fwait
cmpsl
lahf
rolb
cwtl
lock
jl
inc
push
fcmovnb
xor
lahf
repz
push
dec
or
xchg
daa
outsl
repz
sbb
mov
mov
shlb
mov
xor
movsb
inc
fisubs
pop
fcmovne
int
out
arpl
mov
mov
fldl
movsb
call
pop
inc
mov
sti
ja
mov
xor
push
cwtl
filds
lcall
sbb
and
lret
xor
loop
push
inc
subl
mov
aam
jp
das
inc
jp
scas
and
push
mov
fdivrs
shl
mov
nop
push
fsubr
mov
fistpll
cmp
mov
xchg
xor
mov
mov
mov
mov
ds
sub
call
rcrl
out
cmp
pusha
cmp
push
adc
nop
jnp
or
cltd
test
clc
enter
sbb
inc
or
out
and
inc
dec
sahf
clc
mov
xor
add
je
insb
stos
dec
iret
cmp
xor
push
pushf
xor
mov
jo
out
push
lods
xchg
cmp
icebp
cmp
mov
lahf
adc
mov
sub
adc
not
mov
inc
ja
shll
inc
popf
and
ljmp
adc
cmp
insl
adc
stos
mov
cld
lcall
push
mov
stos
push
call
or
and
dec
and
enter
jle
mov
fidivl
jg
dec
push
in
cmp
mov
inc
cmpsb
repnz
mov
lret
fnstsw
test
enter
sub
lahf
jno
cmc
shrb
mov
je
sarb
push
jno
mov
jne
xchg
adc
into
iret
gs
push
push
nop
je
jle
jb
outsb
inc
mov
pop
fldl
adc
hlt
insl
add
inc
ss
pop
in
push
into
jno
mov
test
test
movsl
mov
fbld
xchg
stos
mov
or
andb
mov
inc
jmp
jo
and
addr16
xchg
insb
sub
or
or
pop
movsb
cltd
addr16
lahf
jbe
cmp
push
lods
in
add
push
adc
push
xor
sti
data16
ja
mov
out
pop
mov
push
aam
mov
sub
sub
movsb
leave
js
jle
test
enter
sbb
repnz
sub
ret
cmp
xor
dec
repz
dec
push
out
mov
in
enter
cmp
fsubrl
int
jecxz
mov
dec
cmp
aad
dec
mov
lea
sub
fs
cld
dec
and
in
add
cmc
jmp
inc
cwtl
xor
pop
cmpsb
and
cmpsb
mov
divb
ja
inc
sbb
xchg
cmp
cmp
shlb
mov
xchg
lret
es
fwait
sbb
mov
rcr
out
xchg
fstl
lods
mov
popf
push
add
sti
ret
lds
fdivl
test
out
test
movl
mov
adc
sahf
pop
dec
mov
mov
daa
mov
pusha
pop
jo
jle
mov
xchg
xchg
lods
add
loop
enter
fwait
movsb
pop
dec
imul
mov
sub
fsubs
sbbb
jg
loope
cmpsb
les
stos
jbe
or
sbb
lret
stc
aad
lret
std
icebp
xor
sbb
bound
lds
xchg
lods
mov
xchg
inc
jge
in
mov
je
or
pop
and
shr
jmp
push
mov
dec
inc
out
xchg
dec
mov
xchg
jae
fldenv
mov
mov
lods
inc
popa
add
jb
stos
lret
xlat
cltd
sahf
cmp
es
cmp
out
pop
data16
add
into
pop
jle
popf
jo
or
sub
mov
loopne
jge
jl
pop
xor
aaa
jb
movsb
adc
into
in
pop
movsl
pusha
fs
push
test
or
das
jo
inc
inc
lods
out
mov
sbbl
cli
dec
bound
cwtl
dec
shll
xchg
sub
aad
jecxz
andb
cmp
cmp
stos
outsb
add
adc
cmp
insb
lcall
jle
dec
ficoml
insb
jg
cld
inc
mov
loopne
mov
aam
and
push
in
cmc
xor
out
adc
xchg
jbe
arpl
and
xchg
sarl
je
push
mov
jge
sbb
shrl
inc
ror
mov
inc
mov
lods
lock
inc
mov
mov
inc
scas
sub
shr
in
inc
xchg
mov
adc
add
cmp
adc
jge
aad
or
add
rcll
rorb
lock
mov
fistpl
or
adc
and
push
mov
lret
divl
sbb
mov
sbb
sarl
sti
insb
out
add
jle
jmp
dec
adc
outsl
daa
push
adc
bound
imul
gs
daa
addr16
popf
jge
call
xchg
jo
in
cmovo
into
xchg
inc
cmp
jle
jmp
stc
add
cmc
pop
gs
ja
sti
jl
call
or
scas
adc
clc
dec
repz
dec
dec
cli
es
xor
lcall
in
xorl
dec
mov
daa
inc
and
fsubl
mov
mov
push
int
or
imul
or
xor
pop
mov
push
stos
adc
fs
mov
mov
ljmp
lock
ret
ja
out
mov
popa
leave
sub
lret
fsubr
test
xchg
loope
lcall
inc
std
cmp
mov
sbb
cmp
add
test
shlb
popa
jo
lock
mov
leave
add
jae
dec
out
mov
js
loope
insl
pop
mov
jne
cmpl
cmpsl
push
outsl
xchg
ja
mov
mull
js
fwait
pop
repnz
iret
sbb
add
popf
inc
sub
arpl
xchg
ret
cwtl
lret
jbe
jmp
mov
pop
pop
aas
push
fnstcw
in
stos
das
push
frstor
mov
inc
into
fdivl
out
adc
test
push
mov
and
xor
and
sbb
hlt
adc
loope
cmp
push
je
jbe
jns
fld
das
mov
fwait
insl
addb
pop
out
push
jmp
rclb
mov
mov
loopne
int
cmp
pop
mov
add
fisubl
xchg
nop
rorb
mov
fldcw
or
pop
jno
xchg
mov
mov
into
gs
outsb
popa
add
adc
sbb
adc
jl
iret
test
sbbb
push
jmp
ret
push
jno
js
or
stos
or
mov
adc
sub
push
js
aas
outsb
mov
xchg
sub
or
daa
push
lahf
fcmovnb
inc
divl
stos
or
mov
mov
ss
dec
out
cs
push
popf
add
xchg
jo
ret
sub
sbbl
push
das
dec
sub
mov
loop,pt
push
dec
iret
ret
jmp
jns
pop
xor
jle
fsubrl
and
mov
cmp
jb
aaa
mov
cld
inc
xor
jge
clc
jae
push
orl
movsb
leave
pusha
enter
mov
jge
clc
xor
or
stos
mov
mov
pop
test
icebp
repnz
mov
pushf
pusha
xorl
push
pop
arpl
or
and
pusha
test
sbb
outsb
aad
mov
fcom
test
scas
push
jo
mov
rolb
push
fstl
add
push
push
xor
fldt
and
xor
jnp
or
jg
mov
insb
add
mov
sbb
in
andb
js
ja
push
cltd
dec
loope
xchg
jbe
loope
jmp
add
sarb
fmulp
push
xchg
mov
or
jnp
adc
jb
sbb
and
addb
popa
xor
popf
pop
cmpsl
sbb
sub
xchg
ret
sub
lret
ja
and
fsts
add
cmp
jno
cltd
cmp
sub
push
in
inc
or
out
cltd
mov
enter
or
mov
sarl
out
fs
sti
test
cmp
mov
rcrb
inc
fiadds
or
std
inc
push
sbb
jnp
test
mov
repnz
stos
ds
xchg
mov
adc
sbb
imul
fcompl
push
jg
ds
insl
insb
ret
scas
mov
shl
dec
pop
movsb
cmc
xor
jbe
jnp
lret
imul
and
stc
ja
fsubrs
sub
mov
jmp
cwtl
sub
sbb
addr16
out
sub
mov
mov
rol
icebp
and
test
adc
or
daa
jne
jg
shrb
inc
dec
or
stos
sub
xchg
lcall
push
cmp
ja
ret
push
faddl
jo
in
xor
out
push
dec
mov
inc
dec
inc
xor
orb
fidivrs
dec
dec
xchg
sbb
imul
mov
jnp
push
and
std
pop
fwait
stos
push
shrl
outsb
loop
lods
shrl
inc
dec
pop
jmp
f2xm1
inc
out
out
loope
inc
rcrl
sbb
fld
cmp
mov
pop
push
test
aas
mov
pop
loop
xor
cmp
scas
cli
or
cmp
ss
rol
out
add
out
cmp
fsubl
hlt
dec
or
dec
icebp
cs
cmpsb
sub
mov
fcomi
inc
push
xlat
scas
mov
jp
fwait
decl
int
cmc
adc
and
pop
jb
add
push
sbb
push
mov
add
insl
xchg
hlt
jae
nop
sahf
daa
ljmp
push
lods
clc
sub
xor
shll
sub
jnp
or
pop
mov
in
lret
xlat
sbb
call
jno
loop
and
fdiv
push
shrb
stos
ret
mov
sarl
fldcw
popa
pop
loope
sbb
ja
pop
sub
adcb
cmp
test
ljmp
xchg
push
dec
mov
jl
pop
cli
push
movsb
jo
aad
jne
sbbb
mov
mov
imul
fbld
cmp
popf
mov
xor
jp
mov
inc
jnp
add
cld
shlb
mov
rcll
movsl
jl
shrl
sar
pop
add
xchg
pop
lods
fcmovnb
inc
mov
pop
mov
inc
jae
xchg
inc
ljmp
pop
enter
cmp
dec
cmp
enter
jns
int
scas
inc
fwait
adc
fildll
aaa
mov
fwait
pop
hlt
orl
fmull
insb
icebp
and
mov
sbb
imul
xor
mov
xor
xor
xchg
inc
xchg
inc
lret
test
jl
int
cs
cmp
fsubrs
mov
pop
shrb
xor
push
fdiv
out
mov
out
xor
dec
dec
lds
pushf
mov
dec
sbb
jnp
popf
cmpsl
mov
loopne
add
cli
cltd
fnsave
insw
cli
push
or
fnstenv
adc
aad
cs
dec
jne
jmp
mov
sbb
mov
push
daa
fnsave
je
inc
and
xchg
pop
les
pop
sub
enter
enter
testl
cmp
lds
rcl
inc
mov
jle
sub
mov
fnstcw
dec
movsl
out
jbe
in
xchg
pop
pop
popf
add
mov
mov
jl
aad
dec
cmp
bound
add
loopne
adc
dec
push
fdivrs
push
imul
cmp
pusha
pop
lds
and
ds
ja
pop
cs
popa
int
push
pusha
mov
or
adc
loope
dec
push
aas
dec
pop
in
adcb
mov
loopne
pop
mov
jl
or
out
loop
push
cltd
shlb
aaa
lods
fstl
mov
xchg
cli
sbb
in
inc
es
xor
clc
into
inc
xchg
jp
out
data16
sbb
mov
js
int3
daa
jmp
pop
in
dec
add
sub
sbb
mov
ret
out
loop
movsb
xchg
sbb
sahf
sub
aas
pop
dec
and
out
aas
push
sbb
xchg
sub
out
sub
mov
add
sbb
mov
pop
ljmp
mov
scas
test
call
iret
aad
test
adc
and
xor
repz
outsl
mov
mov
push
mov
jnp
clc
scas
fdiv
mov
fdivrl
sbb
js
lods
mov
or
mov
push
imul
aam
jno
pop
dec
loope
fildll
test
ljmp
xchg
lahf
pusha
movb
adc
mov
data16
mov
dec
out
sub
in
mov
test
nop
test
cmp
jmp
mov
mov
repnz
or
jge
adc
ss
lahf
xchg
clc
inc
inc
sub
dec
inc
test
lret
cld
out
popf
int3
lods
and
mov
popa
fdivrl
ffreep
jp
and
int3
pop
sbb
leave
dec
inc
xor
stos
shrl
aad
lcall
mov
or
arpl
lret
lret
int3
aaa
add
in
std
inc
xor
cmpl
js
es
push
mov
rcrl
movsl
jae
sbb
sub
nop
je
in
jb
mov
aad
cmp
lods
out
scas
iret
lcall
push
adc
sub
in
mov
rcl
jo
testl
repnz
jo
push
cli
es
mov
mov
mov
fisubrs
jns
ret
repz
push
pop
cltd
push
mov
jp
sub
mov
sub
cli
jmp
xchg
cwtl
incl
test
push
mov
pop
add
mov
insl
mov
cmpsl
out
cmp
xchg
push
pop
mov
adc
pop
sti
mov
inc
jg
sbb
rclb
pop
mov
cmp
imul
pop
mov
mov
sub
and
add
arpl
mov
mov
ret
out
in
add
pushf
pop
in
int
mov
add
shrb
xor
sbb
xor
inc
cli
inc
adc
in
loop
rclb
insb
lods
das
jbe
jl
icebp
pop
mov
call
dec
dec
jecxz
push
mov
jno
aaa
jae
leave
dec
pop
dec
jecxz
repz
daa
mov
clc
or
sbb
or
arpl
add
adc
mov
out
push
inc
add
pop
inc
push
ss
loopne
lahf
lcall
out
lea
xor
adc
lds
flds
pushf
push
sbb
sbb
bnd
cmp
jno
fldenv
inc
xor
sti
es
mov
test
jecxz
add
je
arpl
mov
outsb
aad
fbstp
xchg
xlat
mov
lods
and
pop
mov
pop
cmp
xchg
bound
push
in
mov
data16
pop
int
rorl
outsl
pushf
mov
add
stc
repz
mov
sbb
aam
popf
pop
test
mov
mov
test
jns
js
lret
adc
inc
cmpsl
inc
push
mov
and
pop
out
gs
and
inc
aad
add
add
sub
ret
loopne
jg
lock
fsubrl
cmpsb
sarl
pop
jnp
cmp
test
sub
iret
xchg
xor
push
pushf
setbe
jmp
jo
popf
lock
xchg
in
lea
sbbl
mov
inc
bound
sbb
xor
pop
lods
mov
cmp
in
inc
xchg
arpl
fucom
imul
cmp
sbb
cli
xor
and
lea
icebp
mov
push
js
or
jp
push
and
adc
pushf
jg
mov
mov
cltd
test
push
sbb
push
jp
fwait
sub
sbb
in
jp
test
or
pop
cmpsl
jns
xor
icebp
jl
iret
stos
out
lock
mov
out
lea
add
cmp
sbb
inc
rcrl
and
inc
xchg
jb
inc
stc
adc
jmp
mov
mov
jbe
and
lret
sub
adc
xlat
inc
and
fdivl
inc
fiaddl
adc
xchg
xlat
orb
jbe
jecxz
push
sub
hlt
sub
pushl
push
shrl
rcrb
out
sbb
adc
inc
sbb
loope
fs
aas
pop
add
nop
dec
gs
cmp
insl
xlat
sahf
lods
mov
and
xor
andl
sub
adcb
add
enter
pop
bnd
fs
or
inc
imul
loop
out
test
into
pop
jnp
dec
loopne
inc
mov
incl
push
xchg
aam
testl
test
xchg
fsts
fiadds
add
loope
aas
iret
dec
test
test
cs
mov
or
and
push
sbb
fcmovnbe
bound
pop
fwait
xchg
mov
loopne
loop
xchg
xor
or
mov
je
aaa
call
fistpll
mov
push
scas
xor
icebp
push
inc
cmp
push
pop
adc
mov
sub
push
addr16
or
cmp
xlat
lods
ljmp
lock
pop
stc
std
dec
test
push
lea
adc
and
rorl
insb
push
jns,pt
push
adc
test
pop
inc
cltd
aas
rcrl
aaa
sub
call
jns
repnz
sbb
gs
movsb
stos
scas
enter
sub
jmp
push
inc
push
mov
out
push
cltd
dec
mov
icebp
bnd
add
jae
scas
pop
rcrl
mov
daa
jo
jo
mov
sbb
xchg
ret
add
add
adc
pushf
pop
push
in
test
jnp
ja
mov
inc
jle
cli
gs
cwtl
pop
cmc
leave
cmc
pop
jae
inc
jl
stc
clc
inc
adc
scas
cmpsb
cmp
clc
fsubrp
xor
mov
clc
mov
ja
fisubrl
push
lret
jb
popf
xchg
adc
mov
bound
mov
inc
roll
fmull
mov
cmp
stos
gs
pushf
imul
dec
or
xor
rol
idivl
enter
and
sub
jo
arpl
shlb
out
mov
iret
and
popa
sbb
sub
sahf
inc
icebp
and
pop
lret
stos
pop
repnz
pop
push
scas
mov
mov
push
in
dec
aad
mov
inc
cmpsl
pop
mov
sbb
sbb
jg
fildll
outsb
mov
xor
xchg
sub
lcall
adc
inc
cmp
xor
xchg
shl
mov
loope
jb
cmc
mov
outsl
add
test
and
add
jae
sub
add
iret
int3
fcoml
icebp
pop
imul
je
data16
mov
mov
shrb
movsb
xchg
js
roll
adc
mov
movsl
mov
mov
pop
push
push
or
jbe
push
sbb
addr16
xor
inc
mov
in
int
pop
jb
dec
adc
mov
arpl
lahf
fidivs
arpl
repnz
jno
xor
jnp
enter
outsl
cmp
mov
rol
fabs
out
add
mov
std
mov
gs
fadd
in
sbb
cmp
push
push
add
jne
mov
in
push
sub
imul
stos
sub
inc
pop
push
or
jbe
push
push
pop
xor
arpl
push
filds
iret
shlb
inc
inc
pusha
add
pop
sbb
bound
out
adc
ja
stos
dec
push
add
push
in
js
push
jmp
sahf
mov
dec
mull
ret
pushw
sbb
xor
lods
ja
stc
cmpsb
jbe
xor
mov
imul
loopne
sbb
pushf
sbb
jb
mov
add
xlat
mov
test
jp
push
outsl
push
mov
rcll
arpl
jg
cmp
push
mov
iret
cmp
xchg
push
fmuls
pop
or
pop
fcmove
xchg
xor
cmp
push
stos
in
add
ja
cmp
sbb
lods
je
movsl
jp
push
mov
jnp
or
push
lahf
mov
or
xlat
shlb
dec
gs
notl
cmp
cmp
into
mov
pushf
sub
cli
pop
xchg
cwtl
orl
shrl
fwait
loop
xor
xchg
mov
xlat
mov
ds
out
or
adc
fiaddl
push
subl
pop
sbb
xchg
mov
mov
lcall
and
xchg
in
aas
fstpl
cld
ds
sbbb
sarb
lret
jmp
sbbl
pop
dec
xchg
aad
jge
stc
mov
mov
hlt
fadds
ja
and
in
xor
push
or
cld
cld
cmpsb
fisubrs
inc
xlat
sbb
pop
ss
cmp
les
sbb
into
test
push
repz
jg
std
xor
lcall
lods
sbb
std
jmp
in
lret
sub
mov
xlat
mov
xchg
mov
cmp
fld1
lahf
cmpl
repnz
mov
mov
inc
outsb
mov
cmp
cmpsl
or
pop
xlat
and
or
and
in
gs
ljmp
ficompl
add
fwait
adcb
movsb
fcomp
divb
dec
cmp
mov
jbe
lea
mov
xchg
fldl2t
cwtl
mov
xchg
inc
mov
or
or
das
ret
stc
test
sub
movb
repnz
mov
xor
jne
add
out
pusha
aaa
push
push
stos
push
push
out
xchg
andb
jne
xchg
iret
les
div
sbb
lock
dec
dec
jno
lahf
pop
mov
aas
add
and
pop
fstl
stos
dec
jle
adc
out
mov
jmp
adc
mov
js
push
xlat
rcrb
pop
add
sub
test
f2xm1
jecxz
cmp
jl
or
mov
pop
lods
call
xchg
inc
aas
in
jno
sub
or
adc
jbe
mov
xchg
mov
data16
imul
push
jmp
jbe
pop
test
gs
xchg
scas
xorb
enter
and
icebp
xchg
inc
cs
repz
outsb
jb
and
rcrb
ret
shll
jecxz
jbe
mov
cld
xchg
push
adc
popa
and
mov
push
js
push
enter
pop
mov
cmp
mov
pop
cmp
aad
push
mov
cmp
dec
xor
push
push
fstp
jne
fisubs
std
and
sub
lods
cmpsb
dec
mov
jecxz
pusha
push
fdivrl
jmp
not
or
and
pop
pushf
mov
repz
fbld
cmpsb
mov
movsb
mov
out
mulb
mov
mov
js
inc
lret
jnp
mov
ret
jno
mov
mov
adc
jns
mov
adc
in
inc
pop
loopne
add
ss
cltd
sbb
jnp
xchg
das
inc
sbb
mov
movsl
bound
ficompl
popf
pop
add
sti
stc
pop
jp
jno
incl
jbe
cwtl
push
aas
popf
dec
dec
aaa
pushf
dec
movsl
loope
jb
push
out
sti
ja
arpl
add
hlt
notb
cmpsl
daa
pop
nop
mov
jno
and
cwtl
sub
mov
fnstsw
jecxz
lods
sub
mov
adc
mov
jge
push
add
aaa
andl
pushf
test
dec
fs
and
test
jo
repz
loop
cmp
mov
pop
adc
jle
mov
andl
stos
xlat
xchg
pop
cld
mov
negl
dec
mov
fwait
mov
push
ds
scas
ja
cmp
inc
add
push
mov
arpl
dec
rolb
mov
and
dec
or
jne
loopne
dec
stos
inc
fcomps
mov
pop
bnd
push
addr16
jns
out
test
outsl
pop
push
icebp
add
bound
insb
fwait
ss
mov
pop
in
push
or
mov
repz
mov
push
adc
and
int
clc
jg
outsb
add
fcoml
push
cmc
dec
and
push
cld
mov
and
stos
hlt
shll
test
pop
push
pop
icebp
adc
cmc
mov
js
pop
or
outsb
adc
push
fmuls
sub
fs
out
notl
sub
xchg
jnp
ret
pushf
scas
out
jecxz
xor
cmp
and
xchg
out
jbe
sbbl
lock
mov
mov
push
sbbb
push
sbb
add
repnz
add
mov
inc
in
lcall
sub
jnp
pop
imulb
jo
ljmp
dec
test
jecxz
aas
lcall
add
pusha
mov
fcmovnbe
lods
leave
sub
shll
cmp
pop
add
adc
icebp
add
mov
jge
dec
jmp
adc
aas
pushf
mov
test
jl
sub
adc
pop
or
sub
rolb
pop
dec
out
fldl2t
jmp
test
push
lock
lcall
sub
ret
and
adc
lds
and
cmc
mov
and
lods
test
daa
mov
cwtl
sub
subb
mov
sbb
daa
add
popl
and
notl
dec
pop
mov
xchg
cmp
pop
adc
mov
xorl
mov
mov
sbb
mov
mov
loopne
inc
pushf
enter
pop
mov
cmpb
lret
add
fsubrs
loope
mov
and
sub
sahf
rcrb
add
mov
or
cmc
xchg
aam
sbb
scas
push
mov
jg
xchg
adc
je
adc
js
add
fcmovne
lret
mov
fsubr
inc
sbb
stos
add
popf
movsl
cli
inc
dec
jo
mov
sub
sahf
shl
dec
mov
bound
inc
cmp
nop
clc
mov
insb
sub
in
add
lock
aad
in
lea
adc
add
out
mov
test
test
mov
insb
pop
inc
fneni(8087
mov
cmp
mov
xchg
nop
mov
mov
ja
mov
dec
push
ja
push
lds
test
decl
out
sti
arpl
inc
scas
push
or
out
ja
stc
je
sbb
out
jae
ja
xor
jno
inc
outsl
jbe
test
mov
arpl
adc
outsl
outsl
jge
xchg
dec
xor
or
jecxz
dec
lcall
mov
insl
inc
clc
jp
lea
sbb
or
pop
jecxz
aas
or
dec
loope
adc
gs
pop
mov
lods
jns
in
push
sbb
xor
xchg
loope
int3
dec
add
lds
mov
cld
sbbb
jbe
add
dec
xchg
fldl2t
xor
xchg
add
das
les
cmp
xor
into
into
sub
mov
jne
enter
fsubrp
daa
jno
loope
lock
movsl
cmpsb
add
iret
adc
lea
add
and
iret
data16
clc
int3
fildll
je
and
lods
sti
out
gs
push
dec
pop
mov
lods
mov
or
mov
jge
lds
dec
insl
aas
mov
pop
cwtl
cmp
pop
mov
in
stc
pop
jge
sbb
mov
shll
bound
mov
sbb
adc
popa
mov
imul
adc
xor
and
jb
jmp
je
jmp
inc
fsubl
push
loope
stos
adc
mov
jno
cmp
call
inc
stos
inc
inc
lret
aam
cwtl
sbbl
pop
push
dec
in
cwtl
hlt
and
xor
jne
jno
add
iret
jnp
mov
loope
fnstenv
inc
cs
mov
cwtl
sbb
sti
scas
mov
mov
daa
add
sti
jle
out
push
sub
mov
inc
into
mov
add
pop
xchg
stc
nop
add
inc
sbbl
add
lea
mov
push
repz
lcall
cmc
and
add
bound
adc
inc
out
inc
cli
das
add
push
dec
ss
test
ss
hlt
or
cmp
pop
and
xchg
lea
sar
adc
jp
orb
adcb
out
jns
and
pop
jo
add
jp
aaa
push
mov
cmp
xchg
mov
cmp
rolb
mov
sub
cs
mov
pop
sbb
sub
or
xlat
jmp
sub
icebp
sub
repnz
dec
cmpsl
or
cmp
pandn
jle
out
push
loop
jns
popa
and
cmp
out
int3
aam
pop
cld
pop
shlb
sahf
lock
add
jns
push
into
or
aaa
call
fs
sub
sub
call
xor
push
popf
xor
bound
cld
sahf
push
in
rcrb
dec
xchg
int3
add
in
sbb
loope
cmp
insb
aas
push
inc
pop
push
mov
xor
movsb
mov
add
lds
dec
lahf
push
xchg
call
mov
rorl
gs
mov
les
int
stos
jecxz
shll
xchg
mov
or
xor
push
clc
call
sbb
xchg
mov
sbb
push
dec
in
clc
imul
add
cmp
push
aas
add
xchg
aas
dec
xor
cltd
aam
sti
jb
push
cltd
and
into
enter
sbbl
outsl
stos
mov
aaa
into
int3
lds
pop
push
push
xlat
shrl
mov
pop
test
leave
notb
adc
into
xsha256
cmpsb
xchg
add
mov
int3
adc
push
movsb
inc
lods
inc
sti
inc
loope
inc
sbb
in
ficoms
pop
sbb
ficoml
mov
cmp
insb
adc
cmp
jecxz
inc
sbb
sti
xor
xchg
add
push
fsubs
mov
loopne
imul
ror
mov
scas
out
testb
jbe
fs
cli
xchg
rclb
cmpsl
movsl
mov
testl
push
icebp
inc
mov
adc
mov
cmp
push
lods
cmp
fcmove
adcb
fiadds
xchg
xchg
or
sbb
mov
add
insl
sub
and
stc
xor
xor
ds
and
mov
addr16
push
adc
dec
jne
lock
imul
in
xchg
in
addl
and
fadd
je
mov
push
mov
mov
fnsave
adc
jle
nop
mov
imul
lods
hlt
out
adc
mov
je
fs
push
sub
cmpsl
cs
scas
xor
loop
movsl
icebp
sub
mov
mov
push
fnstsw
mov
aad
dec
sti
push
mov
or
xorb
add
mov
xor
clc
aas
fcoms
cmpsl
mov
push
jle
xor
and
sub
mov
sbbl
fnop
inc
test
out
inc
sarl
addl
lret
pop
lret
add
inc
and
mov
add
dec
push
xor
jecxz
mov
xchg
rclb
icebp
imul
scas
divl
sbb
mov
mov
notl
ret
stos
add
sub
mov
shll
add
shrb
xor
pop
xchg
push
xlat
aad
sub
shl
push
insl
jle
mov
adc
test
and
inc
mov
lret
stc
xor
imul
cmp
xchg
jmp
fmuls
mov
mov
lods
push
imul
cmpl
push
out
outsl
inc
mov
cltd
lahf
add
popf
shrl
add
subl
divl
ret
in
and
je
cmp
mov
pop
stos
mov
inc
and
call
fcoms
mov
mov
sub
pop
mov
movsl
ss
add
sbb
mov
inc
mov
add
int3
mov
or
mov
xchg
daa
xchg
cmpsb
mov
sbb
push
sbb
jae
andb
jl
int
adc
pop
push
daa
push
popf
and
dec
xor
xchg
incl
aad
dec
sub
sbb
int3
pushf
jb
into
jmp
dec
pop
inc
in
data16
test
cmpsb
out
push
out
sahf
dec
sbb
shrl
add
xor
xchg
sub
test
test
sub
fiadds
inc
rorl
xchg
pop
inc
mov
pop
aam
adc
push
mov
loopne
imul
add
and
jb
sbb
in
pop
lcall
dec
loop
jle
or
mov
loop
jge
add
clc
or
mov
loopne
nop
stos
incb
cld
jb
and
push
es
add
xchg
out
test
add
pop
cmp
add
stos
push
pop
orb
push
or
cmpsb
cmp
bound
pop
pop
pop
aad
rolb
sub
bound
outsl
ficoms
mov
or
jp
ja
mov
fidivs
mov
lret
dec
dec
into
sbb
gs
outsl
cmp
dec
mov
rorb
lods
push
in
and
inc
jae
jbe
lea
xchg
pop
mov
jmp
add
shll
fisttps
stos
fs
aaa
pop
add
xor
insl
dec
xor
dec
cmpsb
cli
inc
push
inc
xor
int
addr16
popf
and
cmpsl
leave
pop
inc
arpl
loopne
fcoms
cmc
addb
and
and
loopne
adc
ds
dec
push
mov
push
mov
cltd
cmc
insb
jl
ljmp
xor
dec
decb
call
in
xlat
mov
inc
bound
cwtl
or
sub
add
test
fwait
es
mov
and
rcrl
dec
inc
scas
mov
sahf
insb
adc
mov
pop
xchg
mov
data16
push
pop
insb
or
jp
xor
inc
dec
xlat
test
mov
mov
ret
pop
cmp
cmp
neg
stc
popl
stc
sub
aaa
es
xchg
lods
push
lods
pop
inc
or
jae
cwtl
lods
inc
push
outsb
and
and
inc
mov
jae
ret
imul
dec
pop
cwtl
scas
dec
sbb
push
outsb
jbe
bound
fldcw
push
add
mov
cmpsl
mov
dec
loop
cmp
rcr
lret
testb
xor
out
inc
rcl
cmp
or
dec
loopne
jns
mov
add
stc
pop
imul
bound
call
pop
adcl
outsb
sbb
pop
stos
loop
movsl
xlat
push
gs
jnp
mov
push
cwtl
sub
pop
je
xchg
dec
dec
iret
addl
rcrb
xchg
mov
rclb
ljmp
pop
fwait
bound
lea
xchg
pmulhuw
stos
ret
insl
adc
test
jo
xchg
mov
lds
add
cli
dec
jmp
es
call
jp
pop
and
xchg
mov
inc
cltd
cmpsb
imul
int3
loopw
cmp
sbb
add
sub
lds
insb
lods
pop
jp
mov
addl
dec
movsl
ljmp
jbe
lock
push
mov
cmp
sub
add
and
inc
aaa
clc
jae
test
add
mov
test
cmp
inc
mul
test
hlt
add
rcrl
inc
pop
cmpsl
push
jmp
jnp
sbb
pushf
mov
arpl
leave
sbb
bound
les
addr16
aad
iret
adc
cmp
sbb
popf
sbb
hlt
pop
and
cmp
pop
loopne
sub
in
outsb
jne
iret
pop
iret
bound
std
std
xchg
cld
mov
jnp
stos
mov
jmp
in
sub
lods
inc
cwtl
fisttpll
fnstcw
push
push
xor
xchg
enter
jle
pop
push
fwait
movsb
mov
jge
stc
test
cmpsb
adc
mov
inc
fadds
into
popf
int3
shll
bound
stos
dec
dec
xchg
pop
cmp
adc
xchg
ret
xor
scas
les
add
pop
pop
aad
sbb
push
notb
out
cmpsl
ret
in
mov
mov
sub
ljmp
or
push
mov
cmp
test
or
xorb
arpl
sahf
aaa
xchg
ja
mov
out
test
test
add
mov
mov
call
ss
fpatan
pushf
ret
pop
or
shlb
inc
and
mov
clc
out
push
cltd
adc
stc
mov
dec
dec
pop
sub
es
test
and
xchg
inc
xchg
add
xchg
mov
push
stc
test
les
xchg
call
mov
add
adc
jmp
das
icebp
int3
or
gs
push
test
cltd
and
lret
dec
cmp
dec
pop
fiaddl
add
shlb
pusha
jae
out
rolb
sbb
push
out
xchg
cmpsl
ret
int3
mov
xchg
xor
jno
aaa
movsb
sub
xor
lret
dec
sbb
pop
cmp
xlat
xchg
bound
dec
sarw
mov
pop
rcl
and
inc
jbe
loop
in
orb
or
add
outsb
jmp
cld
lcall
jbe
lcall
mov
out
mov
ret
xor
push
cli
aas
xchg
cwtl
orl
sbb
not
nop
dec
jno
fxch
nop
xchg
mov
stos
loop
dec
and
popa
stos
xor
xor
lock
adc
mov
pop
cmp
fs
xlat
call
dec
fxch
mov
lods
ljmp
mov
pop
mov
mov
not
iret
sub
pop
ds
mov
inc
out
je
xor
or
xor
pop
jbe
adc
bound
inc
shll
mov
aam
test
jl
sub
lret
movsb
add
pushf
jecxz
repz
jl
sahf
popf
dec
popf
mov
adc
ljmp
das
pop
scas
fwait
in
and
leave
mov
sti
es
rol
xchg
jae
outsb
mov
rolb
add
loope
scas
call
pop
andl
or
mov
mov
add
push
mov
mov
sar
outsl
xor
sahf
es
inc
pop
repnz
insb
in
les
adc
lods
pop
cmp
dec
bound
stc
test
xor
fcompl
push
pop
in
inc
mov
mov
and
sub
jle
icebp
cmc
xor
sub
dec
ss
mov
xlat
cmp
pop
mov
inc
int3
hlt
push
add
aas
xchg
mov
lea
mov
jae
dec
sub
outsb
cmc
push
push
ret
imul
push
fsubs
imul
or
mov
cmp
mov
movsl
cs
stos
fldl
popf
sub
fldcw
jae
jb
movsl
icebp
shrb
arpl
jo
sub
push
inc
mov
jl
push
xchg
call
je
imul
inc
inc
fidivl
jnp
inc
cld
je
inc
xor
sbb
push
aas
lock
push
loopne
push
adc
jbe
xchg
dec
data16
shll
lret
xlat
jns
insb
jb
sahf
push
mov
jge
cwtl
sti
add
ret
pushf
cli
es
xchg
mov
into
mov
aas
pop
notl
aad
icebp
push
clc
nop
push
cmp
jge
vphadduwq
sarb
sbbl
sbb
dec
push
js
inc
loop
xchg
sbb
pop
hlt
mov
mov
dec
mov
fildll
push
sbb
push
clc
push
das
push
scas
ljmp
xchg
enter
cmp
ljmp
jne
cmp
pop
nop
xor
dec
hlt
mov
div
int3
fnstcw
xchg
mov
cli
dec
cmpsb
call
sub
ss
pop
fstpl
outsb
push
push
ss
out
jno
into
pusha
pop
mov
lods
cmovb
push
or
mov
scas
xchg
fcmovne
push
cltd
jge
cmc
pop
xor
daa
mov
inc
add
sbbl
push
in
mov
xor
pop
cmc
push
andl
call
stc
inc
outsl
imul
xchg
xor
mov
jbe
or
cwtl
dec
cmp
lahf
popa
out
sub
mov
faddl
mov
leave
lret
push
cmp
xchg
pop
lcall
cmpsl
out
std
lods
neg
jmp
pop
xor
xchg
loope
push
pushf
loope
dec
xlat
in
jmp
ror
sahf
clc
addr16
or
push
imul
rorb
adc
cmp
pop
in
pop
popl
mov
sub
or
mov
adc
and
in
stos
out
push
rcl
mov
daa
inc
jl
aam
xchg
cmp
mov
nop
enter
push
cmpsb
cmp
and
and
in
outsb
sbb
push
fs
lods
test
arpl
je
add
mov
insb
scas
leave
cmp
pop
xor
mov
dec
pop
mov
fisttpl
out
push
jle
lcall
adc
stos
es
inc
and
inc
mov
fs
int
ret
bound
push
ret
ret
jno
dec
xchg
push
jb
fidivs
ror
jno
inc
dec
pushl
xorb
orb
dec
punpcklbw
clc
loop
cs
lds
nop
inc
mov
pop
loop
fsubs
adc
push
mov
icebp
test
sbb
xor
add
ds
push
nop
jb
jmp
test
lret
xlat
dec
ret
mov
mov
cmp
iretw
lahf
outsl
add
imul
insb
cwtl
pop
jne
push
xor
jge
cmp
xchg
xchg
sahf
fs
add
jo
mov
into
mov
adc
negb
aam
subb
add
in
jle
fdivl
pop
push
push
mov
lcall
in
push
adc
inc
icebp
lods
leave
push
mov
lock
sbb
sbb
fcompl
ret
inc
ud0
sub
jnp
pop
xchg
pop
sti
icebp
rcrl
out
imul
pop
inc
xchg
adc
cmp
adc
mov
ss
sub
cmpl
repnz
insl
js
xchg
mov
lcall
or
repz
pushf
pop
lahf
or
lds
jp
mov
cmc
push
movb
or
add
xor
ss
adcb
scas
mov
and
lock
out
lds
cmp
insb
outsl
sbb
rclb
leave
cwtl
xchg
sti
inc
loop
addr16
lcall
adc
inc
aas
xor
call
inc
loop
jnp
and
rcl
js
mov
jle
inc
gs
sub
fwait
jno
fucom
inc
dec
rep
cmpb
loop
xor
out
faddl
test
sub
testb
and
fmuls
mov
shrl
mov
shll
push
sub
dec
dec
gs
and
xchg
push
fbld
mov
das
jo
insl
test
fldpi
xor
adc
out
add
ss
call
lds
sbb
inc
cltd
out
add
mov
inc
ds
es
insb
mov
jo
cmc
or
std
and
int
adc
inc
repnz
sahf
sub
repz
fsubr
insl
shrb
jl
sub
fists
sbb
lock
lods
add
adc
pop
push
and
push
mov
mov
push
outsb
sbb
push
pop
out
mov
pusha
rcrb
and
in
enter
mov
aaa
fldt
mov
test
xlat
or
ja
sub
sahf
mov
flds
cs
cmpsl
ljmp
aas
cmp
repnz
nop
out
int
imul
repz
dec
inc
mov
cmp
in
iret
dec
movsb
cmp
or
mov
pop
xchg
xchg
pop
imul
pop
shll
call
adc
aam
xchg
adc
lea
inc
jb
loop
bound
into
add
out
mov
mov
ljmp
je
mov
lods
mov
pop
xor
push
push
adc
pushf
pop
and
xchg
insl
aam
rolb
stos
clc
xchg
pop
loopne
pusha
pop
stos
iret
pop
cmp
sbb
pop
mov
sbbl
jne
repnz
dec
cltd
pop
mov
or
std
test
cmp
xchg
mov
sub
mov
jae
arpl
ds
inc
dec
sbb
sbb
sbb
lret
cmp
movsb
repnz
sbb
mov
xchg
add
xorl
pop
movsb
dec
aam
or
mov
cmc
adc
scas
inc
aad
mov
jp
hlt
cmp
add
and
cmp
into
outsb
sbb
pop
jp
mov
mov
mov
roll
div
xchg
mov
pop
adc
jg
rcrb
dec
and
outsb
sbb
fimull
inc
pop
and
xchg
es
arpl
mov
mov
enter
xchg
cwtl
out
xor
xor
ficomps
xchg
adc
enter
fidivs
movsb
mov
xchg
inc
xor
adc
lods
mov
pop
add
mov
test
or
stc
fsubrp
inc
enter
push
and
pop
sub
mov
cs
rolb
dec
les
pavgw
daa
jmp
or
add
and
lret
inc
fcompl
ljmp
sbb
mov
sub
jl
add
jns
sub
cs
popa
jo
sbb
jno
and
rcr
inc
xor
lret
xor
mov
iret
mov
sbb
jecxz
imul
cmpsb
sub
push
sub
push
sbb
fstpt
xchg
mov
dec
dec
daa
daa
outsb
inc
aam
add
push
mov
push
mov
cld
sub
xchg
stos
dec
mov
mov
sub
fadds
pop
pusha
stos
adc
mov
lods
scas
inc
xchg
add
js
cmp
xchg
hlt
sbb
stos
mov
dec
jae
movsl
sbb
pushl
or
pushl
nop
pushf
scas
int
daa
xchg
enter
out
imul
or
inc
xchg
hlt
cmp
test
and
sub
jmp
push
je
xchg
bound
xor
pushf
int
inc
mov
mov
pop
inc
loopne
popa
leave
jo
hlt
addr16
test
push
leave
cmp
lods
cmpsl
arpl
and
pop
xor
jge
mull
and
pop
hlt
add
das
addr16
sbb
ror
mov
jne
push
sbb
sahf
jmp
leave
test
cmp
in
andb
mov
test
test
dec
lods
ss
mov
dec
aaa
sti
jle
lods
repz
scas
cmp
sub
xor
cli
cmpsb
sub
push
out
out
out
js
push
lcall
xor
pop
test
add
inc
jmp
in
xor
push
popf
and
and
jae
inc
fstl
fs
inc
test
adc
mov
popl
jl
bndstx
cli
and
xor
mov
ret
mov
jno
imul
sbb
mov
jmp
in
push
pop
jnp
nop
xor
ficoms
shlb
lret
out
rol
rclb
adc
fldt
adc
inc
dec
push
out
in
pusha
push
loopne
arpl
cmp
mov
cmp
pop
loopne
jmp
jl
dec
sti
jg
push
or
and
pop
ficomps
push
inc
pop
push
enter
lret
mov
sub
loopne
popf
lahf
push
push
xchg
arpl
mov
fsubrp
popf
mov
mov
sub
and
dec
lret
adc
jmp
mov
dec
mov
or
mov
in
mov
sahf
popf
cli
fwait
xlat
sbb
into
sub
xor
dec
das
cmp
lods
pop
fmul
fcomps
in
ret
cltd
pop
or
xchg
arpl
popa
mov
mov
inc
xchg
inc
inc
lods
addl
or
or
std
mov
jle
jb
popa
clc
jns
jae
pop
adc
fstps
dec
fs
xchg
imul
xor
rorl
push
test
jns
andl
mov
aam
xor
mov
movsl
inc
stos
pop
xchg
pusha
cmp
int3
jp
lret
inc
cmp
jg
mov
subb
das
lock
xor
and
mov
mov
dec
and
into
cmp
clc
and
mov
aaa
xchg
adc
pop
les
fsubl
in
out
cld
jle
cli
push
inc
push
lea
jae
jo
push
or
sub
rcl
into
and
dec
xor
outsb
loope
into
fstpl
push
pushf
push
inc
scas
add
lea
aas
insb
mov
cmp
into
and
test
push
jp
lret
jns
push
mov
jns
call
mov
mov
jb
enter
mov
cmp
push
jno
ja
mov
adc
aaa
pusha
idiv
xor
jmp
in
mov
mov
jmp
cmpsl
sbb
sbb
sbb
ss
lds
andb
loopne
jo
out
sub
sbb
inc
shrb
lret
daa
call
into
mov
xor
stc
mov
fwait
into
cwtl
rorl
jne
mov
shr
push
mov
addr16
xor
sahf
popa
or
inc
mov
cmp
fs
add
push
and
int
push
cmp
std
push
aad
imul
xchg
dec
mov
into
les
aaa
jno
push
movsl
addr16
sbb
pop
sub
ljmp
add
sarl
cmpsl
dec
int3
fists
push
daa
in
jecxz
push
enter
pop
mov
push
pop
cmpsb
inc
scas
popl
xchg
sbb
ja
lret
jecxz
fildl
and
movsl
sti
sub
arpl
shlb
cmc
mov
addr16
jg
inc
movsb
push
and
fistpl
ljmp
es
jno
or
mov
xor
mov
in
cmp
enter
dec
popl
nop
stos
cmp
or
pop
repz
xchg
push
xchg
pop
movsl
xchg
lret
pop
xor
push
shrl
xchg
pop
push
pushf
jl
loope
pop
outsb
imul
mov
popf
jno
dec
or
pushf
jne
lret
hlt
or
out
mov
lahf
dec
jecxz
or
loop
jl
add
aad
loopne
in
pushf
push
imul
inc
jns
adcl
ja
push
movsl
add
imul
loopne
cmp
xchg
enter
jo
insb
lret
mov
sbb
mov
cmpb
popf
mov
shl
mov
or
hlt
loop
rorl
call
fs
outsb
imul
mov
xchg
jb
movsb
sub
push
pop
sbbb
pop
xchg
jmp
mov
das
pop
add
inc
mov
rorl
jl
mov
jle
xchg
jae
mov
jl
pop
add
daa
inc
push
xchg
inc
push
ds
pop
mov
aam
cmpsb
repnz
pop
loopne
lea
adc
sbb
xor
lods
out
and
xor
mov
popf
mov
mov
lds
sbb
leave
and
mov
mov
jno
push
test
mov
push
adcb
dec
jne
dec
or
es
stos
pop
push
arpl
push
scas
mov
ret
jle
pop
mov
push
lods
xor
test
out
hlt
and
pop
ds
jge
push
sub
test
add
or
rcll
jns
pop
xlat
scas
adc
or
repz
lret
ljmp
push
pop
shl
aam
lahf
test
ss
out
cld
test
sub
add
pop
outsb
adc
int
cmp
jmp
dec
ret
xchg
pop
sub
pop
icebp
mov
leave
aam
mov
cmp
cvtdq2ps
aas
push
xor
lcall
pop
hlt
stos
inc
and
lods
stc
popa
inc
cli
mov
ds
xchg
adc
fcmovnb
rol
mov
dec
dec
push
mov
lret
inc
xchg
sbb
mov
sbb
pop
pop
inc
push
pop
fdivrs
test
xor
mov
dec
cwtl
mov
xchg
mov
jmp
je
pop
pop
je
push
push
pushf
notl
out
stc
je
xchg
cmp
lret
bnd
or
push
or
in
icebp
mov
jno
push
pop
insl
xchg
je
sub
sbb
jmp
outsb
test
push
cmp
xchg
push
cmp
mov
and
arpl
les
mov
mov
push
jnp
xlat
stos
aas
shr
add
cli
dec
inc
clc
in
mov
cmp
sbb
and
jo
lret
jo
push
jnp
stc
push
loope
lods
in
das
shll
or
mov
imul
scas
stos
stc
ss
add
sbb
jmp
out
add
add
cmpsl
cmpsl
adc
jbe
cmpsl
mov
repz
es
or
sbb
mov
ss
mov
popa
cmp
cmpsl
xor
and
imul
rcrw
fwait
jg
push
and
shlb
adc
sub
jb
aas
mov
cmp
xlat
push
pushf
aam
inc
add
mov
xchg
mov
dec
pop
jo
or
mov
mov
inc
and
lock
pop
and
fistpl
cs
mov
dec
mov
leave
mov
insl
adc
jb
or
adc
int
out
sbb
call
lods
fisttpll
shrl
pop
in
std
jne
test
or
xchg
cld
sub
xor
imul
cmpsb
insb
out
popa
pop
sbbl
add
jno
add
loop
je
jl
lret
pop
pop
mov
cmpb
es
jmp
xor
ret
inc
lcall
mov
in
jp
jecxz
das
jo
push
popf
mov
gs
xchg
cmp
sbb
xor
dec
lahf
fistpl
jns
cmp
call
adc
pop
loope
lds
imul
xor
in
inc
mov
loopne
or
push
inc
push
repnz
xchg
mov
push
add
mov
dec
jae
mov
insb
xchg
xchg
mov
add
sbb
scas
xchg
je
int3
mov
add
xor
repnz
mov
and
cli
ja
add
es
xor
cmp
inc
jmp
movsl
cmc
xchg
lret
shl
pop
mov
call
insb
cmp
adc
xchg
pop
mov
cmp
test
mov
pop
jmp
adc
outsb
or
lock
test
jge
pop
ja
lahf
je
mov
push
sbb
iret
out
add
es
insl
fwait
out
jnp
and
stc
mov
cmpsw
mov
xor
stos
cld
loopne
mov
test
inc
sbb
icebp
or
jne
insl
shrb
rcrb
test
jbe
cltd
je
cltd
lock
loopne
scas
sub
mov
fbstp
jge
cmp
and
cmp
adc
push
insb
jae
out
vpmuludq
mov
in
int3
scas
mov
xor
push
add
pop
adc
sbb
das
push
jne
jge
and
xchg
enter
stos
inc
popf
lods
mov
sarb
scas
mov
sbb
pop
sbb
hlt
sub
push
fistpll
les
outsb
mov
int3
sbb
jnp
inc
mov
inc
mov
decl
or
lret
add
dec
int
data16
push
stos
sub
icebp
or
inc
xchg
xor
push
sahf
lcall
out
adc
int3
pop
mov
push
inc
ficompl
fnsave
test
adc
inc
push
mov
sti
shrb
xchg
enter
cmp
insl
jg
xchg
lahf
stos
lret
ljmp
sub
mov
push
xor
lock
add
mov
push
pushf
dec
pushf
push
fldl2t
mov
negb
daa
jp
xor
push
mov
lock
addl
xchg
test
sbb
and
adc
fmul
es
jg
add
xchg
pop
roll
mov
inc
out
aad
push
xchg
stos
lock
inc
sub
out
stc
int
pop
mov
ret
rorl
mov
mov
xchg
mov
pop
sti
iret
enter
fs
std
dec
mov
and
push
mov
inc
inc
push
mov
cmp
stc
sbbl
cmpsl
mov
jo
dec
dec
adc
inc
imul
mov
popa
push
add
cmp
bound
into
dec
add
push
out
cmp
fs
and
movsb
sbbb
movsb
push
andb
add
pop
push
add
xor
xchg
sub
adc
dec
pop
iret
ja
jbe
adc
push
sub
mov
cmp
adc
adc
lcall
mov
cmpsb
sbb
pusha
mov
ja
adc
add
and
and
xchg
scas
fists
stc
or
xchg
xor
ret
push
das
xchg
xchg
and
lret
fmull
pop
into
fsub
mov
xchg
daa
or
xor
pop
mov
shl
pop
negb
jge
push
jmp
inc
add
add
fucomp
lds
leave
je
ljmp
loope
inc
leave
in
insl
fcoms
xchg
pop
mov
pop
dec
movsb
cmpsl
mov
pop
mov
in
pop
jne
push
xor
into
popf
ds
ljmp
mov
cmp
lods
jo
cli
or
in
repnz
test
sub
insb
ds
inc
enter
out
loop
pop
in
cli
adcl
lcall
jp
xchg
out
lret
xor
arpl
scas
out
lahf
insl
cld
and
negl
test
cmp
cs
add
dec
add
fwait
push
jmp
jbe
sbb
leave
int
shll
jae
inc
hlt
mov
rolb
lahf
repz
es
push
xchg
pusha
inc
lret
test
sbb
bswap
hlt
mov
add
fdivr
mov
xchg
cltd
pusha
dec
cmp
stc
adcl
push
adc
pushf
sbb
out
loopne
daa
cmp
pushf
xor
shll
dec
mov
mov
or
dec
outsl
lahf
xor
cmp
xor
mov
cld
inc
and
xlat
sar
inc
inc
scas
pusha
jecxz
test
fmuls
mov
xchg
mov
adc
dec
inc
mov
cmp
mov
fwait
mov
xchg
les
stos
pop
mov
popf
imul
push
pop
into
gs
dec
mov
mov
sbb
xchg
and
orl
mov
adc
pop
pop
sub
loope
cmpsb
cmp
xlat
adc
rorl
push
pop
lcall
jl
add
loopne
loope
fcoml
addr16
mov
jae
sarb
inc
dec
sub
test
inc
jnp
cld
xchg
mulb
inc
inc
cmp
lret
add
sub
shr
add
add
adc
mov
or
lds
or
xor
and
bnd
adc
les
push
mov
fimull
sahf
jnp
aam
icebp
cmp
fiaddl
fdivrl
insl
mov
lahf
mov
fsubl
mov
mov
mov
cld
add
sbb
aam
jae
mov
les
or
and
sbb
inc
or
inc
mov
pushf
cmpsl
xor
xor
andb
mov
std
xchg
pop
jp
scas
stos
cmp
cwtl
js
mov
and
inc
add
dec
jns
lods
jne
lods
xchg
je
or
repnz
shll
fbstp
push
lds
sbb
lea
imul
jnp
cmp
rep
cltd
shlb
movsb
imul
insb
mov
adc
mov
div
loop
icebp
pop
and
cli
mov
cmp
and
jae
std
pop
jmp
stos
adc
scas
sahf
add
ret
adc
mov
push
pop
inc
stos
insl
ja
and
xorl
pextrw
test
mov
test
repnz
les
cs
cmp
push
inc
push
mov
ficompl
jmp
adc
scas
dec
jne
sub
out
cmp
inc
mov
inc
mov
mov
fcmovb
cmp
and
or
pusha
inc
xchg
notl
mov
jne
shrb
mov
and
add
insl
mov
movsb
pop
mov
out
sub
xchg
sub
mov
mov
icebp
xor
sahf
xchg
adc
rorb
aas
loope
jge
jp
sub
jg
or
sub
adc
mulb
dec
cld
mov
aam
and
mov
push
lret
pusha
out
xchg
fdivrp
xor
cmpsl
sbb
mov
sbb
inc
sti
cmp
js
cwtl
and
cmp
mov
cs
aam
dec
pop
scas
jle
xor
imul
aas
add
push
test
mov
xchg
dec
add
push
mov
repz
mov
and
dec
out
add
sub
jno
repz
js
mov
das
add
sub
mov
jge
nop
stos
cmpb
or
xor
adc
mov
imul
sbb
jno
frstor
loope
ficoms
or
lock
mov
stos
mov
int3
inc
push
out
or
mov
push
jmp
adc
lcall
out
adc
jmp
fbld
push
lcall
and
add
movsb
cltd
adc
cs
xchg
fwait
pop
lds
popa
push
pop
xchg
pop
pusha
fsubs
mov
dec
ret
sbb
cmp
repz
cmpsb
mov
adcb
insl
lock
mov
in
dec
pushf
inc
pop
mov
lret
pop
loope
andb
mov
mov
add
out
jp
sbb
push
add
adc
repnz
int3
int
outsl
cwtl
sub
xor
pop
cmc
jae
cmp
das
sar
lea
decb
mov
imul
icebp
mov
jbe
ret
mov
or
mov
data16
scas
mov
rclb
test
mov
xchg
fsubrs
xchg
jb
js
ret
cltd
ds
mov
jmp
popf
xor
shlb
pop
inc
lea
adc
cs
mov
in
and
push
jecxz
out
or
cmp
fneni(8087
xor
cmp
call
testl
in
call
pop
enter
cli
push
cli
lret
mov
cwtl
and
imul
jg
or
test
pop
pop
cmp
call
and
aad
addr16
addr16
pop
popf
push
push
sub
xchg
sbb
into
sti
insb
push
test
xchg
enter
arpl
insl
or
scas
xor
call
fxch
subb
dec
ljmp
mov
mov
idivb
inc
sti
int3
loop
aaa
jmp
test
dec
aas
cmp
in
xchg
and
call
mov
int
shr
jb
loope
test
mov
push
cwtl
pop
cmp
ja
sbb
xchg
jg
lcall
int3
movb
ds
and
and
push
mov
push
inc
shll
mov
xchg
mov
les
pop
jns
adc
and
sti
mov
aaa
cld
dec
scas
loopne
loopne
test
loopne
jne
mov
xlat
mov
fstenv
rorb
pmulhuw
push
imul
inc
aaa
push
dec
data16
mov
mov
cmc
je
fcoml
pop
stos
add
std
out
xor
pslld
add
push
test
push
inc
movsl
dec
adc
xor
dec
add
inc
movsb
js
push
sub
jp
ret
dec
fisubl
dec
fisttpll
loopne
mov
xor
scas
cs
mov
outsb
bound
in
inc
mov
push
inc
jmp
outsl
movb
fisubs
cmpsb
dec
loope
or
jae
ss
inc
bound
mov
shr
adc
fildl
stos
mov
aad
sub
repnz
cltd
stos
add
repz
pop
mov
mov
loope
pop
jecxz
dec
xchg
mov
test
jle
xchg
add
or
mov
popf
jg
ljmp
sub
pop
mov
int3
sub
dec
sbb
test
mov
and
xchg
out
xchg
cwtl
mov
mov
xor
pop
adc
dec
sbb
mov
sahf
inc
xor
sahf
lods
sub
push
loop
jno
mov
mov
xchg
aaa
mov
sbb
testl
or
dec
mov
movsl
insb
imul
sbb
cmc
and
and
push
mov
fsubrp
xor
fwait
mov
inc
rorl
inc
dec
mov
outsb
xchg
in
lret
mov
ljmp
xor
xchg
ret
test
mov
adc
fnstsw
in
je
add
inc
in
jno
aaa
out
mov
dec
pop
lods
out
icebp
xchg
into
lahf
xor
mov
lock
and
js
fldt
mov
ror
xor
mov
int3
pushf
push
aas
movl
xchg
fmul
adc
in
out
jb
push
rorb
fdiv
in
pop
inc
pusha
dec
push
mov
sbb
loope
mov
mov
xchg
aas
mov
insb
rclb
sarl
and
bound
out
cld
xchg
jg
in
xchg
adc
push
adc
sbb
popf
cs
dec
xchg
enter
insl
scas
or
sub
add
popf
or
clc
dec
pop
fists
hlt
aam
scas
cmp
sahf
loopne,pn
imul
jg
inc
sub
fsts
sbb
mov
cwtl
call
mov
and
mov
fidivs
insl
cmpsl
add
jmp
add
jle
jecxz
fistps
call
cwtl
fiaddl
ja,pt
sbb
mov
mov
dec
mov
dec
stos
out
mov
pop
ss
jl
aam
mov
loope
and
or
xor
andb
mov
mov
test
stos
das
add
test
test
sub
and
add
jl
int
ja
sbb
and
jp
iret
pop
std
adc
add
sahf
jo
inc
pop
adc
lret
cltd
cmpl
or
add
push
xchg
std
sahf
dec
fsubrp
xchg
sub
sahf
sub
popf
xor
sbb
idivl
roll
mov
xor
cmp
sbb
add
lods
rcr
push
push
es
or
xchg
jg
lock
pop
jge
xchg
cmc
jae
int3
cmp
cmp
sbb
xchg
mov
popa
lret
lock
sbb
subb
movd
pushf
rclb
loop
mov
xlat
adc
or
mov
sbb
loop
insb
clc
iret
nop
push
stos
mov
xor
inc
mov
mov
pop
xchg
adcl
addr16
iret
adc
jge
xchg
mov
mov
jge
or
cmp
shlb
xor
pop
mov
inc
adc
sub
adc
sahf
or
mov
push
outsb
fisubrl
or
test
addr16
xchg
jnp
lcall
jle
aad
xor
aad
stos
movl
rdpmc
cmp
xor
sti
dec
push
adc
fidivrs
jg
popa
aaa
insb
pop
call
cs
out
sti
jg
pop
xchg
xchg
jl
adc
pop
movsl
inc
call
mov
add
mov
inc
sbb
jne
addr16
pop
add
arpl
pushf
and
loop
outsb
ret
in
cmpsl
aam
xchg
xor
imull
sub
or
test
lcall
fisubs
push
into
gs
shll
insb
xchg
ss
jmp
or
ret
jmp
dec
loopne
sub
adc
mov
mov
daa
or
adc
mov
push
sbb
sahf
pop
dec
movsb
xor
sub
movups
sub
adc
inc
cmp
ror
enter
mov
pop
mov
cmpsl
call
lds
popf
cld
popa
add
loope
inc
clc
aas
cwtl
test
bswap
push
dec
je
push
mov
mov
rclb
sbb
in
and
sub
sub
inc
ficoms
enter
fidivl
pushf
push
in
add
ret
scas
push
jbe
scas
into
fadds
mov
push
dec
adc
pop
xchg
mov
jecxz
xchg
sub
pop
jb
sub
push
xchg
push
add
mov
movsb
mov
lds
loop
popf
mov
test
data16
pushf
push
cmpsl
test
je
jne
fbstp
sahf
pusha
clc
jnp
int
shlb
mov
push
mov
xor
mov
sub
loop
pop
dec
dec
cmpsl
inc
mov
add
incb
xchg
arpl
xchg
add
cmp
mov
stos
imul
jle
xchg
mov
fisubs
mov
js
or
cmc
push
jg
add
test
and
in
adc
dec
loope
mov
and
mov
jno
mov
call
sti
xor
pop
call
mov
iret
push
sub
xor
mov
sahf
push
sahf
mov
dec
dec
jnp,pt
jecxz
fwait
out
jmp
jl
int3
movsl
xlat
fwait
or
icebp
mov
jecxz
insb
sti
aad
add
bound
xor
push
xor
xchg
arpl
imulb
mov
add
mov
clc
fisttpl
push
inc
outsl
int3
negl
scas
dec
jb
mov
sbb
cwtl
dec
sub
call
cmp
jle
dec
add
mov
fwait
shll
js
xor
data16
test
and
mov
out
mov
inc
xor
push
testl
cltd
push
lahf
repz
xlat
cwtl
jecxz
mov
ds
mov
jmp
out
sbb
insl
xor
cli
jne
mov
dec
push
hlt
out
jbe
or
test
fdivrs
ret
mov
jle
xchg
ret
xor
or
mov
dec
mov
xlat
cli
mov
sub
shlb
loope
push
lcall
and
inc
frstor
leave
sub
add
jne
ja
and
inc
lret
clc
xchg
adc
mov
sbb
and
pop
pop
sbb
arpl
jecxz
iret
imul
aad
and
push
sbb
sbb
aas
fs
stos
push
mov
leave
xchg
leave
movsb
add
cmp
jo
push
cmc
pop
mov
imul
insl
icebp
test
test
and
mov
mov
xor
aaa
mov
add
push
mov
dec
mov
popf
cmp
mov
je
sbb
hlt
adc
idivb
mov
sub
in
stc
xor
in
add
sbb
cwtl
sbb
and
fisttpl
mov
dec
sbb
mov
mov
xchg
xlat
jns
iret
mov
push
fwait
mov
es
or
push
pusha
adc
imul
fsts
lret
and
loope,pt
pop
and
push
push
lret
sar
std
imul
popf
sub
add
dec
and
sti
pop
ret
fiadds
cmpsl
sub
or
ret
cmpsb
lods
stc
pop
clc
jg
leave
outsl
cwtl
jmp
popa
popf
mov
mov
jbe
pushf
int3
mov
xor
jno
push
xchg
cli
sub
or
jb
sub
popa
mov
ss
xor
add
xchg
sub
push
aam
push
imul
out
out
sti
pop
xor
xor
xorl
dec
xchg
lea
test
jno
pop
clc
jo
cmpl
mov
push
sbb
jbe
sbb
test
ljmp
inc
sub
rorb
mov
stos
daa
and
imul
xchg
inc
mov
arpl
push
mov
cmp
in
mov
cmp
lds
mov
sbb
mov
shl
add
mov
lret
xlat
fabs
ds
pop
xor
mov
in
cwtl
sti
pop
pop
mov
jecxz
jmp
sub
lds
clc
or
shll
mov
gs
mov
xchg
test
call
cli
ds
cmpsl
sbb
rol
jb
enter
sbbl
mov
in
dec
jmp
in
cli
lcall
mov
rcrb
jge
pop
push
inc
lock
dec
inc
fists
push
sub
jecxz
pop
dec
gs
out
je
inc
scas
pop
jnp
cmp
mov
or
rol
xchg
enter
dec
fs
dec
jo
push
shlb
cmp
and
dec
pop
jno
and
cli
lods
mov
in
out
into
sbbl
xchg
pop
and
sbb
outsb
fwait
jp
push
fmull
mov
xchg
sbb
xchg
xor
shrl
xchg
insb
jb
sahf
arpl
mov
lock
fucomip
inc
dec
repnz
lods
imul
inc
adc
pop
or
adc
sbb
sub
xor
mov
jle
add
lea
int
xchg
sti
stos
les
outsl
push
inc
pushf
out
xchg
xchg
pop
cmp
into
pop
push
dec
in
popf
arpl
ret
jle
cmpsl
clc
push
pusha
js
lods
outsb
or
cli
imul
sub
iret
ret
jge
scas
std
outsb
pop
leave
flds
and
mov
mov
mov
cmp
enter
addl
cmpsl
aas
xchg
inc
dec
mov
cmp
les
aaa
ficomps
xor
add
aad
xor
cmp
popa
mov
lea
dec
loop
jg
insb
pushf
cli
xchg
jnp
cmp
test
mov
hlt
push
adc
push
cmpb
sbb
aaa
fdivrs
push
cmp
cmp
pop
pop
loope
jge
cmpsb
push
sbb
mov
sub
imul
lahf
push
js
sbb
add
shlb
jl
xor
xchg
add
leave
orb
hlt
and
shlb
shlb
pop
imul
inc
xchg
push
pushf
mov
rorb
sbbl
jbe
push
stos
cmp
xor
insl
push
jns
adc
mov
push
mov
imul
outsl
enter
es
pop
sub
jae
movsl
pop
out
push
sti
inc
bswap
outsb
test
pop
push
jae
loop
lea
xchg
xchg
sub
int
jl
sub
insl
or
rcl
push
aam
icebp
adc
fdivs
aad
xchg
in
xchg
sbbl
jg
jnp
mov
imul
data16
xchg
jb
lret
pop
js
adc
push
lret
out
and
add
mov
jnp
lods
shrb
loope
testl
sbb
pop
clc
test
mov
sbb
adc
cwtl
inc
stos
jmp
pop
outsb
pop
ret
lahf
jns
cmp
mov
ss
sub
loopne
and
aas
orb
shrb
stc
jno
arpl
ret
sarl
addr16
xchg
pop
mov
dec
mov
dec
int
lods
jnp
xchg
nop
test
test
mov
fnstcw
lcall
scas
bound
jle
in
stos
mov
sar
movsb
out
sahf
lahf
jns
fiadds
dec
pusha
aaa
aam
lods
add
jnp
xchg
jo
test
lahf
sub
sub
inc
loopne
int3
ficoms
xor
push
test
push
insb
xor
jae
test
in
push
sub
ror
dec
je
adc
or
fisubrl
jae
sub
dec
xchg
mov
mov
dec
mov
or
pop
xorl
call
sahf
stos
into
ss
cwtl
push
jbe
ja
mov
loopne
cmp
sti
push
jns
int
mov
xchg
sbb
hlt
mov
stos
pop
inc
test
int3
subl
imul
fs
mov
cmp
jo
add
insb
mov
jns
sub
mov
aas
jp
pop
lods
pushf
xchg
pop
into
movaps
adc
sub
xor
loope
pop
mov
out
movsl
lds
sub
imull
mov
insb
mov
imul
movsb
xor
fimull
leave
push
pop
mov
push
mov
or
xorl
and
pop
jno
sbb
movsb
pop
aad
adc
in
add
dec
dec
mov
popa
cmp
adc
jnp
fwait
sub
andb
pop
mov
int
stc
jl
mov
jle
pop
pushf
mov
rcrl
jbe
lea
cmpsl
push
fwait
pop
xchg
orl
mov
rcll
sub
mov
aam
sbb
add
xchg
jb
push
cld
stos
bound
mov
mov
mov
fisubs
jo
push
fisttpll
leave
push
mov
hlt
mov
xlat
cmp
adc
divb
pop
push
cmp
xchg
in
aaa
into
imul
xor
and
xchg
or
xchg
sub
call
test
notl
out
inc
jge
bound
movsl
cmp
call
ret
pop
pop
outsb
cmp
sbb
shr
xor
sbb
jo
data16
std
test
jmp
imul
out
mov
stos
or
sbb
xor
sub
xor
jge
int
lods
adc
jno
sbbl
mov
decb
inc
hlt
push
inc
mov
xor
fisubrs
mov
fsubr
mov
sub
popf
sbb
or
jnp
mov
mov
lcall
out
in
out
das
movb
xchg
pusha
mov
daa
lcall
cmp
xchg
daa
mov
adc
movsl
les
hlt
push
daa
pop
loop
jg
fstps
nop
jg
push
lahf
movsl
xchg
jl
push
mov
in
mov
ljmp
fnsave
std
mov
and
push
jo
pusha
xor
pop
pop
popa
in
push
pop
add
daa
sbb
lods
out
addr16
cmpsb
movb
adc
pop
cmp
jo
sbb
stos
bound
dec
jno
dec
xchg
shrl
add
inc
mov
jno
test
in
out
adcb
shrb
inc
xlat
jle
xchg
sub
cli
sbbb
pop
call
call
outsb
ljmp
sub
pop
cmp
mov
mov
add
rcrb
adc
repz
add
adc
cld
or
sub
pop
xchg
insl
add
shlb
in
arpl
arpl
sahf
and
int3
mov
pop
outsb
pop
cmp
out
inc
jp
mov
xchg
and
orb
sbb
pop
pushf
pop
and
repnz
lret
xchg
cmp
mov
and
sahf
add
and
cmp
out
dec
jne
int3
xchg
xchg
imul
sahf
clc
mov
movsl
adc
mov
shrb
stos
jns
cmc
popa
sbb
mov
xor
out
ss
add
in
inc
icebp
aas
mov
cltd
adc
jle
sbb
cmpsl
lock
xor
and
orb
xchg
mov
adc
out
push
lods
add
dec
xlat
aas
push
popa
xchg
cmp
call
push
test
jp
cltd
jo
iret
mov
bound
imul
sbb
mov
sbb
xor
add
mov
das
fiadds
push
lret
decl
test
lret
or
test
div
or
aas
popf
sbbl
imul
popa
and
mov
or
leave
hlt
movsl
jae
hlt
dec
dec
mov
int
adc
cmp
adc
shlb
xlat
andb
ja
pop
out
lahf
sar
addr16
pop
dec
cmpsb
sub
int3
mov
in
arpl
test
mov
inc
leave
sbbl
xor
mov
aad
es
ret
js
or
sbb
lahf
ja
movsl
push
push
bound
and
ror
mov
js
mov
sbb
sub
jo
pusha
sub
pop
lret
xlat
jno
call
and
mov
or
dec
sub
inc
push
rcrl
pusha
dec
or
mov
lds
pop
les
jecxz
cmp
dec
aaa
jns
and
out
inc
push
lods
fildll
xchg
mov
dec
mov
xor
out
popf
mov
add
inc
aaa
lret
add
vcvtsi2ssl
fstl
add
mov
mov
scas
mov
push
lods
push
scas
add
xchg
cmpsb
and
repz
andl
or
lahf
lcall
lds
daa
push
mov
xor
sarl
sub
and
push
out
notb
roll
fsubr
dec
sbb
ljmp
xor
or
sbb
mov
mov
push
push
ljmp
mov
and
inc
outsl
out
push
mov
inc
push
xchg
push
add
cmpsl
dec
xchg
cmpsb
cmp
jge
aaa
sti
lahf
sahf
or
mov
sbb
mov
gs
out
xor
in
mov
xchg
dec
mov
sbb
fs
mov
popa
cld
xchg
xchg
pop
push
flds
lcall
loop
xor
adc
mov
sti
jbe
cwtl
sub
dec
xchg
pop
aam
sbb
arpl
add
into
push
fwait
divb
pop
sbbl
mov
in
loopne
jmp
sbb
cmpl
and
inc
push
dec
cld
jg
pop
or
mov
ss
and
test
xchg
call
data16
test
mov
adc
mov
ljmp
pop
mov
iret
outsb
push
movsl
jns
cwtl
jb
or
cmpsl
xor
and
les
and
mov
push
fmull
lods
sub
in
daa
imul
lods
in
cmpsl
pop
sbb
into
dec
jle
push
in
dec
rcll
out
jle
xchg
scas
xchg
push
gs
xor
add
mov
je,pn
cmpsb
jge
pop
ret
xchg
add
test
push
jg
mov
pop
sub
push
dec
cmp
or
sarb
mov
dec
sub
bndstx
adc
loope
test
sub
in
dec
jnp
xor
push
mov
out
sbb
jecxz
movsb
pop
ret
inc
fwait
dec
ror
icebp
mov
shrl
push
push
or
js
xor
push
aas
pusha
scas
and
fiadds
xchg
mov
jle
adc
test
cmp
inc
outsb
clc
je
es
mov
jae
xchg
jno
dec
mov
push
fisttpl
mov
push
mov
cli
notl
gs
mov
pop
fstpl
pushf
pop
xor
xor
rcll
test
fldl2t
aaa
mov
std
and
push
icebp
iret
mov
bound
insl
roll
mov
aas
add
cltd
cwtl
subl
push
jecxz
not
pop
into
or
jnp
pop
lds
int
out
mov
add
pop
rorb
mov
push
inc
fildl
loop
addr16
in
mov
out
sahf
inc
imul
pushf
and
lock
orl
repnz
pop
dec
and
loop
push
fbstp
scas
imul
xchg
es
loopne
dec
xor
cmp
mov
dec
push
into
sbb
ffree
out
sbb
outsl
cwtl
and
insb
outsb
sbb
dec
stos
push
icebp
shrb
mov
mov
scas
sbb
add
movsl
pop
cs
jl
mov
imul
mov
in
mov
icebp
add
nop
mov
push
ss
imul
xchg
mov
jg
idivb
sbb
addb
stos
inc
aas
outsb
test
xor
xchg
mov
jbe
repz
aad
push
negl
xor
pop
mov
mov
pop
xchg
shl
cli
sahf
pop
ljmp
push
sub
adc
inc
inc
fwait
gs
lahf
adc
mov
jno
ret
fisubs
cmp
mov
or
cmp
nop
sub
adcl
test
lea
lds
negb
fwait
jbe
add
xchg
js
sahf
cmpsl
loop,pt
cmp
sub
push
jb
lea
jb
dec
inc
pop
decl
ljmp
sbb
mov
lock
cli
shll
pushf
aaa
test
sub
inc
mov
int
push
ffree
repnz
dec
call
and
fistpl
lret
add
xor
or
sub
inc
fisubrl
in
nop
mov
xchg
pushf
lret
dec
push
mov
icebp
adc
jge
xor
jle
fiadds
popf
test
cmpsl
mov
mov
mov
lcall
into
pop
idivl
adc
jo
test
xchg
cmpsb
sarl
js
push
jns
aad
lret
mov
push
ret
hlt
ret
in
or
jno
pop
out
mov
inc
lods
rcr
jae
iret
shufps
push
or
mov
pop
popa
jo
arpl
loopne
ja
call
popa
leave
sbb
call
pop
icebp
push
push
sub
pop
out
ja
out
mov
imul
mov
popa
dec
pop
leave
test
xor
call
add
sbbl
push
dec
mov
leave
jmp
sti
call
testl
add
sbb
adc
andb
out
sub
cs
iret
sar
pop
orl
stos
popf
cs
negb
dec
sbb
outsb
and
out
dec
aaa
xchg
in
mov
cli
push
mov
push
les
xor
loopne
sbb
pop
xchg
loopne
pop
dec
leave
int
movsl
scas
sub
lahf
push
and
and
xor
pushf
notl
inc
jmp
inc
jmp
rorb
icebp
xchg
or
add
mov
dec
push
pop
push
fdivl
push
add
enter
sub
in
mov
adc
cmp
icebp
jp
mov
clc
mov
adc
scas
mov
dec
mov
fstpt
inc
cmp
and
data16
bound
sub
pop
cmp
testl
push
outsl
jbe
lock
lock
and
lahf
and
imul
js
jae
push
adc
mov
es
in
test
mov
jb
dec
xor
out
mov
popf
xor
aad
pushf
push
je
jno
test
xorl
sbb
sbb
dec
in
sub
scas
push
insb
out
lret
jae
lret
xor
xchg
sbb
insb
push
mov
push
pusha
sbbl
push
mul
cmp
lock
pop
cs
pop
cmp
pop
mov
mov
push
shll
lea
insb
fdivrl
pushf
and
or
mov
loop,pn
xor
mov
mov
cld
cmp
sub
or
sti
insb
mov
int3
cli
mov
test
mov
sbb
push
test
popl
pushl
bound
cmp
idivl
dec
popf
adc
mov
test
lods
push
arpl
cmpsb
jnp
lret
aaa
call
mov
mov
les
aam
sub
cmpsb
pop
xchg
cld
or
pop
insb
mov
rcll
out
push
or
dec
js
mov
ds
cltd
or
mov
pop
insl
adc
daa
inc
mov
call
adc
inc
inc
daa
rcrl
notl
jmp
push
out
cmp
dec
mov
lahf
pop
sub
lds
dec
pop
imul
cmpsb
jbe
xchg
sub
or
add
dec
xor
push
push
sbb
sub
mov
js
and
inc
fs
lock
das
and
cli
or
out
sub
dec
es
in
loop
subl
clc
jle
xor
into
notl
jecxz
dec
dec
pushf
outsl
loop
xchg
xchg
cs
push
gs
imul
dec
decl
jg
push
mov
fdivrs
test
out
dec
iret
sub
imul
hlt
arpl
inc
xor
push
mov
xchg
stos
les
icebp
and
push
insb
cli
mov
dec
jecxz
cmp
icebp
xchg
js
out
xor
mov
push
or
test
sub
mov
xchg
cmp
sbb
and
call
out
push
sbb
add
lcall
shlb
mov
aaa
jb
aam
jmp
pop
dec
or
es
outsb
pop
sub
inc
popf
xor
into
mov
mov
dec
cmp
cmp
scas
cmp
in
pop
or
sbb
jbe
iret
mov
mov
int
mov
cmpsb
dec
pop
add
test
mov
stc
aam
movsl
cmc
scas
jmp
in
push
cwtl
das
cwtl
popf
sub
ret
jge
leave
xchg
inc
xchg
test
out
es
jp
outsb
scas
pop
or
rclb
fcoms
adc
lds
xchg
insb
dec
jae
xorb
cmp
xchg
lock
pop
lcall
push
lahf
ss
dec
pop
mov
or
cmp
fcomip
loopne
fwait
sti
jmp
mov
clc
xor
sbb
dec
movsl
jle
lea
inc
cmp
jge
pop
pushf
add
in
imul
stc
ret
imul
inc
push
nop
jmp
pop
mov
push
negl
xorb
xchg
out
push
cltd
cmpl
stos
and
mov
xorb
sub
in
insb
shrb
adc
roll
ficomps
xchg
cmp
mov
xchg
dec
add
mov
les
dec
sbbb
mov
xchg
add
mov
and
int
roll
je
ficoms
fsubs
lret
movsb
shrl
aaa
inc
out
ret
jb
pop
push
jl
mov
push
arpl
rcrl
adc
ljmp
inc
push
xchg
fcmovu
xor
imul
test
push
es
lock
insl
adc
nop
mov
int
lods
int
pop
repz
xor
sbbb
test
dec
xchg
cmp
ja
insl
sbb
add
or
and
add
inc
cmp
cwtl
das
test
dec
imulb
sarb
fidivrl
mov
jne
push
lcall
ljmp
xor
iret
jecxz
lret
fidivl
mov
jmp
xchg
movsl
push
ficomps
mov
and
or
ret
cmp
leave
fisttps
out
jae
jns
es
scas
jb
les
xchg
push
in
and
shll
adc
imul
add
imul
andl
jo
xchg
movsb
stc
pop
cwtl
inc
and
adc
add
and
arpl
or
inc
aaa
ja
in
sub
addr16
outsl
ljmp
adc
push
out
cmp
shlb
jmp
lahf
pcmpgtw
and
inc
sbb
shld
lret
sbb
mov
jbe
dec
jecxz
jae
mov
shl
and
mov
das
add
jae
mov
and
jnp
enter
and
shlb
sub
mov
fisubl
cmp
or
or
mov
mov
or
mov
mov
les
push
sub
mov
and
in
in
dec
movsl
mov
jp
adc
scas
push
out
bound
inc
mov
cmp
fstl
int
pop
stos
scas
stos
sarl
mov
xor
lods
lahf
scas
sub
fwait
cmp
inc
xchg
imul
lods
xor
ljmp
mov
lcall
std
out
or
xor
test
mov
sbb
jne
push
push
cltd
mov
fucomi
test
mov
ja
sti
adc
xchg
sbb
lods
and
fsubr
das
arpl
and
xor
ret
mov
fsubrp
call
ja
lds
mov
push
dec
sub
notl
add
movsl
movsl
inc
in
mov
mov
jl
inc
mov
xor
sbb
lret
mov
and
test
nop
inc
js
inc
mov
cltd
inc
or
call
mov
mov
mov
add
dec
nop
push
jp
jns
outsb
adc
into
test
lahf
orl
ljmp
cmpsl
or
das
bnd
ret
dec
pop
sub
sub
jl
push
fwait
adc
push
xchg
jmp
test
sbb
mov
inc
pop
or
call
or
lock
xor
andb
push
sbb
pop
fidivl
pop
popa
cmpl
cmp
push
stos
fcoms
cmc
pusha
jbe
push
add
and
xchg
push
jnp
ss
dec
es
bswap
call
nop
adc
mov
or
std
gs
xchg
movsb
jmp
shlb
add
notb
inc
aas
jl
popa
xchg
pop
sub
mov
in
aas
push
aad
stc
das
sahf
mov
and
or
sub
lods
hlt
and
jmp
dec
jmp
inc
lret
cmp
in
cmp
sti
test
jge
jns
notl
out
pop
mov
iret
or
fimuls
cld
std
inc
fbstp
inc
jno
mov
dec
mov
pop
out
adc
xor
add
lahf
daa
sbb
sub
pop
scas
sbb
push
mov
js
pop
ret
sub
pop
or
dec
dec
pop
jne
cltd
push
inc
rclb
shrl
cltd
lret
fadds
mov
sti
pop
js
lods
mov
in
hlt
push
in
in
out
sub
dec
and
adc
mov
cmpsb
push
ftst
repnz
inc
and
loope
dec
and
jecxz
mov
dec
or
xlat
test
push
cs
lahf
sbb
popf
enter
fldcw
cmp
xchg
ja
add
aad
dec
stos
ja
sub
jmp
scas
mov
adc
pop
aad
mov
xor
insl
push
in
cmp
dec
sbb
add
sbb
sbb
aam
mov
or
cld
bound
push
jge
shrb
mov
pop
les
rclb
sti
aaa
push
jnp
leave
inc
add
leave
cmpsl
loopne
mov
subl
std
dec
test
xor
scas
mov
inc
sub
cmp
sbb
cmp
mov
xor
mov
add
movsl
in
push
in
push
in
xchg
inc
ss
sub
dec
or
gs
push
hlt
adc
outsl
inc
inc
sub
in
addr16
push
push
out
in
jnp
aaa
mov
xchg
xor
dec
out
in
ds
and
xor
mov
outsl
lods
add
pop
xor
mov
aas
add
jno
and
test
mov
inc
ficoms
pop
xlat
cld
add
bound
stc
scas
cmp
inc
rolb
mov
aas
pop
dec
test
shll
xlat
sub
adc
mov
fwait
das
bnd
xor
imul
jp
in
lcall
mov
in
cmp
loop
mov
sub
hlt
scas
fldenv
add
push
gs
jb
lcall
xor
es
aas
dec
les
cltd
popa
out
imul
ja
push
mov
lds
mov
sub
xchg
imul
shr
add
inc
and
push
add
hlt
aad
sub
pop
jbe
popf
shl
ret
and
cmpsl
push
in
lcall
stos
out
or
mov
pusha
or
push
inc
mov
popf
ljmp
divl
cmp
cmp
sti
dec
push
aaa
into
ficoms
push
mov
cmp
xchg
outsl
cmp
jle
dec
shrb
nop
jl
test
lret
outsb
push
pop
xchg
mov
mov
arpl
pop
das
les
push
fistpll
enter
pop
outsb
xchg
mov
sub
out
push
push
dec
pop
sbb
pop
hlt
sub
je
dec
jnp
notl
xchg
in
outsl
dec
mov
push
cs
mov
shrb
insl
sbb
xor
cmpsb
mov
mov
mov
push
lcall
jns
cmpsb
and
pusha
fcmove
xor
stc
sti
cld
mov
mov
pop
xchg
sbb
mov
lahf
arpl
or
jmp
fimuls
incb
dec
mov
sub
push
jne
je
lods
xchg
sahf
lods
ret
jno
dec
ljmp
in
popf
xor
and
pushl
cmp
sbbb
ret
mov
mov
adc
push
vunpckhps
rcl
das
push
mov
jmp
inc
jbe
pop
mov
dec
in
and
ficoml
dec
cmp
jecxz
jecxz
sbbb
push
out
lods
dec
or
lea
sahf
into
lods
fucomi
sub
jb
mov
enter
cld
mov
mov
push
cmp
sub
pop
fiadds
sbb
into
lret
cmp
xor
jmp
xor
arpl
xchg
test
aad
mov
pop
fildl
loope
adc
mov
and
push
fsubrl
xchg
out
les
aas
shlb
mov
dec
inc
fsubrp
outsb
sub
or
or
pop
std
aad
pop
decb
fucomi
cmp
cmp
cmpsb
xor
aaa
cmpsl
mov
push
insb
mov
cmp
in
aad
cmp
int
cmp
test
rcrb
ja
loop
push
dec
xchg
adc
inc
xchg
jmp
mov
jo
inc
sarb
ljmp
mov
fnsetpm(287
mov
out
mov
push
aam
or
xchg
pushf
mov
pushf
xor
adc
push
and
mov
mov
xor
insb
fisubrl
or
inc
pop
out
loope
jecxz
aam
ja
pavgw
sbb
inc
lahf
pop
xor
fsin
xor
shll
repnz
mov
pop
aaa
mov
popa
dec
mov
mov
mov
lret
sub
push
xchg
add
mov
jo
sbb
test
mov
jno
loope
nop
jnp
test
mov
std
xchg
mov
outsb
mov
and
movsl
in
add
xchg
out
jbe
sbb
inc
mov
xchg
aas
loope
stos
pop
cmpsb
dec
stc
jge
scas
dec
sub
add
clc
and
popa
sub
push
xor
lcall
push
stos
sbb
test
out
mov
out
loope
jb
imul
mov
out
std
mov
or
in
adc
mov
aaa
and
sub
cmp
or
jmp
js
jp
add
adc
sub
es
mov
cwtl
xchg
jb
imulb
jns
push
test
pop
or
xchg
idivb
call
or
fisubl
dec
push
or
cld
adc
push
gs
pop
loop
fwait
mov
pop
push
jl
lahf
xchg
inc
es
cmc
test
int
repnz
loop
add
xlat
lock
neg
pusha
cmp
iret
adc
xorl
inc
dec
dec
or
out
add
push
sub
pop
and
and
stc
lods
inc
xchg
pop
jbe
lds
aad
cmpsl
mov
es
rcl
xor
loopne
add
mov
faddl
and
sbb
mov
mov
fucomip
test
insb
and
pushf
push
dec
cmc
mov
in
mov
push
lods
popf
fldenv
push
mov
test
test
ss
xchg
jbe
add
mov
pop
stos
cmpl
aas
fstps
fcmovnb
jl
mov
out
and
stos
mov
mov
cld
sahf
inc
out
rclb
shll
xchg
mov
sbb
jmp
mov
cmpsb
pop
daa
cli
mov
gs
sub
and
fstpl
mov
leave
xor
or
test
inc
push
in
dec
je
bsf
xchg
push
movsb
movsb
inc
pop
out
adc
jbe
pop
and
adcb
call
push
popf
adc
xor
cwtl
testb
mov
sti
mov
xlat
ret
inc
xchg
mov
ss
mov
adc
mov
inc
push
dec
popa
out
rclb
mov
lods
jmp
sbb
jge
pop
mov
push
pop
cmp
jmp
shll
es
pop
sbb
mov
sub
jne
xlat
js
mov
or
cli
ficompl
and
dec
pop
push
and
sub
lret
sbb
mov
push
addb
pop
cmp
cltd
pop
dec
repz
jge
xchg
sub
fildll
push
int3
iret
shlb
lea
lret
das
subb
fcmovnbe
cmc
add
aam
xchg
or
notb
ss
imul
adc
push
or
ss
lock
push
in
or
sub
lea
push
loop
dec
mov
mov
jg
cmp
xor
imul
and
shl
rorl
xlat
sub
lods
cmpsb
nop
jecxz
mov
aas
push
or
dec
test
add
lahf
test
arpl
adcl
sbb
leave
sub
cwtl
push
mov
mov
incb
push
inc
popa
test
popf
negb
and
sub
adc
in
enter
sub
mov
mov
cmp
test
or
test
inc
data16
loop
lret
in
mov
ja
test
aad
sbb
mov
fld1
jbe
xlat
cmp
notb
dec
pop
jbe,pn
dec
je
mov
xor
mov
mov
stos
cmp
pop
int
inc
repnz
ljmp
enter
pop
cmp
add
in
cwtl
lahf
imul
jno
pop
xor
inc
xchg
mov
out
sahf
dec
movsb
ret
int3
mov
pop
and
mov
stc
cmpsb
xor
pop
push
dec
mov
mov
insb
loopne
out
push
mov
mov
xchg
ret
cmc
pop
movsl
in
repnz
loopne
dec
fnstenv
sbb
pop
fucom
ja
xchg
pop
sub
lds
stc
arpl
rcll
pop
icebp
cs
andb
cltd
sub
jbe
mov
test
fisttpl
dec
loopne
and
fiaddl
inc
push
push
fimull
mov
aaa
into
pop
sub
sahf
cmp
int3
jae
sahf
sahf
adcl
bound
cmc
mov
in
mov
sub
out
inc
sarl
ficoml
push
cmpsb
call
imul
sbb
jnp
nop
inc
call
xchg
pop
hlt
mov
pop
mov
fnsave
les
sbb
shrb
popf
lock
pop
andl
repz
push
add
dec
aad
in
xchg
or
mov
loop
nop
xchg
add
sbb
sbb
imul
addr16
jb
sub
sbb
mov
dec
lahf
xor
int3
cmp
and
insl
mov
rdtsc
out
add
mov
lret
divb
jp
sbb
ja
mov
pmaddwd
addr16
ds
adc
jecxz
mov
insb
shl
cmp
in
enter
mov
rcll
pop
push
outsb
and
leavew
dec
inc
cmc
shll
sbb
inc
scas
pop
stos
adc
xchg
inc
mov
rcr
and
lret
adc
mov
pop
dec
rcll
xchg
rorl
ret
insb
dec
lcall
ss
cli
outsb
and
push
push
mov
or
xor
jo
pop
pause
aad
jb
mov
lds
stc
popa
mov
mov
or
cmp
dec
dec
popf
insb
rolb
mov
add
in
shll
ret
loop
dec
push
scas
xor
rcrl
cld
mov
ja
in
shrb
hlt
ss
cmp
or
fsubs
jp
jb
sbb
inc
cmp
xchg
test
dec
dec
add
mov
adc
lcall
orl
add
jb
stos
out
push
dec
mov
jnp
inc
cwtl
out
scas
mov
scas
repz
movsl
test
outsl
jp
aam
add
and
push
mov
fsubrl
mov
adc
popf
dec
and
inc
jbe
dec
lock
int3
outsb
xchg
pop
int3
stos
dec
mov
stos
pop
in
je
imul
mov
mov
in
sbb
out
mov
clc
sahf
pop
outsb
stc
gs
pop
into
xor
int
mov
push
cwtl
mov
and
popf
jl
push
hlt
add
jnp
pusha
sub
pop
push
cwtl
in
or
lock
mov
adc
sbb
jne
push
cmpsl
outsl
lods
test
lcall
stos
inc
dec
push
inc
outsb
rcll
fmul
repnz
jmp
cmpsl
xchg
and
lock
fisttps
mov
insb
pop
sub
fdivr
inc
pop
cmpsl
je
inc
cmpsb
enter
sbb
orl
out
out
or
pushf
in
jae
sbb
mov
or
xchg
lods
stc
fmull
sbb
sbb
ret
xor
cmovbe
fs
dec
mov
ljmp
and
mov
mov
add
sbb
les
lds
repz
jecxz
test
and
fidivl
arpl
sub
inc
push
test
cmp
mov
jo
mov
jno
test
mov
leave
pushf
insb
sbbb
enter
sahf
or
imul
pop
xor
clc
cmp
pop
cmc
add
push
je
or
adc
imul
jae
movsb
xchg
jb
out
push
dec
je
mov
mov
negl
jge
push
notl
hlt
xchg
adc
add
leave
or
mov
push
jae
filds
ds
cmpsb
mov
pop
or
xor
xor
jo
stc
and
xchg
jbe
mov
out
jmp
jecxz
leave
nop
add
jae
dec
cmp
mov
fisttpl
cs
xchg
adc
mov
push
and
and
lods
pushl
dec
in
cmp
pop
aaa
adc
out
jo
jnp
xor
stos
test
pop
insl
mov
sub
or
push
dec
sub
push
int
int3
jbe
cs
clc
pop
test
push
shl
inc
sti
jne
sbb
mov
stc
sbb
mov
leave
xchg
nop
mov
fwait
ret
and
and
mov
movl
xlat
mov
mov
push
sbb
pop
dec
fcompl
sbb
mov
inc
and
pusha
fimull
lret
lcall
iret
cld
mov
mov
or
cld
xchg
inc
dec
cmp
hlt
sahf
outsb
sbb
shlb
jns
sub
enter
dec
cmp
xlat
xchg
call
dec
das
xorl
shlb
mov
mov
dec
sub
mov
stos
clc
cmp
jmp
sub
dec
pop
stos
push
into
data16
or
push
pop
outsb
and
adc
rcrl
mov
dec
ljmp
insl
pop
cld
mov
inc
xchg
rclb
fstpt
pop
aas
std
pxor
loope
adc
cli
in
inc
fiadds
ret
int
mov
pop
jg
dec
or
xchg
mov
push
mov
cmp
inc
add
loope
push
and
dec
xlat
xchg
push
push
sbb
lret
pop
sbb
aad
xchg
adc
lods
cmp
mov
push
lods
addb
xorb
adc
pushf
sub
sti
cmp
loope
xchg
push
loope
test
and
sub
pop
jmp
lea
jecxz
mov
mov
in
aas
fmul
xor
add
jmp
mov
mov
jno
dec
push
and
xor
sarl
add
fsubr
sub
out
hlt
sahf
stos
jecxz
adc
aam
and
push
jmp
fstpl
shlb
rorl
mov
xchg
popf
inc
add
cmp
mov
sub
stos
lcall
jmp
ds
mov
cmp
setge
push
ret
fwait
push
adc
imul
test
outsb
add
mov
int
mov
int3
mov
mov
and
into
ss
inc
cmpsl
fs
inc
push
jae
call
fisubrs
sbb
das
jl
fsub
lret
xchg
cs
mov
jb
popa
sub
xor
mov
inc
sbb
pop
testb
mov
ss
clc
add
loopne
jmp
lds
inc
loopne
repnz
pop
inc
and
pop
fsubl
out
jno
cmpsb
fcomip
fistl
ja
cmc
jno
pop
xchg
or
push
aam
outsb
sbb
mov
mov
xchg
shll
das
cmp
in
out
xchg
push
test
shlb
lods
jp
test
pop
fidivs
mov
jbe
inc
cwtl
lock
mov
push
adc
push
aas
insb
shl
dec
pusha
and
push
mov
outsl
fldt
push
nop
enter
shrl
mov
mov
lahf
test
out
cmpb
repnz
jo
repz
fidivl
loopne
cmpsl
jbe
lahf
cmp
loope
cmc
les
push
mov
scas
subb
pop
sub
jge
iret
mov
into
enter
push
jnp
and
push
outsb
dec
je
dec
mov
test
cmp
repz
cmp
and
popf
test
shrl
dec
sub
imul
add
jecxz
jl
cmp
xchg
sub
and
mov
mov
hlt
inc
stos
mov
out
int3
movsl
cmp
outsl
jnp
pop
cmp
cmp
pop
repnz
jns
mov
dec
loop,pt
sub
xchg
cmp
jecxz
and
dec
pop
pop
test
add
stos
test
clts
push
mov
test
pop
fcompl
mov
dec
outsl
add
movsl
mov
ret
jns
arpl
lock
mov
gs
imul
push
cs
in
ds
outsl
loopne
std
dec
xor
add
inc
add
lcall
adcl
roll
lret
push
fdivl
sub
inc
fs
inc
xchg
sub
fistl
cmp
or
xor
aad
pushw
test
mov
dec
js
pusha
stos
jle
inc
mov
pop
jns
inc
decl
push
loop,pt
jb
ljmp
mov
add
xchg
movsb
cwtl
cmp
push
jbe
loop
dec
push
pop
cmp
out
jnp,pt
imul
fcmovnb
leave
mov
sarl
pushaw
pop
push
sahf
dec
xor
mov
loop
movsb
negl
loopne
ja
ret
repnz
and
rcrb
call
add
inc
aas
add
mov
push
fbld
je
int3
pop
sarb
pop
dec
out
jg
addb
lret
mov
mov
enter
mov
push
subb
mov
mov
mov
mov
mov
pop
imul
cmp
push
pop
in
call
in
mov
add
jle
mov
xor
mov
push
enter
movsb
and
xor
ficoml
shrb
pop
lret
mov
push
iret
scas
lods
popa
lret
es
lahf
sahf
mov
or
popa
mov
loopne
sbb
adc
mov
pop
ds
cs
cmp
dec
dec
pop
pop
cmp
lods
and
xchg
mov
out
in
xchg
lds
rcll
fs
scas
pushf
jmp
and
inc
cmp
pop
icebp
cmp
jle
jns
mov
out
ret
mov
fidivs
dec
cmp
lea
push
cmpsb
test
or
push
cmpsl
mov
xchg
mov
or
lret
daa
mov
mov
inc
inc
ret
mov
cwtl
notl
stos
inc
pop
je
addb
sub
or
inc
push
push
hlt
sarb
daa
rcrl
sub
out
clc
cmp
cltd
cli
addl
mov
insb
xchg
xchg
rcrb
cmc
outsb
pushl
out
push
imul
shll
cmpsb
mov
jle
xchg
repnz
aas
mov
or
ss
or
pop
cltd
gs
jno
fisubl
outsb
mov
int
cld
mov
outsl
in
out
or
and
mov
scas
or
xchg
jle
jns
popf
xor
xchg
push
out
and
xchg
inc
add
and
das
in
mov
in
adc
inc
imul
mov
adc
clc
xlat
sbb
adc
js
scas
dec
loop
repz
push
sub
pop
inc
loop
cli
mov
icebp
inc
lret
arpl
ficoml
pop
mov
xchg
cmp
jae
leave
loop
popl
adcb
aam
push
sar
popf
faddl
xchg
jb
mov
and
push
fistl
scas
out
and
out
jmp
cmp
mov
mov
mov
xor
push
mov
push
xchg
test
cmp
fcmovnb
popa
dec
inc
inc
arpl
call
in
ds
lret
loop
dec
enter
xchg
lds
cmp
push
push
mov
xchg
pushfw
xchg
mov
mov
out
and
out
loope
out
addr16
ljmp
add
xchg
addr16
out
shlb
cmp
push
cli
data16
cmpsl
xor
gs
int
and
xchg
fldenv
fimuls
jge
gs
mov
sub
imul
testl
cmpsb
lahf
mov
adcl
outsl
add
fcompl
daa
push
lret
loop
mov
inc
popa
sbb
outsl
push
in
lods
ljmp
jmp
dec
js
das
addr16
ljmp
pop
jl
xor
stos
sti
pop
int
dec
pop
adc
push
mov
mov
addb
lcall
jbe
hlt
mov
in
fcomi
mov
lock
mov
xor
push
add
lods
rclb
ja
xor
push
out
subl
aam
pop
adc
inc
fildll
xchg
ficompl
pop
dec
push
push
or
add
sub
cmp
cs
jp
int
call
xorl
in
xchg
add
stos
xchg
out
loop
out
cmpsl
out
in
ret
cmp
sub
and
mov
fldenv
adc
mov
in
adc
jge
cwtl
repnz
xchg
aas
loop
mov
dec
add
add
stc
cmpl
iret
pop
push
push
les
xchg
lods
sub
mov
push
inc
cld
push
call
ja
inc
ret
mov
sbb
jno
jmp
adc
jle
je
sarl
ffreep
sbb
sbb
or
and
and
push
iret
imul
jnp
mov
clc
jo
xchg
lods
setnp
into
divl
push
sbb
pop
std
pop
xlat
cs
sbb
inc
fxch
mov
out
loopne
or
inc
mov
mov
mov
mov
dec
mov
in
ds
bound
int
mov
gs
jno
movsl
sub
dec
mov
mov
and
cli
in
push
repz
out
mov
ljmp
xchg
dec
out
jo
shr
dec
or
mov
or
int3
push
repz
mov
push
icebp
sbb
cmp
call
jo
xchg
inc
fcoms
xor
fmulp
sub
lret
jb
sbb
add
push
insb
dec
mov
sahf
dec
in
push
inc
jae
sub
jae
inc
cli
pushf
sbb
cmp
clc
adc
into
mov
data16
mov
arpl
sti
scas
or
or
stos
push
lock
mov
xchg
dec
lea
hlt
pop
add
popf
inc
in
das
push
xchg
cmc
lock
rcl
stos
js
mov
and
das
xorb
mov
add
mov
test
inc
push
push
stc
sub
in
jno
in
pop
sub
push
sub
jne
cli
inc
cmp
or
mov
jg
out
add
sub
out
or
jmp
pop
sub
add
ret
mov
mov
xlat
and
sub
popa
add
idivl
add
xor
fnstsw
inc
dec
adc
pop
inc
sbb
dec
dec
push
or
loop
jle
mov
stos
nop
test
fsubr
xor
xor
imul
outsb
loope
stos
sbb
insl
pusha
in
sbb
pop
andl
pushf
ljmp
mov
push
sub
and
out
decl
cld
popf
movsb
ja
std
shlb
aad
mov
mov
mov
cmp
adc
mov
cwtl
daa
aad
outsb
ss
repnz
stos
movsb
fs
into
loopne
cltd
sbb
dec
cmp
dec
repz
dec
insl
aam
xchg
scas
mov
mov
sbbb
lret
push
cmp
arpl
jo
dec
sub
cmp
std
xchg
lods
sub
inc
sbb
mov
push
dec
mov
imul
int3
jne
stc
xor
mov
sbb
mov
or
mov
fists
or
es
pop
or
sub
adc
aam
xlat
insb
xchg
xchg
pop
add
sbb
aaa
dec
mov
ret
cmc
lods
sbb
push
add
movsb
in
loop
mov
lret
fdivl
mov
ret
push
inc
popf
cmp
and
loope
pop
sar
js
ja
loop
iret
fstpl
leave
pushf
inc
and
dec
fwait
outsb
push
shl
cmpsb
inc
xchg
xchg
mov
jnp
xchg
add
push
adc
push
adc
jp
jmp
jns
inc
int
xor
mov
adc
cwtl
sub
or
and
out
incb
lret
in
clc
divb
insl
int
ds
push
push
sbb
orb
in
add
stos
add
xor
push
sub
add
fidivl
pop
imul
loopne
mov
xchg
jae
or
dec
and
imul
sar
cmc
xor
pushf
push
jl
test
nop
mov
loope
jmp
call
sti
mov
sbb
xor
lcall
lcall
push
test
aas
ja
sbb
lret
popa
cmp
aam
mov
inc
pop
or
lahf
fwait
outsl
mov
scas
out
pop
jp
stos
in
cmp
fildl
mov
enter
xchg
push
out
mov
cmp
ret
andl
int3
add
into
gs
cwtl
jbe
xor
xchg
xchg
inc
jb
repz
movsb
movsl
call
rcr
test
cmc
cmp
lret
ret
int3
bound
push
out
cmp
and
test
ss
frstor
in
mov
mov
add
adc
jge
cmp
ja
and
les
std
cltd
cmpb
repz
lret
mov
mov
sub
dec
fnstsw
es
sbb
cmp
popf
dec
cld
xchg
aad
int
inc
negb
fbld
dec
mov
push
cmpsl
jb
arpl
pop
cmp
fnsave
in
mov
andl
fidivrl
cli
mov
mov
sbb
test
negb
mov
stos
ret
add
fwait
xor
mov
push
and
push
sub
js
into
test
outsl
shr
adc
mov
sbb
imul
push
or
pushf
in
adc
js
adc
fistps
insb
xchg
jecxz
sub
add
movsl
pusha
outsb
fcoml
es
mov
aam
xchg
xchg
mov
xchg
and
movsl
call
aad
in
xchg
pop
leave
fnsave
lahf
shlb
mov
or
jmp
leave
sbb
adc
fs
mov
or
mov
sbb
jns
fisubs
lods
shl
int
xor
lea
je
test
jmp
mov
fwait
lods
jmp
pushf
xor
mov
inc
es
scas
loope
mov
dec
cwtl
xchg
jbe,pn
mov
xchg
mov
cltd
rolb
fdivp
or
movsb
rep
jecxz
fists
sub
mov
inc
loop
pop
cmp
aam
ja
jno
test
push
pop
stos
sub
data16
dec
xor
mulb
cmp
sub
hlt
mov
sub
push
mov
xchg
dec
pop
je
call
sbb
cmp
sahf
js
inc
push
cmp
xchg
pop
iret
cmp
or
jecxz
aas
sbb
in
popa
push
jo
ds
es
dec
std
bswap
dec
add
mov
push
mov
push
sbb
lods
jmp
stos
push
adc
or
mov
outsl
out
xchg
xchg
and
and
ljmp
rcrl
mov
roll
into
shl
scas
push
in
das
lret
cmpsl
fwait
mov
jns
cs
jp
pop
ret
mov
adc
mov
fwait
sarb
jmp
xchg
test
out
jns
mov
pop
mov
ret
pop
fxch
rcrb
pop
hlt
lods
push
sbb
jg
sbb
fcoms
ss
mov
adc
jns
mov
ret
add
fimull
sbb
mov
dec
lret
mov
sbbl
insb
xor
cmp
mov
inc
aas
out
jno
test
sti
mov
aas
ds
shl
pop
iret
push
or
leave
push
das
imul
mov
jns
lock
xlat
lods
mov
in
or
inc
arpl
filds
sets
repnz
jp
or
push
mov
hlt
pop
jmp
jle
lock
mov
mov
lock
push
nop
add
or
bound
enter
popa
rorb
xchg
mov
insb
pop
imul
cmc
jae
arpl
xchg
sub
or
mov
ljmp
lcall
mov
test
mov
or
jl
xchg
orb
mov
inc
fcmovu
ret
in
cmp
mov
rcrb
cltd
dec
pop
lock
mov
cmpsl
pop
into
insl
gs
xor
arpl
push
cmpsb
ret
out
ret
imul
lcall
clc
rorl
dec
mov
insb
fs
out
rol
and
test
scas
xor
and
push
movsb
jge
and
xchg
pop
gs
fisttpl
mov
out
inc
mov
sbb
mov
rcrl
cwtl
sbb
test
xchg
mov
aas
arpl
stc
iret
or
stc
cli
sbb
pop
mov
mov
lds
dec
pop
cwtl
data16
mov
and
lret
rcrb
loop
lea
mov
insb
push
xchg
xchg
dec
add
repz
es
add
mov
pandn
mov
jp
xor
sbb
mov
ret
jp
jmp
sarb
xchg
sbb
stos
pop
cmp
addr16
lods
cwtl
insl
xchg
mov
in
mulb
or
daa
cmpl
mov
mov
lds
sbb
loope
cmp
cmp
aad
aaa
mov
out
subb
lcall
cmp
mov
negl
lcall
stos
xor
and
stc
jb
or
insl
mov
mov
push
mov
ret
cmc
or
add
fs
int
int
sbb
loopne
lret
loope
loopne
xlat
dec
cmpsl
mov
mov
movsl
ja
cmc
jle
adc
movsl
jns
andb
scas
inc
inc
ss
stc
daa
loop
xlat
sbb
jbe
or
pop
push
mov
fucomp
aaa
mov
out
sub
in
lahf
fadd
inc
fnsave
pop
addb
andl
push
iret
or
bound
notl
rcrl
sbb
adc
dec
jge
lahf
data16
add
mov
test
js
test
mov
clc
pop
sub
shrb
js
add
hlt
mov
xor
jmp
sbb
int
push
jns
add
ret
mov
inc
les
insb
inc
mov
xchg
xor
cwtl
cmp
cmp
dec
sbb
in
out
mov
xlat
sub
out
pop
call
adc
push
xor
out
push
fbstp
dec
fnstsw
rep
inc
in
mov
mov
repz
and
ret
cmp
hlt
sub
xor
popa
cmp
loope
das
mov
inc
xchg
or
cltd
xchg
adc
ret
lcall
bound
into
dec
icebp
mov
nop
sub
ret
sub
rcrb
hlt
cmpsb
ret
sub
push
mov
mov
sbb
add
stc
dec
xor
sub
mov
pop
insb
inc
pop
jecxz
jne
scas
and
push
dec
add
stc
cld
insl
test
cmc
push
sub
mov
es
jns
sub
jp
dec
jnp
dec
pop
xchg
outsb
jnp
xchg
xor
sbb
leave
outsl
ret
dec
jecxz
nop
push
stos
xchg
outsl
dec
mov
fwait
rorb
and
adc
adc
fistpl
nop
cmp
xor
loope
xchg
sub
sbb
nop
mov
cs
and
aam
mov
sbb
rclb
shlb
loop
movsl
mov
sub
pop
data16
testl
pop
aam
or
fprem1
sahf
imul
cmpsl
sahf
sub
xchg
jl
aaa
inc
gs
insl
mov
pusha
cli
ret
or
inc
in
xchg
sub
or
pop
sub
mov
mov
lea
mov
sti
adc
cs
lcall
call
cmp
inc
data16
movsb
adc
push
xor
jmp
loopne
and
inc
loop
inc
or
dec
clc
pop
or
mov
sbb
push
jno
and
sarl
pop
lret
int
xor
inc
loopne
add
mov
fcompl
lret
and
jbe
xchg
xchg
divb
lock
pop
and
push
leave
aaa
out
add
ret
lea
fidivrl
popf
roll
arpl
loop
inc
pop
ret
sub
jecxz
movsl
fdivrs
outsl
xor
movsl
xchg
add
xchg
dec
mov
sub
mov
pop
sub
adc
mov
adc
inc
and
or
int3
pop
xor
pop
pop
ret
jl
inc
mov
lcall
xor
dec
bnd
loopne
mov
cmp
push
push
cmp
aaa
adc
out
movsl
mov
das
adc
mov
and
shrl
into
add
xchg
mov
andl
pushf
jns
dec
ljmp
push
xor
adc
jbe
jno
flds
lods
jbe
pop
adcl
dec
fists
fidivs
jne
roll
sbb
rorl
pop
dec
push
adcb
sarl
rcr
into
pop
rol
pop
add
leave
scas
aam
icebp
push
cld
mov
pop
push
push
xchg
insb
arpl
jne
and
addr16
aam
fcomps
sub
dec
mov
mov
pop
sbb
sarl
cmpsb
les
jnp
gs
int3
cmpsb
adc
iret
ret
daa
fcoms
ja
push
sub
dec
sbb
addl
iret
fldenv
movsb
adc
mov
lea
sub
cli
and
push
or
push
addr16
mov
in
hlt
orl
sbb
cmp
lret
jnp
scas
fucomip
xor
cltd
std
jb
ss
rclb
xchg
and
mov
sahf
stos
enter
imul
sbb
pop
sarl
add
sbb
movsb
xor
movsl
popa
jb
cltd
test
sub
mov
mov
movsl
in
sbbb
lcall
cltd
pop
test
adc
into
shll
scas
inc
cmpl
sub
mov
out
aaa
out
lea
cmp
pop
jmp
or
adc
outsb
es
jo
mov
push
jne
dec
push
jbe
les
jl
out
in
push
mov
dec
stos
add
xchg
loope
sbb
aam
in
push
sahf
xor
mov
adc
mov
xchg
push
adc
jle
sub
mov
shrb
clc
pop
jg
sub
shl
dec
lahf
sarl
sbb
pop
jp
mov
jbe
outsl
lods
cmp
sarl
jne
lods
mov
mov
pmulhw
cmp
jecxz
gs
rcrb
sbb
mov
leave
sub
add
arpl
inc
testb
arpl
pop
sbb
scas
cmc
test
xchg
out
jbe
or
mov
imul
mov
push
xchg
outsl
mov
bound
es
dec
icebp
inc
push
inc
aad
xchg
call
js
rcr
and
xchg
push
pop
mov
clc
adc
pop
aam
lret
sbbb
in
adc
insl
xor
jl
mov
daa
or
cmpsb
cmp
inc
xchg
les
dec
cmp
lcall
scas
sbb
stos
fstps
cli
push
push
enter
bound
je
fisubl
pop
cmp
jns
iret
notl
or
or
fs
jle
dec
mov
out
test
loop
adc
add
or
popl
gs
and
adc
cld
inc
test
mov
and
push
les
vpackuswb
lds
mov
out
aas
cmpsb
cmp
outsb
lds
sahf
ret
push
dec
loopne
xlat
iret
fs
jbe
xor
je
dec
daa
sbb
in
or
aaa
push
sbb
mov
inc
jge
push
dec
insb
mov
sahf
mov
xor
cmpsb
mov
inc
andl
in
loop
push
pop
sbb
test
push
enter
dec
mov
mov
rcrb
push
test
test
sbb
scas
mov
cs
int3
les
xor
pop
push
jmp
imul
xchg
insl
icebp
cmp
add
test
mov
push
aaa
xchg
or
sahf
fs
lods
mov
icebp
je
aas
nopl
xchg
sub
das
adc
xor
loop
push
push
stos
ds
add
pop
nop
xor
push
mov
ljmp
icebp
insb
js
jg
arpl
sahf
or
out
cmp
ljmp
mov
jge
add
sbb
test
lods
cld
xchg
in
push
sbb
mov
mov
stc
inc
negb
leave
ret
xchg
loop
xchg
mov
cmpsb
mov
fnstcw
imul
imul
xchg
jge
add
pop
inc
pop
mov
mov
cwtl
cmp
xchg
jnp
js
icebp
jmp
out
cld
dec
cltd
mov
repz
push
test
pushf
ficomps
sbb
mov
popf
movsl
and
xchg
mov
sub
or
push
mov
loope
xor
clc
dec
daa
popf
daa
ret
inc
lret
cmp
mov
pop
icebp
sbb
hlt
mov
and
cmc
scas
les
cmp
jge
dec
adc
inc
sbb
sub
inc
lcall
push
push
cs
xor
jg
icebp
movsb
xor
iret
loope
add
pop
add
sbb
jp
mov
dec
fbstp
addl
add
dec
stos
sbb
jp
push
and
ds
lcall
cmpsl
xchg
cmpps
inc
testl
jg
or
jecxz
data16
jp
push
daa
es
insl
cwtl
xor
push
lcall
lret
and
xlat
push
in
cmpsb
je
cmpsb
std
lods
fbstp
sub
int3
fadd
std
push
addl
sti
inc
fmul
push
xchg
cmp
imul
cmp
sub
pop
cmpsl
out
dec
or
fwait
pop
sti
add
sub
mov
xor
mov
lret
add
push
adc
xchg
push
fmuls
rorb
push
xchg
inc
mov
pop
sub
popf
enter
out
inc
out
loope
sbb
lea
dec
icebp
stc
sub
insl
fstpl
cmp
dec
fsubr
arpl
in
add
add
and
push
repnz
sbb
rclb
test
jmp
or
test
add
bound
in
push
loope
jb
cmp
push
sub
jb
inc
pop
push
arpl
lock
adc
pop
inc
sbb
mov
repz
sti
jbe
fwait
cmp
int3
push
je
test
test
add
cmc
hlt
push
shr
int
mov
jecxz
lret
mov
jecxz
xor
out
cmp
roll
lods
push
xchg
add
outsl
test
dec
add
pop
stos
mov
bound
addr16
and
mov
inc
popa
push
mov
xchg
xlat
mov
pop
test
cmpsb
push
cmp
pop
out
cmp
cmp
fcoml
xor
push
xlat
cli
push
repz
rorb
outsl
jl
lods
xlat
mov
add
and
imul
inc
inc
push
mull
adc
lods
rolb
int3
out
inc
enter
mov
lcall
sbb
pop
in
je
pop
loop
cwtl
mov
arpl
sub
lret
into
enter
xchg
and
sub
sbb
dec
and
fdivrl
inc
mov
ret
inc
cmc
sbb
out
out
add
push
xchg
leave
outsl
push
pop
xlat
cmpsb
lock
lahf
or
push
mov
ret
lret
mov
loop
dec
sub
jmp
mov
imul
push
inc
mov
push
inc
stc
push
in
in
push
pop
adcb
test
loop
and
xchg
cwtl
cwtl
cmp
dec
mov
push
ljmp
jmp
outsl
adc
push
jge
mov
jge
out
movsb
mov
mov
pop
insb
or
into
enter
scas
out
ja
aas
jmp
dec
xor
add
sarl
fnstcw
cwtl
js
mov
js
or
cmp
pop
in
mov
jg
pop
mov
jno
inc
out
add
das
push
fwait
adc
mov
sub
adc
mov
pop
cmpsb
in
ret
inc
push
fdivs
fucomp
sub
mov
xchg
inc
xor
loop
dec
push
jmp
loopne
sub
mov
out
adc
add
lds
outsl
repnz
jmp
insl
push
jp
xor
xor
decl
add
enter
ret
xchg
and
vandnpd
bound
aaa
xchg
xor
mov
xchg
sub
sub
adc
cmp
aaa
pop
dec
pop
mov
movsl
xlat
xorl
popa
fs
aas
pop
pop
data16
lea
xchg
dec
lods
daa
ds
std
push
stos
daa
jge
std
mov
lods
lods
sbb
or
inc
ja
aas
mov
sahf
pop
push
xchg
mov
xchg
jno
and
pop
cmpb
cmp
shlb
inc
popa
add
mov
idivl
push
add
fcomi
es
adc
jae
int3
xchg
in
fcomi
ffree
pavgb
lret
addr16
fldt
xor
test
dec
pop
fdivs
xchg
push
xchg
and
push
sbb
add
lea
call
inc
arpl
dec
aad
sti
je
repnz
push
scas
add
pop
arpl
rolb
or
mov
cmpsl
xlat
mov
leave
sarb
fsubs
int
mov
js
push
or
xchg
pop
jle
jg
andb
dec
adc
sbb
fcmovnbe
sbb
sub
test
mov
fbld
loope
mov
mov
jae
or
pop
dec
adc
or
dec
push
lret
cmc
xor
mov
push
lea
mov
push
cmp
test
dec
sub
mov
fnstsw
dec
ss
jae
jmp
hlt
push
fldcw
lods
test
sub
std
repnz
and
scas
repz
dec
clc
inc
dec
lods
roll
inc
cli
aaa
lods
fmul
xor
mov
mov
add
pop
jo
sub
jno
jg
pusha
xor
cltd
test
insl
mov
in
push
adc
ret
imul
lds
cli
pop
pop
mov
push
aam
cld
pop
jge
mov
and
cwtl
inc
lret
ss
add
mov
pop
fisttpl
call
popa
jo
fdivrs
xchg
mov
fsub
js
stos
mov
xchg
jmp
push
push
and
jne
ljmp
mov
popf
mov
lods
js
data16
inc
fisubrl
aaa
pop
adc
daa
cmp
jp
push
jns
xlat
jl
mov
imul
hlt
lods
repnz
push
xlat
cmp
lcall
in
add
fcoms
stos
or
rclb
inc
loop
jns
dec
cmp
dec
fcomps
mov
out
or
pusha
push
mov
mov
sti
xchg
cmp
or
adc
push
dec
aaa
sbb
fsubrl
outsb
mov
lahf
iret
divb
testb
jb
jmp
push
mov
sti
mov
adc
cmp
pushf
xor
fldcw
mov
xor
push
pop
pushf
dec
mov
in
lret
xor
fistps
fnstenv
movsl
ret
jecxz
mov
mov
in
roll
jo
inc
lret
push
add
sub
loopne
adc
xor
out
pusha
repnz
cmp
sub
cmp
ss
push
mov
pop
cmpsb
mov
sbb
mov
pop
cltd
outsl
sbb
cld
sub
pushf
or
fsubr
sub
add
ret
dec
in
jmp
outsb
push
aam
cli
cmc
cmp
jbe
and
pop
rcl
inc
xor
test
jmp
sbb
es
daa
mov
enter
imul
pop
lods
pusha
andl
jle
add
in
jecxz
xchg
cltd
xor
jg
push
and
loope
js
lahf
and
ds
aas
jle
push
push
cmpb
jb
out
lds
sub
hlt
jnp
jle
fsubrs
fstpl
adc
dec
repnz
lahf
push
in
roll
push
lret
cld
aaa
sbb
push
ljmp
jno
xchg
mov
testl
outsb
sbb
xchg
mov
clc
pop
test
xor
pushf
rorb
xchg
das
mov
mov
in
outsb
push
and
mov
fsubs
cmp
cld
xchg
test
push
inc
mov
sub
in
mov
not
arpl
bound
js
push
sub
push
lcall
and
lahf
xor
jnp
sub
sti
sub
rorb
fildl
into
push
and
inc
jmp
sti
xchg
fidivrs
mov
jae
in
lods
mov
in
pushl
in
cmp
inc
cli
adc
cs
cmc
div
aad
loope
dec
scas
mov
push
jge
add
int3
repz
push
jbe
mov
sbb
js
lods
dec
push
testl
sub
cli
mov
mov
movsb
push
sub
mov
push
loope
cmp
insb
sub
mov
mov
pop
outsb
shld
jo
or
mov
pusha
rcr
test
lahf
jne
cs
stc
shll
test
lahf
shll
das
cmc
cmp
jae
adc
jp
test
jbe
fcmovnu
fidivs
out
add
jns
mov
sub
xor
jns
mov
sbb
bound
ret
loope
test
dec
loope
inc
sarb
push
mov
lods
ret
outsb
int3
xor
add
sahf
cmp
in
jbe
arpl
push
sar
xor
jbe,pt
and
into
addr16
push
or
scas
stos
mov
cld
mov
idivl
xchg
scas
mov
mov
test
mov
mov
ret
mov
iret
mov
scas
dec
mov
mov
xor
cmc
loop
and
mov
in
das
sti
push
pop
jne
fidivs
bound
idiv
pop
aaa
mov
xor
ret
sahf
scas
ja
inc
push
push
in
scas
call
jne
hlt
addr16
fdivr
sbb
jle
jp
cmp
jle
ljmp
jbe
mov
push
daa
sub
add
push
fmull
xchg
pop
lcall
in
push
js
shl
cmpsl
lea
mov
sub
sub
lret
and
mov
pop
rcrb
in
cmp
adc
xor
insl
pop
leave
hlt
cmp
add
jne
movsl
mov
popf
test
iret
lods
enter
cmp
rcrl
push
movsl
dec
leave
fcomps
xor
mov
not
mov
pop
addr16
and
adc
sahf
add
mov
push
gs
push
mov
lods
das
jns
push
or
aas
mov
sbb
gs
or
sub
loop
scas
push
xchg
xchg
call
das
push
add
jmp
push
lcall
push
fcmovnb
inc
cmp
call
mov
insb
sub
aaa
rcrb
daa
and
cmp
mov
xor
mov
add
pusha
add
imul
sbb
adc
inc
fmuls
lods
pop
out
mov
adc
dec
jae
das
lods
pop
in
stos
push
mov
pop
mov
lahf
ret
inc
ret
add
dec
push
cld
cmp
scas
mulb
mov
clc
popf
int
popf
movsb
aaa
or
out
rcrb
scas
xchg
sti
jp
pop
mov
cmpsb
jge
sbb
icebp
cmc
das
xor
popa
push
mov
test
dec
pop
mov
int
or
add
mov
cmpsb
pop
outsb
int
repz
in
mov
jo
lsl
aas
ja
aas
test
inc
icebp
pop
push
cmp
loop
xchg
ret
cltd
add
inc
pushf
shll
sbb
sbbb
hlt
pop
mov
pop
pop
jb
cmp
jmp
mov
mov
lock
add
xor
mov
arpl
lret
stc
adc
cmpsb
enter
pop
int
mulb
sahf
jecxz
push
das
cmp
push
dec
stos
and
rcrb
fistpll
adc
cltd
or
mov
aad
fsubs
jge
and
push
iret
inc
push
addr16
push
jl
jnp
cs
adcb
jmp
scas
push
lock
iret
movsb
aaa
jbe
addr16
and
mov
sbb
pop
ljmp
idiv
addb
negb
add
nop
fs
pop
adc
jge
inc
cmp
std
pop
dec
and
push
gs
jmp
gs
sbb
inc
addr16
jle
inc
xchg
out
pushf
fbstp
inc
add
pop
lock
or
mov
mov
add
pop
jp
adc
mov
sbb
insb
test
lds
pop
add
negl
fsubrs
fistps
mov
mov
mov
lcall
push
imul
mov
mov
outsl
dec
lods
xchg
call
pop
xchg
and
das
outsl
icebp
cmp
int
shll
xchg
daa
xor
push
out
movsl
scas
xor
inc
int
push
int3
mov
mov
and
or
enter
or
cmpsl
pop
hlt
jae
in
ss
dec
in
imul
dec
fisubs
call
xor
xlat
repnz
pop
aas
dec
lods
sarb
xchg
mov
out
sbb
fcompl
iret
loopne
xchg
adc
into
out
inc
push
mov
aas
pusha
addb
cltd
gs
jb
jp
sbb
popf
jo
jnp
push
enter
add
test
inc
aad
out
xchg
mov
inc
xor
push
push
pushf
test
mov
mov
mov
mov
ds
inc
fisttps
iret
xor
push
mov
out
xor
cwtl
jecxz
and
std
add
sbb
clc
adc
sbb
and
daa
cmp
or
movb
pop
nop
pop
loop
or
mov
pop
ljmp
xlat
xchg
lods
lods
xchg
lods
pop
int
ja
dec
out
shll
pop
enter
daa
jp
popa
mov
aad
mov
addr16
je
add
nop
inc
jge
dec
scas
flds
gs
testw
xor
int
ja
hlt
int
jbe
adc
aam
pop
test
nop
cltd
out
cmpsl
xor
iret
xchg
adc
std
sub
pop
push
push
mov
dec
xchg
sub
cmp
cmpsl
rcrl
jp
fmul
cs
cwtl
sbb
mov
mov
push
movsl
or
jl
das
int3
popa
push
lret
sahf
or
aad
in
sbb
in
lret
xor
mov
inc
fsubrl
inc
fsubs
xor
push
cmp
xchg
mov
mov
and
xor
or
push
les
bound
jb
cmp
ficoml
sub
mov
dec
js
js
rol
jbe
incl
cltd
jne
lahf
push
push
jmp
sarb
lea
in
pop
and
bound
xor
fsubrl
sub
adc
jae
dec
faddp
pop
adc
imul
pop
lds
dec
stc
and
inc
sbb
addl
sahf
dec
pop
push
loop
adc
mov
or
inc
xchg
mov
int
cmpsb
lock
push
mov
cs
dec
iret
adc
dec
stos
dec
mulb
adc
cmp
stos
outsl
mov
mov
in
in
lcall
loopne
aad
notl
jecxz
sbb
xchg
rcll
xlat
mov
dec
cmp
scas
inc
stos
sub
test
out
test
mov
cmp
pop
shl
adc
pop
cmp
mov
ficompl
sub
lods
or
scas
jle
cs
loop
adc
xchg
pop
flds
add
lods
sub
and
imul
adc
cli
mov
sub
xlat
xchg
lea
mov
popf
sub
test
popf
jne
pop
stos
cli
sbb
aam
cwtl
cmpl
push
jl
mov
notl
lods
cltd
loop
stc
adc
sub
pop
xchg
jmp
out
xchg
scas
inc
cmpsl
in
xchg
stos
lods
jbe
pop
sbb
popa
aam
test
aas
mov
das
movsl
mov
jmp
mov
inc
lea
repnz
iret
lahf
js
mov
inc
push
es
mov
ret
in
xor
shrb
or
add
test
loopne
add
jne
and
clc
sub
sbb
push
out
rolb
mov
icebp
jne
and
jae
sub
sub
mov
repnz
sbb
imul
subb
das
data16
push
stos
or
ds
scas
adc
push
test
lods
jbe
popa
push
mov
or
data16
hlt
mov
orl
dec
push
push
push
xchg
fidivrl
imul
movsl
jl
daa
cmpsl
push
sub
xchg
push
mov
call
test
xchg
sub
lret
jl
add
jmp
sub
mov
and
lret
into
gs
rcrl
mov
insb
cwtl
and
pop
loop
xor
inc
enter
das
push
ret
jl
cmpsl
lahf
lods
dec
pop
fnsave
cs
stc
jns
lcall
ss
dec
jno
inc
rcl
cmpsb
dec
dec
adc
sbb
add
push
std
sarl
pop
pop
lahf
repnz
xchg
pop
rcll
nop
int
lret
or
pusha
fisttpl
lea
out
data16
cmp
in
inc
jnp
fs
call
adc
push
enter
addr16
xchg
cmpsb
mov
fsub
nop
push
pop
jl
xor
arpl
data16
dec
insb
add
jae
adc
xchg
mov
or
jne
jl
out
sub
pusha
lea
sbb
adc
pop
iret
iret
cmpsb
jnp
jo
js
pop
imul
inc
ss
clc
outsb
std
jg
adc
fimuls
push
outsb
fdivl
add
pop
int3
mov
mov
and
mov
mov
stc
jnp
cld
inc
mov
gs
jmp
outsl
jmp
sarl
mov
hlt
mov
loope
sbb
aaa
jns
es
sub
xchg
dec
mov
mov
sti
bound
lret
fists
cmp
mov
rorl
jmp
clc
popa
into
or
pop
mov
sub
scas
jecxz
loope
pop
aas
dec
adcb
push
pop
je
and
aad
inc
dec
notb
sub
js
lds
push
mov
add
int
pop
push
iret
sbb
mov
fnstcw
dec
daa
cmpsb
mov
cmc
mov
pop
xor
test
mov
mov
xor
pusha
mov
pop
shlb
mov
rorb
push
adc
adc
and
data16
ret
fildl
pop
adc
ss
xor
adc
gs
es
sub
mov
push
fldl
mov
xorb
das
sub
pop
xchg
mov
imul
cmp
lea
cmp
enter
push
mov
ja
adc
ja
out
popa
sbb
clc
popf
xor
ret
sub
xchg
or
mov
imul
fiaddl
int
into
mov
push
outsl
push
lahf
pop
aaa
xchg
rcrb
ja
outsb
test
minps
push
and
movb
sbb
scas
ret
iret
fsubl
out
out
fidivs
dec
pop
mov
aaa
data16
cld
xor
push
out
mov
xchg
dec
outsl
in
jg
ljmp
out
in
stc
xor
xchg
add
push
les
inc
jnp
lods
inc
push
mov
fwait
mov
xor
stos
cld
inc
in
cltd
and
movsb
call
test
arpl
js
stos
mov
jecxz
stos
cld
insb
add
les
roll
mov
dec
inc
pop
out
mov
mov
or
xlat
push
rcll
out
out
pop
rol
pop
pop
and
jno
js
dec
lock
sub
sub
in
fnsave
shll
call
out
andl
int3
pop
xchg
jns
mov
lock
gs
orl
jno
stos
xor
and
loopne
cmp
icebp
xor
mov
push
lods
ds
into
add
push
inc
pop
aam
int
lea
addr16
inc
jmp
aaa
adc
add
pop
lahf
dec
data16
jl
mov
push
pop
push
inc
push
incl
in
and
inc
out
aam
cltd
jae
divb
out
mov
ret
xlat
in
test
add
repz
xchg
ja
push
adc
mov
xor
push
outsb
loop
mov
fsubrs
fcompl
enter
bound
mov
adc
in
or
add
lahf
mov
mul
ds
cmc
rcl
and
inc
loopne
adc
mov
sbb
scas
pusha
mov
push
fmuls
adc
xchg
mov
inc
shll
cmpsl
mov
cmpsb
mov
sub
ret
stos
add
jg
or
jge
mov
push
cmp
xor
jle
adc
pusha
jbe
sahf
xchg
xchg
int3
dec
push
pop
cmp
stos
cmp
repz
dec
flds
dec
sub
jbe
xchg
aaa
and
mov
int
cmp
jae
push
fdivrs
push
jmp
push
iret
cmpsb
push
and
sub
xor
cld
or
stc
cmp
js
sbb
leave
and
xor
sub
nop
xor
or
insl
xchg
inc
fiaddl
in
lock
sub
dec
dec
cmp
xchg
push
inc
cli
je
jo
fldt
push
iret
mov
lret
dec
aas
or
test
and
pusha
xchg
inc
rolb
mov
add
mov
mov
mov
daa
mov
out
xchg
inc
leave
lods
sbb
cwtl
adc
xchg
aaa
mov
lret
je
cmp
adc
mov
xor
imul
out
xchg
jns
add
lcall
mov
pop
bound
nop
push
dec
lret
adcb
enter
xor
jg
sub
and
dec
push
jne
mov
and
pop
test
cs
sub
push
jns
cmpsl
adc
cltd
test
lea
xchg
jns
fidivs
pop
xchg
xor
mov
xchg
sub
jp
and
cmc
repnz
cwtl
addr16
cs
adc
xchg
aas
mov
movsl
jp
cmp
popf
repz
setle
mov
adc
popa
enter
rolb
xor
sbb
sbb
into
cmp
xchg
lcall
in
lret
test
aas
mov
lods
and
dec
dec
ficoml
mov
inc
call
add
jle
sub
adc
pop
jbe
jecxz
pop
mov
or
mov
leave
mov
je
test
int
adc
jnp
xchg
inc
mov
outsl
jnp
xor
xchg
pop
imul
rorb
fwait
outsl
sub
dec
add
jns
cmpsl
push
int
cmpsl
mov
iret
jge
test
scas
adc
mov
dec
adc
inc
jecxz
push
loopne
cmpl
shl
inc
fsts
cmc
hlt
mov
xchg
inc
in
jmp
lcall
cmpsb
shl
mov
and
or
push
xchg
call
fsts
arpl
xor
pop
test
jae
jo
outsb
out
jge
lret
repz
test
pop
xchg
xchg
jno
xlat
dec
mov
stc
fwait
popa
mov
inc
sbb
inc
in
out
filds
sti
inc
xor
or
push
aad
fisttpl
call
lahf
push
shl
fdivrs
repnz
mov
inc
fincstp
stos
ds
popa
lods
mov
adc
fdivs
cmpsl
sbb
sub
mov
fnstsw
ss
mov
popa
rorb
jae
jno
mov
adcl
lret
fwait
das
icebp
pusha
dec
setp
push
sub
in
je
fs
xor
push
jmp
data16
inc
dec
int3
or
or
cli
push
test
mov
adc
addl
mov
rcrb
test
loop
mov
ss
pop
fwait
cwtl
stos
xor
pop
mov
aas
ret
sbb
sub
cmpsl
sahf
arpl
mov
jle
ss
ret
out
cmp
test
and
jno
ror
xor
enter
aaa
popf
pop
adc
lea
cwtl
nop
dec
mov
out
hlt
jno
sub
xchg
mov
or
mov
loopne
sub
pusha
xchg
mov
lahf
sub
test
jg
iret
js
pop
bound
mov
fdivs
push
xchg
adc
pop
mov
sbb
ds
test
gs
sbbl
jb
fsubrs
xchg
std
cltd
dec
icebp
imul
lock
nopl
xlat
fdivrl
pop
push
fistps
and
sbb
insl
mov
imul
lock
mov
into
mov
xor
sub
fcomip
test
std
cmp
pusha
pusha
stc
jns
dec
sahf
lcall
mov
fistps
test
inc
jns
xchg
add
es
sbb
mov
push
loope
notb
jecxz
ret
sub
movsb
out
cmpsl
mov
cmp
out
push
xchg
add
in
jmp
cli
inc
sbb
cmp
cmp
cltd
cmc
mov
es
jae
push
push
mov
inc
aas
loop
in
push
push
or
mov
adc
and
or
mov
decb
pushf
out
cmc
test
prefetcht2
outsl
fwait
push
pusha
mov
movsl
jb
ss
jge
mov
pop
mov
filds
jg
xor
in
push
rcl
leave
jbe
rolb
sarb
shlb
mov
sub
mov
or
repnz
rcl
pop
dec
mov
es
add
cmpsb
mov
dec
inc
fdivrl
or
sbb
scas
dec
push
ret
aaa
jl
insl
popf
dec
push
pop
enter
jp
and
popl
sub
sbb
xor
push
mov
addl
push
and
mov
adc
movsl
fsubrp
xor
pop
shlb
enter
js
xor
and
fstl
jp
mov
inc
fdivrs
xchg
lahf
mov
lock
lds
mov
scas
lret
sti
iret
xor
xor
mov
mov
js
in
cmp
xchg
incl
imul
add
out
ret
xchg
xorb
pop
mov
outsb
jne
sub
sbbb
dec
pusha
dec
mov
mov
sbb
das
mov
cmp
xchg
mov
in
lods
push
jae
add
loop
sub
xchg
movsl
mov
xor
mov
and
lods
pop
lods
dec
test
mov
addr16
shlb
fidivrl
pop
push
inc
adc
fildll
push
sbb
lds
rclb
inc
push
mov
mov
or
aad
lahf
loope
ss
inc
push
push
inc
jge
mov
in
popa
or
pop
popa
ss
pop
adc
mov
cmpsb
scas
out
and
xor
rcrb
pop
jns
imul
ret
mov
movsb
inc
or
mov
pusha
lds
dec
scas
add
xlat
jne
cmpl
icebp
xchg
add
pop
jl
xor
xor
pop
ljmp
call
mov
loope
xchg
pop
mov
ds
mov
aad
push
cmp
je
inc
fidivl
cltd
xor
jmp
jne
jne
xor
add
push
xchg
xor
mov
stos
test
hlt
dec
sub
inc
sbb
xor
lcall
sarl
dec
dec
xchg
pop
pop
sbb
dec
lcall
test
pop
jno
leave
and
adc
jbe
lods
test
mov
mull
mov
push
test
shll
xor
mov
aas
test
je
or
xchg
xor
pop
stos
mov
mov
ret
mov
aam
add
cmp
and
jmp
dec
incb
xchg
test
sub
jl
data16
and
jle
adc
pop
sbb
or
in
movsb
sbb
cmp
add
lcall
adc
arpl
xchg
cmp
pop
das
mov
sbb
sti
push
cmp
stc
or
lret
jp
pop
cmp
push
test
pop
mov
cltd
add
mov
add
fidivrs
leave
sbb
jbe
mov
mov
repz
dec
aam
mov
lret
cmp
icebp
in
pop
divb
cmp
jge
push
cmpsl
daa
mov
dec
enter
mov
rcl
loope
pop
cli
es
bound
sti
or
mov
cwtl
ja
cs
mov
mov
and
cmp
jno
subb
mov
adc
arpl
push
push
inc
xor
inc
mov
test
sbb
inc
mov
rolb
and
imul
ljmp
ljmp
stc
cwtl
jae
cmp
orl
inc
mov
push
xor
jnp
rcrl
mov
mov
sbb
cmpb
mov
xlat
pop
xor
jl
xchg
inc
jnp
pop
out
mov
and
jne
adc
movsb
lcall
and
loopne
lcall
fadds
into
cmp
jg
and
fxrstor
push
add
cmpsl
add
jp
pop
movsl
fists
hlt
test
jo
mov
test
lods
inc
pop
pusha
dec
sub
andb
cmp
jae
pop
stos
sahf
or
aaa
addr16
inc
loop
pop
cmp
dec
adc
jecxz
jecxz
mov
aas
lret
je
stos
push
and
shll
in
pop
int3
in
inc
jns
fisttpl
jecxz
popa
sub
dec
test
jecxz
push
lods
mov
adc
dec
les
pop
sahf
xchg
scas
jbe
pop
pushf
scas
or
xchg
dec
push
int3
ss
inc
add
movb
mov
mov
pushf
add
aas
ljmp
rcl
xchg
jecxz
lret
in
out
add
icebp
mov
in
adc
dec
inc
mov
arpl
push
shlb
movsb
jne
and
mov
mov
adc
pop
mov
and
jp
mov
notb
jno
jge
popa
lret
insl
int
scas
cltd
mov
xchg
xor
aaa
std
in
add
lock
lds
dec
jmp
mov
in
stos
xor
push
push
das
mov
in
shrb
xchg
into
push
mov
dec
mov
cmp
dec
mov
sti
scas
add
fdivrs
add
andb
addr16
lods
mov
imul
ja
fwait
orb
cmp
jmp
xchg
sahf
mov
repz
sub
pop
pop
into
cmp
mov
inc
dec
cmpsb
int
ljmp
out
es
or
pop
hlt
mov
jno
out
test
cltd
sbb
adc
cmp
lcall
mov
jl
and
leave
xor
test
loope
add
test
lock
pop
adc
mov
js
dec
insb
sub
mov
clc
pop
test
or
mov
ja
rclb
sbb
adc
leave
push
cmp
xor
and
maskmovq
idivl
testb
adc
inc
ss
cmpl
call
lret
mov
psadbw
in
push
jae
push
fmuls
cmp
sbb
sub
fldl
lahf
es
mov
push
cmp
dec
pop
sbb
and
or
lcall
xchg
dec
lods
insb
mov
and
sbb
lods
push
das
out
mov
pop
mov
roll
sbb
rorl
rcrl
or
pop
movsb
pop
xchg
out
decl
inc
fs
cltd
cmp
cmpsb
inc
inc
pop
or
popf
add
add
aas
mov
xor
lcall
inc
stos
notb
xor
sbb
dec
repz
xor
bound
les
int
cmpl
pop
mov
inc
call
fsubs
std
ja
int
pop
decl
xor
rcll
shlb
push
lock
jb
test
popf
fwait
inc
cmpb
xor
gs
pop
rorl
int
cmp
push
lods
imul
jns
mov
cwtl
dec
mov
divb
int3
push
mov
xlat
jbe
hlt
ja
mov
std
or
scas
call
lock
out
loope
gs
mov
sub
add
xchg
dec
test
xchg
pop
sbb
sub
sbb
test
popf
add
fistpll
push
bound
cmp
scas
nop
jae
ret
movsb
mov
std
jle
mov
push
ljmp
leave
aaa
lret
xchg
popa
jne
lret
fld
pop
das
imul
lcall
imul
sarb
fs
and
xchg
fstpl
cmp
imull
xchg
sarl
aaa
sub
fs
push
mov
add
cmc
rcrw
xlat
nop
jns
sbb
pop
in
dec
sbb
in
scas
mov
cmp
mov
sti
push
lea
ss
mov
mov
inc
lret
adc
lds
pop
sub
jo
aad
mov
outsl
inc
fldcw
xchg
int
xor
clc
pop
pop
in
fwait
popa
xchg
jns
aas
aam
adc
inc
jnp
loope
enter
inc
ljmp
jo
in
mov
outsl
sbb
out
out
mov
jnp
pop
sahf
sti
lahf
mov
into
xor
lock
test
mov
fisttpl
xchg
jge,pn
adc
cmp
cmp
call
mov
mov
fs
rorl
addr16
imul
outsl
mov
test
cmp
xor
jns
mov
arpl
pop
xchg
movsl
xor
aas
hlt
imul
mulb
rcrb
pushf
mov
aas
clc
xchg
or
sub
inc
sti
push
mov
nop
aas
mov
insl
negl
out
in
add
or
jbe
into
xlat
cmc
cli
sub
cmc
imul
std
sarb
pop
xchg
addr16
enter
jg
lcall
in
xor
jo
arpl
in
cmc
sbb
out
clc
mov
dec
sbb
imul
leave
push
hlt
jb
push
jge
fdiv
add
stos
and
and
push
je
mov
leave
dec
int3
fsubrp
push
adc
ljmp
fistps
cltd
cli
xor
sub
adc
jge
mov
fiadds
ret
stc
popf
stc
int
movsb
or
setp
sub
lds
pop
rclb
and
pop
test
outsl
lret
or
mov
jno
repnz
and
adc
push
test
lock
mov
nop
stos
xlat
mov
mov
mov
out
rcrl
pop
lods
ja
std
movsl
inc
imul
ret
ret
hlt
cmp
add
push
imul
cmp
fiadds
popf
and
out
test
aas
jnp
push
cwtl
insb
ret
scas
stos
adc
inc
push
idivl
and
adc
jns
push
pop
icebp
push
in
xchg
cmpsl
cmp
scas
push
bound
in
adc
mov
jbe
xor
or
mov
movl
push
sbb
ss
js
xor
push
inc
push
sbb
push
xlat
mov
xchg
adc
js
pushf
subb
dec
mov
push
cmp
vmread
cmpsl
xchg
lcall
pop
mov
lret
mov
add
rcr
ss
pop
or
jb
popl
fsubs
mov
popa
xor
pop
filds
dec
and
mov
in
pusha
pop
mov
add
sbb
ds
push
xor
mov
mov
int3
cltd
leave
int
jo
mov
decl
roll
mov
mov
push
fistpl
xor
stc
iret
stos
xorl
or
sbb
jecxz
decl
sub
inc
data16
jl
repnz
mov
sbb
or
mov
leave
pop
sar
mov
insl
nop
add
push
pop
orl
imul
add
addl
jl
shl
xorb
jns
stos
daa
mov
sbb
leave
xor
push
test
mov
sbbb
jns
add
fsubrs
sub
adc
mov
pop
push
xchg
add
ja
jg
or
adcl
sub
inc
mov
daa
in
aas
push
mov
loopne
ss
jmp
xchg
mov
sub
fidivrl
shl
mov
adc
test
cmpsb
xchg
pop
pop
jl
push
mov
cld
mov
sbb
subl
fidivs
pop
jecxz
jnp
sbb
daa
mov
jmp
and
aaa
sub
lret
inc
add
mov
cltd
test
hlt
push
insl
jnp
mov
jmp
xlat
cmp
pop
add
aad
int3
mov
imul
movsb
xchg
inc
jb
loopne
mov
ret
aas
mov
fmuls
mov
pushf
lretw
icebp
insb
loopne
ret
shlb
and
xchg
sub
outsb
add
mov
gs
mov
aas
pop
lock
mov
push
and
add
push
roll
jle
add
arpl
iret
pop
test
push
in
arpl
add
lret
data16
add
push
cwtl
ret
cmp
test
aam
push
cmp
data16
push
sbb
movb
add
mov
shlb
cmp
jge
int3
pop
sahf
std
inc
pop
mov
arpl
into
nop
test
fists
lock
and
mov
in
xchg
xchg
add
xorl
shll
jbe
insb
mov
jb
jo
loopne
aam
push
add
sbb
push
bnd
jl
jg
xchg
out
mov
jb
add
nop
push
xchg
scas
lods
push
cwtl
in
loopne
in
mov
std
cmp
pop
and
lret
inc
mov
mov
pop
ja
aad
mov
mov
insb
mov
mov
sbb
outsl
push
bswap
xor
mov
and
in
shlb
add
pop
add
ret
cmp
xchg
jbe
shll
fiadds
sahf
pop
mov
fadds
or
aas
xor
pop
icebp
rclb
dec
fisubs
mov
pop
cmp
bound
cmp
movsl
cmp
divb
outsb
out
outsl
je
sbb
mulb
stos
fadds
or
sub
push
arpl
fsubl
jns
std
push
jl
mov
mov
out
xchg
xor
mov
jge
sub
popf
cld
and
mov
adc
aas
and
push
pusha
ja
xchg
imull
add
xchg
sub
sahf
and
out
mov
inc
shr
cmp
mov
mov
adc
and
out
fdivl
mov
scas
outsl
orl
jbe
fadd
lods
push
push
push
iret
dec
sbb
js
or
dec
and
adc
push
mov
dec
add
push
jmp
nop
mov
mov
cmc
xlat
mov
outsl
movsl
sbb
or
and
push
xlat
outsb
rcrb
dec
loope
adc
mov
mov
pop
mov
loopne
push
iret
daa
pop
imul
ret
sub
mov
jne
fcomps
jae
in
bound
adc
sbb
or
sub
pop
lock
sub
mov
fidivrs
fldt
sub
mov
bound
mov
rcl
jno
loop
push
leave
add
mov
fstpl
sbb
dec
imul
lcall
push
lds
cld
sub
push
pop
push
push
mov
aas
push
or
repz
push
out
imul
ret
stos
notl
push
or
psubsb
in
arpl
cmp
cmp
add
sahf
or
jg
sbb
xchg
fsts
shl
sbb
data16
xchg
flds
adc
les
test
push
movhlps
aad
pushf
sub
rcrb
rcrl
decb
out
add
push
cltd
cld
int
arpl
lea
int3
add
sub
in
pop
xor
lcall
cmpsb
enter
movl
and
xchg
pusha
add
iret
and
push
dec
inc
inc
jns
xor
push
outsl
jo
in
and
push
pusha
xorl
lcall
cmp
movsl
sti
pop
mov
das
push
cld
icebp
xor
shl
sahf
fwait
movsl
das
xor
pop
clc
push
dec
lret
pop
xor
rolb
add
inc
push
mov
xor
sub
cs
fidivl
shll
inc
jmp
cmc
xor
lret
push
push
popl
imulb
push
rolb
out
jne
xlat
xor
or
fwait
cmp
mov
xor
xor
shll
sbb
ret
imull
sbb
xor
jo
push
mov
push
lea
iret
sbb
scas
sahf
insl
leave
inc
sbb
inc
scas
insl
add
jbe
xchg
inc
pushf
sbb
scas
int
cmpl
lcall
push
or
mov
adc
pop
sub
rclb
adc
add
add
sbb
cmp
xchg
mov
daa
cmp
add
gs
and
mov
in
rcrb
sbb
and
push
push
es
jb
jmp
shlb
lret
imul
pop
movsl
movsl
jle
inc
pop
out
lods
pop
pushf
scas
aas
int
push
dec
clc
in
addb
xchg
lret
dec
inc
jnp
push
and
dec
add
fdivr
xchg
bound
inc
in
dec
xchg
sub
shrb
sbb
pop
lods
add
cmc
jle
test
mov
sbb
cmp
insb
add
push
mov
adc
hlt
xor
cwtl
or
adc
ljmp
xor
lahf
or
pop
xchg
xchg
adc
and
clc
fnstsw
gs
pop
pop
push
push
inc
stos
aam
lret
inc
fildl
aam
sbbl
cld
inc
aad
popa
adc
jo
xchg
inc
sbb
dec
popa
sbb
xchg
imul
sub
ljmp
push
scas
pop
insb
addb
test
mov
orb
sub
out
adcl
inc
sub
shlb
jecxz
in
cmp
notb
adc
or
and
stos
addl
sub
jg
sub
pop
mov
cmpsl
sub
adc
jbe
arpl
gs
or
xchg
xor
mov
fldenv
adc
cmpsb
test
push
sub
mov
pop
insl
sub
lret
xor
sub
loopne
jl
popa
sub
or
adc
stos
loopne
jecxz
std
stos
add
inc
lods
fwait
dec
adc
inc
or
cmpsl
mov
sub
mov
cmp
insb
je
inc
pop
or
dec
mov
push
enter
ss
clc
lock
lea
bound
jae
inc
subl
icebp
xchg
lea
out
push
adc
xor
cmpsl
xchg
adc
inc
xchg
jle
adc
xor
xchg
aas
imul
outsl
push
sbbb
shl
add
xor
pop
pop
push
shll
push
pop
cmp
or
lods
aam
ret
mov
imul
lea
cmp
nop
mov
dec
loopne
dec
movsl
outsl
mov
faddl
les
movsl
xchg
pmovmskb
mov
cmp
shll
jo
push
dec
inc
dec
enter
ja
repz
ljmp
popa
stos
arpl
xchg
aas
mov
mov
lods
mov
mov
push
sahf
clc
fmulp
icebp
sarl
dec
fmulp
inc
out
dec
mov
and
push
jae
fstpt
cmpsl
es
inc
fsub
negb
push
out
sub
mov
aam
ds
sbb
fs
xchg
hlt
push
cmp
fnstenv
inc
xchg
push
add
out
test
decb
jmp
test
fbld
cmp
xchg
mov
adc
test
push
outsb
xchg
loop
dec
pop
cs
mov
fisttpl
cmp
cmp
mov
dec
je
jnp
rcl
cmpsb
subb
push
mov
jnp
movsl
add
pop
cmp
and
jle
sahf
mov
sbb
mov
pusha
adc
mov
mov
lds
sbb
pop
xor
fnstcw
inc
shld
out
mov
jbe
mov
rcrl
adc
fstp
out
pushf
mov
sub
fistpll
pop
inc
dec
cmp
cmpsb
jge
imul
pop
mov
test
mov
push
pop
cmp
push
test
lea
jb
and
and
and
inc
stos
and
mov
cmp
les
das
loopne
fistl
fldenv
dec
mov
and
inc
jbe
jae
push
popf
rolb
and
lods
rcll
jge
data16
aas
cwtl
jge
aam
xlat
push
lcall
push
mov
lds
xchg
imul
sbb
stc
repnz
mov
inc
hlt
and
scas
adc
mov
das
xor
cmpsb
jns
repz
popf
aam
in
jb
dec
inc
mov
movsl
push
sbb
lret
jb
jmp
pusha
add
ret
sahf
dec
push
sbb
push
cs
incb
das
in
das
lods
popa
xor
push
dec
cmpl
sub
icebp
lcall
xchg
ficoms
add
xchg
cmpsl
cmp
push
fsubr
fstpl
cld
scas
sbb
sarb
stos
aas
add
icebp
and
addr16
ficoms
icebp
mov
pop
mov
xchg
call
int
mov
ret
lock
leave
dec
pop
mov
imul
mov
mov
fstl
mov
fwait
inc
mov
fbld
in
or
mov
mov
fidivl
into
or
jg
mov
push
jne
rorl
fiadds
lcall
add
aam
or
aaa
mov
dec
or
adc
dec
inc
pop
dec
loope
inc
mov
cmp
push
fsub
and
out
add
ficoml
lock
and
push
sbb
add
jbe
sub
jmp
mov
add
xor
inc
fucom
testl
add
fnsave
xchg
mov
lahf
xor
lods
cmp
in
nop
pop
iret
aam
jae
pop
xor
mov
ss
shlb
and
loop
jae
fbstp
insl
int
push
push
xlat
clc
xchg
inc
sub
shlb
sbb
cmp
fldl
lcall
xor
push
sbb
fstpt
out
cld
fs
sub
or
mov
out
pop
add
add
push
push
jae
xor
popa
fidivs
sbb
adc
mulb
inc
jno
xor
xchg
idivb
test
mov
cmp
mov
fldl
movsl
clc
lcall
push
lods
and
ja
fdivl
jnp
dec
dec
xchg
imul
cmp
pop
ds
jl
aas
pushf
hlt
mov
bound
pop
cli
std
pop
mov
xchg
aam
imul
mov
mov
addr16
imul
mov
lcall
stc
xor
in
fsubrl
adc
shl
stos
xchg
push
lods
inc
movsb
push
cmpsb
mov
loopne
lret
rorl
mov
lret
lcall
loopne,pn
pop
rcl
nop
mov
add
sbb
daa
cmp
mov
into
adc
pop
jp
add
or
inc
mov
insb
dec
pop
sahf
pop
call
cmpb
lcall
outsl
mov
mov
cs
dec
xchg
jg
mov
decl
push
xchg
popa
std
adc
pushf
or
popa
xchg
add
push
inc
in
scas
ffreep
push
mov
add
push
int
push
addr16
and
stos
mov
in
subb
pop
sub
adc
add
scas
into
gs
cmpsb
cmp
mov
fiaddl
stos
xor
adc
enter
sbb
mov
sub
dec
stos
cwtl
sti
pop
dec
arpl
mov
lahf
push
sar
dec
mov
add
mov
mov
cmp
sbb
jle
int3
cltd
fistl
outsb
data16
shl
mov
fisubrs
adc
outsl
sbb
sub
cmpsb
push
mov
dec
repnz
nop
imul
cmp
sbb
ss
test
xchg
in
push
shld
movsl
imul
dec
xor
sub
shrl
pop
pop
mov
mov
fisttpl
xchg
fbstp
pushf
mov
mov
mov
pop
adc
sbb
inc
sbb
sbb
mov
xchg
cs
add
fcmovnu
mov
xchg
aas
in
popf
jno
pop
test
push
push
xor
andl
jge
mov
aaa
jbe
mov
inc
subl
push
jmp
sub
jns
fmull
ret
jge
hlt
and
int
push
prefetch
aas
xor
sub
mov
ss
rcrb
add
add
mov
sub
clc
and
lcall
pop
mov
ljmp
cmp
addr16
inc
mov
frstor
xchg
sbb
jle
pop
lods
arpl
pop
js
mov
hlt
mov
mov
and
adc
outsb
jbe
fbld
enter
mov
insb
bound
inc
aam
movsb
pop
sbb
es
mov
push
ss
jg
data16
jbe
iret
mov
push
push
push
xchg
xlat
xchg
pop
popf
adc
mov
and
mov
push
pop
or
xchg
lds
iret
gs
pop
xor
add
int3
outsl
sub
shrb
xchg
push
enter
rcrb
push
add
inc
stos
int
sbb
fists
xchg
fucomi
out
shrl
and
fisubl
pop
push
add
adc
fidivs
sub
xchg
mov
pop
push
mov
jne
cmpsb
mov
push
shrl
repz
addr16
push
jl
push
or
icebp
icebp
data16
cmp
jle
cmp
cmp
lea
addr16
cwtl
decb
sub
xchg
adc
sbb
mov
mov
mov
sbb
gs
cli
mov
xchg
mov
jmp
adc
jb
in
mov
pop
push
daa
jge
cmp
lret
and
cwtl
js
jl
xor
hlt
arpl
adc
test
adc
sbb
push
int
insl
sbb
lret
cmpsb
aas
out
out
or
mov
and
mov
ljmp
push
test
cmp
cmpsb
mov
daa
mov
inc
cmp
clc
fldenv
inc
icebp
pop
add
sbb
jbe
loope
dec
adc
aaa
mov
cli
outsl
pop
cmp
fbld
popf
int3
push
push
jae
adc
scas
sbb
fbld
rclb
jns
imul
and
lret
sti
mov
shr
iret
orb
pop
addr16
lcall
add
sub
mov
lods
mov
inc
mov
jne
pop
cmpsl
loope
mov
mov
repz
add
mov
pop
cmpsl
add
popf
sti
popf
in
jae
mov
inc
imul
stc
mov
add
sub
arpl
xchg
mov
or
test
inc
pop
adc
mov
or
leave
js
pop
adc
adc
or
xor
sub
rcll
shl
insb
cmp
imull
aam
clc
sbb
addr16
cwtl
jbe
adc
inc
add
in
stos
fisubrl
ljmp
fdivrl
cmp
fbld
inc
adc
adc
es
cld
addl
jns
inc
scas
jle
add
push
mov
push
dec
pop
inc
divl
and
popf
pushf
jg
and
cli
sub
punpckldq
and
push
inc
sbb
mov
cmp
dec
mov
push
add
xchg
daa
inc
mov
mov
sbb
mov
mov
jg
dec
pop
sahf
pop
out
fisttpl
andl
cmp
add
out
inc
out
stos
subb
pop
arpl
jmp
shlb
inc
push
fldt
adcl
mov
sub
outsl
jecxz
rcll
es
xor
test
hlt
insb
xor
les
xchg
inc
mov
jmp
xor
mov
clc
inc
push
xor
ja
je
es
fwait
inc
inc
push
jmp
in
jmp
lock
in
push
in
push
dec
out
pushf
jbe
rorl
mov
stos
in
incb
or
and
adc
out
lcall
or
mov
cli
loopne
aaa
test
push
cltd
xor
xchg
xchg
mov
sbb
xor
xor
rol
push
int
sub
xchg
repz
pop
scas
cwtl
incb
movsb
aad
and
dec
xchg
xchg
mov
xchg
insb
and
icebp
scas
test
lea
or
aaa
jae
inc
in
sbbl
iret
ja
in
mov
mov
pop
decb
rol
sub
dec
cmp
adc
leave
flds
aas
je
fwait
cmp
cmp
mov
mov
adc
cli
push
xchg
sub
outsl
icebp
clc
jae
xlat
push
imul
cld
mov
scas
es
sbb
jl
jno
jae
rcll
push
xchg
mov
xor
mov
push
lods
sti
or
or
hlt
cltd
shl
dec
aad
je
or
out
and
out
cld
sti
pop
push
dec
xor
aam
sbb
ror
pusha
mov
xor
lods
mov
loopne
and
inc
pop
imul
jge
xor
insl
add
imul
lret
add
in
and
sti
adc
xor
arpl
mov
outsl
lds
dec
or
xor
dec
fcomi
in
push
dec
ss
xlat
jmp
cmp
pop
xlat
xchg
mov
fidivrs
jl
push
ljmp
pusha
stos
cld
add
test
dec
xor
dec
test
in
shl
fwait
mov
mov
call
out
pop
dec
fsubs
dec
inc
add
mov
pushl
mov
push
in
std
test
push
pushf
fidivs
sti
pop
xor
pop
je
lea
or
decl
iret
jge
lret
popa
gs
pop
xchg
lds
mov
in
mov
sbb
cli
mov
ss
mov
les
push
sub
mov
mov
hlt
dec
dec
js
loope
add
lret
loopne
xchg
lahf
orw
sub
aam
ja
push
rorl
add
ds
add
shll
sbb
mov
stc
push
in
movsb
dec
mov
jmp
subl
cmpsl
ret
xor
sbb
movsl
in
jl
mov
lea
or
movsl
and
add
cmp
inc
leave
mov
push
adc
mov
cmpsb
adc
jns
jmp
repz
pushf
pop
imul
push
xchg
jbe
dec
mov
nop
insl
andb
sbb
pop
dec
sbb
and
mov
fadds
mov
inc
pop
dec
push
notl
les
gs
push
fcmovne
push
push
orb
lret
sti
cmpsl
jns
add
daa
out
pop
daa
in
jp
popf
movl
mov
ret
add
cs
rcll
sbb
adc
mov
and
cmc
mov
in
xchg
xor
add
pop
add
lret
inc
ret
pop
je
popa
enter
sbb
cmpl
sub
fisttps
xchg
pop
lret
adc
sub
stc
jno
imul
and
shr
decb
mov
mov
jecxz
lahf
mov
cmp
fst
mov
hlt
xchg
insl
data16
pop
pop
sbb
sub
xchg
out
cs
shl
popf
and
pop
std
orb
push
ud1
adc
insb
cltd
test
push
inc
sub
push
mov
dec
mov
add
stos
call
in
movsb
cld
in
pop
xor
or
sub
sbb
xor
out
cmp
pop
in
adc
mov
sahf
arpl
sbb
jne
dec
adc
xchg
js
mov
cmc
fcmovb
jmp
cmpsl
mov
cltd
cmpsb
rcl
fmuls
out
rorl
pop
adc
or
ja
movsl
jnp
xlat
stos
cmp
sub
adc
mov
sub
push
cmc
xor
lods
xchg
pop
lock
scas
pop
jp
or
loopne
cmpsl
aas
or
in
mulb
mov
in
mov
les
dec
ret
jg
movsb
push
lds
loopne
ja
pusha
bound
add
js
hlt
mov
iret
sub
in
xchg
aad
dec
inc
inc
adc
xchg
iret
pop
repz
icebp
xchg
insb
jns
and
xchg
aas
call
push
scas
jnp
jp
add
in
push
jnp
invd
jb
shll
loope
loop
push
hlt
xchg
sub
movb
mov
lret
lods
cmp
pop
xor
xor
pop
imul
out
add
inc
scas
sbb
dec
insl
hlt
addr16
jecxz
lret
push
pushf
jb
add
sbb
outsl
loop
stos
cmpps
jns
mov
gs
pop
pop
addr16
ret
and
int
incb
lret
xor
jbe
dec
loopne
mov
mov
sub
jae
sbb
orb
popf
mov
dec
aam
mov
dec
push
or
aaa
pop
ret
jg
fimull
test
jle
das
jp
movsl
cmc
cmpsl
mov
cmpb
hlt
jo
popf
xor
jne
xor
out
je
xchg
out
sub
addr16
ficomps
mov
push
jne
cmp
dec
push
fiadds
shlb
jnp
js
incb
sbb
jae
loop
xchg
aam
scas
scas
sub
icebp
adc
dec
xor
push
popa
fnstenv
sub
aad
sbb
mov
pushf
dec
in
mov
outsb
xchg
insb
test
xlat
mov
jmp
imul
shll
aad
xchg
ficompl
cmp
leave
inc
pop
in
inc
push
dec
push
pusha
movsb
xchg
mov
bound
and
fists
popf
adc
in
data16
push
cmc
dec
push
mov
iret
mov
in
push
mov
ret
cmp
loope
mov
test
inc
mov
pop
stc
lock
pop
out
xchg
ret
xchg
push
cltd
push
jg
mov
mov
shll
js
cmc
push
xchg
fsubrl
loop
sbb
pop
xchg
jbe
out
mov
adc
decl
sbb
pushf
cmpsl
push
aaa
lock
jo
xor
leavew
inc
sbbl
call
leave
cmpsb
movsb
sarl
jno
mov
jge
int
sbb
sub
xchg
sub
jg
test
out
popf
insl
cmp
xor
mov
sbb
movsl
dec
dec
sub
mov
insl
fnsave
out
ja
scas
fs
bound
adc
dec
add
inc
xchg
mov
jne
ficompl
ret
xchg
mov
jb
movsl
lahf
pop
push
jae
faddl
cmp
out
inc
cltd
xor
pushf
pop
scas
push
shr
push
or
xorl
data16
cmpsb
pop
xlat
stos
loope
shlb
cltd
scas
jno
mov
stc
jmp
mov
mov
adc
dec
push
push
or
mov
mov
repnz
jg
sbb
fwait
push
call
push
aam
lods
sub
mov
sub
stos
es
dec
nop
adc
jo
dec
and
iret
xchg
xchg
jbe
and
pushf
dec
aaa
stos
xor
test
mov
push
call
or
fst
arpl
aas
xchg
dec
nop
sub
cmc
in
sbb
mov
call
es
mov
mov
fcoml
mov
inc
mov
es
lods
pop
mov
call
and
in
cltd
out
sbb
mov
or
push
mov
aas
cli
cmp
mov
pushf
cmpsl
popa
inc
std
push
dec
ljmp
pop
call
lds
mov
nop
push
sbb
jecxz
pushf
pop
and
pop
fistpll
es
cmp
add
push
loope
call
mov
cli
push
cli
fbld
test
lcall
in
adc
sub
mulb
cmp
arpl
in
add
jnp
jecxz
dec
mov
adc
mov
scas
and
push
daa
rorb
sahf
push
mov
inc
nop
in
xchg
adc
ret
xor
sub
repnz
xchg
adc
pushf
int
movsl
sbb
sbb
dec
push
bound
arpl
xor
repz
mov
fwait
push
je
mov
shlb
mov
inc
popf
sub
ljmp
sbb
ljmp
dec
sarb
call
out
cmpsb
dec
cmp
stos
fld1
cmp
pop
jge
pop
cmp
sub
xchg
and
cmp
pop
out
or
lcall
inc
cltd
mov
lock
cmp
mov
dec
aam
push
in
sarl
ja
nop
sbb
aad
mov
cmp
jmp
aaa
add
test
cwtl
rolb
les
jns
inc
pusha
inc
cmpsl
shl
sub
mov
cmc
sub
faddl
mov
jbe
jne
jo
js
push
lods
mov
repnz
mov
pop
aas
push
cmp
stc
xor
sub
pop
cld
xchg
sub
add
xchg
out
pop
dec
xchg
imul
aas
mov
push
enter
imul
jo
jns
push
adc
cwtl
mov
test
push
ds
jo
jae
out
jne
sbb
mov
shrl
xchg
jno
mov
bound
mov
xchg
test
adc
hlt
mov
mov
int
jo
mov
fcoms
mov
add
xor
enter
mov
jp
pop
xchg
je
ret
inc
gs
push
orb
and
cmc
push
in
add
mov
jbe
scas
into
cmp
lods
jno
sbb
jge
inc
xor
pop
in
jle
test
inc
push
sub
xchg
or
arpl
xlat
sbb
cmpl
cmp
dec
test
out
inc
aad
mov
mov
xor
lcall
sbbb
ret
jp
mov
cld
mov
or
call
dec
pusha
xchg
dec
push
test
js
cld
shrb
dec
out
nop
mov
fsubs
mov
inc
outsb
enter
outsl
loop
sbb
jo
test
add
loope
mov
aam
pop
xor
adc
inc
push
add
out
out
pop
outsb
sbb
jp
mov
xchg
fwait
push
add
adc
outsb
jl
pop
push
jo
dec
mov
aaa
xchg
test
jl
ss
loop
fidivs
out
stos
cmp
aam
outsl
adc
je
add
sti
jle
mov
cli
imul
xchg
cmpl
push
jecxz
sub
mov
out
mov
cld
lret
pop
mov
pop
ja
adc
pop
mov
nop
fistpl
sub
stos
sub
les
fwait
rclb
jmp
push
cmp
jmp
lcall
push
cmpsb
sub
clc
pop
pusha
shll
pop
or
push
pusha
or
jno
xor
fs
mov
cmpsl
lds
loope
icebp
es
cmp
andb
sti
cmp
int
add
or
lret
enter
push
cltd
mov
sahf
popa
ljmp
pop
scas
push
mov
jno
mov
jo
nop
std
in
cltd
divl
sbb
stos
daa
xor
push
mov
dec
in
pusha
jno
add
roll
mov
lea
jge
push
inc
clc
stos
pushl
fstl
lret
popl
mov
cmp
bound
mov
jecxz
ret
pop
xchg
insb
pop
mov
call
punpckldq
jae,pn
jecxz
sub
pop
fistps
out
divb
mov
sbb
cmc
sahf
inc
and
lret
mov
push
adc
movsl
icebp
imul
mov
sub
inc
mov
cs
add
icebp
movsb
dec
rclb
add
mov
sub
lds
mov
sbb
rcrl
sbb
and
cmp
or
cltd
add
jp
pop
adc
inc
ja
fs
pop
aad
aaa
sub
out
xor
stos
xchg
jne
call
and
imul
jmp
dec
adc
mov
or
xchg
xchg
sub
dec
sbbl
dec
cmp
mov
mov
aaa
lock
sub
fiadds
aad
mov
mov
sub
gs
and
mov
inc
jb
dec
movsl
jno
scas
xchg
mov
mov
xchg
jmp
pop
cmp
test
std
jo
mov
cvttps2pi
lret
xchg
hlt
mov
mov
xor
jl
lahf
mov
and
sbb
ljmp
sbb
aad
aad
je
mov
ljmp
jmp
cmp
jg
orl
ja
outsl
test
repz
movsb
je
mov
cmc
inc
daa
cli
cld
sarb
or
and
fcmovnu
test
mov
jne
scas
das
jb
push
sub
imul
les
lret
adc
xchg
pusha
or
and
test
enter
aad
sub
jae
cmpsb
push
mov
cmpl
clc
inc
arpl
loope
and
outsl
xor
and
addr16
adc
in
inc
push
push
cltd
pop
hlt
jg
out
add
or
arpl
fwait
xchg
nop
inc
pop
ljmp
cmpb
xchg
sbb
xchg
movsb
add
icebp
adc
mov
and
lcall
loopne
xor
fdivrl
mov
js
outsb
das
adc
xchg
lea
loopne
lret
lock
cmp
clc
cmp
clc
cmp
movsb
or
arpl
sbb
inc
inc
xchg
js
sahf
pop
adc
push
sti
jbe
sahf
xchg
inc
or
fstl
lahf
push
or
rcrb
pop
inc
xchg
cs
inc
mov
mov
sub
pop
jno
orb
push
pushf
addr16
mov
jge
cmp
dec
jmp
push
lock
push
sbb
or
mov
lret
xchg
xor
dec
hlt
pushf
lret
mov
jns
mov
cmpsb
adc
std
dec
outsb
scas
mov
clc
pop
sti
jbe
xchg
push
pop
das
in
sub
inc
inc
pusha
jne
scas
pop
jnp
movsl
notl
add
sbb
mov
test
pop
push
cmp
dec
dec
xlat
popa
in
dec
sub
sub
testl
stos
sbb
inc
push
addr16
scas
mov
repz
iret
enter
roll
add
mov
add
fidivl
outsb
cmp
pop
stos
clc
jae
mov
loop
shll
adc
pop
cltd
fsubr
out
fsubrp
xchg
jecxz
aad
pop
rol
mov
in
cwtl
mov
mov
jle
movsl
mov
jl
vaddps
fwait
movsl
lods
and
ret
pop
mov
inc
icebp
imulb
cmp
push
jecxz
fistpl
clc
in
clc
sub
repnz
subl
dec
es
out
test
xor
pop
out
popa
ss
jb
loope
mov
fxam
pop
mov
sets
fstps
std
xchg
xchg
jp
inc
mov
jbe
sub
outsl
adc
cltd
push
imul
stc
lret
into
and
idivl
mov
dec
jb
notl
jno
push
xor
inc
outsb
add
or
shl
rcrb
aam
add
pop
in
mov
jbe
stos
jbe
xor
pop
mov
clc
pop
mov
enter
adc
aaa
push
jle
or
sbb
ja
jl
loop
inc
xchg
dec
pop
push
mov
inc
aas
xor
mov
push
mov
mov
inc
movsl
push
fwait
lret
adc
and
repz
mov
aaa
adc
push
lret
cmp
cmpsl
sbb
mov
mov
or
dec
mov
or
push
cwtl
push
fs
stos
cli
rolb
bound
gs
dec
mov
test
or
aas
mov
adc
les
cmp
out
push
sbb
cmpsb
outsl
and
sub
enter
gs
ds
adc
mov
sub
into
inc
movsl
addr16
push
daa
add
inc
ljmp
dec
icebp
sbbb
and
jne
nop
adcl
push
mov
push
and
xchg
out
sub
or
inc
sti
addl
lock
and
pushw
in
jecxz
ss
stc
mov
mov
cmp
mov
lahf
xlat
testb
xor
test
cs
mov
cmp
daa
cwtl
sbbl
or
test
in
in
lea
outsl
cmp
xor
repnz
add
mov
mov
lock
push
in
xchg
or
and
mov
test
adc
push
mov
arpl
out
cmp
je
push
mov
scas
cld
out
dec
aam
jecxz
movsb
push
and
mov
std
sarb
aad
pushf
dec
xchg
jg
fdivrl
mov
shlb
mov
sub
xorl
repnz
adc
fcoms
pusha
push
adc
je
xor
push
outsb
daa
mov
push
in
insb
sbb
in
je
dec
adc
mov
mov
test
lock
adc
jle
mov
xor
notb
adc
dec
ss
test
inc
sub
test
or
dec
add
mov
mov
pop
adc
popf
push
iret
adc
addr16
pop
sub
xorl
ja
jae
cmpsb
std
xor
adc
pop
or
adc
out
sbbl
mov
ret
add
aam
test
das
cmp
lods
adc
mov
enter
push
xor
pushf
xchg
pop
lock
or
pop
lods
notb
orb
cmp
add
dec
inc
ret
sub
and
adc
xchg
dec
ffree
cmpl
jne
pop
cmp
lods
jo
push
lret
sub
jle
or
rep
shlb
push
ljmp
cmp
pop
or
xchg
test
pop
pop
add
jb
ja
out
mov
pop
dec
arpl
sbbl
imul
shl
in
pop
rcrl
cld
cmp
inc
sbb
cmp
xchg
dec
jl
mov
cmp
jg
mov
push
icebp
scas
dec
popf
xchg
and
imul
sbb
mov
cmp
pop
aam
dec
inc
xchg
push
aad
shr
arpl
mov
movsb
mov
cwtl
push
xchg
pop
cmp
lods
jmp
cld
sti
imul
and
lea
mov
sub
out
stos
push
int
mov
xchg
mov
dec
in
stos
xchg
fsubrl
test
adc
xor
adc
jp
dec
inc
fdivrs
xchg
outsb
lcall
in
mov
adc
repz
insb
mov
xchg
out
mov
lea
aad
js
xor
xchg
lods
les
stos
inc
jg
xchg
lods
lcall
int3
daa
adc
push
stos
push
mov
mov
cltd
mov
mov
adc
call
pusha
jle
jmp
les
xor
fisubl
roll
int3
jmp
iret
sahf
arpl
outsl
rcrb
push
into
jle
repnz
gs
fwait
lret
dec
out
mov
hlt
addr16
or
mov
sbb
adc
mov
push
xlat
pop
push
push
lock
into
fsubrl
sub
fs
sub
pop
inc
mov
sub
or
insb
cmp
sahf
mov
ja
and
sti
xchg
sub
push
jmp
ret
sub
subb
push
lcall
stos
fstl
inc
or
sub
mov
fdivrs
cwtl
fidivrl
push
mov
cltd
popa
leave
xchg
outsl
jmp
gs
xor
fisttpl
aad
xchg
lods
push
mov
daa
into
lret
dec
ja
cmp
xor
aaa
adc
mov
pop
push
sub
orl
mov
mov
jl
loopne
mov
flds
cmp
nop
push
jae
dec
es
adc
cli
cmp
xchg
jne
pop
insl
mov
inc
push
add
gs
repnz
lods
dec
mov
clc
mov
push
je
out
lcall
jecxz
cmpsb
aas
cmp
pop
sahf
xchg
pop
test
ja
pushf
test
js
into
je
mov
aam
dec
cmpsb
rorb
jb
inc
add
mov
test
out
and
xor
scas
xor
xor
out
mov
xchg
pop
mov
mov
cwtl
stos
icebp
lds
mov
insb
fbstp
call
je
add
outsb
add
sub
mov
or
imul
out
adc
enter
vxorps
repnz
xchg
add
push
pop
adc
sbb
stos
arpl
cmpsl
jno
mov
popf
sub
xchg
inc
add
test
popf
cmp
pop
push
pusha
unpcklps
call
in
adc
xchg
into
dec
fsubr
mov
stos
xor
fistps
ja
mov
push
cltd
push
addl
or
cmp
gs
fbld
dec
xlat
ss
mov
adc
mov
xchg
jge
ficomps
dec
mov
test
lock
flds
lds
xchg
adc
mov
sbb
xchg
in
push
push
cwtl
pop
aaa
leave
imul
lahf
jbe
mov
push
pop
cmp
loopne
jl
das
and
cmp
jl
xchg
aas
mov
popa
stos
and
test
sub
rclb
pop
sbb
mov
xchg
es
stc
mov
imul
leave
xor
imul
mov
push
faddl
lock
lahf
iret
sub
sbb
cmp
xchg
mov
in
xchg
mov
ss
or
mov
rcr
and
xchg
sti
cmpsl
adc
sub
mov
loopne
inc
inc
cmpsl
add
aas
dec
mov
test
and
clc
mov
push
sbb
popa
rorb
xchg
in
rcll
or
dec
mov
ja
and
aas
push
push
lret
cmpb
mov
testl
pop
shrb
loope
mov
jge
cmpsl
js
cmp
push
ljmp
addr16
pop
stc
dec
mov
lock
sbb
lock
ja
cmp
push
cwtl
sub
inc
push
outsl
divl
cwtl
cmpsb
xor
psllq
pop
and
jp
ljmp
adc
dec
scas
pop
aaa
rcrb
clc
mov
insl
stos
jne
inc
add
fadds
jb
xchg
imul
lret
addb
in
test
outsl
jle
sub
mov
lock
addr16
xor
clc
sahf
out
filds
and
aam
sbb
dec
or
xlat
dec
cltd
or
push
adc
or
out
and
js
or
sbbl
fisubrl
xchg
sub
js
loope
pop
sahf
push
fnstcw
dec
pop
enter
aas
outsb
and
cld
pop
loope
out
incb
jo
mov
les
insl
cwtl
mov
xchg
inc
rcl
sbb
popf
sub
pop
mov
ret
stos
jp
popa
jns
pop
cmpsl
js
addl
imul
popf
dec
lahf
inc
aad
call
enter
push
pop
shrb
push
in
sti
jp
inc
loop
mov
cs
dec
push
mov
push
xor
pop
fstpt
jae
mov
fldenv
enter
cs
sbb
jno
jmp
xchg
xchg
sbb
mov
jle
repnz
arpl
pop
cmovp
ret
clc
outsb
pop
pop
popf
lods
aad
jnp
pop
mov
js
lock
cmp
mov
fstp
and
bound
jns
xor
cmp
in
dec
pop
test
add
or
shll
aad
out
push
in
xor
enter
push
fcmovnbe
add
pop
mov
sub
cmp
adc
add
sbb
sub
cld
jp
insl
or
cmp
sub
jo
adc
pushf
dec
xlat
rolb
cmpl
nop
jo
or
mov
fs
std
sub
push
xchg
stos
jg
sbb
bound
xor
ja
push
and
cmpsb
dec
subl
pop
notb
mov
cmc
inc
into
int
popa
insb
out
add
mov
mov
je
jg
rcrl
aam
aas
sub
cmpsl
shrl
mov
cmpsb
push
push
pop
mov
jns
dec
cmpsl
lahf
outsb
mov
hlt
mov
fsubrs
cmpl
not
fiadds
cmp
push
repz
shrb
sub
icebp
or
repnz
out
or
rorb
jb
inc
pop
adc
and
movsb
mov
jno
inc
aaa
adc
pop
ljmp
sbb
xchg
stos
adc
or
push
jno
test
les
popa
add
mov
sub
jmp
iret
fmull
cmpsb
test
push
mov
cbtw
int
bnd
xor
out
mov
icebp
jnp
loop
ficoml
and
adc
xor
imul
mov
mov
mov
adc
xchg
dec
fbld
cmp
cltd
push
push
sbb
adc
aam
or
fldenv
enter
or
mov
fisubl
adc
stc
mov
push
cmp
ds
sbb
pop
shlb
push
xorl
xor
mov
jecxz
adcb
jne
jno
mov
push
fsubs
or
aaa
psraw
mov
sbb
test
inc
add
xor
in
outsb
inc
fstpl
shrb
xor
push
in
or
mov
rcrb
insb
sbb
sbb
pushf
jnp
jns
jnp
inc
testl
lea
push
jmp
jecxz
push
mov
or
jp
inc
scas
int3
pop
loopne
sbb
js
pop
adc
test
lock
cmp
es
xchg
jp
adc
mov
xchg
js
out
les
xor
jg
loop
les
cmpl
dec
dec
dec
and
pop
movsl
and
repnz
add
daa
mov
ljmp
pop
inc
sub
mov
icebp
movsl
push
fdivs
dec
cmpsb
std
mov
lret
and
mov
lahf
test
ss
pop
imul
mov
mov
xchg
ss
fcmovne
insl
or
ret
push
fbstp
push
cmpsb
std
jne
std
push
int
outsl
push
mov
mov
ret
fisubrs
pop
fwait
xchg
outsb
clc
adc
loope
jae
sbb
inc
loope
dec
adc
push
cwtl
or
seta
pop
lcall
pop
cld
ja
push
test
or
mov
popw
push
cmpsb
xchg
pop
and
in
ficoms
stc
sub
add
push
mov
lods
inc
aaa
jbe
or
cmp
push
and
adc
test
inc
and
xchg
sub
add
in
dec
pop
jne
inc
scas
popw
sbb
int3
lahf
and
iret
sbb
mov
sub
int3
test
lods
mov
pushf
mov
ljmp
addr16
call
arpl
xchg
in
test
pop
jne
bound
iret
data16
jmp
pushf
cld
lcall
push
xchg
inc
cmpsb
dec
dec
mov
add
iret
pop
imul
push
vmovapd
lahf
mov
or
je
xchg
mov
mov
sti
push
cmpsb
lea
daa
xchg
cmp
ficompl
ret
fwait
pop
mov
stos
icebp
or
mov
pop
ja
cld
and
cs
xchg
dec
int3
xchg
outsl
jns
sbb
push
adc
mov
pop
and
xlat
clc
and
pop
outsb
mov
pop
call
lods
ret
ret
das
pop
adc
xor
outsl
mov
dec
mov
enter
sub
fldt
xor
mov
loop
sbb
xchg
outsl
stos
in
mov
ret
cld
out
add
push
xor
arpl
and
outsl
push
out
mov
ljmp
insb
mov
lods
cld
push
mulb
lods
mov
pop
test
xor
pop
out
mov
push
fwait
mov
jbe
test
inc
stos
xor
pop
dec
outsl
fstpt
push
adc
aaa
stos
mov
repz
lret
adc
cmc
dec
test
mov
int
add
iret
repnz
cmp
inc
ret
inc
js
rcrb
lret
mov
imul
repnz
int3
lds
lahf
add
jmp
sbb
mov
fsubl
nop
pop
test
mov
jle
js
out
popa
push
sbb
std
push
push
stos
sahf
clc
jae
adc
and
or
sbb
fwait
sbb
mov
lea
daa
xlat
test
pop
scas
xchg
xchg
fcoml
or
sub
or
mov
sahf
pusha
cmpsb
inc
inc
jne
pop
pop
daa
scas
mov
std
push
movsb
jo
or
jmp
inc
dec
inc
repz
push
pop
test
jmp
outsb
jns
or
xchg
loop
ret
icebp
cli
fs
test
outsb
pop
mov
and
pop
test
xchg
add
ljmp
pop
aam
mov
in
dec
lcall
add
push
lods
or
xor
lret
mov
les
cmc
mov
jno
dec
mov
jbe
dec
mov
pushf
insl
xor
and
pushf
jb
sub
mov
imull
push
pop
adcb
ficompl
hlt
mov
loope
or
divl
push
push
pop
nop
lea
out
shrl
pusha
dec
ret
inc
xchg
imul
jmp
dec
movsb
call
cli
movsb
and
ljmp
inc
daa
push
push
jae
lret
scas
aad
fcomps
pop
jle
pop
ret
cmp
dec
out
jo
and
push
push
fisubs
push
inc
adc
or
mov
inc
in
notb
xor
mov
lock
jle
imul
xchg
aad
fwait
push
movsl
sbb
lds
xchg
mov
mov
xor
jecxz
xor
gs
dec
aad
pop
nop
insb
sbbb
stos
push
fisttpl
iret
dec
movsb
fmul
int
and
mov
mov
xor
imul
sbb
push
mov
in
and
out
sub
dec
sub
jg
cmp
xchg
pop
decl
sti
aas
sbb
and
pop
fs
hlt
xchg
aaa
mov
add
testb
pop
sbb
test
daa
xchg
mov
cmpsl
ja
pop
sbb
int3
cmc
push
cmp
adc
lods
mov
sub
ja
cs
popf
icebp
out
jmp
mov
sub
cmpsb
cltd
jnp
outsb
jns
subl
cmc
insl
jnp
iret
out
sbb
into
add
mov
pop
test
test
popa
fs
sbb
leave
and
insl
cmp
ret
icebp
and
imul
repz
or
sti
cmc
movb
inc
imul
test
aas
sti
push
xlat
mov
mov
data16
jne
pop
pop
std
pop
subb
or
add
pop
cmpsb
cmp
pop
test
and
lea
sub
aam
pusha
sahf
scas
call
sar
ljmp
icebp
js
push
enter
mov
sbb
add
mov
test
js
push
xor
adc
jns
pushf
aaa
imul
out
pop
inc
scas
lds
insl
add
mov
notl
jmp
inc
lcall
inc
mov
push
sub
mov
sbb
push
rorl
xchg
jae
cmp
mov
push
add
stc
mov
pop
adcl
stos
sbbl
decl
mov
stos
stos
inc
sbb
cmp
fldl
and
cwtl
popf
sbb
pop
xchg
mov
jae
sbb
jecxz
fmul
outsb
loope
stos
xchg
and
ja
movsl
mov
push
movsl
mov
loop
cld
pop
test
mov
push
mov
push
aas
jo
mov
fwait
adc
out
das
or
scas
addb
push
dec
repnz
cmp
cwtl
aam
movsb
sarl
cltd
sub
and
jg
pop
daa
scas
popf
xchg
into
xchg
in
icebp
into
ds
xor
or
sbb
push
jns
or
loope
pop
repnz
std
scas
in
dec
jnp
jns
cmc
mov
add
es
sbb
jmp
push
mov
test
aam
sbb
inc
rorl
jb
inc
fidivl
outsl
addr16
mov
add
pop
test
mov
insl
mov
lods
sbb
insb
into
lret
jnp
out
add
int
mov
inc
repnz
aam
inc
or
outsl
mov
mov
jl
loopne
xchg
jp
scas
and
fistpl
or
mov
inc
data16
jb
imul
ljmp
scas
sbb
daa
inc
out
in
push
out
push
orl
pop
fisubs
sbb
sub
lock
sbb
lea
pslld
imul
push
pop
repnz
ljmp
fs
sbb
adc
sub
and
inc
mov
jmp
and
push
imul
das
call
into
aad
sbb
and
cmp
dec
xchg
xor
mov
aaa
stos
and
sbb
call
addr16
neg
int3
std
es
test
xor
inc
and
dec
fbstp
or
lret
sti
xor
dec
test
out
das
jne
dec
lods
jecxz
mov
mov
fwait
in
testl
sbb
sti
mov
cmp
aas
lahf
or
push
fimull
aas
out
jmp
and
dec
inc
aas
pop
dec
imul
popa
in
mov
ss
outsl
jmp
and
sarl
and
in
xor
stc
or
sbb
sbb
jecxz
push
or
pop
daa
stos
push
andb
xchg
push
fidivrl
adc
push
daa
push
or
mov
lea
xor
jge
xor
add
lahf
stc
jo
pop
iretw
inc
or
xor
fwait
mov
ret
inc
stc
test
jo
or
imul
inc
lods
push
imul
xor
push
adc
cltd
std
in
sbb
out
shrl
xor
push
cmp
insb
ss
cld
mov
pop
out
outsl
adc
je
insl
cmpsb
dec
cwtl
scas
rorl
lods
xor
test
pop
popf
push
or
cmp
pop
xchg
sub
leave
out
pushf
sarl
push
jl
jne
mov
cmp
inc
loope
fldenv
or
das
ljmp
inc
fiadds
lret
bound
cmp
int
adc
rolb
jno
lds
cmc
push
jle
shr
stc
pop
cmpsl
mov
ret
or
loop
in
cmp
test
jge
das
mov
popa
push
and
dec
movsl
lock
mov
cld
loope
jp
jae
ds
and
and
cmp
aaa
pusha
mov
das
in
sbb
repz
ja
jae
ljmp
mov
inc
push
popf
mov
cld
lcall
mov
loop
lea
out
inc
mov
stos
inc
pop
xor
leave
test
sub
adc
out
pop
cwtl
js
cli
test
fidivrl
mov
scas
push
outsl
nop
stc
outsb
sub
xchg
imul
or
pop
arpl
push
jns
or
xchg
add
into
stc
cmp
addb
lds
imulb
into
dec
loopne
pop
jge
lods
fsubrl
cs
sahf
leave
mov
dec
sbb
push
xor
pop
clc
daa
mov
jnp
fisubs
mov
xchg
adc
insb
pushf
cli
ret
call
lods
sub
lret
sub
push
mov
mov
sbb
hlt
lds
gs
dec
jmp
aaa
iret
loope
lods
cmp
insb
push
repnz
push
push
scas
add
les
idivl
int3
sbb
xor
mov
jmp
add
dec
pop
imul
repnz
push
jge
sub
leave
pop
enter
inc
pop
cld
fidivrl
js
sub
jp
dec
scas
jne
loopne
pop
push
dec
dec
mov
mov
lds
push
pop
jb
add
lret
and
pusha
add
lahf
mov
pop
iret
adc
jmp
leave
mov
push
ss
sbb
jmp
in
dec
mov
in
stos
add
sbb
adc
sbb
mov
pop
push
mov
in
add
aaa
arpl
push
sub
push
add
dec
mov
push
mov
mov
pop
call
scas
sub
mov
sti
orl
inc
addr16
xor
push
push
sub
cmp
andb
aad
out
pop
lds
jle
cltd
lock
dec
sarb
xchg
push
mov
imul
mov
inc
adc
sbb
lretw
loopne
pop
fwait
pop
rcrb
hlt
ret
call
pop
mov
in
les
loopne
push
jecxz
pop
adc
push
sti
rolb
cs
cmp
into
pusha
lea
shrb
sub
les
pop
insb
dec
in
jecxz
nop
cmpsl
adc
test
lahf
jnp
mov
mov
roll
cltd
and
sbb
mov
dec
mov
cltd
outsb
inc
xor
push
stos
mov
sub
fs
cmp
mov
or
scas
mov
cmpsb
add
xchg
es
cmpsl
xchg
sub
mull
xchg
rcrl
imul
sarl
push
xchg
xor
ja
out
push
fwait
xchg
in
dec
jbe
mov
test
nop
call
and
fmul
mov
stos
dec
or
cwtl
push
adc
cli
testl
xchg
loop
test
bound
add
pop
mov
loop
push
fwait
push
dec
jmp
int
pop
jecxz
dec
mov
mov
push
pop
aam
push
push
xor
xchg
dec
data16
fldt
stos
and
dec
fsubr
test
mov
int
adc
and
orb
xor
js
test
cmp
dec
inc
lahf
data16
shll
and
cs
mov
mov
xchg
fwait
sti
int
rcrb
pop
pop
daa
add
and
cli
pushf
cmc
inc
int
xchg
ficompl
aam
mov
pop
imul
pop
pop
xorl
and
mov
pop
mov
or
shrb
jb
add
inc
insl
test
dec
mov
mov
cld
sti
dec
dec
loopne
fnsave
push
out
test
mov
jo
push
test
loopne
ret
mov
gs
cs
sbbl
mov
cmp
jb
out
movsb
ret
loop
testb
mov
add
and
cmp
jno
fistl
lods
cmp
inc
push
in
insl
addr16
rcll
cwtl
je
daa
cmp
adc
lahf
dec
inc
and
and
xchg
leave
inc
pushf
jno
in
notb
xor
sahf
jb
push
aaa
push
out
push
pop
inc
add
sbbl
dec
and
fildl
pop
sbb
fdivl
aas
cmp
outsb
sub
xchg
pop
aad
jns
push
sbb
bound
ds
push
xor
sub
inc
pop
pop
push
movsl
negb
sub
inc
sbb
into
jb
xchg
and
movsl
jecxz
repz
inc
inc
test
sbb
stos
xchg
xor
inc
mov
jge
test
mov
daa
lds
pop
mov
bound
push
jge
adcl
scas
xchg
jae
jecxz
mov
aam
arpl
fists
mov
mov
stc
fs
pop
loop
les
sub
pop
and
dec
mov
xlat
testl
add
insb
mov
gs
gs
xor
out
stc
pop
xor
adc
inc
cmc
mov
pop
mov
imul
daa
push
xchg
or
push
jae
stc
mov
pop
mov
scas
xchg
shrl
sub
cvtps2pi
xchg
sbb
mov
mov
pushf
fdivl
dec
and
imul
push
fmuls
mov
leave
ja
test
jmp
mov
dec
out
ljmp
mov
loope
sbb
fwait
xor
int
and
into
or
push
jmp
cmp
push
out
sahf
out
sahf
jecxz
cmp
inc
push
lds
pop
inc
gs
jae
int3
pushf
lods
xor
std
pop
jo
int3
adc
or
pop
lock
push
in
jmp
cli
out
xor
push
int
cltd
stos
movsl
scas
cltd
pusha
adc
jbe
pop
xor
je
mov
xchg
jp
push
push
or
iret
loope
pop
imull
inc
ret
and
fsubr
mov
mov
hlt
mov
mov
cmp
in
stc
in
xchg
and
mov
bound
xor
or
sbb
leave
mov
cmpsl
push
jmp
jmp
xlat
psubsw
push
inc
push
mov
loopne
and
ja
mov
fimull
cli
xor
arpl
sbb
pushf
mov
fdivl
xor
jo
pop
mov
jne
sbb
enter
daa
lds
lcall
or
mov
repnz
or
mov
int
push
xchg
sub
adc
or
and
jmp
xor
aas
mov
pop
cmp
push
stos
ljmp
inc
xor
into
loop
jl
outsl
scas
mov
add
pop
push
adc
lcall
sbb
pop
cli
and
sub
mov
fwait
js
adc
push
nop
lret
and
and
popa
mov
and
dec
mov
imul
insl
dec
push
jnp
sahf
cmp
or
or
jge
push
enter
vsubps
add
xor
or
test
inc
adc
add
pop
test
add
mov
add
add
mov
outsl
sub
jge
push
out
sti
push
jno
leave
jbe
out
pop
pop
push
je
shl
dec
lea
mov
pop
push
out
inc
ret
push
test
popa
imul
leave
rep
out
or
or
xchg
out
roll
insl
inc
ret
dec
jecxz
cmpsb
outsl
in
int
mov
xchg
sbb
hlt
push
aad
lret
push
fildll
mov
xor
xchg
ret
fcoms
imul
mov
stos
mov
adc
cmp
mov
imul
jo
jnp
mov
mov
jp
cmp
xchg
lds
bnd
sub
cmp
nop
dec
or
add
into
push
or
lds
lret
xchg
mov
arpl
aam
ds
xor
pop
sbb
movsl
call
mov
insb
mov
jp
shlb
sbb
mov
shlb
je
dec
rorl
mov
push
out
cmp
scas
inc
jmp
add
ficomps
sub
iret
inc
dec
pop
adc
and
aad
icebp
inc
addr16
xlat
push
pop
mov
in
fildl
jb
test
lahf
notl
jne
xor
es
inc
ret
mov
or
xlat
aas
sbb
jmp
dec
lret
xlat
sub
mov
xor
sbb
mov
pop
mov
add
mov
adc
mov
loope
or
inc
fnstenv
and
adc
sub
in
push
out
mov
je
xlat
repz
fdivrs
cmc
lods
aaa
sarb
jl
sbb
push
movsl
cmp
pop
sub
rol
clc
inc
jp
add
fimuls
addr16
stos
orb
or
cmp
andb
push
add
push
mov
fwait
jb
ds
aaa
fldt
mov
lret
xor
hlt
cmc
mov
inc
xchg
stos
out
jne
push
cmpsb
add
lods
fs
fldcw
push
andb
outsl
loop
pop
out
bound
aaa
pop
adc
rcr
nop
mov
push
xor
mov
dec
cmpsl
sbb
daa
int
rcl
fmull
sub
sub
dec
popf
imul
addl
std
jmp
aaa
fs
int3
out
xor
add
stos
add
and
xchg
cltd
pop
in
xchg
add
dec
xorl
bound
or
push
add
mov
test
ss
inc
cli
dec
mov
pushf
xchg
xchg
add
pop
mov
sbb
and
and
inc
cld
or
in
pop
imul
in
sub
and
push
mov
dec
std
xchg
subb
xor
add
and
mov
sub
mov
cmp
adc
mov
pop
or
mov
repz
push
or
insb
xchg
outsb
pop
jg
loope
and
mov
test
mov
mov
into
xchg
sbb
sarl
faddl
btc
cmp
clc
mov
push
sbb
xchg
push
pop
enter
sub
inc
test
stc
and
andl
les
popa
adc
sbb
push
fs
pushf
push
cmp
mov
mov
push
fildll
xor
repnz
scas
jbe
in
je
and
push
fstl
gs
and
push
outsb
insl
xchg
mov
in
pushf
pop
in
loope
xor
add
insb
lahf
sti
and
cmp
jle
aas
jmp
jecxz
nop
xor
add
add
shr
pop
inc
mov
idivl
push
push
or
inc
out
push
jnp
movsl
sbb
movsl
mov
add
add
imul
aas
aad
sub
sbb
sbb
pop
jg
adc
jb
scas
pop
mov
test
dec
out
push
and
adc
sbb
push
vmwrite
add
cs
and
mov
lret
push
arpl
mov
add
dec
fisubl
shll
test
gs
mov
cli
pop
cli
mov
fnsave
pop
adc
or
fnsave
mov
mov
scas
xchg
mov
sub
mov
jl
leave
aas
js
test
adc
sub
push
sbb
sahf
ljmp
jne
mov
int3
int3
ss
orl
pushf
or
cmp
lahf
popa
mov
fwait
jecxz
les
or
mov
sbb
sbb
cld
xchg
ret
cli
fwait
sti
mov
gs
jmp
addl
mov
or
push
fwait
out
jge
out
mov
push
lcall
cwtl
add
sub
or
pop
cmp
arpl
push
push
fcoms
sub
mov
ficompl
dec
fstpt
fsubrp
test
repnz
jge
and
test
add
inc
sbb
cwtl
mov
adc
push
cltd
cmpsl
mov
sbb
js
insl
adc
adc
clc
and
imul
into
inc
gs
repnz
push
push
stos
xor
in
cld
ljmp
inc
lcall
push
fwait
lock
icebp
push
outsl
push
insb
cltd
je
lret
je
push
cltd
loopne
add
aam
out
cmp
add
cmpsl
adc
push
mov
cmp
cwtl
push
aad
inc
dec
or
mov
lods
lods
fldl
xlat
adc
movsb
sbb
pop
pop
mov
lods
out
iret
mov
dec
scas
mov
or
mulb
push
sbb
stos
repnz
mov
imull
inc
push
lock
adc
add
push
sahf
test
add
shrb
shrl
pop
cmpsb
inc
push
scas
fisttpl
es
xorb
and
je
pop
out
mov
lahf
jg
nop
and
rclb
subl
push
decl
lret
idivl
xchg
into
gs
jle
je
cli
in
subl
xchg
add
push
hlt
pushl
mov
jmp
js
dec
shrb
js
into
popa
popf
adc
mov
cli
jae
les
sbb
push
push
jp
ret
pop
fistl
xchg
add
pop
mov
int3
fwait
mov
jg
push
mov
movsl
sahf
xor
popf
aas
aam
inc
xchg
clc
jne
inc
xor
add
add
sarl
cmpsb
mov
sub
repz
mov
mov
inc
fisubrs
out
mov
mov
ret
pop
scas
pushf
inc
int3
inc
int3
jmp
jecxz
cmp
pop
jmp
mov
xchg
arpl
stos
and
lock
mov
sub
outsl
daa
repnz
jmp
js
xor
cmpsl
lds
sub
mov
inc
sub
dec
dec
fcomps
sbb
cli
sbb
shl
adc
mov
aas
xor
pop
scas
fwait
pop
cmp
jns
std
mov
xor
or
push
mov
cmp
xchg
mov
in
jnp
sub
xchg
inc
cs
lret
xchg
and
push
push
push
adc
mov
ficompl
pusha
scas
lods
cmp
push
add
jb
cltd
std
gs
lret
add
jmp
add
or
inc
lock
xchg
addl
mov
xlat
and
mov
pop
push
ljmp
jno
cmp
and
imul
ret
mov
and
add
mov
out
xor
cltd
dec
push
push
call
xchg
ret
outsl
jnp
lea
pop
test
lods
lds
mov
mov
dec
mov
outsl
mov
dec
or
xlat
ljmp
sbb
scas
xchg
pusha
mov
inc
pop
repnz
and
sbb
sub
adc
add
out
popa
inc
cli
adcw
sbb
push
mov
xor
cmp
int3
push
jmp
inc
movsb
cmp
gs
mov
popa
leave
pusha
stc
xchg
paddw
xchg
or
sbb
cs
imul
push
je
or
sbb
call
cltd
or
lods
cmp
fwait
push
movsb
mov
mov
popa
ret
pop
sbb
js
mov
pusha
dec
adc
andl
cmp
pop
pop
lds
jbe
mov
std
dec
mov
pop
sub
arpl
cmp
andb
and
ficoml
jne
or
lcall
test
mov
pop
mov
add
push
adc
call
lret
xor
jg
mov
mulb
xchg
jno
in
js
movl
lret
mov
push
mov
push
xor
mov
adc
inc
out
inc
jno
jg
fiadds
arpl
add
jp
sub
dec
shrl
pop
test
and
mov
test
outsb
mov
cmp
cmp
jbe
das
rolb
pop
add
mov
lods
es
loope
mov
and
test
cmp
cmpsl
loop
adc
mov
xor
xor
arpl
pop
push
push
loopne
jae
or
psrlq
lock
fstl
sbb
test
inc
in
jb
sub
inc
mov
pop
repz
mov
lods
mov
fs
mov
fdivs
fidivs
xchg
dec
pop
into
cmp
mov
test
pop
xchg
pop
int3
xor
mov
mov
xor
add
and
pop
int
subl
xchg
push
popf
fisttpll
cmp
jno
mov
pushf
fcomp
leave
pop
cmp
mov
pop
addb
aas
inc
fsubrs
sbb
sub
inc
movsl
or
inc
stos
mov
mov
int
test
fidivs
dec
out
loop
or
repz
cwtl
jl
test
test
std
ljmp
hlt
and
test
addr16
push
xor
testb
test
ja
push
call
leave
mov
mov
and
cld
adc
jns
and
je
loop
push
faddl
mov
loopne
jns
cld
add
xchg
pop
jb
call
xchg
rcrl
jo
mov
popf
xor
mov
shlb
outsb
pop
icebp
lahf
mulb
test
sahf
push
ds
arpl
movsb
mov
inc
stc
dec
xchg
js
or
ret
xor
xor
or
inc
pop
shll
call
mov
xor
mov
mov
fsub
xchg
das
inc
inc
addr16
mov
lret
pop
mov
mov
dec
addb
pop
repz
fnstsw
mov
or
or
insb
xchg
xchg
pop
int
xchg
pop
or
xor
int3
enter
push
cmp
out
sub
cmp
rclb
insl
cli
and
std
add
mov
pop
out
mov
rol
mov
sub
pop
es
lea
testl
test
scas
sbbl
dec
loopne
and
insb
sub
repz
pop
daa
das
add
addb
dec
jp
fdivs
aaa
xor
pop
divb
ds
jge
jae
out
mov
xchg
cs
xchg
dec
mov
pushf
shrl
mov
in
mov
mov
sub
icebp
flds
test
iret
cmp
cmc
test
mov
add
dec
nop
adc
push
xchg
ja
fwait
mov
mov
adcb
shrl
or
adc
mov
stos
daa
jnp
shlb
idiv
jae
mov
enter
push
cli
sbbb
mov
mov
pop
cltd
xchg
mov
in
cwtl
jbe
push
mov
inc
orb
insb
push
or
cwtl
jle
jmp
fstl
sub
jecxz
and
mov
cmp
sub
add
in
push
test
enter
xor
lea
cmp
div
sbb
push
lret
stos
jmp
inc
jl
dec
xchg
or
inc
xor
stos
fcmovne
and
sbb
sub
cmp
xchg
push
in
ret
or
ficomps
jbe
cli
outsb
jg
sbb
add
test
fcmovb
pop
adc
in
mov
cmpsb
jbe
notb
inc
jp
sti
sub
push
push
and
mov
push
xor
cmp
gs
aas
and
cmc
xchg
fs
inc
fisubrl
rcrl
arpl
xor
jo
leave
out
xor
mov
cwtl
sub
dec
lds
xor
loope
cli
test
mov
sahf
push
out
iret
or
xchg
mov
and
dec
int
inc
and
adc
lods
inc
lret
lret
jl
pop
sub
xchg
inc
fisubl
cmc
int3
mov
pop
dec
movsl
or
enter
or
mov
pop
adcb
in
lods
pop
rcrb
idivb
cmc
insb
pop
test
test
mov
sbbl
mov
in
and
aaa
fidivl
mov
loopne
inc
xlat
clc
test
inc
icebp
sub
sub
repz
pop
mulb
cmc
jle
outsl
sub
sub
mov
xchg
lods
mov
fcmovne
mov
mul
sbb
sbb
mov
fs
jno
rcrb
imul
inc
or
roll
aad
push
pop
addr16
subl
jmp
pushl
loopne
jl
jns
sbb
jns
push
in
inc
es
shl
and
and
push
in
cmp
mov
and
mov
popa
inc
add
xorl
jge
pusha
inc
mov
adcb
fisubl
repnz
add
adcl
jbe
and
leave
xchg
lods
notl
scas
fisubrl
jge
fsubs
je
and
fildll
xor
mov
push
sbb
add
bound
ja
sahf
jno
dec
out
jge
and
ljmp
scas
mov
jno
in
rclb
jno
inc
inc
push
push
loop
push
mov
or
and
sub
and
fwait
lcall
out
ljmp
stos
fiadds
dec
scas
jnp
into
das
xor
mov
popa
push
jae
bnd
int3
and
aas
mov
push
subl
adcb
jo
push
int3
inc
pusha
jbe
jmp
push
push
in
dec
add
mov
vpunpckhbw
add
push
movsb
jnp
out
dec
jecxz
push
sti
rcll
push
mov
enter
mov
test
cmovo
sbb
jb
cmpsb
dec
testl
mov
jb
iret
mov
and
dec
mov
pop
gs
cltd
xchg
loope
mov
inc
jmp
or
sub
ja
stos
xor
in
into
cmpsl
xor
hlt
addr16
xchg
stos
cld
sarb
fsub
pop
and
mov
inc
iret
cmp
add
mov
jne
iret
pop
adc
repz
cs
mov
inc
jnp
stc
das
mov
aas
mov
insl
mov
lock
rcll
testb
jno
and
fwait
iret
ljmp
and
ret
pop
rclb
jmp
cmp
jbe
jle
cmpsl
mov
jl
xchg
push
fists
stc
push
gs
cmc
inc
mov
shll
out
hlt
jmp
rcl
pushf
popa
push
sbb
or
jl
cmp
jmp
mov
cmp
loopne
mov
jbe
or
popa
cmp
or
mov
loopne
adc
mov
outsl
push
adc
sbb
rcrl
push
sbb
aas
add
shlb
cmpsl
push
in
fdivrs
je
scas
movsb
jae
scas
inc
gs
hlt
ret
hlt
adc
aad
add
push
mov
and
mov
and
pop
jae
push
mov
mov
push
clc
and
xor
sti
sub
inc
xchg
jp
out
push
out
xor
push
gs
jo
push
jge
jp
or
sub
jecxz
inc
pop
add
cwtl
popf
push
fcomip
push
dec
lods
inc
pop
test
xor
frstor
sbb
into
arpl
xchg
and
fmuls
shll
mov
push
xchg
outsl
sbb
push
mov
addr16
pop
out
aad
adc
mov
xchg
adc
mov
add
mov
jbe
cmp
cwtl
ret
mov
cs
or
push
push
hlt
dec
sub
mov
test
cmp
mov
pop
scas
cmpsb
stos
push
lcall
stc
or
fwait
xor
sarb
mov
fmuls
inc
push
out
push
ret
xlat
je
xor
outsl
movsl
and
mov
push
popf
cmpsb
mov
sarb
jg
test
mov
adc
lret
std
cwtl
mov
push
dec
inc
lds
push
aas
push
or
insb
push
das
xchg
push
popf
outsb
inc
loopne
addr16
ret
add
lock
pusha
repnz
sbb
aaa
rol
insb
ja
fadd
fsubl
out
mov
popf
outsb
lods
arpl
scas
cli
xor
out
test
push
xchg
jmp
xchg
inc
sbb
jmp
adc
or
mov
dec
inc
fmuls
pop
out
imul
movsl
fsts
push
mov
pop
pop
hlt
jl
mov
and
pop
mov
je
xor
jmp
jae
xor
dec
ljmp
adc
pop
int
fsubl
sti
xchg
fwait
outsl
jnp
mov
out
js
cmp
or
in
dec
xor
lods
inc
inc
xchg
sbb
cmp
mov
cmp
std
fmuls
or
mov
fisttpl
sub
jnp
pop
xor
out
sahf
out
mov
mov
push
ret
mov
add
jmp
iret
shlb
xor
je,pn
inc
push
cmp
sbb
popa
stos
inc
into
cli
sub
iret
inc
enter
test
push
scas
or
mov
mov
xor
in
lods
push
inc
sbb
mov
rorl
jnp
loope
pop
jl
mov
in
mov
push
ja
cmp
addr16
fsts
mov
ljmp
inc
inc
rep
mov
xchg
scas
out
mov
pushf
pop
sbb
jbe
popf
mov
and
mov
aam
into
add
push
pop
add
inc
cmp
hlt
iret
stos
inc
add
fwait
bound
inc
add
dec
jbe
repz
dec
pop
add
adcl
nop
fs
sbb
sub
int3
sub
adc
mov
xchg
add
cmp
mov
adc
push
lods
sbb
cmp
push
data16
scas
jae
xor
and
faddl
xor
and
fisubrs
push
je
stc
popa
or
cld
mov
xchg
add
xor
ret
adc
cwtl
ret
push
js
lock
xor
sbb
jbe
cmpsb
cs
cmp
lcall
pop
cmpsb
cltd
mov
mov
mov
sbb
mov
or
adc
in
pop
dec
mov
adc
cmpsb
lahf
dec
retw
and
rdpmc
outsl
mov
fdivp
int
inc
dec
in
sub
imul
ljmp
call
push
repz
xchg
pop
and
mov
mov
ljmp
mov
testb
inc
xor
popa
sub
fldt
call
mov
jle
cmp
sub
adc
inc
dec
add
inc
and
ret
leave
xchg
mov
sti
in
jae
push
add
lahf
mov
adcl
mov
xor
cmpsb
xor
xchg
xor
stc
jns
mov
adc
mov
and
lds
out
mov
inc
xchg
cmpsb
dec
dec
sub
loopne
js
cmp
cmpsl
mov
adc
inc
sbb
stc
or
mov
xor
out
neg
outsb
inc
push
ret
jb
test
test
icebp
jle
xor
inc
dec
adc
popa
or
imul
dec
lahf
lods
mov
xor
sbb
or
jne
test
rcrb
jb
xor
clc
push
clc
and
xor
std
inc
mov
push
lea
enter
jmp
pushf
cltd
out
dec
out
es
mov
mov
mov
inc
bound
into
push
add
or
push
divl
dec
loope
xchg
cwtl
jae
sbb
dec
mov
daa
repz
call
mov
pop
or
cmp
cmc
cmpsl
imul
mov
inc
lods
in
xchg
ret
mov
repz
cwtl
hlt
push
adc
pop
push
movsl
sbb
or
aad
or
ud1
jns
pop
xchg
addl
sub
movsl
push
loop
jnp
add
fcoml
pop
insb
imul
dec
int3
movsb
sub
adc
icebp
push
mov
and
add
or
mov
cmp
aad
add
rorb
out
push
jbe
or
cmp
popf
fs
stc
lds
mov
mov
jle
stc
je
mov
fsubl
rcll
mov
gs
xchg
outsl
mov
inc
outsb
lcall
jmp
out
jge
push
xchg
add
pop
or
loop
adc
add
push
fcomps
repnz
or
outsl
aas
sub
xor
sub
sahf
xor
or
jmp
orl
pop
push
ljmp
aaa
aaa
mov
push
js
dec
stos
out
jg
jne
call
push
outsl
sar
insl
loopne
xchg
in
lods
jg
jns
sub
in
adc
push
cmp
fnstsw
cmp
mov
sbb
and
ss
lods
mov
mov
lods
rcr
je
add
imulb
cmp
jle
sub
xlat
xor
jne
mov
lret
loopne
pop
int
push
pop
dec
dec
sbb
xchg
add
mov
rclb
sub
mov
sarl
rep
lcall
mov
and
pop
enter
ss
fdiv
jns
dec
jp
shll
cmp
in
sbb
push
stos
pop
iret
pop
sbb
and
cs
imul
mov
aas
jno
inc
dec
jns
jb
lret
xlat
and
push
iret
int3
in
cmpsb
std
lcall
stos
int3
inc
cs
test
push
cld
fisttpll
sbb
push
add
or
inc
outsb
sar
ds
push
insl
movntps
lret
repnz
ret
or
cmp
out
pop
mov
dec
stos
adc
insb
pop
and
iret
fistl
pop
xchg
pop
push
ja
xchg
shld
por
sbb
into
test
inc
pop
mov
push
movsb
movsl
mov
sbb
pop
jbe
out
sub
dec
call
aas
xor
push
cli
data16
scas
scas
xchg
mov
psubusb
mov
movsb
es
jnp
mov
popa
mov
inc
sbb
sbb
mov
pop
imul
push
lds
sbb
int3
pushf
hlt
addb
sbb
sar
fsubs
add
pop
xchg
insl
rorb
mov
cmp
xor
cltd
jns
mov
jg
push
jno
sub
sti
jg
pop
jo
xchg
cmpsl
ret
ret
sub
or
aas
dec
inc
xchg
int
or
lret
ret
cmpsb
stos
adc
jbe
xchg
cmpl
sub
add
aaa
call
or
sbb
fists
imul
dec
xchg
into
fmull
lcall
xchg
mov
outsb
jge
in
dec
cmpsb
insb
cli
nop
xlat
mov
push
ds
fwait
or
das
and
push
dec
fwait
xor
movsl
inc
fcmovbe
arpl
je
es
test
cmpsb
les
test
xchg
or
sbbl
jae
jg
dec
pop
lock
stos
pop
imul
fstl
dec
mov
pusha
adcb
negl
cmp
push
je
stos
mov
sub
add
pushf
dec
push
xor
mov
mov
fldenv
pop
sbb
add
cltd
and
inc
lret
mov
jmp
ret
ss
cwtl
fimull
jecxz
addb
jbe
pop
push
fcoml
inc
xor
bound
aaa
xchg
out
aad
push
xchg
and
xor
or
out
jno
mov
inc
adc
ret
or
xchg
js
scas
ret
push
fimull
fsubs
cmpsl
cmp
pop
dec
lods
stc
jnp
test
dec
xor
jmp
paddusb
pop
outsb
ds
movsb
nop
imull
scas
nop
loope
stos
xlat
bound
jne
jmp
jge
inc
test
jp
fbld
or
lret
dec
paddw
push
or
ds
sti
out
sub
inc
mov
or
flds
pop
in
cmp
pop
stc
hlt
mov
dec
iret
jb
ret
pop
pop
js
outsb
mov
movsl
outsl
jbe
movsb
or
xchg
cltd
pop
lock
or
enter
xchg
push
out
shll
push
sbb
mov
ja
jmp
ds
dec
mov
xor
shll
sbb
xor
fcompl
sbb
ds
in
xor
lcall
fadd
cs
int3
and
jnp
dec
jl
add
fstps
cmp
mov
mov
lock
pop
xchg
mov
mov
add
fistpll
test
subb
jnp
push
test
test
mov
sbb
dec
pop
fcoms
scas
rclb
test
mov
add
mov
in
adc
pushf
dec
mov
repnz
lea
jae
pop
test
xchg
mov
iret
xchg
and
cmp
mov
pop
jnp
in
imul
adc
lcall
notb
shl
ljmp
mov
xchg
xor
dec
pop
dec
dec
mov
das
movsb
mov
push
pop
cmp
adc
pop
cmp
xlat
sti
mov
mov
testb
xchg
jmp
sti
xor
inc
es
or
mov
cs
shl
xchg
jle
pop
mov
stos
mov
jae
hlt
mov
push
mov
ja
incl
std
mov
xor
movsl
xchg
dec
sub
loopne
cltd
jge
scas
mov
pop
jnp
add
jne
mov
lcall
in
test
ja
fnstsw
nop
aam
insb
fistpl
ss
jmp
mov
popf
stc
mov
jl
out
aas
adc
pop
es
pop
stos
xchg
into
cs
mov
fucomip
mov
cmp
loopne
dec
movsb
or
jb
ret
int3
inc
sbb
jmp
sub
xor
int
or
ficoms
sbb
adc
inc
repnz
ret
into
and
lcall
enter
test
dec
ja
xchg
ja
dec
dec
dec
adcl
cmp
gs
fwait
push
lret
sbb
mov
mov
outsl
mov
sbb
xchg
xchg
loope
cmp
hlt
mov
mov
icebp
adc
pop
dec
sub
cmpb
les
adc
mov
repz
or
icebp
xchg
push
fisubrl
mov
sub
xor
xor
mov
pushf
scas
pop
loopne
lock
int
pop
outsl
lahf
out
mov
mov
out
loop
icebp
test
jmp
dec
call
ret
pop
fwait
pop
jae
clc
add
sub
mov
ret
mov
mov
notb
add
ret
jle
scas
sbb
and
pushf
rep
mov
fs
dec
adcl
add
iret
ds
sub
lods
sti
mov
repnz
jno
sub
les
jnp
pop
cmc
insl
and
lock
cmpsb
cmp
mov
aad
cmp
xchg
js
ffreep
js
shrl
sahf
fldpi
dec
loop
cli
xlat
outsl
and
jmp
sti
adc
xor
aam
push
subl
in
daa
loopne
imul
in
and
push
inc
ljmp
jae
pop
popa
xchg
sub
repnz
mov
popa
jne
xchg
nop
shlb
clc
addl
sub
sbb
popa
test
pop
hlt
movsb
sbb
jnp
stc
adc
jmp
jp
call
call
movsb
scas
movsb
repnz
jae
scas
ja
sub
ja
in
mov
rcrb
lcall
outsl
fsubr
leave
push
sbb
pop
ja
jns
push
ret
sub
cmpsb
add
mov
mov
inc
xor
lea
mov
pop
jge
mov
adc
fcomp
pop
push
push
popf
sbb
sbb
rolb
add
mov
call
xchg
sbb
push
rcrl
nop
pushf
mov
push
cmp
test
pop
shlb
pop
pop
xlat
mov
dec
or
inc
popf
stos
dec
popf
cmp
xorb
mov
sub
cmp
in
subl
cs
and
jge
hlt
addr16
sub
push
lret
fldl
les
jle
add
andl
xchg
dec
xor
inc
jmp
pusha
xchg
and
push
int3
lret
mov
jmp
jmp
js
dec
dec
stos
and
lds
roll
out
mov
pop
mov
enter
clc
int3
push
adc
push
into
leave
xor
push
lcall
sub
std
outsl
xchg
loope
pop
adc
xchg
sbb
xor
sub
repz
cltd
and
lret
jo
push
in
jg
cld
mov
ljmp
shlb
test
ror
ds
fwait
scas
dec
je
fmull
sbbl
mov
ja
pop
pop
mov
ret
jno
inc
mov
and
popa
inc
dec
out
orl
insb
les
mov
or
leave
cmp
or
popa
sub
out
jl
mov
add
mov
es
stos
fidivl
cmp
dec
out
adc
sub
shlb
fidivl
lahf
sbb
pop
testl
adc
cmp
mov
call
shrl
mov
hlt
mov
mov
mov
bound
mov
cmp
or
aas
adc
movsb
aaa
stc
test
push
sbb
aas
fnsave
call
subb
jp
inc
aad
and
adc
dec
pop
out
subl
enter
decl
fs
inc
stos
add
mov
inc
xor
cli
jl
pop
pop
adc
or
adc
jmp
mov
inc
aaa
arpl
jl
xchg
jo
jle
add
cs
jmp
xor
inc
sahf
out
inc
xchg
or
loopne
outsb
fnstcw
push
es
or
scas
dec
aas
adc
pop
pusha
adc
bnd
push
inc
arpl
sarl
cmc
jmp
pop
sbb
jp
test
sarb
dec
lahf
mov
out
inc
std
fucomi
stos
mov
push
adc
push
sub
andl
mov
sbb
lock
jp
pmaxub
cmpsb
icebp
cmp
mov
aaa
push
fistpll
lret
inc
lea
lea
jle
mov
sbb
xorl
insl
sub
mov
into
mov
ret
lods
inc
dec
add
leave
mov
shl
pop
addr16
and
xchg
fisttpl
mov
dec
cmp
jne
or
mov
cwtl
xchg
cmp
testl
sbb
mov
xchg
jae
xchg
jecxz
leave
ss
rcrl
rcr
ss
pop
stos
scas
sbbb
sub
aad
jbe
sbb
rcrl
cmp
rclb
icebp
xchg
dec
sbb
xchg
add
cmp
dec
adc
lods
dec
call
iret
aas
xchg
jge
adcl
sub
push
mov
jns
adc
inc
dec
dec
fiadds
cmp
pop
lds
jp
out
xor
push
mov
test
lea
and
jne
cmpl
or
pop
loopne
and
sti
dec
or
pop
pop
lock
xlat
int3
adc
addr16
pop
imul
movsl
lret
push
dec
in
xchg
std
jl
rcrl
andb
mov
shrl
shrl
je
jno
fldl
sti
push
mov
cmp
ss
xchg
mov
lahf
cltd
lock
ljmp
movsl
rolb
adc
and
insl
jo
pop
mov
xchg
add
add
out
idiv
scas
xor
sbb
push
push
mov
add
pop
add
sbbl
jmp
call
stc
popf
mov
jnp
jg
push
or
enter
push
xchg
scas
dec
and
mov
je
mov
test
inc
push
inc
cmp
popa
lods
outsb
fiadds
les
xor
stos
cs
mov
cmovo
movsl
ret
fidivrs
xchg
popa
rcrb
xchg
test
hlt
sub
sub
sbb
mov
into
mov
sub
mov
call
in
imul
or
xor
shr
insl
sub
push
mov
dec
mov
outsl
mov
and
adc
pop
sbb
jg
push
popf
stc
leave
cmp
add
and
xchg
add
cmp
iret
rorl
int
mov
jg
outsl
or
pop
adc
jns
das
cwtl
shll
mov
adc
adc
subl
loope
push
pushf
popa
add
ret
shr
sbb
jnp
ucomiss
ffree
ret
callw
pop
loope
jb
imul
popf
inc
jge
out
dec
aaa
push
inc
movb
xchg
stc
arpl
xchg
sub
gs
mov
xchg
jne
pop
in
insb
sbb
popf
lods
inc
adc
push
idivb
sbb
cmp
inc
popa
lds
out
cmpsb
push
int
out
inc
cmpsb
adcb
std
inc
jmp
and
jmp
cmp
sub
mov
sub
imull
imul
add
xchg
cmpsl
test
fimuls
aaa
enter
cs
dec
cmpsl
mov
rcr
xchg
loop
outsb
sbb
pop
inc
jecxz
ss
add
mov
add
xchg
idivb
sbb
dec
cmp
dec
out
bound
mov
sbb
push
sbb
and
xchg
and
mov
loopne
das
roll
repnz
jno
icebp
pop
inc
xor
movups
and
cwtl
dec
fsts
xchg
xor
popf
cmp
pop
xchg
fs
mov
cmp
cmp
lea
pop
xlat
outsb
sbb
dec
mov
push
sub
fwait
and
jg
xchg
sarl
push
and
loopne
arpl
jnp
addr16
cmpsb
push
leave
mov
pop
xor
dec
je
jns
mov
fnstcw
pop
adc
int
add
add
fisubrl
mov
das
fstpl
push
frstor
jg
cs
jbe
stc
fidivs
enter
into
cmpsl
adc
movsl
or
dec
jo
push
shrl
inc
pop
iret
bound
loope
sbb
call
insb
xchg
shlb
aad
dec
mov
sub
bound
add
pop
sub
jae
xchg
dec
mov
jg
inc
jbe
push
cs
es
jle
push
cltd
lods
push
push
xchg
clc
cwtl
incl
ljmp
dec
loopne
loopne
fisttpll
pop
jno
cmp
and
ljmp
jecxz
add
mov
push
dec
push
mov
test
mov
jp
clc
int
mov
mov
mov
xor
fcmovu
mov
jmp
addl
xchg
jmp
cmp
jno
rorl
add
call
addb
mov
enter
or
in
test
les
js
cld
and
mov
push
add
arpl
sbb
push
jge
push
or
in
xor
popf
test
mov
in
ss
insb
cli
pop
pop
int
comiss
insb
add
adc
pop
mov
sub
andl
roll
leave
cmp
adc
rcr
adc
call
sbb
imul
lcall
and
or
int
sahf
xchg
xchg
dec
adc
inc
and
imull
dec
jle
inc
push
int
mov
lret
jb
mov
inc
icebp
and
addr16
adc
lret
int
je
jp
jbe
cmpsb
sbb
add
pop
ficompl
adc
cmp
sbb
imul
xchg
inc
sub
mov
popf
mov
lret
mov
popa
mov
loop
out
lea
ficompl
or
dec
mov
lret
daa
int
or
jns
inc
lods
mov
fisubs
mov
daa
push
fidivs
aas
aaa
iret
xchg
cld
xchg
movb
push
stc
outsb
sbb
xlat
outsb
inc
push
fisttps
jb
call
inc
lret
cld
mov
fldenv
jge
push
xchg
jo
mov
insb
adc
aaa
or
sbb
dec
add
das
sbb
out
dec
add
cmp
ret
mov
cwtl
add
aaa
dec
cmc
je
icebp
and
cmp
ja
bound
in
inc
pusha
call
push
aaa
out
sub
fwait
inc
pop
iret
mov
jp
pop
lcall
addr16
ror
and
push
dec
push
fidivrl
mov
shll
aaa
mov
loop
rorl
push
and
and
aam
pop
int3
sbb
adc
xor
fdivs
xchg
mov
fnstcw
mov
mov
mov
gs
addb
push
jp
out
cmp
in
push
test
sbb
notb
sub
pop
jmp
dec
out
push
cmp
sbb
fwait
mov
fidivrs
scas
fs
dec
xor
movsb
loop
fcomps
int3
xor
fs
lahf
mov
test
mov
rorb
adc
out
adc
repz
sbb
fldcw
test
sbb
dec
pusha
jnp
pop
popf
xor
xchg
daa
cmp
xlat
addl
shlb
imul
ds
fsub
shlb
xchg
shlb
in
xchg
pusha
in
ljmp
dec
and
lods
cwtl
call
xorb
cs
loope
and
shrl
or
repz
pushf
les
xor
nop
xor
repz
sbb
addr16
fimull
sahf
and
jnp
in
dec
bound
cmp
sub
jle
mov
xor
sub
xchg
negl
es
inc
mov
dec
popl
out
shrb
fcomps
push
mov
mov
pop
divb
dec
xchg
push
hlt
ljmp
outsl
adc
or
or
and
int
data16
loopne
mov
pop
call
inc
sbb
or
sub
scas
sbb
xor
sbb
jno
sbb
loopne
mov
push
fcoms
cmpb
sbb
xor
pop
cmpsb
mov
fadds
inc
cwtl
gs
clc
add
or
lcall
mov
pop
dec
xchg
cltd
jge
dec
out
lret
test
push
inc
mov
add
imull
xor
stos
rorb
fisubl
xorb
xchg
pusha
stos
sub
fldcw
int
inc
out
dec
pop
loope
test
data16
pop
mov
dec
cmpsl
je
fldcw
pop
scas
lret
je
xchg
pop
ficoms
iret
lcall
fstpl
je
nop
into
cs
mov
out
jge
xchg
insb
dec
loopne
aaa
dec
loope
dec
bound
add
xorl
mov
mov
out
jnp
pop
dec
jle
imul
mov
or
test
cmpsb
mov
sub
leave
pushf
cmc
call
push
insb
leave
popa
loopne
push
call
inc
pop
out
daa
mov
or
lods
ljmp
dec
push
stos
xchg
push
stc
or
out
mov
enter
dec
fisubl
xchg
dec
out
mov
cli
cmc
pusha
insl
sub
outsb
sub
bound
insl
addb
xchg
push
pop
jecxz
add
test
ljmp
inc
aaa
scas
and
inc
clc
adc
cmp
jecxz
pop
mov
mov
cs
jg
sbb
push
loopne
adc
push
and
mov
int3
adc
xchg
add
aaa
push
jae
rol
jge
mov
sbb
dec
daa
mov
in
cld
ja
inc
fidivl
cmp
dec
iret
iret
mov
jle
or
sahf
dec
mov
cmp
push
ror
scas
test
or
shrb
xchg
hlt
adc
shl
or
aaa
xchg
sub
in
lods
add
mov
dec
es
jbe
xchg
cmpsl
inc
fdivrs
sub
or
cmp
push
les
mov
mov
add
dec
imul
pop
xor
cltd
in
pop
sbb
pop
mov
ret
int3
bound
mov
cmp
leave
stc
dec
mov
push
cmp
stos
cmp
xchg
fs
xlat
call
cmpsb
push
xrelease
xchg
mov
push
cmp
ret
hlt
ret
dec
je
sbb
bound
cmp
push
in
bound
mov
push
sub
fs
mov
pop
test
xor
repnz
and
push
js
push
subb
cmp
mov
lock
xchg
movsl
sbb
ljmp
mov
push
inc
and
inc
das
cmp
dec
xchg
hlt
rcll
cmp
xor
mov
lahf
add
enter
popa
mov
insb
mov
xchg
jae
push
pmaddwd
sbb
push
dec
cwtl
lahf
dec
cmp
pop
lods
sbb
mov
xchg
pop
add
lea
xchg
mov
inc
sub
xchg
test
insl
sub
pushf
repz
and
pop
mov
push
push
cmp
pop
imul
lods
aam
mov
pop
lods
xor
xchg
or
mov
cmp
repnz
lds
mov
mov
enter
mov
pop
xchg
sbb
stc
out
jmp
fwait
xchg
fs
mov
orl
add
out
test
cltd
test
mov
roll
testb
cmp
fbstp
pop
cmp
or
ret
in
xchg
in
sbb
mov
hlt
imul
sbb
ret
mov
hlt
hlt
xchg
sub
fdivrl
pop
shlb
cld
shll
sti
pop
lret
cmpsb
insb
std
jnp
cltd
popf
xchg
out
leave
mov
sbb
push
notb
decl
fisttps
pop
mov
mov
incl
lods
inc
push
inc
outsb
in
ss
lret
xor
adc
lods
frstor
dec
push
xchg
mov
mov
and
and
aad
inc
aaa
into
jno
pop
adc
aam
push
xchg
rclb
fcmovb
testl
iret
adc
mov
andl
cltd
or
xor
les
call
xchg
pop
fcomi
shlb
jno
mov
jne
ljmp
xlat
or
adc
add
xor
es
cmpsb
pushl
inc
add
fbstp
jo
inc
popf
lods
xchg
xor
dec
js
out
inc
popf
jecxz
arpl
faddl
pop
xor
call
lods
and
inc
sbb
mov
dec
add
cmc
out
dec
cmp
pop
into
mulb
daa
aam
push
add
cld
push
aad
out
adc
in
icebp
jp
dec
shll
jo
clc
jg
adc
fcoml
in
sbb
faddl
adc
jge
in
jb
fnstsw
call
or
mov
cwtl
gs
adc
adc
fs
and
pusha
ss
mov
add
cmpsl
jns
aad
addl
fistpll
stc
nop
rcrl
pop
in
mov
sbb
out
out
sti
dec
rolb
fsts
les
mov
fcoml
in
das
pop
mov
lock
add
in
sub
aas
imul
adc
out
mov
in
test
jmp
outsl
adc
sub
pop
fcoms
or
jle
jnp
jmp
mov
dec
xchg
dec
or
dec
cmp
mov
or
jb
dec
fs
iret
jge
test
lret
lcall
sub
cmpsb
adc
inc
fdivrp
icebp
cmp
sub
lock
inc
adc
popa
dec
cmpsb
cmp
cmp
aad
mov
sub
ret
pop
lds
push
push
sbb
orb
xor
sbb
mov
mov
popf
out
mov
lea
call
mov
jp
mov
loop
jnp
fidivrl
inc
movsb
mov
or
mov
dec
push
les
enter
adc
adc
test
pushf
mov
xor
lret
clc
inc
enter
lret
add
mov
out
push
mov
lods
es
push
in
or
mov
inc
push
mov
sarl
stos
jb
ja
rorl
sbbb
dec
or
les
ljmp
adc
test
cmp
movsb
cmp
mov
gs
pop
xor
inc
aaa
ja
das
dec
rorb
cmp
int3
aad
jle
repz
mov
mov
in
jl
pop
cld
and
dec
xchg
notb
mov
add
push
int
mov
push
outsl
pop
jp
ja
in
repnz
into
cmc
jns
mov
xchg
cli
adc
in
paddusb
mov
cld
adc
scas
in
loopne
fwait
das
xor
in
mov
jmp
out
mov
out
insl
aas
das
add
fiaddl
leave
fcoml
xor
leave
adc
dec
rcrb
dec
xlat
mov
imul
aad
imul
loopne
aam
push
push
mov
xchg
hlt
lods
pop
insl
repz
in
in
ret
stos
cld
mov
or
sbb
inc
fists
cmp
movsb
push
lock
in
sahf
push
dec
cmp
dec
stc
dec
push
repz
not
adc
jb
loope
pop
ja
adcb
cwtl
out
pushf
idivl
popa
dec
pop
sbb
call
imul
cmp
in
lret
dec
ret
faddl
scas
dec
in
and
jo
cmc
or
clc
popl
aad
cwtl
push
dec
dec
sahf
movsl
inc
shrb
inc
enter
cli
fs
arpl
js
repnz
adcl
jl
xchg
popa
fsubs
cmpsl
xchg
rcrb
jp
jl
push
adc
ret
lea
mov
adc
or
jo
jno
cmp
scas
push
jnp
cmp
xchg
outsb
inc
rclb
cltd
int3
scas
mov
shrl
enter
push
jb
and
out
enter
fbstp
adc
mov
sub
dec
push
sbb
sbbl
outsl
fbstp
cmp
popa
push
sub
pusha
stos
add
xchg
pusha
dec
mov
mov
mov
mov
push
shrd
in
jb
pusha
mov
lret
ret
arpl
mov
outsl
into
pop
mov
jecxz
jg
sahf
icebp
leave
hlt
aad
es
pop
mov
test
push
xchg
sub
pop
jge
gs
ret
out
iret
popf
in
cltd
shl
bound
jmp
jmp
popa
in
fbstp
test
pop
push
adc
add
adc
fs
and
mov
mov
pop
mov
jge
scas
arpl
jle
xor
loop
push
or
inc
fcmovnbe
popa
das
add
ret
fsubl
fnsave
mov
jne
inc
mov
dec
lods
and
dec
fwait
ljmp
mov
sub
lock
add
fisttpll
lea
imul
das
movsl
xor
xchg
inc
pusha
lods
push
test
shll
fidivl
test
dec
xchg
clc
cmpsl
test
out
cmpsb
pop
push
mov
aad
ljmp
mov
ret
loopne
inc
push
dec
mov
and
jnp
cmp
fnstsw
shl
test
mov
cld
lret
xor
jmp
aas
mov
cld
lock
pop
cmc
lock
pop
jae
lahf
inc
mov
jmp
sbb
sbb
xchg
ret
fldenv
pop
fwait
cltd
adc
pop
or
std
xchg
xchg
mov
xchg
jecxz
sbb
mov
sbb
dec
and
mov
call
cmp
push
in
mov
push
jl
gs
jl
int
testb
subb
mov
sbb
out
xor
lret
lock
cmp
cmp
and
sub
stos
sub
jne
ret
sahf
add
sub
cwtl
inc
jg
call
ss
inc
lcall
pop
and
call
dec
lock
insb
out
jp
into
and
push
ss
adc
stc
mov
dec
out
pop
movsb
jns
adc
mov
xchg
daa
cli
scas
stos
loope
lahf
ss
xor
stos
pop
push
sarl
lret
hlt
mov
data16
cmpsl
cmp
xchg
push
jne
movsl
cmp
add
fistpll
pop
adc
mov
loopne
pop
aaa
mov
mov
into
pop
divl
in
aam
cltd
insl
ja
push
mov
pop
into
cli
adc
add
sbb
imul
xor
stc
loope
rcrb
sbb
test
inc
lret
sub
and
dec
adc
jle
or
push
inc
cmp
mov
pop
prefetchnta
aaa
into
call
or
rcrb
xor
or
testb
dec
xor
pushf
mov
aad
popa
mov
shl
aaa
push
out
pop
xor
packuswb
mov
mov
mov
jge
mov
push
inc
lcall
dec
xlat
mov
or
rorb
lret
dec
mov
xor
inc
sbb
dec
inc
iret
out
fsubrs
xlat
lea
lock
xchg
into
loope
add
pop
scas
adc
push
packssdw
push
cmp
movsb
lahf
mov
sub
test
xchg
lds
push
pop
xor
lea
pop
test
mov
cli
lcall
stc
sbbb
push
and
hlt
cmp
jge
push
push
dec
fsubr
jl
aas
mov
sub
jl
push
lock
xchg
clc
jg
sub
mov
sbb
aaa
xor
mov
dec
push
cmc
fldl2e
jl
push
aam
mov
sub
pop
jno
and
aad
fdivs
mov
dec
mov
ja
jecxz
push
out
xchg
inc
lods
mov
mov
add
xchg
add
xchg
popf
pop
mov
into
pop
stos
jmp
imul
adc
outsl
cmp
adc
adc
shll
inc
fisubrl
or
mov
pusha
jmp
sbb
cli
cmp
arpl
ja
mov
mov
pop
mov
jp
cs
fildl
bound
jl
cmp
iret
incb
push
cs
jl
repnz
test
adc
jns
and
xor
decl
cltd
cmp
sahf
sub
sti
and
mov
or
lret
fs
sarl
das
inc
fsubl
pop
repnz
pop
insl
sub
clc
int
or
ljmp
and
hlt
sbb
divb
mov
cmova
pop
loop
and
ds
mov
xchg
jne
add
mov
lret
add
and
push
popf
xor
sarb
out
cmp
in
pop
or
stos
pop
nop
dec
inc
xchg
sbb
lods
adc
mov
movsl
or
mov
inc
iret
lahf
and
stos
cmpsl
sahf
gs
xor
push
mov
les
negl
int
dec
nop
popa
jle
loope
adcb
insl
or
adc
clc
hlt
lods
mov
mov
cmp
add
cmp
push
sbb
sbb
jmp
or
cmp
push
sub
out
mov
push
pop
fistpll
scas
stos
mov
rclb
jbe
sbbb
clc
lods
int3
lahf
scas
mov
xchg
repz
pop
mov
pusha
push
mov
psubsb
jle
mov
add
mov
cmp
inc
imul
pop
sbb
and
push
arpl
stos
pop
je
sbb
xor
and
aaa
shrl
lret
leave
jg
sub
loopne
lret
daa
clc
dec
inc
xchg
sti
xor
sub
sbb
rorb
mov
shlb
clc
out
push
xchg
lcall
mov
mov
in
adc
pusha
adc
push
xlat
je
sub
popa
or
sbb
mov
inc
mov
out
jbe
cld
mov
inc
jecxz
imul
out
stc
shlb
push
pop
icebp
dec
adc
xchg
push
xchg
push
xor
mov
cmp
test
push
shlb
out
inc
out
adc
ror
cmp
inc
pop
sub
adc
or
scas
sbb
pop
mov
jne
leave
push
sub
add
ss
rorb
mov
fdivrs
cs
inc
scas
into
pushf
iret
jnp
jecxz
pushf
push
scas
dec
mov
push
jo
jge
push
scas
xchg
mov
adc
pop
mov
dec
insl
xchg
add
dec
pop
movsb
cmp
dec
stos
rcl
testl
xchg
out
sub
pop
mov
cltd
mov
aas
inc
shlb
lods
rcr
insb
add
stc
int3
int3
pushf
xchg
xor
mov
pop
inc
aad
push
lea
pop
repnz
popa
insl
cmp
and
xor
iret
insl
ret
mov
pop
enter
mov
loop
cld
outsl
jge
mov
xchg
push
push
mov
mov
in
sub
push
ret
cmp
cli
insl
in
ja
mov
repz
xchg
outsb
aam
incl
cmpsl
faddl
scas
scas
mov
mov
inc
pop
test
cmp
push
je
mov
rcl
cltd
hlt
sahf
clc
cmp
jecxz
aad
cli
cmp
mov
and
or
incb
sub
add
imul
pop
adc
and
inc
mov
repz
aaa
push
mov
incl
cmpsb
xchg
xchg
add
adc
divb
insl
gs
cltd
jbe
hlt
cmp
push
push
lcall
push
inc
mov
sbb
mov
imul
gs
in
test
mov
test
into
cltd
or
ret
lds
cld
mov
push
in
aas
pop
xchg
and
jae
or
sub
and
iret
fisttps
sub
pop
out
ret
bound
add
add
mov
pushf
sarl
jmp
imul
lcall
pop
push
lods
adc
cwtl
ret
mov
lods
cmp
push
xor
pop
add
imul
lahf
mov
dec
and
mov
into
xchg
fbstp
in
lea
in
push
loop
inc
stos
inc
jmp
je
pop
or
call
sarl
and
mov
ja
jbe
dec
test
inc
loope
jl
test
sahf
aaa
cwtl
call
mov
cmp
jp
or
adc
mov
aad
push
mov
push
leave
jg
repnz
int
pushf
inc
add
jo
dec
faddl
sbb
mov
mov
popf
push
popf
lret
scas
jno
and
sub
inc
roll
pusha
je
movsl
and
push
push
ja
ja
loope
and
shrb
cwtl
lea
cmpsb
cmp
cmp
lods
gs
insl
xchg
int
fdivl
ret
cwtl
push
jbe
mov
add
lret
mov
loopne
jno
or
data16
je
arpl
add
xchg
lock
push
repz
push
iret
lds
xlat
push
and
sub
fstpl
mov
sub
enter
stos
mov
dec
test
mov
out
xchg
xor
mov
xor
mov
mov
adc
rcrb
mov
push
enter
cmpsl
ljmp
inc
fwait
ret
jb
adc
jmp
shlb
call
frstor
mov
in
push
push
xorl
iret
movsb
mov
pop
xchg
pushf
js
jg
cmp
fmulp
popa
cwtl
test
mov
mov
push
sub
mov
in
insb
out
xchg
loop
imul
mov
sub
aaa
push
in
nop
dec
fstl
mov
fsubs
stc
dec
in
xchg
or
jmp
adc
xor
jmp
mov
pushf
lea
sub
daa
dec
stos
jg
sub
std
push
orb
cmp
pop
sbbb
insl
das
scas
jecxz
loopne
jg
xchg
iret
js
inc
mov
ret
xchg
adc
pop
scas
mov
xor
je
andps
sub
shll
sbb
dec
mov
jp
push
fiaddl
or
inc
flds
push
ret
mov
ret
adc
stc
mov
and
push
cltd
add
fsubrl
loope
imul
lds
mov
movsb
mov
dec
data16
xchg
cmp
mov
addr16
lock
faddl
and
aam
jo
dec
mov
insb
shrb
pop
and
std
popa
mov
test
xor
mov
inc
push
xor
xchg
dec
xchg
movsl
int3
sub
jns
into
xchg
pop
xchg
data16
bound
xchg
movsl
sar
inc
inc
scas
push
movsb
fsubs
dec
push
fwait
je
dec
into
jmp
fistpl
popf
mov
dec
and
in
fildll
dec
loope
sbb
addr16
sub
mov
out
fsubrp
xchg
add
dec
pop
cmp
lahf
imul
mov
imulb
psubusw
jns
jmp
sub
mov
xor
cmc
sti
mov
inc
out
xbegin
es
inc
mov
out
jl
mov
cmpsb
js
sti
repz
push
rolb
add
fidivrs
jge
lcall
ja
cmp
xchg
popl
mov
int3
sub
push
decl
jp
gs
and
jne
popa
push
or
gs
std
pop
enter
jb
jb
int
mov
in
mov
aaa
out
jns
inc
jmp
push
mov
out
dec
and
sarb
bsf
in
das
adc
lea
add
jne
rcrl
cld
addr16
sbb
ret
aas
inc
lcall
dec
ljmp
jmp
notb
into
loop
rclb
sbb
jl
mov
enter
cld
push
dec
into
movsl
add
pop
cmp
pop
pop
dec
jl
or
cmp
mov
cltd
push
dec
gs
sbb
sub
insb
in
xor
and
and
cltd
sti
or
dec
out
and
cld
mov
test
cmp
push
pop
jae
mov
cmp
mov
aas
cld
cltd
cmpsl
addb
adc
mov
ja
stos
sbbl
nop
int
dec
out
popf
lods
pop
mov
stos
shrb
push
mull
pop
int3
push
into
push
dec
into
js
sbb
push
sbb
in
sub
adc
xchg
in
rol
inc
repnz
xchg
inc
lret
push
shl
xchg
add
bound
push
in
adcb
out
orb
scas
imulb
mov
pop
jmp
mov
xlat
pop
fdivl
pop
out
add
or
sahf
filds
imul
mov
push
adc
jle
mov
push
call
lcall
loope
leave
hlt
adc
test
sub
cltd
adc
sbb
into
xchg
mov
or
in
and
popf
dec
repz
inc
mov
les
aad
cmp
test
or
enter
xor
xchg
or
test
xchg
jg
aad
cwtl
sarb
add
cmpsl
inc
sbb
ljmp
fwait
and
and
movhps
out
inc
pushf
int
mov
sbbl
xchg
mov
daa
out
push
mov
xor
cmp
cmpl
adc
dec
inc
insl
pop
xchg
into
enter
call
movsb
mov
mov
outsl
lock
or
and
pushf
shl
cmp
pop
ja
lcall
mov
xor
loop
clc
leave
push
out
cmp
xacquire
pop
shld
ss
in
in
out
into
movsb
outsb
or
mov
xchg
mov
cli
test
xchg
repz
testl
mov
fwait
mov
divb
mov
lea
sbb
je
pop
sub
jge
neg
jno
push
mov
enter
cmp
pop
das
push
pop
sbbl
mov
sbb
push
insl
int
pop
aam
dec
mov
repz
je
add
xor
sti
sbb
mov
loopne
dec
pusha
mov
loope
adc
push
sub
out
lods
les
dec
mov
push
add
mov
jne
push
lods
jae
sub
pop
repnz
pop
xor
or
pop
movsb
cmp
icebp
or
mov
and
movsb
adc
jb
rcl
decb
xorb
xchg
xlat
pop
mov
movsl
into
paddusb
fildll
jne
scas
pop
outsb
outsl
inc
clc
subl
or
dec
xchg
xchg
fisubrs
sbb
ret
push
fisubl
sbb
outsl
gs
pop
mov
pop
sbbl
mov
inc
cmpsb
cmp
mov
add
push
adc
jb,pn
jne
enter
insb
jmp
adcl
adc
mov
fwait
push
adc
icebp
xor
stos
daa
xchg
js
lahf
stc
fdivl
mov
inc
lods
dec
and
outsb
xor
adc
movb
in
test
fmuls
mov
icebp
stos
inc
and
repnz
jg
fistpll
fisubs
pop
bound
leave
push
repnz
inc
aad
or
add
sti
jb
sbbb
or
stos
daa
pop
xor
aam
dec
dec
ret
cltd
cmp
xchg
addr16
stos
sarl
frstor
push
jae
sub
vpmaddwd
fldcw
lods
popf
xor
es
leave
mov
push
add
or
and
add
es
pushf
lods
je
pop
xor
pop
movsl
and
pop
repz
push
fwait
xor
in
add
sub
mov
xlat
inc
repnz
jo
adc
ss
mov
les
mov
lcall
into
clc
inc
mov
mov
fcoms
push
xchg
jmp
xchg
adc
subb
imul
loopne
div
add
push
mov
inc
popa
xor
fldenv
imul
pushf
inc
mov
mov
popa
loopne
sbb
mov
out
pop
inc
repnz
test
adc
int3
push
pop
es
in
and
inc
dec
in
cld
sbbb
movsl
imul
jbe
sub
adc
fcoml
test
mov
aas
jne
push
icebp
add
pop
roll
push
cmp
adc
fdivs
inc
mov
dec
mov
lret
subl
push
test
adc
sti
jg
xchg
mov
xchg
pop
fwait
xchg
push
repnz
insb
lods
jb
cmp
into
imul
add
adc
mov
pop
sbb
pop
scas
or
out
xchg
xor
mov
imul
mov
push
jp
icebp
pusha
testl
dec
mov
sahf
push
mov
sub
rorb
stc
and
push
out
pop
shrb
pop
clc
sbb
fbstp
pop
jmp
mov
mulb
rorb
push
xor
lea
and
daa
pop
xchg
and
dec
jp
adc
rcr
inc
popf
xor
jbe
ljmp
call
iret
lods
mov
fdivp
and
stos
shll
pop
mov
dec
in
fcomip
inc
shrl
mov
jne
xchg
jne
leave
ret
outsl
push
and
sub
sbb
fwait
cmpsl
add
add
in
adc
xor
mov
and
inc
lods
divb
push
xchg
bound
and
xchg
push
pop
daa
inc
out
dec
mov
xchg
mov
push
xor
cltd
mov
pushf
mov
out
inc
adc
and
inc
cmp
sub
mov
pop
dec
cmp
ret
push
push
mov
fbstp
cli
mov
repnz
mov
and
dec
ss
jmp
inc
addb
xor
or
adc
xchg
xor
lock
add
sbb
loope
adc
roll
in
xchg
fcmovnb
gs
lock
xchg
ret
enter
imul
add
dec
stc
and
push
insb
loop
jb
adc
cmp
lods
stc
ds
xchg
push
mov
lea
sbb
insb
insl
adc
jge
xlat
mov
popf
js
sahf
lods
je
push
negb
xchg
loop
jnp
scas
inc
fdivp
scas
lods
xchg
aam
fsubl
or
cmpsb
in
jne
addr16
test
aas
rol
jl
aad
push
pop
mov
pop
lock
mov
xchg
pusha
pop
mov
xor
mov
pop
mov
scas
inc
imul
test
inc
jo
adc
pop
fisttpll
out
shll
fsubrs
jle
inc
add
adc
call
pop
andb
and
adcl
mov
xchg
cmpsl
cmp
jmp
pop
ljmp
mov
xor
pop
test
aaa
and
dec
sbb
cmp
cmp
insl
aaa
pop
add
push
adc
pop
xchg
mov
mov
mov
xchg
push
push
testl
cmp
jmp
xchg
lock
inc
mov
jl
jno
pop
les
pop
mov
cmp
adc
sub
daa
leave
xor
repnz
fwait
stos
in
push
push
dec
out
popa
jo
add
repnz
jno
xor
repz
test
int
add
mov
add
clc
shl
xor
orl
cmp
fnstcw
sub
int3
mov
dec
test
in
arpl
xor
cmp
and
xchg
mov
stc
pusha
scas
mov
inc
cmp
test
push
icebp
mov
pop
mov
movsb
js
mulb
mov
and
ret
cmpsb
ret
jae
out
shl
mov
pop
pop
dec
fimull
mov
sbb
jle
pop
imul
xor
jl
xor
in
dec
mov
pop
nop
xchg
scas
ret
ret
mov
out
out
inc
pop
xor
xchg
and
xor
push
popf
mov
sbb
adc
jle
popa
movsl
cmp
mov
mov
je
inc
pop
mov
inc
sbb
cltd
jne
lret
scas
jmp
fucom
inc
jae
popa
cmc
das
rolb
mov
fsts
mov
cmpsl
dec
mov
fcmovbe
cmp
sti
imul
pop
divb
testb
repnz
daa
jge
pop
popf
push
out
aas
es
xchg
inc
fwait
xchg
sbb
rorl
jmp
xor
ret
xor
loopne
stos
loopne
fcoms
fcomps
out
sbb
shl
daa
xor
les
add
fistps
cltd
out
or
cwtl
gs
pop
rorb
sbbb
or
es
loopne
jg
ret
push
inc
jecxz
xor
ret
jl
in
xorb
leave
and
out
and
in
xor
pop
das
add
imul
fsubrl
outsb
push
scas
fnsave
push
mov
jnp
stos
sahf
and
fdivl
mov
and
add
enter
pusha
adcb
push
movsl
shl
fidivs
sub
mov
ja
xchg
and
pushf
lret
xor
and
out
popl
xor
jbe
dec
cmc
mov
call
repz
test
push
pop
pop
cmc
insl
add
jg
xchg
sub
xchg
loop
push
ljmp
lea
ljmp
imul
stc
stos
add
mov
roll
mov
orl
xor
push
or
fs
sbb
sbb
mov
outsb
arpl
pop
leave
xor
lods
call
or
pop
jge
stos
inc
xchg
mov
mov
pushf
dec
stos
movsb
cld
jmp
in
fists
scas
sub
sbb
prefetch
or
ljmp
jno
adc
jo
push
jmp
popa
sti
leave
cmp
lcall
stos
jp
lds
lret
xor
cwtl
cmpsl
idiv
push
sbb
dec
jl
enter
dec
or
mov
inc
fnsave
fsubs
jb
jecxz
or
inc
cli
dec
lds
adc
mov
aam
sbb
daa
jp
movsb
push
sbb
jl
sbb
jno
cmp
jne
pop
cmpsl
pop
push
adc
mov
sti
test
shlb
int3
gs
js
push
ret
push
xchg
cmp
mov
outsl
out
repz
jae
scas
adc
adcl
stc
inc
sbb
add
js
mov
lea
inc
inc
repz
mov
dec
in
pop
adc
sub
pusha
mov
inc
loope
cmp
xchg
add
push
mov
dec
loope
xor
mov
mov
outsb
or
in
popf
lods
fisubs
or
inc
addr16
inc
xchg
or
stos
or
push
fs
jnp
clc
subb
jne
loopne
iret
daa
inc
sub
cs
jb
jg
sbb
loop
fists
lahf
fdivs
imul
out
imul
jg
add
push
rolb
out
pop
push
loop
in
insl
sub
outsl
popf
add
cmpsb
int
add
push
jo
jb
mov
cmc
cltd
sub
push
adc
mov
call
cmp
incb
and
xor
inc
lods
fcompl
popf
nop
std
sub
cs
std
dec
inc
fiadds
call
cwtl
das
sbb
mov
les
stc
in
pop
sbb
enter
rol
lret
inc
adc
cli
negl
xchg
jne
adc
mov
jg
lea
cmp
and
sbb
jmp
iret
push
sub
cmp
shl
outsl
sbb
mov
lods
adc
push
push
dec
dec
jge
mov
pop
dec
shl
test
jmp
xorb
insb
jp
ret
icebp
shll
push
imul
xchg
and
mov
lds
or
ljmp
jae
movsl
icebp
js
mov
out
clc
call
pop
jns
sub
mov
scas
inc
mov
cmp
mov
push
or
btc
es
insl
sub
xor
jae
inc
loope
jl
push
icebp
mov
jae
and
jb
ffreep
jo
or
sbb
daa
inc
adc
int
popa
scas
jp
js
dec
pop
mov
dec
xchg
add
mov
out
mov
jbe
mov
sbb
mov
in
xor
dec
pop
lcall
jle
xchg
lahf
xor
rcrb
cwtl
das
inc
mov
mov
into
mov
cmp
shlb
pop
test
gs
je
ret
lods
push
xchg
jge
dec
aas
and
inc
jnp
sahf
mov
rclb
pop
int
mov
or
mov
mov
dec
mov
test
andb
sti
xchg
sbb
sbb
inc
inc
popa
sar
cmp
or
inc
cli
daa
jae
nop
xchg
daa
cmp
in
lods
addb
pop
dec
imul
lahf
das
fcom
mov
inc
sub
std
add
leave
dec
addb
jg
ds
xchg
cli
pushf
movl
sbb
jns
cmp
fwait
lahf
fcomps
adc
adc
outsb
fbstp
test
cmc
xchg
dec
or
fdivl
jmp
testl
cmp
mov
incl
lahf
ja
popa
xchg
inc
mov
inc
adc
mov
fimuls
mov
fisttpll
int3
lret
and
mov
mov
fwait
add
cmp
jecxz
inc
loopne
movsl
and
repnz
in
add
out
add
aam
mov
scas
adc
loopne
cmp
cmp
bound
jb
aad
int3
lock
push
test
insb
push
ds
xchg
repz
xchg
mov
lea
das
mov
ficoms
push
adcl
clc
adc
push
xor
popf
loopne,pn
cli
aam
add
data16
cmpsb
dec
repz
out
mov
insl
xor
cld
lahf
add
xor
push
ljmp
jno
repnz
mov
mov
and
push
out
inc
pop
xchg
sub
cmpsl
jne
daa
xor
pop
std
or
xchg
ja
or
jae
add
enter
scas
jmp
das
addr16
mov
lahf
mov
pop
jo
xchg
lods
xchg
xchg
sub
mov
xchg
add
mov
push
ret
leave
test
frstor
and
fdivr
jecxz
sub
dec
or
xor
sub
push
push
add
or
add
inc
fsubp
lods
out
jbe
pop
xor
vunpcklps
cwtl
mov
push
pop
add
hlt
mov
ret
ljmp
pop
lods
jp
jbe
data16
xorl
jg
xchg
or
jge
daa
stc
mov
dec
cwtl
dec
jae
xchg
adc
ss
dec
ja
fnstenv
xor
in
jecxz
pop
aam
jno
ret
cmc
mov
ljmp
cwtl
mov
pop
repz
add
adc
adc
mov
mov
ret
cli
dec
jl
test
mov
mov
mov
jl
and
and
test
sub
adc
adc
icebp
movsl
mov
pop
loope
mov
adc
mov
and
adc
push
mov
ret
shrl
push
insl
sub
lahf
int3
adc
jmp
or
dec
and
iret
cmp
sbb
int3
sbb
neg
stc
in
rcll
gs
dec
in
loop
rorl
mov
jmp
aam
xor
dec
outsl
mov
inc
xchg
sub
pop
stos
mov
mov
pop
js
mov
dec
pop
std
or
fidivl
dec
mov
out
out
dec
xor
push
and
mov
xchg
outsl
xchg
mov
sti
sbb
in
fidivrs
rcrb
call
popf
add
inc
and
mov
pusha
mov
stc
out
xor
fldl
ds
mov
mov
xor
adc
adc
adc
and
sub
stc
cmpsl
xor
ljmp
cmpsl
mov
mov
stc
push
or
cmp
in
lea
xchg
dec
push
ss
insb
add
and
jno
je
mov
aaa
jecxz
xlat
cltd
in
das
negl
sti
sub
push
push
or
pusha
das
std
mov
movsl
aad
adc
outsl
mov
icebp
sub
push
add
xchg
mov
cli
enter
inc
lea
rclb
mov
push
jecxz
inc
add
imul
push
jo
push
cmp
and
sbb
adc
mov
in
lahf
mov
daa
jb
sub
fnsave
or
jae
dec
mov
data16
mov
xor
arpl
cmpsb
shlb
lret
xchg
push
push
dec
in
ds
jle
insb
mov
and
ret
ljmp
adc
cli
mov
out
sbbb
mov
cli
xchg
push
jmp
sbb
and
hlt
inc
cmc
scas
out
stos
push
fldt
fbstp
or
jl
ja
jmp
out
mov
daa
add
js
push
mov
jl
and
icebp
loopne
push
add
cld
jge
mov
stos
int
fstpl
mov
sbb
jg
mov
lods
add
mov
push
dec
sub
shrl
ficomps
mov
neg
je
ljmp
dec
negb
cmp
in
cvtps2pd
push
out
pop
popw
mov
lock
rcl
out
push
push
ret
ret
jb
mov
adc
sbb
out
ror
movsb
out
loop
in
lret
and
dec
addr16
je
iret
lods
sbb
arpl
add
and
enter
lds
dec
loopne
andb
int3
sub
push
mov
xor
sbb
ljmp
jb
sahf
jo
inc
outsl
sub
and
int3
loopne
xchg
dec
xor
cmpsl
ret
pop
in
inc
cmpsb
xchg
mov
loop
cmp
sti
mov
jb
jle
fdivl
test
hlt
cmp
xor
and
pop
lahf
scas
dec
inc
cmp
dec
jmp
testb
sbbb
ret
jno
int3
cs
cmc
mov
and
lods
jl
filds
mov
add
stos
inc
xchg
xchg
js
and
dec
push
cmp
sahf
es
loopne
dec
pop
cltd
into
enter
xchg
pop
push
inc
dec
cmpsl
jmp
in
adcl
scas
in
stos
inc
data16
lods
mov
and
dec
cmpsb
xor
pop
xchg
loopne
shl
iret
sbb
inc
jo
in
mov
sbb
dec
addr16
cmpb
mov
mov
mov
jnp
in
xor
sub
xor
outsb
fs
movsl
call
in
je
fcoml
pop
inc
xor
hlt
sub
cmpsb
inc
arpl
in
cld
fs
outsb
mov
jg
hlt
imul
icebp
inc
lds
nop
fsubrs
in
stc
pop
xor
mov
push
addl
fdivrp
lret
cltd
call
leave
in
pop
adc
test
loopne
fcomi
adc
out
pusha
push
insb
jae
fildll
aaa
xchg
mov
nopl
popa
or
jbe
or
stc
jbe
enter
dec
mov
nop
mov
pop
adc
je
lods
lock
push
movsb
inc
dec
cwtl
mov
mov
shll
fidivs
repnz
fidivrs
xor
pop
test
scas
push
imul
sbb
dec
push
movsb
mov
pop
lock
les
push
jp
xchg
and
mov
lea
mov
xchg
mov
lods
ror
xor
cwtl
cmp
cmpsl
test
mov
lret
insl
jnp
mov
clc
pushf
or
lds
sbb
mov
test
lret
incl
mov
std
mov
test
fstpl
push
add
mov
dec
jae
shld
aaa
lahf
ret
call
into
popa
sbbl
dec
fistpll
rol
mov
icebp
push
mov
ficomps
lock
aas
jecxz
xlat
jle
movsb
test
js
imul
lea
fcoml
ret
rcrb
xor
fcomps
fnstcw
mov
xor
xor
aaa
stos
and
pop
push
or
stc
push
insl
fs
jne
cmpsl
or
pop
mov
dec
out
xor
jbe
sbb
pop
xchg
cmp
in
push
sti
inc
cwtl
mov
dec
dec
cmp
and
mov
cmc
stc
inc
push
out
jmp
std
xchg
cmpsb
nop
push
ja
dec
mov
xchg
sbbl
lds
pop
stc
mov
andb
jmp
pop
test
cmpsb
push
sbbb
push
pop
or
sub
test
mov
cmc
addr16
and
sub
inc
cli
push
bound
sbb
movb
adc
cwtl
adc
inc
out
shl
jge
lods
js
xchg
jp
or
xor
pop
add
mov
pop
sahf
and
sbb
xor
into
test
data16
add
dec
dec
in
fwait
xchg
sub
sub
ljmp
call
in
test
xor
pop
popa
sahf
xchg
mov
pushf
jo
ret
jo
pop
mov
lahf
jp
mov
push
jecxz
repz
pusha
stos
sbb
fidivs
adc
andl
insb
mov
push
lret
push
aam
in
mov
enter
jb
pop
adc
pop
pop
mov
cmp
test
mov
popf
pop
lret
xor
gs
out
js
dec
std
nop
add
fimuls
xchg
jb
xor
sbb
into
leave
mov
outsl
or
div
cvtps2pd
and
fs
mov
xchg
out
xchg
popf
or
testl
inc
std
or
mov
sbb
dec
ds
xchg
and
shl
lods
inc
sbb
lret
repnz
stos
push
insl
dec
leave
sti
outsl
sub
push
movsl
ss
rorb
out
ds
pop
adc
in
std
xor
inc
mov
data16
xchg
ret
mov
cmpl
ret
leave
aam
jae
pop
sub
xchg
imul
popa
mov
cli
adc
iret
xor
insl
inc
loopne
ds
fildl
xchg
sbbl
pop
mov
stc
cmp
aas
cmp
nop
daa
ljmp
aas
mov
xchg
popf
stos
mov
add
jmp
or
das
cmp
sar
repz
dec
sub
cmpl
mov
cwtl
dec
loop
add
jns
push
jo
loopne
sbb
inc
imull
push
imul
sub
testb
fsubs
daa
jb
inc
inc
cmp
dec
sbbb
bound
aam
imul
je
pusha
inc
fstpl
scas
and
sti
rclb
dec
lods
mov
loope
int
pushf
rclb
and
out
test
xchg
mov
outsb
push
fnstcw
mov
mov
fcmovnbe
loop
push
inc
das
gs
mov
int
cmpsb
xchg
or
mov
inc
cltd
push
push
or
lea
dec
adc
mov
dec
js
push
out
xor
fdivs
mov
or
scas
sbb
mov
pop
sbb
adc
xchg
arpl
add
in
scas
fldenv
int
lds
sbb
cmp
cmp
dec
xorb
lahf
add
mov
adc
pop
pop
shrl
jno
xor
sbb
clc
inc
out
push
dec
int3
pop
aaa
gs
outsl
mov
jl
sub
dec
ret
lods
mov
fistl
jnp
pop
mov
nop
imul
or
sbb
lea
fnsave
cmpl
sti
mov
xchg
jne
push
adc
pushf
push
sub
andl
shlb
mov
or
movsl
out
pop
les
data16
add
push
icebp
xor
in
out
cs
mov
mov
fcmovbe
pop
les
adc
push
add
dec
cwtl
inc
push
or
int3
fimuls
cmpsl
or
mov
rorb
mov
jge
xor
adc
mov
jecxz
and
cmp
mov
xor
and
popa
cmp
xchg
xor
or
dec
lds
inc
or
and
sub
lock
cmpb
sti
pop
dec
xchg
nop
repnz
js
add
adc
mov
push
pusha
xor
insl
add
pop
push
sbb
out
mov
int3
movsl
imul
stos
imul
mov
sub
mov
nop
je
push
xor
out
jle
xchg
xchg
mov
adc
mov
test
mov
insb
xchg
repz
sbb
lock
mov
int
jae
dec
stos
cmp
out
push
sahf
std
lods
inc
daa
jle
and
orl
test
xchg
rcrb
movsb
repnz
dec
mov
imulb
sub
pop
sbb
lea
pop
mov
arpl
scas
inc
push
or
scas
jl
push
jns
sbbl
out
test
fisttps
dec
jecxz
insl
inc
ficompl
sbbl
jnp
mov
loop
mov
cli
data16
dec
insb
jmp
pop
in
jbe
arpl
pop
icebp
arpl
jmp
ja
push
push
adc
mov
push
mov
cltd
push
mov
stc
fsubrs
ljmp
push
scas
inc
add
and
dec
inc
std
enter
jge
insb
and
xchg
sub
dec
add
mov
mov
sub
inc
mov
addr16
lret
jp
push
shr
adc
xchg
sarl
mov
mov
or
or
es
cltd
mov
jl
jb
fs
mov
jns
inc
vpshufhw
jno
imul
lea
jecxz
push
cltd
out
pop
and
push
insl
and
sub
cmpl
mov
in
testb
sub
test
inc
pop
std
loopne
shr
cmp
or
xchg
pop
add
mov
mov
dec
adc
xchg
sbb
fwait
mov
pop
es
add
test
jg
fnstsw
rcrl
xchg
cmpb
movsl
out
and
pop
imul
pop
sarb
mov
mov
cmp
dec
jp
int
cmpsl
lds
sarb
jl
mov
dec
std
rorl
out
test
aam
cmc
insl
push
or
fnsave
int3
or
fidivrl
ss
arpl
sub
sub
out
cmp
sbb
cwtl
into
mov
push
js
in
adc
lock
jo
xchg
out
and
push
inc
lcall
testb
xchg
sbb
jno
push
mov
mov
dec
outsl
enter
add
adc
das
test
add
lds
cmp
fs
jmp
ljmp
add
jecxz
shl
mov
pop
ds
data16
sub
daa
mov
xor
xor
decl
dec
lds
push
addl
repz
push
jmp
dec
push
neg
mov
mov
fs
jbe
inc
adc
xorl
test
loope
and
shll
jge
sbb
jmp
sub
inc
pop
xor
adc
pop
jbe
scas
cmp
and
scas
std
push
loop
xor
pop
fidivrl
je
jb
jg
cmp
ret
add
pop
jo
add
mov
inc
cmp
jmp
gs
sub
dec
fneni(8087
cmpsl
jns
idivb
es
shrl
xchg
out
clc
mov
dec
int
cld
ljmp
dec
ljmp
inc
out
lds
xor
pop
jns
mov
nop
xchg
movsb
and
lock
pop
add
pushf
cmp
stos
stos
mov
and
pop
mov
int
rcl
loop
add
add
and
cmp
mov
scas
movswl
cmc
test
lahf
out
fistps
in
adc
imul
es
jo
mov
jle
sub
sbb
addr16
jae
pop
xchg
test
adc
and
mov
jno
xor
xchg
push
mov
inc
or
mov
ret
out
inc
push
hlt
bound
cld
mov
test
mov
into
fwait
add
int3
lds
pop
add
cmpsb
xchg
and
cmp
into
or
iret
sahf
push
es
jge
mov
js
scas
push
pop
out
xchg
decl
adc
add
icebp
push
xchg
mov
dec
sbb
dec
insl
push
sahf
mov
scas
outsl
psubq
pushf
mov
and
je
add
pop
mov
dec
sub
mov
mov
mov
xchg
pop
popf
popa
cld
push
jp
pop
lods
js
mov
test
push
es
out
popa
xchg
push
in
enter
subl
xor
repz
sub
mov
ja
add
fsts
push
add
push
scas
push
scas
sub
fcomp
data16
scas
les
cld
cld
sti
xchg
xor
adcb
in
and
pop
sub
inc
push
xlat
mov
cmc
mov
pop
xchg
lods
mov
and
aad
pop
inc
or
shlb
jle
fs
jg
push
test
pmuludq
jle
xor
jno
aad
adc
clc
mov
cmpsl
pop
jg
push
pop
inc
rcrb
ja
cmp
call
adc
in
or
xor
xor
inc
adc
or
int
shlb
movsb
mov
adc
ret
jl
bound
push
sbb
mov
or
inc
aaa
arpl
sbb
and
fs
add
sub
call
mov
movsb
aas
in
iret
cmp
lret
scas
xor
mov
ss
mov
iret
mov
ret
push
add
adc
aad
aas
pop
inc
jno
pop
repz
incl
sub
xchg
xchg
sub
adc
push
aam
push
gs
stos
test
inc
lock
shll
rclb
sbb
mov
xor
int
loope
cmp
and
jmp
cltd
dec
es
xor
ss
xlat
ror
push
dec
pop
mov
fsubs
aad
arpl
lods
mov
mov
mov
and
ret
jnp
incb
dec
mov
jb
push
pushf
imul
xchg
mov
xor
in
jnp
stos
mov
adc
dec
into
pop
adc
cltd
test
call
lods
jnp
imul
add
mov
mov
push
inc
pop
aam
sbb
imul
mov
gs
inc
jl
or
movsb
lret
xlat
aad
mov
push
sbb
mov
cmp
xor
cli
scas
sahf
insl
ror
out
sub
mov
stos
lds
push
test
cwtl
push
sbb
xor
and
sbb
sbb
push
fisubrs
ja
ret
push
push
pop
xchg
into
std
mov
xor
rcr
adc
jmp
scas
mov
mov
mov
adc
jno
pushf
jmp
pop
cmpsb
mov
xchg
call
in
and
imul
or
repz
ret
cmpsb
std
cltd
mov
xor
push
sbb
stos
pop
xlat
xchg
out
hlt
rcrl
stc
pusha
shrb
or
or
pusha
mov
xor
and
ja
fldt
shll
xchg
popa
mov
xor
in
lock
jp
inc
sarb
lds
jno
push
iret
int
fmul
call
fidivrl
push
fadds
pusha
add
mov
ljmp
ret
dec
cltd
std
negb
rcl
inc
pop
push
cmc
lcall
mov
in
out
push
es
or
inc
add
icebp
fldcw
daa
mov
fwait
call
rorb
pop
push
mov
fcmovnbe
repnz
push
imul
cmp
or
sub
rclb
pop
xchg
inc
mov
jb
push
in
in
in
pop
pushf
cmp
out
int
pop
cmpsb
mov
js
dec
fwait
pusha
push
push
mov
clc
xor
pop
jl
addr16
mov
ja
lcall
sub
push
rorb
cmpsb
sahf
and
loopne
add
in
stos
fnstcw
arpl
fstl
mov
out
test
sbb
outsb
and
lahf
shrb
cmp
lahf
push
add
insl
sub
push
and
xor
pop
imul
scas
cmpsb
jge
lcall
std
mov
in
les
cwtl
movsl
add
and
mov
sub
add
data16
sub
cwtl
mov
jge
xchg
sub
add
mov
clc
or
mov
push
jg
lods
pop
repnz
andl
dec
adc
push
push
push
data16
ret
mov
add
or
adc
fldl
loop
aaa
popf
xchg
xchg
es
and
xchg
pusha
mov
add
push
int3
cltd
movaps
sbb
sub
decl
pop
cltd
lock
ret
sub
rcrb
cmc
out
dec
out
dec
inc
rcl
cmpsl
mov
jns
lods
pop
add
imul
sbb
sbb
aas
ja
lods
test
dec
movsl
lret
rcrl
aad
ret
lcall
jbe
nop
dec
inc
stos
mov
xchg
test
lahf
fdivrs
nop
mov
imul
sbb
push
pop
mov
mov
and
sbb
sbb
and
aam
gs
push
imul
cld
mov
mov
sub
bound
enter
inc
dec
data16
adc
rcrl
jmp
out
cmp
pop
mov
jg
ds
pop
adc
pop
mov
push
cmp
sti
and
mov
in
sub
pop
push
stos
inc
adcl
mov
pop
inc
test
push
loope
stc
or
lds
loopne
iret
xor
movl
cmp
hlt
in
test
push
xchg
dec
rcr
rorl
lret
mov
xor
into
or
sti
rolb
xor
daa
test
and
popa
mov
and
ret
jae
xlat
push
int3
sbb
jo
and
clc
xlat
dec
mov
pop
jmp
pop
stc
repz
imul
ret
jo,pn
stc
data16
or
cmpsl
ja
xlat
inc
ret
jge
push
movl
inc
xor
mov
mov
dec
sub
mov
xchg
or
aas
adc
jno
xchg
jae
lock
or
mov
xor
push
sub
sti
nop
in
or
mov
mov
jns
insb
push
ss
fs
xchg
in
outsl
ss
rolb
mov
inc
fwait
jle
inc
daa
mov
negl
cmpsl
enter
hlt
mov
xor
mov
inc
mov
push
and
xor
dec
repnz
mov
push
sbb
push
mov
je
rolb
mov
mov
ret
mov
shrb
clc
pop
aad
sbb
adc
cmc
mov
pushw
out
stos
adc
xor
scas
mov
jo
dec
icebp
dec
inc
dec
cmp
push
pop
sbb
mov
jmp
mov
loopne
es
rolb
xchg
add
int
sbb
adc
push
jo
subl
jge
out
aaa
fsubl
push
fisttps
loope
icebp
or
push
adc
movsb
mov
nop
sbb
xchg
push
jp
pop
hlt
test
inc
ljmp
testb
rcll
and
mov
mov
adc
inc
loop
jg
xchg
jmp
repz
ljmp
inc
xor
test
pop
ss
nop
mov
sbb
das
cs
mov
inc
ljmp
jno
cmp
addr16
popf
addr16
pop
imul
stos
mov
inc
xchg
in
mov
cli
or
mov
pop
sbb
sbb
mov
shlb
les
cmp
enter
dec
mov
sbb
aaa
mov
mov
xlat
and
iret
push
jne
xlat
push
pop
inc
dec
mov
test
flds
xor
in
xchg
js
jmp
xor
lret
ljmp
pusha
testl
jg
loope
aad
ret
push
gs
mov
jno
adc
test
sbb
jo
xchg
sub
or
or
mull
testb
sub
andps
xorl
shl
and
ds
bound
sbb
xchg
push
fcomps
sub
mov
fisttps
jb
mov
ret
pop
mov
sub
xchg
shrb
cmc
shrl
lods
xor
push
inc
out
sti
jbe
mov
xor
fstp
mov
insl
leave
out
cwtl
das
in
jne
ret
lret
call
cmpsl
mov
or
out
test
lods
movsb
stc
pop
lret
bound
or
je
ja
xor
ljmp
shl
push
mov
test
xchg
lcall
test
enter
mov
int3
dec
pop
lods
xor
mov
xlat
in
mov
loope
xchg
sbb
stc
shll
xchg
dec
mov
mov
dec
stc
cmp
ljmp
loope
mov
jnp
and
xchg
sub
or
inc
loop
test
sbb
pop
push
mov
inc
mov
popf
cmp
and
jbe
cmp
scas
lods
cmp
stos
mov
rcl
add
dec
adc
das
and
or
es
push
call
cmp
pop
movsl
insl
hlt
adc
dec
mov
bound
or
sbb
xor
incl
rorb
push
test
jb
lods
loope
xlat
movsb
add
or
xor
jns
lret
imul
or
and
sub
fcoml
xchg
mov
arpl
pop
dec
dec
roll
std
out
scas
dec
and
movsl
mov
jae
add
test
jb
mov
leave
or
jbe
xor
fcomps
sbb
sbb
lfs
or
inc
xchg
jne
fdivrp
popf
pop
popf
adc
fdivl
adc
je
mov
adc
and
shll
mov
imul
fcomp
cmc
out
mov
scas
jmp
rcl
push
pusha
push
sbbb
in
das
das
daa
cmp
sbb
in
lcall
cld
lods
push
jecxz
pop
lds
cmpsl
idivb
mov
sbb
inc
push
inc
imul
add
and
lea
cli
fmull
push
push
add
fcomi
mov
mov
sarl
mov
sub
shlb
pop
pop
add
inc
lods
dec
adc
lcall
bound
fbstp
pushf
mov
inc
fdivr
adc
push
ss
imul
aam
test
dec
dec
sbb
decb
loop
hlt
lock
enter
shl
xchg
and
push
pop
in
test
icebp
sub
or
sbb
xor
jne
loop
inc
js
aad
lock
cmp
push
jae
fisubs
push
xchg
dec
cmp
sub
and
mov
sahf
adc
mov
hlt
and
adc
adc
dec
sub
push
sub
dec
shlb
jo
or
sub
imul
inc
or
outsl
ds
testb
cmp
ja
adc
stos
rcll
cli
rcrl
pop
jmp
cmp
dec
push
ret
pop
int
jg
shr
jns
mov
xor
dec
fs
dec
lret
std
test
in
mov
fdivr
or
sub
loopne
leave
xchg
jg
cmp
mov
and
add
jle
sbb
cs
imul
jbe
mov
xchg
xorb
adcb
pop
mov
mov
nop
sbb
sti
xchg
and
stos
xchg
popf
inc
jg
hlt
xor
bound
int
sbb
xor
and
jl
xor
mov
nop
and
sub
xlat
mov
adc
pop
xchg
jno
mov
pop
mov
pop
sbb
and
mov
jno
out
cmp
jb
mov
jnp
mov
dec
push
jne
dec
out
xchg
cld
fwait
cld
and
fsts
sub
mov
adc
int3
int
ja
out
sahf
rorb
je
repnz
or
xchg
and
std
or
subl
lahf
xor
fnstenv
cmpsl
fs
lret
push
xlat
dec
mov
aaa
xor
cld
xor
mov
adc
jae
loopne
pop
adc
insb
das
xchg
pop
loope
test
sub
cltd
mov
adc
repnz
xchg
add
cmp
pop
xor
push
ja
adc
xchg
or
pop
push
ret
mov
iret
xchg
test
pcmpgtb
or
mov
mov
jecxz
push
lock
in
add
loopne
lret
ljmp
push
mov
lds
jmp
das
nop
dec
out
pop
sub
mov
and
inc
fdiv
jle
mov
push
ror
int3
xor
scas
sahf
dec
sub
cmp
test
arpl
jecxz
add
mov
insl
cmp
push
dec
movsb
sarl
outsb
push
mov
jnp
movsl
stc
or
xchg
pop
mov
iret
xor
aad
mov
mov
lds
mov
lock
fmull
movsl
or
aas
push
out
jo
psubusb
fisubrs
push
test
and
imul
ljmp
out
in
adc
inc
inc
push
jnp
xchg
xor
fnsave
dec
cltd
jle
cwtl
outsb
daa
mov
adc
les
mov
jg
je
add
pop
pop
mov
dec
sbb
cwtl
repnz
sub
in
add
sbb
popf
dec
call
and
mov
pop
mov
cmp
iret
and
mov
shlb
rcr
insl
cltd
mov
mov
pop
xor
push
out
push
inc
dec
add
ds
pop
loopne
xchg
inc
mov
mov
call
inc
insb
cmp
hlt
mov
in
movsb
in
push
add
scas
into
loopne
inc
or
cmp
sub
outsl
je
mov
cmp
push
jmp
aaa
cli
inc
std
adc
push
ret
xchg
stos
and
or
cld
inc
add
cwtl
sub
or
xchg
cli
aad
fs
in
ds
jbe
dec
mov
pop
dec
pop
add
sbb
pop
and
daa
mov
les
xlat
jecxz
scas
repnz
and
add
sub
test
or
dec
inc
push
aas
in
rorl
pop
pop
stc
test
shrl
jo
js
mov
ret
out
movsb
xchg
int3
and
gs
loop
movsb
mov
dec
subb
pop
lahf
aaa
ficoml
xor
ss
dec
je
neg
push
inc
push
sub
lcall
pop
out
in
xor
bound
push
mov
jle
das
xor
aad
pop
in
outsb
dec
ret
sbb
xchg
sbb
cmc
mov
notl
jne
fstpt
pop
push
adc
fnstenv
or
mov
addr16
cmp
sub
dec
dec
inc
ljmp
xchg
sbb
icebp
dec
es
jg
jmp
sbb
sbb
pop
xchg
decb
pop
dec
lret
sbb
sbb
adc
das
sub
insb
sub
pop
jge
dec
add
sbb
push
mov
dec
cmp
popa
inc
ret
push
xor
nop
sub
lahf
cmp
sub
fwait
arpl
and
mov
leave
pop
add
mov
mov
pop
push
lret
add
mov
jbe
sbb
popf
insl
sub
dec
jecxz
sbb
adc
jb
jg
jmp
cmpsb
out
push
pop
mov
test
lods
adc
lcall
mov
movsl
mov
stc
adc
mov
xor
mov
fisttps
addb
mov
rclb
sbb
push
xor
mov
insb
aas
ret
sti
subl
aam
jg
bt
add
adc
or
jg
hlt
mov
cli
lcall
or
repz
push
fisubl
addb
push
std
ror
enter
enter
fsub
inc
int3
mov
scas
inc
hlt
scas
js
nop
stos
add
mov
mov
in
mov
mov
inc
push
or
shll
pop
imul
leave
fdivrl
adc
int3
lret
jb
fwait
lock
test
lods
jne
test
jge
fnsave
fiadds
and
jle
ret
shl
mov
fwait
push
mov
rolb
inc
inc
cmovae
loop
adc
and
xor
cmp
xchg
xorl
cs
sub
int
bound
sbb
inc
fsubr
scas
pop
fsub
test
leave
sbb
pop
xchg
jnp
test
es
cmp
shl
scas
or
cmpb
push
ficomps
xor
dec
mov
mov
mov
test
out
es
cld
push
pop
inc
ret
mov
sti
repz
ret
adc
mov
dec
dec
push
jmp
pop
jo
dec
rorl
mov
push
outsl
out
cld
mov
inc
stos
push
arpl
in
adcl
push
decb
sbb
mov
push
cmpsb
jo
dec
pusha
sbb
ret
pop
adc
and
and
hlt
popf
mov
sti
pop
ret
mov
out
stc
imul
adc
dec
xchg
xor
fimull
in
mov
lahf
bound
mov
ja
repnz
mov
mov
adc
mov
cli
jle
jo
pop
fsts
xlat
mov
jg
add
mov
dec
mov
cmpsl
cld
and
cmpb
ret
pop
inc
sub
cmpsl
fmul
xchg
outsb
jae
fistps
sbb
dec
aas
pop
movsl
mov
mov
in
sbb
or
push
stc
cmc
into
aad
popf
call
insl
ljmp
dec
inc
leave
mov
sub
jnp
jae
cmc
pop
mov
push
mov
or
mov
ds
mov
in
mov
repz
sub
xor
popa
inc
sbb
adc
ss
jl
fnstenv
pop
adc
sbb
pusha
test
aad
mov
and
aam
mov
mov
or
rorl
lahf
xor
fbstp
push
es
shrl
lds
mov
scas
cmp
mov
or
pop
je
inc
push
clc
mov
fnstcw
push
lcall
push
jae
dec
iret
cmp
adc
pop
sub
mov
and
mov
jae
or
ja
stos
in
insl
lock
in
mov
and
int
lods
cs
sbb
adc
pop
fwait
mov
mov
cmp
stc
adc
xor
pusha
xor
cmpsl
ljmp
les
dec
cmp
xor
dec
outsl
lcall
mov
loopne
fists
cld
popf
xor
data16
outsb
imul
xor
sbb
test
outsb
mov
cs
roll
hlt
cmp
and
test
js
push
add
add
xchg
xchg
stos
and
in
repnz
pusha
in
lds
testb
ss
imul
imul
adc
mov
pop
xor
in
push
popf
sbb
in
out
insb
mov
es
cmp
inc
into
jmp
or
jo
rcll
mov
cmpsb
push
iret
adc
aam
cli
xor
adc
fldenv
or
test
lahf
mov
inc
shlb
mov
cli
add
movsb
sub
ret
in
xor
addb
mov
ljmp
pop
jae
mov
jle
cmpb
test
and
sbb
jb
imul
insl
sbb
icebp
fwait
loopne
imul
imul
add
push
jmp
or
pshufw
push
fldenv
inc
gs
xchg
xor
movsb
incl
fldt
xchg
xchg
jmp
pop
sahf
es
fidivs
arpl
or
xor
and
or
inc
sbb
mov
cs
adc
pop
mov
cmp
popw
pop
aam
into
imul
into
pop
orb
data16
cmp
jecxz
pop
adc
xor
jp
cmc
in
and
stos
stos
add
xor
std
adc
dec
xor
cmp
ret
fnsave
mov
std
hlt
iret
bound
data16
ret
adcl
icebp
lret
das
or
jae
push
xchg
ljmp
pushf
add
scas
ret
pop
out
mov
lock
xchg
push
dec
and
sub
adc
cmp
mov
pusha
loopne
cmp
mov
rol
scas
or
adc
jb
mov
aam
aad
pop
lret
out
loopne
lods
iret
das
xchg
add
lods
mov
fs
push
call
shll
mov
test
xchg
jb
adc
xchg
cs
test
jbe
mov
pop
inc
mov
fdivrs
jnp
lret
adc
mov
add
xchg
xchg
imul
add
aaa
hlt
aad
fucomi
cmpsl
add
xchg
repnz
into
push
xor
lds
iret
loopne
ja
gs
sbb
mov
out
cld
shll
push
fsts
js
jae
sahf
sub
scas
jne
loopne
rcl
mov
and
stc
jbe
add
adc
xor
xlat
not
inc
test
jp
movsl
add
xor
out
xchg
xchg
pop
add
and
sub
mov
sbb
xchg
sahf
pusha
repz
mov
fwait
mov
sbb
xor
cmpsb
fisubs
mov
ret
and
lods
cmp
lcall
xchg
outsl
xor
push
jae
sbbb
sub
inc
sbb
repnz
jo
mov
add
scas
psrlq
xor
ja
jns
and
sti
jns
mov
inc
pop
lds
loope
or
xchg
push
in
in
sbb
push
je
cmpl
add
mov
or
xlat
ljmp
movsb
lret
mov
push
scas
test
adc
and
mov
iret
pop
jge
xor
mov
pop
xchg
mov
js
cmp
scas
hlt
or
inc
xchg
out
mov
jl
rcrl
roll
and
xchg
je
or
jo
dec
sbb
popf
fdivrl
xchg
add
ret
cmpsb
adc
jecxz
inc
add
aad
lods
xchg
hlt
xchg
push
mov
mov
jnp
xchg
push
inc
pop
call
ja,pn
or
dec
jns
outsl
push
xor
idivb
mov
jno
repnz
adc
rolb
rcrl
repz
sub
xchg
cli
fisubrs
inc
push
mov
cmc
out
mov
dec
mov
fcmovnb
dec
sbb
pop
push
outsl
add
lcall
imul
xlat
lock
adc
mov
mov
ss
add
push
lock
push
xchg
mov
mov
or
std
ret
pop
das
and
fcmovnbe
mov
popa
mov
ret
xchg
pop
mov
ljmp
sbbl
bound
add
mov
xchg
xchg
push
mov
out
xchg
mov
int3
inc
scas
sbb
fstps
pop
mov
mov
rolb
lods
inc
das
xchg
aad
pop
out
lret
fdivrs
jbe
xchg
xchg
or
inc
mov
and
push
outsl
jb
inc
pop
sbb
popa
test
int
xchg
shl
push
nop
xor
mov
push
push
fs
and
repnz
aas
and
std
clc
xchg
rclb
test
icebp
movsb
xor
pop
sbb
inc
and
fxam
jmp
push
jae
cmp
popf
xor
lea
aam
jno
jle
leave
scas
mov
pop
loope
mov
movsb
ret
and
sbb
hlt
dec
es
mov
pop
out
test
adc
mov
pop
mov
ljmp
push
std
dec
scas
cmpsl
mov
xor
xor
mov
mov
cmpb
cmp
inc
fnstenv
push
jns
pop
mov
xchg
inc
idivl
std
jmp
scas
xchg
push
es
mov
ss
movsl
push
pushf
xor
sub
aam
int
or
mov
xchg
pop
test
push
push
jae
xchg
sub
sti
mov
mov
pop
push
std
push
fcmovu
std
and
popa
push
shrl
pusha
xor
mov
aaa
cmp
lcall
inc
pop
gs
mov
push
mov
loope
mov
ja
pop
pop
sub
mov
shl
lahf
add
sub
mov
fdivs
sahf
mov
loopne
imull
adc
cmpsl
add
cld
stos
dec
lods
cmp
xchg
test
adc
shrb
cli
dec
and
adc
in
loope
push
adc
cld
xchg
inc
fsub
jge
adc
xchg
or
inc
xchg
add
repnz
sahf
and
xor
test
mov
insb
out
mov
xchg
ret
mov
fdivl
insb
testb
xchg
xchg
sub
fwait
pop
jae
cmp
imul
jle
mov
fs
and
dec
jecxz
dec
or
pop
mov
stos
jmp
pop
push
add
subl
add
and
push
int3
sbb
jae
test
xchg
mov
mov
adc
icebp
popf
mov
jg
or
arpl
nop
push
xchg
dec
bound
movsb
jmp
cmpsb
inc
in
or
or
mov
repz
push
push
pop
jnp
add
and
xchg
ds
out
adc
outsl
jnp
push
mov
test
adcb
shl
shll
cmp
out
mov
or
pop
sbb
mov
dec
out
jg
dec
mov
lods
in
pop
jge
mov
aas
out
or
xchg
xchg
sub
imul
inc
int3
lock
pop
iret
sub
and
negb
stos
pusha
outsb
add
cld
mov
cli
sub
mov
fdivrl
cmp
pushf
mov
jae
inc
xor
sub
mov
fimull
mov
cmp
pop
ljmp
mov
jge
cmpsl
add
test
dec
ret
push
jno
ds
xchg
mov
bound
add
mov
mov
and
rol
cmp
add
stc
int3
idiv
fisubrs
call
adc
imul
jne
or
jl
pusha
cltd
add
mov
xor
cs
pop
adc
sbb
add
sbb
mov
popf
jno
mov
push
aad
aaa
pop
add
cltd
pop
lds
xor
pop
sbb
mov
mov
lea
or
pusha
stos
or
xchg
dec
adc
ss
mov
rorb
jg
sarb
icebp
ret
cmp
add
jo
adc
or
ss
pusha
push
push
test
jle
notl
add
cs
xchg
mov
jae
mov
push
push
int3
sbb
scas
int
loopne
mov
loopne
mov
add
dec
std
cmpsb
add
pop
xor
inc
test
insb
add
cmpsl
mov
dec
arpl
mov
jno
push
mov
xlat
add
pop
and
mov
sti
fmuls
dec
push
mov
jno
sub
mov
cmp
fnstsw
movsl
call
or
cmc
aad
xchg
push
iret
adc
not
jl
repnz
cmc
and
bound
mov
aas
mov
imulb
enter
scas
mov
cmpsl
test
inc
xchg
push
mov
lds
mov
inc
mov
adc
jmp
mov
enter
cmp
call
xchg
push
cmpsb
push
mov
lahf
sbb
aaa
push
test
push
testl
and
testb
dec
jb
jle
sahf
lods
cld
cmpsl
int3
arpl
or
fmulp
fsubl
mov
sbb
mov
or
popa
clc
bound
pop
emms
into
dec
lea
mov
je
and
lcall
xchg
jmp
or
ds
push
stos
in
lock
xor
ds
inc
mov
jnp
loop
lahf
shlb
add
test
loope
inc
pushf
nop
xor
jmp
xchg
lods
xchg
dec
pop
into
or
ficompl
sub
lret
push
cmp
fdivr
test
ja
mov
fidivrl
sti
xchg
sbb
frndint
pushf
mov
xor
mov
jp
xchg
das
cwtl
loop
lcall
sub
pushf
or
adc
subl
lods
cmpb
jmp
cli
inc
js
xchg
pop
sub
jge
scas
adc
and
rcrb
pop
xor
lret
jae
dec
les
or
aad
sti
jg
lea
je
jl
xor
add
pusha
hlt
and
add
xchg
popa
cld
aad
mov
ljmp
mov
push
inc
iret
add
sbb
das
pusha
inc
pop
rcr
push
xor
push
cmpsl
les
imul
mov
testb
mov
and
sub
mov
inc
mov
xchg
outsl
leave
jbe
fs
andb
std
xorb
mov
add
enter
add
or
popa
xor
pop
xor
movsl
sub
mov
in
push
mov
sub
outsl
jle
cmp
lock
jnp
sbb
cmp
in
sbbl
aad
mov
enter
pcmpgtw
pop
cmpxchg
popf
cmpsb
add
fadds
and
jae
mov
sub
mov
mov
pop
sub
push
cmp
pushf
push
adc
cmpsb
push
ss
and
imul
xchg
xor
iret
and
push
cli
or
mov
mov
dec
lock
jae
add
mov
sub
and
sbb
mov
jl
jmp
fsts
sbb
mov
push
cmp
fchs
pop
cmpb
mov
fucomip
stos
add
jp
xor
jns
out
add
testl
pushf
push
ret
push
test
sbb
cs
cmp
jns
std
or
lea
dec
cmpsl
dec
jge
lock
mov
cmc
insb
mov
sbb
sbb
adc
add
fiaddl
add
xor
into
std
arpl
icebp
int
sbb
sbbl
xor
fildll
scas
xchg
mov
outsb
icebp
mov
xchg
insb
jnp
std
pop
mov
movsb
push
test
or
aad
mov
addr16
scas
inc
pop
std
cli
lods
mov
int
rorl
xor
icebp
sbb
adc
fs
xchg
add
xor
and
fisubl
rolb
xor
in
stos
sub
add
and
lret
aam
pop
data16
jecxz
dec
test
cmpb
sub
xchg
adc
cwtl
inc
mov
shlb
scas
lods
or
popl
out
jecxz
daa
push
adc
cs
cmp
rol
push
jecxz
inc
ljmp
addb
sbb
out
pop
insb
sbb
scas
lahf
lds
repnz
ss
inc
cs
icebp
pop
arpl
pop
int3
std
js
int
lods
out
int3
loope
or
hlt
xchg
rcll
inc
fnstenv
mov
or
push
mov
pop
sbb
sar
scas
and
push
push
pop
call
xor
ljmp
xlat
ss
cmc
icebp
adc
cmpsb
data16
pop
movsl
pop
nop
sub
insl
aaa
pop
loopne
push
pop
mov
dec
xchg
jmp
cltd
cmp
xchg
jne
enter
adc
push
out
pop
es
xor
mov
cmp
jmp
je
ret
mov
shlb
out
cmpsl
mov
cmovle
daa
stos
or
dec
jbe
les
add
add
and
mov
push
mov
lret
setge
mov
push
testl
xor
js
and
hlt
aaa
movsl
dec
rcll
add
in
sbb
push
rcrb
popa
mov
jo
inc
xchg
jge
xlat
add
rorb
leave
out
daa
sbb
jnp
jge
in
sub
lods
inc
adc
out
movsl
dec
mov
or
in
xchg
mov
adc
xlat
popa
out
sahf
jecxz
mov
cmp
add
pop
xor
rcrb
jp
add
mov
and
in
inc
fnstenv
lcall
sarb
aam
iret
mov
cmc
daa
imul
clc
or
hlt
repnz
pop
mov
mov
rcll
pop
mov
mov
iret
loope
rdpmc
movb
cmp
adc
lret
out
cwtl
cmpsl
and
call
add
test
mov
jmp
jmp
jno
in
gs
xor
scas
cltd
mov
and
xor
dec
pop
scas
cmp
fmuls
or
rcl
sti
pop
test
push
das
sub
mov
push
std
cmp
in
cmp
or
pushf
cs
pop
adc
cmp
mov
ud1
and
or
pop
daa
mov
dec
stc
or
dec
push
xor
ljmp
shrl
pop
lock
pop
out
xchg
push
xchg
sub
dec
xor
mov
sbb
incl
cmp
mov
push
mov
leave
int3
xor
out
addb
push
or
int
or
fs
add
sub
inc
fsubrs
jb
popa
sbb
out
mov
fcomp
gs
in
rcrb
subb
loopne
adc
sub
stos
inc
daa
cld
int
js
ret
push
xor
das
pop
pop
cwtl
fadd
in
xchg
pop
stc
pop
inc
pop
clc
jl
dec
in
lods
push
xchg
aas
xchg
test
xchg
outsl
subl
adc
and
or
jl
popa
int
or
insl
add
sub
push
popf
test
sahf
dec
push
cmpsl
and
sahf
dec
and
cli
xchg
inc
xlat
les
jg
cli
jo
pop
sub
insb
xchg
sub
ds
test
and
nop
jo
add
mov
xchg
rcll
fimull
and
iret
in
xor
ficoms
pop
scas
fdivr
cwtl
fwait
add
rcr
testl
and
jecxz
addr16
imulb
out
mov
incb
rcrl
dec
jecxz
sbb
fidivs
pop
insl
outsb
mov
cs
and
test
or
fmull
shll
push
test
aas
pop
push
lock
std
push
jge
cmpsl
daa
js
daa
push
fisubrs
test
jb
push
sub
pop
cmp
testb
jae
xchg
cltd
int
les
ljmp
in
inc
fidivl
outsb
push
mov
leave
dec
xor
pop
lcall
xor
or
mov
cmpsl
adc
inc
mov
cli
dec
dec
arpl
push
aas
fwait
mov
addb
cmpsl
ds
out
fstl
lds
sbb
js
mov
rclb
push
jne
inc
arpl
add
xchg
sarb
pop
in
jmp
push
cmp
imul
xchg
inc
cmp
and
inc
mov
int3
out
ljmp
leave
shrb
sti
mov
sub
or
lods
dec
stc
out
inc
in
pop
inc
aas
clc
xor
push
mov
fldenv
std
cmc
jp
and
or
jmp
pop
inc
and
lret
pop
xor
mov
add
test
pop
mov
les
jge
mov
repnz
mov
xor
xchg
out
lock
and
xchg
out
jle
jb
mov
dec
dec
scas
push
cmp
pushf
in
sub
push
aam
adc
fiadds
ret
std
dec
pop
repnz
and
add
andl
mov
jecxz
ja
mov
jbe
xor
add
cmpsl
les
xchg
inc
pop
in
pop
rcr
mov
jg
shr
cmp
dec
fidivl
jecxz
es
jbe
cmp
imul
testb
mov
inc
push
xchg
pop
cwtl
sub
lds
pop
cmpsl
pushf
shrl
cwtl
jg
xchg
xchg
add
mov
mov
mov
sbb
out
dec
out
mov
xchg
pop
mov
push
call
cs
test
in
in
cltd
nop
das
ret
cmpsb
or
mov
mov
jecxz
mov
adc
scas
pop
in
call
cmpsl
inc
fldpi
mov
dec
in
xorl
add
mov
sti
mov
fsubp
lret
arpl
fisubrl
hlt
mov
adc
jle
inc
mov
int3
out
mov
loopne
cltd
push
fsubrs
fidivl
test
idiv
pop
cmpsl
jg
sarb
jmp
outsl
dec
adcb
outsb
add
lcall
jge
inc
ds
shl
adc
ss
adc
adcb
xor
inc
fildll
mov
test
xor
inc
ret
test
mov
mov
ret
pop
loopne
xchg
push
jno
inc
cli
jge
ret
iret
pop
jle
pop
cmp
test
jmp
adc
js
das
add
push
cmp
outsl
jns
jne
jno
imul
add
cli
andl
or
fst
ret
loop
cmp
pop
outsb
cmp
aaa
dec
push
sub
add
add
adc
sub
inc
xchg
pinsrw
divb
or
in
add
test
ret
xor
and
clc
test
jg
mov
mov
push
je
inc
push
xchg
xchg
sbb
push
fistps
mov
and
jnp
adc
adc
sbb
cwtl
outsb
pop
sub
jne
iret
lret
and
and
adc
mov
adc
into
xchg
mov
or
push
or
pop
cmpsb
jne
hlt
scas
cmp
cmpl
pop
pop
mov
ds
jo
cs
pop
mov
and
ret
adc
cmpsb
out
pop
scas
cmp
cs
xchg
lods
mov
pop
and
jp
sub
push
xchg
scas
or
fs
arpl
leave
das
cmp
mov
mov
pop
mov
test
inc
loop
inc
and
popa
imul
mov
sbbl
int
mov
out
xchg
xchg
leave
loop
mov
leave
out
pop
jmp
loopne
jo
std
add
mov
loop
jp
aas
sub
stc
sbb
jmp
shl
cmp
sbb
mov
pop
sbb
xor
scas
inc
pushf
jmp
out
das
push
test
sarb
rcll
dec
add
adc
or
xorb
dec
pop
sbb
mov
insl
movsb
bnd
mov
sbb
leave
testl
add
dec
fidivs
idivl
shll
add
out
jae
xacquire
add
adc
or
cmp
dec
push
jnp
cmc
mov
ret
mov
adc
and
mov
adc
push
jb
je
push
pop
loop
iret
pushf
jnp
sub
jl
push
scas
inc
sti
cmpsl
mov
lods
daa
mov
sub
insl
xor
imul
sbb
pusha
adc
mov
faddp
jecxz
sbb
ja
out
xchg
cwtl
inc
mov
push
mov
sub
int3
arpl
sbb
ljmp
pusha
dec
in
cwtl
mov
sub
and
repz
test
fiadds
dec
movsl
inc
pop
nop
rorb
in
mov
pop
cmpsb
xchg
imul
dec
call
shrb
adc
pop
out
mov
decl
out
mov
adc
cs
lods
xor
xchg
dec
sti
xchg
pop
mov
mov
mov
and
adc
popa
jns
xor
mov
shl
xchg
lods
dec
testl
and
gs
adc
lods
in
inc
xchg
inc
mov
mov
cmp
gs
lcall
outsl
lods
inc
lods
cwtl
mov
mov
adc
mov
pushf
fiaddl
jmp
dec
cwtl
mov
loopne
rolb
pop
call
cwtl
shrb
cmp
lock
pop
jo
clc
jae
xor
inc
adc
push
sti
sub
ss
fsubrs
inc
hlt
ja
pushf
imul
jnp
popf
repnz
inc
loopne
movsb
stc
call
pop
cwtl
sti
xor
std
jecxz
fst
and
pop
add
fs
mov
mov
push
das
jp
xchg
and
cs
mov
push
subb
in
std
push
leave
fisttpl
outsl
push
dec
call
lea
push
loop
in
cmp
jmp
in
and
mov
aas
sub
push
stc
je
or
lock
add
pop
jnp
andl
lret
lock
test
lods
cwtl
in
xchg
pushf
inc
mov
ja
and
in
mov
xchg
ja
sbb
push
xchg
xchg
dec
mov
push
jle
fdivrs
leave
jbe
add
imul
scas
add
testl
mov
cmpxchg
mov
aaa
push
je
fwait
xor
push
movsb
cmp
inc
and
mov
sahf
lock
fidivs
add
lea
fnstcw
cmp
jge
lds
inc
mov
xor
and
push
stos
xor
inc
jmp
or
inc
jmp
out
movsl
les
das
out
daa
pop
negb
cmp
daa
cmp
jb
in
in
pusha
jbe
xchg
cld
adc
lret
and
int
imul
xlat
jnp
inc
pop
pop
outsb
xchg
cmpsl
rcrb
fwait
xchg
add
lock
call
mov
lock
xchg
ror
inc
xor
loop
and
adc
mov
movsl
lods
fsubrl
dec
jnp
jmp
inc
pop
insb
faddl
xchg
mov
cmc
mov
daa
into
xchg
sub
inc
test
lds
xor
jno
xchg
push
inc
xchg
mov
pop
scas
dec
adc
mov
jne
sbb
or
decb
fsubs
jecxz
movsb
sbb
outsl
xchg
pop
cs
pop
outsb
mov
lods
push
pop
sub
sbb
lods
sbb
mov
inc
scas
inc
jns
xchg
lods
pop
mov
shrb
mov
mov
cmpsl
je
in
xchg
push
lahf
pop
js
sub
andb
je
push
incb
fldcw
xlat
insl
stc
mov
push
dec
jae
cli
insb
loop
loop
pop
clc
pop
xchg
sub
mov
sub
xor
imul
mov
out
xor
jge
inc
push
mulb
std
cs
push
les
fidivrl
mov
call
stos
ljmp
sub
fstps
jo
das
btr
push
lds
cmp
call
shll
ficompl
push
test
mov
aad
mov
or
push
out
out
and
sbb
xor
mov
xchg
inc
pop
xor
es
out
sub
gs
xor
adc
test
imul
repnz
ja
cmpsl
inc
lods
and
adcl
test
adcb
jae
call
inc
into
in
repnz
xchg
sub
adc
mov
jae
icebp
sub
adc
stc
popf
mov
dec
rolb
or
jne
mov
int
sub
mov
sub
jp
cwtl
das
stos
lea
lret
push
sub
mov
dec
mov
and
cmc
or
outsb
xor
stos
cmpsb
inc
dec
mov
into
gs
leave
jns
or
jl
or
test
jno
lahf
out
or
movsb
cmp
mov
sub
mov
inc
inc
lea
pop
cmp
sahf
cltd
daa
dec
ds
leave
imul
lret
push
fidivrs
hlt
mov
cltd
mov
ljmp
sbb
xchg
int
pusha
sbb
enter
sbb
loop
sub
js
decl
and
pop
pushf
push
xchg
sub
dec
lock
mov
dec
nop
add
dec
jp
in
stos
jl
inc
lcall
mov
aas
into
or
sub
inc
pop
cld
cmpsb
inc
jbe
dec
repz
xchg
into
aas
test
push
mov
sub
scas
xchg
xchg
loopne
les
jmp
mov
jnp
fidivl
add
jg
into
or
push
daa
or
inc
push
dec
icebp
push
movsb
loopne
xor
adc
enter
lret
xlat
sbb
push
sub
sub
pop
cmp
xor
loopne
mov
arpl
mov
jne
sti
xchg
and
sbb
out
loopne
into
push
aas
xor
inc
push
in
in
mov
jae
or
jmp
out
jb
jne
andps
mov
fcom
pop
mov
pushf
leave
push
mov
pop
cltd
push
sub
rolb
push
fs
pop
cs
loope
pop
sahf
sbb
nop
and
push
sti
cmp
add
sbbb
add
sbb
nop
lret
jne
mov
pop
in
jae
xchg
movsl
push
adc
sub
sbb
adc
sub
add
cld
cmp
adcl
sub
fs
pop
out
rcrl
jb
dec
mov
rorl
pop
jae
repz
xchg
rcl
outsb
pop
repz
lods
jbe
sub
push
aad
xchg
pop
jae
ret
jecxz
mov
roll
repz
das
mov
shrb
jae
add
mov
aad
dec
pop
neg
and
or
cltd
loopne
push
stos
mov
xchg
jbe
icebp
pusha
js
leave
xchg
adc
iret
inc
js
jbe
fs
xchg
push
cli
jo
seta
cmp
pop
push
test
inc
in
lea
cmp
mov
pop
subl
clc
sbb
mov
xor
mov
cltd
subb
call
repnz
cmp
push
aaa
lret
fildl
mov
addl
add
mov
imul
ljmp
cmpsl
cmp
xchg
xor
adc
push
pop
repz
sahf
fcomi
rcrb
sbb
adcb
fsubl
cmpb
cmp
push
iret
arpl
sub
lret
fcomps
flds
std
push
in
inc
dec
add
mov
mov
inc
push
arpl
mov
jo
lahf
mov
adc
add
ret
push
movsl
jle
cld
inc
ds
sti
loope
andb
and
xlat
repz
mov
ret
mov
cwtl
dec
push
pushf
dec
imul
lock
shlb
loopne
pop
dec
push
dec
pushl
movsb
pop
sub
add
jne
pop
pop
pop
cld
mov
lds
adc
mov
mov
inc
mov
andb
or
cmp
mov
inc
fwait
insl
out
decb
pushf
outsl
scas
sbb
mov
push
into
jge
add
imul
or
icebp
mull
adc
hlt
or
lds
notb
or
or
cmpsb
dec
mov
scas
inc
sub
aam
mov
mov
out
mov
dec
xchg
sti
sub
jb
sbb
and
ss
and
sub
sahf
pushf
add
cwtl
mov
mov
scas
loope
test
int3
in
push
jo
xlat
xchg
and
push
out
mov
mov
stos
pushf
or
enter
fwait
out
push
and
mov
mov
push
mov
ret
addr16
mov
mov
xchg
data16
xchg
xchg
stos
bound
hlt
cs
jnp
add
out
push
rclb
jne
sbb
and
inc
pop
mov
call
mov
cwtl
cmpsl
xchg
mov
xchg
mov
aad
jno,pt
add
sub
pop
hlt
lods
icebp
clc
stos
popa
xchg
push
xor
jae
shlb
pop
sub
loopne
mov
inc
mov
and
pop
pop
xor
lock
fcompl
xchg
ja
sar
push
inc
dec
jno
std
mov
pusha
jo
sbb
pop
xchg
sahf
jbe
in
jb
push
movsb
push
test
cmp
xor
pop
out
dec
inc
sahf
std
mov
cs
cli
int3
pop
sbb
pop
jbe
mov
stc
in
sbb
adc
adcb
inc
xchg
adc
cmpsb
xchg
sub
in
push
xor
pop
mov
jb
imull
je
ja
mov
scas
call
outsl
adc
cmp
push
out
mov
jle
jge
and
not
jne
popl
fisubrs
les
mov
sub
shlb
or
in
dec
scas
sub
enter
add
std
or
add
aad
cmc
push
mov
or
movsb
push
add
sub
lods
nop
repz
sti
push
je
cmp
xchg
xchg
xchg
sub
cmpsl
xor
lahf
or
adc
mov
xchg
lock
adcl
xchg
push
bound
aas
fdivl
in
push
jne
fdivs
cmp
movsl
sub
ja
js
xlat
sub
aas
adc
test
je
imul
sarb
insb
pushf
test
jg
xchg
jbe
fstpt
pusha
xchg
fucom
sbb
cmpsb
repnz
sar
jp
lods
push
jne
xchg
or
mov
and
jecxz
lock
pop
sub
cli
xchg
hlt
sbbb
shlb
popf
testb
mov
inc
xor
inc
cwtl
inc
inc
ljmp
lcall
mov
mov
xorb
jb
fs
inc
adc
hlt
jge
fldcw
inc
jae
decl
imul
add
jnp
push
mov
pushf
cmp
jns
inc
lea
fwait
push
add
add
fidivs
or
sbb
push
lock
cmp
xchg
pop
adc
addr16
mov
xlat
call
sbb
mov
jecxz
mov
inc
aaa
sbb
rorb
dec
sbb
fistps
in
sub
clc
test
xlat
inc
sbb
push
movsl
cmp
push
sub
inc
fmul
sub
loop
out
fildll
sbb
sbb
in
mov
out
loope
cs
bndstx
jae
scas
lods
xor
pop
fbstp
jg
jne
popf
fnsave
inc
pop
fsubrs
or
icebp
push
loopne
push
fwait
xlat
cmc
pushf
jb
subb
int
mov
push
mov
xor
mov
sub
test
mov
inc
mov
jnp
mov
or
std
add
dec
xor
sub
loope
insl
je
cltd
xor
sbb
mov
sub
stos
pop
sub
insb
pop
jl
leave
lods
jnp
lea
into
or
push
and
mov
movsl
jb
pop
movsb
kmovd
enter
adc
mov
leave
pusha
dec
jge
xchg
scas
xchg
es
and
pusha
mov
cli
xchg
xor
cmc
mov
pusha
leave
pusha
mov
cli
xchg
add
mov
adc
leave
pop
push
or
daa
mov
cld
notb
jo
mulb
mov
testl
and
jmp
push
mov
dec
shlb
shl
shrl
lahf
cli
shrb
aam
xchg
xchg
rclb
shl
and
jb
sub
nop
ss
mov
push
sbb
leave
mov
mov
mov
push
inc
out
imul
ds
xor
add
adc
dec
in
push
mov
lret
or
cmpsl
or
and
xchg
jo
xor
add
loop
dec
fwait
hlt
scas
sub
xor
insl
inc
lret
pop
sub
jbe
sub
xchg
mov
xchg
leave
mov
lods
enter
in
scas
jo
cmp
or
xchg
adc
sbb
xchg
inc
arpl
push
andl
fildl
popf
stc
push
cmp
or
inc
xlat
aam
pop
insl
das
std
pop
ret
idivb
xor
xor
inc
leave
rep
das
out
or
cmp
pop
mov
std
push
add
cli
clc
xor
pushf
push
cs
fists
fcomps
and
lahf
ss
add
les
cld
pop
insb
add
cltd
jno
lret
in
inc
and
inc
adc
inc
bound
pop
int3
cli
pusha
imull
icebp
loope
ficoml
nop
jle
fisttpll
dec
out
ljmp
push
arpl
jb
xlat
loope
lcall
movsl
cmpsb
add
lcall
orb
outsl
mov
mul
pop
jns
mov
int3
sub
cmc
inc
imul
push
push
mov
sahf
xchg
and
leave
lock
xchg
gs
mov
cmpsb
int3
fs
add
mov
jmp
mov
aam
cli
push
mov
sub
mov
xor
flds
add
jno
scas
xchg
push
test
inc
mov
jle
inc
cmpsl
dec
and
jnp
xchg
enter
cltd
cmp
and
push
xorl
out
sub
in
in
and
push
out
add
test
pop
jecxz
test
push
xor
call
sub
mov
jbe
in
mov
mul
jae
push
xchg
pop
push
xor
push
jns
repnz
jle
jge
shrb
repz
test
dec
pop
aad
sbb
lods
js
aas
sub
mov
cmc
sbb
movsl
rclb
sub
outsb
in
xor
push
outsl
into
dec
in
fbstp
pop
in
xor
call
mov
test
or
cmp
jmp
pop
xchg
dec
mov
dec
xchg
mov
fidivl
pop
and
aaa
xor
xor
mov
mov
fdivrl
lahf
jmp
xor
je
setae
insb
test
arpl
xchg
jmp
jno
clc
jae
sbb
add
lret
sub
mov
hlt
cmp
inc
int
lea
push
ja
aam
jmp
out
or
prefetch
or
fwait
outsl
xlat
xor
outsl
jne
arpl
and
mov
pop
push
adc
mov
add
sti
pushf
cmp
mov
mov
ljmp
mov
add
test
xor
jecxz
out
fcoms
icebp
clc
shlb
jb
xor
push
mov
cmp
das
xor
jo
pop
push
xor
dec
mov
in
std
ljmp
loopne
ljmp
xchg
jp
and
leave
out
push
inc
xlat
sbbb
sub
das
mul
add
push
subl
or
cmp
or
mov
test
sub
xorb
mov
ss
addr16
pop
pushf
inc
inc
and
inc
pop
jle
iret
rcll
aaa
mov
and
adc
pop
jne
dec
cmp
jne
sub
sub
push
das
fwait
inc
or
cltd
imul
push
fdivrl
sbb
rorb
leave
repnz
add
add
shrl
xchg
mov
mov
movsb
sbb
clc
dec
lds
arpl
mov
xor
push
inc
push
iret
scas
mov
sbb
mov
iret
rolb
adc
imul
lds
jne
mov
jl
leave
xor
pusha
cmpsl
pushw
aam
mov
fnstsw
iret
lret
push
xor
dec
and
imul
fidivs
aas
movsl
jl
and
aam
add
jnp
fistpl
or
push
mov
sbb
fwait
sub
inc
aam
loope
xchg
pop
push
pushf
xor
mov
dec
sub
rcl
cmpsl
lahf
imul
pop
loope
push
xor
mov
add
lea
mov
aam
mov
pop
ret
ret
push
je
imul
adc
push
add
cmp
jno
xchg
or
clc
and
dec
dec
xchg
push
in
insb
es
out
pushf
inc
in
xchg
cs
inc
adc
pop
test
roll
push
push
loop
lret
ja
add
push
add
dec
jecxz
ljmp
scas
daa
repz
loope
or
lds
cmpsb
cmp
xor
pop
cmc
aam
adc
cmc
jl
daa
mov
jmp
pop
jg
mov
int
push
loope
jge
fwait
sti
fmul
out
add
xchg
inc
clc
enter
out
pop
inc
out
mov
in
push
sub
es
outsl
jnp
push
jg
xchg
js
ret
fcmove
dec
test
lret
rcrb
cwtl
xchg
out
xchg
sbb
mov
mov
icebp
aam
leave
pop
jg
jl
lea
xor
std
lds
push
cld
pop
add
inc
imul
lods
aas
int
bound
push
lds
les
jbe
in
xchg
out
lahf
mov
ja
cmp
cmp
jl
mov
incb
out
inc
sbb
mov
movsb
out
cmc
orb
mov
jle
pop
push
push
and
xor
pop
adc
mov
cmpsb
loop
or
negb
dec
out
sbbb
enter
cmp
push
loop
and
jmp
out
inc
adc
jo
push
pop
inc
sarl
lret
xchg
and
rcll
add
insl
rorl
mov
shrb
std
test
push
ss
pop
loop
add
fwait
add
cmp
shlb
pop
push
mov
leave
lret
xor
in
test
fstpt
nop
nop
jo
xchg
sbb
mov
ss
add
and
push
cmp
xor
andb
ds
arpl
sahf
jg
insb
ljmp
cmpsb
test
or
std
pop
sub
flds
add
sub
lret
adc
push
out
jo
sbb
xchg
sahf
mov
int3
std
insl
fwait
xor
pop
aam
push
mov
arpl
rcll
mov
int
cmc
mov
xchg
xor
cmp
aas
inc
pop
pop
xor
dec
mull
lods
add
push
fstps
ss
arpl
popa
add
jne
xor
ja
mov
and
inc
in
push
popa
jl
repz
pop
jle
inc
inc
popa
sahf
xor
pop
push
xchg
call
mov
mov
adc
xlat
rcrl
push
lock
mov
popf
aaa
push
add
addb
xor
xchg
bnd
daa
add
insb
movsl
cmp
inc
sbb
enter
or
lcall
cmp
jns
repnz
gs
add
fsub
cmpsl
sub
jne
push
jb
addr16
push
ljmp
popf
adc
sub
lds
andb
int
mov
fistps
sbb
cmc
xchg
or
xchg
adc
mov
sbb
sub
leave
cmpsb
add
lret
inc
inc
and
ljmp
xor
xlat
pusha
push
mov
jo
andl
sti
out
lods
adc
push
xor
and
jnp
movsl
jnp
sbb
movsl
push
insb
repnz
stos
int3
adc
xor
ja
cmp
sub
das
movsb
repz
sub
jecxz
jb
xor
sub
adc
scas
mov
xor
jnp
aaa
sahf
mov
shrl
std
jo
or
cmp
mov
test
movb
pop
loop
sub
imul
js
outsl
dec
mov
rolb
movsb
fbld
jmp
mov
adc
mov
xchg
enter
ret
stc
jo
sub
push
inc
daa
stc
and
sub
jbe
out
push
nop
test
sbb
xor
push
and
and
dec
and
fiaddl
push
sahf
icebp
js
pop
xchg
mov
mov
cmpxchg
xchg
sbb
sti
shlb
aas
flds
mov
cs
push
lcall
in
jne
test
or
sbb
push
xor
add
daa
mov
std
cmpsb
rcrl
fwait
scas
test
add
add
adc
pop
push
int3
cli
xchg
jns
dec
sti
into
push
lahf
xor
xor
adcl
pop
jp
insb
shlb
faddp
inc
inc
les
adc
out
stos
mov
dec
scas
mov
and
cmp
aas
inc
mov
jle
mov
xchg
outsb
out
imul
add
cs
js
lret
push
jb
lds
sbb
push
jb
inc
and
inc
xchg
scas
add
mov
rorl
mov
mov
adc
cld
mov
adc
adc
xchg
push
pushl
gs
add
js
cmp
push
testl
shl
jae
mov
cmpsb
jmp
jg
jbe
jle
lcall
test
jl
xor
mov
hlt
push
in
mov
mov
jae
insb
sub
aas
and
mov
mov
negl
data16
das
inc
fisttpll
dec
fwait
mov
dec
call
pusha
scas
inc
push
aam
cmpsl
inc
mov
or
mov
mov
add
popa
jl
lret
add
aam
fs
mov
add
adc
cmovg
iret
mov
ficomps
cld
or
call
inc
and
jne
inc
mov
das
xor
push
aas
xchg
dec
mov
dec
push
sub
scas
pusha
jle
mov
xchg
int3
push
ret
jnp
cli
mov
mov
or
stc
popf
and
fidivs
into
jmp
aad
icebp
fcomi
test
jne
ja
mov
pop
xchg
and
sti
cmc
mov
mov
and
fsubrl
lods
mov
fimuls
fisubrl
xor
push
lahf
inc
cmp
mov
test
sahf
std
xchg
shlb
cmpsb
imul
push
in
xchg
test
mov
mov
fistpl
test
out
mov
push
or
decb
lcall
andb
pop
mov
aad
mov
rcrb
cmp
enter
add
out
push
push
out
dec
repnz
aad
and
push
or
scas
pop
add
lahf
subl
adc
insb
rcr
jmp
pop
stos
daa
into
mov
jg
repnz
push
ficoms
cmpsl
repz
repnz
lea
outsl
ret
ja
jno
in
sar
xchg
shl
sti
mov
fwait
out
cmp
aaa
xchg
adcb
std
push
outsb
in
insl
adc
xchg
xor
jno
aas
push
sbb
mov
lock
popl
and
jp
pop
test
leave
xchg
adc
sqrtps
inc
inc
hlt
mov
jl
in
inc
inc
frstor
mov
in
xor
dec
push
cli
jle
mov
mov
sbb
xlat
or
jg
cmp
pop
xchg
rolb
xorl
xor
out
dec
push
scas
jmp
imul
gs
push
rorb
btcl
sub
xchg
dec
fwait
xchg
jb
jmp
popa
das
mov
pmaddwd
jmp
ficoml
push
add
cs
iret
fistl
test
jae
or
aaa
in
jbe
out
mov
daa
jae
cmp
and
mov
push
les
push
push
pop
pop
popa
cmpl
rcrb
insb
rclb
rcrb
mov
pop
xchg
xor
clc
mov
inc
pop
mov
add
icebp
subl
mov
aam
dec
stc
ljmp
mov
xchg
pop
mov
cmpsl
fwait
cmpsl
jecxz
pop
fildl
push
jnp
adc
or
sbb
or
fcoms
mov
sbb
js
loope
add
shl
push
insb
test
shlb
ret
inc
lcall
xchg
hlt
xchg
ret
push
sub
enter
mov
xor
mov
std
adc
stc
test
pop
pop
xor
mov
sub
adc
test
clc
stos
adc
cmpsb
dec
shlb
add
adcl
jl
and
ret
cmc
pop
scas
scas
enter
inc
fcmovb
jmp
das
jbe
push
jbe
pop
out
aam
into
mov
pop
cmp
adc
int3
adc
pop
out
push
mov
jg
int3
lret
ljmp
inc
pop
jge
sub
add
jle
xchg
pop
mov
sbb
mov
mov
icebp
jg
setb
cmp
xchg
stos
xor
jmp
scas
out
pushf
inc
lret
lahf
add
popa
jg
stos
or
xlat
add
aam
dec
xchg
xchg
add
and
xchg
push
repz
jmp
mov
xchg
data16
in
pop
jne
push
ret
jo
push
lcall
sbb
lea
negb
cmp
fs
pop
ret
rorb
pop
xor
jg
push
in
ret
mov
mov
sub
xlat
cmc
pop
xor
jne
enter
into
rcll
pop
imul
rclb
je
dec
mov
or
mov
fcompl
lods
mov
jbe
xchg
mov
cwtl
mov
inc
adc
int
adc
lock
dec
mov
xchg
test
inc
out
jmp
in
jb
fildl
cs
sub
jnp
leave
movsb
mov
or
pop
outsb
es
dec
insb
adc
movb
pop
sub
and
in
xchg
sbb
mov
arpl
push
pop
inc
mov
shrl
insb
pusha
xchg
mov
cld
xchg
lea
shrb
push
lods
lds
sub
push
popa
xor
jbe
out
fisubrs
pop
mov
jmp
pop
sub
adc
test
mov
cmp
jmp
mov
push
imul
jecxz
jnp
xor
jb
and
inc
push
test
add
xor
pop
mov
stos
add
sbb
and
add
in
push
adc
aam
aas
rorb
or
fbstp
fstpt
sahf
mov
repnz
js
ret
loope
cmc
adc
lret
push
int
xorb
lods
loop
or
loopne
insl
add
add
pop
notl
mov
and
pop
jp
and
xchg
push
add
mov
cmp
cmp
jl
dec
inc
test
cmp
sahf
pop
push
ja
add
jmp
xor
dec
fwait
xor
gs
push
pop
andb
dec
xor
sub
mov
dec
sub
ds
sbb
add
pushf
arpl
mov
and
sub
mov
jnp
aas
xchg
mov
push
push
out
xor
sbb
movl
in
repnz
jle
inc
mov
mov
out
js
and
sbbl
call
dec
inc
stos
mov
fs
jnp
fsubs
add
js
data16
lcall
xor
push
int3
xor
imul
cmp
pop
addr16
jno
push
movsb
and
out
leave
mov
je
cmp
and
hlt
iret
faddl
mov
dec
or
hlt
push
push
pop
fdivl
add
aam
insl
mov
jae
dec
jno
outsb
xchg
movntps
lret
outsl
mov
shlb
notb
inc
sbbl
push
lahf
in
std
mov
jne
mov
mov
cld
push
lods
test
scas
or
and
or
stos
and
aam
xchg
mov
shrl
adc
push
pop
sbb
pop
push
jo
mov
push
lods
and
jl
or
repnz
addr16
jbe
mov
ja
std
pop
test
dec
aas
pop
std
xchg
mov
shrl
loop
mov
push
mov
cmc
mov
fwait
xchg
xchg
mov
or
jae
fbstp
pop
out
mov
movsb
cmp
mov
imul
ret
or
mov
rcrb
dec
rclb
gs
inc
jmp
stos
andb
mov
aaa
pop
in
sub
mov
dec
jp
rol
inc
xchg
insl
dec
rcl
mov
xchg
icebp
shlb
pop
sahf
sub
mov
add
and
xor
out
hlt
push
mov
cmp
lret
aaa
jl
pusha
adcb
or
push
adc
mov
fcmovb
mov
loop
test
cmp
cltd
mov
pop
mov
pop
push
xchg
pop
test
mov
mov
add
scas
adc
cmpsb
mov
out
es
dec
and
sub
aas
pop
adc
push
dec
sub
mov
aam
ret
push
jae
popa
inc
loopne
shll
outsb
push
rol
popa
std
es
adc
mov
nop
les
cld
add
and
int3
mov
pop
scas
jo
xor
clc
and
pop
sbb
xor
mov
dec
and
daa
mov
pop
lds
jge
fnsave
stos
xchg
in
test
inc
add
dec
mov
push
jp
nop
addr16
das
outsl
add
cmp
pop
popa
add
data16
stc
xchg
stos
daa
pop
sarb
xlat
insb
movsl
xchg
pop
stos
lahf
jb
inc
mov
ss
stc
push
imul
das
mov
mov
movsl
xchg
xchg
inc
dec
adc
mov
adc
repz
mov
sahf
pop
lock
lea
inc
mov
adc
fstl
jp
pop
xor
add
add
iret
jmp
bound
push
fwait
mov
int
dec
jg
xorb
lcall
fstl
or
sahf
jno
shlb
pop
inc
push
ja
test
mov
dec
pop
dec
test
inc
pop
mov
or
xor
popa
cs
mov
sbb
pop
push
jbe
xchg
sub
in
mov
lret
xchg
cli
insb
or
and
xor
lret
cmc
bound
lahf
repnz
cmove
cmp
ja
xor
jne
mov
or
xchg
pop
insb
ss
cmpsb
in
std
xlat
cmp
int3
out
lret
jb
ficoml
inc
insb
aaa
cs
imul
jne
cmp
lods
dec
test
fiadds
push
and
xchg
hlt
repz
mov
pusha
mov
arpl
dec
pop
cwtl
shrl
int
cmp
lahf
mov
push
cs
out
sahf
jbe
mov
shrl
sbb
sbb
mov
or
hlt
xor
je
lahf
add
or
push
out
sti
xor
pop
in
movsb
fstps
inc
jmp
andl
adcb
sbb
mov
xlat
mov
jae
push
lock
sbb
cltd
pushf
mov
mov
cltd
adcb
divps
unpcklps
xchg
xlat
dec
inc
pop
pop
pop
bound
cmp
fs
mov
cmc
jp
outsb
lds
rorb
cs
lods
add
cmp
mov
sbb
outsb
jnp
ret
and
mov
mov
sub
mov
js
fs
xchg
loopne
or
pop
mov
xchg
outsb
jl
jns
sbb
dec
imul
push
cmpsb
cmp
mov
inc
push
scas
outsl
push
mov
cmpsl
rclb
sbb
cmp
xchg
daa
scas
jp
sbb
jo
dec
mov
orb
lods
fstpl
sahf
in
ljmp
andb
iret
add
sbb
inc
loop
mov
loopne
push
pushf
sub
lods
push
scas
int
mov
mov
cwtl
icebp
push
inc
out
pop
ja
cmp
adc
lods
inc
push
ret
inc
dec
sar
sahf
and
sbbl
arpl
out
int3
and
jnp
stos
adc
stos
xchg
jae
les
test
repnz
push
subb
jns
push
pop
mov
outsl
push
dec
outsl
enter
add
xorb
mov
lods
push
jo
cli
subl
xchg
pop
mov
dec
xchg
pop
aam
pop
push
cs
cmp
lods
mov
adc
dec
xchg
xor
fistl
test
inc
in
dec
jbe
sbbl
hlt
fwait
mov
mov
js
xchg
and
pop
cmp
xchg
cmp
dec
cmp
ljmp
nop
adc
lret
repnz
into
je
dec
subb
addr16
aas
inc
or
dec
out
cs
in
aas
dec
pop
in
mov
aas
adc
shlb
decl
in
cmp
icebp
test
imul
and
inc
jns,pn
es
pushf
push
scas
dec
lret
fdivs
into
lret
sub
push
negb
xchg
lcall
cwtl
das
push
cmp
jno
mov
inc
or
test
add
inc
mov
jae
mov
fistps
add
inc
outsl
push
aaa
jmp
loopne
dec
out
add
xor
lcall
les
out
jne
insb
dec
cli
xchg
addb
mov
mov
out
orl
lahf
psubd
test
mov
aas
push
fs
adc
js
mov
push
sti
sub
jmp
mov
test
dec
and
jge
mov
xchg
xchg
sub
mov
pop
mov
dec
in
cmp
jp
pop
pop
add
jp
sti
xchg
movsl
fldcw
or
sbb
adc
fdivl
push
mov
pushf
jo
xor
shll
xor
mov
les
insl
sbb
or
sahf
adc
add
mov
sbbb
xor
sti
ret
mov
push
cltd
xor
dec
imul
jno
sub
jno
ret
hlt
mov
jle
mov
jecxz
pushf
adc
sahf
clc
bound
addb
add
out
ja
ljmp
je
pop
mov
ret
out
cmc
push
fsubrs
stos
add
lea
pop
mov
scas
add
fildl
int3
jno
testb
cmp
insb
lds
push
stos
add
xlat
repnz
pop
jb
mov
adc
lds
dec
jecxz
mov
push
lods
adc
sahf
xor
xchg
mov
pop
fidivs
jmp
test
mov
outsl
cld
nop
daa
sub
arpl
stos
xor
fdivl
push
out
sti
jp
sub
push
adcb
lods
adc
rolb
cmpsl
ds
and
insl
cmp
aad
mov
mov
lret
call
out
or
fs
push
sub
pop
nop
push
popf
shrl
popf
add
jl
mov
add
and
test
push
or
pop
cmp
pop
mov
shr
jg
xchg
sbb
pop
call
out
mov
fdivl
jge
sbb
dec
mov
adc
addb
sbb
and
imul
mov
testb
and
push
cmp
sbb
mov
aaa
jmp
or
xchg
push
jge
inc
stos
jbe
sbb
sbbl
loop
popa
sbb
xchg
sub
dec
lret
cmp
push
lahf
jl
jbe
lret
pop
icebp
add
jae
notl
gs
dec
loop
rorl
movsl
or
xor
pop
sub
mov
lcall
cmp
dec
push
mov
jmp
mov
insl
cli
xchg
fwait
aaa
out
xchg
xchg
cld
je
lcall
dec
loop
dec
and
jl
pop
lock
lds
mov
jg
mov
push
in
sbb
or
sub
mov
insl
mov
jno
mov
test
mov
sub
add
gs
sub
lods
in
mov
out
inc
lret
testb
aas
push
out
lret
lods
inc
std
lea
mov
fisttpll
lea
jb
outsb
add
mov
mov
sub
nop
daa
lock
cmp
lahf
mov
int
loop
jo
aad
xor
and
mov
xor
scas
out
xor
pop
pop
repz
push
jmp
roll
mov
sub
xor
in
daa
cmpsb
cmp
sbb
pop
add
dec
enter
adc
mov
mov
lds
adc
les
incb
or
mov
mov
mov
movsb
lock
mov
cmp
add
sbb
xchg
sub
lret
add
stc
arpl
jp
in
cmpsb
ja
movsl
stos
inc
fneni(8087
stos
or
sbb
loop
test
fdivl
mov
out
rep
inc
sub
adc
sbb
ret
pop
mov
adc
les
repnz
decb
ja
xchg
inc
lds
cli
xchg
cmp
push
jmp
mov
hlt
mov
fldt
xor
adc
lret
imul
cld
call
sub
xor
ja
jbe
cmp
jmp
fcomp
mov
push
pop
jl
dec
dec
dec
loope
mov
mov
mov
sub
fdiv
fs
and
and
mov
mov
pop
out
out
notl
and
sub
pop
pop
insb
add
xlat
or
add
push
mov
inc
xchg
sub
xchg
sub
push
adc
mov
test
adc
mov
dec
push
xchg
adcb
or
add
hlt
and
jbe
pushf
xor
mov
leave
mov
adc
cmp
aaa
movsl
cmp
pusha
outsb
add
pushf
fistpll
mov
mov
jne
jae
jnp
lock
push
movsl
cli
mov
cwtl
das
adc
imul
dec
cmpsb
jp
push
insl
mov
mov
aam
sbb
inc
outsb
add
setne
mov
mov
adc
jle
or
cltd
jp
mov
mov
or
push
lds
frstor
mov
andl
inc
adc
test
cld
dec
test
jg
mov
lahf
dec
pop
jp
mov
rcrl
into
movsb
cmp
dec
xchg
sub
sbb
lahf
dec
test
jge
and
stc
sahf
pop
int3
loope
pop
pop
pop
cmp
cmpsl
jl
icebp
mov
popf
cs
and
dec
sub
arpl
xchg
rorb
pop
cmc
lods
xchg
ljmp
xchg
into
pop
cmpsb
sbb
mov
scas
shrl
sub
pop
or
sbbl
pop
mov
es
jo
mov
stos
movsb
cmp
xor
jns
jge
inc
stos
cmp
pop
push
pop
repnz
jns
test
sub
repnz
aas
xor
insb
push
xchg
aas
adc
fnstcw
jmp
push
mov
cmp
xor
lock
or
mov
test
dec
in
push
call
pushl
test
jno
jns
xchg
scas
dec
mov
loopne
push
cmp
mov
test
cmp
jno
inc
fldt
arpl
jecxz
lret
gs
add
or
rcl
xor
pop
add
rcrl
push
in
push
sbb
xchg
stos
mov
adc
icebp
cmp
es
jmp
jne
cmp
pop
jnp
out
mov
pop
scas
mov
cli
cmc
or
test
xor
fsubrs
inc
imul
popf
jns
aam
iret
push
std
mov
pop
sbb
dec
mov
jl
stos
inc
pop
jae
in
xchg
lds
adc
aam
cwtl
das
cmp
and
daa
arpl
es
adc
cli
test
lds
cmpsl
sbbl
outsl
or
jge
jb
lahf
cmpsl
and
push
mov
adc
sub
pop
arpl
push
jmp
push
aad
test
pop
mov
loopne
fcoml
sub
inc
pop
xor
push
fs
repnz
test
call
dec
pop
or
or
push
push
dec
mov
les
cmp
and
xor
icebp
xchg
sub
nop
call
ret
enter
mov
rorb
cmp
test
lret
cmp
imull
ret
ficompl
ds
addr16
es
enter
jg
or
xchg
lahf
inc
fxch
lret
cld
in
pusha
negl
fmulp
pop
or
mov
je
out
subb
fdivp
xchg
mov
cmc
push
ss
jmp
xchg
and
js
push
inc
data16
jbe
in
subb
lahf
loopne
cmp
ret
repz
ret
in
xchg
sub
push
ret
fistpll
out
dec
ret
cmc
test
and
inc
cwtl
cmp
cltd
outsl
ret
testb
in
and
mov
and
nop
fwait
dec
ret
cmpsl
les
jmp
cli
push
aam
pusha
out
sbb
xchg
adc
mov
mov
push
nop
push
shlb
pop
stos
pusha
arpl
sahf
inc
aaa
mov
push
ja
arpl
mov
test
ljmp
es
fiaddl
mov
xlat
test
mov
or
push
jmp
or
pusha
lret
fists
jo
repz
xchg
pop
cmp
add
cmp
xchg
mov
dec
fnstenv
inc
cli
inc
fs
mov
insb
movsb
adc
sub
aam
inc
jmp
scas
cmpsl
loope,pt
hlt
and
add
inc
subl
dec
adc
shrb
lcall
cmp
push
add
push
cmpb
cmp
test
xlat
outsl
outsb
add
mov
scas
fbld
data16
popf
stos
dec
ret
xor
nop
cmp
cld
cs
cli
les
pop
cmp
jmp
or
mov
adc
loopne
sahf
lret
or
fstpl
mov
bound
sub
push
out
dec
push
mov
pop
xchg
loopne
jge
jl
loopne
fnsave
dec
rorb
and
lds
iret
push
lret
lock
stos
inc
int3
adc
pushf
xor
sbb
lock
test
gs
jo
push
dec
stc
pop
pop
pop
lret
dec
jge
dec
dec
pop
sub
insb
inc
mov
xchg
lea
sub
xchg
mov
outsl
mov
pop
jns
jo
inc
mov
sub
push
mov
sbb
gs
push
out
pop
fisttpll
test
sub
push
xchg
dec
jp
add
jo
xchg
pop
xor
adc
and
movsl
push
adc
inc
mov
ret
les
call
iret
push
out
fnstenv
sarl
test
loope
xorb
push
daa
or
adc
in
add
outsl
add
jb
jno
jnp
inc
movl
adc
icebp
mov
daa
mov
or
mov
or
pop
lea
push
pushf
and
sti
inc
dec
push
mov
ret
adc
ss
je
popf
xchg
pop
daa
les
xchg
or
cmpsl
mov
add
cwtl
addl
mov
in
sbb
mov
inc
or
shrl
lcall
test
mov
xchg
mov
jnp
push
movsb
nop
daa
inc
push
enter
ds
lahf
inc
enter
push
repnz
das
fucomp
mov
leave
pop
mov
aaa
fcoml
pop
shll
add
rep
int
pop
lock
sbb
pop
push
cmp
push
xchg
mov
nop
xchg
push
push
mov
lcall
jge
and
push
mov
jp,pn
shll
leave
and
cmp
ja
fisubl
imul
stc
je
int3
arpl
sbb
cmpb
add
rcll
and
test
rorl
movsl
arpl
adc
lahf
subb
jp
aas
addr16
pusha
pop
jecxz
dec
xor
addl
cmp
inc
enter
dec
mov
lds
push
sbb
imul
mov
rorb
sbb
ret
cmp
aas
adc
mov
js
dec
pop
in
xchg
xchg
mov
ret
repnz
sarb
cmp
jp
shl
xlat
add
cwtl
xor
jge
stos
inc
lods
out
and
dec
dec
in
scas
in
pop
das
cmpsb
lcall
mov
in
sbb
ljmp
push
sti
xchg
sub
jge
cmpsl
and
xchg
lock
or
outsb
adc
test
adc
cmpsb
push
lods
add
mov
xchg
xchg
mov
fxch
mov
cmp
mov
cld
pop
stc
sar
push
enter
sahf
scas
cmp
or
fwait
jg
push
mov
loopne
xlat
lds
inc
xchg
filds
ja
cmpsb
cmpl
mov
or
and
ficoml
and
insl
hlt
ja
ret
test
inc
ret
jo
scas
lods
xor
hlt
lock
push
and
mov
jne
or
xor
orl
jg
mov
jo
pop
ljmp
inc
test
pop
ret
insb
into
mov
xor
ret
cld
xchg
jl
lret
and
fld
nop
mov
xlat
add
push
das
pop
lds
gs
inc
cmp
in
xchg
fsubl
add
call
jl
dec
int
inc
lret
call
in
jne
sti
dec
int3
jns
push
outsb
and
dec
xor
ss
push
cmp
cmp
adc
dec
xchg
popf
pop
test
mov
ja
cld
pop
mov
sti
shrb
jae
mov
xor
shlb
ret
xchg
push
in
divl
sarl
out
pop
jmp
imul
sarb
xchg
mov
stos
dec
pop
aad
in
iret
mov
ljmp
in
or
add
mov
xchg
int
test
psubusb
fisttpl
xor
mov
jae
add
push
mov
repnz
xchg
sbbl
mov
mov
add
sub
lock
pop
rorb
andb
lahf
cmp
sub
ljmp
and
in
push
or
dec
in
fidivrl
stc
cmp
shll
cli
mov
movsb
fs
repz
enter
insb
lret
lea
mov
std
sub
mov
lds
int
mov
sahf
daa
mov
daa
inc
pop
enter
lret
dec
pusha
and
push
inc
es
push
adc
test
push
xor
add
sbb
daa
fcom
je
and
ds
inc
fnsave
stc
outsb
mov
xor
pop
iret
les
pop
mov
jmp
cwtl
in
or
ja
aam
test
push
mov
dec
shll
insl
cmp
cmp
xchg
or
pop
jmp
adc
stc
iret
ljmp
mov
sarl
jge
ret
pusha
fisubs
inc
jmp
shlb
add
js
in
xor
pop
xlat
dec
dec
push
pop
xrelease
je
mov
xchg
mov
mov
xchg
pop
addr16
inc
test
xor
pcmpgtd
insb
test
icebp
jo
mov
cmp
sub
push
mov
addr16
imul
xor
hlt
sub
cmp
mov
jnp
push
jo
mov
inc
jb
pop
jg
orb
or
outsl
outsb
mov
mov
or
mov
lahf
nop
inc
mov
je
push
popf
dec
xor
jmp
push
add
push
pop
icebp
sub
sti
out
mov
add
xchg
cmp
aas
dec
mov
mov
fs
call
stos
ja
clc
stos
fwait
xor
mov
int
add
movsl
daa
out
xchg
push
outsb
lock
jp
push
fisttps
rorl
aas
icebp
leave
imul
cmc
shll
mov
jg
fs
jl
pop
rclb
jg
xor
insb
cmp
xchg
repz
cmpsb
stc
cs
std
push
fmulp
mov
cmp
shll
cmc
mov
jne
fldenv
jmp
icebp
mov
mov
mov
pop
leave
sahf
sti
mov
in
cltd
loopne
adc
or
fnstcw
dec
jnp
xor
pop
rorl
or
cltd
mov
push
sbb
push
inc
aaa
mov
mov
dec
mov
add
ljmp
and
ja
xor
stc
cmp
jns
add
dec
flds
pop
negb
jno
ret
aas
add
lea
push
inc
add
mov
cmpsl
mov
lcall
sbb
es
pop
shrl
push
cs
push
sbb
or
xor
filds
gs
imul
sub
and
sbb
sbb
bound
push
sti
sub
loop
cmp
cmc
xlat
cmp
lahf
or
cs
insl
int3
popa
repnz
pushf
mov
pop
in
cmp
hlt
das
dec
fstl
in
shrl
push
cmp
mov
in
adc
les
je
pop
imull
popa
out
mov
outsl
movsl
fbstp
mov
or
insb
mov
lea
pop
xchg
or
mov
mov
lods
hlt
outsl
enterw
in
sub
les
xor
pop
inc
sub
bound
addr16
inc
aad
xor
pop
mov
inc
movsl
pop
cmc
inc
add
inc
mov
xor
mov
jb
shll
jnp
pushf
gs
adc
sbb
loop
je
adcl
sbb
fcomps
or
add
cmp
sbb
adc
xor
pop
or
xchg
leave
inc
sub
test
jle
inc
dec
pop
push
shrb
popl
test
testl
push
xor
aad
jnp
pop
lds
xor
jb
rorb
xchg
ret
dec
sub
rcrl
mov
xor
add
pop
inc
bound
push
inc
pop
divb
scas
cmp
jne
aam
mov
mov
xchg
in
fsubrl
add
cmpsb
lds
cli
lods
fdivrl
xor
in
inc
sbb
inc
inc
in
cltd
test
loop
mov
cmp
sub
loop
add
push
push
in
pop
jmp
scas
add
and
int3
pop
xchg
jno
test
jnp
jbe
stc
sub
gs
aad
push
sub
scas
pop
pop
in
mov
in
lret
mov
fiaddl
or
jle
sub
mov
add
sbb
or
loopne
mov
xor
adc
shrl
xor
mov
out
and
mov
les
jp
xor
jp
frstor
int
push
stos
push
into
sbb
call
sub
sub
adc
sub
xchg
mov
aaa
pop
push
or
stos
lahf
out
add
repz
or
add
push
cmpsl
xchg
jbe
mov
inc
roll
xchg
xor
mov
jp
pop
dec
lahf
mov
cmp
cmp
in
xor
outsl
and
sub
and
lret
aaa
mov
repnz
imul
loope
push
push
rorb
jp
es
jl
notb
cs
pop
adc
pop
add
mov
push
and
mov
push
inc
pop
movb
nop
sub
adc
out
inc
pop
inc
fidivs
arpl
pop
cmc
das
push
inc
aas
stc
cmc
xor
popf
cmp
and
lret
push
mov
pop
sti
mov
repz
xchg
insl
mov
or
in
mov
pop
stos
in
or
push
in
test
jg
cmpsl
sbb
push
popf
repz
out
idivl
das
lds
sbb
or
and
sbb
insl
cwtl
lock
sub
and
mov
inc
enter
rcrb
xor
xchg
hlt
hlt
mov
shll
movb
addr16
and
xchg
bound
mov
and
mov
sub
or
imul
dec
mov
lret
sti
pusha
clc
mov
std
inc
mov
mov
fisttpll
in
int3
movsl
cmp
movsb
cmp
adc
fstpt
jbe
or
dec
cmp
push
jno
xor
mov
pop
push
fsubrs
cmp
sub
sbb
fwait
dec
out
mov
ljmp
and
nop
adc
xor
jl
jb
fsubrs
daa
pop
rcll
call
sub
adc
out
sbb
arpl
or
add
cmp
sub
sbb
shll
xchg
cmpsl
hlt
inc
ret
bound
in
xor
mov
and
test
sub
xchg
lret
into
pop
adc
or
mov
lock
out
rorl
adc
lcall
sbb
int3
shr
mov
mov
mov
jns
push
mov
dec
in
sub
dec
mov
mov
cmp
imulb
int
clc
pop
cmc
mov
and
mov
pop
adc
loop
push
mov
jmp
xor
jns
enter
mov
push
xchg
xchg
jnp
loop,pn
pop
out
pusha
scas
cmp
pop
xor
jg
push
adc
inc
pusha
add
push
popf
mov
ljmp
inc
mov
jmp
push
out
movsl
jo
and
push
cmp
pop
loopne
insl
dec
aam
and
dec
mov
inc
jbe
stos
jo
xor
jl
mov
mov
jnp
decl
popa
rclb
pop
xor
arpl
cmp
adc
js
jecxz
scas
sub
pushl
cmp
xor
add
test
in
mov
sarb
ret
pop
fisubrl
js
inc
adc
fisubs
cli
sbb
mov
fimull
pop
xchg
outsb
xor
dec
adcb
dec
mov
cli
sub
sti
or
xchg
sbb
xchg
lcall
push
dec
sbb
popf
cltd
dec
aam
pop
sbb
aaa
lods
inc
imul
mov
push
out
aas
jmp
push
incl
or
pushf
push
test
pop
pusha
dec
in
popa
xor
fildl
cs
jb
pushf
xor
es
xchg
in
lahf
xchg
push
pushf
je
xlat
ja
rol
sti
dec
in
shrl
ljmp
push
sbb
push
add
lea
xor
mov
xchg
sti
dec
lret
add
lock
imul
jp
adc
push
inc
lcall
dec
jl
cmp
iret
push
xchg
push
in
jle
inc
mov
cmpsb
dec
push
mov
and
inc
push
rclb
sub
cmp
inc
adc
jbe
and
test
xor
rcrb
and
mov
pop
movsb
mov
adc
mov
push
mov
and
cmpb
inc
ret
xchg
mov
cmp
hlt
mov
insl
add
stos
pop
loope
scas
lret
bound
or
stos
mov
pop
jmp
cwtl
mov
mov
xchg
stc
test
mov
mov
out
pop
bound
imul
dec
mov
das
ja
mov
dec
out
lods
xor
push
sub
xchg
xchg
dec
sbb
ds
push
jl
insl
lahf
or
mov
xchg
mov
jge
sub
pop
cmp
push
mov
push
mov
adc
dec
scas
leave
loop
xchg
aad
mov
divb
and
cwtl
xchg
mov
pop
push
popf
xchg
inc
out
insl
mov
mov
in
or
dec
aam
test
out
sbb
sub
fnstcw
and
mov
fldenv
in
pop
fsts
sarb
xor
lret
repz
push
mov
or
fisttps
pop
xchg
push
xor
dec
mov
dec
adc
inc
mov
sub
pop
fs
frstor
mov
add
dec
jns
mov
sarl
cmp
push
aam
or
mov
xor
nop
mov
cmp
addl
jnp
ret
cmp
mov
mov
sub
push
iret
jge
push
lods
inc
nop
daa
mov
inc
int3
aad
out
sbb
or
sub
cmc
int3
fs
add
pushf
sahf
pop
mov
xchg
and
test
dec
mov
jb
push
in
and
jns
fimuls
mov
dec
notb
lea
inc
or
das
shrl
out
mov
movsb
test
jno
das
fstpl
pop
push
xchg
shl
sbb
sti
add
sarb
adc
adc
das
xchg
fdiv
sbb
add
std
xchg
xor
mov
les
outsl
cwtl
js
insl
aaa
testb
dec
sub
mov
cmp
push
int3
dec
jp
jp
pop
ss
and
jo
push
out
xchg
jo
push
lods
xor
or
cmp
hlt
lea
sub
pop
out
aas
sbb
sbb
cmc
add
into
or
xor
cld
cmp
aaa
cmp
push
ja
inc
inc
and
dec
jg
mov
popa
addr16
mov
sub
push
inc
cli
pop
data16
stos
xchg
xor
mov
xlat
dec
lods
test
xchg
int
xchg
jmp
in
xchg
test
iret
push
cltd
xchg
cmp
cmp
ds
insb
scas
dec
mov
push
and
push
call
pop
shll
out
lock
mov
ret
gs
aad
jno
pop
roll
out
pop
push
sahf
push
int3
sub
jbe
and
repz
pop
adc
mov
push
sub
push
daa
ja
ljmp
lds
out
mov
add
push
jno
pop
dec
mov
and
xor
data16
push
push
je
fidivrl
cld
xchg
add
adc
maskmovq
testl
xor
mov
pop
jnp
imul
xchg
cmp
xlat
stos
mov
jle
cld
xor
cmp
mov
add
add
mov
add
ljmp
mov
mov
testb
and
adc
mov
roll
mov
out
xor
mov
cli
mov
xorl
jbe
test
in
dec
ret
fstpt
shlb
icebp
mov
mov
pop
pop
bound
lods
fs
sub
jmp
loop
jo
and
test
fcmovnbe
orb
loopne
mov
shl
inc
lcall
jle
mov
pop
push
fmull
int
mov
rorb
add
insb
mov
repz
jle
inc
jb
pop
scas
xchg
pop
repnz
js
or
and
sbb
sbb
sub
mov
xorl
ja
mov
xchg
or
sahf
lea
ret
mov
iret
inc
imul
mov
pop
test
popf
sub
adc
inc
push
pushf
push
inc
add
cmpsl
xchg
orl
sbb
xor
adc
shll
js
cmp
jb
movsb
mov
in
xchg
mov
mov
test
bound
clc
pop
xchg
sub
rorb
inc
repnz
test
mov
mov
scas
mov
mov
out
mov
std
sub
xchg
cltd
xor
out
sub
call
loope
testl
in
ss
push
jmp
shr
inc
shlb
mov
push
inc
pushf
jbe
fwait
movsb
cmp
movsl
pop
fwait
sub
mov
js
cmp
mov
sti
sub
jmp
in
ds
mov
rorb
xlat
push
push
cmpsl
push
roll
pop
pop
aad
les
lds
aaa
imull
ds
xchg
cmpsb
test
les
ret
or
cmp
stos
jne
jle
int3
push
aad
es
divl
mov
jmp
ret
out
mov
or
cltd
xchg
je
add
adc
imul
pop
adc
popl
clc
adc
xchg
scas
movb
addr16
mov
rorb
repnz
pop
mov
in
ret
pop
pop
sahf
adc
or
mov
lret
mov
jo
or
sub
mov
cmp
or
xchg
xor
pushf
adc
push
push
mov
or
add
sarl
orl
das
out
sbb
not
outsb
int3
dec
inc
mov
fistl
mov
aam
adc
adc
mov
lcall
or
lcall
sub
sahf
xor
lods
xor
cmp
fsts
divl
fnstenv
dec
jecxz
test
jae
dec
mov
push
mov
sub
arpl
sbb
imull
adc
xchg
test
lret
ljmp
sbb
adc
sbb
push
cmp
dec
nop
or
dec
test
in
cmpsl
popa
lret
icebp
insl
fildl
mov
shll
jp
jge
mov
popf
ss
pop
shr
mov
cmp
or
cs
mov
shll
pop
movb
dec
mov
sti
mov
ret
or
pop
sahf
repnz
jle
scas
lods
shrb
iret
sbb
jmp
rcrl
ficoms
jp
jmp
or
mov
xchg
mov
cld
xchg
cmc
and
push
mov
cmp
cmpsl
xor
sbbb
push
ljmp
and
repnz
mov
testb
add
popf
xor
and
ljmp
and
pop
push
cmp
loop
mov
cltd
xor
rorb
fldl
lods
mov
cld
push
mov
ret
xor
and
jne
stos
movsl
lea
mov
push
mov
repnz
popa
mov
popf
or
sub
push
sahf
and
mov
adc
aaa
js
cmpl
inc
xchg
pop
cmp
mov
xor
jb
call
jne
out
je
inc
enter
inc
pop
mov
decb
cltd
pop
sbb
into
mov
pop
xor
push
cld
idivb
mov
push
mov
in
inc
cwtl
dec
xlat
insb
mov
pop
shlb
push
bound
sbb
add
dec
cs
filds
aam
loopne
cmp
inc
add
push
mov
in
lods
xchg
in
addl
nop
and
popa
aad
xchg
dec
shr
insl
add
test
or
jbe
jb
test
xor
popa
movsb
mov
ficoms
dec
sbbl
popa
into
loop
rclb
jne
fsubp
sbb
dec
popf
xor
into
cmc
daa
mov
in
fcoml
xchg
orl
mov
js
fidivrs
cmp
mov
lret
lahf
stos
aam
inc
mov
in
mov
xor
hlt
pop
lds
dec
lret
lock
imul
pop
cli
je
inc
imul
mov
ret
scas
mov
mov
cli
xchg
nop
mov
add
inc
in
pop
xchg
lods
lods
outsl
cmc
adc
pop
cltd
scas
xchg
outsb
xor
mov
sub
mov
sub
jae
pop
or
test
or
and
pushf
xor
jno
mov
sbbl
cmp
out
sahf
hlt
sbb
negl
ljmp
or
push
jae
test
jbe
jl
fs
mov
inc
mov
int
push
leave
fmul
sub
rclb
lods
xor
imul
cld
pop
test
xchg
insb
lcall
jnp
or
adc
fwait
pop
sar
jb
and
mov
shl
xlat
cmp
add
ds
inc
adc
gs
rorl
and
adc
cltd
addb
mov
daa
std
pop
mov
jne
sar
aaa
jmp
cmpxchg
jecxz
mov
sub
test
mov
add
jmp
int3
btc
enter
lahf
andl
cmpsb
fidivs
mov
int3
das
mov
push
sbb
xlat
add
fstpt
or
inc
cmp
subl
in
sub
bound
jae
test
stos
pop
rorl
mov
mov
out
jp
mov
sbb
jle
mov
loope
mov
bound
jge
or
and
jl
movsl
inc
and
pop
add
das
loop
icebp
sub
scas
xchg
loope
repnz
outsb
mov
and
pop
lods
rolb
mov
jns
or
insl
lahf
jae
test
std
fwait
lsl
mov
cli
ss
adc
or
pop
loop
jnp
lock
xor
loopne
dec
rcrb
movsl
mov
insl
cmp
mov
imul
les
push
into
and
imul
dec
pusha
imull
xor
ss
inc
xor
flds
mov
mov
or
push
in
xchg
mov
sub
sbb
cmp
mov
cmp
pop
mov
jp
pop
push
push
bound
aas
pusha
push
jmp
jno
pusha
pop
mov
scas
js
pop
dec
cld
push
sub
imul
inc
inc
insl
fiadds
push
scas
pop
xor
jno
xchg
push
fwait
lock
cmp
sti
orl
or
pop
push
mov
jb
jg
pop
cltd
subb
xor
or
xor
add
cmpsb
data16
push
xor
es
bound
call
push
cltd
pop
fldcw
lea
fnsave
xchg
pop
or
jp
mov
pop
iret
jo
shrb
in
sbb
int
test
cs
call
sbb
dec
leave
clc
jae
mov
std
xor
loope
mov
clc
mov
sub
push
mov
out
xchg
fdivrs
or
or
cs
inc
sub
jne
mov
mov
dec
loopne
rcl
push
jmp
icebp
mov
test
mov
cld
loope
pop
adc
dec
jecxz
xor
jbe
jo
add
ret
mov
cmc
ficompl
mov
pop
cmpsl
ds
sub
rcrb
lds
push
out
scas
mov
jne
add
add
push
arpl
mov
jbe
dec
test
ds
leave
iret
data16
pop
pop
hlt
cmp
test
jnp
mov
mov
faddp
sub
repnz
loopne
push
aad
test
xchg
movsl
repz
mov
adc
ds
das
jnp
ret
pushf
dec
in
mov
ja
out
imul
push
call
jae
sbb
ds
stos
cmp
fsub
lds
pop
lock
cmp
jp
push
ja
orb
sub
loopne
mov
divl
aam
dec
shrl
test
mov
out
xchg
xlat
jns
or
or
cs
inc
sub
je
mov
mov
dec
loopne
rcl
push
call
icebp
mov
test
js
cmpsb
test
lret
sti
loopne
pop
adc
fbstp
outsl
push
mov
ret
hlt
fstps
mov
push
cmpsl
ds
sub
rcrb
pop
fwait
jge
out
scas
mov
jne
add
add
push
bound
mov
jne
dec
cmpsl
mov
aad
enter
loop
adc
mov
cltd
xor
or
pop
cmp
shlb
cmp
cld
mov
pop
mov
jns
mov
xchg
mov
loope
mov
jbe
sub
fs
ss
movsb
adc
mov
insl
outsl
or
mov
fstpt
iret
or
mov
xlat
sub
or
data16
cld
xchg
pop
mov
pop
icebp
lods
repnz
xchg
and
clc
sahf
popa
cld
lcall
dec
rclb
or
aad
sub
pop
test
sbb
dec
inc
stos
inc
jns
mov
leave
pusha
add
inc
fucomi
and
stc
imul
mov
jne
mov
lods
inc
sbb
mov
and
lcall
cmp
inc
jle
push
int
lahf
into
and
popa
fldcw
jecxz
outsb
data16
add
add
rclb
add
xchg
sub
imul
popa
sub
dec
push
push
std
pushl
fldl
je
jge
mov
inc
les
das
iret
add
dec
xor
lret
scas
aam
aam
lea
dec
lahf
pop
inc
fwait
pop
inc
sub
sbb
inc
dec
jg
cmp
pop
rol
jg
cmp
add
sub
adc
fmuls
sahf
negb
nop
sbb
rcr
std
fadd
pop
lahf
mov
xchg
dec
inc
jge
mov
js
cmp
adc
movb
mov
imul
fisttpl
jno
les
mov
mov
add
mov
mov
pop
xor
pop
xlat
sbb
sub
inc
mov
xlat
jmp
outsl
movsl
decb
cmp
sbb
sbb
lock
in
push
jecxz
push
mov
jp
inc
and
and
mov
sbb
fildl
shl
rol
xchg
fldenv
pop
daa
scas
fisttps
push
inc
call
jo
stc
idivl
sbb
ret
nop
dec
mov
cld
fstps
outsl
dec
sub
mov
aam
mov
imul
scas
sub
mov
inc
in
iret
jnp
dec
push
ja
in
sbbb
jns
mov
inc
jnp
add
jecxz
xchg
sbb
ret
cltd
jl
out
adc
jae
jle
push
nop
inc
inc
divl
out
mov
ret
shrl
pop
sti
sahf
inc
lcall
shll
outsl
push
mov
jno
mov
push
xor
movsl
shlb
or
add
jno
mov
icebp
popa
xchg
sub
in
xor
repnz
test
dec
xor
push
ficomps
sub
sub
lret
and
dec
shrb
pusha
inc
out
dec
rcrl
aaa
add
pushf
sbb
xor
and
push
scas
jns
lcall
out
sarl
mov
mov
fsubp
int
int3
imul
add
mov
push
aad
sarb
mov
std
xchg
rcrl
dec
dec
jl
jb
in
test
js
in
xorl
sub
sub
push
sahf
and
enter
or
ds
mov
imul
pop
jno
push
enter
ret
jno
add
xchg
sti
loope
in
inc
fnsave
das
cmc
fnsave
lret
lods
inc
push
bound
rclb
cld
aas
in
mov
dec
in
shll
fwait
dec
loop
pop
test
hlt
adc
mov
shrl
les
and
pop
push
out
dec
fsubp
jp
lret
mov
ficompl
push
add
pusha
mul
ret
jge
cmc
add
xor
pushf
xor
push
xchg
aas
sbb
or
sub
fnstenv
mov
push
jae
push
movsl
xor
pop
mov
test
fmuls
jl
adc
in
imul
je
int
stc
pop
push
iret
mov
shl
repnz
int
inc
or
mov
les
sti
xor
daa
arpl
push
aaa
inc
or
test
jnp
and
out
xor
add
or
or
push
rclb
repnz
push
xor
add
push
out
adcb
roll
xlat
adc
popf
or
xchg
mov
movsl
mov
rorl
mov
mov
or
fmulp
addr16
addr16
xchg
cmp
fsts
lret
sub
adcb
pushf
cmp
in
ljmp
fstps
lds
stos
and
cmp
fs
imul
ficompl
test
xor
pushf
cmp
in
in
push
rcll
push
mov
movl
cmp
gs
imul
mov
divps
cmp
add
jge
push
movsl
sub
jb
ja
out
jbe
bound
inc
pop
xchg
int3
xchg
dec
mov
dec
mov
cmp
out
adc
out
xchg
mov
fcoms
mov
xor
data16
sbb
out
mov
outsb
pop
mov
xchg
aaa
push
push
pop
add
mov
mov
push
cltd
lea
push
stc
pop
into
xchg
mov
adc
push
in
aam
adc
lock
mov
mov
pop
xor
nop
cmp
fwait
inc
push
push
jge
orb
dec
jo
sbb
pop
mov
lods
adc
cs
fwait
ds
adc
pop
pop
mov
pop
cmp
call
cmp
sahf
inc
cmpsl
gs
sbb
jno
push
xchg
ss
pop
inc
hlt
pop
mov
mov
mov
push
ja
test
pop
lret
jne
pop
push
leave
push
movsl
enter
adc
sqrtps
outsl
pop
pop
add
and
orb
bound
fidivs
mov
add
lods
push
dec
psrlw
stos
xor
test
jmp
cmp
jg
xchg
cmp
push
bound
xchg
aaa
cwtl
bound
test
jne
and
adc
fcomip
imulb
inc
call
mov
cwtl
mov
stos
or
iret
jbe
push
sbb
jle
lahf
aas
inc
push
mov
inc
cltd
inc
pop
aas
xchg
dec
bound
and
sbb
pop
inc
pop
and
rorl
js
sbb
outsl
mov
push
js
push
outsb
jmp
roll
mov
cmpsl
roll
bound
xor
jnp
push
icebp
in
les
dec
or
lahf
rcrl
or
insl
jmp
lcall
arpl
mov
jnp
xchg
cltd
aaa
rorb
add
sbb
push
sahf
cli
push
pop
enter
xchg
aaa
mov
pop
neg
stos
ret
add
sbb
test
jge
lock
lret
imul
xorl
enter
lock
gs
stos
sub
imul
xorb
mov
repnz
in
mov
pop
sti
pop
dec
pop
clc
pop
subl
sub
push
add
and
nop
mov
daa
mov
stos
ret
mov
mov
pop
mov
or
jmp
mov
mov
or
push
stos
lock
and
fcomps
xchg
cs
push
shl
mov
rolb
aaa
pop
clc
add
xchg
inc
ficompl
cmp
inc
sarl
inc
loopne
mov
mov
mov
push
ret
xchg
inc
pop
mov
addps
add
xchg
mov
sub
cmp
sbb
sahf
inc
jmp
cli
aam
sub
fs
xlat
dec
dec
adc
ss
add
xor
loop
repz
pop
hlt
js
sbb
dec
adc
mov
test
dec
addr16
bound
lock
sbb
clc
rorl
and
aam
add
das
mov
dec
filds
and
or
pop
xor
aad
dec
jl
mov
mov
mov
push
sub
push
pop
add
daa
aad
sarl
or
lret
imul
jb
push
sub
loope
faddl
sub
or
cmc
cmp
inc
out
in
xchg
imul
outsb
pop
sub
data16
add
sub
or
out
or
sbb
dec
jmp
mov
cmpsl
sub
jl
fldl
scas
and
shll
pop
lret
jle
mov
sub
mov
movsb
daa
out
push
std
push
hlt
fiaddl
clc
mov
negb
xchg
jle
fsubs
xor
and
xchg
adc
fisubs
mov
sti
into
fbld
adc
push
stc
addb
dec
fdivs
in
orl
jae
scas
dec
push
cld
add
adcl
inc
int3
nop
lret
adc
cld
pusha
push
imul
pop
jmp
ja
addr16
xchg
inc
arpl
cmp
ret
mov
cs
mov
sahf
pop
add
lret
mov
mov
lea
cmp
fadd
lea
movsb
outsl
lock
lock
or
push
scas
pop
loopne
jae
into
nop
sarl
adc
mov
rorb
movsl
jno
or
or
scas
pop
loopne
hlt
mov
push
std
mov
rorb
and
pop
adc
dec
mov
loopne
mov
rolb
and
or
pop
stc
xchg
adc
loope
mov
dec
cld
sbb
sub
gs
xor
test
fdivs
shl
push
add
push
daa
mov
int3
pop
rorb
ror
mov
mov
cmp
in
and
mov
repz
mov
or
adcb
push
test
lds
and
pop
mov
lods
and
push
lcall
push
scas
xchg
dec
or
fnsave
and
outsl
call
xchg
std
inc
adc
leave
cmpsl
rclb
clc
pop
xchg
or
mov
jge
lcall
sub
mov
in
lea
clc
jo
in
cmp
mov
push
mov
sbb
stos
hlt
push
push
idivl
sahf
inc
jae
add
mov
mov
mov
ficompl
xor
data16
das
pop
mov
and
mov
ja
mov
and
sarb
dec
test
pop
add
push
fldenv
lods
xchg
xchg
js
xchg
cmp
outsb
dec
adc
sub
pop
adc
imul
pop
mov
xor
push
orb
xor
jp
add
shrb
or
jns
rorl
adc
mov
adc
add
inc
add
int
xchg
cmp
or
fbstp
cmpsb
ss
inc
jle
les
inc
adc
pop
mov
inc
je
imul
mov
mov
loop
dec
scas
xor
adc
sbb
sbb
pop
clc
mov
movsl
fistpll
pop
mov
ret
cmp
roll
inc
adc
push
out
imul
mov
add
lock
pusha
enter
push
leave
dec
xchg
mov
cwtl
fidivrs
jg
out
orl
hlt
mov
loopne
xchg
je
lret
mov
fcoml
adcl
dec
or
mulb
jo
mov
mov
cwtl
insb
call
inc
insb
mov
ljmp
mov
dec
outsl
sbb
jg
jno
or
test
mov
xor
push
outsl
push
test
xchg
cmp
nop
aaa
call
cli
leave
nop
jae
flds
mov
lods
add
push
jmp
xor
fwait
lea
ret
lret
mov
scas
outsb
repz
test
pop
adc
adc
dec
dec
adc
pop
push
xor
pop
rcll
pop
add
lods
mov
test
leave
xchg
jecxz
mov
xor
and
mov
lahf
jmp
cltd
pop
push
cmp
sub
daa
cmp
pop
xor
pushf
sbb
mov
je
sbb
popf
das
jbe
adc
aaa
push
add
and
data16
hlt
sbb
inc
js
pusha
scas
cltd
jp
mov
cld
pop
mov
js
das
stos
call
adc
pop
imul
inc
xchg
inc
in
mov
ss
cmp
cwtl
movsl
and
retw
xchg
jl
sbb
iret
in
pop
sbb
das
ja
loop
sti
push
adc
aaa
mov
pop
sahf
out
sub
xchg
jg
clc
mov
ds
xchg
jg
ret
cmpsb
push
clc
rclb
sahf
inc
dec
add
ljmp
xchg
inc
aas
mov
enter
add
lds
movl
add
jle
arpl
ror
xchg
mov
mov
dec
or
or
fnstsw
inc
mov
call
inc
loop
cmc
mov
push
int
mov
negb
lods
xor
call
jo
ss
sub
data16
push
orb
sahf
inc
adc
pop
sbb
negb
dec
lock
ds
out
jae
sub
mov
mov
pop
add
mov
pop
cli
mov
aas
jmp
in
lock
mov
orb
push
ret
test
je
or
pop
into
and
and
mov
out
add
aas
push
filds
and
je
inc
jno
jbe
psrlq
data16
pushl
ja
jle
pop
add
paddd
lcall
lods
xor
decb
out
je
push
sbb
out
xchg
pop
mov
cmp
jns
sub
out
push
out
add
xor
pop
add
bound
xor
ja
adcb
lock
push
pushf
aas
xor
inc
pop
jbe
repnz
adc
cmp
push
dec
or
mov
push
add
fsubs
pop
clc
pop
int3
shr
imul
adc
nop
pushf
dec
or
roll
pop
jae
lahf
ss
xchg
sbb
push
xchg
test
andl
push
fdivrl
push
adc
xchg
add
or
insl
stos
lds
filds
movsb
js
insb
jge
dec
adc
insb
flds
es
sbb
dec
test
xchg
adc
dec
je
mov
mov
mov
and
insb
faddl
or
sbb
dec
fistpll
sbb
mov
cli
pop
decb
std
or
fnsave
out
test
stos
in
test
mov
adc
mov
lods
lret
scas
dec
mov
mov
jns
push
jns
stos
movsb
daa
cmp
jne
xor
ret
lea
dec
adc
xor
sbb
mov
scas
repz
and
ss
ret
cmp
cs
pop
mov
lock
or
and
adc
sub
out
and
pusha
lock
test
repnz
fs
and
dec
or
enter
out
imul
add
sub
cmp
adc
mov
lret
mov
cmc
popa
inc
push
push
mov
fiadds
aas
xchg
test
pop
and
in
add
adc
stc
nop
je
mov
jmp
stos
fcomi
sub
push
les
mov
dec
ljmp
mov
dec
js
mov
cmp
leave
and
push
pop
xchg
mov
adc
lahf
dec
mov
push
popf
sub
iret
jmp
cli
in
loope
push
push
jg
out
jo
push
scas
xchg
mov
out
les
movsb
int
push
sarb
int
fmuls
mov
add
mov
add
out
jne
jae
negb
mov
cmp
enter
lock
pop
push
push
push
add
mov
nop
add
mov
mov
movsl
and
push
js
stos
pop
repnz
fdivl
pushl
or
pop
and
loopne
leave
jb
out
sbb
jp
fimuls
call
cli
jmp
or
or
jbe
xor
pushf
inc
loop
jmp
hlt
jns
mov
sti
pusha
shlb
fadds
cmp
dec
push
jno
faddl
jmp
js
std
push
push
fisttpll
int
and
lds
rorl
mov
adcb
or
in
outsb
loop
mull
jge
xor
xchg
or
lds
movsb
imul
addb
mov
add
sbb
xchg
dec
fs
mov
sbb
lea
mov
dec
adc
aad
cwtl
inc
add
jns
sbb
xchg
movsl
cwtl
rclb
roll
sbb
pop
add
dec
mov
mov
adcl
pop
pop
clc
dec
jae
inc
dec
xchg
and
pop
xchg
mov
fildl
lods
sbb
hlt
addr16
aas
lahf
jge
xlat
xlat
lds
pop
or
repnz
mov
iret
xor
jns
popa
sub
fistpll
lret
std
pop
inc
dec
dec
or
mov
std
pop
pop
sub
push
add
fisubl
or
icebp
mov
and
jle
inc
push
jbe
sbb
cmp
lret
fisubrs
ljmp
in
mov
jge
xchg
aaa
fnsave
mov
clc
inc
jmp
sub
fisubl
mov
sub
shlb
sub
jo
insl
pop
xchg
cmp
adc
inc
mov
cs
push
and
sub
sbb
and
xlat
dec
sarb
add
roll
and
cmp
test
gs
push
out
sub
jne
inc
adc
lret
xchg
sub
dec
lods
xchg
mov
ljmp
stos
sub
hlt
add
dec
sub
or
inc
jl
dec
imul
mov
pop
outsb
shlb
dec
dec
movsl
roll
dec
pop
xchg
aas
clc
xchg
pop
aam
jecxz
mov
out
aad
pop
cmp
sub
lcall
sbb
insb
jo
mov
push
je
inc
dec
jne
adc
xchg
mov
inc
sub
data16
sahf
xor
aad
lea
decb
jnp
cmp
icebp
sub
push
add
inc
jno
xor
aam
dec
sbb
arpl
xlat
mov
mov
popf
cmp
lods
fistpll
in
test
mov
mov
cld
push
mov
movsb
push
add
push
xchg
inc
xor
mov
shrb
das
xor
outsb
jmp
push
subb
lea
ret
pop
sahf
cld
pop
push
test
imul
mov
adc
dec
pop
stc
inc
add
sub
lahf
xor
inc
lds
int
lcall
fsubr
je
fwait
or
aad
cmp
das
cs
inc
aad
fs
xlat
inc
lods
cmp
pop
add
sbb
dec
notl
mov
jecxz
fistpl
les
pop
insb
notb
jo
adc
mov
adc
shrl
sbb
cmpsl
xorb
mov
jl
jecxz
fldcw
xchg
aas
lds
lret
lcall
rorl
inc
adc
dec
fbld
xor
jmp
xor
mov
pushl
stc
pusha
div
call
stos
mov
test
push
jns
jg
sbb
inc
or
cmpsb
sub
lcall
mov
xor
xchg
dec
pop
add
aad
push
sub
xor
mov
lods
add
cltd
mov
mov
lods
mov
jmp
loop
inc
mov
xchg
mulb
dec
adc
jmp
or
fyl2x
fs
jb
ss
dec
jo
mov
xchg
fs
hlt
sbb
in
jbe
dec
loope
xchg
push
cli
int
inc
or
sbb
pushf
inc
add
ret
mov
pop
in
outsl
insl
mov
push
clc
clc
in
cmp
notl
inc
or
or
add
sbb
mov
add
dec
call
out
jo
adc
sbb
inc
lea
xor
into
mov
test
lods
sbb
sahf
sbb
and
enter
or
push
imul
sub
pop
jge
xchg
data16
call
xor
xor
lds
jb
lods
sub
and
out
xor
cmp
pop
mov
es
cmp
or
sbb
test
mov
or
mov
mov
mov
out
insl
jns
dec
jecxz
push
add
gs
outsb
push
jns
adc
mov
pusha
mov
das
out
popa
mov
std
fs
lods
in
jae
xchg
in
adc
roll
aad
out
loopne
xlat
jge
repnz
ds
adc
shrl
lcall
fsts
mov
js
mov
mov
or
loopne
lret
pop
inc
insl
icebp
pushf
dec
callw
inc
pop
xchg
dec
or
ret
cmp
scas
sub
repz
iret
mov
mov
jno
sbb
jmp
sbb
push
or
rorb
push
arpl
cmp
xchg
je
cmp
ret
mov
scas
sbb
push
push
sti
dec
test
lret
in
lahf
jns
adc
or
jbe
jmp
sub
cmp
notb
sub
cmp
jnp
sub
lret
xchg
rcl
cmp
cld
popa
out
jp
or
jle
mov
xchg
imul
cmp
push
and
cmp
lcall
in
stos
sub
ret
les
adcl
mov
fdiv
out
xor
pop
into
in
out
push
pop
sarb
daa
insb
ljmp
dec
loop
lds
add
mov
sarl
imul
dec
lea
in
jae
movsl
add
in
cmp
mov
mov
inc
pop
mov
jl
adc
test
das
scas
fists
mov
or
xchg
sti
xor
mov
cmp
mov
add
test
mov
cmp
shlb
dec
sub
mov
cmc
jmp
daa
sarb
add
daa
pop
add
inc
or
insb
adc
mov
push
fiadds
popf
pop
sarl
leave
lock
inc
scas
notl
cwtl
out
jno
mov
adc
lods
insl
in
mov
cmpsl
push
add
or
mov
inc
fdivs
or
pop
imul
mov
sub
mov
jnp
adc
shrb
dec
sub
mov
adc
push
mov
std
rclb
push
cltd
cmp
repz
push
repnz
pusha
repz
out
mov
arpl
pop
and
pop
sub
sysenter
scas
jnp
es
mov
fwait
cmp
aaa
inc
adc
cmc
mov
xchg
cs
xchg
pop
add
or
add
adc
push
mov
ss
cltd
inc
fwait
and
ret
lea
push
add
inc
mov
cld
popa
insl
mov
or
shll
fbld
mov
gs
xchg
inc
je
jb
shrl
push
hlt
push
lret
bound
push
mov
jmp
add
or
cmp
adc
sub
mov
stos
push
movsb
sbb
sbb
pop
push
lcall
pop
jecxz
pushf
aas
repz
lods
jmp
fisubs
rolb
sbb
out
je
dec
or
jo
insb
out
insl
jmp
fdivs
movl
or
and
mov
mov
or
aaa
add
push
mov
lods
aam
inc
mov
mov
in
sbb
or
mov
clc
fs
lcall
call
aaa
cwtl
sti
dec
cmp
or
sbb
loope
fldl
leave
fwait
popa
in
cmp
sub
lea
pop
pop
jmp
pop
imull
test
repnz
cmp
outsl
pop
fdivrl
jbe
push
and
inc
cmp
ljmp
mov
insl
and
push
shll
inc
jo
fbld
hlt
pop
stos
sub
jmp
lock
in
and
ljmp
pop
testl
shlb
xchg
mov
mov
shlb
sbb
cs
ret
inc
jae
and
out
mov
mov
push
pop
mov
out
bound
push
divl
add
jnp
imul
es
scas
arpl
mov
stos
pop
add
and
jg
lock
jbe
out
jae
pushaw
ljmp
inc
or
or
pop
inc
or
xor
mov
enter
flds
jno
adc
test
inc
lcall
push
push
dec
lods
sub
imul
mov
cmpsb
lea
insl
pop
sti
sbb
mov
lods
dec
std
pop
pop
mov
js
sub
sub
fwait
push
or
add
clc
pop
mov
test
sbb
cmp
mov
outsb
xchg
jg
movsl
jb
xchg
movsb
mov
sbb
fnstenv
inc
pop
movsl
cmp
adc
lahf
cmp
jns
rcr
subl
repz
cmp
in
mov
xchg
push
xchg
sub
push
lock
jmp
mov
mov
fmul
jg
adc
sbb
gs
or
aad
mov
imul
es
cwtl
pop
xor
fmuls
fwait
dec
add
dec
or
fwait
cmp
pusha
notb
sub
movsl
repnz
mov
mov
xchg
jg
jp
out
push
mov
pop
test
ret
inc
test
movsl
push
xchg
ds
pop
mov
mov
pop
jg
mov
mov
mov
addr16
cltd
xor
loopne
stos
mov
mul
fistpl
pop
xchg
adc
popf
insb
lock
mov
stos
cmp
mov
shl
insl
or
popa
ljmp
sar
sbb
pop
int3
rorb
cmpsl
adc
xchg
rorl
out
mov
inc
or
loope
and
stos
sbb
or
xchg
cmp
mov
js
mov
aas
inc
lds
into
dec
cmpsl
sub
push
mov
push
cmp
ret
arpl
mov
stos
dec
adc
fsubl
cmp
and
out
pop
xchg
inc
lcall
adc
jmp
jle
loopne
dec
or
std
cmp
cmp
push
ret
sbb
mulb
inc
in
sub
mov
pop
rcrb
test
stos
cmc
popa
xchg
pop
outsb
call
ljmp
jmp
inc
or
inc
xchg
xchg
mov
cmp
inc
or
dec
in
jl
ret
lcall
out
jle
mov
add
or
call
icebp
sbb
js
lret
sbb
lret
mov
test
in
jo
pop
xchg
mov
out
pop
and
into
fs
mov
cltd
mov
movsb
mov
cs
xor
mov
push
sub
fidivrs
pusha
scas
sub
inc
jl
iret
jecxz
adc
loopne
or
push
xchg
aas
rcll
insb
add
pop
mulb
lds
lods
push
loope
push
cli
cmp
sarl
sub
fcomip
fwait
aas
insb
or
inc
or
xchg
cmp
xchg
push
rolb
pop
mov
cmpsl
jmp
mov
sbb
pop
mov
mov
mov
or
xchg
and
jge
int
out
jle
jae
add
ret
mov
xchg
inc
fbstp
pop
cli
clc
sub
xchg
sub
xor
pop
add
in
jne
jnp
xchg
imul
cld
scas
inc
cltd
sbb
jge
shlb
cld
test
pop
les
fcoml
cmp
ss
cltd
xchg
test
xchg
sub
jo
mov
mov
pop
call
fldl
shl
adc
pop
int3
xchg
loop
or
and
int
in
aaa
jnp
lock
jle
sub
lods
sub
xor
add
sbb
fcmovbe
xchg
inc
xor
imul
sub
push
push
mov
imul
icebp
popa
popa
cmp
rcrb
cmpsl
xor
fidivl
sbb
out
xchg
inc
adc
xchg
int
lahf
mov
sbb
loopne
pop
icebp
bound
sbb
fistpl
add
std
lods
int
das
icebp
mov
cmp
insb
out
adc
pop
add
adc
jp
clc
imul
cmp
fcmovne
adc
mov
out
cmpsb
lods
xor
pop
mov
fnstcw
inc
mov
xor
pop
stc
lcall
insl
dec
addb
in
mov
xchg
cmp
xchg
scas
xor
cmp
inc
lds
add
mov
add
sub
add
daa
fwait
cmp
add
pop
push
lock
push
xchg
aaa
fwait
stos
inc
adc
aaa
rorb
outsl
and
pop
xor
dec
rcpps
cltd
inc
lock
movsb
out
ret
mov
ret
dec
push
divl
push
test
xchg
mov
daa
mov
cmpsb
sti
pop
dec
push
mov
in
cmpsb
imul
xchg
out
call
testb
iret
mov
jmp
pop
aad
fsubr
mov
fs
repnz
and
in
adcl
lods
cmpl
ss
mov
pop
xchg
shll
stos
das
push
jl
sub
adc
sbb
std
push
push
outsl
repnz
test
repz
cs
pusha
pop
mov
mov
xchg
ds
popa
jmp
sbb
ja
pop
cli
and
out
repnz
out
pop
nop
cmp
xor
mov
cmp
mov
cmp
dec
cmc
and
test
shrb
sar
arpl
mov
clc
jbe
dec
or
arpl
addb
test
mov
xor
xor
les
movsl
cli
push
stos
inc
roll
and
mov
jge
aam
je
cld
xchg
adc
push
std
mov
scas
lds
lret
add
leave
xchg
fsubrl
and
or
add
dec
adc
movsl
cmp
push
mov
jo
xchg
and
in
hlt
pop
mov
xor
xlat
jle
mov
or
ljmp
or
cli
mov
pushf
cmp
shll
mov
push
out
idiv
mov
sti
sbb
repz
lret
push
aad
push
mov
ds
mov
je
int3
xchg
movsb
data16
inc
idivb
clc
fistpll
mov
jl
pop
push
outsw
xchg
cmp
lods
xor
incl
and
jle
das
dec
out
jmp
jne
cmpsl
ss
arpl
pop
pop
sbb
mulb
addr16
add
pusha
ljmp
sarl
jp
pop
add
mov
lods
or
scas
das
mov
sub
mov
mov
sbb
adc
sahf
push
dec
cmpsl
xor
mov
andl
and
push
ret
rclb
sti
adc
add
stos
sub
inc
lcall
or
adc
pop
cwtl
xor
leave
jp
push
sub
pop
add
cmp
rcll
sbb
nop
inc
dec
adc
out
jb
or
popa
push
fisubrs
mov
test
insb
gs
pop
push
jne
jmp
pop
test
mov
test
imul
push
aas
cltd
xchg
insl
inc
cmpps
into
sbb
xchg
inc
dec
adcl
neg
jae
xor
pop
inc
cmp
pop
fcoms
pop
dec
std
fdivs
sub
or
cs
cli
je
test
inc
or
sub
test
aaa
cmp
notl
sub
and
clc
test
push
xchg
push
add
mov
jb
jns
fwait
int
or
jae
lods
pop
jp
fidivl
push
add
or
xchg
movsb
aad
enter
mov
cmpsl
lock
pop
insl
ljmp
sub
lret
dec
loope
roll
add
add
icebp
or
xor
ss
mov
mov
push
movsl
mov
lods
mov
in
jbe
movsb
or
repnz
mov
lret
and
jno
ja
daa
test
leave
dec
into
je
adc
sbb
lds
xchg
aad
mov
std
int
and
les
xchg
mov
mov
outsb
in
adc
dec
call
icebp
in
dec
pop
negl
pusha
icebp
xchg
sqrtps
or
out
jl
jne
jp
gs
in
sbb
xchg
mov
mov
bswap
nop
sti
pushw
inc
adc
mov
stc
sbb
inc
xchg
inc
sbb
push
int
mov
push
jmp
mov
leave
out
jbe
sbb
inc
cltd
lea
outsl
int
adc
mov
xchg
shll
fnsave
movsb
cmc
pop
mov
mov
imul
xlat
outsb
cmpsb
dec
jb
push
mov
pop
mov
xchg
inc
test
in
sahf
fcmovb
xchg
pop
les
sub
out
add
mov
fucomp
jno
mov
popf
sbb
or
hlt
dec
movsl
sub
mov
icebp
pop
js
cwtl
inc
add
pushf
cmp
jmp
adc
pop
dec
or
arpl
mov
jl
je
push
inc
push
movsb
mov
iret
sub
lds
hlt
cld
rcll
pop
std
adc
js
shl
xor
repnz
cmp
icebp
lods
inc
add
iret
push
jnp
ja
mov
js
dec
dec
or
js
xchg
lret
std
sbb
clc
popl
test
into
mov
pop
mov
rcrl
jg
push
sti
inc
outsl
in
xchg
repz
outsl
add
and
cmpsl
hlt
aaa
test
vshufps
push
sbb
pop
mov
int3
mov
adc
repz
jb
in
inc
adc
push
jno
inc
rolb
inc
mov
mov
in
jmp
imulb
lods
inc
dec
call
and
mov
cltd
data16
pop
mov
mov
ljmp
cmp
lcall
lahf
mov
stos
arpl
aas
lahf
mov
rorb
test
dec
add
jp
xchg
fistpll
or
and
sbb
loop
sbb
clc
and
int3
xchg
icebp
xor
into
roll
or
mov
mov
or
iret
into
nop
or
js
sbb
pop
clc
xchg
jle
push
in
or
mov
clc
lock
pop
push
jno
loopne
loope
lods
sub
inc
pop
js
and
fs
aad
inc
or
jle
jg
je
xchg
cmpsl
xor
fsts
test
add
cmp
adc
cwtl
pusha
inc
and
xor
mov
outsb
pusha
mov
mov
addr16
pop
lret
and
dec
mov
scas
and
orb
jb
lcall
mov
xchg
lcall
aas
mov
jns
adc
adc
dec
pop
incl
push
lcall
xor
aam
pop
sahf
xor
int
aas
add
mov
ds
push
andb
jl
outsb
hlt
pusha
adc
jge
enter
rcll
aam
mov
mov
adc
mov
shrl
arpl
mov
or
sbb
push
ja
adc
test
mov
imul
adcl
and
ds
cmp
and
aaa
fwait
cmp
clc
and
mull
push
add
xchg
enter
mov
stos
enter
push
push
dec
or
mov
andl
pop
jp
cmpb
sbb
jns
jns
lcall
xorl
aam
jnp
into
mov
sub
roll
add
roll
fnstsw
int3
xchg
and
or
cmp
sbb
or
push
scas
sub
cs
cmp
dec
lock
and
xor
xor
in
inc
push
out
mov
addl
pop
and
sbb
jb
mov
roll
mov
xchg
das
mov
call
lods
xor
sbb
mov
mov
mov
fldl
or
cmp
lret
jae
xor
adc
lods
sub
sbb
adc
lret
sub
and
pop
add
pop
pop
pop
xor
mov
push
xor
mov
add
pusha
fnstsw
push
and
cmp
sub
lds
enter
cmp
lods
lahf
ret
pop
push
cld
flds
sarb
sbb
mov
jb
loope
push
stc
loop
inc
pop
mov
sbb
mov
test
imul
orl
xor
repz
lds
push
repnz
imul
jecxz
or
mov
mov
scas
push
idivl
push
stc
fs
lcall
call
mov
jl
pop
fnstenv
mov
lcall
and
divl
aas
arpl
xor
dec
test
mov
push
jmp
or
cltd
xor
es
jl
dec
scas
arpl
insb
add
repz
cmpl
das
xabort
es
dec
add
xor
add
mov
sbbl
inc
clc
lahf
sub
pop
xchg
dec
mov
jl
sahf
or
cmp
stc
nop
and
mov
jne
inc
xlat
loope
xor
divb
call
jge
xchg
jno
insb
test
xor
lea
push
sub
dec
xlat
outsb
xorl
mov
xchg
cmpb
pop
sahf
or
xor
jns
and
out
jg
fidivl
shlb
add
and
jg
push
xchg
test
xor
out
pop
sbb
mov
jl
push
fidivl
mov
lcall
and
divb
aas
popa
pop
xor
hlt
mov
push
ljmp
jno
out
daa
cltd
xor
nop
daa
inc
jp
dec
lods
bound
insb
pushl
hlt
mov
jmp
cmp
test
mov
xor
imulb
dec
out
incl
xor
add
push
arpl
cmpb
sbb
adc
sub
xchg
dec
mov
jge
pushf
or
nop
and
mov
jae
inc
fsub
xchg
xor
divl
out
ljmp
jno
push
pushf
xor
mov
push
sub
lods
inc
adc
outsl
xorb
bound
roll
adc
and
inc
xor
js
and
out
jge
fisubrl
shlb
add
mov
jno
jg
push
xchg
stos
inc
les
xor
in
pop
pop
leave
mov
jge
sbb
jno
mov
mov
frstor
mov
hlt
das
inc
xlat
pusha
adc
pop
cmc
mov
push
ljmp
jno
in
es
jns
dec
stos
pusha
scas
inc
xchg
int3
insl
mov
arpl
pop
cmc
mov
jmp
cmp
stos
mov
les
enter
mov
inc
std
inc
fsubrl
imul
cmpb
rorl
stos
inc
inc
hlt
lahf
ss
pusha
xchg
inc
mov
jle
lcall
cmp
stc
nop
pop
pop
and
lea
scas
jno
inc
xchg
xor
clc
xor
push
ljmp
jno
push
mov
push
sub
lods
inc
cmovge
jo
xor
bound
testl
and
pop
sahf
or
lret
and
call
lods
ljmp
cmp
adcb
nop
stos
inc
ret
xor
adc
ss
push
mov
nop
lahf
mov
repnz
ss
jg
divb
sarl
add
fwait
xor
xchg
sub
pop
scas
inc
nop
lret
cld
mov
fs
testb
jo
stos
mov
ret
repz
push
call
sub
outsl
push
cltd
dec
fs
jle
lea
lahf
sbbb
or
mov
popa
xchg
inc
mov
jg
cwtl
fdivl
pop
pop
sahf
cmp
cli
xchg
sbb
sbb
fstl
popa
clc
das
jecxz
jmp
push
jg
xorl
xor
mov
push
sub
scas
inc
push
dec
fnstenv
das
int3
arpl
testl
and
or
jne
es
jp
fldt
int
stc
cmp
sbb
stos
inc
shlb
movsb
loope
pusha
adc
mov
jle
sbb
jae
xchg
xchg
sahf
fldenv
mov
icebp
sub
pop
adc
into
inc
jge
imulb
iret
jge
add
fwait
xor
sub
mov
cli
mov
gs
testb
outsb
adc
lahf
push
or
icebp
test
rcr
push
call
sub
push
xchg
dec
gs
jge
lea
sahf
sbbl
or
and
popa
xchg
inc
mov
jg
xchg
fnsave
pop
sahf
ss
mov
inc
fcmovu
aaa
into
sar
clc
sub
dec
jg
xorl
xor
xchg
push
daa
fldt
jo
cs
pusha
pushf
testl
and
or
jae
daa
mov
lds
fsubrl
int3
arpl
std
cmp
sbb
stos
inc
mov
pusha
adc
mov
jle
sbb
je
test
xchg
popf
xlat
and
lock
pop
adc
iret
inc
jnp
imulb
jge
pushl
pushf
xor
xchg
sub
jae
push
movsl
pop
mov
fsubrs
scas
iret
data16
testl
popf
push
or
test
sub
xlat
adc
inc
clc
dec
fildll
arpl
xchg
dec
data16
jnp
mov
into
or
cmp
pop
lret
bound
mov
and
fidivs
add
lahf
xor
cld
xchg
sbb
mov
insb
test
fcmovnu
lea
iret
mov
loopne
in
adc
pop
jg
je
mov
xchg
sub
fnstenv
jno
sub
gs
lcall
mov
push
lods
push
rorl
mov
jno
sub
ret
ja
lret
sti
aaa
mov
dec
mov
mov
ret
mov
jg
push
fidivs
addl
mov
cld
xchg
fwait
aad
mov
out
daa
inc
fstps
cmp
inc
jns
imull
lret
jle
std
mov
or
push
popf
xor
push
xchg
sub
jno
push
mov
fnstenv
lods
shlb
pop
clc
test
imul
pushf
push
or
cmpl
rcl
push
ljmp
jno
xchg
dec
data16
jns
es
test
int3
or
cmp
pop
int3
arpl
scas
ljmp
add
mov
sbb
mov
push
inc
mov
iret
mov
ficoms
cmovl
or
lahf
roll
mov
inc
or
jb
sub
gs
cltd
stc
nop
lret
jge
subl
or
jo
sub
ret
frstor
enter
ss
es
mov
cmp
sarl
popa
adc
jne
addb
mov
cld
xchg
cltd
aam
mov
in
es
ficoml
cmp
js,pt
clc
test
lret
cld
mov
or
sbb
xchg
sub
jo
push
mov
ret
fidivl
stos
shlb
push
stc
nop
dec
std
out
test
push
scas
fwait
push
or
cmpl
jmp
hlt
dec
fbld
inc
data16
ja
nop
daa
out
test
lret
inc
cmp
mov
lea
rclb
jmp
loopne
fidivs
add
mov
push
push
sub
push
mov
iret
mov
fcoml
or
je,pn
pusha
sahf
mov
sub
aad
inc
pop
inc
fdivl
sub
gs
cwtl
cli
xchg
lret
subl
or
outsl
and
mov
shll
movsb
loop
or
fs
divl
sbbl
mov
cmp
mov
ljmp
orl
xchg
xchg
shll
mov
ljmp
sarb
stc
test
push
out
mov
adcb
scas
jne
loope
lahf
ss
add
mov
ret
hlt
test
ficoml
cli
xchg
inc
sti
out
test
dec
or
jg
ss
mov
push
in
ds
fbld
pusha
jae
xchg
inc
data16
jne
xchg
sub
xchg
test
enter
cmp
mov
mov
push
outsb
lods
in
sbb
fidivs
add
mov
adc
sub
test
inc
xchg
iret
mov
ficoml
or
sbb
or
mov
sub
shll
je
es
gs
xchg
sti
xchg
leave
jns
subl
or
insl
pop
sub
push
mov
mov
loopne
or
les
cmc
xor
sbb
scas
inc
mov
fxch
or
jmp
pop
adc
jbe
jg
mov
xchg
shll
mov
call
or
sarl
jne
cli
cmpsb
pop
pop
out
mov
sbbl
fistps
mov
sub
insl
mov
dec
test
fdivl
cmpsb
shrl
adc
xchg
inc
stc
out
xchg
sbb
or
into
ljmp
in
cmp
dec
loopne
pop
je
nop
inc
addr16
jae
xchg
sub
xchg
test
add
dec
ss
cmp
pop
iret
data16
rcrl
in
test
fbstp
decb
mov
adc
rolb
inc
xchg
shlb
fsts
or
sbb
jne
pop
fwait
mov
sub
shlb
je
and
sti
xchg
js
test
int3
or
imul
rorl
in
mov
fidivs
adc
data16
hlt
xor
sbb
test
cmp
mov
jmp
pop
pavgb
jge
mov
xchg
iret
daa
mov
out
inc
fcoml
cmp
cmp
cli
movsb
pop
pop
lock
sbbl
ficomps
mov
sub
insb
mov
dec
test
shrl
adc
xchg
inc
clc
out
xchg
sbb
jl
aaa
into
jmp
or
cmp
dec
loopne
pop
je
popl
jb
xchg
sub
xchg
test
out
cmp
push
iret
mov
rcrl
in
test
mov
jbe
std
or
adc
rolb
inc
test
shlb
fcoms
or
sbb
jne
pop
lcall
scas
in
mov
dec
add
je
and
push
xchg
sti
xchg
ja
test
lret
or
push
sub
dec
mov
mov
fnsave
cmpps
xor
sbb
subl
cltd
int
or
jmp
pop
push
loopne
inc
jl
mov
xchg
into
daa
mov
in
inc
fstl
cmp
aaa
jb
sti
mov
les
push
fcoml
mov
sub
imul
cmpb
push
inc
imul
xchg
sbb
jp
cmp
call
or
cmp
dec
loopne
pop
jne
mov
addr16
jo
xchg
sub
xchg
test
add
cmp
push
shlb
aaa
rcrl
out
test
mov
jbe
cld
or
sub
dec
sub
xorb
mov
mov
cmp
mov
data16
and
push
out
pop
inc
test
js
jne
pop
cltd
mov
sub
iret
mov
add
jne
and
push
xchg
cld
xchg
lds
test
leave
or
imul
push
in
mov
fdivl
shlb
das
xchg
sub
test
xorb
xchg
aad
gs
mov
in
sbbl
ja
jnp
mov
xchg
int
mov
jecxz
inc
ficoms
cmp
xor
push
pop
lock
sbbl
test
push
ficoml
mov
sub
push
push
pushf
dec
mov
cmpb
push
inc
hlt
out
xchg
sbb
js
cmp
out
sub
lret
out
cmp
dec
loopne
pop
jbe
lea
xchg
sub
popl
dec
xor
mov
push
addr16
xchg
mov
jbe
sti
or
xchg
push
dec
sub
jg
sbb
roll
addr16
and
push
out
add
es
pop
cwtl
mov
sub
int
dec
fbstp
and
addr16
xchg
std
xchg
ret
jae
test
or
clc
ss
sbb
ret
push
out
mov
fidivl
or
addr16
out
sub
xchg
mov
movsb
cmp
mov
pop
jmp
or
js
jns
mov
lret
sub
cld
mov
mov
sbb
cmp
xor
std
mov
roll
adc
cmp
xchg
sub
lcall
jbe
lahf
shrb
push
xchg
inc
xacquire
sbb
xchg
inc
push
movsl
jbe
cmp
in
sub
enter
aaa
jmp
ja
mov
push
sub
lea
dec
xor
movsb
cmp
push
shrl
xor
pop
data16
out
xchg
xchg
ja
stc
or
xchg
or
cs
pop
sahf
dec
loopne
cmpb
mov
addr16
and
pop
out
add
test
xchg
mov
sub
int3
mov
cmp
jbe
pop
shrl
std
xchg
shll
movsb
loop
mov
or
shlb
sub
dec
xchg
mov
dec
loope
fdivs
or
xchg
sub
xchg
inc
jle
dec
mov
movsl
cmp
ror
add
in
test
loop
cmp
mov
leave
sub
cli
scas
push
mov
sbb
dec
add
std
sahf
push
pop
repnz
adc
adc
sub
pop
cwtl
dec
mov
jl
fbstp
popf
shrl
or
xchg
ds
mov
pusha
sbb
xchg
inc
je
cmp
jecxz
sub
lock
push
ja
mov
imul
fmull
dec
das
loopne
cmp
push
shrl
xor
pop
movsb
out
xchg
xchg
js
testl
ret
sbb
loopne
jg
shlb
rcrb
add
sbb
and
push
push
xchg
mov
sub
out
pop
sbb
mov
std
cmp
jbe
push
shrb
std
xchg
mov
loopne
mov
lds
movsl
divb
cmp
arpl
sub
out
mov
dec
loop
jne
or
sub
mov
inc
jl
dec
scas
bound
add
in
test
jp
jne
mov
sub
clc
scas
pop
mov
sbb
dec
add
aad
imul
push
pop
repz
adc
adc
das
sub
xchg
dec
mov
jl
fbstp
popf
aam
iret
or
xchg
cmp
repnz
pop
sbb
popl
cmpsl
je
cmp
loope
cs
pop
lock
dec
jecxz
push
ja
xchg
push
imul
pop
mov
loopne
cmp
xorl
out
xchg
xchg
jns
cmc
or
xchg
or
ret
push
mov
lcall
scas
in
addr16
sbb
aas
test
and
push
xchg
mov
sub
pop
lret
cld
cmp
jbe
sbb
std
xchg
mov
ficomps
mov
les
cmpsb
cmc
xor
shlb
lds
push
out
mov
dec
jecxz
aam
or
mov
xchg
sub
mov
inc
jp
dec
lods
popa
cmpsl
ds
int
pushw
test
in
cmp
mov
mov
sub
imulb
loopne
ds
push
fwait
push
pop
repz
cmp
cwtl
das
daa
arpl
pop
xchg
dec
mov
jp
loopne
call
or
xchg
cmp
repnz
pop
sbb
cmpsl
jb
cmp
loopne
cs
pop
icebp
xor
dec
jecxz
push
js
xchg
push
imul
mov
sub
cmpsb
cmp
xorb
pop
arpl
loop
mov
push
movsl
and
inc
sub
js
push
mov
cltd
dec
loope
jl
shrl
iret
pop
icebp
add
xchg
push
xchg
movsb
cmp
je
sub
push
enter
aaa
loopne
imul
xchg
mov
fstpl
push
ret
repz
cmp
pusha
adc
lds
pop
out
mov
dec
jecxz
shll
add
es
sub
mov
jns,pt
dec
stos
pop
cmpsl
ds
int3
shlb
mov
pop
in
out
xchg
in
aaa
jb
movsb
mov
les
ret
and
inc
cld
ds
imul
jg
xchg
rorb
movsl
cmp
repz
das
and
inc
mov
js
loope
out
aam
lret
or
xchg
cmp
repnz
pop
push
mov
aas
adc
ficoms
pop
icebp
xor
dec
jecxz
push
js
test
push
push
mov
dec
sub
cmpsb
cmp
jle
les
lahf
lock
and
mov
push
movsl
and
add
jbe
push
mov
xchg
dec
loope
jnp
shrl
pop
icebp
cmp
adc
movsb
cmp
jae
movsl
loope
pop
adc
mov
stc
xor
ja
sbb
imul
mov
ficompl
or
adc
pop
adc
movb
scas
gs
in
shlb
add
xchg
sub
mov
cmp
pop
test
nop
leave
shlb
mov
pop
jecxz
out
xchg
in
outsl
or
lcall
and
inc
sti
aas
sub
push
hlt
jle
xchg
rorl
movsl
cmp
repnz
xor
ret
pop
xchg
inc
mov
ja
loope
in
aad
lret
xchg
ss
mov
adc
fistl
pop
icebp
sub
dec
js
xorl
mov
mov
fsubl
imul
lock
and
mov
push
movsl
and
add
jae
pop
mov
xchg
dec
loope
jp
aam
out
call
int
repnz
cmp
adc
movsb
cmp
faddp
pop
adc
mov
clc
xor
ja
sbb
insb
dec
test
xchg
mov
repz
rclb
icebp
sub
rcrl
xor
inc
jnp
out
lods
fs
in
int
or
call
or
dec
movsl
pop
test
push
loope
lock
out
xor
push
movsl
popf
push
add
xchg
and
inc
stc
inc
xlat
sub
add
mov
push
call
or
xor
pop
les
inc
mov
jns
xchg
insl
enter
xor
hlt
mov
push
pop
mov
cmp
test
pop
repnz
dec
in
dec
jns
jg
insb
add
xchg
rolb
mov
and
inc
shrl
sub
icebp
mov
and
mov
push
aam
cltd
add
and
ret
js
aad
in
add
lret
pop
repz
aaa
xchg
imul
cltd
xor
les
js
pop
insl
dec
cmp
mov
hlt
mov
adc
pop
adc
enter
lock
bound
xchg
int3
ja
mov
add
pop
xchg
sub
cmp
dec
movsb
pop
stos
inc
mov
shrb
lods
enter
icebp
mov
out
xor
cmpsb
pushf
push
add
out
movsl
and
inc
testl
xchg
dec
pop
idivb
mov
out
jge
int
cmpsl
ds
fwait
xor
pop
lds
mov
jp
xchg
xlat
outsb
movb
cltd
xor
cmc
mov
push
and
imul
cmpsb
cltd
pop
adc
imul
xchg
aaa
fldt
fidivs
sbb
rcrb
adc
adc
outsl
push
adc
add
xor
outsl
fstpt
inc
lods
pop
movsb
lock
xor
push
xchg
dec
sahf
sbb
mov
xchg
shl
iret
repz
dec
sub
mov
bound
les
in
or
sbb
xchg
mov
sub
or
dec
movsl
add
out
xchg
push
xor
sti
std
cli
lea
popf
jg
sub
mov
jbe
cmp
mov
fimuls
das
mov
outsl
add
lock
fs
sbb
hlt
and
pop
fwait
adc
ljmp
test
test
sub
icebp
jp,pt
cwtl
aam
or
xchg
xchg
fsubl
jb
movsb
and
int
inc
shl
xchg
das
std
push
fcmovne
jb
js
in
fbld
imul
inc
leave
mov
mov
lods
cmpsb
test
cs
xchg
jge
shr
pop
jge
xor
pop
dec
inc
je
pop
jbe
jae
jecxz
arpl
pop
adc
sub
fwait
pop
imul
jo
jo
mov
aas
xchg
icebp
mov
mov
adc
or
sbb
jo
pop
or
aaa
lock
push
in
sbb
sub
test
sbb
clc
jo
and
jns
jns
mov
push
pop
sbb
cwtl
nop
xchg
xchg
insl
jne
push
pop
mov
xchg
or
lods
fimuls
mov
add
into
pop
cmp
bound
pop
rcl
jge
jno
mov
dec
ret
das
jmp
xchg
lcall
fldenv
inc
aaa
sarl
out
cs
push
leave
lods
adc
data16
.byte
